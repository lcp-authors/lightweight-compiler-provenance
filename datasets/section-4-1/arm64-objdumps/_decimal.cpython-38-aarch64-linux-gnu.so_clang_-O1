
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_decimal.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000063e8 <.init>:
    63e8:	stp	x29, x30, [sp, #-16]!
    63ec:	mov	x29, sp
    63f0:	bl	6a40 <PyFloat_FromString@plt+0x10>
    63f4:	ldp	x29, x30, [sp], #16
    63f8:	ret

Disassembly of section .plt:

0000000000006400 <memcpy@plt-0x20>:
    6400:	stp	x16, x30, [sp, #-16]!
    6404:	adrp	x16, 3f000 <PyInit__decimal@@Base+0x384ec>
    6408:	ldr	x17, [x16, #4088]
    640c:	add	x16, x16, #0xff8
    6410:	br	x17
    6414:	nop
    6418:	nop
    641c:	nop

0000000000006420 <memcpy@plt>:
    6420:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6424:	ldr	x17, [x16]
    6428:	add	x16, x16, #0x0
    642c:	br	x17

0000000000006430 <PyUnicode_FromFormat@plt>:
    6430:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6434:	ldr	x17, [x16, #8]
    6438:	add	x16, x16, #0x8
    643c:	br	x17

0000000000006440 <memmove@plt>:
    6440:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6444:	ldr	x17, [x16, #16]
    6448:	add	x16, x16, #0x10
    644c:	br	x17

0000000000006450 <PyList_New@plt>:
    6450:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6454:	ldr	x17, [x16, #24]
    6458:	add	x16, x16, #0x18
    645c:	br	x17

0000000000006460 <_PyUnicode_Ready@plt>:
    6460:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6464:	ldr	x17, [x16, #32]
    6468:	add	x16, x16, #0x20
    646c:	br	x17

0000000000006470 <PyDict_SetItemString@plt>:
    6470:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6474:	ldr	x17, [x16, #40]
    6478:	add	x16, x16, #0x28
    647c:	br	x17

0000000000006480 <strlen@plt>:
    6480:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6484:	ldr	x17, [x16, #48]
    6488:	add	x16, x16, #0x30
    648c:	br	x17

0000000000006490 <PyDict_Size@plt>:
    6490:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6494:	ldr	x17, [x16, #56]
    6498:	add	x16, x16, #0x38
    649c:	br	x17

00000000000064a0 <mbstowcs@plt>:
    64a0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    64a4:	ldr	x17, [x16, #64]
    64a8:	add	x16, x16, #0x40
    64ac:	br	x17

00000000000064b0 <raise@plt>:
    64b0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    64b4:	ldr	x17, [x16, #72]
    64b8:	add	x16, x16, #0x48
    64bc:	br	x17

00000000000064c0 <PyArg_ParseTupleAndKeywords@plt>:
    64c0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    64c4:	ldr	x17, [x16, #80]
    64c8:	add	x16, x16, #0x50
    64cc:	br	x17

00000000000064d0 <PyList_AsTuple@plt>:
    64d0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    64d4:	ldr	x17, [x16, #88]
    64d8:	add	x16, x16, #0x58
    64dc:	br	x17

00000000000064e0 <strtoll@plt>:
    64e0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    64e4:	ldr	x17, [x16, #96]
    64e8:	add	x16, x16, #0x60
    64ec:	br	x17

00000000000064f0 <PyObject_CallMethod@plt>:
    64f0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    64f4:	ldr	x17, [x16, #104]
    64f8:	add	x16, x16, #0x68
    64fc:	br	x17

0000000000006500 <PyMem_Free@plt>:
    6500:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6504:	ldr	x17, [x16, #112]
    6508:	add	x16, x16, #0x70
    650c:	br	x17

0000000000006510 <PyUnicode_FromWideChar@plt>:
    6510:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6514:	ldr	x17, [x16, #120]
    6518:	add	x16, x16, #0x78
    651c:	br	x17

0000000000006520 <PyObject_GetAttrString@plt>:
    6520:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6524:	ldr	x17, [x16, #128]
    6528:	add	x16, x16, #0x80
    652c:	br	x17

0000000000006530 <__cxa_finalize@plt>:
    6530:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6534:	ldr	x17, [x16, #136]
    6538:	add	x16, x16, #0x88
    653c:	br	x17

0000000000006540 <_PyLong_New@plt>:
    6540:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6544:	ldr	x17, [x16, #144]
    6548:	add	x16, x16, #0x90
    654c:	br	x17

0000000000006550 <fputc@plt>:
    6550:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6554:	ldr	x17, [x16, #152]
    6558:	add	x16, x16, #0x98
    655c:	br	x17

0000000000006560 <PyUnicode_AsUTF8String@plt>:
    6560:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6564:	ldr	x17, [x16, #160]
    6568:	add	x16, x16, #0xa0
    656c:	br	x17

0000000000006570 <_Py_Dealloc@plt>:
    6570:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6574:	ldr	x17, [x16, #168]
    6578:	add	x16, x16, #0xa8
    657c:	br	x17

0000000000006580 <PyErr_NoMemory@plt>:
    6580:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6584:	ldr	x17, [x16, #176]
    6588:	add	x16, x16, #0xb0
    658c:	br	x17

0000000000006590 <PyErr_SetObject@plt>:
    6590:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6594:	ldr	x17, [x16, #184]
    6598:	add	x16, x16, #0xb8
    659c:	br	x17

00000000000065a0 <__ctype_tolower_loc@plt>:
    65a0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    65a4:	ldr	x17, [x16, #192]
    65a8:	add	x16, x16, #0xc0
    65ac:	br	x17

00000000000065b0 <snprintf@plt>:
    65b0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    65b4:	ldr	x17, [x16, #200]
    65b8:	add	x16, x16, #0xc8
    65bc:	br	x17

00000000000065c0 <log10@plt>:
    65c0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    65c4:	ldr	x17, [x16, #208]
    65c8:	add	x16, x16, #0xd0
    65cc:	br	x17

00000000000065d0 <localeconv@plt>:
    65d0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    65d4:	ldr	x17, [x16, #216]
    65d8:	add	x16, x16, #0xd8
    65dc:	br	x17

00000000000065e0 <malloc@plt>:
    65e0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    65e4:	ldr	x17, [x16, #224]
    65e8:	add	x16, x16, #0xe0
    65ec:	br	x17

00000000000065f0 <PyErr_SetString@plt>:
    65f0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    65f4:	ldr	x17, [x16, #232]
    65f8:	add	x16, x16, #0xe8
    65fc:	br	x17

0000000000006600 <PyObject_IsInstance@plt>:
    6600:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6604:	ldr	x17, [x16, #240]
    6608:	add	x16, x16, #0xf0
    660c:	br	x17

0000000000006610 <memset@plt>:
    6610:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6614:	ldr	x17, [x16, #248]
    6618:	add	x16, x16, #0xf8
    661c:	br	x17

0000000000006620 <PyContextVar_Set@plt>:
    6620:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6624:	ldr	x17, [x16, #256]
    6628:	add	x16, x16, #0x100
    662c:	br	x17

0000000000006630 <PyObject_Free@plt>:
    6630:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6634:	ldr	x17, [x16, #264]
    6638:	add	x16, x16, #0x108
    663c:	br	x17

0000000000006640 <PyLong_FromSsize_t@plt>:
    6640:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6644:	ldr	x17, [x16, #272]
    6648:	add	x16, x16, #0x110
    664c:	br	x17

0000000000006650 <PyFloat_FromDouble@plt>:
    6650:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6654:	ldr	x17, [x16, #280]
    6658:	add	x16, x16, #0x118
    665c:	br	x17

0000000000006660 <PyType_Ready@plt>:
    6660:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6664:	ldr	x17, [x16, #288]
    6668:	add	x16, x16, #0x120
    666c:	br	x17

0000000000006670 <calloc@plt>:
    6670:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6674:	ldr	x17, [x16, #296]
    6678:	add	x16, x16, #0x128
    667c:	br	x17

0000000000006680 <PyLong_FromLong@plt>:
    6680:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6684:	ldr	x17, [x16, #304]
    6688:	add	x16, x16, #0x130
    668c:	br	x17

0000000000006690 <PyLong_AsSsize_t@plt>:
    6690:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6694:	ldr	x17, [x16, #312]
    6698:	add	x16, x16, #0x138
    669c:	br	x17

00000000000066a0 <_PyLong_GCD@plt>:
    66a0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    66a4:	ldr	x17, [x16, #320]
    66a8:	add	x16, x16, #0x140
    66ac:	br	x17

00000000000066b0 <PyErr_NewException@plt>:
    66b0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    66b4:	ldr	x17, [x16, #328]
    66b8:	add	x16, x16, #0x148
    66bc:	br	x17

00000000000066c0 <realloc@plt>:
    66c0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    66c4:	ldr	x17, [x16, #336]
    66c8:	add	x16, x16, #0x150
    66cc:	br	x17

00000000000066d0 <PyErr_Clear@plt>:
    66d0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    66d4:	ldr	x17, [x16, #344]
    66d8:	add	x16, x16, #0x158
    66dc:	br	x17

00000000000066e0 <PyContextVar_Get@plt>:
    66e0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    66e4:	ldr	x17, [x16, #352]
    66e8:	add	x16, x16, #0x160
    66ec:	br	x17

00000000000066f0 <PyBool_FromLong@plt>:
    66f0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    66f4:	ldr	x17, [x16, #360]
    66f8:	add	x16, x16, #0x168
    66fc:	br	x17

0000000000006700 <PyContextVar_New@plt>:
    6700:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6704:	ldr	x17, [x16, #368]
    6708:	add	x16, x16, #0x170
    670c:	br	x17

0000000000006710 <PyList_Append@plt>:
    6710:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6714:	ldr	x17, [x16, #376]
    6718:	add	x16, x16, #0x178
    671c:	br	x17

0000000000006720 <__gmon_start__@plt>:
    6720:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6724:	ldr	x17, [x16, #384]
    6728:	add	x16, x16, #0x180
    672c:	br	x17

0000000000006730 <PyObject_CallFunction@plt>:
    6730:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6734:	ldr	x17, [x16, #392]
    6738:	add	x16, x16, #0x188
    673c:	br	x17

0000000000006740 <PyTuple_New@plt>:
    6740:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6744:	ldr	x17, [x16, #400]
    6748:	add	x16, x16, #0x190
    674c:	br	x17

0000000000006750 <PyObject_GenericGetAttr@plt>:
    6750:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6754:	ldr	x17, [x16, #408]
    6758:	add	x16, x16, #0x198
    675c:	br	x17

0000000000006760 <abort@plt>:
    6760:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6764:	ldr	x17, [x16, #416]
    6768:	add	x16, x16, #0x1a0
    676c:	br	x17

0000000000006770 <Py_BuildValue@plt>:
    6770:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6774:	ldr	x17, [x16, #424]
    6778:	add	x16, x16, #0x1a8
    677c:	br	x17

0000000000006780 <PyErr_Occurred@plt>:
    6780:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6784:	ldr	x17, [x16, #432]
    6788:	add	x16, x16, #0x1b0
    678c:	br	x17

0000000000006790 <PyModule_Create2@plt>:
    6790:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6794:	ldr	x17, [x16, #440]
    6798:	add	x16, x16, #0x1b8
    679c:	br	x17

00000000000067a0 <_PyUnicode_IsWhitespace@plt>:
    67a0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    67a4:	ldr	x17, [x16, #448]
    67a8:	add	x16, x16, #0x1c0
    67ac:	br	x17

00000000000067b0 <puts@plt>:
    67b0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    67b4:	ldr	x17, [x16, #456]
    67b8:	add	x16, x16, #0x1c8
    67bc:	br	x17

00000000000067c0 <PyLong_AsLong@plt>:
    67c0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    67c4:	ldr	x17, [x16, #464]
    67c8:	add	x16, x16, #0x1d0
    67cc:	br	x17

00000000000067d0 <PyImport_ImportModule@plt>:
    67d0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    67d4:	ldr	x17, [x16, #472]
    67d8:	add	x16, x16, #0x1d8
    67dc:	br	x17

00000000000067e0 <PyObject_CallObject@plt>:
    67e0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    67e4:	ldr	x17, [x16, #480]
    67e8:	add	x16, x16, #0x1e0
    67ec:	br	x17

00000000000067f0 <PyObject_CallFunctionObjArgs@plt>:
    67f0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    67f4:	ldr	x17, [x16, #488]
    67f8:	add	x16, x16, #0x1e8
    67fc:	br	x17

0000000000006800 <strcmp@plt>:
    6800:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6804:	ldr	x17, [x16, #496]
    6808:	add	x16, x16, #0x1f0
    680c:	br	x17

0000000000006810 <PyDict_GetItemString@plt>:
    6810:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6814:	ldr	x17, [x16, #504]
    6818:	add	x16, x16, #0x1f8
    681c:	br	x17

0000000000006820 <__ctype_b_loc@plt>:
    6820:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6824:	ldr	x17, [x16, #512]
    6828:	add	x16, x16, #0x200
    682c:	br	x17

0000000000006830 <PyUnicode_CompareWithASCIIString@plt>:
    6830:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6834:	ldr	x17, [x16, #520]
    6838:	add	x16, x16, #0x208
    683c:	br	x17

0000000000006840 <PyUnicode_DecodeUTF8@plt>:
    6840:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6844:	ldr	x17, [x16, #528]
    6848:	add	x16, x16, #0x210
    684c:	br	x17

0000000000006850 <_PyUnicode_ToDecimalDigit@plt>:
    6850:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6854:	ldr	x17, [x16, #536]
    6858:	add	x16, x16, #0x218
    685c:	br	x17

0000000000006860 <PyFloat_AsDouble@plt>:
    6860:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6864:	ldr	x17, [x16, #544]
    6868:	add	x16, x16, #0x220
    686c:	br	x17

0000000000006870 <PyObject_IsTrue@plt>:
    6870:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6874:	ldr	x17, [x16, #552]
    6878:	add	x16, x16, #0x228
    687c:	br	x17

0000000000006880 <PyArg_ParseTuple@plt>:
    6880:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6884:	ldr	x17, [x16, #560]
    6888:	add	x16, x16, #0x230
    688c:	br	x17

0000000000006890 <free@plt>:
    6890:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6894:	ldr	x17, [x16, #568]
    6898:	add	x16, x16, #0x238
    689c:	br	x17

00000000000068a0 <PyUnicode_Compare@plt>:
    68a0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    68a4:	ldr	x17, [x16, #576]
    68a8:	add	x16, x16, #0x240
    68ac:	br	x17

00000000000068b0 <PyList_Size@plt>:
    68b0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    68b4:	ldr	x17, [x16, #584]
    68b8:	add	x16, x16, #0x248
    68bc:	br	x17

00000000000068c0 <PyDict_New@plt>:
    68c0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    68c4:	ldr	x17, [x16, #592]
    68c8:	add	x16, x16, #0x250
    68cc:	br	x17

00000000000068d0 <fwrite@plt>:
    68d0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    68d4:	ldr	x17, [x16, #600]
    68d8:	add	x16, x16, #0x258
    68dc:	br	x17

00000000000068e0 <PyLong_FromUnsignedLong@plt>:
    68e0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    68e4:	ldr	x17, [x16, #608]
    68e8:	add	x16, x16, #0x260
    68ec:	br	x17

00000000000068f0 <_PyObject_New@plt>:
    68f0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    68f4:	ldr	x17, [x16, #616]
    68f8:	add	x16, x16, #0x268
    68fc:	br	x17

0000000000006900 <PyUnicode_FromString@plt>:
    6900:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6904:	ldr	x17, [x16, #624]
    6908:	add	x16, x16, #0x270
    690c:	br	x17

0000000000006910 <PyModule_AddStringConstant@plt>:
    6910:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6914:	ldr	x17, [x16, #632]
    6918:	add	x16, x16, #0x278
    691c:	br	x17

0000000000006920 <PyUnicode_InternFromString@plt>:
    6920:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6924:	ldr	x17, [x16, #640]
    6928:	add	x16, x16, #0x280
    692c:	br	x17

0000000000006930 <PyModule_AddObject@plt>:
    6930:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6934:	ldr	x17, [x16, #648]
    6938:	add	x16, x16, #0x288
    693c:	br	x17

0000000000006940 <PyDict_SetItem@plt>:
    6940:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6944:	ldr	x17, [x16, #656]
    6948:	add	x16, x16, #0x290
    694c:	br	x17

0000000000006950 <PyObject_GenericSetAttr@plt>:
    6950:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6954:	ldr	x17, [x16, #664]
    6958:	add	x16, x16, #0x298
    695c:	br	x17

0000000000006960 <PyType_IsSubtype@plt>:
    6960:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6964:	ldr	x17, [x16, #672]
    6968:	add	x16, x16, #0x2a0
    696c:	br	x17

0000000000006970 <PyUnicode_AsUTF8AndSize@plt>:
    6970:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6974:	ldr	x17, [x16, #680]
    6978:	add	x16, x16, #0x2a8
    697c:	br	x17

0000000000006980 <PyTuple_Size@plt>:
    6980:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6984:	ldr	x17, [x16, #688]
    6988:	add	x16, x16, #0x2b0
    698c:	br	x17

0000000000006990 <PyComplex_AsCComplex@plt>:
    6990:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6994:	ldr	x17, [x16, #696]
    6998:	add	x16, x16, #0x2b8
    699c:	br	x17

00000000000069a0 <PyComplex_FromDoubles@plt>:
    69a0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    69a4:	ldr	x17, [x16, #704]
    69a8:	add	x16, x16, #0x2c0
    69ac:	br	x17

00000000000069b0 <PyErr_Format@plt>:
    69b0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    69b4:	ldr	x17, [x16, #712]
    69b8:	add	x16, x16, #0x2c8
    69bc:	br	x17

00000000000069c0 <__errno_location@plt>:
    69c0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    69c4:	ldr	x17, [x16, #720]
    69c8:	add	x16, x16, #0x2d0
    69cc:	br	x17

00000000000069d0 <PyList_GetItem@plt>:
    69d0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    69d4:	ldr	x17, [x16, #728]
    69d8:	add	x16, x16, #0x2d8
    69dc:	br	x17

00000000000069e0 <PyMem_Malloc@plt>:
    69e0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    69e4:	ldr	x17, [x16, #736]
    69e8:	add	x16, x16, #0x2e0
    69ec:	br	x17

00000000000069f0 <PyUnicode_New@plt>:
    69f0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    69f4:	ldr	x17, [x16, #744]
    69f8:	add	x16, x16, #0x2e8
    69fc:	br	x17

0000000000006a00 <PyTuple_Pack@plt>:
    6a00:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6a04:	ldr	x17, [x16, #752]
    6a08:	add	x16, x16, #0x2f0
    6a0c:	br	x17

0000000000006a10 <fprintf@plt>:
    6a10:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6a14:	ldr	x17, [x16, #760]
    6a18:	add	x16, x16, #0x2f8
    6a1c:	br	x17

0000000000006a20 <PyDict_GetItemWithError@plt>:
    6a20:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6a24:	ldr	x17, [x16, #768]
    6a28:	add	x16, x16, #0x300
    6a2c:	br	x17

0000000000006a30 <PyFloat_FromString@plt>:
    6a30:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    6a34:	ldr	x17, [x16, #776]
    6a38:	add	x16, x16, #0x308
    6a3c:	br	x17

Disassembly of section .text:

0000000000006a40 <PyInit__decimal@@Base-0xd4>:
    6a40:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    6a44:	ldr	x0, [x0, #3984]
    6a48:	cbz	x0, 6a50 <PyFloat_FromString@plt+0x20>
    6a4c:	b	6720 <__gmon_start__@plt>
    6a50:	ret
    6a54:	nop
    6a58:	adrp	x0, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6a5c:	add	x0, x0, #0x570
    6a60:	adrp	x1, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6a64:	add	x1, x1, #0x570
    6a68:	cmp	x1, x0
    6a6c:	b.eq	6a84 <PyFloat_FromString@plt+0x54>  // b.none
    6a70:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
    6a74:	ldr	x1, [x1, #3856]
    6a78:	cbz	x1, 6a84 <PyFloat_FromString@plt+0x54>
    6a7c:	mov	x16, x1
    6a80:	br	x16
    6a84:	ret
    6a88:	adrp	x0, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6a8c:	add	x0, x0, #0x570
    6a90:	adrp	x1, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6a94:	add	x1, x1, #0x570
    6a98:	sub	x1, x1, x0
    6a9c:	lsr	x2, x1, #63
    6aa0:	add	x1, x2, x1, asr #3
    6aa4:	cmp	xzr, x1, asr #1
    6aa8:	asr	x1, x1, #1
    6aac:	b.eq	6ac4 <PyFloat_FromString@plt+0x94>  // b.none
    6ab0:	adrp	x2, 3f000 <PyInit__decimal@@Base+0x384ec>
    6ab4:	ldr	x2, [x2, #4056]
    6ab8:	cbz	x2, 6ac4 <PyFloat_FromString@plt+0x94>
    6abc:	mov	x16, x2
    6ac0:	br	x16
    6ac4:	ret
    6ac8:	stp	x29, x30, [sp, #-32]!
    6acc:	mov	x29, sp
    6ad0:	str	x19, [sp, #16]
    6ad4:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6ad8:	ldrb	w0, [x19, #1392]
    6adc:	cbnz	w0, 6b04 <PyFloat_FromString@plt+0xd4>
    6ae0:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    6ae4:	ldr	x0, [x0, #3896]
    6ae8:	cbz	x0, 6af8 <PyFloat_FromString@plt+0xc8>
    6aec:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    6af0:	ldr	x0, [x0, #784]
    6af4:	bl	6530 <__cxa_finalize@plt>
    6af8:	bl	6a58 <PyFloat_FromString@plt+0x28>
    6afc:	mov	w0, #0x1                   	// #1
    6b00:	strb	w0, [x19, #1392]
    6b04:	ldr	x19, [sp, #16]
    6b08:	ldp	x29, x30, [sp], #32
    6b0c:	ret
    6b10:	b	6a88 <PyFloat_FromString@plt+0x58>

0000000000006b14 <PyInit__decimal@@Base>:
    6b14:	stp	x29, x30, [sp, #-96]!
    6b18:	stp	x28, x27, [sp, #16]
    6b1c:	stp	x26, x25, [sp, #32]
    6b20:	stp	x24, x23, [sp, #48]
    6b24:	stp	x22, x21, [sp, #64]
    6b28:	stp	x20, x19, [sp, #80]
    6b2c:	mov	x29, sp
    6b30:	adrp	x11, 3f000 <PyInit__decimal@@Base+0x384ec>
    6b34:	adrp	x13, 3f000 <PyInit__decimal@@Base+0x384ec>
    6b38:	adrp	x17, 3f000 <PyInit__decimal@@Base+0x384ec>
    6b3c:	ldr	x11, [x11, #4064]
    6b40:	ldr	x13, [x13, #3944]
    6b44:	ldr	x17, [x17, #3888]
    6b48:	adrp	x9, 7000 <PyInit__decimal@@Base+0x4ec>
    6b4c:	adrp	x15, 17000 <PyInit__decimal@@Base+0x104ec>
    6b50:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6b54:	add	x9, x9, #0x434
    6b58:	adrp	x10, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6b5c:	adrp	x12, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6b60:	adrp	x14, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6b64:	add	x15, x15, #0xa44
    6b68:	adrp	x16, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6b6c:	mov	w0, #0x4                   	// #4
    6b70:	str	x9, [x8, #1336]
    6b74:	str	x11, [x10, #1352]
    6b78:	str	x13, [x12, #1360]
    6b7c:	str	x15, [x14, #1368]
    6b80:	str	x17, [x16, #1376]
    6b84:	bl	13768 <PyInit__decimal@@Base+0xcc54>
    6b88:	adrp	x0, 2c000 <PyInit__decimal@@Base+0x254ec>
    6b8c:	add	x0, x0, #0xd8c
    6b90:	mov	x1, xzr
    6b94:	bl	6700 <PyContextVar_New@plt>
    6b98:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6b9c:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6ba0:	adrp	x26, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6ba4:	adrp	x28, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6ba8:	adrp	x27, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6bac:	str	x0, [x8, #1400]
    6bb0:	cbz	x0, 7080 <PyInit__decimal@@Base+0x56c>
    6bb4:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    6bb8:	ldr	x8, [x8, #4040]
    6bbc:	adrp	x10, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6bc0:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    6bc4:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    6bc8:	ldr	x8, [x8, #96]
    6bcc:	add	x1, x1, #0xd9c
    6bd0:	ldr	x9, [x8, #16]
    6bd4:	str	x9, [x10, #1408]
    6bd8:	ldr	x9, [x8, #232]
    6bdc:	adrp	x10, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6be0:	str	x9, [x10, #1416]
    6be4:	ldr	x8, [x8, #40]
    6be8:	ldr	x0, [x0, #3864]
    6bec:	adrp	x10, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6bf0:	str	x8, [x10, #1424]
    6bf4:	ldr	x9, [x0, #96]
    6bf8:	ldr	x8, [x9, #64]
    6bfc:	adrp	x9, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6c00:	str	x8, [x9, #1432]
    6c04:	bl	7438 <PyInit__decimal@@Base+0x924>
    6c08:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6c0c:	str	x0, [x8, #1440]
    6c10:	cbz	x0, 7080 <PyInit__decimal@@Base+0x56c>
    6c14:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    6c18:	ldr	x0, [x0, #4040]
    6c1c:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    6c20:	add	x1, x1, #0xdad
    6c24:	bl	7438 <PyInit__decimal@@Base+0x924>
    6c28:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6c2c:	str	x0, [x8, #1448]
    6c30:	cbz	x0, 7080 <PyInit__decimal@@Base+0x56c>
    6c34:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    6c38:	ldr	x8, [x8, #4032]
    6c3c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    6c40:	add	x0, x0, #0x318
    6c44:	adrp	x9, 40000 <PyInit__decimal@@Base+0x394ec>
    6c48:	adrp	x10, 40000 <PyInit__decimal@@Base+0x394ec>
    6c4c:	adrp	x11, 40000 <PyInit__decimal@@Base+0x394ec>
    6c50:	str	x8, [x0, #256]
    6c54:	str	x8, [x9, #1464]
    6c58:	str	x8, [x10, #1880]
    6c5c:	str	x8, [x11, #2296]
    6c60:	bl	6660 <PyType_Ready@plt>
    6c64:	tbnz	w0, #31, 7080 <PyInit__decimal@@Base+0x56c>
    6c68:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    6c6c:	add	x0, x0, #0x4b8
    6c70:	bl	6660 <PyType_Ready@plt>
    6c74:	tbnz	w0, #31, 7080 <PyInit__decimal@@Base+0x56c>
    6c78:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    6c7c:	add	x0, x0, #0x7f8
    6c80:	bl	6660 <PyType_Ready@plt>
    6c84:	tbnz	w0, #31, 7080 <PyInit__decimal@@Base+0x56c>
    6c88:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    6c8c:	add	x0, x0, #0x658
    6c90:	bl	6660 <PyType_Ready@plt>
    6c94:	tbnz	w0, #31, 7080 <PyInit__decimal@@Base+0x56c>
    6c98:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
    6c9c:	add	x0, x0, #0x53a
    6ca0:	bl	6900 <PyUnicode_FromString@plt>
    6ca4:	mov	x20, x0
    6ca8:	cbz	x0, 7084 <PyInit__decimal@@Base+0x570>
    6cac:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    6cb0:	ldr	x0, [x8, #1056]
    6cb4:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    6cb8:	add	x1, x1, #0xdb8
    6cbc:	mov	x2, x20
    6cc0:	bl	6470 <PyDict_SetItemString@plt>
    6cc4:	tbnz	w0, #31, 7084 <PyInit__decimal@@Base+0x570>
    6cc8:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    6ccc:	ldr	x0, [x8, #1472]
    6cd0:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    6cd4:	add	x1, x1, #0xdb8
    6cd8:	mov	x2, x20
    6cdc:	bl	6470 <PyDict_SetItemString@plt>
    6ce0:	tbnz	w0, #31, 7084 <PyInit__decimal@@Base+0x570>
    6ce4:	mov	x0, x20
    6ce8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    6cec:	adrp	x0, 2c000 <PyInit__decimal@@Base+0x254ec>
    6cf0:	add	x0, x0, #0xdc3
    6cf4:	bl	67d0 <PyImport_ImportModule@plt>
    6cf8:	mov	x25, x0
    6cfc:	cbz	x0, 71b0 <PyInit__decimal@@Base+0x69c>
    6d00:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    6d04:	add	x1, x1, #0xdcb
    6d08:	mov	x0, x25
    6d0c:	bl	6520 <PyObject_GetAttrString@plt>
    6d10:	mov	x24, x0
    6d14:	cbz	x0, 7194 <PyInit__decimal@@Base+0x680>
    6d18:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    6d1c:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    6d20:	adrp	x3, 40000 <PyInit__decimal@@Base+0x394ec>
    6d24:	add	x1, x1, #0xdd2
    6d28:	add	x2, x2, #0x58f
    6d2c:	add	x3, x3, #0x318
    6d30:	mov	x0, x24
    6d34:	bl	64f0 <PyObject_CallMethod@plt>
    6d38:	cbz	x0, 7194 <PyInit__decimal@@Base+0x680>
    6d3c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    6d40:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    6d44:	add	x1, x1, #0xddb
    6d48:	mov	x0, x25
    6d4c:	bl	6520 <PyObject_GetAttrString@plt>
    6d50:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6d54:	str	x0, [x8, #1456]
    6d58:	cbz	x0, 7194 <PyInit__decimal@@Base+0x680>
    6d5c:	mov	x0, x25
    6d60:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    6d64:	mov	x0, x24
    6d68:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    6d6c:	adrp	x0, 2c000 <PyInit__decimal@@Base+0x254ec>
    6d70:	add	x0, x0, #0xde4
    6d74:	bl	67d0 <PyImport_ImportModule@plt>
    6d78:	mov	x22, x0
    6d7c:	cbz	x0, 71d0 <PyInit__decimal@@Base+0x6bc>
    6d80:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    6d84:	adrp	x2, 2c000 <PyInit__decimal@@Base+0x254ec>
    6d88:	adrp	x3, 2c000 <PyInit__decimal@@Base+0x254ec>
    6d8c:	adrp	x4, 2c000 <PyInit__decimal@@Base+0x254ec>
    6d90:	add	x1, x1, #0xdf0
    6d94:	add	x2, x2, #0xdfb
    6d98:	add	x3, x3, #0xe00
    6d9c:	add	x4, x4, #0xe0d
    6da0:	mov	x0, x22
    6da4:	bl	64f0 <PyObject_CallMethod@plt>
    6da8:	str	x0, [x19, #1464]
    6dac:	cbz	x0, 71d0 <PyInit__decimal@@Base+0x6bc>
    6db0:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
    6db4:	add	x0, x0, #0x53a
    6db8:	bl	6900 <PyUnicode_FromString@plt>
    6dbc:	mov	x20, x0
    6dc0:	cbz	x0, 71d4 <PyInit__decimal@@Base+0x6c0>
    6dc4:	ldr	x8, [x19, #1464]
    6dc8:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    6dcc:	add	x1, x1, #0xdb8
    6dd0:	mov	x2, x20
    6dd4:	ldr	x0, [x8, #264]
    6dd8:	bl	6470 <PyDict_SetItemString@plt>
    6ddc:	tbnz	w0, #31, 71d4 <PyInit__decimal@@Base+0x6c0>
    6de0:	mov	x0, x20
    6de4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    6de8:	adrp	x0, 2c000 <PyInit__decimal@@Base+0x254ec>
    6dec:	add	x0, x0, #0xe22
    6df0:	bl	67d0 <PyImport_ImportModule@plt>
    6df4:	mov	x23, x0
    6df8:	cbz	x0, 71e8 <PyInit__decimal@@Base+0x6d4>
    6dfc:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    6e00:	add	x1, x1, #0xe32
    6e04:	mov	x0, x23
    6e08:	bl	6520 <PyObject_GetAttrString@plt>
    6e0c:	mov	x21, x0
    6e10:	cbz	x0, 71e0 <PyInit__decimal@@Base+0x6cc>
    6e14:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    6e18:	ldr	x0, [x0, #4000]
    6e1c:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    6e20:	adrp	x2, 2c000 <PyInit__decimal@@Base+0x254ec>
    6e24:	adrp	x3, 40000 <PyInit__decimal@@Base+0x394ec>
    6e28:	add	x1, x1, #0xe41
    6e2c:	add	x2, x2, #0xe49
    6e30:	add	x3, x3, #0x7f8
    6e34:	mov	x4, x21
    6e38:	bl	6730 <PyObject_CallFunction@plt>
    6e3c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6e40:	str	x0, [x8, #1472]
    6e44:	cbz	x0, 71e0 <PyInit__decimal@@Base+0x6cc>
    6e48:	mov	x0, x22
    6e4c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    6e50:	mov	x0, x23
    6e54:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    6e58:	mov	x0, x21
    6e5c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    6e60:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    6e64:	add	x0, x0, #0x998
    6e68:	mov	w1, #0x3f5                 	// #1013
    6e6c:	bl	6790 <PyModule_Create2@plt>
    6e70:	mov	x19, x0
    6e74:	cbz	x0, 7414 <PyInit__decimal@@Base+0x900>
    6e78:	adrp	x20, 40000 <PyInit__decimal@@Base+0x394ec>
    6e7c:	add	x20, x20, #0x318
    6e80:	mov	x0, x20
    6e84:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    6e88:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    6e8c:	add	x1, x1, #0x8e5
    6e90:	mov	x0, x19
    6e94:	mov	x2, x20
    6e98:	bl	6930 <PyModule_AddObject@plt>
    6e9c:	tbnz	w0, #31, 7414 <PyInit__decimal@@Base+0x900>
    6ea0:	adrp	x20, 40000 <PyInit__decimal@@Base+0x394ec>
    6ea4:	add	x20, x20, #0x4b8
    6ea8:	mov	x0, x20
    6eac:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    6eb0:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    6eb4:	add	x1, x1, #0x6eb
    6eb8:	mov	x0, x19
    6ebc:	mov	x2, x20
    6ec0:	bl	6930 <PyModule_AddObject@plt>
    6ec4:	tbnz	w0, #31, 7414 <PyInit__decimal@@Base+0x900>
    6ec8:	adrp	x20, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6ecc:	ldr	x0, [x20, #1464]
    6ed0:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    6ed4:	ldr	x2, [x20, #1464]
    6ed8:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    6edc:	add	x1, x1, #0xe00
    6ee0:	mov	x0, x19
    6ee4:	bl	6930 <PyModule_AddObject@plt>
    6ee8:	tbnz	w0, #31, 7414 <PyInit__decimal@@Base+0x900>
    6eec:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    6ef0:	ldr	x8, [x8, #3960]
    6ef4:	adrp	x0, 2c000 <PyInit__decimal@@Base+0x254ec>
    6ef8:	add	x0, x0, #0xe54
    6efc:	mov	x2, xzr
    6f00:	ldr	x1, [x8]
    6f04:	bl	66b0 <PyErr_NewException@plt>
    6f08:	adrp	x22, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6f0c:	str	x0, [x22, #1480]
    6f10:	cbz	x0, 7414 <PyInit__decimal@@Base+0x900>
    6f14:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    6f18:	ldr	x2, [x22, #1480]
    6f1c:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    6f20:	add	x1, x1, #0xe5c
    6f24:	mov	x0, x19
    6f28:	bl	6930 <PyModule_AddObject@plt>
    6f2c:	tbnz	w0, #31, 7414 <PyInit__decimal@@Base+0x900>
    6f30:	mov	w0, #0x9                   	// #9
    6f34:	bl	6740 <PyTuple_New@plt>
    6f38:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    6f3c:	str	x0, [x8, #1488]
    6f40:	cbz	x0, 7414 <PyInit__decimal@@Base+0x900>
    6f44:	adrp	x23, 40000 <PyInit__decimal@@Base+0x394ec>
    6f48:	adrp	x21, 40000 <PyInit__decimal@@Base+0x394ec>
    6f4c:	adrp	x25, 40000 <PyInit__decimal@@Base+0x394ec>
    6f50:	add	x23, x23, #0xb18
    6f54:	mov	w24, #0xb                   	// #11
    6f58:	add	x21, x21, #0xad8
    6f5c:	add	x25, x25, #0xab8
    6f60:	ldur	w8, [x23, #-8]
    6f64:	cmp	w8, #0x7ff
    6f68:	b.gt	6f8c <PyInit__decimal@@Base+0x478>
    6f6c:	cmp	w8, #0x4
    6f70:	b.eq	6fb4 <PyInit__decimal@@Base+0x4a0>  // b.none
    6f74:	cmp	w8, #0x400
    6f78:	b.ne	6fdc <PyInit__decimal@@Base+0x4c8>  // b.any
    6f7c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    6f80:	ldr	x1, [x22, #1480]
    6f84:	ldr	x8, [x8, #3936]
    6f88:	b	6fc0 <PyInit__decimal@@Base+0x4ac>
    6f8c:	cmp	w8, #0x800
    6f90:	b.eq	6fc8 <PyInit__decimal@@Base+0x4b4>  // b.none
    6f94:	cmp	w8, #0x4, lsl #12
    6f98:	b.ne	6fdc <PyInit__decimal@@Base+0x4c8>  // b.any
    6f9c:	ldr	x1, [x25, #32]
    6fa0:	ldr	x2, [x25, #64]
    6fa4:	ldr	x3, [x25]
    6fa8:	mov	w0, #0x3                   	// #3
    6fac:	bl	6a00 <PyTuple_Pack@plt>
    6fb0:	b	6fe8 <PyInit__decimal@@Base+0x4d4>
    6fb4:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    6fb8:	ldr	x1, [x22, #1480]
    6fbc:	ldr	x8, [x8, #4016]
    6fc0:	ldr	x2, [x8]
    6fc4:	b	6fd0 <PyInit__decimal@@Base+0x4bc>
    6fc8:	ldr	x1, [x21]
    6fcc:	ldr	x2, [x21, #32]
    6fd0:	mov	w0, #0x2                   	// #2
    6fd4:	bl	6a00 <PyTuple_Pack@plt>
    6fd8:	b	6fe8 <PyInit__decimal@@Base+0x4d4>
    6fdc:	ldr	x1, [x22, #1480]
    6fe0:	mov	w0, #0x1                   	// #1
    6fe4:	bl	6a00 <PyTuple_Pack@plt>
    6fe8:	mov	x20, x0
    6fec:	cbz	x0, 7418 <PyInit__decimal@@Base+0x904>
    6ff0:	ldur	x0, [x23, #-16]
    6ff4:	mov	x1, x20
    6ff8:	mov	x2, xzr
    6ffc:	bl	66b0 <PyErr_NewException@plt>
    7000:	str	x0, [x23]
    7004:	cbz	x0, 7414 <PyInit__decimal@@Base+0x900>
    7008:	mov	x0, x20
    700c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7010:	ldr	x0, [x23]
    7014:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    7018:	ldur	x1, [x23, #-24]
    701c:	ldr	x2, [x23]
    7020:	mov	x0, x19
    7024:	bl	6930 <PyModule_AddObject@plt>
    7028:	tbnz	w0, #31, 7414 <PyInit__decimal@@Base+0x900>
    702c:	ldr	x0, [x23]
    7030:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    7034:	adrp	x9, 42000 <PyInit__decimal@@Base+0x3b4ec>
    7038:	ldr	x8, [x23], #-32
    703c:	ldr	x9, [x9, #1488]
    7040:	sub	x10, x24, #0x3
    7044:	sub	x11, x24, #0x1
    7048:	cmp	x10, #0x0
    704c:	str	x8, [x9, x24, lsl #3]
    7050:	mov	x24, x11
    7054:	b.gt	6f60 <PyInit__decimal@@Base+0x44c>
    7058:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    705c:	adrp	x21, 40000 <PyInit__decimal@@Base+0x394ec>
    7060:	add	x8, x8, #0xb58
    7064:	ldr	x9, [x21, #2584]
    7068:	ldr	x10, [x8, #8]
    706c:	str	x9, [x8]
    7070:	cbz	x10, 7284 <PyInit__decimal@@Base+0x770>
    7074:	adrp	x22, 40000 <PyInit__decimal@@Base+0x394ec>
    7078:	add	x22, x22, #0xb80
    707c:	b	7204 <PyInit__decimal@@Base+0x6f0>
    7080:	mov	x20, xzr
    7084:	mov	x21, xzr
    7088:	mov	x23, xzr
    708c:	mov	x22, xzr
    7090:	mov	x24, xzr
    7094:	mov	x25, xzr
    7098:	mov	x19, xzr
    709c:	cbz	x20, 70a8 <PyInit__decimal@@Base+0x594>
    70a0:	mov	x0, x20
    70a4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    70a8:	cbz	x25, 70b4 <PyInit__decimal@@Base+0x5a0>
    70ac:	mov	x0, x25
    70b0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    70b4:	adrp	x20, 42000 <PyInit__decimal@@Base+0x3b4ec>
    70b8:	cbz	x24, 70c4 <PyInit__decimal@@Base+0x5b0>
    70bc:	mov	x0, x24
    70c0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    70c4:	ldr	x0, [x20, #1456]
    70c8:	cbz	x0, 70d4 <PyInit__decimal@@Base+0x5c0>
    70cc:	str	xzr, [x20, #1456]
    70d0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    70d4:	cbz	x22, 70e0 <PyInit__decimal@@Base+0x5cc>
    70d8:	mov	x0, x22
    70dc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    70e0:	cbz	x23, 70ec <PyInit__decimal@@Base+0x5d8>
    70e4:	mov	x0, x23
    70e8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    70ec:	cbz	x21, 70f8 <PyInit__decimal@@Base+0x5e4>
    70f0:	mov	x0, x21
    70f4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    70f8:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    70fc:	ldr	x0, [x8, #1488]
    7100:	cbz	x0, 710c <PyInit__decimal@@Base+0x5f8>
    7104:	str	xzr, [x8, #1488]
    7108:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    710c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    7110:	ldr	x0, [x8, #1464]
    7114:	adrp	x20, 42000 <PyInit__decimal@@Base+0x3b4ec>
    7118:	cbz	x0, 7124 <PyInit__decimal@@Base+0x610>
    711c:	str	xzr, [x8, #1464]
    7120:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7124:	ldr	x0, [x26, #1496]
    7128:	cbz	x0, 7134 <PyInit__decimal@@Base+0x620>
    712c:	str	xzr, [x26, #1496]
    7130:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7134:	ldr	x0, [x28, #1504]
    7138:	cbz	x0, 7144 <PyInit__decimal@@Base+0x630>
    713c:	str	xzr, [x28, #1504]
    7140:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7144:	ldr	x0, [x27, #1512]
    7148:	cbz	x0, 7154 <PyInit__decimal@@Base+0x640>
    714c:	str	xzr, [x27, #1512]
    7150:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7154:	ldr	x0, [x20, #1400]
    7158:	cbz	x0, 7164 <PyInit__decimal@@Base+0x650>
    715c:	str	xzr, [x20, #1400]
    7160:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7164:	cbz	x19, 7174 <PyInit__decimal@@Base+0x660>
    7168:	mov	x0, x19
    716c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7170:	mov	x19, xzr
    7174:	mov	x0, x19
    7178:	ldp	x20, x19, [sp, #80]
    717c:	ldp	x22, x21, [sp, #64]
    7180:	ldp	x24, x23, [sp, #48]
    7184:	ldp	x26, x25, [sp, #32]
    7188:	ldp	x28, x27, [sp, #16]
    718c:	ldp	x29, x30, [sp], #96
    7190:	ret
    7194:	mov	x20, xzr
    7198:	mov	x21, xzr
    719c:	mov	x23, xzr
    71a0:	mov	x22, xzr
    71a4:	mov	x19, xzr
    71a8:	cbnz	x20, 70a0 <PyInit__decimal@@Base+0x58c>
    71ac:	b	70a8 <PyInit__decimal@@Base+0x594>
    71b0:	mov	x20, xzr
    71b4:	mov	x21, xzr
    71b8:	mov	x23, xzr
    71bc:	mov	x22, xzr
    71c0:	mov	x24, xzr
    71c4:	mov	x19, xzr
    71c8:	cbnz	x20, 70a0 <PyInit__decimal@@Base+0x58c>
    71cc:	b	70a8 <PyInit__decimal@@Base+0x594>
    71d0:	mov	x20, xzr
    71d4:	mov	x21, xzr
    71d8:	mov	x23, xzr
    71dc:	b	7090 <PyInit__decimal@@Base+0x57c>
    71e0:	mov	x20, xzr
    71e4:	b	7090 <PyInit__decimal@@Base+0x57c>
    71e8:	mov	x20, xzr
    71ec:	mov	x21, xzr
    71f0:	b	7090 <PyInit__decimal@@Base+0x57c>
    71f4:	mov	w8, #0x2                   	// #2
    71f8:	cbnz	w8, 7414 <PyInit__decimal@@Base+0x900>
    71fc:	ldr	x8, [x22], #32
    7200:	cbz	x8, 7284 <PyInit__decimal@@Base+0x770>
    7204:	ldur	w8, [x22, #-16]
    7208:	ldr	x1, [x21, #2584]
    720c:	cmp	w8, #0x10
    7210:	b.ne	722c <PyInit__decimal@@Base+0x718>  // b.any
    7214:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    7218:	ldr	x8, [x8, #4016]
    721c:	mov	w0, #0x2                   	// #2
    7220:	ldr	x2, [x8]
    7224:	bl	6a00 <PyTuple_Pack@plt>
    7228:	b	7234 <PyInit__decimal@@Base+0x720>
    722c:	mov	w0, #0x1                   	// #1
    7230:	bl	6a00 <PyTuple_Pack@plt>
    7234:	mov	x20, x0
    7238:	cbz	x0, 71f4 <PyInit__decimal@@Base+0x6e0>
    723c:	ldur	x0, [x22, #-24]
    7240:	mov	x1, x20
    7244:	mov	x2, xzr
    7248:	bl	66b0 <PyErr_NewException@plt>
    724c:	stur	x0, [x22, #-8]
    7250:	cbz	x0, 71f4 <PyInit__decimal@@Base+0x6e0>
    7254:	mov	x0, x20
    7258:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    725c:	ldur	x0, [x22, #-8]
    7260:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    7264:	ldur	x1, [x22, #-32]
    7268:	ldur	x2, [x22, #-8]
    726c:	mov	x0, x19
    7270:	bl	6930 <PyModule_AddObject@plt>
    7274:	lsr	w8, w0, #30
    7278:	and	w8, w8, #0x2
    727c:	cbz	w8, 71fc <PyInit__decimal@@Base+0x6e8>
    7280:	b	7414 <PyInit__decimal@@Base+0x900>
    7284:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    7288:	add	x0, x0, #0x4b8
    728c:	mov	x1, xzr
    7290:	bl	67e0 <PyObject_CallObject@plt>
    7294:	str	x0, [x26, #1496]
    7298:	cbz	x0, 7414 <PyInit__decimal@@Base+0x900>
    729c:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    72a0:	ldr	x2, [x26, #1496]
    72a4:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    72a8:	add	x1, x1, #0xe6d
    72ac:	mov	x0, x19
    72b0:	bl	6930 <PyModule_AddObject@plt>
    72b4:	tbnz	w0, #31, 7414 <PyInit__decimal@@Base+0x900>
    72b8:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    72bc:	ldr	x20, [x20, #4024]
    72c0:	mov	x0, x20
    72c4:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    72c8:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    72cc:	add	x1, x1, #0xe7c
    72d0:	mov	x0, x19
    72d4:	mov	x2, x20
    72d8:	bl	6930 <PyModule_AddObject@plt>
    72dc:	tbnz	w0, #31, 7414 <PyInit__decimal@@Base+0x900>
    72e0:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    72e4:	add	x0, x0, #0x4b8
    72e8:	mov	x1, xzr
    72ec:	bl	67e0 <PyObject_CallObject@plt>
    72f0:	str	x0, [x28, #1504]
    72f4:	cbz	x0, 7414 <PyInit__decimal@@Base+0x900>
    72f8:	bl	74f0 <PyInit__decimal@@Base+0x9dc>
    72fc:	ldr	x0, [x28, #1504]
    7300:	mov	x20, x28
    7304:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    7308:	ldr	x2, [x28, #1504]
    730c:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    7310:	add	x1, x1, #0xe89
    7314:	mov	x0, x19
    7318:	bl	6930 <PyModule_AddObject@plt>
    731c:	tbnz	w0, #31, 7414 <PyInit__decimal@@Base+0x900>
    7320:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    7324:	add	x0, x0, #0x4b8
    7328:	mov	x1, xzr
    732c:	bl	67e0 <PyObject_CallObject@plt>
    7330:	str	x0, [x27, #1512]
    7334:	cbz	x0, 7414 <PyInit__decimal@@Base+0x900>
    7338:	bl	7530 <PyInit__decimal@@Base+0xa1c>
    733c:	ldr	x0, [x27, #1512]
    7340:	mov	x20, x27
    7344:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    7348:	ldr	x2, [x27, #1512]
    734c:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    7350:	add	x1, x1, #0xe96
    7354:	mov	x0, x19
    7358:	bl	6930 <PyModule_AddObject@plt>
    735c:	tbnz	w0, #31, 7414 <PyInit__decimal@@Base+0x900>
    7360:	adrp	x21, 3f000 <PyInit__decimal@@Base+0x384ec>
    7364:	add	x21, x21, #0xb28
    7368:	ldur	x0, [x21, #-8]
    736c:	bl	6640 <PyLong_FromSsize_t@plt>
    7370:	mov	x20, x0
    7374:	cbz	x0, 7418 <PyInit__decimal@@Base+0x904>
    7378:	ldur	x1, [x21, #-16]
    737c:	mov	x0, x19
    7380:	mov	x2, x20
    7384:	bl	6930 <PyModule_AddObject@plt>
    7388:	tbnz	w0, #31, 7418 <PyInit__decimal@@Base+0x904>
    738c:	ldr	x8, [x21], #16
    7390:	cbnz	x8, 7368 <PyInit__decimal@@Base+0x854>
    7394:	adrp	x21, 42000 <PyInit__decimal@@Base+0x3b4ec>
    7398:	adrp	x22, 42000 <PyInit__decimal@@Base+0x3b4ec>
    739c:	mov	x20, xzr
    73a0:	add	x21, x21, #0x4e0
    73a4:	add	x22, x22, #0x5f0
    73a8:	ldr	x0, [x21, x20]
    73ac:	bl	6920 <PyUnicode_InternFromString@plt>
    73b0:	str	x0, [x22, x20]
    73b4:	cbz	x0, 7414 <PyInit__decimal@@Base+0x900>
    73b8:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    73bc:	ldr	x1, [x21, x20]
    73c0:	ldr	x2, [x22, x20]
    73c4:	mov	x0, x19
    73c8:	bl	6930 <PyModule_AddObject@plt>
    73cc:	tbnz	w0, #31, 7414 <PyInit__decimal@@Base+0x900>
    73d0:	add	x20, x20, #0x8
    73d4:	cmp	x20, #0x40
    73d8:	b.ne	73a8 <PyInit__decimal@@Base+0x894>  // b.any
    73dc:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    73e0:	adrp	x2, 2c000 <PyInit__decimal@@Base+0x254ec>
    73e4:	add	x1, x1, #0xea6
    73e8:	add	x2, x2, #0xeb2
    73ec:	mov	x0, x19
    73f0:	bl	6910 <PyModule_AddStringConstant@plt>
    73f4:	tbnz	w0, #31, 7414 <PyInit__decimal@@Base+0x900>
    73f8:	bl	17ec8 <PyInit__decimal@@Base+0x113b4>
    73fc:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    7400:	mov	x2, x0
    7404:	add	x1, x1, #0xeb7
    7408:	mov	x0, x19
    740c:	bl	6910 <PyModule_AddStringConstant@plt>
    7410:	tbz	w0, #31, 7174 <PyInit__decimal@@Base+0x660>
    7414:	mov	x20, xzr
    7418:	mov	x21, xzr
    741c:	mov	x23, xzr
    7420:	mov	x22, xzr
    7424:	mov	x24, xzr
    7428:	mov	x25, xzr
    742c:	cbnz	x20, 70a0 <PyInit__decimal@@Base+0x58c>
    7430:	b	70a8 <PyInit__decimal@@Base+0x594>
    7434:	ret
    7438:	stp	x29, x30, [sp, #-32]!
    743c:	stp	x20, x19, [sp, #16]
    7440:	mov	x29, sp
    7444:	ldr	x8, [x0, #232]
    7448:	mov	x19, x1
    744c:	cbz	x8, 7480 <PyInit__decimal@@Base+0x96c>
    7450:	ldr	x1, [x8]
    7454:	cbz	x1, 7480 <PyInit__decimal@@Base+0x96c>
    7458:	add	x20, x8, #0x10
    745c:	mov	x0, x19
    7460:	bl	6800 <strcmp@plt>
    7464:	cbz	w0, 7478 <PyInit__decimal@@Base+0x964>
    7468:	ldr	x1, [x20, #16]
    746c:	add	x20, x20, #0x20
    7470:	cbnz	x1, 745c <PyInit__decimal@@Base+0x948>
    7474:	b	7480 <PyInit__decimal@@Base+0x96c>
    7478:	ldrb	w8, [x20]
    747c:	tbnz	w8, #2, 74ac <PyInit__decimal@@Base+0x998>
    7480:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    7484:	ldr	x8, [x8, #3920]
    7488:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    748c:	add	x1, x1, #0xecc
    7490:	mov	x2, x19
    7494:	ldr	x0, [x8]
    7498:	bl	69b0 <PyErr_Format@plt>
    749c:	mov	x0, xzr
    74a0:	ldp	x20, x19, [sp, #16]
    74a4:	ldp	x29, x30, [sp], #32
    74a8:	ret
    74ac:	ldur	x0, [x20, #-8]
    74b0:	b	74a0 <PyInit__decimal@@Base+0x98c>
    74b4:	stp	x29, x30, [sp, #-16]!
    74b8:	mov	x29, sp
    74bc:	ldr	x8, [x0]
    74c0:	subs	x8, x8, #0x1
    74c4:	str	x8, [x0]
    74c8:	b.eq	74d4 <PyInit__decimal@@Base+0x9c0>  // b.none
    74cc:	ldp	x29, x30, [sp], #16
    74d0:	ret
    74d4:	bl	6570 <_Py_Dealloc@plt>
    74d8:	ldp	x29, x30, [sp], #16
    74dc:	ret
    74e0:	ldr	x8, [x0]
    74e4:	add	x8, x8, #0x1
    74e8:	str	x8, [x0]
    74ec:	ret
    74f0:	adrp	x9, 2c000 <PyInit__decimal@@Base+0x254ec>
    74f4:	add	x9, x9, #0xba0
    74f8:	ldr	q0, [x9]
    74fc:	mov	w8, #0x9                   	// #9
    7500:	mov	w10, #0x4bbf                	// #19391
    7504:	mov	w11, #0x4                   	// #4
    7508:	mov	x12, #0x100000000           	// #4294967296
    750c:	mov	w13, #0x1                   	// #1
    7510:	stur	xzr, [x0, #44]
    7514:	str	x8, [x0, #16]
    7518:	str	w10, [x0, #40]
    751c:	str	w11, [x0, #52]
    7520:	str	x12, [x0, #56]
    7524:	stur	q0, [x0, #24]
    7528:	str	w13, [x0, #80]
    752c:	ret
    7530:	adrp	x9, 2c000 <PyInit__decimal@@Base+0x254ec>
    7534:	add	x9, x9, #0xba0
    7538:	ldr	q0, [x9]
    753c:	ldr	w11, [x9, #36]
    7540:	ldur	q1, [x9, #20]
    7544:	mov	w8, #0x9                   	// #9
    7548:	mov	w10, #0x1                   	// #1
    754c:	str	wzr, [x0, #40]
    7550:	str	x8, [x0, #16]
    7554:	stur	q0, [x0, #24]
    7558:	str	w11, [x0, #60]
    755c:	stur	q1, [x0, #44]
    7560:	str	w10, [x0, #80]
    7564:	ret
    7568:	stp	x29, x30, [sp, #-32]!
    756c:	str	x19, [sp, #16]
    7570:	mov	x29, sp
    7574:	mov	x19, x0
    7578:	add	x0, x0, #0x18
    757c:	bl	18558 <PyInit__decimal@@Base+0x11a44>
    7580:	ldr	x8, [x19, #8]
    7584:	mov	x0, x19
    7588:	ldr	x8, [x8, #320]
    758c:	blr	x8
    7590:	ldr	x19, [sp, #16]
    7594:	ldp	x29, x30, [sp], #32
    7598:	ret
    759c:	stp	x29, x30, [sp, #-32]!
    75a0:	stp	x20, x19, [sp, #16]
    75a4:	mov	x29, sp
    75a8:	mov	x19, x0
    75ac:	bl	792c <PyInit__decimal@@Base+0xe18>
    75b0:	mov	x20, x0
    75b4:	cbz	x0, 7604 <PyInit__decimal@@Base+0xaf0>
    75b8:	mov	x0, x20
    75bc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    75c0:	ldr	w1, [x20, #80]
    75c4:	add	x0, x19, #0x18
    75c8:	bl	15d64 <PyInit__decimal@@Base+0xf250>
    75cc:	cbz	x0, 75fc <PyInit__decimal@@Base+0xae8>
    75d0:	mov	x19, x0
    75d4:	adrp	x0, 2c000 <PyInit__decimal@@Base+0x254ec>
    75d8:	add	x0, x0, #0xf05
    75dc:	mov	x1, x19
    75e0:	bl	6430 <PyUnicode_FromFormat@plt>
    75e4:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    75e8:	ldr	x8, [x8, #1376]
    75ec:	mov	x20, x0
    75f0:	mov	x0, x19
    75f4:	blr	x8
    75f8:	b	7604 <PyInit__decimal@@Base+0xaf0>
    75fc:	bl	6580 <PyErr_NoMemory@plt>
    7600:	mov	x20, xzr
    7604:	mov	x0, x20
    7608:	ldp	x20, x19, [sp, #16]
    760c:	ldp	x29, x30, [sp], #32
    7610:	ret
    7614:	stp	x29, x30, [sp, #-32]!
    7618:	str	x19, [sp, #16]
    761c:	mov	x29, sp
    7620:	ldr	x8, [x0, #16]
    7624:	mov	x19, x0
    7628:	cmn	x8, #0x1
    762c:	b.ne	763c <PyInit__decimal@@Base+0xb28>  // b.any
    7630:	mov	x0, x19
    7634:	bl	8c0c <PyInit__decimal@@Base+0x20f8>
    7638:	str	x0, [x19, #16]
    763c:	ldr	x0, [x19, #16]
    7640:	ldr	x19, [sp, #16]
    7644:	ldp	x29, x30, [sp], #32
    7648:	ret
    764c:	sub	sp, sp, #0x30
    7650:	stp	x29, x30, [sp, #16]
    7654:	stp	x20, x19, [sp, #32]
    7658:	add	x29, sp, #0x10
    765c:	mov	x19, x0
    7660:	bl	792c <PyInit__decimal@@Base+0xe18>
    7664:	cbz	x0, 76b0 <PyInit__decimal@@Base+0xb9c>
    7668:	mov	x20, x0
    766c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7670:	ldr	w2, [x20, #80]
    7674:	add	x1, x19, #0x18
    7678:	add	x0, sp, #0x8
    767c:	bl	160e8 <PyInit__decimal@@Base+0xf5d4>
    7680:	tbnz	x0, #63, 76ac <PyInit__decimal@@Base+0xb98>
    7684:	mov	x1, x0
    7688:	ldr	x0, [sp, #8]
    768c:	bl	8e78 <PyInit__decimal@@Base+0x2364>
    7690:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    7694:	ldr	x9, [x8, #1376]
    7698:	ldr	x8, [sp, #8]
    769c:	mov	x19, x0
    76a0:	mov	x0, x8
    76a4:	blr	x9
    76a8:	b	76b4 <PyInit__decimal@@Base+0xba0>
    76ac:	bl	6580 <PyErr_NoMemory@plt>
    76b0:	mov	x19, xzr
    76b4:	mov	x0, x19
    76b8:	ldp	x20, x19, [sp, #32]
    76bc:	ldp	x29, x30, [sp, #16]
    76c0:	add	sp, sp, #0x30
    76c4:	ret
    76c8:	sub	sp, sp, #0x60
    76cc:	stp	x29, x30, [sp, #16]
    76d0:	str	x25, [sp, #32]
    76d4:	stp	x24, x23, [sp, #48]
    76d8:	stp	x22, x21, [sp, #64]
    76dc:	stp	x20, x19, [sp, #80]
    76e0:	add	x29, sp, #0x10
    76e4:	mov	w19, w2
    76e8:	mov	x21, x1
    76ec:	mov	x22, x0
    76f0:	str	wzr, [sp, #4]
    76f4:	bl	792c <PyInit__decimal@@Base+0xe18>
    76f8:	cbz	x0, 7844 <PyInit__decimal@@Base+0xd30>
    76fc:	mov	x20, x0
    7700:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7704:	add	x0, x29, #0x18
    7708:	add	x1, sp, #0x8
    770c:	mov	x2, x22
    7710:	mov	x3, x21
    7714:	mov	w4, w19
    7718:	mov	x5, x20
    771c:	bl	8ee4 <PyInit__decimal@@Base+0x23d0>
    7720:	cbz	w0, 77ac <PyInit__decimal@@Base+0xc98>
    7724:	ldr	x8, [x29, #24]
    7728:	add	x21, x8, #0x18
    772c:	mov	x0, x21
    7730:	bl	183bc <PyInit__decimal@@Base+0x118a8>
    7734:	ldr	x24, [sp, #8]
    7738:	mov	w22, w0
    773c:	add	x25, x24, #0x18
    7740:	mov	x0, x25
    7744:	bl	183bc <PyInit__decimal@@Base+0x118a8>
    7748:	mov	w23, w0
    774c:	add	x2, sp, #0x4
    7750:	mov	x0, x21
    7754:	mov	x1, x25
    7758:	bl	19c60 <PyInit__decimal@@Base+0x1314c>
    775c:	ldr	x8, [x29, #24]
    7760:	mov	w21, w0
    7764:	mov	x0, x8
    7768:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    776c:	mov	x0, x24
    7770:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7774:	mov	w8, #0x7fffffff            	// #2147483647
    7778:	cmp	w21, w8
    777c:	b.ne	77b4 <PyInit__decimal@@Base+0xca0>  // b.any
    7780:	orr	w8, w19, #0x1
    7784:	cmp	w8, #0x3
    7788:	b.ne	7794 <PyInit__decimal@@Base+0xc80>  // b.any
    778c:	orr	w8, w23, w22
    7790:	cbz	w8, 77e0 <PyInit__decimal@@Base+0xccc>
    7794:	ldr	w1, [sp, #4]
    7798:	mov	x0, x20
    779c:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    77a0:	cbz	w0, 77e0 <PyInit__decimal@@Base+0xccc>
    77a4:	mov	x0, xzr
    77a8:	b	7844 <PyInit__decimal@@Base+0xd30>
    77ac:	ldr	x0, [sp, #8]
    77b0:	b	7844 <PyInit__decimal@@Base+0xd30>
    77b4:	cmp	w19, #0x5
    77b8:	b.hi	783c <PyInit__decimal@@Base+0xd28>  // b.pmore
    77bc:	adrp	x9, 27000 <PyInit__decimal@@Base+0x204ec>
    77c0:	mov	w8, w19
    77c4:	add	x9, x9, #0x9a0
    77c8:	adr	x10, 77d8 <PyInit__decimal@@Base+0xcc4>
    77cc:	ldrb	w11, [x9, x8]
    77d0:	add	x10, x10, x11, lsl #2
    77d4:	br	x10
    77d8:	cmn	w21, #0x1
    77dc:	b	782c <PyInit__decimal@@Base+0xd18>
    77e0:	cmp	w19, #0x3
    77e4:	b.ne	77f8 <PyInit__decimal@@Base+0xce4>  // b.any
    77e8:	bl	9140 <PyInit__decimal@@Base+0x262c>
    77ec:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    77f0:	ldr	x0, [x0, #4024]
    77f4:	b	7844 <PyInit__decimal@@Base+0xd30>
    77f8:	bl	915c <PyInit__decimal@@Base+0x2648>
    77fc:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    7800:	ldr	x0, [x0, #3976]
    7804:	b	7844 <PyInit__decimal@@Base+0xd30>
    7808:	cmp	w21, #0x1
    780c:	cset	w21, lt  // lt = tstop
    7810:	b	783c <PyInit__decimal@@Base+0xd28>
    7814:	cmp	w21, #0x0
    7818:	b	782c <PyInit__decimal@@Base+0xd18>
    781c:	cmp	w21, #0x0
    7820:	cset	w21, ne  // ne = any
    7824:	b	783c <PyInit__decimal@@Base+0xd28>
    7828:	cmp	w21, #0x1
    782c:	cset	w21, eq  // eq = none
    7830:	b	783c <PyInit__decimal@@Base+0xd28>
    7834:	mvn	w8, w21
    7838:	lsr	w21, w8, #31
    783c:	sxtw	x0, w21
    7840:	bl	66f0 <PyBool_FromLong@plt>
    7844:	ldp	x20, x19, [sp, #80]
    7848:	ldp	x22, x21, [sp, #64]
    784c:	ldp	x24, x23, [sp, #48]
    7850:	ldr	x25, [sp, #32]
    7854:	ldp	x29, x30, [sp, #16]
    7858:	add	sp, sp, #0x60
    785c:	ret
    7860:	sub	sp, sp, #0x30
    7864:	stp	x29, x30, [sp, #16]
    7868:	stp	x20, x19, [sp, #32]
    786c:	add	x29, sp, #0x10
    7870:	str	xzr, [sp, #8]
    7874:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    7878:	ldr	x20, [x20, #4008]
    787c:	mov	x8, x2
    7880:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    7884:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    7888:	mov	x19, x0
    788c:	add	x2, x2, #0x3fc
    7890:	add	x3, x3, #0x888
    7894:	add	x4, sp, #0x8
    7898:	mov	x5, sp
    789c:	mov	x0, x1
    78a0:	mov	x1, x8
    78a4:	str	x20, [sp]
    78a8:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    78ac:	cbz	w0, 78f8 <PyInit__decimal@@Base+0xde4>
    78b0:	ldr	x8, [sp]
    78b4:	cmp	x8, x20
    78b8:	b.eq	7900 <PyInit__decimal@@Base+0xdec>  // b.none
    78bc:	ldr	x0, [x8, #8]
    78c0:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    78c4:	add	x8, x8, #0x4b8
    78c8:	cmp	x0, x8
    78cc:	b.eq	7910 <PyInit__decimal@@Base+0xdfc>  // b.none
    78d0:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    78d4:	add	x1, x1, #0x4b8
    78d8:	bl	6960 <PyType_IsSubtype@plt>
    78dc:	cbnz	w0, 7910 <PyInit__decimal@@Base+0xdfc>
    78e0:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    78e4:	ldr	x8, [x8, #3936]
    78e8:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    78ec:	add	x1, x1, #0x2e1
    78f0:	ldr	x0, [x8]
    78f4:	bl	65f0 <PyErr_SetString@plt>
    78f8:	mov	x0, xzr
    78fc:	b	791c <PyInit__decimal@@Base+0xe08>
    7900:	bl	792c <PyInit__decimal@@Base+0xe18>
    7904:	str	x0, [sp]
    7908:	cbz	x0, 791c <PyInit__decimal@@Base+0xe08>
    790c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7910:	ldp	x2, x1, [sp]
    7914:	mov	x0, x19
    7918:	bl	d324 <PyInit__decimal@@Base+0x6810>
    791c:	ldp	x20, x19, [sp, #32]
    7920:	ldp	x29, x30, [sp, #16]
    7924:	add	sp, sp, #0x30
    7928:	ret
    792c:	sub	sp, sp, #0x20
    7930:	stp	x29, x30, [sp, #16]
    7934:	add	x29, sp, #0x10
    7938:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    793c:	ldr	x0, [x8, #1400]
    7940:	add	x2, sp, #0x8
    7944:	mov	x1, xzr
    7948:	bl	66e0 <PyContextVar_Get@plt>
    794c:	tbnz	w0, #31, 7960 <PyInit__decimal@@Base+0xe4c>
    7950:	ldr	x0, [sp, #8]
    7954:	cbnz	x0, 7964 <PyInit__decimal@@Base+0xe50>
    7958:	bl	7970 <PyInit__decimal@@Base+0xe5c>
    795c:	b	7964 <PyInit__decimal@@Base+0xe50>
    7960:	mov	x0, xzr
    7964:	ldp	x29, x30, [sp, #16]
    7968:	add	sp, sp, #0x20
    796c:	ret
    7970:	stp	x29, x30, [sp, #-32]!
    7974:	str	x19, [sp, #16]
    7978:	mov	x29, sp
    797c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    7980:	ldr	x0, [x8, #1496]
    7984:	mov	x1, xzr
    7988:	bl	79c8 <PyInit__decimal@@Base+0xeb4>
    798c:	mov	x19, x0
    7990:	cbz	x0, 79b8 <PyInit__decimal@@Base+0xea4>
    7994:	str	wzr, [x19, #44]
    7998:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    799c:	ldr	x0, [x8, #1400]
    79a0:	mov	x1, x19
    79a4:	bl	6620 <PyContextVar_Set@plt>
    79a8:	cmp	x0, #0x0
    79ac:	csel	x0, x19, x0, eq  // eq = none
    79b0:	csel	x19, xzr, x19, eq  // eq = none
    79b4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    79b8:	mov	x0, x19
    79bc:	ldr	x19, [sp, #16]
    79c0:	ldp	x29, x30, [sp], #32
    79c4:	ret
    79c8:	stp	x29, x30, [sp, #-32]!
    79cc:	str	x19, [sp, #16]
    79d0:	mov	x29, sp
    79d4:	mov	x19, x0
    79d8:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    79dc:	add	x0, x0, #0x4b8
    79e0:	mov	x1, xzr
    79e4:	bl	67e0 <PyObject_CallObject@plt>
    79e8:	cbz	x0, 7a08 <PyInit__decimal@@Base+0xef4>
    79ec:	ldp	q1, q0, [x19, #32]
    79f0:	ldr	q2, [x19, #16]
    79f4:	stp	q1, q0, [x0, #32]
    79f8:	str	q2, [x0, #16]
    79fc:	str	wzr, [x0, #48]
    7a00:	ldr	w8, [x19, #80]
    7a04:	str	w8, [x0, #80]
    7a08:	ldr	x19, [sp, #16]
    7a0c:	ldp	x29, x30, [sp], #32
    7a10:	ret
    7a14:	sub	sp, sp, #0x40
    7a18:	stp	x29, x30, [sp, #16]
    7a1c:	str	x21, [sp, #32]
    7a20:	stp	x20, x19, [sp, #48]
    7a24:	add	x29, sp, #0x10
    7a28:	mov	x20, x1
    7a2c:	mov	x21, x0
    7a30:	str	wzr, [sp, #4]
    7a34:	bl	792c <PyInit__decimal@@Base+0xe18>
    7a38:	cbz	x0, 7ad0 <PyInit__decimal@@Base+0xfbc>
    7a3c:	mov	x19, x0
    7a40:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7a44:	add	x1, x29, #0x18
    7a48:	mov	w0, wzr
    7a4c:	mov	x2, x21
    7a50:	mov	x3, x19
    7a54:	bl	858c <PyInit__decimal@@Base+0x1a78>
    7a58:	cbz	w0, 7ad8 <PyInit__decimal@@Base+0xfc4>
    7a5c:	add	x1, sp, #0x8
    7a60:	mov	w0, wzr
    7a64:	mov	x2, x20
    7a68:	mov	x3, x19
    7a6c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    7a70:	cbz	w0, 7ae0 <PyInit__decimal@@Base+0xfcc>
    7a74:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    7a78:	add	x0, x0, #0x318
    7a7c:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    7a80:	mov	x20, x0
    7a84:	cbz	x0, 7af0 <PyInit__decimal@@Base+0xfdc>
    7a88:	ldr	x8, [x29, #24]
    7a8c:	ldr	x9, [sp, #8]
    7a90:	add	x0, x20, #0x18
    7a94:	add	x3, x19, #0x10
    7a98:	add	x1, x8, #0x18
    7a9c:	add	x2, x9, #0x18
    7aa0:	add	x4, sp, #0x4
    7aa4:	bl	1c118 <PyInit__decimal@@Base+0x15604>
    7aa8:	ldr	x0, [x29, #24]
    7aac:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7ab0:	ldr	x0, [sp, #8]
    7ab4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7ab8:	ldr	w1, [sp, #4]
    7abc:	mov	x0, x19
    7ac0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    7ac4:	cbz	w0, 7b00 <PyInit__decimal@@Base+0xfec>
    7ac8:	mov	x0, x20
    7acc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7ad0:	mov	x20, xzr
    7ad4:	b	7b00 <PyInit__decimal@@Base+0xfec>
    7ad8:	ldr	x20, [x29, #24]
    7adc:	b	7b00 <PyInit__decimal@@Base+0xfec>
    7ae0:	ldr	x0, [x29, #24]
    7ae4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7ae8:	ldr	x20, [sp, #8]
    7aec:	b	7b00 <PyInit__decimal@@Base+0xfec>
    7af0:	ldr	x0, [x29, #24]
    7af4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7af8:	ldr	x0, [sp, #8]
    7afc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7b00:	mov	x0, x20
    7b04:	ldp	x20, x19, [sp, #48]
    7b08:	ldr	x21, [sp, #32]
    7b0c:	ldp	x29, x30, [sp, #16]
    7b10:	add	sp, sp, #0x40
    7b14:	ret
    7b18:	sub	sp, sp, #0x40
    7b1c:	stp	x29, x30, [sp, #16]
    7b20:	str	x21, [sp, #32]
    7b24:	stp	x20, x19, [sp, #48]
    7b28:	add	x29, sp, #0x10
    7b2c:	mov	x20, x1
    7b30:	mov	x21, x0
    7b34:	str	wzr, [sp, #4]
    7b38:	bl	792c <PyInit__decimal@@Base+0xe18>
    7b3c:	cbz	x0, 7bd4 <PyInit__decimal@@Base+0x10c0>
    7b40:	mov	x19, x0
    7b44:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7b48:	add	x1, x29, #0x18
    7b4c:	mov	w0, wzr
    7b50:	mov	x2, x21
    7b54:	mov	x3, x19
    7b58:	bl	858c <PyInit__decimal@@Base+0x1a78>
    7b5c:	cbz	w0, 7bdc <PyInit__decimal@@Base+0x10c8>
    7b60:	add	x1, sp, #0x8
    7b64:	mov	w0, wzr
    7b68:	mov	x2, x20
    7b6c:	mov	x3, x19
    7b70:	bl	858c <PyInit__decimal@@Base+0x1a78>
    7b74:	cbz	w0, 7be4 <PyInit__decimal@@Base+0x10d0>
    7b78:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    7b7c:	add	x0, x0, #0x318
    7b80:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    7b84:	mov	x20, x0
    7b88:	cbz	x0, 7bf4 <PyInit__decimal@@Base+0x10e0>
    7b8c:	ldr	x8, [x29, #24]
    7b90:	ldr	x9, [sp, #8]
    7b94:	add	x0, x20, #0x18
    7b98:	add	x3, x19, #0x10
    7b9c:	add	x1, x8, #0x18
    7ba0:	add	x2, x9, #0x18
    7ba4:	add	x4, sp, #0x4
    7ba8:	bl	1c64c <PyInit__decimal@@Base+0x15b38>
    7bac:	ldr	x0, [x29, #24]
    7bb0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7bb4:	ldr	x0, [sp, #8]
    7bb8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7bbc:	ldr	w1, [sp, #4]
    7bc0:	mov	x0, x19
    7bc4:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    7bc8:	cbz	w0, 7c04 <PyInit__decimal@@Base+0x10f0>
    7bcc:	mov	x0, x20
    7bd0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7bd4:	mov	x20, xzr
    7bd8:	b	7c04 <PyInit__decimal@@Base+0x10f0>
    7bdc:	ldr	x20, [x29, #24]
    7be0:	b	7c04 <PyInit__decimal@@Base+0x10f0>
    7be4:	ldr	x0, [x29, #24]
    7be8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7bec:	ldr	x20, [sp, #8]
    7bf0:	b	7c04 <PyInit__decimal@@Base+0x10f0>
    7bf4:	ldr	x0, [x29, #24]
    7bf8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7bfc:	ldr	x0, [sp, #8]
    7c00:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7c04:	mov	x0, x20
    7c08:	ldp	x20, x19, [sp, #48]
    7c0c:	ldr	x21, [sp, #32]
    7c10:	ldp	x29, x30, [sp, #16]
    7c14:	add	sp, sp, #0x40
    7c18:	ret
    7c1c:	sub	sp, sp, #0x40
    7c20:	stp	x29, x30, [sp, #16]
    7c24:	str	x21, [sp, #32]
    7c28:	stp	x20, x19, [sp, #48]
    7c2c:	add	x29, sp, #0x10
    7c30:	mov	x20, x1
    7c34:	mov	x21, x0
    7c38:	str	wzr, [sp, #4]
    7c3c:	bl	792c <PyInit__decimal@@Base+0xe18>
    7c40:	cbz	x0, 7cd8 <PyInit__decimal@@Base+0x11c4>
    7c44:	mov	x19, x0
    7c48:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7c4c:	add	x1, x29, #0x18
    7c50:	mov	w0, wzr
    7c54:	mov	x2, x21
    7c58:	mov	x3, x19
    7c5c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    7c60:	cbz	w0, 7ce0 <PyInit__decimal@@Base+0x11cc>
    7c64:	add	x1, sp, #0x8
    7c68:	mov	w0, wzr
    7c6c:	mov	x2, x20
    7c70:	mov	x3, x19
    7c74:	bl	858c <PyInit__decimal@@Base+0x1a78>
    7c78:	cbz	w0, 7ce8 <PyInit__decimal@@Base+0x11d4>
    7c7c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    7c80:	add	x0, x0, #0x318
    7c84:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    7c88:	mov	x20, x0
    7c8c:	cbz	x0, 7cf8 <PyInit__decimal@@Base+0x11e4>
    7c90:	ldr	x8, [x29, #24]
    7c94:	ldr	x9, [sp, #8]
    7c98:	add	x0, x20, #0x18
    7c9c:	add	x3, x19, #0x10
    7ca0:	add	x1, x8, #0x18
    7ca4:	add	x2, x9, #0x18
    7ca8:	add	x4, sp, #0x4
    7cac:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
    7cb0:	ldr	x0, [x29, #24]
    7cb4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7cb8:	ldr	x0, [sp, #8]
    7cbc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7cc0:	ldr	w1, [sp, #4]
    7cc4:	mov	x0, x19
    7cc8:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    7ccc:	cbz	w0, 7d08 <PyInit__decimal@@Base+0x11f4>
    7cd0:	mov	x0, x20
    7cd4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7cd8:	mov	x20, xzr
    7cdc:	b	7d08 <PyInit__decimal@@Base+0x11f4>
    7ce0:	ldr	x20, [x29, #24]
    7ce4:	b	7d08 <PyInit__decimal@@Base+0x11f4>
    7ce8:	ldr	x0, [x29, #24]
    7cec:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7cf0:	ldr	x20, [sp, #8]
    7cf4:	b	7d08 <PyInit__decimal@@Base+0x11f4>
    7cf8:	ldr	x0, [x29, #24]
    7cfc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7d00:	ldr	x0, [sp, #8]
    7d04:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7d08:	mov	x0, x20
    7d0c:	ldp	x20, x19, [sp, #48]
    7d10:	ldr	x21, [sp, #32]
    7d14:	ldp	x29, x30, [sp, #16]
    7d18:	add	sp, sp, #0x40
    7d1c:	ret
    7d20:	sub	sp, sp, #0x40
    7d24:	stp	x29, x30, [sp, #16]
    7d28:	str	x21, [sp, #32]
    7d2c:	stp	x20, x19, [sp, #48]
    7d30:	add	x29, sp, #0x10
    7d34:	mov	x20, x1
    7d38:	mov	x21, x0
    7d3c:	str	wzr, [sp, #4]
    7d40:	bl	792c <PyInit__decimal@@Base+0xe18>
    7d44:	cbz	x0, 7ddc <PyInit__decimal@@Base+0x12c8>
    7d48:	mov	x19, x0
    7d4c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7d50:	add	x1, x29, #0x18
    7d54:	mov	w0, wzr
    7d58:	mov	x2, x21
    7d5c:	mov	x3, x19
    7d60:	bl	858c <PyInit__decimal@@Base+0x1a78>
    7d64:	cbz	w0, 7de4 <PyInit__decimal@@Base+0x12d0>
    7d68:	add	x1, sp, #0x8
    7d6c:	mov	w0, wzr
    7d70:	mov	x2, x20
    7d74:	mov	x3, x19
    7d78:	bl	858c <PyInit__decimal@@Base+0x1a78>
    7d7c:	cbz	w0, 7dec <PyInit__decimal@@Base+0x12d8>
    7d80:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    7d84:	add	x0, x0, #0x318
    7d88:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    7d8c:	mov	x20, x0
    7d90:	cbz	x0, 7dfc <PyInit__decimal@@Base+0x12e8>
    7d94:	ldr	x8, [x29, #24]
    7d98:	ldr	x9, [sp, #8]
    7d9c:	add	x0, x20, #0x18
    7da0:	add	x3, x19, #0x10
    7da4:	add	x1, x8, #0x18
    7da8:	add	x2, x9, #0x18
    7dac:	add	x4, sp, #0x4
    7db0:	bl	21080 <PyInit__decimal@@Base+0x1a56c>
    7db4:	ldr	x0, [x29, #24]
    7db8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7dbc:	ldr	x0, [sp, #8]
    7dc0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7dc4:	ldr	w1, [sp, #4]
    7dc8:	mov	x0, x19
    7dcc:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    7dd0:	cbz	w0, 7e0c <PyInit__decimal@@Base+0x12f8>
    7dd4:	mov	x0, x20
    7dd8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7ddc:	mov	x20, xzr
    7de0:	b	7e0c <PyInit__decimal@@Base+0x12f8>
    7de4:	ldr	x20, [x29, #24]
    7de8:	b	7e0c <PyInit__decimal@@Base+0x12f8>
    7dec:	ldr	x0, [x29, #24]
    7df0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7df4:	ldr	x20, [sp, #8]
    7df8:	b	7e0c <PyInit__decimal@@Base+0x12f8>
    7dfc:	ldr	x0, [x29, #24]
    7e00:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7e04:	ldr	x0, [sp, #8]
    7e08:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7e0c:	mov	x0, x20
    7e10:	ldp	x20, x19, [sp, #48]
    7e14:	ldr	x21, [sp, #32]
    7e18:	ldp	x29, x30, [sp, #16]
    7e1c:	add	sp, sp, #0x40
    7e20:	ret
    7e24:	sub	sp, sp, #0x40
    7e28:	stp	x29, x30, [sp, #16]
    7e2c:	str	x21, [sp, #32]
    7e30:	stp	x20, x19, [sp, #48]
    7e34:	add	x29, sp, #0x10
    7e38:	mov	x19, x1
    7e3c:	mov	x21, x0
    7e40:	str	wzr, [sp, #4]
    7e44:	bl	792c <PyInit__decimal@@Base+0xe18>
    7e48:	mov	x20, x0
    7e4c:	cbz	x0, 7f40 <PyInit__decimal@@Base+0x142c>
    7e50:	mov	x0, x20
    7e54:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7e58:	add	x1, x29, #0x18
    7e5c:	mov	w0, wzr
    7e60:	mov	x2, x21
    7e64:	mov	x3, x20
    7e68:	bl	858c <PyInit__decimal@@Base+0x1a78>
    7e6c:	cbz	w0, 7efc <PyInit__decimal@@Base+0x13e8>
    7e70:	add	x1, sp, #0x8
    7e74:	mov	w0, wzr
    7e78:	mov	x2, x19
    7e7c:	mov	x3, x20
    7e80:	bl	858c <PyInit__decimal@@Base+0x1a78>
    7e84:	cbz	w0, 7f04 <PyInit__decimal@@Base+0x13f0>
    7e88:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    7e8c:	add	x0, x0, #0x318
    7e90:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    7e94:	cbz	x0, 7f14 <PyInit__decimal@@Base+0x1400>
    7e98:	mov	x19, x0
    7e9c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    7ea0:	add	x0, x0, #0x318
    7ea4:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    7ea8:	cbz	x0, 7f24 <PyInit__decimal@@Base+0x1410>
    7eac:	ldr	x8, [x29, #24]
    7eb0:	ldr	x9, [sp, #8]
    7eb4:	mov	x21, x0
    7eb8:	add	x0, x19, #0x18
    7ebc:	add	x1, x21, #0x18
    7ec0:	add	x2, x8, #0x18
    7ec4:	add	x3, x9, #0x18
    7ec8:	add	x4, x20, #0x10
    7ecc:	add	x5, sp, #0x4
    7ed0:	bl	1d000 <PyInit__decimal@@Base+0x164ec>
    7ed4:	ldr	x0, [x29, #24]
    7ed8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7edc:	ldr	x0, [sp, #8]
    7ee0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7ee4:	ldr	w1, [sp, #4]
    7ee8:	mov	x0, x20
    7eec:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    7ef0:	cbz	w0, 7f58 <PyInit__decimal@@Base+0x1444>
    7ef4:	mov	x0, x21
    7ef8:	b	7f30 <PyInit__decimal@@Base+0x141c>
    7efc:	ldr	x20, [x29, #24]
    7f00:	b	7f40 <PyInit__decimal@@Base+0x142c>
    7f04:	ldr	x0, [x29, #24]
    7f08:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7f0c:	ldr	x20, [sp, #8]
    7f10:	b	7f40 <PyInit__decimal@@Base+0x142c>
    7f14:	ldr	x0, [x29, #24]
    7f18:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7f1c:	ldr	x0, [sp, #8]
    7f20:	b	7f38 <PyInit__decimal@@Base+0x1424>
    7f24:	ldr	x0, [x29, #24]
    7f28:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7f2c:	ldr	x0, [sp, #8]
    7f30:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7f34:	mov	x0, x19
    7f38:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7f3c:	mov	x20, xzr
    7f40:	mov	x0, x20
    7f44:	ldp	x20, x19, [sp, #48]
    7f48:	ldr	x21, [sp, #32]
    7f4c:	ldp	x29, x30, [sp, #16]
    7f50:	add	sp, sp, #0x40
    7f54:	ret
    7f58:	adrp	x0, 2c000 <PyInit__decimal@@Base+0x254ec>
    7f5c:	add	x0, x0, #0xf83
    7f60:	mov	x1, x19
    7f64:	mov	x2, x21
    7f68:	bl	6770 <Py_BuildValue@plt>
    7f6c:	mov	x20, x0
    7f70:	mov	x0, x21
    7f74:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7f78:	mov	x0, x19
    7f7c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7f80:	b	7f40 <PyInit__decimal@@Base+0x142c>
    7f84:	sub	sp, sp, #0x50
    7f88:	stp	x29, x30, [sp, #32]
    7f8c:	stp	x22, x21, [sp, #48]
    7f90:	stp	x20, x19, [sp, #64]
    7f94:	add	x29, sp, #0x20
    7f98:	mov	x20, x2
    7f9c:	mov	x21, x1
    7fa0:	mov	x22, x0
    7fa4:	str	xzr, [sp, #8]
    7fa8:	str	wzr, [sp, #4]
    7fac:	bl	792c <PyInit__decimal@@Base+0xe18>
    7fb0:	cbz	x0, 80dc <PyInit__decimal@@Base+0x15c8>
    7fb4:	mov	x19, x0
    7fb8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    7fbc:	sub	x1, x29, #0x8
    7fc0:	mov	w0, wzr
    7fc4:	mov	x2, x22
    7fc8:	mov	x3, x19
    7fcc:	bl	858c <PyInit__decimal@@Base+0x1a78>
    7fd0:	cbz	w0, 805c <PyInit__decimal@@Base+0x1548>
    7fd4:	add	x1, sp, #0x10
    7fd8:	mov	w0, wzr
    7fdc:	mov	x2, x21
    7fe0:	mov	x3, x19
    7fe4:	bl	858c <PyInit__decimal@@Base+0x1a78>
    7fe8:	cbz	w0, 8064 <PyInit__decimal@@Base+0x1550>
    7fec:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    7ff0:	ldr	x8, [x8, #4008]
    7ff4:	cmp	x20, x8
    7ff8:	b.eq	8014 <PyInit__decimal@@Base+0x1500>  // b.none
    7ffc:	add	x1, sp, #0x8
    8000:	mov	w0, wzr
    8004:	mov	x2, x20
    8008:	mov	x3, x19
    800c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    8010:	cbz	w0, 8090 <PyInit__decimal@@Base+0x157c>
    8014:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    8018:	add	x0, x0, #0x318
    801c:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    8020:	mov	x20, x0
    8024:	cbz	x0, 8074 <PyInit__decimal@@Base+0x1560>
    8028:	ldp	x21, x9, [sp, #8]
    802c:	ldur	x8, [x29, #-8]
    8030:	add	x0, x20, #0x18
    8034:	add	x2, x9, #0x18
    8038:	add	x1, x8, #0x18
    803c:	cbz	x21, 80a8 <PyInit__decimal@@Base+0x1594>
    8040:	add	x3, x21, #0x18
    8044:	add	x4, x19, #0x10
    8048:	add	x5, sp, #0x4
    804c:	bl	209e0 <PyInit__decimal@@Base+0x19ecc>
    8050:	mov	x0, x21
    8054:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8058:	b	80b4 <PyInit__decimal@@Base+0x15a0>
    805c:	ldur	x20, [x29, #-8]
    8060:	b	80e0 <PyInit__decimal@@Base+0x15cc>
    8064:	ldur	x0, [x29, #-8]
    8068:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    806c:	ldr	x20, [sp, #16]
    8070:	b	80e0 <PyInit__decimal@@Base+0x15cc>
    8074:	ldur	x0, [x29, #-8]
    8078:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    807c:	ldr	x0, [sp, #16]
    8080:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8084:	ldr	x0, [sp, #8]
    8088:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
    808c:	b	80e0 <PyInit__decimal@@Base+0x15cc>
    8090:	ldur	x0, [x29, #-8]
    8094:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8098:	ldr	x0, [sp, #16]
    809c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    80a0:	ldr	x20, [sp, #8]
    80a4:	b	80e0 <PyInit__decimal@@Base+0x15cc>
    80a8:	add	x3, x19, #0x10
    80ac:	add	x4, sp, #0x4
    80b0:	bl	20014 <PyInit__decimal@@Base+0x19500>
    80b4:	ldur	x0, [x29, #-8]
    80b8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    80bc:	ldr	x0, [sp, #16]
    80c0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    80c4:	ldr	w1, [sp, #4]
    80c8:	mov	x0, x19
    80cc:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    80d0:	cbz	w0, 80e0 <PyInit__decimal@@Base+0x15cc>
    80d4:	mov	x0, x20
    80d8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    80dc:	mov	x20, xzr
    80e0:	mov	x0, x20
    80e4:	ldp	x20, x19, [sp, #64]
    80e8:	ldp	x22, x21, [sp, #48]
    80ec:	ldp	x29, x30, [sp, #32]
    80f0:	add	sp, sp, #0x50
    80f4:	ret
    80f8:	stp	x29, x30, [sp, #-48]!
    80fc:	str	x21, [sp, #16]
    8100:	stp	x20, x19, [sp, #32]
    8104:	mov	x29, sp
    8108:	mov	x21, x0
    810c:	str	wzr, [x29, #28]
    8110:	bl	792c <PyInit__decimal@@Base+0xe18>
    8114:	cbz	x0, 8160 <PyInit__decimal@@Base+0x164c>
    8118:	mov	x20, x0
    811c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8120:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    8124:	add	x0, x0, #0x318
    8128:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    812c:	mov	x19, x0
    8130:	cbz	x0, 8164 <PyInit__decimal@@Base+0x1650>
    8134:	add	x0, x19, #0x18
    8138:	add	x1, x21, #0x18
    813c:	add	x2, x20, #0x10
    8140:	add	x3, x29, #0x1c
    8144:	bl	1bfb0 <PyInit__decimal@@Base+0x1549c>
    8148:	ldr	w1, [x29, #28]
    814c:	mov	x0, x20
    8150:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    8154:	cbz	w0, 8164 <PyInit__decimal@@Base+0x1650>
    8158:	mov	x0, x19
    815c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8160:	mov	x19, xzr
    8164:	mov	x0, x19
    8168:	ldp	x20, x19, [sp, #32]
    816c:	ldr	x21, [sp, #16]
    8170:	ldp	x29, x30, [sp], #48
    8174:	ret
    8178:	stp	x29, x30, [sp, #-48]!
    817c:	str	x21, [sp, #16]
    8180:	stp	x20, x19, [sp, #32]
    8184:	mov	x29, sp
    8188:	mov	x21, x0
    818c:	str	wzr, [x29, #28]
    8190:	bl	792c <PyInit__decimal@@Base+0xe18>
    8194:	cbz	x0, 81e0 <PyInit__decimal@@Base+0x16cc>
    8198:	mov	x20, x0
    819c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    81a0:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    81a4:	add	x0, x0, #0x318
    81a8:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    81ac:	mov	x19, x0
    81b0:	cbz	x0, 81e4 <PyInit__decimal@@Base+0x16d0>
    81b4:	add	x0, x19, #0x18
    81b8:	add	x1, x21, #0x18
    81bc:	add	x2, x20, #0x10
    81c0:	add	x3, x29, #0x1c
    81c4:	bl	1c064 <PyInit__decimal@@Base+0x15550>
    81c8:	ldr	w1, [x29, #28]
    81cc:	mov	x0, x20
    81d0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    81d4:	cbz	w0, 81e4 <PyInit__decimal@@Base+0x16d0>
    81d8:	mov	x0, x19
    81dc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    81e0:	mov	x19, xzr
    81e4:	mov	x0, x19
    81e8:	ldp	x20, x19, [sp, #32]
    81ec:	ldr	x21, [sp, #16]
    81f0:	ldp	x29, x30, [sp], #48
    81f4:	ret
    81f8:	stp	x29, x30, [sp, #-48]!
    81fc:	str	x21, [sp, #16]
    8200:	stp	x20, x19, [sp, #32]
    8204:	mov	x29, sp
    8208:	mov	x21, x0
    820c:	str	wzr, [x29, #28]
    8210:	bl	792c <PyInit__decimal@@Base+0xe18>
    8214:	cbz	x0, 8260 <PyInit__decimal@@Base+0x174c>
    8218:	mov	x20, x0
    821c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8220:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    8224:	add	x0, x0, #0x318
    8228:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    822c:	mov	x19, x0
    8230:	cbz	x0, 8264 <PyInit__decimal@@Base+0x1750>
    8234:	add	x0, x19, #0x18
    8238:	add	x1, x21, #0x18
    823c:	add	x2, x20, #0x10
    8240:	add	x3, x29, #0x1c
    8244:	bl	1bf28 <PyInit__decimal@@Base+0x15414>
    8248:	ldr	w1, [x29, #28]
    824c:	mov	x0, x20
    8250:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    8254:	cbz	w0, 8264 <PyInit__decimal@@Base+0x1750>
    8258:	mov	x0, x19
    825c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8260:	mov	x19, xzr
    8264:	mov	x0, x19
    8268:	ldp	x20, x19, [sp, #32]
    826c:	ldr	x21, [sp, #16]
    8270:	ldp	x29, x30, [sp], #48
    8274:	ret
    8278:	stp	x29, x30, [sp, #-16]!
    827c:	mov	x29, sp
    8280:	add	x0, x0, #0x18
    8284:	bl	183d4 <PyInit__decimal@@Base+0x118c0>
    8288:	cmp	w0, #0x0
    828c:	cset	w0, eq  // eq = none
    8290:	ldp	x29, x30, [sp], #16
    8294:	ret
    8298:	stp	x29, x30, [sp, #-32]!
    829c:	stp	x20, x19, [sp, #16]
    82a0:	mov	x29, sp
    82a4:	mov	x19, x0
    82a8:	bl	792c <PyInit__decimal@@Base+0xe18>
    82ac:	cbz	x0, 82c8 <PyInit__decimal@@Base+0x17b4>
    82b0:	mov	x20, x0
    82b4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    82b8:	mov	w2, #0x1                   	// #1
    82bc:	mov	x0, x19
    82c0:	mov	x1, x20
    82c4:	bl	8a74 <PyInit__decimal@@Base+0x1f60>
    82c8:	ldp	x20, x19, [sp, #16]
    82cc:	ldp	x29, x30, [sp], #32
    82d0:	ret
    82d4:	stp	x29, x30, [sp, #-32]!
    82d8:	stp	x20, x19, [sp, #16]
    82dc:	mov	x29, sp
    82e0:	add	x19, x0, #0x18
    82e4:	mov	x20, x0
    82e8:	mov	x0, x19
    82ec:	bl	1837c <PyInit__decimal@@Base+0x11868>
    82f0:	cbz	w0, 831c <PyInit__decimal@@Base+0x1808>
    82f4:	mov	x0, x19
    82f8:	bl	183bc <PyInit__decimal@@Base+0x118a8>
    82fc:	cbz	w0, 8344 <PyInit__decimal@@Base+0x1830>
    8300:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    8304:	ldr	x8, [x8, #3928]
    8308:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    830c:	add	x1, x1, #0xfc9
    8310:	ldr	x0, [x8]
    8314:	bl	65f0 <PyErr_SetString@plt>
    8318:	b	8370 <PyInit__decimal@@Base+0x185c>
    831c:	mov	x0, x20
    8320:	bl	764c <PyInit__decimal@@Base+0xb38>
    8324:	mov	x19, x0
    8328:	cbz	x0, 8370 <PyInit__decimal@@Base+0x185c>
    832c:	mov	x0, x19
    8330:	bl	6a30 <PyFloat_FromString@plt>
    8334:	mov	x20, x0
    8338:	mov	x0, x19
    833c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8340:	b	8374 <PyInit__decimal@@Base+0x1860>
    8344:	mov	x0, x19
    8348:	bl	18388 <PyInit__decimal@@Base+0x11874>
    834c:	cbz	w0, 835c <PyInit__decimal@@Base+0x1848>
    8350:	adrp	x0, 2c000 <PyInit__decimal@@Base+0x254ec>
    8354:	add	x0, x0, #0xfef
    8358:	b	8364 <PyInit__decimal@@Base+0x1850>
    835c:	adrp	x0, 2c000 <PyInit__decimal@@Base+0x254ec>
    8360:	add	x0, x0, #0xff0
    8364:	bl	6900 <PyUnicode_FromString@plt>
    8368:	mov	x19, x0
    836c:	cbnz	x0, 832c <PyInit__decimal@@Base+0x1818>
    8370:	mov	x20, xzr
    8374:	mov	x0, x20
    8378:	ldp	x20, x19, [sp, #16]
    837c:	ldp	x29, x30, [sp], #32
    8380:	ret
    8384:	sub	sp, sp, #0x40
    8388:	stp	x29, x30, [sp, #16]
    838c:	str	x21, [sp, #32]
    8390:	stp	x20, x19, [sp, #48]
    8394:	add	x29, sp, #0x10
    8398:	mov	x20, x1
    839c:	mov	x21, x0
    83a0:	str	wzr, [sp, #4]
    83a4:	bl	792c <PyInit__decimal@@Base+0xe18>
    83a8:	cbz	x0, 8440 <PyInit__decimal@@Base+0x192c>
    83ac:	mov	x19, x0
    83b0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    83b4:	add	x1, x29, #0x18
    83b8:	mov	w0, wzr
    83bc:	mov	x2, x21
    83c0:	mov	x3, x19
    83c4:	bl	858c <PyInit__decimal@@Base+0x1a78>
    83c8:	cbz	w0, 8448 <PyInit__decimal@@Base+0x1934>
    83cc:	add	x1, sp, #0x8
    83d0:	mov	w0, wzr
    83d4:	mov	x2, x20
    83d8:	mov	x3, x19
    83dc:	bl	858c <PyInit__decimal@@Base+0x1a78>
    83e0:	cbz	w0, 8450 <PyInit__decimal@@Base+0x193c>
    83e4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    83e8:	add	x0, x0, #0x318
    83ec:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    83f0:	mov	x20, x0
    83f4:	cbz	x0, 8460 <PyInit__decimal@@Base+0x194c>
    83f8:	ldr	x8, [x29, #24]
    83fc:	ldr	x9, [sp, #8]
    8400:	add	x0, x20, #0x18
    8404:	add	x3, x19, #0x10
    8408:	add	x1, x8, #0x18
    840c:	add	x2, x9, #0x18
    8410:	add	x4, sp, #0x4
    8414:	bl	1d6a8 <PyInit__decimal@@Base+0x16b94>
    8418:	ldr	x0, [x29, #24]
    841c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8420:	ldr	x0, [sp, #8]
    8424:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8428:	ldr	w1, [sp, #4]
    842c:	mov	x0, x19
    8430:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    8434:	cbz	w0, 8470 <PyInit__decimal@@Base+0x195c>
    8438:	mov	x0, x20
    843c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8440:	mov	x20, xzr
    8444:	b	8470 <PyInit__decimal@@Base+0x195c>
    8448:	ldr	x20, [x29, #24]
    844c:	b	8470 <PyInit__decimal@@Base+0x195c>
    8450:	ldr	x0, [x29, #24]
    8454:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8458:	ldr	x20, [sp, #8]
    845c:	b	8470 <PyInit__decimal@@Base+0x195c>
    8460:	ldr	x0, [x29, #24]
    8464:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8468:	ldr	x0, [sp, #8]
    846c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8470:	mov	x0, x20
    8474:	ldp	x20, x19, [sp, #48]
    8478:	ldr	x21, [sp, #32]
    847c:	ldp	x29, x30, [sp, #16]
    8480:	add	sp, sp, #0x40
    8484:	ret
    8488:	sub	sp, sp, #0x40
    848c:	stp	x29, x30, [sp, #16]
    8490:	str	x21, [sp, #32]
    8494:	stp	x20, x19, [sp, #48]
    8498:	add	x29, sp, #0x10
    849c:	mov	x20, x1
    84a0:	mov	x21, x0
    84a4:	str	wzr, [sp, #4]
    84a8:	bl	792c <PyInit__decimal@@Base+0xe18>
    84ac:	cbz	x0, 8544 <PyInit__decimal@@Base+0x1a30>
    84b0:	mov	x19, x0
    84b4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    84b8:	add	x1, x29, #0x18
    84bc:	mov	w0, wzr
    84c0:	mov	x2, x21
    84c4:	mov	x3, x19
    84c8:	bl	858c <PyInit__decimal@@Base+0x1a78>
    84cc:	cbz	w0, 854c <PyInit__decimal@@Base+0x1a38>
    84d0:	add	x1, sp, #0x8
    84d4:	mov	w0, wzr
    84d8:	mov	x2, x20
    84dc:	mov	x3, x19
    84e0:	bl	858c <PyInit__decimal@@Base+0x1a78>
    84e4:	cbz	w0, 8554 <PyInit__decimal@@Base+0x1a40>
    84e8:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    84ec:	add	x0, x0, #0x318
    84f0:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    84f4:	mov	x20, x0
    84f8:	cbz	x0, 8564 <PyInit__decimal@@Base+0x1a50>
    84fc:	ldr	x8, [x29, #24]
    8500:	ldr	x9, [sp, #8]
    8504:	add	x0, x20, #0x18
    8508:	add	x3, x19, #0x10
    850c:	add	x1, x8, #0x18
    8510:	add	x2, x9, #0x18
    8514:	add	x4, sp, #0x4
    8518:	bl	1cad0 <PyInit__decimal@@Base+0x15fbc>
    851c:	ldr	x0, [x29, #24]
    8520:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8524:	ldr	x0, [sp, #8]
    8528:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    852c:	ldr	w1, [sp, #4]
    8530:	mov	x0, x19
    8534:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    8538:	cbz	w0, 8574 <PyInit__decimal@@Base+0x1a60>
    853c:	mov	x0, x20
    8540:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8544:	mov	x20, xzr
    8548:	b	8574 <PyInit__decimal@@Base+0x1a60>
    854c:	ldr	x20, [x29, #24]
    8550:	b	8574 <PyInit__decimal@@Base+0x1a60>
    8554:	ldr	x0, [x29, #24]
    8558:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    855c:	ldr	x20, [sp, #8]
    8560:	b	8574 <PyInit__decimal@@Base+0x1a60>
    8564:	ldr	x0, [x29, #24]
    8568:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    856c:	ldr	x0, [sp, #8]
    8570:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8574:	mov	x0, x20
    8578:	ldp	x20, x19, [sp, #48]
    857c:	ldr	x21, [sp, #32]
    8580:	ldp	x29, x30, [sp, #16]
    8584:	add	sp, sp, #0x40
    8588:	ret
    858c:	stp	x29, x30, [sp, #-48]!
    8590:	stp	x22, x21, [sp, #16]
    8594:	stp	x20, x19, [sp, #32]
    8598:	mov	x29, sp
    859c:	ldr	x8, [x2, #8]
    85a0:	adrp	x9, 40000 <PyInit__decimal@@Base+0x394ec>
    85a4:	add	x9, x9, #0x318
    85a8:	mov	x20, x2
    85ac:	mov	x19, x1
    85b0:	cmp	x8, x9
    85b4:	b.eq	85d4 <PyInit__decimal@@Base+0x1ac0>  // b.none
    85b8:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    85bc:	mov	w22, w0
    85c0:	add	x1, x1, #0x318
    85c4:	mov	x0, x8
    85c8:	mov	x21, x3
    85cc:	bl	6960 <PyType_IsSubtype@plt>
    85d0:	cbz	w0, 85f4 <PyInit__decimal@@Base+0x1ae0>
    85d4:	mov	x0, x20
    85d8:	str	x20, [x19]
    85dc:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    85e0:	mov	w0, #0x1                   	// #1
    85e4:	ldp	x20, x19, [sp, #32]
    85e8:	ldp	x22, x21, [sp, #16]
    85ec:	ldp	x29, x30, [sp], #48
    85f0:	ret
    85f4:	ldr	x8, [x20, #8]
    85f8:	ldrb	w9, [x8, #171]
    85fc:	tbnz	w9, #0, 8628 <PyInit__decimal@@Base+0x1b14>
    8600:	cbz	w22, 864c <PyInit__decimal@@Base+0x1b38>
    8604:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x384ec>
    8608:	ldr	x9, [x9, #3936]
    860c:	ldr	x2, [x8, #24]
    8610:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    8614:	add	x1, x1, #0xf13
    8618:	ldr	x0, [x9]
    861c:	bl	69b0 <PyErr_Format@plt>
    8620:	mov	w0, wzr
    8624:	b	85e4 <PyInit__decimal@@Base+0x1ad0>
    8628:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    862c:	add	x0, x0, #0x318
    8630:	mov	x1, x20
    8634:	mov	x2, x21
    8638:	bl	8760 <PyInit__decimal@@Base+0x1c4c>
    863c:	cmp	x0, #0x0
    8640:	str	x0, [x19]
    8644:	cset	w0, ne  // ne = any
    8648:	b	85e4 <PyInit__decimal@@Base+0x1ad0>
    864c:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    8650:	ldr	x20, [x20, #3912]
    8654:	mov	x0, x20
    8658:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    865c:	mov	w0, wzr
    8660:	str	x20, [x19]
    8664:	b	85e4 <PyInit__decimal@@Base+0x1ad0>
    8668:	stp	x29, x30, [sp, #-16]!
    866c:	mov	x29, sp
    8670:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    8674:	add	x8, x8, #0x318
    8678:	cmp	x0, x8
    867c:	b.eq	86bc <PyInit__decimal@@Base+0x1ba8>  // b.none
    8680:	ldr	x8, [x0, #304]
    8684:	mov	x1, xzr
    8688:	blr	x8
    868c:	cbz	x0, 86b4 <PyInit__decimal@@Base+0x1ba0>
    8690:	mov	x8, #0xffffffffffffffff    	// #-1
    8694:	mov	w9, #0x30                  	// #48
    8698:	mov	w10, #0x4                   	// #4
    869c:	add	x11, x0, #0x48
    86a0:	stp	xzr, xzr, [x0, #32]
    86a4:	str	x8, [x0, #16]
    86a8:	strb	w9, [x0, #24]
    86ac:	stp	xzr, x10, [x0, #48]
    86b0:	str	x11, [x0, #64]
    86b4:	ldp	x29, x30, [sp], #16
    86b8:	ret
    86bc:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    86c0:	add	x0, x0, #0x318
    86c4:	bl	68f0 <_PyObject_New@plt>
    86c8:	cbnz	x0, 8690 <PyInit__decimal@@Base+0x1b7c>
    86cc:	b	86b4 <PyInit__decimal@@Base+0x1ba0>
    86d0:	stp	x29, x30, [sp, #-48]!
    86d4:	str	x21, [sp, #16]
    86d8:	stp	x20, x19, [sp, #32]
    86dc:	mov	x29, sp
    86e0:	ldp	w8, w9, [x0, #40]
    86e4:	orr	w10, w8, #0x200
    86e8:	orr	w9, w9, w1
    86ec:	tst	w10, w1
    86f0:	str	w9, [x0, #44]
    86f4:	b.eq	8740 <PyInit__decimal@@Base+0x1c2c>  // b.none
    86f8:	mov	w19, w1
    86fc:	tbnz	w1, #9, 8748 <PyInit__decimal@@Base+0x1c34>
    8700:	mov	x20, x0
    8704:	and	w0, w8, w19
    8708:	bl	8920 <PyInit__decimal@@Base+0x1e0c>
    870c:	cbz	x0, 874c <PyInit__decimal@@Base+0x1c38>
    8710:	ldr	w8, [x20, #40]
    8714:	mov	x21, x0
    8718:	and	w0, w8, w19
    871c:	bl	8974 <PyInit__decimal@@Base+0x1e60>
    8720:	cbz	x0, 874c <PyInit__decimal@@Base+0x1c38>
    8724:	mov	x19, x0
    8728:	mov	x0, x21
    872c:	mov	x1, x19
    8730:	bl	6590 <PyErr_SetObject@plt>
    8734:	mov	x0, x19
    8738:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    873c:	b	874c <PyInit__decimal@@Base+0x1c38>
    8740:	mov	w0, wzr
    8744:	b	8750 <PyInit__decimal@@Base+0x1c3c>
    8748:	bl	6580 <PyErr_NoMemory@plt>
    874c:	mov	w0, #0x1                   	// #1
    8750:	ldp	x20, x19, [sp, #32]
    8754:	ldr	x21, [sp, #16]
    8758:	ldp	x29, x30, [sp], #48
    875c:	ret
    8760:	sub	sp, sp, #0x60
    8764:	stp	x29, x30, [sp, #48]
    8768:	str	x21, [sp, #64]
    876c:	stp	x20, x19, [sp, #80]
    8770:	add	x29, sp, #0x30
    8774:	str	wzr, [x29, #28]
    8778:	ldr	x8, [x1, #8]
    877c:	ldrb	w8, [x8, #171]
    8780:	tbnz	w8, #0, 87a0 <PyInit__decimal@@Base+0x1c8c>
    8784:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    8788:	ldr	x8, [x8, #3936]
    878c:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    8790:	add	x1, x1, #0xf42
    8794:	ldr	x0, [x8]
    8798:	bl	65f0 <PyErr_SetString@plt>
    879c:	b	8814 <PyInit__decimal@@Base+0x1d00>
    87a0:	mov	x21, x0
    87a4:	mov	x0, sp
    87a8:	mov	x19, x2
    87ac:	mov	x20, x1
    87b0:	bl	13964 <PyInit__decimal@@Base+0xce50>
    87b4:	mov	x2, sp
    87b8:	add	x3, x29, #0x1c
    87bc:	mov	x0, x21
    87c0:	mov	x1, x20
    87c4:	bl	8830 <PyInit__decimal@@Base+0x1d1c>
    87c8:	mov	x20, x0
    87cc:	cbz	x0, 8818 <PyInit__decimal@@Base+0x1d04>
    87d0:	ldrh	w8, [x29, #28]
    87d4:	mov	w9, #0x1041                	// #4161
    87d8:	tst	w8, w9
    87dc:	b.eq	87f0 <PyInit__decimal@@Base+0x1cdc>  // b.none
    87e0:	add	x0, x20, #0x18
    87e4:	add	x2, x29, #0x1c
    87e8:	mov	w1, #0x100                 	// #256
    87ec:	bl	18e8c <PyInit__decimal@@Base+0x12378>
    87f0:	ldr	w8, [x29, #28]
    87f4:	mov	w9, #0x3be                 	// #958
    87f8:	mov	x0, x19
    87fc:	and	w1, w8, w9
    8800:	str	w1, [x29, #28]
    8804:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    8808:	cbz	w0, 8818 <PyInit__decimal@@Base+0x1d04>
    880c:	mov	x0, x20
    8810:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8814:	mov	x20, xzr
    8818:	mov	x0, x20
    881c:	ldp	x20, x19, [sp, #80]
    8820:	ldr	x21, [sp, #64]
    8824:	ldp	x29, x30, [sp, #48]
    8828:	add	sp, sp, #0x60
    882c:	ret
    8830:	stp	x29, x30, [sp, #-48]!
    8834:	stp	x22, x21, [sp, #16]
    8838:	stp	x20, x19, [sp, #32]
    883c:	mov	x29, sp
    8840:	mov	x20, x3
    8844:	mov	x21, x2
    8848:	mov	x22, x1
    884c:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    8850:	mov	x19, x0
    8854:	cbz	x0, 88c4 <PyInit__decimal@@Base+0x1db0>
    8858:	ldr	x8, [x22, #16]
    885c:	cbz	x8, 8898 <PyInit__decimal@@Base+0x1d84>
    8860:	cmp	x8, #0x0
    8864:	cneg	x2, x8, mi  // mi = first
    8868:	cmp	x2, #0x1
    886c:	lsr	x3, x8, #63
    8870:	b.ne	88ac <PyInit__decimal@@Base+0x1d98>  // b.any
    8874:	ldr	w2, [x22, #24]
    8878:	mov	x0, x19
    887c:	mov	w1, w3
    8880:	bl	88d8 <PyInit__decimal@@Base+0x1dc4>
    8884:	add	x0, x19, #0x18
    8888:	mov	x1, x21
    888c:	mov	x2, x20
    8890:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
    8894:	b	88c4 <PyInit__decimal@@Base+0x1db0>
    8898:	mov	x0, x19
    889c:	mov	w1, wzr
    88a0:	mov	w2, wzr
    88a4:	bl	88d8 <PyInit__decimal@@Base+0x1dc4>
    88a8:	b	88c4 <PyInit__decimal@@Base+0x1db0>
    88ac:	add	x0, x19, #0x18
    88b0:	add	x1, x22, #0x18
    88b4:	mov	w4, #0x40000000            	// #1073741824
    88b8:	mov	x5, x21
    88bc:	mov	x6, x20
    88c0:	bl	2319c <PyInit__decimal@@Base+0x1c688>
    88c4:	mov	x0, x19
    88c8:	ldp	x20, x19, [sp, #32]
    88cc:	ldp	x22, x21, [sp, #16]
    88d0:	ldp	x29, x30, [sp], #48
    88d4:	ret
    88d8:	stp	x29, x30, [sp, #-32]!
    88dc:	stp	x20, x19, [sp, #16]
    88e0:	mov	x29, sp
    88e4:	ldr	x8, [x0, #64]
    88e8:	mov	w9, w2
    88ec:	add	x20, x0, #0x18
    88f0:	mov	w10, #0x1                   	// #1
    88f4:	mov	x19, x0
    88f8:	str	x9, [x8]
    88fc:	str	x10, [x0, #48]
    8900:	mov	x0, x20
    8904:	bl	18a64 <PyInit__decimal@@Base+0x11f50>
    8908:	mov	x0, x20
    890c:	str	xzr, [x19, #32]
    8910:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
    8914:	ldp	x20, x19, [sp, #16]
    8918:	ldp	x29, x30, [sp], #32
    891c:	ret
    8920:	stp	x29, x30, [sp, #-16]!
    8924:	mov	x29, sp
    8928:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    892c:	ldr	x8, [x8, #2560]
    8930:	cbz	x8, 8950 <PyInit__decimal@@Base+0x1e3c>
    8934:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    8938:	add	x8, x8, #0xa20
    893c:	ldur	w9, [x8, #-16]
    8940:	tst	w9, w0
    8944:	b.ne	8968 <PyInit__decimal@@Base+0x1e54>  // b.any
    8948:	ldr	x9, [x8], #32
    894c:	cbnz	x9, 893c <PyInit__decimal@@Base+0x1e28>
    8950:	adrp	x0, 2c000 <PyInit__decimal@@Base+0x254ec>
    8954:	add	x0, x0, #0xf5e
    8958:	bl	8a34 <PyInit__decimal@@Base+0x1f20>
    895c:	mov	x0, xzr
    8960:	ldp	x29, x30, [sp], #16
    8964:	ret
    8968:	ldur	x0, [x8, #-8]
    896c:	ldp	x29, x30, [sp], #16
    8970:	ret
    8974:	stp	x29, x30, [sp, #-48]!
    8978:	str	x21, [sp, #16]
    897c:	stp	x20, x19, [sp, #32]
    8980:	mov	x29, sp
    8984:	mov	w20, w0
    8988:	mov	x0, xzr
    898c:	bl	6450 <PyList_New@plt>
    8990:	mov	x19, x0
    8994:	cbz	x0, 8a20 <PyInit__decimal@@Base+0x1f0c>
    8998:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    899c:	ldr	x8, [x8, #2880]
    89a0:	cbz	x8, 89d8 <PyInit__decimal@@Base+0x1ec4>
    89a4:	adrp	x21, 40000 <PyInit__decimal@@Base+0x394ec>
    89a8:	add	x21, x21, #0xb60
    89ac:	b	89b8 <PyInit__decimal@@Base+0x1ea4>
    89b0:	ldr	x8, [x21], #32
    89b4:	cbz	x8, 89d8 <PyInit__decimal@@Base+0x1ec4>
    89b8:	ldur	w8, [x21, #-16]
    89bc:	tst	w8, w20
    89c0:	b.eq	89b0 <PyInit__decimal@@Base+0x1e9c>  // b.none
    89c4:	ldur	x1, [x21, #-8]
    89c8:	mov	x0, x19
    89cc:	bl	6710 <PyList_Append@plt>
    89d0:	tbz	w0, #31, 89b0 <PyInit__decimal@@Base+0x1e9c>
    89d4:	b	8a14 <PyInit__decimal@@Base+0x1f00>
    89d8:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    89dc:	ldr	x8, [x8, #2592]
    89e0:	cbz	x8, 8a20 <PyInit__decimal@@Base+0x1f0c>
    89e4:	adrp	x21, 40000 <PyInit__decimal@@Base+0x394ec>
    89e8:	add	x21, x21, #0xa40
    89ec:	b	89f8 <PyInit__decimal@@Base+0x1ee4>
    89f0:	ldr	x8, [x21], #32
    89f4:	cbz	x8, 8a20 <PyInit__decimal@@Base+0x1f0c>
    89f8:	ldur	w8, [x21, #-16]
    89fc:	tst	w8, w20
    8a00:	b.eq	89f0 <PyInit__decimal@@Base+0x1edc>  // b.none
    8a04:	ldur	x1, [x21, #-8]
    8a08:	mov	x0, x19
    8a0c:	bl	6710 <PyList_Append@plt>
    8a10:	tbz	w0, #31, 89f0 <PyInit__decimal@@Base+0x1edc>
    8a14:	mov	x0, x19
    8a18:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8a1c:	mov	x19, xzr
    8a20:	mov	x0, x19
    8a24:	ldp	x20, x19, [sp, #32]
    8a28:	ldr	x21, [sp, #16]
    8a2c:	ldp	x29, x30, [sp], #48
    8a30:	ret
    8a34:	stp	x29, x30, [sp, #-16]!
    8a38:	mov	x29, sp
    8a3c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    8a40:	ldr	x8, [x8, #3920]
    8a44:	mov	x1, x0
    8a48:	ldr	x8, [x8]
    8a4c:	mov	x0, x8
    8a50:	bl	65f0 <PyErr_SetString@plt>
    8a54:	ldp	x29, x30, [sp], #16
    8a58:	ret
    8a5c:	cbz	x0, 8a70 <PyInit__decimal@@Base+0x1f5c>
    8a60:	stp	x29, x30, [sp, #-16]!
    8a64:	mov	x29, sp
    8a68:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8a6c:	ldp	x29, x30, [sp], #16
    8a70:	ret
    8a74:	sub	sp, sp, #0x80
    8a78:	stp	x29, x30, [sp, #80]
    8a7c:	stp	x22, x21, [sp, #96]
    8a80:	stp	x20, x19, [sp, #112]
    8a84:	add	x29, sp, #0x50
    8a88:	add	x21, x0, #0x18
    8a8c:	mov	x0, x21
    8a90:	mov	w22, w2
    8a94:	mov	x20, x1
    8a98:	str	wzr, [sp, #12]
    8a9c:	bl	183c8 <PyInit__decimal@@Base+0x118b4>
    8aa0:	cbz	w0, 8ac4 <PyInit__decimal@@Base+0x1fb0>
    8aa4:	mov	x0, x21
    8aa8:	bl	1837c <PyInit__decimal@@Base+0x11868>
    8aac:	cbz	w0, 8b10 <PyInit__decimal@@Base+0x1ffc>
    8ab0:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    8ab4:	ldr	x8, [x8, #3928]
    8ab8:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    8abc:	add	x1, x1, #0xf88
    8ac0:	b	8b20 <PyInit__decimal@@Base+0x200c>
    8ac4:	bl	17cbc <PyInit__decimal@@Base+0x111a8>
    8ac8:	cbz	x0, 8b44 <PyInit__decimal@@Base+0x2030>
    8acc:	ldp	q1, q0, [x20, #32]
    8ad0:	ldr	q2, [x20, #16]
    8ad4:	add	x2, sp, #0x10
    8ad8:	add	x3, sp, #0xc
    8adc:	mov	x1, x21
    8ae0:	mov	x19, x0
    8ae4:	stp	q1, q0, [sp, #32]
    8ae8:	str	q2, [sp, #16]
    8aec:	str	w22, [sp, #52]
    8af0:	bl	21058 <PyInit__decimal@@Base+0x1a544>
    8af4:	ldr	w1, [sp, #12]
    8af8:	mov	x0, x20
    8afc:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    8b00:	cbz	w0, 8b4c <PyInit__decimal@@Base+0x2038>
    8b04:	mov	x0, x19
    8b08:	bl	18558 <PyInit__decimal@@Base+0x11a44>
    8b0c:	b	8b28 <PyInit__decimal@@Base+0x2014>
    8b10:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    8b14:	ldr	x8, [x8, #3992]
    8b18:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    8b1c:	add	x1, x1, #0xfa6
    8b20:	ldr	x0, [x8]
    8b24:	bl	65f0 <PyErr_SetString@plt>
    8b28:	mov	x20, xzr
    8b2c:	mov	x0, x20
    8b30:	ldp	x20, x19, [sp, #112]
    8b34:	ldp	x22, x21, [sp, #96]
    8b38:	ldp	x29, x30, [sp, #80]
    8b3c:	add	sp, sp, #0x80
    8b40:	ret
    8b44:	bl	6580 <PyErr_NoMemory@plt>
    8b48:	b	8b28 <PyInit__decimal@@Base+0x2014>
    8b4c:	sub	x0, x29, #0x8
    8b50:	add	x4, sp, #0xc
    8b54:	mov	w2, #0x40000000            	// #1073741824
    8b58:	mov	x1, xzr
    8b5c:	mov	x3, x19
    8b60:	str	wzr, [sp, #12]
    8b64:	stur	xzr, [x29, #-8]
    8b68:	bl	22b58 <PyInit__decimal@@Base+0x1c044>
    8b6c:	cmn	x0, #0x1
    8b70:	b.eq	8be8 <PyInit__decimal@@Base+0x20d4>  // b.none
    8b74:	mov	x21, x0
    8b78:	bl	6540 <_PyLong_New@plt>
    8b7c:	mov	x20, x0
    8b80:	cbz	x0, 8bf0 <PyInit__decimal@@Base+0x20dc>
    8b84:	ldur	x22, [x29, #-8]
    8b88:	add	x0, x20, #0x18
    8b8c:	lsl	x2, x21, #2
    8b90:	mov	x1, x22
    8b94:	bl	6420 <memcpy@plt>
    8b98:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    8b9c:	ldr	x8, [x8, #1376]
    8ba0:	mov	x0, x22
    8ba4:	blr	x8
    8ba8:	add	x8, x20, #0x14
    8bac:	mov	x22, x21
    8bb0:	subs	x21, x21, #0x1
    8bb4:	b.lt	8bc0 <PyInit__decimal@@Base+0x20ac>  // b.tstop
    8bb8:	ldr	w9, [x8, x22, lsl #2]
    8bbc:	cbz	w9, 8bac <PyInit__decimal@@Base+0x2098>
    8bc0:	mov	x0, x19
    8bc4:	str	x22, [x20, #16]
    8bc8:	bl	18388 <PyInit__decimal@@Base+0x11874>
    8bcc:	cbz	w0, 8c00 <PyInit__decimal@@Base+0x20ec>
    8bd0:	mov	x0, x19
    8bd4:	bl	183d4 <PyInit__decimal@@Base+0x118c0>
    8bd8:	cbnz	w0, 8c00 <PyInit__decimal@@Base+0x20ec>
    8bdc:	neg	x8, x22
    8be0:	str	x8, [x20, #16]
    8be4:	b	8c00 <PyInit__decimal@@Base+0x20ec>
    8be8:	bl	6580 <PyErr_NoMemory@plt>
    8bec:	b	8b04 <PyInit__decimal@@Base+0x1ff0>
    8bf0:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    8bf4:	ldr	x8, [x8, #1376]
    8bf8:	ldur	x0, [x29, #-8]
    8bfc:	blr	x8
    8c00:	mov	x0, x19
    8c04:	bl	18558 <PyInit__decimal@@Base+0x11a44>
    8c08:	b	8b2c <PyInit__decimal@@Base+0x2018>
    8c0c:	sub	sp, sp, #0x120
    8c10:	stp	x29, x30, [sp, #224]
    8c14:	str	x28, [sp, #240]
    8c18:	stp	x22, x21, [sp, #256]
    8c1c:	stp	x20, x19, [sp, #272]
    8c20:	add	x29, sp, #0xe0
    8c24:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
    8c28:	mov	w11, #0x1                   	// #1
    8c2c:	str	x8, [x29, #24]
    8c30:	add	x8, x29, #0x18
    8c34:	stp	x11, x8, [x29, #-16]
    8c38:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
    8c3c:	mov	w10, #0x13                  	// #19
    8c40:	movk	x8, #0x1ccc, lsl #48
    8c44:	stur	x8, [x29, #-56]
    8c48:	sub	x8, x29, #0x38
    8c4c:	stp	xzr, x10, [x29, #-40]
    8c50:	stp	xzr, x10, [x29, #-96]
    8c54:	mov	w10, #0xa                   	// #10
    8c58:	mov	w9, #0x90                  	// #144
    8c5c:	stp	x11, x8, [x29, #-72]
    8c60:	mov	w8, #0x2                   	// #2
    8c64:	str	x10, [sp, #112]
    8c68:	add	x10, sp, #0x70
    8c6c:	mov	x22, x0
    8c70:	sturb	w9, [x29, #-48]
    8c74:	stur	x11, [x29, #-24]
    8c78:	sturb	w9, [x29, #-104]
    8c7c:	stur	x11, [x29, #-80]
    8c80:	strb	w9, [sp, #64]
    8c84:	stp	xzr, x8, [sp, #72]
    8c88:	stp	x11, x11, [sp, #88]
    8c8c:	str	x10, [sp, #104]
    8c90:	str	wzr, [sp, #60]
    8c94:	bl	792c <PyInit__decimal@@Base+0xe18>
    8c98:	cbz	x0, 8cd4 <PyInit__decimal@@Base+0x21c0>
    8c9c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    8ca0:	add	x21, x22, #0x18
    8ca4:	mov	x0, x21
    8ca8:	bl	183c8 <PyInit__decimal@@Base+0x118b4>
    8cac:	cbz	w0, 8cf4 <PyInit__decimal@@Base+0x21e0>
    8cb0:	mov	x0, x21
    8cb4:	bl	183bc <PyInit__decimal@@Base+0x118a8>
    8cb8:	cbz	w0, 8e24 <PyInit__decimal@@Base+0x2310>
    8cbc:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    8cc0:	ldr	x8, [x8, #3936]
    8cc4:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    8cc8:	add	x1, x1, #0xff4
    8ccc:	ldr	x0, [x8]
    8cd0:	bl	65f0 <PyErr_SetString@plt>
    8cd4:	mov	x21, #0xffffffffffffffff    	// #-1
    8cd8:	mov	x0, x21
    8cdc:	ldp	x20, x19, [sp, #272]
    8ce0:	ldp	x22, x21, [sp, #256]
    8ce4:	ldr	x28, [sp, #240]
    8ce8:	ldp	x29, x30, [sp, #224]
    8cec:	add	sp, sp, #0x120
    8cf0:	ret
    8cf4:	add	x0, sp, #0x8
    8cf8:	bl	13964 <PyInit__decimal@@Base+0xce50>
    8cfc:	bl	17cbc <PyInit__decimal@@Base+0x111a8>
    8d00:	mov	x19, x0
    8d04:	cbz	x0, 8e38 <PyInit__decimal@@Base+0x2324>
    8d08:	bl	17cbc <PyInit__decimal@@Base+0x111a8>
    8d0c:	mov	x20, x0
    8d10:	cbz	x0, 8e3c <PyInit__decimal@@Base+0x2328>
    8d14:	ldr	x8, [x22, #32]
    8d18:	sub	x9, x29, #0x68
    8d1c:	add	x10, sp, #0x40
    8d20:	add	x2, sp, #0x8
    8d24:	cmp	x8, #0x0
    8d28:	cneg	x1, x8, mi  // mi = first
    8d2c:	add	x3, sp, #0x3c
    8d30:	mov	x0, x20
    8d34:	csel	x22, x10, x9, ge  // ge = tcont
    8d38:	bl	18f28 <PyInit__decimal@@Base+0x12414>
    8d3c:	sub	x3, x29, #0x30
    8d40:	add	x4, sp, #0x8
    8d44:	add	x5, sp, #0x3c
    8d48:	mov	x0, x19
    8d4c:	mov	x1, x22
    8d50:	mov	x2, x20
    8d54:	bl	209e0 <PyInit__decimal@@Base+0x19ecc>
    8d58:	add	x2, sp, #0x3c
    8d5c:	mov	x0, x20
    8d60:	mov	x1, x21
    8d64:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
    8d68:	cbz	w0, 8e3c <PyInit__decimal@@Base+0x2328>
    8d6c:	mov	x0, x20
    8d70:	str	xzr, [x20, #8]
    8d74:	bl	189d8 <PyInit__decimal@@Base+0x11ec4>
    8d78:	mov	x8, #0x14                  	// #20
    8d7c:	mov	x9, #0xffec                	// #65516
    8d80:	movk	x8, #0xa764, lsl #16
    8d84:	movk	x9, #0x589b, lsl #16
    8d88:	movk	x8, #0xb6b3, lsl #32
    8d8c:	movk	x9, #0x494c, lsl #32
    8d90:	movk	x8, #0xde0, lsl #48
    8d94:	movk	x9, #0xf21f, lsl #48
    8d98:	add	x3, sp, #0x8
    8d9c:	add	x4, sp, #0x3c
    8da0:	mov	x0, x20
    8da4:	mov	x1, x20
    8da8:	mov	x2, x19
    8dac:	stp	x8, x8, [sp, #8]
    8db0:	str	x9, [sp, #24]
    8db4:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
    8db8:	sub	x2, x29, #0x30
    8dbc:	add	x3, sp, #0x8
    8dc0:	add	x4, sp, #0x3c
    8dc4:	mov	x0, x20
    8dc8:	mov	x1, x20
    8dcc:	bl	21080 <PyInit__decimal@@Base+0x1a56c>
    8dd0:	add	x1, sp, #0x3c
    8dd4:	mov	x0, x20
    8dd8:	bl	19444 <PyInit__decimal@@Base+0x12930>
    8ddc:	mov	x22, x0
    8de0:	mov	x0, x21
    8de4:	bl	18394 <PyInit__decimal@@Base+0x11880>
    8de8:	cmp	w0, #0x0
    8dec:	ldr	w8, [sp, #60]
    8df0:	cneg	x9, x22, eq  // eq = none
    8df4:	cmn	x9, #0x1
    8df8:	mov	x10, #0xfffffffffffffffe    	// #-2
    8dfc:	csel	x21, x10, x9, eq  // eq = none
    8e00:	cbz	w8, 8e44 <PyInit__decimal@@Base+0x2330>
    8e04:	tbnz	w8, #9, 8e3c <PyInit__decimal@@Base+0x2328>
    8e08:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    8e0c:	ldr	x8, [x8, #3920]
    8e10:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    8e14:	add	x1, x1, #0x16
    8e18:	ldr	x0, [x8]
    8e1c:	bl	65f0 <PyErr_SetString@plt>
    8e20:	b	8e40 <PyInit__decimal@@Base+0x232c>
    8e24:	mov	x0, x21
    8e28:	bl	1837c <PyInit__decimal@@Base+0x11868>
    8e2c:	cbz	w0, 8e60 <PyInit__decimal@@Base+0x234c>
    8e30:	mov	x21, xzr
    8e34:	b	8cd8 <PyInit__decimal@@Base+0x21c4>
    8e38:	mov	x20, xzr
    8e3c:	bl	6580 <PyErr_NoMemory@plt>
    8e40:	mov	x21, #0xffffffffffffffff    	// #-1
    8e44:	cbz	x19, 8e50 <PyInit__decimal@@Base+0x233c>
    8e48:	mov	x0, x19
    8e4c:	bl	18558 <PyInit__decimal@@Base+0x11a44>
    8e50:	cbz	x20, 8cd8 <PyInit__decimal@@Base+0x21c4>
    8e54:	mov	x0, x20
    8e58:	bl	18558 <PyInit__decimal@@Base+0x11a44>
    8e5c:	b	8cd8 <PyInit__decimal@@Base+0x21c4>
    8e60:	mov	x0, x21
    8e64:	bl	184cc <PyInit__decimal@@Base+0x119b8>
    8e68:	mov	w8, #0xcb2f                	// #52015
    8e6c:	movk	w8, #0x4, lsl #16
    8e70:	smull	x21, w0, w8
    8e74:	b	8cd8 <PyInit__decimal@@Base+0x21c4>
    8e78:	stp	x29, x30, [sp, #-48]!
    8e7c:	str	x21, [sp, #16]
    8e80:	stp	x20, x19, [sp, #32]
    8e84:	mov	x29, sp
    8e88:	mov	x19, x1
    8e8c:	mov	x21, x0
    8e90:	mov	w1, #0x7f                  	// #127
    8e94:	mov	x0, x19
    8e98:	bl	69f0 <PyUnicode_New@plt>
    8e9c:	mov	x20, x0
    8ea0:	cbz	x0, 8ed0 <PyInit__decimal@@Base+0x23bc>
    8ea4:	ldr	w8, [x20, #32]
    8ea8:	tbnz	w8, #5, 8eb4 <PyInit__decimal@@Base+0x23a0>
    8eac:	ldr	x0, [x20, #72]
    8eb0:	b	8ec4 <PyInit__decimal@@Base+0x23b0>
    8eb4:	add	x9, x20, #0x30
    8eb8:	add	x10, x20, #0x48
    8ebc:	tst	w8, #0x40
    8ec0:	csel	x0, x10, x9, eq  // eq = none
    8ec4:	mov	x1, x21
    8ec8:	mov	x2, x19
    8ecc:	bl	6420 <memcpy@plt>
    8ed0:	mov	x0, x20
    8ed4:	ldp	x20, x19, [sp, #32]
    8ed8:	ldr	x21, [sp, #16]
    8edc:	ldp	x29, x30, [sp], #48
    8ee0:	ret
    8ee4:	stp	d9, d8, [sp, #-80]!
    8ee8:	stp	x29, x30, [sp, #16]
    8eec:	stp	x24, x23, [sp, #32]
    8ef0:	stp	x22, x21, [sp, #48]
    8ef4:	stp	x20, x19, [sp, #64]
    8ef8:	mov	x29, sp
    8efc:	str	x2, [x0]
    8f00:	mov	x20, x0
    8f04:	ldr	x0, [x3, #8]
    8f08:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    8f0c:	add	x8, x8, #0x318
    8f10:	mov	x23, x3
    8f14:	mov	x19, x2
    8f18:	cmp	x0, x8
    8f1c:	mov	x21, x1
    8f20:	b.eq	8f3c <PyInit__decimal@@Base+0x2428>  // b.none
    8f24:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    8f28:	add	x1, x1, #0x318
    8f2c:	mov	x22, x5
    8f30:	mov	w24, w4
    8f34:	bl	6960 <PyType_IsSubtype@plt>
    8f38:	cbz	w0, 8f94 <PyInit__decimal@@Base+0x2480>
    8f3c:	mov	x0, x23
    8f40:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    8f44:	str	x23, [x21]
    8f48:	ldr	x8, [x21]
    8f4c:	mov	w0, wzr
    8f50:	cbz	x8, 8f7c <PyInit__decimal@@Base+0x2468>
    8f54:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x384ec>
    8f58:	ldr	x9, [x9, #3912]
    8f5c:	cmp	x8, x9
    8f60:	b.eq	8f7c <PyInit__decimal@@Base+0x2468>  // b.none
    8f64:	ldr	x8, [x20]
    8f68:	cmp	x8, x19
    8f6c:	b.ne	8f78 <PyInit__decimal@@Base+0x2464>  // b.any
    8f70:	mov	x0, x19
    8f74:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    8f78:	mov	w0, #0x1                   	// #1
    8f7c:	ldp	x20, x19, [sp, #64]
    8f80:	ldp	x22, x21, [sp, #48]
    8f84:	ldp	x24, x23, [sp, #32]
    8f88:	ldp	x29, x30, [sp, #16]
    8f8c:	ldp	d9, d8, [sp], #80
    8f90:	ret
    8f94:	ldr	x0, [x23, #8]
    8f98:	ldrb	w8, [x0, #171]
    8f9c:	tbnz	w8, #0, 8fe4 <PyInit__decimal@@Base+0x24d0>
    8fa0:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    8fa4:	ldr	x8, [x8, #3864]
    8fa8:	cmp	x0, x8
    8fac:	b.eq	8fc0 <PyInit__decimal@@Base+0x24ac>  // b.none
    8fb0:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
    8fb4:	ldr	x1, [x1, #3864]
    8fb8:	bl	6960 <PyType_IsSubtype@plt>
    8fbc:	cbz	w0, 9028 <PyInit__decimal@@Base+0x2514>
    8fc0:	orr	w8, w24, #0x1
    8fc4:	cmp	w8, #0x3
    8fc8:	b.eq	9000 <PyInit__decimal@@Base+0x24ec>  // b.none
    8fcc:	mov	w1, #0x400                 	// #1024
    8fd0:	mov	x0, x22
    8fd4:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    8fd8:	cbz	w0, 9000 <PyInit__decimal@@Base+0x24ec>
    8fdc:	str	xzr, [x21]
    8fe0:	b	8f48 <PyInit__decimal@@Base+0x2434>
    8fe4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    8fe8:	add	x0, x0, #0x318
    8fec:	mov	x1, x23
    8ff0:	mov	x2, x22
    8ff4:	bl	8760 <PyInit__decimal@@Base+0x1c4c>
    8ff8:	str	x0, [x21]
    8ffc:	b	8f48 <PyInit__decimal@@Base+0x2434>
    9000:	ldr	w8, [x22, #44]
    9004:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    9008:	add	x0, x0, #0x318
    900c:	mov	x1, x23
    9010:	orr	w8, w8, #0x400
    9014:	mov	x2, x22
    9018:	str	w8, [x22, #44]
    901c:	bl	9178 <PyInit__decimal@@Base+0x2664>
    9020:	str	x0, [x21]
    9024:	b	8f48 <PyInit__decimal@@Base+0x2434>
    9028:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    902c:	ldr	x0, [x23, #8]
    9030:	ldr	x8, [x8, #3952]
    9034:	cmp	x0, x8
    9038:	b.eq	904c <PyInit__decimal@@Base+0x2538>  // b.none
    903c:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
    9040:	ldr	x1, [x1, #3952]
    9044:	bl	6960 <PyType_IsSubtype@plt>
    9048:	cbz	w0, 90c4 <PyInit__decimal@@Base+0x25b0>
    904c:	orr	w8, w24, #0x1
    9050:	cmp	w8, #0x3
    9054:	b.ne	90c4 <PyInit__decimal@@Base+0x25b0>  // b.any
    9058:	mov	x0, x23
    905c:	bl	6990 <PyComplex_AsCComplex@plt>
    9060:	mov	v8.16b, v0.16b
    9064:	fmov	d0, #-1.000000000000000000e+00
    9068:	fcmp	d8, d0
    906c:	mov	v9.16b, v1.16b
    9070:	b.ne	907c <PyInit__decimal@@Base+0x2568>  // b.any
    9074:	bl	6780 <PyErr_Occurred@plt>
    9078:	cbnz	x0, 8fdc <PyInit__decimal@@Base+0x24c8>
    907c:	fcmp	d9, #0.0
    9080:	b.ne	9128 <PyInit__decimal@@Base+0x2614>  // b.any
    9084:	mov	v0.16b, v8.16b
    9088:	bl	6650 <PyFloat_FromDouble@plt>
    908c:	cbz	x0, 8fdc <PyInit__decimal@@Base+0x24c8>
    9090:	ldr	w8, [x22, #44]
    9094:	mov	x23, x0
    9098:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    909c:	add	x0, x0, #0x318
    90a0:	orr	w8, w8, #0x400
    90a4:	mov	x1, x23
    90a8:	mov	x2, x22
    90ac:	str	w8, [x22, #44]
    90b0:	bl	9178 <PyInit__decimal@@Base+0x2664>
    90b4:	str	x0, [x21]
    90b8:	mov	x0, x23
    90bc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    90c0:	b	8f48 <PyInit__decimal@@Base+0x2434>
    90c4:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    90c8:	ldr	x1, [x8, #1456]
    90cc:	mov	x0, x23
    90d0:	bl	6600 <PyObject_IsInstance@plt>
    90d4:	tbnz	w0, #31, 8fdc <PyInit__decimal@@Base+0x24c8>
    90d8:	cbz	w0, 9128 <PyInit__decimal@@Base+0x2614>
    90dc:	mov	x0, x23
    90e0:	mov	x1, x22
    90e4:	bl	9480 <PyInit__decimal@@Base+0x296c>
    90e8:	str	x0, [x21]
    90ec:	cbz	x0, 8f48 <PyInit__decimal@@Base+0x2434>
    90f0:	add	x0, x19, #0x18
    90f4:	bl	183c8 <PyInit__decimal@@Base+0x118b4>
    90f8:	cbnz	w0, 8f48 <PyInit__decimal@@Base+0x2434>
    90fc:	mov	x0, x19
    9100:	mov	x1, x23
    9104:	mov	x2, x22
    9108:	bl	94dc <PyInit__decimal@@Base+0x29c8>
    910c:	str	x0, [x20]
    9110:	cbnz	x0, 8f48 <PyInit__decimal@@Base+0x2434>
    9114:	ldr	x0, [x21]
    9118:	cbz	x0, 8f48 <PyInit__decimal@@Base+0x2434>
    911c:	str	xzr, [x21]
    9120:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    9124:	b	8f48 <PyInit__decimal@@Base+0x2434>
    9128:	adrp	x22, 3f000 <PyInit__decimal@@Base+0x384ec>
    912c:	ldr	x22, [x22, #3912]
    9130:	mov	x0, x22
    9134:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    9138:	str	x22, [x21]
    913c:	b	8f48 <PyInit__decimal@@Base+0x2434>
    9140:	stp	x29, x30, [sp, #-16]!
    9144:	mov	x29, sp
    9148:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    914c:	ldr	x0, [x0, #4024]
    9150:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    9154:	ldp	x29, x30, [sp], #16
    9158:	ret
    915c:	stp	x29, x30, [sp, #-16]!
    9160:	mov	x29, sp
    9164:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    9168:	ldr	x0, [x0, #3976]
    916c:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    9170:	ldp	x29, x30, [sp], #16
    9174:	ret
    9178:	sub	sp, sp, #0xa0
    917c:	stp	x29, x30, [sp, #96]
    9180:	stp	x24, x23, [sp, #112]
    9184:	stp	x22, x21, [sp, #128]
    9188:	stp	x20, x19, [sp, #144]
    918c:	add	x29, sp, #0x60
    9190:	stur	wzr, [x29, #-4]
    9194:	ldr	x8, [x1, #8]
    9198:	mov	x19, x2
    919c:	mov	x21, x1
    91a0:	mov	x20, x0
    91a4:	ldrb	w9, [x8, #171]
    91a8:	tbnz	w9, #0, 933c <PyInit__decimal@@Base+0x2828>
    91ac:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x384ec>
    91b0:	ldr	x9, [x9, #3864]
    91b4:	cmp	x8, x9
    91b8:	b.eq	91d0 <PyInit__decimal@@Base+0x26bc>  // b.none
    91bc:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
    91c0:	ldr	x1, [x1, #3864]
    91c4:	mov	x0, x8
    91c8:	bl	6960 <PyType_IsSubtype@plt>
    91cc:	cbz	w0, 935c <PyInit__decimal@@Base+0x2848>
    91d0:	mov	x0, x21
    91d4:	bl	6860 <PyFloat_AsDouble@plt>
    91d8:	fmov	d1, #-1.000000000000000000e+00
    91dc:	fcmp	d0, d1
    91e0:	str	q0, [sp, #16]
    91e4:	b.ne	91f4 <PyInit__decimal@@Base+0x26e0>  // b.any
    91e8:	bl	6780 <PyErr_Occurred@plt>
    91ec:	ldr	q0, [sp, #16]
    91f0:	cbnz	x0, 9354 <PyInit__decimal@@Base+0x2840>
    91f4:	movi	v2.2d, #0x0
    91f8:	fmov	d1, #1.000000000000000000e+00
    91fc:	fneg	v2.2d, v2.2d
    9200:	fcmp	d0, d0
    9204:	bit	v1.16b, v0.16b, v2.16b
    9208:	str	q1, [sp]
    920c:	b.vs	937c <PyInit__decimal@@Base+0x2868>
    9210:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
    9214:	fabs	d2, d0
    9218:	fmov	d1, x8
    921c:	fcmp	d2, d1
    9220:	b.eq	937c <PyInit__decimal@@Base+0x2868>  // b.none
    9224:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    9228:	ldr	x8, [x8, #1432]
    922c:	mov	x0, x21
    9230:	blr	x8
    9234:	cbz	x0, 9354 <PyInit__decimal@@Base+0x2840>
    9238:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    923c:	ldr	x8, [x8, #1440]
    9240:	mov	x1, xzr
    9244:	mov	x21, x0
    9248:	blr	x8
    924c:	mov	x22, x0
    9250:	mov	x0, x21
    9254:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    9258:	cbz	x22, 9354 <PyInit__decimal@@Base+0x2840>
    925c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    9260:	ldp	x23, x0, [x22, #24]
    9264:	ldr	x8, [x8, #1448]
    9268:	mov	x1, xzr
    926c:	blr	x8
    9270:	cbz	x0, 93c0 <PyInit__decimal@@Base+0x28ac>
    9274:	mov	x24, x0
    9278:	bl	6690 <PyLong_AsSsize_t@plt>
    927c:	mov	x21, x0
    9280:	mov	x0, x24
    9284:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    9288:	cmn	x21, #0x1
    928c:	b.eq	93b8 <PyInit__decimal@@Base+0x28a4>  // b.none
    9290:	mov	x0, x20
    9294:	mov	x1, x23
    9298:	mov	x2, x19
    929c:	bl	8760 <PyInit__decimal@@Base+0x1c4c>
    92a0:	mov	x20, x0
    92a4:	mov	x0, x22
    92a8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    92ac:	cbz	x20, 93e8 <PyInit__decimal@@Base+0x28d4>
    92b0:	bl	17cbc <PyInit__decimal@@Base+0x111a8>
    92b4:	cbz	x0, 93d8 <PyInit__decimal@@Base+0x28c4>
    92b8:	mov	x22, x0
    92bc:	bl	17cbc <PyInit__decimal@@Base+0x111a8>
    92c0:	cbz	x0, 93d0 <PyInit__decimal@@Base+0x28bc>
    92c4:	mov	x23, x0
    92c8:	add	x0, sp, #0x28
    92cc:	sub	x24, x21, #0x1
    92d0:	bl	13964 <PyInit__decimal@@Base+0xce50>
    92d4:	add	x2, sp, #0x28
    92d8:	sub	x3, x29, #0x4
    92dc:	mov	w1, #0x5                   	// #5
    92e0:	mov	x0, x22
    92e4:	bl	19184 <PyInit__decimal@@Base+0x12670>
    92e8:	add	x2, sp, #0x28
    92ec:	sub	x3, x29, #0x4
    92f0:	mov	x0, x23
    92f4:	mov	x1, x24
    92f8:	bl	190f4 <PyInit__decimal@@Base+0x125e0>
    92fc:	add	x3, sp, #0x28
    9300:	sub	x4, x29, #0x4
    9304:	mov	x0, x22
    9308:	mov	x1, x22
    930c:	mov	x2, x23
    9310:	bl	20014 <PyInit__decimal@@Base+0x19500>
    9314:	ldur	w1, [x29, #-4]
    9318:	mov	x0, x19
    931c:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    9320:	cbz	w0, 9404 <PyInit__decimal@@Base+0x28f0>
    9324:	mov	x0, x22
    9328:	bl	18558 <PyInit__decimal@@Base+0x11a44>
    932c:	mov	x0, x23
    9330:	bl	18558 <PyInit__decimal@@Base+0x11a44>
    9334:	mov	x0, x20
    9338:	b	93c4 <PyInit__decimal@@Base+0x28b0>
    933c:	mov	x0, x20
    9340:	mov	x1, x21
    9344:	mov	x2, x19
    9348:	bl	8760 <PyInit__decimal@@Base+0x1c4c>
    934c:	mov	x20, x0
    9350:	b	93e8 <PyInit__decimal@@Base+0x28d4>
    9354:	mov	x20, xzr
    9358:	b	93e8 <PyInit__decimal@@Base+0x28d4>
    935c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    9360:	ldr	x8, [x8, #3936]
    9364:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    9368:	add	x1, x1, #0x3e
    936c:	ldr	x0, [x8]
    9370:	bl	65f0 <PyErr_SetString@plt>
    9374:	mov	x20, xzr
    9378:	b	93e8 <PyInit__decimal@@Base+0x28d4>
    937c:	mov	x0, x20
    9380:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    9384:	mov	x20, x0
    9388:	cbz	x0, 93e8 <PyInit__decimal@@Base+0x28d4>
    938c:	ldr	q0, [sp, #16]
    9390:	add	x0, x20, #0x18
    9394:	fcmp	d0, d0
    9398:	b.vs	9470 <PyInit__decimal@@Base+0x295c>
    939c:	ldr	q1, [sp]
    93a0:	fmov	d0, #1.000000000000000000e+00
    93a4:	mov	w2, #0x2                   	// #2
    93a8:	fcmp	d1, d0
    93ac:	cset	w1, ne  // ne = any
    93b0:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
    93b4:	b	93e8 <PyInit__decimal@@Base+0x28d4>
    93b8:	bl	6780 <PyErr_Occurred@plt>
    93bc:	cbz	x0, 9290 <PyInit__decimal@@Base+0x277c>
    93c0:	mov	x0, x22
    93c4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    93c8:	mov	x20, xzr
    93cc:	b	93e8 <PyInit__decimal@@Base+0x28d4>
    93d0:	mov	x0, x22
    93d4:	bl	18558 <PyInit__decimal@@Base+0x11a44>
    93d8:	mov	x0, x20
    93dc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    93e0:	bl	6580 <PyErr_NoMemory@plt>
    93e4:	mov	x20, xzr
    93e8:	mov	x0, x20
    93ec:	ldp	x20, x19, [sp, #144]
    93f0:	ldp	x22, x21, [sp, #128]
    93f4:	ldp	x24, x23, [sp, #112]
    93f8:	ldp	x29, x30, [sp, #96]
    93fc:	add	sp, sp, #0xa0
    9400:	ret
    9404:	add	x24, x20, #0x18
    9408:	add	x3, sp, #0x28
    940c:	sub	x4, x29, #0x4
    9410:	mov	x0, x24
    9414:	mov	x1, x24
    9418:	mov	x2, x22
    941c:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
    9420:	mov	x0, x22
    9424:	bl	18558 <PyInit__decimal@@Base+0x11a44>
    9428:	mov	x0, x23
    942c:	bl	18558 <PyInit__decimal@@Base+0x11a44>
    9430:	ldur	w1, [x29, #-4]
    9434:	mov	x0, x19
    9438:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    943c:	cbz	w0, 9448 <PyInit__decimal@@Base+0x2934>
    9440:	mov	x0, x20
    9444:	b	93c4 <PyInit__decimal@@Base+0x28b0>
    9448:	ldr	q1, [sp]
    944c:	fmov	d0, #1.000000000000000000e+00
    9450:	mov	x0, x24
    9454:	fcmp	d1, d0
    9458:	cset	w1, ne  // ne = any
    945c:	bl	18964 <PyInit__decimal@@Base+0x11e50>
    9460:	mov	w8, #0x1                   	// #1
    9464:	sub	x8, x8, x21
    9468:	str	x8, [x24, #8]
    946c:	b	93e8 <PyInit__decimal@@Base+0x28d4>
    9470:	mov	w2, #0x4                   	// #4
    9474:	mov	w1, wzr
    9478:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
    947c:	b	93e8 <PyInit__decimal@@Base+0x28d4>
    9480:	stp	x29, x30, [sp, #-32]!
    9484:	stp	x20, x19, [sp, #16]
    9488:	mov	x29, sp
    948c:	mov	x19, x1
    9490:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    9494:	add	x1, x1, #0x5c
    9498:	bl	6520 <PyObject_GetAttrString@plt>
    949c:	cbz	x0, 94c8 <PyInit__decimal@@Base+0x29b4>
    94a0:	mov	x20, x0
    94a4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    94a8:	add	x0, x0, #0x318
    94ac:	mov	x1, x20
    94b0:	mov	x2, x19
    94b4:	bl	8760 <PyInit__decimal@@Base+0x1c4c>
    94b8:	mov	x19, x0
    94bc:	mov	x0, x20
    94c0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    94c4:	b	94cc <PyInit__decimal@@Base+0x29b8>
    94c8:	mov	x19, xzr
    94cc:	mov	x0, x19
    94d0:	ldp	x20, x19, [sp, #16]
    94d4:	ldp	x29, x30, [sp], #32
    94d8:	ret
    94dc:	sub	sp, sp, #0x70
    94e0:	stp	x29, x30, [sp, #64]
    94e4:	stp	x22, x21, [sp, #80]
    94e8:	stp	x20, x19, [sp, #96]
    94ec:	add	x29, sp, #0x40
    94f0:	mov	x8, x1
    94f4:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    94f8:	mov	x19, x0
    94fc:	add	x1, x1, #0x66
    9500:	mov	x0, x8
    9504:	mov	x20, x2
    9508:	stur	wzr, [x29, #-4]
    950c:	bl	6520 <PyObject_GetAttrString@plt>
    9510:	cbz	x0, 95d4 <PyInit__decimal@@Base+0x2ac0>
    9514:	mov	x21, x0
    9518:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    951c:	add	x0, x0, #0x318
    9520:	mov	x1, x21
    9524:	mov	x2, x20
    9528:	bl	8760 <PyInit__decimal@@Base+0x1c4c>
    952c:	mov	x20, x0
    9530:	mov	x0, x21
    9534:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    9538:	cbz	x20, 95d4 <PyInit__decimal@@Base+0x2ac0>
    953c:	add	x0, x19, #0x18
    9540:	bl	19b44 <PyInit__decimal@@Base+0x13030>
    9544:	cbz	x0, 95c8 <PyInit__decimal@@Base+0x2ab4>
    9548:	mov	x21, x0
    954c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    9550:	add	x0, x0, #0x318
    9554:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    9558:	mov	x19, x0
    955c:	cbz	x0, 95f0 <PyInit__decimal@@Base+0x2adc>
    9560:	add	x0, sp, #0x8
    9564:	bl	13964 <PyInit__decimal@@Base+0xce50>
    9568:	ldr	x22, [x21, #8]
    956c:	add	x0, x19, #0x18
    9570:	add	x2, x20, #0x18
    9574:	add	x3, sp, #0x8
    9578:	sub	x4, x29, #0x4
    957c:	mov	x1, x21
    9580:	str	xzr, [x21, #8]
    9584:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
    9588:	mov	x0, x20
    958c:	str	x22, [x19, #32]
    9590:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    9594:	mov	x0, x21
    9598:	bl	18558 <PyInit__decimal@@Base+0x11a44>
    959c:	ldur	w8, [x29, #-4]
    95a0:	cbz	w8, 95d8 <PyInit__decimal@@Base+0x2ac4>
    95a4:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    95a8:	ldr	x8, [x8, #3928]
    95ac:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    95b0:	add	x1, x1, #0x72
    95b4:	ldr	x0, [x8]
    95b8:	bl	65f0 <PyErr_SetString@plt>
    95bc:	mov	x0, x19
    95c0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    95c4:	b	95d4 <PyInit__decimal@@Base+0x2ac0>
    95c8:	mov	x0, x20
    95cc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    95d0:	bl	6580 <PyErr_NoMemory@plt>
    95d4:	mov	x19, xzr
    95d8:	mov	x0, x19
    95dc:	ldp	x20, x19, [sp, #96]
    95e0:	ldp	x22, x21, [sp, #80]
    95e4:	ldp	x29, x30, [sp, #64]
    95e8:	add	sp, sp, #0x70
    95ec:	ret
    95f0:	mov	x0, x20
    95f4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    95f8:	mov	x0, x21
    95fc:	bl	18558 <PyInit__decimal@@Base+0x11a44>
    9600:	b	95d8 <PyInit__decimal@@Base+0x2ac4>
    9604:	sub	sp, sp, #0x30
    9608:	stp	x29, x30, [sp, #16]
    960c:	stp	x20, x19, [sp, #32]
    9610:	add	x29, sp, #0x10
    9614:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    9618:	ldr	x20, [x20, #4008]
    961c:	mov	x8, x2
    9620:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    9624:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    9628:	mov	x19, x0
    962c:	add	x2, x2, #0x42c
    9630:	add	x3, x3, #0x598
    9634:	add	x4, sp, #0x8
    9638:	mov	x0, x1
    963c:	mov	x1, x8
    9640:	str	x20, [sp, #8]
    9644:	str	wzr, [sp, #4]
    9648:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    964c:	cbz	w0, 96f0 <PyInit__decimal@@Base+0x2bdc>
    9650:	ldr	x8, [sp, #8]
    9654:	cmp	x8, x20
    9658:	b.eq	969c <PyInit__decimal@@Base+0x2b88>  // b.none
    965c:	ldr	x0, [x8, #8]
    9660:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    9664:	add	x8, x8, #0x4b8
    9668:	cmp	x0, x8
    966c:	b.eq	96ac <PyInit__decimal@@Base+0x2b98>  // b.none
    9670:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    9674:	add	x1, x1, #0x4b8
    9678:	bl	6960 <PyType_IsSubtype@plt>
    967c:	cbnz	w0, 96ac <PyInit__decimal@@Base+0x2b98>
    9680:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    9684:	ldr	x8, [x8, #3936]
    9688:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    968c:	add	x1, x1, #0x2e1
    9690:	ldr	x0, [x8]
    9694:	bl	65f0 <PyErr_SetString@plt>
    9698:	b	96f0 <PyInit__decimal@@Base+0x2bdc>
    969c:	bl	792c <PyInit__decimal@@Base+0xe18>
    96a0:	str	x0, [sp, #8]
    96a4:	cbz	x0, 96f0 <PyInit__decimal@@Base+0x2bdc>
    96a8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    96ac:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    96b0:	add	x0, x0, #0x318
    96b4:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    96b8:	mov	x20, x0
    96bc:	cbz	x0, 96f4 <PyInit__decimal@@Base+0x2be0>
    96c0:	ldr	x8, [sp, #8]
    96c4:	add	x0, x20, #0x18
    96c8:	add	x1, x19, #0x18
    96cc:	add	x3, sp, #0x4
    96d0:	add	x2, x8, #0x10
    96d4:	bl	1da34 <PyInit__decimal@@Base+0x16f20>
    96d8:	ldr	x0, [sp, #8]
    96dc:	ldr	w1, [sp, #4]
    96e0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    96e4:	cbz	w0, 96f4 <PyInit__decimal@@Base+0x2be0>
    96e8:	mov	x0, x20
    96ec:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    96f0:	mov	x20, xzr
    96f4:	mov	x0, x20
    96f8:	ldp	x20, x19, [sp, #32]
    96fc:	ldp	x29, x30, [sp, #16]
    9700:	add	sp, sp, #0x30
    9704:	ret
    9708:	sub	sp, sp, #0x30
    970c:	stp	x29, x30, [sp, #16]
    9710:	stp	x20, x19, [sp, #32]
    9714:	add	x29, sp, #0x10
    9718:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    971c:	ldr	x20, [x20, #4008]
    9720:	mov	x8, x2
    9724:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    9728:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    972c:	mov	x19, x0
    9730:	add	x2, x2, #0x42c
    9734:	add	x3, x3, #0x5a8
    9738:	add	x4, sp, #0x8
    973c:	mov	x0, x1
    9740:	mov	x1, x8
    9744:	str	x20, [sp, #8]
    9748:	str	wzr, [sp, #4]
    974c:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    9750:	cbz	w0, 97f4 <PyInit__decimal@@Base+0x2ce0>
    9754:	ldr	x8, [sp, #8]
    9758:	cmp	x8, x20
    975c:	b.eq	97a0 <PyInit__decimal@@Base+0x2c8c>  // b.none
    9760:	ldr	x0, [x8, #8]
    9764:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    9768:	add	x8, x8, #0x4b8
    976c:	cmp	x0, x8
    9770:	b.eq	97b0 <PyInit__decimal@@Base+0x2c9c>  // b.none
    9774:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    9778:	add	x1, x1, #0x4b8
    977c:	bl	6960 <PyType_IsSubtype@plt>
    9780:	cbnz	w0, 97b0 <PyInit__decimal@@Base+0x2c9c>
    9784:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    9788:	ldr	x8, [x8, #3936]
    978c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    9790:	add	x1, x1, #0x2e1
    9794:	ldr	x0, [x8]
    9798:	bl	65f0 <PyErr_SetString@plt>
    979c:	b	97f4 <PyInit__decimal@@Base+0x2ce0>
    97a0:	bl	792c <PyInit__decimal@@Base+0xe18>
    97a4:	str	x0, [sp, #8]
    97a8:	cbz	x0, 97f4 <PyInit__decimal@@Base+0x2ce0>
    97ac:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    97b0:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    97b4:	add	x0, x0, #0x318
    97b8:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    97bc:	mov	x20, x0
    97c0:	cbz	x0, 97f8 <PyInit__decimal@@Base+0x2ce4>
    97c4:	ldr	x8, [sp, #8]
    97c8:	add	x0, x20, #0x18
    97cc:	add	x1, x19, #0x18
    97d0:	add	x3, sp, #0x4
    97d4:	add	x2, x8, #0x10
    97d8:	bl	1e92c <PyInit__decimal@@Base+0x17e18>
    97dc:	ldr	x0, [sp, #8]
    97e0:	ldr	w1, [sp, #4]
    97e4:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    97e8:	cbz	w0, 97f8 <PyInit__decimal@@Base+0x2ce4>
    97ec:	mov	x0, x20
    97f0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    97f4:	mov	x20, xzr
    97f8:	mov	x0, x20
    97fc:	ldp	x20, x19, [sp, #32]
    9800:	ldp	x29, x30, [sp, #16]
    9804:	add	sp, sp, #0x30
    9808:	ret
    980c:	sub	sp, sp, #0x30
    9810:	stp	x29, x30, [sp, #16]
    9814:	stp	x20, x19, [sp, #32]
    9818:	add	x29, sp, #0x10
    981c:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    9820:	ldr	x20, [x20, #4008]
    9824:	mov	x8, x2
    9828:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    982c:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    9830:	mov	x19, x0
    9834:	add	x2, x2, #0x42c
    9838:	add	x3, x3, #0x5b8
    983c:	add	x4, sp, #0x8
    9840:	mov	x0, x1
    9844:	mov	x1, x8
    9848:	str	x20, [sp, #8]
    984c:	str	wzr, [sp, #4]
    9850:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    9854:	cbz	w0, 98f8 <PyInit__decimal@@Base+0x2de4>
    9858:	ldr	x8, [sp, #8]
    985c:	cmp	x8, x20
    9860:	b.eq	98a4 <PyInit__decimal@@Base+0x2d90>  // b.none
    9864:	ldr	x0, [x8, #8]
    9868:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    986c:	add	x8, x8, #0x4b8
    9870:	cmp	x0, x8
    9874:	b.eq	98b4 <PyInit__decimal@@Base+0x2da0>  // b.none
    9878:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    987c:	add	x1, x1, #0x4b8
    9880:	bl	6960 <PyType_IsSubtype@plt>
    9884:	cbnz	w0, 98b4 <PyInit__decimal@@Base+0x2da0>
    9888:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    988c:	ldr	x8, [x8, #3936]
    9890:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    9894:	add	x1, x1, #0x2e1
    9898:	ldr	x0, [x8]
    989c:	bl	65f0 <PyErr_SetString@plt>
    98a0:	b	98f8 <PyInit__decimal@@Base+0x2de4>
    98a4:	bl	792c <PyInit__decimal@@Base+0xe18>
    98a8:	str	x0, [sp, #8]
    98ac:	cbz	x0, 98f8 <PyInit__decimal@@Base+0x2de4>
    98b0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    98b4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    98b8:	add	x0, x0, #0x318
    98bc:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    98c0:	mov	x20, x0
    98c4:	cbz	x0, 98fc <PyInit__decimal@@Base+0x2de8>
    98c8:	ldr	x8, [sp, #8]
    98cc:	add	x0, x20, #0x18
    98d0:	add	x1, x19, #0x18
    98d4:	add	x3, sp, #0x4
    98d8:	add	x2, x8, #0x10
    98dc:	bl	1f1a4 <PyInit__decimal@@Base+0x18690>
    98e0:	ldr	x0, [sp, #8]
    98e4:	ldr	w1, [sp, #4]
    98e8:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    98ec:	cbz	w0, 98fc <PyInit__decimal@@Base+0x2de8>
    98f0:	mov	x0, x20
    98f4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    98f8:	mov	x20, xzr
    98fc:	mov	x0, x20
    9900:	ldp	x20, x19, [sp, #32]
    9904:	ldp	x29, x30, [sp, #16]
    9908:	add	sp, sp, #0x30
    990c:	ret
    9910:	sub	sp, sp, #0x30
    9914:	stp	x29, x30, [sp, #16]
    9918:	stp	x20, x19, [sp, #32]
    991c:	add	x29, sp, #0x10
    9920:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    9924:	ldr	x20, [x20, #4008]
    9928:	mov	x8, x2
    992c:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    9930:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    9934:	mov	x19, x0
    9938:	add	x2, x2, #0x42c
    993c:	add	x3, x3, #0x5c8
    9940:	add	x4, sp, #0x8
    9944:	mov	x0, x1
    9948:	mov	x1, x8
    994c:	str	x20, [sp, #8]
    9950:	str	wzr, [sp, #4]
    9954:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    9958:	cbz	w0, 99fc <PyInit__decimal@@Base+0x2ee8>
    995c:	ldr	x8, [sp, #8]
    9960:	cmp	x8, x20
    9964:	b.eq	99a8 <PyInit__decimal@@Base+0x2e94>  // b.none
    9968:	ldr	x0, [x8, #8]
    996c:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    9970:	add	x8, x8, #0x4b8
    9974:	cmp	x0, x8
    9978:	b.eq	99b8 <PyInit__decimal@@Base+0x2ea4>  // b.none
    997c:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    9980:	add	x1, x1, #0x4b8
    9984:	bl	6960 <PyType_IsSubtype@plt>
    9988:	cbnz	w0, 99b8 <PyInit__decimal@@Base+0x2ea4>
    998c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    9990:	ldr	x8, [x8, #3936]
    9994:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    9998:	add	x1, x1, #0x2e1
    999c:	ldr	x0, [x8]
    99a0:	bl	65f0 <PyErr_SetString@plt>
    99a4:	b	99fc <PyInit__decimal@@Base+0x2ee8>
    99a8:	bl	792c <PyInit__decimal@@Base+0xe18>
    99ac:	str	x0, [sp, #8]
    99b0:	cbz	x0, 99fc <PyInit__decimal@@Base+0x2ee8>
    99b4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    99b8:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    99bc:	add	x0, x0, #0x318
    99c0:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    99c4:	mov	x20, x0
    99c8:	cbz	x0, 9a00 <PyInit__decimal@@Base+0x2eec>
    99cc:	ldr	x8, [sp, #8]
    99d0:	add	x0, x20, #0x18
    99d4:	add	x1, x19, #0x18
    99d8:	add	x3, sp, #0x4
    99dc:	add	x2, x8, #0x10
    99e0:	bl	1fbf4 <PyInit__decimal@@Base+0x190e0>
    99e4:	ldr	x0, [sp, #8]
    99e8:	ldr	w1, [sp, #4]
    99ec:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    99f0:	cbz	w0, 9a00 <PyInit__decimal@@Base+0x2eec>
    99f4:	mov	x0, x20
    99f8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    99fc:	mov	x20, xzr
    9a00:	mov	x0, x20
    9a04:	ldp	x20, x19, [sp, #32]
    9a08:	ldp	x29, x30, [sp, #16]
    9a0c:	add	sp, sp, #0x30
    9a10:	ret
    9a14:	sub	sp, sp, #0x30
    9a18:	stp	x29, x30, [sp, #16]
    9a1c:	stp	x20, x19, [sp, #32]
    9a20:	add	x29, sp, #0x10
    9a24:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    9a28:	ldr	x20, [x20, #4008]
    9a2c:	mov	x8, x2
    9a30:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    9a34:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    9a38:	mov	x19, x0
    9a3c:	add	x2, x2, #0x42c
    9a40:	add	x3, x3, #0x5d8
    9a44:	add	x4, sp, #0x8
    9a48:	mov	x0, x1
    9a4c:	mov	x1, x8
    9a50:	str	x20, [sp, #8]
    9a54:	str	wzr, [sp, #4]
    9a58:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    9a5c:	cbz	w0, 9b00 <PyInit__decimal@@Base+0x2fec>
    9a60:	ldr	x8, [sp, #8]
    9a64:	cmp	x8, x20
    9a68:	b.eq	9aac <PyInit__decimal@@Base+0x2f98>  // b.none
    9a6c:	ldr	x0, [x8, #8]
    9a70:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    9a74:	add	x8, x8, #0x4b8
    9a78:	cmp	x0, x8
    9a7c:	b.eq	9abc <PyInit__decimal@@Base+0x2fa8>  // b.none
    9a80:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    9a84:	add	x1, x1, #0x4b8
    9a88:	bl	6960 <PyType_IsSubtype@plt>
    9a8c:	cbnz	w0, 9abc <PyInit__decimal@@Base+0x2fa8>
    9a90:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    9a94:	ldr	x8, [x8, #3936]
    9a98:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    9a9c:	add	x1, x1, #0x2e1
    9aa0:	ldr	x0, [x8]
    9aa4:	bl	65f0 <PyErr_SetString@plt>
    9aa8:	b	9b00 <PyInit__decimal@@Base+0x2fec>
    9aac:	bl	792c <PyInit__decimal@@Base+0xe18>
    9ab0:	str	x0, [sp, #8]
    9ab4:	cbz	x0, 9b00 <PyInit__decimal@@Base+0x2fec>
    9ab8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    9abc:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    9ac0:	add	x0, x0, #0x318
    9ac4:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    9ac8:	mov	x20, x0
    9acc:	cbz	x0, 9b04 <PyInit__decimal@@Base+0x2ff0>
    9ad0:	ldr	x8, [sp, #8]
    9ad4:	add	x0, x20, #0x18
    9ad8:	add	x1, x19, #0x18
    9adc:	add	x3, sp, #0x4
    9ae0:	add	x2, x8, #0x10
    9ae4:	bl	1fd94 <PyInit__decimal@@Base+0x19280>
    9ae8:	ldr	x0, [sp, #8]
    9aec:	ldr	w1, [sp, #4]
    9af0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    9af4:	cbz	w0, 9b04 <PyInit__decimal@@Base+0x2ff0>
    9af8:	mov	x0, x20
    9afc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    9b00:	mov	x20, xzr
    9b04:	mov	x0, x20
    9b08:	ldp	x20, x19, [sp, #32]
    9b0c:	ldp	x29, x30, [sp, #16]
    9b10:	add	sp, sp, #0x30
    9b14:	ret
    9b18:	sub	sp, sp, #0x30
    9b1c:	stp	x29, x30, [sp, #16]
    9b20:	stp	x20, x19, [sp, #32]
    9b24:	add	x29, sp, #0x10
    9b28:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    9b2c:	ldr	x20, [x20, #4008]
    9b30:	mov	x8, x2
    9b34:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    9b38:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    9b3c:	mov	x19, x0
    9b40:	add	x2, x2, #0x42c
    9b44:	add	x3, x3, #0x5e8
    9b48:	add	x4, sp, #0x8
    9b4c:	mov	x0, x1
    9b50:	mov	x1, x8
    9b54:	str	x20, [sp, #8]
    9b58:	str	wzr, [sp, #4]
    9b5c:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    9b60:	cbz	w0, 9c04 <PyInit__decimal@@Base+0x30f0>
    9b64:	ldr	x8, [sp, #8]
    9b68:	cmp	x8, x20
    9b6c:	b.eq	9bb0 <PyInit__decimal@@Base+0x309c>  // b.none
    9b70:	ldr	x0, [x8, #8]
    9b74:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    9b78:	add	x8, x8, #0x4b8
    9b7c:	cmp	x0, x8
    9b80:	b.eq	9bc0 <PyInit__decimal@@Base+0x30ac>  // b.none
    9b84:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    9b88:	add	x1, x1, #0x4b8
    9b8c:	bl	6960 <PyType_IsSubtype@plt>
    9b90:	cbnz	w0, 9bc0 <PyInit__decimal@@Base+0x30ac>
    9b94:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    9b98:	ldr	x8, [x8, #3936]
    9b9c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    9ba0:	add	x1, x1, #0x2e1
    9ba4:	ldr	x0, [x8]
    9ba8:	bl	65f0 <PyErr_SetString@plt>
    9bac:	b	9c04 <PyInit__decimal@@Base+0x30f0>
    9bb0:	bl	792c <PyInit__decimal@@Base+0xe18>
    9bb4:	str	x0, [sp, #8]
    9bb8:	cbz	x0, 9c04 <PyInit__decimal@@Base+0x30f0>
    9bbc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    9bc0:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    9bc4:	add	x0, x0, #0x318
    9bc8:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    9bcc:	mov	x20, x0
    9bd0:	cbz	x0, 9c08 <PyInit__decimal@@Base+0x30f4>
    9bd4:	ldr	x8, [sp, #8]
    9bd8:	add	x0, x20, #0x18
    9bdc:	add	x1, x19, #0x18
    9be0:	add	x3, sp, #0x4
    9be4:	add	x2, x8, #0x10
    9be8:	bl	215d0 <PyInit__decimal@@Base+0x1aabc>
    9bec:	ldr	x0, [sp, #8]
    9bf0:	ldr	w1, [sp, #4]
    9bf4:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    9bf8:	cbz	w0, 9c08 <PyInit__decimal@@Base+0x30f4>
    9bfc:	mov	x0, x20
    9c00:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    9c04:	mov	x20, xzr
    9c08:	mov	x0, x20
    9c0c:	ldp	x20, x19, [sp, #32]
    9c10:	ldp	x29, x30, [sp, #16]
    9c14:	add	sp, sp, #0x30
    9c18:	ret
    9c1c:	sub	sp, sp, #0x70
    9c20:	stp	x29, x30, [sp, #80]
    9c24:	stp	x20, x19, [sp, #96]
    9c28:	add	x29, sp, #0x50
    9c2c:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    9c30:	ldr	x20, [x20, #4008]
    9c34:	mov	x8, x2
    9c38:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    9c3c:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    9c40:	mov	x19, x0
    9c44:	add	x2, x2, #0x3fc
    9c48:	add	x3, x3, #0x5f8
    9c4c:	sub	x4, x29, #0x8
    9c50:	sub	x5, x29, #0x10
    9c54:	mov	x0, x1
    9c58:	mov	x1, x8
    9c5c:	stp	x20, x20, [x29, #-16]
    9c60:	stur	wzr, [x29, #-20]
    9c64:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    9c68:	cbz	w0, 9d4c <PyInit__decimal@@Base+0x3238>
    9c6c:	ldur	x8, [x29, #-16]
    9c70:	cmp	x8, x20
    9c74:	b.eq	9cb8 <PyInit__decimal@@Base+0x31a4>  // b.none
    9c78:	ldr	x0, [x8, #8]
    9c7c:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    9c80:	add	x8, x8, #0x4b8
    9c84:	cmp	x0, x8
    9c88:	b.eq	9cc8 <PyInit__decimal@@Base+0x31b4>  // b.none
    9c8c:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    9c90:	add	x1, x1, #0x4b8
    9c94:	bl	6960 <PyType_IsSubtype@plt>
    9c98:	cbnz	w0, 9cc8 <PyInit__decimal@@Base+0x31b4>
    9c9c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    9ca0:	ldr	x8, [x8, #3936]
    9ca4:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    9ca8:	add	x1, x1, #0x2e1
    9cac:	ldr	x0, [x8]
    9cb0:	bl	65f0 <PyErr_SetString@plt>
    9cb4:	b	9d4c <PyInit__decimal@@Base+0x3238>
    9cb8:	bl	792c <PyInit__decimal@@Base+0xe18>
    9cbc:	stur	x0, [x29, #-16]
    9cc0:	cbz	x0, 9d4c <PyInit__decimal@@Base+0x3238>
    9cc4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    9cc8:	ldp	x8, x0, [x29, #-16]
    9ccc:	ldp	q0, q1, [x8, #16]
    9cd0:	ldr	q2, [x8, #48]
    9cd4:	cmp	x0, x20
    9cd8:	stp	q0, q1, [sp]
    9cdc:	str	q2, [sp, #32]
    9ce0:	b.eq	9cfc <PyInit__decimal@@Base+0x31e8>  // b.none
    9ce4:	bl	d11c <PyInit__decimal@@Base+0x6608>
    9ce8:	tbnz	w0, #31, 9d4c <PyInit__decimal@@Base+0x3238>
    9cec:	mov	w1, w0
    9cf0:	mov	x0, sp
    9cf4:	bl	13ae0 <PyInit__decimal@@Base+0xcfcc>
    9cf8:	cbz	w0, 9d40 <PyInit__decimal@@Base+0x322c>
    9cfc:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    9d00:	add	x0, x0, #0x318
    9d04:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    9d08:	mov	x20, x0
    9d0c:	cbz	x0, 9d50 <PyInit__decimal@@Base+0x323c>
    9d10:	add	x0, x20, #0x18
    9d14:	add	x1, x19, #0x18
    9d18:	mov	x2, sp
    9d1c:	sub	x3, x29, #0x14
    9d20:	bl	21058 <PyInit__decimal@@Base+0x1a544>
    9d24:	ldur	x0, [x29, #-16]
    9d28:	ldur	w1, [x29, #-20]
    9d2c:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    9d30:	cbz	w0, 9d50 <PyInit__decimal@@Base+0x323c>
    9d34:	mov	x0, x20
    9d38:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    9d3c:	b	9d4c <PyInit__decimal@@Base+0x3238>
    9d40:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
    9d44:	add	x0, x0, #0x30e
    9d48:	bl	8a34 <PyInit__decimal@@Base+0x1f20>
    9d4c:	mov	x20, xzr
    9d50:	mov	x0, x20
    9d54:	ldp	x20, x19, [sp, #96]
    9d58:	ldp	x29, x30, [sp, #80]
    9d5c:	add	sp, sp, #0x70
    9d60:	ret
    9d64:	sub	sp, sp, #0x70
    9d68:	stp	x29, x30, [sp, #80]
    9d6c:	stp	x20, x19, [sp, #96]
    9d70:	add	x29, sp, #0x50
    9d74:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    9d78:	ldr	x20, [x20, #4008]
    9d7c:	mov	x8, x2
    9d80:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    9d84:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    9d88:	mov	x19, x0
    9d8c:	add	x2, x2, #0x3fc
    9d90:	add	x3, x3, #0x610
    9d94:	sub	x4, x29, #0x8
    9d98:	sub	x5, x29, #0x10
    9d9c:	mov	x0, x1
    9da0:	mov	x1, x8
    9da4:	stp	x20, x20, [x29, #-16]
    9da8:	stur	wzr, [x29, #-20]
    9dac:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    9db0:	cbz	w0, 9e94 <PyInit__decimal@@Base+0x3380>
    9db4:	ldur	x8, [x29, #-16]
    9db8:	cmp	x8, x20
    9dbc:	b.eq	9e00 <PyInit__decimal@@Base+0x32ec>  // b.none
    9dc0:	ldr	x0, [x8, #8]
    9dc4:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    9dc8:	add	x8, x8, #0x4b8
    9dcc:	cmp	x0, x8
    9dd0:	b.eq	9e10 <PyInit__decimal@@Base+0x32fc>  // b.none
    9dd4:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    9dd8:	add	x1, x1, #0x4b8
    9ddc:	bl	6960 <PyType_IsSubtype@plt>
    9de0:	cbnz	w0, 9e10 <PyInit__decimal@@Base+0x32fc>
    9de4:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    9de8:	ldr	x8, [x8, #3936]
    9dec:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    9df0:	add	x1, x1, #0x2e1
    9df4:	ldr	x0, [x8]
    9df8:	bl	65f0 <PyErr_SetString@plt>
    9dfc:	b	9e94 <PyInit__decimal@@Base+0x3380>
    9e00:	bl	792c <PyInit__decimal@@Base+0xe18>
    9e04:	stur	x0, [x29, #-16]
    9e08:	cbz	x0, 9e94 <PyInit__decimal@@Base+0x3380>
    9e0c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    9e10:	ldp	x8, x0, [x29, #-16]
    9e14:	ldp	q0, q1, [x8, #16]
    9e18:	ldr	q2, [x8, #48]
    9e1c:	cmp	x0, x20
    9e20:	stp	q0, q1, [sp]
    9e24:	str	q2, [sp, #32]
    9e28:	b.eq	9e44 <PyInit__decimal@@Base+0x3330>  // b.none
    9e2c:	bl	d11c <PyInit__decimal@@Base+0x6608>
    9e30:	tbnz	w0, #31, 9e94 <PyInit__decimal@@Base+0x3380>
    9e34:	mov	w1, w0
    9e38:	mov	x0, sp
    9e3c:	bl	13ae0 <PyInit__decimal@@Base+0xcfcc>
    9e40:	cbz	w0, 9e88 <PyInit__decimal@@Base+0x3374>
    9e44:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    9e48:	add	x0, x0, #0x318
    9e4c:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    9e50:	mov	x20, x0
    9e54:	cbz	x0, 9e98 <PyInit__decimal@@Base+0x3384>
    9e58:	add	x0, x20, #0x18
    9e5c:	add	x1, x19, #0x18
    9e60:	mov	x2, sp
    9e64:	sub	x3, x29, #0x14
    9e68:	bl	21bcc <PyInit__decimal@@Base+0x1b0b8>
    9e6c:	ldur	x0, [x29, #-16]
    9e70:	ldur	w1, [x29, #-20]
    9e74:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    9e78:	cbz	w0, 9e98 <PyInit__decimal@@Base+0x3384>
    9e7c:	mov	x0, x20
    9e80:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    9e84:	b	9e94 <PyInit__decimal@@Base+0x3380>
    9e88:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
    9e8c:	add	x0, x0, #0x3cd
    9e90:	bl	8a34 <PyInit__decimal@@Base+0x1f20>
    9e94:	mov	x20, xzr
    9e98:	mov	x0, x20
    9e9c:	ldp	x20, x19, [sp, #96]
    9ea0:	ldp	x29, x30, [sp, #80]
    9ea4:	add	sp, sp, #0x70
    9ea8:	ret
    9eac:	sub	sp, sp, #0x30
    9eb0:	stp	x29, x30, [sp, #16]
    9eb4:	stp	x20, x19, [sp, #32]
    9eb8:	add	x29, sp, #0x10
    9ebc:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    9ec0:	ldr	x20, [x20, #4008]
    9ec4:	mov	x8, x2
    9ec8:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    9ecc:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    9ed0:	mov	x19, x0
    9ed4:	add	x2, x2, #0x42c
    9ed8:	add	x3, x3, #0x628
    9edc:	add	x4, sp, #0x8
    9ee0:	mov	x0, x1
    9ee4:	mov	x1, x8
    9ee8:	str	x20, [sp, #8]
    9eec:	str	wzr, [sp, #4]
    9ef0:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    9ef4:	cbz	w0, 9f98 <PyInit__decimal@@Base+0x3484>
    9ef8:	ldr	x8, [sp, #8]
    9efc:	cmp	x8, x20
    9f00:	b.eq	9f44 <PyInit__decimal@@Base+0x3430>  // b.none
    9f04:	ldr	x0, [x8, #8]
    9f08:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    9f0c:	add	x8, x8, #0x4b8
    9f10:	cmp	x0, x8
    9f14:	b.eq	9f54 <PyInit__decimal@@Base+0x3440>  // b.none
    9f18:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    9f1c:	add	x1, x1, #0x4b8
    9f20:	bl	6960 <PyType_IsSubtype@plt>
    9f24:	cbnz	w0, 9f54 <PyInit__decimal@@Base+0x3440>
    9f28:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    9f2c:	ldr	x8, [x8, #3936]
    9f30:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    9f34:	add	x1, x1, #0x2e1
    9f38:	ldr	x0, [x8]
    9f3c:	bl	65f0 <PyErr_SetString@plt>
    9f40:	b	9f98 <PyInit__decimal@@Base+0x3484>
    9f44:	bl	792c <PyInit__decimal@@Base+0xe18>
    9f48:	str	x0, [sp, #8]
    9f4c:	cbz	x0, 9f98 <PyInit__decimal@@Base+0x3484>
    9f50:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    9f54:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    9f58:	add	x0, x0, #0x318
    9f5c:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    9f60:	mov	x20, x0
    9f64:	cbz	x0, 9f9c <PyInit__decimal@@Base+0x3488>
    9f68:	ldr	x8, [sp, #8]
    9f6c:	add	x0, x20, #0x18
    9f70:	add	x1, x19, #0x18
    9f74:	add	x3, sp, #0x4
    9f78:	add	x2, x8, #0x10
    9f7c:	bl	22370 <PyInit__decimal@@Base+0x1b85c>
    9f80:	ldr	x0, [sp, #8]
    9f84:	ldr	w1, [sp, #4]
    9f88:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    9f8c:	cbz	w0, 9f9c <PyInit__decimal@@Base+0x3488>
    9f90:	mov	x0, x20
    9f94:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    9f98:	mov	x20, xzr
    9f9c:	mov	x0, x20
    9fa0:	ldp	x20, x19, [sp, #32]
    9fa4:	ldp	x29, x30, [sp, #16]
    9fa8:	add	sp, sp, #0x30
    9fac:	ret
    9fb0:	sub	sp, sp, #0x50
    9fb4:	stp	x29, x30, [sp, #48]
    9fb8:	stp	x20, x19, [sp, #64]
    9fbc:	add	x29, sp, #0x30
    9fc0:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    9fc4:	ldr	x20, [x20, #4008]
    9fc8:	mov	x8, x2
    9fcc:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    9fd0:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    9fd4:	mov	x19, x0
    9fd8:	add	x2, x2, #0x42b
    9fdc:	add	x3, x3, #0x638
    9fe0:	sub	x4, x29, #0x8
    9fe4:	add	x5, sp, #0x10
    9fe8:	mov	x0, x1
    9fec:	mov	x1, x8
    9ff0:	str	x20, [sp, #16]
    9ff4:	str	wzr, [sp, #12]
    9ff8:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    9ffc:	cbz	w0, a0f0 <PyInit__decimal@@Base+0x35dc>
    a000:	ldr	x8, [sp, #16]
    a004:	cmp	x8, x20
    a008:	b.eq	a04c <PyInit__decimal@@Base+0x3538>  // b.none
    a00c:	ldr	x0, [x8, #8]
    a010:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    a014:	add	x8, x8, #0x4b8
    a018:	cmp	x0, x8
    a01c:	b.eq	a05c <PyInit__decimal@@Base+0x3548>  // b.none
    a020:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    a024:	add	x1, x1, #0x4b8
    a028:	bl	6960 <PyType_IsSubtype@plt>
    a02c:	cbnz	w0, a05c <PyInit__decimal@@Base+0x3548>
    a030:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    a034:	ldr	x8, [x8, #3936]
    a038:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    a03c:	add	x1, x1, #0x2e1
    a040:	ldr	x0, [x8]
    a044:	bl	65f0 <PyErr_SetString@plt>
    a048:	b	a0f0 <PyInit__decimal@@Base+0x35dc>
    a04c:	bl	792c <PyInit__decimal@@Base+0xe18>
    a050:	str	x0, [sp, #16]
    a054:	cbz	x0, a0f0 <PyInit__decimal@@Base+0x35dc>
    a058:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a05c:	ldr	x3, [sp, #16]
    a060:	sub	x1, x29, #0x10
    a064:	mov	w0, #0x1                   	// #1
    a068:	mov	x2, x19
    a06c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    a070:	cbz	w0, a0f0 <PyInit__decimal@@Base+0x35dc>
    a074:	ldur	x2, [x29, #-8]
    a078:	ldr	x3, [sp, #16]
    a07c:	add	x1, sp, #0x18
    a080:	mov	w0, #0x1                   	// #1
    a084:	bl	858c <PyInit__decimal@@Base+0x1a78>
    a088:	cbz	w0, a0e8 <PyInit__decimal@@Base+0x35d4>
    a08c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    a090:	add	x0, x0, #0x318
    a094:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    a098:	mov	x19, x0
    a09c:	cbz	x0, a108 <PyInit__decimal@@Base+0x35f4>
    a0a0:	ldur	x8, [x29, #-16]
    a0a4:	ldp	x10, x9, [sp, #16]
    a0a8:	add	x0, x19, #0x18
    a0ac:	add	x4, sp, #0xc
    a0b0:	add	x1, x8, #0x18
    a0b4:	add	x2, x9, #0x18
    a0b8:	add	x3, x10, #0x10
    a0bc:	bl	19dbc <PyInit__decimal@@Base+0x132a8>
    a0c0:	ldur	x0, [x29, #-16]
    a0c4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a0c8:	ldr	x0, [sp, #24]
    a0cc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a0d0:	ldr	x0, [sp, #16]
    a0d4:	ldr	w1, [sp, #12]
    a0d8:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    a0dc:	cbz	w0, a0f4 <PyInit__decimal@@Base+0x35e0>
    a0e0:	mov	x0, x19
    a0e4:	b	a0ec <PyInit__decimal@@Base+0x35d8>
    a0e8:	ldur	x0, [x29, #-16]
    a0ec:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a0f0:	mov	x19, xzr
    a0f4:	mov	x0, x19
    a0f8:	ldp	x20, x19, [sp, #64]
    a0fc:	ldp	x29, x30, [sp, #48]
    a100:	add	sp, sp, #0x50
    a104:	ret
    a108:	ldur	x0, [x29, #-16]
    a10c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a110:	ldr	x0, [sp, #24]
    a114:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a118:	b	a0f4 <PyInit__decimal@@Base+0x35e0>
    a11c:	sub	sp, sp, #0x50
    a120:	stp	x29, x30, [sp, #48]
    a124:	stp	x20, x19, [sp, #64]
    a128:	add	x29, sp, #0x30
    a12c:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    a130:	ldr	x20, [x20, #4008]
    a134:	mov	x8, x2
    a138:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    a13c:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    a140:	mov	x19, x0
    a144:	add	x2, x2, #0x42b
    a148:	add	x3, x3, #0x650
    a14c:	sub	x4, x29, #0x8
    a150:	add	x5, sp, #0x10
    a154:	mov	x0, x1
    a158:	mov	x1, x8
    a15c:	str	x20, [sp, #16]
    a160:	str	wzr, [sp, #12]
    a164:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    a168:	cbz	w0, a25c <PyInit__decimal@@Base+0x3748>
    a16c:	ldr	x8, [sp, #16]
    a170:	cmp	x8, x20
    a174:	b.eq	a1b8 <PyInit__decimal@@Base+0x36a4>  // b.none
    a178:	ldr	x0, [x8, #8]
    a17c:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    a180:	add	x8, x8, #0x4b8
    a184:	cmp	x0, x8
    a188:	b.eq	a1c8 <PyInit__decimal@@Base+0x36b4>  // b.none
    a18c:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    a190:	add	x1, x1, #0x4b8
    a194:	bl	6960 <PyType_IsSubtype@plt>
    a198:	cbnz	w0, a1c8 <PyInit__decimal@@Base+0x36b4>
    a19c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    a1a0:	ldr	x8, [x8, #3936]
    a1a4:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    a1a8:	add	x1, x1, #0x2e1
    a1ac:	ldr	x0, [x8]
    a1b0:	bl	65f0 <PyErr_SetString@plt>
    a1b4:	b	a25c <PyInit__decimal@@Base+0x3748>
    a1b8:	bl	792c <PyInit__decimal@@Base+0xe18>
    a1bc:	str	x0, [sp, #16]
    a1c0:	cbz	x0, a25c <PyInit__decimal@@Base+0x3748>
    a1c4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a1c8:	ldr	x3, [sp, #16]
    a1cc:	sub	x1, x29, #0x10
    a1d0:	mov	w0, #0x1                   	// #1
    a1d4:	mov	x2, x19
    a1d8:	bl	858c <PyInit__decimal@@Base+0x1a78>
    a1dc:	cbz	w0, a25c <PyInit__decimal@@Base+0x3748>
    a1e0:	ldur	x2, [x29, #-8]
    a1e4:	ldr	x3, [sp, #16]
    a1e8:	add	x1, sp, #0x18
    a1ec:	mov	w0, #0x1                   	// #1
    a1f0:	bl	858c <PyInit__decimal@@Base+0x1a78>
    a1f4:	cbz	w0, a254 <PyInit__decimal@@Base+0x3740>
    a1f8:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    a1fc:	add	x0, x0, #0x318
    a200:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    a204:	mov	x19, x0
    a208:	cbz	x0, a274 <PyInit__decimal@@Base+0x3760>
    a20c:	ldur	x8, [x29, #-16]
    a210:	ldp	x10, x9, [sp, #16]
    a214:	add	x0, x19, #0x18
    a218:	add	x4, sp, #0xc
    a21c:	add	x1, x8, #0x18
    a220:	add	x2, x9, #0x18
    a224:	add	x3, x10, #0x10
    a228:	bl	19e48 <PyInit__decimal@@Base+0x13334>
    a22c:	ldur	x0, [x29, #-16]
    a230:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a234:	ldr	x0, [sp, #24]
    a238:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a23c:	ldr	x0, [sp, #16]
    a240:	ldr	w1, [sp, #12]
    a244:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    a248:	cbz	w0, a260 <PyInit__decimal@@Base+0x374c>
    a24c:	mov	x0, x19
    a250:	b	a258 <PyInit__decimal@@Base+0x3744>
    a254:	ldur	x0, [x29, #-16]
    a258:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a25c:	mov	x19, xzr
    a260:	mov	x0, x19
    a264:	ldp	x20, x19, [sp, #64]
    a268:	ldp	x29, x30, [sp, #48]
    a26c:	add	sp, sp, #0x50
    a270:	ret
    a274:	ldur	x0, [x29, #-16]
    a278:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a27c:	ldr	x0, [sp, #24]
    a280:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a284:	b	a260 <PyInit__decimal@@Base+0x374c>
    a288:	sub	sp, sp, #0x50
    a28c:	stp	x29, x30, [sp, #48]
    a290:	stp	x20, x19, [sp, #64]
    a294:	add	x29, sp, #0x30
    a298:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    a29c:	ldr	x20, [x20, #4008]
    a2a0:	mov	x8, x2
    a2a4:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    a2a8:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    a2ac:	mov	x19, x0
    a2b0:	add	x2, x2, #0x42b
    a2b4:	add	x3, x3, #0x668
    a2b8:	sub	x4, x29, #0x8
    a2bc:	add	x5, sp, #0x10
    a2c0:	mov	x0, x1
    a2c4:	mov	x1, x8
    a2c8:	str	x20, [sp, #16]
    a2cc:	str	wzr, [sp, #12]
    a2d0:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    a2d4:	cbz	w0, a3c8 <PyInit__decimal@@Base+0x38b4>
    a2d8:	ldr	x8, [sp, #16]
    a2dc:	cmp	x8, x20
    a2e0:	b.eq	a324 <PyInit__decimal@@Base+0x3810>  // b.none
    a2e4:	ldr	x0, [x8, #8]
    a2e8:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    a2ec:	add	x8, x8, #0x4b8
    a2f0:	cmp	x0, x8
    a2f4:	b.eq	a334 <PyInit__decimal@@Base+0x3820>  // b.none
    a2f8:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    a2fc:	add	x1, x1, #0x4b8
    a300:	bl	6960 <PyType_IsSubtype@plt>
    a304:	cbnz	w0, a334 <PyInit__decimal@@Base+0x3820>
    a308:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    a30c:	ldr	x8, [x8, #3936]
    a310:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    a314:	add	x1, x1, #0x2e1
    a318:	ldr	x0, [x8]
    a31c:	bl	65f0 <PyErr_SetString@plt>
    a320:	b	a3c8 <PyInit__decimal@@Base+0x38b4>
    a324:	bl	792c <PyInit__decimal@@Base+0xe18>
    a328:	str	x0, [sp, #16]
    a32c:	cbz	x0, a3c8 <PyInit__decimal@@Base+0x38b4>
    a330:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a334:	ldr	x3, [sp, #16]
    a338:	sub	x1, x29, #0x10
    a33c:	mov	w0, #0x1                   	// #1
    a340:	mov	x2, x19
    a344:	bl	858c <PyInit__decimal@@Base+0x1a78>
    a348:	cbz	w0, a3c8 <PyInit__decimal@@Base+0x38b4>
    a34c:	ldur	x2, [x29, #-8]
    a350:	ldr	x3, [sp, #16]
    a354:	add	x1, sp, #0x18
    a358:	mov	w0, #0x1                   	// #1
    a35c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    a360:	cbz	w0, a3c0 <PyInit__decimal@@Base+0x38ac>
    a364:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    a368:	add	x0, x0, #0x318
    a36c:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    a370:	mov	x19, x0
    a374:	cbz	x0, a3e0 <PyInit__decimal@@Base+0x38cc>
    a378:	ldur	x8, [x29, #-16]
    a37c:	ldp	x10, x9, [sp, #16]
    a380:	add	x0, x19, #0x18
    a384:	add	x4, sp, #0xc
    a388:	add	x1, x8, #0x18
    a38c:	add	x2, x9, #0x18
    a390:	add	x3, x10, #0x10
    a394:	bl	1f6b4 <PyInit__decimal@@Base+0x18ba0>
    a398:	ldur	x0, [x29, #-16]
    a39c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a3a0:	ldr	x0, [sp, #24]
    a3a4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a3a8:	ldr	x0, [sp, #16]
    a3ac:	ldr	w1, [sp, #12]
    a3b0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    a3b4:	cbz	w0, a3cc <PyInit__decimal@@Base+0x38b8>
    a3b8:	mov	x0, x19
    a3bc:	b	a3c4 <PyInit__decimal@@Base+0x38b0>
    a3c0:	ldur	x0, [x29, #-16]
    a3c4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a3c8:	mov	x19, xzr
    a3cc:	mov	x0, x19
    a3d0:	ldp	x20, x19, [sp, #64]
    a3d4:	ldp	x29, x30, [sp, #48]
    a3d8:	add	sp, sp, #0x50
    a3dc:	ret
    a3e0:	ldur	x0, [x29, #-16]
    a3e4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a3e8:	ldr	x0, [sp, #24]
    a3ec:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a3f0:	b	a3cc <PyInit__decimal@@Base+0x38b8>
    a3f4:	sub	sp, sp, #0x50
    a3f8:	stp	x29, x30, [sp, #48]
    a3fc:	stp	x20, x19, [sp, #64]
    a400:	add	x29, sp, #0x30
    a404:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    a408:	ldr	x20, [x20, #4008]
    a40c:	mov	x8, x2
    a410:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    a414:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    a418:	mov	x19, x0
    a41c:	add	x2, x2, #0x42b
    a420:	add	x3, x3, #0x680
    a424:	sub	x4, x29, #0x8
    a428:	add	x5, sp, #0x10
    a42c:	mov	x0, x1
    a430:	mov	x1, x8
    a434:	str	x20, [sp, #16]
    a438:	str	wzr, [sp, #12]
    a43c:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    a440:	cbz	w0, a534 <PyInit__decimal@@Base+0x3a20>
    a444:	ldr	x8, [sp, #16]
    a448:	cmp	x8, x20
    a44c:	b.eq	a490 <PyInit__decimal@@Base+0x397c>  // b.none
    a450:	ldr	x0, [x8, #8]
    a454:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    a458:	add	x8, x8, #0x4b8
    a45c:	cmp	x0, x8
    a460:	b.eq	a4a0 <PyInit__decimal@@Base+0x398c>  // b.none
    a464:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    a468:	add	x1, x1, #0x4b8
    a46c:	bl	6960 <PyType_IsSubtype@plt>
    a470:	cbnz	w0, a4a0 <PyInit__decimal@@Base+0x398c>
    a474:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    a478:	ldr	x8, [x8, #3936]
    a47c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    a480:	add	x1, x1, #0x2e1
    a484:	ldr	x0, [x8]
    a488:	bl	65f0 <PyErr_SetString@plt>
    a48c:	b	a534 <PyInit__decimal@@Base+0x3a20>
    a490:	bl	792c <PyInit__decimal@@Base+0xe18>
    a494:	str	x0, [sp, #16]
    a498:	cbz	x0, a534 <PyInit__decimal@@Base+0x3a20>
    a49c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a4a0:	ldr	x3, [sp, #16]
    a4a4:	sub	x1, x29, #0x10
    a4a8:	mov	w0, #0x1                   	// #1
    a4ac:	mov	x2, x19
    a4b0:	bl	858c <PyInit__decimal@@Base+0x1a78>
    a4b4:	cbz	w0, a534 <PyInit__decimal@@Base+0x3a20>
    a4b8:	ldur	x2, [x29, #-8]
    a4bc:	ldr	x3, [sp, #16]
    a4c0:	add	x1, sp, #0x18
    a4c4:	mov	w0, #0x1                   	// #1
    a4c8:	bl	858c <PyInit__decimal@@Base+0x1a78>
    a4cc:	cbz	w0, a52c <PyInit__decimal@@Base+0x3a18>
    a4d0:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    a4d4:	add	x0, x0, #0x318
    a4d8:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    a4dc:	mov	x19, x0
    a4e0:	cbz	x0, a54c <PyInit__decimal@@Base+0x3a38>
    a4e4:	ldur	x8, [x29, #-16]
    a4e8:	ldp	x10, x9, [sp, #16]
    a4ec:	add	x0, x19, #0x18
    a4f0:	add	x4, sp, #0xc
    a4f4:	add	x1, x8, #0x18
    a4f8:	add	x2, x9, #0x18
    a4fc:	add	x3, x10, #0x10
    a500:	bl	1f7bc <PyInit__decimal@@Base+0x18ca8>
    a504:	ldur	x0, [x29, #-16]
    a508:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a50c:	ldr	x0, [sp, #24]
    a510:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a514:	ldr	x0, [sp, #16]
    a518:	ldr	w1, [sp, #12]
    a51c:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    a520:	cbz	w0, a538 <PyInit__decimal@@Base+0x3a24>
    a524:	mov	x0, x19
    a528:	b	a530 <PyInit__decimal@@Base+0x3a1c>
    a52c:	ldur	x0, [x29, #-16]
    a530:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a534:	mov	x19, xzr
    a538:	mov	x0, x19
    a53c:	ldp	x20, x19, [sp, #64]
    a540:	ldp	x29, x30, [sp, #48]
    a544:	add	sp, sp, #0x50
    a548:	ret
    a54c:	ldur	x0, [x29, #-16]
    a550:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a554:	ldr	x0, [sp, #24]
    a558:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a55c:	b	a538 <PyInit__decimal@@Base+0x3a24>
    a560:	sub	sp, sp, #0x50
    a564:	stp	x29, x30, [sp, #48]
    a568:	stp	x20, x19, [sp, #64]
    a56c:	add	x29, sp, #0x30
    a570:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    a574:	ldr	x20, [x20, #4008]
    a578:	mov	x8, x2
    a57c:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    a580:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    a584:	mov	x19, x0
    a588:	add	x2, x2, #0x42b
    a58c:	add	x3, x3, #0x698
    a590:	sub	x4, x29, #0x8
    a594:	add	x5, sp, #0x10
    a598:	mov	x0, x1
    a59c:	mov	x1, x8
    a5a0:	str	x20, [sp, #16]
    a5a4:	str	wzr, [sp, #12]
    a5a8:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    a5ac:	cbz	w0, a6a0 <PyInit__decimal@@Base+0x3b8c>
    a5b0:	ldr	x8, [sp, #16]
    a5b4:	cmp	x8, x20
    a5b8:	b.eq	a5fc <PyInit__decimal@@Base+0x3ae8>  // b.none
    a5bc:	ldr	x0, [x8, #8]
    a5c0:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    a5c4:	add	x8, x8, #0x4b8
    a5c8:	cmp	x0, x8
    a5cc:	b.eq	a60c <PyInit__decimal@@Base+0x3af8>  // b.none
    a5d0:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    a5d4:	add	x1, x1, #0x4b8
    a5d8:	bl	6960 <PyType_IsSubtype@plt>
    a5dc:	cbnz	w0, a60c <PyInit__decimal@@Base+0x3af8>
    a5e0:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    a5e4:	ldr	x8, [x8, #3936]
    a5e8:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    a5ec:	add	x1, x1, #0x2e1
    a5f0:	ldr	x0, [x8]
    a5f4:	bl	65f0 <PyErr_SetString@plt>
    a5f8:	b	a6a0 <PyInit__decimal@@Base+0x3b8c>
    a5fc:	bl	792c <PyInit__decimal@@Base+0xe18>
    a600:	str	x0, [sp, #16]
    a604:	cbz	x0, a6a0 <PyInit__decimal@@Base+0x3b8c>
    a608:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a60c:	ldr	x3, [sp, #16]
    a610:	sub	x1, x29, #0x10
    a614:	mov	w0, #0x1                   	// #1
    a618:	mov	x2, x19
    a61c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    a620:	cbz	w0, a6a0 <PyInit__decimal@@Base+0x3b8c>
    a624:	ldur	x2, [x29, #-8]
    a628:	ldr	x3, [sp, #16]
    a62c:	add	x1, sp, #0x18
    a630:	mov	w0, #0x1                   	// #1
    a634:	bl	858c <PyInit__decimal@@Base+0x1a78>
    a638:	cbz	w0, a698 <PyInit__decimal@@Base+0x3b84>
    a63c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    a640:	add	x0, x0, #0x318
    a644:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    a648:	mov	x19, x0
    a64c:	cbz	x0, a6b8 <PyInit__decimal@@Base+0x3ba4>
    a650:	ldur	x8, [x29, #-16]
    a654:	ldp	x10, x9, [sp, #16]
    a658:	add	x0, x19, #0x18
    a65c:	add	x4, sp, #0xc
    a660:	add	x1, x8, #0x18
    a664:	add	x2, x9, #0x18
    a668:	add	x3, x10, #0x10
    a66c:	bl	1f884 <PyInit__decimal@@Base+0x18d70>
    a670:	ldur	x0, [x29, #-16]
    a674:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a678:	ldr	x0, [sp, #24]
    a67c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a680:	ldr	x0, [sp, #16]
    a684:	ldr	w1, [sp, #12]
    a688:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    a68c:	cbz	w0, a6a4 <PyInit__decimal@@Base+0x3b90>
    a690:	mov	x0, x19
    a694:	b	a69c <PyInit__decimal@@Base+0x3b88>
    a698:	ldur	x0, [x29, #-16]
    a69c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a6a0:	mov	x19, xzr
    a6a4:	mov	x0, x19
    a6a8:	ldp	x20, x19, [sp, #64]
    a6ac:	ldp	x29, x30, [sp, #48]
    a6b0:	add	sp, sp, #0x50
    a6b4:	ret
    a6b8:	ldur	x0, [x29, #-16]
    a6bc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a6c0:	ldr	x0, [sp, #24]
    a6c4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a6c8:	b	a6a4 <PyInit__decimal@@Base+0x3b90>
    a6cc:	sub	sp, sp, #0x50
    a6d0:	stp	x29, x30, [sp, #48]
    a6d4:	stp	x20, x19, [sp, #64]
    a6d8:	add	x29, sp, #0x30
    a6dc:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    a6e0:	ldr	x20, [x20, #4008]
    a6e4:	mov	x8, x2
    a6e8:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    a6ec:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    a6f0:	mov	x19, x0
    a6f4:	add	x2, x2, #0x42b
    a6f8:	add	x3, x3, #0x6b0
    a6fc:	sub	x4, x29, #0x8
    a700:	add	x5, sp, #0x10
    a704:	mov	x0, x1
    a708:	mov	x1, x8
    a70c:	str	x20, [sp, #16]
    a710:	str	wzr, [sp, #12]
    a714:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    a718:	cbz	w0, a80c <PyInit__decimal@@Base+0x3cf8>
    a71c:	ldr	x8, [sp, #16]
    a720:	cmp	x8, x20
    a724:	b.eq	a768 <PyInit__decimal@@Base+0x3c54>  // b.none
    a728:	ldr	x0, [x8, #8]
    a72c:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    a730:	add	x8, x8, #0x4b8
    a734:	cmp	x0, x8
    a738:	b.eq	a778 <PyInit__decimal@@Base+0x3c64>  // b.none
    a73c:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    a740:	add	x1, x1, #0x4b8
    a744:	bl	6960 <PyType_IsSubtype@plt>
    a748:	cbnz	w0, a778 <PyInit__decimal@@Base+0x3c64>
    a74c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    a750:	ldr	x8, [x8, #3936]
    a754:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    a758:	add	x1, x1, #0x2e1
    a75c:	ldr	x0, [x8]
    a760:	bl	65f0 <PyErr_SetString@plt>
    a764:	b	a80c <PyInit__decimal@@Base+0x3cf8>
    a768:	bl	792c <PyInit__decimal@@Base+0xe18>
    a76c:	str	x0, [sp, #16]
    a770:	cbz	x0, a80c <PyInit__decimal@@Base+0x3cf8>
    a774:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a778:	ldr	x3, [sp, #16]
    a77c:	sub	x1, x29, #0x10
    a780:	mov	w0, #0x1                   	// #1
    a784:	mov	x2, x19
    a788:	bl	858c <PyInit__decimal@@Base+0x1a78>
    a78c:	cbz	w0, a80c <PyInit__decimal@@Base+0x3cf8>
    a790:	ldur	x2, [x29, #-8]
    a794:	ldr	x3, [sp, #16]
    a798:	add	x1, sp, #0x18
    a79c:	mov	w0, #0x1                   	// #1
    a7a0:	bl	858c <PyInit__decimal@@Base+0x1a78>
    a7a4:	cbz	w0, a804 <PyInit__decimal@@Base+0x3cf0>
    a7a8:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    a7ac:	add	x0, x0, #0x318
    a7b0:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    a7b4:	mov	x19, x0
    a7b8:	cbz	x0, a824 <PyInit__decimal@@Base+0x3d10>
    a7bc:	ldur	x8, [x29, #-16]
    a7c0:	ldp	x10, x9, [sp, #16]
    a7c4:	add	x0, x19, #0x18
    a7c8:	add	x4, sp, #0xc
    a7cc:	add	x1, x8, #0x18
    a7d0:	add	x2, x9, #0x18
    a7d4:	add	x3, x10, #0x10
    a7d8:	bl	1f94c <PyInit__decimal@@Base+0x18e38>
    a7dc:	ldur	x0, [x29, #-16]
    a7e0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a7e4:	ldr	x0, [sp, #24]
    a7e8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a7ec:	ldr	x0, [sp, #16]
    a7f0:	ldr	w1, [sp, #12]
    a7f4:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    a7f8:	cbz	w0, a810 <PyInit__decimal@@Base+0x3cfc>
    a7fc:	mov	x0, x19
    a800:	b	a808 <PyInit__decimal@@Base+0x3cf4>
    a804:	ldur	x0, [x29, #-16]
    a808:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a80c:	mov	x19, xzr
    a810:	mov	x0, x19
    a814:	ldp	x20, x19, [sp, #64]
    a818:	ldp	x29, x30, [sp, #48]
    a81c:	add	sp, sp, #0x50
    a820:	ret
    a824:	ldur	x0, [x29, #-16]
    a828:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a82c:	ldr	x0, [sp, #24]
    a830:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a834:	b	a810 <PyInit__decimal@@Base+0x3cfc>
    a838:	sub	sp, sp, #0x50
    a83c:	stp	x29, x30, [sp, #48]
    a840:	stp	x20, x19, [sp, #64]
    a844:	add	x29, sp, #0x30
    a848:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    a84c:	ldr	x20, [x20, #4008]
    a850:	mov	x8, x2
    a854:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    a858:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    a85c:	mov	x19, x0
    a860:	add	x2, x2, #0x42b
    a864:	add	x3, x3, #0x6c8
    a868:	sub	x4, x29, #0x8
    a86c:	add	x5, sp, #0x10
    a870:	mov	x0, x1
    a874:	mov	x1, x8
    a878:	str	x20, [sp, #16]
    a87c:	str	wzr, [sp, #12]
    a880:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    a884:	cbz	w0, a978 <PyInit__decimal@@Base+0x3e64>
    a888:	ldr	x8, [sp, #16]
    a88c:	cmp	x8, x20
    a890:	b.eq	a8d4 <PyInit__decimal@@Base+0x3dc0>  // b.none
    a894:	ldr	x0, [x8, #8]
    a898:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    a89c:	add	x8, x8, #0x4b8
    a8a0:	cmp	x0, x8
    a8a4:	b.eq	a8e4 <PyInit__decimal@@Base+0x3dd0>  // b.none
    a8a8:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    a8ac:	add	x1, x1, #0x4b8
    a8b0:	bl	6960 <PyType_IsSubtype@plt>
    a8b4:	cbnz	w0, a8e4 <PyInit__decimal@@Base+0x3dd0>
    a8b8:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    a8bc:	ldr	x8, [x8, #3936]
    a8c0:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    a8c4:	add	x1, x1, #0x2e1
    a8c8:	ldr	x0, [x8]
    a8cc:	bl	65f0 <PyErr_SetString@plt>
    a8d0:	b	a978 <PyInit__decimal@@Base+0x3e64>
    a8d4:	bl	792c <PyInit__decimal@@Base+0xe18>
    a8d8:	str	x0, [sp, #16]
    a8dc:	cbz	x0, a978 <PyInit__decimal@@Base+0x3e64>
    a8e0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a8e4:	ldr	x3, [sp, #16]
    a8e8:	sub	x1, x29, #0x10
    a8ec:	mov	w0, #0x1                   	// #1
    a8f0:	mov	x2, x19
    a8f4:	bl	858c <PyInit__decimal@@Base+0x1a78>
    a8f8:	cbz	w0, a978 <PyInit__decimal@@Base+0x3e64>
    a8fc:	ldur	x2, [x29, #-8]
    a900:	ldr	x3, [sp, #16]
    a904:	add	x1, sp, #0x18
    a908:	mov	w0, #0x1                   	// #1
    a90c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    a910:	cbz	w0, a970 <PyInit__decimal@@Base+0x3e5c>
    a914:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    a918:	add	x0, x0, #0x318
    a91c:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    a920:	mov	x19, x0
    a924:	cbz	x0, a990 <PyInit__decimal@@Base+0x3e7c>
    a928:	ldur	x8, [x29, #-16]
    a92c:	ldp	x10, x9, [sp, #16]
    a930:	add	x0, x19, #0x18
    a934:	add	x4, sp, #0xc
    a938:	add	x1, x8, #0x18
    a93c:	add	x2, x9, #0x18
    a940:	add	x3, x10, #0x10
    a944:	bl	1ff08 <PyInit__decimal@@Base+0x193f4>
    a948:	ldur	x0, [x29, #-16]
    a94c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a950:	ldr	x0, [sp, #24]
    a954:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a958:	ldr	x0, [sp, #16]
    a95c:	ldr	w1, [sp, #12]
    a960:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    a964:	cbz	w0, a97c <PyInit__decimal@@Base+0x3e68>
    a968:	mov	x0, x19
    a96c:	b	a974 <PyInit__decimal@@Base+0x3e60>
    a970:	ldur	x0, [x29, #-16]
    a974:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a978:	mov	x19, xzr
    a97c:	mov	x0, x19
    a980:	ldp	x20, x19, [sp, #64]
    a984:	ldp	x29, x30, [sp, #48]
    a988:	add	sp, sp, #0x50
    a98c:	ret
    a990:	ldur	x0, [x29, #-16]
    a994:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a998:	ldr	x0, [sp, #24]
    a99c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    a9a0:	b	a97c <PyInit__decimal@@Base+0x3e68>
    a9a4:	sub	sp, sp, #0x90
    a9a8:	stp	x29, x30, [sp, #96]
    a9ac:	str	x21, [sp, #112]
    a9b0:	stp	x20, x19, [sp, #128]
    a9b4:	add	x29, sp, #0x60
    a9b8:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    a9bc:	ldr	x20, [x20, #4008]
    a9c0:	mov	x8, x2
    a9c4:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    a9c8:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    a9cc:	mov	x19, x0
    a9d0:	add	x2, x2, #0x3fb
    a9d4:	add	x3, x3, #0x6e0
    a9d8:	sub	x4, x29, #0x10
    a9dc:	add	x5, x29, #0x18
    a9e0:	sub	x6, x29, #0x8
    a9e4:	mov	x0, x1
    a9e8:	mov	x1, x8
    a9ec:	str	x20, [x29, #24]
    a9f0:	stur	x20, [x29, #-8]
    a9f4:	stur	wzr, [x29, #-36]
    a9f8:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    a9fc:	cbz	w0, ab30 <PyInit__decimal@@Base+0x401c>
    aa00:	ldur	x8, [x29, #-8]
    aa04:	cmp	x8, x20
    aa08:	b.eq	aa4c <PyInit__decimal@@Base+0x3f38>  // b.none
    aa0c:	ldr	x0, [x8, #8]
    aa10:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    aa14:	add	x8, x8, #0x4b8
    aa18:	cmp	x0, x8
    aa1c:	b.eq	aa5c <PyInit__decimal@@Base+0x3f48>  // b.none
    aa20:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    aa24:	add	x1, x1, #0x4b8
    aa28:	bl	6960 <PyType_IsSubtype@plt>
    aa2c:	cbnz	w0, aa5c <PyInit__decimal@@Base+0x3f48>
    aa30:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    aa34:	ldr	x8, [x8, #3936]
    aa38:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    aa3c:	add	x1, x1, #0x2e1
    aa40:	ldr	x0, [x8]
    aa44:	bl	65f0 <PyErr_SetString@plt>
    aa48:	b	ab30 <PyInit__decimal@@Base+0x401c>
    aa4c:	bl	792c <PyInit__decimal@@Base+0xe18>
    aa50:	stur	x0, [x29, #-8]
    aa54:	cbz	x0, ab30 <PyInit__decimal@@Base+0x401c>
    aa58:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    aa5c:	ldur	x8, [x29, #-8]
    aa60:	ldr	x0, [x29, #24]
    aa64:	ldp	q0, q1, [x8, #16]
    aa68:	ldr	q2, [x8, #48]
    aa6c:	cmp	x0, x20
    aa70:	stp	q0, q1, [sp]
    aa74:	str	q2, [sp, #32]
    aa78:	b.eq	aa94 <PyInit__decimal@@Base+0x3f80>  // b.none
    aa7c:	bl	d11c <PyInit__decimal@@Base+0x6608>
    aa80:	tbnz	w0, #31, ab30 <PyInit__decimal@@Base+0x401c>
    aa84:	mov	w1, w0
    aa88:	mov	x0, sp
    aa8c:	bl	13ae0 <PyInit__decimal@@Base+0xcfcc>
    aa90:	cbz	w0, ab18 <PyInit__decimal@@Base+0x4004>
    aa94:	ldur	x3, [x29, #-8]
    aa98:	sub	x1, x29, #0x18
    aa9c:	mov	w0, #0x1                   	// #1
    aaa0:	mov	x2, x19
    aaa4:	bl	858c <PyInit__decimal@@Base+0x1a78>
    aaa8:	cbz	w0, ab30 <PyInit__decimal@@Base+0x401c>
    aaac:	ldp	x2, x3, [x29, #-16]
    aab0:	sub	x1, x29, #0x20
    aab4:	mov	w0, #0x1                   	// #1
    aab8:	bl	858c <PyInit__decimal@@Base+0x1a78>
    aabc:	cbz	w0, ab28 <PyInit__decimal@@Base+0x4014>
    aac0:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    aac4:	add	x0, x0, #0x318
    aac8:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    aacc:	mov	x19, x0
    aad0:	cbz	x0, ab4c <PyInit__decimal@@Base+0x4038>
    aad4:	ldp	x21, x20, [x29, #-32]
    aad8:	add	x0, x19, #0x18
    aadc:	mov	x3, sp
    aae0:	sub	x4, x29, #0x24
    aae4:	add	x1, x20, #0x18
    aae8:	add	x2, x21, #0x18
    aaec:	bl	21314 <PyInit__decimal@@Base+0x1a800>
    aaf0:	mov	x0, x20
    aaf4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    aaf8:	mov	x0, x21
    aafc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ab00:	ldur	x0, [x29, #-8]
    ab04:	ldur	w1, [x29, #-36]
    ab08:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    ab0c:	cbz	w0, ab34 <PyInit__decimal@@Base+0x4020>
    ab10:	mov	x0, x19
    ab14:	b	ab2c <PyInit__decimal@@Base+0x4018>
    ab18:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
    ab1c:	add	x0, x0, #0x400
    ab20:	bl	8a34 <PyInit__decimal@@Base+0x1f20>
    ab24:	b	ab30 <PyInit__decimal@@Base+0x401c>
    ab28:	ldur	x0, [x29, #-24]
    ab2c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ab30:	mov	x19, xzr
    ab34:	mov	x0, x19
    ab38:	ldp	x20, x19, [sp, #128]
    ab3c:	ldr	x21, [sp, #112]
    ab40:	ldp	x29, x30, [sp, #96]
    ab44:	add	sp, sp, #0x90
    ab48:	ret
    ab4c:	ldur	x0, [x29, #-24]
    ab50:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ab54:	ldur	x0, [x29, #-32]
    ab58:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ab5c:	b	ab34 <PyInit__decimal@@Base+0x4020>
    ab60:	sub	sp, sp, #0x50
    ab64:	stp	x29, x30, [sp, #48]
    ab68:	stp	x20, x19, [sp, #64]
    ab6c:	add	x29, sp, #0x30
    ab70:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    ab74:	ldr	x20, [x20, #4008]
    ab78:	mov	x8, x2
    ab7c:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    ab80:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    ab84:	mov	x19, x0
    ab88:	add	x2, x2, #0x42b
    ab8c:	add	x3, x3, #0x700
    ab90:	sub	x4, x29, #0x8
    ab94:	add	x5, sp, #0x10
    ab98:	mov	x0, x1
    ab9c:	mov	x1, x8
    aba0:	str	x20, [sp, #16]
    aba4:	str	wzr, [sp, #12]
    aba8:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    abac:	cbz	w0, aca0 <PyInit__decimal@@Base+0x418c>
    abb0:	ldr	x8, [sp, #16]
    abb4:	cmp	x8, x20
    abb8:	b.eq	abfc <PyInit__decimal@@Base+0x40e8>  // b.none
    abbc:	ldr	x0, [x8, #8]
    abc0:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    abc4:	add	x8, x8, #0x4b8
    abc8:	cmp	x0, x8
    abcc:	b.eq	ac0c <PyInit__decimal@@Base+0x40f8>  // b.none
    abd0:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    abd4:	add	x1, x1, #0x4b8
    abd8:	bl	6960 <PyType_IsSubtype@plt>
    abdc:	cbnz	w0, ac0c <PyInit__decimal@@Base+0x40f8>
    abe0:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    abe4:	ldr	x8, [x8, #3936]
    abe8:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    abec:	add	x1, x1, #0x2e1
    abf0:	ldr	x0, [x8]
    abf4:	bl	65f0 <PyErr_SetString@plt>
    abf8:	b	aca0 <PyInit__decimal@@Base+0x418c>
    abfc:	bl	792c <PyInit__decimal@@Base+0xe18>
    ac00:	str	x0, [sp, #16]
    ac04:	cbz	x0, aca0 <PyInit__decimal@@Base+0x418c>
    ac08:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ac0c:	ldr	x3, [sp, #16]
    ac10:	sub	x1, x29, #0x10
    ac14:	mov	w0, #0x1                   	// #1
    ac18:	mov	x2, x19
    ac1c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    ac20:	cbz	w0, aca0 <PyInit__decimal@@Base+0x418c>
    ac24:	ldur	x2, [x29, #-8]
    ac28:	ldr	x3, [sp, #16]
    ac2c:	add	x1, sp, #0x18
    ac30:	mov	w0, #0x1                   	// #1
    ac34:	bl	858c <PyInit__decimal@@Base+0x1a78>
    ac38:	cbz	w0, ac98 <PyInit__decimal@@Base+0x4184>
    ac3c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    ac40:	add	x0, x0, #0x318
    ac44:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    ac48:	mov	x19, x0
    ac4c:	cbz	x0, acb8 <PyInit__decimal@@Base+0x41a4>
    ac50:	ldur	x8, [x29, #-16]
    ac54:	ldp	x10, x9, [sp, #16]
    ac58:	add	x0, x19, #0x18
    ac5c:	add	x4, sp, #0xc
    ac60:	add	x1, x8, #0x18
    ac64:	add	x2, x9, #0x18
    ac68:	add	x3, x10, #0x10
    ac6c:	bl	216dc <PyInit__decimal@@Base+0x1abc8>
    ac70:	ldur	x0, [x29, #-16]
    ac74:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ac78:	ldr	x0, [sp, #24]
    ac7c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ac80:	ldr	x0, [sp, #16]
    ac84:	ldr	w1, [sp, #12]
    ac88:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    ac8c:	cbz	w0, aca4 <PyInit__decimal@@Base+0x4190>
    ac90:	mov	x0, x19
    ac94:	b	ac9c <PyInit__decimal@@Base+0x4188>
    ac98:	ldur	x0, [x29, #-16]
    ac9c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    aca0:	mov	x19, xzr
    aca4:	mov	x0, x19
    aca8:	ldp	x20, x19, [sp, #64]
    acac:	ldp	x29, x30, [sp, #48]
    acb0:	add	sp, sp, #0x50
    acb4:	ret
    acb8:	ldur	x0, [x29, #-16]
    acbc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    acc0:	ldr	x0, [sp, #24]
    acc4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    acc8:	b	aca4 <PyInit__decimal@@Base+0x4190>
    accc:	sub	sp, sp, #0x60
    acd0:	stp	x29, x30, [sp, #64]
    acd4:	stp	x20, x19, [sp, #80]
    acd8:	add	x29, sp, #0x40
    acdc:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    ace0:	ldr	x20, [x20, #4008]
    ace4:	mov	x8, x2
    ace8:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    acec:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    acf0:	mov	x19, x0
    acf4:	add	x2, x2, #0x42a
    acf8:	add	x3, x3, #0x718
    acfc:	sub	x4, x29, #0x8
    ad00:	sub	x5, x29, #0x10
    ad04:	add	x6, sp, #0x10
    ad08:	mov	x0, x1
    ad0c:	mov	x1, x8
    ad10:	str	x20, [sp, #16]
    ad14:	str	wzr, [sp, #12]
    ad18:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    ad1c:	cbz	w0, ae48 <PyInit__decimal@@Base+0x4334>
    ad20:	ldr	x8, [sp, #16]
    ad24:	cmp	x8, x20
    ad28:	b.eq	ad6c <PyInit__decimal@@Base+0x4258>  // b.none
    ad2c:	ldr	x0, [x8, #8]
    ad30:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    ad34:	add	x8, x8, #0x4b8
    ad38:	cmp	x0, x8
    ad3c:	b.eq	ad7c <PyInit__decimal@@Base+0x4268>  // b.none
    ad40:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    ad44:	add	x1, x1, #0x4b8
    ad48:	bl	6960 <PyType_IsSubtype@plt>
    ad4c:	cbnz	w0, ad7c <PyInit__decimal@@Base+0x4268>
    ad50:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    ad54:	ldr	x8, [x8, #3936]
    ad58:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    ad5c:	add	x1, x1, #0x2e1
    ad60:	ldr	x0, [x8]
    ad64:	bl	65f0 <PyErr_SetString@plt>
    ad68:	b	ae48 <PyInit__decimal@@Base+0x4334>
    ad6c:	bl	792c <PyInit__decimal@@Base+0xe18>
    ad70:	str	x0, [sp, #16]
    ad74:	cbz	x0, ae48 <PyInit__decimal@@Base+0x4334>
    ad78:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ad7c:	ldr	x3, [sp, #16]
    ad80:	sub	x1, x29, #0x18
    ad84:	mov	w0, #0x1                   	// #1
    ad88:	mov	x2, x19
    ad8c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    ad90:	cbz	w0, ae48 <PyInit__decimal@@Base+0x4334>
    ad94:	ldur	x2, [x29, #-8]
    ad98:	ldr	x3, [sp, #16]
    ad9c:	add	x1, sp, #0x20
    ada0:	mov	w0, #0x1                   	// #1
    ada4:	bl	858c <PyInit__decimal@@Base+0x1a78>
    ada8:	cbz	w0, ae30 <PyInit__decimal@@Base+0x431c>
    adac:	ldur	x2, [x29, #-16]
    adb0:	ldr	x3, [sp, #16]
    adb4:	add	x1, sp, #0x18
    adb8:	mov	w0, #0x1                   	// #1
    adbc:	bl	858c <PyInit__decimal@@Base+0x1a78>
    adc0:	cbz	w0, ae38 <PyInit__decimal@@Base+0x4324>
    adc4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    adc8:	add	x0, x0, #0x318
    adcc:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    add0:	mov	x19, x0
    add4:	cbz	x0, ae60 <PyInit__decimal@@Base+0x434c>
    add8:	ldur	x8, [x29, #-24]
    addc:	ldp	x10, x9, [sp, #24]
    ade0:	ldr	x11, [sp, #16]
    ade4:	add	x0, x19, #0x18
    ade8:	add	x1, x8, #0x18
    adec:	add	x2, x9, #0x18
    adf0:	add	x3, x10, #0x18
    adf4:	add	x4, x11, #0x10
    adf8:	add	x5, sp, #0xc
    adfc:	bl	1e174 <PyInit__decimal@@Base+0x17660>
    ae00:	ldur	x0, [x29, #-24]
    ae04:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ae08:	ldr	x0, [sp, #32]
    ae0c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ae10:	ldr	x0, [sp, #24]
    ae14:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ae18:	ldr	x0, [sp, #16]
    ae1c:	ldr	w1, [sp, #12]
    ae20:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    ae24:	cbz	w0, ae4c <PyInit__decimal@@Base+0x4338>
    ae28:	mov	x0, x19
    ae2c:	b	ae44 <PyInit__decimal@@Base+0x4330>
    ae30:	ldur	x0, [x29, #-24]
    ae34:	b	ae44 <PyInit__decimal@@Base+0x4330>
    ae38:	ldur	x0, [x29, #-24]
    ae3c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ae40:	ldr	x0, [sp, #32]
    ae44:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ae48:	mov	x19, xzr
    ae4c:	mov	x0, x19
    ae50:	ldp	x20, x19, [sp, #80]
    ae54:	ldp	x29, x30, [sp, #64]
    ae58:	add	sp, sp, #0x60
    ae5c:	ret
    ae60:	ldur	x0, [x29, #-24]
    ae64:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ae68:	ldr	x0, [sp, #32]
    ae6c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ae70:	ldr	x0, [sp, #24]
    ae74:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ae78:	b	ae4c <PyInit__decimal@@Base+0x4338>
    ae7c:	stp	x29, x30, [sp, #-16]!
    ae80:	mov	x29, sp
    ae84:	add	x0, x0, #0x18
    ae88:	bl	18358 <PyInit__decimal@@Base+0x11844>
    ae8c:	cbz	w0, aea4 <PyInit__decimal@@Base+0x4390>
    ae90:	bl	9140 <PyInit__decimal@@Base+0x262c>
    ae94:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    ae98:	ldr	x0, [x0, #4024]
    ae9c:	ldp	x29, x30, [sp], #16
    aea0:	ret
    aea4:	bl	915c <PyInit__decimal@@Base+0x2648>
    aea8:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    aeac:	ldr	x0, [x0, #3976]
    aeb0:	ldp	x29, x30, [sp], #16
    aeb4:	ret
    aeb8:	stp	x29, x30, [sp, #-16]!
    aebc:	mov	x29, sp
    aec0:	add	x0, x0, #0x18
    aec4:	bl	18360 <PyInit__decimal@@Base+0x1184c>
    aec8:	cbz	w0, aee0 <PyInit__decimal@@Base+0x43cc>
    aecc:	bl	9140 <PyInit__decimal@@Base+0x262c>
    aed0:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    aed4:	ldr	x0, [x0, #4024]
    aed8:	ldp	x29, x30, [sp], #16
    aedc:	ret
    aee0:	bl	915c <PyInit__decimal@@Base+0x2648>
    aee4:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    aee8:	ldr	x0, [x0, #3976]
    aeec:	ldp	x29, x30, [sp], #16
    aef0:	ret
    aef4:	stp	x29, x30, [sp, #-16]!
    aef8:	mov	x29, sp
    aefc:	add	x0, x0, #0x18
    af00:	bl	18370 <PyInit__decimal@@Base+0x1185c>
    af04:	cbz	w0, af1c <PyInit__decimal@@Base+0x4408>
    af08:	bl	9140 <PyInit__decimal@@Base+0x262c>
    af0c:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    af10:	ldr	x0, [x0, #4024]
    af14:	ldp	x29, x30, [sp], #16
    af18:	ret
    af1c:	bl	915c <PyInit__decimal@@Base+0x2648>
    af20:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    af24:	ldr	x0, [x0, #3976]
    af28:	ldp	x29, x30, [sp], #16
    af2c:	ret
    af30:	stp	x29, x30, [sp, #-16]!
    af34:	mov	x29, sp
    af38:	add	x0, x0, #0x18
    af3c:	bl	1837c <PyInit__decimal@@Base+0x11868>
    af40:	cbz	w0, af58 <PyInit__decimal@@Base+0x4444>
    af44:	bl	9140 <PyInit__decimal@@Base+0x262c>
    af48:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    af4c:	ldr	x0, [x0, #4024]
    af50:	ldp	x29, x30, [sp], #16
    af54:	ret
    af58:	bl	915c <PyInit__decimal@@Base+0x2648>
    af5c:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    af60:	ldr	x0, [x0, #3976]
    af64:	ldp	x29, x30, [sp], #16
    af68:	ret
    af6c:	stp	x29, x30, [sp, #-16]!
    af70:	mov	x29, sp
    af74:	add	x0, x0, #0x18
    af78:	bl	183a4 <PyInit__decimal@@Base+0x11890>
    af7c:	cbz	w0, af94 <PyInit__decimal@@Base+0x4480>
    af80:	bl	9140 <PyInit__decimal@@Base+0x262c>
    af84:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    af88:	ldr	x0, [x0, #4024]
    af8c:	ldp	x29, x30, [sp], #16
    af90:	ret
    af94:	bl	915c <PyInit__decimal@@Base+0x2648>
    af98:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    af9c:	ldr	x0, [x0, #3976]
    afa0:	ldp	x29, x30, [sp], #16
    afa4:	ret
    afa8:	stp	x29, x30, [sp, #-16]!
    afac:	mov	x29, sp
    afb0:	add	x0, x0, #0x18
    afb4:	bl	183bc <PyInit__decimal@@Base+0x118a8>
    afb8:	cbz	w0, afd0 <PyInit__decimal@@Base+0x44bc>
    afbc:	bl	9140 <PyInit__decimal@@Base+0x262c>
    afc0:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    afc4:	ldr	x0, [x0, #4024]
    afc8:	ldp	x29, x30, [sp], #16
    afcc:	ret
    afd0:	bl	915c <PyInit__decimal@@Base+0x2648>
    afd4:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    afd8:	ldr	x0, [x0, #3976]
    afdc:	ldp	x29, x30, [sp], #16
    afe0:	ret
    afe4:	stp	x29, x30, [sp, #-16]!
    afe8:	mov	x29, sp
    afec:	add	x0, x0, #0x18
    aff0:	bl	183b0 <PyInit__decimal@@Base+0x1189c>
    aff4:	cbz	w0, b00c <PyInit__decimal@@Base+0x44f8>
    aff8:	bl	9140 <PyInit__decimal@@Base+0x262c>
    affc:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    b000:	ldr	x0, [x0, #4024]
    b004:	ldp	x29, x30, [sp], #16
    b008:	ret
    b00c:	bl	915c <PyInit__decimal@@Base+0x2648>
    b010:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    b014:	ldr	x0, [x0, #3976]
    b018:	ldp	x29, x30, [sp], #16
    b01c:	ret
    b020:	stp	x29, x30, [sp, #-16]!
    b024:	mov	x29, sp
    b028:	add	x0, x0, #0x18
    b02c:	bl	183d4 <PyInit__decimal@@Base+0x118c0>
    b030:	cbz	w0, b048 <PyInit__decimal@@Base+0x4534>
    b034:	bl	9140 <PyInit__decimal@@Base+0x262c>
    b038:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    b03c:	ldr	x0, [x0, #4024]
    b040:	ldp	x29, x30, [sp], #16
    b044:	ret
    b048:	bl	915c <PyInit__decimal@@Base+0x2648>
    b04c:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    b050:	ldr	x0, [x0, #3976]
    b054:	ldp	x29, x30, [sp], #16
    b058:	ret
    b05c:	sub	sp, sp, #0x30
    b060:	stp	x29, x30, [sp, #16]
    b064:	stp	x20, x19, [sp, #32]
    b068:	add	x29, sp, #0x10
    b06c:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    b070:	ldr	x20, [x20, #4008]
    b074:	mov	x8, x2
    b078:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    b07c:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    b080:	mov	x19, x0
    b084:	add	x2, x2, #0x42c
    b088:	add	x3, x3, #0x738
    b08c:	add	x4, sp, #0x8
    b090:	mov	x0, x1
    b094:	mov	x1, x8
    b098:	str	x20, [sp, #8]
    b09c:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    b0a0:	cbz	w0, b0ec <PyInit__decimal@@Base+0x45d8>
    b0a4:	ldr	x8, [sp, #8]
    b0a8:	cmp	x8, x20
    b0ac:	b.eq	b0f4 <PyInit__decimal@@Base+0x45e0>  // b.none
    b0b0:	ldr	x0, [x8, #8]
    b0b4:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    b0b8:	add	x8, x8, #0x4b8
    b0bc:	cmp	x0, x8
    b0c0:	b.eq	b104 <PyInit__decimal@@Base+0x45f0>  // b.none
    b0c4:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    b0c8:	add	x1, x1, #0x4b8
    b0cc:	bl	6960 <PyType_IsSubtype@plt>
    b0d0:	cbnz	w0, b104 <PyInit__decimal@@Base+0x45f0>
    b0d4:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    b0d8:	ldr	x8, [x8, #3936]
    b0dc:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    b0e0:	add	x1, x1, #0x2e1
    b0e4:	ldr	x0, [x8]
    b0e8:	bl	65f0 <PyErr_SetString@plt>
    b0ec:	mov	x0, xzr
    b0f0:	b	b134 <PyInit__decimal@@Base+0x4620>
    b0f4:	bl	792c <PyInit__decimal@@Base+0xe18>
    b0f8:	str	x0, [sp, #8]
    b0fc:	cbz	x0, b134 <PyInit__decimal@@Base+0x4620>
    b100:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b104:	ldr	x8, [sp, #8]
    b108:	add	x0, x19, #0x18
    b10c:	add	x1, x8, #0x10
    b110:	bl	18420 <PyInit__decimal@@Base+0x1190c>
    b114:	cbz	w0, b128 <PyInit__decimal@@Base+0x4614>
    b118:	bl	9140 <PyInit__decimal@@Base+0x262c>
    b11c:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    b120:	ldr	x0, [x0, #4024]
    b124:	b	b134 <PyInit__decimal@@Base+0x4620>
    b128:	bl	915c <PyInit__decimal@@Base+0x2648>
    b12c:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    b130:	ldr	x0, [x0, #3976]
    b134:	ldp	x20, x19, [sp, #32]
    b138:	ldp	x29, x30, [sp, #16]
    b13c:	add	sp, sp, #0x30
    b140:	ret
    b144:	sub	sp, sp, #0x30
    b148:	stp	x29, x30, [sp, #16]
    b14c:	stp	x20, x19, [sp, #32]
    b150:	add	x29, sp, #0x10
    b154:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    b158:	ldr	x20, [x20, #4008]
    b15c:	mov	x8, x2
    b160:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    b164:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    b168:	mov	x19, x0
    b16c:	add	x2, x2, #0x42c
    b170:	add	x3, x3, #0x748
    b174:	add	x4, sp, #0x8
    b178:	mov	x0, x1
    b17c:	mov	x1, x8
    b180:	str	x20, [sp, #8]
    b184:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    b188:	cbz	w0, b1d4 <PyInit__decimal@@Base+0x46c0>
    b18c:	ldr	x8, [sp, #8]
    b190:	cmp	x8, x20
    b194:	b.eq	b1dc <PyInit__decimal@@Base+0x46c8>  // b.none
    b198:	ldr	x0, [x8, #8]
    b19c:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    b1a0:	add	x8, x8, #0x4b8
    b1a4:	cmp	x0, x8
    b1a8:	b.eq	b1ec <PyInit__decimal@@Base+0x46d8>  // b.none
    b1ac:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    b1b0:	add	x1, x1, #0x4b8
    b1b4:	bl	6960 <PyType_IsSubtype@plt>
    b1b8:	cbnz	w0, b1ec <PyInit__decimal@@Base+0x46d8>
    b1bc:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    b1c0:	ldr	x8, [x8, #3936]
    b1c4:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    b1c8:	add	x1, x1, #0x2e1
    b1cc:	ldr	x0, [x8]
    b1d0:	bl	65f0 <PyErr_SetString@plt>
    b1d4:	mov	x0, xzr
    b1d8:	b	b21c <PyInit__decimal@@Base+0x4708>
    b1dc:	bl	792c <PyInit__decimal@@Base+0xe18>
    b1e0:	str	x0, [sp, #8]
    b1e4:	cbz	x0, b21c <PyInit__decimal@@Base+0x4708>
    b1e8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b1ec:	ldr	x8, [sp, #8]
    b1f0:	add	x0, x19, #0x18
    b1f4:	add	x1, x8, #0x10
    b1f8:	bl	18464 <PyInit__decimal@@Base+0x11950>
    b1fc:	cbz	w0, b210 <PyInit__decimal@@Base+0x46fc>
    b200:	bl	9140 <PyInit__decimal@@Base+0x262c>
    b204:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    b208:	ldr	x0, [x0, #4024]
    b20c:	b	b21c <PyInit__decimal@@Base+0x4708>
    b210:	bl	915c <PyInit__decimal@@Base+0x2648>
    b214:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    b218:	ldr	x0, [x0, #3976]
    b21c:	ldp	x20, x19, [sp, #32]
    b220:	ldp	x29, x30, [sp, #16]
    b224:	add	sp, sp, #0x30
    b228:	ret
    b22c:	stp	x29, x30, [sp, #-32]!
    b230:	str	x19, [sp, #16]
    b234:	mov	x29, sp
    b238:	add	x19, x0, #0x18
    b23c:	mov	x0, x19
    b240:	bl	183c8 <PyInit__decimal@@Base+0x118b4>
    b244:	cbz	w0, b250 <PyInit__decimal@@Base+0x473c>
    b248:	mov	x0, xzr
    b24c:	b	b258 <PyInit__decimal@@Base+0x4744>
    b250:	mov	x0, x19
    b254:	bl	18018 <PyInit__decimal@@Base+0x11504>
    b258:	bl	6640 <PyLong_FromSsize_t@plt>
    b25c:	ldr	x19, [sp, #16]
    b260:	ldp	x29, x30, [sp], #32
    b264:	ret
    b268:	stp	x29, x30, [sp, #-32]!
    b26c:	str	x19, [sp, #16]
    b270:	mov	x29, sp
    b274:	mov	x19, x0
    b278:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    b27c:	mov	x0, x19
    b280:	ldr	x19, [sp, #16]
    b284:	ldp	x29, x30, [sp], #32
    b288:	ret
    b28c:	stp	x29, x30, [sp, #-32]!
    b290:	str	x19, [sp, #16]
    b294:	mov	x29, sp
    b298:	mov	x19, x0
    b29c:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    b2a0:	mov	x0, x19
    b2a4:	ldr	x19, [sp, #16]
    b2a8:	ldp	x29, x30, [sp], #32
    b2ac:	ret
    b2b0:	stp	x29, x30, [sp, #-32]!
    b2b4:	str	x19, [sp, #16]
    b2b8:	mov	x29, sp
    b2bc:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    b2c0:	add	x0, x0, #0x318
    b2c4:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    b2c8:	mov	x19, x0
    b2cc:	cbz	x0, b2e0 <PyInit__decimal@@Base+0x47cc>
    b2d0:	mov	w2, #0xa                   	// #10
    b2d4:	mov	x0, x19
    b2d8:	mov	w1, wzr
    b2dc:	bl	88d8 <PyInit__decimal@@Base+0x1dc4>
    b2e0:	mov	x0, x19
    b2e4:	ldr	x19, [sp, #16]
    b2e8:	ldp	x29, x30, [sp], #32
    b2ec:	ret
    b2f0:	sub	sp, sp, #0x30
    b2f4:	stp	x29, x30, [sp, #16]
    b2f8:	stp	x20, x19, [sp, #32]
    b2fc:	add	x29, sp, #0x10
    b300:	mov	x20, x0
    b304:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    b308:	add	x0, x0, #0x318
    b30c:	stur	wzr, [x29, #-4]
    b310:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    b314:	mov	x19, x0
    b318:	cbz	x0, b344 <PyInit__decimal@@Base+0x4830>
    b31c:	add	x0, x19, #0x18
    b320:	add	x1, x20, #0x18
    b324:	sub	x2, x29, #0x4
    b328:	bl	19bb0 <PyInit__decimal@@Base+0x1309c>
    b32c:	ldurb	w8, [x29, #-3]
    b330:	tbz	w8, #1, b344 <PyInit__decimal@@Base+0x4830>
    b334:	mov	x0, x19
    b338:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b33c:	bl	6580 <PyErr_NoMemory@plt>
    b340:	mov	x19, xzr
    b344:	mov	x0, x19
    b348:	ldp	x20, x19, [sp, #32]
    b34c:	ldp	x29, x30, [sp, #16]
    b350:	add	sp, sp, #0x30
    b354:	ret
    b358:	sub	sp, sp, #0x30
    b35c:	stp	x29, x30, [sp, #16]
    b360:	stp	x20, x19, [sp, #32]
    b364:	add	x29, sp, #0x10
    b368:	mov	x20, x0
    b36c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    b370:	add	x0, x0, #0x318
    b374:	stur	wzr, [x29, #-4]
    b378:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    b37c:	mov	x19, x0
    b380:	cbz	x0, b3ac <PyInit__decimal@@Base+0x4898>
    b384:	add	x0, x19, #0x18
    b388:	add	x1, x20, #0x18
    b38c:	sub	x2, x29, #0x4
    b390:	bl	19be4 <PyInit__decimal@@Base+0x130d0>
    b394:	ldurb	w8, [x29, #-3]
    b398:	tbz	w8, #1, b3ac <PyInit__decimal@@Base+0x4898>
    b39c:	mov	x0, x19
    b3a0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b3a4:	bl	6580 <PyErr_NoMemory@plt>
    b3a8:	mov	x19, xzr
    b3ac:	mov	x0, x19
    b3b0:	ldp	x20, x19, [sp, #32]
    b3b4:	ldp	x29, x30, [sp, #16]
    b3b8:	add	sp, sp, #0x30
    b3bc:	ret
    b3c0:	sub	sp, sp, #0x30
    b3c4:	stp	x29, x30, [sp, #16]
    b3c8:	stp	x20, x19, [sp, #32]
    b3cc:	add	x29, sp, #0x10
    b3d0:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    b3d4:	ldr	x20, [x20, #4008]
    b3d8:	mov	x8, x2
    b3dc:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    b3e0:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    b3e4:	mov	x19, x0
    b3e8:	add	x2, x2, #0x42c
    b3ec:	add	x3, x3, #0x758
    b3f0:	add	x4, sp, #0x8
    b3f4:	mov	x0, x1
    b3f8:	mov	x1, x8
    b3fc:	str	x20, [sp, #8]
    b400:	str	wzr, [sp, #4]
    b404:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    b408:	cbz	w0, b4ac <PyInit__decimal@@Base+0x4998>
    b40c:	ldr	x8, [sp, #8]
    b410:	cmp	x8, x20
    b414:	b.eq	b458 <PyInit__decimal@@Base+0x4944>  // b.none
    b418:	ldr	x0, [x8, #8]
    b41c:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    b420:	add	x8, x8, #0x4b8
    b424:	cmp	x0, x8
    b428:	b.eq	b468 <PyInit__decimal@@Base+0x4954>  // b.none
    b42c:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    b430:	add	x1, x1, #0x4b8
    b434:	bl	6960 <PyType_IsSubtype@plt>
    b438:	cbnz	w0, b468 <PyInit__decimal@@Base+0x4954>
    b43c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    b440:	ldr	x8, [x8, #3936]
    b444:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    b448:	add	x1, x1, #0x2e1
    b44c:	ldr	x0, [x8]
    b450:	bl	65f0 <PyErr_SetString@plt>
    b454:	b	b4ac <PyInit__decimal@@Base+0x4998>
    b458:	bl	792c <PyInit__decimal@@Base+0xe18>
    b45c:	str	x0, [sp, #8]
    b460:	cbz	x0, b4ac <PyInit__decimal@@Base+0x4998>
    b464:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b468:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    b46c:	add	x0, x0, #0x318
    b470:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    b474:	mov	x20, x0
    b478:	cbz	x0, b4b0 <PyInit__decimal@@Base+0x499c>
    b47c:	ldr	x8, [sp, #8]
    b480:	add	x0, x20, #0x18
    b484:	add	x1, x19, #0x18
    b488:	add	x3, sp, #0x4
    b48c:	add	x2, x8, #0x10
    b490:	bl	1b014 <PyInit__decimal@@Base+0x14500>
    b494:	ldr	x0, [sp, #8]
    b498:	ldr	w1, [sp, #4]
    b49c:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    b4a0:	cbz	w0, b4b0 <PyInit__decimal@@Base+0x499c>
    b4a4:	mov	x0, x20
    b4a8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b4ac:	mov	x20, xzr
    b4b0:	mov	x0, x20
    b4b4:	ldp	x20, x19, [sp, #32]
    b4b8:	ldp	x29, x30, [sp, #16]
    b4bc:	add	sp, sp, #0x30
    b4c0:	ret
    b4c4:	sub	sp, sp, #0x30
    b4c8:	stp	x29, x30, [sp, #16]
    b4cc:	stp	x20, x19, [sp, #32]
    b4d0:	add	x29, sp, #0x10
    b4d4:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    b4d8:	ldr	x20, [x20, #4008]
    b4dc:	mov	x8, x2
    b4e0:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    b4e4:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    b4e8:	mov	x19, x0
    b4ec:	add	x2, x2, #0x42c
    b4f0:	add	x3, x3, #0x768
    b4f4:	add	x4, sp, #0x8
    b4f8:	mov	x0, x1
    b4fc:	mov	x1, x8
    b500:	str	x20, [sp, #8]
    b504:	str	wzr, [sp, #4]
    b508:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    b50c:	cbz	w0, b5b0 <PyInit__decimal@@Base+0x4a9c>
    b510:	ldr	x8, [sp, #8]
    b514:	cmp	x8, x20
    b518:	b.eq	b55c <PyInit__decimal@@Base+0x4a48>  // b.none
    b51c:	ldr	x0, [x8, #8]
    b520:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    b524:	add	x8, x8, #0x4b8
    b528:	cmp	x0, x8
    b52c:	b.eq	b56c <PyInit__decimal@@Base+0x4a58>  // b.none
    b530:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    b534:	add	x1, x1, #0x4b8
    b538:	bl	6960 <PyType_IsSubtype@plt>
    b53c:	cbnz	w0, b56c <PyInit__decimal@@Base+0x4a58>
    b540:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    b544:	ldr	x8, [x8, #3936]
    b548:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    b54c:	add	x1, x1, #0x2e1
    b550:	ldr	x0, [x8]
    b554:	bl	65f0 <PyErr_SetString@plt>
    b558:	b	b5b0 <PyInit__decimal@@Base+0x4a9c>
    b55c:	bl	792c <PyInit__decimal@@Base+0xe18>
    b560:	str	x0, [sp, #8]
    b564:	cbz	x0, b5b0 <PyInit__decimal@@Base+0x4a9c>
    b568:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b56c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    b570:	add	x0, x0, #0x318
    b574:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    b578:	mov	x20, x0
    b57c:	cbz	x0, b5b4 <PyInit__decimal@@Base+0x4aa0>
    b580:	ldr	x8, [sp, #8]
    b584:	add	x0, x20, #0x18
    b588:	add	x1, x19, #0x18
    b58c:	add	x3, sp, #0x4
    b590:	add	x2, x8, #0x10
    b594:	bl	1ae20 <PyInit__decimal@@Base+0x1430c>
    b598:	ldr	x0, [sp, #8]
    b59c:	ldr	w1, [sp, #4]
    b5a0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    b5a4:	cbz	w0, b5b4 <PyInit__decimal@@Base+0x4aa0>
    b5a8:	mov	x0, x20
    b5ac:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b5b0:	mov	x20, xzr
    b5b4:	mov	x0, x20
    b5b8:	ldp	x20, x19, [sp, #32]
    b5bc:	ldp	x29, x30, [sp, #16]
    b5c0:	add	sp, sp, #0x30
    b5c4:	ret
    b5c8:	sub	sp, sp, #0x30
    b5cc:	stp	x29, x30, [sp, #16]
    b5d0:	stp	x20, x19, [sp, #32]
    b5d4:	add	x29, sp, #0x10
    b5d8:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    b5dc:	ldr	x20, [x20, #4008]
    b5e0:	mov	x8, x2
    b5e4:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    b5e8:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    b5ec:	mov	x19, x0
    b5f0:	add	x2, x2, #0x42c
    b5f4:	add	x3, x3, #0x778
    b5f8:	add	x4, sp, #0x8
    b5fc:	mov	x0, x1
    b600:	mov	x1, x8
    b604:	str	x20, [sp, #8]
    b608:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    b60c:	cbz	w0, b658 <PyInit__decimal@@Base+0x4b44>
    b610:	ldr	x8, [sp, #8]
    b614:	cmp	x8, x20
    b618:	b.eq	b660 <PyInit__decimal@@Base+0x4b4c>  // b.none
    b61c:	ldr	x0, [x8, #8]
    b620:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    b624:	add	x8, x8, #0x4b8
    b628:	cmp	x0, x8
    b62c:	b.eq	b670 <PyInit__decimal@@Base+0x4b5c>  // b.none
    b630:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    b634:	add	x1, x1, #0x4b8
    b638:	bl	6960 <PyType_IsSubtype@plt>
    b63c:	cbnz	w0, b670 <PyInit__decimal@@Base+0x4b5c>
    b640:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    b644:	ldr	x8, [x8, #3936]
    b648:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    b64c:	add	x1, x1, #0x2e1
    b650:	ldr	x0, [x8]
    b654:	bl	65f0 <PyErr_SetString@plt>
    b658:	mov	x0, xzr
    b65c:	b	b684 <PyInit__decimal@@Base+0x4b70>
    b660:	bl	792c <PyInit__decimal@@Base+0xe18>
    b664:	str	x0, [sp, #8]
    b668:	cbz	x0, b684 <PyInit__decimal@@Base+0x4b70>
    b66c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b670:	ldr	x8, [sp, #8]
    b674:	add	x0, x19, #0x18
    b678:	add	x1, x8, #0x10
    b67c:	bl	1ad2c <PyInit__decimal@@Base+0x14218>
    b680:	bl	6900 <PyUnicode_FromString@plt>
    b684:	ldp	x20, x19, [sp, #32]
    b688:	ldp	x29, x30, [sp, #16]
    b68c:	add	sp, sp, #0x30
    b690:	ret
    b694:	sub	sp, sp, #0x30
    b698:	stp	x29, x30, [sp, #16]
    b69c:	stp	x20, x19, [sp, #32]
    b6a0:	add	x29, sp, #0x10
    b6a4:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    b6a8:	ldr	x20, [x20, #4008]
    b6ac:	mov	x8, x2
    b6b0:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    b6b4:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    b6b8:	mov	x19, x0
    b6bc:	add	x2, x2, #0x42c
    b6c0:	add	x3, x3, #0x788
    b6c4:	add	x4, sp, #0x8
    b6c8:	mov	x0, x1
    b6cc:	mov	x1, x8
    b6d0:	str	x20, [sp, #8]
    b6d4:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    b6d8:	cbz	w0, b77c <PyInit__decimal@@Base+0x4c68>
    b6dc:	ldr	x8, [sp, #8]
    b6e0:	cmp	x8, x20
    b6e4:	b.eq	b728 <PyInit__decimal@@Base+0x4c14>  // b.none
    b6e8:	ldr	x0, [x8, #8]
    b6ec:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    b6f0:	add	x8, x8, #0x4b8
    b6f4:	cmp	x0, x8
    b6f8:	b.eq	b738 <PyInit__decimal@@Base+0x4c24>  // b.none
    b6fc:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    b700:	add	x1, x1, #0x4b8
    b704:	bl	6960 <PyType_IsSubtype@plt>
    b708:	cbnz	w0, b738 <PyInit__decimal@@Base+0x4c24>
    b70c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    b710:	ldr	x8, [x8, #3936]
    b714:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    b718:	add	x1, x1, #0x2e1
    b71c:	ldr	x0, [x8]
    b720:	bl	65f0 <PyErr_SetString@plt>
    b724:	b	b77c <PyInit__decimal@@Base+0x4c68>
    b728:	bl	792c <PyInit__decimal@@Base+0xe18>
    b72c:	str	x0, [sp, #8]
    b730:	cbz	x0, b77c <PyInit__decimal@@Base+0x4c68>
    b734:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b738:	ldr	x8, [sp, #8]
    b73c:	add	x1, x19, #0x18
    b740:	mov	x0, sp
    b744:	ldr	w2, [x8, #80]
    b748:	bl	1610c <PyInit__decimal@@Base+0xf5f8>
    b74c:	tbnz	x0, #63, b778 <PyInit__decimal@@Base+0x4c64>
    b750:	mov	x1, x0
    b754:	ldr	x0, [sp]
    b758:	bl	8e78 <PyInit__decimal@@Base+0x2364>
    b75c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    b760:	ldr	x9, [x8, #1376]
    b764:	ldr	x8, [sp]
    b768:	mov	x19, x0
    b76c:	mov	x0, x8
    b770:	blr	x9
    b774:	b	b780 <PyInit__decimal@@Base+0x4c6c>
    b778:	bl	6580 <PyErr_NoMemory@plt>
    b77c:	mov	x19, xzr
    b780:	mov	x0, x19
    b784:	ldp	x20, x19, [sp, #32]
    b788:	ldp	x29, x30, [sp, #16]
    b78c:	add	sp, sp, #0x30
    b790:	ret
    b794:	sub	sp, sp, #0x50
    b798:	stp	x29, x30, [sp, #32]
    b79c:	str	x21, [sp, #48]
    b7a0:	stp	x20, x19, [sp, #64]
    b7a4:	add	x29, sp, #0x20
    b7a8:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    b7ac:	ldr	x20, [x20, #4008]
    b7b0:	mov	x8, x2
    b7b4:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    b7b8:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    b7bc:	mov	x19, x0
    b7c0:	add	x2, x2, #0x42b
    b7c4:	add	x3, x3, #0x798
    b7c8:	sub	x4, x29, #0x8
    b7cc:	add	x5, x29, #0x18
    b7d0:	mov	x0, x1
    b7d4:	mov	x1, x8
    b7d8:	str	x20, [x29, #24]
    b7dc:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    b7e0:	cbz	w0, b8b0 <PyInit__decimal@@Base+0x4d9c>
    b7e4:	ldr	x8, [x29, #24]
    b7e8:	cmp	x8, x20
    b7ec:	b.eq	b830 <PyInit__decimal@@Base+0x4d1c>  // b.none
    b7f0:	ldr	x0, [x8, #8]
    b7f4:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    b7f8:	add	x8, x8, #0x4b8
    b7fc:	cmp	x0, x8
    b800:	b.eq	b840 <PyInit__decimal@@Base+0x4d2c>  // b.none
    b804:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    b808:	add	x1, x1, #0x4b8
    b80c:	bl	6960 <PyType_IsSubtype@plt>
    b810:	cbnz	w0, b840 <PyInit__decimal@@Base+0x4d2c>
    b814:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    b818:	ldr	x8, [x8, #3936]
    b81c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    b820:	add	x1, x1, #0x2e1
    b824:	ldr	x0, [x8]
    b828:	bl	65f0 <PyErr_SetString@plt>
    b82c:	b	b8b0 <PyInit__decimal@@Base+0x4d9c>
    b830:	bl	792c <PyInit__decimal@@Base+0xe18>
    b834:	str	x0, [x29, #24]
    b838:	cbz	x0, b8b0 <PyInit__decimal@@Base+0x4d9c>
    b83c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b840:	ldr	x3, [x29, #24]
    b844:	add	x1, sp, #0x10
    b848:	mov	w0, #0x1                   	// #1
    b84c:	mov	x2, x19
    b850:	bl	858c <PyInit__decimal@@Base+0x1a78>
    b854:	cbz	w0, b8b0 <PyInit__decimal@@Base+0x4d9c>
    b858:	ldur	x2, [x29, #-8]
    b85c:	ldr	x3, [x29, #24]
    b860:	add	x1, sp, #0x8
    b864:	mov	w0, #0x1                   	// #1
    b868:	bl	858c <PyInit__decimal@@Base+0x1a78>
    b86c:	cbz	w0, b8a8 <PyInit__decimal@@Base+0x4d94>
    b870:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    b874:	add	x0, x0, #0x318
    b878:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    b87c:	mov	x19, x0
    b880:	cbz	x0, b8cc <PyInit__decimal@@Base+0x4db8>
    b884:	ldp	x21, x20, [sp, #8]
    b888:	add	x0, x19, #0x18
    b88c:	add	x1, x20, #0x18
    b890:	add	x2, x21, #0x18
    b894:	bl	1a124 <PyInit__decimal@@Base+0x13610>
    b898:	mov	x0, x20
    b89c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b8a0:	mov	x0, x21
    b8a4:	b	b8d8 <PyInit__decimal@@Base+0x4dc4>
    b8a8:	ldr	x0, [sp, #16]
    b8ac:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b8b0:	mov	x19, xzr
    b8b4:	mov	x0, x19
    b8b8:	ldp	x20, x19, [sp, #64]
    b8bc:	ldr	x21, [sp, #48]
    b8c0:	ldp	x29, x30, [sp, #32]
    b8c4:	add	sp, sp, #0x50
    b8c8:	ret
    b8cc:	ldr	x0, [sp, #16]
    b8d0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b8d4:	ldr	x0, [sp, #8]
    b8d8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b8dc:	b	b8b4 <PyInit__decimal@@Base+0x4da0>
    b8e0:	sub	sp, sp, #0x50
    b8e4:	stp	x29, x30, [sp, #32]
    b8e8:	str	x21, [sp, #48]
    b8ec:	stp	x20, x19, [sp, #64]
    b8f0:	add	x29, sp, #0x20
    b8f4:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    b8f8:	ldr	x20, [x20, #4008]
    b8fc:	mov	x8, x2
    b900:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    b904:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    b908:	mov	x19, x0
    b90c:	add	x2, x2, #0x42b
    b910:	add	x3, x3, #0x7b0
    b914:	sub	x4, x29, #0x8
    b918:	add	x5, x29, #0x18
    b91c:	mov	x0, x1
    b920:	mov	x1, x8
    b924:	str	x20, [x29, #24]
    b928:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    b92c:	cbz	w0, b9fc <PyInit__decimal@@Base+0x4ee8>
    b930:	ldr	x8, [x29, #24]
    b934:	cmp	x8, x20
    b938:	b.eq	b97c <PyInit__decimal@@Base+0x4e68>  // b.none
    b93c:	ldr	x0, [x8, #8]
    b940:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    b944:	add	x8, x8, #0x4b8
    b948:	cmp	x0, x8
    b94c:	b.eq	b98c <PyInit__decimal@@Base+0x4e78>  // b.none
    b950:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    b954:	add	x1, x1, #0x4b8
    b958:	bl	6960 <PyType_IsSubtype@plt>
    b95c:	cbnz	w0, b98c <PyInit__decimal@@Base+0x4e78>
    b960:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    b964:	ldr	x8, [x8, #3936]
    b968:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    b96c:	add	x1, x1, #0x2e1
    b970:	ldr	x0, [x8]
    b974:	bl	65f0 <PyErr_SetString@plt>
    b978:	b	b9fc <PyInit__decimal@@Base+0x4ee8>
    b97c:	bl	792c <PyInit__decimal@@Base+0xe18>
    b980:	str	x0, [x29, #24]
    b984:	cbz	x0, b9fc <PyInit__decimal@@Base+0x4ee8>
    b988:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b98c:	ldr	x3, [x29, #24]
    b990:	add	x1, sp, #0x10
    b994:	mov	w0, #0x1                   	// #1
    b998:	mov	x2, x19
    b99c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    b9a0:	cbz	w0, b9fc <PyInit__decimal@@Base+0x4ee8>
    b9a4:	ldur	x2, [x29, #-8]
    b9a8:	ldr	x3, [x29, #24]
    b9ac:	add	x1, sp, #0x8
    b9b0:	mov	w0, #0x1                   	// #1
    b9b4:	bl	858c <PyInit__decimal@@Base+0x1a78>
    b9b8:	cbz	w0, b9f4 <PyInit__decimal@@Base+0x4ee0>
    b9bc:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    b9c0:	add	x0, x0, #0x318
    b9c4:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    b9c8:	mov	x19, x0
    b9cc:	cbz	x0, ba18 <PyInit__decimal@@Base+0x4f04>
    b9d0:	ldp	x21, x20, [sp, #8]
    b9d4:	add	x0, x19, #0x18
    b9d8:	add	x1, x20, #0x18
    b9dc:	add	x2, x21, #0x18
    b9e0:	bl	1a1cc <PyInit__decimal@@Base+0x136b8>
    b9e4:	mov	x0, x20
    b9e8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b9ec:	mov	x0, x21
    b9f0:	b	ba24 <PyInit__decimal@@Base+0x4f10>
    b9f4:	ldr	x0, [sp, #16]
    b9f8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    b9fc:	mov	x19, xzr
    ba00:	mov	x0, x19
    ba04:	ldp	x20, x19, [sp, #64]
    ba08:	ldr	x21, [sp, #48]
    ba0c:	ldp	x29, x30, [sp, #32]
    ba10:	add	sp, sp, #0x50
    ba14:	ret
    ba18:	ldr	x0, [sp, #16]
    ba1c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ba20:	ldr	x0, [sp, #8]
    ba24:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ba28:	b	ba00 <PyInit__decimal@@Base+0x4eec>
    ba2c:	sub	sp, sp, #0x50
    ba30:	stp	x29, x30, [sp, #32]
    ba34:	str	x21, [sp, #48]
    ba38:	stp	x20, x19, [sp, #64]
    ba3c:	add	x29, sp, #0x20
    ba40:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    ba44:	ldr	x20, [x20, #4008]
    ba48:	mov	x8, x2
    ba4c:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    ba50:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    ba54:	mov	x19, x0
    ba58:	add	x2, x2, #0x42b
    ba5c:	add	x3, x3, #0x7c8
    ba60:	add	x4, x29, #0x18
    ba64:	add	x5, sp, #0x8
    ba68:	mov	x0, x1
    ba6c:	mov	x1, x8
    ba70:	str	x20, [sp, #8]
    ba74:	str	wzr, [sp, #4]
    ba78:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    ba7c:	cbz	w0, bb6c <PyInit__decimal@@Base+0x5058>
    ba80:	ldr	x8, [sp, #8]
    ba84:	cmp	x8, x20
    ba88:	b.eq	bacc <PyInit__decimal@@Base+0x4fb8>  // b.none
    ba8c:	ldr	x0, [x8, #8]
    ba90:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    ba94:	add	x8, x8, #0x4b8
    ba98:	cmp	x0, x8
    ba9c:	b.eq	badc <PyInit__decimal@@Base+0x4fc8>  // b.none
    baa0:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    baa4:	add	x1, x1, #0x4b8
    baa8:	bl	6960 <PyType_IsSubtype@plt>
    baac:	cbnz	w0, badc <PyInit__decimal@@Base+0x4fc8>
    bab0:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    bab4:	ldr	x8, [x8, #3936]
    bab8:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    babc:	add	x1, x1, #0x2e1
    bac0:	ldr	x0, [x8]
    bac4:	bl	65f0 <PyErr_SetString@plt>
    bac8:	b	bb6c <PyInit__decimal@@Base+0x5058>
    bacc:	bl	792c <PyInit__decimal@@Base+0xe18>
    bad0:	str	x0, [sp, #8]
    bad4:	cbz	x0, bb6c <PyInit__decimal@@Base+0x5058>
    bad8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    badc:	ldr	x3, [sp, #8]
    bae0:	sub	x1, x29, #0x8
    bae4:	mov	w0, #0x1                   	// #1
    bae8:	mov	x2, x19
    baec:	bl	858c <PyInit__decimal@@Base+0x1a78>
    baf0:	cbz	w0, bb6c <PyInit__decimal@@Base+0x5058>
    baf4:	ldr	x2, [x29, #24]
    baf8:	ldr	x3, [sp, #8]
    bafc:	add	x1, sp, #0x10
    bb00:	mov	w0, #0x1                   	// #1
    bb04:	bl	858c <PyInit__decimal@@Base+0x1a78>
    bb08:	cbz	w0, bb64 <PyInit__decimal@@Base+0x5050>
    bb0c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    bb10:	add	x0, x0, #0x318
    bb14:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    bb18:	mov	x19, x0
    bb1c:	cbz	x0, bb88 <PyInit__decimal@@Base+0x5074>
    bb20:	ldur	x20, [x29, #-8]
    bb24:	ldr	x21, [sp, #16]
    bb28:	add	x0, x19, #0x18
    bb2c:	add	x3, sp, #0x4
    bb30:	add	x1, x20, #0x18
    bb34:	add	x2, x21, #0x18
    bb38:	bl	19c24 <PyInit__decimal@@Base+0x13110>
    bb3c:	mov	x0, x20
    bb40:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bb44:	mov	x0, x21
    bb48:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bb4c:	ldr	x0, [sp, #8]
    bb50:	ldr	w1, [sp, #4]
    bb54:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    bb58:	cbz	w0, bb70 <PyInit__decimal@@Base+0x505c>
    bb5c:	mov	x0, x19
    bb60:	b	bb68 <PyInit__decimal@@Base+0x5054>
    bb64:	ldur	x0, [x29, #-8]
    bb68:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bb6c:	mov	x19, xzr
    bb70:	mov	x0, x19
    bb74:	ldp	x20, x19, [sp, #64]
    bb78:	ldr	x21, [sp, #48]
    bb7c:	ldp	x29, x30, [sp, #32]
    bb80:	add	sp, sp, #0x50
    bb84:	ret
    bb88:	ldur	x0, [x29, #-8]
    bb8c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bb90:	ldr	x0, [sp, #16]
    bb94:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bb98:	b	bb70 <PyInit__decimal@@Base+0x505c>
    bb9c:	sub	sp, sp, #0x40
    bba0:	stp	x29, x30, [sp, #32]
    bba4:	stp	x20, x19, [sp, #48]
    bba8:	add	x29, sp, #0x20
    bbac:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    bbb0:	ldr	x20, [x20, #4008]
    bbb4:	mov	x8, x2
    bbb8:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    bbbc:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    bbc0:	mov	x19, x0
    bbc4:	add	x2, x2, #0x42b
    bbc8:	add	x3, x3, #0x7e0
    bbcc:	sub	x4, x29, #0x8
    bbd0:	mov	x5, sp
    bbd4:	mov	x0, x1
    bbd8:	mov	x1, x8
    bbdc:	str	x20, [sp]
    bbe0:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    bbe4:	cbz	w0, bca4 <PyInit__decimal@@Base+0x5190>
    bbe8:	ldr	x8, [sp]
    bbec:	cmp	x8, x20
    bbf0:	b.eq	bc34 <PyInit__decimal@@Base+0x5120>  // b.none
    bbf4:	ldr	x0, [x8, #8]
    bbf8:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    bbfc:	add	x8, x8, #0x4b8
    bc00:	cmp	x0, x8
    bc04:	b.eq	bc44 <PyInit__decimal@@Base+0x5130>  // b.none
    bc08:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    bc0c:	add	x1, x1, #0x4b8
    bc10:	bl	6960 <PyType_IsSubtype@plt>
    bc14:	cbnz	w0, bc44 <PyInit__decimal@@Base+0x5130>
    bc18:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    bc1c:	ldr	x8, [x8, #3936]
    bc20:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    bc24:	add	x1, x1, #0x2e1
    bc28:	ldr	x0, [x8]
    bc2c:	bl	65f0 <PyErr_SetString@plt>
    bc30:	b	bca4 <PyInit__decimal@@Base+0x5190>
    bc34:	bl	792c <PyInit__decimal@@Base+0xe18>
    bc38:	str	x0, [sp]
    bc3c:	cbz	x0, bca4 <PyInit__decimal@@Base+0x5190>
    bc40:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bc44:	ldr	x3, [sp]
    bc48:	add	x1, sp, #0x10
    bc4c:	mov	w0, #0x1                   	// #1
    bc50:	mov	x2, x19
    bc54:	bl	858c <PyInit__decimal@@Base+0x1a78>
    bc58:	cbz	w0, bca4 <PyInit__decimal@@Base+0x5190>
    bc5c:	ldur	x2, [x29, #-8]
    bc60:	ldr	x3, [sp]
    bc64:	add	x1, sp, #0x8
    bc68:	mov	w0, #0x1                   	// #1
    bc6c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    bc70:	ldr	x19, [sp, #16]
    bc74:	cbz	w0, bc9c <PyInit__decimal@@Base+0x5188>
    bc78:	ldr	x8, [sp, #8]
    bc7c:	add	x0, x19, #0x18
    bc80:	add	x1, x8, #0x18
    bc84:	bl	21dc0 <PyInit__decimal@@Base+0x1b2ac>
    bc88:	cbz	w0, bcbc <PyInit__decimal@@Base+0x51a8>
    bc8c:	bl	9140 <PyInit__decimal@@Base+0x262c>
    bc90:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    bc94:	ldr	x20, [x20, #4024]
    bc98:	b	bcc8 <PyInit__decimal@@Base+0x51b4>
    bc9c:	mov	x0, x19
    bca0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bca4:	mov	x20, xzr
    bca8:	mov	x0, x20
    bcac:	ldp	x20, x19, [sp, #48]
    bcb0:	ldp	x29, x30, [sp, #32]
    bcb4:	add	sp, sp, #0x40
    bcb8:	ret
    bcbc:	bl	915c <PyInit__decimal@@Base+0x2648>
    bcc0:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    bcc4:	ldr	x20, [x20, #3976]
    bcc8:	mov	x0, x19
    bccc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bcd0:	ldr	x0, [sp, #8]
    bcd4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bcd8:	b	bca8 <PyInit__decimal@@Base+0x5194>
    bcdc:	sub	sp, sp, #0x50
    bce0:	stp	x29, x30, [sp, #48]
    bce4:	stp	x20, x19, [sp, #64]
    bce8:	add	x29, sp, #0x30
    bcec:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    bcf0:	ldr	x20, [x20, #4008]
    bcf4:	mov	x8, x2
    bcf8:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    bcfc:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    bd00:	mov	x19, x0
    bd04:	add	x2, x2, #0x42b
    bd08:	add	x3, x3, #0x7f8
    bd0c:	sub	x4, x29, #0x8
    bd10:	add	x5, sp, #0x10
    bd14:	mov	x0, x1
    bd18:	mov	x1, x8
    bd1c:	str	x20, [sp, #16]
    bd20:	str	wzr, [sp, #12]
    bd24:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    bd28:	cbz	w0, be1c <PyInit__decimal@@Base+0x5308>
    bd2c:	ldr	x8, [sp, #16]
    bd30:	cmp	x8, x20
    bd34:	b.eq	bd78 <PyInit__decimal@@Base+0x5264>  // b.none
    bd38:	ldr	x0, [x8, #8]
    bd3c:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    bd40:	add	x8, x8, #0x4b8
    bd44:	cmp	x0, x8
    bd48:	b.eq	bd88 <PyInit__decimal@@Base+0x5274>  // b.none
    bd4c:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    bd50:	add	x1, x1, #0x4b8
    bd54:	bl	6960 <PyType_IsSubtype@plt>
    bd58:	cbnz	w0, bd88 <PyInit__decimal@@Base+0x5274>
    bd5c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    bd60:	ldr	x8, [x8, #3936]
    bd64:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    bd68:	add	x1, x1, #0x2e1
    bd6c:	ldr	x0, [x8]
    bd70:	bl	65f0 <PyErr_SetString@plt>
    bd74:	b	be1c <PyInit__decimal@@Base+0x5308>
    bd78:	bl	792c <PyInit__decimal@@Base+0xe18>
    bd7c:	str	x0, [sp, #16]
    bd80:	cbz	x0, be1c <PyInit__decimal@@Base+0x5308>
    bd84:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bd88:	ldr	x3, [sp, #16]
    bd8c:	sub	x1, x29, #0x10
    bd90:	mov	w0, #0x1                   	// #1
    bd94:	mov	x2, x19
    bd98:	bl	858c <PyInit__decimal@@Base+0x1a78>
    bd9c:	cbz	w0, be1c <PyInit__decimal@@Base+0x5308>
    bda0:	ldur	x2, [x29, #-8]
    bda4:	ldr	x3, [sp, #16]
    bda8:	add	x1, sp, #0x18
    bdac:	mov	w0, #0x1                   	// #1
    bdb0:	bl	858c <PyInit__decimal@@Base+0x1a78>
    bdb4:	cbz	w0, be14 <PyInit__decimal@@Base+0x5300>
    bdb8:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    bdbc:	add	x0, x0, #0x318
    bdc0:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    bdc4:	mov	x19, x0
    bdc8:	cbz	x0, be34 <PyInit__decimal@@Base+0x5320>
    bdcc:	ldur	x8, [x29, #-16]
    bdd0:	ldp	x10, x9, [sp, #16]
    bdd4:	add	x0, x19, #0x18
    bdd8:	add	x4, sp, #0xc
    bddc:	add	x1, x8, #0x18
    bde0:	add	x2, x9, #0x18
    bde4:	add	x3, x10, #0x10
    bde8:	bl	1a7bc <PyInit__decimal@@Base+0x13ca8>
    bdec:	ldur	x0, [x29, #-16]
    bdf0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bdf4:	ldr	x0, [sp, #24]
    bdf8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bdfc:	ldr	x0, [sp, #16]
    be00:	ldr	w1, [sp, #12]
    be04:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    be08:	cbz	w0, be20 <PyInit__decimal@@Base+0x530c>
    be0c:	mov	x0, x19
    be10:	b	be18 <PyInit__decimal@@Base+0x5304>
    be14:	ldur	x0, [x29, #-16]
    be18:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    be1c:	mov	x19, xzr
    be20:	mov	x0, x19
    be24:	ldp	x20, x19, [sp, #64]
    be28:	ldp	x29, x30, [sp, #48]
    be2c:	add	sp, sp, #0x50
    be30:	ret
    be34:	ldur	x0, [x29, #-16]
    be38:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    be3c:	ldr	x0, [sp, #24]
    be40:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    be44:	b	be20 <PyInit__decimal@@Base+0x530c>
    be48:	sub	sp, sp, #0x50
    be4c:	stp	x29, x30, [sp, #48]
    be50:	stp	x20, x19, [sp, #64]
    be54:	add	x29, sp, #0x30
    be58:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    be5c:	ldr	x20, [x20, #4008]
    be60:	mov	x8, x2
    be64:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    be68:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    be6c:	mov	x19, x0
    be70:	add	x2, x2, #0x42b
    be74:	add	x3, x3, #0x810
    be78:	sub	x4, x29, #0x8
    be7c:	add	x5, sp, #0x10
    be80:	mov	x0, x1
    be84:	mov	x1, x8
    be88:	str	x20, [sp, #16]
    be8c:	str	wzr, [sp, #12]
    be90:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    be94:	cbz	w0, bf88 <PyInit__decimal@@Base+0x5474>
    be98:	ldr	x8, [sp, #16]
    be9c:	cmp	x8, x20
    bea0:	b.eq	bee4 <PyInit__decimal@@Base+0x53d0>  // b.none
    bea4:	ldr	x0, [x8, #8]
    bea8:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    beac:	add	x8, x8, #0x4b8
    beb0:	cmp	x0, x8
    beb4:	b.eq	bef4 <PyInit__decimal@@Base+0x53e0>  // b.none
    beb8:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    bebc:	add	x1, x1, #0x4b8
    bec0:	bl	6960 <PyType_IsSubtype@plt>
    bec4:	cbnz	w0, bef4 <PyInit__decimal@@Base+0x53e0>
    bec8:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    becc:	ldr	x8, [x8, #3936]
    bed0:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    bed4:	add	x1, x1, #0x2e1
    bed8:	ldr	x0, [x8]
    bedc:	bl	65f0 <PyErr_SetString@plt>
    bee0:	b	bf88 <PyInit__decimal@@Base+0x5474>
    bee4:	bl	792c <PyInit__decimal@@Base+0xe18>
    bee8:	str	x0, [sp, #16]
    beec:	cbz	x0, bf88 <PyInit__decimal@@Base+0x5474>
    bef0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bef4:	ldr	x3, [sp, #16]
    bef8:	sub	x1, x29, #0x10
    befc:	mov	w0, #0x1                   	// #1
    bf00:	mov	x2, x19
    bf04:	bl	858c <PyInit__decimal@@Base+0x1a78>
    bf08:	cbz	w0, bf88 <PyInit__decimal@@Base+0x5474>
    bf0c:	ldur	x2, [x29, #-8]
    bf10:	ldr	x3, [sp, #16]
    bf14:	add	x1, sp, #0x18
    bf18:	mov	w0, #0x1                   	// #1
    bf1c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    bf20:	cbz	w0, bf80 <PyInit__decimal@@Base+0x546c>
    bf24:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    bf28:	add	x0, x0, #0x318
    bf2c:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    bf30:	mov	x19, x0
    bf34:	cbz	x0, bfa0 <PyInit__decimal@@Base+0x548c>
    bf38:	ldur	x8, [x29, #-16]
    bf3c:	ldp	x10, x9, [sp, #16]
    bf40:	add	x0, x19, #0x18
    bf44:	add	x4, sp, #0xc
    bf48:	add	x1, x8, #0x18
    bf4c:	add	x2, x9, #0x18
    bf50:	add	x3, x10, #0x10
    bf54:	bl	1b0b0 <PyInit__decimal@@Base+0x1459c>
    bf58:	ldur	x0, [x29, #-16]
    bf5c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bf60:	ldr	x0, [sp, #24]
    bf64:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bf68:	ldr	x0, [sp, #16]
    bf6c:	ldr	w1, [sp, #12]
    bf70:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    bf74:	cbz	w0, bf8c <PyInit__decimal@@Base+0x5478>
    bf78:	mov	x0, x19
    bf7c:	b	bf84 <PyInit__decimal@@Base+0x5470>
    bf80:	ldur	x0, [x29, #-16]
    bf84:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bf88:	mov	x19, xzr
    bf8c:	mov	x0, x19
    bf90:	ldp	x20, x19, [sp, #64]
    bf94:	ldp	x29, x30, [sp, #48]
    bf98:	add	sp, sp, #0x50
    bf9c:	ret
    bfa0:	ldur	x0, [x29, #-16]
    bfa4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bfa8:	ldr	x0, [sp, #24]
    bfac:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    bfb0:	b	bf8c <PyInit__decimal@@Base+0x5478>
    bfb4:	sub	sp, sp, #0x50
    bfb8:	stp	x29, x30, [sp, #48]
    bfbc:	stp	x20, x19, [sp, #64]
    bfc0:	add	x29, sp, #0x30
    bfc4:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    bfc8:	ldr	x20, [x20, #4008]
    bfcc:	mov	x8, x2
    bfd0:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    bfd4:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    bfd8:	mov	x19, x0
    bfdc:	add	x2, x2, #0x42b
    bfe0:	add	x3, x3, #0x828
    bfe4:	sub	x4, x29, #0x8
    bfe8:	add	x5, sp, #0x10
    bfec:	mov	x0, x1
    bff0:	mov	x1, x8
    bff4:	str	x20, [sp, #16]
    bff8:	str	wzr, [sp, #12]
    bffc:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    c000:	cbz	w0, c0f4 <PyInit__decimal@@Base+0x55e0>
    c004:	ldr	x8, [sp, #16]
    c008:	cmp	x8, x20
    c00c:	b.eq	c050 <PyInit__decimal@@Base+0x553c>  // b.none
    c010:	ldr	x0, [x8, #8]
    c014:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    c018:	add	x8, x8, #0x4b8
    c01c:	cmp	x0, x8
    c020:	b.eq	c060 <PyInit__decimal@@Base+0x554c>  // b.none
    c024:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    c028:	add	x1, x1, #0x4b8
    c02c:	bl	6960 <PyType_IsSubtype@plt>
    c030:	cbnz	w0, c060 <PyInit__decimal@@Base+0x554c>
    c034:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    c038:	ldr	x8, [x8, #3936]
    c03c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    c040:	add	x1, x1, #0x2e1
    c044:	ldr	x0, [x8]
    c048:	bl	65f0 <PyErr_SetString@plt>
    c04c:	b	c0f4 <PyInit__decimal@@Base+0x55e0>
    c050:	bl	792c <PyInit__decimal@@Base+0xe18>
    c054:	str	x0, [sp, #16]
    c058:	cbz	x0, c0f4 <PyInit__decimal@@Base+0x55e0>
    c05c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c060:	ldr	x3, [sp, #16]
    c064:	sub	x1, x29, #0x10
    c068:	mov	w0, #0x1                   	// #1
    c06c:	mov	x2, x19
    c070:	bl	858c <PyInit__decimal@@Base+0x1a78>
    c074:	cbz	w0, c0f4 <PyInit__decimal@@Base+0x55e0>
    c078:	ldur	x2, [x29, #-8]
    c07c:	ldr	x3, [sp, #16]
    c080:	add	x1, sp, #0x18
    c084:	mov	w0, #0x1                   	// #1
    c088:	bl	858c <PyInit__decimal@@Base+0x1a78>
    c08c:	cbz	w0, c0ec <PyInit__decimal@@Base+0x55d8>
    c090:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    c094:	add	x0, x0, #0x318
    c098:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    c09c:	mov	x19, x0
    c0a0:	cbz	x0, c10c <PyInit__decimal@@Base+0x55f8>
    c0a4:	ldur	x8, [x29, #-16]
    c0a8:	ldp	x10, x9, [sp, #16]
    c0ac:	add	x0, x19, #0x18
    c0b0:	add	x4, sp, #0xc
    c0b4:	add	x1, x8, #0x18
    c0b8:	add	x2, x9, #0x18
    c0bc:	add	x3, x10, #0x10
    c0c0:	bl	1baec <PyInit__decimal@@Base+0x14fd8>
    c0c4:	ldur	x0, [x29, #-16]
    c0c8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c0cc:	ldr	x0, [sp, #24]
    c0d0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c0d4:	ldr	x0, [sp, #16]
    c0d8:	ldr	w1, [sp, #12]
    c0dc:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    c0e0:	cbz	w0, c0f8 <PyInit__decimal@@Base+0x55e4>
    c0e4:	mov	x0, x19
    c0e8:	b	c0f0 <PyInit__decimal@@Base+0x55dc>
    c0ec:	ldur	x0, [x29, #-16]
    c0f0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c0f4:	mov	x19, xzr
    c0f8:	mov	x0, x19
    c0fc:	ldp	x20, x19, [sp, #64]
    c100:	ldp	x29, x30, [sp, #48]
    c104:	add	sp, sp, #0x50
    c108:	ret
    c10c:	ldur	x0, [x29, #-16]
    c110:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c114:	ldr	x0, [sp, #24]
    c118:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c11c:	b	c0f8 <PyInit__decimal@@Base+0x55e4>
    c120:	sub	sp, sp, #0x50
    c124:	stp	x29, x30, [sp, #48]
    c128:	stp	x20, x19, [sp, #64]
    c12c:	add	x29, sp, #0x30
    c130:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    c134:	ldr	x20, [x20, #4008]
    c138:	mov	x8, x2
    c13c:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    c140:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    c144:	mov	x19, x0
    c148:	add	x2, x2, #0x42b
    c14c:	add	x3, x3, #0x840
    c150:	sub	x4, x29, #0x8
    c154:	add	x5, sp, #0x10
    c158:	mov	x0, x1
    c15c:	mov	x1, x8
    c160:	str	x20, [sp, #16]
    c164:	str	wzr, [sp, #12]
    c168:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    c16c:	cbz	w0, c260 <PyInit__decimal@@Base+0x574c>
    c170:	ldr	x8, [sp, #16]
    c174:	cmp	x8, x20
    c178:	b.eq	c1bc <PyInit__decimal@@Base+0x56a8>  // b.none
    c17c:	ldr	x0, [x8, #8]
    c180:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    c184:	add	x8, x8, #0x4b8
    c188:	cmp	x0, x8
    c18c:	b.eq	c1cc <PyInit__decimal@@Base+0x56b8>  // b.none
    c190:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    c194:	add	x1, x1, #0x4b8
    c198:	bl	6960 <PyType_IsSubtype@plt>
    c19c:	cbnz	w0, c1cc <PyInit__decimal@@Base+0x56b8>
    c1a0:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    c1a4:	ldr	x8, [x8, #3936]
    c1a8:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    c1ac:	add	x1, x1, #0x2e1
    c1b0:	ldr	x0, [x8]
    c1b4:	bl	65f0 <PyErr_SetString@plt>
    c1b8:	b	c260 <PyInit__decimal@@Base+0x574c>
    c1bc:	bl	792c <PyInit__decimal@@Base+0xe18>
    c1c0:	str	x0, [sp, #16]
    c1c4:	cbz	x0, c260 <PyInit__decimal@@Base+0x574c>
    c1c8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c1cc:	ldr	x3, [sp, #16]
    c1d0:	sub	x1, x29, #0x10
    c1d4:	mov	w0, #0x1                   	// #1
    c1d8:	mov	x2, x19
    c1dc:	bl	858c <PyInit__decimal@@Base+0x1a78>
    c1e0:	cbz	w0, c260 <PyInit__decimal@@Base+0x574c>
    c1e4:	ldur	x2, [x29, #-8]
    c1e8:	ldr	x3, [sp, #16]
    c1ec:	add	x1, sp, #0x18
    c1f0:	mov	w0, #0x1                   	// #1
    c1f4:	bl	858c <PyInit__decimal@@Base+0x1a78>
    c1f8:	cbz	w0, c258 <PyInit__decimal@@Base+0x5744>
    c1fc:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    c200:	add	x0, x0, #0x318
    c204:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    c208:	mov	x19, x0
    c20c:	cbz	x0, c278 <PyInit__decimal@@Base+0x5764>
    c210:	ldur	x8, [x29, #-16]
    c214:	ldp	x10, x9, [sp, #16]
    c218:	add	x0, x19, #0x18
    c21c:	add	x4, sp, #0xc
    c220:	add	x1, x8, #0x18
    c224:	add	x2, x9, #0x18
    c228:	add	x3, x10, #0x10
    c22c:	bl	1b4dc <PyInit__decimal@@Base+0x149c8>
    c230:	ldur	x0, [x29, #-16]
    c234:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c238:	ldr	x0, [sp, #24]
    c23c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c240:	ldr	x0, [sp, #16]
    c244:	ldr	w1, [sp, #12]
    c248:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    c24c:	cbz	w0, c264 <PyInit__decimal@@Base+0x5750>
    c250:	mov	x0, x19
    c254:	b	c25c <PyInit__decimal@@Base+0x5748>
    c258:	ldur	x0, [x29, #-16]
    c25c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c260:	mov	x19, xzr
    c264:	mov	x0, x19
    c268:	ldp	x20, x19, [sp, #64]
    c26c:	ldp	x29, x30, [sp, #48]
    c270:	add	sp, sp, #0x50
    c274:	ret
    c278:	ldur	x0, [x29, #-16]
    c27c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c280:	ldr	x0, [sp, #24]
    c284:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c288:	b	c264 <PyInit__decimal@@Base+0x5750>
    c28c:	sub	sp, sp, #0x50
    c290:	stp	x29, x30, [sp, #48]
    c294:	stp	x20, x19, [sp, #64]
    c298:	add	x29, sp, #0x30
    c29c:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    c2a0:	ldr	x20, [x20, #4008]
    c2a4:	mov	x8, x2
    c2a8:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    c2ac:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    c2b0:	mov	x19, x0
    c2b4:	add	x2, x2, #0x42b
    c2b8:	add	x3, x3, #0x858
    c2bc:	sub	x4, x29, #0x8
    c2c0:	add	x5, sp, #0x10
    c2c4:	mov	x0, x1
    c2c8:	mov	x1, x8
    c2cc:	str	x20, [sp, #16]
    c2d0:	str	wzr, [sp, #12]
    c2d4:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    c2d8:	cbz	w0, c3cc <PyInit__decimal@@Base+0x58b8>
    c2dc:	ldr	x8, [sp, #16]
    c2e0:	cmp	x8, x20
    c2e4:	b.eq	c328 <PyInit__decimal@@Base+0x5814>  // b.none
    c2e8:	ldr	x0, [x8, #8]
    c2ec:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    c2f0:	add	x8, x8, #0x4b8
    c2f4:	cmp	x0, x8
    c2f8:	b.eq	c338 <PyInit__decimal@@Base+0x5824>  // b.none
    c2fc:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    c300:	add	x1, x1, #0x4b8
    c304:	bl	6960 <PyType_IsSubtype@plt>
    c308:	cbnz	w0, c338 <PyInit__decimal@@Base+0x5824>
    c30c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    c310:	ldr	x8, [x8, #3936]
    c314:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    c318:	add	x1, x1, #0x2e1
    c31c:	ldr	x0, [x8]
    c320:	bl	65f0 <PyErr_SetString@plt>
    c324:	b	c3cc <PyInit__decimal@@Base+0x58b8>
    c328:	bl	792c <PyInit__decimal@@Base+0xe18>
    c32c:	str	x0, [sp, #16]
    c330:	cbz	x0, c3cc <PyInit__decimal@@Base+0x58b8>
    c334:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c338:	ldr	x3, [sp, #16]
    c33c:	sub	x1, x29, #0x10
    c340:	mov	w0, #0x1                   	// #1
    c344:	mov	x2, x19
    c348:	bl	858c <PyInit__decimal@@Base+0x1a78>
    c34c:	cbz	w0, c3cc <PyInit__decimal@@Base+0x58b8>
    c350:	ldur	x2, [x29, #-8]
    c354:	ldr	x3, [sp, #16]
    c358:	add	x1, sp, #0x18
    c35c:	mov	w0, #0x1                   	// #1
    c360:	bl	858c <PyInit__decimal@@Base+0x1a78>
    c364:	cbz	w0, c3c4 <PyInit__decimal@@Base+0x58b0>
    c368:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    c36c:	add	x0, x0, #0x318
    c370:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    c374:	mov	x19, x0
    c378:	cbz	x0, c3e4 <PyInit__decimal@@Base+0x58d0>
    c37c:	ldur	x8, [x29, #-16]
    c380:	ldp	x10, x9, [sp, #16]
    c384:	add	x0, x19, #0x18
    c388:	add	x4, sp, #0xc
    c38c:	add	x1, x8, #0x18
    c390:	add	x2, x9, #0x18
    c394:	add	x3, x10, #0x10
    c398:	bl	1b77c <PyInit__decimal@@Base+0x14c68>
    c39c:	ldur	x0, [x29, #-16]
    c3a0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c3a4:	ldr	x0, [sp, #24]
    c3a8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c3ac:	ldr	x0, [sp, #16]
    c3b0:	ldr	w1, [sp, #12]
    c3b4:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    c3b8:	cbz	w0, c3d0 <PyInit__decimal@@Base+0x58bc>
    c3bc:	mov	x0, x19
    c3c0:	b	c3c8 <PyInit__decimal@@Base+0x58b4>
    c3c4:	ldur	x0, [x29, #-16]
    c3c8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c3cc:	mov	x19, xzr
    c3d0:	mov	x0, x19
    c3d4:	ldp	x20, x19, [sp, #64]
    c3d8:	ldp	x29, x30, [sp, #48]
    c3dc:	add	sp, sp, #0x50
    c3e0:	ret
    c3e4:	ldur	x0, [x29, #-16]
    c3e8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c3ec:	ldr	x0, [sp, #24]
    c3f0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c3f4:	b	c3d0 <PyInit__decimal@@Base+0x58bc>
    c3f8:	sub	sp, sp, #0x50
    c3fc:	stp	x29, x30, [sp, #48]
    c400:	stp	x20, x19, [sp, #64]
    c404:	add	x29, sp, #0x30
    c408:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    c40c:	ldr	x20, [x20, #4008]
    c410:	mov	x8, x2
    c414:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    c418:	adrp	x3, 41000 <PyInit__decimal@@Base+0x3a4ec>
    c41c:	mov	x19, x0
    c420:	add	x2, x2, #0x42b
    c424:	add	x3, x3, #0x870
    c428:	sub	x4, x29, #0x8
    c42c:	add	x5, sp, #0x10
    c430:	mov	x0, x1
    c434:	mov	x1, x8
    c438:	str	x20, [sp, #16]
    c43c:	str	wzr, [sp, #12]
    c440:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    c444:	cbz	w0, c538 <PyInit__decimal@@Base+0x5a24>
    c448:	ldr	x8, [sp, #16]
    c44c:	cmp	x8, x20
    c450:	b.eq	c494 <PyInit__decimal@@Base+0x5980>  // b.none
    c454:	ldr	x0, [x8, #8]
    c458:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    c45c:	add	x8, x8, #0x4b8
    c460:	cmp	x0, x8
    c464:	b.eq	c4a4 <PyInit__decimal@@Base+0x5990>  // b.none
    c468:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    c46c:	add	x1, x1, #0x4b8
    c470:	bl	6960 <PyType_IsSubtype@plt>
    c474:	cbnz	w0, c4a4 <PyInit__decimal@@Base+0x5990>
    c478:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    c47c:	ldr	x8, [x8, #3936]
    c480:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    c484:	add	x1, x1, #0x2e1
    c488:	ldr	x0, [x8]
    c48c:	bl	65f0 <PyErr_SetString@plt>
    c490:	b	c538 <PyInit__decimal@@Base+0x5a24>
    c494:	bl	792c <PyInit__decimal@@Base+0xe18>
    c498:	str	x0, [sp, #16]
    c49c:	cbz	x0, c538 <PyInit__decimal@@Base+0x5a24>
    c4a0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c4a4:	ldr	x3, [sp, #16]
    c4a8:	sub	x1, x29, #0x10
    c4ac:	mov	w0, #0x1                   	// #1
    c4b0:	mov	x2, x19
    c4b4:	bl	858c <PyInit__decimal@@Base+0x1a78>
    c4b8:	cbz	w0, c538 <PyInit__decimal@@Base+0x5a24>
    c4bc:	ldur	x2, [x29, #-8]
    c4c0:	ldr	x3, [sp, #16]
    c4c4:	add	x1, sp, #0x18
    c4c8:	mov	w0, #0x1                   	// #1
    c4cc:	bl	858c <PyInit__decimal@@Base+0x1a78>
    c4d0:	cbz	w0, c530 <PyInit__decimal@@Base+0x5a1c>
    c4d4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    c4d8:	add	x0, x0, #0x318
    c4dc:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    c4e0:	mov	x19, x0
    c4e4:	cbz	x0, c550 <PyInit__decimal@@Base+0x5a3c>
    c4e8:	ldur	x8, [x29, #-16]
    c4ec:	ldp	x10, x9, [sp, #16]
    c4f0:	add	x0, x19, #0x18
    c4f4:	add	x4, sp, #0xc
    c4f8:	add	x1, x8, #0x18
    c4fc:	add	x2, x9, #0x18
    c500:	add	x3, x10, #0x10
    c504:	bl	1b9bc <PyInit__decimal@@Base+0x14ea8>
    c508:	ldur	x0, [x29, #-16]
    c50c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c510:	ldr	x0, [sp, #24]
    c514:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c518:	ldr	x0, [sp, #16]
    c51c:	ldr	w1, [sp, #12]
    c520:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    c524:	cbz	w0, c53c <PyInit__decimal@@Base+0x5a28>
    c528:	mov	x0, x19
    c52c:	b	c534 <PyInit__decimal@@Base+0x5a20>
    c530:	ldur	x0, [x29, #-16]
    c534:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c538:	mov	x19, xzr
    c53c:	mov	x0, x19
    c540:	ldp	x20, x19, [sp, #64]
    c544:	ldp	x29, x30, [sp, #48]
    c548:	add	sp, sp, #0x50
    c54c:	ret
    c550:	ldur	x0, [x29, #-16]
    c554:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c558:	ldr	x0, [sp, #24]
    c55c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c560:	b	c53c <PyInit__decimal@@Base+0x5a28>
    c564:	stp	x29, x30, [sp, #-48]!
    c568:	stp	x22, x21, [sp, #16]
    c56c:	stp	x20, x19, [sp, #32]
    c570:	mov	x29, sp
    c574:	mov	x20, x1
    c578:	mov	x19, x0
    c57c:	bl	792c <PyInit__decimal@@Base+0xe18>
    c580:	cbz	x0, c5d8 <PyInit__decimal@@Base+0x5ac4>
    c584:	mov	x21, x0
    c588:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c58c:	adrp	x22, 40000 <PyInit__decimal@@Base+0x394ec>
    c590:	add	x22, x22, #0x318
    c594:	mov	x0, x22
    c598:	mov	x1, x20
    c59c:	mov	x2, x21
    c5a0:	bl	9178 <PyInit__decimal@@Base+0x2664>
    c5a4:	cmp	x19, x22
    c5a8:	mov	x20, x0
    c5ac:	b.eq	c5dc <PyInit__decimal@@Base+0x5ac8>  // b.none
    c5b0:	cbz	x20, c5dc <PyInit__decimal@@Base+0x5ac8>
    c5b4:	mov	x0, x19
    c5b8:	mov	x1, x20
    c5bc:	mov	x2, xzr
    c5c0:	bl	67f0 <PyObject_CallFunctionObjArgs@plt>
    c5c4:	mov	x19, x0
    c5c8:	mov	x0, x20
    c5cc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c5d0:	mov	x20, x19
    c5d4:	b	c5dc <PyInit__decimal@@Base+0x5ac8>
    c5d8:	mov	x20, xzr
    c5dc:	mov	x0, x20
    c5e0:	ldp	x20, x19, [sp, #32]
    c5e4:	ldp	x22, x21, [sp, #16]
    c5e8:	ldp	x29, x30, [sp], #48
    c5ec:	ret
    c5f0:	stp	x29, x30, [sp, #-80]!
    c5f4:	str	x25, [sp, #16]
    c5f8:	stp	x24, x23, [sp, #32]
    c5fc:	stp	x22, x21, [sp, #48]
    c600:	stp	x20, x19, [sp, #64]
    c604:	mov	x29, sp
    c608:	add	x21, x0, #0x18
    c60c:	mov	x0, x21
    c610:	bl	19b44 <PyInit__decimal@@Base+0x13030>
    c614:	mov	x19, x0
    c618:	cbz	x0, c698 <PyInit__decimal@@Base+0x5b84>
    c61c:	mov	x0, x21
    c620:	bl	184c0 <PyInit__decimal@@Base+0x119ac>
    c624:	and	x0, x0, #0xff
    c628:	bl	68e0 <PyLong_FromUnsignedLong@plt>
    c62c:	mov	x20, x0
    c630:	cbz	x0, c6a0 <PyInit__decimal@@Base+0x5b8c>
    c634:	mov	x0, x19
    c638:	bl	18370 <PyInit__decimal@@Base+0x1185c>
    c63c:	cbz	w0, c704 <PyInit__decimal@@Base+0x5bf0>
    c640:	adrp	x0, 2e000 <PyInit__decimal@@Base+0x274ec>
    c644:	add	x0, x0, #0x283
    c648:	bl	6900 <PyUnicode_FromString@plt>
    c64c:	mov	x21, x0
    c650:	cbz	x0, c7c4 <PyInit__decimal@@Base+0x5cb0>
    c654:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
    c658:	add	x0, x0, #0x42f
    c65c:	mov	w1, wzr
    c660:	bl	6770 <Py_BuildValue@plt>
    c664:	mov	x22, x0
    c668:	cbz	x0, c6a8 <PyInit__decimal@@Base+0x5b94>
    c66c:	mov	x23, xzr
    c670:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    c674:	ldr	x0, [x8, #1464]
    c678:	mov	x1, x20
    c67c:	mov	x2, x22
    c680:	mov	x3, x21
    c684:	mov	x4, xzr
    c688:	bl	67f0 <PyObject_CallFunctionObjArgs@plt>
    c68c:	mov	x24, x0
    c690:	cbnz	x19, c6b4 <PyInit__decimal@@Base+0x5ba0>
    c694:	b	c6bc <PyInit__decimal@@Base+0x5ba8>
    c698:	bl	6580 <PyErr_NoMemory@plt>
    c69c:	mov	x20, xzr
    c6a0:	mov	x22, xzr
    c6a4:	mov	x21, xzr
    c6a8:	mov	x23, xzr
    c6ac:	mov	x24, xzr
    c6b0:	cbz	x19, c6bc <PyInit__decimal@@Base+0x5ba8>
    c6b4:	mov	x0, x19
    c6b8:	bl	18558 <PyInit__decimal@@Base+0x11a44>
    c6bc:	cbz	x23, c6d0 <PyInit__decimal@@Base+0x5bbc>
    c6c0:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    c6c4:	ldr	x8, [x8, #1376]
    c6c8:	mov	x0, x23
    c6cc:	blr	x8
    c6d0:	mov	x0, x20
    c6d4:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
    c6d8:	mov	x0, x22
    c6dc:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
    c6e0:	mov	x0, x21
    c6e4:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
    c6e8:	mov	x0, x24
    c6ec:	ldp	x20, x19, [sp, #64]
    c6f0:	ldp	x22, x21, [sp, #48]
    c6f4:	ldp	x24, x23, [sp, #32]
    c6f8:	ldr	x25, [sp, #16]
    c6fc:	ldp	x29, x30, [sp], #80
    c700:	ret
    c704:	mov	x0, x19
    c708:	bl	1837c <PyInit__decimal@@Base+0x11868>
    c70c:	cbz	w0, c7b4 <PyInit__decimal@@Base+0x5ca0>
    c710:	mov	x0, x19
    c714:	bl	183a4 <PyInit__decimal@@Base+0x11890>
    c718:	adrp	x8, 2c000 <PyInit__decimal@@Base+0x254ec>
    c71c:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
    c720:	add	x8, x8, #0xff2
    c724:	add	x9, x9, #0x27b
    c728:	cmp	w0, #0x0
    c72c:	csel	x0, x9, x8, eq  // eq = none
    c730:	bl	6900 <PyUnicode_FromString@plt>
    c734:	mov	x21, x0
    c738:	cbz	x0, c7c4 <PyInit__decimal@@Base+0x5cb0>
    c73c:	ldr	x8, [x19, #24]
    c740:	cmp	x8, #0x1
    c744:	b.lt	c7cc <PyInit__decimal@@Base+0x5cb8>  // b.tstop
    c748:	mov	x0, x19
    c74c:	str	xzr, [x19, #8]
    c750:	bl	18a54 <PyInit__decimal@@Base+0x11f40>
    c754:	mov	w1, #0x1                   	// #1
    c758:	mov	x0, x19
    c75c:	bl	15d64 <PyInit__decimal@@Base+0xf250>
    c760:	mov	x23, x0
    c764:	cbz	x0, c7e0 <PyInit__decimal@@Base+0x5ccc>
    c768:	mov	x0, x23
    c76c:	bl	6480 <strlen@plt>
    c770:	mov	x24, x0
    c774:	bl	6740 <PyTuple_New@plt>
    c778:	mov	x22, x0
    c77c:	cbz	x0, c6ac <PyInit__decimal@@Base+0x5b98>
    c780:	cmp	x24, #0x1
    c784:	b.lt	c670 <PyInit__decimal@@Base+0x5b5c>  // b.tstop
    c788:	mov	x25, xzr
    c78c:	ldrb	w8, [x23, x25]
    c790:	sub	x0, x8, #0x30
    c794:	bl	6680 <PyLong_FromLong@plt>
    c798:	cbz	x0, c6ac <PyInit__decimal@@Base+0x5b98>
    c79c:	add	x8, x22, x25, lsl #3
    c7a0:	add	x25, x25, #0x1
    c7a4:	cmp	x24, x25
    c7a8:	str	x0, [x8, #24]
    c7ac:	b.ne	c78c <PyInit__decimal@@Base+0x5c78>  // b.any
    c7b0:	b	c670 <PyInit__decimal@@Base+0x5b5c>
    c7b4:	ldr	x0, [x21, #8]
    c7b8:	bl	6640 <PyLong_FromSsize_t@plt>
    c7bc:	mov	x21, x0
    c7c0:	cbnz	x0, c73c <PyInit__decimal@@Base+0x5c28>
    c7c4:	mov	x22, xzr
    c7c8:	b	c6a8 <PyInit__decimal@@Base+0x5b94>
    c7cc:	mov	x0, xzr
    c7d0:	bl	6740 <PyTuple_New@plt>
    c7d4:	mov	x22, x0
    c7d8:	cbnz	x0, c66c <PyInit__decimal@@Base+0x5b58>
    c7dc:	b	c6a8 <PyInit__decimal@@Base+0x5b94>
    c7e0:	bl	6580 <PyErr_NoMemory@plt>
    c7e4:	mov	x22, xzr
    c7e8:	b	c6ac <PyInit__decimal@@Base+0x5b98>
    c7ec:	sub	sp, sp, #0x50
    c7f0:	stp	x29, x30, [sp, #16]
    c7f4:	stp	x24, x23, [sp, #32]
    c7f8:	stp	x22, x21, [sp, #48]
    c7fc:	stp	x20, x19, [sp, #64]
    c800:	add	x29, sp, #0x10
    c804:	add	x20, x0, #0x18
    c808:	mov	x0, x20
    c80c:	stur	wzr, [x29, #-4]
    c810:	bl	183c8 <PyInit__decimal@@Base+0x118b4>
    c814:	cbz	w0, c838 <PyInit__decimal@@Base+0x5d24>
    c818:	mov	x0, x20
    c81c:	bl	1837c <PyInit__decimal@@Base+0x11868>
    c820:	cbz	w0, c888 <PyInit__decimal@@Base+0x5d74>
    c824:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    c828:	ldr	x8, [x8, #3928]
    c82c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    c830:	add	x1, x1, #0x433
    c834:	b	c898 <PyInit__decimal@@Base+0x5d84>
    c838:	bl	792c <PyInit__decimal@@Base+0xe18>
    c83c:	cbz	x0, c8a0 <PyInit__decimal@@Base+0x5d8c>
    c840:	mov	x19, x0
    c844:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c848:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    c84c:	add	x0, x0, #0x318
    c850:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    c854:	mov	x21, x0
    c858:	cbz	x0, c8a4 <PyInit__decimal@@Base+0x5d90>
    c85c:	add	x22, x21, #0x18
    c860:	sub	x2, x29, #0x4
    c864:	mov	x0, x22
    c868:	mov	x1, x20
    c86c:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
    c870:	cbz	w0, c8c0 <PyInit__decimal@@Base+0x5dac>
    c874:	mov	x0, x22
    c878:	bl	183d4 <PyInit__decimal@@Base+0x118c0>
    c87c:	cbz	w0, c8d0 <PyInit__decimal@@Base+0x5dbc>
    c880:	mov	x22, xzr
    c884:	b	c8d4 <PyInit__decimal@@Base+0x5dc0>
    c888:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    c88c:	ldr	x8, [x8, #3992]
    c890:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    c894:	add	x1, x1, #0x457
    c898:	ldr	x0, [x8]
    c89c:	bl	65f0 <PyErr_SetString@plt>
    c8a0:	mov	x21, xzr
    c8a4:	mov	x0, x21
    c8a8:	ldp	x20, x19, [sp, #64]
    c8ac:	ldp	x22, x21, [sp, #48]
    c8b0:	ldp	x24, x23, [sp, #32]
    c8b4:	ldp	x29, x30, [sp, #16]
    c8b8:	add	sp, sp, #0x50
    c8bc:	ret
    c8c0:	mov	x0, x21
    c8c4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c8c8:	bl	6580 <PyErr_NoMemory@plt>
    c8cc:	b	c8a0 <PyInit__decimal@@Base+0x5d8c>
    c8d0:	ldr	x22, [x22, #8]
    c8d4:	mov	w2, #0x3                   	// #3
    c8d8:	mov	x0, x21
    c8dc:	mov	x1, x19
    c8e0:	str	xzr, [x21, #32]
    c8e4:	bl	8a74 <PyInit__decimal@@Base+0x1f60>
    c8e8:	mov	x20, x0
    c8ec:	mov	x0, x21
    c8f0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c8f4:	cbz	x20, c99c <PyInit__decimal@@Base+0x5e88>
    c8f8:	cmp	x22, #0x0
    c8fc:	cneg	x0, x22, mi  // mi = first
    c900:	bl	6640 <PyLong_FromSsize_t@plt>
    c904:	mov	x23, x0
    c908:	cbz	x0, c98c <PyInit__decimal@@Base+0x5e78>
    c90c:	mov	w0, #0xa                   	// #10
    c910:	bl	6680 <PyLong_FromLong@plt>
    c914:	cbz	x0, c98c <PyInit__decimal@@Base+0x5e78>
    c918:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    c91c:	adrp	x2, 3f000 <PyInit__decimal@@Base+0x384ec>
    c920:	ldr	x8, [x8, #1424]
    c924:	ldr	x2, [x2, #4008]
    c928:	mov	x1, x23
    c92c:	mov	x19, x0
    c930:	blr	x8
    c934:	mov	x24, x0
    c938:	mov	x0, x23
    c93c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c940:	mov	x0, x19
    c944:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c948:	cbz	x24, c9c8 <PyInit__decimal@@Base+0x5eb4>
    c94c:	tbnz	x22, #63, c9d4 <PyInit__decimal@@Base+0x5ec0>
    c950:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    c954:	ldr	x8, [x8, #1408]
    c958:	mov	x0, x20
    c95c:	mov	x1, x24
    c960:	blr	x8
    c964:	mov	x19, x0
    c968:	mov	x0, x20
    c96c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    c970:	cbz	x19, ca58 <PyInit__decimal@@Base+0x5f44>
    c974:	mov	w0, #0x1                   	// #1
    c978:	bl	6680 <PyLong_FromLong@plt>
    c97c:	mov	x22, x0
    c980:	cbz	x0, ca68 <PyInit__decimal@@Base+0x5f54>
    c984:	mov	x21, x24
    c988:	b	ca3c <PyInit__decimal@@Base+0x5f28>
    c98c:	mov	x21, xzr
    c990:	mov	x22, xzr
    c994:	mov	x19, x20
    c998:	b	c9ac <PyInit__decimal@@Base+0x5e98>
    c99c:	mov	x21, xzr
    c9a0:	mov	x23, xzr
    c9a4:	mov	x22, xzr
    c9a8:	mov	x19, xzr
    c9ac:	mov	x0, x23
    c9b0:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
    c9b4:	mov	x0, x22
    c9b8:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
    c9bc:	mov	x0, x19
    c9c0:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
    c9c4:	b	c8a4 <PyInit__decimal@@Base+0x5d90>
    c9c8:	mov	x21, xzr
    c9cc:	mov	x23, xzr
    c9d0:	b	c990 <PyInit__decimal@@Base+0x5e7c>
    c9d4:	mov	x0, x20
    c9d8:	mov	x1, x24
    c9dc:	bl	66a0 <_PyLong_GCD@plt>
    c9e0:	mov	x21, x0
    c9e4:	cbz	x0, ca74 <PyInit__decimal@@Base+0x5f60>
    c9e8:	adrp	x22, 42000 <PyInit__decimal@@Base+0x3b4ec>
    c9ec:	ldr	x8, [x22, #1416]
    c9f0:	mov	x0, x20
    c9f4:	mov	x1, x21
    c9f8:	blr	x8
    c9fc:	mov	x19, x0
    ca00:	mov	x0, x20
    ca04:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ca08:	ldr	x8, [x22, #1416]
    ca0c:	mov	x0, x24
    ca10:	mov	x1, x21
    ca14:	blr	x8
    ca18:	mov	x22, x0
    ca1c:	mov	x0, x24
    ca20:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ca24:	mov	x0, x21
    ca28:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ca2c:	mov	x21, xzr
    ca30:	mov	x23, xzr
    ca34:	cbz	x19, c9ac <PyInit__decimal@@Base+0x5e98>
    ca38:	cbz	x22, c9ac <PyInit__decimal@@Base+0x5e98>
    ca3c:	mov	w0, #0x2                   	// #2
    ca40:	mov	x1, x19
    ca44:	mov	x2, x22
    ca48:	mov	x23, x21
    ca4c:	bl	6a00 <PyTuple_Pack@plt>
    ca50:	mov	x21, x0
    ca54:	b	c9ac <PyInit__decimal@@Base+0x5e98>
    ca58:	mov	x21, xzr
    ca5c:	mov	x22, xzr
    ca60:	mov	x23, x24
    ca64:	b	c9ac <PyInit__decimal@@Base+0x5e98>
    ca68:	mov	x21, xzr
    ca6c:	mov	x23, x24
    ca70:	b	c9ac <PyInit__decimal@@Base+0x5e98>
    ca74:	mov	x23, xzr
    ca78:	mov	x22, x24
    ca7c:	mov	x19, x20
    ca80:	b	c9ac <PyInit__decimal@@Base+0x5e98>
    ca84:	stp	x29, x30, [sp, #-32]!
    ca88:	str	x19, [sp, #16]
    ca8c:	mov	x29, sp
    ca90:	mov	x19, x0
    ca94:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    ca98:	mov	x0, x19
    ca9c:	ldr	x19, [sp, #16]
    caa0:	ldp	x29, x30, [sp], #32
    caa4:	ret
    caa8:	sub	sp, sp, #0xb0
    caac:	stp	x29, x30, [sp, #80]
    cab0:	str	x27, [sp, #96]
    cab4:	stp	x26, x25, [sp, #112]
    cab8:	stp	x24, x23, [sp, #128]
    cabc:	stp	x22, x21, [sp, #144]
    cac0:	stp	x20, x19, [sp, #160]
    cac4:	add	x29, sp, #0x50
    cac8:	mov	x19, x1
    cacc:	mov	x20, x0
    cad0:	str	xzr, [x29, #24]
    cad4:	str	wzr, [sp, #20]
    cad8:	bl	792c <PyInit__decimal@@Base+0xe18>
    cadc:	cbz	x0, cc28 <PyInit__decimal@@Base+0x6114>
    cae0:	mov	x21, x0
    cae4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    cae8:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    caec:	add	x1, x1, #0x42b
    caf0:	sub	x2, x29, #0x8
    caf4:	add	x3, x29, #0x18
    caf8:	mov	x0, x19
    cafc:	bl	6880 <PyArg_ParseTuple@plt>
    cb00:	cbz	w0, cc28 <PyInit__decimal@@Base+0x6114>
    cb04:	ldur	x0, [x29, #-8]
    cb08:	ldr	x8, [x0, #8]
    cb0c:	ldrb	w8, [x8, #171]
    cb10:	tbnz	w8, #4, cb30 <PyInit__decimal@@Base+0x601c>
    cb14:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    cb18:	ldr	x8, [x8, #3936]
    cb1c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    cb20:	add	x1, x1, #0x480
    cb24:	ldr	x0, [x8]
    cb28:	bl	65f0 <PyErr_SetString@plt>
    cb2c:	b	cc28 <PyInit__decimal@@Base+0x6114>
    cb30:	add	x1, sp, #0x8
    cb34:	bl	6970 <PyUnicode_AsUTF8AndSize@plt>
    cb38:	cbz	x0, cc28 <PyInit__decimal@@Base+0x6114>
    cb3c:	ldr	x1, [sp, #8]
    cb40:	mov	x19, x0
    cb44:	cmp	x1, #0x1
    cb48:	b.lt	cb54 <PyInit__decimal@@Base+0x6040>  // b.tstop
    cb4c:	ldrb	w8, [x19]
    cb50:	cbz	w8, cc08 <PyInit__decimal@@Base+0x60f4>
    cb54:	mov	w27, wzr
    cb58:	ldr	w2, [x21, #80]
    cb5c:	add	x0, sp, #0x18
    cb60:	mov	x1, x19
    cb64:	bl	16178 <PyInit__decimal@@Base+0xf664>
    cb68:	cbz	w0, cba0 <PyInit__decimal@@Base+0x608c>
    cb6c:	cbz	w27, cb78 <PyInit__decimal@@Base+0x6064>
    cb70:	mov	w8, #0xff                  	// #255
    cb74:	sturh	w8, [sp, #43]
    cb78:	ldr	x0, [x29, #24]
    cb7c:	cbz	x0, cc50 <PyInit__decimal@@Base+0x613c>
    cb80:	ldr	x8, [x0, #8]
    cb84:	ldrb	w8, [x8, #171]
    cb88:	tbnz	w8, #5, cc80 <PyInit__decimal@@Base+0x616c>
    cb8c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    cb90:	ldr	x8, [x8, #3936]
    cb94:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    cb98:	add	x1, x1, #0x4ad
    cb9c:	b	cbb0 <PyInit__decimal@@Base+0x609c>
    cba0:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    cba4:	ldr	x8, [x8, #3928]
    cba8:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    cbac:	add	x1, x1, #0x497
    cbb0:	ldr	x0, [x8]
    cbb4:	bl	65f0 <PyErr_SetString@plt>
    cbb8:	mov	x25, xzr
    cbbc:	mov	x22, xzr
    cbc0:	mov	x23, xzr
    cbc4:	mov	x24, xzr
    cbc8:	mov	x26, xzr
    cbcc:	mov	x0, x24
    cbd0:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
    cbd4:	mov	x0, x23
    cbd8:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
    cbdc:	mov	x0, x22
    cbe0:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
    cbe4:	cbz	w27, cbf0 <PyInit__decimal@@Base+0x60dc>
    cbe8:	mov	x0, x19
    cbec:	bl	6500 <PyMem_Free@plt>
    cbf0:	cbz	x26, cc2c <PyInit__decimal@@Base+0x6118>
    cbf4:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    cbf8:	ldr	x8, [x8, #1376]
    cbfc:	mov	x0, x26
    cc00:	blr	x8
    cc04:	b	cc2c <PyInit__decimal@@Base+0x6118>
    cc08:	mov	x0, x19
    cc0c:	bl	d1c8 <PyInit__decimal@@Base+0x66b4>
    cc10:	cbz	x0, cc28 <PyInit__decimal@@Base+0x6114>
    cc14:	mov	x19, x0
    cc18:	mov	w8, #0x5f                  	// #95
    cc1c:	mov	w27, #0x1                   	// #1
    cc20:	strb	w8, [x0]
    cc24:	b	cb58 <PyInit__decimal@@Base+0x6044>
    cc28:	mov	x25, xzr
    cc2c:	mov	x0, x25
    cc30:	ldp	x20, x19, [sp, #160]
    cc34:	ldp	x22, x21, [sp, #144]
    cc38:	ldp	x24, x23, [sp, #128]
    cc3c:	ldp	x26, x25, [sp, #112]
    cc40:	ldr	x27, [sp, #96]
    cc44:	ldp	x29, x30, [sp, #80]
    cc48:	add	sp, sp, #0xb0
    cc4c:	ret
    cc50:	ldr	x22, [sp, #48]
    cc54:	mov	x0, x22
    cc58:	bl	6480 <strlen@plt>
    cc5c:	cmp	x0, #0x1
    cc60:	b.ls	cca8 <PyInit__decimal@@Base+0x6194>  // b.plast
    cc64:	mov	x0, x22
    cc68:	bl	d220 <PyInit__decimal@@Base+0x670c>
    cc6c:	mov	x22, x0
    cc70:	cbz	x0, cd64 <PyInit__decimal@@Base+0x6250>
    cc74:	add	x8, x22, #0x20
    cc78:	str	x8, [sp, #48]
    cc7c:	b	ccb8 <PyInit__decimal@@Base+0x61a4>
    cc80:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    cc84:	add	x1, x1, #0x4ce
    cc88:	bl	6810 <PyDict_GetItemString@plt>
    cc8c:	cbz	x0, cd04 <PyInit__decimal@@Base+0x61f0>
    cc90:	bl	6560 <PyUnicode_AsUTF8String@plt>
    cc94:	mov	x22, x0
    cc98:	cbz	x0, cd80 <PyInit__decimal@@Base+0x626c>
    cc9c:	add	x8, x22, #0x20
    cca0:	str	x8, [sp, #48]
    cca4:	b	cd08 <PyInit__decimal@@Base+0x61f4>
    cca8:	b.ne	ccb4 <PyInit__decimal@@Base+0x61a0>  // b.any
    ccac:	ldrsb	w8, [x22]
    ccb0:	tbnz	w8, #31, cc64 <PyInit__decimal@@Base+0x6150>
    ccb4:	mov	x22, xzr
    ccb8:	ldr	x23, [sp, #56]
    ccbc:	mov	x0, x23
    ccc0:	bl	6480 <strlen@plt>
    ccc4:	cmp	x0, #0x1
    ccc8:	b.ls	cce8 <PyInit__decimal@@Base+0x61d4>  // b.plast
    cccc:	mov	x0, x23
    ccd0:	bl	d220 <PyInit__decimal@@Base+0x670c>
    ccd4:	mov	x23, x0
    ccd8:	cbz	x0, cd68 <PyInit__decimal@@Base+0x6254>
    ccdc:	add	x8, x23, #0x20
    cce0:	str	x8, [sp, #56]
    cce4:	b	ccfc <PyInit__decimal@@Base+0x61e8>
    cce8:	cmp	x0, #0x1
    ccec:	b.ne	ccf8 <PyInit__decimal@@Base+0x61e4>  // b.any
    ccf0:	ldrsb	w8, [x23]
    ccf4:	tbnz	w8, #31, cccc <PyInit__decimal@@Base+0x61b8>
    ccf8:	mov	x23, xzr
    ccfc:	mov	w8, #0x1                   	// #1
    cd00:	b	cd6c <PyInit__decimal@@Base+0x6258>
    cd04:	mov	x22, xzr
    cd08:	ldr	x0, [x29, #24]
    cd0c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    cd10:	add	x1, x1, #0x4dc
    cd14:	bl	6810 <PyDict_GetItemString@plt>
    cd18:	cbz	x0, cd34 <PyInit__decimal@@Base+0x6220>
    cd1c:	bl	6560 <PyUnicode_AsUTF8String@plt>
    cd20:	mov	x23, x0
    cd24:	cbz	x0, cdfc <PyInit__decimal@@Base+0x62e8>
    cd28:	add	x8, x23, #0x20
    cd2c:	str	x8, [sp, #56]
    cd30:	b	cd38 <PyInit__decimal@@Base+0x6224>
    cd34:	mov	x23, xzr
    cd38:	ldr	x0, [x29, #24]
    cd3c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    cd40:	add	x1, x1, #0x4ea
    cd44:	bl	6810 <PyDict_GetItemString@plt>
    cd48:	cbz	x0, cd88 <PyInit__decimal@@Base+0x6274>
    cd4c:	bl	6560 <PyUnicode_AsUTF8String@plt>
    cd50:	mov	x24, x0
    cd54:	cbz	x0, ce24 <PyInit__decimal@@Base+0x6310>
    cd58:	add	x8, x24, #0x20
    cd5c:	str	x8, [sp, #64]
    cd60:	b	cd8c <PyInit__decimal@@Base+0x6278>
    cd64:	mov	x23, xzr
    cd68:	mov	w8, wzr
    cd6c:	mov	x24, xzr
    cd70:	mov	x25, xzr
    cd74:	mov	x26, xzr
    cd78:	cbz	w8, cbcc <PyInit__decimal@@Base+0x60b8>
    cd7c:	b	cd98 <PyInit__decimal@@Base+0x6284>
    cd80:	mov	x25, xzr
    cd84:	b	cbc0 <PyInit__decimal@@Base+0x60ac>
    cd88:	mov	x24, xzr
    cd8c:	add	x0, sp, #0x18
    cd90:	bl	16130 <PyInit__decimal@@Base+0xf61c>
    cd94:	tbnz	w0, #31, ce04 <PyInit__decimal@@Base+0x62f0>
    cd98:	add	x0, x20, #0x18
    cd9c:	add	x2, x21, #0x10
    cda0:	add	x1, sp, #0x18
    cda4:	add	x3, sp, #0x14
    cda8:	bl	16598 <PyInit__decimal@@Base+0xfa84>
    cdac:	cbz	x0, cde0 <PyInit__decimal@@Base+0x62cc>
    cdb0:	mov	x26, x0
    cdb4:	bl	6480 <strlen@plt>
    cdb8:	str	x0, [sp, #8]
    cdbc:	cbz	w27, cdc8 <PyInit__decimal@@Base+0x62b4>
    cdc0:	mov	x0, x26
    cdc4:	bl	d2a0 <PyInit__decimal@@Base+0x678c>
    cdc8:	ldr	x1, [sp, #8]
    cdcc:	mov	x0, x26
    cdd0:	mov	x2, xzr
    cdd4:	bl	6840 <PyUnicode_DecodeUTF8@plt>
    cdd8:	mov	x25, x0
    cddc:	b	cbcc <PyInit__decimal@@Base+0x60b8>
    cde0:	ldrb	w8, [sp, #21]
    cde4:	tbnz	w8, #1, ce20 <PyInit__decimal@@Base+0x630c>
    cde8:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    cdec:	ldr	x8, [x8, #3928]
    cdf0:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    cdf4:	add	x1, x1, #0x509
    cdf8:	b	ce14 <PyInit__decimal@@Base+0x6300>
    cdfc:	mov	x25, xzr
    ce00:	b	cbc4 <PyInit__decimal@@Base+0x60b0>
    ce04:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    ce08:	ldr	x8, [x8, #3928]
    ce0c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    ce10:	add	x1, x1, #0x4f3
    ce14:	ldr	x0, [x8]
    ce18:	bl	65f0 <PyErr_SetString@plt>
    ce1c:	b	ce24 <PyInit__decimal@@Base+0x6310>
    ce20:	bl	6580 <PyErr_NoMemory@plt>
    ce24:	mov	x25, xzr
    ce28:	b	cbc8 <PyInit__decimal@@Base+0x60b4>
    ce2c:	stp	x29, x30, [sp, #-32]!
    ce30:	stp	x20, x19, [sp, #16]
    ce34:	mov	x29, sp
    ce38:	mov	x20, x0
    ce3c:	bl	764c <PyInit__decimal@@Base+0xb38>
    ce40:	cbz	x0, ce6c <PyInit__decimal@@Base+0x6358>
    ce44:	ldr	x1, [x20, #8]
    ce48:	mov	x19, x0
    ce4c:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
    ce50:	add	x0, x0, #0x58e
    ce54:	mov	x2, x19
    ce58:	bl	6770 <Py_BuildValue@plt>
    ce5c:	mov	x20, x0
    ce60:	mov	x0, x19
    ce64:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ce68:	b	ce70 <PyInit__decimal@@Base+0x635c>
    ce6c:	mov	x20, xzr
    ce70:	mov	x0, x20
    ce74:	ldp	x20, x19, [sp, #16]
    ce78:	ldp	x29, x30, [sp], #32
    ce7c:	ret
    ce80:	sub	sp, sp, #0x80
    ce84:	stp	x29, x30, [sp, #80]
    ce88:	stp	x22, x21, [sp, #96]
    ce8c:	stp	x20, x19, [sp, #112]
    ce90:	add	x29, sp, #0x50
    ce94:	mov	x21, x1
    ce98:	mov	x20, x0
    ce9c:	stur	xzr, [x29, #-8]
    cea0:	stur	wzr, [x29, #-12]
    cea4:	bl	792c <PyInit__decimal@@Base+0xe18>
    cea8:	cbz	x0, cfa8 <PyInit__decimal@@Base+0x6494>
    ceac:	mov	x19, x0
    ceb0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ceb4:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    ceb8:	add	x1, x1, #0x42c
    cebc:	sub	x2, x29, #0x8
    cec0:	mov	x0, x21
    cec4:	bl	6880 <PyArg_ParseTuple@plt>
    cec8:	cbz	w0, cfa8 <PyInit__decimal@@Base+0x6494>
    cecc:	ldur	x0, [x29, #-8]
    ced0:	cbz	x0, cf1c <PyInit__decimal@@Base+0x6408>
    ced4:	mov	w8, #0x1                   	// #1
    ced8:	mov	w9, #0x90                  	// #144
    cedc:	sub	x10, x29, #0x18
    cee0:	stur	x8, [x29, #-24]
    cee4:	strb	w9, [sp, #8]
    cee8:	stp	xzr, x8, [sp, #16]
    ceec:	stp	x8, x8, [sp, #32]
    cef0:	str	x10, [sp, #48]
    cef4:	ldr	x8, [x0, #8]
    cef8:	ldrb	w8, [x8, #171]
    cefc:	tbnz	w8, #0, cf34 <PyInit__decimal@@Base+0x6420>
    cf00:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    cf04:	ldr	x8, [x8, #3936]
    cf08:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    cf0c:	add	x1, x1, #0x593
    cf10:	ldr	x0, [x8]
    cf14:	bl	65f0 <PyErr_SetString@plt>
    cf18:	b	cfa8 <PyInit__decimal@@Base+0x6494>
    cf1c:	mov	w2, #0x6                   	// #6
    cf20:	mov	x0, x20
    cf24:	mov	x1, x19
    cf28:	bl	8a74 <PyInit__decimal@@Base+0x1f60>
    cf2c:	mov	x21, x0
    cf30:	b	cfac <PyInit__decimal@@Base+0x6498>
    cf34:	bl	6690 <PyLong_AsSsize_t@plt>
    cf38:	mov	x22, x0
    cf3c:	cmn	x0, #0x1
    cf40:	b.eq	cfa0 <PyInit__decimal@@Base+0x648c>  // b.none
    cf44:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    cf48:	add	x0, x0, #0x318
    cf4c:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    cf50:	mov	x21, x0
    cf54:	cbz	x0, cfac <PyInit__decimal@@Base+0x6498>
    cf58:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    cf5c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    cf60:	cmp	x22, x8
    cf64:	add	x0, x21, #0x18
    cf68:	add	x1, x20, #0x18
    cf6c:	csneg	x8, x9, x22, eq  // eq = none
    cf70:	add	x3, x19, #0x10
    cf74:	add	x2, sp, #0x8
    cf78:	sub	x4, x29, #0xc
    cf7c:	str	x8, [sp, #16]
    cf80:	bl	21314 <PyInit__decimal@@Base+0x1a800>
    cf84:	ldur	w1, [x29, #-12]
    cf88:	mov	x0, x19
    cf8c:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    cf90:	cbz	w0, cfac <PyInit__decimal@@Base+0x6498>
    cf94:	mov	x0, x21
    cf98:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    cf9c:	b	cfa8 <PyInit__decimal@@Base+0x6494>
    cfa0:	bl	6780 <PyErr_Occurred@plt>
    cfa4:	cbz	x0, cf44 <PyInit__decimal@@Base+0x6430>
    cfa8:	mov	x21, xzr
    cfac:	mov	x0, x21
    cfb0:	ldp	x20, x19, [sp, #112]
    cfb4:	ldp	x22, x21, [sp, #96]
    cfb8:	ldp	x29, x30, [sp, #80]
    cfbc:	add	sp, sp, #0x80
    cfc0:	ret
    cfc4:	stp	x29, x30, [sp, #-32]!
    cfc8:	stp	x20, x19, [sp, #16]
    cfcc:	mov	x29, sp
    cfd0:	mov	x19, x0
    cfd4:	bl	792c <PyInit__decimal@@Base+0xe18>
    cfd8:	cbz	x0, cff4 <PyInit__decimal@@Base+0x64e0>
    cfdc:	mov	x20, x0
    cfe0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    cfe4:	mov	w2, #0x2                   	// #2
    cfe8:	mov	x0, x19
    cfec:	mov	x1, x20
    cff0:	bl	8a74 <PyInit__decimal@@Base+0x1f60>
    cff4:	ldp	x20, x19, [sp, #16]
    cff8:	ldp	x29, x30, [sp], #32
    cffc:	ret
    d000:	stp	x29, x30, [sp, #-32]!
    d004:	stp	x20, x19, [sp, #16]
    d008:	mov	x29, sp
    d00c:	mov	x19, x0
    d010:	bl	792c <PyInit__decimal@@Base+0xe18>
    d014:	cbz	x0, d030 <PyInit__decimal@@Base+0x651c>
    d018:	mov	x20, x0
    d01c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    d020:	mov	w2, #0x3                   	// #3
    d024:	mov	x0, x19
    d028:	mov	x1, x20
    d02c:	bl	8a74 <PyInit__decimal@@Base+0x1f60>
    d030:	ldp	x20, x19, [sp, #16]
    d034:	ldp	x29, x30, [sp], #32
    d038:	ret
    d03c:	stp	x29, x30, [sp, #-32]!
    d040:	stp	x20, x19, [sp, #16]
    d044:	mov	x29, sp
    d048:	mov	x19, x0
    d04c:	bl	792c <PyInit__decimal@@Base+0xe18>
    d050:	cbz	x0, d06c <PyInit__decimal@@Base+0x6558>
    d054:	mov	x20, x0
    d058:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    d05c:	mov	w2, #0x1                   	// #1
    d060:	mov	x0, x19
    d064:	mov	x1, x20
    d068:	bl	8a74 <PyInit__decimal@@Base+0x1f60>
    d06c:	ldp	x20, x19, [sp, #16]
    d070:	ldp	x29, x30, [sp], #32
    d074:	ret
    d078:	str	d8, [sp, #-32]!
    d07c:	stp	x29, x30, [sp, #8]
    d080:	str	x19, [sp, #24]
    d084:	mov	x29, sp
    d088:	bl	82d4 <PyInit__decimal@@Base+0x17c0>
    d08c:	cbz	x0, d0cc <PyInit__decimal@@Base+0x65b8>
    d090:	mov	x19, x0
    d094:	bl	6860 <PyFloat_AsDouble@plt>
    d098:	mov	x0, x19
    d09c:	mov	v8.16b, v0.16b
    d0a0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    d0a4:	fmov	d0, #-1.000000000000000000e+00
    d0a8:	fcmp	d8, d0
    d0ac:	b.ne	d0c0 <PyInit__decimal@@Base+0x65ac>  // b.any
    d0b0:	bl	6780 <PyErr_Occurred@plt>
    d0b4:	cbz	x0, d0c0 <PyInit__decimal@@Base+0x65ac>
    d0b8:	mov	x0, xzr
    d0bc:	b	d0cc <PyInit__decimal@@Base+0x65b8>
    d0c0:	fmov	d1, xzr
    d0c4:	mov	v0.16b, v8.16b
    d0c8:	bl	69a0 <PyComplex_FromDoubles@plt>
    d0cc:	ldr	x19, [sp, #24]
    d0d0:	ldp	x29, x30, [sp, #8]
    d0d4:	ldr	d8, [sp], #32
    d0d8:	ret
    d0dc:	stp	x29, x30, [sp, #-32]!
    d0e0:	stp	x20, x19, [sp, #16]
    d0e4:	mov	x29, sp
    d0e8:	ldr	x8, [x0, #8]
    d0ec:	add	x20, x0, #0x18
    d0f0:	mov	x0, x20
    d0f4:	ldr	x19, [x8, #32]
    d0f8:	bl	18504 <PyInit__decimal@@Base+0x119f0>
    d0fc:	cbz	w0, d108 <PyInit__decimal@@Base+0x65f4>
    d100:	ldr	x8, [x20, #32]
    d104:	add	x19, x19, x8, lsl #3
    d108:	mov	x0, x19
    d10c:	bl	6640 <PyLong_FromSsize_t@plt>
    d110:	ldp	x20, x19, [sp, #16]
    d114:	ldp	x29, x30, [sp], #32
    d118:	ret
    d11c:	stp	x29, x30, [sp, #-48]!
    d120:	str	x21, [sp, #16]
    d124:	stp	x20, x19, [sp, #32]
    d128:	mov	x29, sp
    d12c:	ldr	x8, [x0, #8]
    d130:	ldrb	w8, [x8, #171]
    d134:	tbnz	w8, #4, d154 <PyInit__decimal@@Base+0x6640>
    d138:	bl	d1a0 <PyInit__decimal@@Base+0x668c>
    d13c:	mov	w19, #0xffffffff            	// #-1
    d140:	mov	w0, w19
    d144:	ldp	x20, x19, [sp, #32]
    d148:	ldr	x21, [sp, #16]
    d14c:	ldp	x29, x30, [sp], #48
    d150:	ret
    d154:	adrp	x21, 42000 <PyInit__decimal@@Base+0x3b4ec>
    d158:	mov	x20, x0
    d15c:	mov	w19, wzr
    d160:	add	x21, x21, #0x5f0
    d164:	ldr	x8, [x21, w19, sxtw #3]
    d168:	cmp	x8, x20
    d16c:	b.eq	d140 <PyInit__decimal@@Base+0x662c>  // b.none
    d170:	add	w19, w19, #0x1
    d174:	cmp	w19, #0x8
    d178:	b.ne	d164 <PyInit__decimal@@Base+0x6650>  // b.any
    d17c:	mov	x19, xzr
    d180:	ldr	x1, [x21, x19, lsl #3]
    d184:	mov	x0, x20
    d188:	bl	68a0 <PyUnicode_Compare@plt>
    d18c:	cbz	w0, d140 <PyInit__decimal@@Base+0x662c>
    d190:	add	x19, x19, #0x1
    d194:	cmp	x19, #0x8
    d198:	b.ne	d180 <PyInit__decimal@@Base+0x666c>  // b.any
    d19c:	b	d138 <PyInit__decimal@@Base+0x6624>
    d1a0:	stp	x29, x30, [sp, #-16]!
    d1a4:	mov	x29, sp
    d1a8:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    d1ac:	ldr	x8, [x8, #3936]
    d1b0:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    d1b4:	add	x1, x1, #0x336
    d1b8:	ldr	x0, [x8]
    d1bc:	bl	65f0 <PyErr_SetString@plt>
    d1c0:	ldp	x29, x30, [sp], #16
    d1c4:	ret
    d1c8:	stp	x29, x30, [sp, #-48]!
    d1cc:	str	x21, [sp, #16]
    d1d0:	stp	x20, x19, [sp, #32]
    d1d4:	mov	x29, sp
    d1d8:	mov	x21, x0
    d1dc:	add	x0, x1, #0x1
    d1e0:	mov	x19, x1
    d1e4:	bl	69e0 <PyMem_Malloc@plt>
    d1e8:	mov	x20, x0
    d1ec:	cbz	x0, d208 <PyInit__decimal@@Base+0x66f4>
    d1f0:	mov	x0, x20
    d1f4:	mov	x1, x21
    d1f8:	mov	x2, x19
    d1fc:	bl	6420 <memcpy@plt>
    d200:	strb	wzr, [x20, x19]
    d204:	b	d20c <PyInit__decimal@@Base+0x66f8>
    d208:	bl	6580 <PyErr_NoMemory@plt>
    d20c:	mov	x0, x20
    d210:	ldp	x20, x19, [sp, #32]
    d214:	ldr	x21, [sp, #16]
    d218:	ldp	x29, x30, [sp], #48
    d21c:	ret
    d220:	sub	sp, sp, #0x30
    d224:	stp	x29, x30, [sp, #16]
    d228:	stp	x20, x19, [sp, #32]
    d22c:	add	x29, sp, #0x10
    d230:	mov	x1, x0
    d234:	add	x0, sp, #0x8
    d238:	mov	w2, #0x2                   	// #2
    d23c:	bl	64a0 <mbstowcs@plt>
    d240:	cmp	x0, #0x1
    d244:	b.ne	d270 <PyInit__decimal@@Base+0x675c>  // b.any
    d248:	add	x0, sp, #0x8
    d24c:	mov	w1, #0x1                   	// #1
    d250:	bl	6510 <PyUnicode_FromWideChar@plt>
    d254:	cbz	x0, d288 <PyInit__decimal@@Base+0x6774>
    d258:	mov	x20, x0
    d25c:	bl	6560 <PyUnicode_AsUTF8String@plt>
    d260:	mov	x19, x0
    d264:	mov	x0, x20
    d268:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    d26c:	b	d28c <PyInit__decimal@@Base+0x6778>
    d270:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    d274:	ldr	x8, [x8, #3928]
    d278:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    d27c:	add	x1, x1, #0x542
    d280:	ldr	x0, [x8]
    d284:	bl	65f0 <PyErr_SetString@plt>
    d288:	mov	x19, xzr
    d28c:	mov	x0, x19
    d290:	ldp	x20, x19, [sp, #32]
    d294:	ldp	x29, x30, [sp, #16]
    d298:	add	sp, sp, #0x30
    d29c:	ret
    d2a0:	b	d2ac <PyInit__decimal@@Base+0x6798>
    d2a4:	strb	wzr, [x0]
    d2a8:	add	x0, x0, #0x1
    d2ac:	ldrb	w8, [x0]
    d2b0:	cmp	w8, #0xff
    d2b4:	b.eq	d2a4 <PyInit__decimal@@Base+0x6790>  // b.none
    d2b8:	cbnz	w8, d2a8 <PyInit__decimal@@Base+0x6794>
    d2bc:	ret
    d2c0:	stp	x29, x30, [sp, #-32]!
    d2c4:	str	x19, [sp, #16]
    d2c8:	mov	x29, sp
    d2cc:	mov	x19, x0
    d2d0:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    d2d4:	mov	x0, x19
    d2d8:	ldr	x19, [sp, #16]
    d2dc:	ldp	x29, x30, [sp], #32
    d2e0:	ret
    d2e4:	stp	x29, x30, [sp, #-32]!
    d2e8:	str	x19, [sp, #16]
    d2ec:	mov	x29, sp
    d2f0:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    d2f4:	add	x0, x0, #0x318
    d2f8:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    d2fc:	mov	x19, x0
    d300:	cbz	x0, d314 <PyInit__decimal@@Base+0x6800>
    d304:	mov	x0, x19
    d308:	mov	w1, wzr
    d30c:	mov	w2, wzr
    d310:	bl	88d8 <PyInit__decimal@@Base+0x1dc4>
    d314:	mov	x0, x19
    d318:	ldr	x19, [sp, #16]
    d31c:	ldp	x29, x30, [sp], #32
    d320:	ret
    d324:	stp	x29, x30, [sp, #-48]!
    d328:	str	x21, [sp, #16]
    d32c:	stp	x20, x19, [sp, #32]
    d330:	mov	x29, sp
    d334:	mov	x19, x2
    d338:	mov	x21, x0
    d33c:	cbz	x1, d37c <PyInit__decimal@@Base+0x6868>
    d340:	ldr	x0, [x1, #8]
    d344:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    d348:	add	x8, x8, #0x318
    d34c:	mov	x20, x1
    d350:	cmp	x0, x8
    d354:	b.eq	d368 <PyInit__decimal@@Base+0x6854>  // b.none
    d358:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    d35c:	add	x1, x1, #0x318
    d360:	bl	6960 <PyType_IsSubtype@plt>
    d364:	cbz	w0, d398 <PyInit__decimal@@Base+0x6884>
    d368:	mov	x0, x21
    d36c:	mov	x1, x20
    d370:	mov	x2, x19
    d374:	bl	d4c8 <PyInit__decimal@@Base+0x69b4>
    d378:	b	d388 <PyInit__decimal@@Base+0x6874>
    d37c:	mov	x0, x21
    d380:	mov	x1, x19
    d384:	bl	d458 <PyInit__decimal@@Base+0x6944>
    d388:	ldp	x20, x19, [sp, #32]
    d38c:	ldr	x21, [sp, #16]
    d390:	ldp	x29, x30, [sp], #48
    d394:	ret
    d398:	ldr	x0, [x20, #8]
    d39c:	ldr	x8, [x0, #168]
    d3a0:	tbnz	w8, #28, d3c4 <PyInit__decimal@@Base+0x68b0>
    d3a4:	tbnz	w8, #24, d3d8 <PyInit__decimal@@Base+0x68c4>
    d3a8:	tst	x8, #0x6000000
    d3ac:	b.eq	d3ec <PyInit__decimal@@Base+0x68d8>  // b.none
    d3b0:	mov	x0, x21
    d3b4:	mov	x1, x20
    d3b8:	mov	x2, x19
    d3bc:	bl	d5cc <PyInit__decimal@@Base+0x6ab8>
    d3c0:	b	d388 <PyInit__decimal@@Base+0x6874>
    d3c4:	mov	x0, x21
    d3c8:	mov	x1, x20
    d3cc:	mov	x2, x19
    d3d0:	bl	d560 <PyInit__decimal@@Base+0x6a4c>
    d3d4:	b	d388 <PyInit__decimal@@Base+0x6874>
    d3d8:	mov	x0, x21
    d3dc:	mov	x1, x20
    d3e0:	mov	x2, x19
    d3e4:	bl	8760 <PyInit__decimal@@Base+0x1c4c>
    d3e8:	b	d388 <PyInit__decimal@@Base+0x6874>
    d3ec:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    d3f0:	ldr	x8, [x8, #3864]
    d3f4:	cmp	x0, x8
    d3f8:	b.eq	d40c <PyInit__decimal@@Base+0x68f8>  // b.none
    d3fc:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
    d400:	ldr	x1, [x1, #3864]
    d404:	bl	6960 <PyType_IsSubtype@plt>
    d408:	cbz	w0, d430 <PyInit__decimal@@Base+0x691c>
    d40c:	mov	w1, #0x400                 	// #1024
    d410:	mov	x0, x19
    d414:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    d418:	cbnz	w0, d450 <PyInit__decimal@@Base+0x693c>
    d41c:	mov	x0, x21
    d420:	mov	x1, x20
    d424:	mov	x2, x19
    d428:	bl	9178 <PyInit__decimal@@Base+0x2664>
    d42c:	b	d388 <PyInit__decimal@@Base+0x6874>
    d430:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x384ec>
    d434:	ldr	x8, [x20, #8]
    d438:	ldr	x9, [x9, #3936]
    d43c:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    d440:	add	x1, x1, #0xf13
    d444:	ldr	x2, [x8, #24]
    d448:	ldr	x0, [x9]
    d44c:	bl	69b0 <PyErr_Format@plt>
    d450:	mov	x0, xzr
    d454:	b	d388 <PyInit__decimal@@Base+0x6874>
    d458:	sub	sp, sp, #0x60
    d45c:	stp	x29, x30, [sp, #64]
    d460:	stp	x20, x19, [sp, #80]
    d464:	add	x29, sp, #0x40
    d468:	mov	x20, x1
    d46c:	stur	wzr, [x29, #-4]
    d470:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    d474:	mov	x19, x0
    d478:	cbz	x0, d4b4 <PyInit__decimal@@Base+0x69a0>
    d47c:	add	x0, sp, #0x8
    d480:	bl	13964 <PyInit__decimal@@Base+0xce50>
    d484:	add	x0, x19, #0x18
    d488:	add	x2, sp, #0x8
    d48c:	sub	x3, x29, #0x4
    d490:	mov	x1, xzr
    d494:	bl	190f4 <PyInit__decimal@@Base+0x125e0>
    d498:	ldur	w1, [x29, #-4]
    d49c:	mov	x0, x20
    d4a0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    d4a4:	cbz	w0, d4b4 <PyInit__decimal@@Base+0x69a0>
    d4a8:	mov	x0, x19
    d4ac:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    d4b0:	mov	x19, xzr
    d4b4:	mov	x0, x19
    d4b8:	ldp	x20, x19, [sp, #80]
    d4bc:	ldp	x29, x30, [sp, #64]
    d4c0:	add	sp, sp, #0x60
    d4c4:	ret
    d4c8:	stp	x29, x30, [sp, #-48]!
    d4cc:	str	x21, [sp, #16]
    d4d0:	stp	x20, x19, [sp, #32]
    d4d4:	mov	x29, sp
    d4d8:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    d4dc:	add	x8, x8, #0x318
    d4e0:	mov	x20, x2
    d4e4:	mov	x19, x1
    d4e8:	cmp	x0, x8
    d4ec:	str	wzr, [x29, #28]
    d4f0:	b.ne	d500 <PyInit__decimal@@Base+0x69ec>  // b.any
    d4f4:	ldr	x9, [x19, #8]
    d4f8:	cmp	x9, x8
    d4fc:	b.eq	d544 <PyInit__decimal@@Base+0x6a30>  // b.none
    d500:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    d504:	cbz	x0, d534 <PyInit__decimal@@Base+0x6a20>
    d508:	mov	x21, x0
    d50c:	add	x0, x0, #0x18
    d510:	add	x1, x19, #0x18
    d514:	add	x2, x29, #0x1c
    d518:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
    d51c:	ldr	w1, [x29, #28]
    d520:	mov	x0, x20
    d524:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    d528:	cbz	w0, d53c <PyInit__decimal@@Base+0x6a28>
    d52c:	mov	x0, x21
    d530:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    d534:	mov	x19, xzr
    d538:	b	d54c <PyInit__decimal@@Base+0x6a38>
    d53c:	mov	x19, x21
    d540:	b	d54c <PyInit__decimal@@Base+0x6a38>
    d544:	mov	x0, x19
    d548:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    d54c:	mov	x0, x19
    d550:	ldp	x20, x19, [sp, #32]
    d554:	ldr	x21, [sp, #16]
    d558:	ldp	x29, x30, [sp], #48
    d55c:	ret
    d560:	stp	x29, x30, [sp, #-48]!
    d564:	str	x21, [sp, #16]
    d568:	stp	x20, x19, [sp, #32]
    d56c:	mov	x29, sp
    d570:	mov	x8, x1
    d574:	mov	x19, x2
    d578:	mov	x20, x0
    d57c:	mov	w1, #0x1                   	// #1
    d580:	mov	w2, #0x1                   	// #1
    d584:	mov	x0, x8
    d588:	bl	d658 <PyInit__decimal@@Base+0x6b44>
    d58c:	cbz	x0, d5b4 <PyInit__decimal@@Base+0x6aa0>
    d590:	mov	x21, x0
    d594:	mov	x0, x20
    d598:	mov	x1, x21
    d59c:	mov	x2, x19
    d5a0:	bl	d818 <PyInit__decimal@@Base+0x6d04>
    d5a4:	mov	x19, x0
    d5a8:	mov	x0, x21
    d5ac:	bl	6500 <PyMem_Free@plt>
    d5b0:	b	d5b8 <PyInit__decimal@@Base+0x6aa4>
    d5b4:	mov	x19, xzr
    d5b8:	mov	x0, x19
    d5bc:	ldp	x20, x19, [sp, #32]
    d5c0:	ldr	x21, [sp, #16]
    d5c4:	ldp	x29, x30, [sp], #48
    d5c8:	ret
    d5cc:	stp	x29, x30, [sp, #-48]!
    d5d0:	stp	x22, x21, [sp, #16]
    d5d4:	stp	x20, x19, [sp, #32]
    d5d8:	mov	x29, sp
    d5dc:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x384ec>
    d5e0:	ldr	x9, [x9, #3936]
    d5e4:	mov	x8, x1
    d5e8:	mov	x19, x2
    d5ec:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    d5f0:	ldr	x1, [x9]
    d5f4:	mov	x20, x0
    d5f8:	add	x2, x2, #0x5bd
    d5fc:	mov	x0, x8
    d600:	bl	d924 <PyInit__decimal@@Base+0x6e10>
    d604:	cbz	x0, d640 <PyInit__decimal@@Base+0x6b2c>
    d608:	mov	x22, x0
    d60c:	bl	d980 <PyInit__decimal@@Base+0x6e6c>
    d610:	mov	x21, x0
    d614:	mov	x0, x22
    d618:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    d61c:	cbz	x21, d640 <PyInit__decimal@@Base+0x6b2c>
    d620:	mov	x0, x20
    d624:	mov	x1, x21
    d628:	mov	x2, x19
    d62c:	bl	d818 <PyInit__decimal@@Base+0x6d04>
    d630:	mov	x19, x0
    d634:	mov	x0, x21
    d638:	bl	6500 <PyMem_Free@plt>
    d63c:	b	d644 <PyInit__decimal@@Base+0x6b30>
    d640:	mov	x19, xzr
    d644:	mov	x0, x19
    d648:	ldp	x20, x19, [sp, #32]
    d64c:	ldp	x22, x21, [sp, #16]
    d650:	ldp	x29, x30, [sp], #48
    d654:	ret
    d658:	stp	x29, x30, [sp, #-96]!
    d65c:	str	x27, [sp, #16]
    d660:	stp	x26, x25, [sp, #32]
    d664:	stp	x24, x23, [sp, #48]
    d668:	stp	x22, x21, [sp, #64]
    d66c:	stp	x20, x19, [sp, #80]
    d670:	mov	x29, sp
    d674:	ldrb	w8, [x0, #32]
    d678:	mov	w19, w2
    d67c:	mov	x20, x0
    d680:	mov	w24, w1
    d684:	tbnz	w8, #7, d698 <PyInit__decimal@@Base+0x6b84>
    d688:	mov	x0, x20
    d68c:	bl	6460 <_PyUnicode_Ready@plt>
    d690:	cmn	w0, #0x1
    d694:	b.eq	d738 <PyInit__decimal@@Base+0x6c24>  // b.none
    d698:	ldr	w22, [x20, #32]
    d69c:	tbnz	w22, #5, d6a8 <PyInit__decimal@@Base+0x6b94>
    d6a0:	ldr	x21, [x20, #72]
    d6a4:	b	d6b8 <PyInit__decimal@@Base+0x6ba4>
    d6a8:	add	x8, x20, #0x30
    d6ac:	add	x9, x20, #0x48
    d6b0:	tst	w22, #0x40
    d6b4:	csel	x21, x9, x8, eq  // eq = none
    d6b8:	ldr	x23, [x20, #16]
    d6bc:	add	x0, x23, #0x1
    d6c0:	bl	69e0 <PyMem_Malloc@plt>
    d6c4:	mov	x20, x0
    d6c8:	cbz	x0, d728 <PyInit__decimal@@Base+0x6c14>
    d6cc:	ubfx	w22, w22, #2, #3
    d6d0:	cbz	w24, d730 <PyInit__decimal@@Base+0x6c1c>
    d6d4:	mov	x25, x23
    d6d8:	subs	x23, x23, #0x1
    d6dc:	b.lt	d6f4 <PyInit__decimal@@Base+0x6be0>  // b.tstop
    d6e0:	mov	w0, w22
    d6e4:	mov	x1, x21
    d6e8:	mov	x2, x23
    d6ec:	bl	d8c4 <PyInit__decimal@@Base+0x6db0>
    d6f0:	cbnz	w0, d6d4 <PyInit__decimal@@Base+0x6bc0>
    d6f4:	cmp	x25, #0x1
    d6f8:	b.lt	d740 <PyInit__decimal@@Base+0x6c2c>  // b.tstop
    d6fc:	mov	x24, xzr
    d700:	mov	w0, w22
    d704:	mov	x1, x21
    d708:	mov	x2, x24
    d70c:	bl	d8c4 <PyInit__decimal@@Base+0x6db0>
    d710:	cbz	w0, d744 <PyInit__decimal@@Base+0x6c30>
    d714:	add	x24, x24, #0x1
    d718:	cmp	x25, x24
    d71c:	b.ne	d700 <PyInit__decimal@@Base+0x6bec>  // b.any
    d720:	mov	x24, x25
    d724:	b	d744 <PyInit__decimal@@Base+0x6c30>
    d728:	bl	6580 <PyErr_NoMemory@plt>
    d72c:	b	d7f0 <PyInit__decimal@@Base+0x6cdc>
    d730:	mov	x24, xzr
    d734:	b	d748 <PyInit__decimal@@Base+0x6c34>
    d738:	mov	x20, xzr
    d73c:	b	d7f0 <PyInit__decimal@@Base+0x6cdc>
    d740:	mov	x24, xzr
    d744:	mov	x23, x25
    d748:	cmp	x24, x23
    d74c:	mov	x26, x20
    d750:	b.ge	d7ec <PyInit__decimal@@Base+0x6cd8>  // b.tcont
    d754:	adrp	x27, 3f000 <PyInit__decimal@@Base+0x384ec>
    d758:	ldr	x27, [x27, #3880]
    d75c:	mov	x26, x20
    d760:	b	d780 <PyInit__decimal@@Base+0x6c6c>
    d764:	ldrb	w8, [x27, w25, uxtw]
    d768:	cbz	w8, d7d8 <PyInit__decimal@@Base+0x6cc4>
    d76c:	mov	w25, #0x20                  	// #32
    d770:	strb	w25, [x26], #1
    d774:	add	x24, x24, #0x1
    d778:	cmp	x23, x24
    d77c:	b.eq	d7ec <PyInit__decimal@@Base+0x6cd8>  // b.none
    d780:	cmp	w22, #0x2
    d784:	b.eq	d79c <PyInit__decimal@@Base+0x6c88>  // b.none
    d788:	cmp	w22, #0x1
    d78c:	b.ne	d7a8 <PyInit__decimal@@Base+0x6c94>  // b.any
    d790:	ldrb	w25, [x21, x24]
    d794:	cbnz	w19, d7b0 <PyInit__decimal@@Base+0x6c9c>
    d798:	b	d7b8 <PyInit__decimal@@Base+0x6ca4>
    d79c:	ldrh	w25, [x21, x24, lsl #1]
    d7a0:	cbnz	w19, d7b0 <PyInit__decimal@@Base+0x6c9c>
    d7a4:	b	d7b8 <PyInit__decimal@@Base+0x6ca4>
    d7a8:	ldr	w25, [x21, x24, lsl #2]
    d7ac:	cbz	w19, d7b8 <PyInit__decimal@@Base+0x6ca4>
    d7b0:	cmp	w25, #0x5f
    d7b4:	b.eq	d774 <PyInit__decimal@@Base+0x6c60>  // b.none
    d7b8:	sub	w8, w25, #0x1
    d7bc:	cmp	w8, #0x7e
    d7c0:	b.ls	d770 <PyInit__decimal@@Base+0x6c5c>  // b.plast
    d7c4:	cmp	w25, #0x7f
    d7c8:	b.ls	d764 <PyInit__decimal@@Base+0x6c50>  // b.plast
    d7cc:	mov	w0, w25
    d7d0:	bl	67a0 <_PyUnicode_IsWhitespace@plt>
    d7d4:	cbnz	w0, d76c <PyInit__decimal@@Base+0x6c58>
    d7d8:	mov	w0, w25
    d7dc:	bl	6850 <_PyUnicode_ToDecimalDigit@plt>
    d7e0:	tbnz	w0, #31, d810 <PyInit__decimal@@Base+0x6cfc>
    d7e4:	add	w25, w0, #0x30
    d7e8:	b	d770 <PyInit__decimal@@Base+0x6c5c>
    d7ec:	strb	wzr, [x26]
    d7f0:	mov	x0, x20
    d7f4:	ldp	x20, x19, [sp, #80]
    d7f8:	ldp	x22, x21, [sp, #64]
    d7fc:	ldp	x24, x23, [sp, #48]
    d800:	ldp	x26, x25, [sp, #32]
    d804:	ldr	x27, [sp, #16]
    d808:	ldp	x29, x30, [sp], #96
    d80c:	ret
    d810:	strb	wzr, [x20]
    d814:	b	d7f0 <PyInit__decimal@@Base+0x6cdc>
    d818:	sub	sp, sp, #0x70
    d81c:	stp	x29, x30, [sp, #64]
    d820:	stp	x22, x21, [sp, #80]
    d824:	stp	x20, x19, [sp, #96]
    d828:	add	x29, sp, #0x40
    d82c:	mov	x20, x2
    d830:	mov	x21, x1
    d834:	stur	wzr, [x29, #-4]
    d838:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    d83c:	mov	x19, x0
    d840:	cbz	x0, d8ac <PyInit__decimal@@Base+0x6d98>
    d844:	add	x0, sp, #0x8
    d848:	bl	13964 <PyInit__decimal@@Base+0xce50>
    d84c:	add	x22, x19, #0x18
    d850:	add	x2, sp, #0x8
    d854:	sub	x3, x29, #0x4
    d858:	mov	x0, x22
    d85c:	mov	x1, x21
    d860:	bl	1576c <PyInit__decimal@@Base+0xec58>
    d864:	ldurh	w8, [x29, #-4]
    d868:	mov	w9, #0x1041                	// #4161
    d86c:	tst	w8, w9
    d870:	b.eq	d884 <PyInit__decimal@@Base+0x6d70>  // b.none
    d874:	sub	x2, x29, #0x4
    d878:	mov	w1, #0x100                 	// #256
    d87c:	mov	x0, x22
    d880:	bl	18e8c <PyInit__decimal@@Base+0x12378>
    d884:	ldur	w8, [x29, #-4]
    d888:	mov	w9, #0x3be                 	// #958
    d88c:	mov	x0, x20
    d890:	and	w1, w8, w9
    d894:	stur	w1, [x29, #-4]
    d898:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    d89c:	cbz	w0, d8ac <PyInit__decimal@@Base+0x6d98>
    d8a0:	mov	x0, x19
    d8a4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    d8a8:	mov	x19, xzr
    d8ac:	mov	x0, x19
    d8b0:	ldp	x20, x19, [sp, #96]
    d8b4:	ldp	x22, x21, [sp, #80]
    d8b8:	ldp	x29, x30, [sp, #64]
    d8bc:	add	sp, sp, #0x70
    d8c0:	ret
    d8c4:	stp	x29, x30, [sp, #-16]!
    d8c8:	mov	x29, sp
    d8cc:	cmp	w0, #0x2
    d8d0:	b.eq	d8ec <PyInit__decimal@@Base+0x6dd8>  // b.none
    d8d4:	cmp	w0, #0x1
    d8d8:	b.ne	d904 <PyInit__decimal@@Base+0x6df0>  // b.any
    d8dc:	ldrb	w0, [x1, x2]
    d8e0:	cmp	w0, #0x7f
    d8e4:	b.hi	d8f8 <PyInit__decimal@@Base+0x6de4>  // b.pmore
    d8e8:	b	d910 <PyInit__decimal@@Base+0x6dfc>
    d8ec:	ldrh	w0, [x1, x2, lsl #1]
    d8f0:	cmp	w0, #0x7f
    d8f4:	b.ls	d910 <PyInit__decimal@@Base+0x6dfc>  // b.plast
    d8f8:	bl	67a0 <_PyUnicode_IsWhitespace@plt>
    d8fc:	ldp	x29, x30, [sp], #16
    d900:	ret
    d904:	ldr	w0, [x1, x2, lsl #2]
    d908:	cmp	w0, #0x7f
    d90c:	b.hi	d8f8 <PyInit__decimal@@Base+0x6de4>  // b.pmore
    d910:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    d914:	ldr	x8, [x8, #3880]
    d918:	ldrb	w0, [x8, w0, uxtw]
    d91c:	ldp	x29, x30, [sp], #16
    d920:	ret
    d924:	stp	x29, x30, [sp, #-32]!
    d928:	str	x19, [sp, #16]
    d92c:	mov	x29, sp
    d930:	ldr	x8, [x0, #8]
    d934:	mov	x19, x0
    d938:	ldr	x8, [x8, #168]
    d93c:	tbnz	w8, #26, d958 <PyInit__decimal@@Base+0x6e44>
    d940:	tbnz	w8, #25, d964 <PyInit__decimal@@Base+0x6e50>
    d944:	mov	x0, x1
    d948:	mov	x1, x2
    d94c:	bl	65f0 <PyErr_SetString@plt>
    d950:	mov	x19, xzr
    d954:	b	d970 <PyInit__decimal@@Base+0x6e5c>
    d958:	mov	x0, x19
    d95c:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    d960:	b	d970 <PyInit__decimal@@Base+0x6e5c>
    d964:	mov	x0, x19
    d968:	bl	64d0 <PyList_AsTuple@plt>
    d96c:	mov	x19, x0
    d970:	mov	x0, x19
    d974:	ldr	x19, [sp, #16]
    d978:	ldp	x29, x30, [sp], #32
    d97c:	ret
    d980:	stp	x29, x30, [sp, #-96]!
    d984:	str	x27, [sp, #16]
    d988:	stp	x26, x25, [sp, #32]
    d98c:	stp	x24, x23, [sp, #48]
    d990:	stp	x22, x21, [sp, #64]
    d994:	stp	x20, x19, [sp, #80]
    d998:	mov	x29, sp
    d99c:	mov	x19, x0
    d9a0:	bl	6980 <PyTuple_Size@plt>
    d9a4:	cmp	x0, #0x3
    d9a8:	b.ne	d9e8 <PyInit__decimal@@Base+0x6ed4>  // b.any
    d9ac:	ldr	x0, [x19, #24]
    d9b0:	ldr	x8, [x0, #8]
    d9b4:	ldrb	w8, [x8, #171]
    d9b8:	tbz	w8, #0, d9d4 <PyInit__decimal@@Base+0x6ec0>
    d9bc:	bl	67c0 <PyLong_AsLong@plt>
    d9c0:	mov	x20, x0
    d9c4:	cmn	x0, #0x1
    d9c8:	b.eq	da80 <PyInit__decimal@@Base+0x6f6c>  // b.none
    d9cc:	cmp	x20, #0x2
    d9d0:	b.cc	da40 <PyInit__decimal@@Base+0x6f2c>  // b.lo, b.ul, b.last
    d9d4:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    d9d8:	ldr	x8, [x8, #3928]
    d9dc:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    d9e0:	add	x1, x1, #0x606
    d9e4:	b	d9f8 <PyInit__decimal@@Base+0x6ee4>
    d9e8:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    d9ec:	ldr	x8, [x8, #3928]
    d9f0:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    d9f4:	add	x1, x1, #0x5de
    d9f8:	ldr	x0, [x8]
    d9fc:	bl	65f0 <PyErr_SetString@plt>
    da00:	mov	x19, xzr
    da04:	mov	x20, xzr
    da08:	mov	x0, x20
    da0c:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
    da10:	cbz	x19, da20 <PyInit__decimal@@Base+0x6f0c>
    da14:	mov	x0, x19
    da18:	bl	6500 <PyMem_Free@plt>
    da1c:	mov	x19, xzr
    da20:	mov	x0, x19
    da24:	ldp	x20, x19, [sp, #80]
    da28:	ldp	x22, x21, [sp, #64]
    da2c:	ldp	x24, x23, [sp, #48]
    da30:	ldp	x26, x25, [sp, #32]
    da34:	ldr	x27, [sp, #16]
    da38:	ldp	x29, x30, [sp], #96
    da3c:	ret
    da40:	cmp	x20, #0x0
    da44:	mov	w8, #0x2d                  	// #45
    da48:	mov	w9, #0x2b                  	// #43
    da4c:	csel	w8, w9, w8, eq  // eq = none
    da50:	strb	w8, [x29, #24]
    da54:	strb	wzr, [x29, #25]
    da58:	ldr	x20, [x19, #40]
    da5c:	ldr	x8, [x20, #8]
    da60:	ldr	x8, [x8, #168]
    da64:	tbnz	w8, #28, da8c <PyInit__decimal@@Base+0x6f78>
    da68:	tbnz	w8, #24, dadc <PyInit__decimal@@Base+0x6fc8>
    da6c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    da70:	ldr	x8, [x8, #3928]
    da74:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    da78:	add	x1, x1, #0x677
    da7c:	b	d9f8 <PyInit__decimal@@Base+0x6ee4>
    da80:	bl	6780 <PyErr_Occurred@plt>
    da84:	cbnz	x0, da00 <PyInit__decimal@@Base+0x6eec>
    da88:	b	d9cc <PyInit__decimal@@Base+0x6eb8>
    da8c:	adrp	x1, 2e000 <PyInit__decimal@@Base+0x274ec>
    da90:	add	x1, x1, #0x283
    da94:	mov	x0, x20
    da98:	bl	6830 <PyUnicode_CompareWithASCIIString@plt>
    da9c:	cbz	w0, daf8 <PyInit__decimal@@Base+0x6fe4>
    daa0:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
    daa4:	add	x1, x1, #0xff2
    daa8:	mov	x0, x20
    daac:	bl	6830 <PyUnicode_CompareWithASCIIString@plt>
    dab0:	cbz	w0, db1c <PyInit__decimal@@Base+0x7008>
    dab4:	adrp	x1, 2e000 <PyInit__decimal@@Base+0x274ec>
    dab8:	add	x1, x1, #0x27b
    dabc:	mov	x0, x20
    dac0:	bl	6830 <PyUnicode_CompareWithASCIIString@plt>
    dac4:	cbz	w0, db54 <PyInit__decimal@@Base+0x7040>
    dac8:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    dacc:	ldr	x8, [x8, #3928]
    dad0:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    dad4:	add	x1, x1, #0x639
    dad8:	b	d9f8 <PyInit__decimal@@Base+0x6ee4>
    dadc:	mov	x0, x20
    dae0:	bl	6690 <PyLong_AsSsize_t@plt>
    dae4:	cmn	x0, #0x1
    dae8:	b.eq	db40 <PyInit__decimal@@Base+0x702c>  // b.none
    daec:	mov	x21, x0
    daf0:	mov	w25, wzr
    daf4:	b	db7c <PyInit__decimal@@Base+0x7068>
    daf8:	add	x0, x29, #0x18
    dafc:	add	x20, x29, #0x18
    db00:	bl	6480 <strlen@plt>
    db04:	mov	w8, #0x6e49                	// #28233
    db08:	movk	w8, #0x66, lsl #16
    db0c:	mov	x21, xzr
    db10:	str	w8, [x20, x0]
    db14:	mov	w25, #0x1                   	// #1
    db18:	b	db7c <PyInit__decimal@@Base+0x7068>
    db1c:	add	x0, x29, #0x18
    db20:	add	x20, x29, #0x18
    db24:	bl	6480 <strlen@plt>
    db28:	mov	w8, #0x614e                	// #24910
    db2c:	movk	w8, #0x4e, lsl #16
    db30:	mov	x21, xzr
    db34:	mov	w25, wzr
    db38:	str	w8, [x20, x0]
    db3c:	b	db7c <PyInit__decimal@@Base+0x7068>
    db40:	bl	6780 <PyErr_Occurred@plt>
    db44:	cbnz	x0, da00 <PyInit__decimal@@Base+0x6eec>
    db48:	mov	w25, wzr
    db4c:	mov	x21, #0xffffffffffffffff    	// #-1
    db50:	b	db7c <PyInit__decimal@@Base+0x7068>
    db54:	add	x0, x29, #0x18
    db58:	add	x20, x29, #0x18
    db5c:	bl	6480 <strlen@plt>
    db60:	mov	w9, #0x4e73                	// #20083
    db64:	add	x8, x20, x0
    db68:	movk	w9, #0x4e61, lsl #16
    db6c:	mov	x21, xzr
    db70:	mov	w25, wzr
    db74:	str	w9, [x8]
    db78:	strb	wzr, [x8, #4]
    db7c:	adrp	x26, 3f000 <PyInit__decimal@@Base+0x384ec>
    db80:	ldr	x0, [x19, #32]
    db84:	ldr	x26, [x26, #3928]
    db88:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    db8c:	add	x2, x2, #0x693
    db90:	ldr	x1, [x26]
    db94:	bl	d924 <PyInit__decimal@@Base+0x6e10>
    db98:	mov	x20, x0
    db9c:	cbz	x0, dc60 <PyInit__decimal@@Base+0x714c>
    dba0:	mov	x0, x20
    dba4:	bl	6980 <PyTuple_Size@plt>
    dba8:	add	x23, x0, #0x19
    dbac:	mov	x22, x0
    dbb0:	mov	x0, x23
    dbb4:	bl	69e0 <PyMem_Malloc@plt>
    dbb8:	mov	x19, x0
    dbbc:	cbz	x0, dc68 <PyInit__decimal@@Base+0x7154>
    dbc0:	adrp	x2, 2c000 <PyInit__decimal@@Base+0x254ec>
    dbc4:	add	x2, x2, #0xef2
    dbc8:	add	x3, x29, #0x18
    dbcc:	mov	x0, x19
    dbd0:	mov	x1, x23
    dbd4:	bl	65b0 <snprintf@plt>
    dbd8:	tbnz	w0, #31, dca4 <PyInit__decimal@@Base+0x7190>
    dbdc:	sxtw	x8, w0
    dbe0:	cmp	x23, x8
    dbe4:	b.le	dca4 <PyInit__decimal@@Base+0x7190>
    dbe8:	add	x23, x19, x8
    dbec:	cbnz	x22, dc00 <PyInit__decimal@@Base+0x70ec>
    dbf0:	ldrb	w8, [x29, #25]
    dbf4:	cbnz	w8, dc00 <PyInit__decimal@@Base+0x70ec>
    dbf8:	mov	w8, #0x30                  	// #48
    dbfc:	strb	w8, [x23], #1
    dc00:	cmp	x22, #0x1
    dc04:	b.lt	dc70 <PyInit__decimal@@Base+0x715c>  // b.tstop
    dc08:	mov	x27, xzr
    dc0c:	b	dc1c <PyInit__decimal@@Base+0x7108>
    dc10:	add	x27, x27, #0x1
    dc14:	cmp	x22, x27
    dc18:	b.eq	dc70 <PyInit__decimal@@Base+0x715c>  // b.none
    dc1c:	add	x8, x20, x27, lsl #3
    dc20:	ldr	x0, [x8, #24]
    dc24:	ldr	x8, [x0, #8]
    dc28:	ldrb	w8, [x8, #171]
    dc2c:	tbz	w8, #0, dccc <PyInit__decimal@@Base+0x71b8>
    dc30:	bl	67c0 <PyLong_AsLong@plt>
    dc34:	mov	x24, x0
    dc38:	cmn	x0, #0x1
    dc3c:	b.ne	dc48 <PyInit__decimal@@Base+0x7134>  // b.any
    dc40:	bl	6780 <PyErr_Occurred@plt>
    dc44:	cbnz	x0, da08 <PyInit__decimal@@Base+0x6ef4>
    dc48:	cmp	x24, #0xa
    dc4c:	b.cs	dccc <PyInit__decimal@@Base+0x71b8>  // b.hs, b.nlast
    dc50:	cbnz	w25, dc10 <PyInit__decimal@@Base+0x70fc>
    dc54:	add	w8, w24, #0x30
    dc58:	strb	w8, [x23], #1
    dc5c:	b	dc10 <PyInit__decimal@@Base+0x70fc>
    dc60:	mov	x19, xzr
    dc64:	b	da08 <PyInit__decimal@@Base+0x6ef4>
    dc68:	bl	6580 <PyErr_NoMemory@plt>
    dc6c:	b	da08 <PyInit__decimal@@Base+0x6ef4>
    dc70:	strb	wzr, [x23]
    dc74:	ldrb	w8, [x29, #25]
    dc78:	cbnz	w8, dcc0 <PyInit__decimal@@Base+0x71ac>
    dc7c:	mov	w8, #0x45                  	// #69
    dc80:	strb	w8, [x23], #1
    dc84:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    dc88:	add	x2, x2, #0x6df
    dc8c:	mov	w1, #0x15                  	// #21
    dc90:	mov	x0, x23
    dc94:	mov	x3, x21
    dc98:	bl	65b0 <snprintf@plt>
    dc9c:	cmp	w0, #0x15
    dca0:	b.cc	dcc0 <PyInit__decimal@@Base+0x71ac>  // b.lo, b.ul, b.last
    dca4:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    dca8:	ldr	x8, [x8, #3920]
    dcac:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    dcb0:	add	x1, x1, #0x6b9
    dcb4:	ldr	x0, [x8]
    dcb8:	bl	65f0 <PyErr_SetString@plt>
    dcbc:	b	da08 <PyInit__decimal@@Base+0x6ef4>
    dcc0:	mov	x0, x20
    dcc4:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
    dcc8:	b	da20 <PyInit__decimal@@Base+0x6f0c>
    dccc:	ldr	x0, [x26]
    dcd0:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    dcd4:	add	x1, x1, #0x693
    dcd8:	b	dcb8 <PyInit__decimal@@Base+0x71a4>
    dcdc:	stp	x29, x30, [sp, #-32]!
    dce0:	str	x19, [sp, #16]
    dce4:	mov	x29, sp
    dce8:	mov	x19, x0
    dcec:	ldr	x0, [x0, #64]
    dcf0:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
    dcf4:	ldr	x0, [x19, #72]
    dcf8:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
    dcfc:	ldr	x8, [x19, #8]
    dd00:	mov	x0, x19
    dd04:	ldr	x8, [x8, #320]
    dd08:	blr	x8
    dd0c:	ldr	x19, [sp, #16]
    dd10:	ldp	x29, x30, [sp], #32
    dd14:	ret
    dd18:	sub	sp, sp, #0x130
    dd1c:	stp	x29, x30, [sp, #256]
    dd20:	str	x28, [sp, #272]
    dd24:	stp	x20, x19, [sp, #288]
    dd28:	add	x29, sp, #0x100
    dd2c:	ldr	w2, [x0, #44]
    dd30:	adrp	x3, 42000 <PyInit__decimal@@Base+0x3b4ec>
    dd34:	mov	x19, x0
    dd38:	add	x3, x3, #0x2b8
    dd3c:	sub	x0, x29, #0x7c
    dd40:	mov	w1, #0x79                  	// #121
    dd44:	bl	16f94 <PyInit__decimal@@Base+0x10480>
    dd48:	cmp	w0, #0x79
    dd4c:	b.cs	dd74 <PyInit__decimal@@Base+0x7260>  // b.hs, b.nlast
    dd50:	ldr	w2, [x19, #40]
    dd54:	adrp	x3, 42000 <PyInit__decimal@@Base+0x3b4ec>
    dd58:	add	x3, x3, #0x2b8
    dd5c:	add	x0, sp, #0x8
    dd60:	mov	w1, #0x79                  	// #121
    dd64:	add	x20, sp, #0x8
    dd68:	bl	16f94 <PyInit__decimal@@Base+0x10480>
    dd6c:	cmp	w0, #0x79
    dd70:	b.cc	dd88 <PyInit__decimal@@Base+0x7274>  // b.lo, b.ul, b.last
    dd74:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
    dd78:	add	x0, x0, #0x6f3
    dd7c:	bl	8a34 <PyInit__decimal@@Base+0x1f20>
    dd80:	mov	x0, xzr
    dd84:	b	ddbc <PyInit__decimal@@Base+0x72a8>
    dd88:	ldp	w8, w6, [x19, #52]
    dd8c:	adrp	x9, 42000 <PyInit__decimal@@Base+0x3b4ec>
    dd90:	sxtw	x8, w8
    dd94:	add	x9, x9, #0x4e0
    dd98:	ldp	x4, x3, [x19, #24]
    dd9c:	ldr	x1, [x19, #16]
    dda0:	ldr	x2, [x9, x8, lsl #3]
    dda4:	ldr	w5, [x19, #80]
    dda8:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
    ddac:	add	x0, x0, #0x712
    ddb0:	sub	x7, x29, #0x7c
    ddb4:	str	x20, [sp]
    ddb8:	bl	6430 <PyUnicode_FromFormat@plt>
    ddbc:	ldp	x20, x19, [sp, #288]
    ddc0:	ldr	x28, [sp, #272]
    ddc4:	ldp	x29, x30, [sp, #256]
    ddc8:	add	sp, sp, #0x130
    ddcc:	ret
    ddd0:	stp	x29, x30, [sp, #-32]!
    ddd4:	stp	x20, x19, [sp, #16]
    ddd8:	mov	x29, sp
    dddc:	ldr	x8, [x1, #8]
    dde0:	mov	x19, x1
    dde4:	mov	x20, x0
    dde8:	ldrb	w8, [x8, #171]
    ddec:	tbz	w8, #4, de18 <PyInit__decimal@@Base+0x7304>
    ddf0:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    ddf4:	add	x1, x1, #0x897
    ddf8:	mov	x0, x19
    ddfc:	bl	6830 <PyUnicode_CompareWithASCIIString@plt>
    de00:	cbz	w0, de2c <PyInit__decimal@@Base+0x7318>
    de04:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    de08:	add	x1, x1, #0x88b
    de0c:	mov	x0, x19
    de10:	bl	6830 <PyUnicode_CompareWithASCIIString@plt>
    de14:	cbz	w0, de34 <PyInit__decimal@@Base+0x7320>
    de18:	mov	x0, x20
    de1c:	mov	x1, x19
    de20:	bl	6750 <PyObject_GenericGetAttr@plt>
    de24:	mov	x19, x0
    de28:	b	de40 <PyInit__decimal@@Base+0x732c>
    de2c:	ldr	x19, [x20, #64]
    de30:	b	de38 <PyInit__decimal@@Base+0x7324>
    de34:	ldr	x19, [x20, #72]
    de38:	mov	x0, x19
    de3c:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
    de40:	mov	x0, x19
    de44:	ldp	x20, x19, [sp, #16]
    de48:	ldp	x29, x30, [sp], #32
    de4c:	ret
    de50:	stp	x29, x30, [sp, #-48]!
    de54:	str	x21, [sp, #16]
    de58:	stp	x20, x19, [sp, #32]
    de5c:	mov	x29, sp
    de60:	cbz	x2, deb8 <PyInit__decimal@@Base+0x73a4>
    de64:	ldr	x8, [x1, #8]
    de68:	mov	x19, x2
    de6c:	mov	x21, x1
    de70:	mov	x20, x0
    de74:	ldrb	w8, [x8, #171]
    de78:	tbz	w8, #4, dea4 <PyInit__decimal@@Base+0x7390>
    de7c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    de80:	add	x1, x1, #0x897
    de84:	mov	x0, x21
    de88:	bl	6830 <PyUnicode_CompareWithASCIIString@plt>
    de8c:	cbz	w0, ded8 <PyInit__decimal@@Base+0x73c4>
    de90:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    de94:	add	x1, x1, #0x88b
    de98:	mov	x0, x21
    de9c:	bl	6830 <PyUnicode_CompareWithASCIIString@plt>
    dea0:	cbz	w0, dee8 <PyInit__decimal@@Base+0x73d4>
    dea4:	mov	x0, x20
    dea8:	mov	x1, x21
    deac:	mov	x2, x19
    deb0:	bl	6950 <PyObject_GenericSetAttr@plt>
    deb4:	b	def4 <PyInit__decimal@@Base+0x73e0>
    deb8:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    debc:	ldr	x8, [x8, #4048]
    dec0:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    dec4:	add	x1, x1, #0x770
    dec8:	ldr	x0, [x8]
    decc:	bl	65f0 <PyErr_SetString@plt>
    ded0:	mov	w0, #0xffffffff            	// #-1
    ded4:	b	def4 <PyInit__decimal@@Base+0x73e0>
    ded8:	mov	x0, x20
    dedc:	mov	x1, x19
    dee0:	bl	e190 <PyInit__decimal@@Base+0x767c>
    dee4:	b	def4 <PyInit__decimal@@Base+0x73e0>
    dee8:	mov	x0, x20
    deec:	mov	x1, x19
    def0:	bl	e204 <PyInit__decimal@@Base+0x76f0>
    def4:	ldp	x20, x19, [sp, #32]
    def8:	ldr	x21, [sp, #16]
    defc:	ldp	x29, x30, [sp], #48
    df00:	ret
    df04:	sub	sp, sp, #0x80
    df08:	stp	x29, x30, [sp, #96]
    df0c:	stp	x20, x19, [sp, #112]
    df10:	add	x29, sp, #0x60
    df14:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    df18:	ldr	x20, [x20, #4008]
    df1c:	mov	x8, x2
    df20:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    df24:	adrp	x3, 42000 <PyInit__decimal@@Base+0x3b4ec>
    df28:	mov	x19, x0
    df2c:	add	x9, sp, #0x20
    df30:	add	x10, sp, #0x28
    df34:	add	x11, sp, #0x30
    df38:	sub	x12, x29, #0x28
    df3c:	add	x2, x2, #0x9f3
    df40:	add	x3, x3, #0x350
    df44:	sub	x4, x29, #0x8
    df48:	sub	x5, x29, #0x10
    df4c:	sub	x6, x29, #0x18
    df50:	sub	x7, x29, #0x20
    df54:	mov	x0, x1
    df58:	mov	x1, x8
    df5c:	stp	x20, x20, [x29, #-16]
    df60:	stp	x20, x20, [x29, #-32]
    df64:	stur	x20, [x29, #-40]
    df68:	stp	x20, x20, [sp, #40]
    df6c:	stp	x9, x20, [sp, #24]
    df70:	stp	x11, x10, [sp, #8]
    df74:	str	x12, [sp]
    df78:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    df7c:	cbz	w0, e04c <PyInit__decimal@@Base+0x7538>
    df80:	ldur	x1, [x29, #-8]
    df84:	cmp	x1, x20
    df88:	b.eq	df9c <PyInit__decimal@@Base+0x7488>  // b.none
    df8c:	mov	x0, x19
    df90:	mov	x2, xzr
    df94:	bl	117e4 <PyInit__decimal@@Base+0xacd0>
    df98:	tbnz	w0, #31, e04c <PyInit__decimal@@Base+0x7538>
    df9c:	ldur	x1, [x29, #-16]
    dfa0:	cmp	x1, x20
    dfa4:	b.eq	dfb8 <PyInit__decimal@@Base+0x74a4>  // b.none
    dfa8:	mov	x0, x19
    dfac:	mov	x2, xzr
    dfb0:	bl	11980 <PyInit__decimal@@Base+0xae6c>
    dfb4:	tbnz	w0, #31, e04c <PyInit__decimal@@Base+0x7538>
    dfb8:	ldur	x1, [x29, #-24]
    dfbc:	cmp	x1, x20
    dfc0:	b.eq	dfd4 <PyInit__decimal@@Base+0x74c0>  // b.none
    dfc4:	mov	x0, x19
    dfc8:	mov	x2, xzr
    dfcc:	bl	118e4 <PyInit__decimal@@Base+0xadd0>
    dfd0:	tbnz	w0, #31, e04c <PyInit__decimal@@Base+0x7538>
    dfd4:	ldur	x1, [x29, #-32]
    dfd8:	cmp	x1, x20
    dfdc:	b.eq	dff0 <PyInit__decimal@@Base+0x74dc>  // b.none
    dfe0:	mov	x0, x19
    dfe4:	mov	x2, xzr
    dfe8:	bl	11864 <PyInit__decimal@@Base+0xad50>
    dfec:	tbnz	w0, #31, e04c <PyInit__decimal@@Base+0x7538>
    dff0:	ldur	x1, [x29, #-40]
    dff4:	cmp	x1, x20
    dff8:	b.eq	e00c <PyInit__decimal@@Base+0x74f8>  // b.none
    dffc:	mov	x0, x19
    e000:	mov	x2, xzr
    e004:	bl	119ec <PyInit__decimal@@Base+0xaed8>
    e008:	tbnz	w0, #31, e04c <PyInit__decimal@@Base+0x7538>
    e00c:	ldr	x1, [sp, #48]
    e010:	cmp	x1, x20
    e014:	b.eq	e028 <PyInit__decimal@@Base+0x7514>  // b.none
    e018:	mov	x0, x19
    e01c:	mov	x2, xzr
    e020:	bl	11a6c <PyInit__decimal@@Base+0xaf58>
    e024:	tbnz	w0, #31, e04c <PyInit__decimal@@Base+0x7538>
    e028:	ldr	x1, [sp, #32]
    e02c:	cmp	x1, x20
    e030:	b.eq	e06c <PyInit__decimal@@Base+0x7558>  // b.none
    e034:	ldr	x8, [x1, #8]
    e038:	ldrb	w8, [x8, #171]
    e03c:	tbnz	w8, #1, e060 <PyInit__decimal@@Base+0x754c>
    e040:	mov	x0, x19
    e044:	bl	e190 <PyInit__decimal@@Base+0x767c>
    e048:	b	e068 <PyInit__decimal@@Base+0x7554>
    e04c:	mov	w0, #0xffffffff            	// #-1
    e050:	ldp	x20, x19, [sp, #112]
    e054:	ldp	x29, x30, [sp, #96]
    e058:	add	sp, sp, #0x80
    e05c:	ret
    e060:	mov	x0, x19
    e064:	bl	11b00 <PyInit__decimal@@Base+0xafec>
    e068:	tbnz	w0, #31, e050 <PyInit__decimal@@Base+0x753c>
    e06c:	ldr	x1, [sp, #40]
    e070:	cmp	x1, x20
    e074:	b.eq	e09c <PyInit__decimal@@Base+0x7588>  // b.none
    e078:	ldr	x8, [x1, #8]
    e07c:	ldrb	w8, [x8, #171]
    e080:	tbnz	w8, #1, e090 <PyInit__decimal@@Base+0x757c>
    e084:	mov	x0, x19
    e088:	bl	e204 <PyInit__decimal@@Base+0x76f0>
    e08c:	b	e098 <PyInit__decimal@@Base+0x7584>
    e090:	mov	x0, x19
    e094:	bl	11b58 <PyInit__decimal@@Base+0xb044>
    e098:	tbnz	w0, #31, e050 <PyInit__decimal@@Base+0x753c>
    e09c:	mov	w0, wzr
    e0a0:	b	e050 <PyInit__decimal@@Base+0x753c>
    e0a4:	stp	x29, x30, [sp, #-32]!
    e0a8:	stp	x20, x19, [sp, #16]
    e0ac:	mov	x29, sp
    e0b0:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    e0b4:	add	x8, x8, #0x4b8
    e0b8:	cmp	x0, x8
    e0bc:	b.eq	e0d8 <PyInit__decimal@@Base+0x75c4>  // b.none
    e0c0:	ldr	x8, [x0, #304]
    e0c4:	mov	x1, xzr
    e0c8:	blr	x8
    e0cc:	mov	x19, x0
    e0d0:	cbnz	x0, e0ec <PyInit__decimal@@Base+0x75d8>
    e0d4:	b	e180 <PyInit__decimal@@Base+0x766c>
    e0d8:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    e0dc:	add	x0, x0, #0x4b8
    e0e0:	bl	68f0 <_PyObject_New@plt>
    e0e4:	mov	x19, x0
    e0e8:	cbz	x0, e180 <PyInit__decimal@@Base+0x766c>
    e0ec:	adrp	x20, 42000 <PyInit__decimal@@Base+0x3b4ec>
    e0f0:	ldr	x0, [x20, #1472]
    e0f4:	mov	x1, xzr
    e0f8:	bl	67e0 <PyObject_CallObject@plt>
    e0fc:	str	x0, [x19, #64]
    e100:	cbz	x0, e134 <PyInit__decimal@@Base+0x7620>
    e104:	ldr	x0, [x20, #1472]
    e108:	mov	x1, xzr
    e10c:	bl	67e0 <PyObject_CallObject@plt>
    e110:	str	x0, [x19, #72]
    e114:	cbz	x0, e138 <PyInit__decimal@@Base+0x7624>
    e118:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
    e11c:	ldr	x9, [x8, #1496]
    e120:	add	x8, x19, #0x10
    e124:	cbz	x9, e148 <PyInit__decimal@@Base+0x7634>
    e128:	ldp	q1, q0, [x9, #32]
    e12c:	ldr	q2, [x9, #16]
    e130:	b	e158 <PyInit__decimal@@Base+0x7644>
    e134:	str	xzr, [x19, #72]
    e138:	mov	x0, x19
    e13c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e140:	mov	x19, xzr
    e144:	b	e180 <PyInit__decimal@@Base+0x766c>
    e148:	adrp	x9, 2c000 <PyInit__decimal@@Base+0x254ec>
    e14c:	add	x9, x9, #0xb98
    e150:	ldp	q1, q0, [x9, #16]
    e154:	ldr	q2, [x9]
    e158:	stp	q1, q0, [x8, #16]
    e15c:	str	q2, [x8], #28
    e160:	ldr	x9, [x19, #64]
    e164:	add	x10, x19, #0x28
    e168:	str	x10, [x9, #16]
    e16c:	ldr	x9, [x19, #72]
    e170:	mov	w10, #0x1                   	// #1
    e174:	str	x8, [x9, #16]
    e178:	str	w10, [x19, #80]
    e17c:	str	xzr, [x19, #88]
    e180:	mov	x0, x19
    e184:	ldp	x20, x19, [sp, #16]
    e188:	ldp	x29, x30, [sp], #32
    e18c:	ret
    e190:	stp	x29, x30, [sp, #-32]!
    e194:	str	x19, [sp, #16]
    e198:	mov	x29, sp
    e19c:	adrp	x9, 42000 <PyInit__decimal@@Base+0x3b4ec>
    e1a0:	ldr	x8, [x1, #8]
    e1a4:	ldr	x9, [x9, #1472]
    e1a8:	mov	x19, x0
    e1ac:	cmp	x8, x9
    e1b0:	b.eq	e1cc <PyInit__decimal@@Base+0x76b8>  // b.none
    e1b4:	mov	x0, x1
    e1b8:	bl	e278 <PyInit__decimal@@Base+0x7764>
    e1bc:	tst	w0, #0x18000
    e1c0:	b.ne	e1f4 <PyInit__decimal@@Base+0x76e0>  // b.any
    e1c4:	mov	w1, w0
    e1c8:	b	e1d4 <PyInit__decimal@@Base+0x76c0>
    e1cc:	ldr	x8, [x1, #16]
    e1d0:	ldr	w1, [x8]
    e1d4:	add	x0, x19, #0x10
    e1d8:	bl	13afc <PyInit__decimal@@Base+0xcfe8>
    e1dc:	cbz	w0, e1e8 <PyInit__decimal@@Base+0x76d4>
    e1e0:	mov	w0, wzr
    e1e4:	b	e1f8 <PyInit__decimal@@Base+0x76e4>
    e1e8:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
    e1ec:	add	x0, x0, #0x795
    e1f0:	bl	e350 <PyInit__decimal@@Base+0x783c>
    e1f4:	mov	w0, #0xffffffff            	// #-1
    e1f8:	ldr	x19, [sp, #16]
    e1fc:	ldp	x29, x30, [sp], #32
    e200:	ret
    e204:	stp	x29, x30, [sp, #-32]!
    e208:	str	x19, [sp, #16]
    e20c:	mov	x29, sp
    e210:	adrp	x9, 42000 <PyInit__decimal@@Base+0x3b4ec>
    e214:	ldr	x8, [x1, #8]
    e218:	ldr	x9, [x9, #1472]
    e21c:	mov	x19, x0
    e220:	cmp	x8, x9
    e224:	b.eq	e240 <PyInit__decimal@@Base+0x772c>  // b.none
    e228:	mov	x0, x1
    e22c:	bl	e278 <PyInit__decimal@@Base+0x7764>
    e230:	tst	w0, #0x18000
    e234:	b.ne	e268 <PyInit__decimal@@Base+0x7754>  // b.any
    e238:	mov	w1, w0
    e23c:	b	e248 <PyInit__decimal@@Base+0x7734>
    e240:	ldr	x8, [x1, #16]
    e244:	ldr	w1, [x8]
    e248:	add	x0, x19, #0x10
    e24c:	bl	13b18 <PyInit__decimal@@Base+0xd004>
    e250:	cbz	w0, e25c <PyInit__decimal@@Base+0x7748>
    e254:	mov	w0, wzr
    e258:	b	e26c <PyInit__decimal@@Base+0x7758>
    e25c:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
    e260:	add	x0, x0, #0x7f0
    e264:	bl	e350 <PyInit__decimal@@Base+0x783c>
    e268:	mov	w0, #0xffffffff            	// #-1
    e26c:	ldr	x19, [sp, #16]
    e270:	ldp	x29, x30, [sp], #32
    e274:	ret
    e278:	stp	x29, x30, [sp, #-48]!
    e27c:	str	x21, [sp, #16]
    e280:	stp	x20, x19, [sp, #32]
    e284:	mov	x29, sp
    e288:	ldr	x8, [x0, #8]
    e28c:	ldrb	w8, [x8, #171]
    e290:	tbnz	w8, #5, e2a8 <PyInit__decimal@@Base+0x7794>
    e294:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    e298:	ldr	x8, [x8, #3936]
    e29c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    e2a0:	add	x1, x1, #0x7bd
    e2a4:	b	e330 <PyInit__decimal@@Base+0x781c>
    e2a8:	mov	x20, x0
    e2ac:	bl	6490 <PyDict_Size@plt>
    e2b0:	cmp	x0, #0x9
    e2b4:	b.ne	e320 <PyInit__decimal@@Base+0x780c>  // b.any
    e2b8:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    e2bc:	ldr	x8, [x8, #2560]
    e2c0:	cbz	x8, e308 <PyInit__decimal@@Base+0x77f4>
    e2c4:	adrp	x21, 40000 <PyInit__decimal@@Base+0x394ec>
    e2c8:	mov	w19, wzr
    e2cc:	add	x21, x21, #0xa20
    e2d0:	b	e2dc <PyInit__decimal@@Base+0x77c8>
    e2d4:	ldr	x8, [x21], #32
    e2d8:	cbz	x8, e33c <PyInit__decimal@@Base+0x7828>
    e2dc:	ldur	x1, [x21, #-8]
    e2e0:	mov	x0, x20
    e2e4:	bl	6a20 <PyDict_GetItemWithError@plt>
    e2e8:	cbz	x0, e310 <PyInit__decimal@@Base+0x77fc>
    e2ec:	bl	6870 <PyObject_IsTrue@plt>
    e2f0:	tbnz	w0, #31, e318 <PyInit__decimal@@Base+0x7804>
    e2f4:	cmp	w0, #0x1
    e2f8:	b.ne	e2d4 <PyInit__decimal@@Base+0x77c0>  // b.any
    e2fc:	ldur	w8, [x21, #-16]
    e300:	orr	w19, w8, w19
    e304:	b	e2d4 <PyInit__decimal@@Base+0x77c0>
    e308:	mov	w19, wzr
    e30c:	b	e33c <PyInit__decimal@@Base+0x7828>
    e310:	bl	6780 <PyErr_Occurred@plt>
    e314:	cbz	x0, e320 <PyInit__decimal@@Base+0x780c>
    e318:	mov	w19, #0x10000               	// #65536
    e31c:	b	e33c <PyInit__decimal@@Base+0x7828>
    e320:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    e324:	ldr	x8, [x8, #3968]
    e328:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    e32c:	add	x1, x1, #0x7dc
    e330:	ldr	x0, [x8]
    e334:	bl	65f0 <PyErr_SetString@plt>
    e338:	mov	w19, #0x8000                	// #32768
    e33c:	mov	w0, w19
    e340:	ldp	x20, x19, [sp, #32]
    e344:	ldr	x21, [sp, #16]
    e348:	ldp	x29, x30, [sp], #48
    e34c:	ret
    e350:	stp	x29, x30, [sp, #-16]!
    e354:	mov	x29, sp
    e358:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    e35c:	ldr	x8, [x8, #3920]
    e360:	mov	x1, x0
    e364:	ldr	x8, [x8]
    e368:	mov	x0, x8
    e36c:	bl	65f0 <PyErr_SetString@plt>
    e370:	ldp	x29, x30, [sp], #16
    e374:	ret
    e378:	sub	sp, sp, #0x40
    e37c:	stp	x29, x30, [sp, #16]
    e380:	str	x21, [sp, #32]
    e384:	stp	x20, x19, [sp, #48]
    e388:	add	x29, sp, #0x10
    e38c:	mov	x19, x0
    e390:	mov	x2, x1
    e394:	add	x1, x29, #0x18
    e398:	mov	w0, #0x1                   	// #1
    e39c:	mov	x3, x19
    e3a0:	stur	wzr, [x29, #-4]
    e3a4:	bl	858c <PyInit__decimal@@Base+0x1a78>
    e3a8:	cbz	w0, e3f8 <PyInit__decimal@@Base+0x78e4>
    e3ac:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    e3b0:	add	x0, x0, #0x318
    e3b4:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    e3b8:	mov	x20, x0
    e3bc:	cbz	x0, e400 <PyInit__decimal@@Base+0x78ec>
    e3c0:	ldr	x21, [x29, #24]
    e3c4:	add	x0, x20, #0x18
    e3c8:	add	x2, x19, #0x10
    e3cc:	sub	x3, x29, #0x4
    e3d0:	add	x1, x21, #0x18
    e3d4:	bl	1bf28 <PyInit__decimal@@Base+0x15414>
    e3d8:	mov	x0, x21
    e3dc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e3e0:	ldur	w1, [x29, #-4]
    e3e4:	mov	x0, x19
    e3e8:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    e3ec:	cbz	w0, e408 <PyInit__decimal@@Base+0x78f4>
    e3f0:	mov	x0, x20
    e3f4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e3f8:	mov	x20, xzr
    e3fc:	b	e408 <PyInit__decimal@@Base+0x78f4>
    e400:	ldr	x0, [x29, #24]
    e404:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e408:	mov	x0, x20
    e40c:	ldp	x20, x19, [sp, #48]
    e410:	ldr	x21, [sp, #32]
    e414:	ldp	x29, x30, [sp, #16]
    e418:	add	sp, sp, #0x40
    e41c:	ret
    e420:	sub	sp, sp, #0x40
    e424:	stp	x29, x30, [sp, #16]
    e428:	str	x21, [sp, #32]
    e42c:	stp	x20, x19, [sp, #48]
    e430:	add	x29, sp, #0x10
    e434:	mov	x19, x0
    e438:	mov	x2, x1
    e43c:	add	x1, x29, #0x18
    e440:	mov	w0, #0x1                   	// #1
    e444:	mov	x3, x19
    e448:	stur	wzr, [x29, #-4]
    e44c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    e450:	cbz	w0, e4a0 <PyInit__decimal@@Base+0x798c>
    e454:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    e458:	add	x0, x0, #0x318
    e45c:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    e460:	mov	x20, x0
    e464:	cbz	x0, e4a8 <PyInit__decimal@@Base+0x7994>
    e468:	ldr	x21, [x29, #24]
    e46c:	add	x0, x20, #0x18
    e470:	add	x2, x19, #0x10
    e474:	sub	x3, x29, #0x4
    e478:	add	x1, x21, #0x18
    e47c:	bl	1da34 <PyInit__decimal@@Base+0x16f20>
    e480:	mov	x0, x21
    e484:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e488:	ldur	w1, [x29, #-4]
    e48c:	mov	x0, x19
    e490:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    e494:	cbz	w0, e4b0 <PyInit__decimal@@Base+0x799c>
    e498:	mov	x0, x20
    e49c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e4a0:	mov	x20, xzr
    e4a4:	b	e4b0 <PyInit__decimal@@Base+0x799c>
    e4a8:	ldr	x0, [x29, #24]
    e4ac:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e4b0:	mov	x0, x20
    e4b4:	ldp	x20, x19, [sp, #48]
    e4b8:	ldr	x21, [sp, #32]
    e4bc:	ldp	x29, x30, [sp, #16]
    e4c0:	add	sp, sp, #0x40
    e4c4:	ret
    e4c8:	sub	sp, sp, #0x40
    e4cc:	stp	x29, x30, [sp, #16]
    e4d0:	str	x21, [sp, #32]
    e4d4:	stp	x20, x19, [sp, #48]
    e4d8:	add	x29, sp, #0x10
    e4dc:	mov	x19, x0
    e4e0:	mov	x2, x1
    e4e4:	add	x1, x29, #0x18
    e4e8:	mov	w0, #0x1                   	// #1
    e4ec:	mov	x3, x19
    e4f0:	stur	wzr, [x29, #-4]
    e4f4:	bl	858c <PyInit__decimal@@Base+0x1a78>
    e4f8:	cbz	w0, e548 <PyInit__decimal@@Base+0x7a34>
    e4fc:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    e500:	add	x0, x0, #0x318
    e504:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    e508:	mov	x20, x0
    e50c:	cbz	x0, e550 <PyInit__decimal@@Base+0x7a3c>
    e510:	ldr	x21, [x29, #24]
    e514:	add	x0, x20, #0x18
    e518:	add	x2, x19, #0x10
    e51c:	sub	x3, x29, #0x4
    e520:	add	x1, x21, #0x18
    e524:	bl	1e92c <PyInit__decimal@@Base+0x17e18>
    e528:	mov	x0, x21
    e52c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e530:	ldur	w1, [x29, #-4]
    e534:	mov	x0, x19
    e538:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    e53c:	cbz	w0, e558 <PyInit__decimal@@Base+0x7a44>
    e540:	mov	x0, x20
    e544:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e548:	mov	x20, xzr
    e54c:	b	e558 <PyInit__decimal@@Base+0x7a44>
    e550:	ldr	x0, [x29, #24]
    e554:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e558:	mov	x0, x20
    e55c:	ldp	x20, x19, [sp, #48]
    e560:	ldr	x21, [sp, #32]
    e564:	ldp	x29, x30, [sp, #16]
    e568:	add	sp, sp, #0x40
    e56c:	ret
    e570:	sub	sp, sp, #0x40
    e574:	stp	x29, x30, [sp, #16]
    e578:	str	x21, [sp, #32]
    e57c:	stp	x20, x19, [sp, #48]
    e580:	add	x29, sp, #0x10
    e584:	mov	x19, x0
    e588:	mov	x2, x1
    e58c:	add	x1, x29, #0x18
    e590:	mov	w0, #0x1                   	// #1
    e594:	mov	x3, x19
    e598:	stur	wzr, [x29, #-4]
    e59c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    e5a0:	cbz	w0, e5f0 <PyInit__decimal@@Base+0x7adc>
    e5a4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    e5a8:	add	x0, x0, #0x318
    e5ac:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    e5b0:	mov	x20, x0
    e5b4:	cbz	x0, e5f8 <PyInit__decimal@@Base+0x7ae4>
    e5b8:	ldr	x21, [x29, #24]
    e5bc:	add	x0, x20, #0x18
    e5c0:	add	x2, x19, #0x10
    e5c4:	sub	x3, x29, #0x4
    e5c8:	add	x1, x21, #0x18
    e5cc:	bl	1f1a4 <PyInit__decimal@@Base+0x18690>
    e5d0:	mov	x0, x21
    e5d4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e5d8:	ldur	w1, [x29, #-4]
    e5dc:	mov	x0, x19
    e5e0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    e5e4:	cbz	w0, e600 <PyInit__decimal@@Base+0x7aec>
    e5e8:	mov	x0, x20
    e5ec:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e5f0:	mov	x20, xzr
    e5f4:	b	e600 <PyInit__decimal@@Base+0x7aec>
    e5f8:	ldr	x0, [x29, #24]
    e5fc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e600:	mov	x0, x20
    e604:	ldp	x20, x19, [sp, #48]
    e608:	ldr	x21, [sp, #32]
    e60c:	ldp	x29, x30, [sp, #16]
    e610:	add	sp, sp, #0x40
    e614:	ret
    e618:	sub	sp, sp, #0x40
    e61c:	stp	x29, x30, [sp, #16]
    e620:	str	x21, [sp, #32]
    e624:	stp	x20, x19, [sp, #48]
    e628:	add	x29, sp, #0x10
    e62c:	mov	x19, x0
    e630:	mov	x2, x1
    e634:	add	x1, x29, #0x18
    e638:	mov	w0, #0x1                   	// #1
    e63c:	mov	x3, x19
    e640:	stur	wzr, [x29, #-4]
    e644:	bl	858c <PyInit__decimal@@Base+0x1a78>
    e648:	cbz	w0, e698 <PyInit__decimal@@Base+0x7b84>
    e64c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    e650:	add	x0, x0, #0x318
    e654:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    e658:	mov	x20, x0
    e65c:	cbz	x0, e6a0 <PyInit__decimal@@Base+0x7b8c>
    e660:	ldr	x21, [x29, #24]
    e664:	add	x0, x20, #0x18
    e668:	add	x2, x19, #0x10
    e66c:	sub	x3, x29, #0x4
    e670:	add	x1, x21, #0x18
    e674:	bl	1bfb0 <PyInit__decimal@@Base+0x1549c>
    e678:	mov	x0, x21
    e67c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e680:	ldur	w1, [x29, #-4]
    e684:	mov	x0, x19
    e688:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    e68c:	cbz	w0, e6a8 <PyInit__decimal@@Base+0x7b94>
    e690:	mov	x0, x20
    e694:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e698:	mov	x20, xzr
    e69c:	b	e6a8 <PyInit__decimal@@Base+0x7b94>
    e6a0:	ldr	x0, [x29, #24]
    e6a4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e6a8:	mov	x0, x20
    e6ac:	ldp	x20, x19, [sp, #48]
    e6b0:	ldr	x21, [sp, #32]
    e6b4:	ldp	x29, x30, [sp, #16]
    e6b8:	add	sp, sp, #0x40
    e6bc:	ret
    e6c0:	sub	sp, sp, #0x40
    e6c4:	stp	x29, x30, [sp, #16]
    e6c8:	str	x21, [sp, #32]
    e6cc:	stp	x20, x19, [sp, #48]
    e6d0:	add	x29, sp, #0x10
    e6d4:	mov	x19, x0
    e6d8:	mov	x2, x1
    e6dc:	add	x1, x29, #0x18
    e6e0:	mov	w0, #0x1                   	// #1
    e6e4:	mov	x3, x19
    e6e8:	stur	wzr, [x29, #-4]
    e6ec:	bl	858c <PyInit__decimal@@Base+0x1a78>
    e6f0:	cbz	w0, e740 <PyInit__decimal@@Base+0x7c2c>
    e6f4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    e6f8:	add	x0, x0, #0x318
    e6fc:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    e700:	mov	x20, x0
    e704:	cbz	x0, e748 <PyInit__decimal@@Base+0x7c34>
    e708:	ldr	x21, [x29, #24]
    e70c:	add	x0, x20, #0x18
    e710:	add	x2, x19, #0x10
    e714:	sub	x3, x29, #0x4
    e718:	add	x1, x21, #0x18
    e71c:	bl	1fbf4 <PyInit__decimal@@Base+0x190e0>
    e720:	mov	x0, x21
    e724:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e728:	ldur	w1, [x29, #-4]
    e72c:	mov	x0, x19
    e730:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    e734:	cbz	w0, e750 <PyInit__decimal@@Base+0x7c3c>
    e738:	mov	x0, x20
    e73c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e740:	mov	x20, xzr
    e744:	b	e750 <PyInit__decimal@@Base+0x7c3c>
    e748:	ldr	x0, [x29, #24]
    e74c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e750:	mov	x0, x20
    e754:	ldp	x20, x19, [sp, #48]
    e758:	ldr	x21, [sp, #32]
    e75c:	ldp	x29, x30, [sp, #16]
    e760:	add	sp, sp, #0x40
    e764:	ret
    e768:	sub	sp, sp, #0x40
    e76c:	stp	x29, x30, [sp, #16]
    e770:	str	x21, [sp, #32]
    e774:	stp	x20, x19, [sp, #48]
    e778:	add	x29, sp, #0x10
    e77c:	mov	x19, x0
    e780:	mov	x2, x1
    e784:	add	x1, x29, #0x18
    e788:	mov	w0, #0x1                   	// #1
    e78c:	mov	x3, x19
    e790:	stur	wzr, [x29, #-4]
    e794:	bl	858c <PyInit__decimal@@Base+0x1a78>
    e798:	cbz	w0, e7e8 <PyInit__decimal@@Base+0x7cd4>
    e79c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    e7a0:	add	x0, x0, #0x318
    e7a4:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    e7a8:	mov	x20, x0
    e7ac:	cbz	x0, e7f0 <PyInit__decimal@@Base+0x7cdc>
    e7b0:	ldr	x21, [x29, #24]
    e7b4:	add	x0, x20, #0x18
    e7b8:	add	x2, x19, #0x10
    e7bc:	sub	x3, x29, #0x4
    e7c0:	add	x1, x21, #0x18
    e7c4:	bl	1fd94 <PyInit__decimal@@Base+0x19280>
    e7c8:	mov	x0, x21
    e7cc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e7d0:	ldur	w1, [x29, #-4]
    e7d4:	mov	x0, x19
    e7d8:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    e7dc:	cbz	w0, e7f8 <PyInit__decimal@@Base+0x7ce4>
    e7e0:	mov	x0, x20
    e7e4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e7e8:	mov	x20, xzr
    e7ec:	b	e7f8 <PyInit__decimal@@Base+0x7ce4>
    e7f0:	ldr	x0, [x29, #24]
    e7f4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e7f8:	mov	x0, x20
    e7fc:	ldp	x20, x19, [sp, #48]
    e800:	ldr	x21, [sp, #32]
    e804:	ldp	x29, x30, [sp, #16]
    e808:	add	sp, sp, #0x40
    e80c:	ret
    e810:	sub	sp, sp, #0x40
    e814:	stp	x29, x30, [sp, #16]
    e818:	str	x21, [sp, #32]
    e81c:	stp	x20, x19, [sp, #48]
    e820:	add	x29, sp, #0x10
    e824:	mov	x19, x0
    e828:	mov	x2, x1
    e82c:	add	x1, x29, #0x18
    e830:	mov	w0, #0x1                   	// #1
    e834:	mov	x3, x19
    e838:	stur	wzr, [x29, #-4]
    e83c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    e840:	cbz	w0, e890 <PyInit__decimal@@Base+0x7d7c>
    e844:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    e848:	add	x0, x0, #0x318
    e84c:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    e850:	mov	x20, x0
    e854:	cbz	x0, e898 <PyInit__decimal@@Base+0x7d84>
    e858:	ldr	x21, [x29, #24]
    e85c:	add	x0, x20, #0x18
    e860:	add	x2, x19, #0x10
    e864:	sub	x3, x29, #0x4
    e868:	add	x1, x21, #0x18
    e86c:	bl	215d0 <PyInit__decimal@@Base+0x1aabc>
    e870:	mov	x0, x21
    e874:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e878:	ldur	w1, [x29, #-4]
    e87c:	mov	x0, x19
    e880:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    e884:	cbz	w0, e8a0 <PyInit__decimal@@Base+0x7d8c>
    e888:	mov	x0, x20
    e88c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e890:	mov	x20, xzr
    e894:	b	e8a0 <PyInit__decimal@@Base+0x7d8c>
    e898:	ldr	x0, [x29, #24]
    e89c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e8a0:	mov	x0, x20
    e8a4:	ldp	x20, x19, [sp, #48]
    e8a8:	ldr	x21, [sp, #32]
    e8ac:	ldp	x29, x30, [sp, #16]
    e8b0:	add	sp, sp, #0x40
    e8b4:	ret
    e8b8:	sub	sp, sp, #0x40
    e8bc:	stp	x29, x30, [sp, #16]
    e8c0:	str	x21, [sp, #32]
    e8c4:	stp	x20, x19, [sp, #48]
    e8c8:	add	x29, sp, #0x10
    e8cc:	mov	x19, x0
    e8d0:	mov	x2, x1
    e8d4:	add	x1, x29, #0x18
    e8d8:	mov	w0, #0x1                   	// #1
    e8dc:	mov	x3, x19
    e8e0:	stur	wzr, [x29, #-4]
    e8e4:	bl	858c <PyInit__decimal@@Base+0x1a78>
    e8e8:	cbz	w0, e938 <PyInit__decimal@@Base+0x7e24>
    e8ec:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    e8f0:	add	x0, x0, #0x318
    e8f4:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    e8f8:	mov	x20, x0
    e8fc:	cbz	x0, e940 <PyInit__decimal@@Base+0x7e2c>
    e900:	ldr	x21, [x29, #24]
    e904:	add	x0, x20, #0x18
    e908:	add	x2, x19, #0x10
    e90c:	sub	x3, x29, #0x4
    e910:	add	x1, x21, #0x18
    e914:	bl	1c064 <PyInit__decimal@@Base+0x15550>
    e918:	mov	x0, x21
    e91c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e920:	ldur	w1, [x29, #-4]
    e924:	mov	x0, x19
    e928:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    e92c:	cbz	w0, e948 <PyInit__decimal@@Base+0x7e34>
    e930:	mov	x0, x20
    e934:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e938:	mov	x20, xzr
    e93c:	b	e948 <PyInit__decimal@@Base+0x7e34>
    e940:	ldr	x0, [x29, #24]
    e944:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e948:	mov	x0, x20
    e94c:	ldp	x20, x19, [sp, #48]
    e950:	ldr	x21, [sp, #32]
    e954:	ldp	x29, x30, [sp, #16]
    e958:	add	sp, sp, #0x40
    e95c:	ret
    e960:	sub	sp, sp, #0x40
    e964:	stp	x29, x30, [sp, #16]
    e968:	str	x21, [sp, #32]
    e96c:	stp	x20, x19, [sp, #48]
    e970:	add	x29, sp, #0x10
    e974:	mov	x19, x0
    e978:	mov	x2, x1
    e97c:	add	x1, x29, #0x18
    e980:	mov	w0, #0x1                   	// #1
    e984:	mov	x3, x19
    e988:	stur	wzr, [x29, #-4]
    e98c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    e990:	cbz	w0, e9e0 <PyInit__decimal@@Base+0x7ecc>
    e994:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    e998:	add	x0, x0, #0x318
    e99c:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    e9a0:	mov	x20, x0
    e9a4:	cbz	x0, e9e8 <PyInit__decimal@@Base+0x7ed4>
    e9a8:	ldr	x21, [x29, #24]
    e9ac:	add	x0, x20, #0x18
    e9b0:	add	x2, x19, #0x10
    e9b4:	sub	x3, x29, #0x4
    e9b8:	add	x1, x21, #0x18
    e9bc:	bl	21058 <PyInit__decimal@@Base+0x1a544>
    e9c0:	mov	x0, x21
    e9c4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e9c8:	ldur	w1, [x29, #-4]
    e9cc:	mov	x0, x19
    e9d0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    e9d4:	cbz	w0, e9f0 <PyInit__decimal@@Base+0x7edc>
    e9d8:	mov	x0, x20
    e9dc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e9e0:	mov	x20, xzr
    e9e4:	b	e9f0 <PyInit__decimal@@Base+0x7edc>
    e9e8:	ldr	x0, [x29, #24]
    e9ec:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    e9f0:	mov	x0, x20
    e9f4:	ldp	x20, x19, [sp, #48]
    e9f8:	ldr	x21, [sp, #32]
    e9fc:	ldp	x29, x30, [sp, #16]
    ea00:	add	sp, sp, #0x40
    ea04:	ret
    ea08:	sub	sp, sp, #0x40
    ea0c:	stp	x29, x30, [sp, #16]
    ea10:	str	x21, [sp, #32]
    ea14:	stp	x20, x19, [sp, #48]
    ea18:	add	x29, sp, #0x10
    ea1c:	mov	x19, x0
    ea20:	mov	x2, x1
    ea24:	add	x1, x29, #0x18
    ea28:	mov	w0, #0x1                   	// #1
    ea2c:	mov	x3, x19
    ea30:	stur	wzr, [x29, #-4]
    ea34:	bl	858c <PyInit__decimal@@Base+0x1a78>
    ea38:	cbz	w0, ea88 <PyInit__decimal@@Base+0x7f74>
    ea3c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    ea40:	add	x0, x0, #0x318
    ea44:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    ea48:	mov	x20, x0
    ea4c:	cbz	x0, ea90 <PyInit__decimal@@Base+0x7f7c>
    ea50:	ldr	x21, [x29, #24]
    ea54:	add	x0, x20, #0x18
    ea58:	add	x2, x19, #0x10
    ea5c:	sub	x3, x29, #0x4
    ea60:	add	x1, x21, #0x18
    ea64:	bl	21bcc <PyInit__decimal@@Base+0x1b0b8>
    ea68:	mov	x0, x21
    ea6c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ea70:	ldur	w1, [x29, #-4]
    ea74:	mov	x0, x19
    ea78:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    ea7c:	cbz	w0, ea98 <PyInit__decimal@@Base+0x7f84>
    ea80:	mov	x0, x20
    ea84:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ea88:	mov	x20, xzr
    ea8c:	b	ea98 <PyInit__decimal@@Base+0x7f84>
    ea90:	ldr	x0, [x29, #24]
    ea94:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ea98:	mov	x0, x20
    ea9c:	ldp	x20, x19, [sp, #48]
    eaa0:	ldr	x21, [sp, #32]
    eaa4:	ldp	x29, x30, [sp, #16]
    eaa8:	add	sp, sp, #0x40
    eaac:	ret
    eab0:	sub	sp, sp, #0x40
    eab4:	stp	x29, x30, [sp, #16]
    eab8:	str	x21, [sp, #32]
    eabc:	stp	x20, x19, [sp, #48]
    eac0:	add	x29, sp, #0x10
    eac4:	mov	x19, x0
    eac8:	mov	x2, x1
    eacc:	add	x1, x29, #0x18
    ead0:	mov	w0, #0x1                   	// #1
    ead4:	mov	x3, x19
    ead8:	stur	wzr, [x29, #-4]
    eadc:	bl	858c <PyInit__decimal@@Base+0x1a78>
    eae0:	cbz	w0, eb30 <PyInit__decimal@@Base+0x801c>
    eae4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    eae8:	add	x0, x0, #0x318
    eaec:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    eaf0:	mov	x20, x0
    eaf4:	cbz	x0, eb38 <PyInit__decimal@@Base+0x8024>
    eaf8:	ldr	x21, [x29, #24]
    eafc:	add	x0, x20, #0x18
    eb00:	add	x2, x19, #0x10
    eb04:	sub	x3, x29, #0x4
    eb08:	add	x1, x21, #0x18
    eb0c:	bl	22370 <PyInit__decimal@@Base+0x1b85c>
    eb10:	mov	x0, x21
    eb14:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    eb18:	ldur	w1, [x29, #-4]
    eb1c:	mov	x0, x19
    eb20:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    eb24:	cbz	w0, eb40 <PyInit__decimal@@Base+0x802c>
    eb28:	mov	x0, x20
    eb2c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    eb30:	mov	x20, xzr
    eb34:	b	eb40 <PyInit__decimal@@Base+0x802c>
    eb38:	ldr	x0, [x29, #24]
    eb3c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    eb40:	mov	x0, x20
    eb44:	ldp	x20, x19, [sp, #48]
    eb48:	ldr	x21, [sp, #32]
    eb4c:	ldp	x29, x30, [sp, #16]
    eb50:	add	sp, sp, #0x40
    eb54:	ret
    eb58:	sub	sp, sp, #0x50
    eb5c:	stp	x29, x30, [sp, #48]
    eb60:	stp	x20, x19, [sp, #64]
    eb64:	add	x29, sp, #0x30
    eb68:	mov	x8, x1
    eb6c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    eb70:	mov	x19, x0
    eb74:	add	x1, x1, #0x9fa
    eb78:	sub	x2, x29, #0x8
    eb7c:	sub	x3, x29, #0x10
    eb80:	mov	x0, x8
    eb84:	str	wzr, [sp, #12]
    eb88:	bl	6880 <PyArg_ParseTuple@plt>
    eb8c:	cbz	w0, ec20 <PyInit__decimal@@Base+0x810c>
    eb90:	ldur	x2, [x29, #-8]
    eb94:	add	x1, sp, #0x18
    eb98:	mov	w0, #0x1                   	// #1
    eb9c:	mov	x3, x19
    eba0:	bl	858c <PyInit__decimal@@Base+0x1a78>
    eba4:	cbz	w0, ec20 <PyInit__decimal@@Base+0x810c>
    eba8:	ldur	x2, [x29, #-16]
    ebac:	add	x1, sp, #0x10
    ebb0:	mov	w0, #0x1                   	// #1
    ebb4:	mov	x3, x19
    ebb8:	bl	858c <PyInit__decimal@@Base+0x1a78>
    ebbc:	cbz	w0, ec18 <PyInit__decimal@@Base+0x8104>
    ebc0:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    ebc4:	add	x0, x0, #0x318
    ebc8:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    ebcc:	mov	x20, x0
    ebd0:	cbz	x0, ec38 <PyInit__decimal@@Base+0x8124>
    ebd4:	ldp	x9, x8, [sp, #16]
    ebd8:	add	x0, x20, #0x18
    ebdc:	add	x3, x19, #0x10
    ebe0:	add	x4, sp, #0xc
    ebe4:	add	x1, x8, #0x18
    ebe8:	add	x2, x9, #0x18
    ebec:	bl	1c118 <PyInit__decimal@@Base+0x15604>
    ebf0:	ldr	x0, [sp, #24]
    ebf4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ebf8:	ldr	x0, [sp, #16]
    ebfc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ec00:	ldr	w1, [sp, #12]
    ec04:	mov	x0, x19
    ec08:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    ec0c:	cbz	w0, ec24 <PyInit__decimal@@Base+0x8110>
    ec10:	mov	x0, x20
    ec14:	b	ec1c <PyInit__decimal@@Base+0x8108>
    ec18:	ldr	x0, [sp, #24]
    ec1c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ec20:	mov	x20, xzr
    ec24:	mov	x0, x20
    ec28:	ldp	x20, x19, [sp, #64]
    ec2c:	ldp	x29, x30, [sp, #48]
    ec30:	add	sp, sp, #0x50
    ec34:	ret
    ec38:	ldr	x0, [sp, #24]
    ec3c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ec40:	ldr	x0, [sp, #16]
    ec44:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ec48:	b	ec24 <PyInit__decimal@@Base+0x8110>
    ec4c:	sub	sp, sp, #0x50
    ec50:	stp	x29, x30, [sp, #48]
    ec54:	stp	x20, x19, [sp, #64]
    ec58:	add	x29, sp, #0x30
    ec5c:	mov	x8, x1
    ec60:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    ec64:	mov	x19, x0
    ec68:	add	x1, x1, #0x9fa
    ec6c:	sub	x2, x29, #0x8
    ec70:	sub	x3, x29, #0x10
    ec74:	mov	x0, x8
    ec78:	str	wzr, [sp, #12]
    ec7c:	bl	6880 <PyArg_ParseTuple@plt>
    ec80:	cbz	w0, ed14 <PyInit__decimal@@Base+0x8200>
    ec84:	ldur	x2, [x29, #-8]
    ec88:	add	x1, sp, #0x18
    ec8c:	mov	w0, #0x1                   	// #1
    ec90:	mov	x3, x19
    ec94:	bl	858c <PyInit__decimal@@Base+0x1a78>
    ec98:	cbz	w0, ed14 <PyInit__decimal@@Base+0x8200>
    ec9c:	ldur	x2, [x29, #-16]
    eca0:	add	x1, sp, #0x10
    eca4:	mov	w0, #0x1                   	// #1
    eca8:	mov	x3, x19
    ecac:	bl	858c <PyInit__decimal@@Base+0x1a78>
    ecb0:	cbz	w0, ed0c <PyInit__decimal@@Base+0x81f8>
    ecb4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    ecb8:	add	x0, x0, #0x318
    ecbc:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    ecc0:	mov	x20, x0
    ecc4:	cbz	x0, ed2c <PyInit__decimal@@Base+0x8218>
    ecc8:	ldp	x9, x8, [sp, #16]
    eccc:	add	x0, x20, #0x18
    ecd0:	add	x3, x19, #0x10
    ecd4:	add	x4, sp, #0xc
    ecd8:	add	x1, x8, #0x18
    ecdc:	add	x2, x9, #0x18
    ece0:	bl	19dbc <PyInit__decimal@@Base+0x132a8>
    ece4:	ldr	x0, [sp, #24]
    ece8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ecec:	ldr	x0, [sp, #16]
    ecf0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ecf4:	ldr	w1, [sp, #12]
    ecf8:	mov	x0, x19
    ecfc:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    ed00:	cbz	w0, ed18 <PyInit__decimal@@Base+0x8204>
    ed04:	mov	x0, x20
    ed08:	b	ed10 <PyInit__decimal@@Base+0x81fc>
    ed0c:	ldr	x0, [sp, #24]
    ed10:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ed14:	mov	x20, xzr
    ed18:	mov	x0, x20
    ed1c:	ldp	x20, x19, [sp, #64]
    ed20:	ldp	x29, x30, [sp, #48]
    ed24:	add	sp, sp, #0x50
    ed28:	ret
    ed2c:	ldr	x0, [sp, #24]
    ed30:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ed34:	ldr	x0, [sp, #16]
    ed38:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ed3c:	b	ed18 <PyInit__decimal@@Base+0x8204>
    ed40:	sub	sp, sp, #0x50
    ed44:	stp	x29, x30, [sp, #48]
    ed48:	stp	x20, x19, [sp, #64]
    ed4c:	add	x29, sp, #0x30
    ed50:	mov	x8, x1
    ed54:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    ed58:	mov	x19, x0
    ed5c:	add	x1, x1, #0x9fa
    ed60:	sub	x2, x29, #0x8
    ed64:	sub	x3, x29, #0x10
    ed68:	mov	x0, x8
    ed6c:	str	wzr, [sp, #12]
    ed70:	bl	6880 <PyArg_ParseTuple@plt>
    ed74:	cbz	w0, ee08 <PyInit__decimal@@Base+0x82f4>
    ed78:	ldur	x2, [x29, #-8]
    ed7c:	add	x1, sp, #0x18
    ed80:	mov	w0, #0x1                   	// #1
    ed84:	mov	x3, x19
    ed88:	bl	858c <PyInit__decimal@@Base+0x1a78>
    ed8c:	cbz	w0, ee08 <PyInit__decimal@@Base+0x82f4>
    ed90:	ldur	x2, [x29, #-16]
    ed94:	add	x1, sp, #0x10
    ed98:	mov	w0, #0x1                   	// #1
    ed9c:	mov	x3, x19
    eda0:	bl	858c <PyInit__decimal@@Base+0x1a78>
    eda4:	cbz	w0, ee00 <PyInit__decimal@@Base+0x82ec>
    eda8:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    edac:	add	x0, x0, #0x318
    edb0:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    edb4:	mov	x20, x0
    edb8:	cbz	x0, ee20 <PyInit__decimal@@Base+0x830c>
    edbc:	ldp	x9, x8, [sp, #16]
    edc0:	add	x0, x20, #0x18
    edc4:	add	x3, x19, #0x10
    edc8:	add	x4, sp, #0xc
    edcc:	add	x1, x8, #0x18
    edd0:	add	x2, x9, #0x18
    edd4:	bl	19e48 <PyInit__decimal@@Base+0x13334>
    edd8:	ldr	x0, [sp, #24]
    eddc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ede0:	ldr	x0, [sp, #16]
    ede4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ede8:	ldr	w1, [sp, #12]
    edec:	mov	x0, x19
    edf0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    edf4:	cbz	w0, ee0c <PyInit__decimal@@Base+0x82f8>
    edf8:	mov	x0, x20
    edfc:	b	ee04 <PyInit__decimal@@Base+0x82f0>
    ee00:	ldr	x0, [sp, #24]
    ee04:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ee08:	mov	x20, xzr
    ee0c:	mov	x0, x20
    ee10:	ldp	x20, x19, [sp, #64]
    ee14:	ldp	x29, x30, [sp, #48]
    ee18:	add	sp, sp, #0x50
    ee1c:	ret
    ee20:	ldr	x0, [sp, #24]
    ee24:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ee28:	ldr	x0, [sp, #16]
    ee2c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ee30:	b	ee0c <PyInit__decimal@@Base+0x82f8>
    ee34:	sub	sp, sp, #0x50
    ee38:	stp	x29, x30, [sp, #48]
    ee3c:	stp	x20, x19, [sp, #64]
    ee40:	add	x29, sp, #0x30
    ee44:	mov	x8, x1
    ee48:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    ee4c:	mov	x19, x0
    ee50:	add	x1, x1, #0x9fa
    ee54:	sub	x2, x29, #0x8
    ee58:	sub	x3, x29, #0x10
    ee5c:	mov	x0, x8
    ee60:	str	wzr, [sp, #12]
    ee64:	bl	6880 <PyArg_ParseTuple@plt>
    ee68:	cbz	w0, eefc <PyInit__decimal@@Base+0x83e8>
    ee6c:	ldur	x2, [x29, #-8]
    ee70:	add	x1, sp, #0x18
    ee74:	mov	w0, #0x1                   	// #1
    ee78:	mov	x3, x19
    ee7c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    ee80:	cbz	w0, eefc <PyInit__decimal@@Base+0x83e8>
    ee84:	ldur	x2, [x29, #-16]
    ee88:	add	x1, sp, #0x10
    ee8c:	mov	w0, #0x1                   	// #1
    ee90:	mov	x3, x19
    ee94:	bl	858c <PyInit__decimal@@Base+0x1a78>
    ee98:	cbz	w0, eef4 <PyInit__decimal@@Base+0x83e0>
    ee9c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    eea0:	add	x0, x0, #0x318
    eea4:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    eea8:	mov	x20, x0
    eeac:	cbz	x0, ef14 <PyInit__decimal@@Base+0x8400>
    eeb0:	ldp	x9, x8, [sp, #16]
    eeb4:	add	x0, x20, #0x18
    eeb8:	add	x3, x19, #0x10
    eebc:	add	x4, sp, #0xc
    eec0:	add	x1, x8, #0x18
    eec4:	add	x2, x9, #0x18
    eec8:	bl	1cad0 <PyInit__decimal@@Base+0x15fbc>
    eecc:	ldr	x0, [sp, #24]
    eed0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    eed4:	ldr	x0, [sp, #16]
    eed8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    eedc:	ldr	w1, [sp, #12]
    eee0:	mov	x0, x19
    eee4:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    eee8:	cbz	w0, ef00 <PyInit__decimal@@Base+0x83ec>
    eeec:	mov	x0, x20
    eef0:	b	eef8 <PyInit__decimal@@Base+0x83e4>
    eef4:	ldr	x0, [sp, #24]
    eef8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    eefc:	mov	x20, xzr
    ef00:	mov	x0, x20
    ef04:	ldp	x20, x19, [sp, #64]
    ef08:	ldp	x29, x30, [sp, #48]
    ef0c:	add	sp, sp, #0x50
    ef10:	ret
    ef14:	ldr	x0, [sp, #24]
    ef18:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ef1c:	ldr	x0, [sp, #16]
    ef20:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ef24:	b	ef00 <PyInit__decimal@@Base+0x83ec>
    ef28:	sub	sp, sp, #0x50
    ef2c:	stp	x29, x30, [sp, #48]
    ef30:	stp	x20, x19, [sp, #64]
    ef34:	add	x29, sp, #0x30
    ef38:	mov	x8, x1
    ef3c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    ef40:	mov	x19, x0
    ef44:	add	x1, x1, #0x9fa
    ef48:	sub	x2, x29, #0x8
    ef4c:	sub	x3, x29, #0x10
    ef50:	mov	x0, x8
    ef54:	str	wzr, [sp, #12]
    ef58:	bl	6880 <PyArg_ParseTuple@plt>
    ef5c:	cbz	w0, eff0 <PyInit__decimal@@Base+0x84dc>
    ef60:	ldur	x2, [x29, #-8]
    ef64:	add	x1, sp, #0x18
    ef68:	mov	w0, #0x1                   	// #1
    ef6c:	mov	x3, x19
    ef70:	bl	858c <PyInit__decimal@@Base+0x1a78>
    ef74:	cbz	w0, eff0 <PyInit__decimal@@Base+0x84dc>
    ef78:	ldur	x2, [x29, #-16]
    ef7c:	add	x1, sp, #0x10
    ef80:	mov	w0, #0x1                   	// #1
    ef84:	mov	x3, x19
    ef88:	bl	858c <PyInit__decimal@@Base+0x1a78>
    ef8c:	cbz	w0, efe8 <PyInit__decimal@@Base+0x84d4>
    ef90:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    ef94:	add	x0, x0, #0x318
    ef98:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    ef9c:	mov	x20, x0
    efa0:	cbz	x0, f008 <PyInit__decimal@@Base+0x84f4>
    efa4:	ldp	x9, x8, [sp, #16]
    efa8:	add	x0, x20, #0x18
    efac:	add	x3, x19, #0x10
    efb0:	add	x4, sp, #0xc
    efb4:	add	x1, x8, #0x18
    efb8:	add	x2, x9, #0x18
    efbc:	bl	1d6a8 <PyInit__decimal@@Base+0x16b94>
    efc0:	ldr	x0, [sp, #24]
    efc4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    efc8:	ldr	x0, [sp, #16]
    efcc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    efd0:	ldr	w1, [sp, #12]
    efd4:	mov	x0, x19
    efd8:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    efdc:	cbz	w0, eff4 <PyInit__decimal@@Base+0x84e0>
    efe0:	mov	x0, x20
    efe4:	b	efec <PyInit__decimal@@Base+0x84d8>
    efe8:	ldr	x0, [sp, #24]
    efec:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    eff0:	mov	x20, xzr
    eff4:	mov	x0, x20
    eff8:	ldp	x20, x19, [sp, #64]
    effc:	ldp	x29, x30, [sp, #48]
    f000:	add	sp, sp, #0x50
    f004:	ret
    f008:	ldr	x0, [sp, #24]
    f00c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f010:	ldr	x0, [sp, #16]
    f014:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f018:	b	eff4 <PyInit__decimal@@Base+0x84e0>
    f01c:	sub	sp, sp, #0x50
    f020:	stp	x29, x30, [sp, #32]
    f024:	str	x21, [sp, #48]
    f028:	stp	x20, x19, [sp, #64]
    f02c:	add	x29, sp, #0x20
    f030:	mov	x8, x1
    f034:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    f038:	mov	x19, x0
    f03c:	add	x1, x1, #0x9fa
    f040:	add	x2, x29, #0x18
    f044:	sub	x3, x29, #0x8
    f048:	mov	x0, x8
    f04c:	str	wzr, [sp, #4]
    f050:	bl	6880 <PyArg_ParseTuple@plt>
    f054:	cbz	w0, f128 <PyInit__decimal@@Base+0x8614>
    f058:	ldr	x2, [x29, #24]
    f05c:	add	x1, sp, #0x10
    f060:	mov	w0, #0x1                   	// #1
    f064:	mov	x3, x19
    f068:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f06c:	cbz	w0, f128 <PyInit__decimal@@Base+0x8614>
    f070:	ldur	x2, [x29, #-8]
    f074:	add	x1, sp, #0x8
    f078:	mov	w0, #0x1                   	// #1
    f07c:	mov	x3, x19
    f080:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f084:	cbz	w0, f0f8 <PyInit__decimal@@Base+0x85e4>
    f088:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    f08c:	add	x0, x0, #0x318
    f090:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    f094:	cbz	x0, f100 <PyInit__decimal@@Base+0x85ec>
    f098:	mov	x20, x0
    f09c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    f0a0:	add	x0, x0, #0x318
    f0a4:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    f0a8:	cbz	x0, f110 <PyInit__decimal@@Base+0x85fc>
    f0ac:	ldp	x9, x8, [sp, #8]
    f0b0:	mov	x21, x0
    f0b4:	add	x0, x20, #0x18
    f0b8:	add	x1, x21, #0x18
    f0bc:	add	x2, x8, #0x18
    f0c0:	add	x3, x9, #0x18
    f0c4:	add	x4, x19, #0x10
    f0c8:	add	x5, sp, #0x4
    f0cc:	bl	1d000 <PyInit__decimal@@Base+0x164ec>
    f0d0:	ldr	x0, [sp, #16]
    f0d4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f0d8:	ldr	x0, [sp, #8]
    f0dc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f0e0:	ldr	w1, [sp, #4]
    f0e4:	mov	x0, x19
    f0e8:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    f0ec:	cbz	w0, f144 <PyInit__decimal@@Base+0x8630>
    f0f0:	mov	x0, x21
    f0f4:	b	f11c <PyInit__decimal@@Base+0x8608>
    f0f8:	ldr	x0, [sp, #16]
    f0fc:	b	f124 <PyInit__decimal@@Base+0x8610>
    f100:	ldr	x0, [sp, #16]
    f104:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f108:	ldr	x0, [sp, #8]
    f10c:	b	f124 <PyInit__decimal@@Base+0x8610>
    f110:	ldr	x0, [sp, #16]
    f114:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f118:	ldr	x0, [sp, #8]
    f11c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f120:	mov	x0, x20
    f124:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f128:	mov	x19, xzr
    f12c:	mov	x0, x19
    f130:	ldp	x20, x19, [sp, #64]
    f134:	ldr	x21, [sp, #48]
    f138:	ldp	x29, x30, [sp, #32]
    f13c:	add	sp, sp, #0x50
    f140:	ret
    f144:	adrp	x0, 2c000 <PyInit__decimal@@Base+0x254ec>
    f148:	add	x0, x0, #0xf83
    f14c:	mov	x1, x20
    f150:	mov	x2, x21
    f154:	bl	6770 <Py_BuildValue@plt>
    f158:	mov	x19, x0
    f15c:	mov	x0, x21
    f160:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f164:	mov	x0, x20
    f168:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f16c:	b	f12c <PyInit__decimal@@Base+0x8618>
    f170:	sub	sp, sp, #0x50
    f174:	stp	x29, x30, [sp, #48]
    f178:	stp	x20, x19, [sp, #64]
    f17c:	add	x29, sp, #0x30
    f180:	mov	x8, x1
    f184:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    f188:	mov	x19, x0
    f18c:	add	x1, x1, #0x9fa
    f190:	sub	x2, x29, #0x8
    f194:	sub	x3, x29, #0x10
    f198:	mov	x0, x8
    f19c:	str	wzr, [sp, #12]
    f1a0:	bl	6880 <PyArg_ParseTuple@plt>
    f1a4:	cbz	w0, f238 <PyInit__decimal@@Base+0x8724>
    f1a8:	ldur	x2, [x29, #-8]
    f1ac:	add	x1, sp, #0x18
    f1b0:	mov	w0, #0x1                   	// #1
    f1b4:	mov	x3, x19
    f1b8:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f1bc:	cbz	w0, f238 <PyInit__decimal@@Base+0x8724>
    f1c0:	ldur	x2, [x29, #-16]
    f1c4:	add	x1, sp, #0x10
    f1c8:	mov	w0, #0x1                   	// #1
    f1cc:	mov	x3, x19
    f1d0:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f1d4:	cbz	w0, f230 <PyInit__decimal@@Base+0x871c>
    f1d8:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    f1dc:	add	x0, x0, #0x318
    f1e0:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    f1e4:	mov	x20, x0
    f1e8:	cbz	x0, f250 <PyInit__decimal@@Base+0x873c>
    f1ec:	ldp	x9, x8, [sp, #16]
    f1f0:	add	x0, x20, #0x18
    f1f4:	add	x3, x19, #0x10
    f1f8:	add	x4, sp, #0xc
    f1fc:	add	x1, x8, #0x18
    f200:	add	x2, x9, #0x18
    f204:	bl	1f6b4 <PyInit__decimal@@Base+0x18ba0>
    f208:	ldr	x0, [sp, #24]
    f20c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f210:	ldr	x0, [sp, #16]
    f214:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f218:	ldr	w1, [sp, #12]
    f21c:	mov	x0, x19
    f220:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    f224:	cbz	w0, f23c <PyInit__decimal@@Base+0x8728>
    f228:	mov	x0, x20
    f22c:	b	f234 <PyInit__decimal@@Base+0x8720>
    f230:	ldr	x0, [sp, #24]
    f234:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f238:	mov	x20, xzr
    f23c:	mov	x0, x20
    f240:	ldp	x20, x19, [sp, #64]
    f244:	ldp	x29, x30, [sp, #48]
    f248:	add	sp, sp, #0x50
    f24c:	ret
    f250:	ldr	x0, [sp, #24]
    f254:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f258:	ldr	x0, [sp, #16]
    f25c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f260:	b	f23c <PyInit__decimal@@Base+0x8728>
    f264:	sub	sp, sp, #0x50
    f268:	stp	x29, x30, [sp, #48]
    f26c:	stp	x20, x19, [sp, #64]
    f270:	add	x29, sp, #0x30
    f274:	mov	x8, x1
    f278:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    f27c:	mov	x19, x0
    f280:	add	x1, x1, #0x9fa
    f284:	sub	x2, x29, #0x8
    f288:	sub	x3, x29, #0x10
    f28c:	mov	x0, x8
    f290:	str	wzr, [sp, #12]
    f294:	bl	6880 <PyArg_ParseTuple@plt>
    f298:	cbz	w0, f32c <PyInit__decimal@@Base+0x8818>
    f29c:	ldur	x2, [x29, #-8]
    f2a0:	add	x1, sp, #0x18
    f2a4:	mov	w0, #0x1                   	// #1
    f2a8:	mov	x3, x19
    f2ac:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f2b0:	cbz	w0, f32c <PyInit__decimal@@Base+0x8818>
    f2b4:	ldur	x2, [x29, #-16]
    f2b8:	add	x1, sp, #0x10
    f2bc:	mov	w0, #0x1                   	// #1
    f2c0:	mov	x3, x19
    f2c4:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f2c8:	cbz	w0, f324 <PyInit__decimal@@Base+0x8810>
    f2cc:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    f2d0:	add	x0, x0, #0x318
    f2d4:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    f2d8:	mov	x20, x0
    f2dc:	cbz	x0, f344 <PyInit__decimal@@Base+0x8830>
    f2e0:	ldp	x9, x8, [sp, #16]
    f2e4:	add	x0, x20, #0x18
    f2e8:	add	x3, x19, #0x10
    f2ec:	add	x4, sp, #0xc
    f2f0:	add	x1, x8, #0x18
    f2f4:	add	x2, x9, #0x18
    f2f8:	bl	1f7bc <PyInit__decimal@@Base+0x18ca8>
    f2fc:	ldr	x0, [sp, #24]
    f300:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f304:	ldr	x0, [sp, #16]
    f308:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f30c:	ldr	w1, [sp, #12]
    f310:	mov	x0, x19
    f314:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    f318:	cbz	w0, f330 <PyInit__decimal@@Base+0x881c>
    f31c:	mov	x0, x20
    f320:	b	f328 <PyInit__decimal@@Base+0x8814>
    f324:	ldr	x0, [sp, #24]
    f328:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f32c:	mov	x20, xzr
    f330:	mov	x0, x20
    f334:	ldp	x20, x19, [sp, #64]
    f338:	ldp	x29, x30, [sp, #48]
    f33c:	add	sp, sp, #0x50
    f340:	ret
    f344:	ldr	x0, [sp, #24]
    f348:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f34c:	ldr	x0, [sp, #16]
    f350:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f354:	b	f330 <PyInit__decimal@@Base+0x881c>
    f358:	sub	sp, sp, #0x50
    f35c:	stp	x29, x30, [sp, #48]
    f360:	stp	x20, x19, [sp, #64]
    f364:	add	x29, sp, #0x30
    f368:	mov	x8, x1
    f36c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    f370:	mov	x19, x0
    f374:	add	x1, x1, #0x9fa
    f378:	sub	x2, x29, #0x8
    f37c:	sub	x3, x29, #0x10
    f380:	mov	x0, x8
    f384:	str	wzr, [sp, #12]
    f388:	bl	6880 <PyArg_ParseTuple@plt>
    f38c:	cbz	w0, f420 <PyInit__decimal@@Base+0x890c>
    f390:	ldur	x2, [x29, #-8]
    f394:	add	x1, sp, #0x18
    f398:	mov	w0, #0x1                   	// #1
    f39c:	mov	x3, x19
    f3a0:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f3a4:	cbz	w0, f420 <PyInit__decimal@@Base+0x890c>
    f3a8:	ldur	x2, [x29, #-16]
    f3ac:	add	x1, sp, #0x10
    f3b0:	mov	w0, #0x1                   	// #1
    f3b4:	mov	x3, x19
    f3b8:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f3bc:	cbz	w0, f418 <PyInit__decimal@@Base+0x8904>
    f3c0:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    f3c4:	add	x0, x0, #0x318
    f3c8:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    f3cc:	mov	x20, x0
    f3d0:	cbz	x0, f438 <PyInit__decimal@@Base+0x8924>
    f3d4:	ldp	x9, x8, [sp, #16]
    f3d8:	add	x0, x20, #0x18
    f3dc:	add	x3, x19, #0x10
    f3e0:	add	x4, sp, #0xc
    f3e4:	add	x1, x8, #0x18
    f3e8:	add	x2, x9, #0x18
    f3ec:	bl	1f884 <PyInit__decimal@@Base+0x18d70>
    f3f0:	ldr	x0, [sp, #24]
    f3f4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f3f8:	ldr	x0, [sp, #16]
    f3fc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f400:	ldr	w1, [sp, #12]
    f404:	mov	x0, x19
    f408:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    f40c:	cbz	w0, f424 <PyInit__decimal@@Base+0x8910>
    f410:	mov	x0, x20
    f414:	b	f41c <PyInit__decimal@@Base+0x8908>
    f418:	ldr	x0, [sp, #24]
    f41c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f420:	mov	x20, xzr
    f424:	mov	x0, x20
    f428:	ldp	x20, x19, [sp, #64]
    f42c:	ldp	x29, x30, [sp, #48]
    f430:	add	sp, sp, #0x50
    f434:	ret
    f438:	ldr	x0, [sp, #24]
    f43c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f440:	ldr	x0, [sp, #16]
    f444:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f448:	b	f424 <PyInit__decimal@@Base+0x8910>
    f44c:	sub	sp, sp, #0x50
    f450:	stp	x29, x30, [sp, #48]
    f454:	stp	x20, x19, [sp, #64]
    f458:	add	x29, sp, #0x30
    f45c:	mov	x8, x1
    f460:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    f464:	mov	x19, x0
    f468:	add	x1, x1, #0x9fa
    f46c:	sub	x2, x29, #0x8
    f470:	sub	x3, x29, #0x10
    f474:	mov	x0, x8
    f478:	str	wzr, [sp, #12]
    f47c:	bl	6880 <PyArg_ParseTuple@plt>
    f480:	cbz	w0, f514 <PyInit__decimal@@Base+0x8a00>
    f484:	ldur	x2, [x29, #-8]
    f488:	add	x1, sp, #0x18
    f48c:	mov	w0, #0x1                   	// #1
    f490:	mov	x3, x19
    f494:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f498:	cbz	w0, f514 <PyInit__decimal@@Base+0x8a00>
    f49c:	ldur	x2, [x29, #-16]
    f4a0:	add	x1, sp, #0x10
    f4a4:	mov	w0, #0x1                   	// #1
    f4a8:	mov	x3, x19
    f4ac:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f4b0:	cbz	w0, f50c <PyInit__decimal@@Base+0x89f8>
    f4b4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    f4b8:	add	x0, x0, #0x318
    f4bc:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    f4c0:	mov	x20, x0
    f4c4:	cbz	x0, f52c <PyInit__decimal@@Base+0x8a18>
    f4c8:	ldp	x9, x8, [sp, #16]
    f4cc:	add	x0, x20, #0x18
    f4d0:	add	x3, x19, #0x10
    f4d4:	add	x4, sp, #0xc
    f4d8:	add	x1, x8, #0x18
    f4dc:	add	x2, x9, #0x18
    f4e0:	bl	1f94c <PyInit__decimal@@Base+0x18e38>
    f4e4:	ldr	x0, [sp, #24]
    f4e8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f4ec:	ldr	x0, [sp, #16]
    f4f0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f4f4:	ldr	w1, [sp, #12]
    f4f8:	mov	x0, x19
    f4fc:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    f500:	cbz	w0, f518 <PyInit__decimal@@Base+0x8a04>
    f504:	mov	x0, x20
    f508:	b	f510 <PyInit__decimal@@Base+0x89fc>
    f50c:	ldr	x0, [sp, #24]
    f510:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f514:	mov	x20, xzr
    f518:	mov	x0, x20
    f51c:	ldp	x20, x19, [sp, #64]
    f520:	ldp	x29, x30, [sp, #48]
    f524:	add	sp, sp, #0x50
    f528:	ret
    f52c:	ldr	x0, [sp, #24]
    f530:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f534:	ldr	x0, [sp, #16]
    f538:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f53c:	b	f518 <PyInit__decimal@@Base+0x8a04>
    f540:	sub	sp, sp, #0x50
    f544:	stp	x29, x30, [sp, #48]
    f548:	stp	x20, x19, [sp, #64]
    f54c:	add	x29, sp, #0x30
    f550:	mov	x8, x1
    f554:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    f558:	mov	x19, x0
    f55c:	add	x1, x1, #0x9fa
    f560:	sub	x2, x29, #0x8
    f564:	sub	x3, x29, #0x10
    f568:	mov	x0, x8
    f56c:	str	wzr, [sp, #12]
    f570:	bl	6880 <PyArg_ParseTuple@plt>
    f574:	cbz	w0, f608 <PyInit__decimal@@Base+0x8af4>
    f578:	ldur	x2, [x29, #-8]
    f57c:	add	x1, sp, #0x18
    f580:	mov	w0, #0x1                   	// #1
    f584:	mov	x3, x19
    f588:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f58c:	cbz	w0, f608 <PyInit__decimal@@Base+0x8af4>
    f590:	ldur	x2, [x29, #-16]
    f594:	add	x1, sp, #0x10
    f598:	mov	w0, #0x1                   	// #1
    f59c:	mov	x3, x19
    f5a0:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f5a4:	cbz	w0, f600 <PyInit__decimal@@Base+0x8aec>
    f5a8:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    f5ac:	add	x0, x0, #0x318
    f5b0:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    f5b4:	mov	x20, x0
    f5b8:	cbz	x0, f620 <PyInit__decimal@@Base+0x8b0c>
    f5bc:	ldp	x9, x8, [sp, #16]
    f5c0:	add	x0, x20, #0x18
    f5c4:	add	x3, x19, #0x10
    f5c8:	add	x4, sp, #0xc
    f5cc:	add	x1, x8, #0x18
    f5d0:	add	x2, x9, #0x18
    f5d4:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
    f5d8:	ldr	x0, [sp, #24]
    f5dc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f5e0:	ldr	x0, [sp, #16]
    f5e4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f5e8:	ldr	w1, [sp, #12]
    f5ec:	mov	x0, x19
    f5f0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    f5f4:	cbz	w0, f60c <PyInit__decimal@@Base+0x8af8>
    f5f8:	mov	x0, x20
    f5fc:	b	f604 <PyInit__decimal@@Base+0x8af0>
    f600:	ldr	x0, [sp, #24]
    f604:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f608:	mov	x20, xzr
    f60c:	mov	x0, x20
    f610:	ldp	x20, x19, [sp, #64]
    f614:	ldp	x29, x30, [sp, #48]
    f618:	add	sp, sp, #0x50
    f61c:	ret
    f620:	ldr	x0, [sp, #24]
    f624:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f628:	ldr	x0, [sp, #16]
    f62c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f630:	b	f60c <PyInit__decimal@@Base+0x8af8>
    f634:	sub	sp, sp, #0x50
    f638:	stp	x29, x30, [sp, #48]
    f63c:	stp	x20, x19, [sp, #64]
    f640:	add	x29, sp, #0x30
    f644:	mov	x8, x1
    f648:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    f64c:	mov	x19, x0
    f650:	add	x1, x1, #0x9fa
    f654:	sub	x2, x29, #0x8
    f658:	sub	x3, x29, #0x10
    f65c:	mov	x0, x8
    f660:	str	wzr, [sp, #12]
    f664:	bl	6880 <PyArg_ParseTuple@plt>
    f668:	cbz	w0, f6fc <PyInit__decimal@@Base+0x8be8>
    f66c:	ldur	x2, [x29, #-8]
    f670:	add	x1, sp, #0x18
    f674:	mov	w0, #0x1                   	// #1
    f678:	mov	x3, x19
    f67c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f680:	cbz	w0, f6fc <PyInit__decimal@@Base+0x8be8>
    f684:	ldur	x2, [x29, #-16]
    f688:	add	x1, sp, #0x10
    f68c:	mov	w0, #0x1                   	// #1
    f690:	mov	x3, x19
    f694:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f698:	cbz	w0, f6f4 <PyInit__decimal@@Base+0x8be0>
    f69c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    f6a0:	add	x0, x0, #0x318
    f6a4:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    f6a8:	mov	x20, x0
    f6ac:	cbz	x0, f714 <PyInit__decimal@@Base+0x8c00>
    f6b0:	ldp	x9, x8, [sp, #16]
    f6b4:	add	x0, x20, #0x18
    f6b8:	add	x3, x19, #0x10
    f6bc:	add	x4, sp, #0xc
    f6c0:	add	x1, x8, #0x18
    f6c4:	add	x2, x9, #0x18
    f6c8:	bl	1ff08 <PyInit__decimal@@Base+0x193f4>
    f6cc:	ldr	x0, [sp, #24]
    f6d0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f6d4:	ldr	x0, [sp, #16]
    f6d8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f6dc:	ldr	w1, [sp, #12]
    f6e0:	mov	x0, x19
    f6e4:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    f6e8:	cbz	w0, f700 <PyInit__decimal@@Base+0x8bec>
    f6ec:	mov	x0, x20
    f6f0:	b	f6f8 <PyInit__decimal@@Base+0x8be4>
    f6f4:	ldr	x0, [sp, #24]
    f6f8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f6fc:	mov	x20, xzr
    f700:	mov	x0, x20
    f704:	ldp	x20, x19, [sp, #64]
    f708:	ldp	x29, x30, [sp, #48]
    f70c:	add	sp, sp, #0x50
    f710:	ret
    f714:	ldr	x0, [sp, #24]
    f718:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f71c:	ldr	x0, [sp, #16]
    f720:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f724:	b	f700 <PyInit__decimal@@Base+0x8bec>
    f728:	sub	sp, sp, #0x50
    f72c:	stp	x29, x30, [sp, #48]
    f730:	stp	x20, x19, [sp, #64]
    f734:	add	x29, sp, #0x30
    f738:	mov	x8, x1
    f73c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    f740:	mov	x19, x0
    f744:	add	x1, x1, #0x9fa
    f748:	sub	x2, x29, #0x8
    f74c:	sub	x3, x29, #0x10
    f750:	mov	x0, x8
    f754:	str	wzr, [sp, #12]
    f758:	bl	6880 <PyArg_ParseTuple@plt>
    f75c:	cbz	w0, f7f0 <PyInit__decimal@@Base+0x8cdc>
    f760:	ldur	x2, [x29, #-8]
    f764:	add	x1, sp, #0x18
    f768:	mov	w0, #0x1                   	// #1
    f76c:	mov	x3, x19
    f770:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f774:	cbz	w0, f7f0 <PyInit__decimal@@Base+0x8cdc>
    f778:	ldur	x2, [x29, #-16]
    f77c:	add	x1, sp, #0x10
    f780:	mov	w0, #0x1                   	// #1
    f784:	mov	x3, x19
    f788:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f78c:	cbz	w0, f7e8 <PyInit__decimal@@Base+0x8cd4>
    f790:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    f794:	add	x0, x0, #0x318
    f798:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    f79c:	mov	x20, x0
    f7a0:	cbz	x0, f808 <PyInit__decimal@@Base+0x8cf4>
    f7a4:	ldp	x9, x8, [sp, #16]
    f7a8:	add	x0, x20, #0x18
    f7ac:	add	x3, x19, #0x10
    f7b0:	add	x4, sp, #0xc
    f7b4:	add	x1, x8, #0x18
    f7b8:	add	x2, x9, #0x18
    f7bc:	bl	21314 <PyInit__decimal@@Base+0x1a800>
    f7c0:	ldr	x0, [sp, #24]
    f7c4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f7c8:	ldr	x0, [sp, #16]
    f7cc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f7d0:	ldr	w1, [sp, #12]
    f7d4:	mov	x0, x19
    f7d8:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    f7dc:	cbz	w0, f7f4 <PyInit__decimal@@Base+0x8ce0>
    f7e0:	mov	x0, x20
    f7e4:	b	f7ec <PyInit__decimal@@Base+0x8cd8>
    f7e8:	ldr	x0, [sp, #24]
    f7ec:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f7f0:	mov	x20, xzr
    f7f4:	mov	x0, x20
    f7f8:	ldp	x20, x19, [sp, #64]
    f7fc:	ldp	x29, x30, [sp, #48]
    f800:	add	sp, sp, #0x50
    f804:	ret
    f808:	ldr	x0, [sp, #24]
    f80c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f810:	ldr	x0, [sp, #16]
    f814:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f818:	b	f7f4 <PyInit__decimal@@Base+0x8ce0>
    f81c:	sub	sp, sp, #0x50
    f820:	stp	x29, x30, [sp, #48]
    f824:	stp	x20, x19, [sp, #64]
    f828:	add	x29, sp, #0x30
    f82c:	mov	x8, x1
    f830:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    f834:	mov	x19, x0
    f838:	add	x1, x1, #0x9fa
    f83c:	sub	x2, x29, #0x8
    f840:	sub	x3, x29, #0x10
    f844:	mov	x0, x8
    f848:	str	wzr, [sp, #12]
    f84c:	bl	6880 <PyArg_ParseTuple@plt>
    f850:	cbz	w0, f8e4 <PyInit__decimal@@Base+0x8dd0>
    f854:	ldur	x2, [x29, #-8]
    f858:	add	x1, sp, #0x18
    f85c:	mov	w0, #0x1                   	// #1
    f860:	mov	x3, x19
    f864:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f868:	cbz	w0, f8e4 <PyInit__decimal@@Base+0x8dd0>
    f86c:	ldur	x2, [x29, #-16]
    f870:	add	x1, sp, #0x10
    f874:	mov	w0, #0x1                   	// #1
    f878:	mov	x3, x19
    f87c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f880:	cbz	w0, f8dc <PyInit__decimal@@Base+0x8dc8>
    f884:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    f888:	add	x0, x0, #0x318
    f88c:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    f890:	mov	x20, x0
    f894:	cbz	x0, f8fc <PyInit__decimal@@Base+0x8de8>
    f898:	ldp	x9, x8, [sp, #16]
    f89c:	add	x0, x20, #0x18
    f8a0:	add	x3, x19, #0x10
    f8a4:	add	x4, sp, #0xc
    f8a8:	add	x1, x8, #0x18
    f8ac:	add	x2, x9, #0x18
    f8b0:	bl	21080 <PyInit__decimal@@Base+0x1a56c>
    f8b4:	ldr	x0, [sp, #24]
    f8b8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f8bc:	ldr	x0, [sp, #16]
    f8c0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f8c4:	ldr	w1, [sp, #12]
    f8c8:	mov	x0, x19
    f8cc:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    f8d0:	cbz	w0, f8e8 <PyInit__decimal@@Base+0x8dd4>
    f8d4:	mov	x0, x20
    f8d8:	b	f8e0 <PyInit__decimal@@Base+0x8dcc>
    f8dc:	ldr	x0, [sp, #24]
    f8e0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f8e4:	mov	x20, xzr
    f8e8:	mov	x0, x20
    f8ec:	ldp	x20, x19, [sp, #64]
    f8f0:	ldp	x29, x30, [sp, #48]
    f8f4:	add	sp, sp, #0x50
    f8f8:	ret
    f8fc:	ldr	x0, [sp, #24]
    f900:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f904:	ldr	x0, [sp, #16]
    f908:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f90c:	b	f8e8 <PyInit__decimal@@Base+0x8dd4>
    f910:	sub	sp, sp, #0x50
    f914:	stp	x29, x30, [sp, #48]
    f918:	stp	x20, x19, [sp, #64]
    f91c:	add	x29, sp, #0x30
    f920:	mov	x8, x1
    f924:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    f928:	mov	x19, x0
    f92c:	add	x1, x1, #0x9fa
    f930:	sub	x2, x29, #0x8
    f934:	sub	x3, x29, #0x10
    f938:	mov	x0, x8
    f93c:	str	wzr, [sp, #12]
    f940:	bl	6880 <PyArg_ParseTuple@plt>
    f944:	cbz	w0, f9d8 <PyInit__decimal@@Base+0x8ec4>
    f948:	ldur	x2, [x29, #-8]
    f94c:	add	x1, sp, #0x18
    f950:	mov	w0, #0x1                   	// #1
    f954:	mov	x3, x19
    f958:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f95c:	cbz	w0, f9d8 <PyInit__decimal@@Base+0x8ec4>
    f960:	ldur	x2, [x29, #-16]
    f964:	add	x1, sp, #0x10
    f968:	mov	w0, #0x1                   	// #1
    f96c:	mov	x3, x19
    f970:	bl	858c <PyInit__decimal@@Base+0x1a78>
    f974:	cbz	w0, f9d0 <PyInit__decimal@@Base+0x8ebc>
    f978:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    f97c:	add	x0, x0, #0x318
    f980:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    f984:	mov	x20, x0
    f988:	cbz	x0, f9f0 <PyInit__decimal@@Base+0x8edc>
    f98c:	ldp	x9, x8, [sp, #16]
    f990:	add	x0, x20, #0x18
    f994:	add	x3, x19, #0x10
    f998:	add	x4, sp, #0xc
    f99c:	add	x1, x8, #0x18
    f9a0:	add	x2, x9, #0x18
    f9a4:	bl	216dc <PyInit__decimal@@Base+0x1abc8>
    f9a8:	ldr	x0, [sp, #24]
    f9ac:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f9b0:	ldr	x0, [sp, #16]
    f9b4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f9b8:	ldr	w1, [sp, #12]
    f9bc:	mov	x0, x19
    f9c0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    f9c4:	cbz	w0, f9dc <PyInit__decimal@@Base+0x8ec8>
    f9c8:	mov	x0, x20
    f9cc:	b	f9d4 <PyInit__decimal@@Base+0x8ec0>
    f9d0:	ldr	x0, [sp, #24]
    f9d4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f9d8:	mov	x20, xzr
    f9dc:	mov	x0, x20
    f9e0:	ldp	x20, x19, [sp, #64]
    f9e4:	ldp	x29, x30, [sp, #48]
    f9e8:	add	sp, sp, #0x50
    f9ec:	ret
    f9f0:	ldr	x0, [sp, #24]
    f9f4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    f9f8:	ldr	x0, [sp, #16]
    f9fc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fa00:	b	f9dc <PyInit__decimal@@Base+0x8ec8>
    fa04:	sub	sp, sp, #0x50
    fa08:	stp	x29, x30, [sp, #48]
    fa0c:	stp	x20, x19, [sp, #64]
    fa10:	add	x29, sp, #0x30
    fa14:	mov	x8, x1
    fa18:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    fa1c:	mov	x19, x0
    fa20:	add	x1, x1, #0x9fa
    fa24:	sub	x2, x29, #0x8
    fa28:	sub	x3, x29, #0x10
    fa2c:	mov	x0, x8
    fa30:	str	wzr, [sp, #12]
    fa34:	bl	6880 <PyArg_ParseTuple@plt>
    fa38:	cbz	w0, facc <PyInit__decimal@@Base+0x8fb8>
    fa3c:	ldur	x2, [x29, #-8]
    fa40:	add	x1, sp, #0x18
    fa44:	mov	w0, #0x1                   	// #1
    fa48:	mov	x3, x19
    fa4c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    fa50:	cbz	w0, facc <PyInit__decimal@@Base+0x8fb8>
    fa54:	ldur	x2, [x29, #-16]
    fa58:	add	x1, sp, #0x10
    fa5c:	mov	w0, #0x1                   	// #1
    fa60:	mov	x3, x19
    fa64:	bl	858c <PyInit__decimal@@Base+0x1a78>
    fa68:	cbz	w0, fac4 <PyInit__decimal@@Base+0x8fb0>
    fa6c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    fa70:	add	x0, x0, #0x318
    fa74:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    fa78:	mov	x20, x0
    fa7c:	cbz	x0, fae4 <PyInit__decimal@@Base+0x8fd0>
    fa80:	ldp	x9, x8, [sp, #16]
    fa84:	add	x0, x20, #0x18
    fa88:	add	x3, x19, #0x10
    fa8c:	add	x4, sp, #0xc
    fa90:	add	x1, x8, #0x18
    fa94:	add	x2, x9, #0x18
    fa98:	bl	1c64c <PyInit__decimal@@Base+0x15b38>
    fa9c:	ldr	x0, [sp, #24]
    faa0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    faa4:	ldr	x0, [sp, #16]
    faa8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    faac:	ldr	w1, [sp, #12]
    fab0:	mov	x0, x19
    fab4:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    fab8:	cbz	w0, fad0 <PyInit__decimal@@Base+0x8fbc>
    fabc:	mov	x0, x20
    fac0:	b	fac8 <PyInit__decimal@@Base+0x8fb4>
    fac4:	ldr	x0, [sp, #24]
    fac8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    facc:	mov	x20, xzr
    fad0:	mov	x0, x20
    fad4:	ldp	x20, x19, [sp, #64]
    fad8:	ldp	x29, x30, [sp, #48]
    fadc:	add	sp, sp, #0x50
    fae0:	ret
    fae4:	ldr	x0, [sp, #24]
    fae8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    faec:	ldr	x0, [sp, #16]
    faf0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    faf4:	b	fad0 <PyInit__decimal@@Base+0x8fbc>
    faf8:	sub	sp, sp, #0x60
    fafc:	stp	x29, x30, [sp, #48]
    fb00:	str	x21, [sp, #64]
    fb04:	stp	x20, x19, [sp, #80]
    fb08:	add	x29, sp, #0x30
    fb0c:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
    fb10:	ldr	x20, [x20, #4008]
    fb14:	mov	x8, x2
    fb18:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
    fb1c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x3b4ec>
    fb20:	mov	x19, x0
    fb24:	add	x2, x2, #0x42a
    fb28:	add	x3, x3, #0x330
    fb2c:	add	x4, x29, #0x18
    fb30:	sub	x5, x29, #0x8
    fb34:	sub	x6, x29, #0x10
    fb38:	mov	x0, x1
    fb3c:	mov	x1, x8
    fb40:	str	xzr, [sp, #8]
    fb44:	stur	x20, [x29, #-16]
    fb48:	str	wzr, [sp, #4]
    fb4c:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
    fb50:	cbz	w0, fc5c <PyInit__decimal@@Base+0x9148>
    fb54:	ldr	x2, [x29, #24]
    fb58:	add	x1, sp, #0x18
    fb5c:	mov	w0, #0x1                   	// #1
    fb60:	mov	x3, x19
    fb64:	bl	858c <PyInit__decimal@@Base+0x1a78>
    fb68:	cbz	w0, fc5c <PyInit__decimal@@Base+0x9148>
    fb6c:	ldur	x2, [x29, #-8]
    fb70:	add	x1, sp, #0x10
    fb74:	mov	w0, #0x1                   	// #1
    fb78:	mov	x3, x19
    fb7c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    fb80:	cbz	w0, fbec <PyInit__decimal@@Base+0x90d8>
    fb84:	ldur	x2, [x29, #-16]
    fb88:	cmp	x2, x20
    fb8c:	b.eq	fba4 <PyInit__decimal@@Base+0x9090>  // b.none
    fb90:	add	x1, sp, #0x8
    fb94:	mov	w0, #0x1                   	// #1
    fb98:	mov	x3, x19
    fb9c:	bl	858c <PyInit__decimal@@Base+0x1a78>
    fba0:	cbz	w0, fc10 <PyInit__decimal@@Base+0x90fc>
    fba4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    fba8:	add	x0, x0, #0x318
    fbac:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    fbb0:	mov	x20, x0
    fbb4:	cbz	x0, fbf4 <PyInit__decimal@@Base+0x90e0>
    fbb8:	ldp	x21, x9, [sp, #8]
    fbbc:	ldr	x8, [sp, #24]
    fbc0:	add	x0, x20, #0x18
    fbc4:	add	x2, x9, #0x18
    fbc8:	add	x1, x8, #0x18
    fbcc:	cbz	x21, fc28 <PyInit__decimal@@Base+0x9114>
    fbd0:	add	x3, x21, #0x18
    fbd4:	add	x4, x19, #0x10
    fbd8:	add	x5, sp, #0x4
    fbdc:	bl	209e0 <PyInit__decimal@@Base+0x19ecc>
    fbe0:	mov	x0, x21
    fbe4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fbe8:	b	fc34 <PyInit__decimal@@Base+0x9120>
    fbec:	ldr	x0, [sp, #24]
    fbf0:	b	fc58 <PyInit__decimal@@Base+0x9144>
    fbf4:	ldr	x0, [sp, #24]
    fbf8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fbfc:	ldr	x0, [sp, #16]
    fc00:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fc04:	ldr	x0, [sp, #8]
    fc08:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
    fc0c:	b	fc60 <PyInit__decimal@@Base+0x914c>
    fc10:	ldr	x0, [sp, #24]
    fc14:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fc18:	ldr	x0, [sp, #16]
    fc1c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fc20:	ldr	x20, [sp, #8]
    fc24:	b	fc60 <PyInit__decimal@@Base+0x914c>
    fc28:	add	x3, x19, #0x10
    fc2c:	add	x4, sp, #0x4
    fc30:	bl	20014 <PyInit__decimal@@Base+0x19500>
    fc34:	ldr	x0, [sp, #24]
    fc38:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fc3c:	ldr	x0, [sp, #16]
    fc40:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fc44:	ldr	w1, [sp, #4]
    fc48:	mov	x0, x19
    fc4c:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    fc50:	cbz	w0, fc60 <PyInit__decimal@@Base+0x914c>
    fc54:	mov	x0, x20
    fc58:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fc5c:	mov	x20, xzr
    fc60:	mov	x0, x20
    fc64:	ldp	x20, x19, [sp, #80]
    fc68:	ldr	x21, [sp, #64]
    fc6c:	ldp	x29, x30, [sp, #48]
    fc70:	add	sp, sp, #0x60
    fc74:	ret
    fc78:	sub	sp, sp, #0x60
    fc7c:	stp	x29, x30, [sp, #64]
    fc80:	stp	x20, x19, [sp, #80]
    fc84:	add	x29, sp, #0x40
    fc88:	mov	x8, x1
    fc8c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    fc90:	mov	x19, x0
    fc94:	add	x1, x1, #0x9f9
    fc98:	sub	x2, x29, #0x8
    fc9c:	sub	x3, x29, #0x10
    fca0:	sub	x4, x29, #0x18
    fca4:	mov	x0, x8
    fca8:	str	wzr, [sp, #12]
    fcac:	bl	6880 <PyArg_ParseTuple@plt>
    fcb0:	cbz	w0, fd7c <PyInit__decimal@@Base+0x9268>
    fcb4:	ldur	x2, [x29, #-8]
    fcb8:	add	x1, sp, #0x20
    fcbc:	mov	w0, #0x1                   	// #1
    fcc0:	mov	x3, x19
    fcc4:	bl	858c <PyInit__decimal@@Base+0x1a78>
    fcc8:	cbz	w0, fd7c <PyInit__decimal@@Base+0x9268>
    fccc:	ldur	x2, [x29, #-16]
    fcd0:	add	x1, sp, #0x18
    fcd4:	mov	w0, #0x1                   	// #1
    fcd8:	mov	x3, x19
    fcdc:	bl	858c <PyInit__decimal@@Base+0x1a78>
    fce0:	cbz	w0, fd64 <PyInit__decimal@@Base+0x9250>
    fce4:	ldur	x2, [x29, #-24]
    fce8:	add	x1, sp, #0x10
    fcec:	mov	w0, #0x1                   	// #1
    fcf0:	mov	x3, x19
    fcf4:	bl	858c <PyInit__decimal@@Base+0x1a78>
    fcf8:	cbz	w0, fd6c <PyInit__decimal@@Base+0x9258>
    fcfc:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
    fd00:	add	x0, x0, #0x318
    fd04:	bl	8668 <PyInit__decimal@@Base+0x1b54>
    fd08:	mov	x20, x0
    fd0c:	cbz	x0, fd94 <PyInit__decimal@@Base+0x9280>
    fd10:	ldp	x9, x8, [sp, #24]
    fd14:	ldr	x10, [sp, #16]
    fd18:	add	x0, x20, #0x18
    fd1c:	add	x4, x19, #0x10
    fd20:	add	x1, x8, #0x18
    fd24:	add	x2, x9, #0x18
    fd28:	add	x3, x10, #0x18
    fd2c:	add	x5, sp, #0xc
    fd30:	bl	1e174 <PyInit__decimal@@Base+0x17660>
    fd34:	ldr	x0, [sp, #32]
    fd38:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fd3c:	ldr	x0, [sp, #24]
    fd40:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fd44:	ldr	x0, [sp, #16]
    fd48:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fd4c:	ldr	w1, [sp, #12]
    fd50:	mov	x0, x19
    fd54:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
    fd58:	cbz	w0, fd80 <PyInit__decimal@@Base+0x926c>
    fd5c:	mov	x0, x20
    fd60:	b	fd78 <PyInit__decimal@@Base+0x9264>
    fd64:	ldr	x0, [sp, #32]
    fd68:	b	fd78 <PyInit__decimal@@Base+0x9264>
    fd6c:	ldr	x0, [sp, #32]
    fd70:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fd74:	ldr	x0, [sp, #24]
    fd78:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fd7c:	mov	x20, xzr
    fd80:	mov	x0, x20
    fd84:	ldp	x20, x19, [sp, #80]
    fd88:	ldp	x29, x30, [sp, #64]
    fd8c:	add	sp, sp, #0x60
    fd90:	ret
    fd94:	ldr	x0, [sp, #32]
    fd98:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fd9c:	ldr	x0, [sp, #24]
    fda0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fda4:	ldr	x0, [sp, #16]
    fda8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fdac:	b	fd80 <PyInit__decimal@@Base+0x926c>
    fdb0:	stp	x29, x30, [sp, #-16]!
    fdb4:	mov	x29, sp
    fdb8:	add	x0, x0, #0x10
    fdbc:	bl	18028 <PyInit__decimal@@Base+0x11514>
    fdc0:	bl	6640 <PyLong_FromSsize_t@plt>
    fdc4:	ldp	x29, x30, [sp], #16
    fdc8:	ret
    fdcc:	stp	x29, x30, [sp, #-16]!
    fdd0:	mov	x29, sp
    fdd4:	add	x0, x0, #0x10
    fdd8:	bl	1803c <PyInit__decimal@@Base+0x11528>
    fddc:	bl	6640 <PyLong_FromSsize_t@plt>
    fde0:	ldp	x29, x30, [sp], #16
    fde4:	ret
    fde8:	stp	x29, x30, [sp, #-16]!
    fdec:	mov	x29, sp
    fdf0:	bl	b2b0 <PyInit__decimal@@Base+0x479c>
    fdf4:	ldp	x29, x30, [sp], #16
    fdf8:	ret
    fdfc:	stp	x29, x30, [sp, #-32]!
    fe00:	str	x19, [sp, #16]
    fe04:	mov	x29, sp
    fe08:	ldr	x0, [x1, #8]
    fe0c:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
    fe10:	add	x8, x8, #0x318
    fe14:	mov	x19, x1
    fe18:	cmp	x0, x8
    fe1c:	b.eq	fe30 <PyInit__decimal@@Base+0x931c>  // b.none
    fe20:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
    fe24:	add	x1, x1, #0x318
    fe28:	bl	6960 <PyType_IsSubtype@plt>
    fe2c:	cbz	w0, fe5c <PyInit__decimal@@Base+0x9348>
    fe30:	add	x0, x19, #0x18
    fe34:	bl	18358 <PyInit__decimal@@Base+0x11844>
    fe38:	cbz	w0, fe4c <PyInit__decimal@@Base+0x9338>
    fe3c:	bl	9140 <PyInit__decimal@@Base+0x262c>
    fe40:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    fe44:	ldr	x0, [x0, #4024]
    fe48:	b	fe78 <PyInit__decimal@@Base+0x9364>
    fe4c:	bl	915c <PyInit__decimal@@Base+0x2648>
    fe50:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
    fe54:	ldr	x0, [x0, #3976]
    fe58:	b	fe78 <PyInit__decimal@@Base+0x9364>
    fe5c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
    fe60:	ldr	x8, [x8, #3936]
    fe64:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
    fe68:	add	x1, x1, #0x8d2
    fe6c:	ldr	x0, [x8]
    fe70:	bl	65f0 <PyErr_SetString@plt>
    fe74:	mov	x0, xzr
    fe78:	ldr	x19, [sp, #16]
    fe7c:	ldp	x29, x30, [sp], #32
    fe80:	ret
    fe84:	stp	x29, x30, [sp, #-32]!
    fe88:	str	x19, [sp, #16]
    fe8c:	mov	x29, sp
    fe90:	mov	x2, x1
    fe94:	mov	x3, x0
    fe98:	add	x1, x29, #0x18
    fe9c:	mov	w0, #0x1                   	// #1
    fea0:	bl	858c <PyInit__decimal@@Base+0x1a78>
    fea4:	cbz	w0, fec8 <PyInit__decimal@@Base+0x93b4>
    fea8:	ldr	x8, [x29, #24]
    feac:	add	x0, x8, #0x18
    feb0:	bl	18360 <PyInit__decimal@@Base+0x1184c>
    feb4:	cbz	w0, fed0 <PyInit__decimal@@Base+0x93bc>
    feb8:	bl	9140 <PyInit__decimal@@Base+0x262c>
    febc:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
    fec0:	ldr	x19, [x19, #4024]
    fec4:	b	fedc <PyInit__decimal@@Base+0x93c8>
    fec8:	mov	x19, xzr
    fecc:	b	fee4 <PyInit__decimal@@Base+0x93d0>
    fed0:	bl	915c <PyInit__decimal@@Base+0x2648>
    fed4:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
    fed8:	ldr	x19, [x19, #3976]
    fedc:	ldr	x0, [x29, #24]
    fee0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    fee4:	mov	x0, x19
    fee8:	ldr	x19, [sp, #16]
    feec:	ldp	x29, x30, [sp], #32
    fef0:	ret
    fef4:	stp	x29, x30, [sp, #-32]!
    fef8:	str	x19, [sp, #16]
    fefc:	mov	x29, sp
    ff00:	mov	x2, x1
    ff04:	mov	x3, x0
    ff08:	add	x1, x29, #0x18
    ff0c:	mov	w0, #0x1                   	// #1
    ff10:	bl	858c <PyInit__decimal@@Base+0x1a78>
    ff14:	cbz	w0, ff38 <PyInit__decimal@@Base+0x9424>
    ff18:	ldr	x8, [x29, #24]
    ff1c:	add	x0, x8, #0x18
    ff20:	bl	18370 <PyInit__decimal@@Base+0x1185c>
    ff24:	cbz	w0, ff40 <PyInit__decimal@@Base+0x942c>
    ff28:	bl	9140 <PyInit__decimal@@Base+0x262c>
    ff2c:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
    ff30:	ldr	x19, [x19, #4024]
    ff34:	b	ff4c <PyInit__decimal@@Base+0x9438>
    ff38:	mov	x19, xzr
    ff3c:	b	ff54 <PyInit__decimal@@Base+0x9440>
    ff40:	bl	915c <PyInit__decimal@@Base+0x2648>
    ff44:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
    ff48:	ldr	x19, [x19, #3976]
    ff4c:	ldr	x0, [x29, #24]
    ff50:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ff54:	mov	x0, x19
    ff58:	ldr	x19, [sp, #16]
    ff5c:	ldp	x29, x30, [sp], #32
    ff60:	ret
    ff64:	stp	x29, x30, [sp, #-32]!
    ff68:	str	x19, [sp, #16]
    ff6c:	mov	x29, sp
    ff70:	mov	x2, x1
    ff74:	mov	x3, x0
    ff78:	add	x1, x29, #0x18
    ff7c:	mov	w0, #0x1                   	// #1
    ff80:	bl	858c <PyInit__decimal@@Base+0x1a78>
    ff84:	cbz	w0, ffa8 <PyInit__decimal@@Base+0x9494>
    ff88:	ldr	x8, [x29, #24]
    ff8c:	add	x0, x8, #0x18
    ff90:	bl	1837c <PyInit__decimal@@Base+0x11868>
    ff94:	cbz	w0, ffb0 <PyInit__decimal@@Base+0x949c>
    ff98:	bl	9140 <PyInit__decimal@@Base+0x262c>
    ff9c:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
    ffa0:	ldr	x19, [x19, #4024]
    ffa4:	b	ffbc <PyInit__decimal@@Base+0x94a8>
    ffa8:	mov	x19, xzr
    ffac:	b	ffc4 <PyInit__decimal@@Base+0x94b0>
    ffb0:	bl	915c <PyInit__decimal@@Base+0x2648>
    ffb4:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
    ffb8:	ldr	x19, [x19, #3976]
    ffbc:	ldr	x0, [x29, #24]
    ffc0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
    ffc4:	mov	x0, x19
    ffc8:	ldr	x19, [sp, #16]
    ffcc:	ldp	x29, x30, [sp], #32
    ffd0:	ret
    ffd4:	stp	x29, x30, [sp, #-32]!
    ffd8:	str	x19, [sp, #16]
    ffdc:	mov	x29, sp
    ffe0:	mov	x19, x0
    ffe4:	mov	x2, x1
    ffe8:	add	x1, x29, #0x18
    ffec:	mov	w0, #0x1                   	// #1
    fff0:	mov	x3, x19
    fff4:	bl	858c <PyInit__decimal@@Base+0x1a78>
    fff8:	cbz	w0, 10020 <PyInit__decimal@@Base+0x950c>
    fffc:	ldr	x8, [x29, #24]
   10000:	add	x1, x19, #0x10
   10004:	add	x0, x8, #0x18
   10008:	bl	18420 <PyInit__decimal@@Base+0x1190c>
   1000c:	cbz	w0, 10028 <PyInit__decimal@@Base+0x9514>
   10010:	bl	9140 <PyInit__decimal@@Base+0x262c>
   10014:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   10018:	ldr	x19, [x19, #4024]
   1001c:	b	10034 <PyInit__decimal@@Base+0x9520>
   10020:	mov	x19, xzr
   10024:	b	1003c <PyInit__decimal@@Base+0x9528>
   10028:	bl	915c <PyInit__decimal@@Base+0x2648>
   1002c:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   10030:	ldr	x19, [x19, #3976]
   10034:	ldr	x0, [x29, #24]
   10038:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   1003c:	mov	x0, x19
   10040:	ldr	x19, [sp, #16]
   10044:	ldp	x29, x30, [sp], #32
   10048:	ret
   1004c:	stp	x29, x30, [sp, #-32]!
   10050:	str	x19, [sp, #16]
   10054:	mov	x29, sp
   10058:	mov	x2, x1
   1005c:	mov	x3, x0
   10060:	add	x1, x29, #0x18
   10064:	mov	w0, #0x1                   	// #1
   10068:	bl	858c <PyInit__decimal@@Base+0x1a78>
   1006c:	cbz	w0, 10090 <PyInit__decimal@@Base+0x957c>
   10070:	ldr	x8, [x29, #24]
   10074:	add	x0, x8, #0x18
   10078:	bl	183a4 <PyInit__decimal@@Base+0x11890>
   1007c:	cbz	w0, 10098 <PyInit__decimal@@Base+0x9584>
   10080:	bl	9140 <PyInit__decimal@@Base+0x262c>
   10084:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   10088:	ldr	x19, [x19, #4024]
   1008c:	b	100a4 <PyInit__decimal@@Base+0x9590>
   10090:	mov	x19, xzr
   10094:	b	100ac <PyInit__decimal@@Base+0x9598>
   10098:	bl	915c <PyInit__decimal@@Base+0x2648>
   1009c:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   100a0:	ldr	x19, [x19, #3976]
   100a4:	ldr	x0, [x29, #24]
   100a8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   100ac:	mov	x0, x19
   100b0:	ldr	x19, [sp, #16]
   100b4:	ldp	x29, x30, [sp], #32
   100b8:	ret
   100bc:	stp	x29, x30, [sp, #-32]!
   100c0:	str	x19, [sp, #16]
   100c4:	mov	x29, sp
   100c8:	mov	x2, x1
   100cc:	mov	x3, x0
   100d0:	add	x1, x29, #0x18
   100d4:	mov	w0, #0x1                   	// #1
   100d8:	bl	858c <PyInit__decimal@@Base+0x1a78>
   100dc:	cbz	w0, 10100 <PyInit__decimal@@Base+0x95ec>
   100e0:	ldr	x8, [x29, #24]
   100e4:	add	x0, x8, #0x18
   100e8:	bl	183b0 <PyInit__decimal@@Base+0x1189c>
   100ec:	cbz	w0, 10108 <PyInit__decimal@@Base+0x95f4>
   100f0:	bl	9140 <PyInit__decimal@@Base+0x262c>
   100f4:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   100f8:	ldr	x19, [x19, #4024]
   100fc:	b	10114 <PyInit__decimal@@Base+0x9600>
   10100:	mov	x19, xzr
   10104:	b	1011c <PyInit__decimal@@Base+0x9608>
   10108:	bl	915c <PyInit__decimal@@Base+0x2648>
   1010c:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   10110:	ldr	x19, [x19, #3976]
   10114:	ldr	x0, [x29, #24]
   10118:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   1011c:	mov	x0, x19
   10120:	ldr	x19, [sp, #16]
   10124:	ldp	x29, x30, [sp], #32
   10128:	ret
   1012c:	stp	x29, x30, [sp, #-32]!
   10130:	str	x19, [sp, #16]
   10134:	mov	x29, sp
   10138:	mov	x2, x1
   1013c:	mov	x3, x0
   10140:	add	x1, x29, #0x18
   10144:	mov	w0, #0x1                   	// #1
   10148:	bl	858c <PyInit__decimal@@Base+0x1a78>
   1014c:	cbz	w0, 10170 <PyInit__decimal@@Base+0x965c>
   10150:	ldr	x8, [x29, #24]
   10154:	add	x0, x8, #0x18
   10158:	bl	183bc <PyInit__decimal@@Base+0x118a8>
   1015c:	cbz	w0, 10178 <PyInit__decimal@@Base+0x9664>
   10160:	bl	9140 <PyInit__decimal@@Base+0x262c>
   10164:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   10168:	ldr	x19, [x19, #4024]
   1016c:	b	10184 <PyInit__decimal@@Base+0x9670>
   10170:	mov	x19, xzr
   10174:	b	1018c <PyInit__decimal@@Base+0x9678>
   10178:	bl	915c <PyInit__decimal@@Base+0x2648>
   1017c:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   10180:	ldr	x19, [x19, #3976]
   10184:	ldr	x0, [x29, #24]
   10188:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   1018c:	mov	x0, x19
   10190:	ldr	x19, [sp, #16]
   10194:	ldp	x29, x30, [sp], #32
   10198:	ret
   1019c:	stp	x29, x30, [sp, #-32]!
   101a0:	str	x19, [sp, #16]
   101a4:	mov	x29, sp
   101a8:	mov	x19, x0
   101ac:	mov	x2, x1
   101b0:	add	x1, x29, #0x18
   101b4:	mov	w0, #0x1                   	// #1
   101b8:	mov	x3, x19
   101bc:	bl	858c <PyInit__decimal@@Base+0x1a78>
   101c0:	cbz	w0, 101e8 <PyInit__decimal@@Base+0x96d4>
   101c4:	ldr	x8, [x29, #24]
   101c8:	add	x1, x19, #0x10
   101cc:	add	x0, x8, #0x18
   101d0:	bl	18464 <PyInit__decimal@@Base+0x11950>
   101d4:	cbz	w0, 101f0 <PyInit__decimal@@Base+0x96dc>
   101d8:	bl	9140 <PyInit__decimal@@Base+0x262c>
   101dc:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   101e0:	ldr	x19, [x19, #4024]
   101e4:	b	101fc <PyInit__decimal@@Base+0x96e8>
   101e8:	mov	x19, xzr
   101ec:	b	10204 <PyInit__decimal@@Base+0x96f0>
   101f0:	bl	915c <PyInit__decimal@@Base+0x2648>
   101f4:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   101f8:	ldr	x19, [x19, #3976]
   101fc:	ldr	x0, [x29, #24]
   10200:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10204:	mov	x0, x19
   10208:	ldr	x19, [sp, #16]
   1020c:	ldp	x29, x30, [sp], #32
   10210:	ret
   10214:	stp	x29, x30, [sp, #-32]!
   10218:	str	x19, [sp, #16]
   1021c:	mov	x29, sp
   10220:	mov	x2, x1
   10224:	mov	x3, x0
   10228:	add	x1, x29, #0x18
   1022c:	mov	w0, #0x1                   	// #1
   10230:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10234:	cbz	w0, 10258 <PyInit__decimal@@Base+0x9744>
   10238:	ldr	x8, [x29, #24]
   1023c:	add	x0, x8, #0x18
   10240:	bl	183d4 <PyInit__decimal@@Base+0x118c0>
   10244:	cbz	w0, 10260 <PyInit__decimal@@Base+0x974c>
   10248:	bl	9140 <PyInit__decimal@@Base+0x262c>
   1024c:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   10250:	ldr	x19, [x19, #4024]
   10254:	b	1026c <PyInit__decimal@@Base+0x9758>
   10258:	mov	x19, xzr
   1025c:	b	10274 <PyInit__decimal@@Base+0x9760>
   10260:	bl	915c <PyInit__decimal@@Base+0x2648>
   10264:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   10268:	ldr	x19, [x19, #3976]
   1026c:	ldr	x0, [x29, #24]
   10270:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10274:	mov	x0, x19
   10278:	ldr	x19, [sp, #16]
   1027c:	ldp	x29, x30, [sp], #32
   10280:	ret
   10284:	sub	sp, sp, #0x30
   10288:	stp	x29, x30, [sp, #16]
   1028c:	stp	x20, x19, [sp, #32]
   10290:	add	x29, sp, #0x10
   10294:	mov	x19, x0
   10298:	mov	x2, x1
   1029c:	add	x1, sp, #0x8
   102a0:	mov	w0, #0x1                   	// #1
   102a4:	mov	x3, x19
   102a8:	bl	858c <PyInit__decimal@@Base+0x1a78>
   102ac:	cbz	w0, 102d0 <PyInit__decimal@@Base+0x97bc>
   102b0:	ldr	x20, [sp, #8]
   102b4:	mov	x1, x19
   102b8:	mov	x0, x20
   102bc:	bl	11270 <PyInit__decimal@@Base+0xa75c>
   102c0:	mov	x19, x0
   102c4:	mov	x0, x20
   102c8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   102cc:	b	102d4 <PyInit__decimal@@Base+0x97c0>
   102d0:	mov	x19, xzr
   102d4:	mov	x0, x19
   102d8:	ldp	x20, x19, [sp, #32]
   102dc:	ldp	x29, x30, [sp, #16]
   102e0:	add	sp, sp, #0x30
   102e4:	ret
   102e8:	stp	x29, x30, [sp, #-32]!
   102ec:	str	x19, [sp, #16]
   102f0:	mov	x29, sp
   102f4:	ldr	x0, [x1, #8]
   102f8:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
   102fc:	add	x8, x8, #0x318
   10300:	mov	x19, x1
   10304:	cmp	x0, x8
   10308:	b.eq	1031c <PyInit__decimal@@Base+0x9808>  // b.none
   1030c:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
   10310:	add	x1, x1, #0x318
   10314:	bl	6960 <PyType_IsSubtype@plt>
   10318:	cbz	w0, 10328 <PyInit__decimal@@Base+0x9814>
   1031c:	mov	x0, x19
   10320:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
   10324:	b	10344 <PyInit__decimal@@Base+0x9830>
   10328:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
   1032c:	ldr	x8, [x8, #3936]
   10330:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   10334:	add	x1, x1, #0x8d2
   10338:	ldr	x0, [x8]
   1033c:	bl	65f0 <PyErr_SetString@plt>
   10340:	mov	x19, xzr
   10344:	mov	x0, x19
   10348:	ldr	x19, [sp, #16]
   1034c:	ldp	x29, x30, [sp], #32
   10350:	ret
   10354:	sub	sp, sp, #0x40
   10358:	stp	x29, x30, [sp, #16]
   1035c:	str	x21, [sp, #32]
   10360:	stp	x20, x19, [sp, #48]
   10364:	add	x29, sp, #0x10
   10368:	mov	x19, x0
   1036c:	mov	x2, x1
   10370:	add	x1, x29, #0x18
   10374:	mov	w0, #0x1                   	// #1
   10378:	mov	x3, x19
   1037c:	stur	wzr, [x29, #-4]
   10380:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10384:	cbz	w0, 103d0 <PyInit__decimal@@Base+0x98bc>
   10388:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   1038c:	add	x0, x0, #0x318
   10390:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   10394:	mov	x20, x0
   10398:	cbz	x0, 103d8 <PyInit__decimal@@Base+0x98c4>
   1039c:	ldr	x21, [x29, #24]
   103a0:	add	x0, x20, #0x18
   103a4:	sub	x2, x29, #0x4
   103a8:	add	x1, x21, #0x18
   103ac:	bl	19bb0 <PyInit__decimal@@Base+0x1309c>
   103b0:	mov	x0, x21
   103b4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   103b8:	ldur	w1, [x29, #-4]
   103bc:	mov	x0, x19
   103c0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   103c4:	cbz	w0, 103e0 <PyInit__decimal@@Base+0x98cc>
   103c8:	mov	x0, x20
   103cc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   103d0:	mov	x20, xzr
   103d4:	b	103e0 <PyInit__decimal@@Base+0x98cc>
   103d8:	ldr	x0, [x29, #24]
   103dc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   103e0:	mov	x0, x20
   103e4:	ldp	x20, x19, [sp, #48]
   103e8:	ldr	x21, [sp, #32]
   103ec:	ldp	x29, x30, [sp, #16]
   103f0:	add	sp, sp, #0x40
   103f4:	ret
   103f8:	sub	sp, sp, #0x20
   103fc:	stp	x29, x30, [sp, #16]
   10400:	add	x29, sp, #0x10
   10404:	mov	x2, x1
   10408:	mov	x3, x0
   1040c:	add	x1, sp, #0x8
   10410:	mov	w0, #0x1                   	// #1
   10414:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10418:	ldr	x8, [sp, #8]
   1041c:	ldp	x29, x30, [sp, #16]
   10420:	cmp	w0, #0x0
   10424:	csel	x0, xzr, x8, eq  // eq = none
   10428:	add	sp, sp, #0x20
   1042c:	ret
   10430:	sub	sp, sp, #0x40
   10434:	stp	x29, x30, [sp, #16]
   10438:	str	x21, [sp, #32]
   1043c:	stp	x20, x19, [sp, #48]
   10440:	add	x29, sp, #0x10
   10444:	mov	x19, x0
   10448:	mov	x2, x1
   1044c:	add	x1, x29, #0x18
   10450:	mov	w0, #0x1                   	// #1
   10454:	mov	x3, x19
   10458:	stur	wzr, [x29, #-4]
   1045c:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10460:	cbz	w0, 104ac <PyInit__decimal@@Base+0x9998>
   10464:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   10468:	add	x0, x0, #0x318
   1046c:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   10470:	mov	x20, x0
   10474:	cbz	x0, 104b4 <PyInit__decimal@@Base+0x99a0>
   10478:	ldr	x21, [x29, #24]
   1047c:	add	x0, x20, #0x18
   10480:	sub	x2, x29, #0x4
   10484:	add	x1, x21, #0x18
   10488:	bl	19be4 <PyInit__decimal@@Base+0x130d0>
   1048c:	mov	x0, x21
   10490:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10494:	ldur	w1, [x29, #-4]
   10498:	mov	x0, x19
   1049c:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   104a0:	cbz	w0, 104bc <PyInit__decimal@@Base+0x99a8>
   104a4:	mov	x0, x20
   104a8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   104ac:	mov	x20, xzr
   104b0:	b	104bc <PyInit__decimal@@Base+0x99a8>
   104b4:	ldr	x0, [x29, #24]
   104b8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   104bc:	mov	x0, x20
   104c0:	ldp	x20, x19, [sp, #48]
   104c4:	ldr	x21, [sp, #32]
   104c8:	ldp	x29, x30, [sp, #16]
   104cc:	add	sp, sp, #0x40
   104d0:	ret
   104d4:	sub	sp, sp, #0x40
   104d8:	stp	x29, x30, [sp, #16]
   104dc:	str	x21, [sp, #32]
   104e0:	stp	x20, x19, [sp, #48]
   104e4:	add	x29, sp, #0x10
   104e8:	mov	x19, x0
   104ec:	mov	x2, x1
   104f0:	add	x1, x29, #0x18
   104f4:	mov	w0, #0x1                   	// #1
   104f8:	mov	x3, x19
   104fc:	stur	wzr, [x29, #-4]
   10500:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10504:	cbz	w0, 10554 <PyInit__decimal@@Base+0x9a40>
   10508:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   1050c:	add	x0, x0, #0x318
   10510:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   10514:	mov	x20, x0
   10518:	cbz	x0, 1055c <PyInit__decimal@@Base+0x9a48>
   1051c:	ldr	x21, [x29, #24]
   10520:	add	x0, x20, #0x18
   10524:	add	x2, x19, #0x10
   10528:	sub	x3, x29, #0x4
   1052c:	add	x1, x21, #0x18
   10530:	bl	1b014 <PyInit__decimal@@Base+0x14500>
   10534:	mov	x0, x21
   10538:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   1053c:	ldur	w1, [x29, #-4]
   10540:	mov	x0, x19
   10544:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   10548:	cbz	w0, 10564 <PyInit__decimal@@Base+0x9a50>
   1054c:	mov	x0, x20
   10550:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10554:	mov	x20, xzr
   10558:	b	10564 <PyInit__decimal@@Base+0x9a50>
   1055c:	ldr	x0, [x29, #24]
   10560:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10564:	mov	x0, x20
   10568:	ldp	x20, x19, [sp, #48]
   1056c:	ldr	x21, [sp, #32]
   10570:	ldp	x29, x30, [sp, #16]
   10574:	add	sp, sp, #0x40
   10578:	ret
   1057c:	sub	sp, sp, #0x40
   10580:	stp	x29, x30, [sp, #16]
   10584:	str	x21, [sp, #32]
   10588:	stp	x20, x19, [sp, #48]
   1058c:	add	x29, sp, #0x10
   10590:	mov	x19, x0
   10594:	mov	x2, x1
   10598:	add	x1, x29, #0x18
   1059c:	mov	w0, #0x1                   	// #1
   105a0:	mov	x3, x19
   105a4:	stur	wzr, [x29, #-4]
   105a8:	bl	858c <PyInit__decimal@@Base+0x1a78>
   105ac:	cbz	w0, 105fc <PyInit__decimal@@Base+0x9ae8>
   105b0:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   105b4:	add	x0, x0, #0x318
   105b8:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   105bc:	mov	x20, x0
   105c0:	cbz	x0, 10604 <PyInit__decimal@@Base+0x9af0>
   105c4:	ldr	x21, [x29, #24]
   105c8:	add	x0, x20, #0x18
   105cc:	add	x2, x19, #0x10
   105d0:	sub	x3, x29, #0x4
   105d4:	add	x1, x21, #0x18
   105d8:	bl	1ae20 <PyInit__decimal@@Base+0x1430c>
   105dc:	mov	x0, x21
   105e0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   105e4:	ldur	w1, [x29, #-4]
   105e8:	mov	x0, x19
   105ec:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   105f0:	cbz	w0, 1060c <PyInit__decimal@@Base+0x9af8>
   105f4:	mov	x0, x20
   105f8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   105fc:	mov	x20, xzr
   10600:	b	1060c <PyInit__decimal@@Base+0x9af8>
   10604:	ldr	x0, [x29, #24]
   10608:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   1060c:	mov	x0, x20
   10610:	ldp	x20, x19, [sp, #48]
   10614:	ldr	x21, [sp, #32]
   10618:	ldp	x29, x30, [sp, #16]
   1061c:	add	sp, sp, #0x40
   10620:	ret
   10624:	sub	sp, sp, #0x30
   10628:	stp	x29, x30, [sp, #16]
   1062c:	stp	x20, x19, [sp, #32]
   10630:	add	x29, sp, #0x10
   10634:	mov	x19, x0
   10638:	mov	x2, x1
   1063c:	add	x1, sp, #0x8
   10640:	mov	w0, #0x1                   	// #1
   10644:	mov	x3, x19
   10648:	bl	858c <PyInit__decimal@@Base+0x1a78>
   1064c:	cbz	w0, 10678 <PyInit__decimal@@Base+0x9b64>
   10650:	ldr	x20, [sp, #8]
   10654:	add	x1, x19, #0x10
   10658:	add	x0, x20, #0x18
   1065c:	bl	1ad2c <PyInit__decimal@@Base+0x14218>
   10660:	mov	x19, x0
   10664:	mov	x0, x20
   10668:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   1066c:	mov	x0, x19
   10670:	bl	6900 <PyUnicode_FromString@plt>
   10674:	b	1067c <PyInit__decimal@@Base+0x9b68>
   10678:	mov	x0, xzr
   1067c:	ldp	x20, x19, [sp, #32]
   10680:	ldp	x29, x30, [sp, #16]
   10684:	add	sp, sp, #0x30
   10688:	ret
   1068c:	sub	sp, sp, #0x30
   10690:	stp	x29, x30, [sp, #16]
   10694:	stp	x20, x19, [sp, #32]
   10698:	add	x29, sp, #0x10
   1069c:	mov	x19, x0
   106a0:	mov	x2, x1
   106a4:	add	x1, sp, #0x8
   106a8:	mov	w0, #0x1                   	// #1
   106ac:	mov	x3, x19
   106b0:	bl	858c <PyInit__decimal@@Base+0x1a78>
   106b4:	cbz	w0, 10708 <PyInit__decimal@@Base+0x9bf4>
   106b8:	ldr	x20, [sp, #8]
   106bc:	ldr	w2, [x19, #80]
   106c0:	mov	x0, sp
   106c4:	add	x1, x20, #0x18
   106c8:	bl	160e8 <PyInit__decimal@@Base+0xf5d4>
   106cc:	mov	x19, x0
   106d0:	mov	x0, x20
   106d4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   106d8:	tbnz	x19, #63, 10704 <PyInit__decimal@@Base+0x9bf0>
   106dc:	ldr	x0, [sp]
   106e0:	mov	x1, x19
   106e4:	bl	8e78 <PyInit__decimal@@Base+0x2364>
   106e8:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   106ec:	ldr	x9, [x8, #1376]
   106f0:	ldr	x8, [sp]
   106f4:	mov	x19, x0
   106f8:	mov	x0, x8
   106fc:	blr	x9
   10700:	b	1070c <PyInit__decimal@@Base+0x9bf8>
   10704:	bl	6580 <PyErr_NoMemory@plt>
   10708:	mov	x19, xzr
   1070c:	mov	x0, x19
   10710:	ldp	x20, x19, [sp, #32]
   10714:	ldp	x29, x30, [sp, #16]
   10718:	add	sp, sp, #0x30
   1071c:	ret
   10720:	sub	sp, sp, #0x30
   10724:	stp	x29, x30, [sp, #16]
   10728:	stp	x20, x19, [sp, #32]
   1072c:	add	x29, sp, #0x10
   10730:	mov	x19, x0
   10734:	mov	x2, x1
   10738:	add	x1, sp, #0x8
   1073c:	mov	w0, #0x1                   	// #1
   10740:	mov	x3, x19
   10744:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10748:	cbz	w0, 1079c <PyInit__decimal@@Base+0x9c88>
   1074c:	ldr	x20, [sp, #8]
   10750:	ldr	w2, [x19, #80]
   10754:	mov	x0, sp
   10758:	add	x1, x20, #0x18
   1075c:	bl	1610c <PyInit__decimal@@Base+0xf5f8>
   10760:	mov	x19, x0
   10764:	mov	x0, x20
   10768:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   1076c:	tbnz	x19, #63, 10798 <PyInit__decimal@@Base+0x9c84>
   10770:	ldr	x0, [sp]
   10774:	mov	x1, x19
   10778:	bl	8e78 <PyInit__decimal@@Base+0x2364>
   1077c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   10780:	ldr	x9, [x8, #1376]
   10784:	ldr	x8, [sp]
   10788:	mov	x19, x0
   1078c:	mov	x0, x8
   10790:	blr	x9
   10794:	b	107a0 <PyInit__decimal@@Base+0x9c8c>
   10798:	bl	6580 <PyErr_NoMemory@plt>
   1079c:	mov	x19, xzr
   107a0:	mov	x0, x19
   107a4:	ldp	x20, x19, [sp, #32]
   107a8:	ldp	x29, x30, [sp, #16]
   107ac:	add	sp, sp, #0x30
   107b0:	ret
   107b4:	sub	sp, sp, #0x50
   107b8:	stp	x29, x30, [sp, #32]
   107bc:	str	x21, [sp, #48]
   107c0:	stp	x20, x19, [sp, #64]
   107c4:	add	x29, sp, #0x20
   107c8:	mov	x8, x1
   107cc:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   107d0:	mov	x19, x0
   107d4:	add	x1, x1, #0x9fa
   107d8:	add	x2, x29, #0x18
   107dc:	sub	x3, x29, #0x8
   107e0:	mov	x0, x8
   107e4:	bl	6880 <PyArg_ParseTuple@plt>
   107e8:	cbz	w0, 10854 <PyInit__decimal@@Base+0x9d40>
   107ec:	ldr	x2, [x29, #24]
   107f0:	add	x1, sp, #0x10
   107f4:	mov	w0, #0x1                   	// #1
   107f8:	mov	x3, x19
   107fc:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10800:	cbz	w0, 10854 <PyInit__decimal@@Base+0x9d40>
   10804:	ldur	x2, [x29, #-8]
   10808:	add	x1, sp, #0x8
   1080c:	mov	w0, #0x1                   	// #1
   10810:	mov	x3, x19
   10814:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10818:	cbz	w0, 1085c <PyInit__decimal@@Base+0x9d48>
   1081c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   10820:	add	x0, x0, #0x318
   10824:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   10828:	mov	x19, x0
   1082c:	cbz	x0, 1086c <PyInit__decimal@@Base+0x9d58>
   10830:	ldp	x21, x20, [sp, #8]
   10834:	add	x0, x19, #0x18
   10838:	add	x1, x20, #0x18
   1083c:	add	x2, x21, #0x18
   10840:	bl	1a124 <PyInit__decimal@@Base+0x13610>
   10844:	mov	x0, x20
   10848:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   1084c:	mov	x0, x21
   10850:	b	10878 <PyInit__decimal@@Base+0x9d64>
   10854:	mov	x19, xzr
   10858:	b	1087c <PyInit__decimal@@Base+0x9d68>
   1085c:	ldr	x0, [sp, #16]
   10860:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10864:	mov	x19, xzr
   10868:	b	1087c <PyInit__decimal@@Base+0x9d68>
   1086c:	ldr	x0, [sp, #16]
   10870:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10874:	ldr	x0, [sp, #8]
   10878:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   1087c:	mov	x0, x19
   10880:	ldp	x20, x19, [sp, #64]
   10884:	ldr	x21, [sp, #48]
   10888:	ldp	x29, x30, [sp, #32]
   1088c:	add	sp, sp, #0x50
   10890:	ret
   10894:	sub	sp, sp, #0x50
   10898:	stp	x29, x30, [sp, #32]
   1089c:	str	x21, [sp, #48]
   108a0:	stp	x20, x19, [sp, #64]
   108a4:	add	x29, sp, #0x20
   108a8:	mov	x8, x1
   108ac:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   108b0:	mov	x19, x0
   108b4:	add	x1, x1, #0x9fa
   108b8:	add	x2, x29, #0x18
   108bc:	sub	x3, x29, #0x8
   108c0:	mov	x0, x8
   108c4:	bl	6880 <PyArg_ParseTuple@plt>
   108c8:	cbz	w0, 10934 <PyInit__decimal@@Base+0x9e20>
   108cc:	ldr	x2, [x29, #24]
   108d0:	add	x1, sp, #0x10
   108d4:	mov	w0, #0x1                   	// #1
   108d8:	mov	x3, x19
   108dc:	bl	858c <PyInit__decimal@@Base+0x1a78>
   108e0:	cbz	w0, 10934 <PyInit__decimal@@Base+0x9e20>
   108e4:	ldur	x2, [x29, #-8]
   108e8:	add	x1, sp, #0x8
   108ec:	mov	w0, #0x1                   	// #1
   108f0:	mov	x3, x19
   108f4:	bl	858c <PyInit__decimal@@Base+0x1a78>
   108f8:	cbz	w0, 1093c <PyInit__decimal@@Base+0x9e28>
   108fc:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   10900:	add	x0, x0, #0x318
   10904:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   10908:	mov	x19, x0
   1090c:	cbz	x0, 1094c <PyInit__decimal@@Base+0x9e38>
   10910:	ldp	x21, x20, [sp, #8]
   10914:	add	x0, x19, #0x18
   10918:	add	x1, x20, #0x18
   1091c:	add	x2, x21, #0x18
   10920:	bl	1a1cc <PyInit__decimal@@Base+0x136b8>
   10924:	mov	x0, x20
   10928:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   1092c:	mov	x0, x21
   10930:	b	10958 <PyInit__decimal@@Base+0x9e44>
   10934:	mov	x19, xzr
   10938:	b	1095c <PyInit__decimal@@Base+0x9e48>
   1093c:	ldr	x0, [sp, #16]
   10940:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10944:	mov	x19, xzr
   10948:	b	1095c <PyInit__decimal@@Base+0x9e48>
   1094c:	ldr	x0, [sp, #16]
   10950:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10954:	ldr	x0, [sp, #8]
   10958:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   1095c:	mov	x0, x19
   10960:	ldp	x20, x19, [sp, #64]
   10964:	ldr	x21, [sp, #48]
   10968:	ldp	x29, x30, [sp, #32]
   1096c:	add	sp, sp, #0x50
   10970:	ret
   10974:	sub	sp, sp, #0x60
   10978:	stp	x29, x30, [sp, #48]
   1097c:	stp	x22, x21, [sp, #64]
   10980:	stp	x20, x19, [sp, #80]
   10984:	add	x29, sp, #0x30
   10988:	mov	x8, x1
   1098c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   10990:	mov	x19, x0
   10994:	add	x1, x1, #0x9fa
   10998:	sub	x2, x29, #0x8
   1099c:	sub	x3, x29, #0x10
   109a0:	mov	x0, x8
   109a4:	str	wzr, [sp, #12]
   109a8:	bl	6880 <PyArg_ParseTuple@plt>
   109ac:	cbz	w0, 10a3c <PyInit__decimal@@Base+0x9f28>
   109b0:	ldur	x2, [x29, #-8]
   109b4:	add	x1, sp, #0x18
   109b8:	mov	w0, #0x1                   	// #1
   109bc:	mov	x3, x19
   109c0:	bl	858c <PyInit__decimal@@Base+0x1a78>
   109c4:	cbz	w0, 10a3c <PyInit__decimal@@Base+0x9f28>
   109c8:	ldur	x2, [x29, #-16]
   109cc:	add	x1, sp, #0x10
   109d0:	mov	w0, #0x1                   	// #1
   109d4:	mov	x3, x19
   109d8:	bl	858c <PyInit__decimal@@Base+0x1a78>
   109dc:	cbz	w0, 10a34 <PyInit__decimal@@Base+0x9f20>
   109e0:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   109e4:	add	x0, x0, #0x318
   109e8:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   109ec:	mov	x20, x0
   109f0:	cbz	x0, 10a58 <PyInit__decimal@@Base+0x9f44>
   109f4:	ldp	x22, x21, [sp, #16]
   109f8:	add	x0, x20, #0x18
   109fc:	add	x3, sp, #0xc
   10a00:	add	x1, x21, #0x18
   10a04:	add	x2, x22, #0x18
   10a08:	bl	19c24 <PyInit__decimal@@Base+0x13110>
   10a0c:	mov	x0, x21
   10a10:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10a14:	mov	x0, x22
   10a18:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10a1c:	ldr	w1, [sp, #12]
   10a20:	mov	x0, x19
   10a24:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   10a28:	cbz	w0, 10a40 <PyInit__decimal@@Base+0x9f2c>
   10a2c:	mov	x0, x20
   10a30:	b	10a38 <PyInit__decimal@@Base+0x9f24>
   10a34:	ldr	x0, [sp, #24]
   10a38:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10a3c:	mov	x20, xzr
   10a40:	mov	x0, x20
   10a44:	ldp	x20, x19, [sp, #80]
   10a48:	ldp	x22, x21, [sp, #64]
   10a4c:	ldp	x29, x30, [sp, #48]
   10a50:	add	sp, sp, #0x60
   10a54:	ret
   10a58:	ldr	x0, [sp, #24]
   10a5c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10a60:	ldr	x0, [sp, #16]
   10a64:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10a68:	b	10a40 <PyInit__decimal@@Base+0x9f2c>
   10a6c:	sub	sp, sp, #0x50
   10a70:	stp	x29, x30, [sp, #48]
   10a74:	stp	x20, x19, [sp, #64]
   10a78:	add	x29, sp, #0x30
   10a7c:	mov	x8, x1
   10a80:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   10a84:	mov	x19, x0
   10a88:	add	x1, x1, #0x9fa
   10a8c:	sub	x2, x29, #0x8
   10a90:	sub	x3, x29, #0x10
   10a94:	mov	x0, x8
   10a98:	str	wzr, [sp, #12]
   10a9c:	bl	6880 <PyArg_ParseTuple@plt>
   10aa0:	cbz	w0, 10b34 <PyInit__decimal@@Base+0xa020>
   10aa4:	ldur	x2, [x29, #-8]
   10aa8:	add	x1, sp, #0x18
   10aac:	mov	w0, #0x1                   	// #1
   10ab0:	mov	x3, x19
   10ab4:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10ab8:	cbz	w0, 10b34 <PyInit__decimal@@Base+0xa020>
   10abc:	ldur	x2, [x29, #-16]
   10ac0:	add	x1, sp, #0x10
   10ac4:	mov	w0, #0x1                   	// #1
   10ac8:	mov	x3, x19
   10acc:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10ad0:	cbz	w0, 10b2c <PyInit__decimal@@Base+0xa018>
   10ad4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   10ad8:	add	x0, x0, #0x318
   10adc:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   10ae0:	mov	x20, x0
   10ae4:	cbz	x0, 10b4c <PyInit__decimal@@Base+0xa038>
   10ae8:	ldp	x9, x8, [sp, #16]
   10aec:	add	x0, x20, #0x18
   10af0:	add	x3, x19, #0x10
   10af4:	add	x4, sp, #0xc
   10af8:	add	x1, x8, #0x18
   10afc:	add	x2, x9, #0x18
   10b00:	bl	1a7bc <PyInit__decimal@@Base+0x13ca8>
   10b04:	ldr	x0, [sp, #24]
   10b08:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10b0c:	ldr	x0, [sp, #16]
   10b10:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10b14:	ldr	w1, [sp, #12]
   10b18:	mov	x0, x19
   10b1c:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   10b20:	cbz	w0, 10b38 <PyInit__decimal@@Base+0xa024>
   10b24:	mov	x0, x20
   10b28:	b	10b30 <PyInit__decimal@@Base+0xa01c>
   10b2c:	ldr	x0, [sp, #24]
   10b30:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10b34:	mov	x20, xzr
   10b38:	mov	x0, x20
   10b3c:	ldp	x20, x19, [sp, #64]
   10b40:	ldp	x29, x30, [sp, #48]
   10b44:	add	sp, sp, #0x50
   10b48:	ret
   10b4c:	ldr	x0, [sp, #24]
   10b50:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10b54:	ldr	x0, [sp, #16]
   10b58:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10b5c:	b	10b38 <PyInit__decimal@@Base+0xa024>
   10b60:	sub	sp, sp, #0x50
   10b64:	stp	x29, x30, [sp, #48]
   10b68:	stp	x20, x19, [sp, #64]
   10b6c:	add	x29, sp, #0x30
   10b70:	mov	x8, x1
   10b74:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   10b78:	mov	x19, x0
   10b7c:	add	x1, x1, #0x9fa
   10b80:	sub	x2, x29, #0x8
   10b84:	sub	x3, x29, #0x10
   10b88:	mov	x0, x8
   10b8c:	str	wzr, [sp, #12]
   10b90:	bl	6880 <PyArg_ParseTuple@plt>
   10b94:	cbz	w0, 10c28 <PyInit__decimal@@Base+0xa114>
   10b98:	ldur	x2, [x29, #-8]
   10b9c:	add	x1, sp, #0x18
   10ba0:	mov	w0, #0x1                   	// #1
   10ba4:	mov	x3, x19
   10ba8:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10bac:	cbz	w0, 10c28 <PyInit__decimal@@Base+0xa114>
   10bb0:	ldur	x2, [x29, #-16]
   10bb4:	add	x1, sp, #0x10
   10bb8:	mov	w0, #0x1                   	// #1
   10bbc:	mov	x3, x19
   10bc0:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10bc4:	cbz	w0, 10c20 <PyInit__decimal@@Base+0xa10c>
   10bc8:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   10bcc:	add	x0, x0, #0x318
   10bd0:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   10bd4:	mov	x20, x0
   10bd8:	cbz	x0, 10c40 <PyInit__decimal@@Base+0xa12c>
   10bdc:	ldp	x9, x8, [sp, #16]
   10be0:	add	x0, x20, #0x18
   10be4:	add	x3, x19, #0x10
   10be8:	add	x4, sp, #0xc
   10bec:	add	x1, x8, #0x18
   10bf0:	add	x2, x9, #0x18
   10bf4:	bl	1b0b0 <PyInit__decimal@@Base+0x1459c>
   10bf8:	ldr	x0, [sp, #24]
   10bfc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10c00:	ldr	x0, [sp, #16]
   10c04:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10c08:	ldr	w1, [sp, #12]
   10c0c:	mov	x0, x19
   10c10:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   10c14:	cbz	w0, 10c2c <PyInit__decimal@@Base+0xa118>
   10c18:	mov	x0, x20
   10c1c:	b	10c24 <PyInit__decimal@@Base+0xa110>
   10c20:	ldr	x0, [sp, #24]
   10c24:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10c28:	mov	x20, xzr
   10c2c:	mov	x0, x20
   10c30:	ldp	x20, x19, [sp, #64]
   10c34:	ldp	x29, x30, [sp, #48]
   10c38:	add	sp, sp, #0x50
   10c3c:	ret
   10c40:	ldr	x0, [sp, #24]
   10c44:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10c48:	ldr	x0, [sp, #16]
   10c4c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10c50:	b	10c2c <PyInit__decimal@@Base+0xa118>
   10c54:	sub	sp, sp, #0x50
   10c58:	stp	x29, x30, [sp, #48]
   10c5c:	stp	x20, x19, [sp, #64]
   10c60:	add	x29, sp, #0x30
   10c64:	mov	x8, x1
   10c68:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   10c6c:	mov	x19, x0
   10c70:	add	x1, x1, #0x9fa
   10c74:	sub	x2, x29, #0x8
   10c78:	sub	x3, x29, #0x10
   10c7c:	mov	x0, x8
   10c80:	str	wzr, [sp, #12]
   10c84:	bl	6880 <PyArg_ParseTuple@plt>
   10c88:	cbz	w0, 10d1c <PyInit__decimal@@Base+0xa208>
   10c8c:	ldur	x2, [x29, #-8]
   10c90:	add	x1, sp, #0x18
   10c94:	mov	w0, #0x1                   	// #1
   10c98:	mov	x3, x19
   10c9c:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10ca0:	cbz	w0, 10d1c <PyInit__decimal@@Base+0xa208>
   10ca4:	ldur	x2, [x29, #-16]
   10ca8:	add	x1, sp, #0x10
   10cac:	mov	w0, #0x1                   	// #1
   10cb0:	mov	x3, x19
   10cb4:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10cb8:	cbz	w0, 10d14 <PyInit__decimal@@Base+0xa200>
   10cbc:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   10cc0:	add	x0, x0, #0x318
   10cc4:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   10cc8:	mov	x20, x0
   10ccc:	cbz	x0, 10d34 <PyInit__decimal@@Base+0xa220>
   10cd0:	ldp	x9, x8, [sp, #16]
   10cd4:	add	x0, x20, #0x18
   10cd8:	add	x3, x19, #0x10
   10cdc:	add	x4, sp, #0xc
   10ce0:	add	x1, x8, #0x18
   10ce4:	add	x2, x9, #0x18
   10ce8:	bl	1baec <PyInit__decimal@@Base+0x14fd8>
   10cec:	ldr	x0, [sp, #24]
   10cf0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10cf4:	ldr	x0, [sp, #16]
   10cf8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10cfc:	ldr	w1, [sp, #12]
   10d00:	mov	x0, x19
   10d04:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   10d08:	cbz	w0, 10d20 <PyInit__decimal@@Base+0xa20c>
   10d0c:	mov	x0, x20
   10d10:	b	10d18 <PyInit__decimal@@Base+0xa204>
   10d14:	ldr	x0, [sp, #24]
   10d18:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10d1c:	mov	x20, xzr
   10d20:	mov	x0, x20
   10d24:	ldp	x20, x19, [sp, #64]
   10d28:	ldp	x29, x30, [sp, #48]
   10d2c:	add	sp, sp, #0x50
   10d30:	ret
   10d34:	ldr	x0, [sp, #24]
   10d38:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10d3c:	ldr	x0, [sp, #16]
   10d40:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10d44:	b	10d20 <PyInit__decimal@@Base+0xa20c>
   10d48:	sub	sp, sp, #0x50
   10d4c:	stp	x29, x30, [sp, #48]
   10d50:	stp	x20, x19, [sp, #64]
   10d54:	add	x29, sp, #0x30
   10d58:	mov	x8, x1
   10d5c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   10d60:	mov	x19, x0
   10d64:	add	x1, x1, #0x9fa
   10d68:	sub	x2, x29, #0x8
   10d6c:	sub	x3, x29, #0x10
   10d70:	mov	x0, x8
   10d74:	str	wzr, [sp, #12]
   10d78:	bl	6880 <PyArg_ParseTuple@plt>
   10d7c:	cbz	w0, 10e10 <PyInit__decimal@@Base+0xa2fc>
   10d80:	ldur	x2, [x29, #-8]
   10d84:	add	x1, sp, #0x18
   10d88:	mov	w0, #0x1                   	// #1
   10d8c:	mov	x3, x19
   10d90:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10d94:	cbz	w0, 10e10 <PyInit__decimal@@Base+0xa2fc>
   10d98:	ldur	x2, [x29, #-16]
   10d9c:	add	x1, sp, #0x10
   10da0:	mov	w0, #0x1                   	// #1
   10da4:	mov	x3, x19
   10da8:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10dac:	cbz	w0, 10e08 <PyInit__decimal@@Base+0xa2f4>
   10db0:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   10db4:	add	x0, x0, #0x318
   10db8:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   10dbc:	mov	x20, x0
   10dc0:	cbz	x0, 10e28 <PyInit__decimal@@Base+0xa314>
   10dc4:	ldp	x9, x8, [sp, #16]
   10dc8:	add	x0, x20, #0x18
   10dcc:	add	x3, x19, #0x10
   10dd0:	add	x4, sp, #0xc
   10dd4:	add	x1, x8, #0x18
   10dd8:	add	x2, x9, #0x18
   10ddc:	bl	1b4dc <PyInit__decimal@@Base+0x149c8>
   10de0:	ldr	x0, [sp, #24]
   10de4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10de8:	ldr	x0, [sp, #16]
   10dec:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10df0:	ldr	w1, [sp, #12]
   10df4:	mov	x0, x19
   10df8:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   10dfc:	cbz	w0, 10e14 <PyInit__decimal@@Base+0xa300>
   10e00:	mov	x0, x20
   10e04:	b	10e0c <PyInit__decimal@@Base+0xa2f8>
   10e08:	ldr	x0, [sp, #24]
   10e0c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10e10:	mov	x20, xzr
   10e14:	mov	x0, x20
   10e18:	ldp	x20, x19, [sp, #64]
   10e1c:	ldp	x29, x30, [sp, #48]
   10e20:	add	sp, sp, #0x50
   10e24:	ret
   10e28:	ldr	x0, [sp, #24]
   10e2c:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10e30:	ldr	x0, [sp, #16]
   10e34:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10e38:	b	10e14 <PyInit__decimal@@Base+0xa300>
   10e3c:	sub	sp, sp, #0x40
   10e40:	stp	x29, x30, [sp, #32]
   10e44:	stp	x20, x19, [sp, #48]
   10e48:	add	x29, sp, #0x20
   10e4c:	mov	x8, x1
   10e50:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   10e54:	mov	x19, x0
   10e58:	add	x1, x1, #0x9fa
   10e5c:	sub	x2, x29, #0x8
   10e60:	add	x3, sp, #0x10
   10e64:	mov	x0, x8
   10e68:	bl	6880 <PyArg_ParseTuple@plt>
   10e6c:	cbz	w0, 10ec8 <PyInit__decimal@@Base+0xa3b4>
   10e70:	ldur	x2, [x29, #-8]
   10e74:	add	x1, sp, #0x8
   10e78:	mov	w0, #0x1                   	// #1
   10e7c:	mov	x3, x19
   10e80:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10e84:	cbz	w0, 10ec8 <PyInit__decimal@@Base+0xa3b4>
   10e88:	ldr	x2, [sp, #16]
   10e8c:	mov	x1, sp
   10e90:	mov	w0, #0x1                   	// #1
   10e94:	mov	x3, x19
   10e98:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10e9c:	ldr	x19, [sp, #8]
   10ea0:	cbz	w0, 10ed0 <PyInit__decimal@@Base+0xa3bc>
   10ea4:	ldr	x8, [sp]
   10ea8:	add	x0, x19, #0x18
   10eac:	add	x1, x8, #0x18
   10eb0:	bl	21dc0 <PyInit__decimal@@Base+0x1b2ac>
   10eb4:	cbz	w0, 10ee0 <PyInit__decimal@@Base+0xa3cc>
   10eb8:	bl	9140 <PyInit__decimal@@Base+0x262c>
   10ebc:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
   10ec0:	ldr	x20, [x20, #4024]
   10ec4:	b	10eec <PyInit__decimal@@Base+0xa3d8>
   10ec8:	mov	x20, xzr
   10ecc:	b	10efc <PyInit__decimal@@Base+0xa3e8>
   10ed0:	mov	x0, x19
   10ed4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10ed8:	mov	x20, xzr
   10edc:	b	10efc <PyInit__decimal@@Base+0xa3e8>
   10ee0:	bl	915c <PyInit__decimal@@Base+0x2648>
   10ee4:	adrp	x20, 3f000 <PyInit__decimal@@Base+0x384ec>
   10ee8:	ldr	x20, [x20, #3976]
   10eec:	mov	x0, x19
   10ef0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10ef4:	ldr	x0, [sp]
   10ef8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10efc:	mov	x0, x20
   10f00:	ldp	x20, x19, [sp, #48]
   10f04:	ldp	x29, x30, [sp, #32]
   10f08:	add	sp, sp, #0x40
   10f0c:	ret
   10f10:	sub	sp, sp, #0x50
   10f14:	stp	x29, x30, [sp, #48]
   10f18:	stp	x20, x19, [sp, #64]
   10f1c:	add	x29, sp, #0x30
   10f20:	mov	x8, x1
   10f24:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   10f28:	mov	x19, x0
   10f2c:	add	x1, x1, #0x9fa
   10f30:	sub	x2, x29, #0x8
   10f34:	sub	x3, x29, #0x10
   10f38:	mov	x0, x8
   10f3c:	str	wzr, [sp, #12]
   10f40:	bl	6880 <PyArg_ParseTuple@plt>
   10f44:	cbz	w0, 10fd8 <PyInit__decimal@@Base+0xa4c4>
   10f48:	ldur	x2, [x29, #-8]
   10f4c:	add	x1, sp, #0x18
   10f50:	mov	w0, #0x1                   	// #1
   10f54:	mov	x3, x19
   10f58:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10f5c:	cbz	w0, 10fd8 <PyInit__decimal@@Base+0xa4c4>
   10f60:	ldur	x2, [x29, #-16]
   10f64:	add	x1, sp, #0x10
   10f68:	mov	w0, #0x1                   	// #1
   10f6c:	mov	x3, x19
   10f70:	bl	858c <PyInit__decimal@@Base+0x1a78>
   10f74:	cbz	w0, 10fd0 <PyInit__decimal@@Base+0xa4bc>
   10f78:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   10f7c:	add	x0, x0, #0x318
   10f80:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   10f84:	mov	x20, x0
   10f88:	cbz	x0, 10ff0 <PyInit__decimal@@Base+0xa4dc>
   10f8c:	ldp	x9, x8, [sp, #16]
   10f90:	add	x0, x20, #0x18
   10f94:	add	x3, x19, #0x10
   10f98:	add	x4, sp, #0xc
   10f9c:	add	x1, x8, #0x18
   10fa0:	add	x2, x9, #0x18
   10fa4:	bl	1b77c <PyInit__decimal@@Base+0x14c68>
   10fa8:	ldr	x0, [sp, #24]
   10fac:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10fb0:	ldr	x0, [sp, #16]
   10fb4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10fb8:	ldr	w1, [sp, #12]
   10fbc:	mov	x0, x19
   10fc0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   10fc4:	cbz	w0, 10fdc <PyInit__decimal@@Base+0xa4c8>
   10fc8:	mov	x0, x20
   10fcc:	b	10fd4 <PyInit__decimal@@Base+0xa4c0>
   10fd0:	ldr	x0, [sp, #24]
   10fd4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10fd8:	mov	x20, xzr
   10fdc:	mov	x0, x20
   10fe0:	ldp	x20, x19, [sp, #64]
   10fe4:	ldp	x29, x30, [sp, #48]
   10fe8:	add	sp, sp, #0x50
   10fec:	ret
   10ff0:	ldr	x0, [sp, #24]
   10ff4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   10ff8:	ldr	x0, [sp, #16]
   10ffc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   11000:	b	10fdc <PyInit__decimal@@Base+0xa4c8>
   11004:	sub	sp, sp, #0x50
   11008:	stp	x29, x30, [sp, #48]
   1100c:	stp	x20, x19, [sp, #64]
   11010:	add	x29, sp, #0x30
   11014:	mov	x8, x1
   11018:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   1101c:	mov	x19, x0
   11020:	add	x1, x1, #0x9fa
   11024:	sub	x2, x29, #0x8
   11028:	sub	x3, x29, #0x10
   1102c:	mov	x0, x8
   11030:	str	wzr, [sp, #12]
   11034:	bl	6880 <PyArg_ParseTuple@plt>
   11038:	cbz	w0, 110cc <PyInit__decimal@@Base+0xa5b8>
   1103c:	ldur	x2, [x29, #-8]
   11040:	add	x1, sp, #0x18
   11044:	mov	w0, #0x1                   	// #1
   11048:	mov	x3, x19
   1104c:	bl	858c <PyInit__decimal@@Base+0x1a78>
   11050:	cbz	w0, 110cc <PyInit__decimal@@Base+0xa5b8>
   11054:	ldur	x2, [x29, #-16]
   11058:	add	x1, sp, #0x10
   1105c:	mov	w0, #0x1                   	// #1
   11060:	mov	x3, x19
   11064:	bl	858c <PyInit__decimal@@Base+0x1a78>
   11068:	cbz	w0, 110c4 <PyInit__decimal@@Base+0xa5b0>
   1106c:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   11070:	add	x0, x0, #0x318
   11074:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   11078:	mov	x20, x0
   1107c:	cbz	x0, 110e4 <PyInit__decimal@@Base+0xa5d0>
   11080:	ldp	x9, x8, [sp, #16]
   11084:	add	x0, x20, #0x18
   11088:	add	x3, x19, #0x10
   1108c:	add	x4, sp, #0xc
   11090:	add	x1, x8, #0x18
   11094:	add	x2, x9, #0x18
   11098:	bl	1b9bc <PyInit__decimal@@Base+0x14ea8>
   1109c:	ldr	x0, [sp, #24]
   110a0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   110a4:	ldr	x0, [sp, #16]
   110a8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   110ac:	ldr	w1, [sp, #12]
   110b0:	mov	x0, x19
   110b4:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   110b8:	cbz	w0, 110d0 <PyInit__decimal@@Base+0xa5bc>
   110bc:	mov	x0, x20
   110c0:	b	110c8 <PyInit__decimal@@Base+0xa5b4>
   110c4:	ldr	x0, [sp, #24]
   110c8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   110cc:	mov	x20, xzr
   110d0:	mov	x0, x20
   110d4:	ldp	x20, x19, [sp, #64]
   110d8:	ldp	x29, x30, [sp, #48]
   110dc:	add	sp, sp, #0x50
   110e0:	ret
   110e4:	ldr	x0, [sp, #24]
   110e8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   110ec:	ldr	x0, [sp, #16]
   110f0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   110f4:	b	110d0 <PyInit__decimal@@Base+0xa5bc>
   110f8:	stp	x29, x30, [sp, #-32]!
   110fc:	str	x19, [sp, #16]
   11100:	mov	x29, sp
   11104:	str	wzr, [x0, #44]
   11108:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   1110c:	ldr	x19, [x19, #4008]
   11110:	mov	x0, x19
   11114:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
   11118:	mov	x0, x19
   1111c:	ldr	x19, [sp, #16]
   11120:	ldp	x29, x30, [sp], #32
   11124:	ret
   11128:	stp	x29, x30, [sp, #-32]!
   1112c:	str	x19, [sp, #16]
   11130:	mov	x29, sp
   11134:	str	wzr, [x0, #40]
   11138:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   1113c:	ldr	x19, [x19, #4008]
   11140:	mov	x0, x19
   11144:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
   11148:	mov	x0, x19
   1114c:	ldr	x19, [sp, #16]
   11150:	ldp	x29, x30, [sp], #32
   11154:	ret
   11158:	sub	sp, sp, #0x40
   1115c:	stp	x29, x30, [sp, #16]
   11160:	str	x21, [sp, #32]
   11164:	stp	x20, x19, [sp, #48]
   11168:	add	x29, sp, #0x10
   1116c:	mov	x21, x0
   11170:	ldr	w0, [x0, #44]
   11174:	bl	1130c <PyInit__decimal@@Base+0xa7f8>
   11178:	cbz	x0, 111d4 <PyInit__decimal@@Base+0xa6c0>
   1117c:	mov	x19, x0
   11180:	ldr	w0, [x21, #40]
   11184:	bl	1130c <PyInit__decimal@@Base+0xa7f8>
   11188:	cbz	x0, 111dc <PyInit__decimal@@Base+0xa6c8>
   1118c:	ldp	w8, w7, [x21, #52]
   11190:	adrp	x9, 42000 <PyInit__decimal@@Base+0x3b4ec>
   11194:	sxtw	x8, w8
   11198:	add	x9, x9, #0x4e0
   1119c:	ldp	x1, x2, [x21, #8]
   111a0:	ldp	x5, x4, [x21, #24]
   111a4:	ldr	x3, [x9, x8, lsl #3]
   111a8:	ldr	w6, [x21, #80]
   111ac:	mov	x20, x0
   111b0:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
   111b4:	add	x0, x0, #0x8ed
   111b8:	stp	x19, x20, [sp]
   111bc:	bl	6770 <Py_BuildValue@plt>
   111c0:	mov	x21, x0
   111c4:	mov	x0, x19
   111c8:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   111cc:	mov	x19, x20
   111d0:	b	111e0 <PyInit__decimal@@Base+0xa6cc>
   111d4:	mov	x21, xzr
   111d8:	b	111e8 <PyInit__decimal@@Base+0xa6d4>
   111dc:	mov	x21, xzr
   111e0:	mov	x0, x19
   111e4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   111e8:	mov	x0, x21
   111ec:	ldp	x20, x19, [sp, #48]
   111f0:	ldr	x21, [sp, #32]
   111f4:	ldp	x29, x30, [sp, #16]
   111f8:	add	sp, sp, #0x40
   111fc:	ret
   11200:	stp	x29, x30, [sp, #-32]!
   11204:	str	x19, [sp, #16]
   11208:	mov	x29, sp
   1120c:	mov	x8, x1
   11210:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   11214:	mov	x19, x0
   11218:	add	x1, x1, #0x42c
   1121c:	add	x2, x29, #0x18
   11220:	mov	x0, x8
   11224:	str	xzr, [x29, #24]
   11228:	bl	6880 <PyArg_ParseTuple@plt>
   1122c:	cbz	w0, 11240 <PyInit__decimal@@Base+0xa72c>
   11230:	ldr	x0, [x29, #24]
   11234:	mov	x1, x19
   11238:	bl	1138c <PyInit__decimal@@Base+0xa878>
   1123c:	b	11244 <PyInit__decimal@@Base+0xa730>
   11240:	mov	x0, xzr
   11244:	ldr	x19, [sp, #16]
   11248:	ldp	x29, x30, [sp], #32
   1124c:	ret
   11250:	stp	x29, x30, [sp, #-16]!
   11254:	mov	x29, sp
   11258:	mov	x8, x0
   1125c:	mov	x0, x1
   11260:	mov	x1, x8
   11264:	bl	116e0 <PyInit__decimal@@Base+0xabcc>
   11268:	ldp	x29, x30, [sp], #16
   1126c:	ret
   11270:	sub	sp, sp, #0x40
   11274:	stp	x29, x30, [sp, #16]
   11278:	stp	x22, x21, [sp, #32]
   1127c:	stp	x20, x19, [sp, #48]
   11280:	add	x29, sp, #0x10
   11284:	mov	x22, x0
   11288:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   1128c:	add	x0, x0, #0x318
   11290:	mov	x20, x1
   11294:	stur	wzr, [x29, #-4]
   11298:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   1129c:	mov	x19, x0
   112a0:	cbz	x0, 112f4 <PyInit__decimal@@Base+0xa7e0>
   112a4:	add	x21, x19, #0x18
   112a8:	add	x1, x22, #0x18
   112ac:	sub	x2, x29, #0x4
   112b0:	mov	x0, x21
   112b4:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   112b8:	ldur	w1, [x29, #-4]
   112bc:	mov	x0, x20
   112c0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   112c4:	cbnz	w0, 112e8 <PyInit__decimal@@Base+0xa7d4>
   112c8:	add	x1, x20, #0x10
   112cc:	sub	x2, x29, #0x4
   112d0:	mov	x0, x21
   112d4:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   112d8:	ldur	w1, [x29, #-4]
   112dc:	mov	x0, x20
   112e0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   112e4:	cbz	w0, 112f4 <PyInit__decimal@@Base+0xa7e0>
   112e8:	mov	x0, x19
   112ec:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   112f0:	mov	x19, xzr
   112f4:	mov	x0, x19
   112f8:	ldp	x20, x19, [sp, #48]
   112fc:	ldp	x22, x21, [sp, #32]
   11300:	ldp	x29, x30, [sp, #16]
   11304:	add	sp, sp, #0x40
   11308:	ret
   1130c:	stp	x29, x30, [sp, #-48]!
   11310:	str	x21, [sp, #16]
   11314:	stp	x20, x19, [sp, #32]
   11318:	mov	x29, sp
   1131c:	mov	w20, w0
   11320:	mov	x0, xzr
   11324:	bl	6450 <PyList_New@plt>
   11328:	mov	x19, x0
   1132c:	cbz	x0, 11378 <PyInit__decimal@@Base+0xa864>
   11330:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
   11334:	ldr	x8, [x8, #2560]
   11338:	cbz	x8, 11378 <PyInit__decimal@@Base+0xa864>
   1133c:	adrp	x21, 40000 <PyInit__decimal@@Base+0x394ec>
   11340:	add	x21, x21, #0xa20
   11344:	b	11350 <PyInit__decimal@@Base+0xa83c>
   11348:	ldr	x8, [x21], #32
   1134c:	cbz	x8, 11378 <PyInit__decimal@@Base+0xa864>
   11350:	ldur	w8, [x21, #-16]
   11354:	tst	w8, w20
   11358:	b.eq	11348 <PyInit__decimal@@Base+0xa834>  // b.none
   1135c:	ldur	x1, [x21, #-8]
   11360:	mov	x0, x19
   11364:	bl	6710 <PyList_Append@plt>
   11368:	tbz	w0, #31, 11348 <PyInit__decimal@@Base+0xa834>
   1136c:	mov	x0, x19
   11370:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   11374:	mov	x19, xzr
   11378:	mov	x0, x19
   1137c:	ldp	x20, x19, [sp, #32]
   11380:	ldr	x21, [sp, #16]
   11384:	ldp	x29, x30, [sp], #48
   11388:	ret
   1138c:	stp	x29, x30, [sp, #-48]!
   11390:	str	x21, [sp, #16]
   11394:	stp	x20, x19, [sp, #32]
   11398:	mov	x29, sp
   1139c:	mov	x19, x1
   113a0:	cbz	x0, 1140c <PyInit__decimal@@Base+0xa8f8>
   113a4:	mov	x20, x0
   113a8:	ldr	x0, [x0, #8]
   113ac:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
   113b0:	add	x8, x8, #0x318
   113b4:	cmp	x0, x8
   113b8:	b.eq	113cc <PyInit__decimal@@Base+0xa8b8>  // b.none
   113bc:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
   113c0:	add	x1, x1, #0x318
   113c4:	bl	6960 <PyType_IsSubtype@plt>
   113c8:	cbz	w0, 1143c <PyInit__decimal@@Base+0xa928>
   113cc:	add	x21, x20, #0x18
   113d0:	mov	x0, x21
   113d4:	bl	1837c <PyInit__decimal@@Base+0x11868>
   113d8:	cbz	w0, 11418 <PyInit__decimal@@Base+0xa904>
   113dc:	ldr	x8, [x19, #16]
   113e0:	ldrsw	x9, [x19, #56]
   113e4:	ldr	x10, [x21, #16]
   113e8:	sub	x8, x8, x9
   113ec:	cmp	x10, x8
   113f0:	b.le	11418 <PyInit__decimal@@Base+0xa904>
   113f4:	mov	w1, #0x2                   	// #2
   113f8:	mov	x0, x19
   113fc:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   11400:	cbz	w0, 11474 <PyInit__decimal@@Base+0xa960>
   11404:	mov	x19, xzr
   11408:	b	11428 <PyInit__decimal@@Base+0xa914>
   1140c:	mov	x0, x19
   11410:	bl	11510 <PyInit__decimal@@Base+0xa9fc>
   11414:	b	11424 <PyInit__decimal@@Base+0xa910>
   11418:	mov	x0, x20
   1141c:	mov	x1, x19
   11420:	bl	11270 <PyInit__decimal@@Base+0xa75c>
   11424:	mov	x19, x0
   11428:	mov	x0, x19
   1142c:	ldp	x20, x19, [sp, #32]
   11430:	ldr	x21, [sp, #16]
   11434:	ldp	x29, x30, [sp], #48
   11438:	ret
   1143c:	ldr	x0, [x20, #8]
   11440:	ldr	x8, [x0, #168]
   11444:	tbnz	w8, #28, 11464 <PyInit__decimal@@Base+0xa950>
   11448:	tbnz	w8, #24, 1149c <PyInit__decimal@@Base+0xa988>
   1144c:	tst	x8, #0x6000000
   11450:	b.eq	114ac <PyInit__decimal@@Base+0xa998>  // b.none
   11454:	mov	x0, x20
   11458:	mov	x1, x19
   1145c:	bl	11664 <PyInit__decimal@@Base+0xab50>
   11460:	b	11424 <PyInit__decimal@@Base+0xa910>
   11464:	mov	x0, x20
   11468:	mov	x1, x19
   1146c:	bl	11580 <PyInit__decimal@@Base+0xaa6c>
   11470:	b	11424 <PyInit__decimal@@Base+0xa910>
   11474:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   11478:	add	x0, x0, #0x318
   1147c:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   11480:	mov	x19, x0
   11484:	cbz	x0, 11428 <PyInit__decimal@@Base+0xa914>
   11488:	add	x0, x19, #0x18
   1148c:	mov	w2, #0x4                   	// #4
   11490:	mov	w1, wzr
   11494:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   11498:	b	11428 <PyInit__decimal@@Base+0xa914>
   1149c:	mov	x0, x20
   114a0:	mov	x1, x19
   114a4:	bl	115d0 <PyInit__decimal@@Base+0xaabc>
   114a8:	b	11424 <PyInit__decimal@@Base+0xa910>
   114ac:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
   114b0:	ldr	x8, [x8, #3864]
   114b4:	cmp	x0, x8
   114b8:	b.eq	114cc <PyInit__decimal@@Base+0xa9b8>  // b.none
   114bc:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   114c0:	ldr	x1, [x1, #3864]
   114c4:	bl	6960 <PyType_IsSubtype@plt>
   114c8:	cbz	w0, 114ec <PyInit__decimal@@Base+0xa9d8>
   114cc:	mov	w1, #0x400                 	// #1024
   114d0:	mov	x0, x19
   114d4:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   114d8:	cbnz	w0, 11404 <PyInit__decimal@@Base+0xa8f0>
   114dc:	mov	x0, x20
   114e0:	mov	x1, x19
   114e4:	bl	116e0 <PyInit__decimal@@Base+0xabcc>
   114e8:	b	11424 <PyInit__decimal@@Base+0xa910>
   114ec:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x384ec>
   114f0:	ldr	x8, [x20, #8]
   114f4:	ldr	x9, [x9, #3936]
   114f8:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
   114fc:	add	x1, x1, #0xf13
   11500:	ldr	x2, [x8, #24]
   11504:	ldr	x0, [x9]
   11508:	bl	69b0 <PyErr_Format@plt>
   1150c:	b	11404 <PyInit__decimal@@Base+0xa8f0>
   11510:	sub	sp, sp, #0x30
   11514:	stp	x29, x30, [sp, #16]
   11518:	stp	x20, x19, [sp, #32]
   1151c:	add	x29, sp, #0x10
   11520:	mov	x20, x0
   11524:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   11528:	add	x0, x0, #0x318
   1152c:	stur	wzr, [x29, #-4]
   11530:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   11534:	mov	x19, x0
   11538:	cbz	x0, 1156c <PyInit__decimal@@Base+0xaa58>
   1153c:	add	x0, x19, #0x18
   11540:	add	x2, x20, #0x10
   11544:	sub	x3, x29, #0x4
   11548:	mov	x1, xzr
   1154c:	bl	190f4 <PyInit__decimal@@Base+0x125e0>
   11550:	ldur	w1, [x29, #-4]
   11554:	mov	x0, x20
   11558:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   1155c:	cbz	w0, 1156c <PyInit__decimal@@Base+0xaa58>
   11560:	mov	x0, x19
   11564:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   11568:	mov	x19, xzr
   1156c:	mov	x0, x19
   11570:	ldp	x20, x19, [sp, #32]
   11574:	ldp	x29, x30, [sp, #16]
   11578:	add	sp, sp, #0x30
   1157c:	ret
   11580:	stp	x29, x30, [sp, #-32]!
   11584:	stp	x20, x19, [sp, #16]
   11588:	mov	x29, sp
   1158c:	mov	x19, x1
   11590:	mov	w1, wzr
   11594:	mov	w2, wzr
   11598:	bl	d658 <PyInit__decimal@@Base+0x6b44>
   1159c:	cbz	x0, 115bc <PyInit__decimal@@Base+0xaaa8>
   115a0:	mov	x1, x19
   115a4:	mov	x20, x0
   115a8:	bl	11754 <PyInit__decimal@@Base+0xac40>
   115ac:	mov	x19, x0
   115b0:	mov	x0, x20
   115b4:	bl	6500 <PyMem_Free@plt>
   115b8:	b	115c0 <PyInit__decimal@@Base+0xaaac>
   115bc:	mov	x19, xzr
   115c0:	mov	x0, x19
   115c4:	ldp	x20, x19, [sp, #16]
   115c8:	ldp	x29, x30, [sp], #32
   115cc:	ret
   115d0:	sub	sp, sp, #0x30
   115d4:	stp	x29, x30, [sp, #16]
   115d8:	stp	x20, x19, [sp, #32]
   115dc:	add	x29, sp, #0x10
   115e0:	stur	wzr, [x29, #-4]
   115e4:	ldr	x9, [x0, #8]
   115e8:	ldrb	w9, [x9, #171]
   115ec:	tbnz	w9, #0, 1160c <PyInit__decimal@@Base+0xaaf8>
   115f0:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
   115f4:	ldr	x8, [x8, #3936]
   115f8:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
   115fc:	add	x1, x1, #0xf42
   11600:	ldr	x0, [x8]
   11604:	bl	65f0 <PyErr_SetString@plt>
   11608:	b	1164c <PyInit__decimal@@Base+0xab38>
   1160c:	mov	x8, x0
   11610:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   11614:	mov	x20, x1
   11618:	add	x2, x1, #0x10
   1161c:	add	x0, x0, #0x318
   11620:	sub	x3, x29, #0x4
   11624:	mov	x1, x8
   11628:	bl	8830 <PyInit__decimal@@Base+0x1d1c>
   1162c:	mov	x19, x0
   11630:	cbz	x0, 11650 <PyInit__decimal@@Base+0xab3c>
   11634:	ldur	w1, [x29, #-4]
   11638:	mov	x0, x20
   1163c:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   11640:	cbz	w0, 11650 <PyInit__decimal@@Base+0xab3c>
   11644:	mov	x0, x19
   11648:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   1164c:	mov	x19, xzr
   11650:	mov	x0, x19
   11654:	ldp	x20, x19, [sp, #32]
   11658:	ldp	x29, x30, [sp, #16]
   1165c:	add	sp, sp, #0x30
   11660:	ret
   11664:	stp	x29, x30, [sp, #-48]!
   11668:	str	x21, [sp, #16]
   1166c:	stp	x20, x19, [sp, #32]
   11670:	mov	x29, sp
   11674:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
   11678:	ldr	x8, [x8, #3936]
   1167c:	mov	x19, x1
   11680:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
   11684:	add	x2, x2, #0x5bd
   11688:	ldr	x1, [x8]
   1168c:	bl	d924 <PyInit__decimal@@Base+0x6e10>
   11690:	cbz	x0, 116c8 <PyInit__decimal@@Base+0xabb4>
   11694:	mov	x21, x0
   11698:	bl	d980 <PyInit__decimal@@Base+0x6e6c>
   1169c:	mov	x20, x0
   116a0:	mov	x0, x21
   116a4:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   116a8:	cbz	x20, 116c8 <PyInit__decimal@@Base+0xabb4>
   116ac:	mov	x0, x20
   116b0:	mov	x1, x19
   116b4:	bl	11754 <PyInit__decimal@@Base+0xac40>
   116b8:	mov	x19, x0
   116bc:	mov	x0, x20
   116c0:	bl	6500 <PyMem_Free@plt>
   116c4:	b	116cc <PyInit__decimal@@Base+0xabb8>
   116c8:	mov	x19, xzr
   116cc:	mov	x0, x19
   116d0:	ldp	x20, x19, [sp, #32]
   116d4:	ldr	x21, [sp, #16]
   116d8:	ldp	x29, x30, [sp], #48
   116dc:	ret
   116e0:	sub	sp, sp, #0x30
   116e4:	stp	x29, x30, [sp, #16]
   116e8:	stp	x20, x19, [sp, #32]
   116ec:	add	x29, sp, #0x10
   116f0:	mov	x20, x1
   116f4:	mov	x1, x0
   116f8:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   116fc:	add	x0, x0, #0x318
   11700:	mov	x2, x20
   11704:	stur	wzr, [x29, #-4]
   11708:	bl	9178 <PyInit__decimal@@Base+0x2664>
   1170c:	mov	x19, x0
   11710:	cbz	x0, 11740 <PyInit__decimal@@Base+0xac2c>
   11714:	add	x0, x19, #0x18
   11718:	add	x1, x20, #0x10
   1171c:	sub	x2, x29, #0x4
   11720:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   11724:	ldur	w1, [x29, #-4]
   11728:	mov	x0, x20
   1172c:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   11730:	cbz	w0, 11740 <PyInit__decimal@@Base+0xac2c>
   11734:	mov	x0, x19
   11738:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   1173c:	mov	x19, xzr
   11740:	mov	x0, x19
   11744:	ldp	x20, x19, [sp, #32]
   11748:	ldp	x29, x30, [sp, #16]
   1174c:	add	sp, sp, #0x30
   11750:	ret
   11754:	stp	x29, x30, [sp, #-48]!
   11758:	str	x21, [sp, #16]
   1175c:	stp	x20, x19, [sp, #32]
   11760:	mov	x29, sp
   11764:	mov	x21, x0
   11768:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   1176c:	add	x0, x0, #0x318
   11770:	mov	x20, x1
   11774:	str	wzr, [x29, #28]
   11778:	bl	8668 <PyInit__decimal@@Base+0x1b54>
   1177c:	mov	x19, x0
   11780:	cbz	x0, 117b4 <PyInit__decimal@@Base+0xaca0>
   11784:	add	x0, x19, #0x18
   11788:	add	x2, x20, #0x10
   1178c:	add	x3, x29, #0x1c
   11790:	mov	x1, x21
   11794:	bl	1576c <PyInit__decimal@@Base+0xec58>
   11798:	ldr	w1, [x29, #28]
   1179c:	mov	x0, x20
   117a0:	bl	86d0 <PyInit__decimal@@Base+0x1bbc>
   117a4:	cbz	w0, 117b4 <PyInit__decimal@@Base+0xaca0>
   117a8:	mov	x0, x19
   117ac:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   117b0:	mov	x19, xzr
   117b4:	mov	x0, x19
   117b8:	ldp	x20, x19, [sp, #32]
   117bc:	ldr	x21, [sp, #16]
   117c0:	ldp	x29, x30, [sp], #48
   117c4:	ret
   117c8:	stp	x29, x30, [sp, #-16]!
   117cc:	mov	x29, sp
   117d0:	add	x0, x0, #0x10
   117d4:	bl	13a4c <PyInit__decimal@@Base+0xcf38>
   117d8:	bl	6640 <PyLong_FromSsize_t@plt>
   117dc:	ldp	x29, x30, [sp], #16
   117e0:	ret
   117e4:	stp	x29, x30, [sp, #-32]!
   117e8:	stp	x20, x19, [sp, #16]
   117ec:	mov	x29, sp
   117f0:	mov	x19, x0
   117f4:	mov	x0, x1
   117f8:	bl	6690 <PyLong_AsSsize_t@plt>
   117fc:	mov	x20, x0
   11800:	cmn	x0, #0x1
   11804:	b.eq	11820 <PyInit__decimal@@Base+0xad0c>  // b.none
   11808:	add	x0, x19, #0x10
   1180c:	mov	x1, x20
   11810:	bl	13900 <PyInit__decimal@@Base+0xcdec>
   11814:	cbz	w0, 1182c <PyInit__decimal@@Base+0xad18>
   11818:	mov	w0, wzr
   1181c:	b	1183c <PyInit__decimal@@Base+0xad28>
   11820:	bl	6780 <PyErr_Occurred@plt>
   11824:	cbnz	x0, 11838 <PyInit__decimal@@Base+0xad24>
   11828:	b	11808 <PyInit__decimal@@Base+0xacf4>
   1182c:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
   11830:	add	x0, x0, #0x917
   11834:	bl	11ad8 <PyInit__decimal@@Base+0xafc4>
   11838:	mov	w0, #0xffffffff            	// #-1
   1183c:	ldp	x20, x19, [sp, #16]
   11840:	ldp	x29, x30, [sp], #32
   11844:	ret
   11848:	stp	x29, x30, [sp, #-16]!
   1184c:	mov	x29, sp
   11850:	add	x0, x0, #0x10
   11854:	bl	13a54 <PyInit__decimal@@Base+0xcf40>
   11858:	bl	6640 <PyLong_FromSsize_t@plt>
   1185c:	ldp	x29, x30, [sp], #16
   11860:	ret
   11864:	stp	x29, x30, [sp, #-32]!
   11868:	stp	x20, x19, [sp, #16]
   1186c:	mov	x29, sp
   11870:	mov	x19, x0
   11874:	mov	x0, x1
   11878:	bl	6690 <PyLong_AsSsize_t@plt>
   1187c:	mov	x20, x0
   11880:	cmn	x0, #0x1
   11884:	b.eq	118a0 <PyInit__decimal@@Base+0xad8c>  // b.none
   11888:	add	x0, x19, #0x10
   1188c:	mov	x1, x20
   11890:	bl	13a8c <PyInit__decimal@@Base+0xcf78>
   11894:	cbz	w0, 118ac <PyInit__decimal@@Base+0xad98>
   11898:	mov	w0, wzr
   1189c:	b	118bc <PyInit__decimal@@Base+0xada8>
   118a0:	bl	6780 <PyErr_Occurred@plt>
   118a4:	cbnz	x0, 118b8 <PyInit__decimal@@Base+0xada4>
   118a8:	b	11888 <PyInit__decimal@@Base+0xad74>
   118ac:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
   118b0:	add	x0, x0, #0x93d
   118b4:	bl	11ad8 <PyInit__decimal@@Base+0xafc4>
   118b8:	mov	w0, #0xffffffff            	// #-1
   118bc:	ldp	x20, x19, [sp, #16]
   118c0:	ldp	x29, x30, [sp], #32
   118c4:	ret
   118c8:	stp	x29, x30, [sp, #-16]!
   118cc:	mov	x29, sp
   118d0:	add	x0, x0, #0x10
   118d4:	bl	13a5c <PyInit__decimal@@Base+0xcf48>
   118d8:	bl	6640 <PyLong_FromSsize_t@plt>
   118dc:	ldp	x29, x30, [sp], #16
   118e0:	ret
   118e4:	stp	x29, x30, [sp, #-32]!
   118e8:	stp	x20, x19, [sp, #16]
   118ec:	mov	x29, sp
   118f0:	mov	x19, x0
   118f4:	mov	x0, x1
   118f8:	bl	6690 <PyLong_AsSsize_t@plt>
   118fc:	mov	x20, x0
   11900:	cmn	x0, #0x1
   11904:	b.eq	11920 <PyInit__decimal@@Base+0xae0c>  // b.none
   11908:	add	x0, x19, #0x10
   1190c:	mov	x1, x20
   11910:	bl	13ab4 <PyInit__decimal@@Base+0xcfa0>
   11914:	cbz	w0, 1192c <PyInit__decimal@@Base+0xae18>
   11918:	mov	w0, wzr
   1191c:	b	1193c <PyInit__decimal@@Base+0xae28>
   11920:	bl	6780 <PyErr_Occurred@plt>
   11924:	cbnz	x0, 11938 <PyInit__decimal@@Base+0xae24>
   11928:	b	11908 <PyInit__decimal@@Base+0xadf4>
   1192c:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
   11930:	add	x0, x0, #0x963
   11934:	bl	11ad8 <PyInit__decimal@@Base+0xafc4>
   11938:	mov	w0, #0xffffffff            	// #-1
   1193c:	ldp	x20, x19, [sp, #16]
   11940:	ldp	x29, x30, [sp], #32
   11944:	ret
   11948:	stp	x29, x30, [sp, #-32]!
   1194c:	stp	x20, x19, [sp, #16]
   11950:	mov	x29, sp
   11954:	add	x0, x0, #0x10
   11958:	bl	13a64 <PyInit__decimal@@Base+0xcf50>
   1195c:	adrp	x20, 42000 <PyInit__decimal@@Base+0x3b4ec>
   11960:	sbfiz	x19, x0, #3, #32
   11964:	add	x20, x20, #0x5f0
   11968:	ldr	x0, [x20, x19]
   1196c:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
   11970:	ldr	x0, [x20, x19]
   11974:	ldp	x20, x19, [sp, #16]
   11978:	ldp	x29, x30, [sp], #32
   1197c:	ret
   11980:	stp	x29, x30, [sp, #-32]!
   11984:	str	x19, [sp, #16]
   11988:	mov	x29, sp
   1198c:	mov	x19, x0
   11990:	mov	x0, x1
   11994:	bl	d11c <PyInit__decimal@@Base+0x6608>
   11998:	cmn	w0, #0x1
   1199c:	b.eq	119c8 <PyInit__decimal@@Base+0xaeb4>  // b.none
   119a0:	mov	w1, w0
   119a4:	add	x0, x19, #0x10
   119a8:	bl	13ae0 <PyInit__decimal@@Base+0xcfcc>
   119ac:	cbz	w0, 119b8 <PyInit__decimal@@Base+0xaea4>
   119b0:	mov	w0, wzr
   119b4:	b	119c8 <PyInit__decimal@@Base+0xaeb4>
   119b8:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
   119bc:	add	x0, x0, #0x989
   119c0:	bl	e350 <PyInit__decimal@@Base+0x783c>
   119c4:	mov	w0, #0xffffffff            	// #-1
   119c8:	ldr	x19, [sp, #16]
   119cc:	ldp	x29, x30, [sp], #32
   119d0:	ret
   119d4:	stp	x29, x30, [sp, #-16]!
   119d8:	mov	x29, sp
   119dc:	ldrsw	x0, [x0, #80]
   119e0:	bl	6680 <PyLong_FromLong@plt>
   119e4:	ldp	x29, x30, [sp], #16
   119e8:	ret
   119ec:	stp	x29, x30, [sp, #-32]!
   119f0:	stp	x20, x19, [sp, #16]
   119f4:	mov	x29, sp
   119f8:	mov	x19, x0
   119fc:	mov	x0, x1
   11a00:	bl	6690 <PyLong_AsSsize_t@plt>
   11a04:	mov	x20, x0
   11a08:	cmn	x0, #0x1
   11a0c:	b.eq	11a34 <PyInit__decimal@@Base+0xaf20>  // b.none
   11a10:	cmp	x20, #0x2
   11a14:	b.cc	11a28 <PyInit__decimal@@Base+0xaf14>  // b.lo, b.ul, b.last
   11a18:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
   11a1c:	add	x0, x0, #0x9ac
   11a20:	bl	11ad8 <PyInit__decimal@@Base+0xafc4>
   11a24:	b	11a3c <PyInit__decimal@@Base+0xaf28>
   11a28:	mov	w0, wzr
   11a2c:	str	w20, [x19, #80]
   11a30:	b	11a40 <PyInit__decimal@@Base+0xaf2c>
   11a34:	bl	6780 <PyErr_Occurred@plt>
   11a38:	cbz	x0, 11a10 <PyInit__decimal@@Base+0xaefc>
   11a3c:	mov	w0, #0xffffffff            	// #-1
   11a40:	ldp	x20, x19, [sp, #16]
   11a44:	ldp	x29, x30, [sp], #32
   11a48:	ret
   11a4c:	stp	x29, x30, [sp, #-16]!
   11a50:	mov	x29, sp
   11a54:	add	x0, x0, #0x10
   11a58:	bl	13a7c <PyInit__decimal@@Base+0xcf68>
   11a5c:	sxtw	x0, w0
   11a60:	bl	6640 <PyLong_FromSsize_t@plt>
   11a64:	ldp	x29, x30, [sp], #16
   11a68:	ret
   11a6c:	stp	x29, x30, [sp, #-32]!
   11a70:	stp	x20, x19, [sp, #16]
   11a74:	mov	x29, sp
   11a78:	mov	x19, x0
   11a7c:	mov	x0, x1
   11a80:	bl	6690 <PyLong_AsSsize_t@plt>
   11a84:	mov	x20, x0
   11a88:	cmn	x0, #0x1
   11a8c:	b.eq	11ab0 <PyInit__decimal@@Base+0xaf9c>  // b.none
   11a90:	cmp	x20, w20, sxtw
   11a94:	mov	w8, #0x7fffffff            	// #2147483647
   11a98:	add	x0, x19, #0x10
   11a9c:	csel	w1, w8, w20, ne  // ne = any
   11aa0:	bl	13b34 <PyInit__decimal@@Base+0xd020>
   11aa4:	cbz	w0, 11abc <PyInit__decimal@@Base+0xafa8>
   11aa8:	mov	w0, wzr
   11aac:	b	11acc <PyInit__decimal@@Base+0xafb8>
   11ab0:	bl	6780 <PyErr_Occurred@plt>
   11ab4:	cbnz	x0, 11ac8 <PyInit__decimal@@Base+0xafb4>
   11ab8:	b	11a90 <PyInit__decimal@@Base+0xaf7c>
   11abc:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
   11ac0:	add	x0, x0, #0x9d1
   11ac4:	bl	11ad8 <PyInit__decimal@@Base+0xafc4>
   11ac8:	mov	w0, #0xffffffff            	// #-1
   11acc:	ldp	x20, x19, [sp, #16]
   11ad0:	ldp	x29, x30, [sp], #32
   11ad4:	ret
   11ad8:	stp	x29, x30, [sp, #-16]!
   11adc:	mov	x29, sp
   11ae0:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
   11ae4:	ldr	x8, [x8, #3928]
   11ae8:	mov	x1, x0
   11aec:	ldr	x8, [x8]
   11af0:	mov	x0, x8
   11af4:	bl	65f0 <PyErr_SetString@plt>
   11af8:	ldp	x29, x30, [sp], #16
   11afc:	ret
   11b00:	stp	x29, x30, [sp, #-32]!
   11b04:	str	x19, [sp, #16]
   11b08:	mov	x29, sp
   11b0c:	mov	x19, x0
   11b10:	mov	x0, x1
   11b14:	bl	11bb0 <PyInit__decimal@@Base+0xb09c>
   11b18:	tst	w0, #0x18000
   11b1c:	b.eq	11b28 <PyInit__decimal@@Base+0xb014>  // b.none
   11b20:	mov	w0, #0xffffffff            	// #-1
   11b24:	b	11b3c <PyInit__decimal@@Base+0xb028>
   11b28:	mov	w1, w0
   11b2c:	add	x0, x19, #0x10
   11b30:	bl	13afc <PyInit__decimal@@Base+0xcfe8>
   11b34:	cbz	w0, 11b48 <PyInit__decimal@@Base+0xb034>
   11b38:	mov	w0, wzr
   11b3c:	ldr	x19, [sp, #16]
   11b40:	ldp	x29, x30, [sp], #32
   11b44:	ret
   11b48:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
   11b4c:	add	x0, x0, #0x9fd
   11b50:	bl	e350 <PyInit__decimal@@Base+0x783c>
   11b54:	b	11b20 <PyInit__decimal@@Base+0xb00c>
   11b58:	stp	x29, x30, [sp, #-32]!
   11b5c:	str	x19, [sp, #16]
   11b60:	mov	x29, sp
   11b64:	mov	x19, x0
   11b68:	mov	x0, x1
   11b6c:	bl	11bb0 <PyInit__decimal@@Base+0xb09c>
   11b70:	tst	w0, #0x18000
   11b74:	b.eq	11b80 <PyInit__decimal@@Base+0xb06c>  // b.none
   11b78:	mov	w0, #0xffffffff            	// #-1
   11b7c:	b	11b94 <PyInit__decimal@@Base+0xb080>
   11b80:	mov	w1, w0
   11b84:	add	x0, x19, #0x10
   11b88:	bl	13b18 <PyInit__decimal@@Base+0xd004>
   11b8c:	cbz	w0, 11ba0 <PyInit__decimal@@Base+0xb08c>
   11b90:	mov	w0, wzr
   11b94:	ldr	x19, [sp, #16]
   11b98:	ldp	x29, x30, [sp], #32
   11b9c:	ret
   11ba0:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
   11ba4:	add	x0, x0, #0xab9
   11ba8:	bl	e350 <PyInit__decimal@@Base+0x783c>
   11bac:	b	11b78 <PyInit__decimal@@Base+0xb064>
   11bb0:	stp	x29, x30, [sp, #-48]!
   11bb4:	stp	x22, x21, [sp, #16]
   11bb8:	stp	x20, x19, [sp, #32]
   11bbc:	mov	x29, sp
   11bc0:	mov	x19, x0
   11bc4:	bl	68b0 <PyList_Size@plt>
   11bc8:	cmp	x0, #0x1
   11bcc:	b.lt	11c08 <PyInit__decimal@@Base+0xb0f4>  // b.tstop
   11bd0:	mov	x20, x0
   11bd4:	mov	x22, xzr
   11bd8:	mov	w21, wzr
   11bdc:	mov	x0, x19
   11be0:	mov	x1, x22
   11be4:	bl	69d0 <PyList_GetItem@plt>
   11be8:	bl	11c28 <PyInit__decimal@@Base+0xb114>
   11bec:	tst	w0, #0x18000
   11bf0:	b.ne	11c10 <PyInit__decimal@@Base+0xb0fc>  // b.any
   11bf4:	add	x22, x22, #0x1
   11bf8:	cmp	x20, x22
   11bfc:	orr	w21, w0, w21
   11c00:	b.ne	11bdc <PyInit__decimal@@Base+0xb0c8>  // b.any
   11c04:	b	11c14 <PyInit__decimal@@Base+0xb100>
   11c08:	mov	w21, wzr
   11c0c:	b	11c14 <PyInit__decimal@@Base+0xb100>
   11c10:	mov	w21, w0
   11c14:	mov	w0, w21
   11c18:	ldp	x20, x19, [sp, #32]
   11c1c:	ldp	x22, x21, [sp, #16]
   11c20:	ldp	x29, x30, [sp], #48
   11c24:	ret
   11c28:	stp	x29, x30, [sp, #-16]!
   11c2c:	mov	x29, sp
   11c30:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
   11c34:	ldr	x8, [x8, #2560]
   11c38:	cbz	x8, 11c58 <PyInit__decimal@@Base+0xb144>
   11c3c:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
   11c40:	add	x8, x8, #0xa20
   11c44:	ldur	x9, [x8, #-8]
   11c48:	cmp	x9, x0
   11c4c:	b.eq	11c7c <PyInit__decimal@@Base+0xb168>  // b.none
   11c50:	ldr	x9, [x8], #32
   11c54:	cbnz	x9, 11c44 <PyInit__decimal@@Base+0xb130>
   11c58:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
   11c5c:	ldr	x8, [x8, #3968]
   11c60:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   11c64:	add	x1, x1, #0xa25
   11c68:	ldr	x0, [x8]
   11c6c:	bl	65f0 <PyErr_SetString@plt>
   11c70:	mov	w0, #0x8000                	// #32768
   11c74:	ldp	x29, x30, [sp], #16
   11c78:	ret
   11c7c:	ldur	w0, [x8, #-16]
   11c80:	ldp	x29, x30, [sp], #16
   11c84:	ret
   11c88:	stp	x29, x30, [sp, #-32]!
   11c8c:	str	x19, [sp, #16]
   11c90:	mov	x29, sp
   11c94:	mov	x19, x0
   11c98:	ldr	x0, [x0, #16]
   11c9c:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
   11ca0:	ldr	x0, [x19, #24]
   11ca4:	bl	8a5c <PyInit__decimal@@Base+0x1f48>
   11ca8:	mov	x0, x19
   11cac:	bl	6630 <PyObject_Free@plt>
   11cb0:	ldr	x19, [sp, #16]
   11cb4:	ldp	x29, x30, [sp], #32
   11cb8:	ret
   11cbc:	stp	x29, x30, [sp, #-32]!
   11cc0:	str	x19, [sp, #16]
   11cc4:	mov	x29, sp
   11cc8:	ldr	x1, [x0, #16]
   11ccc:	mov	x19, x0
   11cd0:	mov	x0, xzr
   11cd4:	bl	11d40 <PyInit__decimal@@Base+0xb22c>
   11cd8:	cbz	x0, 11cec <PyInit__decimal@@Base+0xb1d8>
   11cdc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   11ce0:	ldr	x0, [x19, #16]
   11ce4:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
   11ce8:	ldr	x0, [x19, #16]
   11cec:	ldr	x19, [sp, #16]
   11cf0:	ldp	x29, x30, [sp], #32
   11cf4:	ret
   11cf8:	stp	x29, x30, [sp, #-32]!
   11cfc:	str	x19, [sp, #16]
   11d00:	mov	x29, sp
   11d04:	ldr	x1, [x0, #24]
   11d08:	mov	x0, xzr
   11d0c:	bl	11d40 <PyInit__decimal@@Base+0xb22c>
   11d10:	cbz	x0, 11d2c <PyInit__decimal@@Base+0xb218>
   11d14:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   11d18:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   11d1c:	ldr	x19, [x19, #4008]
   11d20:	mov	x0, x19
   11d24:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
   11d28:	b	11d30 <PyInit__decimal@@Base+0xb21c>
   11d2c:	mov	x19, xzr
   11d30:	mov	x0, x19
   11d34:	ldr	x19, [sp, #16]
   11d38:	ldp	x29, x30, [sp], #32
   11d3c:	ret
   11d40:	stp	x29, x30, [sp, #-32]!
   11d44:	stp	x20, x19, [sp, #16]
   11d48:	mov	x29, sp
   11d4c:	ldr	x0, [x1, #8]
   11d50:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
   11d54:	add	x8, x8, #0x4b8
   11d58:	mov	x19, x1
   11d5c:	cmp	x0, x8
   11d60:	b.eq	11d74 <PyInit__decimal@@Base+0xb260>  // b.none
   11d64:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
   11d68:	add	x1, x1, #0x4b8
   11d6c:	bl	6960 <PyType_IsSubtype@plt>
   11d70:	cbz	w0, 11e04 <PyInit__decimal@@Base+0xb2f0>
   11d74:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   11d78:	ldr	x8, [x8, #1496]
   11d7c:	cmp	x8, x19
   11d80:	b.eq	11db0 <PyInit__decimal@@Base+0xb29c>  // b.none
   11d84:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   11d88:	ldr	x8, [x8, #1504]
   11d8c:	cmp	x8, x19
   11d90:	b.eq	11db0 <PyInit__decimal@@Base+0xb29c>  // b.none
   11d94:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   11d98:	ldr	x8, [x8, #1512]
   11d9c:	cmp	x8, x19
   11da0:	b.eq	11db0 <PyInit__decimal@@Base+0xb29c>  // b.none
   11da4:	mov	x0, x19
   11da8:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
   11dac:	b	11dc8 <PyInit__decimal@@Base+0xb2b4>
   11db0:	mov	x0, x19
   11db4:	mov	x1, xzr
   11db8:	bl	79c8 <PyInit__decimal@@Base+0xeb4>
   11dbc:	mov	x19, x0
   11dc0:	cbz	x0, 11e20 <PyInit__decimal@@Base+0xb30c>
   11dc4:	str	wzr, [x19, #44]
   11dc8:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   11dcc:	ldr	x0, [x8, #1400]
   11dd0:	mov	x1, x19
   11dd4:	bl	6620 <PyContextVar_Set@plt>
   11dd8:	mov	x20, x0
   11ddc:	mov	x0, x19
   11de0:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   11de4:	cbz	x20, 11e1c <PyInit__decimal@@Base+0xb308>
   11de8:	mov	x0, x20
   11dec:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   11df0:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   11df4:	ldr	x19, [x19, #4008]
   11df8:	mov	x0, x19
   11dfc:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
   11e00:	b	11e20 <PyInit__decimal@@Base+0xb30c>
   11e04:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
   11e08:	ldr	x8, [x8, #3936]
   11e0c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   11e10:	add	x1, x1, #0x2ea
   11e14:	ldr	x0, [x8]
   11e18:	bl	65f0 <PyErr_SetString@plt>
   11e1c:	mov	x19, xzr
   11e20:	mov	x0, x19
   11e24:	ldp	x20, x19, [sp, #16]
   11e28:	ldp	x29, x30, [sp], #32
   11e2c:	ret
   11e30:	sub	sp, sp, #0x100
   11e34:	stp	x29, x30, [sp, #240]
   11e38:	add	x29, sp, #0xf0
   11e3c:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
   11e40:	ldr	x8, [x8, #2560]
   11e44:	cbz	x8, 11ea0 <PyInit__decimal@@Base+0xb38c>
   11e48:	ldr	x10, [x0, #16]
   11e4c:	adrp	x9, 40000 <PyInit__decimal@@Base+0x394ec>
   11e50:	adrp	x12, 2d000 <PyInit__decimal@@Base+0x264ec>
   11e54:	adrp	x13, 2d000 <PyInit__decimal@@Base+0x264ec>
   11e58:	ldr	w10, [x10]
   11e5c:	mov	w8, wzr
   11e60:	add	x9, x9, #0xa10
   11e64:	sub	x11, x29, #0x48
   11e68:	add	x12, x12, #0xb24
   11e6c:	add	x13, x13, #0xb29
   11e70:	add	x14, sp, #0x60
   11e74:	ldr	w17, [x9]
   11e78:	ldur	x15, [x9, #-8]
   11e7c:	ldr	x18, [x9, #16]
   11e80:	sbfiz	x16, x8, #3, #32
   11e84:	tst	w17, w10
   11e88:	add	w8, w8, #0x1
   11e8c:	str	x15, [x11, x16]
   11e90:	csel	x15, x13, x12, eq  // eq = none
   11e94:	add	x9, x9, #0x20
   11e98:	str	x15, [x14, x16]
   11e9c:	cbnz	x18, 11e74 <PyInit__decimal@@Base+0xb360>
   11ea0:	ldp	x1, x3, [x29, #-72]
   11ea4:	ldp	x2, x4, [sp, #96]
   11ea8:	ldp	x5, x7, [x29, #-56]
   11eac:	ldp	x6, x8, [sp, #112]
   11eb0:	ldp	x9, x10, [x29, #-40]
   11eb4:	ldp	x11, x12, [sp, #128]
   11eb8:	ldp	x13, x14, [x29, #-24]
   11ebc:	ldp	x15, x16, [sp, #144]
   11ec0:	ldur	x17, [x29, #-8]
   11ec4:	ldr	x18, [sp, #160]
   11ec8:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
   11ecc:	add	x0, x0, #0xb2f
   11ed0:	stp	x14, x16, [sp, #56]
   11ed4:	stp	x17, x18, [sp, #72]
   11ed8:	stp	x13, x15, [sp, #40]
   11edc:	stp	x10, x12, [sp, #24]
   11ee0:	stp	x9, x11, [sp, #8]
   11ee4:	str	x8, [sp]
   11ee8:	bl	6430 <PyUnicode_FromFormat@plt>
   11eec:	ldp	x29, x30, [sp, #240]
   11ef0:	add	sp, sp, #0x100
   11ef4:	ret
   11ef8:	stp	x29, x30, [sp, #-32]!
   11efc:	stp	x20, x19, [sp, #16]
   11f00:	mov	x29, sp
   11f04:	orr	w8, w2, #0x1
   11f08:	cmp	w8, #0x3
   11f0c:	b.ne	11f34 <PyInit__decimal@@Base+0xb420>  // b.any
   11f10:	adrp	x9, 42000 <PyInit__decimal@@Base+0x3b4ec>
   11f14:	ldr	x8, [x1, #8]
   11f18:	ldr	x9, [x9, #1472]
   11f1c:	mov	w19, w2
   11f20:	mov	x20, x0
   11f24:	cmp	x8, x9
   11f28:	b.eq	11f40 <PyInit__decimal@@Base+0xb42c>  // b.none
   11f2c:	ldrb	w8, [x8, #171]
   11f30:	tbnz	w8, #5, 11f94 <PyInit__decimal@@Base+0xb480>
   11f34:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   11f38:	ldr	x19, [x19, #3912]
   11f3c:	b	11f7c <PyInit__decimal@@Base+0xb468>
   11f40:	ldr	x8, [x20, #16]
   11f44:	ldr	x9, [x1, #16]
   11f48:	cmp	w19, #0x3
   11f4c:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x384ec>
   11f50:	ldr	w8, [x8]
   11f54:	ldr	w9, [x9]
   11f58:	cset	w11, eq  // eq = none
   11f5c:	ldr	x10, [x10, #3976]
   11f60:	cmp	w8, w9
   11f64:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x384ec>
   11f68:	ldr	x9, [x9, #4024]
   11f6c:	cset	w8, eq  // eq = none
   11f70:	eor	w8, w11, w8
   11f74:	cmp	w8, #0x0
   11f78:	csel	x19, x9, x10, ne  // ne = any
   11f7c:	mov	x0, x19
   11f80:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
   11f84:	mov	x0, x19
   11f88:	ldp	x20, x19, [sp, #16]
   11f8c:	ldp	x29, x30, [sp], #32
   11f90:	ret
   11f94:	mov	x0, x1
   11f98:	bl	e278 <PyInit__decimal@@Base+0x7764>
   11f9c:	tst	w0, #0x18000
   11fa0:	b.eq	11fbc <PyInit__decimal@@Base+0xb4a8>  // b.none
   11fa4:	tbnz	w0, #15, 11ffc <PyInit__decimal@@Base+0xb4e8>
   11fa8:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   11fac:	ldr	x19, [x19, #3912]
   11fb0:	mov	w8, wzr
   11fb4:	cbz	w8, 12010 <PyInit__decimal@@Base+0xb4fc>
   11fb8:	b	11f7c <PyInit__decimal@@Base+0xb468>
   11fbc:	ldr	x8, [x20, #16]
   11fc0:	cmp	w19, #0x3
   11fc4:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x384ec>
   11fc8:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x384ec>
   11fcc:	ldr	w8, [x8]
   11fd0:	ldr	x9, [x9, #3976]
   11fd4:	ldr	x10, [x10, #4024]
   11fd8:	cset	w11, eq  // eq = none
   11fdc:	cmp	w8, w0
   11fe0:	cset	w8, eq  // eq = none
   11fe4:	eor	w8, w11, w8
   11fe8:	cmp	w8, #0x0
   11fec:	csel	x19, x10, x9, ne  // ne = any
   11ff0:	mov	w8, #0x1                   	// #1
   11ff4:	cbnz	w8, 11f7c <PyInit__decimal@@Base+0xb468>
   11ff8:	b	12010 <PyInit__decimal@@Base+0xb4fc>
   11ffc:	bl	66d0 <PyErr_Clear@plt>
   12000:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   12004:	ldr	x19, [x19, #3912]
   12008:	mov	w8, #0x1                   	// #1
   1200c:	cbnz	w8, 11f7c <PyInit__decimal@@Base+0xb468>
   12010:	mov	x19, xzr
   12014:	b	11f84 <PyInit__decimal@@Base+0xb470>
   12018:	stp	x29, x30, [sp, #-16]!
   1201c:	mov	x29, sp
   12020:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
   12024:	ldr	x8, [x8, #3872]
   12028:	adrp	x9, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1202c:	ldr	x0, [x9, #1488]
   12030:	ldr	x8, [x8, #216]
   12034:	blr	x8
   12038:	ldp	x29, x30, [sp], #16
   1203c:	ret
   12040:	str	xzr, [x0, #16]
   12044:	mov	w0, wzr
   12048:	ret
   1204c:	mov	w0, #0x9                   	// #9
   12050:	ret
   12054:	stp	x29, x30, [sp, #-32]!
   12058:	str	x19, [sp, #16]
   1205c:	mov	x29, sp
   12060:	mov	x19, x0
   12064:	mov	x0, x1
   12068:	bl	11c28 <PyInit__decimal@@Base+0xb114>
   1206c:	tst	w0, #0x18000
   12070:	b.eq	1207c <PyInit__decimal@@Base+0xb568>  // b.none
   12074:	mov	x0, xzr
   12078:	b	120a8 <PyInit__decimal@@Base+0xb594>
   1207c:	ldr	x8, [x19, #16]
   12080:	ldr	w8, [x8]
   12084:	tst	w8, w0
   12088:	b.eq	1209c <PyInit__decimal@@Base+0xb588>  // b.none
   1208c:	bl	9140 <PyInit__decimal@@Base+0x262c>
   12090:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
   12094:	ldr	x0, [x0, #4024]
   12098:	b	120a8 <PyInit__decimal@@Base+0xb594>
   1209c:	bl	915c <PyInit__decimal@@Base+0x2648>
   120a0:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x384ec>
   120a4:	ldr	x0, [x0, #3976]
   120a8:	ldr	x19, [sp, #16]
   120ac:	ldp	x29, x30, [sp], #32
   120b0:	ret
   120b4:	stp	x29, x30, [sp, #-48]!
   120b8:	str	x21, [sp, #16]
   120bc:	stp	x20, x19, [sp, #32]
   120c0:	mov	x29, sp
   120c4:	cbz	x2, 120e8 <PyInit__decimal@@Base+0xb5d4>
   120c8:	mov	x19, x0
   120cc:	mov	x0, x1
   120d0:	mov	x21, x2
   120d4:	bl	11c28 <PyInit__decimal@@Base+0xb114>
   120d8:	tst	w0, #0x18000
   120dc:	b.eq	120fc <PyInit__decimal@@Base+0xb5e8>  // b.none
   120e0:	mov	w0, #0xffffffff            	// #-1
   120e4:	b	1213c <PyInit__decimal@@Base+0xb628>
   120e8:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
   120ec:	add	x0, x0, #0xbc9
   120f0:	bl	11ad8 <PyInit__decimal@@Base+0xafc4>
   120f4:	mov	w0, #0xffffffff            	// #-1
   120f8:	b	1213c <PyInit__decimal@@Base+0xb628>
   120fc:	mov	w20, w0
   12100:	mov	x0, x21
   12104:	bl	6870 <PyObject_IsTrue@plt>
   12108:	tbnz	w0, #31, 120e0 <PyInit__decimal@@Base+0xb5cc>
   1210c:	cmp	w0, #0x1
   12110:	b.ne	12128 <PyInit__decimal@@Base+0xb614>  // b.any
   12114:	ldr	x8, [x19, #16]
   12118:	mov	w0, wzr
   1211c:	ldr	w9, [x8]
   12120:	orr	w9, w9, w20
   12124:	b	12138 <PyInit__decimal@@Base+0xb624>
   12128:	ldr	x8, [x19, #16]
   1212c:	mov	w0, wzr
   12130:	ldr	w9, [x8]
   12134:	bic	w9, w9, w20
   12138:	str	w9, [x8]
   1213c:	ldp	x20, x19, [sp, #32]
   12140:	ldr	x21, [sp, #16]
   12144:	ldp	x29, x30, [sp], #48
   12148:	ret
   1214c:	stp	x29, x30, [sp, #-16]!
   12150:	mov	x29, sp
   12154:	ldr	x8, [x0, #16]
   12158:	ldr	w0, [x8]
   1215c:	bl	12168 <PyInit__decimal@@Base+0xb654>
   12160:	ldp	x29, x30, [sp], #16
   12164:	ret
   12168:	stp	x29, x30, [sp, #-64]!
   1216c:	str	x23, [sp, #16]
   12170:	stp	x22, x21, [sp, #32]
   12174:	stp	x20, x19, [sp, #48]
   12178:	mov	x29, sp
   1217c:	mov	w20, w0
   12180:	bl	68c0 <PyDict_New@plt>
   12184:	mov	x19, x0
   12188:	cbz	x0, 121e4 <PyInit__decimal@@Base+0xb6d0>
   1218c:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
   12190:	ldr	x8, [x8, #2560]
   12194:	cbz	x8, 121e4 <PyInit__decimal@@Base+0xb6d0>
   12198:	adrp	x22, 3f000 <PyInit__decimal@@Base+0x384ec>
   1219c:	adrp	x23, 3f000 <PyInit__decimal@@Base+0x384ec>
   121a0:	ldr	x22, [x22, #4024]
   121a4:	ldr	x23, [x23, #3976]
   121a8:	adrp	x21, 40000 <PyInit__decimal@@Base+0x394ec>
   121ac:	add	x21, x21, #0xa20
   121b0:	ldur	w8, [x21, #-16]
   121b4:	ldur	x1, [x21, #-8]
   121b8:	mov	x0, x19
   121bc:	tst	w8, w20
   121c0:	csel	x2, x23, x22, eq  // eq = none
   121c4:	bl	6940 <PyDict_SetItem@plt>
   121c8:	tbnz	w0, #31, 121d8 <PyInit__decimal@@Base+0xb6c4>
   121cc:	ldr	x8, [x21], #32
   121d0:	cbnz	x8, 121b0 <PyInit__decimal@@Base+0xb69c>
   121d4:	b	121e4 <PyInit__decimal@@Base+0xb6d0>
   121d8:	mov	x0, x19
   121dc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   121e0:	mov	x19, xzr
   121e4:	mov	x0, x19
   121e8:	ldp	x20, x19, [sp, #48]
   121ec:	ldp	x22, x21, [sp, #32]
   121f0:	ldr	x23, [sp, #16]
   121f4:	ldp	x29, x30, [sp], #64
   121f8:	ret
   121fc:	stp	x29, x30, [sp, #-16]!
   12200:	mov	x29, sp
   12204:	bl	792c <PyInit__decimal@@Base+0xe18>
   12208:	ldp	x29, x30, [sp], #16
   1220c:	ret
   12210:	sub	sp, sp, #0x40
   12214:	stp	x29, x30, [sp, #16]
   12218:	stp	x22, x21, [sp, #32]
   1221c:	stp	x20, x19, [sp, #48]
   12220:	add	x29, sp, #0x10
   12224:	adrp	x22, 3f000 <PyInit__decimal@@Base+0x384ec>
   12228:	ldr	x22, [x22, #4008]
   1222c:	mov	x20, x2
   12230:	mov	x21, x1
   12234:	str	x22, [sp, #8]
   12238:	bl	792c <PyInit__decimal@@Base+0xe18>
   1223c:	cbz	x0, 12300 <PyInit__decimal@@Base+0xb7ec>
   12240:	mov	x19, x0
   12244:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   12248:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
   1224c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x3b4ec>
   12250:	add	x2, x2, #0x42c
   12254:	add	x3, x3, #0x4d0
   12258:	add	x4, sp, #0x8
   1225c:	mov	x0, x21
   12260:	mov	x1, x20
   12264:	bl	64c0 <PyArg_ParseTupleAndKeywords@plt>
   12268:	cbz	w0, 12300 <PyInit__decimal@@Base+0xb7ec>
   1226c:	ldr	x8, [sp, #8]
   12270:	cmp	x8, x22
   12274:	b.eq	122b8 <PyInit__decimal@@Base+0xb7a4>  // b.none
   12278:	ldr	x0, [x8, #8]
   1227c:	adrp	x8, 40000 <PyInit__decimal@@Base+0x394ec>
   12280:	add	x8, x8, #0x4b8
   12284:	cmp	x0, x8
   12288:	b.eq	122bc <PyInit__decimal@@Base+0xb7a8>  // b.none
   1228c:	adrp	x1, 40000 <PyInit__decimal@@Base+0x394ec>
   12290:	add	x1, x1, #0x4b8
   12294:	bl	6960 <PyType_IsSubtype@plt>
   12298:	cbnz	w0, 122bc <PyInit__decimal@@Base+0xb7a8>
   1229c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
   122a0:	ldr	x8, [x8, #3936]
   122a4:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   122a8:	add	x1, x1, #0x2e1
   122ac:	ldr	x0, [x8]
   122b0:	bl	65f0 <PyErr_SetString@plt>
   122b4:	b	12300 <PyInit__decimal@@Base+0xb7ec>
   122b8:	str	x19, [sp, #8]
   122bc:	adrp	x0, 40000 <PyInit__decimal@@Base+0x394ec>
   122c0:	add	x0, x0, #0x658
   122c4:	bl	68f0 <_PyObject_New@plt>
   122c8:	mov	x20, x0
   122cc:	cbz	x0, 12304 <PyInit__decimal@@Base+0xb7f0>
   122d0:	ldr	x0, [sp, #8]
   122d4:	mov	x1, xzr
   122d8:	bl	79c8 <PyInit__decimal@@Base+0xeb4>
   122dc:	str	x0, [x20, #16]
   122e0:	cbz	x0, 122f4 <PyInit__decimal@@Base+0xb7e0>
   122e4:	mov	x0, x19
   122e8:	str	x19, [x20, #24]
   122ec:	bl	74e0 <PyInit__decimal@@Base+0x9cc>
   122f0:	b	12304 <PyInit__decimal@@Base+0xb7f0>
   122f4:	mov	x0, x20
   122f8:	str	xzr, [x20, #24]
   122fc:	bl	74b4 <PyInit__decimal@@Base+0x9a0>
   12300:	mov	x20, xzr
   12304:	mov	x0, x20
   12308:	ldp	x20, x19, [sp, #48]
   1230c:	ldp	x22, x21, [sp, #32]
   12310:	ldp	x29, x30, [sp, #16]
   12314:	add	sp, sp, #0x40
   12318:	ret
   1231c:	mov	x9, #0xffffffff89e7ffff    	// #-1981284353
   12320:	movk	x9, #0x2304, lsl #32
   12324:	mov	x8, x0
   12328:	movk	x9, #0x8ac7, lsl #48
   1232c:	cbz	x4, 12390 <PyInit__decimal@@Base+0xb87c>
   12330:	mov	x11, #0x76180000            	// #1981284352
   12334:	movk	x11, #0xdcfb, lsl #32
   12338:	mov	x10, xzr
   1233c:	mov	x0, xzr
   12340:	movk	x11, #0x7538, lsl #48
   12344:	lsl	x12, x10, #3
   12348:	ldr	x13, [x1, x12]
   1234c:	ldr	x14, [x2, x12]
   12350:	add	x10, x10, #0x1
   12354:	add	x15, x13, x0
   12358:	add	x14, x15, x14
   1235c:	cmp	x14, x13
   12360:	cset	w13, cc  // cc = lo, ul, last
   12364:	cmp	x14, x9
   12368:	cset	w15, hi  // hi = pmore
   1236c:	orr	w0, w13, w15
   12370:	add	x13, x14, x11
   12374:	cmp	w0, #0x0
   12378:	csel	x13, x13, x14, ne  // ne = any
   1237c:	cmp	x4, x10
   12380:	str	x13, [x8, x12]
   12384:	b.ne	12344 <PyInit__decimal@@Base+0xb830>  // b.any
   12388:	cbnz	x0, 12398 <PyInit__decimal@@Base+0xb884>
   1238c:	b	123c8 <PyInit__decimal@@Base+0xb8b4>
   12390:	mov	x0, xzr
   12394:	cbz	x0, 123c8 <PyInit__decimal@@Base+0xb8b4>
   12398:	cmp	x4, x3
   1239c:	b.cs	123c8 <PyInit__decimal@@Base+0xb8b4>  // b.hs, b.nlast
   123a0:	lsl	x10, x4, #3
   123a4:	ldr	x11, [x1, x10]
   123a8:	add	x12, x9, #0x1
   123ac:	add	x4, x4, #0x1
   123b0:	add	x11, x11, x0
   123b4:	cmp	x11, x12
   123b8:	cset	w0, eq  // eq = none
   123bc:	csel	x11, xzr, x11, eq  // eq = none
   123c0:	str	x11, [x8, x10]
   123c4:	b.eq	12398 <PyInit__decimal@@Base+0xb884>  // b.none
   123c8:	cmp	x4, x3
   123cc:	b.cs	123f0 <PyInit__decimal@@Base+0xb8dc>  // b.hs, b.nlast
   123d0:	lsl	x10, x4, #3
   123d4:	sub	x9, x3, x4
   123d8:	add	x8, x8, x10
   123dc:	add	x10, x1, x10
   123e0:	ldr	x11, [x10], #8
   123e4:	subs	x9, x9, #0x1
   123e8:	str	x11, [x8], #8
   123ec:	b.ne	123e0 <PyInit__decimal@@Base+0xb8cc>  // b.any
   123f0:	ret
   123f4:	cbz	x2, 1248c <PyInit__decimal@@Base+0xb978>
   123f8:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   123fc:	mov	x10, #0x76180000            	// #1981284352
   12400:	movk	x8, #0x2304, lsl #32
   12404:	movk	x10, #0xdcfb, lsl #32
   12408:	mov	x9, xzr
   1240c:	movk	x8, #0x8ac7, lsl #48
   12410:	movk	x10, #0x7538, lsl #48
   12414:	mov	x11, x0
   12418:	mov	x12, x2
   1241c:	ldr	x13, [x11]
   12420:	ldr	x14, [x1], #8
   12424:	add	x9, x13, x9
   12428:	add	x14, x9, x14
   1242c:	cmp	x14, x13
   12430:	cset	w9, cc  // cc = lo, ul, last
   12434:	cmp	x14, x8
   12438:	cset	w16, hi  // hi = pmore
   1243c:	orr	w9, w9, w16
   12440:	add	x15, x14, x10
   12444:	cmp	w9, #0x0
   12448:	csel	x15, x15, x14, ne  // ne = any
   1244c:	subs	x12, x12, #0x1
   12450:	str	x15, [x11], #8
   12454:	b.ne	1241c <PyInit__decimal@@Base+0xb908>  // b.any
   12458:	cmp	x14, x13
   1245c:	b.cc	12468 <PyInit__decimal@@Base+0xb954>  // b.lo, b.ul, b.last
   12460:	cmp	x14, x8
   12464:	b.ls	1248c <PyInit__decimal@@Base+0xb978>  // b.plast
   12468:	add	x10, x0, x2, lsl #3
   1246c:	ldr	x11, [x10]
   12470:	add	x12, x8, #0x1
   12474:	add	x11, x11, x9
   12478:	cmp	x11, x12
   1247c:	csel	x11, xzr, x11, eq  // eq = none
   12480:	cset	w9, eq  // eq = none
   12484:	str	x11, [x10], #8
   12488:	b.eq	1246c <PyInit__decimal@@Base+0xb958>  // b.none
   1248c:	ret
   12490:	ldr	x8, [x0]
   12494:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   12498:	movk	x10, #0x2304, lsl #32
   1249c:	movk	x10, #0x8ac7, lsl #48
   124a0:	adds	x11, x8, x2
   124a4:	mov	x9, #0x76180000            	// #1981284352
   124a8:	cset	w8, cs  // cs = hs, nlast
   124ac:	cmp	x11, x10
   124b0:	movk	x9, #0xdcfb, lsl #32
   124b4:	cset	w12, hi  // hi = pmore
   124b8:	movk	x9, #0x7538, lsl #48
   124bc:	orr	w8, w8, w12
   124c0:	add	x9, x11, x9
   124c4:	cmp	w8, #0x0
   124c8:	csel	x9, x9, x11, ne  // ne = any
   124cc:	str	x9, [x0]
   124d0:	cbz	w8, 12510 <PyInit__decimal@@Base+0xb9fc>
   124d4:	cmp	x1, #0x2
   124d8:	b.cc	12510 <PyInit__decimal@@Base+0xb9fc>  // b.lo, b.ul, b.last
   124dc:	mov	w9, #0x1                   	// #1
   124e0:	add	x10, x10, #0x1
   124e4:	lsl	x11, x9, #3
   124e8:	ldr	x12, [x0, x11]
   124ec:	add	x12, x12, x8
   124f0:	cmp	x12, x10
   124f4:	cset	w8, eq  // eq = none
   124f8:	csel	x12, xzr, x12, eq  // eq = none
   124fc:	str	x12, [x0, x11]
   12500:	b.ne	12510 <PyInit__decimal@@Base+0xb9fc>  // b.any
   12504:	add	x9, x9, #0x1
   12508:	cmp	x9, x1
   1250c:	b.cc	124e4 <PyInit__decimal@@Base+0xb9d0>  // b.lo, b.ul, b.last
   12510:	mov	x0, x8
   12514:	ret
   12518:	cbz	x1, 12564 <PyInit__decimal@@Base+0xba50>
   1251c:	mov	x10, #0x89e80000            	// #2313682944
   12520:	movk	x10, #0x2304, lsl #32
   12524:	mov	x8, x0
   12528:	mov	x9, xzr
   1252c:	mov	w0, #0x1                   	// #1
   12530:	movk	x10, #0x8ac7, lsl #48
   12534:	lsl	x11, x9, #3
   12538:	ldr	x12, [x8, x11]
   1253c:	add	x12, x12, x0
   12540:	cmp	x12, x10
   12544:	cset	w0, eq  // eq = none
   12548:	csel	x12, xzr, x12, eq  // eq = none
   1254c:	str	x12, [x8, x11]
   12550:	b.ne	12560 <PyInit__decimal@@Base+0xba4c>  // b.any
   12554:	add	x9, x9, #0x1
   12558:	cmp	x9, x1
   1255c:	b.cc	12534 <PyInit__decimal@@Base+0xba20>  // b.lo, b.ul, b.last
   12560:	ret
   12564:	mov	w0, #0x1                   	// #1
   12568:	ret
   1256c:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   12570:	movk	x8, #0x2304, lsl #32
   12574:	movk	x8, #0x8ac7, lsl #48
   12578:	cbz	x4, 125bc <PyInit__decimal@@Base+0xbaa8>
   1257c:	mov	x10, xzr
   12580:	mov	x9, xzr
   12584:	lsl	x11, x10, #3
   12588:	ldr	x12, [x2, x11]
   1258c:	ldr	x13, [x1, x11]
   12590:	add	x10, x10, #0x1
   12594:	add	x9, x12, x9
   12598:	subs	x12, x13, x9
   1259c:	add	x13, x8, x12
   125a0:	cset	w9, cc  // cc = lo, ul, last
   125a4:	csinc	x12, x12, x13, cs  // cs = hs, nlast
   125a8:	cmp	x4, x10
   125ac:	str	x12, [x0, x11]
   125b0:	b.ne	12584 <PyInit__decimal@@Base+0xba70>  // b.any
   125b4:	cbnz	x9, 125c4 <PyInit__decimal@@Base+0xbab0>
   125b8:	b	125f0 <PyInit__decimal@@Base+0xbadc>
   125bc:	mov	x9, xzr
   125c0:	cbz	x9, 125f0 <PyInit__decimal@@Base+0xbadc>
   125c4:	cmp	x4, x3
   125c8:	b.cs	125f0 <PyInit__decimal@@Base+0xbadc>  // b.hs, b.nlast
   125cc:	lsl	x10, x4, #3
   125d0:	ldr	x11, [x1, x10]
   125d4:	add	x4, x4, #0x1
   125d8:	sub	x12, x11, x9
   125dc:	cmp	x11, #0x0
   125e0:	cset	w9, eq  // eq = none
   125e4:	csel	x12, x8, x12, eq  // eq = none
   125e8:	str	x12, [x0, x10]
   125ec:	cbz	x11, 125c4 <PyInit__decimal@@Base+0xbab0>
   125f0:	cmp	x4, x3
   125f4:	b.cs	12618 <PyInit__decimal@@Base+0xbb04>  // b.hs, b.nlast
   125f8:	lsl	x10, x4, #3
   125fc:	sub	x8, x3, x4
   12600:	add	x9, x0, x10
   12604:	add	x10, x1, x10
   12608:	ldr	x11, [x10], #8
   1260c:	subs	x8, x8, #0x1
   12610:	str	x11, [x9], #8
   12614:	b.ne	12608 <PyInit__decimal@@Base+0xbaf4>  // b.any
   12618:	ret
   1261c:	cbz	x2, 12688 <PyInit__decimal@@Base+0xbb74>
   12620:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   12624:	movk	x8, #0x2304, lsl #32
   12628:	mov	x9, xzr
   1262c:	movk	x8, #0x8ac7, lsl #48
   12630:	mov	x10, x0
   12634:	mov	x11, x2
   12638:	ldr	x12, [x10]
   1263c:	ldr	x13, [x1], #8
   12640:	add	x13, x13, x9
   12644:	subs	x14, x12, x13
   12648:	add	x15, x8, x14
   1264c:	csinc	x14, x14, x15, cs  // cs = hs, nlast
   12650:	cset	w9, cc  // cc = lo, ul, last
   12654:	subs	x11, x11, #0x1
   12658:	str	x14, [x10], #8
   1265c:	b.ne	12638 <PyInit__decimal@@Base+0xbb24>  // b.any
   12660:	cmp	x12, x13
   12664:	b.cs	12688 <PyInit__decimal@@Base+0xbb74>  // b.hs, b.nlast
   12668:	add	x10, x0, x2, lsl #3
   1266c:	ldr	x11, [x10]
   12670:	sub	x12, x11, x9
   12674:	cmp	x11, #0x0
   12678:	csel	x12, x8, x12, eq  // eq = none
   1267c:	cset	w9, eq  // eq = none
   12680:	str	x12, [x10], #8
   12684:	cbz	x11, 1266c <PyInit__decimal@@Base+0xbb58>
   12688:	ret
   1268c:	sub	sp, sp, #0x60
   12690:	stp	x29, x30, [sp, #32]
   12694:	stp	x24, x23, [sp, #48]
   12698:	stp	x22, x21, [sp, #64]
   1269c:	stp	x20, x19, [sp, #80]
   126a0:	add	x29, sp, #0x20
   126a4:	mov	x20, x2
   126a8:	mov	x19, x0
   126ac:	str	xzr, [sp, #8]
   126b0:	cbz	x2, 1271c <PyInit__decimal@@Base+0xbc08>
   126b4:	mov	x21, x3
   126b8:	mov	x22, x1
   126bc:	mov	x24, xzr
   126c0:	mov	x23, x19
   126c4:	b	126e8 <PyInit__decimal@@Base+0xbbd4>
   126c8:	ldur	x2, [x29, #-8]
   126cc:	add	x0, sp, #0x8
   126d0:	mov	x1, x23
   126d4:	bl	12750 <PyInit__decimal@@Base+0xbc3c>
   126d8:	add	x24, x24, #0x1
   126dc:	cmp	x20, x24
   126e0:	add	x23, x23, #0x8
   126e4:	b.eq	1271c <PyInit__decimal@@Base+0xbc08>  // b.none
   126e8:	ldr	x2, [x22, x24, lsl #3]
   126ec:	sub	x0, x29, #0x8
   126f0:	add	x1, sp, #0x10
   126f4:	mov	x3, x21
   126f8:	bl	1273c <PyInit__decimal@@Base+0xbc28>
   126fc:	ldp	x8, x9, [sp, #8]
   12700:	adds	x3, x9, x8
   12704:	str	x3, [sp, #16]
   12708:	b.cc	126c8 <PyInit__decimal@@Base+0xbbb4>  // b.lo, b.ul, b.last
   1270c:	ldur	x8, [x29, #-8]
   12710:	add	x8, x8, #0x1
   12714:	stur	x8, [x29, #-8]
   12718:	b	126c8 <PyInit__decimal@@Base+0xbbb4>
   1271c:	ldr	x8, [sp, #8]
   12720:	str	x8, [x19, x20, lsl #3]
   12724:	ldp	x20, x19, [sp, #80]
   12728:	ldp	x22, x21, [sp, #64]
   1272c:	ldp	x24, x23, [sp, #48]
   12730:	ldp	x29, x30, [sp, #32]
   12734:	add	sp, sp, #0x60
   12738:	ret
   1273c:	mul	x8, x3, x2
   12740:	umulh	x9, x3, x2
   12744:	str	x9, [x0]
   12748:	str	x8, [x1]
   1274c:	ret
   12750:	sub	sp, sp, #0x50
   12754:	stp	x29, x30, [sp, #16]
   12758:	stp	x24, x23, [sp, #32]
   1275c:	stp	x22, x21, [sp, #48]
   12760:	stp	x20, x19, [sp, #64]
   12764:	add	x29, sp, #0x10
   12768:	mov	x24, #0x89e80000            	// #2313682944
   1276c:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   12770:	mov	x21, x2
   12774:	movk	x24, #0x2304, lsl #32
   12778:	ldr	x2, [x9, #192]
   1277c:	movk	x24, #0x8ac7, lsl #48
   12780:	asr	x8, x3, #63
   12784:	and	x9, x8, x24
   12788:	mov	x22, x3
   1278c:	mov	x19, x1
   12790:	mov	x20, x0
   12794:	add	x23, x9, x3
   12798:	sub	x3, x21, x8
   1279c:	add	x0, sp, #0x8
   127a0:	mov	x1, sp
   127a4:	bl	1273c <PyInit__decimal@@Base+0xbc28>
   127a8:	ldr	x8, [sp]
   127ac:	adds	x8, x8, x23
   127b0:	str	x8, [sp]
   127b4:	b.cc	127c4 <PyInit__decimal@@Base+0xbcb0>  // b.lo, b.ul, b.last
   127b8:	ldr	x8, [sp, #8]
   127bc:	add	x8, x8, #0x1
   127c0:	str	x8, [sp, #8]
   127c4:	ldr	x8, [sp, #8]
   127c8:	mov	x3, #0x89e80000            	// #2313682944
   127cc:	movk	x3, #0x2304, lsl #32
   127d0:	add	x0, sp, #0x8
   127d4:	add	x8, x8, x21
   127d8:	mvn	x23, x8
   127dc:	mov	x1, sp
   127e0:	movk	x3, #0x8ac7, lsl #48
   127e4:	mov	x2, x23
   127e8:	bl	1273c <PyInit__decimal@@Base+0xbc28>
   127ec:	ldr	x8, [sp]
   127f0:	adds	x8, x8, x22
   127f4:	str	x8, [sp]
   127f8:	b.cc	12808 <PyInit__decimal@@Base+0xbcf4>  // b.lo, b.ul, b.last
   127fc:	ldr	x9, [sp, #8]
   12800:	add	x9, x9, #0x1
   12804:	str	x9, [sp, #8]
   12808:	ldr	x9, [sp, #8]
   1280c:	mov	x10, #0x76180000            	// #1981284352
   12810:	movk	x10, #0xdcfb, lsl #32
   12814:	movk	x10, #0x7538, lsl #48
   12818:	add	x9, x21, x9
   1281c:	add	x9, x9, x10
   12820:	str	x9, [sp, #8]
   12824:	sub	x10, x9, x23
   12828:	and	x9, x9, x24
   1282c:	add	x8, x9, x8
   12830:	str	x10, [x20]
   12834:	str	x8, [x19]
   12838:	ldp	x20, x19, [sp, #64]
   1283c:	ldp	x22, x21, [sp, #48]
   12840:	ldp	x24, x23, [sp, #32]
   12844:	ldp	x29, x30, [sp, #16]
   12848:	add	sp, sp, #0x50
   1284c:	ret
   12850:	sub	sp, sp, #0x80
   12854:	stp	x29, x30, [sp, #32]
   12858:	stp	x28, x27, [sp, #48]
   1285c:	stp	x26, x25, [sp, #64]
   12860:	stp	x24, x23, [sp, #80]
   12864:	stp	x22, x21, [sp, #96]
   12868:	stp	x20, x19, [sp, #112]
   1286c:	add	x29, sp, #0x20
   12870:	cbz	x4, 1293c <PyInit__decimal@@Base+0xbe28>
   12874:	mov	x19, x4
   12878:	mov	x20, x3
   1287c:	mov	x21, x2
   12880:	mov	x22, x1
   12884:	mov	x23, x0
   12888:	mov	x25, xzr
   1288c:	mov	x26, x0
   12890:	b	128b0 <PyInit__decimal@@Base+0xbd9c>
   12894:	ldr	x8, [sp, #8]
   12898:	add	x9, x25, x20
   1289c:	add	x25, x25, #0x1
   128a0:	cmp	x25, x19
   128a4:	add	x26, x26, #0x8
   128a8:	str	x8, [x23, x9, lsl #3]
   128ac:	b.eq	1293c <PyInit__decimal@@Base+0xbe28>  // b.none
   128b0:	str	xzr, [sp, #8]
   128b4:	cbz	x20, 12894 <PyInit__decimal@@Base+0xbd80>
   128b8:	mov	x24, x26
   128bc:	mov	x27, x22
   128c0:	mov	x28, x20
   128c4:	b	128e8 <PyInit__decimal@@Base+0xbdd4>
   128c8:	ldur	x2, [x29, #-8]
   128cc:	add	x0, sp, #0x8
   128d0:	mov	x1, x24
   128d4:	bl	12750 <PyInit__decimal@@Base+0xbc3c>
   128d8:	subs	x28, x28, #0x1
   128dc:	add	x27, x27, #0x8
   128e0:	add	x24, x24, #0x8
   128e4:	b.eq	12894 <PyInit__decimal@@Base+0xbd80>  // b.none
   128e8:	ldr	x2, [x27]
   128ec:	ldr	x3, [x21, x25, lsl #3]
   128f0:	sub	x0, x29, #0x8
   128f4:	add	x1, sp, #0x10
   128f8:	bl	1273c <PyInit__decimal@@Base+0xbc28>
   128fc:	ldr	x8, [x24]
   12900:	ldr	x9, [sp, #16]
   12904:	adds	x8, x9, x8
   12908:	str	x8, [sp, #16]
   1290c:	b.cc	1291c <PyInit__decimal@@Base+0xbe08>  // b.lo, b.ul, b.last
   12910:	ldur	x9, [x29, #-8]
   12914:	add	x9, x9, #0x1
   12918:	stur	x9, [x29, #-8]
   1291c:	ldr	x9, [sp, #8]
   12920:	adds	x3, x9, x8
   12924:	str	x3, [sp, #16]
   12928:	b.cc	128c8 <PyInit__decimal@@Base+0xbdb4>  // b.lo, b.ul, b.last
   1292c:	ldur	x8, [x29, #-8]
   12930:	add	x8, x8, #0x1
   12934:	stur	x8, [x29, #-8]
   12938:	b	128c8 <PyInit__decimal@@Base+0xbdb4>
   1293c:	ldp	x20, x19, [sp, #112]
   12940:	ldp	x22, x21, [sp, #96]
   12944:	ldp	x24, x23, [sp, #80]
   12948:	ldp	x26, x25, [sp, #64]
   1294c:	ldp	x28, x27, [sp, #48]
   12950:	ldp	x29, x30, [sp, #32]
   12954:	add	sp, sp, #0x80
   12958:	ret
   1295c:	sub	sp, sp, #0x50
   12960:	stp	x29, x30, [sp, #16]
   12964:	str	x23, [sp, #32]
   12968:	stp	x22, x21, [sp, #48]
   1296c:	stp	x20, x19, [sp, #64]
   12970:	add	x29, sp, #0x10
   12974:	str	xzr, [sp]
   12978:	cbz	x2, 129fc <PyInit__decimal@@Base+0xbee8>
   1297c:	mov	x20, x2
   12980:	add	x8, x0, x20, lsl #3
   12984:	mov	x19, x3
   12988:	mov	x2, xzr
   1298c:	sub	x21, x8, #0x8
   12990:	sub	x22, x1, #0x8
   12994:	b	129b8 <PyInit__decimal@@Base+0xbea4>
   12998:	ldr	x2, [x29, #24]
   1299c:	mov	x1, sp
   129a0:	mov	x0, x21
   129a4:	mov	x4, x19
   129a8:	bl	12a18 <PyInit__decimal@@Base+0xbf04>
   129ac:	ldr	x2, [sp]
   129b0:	sub	x21, x21, #0x8
   129b4:	cbz	x20, 129fc <PyInit__decimal@@Base+0xbee8>
   129b8:	mov	x3, #0x89e80000            	// #2313682944
   129bc:	movk	x3, #0x2304, lsl #32
   129c0:	add	x0, x29, #0x18
   129c4:	add	x1, sp, #0x8
   129c8:	movk	x3, #0x8ac7, lsl #48
   129cc:	mov	x23, x20
   129d0:	sub	x20, x20, #0x1
   129d4:	bl	1273c <PyInit__decimal@@Base+0xbc28>
   129d8:	ldr	x8, [x22, x23, lsl #3]
   129dc:	ldr	x9, [sp, #8]
   129e0:	adds	x3, x9, x8
   129e4:	str	x3, [sp, #8]
   129e8:	b.cc	12998 <PyInit__decimal@@Base+0xbe84>  // b.lo, b.ul, b.last
   129ec:	ldr	x8, [x29, #24]
   129f0:	add	x8, x8, #0x1
   129f4:	str	x8, [x29, #24]
   129f8:	b	12998 <PyInit__decimal@@Base+0xbe84>
   129fc:	ldp	x20, x19, [sp, #64]
   12a00:	ldp	x22, x21, [sp, #48]
   12a04:	ldr	x23, [sp, #32]
   12a08:	ldp	x29, x30, [sp, #16]
   12a0c:	mov	x0, x2
   12a10:	add	sp, sp, #0x50
   12a14:	ret
   12a18:	stp	x29, x30, [sp, #-48]!
   12a1c:	stp	x22, x21, [sp, #16]
   12a20:	stp	x20, x19, [sp, #32]
   12a24:	mov	x29, sp
   12a28:	mov	x20, x3
   12a2c:	mov	x21, x1
   12a30:	mov	x22, x0
   12a34:	mov	x0, x3
   12a38:	mov	x1, x2
   12a3c:	mov	x2, x4
   12a40:	mov	x3, xzr
   12a44:	mov	x19, x4
   12a48:	bl	27658 <PyInit__decimal@@Base+0x20b44>
   12a4c:	msub	x8, x0, x19, x20
   12a50:	str	x0, [x22]
   12a54:	str	x8, [x21]
   12a58:	ldp	x20, x19, [sp, #32]
   12a5c:	ldp	x22, x21, [sp, #16]
   12a60:	ldp	x29, x30, [sp], #48
   12a64:	ret
   12a68:	stp	x29, x30, [sp, #-96]!
   12a6c:	stp	x28, x27, [sp, #16]
   12a70:	stp	x26, x25, [sp, #32]
   12a74:	stp	x24, x23, [sp, #48]
   12a78:	stp	x22, x21, [sp, #64]
   12a7c:	stp	x20, x19, [sp, #80]
   12a80:	mov	x29, sp
   12a84:	sub	sp, sp, #0x460
   12a88:	mov	x24, x1
   12a8c:	str	x0, [sp, #24]
   12a90:	mov	x0, x4
   12a94:	mov	x1, x5
   12a98:	mov	x20, x5
   12a9c:	mov	x26, x4
   12aa0:	mov	x25, x3
   12aa4:	mov	x19, x2
   12aa8:	bl	12d60 <PyInit__decimal@@Base+0xc24c>
   12aac:	sub	x21, x20, #0x1
   12ab0:	ldr	x23, [x25, x21, lsl #3]
   12ab4:	cmp	x26, #0x40
   12ab8:	mov	x28, x0
   12abc:	b.cc	12b08 <PyInit__decimal@@Base+0xbff4>  // b.lo, b.ul, b.last
   12ac0:	add	x0, x26, #0x1
   12ac4:	mov	w1, #0x8                   	// #8
   12ac8:	bl	17adc <PyInit__decimal@@Base+0x10fc8>
   12acc:	mov	x27, x0
   12ad0:	cbz	x0, 12b00 <PyInit__decimal@@Base+0xbfec>
   12ad4:	cmp	x20, #0x40
   12ad8:	b.cc	12b14 <PyInit__decimal@@Base+0xc000>  // b.lo, b.ul, b.last
   12adc:	add	x0, x20, #0x1
   12ae0:	mov	w1, #0x8                   	// #8
   12ae4:	bl	17adc <PyInit__decimal@@Base+0x10fc8>
   12ae8:	mov	x22, x0
   12aec:	cbnz	x0, 12b18 <PyInit__decimal@@Base+0xc004>
   12af0:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   12af4:	ldr	x8, [x8, #1376]
   12af8:	mov	x0, x27
   12afc:	blr	x8
   12b00:	mov	w20, #0xffffffff            	// #-1
   12b04:	b	12d3c <PyInit__decimal@@Base+0xc228>
   12b08:	add	x27, sp, #0x258
   12b0c:	cmp	x20, #0x40
   12b10:	b.cs	12adc <PyInit__decimal@@Base+0xbfc8>  // b.hs, b.nlast
   12b14:	add	x22, sp, #0x58
   12b18:	str	x24, [sp, #8]
   12b1c:	mov	x24, #0x89e80000            	// #2313682944
   12b20:	movk	x24, #0x2304, lsl #32
   12b24:	movk	x24, #0x8ac7, lsl #48
   12b28:	add	x8, x23, #0x1
   12b2c:	udiv	x23, x24, x8
   12b30:	mov	x0, x27
   12b34:	mov	x1, x19
   12b38:	mov	x2, x26
   12b3c:	mov	x3, x23
   12b40:	bl	1268c <PyInit__decimal@@Base+0xbb78>
   12b44:	mov	x0, x22
   12b48:	mov	x1, x25
   12b4c:	mov	x2, x20
   12b50:	mov	x3, x23
   12b54:	str	x23, [sp]
   12b58:	bl	1268c <PyInit__decimal@@Base+0xbb78>
   12b5c:	cmn	x28, #0x1
   12b60:	b.eq	12cd4 <PyInit__decimal@@Base+0xc1c0>  // b.none
   12b64:	sub	x25, x20, #0x2
   12b68:	add	x8, x20, #0x1
   12b6c:	add	x23, x27, x28, lsl #3
   12b70:	sub	x19, x24, #0x1
   12b74:	str	x8, [sp, #16]
   12b78:	str	x27, [sp, #48]
   12b7c:	b	12b94 <PyInit__decimal@@Base+0xc080>
   12b80:	ldr	x27, [sp, #48]
   12b84:	mov	x8, x28
   12b88:	sub	x28, x28, #0x1
   12b8c:	sub	x23, x23, #0x8
   12b90:	cbz	x8, 12cd4 <PyInit__decimal@@Base+0xc1c0>
   12b94:	ldr	x3, [x22, x21, lsl #3]
   12b98:	add	x8, x27, x28, lsl #3
   12b9c:	str	x8, [sp, #32]
   12ba0:	add	x8, x8, x20, lsl #3
   12ba4:	sub	x1, x8, #0x8
   12ba8:	add	x0, sp, #0x48
   12bac:	mov	w2, #0x2                   	// #2
   12bb0:	mov	x26, x28
   12bb4:	bl	1295c <PyInit__decimal@@Base+0xbe48>
   12bb8:	ldp	x9, x8, [sp, #72]
   12bbc:	mov	x28, x0
   12bc0:	str	x26, [sp, #40]
   12bc4:	add	x26, x25, x26
   12bc8:	madd	x27, x8, x24, x9
   12bcc:	cmp	x27, x24
   12bd0:	b.cs	12c08 <PyInit__decimal@@Base+0xc0f4>  // b.hs, b.nlast
   12bd4:	ldr	x2, [x22, x25, lsl #3]
   12bd8:	add	x0, sp, #0x48
   12bdc:	mov	x1, x27
   12be0:	bl	12dc4 <PyInit__decimal@@Base+0xc2b0>
   12be4:	ldr	x8, [sp, #80]
   12be8:	cmp	x8, x28
   12bec:	b.hi	12c08 <PyInit__decimal@@Base+0xc0f4>  // b.pmore
   12bf0:	b.ne	12c20 <PyInit__decimal@@Base+0xc10c>  // b.any
   12bf4:	ldr	x9, [sp, #48]
   12bf8:	ldr	x8, [sp, #72]
   12bfc:	ldr	x9, [x9, x26, lsl #3]
   12c00:	cmp	x8, x9
   12c04:	b.ls	12c20 <PyInit__decimal@@Base+0xc10c>  // b.plast
   12c08:	ldr	x8, [x22, x21, lsl #3]
   12c0c:	sub	x27, x27, #0x1
   12c10:	adds	x28, x8, x28
   12c14:	b.cs	12c20 <PyInit__decimal@@Base+0xc10c>  // b.hs, b.nlast
   12c18:	cmp	x28, x19
   12c1c:	b.ls	12bcc <PyInit__decimal@@Base+0xc0b8>  // b.plast
   12c20:	mov	x28, xzr
   12c24:	mov	x26, xzr
   12c28:	b	12c6c <PyInit__decimal@@Base+0xc158>
   12c2c:	ldr	x2, [sp, #64]
   12c30:	add	x0, sp, #0x40
   12c34:	add	x1, sp, #0x38
   12c38:	bl	12750 <PyInit__decimal@@Base+0xbc3c>
   12c3c:	lsl	x8, x28, #3
   12c40:	ldr	x9, [sp, #56]
   12c44:	ldr	x10, [x23, x8]
   12c48:	add	x28, x28, #0x1
   12c4c:	subs	x9, x10, x9
   12c50:	add	x10, x9, x24
   12c54:	csel	x9, x10, x9, cc  // cc = lo, ul, last
   12c58:	str	x9, [x23, x8]
   12c5c:	ldr	x8, [sp, #64]
   12c60:	cinc	x26, x8, cc  // cc = lo, ul, last
   12c64:	cmp	x28, x20
   12c68:	b.hi	12ca0 <PyInit__decimal@@Base+0xc18c>  // b.pmore
   12c6c:	ldr	x3, [x22, x28, lsl #3]
   12c70:	add	x0, sp, #0x40
   12c74:	add	x1, sp, #0x38
   12c78:	mov	x2, x27
   12c7c:	bl	1273c <PyInit__decimal@@Base+0xbc28>
   12c80:	ldr	x8, [sp, #56]
   12c84:	adds	x3, x8, x26
   12c88:	str	x3, [sp, #56]
   12c8c:	b.cc	12c2c <PyInit__decimal@@Base+0xc118>  // b.lo, b.ul, b.last
   12c90:	ldr	x8, [sp, #64]
   12c94:	add	x8, x8, #0x1
   12c98:	str	x8, [sp, #64]
   12c9c:	b	12c2c <PyInit__decimal@@Base+0xc118>
   12ca0:	ldr	x9, [sp, #24]
   12ca4:	ldr	x28, [sp, #40]
   12ca8:	str	x27, [x9, x28, lsl #3]
   12cac:	cbz	x26, 12b80 <PyInit__decimal@@Base+0xc06c>
   12cb0:	ldr	x0, [sp, #32]
   12cb4:	ldr	x3, [sp, #16]
   12cb8:	sub	x8, x27, #0x1
   12cbc:	mov	x2, x22
   12cc0:	mov	x1, x0
   12cc4:	mov	x4, x20
   12cc8:	str	x8, [x9, x28, lsl #3]
   12ccc:	bl	1231c <PyInit__decimal@@Base+0xb808>
   12cd0:	b	12b80 <PyInit__decimal@@Base+0xc06c>
   12cd4:	ldr	x0, [sp, #8]
   12cd8:	cbz	x0, 12cf4 <PyInit__decimal@@Base+0xc1e0>
   12cdc:	ldr	x3, [sp]
   12ce0:	mov	x1, x27
   12ce4:	mov	x2, x20
   12ce8:	bl	1295c <PyInit__decimal@@Base+0xbe48>
   12cec:	mov	w20, wzr
   12cf0:	b	12d08 <PyInit__decimal@@Base+0xc1f4>
   12cf4:	mov	x0, x27
   12cf8:	mov	x1, x20
   12cfc:	bl	12e10 <PyInit__decimal@@Base+0xc2fc>
   12d00:	cmp	w0, #0x0
   12d04:	cset	w20, eq  // eq = none
   12d08:	add	x8, sp, #0x258
   12d0c:	cmp	x27, x8
   12d10:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   12d14:	b.eq	12d24 <PyInit__decimal@@Base+0xc210>  // b.none
   12d18:	ldr	x8, [x19, #1376]
   12d1c:	mov	x0, x27
   12d20:	blr	x8
   12d24:	add	x8, sp, #0x58
   12d28:	cmp	x22, x8
   12d2c:	b.eq	12d3c <PyInit__decimal@@Base+0xc228>  // b.none
   12d30:	ldr	x8, [x19, #1376]
   12d34:	mov	x0, x22
   12d38:	blr	x8
   12d3c:	mov	w0, w20
   12d40:	add	sp, sp, #0x460
   12d44:	ldp	x20, x19, [sp, #80]
   12d48:	ldp	x22, x21, [sp, #64]
   12d4c:	ldp	x24, x23, [sp, #48]
   12d50:	ldp	x26, x25, [sp, #32]
   12d54:	ldp	x28, x27, [sp, #16]
   12d58:	ldp	x29, x30, [sp], #96
   12d5c:	ret
   12d60:	subs	x0, x0, x1
   12d64:	b.cc	12d6c <PyInit__decimal@@Base+0xc258>  // b.lo, b.ul, b.last
   12d68:	ret
   12d6c:	stp	x29, x30, [sp, #-32]!
   12d70:	str	x19, [sp, #16]
   12d74:	mov	x29, sp
   12d78:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   12d7c:	ldr	x19, [x19, #3904]
   12d80:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   12d84:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
   12d88:	add	x1, x1, #0xd58
   12d8c:	ldr	x0, [x19]
   12d90:	add	x2, x2, #0xd67
   12d94:	mov	w3, #0x25c                 	// #604
   12d98:	bl	6a10 <fprintf@plt>
   12d9c:	ldr	x3, [x19]
   12da0:	adrp	x0, 2d000 <PyInit__decimal@@Base+0x264ec>
   12da4:	add	x0, x0, #0xda3
   12da8:	mov	w1, #0x29                  	// #41
   12dac:	mov	w2, #0x1                   	// #1
   12db0:	bl	68d0 <fwrite@plt>
   12db4:	ldr	x1, [x19]
   12db8:	mov	w0, #0xa                   	// #10
   12dbc:	bl	6550 <fputc@plt>
   12dc0:	bl	6760 <abort@plt>
   12dc4:	sub	sp, sp, #0x30
   12dc8:	stp	x29, x30, [sp, #16]
   12dcc:	str	x19, [sp, #32]
   12dd0:	add	x29, sp, #0x10
   12dd4:	mov	x3, x2
   12dd8:	mov	x2, x1
   12ddc:	mov	x19, x0
   12de0:	add	x0, x29, #0x18
   12de4:	add	x1, sp, #0x8
   12de8:	bl	1273c <PyInit__decimal@@Base+0xbc28>
   12dec:	ldr	x2, [x29, #24]
   12df0:	ldr	x3, [sp, #8]
   12df4:	add	x0, x19, #0x8
   12df8:	mov	x1, x19
   12dfc:	bl	12750 <PyInit__decimal@@Base+0xbc3c>
   12e00:	ldr	x19, [sp, #32]
   12e04:	ldp	x29, x30, [sp, #16]
   12e08:	add	sp, sp, #0x30
   12e0c:	ret
   12e10:	sub	x8, x1, #0x1
   12e14:	tbnz	x8, #63, 12e2c <PyInit__decimal@@Base+0xc318>
   12e18:	ldr	x9, [x0, x8, lsl #3]
   12e1c:	sub	x8, x8, #0x1
   12e20:	cbz	x9, 12e14 <PyInit__decimal@@Base+0xc300>
   12e24:	mov	w0, wzr
   12e28:	ret
   12e2c:	mov	w0, #0x1                   	// #1
   12e30:	ret
   12e34:	sub	sp, sp, #0x80
   12e38:	stp	x29, x30, [sp, #32]
   12e3c:	str	x27, [sp, #48]
   12e40:	stp	x26, x25, [sp, #64]
   12e44:	stp	x24, x23, [sp, #80]
   12e48:	stp	x22, x21, [sp, #96]
   12e4c:	stp	x20, x19, [sp, #112]
   12e50:	add	x29, sp, #0x20
   12e54:	mov	x23, x2
   12e58:	mov	x22, x1
   12e5c:	mov	x19, x0
   12e60:	add	x0, sp, #0x8
   12e64:	mov	x1, sp
   12e68:	mov	x2, x4
   12e6c:	mov	x20, x3
   12e70:	bl	12f74 <PyInit__decimal@@Base+0xc460>
   12e74:	ldr	x25, [sp]
   12e78:	cbz	x25, 12f20 <PyInit__decimal@@Base+0xc40c>
   12e7c:	add	x8, x22, x20, lsl #3
   12e80:	ldur	x2, [x8, #-8]
   12e84:	mov	w8, #0x13                  	// #19
   12e88:	sub	x21, x8, x25
   12e8c:	adrp	x26, 2e000 <PyInit__decimal@@Base+0x274ec>
   12e90:	add	x0, sp, #0x10
   12e94:	sub	x1, x29, #0x8
   12e98:	mov	x3, x21
   12e9c:	add	x26, x26, #0x20
   12ea0:	sub	x24, x23, #0x1
   12ea4:	sub	x27, x20, #0x2
   12ea8:	bl	12fa0 <PyInit__decimal@@Base+0xc48c>
   12eac:	ldr	x8, [sp, #16]
   12eb0:	cbz	x8, 12ec0 <PyInit__decimal@@Base+0xc3ac>
   12eb4:	sub	x9, x23, #0x2
   12eb8:	str	x8, [x19, x24, lsl #3]
   12ebc:	mov	x24, x9
   12ec0:	ldr	x23, [x26, x25, lsl #3]
   12ec4:	cmn	x27, #0x1
   12ec8:	b.eq	12f0c <PyInit__decimal@@Base+0xc3f8>  // b.none
   12ecc:	ldur	x25, [x29, #-8]
   12ed0:	add	x24, x19, x24, lsl #3
   12ed4:	sub	x22, x22, #0x10
   12ed8:	ldr	x2, [x22, x20, lsl #3]
   12edc:	add	x0, sp, #0x10
   12ee0:	add	x1, x29, #0x18
   12ee4:	mov	x3, x21
   12ee8:	bl	12fa0 <PyInit__decimal@@Base+0xc48c>
   12eec:	ldr	x8, [sp, #16]
   12ef0:	sub	x20, x20, #0x1
   12ef4:	cmp	x20, #0x1
   12ef8:	madd	x8, x25, x23, x8
   12efc:	str	x8, [x24], #-8
   12f00:	ldr	x25, [x29, #24]
   12f04:	b.ne	12ed8 <PyInit__decimal@@Base+0xc3c4>  // b.any
   12f08:	stur	x25, [x29, #-8]
   12f0c:	ldur	x8, [x29, #-8]
   12f10:	ldr	x9, [sp, #8]
   12f14:	mul	x8, x8, x23
   12f18:	str	x8, [x19, x9, lsl #3]
   12f1c:	b	12f48 <PyInit__decimal@@Base+0xc434>
   12f20:	cbz	x20, 12f48 <PyInit__decimal@@Base+0xc434>
   12f24:	ldr	x8, [sp, #8]
   12f28:	sub	x9, x22, #0x8
   12f2c:	add	x8, x19, x8, lsl #3
   12f30:	sub	x8, x8, #0x8
   12f34:	lsl	x10, x20, #3
   12f38:	ldr	x11, [x9, x10]
   12f3c:	subs	x20, x20, #0x1
   12f40:	str	x11, [x8, x10]
   12f44:	b.ne	12f34 <PyInit__decimal@@Base+0xc420>  // b.any
   12f48:	ldr	x1, [sp, #8]
   12f4c:	mov	x0, x19
   12f50:	bl	18538 <PyInit__decimal@@Base+0x11a24>
   12f54:	ldp	x20, x19, [sp, #112]
   12f58:	ldp	x22, x21, [sp, #96]
   12f5c:	ldp	x24, x23, [sp, #80]
   12f60:	ldp	x26, x25, [sp, #64]
   12f64:	ldr	x27, [sp, #48]
   12f68:	ldp	x29, x30, [sp, #32]
   12f6c:	add	sp, sp, #0x80
   12f70:	ret
   12f74:	mov	x8, #0x435f                	// #17247
   12f78:	movk	x8, #0xd79, lsl #16
   12f7c:	movk	x8, #0x35e5, lsl #32
   12f80:	movk	x8, #0xd794, lsl #48
   12f84:	umulh	x8, x2, x8
   12f88:	mov	x9, #0xffffffffffffffed    	// #-19
   12f8c:	lsr	x8, x8, #4
   12f90:	str	x8, [x0]
   12f94:	madd	x8, x8, x9, x2
   12f98:	str	x8, [x1]
   12f9c:	ret
   12fa0:	cmp	x3, #0x9
   12fa4:	b.hi	12fd8 <PyInit__decimal@@Base+0xc4c4>  // b.pmore
   12fa8:	cmp	x3, #0x4
   12fac:	b.hi	1302c <PyInit__decimal@@Base+0xc518>  // b.pmore
   12fb0:	b.hi	13308 <PyInit__decimal@@Base+0xc7f4>  // b.pmore
   12fb4:	adrp	x8, 2d000 <PyInit__decimal@@Base+0x264ec>
   12fb8:	add	x8, x8, #0xd53
   12fbc:	adr	x9, 12fcc <PyInit__decimal@@Base+0xc4b8>
   12fc0:	ldrb	w10, [x8, x3]
   12fc4:	add	x9, x9, x10, lsl #2
   12fc8:	br	x9
   12fcc:	str	x2, [x0]
   12fd0:	str	xzr, [x1]
   12fd4:	ret
   12fd8:	cmp	x3, #0xe
   12fdc:	b.hi	13078 <PyInit__decimal@@Base+0xc564>  // b.pmore
   12fe0:	sub	x8, x3, #0xa
   12fe4:	cmp	x8, #0x4
   12fe8:	b.hi	13308 <PyInit__decimal@@Base+0xc7f4>  // b.pmore
   12fec:	adrp	x9, 2d000 <PyInit__decimal@@Base+0x264ec>
   12ff0:	add	x9, x9, #0xd49
   12ff4:	adr	x10, 13004 <PyInit__decimal@@Base+0xc4f0>
   12ff8:	ldrb	w11, [x9, x8]
   12ffc:	add	x10, x10, x11, lsl #2
   13000:	br	x10
   13004:	mov	x8, #0xd5bf                	// #54719
   13008:	movk	x8, #0xbded, lsl #16
   1300c:	movk	x8, #0xfece, lsl #32
   13010:	movk	x8, #0xdbe6, lsl #48
   13014:	mov	x9, #0xffffffffffff1c00    	// #-58368
   13018:	movk	x9, #0xabf4, lsl #16
   1301c:	umulh	x8, x2, x8
   13020:	movk	x9, #0xfffd, lsl #32
   13024:	lsr	x8, x8, #33
   13028:	b	132a4 <PyInit__decimal@@Base+0xc790>
   1302c:	sub	x8, x3, #0x5
   13030:	cmp	x8, #0x4
   13034:	b.hi	13308 <PyInit__decimal@@Base+0xc7f4>  // b.pmore
   13038:	adrp	x9, 2d000 <PyInit__decimal@@Base+0x264ec>
   1303c:	add	x9, x9, #0xd4e
   13040:	adr	x10, 13050 <PyInit__decimal@@Base+0xc53c>
   13044:	ldrb	w11, [x9, x8]
   13048:	add	x10, x10, x11, lsl #2
   1304c:	br	x10
   13050:	mov	x9, #0x7843                	// #30787
   13054:	movk	x9, #0x71b4, lsl #16
   13058:	movk	x9, #0x5ac4, lsl #32
   1305c:	lsr	x8, x2, #5
   13060:	movk	x9, #0xa7c, lsl #48
   13064:	mov	x10, #0xffffffffffff7960    	// #-34464
   13068:	umulh	x8, x8, x9
   1306c:	movk	x10, #0xfffe, lsl #16
   13070:	lsr	x8, x8, #7
   13074:	b	132fc <PyInit__decimal@@Base+0xc7e8>
   13078:	sub	x8, x3, #0xf
   1307c:	cmp	x8, #0x4
   13080:	b.hi	13308 <PyInit__decimal@@Base+0xc7f4>  // b.pmore
   13084:	adrp	x9, 2d000 <PyInit__decimal@@Base+0x264ec>
   13088:	add	x9, x9, #0xd44
   1308c:	adr	x10, 1309c <PyInit__decimal@@Base+0xc588>
   13090:	ldrb	w11, [x9, x8]
   13094:	add	x10, x10, x11, lsl #2
   13098:	br	x10
   1309c:	mov	x9, #0xeac3                	// #60099
   130a0:	movk	x9, #0xf3dc, lsl #16
   130a4:	movk	x9, #0x4075, lsl #32
   130a8:	mov	x10, #0x8000                	// #32768
   130ac:	lsr	x8, x2, #15
   130b0:	movk	x9, #0x2, lsl #48
   130b4:	movk	x10, #0x5b39, lsl #16
   130b8:	movk	x10, #0x7281, lsl #32
   130bc:	umulh	x8, x8, x9
   130c0:	movk	x10, #0xfffc, lsl #48
   130c4:	lsr	x8, x8, #20
   130c8:	b	132fc <PyInit__decimal@@Base+0xc7e8>
   130cc:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   130d0:	movk	x8, #0xcccd
   130d4:	umulh	x8, x2, x8
   130d8:	mov	x9, #0xfffffffffffffff6    	// #-10
   130dc:	lsr	x8, x8, #3
   130e0:	b	132a4 <PyInit__decimal@@Base+0xc790>
   130e4:	mov	x9, #0xf5c3                	// #62915
   130e8:	movk	x9, #0x5c28, lsl #16
   130ec:	movk	x9, #0xc28f, lsl #32
   130f0:	lsr	x8, x2, #2
   130f4:	movk	x9, #0x28f5, lsl #48
   130f8:	umulh	x8, x8, x9
   130fc:	mov	x10, #0xffffffffffffff9c    	// #-100
   13100:	lsr	x8, x8, #2
   13104:	b	132fc <PyInit__decimal@@Base+0xc7e8>
   13108:	mov	x9, #0xf7cf                	// #63439
   1310c:	movk	x9, #0xe353, lsl #16
   13110:	movk	x9, #0x9ba5, lsl #32
   13114:	lsr	x8, x2, #3
   13118:	movk	x9, #0x20c4, lsl #48
   1311c:	umulh	x8, x8, x9
   13120:	mov	x10, #0xfffffffffffffc18    	// #-1000
   13124:	lsr	x8, x8, #4
   13128:	b	132fc <PyInit__decimal@@Base+0xc7e8>
   1312c:	mov	x8, #0x594b                	// #22859
   13130:	movk	x8, #0x3886, lsl #16
   13134:	movk	x8, #0xc5d6, lsl #32
   13138:	movk	x8, #0x346d, lsl #48
   1313c:	umulh	x8, x2, x8
   13140:	mov	x9, #0xffffffffffffd8f0    	// #-10000
   13144:	lsr	x8, x8, #11
   13148:	b	132a4 <PyInit__decimal@@Base+0xc790>
   1314c:	mov	x8, #0xaaff                	// #43775
   13150:	movk	x8, #0xcb24, lsl #16
   13154:	movk	x8, #0xff0b, lsl #32
   13158:	movk	x8, #0xafeb, lsl #48
   1315c:	mov	x9, #0xffffffffffff1800    	// #-59392
   13160:	movk	x9, #0xb789, lsl #16
   13164:	umulh	x8, x2, x8
   13168:	movk	x9, #0xffe8, lsl #32
   1316c:	lsr	x8, x8, #36
   13170:	b	132a4 <PyInit__decimal@@Base+0xc790>
   13174:	mov	x8, #0x2233                	// #8755
   13178:	movk	x8, #0x5bd4, lsl #16
   1317c:	movk	x8, #0x3302, lsl #32
   13180:	movk	x8, #0x232f, lsl #48
   13184:	mov	x9, #0xfffffffffffff000    	// #-4096
   13188:	movk	x9, #0x2b5a, lsl #16
   1318c:	umulh	x8, x2, x8
   13190:	movk	x9, #0xff17, lsl #32
   13194:	lsr	x8, x8, #37
   13198:	b	132a4 <PyInit__decimal@@Base+0xc790>
   1319c:	mov	x8, #0x385                 	// #901
   131a0:	movk	x8, #0x92ed, lsl #16
   131a4:	movk	x8, #0x84d0, lsl #32
   131a8:	movk	x8, #0x384b, lsl #48
   131ac:	mov	x9, #0xffffffffffff6000    	// #-40960
   131b0:	movk	x9, #0xb18d, lsl #16
   131b4:	umulh	x8, x2, x8
   131b8:	movk	x9, #0xf6e7, lsl #32
   131bc:	lsr	x8, x8, #41
   131c0:	b	132a4 <PyInit__decimal@@Base+0xc790>
   131c4:	mov	x8, #0xcd81                	// #52609
   131c8:	movk	x8, #0x5095, lsl #16
   131cc:	movk	x8, #0x4dc3, lsl #32
   131d0:	movk	x8, #0xb42, lsl #48
   131d4:	mov	x9, #0xffffffffffffc000    	// #-16384
   131d8:	movk	x9, #0xef85, lsl #16
   131dc:	umulh	x8, x2, x8
   131e0:	movk	x9, #0xa50c, lsl #32
   131e4:	lsr	x8, x8, #42
   131e8:	b	132a4 <PyInit__decimal@@Base+0xc790>
   131ec:	mov	x8, #0x34db                	// #13531
   131f0:	movk	x8, #0xd7b6, lsl #16
   131f4:	movk	x8, #0xde82, lsl #32
   131f8:	movk	x8, #0x431b, lsl #48
   131fc:	mov	x9, #0xffffffffffffbdc0    	// #-16960
   13200:	umulh	x8, x2, x8
   13204:	movk	x9, #0xfff0, lsl #16
   13208:	lsr	x8, x8, #18
   1320c:	b	132a4 <PyInit__decimal@@Base+0xc790>
   13210:	mov	x8, #0x42bd                	// #17085
   13214:	movk	x8, #0xe57a, lsl #16
   13218:	movk	x8, #0x94d5, lsl #32
   1321c:	movk	x8, #0xd6bf, lsl #48
   13220:	mov	x9, #0xffffffffffff6980    	// #-38528
   13224:	umulh	x8, x2, x8
   13228:	movk	x9, #0xff67, lsl #16
   1322c:	lsr	x8, x8, #23
   13230:	b	132a4 <PyInit__decimal@@Base+0xc790>
   13234:	mov	x8, #0xcefd                	// #52989
   13238:	movk	x8, #0x8461, lsl #16
   1323c:	movk	x8, #0x7711, lsl #32
   13240:	movk	x8, #0xabcc, lsl #48
   13244:	mov	x9, #0xffffffffffff1f00    	// #-57600
   13248:	umulh	x8, x2, x8
   1324c:	movk	x9, #0xfa0a, lsl #16
   13250:	lsr	x8, x8, #26
   13254:	b	132a4 <PyInit__decimal@@Base+0xc790>
   13258:	mov	x9, #0x5a53                	// #23123
   1325c:	movk	x9, #0xa09b, lsl #16
   13260:	movk	x9, #0xb82f, lsl #32
   13264:	lsr	x8, x2, #9
   13268:	movk	x9, #0x44, lsl #48
   1326c:	mov	x10, #0xffffffffffff3600    	// #-51712
   13270:	umulh	x8, x8, x9
   13274:	movk	x10, #0xc465, lsl #16
   13278:	lsr	x8, x8, #11
   1327c:	b	132fc <PyInit__decimal@@Base+0xc7e8>
   13280:	mov	x8, #0x7857                	// #30807
   13284:	movk	x8, #0xb113, lsl #16
   13288:	movk	x8, #0x652f, lsl #32
   1328c:	movk	x8, #0x39a5, lsl #48
   13290:	mov	x9, #0x903f0000            	// #2420047872
   13294:	movk	x9, #0x790d, lsl #32
   13298:	umulh	x8, x2, x8
   1329c:	movk	x9, #0xffdc, lsl #48
   132a0:	lsr	x8, x8, #51
   132a4:	str	x8, [x0]
   132a8:	madd	x8, x8, x9, x2
   132ac:	b	13304 <PyInit__decimal@@Base+0xc7f0>
   132b0:	mov	x9, #0x1b53                	// #6995
   132b4:	movk	x9, #0xd519, lsl #16
   132b8:	lsr	x8, x2, #17
   132bc:	movk	x9, #0x5c3b, lsl #32
   132c0:	mov	x10, #0xa2760000            	// #2725642240
   132c4:	movk	x10, #0xba87, lsl #32
   132c8:	umulh	x8, x8, x9
   132cc:	movk	x10, #0xfe9c, lsl #48
   132d0:	lsr	x8, x8, #22
   132d4:	b	132fc <PyInit__decimal@@Base+0xc7e8>
   132d8:	mov	x9, #0x490f                	// #18703
   132dc:	movk	x9, #0x7747, lsl #16
   132e0:	lsr	x8, x2, #18
   132e4:	movk	x9, #0x49c9, lsl #32
   132e8:	mov	x10, #0x589c0000            	// #1486618624
   132ec:	movk	x10, #0x494c, lsl #32
   132f0:	umulh	x8, x8, x9
   132f4:	movk	x10, #0xf21f, lsl #48
   132f8:	lsr	x8, x8, #24
   132fc:	str	x8, [x0]
   13300:	madd	x8, x8, x10, x2
   13304:	str	x8, [x1]
   13308:	ret
   1330c:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   13310:	movk	x8, #0x2304, lsl #32
   13314:	movk	x8, #0x8ac7, lsl #48
   13318:	cmp	x2, x8
   1331c:	csinc	x8, xzr, x8, ls  // ls = plast
   13320:	cset	w9, hi  // hi = pmore
   13324:	sub	x8, x2, x8
   13328:	str	x9, [x0]
   1332c:	b	13304 <PyInit__decimal@@Base+0xc7f0>
   13330:	sub	sp, sp, #0x90
   13334:	stp	x29, x30, [sp, #64]
   13338:	stp	x26, x25, [sp, #80]
   1333c:	stp	x24, x23, [sp, #96]
   13340:	stp	x22, x21, [sp, #112]
   13344:	stp	x20, x19, [sp, #128]
   13348:	add	x29, sp, #0x40
   1334c:	mov	x21, x2
   13350:	mov	x20, x1
   13354:	mov	x19, x0
   13358:	add	x0, sp, #0x10
   1335c:	add	x1, sp, #0x8
   13360:	mov	x2, x3
   13364:	bl	12f74 <PyInit__decimal@@Base+0xc460>
   13368:	ldr	x22, [sp, #8]
   1336c:	stp	xzr, xzr, [sp, #24]
   13370:	cbz	x22, 1343c <PyInit__decimal@@Base+0xc928>
   13374:	ldr	x23, [sp, #16]
   13378:	sub	x0, x29, #0x18
   1337c:	add	x1, sp, #0x18
   13380:	mov	x3, x22
   13384:	ldr	x2, [x20, x23, lsl #3]
   13388:	bl	12fa0 <PyInit__decimal@@Base+0xc48c>
   1338c:	ldr	x2, [sp, #24]
   13390:	sub	x3, x22, #0x1
   13394:	add	x0, sp, #0x20
   13398:	add	x1, sp, #0x18
   1339c:	bl	12fa0 <PyInit__decimal@@Base+0xc48c>
   133a0:	cbz	x23, 133c4 <PyInit__decimal@@Base+0xc8b0>
   133a4:	ldr	x8, [sp, #24]
   133a8:	cbnz	x8, 133c4 <PyInit__decimal@@Base+0xc8b0>
   133ac:	mov	x0, x20
   133b0:	mov	x1, x23
   133b4:	bl	12e10 <PyInit__decimal@@Base+0xc2fc>
   133b8:	cmp	w0, #0x0
   133bc:	cset	w8, eq  // eq = none
   133c0:	str	x8, [sp, #24]
   133c4:	add	x8, x23, #0x1
   133c8:	cmp	x8, x21
   133cc:	b.cs	1349c <PyInit__decimal@@Base+0xc988>  // b.hs, b.nlast
   133d0:	mov	w9, #0x13                  	// #19
   133d4:	adrp	x10, 2e000 <PyInit__decimal@@Base+0x274ec>
   133d8:	add	x10, x10, #0x20
   133dc:	sub	x9, x9, x22
   133e0:	ldr	x25, [x10, x9, lsl #3]
   133e4:	ldur	x26, [x29, #-24]
   133e8:	mvn	x9, x23
   133ec:	mov	x24, xzr
   133f0:	add	x21, x9, x21
   133f4:	add	x20, x20, x8, lsl #3
   133f8:	lsl	x23, x24, #3
   133fc:	ldr	x2, [x20, x23]
   13400:	sub	x0, x29, #0x10
   13404:	sub	x1, x29, #0x8
   13408:	mov	x3, x22
   1340c:	bl	12fa0 <PyInit__decimal@@Base+0xc48c>
   13410:	ldur	x8, [x29, #-8]
   13414:	add	x24, x24, #0x1
   13418:	cmp	x21, x24
   1341c:	madd	x8, x8, x25, x26
   13420:	str	x8, [x19, x23]
   13424:	ldur	x26, [x29, #-16]
   13428:	b.ne	133f8 <PyInit__decimal@@Base+0xc8e4>  // b.any
   1342c:	stur	x26, [x29, #-24]
   13430:	ldur	x8, [x29, #-24]
   13434:	cbnz	x8, 134a8 <PyInit__decimal@@Base+0xc994>
   13438:	b	134ac <PyInit__decimal@@Base+0xc998>
   1343c:	ldr	x23, [sp, #16]
   13440:	cbz	x23, 1347c <PyInit__decimal@@Base+0xc968>
   13444:	sub	x22, x23, #0x1
   13448:	ldr	x2, [x20, x22, lsl #3]
   1344c:	add	x0, sp, #0x20
   13450:	add	x1, sp, #0x18
   13454:	mov	w3, #0x12                  	// #18
   13458:	bl	12fa0 <PyInit__decimal@@Base+0xc48c>
   1345c:	ldr	x8, [sp, #24]
   13460:	cbnz	x8, 1347c <PyInit__decimal@@Base+0xc968>
   13464:	mov	x0, x20
   13468:	mov	x1, x22
   1346c:	bl	12e10 <PyInit__decimal@@Base+0xc2fc>
   13470:	cmp	w0, #0x0
   13474:	cset	w8, eq  // eq = none
   13478:	str	x8, [sp, #24]
   1347c:	subs	x8, x21, x23
   13480:	b.eq	134ac <PyInit__decimal@@Base+0xc998>  // b.none
   13484:	add	x9, x20, x23, lsl #3
   13488:	ldr	x10, [x9], #8
   1348c:	subs	x8, x8, #0x1
   13490:	str	x10, [x19], #8
   13494:	b.ne	13488 <PyInit__decimal@@Base+0xc974>  // b.any
   13498:	b	134ac <PyInit__decimal@@Base+0xc998>
   1349c:	mov	x24, xzr
   134a0:	ldur	x8, [x29, #-24]
   134a4:	cbz	x8, 134ac <PyInit__decimal@@Base+0xc998>
   134a8:	str	x8, [x19, x24, lsl #3]
   134ac:	ldr	x0, [sp, #32]
   134b0:	cmp	x0, #0x5
   134b4:	b.eq	134bc <PyInit__decimal@@Base+0xc9a8>  // b.none
   134b8:	cbnz	x0, 134c8 <PyInit__decimal@@Base+0xc9b4>
   134bc:	ldr	x8, [sp, #24]
   134c0:	cmp	x8, #0x0
   134c4:	cinc	x0, x0, ne  // ne = any
   134c8:	ldp	x20, x19, [sp, #128]
   134cc:	ldp	x22, x21, [sp, #112]
   134d0:	ldp	x24, x23, [sp, #96]
   134d4:	ldp	x26, x25, [sp, #80]
   134d8:	ldp	x29, x30, [sp, #64]
   134dc:	add	sp, sp, #0x90
   134e0:	ret
   134e4:	ldr	x9, [x0]
   134e8:	mov	x8, x0
   134ec:	adds	x9, x9, x2
   134f0:	cset	w10, cs  // cs = hs, nlast
   134f4:	cmp	x9, x3
   134f8:	cset	w11, cs  // cs = hs, nlast
   134fc:	orr	w0, w10, w11
   13500:	cmp	w0, #0x0
   13504:	csel	x10, x3, xzr, ne  // ne = any
   13508:	sub	x9, x9, x10
   1350c:	str	x9, [x8]
   13510:	cbz	w0, 1354c <PyInit__decimal@@Base+0xca38>
   13514:	cmp	x1, #0x2
   13518:	b.cc	1354c <PyInit__decimal@@Base+0xca38>  // b.lo, b.ul, b.last
   1351c:	mov	w9, #0x1                   	// #1
   13520:	lsl	x10, x9, #3
   13524:	ldr	x11, [x8, x10]
   13528:	add	x11, x11, x0
   1352c:	cmp	x11, x3
   13530:	cset	w0, eq  // eq = none
   13534:	csel	x11, xzr, x11, eq  // eq = none
   13538:	str	x11, [x8, x10]
   1353c:	b.ne	1354c <PyInit__decimal@@Base+0xca38>  // b.any
   13540:	add	x9, x9, #0x1
   13544:	cmp	x9, x1
   13548:	b.cc	13520 <PyInit__decimal@@Base+0xca0c>  // b.lo, b.ul, b.last
   1354c:	ret
   13550:	sub	sp, sp, #0x50
   13554:	stp	x29, x30, [sp, #32]
   13558:	stp	x22, x21, [sp, #48]
   1355c:	stp	x20, x19, [sp, #64]
   13560:	add	x29, sp, #0x20
   13564:	str	xzr, [sp, #8]
   13568:	cbz	x2, 135d4 <PyInit__decimal@@Base+0xcac0>
   1356c:	mov	x19, x3
   13570:	mov	x20, x2
   13574:	mov	x21, x1
   13578:	mov	x22, x0
   1357c:	b	135a0 <PyInit__decimal@@Base+0xca8c>
   13580:	ldur	x2, [x29, #-8]
   13584:	add	x0, sp, #0x8
   13588:	mov	x1, x22
   1358c:	bl	12750 <PyInit__decimal@@Base+0xbc3c>
   13590:	subs	x20, x20, #0x1
   13594:	add	x22, x22, #0x8
   13598:	add	x21, x21, #0x8
   1359c:	b.eq	135d4 <PyInit__decimal@@Base+0xcac0>  // b.none
   135a0:	ldr	x2, [x21]
   135a4:	sub	x0, x29, #0x8
   135a8:	add	x1, sp, #0x10
   135ac:	mov	x3, x19
   135b0:	bl	1273c <PyInit__decimal@@Base+0xbc28>
   135b4:	ldp	x8, x9, [sp, #8]
   135b8:	adds	x3, x9, x8
   135bc:	str	x3, [sp, #16]
   135c0:	b.cc	13580 <PyInit__decimal@@Base+0xca6c>  // b.lo, b.ul, b.last
   135c4:	ldur	x8, [x29, #-8]
   135c8:	add	x8, x8, #0x1
   135cc:	stur	x8, [x29, #-8]
   135d0:	b	13580 <PyInit__decimal@@Base+0xca6c>
   135d4:	ldr	x0, [sp, #8]
   135d8:	ldp	x20, x19, [sp, #64]
   135dc:	ldp	x22, x21, [sp, #48]
   135e0:	ldp	x29, x30, [sp, #32]
   135e4:	add	sp, sp, #0x50
   135e8:	ret
   135ec:	sub	sp, sp, #0x50
   135f0:	stp	x29, x30, [sp, #16]
   135f4:	str	x23, [sp, #32]
   135f8:	stp	x22, x21, [sp, #48]
   135fc:	stp	x20, x19, [sp, #64]
   13600:	add	x29, sp, #0x10
   13604:	str	xzr, [sp]
   13608:	cbz	x2, 1367c <PyInit__decimal@@Base+0xcb68>
   1360c:	mov	x19, x4
   13610:	mov	x20, x3
   13614:	mov	x21, x2
   13618:	mov	x22, x1
   1361c:	mov	x23, x0
   13620:	b	13648 <PyInit__decimal@@Base+0xcb34>
   13624:	ldr	x2, [x29, #24]
   13628:	mov	x0, sp
   1362c:	mov	x1, x23
   13630:	mov	x4, x19
   13634:	bl	12a18 <PyInit__decimal@@Base+0xbf04>
   13638:	subs	x21, x21, #0x1
   1363c:	add	x23, x23, #0x8
   13640:	add	x22, x22, #0x8
   13644:	b.eq	1367c <PyInit__decimal@@Base+0xcb68>  // b.none
   13648:	ldr	x2, [x22]
   1364c:	add	x0, x29, #0x18
   13650:	add	x1, sp, #0x8
   13654:	mov	x3, x20
   13658:	bl	1273c <PyInit__decimal@@Base+0xbc28>
   1365c:	ldp	x8, x9, [sp]
   13660:	adds	x3, x9, x8
   13664:	str	x3, [sp, #8]
   13668:	b.cc	13624 <PyInit__decimal@@Base+0xcb10>  // b.lo, b.ul, b.last
   1366c:	ldr	x8, [x29, #24]
   13670:	add	x8, x8, #0x1
   13674:	str	x8, [x29, #24]
   13678:	b	13624 <PyInit__decimal@@Base+0xcb10>
   1367c:	ldr	x0, [sp]
   13680:	ldp	x20, x19, [sp, #64]
   13684:	ldp	x22, x21, [sp, #48]
   13688:	ldr	x23, [sp, #32]
   1368c:	ldp	x29, x30, [sp, #16]
   13690:	add	sp, sp, #0x50
   13694:	ret
   13698:	sub	sp, sp, #0x60
   1369c:	stp	x29, x30, [sp, #32]
   136a0:	stp	x24, x23, [sp, #48]
   136a4:	stp	x22, x21, [sp, #64]
   136a8:	stp	x20, x19, [sp, #80]
   136ac:	add	x29, sp, #0x20
   136b0:	str	xzr, [sp, #8]
   136b4:	cbz	x2, 13734 <PyInit__decimal@@Base+0xcc20>
   136b8:	mov	x21, x2
   136bc:	add	x8, x0, x21, lsl #3
   136c0:	mov	x19, x4
   136c4:	mov	x20, x3
   136c8:	mov	x2, xzr
   136cc:	sub	x22, x8, #0x8
   136d0:	sub	x23, x1, #0x8
   136d4:	b	136f8 <PyInit__decimal@@Base+0xcbe4>
   136d8:	ldur	x2, [x29, #-8]
   136dc:	add	x1, sp, #0x8
   136e0:	mov	x0, x22
   136e4:	mov	x4, x20
   136e8:	bl	12a18 <PyInit__decimal@@Base+0xbf04>
   136ec:	ldr	x2, [sp, #8]
   136f0:	sub	x22, x22, #0x8
   136f4:	cbz	x21, 13734 <PyInit__decimal@@Base+0xcc20>
   136f8:	sub	x0, x29, #0x8
   136fc:	add	x1, sp, #0x10
   13700:	mov	x3, x19
   13704:	mov	x24, x21
   13708:	sub	x21, x21, #0x1
   1370c:	bl	1273c <PyInit__decimal@@Base+0xbc28>
   13710:	ldr	x8, [x23, x24, lsl #3]
   13714:	ldr	x9, [sp, #16]
   13718:	adds	x3, x9, x8
   1371c:	str	x3, [sp, #16]
   13720:	b.cc	136d8 <PyInit__decimal@@Base+0xcbc4>  // b.lo, b.ul, b.last
   13724:	ldur	x8, [x29, #-8]
   13728:	add	x8, x8, #0x1
   1372c:	stur	x8, [x29, #-8]
   13730:	b	136d8 <PyInit__decimal@@Base+0xcbc4>
   13734:	ldp	x20, x19, [sp, #80]
   13738:	ldp	x22, x21, [sp, #64]
   1373c:	ldp	x24, x23, [sp, #48]
   13740:	ldp	x29, x30, [sp, #32]
   13744:	mov	x0, x2
   13748:	add	sp, sp, #0x60
   1374c:	ret
   13750:	stp	x29, x30, [sp, #-16]!
   13754:	mov	x29, sp
   13758:	mov	w0, #0x8                   	// #8
   1375c:	bl	64b0 <raise@plt>
   13760:	ldp	x29, x30, [sp], #16
   13764:	ret
   13768:	stp	x29, x30, [sp, #-32]!
   1376c:	str	x19, [sp, #16]
   13770:	mov	x29, sp
   13774:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   13778:	ldrb	w9, [x8, #1584]
   1377c:	cmp	w9, #0x1
   13780:	b.eq	137ac <PyInit__decimal@@Base+0xcc98>  // b.none
   13784:	sub	x9, x0, #0x2
   13788:	cmp	x9, #0x3f
   1378c:	b.cs	137f8 <PyInit__decimal@@Base+0xcce4>  // b.hs, b.nlast
   13790:	adrp	x9, 42000 <PyInit__decimal@@Base+0x3b4ec>
   13794:	mov	w10, #0x1                   	// #1
   13798:	str	x0, [x9, #1344]
   1379c:	strb	w10, [x8, #1584]
   137a0:	ldr	x19, [sp, #16]
   137a4:	ldp	x29, x30, [sp], #32
   137a8:	ret
   137ac:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   137b0:	ldr	x19, [x19, #3904]
   137b4:	adrp	x1, 2e000 <PyInit__decimal@@Base+0x274ec>
   137b8:	adrp	x2, 2e000 <PyInit__decimal@@Base+0x274ec>
   137bc:	add	x1, x1, #0x158
   137c0:	ldr	x0, [x19]
   137c4:	add	x2, x2, #0x169
   137c8:	mov	w3, #0x37                  	// #55
   137cc:	bl	6a10 <fprintf@plt>
   137d0:	ldr	x3, [x19]
   137d4:	adrp	x0, 2e000 <PyInit__decimal@@Base+0x274ec>
   137d8:	add	x0, x0, #0x1a3
   137dc:	mov	w1, #0x44                  	// #68
   137e0:	mov	w2, #0x1                   	// #1
   137e4:	bl	68d0 <fwrite@plt>
   137e8:	ldr	x1, [x19]
   137ec:	mov	w0, #0xa                   	// #10
   137f0:	bl	6550 <fputc@plt>
   137f4:	b	137a0 <PyInit__decimal@@Base+0xcc8c>
   137f8:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   137fc:	ldr	x19, [x19, #3904]
   13800:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   13804:	adrp	x2, 2e000 <PyInit__decimal@@Base+0x274ec>
   13808:	add	x1, x1, #0xd58
   1380c:	ldr	x0, [x19]
   13810:	add	x2, x2, #0x169
   13814:	mov	w3, #0x3b                  	// #59
   13818:	bl	6a10 <fprintf@plt>
   1381c:	ldr	x3, [x19]
   13820:	adrp	x0, 2e000 <PyInit__decimal@@Base+0x274ec>
   13824:	add	x0, x0, #0x1e8
   13828:	mov	w1, #0x1e                  	// #30
   1382c:	mov	w2, #0x1                   	// #1
   13830:	bl	68d0 <fwrite@plt>
   13834:	ldr	x1, [x19]
   13838:	mov	w0, #0xa                   	// #10
   1383c:	bl	6550 <fputc@plt>
   13840:	bl	6760 <abort@plt>
   13844:	stp	x29, x30, [sp, #-32]!
   13848:	stp	x20, x19, [sp, #16]
   1384c:	mov	x29, sp
   13850:	mov	x20, x1
   13854:	mov	x19, x0
   13858:	bl	138c4 <PyInit__decimal@@Base+0xcdb0>
   1385c:	mov	x0, x19
   13860:	mov	x1, x20
   13864:	bl	13900 <PyInit__decimal@@Base+0xcdec>
   13868:	cbz	w0, 138ac <PyInit__decimal@@Base+0xcd98>
   1386c:	mov	x9, #0x9436                	// #37942
   13870:	movk	x9, #0x50d7, lsl #16
   13874:	movk	x9, #0x435e, lsl #32
   13878:	add	x8, x20, #0x12
   1387c:	movk	x9, #0xd79, lsl #48
   13880:	smulh	x8, x8, x9
   13884:	add	x8, x8, x8, lsr #63
   13888:	lsl	x8, x8, #1
   1388c:	mov	w10, #0x2                   	// #2
   13890:	cmp	x8, #0x2
   13894:	csel	x8, x8, x10, gt
   13898:	cmp	x8, #0x40
   1389c:	mov	w9, #0x40                  	// #64
   138a0:	csel	x0, x8, x9, lt  // lt = tstop
   138a4:	bl	13768 <PyInit__decimal@@Base+0xcc54>
   138a8:	b	138b8 <PyInit__decimal@@Base+0xcda4>
   138ac:	mov	w1, #0x80                  	// #128
   138b0:	mov	x0, x19
   138b4:	bl	13930 <PyInit__decimal@@Base+0xce1c>
   138b8:	ldp	x20, x19, [sp, #16]
   138bc:	ldp	x29, x30, [sp], #32
   138c0:	ret
   138c4:	mov	x10, #0x1                   	// #1
   138c8:	mov	x9, #0xffffffffa763ffff    	// #-1486618625
   138cc:	movk	x10, #0x589c, lsl #16
   138d0:	movk	x9, #0xb6b3, lsl #32
   138d4:	movk	x10, #0x494c, lsl #32
   138d8:	mov	w8, #0x26                  	// #38
   138dc:	movk	x9, #0xde0, lsl #48
   138e0:	movk	x10, #0xf21f, lsl #48
   138e4:	mov	w11, #0x4bbe                	// #19390
   138e8:	mov	x12, #0x400000000           	// #17179869184
   138ec:	mov	x13, #0x100000000           	// #4294967296
   138f0:	stp	x8, x9, [x0]
   138f4:	stp	x10, x11, [x0, #16]
   138f8:	stp	x12, x13, [x0, #32]
   138fc:	ret
   13900:	mov	x9, #0xfffe                	// #65534
   13904:	movk	x9, #0xa763, lsl #16
   13908:	movk	x9, #0xb6b3, lsl #32
   1390c:	sub	x8, x1, #0x1
   13910:	movk	x9, #0xde0, lsl #48
   13914:	cmp	x8, x9
   13918:	b.ls	13924 <PyInit__decimal@@Base+0xce10>  // b.plast
   1391c:	mov	w0, wzr
   13920:	ret
   13924:	str	x1, [x0]
   13928:	mov	w0, #0x1                   	// #1
   1392c:	ret
   13930:	stp	x29, x30, [sp, #-16]!
   13934:	mov	x29, sp
   13938:	ldp	w9, w8, [x0, #24]
   1393c:	orr	w10, w8, w1
   13940:	ands	w8, w9, w1
   13944:	str	w10, [x0, #28]
   13948:	b.eq	1395c <PyInit__decimal@@Base+0xce48>  // b.none
   1394c:	str	w8, [x0, #32]
   13950:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   13954:	ldr	x8, [x8, #1336]
   13958:	blr	x8
   1395c:	ldp	x29, x30, [sp], #16
   13960:	ret
   13964:	mov	x9, #0x1                   	// #1
   13968:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   1396c:	movk	x9, #0x589c, lsl #16
   13970:	movk	x8, #0xb6b3, lsl #32
   13974:	movk	x9, #0x494c, lsl #32
   13978:	movk	x8, #0xde0, lsl #48
   1397c:	movk	x9, #0xf21f, lsl #48
   13980:	mov	w10, #0x4bbe                	// #19390
   13984:	mov	x11, #0x600000000           	// #25769803776
   13988:	mov	x12, #0x100000000           	// #4294967296
   1398c:	stp	x8, x8, [x0]
   13990:	stp	x9, x10, [x0, #16]
   13994:	stp	x11, x12, [x0, #32]
   13998:	ret
   1399c:	mov	x10, #0x1                   	// #1
   139a0:	mov	x9, #0xffffffffa763ffff    	// #-1486618625
   139a4:	movk	x10, #0x589c, lsl #16
   139a8:	movk	x9, #0xb6b3, lsl #32
   139ac:	movk	x10, #0x494c, lsl #32
   139b0:	mov	w8, #0x9                   	// #9
   139b4:	movk	x9, #0xde0, lsl #48
   139b8:	movk	x10, #0xf21f, lsl #48
   139bc:	mov	w11, #0x4bbf                	// #19391
   139c0:	mov	x12, #0x400000000           	// #17179869184
   139c4:	mov	x13, #0x100000000           	// #4294967296
   139c8:	stp	x8, x9, [x0]
   139cc:	stp	x10, x11, [x0, #16]
   139d0:	stp	x12, x13, [x0, #32]
   139d4:	ret
   139d8:	sub	w9, w1, #0x1
   139dc:	mov	x8, x0
   139e0:	cmp	w9, #0x1ff
   139e4:	mov	w0, #0xffffffff            	// #-1
   139e8:	b.hi	13a48 <PyInit__decimal@@Base+0xcf34>  // b.pmore
   139ec:	and	w9, w1, #0x1f
   139f0:	cbnz	w9, 13a48 <PyInit__decimal@@Base+0xcf34>
   139f4:	add	w9, w1, #0x1f
   139f8:	cmp	w1, #0x0
   139fc:	add	w10, w1, #0xf
   13a00:	csel	w9, w9, w1, lt  // lt = tstop
   13a04:	csel	w10, w10, w1, lt  // lt = tstop
   13a08:	asr	w9, w9, #5
   13a0c:	asr	w10, w10, #4
   13a10:	add	w9, w9, w9, lsl #3
   13a14:	mov	w11, #0x3                   	// #3
   13a18:	add	w10, w10, #0x3
   13a1c:	sub	w9, w9, #0x2
   13a20:	mov	w12, #0x1                   	// #1
   13a24:	lsl	x10, x11, x10
   13a28:	sxtw	x9, w9
   13a2c:	mov	w0, wzr
   13a30:	mov	x11, #0x600000000           	// #25769803776
   13a34:	sub	x12, x12, x10
   13a38:	stp	x9, x10, [x8]
   13a3c:	mov	x9, #0x100000001           	// #4294967297
   13a40:	stp	x12, xzr, [x8, #16]
   13a44:	stp	x11, x9, [x8, #32]
   13a48:	ret
   13a4c:	ldr	x0, [x0]
   13a50:	ret
   13a54:	ldr	x0, [x0, #8]
   13a58:	ret
   13a5c:	ldr	x0, [x0, #16]
   13a60:	ret
   13a64:	ldr	w0, [x0, #36]
   13a68:	ret
   13a6c:	ldr	w0, [x0, #24]
   13a70:	ret
   13a74:	ldr	w0, [x0, #28]
   13a78:	ret
   13a7c:	ldr	w0, [x0, #40]
   13a80:	ret
   13a84:	ldr	w0, [x0, #44]
   13a88:	ret
   13a8c:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   13a90:	movk	x8, #0xb6b3, lsl #32
   13a94:	movk	x8, #0xde0, lsl #48
   13a98:	cmp	x1, x8
   13a9c:	b.ls	13aa8 <PyInit__decimal@@Base+0xcf94>  // b.plast
   13aa0:	mov	w0, wzr
   13aa4:	ret
   13aa8:	str	x1, [x0, #8]
   13aac:	mov	w0, #0x1                   	// #1
   13ab0:	ret
   13ab4:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   13ab8:	movk	x8, #0xb6b3, lsl #32
   13abc:	movk	x8, #0xde0, lsl #48
   13ac0:	add	x9, x1, x8
   13ac4:	cmp	x9, x8
   13ac8:	b.ls	13ad4 <PyInit__decimal@@Base+0xcfc0>  // b.plast
   13acc:	mov	w0, wzr
   13ad0:	ret
   13ad4:	str	x1, [x0, #16]
   13ad8:	mov	w0, #0x1                   	// #1
   13adc:	ret
   13ae0:	cmp	w1, #0x8
   13ae4:	b.hi	13af4 <PyInit__decimal@@Base+0xcfe0>  // b.pmore
   13ae8:	str	w1, [x0, #36]
   13aec:	mov	w0, #0x1                   	// #1
   13af0:	ret
   13af4:	mov	w0, wzr
   13af8:	ret
   13afc:	lsr	w8, w1, #15
   13b00:	cbz	w8, 13b0c <PyInit__decimal@@Base+0xcff8>
   13b04:	mov	w0, wzr
   13b08:	ret
   13b0c:	str	w1, [x0, #24]
   13b10:	mov	w0, #0x1                   	// #1
   13b14:	ret
   13b18:	lsr	w8, w1, #15
   13b1c:	cbz	w8, 13b28 <PyInit__decimal@@Base+0xd014>
   13b20:	mov	w0, wzr
   13b24:	ret
   13b28:	str	w1, [x0, #28]
   13b2c:	mov	w0, #0x1                   	// #1
   13b30:	ret
   13b34:	cmp	w1, #0x1
   13b38:	b.ls	13b44 <PyInit__decimal@@Base+0xd030>  // b.plast
   13b3c:	mov	w0, wzr
   13b40:	ret
   13b44:	str	w1, [x0, #40]
   13b48:	mov	w0, #0x1                   	// #1
   13b4c:	ret
   13b50:	cmp	w1, #0x1
   13b54:	b.ls	13b60 <PyInit__decimal@@Base+0xd04c>  // b.plast
   13b58:	mov	w0, wzr
   13b5c:	ret
   13b60:	str	w1, [x0, #44]
   13b64:	mov	w0, #0x1                   	// #1
   13b68:	ret
   13b6c:	sub	sp, sp, #0x90
   13b70:	stp	x29, x30, [sp, #48]
   13b74:	stp	x28, x27, [sp, #64]
   13b78:	stp	x26, x25, [sp, #80]
   13b7c:	stp	x24, x23, [sp, #96]
   13b80:	stp	x22, x21, [sp, #112]
   13b84:	stp	x20, x19, [sp, #128]
   13b88:	add	x29, sp, #0x30
   13b8c:	mov	x24, x1
   13b90:	mov	x19, x0
   13b94:	sub	x1, x29, #0x8
   13b98:	mov	w0, w3
   13b9c:	mov	w23, w3
   13ba0:	mov	x22, x2
   13ba4:	bl	13d4c <PyInit__decimal@@Base+0xd238>
   13ba8:	ldur	x20, [x29, #-8]
   13bac:	mov	x0, x22
   13bb0:	sub	x1, x20, #0x2
   13bb4:	mov	x2, x20
   13bb8:	bl	13d60 <PyInit__decimal@@Base+0xd24c>
   13bbc:	mov	x21, x0
   13bc0:	mov	x0, x22
   13bc4:	bl	13dd8 <PyInit__decimal@@Base+0xd2c4>
   13bc8:	adrp	x8, 14000 <PyInit__decimal@@Base+0xd4ec>
   13bcc:	adrp	x9, 26000 <PyInit__decimal@@Base+0x1f4ec>
   13bd0:	adrp	x10, 14000 <PyInit__decimal@@Base+0xd4ec>
   13bd4:	adrp	x11, 26000 <PyInit__decimal@@Base+0x1f4ec>
   13bd8:	add	x8, x8, #0xf4c
   13bdc:	add	x9, x9, #0xca0
   13be0:	cmp	x22, #0x1, lsl #12
   13be4:	add	x10, x10, #0xeec
   13be8:	add	x11, x11, #0x6ec
   13bec:	adrp	x13, 14000 <PyInit__decimal@@Base+0xd4ec>
   13bf0:	adrp	x12, 15000 <PyInit__decimal@@Base+0xe4ec>
   13bf4:	add	x13, x13, #0xfac
   13bf8:	csel	x8, x9, x8, hi  // hi = pmore
   13bfc:	csel	x9, x11, x10, hi  // hi = pmore
   13c00:	cmp	w0, #0x0
   13c04:	add	x12, x12, #0x574
   13c08:	csel	x26, x13, x9, eq  // eq = none
   13c0c:	mov	x0, x19
   13c10:	mov	x1, x22
   13c14:	mov	w2, w23
   13c18:	csel	x25, x12, x8, eq  // eq = none
   13c1c:	blr	x26
   13c20:	cbz	w0, 13d2c <PyInit__decimal@@Base+0xd218>
   13c24:	mov	x0, x24
   13c28:	mov	x1, x22
   13c2c:	mov	w2, w23
   13c30:	blr	x26
   13c34:	cbz	w0, 13d2c <PyInit__decimal@@Base+0xd218>
   13c38:	subs	x26, x22, #0x1
   13c3c:	b.eq	13c90 <PyInit__decimal@@Base+0xd17c>  // b.none
   13c40:	mov	x27, xzr
   13c44:	lsl	x8, x27, #3
   13c48:	add	x28, x19, x8
   13c4c:	ldr	x9, [x28]
   13c50:	add	x8, x24, x8
   13c54:	sub	x0, x29, #0x10
   13c58:	add	x2, sp, #0x18
   13c5c:	stur	x9, [x29, #-16]
   13c60:	ldr	x9, [x28, #8]
   13c64:	ldp	x1, x3, [x8]
   13c68:	mov	x4, x20
   13c6c:	str	x9, [sp, #24]
   13c70:	bl	13df4 <PyInit__decimal@@Base+0xd2e0>
   13c74:	ldur	x8, [x29, #-16]
   13c78:	add	x27, x27, #0x2
   13c7c:	cmp	x27, x26
   13c80:	str	x8, [x28]
   13c84:	ldr	x8, [sp, #24]
   13c88:	str	x8, [x28, #8]
   13c8c:	b.cc	13c44 <PyInit__decimal@@Base+0xd130>  // b.lo, b.ul, b.last
   13c90:	mov	x0, x19
   13c94:	mov	x1, x22
   13c98:	mov	w2, w23
   13c9c:	blr	x25
   13ca0:	cbz	w0, 13d2c <PyInit__decimal@@Base+0xd218>
   13ca4:	subs	x22, x22, #0x3
   13ca8:	b.eq	13d28 <PyInit__decimal@@Base+0xd214>  // b.none
   13cac:	mov	x23, xzr
   13cb0:	add	x24, x19, x23, lsl #3
   13cb4:	ldr	x8, [x24]
   13cb8:	sub	x0, x29, #0x10
   13cbc:	add	x1, sp, #0x18
   13cc0:	mov	x2, x21
   13cc4:	stur	x8, [x29, #-16]
   13cc8:	ldr	x8, [x24, #8]
   13ccc:	mov	x3, x20
   13cd0:	str	x8, [sp, #24]
   13cd4:	ldr	x8, [x24, #16]
   13cd8:	str	x8, [sp, #16]
   13cdc:	ldr	x8, [x24, #24]
   13ce0:	str	x8, [sp, #8]
   13ce4:	bl	13e48 <PyInit__decimal@@Base+0xd334>
   13ce8:	add	x0, sp, #0x10
   13cec:	add	x1, sp, #0x8
   13cf0:	mov	x2, x21
   13cf4:	mov	x3, x20
   13cf8:	bl	13e48 <PyInit__decimal@@Base+0xd334>
   13cfc:	ldur	x8, [x29, #-16]
   13d00:	add	x23, x23, #0x4
   13d04:	cmp	x23, x22
   13d08:	str	x8, [x24]
   13d0c:	ldr	x8, [sp, #24]
   13d10:	str	x8, [x24, #8]
   13d14:	ldr	x8, [sp, #16]
   13d18:	str	x8, [x24, #16]
   13d1c:	ldr	x8, [sp, #8]
   13d20:	str	x8, [x24, #24]
   13d24:	b.cc	13cb0 <PyInit__decimal@@Base+0xd19c>  // b.lo, b.ul, b.last
   13d28:	mov	w0, #0x1                   	// #1
   13d2c:	ldp	x20, x19, [sp, #128]
   13d30:	ldp	x22, x21, [sp, #112]
   13d34:	ldp	x24, x23, [sp, #96]
   13d38:	ldp	x26, x25, [sp, #80]
   13d3c:	ldp	x28, x27, [sp, #64]
   13d40:	ldp	x29, x30, [sp, #48]
   13d44:	add	sp, sp, #0x90
   13d48:	ret
   13d4c:	adrp	x8, 2d000 <PyInit__decimal@@Base+0x264ec>
   13d50:	add	x8, x8, #0xdd0
   13d54:	ldr	x8, [x8, w0, sxtw #3]
   13d58:	str	x8, [x1]
   13d5c:	ret
   13d60:	stp	x29, x30, [sp, #-48]!
   13d64:	stp	x22, x21, [sp, #16]
   13d68:	stp	x20, x19, [sp, #32]
   13d6c:	mov	x29, sp
   13d70:	cbz	x1, 13dc0 <PyInit__decimal@@Base+0xd2ac>
   13d74:	mov	x19, x2
   13d78:	mov	x20, x1
   13d7c:	mov	x22, x0
   13d80:	mov	w21, #0x1                   	// #1
   13d84:	b	13da4 <PyInit__decimal@@Base+0xd290>
   13d88:	mov	x0, x22
   13d8c:	mov	x1, x22
   13d90:	mov	x2, x19
   13d94:	bl	14058 <PyInit__decimal@@Base+0xd544>
   13d98:	lsr	x20, x20, #1
   13d9c:	mov	x22, x0
   13da0:	cbz	x20, 13dc4 <PyInit__decimal@@Base+0xd2b0>
   13da4:	tbz	w20, #0, 13d88 <PyInit__decimal@@Base+0xd274>
   13da8:	mov	x0, x21
   13dac:	mov	x1, x22
   13db0:	mov	x2, x19
   13db4:	bl	14058 <PyInit__decimal@@Base+0xd544>
   13db8:	mov	x21, x0
   13dbc:	b	13d88 <PyInit__decimal@@Base+0xd274>
   13dc0:	mov	w21, #0x1                   	// #1
   13dc4:	mov	x0, x21
   13dc8:	ldp	x20, x19, [sp, #32]
   13dcc:	ldp	x22, x21, [sp, #16]
   13dd0:	ldp	x29, x30, [sp], #48
   13dd4:	ret
   13dd8:	fmov	d0, x0
   13ddc:	cnt	v0.8b, v0.8b
   13de0:	uaddlv	h0, v0.8b
   13de4:	fmov	w8, s0
   13de8:	cmp	x8, #0x1
   13dec:	cset	w0, eq  // eq = none
   13df0:	ret
   13df4:	stp	x29, x30, [sp, #-48]!
   13df8:	stp	x22, x21, [sp, #16]
   13dfc:	stp	x20, x19, [sp, #32]
   13e00:	mov	x29, sp
   13e04:	mov	x22, x0
   13e08:	ldr	x0, [x0]
   13e0c:	mov	x21, x2
   13e10:	mov	x2, x4
   13e14:	mov	x19, x4
   13e18:	mov	x20, x3
   13e1c:	bl	14058 <PyInit__decimal@@Base+0xd544>
   13e20:	str	x0, [x22]
   13e24:	ldr	x0, [x21]
   13e28:	mov	x1, x20
   13e2c:	mov	x2, x19
   13e30:	bl	14058 <PyInit__decimal@@Base+0xd544>
   13e34:	str	x0, [x21]
   13e38:	ldp	x20, x19, [sp, #32]
   13e3c:	ldp	x22, x21, [sp, #16]
   13e40:	ldp	x29, x30, [sp], #48
   13e44:	ret
   13e48:	stp	x29, x30, [sp, #-48]!
   13e4c:	stp	x22, x21, [sp, #16]
   13e50:	stp	x20, x19, [sp, #32]
   13e54:	mov	x29, sp
   13e58:	mov	x21, x0
   13e5c:	ldr	x0, [x0]
   13e60:	mov	x20, x2
   13e64:	mov	x22, x1
   13e68:	mov	x1, x2
   13e6c:	mov	x2, x3
   13e70:	mov	x19, x3
   13e74:	bl	14058 <PyInit__decimal@@Base+0xd544>
   13e78:	str	x0, [x21]
   13e7c:	ldr	x0, [x22]
   13e80:	mov	x1, x20
   13e84:	mov	x2, x19
   13e88:	bl	14058 <PyInit__decimal@@Base+0xd544>
   13e8c:	str	x0, [x22]
   13e90:	ldp	x20, x19, [sp, #32]
   13e94:	ldp	x22, x21, [sp, #16]
   13e98:	ldp	x29, x30, [sp], #48
   13e9c:	ret
   13ea0:	sub	sp, sp, #0x80
   13ea4:	stp	x29, x30, [sp, #32]
   13ea8:	str	x27, [sp, #48]
   13eac:	stp	x26, x25, [sp, #64]
   13eb0:	stp	x24, x23, [sp, #80]
   13eb4:	stp	x22, x21, [sp, #96]
   13eb8:	stp	x20, x19, [sp, #112]
   13ebc:	add	x29, sp, #0x20
   13ec0:	mov	x22, x1
   13ec4:	mov	x19, x0
   13ec8:	add	x1, x29, #0x18
   13ecc:	mov	w0, w2
   13ed0:	mov	w23, w2
   13ed4:	bl	13d4c <PyInit__decimal@@Base+0xd238>
   13ed8:	ldr	x20, [x29, #24]
   13edc:	mov	x0, x22
   13ee0:	sub	x1, x20, #0x2
   13ee4:	mov	x2, x20
   13ee8:	bl	13d60 <PyInit__decimal@@Base+0xd24c>
   13eec:	mov	x21, x0
   13ef0:	mov	x0, x22
   13ef4:	bl	13dd8 <PyInit__decimal@@Base+0xd2c4>
   13ef8:	adrp	x8, 14000 <PyInit__decimal@@Base+0xd4ec>
   13efc:	adrp	x9, 26000 <PyInit__decimal@@Base+0x1f4ec>
   13f00:	adrp	x10, 14000 <PyInit__decimal@@Base+0xd4ec>
   13f04:	adrp	x11, 26000 <PyInit__decimal@@Base+0x1f4ec>
   13f08:	add	x8, x8, #0xeec
   13f0c:	add	x9, x9, #0x6ec
   13f10:	cmp	x22, #0x1, lsl #12
   13f14:	add	x10, x10, #0xf4c
   13f18:	add	x11, x11, #0xca0
   13f1c:	adrp	x12, 14000 <PyInit__decimal@@Base+0xd4ec>
   13f20:	add	x12, x12, #0xfac
   13f24:	adrp	x13, 15000 <PyInit__decimal@@Base+0xe4ec>
   13f28:	csel	x8, x9, x8, hi  // hi = pmore
   13f2c:	csel	x9, x11, x10, hi  // hi = pmore
   13f30:	cmp	w0, #0x0
   13f34:	add	x13, x13, #0x574
   13f38:	csel	x8, x12, x8, eq  // eq = none
   13f3c:	mov	x0, x19
   13f40:	mov	x1, x22
   13f44:	mov	w2, w23
   13f48:	csel	x24, x13, x9, eq  // eq = none
   13f4c:	blr	x8
   13f50:	cbz	w0, 14038 <PyInit__decimal@@Base+0xd524>
   13f54:	subs	x25, x22, #0x1
   13f58:	b.eq	13f9c <PyInit__decimal@@Base+0xd488>  // b.none
   13f5c:	mov	x26, xzr
   13f60:	add	x27, x19, x26, lsl #3
   13f64:	ldp	x1, x3, [x27]
   13f68:	sub	x0, x29, #0x8
   13f6c:	add	x2, sp, #0x10
   13f70:	mov	x4, x20
   13f74:	stur	x1, [x29, #-8]
   13f78:	str	x3, [sp, #16]
   13f7c:	bl	13df4 <PyInit__decimal@@Base+0xd2e0>
   13f80:	ldur	x8, [x29, #-8]
   13f84:	add	x26, x26, #0x2
   13f88:	cmp	x26, x25
   13f8c:	str	x8, [x27]
   13f90:	ldr	x8, [sp, #16]
   13f94:	str	x8, [x27, #8]
   13f98:	b.cc	13f60 <PyInit__decimal@@Base+0xd44c>  // b.lo, b.ul, b.last
   13f9c:	mov	x0, x19
   13fa0:	mov	x1, x22
   13fa4:	mov	w2, w23
   13fa8:	blr	x24
   13fac:	cbz	w0, 14038 <PyInit__decimal@@Base+0xd524>
   13fb0:	subs	x22, x22, #0x3
   13fb4:	b.eq	14034 <PyInit__decimal@@Base+0xd520>  // b.none
   13fb8:	mov	x23, xzr
   13fbc:	add	x24, x19, x23, lsl #3
   13fc0:	ldr	x8, [x24]
   13fc4:	sub	x0, x29, #0x8
   13fc8:	add	x1, sp, #0x10
   13fcc:	mov	x2, x21
   13fd0:	stur	x8, [x29, #-8]
   13fd4:	ldr	x8, [x24, #8]
   13fd8:	mov	x3, x20
   13fdc:	str	x8, [sp, #16]
   13fe0:	ldr	x8, [x24, #16]
   13fe4:	str	x8, [sp, #8]
   13fe8:	ldr	x8, [x24, #24]
   13fec:	str	x8, [sp]
   13ff0:	bl	13e48 <PyInit__decimal@@Base+0xd334>
   13ff4:	add	x0, sp, #0x8
   13ff8:	mov	x1, sp
   13ffc:	mov	x2, x21
   14000:	mov	x3, x20
   14004:	bl	13e48 <PyInit__decimal@@Base+0xd334>
   14008:	ldur	x8, [x29, #-8]
   1400c:	add	x23, x23, #0x4
   14010:	cmp	x23, x22
   14014:	str	x8, [x24]
   14018:	ldr	x8, [sp, #16]
   1401c:	str	x8, [x24, #8]
   14020:	ldr	x8, [sp, #8]
   14024:	str	x8, [x24, #16]
   14028:	ldr	x8, [sp]
   1402c:	str	x8, [x24, #24]
   14030:	b.cc	13fbc <PyInit__decimal@@Base+0xd4a8>  // b.lo, b.ul, b.last
   14034:	mov	w0, #0x1                   	// #1
   14038:	ldp	x20, x19, [sp, #112]
   1403c:	ldp	x22, x21, [sp, #96]
   14040:	ldp	x24, x23, [sp, #80]
   14044:	ldp	x26, x25, [sp, #64]
   14048:	ldr	x27, [sp, #48]
   1404c:	ldp	x29, x30, [sp, #32]
   14050:	add	sp, sp, #0x80
   14054:	ret
   14058:	sub	sp, sp, #0x30
   1405c:	stp	x29, x30, [sp, #16]
   14060:	str	x19, [sp, #32]
   14064:	add	x29, sp, #0x10
   14068:	mov	x19, x2
   1406c:	mov	x3, x1
   14070:	mov	x2, x0
   14074:	add	x0, x29, #0x18
   14078:	add	x1, sp, #0x8
   1407c:	bl	14210 <PyInit__decimal@@Base+0xd6fc>
   14080:	tbnz	x19, #32, 14108 <PyInit__decimal@@Base+0xd5f4>
   14084:	ldr	x8, [x29, #24]
   14088:	tbnz	x19, #34, 14158 <PyInit__decimal@@Base+0xd644>
   1408c:	ldr	x9, [sp, #8]
   14090:	lsr	x10, x8, #24
   14094:	str	x10, [x29, #24]
   14098:	subs	x9, x9, x8
   1409c:	b.cs	140a8 <PyInit__decimal@@Base+0xd594>  // b.hs, b.nlast
   140a0:	sub	x10, x10, #0x1
   140a4:	str	x10, [x29, #24]
   140a8:	adds	x8, x9, x8, lsl #40
   140ac:	str	x8, [sp, #8]
   140b0:	b.cc	140c0 <PyInit__decimal@@Base+0xd5ac>  // b.lo, b.ul, b.last
   140b4:	ldr	x9, [x29, #24]
   140b8:	add	x9, x9, #0x1
   140bc:	str	x9, [x29, #24]
   140c0:	ldr	x9, [x29, #24]
   140c4:	subs	x8, x8, x9
   140c8:	lsr	x10, x9, #24
   140cc:	cset	w11, cc  // cc = lo, ul, last
   140d0:	adds	x8, x8, x9, lsl #40
   140d4:	sub	x9, x10, x11
   140d8:	str	x9, [x29, #24]
   140dc:	str	x8, [sp, #8]
   140e0:	b.cc	140f0 <PyInit__decimal@@Base+0xd5dc>  // b.lo, b.ul, b.last
   140e4:	ldr	x9, [x29, #24]
   140e8:	add	x9, x9, #0x1
   140ec:	str	x9, [x29, #24]
   140f0:	ldr	x9, [x29, #24]
   140f4:	subs	x8, x8, x9
   140f8:	lsr	x10, x9, #24
   140fc:	cset	w11, cc  // cc = lo, ul, last
   14100:	adds	x8, x8, x9, lsl #40
   14104:	b	141d0 <PyInit__decimal@@Base+0xd6bc>
   14108:	ldr	x8, [x29, #24]
   1410c:	ldr	x9, [sp, #8]
   14110:	lsr	x10, x8, #32
   14114:	subs	x9, x9, x8
   14118:	str	x10, [x29, #24]
   1411c:	b.cs	14128 <PyInit__decimal@@Base+0xd614>  // b.hs, b.nlast
   14120:	sub	x10, x10, #0x1
   14124:	str	x10, [x29, #24]
   14128:	adds	x8, x9, x8, lsl #32
   1412c:	str	x8, [sp, #8]
   14130:	b.cc	14140 <PyInit__decimal@@Base+0xd62c>  // b.lo, b.ul, b.last
   14134:	ldr	x9, [x29, #24]
   14138:	add	x9, x9, #0x1
   1413c:	str	x9, [x29, #24]
   14140:	ldr	x9, [x29, #24]
   14144:	subs	x8, x8, x9
   14148:	lsr	x10, x9, #32
   1414c:	cset	w11, cc  // cc = lo, ul, last
   14150:	adds	x8, x8, x9, lsl #32
   14154:	b	141d0 <PyInit__decimal@@Base+0xd6bc>
   14158:	ldr	x9, [sp, #8]
   1415c:	lsr	x10, x8, #30
   14160:	str	x10, [x29, #24]
   14164:	subs	x9, x9, x8
   14168:	b.cs	14174 <PyInit__decimal@@Base+0xd660>  // b.hs, b.nlast
   1416c:	sub	x10, x10, #0x1
   14170:	str	x10, [x29, #24]
   14174:	adds	x8, x9, x8, lsl #34
   14178:	str	x8, [sp, #8]
   1417c:	b.cc	1418c <PyInit__decimal@@Base+0xd678>  // b.lo, b.ul, b.last
   14180:	ldr	x9, [x29, #24]
   14184:	add	x9, x9, #0x1
   14188:	str	x9, [x29, #24]
   1418c:	ldr	x9, [x29, #24]
   14190:	subs	x8, x8, x9
   14194:	lsr	x10, x9, #30
   14198:	cset	w11, cc  // cc = lo, ul, last
   1419c:	adds	x8, x8, x9, lsl #34
   141a0:	sub	x9, x10, x11
   141a4:	str	x9, [x29, #24]
   141a8:	str	x8, [sp, #8]
   141ac:	b.cc	141bc <PyInit__decimal@@Base+0xd6a8>  // b.lo, b.ul, b.last
   141b0:	ldr	x9, [x29, #24]
   141b4:	add	x9, x9, #0x1
   141b8:	str	x9, [x29, #24]
   141bc:	ldr	x9, [x29, #24]
   141c0:	subs	x8, x8, x9
   141c4:	lsr	x10, x9, #30
   141c8:	cset	w11, cc  // cc = lo, ul, last
   141cc:	adds	x8, x8, x9, lsl #34
   141d0:	sub	x9, x10, x11
   141d4:	str	x9, [x29, #24]
   141d8:	str	x8, [sp, #8]
   141dc:	b.cc	141ec <PyInit__decimal@@Base+0xd6d8>  // b.lo, b.ul, b.last
   141e0:	ldr	x9, [x29, #24]
   141e4:	add	x9, x9, #0x1
   141e8:	str	x9, [x29, #24]
   141ec:	ldr	x9, [x29, #24]
   141f0:	ldp	x29, x30, [sp, #16]
   141f4:	cmp	x9, #0x0
   141f8:	ccmp	x8, x19, #0x2, eq  // eq = none
   141fc:	csel	x9, xzr, x19, cc  // cc = lo, ul, last
   14200:	ldr	x19, [sp, #32]
   14204:	sub	x0, x8, x9
   14208:	add	sp, sp, #0x30
   1420c:	ret
   14210:	mul	x8, x3, x2
   14214:	umulh	x9, x3, x2
   14218:	str	x9, [x0]
   1421c:	str	x8, [x1]
   14220:	ret
   14224:	sub	sp, sp, #0xd0
   14228:	stp	x29, x30, [sp, #112]
   1422c:	stp	x28, x27, [sp, #128]
   14230:	stp	x26, x25, [sp, #144]
   14234:	stp	x24, x23, [sp, #160]
   14238:	stp	x22, x21, [sp, #176]
   1423c:	stp	x20, x19, [sp, #192]
   14240:	add	x29, sp, #0x70
   14244:	stp	xzr, xzr, [sp, #32]
   14248:	str	xzr, [sp, #48]
   1424c:	cbz	x3, 1436c <PyInit__decimal@@Base+0xd858>
   14250:	adrp	x8, 2d000 <PyInit__decimal@@Base+0x264ec>
   14254:	adrp	x9, 2d000 <PyInit__decimal@@Base+0x264ec>
   14258:	adrp	x10, 2d000 <PyInit__decimal@@Base+0x264ec>
   1425c:	ldr	x8, [x8, #3536]
   14260:	ldr	x24, [x9, #3584]
   14264:	ldr	x25, [x10, #3592]
   14268:	mov	x19, x3
   1426c:	mov	x20, x2
   14270:	mov	x21, x1
   14274:	mov	x22, x0
   14278:	str	x8, [sp, #8]
   1427c:	b	14300 <PyInit__decimal@@Base+0xd7ec>
   14280:	sub	x1, x29, #0x8
   14284:	mov	w0, #0x2                   	// #2
   14288:	bl	1438c <PyInit__decimal@@Base+0xd878>
   1428c:	ldr	x23, [sp, #24]
   14290:	ldur	x28, [x29, #-8]
   14294:	mov	x0, x26
   14298:	mov	x2, x27
   1429c:	mov	x1, x23
   142a0:	mov	x3, x28
   142a4:	bl	14594 <PyInit__decimal@@Base+0xda80>
   142a8:	mov	x1, x25
   142ac:	mov	x2, x28
   142b0:	bl	143c8 <PyInit__decimal@@Base+0xd8b4>
   142b4:	mov	x1, x0
   142b8:	add	x0, sp, #0x38
   142bc:	stp	x27, x23, [x29, #-32]
   142c0:	stur	xzr, [x29, #-16]
   142c4:	bl	145d0 <PyInit__decimal@@Base+0xdabc>
   142c8:	sub	x0, x29, #0x20
   142cc:	add	x1, sp, #0x38
   142d0:	bl	1465c <PyInit__decimal@@Base+0xdb48>
   142d4:	add	x0, sp, #0x20
   142d8:	sub	x1, x29, #0x20
   142dc:	bl	1465c <PyInit__decimal@@Base+0xdb48>
   142e0:	add	x0, sp, #0x20
   142e4:	add	x1, sp, #0x20
   142e8:	bl	14698 <PyInit__decimal@@Base+0xdb84>
   142ec:	str	x0, [x22], #8
   142f0:	subs	x19, x19, #0x1
   142f4:	add	x20, x20, #0x8
   142f8:	add	x21, x21, #0x8
   142fc:	b.eq	1436c <PyInit__decimal@@Base+0xd858>  // b.none
   14300:	ldr	x27, [x22]
   14304:	ldr	x28, [x21]
   14308:	ldr	x26, [x20]
   1430c:	sub	x1, x29, #0x8
   14310:	mov	w0, #0x1                   	// #1
   14314:	bl	1438c <PyInit__decimal@@Base+0xd878>
   14318:	ldur	x23, [x29, #-8]
   1431c:	mov	x0, x28
   14320:	mov	x1, x27
   14324:	mov	x2, x23
   14328:	bl	143a0 <PyInit__decimal@@Base+0xd88c>
   1432c:	mov	x1, x24
   14330:	mov	x2, x23
   14334:	bl	143c8 <PyInit__decimal@@Base+0xd8b4>
   14338:	ldr	x3, [sp, #8]
   1433c:	mov	x2, x0
   14340:	add	x0, sp, #0x18
   14344:	add	x1, sp, #0x10
   14348:	bl	14580 <PyInit__decimal@@Base+0xda6c>
   1434c:	ldr	x8, [sp, #16]
   14350:	adds	x27, x8, x27
   14354:	str	x27, [sp, #16]
   14358:	b.cc	14280 <PyInit__decimal@@Base+0xd76c>  // b.lo, b.ul, b.last
   1435c:	ldr	x8, [sp, #24]
   14360:	add	x8, x8, #0x1
   14364:	str	x8, [sp, #24]
   14368:	b	14280 <PyInit__decimal@@Base+0xd76c>
   1436c:	ldp	x20, x19, [sp, #192]
   14370:	ldp	x22, x21, [sp, #176]
   14374:	ldp	x24, x23, [sp, #160]
   14378:	ldp	x26, x25, [sp, #144]
   1437c:	ldp	x28, x27, [sp, #128]
   14380:	ldp	x29, x30, [sp, #112]
   14384:	add	sp, sp, #0xd0
   14388:	ret
   1438c:	adrp	x8, 2d000 <PyInit__decimal@@Base+0x264ec>
   14390:	add	x8, x8, #0xdd0
   14394:	ldr	x8, [x8, w0, sxtw #3]
   14398:	str	x8, [x1]
   1439c:	ret
   143a0:	cmp	x0, x2
   143a4:	csel	x8, xzr, x2, cc  // cc = lo, ul, last
   143a8:	cmp	x1, x2
   143ac:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   143b0:	sub	x8, x0, x8
   143b4:	sub	x9, x1, x9
   143b8:	subs	x8, x8, x9
   143bc:	csel	x9, x2, xzr, cc  // cc = lo, ul, last
   143c0:	add	x0, x8, x9
   143c4:	ret
   143c8:	sub	sp, sp, #0x30
   143cc:	stp	x29, x30, [sp, #16]
   143d0:	str	x19, [sp, #32]
   143d4:	add	x29, sp, #0x10
   143d8:	mov	x19, x2
   143dc:	mov	x3, x1
   143e0:	mov	x2, x0
   143e4:	add	x0, x29, #0x18
   143e8:	add	x1, sp, #0x8
   143ec:	bl	14580 <PyInit__decimal@@Base+0xda6c>
   143f0:	tbnz	x19, #32, 14478 <PyInit__decimal@@Base+0xd964>
   143f4:	ldr	x8, [x29, #24]
   143f8:	tbnz	x19, #34, 144c8 <PyInit__decimal@@Base+0xd9b4>
   143fc:	ldr	x9, [sp, #8]
   14400:	lsr	x10, x8, #24
   14404:	str	x10, [x29, #24]
   14408:	subs	x9, x9, x8
   1440c:	b.cs	14418 <PyInit__decimal@@Base+0xd904>  // b.hs, b.nlast
   14410:	sub	x10, x10, #0x1
   14414:	str	x10, [x29, #24]
   14418:	adds	x8, x9, x8, lsl #40
   1441c:	str	x8, [sp, #8]
   14420:	b.cc	14430 <PyInit__decimal@@Base+0xd91c>  // b.lo, b.ul, b.last
   14424:	ldr	x9, [x29, #24]
   14428:	add	x9, x9, #0x1
   1442c:	str	x9, [x29, #24]
   14430:	ldr	x9, [x29, #24]
   14434:	subs	x8, x8, x9
   14438:	lsr	x10, x9, #24
   1443c:	cset	w11, cc  // cc = lo, ul, last
   14440:	adds	x8, x8, x9, lsl #40
   14444:	sub	x9, x10, x11
   14448:	str	x9, [x29, #24]
   1444c:	str	x8, [sp, #8]
   14450:	b.cc	14460 <PyInit__decimal@@Base+0xd94c>  // b.lo, b.ul, b.last
   14454:	ldr	x9, [x29, #24]
   14458:	add	x9, x9, #0x1
   1445c:	str	x9, [x29, #24]
   14460:	ldr	x9, [x29, #24]
   14464:	subs	x8, x8, x9
   14468:	lsr	x10, x9, #24
   1446c:	cset	w11, cc  // cc = lo, ul, last
   14470:	adds	x8, x8, x9, lsl #40
   14474:	b	14540 <PyInit__decimal@@Base+0xda2c>
   14478:	ldr	x8, [x29, #24]
   1447c:	ldr	x9, [sp, #8]
   14480:	lsr	x10, x8, #32
   14484:	subs	x9, x9, x8
   14488:	str	x10, [x29, #24]
   1448c:	b.cs	14498 <PyInit__decimal@@Base+0xd984>  // b.hs, b.nlast
   14490:	sub	x10, x10, #0x1
   14494:	str	x10, [x29, #24]
   14498:	adds	x8, x9, x8, lsl #32
   1449c:	str	x8, [sp, #8]
   144a0:	b.cc	144b0 <PyInit__decimal@@Base+0xd99c>  // b.lo, b.ul, b.last
   144a4:	ldr	x9, [x29, #24]
   144a8:	add	x9, x9, #0x1
   144ac:	str	x9, [x29, #24]
   144b0:	ldr	x9, [x29, #24]
   144b4:	subs	x8, x8, x9
   144b8:	lsr	x10, x9, #32
   144bc:	cset	w11, cc  // cc = lo, ul, last
   144c0:	adds	x8, x8, x9, lsl #32
   144c4:	b	14540 <PyInit__decimal@@Base+0xda2c>
   144c8:	ldr	x9, [sp, #8]
   144cc:	lsr	x10, x8, #30
   144d0:	str	x10, [x29, #24]
   144d4:	subs	x9, x9, x8
   144d8:	b.cs	144e4 <PyInit__decimal@@Base+0xd9d0>  // b.hs, b.nlast
   144dc:	sub	x10, x10, #0x1
   144e0:	str	x10, [x29, #24]
   144e4:	adds	x8, x9, x8, lsl #34
   144e8:	str	x8, [sp, #8]
   144ec:	b.cc	144fc <PyInit__decimal@@Base+0xd9e8>  // b.lo, b.ul, b.last
   144f0:	ldr	x9, [x29, #24]
   144f4:	add	x9, x9, #0x1
   144f8:	str	x9, [x29, #24]
   144fc:	ldr	x9, [x29, #24]
   14500:	subs	x8, x8, x9
   14504:	lsr	x10, x9, #30
   14508:	cset	w11, cc  // cc = lo, ul, last
   1450c:	adds	x8, x8, x9, lsl #34
   14510:	sub	x9, x10, x11
   14514:	str	x9, [x29, #24]
   14518:	str	x8, [sp, #8]
   1451c:	b.cc	1452c <PyInit__decimal@@Base+0xda18>  // b.lo, b.ul, b.last
   14520:	ldr	x9, [x29, #24]
   14524:	add	x9, x9, #0x1
   14528:	str	x9, [x29, #24]
   1452c:	ldr	x9, [x29, #24]
   14530:	subs	x8, x8, x9
   14534:	lsr	x10, x9, #30
   14538:	cset	w11, cc  // cc = lo, ul, last
   1453c:	adds	x8, x8, x9, lsl #34
   14540:	sub	x9, x10, x11
   14544:	str	x9, [x29, #24]
   14548:	str	x8, [sp, #8]
   1454c:	b.cc	1455c <PyInit__decimal@@Base+0xda48>  // b.lo, b.ul, b.last
   14550:	ldr	x9, [x29, #24]
   14554:	add	x9, x9, #0x1
   14558:	str	x9, [x29, #24]
   1455c:	ldr	x9, [x29, #24]
   14560:	ldp	x29, x30, [sp, #16]
   14564:	cmp	x9, #0x0
   14568:	ccmp	x8, x19, #0x2, eq  // eq = none
   1456c:	csel	x9, xzr, x19, cc  // cc = lo, ul, last
   14570:	ldr	x19, [sp, #32]
   14574:	sub	x0, x8, x9
   14578:	add	sp, sp, #0x30
   1457c:	ret
   14580:	mul	x8, x3, x2
   14584:	umulh	x9, x3, x2
   14588:	str	x9, [x0]
   1458c:	str	x8, [x1]
   14590:	ret
   14594:	stp	x29, x30, [sp, #-32]!
   14598:	stp	x20, x19, [sp, #16]
   1459c:	mov	x29, sp
   145a0:	mov	x20, x0
   145a4:	mov	x0, x1
   145a8:	mov	x1, x2
   145ac:	mov	x2, x3
   145b0:	mov	x19, x3
   145b4:	bl	14740 <PyInit__decimal@@Base+0xdc2c>
   145b8:	subs	x8, x20, x0
   145bc:	csel	x9, x19, xzr, cc  // cc = lo, ul, last
   145c0:	ldp	x20, x19, [sp, #16]
   145c4:	add	x0, x8, x9
   145c8:	ldp	x29, x30, [sp], #32
   145cc:	ret
   145d0:	sub	sp, sp, #0x40
   145d4:	stp	x29, x30, [sp, #32]
   145d8:	stp	x20, x19, [sp, #48]
   145dc:	add	x29, sp, #0x20
   145e0:	adrp	x8, 2d000 <PyInit__decimal@@Base+0x264ec>
   145e4:	ldr	x2, [x8, #3600]
   145e8:	mov	x20, x1
   145ec:	mov	x19, x0
   145f0:	sub	x0, x29, #0x8
   145f4:	add	x1, sp, #0x8
   145f8:	mov	x3, x20
   145fc:	bl	14580 <PyInit__decimal@@Base+0xda6c>
   14600:	adrp	x9, 2d000 <PyInit__decimal@@Base+0x264ec>
   14604:	ldr	x8, [sp, #8]
   14608:	ldr	x2, [x9, #3608]
   1460c:	add	x0, sp, #0x10
   14610:	add	x1, sp, #0x8
   14614:	mov	x3, x20
   14618:	str	x8, [x19]
   1461c:	bl	14580 <PyInit__decimal@@Base+0xda6c>
   14620:	ldur	x8, [x29, #-8]
   14624:	ldr	x9, [sp, #8]
   14628:	adds	x8, x9, x8
   1462c:	str	x8, [sp, #8]
   14630:	b.cc	14640 <PyInit__decimal@@Base+0xdb2c>  // b.lo, b.ul, b.last
   14634:	ldr	x9, [sp, #16]
   14638:	add	x9, x9, #0x1
   1463c:	str	x9, [sp, #16]
   14640:	str	x8, [x19, #8]
   14644:	ldr	x8, [sp, #16]
   14648:	str	x8, [x19, #16]
   1464c:	ldp	x20, x19, [sp, #48]
   14650:	ldp	x29, x30, [sp, #32]
   14654:	add	sp, sp, #0x40
   14658:	ret
   1465c:	ldr	x8, [x1]
   14660:	ldp	x9, x10, [x0]
   14664:	adds	x8, x8, x9
   14668:	str	x8, [x0]
   1466c:	ldr	x8, [x1, #8]
   14670:	cinc	x9, x10, cs  // cs = hs, nlast
   14674:	add	x8, x9, x8
   14678:	str	x8, [x0, #8]
   1467c:	ldr	x9, [x0, #16]
   14680:	ldr	x11, [x1, #16]
   14684:	cmp	x8, x10
   14688:	add	x8, x11, x9
   1468c:	cinc	x8, x8, cc  // cc = lo, ul, last
   14690:	str	x8, [x0, #16]
   14694:	ret
   14698:	sub	sp, sp, #0x30
   1469c:	stp	x29, x30, [sp, #16]
   146a0:	stp	x20, x19, [sp, #32]
   146a4:	add	x29, sp, #0x10
   146a8:	ldr	x2, [x1, #16]
   146ac:	mov	x8, #0x89e80000            	// #2313682944
   146b0:	movk	x8, #0x2304, lsl #32
   146b4:	movk	x8, #0x8ac7, lsl #48
   146b8:	mov	x20, x1
   146bc:	mov	x19, x0
   146c0:	cmp	x2, x8
   146c4:	add	x0, x0, #0x10
   146c8:	str	x2, [sp, #8]
   146cc:	b.cs	146d8 <PyInit__decimal@@Base+0xdbc4>  // b.hs, b.nlast
   146d0:	str	xzr, [x0]
   146d4:	b	146ec <PyInit__decimal@@Base+0xdbd8>
   146d8:	mov	x3, #0x89e80000            	// #2313682944
   146dc:	movk	x3, #0x2304, lsl #32
   146e0:	add	x1, sp, #0x8
   146e4:	movk	x3, #0x8ac7, lsl #48
   146e8:	bl	14798 <PyInit__decimal@@Base+0xdc84>
   146ec:	ldr	x2, [sp, #8]
   146f0:	ldr	x3, [x20, #8]
   146f4:	mov	x4, #0x89e80000            	// #2313682944
   146f8:	movk	x4, #0x2304, lsl #32
   146fc:	add	x0, x19, #0x8
   14700:	mov	x1, sp
   14704:	movk	x4, #0x8ac7, lsl #48
   14708:	bl	147ac <PyInit__decimal@@Base+0xdc98>
   1470c:	ldr	x2, [sp]
   14710:	ldr	x3, [x20]
   14714:	mov	x4, #0x89e80000            	// #2313682944
   14718:	movk	x4, #0x2304, lsl #32
   1471c:	add	x1, sp, #0x8
   14720:	movk	x4, #0x8ac7, lsl #48
   14724:	mov	x0, x19
   14728:	bl	147ac <PyInit__decimal@@Base+0xdc98>
   1472c:	ldr	x0, [sp, #8]
   14730:	ldp	x20, x19, [sp, #32]
   14734:	ldp	x29, x30, [sp, #16]
   14738:	add	sp, sp, #0x30
   1473c:	ret
   14740:	sub	sp, sp, #0x40
   14744:	stp	x29, x30, [sp, #32]
   14748:	stp	x20, x19, [sp, #48]
   1474c:	add	x29, sp, #0x20
   14750:	mov	x19, x2
   14754:	mov	x20, x1
   14758:	mov	x2, x0
   1475c:	add	x0, sp, #0x8
   14760:	sub	x1, x29, #0x8
   14764:	mov	x3, x19
   14768:	bl	14798 <PyInit__decimal@@Base+0xdc84>
   1476c:	ldur	x2, [x29, #-8]
   14770:	add	x0, sp, #0x8
   14774:	add	x1, sp, #0x10
   14778:	mov	x3, x20
   1477c:	mov	x4, x19
   14780:	bl	147ac <PyInit__decimal@@Base+0xdc98>
   14784:	ldr	x0, [sp, #16]
   14788:	ldp	x20, x19, [sp, #48]
   1478c:	ldp	x29, x30, [sp, #32]
   14790:	add	sp, sp, #0x40
   14794:	ret
   14798:	udiv	x8, x2, x3
   1479c:	str	x8, [x0]
   147a0:	msub	x8, x8, x3, x2
   147a4:	str	x8, [x1]
   147a8:	ret
   147ac:	stp	x29, x30, [sp, #-48]!
   147b0:	stp	x22, x21, [sp, #16]
   147b4:	stp	x20, x19, [sp, #32]
   147b8:	mov	x29, sp
   147bc:	mov	x20, x3
   147c0:	mov	x21, x1
   147c4:	mov	x22, x0
   147c8:	mov	x0, x3
   147cc:	mov	x1, x2
   147d0:	mov	x2, x4
   147d4:	mov	x3, xzr
   147d8:	mov	x19, x4
   147dc:	bl	27658 <PyInit__decimal@@Base+0x20b44>
   147e0:	msub	x8, x0, x19, x20
   147e4:	str	x0, [x22]
   147e8:	str	x8, [x21]
   147ec:	ldp	x20, x19, [sp, #32]
   147f0:	ldp	x22, x21, [sp, #16]
   147f4:	ldp	x29, x30, [sp], #48
   147f8:	ret
   147fc:	sub	sp, sp, #0xe0
   14800:	stp	x29, x30, [sp, #128]
   14804:	stp	x28, x27, [sp, #144]
   14808:	stp	x26, x25, [sp, #160]
   1480c:	stp	x24, x23, [sp, #176]
   14810:	stp	x22, x21, [sp, #192]
   14814:	stp	x20, x19, [sp, #208]
   14818:	add	x29, sp, #0x80
   1481c:	ldr	w8, [x2]
   14820:	mov	x19, x1
   14824:	str	x0, [sp, #8]
   14828:	sub	x1, x29, #0x8
   1482c:	mov	w0, w8
   14830:	str	x2, [sp, #24]
   14834:	bl	14b44 <PyInit__decimal@@Base+0xe030>
   14838:	lsr	x9, x19, #1
   1483c:	stur	x19, [x29, #-56]
   14840:	cbz	x9, 14920 <PyInit__decimal@@Base+0xde0c>
   14844:	ldr	x8, [sp, #8]
   14848:	ldur	x22, [x29, #-8]
   1484c:	mov	x19, xzr
   14850:	str	x9, [sp, #40]
   14854:	add	x20, x8, #0x8
   14858:	ldr	x8, [sp, #24]
   1485c:	add	x21, x8, #0x20
   14860:	lsl	x8, x9, #3
   14864:	stur	x8, [x29, #-48]
   14868:	ldur	x25, [x29, #-48]
   1486c:	add	x24, x20, x25
   14870:	ldur	x23, [x24, #-8]
   14874:	ldur	x8, [x21, #-8]
   14878:	ldur	x26, [x20, #-8]
   1487c:	mov	x2, x22
   14880:	mov	x1, x23
   14884:	stur	x8, [x29, #-32]
   14888:	ldr	x8, [x21], #16
   1488c:	stur	x23, [x29, #-16]
   14890:	ldr	x27, [x20, x25]
   14894:	ldr	x28, [x20]
   14898:	mov	x0, x26
   1489c:	stur	x8, [x29, #-40]
   148a0:	stur	x27, [x29, #-24]
   148a4:	bl	14b58 <PyInit__decimal@@Base+0xe044>
   148a8:	stur	x0, [x20, #-8]
   148ac:	mov	x0, x26
   148b0:	mov	x1, x23
   148b4:	mov	x2, x22
   148b8:	bl	14b74 <PyInit__decimal@@Base+0xe060>
   148bc:	stur	x0, [x29, #-16]
   148c0:	mov	x0, x28
   148c4:	mov	x1, x27
   148c8:	mov	x2, x22
   148cc:	bl	14b58 <PyInit__decimal@@Base+0xe044>
   148d0:	str	x0, [x20]
   148d4:	mov	x0, x28
   148d8:	mov	x1, x27
   148dc:	mov	x2, x22
   148e0:	bl	14b74 <PyInit__decimal@@Base+0xe060>
   148e4:	ldp	x3, x1, [x29, #-40]
   148e8:	stur	x0, [x29, #-24]
   148ec:	sub	x0, x29, #0x10
   148f0:	sub	x2, x29, #0x18
   148f4:	mov	x4, x22
   148f8:	bl	14b84 <PyInit__decimal@@Base+0xe070>
   148fc:	ldur	x8, [x29, #-16]
   14900:	ldr	x9, [sp, #40]
   14904:	add	x19, x19, #0x2
   14908:	stur	x8, [x24, #-8]
   1490c:	ldur	x8, [x29, #-24]
   14910:	cmp	x19, x9
   14914:	str	x8, [x20, x25]
   14918:	add	x20, x20, #0x10
   1491c:	b.cc	1486c <PyInit__decimal@@Base+0xdd58>  // b.lo, b.ul, b.last
   14920:	ldur	x24, [x29, #-56]
   14924:	cmp	x24, #0x4
   14928:	b.cc	14b18 <PyInit__decimal@@Base+0xe004>  // b.lo, b.ul, b.last
   1492c:	ldr	x8, [sp, #8]
   14930:	ldur	x22, [x29, #-8]
   14934:	add	x8, x8, #0x8
   14938:	str	x8, [sp]
   1493c:	mov	w8, #0x2                   	// #2
   14940:	str	x8, [sp, #32]
   14944:	b	14960 <PyInit__decimal@@Base+0xde4c>
   14948:	ldr	x8, [sp, #16]
   1494c:	cmp	x8, #0x3
   14950:	ldr	x8, [sp, #32]
   14954:	lsl	x8, x8, #1
   14958:	str	x8, [sp, #32]
   1495c:	b.ls	14b18 <PyInit__decimal@@Base+0xe004>  // b.plast
   14960:	ldr	x27, [sp, #8]
   14964:	lsr	x8, x9, #1
   14968:	lsl	x12, x8, #3
   1496c:	lsl	x19, x9, #3
   14970:	mov	x20, xzr
   14974:	lsl	x10, x9, #1
   14978:	lsl	x11, x9, #4
   1497c:	add	x21, x19, x12
   14980:	str	x8, [sp, #40]
   14984:	str	x9, [sp, #16]
   14988:	stp	x11, x10, [x29, #-40]
   1498c:	stur	x12, [x29, #-48]
   14990:	ldr	x23, [x27]
   14994:	ldr	x24, [x27, x12]
   14998:	ldr	x25, [x27, x19]
   1499c:	ldr	x26, [x27, x21]
   149a0:	mov	x0, x23
   149a4:	mov	x1, x24
   149a8:	mov	x2, x22
   149ac:	bl	14b58 <PyInit__decimal@@Base+0xe044>
   149b0:	mov	x1, x24
   149b4:	ldur	x24, [x29, #-56]
   149b8:	str	x0, [x27]
   149bc:	mov	x0, x23
   149c0:	mov	x2, x22
   149c4:	bl	14b74 <PyInit__decimal@@Base+0xe060>
   149c8:	mov	x23, x0
   149cc:	mov	x0, x25
   149d0:	mov	x1, x26
   149d4:	mov	x2, x22
   149d8:	bl	14b58 <PyInit__decimal@@Base+0xe044>
   149dc:	str	x0, [x27, x19]
   149e0:	mov	x0, x25
   149e4:	mov	x1, x26
   149e8:	mov	x2, x22
   149ec:	bl	14b74 <PyInit__decimal@@Base+0xe060>
   149f0:	ldur	x10, [x29, #-32]
   149f4:	ldp	x12, x11, [x29, #-48]
   149f8:	add	x20, x20, x10
   149fc:	str	x23, [x27, x12]
   14a00:	str	x0, [x27, x21]
   14a04:	cmp	x20, x24
   14a08:	add	x27, x27, x11
   14a0c:	b.cc	14990 <PyInit__decimal@@Base+0xde7c>  // b.lo, b.ul, b.last
   14a10:	ldr	x8, [sp, #16]
   14a14:	ldr	x9, [sp, #40]
   14a18:	stp	x0, x23, [x29, #-24]
   14a1c:	cmp	x8, #0x4
   14a20:	b.cc	14948 <PyInit__decimal@@Base+0xde34>  // b.lo, b.ul, b.last
   14a24:	ldr	x8, [sp, #16]
   14a28:	ldr	x20, [sp]
   14a2c:	mov	w11, #0x1                   	// #1
   14a30:	add	x28, x8, x9
   14a34:	ldp	x9, x8, [sp, #24]
   14a38:	stp	x11, x20, [sp, #48]
   14a3c:	mov	x21, xzr
   14a40:	mul	x8, x11, x8
   14a44:	add	x8, x9, x8, lsl #3
   14a48:	ldr	x8, [x8, #24]
   14a4c:	str	x8, [sp, #64]
   14a50:	ldr	x24, [x20, x12]
   14a54:	ldr	x25, [x20]
   14a58:	lsl	x23, x28, #3
   14a5c:	mov	x2, x22
   14a60:	stur	x24, [x29, #-16]
   14a64:	ldr	x26, [x20, x23]
   14a68:	ldr	x27, [x20, x19]
   14a6c:	mov	x0, x25
   14a70:	mov	x1, x24
   14a74:	stur	x26, [x29, #-24]
   14a78:	bl	14b58 <PyInit__decimal@@Base+0xe044>
   14a7c:	mov	x1, x24
   14a80:	ldur	x24, [x29, #-56]
   14a84:	str	x0, [x20]
   14a88:	mov	x0, x25
   14a8c:	mov	x2, x22
   14a90:	bl	14b74 <PyInit__decimal@@Base+0xe060>
   14a94:	stur	x0, [x29, #-16]
   14a98:	mov	x0, x27
   14a9c:	mov	x1, x26
   14aa0:	mov	x2, x22
   14aa4:	bl	14b58 <PyInit__decimal@@Base+0xe044>
   14aa8:	str	x0, [x20, x19]
   14aac:	mov	x0, x27
   14ab0:	mov	x1, x26
   14ab4:	mov	x2, x22
   14ab8:	bl	14b74 <PyInit__decimal@@Base+0xe060>
   14abc:	ldr	x2, [sp, #64]
   14ac0:	stur	x0, [x29, #-24]
   14ac4:	sub	x0, x29, #0x10
   14ac8:	sub	x1, x29, #0x18
   14acc:	mov	x3, x22
   14ad0:	bl	14bd8 <PyInit__decimal@@Base+0xe0c4>
   14ad4:	ldur	x12, [x29, #-48]
   14ad8:	ldur	x8, [x29, #-16]
   14adc:	str	x8, [x20, x12]
   14ae0:	ldp	x9, x8, [x29, #-32]
   14ae4:	str	x8, [x20, x23]
   14ae8:	ldur	x8, [x29, #-40]
   14aec:	add	x21, x21, x9
   14af0:	cmp	x21, x24
   14af4:	add	x20, x20, x8
   14af8:	b.cc	14a50 <PyInit__decimal@@Base+0xdf3c>  // b.lo, b.ul, b.last
   14afc:	ldp	x9, x11, [sp, #40]
   14b00:	ldr	x20, [sp, #56]
   14b04:	add	x11, x11, #0x1
   14b08:	cmp	x11, x9
   14b0c:	add	x20, x20, #0x8
   14b10:	b.cc	14a34 <PyInit__decimal@@Base+0xdf20>  // b.lo, b.ul, b.last
   14b14:	b	14948 <PyInit__decimal@@Base+0xde34>
   14b18:	ldr	x0, [sp, #8]
   14b1c:	mov	x1, x24
   14b20:	bl	14c30 <PyInit__decimal@@Base+0xe11c>
   14b24:	ldp	x20, x19, [sp, #208]
   14b28:	ldp	x22, x21, [sp, #192]
   14b2c:	ldp	x24, x23, [sp, #176]
   14b30:	ldp	x26, x25, [sp, #160]
   14b34:	ldp	x28, x27, [sp, #144]
   14b38:	ldp	x29, x30, [sp, #128]
   14b3c:	add	sp, sp, #0xe0
   14b40:	ret
   14b44:	adrp	x8, 2d000 <PyInit__decimal@@Base+0x264ec>
   14b48:	add	x8, x8, #0xdd0
   14b4c:	ldr	x8, [x8, w0, sxtw #3]
   14b50:	str	x8, [x1]
   14b54:	ret
   14b58:	adds	x8, x1, x0
   14b5c:	csel	x9, x2, xzr, cs  // cs = hs, nlast
   14b60:	sub	x8, x8, x9
   14b64:	cmp	x8, x2
   14b68:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   14b6c:	sub	x0, x8, x9
   14b70:	ret
   14b74:	subs	x8, x0, x1
   14b78:	csel	x9, x2, xzr, cc  // cc = lo, ul, last
   14b7c:	add	x0, x8, x9
   14b80:	ret
   14b84:	stp	x29, x30, [sp, #-48]!
   14b88:	stp	x22, x21, [sp, #16]
   14b8c:	stp	x20, x19, [sp, #32]
   14b90:	mov	x29, sp
   14b94:	mov	x22, x0
   14b98:	ldr	x0, [x0]
   14b9c:	mov	x21, x2
   14ba0:	mov	x2, x4
   14ba4:	mov	x19, x4
   14ba8:	mov	x20, x3
   14bac:	bl	14cac <PyInit__decimal@@Base+0xe198>
   14bb0:	str	x0, [x22]
   14bb4:	ldr	x0, [x21]
   14bb8:	mov	x1, x20
   14bbc:	mov	x2, x19
   14bc0:	bl	14cac <PyInit__decimal@@Base+0xe198>
   14bc4:	str	x0, [x21]
   14bc8:	ldp	x20, x19, [sp, #32]
   14bcc:	ldp	x22, x21, [sp, #16]
   14bd0:	ldp	x29, x30, [sp], #48
   14bd4:	ret
   14bd8:	stp	x29, x30, [sp, #-48]!
   14bdc:	stp	x22, x21, [sp, #16]
   14be0:	stp	x20, x19, [sp, #32]
   14be4:	mov	x29, sp
   14be8:	mov	x21, x0
   14bec:	ldr	x0, [x0]
   14bf0:	mov	x20, x2
   14bf4:	mov	x22, x1
   14bf8:	mov	x1, x2
   14bfc:	mov	x2, x3
   14c00:	mov	x19, x3
   14c04:	bl	14cac <PyInit__decimal@@Base+0xe198>
   14c08:	str	x0, [x21]
   14c0c:	ldr	x0, [x22]
   14c10:	mov	x1, x20
   14c14:	mov	x2, x19
   14c18:	bl	14cac <PyInit__decimal@@Base+0xe198>
   14c1c:	str	x0, [x22]
   14c20:	ldp	x20, x19, [sp, #32]
   14c24:	ldp	x22, x21, [sp, #16]
   14c28:	ldp	x29, x30, [sp], #48
   14c2c:	ret
   14c30:	stp	x29, x30, [sp, #-48]!
   14c34:	stp	x22, x21, [sp, #16]
   14c38:	stp	x20, x19, [sp, #32]
   14c3c:	mov	x29, sp
   14c40:	mov	x19, x1
   14c44:	mov	x20, x0
   14c48:	mov	x22, xzr
   14c4c:	mov	x21, xzr
   14c50:	b	14c78 <PyInit__decimal@@Base+0xe164>
   14c54:	add	x21, x21, #0x1
   14c58:	mov	x0, x21
   14c5c:	bl	14e78 <PyInit__decimal@@Base+0xe364>
   14c60:	add	w8, w0, #0x1
   14c64:	lsr	x8, x19, x8
   14c68:	sub	x8, x19, x8
   14c6c:	cmp	x21, x19
   14c70:	eor	x22, x8, x22
   14c74:	b.cs	14c9c <PyInit__decimal@@Base+0xe188>  // b.hs, b.nlast
   14c78:	cmp	x22, x21
   14c7c:	b.ls	14c54 <PyInit__decimal@@Base+0xe140>  // b.plast
   14c80:	lsl	x8, x21, #3
   14c84:	lsl	x9, x22, #3
   14c88:	ldr	x10, [x20, x9]
   14c8c:	ldr	x11, [x20, x8]
   14c90:	str	x10, [x20, x8]
   14c94:	str	x11, [x20, x9]
   14c98:	b	14c54 <PyInit__decimal@@Base+0xe140>
   14c9c:	ldp	x20, x19, [sp, #32]
   14ca0:	ldp	x22, x21, [sp, #16]
   14ca4:	ldp	x29, x30, [sp], #48
   14ca8:	ret
   14cac:	sub	sp, sp, #0x30
   14cb0:	stp	x29, x30, [sp, #16]
   14cb4:	str	x19, [sp, #32]
   14cb8:	add	x29, sp, #0x10
   14cbc:	mov	x19, x2
   14cc0:	mov	x3, x1
   14cc4:	mov	x2, x0
   14cc8:	add	x0, x29, #0x18
   14ccc:	add	x1, sp, #0x8
   14cd0:	bl	14e64 <PyInit__decimal@@Base+0xe350>
   14cd4:	tbnz	x19, #32, 14d5c <PyInit__decimal@@Base+0xe248>
   14cd8:	ldr	x8, [x29, #24]
   14cdc:	tbnz	x19, #34, 14dac <PyInit__decimal@@Base+0xe298>
   14ce0:	ldr	x9, [sp, #8]
   14ce4:	lsr	x10, x8, #24
   14ce8:	str	x10, [x29, #24]
   14cec:	subs	x9, x9, x8
   14cf0:	b.cs	14cfc <PyInit__decimal@@Base+0xe1e8>  // b.hs, b.nlast
   14cf4:	sub	x10, x10, #0x1
   14cf8:	str	x10, [x29, #24]
   14cfc:	adds	x8, x9, x8, lsl #40
   14d00:	str	x8, [sp, #8]
   14d04:	b.cc	14d14 <PyInit__decimal@@Base+0xe200>  // b.lo, b.ul, b.last
   14d08:	ldr	x9, [x29, #24]
   14d0c:	add	x9, x9, #0x1
   14d10:	str	x9, [x29, #24]
   14d14:	ldr	x9, [x29, #24]
   14d18:	subs	x8, x8, x9
   14d1c:	lsr	x10, x9, #24
   14d20:	cset	w11, cc  // cc = lo, ul, last
   14d24:	adds	x8, x8, x9, lsl #40
   14d28:	sub	x9, x10, x11
   14d2c:	str	x9, [x29, #24]
   14d30:	str	x8, [sp, #8]
   14d34:	b.cc	14d44 <PyInit__decimal@@Base+0xe230>  // b.lo, b.ul, b.last
   14d38:	ldr	x9, [x29, #24]
   14d3c:	add	x9, x9, #0x1
   14d40:	str	x9, [x29, #24]
   14d44:	ldr	x9, [x29, #24]
   14d48:	subs	x8, x8, x9
   14d4c:	lsr	x10, x9, #24
   14d50:	cset	w11, cc  // cc = lo, ul, last
   14d54:	adds	x8, x8, x9, lsl #40
   14d58:	b	14e24 <PyInit__decimal@@Base+0xe310>
   14d5c:	ldr	x8, [x29, #24]
   14d60:	ldr	x9, [sp, #8]
   14d64:	lsr	x10, x8, #32
   14d68:	subs	x9, x9, x8
   14d6c:	str	x10, [x29, #24]
   14d70:	b.cs	14d7c <PyInit__decimal@@Base+0xe268>  // b.hs, b.nlast
   14d74:	sub	x10, x10, #0x1
   14d78:	str	x10, [x29, #24]
   14d7c:	adds	x8, x9, x8, lsl #32
   14d80:	str	x8, [sp, #8]
   14d84:	b.cc	14d94 <PyInit__decimal@@Base+0xe280>  // b.lo, b.ul, b.last
   14d88:	ldr	x9, [x29, #24]
   14d8c:	add	x9, x9, #0x1
   14d90:	str	x9, [x29, #24]
   14d94:	ldr	x9, [x29, #24]
   14d98:	subs	x8, x8, x9
   14d9c:	lsr	x10, x9, #32
   14da0:	cset	w11, cc  // cc = lo, ul, last
   14da4:	adds	x8, x8, x9, lsl #32
   14da8:	b	14e24 <PyInit__decimal@@Base+0xe310>
   14dac:	ldr	x9, [sp, #8]
   14db0:	lsr	x10, x8, #30
   14db4:	str	x10, [x29, #24]
   14db8:	subs	x9, x9, x8
   14dbc:	b.cs	14dc8 <PyInit__decimal@@Base+0xe2b4>  // b.hs, b.nlast
   14dc0:	sub	x10, x10, #0x1
   14dc4:	str	x10, [x29, #24]
   14dc8:	adds	x8, x9, x8, lsl #34
   14dcc:	str	x8, [sp, #8]
   14dd0:	b.cc	14de0 <PyInit__decimal@@Base+0xe2cc>  // b.lo, b.ul, b.last
   14dd4:	ldr	x9, [x29, #24]
   14dd8:	add	x9, x9, #0x1
   14ddc:	str	x9, [x29, #24]
   14de0:	ldr	x9, [x29, #24]
   14de4:	subs	x8, x8, x9
   14de8:	lsr	x10, x9, #30
   14dec:	cset	w11, cc  // cc = lo, ul, last
   14df0:	adds	x8, x8, x9, lsl #34
   14df4:	sub	x9, x10, x11
   14df8:	str	x9, [x29, #24]
   14dfc:	str	x8, [sp, #8]
   14e00:	b.cc	14e10 <PyInit__decimal@@Base+0xe2fc>  // b.lo, b.ul, b.last
   14e04:	ldr	x9, [x29, #24]
   14e08:	add	x9, x9, #0x1
   14e0c:	str	x9, [x29, #24]
   14e10:	ldr	x9, [x29, #24]
   14e14:	subs	x8, x8, x9
   14e18:	lsr	x10, x9, #30
   14e1c:	cset	w11, cc  // cc = lo, ul, last
   14e20:	adds	x8, x8, x9, lsl #34
   14e24:	sub	x9, x10, x11
   14e28:	str	x9, [x29, #24]
   14e2c:	str	x8, [sp, #8]
   14e30:	b.cc	14e40 <PyInit__decimal@@Base+0xe32c>  // b.lo, b.ul, b.last
   14e34:	ldr	x9, [x29, #24]
   14e38:	add	x9, x9, #0x1
   14e3c:	str	x9, [x29, #24]
   14e40:	ldr	x9, [x29, #24]
   14e44:	ldp	x29, x30, [sp, #16]
   14e48:	cmp	x9, #0x0
   14e4c:	ccmp	x8, x19, #0x2, eq  // eq = none
   14e50:	csel	x9, xzr, x19, cc  // cc = lo, ul, last
   14e54:	ldr	x19, [sp, #32]
   14e58:	sub	x0, x8, x9
   14e5c:	add	sp, sp, #0x30
   14e60:	ret
   14e64:	mul	x8, x3, x2
   14e68:	umulh	x9, x3, x2
   14e6c:	str	x9, [x0]
   14e70:	str	x8, [x1]
   14e74:	ret
   14e78:	lsr	x8, x0, #32
   14e7c:	tst	x0, #0xffffffff
   14e80:	mov	w9, #0x1f                  	// #31
   14e84:	mov	w10, #0x3f                  	// #63
   14e88:	csel	x8, x8, x0, eq  // eq = none
   14e8c:	csel	w9, w10, w9, eq  // eq = none
   14e90:	lsr	x11, x8, #16
   14e94:	tst	x8, #0xffff
   14e98:	sub	w10, w9, #0x10
   14e9c:	csel	x8, x11, x8, eq  // eq = none
   14ea0:	csel	w9, w9, w10, eq  // eq = none
   14ea4:	lsr	x11, x8, #8
   14ea8:	tst	x8, #0xff
   14eac:	sub	w10, w9, #0x8
   14eb0:	csel	x8, x11, x8, eq  // eq = none
   14eb4:	csel	w9, w9, w10, eq  // eq = none
   14eb8:	lsr	x11, x8, #4
   14ebc:	tst	x8, #0xf
   14ec0:	sub	w10, w9, #0x4
   14ec4:	csel	x8, x11, x8, eq  // eq = none
   14ec8:	csel	w9, w9, w10, eq  // eq = none
   14ecc:	lsr	x11, x8, #2
   14ed0:	tst	x8, #0x3
   14ed4:	sub	w10, w9, #0x2
   14ed8:	csel	x8, x11, x8, eq  // eq = none
   14edc:	csel	w9, w9, w10, eq  // eq = none
   14ee0:	sbfx	x8, x8, #0, #1
   14ee4:	add	w0, w9, w8
   14ee8:	ret
   14eec:	stp	x29, x30, [sp, #-48]!
   14ef0:	str	x21, [sp, #16]
   14ef4:	stp	x20, x19, [sp, #32]
   14ef8:	mov	x29, sp
   14efc:	mov	x19, x1
   14f00:	mov	x20, x0
   14f04:	mov	w1, #0xffffffff            	// #-1
   14f08:	mov	x0, x19
   14f0c:	bl	2641c <PyInit__decimal@@Base+0x1f908>
   14f10:	cbz	x0, 14f3c <PyInit__decimal@@Base+0xe428>
   14f14:	mov	x21, x0
   14f18:	mov	x0, x20
   14f1c:	mov	x1, x19
   14f20:	mov	x2, x21
   14f24:	bl	147fc <PyInit__decimal@@Base+0xdce8>
   14f28:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   14f2c:	ldr	x8, [x8, #1376]
   14f30:	mov	x0, x21
   14f34:	blr	x8
   14f38:	mov	w0, #0x1                   	// #1
   14f3c:	ldp	x20, x19, [sp, #32]
   14f40:	ldr	x21, [sp, #16]
   14f44:	ldp	x29, x30, [sp], #48
   14f48:	ret
   14f4c:	stp	x29, x30, [sp, #-48]!
   14f50:	str	x21, [sp, #16]
   14f54:	stp	x20, x19, [sp, #32]
   14f58:	mov	x29, sp
   14f5c:	mov	x19, x1
   14f60:	mov	x20, x0
   14f64:	mov	w1, #0x1                   	// #1
   14f68:	mov	x0, x19
   14f6c:	bl	2641c <PyInit__decimal@@Base+0x1f908>
   14f70:	cbz	x0, 14f9c <PyInit__decimal@@Base+0xe488>
   14f74:	mov	x21, x0
   14f78:	mov	x0, x20
   14f7c:	mov	x1, x19
   14f80:	mov	x2, x21
   14f84:	bl	147fc <PyInit__decimal@@Base+0xdce8>
   14f88:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   14f8c:	ldr	x8, [x8, #1376]
   14f90:	mov	x0, x21
   14f94:	blr	x8
   14f98:	mov	w0, #0x1                   	// #1
   14f9c:	ldp	x20, x19, [sp, #32]
   14fa0:	ldr	x21, [sp, #16]
   14fa4:	ldp	x29, x30, [sp], #48
   14fa8:	ret
   14fac:	sub	sp, sp, #0xc0
   14fb0:	stp	x29, x30, [sp, #96]
   14fb4:	stp	x28, x27, [sp, #112]
   14fb8:	stp	x26, x25, [sp, #128]
   14fbc:	stp	x24, x23, [sp, #144]
   14fc0:	stp	x22, x21, [sp, #160]
   14fc4:	stp	x20, x19, [sp, #176]
   14fc8:	add	x29, sp, #0x60
   14fcc:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   14fd0:	movk	x8, #0xaaab
   14fd4:	mov	x24, x1
   14fd8:	mov	x20, x0
   14fdc:	umulh	x8, x1, x8
   14fe0:	add	x1, sp, #0x30
   14fe4:	mov	w0, w2
   14fe8:	mov	w22, w2
   14fec:	lsr	x25, x8, #1
   14ff0:	bl	15170 <PyInit__decimal@@Base+0xe65c>
   14ff4:	sub	x0, x29, #0x18
   14ff8:	mov	w1, #0xffffffff            	// #-1
   14ffc:	mov	w2, w22
   15000:	bl	26678 <PyInit__decimal@@Base+0x1fb64>
   15004:	add	x19, x20, x25, lsl #3
   15008:	cmp	x19, x20
   1500c:	lsl	x27, x25, #3
   15010:	b.ls	15040 <PyInit__decimal@@Base+0xe52c>  // b.plast
   15014:	lsl	x21, x25, #4
   15018:	mov	x23, x20
   1501c:	ldr	x4, [sp, #48]
   15020:	add	x1, x23, x27
   15024:	add	x2, x23, x21
   15028:	sub	x3, x29, #0x18
   1502c:	mov	x0, x23
   15030:	bl	15184 <PyInit__decimal@@Base+0xe670>
   15034:	add	x23, x23, #0x8
   15038:	cmp	x23, x19
   1503c:	b.cc	1501c <PyInit__decimal@@Base+0xe508>  // b.lo, b.ul, b.last
   15040:	mov	w1, #0xffffffff            	// #-1
   15044:	mov	x0, x24
   15048:	mov	w2, w22
   1504c:	str	x24, [sp, #24]
   15050:	str	w22, [sp, #20]
   15054:	bl	26330 <PyInit__decimal@@Base+0x1f81c>
   15058:	ldr	x24, [sp, #48]
   1505c:	mov	x23, x0
   15060:	str	x25, [sp, #8]
   15064:	sub	x28, x25, #0x1
   15068:	add	x22, x20, x27
   1506c:	mov	w25, #0x1                   	// #1
   15070:	b	15084 <PyInit__decimal@@Base+0xe570>
   15074:	add	x25, x25, #0x1
   15078:	cmp	x25, #0x3
   1507c:	add	x22, x22, x27
   15080:	b.eq	15114 <PyInit__decimal@@Base+0xe600>  // b.none
   15084:	mov	w8, #0x1                   	// #1
   15088:	mov	x0, x23
   1508c:	mov	x1, x25
   15090:	mov	x2, x24
   15094:	stur	x8, [x29, #-32]
   15098:	bl	15298 <PyInit__decimal@@Base+0xe784>
   1509c:	mov	x1, x0
   150a0:	mov	x2, x24
   150a4:	stur	x0, [x29, #-40]
   150a8:	bl	15310 <PyInit__decimal@@Base+0xe7fc>
   150ac:	cbz	x28, 15074 <PyInit__decimal@@Base+0xe560>
   150b0:	mov	x26, x0
   150b4:	mov	x21, xzr
   150b8:	add	x19, x22, x21, lsl #3
   150bc:	ldr	x8, [x19]
   150c0:	ldp	x3, x1, [x29, #-40]
   150c4:	add	x0, sp, #0x28
   150c8:	add	x2, sp, #0x20
   150cc:	str	x8, [sp, #40]
   150d0:	ldr	x8, [x19, #8]
   150d4:	mov	x4, x24
   150d8:	str	x8, [sp, #32]
   150dc:	bl	154c8 <PyInit__decimal@@Base+0xe9b4>
   150e0:	sub	x0, x29, #0x20
   150e4:	sub	x1, x29, #0x28
   150e8:	mov	x2, x26
   150ec:	mov	x3, x24
   150f0:	bl	1551c <PyInit__decimal@@Base+0xea08>
   150f4:	ldr	x8, [sp, #40]
   150f8:	add	x21, x21, #0x2
   150fc:	cmp	x21, x28
   15100:	str	x8, [x19]
   15104:	ldr	x8, [sp, #32]
   15108:	str	x8, [x19, #8]
   1510c:	b.cc	150b8 <PyInit__decimal@@Base+0xe5a4>  // b.lo, b.ul, b.last
   15110:	b	15074 <PyInit__decimal@@Base+0xe560>
   15114:	ldr	x8, [sp, #24]
   15118:	add	x19, x20, x8, lsl #3
   1511c:	cmp	x19, x20
   15120:	b.ls	1514c <PyInit__decimal@@Base+0xe638>  // b.plast
   15124:	ldr	w21, [sp, #20]
   15128:	ldr	x22, [sp, #8]
   1512c:	mov	x0, x20
   15130:	mov	x1, x22
   15134:	mov	w2, w21
   15138:	bl	266ec <PyInit__decimal@@Base+0x1fbd8>
   1513c:	cbz	w0, 15150 <PyInit__decimal@@Base+0xe63c>
   15140:	add	x20, x20, x27
   15144:	cmp	x20, x19
   15148:	b.cc	1512c <PyInit__decimal@@Base+0xe618>  // b.lo, b.ul, b.last
   1514c:	mov	w0, #0x1                   	// #1
   15150:	ldp	x20, x19, [sp, #176]
   15154:	ldp	x22, x21, [sp, #160]
   15158:	ldp	x24, x23, [sp, #144]
   1515c:	ldp	x26, x25, [sp, #128]
   15160:	ldp	x28, x27, [sp, #112]
   15164:	ldp	x29, x30, [sp, #96]
   15168:	add	sp, sp, #0xc0
   1516c:	ret
   15170:	adrp	x8, 2d000 <PyInit__decimal@@Base+0x264ec>
   15174:	add	x8, x8, #0xdd0
   15178:	ldr	x8, [x8, w0, sxtw #3]
   1517c:	str	x8, [x1]
   15180:	ret
   15184:	stp	x29, x30, [sp, #-80]!
   15188:	stp	x26, x25, [sp, #16]
   1518c:	stp	x24, x23, [sp, #32]
   15190:	stp	x22, x21, [sp, #48]
   15194:	stp	x20, x19, [sp, #64]
   15198:	mov	x29, sp
   1519c:	ldr	x25, [x0]
   151a0:	ldr	x26, [x1]
   151a4:	mov	x20, x1
   151a8:	mov	x19, x0
   151ac:	mov	x22, x2
   151b0:	mov	x0, x25
   151b4:	mov	x1, x26
   151b8:	mov	x2, x4
   151bc:	mov	x21, x4
   151c0:	mov	x23, x3
   151c4:	bl	1573c <PyInit__decimal@@Base+0xec28>
   151c8:	ldr	x1, [x22]
   151cc:	mov	x2, x21
   151d0:	bl	1573c <PyInit__decimal@@Base+0xec28>
   151d4:	ldr	x1, [x23, #8]
   151d8:	mov	x24, x0
   151dc:	mov	x0, x26
   151e0:	mov	x2, x21
   151e4:	bl	15310 <PyInit__decimal@@Base+0xe7fc>
   151e8:	mov	x1, x0
   151ec:	mov	x0, x25
   151f0:	mov	x2, x21
   151f4:	bl	1573c <PyInit__decimal@@Base+0xec28>
   151f8:	ldr	x8, [x22]
   151fc:	ldr	x1, [x23, #16]
   15200:	mov	x25, x0
   15204:	mov	x2, x21
   15208:	mov	x0, x8
   1520c:	bl	15310 <PyInit__decimal@@Base+0xe7fc>
   15210:	mov	x1, x0
   15214:	mov	x0, x25
   15218:	mov	x2, x21
   1521c:	bl	1573c <PyInit__decimal@@Base+0xec28>
   15220:	ldr	x8, [x20]
   15224:	ldr	x1, [x23, #16]
   15228:	ldr	x25, [x19]
   1522c:	mov	x26, x0
   15230:	mov	x0, x8
   15234:	mov	x2, x21
   15238:	bl	15310 <PyInit__decimal@@Base+0xe7fc>
   1523c:	mov	x1, x0
   15240:	mov	x0, x25
   15244:	mov	x2, x21
   15248:	bl	1573c <PyInit__decimal@@Base+0xec28>
   1524c:	ldr	x8, [x22]
   15250:	ldr	x1, [x23, #8]
   15254:	mov	x23, x0
   15258:	mov	x2, x21
   1525c:	mov	x0, x8
   15260:	bl	15310 <PyInit__decimal@@Base+0xe7fc>
   15264:	mov	x1, x0
   15268:	mov	x0, x23
   1526c:	mov	x2, x21
   15270:	bl	1573c <PyInit__decimal@@Base+0xec28>
   15274:	str	x0, [x22]
   15278:	str	x26, [x20]
   1527c:	str	x24, [x19]
   15280:	ldp	x20, x19, [sp, #64]
   15284:	ldp	x22, x21, [sp, #48]
   15288:	ldp	x24, x23, [sp, #32]
   1528c:	ldp	x26, x25, [sp, #16]
   15290:	ldp	x29, x30, [sp], #80
   15294:	ret
   15298:	stp	x29, x30, [sp, #-48]!
   1529c:	stp	x22, x21, [sp, #16]
   152a0:	stp	x20, x19, [sp, #32]
   152a4:	mov	x29, sp
   152a8:	cbz	x1, 152f8 <PyInit__decimal@@Base+0xe7e4>
   152ac:	mov	x19, x2
   152b0:	mov	x20, x1
   152b4:	mov	x22, x0
   152b8:	mov	w21, #0x1                   	// #1
   152bc:	b	152dc <PyInit__decimal@@Base+0xe7c8>
   152c0:	mov	x0, x22
   152c4:	mov	x1, x22
   152c8:	mov	x2, x19
   152cc:	bl	15310 <PyInit__decimal@@Base+0xe7fc>
   152d0:	lsr	x20, x20, #1
   152d4:	mov	x22, x0
   152d8:	cbz	x20, 152fc <PyInit__decimal@@Base+0xe7e8>
   152dc:	tbz	w20, #0, 152c0 <PyInit__decimal@@Base+0xe7ac>
   152e0:	mov	x0, x21
   152e4:	mov	x1, x22
   152e8:	mov	x2, x19
   152ec:	bl	15310 <PyInit__decimal@@Base+0xe7fc>
   152f0:	mov	x21, x0
   152f4:	b	152c0 <PyInit__decimal@@Base+0xe7ac>
   152f8:	mov	w21, #0x1                   	// #1
   152fc:	mov	x0, x21
   15300:	ldp	x20, x19, [sp, #32]
   15304:	ldp	x22, x21, [sp, #16]
   15308:	ldp	x29, x30, [sp], #48
   1530c:	ret
   15310:	sub	sp, sp, #0x30
   15314:	stp	x29, x30, [sp, #16]
   15318:	str	x19, [sp, #32]
   1531c:	add	x29, sp, #0x10
   15320:	mov	x19, x2
   15324:	mov	x3, x1
   15328:	mov	x2, x0
   1532c:	add	x0, x29, #0x18
   15330:	add	x1, sp, #0x8
   15334:	bl	15758 <PyInit__decimal@@Base+0xec44>
   15338:	tbnz	x19, #32, 153c0 <PyInit__decimal@@Base+0xe8ac>
   1533c:	ldr	x8, [x29, #24]
   15340:	tbnz	x19, #34, 15410 <PyInit__decimal@@Base+0xe8fc>
   15344:	ldr	x9, [sp, #8]
   15348:	lsr	x10, x8, #24
   1534c:	str	x10, [x29, #24]
   15350:	subs	x9, x9, x8
   15354:	b.cs	15360 <PyInit__decimal@@Base+0xe84c>  // b.hs, b.nlast
   15358:	sub	x10, x10, #0x1
   1535c:	str	x10, [x29, #24]
   15360:	adds	x8, x9, x8, lsl #40
   15364:	str	x8, [sp, #8]
   15368:	b.cc	15378 <PyInit__decimal@@Base+0xe864>  // b.lo, b.ul, b.last
   1536c:	ldr	x9, [x29, #24]
   15370:	add	x9, x9, #0x1
   15374:	str	x9, [x29, #24]
   15378:	ldr	x9, [x29, #24]
   1537c:	subs	x8, x8, x9
   15380:	lsr	x10, x9, #24
   15384:	cset	w11, cc  // cc = lo, ul, last
   15388:	adds	x8, x8, x9, lsl #40
   1538c:	sub	x9, x10, x11
   15390:	str	x9, [x29, #24]
   15394:	str	x8, [sp, #8]
   15398:	b.cc	153a8 <PyInit__decimal@@Base+0xe894>  // b.lo, b.ul, b.last
   1539c:	ldr	x9, [x29, #24]
   153a0:	add	x9, x9, #0x1
   153a4:	str	x9, [x29, #24]
   153a8:	ldr	x9, [x29, #24]
   153ac:	subs	x8, x8, x9
   153b0:	lsr	x10, x9, #24
   153b4:	cset	w11, cc  // cc = lo, ul, last
   153b8:	adds	x8, x8, x9, lsl #40
   153bc:	b	15488 <PyInit__decimal@@Base+0xe974>
   153c0:	ldr	x8, [x29, #24]
   153c4:	ldr	x9, [sp, #8]
   153c8:	lsr	x10, x8, #32
   153cc:	subs	x9, x9, x8
   153d0:	str	x10, [x29, #24]
   153d4:	b.cs	153e0 <PyInit__decimal@@Base+0xe8cc>  // b.hs, b.nlast
   153d8:	sub	x10, x10, #0x1
   153dc:	str	x10, [x29, #24]
   153e0:	adds	x8, x9, x8, lsl #32
   153e4:	str	x8, [sp, #8]
   153e8:	b.cc	153f8 <PyInit__decimal@@Base+0xe8e4>  // b.lo, b.ul, b.last
   153ec:	ldr	x9, [x29, #24]
   153f0:	add	x9, x9, #0x1
   153f4:	str	x9, [x29, #24]
   153f8:	ldr	x9, [x29, #24]
   153fc:	subs	x8, x8, x9
   15400:	lsr	x10, x9, #32
   15404:	cset	w11, cc  // cc = lo, ul, last
   15408:	adds	x8, x8, x9, lsl #32
   1540c:	b	15488 <PyInit__decimal@@Base+0xe974>
   15410:	ldr	x9, [sp, #8]
   15414:	lsr	x10, x8, #30
   15418:	str	x10, [x29, #24]
   1541c:	subs	x9, x9, x8
   15420:	b.cs	1542c <PyInit__decimal@@Base+0xe918>  // b.hs, b.nlast
   15424:	sub	x10, x10, #0x1
   15428:	str	x10, [x29, #24]
   1542c:	adds	x8, x9, x8, lsl #34
   15430:	str	x8, [sp, #8]
   15434:	b.cc	15444 <PyInit__decimal@@Base+0xe930>  // b.lo, b.ul, b.last
   15438:	ldr	x9, [x29, #24]
   1543c:	add	x9, x9, #0x1
   15440:	str	x9, [x29, #24]
   15444:	ldr	x9, [x29, #24]
   15448:	subs	x8, x8, x9
   1544c:	lsr	x10, x9, #30
   15450:	cset	w11, cc  // cc = lo, ul, last
   15454:	adds	x8, x8, x9, lsl #34
   15458:	sub	x9, x10, x11
   1545c:	str	x9, [x29, #24]
   15460:	str	x8, [sp, #8]
   15464:	b.cc	15474 <PyInit__decimal@@Base+0xe960>  // b.lo, b.ul, b.last
   15468:	ldr	x9, [x29, #24]
   1546c:	add	x9, x9, #0x1
   15470:	str	x9, [x29, #24]
   15474:	ldr	x9, [x29, #24]
   15478:	subs	x8, x8, x9
   1547c:	lsr	x10, x9, #30
   15480:	cset	w11, cc  // cc = lo, ul, last
   15484:	adds	x8, x8, x9, lsl #34
   15488:	sub	x9, x10, x11
   1548c:	str	x9, [x29, #24]
   15490:	str	x8, [sp, #8]
   15494:	b.cc	154a4 <PyInit__decimal@@Base+0xe990>  // b.lo, b.ul, b.last
   15498:	ldr	x9, [x29, #24]
   1549c:	add	x9, x9, #0x1
   154a0:	str	x9, [x29, #24]
   154a4:	ldr	x9, [x29, #24]
   154a8:	ldp	x29, x30, [sp, #16]
   154ac:	cmp	x9, #0x0
   154b0:	ccmp	x8, x19, #0x2, eq  // eq = none
   154b4:	csel	x9, xzr, x19, cc  // cc = lo, ul, last
   154b8:	ldr	x19, [sp, #32]
   154bc:	sub	x0, x8, x9
   154c0:	add	sp, sp, #0x30
   154c4:	ret
   154c8:	stp	x29, x30, [sp, #-48]!
   154cc:	stp	x22, x21, [sp, #16]
   154d0:	stp	x20, x19, [sp, #32]
   154d4:	mov	x29, sp
   154d8:	mov	x22, x0
   154dc:	ldr	x0, [x0]
   154e0:	mov	x21, x2
   154e4:	mov	x2, x4
   154e8:	mov	x19, x4
   154ec:	mov	x20, x3
   154f0:	bl	15310 <PyInit__decimal@@Base+0xe7fc>
   154f4:	str	x0, [x22]
   154f8:	ldr	x0, [x21]
   154fc:	mov	x1, x20
   15500:	mov	x2, x19
   15504:	bl	15310 <PyInit__decimal@@Base+0xe7fc>
   15508:	str	x0, [x21]
   1550c:	ldp	x20, x19, [sp, #32]
   15510:	ldp	x22, x21, [sp, #16]
   15514:	ldp	x29, x30, [sp], #48
   15518:	ret
   1551c:	stp	x29, x30, [sp, #-48]!
   15520:	stp	x22, x21, [sp, #16]
   15524:	stp	x20, x19, [sp, #32]
   15528:	mov	x29, sp
   1552c:	mov	x21, x0
   15530:	ldr	x0, [x0]
   15534:	mov	x20, x2
   15538:	mov	x22, x1
   1553c:	mov	x1, x2
   15540:	mov	x2, x3
   15544:	mov	x19, x3
   15548:	bl	15310 <PyInit__decimal@@Base+0xe7fc>
   1554c:	str	x0, [x21]
   15550:	ldr	x0, [x22]
   15554:	mov	x1, x20
   15558:	mov	x2, x19
   1555c:	bl	15310 <PyInit__decimal@@Base+0xe7fc>
   15560:	str	x0, [x22]
   15564:	ldp	x20, x19, [sp, #32]
   15568:	ldp	x22, x21, [sp, #16]
   1556c:	ldp	x29, x30, [sp], #48
   15570:	ret
   15574:	sub	sp, sp, #0xb0
   15578:	stp	x29, x30, [sp, #80]
   1557c:	stp	x28, x27, [sp, #96]
   15580:	stp	x26, x25, [sp, #112]
   15584:	stp	x24, x23, [sp, #128]
   15588:	stp	x22, x21, [sp, #144]
   1558c:	stp	x20, x19, [sp, #160]
   15590:	add	x29, sp, #0x50
   15594:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   15598:	movk	x8, #0xaaab
   1559c:	umulh	x8, x1, x8
   155a0:	add	x21, x0, x1, lsl #3
   155a4:	lsr	x20, x8, #1
   155a8:	mov	w22, w2
   155ac:	mov	x19, x0
   155b0:	cmp	x21, x0
   155b4:	lsl	x27, x20, #3
   155b8:	str	x1, [sp, #16]
   155bc:	b.ls	155e4 <PyInit__decimal@@Base+0xead0>  // b.plast
   155c0:	mov	x23, x19
   155c4:	mov	x0, x23
   155c8:	mov	x1, x20
   155cc:	mov	w2, w22
   155d0:	bl	26ca0 <PyInit__decimal@@Base+0x2018c>
   155d4:	cbz	w0, 15714 <PyInit__decimal@@Base+0xec00>
   155d8:	add	x23, x23, x27
   155dc:	cmp	x23, x21
   155e0:	b.cc	155c4 <PyInit__decimal@@Base+0xeab0>  // b.lo, b.ul, b.last
   155e4:	add	x1, sp, #0x20
   155e8:	mov	w0, w22
   155ec:	bl	15170 <PyInit__decimal@@Base+0xe65c>
   155f0:	ldr	x0, [sp, #16]
   155f4:	mov	w1, #0x1                   	// #1
   155f8:	mov	w2, w22
   155fc:	str	w22, [sp, #12]
   15600:	bl	26330 <PyInit__decimal@@Base+0x1f81c>
   15604:	ldr	x24, [sp, #32]
   15608:	mov	x23, x0
   1560c:	add	x21, x19, x27
   15610:	mov	w25, #0x1                   	// #1
   15614:	b	15628 <PyInit__decimal@@Base+0xeb14>
   15618:	add	x25, x25, #0x1
   1561c:	cmp	x25, #0x3
   15620:	add	x21, x21, x27
   15624:	b.eq	156c4 <PyInit__decimal@@Base+0xebb0>  // b.none
   15628:	mov	w8, #0x1                   	// #1
   1562c:	mov	x0, x23
   15630:	mov	x1, x25
   15634:	mov	x2, x24
   15638:	stur	x8, [x29, #-32]
   1563c:	bl	15298 <PyInit__decimal@@Base+0xe784>
   15640:	mov	x1, x0
   15644:	mov	x2, x24
   15648:	str	x0, [sp, #40]
   1564c:	bl	15310 <PyInit__decimal@@Base+0xe7fc>
   15650:	ldr	x8, [sp, #16]
   15654:	cmp	x8, #0x3
   15658:	b.cc	15618 <PyInit__decimal@@Base+0xeb04>  // b.lo, b.ul, b.last
   1565c:	mov	x26, x0
   15660:	mov	x28, xzr
   15664:	add	x22, x21, x28, lsl #3
   15668:	ldr	x8, [x22]
   1566c:	ldur	x1, [x29, #-32]
   15670:	ldr	x3, [sp, #40]
   15674:	sub	x0, x29, #0x18
   15678:	stur	x8, [x29, #-24]
   1567c:	ldr	x8, [x22, #8]
   15680:	add	x2, sp, #0x18
   15684:	mov	x4, x24
   15688:	str	x8, [sp, #24]
   1568c:	bl	154c8 <PyInit__decimal@@Base+0xe9b4>
   15690:	sub	x0, x29, #0x20
   15694:	add	x1, sp, #0x28
   15698:	mov	x2, x26
   1569c:	mov	x3, x24
   156a0:	bl	1551c <PyInit__decimal@@Base+0xea08>
   156a4:	ldur	x8, [x29, #-24]
   156a8:	add	x28, x28, #0x2
   156ac:	cmp	x28, x20
   156b0:	str	x8, [x22]
   156b4:	ldr	x8, [sp, #24]
   156b8:	str	x8, [x22, #8]
   156bc:	b.cc	15664 <PyInit__decimal@@Base+0xeb50>  // b.lo, b.ul, b.last
   156c0:	b	15618 <PyInit__decimal@@Base+0xeb04>
   156c4:	ldr	w2, [sp, #12]
   156c8:	sub	x0, x29, #0x18
   156cc:	mov	w1, #0x1                   	// #1
   156d0:	mov	w22, #0x1                   	// #1
   156d4:	bl	26678 <PyInit__decimal@@Base+0x1fb64>
   156d8:	add	x21, x19, x20, lsl #3
   156dc:	cmp	x21, x19
   156e0:	b.ls	15718 <PyInit__decimal@@Base+0xec04>  // b.plast
   156e4:	lsl	x20, x20, #4
   156e8:	ldr	x4, [sp, #32]
   156ec:	add	x1, x19, x27
   156f0:	add	x2, x19, x20
   156f4:	sub	x3, x29, #0x18
   156f8:	mov	x0, x19
   156fc:	bl	15184 <PyInit__decimal@@Base+0xe670>
   15700:	add	x19, x19, #0x8
   15704:	cmp	x19, x21
   15708:	b.cc	156e8 <PyInit__decimal@@Base+0xebd4>  // b.lo, b.ul, b.last
   1570c:	mov	w22, #0x1                   	// #1
   15710:	b	15718 <PyInit__decimal@@Base+0xec04>
   15714:	mov	w22, wzr
   15718:	mov	w0, w22
   1571c:	ldp	x20, x19, [sp, #160]
   15720:	ldp	x22, x21, [sp, #144]
   15724:	ldp	x24, x23, [sp, #128]
   15728:	ldp	x26, x25, [sp, #112]
   1572c:	ldp	x28, x27, [sp, #96]
   15730:	ldp	x29, x30, [sp, #80]
   15734:	add	sp, sp, #0xb0
   15738:	ret
   1573c:	adds	x8, x1, x0
   15740:	csel	x9, x2, xzr, cs  // cs = hs, nlast
   15744:	sub	x8, x8, x9
   15748:	cmp	x8, x2
   1574c:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   15750:	sub	x0, x8, x9
   15754:	ret
   15758:	mul	x8, x3, x2
   1575c:	umulh	x9, x3, x2
   15760:	str	x9, [x0]
   15764:	str	x8, [x1]
   15768:	ret
   1576c:	sub	sp, sp, #0x70
   15770:	stp	x29, x30, [sp, #48]
   15774:	stp	x24, x23, [sp, #64]
   15778:	stp	x22, x21, [sp, #80]
   1577c:	stp	x20, x19, [sp, #96]
   15780:	add	x29, sp, #0x30
   15784:	mov	x22, x1
   15788:	mov	w1, wzr
   1578c:	mov	x19, x3
   15790:	mov	x21, x2
   15794:	mov	x20, x0
   15798:	stp	xzr, xzr, [sp, #8]
   1579c:	bl	18a64 <PyInit__decimal@@Base+0x11f50>
   157a0:	str	xzr, [x20, #24]
   157a4:	str	xzr, [x20, #8]
   157a8:	ldrb	w8, [x22]
   157ac:	cmp	w8, #0x2d
   157b0:	b.eq	157c8 <PyInit__decimal@@Base+0xecb4>  // b.none
   157b4:	cmp	w8, #0x2b
   157b8:	b.ne	157dc <PyInit__decimal@@Base+0xecc8>  // b.any
   157bc:	mov	w23, wzr
   157c0:	add	x22, x22, #0x1
   157c4:	b	157e0 <PyInit__decimal@@Base+0xeccc>
   157c8:	mov	x0, x20
   157cc:	bl	189c8 <PyInit__decimal@@Base+0x11eb4>
   157d0:	add	x22, x22, #0x1
   157d4:	mov	w23, #0x1                   	// #1
   157d8:	b	157e0 <PyInit__decimal@@Base+0xeccc>
   157dc:	mov	w23, wzr
   157e0:	adrp	x1, 2c000 <PyInit__decimal@@Base+0x254ec>
   157e4:	adrp	x2, 2e000 <PyInit__decimal@@Base+0x274ec>
   157e8:	add	x1, x1, #0xff0
   157ec:	add	x2, x2, #0x279
   157f0:	mov	w3, #0x3                   	// #3
   157f4:	mov	x0, x22
   157f8:	bl	15a74 <PyInit__decimal@@Base+0xef60>
   157fc:	cbz	w0, 1581c <PyInit__decimal@@Base+0xed08>
   15800:	mov	w2, #0x4                   	// #4
   15804:	mov	x0, x20
   15808:	mov	w1, w23
   1580c:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   15810:	ldrb	w8, [x22, #3]!
   15814:	cbnz	w8, 15854 <PyInit__decimal@@Base+0xed40>
   15818:	b	15a18 <PyInit__decimal@@Base+0xef04>
   1581c:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   15820:	adrp	x2, 2e000 <PyInit__decimal@@Base+0x274ec>
   15824:	add	x1, x1, #0x175
   15828:	add	x2, x2, #0x278
   1582c:	mov	w3, #0x4                   	// #4
   15830:	mov	x0, x22
   15834:	bl	15a74 <PyInit__decimal@@Base+0xef60>
   15838:	cbz	w0, 158f4 <PyInit__decimal@@Base+0xede0>
   1583c:	mov	w2, #0x8                   	// #8
   15840:	mov	x0, x20
   15844:	mov	w1, w23
   15848:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1584c:	ldrb	w8, [x22, #4]!
   15850:	cbz	w8, 15a18 <PyInit__decimal@@Base+0xef04>
   15854:	add	x1, sp, #0x18
   15858:	mov	x0, x22
   1585c:	bl	15ab8 <PyInit__decimal@@Base+0xefa4>
   15860:	cbz	x0, 15a08 <PyInit__decimal@@Base+0xeef4>
   15864:	ldrb	w8, [x0]
   15868:	mov	x22, x0
   1586c:	cbz	w8, 15a18 <PyInit__decimal@@Base+0xef04>
   15870:	ldr	x8, [sp, #24]
   15874:	ldr	x9, [x21]
   15878:	ldrsw	x10, [x21, #40]
   1587c:	sub	x2, x8, x22
   15880:	sub	x8, x9, x10
   15884:	cmp	x2, x8
   15888:	b.hi	15a08 <PyInit__decimal@@Base+0xeef4>  // b.pmore
   1588c:	sub	x0, x29, #0x8
   15890:	sub	x1, x29, #0x10
   15894:	bl	15cb8 <PyInit__decimal@@Base+0xf1a4>
   15898:	ldp	x23, x8, [x29, #-16]
   1589c:	cmp	x23, #0x0
   158a0:	cinc	x24, x8, ne  // ne = any
   158a4:	cbz	x24, 15a08 <PyInit__decimal@@Base+0xeef4>
   158a8:	mov	x0, x20
   158ac:	mov	x1, x24
   158b0:	mov	x2, x19
   158b4:	bl	185a4 <PyInit__decimal@@Base+0x11a90>
   158b8:	cbz	w0, 15a30 <PyInit__decimal@@Base+0xef1c>
   158bc:	str	x24, [x20, #24]
   158c0:	ldr	x0, [x20, #40]
   158c4:	ldr	x2, [sp, #16]
   158c8:	mov	x1, x22
   158cc:	mov	w3, w23
   158d0:	mov	x4, x24
   158d4:	bl	15ce4 <PyInit__decimal@@Base+0xf1d0>
   158d8:	mov	x0, x20
   158dc:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   158e0:	mov	x0, x20
   158e4:	mov	x1, x21
   158e8:	mov	x2, x19
   158ec:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   158f0:	b	15a18 <PyInit__decimal@@Base+0xef04>
   158f4:	adrp	x1, 2e000 <PyInit__decimal@@Base+0x274ec>
   158f8:	adrp	x2, 2e000 <PyInit__decimal@@Base+0x274ec>
   158fc:	add	x1, x1, #0x27d
   15900:	add	x2, x2, #0x281
   15904:	mov	w3, #0x3                   	// #3
   15908:	mov	x0, x22
   1590c:	bl	15a74 <PyInit__decimal@@Base+0xef60>
   15910:	cbz	w0, 15950 <PyInit__decimal@@Base+0xee3c>
   15914:	ldrb	w8, [x22, #3]!
   15918:	cbz	w8, 1593c <PyInit__decimal@@Base+0xee28>
   1591c:	adrp	x1, 2e000 <PyInit__decimal@@Base+0x274ec>
   15920:	adrp	x2, 2e000 <PyInit__decimal@@Base+0x274ec>
   15924:	add	x1, x1, #0xcaa
   15928:	add	x2, x2, #0x285
   1592c:	mov	w3, #0x6                   	// #6
   15930:	mov	x0, x22
   15934:	bl	15a74 <PyInit__decimal@@Base+0xef60>
   15938:	cbz	w0, 15a08 <PyInit__decimal@@Base+0xeef4>
   1593c:	mov	w2, #0x2                   	// #2
   15940:	mov	x0, x20
   15944:	mov	w1, w23
   15948:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1594c:	b	15a18 <PyInit__decimal@@Base+0xef04>
   15950:	add	x1, sp, #0x10
   15954:	add	x2, sp, #0x8
   15958:	add	x3, sp, #0x18
   1595c:	mov	x0, x22
   15960:	bl	15b0c <PyInit__decimal@@Base+0xeff8>
   15964:	cbz	x0, 15a08 <PyInit__decimal@@Base+0xeef4>
   15968:	ldr	x8, [sp, #8]
   1596c:	mov	x22, x0
   15970:	cbz	x8, 159b0 <PyInit__decimal@@Base+0xee9c>
   15974:	add	x0, x8, #0x1
   15978:	str	x8, [sp, #24]
   1597c:	str	x0, [sp, #8]
   15980:	bl	15c54 <PyInit__decimal@@Base+0xf140>
   15984:	mov	x23, x0
   15988:	str	x0, [x20, #8]
   1598c:	bl	69c0 <__errno_location@plt>
   15990:	ldr	w8, [x0]
   15994:	cbz	w8, 159b0 <PyInit__decimal@@Base+0xee9c>
   15998:	cmp	w8, #0x22
   1599c:	b.ne	15a08 <PyInit__decimal@@Base+0xeef4>  // b.any
   159a0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   159a4:	add	x8, x23, x8
   159a8:	cmp	x8, #0x1
   159ac:	b.hi	15a08 <PyInit__decimal@@Base+0xeef4>  // b.pmore
   159b0:	ldp	x10, x9, [sp, #16]
   159b4:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   159b8:	movk	x8, #0xb6b3, lsl #32
   159bc:	movk	x8, #0xde0, lsl #48
   159c0:	sub	x2, x9, x22
   159c4:	cbz	x10, 15a00 <PyInit__decimal@@Base+0xeeec>
   159c8:	mvn	x11, x10
   159cc:	add	x9, x9, x11
   159d0:	cmp	x9, x8
   159d4:	b.hi	15a08 <PyInit__decimal@@Base+0xeef4>  // b.pmore
   159d8:	cmp	x10, x22
   159dc:	ldr	x10, [x20, #8]
   159e0:	eor	x11, x9, #0x8000000000000000
   159e4:	cset	w12, hi  // hi = pmore
   159e8:	sub	x2, x2, x12
   159ec:	sub	x9, x10, x9
   159f0:	cmp	x10, x11
   159f4:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   159f8:	csel	x9, x10, x9, lt  // lt = tstop
   159fc:	str	x9, [x20, #8]
   15a00:	cmp	x2, x8
   15a04:	b.ls	15a38 <PyInit__decimal@@Base+0xef24>  // b.plast
   15a08:	mov	w1, #0x2                   	// #2
   15a0c:	mov	x0, x20
   15a10:	mov	x2, x19
   15a14:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   15a18:	ldp	x20, x19, [sp, #96]
   15a1c:	ldp	x22, x21, [sp, #80]
   15a20:	ldp	x24, x23, [sp, #64]
   15a24:	ldp	x29, x30, [sp, #48]
   15a28:	add	sp, sp, #0x70
   15a2c:	ret
   15a30:	mov	w1, #0x200                 	// #512
   15a34:	b	15a0c <PyInit__decimal@@Base+0xeef8>
   15a38:	ldr	x9, [x20, #8]
   15a3c:	mov	x8, #0x1                   	// #1
   15a40:	movk	x8, #0x4ec8, lsl #16
   15a44:	movk	x8, #0x6d67, lsl #32
   15a48:	movk	x8, #0x1bc1, lsl #48
   15a4c:	cmp	x9, x8
   15a50:	b.le	15a58 <PyInit__decimal@@Base+0xef44>
   15a54:	str	x8, [x20, #8]
   15a58:	ldr	x8, [x20, #8]
   15a5c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   15a60:	cmp	x8, x9
   15a64:	b.ne	1588c <PyInit__decimal@@Base+0xed78>  // b.any
   15a68:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   15a6c:	str	x8, [x20, #8]
   15a70:	b	1588c <PyInit__decimal@@Base+0xed78>
   15a74:	cbnz	x3, 15a94 <PyInit__decimal@@Base+0xef80>
   15a78:	mov	w0, #0x1                   	// #1
   15a7c:	ret
   15a80:	sub	x3, x3, #0x1
   15a84:	add	x0, x0, #0x1
   15a88:	add	x2, x2, #0x1
   15a8c:	add	x1, x1, #0x1
   15a90:	cbz	x3, 15a78 <PyInit__decimal@@Base+0xef64>
   15a94:	ldrb	w8, [x0]
   15a98:	ldrb	w9, [x1]
   15a9c:	cmp	w8, w9
   15aa0:	b.eq	15a80 <PyInit__decimal@@Base+0xef6c>  // b.none
   15aa4:	ldrb	w9, [x2]
   15aa8:	cmp	w8, w9
   15aac:	b.eq	15a80 <PyInit__decimal@@Base+0xef6c>  // b.none
   15ab0:	mov	w0, wzr
   15ab4:	ret
   15ab8:	stp	x29, x30, [sp, #-32]!
   15abc:	stp	x20, x19, [sp, #16]
   15ac0:	mov	x29, sp
   15ac4:	mov	x19, x1
   15ac8:	sub	x20, x0, #0x1
   15acc:	ldrb	w8, [x20, #1]!
   15ad0:	cmp	w8, #0x30
   15ad4:	b.eq	15acc <PyInit__decimal@@Base+0xefb8>  // b.none
   15ad8:	bl	6820 <__ctype_b_loc@plt>
   15adc:	ldr	x9, [x0]
   15ae0:	sub	x8, x20, #0x1
   15ae4:	ldrb	w10, [x8, #1]!
   15ae8:	ldrh	w10, [x9, x10, lsl #1]
   15aec:	tbnz	w10, #11, 15ae4 <PyInit__decimal@@Base+0xefd0>
   15af0:	str	x8, [x19]
   15af4:	ldrb	w8, [x8]
   15af8:	cmp	w8, #0x0
   15afc:	csel	x0, x20, xzr, eq  // eq = none
   15b00:	ldp	x20, x19, [sp, #16]
   15b04:	ldp	x29, x30, [sp], #32
   15b08:	ret
   15b0c:	stp	x29, x30, [sp, #-64]!
   15b10:	stp	x24, x23, [sp, #16]
   15b14:	stp	x22, x21, [sp, #32]
   15b18:	stp	x20, x19, [sp, #48]
   15b1c:	mov	x29, sp
   15b20:	mov	x19, x3
   15b24:	mov	x20, x2
   15b28:	mov	x21, x1
   15b2c:	mov	x22, x0
   15b30:	mov	x23, xzr
   15b34:	str	xzr, [x1]
   15b38:	str	xzr, [x2]
   15b3c:	b	15b48 <PyInit__decimal@@Base+0xf034>
   15b40:	mov	x23, x22
   15b44:	add	x22, x22, #0x1
   15b48:	ldrb	w24, [x22]
   15b4c:	cmp	w24, #0x44
   15b50:	b.le	15b94 <PyInit__decimal@@Base+0xf080>
   15b54:	cmp	w24, #0x45
   15b58:	b.eq	15b64 <PyInit__decimal@@Base+0xf050>  // b.none
   15b5c:	cmp	w24, #0x65
   15b60:	b.ne	15bc8 <PyInit__decimal@@Base+0xf0b4>  // b.any
   15b64:	ldr	x8, [x20]
   15b68:	cbnz	x8, 15c30 <PyInit__decimal@@Base+0xf11c>
   15b6c:	str	x22, [x20]
   15b70:	mov	x8, x22
   15b74:	ldrb	w9, [x8, #1]!
   15b78:	cmp	w9, #0x2d
   15b7c:	b.eq	15bb8 <PyInit__decimal@@Base+0xf0a4>  // b.none
   15b80:	cmp	w9, #0x2b
   15b84:	b.ne	15b44 <PyInit__decimal@@Base+0xf030>  // b.any
   15b88:	mov	x22, x8
   15b8c:	add	x22, x8, #0x1
   15b90:	b	15b48 <PyInit__decimal@@Base+0xf034>
   15b94:	cmp	w24, #0x2e
   15b98:	b.ne	15bc4 <PyInit__decimal@@Base+0xf0b0>  // b.any
   15b9c:	ldr	x8, [x21]
   15ba0:	cbnz	x8, 15c30 <PyInit__decimal@@Base+0xf11c>
   15ba4:	ldr	x8, [x20]
   15ba8:	cbnz	x8, 15c30 <PyInit__decimal@@Base+0xf11c>
   15bac:	str	x22, [x21]
   15bb0:	add	x22, x22, #0x1
   15bb4:	b	15b48 <PyInit__decimal@@Base+0xf034>
   15bb8:	mov	x22, x8
   15bbc:	add	x22, x8, #0x1
   15bc0:	b	15b48 <PyInit__decimal@@Base+0xf034>
   15bc4:	cbz	w24, 15c38 <PyInit__decimal@@Base+0xf124>
   15bc8:	bl	6820 <__ctype_b_loc@plt>
   15bcc:	ldr	x8, [x0]
   15bd0:	ldrh	w9, [x8, x24, lsl #1]
   15bd4:	tbz	w9, #11, 15c30 <PyInit__decimal@@Base+0xf11c>
   15bd8:	cbnz	x23, 15b44 <PyInit__decimal@@Base+0xf030>
   15bdc:	ldr	x9, [x20]
   15be0:	cbz	x9, 15bf0 <PyInit__decimal@@Base+0xf0dc>
   15be4:	mov	x23, xzr
   15be8:	add	x22, x22, #0x1
   15bec:	b	15b48 <PyInit__decimal@@Base+0xf034>
   15bf0:	cmp	w24, #0x30
   15bf4:	b.ne	15b40 <PyInit__decimal@@Base+0xf02c>  // b.any
   15bf8:	ldrb	w9, [x22, #1]
   15bfc:	ldrh	w10, [x8, x9, lsl #1]
   15c00:	tbnz	w10, #11, 15c24 <PyInit__decimal@@Base+0xf110>
   15c04:	cmp	w9, #0x2e
   15c08:	b.ne	15b40 <PyInit__decimal@@Base+0xf02c>  // b.any
   15c0c:	ldrb	w9, [x22, #2]
   15c10:	ldrh	w8, [x8, x9, lsl #1]
   15c14:	tbz	w8, #11, 15b40 <PyInit__decimal@@Base+0xf02c>
   15c18:	mov	x23, xzr
   15c1c:	add	x22, x22, #0x1
   15c20:	b	15b48 <PyInit__decimal@@Base+0xf034>
   15c24:	mov	x23, xzr
   15c28:	add	x22, x22, #0x1
   15c2c:	b	15b48 <PyInit__decimal@@Base+0xf034>
   15c30:	mov	x23, xzr
   15c34:	b	15c3c <PyInit__decimal@@Base+0xf128>
   15c38:	str	x22, [x19]
   15c3c:	mov	x0, x23
   15c40:	ldp	x20, x19, [sp, #48]
   15c44:	ldp	x22, x21, [sp, #32]
   15c48:	ldp	x24, x23, [sp, #16]
   15c4c:	ldp	x29, x30, [sp], #64
   15c50:	ret
   15c54:	sub	sp, sp, #0x30
   15c58:	stp	x29, x30, [sp, #16]
   15c5c:	stp	x20, x19, [sp, #32]
   15c60:	add	x29, sp, #0x10
   15c64:	mov	x20, x0
   15c68:	bl	69c0 <__errno_location@plt>
   15c6c:	mov	x19, x0
   15c70:	str	wzr, [x0]
   15c74:	add	x1, sp, #0x8
   15c78:	mov	w2, #0xa                   	// #10
   15c7c:	mov	x0, x20
   15c80:	bl	64e0 <strtoll@plt>
   15c84:	ldr	w8, [x19]
   15c88:	cbnz	w8, 15ca8 <PyInit__decimal@@Base+0xf194>
   15c8c:	ldrb	w8, [x20]
   15c90:	cbz	w8, 15ca0 <PyInit__decimal@@Base+0xf18c>
   15c94:	ldr	x8, [sp, #8]
   15c98:	ldrb	w8, [x8]
   15c9c:	cbz	w8, 15ca8 <PyInit__decimal@@Base+0xf194>
   15ca0:	mov	w8, #0x16                  	// #22
   15ca4:	str	w8, [x19]
   15ca8:	ldp	x20, x19, [sp, #32]
   15cac:	ldp	x29, x30, [sp, #16]
   15cb0:	add	sp, sp, #0x30
   15cb4:	ret
   15cb8:	mov	x8, #0x9436                	// #37942
   15cbc:	movk	x8, #0x50d7, lsl #16
   15cc0:	movk	x8, #0x435e, lsl #32
   15cc4:	movk	x8, #0xd79, lsl #48
   15cc8:	smulh	x8, x2, x8
   15ccc:	mov	x9, #0xffffffffffffffed    	// #-19
   15cd0:	add	x8, x8, x8, lsr #63
   15cd4:	str	x8, [x0]
   15cd8:	madd	x8, x8, x9, x2
   15cdc:	str	x8, [x1]
   15ce0:	ret
   15ce4:	cmp	w3, #0x1
   15ce8:	b.lt	15d20 <PyInit__decimal@@Base+0xf20c>  // b.tstop
   15cec:	sub	x4, x4, #0x1
   15cf0:	lsl	x8, x4, #3
   15cf4:	mov	w9, #0xa                   	// #10
   15cf8:	str	xzr, [x0, x4, lsl #3]
   15cfc:	cmp	x1, x2
   15d00:	cinc	x1, x1, eq  // eq = none
   15d04:	ldr	x10, [x0, x8]
   15d08:	ldrb	w11, [x1], #1
   15d0c:	subs	w3, w3, #0x1
   15d10:	madd	x10, x10, x9, x11
   15d14:	sub	x10, x10, #0x30
   15d18:	str	x10, [x0, x8]
   15d1c:	b.ne	15cfc <PyInit__decimal@@Base+0xf1e8>  // b.any
   15d20:	cbz	x4, 15d60 <PyInit__decimal@@Base+0xf24c>
   15d24:	mov	w8, #0xa                   	// #10
   15d28:	sub	x4, x4, #0x1
   15d2c:	mov	w9, #0x13                  	// #19
   15d30:	str	xzr, [x0, x4, lsl #3]
   15d34:	cmp	x1, x2
   15d38:	lsl	x10, x4, #3
   15d3c:	cinc	x1, x1, eq  // eq = none
   15d40:	ldr	x11, [x0, x10]
   15d44:	ldrb	w12, [x1], #1
   15d48:	subs	w9, w9, #0x1
   15d4c:	madd	x11, x11, x8, x12
   15d50:	sub	x11, x11, #0x30
   15d54:	str	x11, [x0, x10]
   15d58:	b.ne	15d34 <PyInit__decimal@@Base+0xf220>  // b.any
   15d5c:	cbnz	x4, 15d28 <PyInit__decimal@@Base+0xf214>
   15d60:	ret
   15d64:	sub	sp, sp, #0x20
   15d68:	stp	x29, x30, [sp, #16]
   15d6c:	add	x29, sp, #0x10
   15d70:	cmp	w1, #0x0
   15d74:	mov	x8, x0
   15d78:	cset	w9, ne  // ne = any
   15d7c:	orr	w2, w9, #0x2
   15d80:	add	x0, sp, #0x8
   15d84:	mov	w3, #0x1                   	// #1
   15d88:	mov	x1, x8
   15d8c:	bl	15da0 <PyInit__decimal@@Base+0xf28c>
   15d90:	ldr	x0, [sp, #8]
   15d94:	ldp	x29, x30, [sp, #16]
   15d98:	add	sp, sp, #0x20
   15d9c:	ret
   15da0:	stp	x29, x30, [sp, #-80]!
   15da4:	str	x25, [sp, #16]
   15da8:	stp	x24, x23, [sp, #32]
   15dac:	stp	x22, x21, [sp, #48]
   15db0:	stp	x20, x19, [sp, #64]
   15db4:	mov	x29, sp
   15db8:	mov	x19, x0
   15dbc:	mov	x0, x1
   15dc0:	mov	x22, x3
   15dc4:	mov	w20, w2
   15dc8:	mov	x21, x1
   15dcc:	bl	183c8 <PyInit__decimal@@Base+0x118b4>
   15dd0:	cbz	w0, 15e20 <PyInit__decimal@@Base+0xf30c>
   15dd4:	mov	x0, x21
   15dd8:	bl	1837c <PyInit__decimal@@Base+0x11868>
   15ddc:	cbz	w0, 15df8 <PyInit__decimal@@Base+0xf2e4>
   15de0:	ldr	x8, [x21, #24]
   15de4:	cmp	x8, #0x1
   15de8:	b.lt	15df8 <PyInit__decimal@@Base+0xf2e4>  // b.tstop
   15dec:	ldr	x8, [x21, #16]
   15df0:	add	x0, x8, #0xb
   15df4:	b	15dfc <PyInit__decimal@@Base+0xf2e8>
   15df8:	mov	w0, #0xb                   	// #11
   15dfc:	mov	w1, #0x1                   	// #1
   15e00:	bl	17adc <PyInit__decimal@@Base+0x10fc8>
   15e04:	cbz	x0, 15ec8 <PyInit__decimal@@Base+0xf3b4>
   15e08:	mov	x22, x0
   15e0c:	mov	x0, x21
   15e10:	bl	18388 <PyInit__decimal@@Base+0x11874>
   15e14:	cbz	w0, 15e70 <PyInit__decimal@@Base+0xf35c>
   15e18:	mov	w8, #0x2d                  	// #45
   15e1c:	b	15eec <PyInit__decimal@@Base+0xf3d8>
   15e20:	ldp	x8, x9, [x21, #8]
   15e24:	add	x24, x8, x9
   15e28:	tbz	w20, #3, 15e34 <PyInit__decimal@@Base+0xf320>
   15e2c:	mov	x25, x22
   15e30:	b	15e88 <PyInit__decimal@@Base+0xf374>
   15e34:	tbnz	w20, #4, 15e84 <PyInit__decimal@@Base+0xf370>
   15e38:	cmp	x8, #0x0
   15e3c:	b.gt	15e4c <PyInit__decimal@@Base+0xf338>
   15e40:	cmn	x24, #0x6
   15e44:	mov	x25, x24
   15e48:	b.gt	15e88 <PyInit__decimal@@Base+0xf374>
   15e4c:	tbz	w20, #2, 15e2c <PyInit__decimal@@Base+0xf318>
   15e50:	mov	x0, x21
   15e54:	bl	183d4 <PyInit__decimal@@Base+0x118c0>
   15e58:	cbz	w0, 16098 <PyInit__decimal@@Base+0xf584>
   15e5c:	ldr	x8, [x21, #8]
   15e60:	add	x0, x8, #0x2
   15e64:	bl	171f4 <PyInit__decimal@@Base+0x106e0>
   15e68:	sub	x25, x0, #0x1
   15e6c:	b	15e88 <PyInit__decimal@@Base+0xf374>
   15e70:	tbnz	w20, #6, 15ee8 <PyInit__decimal@@Base+0xf3d4>
   15e74:	mov	x23, x22
   15e78:	tbz	w20, #7, 15ef4 <PyInit__decimal@@Base+0xf3e0>
   15e7c:	mov	w8, #0x2b                  	// #43
   15e80:	b	15eec <PyInit__decimal@@Base+0xf3d8>
   15e84:	mov	x25, x24
   15e88:	ldr	x8, [x21, #16]
   15e8c:	mov	w1, #0x1                   	// #1
   15e90:	subs	x9, x8, x25
   15e94:	add	x9, x9, #0x2
   15e98:	csel	x8, x8, x25, gt
   15e9c:	cmp	x25, #0x1
   15ea0:	csel	x8, x9, x8, lt  // lt = tstop
   15ea4:	add	x0, x8, #0x1a
   15ea8:	bl	17adc <PyInit__decimal@@Base+0x10fc8>
   15eac:	cbz	x0, 15ec8 <PyInit__decimal@@Base+0xf3b4>
   15eb0:	mov	x22, x0
   15eb4:	mov	x0, x21
   15eb8:	bl	18388 <PyInit__decimal@@Base+0x11874>
   15ebc:	cbz	w0, 15ed4 <PyInit__decimal@@Base+0xf3c0>
   15ec0:	mov	w8, #0x2d                  	// #45
   15ec4:	b	15f7c <PyInit__decimal@@Base+0xf468>
   15ec8:	str	xzr, [x19]
   15ecc:	mov	x0, #0xffffffffffffffff    	// #-1
   15ed0:	b	16080 <PyInit__decimal@@Base+0xf56c>
   15ed4:	tbnz	w20, #6, 15f78 <PyInit__decimal@@Base+0xf464>
   15ed8:	mov	x23, x22
   15edc:	tbz	w20, #7, 15f84 <PyInit__decimal@@Base+0xf470>
   15ee0:	mov	w8, #0x2b                  	// #43
   15ee4:	b	15f7c <PyInit__decimal@@Base+0xf468>
   15ee8:	mov	w8, #0x20                  	// #32
   15eec:	mov	x23, x22
   15ef0:	strb	w8, [x23], #1
   15ef4:	mov	x0, x21
   15ef8:	bl	1837c <PyInit__decimal@@Base+0x11868>
   15efc:	cbz	w0, 15f20 <PyInit__decimal@@Base+0xf40c>
   15f00:	mov	x0, x21
   15f04:	bl	183a4 <PyInit__decimal@@Base+0x11890>
   15f08:	cbz	w0, 15f44 <PyInit__decimal@@Base+0xf430>
   15f0c:	mov	w8, #0x614e                	// #24910
   15f10:	movk	w8, #0x4e, lsl #16
   15f14:	str	w8, [x23]
   15f18:	mov	w8, #0x3                   	// #3
   15f1c:	b	15f58 <PyInit__decimal@@Base+0xf444>
   15f20:	mov	x0, x21
   15f24:	bl	18370 <PyInit__decimal@@Base+0x1185c>
   15f28:	cbz	w0, 160a8 <PyInit__decimal@@Base+0xf594>
   15f2c:	adrp	x8, 2e000 <PyInit__decimal@@Base+0x274ec>
   15f30:	add	x8, x8, #0xca7
   15f34:	ldr	x8, [x8]
   15f38:	str	x8, [x23]
   15f3c:	strb	wzr, [x23, #8]!
   15f40:	b	16068 <PyInit__decimal@@Base+0xf554>
   15f44:	mov	w8, #0x4e73                	// #20083
   15f48:	movk	w8, #0x4e61, lsl #16
   15f4c:	str	w8, [x23]
   15f50:	mov	w8, #0x4                   	// #4
   15f54:	strb	wzr, [x23, #4]
   15f58:	ldr	x9, [x21, #24]
   15f5c:	add	x23, x23, x8
   15f60:	cmp	x9, #0x1
   15f64:	b.lt	16068 <PyInit__decimal@@Base+0xf554>  // b.tstop
   15f68:	mov	x0, x23
   15f6c:	mov	x1, x21
   15f70:	bl	17180 <PyInit__decimal@@Base+0x1066c>
   15f74:	b	16064 <PyInit__decimal@@Base+0xf550>
   15f78:	mov	w8, #0x20                  	// #32
   15f7c:	mov	x23, x22
   15f80:	strb	w8, [x23], #1
   15f84:	cmp	x25, #0x0
   15f88:	b.le	15fb0 <PyInit__decimal@@Base+0xf49c>
   15f8c:	ldr	x8, [x21, #16]
   15f90:	cmp	x25, x8
   15f94:	b.ge	15ff4 <PyInit__decimal@@Base+0xf4e0>  // b.tcont
   15f98:	add	x1, x23, x25
   15f9c:	mov	x0, x23
   15fa0:	mov	x2, x21
   15fa4:	bl	1721c <PyInit__decimal@@Base+0x10708>
   15fa8:	mov	x23, x0
   15fac:	b	16038 <PyInit__decimal@@Base+0xf524>
   15fb0:	neg	x2, x25
   15fb4:	mov	w8, #0x2e30                	// #11824
   15fb8:	cmp	x2, #0x1
   15fbc:	strh	w8, [x23], #2
   15fc0:	b.lt	15fe0 <PyInit__decimal@@Base+0xf4cc>  // b.tstop
   15fc4:	mov	w1, #0x30                  	// #48
   15fc8:	mov	x0, x23
   15fcc:	bl	6610 <memset@plt>
   15fd0:	mov	x8, x25
   15fd4:	adds	x8, x8, #0x1
   15fd8:	add	x23, x23, #0x1
   15fdc:	b.cc	15fd4 <PyInit__decimal@@Base+0xf4c0>  // b.lo, b.ul, b.last
   15fe0:	mov	x0, x23
   15fe4:	mov	x1, x21
   15fe8:	bl	17180 <PyInit__decimal@@Base+0x1066c>
   15fec:	mov	x23, x0
   15ff0:	b	16038 <PyInit__decimal@@Base+0xf524>
   15ff4:	mov	x0, x23
   15ff8:	mov	x1, x21
   15ffc:	bl	17180 <PyInit__decimal@@Base+0x1066c>
   16000:	ldr	x8, [x21, #16]
   16004:	mov	x23, x0
   16008:	sub	x8, x25, x8
   1600c:	cmp	x8, #0x1
   16010:	b.lt	16038 <PyInit__decimal@@Base+0xf524>  // b.tstop
   16014:	mov	x8, xzr
   16018:	mov	w9, #0x30                  	// #48
   1601c:	strb	w9, [x23, x8]
   16020:	ldr	x10, [x21, #16]
   16024:	add	x8, x8, #0x1
   16028:	sub	x10, x25, x10
   1602c:	cmp	x8, x10
   16030:	b.lt	1601c <PyInit__decimal@@Base+0xf508>  // b.tstop
   16034:	add	x23, x23, x8
   16038:	tbnz	w20, #3, 16044 <PyInit__decimal@@Base+0xf530>
   1603c:	cmp	x24, x25
   16040:	b.eq	16068 <PyInit__decimal@@Base+0xf554>  // b.none
   16044:	tst	w20, #0x1
   16048:	mov	w8, #0x45                  	// #69
   1604c:	mov	w9, #0x65                  	// #101
   16050:	csel	w8, w9, w8, eq  // eq = none
   16054:	strb	w8, [x23], #1
   16058:	sub	x1, x24, x25
   1605c:	mov	x0, x23
   16060:	bl	17294 <PyInit__decimal@@Base+0x10780>
   16064:	mov	x23, x0
   16068:	tbz	w20, #5, 16074 <PyInit__decimal@@Base+0xf560>
   1606c:	mov	w8, #0x25                  	// #37
   16070:	strb	w8, [x23], #1
   16074:	sub	x0, x23, x22
   16078:	strb	wzr, [x23]
   1607c:	str	x22, [x19]
   16080:	ldp	x20, x19, [sp, #64]
   16084:	ldp	x22, x21, [sp, #48]
   16088:	ldp	x24, x23, [sp, #32]
   1608c:	ldr	x25, [sp, #16]
   16090:	ldp	x29, x30, [sp], #80
   16094:	ret
   16098:	sub	x0, x24, #0x1
   1609c:	bl	171f4 <PyInit__decimal@@Base+0x106e0>
   160a0:	add	x25, x0, x22
   160a4:	b	15e88 <PyInit__decimal@@Base+0xf374>
   160a8:	bl	6760 <abort@plt>
   160ac:	sub	sp, sp, #0x20
   160b0:	stp	x29, x30, [sp, #16]
   160b4:	add	x29, sp, #0x10
   160b8:	cmp	w1, #0x0
   160bc:	mov	x8, x0
   160c0:	cset	w9, ne  // ne = any
   160c4:	orr	w2, w9, #0x4
   160c8:	add	x0, sp, #0x8
   160cc:	mov	w3, #0x1                   	// #1
   160d0:	mov	x1, x8
   160d4:	bl	15da0 <PyInit__decimal@@Base+0xf28c>
   160d8:	ldr	x0, [sp, #8]
   160dc:	ldp	x29, x30, [sp, #16]
   160e0:	add	sp, sp, #0x20
   160e4:	ret
   160e8:	stp	x29, x30, [sp, #-16]!
   160ec:	mov	x29, sp
   160f0:	cmp	w2, #0x0
   160f4:	cset	w8, ne  // ne = any
   160f8:	orr	w2, w8, #0x2
   160fc:	mov	w3, #0x1                   	// #1
   16100:	bl	15da0 <PyInit__decimal@@Base+0xf28c>
   16104:	ldp	x29, x30, [sp], #16
   16108:	ret
   1610c:	stp	x29, x30, [sp, #-16]!
   16110:	mov	x29, sp
   16114:	cmp	w2, #0x0
   16118:	cset	w8, ne  // ne = any
   1611c:	orr	w2, w8, #0x4
   16120:	mov	w3, #0x1                   	// #1
   16124:	bl	15da0 <PyInit__decimal@@Base+0xf28c>
   16128:	ldp	x29, x30, [sp], #16
   1612c:	ret
   16130:	stp	x29, x30, [sp, #-32]!
   16134:	str	x19, [sp, #16]
   16138:	mov	x29, sp
   1613c:	mov	x19, x0
   16140:	ldr	x0, [x0, #24]
   16144:	bl	6480 <strlen@plt>
   16148:	sub	x8, x0, #0x1
   1614c:	cmp	x8, #0x3
   16150:	b.ls	1615c <PyInit__decimal@@Base+0xf648>  // b.plast
   16154:	mov	w0, #0xffffffff            	// #-1
   16158:	b	1616c <PyInit__decimal@@Base+0xf658>
   1615c:	ldr	x0, [x19, #32]
   16160:	bl	6480 <strlen@plt>
   16164:	cmp	x0, #0x4
   16168:	csetm	w0, hi  // hi = pmore
   1616c:	ldr	x19, [sp, #16]
   16170:	ldp	x29, x30, [sp], #32
   16174:	ret
   16178:	sub	sp, sp, #0x40
   1617c:	stp	x29, x30, [sp, #16]
   16180:	stp	x22, x21, [sp, #32]
   16184:	stp	x20, x19, [sp, #48]
   16188:	add	x29, sp, #0x10
   1618c:	mov	x8, #0xffffffffffffffff    	// #-1
   16190:	str	x1, [sp, #8]
   16194:	cmp	w2, #0x0
   16198:	mov	w9, #0x47                  	// #71
   1619c:	stp	xzr, x8, [x0]
   161a0:	mov	w8, #0x67                  	// #103
   161a4:	csel	w8, w8, w9, eq  // eq = none
   161a8:	mov	w9, #0x2d3e                	// #11582
   161ac:	sturh	w9, [x0, #17]
   161b0:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   161b4:	add	x9, x9, #0x291
   161b8:	mov	x19, x0
   161bc:	stp	x9, x9, [x0, #24]
   161c0:	str	x9, [x0, #40]
   161c4:	strb	w8, [x0, #16]
   161c8:	add	x0, x0, #0x13
   161cc:	bl	16474 <PyInit__decimal@@Base+0xf960>
   161d0:	tbnz	w0, #31, 163c8 <PyInit__decimal@@Base+0xf8b4>
   161d4:	ldr	x9, [sp, #8]
   161d8:	ldrb	w8, [x9]
   161dc:	cbz	w8, 1620c <PyInit__decimal@@Base+0xf6f8>
   161e0:	add	x10, x9, w0, sxtw
   161e4:	ldrb	w8, [x10]
   161e8:	sub	w8, w8, #0x3c
   161ec:	cmp	w8, #0x22
   161f0:	b.hi	1620c <PyInit__decimal@@Base+0xf6f8>  // b.pmore
   161f4:	mov	w11, #0x1                   	// #1
   161f8:	lsl	x8, x11, x8
   161fc:	mov	x11, #0x7                   	// #7
   16200:	movk	x11, #0x4, lsl #32
   16204:	tst	x8, x11
   16208:	b.ne	16244 <PyInit__decimal@@Base+0xf730>  // b.any
   1620c:	mov	w8, #0x20                  	// #32
   16210:	sturh	w8, [x19, #19]
   16214:	ldrb	w8, [x9]
   16218:	sub	w10, w8, #0x3c
   1621c:	cmp	w10, #0x22
   16220:	mov	w8, wzr
   16224:	b.hi	16258 <PyInit__decimal@@Base+0xf744>  // b.pmore
   16228:	mov	w11, #0x1                   	// #1
   1622c:	lsl	x10, x11, x10
   16230:	mov	x11, #0x7                   	// #7
   16234:	movk	x11, #0x4, lsl #32
   16238:	tst	x10, x11
   1623c:	mov	x10, x9
   16240:	b.eq	16258 <PyInit__decimal@@Base+0xf744>  // b.none
   16244:	add	x8, x10, #0x1
   16248:	str	x8, [sp, #8]
   1624c:	ldrb	w8, [x10]
   16250:	strb	w8, [x19, #17]
   16254:	mov	w8, #0x1                   	// #1
   16258:	ldr	x9, [sp, #8]
   1625c:	ldrb	w10, [x9]
   16260:	cmp	w10, #0x2d
   16264:	b.hi	1628c <PyInit__decimal@@Base+0xf778>  // b.pmore
   16268:	mov	w11, #0x1                   	// #1
   1626c:	lsl	x10, x11, x10
   16270:	mov	x11, #0x280100000000        	// #43984760078336
   16274:	tst	x10, x11
   16278:	b.eq	1628c <PyInit__decimal@@Base+0xf778>  // b.none
   1627c:	add	x10, x9, #0x1
   16280:	str	x10, [sp, #8]
   16284:	ldrb	w9, [x9]
   16288:	strb	w9, [x19, #18]
   1628c:	ldr	x9, [sp, #8]
   16290:	ldrb	w10, [x9]
   16294:	cmp	w10, #0x30
   16298:	b.ne	162bc <PyInit__decimal@@Base+0xf7a8>  // b.any
   1629c:	cbnz	w8, 163c8 <PyInit__decimal@@Base+0xf8b4>
   162a0:	mov	w8, #0x7a                  	// #122
   162a4:	add	x10, x9, #0x1
   162a8:	strb	w8, [x19, #17]
   162ac:	str	x10, [sp, #8]
   162b0:	ldrb	w8, [x9]
   162b4:	strb	wzr, [x19, #20]
   162b8:	strb	w8, [x19, #19]
   162bc:	bl	6820 <__ctype_b_loc@plt>
   162c0:	ldr	x21, [sp, #8]
   162c4:	ldr	x9, [x0]
   162c8:	mov	x20, x0
   162cc:	ldrb	w8, [x21]
   162d0:	ldrh	w9, [x9, x8, lsl #1]
   162d4:	tbnz	w9, #11, 163c0 <PyInit__decimal@@Base+0xf8ac>
   162d8:	ldr	x8, [sp, #8]
   162dc:	ldrb	w9, [x8]
   162e0:	cmp	w9, #0x2c
   162e4:	b.ne	16310 <PyInit__decimal@@Base+0xf7fc>  // b.any
   162e8:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   162ec:	adrp	x10, 2e000 <PyInit__decimal@@Base+0x274ec>
   162f0:	adrp	x11, 2e000 <PyInit__decimal@@Base+0x274ec>
   162f4:	add	x9, x9, #0x28b
   162f8:	add	x10, x10, #0x28d
   162fc:	add	x11, x11, #0x28f
   16300:	add	x8, x8, #0x1
   16304:	stp	x9, x10, [x19, #24]
   16308:	str	x11, [x19, #40]
   1630c:	str	x8, [sp, #8]
   16310:	ldr	x8, [sp, #8]
   16314:	ldrb	w9, [x8]
   16318:	cmp	w9, #0x2e
   1631c:	b.ne	16370 <PyInit__decimal@@Base+0xf85c>  // b.any
   16320:	add	x21, x8, #0x1
   16324:	str	x21, [sp, #8]
   16328:	ldr	x9, [x20]
   1632c:	ldrb	w8, [x8, #1]
   16330:	ldrh	w8, [x9, x8, lsl #1]
   16334:	tbz	w8, #11, 163c8 <PyInit__decimal@@Base+0xf8b4>
   16338:	bl	69c0 <__errno_location@plt>
   1633c:	mov	x20, x0
   16340:	str	wzr, [x0]
   16344:	add	x1, sp, #0x8
   16348:	mov	w2, #0xa                   	// #10
   1634c:	mov	x0, x21
   16350:	bl	64e0 <strtoll@plt>
   16354:	str	x0, [x19, #8]
   16358:	ldr	w8, [x20]
   1635c:	mov	w0, wzr
   16360:	cmp	w8, #0x16
   16364:	b.eq	163cc <PyInit__decimal@@Base+0xf8b8>  // b.none
   16368:	cmp	w8, #0x22
   1636c:	b.eq	163cc <PyInit__decimal@@Base+0xf8b8>  // b.none
   16370:	ldr	x8, [sp, #8]
   16374:	ldrb	w9, [x8]
   16378:	sub	w9, w9, #0x25
   1637c:	cmp	w9, #0x49
   16380:	b.hi	163ac <PyInit__decimal@@Base+0xf898>  // b.pmore
   16384:	adrp	x10, 2e000 <PyInit__decimal@@Base+0x274ec>
   16388:	add	x10, x10, #0x208
   1638c:	adr	x11, 1639c <PyInit__decimal@@Base+0xf888>
   16390:	ldrb	w12, [x10, x9]
   16394:	add	x11, x11, x12, lsl #2
   16398:	br	x11
   1639c:	add	x9, x8, #0x1
   163a0:	str	x9, [sp, #8]
   163a4:	ldrb	w8, [x8]
   163a8:	strb	w8, [x19, #16]
   163ac:	ldr	x8, [sp, #8]
   163b0:	ldrb	w8, [x8]
   163b4:	cmp	w8, #0x0
   163b8:	cset	w0, eq  // eq = none
   163bc:	b	163cc <PyInit__decimal@@Base+0xf8b8>
   163c0:	cmp	w8, #0x30
   163c4:	b.ne	163e0 <PyInit__decimal@@Base+0xf8cc>  // b.any
   163c8:	mov	w0, wzr
   163cc:	ldp	x20, x19, [sp, #48]
   163d0:	ldp	x22, x21, [sp, #32]
   163d4:	ldp	x29, x30, [sp, #16]
   163d8:	add	sp, sp, #0x40
   163dc:	ret
   163e0:	bl	69c0 <__errno_location@plt>
   163e4:	mov	x22, x0
   163e8:	str	wzr, [x0]
   163ec:	add	x1, sp, #0x8
   163f0:	mov	w2, #0xa                   	// #10
   163f4:	mov	x0, x21
   163f8:	bl	64e0 <strtoll@plt>
   163fc:	str	x0, [x19]
   16400:	ldr	w8, [x22]
   16404:	mov	w0, wzr
   16408:	cmp	w8, #0x16
   1640c:	b.eq	163cc <PyInit__decimal@@Base+0xf8b8>  // b.none
   16410:	cmp	w8, #0x22
   16414:	b.eq	163cc <PyInit__decimal@@Base+0xf8b8>  // b.none
   16418:	b	162d8 <PyInit__decimal@@Base+0xf7c4>
   1641c:	ldr	x9, [x19, #32]
   16420:	ldrb	w9, [x9]
   16424:	cbnz	w9, 163c8 <PyInit__decimal@@Base+0xf8b4>
   16428:	add	x9, x8, #0x1
   1642c:	str	x9, [sp, #8]
   16430:	ldrb	w8, [x8]
   16434:	mov	w9, #0x67                  	// #103
   16438:	cmp	w8, #0x4e
   1643c:	mov	w8, #0x47                  	// #71
   16440:	csel	w8, w8, w9, eq  // eq = none
   16444:	strb	w8, [x19, #16]
   16448:	bl	65d0 <localeconv@plt>
   1644c:	ldr	x8, [x0]
   16450:	str	x8, [x19, #24]
   16454:	ldr	x8, [x0, #8]
   16458:	str	x8, [x19, #32]
   1645c:	ldr	x8, [x0, #16]
   16460:	mov	x0, x19
   16464:	str	x8, [x19, #40]
   16468:	bl	16130 <PyInit__decimal@@Base+0xf61c>
   1646c:	tbz	w0, #31, 163ac <PyInit__decimal@@Base+0xf898>
   16470:	b	163c8 <PyInit__decimal@@Base+0xf8b4>
   16474:	ldrb	w9, [x1]
   16478:	cbz	w9, 16490 <PyInit__decimal@@Base+0xf97c>
   1647c:	sxtb	w8, w9
   16480:	tbnz	w8, #31, 16498 <PyInit__decimal@@Base+0xf984>
   16484:	strb	w9, [x0], #1
   16488:	mov	w8, #0x1                   	// #1
   1648c:	b	1658c <PyInit__decimal@@Base+0xfa78>
   16490:	mov	w8, wzr
   16494:	b	1658c <PyInit__decimal@@Base+0xfa78>
   16498:	add	w8, w9, #0x3e
   1649c:	and	w8, w8, #0xff
   164a0:	cmp	w8, #0x1e
   164a4:	b.cs	164b0 <PyInit__decimal@@Base+0xf99c>  // b.hs, b.nlast
   164a8:	mov	w8, #0x2                   	// #2
   164ac:	b	164f0 <PyInit__decimal@@Base+0xf9dc>
   164b0:	cmp	w9, #0xe0
   164b4:	b.ne	164c8 <PyInit__decimal@@Base+0xf9b4>  // b.any
   164b8:	mov	w8, #0x3                   	// #3
   164bc:	mov	w10, #0xbf                  	// #191
   164c0:	mov	w11, #0xa0                  	// #160
   164c4:	b	164f8 <PyInit__decimal@@Base+0xf9e4>
   164c8:	cmp	w9, #0xed
   164cc:	b.cc	164ec <PyInit__decimal@@Base+0xf9d8>  // b.lo, b.ul, b.last
   164d0:	cmp	w9, #0xed
   164d4:	b.ne	164e4 <PyInit__decimal@@Base+0xf9d0>  // b.any
   164d8:	mov	w8, #0x3                   	// #3
   164dc:	mov	w10, #0x9f                  	// #159
   164e0:	b	164f4 <PyInit__decimal@@Base+0xf9e0>
   164e4:	cmp	w9, #0xf0
   164e8:	b.cs	1654c <PyInit__decimal@@Base+0xfa38>  // b.hs, b.nlast
   164ec:	mov	w8, #0x3                   	// #3
   164f0:	mov	w10, #0xbf                  	// #191
   164f4:	mov	w11, #0x80                  	// #128
   164f8:	strb	w9, [x0]
   164fc:	ldrb	w9, [x1, #1]
   16500:	cmp	w11, w9
   16504:	b.hi	16588 <PyInit__decimal@@Base+0xfa74>  // b.pmore
   16508:	cmp	w10, w9
   1650c:	b.cc	16588 <PyInit__decimal@@Base+0xfa74>  // b.lo, b.ul, b.last
   16510:	cmp	w8, #0x3
   16514:	strb	w9, [x0, #1]
   16518:	mov	w9, #0x2                   	// #2
   1651c:	b.cc	16544 <PyInit__decimal@@Base+0xfa30>  // b.lo, b.ul, b.last
   16520:	ldrsb	w10, [x1, x9]
   16524:	tbz	w10, #31, 16588 <PyInit__decimal@@Base+0xfa74>
   16528:	and	w10, w10, #0xff
   1652c:	cmp	w10, #0xbf
   16530:	b.hi	16588 <PyInit__decimal@@Base+0xfa74>  // b.pmore
   16534:	strb	w10, [x0, x9]
   16538:	add	x9, x9, #0x1
   1653c:	cmp	x8, x9
   16540:	b.ne	16520 <PyInit__decimal@@Base+0xfa0c>  // b.any
   16544:	add	x0, x0, x9
   16548:	b	1658c <PyInit__decimal@@Base+0xfa78>
   1654c:	cmp	w9, #0xf0
   16550:	b.ne	16564 <PyInit__decimal@@Base+0xfa50>  // b.any
   16554:	mov	w8, #0x4                   	// #4
   16558:	mov	w10, #0xbf                  	// #191
   1655c:	mov	w11, #0x90                  	// #144
   16560:	b	164f8 <PyInit__decimal@@Base+0xf9e4>
   16564:	cmp	w9, #0xf4
   16568:	b.cs	16574 <PyInit__decimal@@Base+0xfa60>  // b.hs, b.nlast
   1656c:	mov	w8, #0x4                   	// #4
   16570:	b	164f0 <PyInit__decimal@@Base+0xf9dc>
   16574:	cmp	w9, #0xf4
   16578:	b.ne	16588 <PyInit__decimal@@Base+0xfa74>  // b.any
   1657c:	mov	w8, #0x4                   	// #4
   16580:	mov	w10, #0x8f                  	// #143
   16584:	b	164f4 <PyInit__decimal@@Base+0xf9e0>
   16588:	mov	w8, #0xffffffff            	// #-1
   1658c:	strb	wzr, [x0]
   16590:	mov	w0, w8
   16594:	ret
   16598:	stp	x29, x30, [sp, #-96]!
   1659c:	str	x28, [sp, #16]
   165a0:	stp	x26, x25, [sp, #32]
   165a4:	stp	x24, x23, [sp, #48]
   165a8:	stp	x22, x21, [sp, #64]
   165ac:	stp	x20, x19, [sp, #80]
   165b0:	mov	x29, sp
   165b4:	sub	sp, sp, #0x280
   165b8:	mov	w8, #0x30                  	// #48
   165bc:	mov	w9, #0x40                  	// #64
   165c0:	strb	w8, [sp, #80]
   165c4:	add	x8, sp, #0x80
   165c8:	stp	xzr, xzr, [sp, #88]
   165cc:	stp	xzr, x9, [sp, #104]
   165d0:	str	x8, [sp, #120]
   165d4:	ldr	x8, [x1]
   165d8:	mov	x25, #0xffffffffa763ffff    	// #-1486618625
   165dc:	movk	x25, #0xb6b3, lsl #32
   165e0:	movk	x25, #0xde0, lsl #48
   165e4:	mov	x19, x3
   165e8:	cmp	x8, x25
   165ec:	b.le	16604 <PyInit__decimal@@Base+0xfaf0>
   165f0:	ldr	w8, [x19]
   165f4:	mov	x0, xzr
   165f8:	orr	w8, w8, #0x100
   165fc:	str	w8, [x19]
   16600:	b	1692c <PyInit__decimal@@Base+0xfe18>
   16604:	ldrb	w26, [x1, #16]
   16608:	mov	x23, x2
   1660c:	mov	x20, x1
   16610:	mov	x21, x0
   16614:	bl	6820 <__ctype_b_loc@plt>
   16618:	ldr	x8, [x0]
   1661c:	ldrh	w8, [x8, x26, lsl #1]
   16620:	tbnz	w8, #8, 1662c <PyInit__decimal@@Base+0xfb18>
   16624:	mov	w22, wzr
   16628:	b	1663c <PyInit__decimal@@Base+0xfb28>
   1662c:	bl	65a0 <__ctype_tolower_loc@plt>
   16630:	ldr	x8, [x0]
   16634:	mov	w22, #0x1                   	// #1
   16638:	ldr	w26, [x8, x26, lsl #2]
   1663c:	ldrb	w8, [x20, #18]
   16640:	cmp	w8, #0x2b
   16644:	b.eq	16658 <PyInit__decimal@@Base+0xfb44>  // b.none
   16648:	cmp	w8, #0x20
   1664c:	b.ne	1665c <PyInit__decimal@@Base+0xfb48>  // b.any
   16650:	orr	w22, w22, #0x40
   16654:	b	1665c <PyInit__decimal@@Base+0xfb48>
   16658:	orr	w22, w22, #0x80
   1665c:	mov	x0, x21
   16660:	bl	183c8 <PyInit__decimal@@Base+0x118b4>
   16664:	cbz	w0, 16714 <PyInit__decimal@@Base+0xfc00>
   16668:	ldrb	w8, [x20, #17]
   1666c:	cmp	w8, #0x7a
   16670:	b.ne	16698 <PyInit__decimal@@Base+0xfb84>  // b.any
   16674:	ldp	q2, q0, [x20, #16]
   16678:	ldr	q1, [x20]
   1667c:	mov	w8, #0x20                  	// #32
   16680:	mov	w9, #0x3e                  	// #62
   16684:	mov	x20, sp
   16688:	stp	q2, q0, [sp, #16]
   1668c:	str	q1, [sp]
   16690:	sturh	w8, [sp, #19]
   16694:	strb	w9, [sp, #17]
   16698:	and	w8, w26, #0xff
   1669c:	orr	w9, w22, #0x20
   166a0:	cmp	w8, #0x25
   166a4:	csel	w22, w9, w22, eq  // eq = none
   166a8:	mov	w24, #0x1                   	// #1
   166ac:	add	x8, sp, #0x30
   166b0:	add	x0, x8, #0x18
   166b4:	mov	x1, x21
   166b8:	mov	w2, w22
   166bc:	mov	x3, x24
   166c0:	bl	15da0 <PyInit__decimal@@Base+0xf28c>
   166c4:	stp	x0, x0, [sp, #48]
   166c8:	tbnz	x0, #63, 1675c <PyInit__decimal@@Base+0xfc48>
   166cc:	ldr	x8, [x20, #24]
   166d0:	ldrb	w8, [x8]
   166d4:	cbz	w8, 166e8 <PyInit__decimal@@Base+0xfbd4>
   166d8:	mov	x22, x0
   166dc:	mov	x0, x21
   166e0:	bl	183c8 <PyInit__decimal@@Base+0x118b4>
   166e4:	cbz	w0, 16784 <PyInit__decimal@@Base+0xfc70>
   166e8:	ldr	x8, [x20]
   166ec:	cbz	x8, 16704 <PyInit__decimal@@Base+0xfbf0>
   166f0:	add	x0, sp, #0x30
   166f4:	mov	x1, x20
   166f8:	mov	x2, x19
   166fc:	bl	16ba8 <PyInit__decimal@@Base+0x10094>
   16700:	cbz	w0, 16920 <PyInit__decimal@@Base+0xfe0c>
   16704:	add	x0, sp, #0x50
   16708:	bl	18558 <PyInit__decimal@@Base+0x11a44>
   1670c:	ldr	x0, [sp, #72]
   16710:	b	1692c <PyInit__decimal@@Base+0xfe18>
   16714:	and	w8, w26, #0xff
   16718:	cmp	w8, #0x65
   1671c:	str	wzr, [sp]
   16720:	b.gt	1676c <PyInit__decimal@@Base+0xfc58>
   16724:	cmp	w8, #0x25
   16728:	b.ne	167b0 <PyInit__decimal@@Base+0xfc9c>  // b.any
   1672c:	add	x0, sp, #0x50
   16730:	mov	x1, x21
   16734:	mov	x2, x19
   16738:	orr	w22, w22, #0x20
   1673c:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   16740:	cbz	w0, 1684c <PyInit__decimal@@Base+0xfd38>
   16744:	ldr	x8, [sp, #88]
   16748:	add	x21, sp, #0x50
   1674c:	mov	w26, #0x66                  	// #102
   16750:	add	x8, x8, #0x2
   16754:	str	x8, [sp, #88]
   16758:	b	16774 <PyInit__decimal@@Base+0xfc60>
   1675c:	ldr	w8, [x19]
   16760:	orr	w8, w8, #0x200
   16764:	str	w8, [x19]
   16768:	b	16920 <PyInit__decimal@@Base+0xfe0c>
   1676c:	cmp	w8, #0x66
   16770:	b.ne	167c8 <PyInit__decimal@@Base+0xfcb4>  // b.any
   16774:	orr	w22, w22, #0x10
   16778:	ldr	x8, [x20, #8]
   1677c:	tbz	x8, #63, 167dc <PyInit__decimal@@Base+0xfcc8>
   16780:	b	1682c <PyInit__decimal@@Base+0xfd18>
   16784:	add	x8, x25, #0x24
   16788:	cmp	x22, x8
   1678c:	b.le	16834 <PyInit__decimal@@Base+0xfd20>
   16790:	ldr	w8, [x19]
   16794:	adrp	x9, 42000 <PyInit__decimal@@Base+0x3b4ec>
   16798:	orr	w8, w8, #0x100
   1679c:	str	w8, [x19]
   167a0:	ldr	x8, [x9, #1376]
   167a4:	ldr	x0, [sp, #72]
   167a8:	blr	x8
   167ac:	b	16920 <PyInit__decimal@@Base+0xfe0c>
   167b0:	cmp	w8, #0x65
   167b4:	b.ne	1694c <PyInit__decimal@@Base+0xfe38>  // b.any
   167b8:	orr	w22, w22, #0x8
   167bc:	ldr	x8, [x20, #8]
   167c0:	tbz	x8, #63, 167dc <PyInit__decimal@@Base+0xfcc8>
   167c4:	b	1682c <PyInit__decimal@@Base+0xfd18>
   167c8:	cmp	w8, #0x67
   167cc:	b.ne	1694c <PyInit__decimal@@Base+0xfe38>  // b.any
   167d0:	orr	w22, w22, #0x2
   167d4:	ldr	x8, [x20, #8]
   167d8:	tbnz	x8, #63, 1682c <PyInit__decimal@@Base+0xfd18>
   167dc:	cmp	x8, x25
   167e0:	b.le	167fc <PyInit__decimal@@Base+0xfce8>
   167e4:	ldr	w9, [x19]
   167e8:	mov	w8, #0x3                   	// #3
   167ec:	mov	w24, #0x1                   	// #1
   167f0:	orr	w9, w9, #0x100
   167f4:	str	w9, [x19]
   167f8:	b	16910 <PyInit__decimal@@Base+0xfdfc>
   167fc:	and	w9, w26, #0xff
   16800:	cmp	w9, #0x65
   16804:	b.eq	16874 <PyInit__decimal@@Base+0xfd60>  // b.none
   16808:	cmp	w9, #0x66
   1680c:	b.eq	16858 <PyInit__decimal@@Base+0xfd44>  // b.none
   16810:	cmp	w9, #0x67
   16814:	b.ne	1682c <PyInit__decimal@@Base+0xfd18>  // b.any
   16818:	ldr	x9, [x21, #16]
   1681c:	cmp	x8, #0x0
   16820:	csinc	x2, x8, xzr, ne  // ne = any
   16824:	cmp	x9, x2
   16828:	b.gt	16894 <PyInit__decimal@@Base+0xfd80>
   1682c:	mov	w24, #0x1                   	// #1
   16830:	b	168b0 <PyInit__decimal@@Base+0xfd9c>
   16834:	add	x0, sp, #0x30
   16838:	mov	x1, x20
   1683c:	mov	x2, x19
   16840:	bl	16a24 <PyInit__decimal@@Base+0xff10>
   16844:	cbnz	w0, 166e8 <PyInit__decimal@@Base+0xfbd4>
   16848:	b	16920 <PyInit__decimal@@Base+0xfe0c>
   1684c:	mov	w24, #0x1                   	// #1
   16850:	mov	w8, #0x1                   	// #1
   16854:	b	16910 <PyInit__decimal@@Base+0xfdfc>
   16858:	neg	x2, x8
   1685c:	add	x0, sp, #0x50
   16860:	mov	x4, sp
   16864:	mov	x1, x21
   16868:	mov	x3, x23
   1686c:	bl	21004 <PyInit__decimal@@Base+0x1a4f0>
   16870:	b	168a8 <PyInit__decimal@@Base+0xfd94>
   16874:	mov	x0, x21
   16878:	bl	183d4 <PyInit__decimal@@Base+0x118c0>
   1687c:	ldr	x8, [x20, #8]
   16880:	cbz	w0, 16890 <PyInit__decimal@@Base+0xfd7c>
   16884:	mov	w9, #0x1                   	// #1
   16888:	sub	x24, x9, x8
   1688c:	b	168b0 <PyInit__decimal@@Base+0xfd9c>
   16890:	add	x2, x8, #0x1
   16894:	add	x0, sp, #0x50
   16898:	mov	x4, sp
   1689c:	mov	x1, x21
   168a0:	mov	x3, x23
   168a4:	bl	16950 <PyInit__decimal@@Base+0xfe3c>
   168a8:	mov	w24, #0x1                   	// #1
   168ac:	add	x21, sp, #0x50
   168b0:	and	w8, w26, #0xff
   168b4:	cmp	w8, #0x66
   168b8:	b.ne	168f0 <PyInit__decimal@@Base+0xfddc>  // b.any
   168bc:	mov	x0, x21
   168c0:	bl	183d4 <PyInit__decimal@@Base+0x118c0>
   168c4:	cbz	w0, 168f0 <PyInit__decimal@@Base+0xfddc>
   168c8:	ldr	x8, [x21, #8]
   168cc:	cmp	x8, #0x1
   168d0:	b.lt	168f0 <PyInit__decimal@@Base+0xfddc>  // b.tstop
   168d4:	add	x0, sp, #0x50
   168d8:	mov	x4, sp
   168dc:	mov	x1, x21
   168e0:	mov	x2, xzr
   168e4:	mov	x3, x23
   168e8:	bl	21004 <PyInit__decimal@@Base+0x1a4f0>
   168ec:	add	x21, sp, #0x50
   168f0:	ldr	w8, [sp]
   168f4:	mov	w9, #0x3be                 	// #958
   168f8:	ands	w8, w8, w9
   168fc:	b.eq	16910 <PyInit__decimal@@Base+0xfdfc>  // b.none
   16900:	ldr	w9, [x19]
   16904:	orr	w8, w9, w8
   16908:	str	w8, [x19]
   1690c:	mov	w8, #0x3                   	// #3
   16910:	cmp	w8, #0x3
   16914:	b.eq	16920 <PyInit__decimal@@Base+0xfe0c>  // b.none
   16918:	cbz	w8, 166ac <PyInit__decimal@@Base+0xfb98>
   1691c:	b	16928 <PyInit__decimal@@Base+0xfe14>
   16920:	add	x0, sp, #0x50
   16924:	bl	18558 <PyInit__decimal@@Base+0x11a44>
   16928:	mov	x0, xzr
   1692c:	add	sp, sp, #0x280
   16930:	ldp	x20, x19, [sp, #80]
   16934:	ldp	x22, x21, [sp, #64]
   16938:	ldp	x24, x23, [sp, #48]
   1693c:	ldp	x26, x25, [sp, #32]
   16940:	ldr	x28, [sp, #16]
   16944:	ldp	x29, x30, [sp], #96
   16948:	ret
   1694c:	bl	6760 <abort@plt>
   16950:	stp	x29, x30, [sp, #-80]!
   16954:	str	x25, [sp, #16]
   16958:	stp	x24, x23, [sp, #32]
   1695c:	stp	x22, x21, [sp, #48]
   16960:	stp	x20, x19, [sp, #64]
   16964:	mov	x29, sp
   16968:	mov	x19, x4
   1696c:	cmp	x2, #0x0
   16970:	mov	x20, x0
   16974:	b.le	169b4 <PyInit__decimal@@Base+0xfea0>
   16978:	ldp	x24, x25, [x1, #8]
   1697c:	mov	x0, x1
   16980:	mov	x21, x3
   16984:	mov	x22, x2
   16988:	mov	x23, x1
   1698c:	bl	183c8 <PyInit__decimal@@Base+0x118b4>
   16990:	cbnz	w0, 169a0 <PyInit__decimal@@Base+0xfe8c>
   16994:	mov	x0, x23
   16998:	bl	183d4 <PyInit__decimal@@Base+0x118c0>
   1699c:	cbz	w0, 169dc <PyInit__decimal@@Base+0xfec8>
   169a0:	mov	x0, x20
   169a4:	mov	x1, x23
   169a8:	mov	x2, x19
   169ac:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   169b0:	b	169c4 <PyInit__decimal@@Base+0xfeb0>
   169b4:	mov	w1, #0x100                 	// #256
   169b8:	mov	x0, x20
   169bc:	mov	x2, x19
   169c0:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   169c4:	ldp	x20, x19, [sp, #64]
   169c8:	ldp	x22, x21, [sp, #48]
   169cc:	ldp	x24, x23, [sp, #32]
   169d0:	ldr	x25, [sp, #16]
   169d4:	ldp	x29, x30, [sp], #80
   169d8:	ret
   169dc:	sub	x8, x24, x22
   169e0:	add	x24, x8, x25
   169e4:	mov	x0, x20
   169e8:	mov	x1, x23
   169ec:	mov	x2, x24
   169f0:	mov	x3, x21
   169f4:	mov	x4, x19
   169f8:	bl	21b78 <PyInit__decimal@@Base+0x1b064>
   169fc:	ldr	x8, [x20, #16]
   16a00:	cmp	x8, x22
   16a04:	b.le	169c4 <PyInit__decimal@@Base+0xfeb0>
   16a08:	add	x2, x24, #0x1
   16a0c:	mov	x0, x20
   16a10:	mov	x1, x20
   16a14:	mov	x3, x21
   16a18:	mov	x4, x19
   16a1c:	bl	21b78 <PyInit__decimal@@Base+0x1b064>
   16a20:	b	169c4 <PyInit__decimal@@Base+0xfeb0>
   16a24:	stp	x29, x30, [sp, #-96]!
   16a28:	stp	x28, x27, [sp, #16]
   16a2c:	stp	x26, x25, [sp, #32]
   16a30:	stp	x24, x23, [sp, #48]
   16a34:	stp	x22, x21, [sp, #64]
   16a38:	stp	x20, x19, [sp, #80]
   16a3c:	mov	x29, sp
   16a40:	ldr	x19, [x0, #24]
   16a44:	mov	x21, x2
   16a48:	mov	x20, x1
   16a4c:	mov	x22, x0
   16a50:	ldrb	w8, [x19]
   16a54:	mov	x23, xzr
   16a58:	cmp	w8, #0x2d
   16a5c:	b.hi	16ba0 <PyInit__decimal@@Base+0x1008c>  // b.pmore
   16a60:	mov	w9, #0x1                   	// #1
   16a64:	lsl	x8, x9, x8
   16a68:	mov	x9, #0x280100000000        	// #43984760078336
   16a6c:	tst	x8, x9
   16a70:	mov	x24, x19
   16a74:	b.eq	16a80 <PyInit__decimal@@Base+0xff6c>  // b.none
   16a78:	add	x24, x19, #0x1
   16a7c:	mov	x23, x19
   16a80:	bl	6820 <__ctype_b_loc@plt>
   16a84:	ldr	x8, [x0]
   16a88:	add	x25, x24, #0x1
   16a8c:	ldrb	w9, [x25], #1
   16a90:	ldrh	w10, [x8, x9, lsl #1]
   16a94:	tbnz	w10, #11, 16a8c <PyInit__decimal@@Base+0xff78>
   16a98:	cmp	w9, #0x2e
   16a9c:	sub	x8, x25, #0x1
   16aa0:	b.ne	16aac <PyInit__decimal@@Base+0xff98>  // b.any
   16aa4:	ldr	x26, [x20, #24]
   16aa8:	b	16ab4 <PyInit__decimal@@Base+0xffa0>
   16aac:	mov	x26, xzr
   16ab0:	mov	x25, x8
   16ab4:	ldr	x9, [x22]
   16ab8:	ldr	x10, [x22, #24]
   16abc:	cbz	x26, 16b44 <PyInit__decimal@@Base+0x10030>
   16ac0:	sub	x27, x8, x24
   16ac4:	sub	x8, x10, x25
   16ac8:	add	x28, x8, x9
   16acc:	mov	x0, x22
   16ad0:	mov	x1, x23
   16ad4:	mov	x2, x24
   16ad8:	mov	x3, x27
   16adc:	mov	x4, x26
   16ae0:	mov	x5, x25
   16ae4:	mov	x6, x28
   16ae8:	mov	x7, x20
   16aec:	str	xzr, [x22, #24]
   16af0:	bl	177c8 <PyInit__decimal@@Base+0x10cb4>
   16af4:	ldr	x8, [x22]
   16af8:	mov	w1, #0x1                   	// #1
   16afc:	add	x0, x8, #0x1
   16b00:	bl	17adc <PyInit__decimal@@Base+0x10fc8>
   16b04:	str	x0, [x22, #24]
   16b08:	cbz	x0, 16b64 <PyInit__decimal@@Base+0x10050>
   16b0c:	mov	x0, x22
   16b10:	mov	x1, x23
   16b14:	mov	x2, x24
   16b18:	mov	x3, x27
   16b1c:	mov	x4, x26
   16b20:	mov	x5, x25
   16b24:	mov	x6, x28
   16b28:	mov	x7, x20
   16b2c:	bl	177c8 <PyInit__decimal@@Base+0x10cb4>
   16b30:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   16b34:	ldr	x8, [x8, #1376]
   16b38:	mov	x0, x19
   16b3c:	blr	x8
   16b40:	b	16b5c <PyInit__decimal@@Base+0x10048>
   16b44:	ldr	x11, [x20, #32]
   16b48:	ldrb	w11, [x11]
   16b4c:	cbz	w11, 16b5c <PyInit__decimal@@Base+0x10048>
   16b50:	ldr	x11, [x20, #40]
   16b54:	ldrb	w11, [x11]
   16b58:	cbnz	w11, 16ac0 <PyInit__decimal@@Base+0xffac>
   16b5c:	mov	w0, #0x1                   	// #1
   16b60:	b	16b84 <PyInit__decimal@@Base+0x10070>
   16b64:	ldr	w8, [x21]
   16b68:	mov	x0, x19
   16b6c:	orr	w8, w8, #0x200
   16b70:	str	w8, [x21]
   16b74:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   16b78:	ldr	x8, [x8, #1376]
   16b7c:	blr	x8
   16b80:	mov	w0, wzr
   16b84:	ldp	x20, x19, [sp, #80]
   16b88:	ldp	x22, x21, [sp, #64]
   16b8c:	ldp	x24, x23, [sp, #48]
   16b90:	ldp	x26, x25, [sp, #32]
   16b94:	ldp	x28, x27, [sp, #16]
   16b98:	ldp	x29, x30, [sp], #96
   16b9c:	ret
   16ba0:	mov	x24, x19
   16ba4:	b	16a80 <PyInit__decimal@@Base+0xff6c>
   16ba8:	sub	sp, sp, #0x70
   16bac:	stp	x29, x30, [sp, #16]
   16bb0:	stp	x28, x27, [sp, #32]
   16bb4:	stp	x26, x25, [sp, #48]
   16bb8:	stp	x24, x23, [sp, #64]
   16bbc:	stp	x22, x21, [sp, #80]
   16bc0:	stp	x20, x19, [sp, #96]
   16bc4:	add	x29, sp, #0x10
   16bc8:	ldr	x8, [x0, #8]
   16bcc:	ldr	x9, [x1]
   16bd0:	subs	x24, x9, x8
   16bd4:	b.le	16d88 <PyInit__decimal@@Base+0x10274>
   16bd8:	ldrb	w26, [x1, #17]
   16bdc:	mov	x19, x0
   16be0:	add	x0, x1, #0x13
   16be4:	mov	x21, x1
   16be8:	mov	x23, x2
   16bec:	sturb	wzr, [x29, #-4]
   16bf0:	bl	6480 <strlen@plt>
   16bf4:	ldr	x8, [x19]
   16bf8:	mov	x20, x0
   16bfc:	ldr	x0, [x19, #24]
   16c00:	mul	x25, x20, x24
   16c04:	add	x8, x25, x8
   16c08:	add	x1, x8, #0x1
   16c0c:	sub	x3, x29, #0x4
   16c10:	mov	w2, #0x1                   	// #1
   16c14:	bl	17b6c <PyInit__decimal@@Base+0x11058>
   16c18:	str	x0, [x19, #24]
   16c1c:	ldurb	w8, [x29, #-4]
   16c20:	mov	x22, x0
   16c24:	cbz	w8, 16c4c <PyInit__decimal@@Base+0x10138>
   16c28:	ldr	w8, [x23]
   16c2c:	mov	x0, x22
   16c30:	orr	w8, w8, #0x200
   16c34:	str	w8, [x23]
   16c38:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   16c3c:	ldr	x8, [x8, #1376]
   16c40:	blr	x8
   16c44:	mov	w0, wzr
   16c48:	b	16d8c <PyInit__decimal@@Base+0x10278>
   16c4c:	cmp	w26, #0x7a
   16c50:	mov	w8, #0x3d                  	// #61
   16c54:	csel	w8, w8, w26, eq  // eq = none
   16c58:	sub	w9, w8, #0x3d
   16c5c:	cmp	w9, #0x2
   16c60:	b.cs	16c70 <PyInit__decimal@@Base+0x1015c>  // b.hs, b.nlast
   16c64:	mov	x26, xzr
   16c68:	mov	x27, x24
   16c6c:	b	16c94 <PyInit__decimal@@Base+0x10180>
   16c70:	cmp	w8, #0x3c
   16c74:	b.ne	16c84 <PyInit__decimal@@Base+0x10170>  // b.any
   16c78:	mov	x27, xzr
   16c7c:	mov	x26, x24
   16c80:	b	16c94 <PyInit__decimal@@Base+0x10180>
   16c84:	cmp	x24, #0x0
   16c88:	cinc	x9, x24, lt  // lt = tstop
   16c8c:	asr	x27, x9, #1
   16c90:	sub	x26, x24, x27
   16c94:	ldr	x23, [x19]
   16c98:	cmp	w8, #0x3d
   16c9c:	b.ne	16cc8 <PyInit__decimal@@Base+0x101b4>  // b.any
   16ca0:	ldrb	w8, [x22]
   16ca4:	cmp	w8, #0x2d
   16ca8:	b.hi	16cc8 <PyInit__decimal@@Base+0x101b4>  // b.pmore
   16cac:	mov	w9, #0x1                   	// #1
   16cb0:	lsl	x8, x9, x8
   16cb4:	mov	x9, #0x280100000000        	// #43984760078336
   16cb8:	tst	x8, x9
   16cbc:	b.eq	16cc8 <PyInit__decimal@@Base+0x101b4>  // b.none
   16cc0:	add	x22, x22, #0x1
   16cc4:	sub	x23, x23, #0x1
   16cc8:	mul	x28, x27, x20
   16ccc:	add	x0, x22, x28
   16cd0:	mov	x1, x22
   16cd4:	mov	x2, x23
   16cd8:	bl	6440 <memmove@plt>
   16cdc:	cbz	x27, 16d24 <PyInit__decimal@@Base+0x10210>
   16ce0:	mov	x8, xzr
   16ce4:	add	x9, x21, #0x13
   16ce8:	mov	x10, x22
   16cec:	b	16d00 <PyInit__decimal@@Base+0x101ec>
   16cf0:	add	x8, x8, #0x1
   16cf4:	cmp	x8, x27
   16cf8:	add	x10, x10, x20
   16cfc:	b.eq	16d24 <PyInit__decimal@@Base+0x10210>  // b.none
   16d00:	cbz	x20, 16cf0 <PyInit__decimal@@Base+0x101dc>
   16d04:	mov	x11, x10
   16d08:	mov	x12, x9
   16d0c:	mov	x13, x20
   16d10:	ldrb	w14, [x12], #1
   16d14:	subs	x13, x13, #0x1
   16d18:	strb	w14, [x11], #1
   16d1c:	b.ne	16d10 <PyInit__decimal@@Base+0x101fc>  // b.any
   16d20:	b	16cf0 <PyInit__decimal@@Base+0x101dc>
   16d24:	cbz	x26, 16d70 <PyInit__decimal@@Base+0x1025c>
   16d28:	add	x9, x23, x28
   16d2c:	mov	x8, xzr
   16d30:	add	x9, x22, x9
   16d34:	add	x10, x21, #0x13
   16d38:	b	16d4c <PyInit__decimal@@Base+0x10238>
   16d3c:	add	x8, x8, #0x1
   16d40:	cmp	x8, x26
   16d44:	add	x9, x9, x20
   16d48:	b.eq	16d70 <PyInit__decimal@@Base+0x1025c>  // b.none
   16d4c:	cbz	x20, 16d3c <PyInit__decimal@@Base+0x10228>
   16d50:	mov	x11, x9
   16d54:	mov	x12, x10
   16d58:	mov	x13, x20
   16d5c:	ldrb	w14, [x12], #1
   16d60:	subs	x13, x13, #0x1
   16d64:	strb	w14, [x11], #1
   16d68:	b.ne	16d5c <PyInit__decimal@@Base+0x10248>  // b.any
   16d6c:	b	16d3c <PyInit__decimal@@Base+0x10228>
   16d70:	ldp	x8, x9, [x19]
   16d74:	ldr	x10, [x19, #24]
   16d78:	add	x8, x8, x25
   16d7c:	add	x9, x9, x24
   16d80:	stp	x8, x9, [x19]
   16d84:	strb	wzr, [x10, x8]
   16d88:	mov	w0, #0x1                   	// #1
   16d8c:	ldp	x20, x19, [sp, #96]
   16d90:	ldp	x22, x21, [sp, #80]
   16d94:	ldp	x24, x23, [sp, #64]
   16d98:	ldp	x26, x25, [sp, #48]
   16d9c:	ldp	x28, x27, [sp, #32]
   16da0:	ldp	x29, x30, [sp, #16]
   16da4:	add	sp, sp, #0x70
   16da8:	ret
   16dac:	sub	sp, sp, #0x60
   16db0:	stp	x29, x30, [sp, #48]
   16db4:	str	x21, [sp, #64]
   16db8:	stp	x20, x19, [sp, #80]
   16dbc:	add	x29, sp, #0x30
   16dc0:	mov	x20, x2
   16dc4:	mov	x21, x0
   16dc8:	mov	x0, sp
   16dcc:	mov	w2, #0x1                   	// #1
   16dd0:	mov	x19, x3
   16dd4:	bl	16178 <PyInit__decimal@@Base+0xf664>
   16dd8:	cbz	w0, 16df4 <PyInit__decimal@@Base+0x102e0>
   16ddc:	mov	x1, sp
   16de0:	mov	x0, x21
   16de4:	mov	x2, x20
   16de8:	mov	x3, x19
   16dec:	bl	16598 <PyInit__decimal@@Base+0xfa84>
   16df0:	b	16e04 <PyInit__decimal@@Base+0x102f0>
   16df4:	ldr	w8, [x19]
   16df8:	mov	x0, xzr
   16dfc:	orr	w8, w8, #0x100
   16e00:	str	w8, [x19]
   16e04:	ldp	x20, x19, [sp, #80]
   16e08:	ldr	x21, [sp, #64]
   16e0c:	ldp	x29, x30, [sp, #48]
   16e10:	add	sp, sp, #0x60
   16e14:	ret
   16e18:	stp	x29, x30, [sp, #-80]!
   16e1c:	str	x25, [sp, #16]
   16e20:	stp	x24, x23, [sp, #32]
   16e24:	stp	x22, x21, [sp, #48]
   16e28:	stp	x20, x19, [sp, #64]
   16e2c:	mov	x29, sp
   16e30:	adrp	x25, 3f000 <PyInit__decimal@@Base+0x384ec>
   16e34:	adrp	x23, 2e000 <PyInit__decimal@@Base+0x274ec>
   16e38:	mov	w21, w2
   16e3c:	mov	w22, w1
   16e40:	mov	x19, x0
   16e44:	mov	x24, xzr
   16e48:	add	x25, x25, #0xb68
   16e4c:	add	x23, x23, #0x292
   16e50:	mov	x20, x0
   16e54:	strb	wzr, [x0]
   16e58:	b	16e68 <PyInit__decimal@@Base+0x10354>
   16e5c:	add	x24, x24, #0x1
   16e60:	cmp	x24, #0xf
   16e64:	b.eq	16ea0 <PyInit__decimal@@Base+0x1038c>  // b.none
   16e68:	lsr	w8, w21, w24
   16e6c:	tbz	w8, #0, 16e5c <PyInit__decimal@@Base+0x10348>
   16e70:	ldr	x3, [x25, x24, lsl #3]
   16e74:	sxtw	x1, w22
   16e78:	mov	x0, x20
   16e7c:	mov	x2, x23
   16e80:	bl	65b0 <snprintf@plt>
   16e84:	mov	w8, w0
   16e88:	mov	w0, #0xffffffff            	// #-1
   16e8c:	tbnz	w8, #31, 16eb0 <PyInit__decimal@@Base+0x1039c>
   16e90:	subs	w22, w22, w8
   16e94:	b.le	16eb0 <PyInit__decimal@@Base+0x1039c>
   16e98:	add	x20, x20, w8, sxtw
   16e9c:	b	16e5c <PyInit__decimal@@Base+0x10348>
   16ea0:	cmp	x20, x19
   16ea4:	b.eq	16eac <PyInit__decimal@@Base+0x10398>  // b.none
   16ea8:	strb	wzr, [x20, #-1]!
   16eac:	sub	w0, w20, w19
   16eb0:	ldp	x20, x19, [sp, #64]
   16eb4:	ldp	x22, x21, [sp, #48]
   16eb8:	ldp	x24, x23, [sp, #32]
   16ebc:	ldr	x25, [sp, #16]
   16ec0:	ldp	x29, x30, [sp], #80
   16ec4:	ret
   16ec8:	stp	x29, x30, [sp, #-80]!
   16ecc:	stp	x26, x25, [sp, #16]
   16ed0:	stp	x24, x23, [sp, #32]
   16ed4:	stp	x22, x21, [sp, #48]
   16ed8:	stp	x20, x19, [sp, #64]
   16edc:	mov	x29, sp
   16ee0:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
   16ee4:	mov	w9, #0x5b                  	// #91
   16ee8:	mov	x24, x0
   16eec:	add	x8, x8, #0xb68
   16ef0:	cmp	x3, #0x0
   16ef4:	strh	w9, [x24], #1
   16ef8:	adrp	x22, 2e000 <PyInit__decimal@@Base+0x274ec>
   16efc:	mov	w20, w2
   16f00:	mov	x19, x0
   16f04:	mov	x23, xzr
   16f08:	csel	x25, x8, x3, eq  // eq = none
   16f0c:	sub	w26, w1, #0x1
   16f10:	add	x22, x22, #0x296
   16f14:	mov	x21, x24
   16f18:	b	16f2c <PyInit__decimal@@Base+0x10418>
   16f1c:	add	x21, x21, w8, sxtw
   16f20:	add	x23, x23, #0x1
   16f24:	cmp	x23, #0xf
   16f28:	b.eq	16f60 <PyInit__decimal@@Base+0x1044c>  // b.none
   16f2c:	lsr	w8, w20, w23
   16f30:	tbz	w8, #0, 16f20 <PyInit__decimal@@Base+0x1040c>
   16f34:	ldr	x3, [x25, x23, lsl #3]
   16f38:	sxtw	x1, w26
   16f3c:	mov	x0, x21
   16f40:	mov	x2, x22
   16f44:	bl	65b0 <snprintf@plt>
   16f48:	mov	w8, w0
   16f4c:	mov	w0, #0xffffffff            	// #-1
   16f50:	tbnz	w8, #31, 16f7c <PyInit__decimal@@Base+0x10468>
   16f54:	subs	w26, w26, w8
   16f58:	b.gt	16f1c <PyInit__decimal@@Base+0x10408>
   16f5c:	b	16f7c <PyInit__decimal@@Base+0x10468>
   16f60:	sub	x8, x21, #0x2
   16f64:	cmp	x21, x24
   16f68:	mov	w9, #0x5d                  	// #93
   16f6c:	csel	x8, x21, x8, eq  // eq = none
   16f70:	strh	w9, [x8]
   16f74:	sub	w8, w8, w19
   16f78:	add	w0, w8, #0x1
   16f7c:	ldp	x20, x19, [sp, #64]
   16f80:	ldp	x22, x21, [sp, #48]
   16f84:	ldp	x24, x23, [sp, #32]
   16f88:	ldp	x26, x25, [sp, #16]
   16f8c:	ldp	x29, x30, [sp], #80
   16f90:	ret
   16f94:	sub	sp, sp, #0x70
   16f98:	stp	x29, x30, [sp, #16]
   16f9c:	stp	x28, x27, [sp, #32]
   16fa0:	stp	x26, x25, [sp, #48]
   16fa4:	stp	x24, x23, [sp, #64]
   16fa8:	stp	x22, x21, [sp, #80]
   16fac:	stp	x20, x19, [sp, #96]
   16fb0:	add	x29, sp, #0x10
   16fb4:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
   16fb8:	mov	w9, #0x5b                  	// #91
   16fbc:	mov	x25, x0
   16fc0:	add	x8, x8, #0xbe0
   16fc4:	cmp	x3, #0x0
   16fc8:	strh	w9, [x25], #1
   16fcc:	adrp	x22, 2e000 <PyInit__decimal@@Base+0x274ec>
   16fd0:	mov	w20, w2
   16fd4:	mov	x23, xzr
   16fd8:	mov	w24, wzr
   16fdc:	sub	w19, w1, #0x1
   16fe0:	mov	w26, #0x1                   	// #1
   16fe4:	csel	x27, x8, x3, eq  // eq = none
   16fe8:	mov	w28, #0x3ba                 	// #954
   16fec:	add	x22, x22, #0x296
   16ff0:	mov	x21, x25
   16ff4:	str	x0, [sp, #8]
   16ff8:	lsl	w8, w26, w23
   16ffc:	ands	w8, w8, w20
   17000:	b.eq	1704c <PyInit__decimal@@Base+0x10538>  // b.none
   17004:	tst	w8, w28
   17008:	b.eq	1701c <PyInit__decimal@@Base+0x10508>  // b.none
   1700c:	cbz	w24, 17018 <PyInit__decimal@@Base+0x10504>
   17010:	mov	w8, #0x4                   	// #4
   17014:	b	1704c <PyInit__decimal@@Base+0x10538>
   17018:	mov	w24, #0x1                   	// #1
   1701c:	ldr	x3, [x27, x23, lsl #3]
   17020:	sxtw	x1, w19
   17024:	mov	x0, x21
   17028:	mov	x2, x22
   1702c:	bl	65b0 <snprintf@plt>
   17030:	mov	w8, #0x1                   	// #1
   17034:	tbnz	w0, #31, 1704c <PyInit__decimal@@Base+0x10538>
   17038:	subs	w9, w19, w0
   1703c:	b.le	1704c <PyInit__decimal@@Base+0x10538>
   17040:	mov	w8, wzr
   17044:	add	x21, x21, w0, sxtw
   17048:	mov	w19, w9
   1704c:	orr	w8, w8, #0x4
   17050:	cmp	w8, #0x4
   17054:	b.ne	17088 <PyInit__decimal@@Base+0x10574>  // b.any
   17058:	add	x23, x23, #0x1
   1705c:	cmp	x23, #0xf
   17060:	b.ne	16ff8 <PyInit__decimal@@Base+0x104e4>  // b.any
   17064:	sub	x8, x21, #0x2
   17068:	cmp	x21, x25
   1706c:	mov	w9, #0x5d                  	// #93
   17070:	csel	x8, x21, x8, eq  // eq = none
   17074:	strh	w9, [x8]
   17078:	ldr	x9, [sp, #8]
   1707c:	sub	w8, w8, w9
   17080:	add	w0, w8, #0x1
   17084:	b	1708c <PyInit__decimal@@Base+0x10578>
   17088:	mov	w0, #0xffffffff            	// #-1
   1708c:	ldp	x20, x19, [sp, #96]
   17090:	ldp	x22, x21, [sp, #80]
   17094:	ldp	x24, x23, [sp, #64]
   17098:	ldp	x26, x25, [sp, #48]
   1709c:	ldp	x28, x27, [sp, #32]
   170a0:	ldp	x29, x30, [sp, #16]
   170a4:	add	sp, sp, #0x70
   170a8:	ret
   170ac:	stp	x29, x30, [sp, #-32]!
   170b0:	stp	x20, x19, [sp, #16]
   170b4:	mov	x29, sp
   170b8:	mov	x8, x1
   170bc:	mov	x19, x0
   170c0:	mov	w1, #0x1                   	// #1
   170c4:	mov	x0, x8
   170c8:	bl	15d64 <PyInit__decimal@@Base+0xf250>
   170cc:	cbz	x0, 170fc <PyInit__decimal@@Base+0x105e8>
   170d0:	mov	x20, x0
   170d4:	adrp	x1, 2e000 <PyInit__decimal@@Base+0x274ec>
   170d8:	add	x1, x1, #0x29b
   170dc:	mov	x0, x19
   170e0:	mov	x2, x20
   170e4:	bl	6a10 <fprintf@plt>
   170e8:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   170ec:	ldr	x8, [x8, #1376]
   170f0:	mov	x0, x20
   170f4:	blr	x8
   170f8:	b	17114 <PyInit__decimal@@Base+0x10600>
   170fc:	adrp	x0, 2e000 <PyInit__decimal@@Base+0x274ec>
   17100:	add	x0, x0, #0x29f
   17104:	mov	w1, #0x19                  	// #25
   17108:	mov	w2, #0x1                   	// #1
   1710c:	mov	x3, x19
   17110:	bl	68d0 <fwrite@plt>
   17114:	ldp	x20, x19, [sp, #16]
   17118:	ldp	x29, x30, [sp], #32
   1711c:	ret
   17120:	stp	x29, x30, [sp, #-32]!
   17124:	str	x19, [sp, #16]
   17128:	mov	x29, sp
   1712c:	mov	w1, #0x1                   	// #1
   17130:	bl	15d64 <PyInit__decimal@@Base+0xf250>
   17134:	cbz	x0, 1715c <PyInit__decimal@@Base+0x10648>
   17138:	mov	x19, x0
   1713c:	bl	67b0 <puts@plt>
   17140:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   17144:	ldr	x8, [x8, #1376]
   17148:	mov	x0, x19
   1714c:	blr	x8
   17150:	ldr	x19, [sp, #16]
   17154:	ldp	x29, x30, [sp], #32
   17158:	ret
   1715c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x384ec>
   17160:	ldr	x8, [x8, #3904]
   17164:	adrp	x0, 2e000 <PyInit__decimal@@Base+0x274ec>
   17168:	add	x0, x0, #0x29f
   1716c:	mov	w1, #0x19                  	// #25
   17170:	ldr	x3, [x8]
   17174:	mov	w2, #0x1                   	// #1
   17178:	bl	68d0 <fwrite@plt>
   1717c:	b	17150 <PyInit__decimal@@Base+0x1063c>
   17180:	stp	x29, x30, [sp, #-48]!
   17184:	str	x21, [sp, #16]
   17188:	stp	x20, x19, [sp, #32]
   1718c:	mov	x29, sp
   17190:	mov	x20, x0
   17194:	mov	x0, x1
   17198:	mov	x19, x1
   1719c:	bl	1804c <PyInit__decimal@@Base+0x11538>
   171a0:	mov	x21, x0
   171a4:	bl	17ed4 <PyInit__decimal@@Base+0x113c0>
   171a8:	mov	w2, w0
   171ac:	mov	x0, x20
   171b0:	mov	x1, x21
   171b4:	mov	x3, xzr
   171b8:	bl	172e4 <PyInit__decimal@@Base+0x107d0>
   171bc:	ldr	x8, [x19, #24]
   171c0:	subs	x20, x8, #0x2
   171c4:	b.mi	171e4 <PyInit__decimal@@Base+0x106d0>  // b.first
   171c8:	ldr	x8, [x19, #40]
   171cc:	mov	w2, #0x13                  	// #19
   171d0:	mov	x3, xzr
   171d4:	ldr	x1, [x8, x20, lsl #3]
   171d8:	bl	172e4 <PyInit__decimal@@Base+0x107d0>
   171dc:	subs	x20, x20, #0x1
   171e0:	b.pl	171c8 <PyInit__decimal@@Base+0x106b4>  // b.nfrst
   171e4:	ldp	x20, x19, [sp, #32]
   171e8:	ldr	x21, [sp, #16]
   171ec:	ldp	x29, x30, [sp], #48
   171f0:	ret
   171f4:	mov	x8, #0x5555555555555555    	// #6148914691236517205
   171f8:	movk	x8, #0x5556
   171fc:	smulh	x8, x0, x8
   17200:	add	x8, x8, x8, lsr #63
   17204:	add	x8, x8, x8, lsl #1
   17208:	sub	x8, x0, x8
   1720c:	add	x9, x8, #0x3
   17210:	cmp	x8, #0x0
   17214:	csel	x0, x9, x8, lt  // lt = tstop
   17218:	ret
   1721c:	stp	x29, x30, [sp, #-48]!
   17220:	stp	x22, x21, [sp, #16]
   17224:	stp	x20, x19, [sp, #32]
   17228:	mov	x29, sp
   1722c:	mov	x21, x0
   17230:	mov	x0, x2
   17234:	mov	x19, x2
   17238:	mov	x20, x1
   1723c:	bl	1804c <PyInit__decimal@@Base+0x11538>
   17240:	mov	x22, x0
   17244:	bl	17ed4 <PyInit__decimal@@Base+0x113c0>
   17248:	mov	w2, w0
   1724c:	mov	x0, x21
   17250:	mov	x1, x22
   17254:	mov	x3, x20
   17258:	bl	172e4 <PyInit__decimal@@Base+0x107d0>
   1725c:	ldr	x8, [x19, #24]
   17260:	subs	x21, x8, #0x2
   17264:	b.mi	17284 <PyInit__decimal@@Base+0x10770>  // b.first
   17268:	ldr	x8, [x19, #40]
   1726c:	mov	w2, #0x13                  	// #19
   17270:	mov	x3, x20
   17274:	ldr	x1, [x8, x21, lsl #3]
   17278:	bl	172e4 <PyInit__decimal@@Base+0x107d0>
   1727c:	subs	x21, x21, #0x1
   17280:	b.pl	17268 <PyInit__decimal@@Base+0x10754>  // b.nfrst
   17284:	ldp	x20, x19, [sp, #32]
   17288:	ldp	x22, x21, [sp, #16]
   1728c:	ldp	x29, x30, [sp], #48
   17290:	ret
   17294:	stp	x29, x30, [sp, #-32]!
   17298:	stp	x20, x19, [sp, #16]
   1729c:	mov	x29, sp
   172a0:	cmp	x1, #0x0
   172a4:	mov	w8, #0x2b                  	// #43
   172a8:	mov	w9, #0x2d                  	// #45
   172ac:	cneg	x20, x1, mi  // mi = first
   172b0:	mov	x19, x0
   172b4:	csel	w8, w9, w8, lt  // lt = tstop
   172b8:	mov	x0, x20
   172bc:	strb	w8, [x19], #1
   172c0:	bl	17ed4 <PyInit__decimal@@Base+0x113c0>
   172c4:	mov	w2, w0
   172c8:	mov	x0, x19
   172cc:	mov	x1, x20
   172d0:	mov	x3, xzr
   172d4:	bl	172e4 <PyInit__decimal@@Base+0x107d0>
   172d8:	ldp	x20, x19, [sp, #16]
   172dc:	ldp	x29, x30, [sp], #32
   172e0:	ret
   172e4:	sub	w8, w2, #0x2
   172e8:	cmp	w8, #0x12
   172ec:	b.hi	177a8 <PyInit__decimal@@Base+0x10c94>  // b.pmore
   172f0:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   172f4:	add	x9, x9, #0x252
   172f8:	adr	x10, 17308 <PyInit__decimal@@Base+0x107f4>
   172fc:	ldrh	w11, [x9, x8, lsl #1]
   17300:	add	x10, x10, x11, lsl #2
   17304:	br	x10
   17308:	cmp	x0, x3
   1730c:	b.ne	17318 <PyInit__decimal@@Base+0x10804>  // b.any
   17310:	mov	w8, #0x2e                  	// #46
   17314:	strb	w8, [x0], #1
   17318:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1731c:	movk	x8, #0x2304, lsl #32
   17320:	mov	x10, #0x76180000            	// #1981284352
   17324:	movk	x8, #0x8ac7, lsl #48
   17328:	movk	x10, #0xdcfb, lsl #32
   1732c:	mov	w9, #0x30                  	// #48
   17330:	movk	x10, #0x7538, lsl #48
   17334:	cmp	x1, x8
   17338:	add	x8, x8, #0x1
   1733c:	add	x10, x1, x10
   17340:	cinc	w9, w9, hi  // hi = pmore
   17344:	cmp	x1, x8
   17348:	strb	w9, [x0], #1
   1734c:	csel	x1, x1, x10, cc  // cc = lo, ul, last
   17350:	cmp	x0, x3
   17354:	b.ne	17360 <PyInit__decimal@@Base+0x1084c>  // b.any
   17358:	mov	w8, #0x2e                  	// #46
   1735c:	strb	w8, [x0], #1
   17360:	mov	x9, #0x490f                	// #18703
   17364:	movk	x9, #0x7747, lsl #16
   17368:	lsr	x8, x1, #18
   1736c:	movk	x9, #0x49c9, lsl #32
   17370:	mov	x10, #0xa7640000            	// #2808348672
   17374:	umulh	x8, x8, x9
   17378:	movk	x10, #0xb6b3, lsl #32
   1737c:	lsr	x8, x8, #24
   17380:	movk	x10, #0xde0, lsl #48
   17384:	add	w9, w8, #0x30
   17388:	strb	w9, [x0], #1
   1738c:	msub	x1, x8, x10, x1
   17390:	cmp	x0, x3
   17394:	b.ne	173a0 <PyInit__decimal@@Base+0x1088c>  // b.any
   17398:	mov	w8, #0x2e                  	// #46
   1739c:	strb	w8, [x0], #1
   173a0:	mov	x9, #0x1b53                	// #6995
   173a4:	movk	x9, #0xd519, lsl #16
   173a8:	lsr	x8, x1, #17
   173ac:	movk	x9, #0x5c3b, lsl #32
   173b0:	mov	x10, #0x5d8a0000            	// #1569325056
   173b4:	umulh	x8, x8, x9
   173b8:	movk	x10, #0x4578, lsl #32
   173bc:	lsr	x8, x8, #22
   173c0:	movk	x10, #0x163, lsl #48
   173c4:	add	w9, w8, #0x30
   173c8:	strb	w9, [x0], #1
   173cc:	msub	x1, x8, x10, x1
   173d0:	cmp	x0, x3
   173d4:	b.ne	173e0 <PyInit__decimal@@Base+0x108cc>  // b.any
   173d8:	mov	w8, #0x2e                  	// #46
   173dc:	strb	w8, [x0], #1
   173e0:	mov	x8, #0x7857                	// #30807
   173e4:	movk	x8, #0xb113, lsl #16
   173e8:	movk	x8, #0x652f, lsl #32
   173ec:	movk	x8, #0x39a5, lsl #48
   173f0:	mov	x9, #0x6fc10000            	// #1874919424
   173f4:	umulh	x8, x1, x8
   173f8:	movk	x9, #0x86f2, lsl #32
   173fc:	lsr	x8, x8, #51
   17400:	movk	x9, #0x23, lsl #48
   17404:	add	w10, w8, #0x30
   17408:	strb	w10, [x0], #1
   1740c:	msub	x1, x8, x9, x1
   17410:	cmp	x0, x3
   17414:	b.ne	17420 <PyInit__decimal@@Base+0x1090c>  // b.any
   17418:	mov	w8, #0x2e                  	// #46
   1741c:	strb	w8, [x0], #1
   17420:	mov	x9, #0xeac3                	// #60099
   17424:	movk	x9, #0xf3dc, lsl #16
   17428:	movk	x9, #0x4075, lsl #32
   1742c:	lsr	x8, x1, #15
   17430:	movk	x9, #0x2, lsl #48
   17434:	mov	x10, #0x3ffffffff8000       	// #1125899906809856
   17438:	umulh	x8, x8, x9
   1743c:	movk	x10, #0xa4c6, lsl #16
   17440:	lsr	x8, x8, #20
   17444:	movk	x10, #0x8d7e, lsl #32
   17448:	add	w9, w8, #0x30
   1744c:	strb	w9, [x0], #1
   17450:	msub	x1, x8, x10, x1
   17454:	cmp	x0, x3
   17458:	b.ne	17464 <PyInit__decimal@@Base+0x10950>  // b.any
   1745c:	mov	w8, #0x2e                  	// #46
   17460:	strb	w8, [x0], #1
   17464:	mov	x8, #0xcd81                	// #52609
   17468:	movk	x8, #0x5095, lsl #16
   1746c:	movk	x8, #0x4dc3, lsl #32
   17470:	movk	x8, #0xb42, lsl #48
   17474:	mov	x9, #0x4000                	// #16384
   17478:	umulh	x8, x1, x8
   1747c:	movk	x9, #0x107a, lsl #16
   17480:	lsr	x8, x8, #42
   17484:	movk	x9, #0x5af3, lsl #32
   17488:	add	w10, w8, #0x30
   1748c:	strb	w10, [x0], #1
   17490:	msub	x1, x8, x9, x1
   17494:	cmp	x0, x3
   17498:	b.ne	174a4 <PyInit__decimal@@Base+0x10990>  // b.any
   1749c:	mov	w8, #0x2e                  	// #46
   174a0:	strb	w8, [x0], #1
   174a4:	mov	x8, #0x385                 	// #901
   174a8:	movk	x8, #0x92ed, lsl #16
   174ac:	movk	x8, #0x84d0, lsl #32
   174b0:	movk	x8, #0x384b, lsl #48
   174b4:	mov	x9, #0xa000                	// #40960
   174b8:	umulh	x8, x1, x8
   174bc:	movk	x9, #0x4e72, lsl #16
   174c0:	lsr	x8, x8, #41
   174c4:	movk	x9, #0x918, lsl #32
   174c8:	add	w10, w8, #0x30
   174cc:	strb	w10, [x0], #1
   174d0:	msub	x1, x8, x9, x1
   174d4:	cmp	x0, x3
   174d8:	b.ne	174e4 <PyInit__decimal@@Base+0x109d0>  // b.any
   174dc:	mov	w8, #0x2e                  	// #46
   174e0:	strb	w8, [x0], #1
   174e4:	mov	x8, #0x2233                	// #8755
   174e8:	movk	x8, #0x5bd4, lsl #16
   174ec:	movk	x8, #0x3302, lsl #32
   174f0:	movk	x8, #0x232f, lsl #48
   174f4:	mov	x9, #0x1000                	// #4096
   174f8:	umulh	x8, x1, x8
   174fc:	movk	x9, #0xd4a5, lsl #16
   17500:	lsr	x8, x8, #37
   17504:	movk	x9, #0xe8, lsl #32
   17508:	add	w10, w8, #0x30
   1750c:	strb	w10, [x0], #1
   17510:	msub	x1, x8, x9, x1
   17514:	cmp	x0, x3
   17518:	b.ne	17524 <PyInit__decimal@@Base+0x10a10>  // b.any
   1751c:	mov	w8, #0x2e                  	// #46
   17520:	strb	w8, [x0], #1
   17524:	mov	x8, #0xaaff                	// #43775
   17528:	movk	x8, #0xcb24, lsl #16
   1752c:	movk	x8, #0xff0b, lsl #32
   17530:	movk	x8, #0xafeb, lsl #48
   17534:	mov	x9, #0xe800                	// #59392
   17538:	umulh	x8, x1, x8
   1753c:	movk	x9, #0x4876, lsl #16
   17540:	lsr	x8, x8, #36
   17544:	movk	x9, #0x17, lsl #32
   17548:	add	w10, w8, #0x30
   1754c:	strb	w10, [x0], #1
   17550:	msub	x1, x8, x9, x1
   17554:	cmp	x0, x3
   17558:	b.ne	17564 <PyInit__decimal@@Base+0x10a50>  // b.any
   1755c:	mov	w8, #0x2e                  	// #46
   17560:	strb	w8, [x0], #1
   17564:	mov	x8, #0xd5bf                	// #54719
   17568:	movk	x8, #0xbded, lsl #16
   1756c:	movk	x8, #0xfece, lsl #32
   17570:	movk	x8, #0xdbe6, lsl #48
   17574:	mov	x9, #0xe400                	// #58368
   17578:	umulh	x8, x1, x8
   1757c:	movk	x9, #0x540b, lsl #16
   17580:	lsr	x8, x8, #33
   17584:	movk	x9, #0x2, lsl #32
   17588:	add	w10, w8, #0x30
   1758c:	strb	w10, [x0], #1
   17590:	msub	x1, x8, x9, x1
   17594:	cmp	x0, x3
   17598:	b.ne	175a4 <PyInit__decimal@@Base+0x10a90>  // b.any
   1759c:	mov	w8, #0x2e                  	// #46
   175a0:	strb	w8, [x0], #1
   175a4:	mov	x9, #0x5a53                	// #23123
   175a8:	movk	x9, #0xa09b, lsl #16
   175ac:	movk	x9, #0xb82f, lsl #32
   175b0:	lsr	x8, x1, #9
   175b4:	movk	x9, #0x44, lsl #48
   175b8:	umulh	x8, x8, x9
   175bc:	mov	w10, #0xca00                	// #51712
   175c0:	lsr	x8, x8, #11
   175c4:	movk	w10, #0x3b9a, lsl #16
   175c8:	add	w9, w8, #0x30
   175cc:	strb	w9, [x0], #1
   175d0:	msub	x1, x8, x10, x1
   175d4:	cmp	x0, x3
   175d8:	b.ne	175e4 <PyInit__decimal@@Base+0x10ad0>  // b.any
   175dc:	mov	w8, #0x2e                  	// #46
   175e0:	strb	w8, [x0], #1
   175e4:	mov	x8, #0xcefd                	// #52989
   175e8:	movk	x8, #0x8461, lsl #16
   175ec:	movk	x8, #0x7711, lsl #32
   175f0:	movk	x8, #0xabcc, lsl #48
   175f4:	umulh	x8, x1, x8
   175f8:	mov	w9, #0xe100                	// #57600
   175fc:	lsr	x8, x8, #26
   17600:	movk	w9, #0x5f5, lsl #16
   17604:	add	w10, w8, #0x30
   17608:	strb	w10, [x0], #1
   1760c:	msub	x1, x8, x9, x1
   17610:	cmp	x0, x3
   17614:	b.ne	17620 <PyInit__decimal@@Base+0x10b0c>  // b.any
   17618:	mov	w8, #0x2e                  	// #46
   1761c:	strb	w8, [x0], #1
   17620:	mov	x8, #0x42bd                	// #17085
   17624:	movk	x8, #0xe57a, lsl #16
   17628:	movk	x8, #0x94d5, lsl #32
   1762c:	movk	x8, #0xd6bf, lsl #48
   17630:	umulh	x8, x1, x8
   17634:	mov	w9, #0x9680                	// #38528
   17638:	lsr	x8, x8, #23
   1763c:	movk	w9, #0x98, lsl #16
   17640:	add	w10, w8, #0x30
   17644:	strb	w10, [x0], #1
   17648:	msub	x1, x8, x9, x1
   1764c:	cmp	x0, x3
   17650:	b.ne	1765c <PyInit__decimal@@Base+0x10b48>  // b.any
   17654:	mov	w8, #0x2e                  	// #46
   17658:	strb	w8, [x0], #1
   1765c:	mov	x8, #0x34db                	// #13531
   17660:	movk	x8, #0xd7b6, lsl #16
   17664:	movk	x8, #0xde82, lsl #32
   17668:	movk	x8, #0x431b, lsl #48
   1766c:	umulh	x8, x1, x8
   17670:	mov	w9, #0x4240                	// #16960
   17674:	lsr	x8, x8, #18
   17678:	movk	w9, #0xf, lsl #16
   1767c:	add	w10, w8, #0x30
   17680:	strb	w10, [x0], #1
   17684:	msub	x1, x8, x9, x1
   17688:	cmp	x0, x3
   1768c:	b.ne	17698 <PyInit__decimal@@Base+0x10b84>  // b.any
   17690:	mov	w8, #0x2e                  	// #46
   17694:	strb	w8, [x0], #1
   17698:	mov	x9, #0x7843                	// #30787
   1769c:	movk	x9, #0x71b4, lsl #16
   176a0:	movk	x9, #0x5ac4, lsl #32
   176a4:	lsr	x8, x1, #5
   176a8:	movk	x9, #0xa7c, lsl #48
   176ac:	umulh	x8, x8, x9
   176b0:	mov	w10, #0x86a0                	// #34464
   176b4:	lsr	x8, x8, #7
   176b8:	movk	w10, #0x1, lsl #16
   176bc:	add	w9, w8, #0x30
   176c0:	strb	w9, [x0], #1
   176c4:	msub	x1, x8, x10, x1
   176c8:	cmp	x0, x3
   176cc:	b.ne	176d8 <PyInit__decimal@@Base+0x10bc4>  // b.any
   176d0:	mov	w8, #0x2e                  	// #46
   176d4:	strb	w8, [x0], #1
   176d8:	mov	x8, #0x594b                	// #22859
   176dc:	movk	x8, #0x3886, lsl #16
   176e0:	movk	x8, #0xc5d6, lsl #32
   176e4:	movk	x8, #0x346d, lsl #48
   176e8:	umulh	x8, x1, x8
   176ec:	lsr	x8, x8, #11
   176f0:	mov	w9, #0x2710                	// #10000
   176f4:	add	w10, w8, #0x30
   176f8:	strb	w10, [x0], #1
   176fc:	msub	x1, x8, x9, x1
   17700:	cmp	x0, x3
   17704:	b.ne	17710 <PyInit__decimal@@Base+0x10bfc>  // b.any
   17708:	mov	w8, #0x2e                  	// #46
   1770c:	strb	w8, [x0], #1
   17710:	mov	x9, #0xf7cf                	// #63439
   17714:	movk	x9, #0xe353, lsl #16
   17718:	movk	x9, #0x9ba5, lsl #32
   1771c:	lsr	x8, x1, #3
   17720:	movk	x9, #0x20c4, lsl #48
   17724:	umulh	x8, x8, x9
   17728:	lsr	x8, x8, #4
   1772c:	mov	w10, #0x3e8                 	// #1000
   17730:	add	w9, w8, #0x30
   17734:	strb	w9, [x0], #1
   17738:	msub	x1, x8, x10, x1
   1773c:	cmp	x0, x3
   17740:	b.ne	1774c <PyInit__decimal@@Base+0x10c38>  // b.any
   17744:	mov	w8, #0x2e                  	// #46
   17748:	strb	w8, [x0], #1
   1774c:	mov	x9, #0xf5c3                	// #62915
   17750:	movk	x9, #0x5c28, lsl #16
   17754:	movk	x9, #0xc28f, lsl #32
   17758:	lsr	x8, x1, #2
   1775c:	movk	x9, #0x28f5, lsl #48
   17760:	umulh	x8, x8, x9
   17764:	lsr	x8, x8, #2
   17768:	mov	w10, #0x64                  	// #100
   1776c:	add	w9, w8, #0x30
   17770:	strb	w9, [x0], #1
   17774:	msub	x1, x8, x10, x1
   17778:	cmp	x0, x3
   1777c:	b.ne	17788 <PyInit__decimal@@Base+0x10c74>  // b.any
   17780:	mov	w8, #0x2e                  	// #46
   17784:	strb	w8, [x0], #1
   17788:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   1778c:	movk	x8, #0xcccd
   17790:	umulh	x8, x1, x8
   17794:	lsr	x8, x8, #3
   17798:	mov	w9, #0xa                   	// #10
   1779c:	add	w10, w8, #0x30
   177a0:	strb	w10, [x0], #1
   177a4:	msub	x1, x8, x9, x1
   177a8:	cmp	x0, x3
   177ac:	b.ne	177b8 <PyInit__decimal@@Base+0x10ca4>  // b.any
   177b0:	mov	w8, #0x2e                  	// #46
   177b4:	strb	w8, [x0], #1
   177b8:	add	w8, w1, #0x30
   177bc:	strb	w8, [x0], #1
   177c0:	strb	wzr, [x0]
   177c4:	ret
   177c8:	stp	x29, x30, [sp, #-96]!
   177cc:	stp	x28, x27, [sp, #16]
   177d0:	stp	x26, x25, [sp, #32]
   177d4:	stp	x24, x23, [sp, #48]
   177d8:	stp	x22, x21, [sp, #64]
   177dc:	stp	x20, x19, [sp, #80]
   177e0:	mov	x29, sp
   177e4:	mov	x19, x0
   177e8:	ldr	x0, [x7, #32]
   177ec:	cmp	x1, #0x0
   177f0:	mov	x21, x7
   177f4:	mov	x26, x6
   177f8:	mov	x27, x5
   177fc:	mov	x25, x4
   17800:	mov	x23, x3
   17804:	mov	x22, x2
   17808:	mov	x20, x1
   1780c:	cset	w28, ne  // ne = any
   17810:	bl	6480 <strlen@plt>
   17814:	ldr	x8, [x19]
   17818:	mov	x24, x0
   1781c:	mov	x0, x19
   17820:	mov	x1, x27
   17824:	mov	x2, x26
   17828:	stp	xzr, x8, [x19, #8]
   1782c:	str	xzr, [x19]
   17830:	bl	1796c <PyInit__decimal@@Base+0x10e58>
   17834:	cbz	x25, 17850 <PyInit__decimal@@Base+0x10d3c>
   17838:	mov	x0, x25
   1783c:	bl	6480 <strlen@plt>
   17840:	mov	x2, x0
   17844:	mov	x0, x19
   17848:	mov	x1, x25
   1784c:	bl	179a4 <PyInit__decimal@@Base+0x10e90>
   17850:	ldr	x26, [x21, #40]
   17854:	mov	w27, wzr
   17858:	ldrb	w25, [x26]
   1785c:	ldrb	w8, [x26]
   17860:	cbz	w8, 17874 <PyInit__decimal@@Base+0x10d60>
   17864:	cmp	w8, #0xff
   17868:	b.eq	17874 <PyInit__decimal@@Base+0x10d60>  // b.none
   1786c:	cmp	x25, x23
   17870:	b.le	17878 <PyInit__decimal@@Base+0x10d64>
   17874:	mov	x25, x23
   17878:	sub	x23, x23, x25
   1787c:	cbz	w27, 17894 <PyInit__decimal@@Base+0x10d80>
   17880:	mov	x0, x19
   17884:	mov	x1, x25
   17888:	bl	179e0 <PyInit__decimal@@Base+0x10ecc>
   1788c:	cbz	x23, 178a8 <PyInit__decimal@@Base+0x10d94>
   17890:	b	178e0 <PyInit__decimal@@Base+0x10dcc>
   17894:	add	x1, x22, x23
   17898:	mov	x0, x19
   1789c:	mov	x2, x25
   178a0:	bl	1796c <PyInit__decimal@@Base+0x10e58>
   178a4:	cbnz	x23, 178e0 <PyInit__decimal@@Base+0x10dcc>
   178a8:	ldrb	w8, [x21, #17]
   178ac:	cmp	w8, #0x7a
   178b0:	b.ne	1792c <PyInit__decimal@@Base+0x10e18>  // b.any
   178b4:	ldr	x8, [x19, #8]
   178b8:	ldr	x9, [x21]
   178bc:	add	x8, x8, x28
   178c0:	subs	x23, x9, x8
   178c4:	b.le	1792c <PyInit__decimal@@Base+0x10e18>
   178c8:	ldrb	w8, [x26]
   178cc:	mov	w27, #0x1                   	// #1
   178d0:	sub	x25, x8, x25
   178d4:	ldrb	w8, [x26]
   178d8:	cbnz	w8, 17864 <PyInit__decimal@@Base+0x10d50>
   178dc:	b	17874 <PyInit__decimal@@Base+0x10d60>
   178e0:	cmp	x24, #0x1
   178e4:	b.lt	17910 <PyInit__decimal@@Base+0x10dfc>  // b.tstop
   178e8:	cmp	w27, #0x0
   178ec:	ldr	x1, [x21, #32]
   178f0:	cset	w8, ne  // ne = any
   178f4:	cmp	x23, #0x1
   178f8:	cset	w9, gt
   178fc:	and	w8, w8, w9
   17900:	mov	x0, x19
   17904:	mov	x2, x24
   17908:	sub	x23, x23, x8
   1790c:	bl	179a4 <PyInit__decimal@@Base+0x10e90>
   17910:	ldrb	w8, [x26]
   17914:	cbz	w8, 17858 <PyInit__decimal@@Base+0x10d44>
   17918:	mov	x8, x26
   1791c:	ldrb	w9, [x8, #1]!
   17920:	cmp	w9, #0x0
   17924:	csel	x26, x26, x8, eq  // eq = none
   17928:	b	17858 <PyInit__decimal@@Base+0x10d44>
   1792c:	cbz	x20, 17940 <PyInit__decimal@@Base+0x10e2c>
   17930:	mov	w2, #0x1                   	// #1
   17934:	mov	x0, x19
   17938:	mov	x1, x20
   1793c:	bl	1796c <PyInit__decimal@@Base+0x10e58>
   17940:	ldr	x8, [x19, #24]
   17944:	cbz	x8, 17950 <PyInit__decimal@@Base+0x10e3c>
   17948:	ldr	x9, [x19]
   1794c:	strb	wzr, [x8, x9]
   17950:	ldp	x20, x19, [sp, #80]
   17954:	ldp	x22, x21, [sp, #64]
   17958:	ldp	x24, x23, [sp, #48]
   1795c:	ldp	x26, x25, [sp, #32]
   17960:	ldp	x28, x27, [sp, #16]
   17964:	ldp	x29, x30, [sp], #96
   17968:	ret
   1796c:	stp	x29, x30, [sp, #-16]!
   17970:	mov	x29, sp
   17974:	ldp	x9, x10, [x0]
   17978:	ldp	x11, x8, [x0, #16]
   1797c:	add	x12, x9, x2
   17980:	add	x10, x10, x2
   17984:	sub	x9, x11, x2
   17988:	stp	x12, x10, [x0]
   1798c:	str	x9, [x0, #16]
   17990:	cbz	x8, 1799c <PyInit__decimal@@Base+0x10e88>
   17994:	add	x0, x8, x9
   17998:	bl	17a28 <PyInit__decimal@@Base+0x10f14>
   1799c:	ldp	x29, x30, [sp], #16
   179a0:	ret
   179a4:	stp	x29, x30, [sp, #-16]!
   179a8:	mov	x29, sp
   179ac:	ldp	x9, x10, [x0]
   179b0:	ldp	x11, x8, [x0, #16]
   179b4:	cmp	x2, #0x0
   179b8:	add	x12, x9, x2
   179bc:	cinc	x10, x10, gt
   179c0:	sub	x9, x11, x2
   179c4:	stp	x12, x10, [x0]
   179c8:	str	x9, [x0, #16]
   179cc:	cbz	x8, 179d8 <PyInit__decimal@@Base+0x10ec4>
   179d0:	add	x0, x8, x9
   179d4:	bl	17a28 <PyInit__decimal@@Base+0x10f14>
   179d8:	ldp	x29, x30, [sp], #16
   179dc:	ret
   179e0:	stp	x29, x30, [sp, #-16]!
   179e4:	mov	x29, sp
   179e8:	ldp	x9, x10, [x0]
   179ec:	ldp	x11, x8, [x0, #16]
   179f0:	add	x12, x9, x1
   179f4:	add	x10, x10, x1
   179f8:	sub	x9, x11, x1
   179fc:	stp	x12, x10, [x0]
   17a00:	str	x9, [x0, #16]
   17a04:	cbz	x8, 17a20 <PyInit__decimal@@Base+0x10f0c>
   17a08:	mov	x2, x1
   17a0c:	sub	x10, x1, #0x1
   17a10:	tbnz	x10, #63, 17a20 <PyInit__decimal@@Base+0x10f0c>
   17a14:	add	x0, x8, x9
   17a18:	mov	w1, #0x30                  	// #48
   17a1c:	bl	6610 <memset@plt>
   17a20:	ldp	x29, x30, [sp], #16
   17a24:	ret
   17a28:	subs	x8, x2, #0x1
   17a2c:	b.mi	17a40 <PyInit__decimal@@Base+0x10f2c>  // b.first
   17a30:	ldrb	w9, [x1, x8]
   17a34:	strb	w9, [x0, x8]
   17a38:	subs	x8, x8, #0x1
   17a3c:	b.pl	17a30 <PyInit__decimal@@Base+0x10f1c>  // b.nfrst
   17a40:	ret
   17a44:	sub	sp, sp, #0x30
   17a48:	stp	x29, x30, [sp, #16]
   17a4c:	stp	x20, x19, [sp, #32]
   17a50:	add	x29, sp, #0x10
   17a54:	add	x2, sp, #0x8
   17a58:	bl	17aa8 <PyInit__decimal@@Base+0x10f94>
   17a5c:	ldr	x8, [sp, #8]
   17a60:	cbz	x8, 17a6c <PyInit__decimal@@Base+0x10f58>
   17a64:	mov	x19, xzr
   17a68:	b	17a94 <PyInit__decimal@@Base+0x10f80>
   17a6c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   17a70:	ldr	x8, [x8, #1352]
   17a74:	mov	x20, x0
   17a78:	blr	x8
   17a7c:	mov	x19, x0
   17a80:	cbz	x0, 17a94 <PyInit__decimal@@Base+0x10f80>
   17a84:	mov	x0, x19
   17a88:	mov	w1, wzr
   17a8c:	mov	x2, x20
   17a90:	bl	6610 <memset@plt>
   17a94:	mov	x0, x19
   17a98:	ldp	x20, x19, [sp, #32]
   17a9c:	ldp	x29, x30, [sp, #16]
   17aa0:	add	sp, sp, #0x30
   17aa4:	ret
   17aa8:	sub	sp, sp, #0x20
   17aac:	stp	x29, x30, [sp, #16]
   17ab0:	add	x29, sp, #0x10
   17ab4:	mov	x8, x0
   17ab8:	mov	x3, x1
   17abc:	add	x1, sp, #0x8
   17ac0:	mov	x0, x2
   17ac4:	mov	x2, x8
   17ac8:	bl	17eb4 <PyInit__decimal@@Base+0x113a0>
   17acc:	ldr	x0, [sp, #8]
   17ad0:	ldp	x29, x30, [sp, #16]
   17ad4:	add	sp, sp, #0x20
   17ad8:	ret
   17adc:	sub	sp, sp, #0x20
   17ae0:	stp	x29, x30, [sp, #16]
   17ae4:	add	x29, sp, #0x10
   17ae8:	add	x2, sp, #0x8
   17aec:	bl	17aa8 <PyInit__decimal@@Base+0x10f94>
   17af0:	ldr	x8, [sp, #8]
   17af4:	cbz	x8, 17b00 <PyInit__decimal@@Base+0x10fec>
   17af8:	mov	x0, xzr
   17afc:	b	17b0c <PyInit__decimal@@Base+0x10ff8>
   17b00:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   17b04:	ldr	x8, [x8, #1352]
   17b08:	blr	x8
   17b0c:	ldp	x29, x30, [sp, #16]
   17b10:	add	sp, sp, #0x20
   17b14:	ret
   17b18:	sub	sp, sp, #0x30
   17b1c:	stp	x29, x30, [sp, #16]
   17b20:	stp	x20, x19, [sp, #32]
   17b24:	add	x29, sp, #0x10
   17b28:	add	x2, sp, #0x8
   17b2c:	mov	x19, x1
   17b30:	mov	x20, x0
   17b34:	bl	17aa8 <PyInit__decimal@@Base+0x10f94>
   17b38:	ldr	x8, [sp, #8]
   17b3c:	cbz	x8, 17b48 <PyInit__decimal@@Base+0x11034>
   17b40:	mov	x0, xzr
   17b44:	b	17b5c <PyInit__decimal@@Base+0x11048>
   17b48:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   17b4c:	ldr	x8, [x8, #1368]
   17b50:	mov	x0, x20
   17b54:	mov	x1, x19
   17b58:	blr	x8
   17b5c:	ldp	x20, x19, [sp, #32]
   17b60:	ldp	x29, x30, [sp, #16]
   17b64:	add	sp, sp, #0x30
   17b68:	ret
   17b6c:	sub	sp, sp, #0x30
   17b70:	stp	x29, x30, [sp, #16]
   17b74:	stp	x20, x19, [sp, #32]
   17b78:	add	x29, sp, #0x10
   17b7c:	mov	x8, x2
   17b80:	mov	x20, x0
   17b84:	add	x2, sp, #0x8
   17b88:	mov	x0, x1
   17b8c:	mov	x1, x8
   17b90:	mov	x19, x3
   17b94:	bl	17aa8 <PyInit__decimal@@Base+0x10f94>
   17b98:	ldr	x8, [sp, #8]
   17b9c:	cbnz	x8, 17bb8 <PyInit__decimal@@Base+0x110a4>
   17ba0:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   17ba4:	ldr	x8, [x8, #1360]
   17ba8:	mov	x1, x0
   17bac:	mov	x0, x20
   17bb0:	blr	x8
   17bb4:	cbnz	x0, 17bc4 <PyInit__decimal@@Base+0x110b0>
   17bb8:	mov	w8, #0x1                   	// #1
   17bbc:	mov	x0, x20
   17bc0:	strb	w8, [x19]
   17bc4:	ldp	x20, x19, [sp, #32]
   17bc8:	ldp	x29, x30, [sp, #16]
   17bcc:	add	sp, sp, #0x30
   17bd0:	ret
   17bd4:	stp	x29, x30, [sp, #-32]!
   17bd8:	str	x19, [sp, #16]
   17bdc:	mov	x29, sp
   17be0:	mov	x8, x2
   17be4:	mov	x19, x0
   17be8:	add	x2, x29, #0x18
   17bec:	mov	x0, x1
   17bf0:	mov	x1, x8
   17bf4:	bl	17aa8 <PyInit__decimal@@Base+0x10f94>
   17bf8:	ldr	x8, [x29, #24]
   17bfc:	cbnz	x8, 17c14 <PyInit__decimal@@Base+0x11100>
   17c00:	add	x2, x29, #0x18
   17c04:	mov	x1, x19
   17c08:	bl	17c34 <PyInit__decimal@@Base+0x11120>
   17c0c:	ldr	x8, [x29, #24]
   17c10:	cbz	x8, 17c24 <PyInit__decimal@@Base+0x11110>
   17c14:	mov	x0, xzr
   17c18:	ldr	x19, [sp, #16]
   17c1c:	ldp	x29, x30, [sp], #32
   17c20:	ret
   17c24:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   17c28:	ldr	x8, [x8, #1352]
   17c2c:	blr	x8
   17c30:	b	17c18 <PyInit__decimal@@Base+0x11104>
   17c34:	adds	x0, x1, x0
   17c38:	cset	w8, cs  // cs = hs, nlast
   17c3c:	str	x8, [x2]
   17c40:	ret
   17c44:	stp	x29, x30, [sp, #-32]!
   17c48:	stp	x20, x19, [sp, #16]
   17c4c:	mov	x29, sp
   17c50:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   17c54:	ldr	x8, [x8, #1344]
   17c58:	mov	w1, #0x30                  	// #48
   17c5c:	cmp	x8, x0
   17c60:	csel	x20, x8, x0, gt
   17c64:	mov	w0, #0x1                   	// #1
   17c68:	bl	17adc <PyInit__decimal@@Base+0x10fc8>
   17c6c:	mov	x19, x0
   17c70:	cbz	x0, 17cac <PyInit__decimal@@Base+0x11198>
   17c74:	mov	w1, #0x8                   	// #8
   17c78:	mov	x0, x20
   17c7c:	bl	17adc <PyInit__decimal@@Base+0x10fc8>
   17c80:	str	x0, [x19, #40]
   17c84:	cbz	x0, 17c98 <PyInit__decimal@@Base+0x11184>
   17c88:	strb	wzr, [x19]
   17c8c:	stp	xzr, xzr, [x19, #8]
   17c90:	stp	xzr, x20, [x19, #24]
   17c94:	b	17cac <PyInit__decimal@@Base+0x11198>
   17c98:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   17c9c:	ldr	x8, [x8, #1376]
   17ca0:	mov	x0, x19
   17ca4:	blr	x8
   17ca8:	mov	x19, xzr
   17cac:	mov	x0, x19
   17cb0:	ldp	x20, x19, [sp, #16]
   17cb4:	ldp	x29, x30, [sp], #32
   17cb8:	ret
   17cbc:	stp	x29, x30, [sp, #-16]!
   17cc0:	mov	x29, sp
   17cc4:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   17cc8:	ldr	x0, [x8, #1344]
   17ccc:	bl	17c44 <PyInit__decimal@@Base+0x11130>
   17cd0:	ldp	x29, x30, [sp], #16
   17cd4:	ret
   17cd8:	stp	x29, x30, [sp, #-32]!
   17cdc:	stp	x20, x19, [sp, #16]
   17ce0:	mov	x29, sp
   17ce4:	mov	x19, x0
   17ce8:	bl	17cbc <PyInit__decimal@@Base+0x111a8>
   17cec:	mov	x20, x0
   17cf0:	cbnz	x0, 17d00 <PyInit__decimal@@Base+0x111ec>
   17cf4:	mov	w1, #0x200                 	// #512
   17cf8:	mov	x0, x19
   17cfc:	bl	13930 <PyInit__decimal@@Base+0xce1c>
   17d00:	mov	x0, x20
   17d04:	ldp	x20, x19, [sp, #16]
   17d08:	ldp	x29, x30, [sp], #32
   17d0c:	ret
   17d10:	stp	x29, x30, [sp, #-48]!
   17d14:	stp	x22, x21, [sp, #16]
   17d18:	stp	x20, x19, [sp, #32]
   17d1c:	mov	x29, sp
   17d20:	ldr	x22, [x0, #40]
   17d24:	mov	x21, x1
   17d28:	mov	x19, x0
   17d2c:	mov	w1, #0x8                   	// #8
   17d30:	mov	x0, x21
   17d34:	mov	x20, x2
   17d38:	bl	17adc <PyInit__decimal@@Base+0x10fc8>
   17d3c:	str	x0, [x19, #40]
   17d40:	cbz	x0, 17d68 <PyInit__decimal@@Base+0x11254>
   17d44:	ldr	x8, [x19, #32]
   17d48:	mov	x1, x22
   17d4c:	lsl	x2, x8, #3
   17d50:	bl	6420 <memcpy@plt>
   17d54:	mov	x0, x19
   17d58:	str	x21, [x19, #32]
   17d5c:	bl	18a08 <PyInit__decimal@@Base+0x11ef4>
   17d60:	mov	w0, #0x1                   	// #1
   17d64:	b	17d94 <PyInit__decimal@@Base+0x11280>
   17d68:	mov	x0, x19
   17d6c:	str	x22, [x19, #40]
   17d70:	bl	189a0 <PyInit__decimal@@Base+0x11e8c>
   17d74:	mov	x0, x19
   17d78:	bl	189d8 <PyInit__decimal@@Base+0x11ec4>
   17d7c:	stp	xzr, xzr, [x19, #8]
   17d80:	str	xzr, [x19, #24]
   17d84:	ldr	w8, [x20]
   17d88:	mov	w0, wzr
   17d8c:	orr	w8, w8, #0x200
   17d90:	str	w8, [x20]
   17d94:	ldp	x20, x19, [sp, #32]
   17d98:	ldp	x22, x21, [sp, #16]
   17d9c:	ldp	x29, x30, [sp], #48
   17da0:	ret
   17da4:	stp	x29, x30, [sp, #-48]!
   17da8:	stp	x22, x21, [sp, #16]
   17dac:	stp	x20, x19, [sp, #32]
   17db0:	mov	x29, sp
   17db4:	ldr	x22, [x0, #40]
   17db8:	mov	x21, x1
   17dbc:	mov	x20, x0
   17dc0:	mov	w1, #0x8                   	// #8
   17dc4:	mov	x0, x21
   17dc8:	mov	x19, x2
   17dcc:	bl	17b18 <PyInit__decimal@@Base+0x11004>
   17dd0:	str	x0, [x20, #40]
   17dd4:	cbz	x0, 17dec <PyInit__decimal@@Base+0x112d8>
   17dd8:	mov	x0, x20
   17ddc:	str	x21, [x20, #32]
   17de0:	bl	18a08 <PyInit__decimal@@Base+0x11ef4>
   17de4:	mov	w0, #0x1                   	// #1
   17de8:	b	17e18 <PyInit__decimal@@Base+0x11304>
   17dec:	mov	x0, x20
   17df0:	str	x22, [x20, #40]
   17df4:	bl	189a0 <PyInit__decimal@@Base+0x11e8c>
   17df8:	mov	x0, x20
   17dfc:	bl	189d8 <PyInit__decimal@@Base+0x11ec4>
   17e00:	stp	xzr, xzr, [x20, #8]
   17e04:	str	xzr, [x20, #24]
   17e08:	ldr	w8, [x19]
   17e0c:	mov	w0, wzr
   17e10:	orr	w8, w8, #0x200
   17e14:	str	w8, [x19]
   17e18:	ldp	x20, x19, [sp, #32]
   17e1c:	ldp	x22, x21, [sp, #16]
   17e20:	ldp	x29, x30, [sp], #48
   17e24:	ret
   17e28:	stp	x29, x30, [sp, #-48]!
   17e2c:	str	x21, [sp, #16]
   17e30:	stp	x20, x19, [sp, #32]
   17e34:	mov	x29, sp
   17e38:	strb	wzr, [x29, #28]
   17e3c:	mov	x20, x0
   17e40:	ldr	x0, [x0, #40]
   17e44:	mov	x19, x2
   17e48:	add	x3, x29, #0x1c
   17e4c:	mov	w2, #0x8                   	// #8
   17e50:	mov	x21, x1
   17e54:	bl	17b6c <PyInit__decimal@@Base+0x11058>
   17e58:	str	x0, [x20, #40]
   17e5c:	ldrb	w8, [x29, #28]
   17e60:	cbz	w8, 17e9c <PyInit__decimal@@Base+0x11388>
   17e64:	ldr	x8, [x20, #32]
   17e68:	cmp	x8, x21
   17e6c:	b.ge	17ea0 <PyInit__decimal@@Base+0x1138c>  // b.tcont
   17e70:	mov	x0, x20
   17e74:	bl	189a0 <PyInit__decimal@@Base+0x11e8c>
   17e78:	mov	x0, x20
   17e7c:	bl	189d8 <PyInit__decimal@@Base+0x11ec4>
   17e80:	stp	xzr, xzr, [x20, #8]
   17e84:	str	xzr, [x20, #24]
   17e88:	ldr	w8, [x19]
   17e8c:	mov	w0, wzr
   17e90:	orr	w8, w8, #0x200
   17e94:	str	w8, [x19]
   17e98:	b	17ea4 <PyInit__decimal@@Base+0x11390>
   17e9c:	str	x21, [x20, #32]
   17ea0:	mov	w0, #0x1                   	// #1
   17ea4:	ldp	x20, x19, [sp, #32]
   17ea8:	ldr	x21, [sp, #16]
   17eac:	ldp	x29, x30, [sp], #48
   17eb0:	ret
   17eb4:	mul	x8, x3, x2
   17eb8:	umulh	x9, x3, x2
   17ebc:	str	x9, [x0]
   17ec0:	str	x8, [x1]
   17ec4:	ret
   17ec8:	adrp	x0, 2e000 <PyInit__decimal@@Base+0x274ec>
   17ecc:	add	x0, x0, #0xca0
   17ed0:	ret
   17ed4:	adrp	x8, 2e000 <PyInit__decimal@@Base+0x274ec>
   17ed8:	add	x8, x8, #0x20
   17edc:	ldr	x9, [x8, #72]
   17ee0:	cmp	x9, x0
   17ee4:	b.ls	17f14 <PyInit__decimal@@Base+0x11400>  // b.plast
   17ee8:	ldr	x9, [x8, #32]
   17eec:	cmp	x9, x0
   17ef0:	b.ls	17f40 <PyInit__decimal@@Base+0x1142c>  // b.plast
   17ef4:	ldr	x9, [x8, #16]
   17ef8:	cmp	x9, x0
   17efc:	b.ls	17f8c <PyInit__decimal@@Base+0x11478>  // b.plast
   17f00:	ldr	x8, [x8, #8]
   17f04:	cmp	x8, x0
   17f08:	mov	w8, #0x1                   	// #1
   17f0c:	cinc	w0, w8, ls  // ls = plast
   17f10:	ret
   17f14:	ldr	x9, [x8, #112]
   17f18:	cmp	x9, x0
   17f1c:	b.ls	17f60 <PyInit__decimal@@Base+0x1144c>  // b.plast
   17f20:	ldr	x9, [x8, #88]
   17f24:	cmp	x9, x0
   17f28:	b.ls	17fa0 <PyInit__decimal@@Base+0x1148c>  // b.plast
   17f2c:	ldr	x8, [x8, #80]
   17f30:	cmp	x8, x0
   17f34:	mov	w8, #0xa                   	// #10
   17f38:	cinc	w0, w8, ls  // ls = plast
   17f3c:	ret
   17f40:	ldr	x9, [x8, #48]
   17f44:	cmp	x9, x0
   17f48:	b.ls	17fc0 <PyInit__decimal@@Base+0x114ac>  // b.plast
   17f4c:	ldr	x8, [x8, #40]
   17f50:	cmp	x8, x0
   17f54:	mov	w8, #0x5                   	// #5
   17f58:	cinc	w0, w8, ls  // ls = plast
   17f5c:	ret
   17f60:	ldr	x9, [x8, #144]
   17f64:	cmp	x9, x0
   17f68:	b.ls	17fe0 <PyInit__decimal@@Base+0x114cc>  // b.plast
   17f6c:	ldr	x9, [x8, #128]
   17f70:	cmp	x9, x0
   17f74:	b.ls	17ff4 <PyInit__decimal@@Base+0x114e0>  // b.plast
   17f78:	ldr	x8, [x8, #120]
   17f7c:	cmp	x8, x0
   17f80:	mov	w8, #0xf                   	// #15
   17f84:	cinc	w0, w8, ls  // ls = plast
   17f88:	ret
   17f8c:	ldr	x8, [x8, #24]
   17f90:	cmp	x8, x0
   17f94:	mov	w8, #0x3                   	// #3
   17f98:	cinc	w0, w8, ls  // ls = plast
   17f9c:	ret
   17fa0:	ldr	x9, [x8, #104]
   17fa4:	cmp	x9, x0
   17fa8:	b.ls	18008 <PyInit__decimal@@Base+0x114f4>  // b.plast
   17fac:	ldr	x8, [x8, #96]
   17fb0:	cmp	x8, x0
   17fb4:	mov	w8, #0xc                   	// #12
   17fb8:	cinc	w0, w8, ls  // ls = plast
   17fbc:	ret
   17fc0:	ldr	x9, [x8, #64]
   17fc4:	cmp	x9, x0
   17fc8:	b.ls	18010 <PyInit__decimal@@Base+0x114fc>  // b.plast
   17fcc:	ldr	x8, [x8, #56]
   17fd0:	cmp	x8, x0
   17fd4:	mov	w8, #0x7                   	// #7
   17fd8:	cinc	w0, w8, ls  // ls = plast
   17fdc:	ret
   17fe0:	ldr	x8, [x8, #152]
   17fe4:	cmp	x8, x0
   17fe8:	mov	w8, #0x13                  	// #19
   17fec:	cinc	w0, w8, ls  // ls = plast
   17ff0:	ret
   17ff4:	ldr	x8, [x8, #136]
   17ff8:	cmp	x8, x0
   17ffc:	mov	w8, #0x11                  	// #17
   18000:	cinc	w0, w8, ls  // ls = plast
   18004:	ret
   18008:	mov	w0, #0xe                   	// #14
   1800c:	ret
   18010:	mov	w0, #0x9                   	// #9
   18014:	ret
   18018:	ldp	x8, x9, [x0, #8]
   1801c:	add	x8, x8, x9
   18020:	sub	x0, x8, #0x1
   18024:	ret
   18028:	ldr	x8, [x0, #16]
   1802c:	ldr	x9, [x0]
   18030:	sub	x8, x8, x9
   18034:	add	x0, x8, #0x1
   18038:	ret
   1803c:	ldp	x9, x8, [x0]
   18040:	sub	x8, x8, x9
   18044:	add	x0, x8, #0x1
   18048:	ret
   1804c:	ldr	x8, [x0, #40]
   18050:	ldr	x9, [x0, #24]
   18054:	add	x8, x8, x9, lsl #3
   18058:	ldur	x0, [x8, #-8]
   1805c:	ret
   18060:	adrp	x8, 2e000 <PyInit__decimal@@Base+0x274ec>
   18064:	add	x8, x8, #0x20
   18068:	ldr	x9, [x8, #72]
   1806c:	cmp	x9, x0
   18070:	b.ls	1809c <PyInit__decimal@@Base+0x11588>  // b.plast
   18074:	ldr	x9, [x8, #32]
   18078:	cmp	x9, x0
   1807c:	b.ls	180c4 <PyInit__decimal@@Base+0x115b0>  // b.plast
   18080:	ldr	x9, [x8, #16]
   18084:	cmp	x9, x0
   18088:	b.ls	18108 <PyInit__decimal@@Base+0x115f4>  // b.plast
   1808c:	ldr	x9, [x8, #8]
   18090:	cmp	x9, x0
   18094:	mov	w9, #0x1                   	// #1
   18098:	b	1816c <PyInit__decimal@@Base+0x11658>
   1809c:	ldr	x9, [x8, #112]
   180a0:	cmp	x9, x0
   180a4:	b.ls	180e0 <PyInit__decimal@@Base+0x115cc>  // b.plast
   180a8:	ldr	x9, [x8, #88]
   180ac:	cmp	x9, x0
   180b0:	b.ls	18118 <PyInit__decimal@@Base+0x11604>  // b.plast
   180b4:	ldr	x9, [x8, #80]
   180b8:	cmp	x9, x0
   180bc:	mov	w9, #0xa                   	// #10
   180c0:	b	1816c <PyInit__decimal@@Base+0x11658>
   180c4:	ldr	x9, [x8, #48]
   180c8:	cmp	x9, x0
   180cc:	b.ls	18134 <PyInit__decimal@@Base+0x11620>  // b.plast
   180d0:	ldr	x9, [x8, #40]
   180d4:	cmp	x9, x0
   180d8:	mov	w9, #0x5                   	// #5
   180dc:	b	1816c <PyInit__decimal@@Base+0x11658>
   180e0:	ldr	x9, [x8, #144]
   180e4:	cmp	x9, x0
   180e8:	b.ls	18150 <PyInit__decimal@@Base+0x1163c>  // b.plast
   180ec:	ldr	x9, [x8, #128]
   180f0:	cmp	x9, x0
   180f4:	b.ls	18160 <PyInit__decimal@@Base+0x1164c>  // b.plast
   180f8:	ldr	x9, [x8, #120]
   180fc:	cmp	x9, x0
   18100:	mov	w9, #0xf                   	// #15
   18104:	b	1816c <PyInit__decimal@@Base+0x11658>
   18108:	ldr	x9, [x8, #24]
   1810c:	cmp	x9, x0
   18110:	mov	w9, #0x3                   	// #3
   18114:	b	1816c <PyInit__decimal@@Base+0x11658>
   18118:	ldr	x9, [x8, #104]
   1811c:	cmp	x9, x0
   18120:	b.ls	18180 <PyInit__decimal@@Base+0x1166c>  // b.plast
   18124:	ldr	x9, [x8, #96]
   18128:	cmp	x9, x0
   1812c:	mov	w9, #0xc                   	// #12
   18130:	b	1816c <PyInit__decimal@@Base+0x11658>
   18134:	ldr	x9, [x8, #64]
   18138:	cmp	x9, x0
   1813c:	b.ls	18188 <PyInit__decimal@@Base+0x11674>  // b.plast
   18140:	ldr	x9, [x8, #56]
   18144:	cmp	x9, x0
   18148:	mov	w9, #0x7                   	// #7
   1814c:	b	1816c <PyInit__decimal@@Base+0x11658>
   18150:	ldr	x9, [x8, #152]
   18154:	cmp	x9, x0
   18158:	mov	w9, #0x13                  	// #19
   1815c:	b	1816c <PyInit__decimal@@Base+0x11658>
   18160:	ldr	x9, [x8, #136]
   18164:	cmp	x9, x0
   18168:	mov	w9, #0x11                  	// #17
   1816c:	cinc	x9, x9, ls  // ls = plast
   18170:	add	x8, x8, x9, lsl #3
   18174:	ldur	x8, [x8, #-8]
   18178:	udiv	x0, x0, x8
   1817c:	ret
   18180:	mov	w9, #0xe                   	// #14
   18184:	b	18170 <PyInit__decimal@@Base+0x1165c>
   18188:	mov	w9, #0x9                   	// #9
   1818c:	b	18170 <PyInit__decimal@@Base+0x1165c>
   18190:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   18194:	movk	x8, #0xcccd
   18198:	umulh	x8, x0, x8
   1819c:	lsr	x8, x8, #3
   181a0:	mov	w9, #0xa                   	// #10
   181a4:	msub	x0, x8, x9, x0
   181a8:	ret
   181ac:	sub	sp, sp, #0x20
   181b0:	stp	x29, x30, [sp, #16]
   181b4:	add	x29, sp, #0x10
   181b8:	mov	x2, x0
   181bc:	add	x0, sp, #0x8
   181c0:	mov	x1, sp
   181c4:	bl	181e0 <PyInit__decimal@@Base+0x116cc>
   181c8:	ldp	x8, x9, [sp]
   181cc:	ldp	x29, x30, [sp, #16]
   181d0:	cmp	x8, #0x0
   181d4:	cinc	x0, x9, ne  // ne = any
   181d8:	add	sp, sp, #0x20
   181dc:	ret
   181e0:	mov	x8, #0x9436                	// #37942
   181e4:	movk	x8, #0x50d7, lsl #16
   181e8:	movk	x8, #0x435e, lsl #32
   181ec:	movk	x8, #0xd79, lsl #48
   181f0:	smulh	x8, x2, x8
   181f4:	mov	x9, #0xffffffffffffffed    	// #-19
   181f8:	add	x8, x8, x8, lsr #63
   181fc:	str	x8, [x0]
   18200:	madd	x8, x8, x9, x2
   18204:	str	x8, [x1]
   18208:	ret
   1820c:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   18210:	add	x9, x9, #0x20
   18214:	ldr	x10, [x9, #72]
   18218:	cmp	x0, #0x0
   1821c:	cneg	x8, x0, mi  // mi = first
   18220:	cmp	x10, x8
   18224:	b.ls	18254 <PyInit__decimal@@Base+0x11740>  // b.plast
   18228:	ldr	x10, [x9, #32]
   1822c:	cmp	x10, x8
   18230:	b.ls	18280 <PyInit__decimal@@Base+0x1176c>  // b.plast
   18234:	ldr	x10, [x9, #16]
   18238:	cmp	x10, x8
   1823c:	b.ls	182cc <PyInit__decimal@@Base+0x117b8>  // b.plast
   18240:	ldr	x9, [x9, #8]
   18244:	cmp	x9, x8
   18248:	mov	w8, #0x1                   	// #1
   1824c:	cinc	w0, w8, ls  // ls = plast
   18250:	ret
   18254:	ldr	x10, [x9, #112]
   18258:	cmp	x10, x8
   1825c:	b.ls	182a0 <PyInit__decimal@@Base+0x1178c>  // b.plast
   18260:	ldr	x10, [x9, #88]
   18264:	cmp	x10, x8
   18268:	b.ls	182e0 <PyInit__decimal@@Base+0x117cc>  // b.plast
   1826c:	ldr	x9, [x9, #80]
   18270:	cmp	x9, x8
   18274:	mov	w8, #0xa                   	// #10
   18278:	cinc	w0, w8, ls  // ls = plast
   1827c:	ret
   18280:	ldr	x10, [x9, #48]
   18284:	cmp	x10, x8
   18288:	b.ls	18300 <PyInit__decimal@@Base+0x117ec>  // b.plast
   1828c:	ldr	x9, [x9, #40]
   18290:	cmp	x9, x8
   18294:	mov	w8, #0x5                   	// #5
   18298:	cinc	w0, w8, ls  // ls = plast
   1829c:	ret
   182a0:	ldr	x10, [x9, #144]
   182a4:	cmp	x10, x8
   182a8:	b.ls	18320 <PyInit__decimal@@Base+0x1180c>  // b.plast
   182ac:	ldr	x10, [x9, #128]
   182b0:	cmp	x10, x8
   182b4:	b.ls	18334 <PyInit__decimal@@Base+0x11820>  // b.plast
   182b8:	ldr	x9, [x9, #120]
   182bc:	cmp	x9, x8
   182c0:	mov	w8, #0xf                   	// #15
   182c4:	cinc	w0, w8, ls  // ls = plast
   182c8:	ret
   182cc:	ldr	x9, [x9, #24]
   182d0:	cmp	x9, x8
   182d4:	mov	w8, #0x3                   	// #3
   182d8:	cinc	w0, w8, ls  // ls = plast
   182dc:	ret
   182e0:	ldr	x10, [x9, #104]
   182e4:	cmp	x10, x8
   182e8:	b.ls	18348 <PyInit__decimal@@Base+0x11834>  // b.plast
   182ec:	ldr	x9, [x9, #96]
   182f0:	cmp	x9, x8
   182f4:	mov	w8, #0xc                   	// #12
   182f8:	cinc	w0, w8, ls  // ls = plast
   182fc:	ret
   18300:	ldr	x10, [x9, #64]
   18304:	cmp	x10, x8
   18308:	b.ls	18350 <PyInit__decimal@@Base+0x1183c>  // b.plast
   1830c:	ldr	x9, [x9, #56]
   18310:	cmp	x9, x8
   18314:	mov	w8, #0x7                   	// #7
   18318:	cinc	w0, w8, ls  // ls = plast
   1831c:	ret
   18320:	ldr	x9, [x9, #152]
   18324:	cmp	x9, x8
   18328:	mov	w8, #0x13                  	// #19
   1832c:	cinc	w0, w8, ls  // ls = plast
   18330:	ret
   18334:	ldr	x9, [x9, #136]
   18338:	cmp	x9, x8
   1833c:	mov	w8, #0x11                  	// #17
   18340:	cinc	w0, w8, ls  // ls = plast
   18344:	ret
   18348:	mov	w0, #0xe                   	// #14
   1834c:	ret
   18350:	mov	w0, #0x9                   	// #9
   18354:	ret
   18358:	mov	w0, #0x1                   	// #1
   1835c:	ret
   18360:	ldrb	w8, [x0]
   18364:	tst	w8, #0xe
   18368:	cset	w0, eq  // eq = none
   1836c:	ret
   18370:	ldrb	w8, [x0]
   18374:	and	w0, w8, #0x2
   18378:	ret
   1837c:	ldrb	w8, [x0]
   18380:	and	w0, w8, #0xc
   18384:	ret
   18388:	ldrb	w8, [x0]
   1838c:	and	w0, w8, #0x1
   18390:	ret
   18394:	ldrb	w8, [x0]
   18398:	mvn	w8, w8
   1839c:	and	w0, w8, #0x1
   183a0:	ret
   183a4:	ldrb	w8, [x0]
   183a8:	and	w0, w8, #0x4
   183ac:	ret
   183b0:	ldrb	w8, [x0]
   183b4:	and	w0, w8, #0x1
   183b8:	ret
   183bc:	ldrb	w8, [x0]
   183c0:	and	w0, w8, #0x8
   183c4:	ret
   183c8:	ldrb	w8, [x0]
   183cc:	and	w0, w8, #0xe
   183d0:	ret
   183d4:	ldrb	w8, [x0]
   183d8:	tst	w8, #0xe
   183dc:	b.eq	183e8 <PyInit__decimal@@Base+0x118d4>  // b.none
   183e0:	mov	w0, wzr
   183e4:	ret
   183e8:	ldr	x8, [x0, #40]
   183ec:	ldr	x9, [x0, #24]
   183f0:	add	x8, x8, x9, lsl #3
   183f4:	ldur	x8, [x8, #-8]
   183f8:	cmp	x8, #0x0
   183fc:	cset	w0, eq  // eq = none
   18400:	ret
   18404:	ldr	x8, [x0, #40]
   18408:	ldr	x9, [x0, #24]
   1840c:	add	x8, x8, x9, lsl #3
   18410:	ldur	x8, [x8, #-8]
   18414:	cmp	x8, #0x0
   18418:	cset	w0, eq  // eq = none
   1841c:	ret
   18420:	ldrb	w8, [x0]
   18424:	tst	w8, #0xe
   18428:	b.eq	18434 <PyInit__decimal@@Base+0x11920>  // b.none
   1842c:	mov	w0, wzr
   18430:	ret
   18434:	ldr	x8, [x0, #40]
   18438:	ldr	x9, [x0, #24]
   1843c:	add	x8, x8, x9, lsl #3
   18440:	ldur	x8, [x8, #-8]
   18444:	cbz	x8, 1842c <PyInit__decimal@@Base+0x11918>
   18448:	ldp	x8, x9, [x0, #8]
   1844c:	ldr	x10, [x1, #16]
   18450:	add	x8, x8, x9
   18454:	sub	x8, x8, #0x1
   18458:	cmp	x8, x10
   1845c:	cset	w0, ge  // ge = tcont
   18460:	ret
   18464:	ldrb	w8, [x0]
   18468:	tst	w8, #0xe
   1846c:	b.eq	18478 <PyInit__decimal@@Base+0x11964>  // b.none
   18470:	mov	w0, wzr
   18474:	ret
   18478:	ldr	x8, [x0, #40]
   1847c:	ldr	x9, [x0, #24]
   18480:	add	x8, x8, x9, lsl #3
   18484:	ldur	x8, [x8, #-8]
   18488:	cbz	x8, 18470 <PyInit__decimal@@Base+0x1195c>
   1848c:	ldp	x8, x9, [x0, #8]
   18490:	ldr	x10, [x1, #16]
   18494:	add	x8, x8, x9
   18498:	sub	x8, x8, #0x1
   1849c:	cmp	x8, x10
   184a0:	cset	w0, lt  // lt = tstop
   184a4:	ret
   184a8:	and	w0, w0, #0x1
   184ac:	ret
   184b0:	ldr	x8, [x0, #40]
   184b4:	ldr	w8, [x8]
   184b8:	and	w0, w8, #0x1
   184bc:	ret
   184c0:	ldrb	w8, [x0]
   184c4:	and	w0, w8, #0x1
   184c8:	ret
   184cc:	ldrb	w8, [x0]
   184d0:	mov	w9, #0x1                   	// #1
   184d4:	ubfiz	w8, w8, #1, #1
   184d8:	sub	w0, w9, w8
   184dc:	ret
   184e0:	mov	w0, #0xa                   	// #10
   184e4:	ret
   184e8:	ldrb	w8, [x0]
   184ec:	mov	w9, #0x1                   	// #1
   184f0:	bic	w0, w9, w8, lsr #4
   184f4:	ret
   184f8:	ldrb	w8, [x0]
   184fc:	and	w0, w8, #0x10
   18500:	ret
   18504:	ldrb	w8, [x0]
   18508:	cmp	w8, #0x20
   1850c:	cset	w0, cc  // cc = lo, ul, last
   18510:	ret
   18514:	ldrb	w8, [x0]
   18518:	and	w0, w8, #0x20
   1851c:	ret
   18520:	ldrb	w8, [x0]
   18524:	and	w0, w8, #0x40
   18528:	ret
   1852c:	ldrb	w8, [x0]
   18530:	and	w0, w8, #0x80
   18534:	ret
   18538:	cbz	x1, 18554 <PyInit__decimal@@Base+0x11a40>
   1853c:	stp	x29, x30, [sp, #-16]!
   18540:	mov	x29, sp
   18544:	lsl	x2, x1, #3
   18548:	mov	w1, wzr
   1854c:	bl	6610 <memset@plt>
   18550:	ldp	x29, x30, [sp], #16
   18554:	ret
   18558:	stp	x29, x30, [sp, #-32]!
   1855c:	stp	x20, x19, [sp, #16]
   18560:	mov	x29, sp
   18564:	ldrb	w8, [x0]
   18568:	mov	x19, x0
   1856c:	adrp	x20, 42000 <PyInit__decimal@@Base+0x3b4ec>
   18570:	cmp	w8, #0x1f
   18574:	b.hi	18584 <PyInit__decimal@@Base+0x11a70>  // b.pmore
   18578:	ldr	x8, [x20, #1376]
   1857c:	ldr	x0, [x19, #40]
   18580:	blr	x8
   18584:	ldrb	w8, [x19]
   18588:	tbnz	w8, #4, 18598 <PyInit__decimal@@Base+0x11a84>
   1858c:	ldr	x8, [x20, #1376]
   18590:	mov	x0, x19
   18594:	blr	x8
   18598:	ldp	x20, x19, [sp, #16]
   1859c:	ldp	x29, x30, [sp], #32
   185a0:	ret
   185a4:	stp	x29, x30, [sp, #-16]!
   185a8:	mov	x29, sp
   185ac:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   185b0:	ldr	x9, [x8, #1344]
   185b4:	ldr	x8, [x0, #32]
   185b8:	cmp	x9, x1
   185bc:	csel	x1, x1, x9, lt  // lt = tstop
   185c0:	cmp	x1, x8
   185c4:	b.eq	185f0 <PyInit__decimal@@Base+0x11adc>  // b.none
   185c8:	ldrb	w9, [x0]
   185cc:	tbnz	w9, #5, 185dc <PyInit__decimal@@Base+0x11ac8>
   185d0:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   185d4:	ldp	x29, x30, [sp], #16
   185d8:	ret
   185dc:	cmp	x1, x8
   185e0:	b.le	185f0 <PyInit__decimal@@Base+0x11adc>
   185e4:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   185e8:	ldp	x29, x30, [sp], #16
   185ec:	ret
   185f0:	mov	w0, #0x1                   	// #1
   185f4:	ldp	x29, x30, [sp], #16
   185f8:	ret
   185fc:	stp	x29, x30, [sp, #-32]!
   18600:	stp	x20, x19, [sp, #16]
   18604:	mov	x29, sp
   18608:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1860c:	ldr	x9, [x8, #1344]
   18610:	ldr	x8, [x0, #32]
   18614:	mov	x19, x0
   18618:	cmp	x9, x1
   1861c:	csel	x20, x1, x9, lt  // lt = tstop
   18620:	cmp	x20, x8
   18624:	b.eq	1865c <PyInit__decimal@@Base+0x11b48>  // b.none
   18628:	ldrb	w9, [x19]
   1862c:	tbnz	w9, #5, 18644 <PyInit__decimal@@Base+0x11b30>
   18630:	mov	x0, x19
   18634:	mov	x1, x20
   18638:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1863c:	cbnz	w0, 1865c <PyInit__decimal@@Base+0x11b48>
   18640:	b	18674 <PyInit__decimal@@Base+0x11b60>
   18644:	cmp	x20, x8
   18648:	b.le	1865c <PyInit__decimal@@Base+0x11b48>
   1864c:	mov	x0, x19
   18650:	mov	x1, x20
   18654:	bl	17da4 <PyInit__decimal@@Base+0x11290>
   18658:	b	18674 <PyInit__decimal@@Base+0x11b60>
   1865c:	cbz	x20, 18670 <PyInit__decimal@@Base+0x11b5c>
   18660:	ldr	x0, [x19, #40]
   18664:	lsl	x2, x20, #3
   18668:	mov	w1, wzr
   1866c:	bl	6610 <memset@plt>
   18670:	mov	w0, #0x1                   	// #1
   18674:	ldp	x20, x19, [sp, #16]
   18678:	ldp	x29, x30, [sp], #32
   1867c:	ret
   18680:	sub	sp, sp, #0x30
   18684:	stp	x29, x30, [sp, #16]
   18688:	stp	x20, x19, [sp, #32]
   1868c:	add	x29, sp, #0x10
   18690:	ldrb	w8, [x0]
   18694:	tbnz	w8, #5, 186d8 <PyInit__decimal@@Base+0x11bc4>
   18698:	adrp	x20, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1869c:	ldr	x8, [x0, #32]
   186a0:	ldr	x1, [x20, #1344]
   186a4:	mov	x19, x0
   186a8:	cmp	x8, x1
   186ac:	b.le	186d8 <PyInit__decimal@@Base+0x11bc4>
   186b0:	sturb	wzr, [x29, #-4]
   186b4:	ldr	x0, [x19, #40]
   186b8:	sub	x3, x29, #0x4
   186bc:	mov	w2, #0x8                   	// #8
   186c0:	bl	17b6c <PyInit__decimal@@Base+0x11058>
   186c4:	str	x0, [x19, #40]
   186c8:	ldurb	w8, [x29, #-4]
   186cc:	cbnz	w8, 186d8 <PyInit__decimal@@Base+0x11bc4>
   186d0:	ldr	x8, [x20, #1344]
   186d4:	str	x8, [x19, #32]
   186d8:	ldp	x20, x19, [sp, #32]
   186dc:	ldp	x29, x30, [sp, #16]
   186e0:	add	sp, sp, #0x30
   186e4:	ret
   186e8:	stp	x29, x30, [sp, #-32]!
   186ec:	str	x19, [sp, #16]
   186f0:	mov	x29, sp
   186f4:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   186f8:	ldr	x9, [x8, #1344]
   186fc:	str	wzr, [x29, #28]
   18700:	ldr	x8, [x0, #32]
   18704:	mov	x19, x2
   18708:	cmp	x9, x1
   1870c:	csel	x1, x1, x9, lt  // lt = tstop
   18710:	cmp	x1, x8
   18714:	b.eq	18758 <PyInit__decimal@@Base+0x11c44>  // b.none
   18718:	ldrb	w9, [x0]
   1871c:	tbnz	w9, #5, 18740 <PyInit__decimal@@Base+0x11c2c>
   18720:	add	x2, x29, #0x1c
   18724:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   18728:	cbnz	w0, 18760 <PyInit__decimal@@Base+0x11c4c>
   1872c:	ldr	w1, [x29, #28]
   18730:	mov	x0, x19
   18734:	bl	13930 <PyInit__decimal@@Base+0xce1c>
   18738:	mov	w0, wzr
   1873c:	b	18764 <PyInit__decimal@@Base+0x11c50>
   18740:	cmp	x1, x8
   18744:	b.le	18758 <PyInit__decimal@@Base+0x11c44>
   18748:	add	x2, x29, #0x1c
   1874c:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   18750:	cbnz	w0, 18760 <PyInit__decimal@@Base+0x11c4c>
   18754:	b	1872c <PyInit__decimal@@Base+0x11c18>
   18758:	mov	w0, #0x1                   	// #1
   1875c:	cbz	w0, 1872c <PyInit__decimal@@Base+0x11c18>
   18760:	mov	w0, #0x1                   	// #1
   18764:	ldr	x19, [sp, #16]
   18768:	ldp	x29, x30, [sp], #32
   1876c:	ret
   18770:	stp	x29, x30, [sp, #-48]!
   18774:	str	x21, [sp, #16]
   18778:	stp	x20, x19, [sp, #32]
   1877c:	mov	x29, sp
   18780:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   18784:	ldr	x9, [x8, #1344]
   18788:	str	wzr, [x29, #28]
   1878c:	ldr	x8, [x0, #32]
   18790:	mov	x19, x0
   18794:	cmp	x9, x1
   18798:	csel	x21, x1, x9, lt  // lt = tstop
   1879c:	cmp	x21, x8
   187a0:	b.eq	187f8 <PyInit__decimal@@Base+0x11ce4>  // b.none
   187a4:	ldrb	w9, [x19]
   187a8:	mov	x20, x2
   187ac:	tbnz	w9, #5, 187c8 <PyInit__decimal@@Base+0x11cb4>
   187b0:	add	x2, x29, #0x1c
   187b4:	mov	x0, x19
   187b8:	mov	x1, x21
   187bc:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   187c0:	cbnz	w0, 187f8 <PyInit__decimal@@Base+0x11ce4>
   187c4:	b	187e4 <PyInit__decimal@@Base+0x11cd0>
   187c8:	cmp	x21, x8
   187cc:	b.le	187f8 <PyInit__decimal@@Base+0x11ce4>
   187d0:	add	x2, x29, #0x1c
   187d4:	mov	x0, x19
   187d8:	mov	x1, x21
   187dc:	bl	17da4 <PyInit__decimal@@Base+0x11290>
   187e0:	cbnz	w0, 1880c <PyInit__decimal@@Base+0x11cf8>
   187e4:	ldr	w1, [x29, #28]
   187e8:	mov	x0, x20
   187ec:	bl	13930 <PyInit__decimal@@Base+0xce1c>
   187f0:	mov	w0, wzr
   187f4:	b	18810 <PyInit__decimal@@Base+0x11cfc>
   187f8:	cbz	x21, 1880c <PyInit__decimal@@Base+0x11cf8>
   187fc:	ldr	x0, [x19, #40]
   18800:	lsl	x2, x21, #3
   18804:	mov	w1, wzr
   18808:	bl	6610 <memset@plt>
   1880c:	mov	w0, #0x1                   	// #1
   18810:	ldp	x20, x19, [sp, #32]
   18814:	ldr	x21, [sp, #16]
   18818:	ldp	x29, x30, [sp], #48
   1881c:	ret
   18820:	ldr	x9, [x0, #40]
   18824:	ldr	x8, [x0, #24]
   18828:	adrp	x10, 2e000 <PyInit__decimal@@Base+0x274ec>
   1882c:	add	x10, x10, #0x20
   18830:	ldr	x11, [x10, #72]
   18834:	add	x9, x9, x8, lsl #3
   18838:	ldur	x9, [x9, #-8]
   1883c:	cmp	x11, x9
   18840:	b.ls	1886c <PyInit__decimal@@Base+0x11d58>  // b.plast
   18844:	ldr	x11, [x10, #32]
   18848:	cmp	x11, x9
   1884c:	b.ls	18894 <PyInit__decimal@@Base+0x11d80>  // b.plast
   18850:	ldr	x11, [x10, #16]
   18854:	cmp	x11, x9
   18858:	b.ls	188d8 <PyInit__decimal@@Base+0x11dc4>  // b.plast
   1885c:	ldr	x10, [x10, #8]
   18860:	cmp	x10, x9
   18864:	mov	w9, #0x1                   	// #1
   18868:	b	1893c <PyInit__decimal@@Base+0x11e28>
   1886c:	ldr	x11, [x10, #112]
   18870:	cmp	x11, x9
   18874:	b.ls	188b0 <PyInit__decimal@@Base+0x11d9c>  // b.plast
   18878:	ldr	x11, [x10, #88]
   1887c:	cmp	x11, x9
   18880:	b.ls	188e8 <PyInit__decimal@@Base+0x11dd4>  // b.plast
   18884:	ldr	x10, [x10, #80]
   18888:	cmp	x10, x9
   1888c:	mov	w9, #0xa                   	// #10
   18890:	b	1893c <PyInit__decimal@@Base+0x11e28>
   18894:	ldr	x11, [x10, #48]
   18898:	cmp	x11, x9
   1889c:	b.ls	18904 <PyInit__decimal@@Base+0x11df0>  // b.plast
   188a0:	ldr	x10, [x10, #40]
   188a4:	cmp	x10, x9
   188a8:	mov	w9, #0x5                   	// #5
   188ac:	b	1893c <PyInit__decimal@@Base+0x11e28>
   188b0:	ldr	x11, [x10, #144]
   188b4:	cmp	x11, x9
   188b8:	b.ls	18920 <PyInit__decimal@@Base+0x11e0c>  // b.plast
   188bc:	ldr	x11, [x10, #128]
   188c0:	cmp	x11, x9
   188c4:	b.ls	18930 <PyInit__decimal@@Base+0x11e1c>  // b.plast
   188c8:	ldr	x10, [x10, #120]
   188cc:	cmp	x10, x9
   188d0:	mov	w9, #0xf                   	// #15
   188d4:	b	1893c <PyInit__decimal@@Base+0x11e28>
   188d8:	ldr	x10, [x10, #24]
   188dc:	cmp	x10, x9
   188e0:	mov	w9, #0x3                   	// #3
   188e4:	b	1893c <PyInit__decimal@@Base+0x11e28>
   188e8:	ldr	x11, [x10, #104]
   188ec:	cmp	x11, x9
   188f0:	b.ls	18954 <PyInit__decimal@@Base+0x11e40>  // b.plast
   188f4:	ldr	x10, [x10, #96]
   188f8:	cmp	x10, x9
   188fc:	mov	w9, #0xc                   	// #12
   18900:	b	1893c <PyInit__decimal@@Base+0x11e28>
   18904:	ldr	x11, [x10, #64]
   18908:	cmp	x11, x9
   1890c:	b.ls	1895c <PyInit__decimal@@Base+0x11e48>  // b.plast
   18910:	ldr	x10, [x10, #56]
   18914:	cmp	x10, x9
   18918:	mov	w9, #0x7                   	// #7
   1891c:	b	1893c <PyInit__decimal@@Base+0x11e28>
   18920:	ldr	x10, [x10, #152]
   18924:	cmp	x10, x9
   18928:	mov	w9, #0x13                  	// #19
   1892c:	b	1893c <PyInit__decimal@@Base+0x11e28>
   18930:	ldr	x10, [x10, #136]
   18934:	cmp	x10, x9
   18938:	mov	w9, #0x11                  	// #17
   1893c:	cinc	x9, x9, ls  // ls = plast
   18940:	mov	w10, #0x13                  	// #19
   18944:	madd	x8, x8, x10, x9
   18948:	sub	x8, x8, #0x13
   1894c:	str	x8, [x0, #16]
   18950:	ret
   18954:	mov	w9, #0xe                   	// #14
   18958:	b	18940 <PyInit__decimal@@Base+0x11e2c>
   1895c:	mov	w9, #0x9                   	// #9
   18960:	b	18940 <PyInit__decimal@@Base+0x11e2c>
   18964:	ldrb	w8, [x0]
   18968:	and	w8, w8, #0xfe
   1896c:	orr	w8, w8, w1
   18970:	strb	w8, [x0]
   18974:	ret
   18978:	ldrb	w8, [x1]
   1897c:	ldrb	w9, [x0]
   18980:	bfxil	w9, w8, #0, #1
   18984:	strb	w9, [x0]
   18988:	ret
   1898c:	ldrb	w8, [x0]
   18990:	and	w8, w8, #0xfffffff3
   18994:	orr	w8, w8, #0x2
   18998:	strb	w8, [x0]
   1899c:	ret
   189a0:	ldrb	w8, [x0]
   189a4:	and	w8, w8, #0xfffffff1
   189a8:	orr	w8, w8, #0x4
   189ac:	strb	w8, [x0]
   189b0:	ret
   189b4:	ldrb	w8, [x0]
   189b8:	and	w8, w8, #0xfffffff1
   189bc:	orr	w8, w8, #0x8
   189c0:	strb	w8, [x0]
   189c4:	ret
   189c8:	ldrb	w8, [x0]
   189cc:	orr	w8, w8, #0x1
   189d0:	strb	w8, [x0]
   189d4:	ret
   189d8:	ldrb	w8, [x0]
   189dc:	and	w8, w8, #0xfe
   189e0:	strb	w8, [x0]
   189e4:	ret
   189e8:	ldrb	w8, [x0]
   189ec:	and	w8, w8, #0xffffffef
   189f0:	strb	w8, [x0]
   189f4:	ret
   189f8:	ldrb	w8, [x0]
   189fc:	orr	w8, w8, #0x10
   18a00:	strb	w8, [x0]
   18a04:	ret
   18a08:	ldrb	w8, [x0]
   18a0c:	and	w8, w8, #0x1f
   18a10:	strb	w8, [x0]
   18a14:	ret
   18a18:	ldrb	w8, [x0]
   18a1c:	mov	w9, #0x20                  	// #32
   18a20:	bfxil	w9, w8, #0, #5
   18a24:	strb	w9, [x0]
   18a28:	ret
   18a2c:	ldrb	w8, [x0]
   18a30:	mov	w9, #0x40                  	// #64
   18a34:	bfxil	w9, w8, #0, #5
   18a38:	strb	w9, [x0]
   18a3c:	ret
   18a40:	ldrb	w8, [x0]
   18a44:	mov	w9, #0x80                  	// #128
   18a48:	bfxil	w9, w8, #0, #5
   18a4c:	strb	w9, [x0]
   18a50:	ret
   18a54:	ldrb	w8, [x0]
   18a58:	and	w8, w8, #0xf0
   18a5c:	strb	w8, [x0]
   18a60:	ret
   18a64:	ldrb	w8, [x0]
   18a68:	and	w8, w8, #0xf0
   18a6c:	orr	w8, w8, w1
   18a70:	strb	w8, [x0]
   18a74:	ret
   18a78:	ldrb	w8, [x1]
   18a7c:	ldrb	w9, [x0]
   18a80:	bfxil	w9, w8, #0, #4
   18a84:	strb	w9, [x0]
   18a88:	ret
   18a8c:	sub	sp, sp, #0x30
   18a90:	stp	x29, x30, [sp, #16]
   18a94:	stp	x20, x19, [sp, #32]
   18a98:	add	x29, sp, #0x10
   18a9c:	ldrb	w8, [x0]
   18aa0:	mov	x19, x0
   18aa4:	tbnz	w8, #5, 18ae4 <PyInit__decimal@@Base+0x11fd0>
   18aa8:	adrp	x20, 42000 <PyInit__decimal@@Base+0x3b4ec>
   18aac:	ldr	x8, [x19, #32]
   18ab0:	ldr	x1, [x20, #1344]
   18ab4:	cmp	x8, x1
   18ab8:	b.le	18ae4 <PyInit__decimal@@Base+0x11fd0>
   18abc:	sturb	wzr, [x29, #-4]
   18ac0:	ldr	x0, [x19, #40]
   18ac4:	sub	x3, x29, #0x4
   18ac8:	mov	w2, #0x8                   	// #8
   18acc:	bl	17b6c <PyInit__decimal@@Base+0x11058>
   18ad0:	str	x0, [x19, #40]
   18ad4:	ldurb	w8, [x29, #-4]
   18ad8:	cbnz	w8, 18ae4 <PyInit__decimal@@Base+0x11fd0>
   18adc:	ldr	x8, [x20, #1344]
   18ae0:	str	x8, [x19, #32]
   18ae4:	ldr	x8, [x19, #40]
   18ae8:	mov	w9, #0x1                   	// #1
   18aec:	stp	x9, x9, [x19, #16]
   18af0:	str	xzr, [x8]
   18af4:	ldp	x20, x19, [sp, #32]
   18af8:	ldp	x29, x30, [sp, #16]
   18afc:	add	sp, sp, #0x30
   18b00:	ret
   18b04:	sub	sp, sp, #0x50
   18b08:	stp	x29, x30, [sp, #16]
   18b0c:	str	x23, [sp, #32]
   18b10:	stp	x22, x21, [sp, #48]
   18b14:	stp	x20, x19, [sp, #64]
   18b18:	add	x29, sp, #0x10
   18b1c:	mov	x21, x2
   18b20:	ldr	x2, [x1]
   18b24:	mov	x20, x1
   18b28:	mov	x19, x0
   18b2c:	add	x0, x29, #0x18
   18b30:	add	x1, sp, #0x8
   18b34:	bl	181e0 <PyInit__decimal@@Base+0x116cc>
   18b38:	ldr	x22, [sp, #8]
   18b3c:	ldr	x8, [x29, #24]
   18b40:	adrp	x9, 42000 <PyInit__decimal@@Base+0x3b4ec>
   18b44:	ldr	x9, [x9, #1344]
   18b48:	cmp	x22, #0x0
   18b4c:	cinc	x23, x8, ne  // ne = any
   18b50:	str	x23, [x29, #24]
   18b54:	ldr	x8, [x19, #32]
   18b58:	cmp	x9, x23
   18b5c:	csel	x1, x23, x9, lt  // lt = tstop
   18b60:	cmp	x1, x8
   18b64:	b.eq	18ba0 <PyInit__decimal@@Base+0x1208c>  // b.none
   18b68:	ldrb	w9, [x19]
   18b6c:	tbnz	w9, #5, 18b84 <PyInit__decimal@@Base+0x12070>
   18b70:	mov	x0, x19
   18b74:	mov	x2, x21
   18b78:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   18b7c:	cbnz	w0, 18ba8 <PyInit__decimal@@Base+0x12094>
   18b80:	b	18c18 <PyInit__decimal@@Base+0x12104>
   18b84:	cmp	x1, x8
   18b88:	b.le	18ba0 <PyInit__decimal@@Base+0x1208c>
   18b8c:	mov	x0, x19
   18b90:	mov	x2, x21
   18b94:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   18b98:	cbnz	w0, 18ba8 <PyInit__decimal@@Base+0x12094>
   18b9c:	b	18c18 <PyInit__decimal@@Base+0x12104>
   18ba0:	mov	w0, #0x1                   	// #1
   18ba4:	cbz	w0, 18c18 <PyInit__decimal@@Base+0x12104>
   18ba8:	str	x23, [x19, #24]
   18bac:	ldr	x9, [x20]
   18bb0:	sub	x8, x23, #0x1
   18bb4:	cmp	x22, #0x1
   18bb8:	str	x9, [x19, #16]
   18bbc:	str	x8, [x29, #24]
   18bc0:	b.lt	18be4 <PyInit__decimal@@Base+0x120d0>  // b.tstop
   18bc4:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   18bc8:	add	x9, x9, #0x20
   18bcc:	ldr	x9, [x9, x22, lsl #3]
   18bd0:	ldr	x10, [x19, #40]
   18bd4:	sub	x11, x23, #0x2
   18bd8:	str	x11, [x29, #24]
   18bdc:	sub	x9, x9, #0x1
   18be0:	str	x9, [x10, x8, lsl #3]
   18be4:	ldr	x8, [x29, #24]
   18be8:	tbnz	x8, #63, 18c18 <PyInit__decimal@@Base+0x12104>
   18bec:	ldr	x9, [x19, #40]
   18bf0:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   18bf4:	movk	x10, #0x2304, lsl #32
   18bf8:	movk	x10, #0x8ac7, lsl #48
   18bfc:	sub	x11, x8, #0x1
   18c00:	cmp	x8, #0x0
   18c04:	str	x10, [x9, x8, lsl #3]
   18c08:	mov	x8, x11
   18c0c:	b.gt	18bfc <PyInit__decimal@@Base+0x120e8>
   18c10:	mov	x8, #0xffffffffffffffff    	// #-1
   18c14:	str	x8, [x29, #24]
   18c18:	ldp	x20, x19, [sp, #64]
   18c1c:	ldp	x22, x21, [sp, #48]
   18c20:	ldr	x23, [sp, #32]
   18c24:	ldp	x29, x30, [sp, #16]
   18c28:	add	sp, sp, #0x50
   18c2c:	ret
   18c30:	ldr	x9, [x0, #24]
   18c34:	cmp	x9, #0x1
   18c38:	b.lt	18c68 <PyInit__decimal@@Base+0x12154>  // b.tstop
   18c3c:	mov	x8, x0
   18c40:	ldr	x10, [x8, #40]
   18c44:	mov	x0, xzr
   18c48:	mov	x11, xzr
   18c4c:	ldr	x9, [x10, x11, lsl #3]
   18c50:	cbnz	x9, 18c70 <PyInit__decimal@@Base+0x1215c>
   18c54:	ldr	x9, [x8, #24]
   18c58:	add	x11, x11, #0x1
   18c5c:	add	x0, x0, #0x13
   18c60:	cmp	x11, x9
   18c64:	b.lt	18c4c <PyInit__decimal@@Base+0x12138>  // b.tstop
   18c68:	mov	x0, xzr
   18c6c:	b	18cb8 <PyInit__decimal@@Base+0x121a4>
   18c70:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   18c74:	movk	x8, #0xcccd
   18c78:	mul	x10, x9, x8
   18c7c:	mov	x11, #0x9999999999999999    	// #-7378697629483820647
   18c80:	ror	x10, x10, #1
   18c84:	movk	x11, #0x1999, lsl #48
   18c88:	cmp	x10, x11
   18c8c:	b.hi	18cb8 <PyInit__decimal@@Base+0x121a4>  // b.pmore
   18c90:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
   18c94:	movk	x10, #0x999a
   18c98:	movk	x10, #0x1999, lsl #48
   18c9c:	umulh	x9, x9, x8
   18ca0:	lsr	x9, x9, #3
   18ca4:	mul	x11, x9, x8
   18ca8:	ror	x11, x11, #1
   18cac:	cmp	x11, x10
   18cb0:	add	x0, x0, #0x1
   18cb4:	b.cc	18c9c <PyInit__decimal@@Base+0x12188>  // b.lo, b.ul, b.last
   18cb8:	ret
   18cbc:	stp	x29, x30, [sp, #-16]!
   18cc0:	mov	x29, sp
   18cc4:	ldrb	w8, [x0]
   18cc8:	tst	w8, #0xe
   18ccc:	b.eq	18cdc <PyInit__decimal@@Base+0x121c8>  // b.none
   18cd0:	mov	w0, wzr
   18cd4:	ldp	x29, x30, [sp], #16
   18cd8:	ret
   18cdc:	bl	18ce8 <PyInit__decimal@@Base+0x121d4>
   18ce0:	ldp	x29, x30, [sp], #16
   18ce4:	ret
   18ce8:	stp	x29, x30, [sp, #-32]!
   18cec:	str	x19, [sp, #16]
   18cf0:	mov	x29, sp
   18cf4:	ldr	x8, [x0, #40]
   18cf8:	ldr	x9, [x0, #24]
   18cfc:	add	x8, x8, x9, lsl #3
   18d00:	ldur	x8, [x8, #-8]
   18d04:	cbz	x8, 18d24 <PyInit__decimal@@Base+0x12210>
   18d08:	mov	x19, x0
   18d0c:	bl	18c30 <PyInit__decimal@@Base+0x1211c>
   18d10:	ldr	x8, [x19, #8]
   18d14:	add	x8, x8, x0
   18d18:	lsr	x8, x8, #63
   18d1c:	eor	w0, w8, #0x1
   18d20:	b	18d28 <PyInit__decimal@@Base+0x12214>
   18d24:	mov	w0, #0x1                   	// #1
   18d28:	ldr	x19, [sp, #16]
   18d2c:	ldp	x29, x30, [sp], #32
   18d30:	ret
   18d34:	sub	sp, sp, #0x30
   18d38:	stp	x29, x30, [sp, #16]
   18d3c:	str	x19, [sp, #32]
   18d40:	add	x29, sp, #0x10
   18d44:	ldr	x8, [x0, #40]
   18d48:	ldr	x9, [x0, #24]
   18d4c:	add	x9, x8, x9, lsl #3
   18d50:	ldur	x9, [x9, #-8]
   18d54:	cbz	x9, 18d68 <PyInit__decimal@@Base+0x12254>
   18d58:	ldr	x9, [x0, #8]
   18d5c:	mov	x19, x0
   18d60:	tbnz	x9, #63, 18d70 <PyInit__decimal@@Base+0x1225c>
   18d64:	cbz	x9, 18db0 <PyInit__decimal@@Base+0x1229c>
   18d68:	mov	w0, wzr
   18d6c:	b	18db8 <PyInit__decimal@@Base+0x122a4>
   18d70:	neg	x2, x9
   18d74:	add	x0, x29, #0x18
   18d78:	add	x1, sp, #0x8
   18d7c:	mov	w3, #0x13                  	// #19
   18d80:	bl	18dc8 <PyInit__decimal@@Base+0x122b4>
   18d84:	ldr	x8, [x19, #40]
   18d88:	ldr	x9, [x29, #24]
   18d8c:	ldr	x10, [sp, #8]
   18d90:	adrp	x11, 2e000 <PyInit__decimal@@Base+0x274ec>
   18d94:	add	x11, x11, #0x20
   18d98:	ldr	x8, [x8, x9, lsl #3]
   18d9c:	ldr	x9, [x11, x10, lsl #3]
   18da0:	udiv	x8, x8, x9
   18da4:	str	x8, [x29, #24]
   18da8:	and	w0, w8, #0x1
   18dac:	b	18db8 <PyInit__decimal@@Base+0x122a4>
   18db0:	ldr	w8, [x8]
   18db4:	and	w0, w8, #0x1
   18db8:	ldr	x19, [sp, #32]
   18dbc:	ldp	x29, x30, [sp, #16]
   18dc0:	add	sp, sp, #0x30
   18dc4:	ret
   18dc8:	udiv	x8, x2, x3
   18dcc:	str	x8, [x0]
   18dd0:	msub	x8, x8, x3, x2
   18dd4:	str	x8, [x1]
   18dd8:	ret
   18ddc:	stp	x29, x30, [sp, #-16]!
   18de0:	mov	x29, sp
   18de4:	bl	18d34 <PyInit__decimal@@Base+0x12220>
   18de8:	cmp	w0, #0x0
   18dec:	cset	w0, eq  // eq = none
   18df0:	ldp	x29, x30, [sp], #16
   18df4:	ret
   18df8:	sub	sp, sp, #0x40
   18dfc:	stp	x29, x30, [sp, #16]
   18e00:	stp	x22, x21, [sp, #32]
   18e04:	stp	x20, x19, [sp, #48]
   18e08:	add	x29, sp, #0x10
   18e0c:	ldrb	w8, [x0]
   18e10:	mov	w20, w2
   18e14:	mov	x19, x0
   18e18:	mov	w21, w1
   18e1c:	tbnz	w8, #5, 18e5c <PyInit__decimal@@Base+0x12348>
   18e20:	adrp	x22, 42000 <PyInit__decimal@@Base+0x3b4ec>
   18e24:	ldr	x8, [x19, #32]
   18e28:	ldr	x1, [x22, #1344]
   18e2c:	cmp	x8, x1
   18e30:	b.le	18e5c <PyInit__decimal@@Base+0x12348>
   18e34:	sturb	wzr, [x29, #-4]
   18e38:	ldr	x0, [x19, #40]
   18e3c:	sub	x3, x29, #0x4
   18e40:	mov	w2, #0x8                   	// #8
   18e44:	bl	17b6c <PyInit__decimal@@Base+0x11058>
   18e48:	str	x0, [x19, #40]
   18e4c:	ldurb	w8, [x29, #-4]
   18e50:	cbnz	w8, 18e5c <PyInit__decimal@@Base+0x12348>
   18e54:	ldr	x8, [x22, #1344]
   18e58:	str	x8, [x19, #32]
   18e5c:	ldrb	w8, [x19]
   18e60:	orr	w9, w20, w21
   18e64:	stp	xzr, xzr, [x19, #16]
   18e68:	str	xzr, [x19, #8]
   18e6c:	and	w8, w8, #0xf0
   18e70:	orr	w8, w9, w8
   18e74:	strb	w8, [x19]
   18e78:	ldp	x20, x19, [sp, #48]
   18e7c:	ldp	x22, x21, [sp, #32]
   18e80:	ldp	x29, x30, [sp, #16]
   18e84:	add	sp, sp, #0x40
   18e88:	ret
   18e8c:	sub	sp, sp, #0x40
   18e90:	stp	x29, x30, [sp, #16]
   18e94:	stp	x22, x21, [sp, #32]
   18e98:	stp	x20, x19, [sp, #48]
   18e9c:	add	x29, sp, #0x10
   18ea0:	ldrb	w8, [x0]
   18ea4:	mov	x19, x2
   18ea8:	mov	x20, x0
   18eac:	mov	w21, w1
   18eb0:	tbnz	w8, #5, 18ef0 <PyInit__decimal@@Base+0x123dc>
   18eb4:	adrp	x22, 42000 <PyInit__decimal@@Base+0x3b4ec>
   18eb8:	ldr	x8, [x20, #32]
   18ebc:	ldr	x1, [x22, #1344]
   18ec0:	cmp	x8, x1
   18ec4:	b.le	18ef0 <PyInit__decimal@@Base+0x123dc>
   18ec8:	sturb	wzr, [x29, #-4]
   18ecc:	ldr	x0, [x20, #40]
   18ed0:	sub	x3, x29, #0x4
   18ed4:	mov	w2, #0x8                   	// #8
   18ed8:	bl	17b6c <PyInit__decimal@@Base+0x11058>
   18edc:	str	x0, [x20, #40]
   18ee0:	ldurb	w8, [x29, #-4]
   18ee4:	cbnz	w8, 18ef0 <PyInit__decimal@@Base+0x123dc>
   18ee8:	ldr	x8, [x22, #1344]
   18eec:	str	x8, [x20, #32]
   18ef0:	ldrb	w8, [x20]
   18ef4:	stp	xzr, xzr, [x20, #16]
   18ef8:	str	xzr, [x20, #8]
   18efc:	and	w8, w8, #0xf0
   18f00:	orr	w8, w8, #0x4
   18f04:	strb	w8, [x20]
   18f08:	ldr	w8, [x19]
   18f0c:	orr	w8, w8, w21
   18f10:	str	w8, [x19]
   18f14:	ldp	x20, x19, [sp, #48]
   18f18:	ldp	x22, x21, [sp, #32]
   18f1c:	ldp	x29, x30, [sp, #16]
   18f20:	add	sp, sp, #0x40
   18f24:	ret
   18f28:	stp	x29, x30, [sp, #-48]!
   18f2c:	str	x21, [sp, #16]
   18f30:	stp	x20, x19, [sp, #32]
   18f34:	mov	x29, sp
   18f38:	cmp	x1, #0x0
   18f3c:	mov	x19, x3
   18f40:	mov	x20, x2
   18f44:	cneg	x2, x1, mi  // mi = first
   18f48:	lsr	x1, x1, #63
   18f4c:	mov	x3, xzr
   18f50:	mov	x21, x0
   18f54:	bl	18f78 <PyInit__decimal@@Base+0x12464>
   18f58:	mov	x0, x21
   18f5c:	mov	x1, x20
   18f60:	mov	x2, x19
   18f64:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   18f68:	ldp	x20, x19, [sp, #32]
   18f6c:	ldr	x21, [sp, #16]
   18f70:	ldp	x29, x30, [sp], #48
   18f74:	ret
   18f78:	stp	x29, x30, [sp, #-32]!
   18f7c:	str	x19, [sp, #16]
   18f80:	mov	x29, sp
   18f84:	ldrb	w9, [x0]
   18f88:	ldr	x8, [x0, #40]
   18f8c:	str	x3, [x0, #8]
   18f90:	mov	x3, #0x89e80000            	// #2313682944
   18f94:	and	w9, w9, #0xf0
   18f98:	orr	w9, w9, w1
   18f9c:	movk	x3, #0x2304, lsl #32
   18fa0:	mov	x19, x0
   18fa4:	strb	w9, [x0]
   18fa8:	add	x0, x8, #0x8
   18fac:	movk	x3, #0x8ac7, lsl #48
   18fb0:	mov	x1, x8
   18fb4:	bl	18dc8 <PyInit__decimal@@Base+0x122b4>
   18fb8:	ldr	x8, [x19, #40]
   18fbc:	mov	x0, x19
   18fc0:	ldr	x8, [x8, #8]
   18fc4:	cmp	x8, #0x0
   18fc8:	mov	w8, #0x1                   	// #1
   18fcc:	cinc	x8, x8, ne  // ne = any
   18fd0:	str	x8, [x19, #24]
   18fd4:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   18fd8:	ldr	x19, [sp, #16]
   18fdc:	ldp	x29, x30, [sp], #32
   18fe0:	ret
   18fe4:	stp	x29, x30, [sp, #-48]!
   18fe8:	str	x21, [sp, #16]
   18fec:	stp	x20, x19, [sp, #32]
   18ff0:	mov	x29, sp
   18ff4:	ldrb	w8, [x0]
   18ff8:	mov	x19, x0
   18ffc:	mov	x20, x1
   19000:	tst	w8, #0xe
   19004:	b.eq	19020 <PyInit__decimal@@Base+0x1250c>  // b.none
   19008:	tst	w8, #0xc
   1900c:	b.eq	19040 <PyInit__decimal@@Base+0x1252c>  // b.none
   19010:	mov	x0, x19
   19014:	mov	x1, x20
   19018:	bl	19670 <PyInit__decimal@@Base+0x12b5c>
   1901c:	b	19040 <PyInit__decimal@@Base+0x1252c>
   19020:	mov	x0, x19
   19024:	mov	x1, x20
   19028:	mov	x21, x2
   1902c:	bl	19864 <PyInit__decimal@@Base+0x12d50>
   19030:	mov	x0, x19
   19034:	mov	x1, x20
   19038:	mov	x2, x21
   1903c:	bl	19aa8 <PyInit__decimal@@Base+0x12f94>
   19040:	ldp	x20, x19, [sp, #32]
   19044:	ldr	x21, [sp, #16]
   19048:	ldp	x29, x30, [sp], #48
   1904c:	ret
   19050:	stp	x29, x30, [sp, #-48]!
   19054:	str	x21, [sp, #16]
   19058:	stp	x20, x19, [sp, #32]
   1905c:	mov	x29, sp
   19060:	mov	x19, x3
   19064:	mov	x20, x2
   19068:	mov	x2, x1
   1906c:	mov	w1, wzr
   19070:	mov	x3, xzr
   19074:	mov	x21, x0
   19078:	bl	18f78 <PyInit__decimal@@Base+0x12464>
   1907c:	mov	x0, x21
   19080:	mov	x1, x20
   19084:	mov	x2, x19
   19088:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1908c:	ldp	x20, x19, [sp, #32]
   19090:	ldr	x21, [sp, #16]
   19094:	ldp	x29, x30, [sp], #48
   19098:	ret
   1909c:	stp	x29, x30, [sp, #-16]!
   190a0:	mov	x29, sp
   190a4:	sxtw	x1, w1
   190a8:	bl	18f28 <PyInit__decimal@@Base+0x12414>
   190ac:	ldp	x29, x30, [sp], #16
   190b0:	ret
   190b4:	stp	x29, x30, [sp, #-16]!
   190b8:	mov	x29, sp
   190bc:	mov	w1, w1
   190c0:	bl	19050 <PyInit__decimal@@Base+0x1253c>
   190c4:	ldp	x29, x30, [sp], #16
   190c8:	ret
   190cc:	stp	x29, x30, [sp, #-16]!
   190d0:	mov	x29, sp
   190d4:	bl	18f28 <PyInit__decimal@@Base+0x12414>
   190d8:	ldp	x29, x30, [sp], #16
   190dc:	ret
   190e0:	stp	x29, x30, [sp, #-16]!
   190e4:	mov	x29, sp
   190e8:	bl	19050 <PyInit__decimal@@Base+0x1253c>
   190ec:	ldp	x29, x30, [sp], #16
   190f0:	ret
   190f4:	stp	x29, x30, [sp, #-64]!
   190f8:	str	x23, [sp, #16]
   190fc:	stp	x22, x21, [sp, #32]
   19100:	stp	x20, x19, [sp, #48]
   19104:	mov	x29, sp
   19108:	ldrb	w8, [x0]
   1910c:	mov	x19, x3
   19110:	mov	x20, x2
   19114:	mov	x21, x0
   19118:	mov	x22, x1
   1911c:	tbnz	w8, #5, 1915c <PyInit__decimal@@Base+0x12648>
   19120:	adrp	x23, 42000 <PyInit__decimal@@Base+0x3b4ec>
   19124:	ldr	x8, [x21, #32]
   19128:	ldr	x1, [x23, #1344]
   1912c:	cmp	x8, x1
   19130:	b.le	1915c <PyInit__decimal@@Base+0x12648>
   19134:	strb	wzr, [x29, #28]
   19138:	ldr	x0, [x21, #40]
   1913c:	add	x3, x29, #0x1c
   19140:	mov	w2, #0x8                   	// #8
   19144:	bl	17b6c <PyInit__decimal@@Base+0x11058>
   19148:	str	x0, [x21, #40]
   1914c:	ldrb	w8, [x29, #28]
   19150:	cbnz	w8, 1915c <PyInit__decimal@@Base+0x12648>
   19154:	ldr	x8, [x23, #1344]
   19158:	str	x8, [x21, #32]
   1915c:	mov	x0, x21
   19160:	mov	x1, x22
   19164:	mov	x2, x20
   19168:	mov	x3, x19
   1916c:	bl	18f28 <PyInit__decimal@@Base+0x12414>
   19170:	ldp	x20, x19, [sp, #48]
   19174:	ldp	x22, x21, [sp, #32]
   19178:	ldr	x23, [sp, #16]
   1917c:	ldp	x29, x30, [sp], #64
   19180:	ret
   19184:	stp	x29, x30, [sp, #-48]!
   19188:	str	x21, [sp, #16]
   1918c:	stp	x20, x19, [sp, #32]
   19190:	mov	x29, sp
   19194:	mov	x19, x3
   19198:	mov	x20, x2
   1919c:	mov	x2, x1
   191a0:	mov	w1, wzr
   191a4:	mov	x3, xzr
   191a8:	mov	x21, x0
   191ac:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   191b0:	mov	x0, x21
   191b4:	mov	x1, x20
   191b8:	mov	x2, x19
   191bc:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   191c0:	ldp	x20, x19, [sp, #32]
   191c4:	ldr	x21, [sp, #16]
   191c8:	ldp	x29, x30, [sp], #48
   191cc:	ret
   191d0:	stp	x29, x30, [sp, #-64]!
   191d4:	str	x23, [sp, #16]
   191d8:	stp	x22, x21, [sp, #32]
   191dc:	stp	x20, x19, [sp, #48]
   191e0:	mov	x29, sp
   191e4:	ldrb	w8, [x0]
   191e8:	mov	x21, x3
   191ec:	mov	x20, x2
   191f0:	mov	x19, x0
   191f4:	mov	w22, w1
   191f8:	tbnz	w8, #5, 19238 <PyInit__decimal@@Base+0x12724>
   191fc:	adrp	x23, 42000 <PyInit__decimal@@Base+0x3b4ec>
   19200:	ldr	x8, [x19, #32]
   19204:	ldr	x1, [x23, #1344]
   19208:	cmp	x8, x1
   1920c:	b.le	19238 <PyInit__decimal@@Base+0x12724>
   19210:	strb	wzr, [x29, #28]
   19214:	ldr	x0, [x19, #40]
   19218:	add	x3, x29, #0x1c
   1921c:	mov	w2, #0x8                   	// #8
   19220:	bl	17b6c <PyInit__decimal@@Base+0x11058>
   19224:	str	x0, [x19, #40]
   19228:	ldrb	w8, [x29, #28]
   1922c:	cbnz	w8, 19238 <PyInit__decimal@@Base+0x12724>
   19230:	ldr	x8, [x23, #1344]
   19234:	str	x8, [x19, #32]
   19238:	ldrb	w8, [x19]
   1923c:	ldr	x1, [x19, #40]
   19240:	mov	x3, #0x89e80000            	// #2313682944
   19244:	movk	x3, #0x2304, lsl #32
   19248:	and	w8, w8, #0xf0
   1924c:	orr	w8, w8, w22
   19250:	add	x0, x1, #0x8
   19254:	movk	x3, #0x8ac7, lsl #48
   19258:	mov	x2, x20
   1925c:	str	x21, [x19, #8]
   19260:	strb	w8, [x19]
   19264:	bl	18dc8 <PyInit__decimal@@Base+0x122b4>
   19268:	ldr	x8, [x19, #40]
   1926c:	mov	x0, x19
   19270:	ldr	x8, [x8, #8]
   19274:	cmp	x8, #0x0
   19278:	mov	w8, #0x1                   	// #1
   1927c:	cinc	x8, x8, ne  // ne = any
   19280:	str	x8, [x19, #24]
   19284:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   19288:	ldp	x20, x19, [sp, #48]
   1928c:	ldp	x22, x21, [sp, #32]
   19290:	ldr	x23, [sp, #16]
   19294:	ldp	x29, x30, [sp], #64
   19298:	ret
   1929c:	stp	x29, x30, [sp, #-16]!
   192a0:	mov	x29, sp
   192a4:	sxtw	x1, w1
   192a8:	bl	190f4 <PyInit__decimal@@Base+0x125e0>
   192ac:	ldp	x29, x30, [sp], #16
   192b0:	ret
   192b4:	stp	x29, x30, [sp, #-16]!
   192b8:	mov	x29, sp
   192bc:	mov	w1, w1
   192c0:	bl	19184 <PyInit__decimal@@Base+0x12670>
   192c4:	ldp	x29, x30, [sp], #16
   192c8:	ret
   192cc:	stp	x29, x30, [sp, #-16]!
   192d0:	mov	x29, sp
   192d4:	bl	190f4 <PyInit__decimal@@Base+0x125e0>
   192d8:	ldp	x29, x30, [sp], #16
   192dc:	ret
   192e0:	stp	x29, x30, [sp, #-16]!
   192e4:	mov	x29, sp
   192e8:	bl	19184 <PyInit__decimal@@Base+0x12670>
   192ec:	ldp	x29, x30, [sp], #16
   192f0:	ret
   192f4:	stp	x29, x30, [sp, #-16]!
   192f8:	mov	x29, sp
   192fc:	mov	x2, x1
   19300:	mov	x1, x0
   19304:	mov	w0, #0x1                   	// #1
   19308:	bl	19314 <PyInit__decimal@@Base+0x12800>
   1930c:	ldp	x29, x30, [sp], #16
   19310:	ret
   19314:	sub	sp, sp, #0x80
   19318:	stp	x29, x30, [sp, #80]
   1931c:	str	x21, [sp, #96]
   19320:	stp	x20, x19, [sp, #112]
   19324:	add	x29, sp, #0x50
   19328:	ldrb	w8, [x1]
   1932c:	mov	x19, x2
   19330:	tst	w8, #0xe
   19334:	b.eq	1935c <PyInit__decimal@@Base+0x12848>  // b.none
   19338:	ldr	w8, [x19]
   1933c:	mov	x0, #0xffffffffffffffff    	// #-1
   19340:	orr	w8, w8, #0x100
   19344:	str	w8, [x19]
   19348:	ldp	x20, x19, [sp, #112]
   1934c:	ldr	x21, [sp, #96]
   19350:	ldp	x29, x30, [sp, #80]
   19354:	add	sp, sp, #0x80
   19358:	ret
   1935c:	ldr	x9, [x1, #40]
   19360:	ldr	x10, [x1, #24]
   19364:	mov	x20, x1
   19368:	add	x9, x9, x10, lsl #3
   1936c:	ldur	x9, [x9, #-8]
   19370:	cbz	x9, 1941c <PyInit__decimal@@Base+0x12908>
   19374:	cbz	w0, 1937c <PyInit__decimal@@Base+0x12868>
   19378:	tbnz	w8, #0, 19338 <PyInit__decimal@@Base+0x12824>
   1937c:	ldp	x21, x8, [x20, #8]
   19380:	add	x8, x21, x8
   19384:	cmp	x8, #0x15
   19388:	b.ge	19338 <PyInit__decimal@@Base+0x12824>  // b.tcont
   1938c:	tbz	x21, #63, 193c8 <PyInit__decimal@@Base+0x128b4>
   19390:	mov	x0, x20
   19394:	bl	18ce8 <PyInit__decimal@@Base+0x121d4>
   19398:	cbz	w0, 19338 <PyInit__decimal@@Base+0x12824>
   1939c:	add	x8, sp, #0x10
   193a0:	mov	w9, #0x30                  	// #48
   193a4:	mov	w10, #0x2                   	// #2
   193a8:	neg	x2, x21
   193ac:	add	x0, sp, #0x20
   193b0:	mov	x1, x20
   193b4:	strb	w9, [sp, #32]
   193b8:	stp	x10, x8, [sp, #64]
   193bc:	bl	234c4 <PyInit__decimal@@Base+0x1c9b0>
   193c0:	add	x20, sp, #0x20
   193c4:	str	xzr, [sp, #40]
   193c8:	add	x0, sp, #0x8
   193cc:	add	x1, x29, #0x18
   193d0:	mov	w3, #0x14                  	// #20
   193d4:	mov	x2, x20
   193d8:	bl	2358c <PyInit__decimal@@Base+0x1ca78>
   193dc:	ldr	x8, [sp, #8]
   193e0:	cbnz	x8, 19338 <PyInit__decimal@@Base+0x12824>
   193e4:	ldr	x8, [x20, #8]
   193e8:	cmp	x8, #0x1
   193ec:	b.lt	19414 <PyInit__decimal@@Base+0x12900>  // b.tstop
   193f0:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   193f4:	add	x9, x9, #0x20
   193f8:	ldr	x2, [x29, #24]
   193fc:	ldr	x3, [x9, x8, lsl #3]
   19400:	add	x0, sp, #0x8
   19404:	add	x1, x29, #0x18
   19408:	bl	23694 <PyInit__decimal@@Base+0x1cb80>
   1940c:	ldr	x8, [sp, #8]
   19410:	cbnz	x8, 19338 <PyInit__decimal@@Base+0x12824>
   19414:	ldr	x0, [x29, #24]
   19418:	b	19348 <PyInit__decimal@@Base+0x12834>
   1941c:	mov	x0, xzr
   19420:	b	19348 <PyInit__decimal@@Base+0x12834>
   19424:	stp	x29, x30, [sp, #-16]!
   19428:	mov	x29, sp
   1942c:	mov	x2, x1
   19430:	mov	x1, x0
   19434:	mov	w0, wzr
   19438:	bl	19314 <PyInit__decimal@@Base+0x12800>
   1943c:	ldp	x29, x30, [sp], #16
   19440:	ret
   19444:	stp	x29, x30, [sp, #-32]!
   19448:	stp	x20, x19, [sp, #16]
   1944c:	mov	x29, sp
   19450:	mov	x19, x1
   19454:	mov	x20, x0
   19458:	bl	19424 <PyInit__decimal@@Base+0x12910>
   1945c:	ldr	w9, [x19]
   19460:	tbnz	w9, #8, 19494 <PyInit__decimal@@Base+0x12980>
   19464:	ldrb	w10, [x20]
   19468:	mov	x8, x0
   1946c:	tbnz	x0, #63, 1947c <PyInit__decimal@@Base+0x12968>
   19470:	tst	w10, #0x1
   19474:	cneg	x0, x8, ne  // ne = any
   19478:	b	19498 <PyInit__decimal@@Base+0x12984>
   1947c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   19480:	cmp	x8, x0
   19484:	b.ne	1948c <PyInit__decimal@@Base+0x12978>  // b.any
   19488:	tbnz	w10, #0, 19498 <PyInit__decimal@@Base+0x12984>
   1948c:	orr	w8, w9, #0x100
   19490:	str	w8, [x19]
   19494:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   19498:	ldp	x20, x19, [sp, #16]
   1949c:	ldp	x29, x30, [sp], #32
   194a0:	ret
   194a4:	stp	x29, x30, [sp, #-16]!
   194a8:	mov	x29, sp
   194ac:	bl	192f4 <PyInit__decimal@@Base+0x127e0>
   194b0:	ldp	x29, x30, [sp], #16
   194b4:	ret
   194b8:	stp	x29, x30, [sp, #-16]!
   194bc:	mov	x29, sp
   194c0:	bl	19444 <PyInit__decimal@@Base+0x12930>
   194c4:	ldp	x29, x30, [sp], #16
   194c8:	ret
   194cc:	stp	x29, x30, [sp, #-32]!
   194d0:	str	x19, [sp, #16]
   194d4:	mov	x29, sp
   194d8:	mov	x19, x1
   194dc:	bl	192f4 <PyInit__decimal@@Base+0x127e0>
   194e0:	ldr	w8, [x19]
   194e4:	tbnz	w8, #8, 194f8 <PyInit__decimal@@Base+0x129e4>
   194e8:	lsr	x9, x0, #32
   194ec:	cbz	x9, 194fc <PyInit__decimal@@Base+0x129e8>
   194f0:	orr	w8, w8, #0x100
   194f4:	str	w8, [x19]
   194f8:	mov	w0, #0xffffffff            	// #-1
   194fc:	ldr	x19, [sp, #16]
   19500:	ldp	x29, x30, [sp], #32
   19504:	ret
   19508:	stp	x29, x30, [sp, #-32]!
   1950c:	str	x19, [sp, #16]
   19510:	mov	x29, sp
   19514:	mov	x19, x1
   19518:	bl	19444 <PyInit__decimal@@Base+0x12930>
   1951c:	ldr	w8, [x19]
   19520:	tbnz	w8, #8, 19534 <PyInit__decimal@@Base+0x12a20>
   19524:	cmp	x0, w0, sxtw
   19528:	b.eq	19538 <PyInit__decimal@@Base+0x12a24>  // b.none
   1952c:	orr	w8, w8, #0x100
   19530:	str	w8, [x19]
   19534:	mov	w0, #0x7fffffff            	// #2147483647
   19538:	ldr	x19, [sp, #16]
   1953c:	ldp	x29, x30, [sp], #32
   19540:	ret
   19544:	stp	x29, x30, [sp, #-32]!
   19548:	stp	x20, x19, [sp, #16]
   1954c:	mov	x29, sp
   19550:	ldrb	w8, [x1]
   19554:	tst	w8, #0xc
   19558:	b.eq	195a0 <PyInit__decimal@@Base+0x12a8c>  // b.none
   1955c:	ldr	w9, [x3]
   19560:	and	w8, w8, #0x8
   19564:	mov	x19, x2
   19568:	mov	x2, x3
   1956c:	orr	w8, w9, w8, lsl #5
   19570:	mov	x20, x0
   19574:	str	w8, [x3]
   19578:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1957c:	ldrb	w8, [x20]
   19580:	mov	x0, x20
   19584:	mov	x1, x19
   19588:	and	w8, w8, #0xfffffff1
   1958c:	orr	w8, w8, #0x4
   19590:	strb	w8, [x20]
   19594:	bl	19670 <PyInit__decimal@@Base+0x12b5c>
   19598:	mov	w0, #0x1                   	// #1
   1959c:	b	195a4 <PyInit__decimal@@Base+0x12a90>
   195a0:	mov	w0, wzr
   195a4:	ldp	x20, x19, [sp, #16]
   195a8:	ldp	x29, x30, [sp], #32
   195ac:	ret
   195b0:	stp	x29, x30, [sp, #-32]!
   195b4:	stp	x20, x19, [sp, #16]
   195b8:	mov	x29, sp
   195bc:	cmp	x0, x1
   195c0:	b.eq	19660 <PyInit__decimal@@Base+0x12b4c>  // b.none
   195c4:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   195c8:	ldr	x9, [x1, #24]
   195cc:	ldr	x10, [x8, #1344]
   195d0:	ldr	x8, [x0, #32]
   195d4:	mov	x19, x1
   195d8:	mov	x20, x0
   195dc:	cmp	x10, x9
   195e0:	csel	x1, x9, x10, lt  // lt = tstop
   195e4:	cmp	x1, x8
   195e8:	b.eq	1961c <PyInit__decimal@@Base+0x12b08>  // b.none
   195ec:	ldrb	w9, [x20]
   195f0:	tbnz	w9, #5, 19604 <PyInit__decimal@@Base+0x12af0>
   195f4:	mov	x0, x20
   195f8:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   195fc:	cbnz	w0, 19624 <PyInit__decimal@@Base+0x12b10>
   19600:	b	19664 <PyInit__decimal@@Base+0x12b50>
   19604:	cmp	x1, x8
   19608:	b.le	1961c <PyInit__decimal@@Base+0x12b08>
   1960c:	mov	x0, x20
   19610:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   19614:	cbnz	w0, 19624 <PyInit__decimal@@Base+0x12b10>
   19618:	b	19664 <PyInit__decimal@@Base+0x12b50>
   1961c:	mov	w0, #0x1                   	// #1
   19620:	cbz	w0, 19664 <PyInit__decimal@@Base+0x12b50>
   19624:	ldrb	w8, [x19]
   19628:	ldrb	w9, [x20]
   1962c:	ldr	x0, [x20, #40]
   19630:	bfxil	w9, w8, #0, #4
   19634:	strb	w9, [x20]
   19638:	ldr	x8, [x19, #8]
   1963c:	str	x8, [x20, #8]
   19640:	ldr	x8, [x19, #16]
   19644:	str	x8, [x20, #16]
   19648:	ldr	x8, [x19, #24]
   1964c:	str	x8, [x20, #24]
   19650:	ldr	x8, [x19, #24]
   19654:	ldr	x1, [x19, #40]
   19658:	lsl	x2, x8, #3
   1965c:	bl	6420 <memcpy@plt>
   19660:	mov	w0, #0x1                   	// #1
   19664:	ldp	x20, x19, [sp, #16]
   19668:	ldp	x29, x30, [sp], #32
   1966c:	ret
   19670:	sub	sp, sp, #0x40
   19674:	stp	x29, x30, [sp, #16]
   19678:	str	x21, [sp, #32]
   1967c:	stp	x20, x19, [sp, #48]
   19680:	add	x29, sp, #0x10
   19684:	ldr	x8, [x0, #24]
   19688:	cmp	x8, #0x1
   1968c:	b.lt	197bc <PyInit__decimal@@Base+0x12ca8>  // b.tstop
   19690:	ldr	x8, [x1]
   19694:	ldrsw	x9, [x1, #40]
   19698:	mov	x21, x0
   1969c:	ldr	x10, [x21, #16]!
   196a0:	mov	x19, x0
   196a4:	sub	x2, x8, x9
   196a8:	cmp	x10, x2
   196ac:	b.le	197bc <PyInit__decimal@@Base+0x12ca8>
   196b0:	cbz	x2, 1973c <PyInit__decimal@@Base+0x12c28>
   196b4:	add	x0, sp, #0x8
   196b8:	mov	x1, sp
   196bc:	bl	181e0 <PyInit__decimal@@Base+0x116cc>
   196c0:	ldp	x8, x9, [sp]
   196c4:	cmp	x8, #0x0
   196c8:	cinc	x1, x9, ne  // ne = any
   196cc:	str	x1, [sp, #8]
   196d0:	cbz	x8, 196f8 <PyInit__decimal@@Base+0x12be4>
   196d4:	ldr	x9, [x19, #40]
   196d8:	adrp	x10, 2e000 <PyInit__decimal@@Base+0x274ec>
   196dc:	add	x10, x10, #0x20
   196e0:	ldr	x8, [x10, x8, lsl #3]
   196e4:	add	x9, x9, x1, lsl #3
   196e8:	ldur	x10, [x9, #-8]
   196ec:	udiv	x11, x10, x8
   196f0:	msub	x8, x11, x8, x10
   196f4:	stur	x8, [x9, #-8]
   196f8:	ldr	x0, [x19, #40]
   196fc:	bl	1abf0 <PyInit__decimal@@Base+0x140dc>
   19700:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   19704:	ldr	x9, [x8, #1344]
   19708:	str	x0, [sp, #8]
   1970c:	ldr	x8, [x19, #32]
   19710:	mov	x20, x0
   19714:	cmp	x9, x0
   19718:	csel	x1, x0, x9, lt  // lt = tstop
   1971c:	cmp	x1, x8
   19720:	b.eq	19798 <PyInit__decimal@@Base+0x12c84>  // b.none
   19724:	ldrb	w9, [x19]
   19728:	tbnz	w9, #5, 19784 <PyInit__decimal@@Base+0x12c70>
   1972c:	add	x2, x29, #0x1c
   19730:	mov	x0, x19
   19734:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   19738:	b	19798 <PyInit__decimal@@Base+0x12c84>
   1973c:	ldrb	w8, [x19]
   19740:	tbnz	w8, #5, 197b8 <PyInit__decimal@@Base+0x12ca4>
   19744:	adrp	x20, 42000 <PyInit__decimal@@Base+0x3b4ec>
   19748:	ldr	x8, [x19, #32]
   1974c:	ldr	x1, [x20, #1344]
   19750:	cmp	x8, x1
   19754:	b.le	197b8 <PyInit__decimal@@Base+0x12ca4>
   19758:	strb	wzr, [sp, #8]
   1975c:	ldr	x0, [x19, #40]
   19760:	add	x3, sp, #0x8
   19764:	mov	w2, #0x8                   	// #8
   19768:	bl	17b6c <PyInit__decimal@@Base+0x11058>
   1976c:	str	x0, [x19, #40]
   19770:	ldrb	w8, [sp, #8]
   19774:	cbnz	w8, 197b8 <PyInit__decimal@@Base+0x12ca4>
   19778:	ldr	x8, [x20, #1344]
   1977c:	str	x8, [x19, #32]
   19780:	b	197b8 <PyInit__decimal@@Base+0x12ca4>
   19784:	cmp	x1, x8
   19788:	b.le	19798 <PyInit__decimal@@Base+0x12c84>
   1978c:	add	x2, x29, #0x1c
   19790:	mov	x0, x19
   19794:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   19798:	mov	x0, x19
   1979c:	str	x20, [x19, #24]
   197a0:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   197a4:	ldr	x8, [x19, #40]
   197a8:	ldr	x9, [x19, #24]
   197ac:	add	x8, x8, x9, lsl #3
   197b0:	ldur	x8, [x8, #-8]
   197b4:	cbnz	x8, 197bc <PyInit__decimal@@Base+0x12ca8>
   197b8:	stp	xzr, xzr, [x21]
   197bc:	ldp	x20, x19, [sp, #48]
   197c0:	ldr	x21, [sp, #32]
   197c4:	ldp	x29, x30, [sp, #16]
   197c8:	add	sp, sp, #0x40
   197cc:	ret
   197d0:	stp	x29, x30, [sp, #-32]!
   197d4:	stp	x20, x19, [sp, #16]
   197d8:	mov	x29, sp
   197dc:	ldrb	w8, [x1]
   197e0:	ldrb	w9, [x2]
   197e4:	orr	w10, w9, w8
   197e8:	tst	w10, #0xc
   197ec:	b.eq	1980c <PyInit__decimal@@Base+0x12cf8>  // b.none
   197f0:	mov	x19, x3
   197f4:	mov	x20, x0
   197f8:	tbnz	w8, #3, 19814 <PyInit__decimal@@Base+0x12d00>
   197fc:	tbnz	w9, #3, 1981c <PyInit__decimal@@Base+0x12d08>
   19800:	tst	w8, #0x4
   19804:	csel	x1, x2, x1, eq  // eq = none
   19808:	b	1982c <PyInit__decimal@@Base+0x12d18>
   1980c:	mov	w0, wzr
   19810:	b	19858 <PyInit__decimal@@Base+0x12d44>
   19814:	ldr	w8, [x4]
   19818:	b	19824 <PyInit__decimal@@Base+0x12d10>
   1981c:	ldr	w8, [x4]
   19820:	mov	x1, x2
   19824:	orr	w8, w8, #0x100
   19828:	str	w8, [x4]
   1982c:	mov	x0, x20
   19830:	mov	x2, x4
   19834:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   19838:	ldrb	w8, [x20]
   1983c:	mov	x0, x20
   19840:	mov	x1, x19
   19844:	and	w8, w8, #0xfffffff1
   19848:	orr	w8, w8, #0x4
   1984c:	strb	w8, [x20]
   19850:	bl	19670 <PyInit__decimal@@Base+0x12b5c>
   19854:	mov	w0, #0x1                   	// #1
   19858:	ldp	x20, x19, [sp, #16]
   1985c:	ldp	x29, x30, [sp], #32
   19860:	ret
   19864:	stp	x29, x30, [sp, #-64]!
   19868:	str	x23, [sp, #16]
   1986c:	stp	x22, x21, [sp, #32]
   19870:	stp	x20, x19, [sp, #48]
   19874:	mov	x29, sp
   19878:	ldp	x8, x10, [x0, #8]
   1987c:	ldr	x9, [x1, #8]
   19880:	mov	x20, x0
   19884:	mov	x21, x1
   19888:	add	x10, x8, x10
   1988c:	sub	x23, x10, #0x1
   19890:	cmp	x23, x9
   19894:	mov	x19, x2
   19898:	b.le	198ec <PyInit__decimal@@Base+0x12dd8>
   1989c:	ldr	x8, [x20, #40]
   198a0:	ldr	x10, [x20, #24]
   198a4:	add	x8, x8, x10, lsl #3
   198a8:	ldur	x8, [x8, #-8]
   198ac:	cbz	x8, 199f8 <PyInit__decimal@@Base+0x12ee4>
   198b0:	ldr	w8, [x21, #36]
   198b4:	cmp	w8, #0x8
   198b8:	b.hi	19aa4 <PyInit__decimal@@Base+0x12f90>  // b.pmore
   198bc:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   198c0:	add	x9, x9, #0x358
   198c4:	adr	x10, 198d4 <PyInit__decimal@@Base+0x12dc0>
   198c8:	ldrb	w11, [x9, x8]
   198cc:	add	x10, x10, x11, lsl #2
   198d0:	br	x10
   198d4:	ldrb	w8, [x20]
   198d8:	and	w1, w8, #0x1
   198dc:	mov	w2, #0x2                   	// #2
   198e0:	mov	x0, x20
   198e4:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   198e8:	b	19a78 <PyInit__decimal@@Base+0x12f64>
   198ec:	ldr	w10, [x21, #40]
   198f0:	cbz	w10, 19960 <PyInit__decimal@@Base+0x12e4c>
   198f4:	ldr	x10, [x21]
   198f8:	sub	x9, x9, x10
   198fc:	add	x9, x9, #0x1
   19900:	subs	x22, x8, x9
   19904:	b.le	19960 <PyInit__decimal@@Base+0x12e4c>
   19908:	mov	x0, x20
   1990c:	mov	x1, x20
   19910:	mov	x2, x22
   19914:	mov	x3, x19
   19918:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   1991c:	cbz	w0, 19a88 <PyInit__decimal@@Base+0x12f74>
   19920:	ldr	x8, [x20, #8]
   19924:	sub	x8, x8, x22
   19928:	str	x8, [x20, #8]
   1992c:	ldr	w8, [x19]
   19930:	orr	w9, w8, #0x1
   19934:	str	w9, [x19]
   19938:	ldr	x9, [x20, #40]
   1993c:	ldr	x10, [x20, #24]
   19940:	add	x9, x9, x10, lsl #3
   19944:	ldur	x9, [x9, #-8]
   19948:	cbz	x9, 19a88 <PyInit__decimal@@Base+0x12f74>
   1994c:	ldr	x9, [x21, #16]
   19950:	cmp	x23, x9
   19954:	b.ge	19a88 <PyInit__decimal@@Base+0x12f74>  // b.tcont
   19958:	mov	w9, #0x2001                	// #8193
   1995c:	b	19a80 <PyInit__decimal@@Base+0x12f6c>
   19960:	ldr	x9, [x21, #16]
   19964:	cmp	x23, x9
   19968:	b.ge	19a88 <PyInit__decimal@@Base+0x12f74>  // b.tcont
   1996c:	ldr	x10, [x20, #40]
   19970:	ldr	x11, [x20, #24]
   19974:	ldr	x12, [x21]
   19978:	add	x10, x10, x11, lsl #3
   1997c:	ldur	x10, [x10, #-8]
   19980:	sub	x9, x9, x12
   19984:	add	x23, x9, #0x1
   19988:	cbz	x10, 19a18 <PyInit__decimal@@Base+0x12f04>
   1998c:	ldr	w9, [x19]
   19990:	subs	x1, x23, x8
   19994:	orr	w9, w9, #0x2000
   19998:	str	w9, [x19]
   1999c:	b.le	19a88 <PyInit__decimal@@Base+0x12f74>
   199a0:	mov	x0, x20
   199a4:	bl	1a340 <PyInit__decimal@@Base+0x1382c>
   199a8:	mov	x22, x0
   199ac:	sxtw	x1, w0
   199b0:	mov	x0, x20
   199b4:	mov	x2, x21
   199b8:	mov	x3, x19
   199bc:	str	x23, [x20, #8]
   199c0:	bl	1e7f8 <PyInit__decimal@@Base+0x17ce4>
   199c4:	ldr	w8, [x19]
   199c8:	orr	w9, w8, #0x1000
   199cc:	str	w9, [x19]
   199d0:	cbz	w22, 19a88 <PyInit__decimal@@Base+0x12f74>
   199d4:	mov	w9, #0x5040                	// #20544
   199d8:	orr	w8, w8, w9
   199dc:	str	w8, [x19]
   199e0:	ldr	x8, [x20, #40]
   199e4:	ldr	x9, [x20, #24]
   199e8:	add	x8, x8, x9, lsl #3
   199ec:	ldur	x8, [x8, #-8]
   199f0:	cbnz	x8, 19a88 <PyInit__decimal@@Base+0x12f74>
   199f4:	b	19a24 <PyInit__decimal@@Base+0x12f10>
   199f8:	str	x9, [x20, #8]
   199fc:	ldr	w8, [x21, #40]
   19a00:	cbz	w8, 19a24 <PyInit__decimal@@Base+0x12f10>
   19a04:	ldr	x8, [x21]
   19a08:	sub	x8, x9, x8
   19a0c:	add	x8, x8, #0x1
   19a10:	str	x8, [x20, #8]
   19a14:	b	19a24 <PyInit__decimal@@Base+0x12f10>
   19a18:	cmp	x23, x8
   19a1c:	b.le	19a88 <PyInit__decimal@@Base+0x12f74>
   19a20:	str	x23, [x20, #8]
   19a24:	mov	x0, x20
   19a28:	bl	18a8c <PyInit__decimal@@Base+0x11f78>
   19a2c:	ldr	w8, [x19]
   19a30:	orr	w8, w8, #0x1
   19a34:	b	19a84 <PyInit__decimal@@Base+0x12f70>
   19a38:	ldrb	w8, [x20]
   19a3c:	tbnz	w8, #0, 19a58 <PyInit__decimal@@Base+0x12f44>
   19a40:	mov	w2, #0x2                   	// #2
   19a44:	mov	x0, x20
   19a48:	mov	w1, wzr
   19a4c:	b	198e4 <PyInit__decimal@@Base+0x12dd0>
   19a50:	ldrb	w8, [x20]
   19a54:	tbnz	w8, #0, 19a9c <PyInit__decimal@@Base+0x12f88>
   19a58:	mov	x0, x20
   19a5c:	mov	x1, x21
   19a60:	mov	x2, x19
   19a64:	bl	18b04 <PyInit__decimal@@Base+0x11ff0>
   19a68:	ldp	x9, x8, [x21]
   19a6c:	sub	x8, x8, x9
   19a70:	add	x8, x8, #0x1
   19a74:	str	x8, [x20, #8]
   19a78:	ldr	w8, [x19]
   19a7c:	mov	w9, #0x1840                	// #6208
   19a80:	orr	w8, w8, w9
   19a84:	str	w8, [x19]
   19a88:	ldp	x20, x19, [sp, #48]
   19a8c:	ldp	x22, x21, [sp, #32]
   19a90:	ldr	x23, [sp, #16]
   19a94:	ldp	x29, x30, [sp], #64
   19a98:	ret
   19a9c:	mov	w1, #0x1                   	// #1
   19aa0:	b	198dc <PyInit__decimal@@Base+0x12dc8>
   19aa4:	bl	6760 <abort@plt>
   19aa8:	stp	x29, x30, [sp, #-64]!
   19aac:	str	x23, [sp, #16]
   19ab0:	stp	x22, x21, [sp, #32]
   19ab4:	stp	x20, x19, [sp, #48]
   19ab8:	mov	x29, sp
   19abc:	ldrb	w8, [x0]
   19ac0:	tst	w8, #0xe
   19ac4:	b.ne	19b30 <PyInit__decimal@@Base+0x1301c>  // b.any
   19ac8:	ldr	x8, [x0, #16]
   19acc:	ldr	x9, [x1]
   19ad0:	mov	x20, x0
   19ad4:	mov	x21, x1
   19ad8:	subs	x22, x8, x9
   19adc:	b.le	19b30 <PyInit__decimal@@Base+0x1301c>
   19ae0:	mov	x0, x20
   19ae4:	mov	x1, x22
   19ae8:	mov	x19, x2
   19aec:	bl	1a340 <PyInit__decimal@@Base+0x1382c>
   19af0:	ldr	x8, [x20, #8]
   19af4:	mov	x23, x0
   19af8:	mov	x0, x20
   19afc:	mov	x1, x23
   19b00:	add	x8, x8, x22
   19b04:	mov	x2, x21
   19b08:	mov	x3, x19
   19b0c:	str	x8, [x20, #8]
   19b10:	bl	2370c <PyInit__decimal@@Base+0x1cbf8>
   19b14:	ldr	w8, [x19]
   19b18:	orr	w9, w8, #0x1000
   19b1c:	str	w9, [x19]
   19b20:	cbz	x23, 19b30 <PyInit__decimal@@Base+0x1301c>
   19b24:	mov	w9, #0x1040                	// #4160
   19b28:	orr	w8, w8, w9
   19b2c:	str	w8, [x19]
   19b30:	ldp	x20, x19, [sp, #48]
   19b34:	ldp	x22, x21, [sp, #32]
   19b38:	ldr	x23, [sp, #16]
   19b3c:	ldp	x29, x30, [sp], #64
   19b40:	ret
   19b44:	stp	x29, x30, [sp, #-32]!
   19b48:	stp	x20, x19, [sp, #16]
   19b4c:	mov	x29, sp
   19b50:	mov	x20, x0
   19b54:	ldr	x0, [x0, #24]
   19b58:	bl	17c44 <PyInit__decimal@@Base+0x11130>
   19b5c:	mov	x19, x0
   19b60:	cbz	x0, 19ba0 <PyInit__decimal@@Base+0x1308c>
   19b64:	ldr	x8, [x20, #24]
   19b68:	ldr	x0, [x19, #40]
   19b6c:	ldr	x1, [x20, #40]
   19b70:	lsl	x2, x8, #3
   19b74:	bl	6420 <memcpy@plt>
   19b78:	ldrb	w8, [x20]
   19b7c:	ldrb	w9, [x19]
   19b80:	bfxil	w9, w8, #0, #4
   19b84:	strb	w9, [x19]
   19b88:	ldr	x8, [x20, #8]
   19b8c:	str	x8, [x19, #8]
   19b90:	ldr	x8, [x20, #16]
   19b94:	str	x8, [x19, #16]
   19b98:	ldr	x8, [x20, #24]
   19b9c:	str	x8, [x19, #24]
   19ba0:	mov	x0, x19
   19ba4:	ldp	x20, x19, [sp, #16]
   19ba8:	ldp	x29, x30, [sp], #32
   19bac:	ret
   19bb0:	stp	x29, x30, [sp, #-32]!
   19bb4:	str	x19, [sp, #16]
   19bb8:	mov	x29, sp
   19bbc:	mov	x19, x0
   19bc0:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   19bc4:	cbz	w0, 19bd8 <PyInit__decimal@@Base+0x130c4>
   19bc8:	ldrb	w8, [x19]
   19bcc:	mov	w0, #0x1                   	// #1
   19bd0:	and	w8, w8, #0xfe
   19bd4:	strb	w8, [x19]
   19bd8:	ldr	x19, [sp, #16]
   19bdc:	ldp	x29, x30, [sp], #32
   19be0:	ret
   19be4:	stp	x29, x30, [sp, #-32]!
   19be8:	str	x19, [sp, #16]
   19bec:	mov	x29, sp
   19bf0:	mov	x19, x0
   19bf4:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   19bf8:	cbz	w0, 19c08 <PyInit__decimal@@Base+0x130f4>
   19bfc:	mov	x0, x19
   19c00:	bl	19c14 <PyInit__decimal@@Base+0x13100>
   19c04:	mov	w0, #0x1                   	// #1
   19c08:	ldr	x19, [sp, #16]
   19c0c:	ldp	x29, x30, [sp], #32
   19c10:	ret
   19c14:	ldrb	w8, [x0]
   19c18:	eor	w8, w8, #0x1
   19c1c:	strb	w8, [x0]
   19c20:	ret
   19c24:	stp	x29, x30, [sp, #-32]!
   19c28:	stp	x20, x19, [sp, #16]
   19c2c:	mov	x29, sp
   19c30:	ldrb	w20, [x2]
   19c34:	mov	x2, x3
   19c38:	mov	x19, x0
   19c3c:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   19c40:	cbz	w0, 19c54 <PyInit__decimal@@Base+0x13140>
   19c44:	ldrb	w8, [x19]
   19c48:	mov	w0, #0x1                   	// #1
   19c4c:	bfxil	w8, w20, #0, #1
   19c50:	strb	w8, [x19]
   19c54:	ldp	x20, x19, [sp, #16]
   19c58:	ldp	x29, x30, [sp], #32
   19c5c:	ret
   19c60:	stp	x29, x30, [sp, #-16]!
   19c64:	mov	x29, sp
   19c68:	ldrb	w8, [x0]
   19c6c:	tst	w8, #0xe
   19c70:	b.ne	19c80 <PyInit__decimal@@Base+0x1316c>  // b.any
   19c74:	ldrb	w9, [x1]
   19c78:	tst	w9, #0xe
   19c7c:	b.eq	19cac <PyInit__decimal@@Base+0x13198>  // b.none
   19c80:	tst	w8, #0xc
   19c84:	b.ne	19c94 <PyInit__decimal@@Base+0x13180>  // b.any
   19c88:	ldrb	w8, [x1]
   19c8c:	tst	w8, #0xc
   19c90:	b.eq	19cac <PyInit__decimal@@Base+0x13198>  // b.none
   19c94:	ldr	w8, [x2]
   19c98:	mov	w0, #0x7fffffff            	// #2147483647
   19c9c:	orr	w8, w8, #0x100
   19ca0:	str	w8, [x2]
   19ca4:	ldp	x29, x30, [sp], #16
   19ca8:	ret
   19cac:	bl	19cb8 <PyInit__decimal@@Base+0x131a4>
   19cb0:	ldp	x29, x30, [sp], #16
   19cb4:	ret
   19cb8:	stp	x29, x30, [sp, #-32]!
   19cbc:	str	x19, [sp, #16]
   19cc0:	mov	x29, sp
   19cc4:	cmp	x0, x1
   19cc8:	b.eq	19d80 <PyInit__decimal@@Base+0x1326c>  // b.none
   19ccc:	ldrb	w8, [x0]
   19cd0:	ldrb	w9, [x1]
   19cd4:	mov	x19, x0
   19cd8:	tbnz	w8, #1, 19cec <PyInit__decimal@@Base+0x131d8>
   19cdc:	tbz	w9, #1, 19cfc <PyInit__decimal@@Base+0x131e8>
   19ce0:	ubfiz	w8, w9, #1, #1
   19ce4:	sub	w0, w8, #0x1
   19ce8:	b	19d84 <PyInit__decimal@@Base+0x13270>
   19cec:	tbz	w9, #1, 19d6c <PyInit__decimal@@Base+0x13258>
   19cf0:	and	w9, w9, #0x1
   19cf4:	and	w8, w8, #0x1
   19cf8:	b	19d74 <PyInit__decimal@@Base+0x13260>
   19cfc:	ldr	x10, [x19, #40]
   19d00:	ldr	x11, [x19, #24]
   19d04:	ldr	x12, [x1, #40]
   19d08:	ldr	x13, [x1, #24]
   19d0c:	add	x10, x10, x11, lsl #3
   19d10:	ldur	x11, [x10, #-8]
   19d14:	add	x10, x12, x13, lsl #3
   19d18:	ldur	x10, [x10, #-8]
   19d1c:	cbz	x11, 19d7c <PyInit__decimal@@Base+0x13268>
   19d20:	cbz	x10, 19d6c <PyInit__decimal@@Base+0x13258>
   19d24:	and	w10, w8, #0x1
   19d28:	and	w9, w9, #0x1
   19d2c:	cmp	w10, w9
   19d30:	b.ne	19d90 <PyInit__decimal@@Base+0x1327c>  // b.any
   19d34:	ldp	x9, x10, [x19, #8]
   19d38:	ldp	x11, x12, [x1, #8]
   19d3c:	add	x10, x9, x10
   19d40:	add	x9, x11, x12
   19d44:	cmp	x10, x9
   19d48:	b.ne	19d98 <PyInit__decimal@@Base+0x13284>  // b.any
   19d4c:	mov	x0, x19
   19d50:	bl	238a8 <PyInit__decimal@@Base+0x1cd94>
   19d54:	ldrb	w8, [x19]
   19d58:	mov	w9, #0x1                   	// #1
   19d5c:	ubfiz	w8, w8, #1, #1
   19d60:	sub	w8, w9, w8
   19d64:	mul	w0, w8, w0
   19d68:	b	19d84 <PyInit__decimal@@Base+0x13270>
   19d6c:	ubfiz	w8, w8, #1, #1
   19d70:	mov	w9, #0x1                   	// #1
   19d74:	sub	w0, w9, w8
   19d78:	b	19d84 <PyInit__decimal@@Base+0x13270>
   19d7c:	cbnz	x10, 19ce0 <PyInit__decimal@@Base+0x131cc>
   19d80:	mov	w0, wzr
   19d84:	ldr	x19, [sp, #16]
   19d88:	ldp	x29, x30, [sp], #32
   19d8c:	ret
   19d90:	sub	w0, w9, w10
   19d94:	b	19d84 <PyInit__decimal@@Base+0x13270>
   19d98:	sub	x10, x10, #0x1
   19d9c:	sub	x9, x9, #0x1
   19da0:	ubfiz	w8, w8, #1, #1
   19da4:	mov	w11, #0x1                   	// #1
   19da8:	sub	w11, w11, w8
   19dac:	sub	w8, w8, #0x1
   19db0:	cmp	x10, x9
   19db4:	csel	w0, w8, w11, lt  // lt = tstop
   19db8:	b	19d84 <PyInit__decimal@@Base+0x13270>
   19dbc:	stp	x29, x30, [sp, #-48]!
   19dc0:	str	x21, [sp, #16]
   19dc4:	stp	x20, x19, [sp, #32]
   19dc8:	mov	x29, sp
   19dcc:	ldrb	w8, [x1]
   19dd0:	mov	x20, x2
   19dd4:	mov	x21, x1
   19dd8:	mov	x19, x0
   19ddc:	tst	w8, #0xe
   19de0:	b.ne	19df0 <PyInit__decimal@@Base+0x132dc>  // b.any
   19de4:	ldrb	w8, [x20]
   19de8:	tst	w8, #0xe
   19dec:	b.eq	19e0c <PyInit__decimal@@Base+0x132f8>  // b.none
   19df0:	mov	x0, x19
   19df4:	mov	x1, x21
   19df8:	mov	x2, x20
   19dfc:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   19e00:	cbz	w0, 19e0c <PyInit__decimal@@Base+0x132f8>
   19e04:	mov	w20, #0x7fffffff            	// #2147483647
   19e08:	b	19e34 <PyInit__decimal@@Base+0x13320>
   19e0c:	mov	x0, x21
   19e10:	mov	x1, x20
   19e14:	bl	19cb8 <PyInit__decimal@@Base+0x131a4>
   19e18:	cmp	w0, #0x0
   19e1c:	mov	w20, w0
   19e20:	lsr	w1, w0, #31
   19e24:	cset	w2, ne  // ne = any
   19e28:	mov	x0, x19
   19e2c:	mov	x3, xzr
   19e30:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   19e34:	mov	w0, w20
   19e38:	ldp	x20, x19, [sp, #32]
   19e3c:	ldr	x21, [sp, #16]
   19e40:	ldp	x29, x30, [sp], #48
   19e44:	ret
   19e48:	stp	x29, x30, [sp, #-48]!
   19e4c:	stp	x22, x21, [sp, #16]
   19e50:	stp	x20, x19, [sp, #32]
   19e54:	mov	x29, sp
   19e58:	ldrb	w8, [x1]
   19e5c:	mov	x20, x4
   19e60:	mov	x21, x2
   19e64:	mov	x22, x1
   19e68:	tst	w8, #0xe
   19e6c:	mov	x19, x0
   19e70:	b.ne	19e80 <PyInit__decimal@@Base+0x1336c>  // b.any
   19e74:	ldrb	w8, [x21]
   19e78:	tst	w8, #0xe
   19e7c:	b.eq	19eac <PyInit__decimal@@Base+0x13398>  // b.none
   19e80:	mov	x0, x19
   19e84:	mov	x1, x22
   19e88:	mov	x2, x21
   19e8c:	mov	x4, x20
   19e90:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   19e94:	cbz	w0, 19eac <PyInit__decimal@@Base+0x13398>
   19e98:	ldr	w8, [x20]
   19e9c:	orr	w8, w8, #0x100
   19ea0:	str	w8, [x20]
   19ea4:	mov	w20, #0x7fffffff            	// #2147483647
   19ea8:	b	19ed4 <PyInit__decimal@@Base+0x133c0>
   19eac:	mov	x0, x22
   19eb0:	mov	x1, x21
   19eb4:	bl	19cb8 <PyInit__decimal@@Base+0x131a4>
   19eb8:	cmp	w0, #0x0
   19ebc:	mov	w20, w0
   19ec0:	lsr	w1, w0, #31
   19ec4:	cset	w2, ne  // ne = any
   19ec8:	mov	x0, x19
   19ecc:	mov	x3, xzr
   19ed0:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   19ed4:	mov	w0, w20
   19ed8:	ldp	x20, x19, [sp, #32]
   19edc:	ldp	x22, x21, [sp, #16]
   19ee0:	ldp	x29, x30, [sp], #48
   19ee4:	ret
   19ee8:	sub	sp, sp, #0x80
   19eec:	stp	x29, x30, [sp, #96]
   19ef0:	stp	x20, x19, [sp, #112]
   19ef4:	add	x29, sp, #0x60
   19ef8:	ldrb	w8, [x0]
   19efc:	ldrb	w9, [x1]
   19f00:	and	w10, w8, #0x1
   19f04:	and	w11, w9, #0x1
   19f08:	cmp	w10, w11
   19f0c:	b.ne	19f44 <PyInit__decimal@@Base+0x13430>  // b.any
   19f10:	mov	x20, x1
   19f14:	mov	x19, x0
   19f18:	tst	w8, #0xc
   19f1c:	and	w10, w9, #0xc
   19f20:	b.eq	19f4c <PyInit__decimal@@Base+0x13438>  // b.none
   19f24:	cbz	w10, 19f58 <PyInit__decimal@@Base+0x13444>
   19f28:	and	w8, w8, #0x4
   19f2c:	and	w9, w9, #0x4
   19f30:	eor	w10, w8, w9
   19f34:	tbz	w10, #2, 19f60 <PyInit__decimal@@Base+0x1344c>
   19f38:	lsr	w8, w8, #2
   19f3c:	sub	w0, w8, w9, lsr #2
   19f40:	b	19fe8 <PyInit__decimal@@Base+0x134d4>
   19f44:	sub	w0, w11, w10
   19f48:	b	19ffc <PyInit__decimal@@Base+0x134e8>
   19f4c:	cbz	w10, 19fa8 <PyInit__decimal@@Base+0x13494>
   19f50:	mov	w0, #0xffffffff            	// #-1
   19f54:	b	19fe8 <PyInit__decimal@@Base+0x134d4>
   19f58:	mov	w0, #0x1                   	// #1
   19f5c:	b	19fe8 <PyInit__decimal@@Base+0x134d4>
   19f60:	ldr	x8, [x19, #24]
   19f64:	cmp	x8, #0x1
   19f68:	b.lt	19fd0 <PyInit__decimal@@Base+0x134bc>  // b.tstop
   19f6c:	ldr	x9, [x20, #24]
   19f70:	cmp	x9, #0x1
   19f74:	b.lt	19fd0 <PyInit__decimal@@Base+0x134bc>  // b.tstop
   19f78:	add	x0, sp, #0x30
   19f7c:	mov	x1, x19
   19f80:	bl	1a018 <PyInit__decimal@@Base+0x13504>
   19f84:	mov	x0, sp
   19f88:	mov	x1, x20
   19f8c:	bl	1a018 <PyInit__decimal@@Base+0x13504>
   19f90:	add	x0, sp, #0x30
   19f94:	mov	x1, sp
   19f98:	str	xzr, [sp, #8]
   19f9c:	str	xzr, [sp, #56]
   19fa0:	bl	1a058 <PyInit__decimal@@Base+0x13544>
   19fa4:	b	19fe8 <PyInit__decimal@@Base+0x134d4>
   19fa8:	mov	x0, x19
   19fac:	mov	x1, x20
   19fb0:	bl	1a058 <PyInit__decimal@@Base+0x13544>
   19fb4:	cbnz	w0, 19fe8 <PyInit__decimal@@Base+0x134d4>
   19fb8:	ldr	x8, [x19, #8]
   19fbc:	ldr	x9, [x20, #8]
   19fc0:	cmp	x8, x9
   19fc4:	b.ne	1a00c <PyInit__decimal@@Base+0x134f8>  // b.any
   19fc8:	mov	w0, wzr
   19fcc:	b	19fe8 <PyInit__decimal@@Base+0x134d4>
   19fd0:	ldr	x9, [x20, #24]
   19fd4:	cmp	x8, #0x0
   19fd8:	cset	w8, gt
   19fdc:	cmp	x9, #0x0
   19fe0:	cset	w9, gt
   19fe4:	sub	w0, w8, w9
   19fe8:	ldrb	w8, [x19]
   19fec:	mov	w9, #0x1                   	// #1
   19ff0:	ubfiz	w8, w8, #1, #1
   19ff4:	sub	w8, w9, w8
   19ff8:	mul	w0, w8, w0
   19ffc:	ldp	x20, x19, [sp, #112]
   1a000:	ldp	x29, x30, [sp, #96]
   1a004:	add	sp, sp, #0x80
   1a008:	ret
   1a00c:	mov	w8, #0xffffffff            	// #-1
   1a010:	cneg	w0, w8, ge  // ge = tcont
   1a014:	b	19fe8 <PyInit__decimal@@Base+0x134d4>
   1a018:	ldrb	w8, [x1]
   1a01c:	mov	w10, #0x40                  	// #64
   1a020:	strb	w8, [x0]
   1a024:	ldr	x9, [x1, #8]
   1a028:	bfxil	w10, w8, #0, #5
   1a02c:	str	x9, [x0, #8]
   1a030:	ldr	x9, [x1, #16]
   1a034:	str	x9, [x0, #16]
   1a038:	ldr	x9, [x1, #24]
   1a03c:	str	x9, [x0, #24]
   1a040:	ldr	x9, [x1, #32]
   1a044:	str	x9, [x0, #32]
   1a048:	ldr	x9, [x1, #40]
   1a04c:	strb	w10, [x0]
   1a050:	str	x9, [x0, #40]
   1a054:	ret
   1a058:	stp	x29, x30, [sp, #-16]!
   1a05c:	mov	x29, sp
   1a060:	cmp	x0, x1
   1a064:	b.eq	1a084 <PyInit__decimal@@Base+0x13570>  // b.none
   1a068:	ldrb	w9, [x0]
   1a06c:	ldrb	w8, [x1]
   1a070:	tbnz	w9, #1, 1a090 <PyInit__decimal@@Base+0x1357c>
   1a074:	tbz	w8, #1, 1a0a0 <PyInit__decimal@@Base+0x1358c>
   1a078:	mov	w0, #0xffffffff            	// #-1
   1a07c:	ldp	x29, x30, [sp], #16
   1a080:	ret
   1a084:	mov	w0, wzr
   1a088:	ldp	x29, x30, [sp], #16
   1a08c:	ret
   1a090:	tst	w8, #0x2
   1a094:	cset	w0, eq  // eq = none
   1a098:	ldp	x29, x30, [sp], #16
   1a09c:	ret
   1a0a0:	ldr	x8, [x0, #40]
   1a0a4:	ldr	x9, [x0, #24]
   1a0a8:	ldr	x10, [x1, #40]
   1a0ac:	ldr	x11, [x1, #24]
   1a0b0:	add	x8, x8, x9, lsl #3
   1a0b4:	ldur	x9, [x8, #-8]
   1a0b8:	add	x8, x10, x11, lsl #3
   1a0bc:	ldur	x8, [x8, #-8]
   1a0c0:	cbz	x9, 1a0ec <PyInit__decimal@@Base+0x135d8>
   1a0c4:	cbz	x8, 1a0fc <PyInit__decimal@@Base+0x135e8>
   1a0c8:	ldp	x8, x9, [x0, #8]
   1a0cc:	ldp	x10, x11, [x1, #8]
   1a0d0:	add	x9, x8, x9
   1a0d4:	add	x8, x10, x11
   1a0d8:	cmp	x9, x8
   1a0dc:	b.ne	1a108 <PyInit__decimal@@Base+0x135f4>  // b.any
   1a0e0:	bl	238a8 <PyInit__decimal@@Base+0x1cd94>
   1a0e4:	ldp	x29, x30, [sp], #16
   1a0e8:	ret
   1a0ec:	cmp	x8, #0x0
   1a0f0:	csetm	w0, ne  // ne = any
   1a0f4:	ldp	x29, x30, [sp], #16
   1a0f8:	ret
   1a0fc:	mov	w0, #0x1                   	// #1
   1a100:	ldp	x29, x30, [sp], #16
   1a104:	ret
   1a108:	sub	x9, x9, #0x1
   1a10c:	sub	x8, x8, #0x1
   1a110:	cmp	x9, x8
   1a114:	mov	w8, #0xffffffff            	// #-1
   1a118:	cneg	w0, w8, ge  // ge = tcont
   1a11c:	ldp	x29, x30, [sp], #16
   1a120:	ret
   1a124:	stp	x29, x30, [sp, #-32]!
   1a128:	stp	x20, x19, [sp, #16]
   1a12c:	mov	x29, sp
   1a130:	mov	x19, x0
   1a134:	mov	x0, x1
   1a138:	mov	x1, x2
   1a13c:	bl	19ee8 <PyInit__decimal@@Base+0x133d4>
   1a140:	cmp	w0, #0x0
   1a144:	mov	w20, w0
   1a148:	lsr	w1, w0, #31
   1a14c:	cset	w2, ne  // ne = any
   1a150:	mov	x0, x19
   1a154:	mov	x3, xzr
   1a158:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   1a15c:	mov	w0, w20
   1a160:	ldp	x20, x19, [sp, #16]
   1a164:	ldp	x29, x30, [sp], #32
   1a168:	ret
   1a16c:	sub	sp, sp, #0x80
   1a170:	stp	x29, x30, [sp, #96]
   1a174:	str	x19, [sp, #112]
   1a178:	add	x29, sp, #0x60
   1a17c:	mov	x19, x1
   1a180:	mov	x1, x0
   1a184:	add	x0, sp, #0x30
   1a188:	bl	1a018 <PyInit__decimal@@Base+0x13504>
   1a18c:	mov	x0, sp
   1a190:	mov	x1, x19
   1a194:	bl	1a018 <PyInit__decimal@@Base+0x13504>
   1a198:	ldrb	w8, [sp, #48]
   1a19c:	ldrb	w9, [sp]
   1a1a0:	add	x0, sp, #0x30
   1a1a4:	mov	x1, sp
   1a1a8:	and	w8, w8, #0xfe
   1a1ac:	and	w9, w9, #0xfe
   1a1b0:	strb	w8, [sp, #48]
   1a1b4:	strb	w9, [sp]
   1a1b8:	bl	19ee8 <PyInit__decimal@@Base+0x133d4>
   1a1bc:	ldr	x19, [sp, #112]
   1a1c0:	ldp	x29, x30, [sp, #96]
   1a1c4:	add	sp, sp, #0x80
   1a1c8:	ret
   1a1cc:	stp	x29, x30, [sp, #-32]!
   1a1d0:	stp	x20, x19, [sp, #16]
   1a1d4:	mov	x29, sp
   1a1d8:	mov	x19, x0
   1a1dc:	mov	x0, x1
   1a1e0:	mov	x1, x2
   1a1e4:	bl	1a16c <PyInit__decimal@@Base+0x13658>
   1a1e8:	cmp	w0, #0x0
   1a1ec:	mov	w20, w0
   1a1f0:	lsr	w1, w0, #31
   1a1f4:	cset	w2, ne  // ne = any
   1a1f8:	mov	x0, x19
   1a1fc:	mov	x3, xzr
   1a200:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   1a204:	mov	w0, w20
   1a208:	ldp	x20, x19, [sp, #16]
   1a20c:	ldp	x29, x30, [sp], #32
   1a210:	ret
   1a214:	sub	sp, sp, #0x50
   1a218:	stp	x29, x30, [sp, #16]
   1a21c:	str	x23, [sp, #32]
   1a220:	stp	x22, x21, [sp, #48]
   1a224:	stp	x20, x19, [sp, #64]
   1a228:	add	x29, sp, #0x10
   1a22c:	mov	x23, x3
   1a230:	mov	x20, x1
   1a234:	mov	x19, x0
   1a238:	cbz	x2, 1a2b0 <PyInit__decimal@@Base+0x1379c>
   1a23c:	ldr	x8, [x20, #40]
   1a240:	ldr	x9, [x20, #24]
   1a244:	add	x8, x8, x9, lsl #3
   1a248:	ldur	x8, [x8, #-8]
   1a24c:	cbz	x8, 1a2b0 <PyInit__decimal@@Base+0x1379c>
   1a250:	ldr	x8, [x20, #16]
   1a254:	mov	x21, x2
   1a258:	add	x0, x29, #0x18
   1a25c:	add	x1, sp, #0x8
   1a260:	add	x2, x8, x2
   1a264:	bl	181e0 <PyInit__decimal@@Base+0x116cc>
   1a268:	ldr	x8, [sp, #8]
   1a26c:	ldr	x9, [x29, #24]
   1a270:	adrp	x10, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1a274:	ldr	x10, [x10, #1344]
   1a278:	cmp	x8, #0x0
   1a27c:	ldr	x8, [x19, #32]
   1a280:	cinc	x22, x9, ne  // ne = any
   1a284:	cmp	x10, x22
   1a288:	csel	x1, x22, x10, lt  // lt = tstop
   1a28c:	cmp	x1, x8
   1a290:	b.eq	1a2e0 <PyInit__decimal@@Base+0x137cc>  // b.none
   1a294:	ldrb	w9, [x19]
   1a298:	tbnz	w9, #5, 1a2c4 <PyInit__decimal@@Base+0x137b0>
   1a29c:	mov	x0, x19
   1a2a0:	mov	x2, x23
   1a2a4:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1a2a8:	cbnz	w0, 1a2e8 <PyInit__decimal@@Base+0x137d4>
   1a2ac:	b	1a328 <PyInit__decimal@@Base+0x13814>
   1a2b0:	mov	x0, x19
   1a2b4:	mov	x1, x20
   1a2b8:	mov	x2, x23
   1a2bc:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1a2c0:	b	1a328 <PyInit__decimal@@Base+0x13814>
   1a2c4:	cmp	x1, x8
   1a2c8:	b.le	1a2e0 <PyInit__decimal@@Base+0x137cc>
   1a2cc:	mov	x0, x19
   1a2d0:	mov	x2, x23
   1a2d4:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1a2d8:	cbnz	w0, 1a2e8 <PyInit__decimal@@Base+0x137d4>
   1a2dc:	b	1a328 <PyInit__decimal@@Base+0x13814>
   1a2e0:	mov	w0, #0x1                   	// #1
   1a2e4:	cbz	w0, 1a328 <PyInit__decimal@@Base+0x13814>
   1a2e8:	ldr	x0, [x19, #40]
   1a2ec:	ldr	x1, [x20, #40]
   1a2f0:	ldr	x3, [x20, #24]
   1a2f4:	mov	x2, x22
   1a2f8:	mov	x4, x21
   1a2fc:	bl	12e34 <PyInit__decimal@@Base+0xc320>
   1a300:	ldrb	w8, [x20]
   1a304:	ldrb	w9, [x19]
   1a308:	mov	w0, #0x1                   	// #1
   1a30c:	bfxil	w9, w8, #0, #4
   1a310:	strb	w9, [x19]
   1a314:	ldr	x8, [x20, #8]
   1a318:	str	x8, [x19, #8]
   1a31c:	ldr	x8, [x20, #16]
   1a320:	add	x8, x8, x21
   1a324:	stp	x8, x22, [x19, #16]
   1a328:	ldp	x20, x19, [sp, #64]
   1a32c:	ldp	x22, x21, [sp, #48]
   1a330:	ldr	x23, [sp, #32]
   1a334:	ldp	x29, x30, [sp, #16]
   1a338:	add	sp, sp, #0x50
   1a33c:	ret
   1a340:	sub	sp, sp, #0x40
   1a344:	stp	x29, x30, [sp, #16]
   1a348:	str	x21, [sp, #32]
   1a34c:	stp	x20, x19, [sp, #48]
   1a350:	add	x29, sp, #0x10
   1a354:	mov	x20, xzr
   1a358:	cbz	x1, 1a428 <PyInit__decimal@@Base+0x13914>
   1a35c:	mov	x19, x0
   1a360:	ldr	x0, [x0, #40]
   1a364:	ldr	x8, [x19, #24]
   1a368:	add	x9, x0, x8, lsl #3
   1a36c:	ldur	x9, [x9, #-8]
   1a370:	cbz	x9, 1a428 <PyInit__decimal@@Base+0x13914>
   1a374:	ldr	x9, [x19, #16]
   1a378:	mov	x21, x1
   1a37c:	cmp	x9, x1
   1a380:	b.le	1a3f4 <PyInit__decimal@@Base+0x138e0>
   1a384:	mov	x1, x0
   1a388:	mov	x2, x8
   1a38c:	mov	x3, x21
   1a390:	bl	13330 <PyInit__decimal@@Base+0xc81c>
   1a394:	ldr	x8, [x19, #16]
   1a398:	mov	x20, x0
   1a39c:	add	x0, x29, #0x18
   1a3a0:	add	x1, sp, #0x8
   1a3a4:	sub	x2, x8, x21
   1a3a8:	str	x2, [x19, #16]
   1a3ac:	bl	181e0 <PyInit__decimal@@Base+0x116cc>
   1a3b0:	ldr	x8, [sp, #8]
   1a3b4:	ldr	x9, [x29, #24]
   1a3b8:	adrp	x10, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1a3bc:	ldr	x10, [x10, #1344]
   1a3c0:	cmp	x8, #0x0
   1a3c4:	ldr	x8, [x19, #32]
   1a3c8:	cinc	x21, x9, ne  // ne = any
   1a3cc:	cmp	x10, x21
   1a3d0:	csel	x1, x21, x10, lt  // lt = tstop
   1a3d4:	cmp	x1, x8
   1a3d8:	b.eq	1a424 <PyInit__decimal@@Base+0x13910>  // b.none
   1a3dc:	ldrb	w9, [x19]
   1a3e0:	tbnz	w9, #5, 1a410 <PyInit__decimal@@Base+0x138fc>
   1a3e4:	add	x2, x29, #0x18
   1a3e8:	mov	x0, x19
   1a3ec:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1a3f0:	b	1a424 <PyInit__decimal@@Base+0x13910>
   1a3f4:	cset	w2, eq  // eq = none
   1a3f8:	mov	x1, x8
   1a3fc:	bl	1a440 <PyInit__decimal@@Base+0x1392c>
   1a400:	mov	x20, x0
   1a404:	mov	x0, x19
   1a408:	bl	18a8c <PyInit__decimal@@Base+0x11f78>
   1a40c:	b	1a428 <PyInit__decimal@@Base+0x13914>
   1a410:	cmp	x1, x8
   1a414:	b.le	1a424 <PyInit__decimal@@Base+0x13910>
   1a418:	add	x2, x29, #0x18
   1a41c:	mov	x0, x19
   1a420:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1a424:	str	x21, [x19, #24]
   1a428:	mov	x0, x20
   1a42c:	ldp	x20, x19, [sp, #48]
   1a430:	ldr	x21, [sp, #32]
   1a434:	ldp	x29, x30, [sp, #16]
   1a438:	add	sp, sp, #0x40
   1a43c:	ret
   1a440:	sub	sp, sp, #0x40
   1a444:	stp	x29, x30, [sp, #16]
   1a448:	str	x21, [sp, #32]
   1a44c:	stp	x20, x19, [sp, #48]
   1a450:	add	x29, sp, #0x10
   1a454:	mov	x20, x1
   1a458:	mov	x19, x0
   1a45c:	str	xzr, [x29, #24]
   1a460:	str	xzr, [sp, #8]
   1a464:	cbz	w2, 1a4ac <PyInit__decimal@@Base+0x13998>
   1a468:	adrp	x8, 2e000 <PyInit__decimal@@Base+0x274ec>
   1a46c:	sub	x21, x20, #0x1
   1a470:	add	x8, x8, #0x20
   1a474:	ldr	x2, [x19, x21, lsl #3]
   1a478:	ldr	x9, [x8, #72]
   1a47c:	cmp	x9, x2
   1a480:	b.ls	1a4b8 <PyInit__decimal@@Base+0x139a4>  // b.plast
   1a484:	ldr	x9, [x8, #32]
   1a488:	cmp	x9, x2
   1a48c:	b.ls	1a4e0 <PyInit__decimal@@Base+0x139cc>  // b.plast
   1a490:	ldr	x9, [x8, #16]
   1a494:	cmp	x9, x2
   1a498:	b.ls	1a524 <PyInit__decimal@@Base+0x13a10>  // b.plast
   1a49c:	ldr	x8, [x8, #8]
   1a4a0:	cmp	x8, x2
   1a4a4:	mov	w8, #0x1                   	// #1
   1a4a8:	b	1a588 <PyInit__decimal@@Base+0x13a74>
   1a4ac:	mov	x0, x19
   1a4b0:	mov	x1, x20
   1a4b4:	b	1a5b4 <PyInit__decimal@@Base+0x13aa0>
   1a4b8:	ldr	x9, [x8, #112]
   1a4bc:	cmp	x9, x2
   1a4c0:	b.ls	1a4fc <PyInit__decimal@@Base+0x139e8>  // b.plast
   1a4c4:	ldr	x9, [x8, #88]
   1a4c8:	cmp	x9, x2
   1a4cc:	b.ls	1a534 <PyInit__decimal@@Base+0x13a20>  // b.plast
   1a4d0:	ldr	x8, [x8, #80]
   1a4d4:	cmp	x8, x2
   1a4d8:	mov	w8, #0xa                   	// #10
   1a4dc:	b	1a588 <PyInit__decimal@@Base+0x13a74>
   1a4e0:	ldr	x9, [x8, #48]
   1a4e4:	cmp	x9, x2
   1a4e8:	b.ls	1a550 <PyInit__decimal@@Base+0x13a3c>  // b.plast
   1a4ec:	ldr	x8, [x8, #40]
   1a4f0:	cmp	x8, x2
   1a4f4:	mov	w8, #0x5                   	// #5
   1a4f8:	b	1a588 <PyInit__decimal@@Base+0x13a74>
   1a4fc:	ldr	x9, [x8, #144]
   1a500:	cmp	x9, x2
   1a504:	b.ls	1a56c <PyInit__decimal@@Base+0x13a58>  // b.plast
   1a508:	ldr	x9, [x8, #128]
   1a50c:	cmp	x9, x2
   1a510:	b.ls	1a57c <PyInit__decimal@@Base+0x13a68>  // b.plast
   1a514:	ldr	x8, [x8, #120]
   1a518:	cmp	x8, x2
   1a51c:	mov	w8, #0xf                   	// #15
   1a520:	b	1a588 <PyInit__decimal@@Base+0x13a74>
   1a524:	ldr	x8, [x8, #24]
   1a528:	cmp	x8, x2
   1a52c:	mov	w8, #0x3                   	// #3
   1a530:	b	1a588 <PyInit__decimal@@Base+0x13a74>
   1a534:	ldr	x9, [x8, #104]
   1a538:	cmp	x9, x2
   1a53c:	b.ls	1a5f4 <PyInit__decimal@@Base+0x13ae0>  // b.plast
   1a540:	ldr	x8, [x8, #96]
   1a544:	cmp	x8, x2
   1a548:	mov	w8, #0xc                   	// #12
   1a54c:	b	1a588 <PyInit__decimal@@Base+0x13a74>
   1a550:	ldr	x9, [x8, #64]
   1a554:	cmp	x9, x2
   1a558:	b.ls	1a5fc <PyInit__decimal@@Base+0x13ae8>  // b.plast
   1a55c:	ldr	x8, [x8, #56]
   1a560:	cmp	x8, x2
   1a564:	mov	w8, #0x7                   	// #7
   1a568:	b	1a588 <PyInit__decimal@@Base+0x13a74>
   1a56c:	ldr	x8, [x8, #152]
   1a570:	cmp	x8, x2
   1a574:	mov	w8, #0x13                  	// #19
   1a578:	b	1a588 <PyInit__decimal@@Base+0x13a74>
   1a57c:	ldr	x8, [x8, #136]
   1a580:	cmp	x8, x2
   1a584:	mov	w8, #0x11                  	// #17
   1a588:	cinc	x8, x8, ls  // ls = plast
   1a58c:	sub	x3, x8, #0x1
   1a590:	add	x0, x29, #0x18
   1a594:	add	x1, sp, #0x8
   1a598:	bl	23ad0 <PyInit__decimal@@Base+0x1cfbc>
   1a59c:	cmp	x20, #0x2
   1a5a0:	b.lt	1a5c4 <PyInit__decimal@@Base+0x13ab0>  // b.tstop
   1a5a4:	ldr	x8, [sp, #8]
   1a5a8:	cbnz	x8, 1a5c4 <PyInit__decimal@@Base+0x13ab0>
   1a5ac:	mov	x0, x19
   1a5b0:	mov	x1, x21
   1a5b4:	bl	23e60 <PyInit__decimal@@Base+0x1d34c>
   1a5b8:	cmp	w0, #0x0
   1a5bc:	cset	w8, eq  // eq = none
   1a5c0:	str	x8, [sp, #8]
   1a5c4:	ldr	x0, [x29, #24]
   1a5c8:	cmp	x0, #0x5
   1a5cc:	b.eq	1a5d4 <PyInit__decimal@@Base+0x13ac0>  // b.none
   1a5d0:	cbnz	x0, 1a5e0 <PyInit__decimal@@Base+0x13acc>
   1a5d4:	ldr	x8, [sp, #8]
   1a5d8:	cmp	x8, #0x0
   1a5dc:	cinc	x0, x0, ne  // ne = any
   1a5e0:	ldp	x20, x19, [sp, #48]
   1a5e4:	ldr	x21, [sp, #32]
   1a5e8:	ldp	x29, x30, [sp, #16]
   1a5ec:	add	sp, sp, #0x40
   1a5f0:	ret
   1a5f4:	mov	w8, #0xe                   	// #14
   1a5f8:	b	1a58c <PyInit__decimal@@Base+0x13a78>
   1a5fc:	mov	w8, #0x9                   	// #9
   1a600:	b	1a58c <PyInit__decimal@@Base+0x13a78>
   1a604:	sub	sp, sp, #0x50
   1a608:	stp	x29, x30, [sp, #16]
   1a60c:	str	x23, [sp, #32]
   1a610:	stp	x22, x21, [sp, #48]
   1a614:	stp	x20, x19, [sp, #64]
   1a618:	add	x29, sp, #0x10
   1a61c:	mov	x22, x3
   1a620:	mov	x19, x1
   1a624:	mov	x20, x0
   1a628:	cbz	x2, 1a6ac <PyInit__decimal@@Base+0x13b98>
   1a62c:	ldr	x0, [x19, #40]
   1a630:	ldr	x1, [x19, #24]
   1a634:	add	x8, x0, x1, lsl #3
   1a638:	ldur	x8, [x8, #-8]
   1a63c:	cbz	x8, 1a6ac <PyInit__decimal@@Base+0x13b98>
   1a640:	ldr	x8, [x19, #16]
   1a644:	mov	x21, x2
   1a648:	subs	x2, x8, x2
   1a64c:	b.le	1a6c8 <PyInit__decimal@@Base+0x13bb4>
   1a650:	add	x0, x29, #0x18
   1a654:	add	x1, sp, #0x8
   1a658:	str	x2, [x20, #16]
   1a65c:	bl	181e0 <PyInit__decimal@@Base+0x116cc>
   1a660:	ldr	x8, [sp, #8]
   1a664:	ldr	x9, [x29, #24]
   1a668:	cmp	x8, #0x0
   1a66c:	cinc	x23, x9, ne  // ne = any
   1a670:	cmp	x20, x19
   1a674:	b.eq	1a6e0 <PyInit__decimal@@Base+0x13bcc>  // b.none
   1a678:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1a67c:	ldr	x9, [x8, #1344]
   1a680:	ldr	x8, [x20, #32]
   1a684:	cmp	x9, x23
   1a688:	csel	x1, x23, x9, lt  // lt = tstop
   1a68c:	cmp	x1, x8
   1a690:	b.eq	1a744 <PyInit__decimal@@Base+0x13c30>  // b.none
   1a694:	ldrb	w9, [x20]
   1a698:	tbnz	w9, #5, 1a72c <PyInit__decimal@@Base+0x13c18>
   1a69c:	mov	x0, x20
   1a6a0:	mov	x2, x22
   1a6a4:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1a6a8:	b	1a748 <PyInit__decimal@@Base+0x13c34>
   1a6ac:	mov	x0, x20
   1a6b0:	mov	x1, x19
   1a6b4:	mov	x2, x22
   1a6b8:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1a6bc:	cmp	w0, #0x0
   1a6c0:	csetm	x21, eq  // eq = none
   1a6c4:	b	1a780 <PyInit__decimal@@Base+0x13c6c>
   1a6c8:	cset	w2, eq  // eq = none
   1a6cc:	bl	1a440 <PyInit__decimal@@Base+0x1392c>
   1a6d0:	mov	x21, x0
   1a6d4:	mov	x0, x20
   1a6d8:	bl	18a8c <PyInit__decimal@@Base+0x11f78>
   1a6dc:	b	1a768 <PyInit__decimal@@Base+0x13c54>
   1a6e0:	ldr	x0, [x20, #40]
   1a6e4:	ldr	x1, [x19, #40]
   1a6e8:	ldr	x2, [x19, #24]
   1a6ec:	mov	x3, x21
   1a6f0:	bl	13330 <PyInit__decimal@@Base+0xc81c>
   1a6f4:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1a6f8:	ldr	x9, [x8, #1344]
   1a6fc:	ldr	x8, [x20, #32]
   1a700:	mov	x21, x0
   1a704:	cmp	x9, x23
   1a708:	csel	x1, x23, x9, lt  // lt = tstop
   1a70c:	cmp	x1, x8
   1a710:	b.eq	1a764 <PyInit__decimal@@Base+0x13c50>  // b.none
   1a714:	ldrb	w9, [x20]
   1a718:	tbnz	w9, #5, 1a7a4 <PyInit__decimal@@Base+0x13c90>
   1a71c:	mov	x0, x20
   1a720:	mov	x2, x22
   1a724:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1a728:	b	1a764 <PyInit__decimal@@Base+0x13c50>
   1a72c:	cmp	x1, x8
   1a730:	b.le	1a744 <PyInit__decimal@@Base+0x13c30>
   1a734:	mov	x0, x20
   1a738:	mov	x2, x22
   1a73c:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1a740:	b	1a748 <PyInit__decimal@@Base+0x13c34>
   1a744:	mov	w0, #0x1                   	// #1
   1a748:	cbz	w0, 1a79c <PyInit__decimal@@Base+0x13c88>
   1a74c:	ldr	x0, [x20, #40]
   1a750:	ldr	x1, [x19, #40]
   1a754:	ldr	x2, [x19, #24]
   1a758:	mov	x3, x21
   1a75c:	bl	13330 <PyInit__decimal@@Base+0xc81c>
   1a760:	mov	x21, x0
   1a764:	str	x23, [x20, #24]
   1a768:	ldrb	w8, [x19]
   1a76c:	ldrb	w9, [x20]
   1a770:	bfxil	w9, w8, #0, #4
   1a774:	strb	w9, [x20]
   1a778:	ldr	x8, [x19, #8]
   1a77c:	str	x8, [x20, #8]
   1a780:	mov	x0, x21
   1a784:	ldp	x20, x19, [sp, #64]
   1a788:	ldp	x22, x21, [sp, #48]
   1a78c:	ldr	x23, [sp, #32]
   1a790:	ldp	x29, x30, [sp, #16]
   1a794:	add	sp, sp, #0x50
   1a798:	ret
   1a79c:	mov	x21, #0xffffffffffffffff    	// #-1
   1a7a0:	b	1a780 <PyInit__decimal@@Base+0x13c6c>
   1a7a4:	cmp	x1, x8
   1a7a8:	b.le	1a764 <PyInit__decimal@@Base+0x13c50>
   1a7ac:	mov	x0, x20
   1a7b0:	mov	x2, x22
   1a7b4:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1a7b8:	b	1a764 <PyInit__decimal@@Base+0x13c50>
   1a7bc:	stp	x29, x30, [sp, #-64]!
   1a7c0:	stp	x24, x23, [sp, #16]
   1a7c4:	stp	x22, x21, [sp, #32]
   1a7c8:	stp	x20, x19, [sp, #48]
   1a7cc:	mov	x29, sp
   1a7d0:	ldrb	w8, [x1]
   1a7d4:	mov	x21, x4
   1a7d8:	mov	x19, x0
   1a7dc:	tst	w8, #0xe
   1a7e0:	b.ne	1a80c <PyInit__decimal@@Base+0x13cf8>  // b.any
   1a7e4:	ldrb	w9, [x2]
   1a7e8:	and	w10, w9, #0xe
   1a7ec:	bfxil	w10, w8, #0, #1
   1a7f0:	and	w8, w9, #0x1
   1a7f4:	orr	w8, w8, w10
   1a7f8:	cbnz	w8, 1a80c <PyInit__decimal@@Base+0x13cf8>
   1a7fc:	ldr	x8, [x1, #8]
   1a800:	cbnz	x8, 1a80c <PyInit__decimal@@Base+0x13cf8>
   1a804:	ldr	x8, [x2, #8]
   1a808:	cbz	x8, 1a830 <PyInit__decimal@@Base+0x13d1c>
   1a80c:	mov	w1, #0x100                 	// #256
   1a810:	mov	x0, x19
   1a814:	mov	x2, x21
   1a818:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1a81c:	ldp	x20, x19, [sp, #48]
   1a820:	ldp	x22, x21, [sp, #32]
   1a824:	ldp	x24, x23, [sp, #16]
   1a828:	ldp	x29, x30, [sp], #64
   1a82c:	ret
   1a830:	ldr	x8, [x2, #16]
   1a834:	ldr	x9, [x1, #16]
   1a838:	adrp	x22, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1a83c:	ldr	x10, [x22, #1344]
   1a840:	mov	x20, x3
   1a844:	cmp	x8, x9
   1a848:	csel	x24, x2, x1, gt
   1a84c:	ldr	x9, [x24, #24]
   1a850:	ldr	x8, [x19, #32]
   1a854:	csel	x23, x1, x2, gt
   1a858:	cmp	x10, x9
   1a85c:	csel	x1, x9, x10, lt  // lt = tstop
   1a860:	cmp	x1, x8
   1a864:	b.eq	1a898 <PyInit__decimal@@Base+0x13d84>  // b.none
   1a868:	ldrb	w9, [x19]
   1a86c:	tbnz	w9, #5, 1a880 <PyInit__decimal@@Base+0x13d6c>
   1a870:	mov	x0, x19
   1a874:	mov	x2, x21
   1a878:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1a87c:	b	1a89c <PyInit__decimal@@Base+0x13d88>
   1a880:	cmp	x1, x8
   1a884:	b.le	1a898 <PyInit__decimal@@Base+0x13d84>
   1a888:	mov	x0, x19
   1a88c:	mov	x2, x21
   1a890:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1a894:	b	1a89c <PyInit__decimal@@Base+0x13d88>
   1a898:	mov	w0, #0x1                   	// #1
   1a89c:	cbz	w0, 1a81c <PyInit__decimal@@Base+0x13d08>
   1a8a0:	ldr	x8, [x23, #40]
   1a8a4:	ldr	x9, [x24, #40]
   1a8a8:	ldr	x10, [x23, #24]
   1a8ac:	ldr	x12, [x8]
   1a8b0:	ldr	x11, [x9]
   1a8b4:	sub	x8, x10, #0x1
   1a8b8:	adrp	x10, 2e000 <PyInit__decimal@@Base+0x274ec>
   1a8bc:	cmp	x8, #0x1
   1a8c0:	add	x10, x10, #0x20
   1a8c4:	mov	x8, xzr
   1a8c8:	b.lt	1a964 <PyInit__decimal@@Base+0x13e50>  // b.tstop
   1a8cc:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   1a8d0:	movk	x13, #0xcccd
   1a8d4:	mov	w14, #0xa                   	// #10
   1a8d8:	mov	x15, xzr
   1a8dc:	mov	x9, xzr
   1a8e0:	b	1a900 <PyInit__decimal@@Base+0x13dec>
   1a8e4:	ldr	x11, [x10, x15]
   1a8e8:	add	x15, x15, #0x8
   1a8ec:	cmp	x15, #0x98
   1a8f0:	add	x9, x11, x9
   1a8f4:	mov	x11, x17
   1a8f8:	mov	x12, x16
   1a8fc:	b.eq	1a934 <PyInit__decimal@@Base+0x13e20>  // b.none
   1a900:	umulh	x16, x12, x13
   1a904:	umulh	x17, x11, x13
   1a908:	lsr	x16, x16, #3
   1a90c:	lsr	x17, x17, #3
   1a910:	msub	x12, x16, x14, x12
   1a914:	msub	x11, x17, x14, x11
   1a918:	orr	w18, w11, w12
   1a91c:	tst	x18, #0xe
   1a920:	b.ne	1a80c <PyInit__decimal@@Base+0x13cf8>  // b.any
   1a924:	tst	x11, x12
   1a928:	b.ne	1a8e4 <PyInit__decimal@@Base+0x13dd0>  // b.any
   1a92c:	mov	x11, xzr
   1a930:	b	1a8e8 <PyInit__decimal@@Base+0x13dd4>
   1a934:	ldr	x11, [x19, #40]
   1a938:	str	x9, [x11, x8, lsl #3]
   1a93c:	ldr	x11, [x23, #40]
   1a940:	ldr	x9, [x24, #40]
   1a944:	add	x8, x8, #0x1
   1a948:	ldr	x15, [x23, #24]
   1a94c:	lsl	x16, x8, #3
   1a950:	ldr	x12, [x11, x16]
   1a954:	ldr	x11, [x9, x16]
   1a958:	sub	x15, x15, #0x1
   1a95c:	cmp	x8, x15
   1a960:	b.lt	1a8d8 <PyInit__decimal@@Base+0x13dc4>  // b.tstop
   1a964:	ldr	x13, [x10, #72]
   1a968:	cmp	x13, x12
   1a96c:	b.ls	1a998 <PyInit__decimal@@Base+0x13e84>  // b.plast
   1a970:	ldr	x13, [x10, #32]
   1a974:	cmp	x13, x12
   1a978:	b.ls	1a9c0 <PyInit__decimal@@Base+0x13eac>  // b.plast
   1a97c:	ldr	x13, [x10, #16]
   1a980:	cmp	x13, x12
   1a984:	b.ls	1aa04 <PyInit__decimal@@Base+0x13ef0>  // b.plast
   1a988:	ldr	x13, [x10, #8]
   1a98c:	cmp	x13, x12
   1a990:	mov	w13, #0x1                   	// #1
   1a994:	b	1aa68 <PyInit__decimal@@Base+0x13f54>
   1a998:	ldr	x13, [x10, #112]
   1a99c:	cmp	x13, x12
   1a9a0:	b.ls	1a9dc <PyInit__decimal@@Base+0x13ec8>  // b.plast
   1a9a4:	ldr	x13, [x10, #88]
   1a9a8:	cmp	x13, x12
   1a9ac:	b.ls	1aa14 <PyInit__decimal@@Base+0x13f00>  // b.plast
   1a9b0:	ldr	x13, [x10, #80]
   1a9b4:	cmp	x13, x12
   1a9b8:	mov	w13, #0xa                   	// #10
   1a9bc:	b	1aa68 <PyInit__decimal@@Base+0x13f54>
   1a9c0:	ldr	x13, [x10, #48]
   1a9c4:	cmp	x13, x12
   1a9c8:	b.ls	1aa30 <PyInit__decimal@@Base+0x13f1c>  // b.plast
   1a9cc:	ldr	x13, [x10, #40]
   1a9d0:	cmp	x13, x12
   1a9d4:	mov	w13, #0x5                   	// #5
   1a9d8:	b	1aa68 <PyInit__decimal@@Base+0x13f54>
   1a9dc:	ldr	x13, [x10, #144]
   1a9e0:	cmp	x13, x12
   1a9e4:	b.ls	1aa4c <PyInit__decimal@@Base+0x13f38>  // b.plast
   1a9e8:	ldr	x13, [x10, #128]
   1a9ec:	cmp	x13, x12
   1a9f0:	b.ls	1aa5c <PyInit__decimal@@Base+0x13f48>  // b.plast
   1a9f4:	ldr	x13, [x10, #120]
   1a9f8:	cmp	x13, x12
   1a9fc:	mov	w13, #0xf                   	// #15
   1aa00:	b	1aa68 <PyInit__decimal@@Base+0x13f54>
   1aa04:	ldr	x13, [x10, #24]
   1aa08:	cmp	x13, x12
   1aa0c:	mov	w13, #0x3                   	// #3
   1aa10:	b	1aa68 <PyInit__decimal@@Base+0x13f54>
   1aa14:	ldr	x13, [x10, #104]
   1aa18:	cmp	x13, x12
   1aa1c:	b.ls	1abb4 <PyInit__decimal@@Base+0x140a0>  // b.plast
   1aa20:	ldr	x13, [x10, #96]
   1aa24:	cmp	x13, x12
   1aa28:	mov	w13, #0xc                   	// #12
   1aa2c:	b	1aa68 <PyInit__decimal@@Base+0x13f54>
   1aa30:	ldr	x13, [x10, #64]
   1aa34:	cmp	x13, x12
   1aa38:	b.ls	1abbc <PyInit__decimal@@Base+0x140a8>  // b.plast
   1aa3c:	ldr	x13, [x10, #56]
   1aa40:	cmp	x13, x12
   1aa44:	mov	w13, #0x7                   	// #7
   1aa48:	b	1aa68 <PyInit__decimal@@Base+0x13f54>
   1aa4c:	ldr	x13, [x10, #152]
   1aa50:	cmp	x13, x12
   1aa54:	mov	w13, #0x13                  	// #19
   1aa58:	b	1aa68 <PyInit__decimal@@Base+0x13f54>
   1aa5c:	ldr	x13, [x10, #136]
   1aa60:	cmp	x13, x12
   1aa64:	mov	w13, #0x11                  	// #17
   1aa68:	cinc	x13, x13, ls  // ls = plast
   1aa6c:	mov	x16, #0xcccccccccccccccc    	// #-3689348814741910324
   1aa70:	mov	x14, xzr
   1aa74:	mov	x15, xzr
   1aa78:	movk	x16, #0xcccd
   1aa7c:	mov	w17, #0xa                   	// #10
   1aa80:	b	1aa9c <PyInit__decimal@@Base+0x13f88>
   1aa84:	mov	x12, xzr
   1aa88:	add	x14, x14, #0x1
   1aa8c:	cmp	x14, x13
   1aa90:	add	x15, x12, x15
   1aa94:	mov	x12, x18
   1aa98:	b.cs	1aad4 <PyInit__decimal@@Base+0x13fc0>  // b.hs, b.nlast
   1aa9c:	mov	x0, x11
   1aaa0:	umulh	x11, x12, x16
   1aaa4:	umulh	x1, x0, x16
   1aaa8:	lsr	x18, x11, #3
   1aaac:	lsr	x11, x1, #3
   1aab0:	msub	x12, x18, x17, x12
   1aab4:	msub	x0, x11, x17, x0
   1aab8:	orr	w1, w0, w12
   1aabc:	tst	x1, #0xe
   1aac0:	b.ne	1a80c <PyInit__decimal@@Base+0x13cf8>  // b.any
   1aac4:	tst	x0, x12
   1aac8:	b.eq	1aa84 <PyInit__decimal@@Base+0x13f70>  // b.none
   1aacc:	ldr	x12, [x10, x14, lsl #3]
   1aad0:	b	1aa88 <PyInit__decimal@@Base+0x13f74>
   1aad4:	ldr	x0, [x19, #40]
   1aad8:	cmp	w14, #0x12
   1aadc:	str	x15, [x0, x8, lsl #3]
   1aae0:	b.gt	1ab18 <PyInit__decimal@@Base+0x14004>
   1aae4:	mov	w12, #0x13                  	// #19
   1aae8:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   1aaec:	movk	x10, #0xcccd
   1aaf0:	sub	w12, w12, w14
   1aaf4:	mov	w13, #0xa                   	// #10
   1aaf8:	umulh	x14, x11, x10
   1aafc:	lsr	x14, x14, #3
   1ab00:	msub	x11, x14, x13, x11
   1ab04:	cmp	x11, #0x1
   1ab08:	b.hi	1a80c <PyInit__decimal@@Base+0x13cf8>  // b.pmore
   1ab0c:	subs	w12, w12, #0x1
   1ab10:	mov	x11, x14
   1ab14:	b.ne	1aaf8 <PyInit__decimal@@Base+0x13fe4>  // b.any
   1ab18:	ldr	x10, [x24, #24]
   1ab1c:	add	x8, x8, #0x1
   1ab20:	cmp	x8, x10
   1ab24:	b.ge	1ab6c <PyInit__decimal@@Base+0x14058>  // b.tcont
   1ab28:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   1ab2c:	movk	x10, #0xcccd
   1ab30:	mov	w11, #0xa                   	// #10
   1ab34:	ldr	x13, [x9, x8, lsl #3]
   1ab38:	mov	w12, #0x13                  	// #19
   1ab3c:	umulh	x14, x13, x10
   1ab40:	lsr	x14, x14, #3
   1ab44:	msub	x13, x14, x11, x13
   1ab48:	cmp	x13, #0x1
   1ab4c:	b.hi	1a80c <PyInit__decimal@@Base+0x13cf8>  // b.pmore
   1ab50:	subs	w12, w12, #0x1
   1ab54:	mov	x13, x14
   1ab58:	b.ne	1ab3c <PyInit__decimal@@Base+0x14028>  // b.any
   1ab5c:	ldr	x12, [x24, #24]
   1ab60:	add	x8, x8, #0x1
   1ab64:	cmp	x8, x12
   1ab68:	b.lt	1ab34 <PyInit__decimal@@Base+0x14020>  // b.tstop
   1ab6c:	ldrb	w24, [x19]
   1ab70:	str	xzr, [x19, #8]
   1ab74:	and	w8, w24, #0xf0
   1ab78:	strb	w8, [x19]
   1ab7c:	ldr	x1, [x23, #24]
   1ab80:	bl	1abf0 <PyInit__decimal@@Base+0x140dc>
   1ab84:	str	x0, [x19, #24]
   1ab88:	ldr	x9, [x22, #1344]
   1ab8c:	ldr	x8, [x19, #32]
   1ab90:	cmp	x9, x0
   1ab94:	csel	x1, x0, x9, lt  // lt = tstop
   1ab98:	cmp	x1, x8
   1ab9c:	b.eq	1abd8 <PyInit__decimal@@Base+0x140c4>  // b.none
   1aba0:	tbnz	w24, #5, 1abc4 <PyInit__decimal@@Base+0x140b0>
   1aba4:	mov	x0, x19
   1aba8:	mov	x2, x21
   1abac:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1abb0:	b	1abd8 <PyInit__decimal@@Base+0x140c4>
   1abb4:	mov	w13, #0xe                   	// #14
   1abb8:	b	1aa6c <PyInit__decimal@@Base+0x13f58>
   1abbc:	mov	w13, #0x9                   	// #9
   1abc0:	b	1aa6c <PyInit__decimal@@Base+0x13f58>
   1abc4:	cmp	x1, x8
   1abc8:	b.le	1abd8 <PyInit__decimal@@Base+0x140c4>
   1abcc:	mov	x0, x19
   1abd0:	mov	x2, x21
   1abd4:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1abd8:	mov	x0, x19
   1abdc:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   1abe0:	mov	x0, x19
   1abe4:	mov	x1, x20
   1abe8:	bl	1ac10 <PyInit__decimal@@Base+0x140fc>
   1abec:	b	1a81c <PyInit__decimal@@Base+0x13d08>
   1abf0:	sub	x8, x0, #0x8
   1abf4:	mov	x0, x1
   1abf8:	cmp	x1, #0x2
   1abfc:	b.lt	1ac0c <PyInit__decimal@@Base+0x140f8>  // b.tstop
   1ac00:	ldr	x9, [x8, x0, lsl #3]
   1ac04:	sub	x1, x0, #0x1
   1ac08:	cbz	x9, 1abf4 <PyInit__decimal@@Base+0x140e0>
   1ac0c:	ret
   1ac10:	sub	sp, sp, #0x40
   1ac14:	stp	x29, x30, [sp, #32]
   1ac18:	stp	x20, x19, [sp, #48]
   1ac1c:	add	x29, sp, #0x20
   1ac20:	ldr	x8, [x0, #24]
   1ac24:	mov	x19, x0
   1ac28:	cmp	x8, #0x1
   1ac2c:	b.lt	1ace8 <PyInit__decimal@@Base+0x141d4>  // b.tstop
   1ac30:	ldr	x8, [x19, #16]
   1ac34:	ldr	x2, [x1]
   1ac38:	cmp	x8, x2
   1ac3c:	b.le	1ace8 <PyInit__decimal@@Base+0x141d4>
   1ac40:	add	x0, sp, #0x10
   1ac44:	add	x1, sp, #0x8
   1ac48:	bl	181e0 <PyInit__decimal@@Base+0x116cc>
   1ac4c:	ldp	x8, x9, [sp, #8]
   1ac50:	cmp	x8, #0x0
   1ac54:	cinc	x1, x9, ne  // ne = any
   1ac58:	str	x1, [sp, #16]
   1ac5c:	cbz	x8, 1ac84 <PyInit__decimal@@Base+0x14170>
   1ac60:	ldr	x9, [x19, #40]
   1ac64:	adrp	x10, 2e000 <PyInit__decimal@@Base+0x274ec>
   1ac68:	add	x10, x10, #0x20
   1ac6c:	ldr	x8, [x10, x8, lsl #3]
   1ac70:	add	x9, x9, x1, lsl #3
   1ac74:	ldur	x10, [x9, #-8]
   1ac78:	udiv	x11, x10, x8
   1ac7c:	msub	x8, x11, x8, x10
   1ac80:	stur	x8, [x9, #-8]
   1ac84:	ldr	x0, [x19, #40]
   1ac88:	bl	1abf0 <PyInit__decimal@@Base+0x140dc>
   1ac8c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1ac90:	ldr	x9, [x8, #1344]
   1ac94:	str	x0, [sp, #16]
   1ac98:	ldr	x8, [x19, #32]
   1ac9c:	mov	x20, x0
   1aca0:	cmp	x9, x0
   1aca4:	csel	x1, x0, x9, lt  // lt = tstop
   1aca8:	cmp	x1, x8
   1acac:	b.eq	1acdc <PyInit__decimal@@Base+0x141c8>  // b.none
   1acb0:	ldrb	w9, [x19]
   1acb4:	tbnz	w9, #5, 1acc8 <PyInit__decimal@@Base+0x141b4>
   1acb8:	sub	x2, x29, #0x4
   1acbc:	mov	x0, x19
   1acc0:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1acc4:	b	1acdc <PyInit__decimal@@Base+0x141c8>
   1acc8:	cmp	x1, x8
   1accc:	b.le	1acdc <PyInit__decimal@@Base+0x141c8>
   1acd0:	sub	x2, x29, #0x4
   1acd4:	mov	x0, x19
   1acd8:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1acdc:	mov	x0, x19
   1ace0:	str	x20, [x19, #24]
   1ace4:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   1ace8:	ldrb	w8, [x19]
   1acec:	tst	w8, #0xe
   1acf0:	b.ne	1ad1c <PyInit__decimal@@Base+0x14208>  // b.any
   1acf4:	ldr	x9, [x19, #40]
   1acf8:	ldr	x10, [x19, #24]
   1acfc:	add	x9, x9, x10, lsl #3
   1ad00:	ldur	x9, [x9, #-8]
   1ad04:	cbnz	x9, 1ad1c <PyInit__decimal@@Base+0x14208>
   1ad08:	ldr	x3, [x19, #8]
   1ad0c:	and	w1, w8, #0x1
   1ad10:	mov	x0, x19
   1ad14:	mov	x2, xzr
   1ad18:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   1ad1c:	ldp	x20, x19, [sp, #48]
   1ad20:	ldp	x29, x30, [sp, #32]
   1ad24:	add	sp, sp, #0x40
   1ad28:	ret
   1ad2c:	stp	x29, x30, [sp, #-16]!
   1ad30:	mov	x29, sp
   1ad34:	ldrb	w8, [x0]
   1ad38:	tst	w8, #0xc
   1ad3c:	b.eq	1ad60 <PyInit__decimal@@Base+0x1424c>  // b.none
   1ad40:	adrp	x9, 2d000 <PyInit__decimal@@Base+0x264ec>
   1ad44:	adrp	x10, 2d000 <PyInit__decimal@@Base+0x264ec>
   1ad48:	add	x9, x9, #0x635
   1ad4c:	add	x10, x10, #0x634
   1ad50:	tst	w8, #0x4
   1ad54:	csel	x0, x10, x9, eq  // eq = none
   1ad58:	ldp	x29, x30, [sp], #16
   1ad5c:	ret
   1ad60:	tbnz	w8, #0, 1ad78 <PyInit__decimal@@Base+0x14264>
   1ad64:	tbz	w8, #1, 1ad8c <PyInit__decimal@@Base+0x14278>
   1ad68:	adrp	x0, 2e000 <PyInit__decimal@@Base+0x274ec>
   1ad6c:	add	x0, x0, #0xca6
   1ad70:	ldp	x29, x30, [sp], #16
   1ad74:	ret
   1ad78:	tbz	w8, #1, 1adc0 <PyInit__decimal@@Base+0x142ac>
   1ad7c:	adrp	x0, 2e000 <PyInit__decimal@@Base+0x274ec>
   1ad80:	add	x0, x0, #0xcc9
   1ad84:	ldp	x29, x30, [sp], #16
   1ad88:	ret
   1ad8c:	tst	w8, #0xe
   1ad90:	b.ne	1ada8 <PyInit__decimal@@Base+0x14294>  // b.any
   1ad94:	ldr	x8, [x0, #40]
   1ad98:	ldr	x9, [x0, #24]
   1ad9c:	add	x8, x8, x9, lsl #3
   1ada0:	ldur	x8, [x8, #-8]
   1ada4:	cbz	x8, 1ae00 <PyInit__decimal@@Base+0x142ec>
   1ada8:	bl	18420 <PyInit__decimal@@Base+0x1190c>
   1adac:	adrp	x8, 2e000 <PyInit__decimal@@Base+0x274ec>
   1adb0:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   1adb4:	add	x8, x8, #0xcb6
   1adb8:	add	x9, x9, #0xcbe
   1adbc:	b	1adf0 <PyInit__decimal@@Base+0x142dc>
   1adc0:	tst	w8, #0xe
   1adc4:	b.ne	1addc <PyInit__decimal@@Base+0x142c8>  // b.any
   1adc8:	ldr	x8, [x0, #40]
   1adcc:	ldr	x9, [x0, #24]
   1add0:	add	x8, x8, x9, lsl #3
   1add4:	ldur	x8, [x8, #-8]
   1add8:	cbz	x8, 1ae10 <PyInit__decimal@@Base+0x142fc>
   1addc:	bl	18420 <PyInit__decimal@@Base+0x1190c>
   1ade0:	adrp	x8, 2e000 <PyInit__decimal@@Base+0x274ec>
   1ade4:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   1ade8:	add	x8, x8, #0xcd9
   1adec:	add	x9, x9, #0xce1
   1adf0:	cmp	w0, #0x0
   1adf4:	csel	x0, x9, x8, eq  // eq = none
   1adf8:	ldp	x29, x30, [sp], #16
   1adfc:	ret
   1ae00:	adrp	x0, 2e000 <PyInit__decimal@@Base+0x274ec>
   1ae04:	add	x0, x0, #0xcb0
   1ae08:	ldp	x29, x30, [sp], #16
   1ae0c:	ret
   1ae10:	adrp	x0, 2e000 <PyInit__decimal@@Base+0x274ec>
   1ae14:	add	x0, x0, #0xcd3
   1ae18:	ldp	x29, x30, [sp], #16
   1ae1c:	ret
   1ae20:	sub	sp, sp, #0x50
   1ae24:	stp	x29, x30, [sp, #16]
   1ae28:	stp	x24, x23, [sp, #32]
   1ae2c:	stp	x22, x21, [sp, #48]
   1ae30:	stp	x20, x19, [sp, #64]
   1ae34:	add	x29, sp, #0x10
   1ae38:	ldrb	w8, [x1]
   1ae3c:	mov	x21, x3
   1ae40:	mov	x19, x0
   1ae44:	tst	w8, #0xf
   1ae48:	b.ne	1ae58 <PyInit__decimal@@Base+0x14344>  // b.any
   1ae4c:	ldr	x8, [x1, #8]
   1ae50:	mov	x22, x1
   1ae54:	cbz	x8, 1ae80 <PyInit__decimal@@Base+0x1436c>
   1ae58:	mov	w1, #0x100                 	// #256
   1ae5c:	mov	x0, x19
   1ae60:	mov	x2, x21
   1ae64:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1ae68:	ldp	x20, x19, [sp, #64]
   1ae6c:	ldp	x22, x21, [sp, #48]
   1ae70:	ldp	x24, x23, [sp, #32]
   1ae74:	ldp	x29, x30, [sp, #16]
   1ae78:	add	sp, sp, #0x50
   1ae7c:	ret
   1ae80:	ldr	x8, [x22, #16]
   1ae84:	ldr	x9, [x2]
   1ae88:	mov	x20, x2
   1ae8c:	add	x0, sp, #0x8
   1ae90:	mov	x1, sp
   1ae94:	cmp	x8, x9
   1ae98:	csel	x2, x9, x8, lt  // lt = tstop
   1ae9c:	bl	181e0 <PyInit__decimal@@Base+0x116cc>
   1aea0:	ldp	x8, x9, [sp]
   1aea4:	adrp	x24, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1aea8:	ldr	x10, [x24, #1344]
   1aeac:	cmp	x8, #0x0
   1aeb0:	ldr	x8, [x19, #32]
   1aeb4:	cinc	x23, x9, ne  // ne = any
   1aeb8:	cmp	x10, x23
   1aebc:	csel	x1, x23, x10, lt  // lt = tstop
   1aec0:	cmp	x1, x8
   1aec4:	b.ne	1aed4 <PyInit__decimal@@Base+0x143c0>  // b.any
   1aec8:	mov	w0, #0x1                   	// #1
   1aecc:	cbnz	w0, 1af08 <PyInit__decimal@@Base+0x143f4>
   1aed0:	b	1ae68 <PyInit__decimal@@Base+0x14354>
   1aed4:	ldrb	w9, [x19]
   1aed8:	tbnz	w9, #5, 1aef0 <PyInit__decimal@@Base+0x143dc>
   1aedc:	mov	x0, x19
   1aee0:	mov	x2, x21
   1aee4:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1aee8:	cbnz	w0, 1af08 <PyInit__decimal@@Base+0x143f4>
   1aeec:	b	1ae68 <PyInit__decimal@@Base+0x14354>
   1aef0:	cmp	x1, x8
   1aef4:	b.le	1aec8 <PyInit__decimal@@Base+0x143b4>
   1aef8:	mov	x0, x19
   1aefc:	mov	x2, x21
   1af00:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1af04:	cbz	w0, 1ae68 <PyInit__decimal@@Base+0x14354>
   1af08:	cmp	x23, #0x1
   1af0c:	b.lt	1af9c <PyInit__decimal@@Base+0x14488>  // b.tstop
   1af10:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   1af14:	adrp	x11, 2e000 <PyInit__decimal@@Base+0x274ec>
   1af18:	mov	x8, xzr
   1af1c:	movk	x9, #0xcccd
   1af20:	mov	w10, #0xa                   	// #10
   1af24:	add	x11, x11, #0x20
   1af28:	ldr	x12, [x22, #24]
   1af2c:	cmp	x8, x12
   1af30:	b.ge	1af40 <PyInit__decimal@@Base+0x1442c>  // b.tcont
   1af34:	ldr	x12, [x22, #40]
   1af38:	ldr	x15, [x12, x8, lsl #3]
   1af3c:	b	1af44 <PyInit__decimal@@Base+0x14430>
   1af40:	mov	x15, xzr
   1af44:	mov	x13, xzr
   1af48:	mov	x12, xzr
   1af4c:	b	1af68 <PyInit__decimal@@Base+0x14454>
   1af50:	mov	x15, xzr
   1af54:	add	x13, x13, #0x8
   1af58:	cmp	x13, #0x98
   1af5c:	add	x12, x15, x12
   1af60:	mov	x15, x14
   1af64:	b.eq	1af88 <PyInit__decimal@@Base+0x14474>  // b.none
   1af68:	umulh	x14, x15, x9
   1af6c:	lsr	x14, x14, #3
   1af70:	msub	x15, x14, x10, x15
   1af74:	cmp	x15, #0x1
   1af78:	b.hi	1ae58 <PyInit__decimal@@Base+0x14344>  // b.pmore
   1af7c:	cbnz	x15, 1af50 <PyInit__decimal@@Base+0x1443c>
   1af80:	ldr	x15, [x11, x13]
   1af84:	b	1af54 <PyInit__decimal@@Base+0x14440>
   1af88:	ldr	x13, [x19, #40]
   1af8c:	str	x12, [x13, x8, lsl #3]
   1af90:	add	x8, x8, #0x1
   1af94:	cmp	x8, x23
   1af98:	b.ne	1af28 <PyInit__decimal@@Base+0x14414>  // b.any
   1af9c:	ldrb	w22, [x19]
   1afa0:	ldr	x0, [x19, #40]
   1afa4:	mov	x1, x23
   1afa8:	str	xzr, [x19, #8]
   1afac:	and	w8, w22, #0xf0
   1afb0:	strb	w8, [x19]
   1afb4:	bl	1abf0 <PyInit__decimal@@Base+0x140dc>
   1afb8:	str	x0, [x19, #24]
   1afbc:	ldr	x9, [x24, #1344]
   1afc0:	ldr	x8, [x19, #32]
   1afc4:	cmp	x9, x0
   1afc8:	csel	x1, x0, x9, lt  // lt = tstop
   1afcc:	cmp	x1, x8
   1afd0:	b.eq	1affc <PyInit__decimal@@Base+0x144e8>  // b.none
   1afd4:	tbnz	w22, #5, 1afe8 <PyInit__decimal@@Base+0x144d4>
   1afd8:	mov	x0, x19
   1afdc:	mov	x2, x21
   1afe0:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1afe4:	b	1affc <PyInit__decimal@@Base+0x144e8>
   1afe8:	cmp	x1, x8
   1afec:	b.le	1affc <PyInit__decimal@@Base+0x144e8>
   1aff0:	mov	x0, x19
   1aff4:	mov	x2, x21
   1aff8:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1affc:	mov	x0, x19
   1b000:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   1b004:	mov	x0, x19
   1b008:	mov	x1, x20
   1b00c:	bl	1ac10 <PyInit__decimal@@Base+0x140fc>
   1b010:	b	1ae68 <PyInit__decimal@@Base+0x14354>
   1b014:	stp	x29, x30, [sp, #-32]!
   1b018:	stp	x20, x19, [sp, #16]
   1b01c:	mov	x29, sp
   1b020:	ldrb	w8, [x1]
   1b024:	mov	x19, x3
   1b028:	mov	x20, x0
   1b02c:	tst	w8, #0xe
   1b030:	b.eq	1b058 <PyInit__decimal@@Base+0x14544>  // b.none
   1b034:	mov	x0, x20
   1b038:	mov	x3, x19
   1b03c:	bl	19544 <PyInit__decimal@@Base+0x12a30>
   1b040:	cbnz	w0, 1b0a4 <PyInit__decimal@@Base+0x14590>
   1b044:	mov	w2, #0x2                   	// #2
   1b048:	mov	x0, x20
   1b04c:	mov	w1, wzr
   1b050:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1b054:	b	1b0a4 <PyInit__decimal@@Base+0x14590>
   1b058:	ldr	x8, [x1, #40]
   1b05c:	ldr	x9, [x1, #24]
   1b060:	add	x8, x8, x9, lsl #3
   1b064:	ldur	x8, [x8, #-8]
   1b068:	cbz	x8, 1b088 <PyInit__decimal@@Base+0x14574>
   1b06c:	ldp	x8, x9, [x1, #8]
   1b070:	mov	x0, x20
   1b074:	mov	x3, x19
   1b078:	add	x8, x8, x9
   1b07c:	sub	x1, x8, #0x1
   1b080:	bl	190f4 <PyInit__decimal@@Base+0x125e0>
   1b084:	b	1b0a4 <PyInit__decimal@@Base+0x14590>
   1b088:	mov	w1, #0x1                   	// #1
   1b08c:	mov	w2, #0x2                   	// #2
   1b090:	mov	x0, x20
   1b094:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1b098:	ldr	w8, [x19]
   1b09c:	orr	w8, w8, #0x4
   1b0a0:	str	w8, [x19]
   1b0a4:	ldp	x20, x19, [sp, #16]
   1b0a8:	ldp	x29, x30, [sp], #32
   1b0ac:	ret
   1b0b0:	stp	x29, x30, [sp, #-64]!
   1b0b4:	stp	x24, x23, [sp, #16]
   1b0b8:	stp	x22, x21, [sp, #32]
   1b0bc:	stp	x20, x19, [sp, #48]
   1b0c0:	mov	x29, sp
   1b0c4:	ldrb	w8, [x1]
   1b0c8:	mov	x21, x4
   1b0cc:	mov	x19, x0
   1b0d0:	tst	w8, #0xe
   1b0d4:	b.ne	1b100 <PyInit__decimal@@Base+0x145ec>  // b.any
   1b0d8:	ldrb	w9, [x2]
   1b0dc:	and	w10, w9, #0xe
   1b0e0:	bfxil	w10, w8, #0, #1
   1b0e4:	and	w8, w9, #0x1
   1b0e8:	orr	w8, w8, w10
   1b0ec:	cbnz	w8, 1b100 <PyInit__decimal@@Base+0x145ec>
   1b0f0:	ldr	x8, [x1, #8]
   1b0f4:	cbnz	x8, 1b100 <PyInit__decimal@@Base+0x145ec>
   1b0f8:	ldr	x8, [x2, #8]
   1b0fc:	cbz	x8, 1b124 <PyInit__decimal@@Base+0x14610>
   1b100:	mov	w1, #0x100                 	// #256
   1b104:	mov	x0, x19
   1b108:	mov	x2, x21
   1b10c:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1b110:	ldp	x20, x19, [sp, #48]
   1b114:	ldp	x22, x21, [sp, #32]
   1b118:	ldp	x24, x23, [sp, #16]
   1b11c:	ldp	x29, x30, [sp], #64
   1b120:	ret
   1b124:	ldr	x8, [x2, #16]
   1b128:	ldr	x9, [x1, #16]
   1b12c:	adrp	x22, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1b130:	ldr	x10, [x22, #1344]
   1b134:	mov	x20, x3
   1b138:	cmp	x8, x9
   1b13c:	csel	x23, x2, x1, gt
   1b140:	ldr	x9, [x23, #24]
   1b144:	ldr	x8, [x19, #32]
   1b148:	csel	x24, x1, x2, gt
   1b14c:	cmp	x10, x9
   1b150:	csel	x1, x9, x10, lt  // lt = tstop
   1b154:	cmp	x1, x8
   1b158:	b.eq	1b18c <PyInit__decimal@@Base+0x14678>  // b.none
   1b15c:	ldrb	w9, [x19]
   1b160:	tbnz	w9, #5, 1b174 <PyInit__decimal@@Base+0x14660>
   1b164:	mov	x0, x19
   1b168:	mov	x2, x21
   1b16c:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1b170:	b	1b190 <PyInit__decimal@@Base+0x1467c>
   1b174:	cmp	x1, x8
   1b178:	b.le	1b18c <PyInit__decimal@@Base+0x14678>
   1b17c:	mov	x0, x19
   1b180:	mov	x2, x21
   1b184:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1b188:	b	1b190 <PyInit__decimal@@Base+0x1467c>
   1b18c:	mov	w0, #0x1                   	// #1
   1b190:	cbz	w0, 1b110 <PyInit__decimal@@Base+0x145fc>
   1b194:	ldr	x8, [x24, #40]
   1b198:	ldr	x10, [x23, #40]
   1b19c:	ldr	x9, [x24, #24]
   1b1a0:	ldr	x12, [x8]
   1b1a4:	ldr	x11, [x10]
   1b1a8:	sub	x8, x9, #0x1
   1b1ac:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   1b1b0:	cmp	x8, #0x1
   1b1b4:	add	x9, x9, #0x20
   1b1b8:	mov	x8, xzr
   1b1bc:	b.lt	1b250 <PyInit__decimal@@Base+0x1473c>  // b.tstop
   1b1c0:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   1b1c4:	movk	x13, #0xcccd
   1b1c8:	mov	w14, #0xa                   	// #10
   1b1cc:	mov	x15, xzr
   1b1d0:	mov	x10, xzr
   1b1d4:	b	1b1f0 <PyInit__decimal@@Base+0x146dc>
   1b1d8:	add	x15, x15, #0x8
   1b1dc:	cmp	x15, #0x98
   1b1e0:	add	x10, x11, x10
   1b1e4:	mov	x11, x17
   1b1e8:	mov	x12, x16
   1b1ec:	b.eq	1b220 <PyInit__decimal@@Base+0x1470c>  // b.none
   1b1f0:	umulh	x16, x12, x13
   1b1f4:	umulh	x17, x11, x13
   1b1f8:	lsr	x16, x16, #3
   1b1fc:	lsr	x17, x17, #3
   1b200:	msub	x12, x16, x14, x12
   1b204:	msub	x11, x17, x14, x11
   1b208:	orr	x11, x11, x12
   1b20c:	tst	x11, #0xe
   1b210:	b.ne	1b100 <PyInit__decimal@@Base+0x145ec>  // b.any
   1b214:	cbz	x11, 1b1d8 <PyInit__decimal@@Base+0x146c4>
   1b218:	ldr	x11, [x9, x15]
   1b21c:	b	1b1d8 <PyInit__decimal@@Base+0x146c4>
   1b220:	ldr	x11, [x19, #40]
   1b224:	str	x10, [x11, x8, lsl #3]
   1b228:	ldr	x11, [x24, #40]
   1b22c:	ldr	x10, [x23, #40]
   1b230:	add	x8, x8, #0x1
   1b234:	ldr	x15, [x24, #24]
   1b238:	lsl	x16, x8, #3
   1b23c:	ldr	x12, [x11, x16]
   1b240:	ldr	x11, [x10, x16]
   1b244:	sub	x15, x15, #0x1
   1b248:	cmp	x8, x15
   1b24c:	b.lt	1b1cc <PyInit__decimal@@Base+0x146b8>  // b.tstop
   1b250:	ldr	x13, [x9, #72]
   1b254:	cmp	x13, x12
   1b258:	b.ls	1b284 <PyInit__decimal@@Base+0x14770>  // b.plast
   1b25c:	ldr	x13, [x9, #32]
   1b260:	cmp	x13, x12
   1b264:	b.ls	1b2ac <PyInit__decimal@@Base+0x14798>  // b.plast
   1b268:	ldr	x13, [x9, #16]
   1b26c:	cmp	x13, x12
   1b270:	b.ls	1b2f0 <PyInit__decimal@@Base+0x147dc>  // b.plast
   1b274:	ldr	x13, [x9, #8]
   1b278:	cmp	x13, x12
   1b27c:	mov	w13, #0x1                   	// #1
   1b280:	b	1b354 <PyInit__decimal@@Base+0x14840>
   1b284:	ldr	x13, [x9, #112]
   1b288:	cmp	x13, x12
   1b28c:	b.ls	1b2c8 <PyInit__decimal@@Base+0x147b4>  // b.plast
   1b290:	ldr	x13, [x9, #88]
   1b294:	cmp	x13, x12
   1b298:	b.ls	1b300 <PyInit__decimal@@Base+0x147ec>  // b.plast
   1b29c:	ldr	x13, [x9, #80]
   1b2a0:	cmp	x13, x12
   1b2a4:	mov	w13, #0xa                   	// #10
   1b2a8:	b	1b354 <PyInit__decimal@@Base+0x14840>
   1b2ac:	ldr	x13, [x9, #48]
   1b2b0:	cmp	x13, x12
   1b2b4:	b.ls	1b31c <PyInit__decimal@@Base+0x14808>  // b.plast
   1b2b8:	ldr	x13, [x9, #40]
   1b2bc:	cmp	x13, x12
   1b2c0:	mov	w13, #0x5                   	// #5
   1b2c4:	b	1b354 <PyInit__decimal@@Base+0x14840>
   1b2c8:	ldr	x13, [x9, #144]
   1b2cc:	cmp	x13, x12
   1b2d0:	b.ls	1b338 <PyInit__decimal@@Base+0x14824>  // b.plast
   1b2d4:	ldr	x13, [x9, #128]
   1b2d8:	cmp	x13, x12
   1b2dc:	b.ls	1b348 <PyInit__decimal@@Base+0x14834>  // b.plast
   1b2e0:	ldr	x13, [x9, #120]
   1b2e4:	cmp	x13, x12
   1b2e8:	mov	w13, #0xf                   	// #15
   1b2ec:	b	1b354 <PyInit__decimal@@Base+0x14840>
   1b2f0:	ldr	x13, [x9, #24]
   1b2f4:	cmp	x13, x12
   1b2f8:	mov	w13, #0x3                   	// #3
   1b2fc:	b	1b354 <PyInit__decimal@@Base+0x14840>
   1b300:	ldr	x13, [x9, #104]
   1b304:	cmp	x13, x12
   1b308:	b.ls	1b4a0 <PyInit__decimal@@Base+0x1498c>  // b.plast
   1b30c:	ldr	x13, [x9, #96]
   1b310:	cmp	x13, x12
   1b314:	mov	w13, #0xc                   	// #12
   1b318:	b	1b354 <PyInit__decimal@@Base+0x14840>
   1b31c:	ldr	x13, [x9, #64]
   1b320:	cmp	x13, x12
   1b324:	b.ls	1b4a8 <PyInit__decimal@@Base+0x14994>  // b.plast
   1b328:	ldr	x13, [x9, #56]
   1b32c:	cmp	x13, x12
   1b330:	mov	w13, #0x7                   	// #7
   1b334:	b	1b354 <PyInit__decimal@@Base+0x14840>
   1b338:	ldr	x13, [x9, #152]
   1b33c:	cmp	x13, x12
   1b340:	mov	w13, #0x13                  	// #19
   1b344:	b	1b354 <PyInit__decimal@@Base+0x14840>
   1b348:	ldr	x13, [x9, #136]
   1b34c:	cmp	x13, x12
   1b350:	mov	w13, #0x11                  	// #17
   1b354:	cinc	x14, x13, ls  // ls = plast
   1b358:	mov	x16, #0xcccccccccccccccc    	// #-3689348814741910324
   1b35c:	mov	x15, xzr
   1b360:	mov	x13, xzr
   1b364:	movk	x16, #0xcccd
   1b368:	mov	w17, #0xa                   	// #10
   1b36c:	b	1b384 <PyInit__decimal@@Base+0x14870>
   1b370:	add	x15, x15, #0x1
   1b374:	cmp	x15, x14
   1b378:	add	x13, x12, x13
   1b37c:	mov	x12, x18
   1b380:	b.cs	1b3b8 <PyInit__decimal@@Base+0x148a4>  // b.hs, b.nlast
   1b384:	mov	x0, x11
   1b388:	umulh	x11, x12, x16
   1b38c:	umulh	x1, x0, x16
   1b390:	lsr	x18, x11, #3
   1b394:	lsr	x11, x1, #3
   1b398:	msub	x12, x18, x17, x12
   1b39c:	msub	x0, x11, x17, x0
   1b3a0:	orr	x12, x0, x12
   1b3a4:	tst	x12, #0xe
   1b3a8:	b.ne	1b100 <PyInit__decimal@@Base+0x145ec>  // b.any
   1b3ac:	cbz	x12, 1b370 <PyInit__decimal@@Base+0x1485c>
   1b3b0:	ldr	x12, [x9, x15, lsl #3]
   1b3b4:	b	1b370 <PyInit__decimal@@Base+0x1485c>
   1b3b8:	cmp	w15, #0x12
   1b3bc:	b.gt	1b3f8 <PyInit__decimal@@Base+0x148e4>
   1b3c0:	mov	x12, #0xcccccccccccccccc    	// #-3689348814741910324
   1b3c4:	movk	x12, #0xcccd
   1b3c8:	mov	w14, #0xa                   	// #10
   1b3cc:	umulh	x16, x11, x12
   1b3d0:	lsr	x16, x16, #3
   1b3d4:	msub	x11, x16, x14, x11
   1b3d8:	cmp	x11, #0x1
   1b3dc:	b.hi	1b100 <PyInit__decimal@@Base+0x145ec>  // b.pmore
   1b3e0:	ldr	x17, [x9, x15, lsl #3]
   1b3e4:	add	x15, x15, #0x1
   1b3e8:	cmp	x15, #0x13
   1b3ec:	madd	x13, x17, x11, x13
   1b3f0:	mov	x11, x16
   1b3f4:	b.ne	1b3cc <PyInit__decimal@@Base+0x148b8>  // b.any
   1b3f8:	ldr	x0, [x19, #40]
   1b3fc:	str	x13, [x0, x8, lsl #3]
   1b400:	ldr	x1, [x23, #24]
   1b404:	add	x8, x8, #0x1
   1b408:	cmp	x8, x1
   1b40c:	b.ge	1b45c <PyInit__decimal@@Base+0x14948>  // b.tcont
   1b410:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   1b414:	movk	x9, #0xcccd
   1b418:	mov	w11, #0xa                   	// #10
   1b41c:	ldr	x12, [x10, x8, lsl #3]
   1b420:	mov	w13, #0x13                  	// #19
   1b424:	mov	x15, x12
   1b428:	umulh	x14, x15, x9
   1b42c:	lsr	x14, x14, #3
   1b430:	msub	x15, x14, x11, x15
   1b434:	cmp	x15, #0x1
   1b438:	b.hi	1b100 <PyInit__decimal@@Base+0x145ec>  // b.pmore
   1b43c:	subs	w13, w13, #0x1
   1b440:	mov	x15, x14
   1b444:	b.ne	1b428 <PyInit__decimal@@Base+0x14914>  // b.any
   1b448:	str	x12, [x0, x8, lsl #3]
   1b44c:	ldr	x1, [x23, #24]
   1b450:	add	x8, x8, #0x1
   1b454:	cmp	x8, x1
   1b458:	b.lt	1b41c <PyInit__decimal@@Base+0x14908>  // b.tstop
   1b45c:	ldrb	w23, [x19]
   1b460:	str	xzr, [x19, #8]
   1b464:	and	w8, w23, #0xf0
   1b468:	strb	w8, [x19]
   1b46c:	bl	1abf0 <PyInit__decimal@@Base+0x140dc>
   1b470:	str	x0, [x19, #24]
   1b474:	ldr	x9, [x22, #1344]
   1b478:	ldr	x8, [x19, #32]
   1b47c:	cmp	x9, x0
   1b480:	csel	x1, x0, x9, lt  // lt = tstop
   1b484:	cmp	x1, x8
   1b488:	b.eq	1b4c4 <PyInit__decimal@@Base+0x149b0>  // b.none
   1b48c:	tbnz	w23, #5, 1b4b0 <PyInit__decimal@@Base+0x1499c>
   1b490:	mov	x0, x19
   1b494:	mov	x2, x21
   1b498:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1b49c:	b	1b4c4 <PyInit__decimal@@Base+0x149b0>
   1b4a0:	mov	w14, #0xe                   	// #14
   1b4a4:	b	1b358 <PyInit__decimal@@Base+0x14844>
   1b4a8:	mov	w14, #0x9                   	// #9
   1b4ac:	b	1b358 <PyInit__decimal@@Base+0x14844>
   1b4b0:	cmp	x1, x8
   1b4b4:	b.le	1b4c4 <PyInit__decimal@@Base+0x149b0>
   1b4b8:	mov	x0, x19
   1b4bc:	mov	x2, x21
   1b4c0:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1b4c4:	mov	x0, x19
   1b4c8:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   1b4cc:	mov	x0, x19
   1b4d0:	mov	x1, x20
   1b4d4:	bl	1ac10 <PyInit__decimal@@Base+0x140fc>
   1b4d8:	b	1b110 <PyInit__decimal@@Base+0x145fc>
   1b4dc:	stp	x29, x30, [sp, #-80]!
   1b4e0:	stp	x28, x25, [sp, #16]
   1b4e4:	stp	x24, x23, [sp, #32]
   1b4e8:	stp	x22, x21, [sp, #48]
   1b4ec:	stp	x20, x19, [sp, #64]
   1b4f0:	mov	x29, sp
   1b4f4:	sub	sp, sp, #0x6a0
   1b4f8:	add	x10, sp, #0x498
   1b4fc:	str	x10, [sp, #1168]
   1b500:	add	x10, sp, #0x268
   1b504:	mov	w8, #0x30                  	// #48
   1b508:	mov	w9, #0x40                  	// #64
   1b50c:	str	x10, [sp, #608]
   1b510:	add	x10, sp, #0x38
   1b514:	stur	wzr, [x29, #-4]
   1b518:	str	xzr, [sp, #1136]
   1b51c:	str	xzr, [sp, #1144]
   1b520:	str	xzr, [sp, #576]
   1b524:	str	xzr, [sp, #584]
   1b528:	stp	xzr, xzr, [sp, #16]
   1b52c:	strb	w8, [sp, #1128]
   1b530:	str	xzr, [sp, #1152]
   1b534:	str	x9, [sp, #1160]
   1b538:	strb	w8, [sp, #568]
   1b53c:	str	xzr, [sp, #592]
   1b540:	str	x9, [sp, #600]
   1b544:	strb	w8, [sp, #8]
   1b548:	stp	xzr, x9, [sp, #32]
   1b54c:	str	x10, [sp, #48]
   1b550:	ldrb	w8, [x1]
   1b554:	mov	x19, x4
   1b558:	mov	x20, x3
   1b55c:	mov	x23, x2
   1b560:	mov	x22, x1
   1b564:	tst	w8, #0xe
   1b568:	mov	x21, x0
   1b56c:	b.ne	1b57c <PyInit__decimal@@Base+0x14a68>  // b.any
   1b570:	ldrb	w8, [x23]
   1b574:	tst	w8, #0xe
   1b578:	b.eq	1b598 <PyInit__decimal@@Base+0x14a84>  // b.none
   1b57c:	mov	x0, x21
   1b580:	mov	x1, x22
   1b584:	mov	x2, x23
   1b588:	mov	x3, x20
   1b58c:	mov	x4, x19
   1b590:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   1b594:	cbnz	w0, 1b68c <PyInit__decimal@@Base+0x14b78>
   1b598:	ldr	x8, [x23, #8]
   1b59c:	cbnz	x8, 1b67c <PyInit__decimal@@Base+0x14b68>
   1b5a0:	ldrb	w8, [x23]
   1b5a4:	tbnz	w8, #1, 1b67c <PyInit__decimal@@Base+0x14b68>
   1b5a8:	sub	x1, x29, #0x4
   1b5ac:	mov	x0, x23
   1b5b0:	bl	19444 <PyInit__decimal@@Base+0x12930>
   1b5b4:	ldurb	w8, [x29, #-3]
   1b5b8:	tbnz	w8, #0, 1b67c <PyInit__decimal@@Base+0x14b68>
   1b5bc:	ldr	x24, [x20]
   1b5c0:	mov	x23, x0
   1b5c4:	cmp	x0, x24
   1b5c8:	b.gt	1b67c <PyInit__decimal@@Base+0x14b68>
   1b5cc:	neg	x8, x24
   1b5d0:	cmp	x23, x8
   1b5d4:	b.lt	1b67c <PyInit__decimal@@Base+0x14b68>  // b.tstop
   1b5d8:	ldrb	w8, [x22]
   1b5dc:	tbnz	w8, #1, 1b6a8 <PyInit__decimal@@Base+0x14b94>
   1b5e0:	ldr	x8, [x22, #16]
   1b5e4:	cmp	x23, #0x0
   1b5e8:	csel	x25, xzr, x24, ge  // ge = tcont
   1b5ec:	cmp	x8, x24
   1b5f0:	b.le	1b618 <PyInit__decimal@@Base+0x14b04>
   1b5f4:	add	x0, sp, #0x468
   1b5f8:	mov	x1, x22
   1b5fc:	mov	x2, x19
   1b600:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1b604:	cbz	w0, 1b6bc <PyInit__decimal@@Base+0x14ba8>
   1b608:	add	x0, sp, #0x468
   1b60c:	mov	x1, x20
   1b610:	add	x22, sp, #0x468
   1b614:	bl	1ac10 <PyInit__decimal@@Base+0x140fc>
   1b618:	add	x2, x25, x23
   1b61c:	add	x0, sp, #0x238
   1b620:	mov	x1, x22
   1b624:	mov	x3, x19
   1b628:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   1b62c:	cbz	w0, 1b6bc <PyInit__decimal@@Base+0x14ba8>
   1b630:	bic	x8, x24, x23, asr #63
   1b634:	add	x0, sp, #0x238
   1b638:	mov	x1, x20
   1b63c:	sub	x23, x8, x23
   1b640:	bl	1ac10 <PyInit__decimal@@Base+0x140fc>
   1b644:	add	x0, sp, #0x8
   1b648:	mov	x1, x22
   1b64c:	mov	x2, x23
   1b650:	mov	x3, x19
   1b654:	bl	1a604 <PyInit__decimal@@Base+0x13af0>
   1b658:	cmn	x0, #0x1
   1b65c:	b.eq	1b6bc <PyInit__decimal@@Base+0x14ba8>  // b.none
   1b660:	add	x1, sp, #0x238
   1b664:	add	x2, sp, #0x8
   1b668:	mov	x0, x21
   1b66c:	mov	x3, x20
   1b670:	mov	x4, x19
   1b674:	bl	1b758 <PyInit__decimal@@Base+0x14c44>
   1b678:	b	1b6cc <PyInit__decimal@@Base+0x14bb8>
   1b67c:	mov	w1, #0x100                 	// #256
   1b680:	mov	x0, x21
   1b684:	mov	x2, x19
   1b688:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1b68c:	add	sp, sp, #0x6a0
   1b690:	ldp	x20, x19, [sp, #64]
   1b694:	ldp	x22, x21, [sp, #48]
   1b698:	ldp	x24, x23, [sp, #32]
   1b69c:	ldp	x28, x25, [sp, #16]
   1b6a0:	ldp	x29, x30, [sp], #80
   1b6a4:	ret
   1b6a8:	mov	x0, x21
   1b6ac:	mov	x1, x22
   1b6b0:	mov	x2, x19
   1b6b4:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1b6b8:	b	1b68c <PyInit__decimal@@Base+0x14b78>
   1b6bc:	mov	w1, #0x200                 	// #512
   1b6c0:	mov	x0, x21
   1b6c4:	mov	x2, x19
   1b6c8:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1b6cc:	ldrb	w8, [sp, #1128]
   1b6d0:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1b6d4:	cmp	w8, #0x1f
   1b6d8:	b.hi	1b6e8 <PyInit__decimal@@Base+0x14bd4>  // b.pmore
   1b6dc:	ldr	x8, [x19, #1376]
   1b6e0:	ldr	x0, [sp, #1168]
   1b6e4:	blr	x8
   1b6e8:	ldrb	w8, [sp, #1128]
   1b6ec:	tbnz	w8, #4, 1b6fc <PyInit__decimal@@Base+0x14be8>
   1b6f0:	ldr	x8, [x19, #1376]
   1b6f4:	add	x0, sp, #0x468
   1b6f8:	blr	x8
   1b6fc:	ldrb	w8, [sp, #568]
   1b700:	cmp	w8, #0x1f
   1b704:	b.hi	1b714 <PyInit__decimal@@Base+0x14c00>  // b.pmore
   1b708:	ldr	x8, [x19, #1376]
   1b70c:	ldr	x0, [sp, #608]
   1b710:	blr	x8
   1b714:	ldrb	w8, [sp, #568]
   1b718:	tbnz	w8, #4, 1b728 <PyInit__decimal@@Base+0x14c14>
   1b71c:	ldr	x8, [x19, #1376]
   1b720:	add	x0, sp, #0x238
   1b724:	blr	x8
   1b728:	ldrb	w8, [sp, #8]
   1b72c:	cmp	w8, #0x1f
   1b730:	b.hi	1b740 <PyInit__decimal@@Base+0x14c2c>  // b.pmore
   1b734:	ldr	x8, [x19, #1376]
   1b738:	ldr	x0, [sp, #48]
   1b73c:	blr	x8
   1b740:	ldrb	w8, [sp, #8]
   1b744:	tbnz	w8, #4, 1b68c <PyInit__decimal@@Base+0x14b78>
   1b748:	ldr	x8, [x19, #1376]
   1b74c:	add	x0, sp, #0x8
   1b750:	blr	x8
   1b754:	b	1b68c <PyInit__decimal@@Base+0x14b78>
   1b758:	stp	x29, x30, [sp, #-16]!
   1b75c:	mov	x29, sp
   1b760:	ldrb	w8, [x2]
   1b764:	mov	x5, x4
   1b768:	mov	x4, x3
   1b76c:	and	w3, w8, #0x1
   1b770:	bl	1c228 <PyInit__decimal@@Base+0x15714>
   1b774:	ldp	x29, x30, [sp], #16
   1b778:	ret
   1b77c:	stp	x29, x30, [sp, #-64]!
   1b780:	str	x23, [sp, #16]
   1b784:	stp	x22, x21, [sp, #32]
   1b788:	stp	x20, x19, [sp, #48]
   1b78c:	mov	x29, sp
   1b790:	str	wzr, [x29, #28]
   1b794:	ldrb	w8, [x1]
   1b798:	mov	x19, x4
   1b79c:	mov	x21, x3
   1b7a0:	mov	x23, x2
   1b7a4:	mov	x22, x1
   1b7a8:	tst	w8, #0xe
   1b7ac:	mov	x20, x0
   1b7b0:	b.ne	1b7c0 <PyInit__decimal@@Base+0x14cac>  // b.any
   1b7b4:	ldrb	w8, [x23]
   1b7b8:	tst	w8, #0xe
   1b7bc:	b.eq	1b7dc <PyInit__decimal@@Base+0x14cc8>  // b.none
   1b7c0:	mov	x0, x20
   1b7c4:	mov	x1, x22
   1b7c8:	mov	x2, x23
   1b7cc:	mov	x3, x21
   1b7d0:	mov	x4, x19
   1b7d4:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   1b7d8:	cbnz	w0, 1b898 <PyInit__decimal@@Base+0x14d84>
   1b7dc:	ldr	x8, [x23, #8]
   1b7e0:	cbnz	x8, 1b888 <PyInit__decimal@@Base+0x14d74>
   1b7e4:	ldrb	w8, [x23]
   1b7e8:	tbnz	w8, #1, 1b888 <PyInit__decimal@@Base+0x14d74>
   1b7ec:	add	x1, x29, #0x1c
   1b7f0:	mov	x0, x23
   1b7f4:	bl	19424 <PyInit__decimal@@Base+0x12910>
   1b7f8:	ldp	x9, x8, [x21]
   1b7fc:	add	x8, x9, x8
   1b800:	cmp	x0, x8, lsl #1
   1b804:	b.hi	1b888 <PyInit__decimal@@Base+0x14d74>  // b.pmore
   1b808:	ldrb	w8, [x29, #29]
   1b80c:	tbnz	w8, #0, 1b888 <PyInit__decimal@@Base+0x14d74>
   1b810:	ldrb	w8, [x22]
   1b814:	tbnz	w8, #1, 1b8ac <PyInit__decimal@@Base+0x14d98>
   1b818:	ldrb	w8, [x23]
   1b81c:	ldr	x9, [x22, #8]
   1b820:	mov	x11, #0x1                   	// #1
   1b824:	mov	w10, #0x1                   	// #1
   1b828:	lsl	w8, w8, #1
   1b82c:	movk	x11, #0x4ec8, lsl #16
   1b830:	and	x8, x8, #0x2
   1b834:	movk	x11, #0x6d67, lsl #32
   1b838:	sub	x8, x10, x8
   1b83c:	movk	x11, #0x1bc1, lsl #48
   1b840:	madd	x8, x8, x0, x9
   1b844:	mov	x9, #0xffffffff626fffff    	// #-2643460097
   1b848:	cmp	x8, x11
   1b84c:	movk	x9, #0x2531, lsl #32
   1b850:	csel	x8, x8, x11, lt  // lt = tstop
   1b854:	movk	x9, #0xc87d, lsl #48
   1b858:	cmp	x8, x9
   1b85c:	mov	x0, x20
   1b860:	mov	x1, x22
   1b864:	mov	x2, x19
   1b868:	csel	x23, x8, x9, gt
   1b86c:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1b870:	mov	x0, x20
   1b874:	mov	x1, x21
   1b878:	mov	x2, x19
   1b87c:	str	x23, [x20, #8]
   1b880:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1b884:	b	1b898 <PyInit__decimal@@Base+0x14d84>
   1b888:	mov	w1, #0x100                 	// #256
   1b88c:	mov	x0, x20
   1b890:	mov	x2, x19
   1b894:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1b898:	ldp	x20, x19, [sp, #48]
   1b89c:	ldp	x22, x21, [sp, #32]
   1b8a0:	ldr	x23, [sp, #16]
   1b8a4:	ldp	x29, x30, [sp], #64
   1b8a8:	ret
   1b8ac:	mov	x0, x20
   1b8b0:	mov	x1, x22
   1b8b4:	mov	x2, x19
   1b8b8:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1b8bc:	b	1b898 <PyInit__decimal@@Base+0x14d84>
   1b8c0:	stp	x29, x30, [sp, #-64]!
   1b8c4:	str	x23, [sp, #16]
   1b8c8:	stp	x22, x21, [sp, #32]
   1b8cc:	stp	x20, x19, [sp, #48]
   1b8d0:	mov	x29, sp
   1b8d4:	ldrb	w8, [x1]
   1b8d8:	mov	x20, x4
   1b8dc:	mov	x21, x3
   1b8e0:	mov	x23, x1
   1b8e4:	tst	w8, #0xe
   1b8e8:	mov	x19, x0
   1b8ec:	b.eq	1b91c <PyInit__decimal@@Base+0x14e08>  // b.none
   1b8f0:	mov	x0, x19
   1b8f4:	mov	x1, x23
   1b8f8:	mov	x2, x21
   1b8fc:	mov	x3, x20
   1b900:	bl	19544 <PyInit__decimal@@Base+0x12a30>
   1b904:	cbnz	w0, 1b9a8 <PyInit__decimal@@Base+0x14e94>
   1b908:	mov	x0, x19
   1b90c:	mov	x1, x23
   1b910:	mov	x2, x20
   1b914:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1b918:	b	1b9a8 <PyInit__decimal@@Base+0x14e94>
   1b91c:	mov	x22, x2
   1b920:	tbnz	x2, #63, 1b930 <PyInit__decimal@@Base+0x14e1c>
   1b924:	ldr	x8, [x21]
   1b928:	cmp	x8, x22
   1b92c:	b.ge	1b958 <PyInit__decimal@@Base+0x14e44>  // b.tcont
   1b930:	tbz	x22, #63, 1b944 <PyInit__decimal@@Base+0x14e30>
   1b934:	ldr	x8, [x21]
   1b938:	neg	x8, x8
   1b93c:	cmp	x8, x22
   1b940:	b.le	1b97c <PyInit__decimal@@Base+0x14e68>
   1b944:	mov	w1, #0x100                 	// #256
   1b948:	mov	x0, x19
   1b94c:	mov	x2, x20
   1b950:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1b954:	b	1b9a8 <PyInit__decimal@@Base+0x14e94>
   1b958:	mov	x0, x19
   1b95c:	mov	x1, x23
   1b960:	mov	x2, x22
   1b964:	mov	x3, x20
   1b968:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   1b96c:	mov	x0, x19
   1b970:	mov	x1, x21
   1b974:	bl	1ac10 <PyInit__decimal@@Base+0x140fc>
   1b978:	b	1b9a8 <PyInit__decimal@@Base+0x14e94>
   1b97c:	mov	x0, x19
   1b980:	mov	x1, x23
   1b984:	mov	x2, x20
   1b988:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1b98c:	cbz	w0, 1b9a8 <PyInit__decimal@@Base+0x14e94>
   1b990:	mov	x0, x19
   1b994:	mov	x1, x21
   1b998:	bl	1ac10 <PyInit__decimal@@Base+0x140fc>
   1b99c:	neg	x1, x22
   1b9a0:	mov	x0, x19
   1b9a4:	bl	1a340 <PyInit__decimal@@Base+0x1382c>
   1b9a8:	ldp	x20, x19, [sp, #48]
   1b9ac:	ldp	x22, x21, [sp, #32]
   1b9b0:	ldr	x23, [sp, #16]
   1b9b4:	ldp	x29, x30, [sp], #64
   1b9b8:	ret
   1b9bc:	stp	x29, x30, [sp, #-64]!
   1b9c0:	str	x23, [sp, #16]
   1b9c4:	stp	x22, x21, [sp, #32]
   1b9c8:	stp	x20, x19, [sp, #48]
   1b9cc:	mov	x29, sp
   1b9d0:	str	wzr, [x29, #28]
   1b9d4:	ldrb	w8, [x1]
   1b9d8:	mov	x20, x4
   1b9dc:	mov	x21, x3
   1b9e0:	mov	x23, x2
   1b9e4:	mov	x22, x1
   1b9e8:	tst	w8, #0xe
   1b9ec:	mov	x19, x0
   1b9f0:	b.ne	1ba00 <PyInit__decimal@@Base+0x14eec>  // b.any
   1b9f4:	ldrb	w8, [x23]
   1b9f8:	tst	w8, #0xe
   1b9fc:	b.eq	1ba1c <PyInit__decimal@@Base+0x14f08>  // b.none
   1ba00:	mov	x0, x19
   1ba04:	mov	x1, x22
   1ba08:	mov	x2, x23
   1ba0c:	mov	x3, x21
   1ba10:	mov	x4, x20
   1ba14:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   1ba18:	cbnz	w0, 1ba9c <PyInit__decimal@@Base+0x14f88>
   1ba1c:	ldr	x8, [x23, #8]
   1ba20:	cbnz	x8, 1ba8c <PyInit__decimal@@Base+0x14f78>
   1ba24:	ldrb	w8, [x23]
   1ba28:	tbnz	w8, #1, 1ba8c <PyInit__decimal@@Base+0x14f78>
   1ba2c:	add	x1, x29, #0x1c
   1ba30:	mov	x0, x23
   1ba34:	bl	19444 <PyInit__decimal@@Base+0x12930>
   1ba38:	ldrb	w8, [x29, #29]
   1ba3c:	tbnz	w8, #0, 1ba8c <PyInit__decimal@@Base+0x14f78>
   1ba40:	ldr	x8, [x21]
   1ba44:	mov	x23, x0
   1ba48:	cmp	x0, x8
   1ba4c:	b.gt	1ba8c <PyInit__decimal@@Base+0x14f78>
   1ba50:	neg	x8, x8
   1ba54:	cmp	x23, x8
   1ba58:	b.lt	1ba8c <PyInit__decimal@@Base+0x14f78>  // b.tstop
   1ba5c:	ldrb	w8, [x22]
   1ba60:	tbnz	w8, #1, 1bab0 <PyInit__decimal@@Base+0x14f9c>
   1ba64:	mov	x0, x19
   1ba68:	mov	x1, x22
   1ba6c:	tbnz	x23, #63, 1bac4 <PyInit__decimal@@Base+0x14fb0>
   1ba70:	mov	x2, x23
   1ba74:	mov	x3, x20
   1ba78:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   1ba7c:	mov	x0, x19
   1ba80:	mov	x1, x21
   1ba84:	bl	1ac10 <PyInit__decimal@@Base+0x140fc>
   1ba88:	b	1ba9c <PyInit__decimal@@Base+0x14f88>
   1ba8c:	mov	w1, #0x100                 	// #256
   1ba90:	mov	x0, x19
   1ba94:	mov	x2, x20
   1ba98:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1ba9c:	ldp	x20, x19, [sp, #48]
   1baa0:	ldp	x22, x21, [sp, #32]
   1baa4:	ldr	x23, [sp, #16]
   1baa8:	ldp	x29, x30, [sp], #64
   1baac:	ret
   1bab0:	mov	x0, x19
   1bab4:	mov	x1, x22
   1bab8:	mov	x2, x20
   1babc:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1bac0:	b	1ba9c <PyInit__decimal@@Base+0x14f88>
   1bac4:	mov	x2, x20
   1bac8:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1bacc:	cbz	w0, 1ba9c <PyInit__decimal@@Base+0x14f88>
   1bad0:	mov	x0, x19
   1bad4:	mov	x1, x21
   1bad8:	bl	1ac10 <PyInit__decimal@@Base+0x140fc>
   1badc:	neg	x1, x23
   1bae0:	mov	x0, x19
   1bae4:	bl	1a340 <PyInit__decimal@@Base+0x1382c>
   1bae8:	b	1ba9c <PyInit__decimal@@Base+0x14f88>
   1baec:	stp	x29, x30, [sp, #-64]!
   1baf0:	stp	x24, x23, [sp, #16]
   1baf4:	stp	x22, x21, [sp, #32]
   1baf8:	stp	x20, x19, [sp, #48]
   1bafc:	mov	x29, sp
   1bb00:	ldrb	w8, [x1]
   1bb04:	mov	x21, x4
   1bb08:	mov	x19, x0
   1bb0c:	tst	w8, #0xe
   1bb10:	b.ne	1bb3c <PyInit__decimal@@Base+0x15028>  // b.any
   1bb14:	ldrb	w9, [x2]
   1bb18:	and	w10, w9, #0xe
   1bb1c:	bfxil	w10, w8, #0, #1
   1bb20:	and	w8, w9, #0x1
   1bb24:	orr	w8, w8, w10
   1bb28:	cbnz	w8, 1bb3c <PyInit__decimal@@Base+0x15028>
   1bb2c:	ldr	x8, [x1, #8]
   1bb30:	cbnz	x8, 1bb3c <PyInit__decimal@@Base+0x15028>
   1bb34:	ldr	x8, [x2, #8]
   1bb38:	cbz	x8, 1bb60 <PyInit__decimal@@Base+0x1504c>
   1bb3c:	mov	w1, #0x100                 	// #256
   1bb40:	mov	x0, x19
   1bb44:	mov	x2, x21
   1bb48:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1bb4c:	ldp	x20, x19, [sp, #48]
   1bb50:	ldp	x22, x21, [sp, #32]
   1bb54:	ldp	x24, x23, [sp, #16]
   1bb58:	ldp	x29, x30, [sp], #64
   1bb5c:	ret
   1bb60:	ldr	x8, [x2, #16]
   1bb64:	ldr	x9, [x1, #16]
   1bb68:	adrp	x22, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1bb6c:	ldr	x10, [x22, #1344]
   1bb70:	mov	x20, x3
   1bb74:	cmp	x8, x9
   1bb78:	csel	x23, x2, x1, gt
   1bb7c:	ldr	x9, [x23, #24]
   1bb80:	ldr	x8, [x19, #32]
   1bb84:	csel	x24, x1, x2, gt
   1bb88:	cmp	x10, x9
   1bb8c:	csel	x1, x9, x10, lt  // lt = tstop
   1bb90:	cmp	x1, x8
   1bb94:	b.eq	1bbc8 <PyInit__decimal@@Base+0x150b4>  // b.none
   1bb98:	ldrb	w9, [x19]
   1bb9c:	tbnz	w9, #5, 1bbb0 <PyInit__decimal@@Base+0x1509c>
   1bba0:	mov	x0, x19
   1bba4:	mov	x2, x21
   1bba8:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1bbac:	b	1bbcc <PyInit__decimal@@Base+0x150b8>
   1bbb0:	cmp	x1, x8
   1bbb4:	b.le	1bbc8 <PyInit__decimal@@Base+0x150b4>
   1bbb8:	mov	x0, x19
   1bbbc:	mov	x2, x21
   1bbc0:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1bbc4:	b	1bbcc <PyInit__decimal@@Base+0x150b8>
   1bbc8:	mov	w0, #0x1                   	// #1
   1bbcc:	cbz	w0, 1bb4c <PyInit__decimal@@Base+0x15038>
   1bbd0:	ldr	x8, [x24, #40]
   1bbd4:	ldr	x10, [x23, #40]
   1bbd8:	ldr	x9, [x24, #24]
   1bbdc:	ldr	x12, [x8]
   1bbe0:	ldr	x11, [x10]
   1bbe4:	sub	x8, x9, #0x1
   1bbe8:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   1bbec:	cmp	x8, #0x1
   1bbf0:	add	x9, x9, #0x20
   1bbf4:	mov	x8, xzr
   1bbf8:	b.lt	1bc94 <PyInit__decimal@@Base+0x15180>  // b.tstop
   1bbfc:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   1bc00:	movk	x13, #0xcccd
   1bc04:	mov	w14, #0xa                   	// #10
   1bc08:	mov	x15, xzr
   1bc0c:	mov	x10, xzr
   1bc10:	b	1bc30 <PyInit__decimal@@Base+0x1511c>
   1bc14:	ldr	x11, [x9, x15]
   1bc18:	add	x15, x15, #0x8
   1bc1c:	cmp	x15, #0x98
   1bc20:	add	x10, x11, x10
   1bc24:	mov	x11, x17
   1bc28:	mov	x12, x16
   1bc2c:	b.eq	1bc64 <PyInit__decimal@@Base+0x15150>  // b.none
   1bc30:	umulh	x16, x12, x13
   1bc34:	umulh	x17, x11, x13
   1bc38:	lsr	x16, x16, #3
   1bc3c:	lsr	x17, x17, #3
   1bc40:	msub	x12, x16, x14, x12
   1bc44:	msub	x11, x17, x14, x11
   1bc48:	orr	w18, w11, w12
   1bc4c:	tst	x18, #0xe
   1bc50:	b.ne	1bb3c <PyInit__decimal@@Base+0x15028>  // b.any
   1bc54:	cmp	x12, x11
   1bc58:	b.ne	1bc14 <PyInit__decimal@@Base+0x15100>  // b.any
   1bc5c:	mov	x11, xzr
   1bc60:	b	1bc18 <PyInit__decimal@@Base+0x15104>
   1bc64:	ldr	x11, [x19, #40]
   1bc68:	str	x10, [x11, x8, lsl #3]
   1bc6c:	ldr	x11, [x24, #40]
   1bc70:	ldr	x10, [x23, #40]
   1bc74:	add	x8, x8, #0x1
   1bc78:	ldr	x15, [x24, #24]
   1bc7c:	lsl	x16, x8, #3
   1bc80:	ldr	x12, [x11, x16]
   1bc84:	ldr	x11, [x10, x16]
   1bc88:	sub	x15, x15, #0x1
   1bc8c:	cmp	x8, x15
   1bc90:	b.lt	1bc08 <PyInit__decimal@@Base+0x150f4>  // b.tstop
   1bc94:	ldr	x13, [x9, #72]
   1bc98:	cmp	x13, x12
   1bc9c:	b.ls	1bcc8 <PyInit__decimal@@Base+0x151b4>  // b.plast
   1bca0:	ldr	x13, [x9, #32]
   1bca4:	cmp	x13, x12
   1bca8:	b.ls	1bcf0 <PyInit__decimal@@Base+0x151dc>  // b.plast
   1bcac:	ldr	x13, [x9, #16]
   1bcb0:	cmp	x13, x12
   1bcb4:	b.ls	1bd34 <PyInit__decimal@@Base+0x15220>  // b.plast
   1bcb8:	ldr	x13, [x9, #8]
   1bcbc:	cmp	x13, x12
   1bcc0:	mov	w13, #0x1                   	// #1
   1bcc4:	b	1bd98 <PyInit__decimal@@Base+0x15284>
   1bcc8:	ldr	x13, [x9, #112]
   1bccc:	cmp	x13, x12
   1bcd0:	b.ls	1bd0c <PyInit__decimal@@Base+0x151f8>  // b.plast
   1bcd4:	ldr	x13, [x9, #88]
   1bcd8:	cmp	x13, x12
   1bcdc:	b.ls	1bd44 <PyInit__decimal@@Base+0x15230>  // b.plast
   1bce0:	ldr	x13, [x9, #80]
   1bce4:	cmp	x13, x12
   1bce8:	mov	w13, #0xa                   	// #10
   1bcec:	b	1bd98 <PyInit__decimal@@Base+0x15284>
   1bcf0:	ldr	x13, [x9, #48]
   1bcf4:	cmp	x13, x12
   1bcf8:	b.ls	1bd60 <PyInit__decimal@@Base+0x1524c>  // b.plast
   1bcfc:	ldr	x13, [x9, #40]
   1bd00:	cmp	x13, x12
   1bd04:	mov	w13, #0x5                   	// #5
   1bd08:	b	1bd98 <PyInit__decimal@@Base+0x15284>
   1bd0c:	ldr	x13, [x9, #144]
   1bd10:	cmp	x13, x12
   1bd14:	b.ls	1bd7c <PyInit__decimal@@Base+0x15268>  // b.plast
   1bd18:	ldr	x13, [x9, #128]
   1bd1c:	cmp	x13, x12
   1bd20:	b.ls	1bd8c <PyInit__decimal@@Base+0x15278>  // b.plast
   1bd24:	ldr	x13, [x9, #120]
   1bd28:	cmp	x13, x12
   1bd2c:	mov	w13, #0xf                   	// #15
   1bd30:	b	1bd98 <PyInit__decimal@@Base+0x15284>
   1bd34:	ldr	x13, [x9, #24]
   1bd38:	cmp	x13, x12
   1bd3c:	mov	w13, #0x3                   	// #3
   1bd40:	b	1bd98 <PyInit__decimal@@Base+0x15284>
   1bd44:	ldr	x13, [x9, #104]
   1bd48:	cmp	x13, x12
   1bd4c:	b.ls	1beec <PyInit__decimal@@Base+0x153d8>  // b.plast
   1bd50:	ldr	x13, [x9, #96]
   1bd54:	cmp	x13, x12
   1bd58:	mov	w13, #0xc                   	// #12
   1bd5c:	b	1bd98 <PyInit__decimal@@Base+0x15284>
   1bd60:	ldr	x13, [x9, #64]
   1bd64:	cmp	x13, x12
   1bd68:	b.ls	1bef4 <PyInit__decimal@@Base+0x153e0>  // b.plast
   1bd6c:	ldr	x13, [x9, #56]
   1bd70:	cmp	x13, x12
   1bd74:	mov	w13, #0x7                   	// #7
   1bd78:	b	1bd98 <PyInit__decimal@@Base+0x15284>
   1bd7c:	ldr	x13, [x9, #152]
   1bd80:	cmp	x13, x12
   1bd84:	mov	w13, #0x13                  	// #19
   1bd88:	b	1bd98 <PyInit__decimal@@Base+0x15284>
   1bd8c:	ldr	x13, [x9, #136]
   1bd90:	cmp	x13, x12
   1bd94:	mov	w13, #0x11                  	// #17
   1bd98:	cinc	x14, x13, ls  // ls = plast
   1bd9c:	mov	x16, #0xcccccccccccccccc    	// #-3689348814741910324
   1bda0:	mov	x15, xzr
   1bda4:	mov	x13, xzr
   1bda8:	movk	x16, #0xcccd
   1bdac:	mov	w17, #0xa                   	// #10
   1bdb0:	b	1bdcc <PyInit__decimal@@Base+0x152b8>
   1bdb4:	ldr	x12, [x9, x15, lsl #3]
   1bdb8:	add	x15, x15, #0x1
   1bdbc:	cmp	x15, x14
   1bdc0:	add	x13, x12, x13
   1bdc4:	mov	x12, x18
   1bdc8:	b.cs	1be04 <PyInit__decimal@@Base+0x152f0>  // b.hs, b.nlast
   1bdcc:	mov	x0, x11
   1bdd0:	umulh	x11, x12, x16
   1bdd4:	umulh	x1, x0, x16
   1bdd8:	lsr	x18, x11, #3
   1bddc:	lsr	x11, x1, #3
   1bde0:	msub	x12, x18, x17, x12
   1bde4:	msub	x0, x11, x17, x0
   1bde8:	orr	w1, w0, w12
   1bdec:	tst	x1, #0xe
   1bdf0:	b.ne	1bb3c <PyInit__decimal@@Base+0x15028>  // b.any
   1bdf4:	cmp	x12, x0
   1bdf8:	b.ne	1bdb4 <PyInit__decimal@@Base+0x152a0>  // b.any
   1bdfc:	mov	x12, xzr
   1be00:	b	1bdb8 <PyInit__decimal@@Base+0x152a4>
   1be04:	cmp	w15, #0x12
   1be08:	b.gt	1be44 <PyInit__decimal@@Base+0x15330>
   1be0c:	mov	x12, #0xcccccccccccccccc    	// #-3689348814741910324
   1be10:	movk	x12, #0xcccd
   1be14:	mov	w14, #0xa                   	// #10
   1be18:	umulh	x16, x11, x12
   1be1c:	lsr	x16, x16, #3
   1be20:	msub	x11, x16, x14, x11
   1be24:	cmp	x11, #0x1
   1be28:	b.hi	1bb3c <PyInit__decimal@@Base+0x15028>  // b.pmore
   1be2c:	ldr	x17, [x9, x15, lsl #3]
   1be30:	add	x15, x15, #0x1
   1be34:	cmp	x15, #0x13
   1be38:	madd	x13, x17, x11, x13
   1be3c:	mov	x11, x16
   1be40:	b.ne	1be18 <PyInit__decimal@@Base+0x15304>  // b.any
   1be44:	ldr	x0, [x19, #40]
   1be48:	str	x13, [x0, x8, lsl #3]
   1be4c:	ldr	x1, [x23, #24]
   1be50:	add	x8, x8, #0x1
   1be54:	cmp	x8, x1
   1be58:	b.ge	1bea8 <PyInit__decimal@@Base+0x15394>  // b.tcont
   1be5c:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   1be60:	movk	x9, #0xcccd
   1be64:	mov	w11, #0xa                   	// #10
   1be68:	ldr	x12, [x10, x8, lsl #3]
   1be6c:	mov	w13, #0x13                  	// #19
   1be70:	mov	x15, x12
   1be74:	umulh	x14, x15, x9
   1be78:	lsr	x14, x14, #3
   1be7c:	msub	x15, x14, x11, x15
   1be80:	cmp	x15, #0x1
   1be84:	b.hi	1bb3c <PyInit__decimal@@Base+0x15028>  // b.pmore
   1be88:	subs	w13, w13, #0x1
   1be8c:	mov	x15, x14
   1be90:	b.ne	1be74 <PyInit__decimal@@Base+0x15360>  // b.any
   1be94:	str	x12, [x0, x8, lsl #3]
   1be98:	ldr	x1, [x23, #24]
   1be9c:	add	x8, x8, #0x1
   1bea0:	cmp	x8, x1
   1bea4:	b.lt	1be68 <PyInit__decimal@@Base+0x15354>  // b.tstop
   1bea8:	ldrb	w23, [x19]
   1beac:	str	xzr, [x19, #8]
   1beb0:	and	w8, w23, #0xf0
   1beb4:	strb	w8, [x19]
   1beb8:	bl	1abf0 <PyInit__decimal@@Base+0x140dc>
   1bebc:	str	x0, [x19, #24]
   1bec0:	ldr	x9, [x22, #1344]
   1bec4:	ldr	x8, [x19, #32]
   1bec8:	cmp	x9, x0
   1becc:	csel	x1, x0, x9, lt  // lt = tstop
   1bed0:	cmp	x1, x8
   1bed4:	b.eq	1bf10 <PyInit__decimal@@Base+0x153fc>  // b.none
   1bed8:	tbnz	w23, #5, 1befc <PyInit__decimal@@Base+0x153e8>
   1bedc:	mov	x0, x19
   1bee0:	mov	x2, x21
   1bee4:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1bee8:	b	1bf10 <PyInit__decimal@@Base+0x153fc>
   1beec:	mov	w14, #0xe                   	// #14
   1bef0:	b	1bd9c <PyInit__decimal@@Base+0x15288>
   1bef4:	mov	w14, #0x9                   	// #9
   1bef8:	b	1bd9c <PyInit__decimal@@Base+0x15288>
   1befc:	cmp	x1, x8
   1bf00:	b.le	1bf10 <PyInit__decimal@@Base+0x153fc>
   1bf04:	mov	x0, x19
   1bf08:	mov	x2, x21
   1bf0c:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1bf10:	mov	x0, x19
   1bf14:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   1bf18:	mov	x0, x19
   1bf1c:	mov	x1, x20
   1bf20:	bl	1ac10 <PyInit__decimal@@Base+0x140fc>
   1bf24:	b	1bb4c <PyInit__decimal@@Base+0x15038>
   1bf28:	stp	x29, x30, [sp, #-48]!
   1bf2c:	stp	x22, x21, [sp, #16]
   1bf30:	stp	x20, x19, [sp, #32]
   1bf34:	mov	x29, sp
   1bf38:	ldrb	w8, [x1]
   1bf3c:	mov	x19, x3
   1bf40:	mov	x20, x2
   1bf44:	mov	x21, x1
   1bf48:	tst	w8, #0xe
   1bf4c:	mov	x22, x0
   1bf50:	b.eq	1bf6c <PyInit__decimal@@Base+0x15458>  // b.none
   1bf54:	mov	x0, x22
   1bf58:	mov	x1, x21
   1bf5c:	mov	x2, x20
   1bf60:	mov	x3, x19
   1bf64:	bl	19544 <PyInit__decimal@@Base+0x12a30>
   1bf68:	cbnz	w0, 1bfa0 <PyInit__decimal@@Base+0x1548c>
   1bf6c:	ldrb	w8, [x21]
   1bf70:	tbnz	w8, #0, 1bf8c <PyInit__decimal@@Base+0x15478>
   1bf74:	mov	x0, x22
   1bf78:	mov	x1, x21
   1bf7c:	mov	x2, x20
   1bf80:	mov	x3, x19
   1bf84:	bl	1c064 <PyInit__decimal@@Base+0x15550>
   1bf88:	b	1bfa0 <PyInit__decimal@@Base+0x1548c>
   1bf8c:	mov	x0, x22
   1bf90:	mov	x1, x21
   1bf94:	mov	x2, x20
   1bf98:	mov	x3, x19
   1bf9c:	bl	1bfb0 <PyInit__decimal@@Base+0x1549c>
   1bfa0:	ldp	x20, x19, [sp, #32]
   1bfa4:	ldp	x22, x21, [sp, #16]
   1bfa8:	ldp	x29, x30, [sp], #48
   1bfac:	ret
   1bfb0:	stp	x29, x30, [sp, #-48]!
   1bfb4:	stp	x22, x21, [sp, #16]
   1bfb8:	stp	x20, x19, [sp, #32]
   1bfbc:	mov	x29, sp
   1bfc0:	ldrb	w8, [x1]
   1bfc4:	mov	x19, x3
   1bfc8:	mov	x20, x2
   1bfcc:	mov	x22, x1
   1bfd0:	tst	w8, #0xe
   1bfd4:	mov	x21, x0
   1bfd8:	b.eq	1bff4 <PyInit__decimal@@Base+0x154e0>  // b.none
   1bfdc:	mov	x0, x21
   1bfe0:	mov	x1, x22
   1bfe4:	mov	x2, x20
   1bfe8:	mov	x3, x19
   1bfec:	bl	19544 <PyInit__decimal@@Base+0x12a30>
   1bff0:	cbnz	w0, 1c040 <PyInit__decimal@@Base+0x1552c>
   1bff4:	ldrb	w8, [x22]
   1bff8:	tst	w8, #0xe
   1bffc:	b.ne	1c020 <PyInit__decimal@@Base+0x1550c>  // b.any
   1c000:	ldr	x8, [x22, #40]
   1c004:	ldr	x9, [x22, #24]
   1c008:	add	x8, x8, x9, lsl #3
   1c00c:	ldur	x8, [x8, #-8]
   1c010:	cbnz	x8, 1c020 <PyInit__decimal@@Base+0x1550c>
   1c014:	ldr	w8, [x20, #36]
   1c018:	cmp	w8, #0x3
   1c01c:	b.ne	1c050 <PyInit__decimal@@Base+0x1553c>  // b.any
   1c020:	mov	x0, x21
   1c024:	mov	x1, x22
   1c028:	mov	x2, x19
   1c02c:	bl	19be4 <PyInit__decimal@@Base+0x130d0>
   1c030:	mov	x0, x21
   1c034:	mov	x1, x20
   1c038:	mov	x2, x19
   1c03c:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1c040:	ldp	x20, x19, [sp, #32]
   1c044:	ldp	x22, x21, [sp, #16]
   1c048:	ldp	x29, x30, [sp], #48
   1c04c:	ret
   1c050:	mov	x0, x21
   1c054:	mov	x1, x22
   1c058:	mov	x2, x19
   1c05c:	bl	19bb0 <PyInit__decimal@@Base+0x1309c>
   1c060:	b	1c030 <PyInit__decimal@@Base+0x1551c>
   1c064:	stp	x29, x30, [sp, #-48]!
   1c068:	stp	x22, x21, [sp, #16]
   1c06c:	stp	x20, x19, [sp, #32]
   1c070:	mov	x29, sp
   1c074:	ldrb	w8, [x1]
   1c078:	mov	x19, x3
   1c07c:	mov	x20, x2
   1c080:	mov	x22, x1
   1c084:	tst	w8, #0xe
   1c088:	mov	x21, x0
   1c08c:	b.eq	1c0a8 <PyInit__decimal@@Base+0x15594>  // b.none
   1c090:	mov	x0, x21
   1c094:	mov	x1, x22
   1c098:	mov	x2, x20
   1c09c:	mov	x3, x19
   1c0a0:	bl	19544 <PyInit__decimal@@Base+0x12a30>
   1c0a4:	cbnz	w0, 1c0f4 <PyInit__decimal@@Base+0x155e0>
   1c0a8:	ldrb	w8, [x22]
   1c0ac:	tst	w8, #0xe
   1c0b0:	b.ne	1c0d4 <PyInit__decimal@@Base+0x155c0>  // b.any
   1c0b4:	ldr	x8, [x22, #40]
   1c0b8:	ldr	x9, [x22, #24]
   1c0bc:	add	x8, x8, x9, lsl #3
   1c0c0:	ldur	x8, [x8, #-8]
   1c0c4:	cbnz	x8, 1c0d4 <PyInit__decimal@@Base+0x155c0>
   1c0c8:	ldr	w8, [x20, #36]
   1c0cc:	cmp	w8, #0x3
   1c0d0:	b.ne	1c104 <PyInit__decimal@@Base+0x155f0>  // b.any
   1c0d4:	mov	x0, x21
   1c0d8:	mov	x1, x22
   1c0dc:	mov	x2, x19
   1c0e0:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1c0e4:	mov	x0, x21
   1c0e8:	mov	x1, x20
   1c0ec:	mov	x2, x19
   1c0f0:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1c0f4:	ldp	x20, x19, [sp, #32]
   1c0f8:	ldp	x22, x21, [sp, #16]
   1c0fc:	ldp	x29, x30, [sp], #48
   1c100:	ret
   1c104:	mov	x0, x21
   1c108:	mov	x1, x22
   1c10c:	mov	x2, x19
   1c110:	bl	19bb0 <PyInit__decimal@@Base+0x1309c>
   1c114:	b	1c0e4 <PyInit__decimal@@Base+0x155d0>
   1c118:	stp	x29, x30, [sp, #-64]!
   1c11c:	str	x23, [sp, #16]
   1c120:	stp	x22, x21, [sp, #32]
   1c124:	stp	x20, x19, [sp, #48]
   1c128:	mov	x29, sp
   1c12c:	ldrb	w8, [x1]
   1c130:	mov	x19, x4
   1c134:	mov	x23, x3
   1c138:	mov	x21, x2
   1c13c:	mov	x22, x1
   1c140:	tst	w8, #0xe
   1c144:	mov	x20, x0
   1c148:	b.ne	1c158 <PyInit__decimal@@Base+0x15644>  // b.any
   1c14c:	ldrb	w8, [x21]
   1c150:	tst	w8, #0xe
   1c154:	b.eq	1c194 <PyInit__decimal@@Base+0x15680>  // b.none
   1c158:	mov	x0, x20
   1c15c:	mov	x1, x22
   1c160:	mov	x2, x21
   1c164:	mov	x3, x23
   1c168:	mov	x4, x19
   1c16c:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   1c170:	cbnz	w0, 1c1c0 <PyInit__decimal@@Base+0x156ac>
   1c174:	ldrb	w8, [x21]
   1c178:	mov	x0, x20
   1c17c:	mov	x1, x22
   1c180:	mov	x2, x21
   1c184:	and	w3, w8, #0x1
   1c188:	mov	x4, x19
   1c18c:	bl	1c1d4 <PyInit__decimal@@Base+0x156c0>
   1c190:	b	1c1c0 <PyInit__decimal@@Base+0x156ac>
   1c194:	and	w3, w8, #0x1
   1c198:	mov	x0, x20
   1c19c:	mov	x1, x22
   1c1a0:	mov	x2, x21
   1c1a4:	mov	x4, x23
   1c1a8:	mov	x5, x19
   1c1ac:	bl	1c228 <PyInit__decimal@@Base+0x15714>
   1c1b0:	mov	x0, x20
   1c1b4:	mov	x1, x23
   1c1b8:	mov	x2, x19
   1c1bc:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1c1c0:	ldp	x20, x19, [sp, #48]
   1c1c4:	ldp	x22, x21, [sp, #32]
   1c1c8:	ldr	x23, [sp, #16]
   1c1cc:	ldp	x29, x30, [sp], #64
   1c1d0:	ret
   1c1d4:	stp	x29, x30, [sp, #-16]!
   1c1d8:	mov	x29, sp
   1c1dc:	ldrb	w8, [x1]
   1c1e0:	tbnz	w8, #1, 1c1f0 <PyInit__decimal@@Base+0x156dc>
   1c1e4:	mov	w2, #0x2                   	// #2
   1c1e8:	mov	w1, w3
   1c1ec:	b	1c208 <PyInit__decimal@@Base+0x156f4>
   1c1f0:	and	w1, w8, #0x1
   1c1f4:	cmp	w1, w3, uxtb
   1c1f8:	b.eq	1c204 <PyInit__decimal@@Base+0x156f0>  // b.none
   1c1fc:	ldrb	w8, [x2]
   1c200:	tbnz	w8, #1, 1c214 <PyInit__decimal@@Base+0x15700>
   1c204:	mov	w2, #0x2                   	// #2
   1c208:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1c20c:	ldp	x29, x30, [sp], #16
   1c210:	ret
   1c214:	mov	w1, #0x100                 	// #256
   1c218:	mov	x2, x4
   1c21c:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1c220:	ldp	x29, x30, [sp], #16
   1c224:	ret
   1c228:	stp	x29, x30, [sp, #-96]!
   1c22c:	stp	x28, x27, [sp, #16]
   1c230:	stp	x26, x25, [sp, #32]
   1c234:	stp	x24, x23, [sp, #48]
   1c238:	stp	x22, x21, [sp, #64]
   1c23c:	stp	x20, x19, [sp, #80]
   1c240:	mov	x29, sp
   1c244:	sub	sp, sp, #0x280
   1c248:	mov	w8, #0x30                  	// #48
   1c24c:	strb	w8, [sp, #64]
   1c250:	add	x8, sp, #0x70
   1c254:	mov	w9, #0x40                  	// #64
   1c258:	str	x8, [sp, #104]
   1c25c:	mov	w8, #0x90                  	// #144
   1c260:	stp	xzr, x9, [sp, #88]
   1c264:	mov	w9, #0x1                   	// #1
   1c268:	strb	w8, [sp, #8]
   1c26c:	add	x8, sp, #0x38
   1c270:	stp	xzr, xzr, [sp, #72]
   1c274:	stp	x2, x1, [x29, #-16]
   1c278:	stp	x8, x9, [sp, #48]
   1c27c:	stp	xzr, x9, [sp, #16]
   1c280:	stp	x9, x9, [sp, #32]
   1c284:	ldr	x8, [x1, #8]
   1c288:	ldr	x9, [x2, #8]
   1c28c:	mov	x21, x5
   1c290:	mov	x22, x4
   1c294:	mov	w19, w3
   1c298:	mov	x23, x1
   1c29c:	cmp	x8, x9
   1c2a0:	mov	x20, x0
   1c2a4:	b.ne	1c2b0 <PyInit__decimal@@Base+0x1579c>  // b.any
   1c2a8:	mov	w25, wzr
   1c2ac:	b	1c38c <PyInit__decimal@@Base+0x15878>
   1c2b0:	cmp	x9, x8
   1c2b4:	b.le	1c2cc <PyInit__decimal@@Base+0x157b8>
   1c2b8:	sub	x0, x29, #0x8
   1c2bc:	sub	x1, x29, #0x10
   1c2c0:	bl	23e84 <PyInit__decimal@@Base+0x1d370>
   1c2c4:	mov	w25, #0x1                   	// #1
   1c2c8:	b	1c2d0 <PyInit__decimal@@Base+0x157bc>
   1c2cc:	mov	w25, wzr
   1c2d0:	ldur	x1, [x29, #-8]
   1c2d4:	ldr	x8, [x1, #40]
   1c2d8:	ldr	x9, [x1, #24]
   1c2dc:	add	x8, x8, x9, lsl #3
   1c2e0:	ldur	x8, [x8, #-8]
   1c2e4:	cbz	x8, 1c38c <PyInit__decimal@@Base+0x15878>
   1c2e8:	ldur	x8, [x29, #-16]
   1c2ec:	ldr	x9, [x22]
   1c2f0:	ldp	x11, x10, [x1, #8]
   1c2f4:	ldp	x13, x14, [x8, #8]
   1c2f8:	mvn	x12, x9
   1c2fc:	cmp	x10, x9
   1c300:	add	x9, x10, x12
   1c304:	csel	x9, xzr, x9, gt
   1c308:	add	x9, x11, x9
   1c30c:	add	x10, x13, x14
   1c310:	sub	x9, x9, #0x1
   1c314:	sub	x10, x10, #0x1
   1c318:	cmp	x10, x9
   1c31c:	b.ge	1c364 <PyInit__decimal@@Base+0x15850>  // b.tcont
   1c320:	ldrb	w10, [x8]
   1c324:	ldrb	w11, [sp, #8]
   1c328:	mov	w12, #0x1                   	// #1
   1c32c:	stp	x9, x12, [sp, #16]
   1c330:	str	x12, [sp, #32]
   1c334:	bfxil	w11, w10, #0, #4
   1c338:	strb	w11, [sp, #8]
   1c33c:	ldr	x9, [x8, #40]
   1c340:	ldr	x8, [x8, #24]
   1c344:	add	x10, sp, #0x8
   1c348:	add	x8, x9, x8, lsl #3
   1c34c:	ldur	x8, [x8, #-8]
   1c350:	ldr	x9, [sp, #48]
   1c354:	cmp	x8, #0x0
   1c358:	cset	w8, ne  // ne = any
   1c35c:	str	x8, [x9]
   1c360:	stur	x10, [x29, #-16]
   1c364:	ldur	x8, [x29, #-16]
   1c368:	ldr	x9, [x1, #8]
   1c36c:	add	x0, sp, #0x40
   1c370:	mov	x3, x21
   1c374:	ldr	x8, [x8, #8]
   1c378:	add	x24, sp, #0x40
   1c37c:	sub	x2, x9, x8
   1c380:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   1c384:	cbz	w0, 1c52c <PyInit__decimal@@Base+0x15a18>
   1c388:	stur	x24, [x29, #-8]
   1c38c:	ldur	x8, [x29, #-16]
   1c390:	ldr	x9, [x8, #8]
   1c394:	str	x9, [x20, #8]
   1c398:	ldur	x9, [x29, #-8]
   1c39c:	ldr	x8, [x8, #24]
   1c3a0:	ldr	x9, [x9, #24]
   1c3a4:	cmp	x9, x8
   1c3a8:	b.ge	1c3bc <PyInit__decimal@@Base+0x158a8>  // b.tcont
   1c3ac:	sub	x0, x29, #0x8
   1c3b0:	sub	x1, x29, #0x10
   1c3b4:	bl	23e84 <PyInit__decimal@@Base+0x1d370>
   1c3b8:	add	w25, w25, #0x1
   1c3bc:	ldur	x27, [x29, #-8]
   1c3c0:	adrp	x24, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1c3c4:	ldr	x9, [x24, #1344]
   1c3c8:	ldr	x8, [x20, #32]
   1c3cc:	ldr	x26, [x27, #24]
   1c3d0:	cmp	x9, x26
   1c3d4:	csel	x1, x26, x9, lt  // lt = tstop
   1c3d8:	cmp	x1, x8
   1c3dc:	b.ne	1c3ec <PyInit__decimal@@Base+0x158d8>  // b.any
   1c3e0:	mov	w0, #0x1                   	// #1
   1c3e4:	cbnz	w0, 1c420 <PyInit__decimal@@Base+0x1590c>
   1c3e8:	b	1c5f8 <PyInit__decimal@@Base+0x15ae4>
   1c3ec:	ldrb	w9, [x20]
   1c3f0:	tbnz	w9, #5, 1c408 <PyInit__decimal@@Base+0x158f4>
   1c3f4:	mov	x0, x20
   1c3f8:	mov	x2, x21
   1c3fc:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1c400:	cbnz	w0, 1c420 <PyInit__decimal@@Base+0x1590c>
   1c404:	b	1c5f8 <PyInit__decimal@@Base+0x15ae4>
   1c408:	cmp	x1, x8
   1c40c:	b.le	1c3e0 <PyInit__decimal@@Base+0x158cc>
   1c410:	mov	x0, x20
   1c414:	mov	x2, x21
   1c418:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1c41c:	cbz	w0, 1c5f8 <PyInit__decimal@@Base+0x15ae4>
   1c420:	ldrb	w8, [x23]
   1c424:	and	w8, w8, #0x1
   1c428:	cmp	w8, w19, uxtb
   1c42c:	b.ne	1c480 <PyInit__decimal@@Base+0x1596c>  // b.any
   1c430:	ldur	x8, [x29, #-16]
   1c434:	ldr	x0, [x20, #40]
   1c438:	ldr	x1, [x27, #40]
   1c43c:	ldr	x3, [x27, #24]
   1c440:	ldr	x2, [x8, #40]
   1c444:	ldr	x4, [x8, #24]
   1c448:	bl	1231c <PyInit__decimal@@Base+0xb808>
   1c44c:	cbz	x0, 1c5dc <PyInit__decimal@@Base+0x15ac8>
   1c450:	ldr	x23, [x27, #24]
   1c454:	ldr	x9, [x24, #1344]
   1c458:	ldr	x8, [x20, #32]
   1c45c:	mov	x22, x0
   1c460:	add	x26, x23, #0x1
   1c464:	cmp	x9, x26
   1c468:	csinc	x1, x9, x23, ge  // ge = tcont
   1c46c:	cmp	x1, x8
   1c470:	b.ne	1c540 <PyInit__decimal@@Base+0x15a2c>  // b.any
   1c474:	mov	w0, #0x1                   	// #1
   1c478:	cbnz	w0, 1c5d4 <PyInit__decimal@@Base+0x15ac0>
   1c47c:	b	1c5f8 <PyInit__decimal@@Base+0x15ae4>
   1c480:	ldur	x8, [x29, #-16]
   1c484:	ldr	x9, [x27, #24]
   1c488:	ldr	x10, [x8, #24]
   1c48c:	cmp	x9, x10
   1c490:	b.ne	1c4d0 <PyInit__decimal@@Base+0x159bc>  // b.any
   1c494:	sub	x9, x9, #0x1
   1c498:	tbnz	x9, #63, 1c4d0 <PyInit__decimal@@Base+0x159bc>
   1c49c:	ldr	x10, [x27, #40]
   1c4a0:	ldr	x11, [x8, #40]
   1c4a4:	lsl	x12, x9, #3
   1c4a8:	sub	x9, x9, #0x1
   1c4ac:	ldr	x10, [x10, x12]
   1c4b0:	ldr	x11, [x11, x12]
   1c4b4:	cmp	x10, x11
   1c4b8:	b.eq	1c498 <PyInit__decimal@@Base+0x15984>  // b.none
   1c4bc:	b.cs	1c4d0 <PyInit__decimal@@Base+0x159bc>  // b.hs, b.nlast
   1c4c0:	sub	x0, x29, #0x8
   1c4c4:	sub	x1, x29, #0x10
   1c4c8:	bl	23e84 <PyInit__decimal@@Base+0x1d370>
   1c4cc:	add	w25, w25, #0x1
   1c4d0:	ldp	x8, x26, [x29, #-16]
   1c4d4:	ldr	x0, [x20, #40]
   1c4d8:	ldr	x1, [x26, #40]
   1c4dc:	ldr	x2, [x8, #40]
   1c4e0:	ldr	x3, [x26, #24]
   1c4e4:	ldr	x4, [x8, #24]
   1c4e8:	bl	1256c <PyInit__decimal@@Base+0xba58>
   1c4ec:	ldr	x0, [x20, #40]
   1c4f0:	ldr	x1, [x26, #24]
   1c4f4:	bl	1abf0 <PyInit__decimal@@Base+0x140dc>
   1c4f8:	ldr	x9, [x24, #1344]
   1c4fc:	ldr	x8, [x20, #32]
   1c500:	mov	x24, x0
   1c504:	cmp	x9, x0
   1c508:	csel	x1, x0, x9, lt  // lt = tstop
   1c50c:	cmp	x1, x8
   1c510:	b.eq	1c570 <PyInit__decimal@@Base+0x15a5c>  // b.none
   1c514:	ldrb	w9, [x20]
   1c518:	tbnz	w9, #5, 1c55c <PyInit__decimal@@Base+0x15a48>
   1c51c:	mov	x0, x20
   1c520:	mov	x2, x21
   1c524:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1c528:	b	1c570 <PyInit__decimal@@Base+0x15a5c>
   1c52c:	mov	w1, #0x200                 	// #512
   1c530:	mov	x0, x20
   1c534:	mov	x2, x21
   1c538:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1c53c:	b	1c5f8 <PyInit__decimal@@Base+0x15ae4>
   1c540:	ldrb	w9, [x20]
   1c544:	tbnz	w9, #5, 1c5bc <PyInit__decimal@@Base+0x15aa8>
   1c548:	mov	x0, x20
   1c54c:	mov	x2, x21
   1c550:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1c554:	cbnz	w0, 1c5d4 <PyInit__decimal@@Base+0x15ac0>
   1c558:	b	1c5f8 <PyInit__decimal@@Base+0x15ae4>
   1c55c:	cmp	x1, x8
   1c560:	b.le	1c570 <PyInit__decimal@@Base+0x15a5c>
   1c564:	mov	x0, x20
   1c568:	mov	x2, x21
   1c56c:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1c570:	str	x24, [x20, #24]
   1c574:	tbnz	w25, #0, 1c580 <PyInit__decimal@@Base+0x15a6c>
   1c578:	ldrb	w8, [x23]
   1c57c:	and	w19, w8, #0x1
   1c580:	ldrb	w8, [x20]
   1c584:	ldr	x9, [x20, #40]
   1c588:	and	w8, w8, #0xfffffff0
   1c58c:	orr	w8, w8, w19
   1c590:	strb	w8, [x20]
   1c594:	add	x9, x9, x24, lsl #3
   1c598:	ldur	x9, [x9, #-8]
   1c59c:	cbnz	x9, 1c5f0 <PyInit__decimal@@Base+0x15adc>
   1c5a0:	and	w9, w8, #0xfe
   1c5a4:	strb	w9, [x20]
   1c5a8:	ldr	w9, [x22, #36]
   1c5ac:	cmp	w9, #0x3
   1c5b0:	b.ne	1c5f0 <PyInit__decimal@@Base+0x15adc>  // b.any
   1c5b4:	orr	w8, w8, #0x1
   1c5b8:	b	1c5ec <PyInit__decimal@@Base+0x15ad8>
   1c5bc:	cmp	x1, x8
   1c5c0:	b.le	1c474 <PyInit__decimal@@Base+0x15960>
   1c5c4:	mov	x0, x20
   1c5c8:	mov	x2, x21
   1c5cc:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1c5d0:	cbz	w0, 1c5f8 <PyInit__decimal@@Base+0x15ae4>
   1c5d4:	ldr	x8, [x20, #40]
   1c5d8:	str	x22, [x8, x23, lsl #3]
   1c5dc:	ldrb	w8, [x20]
   1c5e0:	str	x26, [x20, #24]
   1c5e4:	and	w8, w8, #0xf0
   1c5e8:	orr	w8, w8, w19
   1c5ec:	strb	w8, [x20]
   1c5f0:	mov	x0, x20
   1c5f4:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   1c5f8:	ldrb	w8, [sp, #64]
   1c5fc:	cmp	w8, #0x1f
   1c600:	b.hi	1c614 <PyInit__decimal@@Base+0x15b00>  // b.pmore
   1c604:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1c608:	ldr	x8, [x8, #1376]
   1c60c:	ldr	x0, [sp, #104]
   1c610:	blr	x8
   1c614:	ldrb	w8, [sp, #64]
   1c618:	tbnz	w8, #4, 1c62c <PyInit__decimal@@Base+0x15b18>
   1c61c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1c620:	ldr	x8, [x8, #1376]
   1c624:	add	x0, sp, #0x40
   1c628:	blr	x8
   1c62c:	add	sp, sp, #0x280
   1c630:	ldp	x20, x19, [sp, #80]
   1c634:	ldp	x22, x21, [sp, #64]
   1c638:	ldp	x24, x23, [sp, #48]
   1c63c:	ldp	x26, x25, [sp, #32]
   1c640:	ldp	x28, x27, [sp, #16]
   1c644:	ldp	x29, x30, [sp], #96
   1c648:	ret
   1c64c:	stp	x29, x30, [sp, #-64]!
   1c650:	str	x23, [sp, #16]
   1c654:	stp	x22, x21, [sp, #32]
   1c658:	stp	x20, x19, [sp, #48]
   1c65c:	mov	x29, sp
   1c660:	ldrb	w8, [x1]
   1c664:	mov	x19, x4
   1c668:	mov	x23, x3
   1c66c:	mov	x21, x2
   1c670:	mov	x22, x1
   1c674:	tst	w8, #0xe
   1c678:	mov	x20, x0
   1c67c:	b.ne	1c68c <PyInit__decimal@@Base+0x15b78>  // b.any
   1c680:	ldrb	w8, [x21]
   1c684:	tst	w8, #0xe
   1c688:	b.eq	1c6cc <PyInit__decimal@@Base+0x15bb8>  // b.none
   1c68c:	mov	x0, x20
   1c690:	mov	x1, x22
   1c694:	mov	x2, x21
   1c698:	mov	x3, x23
   1c69c:	mov	x4, x19
   1c6a0:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   1c6a4:	cbnz	w0, 1c6fc <PyInit__decimal@@Base+0x15be8>
   1c6a8:	ldrb	w8, [x21]
   1c6ac:	mov	x0, x20
   1c6b0:	mov	x1, x22
   1c6b4:	mov	x2, x21
   1c6b8:	mvn	w8, w8
   1c6bc:	and	w3, w8, #0x1
   1c6c0:	mov	x4, x19
   1c6c4:	bl	1c1d4 <PyInit__decimal@@Base+0x156c0>
   1c6c8:	b	1c6fc <PyInit__decimal@@Base+0x15be8>
   1c6cc:	mvn	w8, w8
   1c6d0:	and	w3, w8, #0x1
   1c6d4:	mov	x0, x20
   1c6d8:	mov	x1, x22
   1c6dc:	mov	x2, x21
   1c6e0:	mov	x4, x23
   1c6e4:	mov	x5, x19
   1c6e8:	bl	1c228 <PyInit__decimal@@Base+0x15714>
   1c6ec:	mov	x0, x20
   1c6f0:	mov	x1, x23
   1c6f4:	mov	x2, x19
   1c6f8:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1c6fc:	ldp	x20, x19, [sp, #48]
   1c700:	ldp	x22, x21, [sp, #32]
   1c704:	ldr	x23, [sp, #16]
   1c708:	ldp	x29, x30, [sp], #64
   1c70c:	ret
   1c710:	stp	x29, x30, [sp, #-64]!
   1c714:	stp	x28, x23, [sp, #16]
   1c718:	stp	x22, x21, [sp, #32]
   1c71c:	stp	x20, x19, [sp, #48]
   1c720:	mov	x29, sp
   1c724:	sub	sp, sp, #0x260
   1c728:	mov	x23, x0
   1c72c:	mov	w8, #0x30                  	// #48
   1c730:	mov	w9, #0x40                  	// #64
   1c734:	add	x10, sp, #0x30
   1c738:	sub	x0, x29, #0x30
   1c73c:	mov	x19, x4
   1c740:	mov	x20, x3
   1c744:	mov	x21, x2
   1c748:	mov	x22, x1
   1c74c:	stp	xzr, xzr, [sp, #8]
   1c750:	strb	w8, [sp]
   1c754:	stp	xzr, x9, [sp, #24]
   1c758:	str	x10, [sp, #40]
   1c75c:	bl	13964 <PyInit__decimal@@Base+0xce50>
   1c760:	mov	x0, sp
   1c764:	sub	x2, x29, #0x30
   1c768:	mov	x1, x21
   1c76c:	mov	x3, x19
   1c770:	bl	18f28 <PyInit__decimal@@Base+0x12414>
   1c774:	mov	x2, sp
   1c778:	mov	x0, x23
   1c77c:	mov	x1, x22
   1c780:	mov	x3, x20
   1c784:	mov	x4, x19
   1c788:	bl	1c118 <PyInit__decimal@@Base+0x15604>
   1c78c:	ldrb	w8, [sp]
   1c790:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1c794:	cmp	w8, #0x1f
   1c798:	b.hi	1c7a8 <PyInit__decimal@@Base+0x15c94>  // b.pmore
   1c79c:	ldr	x8, [x19, #1376]
   1c7a0:	ldr	x0, [sp, #40]
   1c7a4:	blr	x8
   1c7a8:	ldrb	w8, [sp]
   1c7ac:	tbnz	w8, #4, 1c7bc <PyInit__decimal@@Base+0x15ca8>
   1c7b0:	ldr	x8, [x19, #1376]
   1c7b4:	mov	x0, sp
   1c7b8:	blr	x8
   1c7bc:	add	sp, sp, #0x260
   1c7c0:	ldp	x20, x19, [sp, #48]
   1c7c4:	ldp	x22, x21, [sp, #32]
   1c7c8:	ldp	x28, x23, [sp, #16]
   1c7cc:	ldp	x29, x30, [sp], #64
   1c7d0:	ret
   1c7d4:	stp	x29, x30, [sp, #-64]!
   1c7d8:	stp	x28, x23, [sp, #16]
   1c7dc:	stp	x22, x21, [sp, #32]
   1c7e0:	stp	x20, x19, [sp, #48]
   1c7e4:	mov	x29, sp
   1c7e8:	sub	sp, sp, #0x260
   1c7ec:	mov	x23, x0
   1c7f0:	mov	w8, #0x30                  	// #48
   1c7f4:	mov	w9, #0x40                  	// #64
   1c7f8:	add	x10, sp, #0x30
   1c7fc:	sub	x0, x29, #0x30
   1c800:	mov	x19, x4
   1c804:	mov	x20, x3
   1c808:	mov	x21, x2
   1c80c:	mov	x22, x1
   1c810:	stp	xzr, xzr, [sp, #8]
   1c814:	strb	w8, [sp]
   1c818:	stp	xzr, x9, [sp, #24]
   1c81c:	str	x10, [sp, #40]
   1c820:	bl	13964 <PyInit__decimal@@Base+0xce50>
   1c824:	mov	x0, sp
   1c828:	sub	x2, x29, #0x30
   1c82c:	mov	x1, x21
   1c830:	mov	x3, x19
   1c834:	bl	19050 <PyInit__decimal@@Base+0x1253c>
   1c838:	mov	x2, sp
   1c83c:	mov	x0, x23
   1c840:	mov	x1, x22
   1c844:	mov	x3, x20
   1c848:	mov	x4, x19
   1c84c:	bl	1c118 <PyInit__decimal@@Base+0x15604>
   1c850:	ldrb	w8, [sp]
   1c854:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1c858:	cmp	w8, #0x1f
   1c85c:	b.hi	1c86c <PyInit__decimal@@Base+0x15d58>  // b.pmore
   1c860:	ldr	x8, [x19, #1376]
   1c864:	ldr	x0, [sp, #40]
   1c868:	blr	x8
   1c86c:	ldrb	w8, [sp]
   1c870:	tbnz	w8, #4, 1c880 <PyInit__decimal@@Base+0x15d6c>
   1c874:	ldr	x8, [x19, #1376]
   1c878:	mov	x0, sp
   1c87c:	blr	x8
   1c880:	add	sp, sp, #0x260
   1c884:	ldp	x20, x19, [sp, #48]
   1c888:	ldp	x22, x21, [sp, #32]
   1c88c:	ldp	x28, x23, [sp, #16]
   1c890:	ldp	x29, x30, [sp], #64
   1c894:	ret
   1c898:	stp	x29, x30, [sp, #-64]!
   1c89c:	stp	x28, x23, [sp, #16]
   1c8a0:	stp	x22, x21, [sp, #32]
   1c8a4:	stp	x20, x19, [sp, #48]
   1c8a8:	mov	x29, sp
   1c8ac:	sub	sp, sp, #0x260
   1c8b0:	mov	x23, x0
   1c8b4:	mov	w8, #0x30                  	// #48
   1c8b8:	mov	w9, #0x40                  	// #64
   1c8bc:	add	x10, sp, #0x30
   1c8c0:	sub	x0, x29, #0x30
   1c8c4:	mov	x19, x4
   1c8c8:	mov	x20, x3
   1c8cc:	mov	x21, x2
   1c8d0:	mov	x22, x1
   1c8d4:	stp	xzr, xzr, [sp, #8]
   1c8d8:	strb	w8, [sp]
   1c8dc:	stp	xzr, x9, [sp, #24]
   1c8e0:	str	x10, [sp, #40]
   1c8e4:	bl	13964 <PyInit__decimal@@Base+0xce50>
   1c8e8:	mov	x0, sp
   1c8ec:	sub	x2, x29, #0x30
   1c8f0:	mov	x1, x21
   1c8f4:	mov	x3, x19
   1c8f8:	bl	18f28 <PyInit__decimal@@Base+0x12414>
   1c8fc:	mov	x2, sp
   1c900:	mov	x0, x23
   1c904:	mov	x1, x22
   1c908:	mov	x3, x20
   1c90c:	mov	x4, x19
   1c910:	bl	1c64c <PyInit__decimal@@Base+0x15b38>
   1c914:	ldrb	w8, [sp]
   1c918:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1c91c:	cmp	w8, #0x1f
   1c920:	b.hi	1c930 <PyInit__decimal@@Base+0x15e1c>  // b.pmore
   1c924:	ldr	x8, [x19, #1376]
   1c928:	ldr	x0, [sp, #40]
   1c92c:	blr	x8
   1c930:	ldrb	w8, [sp]
   1c934:	tbnz	w8, #4, 1c944 <PyInit__decimal@@Base+0x15e30>
   1c938:	ldr	x8, [x19, #1376]
   1c93c:	mov	x0, sp
   1c940:	blr	x8
   1c944:	add	sp, sp, #0x260
   1c948:	ldp	x20, x19, [sp, #48]
   1c94c:	ldp	x22, x21, [sp, #32]
   1c950:	ldp	x28, x23, [sp, #16]
   1c954:	ldp	x29, x30, [sp], #64
   1c958:	ret
   1c95c:	stp	x29, x30, [sp, #-64]!
   1c960:	stp	x28, x23, [sp, #16]
   1c964:	stp	x22, x21, [sp, #32]
   1c968:	stp	x20, x19, [sp, #48]
   1c96c:	mov	x29, sp
   1c970:	sub	sp, sp, #0x260
   1c974:	mov	x23, x0
   1c978:	mov	w8, #0x30                  	// #48
   1c97c:	mov	w9, #0x40                  	// #64
   1c980:	add	x10, sp, #0x30
   1c984:	sub	x0, x29, #0x30
   1c988:	mov	x19, x4
   1c98c:	mov	x20, x3
   1c990:	mov	x21, x2
   1c994:	mov	x22, x1
   1c998:	stp	xzr, xzr, [sp, #8]
   1c99c:	strb	w8, [sp]
   1c9a0:	stp	xzr, x9, [sp, #24]
   1c9a4:	str	x10, [sp, #40]
   1c9a8:	bl	13964 <PyInit__decimal@@Base+0xce50>
   1c9ac:	mov	x0, sp
   1c9b0:	sub	x2, x29, #0x30
   1c9b4:	mov	x1, x21
   1c9b8:	mov	x3, x19
   1c9bc:	bl	19050 <PyInit__decimal@@Base+0x1253c>
   1c9c0:	mov	x2, sp
   1c9c4:	mov	x0, x23
   1c9c8:	mov	x1, x22
   1c9cc:	mov	x3, x20
   1c9d0:	mov	x4, x19
   1c9d4:	bl	1c64c <PyInit__decimal@@Base+0x15b38>
   1c9d8:	ldrb	w8, [sp]
   1c9dc:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1c9e0:	cmp	w8, #0x1f
   1c9e4:	b.hi	1c9f4 <PyInit__decimal@@Base+0x15ee0>  // b.pmore
   1c9e8:	ldr	x8, [x19, #1376]
   1c9ec:	ldr	x0, [sp, #40]
   1c9f0:	blr	x8
   1c9f4:	ldrb	w8, [sp]
   1c9f8:	tbnz	w8, #4, 1ca08 <PyInit__decimal@@Base+0x15ef4>
   1c9fc:	ldr	x8, [x19, #1376]
   1ca00:	mov	x0, sp
   1ca04:	blr	x8
   1ca08:	add	sp, sp, #0x260
   1ca0c:	ldp	x20, x19, [sp, #48]
   1ca10:	ldp	x22, x21, [sp, #32]
   1ca14:	ldp	x28, x23, [sp, #16]
   1ca18:	ldp	x29, x30, [sp], #64
   1ca1c:	ret
   1ca20:	stp	x29, x30, [sp, #-16]!
   1ca24:	mov	x29, sp
   1ca28:	sxtw	x2, w2
   1ca2c:	bl	1c710 <PyInit__decimal@@Base+0x15bfc>
   1ca30:	ldp	x29, x30, [sp], #16
   1ca34:	ret
   1ca38:	stp	x29, x30, [sp, #-16]!
   1ca3c:	mov	x29, sp
   1ca40:	mov	w2, w2
   1ca44:	bl	1c7d4 <PyInit__decimal@@Base+0x15cc0>
   1ca48:	ldp	x29, x30, [sp], #16
   1ca4c:	ret
   1ca50:	stp	x29, x30, [sp, #-16]!
   1ca54:	mov	x29, sp
   1ca58:	bl	1c710 <PyInit__decimal@@Base+0x15bfc>
   1ca5c:	ldp	x29, x30, [sp], #16
   1ca60:	ret
   1ca64:	stp	x29, x30, [sp, #-16]!
   1ca68:	mov	x29, sp
   1ca6c:	bl	1c7d4 <PyInit__decimal@@Base+0x15cc0>
   1ca70:	ldp	x29, x30, [sp], #16
   1ca74:	ret
   1ca78:	stp	x29, x30, [sp, #-16]!
   1ca7c:	mov	x29, sp
   1ca80:	sxtw	x2, w2
   1ca84:	bl	1c898 <PyInit__decimal@@Base+0x15d84>
   1ca88:	ldp	x29, x30, [sp], #16
   1ca8c:	ret
   1ca90:	stp	x29, x30, [sp, #-16]!
   1ca94:	mov	x29, sp
   1ca98:	mov	w2, w2
   1ca9c:	bl	1c95c <PyInit__decimal@@Base+0x15e48>
   1caa0:	ldp	x29, x30, [sp], #16
   1caa4:	ret
   1caa8:	stp	x29, x30, [sp, #-16]!
   1caac:	mov	x29, sp
   1cab0:	bl	1c898 <PyInit__decimal@@Base+0x15d84>
   1cab4:	ldp	x29, x30, [sp], #16
   1cab8:	ret
   1cabc:	stp	x29, x30, [sp, #-16]!
   1cac0:	mov	x29, sp
   1cac4:	bl	1c95c <PyInit__decimal@@Base+0x15e48>
   1cac8:	ldp	x29, x30, [sp], #16
   1cacc:	ret
   1cad0:	stp	x29, x30, [sp, #-16]!
   1cad4:	mov	x29, sp
   1cad8:	mov	x5, x4
   1cadc:	mov	x4, x3
   1cae0:	mov	x3, x2
   1cae4:	mov	x2, x1
   1cae8:	mov	x1, x0
   1caec:	mov	w0, #0x1                   	// #1
   1caf0:	bl	1cafc <PyInit__decimal@@Base+0x15fe8>
   1caf4:	ldp	x29, x30, [sp], #16
   1caf8:	ret
   1cafc:	stp	x29, x30, [sp, #-96]!
   1cb00:	stp	x28, x27, [sp, #16]
   1cb04:	stp	x26, x25, [sp, #32]
   1cb08:	stp	x24, x23, [sp, #48]
   1cb0c:	stp	x22, x21, [sp, #64]
   1cb10:	stp	x20, x19, [sp, #80]
   1cb14:	mov	x29, sp
   1cb18:	sub	sp, sp, #0x480
   1cb1c:	mov	w8, #0x30                  	// #48
   1cb20:	mov	w9, #0x40                  	// #64
   1cb24:	add	x10, sp, #0x278
   1cb28:	str	xzr, [sp, #600]
   1cb2c:	str	xzr, [sp, #592]
   1cb30:	strb	w8, [sp, #584]
   1cb34:	str	xzr, [sp, #608]
   1cb38:	str	x9, [sp, #616]
   1cb3c:	str	x10, [sp, #624]
   1cb40:	ldrb	w8, [x2]
   1cb44:	ldrb	w9, [x3]
   1cb48:	mov	x19, x5
   1cb4c:	mov	x21, x4
   1cb50:	mov	x25, x3
   1cb54:	orr	w10, w8, w9
   1cb58:	mov	x26, x2
   1cb5c:	mov	x20, x1
   1cb60:	tst	w10, #0xe
   1cb64:	b.eq	1cba0 <PyInit__decimal@@Base+0x1608c>  // b.none
   1cb68:	mov	x0, x20
   1cb6c:	mov	x1, x26
   1cb70:	mov	x2, x25
   1cb74:	mov	x3, x21
   1cb78:	mov	x4, x19
   1cb7c:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   1cb80:	cbnz	w0, 1cf70 <PyInit__decimal@@Base+0x1645c>
   1cb84:	mov	x0, x20
   1cb88:	mov	x1, x26
   1cb8c:	mov	x2, x25
   1cb90:	mov	x3, x21
   1cb94:	mov	x4, x19
   1cb98:	bl	23e98 <PyInit__decimal@@Base+0x1d384>
   1cb9c:	b	1cf70 <PyInit__decimal@@Base+0x1645c>
   1cba0:	ldr	x10, [x25, #40]
   1cba4:	ldr	x11, [x25, #24]
   1cba8:	ldr	x12, [x26, #40]
   1cbac:	ldr	x13, [x26, #24]
   1cbb0:	and	w27, w8, #0x1
   1cbb4:	add	x10, x10, x11, lsl #3
   1cbb8:	ldur	x11, [x10, #-8]
   1cbbc:	add	x10, x12, x13, lsl #3
   1cbc0:	ldur	x10, [x10, #-8]
   1cbc4:	and	w28, w9, #0x1
   1cbc8:	cbz	x11, 1cc18 <PyInit__decimal@@Base+0x16104>
   1cbcc:	cbz	x10, 1cc3c <PyInit__decimal@@Base+0x16128>
   1cbd0:	ldp	x11, x8, [x25, #8]
   1cbd4:	ldp	x24, x9, [x26, #8]
   1cbd8:	ldr	x10, [x21]
   1cbdc:	mov	w22, w0
   1cbe0:	sub	x8, x8, x9
   1cbe4:	add	x8, x8, x10
   1cbe8:	add	x23, x8, #0x1
   1cbec:	cmp	x23, #0x1
   1cbf0:	stp	x8, x11, [sp, #8]
   1cbf4:	b.lt	1cc5c <PyInit__decimal@@Base+0x16148>  // b.tstop
   1cbf8:	add	x0, sp, #0x248
   1cbfc:	mov	x1, x26
   1cc00:	mov	x2, x23
   1cc04:	mov	x3, x19
   1cc08:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   1cc0c:	add	x26, sp, #0x248
   1cc10:	cbnz	w0, 1cc7c <PyInit__decimal@@Base+0x16168>
   1cc14:	b	1cda4 <PyInit__decimal@@Base+0x16290>
   1cc18:	cbz	x10, 1ccdc <PyInit__decimal@@Base+0x161c8>
   1cc1c:	eor	w1, w28, w27
   1cc20:	mov	w2, #0x2                   	// #2
   1cc24:	mov	x0, x20
   1cc28:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1cc2c:	ldr	w8, [x19]
   1cc30:	orr	w8, w8, #0x4
   1cc34:	str	w8, [x19]
   1cc38:	b	1cf70 <PyInit__decimal@@Base+0x1645c>
   1cc3c:	ldr	x8, [x26, #8]
   1cc40:	ldr	x9, [x25, #8]
   1cc44:	eor	w1, w28, w27
   1cc48:	mov	x0, x20
   1cc4c:	mov	x2, xzr
   1cc50:	sub	x3, x8, x9
   1cc54:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   1cc58:	b	1cf60 <PyInit__decimal@@Base+0x1644c>
   1cc5c:	tbz	x23, #63, 1cc7c <PyInit__decimal@@Base+0x16168>
   1cc60:	mvn	x2, x8
   1cc64:	add	x0, sp, #0x248
   1cc68:	mov	x1, x25
   1cc6c:	mov	x3, x19
   1cc70:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   1cc74:	add	x25, sp, #0x248
   1cc78:	cbz	w0, 1cda4 <PyInit__decimal@@Base+0x16290>
   1cc7c:	ldr	x9, [x26, #24]
   1cc80:	ldr	x10, [x25, #24]
   1cc84:	cmp	x25, x20
   1cc88:	str	x24, [sp]
   1cc8c:	cset	w8, eq  // eq = none
   1cc90:	sub	x9, x9, x10
   1cc94:	cmp	x26, x20
   1cc98:	add	x24, x9, #0x1
   1cc9c:	cset	w9, eq  // eq = none
   1cca0:	cmp	x24, x10
   1cca4:	cset	w10, gt
   1cca8:	and	w10, w8, w10
   1ccac:	adrp	x11, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1ccb0:	tbnz	w10, #0, 1ccbc <PyInit__decimal@@Base+0x161a8>
   1ccb4:	orr	w8, w8, w9
   1ccb8:	cbnz	w8, 1cd20 <PyInit__decimal@@Base+0x1620c>
   1ccbc:	ldr	x9, [x11, #1344]
   1ccc0:	ldr	x8, [x20, #32]
   1ccc4:	cmp	x9, x24
   1ccc8:	csel	x1, x24, x9, lt  // lt = tstop
   1cccc:	cmp	x1, x8
   1ccd0:	b.ne	1ccf0 <PyInit__decimal@@Base+0x161dc>  // b.any
   1ccd4:	mov	w0, #0x1                   	// #1
   1ccd8:	b	1cd1c <PyInit__decimal@@Base+0x16208>
   1ccdc:	mov	w1, #0x10                  	// #16
   1cce0:	mov	x0, x20
   1cce4:	mov	x2, x19
   1cce8:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1ccec:	b	1cf70 <PyInit__decimal@@Base+0x1645c>
   1ccf0:	ldrb	w9, [x20]
   1ccf4:	tbnz	w9, #5, 1cd08 <PyInit__decimal@@Base+0x161f4>
   1ccf8:	mov	x0, x20
   1ccfc:	mov	x2, x19
   1cd00:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1cd04:	b	1cd1c <PyInit__decimal@@Base+0x16208>
   1cd08:	cmp	x1, x8
   1cd0c:	b.le	1ccd4 <PyInit__decimal@@Base+0x161c0>
   1cd10:	mov	x0, x20
   1cd14:	mov	x2, x19
   1cd18:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1cd1c:	cbz	w0, 1cda4 <PyInit__decimal@@Base+0x16290>
   1cd20:	ldr	x5, [x25, #24]
   1cd24:	cmp	x5, #0x1
   1cd28:	b.ne	1cdb8 <PyInit__decimal@@Base+0x162a4>  // b.any
   1cd2c:	ldr	x8, [x25, #40]
   1cd30:	ldr	x0, [x20, #40]
   1cd34:	ldr	x1, [x26, #40]
   1cd38:	ldr	x2, [x26, #24]
   1cd3c:	ldr	x3, [x8]
   1cd40:	bl	1295c <PyInit__decimal@@Base+0xbe48>
   1cd44:	mov	x25, x0
   1cd48:	ldr	x8, [sp]
   1cd4c:	ldr	x9, [sp, #16]
   1cd50:	ldr	x0, [x20, #40]
   1cd54:	mov	x1, x24
   1cd58:	sub	x8, x8, x9
   1cd5c:	ldr	x9, [sp, #8]
   1cd60:	mvn	x9, x9
   1cd64:	add	x26, x8, x9
   1cd68:	bl	1abf0 <PyInit__decimal@@Base+0x140dc>
   1cd6c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1cd70:	ldr	x9, [x8, #1344]
   1cd74:	ldr	x8, [x20, #32]
   1cd78:	mov	x24, x0
   1cd7c:	cmp	x9, x0
   1cd80:	csel	x1, x0, x9, lt  // lt = tstop
   1cd84:	cmp	x1, x8
   1cd88:	b.eq	1ce9c <PyInit__decimal@@Base+0x16388>  // b.none
   1cd8c:	ldrb	w9, [x20]
   1cd90:	tbnz	w9, #5, 1ce88 <PyInit__decimal@@Base+0x16374>
   1cd94:	mov	x0, x20
   1cd98:	mov	x2, x19
   1cd9c:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1cda0:	b	1ce9c <PyInit__decimal@@Base+0x16388>
   1cda4:	mov	w1, #0x200                 	// #512
   1cda8:	mov	x0, x20
   1cdac:	mov	x2, x19
   1cdb0:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1cdb4:	b	1cf2c <PyInit__decimal@@Base+0x16418>
   1cdb8:	cmp	x5, #0x400
   1cdbc:	b.gt	1cdec <PyInit__decimal@@Base+0x162d8>
   1cdc0:	ldr	x0, [x20, #40]
   1cdc4:	ldr	x2, [x26, #40]
   1cdc8:	ldr	x3, [x25, #40]
   1cdcc:	ldr	x4, [x26, #24]
   1cdd0:	mov	x1, xzr
   1cdd4:	bl	12a68 <PyInit__decimal@@Base+0xbf54>
   1cdd8:	tbnz	w0, #31, 1cf90 <PyInit__decimal@@Base+0x1647c>
   1cddc:	mov	w8, #0x1                   	// #1
   1cde0:	tbz	w8, #0, 1cf2c <PyInit__decimal@@Base+0x16418>
   1cde4:	sxtw	x25, w0
   1cde8:	b	1cd48 <PyInit__decimal@@Base+0x16234>
   1cdec:	mov	w8, #0x30                  	// #48
   1cdf0:	mov	w9, #0x40                  	// #64
   1cdf4:	add	x10, sp, #0x48
   1cdf8:	add	x1, sp, #0x18
   1cdfc:	mov	x0, x20
   1ce00:	mov	x2, x26
   1ce04:	mov	x3, x25
   1ce08:	mov	x4, x19
   1ce0c:	stp	xzr, xzr, [sp, #32]
   1ce10:	strb	w8, [sp, #24]
   1ce14:	stp	xzr, x9, [sp, #48]
   1ce18:	str	x10, [sp, #64]
   1ce1c:	bl	23f14 <PyInit__decimal@@Base+0x1d400>
   1ce20:	ldrb	w8, [x20]
   1ce24:	tst	w8, #0xe
   1ce28:	b.ne	1ce38 <PyInit__decimal@@Base+0x16324>  // b.any
   1ce2c:	ldrb	w8, [sp, #24]
   1ce30:	tst	w8, #0xe
   1ce34:	b.eq	1cfa8 <PyInit__decimal@@Base+0x16494>  // b.none
   1ce38:	mov	w2, #0x4                   	// #4
   1ce3c:	mov	x0, x20
   1ce40:	mov	w1, wzr
   1ce44:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1ce48:	ldrb	w8, [sp, #24]
   1ce4c:	cmp	w8, #0x1f
   1ce50:	b.hi	1ce64 <PyInit__decimal@@Base+0x16350>  // b.pmore
   1ce54:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1ce58:	ldr	x8, [x8, #1376]
   1ce5c:	ldr	x0, [sp, #64]
   1ce60:	blr	x8
   1ce64:	ldrb	w8, [sp, #24]
   1ce68:	tbnz	w8, #4, 1ce7c <PyInit__decimal@@Base+0x16368>
   1ce6c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1ce70:	ldr	x8, [x8, #1376]
   1ce74:	add	x0, sp, #0x18
   1ce78:	blr	x8
   1ce7c:	mov	w8, wzr
   1ce80:	cbnz	w8, 1cd48 <PyInit__decimal@@Base+0x16234>
   1ce84:	b	1cf2c <PyInit__decimal@@Base+0x16418>
   1ce88:	cmp	x1, x8
   1ce8c:	b.le	1ce9c <PyInit__decimal@@Base+0x16388>
   1ce90:	mov	x0, x20
   1ce94:	mov	x2, x19
   1ce98:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1ce9c:	ldrb	w8, [x20]
   1cea0:	eor	w9, w28, w27
   1cea4:	mov	x0, x20
   1cea8:	str	x24, [x20, #24]
   1ceac:	and	w8, w8, #0xf0
   1ceb0:	orr	w8, w8, w9
   1ceb4:	strb	w8, [x20]
   1ceb8:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   1cebc:	cbz	x25, 1cef8 <PyInit__decimal@@Base+0x163e4>
   1cec0:	ldr	x8, [x20, #40]
   1cec4:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   1cec8:	movk	x10, #0xcccd
   1cecc:	mov	w11, #0xa                   	// #10
   1ced0:	ldr	x9, [x8]
   1ced4:	umulh	x10, x9, x10
   1ced8:	lsr	x10, x10, #3
   1cedc:	msub	x10, x10, x11, x9
   1cee0:	cmp	x10, #0x5
   1cee4:	b.eq	1ceec <PyInit__decimal@@Base+0x163d8>  // b.none
   1cee8:	cbnz	x10, 1cf28 <PyInit__decimal@@Base+0x16414>
   1ceec:	add	x9, x9, #0x1
   1cef0:	str	x9, [x8]
   1cef4:	b	1cf28 <PyInit__decimal@@Base+0x16414>
   1cef8:	cmp	w22, #0x1
   1cefc:	b.ne	1cf28 <PyInit__decimal@@Base+0x16414>  // b.any
   1cf00:	cmp	x23, #0x1
   1cf04:	b.lt	1cf28 <PyInit__decimal@@Base+0x16414>  // b.tstop
   1cf08:	mov	x0, x20
   1cf0c:	bl	18c30 <PyInit__decimal@@Base+0x1211c>
   1cf10:	cmp	x0, x23
   1cf14:	csel	x22, x23, x0, gt
   1cf18:	mov	x0, x20
   1cf1c:	mov	x1, x22
   1cf20:	bl	1a340 <PyInit__decimal@@Base+0x1382c>
   1cf24:	add	x26, x22, x26
   1cf28:	str	x26, [x20, #8]
   1cf2c:	ldrb	w8, [sp, #584]
   1cf30:	cmp	w8, #0x1f
   1cf34:	b.hi	1cf48 <PyInit__decimal@@Base+0x16434>  // b.pmore
   1cf38:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1cf3c:	ldr	x8, [x8, #1376]
   1cf40:	ldr	x0, [sp, #624]
   1cf44:	blr	x8
   1cf48:	ldrb	w8, [sp, #584]
   1cf4c:	tbnz	w8, #4, 1cf60 <PyInit__decimal@@Base+0x1644c>
   1cf50:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1cf54:	ldr	x8, [x8, #1376]
   1cf58:	add	x0, sp, #0x248
   1cf5c:	blr	x8
   1cf60:	mov	x0, x20
   1cf64:	mov	x1, x21
   1cf68:	mov	x2, x19
   1cf6c:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1cf70:	add	sp, sp, #0x480
   1cf74:	ldp	x20, x19, [sp, #80]
   1cf78:	ldp	x22, x21, [sp, #64]
   1cf7c:	ldp	x24, x23, [sp, #48]
   1cf80:	ldp	x26, x25, [sp, #32]
   1cf84:	ldp	x28, x27, [sp, #16]
   1cf88:	ldp	x29, x30, [sp], #96
   1cf8c:	ret
   1cf90:	mov	w1, #0x200                 	// #512
   1cf94:	mov	x0, x20
   1cf98:	mov	x2, x19
   1cf9c:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1cfa0:	tbnz	wzr, #0, 1cd48 <PyInit__decimal@@Base+0x16234>
   1cfa4:	b	1cf2c <PyInit__decimal@@Base+0x16418>
   1cfa8:	ldr	x9, [sp, #64]
   1cfac:	ldr	x10, [sp, #48]
   1cfb0:	add	x9, x9, x10, lsl #3
   1cfb4:	ldur	x9, [x9, #-8]
   1cfb8:	cmp	x9, #0x0
   1cfbc:	cset	w25, ne  // ne = any
   1cfc0:	cmp	w8, #0x1f
   1cfc4:	b.hi	1cfd8 <PyInit__decimal@@Base+0x164c4>  // b.pmore
   1cfc8:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1cfcc:	ldr	x8, [x8, #1376]
   1cfd0:	ldr	x0, [sp, #64]
   1cfd4:	blr	x8
   1cfd8:	ldrb	w8, [sp, #24]
   1cfdc:	tbnz	w8, #4, 1cff0 <PyInit__decimal@@Base+0x164dc>
   1cfe0:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1cfe4:	ldr	x8, [x8, #1376]
   1cfe8:	add	x0, sp, #0x18
   1cfec:	blr	x8
   1cff0:	ldr	x24, [x20, #24]
   1cff4:	mov	w8, #0x1                   	// #1
   1cff8:	cbnz	w8, 1cd48 <PyInit__decimal@@Base+0x16234>
   1cffc:	b	1cf2c <PyInit__decimal@@Base+0x16418>
   1d000:	stp	x29, x30, [sp, #-80]!
   1d004:	str	x25, [sp, #16]
   1d008:	stp	x24, x23, [sp, #32]
   1d00c:	stp	x22, x21, [sp, #48]
   1d010:	stp	x20, x19, [sp, #64]
   1d014:	mov	x29, sp
   1d018:	ldrb	w8, [x2]
   1d01c:	ldrb	w9, [x3]
   1d020:	mov	x19, x5
   1d024:	mov	x22, x4
   1d028:	mov	x25, x3
   1d02c:	eor	w10, w9, w8
   1d030:	orr	w8, w8, w9
   1d034:	mov	x24, x2
   1d038:	mov	x20, x1
   1d03c:	mov	x21, x0
   1d040:	tst	w8, #0xe
   1d044:	and	w23, w10, #0x1
   1d048:	b.eq	1d07c <PyInit__decimal@@Base+0x16568>  // b.none
   1d04c:	mov	x0, x21
   1d050:	mov	x1, x24
   1d054:	mov	x2, x25
   1d058:	mov	x3, x22
   1d05c:	mov	x4, x19
   1d060:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   1d064:	cbz	w0, 1d0d0 <PyInit__decimal@@Base+0x165bc>
   1d068:	mov	x0, x20
   1d06c:	mov	x1, x21
   1d070:	mov	x2, x19
   1d074:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1d078:	b	1d1d0 <PyInit__decimal@@Base+0x166bc>
   1d07c:	ldr	x8, [x25, #40]
   1d080:	ldr	x9, [x25, #24]
   1d084:	add	x8, x8, x9, lsl #3
   1d088:	ldur	x8, [x8, #-8]
   1d08c:	cbz	x8, 1d11c <PyInit__decimal@@Base+0x16608>
   1d090:	mov	x0, x21
   1d094:	mov	x1, x20
   1d098:	mov	x2, x24
   1d09c:	mov	x3, x25
   1d0a0:	mov	x4, x22
   1d0a4:	mov	x5, x19
   1d0a8:	bl	1d1ec <PyInit__decimal@@Base+0x166d8>
   1d0ac:	mov	x0, x21
   1d0b0:	mov	x1, x22
   1d0b4:	mov	x2, x19
   1d0b8:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1d0bc:	mov	x0, x20
   1d0c0:	mov	x1, x22
   1d0c4:	mov	x2, x19
   1d0c8:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1d0cc:	b	1d1d0 <PyInit__decimal@@Base+0x166bc>
   1d0d0:	ldrb	w9, [x24]
   1d0d4:	ldrb	w8, [x25]
   1d0d8:	tbnz	w9, #1, 1d148 <PyInit__decimal@@Base+0x16634>
   1d0dc:	tbz	w8, #1, 1d1e8 <PyInit__decimal@@Base+0x166d4>
   1d0e0:	mov	x0, x20
   1d0e4:	mov	x1, x24
   1d0e8:	mov	x2, x19
   1d0ec:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1d0f0:	cbz	w0, 1d1c0 <PyInit__decimal@@Base+0x166ac>
   1d0f4:	mov	x0, x20
   1d0f8:	mov	x1, x22
   1d0fc:	mov	x2, x19
   1d100:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1d104:	mov	x0, x21
   1d108:	mov	w1, w23
   1d10c:	mov	x2, xzr
   1d110:	mov	x3, xzr
   1d114:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   1d118:	b	1d1d0 <PyInit__decimal@@Base+0x166bc>
   1d11c:	ldr	x8, [x24, #40]
   1d120:	ldr	x9, [x24, #24]
   1d124:	add	x8, x8, x9, lsl #3
   1d128:	ldur	x8, [x8, #-8]
   1d12c:	cbz	x8, 1d18c <PyInit__decimal@@Base+0x16678>
   1d130:	mov	w2, #0x2                   	// #2
   1d134:	mov	x0, x21
   1d138:	mov	w1, w23
   1d13c:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1d140:	mov	w21, #0x104                 	// #260
   1d144:	b	1d1a0 <PyInit__decimal@@Base+0x1668c>
   1d148:	tbz	w8, #1, 1d15c <PyInit__decimal@@Base+0x16648>
   1d14c:	mov	w2, #0x4                   	// #4
   1d150:	mov	x0, x21
   1d154:	mov	w1, wzr
   1d158:	b	1d168 <PyInit__decimal@@Base+0x16654>
   1d15c:	mov	w2, #0x2                   	// #2
   1d160:	mov	x0, x21
   1d164:	mov	w1, w23
   1d168:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1d16c:	mov	w2, #0x4                   	// #4
   1d170:	mov	x0, x20
   1d174:	mov	w1, wzr
   1d178:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1d17c:	ldr	w8, [x19]
   1d180:	orr	w8, w8, #0x100
   1d184:	str	w8, [x19]
   1d188:	b	1d1d0 <PyInit__decimal@@Base+0x166bc>
   1d18c:	mov	w2, #0x4                   	// #4
   1d190:	mov	x0, x21
   1d194:	mov	w1, wzr
   1d198:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1d19c:	mov	w21, #0x10                  	// #16
   1d1a0:	mov	w2, #0x4                   	// #4
   1d1a4:	mov	x0, x20
   1d1a8:	mov	w1, wzr
   1d1ac:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1d1b0:	ldr	w8, [x19]
   1d1b4:	orr	w8, w8, w21
   1d1b8:	str	w8, [x19]
   1d1bc:	b	1d1d0 <PyInit__decimal@@Base+0x166bc>
   1d1c0:	mov	w1, #0x200                 	// #512
   1d1c4:	mov	x0, x21
   1d1c8:	mov	x2, x19
   1d1cc:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1d1d0:	ldp	x20, x19, [sp, #64]
   1d1d4:	ldp	x22, x21, [sp, #48]
   1d1d8:	ldp	x24, x23, [sp, #32]
   1d1dc:	ldr	x25, [sp, #16]
   1d1e0:	ldp	x29, x30, [sp], #80
   1d1e4:	ret
   1d1e8:	bl	6760 <abort@plt>
   1d1ec:	stp	x29, x30, [sp, #-96]!
   1d1f0:	stp	x28, x27, [sp, #16]
   1d1f4:	stp	x26, x25, [sp, #32]
   1d1f8:	stp	x24, x23, [sp, #48]
   1d1fc:	stp	x22, x21, [sp, #64]
   1d200:	stp	x20, x19, [sp, #80]
   1d204:	mov	x29, sp
   1d208:	sub	sp, sp, #0x250
   1d20c:	mov	w8, #0x30                  	// #48
   1d210:	mov	w9, #0x40                  	// #64
   1d214:	add	x10, sp, #0x48
   1d218:	stp	xzr, xzr, [sp, #32]
   1d21c:	strb	w8, [sp, #24]
   1d220:	stp	xzr, x9, [sp, #48]
   1d224:	str	x10, [sp, #64]
   1d228:	ldrb	w10, [x2]
   1d22c:	ldr	x12, [x2, #40]
   1d230:	ldr	x13, [x2, #24]
   1d234:	ldrb	w11, [x3]
   1d238:	ldr	x8, [x2, #8]
   1d23c:	ldr	x9, [x3, #8]
   1d240:	and	w26, w10, #0x1
   1d244:	add	x10, x12, x13, lsl #3
   1d248:	ldur	x12, [x10, #-8]
   1d24c:	and	w10, w11, #0x1
   1d250:	eor	w22, w10, w26
   1d254:	subs	x10, x8, x9
   1d258:	mov	x21, x5
   1d25c:	mov	x24, x2
   1d260:	mov	x19, x1
   1d264:	mov	x20, x0
   1d268:	csel	x28, x9, x8, gt
   1d26c:	cbz	x12, 1d2a8 <PyInit__decimal@@Base+0x16794>
   1d270:	ldr	x11, [x24, #16]
   1d274:	ldr	x12, [x3, #16]
   1d278:	mov	x25, x3
   1d27c:	add	x10, x10, x11
   1d280:	subs	x10, x10, x12
   1d284:	b.mi	1d2c0 <PyInit__decimal@@Base+0x167ac>  // b.first
   1d288:	ldr	x11, [x4]
   1d28c:	mov	x23, x4
   1d290:	cmp	x10, x11
   1d294:	b.le	1d2f8 <PyInit__decimal@@Base+0x167e4>
   1d298:	ldr	w8, [x21]
   1d29c:	orr	w8, w8, #0x8
   1d2a0:	str	w8, [x21]
   1d2a4:	b	1d56c <PyInit__decimal@@Base+0x16a58>
   1d2a8:	mov	x0, x19
   1d2ac:	mov	x1, x24
   1d2b0:	mov	x2, x21
   1d2b4:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1d2b8:	cbnz	w0, 1d2dc <PyInit__decimal@@Base+0x167c8>
   1d2bc:	b	1d56c <PyInit__decimal@@Base+0x16a58>
   1d2c0:	mov	x0, x19
   1d2c4:	mov	x1, x24
   1d2c8:	subs	x2, x8, x9
   1d2cc:	b.le	1d324 <PyInit__decimal@@Base+0x16810>
   1d2d0:	mov	x3, x21
   1d2d4:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   1d2d8:	cbz	w0, 1d56c <PyInit__decimal@@Base+0x16a58>
   1d2dc:	str	x28, [x19, #8]
   1d2e0:	mov	x0, x20
   1d2e4:	mov	w1, w22
   1d2e8:	mov	x2, xzr
   1d2ec:	mov	x3, xzr
   1d2f0:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   1d2f4:	b	1d5bc <PyInit__decimal@@Base+0x16aa8>
   1d2f8:	subs	x2, x8, x9
   1d2fc:	b.eq	1d350 <PyInit__decimal@@Base+0x1683c>  // b.none
   1d300:	cmp	x2, #0x1
   1d304:	b.lt	1d334 <PyInit__decimal@@Base+0x16820>  // b.tstop
   1d308:	add	x0, sp, #0x18
   1d30c:	mov	x1, x24
   1d310:	mov	x3, x21
   1d314:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   1d318:	add	x24, sp, #0x18
   1d31c:	cbnz	w0, 1d350 <PyInit__decimal@@Base+0x1683c>
   1d320:	b	1d56c <PyInit__decimal@@Base+0x16a58>
   1d324:	mov	x2, x21
   1d328:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1d32c:	cbnz	w0, 1d2e0 <PyInit__decimal@@Base+0x167cc>
   1d330:	b	1d56c <PyInit__decimal@@Base+0x16a58>
   1d334:	neg	x2, x2
   1d338:	add	x0, sp, #0x18
   1d33c:	mov	x1, x25
   1d340:	mov	x3, x21
   1d344:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   1d348:	add	x25, sp, #0x18
   1d34c:	cbz	w0, 1d56c <PyInit__decimal@@Base+0x16a58>
   1d350:	ldr	x9, [x24, #24]
   1d354:	ldr	x8, [x25, #24]
   1d358:	cmp	x24, x20
   1d35c:	sub	x10, x9, x8
   1d360:	add	x10, x10, #0x1
   1d364:	b.ne	1d370 <PyInit__decimal@@Base+0x1685c>  // b.any
   1d368:	cmp	x10, x9
   1d36c:	b.lt	1d3e4 <PyInit__decimal@@Base+0x168d0>  // b.tstop
   1d370:	cmp	x25, x20
   1d374:	b.ne	1d380 <PyInit__decimal@@Base+0x1686c>  // b.any
   1d378:	cmp	x10, x8
   1d37c:	b.lt	1d3e4 <PyInit__decimal@@Base+0x168d0>  // b.tstop
   1d380:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1d384:	ldr	x9, [x8, #1344]
   1d388:	ldr	x8, [x20, #32]
   1d38c:	cmp	x9, x10
   1d390:	csel	x1, x10, x9, lt  // lt = tstop
   1d394:	cmp	x1, x8
   1d398:	b.ne	1d3a8 <PyInit__decimal@@Base+0x16894>  // b.any
   1d39c:	mov	w0, #0x1                   	// #1
   1d3a0:	cbnz	w0, 1d3e4 <PyInit__decimal@@Base+0x168d0>
   1d3a4:	b	1d56c <PyInit__decimal@@Base+0x16a58>
   1d3a8:	ldrb	w9, [x20]
   1d3ac:	tbnz	w9, #5, 1d3c4 <PyInit__decimal@@Base+0x168b0>
   1d3b0:	mov	x0, x20
   1d3b4:	mov	x2, x21
   1d3b8:	mov	x27, x10
   1d3bc:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1d3c0:	b	1d3dc <PyInit__decimal@@Base+0x168c8>
   1d3c4:	cmp	x1, x8
   1d3c8:	b.le	1d39c <PyInit__decimal@@Base+0x16888>
   1d3cc:	mov	x0, x20
   1d3d0:	mov	x2, x21
   1d3d4:	mov	x27, x10
   1d3d8:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1d3dc:	mov	x10, x27
   1d3e0:	cbz	w0, 1d56c <PyInit__decimal@@Base+0x16a58>
   1d3e4:	ldr	x27, [x25, #24]
   1d3e8:	cmp	x24, x19
   1d3ec:	b.ne	1d3fc <PyInit__decimal@@Base+0x168e8>  // b.any
   1d3f0:	ldr	x8, [x24, #24]
   1d3f4:	cmp	x27, x8
   1d3f8:	b.lt	1d468 <PyInit__decimal@@Base+0x16954>  // b.tstop
   1d3fc:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1d400:	ldr	x9, [x8, #1344]
   1d404:	ldr	x8, [x19, #32]
   1d408:	cmp	x9, x27
   1d40c:	csel	x1, x27, x9, lt  // lt = tstop
   1d410:	cmp	x1, x8
   1d414:	b.eq	1d460 <PyInit__decimal@@Base+0x1694c>  // b.none
   1d418:	ldrb	w9, [x19]
   1d41c:	tbnz	w9, #5, 1d440 <PyInit__decimal@@Base+0x1692c>
   1d420:	mov	x0, x19
   1d424:	mov	x2, x21
   1d428:	str	x27, [sp, #8]
   1d42c:	mov	x27, x10
   1d430:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1d434:	mov	x10, x27
   1d438:	ldr	x27, [sp, #8]
   1d43c:	b	1d464 <PyInit__decimal@@Base+0x16950>
   1d440:	cmp	x1, x8
   1d444:	b.le	1d460 <PyInit__decimal@@Base+0x1694c>
   1d448:	mov	x0, x19
   1d44c:	mov	x2, x21
   1d450:	str	x10, [sp, #16]
   1d454:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1d458:	ldr	x10, [sp, #16]
   1d45c:	b	1d464 <PyInit__decimal@@Base+0x16950>
   1d460:	mov	w0, #0x1                   	// #1
   1d464:	cbz	w0, 1d56c <PyInit__decimal@@Base+0x16a58>
   1d468:	ldr	x5, [x25, #24]
   1d46c:	cmp	x5, #0x1
   1d470:	b.ne	1d4a4 <PyInit__decimal@@Base+0x16990>  // b.any
   1d474:	ldr	x2, [x24, #24]
   1d478:	ldr	x0, [x20, #40]
   1d47c:	str	x10, [sp, #16]
   1d480:	cmp	x2, #0x1
   1d484:	b.ne	1d4e0 <PyInit__decimal@@Base+0x169cc>  // b.any
   1d488:	ldr	x8, [x24, #40]
   1d48c:	ldr	x9, [x25, #40]
   1d490:	ldr	x1, [x19, #40]
   1d494:	ldr	x2, [x8]
   1d498:	ldr	x3, [x9]
   1d49c:	bl	18dc8 <PyInit__decimal@@Base+0x122b4>
   1d4a0:	b	1d4f8 <PyInit__decimal@@Base+0x169e4>
   1d4a4:	cmp	x5, #0x400
   1d4a8:	b.gt	1d53c <PyInit__decimal@@Base+0x16a28>
   1d4ac:	ldr	x0, [x20, #40]
   1d4b0:	ldr	x1, [x19, #40]
   1d4b4:	ldr	x2, [x24, #40]
   1d4b8:	ldr	x3, [x25, #40]
   1d4bc:	ldr	x4, [x24, #24]
   1d4c0:	str	x10, [sp, #16]
   1d4c4:	bl	12a68 <PyInit__decimal@@Base+0xbf54>
   1d4c8:	cmn	w0, #0x1
   1d4cc:	b.ne	1d4f8 <PyInit__decimal@@Base+0x169e4>  // b.any
   1d4d0:	ldr	w8, [x21]
   1d4d4:	orr	w8, w8, #0x200
   1d4d8:	str	w8, [x21]
   1d4dc:	b	1d56c <PyInit__decimal@@Base+0x16a58>
   1d4e0:	ldr	x8, [x25, #40]
   1d4e4:	ldr	x1, [x24, #40]
   1d4e8:	ldr	x3, [x8]
   1d4ec:	bl	1295c <PyInit__decimal@@Base+0xbe48>
   1d4f0:	ldr	x8, [x19, #40]
   1d4f4:	str	x0, [x8]
   1d4f8:	ldr	x0, [x20, #40]
   1d4fc:	ldr	x1, [sp, #16]
   1d500:	bl	1abf0 <PyInit__decimal@@Base+0x140dc>
   1d504:	adrp	x25, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1d508:	ldr	x9, [x25, #1344]
   1d50c:	ldr	x8, [x20, #32]
   1d510:	mov	x24, x0
   1d514:	cmp	x9, x0
   1d518:	csel	x1, x0, x9, lt  // lt = tstop
   1d51c:	cmp	x1, x8
   1d520:	b.eq	1d5f0 <PyInit__decimal@@Base+0x16adc>  // b.none
   1d524:	ldrb	w9, [x20]
   1d528:	tbnz	w9, #5, 1d5dc <PyInit__decimal@@Base+0x16ac8>
   1d52c:	mov	x0, x20
   1d530:	mov	x2, x21
   1d534:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1d538:	b	1d5f0 <PyInit__decimal@@Base+0x16adc>
   1d53c:	mov	x0, x20
   1d540:	mov	x1, x19
   1d544:	mov	x2, x24
   1d548:	mov	x3, x25
   1d54c:	mov	x4, x21
   1d550:	bl	23f14 <PyInit__decimal@@Base+0x1d400>
   1d554:	ldrb	w8, [x20]
   1d558:	tst	w8, #0xe
   1d55c:	b.ne	1d56c <PyInit__decimal@@Base+0x16a58>  // b.any
   1d560:	ldrb	w8, [x19]
   1d564:	tst	w8, #0xe
   1d568:	b.eq	1d698 <PyInit__decimal@@Base+0x16b84>  // b.none
   1d56c:	mov	w2, #0x4                   	// #4
   1d570:	mov	x0, x20
   1d574:	mov	w1, wzr
   1d578:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1d57c:	mov	w2, #0x4                   	// #4
   1d580:	mov	x0, x19
   1d584:	mov	w1, wzr
   1d588:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1d58c:	ldrb	w8, [sp, #24]
   1d590:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1d594:	cmp	w8, #0x1f
   1d598:	b.hi	1d5a8 <PyInit__decimal@@Base+0x16a94>  // b.pmore
   1d59c:	ldr	x8, [x19, #1376]
   1d5a0:	ldr	x0, [sp, #64]
   1d5a4:	blr	x8
   1d5a8:	ldrb	w8, [sp, #24]
   1d5ac:	tbnz	w8, #4, 1d5bc <PyInit__decimal@@Base+0x16aa8>
   1d5b0:	ldr	x8, [x19, #1376]
   1d5b4:	add	x0, sp, #0x18
   1d5b8:	blr	x8
   1d5bc:	add	sp, sp, #0x250
   1d5c0:	ldp	x20, x19, [sp, #80]
   1d5c4:	ldp	x22, x21, [sp, #64]
   1d5c8:	ldp	x24, x23, [sp, #48]
   1d5cc:	ldp	x26, x25, [sp, #32]
   1d5d0:	ldp	x28, x27, [sp, #16]
   1d5d4:	ldp	x29, x30, [sp], #96
   1d5d8:	ret
   1d5dc:	cmp	x1, x8
   1d5e0:	b.le	1d5f0 <PyInit__decimal@@Base+0x16adc>
   1d5e4:	mov	x0, x20
   1d5e8:	mov	x2, x21
   1d5ec:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1d5f0:	mov	x0, x20
   1d5f4:	str	x24, [x20, #24]
   1d5f8:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   1d5fc:	ldrb	w8, [x20]
   1d600:	str	xzr, [x20, #8]
   1d604:	and	w8, w8, #0xf0
   1d608:	orr	w8, w8, w22
   1d60c:	strb	w8, [x20]
   1d610:	ldr	x8, [x20, #16]
   1d614:	ldr	x9, [x23]
   1d618:	cmp	x8, x9
   1d61c:	b.gt	1d298 <PyInit__decimal@@Base+0x16784>
   1d620:	ldr	x0, [x19, #40]
   1d624:	mov	x1, x27
   1d628:	bl	1abf0 <PyInit__decimal@@Base+0x140dc>
   1d62c:	ldr	x9, [x25, #1344]
   1d630:	ldr	x8, [x19, #32]
   1d634:	mov	x20, x0
   1d638:	cmp	x9, x0
   1d63c:	csel	x1, x0, x9, lt  // lt = tstop
   1d640:	cmp	x1, x8
   1d644:	b.eq	1d674 <PyInit__decimal@@Base+0x16b60>  // b.none
   1d648:	ldrb	w9, [x19]
   1d64c:	tbnz	w9, #5, 1d660 <PyInit__decimal@@Base+0x16b4c>
   1d650:	mov	x0, x19
   1d654:	mov	x2, x21
   1d658:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1d65c:	b	1d674 <PyInit__decimal@@Base+0x16b60>
   1d660:	cmp	x1, x8
   1d664:	b.le	1d674 <PyInit__decimal@@Base+0x16b60>
   1d668:	mov	x0, x19
   1d66c:	mov	x2, x21
   1d670:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1d674:	mov	x0, x19
   1d678:	str	x20, [x19, #24]
   1d67c:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   1d680:	ldrb	w8, [x19]
   1d684:	str	x28, [x19, #8]
   1d688:	and	w8, w8, #0xf0
   1d68c:	orr	w8, w8, w26
   1d690:	strb	w8, [x19]
   1d694:	b	1d58c <PyInit__decimal@@Base+0x16a78>
   1d698:	ldr	x8, [x20, #24]
   1d69c:	ldr	x27, [x19, #24]
   1d6a0:	str	x8, [sp, #16]
   1d6a4:	b	1d4f8 <PyInit__decimal@@Base+0x169e4>
   1d6a8:	stp	x29, x30, [sp, #-80]!
   1d6ac:	str	x28, [sp, #16]
   1d6b0:	stp	x24, x23, [sp, #32]
   1d6b4:	stp	x22, x21, [sp, #48]
   1d6b8:	stp	x20, x19, [sp, #64]
   1d6bc:	mov	x29, sp
   1d6c0:	sub	sp, sp, #0x230
   1d6c4:	mov	w8, #0x30                  	// #48
   1d6c8:	mov	w9, #0x40                  	// #64
   1d6cc:	add	x10, sp, #0x30
   1d6d0:	stp	xzr, xzr, [sp, #8]
   1d6d4:	strb	w8, [sp]
   1d6d8:	stp	xzr, x9, [sp, #24]
   1d6dc:	str	x10, [sp, #40]
   1d6e0:	ldrb	w8, [x1]
   1d6e4:	ldrb	w9, [x2]
   1d6e8:	mov	x20, x4
   1d6ec:	mov	x21, x3
   1d6f0:	mov	x22, x2
   1d6f4:	eor	w10, w9, w8
   1d6f8:	orr	w8, w8, w9
   1d6fc:	mov	x24, x1
   1d700:	mov	x19, x0
   1d704:	tst	w8, #0xe
   1d708:	and	w23, w10, #0x1
   1d70c:	b.eq	1d754 <PyInit__decimal@@Base+0x16c40>  // b.none
   1d710:	mov	x0, x19
   1d714:	mov	x1, x24
   1d718:	mov	x2, x22
   1d71c:	mov	x3, x21
   1d720:	mov	x4, x20
   1d724:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   1d728:	cbnz	w0, 1d834 <PyInit__decimal@@Base+0x16d20>
   1d72c:	ldrb	w8, [x24]
   1d730:	tbnz	w8, #1, 1d7fc <PyInit__decimal@@Base+0x16ce8>
   1d734:	ldrb	w8, [x22]
   1d738:	tbz	w8, #1, 1d850 <PyInit__decimal@@Base+0x16d3c>
   1d73c:	mov	x0, x19
   1d740:	mov	w1, w23
   1d744:	mov	x2, xzr
   1d748:	mov	x3, xzr
   1d74c:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   1d750:	b	1d834 <PyInit__decimal@@Base+0x16d20>
   1d754:	ldr	x8, [x22, #40]
   1d758:	ldr	x9, [x22, #24]
   1d75c:	add	x8, x8, x9, lsl #3
   1d760:	ldur	x8, [x8, #-8]
   1d764:	cbz	x8, 1d7c8 <PyInit__decimal@@Base+0x16cb4>
   1d768:	mov	x1, sp
   1d76c:	mov	x0, x19
   1d770:	mov	x2, x24
   1d774:	mov	x3, x22
   1d778:	mov	x4, x21
   1d77c:	mov	x5, x20
   1d780:	bl	1d1ec <PyInit__decimal@@Base+0x166d8>
   1d784:	ldrb	w8, [sp]
   1d788:	adrp	x22, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1d78c:	cmp	w8, #0x1f
   1d790:	b.hi	1d7a0 <PyInit__decimal@@Base+0x16c8c>  // b.pmore
   1d794:	ldr	x8, [x22, #1376]
   1d798:	ldr	x0, [sp, #40]
   1d79c:	blr	x8
   1d7a0:	ldrb	w8, [sp]
   1d7a4:	tbnz	w8, #4, 1d7b4 <PyInit__decimal@@Base+0x16ca0>
   1d7a8:	ldr	x8, [x22, #1376]
   1d7ac:	mov	x0, sp
   1d7b0:	blr	x8
   1d7b4:	mov	x0, x19
   1d7b8:	mov	x1, x21
   1d7bc:	mov	x2, x20
   1d7c0:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1d7c4:	b	1d834 <PyInit__decimal@@Base+0x16d20>
   1d7c8:	ldr	x8, [x24, #40]
   1d7cc:	ldr	x9, [x24, #24]
   1d7d0:	add	x8, x8, x9, lsl #3
   1d7d4:	ldur	x8, [x8, #-8]
   1d7d8:	cbz	x8, 1d824 <PyInit__decimal@@Base+0x16d10>
   1d7dc:	mov	w2, #0x2                   	// #2
   1d7e0:	mov	x0, x19
   1d7e4:	mov	w1, w23
   1d7e8:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1d7ec:	ldr	w8, [x20]
   1d7f0:	orr	w8, w8, #0x4
   1d7f4:	str	w8, [x20]
   1d7f8:	b	1d834 <PyInit__decimal@@Base+0x16d20>
   1d7fc:	ldrb	w9, [x22]
   1d800:	tbnz	w9, #1, 1d81c <PyInit__decimal@@Base+0x16d08>
   1d804:	tbz	w8, #1, 1d734 <PyInit__decimal@@Base+0x16c20>
   1d808:	mov	w2, #0x2                   	// #2
   1d80c:	mov	x0, x19
   1d810:	mov	w1, w23
   1d814:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1d818:	b	1d834 <PyInit__decimal@@Base+0x16d20>
   1d81c:	mov	w1, #0x100                 	// #256
   1d820:	b	1d828 <PyInit__decimal@@Base+0x16d14>
   1d824:	mov	w1, #0x10                  	// #16
   1d828:	mov	x0, x19
   1d82c:	mov	x2, x20
   1d830:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1d834:	add	sp, sp, #0x230
   1d838:	ldp	x20, x19, [sp, #64]
   1d83c:	ldp	x22, x21, [sp, #48]
   1d840:	ldp	x24, x23, [sp, #32]
   1d844:	ldr	x28, [sp, #16]
   1d848:	ldp	x29, x30, [sp], #80
   1d84c:	ret
   1d850:	bl	6760 <abort@plt>
   1d854:	stp	x29, x30, [sp, #-64]!
   1d858:	stp	x28, x23, [sp, #16]
   1d85c:	stp	x22, x21, [sp, #32]
   1d860:	stp	x20, x19, [sp, #48]
   1d864:	mov	x29, sp
   1d868:	sub	sp, sp, #0x260
   1d86c:	mov	x23, x0
   1d870:	mov	w8, #0x30                  	// #48
   1d874:	mov	w9, #0x40                  	// #64
   1d878:	add	x10, sp, #0x30
   1d87c:	sub	x0, x29, #0x30
   1d880:	mov	x19, x4
   1d884:	mov	x20, x3
   1d888:	mov	x21, x2
   1d88c:	mov	x22, x1
   1d890:	stp	xzr, xzr, [sp, #8]
   1d894:	strb	w8, [sp]
   1d898:	stp	xzr, x9, [sp, #24]
   1d89c:	str	x10, [sp, #40]
   1d8a0:	bl	13964 <PyInit__decimal@@Base+0xce50>
   1d8a4:	mov	x0, sp
   1d8a8:	sub	x2, x29, #0x30
   1d8ac:	mov	x1, x21
   1d8b0:	mov	x3, x19
   1d8b4:	bl	18f28 <PyInit__decimal@@Base+0x12414>
   1d8b8:	mov	x2, sp
   1d8bc:	mov	x0, x23
   1d8c0:	mov	x1, x22
   1d8c4:	mov	x3, x20
   1d8c8:	mov	x4, x19
   1d8cc:	bl	1cad0 <PyInit__decimal@@Base+0x15fbc>
   1d8d0:	ldrb	w8, [sp]
   1d8d4:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1d8d8:	cmp	w8, #0x1f
   1d8dc:	b.hi	1d8ec <PyInit__decimal@@Base+0x16dd8>  // b.pmore
   1d8e0:	ldr	x8, [x19, #1376]
   1d8e4:	ldr	x0, [sp, #40]
   1d8e8:	blr	x8
   1d8ec:	ldrb	w8, [sp]
   1d8f0:	tbnz	w8, #4, 1d900 <PyInit__decimal@@Base+0x16dec>
   1d8f4:	ldr	x8, [x19, #1376]
   1d8f8:	mov	x0, sp
   1d8fc:	blr	x8
   1d900:	add	sp, sp, #0x260
   1d904:	ldp	x20, x19, [sp, #48]
   1d908:	ldp	x22, x21, [sp, #32]
   1d90c:	ldp	x28, x23, [sp, #16]
   1d910:	ldp	x29, x30, [sp], #64
   1d914:	ret
   1d918:	stp	x29, x30, [sp, #-64]!
   1d91c:	stp	x28, x23, [sp, #16]
   1d920:	stp	x22, x21, [sp, #32]
   1d924:	stp	x20, x19, [sp, #48]
   1d928:	mov	x29, sp
   1d92c:	sub	sp, sp, #0x260
   1d930:	mov	x23, x0
   1d934:	mov	w8, #0x30                  	// #48
   1d938:	mov	w9, #0x40                  	// #64
   1d93c:	add	x10, sp, #0x30
   1d940:	sub	x0, x29, #0x30
   1d944:	mov	x19, x4
   1d948:	mov	x20, x3
   1d94c:	mov	x21, x2
   1d950:	mov	x22, x1
   1d954:	stp	xzr, xzr, [sp, #8]
   1d958:	strb	w8, [sp]
   1d95c:	stp	xzr, x9, [sp, #24]
   1d960:	str	x10, [sp, #40]
   1d964:	bl	13964 <PyInit__decimal@@Base+0xce50>
   1d968:	mov	x0, sp
   1d96c:	sub	x2, x29, #0x30
   1d970:	mov	x1, x21
   1d974:	mov	x3, x19
   1d978:	bl	19050 <PyInit__decimal@@Base+0x1253c>
   1d97c:	mov	x2, sp
   1d980:	mov	x0, x23
   1d984:	mov	x1, x22
   1d988:	mov	x3, x20
   1d98c:	mov	x4, x19
   1d990:	bl	1cad0 <PyInit__decimal@@Base+0x15fbc>
   1d994:	ldrb	w8, [sp]
   1d998:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1d99c:	cmp	w8, #0x1f
   1d9a0:	b.hi	1d9b0 <PyInit__decimal@@Base+0x16e9c>  // b.pmore
   1d9a4:	ldr	x8, [x19, #1376]
   1d9a8:	ldr	x0, [sp, #40]
   1d9ac:	blr	x8
   1d9b0:	ldrb	w8, [sp]
   1d9b4:	tbnz	w8, #4, 1d9c4 <PyInit__decimal@@Base+0x16eb0>
   1d9b8:	ldr	x8, [x19, #1376]
   1d9bc:	mov	x0, sp
   1d9c0:	blr	x8
   1d9c4:	add	sp, sp, #0x260
   1d9c8:	ldp	x20, x19, [sp, #48]
   1d9cc:	ldp	x22, x21, [sp, #32]
   1d9d0:	ldp	x28, x23, [sp, #16]
   1d9d4:	ldp	x29, x30, [sp], #64
   1d9d8:	ret
   1d9dc:	stp	x29, x30, [sp, #-16]!
   1d9e0:	mov	x29, sp
   1d9e4:	sxtw	x2, w2
   1d9e8:	bl	1d854 <PyInit__decimal@@Base+0x16d40>
   1d9ec:	ldp	x29, x30, [sp], #16
   1d9f0:	ret
   1d9f4:	stp	x29, x30, [sp, #-16]!
   1d9f8:	mov	x29, sp
   1d9fc:	mov	w2, w2
   1da00:	bl	1d918 <PyInit__decimal@@Base+0x16e04>
   1da04:	ldp	x29, x30, [sp], #16
   1da08:	ret
   1da0c:	stp	x29, x30, [sp, #-16]!
   1da10:	mov	x29, sp
   1da14:	bl	1d854 <PyInit__decimal@@Base+0x16d40>
   1da18:	ldp	x29, x30, [sp], #16
   1da1c:	ret
   1da20:	stp	x29, x30, [sp, #-16]!
   1da24:	mov	x29, sp
   1da28:	bl	1d918 <PyInit__decimal@@Base+0x16e04>
   1da2c:	ldp	x29, x30, [sp], #16
   1da30:	ret
   1da34:	stp	x29, x30, [sp, #-80]!
   1da38:	stp	x28, x25, [sp, #16]
   1da3c:	stp	x24, x23, [sp, #32]
   1da40:	stp	x22, x21, [sp, #48]
   1da44:	stp	x20, x19, [sp, #64]
   1da48:	mov	x29, sp
   1da4c:	sub	sp, sp, #0x900
   1da50:	ldrb	w8, [x1]
   1da54:	mov	x20, x3
   1da58:	mov	x22, x2
   1da5c:	mov	x21, x1
   1da60:	tst	w8, #0xe
   1da64:	mov	x19, x0
   1da68:	b.eq	1daa0 <PyInit__decimal@@Base+0x16f8c>  // b.none
   1da6c:	mov	x0, x19
   1da70:	mov	x1, x21
   1da74:	mov	x2, x22
   1da78:	mov	x3, x20
   1da7c:	bl	19544 <PyInit__decimal@@Base+0x12a30>
   1da80:	cbnz	w0, 1ddac <PyInit__decimal@@Base+0x17298>
   1da84:	ldrb	w8, [x21]
   1da88:	tbnz	w8, #0, 1dd3c <PyInit__decimal@@Base+0x17228>
   1da8c:	mov	w2, #0x2                   	// #2
   1da90:	mov	x0, x19
   1da94:	mov	w1, wzr
   1da98:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1da9c:	b	1ddac <PyInit__decimal@@Base+0x17298>
   1daa0:	ldr	x8, [x21, #40]
   1daa4:	ldr	x9, [x21, #24]
   1daa8:	add	x8, x8, x9, lsl #3
   1daac:	ldur	x8, [x8, #-8]
   1dab0:	cbz	x8, 1dd2c <PyInit__decimal@@Base+0x17218>
   1dab4:	ldp	q2, q0, [x22, #16]
   1dab8:	ldr	q1, [x22]
   1dabc:	add	x24, sp, #0x240
   1dac0:	mov	w8, #0x6                   	// #6
   1dac4:	str	q0, [x24, #1712]
   1dac8:	str	q2, [x24, #1696]
   1dacc:	str	q1, [x24, #1680]
   1dad0:	stur	w8, [x29, #-12]
   1dad4:	ldr	w8, [x22, #44]
   1dad8:	cbz	w8, 1dd54 <PyInit__decimal@@Base+0x17240>
   1dadc:	mov	w8, #0x30                  	// #48
   1dae0:	add	x10, sp, #0x6d0
   1dae4:	strb	w8, [sp, #1696]
   1dae8:	str	x10, [x24, #1160]
   1daec:	add	x10, sp, #0x4a0
   1daf0:	mov	w9, #0x40                  	// #64
   1daf4:	strb	w8, [sp, #1136]
   1daf8:	str	x10, [x24, #600]
   1dafc:	add	x10, sp, #0x270
   1db00:	strb	w8, [sp, #576]
   1db04:	stp	x9, x10, [x24, #32]
   1db08:	add	x10, sp, #0x40
   1db0c:	cmp	x19, x21
   1db10:	stp	xzr, xzr, [sp, #24]
   1db14:	str	xzr, [x24, #1128]
   1db18:	str	xzr, [x24, #1144]
   1db1c:	str	xzr, [x24, #1136]
   1db20:	str	x9, [x24, #1152]
   1db24:	str	xzr, [x24, #568]
   1db28:	str	xzr, [x24, #584]
   1db2c:	str	xzr, [x24, #576]
   1db30:	str	x9, [x24, #592]
   1db34:	stp	xzr, xzr, [x24, #8]
   1db38:	str	xzr, [x24, #24]
   1db3c:	strb	w8, [sp, #16]
   1db40:	stp	xzr, x9, [sp, #40]
   1db44:	str	x10, [sp, #56]
   1db48:	b.ne	1db64 <PyInit__decimal@@Base+0x17050>  // b.any
   1db4c:	add	x0, sp, #0x10
   1db50:	mov	x1, x21
   1db54:	mov	x2, x20
   1db58:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1db5c:	add	x21, sp, #0x10
   1db60:	cbz	w0, 1dd9c <PyInit__decimal@@Base+0x17288>
   1db64:	stur	wzr, [x29, #-8]
   1db68:	ldr	x8, [x22]
   1db6c:	sub	x9, x29, #0x30
   1db70:	add	x23, x9, #0x1c
   1db74:	add	x25, x8, #0x3
   1db78:	sub	x2, x29, #0x30
   1db7c:	add	x3, sp, #0xc
   1db80:	mov	x0, x19
   1db84:	mov	x1, x21
   1db88:	str	x25, [x24, #1680]
   1db8c:	str	wzr, [sp, #12]
   1db90:	bl	1ddc8 <PyInit__decimal@@Base+0x172b4>
   1db94:	ldr	w8, [sp, #12]
   1db98:	ldr	w9, [x20]
   1db9c:	add	x0, sp, #0x240
   1dba0:	mov	w2, #0x1                   	// #1
   1dba4:	tst	w8, #0x4000
   1dba8:	orr	w9, w9, w8
   1dbac:	str	w9, [x20]
   1dbb0:	ldp	x9, x10, [x19, #8]
   1dbb4:	ldr	x11, [x24, #1680]
   1dbb8:	mov	w1, wzr
   1dbbc:	add	x10, x10, x9
   1dbc0:	sub	x10, x10, x11
   1dbc4:	csel	x3, x10, x9, eq  // eq = none
   1dbc8:	bl	18f78 <PyInit__decimal@@Base+0x12464>
   1dbcc:	ldr	x8, [x22]
   1dbd0:	add	x0, sp, #0x6a0
   1dbd4:	add	x2, sp, #0x240
   1dbd8:	sub	x3, x29, #0x30
   1dbdc:	mov	x1, x19
   1dbe0:	mov	x4, x23
   1dbe4:	str	x8, [x24, #1680]
   1dbe8:	bl	1c118 <PyInit__decimal@@Base+0x15604>
   1dbec:	add	x0, sp, #0x470
   1dbf0:	add	x2, sp, #0x240
   1dbf4:	sub	x3, x29, #0x30
   1dbf8:	mov	x1, x19
   1dbfc:	mov	x4, x23
   1dc00:	bl	1c64c <PyInit__decimal@@Base+0x15b38>
   1dc04:	ldrb	w8, [x19]
   1dc08:	tst	w8, #0xe
   1dc0c:	b.ne	1dc3c <PyInit__decimal@@Base+0x17128>  // b.any
   1dc10:	ldr	x8, [x19, #40]
   1dc14:	ldr	x9, [x19, #24]
   1dc18:	add	x8, x8, x9, lsl #3
   1dc1c:	ldur	x8, [x8, #-8]
   1dc20:	cbz	x8, 1dc3c <PyInit__decimal@@Base+0x17128>
   1dc24:	add	x0, sp, #0x6a0
   1dc28:	add	x1, sp, #0x470
   1dc2c:	mov	x2, x20
   1dc30:	bl	19c60 <PyInit__decimal@@Base+0x1314c>
   1dc34:	add	x25, x25, #0x13
   1dc38:	cbnz	w0, 1db78 <PyInit__decimal@@Base+0x17064>
   1dc3c:	ldr	w8, [x22, #40]
   1dc40:	sub	x1, x29, #0x30
   1dc44:	mov	x0, x19
   1dc48:	mov	x2, x20
   1dc4c:	stur	w8, [x29, #-8]
   1dc50:	bl	1e0a8 <PyInit__decimal@@Base+0x17594>
   1dc54:	sub	x1, x29, #0x30
   1dc58:	mov	x0, x19
   1dc5c:	mov	x2, x20
   1dc60:	bl	1e118 <PyInit__decimal@@Base+0x17604>
   1dc64:	sub	x1, x29, #0x30
   1dc68:	mov	x0, x19
   1dc6c:	mov	x2, x20
   1dc70:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1dc74:	ldrb	w8, [sp, #1696]
   1dc78:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1dc7c:	cmp	w8, #0x1f
   1dc80:	b.hi	1dc90 <PyInit__decimal@@Base+0x1717c>  // b.pmore
   1dc84:	ldr	x8, [x19, #1376]
   1dc88:	ldr	x0, [x24, #1160]
   1dc8c:	blr	x8
   1dc90:	ldrb	w8, [sp, #1696]
   1dc94:	tbnz	w8, #4, 1dca4 <PyInit__decimal@@Base+0x17190>
   1dc98:	ldr	x8, [x19, #1376]
   1dc9c:	add	x0, sp, #0x6a0
   1dca0:	blr	x8
   1dca4:	ldrb	w8, [sp, #1136]
   1dca8:	cmp	w8, #0x1f
   1dcac:	b.hi	1dcbc <PyInit__decimal@@Base+0x171a8>  // b.pmore
   1dcb0:	ldr	x8, [x19, #1376]
   1dcb4:	ldr	x0, [x24, #600]
   1dcb8:	blr	x8
   1dcbc:	ldrb	w8, [sp, #1136]
   1dcc0:	tbnz	w8, #4, 1dcd0 <PyInit__decimal@@Base+0x171bc>
   1dcc4:	ldr	x8, [x19, #1376]
   1dcc8:	add	x0, sp, #0x470
   1dccc:	blr	x8
   1dcd0:	ldrb	w8, [sp, #576]
   1dcd4:	cmp	w8, #0x1f
   1dcd8:	b.hi	1dce8 <PyInit__decimal@@Base+0x171d4>  // b.pmore
   1dcdc:	ldr	x8, [x19, #1376]
   1dce0:	ldr	x0, [x24, #40]
   1dce4:	blr	x8
   1dce8:	ldrb	w8, [sp, #576]
   1dcec:	tbnz	w8, #4, 1dcfc <PyInit__decimal@@Base+0x171e8>
   1dcf0:	ldr	x8, [x19, #1376]
   1dcf4:	add	x0, sp, #0x240
   1dcf8:	blr	x8
   1dcfc:	ldrb	w8, [sp, #16]
   1dd00:	cmp	w8, #0x1f
   1dd04:	b.hi	1dd14 <PyInit__decimal@@Base+0x17200>  // b.pmore
   1dd08:	ldr	x8, [x19, #1376]
   1dd0c:	ldr	x0, [sp, #56]
   1dd10:	blr	x8
   1dd14:	ldrb	w8, [sp, #16]
   1dd18:	tbnz	w8, #4, 1ddac <PyInit__decimal@@Base+0x17298>
   1dd1c:	ldr	x8, [x19, #1376]
   1dd20:	add	x0, sp, #0x10
   1dd24:	blr	x8
   1dd28:	b	1ddac <PyInit__decimal@@Base+0x17298>
   1dd2c:	mov	w2, #0x1                   	// #1
   1dd30:	mov	x0, x19
   1dd34:	mov	w1, wzr
   1dd38:	b	1dd48 <PyInit__decimal@@Base+0x17234>
   1dd3c:	mov	x0, x19
   1dd40:	mov	w1, wzr
   1dd44:	mov	x2, xzr
   1dd48:	mov	x3, xzr
   1dd4c:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   1dd50:	b	1ddac <PyInit__decimal@@Base+0x17298>
   1dd54:	sub	x2, x29, #0x30
   1dd58:	mov	x0, x19
   1dd5c:	mov	x1, x21
   1dd60:	mov	x3, x20
   1dd64:	bl	1ddc8 <PyInit__decimal@@Base+0x172b4>
   1dd68:	sub	x1, x29, #0x30
   1dd6c:	mov	x0, x19
   1dd70:	mov	x2, x20
   1dd74:	bl	1e0a8 <PyInit__decimal@@Base+0x17594>
   1dd78:	sub	x1, x29, #0x30
   1dd7c:	mov	x0, x19
   1dd80:	mov	x2, x20
   1dd84:	bl	1e118 <PyInit__decimal@@Base+0x17604>
   1dd88:	sub	x1, x29, #0x30
   1dd8c:	mov	x0, x19
   1dd90:	mov	x2, x20
   1dd94:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1dd98:	b	1ddac <PyInit__decimal@@Base+0x17298>
   1dd9c:	mov	w1, #0x200                 	// #512
   1dda0:	mov	x0, x19
   1dda4:	mov	x2, x20
   1dda8:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1ddac:	add	sp, sp, #0x900
   1ddb0:	ldp	x20, x19, [sp, #64]
   1ddb4:	ldp	x22, x21, [sp, #48]
   1ddb8:	ldp	x24, x23, [sp, #32]
   1ddbc:	ldp	x28, x25, [sp, #16]
   1ddc0:	ldp	x29, x30, [sp], #80
   1ddc4:	ret
   1ddc8:	stp	x29, x30, [sp, #-80]!
   1ddcc:	str	x28, [sp, #16]
   1ddd0:	stp	x24, x23, [sp, #32]
   1ddd4:	stp	x22, x21, [sp, #48]
   1ddd8:	stp	x20, x19, [sp, #64]
   1dddc:	mov	x29, sp
   1dde0:	sub	sp, sp, #0x4c0
   1dde4:	add	x10, sp, #0x290
   1dde8:	mov	w8, #0x30                  	// #48
   1ddec:	mov	w9, #0x40                  	// #64
   1ddf0:	str	x10, [sp, #648]
   1ddf4:	add	x10, sp, #0x60
   1ddf8:	strb	w8, [sp, #608]
   1ddfc:	strb	w8, [sp, #48]
   1de00:	mov	w8, #0x1                   	// #1
   1de04:	str	x9, [sp, #640]
   1de08:	stp	xzr, x9, [sp, #72]
   1de0c:	mov	w9, #0x90                  	// #144
   1de10:	str	x10, [sp, #88]
   1de14:	add	x10, x29, #0x18
   1de18:	str	xzr, [sp, #616]
   1de1c:	str	xzr, [sp, #624]
   1de20:	stp	xzr, xzr, [sp, #56]
   1de24:	str	xzr, [sp, #632]
   1de28:	str	x8, [x29, #24]
   1de2c:	strb	w9, [sp]
   1de30:	stp	xzr, x8, [sp, #8]
   1de34:	stp	x8, x8, [sp, #24]
   1de38:	str	x10, [sp, #40]
   1de3c:	ldr	x8, [x1, #40]
   1de40:	ldr	x9, [x1, #24]
   1de44:	mov	x20, x0
   1de48:	add	x8, x8, x9, lsl #3
   1de4c:	ldur	x8, [x8, #-8]
   1de50:	cbz	x8, 1de94 <PyInit__decimal@@Base+0x17380>
   1de54:	ldp	x9, x8, [x1, #8]
   1de58:	mov	x19, x3
   1de5c:	mov	x22, x2
   1de60:	mov	x21, x1
   1de64:	add	x8, x9, x8
   1de68:	bic	x23, x8, x8, asr #63
   1de6c:	cmp	x23, #0x14
   1de70:	b.lt	1deac <PyInit__decimal@@Base+0x17398>  // b.tstop
   1de74:	ldrb	w8, [x21]
   1de78:	tbnz	w8, #0, 1df3c <PyInit__decimal@@Base+0x17428>
   1de7c:	mov	w2, #0x2                   	// #2
   1de80:	mov	x0, x20
   1de84:	mov	w1, wzr
   1de88:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1de8c:	mov	w8, #0x1840                	// #6208
   1de90:	b	1df60 <PyInit__decimal@@Base+0x1744c>
   1de94:	mov	w2, #0x1                   	// #1
   1de98:	mov	x0, x20
   1de9c:	mov	w1, wzr
   1dea0:	mov	x3, xzr
   1dea4:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   1dea8:	b	1df6c <PyInit__decimal@@Base+0x17458>
   1deac:	mov	x0, x20
   1deb0:	mov	x1, x21
   1deb4:	mov	x2, x22
   1deb8:	mov	x3, x19
   1debc:	bl	248d4 <PyInit__decimal@@Base+0x1ddc0>
   1dec0:	cbnz	w0, 1df6c <PyInit__decimal@@Base+0x17458>
   1dec4:	sub	x0, x29, #0x30
   1dec8:	bl	13964 <PyInit__decimal@@Base+0xce50>
   1decc:	ldr	x8, [x22]
   1ded0:	mov	w9, #0xa                   	// #10
   1ded4:	mov	w10, #0x6                   	// #6
   1ded8:	mov	x0, x20
   1dedc:	add	x8, x23, x8
   1dee0:	add	x8, x8, #0x2
   1dee4:	cmp	x8, #0xa
   1dee8:	csel	x8, x8, x9, gt
   1deec:	mov	x1, x21
   1def0:	mov	x2, x19
   1def4:	stur	x8, [x29, #-48]
   1def8:	stur	w10, [x29, #-12]
   1defc:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1df00:	cbz	w0, 1df6c <PyInit__decimal@@Base+0x17458>
   1df04:	ldr	x8, [x20, #8]
   1df08:	mov	x0, x20
   1df0c:	sub	x8, x8, x23
   1df10:	str	x8, [x20, #8]
   1df14:	ldur	x1, [x29, #-48]
   1df18:	bl	249b8 <PyInit__decimal@@Base+0x1dea4>
   1df1c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   1df20:	cmp	x0, x8
   1df24:	b.ne	1df88 <PyInit__decimal@@Base+0x17474>  // b.any
   1df28:	mov	w1, #0x100                 	// #256
   1df2c:	mov	x0, x20
   1df30:	mov	x2, x19
   1df34:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1df38:	b	1df6c <PyInit__decimal@@Base+0x17458>
   1df3c:	ldr	x8, [x22, #16]
   1df40:	ldr	x9, [x22]
   1df44:	mov	x0, x20
   1df48:	mov	w1, wzr
   1df4c:	mov	x2, xzr
   1df50:	sub	x8, x8, x9
   1df54:	add	x3, x8, #0x1
   1df58:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   1df5c:	mov	w8, #0x7041                	// #28737
   1df60:	ldr	w9, [x19]
   1df64:	orr	w8, w9, w8
   1df68:	str	w8, [x19]
   1df6c:	add	sp, sp, #0x4c0
   1df70:	ldp	x20, x19, [sp, #64]
   1df74:	ldp	x22, x21, [sp, #48]
   1df78:	ldp	x24, x23, [sp, #32]
   1df7c:	ldr	x28, [sp, #16]
   1df80:	ldp	x29, x30, [sp], #80
   1df84:	ret
   1df88:	mov	x21, x0
   1df8c:	add	x0, sp, #0x30
   1df90:	mov	w2, #0x1                   	// #1
   1df94:	mov	w1, wzr
   1df98:	mov	x3, xzr
   1df9c:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   1dfa0:	sub	x24, x21, #0x1
   1dfa4:	cmp	x24, #0x1
   1dfa8:	b.lt	1e00c <PyInit__decimal@@Base+0x174f8>  // b.tstop
   1dfac:	sub	x8, x29, #0x30
   1dfb0:	adrp	x22, 3f000 <PyInit__decimal@@Base+0x384ec>
   1dfb4:	add	x21, x8, #0x1c
   1dfb8:	add	x22, x22, #0xc88
   1dfbc:	ldr	x8, [sp, #40]
   1dfc0:	mov	x0, sp
   1dfc4:	str	x24, [x8]
   1dfc8:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   1dfcc:	add	x0, sp, #0x260
   1dfd0:	mov	x2, sp
   1dfd4:	sub	x3, x29, #0x30
   1dfd8:	mov	x1, x20
   1dfdc:	mov	x4, x21
   1dfe0:	bl	1cad0 <PyInit__decimal@@Base+0x15fbc>
   1dfe4:	add	x0, sp, #0x30
   1dfe8:	add	x1, sp, #0x30
   1dfec:	add	x2, sp, #0x260
   1dff0:	sub	x4, x29, #0x30
   1dff4:	mov	x3, x22
   1dff8:	mov	x5, x21
   1dffc:	bl	1e174 <PyInit__decimal@@Base+0x17660>
   1e000:	sub	x24, x24, #0x1
   1e004:	cmp	x24, #0x0
   1e008:	b.gt	1dfbc <PyInit__decimal@@Base+0x174a8>
   1e00c:	adrp	x8, 2e000 <PyInit__decimal@@Base+0x274ec>
   1e010:	add	x8, x8, #0x20
   1e014:	ldr	x2, [x8, x23, lsl #3]
   1e018:	add	x1, sp, #0x30
   1e01c:	sub	x4, x29, #0x30
   1e020:	mov	x0, x20
   1e024:	mov	w3, wzr
   1e028:	mov	x5, x19
   1e02c:	bl	24b34 <PyInit__decimal@@Base+0x1e020>
   1e030:	ldrb	w8, [sp, #608]
   1e034:	adrp	x20, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1e038:	cmp	w8, #0x1f
   1e03c:	b.hi	1e04c <PyInit__decimal@@Base+0x17538>  // b.pmore
   1e040:	ldr	x8, [x20, #1376]
   1e044:	ldr	x0, [sp, #648]
   1e048:	blr	x8
   1e04c:	ldrb	w8, [sp, #608]
   1e050:	tbnz	w8, #4, 1e060 <PyInit__decimal@@Base+0x1754c>
   1e054:	ldr	x8, [x20, #1376]
   1e058:	add	x0, sp, #0x260
   1e05c:	blr	x8
   1e060:	ldrb	w8, [sp, #48]
   1e064:	cmp	w8, #0x1f
   1e068:	b.hi	1e078 <PyInit__decimal@@Base+0x17564>  // b.pmore
   1e06c:	ldr	x8, [x20, #1376]
   1e070:	ldr	x0, [sp, #88]
   1e074:	blr	x8
   1e078:	ldrb	w8, [sp, #48]
   1e07c:	tbnz	w8, #4, 1e08c <PyInit__decimal@@Base+0x17578>
   1e080:	ldr	x8, [x20, #1376]
   1e084:	add	x0, sp, #0x30
   1e088:	blr	x8
   1e08c:	ldur	w8, [x29, #-20]
   1e090:	ldr	w9, [x19]
   1e094:	and	w8, w8, #0x3fe
   1e098:	orr	w8, w8, w9
   1e09c:	mov	w9, #0x1040                	// #4160
   1e0a0:	orr	w8, w8, w9
   1e0a4:	b	1df68 <PyInit__decimal@@Base+0x17454>
   1e0a8:	stp	x29, x30, [sp, #-32]!
   1e0ac:	stp	x20, x19, [sp, #16]
   1e0b0:	mov	x29, sp
   1e0b4:	ldrb	w8, [x0]
   1e0b8:	tst	w8, #0xe
   1e0bc:	b.eq	1e0cc <PyInit__decimal@@Base+0x175b8>  // b.none
   1e0c0:	ldp	x20, x19, [sp, #16]
   1e0c4:	ldp	x29, x30, [sp], #32
   1e0c8:	ret
   1e0cc:	ldr	x8, [x0, #40]
   1e0d0:	ldr	x9, [x0, #24]
   1e0d4:	mov	x19, x0
   1e0d8:	add	x8, x8, x9, lsl #3
   1e0dc:	ldur	x8, [x8, #-8]
   1e0e0:	cbz	x8, 1e0c0 <PyInit__decimal@@Base+0x175ac>
   1e0e4:	ldr	x8, [x19, #16]
   1e0e8:	ldr	x9, [x1]
   1e0ec:	subs	x20, x9, x8
   1e0f0:	b.le	1e0c0 <PyInit__decimal@@Base+0x175ac>
   1e0f4:	mov	x3, x2
   1e0f8:	mov	x0, x19
   1e0fc:	mov	x1, x19
   1e100:	mov	x2, x20
   1e104:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   1e108:	ldr	x8, [x19, #8]
   1e10c:	sub	x8, x8, x20
   1e110:	str	x8, [x19, #8]
   1e114:	b	1e0c0 <PyInit__decimal@@Base+0x175ac>
   1e118:	ldp	x8, x10, [x0, #8]
   1e11c:	ldr	x9, [x1, #16]
   1e120:	add	x10, x8, x10
   1e124:	sub	x10, x10, #0x1
   1e128:	cmp	x10, x9
   1e12c:	b.ge	1e170 <PyInit__decimal@@Base+0x1765c>  // b.tcont
   1e130:	ldrb	w10, [x0]
   1e134:	tst	w10, #0xe
   1e138:	b.ne	1e150 <PyInit__decimal@@Base+0x1763c>  // b.any
   1e13c:	ldr	x10, [x0, #40]
   1e140:	ldr	x11, [x0, #24]
   1e144:	add	x10, x10, x11, lsl #3
   1e148:	ldur	x10, [x10, #-8]
   1e14c:	cbz	x10, 1e170 <PyInit__decimal@@Base+0x1765c>
   1e150:	ldr	x10, [x1]
   1e154:	sub	x9, x9, x10
   1e158:	add	x9, x9, #0x1
   1e15c:	cmp	x8, x9
   1e160:	b.ge	1e170 <PyInit__decimal@@Base+0x1765c>  // b.tcont
   1e164:	ldr	w8, [x2]
   1e168:	orr	w8, w8, #0x4000
   1e16c:	str	w8, [x2]
   1e170:	ret
   1e174:	stp	x29, x30, [sp, #-80]!
   1e178:	str	x25, [sp, #16]
   1e17c:	stp	x24, x23, [sp, #32]
   1e180:	stp	x22, x21, [sp, #48]
   1e184:	stp	x20, x19, [sp, #64]
   1e188:	mov	x29, sp
   1e18c:	mov	x19, x5
   1e190:	mov	x21, x4
   1e194:	mov	x23, x3
   1e198:	mov	x24, x2
   1e19c:	mov	x25, x1
   1e1a0:	mov	x22, x0
   1e1a4:	cmp	x0, x3
   1e1a8:	str	wzr, [x29, #28]
   1e1ac:	b.eq	1e1b8 <PyInit__decimal@@Base+0x176a4>  // b.none
   1e1b0:	mov	x20, xzr
   1e1b4:	b	1e1cc <PyInit__decimal@@Base+0x176b8>
   1e1b8:	mov	x0, x23
   1e1bc:	bl	19b44 <PyInit__decimal@@Base+0x13030>
   1e1c0:	mov	x23, x0
   1e1c4:	mov	x20, x0
   1e1c8:	cbz	x0, 1e260 <PyInit__decimal@@Base+0x1774c>
   1e1cc:	add	x4, x29, #0x1c
   1e1d0:	mov	x0, x22
   1e1d4:	mov	x1, x25
   1e1d8:	mov	x2, x24
   1e1dc:	mov	x3, x21
   1e1e0:	bl	1e274 <PyInit__decimal@@Base+0x17760>
   1e1e4:	ldrb	w8, [x29, #29]
   1e1e8:	tbnz	w8, #0, 1e204 <PyInit__decimal@@Base+0x176f0>
   1e1ec:	add	x4, x29, #0x1c
   1e1f0:	mov	x0, x22
   1e1f4:	mov	x1, x22
   1e1f8:	mov	x2, x23
   1e1fc:	mov	x3, x21
   1e200:	bl	1c118 <PyInit__decimal@@Base+0x15604>
   1e204:	cbz	x20, 1e238 <PyInit__decimal@@Base+0x17724>
   1e208:	ldrb	w8, [x20]
   1e20c:	adrp	x21, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1e210:	cmp	w8, #0x1f
   1e214:	b.hi	1e224 <PyInit__decimal@@Base+0x17710>  // b.pmore
   1e218:	ldr	x8, [x21, #1376]
   1e21c:	ldr	x0, [x20, #40]
   1e220:	blr	x8
   1e224:	ldrb	w8, [x20]
   1e228:	tbnz	w8, #4, 1e238 <PyInit__decimal@@Base+0x17724>
   1e22c:	ldr	x8, [x21, #1376]
   1e230:	mov	x0, x20
   1e234:	blr	x8
   1e238:	ldr	w8, [x29, #28]
   1e23c:	ldr	w9, [x19]
   1e240:	orr	w8, w9, w8
   1e244:	str	w8, [x19]
   1e248:	ldp	x20, x19, [sp, #64]
   1e24c:	ldp	x22, x21, [sp, #48]
   1e250:	ldp	x24, x23, [sp, #32]
   1e254:	ldr	x25, [sp, #16]
   1e258:	ldp	x29, x30, [sp], #80
   1e25c:	ret
   1e260:	mov	w1, #0x200                 	// #512
   1e264:	mov	x0, x22
   1e268:	mov	x2, x19
   1e26c:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1e270:	b	1e248 <PyInit__decimal@@Base+0x17734>
   1e274:	stp	x29, x30, [sp, #-96]!
   1e278:	str	x28, [sp, #16]
   1e27c:	stp	x26, x25, [sp, #32]
   1e280:	stp	x24, x23, [sp, #48]
   1e284:	stp	x22, x21, [sp, #64]
   1e288:	stp	x20, x19, [sp, #80]
   1e28c:	mov	x29, sp
   1e290:	sub	sp, sp, #0x210
   1e294:	str	x1, [x29, #24]
   1e298:	stur	x2, [x29, #-8]
   1e29c:	ldrb	w8, [x1]
   1e2a0:	mov	x19, x4
   1e2a4:	mov	x21, x2
   1e2a8:	mov	x22, x1
   1e2ac:	tst	w8, #0xe
   1e2b0:	mov	x20, x0
   1e2b4:	b.ne	1e2c4 <PyInit__decimal@@Base+0x177b0>  // b.any
   1e2b8:	ldrb	w8, [x21]
   1e2bc:	tst	w8, #0xe
   1e2c0:	b.eq	1e2f4 <PyInit__decimal@@Base+0x177e0>  // b.none
   1e2c4:	mov	x0, x20
   1e2c8:	mov	x1, x22
   1e2cc:	mov	x2, x21
   1e2d0:	mov	x4, x19
   1e2d4:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   1e2d8:	cbnz	w0, 1e58c <PyInit__decimal@@Base+0x17a78>
   1e2dc:	mov	x0, x20
   1e2e0:	mov	x1, x22
   1e2e4:	mov	x2, x21
   1e2e8:	mov	x3, x19
   1e2ec:	bl	24e0c <PyInit__decimal@@Base+0x1e2f8>
   1e2f0:	b	1e58c <PyInit__decimal@@Base+0x17a78>
   1e2f4:	ldr	x8, [x21, #24]
   1e2f8:	ldr	x9, [x22, #24]
   1e2fc:	cmp	x8, x9
   1e300:	b.le	1e310 <PyInit__decimal@@Base+0x177fc>
   1e304:	add	x0, x29, #0x18
   1e308:	sub	x1, x29, #0x8
   1e30c:	bl	23e84 <PyInit__decimal@@Base+0x1d370>
   1e310:	ldr	x25, [x29, #24]
   1e314:	ldur	x26, [x29, #-8]
   1e318:	adrp	x24, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1e31c:	ldr	x2, [x25, #24]
   1e320:	ldr	x3, [x26, #24]
   1e324:	cmp	x2, #0x1
   1e328:	add	x23, x3, x2
   1e32c:	str	x23, [sp]
   1e330:	b.ne	1e350 <PyInit__decimal@@Base+0x1783c>  // b.any
   1e334:	ldr	x8, [x25, #40]
   1e338:	ldr	x9, [x26, #40]
   1e33c:	ldr	x0, [x20, #40]
   1e340:	ldr	x1, [x8]
   1e344:	ldr	x2, [x9]
   1e348:	bl	24e8c <PyInit__decimal@@Base+0x1e378>
   1e34c:	b	1e508 <PyInit__decimal@@Base+0x179f4>
   1e350:	cmp	x23, #0x40
   1e354:	b.hi	1e374 <PyInit__decimal@@Base+0x17860>  // b.pmore
   1e358:	cmp	x2, #0x2
   1e35c:	b.ne	1e3b8 <PyInit__decimal@@Base+0x178a4>  // b.any
   1e360:	ldr	x1, [x25, #40]
   1e364:	ldr	x2, [x26, #40]
   1e368:	add	x0, sp, #0x8
   1e36c:	bl	24ed8 <PyInit__decimal@@Base+0x1e3c4>
   1e370:	b	1e424 <PyInit__decimal@@Base+0x17910>
   1e374:	cmp	x3, #0x100
   1e378:	b.gt	1e3f4 <PyInit__decimal@@Base+0x178e0>
   1e37c:	mov	w1, #0x8                   	// #8
   1e380:	mov	x0, x23
   1e384:	bl	17b18 <PyInit__decimal@@Base+0x11004>
   1e388:	mov	x23, x0
   1e38c:	cbz	x0, 1e4d4 <PyInit__decimal@@Base+0x179c0>
   1e390:	ldr	x3, [x26, #24]
   1e394:	cmp	x3, #0x1
   1e398:	b.ne	1e4b4 <PyInit__decimal@@Base+0x179a0>  // b.any
   1e39c:	ldr	x8, [x26, #40]
   1e3a0:	ldr	x1, [x25, #40]
   1e3a4:	ldr	x2, [x25, #24]
   1e3a8:	mov	x0, x23
   1e3ac:	ldr	x3, [x8]
   1e3b0:	bl	1268c <PyInit__decimal@@Base+0xbb78>
   1e3b4:	b	1e4d4 <PyInit__decimal@@Base+0x179c0>
   1e3b8:	cbz	x23, 1e3cc <PyInit__decimal@@Base+0x178b8>
   1e3bc:	lsl	x2, x23, #3
   1e3c0:	add	x0, sp, #0x8
   1e3c4:	mov	w1, wzr
   1e3c8:	bl	6610 <memset@plt>
   1e3cc:	ldr	x3, [x26, #24]
   1e3d0:	cmp	x3, #0x1
   1e3d4:	b.ne	1e410 <PyInit__decimal@@Base+0x178fc>  // b.any
   1e3d8:	ldr	x8, [x26, #40]
   1e3dc:	ldr	x1, [x25, #40]
   1e3e0:	ldr	x2, [x25, #24]
   1e3e4:	add	x0, sp, #0x8
   1e3e8:	ldr	x3, [x8]
   1e3ec:	bl	1268c <PyInit__decimal@@Base+0xbb78>
   1e3f0:	b	1e424 <PyInit__decimal@@Base+0x17910>
   1e3f4:	cmp	x23, #0x400
   1e3f8:	b.hi	1e45c <PyInit__decimal@@Base+0x17948>  // b.pmore
   1e3fc:	ldr	x0, [x25, #40]
   1e400:	ldr	x1, [x26, #40]
   1e404:	mov	x4, sp
   1e408:	bl	25038 <PyInit__decimal@@Base+0x1e524>
   1e40c:	b	1e4d0 <PyInit__decimal@@Base+0x179bc>
   1e410:	ldr	x1, [x26, #40]
   1e414:	ldr	x2, [x25, #40]
   1e418:	ldr	x4, [x25, #24]
   1e41c:	add	x0, sp, #0x8
   1e420:	bl	12850 <PyInit__decimal@@Base+0xbd3c>
   1e424:	ldr	x9, [x24, #1344]
   1e428:	ldr	x8, [x20, #32]
   1e42c:	cmp	x9, x23
   1e430:	csel	x1, x23, x9, lt  // lt = tstop
   1e434:	cmp	x1, x8
   1e438:	b.ne	1e444 <PyInit__decimal@@Base+0x17930>  // b.any
   1e43c:	mov	w0, #0x1                   	// #1
   1e440:	b	1e490 <PyInit__decimal@@Base+0x1797c>
   1e444:	ldrb	w9, [x20]
   1e448:	tbnz	w9, #5, 1e47c <PyInit__decimal@@Base+0x17968>
   1e44c:	mov	x0, x20
   1e450:	mov	x2, x19
   1e454:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1e458:	b	1e490 <PyInit__decimal@@Base+0x1797c>
   1e45c:	ldr	x0, [x25, #40]
   1e460:	ldr	x1, [x26, #40]
   1e464:	mov	x8, #0x300000000           	// #12884901888
   1e468:	mov	x4, sp
   1e46c:	cmp	x23, x8
   1e470:	b.hi	1e4cc <PyInit__decimal@@Base+0x179b8>  // b.pmore
   1e474:	bl	25104 <PyInit__decimal@@Base+0x1e5f0>
   1e478:	b	1e4d0 <PyInit__decimal@@Base+0x179bc>
   1e47c:	cmp	x1, x8
   1e480:	b.le	1e43c <PyInit__decimal@@Base+0x17928>
   1e484:	mov	x0, x20
   1e488:	mov	x2, x19
   1e48c:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1e490:	cbz	w0, 1e58c <PyInit__decimal@@Base+0x17a78>
   1e494:	cbz	x23, 1e508 <PyInit__decimal@@Base+0x179f4>
   1e498:	ldr	x8, [x20, #40]
   1e49c:	add	x9, sp, #0x8
   1e4a0:	ldr	x10, [x9], #8
   1e4a4:	subs	x23, x23, #0x1
   1e4a8:	str	x10, [x8], #8
   1e4ac:	b.ne	1e4a0 <PyInit__decimal@@Base+0x1798c>  // b.any
   1e4b0:	b	1e508 <PyInit__decimal@@Base+0x179f4>
   1e4b4:	ldr	x1, [x26, #40]
   1e4b8:	ldr	x2, [x25, #40]
   1e4bc:	ldr	x4, [x25, #24]
   1e4c0:	mov	x0, x23
   1e4c4:	bl	12850 <PyInit__decimal@@Base+0xbd3c>
   1e4c8:	b	1e4d4 <PyInit__decimal@@Base+0x179c0>
   1e4cc:	bl	25394 <PyInit__decimal@@Base+0x1e880>
   1e4d0:	mov	x23, x0
   1e4d4:	cbz	x23, 1e5ac <PyInit__decimal@@Base+0x17a98>
   1e4d8:	ldrb	w8, [x20]
   1e4dc:	cmp	w8, #0x1f
   1e4e0:	b.hi	1e4f4 <PyInit__decimal@@Base+0x179e0>  // b.pmore
   1e4e4:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1e4e8:	ldr	x8, [x8, #1376]
   1e4ec:	ldr	x0, [x20, #40]
   1e4f0:	blr	x8
   1e4f4:	ldrb	w8, [x20]
   1e4f8:	ldr	x9, [sp]
   1e4fc:	and	w8, w8, #0x1f
   1e500:	stp	x9, x23, [x20, #32]
   1e504:	strb	w8, [x20]
   1e508:	ldrb	w8, [x22]
   1e50c:	ldrb	w9, [x21]
   1e510:	ldrb	w21, [x20]
   1e514:	ldr	x0, [x20, #40]
   1e518:	eor	w8, w9, w8
   1e51c:	and	w9, w21, #0xf0
   1e520:	bfxil	w9, w8, #0, #1
   1e524:	strb	w9, [x20]
   1e528:	ldr	x8, [x25, #8]
   1e52c:	ldr	x9, [x26, #8]
   1e530:	add	x8, x9, x8
   1e534:	str	x8, [x20, #8]
   1e538:	ldr	x1, [sp]
   1e53c:	bl	1abf0 <PyInit__decimal@@Base+0x140dc>
   1e540:	str	x0, [x20, #24]
   1e544:	ldr	x9, [x24, #1344]
   1e548:	ldr	x8, [x20, #32]
   1e54c:	cmp	x9, x0
   1e550:	csel	x1, x0, x9, lt  // lt = tstop
   1e554:	cmp	x1, x8
   1e558:	b.eq	1e584 <PyInit__decimal@@Base+0x17a70>  // b.none
   1e55c:	tbnz	w21, #5, 1e570 <PyInit__decimal@@Base+0x17a5c>
   1e560:	mov	x0, x20
   1e564:	mov	x2, x19
   1e568:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1e56c:	b	1e584 <PyInit__decimal@@Base+0x17a70>
   1e570:	cmp	x1, x8
   1e574:	b.le	1e584 <PyInit__decimal@@Base+0x17a70>
   1e578:	mov	x0, x20
   1e57c:	mov	x2, x19
   1e580:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1e584:	mov	x0, x20
   1e588:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   1e58c:	add	sp, sp, #0x210
   1e590:	ldp	x20, x19, [sp, #80]
   1e594:	ldp	x22, x21, [sp, #64]
   1e598:	ldp	x24, x23, [sp, #48]
   1e59c:	ldp	x26, x25, [sp, #32]
   1e5a0:	ldr	x28, [sp, #16]
   1e5a4:	ldp	x29, x30, [sp], #96
   1e5a8:	ret
   1e5ac:	mov	w1, #0x200                 	// #512
   1e5b0:	mov	x0, x20
   1e5b4:	mov	x2, x19
   1e5b8:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1e5bc:	b	1e58c <PyInit__decimal@@Base+0x17a78>
   1e5c0:	stp	x29, x30, [sp, #-80]!
   1e5c4:	str	x28, [sp, #16]
   1e5c8:	stp	x24, x23, [sp, #32]
   1e5cc:	stp	x22, x21, [sp, #48]
   1e5d0:	stp	x20, x19, [sp, #64]
   1e5d4:	mov	x29, sp
   1e5d8:	sub	sp, sp, #0x4c0
   1e5dc:	mov	w8, #0x30                  	// #48
   1e5e0:	strb	w8, [sp, #560]
   1e5e4:	mov	w8, #0x40                  	// #64
   1e5e8:	str	x8, [sp, #592]
   1e5ec:	add	x8, sp, #0x260
   1e5f0:	str	x8, [sp, #600]
   1e5f4:	mov	w8, #0xa                   	// #10
   1e5f8:	str	x8, [x29, #24]
   1e5fc:	mov	w8, #0x90                  	// #144
   1e600:	strb	w8, [sp, #512]
   1e604:	mov	w8, #0x2                   	// #2
   1e608:	str	x8, [sp, #528]
   1e60c:	mov	w8, #0x1                   	// #1
   1e610:	str	x8, [sp, #536]
   1e614:	str	x8, [sp, #544]
   1e618:	add	x8, x29, #0x18
   1e61c:	str	x8, [sp, #552]
   1e620:	mov	w8, #0x4c0                 	// #1216
   1e624:	mov	x19, x2
   1e628:	mov	x21, x1
   1e62c:	sub	x8, x8, x1
   1e630:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   1e634:	bic	x2, x8, x8, asr #63
   1e638:	add	x1, x1, #0xc58
   1e63c:	mov	x3, x19
   1e640:	mov	x20, x0
   1e644:	str	xzr, [sp, #568]
   1e648:	str	xzr, [sp, #576]
   1e64c:	str	xzr, [sp, #584]
   1e650:	str	xzr, [sp, #520]
   1e654:	bl	1a604 <PyInit__decimal@@Base+0x13af0>
   1e658:	cmn	x0, #0x1
   1e65c:	b.eq	1e6b0 <PyInit__decimal@@Base+0x17b9c>  // b.none
   1e660:	ldr	x8, [x20, #16]
   1e664:	mov	w9, #0x1                   	// #1
   1e668:	mov	x22, x0
   1e66c:	sub	x0, x29, #0x60
   1e670:	sub	x8, x9, x8
   1e674:	str	x8, [x20, #8]
   1e678:	bl	13964 <PyInit__decimal@@Base+0xce50>
   1e67c:	cmp	x21, #0x4bf
   1e680:	b.gt	1e6c4 <PyInit__decimal@@Base+0x17bb0>
   1e684:	sub	x2, x29, #0x60
   1e688:	mov	x0, x20
   1e68c:	mov	x1, x22
   1e690:	mov	x3, x19
   1e694:	stur	x21, [x29, #-96]
   1e698:	bl	1e7f8 <PyInit__decimal@@Base+0x17ce4>
   1e69c:	ldr	w8, [x19]
   1e6a0:	mov	w9, #0x1040                	// #4160
   1e6a4:	orr	w8, w8, w9
   1e6a8:	str	w8, [x19]
   1e6ac:	b	1e7dc <PyInit__decimal@@Base+0x17cc8>
   1e6b0:	mov	w1, #0x200                 	// #512
   1e6b4:	mov	x0, x20
   1e6b8:	mov	x2, x19
   1e6bc:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1e6c0:	b	1e7dc <PyInit__decimal@@Base+0x17cc8>
   1e6c4:	sub	x0, x29, #0x30
   1e6c8:	bl	13964 <PyInit__decimal@@Base+0xce50>
   1e6cc:	mov	w8, #0x8                   	// #8
   1e6d0:	stur	w8, [x29, #-12]
   1e6d4:	ldr	x8, [x20, #8]
   1e6d8:	add	x1, x21, #0x2
   1e6dc:	mov	x0, sp
   1e6e0:	mov	x23, sp
   1e6e4:	neg	x2, x8
   1e6e8:	bl	1e8ac <PyInit__decimal@@Base+0x17d98>
   1e6ec:	tbnz	w0, #31, 1e798 <PyInit__decimal@@Base+0x17c84>
   1e6f0:	adrp	x22, 3f000 <PyInit__decimal@@Base+0x384ec>
   1e6f4:	sxtw	x24, w0
   1e6f8:	add	x22, x22, #0xc88
   1e6fc:	ldr	x8, [x23, x24, lsl #3]
   1e700:	add	x0, sp, #0x230
   1e704:	sub	x2, x29, #0x30
   1e708:	mov	x1, x20
   1e70c:	lsl	x8, x8, #1
   1e710:	add	x8, x8, #0x3
   1e714:	stur	x8, [x29, #-48]
   1e718:	ldrb	w8, [x20]
   1e71c:	mov	x3, x19
   1e720:	eor	w8, w8, #0x1
   1e724:	strb	w8, [x20]
   1e728:	bl	1ddc8 <PyInit__decimal@@Base+0x172b4>
   1e72c:	ldrb	w8, [x20]
   1e730:	add	x0, sp, #0x230
   1e734:	add	x1, sp, #0x200
   1e738:	add	x2, sp, #0x230
   1e73c:	eor	w8, w8, #0x1
   1e740:	sub	x3, x29, #0x30
   1e744:	mov	x4, x19
   1e748:	strb	w8, [x20]
   1e74c:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
   1e750:	add	x0, sp, #0x230
   1e754:	add	x1, sp, #0x230
   1e758:	sub	x3, x29, #0x60
   1e75c:	mov	x2, x22
   1e760:	mov	x4, x19
   1e764:	bl	1c64c <PyInit__decimal@@Base+0x15b38>
   1e768:	add	x2, sp, #0x230
   1e76c:	sub	x3, x29, #0x60
   1e770:	mov	x0, x20
   1e774:	mov	x1, x20
   1e778:	mov	x4, x19
   1e77c:	bl	1c118 <PyInit__decimal@@Base+0x15604>
   1e780:	ldrb	w8, [x20]
   1e784:	and	w8, w8, #0xe
   1e788:	cbnz	w8, 1e798 <PyInit__decimal@@Base+0x17c84>
   1e78c:	cmp	x24, #0x0
   1e790:	sub	x24, x24, #0x1
   1e794:	b.gt	1e6fc <PyInit__decimal@@Base+0x17be8>
   1e798:	ldrb	w8, [sp, #560]
   1e79c:	adrp	x22, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1e7a0:	cmp	w8, #0x1f
   1e7a4:	b.hi	1e7b4 <PyInit__decimal@@Base+0x17ca0>  // b.pmore
   1e7a8:	ldr	x8, [x22, #1376]
   1e7ac:	ldr	x0, [sp, #600]
   1e7b0:	blr	x8
   1e7b4:	ldrb	w8, [sp, #560]
   1e7b8:	tbnz	w8, #4, 1e7c8 <PyInit__decimal@@Base+0x17cb4>
   1e7bc:	ldr	x8, [x22, #1376]
   1e7c0:	add	x0, sp, #0x230
   1e7c4:	blr	x8
   1e7c8:	sub	x1, x29, #0x60
   1e7cc:	mov	x0, x20
   1e7d0:	mov	x2, x19
   1e7d4:	stur	x21, [x29, #-96]
   1e7d8:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1e7dc:	add	sp, sp, #0x4c0
   1e7e0:	ldp	x20, x19, [sp, #64]
   1e7e4:	ldp	x22, x21, [sp, #48]
   1e7e8:	ldp	x24, x23, [sp, #32]
   1e7ec:	ldr	x28, [sp, #16]
   1e7f0:	ldp	x29, x30, [sp], #80
   1e7f4:	ret
   1e7f8:	stp	x29, x30, [sp, #-32]!
   1e7fc:	stp	x20, x19, [sp, #16]
   1e800:	mov	x29, sp
   1e804:	mov	x20, x3
   1e808:	mov	x19, x0
   1e80c:	bl	237c4 <PyInit__decimal@@Base+0x1ccb0>
   1e810:	cbz	w0, 1e8a0 <PyInit__decimal@@Base+0x17d8c>
   1e814:	ldr	x0, [x19, #40]
   1e818:	ldr	x1, [x19, #24]
   1e81c:	bl	12518 <PyInit__decimal@@Base+0xba04>
   1e820:	cbz	x0, 1e898 <PyInit__decimal@@Base+0x17d84>
   1e824:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1e828:	ldr	x10, [x8, #1344]
   1e82c:	ldp	x9, x8, [x19, #24]
   1e830:	add	x11, x9, #0x1
   1e834:	cmp	x10, x11
   1e838:	csinc	x1, x10, x9, ge  // ge = tcont
   1e83c:	cmp	x1, x8
   1e840:	b.eq	1e874 <PyInit__decimal@@Base+0x17d60>  // b.none
   1e844:	ldrb	w9, [x19]
   1e848:	tbnz	w9, #5, 1e85c <PyInit__decimal@@Base+0x17d48>
   1e84c:	mov	x0, x19
   1e850:	mov	x2, x20
   1e854:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   1e858:	b	1e878 <PyInit__decimal@@Base+0x17d64>
   1e85c:	cmp	x1, x8
   1e860:	b.le	1e874 <PyInit__decimal@@Base+0x17d60>
   1e864:	mov	x0, x19
   1e868:	mov	x2, x20
   1e86c:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   1e870:	b	1e878 <PyInit__decimal@@Base+0x17d64>
   1e874:	mov	w0, #0x1                   	// #1
   1e878:	cbz	w0, 1e8a0 <PyInit__decimal@@Base+0x17d8c>
   1e87c:	ldr	x8, [x19, #40]
   1e880:	ldr	x9, [x19, #24]
   1e884:	mov	w10, #0x1                   	// #1
   1e888:	str	x10, [x8, x9, lsl #3]
   1e88c:	ldr	x8, [x19, #24]
   1e890:	add	x8, x8, #0x1
   1e894:	str	x8, [x19, #24]
   1e898:	mov	x0, x19
   1e89c:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   1e8a0:	ldp	x20, x19, [sp, #16]
   1e8a4:	ldp	x29, x30, [sp], #32
   1e8a8:	ret
   1e8ac:	cmp	x1, x2
   1e8b0:	b.le	1e8e4 <PyInit__decimal@@Base+0x17dd0>
   1e8b4:	mov	x8, x0
   1e8b8:	mov	w0, #0xffffffff            	// #-1
   1e8bc:	add	x9, x1, #0x2
   1e8c0:	add	x10, x1, #0x3
   1e8c4:	cmp	x9, #0x0
   1e8c8:	csel	x9, x10, x9, lt  // lt = tstop
   1e8cc:	asr	x1, x9, #1
   1e8d0:	add	w0, w0, #0x1
   1e8d4:	cmp	x1, x2
   1e8d8:	str	x1, [x8, w0, sxtw #3]
   1e8dc:	b.gt	1e8bc <PyInit__decimal@@Base+0x17da8>
   1e8e0:	ret
   1e8e4:	mov	w0, #0xffffffff            	// #-1
   1e8e8:	ret
   1e8ec:	stp	x29, x30, [sp, #-48]!
   1e8f0:	str	x21, [sp, #16]
   1e8f4:	stp	x20, x19, [sp, #32]
   1e8f8:	mov	x29, sp
   1e8fc:	mov	x19, x4
   1e900:	mov	x20, x3
   1e904:	mov	x21, x0
   1e908:	bl	1e274 <PyInit__decimal@@Base+0x17760>
   1e90c:	mov	x0, x21
   1e910:	mov	x1, x20
   1e914:	mov	x2, x19
   1e918:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1e91c:	ldp	x20, x19, [sp, #32]
   1e920:	ldr	x21, [sp, #16]
   1e924:	ldp	x29, x30, [sp], #48
   1e928:	ret
   1e92c:	stp	x29, x30, [sp, #-80]!
   1e930:	str	x28, [sp, #16]
   1e934:	stp	x24, x23, [sp, #32]
   1e938:	stp	x22, x21, [sp, #48]
   1e93c:	stp	x20, x19, [sp, #64]
   1e940:	mov	x29, sp
   1e944:	sub	sp, sp, #0x8f0
   1e948:	ldrb	w8, [x1]
   1e94c:	mov	x20, x3
   1e950:	mov	x22, x2
   1e954:	mov	x21, x1
   1e958:	tst	w8, #0xe
   1e95c:	mov	x19, x0
   1e960:	b.eq	1e998 <PyInit__decimal@@Base+0x17e84>  // b.none
   1e964:	mov	x0, x19
   1e968:	mov	x1, x21
   1e96c:	mov	x2, x22
   1e970:	mov	x3, x20
   1e974:	bl	19544 <PyInit__decimal@@Base+0x12a30>
   1e978:	cbnz	w0, 1ecd0 <PyInit__decimal@@Base+0x181bc>
   1e97c:	ldrb	w8, [x21]
   1e980:	tbnz	w8, #0, 1ea10 <PyInit__decimal@@Base+0x17efc>
   1e984:	mov	w2, #0x2                   	// #2
   1e988:	mov	x0, x19
   1e98c:	mov	w1, wzr
   1e990:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1e994:	b	1ecd0 <PyInit__decimal@@Base+0x181bc>
   1e998:	ldr	x9, [x21, #40]
   1e99c:	ldr	x10, [x21, #24]
   1e9a0:	add	x9, x9, x10, lsl #3
   1e9a4:	ldur	x9, [x9, #-8]
   1e9a8:	cbz	x9, 1ea24 <PyInit__decimal@@Base+0x17f10>
   1e9ac:	tbnz	w8, #0, 1ea10 <PyInit__decimal@@Base+0x17efc>
   1e9b0:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   1e9b4:	add	x1, x1, #0xc88
   1e9b8:	mov	x0, x21
   1e9bc:	bl	19cb8 <PyInit__decimal@@Base+0x131a4>
   1e9c0:	cbz	w0, 1ea38 <PyInit__decimal@@Base+0x17f24>
   1e9c4:	ldp	x8, x9, [x21, #8]
   1e9c8:	add	x8, x8, x9
   1e9cc:	sub	x23, x8, #0x1
   1e9d0:	eor	x8, x23, x23, asr #63
   1e9d4:	lsl	x0, x8, #1
   1e9d8:	bl	1820c <PyInit__decimal@@Base+0x116f8>
   1e9dc:	ldr	x8, [x22, #8]
   1e9e0:	sub	w9, w0, #0x1
   1e9e4:	cmp	x8, w9, sxtw
   1e9e8:	b.ge	1ea50 <PyInit__decimal@@Base+0x17f3c>  // b.tcont
   1e9ec:	ldr	w8, [x20]
   1e9f0:	mov	w9, #0x1840                	// #6208
   1e9f4:	lsr	x1, x23, #63
   1e9f8:	mov	w2, #0x2                   	// #2
   1e9fc:	orr	w8, w8, w9
   1ea00:	mov	x0, x19
   1ea04:	str	w8, [x20]
   1ea08:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1ea0c:	b	1ecd0 <PyInit__decimal@@Base+0x181bc>
   1ea10:	mov	w1, #0x100                 	// #256
   1ea14:	mov	x0, x19
   1ea18:	mov	x2, x20
   1ea1c:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1ea20:	b	1ecd0 <PyInit__decimal@@Base+0x181bc>
   1ea24:	mov	w1, #0x1                   	// #1
   1ea28:	mov	w2, #0x2                   	// #2
   1ea2c:	mov	x0, x19
   1ea30:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1ea34:	b	1ecd0 <PyInit__decimal@@Base+0x181bc>
   1ea38:	mov	x0, x19
   1ea3c:	mov	w1, wzr
   1ea40:	mov	x2, xzr
   1ea44:	mov	x3, xzr
   1ea48:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   1ea4c:	b	1ecd0 <PyInit__decimal@@Base+0x181bc>
   1ea50:	ldp	q1, q0, [x22, #16]
   1ea54:	ldr	q2, [x22]
   1ea58:	mov	w8, #0x6                   	// #6
   1ea5c:	stp	q1, q0, [x29, #-32]
   1ea60:	stur	q2, [x29, #-48]
   1ea64:	stur	w8, [x29, #-12]
   1ea68:	ldr	w8, [x22, #44]
   1ea6c:	cbz	w8, 1ec9c <PyInit__decimal@@Base+0x18188>
   1ea70:	add	x10, sp, #0x6c0
   1ea74:	str	x10, [sp, #1720]
   1ea78:	add	x10, sp, #0x490
   1ea7c:	str	x10, [sp, #1160]
   1ea80:	add	x10, sp, #0x260
   1ea84:	mov	w8, #0x30                  	// #48
   1ea88:	mov	w9, #0x40                  	// #64
   1ea8c:	str	x10, [sp, #600]
   1ea90:	add	x10, sp, #0x30
   1ea94:	cmp	x19, x21
   1ea98:	str	xzr, [sp, #1688]
   1ea9c:	str	xzr, [sp, #1696]
   1eaa0:	str	xzr, [sp, #1128]
   1eaa4:	str	xzr, [sp, #1136]
   1eaa8:	str	xzr, [sp, #568]
   1eaac:	str	xzr, [sp, #576]
   1eab0:	stp	xzr, xzr, [sp, #8]
   1eab4:	strb	w8, [sp, #1680]
   1eab8:	str	xzr, [sp, #1704]
   1eabc:	str	x9, [sp, #1712]
   1eac0:	strb	w8, [sp, #1120]
   1eac4:	str	xzr, [sp, #1144]
   1eac8:	str	x9, [sp, #1152]
   1eacc:	strb	w8, [sp, #560]
   1ead0:	str	xzr, [sp, #584]
   1ead4:	str	x9, [sp, #592]
   1ead8:	strb	w8, [sp]
   1eadc:	stp	xzr, x9, [sp, #24]
   1eae0:	str	x10, [sp, #40]
   1eae4:	b.ne	1eb00 <PyInit__decimal@@Base+0x17fec>  // b.any
   1eae8:	mov	x0, sp
   1eaec:	mov	x1, x21
   1eaf0:	mov	x2, x20
   1eaf4:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1eaf8:	mov	x21, sp
   1eafc:	cbz	w0, 1ecec <PyInit__decimal@@Base+0x181d8>
   1eb00:	stur	wzr, [x29, #-8]
   1eb04:	ldr	x8, [x22]
   1eb08:	sub	x9, x29, #0x30
   1eb0c:	add	x23, x9, #0x1c
   1eb10:	add	x24, x8, #0x3
   1eb14:	sub	x2, x29, #0x30
   1eb18:	mov	x0, x19
   1eb1c:	mov	x1, x21
   1eb20:	mov	x3, x20
   1eb24:	stur	x24, [x29, #-48]
   1eb28:	bl	1ecf4 <PyInit__decimal@@Base+0x181e0>
   1eb2c:	ldp	x8, x9, [x19, #8]
   1eb30:	ldur	x10, [x29, #-48]
   1eb34:	add	x0, sp, #0x230
   1eb38:	mov	w2, #0x1                   	// #1
   1eb3c:	add	x8, x9, x8
   1eb40:	sub	x3, x8, x10
   1eb44:	mov	w1, wzr
   1eb48:	bl	18f78 <PyInit__decimal@@Base+0x12464>
   1eb4c:	ldr	x8, [x22]
   1eb50:	add	x0, sp, #0x690
   1eb54:	add	x2, sp, #0x230
   1eb58:	sub	x3, x29, #0x30
   1eb5c:	mov	x1, x19
   1eb60:	mov	x4, x23
   1eb64:	stur	x8, [x29, #-48]
   1eb68:	bl	1c118 <PyInit__decimal@@Base+0x15604>
   1eb6c:	add	x0, sp, #0x460
   1eb70:	add	x2, sp, #0x230
   1eb74:	sub	x3, x29, #0x30
   1eb78:	mov	x1, x19
   1eb7c:	mov	x4, x23
   1eb80:	bl	1c64c <PyInit__decimal@@Base+0x15b38>
   1eb84:	ldrb	w8, [x19]
   1eb88:	tst	w8, #0xe
   1eb8c:	b.ne	1ebbc <PyInit__decimal@@Base+0x180a8>  // b.any
   1eb90:	ldr	x8, [x19, #40]
   1eb94:	ldr	x9, [x19, #24]
   1eb98:	add	x8, x8, x9, lsl #3
   1eb9c:	ldur	x8, [x8, #-8]
   1eba0:	cbz	x8, 1ebbc <PyInit__decimal@@Base+0x180a8>
   1eba4:	add	x0, sp, #0x690
   1eba8:	add	x1, sp, #0x460
   1ebac:	mov	x2, x20
   1ebb0:	bl	19c60 <PyInit__decimal@@Base+0x1314c>
   1ebb4:	add	x24, x24, #0x13
   1ebb8:	cbnz	w0, 1eb14 <PyInit__decimal@@Base+0x18000>
   1ebbc:	ldr	w8, [x22, #40]
   1ebc0:	sub	x1, x29, #0x30
   1ebc4:	mov	x0, x19
   1ebc8:	mov	x2, x20
   1ebcc:	stur	w8, [x29, #-8]
   1ebd0:	bl	1e118 <PyInit__decimal@@Base+0x17604>
   1ebd4:	sub	x1, x29, #0x30
   1ebd8:	mov	x0, x19
   1ebdc:	mov	x2, x20
   1ebe0:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1ebe4:	ldrb	w8, [sp, #1680]
   1ebe8:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1ebec:	cmp	w8, #0x1f
   1ebf0:	b.hi	1ec00 <PyInit__decimal@@Base+0x180ec>  // b.pmore
   1ebf4:	ldr	x8, [x19, #1376]
   1ebf8:	ldr	x0, [sp, #1720]
   1ebfc:	blr	x8
   1ec00:	ldrb	w8, [sp, #1680]
   1ec04:	tbnz	w8, #4, 1ec14 <PyInit__decimal@@Base+0x18100>
   1ec08:	ldr	x8, [x19, #1376]
   1ec0c:	add	x0, sp, #0x690
   1ec10:	blr	x8
   1ec14:	ldrb	w8, [sp, #1120]
   1ec18:	cmp	w8, #0x1f
   1ec1c:	b.hi	1ec2c <PyInit__decimal@@Base+0x18118>  // b.pmore
   1ec20:	ldr	x8, [x19, #1376]
   1ec24:	ldr	x0, [sp, #1160]
   1ec28:	blr	x8
   1ec2c:	ldrb	w8, [sp, #1120]
   1ec30:	tbnz	w8, #4, 1ec40 <PyInit__decimal@@Base+0x1812c>
   1ec34:	ldr	x8, [x19, #1376]
   1ec38:	add	x0, sp, #0x460
   1ec3c:	blr	x8
   1ec40:	ldrb	w8, [sp, #560]
   1ec44:	cmp	w8, #0x1f
   1ec48:	b.hi	1ec58 <PyInit__decimal@@Base+0x18144>  // b.pmore
   1ec4c:	ldr	x8, [x19, #1376]
   1ec50:	ldr	x0, [sp, #600]
   1ec54:	blr	x8
   1ec58:	ldrb	w8, [sp, #560]
   1ec5c:	tbnz	w8, #4, 1ec6c <PyInit__decimal@@Base+0x18158>
   1ec60:	ldr	x8, [x19, #1376]
   1ec64:	add	x0, sp, #0x230
   1ec68:	blr	x8
   1ec6c:	ldrb	w8, [sp]
   1ec70:	cmp	w8, #0x1f
   1ec74:	b.hi	1ec84 <PyInit__decimal@@Base+0x18170>  // b.pmore
   1ec78:	ldr	x8, [x19, #1376]
   1ec7c:	ldr	x0, [sp, #40]
   1ec80:	blr	x8
   1ec84:	ldrb	w8, [sp]
   1ec88:	tbnz	w8, #4, 1ecd0 <PyInit__decimal@@Base+0x181bc>
   1ec8c:	ldr	x8, [x19, #1376]
   1ec90:	mov	x0, sp
   1ec94:	blr	x8
   1ec98:	b	1ecd0 <PyInit__decimal@@Base+0x181bc>
   1ec9c:	sub	x2, x29, #0x30
   1eca0:	mov	x0, x19
   1eca4:	mov	x1, x21
   1eca8:	mov	x3, x20
   1ecac:	bl	1ecf4 <PyInit__decimal@@Base+0x181e0>
   1ecb0:	sub	x1, x29, #0x30
   1ecb4:	mov	x0, x19
   1ecb8:	mov	x2, x20
   1ecbc:	bl	1e118 <PyInit__decimal@@Base+0x17604>
   1ecc0:	sub	x1, x29, #0x30
   1ecc4:	mov	x0, x19
   1ecc8:	mov	x2, x20
   1eccc:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1ecd0:	add	sp, sp, #0x8f0
   1ecd4:	ldp	x20, x19, [sp, #64]
   1ecd8:	ldp	x22, x21, [sp, #48]
   1ecdc:	ldp	x24, x23, [sp, #32]
   1ece0:	ldr	x28, [sp, #16]
   1ece4:	ldp	x29, x30, [sp], #80
   1ece8:	ret
   1ecec:	mov	w1, #0x200                 	// #512
   1ecf0:	b	1ea14 <PyInit__decimal@@Base+0x17f00>
   1ecf4:	stp	x29, x30, [sp, #-96]!
   1ecf8:	stp	x28, x27, [sp, #16]
   1ecfc:	stp	x26, x25, [sp, #32]
   1ed00:	stp	x24, x23, [sp, #48]
   1ed04:	stp	x22, x21, [sp, #64]
   1ed08:	stp	x20, x19, [sp, #80]
   1ed0c:	mov	x29, sp
   1ed10:	sub	sp, sp, #0x900
   1ed14:	add	x10, sp, #0x6a0
   1ed18:	str	x10, [sp, #1688]
   1ed1c:	add	x10, sp, #0x470
   1ed20:	mov	x22, x2
   1ed24:	mov	x20, x0
   1ed28:	mov	w8, #0x30                  	// #48
   1ed2c:	mov	w9, #0x40                  	// #64
   1ed30:	str	x10, [sp, #1128]
   1ed34:	add	x10, sp, #0x240
   1ed38:	add	x0, sp, #0x670
   1ed3c:	mov	x2, x3
   1ed40:	mov	x19, x3
   1ed44:	mov	x21, x1
   1ed48:	str	xzr, [sp, #1656]
   1ed4c:	str	xzr, [sp, #1664]
   1ed50:	str	xzr, [sp, #1096]
   1ed54:	str	xzr, [sp, #1104]
   1ed58:	str	xzr, [sp, #536]
   1ed5c:	str	xzr, [sp, #544]
   1ed60:	strb	w8, [sp, #1648]
   1ed64:	str	xzr, [sp, #1672]
   1ed68:	str	x9, [sp, #1680]
   1ed6c:	strb	w8, [sp, #1088]
   1ed70:	str	xzr, [sp, #1112]
   1ed74:	str	x9, [sp, #1120]
   1ed78:	strb	w8, [sp, #528]
   1ed7c:	str	xzr, [sp, #552]
   1ed80:	str	x9, [sp, #560]
   1ed84:	str	x10, [sp, #568]
   1ed88:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1ed8c:	cbz	w0, 1ee80 <PyInit__decimal@@Base+0x1836c>
   1ed90:	add	x0, sp, #0x8
   1ed94:	mov	x1, sp
   1ed98:	add	x2, sp, #0x670
   1ed9c:	mov	w3, #0x3                   	// #3
   1eda0:	bl	2358c <PyInit__decimal@@Base+0x1ca78>
   1eda4:	ldr	x8, [sp]
   1eda8:	cmp	x8, #0x9
   1edac:	b.hi	1edbc <PyInit__decimal@@Base+0x182a8>  // b.pmore
   1edb0:	add	x8, x8, x8, lsl #2
   1edb4:	lsl	x8, x8, #1
   1edb8:	str	x8, [sp]
   1edbc:	ldr	x8, [sp]
   1edc0:	cmp	x8, #0x63
   1edc4:	b.hi	1edd4 <PyInit__decimal@@Base+0x182c0>  // b.pmore
   1edc8:	add	x8, x8, x8, lsl #2
   1edcc:	lsl	x8, x8, #1
   1edd0:	str	x8, [sp]
   1edd4:	ldr	x23, [sp]
   1edd8:	sub	x25, x23, #0x64
   1eddc:	str	x25, [sp]
   1ede0:	ldrb	w8, [x20]
   1ede4:	ldp	x21, x24, [x21, #8]
   1ede8:	tbnz	w8, #5, 1ee28 <PyInit__decimal@@Base+0x18314>
   1edec:	adrp	x26, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1edf0:	ldr	x8, [x20, #32]
   1edf4:	ldr	x1, [x26, #1344]
   1edf8:	cmp	x8, x1
   1edfc:	b.le	1ee28 <PyInit__decimal@@Base+0x18314>
   1ee00:	strb	wzr, [sp, #16]
   1ee04:	ldr	x0, [x20, #40]
   1ee08:	add	x3, sp, #0x10
   1ee0c:	mov	w2, #0x8                   	// #8
   1ee10:	bl	17b6c <PyInit__decimal@@Base+0x11058>
   1ee14:	str	x0, [x20, #40]
   1ee18:	ldrb	w8, [sp, #16]
   1ee1c:	cbnz	w8, 1ee28 <PyInit__decimal@@Base+0x18314>
   1ee20:	ldr	x8, [x26, #1344]
   1ee24:	str	x8, [x20, #32]
   1ee28:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   1ee2c:	ldrb	w8, [x20]
   1ee30:	add	x9, x9, #0x580
   1ee34:	ldr	x10, [x20, #40]
   1ee38:	ldrh	w9, [x9, x25, lsl #1]
   1ee3c:	mov	w11, #0x1                   	// #1
   1ee40:	mov	x12, #0xfffffffffffffffd    	// #-3
   1ee44:	and	w8, w8, #0xf0
   1ee48:	mov	x0, x20
   1ee4c:	strb	w8, [x20]
   1ee50:	str	x9, [x10]
   1ee54:	str	x11, [x20, #24]
   1ee58:	str	x12, [x20, #8]
   1ee5c:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   1ee60:	cmp	x25, #0x190
   1ee64:	b.hi	1ee94 <PyInit__decimal@@Base+0x18380>  // b.pmore
   1ee68:	mov	w8, #0x1                   	// #1
   1ee6c:	add	x9, x21, x24
   1ee70:	sub	x8, x8, x24
   1ee74:	str	x8, [sp, #1656]
   1ee78:	sub	x21, x9, #0x1
   1ee7c:	b	1eeac <PyInit__decimal@@Base+0x18398>
   1ee80:	mov	w1, #0x200                 	// #512
   1ee84:	mov	x0, x20
   1ee88:	mov	x2, x19
   1ee8c:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1ee90:	b	1f0ec <PyInit__decimal@@Base+0x185d8>
   1ee94:	neg	x8, x24
   1ee98:	str	x8, [sp, #1656]
   1ee9c:	ldrb	w8, [x20]
   1eea0:	add	x21, x21, x24
   1eea4:	orr	w8, w8, #0x1
   1eea8:	strb	w8, [x20]
   1eeac:	sub	x0, x29, #0x60
   1eeb0:	bl	13964 <PyInit__decimal@@Base+0xce50>
   1eeb4:	sub	x0, x29, #0x30
   1eeb8:	bl	13964 <PyInit__decimal@@Base+0xce50>
   1eebc:	mov	w8, #0x8                   	// #8
   1eec0:	stur	w8, [x29, #-12]
   1eec4:	ldr	x8, [x22]
   1eec8:	sub	x9, x23, #0x74
   1eecc:	cmp	x9, #0x310
   1eed0:	add	x23, x8, #0x2
   1eed4:	b.cc	1efb0 <PyInit__decimal@@Base+0x1849c>  // b.lo, b.ul, b.last
   1eed8:	cbnz	x21, 1efb0 <PyInit__decimal@@Base+0x1849c>
   1eedc:	adrp	x25, 3f000 <PyInit__decimal@@Base+0x384ec>
   1eee0:	add	x25, x25, #0xc88
   1eee4:	add	x0, sp, #0x670
   1eee8:	mov	x1, x25
   1eeec:	bl	19cb8 <PyInit__decimal@@Base+0x131a4>
   1eef0:	sub	x8, x29, #0x60
   1eef4:	mov	w24, w0
   1eef8:	add	x4, x8, #0x1c
   1eefc:	add	x0, sp, #0x210
   1ef00:	add	x1, sp, #0x670
   1ef04:	sub	x3, x29, #0x60
   1ef08:	mov	x2, x25
   1ef0c:	bl	21a0c <PyInit__decimal@@Base+0x1aef8>
   1ef10:	ldurh	w8, [x29, #-68]
   1ef14:	mov	w9, #0x3be                 	// #958
   1ef18:	tst	w8, w9
   1ef1c:	b.eq	1ef3c <PyInit__decimal@@Base+0x18428>  // b.none
   1ef20:	mov	w1, #0x200                 	// #512
   1ef24:	mov	x0, x20
   1ef28:	mov	x2, x19
   1ef2c:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1ef30:	mov	w8, wzr
   1ef34:	cbnz	w8, 1efb0 <PyInit__decimal@@Base+0x1849c>
   1ef38:	b	1f0ec <PyInit__decimal@@Base+0x185d8>
   1ef3c:	tbz	w24, #31, 1ef4c <PyInit__decimal@@Base+0x18438>
   1ef40:	ldr	x8, [sp, #536]
   1ef44:	add	x8, x8, #0x1
   1ef48:	str	x8, [sp, #536]
   1ef4c:	ldr	x11, [x22, #16]
   1ef50:	ldr	x8, [sp, #536]
   1ef54:	ldr	x12, [x22]
   1ef58:	ldr	x9, [sp, #544]
   1ef5c:	sub	x10, x8, #0x1
   1ef60:	sub	x11, x11, x12
   1ef64:	add	x12, x10, x9
   1ef68:	add	x11, x11, #0x1
   1ef6c:	cmp	x12, x11
   1ef70:	b.ge	1ef94 <PyInit__decimal@@Base+0x18480>  // b.tcont
   1ef74:	lsr	w1, w24, #31
   1ef78:	sub	x3, x11, #0x1
   1ef7c:	mov	w2, #0x1                   	// #1
   1ef80:	mov	x0, x20
   1ef84:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   1ef88:	mov	w8, wzr
   1ef8c:	cbnz	w8, 1efb0 <PyInit__decimal@@Base+0x1849c>
   1ef90:	b	1f0ec <PyInit__decimal@@Base+0x185d8>
   1ef94:	add	x8, x8, x9
   1ef98:	sub	x8, x8, #0x2
   1ef9c:	and	x8, x8, x8, asr #63
   1efa0:	sub	x23, x23, x8
   1efa4:	mov	w8, #0x1                   	// #1
   1efa8:	str	x10, [sp, #536]
   1efac:	cbz	w8, 1f0ec <PyInit__decimal@@Base+0x185d8>
   1efb0:	add	x0, sp, #0x10
   1efb4:	mov	w2, #0x2                   	// #2
   1efb8:	mov	x1, x23
   1efbc:	add	x26, sp, #0x10
   1efc0:	bl	1e8ac <PyInit__decimal@@Base+0x17d98>
   1efc4:	tbnz	w0, #31, 1f0ac <PyInit__decimal@@Base+0x18598>
   1efc8:	adrp	x22, 3f000 <PyInit__decimal@@Base+0x384ec>
   1efcc:	sxtw	x27, w0
   1efd0:	add	x22, x22, #0xc88
   1efd4:	ldr	x8, [x26, x27, lsl #3]
   1efd8:	add	x0, sp, #0x210
   1efdc:	sub	x2, x29, #0x30
   1efe0:	mov	x1, x20
   1efe4:	lsl	x8, x8, #1
   1efe8:	add	x8, x8, #0x3
   1efec:	stur	x8, [x29, #-48]
   1eff0:	ldrb	w8, [x20]
   1eff4:	mov	x3, x19
   1eff8:	eor	w8, w8, #0x1
   1effc:	strb	w8, [x20]
   1f000:	bl	1ddc8 <PyInit__decimal@@Base+0x172b4>
   1f004:	ldrb	w8, [x20]
   1f008:	eor	w8, w8, #0x1
   1f00c:	strb	w8, [x20]
   1f010:	ldr	x8, [sp, #1664]
   1f014:	ldur	x9, [x29, #-48]
   1f018:	subs	x25, x8, x9
   1f01c:	b.le	1f048 <PyInit__decimal@@Base+0x18534>
   1f020:	add	x0, sp, #0x440
   1f024:	add	x1, sp, #0x670
   1f028:	mov	x2, x25
   1f02c:	mov	x3, x19
   1f030:	add	x24, sp, #0x440
   1f034:	bl	1a604 <PyInit__decimal@@Base+0x13af0>
   1f038:	ldr	x8, [sp, #1096]
   1f03c:	add	x8, x8, x25
   1f040:	str	x8, [sp, #1096]
   1f044:	b	1f04c <PyInit__decimal@@Base+0x18538>
   1f048:	add	x24, sp, #0x670
   1f04c:	add	x0, sp, #0x210
   1f050:	add	x2, sp, #0x210
   1f054:	sub	x3, x29, #0x30
   1f058:	mov	x1, x24
   1f05c:	mov	x4, x19
   1f060:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
   1f064:	add	x0, sp, #0x210
   1f068:	add	x1, sp, #0x210
   1f06c:	sub	x3, x29, #0x60
   1f070:	mov	x2, x22
   1f074:	mov	x4, x19
   1f078:	bl	1c64c <PyInit__decimal@@Base+0x15b38>
   1f07c:	add	x2, sp, #0x210
   1f080:	sub	x3, x29, #0x60
   1f084:	mov	x0, x20
   1f088:	mov	x1, x20
   1f08c:	mov	x4, x19
   1f090:	bl	1c118 <PyInit__decimal@@Base+0x15604>
   1f094:	ldrb	w8, [x20]
   1f098:	and	w8, w8, #0xe
   1f09c:	cbnz	w8, 1f0ac <PyInit__decimal@@Base+0x18598>
   1f0a0:	cmp	x27, #0x0
   1f0a4:	sub	x27, x27, #0x1
   1f0a8:	b.gt	1efd4 <PyInit__decimal@@Base+0x184c0>
   1f0ac:	add	x1, x23, #0x1
   1f0b0:	add	x0, sp, #0x670
   1f0b4:	mov	x2, x19
   1f0b8:	bl	1e5c0 <PyInit__decimal@@Base+0x17aac>
   1f0bc:	add	x0, sp, #0x210
   1f0c0:	add	x1, sp, #0x670
   1f0c4:	sub	x3, x29, #0x60
   1f0c8:	mov	x2, x21
   1f0cc:	mov	x4, x19
   1f0d0:	bl	1fa14 <PyInit__decimal@@Base+0x18f00>
   1f0d4:	add	x1, sp, #0x210
   1f0d8:	sub	x3, x29, #0x60
   1f0dc:	mov	x0, x20
   1f0e0:	mov	x2, x20
   1f0e4:	mov	x4, x19
   1f0e8:	bl	1c118 <PyInit__decimal@@Base+0x15604>
   1f0ec:	ldr	w8, [x19]
   1f0f0:	mov	w9, #0x1040                	// #4160
   1f0f4:	orr	w8, w8, w9
   1f0f8:	str	w8, [x19]
   1f0fc:	ldrb	w8, [sp, #1648]
   1f100:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1f104:	cmp	w8, #0x1f
   1f108:	b.hi	1f118 <PyInit__decimal@@Base+0x18604>  // b.pmore
   1f10c:	ldr	x8, [x19, #1376]
   1f110:	ldr	x0, [sp, #1688]
   1f114:	blr	x8
   1f118:	ldrb	w8, [sp, #1648]
   1f11c:	tbnz	w8, #4, 1f12c <PyInit__decimal@@Base+0x18618>
   1f120:	ldr	x8, [x19, #1376]
   1f124:	add	x0, sp, #0x670
   1f128:	blr	x8
   1f12c:	ldrb	w8, [sp, #1088]
   1f130:	cmp	w8, #0x1f
   1f134:	b.hi	1f144 <PyInit__decimal@@Base+0x18630>  // b.pmore
   1f138:	ldr	x8, [x19, #1376]
   1f13c:	ldr	x0, [sp, #1128]
   1f140:	blr	x8
   1f144:	ldrb	w8, [sp, #1088]
   1f148:	tbnz	w8, #4, 1f158 <PyInit__decimal@@Base+0x18644>
   1f14c:	ldr	x8, [x19, #1376]
   1f150:	add	x0, sp, #0x440
   1f154:	blr	x8
   1f158:	ldrb	w8, [sp, #528]
   1f15c:	cmp	w8, #0x1f
   1f160:	b.hi	1f170 <PyInit__decimal@@Base+0x1865c>  // b.pmore
   1f164:	ldr	x8, [x19, #1376]
   1f168:	ldr	x0, [sp, #568]
   1f16c:	blr	x8
   1f170:	ldrb	w8, [sp, #528]
   1f174:	tbnz	w8, #4, 1f184 <PyInit__decimal@@Base+0x18670>
   1f178:	ldr	x8, [x19, #1376]
   1f17c:	add	x0, sp, #0x210
   1f180:	blr	x8
   1f184:	add	sp, sp, #0x900
   1f188:	ldp	x20, x19, [sp, #80]
   1f18c:	ldp	x22, x21, [sp, #64]
   1f190:	ldp	x24, x23, [sp, #48]
   1f194:	ldp	x26, x25, [sp, #32]
   1f198:	ldp	x28, x27, [sp, #16]
   1f19c:	ldp	x29, x30, [sp], #96
   1f1a0:	ret
   1f1a4:	stp	x29, x30, [sp, #-80]!
   1f1a8:	str	x28, [sp, #16]
   1f1ac:	stp	x24, x23, [sp, #32]
   1f1b0:	stp	x22, x21, [sp, #48]
   1f1b4:	stp	x20, x19, [sp, #64]
   1f1b8:	mov	x29, sp
   1f1bc:	sub	sp, sp, #0x8f0
   1f1c0:	ldp	q1, q0, [x2, #16]
   1f1c4:	ldr	q2, [x2]
   1f1c8:	mov	w8, #0x6                   	// #6
   1f1cc:	mov	x20, x3
   1f1d0:	stp	q1, q0, [x29, #-32]
   1f1d4:	stur	q2, [x29, #-48]
   1f1d8:	stur	w8, [x29, #-12]
   1f1dc:	ldrb	w8, [x1]
   1f1e0:	mov	x22, x2
   1f1e4:	mov	x21, x1
   1f1e8:	mov	x19, x0
   1f1ec:	tst	w8, #0xe
   1f1f0:	b.eq	1f224 <PyInit__decimal@@Base+0x18710>  // b.none
   1f1f4:	mov	x0, x19
   1f1f8:	mov	x1, x21
   1f1fc:	mov	x2, x22
   1f200:	mov	x3, x20
   1f204:	bl	19544 <PyInit__decimal@@Base+0x12a30>
   1f208:	cbnz	w0, 1f2a4 <PyInit__decimal@@Base+0x18790>
   1f20c:	ldrb	w8, [x21]
   1f210:	tbnz	w8, #0, 1f280 <PyInit__decimal@@Base+0x1876c>
   1f214:	mov	w2, #0x2                   	// #2
   1f218:	mov	x0, x19
   1f21c:	mov	w1, wzr
   1f220:	b	1f2a0 <PyInit__decimal@@Base+0x1878c>
   1f224:	ldr	x9, [x21, #40]
   1f228:	ldr	x10, [x21, #24]
   1f22c:	add	x9, x9, x10, lsl #3
   1f230:	ldur	x9, [x9, #-8]
   1f234:	cbz	x9, 1f294 <PyInit__decimal@@Base+0x18780>
   1f238:	tbnz	w8, #0, 1f280 <PyInit__decimal@@Base+0x1876c>
   1f23c:	mov	x0, x21
   1f240:	bl	1f564 <PyInit__decimal@@Base+0x18a50>
   1f244:	ldp	x8, x9, [x21, #8]
   1f248:	add	x8, x8, x9
   1f24c:	sub	x23, x8, #0x1
   1f250:	cbz	w0, 1f2c0 <PyInit__decimal@@Base+0x187ac>
   1f254:	cmp	x23, #0x0
   1f258:	cneg	x2, x23, mi  // mi = first
   1f25c:	lsr	x1, x23, #63
   1f260:	mov	x0, x19
   1f264:	mov	x3, xzr
   1f268:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   1f26c:	sub	x1, x29, #0x30
   1f270:	mov	x0, x19
   1f274:	mov	x2, x20
   1f278:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1f27c:	b	1f2a4 <PyInit__decimal@@Base+0x18790>
   1f280:	mov	w1, #0x100                 	// #256
   1f284:	mov	x0, x19
   1f288:	mov	x2, x20
   1f28c:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   1f290:	b	1f2a4 <PyInit__decimal@@Base+0x18790>
   1f294:	mov	w1, #0x1                   	// #1
   1f298:	mov	w2, #0x2                   	// #2
   1f29c:	mov	x0, x19
   1f2a0:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   1f2a4:	add	sp, sp, #0x8f0
   1f2a8:	ldp	x20, x19, [sp, #64]
   1f2ac:	ldp	x22, x21, [sp, #48]
   1f2b0:	ldp	x24, x23, [sp, #32]
   1f2b4:	ldr	x28, [sp, #16]
   1f2b8:	ldp	x29, x30, [sp], #80
   1f2bc:	ret
   1f2c0:	eor	x0, x23, x23, asr #63
   1f2c4:	bl	1820c <PyInit__decimal@@Base+0x116f8>
   1f2c8:	ldr	x8, [x22, #8]
   1f2cc:	sub	w9, w0, #0x1
   1f2d0:	cmp	x8, w9, sxtw
   1f2d4:	b.ge	1f2f8 <PyInit__decimal@@Base+0x187e4>  // b.tcont
   1f2d8:	ldr	w8, [x20]
   1f2dc:	mov	w9, #0x1840                	// #6208
   1f2e0:	lsr	x1, x23, #63
   1f2e4:	mov	w2, #0x2                   	// #2
   1f2e8:	orr	w8, w8, w9
   1f2ec:	mov	x0, x19
   1f2f0:	str	w8, [x20]
   1f2f4:	b	1f2a0 <PyInit__decimal@@Base+0x1878c>
   1f2f8:	ldr	w8, [x22, #44]
   1f2fc:	cbz	w8, 1f530 <PyInit__decimal@@Base+0x18a1c>
   1f300:	add	x10, sp, #0x6c0
   1f304:	str	x10, [sp, #1720]
   1f308:	add	x10, sp, #0x490
   1f30c:	str	x10, [sp, #1160]
   1f310:	add	x10, sp, #0x260
   1f314:	mov	w8, #0x30                  	// #48
   1f318:	mov	w9, #0x40                  	// #64
   1f31c:	str	x10, [sp, #600]
   1f320:	add	x10, sp, #0x30
   1f324:	cmp	x19, x21
   1f328:	str	xzr, [sp, #1688]
   1f32c:	str	xzr, [sp, #1696]
   1f330:	str	xzr, [sp, #1128]
   1f334:	str	xzr, [sp, #1136]
   1f338:	str	xzr, [sp, #568]
   1f33c:	str	xzr, [sp, #576]
   1f340:	stp	xzr, xzr, [sp, #8]
   1f344:	strb	w8, [sp, #1680]
   1f348:	str	xzr, [sp, #1704]
   1f34c:	str	x9, [sp, #1712]
   1f350:	strb	w8, [sp, #1120]
   1f354:	str	xzr, [sp, #1144]
   1f358:	str	x9, [sp, #1152]
   1f35c:	strb	w8, [sp, #560]
   1f360:	str	xzr, [sp, #584]
   1f364:	str	x9, [sp, #592]
   1f368:	strb	w8, [sp]
   1f36c:	stp	xzr, x9, [sp, #24]
   1f370:	str	x10, [sp, #40]
   1f374:	b.ne	1f390 <PyInit__decimal@@Base+0x1887c>  // b.any
   1f378:	mov	x0, sp
   1f37c:	mov	x1, x21
   1f380:	mov	x2, x20
   1f384:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1f388:	mov	x21, sp
   1f38c:	cbz	w0, 1f55c <PyInit__decimal@@Base+0x18a48>
   1f390:	stur	wzr, [x29, #-8]
   1f394:	ldr	x8, [x22]
   1f398:	sub	x9, x29, #0x30
   1f39c:	add	x23, x9, #0x1c
   1f3a0:	add	x24, x8, #0x3
   1f3a4:	sub	x3, x29, #0x30
   1f3a8:	mov	w0, wzr
   1f3ac:	mov	x1, x19
   1f3b0:	mov	x2, x21
   1f3b4:	mov	x4, x20
   1f3b8:	stur	x24, [x29, #-48]
   1f3bc:	bl	1f5b0 <PyInit__decimal@@Base+0x18a9c>
   1f3c0:	ldp	x8, x9, [x19, #8]
   1f3c4:	ldur	x10, [x29, #-48]
   1f3c8:	add	x0, sp, #0x230
   1f3cc:	mov	w2, #0x1                   	// #1
   1f3d0:	add	x8, x9, x8
   1f3d4:	sub	x3, x8, x10
   1f3d8:	mov	w1, wzr
   1f3dc:	bl	18f78 <PyInit__decimal@@Base+0x12464>
   1f3e0:	ldr	x8, [x22]
   1f3e4:	add	x0, sp, #0x690
   1f3e8:	add	x2, sp, #0x230
   1f3ec:	sub	x3, x29, #0x30
   1f3f0:	mov	x1, x19
   1f3f4:	mov	x4, x23
   1f3f8:	stur	x8, [x29, #-48]
   1f3fc:	bl	1c118 <PyInit__decimal@@Base+0x15604>
   1f400:	add	x0, sp, #0x460
   1f404:	add	x2, sp, #0x230
   1f408:	sub	x3, x29, #0x30
   1f40c:	mov	x1, x19
   1f410:	mov	x4, x23
   1f414:	bl	1c64c <PyInit__decimal@@Base+0x15b38>
   1f418:	ldrb	w8, [x19]
   1f41c:	tst	w8, #0xe
   1f420:	b.ne	1f450 <PyInit__decimal@@Base+0x1893c>  // b.any
   1f424:	ldr	x8, [x19, #40]
   1f428:	ldr	x9, [x19, #24]
   1f42c:	add	x8, x8, x9, lsl #3
   1f430:	ldur	x8, [x8, #-8]
   1f434:	cbz	x8, 1f450 <PyInit__decimal@@Base+0x1893c>
   1f438:	add	x0, sp, #0x690
   1f43c:	add	x1, sp, #0x460
   1f440:	mov	x2, x20
   1f444:	bl	19c60 <PyInit__decimal@@Base+0x1314c>
   1f448:	add	x24, x24, #0x13
   1f44c:	cbnz	w0, 1f3a4 <PyInit__decimal@@Base+0x18890>
   1f450:	ldr	w8, [x22, #40]
   1f454:	sub	x1, x29, #0x30
   1f458:	mov	x0, x19
   1f45c:	mov	x2, x20
   1f460:	stur	w8, [x29, #-8]
   1f464:	bl	1e118 <PyInit__decimal@@Base+0x17604>
   1f468:	sub	x1, x29, #0x30
   1f46c:	mov	x0, x19
   1f470:	mov	x2, x20
   1f474:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1f478:	ldrb	w8, [sp, #1680]
   1f47c:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1f480:	cmp	w8, #0x1f
   1f484:	b.hi	1f494 <PyInit__decimal@@Base+0x18980>  // b.pmore
   1f488:	ldr	x8, [x19, #1376]
   1f48c:	ldr	x0, [sp, #1720]
   1f490:	blr	x8
   1f494:	ldrb	w8, [sp, #1680]
   1f498:	tbnz	w8, #4, 1f4a8 <PyInit__decimal@@Base+0x18994>
   1f49c:	ldr	x8, [x19, #1376]
   1f4a0:	add	x0, sp, #0x690
   1f4a4:	blr	x8
   1f4a8:	ldrb	w8, [sp, #1120]
   1f4ac:	cmp	w8, #0x1f
   1f4b0:	b.hi	1f4c0 <PyInit__decimal@@Base+0x189ac>  // b.pmore
   1f4b4:	ldr	x8, [x19, #1376]
   1f4b8:	ldr	x0, [sp, #1160]
   1f4bc:	blr	x8
   1f4c0:	ldrb	w8, [sp, #1120]
   1f4c4:	tbnz	w8, #4, 1f4d4 <PyInit__decimal@@Base+0x189c0>
   1f4c8:	ldr	x8, [x19, #1376]
   1f4cc:	add	x0, sp, #0x460
   1f4d0:	blr	x8
   1f4d4:	ldrb	w8, [sp, #560]
   1f4d8:	cmp	w8, #0x1f
   1f4dc:	b.hi	1f4ec <PyInit__decimal@@Base+0x189d8>  // b.pmore
   1f4e0:	ldr	x8, [x19, #1376]
   1f4e4:	ldr	x0, [sp, #600]
   1f4e8:	blr	x8
   1f4ec:	ldrb	w8, [sp, #560]
   1f4f0:	tbnz	w8, #4, 1f500 <PyInit__decimal@@Base+0x189ec>
   1f4f4:	ldr	x8, [x19, #1376]
   1f4f8:	add	x0, sp, #0x230
   1f4fc:	blr	x8
   1f500:	ldrb	w8, [sp]
   1f504:	cmp	w8, #0x1f
   1f508:	b.hi	1f518 <PyInit__decimal@@Base+0x18a04>  // b.pmore
   1f50c:	ldr	x8, [x19, #1376]
   1f510:	ldr	x0, [sp, #40]
   1f514:	blr	x8
   1f518:	ldrb	w8, [sp]
   1f51c:	tbnz	w8, #4, 1f2a4 <PyInit__decimal@@Base+0x18790>
   1f520:	ldr	x8, [x19, #1376]
   1f524:	mov	x0, sp
   1f528:	blr	x8
   1f52c:	b	1f2a4 <PyInit__decimal@@Base+0x18790>
   1f530:	sub	x3, x29, #0x30
   1f534:	mov	w0, #0x1                   	// #1
   1f538:	mov	x1, x19
   1f53c:	mov	x2, x21
   1f540:	mov	x4, x20
   1f544:	bl	1f5b0 <PyInit__decimal@@Base+0x18a9c>
   1f548:	sub	x1, x29, #0x30
   1f54c:	mov	x0, x19
   1f550:	mov	x2, x20
   1f554:	bl	1e118 <PyInit__decimal@@Base+0x17604>
   1f558:	b	1f2a4 <PyInit__decimal@@Base+0x18790>
   1f55c:	mov	w1, #0x200                 	// #512
   1f560:	b	1f284 <PyInit__decimal@@Base+0x18770>
   1f564:	stp	x29, x30, [sp, #-32]!
   1f568:	stp	x20, x19, [sp, #16]
   1f56c:	mov	x29, sp
   1f570:	ldr	x8, [x0, #24]
   1f574:	ldr	x20, [x0, #40]
   1f578:	sub	x19, x8, #0x1
   1f57c:	ldr	x0, [x20, x19, lsl #3]
   1f580:	bl	24cd8 <PyInit__decimal@@Base+0x1e1c4>
   1f584:	cbz	w0, 1f5a0 <PyInit__decimal@@Base+0x18a8c>
   1f588:	mov	x0, x20
   1f58c:	mov	x1, x19
   1f590:	bl	23e60 <PyInit__decimal@@Base+0x1d34c>
   1f594:	cbz	w0, 1f5a0 <PyInit__decimal@@Base+0x18a8c>
   1f598:	mov	w0, #0x1                   	// #1
   1f59c:	b	1f5a4 <PyInit__decimal@@Base+0x18a90>
   1f5a0:	mov	w0, wzr
   1f5a4:	ldp	x20, x19, [sp, #16]
   1f5a8:	ldp	x29, x30, [sp], #32
   1f5ac:	ret
   1f5b0:	stp	x29, x30, [sp, #-64]!
   1f5b4:	stp	x28, x23, [sp, #16]
   1f5b8:	stp	x22, x21, [sp, #32]
   1f5bc:	stp	x20, x19, [sp, #48]
   1f5c0:	mov	x29, sp
   1f5c4:	sub	sp, sp, #0x260
   1f5c8:	mov	w23, w0
   1f5cc:	mov	w8, #0x30                  	// #48
   1f5d0:	mov	w9, #0x40                  	// #64
   1f5d4:	add	x10, sp, #0x30
   1f5d8:	sub	x0, x29, #0x30
   1f5dc:	mov	x19, x4
   1f5e0:	mov	x21, x3
   1f5e4:	mov	x22, x2
   1f5e8:	mov	x20, x1
   1f5ec:	stp	xzr, xzr, [sp, #8]
   1f5f0:	strb	w8, [sp]
   1f5f4:	stp	xzr, x9, [sp, #24]
   1f5f8:	str	x10, [sp, #40]
   1f5fc:	bl	13964 <PyInit__decimal@@Base+0xce50>
   1f600:	ldr	x8, [x21]
   1f604:	sub	x2, x29, #0x30
   1f608:	mov	x0, x20
   1f60c:	mov	x1, x22
   1f610:	add	x8, x8, #0x3
   1f614:	mov	x3, x19
   1f618:	stur	x8, [x29, #-48]
   1f61c:	bl	1ecf4 <PyInit__decimal@@Base+0x181e0>
   1f620:	ldur	x1, [x29, #-48]
   1f624:	mov	x0, sp
   1f628:	mov	x2, x19
   1f62c:	bl	1e5c0 <PyInit__decimal@@Base+0x17aac>
   1f630:	cmp	w23, #0x1
   1f634:	b.ne	1f650 <PyInit__decimal@@Base+0x18b3c>  // b.any
   1f638:	ldp	q1, q0, [x21, #16]
   1f63c:	ldr	q2, [x21]
   1f640:	mov	w8, #0x6                   	// #6
   1f644:	stp	q1, q0, [x29, #-32]
   1f648:	stur	q2, [x29, #-48]
   1f64c:	stur	w8, [x29, #-12]
   1f650:	mov	x3, sp
   1f654:	sub	x4, x29, #0x30
   1f658:	mov	w0, wzr
   1f65c:	mov	x1, x20
   1f660:	mov	x2, x20
   1f664:	mov	x5, x19
   1f668:	bl	1cafc <PyInit__decimal@@Base+0x15fe8>
   1f66c:	ldrb	w8, [sp]
   1f670:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1f674:	cmp	w8, #0x1f
   1f678:	b.hi	1f688 <PyInit__decimal@@Base+0x18b74>  // b.pmore
   1f67c:	ldr	x8, [x19, #1376]
   1f680:	ldr	x0, [sp, #40]
   1f684:	blr	x8
   1f688:	ldrb	w8, [sp]
   1f68c:	tbnz	w8, #4, 1f69c <PyInit__decimal@@Base+0x18b88>
   1f690:	ldr	x8, [x19, #1376]
   1f694:	mov	x0, sp
   1f698:	blr	x8
   1f69c:	add	sp, sp, #0x260
   1f6a0:	ldp	x20, x19, [sp, #48]
   1f6a4:	ldp	x22, x21, [sp, #32]
   1f6a8:	ldp	x28, x23, [sp, #16]
   1f6ac:	ldp	x29, x30, [sp], #64
   1f6b0:	ret
   1f6b4:	stp	x29, x30, [sp, #-64]!
   1f6b8:	str	x23, [sp, #16]
   1f6bc:	stp	x22, x21, [sp, #32]
   1f6c0:	stp	x20, x19, [sp, #48]
   1f6c4:	mov	x29, sp
   1f6c8:	ldrb	w8, [x1]
   1f6cc:	mov	x19, x4
   1f6d0:	mov	x20, x3
   1f6d4:	mov	x22, x2
   1f6d8:	mov	x23, x1
   1f6dc:	mov	x21, x0
   1f6e0:	tbz	w8, #2, 1f6f0 <PyInit__decimal@@Base+0x18bdc>
   1f6e4:	ldrb	w9, [x22]
   1f6e8:	tst	w9, #0xc
   1f6ec:	b.eq	1f748 <PyInit__decimal@@Base+0x18c34>  // b.none
   1f6f0:	tst	w8, #0xc
   1f6f4:	b.ne	1f708 <PyInit__decimal@@Base+0x18bf4>  // b.any
   1f6f8:	ldrb	w8, [x22]
   1f6fc:	tbz	w8, #2, 1f708 <PyInit__decimal@@Base+0x18bf4>
   1f700:	mov	x22, x23
   1f704:	b	1f748 <PyInit__decimal@@Base+0x18c34>
   1f708:	mov	x0, x21
   1f70c:	mov	x1, x23
   1f710:	mov	x2, x22
   1f714:	mov	x3, x20
   1f718:	mov	x4, x19
   1f71c:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   1f720:	cbnz	w0, 1f768 <PyInit__decimal@@Base+0x18c54>
   1f724:	mov	x0, x23
   1f728:	mov	x1, x22
   1f72c:	bl	19cb8 <PyInit__decimal@@Base+0x131a4>
   1f730:	cbnz	w0, 1f740 <PyInit__decimal@@Base+0x18c2c>
   1f734:	mov	x0, x23
   1f738:	mov	x1, x22
   1f73c:	bl	1f77c <PyInit__decimal@@Base+0x18c68>
   1f740:	cmp	w0, #0x0
   1f744:	csel	x22, x22, x23, lt  // lt = tstop
   1f748:	mov	x0, x21
   1f74c:	mov	x1, x22
   1f750:	mov	x2, x19
   1f754:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1f758:	mov	x0, x21
   1f75c:	mov	x1, x20
   1f760:	mov	x2, x19
   1f764:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1f768:	ldp	x20, x19, [sp, #48]
   1f76c:	ldp	x22, x21, [sp, #32]
   1f770:	ldr	x23, [sp, #16]
   1f774:	ldp	x29, x30, [sp], #64
   1f778:	ret
   1f77c:	ldrb	w9, [x0]
   1f780:	ldrb	w10, [x1]
   1f784:	mov	x8, x0
   1f788:	and	w11, w9, #0x1
   1f78c:	and	w10, w10, #0x1
   1f790:	subs	w0, w10, w11
   1f794:	b.ne	1f7b8 <PyInit__decimal@@Base+0x18ca4>  // b.any
   1f798:	ldr	x8, [x8, #8]
   1f79c:	ldr	x10, [x1, #8]
   1f7a0:	ubfiz	w9, w9, #1, #1
   1f7a4:	mov	w11, #0x1                   	// #1
   1f7a8:	sub	w11, w11, w9
   1f7ac:	sub	w9, w9, #0x1
   1f7b0:	cmp	x8, x10
   1f7b4:	csel	w0, w9, w11, lt  // lt = tstop
   1f7b8:	ret
   1f7bc:	stp	x29, x30, [sp, #-64]!
   1f7c0:	str	x23, [sp, #16]
   1f7c4:	stp	x22, x21, [sp, #32]
   1f7c8:	stp	x20, x19, [sp, #48]
   1f7cc:	mov	x29, sp
   1f7d0:	ldrb	w8, [x1]
   1f7d4:	mov	x19, x4
   1f7d8:	mov	x20, x3
   1f7dc:	mov	x22, x2
   1f7e0:	mov	x23, x1
   1f7e4:	mov	x21, x0
   1f7e8:	tbz	w8, #2, 1f7f8 <PyInit__decimal@@Base+0x18ce4>
   1f7ec:	ldrb	w9, [x22]
   1f7f0:	tst	w9, #0xc
   1f7f4:	b.eq	1f850 <PyInit__decimal@@Base+0x18d3c>  // b.none
   1f7f8:	tst	w8, #0xc
   1f7fc:	b.ne	1f810 <PyInit__decimal@@Base+0x18cfc>  // b.any
   1f800:	ldrb	w8, [x22]
   1f804:	tbz	w8, #2, 1f810 <PyInit__decimal@@Base+0x18cfc>
   1f808:	mov	x22, x23
   1f80c:	b	1f850 <PyInit__decimal@@Base+0x18d3c>
   1f810:	mov	x0, x21
   1f814:	mov	x1, x23
   1f818:	mov	x2, x22
   1f81c:	mov	x3, x20
   1f820:	mov	x4, x19
   1f824:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   1f828:	cbnz	w0, 1f870 <PyInit__decimal@@Base+0x18d5c>
   1f82c:	mov	x0, x23
   1f830:	mov	x1, x22
   1f834:	bl	1a058 <PyInit__decimal@@Base+0x13544>
   1f838:	cbnz	w0, 1f848 <PyInit__decimal@@Base+0x18d34>
   1f83c:	mov	x0, x23
   1f840:	mov	x1, x22
   1f844:	bl	1f77c <PyInit__decimal@@Base+0x18c68>
   1f848:	cmp	w0, #0x0
   1f84c:	csel	x22, x22, x23, lt  // lt = tstop
   1f850:	mov	x0, x21
   1f854:	mov	x1, x22
   1f858:	mov	x2, x19
   1f85c:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1f860:	mov	x0, x21
   1f864:	mov	x1, x20
   1f868:	mov	x2, x19
   1f86c:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1f870:	ldp	x20, x19, [sp, #48]
   1f874:	ldp	x22, x21, [sp, #32]
   1f878:	ldr	x23, [sp, #16]
   1f87c:	ldp	x29, x30, [sp], #64
   1f880:	ret
   1f884:	stp	x29, x30, [sp, #-64]!
   1f888:	str	x23, [sp, #16]
   1f88c:	stp	x22, x21, [sp, #32]
   1f890:	stp	x20, x19, [sp, #48]
   1f894:	mov	x29, sp
   1f898:	ldrb	w8, [x1]
   1f89c:	mov	x19, x4
   1f8a0:	mov	x20, x3
   1f8a4:	mov	x22, x2
   1f8a8:	mov	x23, x1
   1f8ac:	mov	x21, x0
   1f8b0:	tbz	w8, #2, 1f8c0 <PyInit__decimal@@Base+0x18dac>
   1f8b4:	ldrb	w9, [x22]
   1f8b8:	tst	w9, #0xc
   1f8bc:	b.eq	1f918 <PyInit__decimal@@Base+0x18e04>  // b.none
   1f8c0:	tst	w8, #0xc
   1f8c4:	b.ne	1f8d8 <PyInit__decimal@@Base+0x18dc4>  // b.any
   1f8c8:	ldrb	w8, [x22]
   1f8cc:	tbz	w8, #2, 1f8d8 <PyInit__decimal@@Base+0x18dc4>
   1f8d0:	mov	x22, x23
   1f8d4:	b	1f918 <PyInit__decimal@@Base+0x18e04>
   1f8d8:	mov	x0, x21
   1f8dc:	mov	x1, x23
   1f8e0:	mov	x2, x22
   1f8e4:	mov	x3, x20
   1f8e8:	mov	x4, x19
   1f8ec:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   1f8f0:	cbnz	w0, 1f938 <PyInit__decimal@@Base+0x18e24>
   1f8f4:	mov	x0, x23
   1f8f8:	mov	x1, x22
   1f8fc:	bl	19cb8 <PyInit__decimal@@Base+0x131a4>
   1f900:	cbnz	w0, 1f910 <PyInit__decimal@@Base+0x18dfc>
   1f904:	mov	x0, x23
   1f908:	mov	x1, x22
   1f90c:	bl	1f77c <PyInit__decimal@@Base+0x18c68>
   1f910:	cmp	w0, #0x0
   1f914:	csel	x22, x23, x22, lt  // lt = tstop
   1f918:	mov	x0, x21
   1f91c:	mov	x1, x22
   1f920:	mov	x2, x19
   1f924:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1f928:	mov	x0, x21
   1f92c:	mov	x1, x20
   1f930:	mov	x2, x19
   1f934:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1f938:	ldp	x20, x19, [sp, #48]
   1f93c:	ldp	x22, x21, [sp, #32]
   1f940:	ldr	x23, [sp, #16]
   1f944:	ldp	x29, x30, [sp], #64
   1f948:	ret
   1f94c:	stp	x29, x30, [sp, #-64]!
   1f950:	str	x23, [sp, #16]
   1f954:	stp	x22, x21, [sp, #32]
   1f958:	stp	x20, x19, [sp, #48]
   1f95c:	mov	x29, sp
   1f960:	ldrb	w8, [x1]
   1f964:	mov	x19, x4
   1f968:	mov	x20, x3
   1f96c:	mov	x22, x2
   1f970:	mov	x23, x1
   1f974:	mov	x21, x0
   1f978:	tbz	w8, #2, 1f988 <PyInit__decimal@@Base+0x18e74>
   1f97c:	ldrb	w9, [x22]
   1f980:	tst	w9, #0xc
   1f984:	b.eq	1f9e0 <PyInit__decimal@@Base+0x18ecc>  // b.none
   1f988:	tst	w8, #0xc
   1f98c:	b.ne	1f9a0 <PyInit__decimal@@Base+0x18e8c>  // b.any
   1f990:	ldrb	w8, [x22]
   1f994:	tbz	w8, #2, 1f9a0 <PyInit__decimal@@Base+0x18e8c>
   1f998:	mov	x22, x23
   1f99c:	b	1f9e0 <PyInit__decimal@@Base+0x18ecc>
   1f9a0:	mov	x0, x21
   1f9a4:	mov	x1, x23
   1f9a8:	mov	x2, x22
   1f9ac:	mov	x3, x20
   1f9b0:	mov	x4, x19
   1f9b4:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   1f9b8:	cbnz	w0, 1fa00 <PyInit__decimal@@Base+0x18eec>
   1f9bc:	mov	x0, x23
   1f9c0:	mov	x1, x22
   1f9c4:	bl	1a058 <PyInit__decimal@@Base+0x13544>
   1f9c8:	cbnz	w0, 1f9d8 <PyInit__decimal@@Base+0x18ec4>
   1f9cc:	mov	x0, x23
   1f9d0:	mov	x1, x22
   1f9d4:	bl	1f77c <PyInit__decimal@@Base+0x18c68>
   1f9d8:	cmp	w0, #0x0
   1f9dc:	csel	x22, x23, x22, lt  // lt = tstop
   1f9e0:	mov	x0, x21
   1f9e4:	mov	x1, x22
   1f9e8:	mov	x2, x19
   1f9ec:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1f9f0:	mov	x0, x21
   1f9f4:	mov	x1, x20
   1f9f8:	mov	x2, x19
   1f9fc:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1fa00:	ldp	x20, x19, [sp, #48]
   1fa04:	ldp	x22, x21, [sp, #32]
   1fa08:	ldr	x23, [sp, #16]
   1fa0c:	ldp	x29, x30, [sp], #64
   1fa10:	ret
   1fa14:	stp	x29, x30, [sp, #-64]!
   1fa18:	stp	x28, x23, [sp, #16]
   1fa1c:	stp	x22, x21, [sp, #32]
   1fa20:	stp	x20, x19, [sp, #48]
   1fa24:	mov	x29, sp
   1fa28:	sub	sp, sp, #0x260
   1fa2c:	mov	x23, x0
   1fa30:	mov	w8, #0x30                  	// #48
   1fa34:	mov	w9, #0x40                  	// #64
   1fa38:	add	x10, sp, #0x30
   1fa3c:	sub	x0, x29, #0x30
   1fa40:	mov	x19, x4
   1fa44:	mov	x20, x3
   1fa48:	mov	x21, x2
   1fa4c:	mov	x22, x1
   1fa50:	stp	xzr, xzr, [sp, #8]
   1fa54:	strb	w8, [sp]
   1fa58:	stp	xzr, x9, [sp, #24]
   1fa5c:	str	x10, [sp, #40]
   1fa60:	bl	13964 <PyInit__decimal@@Base+0xce50>
   1fa64:	mov	x0, sp
   1fa68:	sub	x2, x29, #0x30
   1fa6c:	mov	x1, x21
   1fa70:	mov	x3, x19
   1fa74:	bl	18f28 <PyInit__decimal@@Base+0x12414>
   1fa78:	mov	x2, sp
   1fa7c:	mov	x0, x23
   1fa80:	mov	x1, x22
   1fa84:	mov	x3, x20
   1fa88:	mov	x4, x19
   1fa8c:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
   1fa90:	ldrb	w8, [sp]
   1fa94:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1fa98:	cmp	w8, #0x1f
   1fa9c:	b.hi	1faac <PyInit__decimal@@Base+0x18f98>  // b.pmore
   1faa0:	ldr	x8, [x19, #1376]
   1faa4:	ldr	x0, [sp, #40]
   1faa8:	blr	x8
   1faac:	ldrb	w8, [sp]
   1fab0:	tbnz	w8, #4, 1fac0 <PyInit__decimal@@Base+0x18fac>
   1fab4:	ldr	x8, [x19, #1376]
   1fab8:	mov	x0, sp
   1fabc:	blr	x8
   1fac0:	add	sp, sp, #0x260
   1fac4:	ldp	x20, x19, [sp, #48]
   1fac8:	ldp	x22, x21, [sp, #32]
   1facc:	ldp	x28, x23, [sp, #16]
   1fad0:	ldp	x29, x30, [sp], #64
   1fad4:	ret
   1fad8:	stp	x29, x30, [sp, #-64]!
   1fadc:	stp	x28, x23, [sp, #16]
   1fae0:	stp	x22, x21, [sp, #32]
   1fae4:	stp	x20, x19, [sp, #48]
   1fae8:	mov	x29, sp
   1faec:	sub	sp, sp, #0x260
   1faf0:	mov	x23, x0
   1faf4:	mov	w8, #0x30                  	// #48
   1faf8:	mov	w9, #0x40                  	// #64
   1fafc:	add	x10, sp, #0x30
   1fb00:	sub	x0, x29, #0x30
   1fb04:	mov	x19, x4
   1fb08:	mov	x20, x3
   1fb0c:	mov	x21, x2
   1fb10:	mov	x22, x1
   1fb14:	stp	xzr, xzr, [sp, #8]
   1fb18:	strb	w8, [sp]
   1fb1c:	stp	xzr, x9, [sp, #24]
   1fb20:	str	x10, [sp, #40]
   1fb24:	bl	13964 <PyInit__decimal@@Base+0xce50>
   1fb28:	mov	x0, sp
   1fb2c:	sub	x2, x29, #0x30
   1fb30:	mov	x1, x21
   1fb34:	mov	x3, x19
   1fb38:	bl	19050 <PyInit__decimal@@Base+0x1253c>
   1fb3c:	mov	x2, sp
   1fb40:	mov	x0, x23
   1fb44:	mov	x1, x22
   1fb48:	mov	x3, x20
   1fb4c:	mov	x4, x19
   1fb50:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
   1fb54:	ldrb	w8, [sp]
   1fb58:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   1fb5c:	cmp	w8, #0x1f
   1fb60:	b.hi	1fb70 <PyInit__decimal@@Base+0x1905c>  // b.pmore
   1fb64:	ldr	x8, [x19, #1376]
   1fb68:	ldr	x0, [sp, #40]
   1fb6c:	blr	x8
   1fb70:	ldrb	w8, [sp]
   1fb74:	tbnz	w8, #4, 1fb84 <PyInit__decimal@@Base+0x19070>
   1fb78:	ldr	x8, [x19, #1376]
   1fb7c:	mov	x0, sp
   1fb80:	blr	x8
   1fb84:	add	sp, sp, #0x260
   1fb88:	ldp	x20, x19, [sp, #48]
   1fb8c:	ldp	x22, x21, [sp, #32]
   1fb90:	ldp	x28, x23, [sp, #16]
   1fb94:	ldp	x29, x30, [sp], #64
   1fb98:	ret
   1fb9c:	stp	x29, x30, [sp, #-16]!
   1fba0:	mov	x29, sp
   1fba4:	sxtw	x2, w2
   1fba8:	bl	1fa14 <PyInit__decimal@@Base+0x18f00>
   1fbac:	ldp	x29, x30, [sp], #16
   1fbb0:	ret
   1fbb4:	stp	x29, x30, [sp, #-16]!
   1fbb8:	mov	x29, sp
   1fbbc:	mov	w2, w2
   1fbc0:	bl	1fad8 <PyInit__decimal@@Base+0x18fc4>
   1fbc4:	ldp	x29, x30, [sp], #16
   1fbc8:	ret
   1fbcc:	stp	x29, x30, [sp, #-16]!
   1fbd0:	mov	x29, sp
   1fbd4:	bl	1fa14 <PyInit__decimal@@Base+0x18f00>
   1fbd8:	ldp	x29, x30, [sp], #16
   1fbdc:	ret
   1fbe0:	stp	x29, x30, [sp, #-16]!
   1fbe4:	mov	x29, sp
   1fbe8:	bl	1fad8 <PyInit__decimal@@Base+0x18fc4>
   1fbec:	ldp	x29, x30, [sp], #16
   1fbf0:	ret
   1fbf4:	sub	sp, sp, #0xa0
   1fbf8:	stp	x29, x30, [sp, #96]
   1fbfc:	str	x23, [sp, #112]
   1fc00:	stp	x22, x21, [sp, #128]
   1fc04:	stp	x20, x19, [sp, #144]
   1fc08:	add	x29, sp, #0x60
   1fc0c:	mov	w8, #0x1                   	// #1
   1fc10:	mov	w9, #0x90                  	// #144
   1fc14:	str	x8, [x29, #24]
   1fc18:	strb	w9, [sp]
   1fc1c:	ldr	x9, [x2, #16]
   1fc20:	ldr	x10, [x2]
   1fc24:	stp	x8, x8, [sp, #24]
   1fc28:	mov	x19, x3
   1fc2c:	mov	x22, x2
   1fc30:	sub	x9, x9, x10
   1fc34:	add	x10, x29, #0x18
   1fc38:	stp	x9, x8, [sp, #8]
   1fc3c:	str	x10, [sp, #40]
   1fc40:	ldrb	w8, [x1]
   1fc44:	mov	x21, x1
   1fc48:	mov	x20, x0
   1fc4c:	tst	w8, #0xe
   1fc50:	b.eq	1fcb0 <PyInit__decimal@@Base+0x1919c>  // b.none
   1fc54:	mov	x0, x20
   1fc58:	mov	x1, x21
   1fc5c:	mov	x2, x22
   1fc60:	mov	x3, x19
   1fc64:	bl	19544 <PyInit__decimal@@Base+0x12a30>
   1fc68:	cbnz	w0, 1fd44 <PyInit__decimal@@Base+0x19230>
   1fc6c:	ldrb	w8, [x21]
   1fc70:	tbnz	w8, #0, 1fd34 <PyInit__decimal@@Base+0x19220>
   1fc74:	ldrb	w8, [x20]
   1fc78:	mov	x0, x20
   1fc7c:	mov	x1, x22
   1fc80:	mov	x2, x19
   1fc84:	and	w8, w8, #0xf0
   1fc88:	strb	w8, [x20]
   1fc8c:	bl	18b04 <PyInit__decimal@@Base+0x11ff0>
   1fc90:	ldrb	w8, [x20]
   1fc94:	tst	w8, #0xc
   1fc98:	b.ne	1fd44 <PyInit__decimal@@Base+0x19230>  // b.any
   1fc9c:	ldp	x9, x8, [x22]
   1fca0:	sub	x8, x8, x9
   1fca4:	add	x8, x8, #0x1
   1fca8:	str	x8, [x20, #8]
   1fcac:	b	1fd44 <PyInit__decimal@@Base+0x19230>
   1fcb0:	add	x0, sp, #0x30
   1fcb4:	mov	x1, x22
   1fcb8:	add	x23, sp, #0x30
   1fcbc:	bl	1fd5c <PyInit__decimal@@Base+0x19248>
   1fcc0:	mov	w8, #0x3                   	// #3
   1fcc4:	mov	x0, x20
   1fcc8:	mov	x1, x21
   1fccc:	mov	x2, x19
   1fcd0:	str	w8, [sp, #84]
   1fcd4:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1fcd8:	cbz	w0, 1fd44 <PyInit__decimal@@Base+0x19230>
   1fcdc:	add	x22, x23, #0x1c
   1fce0:	add	x1, sp, #0x30
   1fce4:	mov	x0, x20
   1fce8:	mov	x2, x22
   1fcec:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1fcf0:	ldr	w8, [sp, #76]
   1fcf4:	tst	w8, #0x3fe
   1fcf8:	b.ne	1fd1c <PyInit__decimal@@Base+0x19208>  // b.any
   1fcfc:	mov	x2, sp
   1fd00:	add	x3, sp, #0x30
   1fd04:	mov	x0, x20
   1fd08:	mov	x1, x21
   1fd0c:	mov	x4, x22
   1fd10:	str	wzr, [sp, #76]
   1fd14:	bl	1c64c <PyInit__decimal@@Base+0x15b38>
   1fd18:	ldr	w8, [sp, #76]
   1fd1c:	ldr	w9, [x19]
   1fd20:	mov	w10, #0x3be                 	// #958
   1fd24:	and	w8, w8, w10
   1fd28:	orr	w8, w9, w8
   1fd2c:	str	w8, [x19]
   1fd30:	b	1fd44 <PyInit__decimal@@Base+0x19230>
   1fd34:	mov	x0, x20
   1fd38:	mov	x1, x21
   1fd3c:	mov	x2, x19
   1fd40:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1fd44:	ldp	x20, x19, [sp, #144]
   1fd48:	ldp	x22, x21, [sp, #128]
   1fd4c:	ldr	x23, [sp, #112]
   1fd50:	ldp	x29, x30, [sp, #96]
   1fd54:	add	sp, sp, #0xa0
   1fd58:	ret
   1fd5c:	ldr	x8, [x1]
   1fd60:	str	x8, [x0]
   1fd64:	ldr	x8, [x1, #8]
   1fd68:	str	x8, [x0, #8]
   1fd6c:	ldr	x8, [x1, #16]
   1fd70:	str	x8, [x0, #16]
   1fd74:	ldr	w8, [x1, #36]
   1fd78:	str	xzr, [x0, #24]
   1fd7c:	stp	wzr, w8, [x0, #32]
   1fd80:	ldr	w8, [x1, #40]
   1fd84:	str	w8, [x0, #40]
   1fd88:	ldr	w8, [x1, #44]
   1fd8c:	str	w8, [x0, #44]
   1fd90:	ret
   1fd94:	sub	sp, sp, #0xa0
   1fd98:	stp	x29, x30, [sp, #96]
   1fd9c:	str	x23, [sp, #112]
   1fda0:	stp	x22, x21, [sp, #128]
   1fda4:	stp	x20, x19, [sp, #144]
   1fda8:	add	x29, sp, #0x60
   1fdac:	mov	w8, #0x1                   	// #1
   1fdb0:	mov	w9, #0x90                  	// #144
   1fdb4:	str	x8, [x29, #24]
   1fdb8:	strb	w9, [sp]
   1fdbc:	ldr	x9, [x2, #16]
   1fdc0:	ldr	x10, [x2]
   1fdc4:	stp	x8, x8, [sp, #24]
   1fdc8:	mov	x19, x3
   1fdcc:	mov	x22, x2
   1fdd0:	sub	x9, x9, x10
   1fdd4:	add	x10, x29, #0x18
   1fdd8:	stp	x9, x8, [sp, #8]
   1fddc:	str	x10, [sp, #40]
   1fde0:	ldrb	w8, [x1]
   1fde4:	mov	x21, x1
   1fde8:	mov	x20, x0
   1fdec:	tst	w8, #0xe
   1fdf0:	b.eq	1fe28 <PyInit__decimal@@Base+0x19314>  // b.none
   1fdf4:	mov	x0, x20
   1fdf8:	mov	x1, x21
   1fdfc:	mov	x2, x22
   1fe00:	mov	x3, x19
   1fe04:	bl	19544 <PyInit__decimal@@Base+0x12a30>
   1fe08:	cbnz	w0, 1fef0 <PyInit__decimal@@Base+0x193dc>
   1fe0c:	ldrb	w8, [x21]
   1fe10:	tbnz	w8, #0, 1feac <PyInit__decimal@@Base+0x19398>
   1fe14:	mov	x0, x20
   1fe18:	mov	x1, x21
   1fe1c:	mov	x2, x19
   1fe20:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1fe24:	b	1fef0 <PyInit__decimal@@Base+0x193dc>
   1fe28:	add	x0, sp, #0x30
   1fe2c:	mov	x1, x22
   1fe30:	add	x23, sp, #0x30
   1fe34:	bl	1fd5c <PyInit__decimal@@Base+0x19248>
   1fe38:	mov	w8, #0x2                   	// #2
   1fe3c:	mov	x0, x20
   1fe40:	mov	x1, x21
   1fe44:	mov	x2, x19
   1fe48:	str	w8, [sp, #84]
   1fe4c:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   1fe50:	cbz	w0, 1fef0 <PyInit__decimal@@Base+0x193dc>
   1fe54:	add	x22, x23, #0x1c
   1fe58:	add	x1, sp, #0x30
   1fe5c:	mov	x0, x20
   1fe60:	mov	x2, x22
   1fe64:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   1fe68:	ldr	w8, [sp, #76]
   1fe6c:	tst	w8, #0x3fe
   1fe70:	b.ne	1fe94 <PyInit__decimal@@Base+0x19380>  // b.any
   1fe74:	mov	x2, sp
   1fe78:	add	x3, sp, #0x30
   1fe7c:	mov	x0, x20
   1fe80:	mov	x1, x21
   1fe84:	mov	x4, x22
   1fe88:	str	wzr, [sp, #76]
   1fe8c:	bl	1c118 <PyInit__decimal@@Base+0x15604>
   1fe90:	ldr	w8, [sp, #76]
   1fe94:	ldr	w9, [x19]
   1fe98:	mov	w10, #0x3be                 	// #958
   1fe9c:	and	w8, w8, w10
   1fea0:	orr	w8, w9, w8
   1fea4:	str	w8, [x19]
   1fea8:	b	1fef0 <PyInit__decimal@@Base+0x193dc>
   1feac:	ldrb	w8, [x20]
   1feb0:	mov	x0, x20
   1feb4:	mov	x1, x22
   1feb8:	mov	x2, x19
   1febc:	and	w8, w8, #0xf0
   1fec0:	strb	w8, [x20]
   1fec4:	bl	18b04 <PyInit__decimal@@Base+0x11ff0>
   1fec8:	ldrb	w8, [x20]
   1fecc:	tst	w8, #0xc
   1fed0:	b.ne	1fef0 <PyInit__decimal@@Base+0x193dc>  // b.any
   1fed4:	and	w8, w8, #0xf0
   1fed8:	orr	w8, w8, #0x1
   1fedc:	strb	w8, [x20]
   1fee0:	ldp	x9, x8, [x22]
   1fee4:	sub	x8, x8, x9
   1fee8:	add	x8, x8, #0x1
   1feec:	str	x8, [x20, #8]
   1fef0:	ldp	x20, x19, [sp, #144]
   1fef4:	ldp	x22, x21, [sp, #128]
   1fef8:	ldr	x23, [sp, #112]
   1fefc:	ldp	x29, x30, [sp, #96]
   1ff00:	add	sp, sp, #0xa0
   1ff04:	ret
   1ff08:	stp	x29, x30, [sp, #-64]!
   1ff0c:	str	x23, [sp, #16]
   1ff10:	stp	x22, x21, [sp, #32]
   1ff14:	stp	x20, x19, [sp, #48]
   1ff18:	mov	x29, sp
   1ff1c:	mov	x19, x4
   1ff20:	mov	x21, x3
   1ff24:	mov	x23, x2
   1ff28:	mov	x22, x1
   1ff2c:	mov	x20, x0
   1ff30:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   1ff34:	cbz	w0, 1ff4c <PyInit__decimal@@Base+0x19438>
   1ff38:	ldp	x20, x19, [sp, #48]
   1ff3c:	ldp	x22, x21, [sp, #32]
   1ff40:	ldr	x23, [sp, #16]
   1ff44:	ldp	x29, x30, [sp], #64
   1ff48:	ret
   1ff4c:	mov	x0, x22
   1ff50:	mov	x1, x23
   1ff54:	bl	19cb8 <PyInit__decimal@@Base+0x131a4>
   1ff58:	cbz	w0, 1ffcc <PyInit__decimal@@Base+0x194b8>
   1ff5c:	tbnz	w0, #31, 1ffe4 <PyInit__decimal@@Base+0x194d0>
   1ff60:	mov	x0, x20
   1ff64:	mov	x1, x22
   1ff68:	mov	x2, x21
   1ff6c:	mov	x3, x19
   1ff70:	bl	1fbf4 <PyInit__decimal@@Base+0x190e0>
   1ff74:	ldrb	w8, [x20]
   1ff78:	tbnz	w8, #1, 20000 <PyInit__decimal@@Base+0x194ec>
   1ff7c:	ldp	x9, x10, [x20, #8]
   1ff80:	ldr	x11, [x21, #16]
   1ff84:	add	x9, x9, x10
   1ff88:	sub	x9, x9, #0x1
   1ff8c:	cmp	x9, x11
   1ff90:	b.ge	1ff38 <PyInit__decimal@@Base+0x19424>  // b.tcont
   1ff94:	ldr	w9, [x19]
   1ff98:	mov	w10, #0x7040                	// #28736
   1ff9c:	tst	w8, #0xe
   1ffa0:	orr	w10, w9, w10
   1ffa4:	str	w10, [x19]
   1ffa8:	b.ne	1ff38 <PyInit__decimal@@Base+0x19424>  // b.any
   1ffac:	ldr	x8, [x20, #40]
   1ffb0:	ldr	x10, [x20, #24]
   1ffb4:	add	x8, x8, x10, lsl #3
   1ffb8:	ldur	x8, [x8, #-8]
   1ffbc:	cbnz	x8, 1ff38 <PyInit__decimal@@Base+0x19424>
   1ffc0:	mov	w8, #0x7041                	// #28737
   1ffc4:	orr	w8, w9, w8
   1ffc8:	b	2000c <PyInit__decimal@@Base+0x194f8>
   1ffcc:	mov	x0, x20
   1ffd0:	mov	x1, x22
   1ffd4:	mov	x2, x23
   1ffd8:	mov	x3, x19
   1ffdc:	bl	19c24 <PyInit__decimal@@Base+0x13110>
   1ffe0:	b	1ff38 <PyInit__decimal@@Base+0x19424>
   1ffe4:	mov	x0, x20
   1ffe8:	mov	x1, x22
   1ffec:	mov	x2, x21
   1fff0:	mov	x3, x19
   1fff4:	bl	1fd94 <PyInit__decimal@@Base+0x19280>
   1fff8:	ldrb	w8, [x20]
   1fffc:	tbz	w8, #1, 1ff7c <PyInit__decimal@@Base+0x19468>
   20000:	ldr	w8, [x19]
   20004:	mov	w9, #0x1840                	// #6208
   20008:	orr	w8, w8, w9
   2000c:	str	w8, [x19]
   20010:	b	1ff38 <PyInit__decimal@@Base+0x19424>
   20014:	stp	x29, x30, [sp, #-80]!
   20018:	str	x25, [sp, #16]
   2001c:	stp	x24, x23, [sp, #32]
   20020:	stp	x22, x21, [sp, #48]
   20024:	stp	x20, x19, [sp, #64]
   20028:	mov	x29, sp
   2002c:	ldrb	w8, [x1]
   20030:	mov	x20, x4
   20034:	mov	x21, x3
   20038:	mov	x23, x2
   2003c:	mov	x24, x1
   20040:	tst	w8, #0xe
   20044:	mov	x19, x0
   20048:	b.ne	20058 <PyInit__decimal@@Base+0x19544>  // b.any
   2004c:	ldrb	w8, [x23]
   20050:	tst	w8, #0xe
   20054:	b.eq	20074 <PyInit__decimal@@Base+0x19560>  // b.none
   20058:	mov	x0, x19
   2005c:	mov	x1, x24
   20060:	mov	x2, x23
   20064:	mov	x3, x21
   20068:	mov	x4, x20
   2006c:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   20070:	cbnz	w0, 20204 <PyInit__decimal@@Base+0x196f0>
   20074:	mov	x0, x23
   20078:	bl	18cbc <PyInit__decimal@@Base+0x121a8>
   2007c:	cbz	w0, 20090 <PyInit__decimal@@Base+0x1957c>
   20080:	ldrb	w8, [x24]
   20084:	tbnz	w8, #0, 2009c <PyInit__decimal@@Base+0x19588>
   20088:	mov	w22, wzr
   2008c:	b	200ac <PyInit__decimal@@Base+0x19598>
   20090:	mov	w25, wzr
   20094:	mov	w22, wzr
   20098:	b	200b0 <PyInit__decimal@@Base+0x1959c>
   2009c:	mov	x0, x23
   200a0:	bl	18d34 <PyInit__decimal@@Base+0x12220>
   200a4:	cmp	w0, #0x0
   200a8:	cset	w22, ne  // ne = any
   200ac:	mov	w25, #0x1                   	// #1
   200b0:	ldrb	w8, [x24]
   200b4:	tst	w8, #0xe
   200b8:	b.eq	20100 <PyInit__decimal@@Base+0x195ec>  // b.none
   200bc:	mov	w9, wzr
   200c0:	cbz	w9, 2011c <PyInit__decimal@@Base+0x19608>
   200c4:	ldrb	w8, [x23]
   200c8:	tst	w8, #0xe
   200cc:	b.ne	200e4 <PyInit__decimal@@Base+0x195d0>  // b.any
   200d0:	ldr	x9, [x23, #40]
   200d4:	ldr	x10, [x23, #24]
   200d8:	add	x9, x9, x10, lsl #3
   200dc:	ldur	x9, [x9, #-8]
   200e0:	cbz	x9, 201ac <PyInit__decimal@@Base+0x19698>
   200e4:	tbnz	w8, #0, 201f4 <PyInit__decimal@@Base+0x196e0>
   200e8:	mov	x0, x19
   200ec:	mov	w1, w22
   200f0:	mov	x2, xzr
   200f4:	mov	x3, xzr
   200f8:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   200fc:	b	20204 <PyInit__decimal@@Base+0x196f0>
   20100:	ldr	x9, [x24, #40]
   20104:	ldr	x10, [x24, #24]
   20108:	add	x9, x9, x10, lsl #3
   2010c:	ldur	x9, [x9, #-8]
   20110:	cmp	x9, #0x0
   20114:	cset	w9, eq  // eq = none
   20118:	cbnz	w9, 200c4 <PyInit__decimal@@Base+0x195b0>
   2011c:	tbz	w8, #0, 2012c <PyInit__decimal@@Base+0x19618>
   20120:	cbz	w25, 201ac <PyInit__decimal@@Base+0x19698>
   20124:	ldrb	w9, [x23]
   20128:	tbnz	w9, #1, 201ac <PyInit__decimal@@Base+0x19698>
   2012c:	ldrb	w9, [x23]
   20130:	tbnz	w9, #1, 201c0 <PyInit__decimal@@Base+0x196ac>
   20134:	tst	w9, #0xe
   20138:	b.eq	2021c <PyInit__decimal@@Base+0x19708>  // b.none
   2013c:	mov	w10, wzr
   20140:	tbnz	w8, #1, 20238 <PyInit__decimal@@Base+0x19724>
   20144:	cbnz	w10, 2023c <PyInit__decimal@@Base+0x19728>
   20148:	mov	x0, x19
   2014c:	mov	x1, x24
   20150:	mov	x2, x23
   20154:	mov	w3, w22
   20158:	mov	x4, x21
   2015c:	mov	x5, x20
   20160:	bl	20390 <PyInit__decimal@@Base+0x1987c>
   20164:	cbz	w0, 20204 <PyInit__decimal@@Base+0x196f0>
   20168:	mov	x0, x19
   2016c:	mov	x1, x24
   20170:	mov	x2, x23
   20174:	mov	w3, w22
   20178:	mov	x4, x21
   2017c:	mov	x5, x20
   20180:	bl	204fc <PyInit__decimal@@Base+0x199e8>
   20184:	cbnz	w0, 20204 <PyInit__decimal@@Base+0x196f0>
   20188:	cbz	w25, 20254 <PyInit__decimal@@Base+0x19740>
   2018c:	mov	x0, x19
   20190:	mov	x1, x24
   20194:	mov	x2, x23
   20198:	mov	w3, w22
   2019c:	mov	x4, x21
   201a0:	mov	x5, x20
   201a4:	bl	2066c <PyInit__decimal@@Base+0x19b58>
   201a8:	b	20204 <PyInit__decimal@@Base+0x196f0>
   201ac:	mov	w1, #0x100                 	// #256
   201b0:	mov	x0, x19
   201b4:	mov	x2, x20
   201b8:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   201bc:	b	20204 <PyInit__decimal@@Base+0x196f0>
   201c0:	mov	x0, x19
   201c4:	mov	x1, x24
   201c8:	mov	w2, w22
   201cc:	mov	x3, x21
   201d0:	mov	x4, x20
   201d4:	bl	202f0 <PyInit__decimal@@Base+0x197dc>
   201d8:	cbz	w0, 20204 <PyInit__decimal@@Base+0x196f0>
   201dc:	ldrb	w8, [x23]
   201e0:	mov	w9, #0x1                   	// #1
   201e4:	ubfiz	w8, w8, #1, #1
   201e8:	sub	w8, w9, w8
   201ec:	mul	w8, w8, w0
   201f0:	tbnz	w8, #31, 200e8 <PyInit__decimal@@Base+0x195d4>
   201f4:	mov	w2, #0x2                   	// #2
   201f8:	mov	x0, x19
   201fc:	mov	w1, w22
   20200:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   20204:	ldp	x20, x19, [sp, #64]
   20208:	ldp	x22, x21, [sp, #48]
   2020c:	ldp	x24, x23, [sp, #32]
   20210:	ldr	x25, [sp, #16]
   20214:	ldp	x29, x30, [sp], #80
   20218:	ret
   2021c:	ldr	x10, [x23, #40]
   20220:	ldr	x11, [x23, #24]
   20224:	add	x10, x10, x11, lsl #3
   20228:	ldur	x10, [x10, #-8]
   2022c:	cmp	x10, #0x0
   20230:	cset	w10, eq  // eq = none
   20234:	tbz	w8, #1, 20144 <PyInit__decimal@@Base+0x19630>
   20238:	cbz	w10, 2024c <PyInit__decimal@@Base+0x19738>
   2023c:	mov	w2, #0x1                   	// #1
   20240:	mov	x0, x19
   20244:	mov	w1, w22
   20248:	b	200f4 <PyInit__decimal@@Base+0x195e0>
   2024c:	tbnz	w9, #0, 200e8 <PyInit__decimal@@Base+0x195d4>
   20250:	b	201f4 <PyInit__decimal@@Base+0x196e0>
   20254:	mov	x0, x19
   20258:	mov	x1, x24
   2025c:	mov	x2, x23
   20260:	mov	x3, x21
   20264:	mov	x4, x20
   20268:	bl	20898 <PyInit__decimal@@Base+0x19d84>
   2026c:	ldrb	w8, [x19]
   20270:	tst	w8, #0xe
   20274:	b.ne	202b4 <PyInit__decimal@@Base+0x197a0>  // b.any
   20278:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   2027c:	add	x1, x1, #0xc88
   20280:	mov	x0, x19
   20284:	bl	19cb8 <PyInit__decimal@@Base+0x131a4>
   20288:	cbnz	w0, 202b4 <PyInit__decimal@@Base+0x197a0>
   2028c:	ldr	x22, [x21]
   20290:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   20294:	add	x1, x1, #0xc88
   20298:	mov	x0, x19
   2029c:	sub	x2, x22, #0x1
   202a0:	mov	x3, x20
   202a4:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   202a8:	mov	w8, #0x1                   	// #1
   202ac:	sub	x8, x8, x22
   202b0:	str	x8, [x19, #8]
   202b4:	ldrb	w8, [x19]
   202b8:	tbz	w8, #1, 202dc <PyInit__decimal@@Base+0x197c8>
   202bc:	mov	x3, #0x1                   	// #1
   202c0:	movk	x3, #0x4ec8, lsl #16
   202c4:	movk	x3, #0x6d67, lsl #32
   202c8:	mov	w2, #0x1                   	// #1
   202cc:	movk	x3, #0x1bc1, lsl #48
   202d0:	mov	x0, x19
   202d4:	mov	w1, wzr
   202d8:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   202dc:	mov	x0, x19
   202e0:	mov	x1, x21
   202e4:	mov	x2, x20
   202e8:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   202ec:	b	20204 <PyInit__decimal@@Base+0x196f0>
   202f0:	stp	x29, x30, [sp, #-64]!
   202f4:	str	x23, [sp, #16]
   202f8:	stp	x22, x21, [sp, #32]
   202fc:	stp	x20, x19, [sp, #48]
   20300:	mov	x29, sp
   20304:	mov	x8, x1
   20308:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   2030c:	mov	x21, x0
   20310:	add	x1, x1, #0xc88
   20314:	mov	x0, x8
   20318:	mov	x19, x4
   2031c:	mov	x23, x3
   20320:	mov	w20, w2
   20324:	bl	19cb8 <PyInit__decimal@@Base+0x131a4>
   20328:	mov	w22, w0
   2032c:	cbnz	w0, 20378 <PyInit__decimal@@Base+0x19864>
   20330:	ldr	x23, [x23]
   20334:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   20338:	add	x1, x1, #0xc88
   2033c:	mov	x0, x21
   20340:	sub	x2, x23, #0x1
   20344:	mov	x3, x19
   20348:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   2034c:	ldrb	w8, [x21]
   20350:	mov	w9, #0x1                   	// #1
   20354:	sub	x9, x9, x23
   20358:	str	x9, [x21, #8]
   2035c:	and	w8, w8, #0xf0
   20360:	orr	w8, w8, w20
   20364:	strb	w8, [x21]
   20368:	ldr	w8, [x19]
   2036c:	mov	w9, #0x1040                	// #4160
   20370:	orr	w8, w8, w9
   20374:	str	w8, [x19]
   20378:	mov	w0, w22
   2037c:	ldp	x20, x19, [sp, #48]
   20380:	ldp	x22, x21, [sp, #32]
   20384:	ldr	x23, [sp, #16]
   20388:	ldp	x29, x30, [sp], #64
   2038c:	ret
   20390:	stp	x29, x30, [sp, #-80]!
   20394:	str	x25, [sp, #16]
   20398:	stp	x24, x23, [sp, #32]
   2039c:	stp	x22, x21, [sp, #48]
   203a0:	stp	x20, x19, [sp, #64]
   203a4:	mov	x29, sp
   203a8:	mov	x25, x1
   203ac:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   203b0:	mov	x21, x0
   203b4:	add	x1, x1, #0xc88
   203b8:	mov	x0, x25
   203bc:	mov	x22, x5
   203c0:	mov	x23, x4
   203c4:	mov	w20, w3
   203c8:	mov	x24, x2
   203cc:	str	wzr, [x29, #28]
   203d0:	bl	1a058 <PyInit__decimal@@Base+0x13544>
   203d4:	mov	w19, w0
   203d8:	cbz	w0, 203f8 <PyInit__decimal@@Base+0x198e4>
   203dc:	mov	w0, w19
   203e0:	ldp	x20, x19, [sp, #64]
   203e4:	ldp	x22, x21, [sp, #48]
   203e8:	ldp	x24, x23, [sp, #32]
   203ec:	ldr	x25, [sp, #16]
   203f0:	ldp	x29, x30, [sp], #80
   203f4:	ret
   203f8:	mov	x0, x24
   203fc:	bl	18ce8 <PyInit__decimal@@Base+0x121d4>
   20400:	cbz	w0, 2044c <PyInit__decimal@@Base+0x19938>
   20404:	ldrb	w8, [x24]
   20408:	tbnz	w8, #0, 20464 <PyInit__decimal@@Base+0x19950>
   2040c:	ldr	x8, [x25, #8]
   20410:	add	x4, x29, #0x1c
   20414:	mov	x0, x21
   20418:	mov	x1, x24
   2041c:	neg	x2, x8
   20420:	mov	x3, x23
   20424:	bl	1fa14 <PyInit__decimal@@Base+0x18f00>
   20428:	ldr	w8, [x29, #28]
   2042c:	mov	w9, #0x3be                 	// #958
   20430:	ands	w8, w8, w9
   20434:	b.eq	20488 <PyInit__decimal@@Base+0x19974>  // b.none
   20438:	ldr	w9, [x22]
   2043c:	mov	w19, wzr
   20440:	orr	w8, w9, w8
   20444:	str	w8, [x22]
   20448:	b	203dc <PyInit__decimal@@Base+0x198c8>
   2044c:	ldrb	w8, [x25]
   20450:	tbnz	w8, #0, 20480 <PyInit__decimal@@Base+0x1996c>
   20454:	ldr	x8, [x23]
   20458:	sub	x24, x8, #0x1
   2045c:	mov	w8, #0x1040                	// #4160
   20460:	b	204b0 <PyInit__decimal@@Base+0x1999c>
   20464:	mov	w2, #0x1                   	// #1
   20468:	mov	x0, x21
   2046c:	mov	w1, w20
   20470:	mov	x3, xzr
   20474:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   20478:	mov	w19, wzr
   2047c:	b	203dc <PyInit__decimal@@Base+0x198c8>
   20480:	mov	w19, #0xfffffffe            	// #-2
   20484:	b	203dc <PyInit__decimal@@Base+0x198c8>
   20488:	add	x1, x29, #0x1c
   2048c:	mov	x0, x21
   20490:	bl	19444 <PyInit__decimal@@Base+0x12930>
   20494:	ldr	x8, [x23]
   20498:	mov	x24, x0
   2049c:	sub	x9, x8, #0x1
   204a0:	cmp	x0, x9
   204a4:	b.le	204bc <PyInit__decimal@@Base+0x199a8>
   204a8:	mov	w8, #0x1000                	// #4096
   204ac:	mov	x24, x9
   204b0:	ldr	w9, [x22]
   204b4:	orr	w8, w9, w8
   204b8:	str	w8, [x22]
   204bc:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   204c0:	add	x1, x1, #0xc88
   204c4:	mov	x0, x21
   204c8:	mov	x2, x24
   204cc:	mov	x3, x22
   204d0:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   204d4:	cbz	w0, 204f4 <PyInit__decimal@@Base+0x199e0>
   204d8:	ldrb	w8, [x21]
   204dc:	neg	x9, x24
   204e0:	str	x9, [x21, #8]
   204e4:	and	w8, w8, #0xf0
   204e8:	orr	w8, w8, w20
   204ec:	strb	w8, [x21]
   204f0:	b	203dc <PyInit__decimal@@Base+0x198c8>
   204f4:	mov	w19, wzr
   204f8:	b	203dc <PyInit__decimal@@Base+0x198c8>
   204fc:	sub	sp, sp, #0x80
   20500:	stp	x29, x30, [sp, #48]
   20504:	stp	x26, x25, [sp, #64]
   20508:	stp	x24, x23, [sp, #80]
   2050c:	stp	x22, x21, [sp, #96]
   20510:	stp	x20, x19, [sp, #112]
   20514:	add	x29, sp, #0x30
   20518:	ldrb	w8, [x1]
   2051c:	mov	w9, #0x50                  	// #80
   20520:	mov	x22, x0
   20524:	mov	x0, sp
   20528:	bfxil	w9, w8, #0, #4
   2052c:	strb	w9, [sp]
   20530:	ldr	x8, [x1, #8]
   20534:	and	w9, w9, #0xfffffffe
   20538:	mov	x19, x5
   2053c:	mov	x20, x4
   20540:	str	x8, [sp, #8]
   20544:	ldr	x8, [x1, #16]
   20548:	mov	w21, w3
   2054c:	mov	x23, x2
   20550:	str	x8, [sp, #16]
   20554:	ldr	x8, [x1, #24]
   20558:	str	x8, [sp, #24]
   2055c:	ldr	x8, [x1, #32]
   20560:	str	x8, [sp, #32]
   20564:	ldr	x8, [x1, #40]
   20568:	strb	w9, [sp]
   2056c:	mov	x1, x5
   20570:	str	x8, [sp, #40]
   20574:	ldp	x25, x26, [x2, #8]
   20578:	bl	25d68 <PyInit__decimal@@Base+0x1f254>
   2057c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   20580:	cmp	x0, x8
   20584:	b.ne	205a0 <PyInit__decimal@@Base+0x19a8c>  // b.any
   20588:	mov	w1, #0x200                 	// #512
   2058c:	mov	x0, x22
   20590:	mov	x2, x19
   20594:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   20598:	mov	w23, #0x1                   	// #1
   2059c:	b	2064c <PyInit__decimal@@Base+0x19b38>
   205a0:	ldp	x8, x9, [sp, #8]
   205a4:	ldrb	w11, [x23]
   205a8:	add	x10, x25, x26
   205ac:	mov	x24, x0
   205b0:	add	x8, x8, x9
   205b4:	sub	x8, x8, #0x1
   205b8:	lsr	x8, x8, #63
   205bc:	and	w9, w11, #0x1
   205c0:	cmp	w9, w8
   205c4:	sub	x25, x10, #0x1
   205c8:	b.ne	205f8 <PyInit__decimal@@Base+0x19ae4>  // b.any
   205cc:	ldr	x0, [x20, #8]
   205d0:	bl	1820c <PyInit__decimal@@Base+0x116f8>
   205d4:	add	x8, x24, x25
   205d8:	cmp	x8, w0, sxtw
   205dc:	b.le	20648 <PyInit__decimal@@Base+0x19b34>
   205e0:	mov	x3, #0x1                   	// #1
   205e4:	movk	x3, #0x4ec8, lsl #16
   205e8:	movk	x3, #0x6d67, lsl #32
   205ec:	mov	w2, #0x1                   	// #1
   205f0:	movk	x3, #0x1bc1, lsl #48
   205f4:	b	20624 <PyInit__decimal@@Base+0x19b10>
   205f8:	ldr	x8, [x20, #16]
   205fc:	ldr	x9, [x20]
   20600:	sub	x8, x8, x9
   20604:	add	x23, x8, #0x1
   20608:	mov	x0, x23
   2060c:	bl	1820c <PyInit__decimal@@Base+0x116f8>
   20610:	add	x8, x24, x25
   20614:	cmp	x8, w0, sxtw
   20618:	b.le	20648 <PyInit__decimal@@Base+0x19b34>
   2061c:	sub	x3, x23, #0x1
   20620:	mov	w2, #0x1                   	// #1
   20624:	mov	x0, x22
   20628:	mov	w1, w21
   2062c:	mov	w23, #0x1                   	// #1
   20630:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   20634:	mov	x0, x22
   20638:	mov	x1, x20
   2063c:	mov	x2, x19
   20640:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   20644:	b	2064c <PyInit__decimal@@Base+0x19b38>
   20648:	mov	w23, wzr
   2064c:	mov	w0, w23
   20650:	ldp	x20, x19, [sp, #112]
   20654:	ldp	x22, x21, [sp, #96]
   20658:	ldp	x24, x23, [sp, #80]
   2065c:	ldp	x26, x25, [sp, #64]
   20660:	ldp	x29, x30, [sp, #48]
   20664:	add	sp, sp, #0x80
   20668:	ret
   2066c:	stp	x29, x30, [sp, #-80]!
   20670:	str	x28, [sp, #16]
   20674:	stp	x24, x23, [sp, #32]
   20678:	stp	x22, x21, [sp, #48]
   2067c:	stp	x20, x19, [sp, #64]
   20680:	mov	x29, sp
   20684:	sub	sp, sp, #0x490
   20688:	add	x10, sp, #0x260
   2068c:	mov	x24, x1
   20690:	mov	x21, x0
   20694:	mov	w8, #0x30                  	// #48
   20698:	mov	w9, #0x40                  	// #64
   2069c:	str	x10, [sp, #600]
   206a0:	add	x10, sp, #0x30
   206a4:	sub	x0, x29, #0x30
   206a8:	mov	x1, x4
   206ac:	mov	x19, x5
   206b0:	mov	x20, x4
   206b4:	mov	w22, w3
   206b8:	mov	x23, x2
   206bc:	str	xzr, [sp, #568]
   206c0:	str	xzr, [sp, #576]
   206c4:	stp	xzr, xzr, [sp, #8]
   206c8:	strb	w8, [sp, #560]
   206cc:	str	xzr, [sp, #584]
   206d0:	str	x9, [sp, #592]
   206d4:	strb	w8, [sp]
   206d8:	stp	xzr, x9, [sp, #24]
   206dc:	str	x10, [sp, #40]
   206e0:	bl	1fd5c <PyInit__decimal@@Base+0x19248>
   206e4:	ldp	x9, x8, [x23, #8]
   206e8:	ldur	x10, [x29, #-48]
   206ec:	mov	w11, #0x6                   	// #6
   206f0:	stur	x11, [x29, #-12]
   206f4:	add	x8, x8, x9
   206f8:	add	x8, x8, x10
   206fc:	add	x8, x8, #0x2
   20700:	stur	x8, [x29, #-48]
   20704:	ldrb	w9, [x23]
   20708:	tbnz	w9, #0, 20724 <PyInit__decimal@@Base+0x19c10>
   2070c:	add	x0, sp, #0x230
   20710:	mov	x1, x24
   20714:	mov	x2, x19
   20718:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   2071c:	cbnz	w0, 20758 <PyInit__decimal@@Base+0x19c44>
   20720:	b	207f4 <PyInit__decimal@@Base+0x19ce0>
   20724:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   20728:	add	x8, x8, #0x1
   2072c:	add	x1, x1, #0xc88
   20730:	add	x0, sp, #0x230
   20734:	sub	x3, x29, #0x30
   20738:	mov	x2, x24
   2073c:	mov	x4, x19
   20740:	stur	x8, [x29, #-48]
   20744:	bl	1cad0 <PyInit__decimal@@Base+0x15fbc>
   20748:	ldrh	w8, [x19]
   2074c:	mov	w9, #0x3be                 	// #958
   20750:	tst	w8, w9
   20754:	b.ne	207f4 <PyInit__decimal@@Base+0x19ce0>  // b.any
   20758:	sub	x8, x29, #0x30
   2075c:	add	x1, x8, #0x1c
   20760:	mov	x0, x23
   20764:	bl	19424 <PyInit__decimal@@Base+0x12910>
   20768:	ldurb	w8, [x29, #-19]
   2076c:	tbnz	w8, #0, 20798 <PyInit__decimal@@Base+0x19c84>
   20770:	mov	x2, x0
   20774:	add	x1, sp, #0x230
   20778:	sub	x4, x29, #0x30
   2077c:	mov	x0, x21
   20780:	mov	w3, w22
   20784:	mov	x5, x19
   20788:	bl	24b34 <PyInit__decimal@@Base+0x1e020>
   2078c:	ldrb	w8, [x21]
   20790:	tbnz	w8, #1, 207d0 <PyInit__decimal@@Base+0x19cbc>
   20794:	b	20804 <PyInit__decimal@@Base+0x19cf0>
   20798:	mov	x0, sp
   2079c:	mov	x1, x23
   207a0:	mov	x2, x19
   207a4:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   207a8:	cbz	w0, 207f4 <PyInit__decimal@@Base+0x19ce0>
   207ac:	add	x1, sp, #0x230
   207b0:	mov	x2, sp
   207b4:	sub	x4, x29, #0x30
   207b8:	mov	x0, x21
   207bc:	mov	w3, w22
   207c0:	mov	x5, x19
   207c4:	bl	25ea0 <PyInit__decimal@@Base+0x1f38c>
   207c8:	ldrb	w8, [x21]
   207cc:	tbz	w8, #1, 20804 <PyInit__decimal@@Base+0x19cf0>
   207d0:	mov	x3, #0x1                   	// #1
   207d4:	movk	x3, #0x4ec8, lsl #16
   207d8:	movk	x3, #0x6d67, lsl #32
   207dc:	mov	w2, #0x1                   	// #1
   207e0:	movk	x3, #0x1bc1, lsl #48
   207e4:	mov	x0, x21
   207e8:	mov	w1, w22
   207ec:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   207f0:	b	20804 <PyInit__decimal@@Base+0x19cf0>
   207f4:	mov	w2, #0x4                   	// #4
   207f8:	mov	x0, x21
   207fc:	mov	w1, wzr
   20800:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   20804:	ldrb	w8, [sp, #560]
   20808:	cmp	w8, #0x1f
   2080c:	b.hi	20820 <PyInit__decimal@@Base+0x19d0c>  // b.pmore
   20810:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   20814:	ldr	x8, [x8, #1376]
   20818:	ldr	x0, [sp, #600]
   2081c:	blr	x8
   20820:	ldrb	w8, [sp, #560]
   20824:	tbnz	w8, #4, 20838 <PyInit__decimal@@Base+0x19d24>
   20828:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   2082c:	ldr	x8, [x8, #1376]
   20830:	add	x0, sp, #0x230
   20834:	blr	x8
   20838:	ldrb	w8, [sp]
   2083c:	cmp	w8, #0x1f
   20840:	b.hi	20854 <PyInit__decimal@@Base+0x19d40>  // b.pmore
   20844:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   20848:	ldr	x8, [x8, #1376]
   2084c:	ldr	x0, [sp, #40]
   20850:	blr	x8
   20854:	ldrb	w8, [sp]
   20858:	tbnz	w8, #4, 2086c <PyInit__decimal@@Base+0x19d58>
   2085c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   20860:	ldr	x8, [x8, #1376]
   20864:	mov	x0, sp
   20868:	blr	x8
   2086c:	mov	x0, x21
   20870:	mov	x1, x20
   20874:	mov	x2, x19
   20878:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   2087c:	add	sp, sp, #0x490
   20880:	ldp	x20, x19, [sp, #64]
   20884:	ldp	x22, x21, [sp, #48]
   20888:	ldp	x24, x23, [sp, #32]
   2088c:	ldr	x28, [sp, #16]
   20890:	ldp	x29, x30, [sp], #80
   20894:	ret
   20898:	stp	x29, x30, [sp, #-64]!
   2089c:	stp	x28, x23, [sp, #16]
   208a0:	stp	x22, x21, [sp, #32]
   208a4:	stp	x20, x19, [sp, #48]
   208a8:	mov	x29, sp
   208ac:	sub	sp, sp, #0x260
   208b0:	mov	x21, x1
   208b4:	mov	x20, x0
   208b8:	mov	w8, #0x30                  	// #48
   208bc:	mov	w9, #0x40                  	// #64
   208c0:	add	x10, sp, #0x30
   208c4:	mov	x0, sp
   208c8:	mov	x1, x2
   208cc:	mov	x2, x4
   208d0:	mov	x19, x4
   208d4:	mov	x22, x3
   208d8:	stp	xzr, xzr, [sp, #8]
   208dc:	strb	w8, [sp]
   208e0:	stp	xzr, x9, [sp, #24]
   208e4:	str	x10, [sp, #40]
   208e8:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   208ec:	cbz	w0, 209b8 <PyInit__decimal@@Base+0x19ea4>
   208f0:	sub	x0, x29, #0x30
   208f4:	sub	x23, x29, #0x30
   208f8:	bl	13964 <PyInit__decimal@@Base+0xce50>
   208fc:	ldr	x8, [x21, #16]
   20900:	ldr	x9, [x22]
   20904:	mov	w10, #0x6                   	// #6
   20908:	stur	w10, [x29, #-12]
   2090c:	sub	x2, x29, #0x30
   20910:	cmp	x8, x9
   20914:	csel	x8, x8, x9, gt
   20918:	add	x8, x8, #0x17
   2091c:	stur	x8, [x29, #-48]
   20920:	ldr	w8, [x22, #44]
   20924:	add	x22, x23, #0x1c
   20928:	mov	x0, x20
   2092c:	mov	x1, x21
   20930:	mov	x3, x22
   20934:	stur	w8, [x29, #-4]
   20938:	bl	1e92c <PyInit__decimal@@Base+0x17e18>
   2093c:	mov	x2, sp
   20940:	sub	x3, x29, #0x30
   20944:	mov	x0, x20
   20948:	mov	x1, x20
   2094c:	mov	x4, x22
   20950:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
   20954:	sub	x2, x29, #0x30
   20958:	mov	x0, x20
   2095c:	mov	x1, x20
   20960:	mov	x3, x19
   20964:	bl	1da34 <PyInit__decimal@@Base+0x16f20>
   20968:	ldrb	w8, [sp]
   2096c:	adrp	x20, 42000 <PyInit__decimal@@Base+0x3b4ec>
   20970:	cmp	w8, #0x1f
   20974:	b.hi	20984 <PyInit__decimal@@Base+0x19e70>  // b.pmore
   20978:	ldr	x8, [x20, #1376]
   2097c:	ldr	x0, [sp, #40]
   20980:	blr	x8
   20984:	ldrb	w8, [sp]
   20988:	tbnz	w8, #4, 20998 <PyInit__decimal@@Base+0x19e84>
   2098c:	ldr	x8, [x20, #1376]
   20990:	mov	x0, sp
   20994:	blr	x8
   20998:	ldur	w8, [x29, #-20]
   2099c:	ldr	w9, [x19]
   209a0:	and	w8, w8, #0x3fe
   209a4:	orr	w8, w8, w9
   209a8:	mov	w9, #0x1040                	// #4160
   209ac:	orr	w8, w8, w9
   209b0:	str	w8, [x19]
   209b4:	b	209c8 <PyInit__decimal@@Base+0x19eb4>
   209b8:	mov	w1, #0x200                 	// #512
   209bc:	mov	x0, x20
   209c0:	mov	x2, x19
   209c4:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   209c8:	add	sp, sp, #0x260
   209cc:	ldp	x20, x19, [sp, #48]
   209d0:	ldp	x22, x21, [sp, #32]
   209d4:	ldp	x28, x23, [sp, #16]
   209d8:	ldp	x29, x30, [sp], #64
   209dc:	ret
   209e0:	stp	x29, x30, [sp, #-80]!
   209e4:	stp	x28, x25, [sp, #16]
   209e8:	stp	x24, x23, [sp, #32]
   209ec:	stp	x22, x21, [sp, #48]
   209f0:	stp	x20, x19, [sp, #64]
   209f4:	mov	x29, sp
   209f8:	sub	sp, sp, #0x960
   209fc:	add	x10, sp, #0x730
   20a00:	str	x10, [sp, #1832]
   20a04:	add	x10, sp, #0x500
   20a08:	mov	w8, #0x30                  	// #48
   20a0c:	str	x10, [sp, #1272]
   20a10:	add	x10, sp, #0x2d0
   20a14:	mov	w9, #0x40                  	// #64
   20a18:	str	x10, [sp, #712]
   20a1c:	add	x10, sp, #0xa0
   20a20:	strb	w8, [sp, #1792]
   20a24:	strb	w8, [sp, #1232]
   20a28:	strb	w8, [sp, #672]
   20a2c:	strb	w8, [sp, #112]
   20a30:	mov	w8, #0x2                   	// #2
   20a34:	str	x9, [sp, #1824]
   20a38:	str	x9, [sp, #1264]
   20a3c:	str	x9, [sp, #704]
   20a40:	stp	xzr, x9, [sp, #136]
   20a44:	mov	w9, #0x90                  	// #144
   20a48:	str	x10, [sp, #152]
   20a4c:	mov	w10, #0x1                   	// #1
   20a50:	str	x8, [sp, #104]
   20a54:	add	x8, sp, #0x68
   20a58:	str	xzr, [sp, #1800]
   20a5c:	str	xzr, [sp, #1808]
   20a60:	str	xzr, [sp, #1240]
   20a64:	str	xzr, [sp, #1248]
   20a68:	str	xzr, [sp, #680]
   20a6c:	str	xzr, [sp, #688]
   20a70:	stp	xzr, xzr, [sp, #120]
   20a74:	str	xzr, [sp, #1816]
   20a78:	str	xzr, [sp, #1256]
   20a7c:	str	xzr, [sp, #696]
   20a80:	strb	w9, [sp, #56]
   20a84:	stp	xzr, x10, [sp, #64]
   20a88:	stp	x10, x10, [sp, #80]
   20a8c:	str	x8, [sp, #96]
   20a90:	ldrb	w25, [x1]
   20a94:	mov	x19, x5
   20a98:	mov	x21, x4
   20a9c:	mov	x24, x3
   20aa0:	mov	x22, x2
   20aa4:	mov	x23, x1
   20aa8:	tst	w25, #0xe
   20aac:	mov	x20, x0
   20ab0:	b.ne	20acc <PyInit__decimal@@Base+0x19fb8>  // b.any
   20ab4:	ldrb	w8, [x22]
   20ab8:	tst	w8, #0xe
   20abc:	b.ne	20acc <PyInit__decimal@@Base+0x19fb8>  // b.any
   20ac0:	ldrb	w8, [x24]
   20ac4:	tst	w8, #0xe
   20ac8:	b.eq	20b18 <PyInit__decimal@@Base+0x1a004>  // b.none
   20acc:	mov	x0, x20
   20ad0:	mov	x1, x23
   20ad4:	mov	x2, x22
   20ad8:	mov	x3, x24
   20adc:	mov	x4, x21
   20ae0:	mov	x5, x19
   20ae4:	bl	20f54 <PyInit__decimal@@Base+0x1a440>
   20ae8:	cbnz	w0, 20afc <PyInit__decimal@@Base+0x19fe8>
   20aec:	mov	w1, #0x100                 	// #256
   20af0:	mov	x0, x20
   20af4:	mov	x2, x19
   20af8:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   20afc:	add	sp, sp, #0x960
   20b00:	ldp	x20, x19, [sp, #64]
   20b04:	ldp	x22, x21, [sp, #48]
   20b08:	ldp	x24, x23, [sp, #32]
   20b0c:	ldp	x28, x25, [sp, #16]
   20b10:	ldp	x29, x30, [sp], #80
   20b14:	ret
   20b18:	mov	x0, x23
   20b1c:	bl	18ce8 <PyInit__decimal@@Base+0x121d4>
   20b20:	cbz	w0, 20aec <PyInit__decimal@@Base+0x19fd8>
   20b24:	mov	x0, x22
   20b28:	bl	18ce8 <PyInit__decimal@@Base+0x121d4>
   20b2c:	cbz	w0, 20aec <PyInit__decimal@@Base+0x19fd8>
   20b30:	mov	x0, x24
   20b34:	bl	18ce8 <PyInit__decimal@@Base+0x121d4>
   20b38:	cbz	w0, 20aec <PyInit__decimal@@Base+0x19fd8>
   20b3c:	ldr	x8, [x24, #40]
   20b40:	ldr	x9, [x24, #24]
   20b44:	add	x8, x8, x9, lsl #3
   20b48:	ldur	x8, [x8, #-8]
   20b4c:	cbz	x8, 20aec <PyInit__decimal@@Base+0x19fd8>
   20b50:	ldp	x9, x8, [x24, #8]
   20b54:	ldr	x10, [x21]
   20b58:	add	x8, x9, x8
   20b5c:	cmp	x8, x10
   20b60:	b.gt	20aec <PyInit__decimal@@Base+0x19fd8>
   20b64:	tbnz	w25, #0, 20b70 <PyInit__decimal@@Base+0x1a05c>
   20b68:	mov	w21, wzr
   20b6c:	b	20b80 <PyInit__decimal@@Base+0x1a06c>
   20b70:	mov	x0, x22
   20b74:	bl	18d34 <PyInit__decimal@@Base+0x12220>
   20b78:	cmp	w0, #0x0
   20b7c:	cset	w21, ne  // ne = any
   20b80:	ldr	x8, [x22, #40]
   20b84:	ldr	x9, [x22, #24]
   20b88:	add	x8, x8, x9, lsl #3
   20b8c:	ldur	x8, [x8, #-8]
   20b90:	cbz	x8, 20bf4 <PyInit__decimal@@Base+0x1a0e0>
   20b94:	ldrb	w8, [x22]
   20b98:	tbnz	w8, #0, 20aec <PyInit__decimal@@Base+0x19fd8>
   20b9c:	ldr	x8, [x23, #40]
   20ba0:	ldr	x9, [x23, #24]
   20ba4:	add	x8, x8, x9, lsl #3
   20ba8:	ldur	x8, [x8, #-8]
   20bac:	cbz	x8, 20c2c <PyInit__decimal@@Base+0x1a118>
   20bb0:	sub	x0, x29, #0x30
   20bb4:	sub	x25, x29, #0x30
   20bb8:	bl	13964 <PyInit__decimal@@Base+0xce50>
   20bbc:	add	x4, x25, #0x1c
   20bc0:	add	x0, sp, #0x2a0
   20bc4:	sub	x3, x29, #0x30
   20bc8:	mov	x1, x24
   20bcc:	mov	x2, xzr
   20bd0:	bl	21004 <PyInit__decimal@@Base+0x1a4f0>
   20bd4:	ldur	w8, [x29, #-20]
   20bd8:	mov	w9, #0x3be                 	// #958
   20bdc:	ands	w1, w8, w9
   20be0:	b.eq	20c44 <PyInit__decimal@@Base+0x1a130>  // b.none
   20be4:	mov	x0, x20
   20be8:	mov	x2, x19
   20bec:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   20bf0:	b	20da4 <PyInit__decimal@@Base+0x1a290>
   20bf4:	ldr	x8, [x23, #40]
   20bf8:	ldr	x9, [x23, #24]
   20bfc:	add	x8, x8, x9, lsl #3
   20c00:	ldur	x8, [x8, #-8]
   20c04:	cbz	x8, 20aec <PyInit__decimal@@Base+0x19fd8>
   20c08:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   20c0c:	add	x1, x1, #0xc88
   20c10:	mov	x0, x24
   20c14:	bl	1a058 <PyInit__decimal@@Base+0x13544>
   20c18:	cmp	w0, #0x0
   20c1c:	cset	w2, ne  // ne = any
   20c20:	mov	x0, x20
   20c24:	mov	w1, w21
   20c28:	b	20c38 <PyInit__decimal@@Base+0x1a124>
   20c2c:	mov	x0, x20
   20c30:	mov	w1, w21
   20c34:	mov	x2, xzr
   20c38:	mov	x3, xzr
   20c3c:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   20c40:	b	20afc <PyInit__decimal@@Base+0x19fe8>
   20c44:	ldrb	w8, [sp, #672]
   20c48:	add	x0, sp, #0x700
   20c4c:	sub	x2, x29, #0x30
   20c50:	mov	x1, x23
   20c54:	and	w8, w8, #0xfe
   20c58:	mov	x3, x19
   20c5c:	stur	wzr, [x29, #-20]
   20c60:	strb	w8, [sp, #672]
   20c64:	bl	21058 <PyInit__decimal@@Base+0x1a544>
   20c68:	ldrb	w8, [sp, #1792]
   20c6c:	ldr	x23, [sp, #1800]
   20c70:	add	x0, sp, #0x4d0
   20c74:	sub	x2, x29, #0x30
   20c78:	and	w8, w8, #0xfe
   20c7c:	mov	x1, x22
   20c80:	mov	x3, x19
   20c84:	strb	w8, [sp, #1792]
   20c88:	str	xzr, [sp, #1800]
   20c8c:	bl	21058 <PyInit__decimal@@Base+0x1a544>
   20c90:	ldr	x22, [sp, #1240]
   20c94:	add	x0, sp, #0x700
   20c98:	add	x1, sp, #0x700
   20c9c:	add	x2, sp, #0x2a0
   20ca0:	sub	x3, x29, #0x30
   20ca4:	mov	x4, x19
   20ca8:	str	xzr, [sp, #1240]
   20cac:	bl	21080 <PyInit__decimal@@Base+0x1a56c>
   20cb0:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   20cb4:	add	x1, x1, #0xc88
   20cb8:	mov	x0, x20
   20cbc:	mov	x2, x23
   20cc0:	mov	x3, x19
   20cc4:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   20cc8:	add	x2, sp, #0x2a0
   20ccc:	sub	x3, x29, #0x30
   20cd0:	mov	x0, x20
   20cd4:	mov	x1, x20
   20cd8:	mov	x4, x19
   20cdc:	bl	21080 <PyInit__decimal@@Base+0x1a56c>
   20ce0:	add	x0, sp, #0x700
   20ce4:	add	x1, sp, #0x700
   20ce8:	sub	x3, x29, #0x30
   20cec:	mov	x2, x20
   20cf0:	mov	x4, x19
   20cf4:	bl	211e0 <PyInit__decimal@@Base+0x1a6cc>
   20cf8:	add	x0, sp, #0x700
   20cfc:	add	x1, sp, #0x700
   20d00:	add	x2, sp, #0x2a0
   20d04:	sub	x3, x29, #0x30
   20d08:	mov	x4, x19
   20d0c:	bl	21080 <PyInit__decimal@@Base+0x1a56c>
   20d10:	ldrb	w8, [sp, #1792]
   20d14:	tst	w8, #0xe
   20d18:	b.ne	20d94 <PyInit__decimal@@Base+0x1a280>  // b.any
   20d1c:	ldrb	w8, [sp, #1232]
   20d20:	tst	w8, #0xe
   20d24:	b.ne	20d94 <PyInit__decimal@@Base+0x1a280>  // b.any
   20d28:	ldrb	w8, [sp, #672]
   20d2c:	tst	w8, #0xe
   20d30:	b.ne	20d94 <PyInit__decimal@@Base+0x1a280>  // b.any
   20d34:	cmp	x22, #0x1
   20d38:	b.lt	20d88 <PyInit__decimal@@Base+0x1a274>  // b.tstop
   20d3c:	add	x0, sp, #0x70
   20d40:	add	x1, sp, #0x700
   20d44:	add	x2, sp, #0x2a0
   20d48:	mov	x3, x19
   20d4c:	bl	21240 <PyInit__decimal@@Base+0x1a72c>
   20d50:	ldr	q0, [sp, #1792]
   20d54:	ldr	q1, [sp, #1808]
   20d58:	ldp	q2, q3, [sp, #112]
   20d5c:	subs	x22, x22, #0x1
   20d60:	stp	q0, q1, [sp, #112]
   20d64:	ldr	q0, [sp, #144]
   20d68:	ldr	q1, [sp, #1824]
   20d6c:	stp	q2, q3, [sp]
   20d70:	str	q2, [sp, #1792]
   20d74:	str	q0, [sp, #32]
   20d78:	str	q1, [sp, #144]
   20d7c:	str	q3, [sp, #1808]
   20d80:	str	q0, [sp, #1824]
   20d84:	b.ne	20d3c <PyInit__decimal@@Base+0x1a228>  // b.any
   20d88:	ldrb	w8, [sp, #1792]
   20d8c:	tst	w8, #0xe
   20d90:	b.eq	20e5c <PyInit__decimal@@Base+0x1a348>  // b.none
   20d94:	mov	w2, #0x4                   	// #4
   20d98:	mov	x0, x20
   20d9c:	mov	w1, wzr
   20da0:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   20da4:	ldrb	w8, [sp, #1792]
   20da8:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   20dac:	cmp	w8, #0x1f
   20db0:	b.hi	20dc0 <PyInit__decimal@@Base+0x1a2ac>  // b.pmore
   20db4:	ldr	x8, [x19, #1376]
   20db8:	ldr	x0, [sp, #1832]
   20dbc:	blr	x8
   20dc0:	ldrb	w8, [sp, #1792]
   20dc4:	tbnz	w8, #4, 20dd4 <PyInit__decimal@@Base+0x1a2c0>
   20dc8:	ldr	x8, [x19, #1376]
   20dcc:	add	x0, sp, #0x700
   20dd0:	blr	x8
   20dd4:	ldrb	w8, [sp, #1232]
   20dd8:	cmp	w8, #0x1f
   20ddc:	b.hi	20dec <PyInit__decimal@@Base+0x1a2d8>  // b.pmore
   20de0:	ldr	x8, [x19, #1376]
   20de4:	ldr	x0, [sp, #1272]
   20de8:	blr	x8
   20dec:	ldrb	w8, [sp, #1232]
   20df0:	tbnz	w8, #4, 20e00 <PyInit__decimal@@Base+0x1a2ec>
   20df4:	ldr	x8, [x19, #1376]
   20df8:	add	x0, sp, #0x4d0
   20dfc:	blr	x8
   20e00:	ldrb	w8, [sp, #672]
   20e04:	cmp	w8, #0x1f
   20e08:	b.hi	20e18 <PyInit__decimal@@Base+0x1a304>  // b.pmore
   20e0c:	ldr	x8, [x19, #1376]
   20e10:	ldr	x0, [sp, #712]
   20e14:	blr	x8
   20e18:	ldrb	w8, [sp, #672]
   20e1c:	tbnz	w8, #4, 20e2c <PyInit__decimal@@Base+0x1a318>
   20e20:	ldr	x8, [x19, #1376]
   20e24:	add	x0, sp, #0x2a0
   20e28:	blr	x8
   20e2c:	ldrb	w8, [sp, #112]
   20e30:	cmp	w8, #0x1f
   20e34:	b.hi	20e44 <PyInit__decimal@@Base+0x1a330>  // b.pmore
   20e38:	ldr	x8, [x19, #1376]
   20e3c:	ldr	x0, [sp, #152]
   20e40:	blr	x8
   20e44:	ldrb	w8, [sp, #112]
   20e48:	tbnz	w8, #4, 20afc <PyInit__decimal@@Base+0x19fe8>
   20e4c:	ldr	x8, [x19, #1376]
   20e50:	add	x0, sp, #0x70
   20e54:	blr	x8
   20e58:	b	20afc <PyInit__decimal@@Base+0x19fe8>
   20e5c:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   20e60:	add	x1, x1, #0xc88
   20e64:	mov	x0, x20
   20e68:	mov	x2, x19
   20e6c:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   20e70:	b	20ebc <PyInit__decimal@@Base+0x1a3a8>
   20e74:	add	x0, sp, #0x700
   20e78:	add	x1, sp, #0x700
   20e7c:	add	x2, sp, #0x700
   20e80:	sub	x3, x29, #0x30
   20e84:	mov	x4, x19
   20e88:	bl	211e0 <PyInit__decimal@@Base+0x1a6cc>
   20e8c:	add	x0, sp, #0x700
   20e90:	add	x1, sp, #0x700
   20e94:	add	x2, sp, #0x2a0
   20e98:	sub	x3, x29, #0x30
   20e9c:	mov	x4, x19
   20ea0:	bl	21080 <PyInit__decimal@@Base+0x1a56c>
   20ea4:	add	x0, sp, #0x4d0
   20ea8:	add	x1, sp, #0x4d0
   20eac:	add	x2, sp, #0x38
   20eb0:	sub	x3, x29, #0x30
   20eb4:	mov	x4, x19
   20eb8:	bl	1d6a8 <PyInit__decimal@@Base+0x16b94>
   20ebc:	ldrb	w8, [sp, #1232]
   20ec0:	ands	w8, w8, #0xe
   20ec4:	b.ne	20d94 <PyInit__decimal@@Base+0x1a280>  // b.any
   20ec8:	ldr	x9, [sp, #1272]
   20ecc:	ldr	x10, [sp, #1256]
   20ed0:	add	x9, x9, x10, lsl #3
   20ed4:	ldur	x9, [x9, #-8]
   20ed8:	cbz	x9, 20f1c <PyInit__decimal@@Base+0x1a408>
   20edc:	add	x0, sp, #0x4d0
   20ee0:	bl	18d34 <PyInit__decimal@@Base+0x12220>
   20ee4:	cbz	w0, 20e74 <PyInit__decimal@@Base+0x1a360>
   20ee8:	add	x2, sp, #0x700
   20eec:	sub	x3, x29, #0x30
   20ef0:	mov	x0, x20
   20ef4:	mov	x1, x20
   20ef8:	mov	x4, x19
   20efc:	bl	211e0 <PyInit__decimal@@Base+0x1a6cc>
   20f00:	add	x2, sp, #0x2a0
   20f04:	sub	x3, x29, #0x30
   20f08:	mov	x0, x20
   20f0c:	mov	x1, x20
   20f10:	mov	x4, x19
   20f14:	bl	21080 <PyInit__decimal@@Base+0x1a56c>
   20f18:	b	20e74 <PyInit__decimal@@Base+0x1a360>
   20f1c:	cbnz	w8, 20d94 <PyInit__decimal@@Base+0x1a280>
   20f20:	ldrb	w8, [sp, #1792]
   20f24:	tst	w8, #0xe
   20f28:	b.ne	20d94 <PyInit__decimal@@Base+0x1a280>  // b.any
   20f2c:	ldrb	w8, [sp, #672]
   20f30:	tst	w8, #0xe
   20f34:	b.ne	20d94 <PyInit__decimal@@Base+0x1a280>  // b.any
   20f38:	ldrb	w8, [x20]
   20f3c:	tst	w8, #0xe
   20f40:	b.ne	20d94 <PyInit__decimal@@Base+0x1a280>  // b.any
   20f44:	and	w8, w8, #0xfe
   20f48:	orr	w8, w8, w21
   20f4c:	strb	w8, [x20]
   20f50:	b	20da4 <PyInit__decimal@@Base+0x1a290>
   20f54:	stp	x29, x30, [sp, #-32]!
   20f58:	stp	x20, x19, [sp, #16]
   20f5c:	mov	x29, sp
   20f60:	ldrb	w9, [x1]
   20f64:	ldrb	w8, [x2]
   20f68:	ldrb	w10, [x3]
   20f6c:	orr	w11, w8, w9
   20f70:	orr	w11, w11, w10
   20f74:	tst	w11, #0xc
   20f78:	b.eq	20fa0 <PyInit__decimal@@Base+0x1a48c>  // b.none
   20f7c:	mov	x19, x4
   20f80:	mov	x20, x0
   20f84:	tbnz	w9, #3, 20fa8 <PyInit__decimal@@Base+0x1a494>
   20f88:	tbnz	w8, #3, 20fb0 <PyInit__decimal@@Base+0x1a49c>
   20f8c:	tbnz	w10, #3, 20fbc <PyInit__decimal@@Base+0x1a4a8>
   20f90:	tbnz	w9, #2, 20fcc <PyInit__decimal@@Base+0x1a4b8>
   20f94:	tst	w8, #0x4
   20f98:	csel	x1, x3, x2, eq  // eq = none
   20f9c:	b	20fcc <PyInit__decimal@@Base+0x1a4b8>
   20fa0:	mov	w0, wzr
   20fa4:	b	20ff8 <PyInit__decimal@@Base+0x1a4e4>
   20fa8:	ldr	w8, [x5]
   20fac:	b	20fc4 <PyInit__decimal@@Base+0x1a4b0>
   20fb0:	ldr	w8, [x5]
   20fb4:	mov	x1, x2
   20fb8:	b	20fc4 <PyInit__decimal@@Base+0x1a4b0>
   20fbc:	ldr	w8, [x5]
   20fc0:	mov	x1, x3
   20fc4:	orr	w8, w8, #0x100
   20fc8:	str	w8, [x5]
   20fcc:	mov	x0, x20
   20fd0:	mov	x2, x5
   20fd4:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   20fd8:	ldrb	w8, [x20]
   20fdc:	mov	x0, x20
   20fe0:	mov	x1, x19
   20fe4:	and	w8, w8, #0xfffffff1
   20fe8:	orr	w8, w8, #0x4
   20fec:	strb	w8, [x20]
   20ff0:	bl	19670 <PyInit__decimal@@Base+0x12b5c>
   20ff4:	mov	w0, #0x1                   	// #1
   20ff8:	ldp	x20, x19, [sp, #16]
   20ffc:	ldp	x29, x30, [sp], #32
   21000:	ret
   21004:	stp	x29, x30, [sp, #-16]!
   21008:	mov	x29, sp
   2100c:	mov	x8, #0xfffd                	// #65533
   21010:	movk	x8, #0x4ec7, lsl #16
   21014:	mov	x9, #0xfffe                	// #65534
   21018:	movk	x8, #0x6d67, lsl #32
   2101c:	movk	x9, #0xf62b, lsl #16
   21020:	movk	x8, #0x1bc1, lsl #48
   21024:	movk	x9, #0x241a, lsl #32
   21028:	add	x8, x2, x8
   2102c:	movk	x9, #0x29a2, lsl #48
   21030:	cmp	x8, x9
   21034:	b.cc	2104c <PyInit__decimal@@Base+0x1a538>  // b.lo, b.ul, b.last
   21038:	mov	w1, #0x100                 	// #256
   2103c:	mov	x2, x4
   21040:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   21044:	ldp	x29, x30, [sp], #16
   21048:	ret
   2104c:	bl	21a34 <PyInit__decimal@@Base+0x1af20>
   21050:	ldp	x29, x30, [sp], #16
   21054:	ret
   21058:	stp	x29, x30, [sp, #-16]!
   2105c:	mov	x29, sp
   21060:	mov	x4, x3
   21064:	mov	x3, x2
   21068:	mov	x2, x1
   2106c:	mov	x1, x0
   21070:	mov	w0, #0x1                   	// #1
   21074:	bl	21bf4 <PyInit__decimal@@Base+0x1b0e0>
   21078:	ldp	x29, x30, [sp], #16
   2107c:	ret
   21080:	stp	x29, x30, [sp, #-64]!
   21084:	stp	x28, x23, [sp, #16]
   21088:	stp	x22, x21, [sp, #32]
   2108c:	stp	x20, x19, [sp, #48]
   21090:	mov	x29, sp
   21094:	sub	sp, sp, #0x230
   21098:	mov	w8, #0x30                  	// #48
   2109c:	strb	w8, [sp]
   210a0:	mov	w8, #0x40                  	// #64
   210a4:	stp	xzr, x8, [sp, #24]
   210a8:	add	x8, sp, #0x30
   210ac:	stp	xzr, xzr, [sp, #8]
   210b0:	str	x8, [sp, #40]
   210b4:	ldrb	w8, [x1]
   210b8:	mov	x19, x4
   210bc:	mov	x21, x3
   210c0:	mov	x23, x2
   210c4:	mov	x22, x1
   210c8:	tst	w8, #0xe
   210cc:	mov	x20, x0
   210d0:	b.ne	210e0 <PyInit__decimal@@Base+0x1a5cc>  // b.any
   210d4:	ldrb	w8, [x23]
   210d8:	tst	w8, #0xe
   210dc:	b.eq	21120 <PyInit__decimal@@Base+0x1a60c>  // b.none
   210e0:	mov	x0, x20
   210e4:	mov	x1, x22
   210e8:	mov	x2, x23
   210ec:	mov	x3, x21
   210f0:	mov	x4, x19
   210f4:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   210f8:	cbnz	w0, 211bc <PyInit__decimal@@Base+0x1a6a8>
   210fc:	ldrb	w8, [x22]
   21100:	tbnz	w8, #1, 211ac <PyInit__decimal@@Base+0x1a698>
   21104:	ldrb	w8, [x23]
   21108:	tbz	w8, #1, 211dc <PyInit__decimal@@Base+0x1a6c8>
   2110c:	mov	x0, x20
   21110:	mov	x1, x22
   21114:	mov	x2, x19
   21118:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   2111c:	b	21184 <PyInit__decimal@@Base+0x1a670>
   21120:	ldr	x8, [x23, #40]
   21124:	ldr	x9, [x23, #24]
   21128:	add	x8, x8, x9, lsl #3
   2112c:	ldur	x8, [x8, #-8]
   21130:	cbz	x8, 21198 <PyInit__decimal@@Base+0x1a684>
   21134:	mov	x0, sp
   21138:	mov	x1, x20
   2113c:	mov	x2, x22
   21140:	mov	x3, x23
   21144:	mov	x4, x21
   21148:	mov	x5, x19
   2114c:	bl	1d1ec <PyInit__decimal@@Base+0x166d8>
   21150:	ldrb	w8, [sp]
   21154:	cmp	w8, #0x1f
   21158:	b.hi	2116c <PyInit__decimal@@Base+0x1a658>  // b.pmore
   2115c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   21160:	ldr	x8, [x8, #1376]
   21164:	ldr	x0, [sp, #40]
   21168:	blr	x8
   2116c:	ldrb	w8, [sp]
   21170:	tbnz	w8, #4, 21184 <PyInit__decimal@@Base+0x1a670>
   21174:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   21178:	ldr	x8, [x8, #1376]
   2117c:	mov	x0, sp
   21180:	blr	x8
   21184:	mov	x0, x20
   21188:	mov	x1, x21
   2118c:	mov	x2, x19
   21190:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   21194:	b	211bc <PyInit__decimal@@Base+0x1a6a8>
   21198:	ldr	x8, [x22, #40]
   2119c:	ldr	x9, [x22, #24]
   211a0:	add	x8, x8, x9, lsl #3
   211a4:	ldur	x8, [x8, #-8]
   211a8:	cbz	x8, 211d4 <PyInit__decimal@@Base+0x1a6c0>
   211ac:	mov	w1, #0x100                 	// #256
   211b0:	mov	x0, x20
   211b4:	mov	x2, x19
   211b8:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   211bc:	add	sp, sp, #0x230
   211c0:	ldp	x20, x19, [sp, #48]
   211c4:	ldp	x22, x21, [sp, #32]
   211c8:	ldp	x28, x23, [sp, #16]
   211cc:	ldp	x29, x30, [sp], #64
   211d0:	ret
   211d4:	mov	w1, #0x10                  	// #16
   211d8:	b	211b0 <PyInit__decimal@@Base+0x1a69c>
   211dc:	bl	6760 <abort@plt>
   211e0:	sub	sp, sp, #0x30
   211e4:	stp	x29, x30, [sp, #16]
   211e8:	stp	x20, x19, [sp, #32]
   211ec:	add	x29, sp, #0x10
   211f0:	mov	x19, x4
   211f4:	sub	x4, x29, #0x4
   211f8:	mov	x20, x0
   211fc:	stur	wzr, [x29, #-4]
   21200:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
   21204:	ldur	w8, [x29, #-4]
   21208:	ldr	w9, [x19]
   2120c:	mov	w10, #0x1041                	// #4161
   21210:	tst	w8, w10
   21214:	orr	w9, w9, w8
   21218:	str	w9, [x19]
   2121c:	b.eq	21230 <PyInit__decimal@@Base+0x1a71c>  // b.none
   21220:	mov	w1, #0x100                 	// #256
   21224:	mov	x0, x20
   21228:	mov	x2, x19
   2122c:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   21230:	ldp	x20, x19, [sp, #32]
   21234:	ldp	x29, x30, [sp, #16]
   21238:	add	sp, sp, #0x30
   2123c:	ret
   21240:	sub	sp, sp, #0x70
   21244:	stp	x29, x30, [sp, #48]
   21248:	str	x23, [sp, #64]
   2124c:	stp	x22, x21, [sp, #80]
   21250:	stp	x20, x19, [sp, #96]
   21254:	add	x29, sp, #0x30
   21258:	mov	x22, x0
   2125c:	mov	x0, sp
   21260:	mov	x19, x3
   21264:	mov	x20, x2
   21268:	mov	x21, x1
   2126c:	bl	13964 <PyInit__decimal@@Base+0xce50>
   21270:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   21274:	add	x1, x1, #0xc88
   21278:	mov	x0, x22
   2127c:	mov	x2, x19
   21280:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   21284:	mov	w23, #0xa                   	// #10
   21288:	b	212c4 <PyInit__decimal@@Base+0x1a7b0>
   2128c:	mov	x3, sp
   21290:	mov	x0, x21
   21294:	mov	x1, x21
   21298:	mov	x2, x21
   2129c:	mov	x4, x19
   212a0:	bl	211e0 <PyInit__decimal@@Base+0x1a6cc>
   212a4:	mov	x3, sp
   212a8:	mov	x0, x21
   212ac:	mov	x1, x21
   212b0:	mov	x2, x20
   212b4:	mov	x4, x19
   212b8:	bl	21080 <PyInit__decimal@@Base+0x1a56c>
   212bc:	lsr	x23, x23, #1
   212c0:	cbz	x23, 212fc <PyInit__decimal@@Base+0x1a7e8>
   212c4:	tbz	w23, #0, 2128c <PyInit__decimal@@Base+0x1a778>
   212c8:	mov	x3, sp
   212cc:	mov	x0, x22
   212d0:	mov	x1, x22
   212d4:	mov	x2, x21
   212d8:	mov	x4, x19
   212dc:	bl	211e0 <PyInit__decimal@@Base+0x1a6cc>
   212e0:	mov	x3, sp
   212e4:	mov	x0, x22
   212e8:	mov	x1, x22
   212ec:	mov	x2, x20
   212f0:	mov	x4, x19
   212f4:	bl	21080 <PyInit__decimal@@Base+0x1a56c>
   212f8:	b	2128c <PyInit__decimal@@Base+0x1a778>
   212fc:	ldp	x20, x19, [sp, #96]
   21300:	ldp	x22, x21, [sp, #80]
   21304:	ldr	x23, [sp, #64]
   21308:	ldp	x29, x30, [sp, #48]
   2130c:	add	sp, sp, #0x70
   21310:	ret
   21314:	stp	x29, x30, [sp, #-64]!
   21318:	str	x23, [sp, #16]
   2131c:	stp	x22, x21, [sp, #32]
   21320:	stp	x20, x19, [sp, #48]
   21324:	mov	x29, sp
   21328:	ldrb	w8, [x1]
   2132c:	mov	x19, x4
   21330:	mov	x21, x3
   21334:	mov	x23, x2
   21338:	mov	x22, x1
   2133c:	ands	w9, w8, #0xe
   21340:	mov	x20, x0
   21344:	b.ne	21354 <PyInit__decimal@@Base+0x1a840>  // b.any
   21348:	ldrb	w10, [x23]
   2134c:	tst	w10, #0xe
   21350:	b.eq	21394 <PyInit__decimal@@Base+0x1a880>  // b.none
   21354:	mov	x0, x20
   21358:	mov	x1, x22
   2135c:	mov	x2, x23
   21360:	mov	x3, x21
   21364:	mov	x4, x19
   21368:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   2136c:	cbnz	w0, 21498 <PyInit__decimal@@Base+0x1a984>
   21370:	ldrb	w8, [x22]
   21374:	tbz	w8, #1, 21488 <PyInit__decimal@@Base+0x1a974>
   21378:	ldrb	w8, [x23]
   2137c:	tbz	w8, #1, 21488 <PyInit__decimal@@Base+0x1a974>
   21380:	mov	x0, x20
   21384:	mov	x1, x22
   21388:	mov	x2, x19
   2138c:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   21390:	b	21498 <PyInit__decimal@@Base+0x1a984>
   21394:	ldr	x23, [x23, #8]
   21398:	ldr	x10, [x21, #8]
   2139c:	cmp	x23, x10
   213a0:	b.gt	21488 <PyInit__decimal@@Base+0x1a974>
   213a4:	ldr	x11, [x21, #16]
   213a8:	ldr	x10, [x21]
   213ac:	sub	x11, x11, x10
   213b0:	add	x11, x11, #0x1
   213b4:	cmp	x23, x11
   213b8:	b.lt	21488 <PyInit__decimal@@Base+0x1a974>  // b.tstop
   213bc:	cbnz	w9, 213d4 <PyInit__decimal@@Base+0x1a8c0>
   213c0:	ldr	x9, [x22, #40]
   213c4:	ldr	x11, [x22, #24]
   213c8:	add	x9, x9, x11, lsl #3
   213cc:	ldur	x9, [x9, #-8]
   213d0:	cbz	x9, 214ac <PyInit__decimal@@Base+0x1a998>
   213d4:	ldp	x8, x9, [x22, #8]
   213d8:	sub	x2, x8, x23
   213dc:	add	x8, x9, x2
   213e0:	cmp	x8, x10
   213e4:	b.gt	21488 <PyInit__decimal@@Base+0x1a974>
   213e8:	tbnz	x2, #63, 2140c <PyInit__decimal@@Base+0x1a8f8>
   213ec:	mov	x0, x20
   213f0:	mov	x1, x22
   213f4:	mov	x3, x19
   213f8:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   213fc:	cbz	w0, 21498 <PyInit__decimal@@Base+0x1a984>
   21400:	mov	w8, wzr
   21404:	str	x23, [x20, #8]
   21408:	b	21458 <PyInit__decimal@@Base+0x1a944>
   2140c:	neg	x2, x2
   21410:	mov	x0, x20
   21414:	mov	x1, x22
   21418:	mov	x3, x19
   2141c:	bl	1a604 <PyInit__decimal@@Base+0x13af0>
   21420:	cmn	x0, #0x1
   21424:	b.eq	21498 <PyInit__decimal@@Base+0x1a984>  // b.none
   21428:	mov	x22, x0
   2142c:	mov	x0, x20
   21430:	mov	x1, x22
   21434:	mov	x2, x21
   21438:	mov	x3, x19
   2143c:	str	x23, [x20, #8]
   21440:	bl	214e4 <PyInit__decimal@@Base+0x1a9d0>
   21444:	cbz	w0, 21498 <PyInit__decimal@@Base+0x1a984>
   21448:	cmp	x22, #0x0
   2144c:	mov	w8, #0x1040                	// #4160
   21450:	mov	w9, #0x1000                	// #4096
   21454:	csel	w8, w9, w8, eq  // eq = none
   21458:	ldp	x9, x10, [x20, #8]
   2145c:	ldr	x11, [x21, #8]
   21460:	add	x9, x9, x10
   21464:	sub	x9, x9, #0x1
   21468:	cmp	x9, x11
   2146c:	b.gt	21488 <PyInit__decimal@@Base+0x1a974>
   21470:	ldr	x10, [x21, #16]
   21474:	ldr	x11, [x21]
   21478:	sub	x10, x10, x11
   2147c:	add	x10, x10, #0x1
   21480:	cmp	x9, x10
   21484:	b.ge	214c4 <PyInit__decimal@@Base+0x1a9b0>  // b.tcont
   21488:	mov	w1, #0x100                 	// #256
   2148c:	mov	x0, x20
   21490:	mov	x2, x19
   21494:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   21498:	ldp	x20, x19, [sp, #48]
   2149c:	ldp	x22, x21, [sp, #32]
   214a0:	ldr	x23, [sp, #16]
   214a4:	ldp	x29, x30, [sp], #64
   214a8:	ret
   214ac:	and	w1, w8, #0x1
   214b0:	mov	x0, x20
   214b4:	mov	x2, xzr
   214b8:	mov	x3, x23
   214bc:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   214c0:	b	214d0 <PyInit__decimal@@Base+0x1a9bc>
   214c4:	ldr	w9, [x19]
   214c8:	orr	w8, w9, w8
   214cc:	str	w8, [x19]
   214d0:	mov	x0, x20
   214d4:	mov	x1, x21
   214d8:	mov	x2, x19
   214dc:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   214e0:	b	21498 <PyInit__decimal@@Base+0x1a984>
   214e4:	stp	x29, x30, [sp, #-48]!
   214e8:	str	x21, [sp, #16]
   214ec:	stp	x20, x19, [sp, #32]
   214f0:	mov	x29, sp
   214f4:	mov	x19, x3
   214f8:	mov	x21, x2
   214fc:	mov	x20, x0
   21500:	bl	237c4 <PyInit__decimal@@Base+0x1ccb0>
   21504:	cbz	w0, 215bc <PyInit__decimal@@Base+0x1aaa8>
   21508:	ldr	x0, [x20, #40]
   2150c:	ldr	x1, [x20, #24]
   21510:	bl	12518 <PyInit__decimal@@Base+0xba04>
   21514:	cbz	x0, 2158c <PyInit__decimal@@Base+0x1aa78>
   21518:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   2151c:	ldr	x10, [x8, #1344]
   21520:	ldp	x9, x8, [x20, #24]
   21524:	add	x11, x9, #0x1
   21528:	cmp	x10, x11
   2152c:	csinc	x1, x10, x9, ge  // ge = tcont
   21530:	cmp	x1, x8
   21534:	b.eq	21568 <PyInit__decimal@@Base+0x1aa54>  // b.none
   21538:	ldrb	w9, [x20]
   2153c:	tbnz	w9, #5, 21550 <PyInit__decimal@@Base+0x1aa3c>
   21540:	mov	x0, x20
   21544:	mov	x2, x19
   21548:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   2154c:	b	2156c <PyInit__decimal@@Base+0x1aa58>
   21550:	cmp	x1, x8
   21554:	b.le	21568 <PyInit__decimal@@Base+0x1aa54>
   21558:	mov	x0, x20
   2155c:	mov	x2, x19
   21560:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   21564:	b	2156c <PyInit__decimal@@Base+0x1aa58>
   21568:	mov	w0, #0x1                   	// #1
   2156c:	cbz	w0, 215c0 <PyInit__decimal@@Base+0x1aaac>
   21570:	ldr	x8, [x20, #40]
   21574:	ldr	x9, [x20, #24]
   21578:	mov	w10, #0x1                   	// #1
   2157c:	str	x10, [x8, x9, lsl #3]
   21580:	ldr	x8, [x20, #24]
   21584:	add	x8, x8, #0x1
   21588:	str	x8, [x20, #24]
   2158c:	mov	x0, x20
   21590:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   21594:	ldr	x8, [x20, #16]
   21598:	ldr	x9, [x21]
   2159c:	cmp	x8, x9
   215a0:	b.le	215bc <PyInit__decimal@@Base+0x1aaa8>
   215a4:	mov	w1, #0x100                 	// #256
   215a8:	mov	x0, x20
   215ac:	mov	x2, x19
   215b0:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   215b4:	mov	w0, wzr
   215b8:	b	215c0 <PyInit__decimal@@Base+0x1aaac>
   215bc:	mov	w0, #0x1                   	// #1
   215c0:	ldp	x20, x19, [sp, #32]
   215c4:	ldr	x21, [sp, #16]
   215c8:	ldp	x29, x30, [sp], #48
   215cc:	ret
   215d0:	stp	x29, x30, [sp, #-64]!
   215d4:	str	x23, [sp, #16]
   215d8:	stp	x22, x21, [sp, #32]
   215dc:	stp	x20, x19, [sp, #48]
   215e0:	mov	x29, sp
   215e4:	ldrb	w23, [x1]
   215e8:	mov	x21, x3
   215ec:	mov	x20, x2
   215f0:	mov	x22, x1
   215f4:	tst	w23, #0xe
   215f8:	mov	x19, x0
   215fc:	b.eq	21628 <PyInit__decimal@@Base+0x1ab14>  // b.none
   21600:	mov	x1, x22
   21604:	mov	x2, x20
   21608:	mov	x3, x21
   2160c:	bl	19544 <PyInit__decimal@@Base+0x12a30>
   21610:	cbnz	w0, 216c8 <PyInit__decimal@@Base+0x1abb4>
   21614:	mov	x0, x19
   21618:	mov	x1, x22
   2161c:	mov	x2, x21
   21620:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   21624:	b	216c8 <PyInit__decimal@@Base+0x1abb4>
   21628:	mov	x1, x22
   2162c:	mov	x2, x21
   21630:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   21634:	cbz	w0, 216c8 <PyInit__decimal@@Base+0x1abb4>
   21638:	mov	x0, x19
   2163c:	mov	x1, x20
   21640:	mov	x2, x21
   21644:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   21648:	ldrb	w8, [x19]
   2164c:	tst	w8, #0xe
   21650:	b.ne	216c8 <PyInit__decimal@@Base+0x1abb4>  // b.any
   21654:	ldr	x8, [x19, #40]
   21658:	ldr	x9, [x19, #24]
   2165c:	add	x8, x8, x9, lsl #3
   21660:	ldur	x8, [x8, #-8]
   21664:	cbz	x8, 216b4 <PyInit__decimal@@Base+0x1aba0>
   21668:	mov	x0, x19
   2166c:	bl	18c30 <PyInit__decimal@@Base+0x1211c>
   21670:	ldr	w9, [x20, #40]
   21674:	ldr	x8, [x20, #8]
   21678:	cbz	w9, 21688 <PyInit__decimal@@Base+0x1ab74>
   2167c:	ldr	x9, [x20]
   21680:	sub	x8, x8, x9
   21684:	add	x8, x8, #0x1
   21688:	ldr	x9, [x19, #8]
   2168c:	sub	x8, x8, x9
   21690:	cmp	x0, x8
   21694:	csel	x20, x8, x0, gt
   21698:	mov	x0, x19
   2169c:	mov	x1, x20
   216a0:	bl	1a340 <PyInit__decimal@@Base+0x1382c>
   216a4:	ldr	x8, [x19, #8]
   216a8:	add	x8, x20, x8
   216ac:	str	x8, [x19, #8]
   216b0:	b	216c8 <PyInit__decimal@@Base+0x1abb4>
   216b4:	and	w1, w23, #0x1
   216b8:	mov	x0, x19
   216bc:	mov	x2, xzr
   216c0:	mov	x3, xzr
   216c4:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   216c8:	ldp	x20, x19, [sp, #48]
   216cc:	ldp	x22, x21, [sp, #32]
   216d0:	ldr	x23, [sp, #16]
   216d4:	ldp	x29, x30, [sp], #64
   216d8:	ret
   216dc:	stp	x29, x30, [sp, #-96]!
   216e0:	stp	x28, x27, [sp, #16]
   216e4:	stp	x26, x25, [sp, #32]
   216e8:	stp	x24, x23, [sp, #48]
   216ec:	stp	x22, x21, [sp, #64]
   216f0:	stp	x20, x19, [sp, #80]
   216f4:	mov	x29, sp
   216f8:	sub	sp, sp, #0x490
   216fc:	add	x10, sp, #0x260
   21700:	mov	w8, #0x30                  	// #48
   21704:	mov	w9, #0x40                  	// #64
   21708:	str	x10, [sp, #600]
   2170c:	add	x10, sp, #0x30
   21710:	str	xzr, [sp, #568]
   21714:	str	xzr, [sp, #576]
   21718:	stp	xzr, xzr, [sp, #8]
   2171c:	strb	w8, [sp, #560]
   21720:	str	xzr, [sp, #584]
   21724:	str	x9, [sp, #592]
   21728:	strb	w8, [sp]
   2172c:	stp	xzr, x9, [sp, #24]
   21730:	str	x10, [sp, #40]
   21734:	ldrb	w8, [x1]
   21738:	mov	x19, x4
   2173c:	mov	x20, x3
   21740:	mov	x22, x2
   21744:	mov	x23, x1
   21748:	tst	w8, #0xe
   2174c:	mov	x21, x0
   21750:	b.ne	21760 <PyInit__decimal@@Base+0x1ac4c>  // b.any
   21754:	ldrb	w8, [x22]
   21758:	tst	w8, #0xe
   2175c:	b.eq	217b0 <PyInit__decimal@@Base+0x1ac9c>  // b.none
   21760:	mov	x0, x21
   21764:	mov	x1, x23
   21768:	mov	x2, x22
   2176c:	mov	x3, x20
   21770:	mov	x4, x19
   21774:	bl	197d0 <PyInit__decimal@@Base+0x12cbc>
   21778:	cbnz	w0, 2189c <PyInit__decimal@@Base+0x1ad88>
   2177c:	ldrb	w8, [x23]
   21780:	tbnz	w8, #1, 2188c <PyInit__decimal@@Base+0x1ad78>
   21784:	ldrb	w8, [x22]
   21788:	tbz	w8, #1, 219bc <PyInit__decimal@@Base+0x1aea8>
   2178c:	mov	x0, x21
   21790:	mov	x1, x23
   21794:	mov	x2, x19
   21798:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   2179c:	mov	x0, x21
   217a0:	mov	x1, x20
   217a4:	mov	x2, x19
   217a8:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   217ac:	b	2189c <PyInit__decimal@@Base+0x1ad88>
   217b0:	ldr	x8, [x22, #40]
   217b4:	ldr	x9, [x22, #24]
   217b8:	add	x8, x8, x9, lsl #3
   217bc:	ldur	x8, [x8, #-8]
   217c0:	cbz	x8, 21878 <PyInit__decimal@@Base+0x1ad64>
   217c4:	cmp	x21, x22
   217c8:	b.ne	217e4 <PyInit__decimal@@Base+0x1acd0>  // b.any
   217cc:	add	x0, sp, #0x230
   217d0:	mov	x1, x22
   217d4:	mov	x2, x19
   217d8:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   217dc:	add	x22, sp, #0x230
   217e0:	cbz	w0, 218c4 <PyInit__decimal@@Base+0x1adb0>
   217e4:	mov	x0, sp
   217e8:	mov	x1, x21
   217ec:	mov	x2, x23
   217f0:	mov	x3, x22
   217f4:	mov	x4, x20
   217f8:	mov	x5, x19
   217fc:	bl	1d1ec <PyInit__decimal@@Base+0x166d8>
   21800:	ldrb	w8, [sp]
   21804:	tst	w8, #0xc
   21808:	b.ne	21818 <PyInit__decimal@@Base+0x1ad04>  // b.any
   2180c:	ldrb	w8, [x21]
   21810:	tst	w8, #0xc
   21814:	b.eq	218cc <PyInit__decimal@@Base+0x1adb8>  // b.none
   21818:	ldrb	w8, [sp, #560]
   2181c:	adrp	x22, 42000 <PyInit__decimal@@Base+0x3b4ec>
   21820:	cmp	w8, #0x1f
   21824:	b.hi	21834 <PyInit__decimal@@Base+0x1ad20>  // b.pmore
   21828:	ldr	x8, [x22, #1376]
   2182c:	ldr	x0, [sp, #600]
   21830:	blr	x8
   21834:	ldrb	w8, [sp, #560]
   21838:	tbnz	w8, #4, 21848 <PyInit__decimal@@Base+0x1ad34>
   2183c:	ldr	x8, [x22, #1376]
   21840:	add	x0, sp, #0x230
   21844:	blr	x8
   21848:	ldrb	w8, [sp]
   2184c:	cmp	w8, #0x1f
   21850:	b.hi	21860 <PyInit__decimal@@Base+0x1ad4c>  // b.pmore
   21854:	ldr	x8, [x22, #1376]
   21858:	ldr	x0, [sp, #40]
   2185c:	blr	x8
   21860:	ldrb	w8, [sp]
   21864:	tbnz	w8, #4, 2179c <PyInit__decimal@@Base+0x1ac88>
   21868:	ldr	x8, [x22, #1376]
   2186c:	mov	x0, sp
   21870:	blr	x8
   21874:	b	2179c <PyInit__decimal@@Base+0x1ac88>
   21878:	ldr	x8, [x23, #40]
   2187c:	ldr	x9, [x23, #24]
   21880:	add	x8, x8, x9, lsl #3
   21884:	ldur	x8, [x8, #-8]
   21888:	cbz	x8, 218bc <PyInit__decimal@@Base+0x1ada8>
   2188c:	mov	w1, #0x100                 	// #256
   21890:	mov	x0, x21
   21894:	mov	x2, x19
   21898:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   2189c:	add	sp, sp, #0x490
   218a0:	ldp	x20, x19, [sp, #80]
   218a4:	ldp	x22, x21, [sp, #64]
   218a8:	ldp	x24, x23, [sp, #48]
   218ac:	ldp	x26, x25, [sp, #32]
   218b0:	ldp	x28, x27, [sp, #16]
   218b4:	ldp	x29, x30, [sp], #96
   218b8:	ret
   218bc:	mov	w1, #0x10                  	// #16
   218c0:	b	21890 <PyInit__decimal@@Base+0x1ad7c>
   218c4:	mov	w1, #0x200                 	// #512
   218c8:	b	21890 <PyInit__decimal@@Base+0x1ad7c>
   218cc:	ldr	x8, [x21, #40]
   218d0:	ldr	x9, [x21, #24]
   218d4:	add	x8, x8, x9, lsl #3
   218d8:	ldur	x8, [x8, #-8]
   218dc:	cbz	x8, 21818 <PyInit__decimal@@Base+0x1ad04>
   218e0:	ldp	x8, x9, [x22, #8]
   218e4:	ldp	x10, x11, [x21, #8]
   218e8:	add	x8, x8, x9
   218ec:	sub	x8, x8, x10
   218f0:	sub	x8, x8, x11
   218f4:	add	x8, x8, #0x1
   218f8:	cmp	x8, #0x2
   218fc:	b.hi	21818 <PyInit__decimal@@Base+0x1ad04>  // b.pmore
   21900:	mov	x0, sp
   21904:	bl	219c0 <PyInit__decimal@@Base+0x1aeac>
   21908:	ldr	x26, [sp, #16]
   2190c:	mov	w24, w0
   21910:	mov	x0, sp
   21914:	bl	18d34 <PyInit__decimal@@Base+0x12220>
   21918:	mov	w25, w0
   2191c:	sub	x0, x29, #0x30
   21920:	sub	x27, x29, #0x30
   21924:	bl	13964 <PyInit__decimal@@Base+0xce50>
   21928:	ldrb	w8, [x23]
   2192c:	ldrb	w9, [x22]
   21930:	add	x4, x27, #0x1c
   21934:	mov	x0, sp
   21938:	sub	x3, x29, #0x30
   2193c:	eor	w8, w9, w8
   21940:	mov	x1, x21
   21944:	mov	x2, x22
   21948:	tbnz	w8, #0, 21954 <PyInit__decimal@@Base+0x1ae40>
   2194c:	bl	21a0c <PyInit__decimal@@Base+0x1aef8>
   21950:	b	21958 <PyInit__decimal@@Base+0x1ae44>
   21954:	bl	1b758 <PyInit__decimal@@Base+0x14c44>
   21958:	ldur	w8, [x29, #-20]
   2195c:	mov	w9, #0x3be                 	// #958
   21960:	ands	w1, w8, w9
   21964:	b.eq	21978 <PyInit__decimal@@Base+0x1ae64>  // b.none
   21968:	mov	x0, x21
   2196c:	mov	x2, x19
   21970:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   21974:	b	21818 <PyInit__decimal@@Base+0x1ad04>
   21978:	mov	x0, sp
   2197c:	mov	x1, x21
   21980:	bl	1a058 <PyInit__decimal@@Base+0x13544>
   21984:	tbnz	w0, #31, 21990 <PyInit__decimal@@Base+0x1ae7c>
   21988:	cbz	w25, 21818 <PyInit__decimal@@Base+0x1ad04>
   2198c:	cbnz	w0, 21818 <PyInit__decimal@@Base+0x1ad04>
   21990:	cbz	w24, 219a8 <PyInit__decimal@@Base+0x1ae94>
   21994:	ldr	x8, [x20]
   21998:	cmp	x26, x8
   2199c:	b.ne	219a8 <PyInit__decimal@@Base+0x1ae94>  // b.any
   219a0:	mov	w1, #0x8                   	// #8
   219a4:	b	21968 <PyInit__decimal@@Base+0x1ae54>
   219a8:	mov	x1, sp
   219ac:	mov	x0, x21
   219b0:	mov	x2, x19
   219b4:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   219b8:	b	21818 <PyInit__decimal@@Base+0x1ad04>
   219bc:	bl	6760 <abort@plt>
   219c0:	stp	x29, x30, [sp, #-32]!
   219c4:	stp	x20, x19, [sp, #16]
   219c8:	mov	x29, sp
   219cc:	ldr	x8, [x0, #24]
   219d0:	ldr	x20, [x0, #40]
   219d4:	sub	x19, x8, #0x1
   219d8:	ldr	x0, [x20, x19, lsl #3]
   219dc:	bl	2602c <PyInit__decimal@@Base+0x1f518>
   219e0:	cbz	w0, 219fc <PyInit__decimal@@Base+0x1aee8>
   219e4:	mov	x0, x20
   219e8:	mov	x1, x19
   219ec:	bl	26160 <PyInit__decimal@@Base+0x1f64c>
   219f0:	cbz	w0, 219fc <PyInit__decimal@@Base+0x1aee8>
   219f4:	mov	w0, #0x1                   	// #1
   219f8:	b	21a00 <PyInit__decimal@@Base+0x1aeec>
   219fc:	mov	w0, wzr
   21a00:	ldp	x20, x19, [sp, #16]
   21a04:	ldp	x29, x30, [sp], #32
   21a08:	ret
   21a0c:	stp	x29, x30, [sp, #-16]!
   21a10:	mov	x29, sp
   21a14:	ldrb	w8, [x2]
   21a18:	mov	x5, x4
   21a1c:	mov	x4, x3
   21a20:	mvn	w8, w8
   21a24:	and	w3, w8, #0x1
   21a28:	bl	1c228 <PyInit__decimal@@Base+0x15714>
   21a2c:	ldp	x29, x30, [sp], #16
   21a30:	ret
   21a34:	stp	x29, x30, [sp, #-64]!
   21a38:	str	x23, [sp, #16]
   21a3c:	stp	x22, x21, [sp, #32]
   21a40:	stp	x20, x19, [sp, #48]
   21a44:	mov	x29, sp
   21a48:	ldrb	w8, [x1]
   21a4c:	mov	x19, x4
   21a50:	mov	x20, x0
   21a54:	tst	w8, #0xe
   21a58:	b.eq	21a7c <PyInit__decimal@@Base+0x1af68>  // b.none
   21a5c:	mov	x0, x20
   21a60:	mov	x2, x19
   21a64:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   21a68:	ldp	x20, x19, [sp, #48]
   21a6c:	ldp	x22, x21, [sp, #32]
   21a70:	ldr	x23, [sp, #16]
   21a74:	ldp	x29, x30, [sp], #64
   21a78:	ret
   21a7c:	ldr	x9, [x1, #40]
   21a80:	ldr	x10, [x1, #24]
   21a84:	mov	x22, x2
   21a88:	add	x9, x9, x10, lsl #3
   21a8c:	ldur	x9, [x9, #-8]
   21a90:	cbz	x9, 21ad8 <PyInit__decimal@@Base+0x1afc4>
   21a94:	ldr	x8, [x1, #8]
   21a98:	mov	x21, x3
   21a9c:	subs	x2, x8, x22
   21aa0:	b.mi	21af0 <PyInit__decimal@@Base+0x1afdc>  // b.first
   21aa4:	ldr	x8, [x1, #16]
   21aa8:	mov	x9, #0x1                   	// #1
   21aac:	movk	x9, #0xa764, lsl #16
   21ab0:	movk	x9, #0xb6b3, lsl #32
   21ab4:	add	x8, x8, x2
   21ab8:	movk	x9, #0xde0, lsl #48
   21abc:	cmp	x8, x9
   21ac0:	b.lt	21b44 <PyInit__decimal@@Base+0x1b030>  // b.tstop
   21ac4:	mov	w1, #0x100                 	// #256
   21ac8:	mov	x0, x20
   21acc:	mov	x2, x19
   21ad0:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   21ad4:	b	21a68 <PyInit__decimal@@Base+0x1af54>
   21ad8:	and	w1, w8, #0x1
   21adc:	mov	x0, x20
   21ae0:	mov	x2, xzr
   21ae4:	mov	x3, x22
   21ae8:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   21aec:	b	21a68 <PyInit__decimal@@Base+0x1af54>
   21af0:	neg	x2, x2
   21af4:	mov	x0, x20
   21af8:	mov	x3, x19
   21afc:	bl	1a604 <PyInit__decimal@@Base+0x13af0>
   21b00:	cmn	x0, #0x1
   21b04:	b.eq	21a68 <PyInit__decimal@@Base+0x1af54>  // b.none
   21b08:	mov	x23, x0
   21b0c:	mov	x0, x20
   21b10:	mov	x1, x23
   21b14:	mov	x2, x21
   21b18:	mov	x3, x19
   21b1c:	str	x22, [x20, #8]
   21b20:	bl	1e7f8 <PyInit__decimal@@Base+0x17ce4>
   21b24:	ldr	w8, [x19]
   21b28:	orr	w9, w8, #0x1000
   21b2c:	str	w9, [x19]
   21b30:	cbz	x23, 21b58 <PyInit__decimal@@Base+0x1b044>
   21b34:	mov	w9, #0x1040                	// #4160
   21b38:	orr	w8, w8, w9
   21b3c:	str	w8, [x19]
   21b40:	b	21b58 <PyInit__decimal@@Base+0x1b044>
   21b44:	mov	x0, x20
   21b48:	mov	x3, x19
   21b4c:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   21b50:	cbz	w0, 21a68 <PyInit__decimal@@Base+0x1af54>
   21b54:	str	x22, [x20, #8]
   21b58:	mov	x0, x20
   21b5c:	mov	x1, x21
   21b60:	bl	18464 <PyInit__decimal@@Base+0x11950>
   21b64:	cbz	w0, 21a68 <PyInit__decimal@@Base+0x1af54>
   21b68:	ldr	w8, [x19]
   21b6c:	orr	w8, w8, #0x2000
   21b70:	str	w8, [x19]
   21b74:	b	21a68 <PyInit__decimal@@Base+0x1af54>
   21b78:	stp	x29, x30, [sp, #-16]!
   21b7c:	mov	x29, sp
   21b80:	mov	x8, #0xfffc                	// #65532
   21b84:	movk	x8, #0xf62b, lsl #16
   21b88:	mov	x9, #0xfffd                	// #65533
   21b8c:	movk	x8, #0x241a, lsl #32
   21b90:	movk	x9, #0x9d8f, lsl #16
   21b94:	movk	x8, #0x29a2, lsl #48
   21b98:	movk	x9, #0xdace, lsl #32
   21b9c:	add	x8, x2, x8
   21ba0:	movk	x9, #0x3782, lsl #48
   21ba4:	cmp	x8, x9
   21ba8:	b.cc	21bc0 <PyInit__decimal@@Base+0x1b0ac>  // b.lo, b.ul, b.last
   21bac:	mov	w1, #0x100                 	// #256
   21bb0:	mov	x2, x4
   21bb4:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   21bb8:	ldp	x29, x30, [sp], #16
   21bbc:	ret
   21bc0:	bl	21a34 <PyInit__decimal@@Base+0x1af20>
   21bc4:	ldp	x29, x30, [sp], #16
   21bc8:	ret
   21bcc:	stp	x29, x30, [sp, #-16]!
   21bd0:	mov	x29, sp
   21bd4:	mov	x4, x3
   21bd8:	mov	x3, x2
   21bdc:	mov	x2, x1
   21be0:	mov	x1, x0
   21be4:	mov	w0, wzr
   21be8:	bl	21bf4 <PyInit__decimal@@Base+0x1b0e0>
   21bec:	ldp	x29, x30, [sp], #16
   21bf0:	ret
   21bf4:	stp	x29, x30, [sp, #-64]!
   21bf8:	str	x23, [sp, #16]
   21bfc:	stp	x22, x21, [sp, #32]
   21c00:	stp	x20, x19, [sp, #48]
   21c04:	mov	x29, sp
   21c08:	ldrb	w8, [x2]
   21c0c:	mov	x19, x4
   21c10:	mov	x21, x3
   21c14:	mov	x23, x2
   21c18:	mov	x20, x1
   21c1c:	tst	w8, #0xe
   21c20:	b.eq	21c40 <PyInit__decimal@@Base+0x1b12c>  // b.none
   21c24:	mov	x0, x20
   21c28:	mov	x1, x23
   21c2c:	mov	x2, x21
   21c30:	mov	x3, x19
   21c34:	bl	19544 <PyInit__decimal@@Base+0x12a30>
   21c38:	cbnz	w0, 21c58 <PyInit__decimal@@Base+0x1b144>
   21c3c:	b	21c48 <PyInit__decimal@@Base+0x1b134>
   21c40:	ldr	x9, [x23, #8]
   21c44:	tbnz	x9, #63, 21c6c <PyInit__decimal@@Base+0x1b158>
   21c48:	mov	x0, x20
   21c4c:	mov	x1, x23
   21c50:	mov	x2, x19
   21c54:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   21c58:	ldp	x20, x19, [sp, #48]
   21c5c:	ldp	x22, x21, [sp, #32]
   21c60:	ldr	x23, [sp, #16]
   21c64:	ldp	x29, x30, [sp], #64
   21c68:	ret
   21c6c:	ldr	x10, [x23, #40]
   21c70:	ldr	x11, [x23, #24]
   21c74:	add	x10, x10, x11, lsl #3
   21c78:	ldur	x10, [x10, #-8]
   21c7c:	cbz	x10, 21ce8 <PyInit__decimal@@Base+0x1b1d4>
   21c80:	mov	w22, w0
   21c84:	neg	x2, x9
   21c88:	mov	x0, x20
   21c8c:	mov	x1, x23
   21c90:	mov	x3, x19
   21c94:	bl	1a604 <PyInit__decimal@@Base+0x13af0>
   21c98:	cmn	x0, #0x1
   21c9c:	b.eq	21c58 <PyInit__decimal@@Base+0x1b144>  // b.none
   21ca0:	cmp	w22, #0x1
   21ca4:	str	xzr, [x20, #8]
   21ca8:	b.hi	21c58 <PyInit__decimal@@Base+0x1b144>  // b.pmore
   21cac:	mov	x23, x0
   21cb0:	mov	x0, x20
   21cb4:	mov	x1, x23
   21cb8:	mov	x2, x21
   21cbc:	mov	x3, x19
   21cc0:	bl	1e7f8 <PyInit__decimal@@Base+0x17ce4>
   21cc4:	cbnz	w22, 21c58 <PyInit__decimal@@Base+0x1b144>
   21cc8:	ldr	w8, [x19]
   21ccc:	orr	w9, w8, #0x1000
   21cd0:	str	w9, [x19]
   21cd4:	cbz	x23, 21c58 <PyInit__decimal@@Base+0x1b144>
   21cd8:	mov	w9, #0x1040                	// #4160
   21cdc:	orr	w8, w8, w9
   21ce0:	str	w8, [x19]
   21ce4:	b	21c58 <PyInit__decimal@@Base+0x1b144>
   21ce8:	and	w1, w8, #0x1
   21cec:	mov	x0, x20
   21cf0:	mov	x2, xzr
   21cf4:	mov	x3, xzr
   21cf8:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   21cfc:	b	21c58 <PyInit__decimal@@Base+0x1b144>
   21d00:	stp	x29, x30, [sp, #-16]!
   21d04:	mov	x29, sp
   21d08:	mov	x4, x3
   21d0c:	mov	x3, x2
   21d10:	mov	x2, x1
   21d14:	mov	x1, x0
   21d18:	mov	w0, #0x2                   	// #2
   21d1c:	bl	21bf4 <PyInit__decimal@@Base+0x1b0e0>
   21d20:	ldp	x29, x30, [sp], #16
   21d24:	ret
   21d28:	sub	sp, sp, #0x40
   21d2c:	stp	x29, x30, [sp, #48]
   21d30:	add	x29, sp, #0x30
   21d34:	ldp	q1, q0, [x2, #16]
   21d38:	ldr	q2, [x2]
   21d3c:	mov	x8, x1
   21d40:	mov	x4, x3
   21d44:	mov	x1, x0
   21d48:	mov	w9, #0x3                   	// #3
   21d4c:	mov	x3, sp
   21d50:	mov	w0, #0x1                   	// #1
   21d54:	mov	x2, x8
   21d58:	stp	q1, q0, [sp, #16]
   21d5c:	str	q2, [sp]
   21d60:	str	w9, [sp, #36]
   21d64:	bl	21bf4 <PyInit__decimal@@Base+0x1b0e0>
   21d68:	ldp	x29, x30, [sp, #48]
   21d6c:	add	sp, sp, #0x40
   21d70:	ret
   21d74:	sub	sp, sp, #0x40
   21d78:	stp	x29, x30, [sp, #48]
   21d7c:	add	x29, sp, #0x30
   21d80:	ldp	q1, q0, [x2, #16]
   21d84:	ldr	q2, [x2]
   21d88:	mov	x8, x1
   21d8c:	mov	x4, x3
   21d90:	mov	x1, x0
   21d94:	mov	w9, #0x2                   	// #2
   21d98:	mov	x3, sp
   21d9c:	mov	w0, #0x1                   	// #1
   21da0:	mov	x2, x8
   21da4:	stp	q1, q0, [sp, #16]
   21da8:	str	q2, [sp]
   21dac:	str	w9, [sp, #36]
   21db0:	bl	21bf4 <PyInit__decimal@@Base+0x1b0e0>
   21db4:	ldp	x29, x30, [sp, #48]
   21db8:	add	sp, sp, #0x40
   21dbc:	ret
   21dc0:	ldrb	w8, [x0]
   21dc4:	tst	w8, #0xe
   21dc8:	b.ne	21dd8 <PyInit__decimal@@Base+0x1b2c4>  // b.any
   21dcc:	ldrb	w9, [x1]
   21dd0:	tst	w9, #0xe
   21dd4:	b.eq	21e0c <PyInit__decimal@@Base+0x1b2f8>  // b.none
   21dd8:	tst	w8, #0xc
   21ddc:	b.eq	21df4 <PyInit__decimal@@Base+0x1b2e0>  // b.none
   21de0:	ldrb	w9, [x1]
   21de4:	tst	w9, #0xc
   21de8:	b.eq	21df4 <PyInit__decimal@@Base+0x1b2e0>  // b.none
   21dec:	mov	w0, #0x1                   	// #1
   21df0:	ret
   21df4:	tbnz	w8, #1, 21e00 <PyInit__decimal@@Base+0x1b2ec>
   21df8:	mov	w0, wzr
   21dfc:	ret
   21e00:	ldrb	w8, [x1]
   21e04:	ubfx	w0, w8, #1, #1
   21e08:	ret
   21e0c:	ldr	x8, [x0, #8]
   21e10:	ldr	x9, [x1, #8]
   21e14:	cmp	x8, x9
   21e18:	cset	w0, eq  // eq = none
   21e1c:	ret
   21e20:	sub	sp, sp, #0x60
   21e24:	stp	x29, x30, [sp, #48]
   21e28:	stp	x22, x21, [sp, #64]
   21e2c:	stp	x20, x19, [sp, #80]
   21e30:	add	x29, sp, #0x30
   21e34:	ldrb	w8, [x1]
   21e38:	mov	x19, x3
   21e3c:	mov	x21, x2
   21e40:	mov	x22, x1
   21e44:	tst	w8, #0xe
   21e48:	mov	x20, x0
   21e4c:	b.eq	21e9c <PyInit__decimal@@Base+0x1b388>  // b.none
   21e50:	mov	x0, x20
   21e54:	mov	x1, x22
   21e58:	mov	x2, x21
   21e5c:	mov	x3, x19
   21e60:	bl	19544 <PyInit__decimal@@Base+0x12a30>
   21e64:	cbnz	w0, 21f30 <PyInit__decimal@@Base+0x1b41c>
   21e68:	ldrb	w8, [x22]
   21e6c:	tbnz	w8, #0, 21f04 <PyInit__decimal@@Base+0x1b3f0>
   21e70:	ldr	x8, [x21, #16]
   21e74:	ldr	x9, [x21]
   21e78:	mov	x0, x20
   21e7c:	mov	w1, wzr
   21e80:	mov	x2, xzr
   21e84:	sub	x8, x8, x9
   21e88:	add	x3, x8, #0x1
   21e8c:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   21e90:	ldr	w8, [x19]
   21e94:	orr	w8, w8, #0x1
   21e98:	b	21f2c <PyInit__decimal@@Base+0x1b418>
   21e9c:	ldr	x9, [x22, #40]
   21ea0:	ldr	x10, [x22, #24]
   21ea4:	and	w1, w8, #0x1
   21ea8:	add	x9, x9, x10, lsl #3
   21eac:	ldur	x9, [x9, #-8]
   21eb0:	cbz	x9, 21f18 <PyInit__decimal@@Base+0x1b404>
   21eb4:	cbnz	w1, 21f04 <PyInit__decimal@@Base+0x1b3f0>
   21eb8:	ldp	q0, q1, [x21]
   21ebc:	ldr	q2, [x21, #32]
   21ec0:	mov	w9, #0x6                   	// #6
   21ec4:	mov	x2, sp
   21ec8:	stp	q0, q1, [sp]
   21ecc:	ldr	x8, [sp]
   21ed0:	mov	x0, x20
   21ed4:	mov	x1, x22
   21ed8:	mov	x3, x19
   21edc:	add	x8, x8, #0x2
   21ee0:	str	q2, [sp, #32]
   21ee4:	str	x8, [sp]
   21ee8:	str	w9, [sp, #36]
   21eec:	bl	21f44 <PyInit__decimal@@Base+0x1b430>
   21ef0:	mov	x0, x20
   21ef4:	mov	x1, x21
   21ef8:	mov	x2, x19
   21efc:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   21f00:	b	21f30 <PyInit__decimal@@Base+0x1b41c>
   21f04:	mov	w1, #0x100                 	// #256
   21f08:	mov	x0, x20
   21f0c:	mov	x2, x19
   21f10:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   21f14:	b	21f30 <PyInit__decimal@@Base+0x1b41c>
   21f18:	mov	w2, #0x2                   	// #2
   21f1c:	mov	x0, x20
   21f20:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   21f24:	ldr	w8, [x19]
   21f28:	orr	w8, w8, #0x4
   21f2c:	str	w8, [x19]
   21f30:	ldp	x20, x19, [sp, #80]
   21f34:	ldp	x22, x21, [sp, #64]
   21f38:	ldp	x29, x30, [sp, #48]
   21f3c:	add	sp, sp, #0x60
   21f40:	ret
   21f44:	stp	x29, x30, [sp, #-96]!
   21f48:	str	x28, [sp, #16]
   21f4c:	stp	x26, x25, [sp, #32]
   21f50:	stp	x24, x23, [sp, #48]
   21f54:	stp	x22, x21, [sp, #64]
   21f58:	stp	x20, x19, [sp, #80]
   21f5c:	mov	x29, sp
   21f60:	sub	sp, sp, #0x770
   21f64:	str	wzr, [x29, #28]
   21f68:	ldrb	w8, [x1]
   21f6c:	mov	w9, #0x50                  	// #80
   21f70:	mov	w11, #0x1                   	// #1
   21f74:	mov	w10, #0x30                  	// #48
   21f78:	bfxil	w9, w8, #0, #4
   21f7c:	sturb	w9, [x29, #-144]
   21f80:	ldp	x8, x9, [x1, #8]
   21f84:	mov	x19, x3
   21f88:	mov	x22, x2
   21f8c:	mov	x23, x1
   21f90:	stp	x8, x9, [x29, #-136]
   21f94:	ldr	x9, [x1, #24]
   21f98:	and	x8, x8, #0xfffffffffffffffe
   21f9c:	neg	x12, x8
   21fa0:	cmp	x12, #0x0
   21fa4:	stur	x9, [x29, #-120]
   21fa8:	ldr	x9, [x1, #32]
   21fac:	sub	x12, x11, x8
   21fb0:	csneg	x25, x12, x8, lt  // lt = tstop
   21fb4:	add	x8, sp, #0x4e0
   21fb8:	stur	x9, [x29, #-112]
   21fbc:	ldr	x9, [x1, #40]
   21fc0:	str	x8, [sp, #1240]
   21fc4:	mov	w8, #0x40                  	// #64
   21fc8:	str	x8, [sp, #1232]
   21fcc:	str	x8, [sp, #672]
   21fd0:	mov	w8, #0x5                   	// #5
   21fd4:	strb	w10, [sp, #1200]
   21fd8:	strb	w10, [sp, #640]
   21fdc:	add	x10, sp, #0x2b0
   21fe0:	str	x8, [sp, #632]
   21fe4:	add	x8, sp, #0x278
   21fe8:	str	x10, [sp, #680]
   21fec:	mov	w10, #0x90                  	// #144
   21ff0:	str	x8, [sp, #624]
   21ff4:	mov	w8, #0x3                   	// #3
   21ff8:	mov	x20, x0
   21ffc:	str	x8, [sp, #576]
   22000:	mov	x8, #0xffffffffffffffff    	// #-1
   22004:	strb	w10, [sp, #584]
   22008:	strb	w10, [sp, #528]
   2200c:	add	x10, sp, #0x240
   22010:	cmp	x0, x1
   22014:	str	xzr, [sp, #1224]
   22018:	str	xzr, [sp, #664]
   2201c:	str	xzr, [sp, #1208]
   22020:	str	xzr, [sp, #1216]
   22024:	str	xzr, [sp, #648]
   22028:	str	xzr, [sp, #656]
   2202c:	str	x8, [sp, #592]
   22030:	str	x11, [sp, #600]
   22034:	str	x11, [sp, #608]
   22038:	str	x11, [sp, #616]
   2203c:	str	xzr, [sp, #536]
   22040:	str	x11, [sp, #544]
   22044:	str	x11, [sp, #552]
   22048:	str	x11, [sp, #560]
   2204c:	stur	x9, [x29, #-104]
   22050:	str	x10, [sp, #568]
   22054:	b.eq	22060 <PyInit__decimal@@Base+0x1b54c>  // b.none
   22058:	sub	x21, x29, #0x90
   2205c:	b	22070 <PyInit__decimal@@Base+0x1b55c>
   22060:	mov	x0, x23
   22064:	bl	19b44 <PyInit__decimal@@Base+0x13030>
   22068:	mov	x21, x0
   2206c:	cbz	x0, 2235c <PyInit__decimal@@Base+0x1b848>
   22070:	ldr	x8, [x21, #16]
   22074:	ldr	w9, [x21, #8]
   22078:	add	w9, w9, w8
   2207c:	tbnz	w9, #0, 220bc <PyInit__decimal@@Base+0x1b5a8>
   22080:	cmp	x8, #0x8
   22084:	mov	w10, #0x8                   	// #8
   22088:	mov	w9, #0x2                   	// #2
   2208c:	csel	x24, x8, x10, lt  // lt = tstop
   22090:	sub	x9, x9, x8
   22094:	mov	x0, sp
   22098:	add	x1, sp, #0x8
   2209c:	mov	x2, x21
   220a0:	mov	w3, w24
   220a4:	str	x9, [x21, #8]
   220a8:	bl	2358c <PyInit__decimal@@Base+0x1ca78>
   220ac:	cmp	w24, #0x7
   220b0:	b.gt	22114 <PyInit__decimal@@Base+0x1b600>
   220b4:	mov	x8, #0x800000000           	// #34359738368
   220b8:	b	220f4 <PyInit__decimal@@Base+0x1b5e0>
   220bc:	cmp	x8, #0x7
   220c0:	mov	w10, #0x7                   	// #7
   220c4:	mov	w9, #0x1                   	// #1
   220c8:	csel	x24, x8, x10, lt  // lt = tstop
   220cc:	sub	x9, x9, x8
   220d0:	mov	x0, sp
   220d4:	add	x1, sp, #0x8
   220d8:	mov	x2, x21
   220dc:	mov	w3, w24
   220e0:	str	x9, [x21, #8]
   220e4:	bl	2358c <PyInit__decimal@@Base+0x1ca78>
   220e8:	cmp	w24, #0x6
   220ec:	b.gt	22114 <PyInit__decimal@@Base+0x1b600>
   220f0:	mov	x8, #0x700000000           	// #30064771072
   220f4:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   220f8:	sub	x8, x8, x24, lsl #32
   220fc:	add	x9, x9, #0x20
   22100:	asr	x8, x8, #29
   22104:	ldr	x8, [x9, x8]
   22108:	ldr	x9, [sp, #8]
   2210c:	mul	x8, x9, x8
   22110:	str	x8, [sp, #8]
   22114:	ldr	x8, [x23, #8]
   22118:	ldr	x9, [x21, #8]
   2211c:	ldr	x1, [sp, #8]
   22120:	mov	x0, x20
   22124:	asr	x23, x25, #1
   22128:	sub	x8, x8, x9
   2212c:	cmp	x8, #0x0
   22130:	cinc	x8, x8, lt  // lt = tstop
   22134:	asr	x24, x8, #1
   22138:	bl	26194 <PyInit__decimal@@Base+0x1f680>
   2213c:	sub	x0, x29, #0x60
   22140:	bl	13964 <PyInit__decimal@@Base+0xce50>
   22144:	sub	x0, x29, #0x30
   22148:	bl	13964 <PyInit__decimal@@Base+0xce50>
   2214c:	mov	w8, #0x8                   	// #8
   22150:	stur	w8, [x29, #-12]
   22154:	ldr	x8, [x22]
   22158:	add	x0, sp, #0x10
   2215c:	add	x25, sp, #0x10
   22160:	add	x1, x8, #0x1
   22164:	bl	26270 <PyInit__decimal@@Base+0x1f75c>
   22168:	tbnz	w0, #31, 2224c <PyInit__decimal@@Base+0x1b738>
   2216c:	sxtw	x26, w0
   22170:	b	221dc <PyInit__decimal@@Base+0x1b6c8>
   22174:	add	x2, sp, #0x4b0
   22178:	sub	x3, x29, #0x30
   2217c:	add	x4, x29, #0x1c
   22180:	mov	x1, x21
   22184:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
   22188:	add	x0, sp, #0x280
   2218c:	add	x1, sp, #0x210
   22190:	add	x2, sp, #0x280
   22194:	sub	x3, x29, #0x60
   22198:	add	x4, x29, #0x1c
   2219c:	bl	1c64c <PyInit__decimal@@Base+0x15b38>
   221a0:	add	x2, sp, #0x280
   221a4:	sub	x3, x29, #0x30
   221a8:	add	x4, x29, #0x1c
   221ac:	mov	x0, x20
   221b0:	mov	x1, x20
   221b4:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
   221b8:	add	x2, sp, #0x248
   221bc:	sub	x3, x29, #0x60
   221c0:	add	x4, x29, #0x1c
   221c4:	mov	x0, x20
   221c8:	mov	x1, x20
   221cc:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
   221d0:	cmp	x26, #0x0
   221d4:	sub	x26, x26, #0x1
   221d8:	b.le	2224c <PyInit__decimal@@Base+0x1b738>
   221dc:	ldr	x8, [x25, x26, lsl #3]
   221e0:	add	x0, sp, #0x4b0
   221e4:	sub	x3, x29, #0x60
   221e8:	add	x4, x29, #0x1c
   221ec:	lsl	x8, x8, #1
   221f0:	add	x8, x8, #0x2
   221f4:	mov	x1, x20
   221f8:	mov	x2, x20
   221fc:	stur	x8, [x29, #-48]
   22200:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
   22204:	ldr	x8, [x21, #16]
   22208:	ldur	x9, [x29, #-48]
   2220c:	add	x0, sp, #0x280
   22210:	subs	x22, x8, x9
   22214:	b.le	22174 <PyInit__decimal@@Base+0x1b660>
   22218:	add	x3, x29, #0x1c
   2221c:	mov	x1, x21
   22220:	mov	x2, x22
   22224:	bl	1a604 <PyInit__decimal@@Base+0x13af0>
   22228:	ldr	x8, [sp, #648]
   2222c:	add	x0, sp, #0x280
   22230:	add	x1, sp, #0x280
   22234:	add	x2, sp, #0x4b0
   22238:	add	x8, x8, x22
   2223c:	str	x8, [sp, #648]
   22240:	sub	x3, x29, #0x30
   22244:	add	x4, x29, #0x1c
   22248:	b	22184 <PyInit__decimal@@Base+0x1b670>
   2224c:	ldr	x8, [x20, #8]
   22250:	mov	x0, x20
   22254:	sub	x22, x8, x24
   22258:	str	x22, [x20, #8]
   2225c:	bl	18c30 <PyInit__decimal@@Base+0x1211c>
   22260:	sub	x8, x23, x22
   22264:	cmp	x0, x8
   22268:	csel	x22, x8, x0, gt
   2226c:	cmp	x22, #0x1
   22270:	b.lt	2228c <PyInit__decimal@@Base+0x1b778>  // b.tstop
   22274:	mov	x0, x20
   22278:	mov	x1, x22
   2227c:	bl	1a340 <PyInit__decimal@@Base+0x1382c>
   22280:	ldr	x8, [x20, #8]
   22284:	add	x8, x8, x22
   22288:	str	x8, [x20, #8]
   2228c:	ldrb	w8, [sp, #1200]
   22290:	adrp	x20, 42000 <PyInit__decimal@@Base+0x3b4ec>
   22294:	cmp	w8, #0x1f
   22298:	b.hi	222a8 <PyInit__decimal@@Base+0x1b794>  // b.pmore
   2229c:	ldr	x8, [x20, #1376]
   222a0:	ldr	x0, [sp, #1240]
   222a4:	blr	x8
   222a8:	ldrb	w8, [sp, #1200]
   222ac:	tbnz	w8, #4, 222bc <PyInit__decimal@@Base+0x1b7a8>
   222b0:	ldr	x8, [x20, #1376]
   222b4:	add	x0, sp, #0x4b0
   222b8:	blr	x8
   222bc:	ldrb	w8, [sp, #640]
   222c0:	cmp	w8, #0x1f
   222c4:	b.hi	222d4 <PyInit__decimal@@Base+0x1b7c0>  // b.pmore
   222c8:	ldr	x8, [x20, #1376]
   222cc:	ldr	x0, [sp, #680]
   222d0:	blr	x8
   222d4:	ldrb	w8, [sp, #640]
   222d8:	tbnz	w8, #4, 222e8 <PyInit__decimal@@Base+0x1b7d4>
   222dc:	ldr	x8, [x20, #1376]
   222e0:	add	x0, sp, #0x280
   222e4:	blr	x8
   222e8:	sub	x8, x29, #0x90
   222ec:	cmp	x21, x8
   222f0:	b.eq	22320 <PyInit__decimal@@Base+0x1b80c>  // b.none
   222f4:	ldrb	w8, [x21]
   222f8:	cmp	w8, #0x1f
   222fc:	b.hi	2230c <PyInit__decimal@@Base+0x1b7f8>  // b.pmore
   22300:	ldr	x8, [x20, #1376]
   22304:	ldr	x0, [x21, #40]
   22308:	blr	x8
   2230c:	ldrb	w8, [x21]
   22310:	tbnz	w8, #4, 22320 <PyInit__decimal@@Base+0x1b80c>
   22314:	ldr	x8, [x20, #1376]
   22318:	mov	x0, x21
   2231c:	blr	x8
   22320:	ldr	w8, [x29, #28]
   22324:	ldr	w9, [x19]
   22328:	and	w8, w8, #0x3fe
   2232c:	orr	w8, w8, w9
   22330:	mov	w9, #0x1040                	// #4160
   22334:	orr	w8, w8, w9
   22338:	str	w8, [x19]
   2233c:	add	sp, sp, #0x770
   22340:	ldp	x20, x19, [sp, #80]
   22344:	ldp	x22, x21, [sp, #64]
   22348:	ldp	x24, x23, [sp, #48]
   2234c:	ldp	x26, x25, [sp, #32]
   22350:	ldr	x28, [sp, #16]
   22354:	ldp	x29, x30, [sp], #96
   22358:	ret
   2235c:	mov	w1, #0x200                 	// #512
   22360:	mov	x0, x20
   22364:	mov	x2, x19
   22368:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   2236c:	b	2233c <PyInit__decimal@@Base+0x1b828>
   22370:	stp	x29, x30, [sp, #-96]!
   22374:	str	x28, [sp, #16]
   22378:	stp	x26, x25, [sp, #32]
   2237c:	stp	x24, x23, [sp, #48]
   22380:	stp	x22, x21, [sp, #64]
   22384:	stp	x20, x19, [sp, #80]
   22388:	mov	x29, sp
   2238c:	sub	sp, sp, #0x700
   22390:	add	x10, sp, #0x4d0
   22394:	mov	w8, #0x30                  	// #48
   22398:	str	x10, [sp, #1224]
   2239c:	add	x10, sp, #0x2a0
   223a0:	mov	w9, #0x40                  	// #64
   223a4:	str	x10, [sp, #664]
   223a8:	add	x10, sp, #0x70
   223ac:	strb	w8, [sp, #1184]
   223b0:	strb	w8, [sp, #624]
   223b4:	strb	w8, [sp, #64]
   223b8:	mov	w8, #0x2                   	// #2
   223bc:	str	x9, [sp, #1216]
   223c0:	str	x9, [sp, #656]
   223c4:	stp	xzr, x9, [sp, #88]
   223c8:	mov	w9, #0x90                  	// #144
   223cc:	str	x10, [sp, #104]
   223d0:	mov	w10, #0x1                   	// #1
   223d4:	str	x8, [sp, #56]
   223d8:	add	x8, sp, #0x38
   223dc:	str	xzr, [sp, #1192]
   223e0:	str	xzr, [sp, #1200]
   223e4:	str	xzr, [sp, #632]
   223e8:	str	xzr, [sp, #640]
   223ec:	stp	xzr, xzr, [sp, #72]
   223f0:	str	xzr, [sp, #1208]
   223f4:	str	xzr, [sp, #648]
   223f8:	strb	w9, [sp, #8]
   223fc:	stp	xzr, x10, [sp, #16]
   22400:	stp	x10, x10, [sp, #32]
   22404:	str	x8, [sp, #48]
   22408:	ldr	x9, [x1, #8]
   2240c:	ldrb	w8, [x1]
   22410:	mov	x19, x3
   22414:	mov	x20, x2
   22418:	and	x10, x9, #0xfffffffffffffffe
   2241c:	tst	x9, #0xfffffffffffffffe
   22420:	orr	x9, x10, #0x1
   22424:	mov	x23, x1
   22428:	csel	x9, x9, x10, lt  // lt = tstop
   2242c:	tst	w8, #0xe
   22430:	mov	x21, x0
   22434:	b.eq	2246c <PyInit__decimal@@Base+0x1b958>  // b.none
   22438:	mov	x0, x21
   2243c:	mov	x1, x23
   22440:	mov	x2, x20
   22444:	mov	x3, x19
   22448:	bl	19544 <PyInit__decimal@@Base+0x12a30>
   2244c:	cbnz	w0, 227c4 <PyInit__decimal@@Base+0x1bcb0>
   22450:	ldrb	w8, [x23]
   22454:	tbnz	w8, #0, 224c8 <PyInit__decimal@@Base+0x1b9b4>
   22458:	mov	w2, #0x2                   	// #2
   2245c:	mov	x0, x21
   22460:	mov	w1, wzr
   22464:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   22468:	b	227c4 <PyInit__decimal@@Base+0x1bcb0>
   2246c:	ldr	x10, [x23, #40]
   22470:	ldr	x11, [x23, #24]
   22474:	asr	x22, x9, #1
   22478:	and	w1, w8, #0x1
   2247c:	add	x10, x10, x11, lsl #3
   22480:	ldur	x10, [x10, #-8]
   22484:	cbz	x10, 224dc <PyInit__decimal@@Base+0x1b9c8>
   22488:	cbnz	w1, 224c8 <PyInit__decimal@@Base+0x1b9b4>
   2248c:	sub	x0, x29, #0x30
   22490:	bl	13964 <PyInit__decimal@@Base+0xce50>
   22494:	ldr	x24, [x20]
   22498:	add	x0, sp, #0x4a0
   2249c:	mov	x1, x23
   224a0:	mov	x2, x19
   224a4:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   224a8:	cbz	w0, 226ec <PyInit__decimal@@Base+0x1bbd8>
   224ac:	str	xzr, [sp, #1192]
   224b0:	ldrb	w8, [x23, #8]
   224b4:	tbnz	w8, #0, 224f8 <PyInit__decimal@@Base+0x1b9e4>
   224b8:	ldr	x8, [x23, #16]
   224bc:	add	x8, x8, #0x1
   224c0:	asr	x8, x8, #1
   224c4:	b	2251c <PyInit__decimal@@Base+0x1ba08>
   224c8:	mov	w1, #0x100                 	// #256
   224cc:	mov	x0, x21
   224d0:	mov	x2, x19
   224d4:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   224d8:	b	227c4 <PyInit__decimal@@Base+0x1bcb0>
   224dc:	mov	x0, x21
   224e0:	mov	x2, xzr
   224e4:	mov	x3, x22
   224e8:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   224ec:	mov	x0, x21
   224f0:	mov	x1, x20
   224f4:	b	227bc <PyInit__decimal@@Base+0x1bca8>
   224f8:	add	x0, sp, #0x4a0
   224fc:	add	x1, sp, #0x4a0
   22500:	mov	w2, #0x1                   	// #1
   22504:	mov	x3, x19
   22508:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   2250c:	cbz	w0, 226ec <PyInit__decimal@@Base+0x1bbd8>
   22510:	ldr	x8, [x23, #16]
   22514:	asr	x8, x8, #1
   22518:	add	x8, x8, #0x1
   2251c:	add	x24, x24, #0x1
   22520:	subs	x23, x24, x8
   22524:	b.mi	22548 <PyInit__decimal@@Base+0x1ba34>  // b.first
   22528:	lsl	x2, x23, #1
   2252c:	add	x0, sp, #0x4a0
   22530:	add	x1, sp, #0x4a0
   22534:	mov	x3, x19
   22538:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   2253c:	cbz	w0, 226ec <PyInit__decimal@@Base+0x1bbd8>
   22540:	mov	w26, #0x1                   	// #1
   22544:	b	2255c <PyInit__decimal@@Base+0x1ba48>
   22548:	neg	x1, x23, lsl #1
   2254c:	add	x0, sp, #0x4a0
   22550:	bl	1a340 <PyInit__decimal@@Base+0x1382c>
   22554:	cmp	x0, #0x0
   22558:	cset	w26, eq  // eq = none
   2255c:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   22560:	add	x1, x1, #0xc88
   22564:	mov	x0, x21
   22568:	mov	x2, x24
   2256c:	mov	x3, x19
   22570:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   22574:	cbz	w0, 226ec <PyInit__decimal@@Base+0x1bbd8>
   22578:	sub	x8, x29, #0x30
   2257c:	add	x24, x8, #0x1c
   22580:	add	x0, sp, #0x270
   22584:	add	x1, sp, #0x40
   22588:	add	x2, sp, #0x4a0
   2258c:	sub	x4, x29, #0x30
   22590:	mov	x3, x21
   22594:	mov	x5, x24
   22598:	bl	1d1ec <PyInit__decimal@@Base+0x166d8>
   2259c:	ldrb	w8, [x21]
   225a0:	tst	w8, #0xe
   225a4:	b.eq	225b8 <PyInit__decimal@@Base+0x1baa4>  // b.none
   225a8:	ldur	w8, [x29, #-20]
   225ac:	mov	w9, #0x3be                 	// #958
   225b0:	and	w1, w8, w9
   225b4:	b	226f0 <PyInit__decimal@@Base+0x1bbdc>
   225b8:	sub	x25, x22, x23
   225bc:	ldrb	w8, [sp, #624]
   225c0:	tst	w8, #0xe
   225c4:	b.ne	225a8 <PyInit__decimal@@Base+0x1ba94>  // b.any
   225c8:	add	x1, sp, #0x270
   225cc:	mov	x0, x21
   225d0:	bl	19cb8 <PyInit__decimal@@Base+0x131a4>
   225d4:	cmp	w0, #0x1
   225d8:	b.lt	22648 <PyInit__decimal@@Base+0x1bb34>  // b.tstop
   225dc:	add	x2, sp, #0x270
   225e0:	sub	x3, x29, #0x30
   225e4:	mov	x0, x21
   225e8:	mov	x1, x21
   225ec:	mov	x4, x24
   225f0:	bl	227e4 <PyInit__decimal@@Base+0x1bcd0>
   225f4:	ldrb	w8, [x21]
   225f8:	tst	w8, #0xe
   225fc:	b.ne	225a8 <PyInit__decimal@@Base+0x1ba94>  // b.any
   22600:	add	x1, sp, #0x40
   22604:	add	x3, sp, #0x8
   22608:	sub	x4, x29, #0x30
   2260c:	mov	x0, x21
   22610:	mov	x2, x21
   22614:	mov	x5, x24
   22618:	bl	1d1ec <PyInit__decimal@@Base+0x166d8>
   2261c:	add	x0, sp, #0x270
   22620:	add	x1, sp, #0x40
   22624:	add	x2, sp, #0x4a0
   22628:	sub	x4, x29, #0x30
   2262c:	mov	x3, x21
   22630:	mov	x5, x24
   22634:	bl	1d1ec <PyInit__decimal@@Base+0x166d8>
   22638:	ldrb	w8, [x21]
   2263c:	tst	w8, #0xe
   22640:	b.eq	225bc <PyInit__decimal@@Base+0x1baa8>  // b.none
   22644:	b	225a8 <PyInit__decimal@@Base+0x1ba94>
   22648:	cbz	w26, 22680 <PyInit__decimal@@Base+0x1bb6c>
   2264c:	add	x0, sp, #0x40
   22650:	sub	x3, x29, #0x30
   22654:	mov	x1, x21
   22658:	mov	x2, x21
   2265c:	mov	x4, x24
   22660:	bl	211e0 <PyInit__decimal@@Base+0x1a6cc>
   22664:	ldrb	w8, [sp, #64]
   22668:	tst	w8, #0xe
   2266c:	b.ne	225a8 <PyInit__decimal@@Base+0x1ba94>  // b.any
   22670:	add	x0, sp, #0x40
   22674:	add	x1, sp, #0x4a0
   22678:	bl	19cb8 <PyInit__decimal@@Base+0x131a4>
   2267c:	cbz	w0, 226c0 <PyInit__decimal@@Base+0x1bbac>
   22680:	ldr	x8, [x21, #40]
   22684:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   22688:	movk	x10, #0xcccd
   2268c:	mov	w11, #0xa                   	// #10
   22690:	ldr	x9, [x8]
   22694:	umulh	x10, x9, x10
   22698:	lsr	x10, x10, #3
   2269c:	msub	w10, w10, w11, w9
   226a0:	cmp	w10, #0x5
   226a4:	b.eq	226ac <PyInit__decimal@@Base+0x1bb98>  // b.none
   226a8:	cbnz	w10, 226b4 <PyInit__decimal@@Base+0x1bba0>
   226ac:	add	x9, x9, #0x1
   226b0:	str	x9, [x8]
   226b4:	mov	x22, x25
   226b8:	str	x22, [x21, #8]
   226bc:	b	226fc <PyInit__decimal@@Base+0x1bbe8>
   226c0:	tbnz	x23, #63, 226d4 <PyInit__decimal@@Base+0x1bbc0>
   226c4:	mov	x0, x21
   226c8:	mov	x1, x23
   226cc:	bl	1a340 <PyInit__decimal@@Base+0x1382c>
   226d0:	b	226b8 <PyInit__decimal@@Base+0x1bba4>
   226d4:	neg	x2, x23
   226d8:	mov	x0, x21
   226dc:	mov	x1, x21
   226e0:	mov	x3, x19
   226e4:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   226e8:	cbnz	w0, 226b8 <PyInit__decimal@@Base+0x1bba4>
   226ec:	mov	w1, #0x200                 	// #512
   226f0:	mov	x0, x21
   226f4:	mov	x2, x19
   226f8:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   226fc:	ldrb	w8, [sp, #1184]
   22700:	cmp	w8, #0x1f
   22704:	b.hi	22718 <PyInit__decimal@@Base+0x1bc04>  // b.pmore
   22708:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   2270c:	ldr	x8, [x8, #1376]
   22710:	ldr	x0, [sp, #1224]
   22714:	blr	x8
   22718:	ldrb	w8, [sp, #1184]
   2271c:	tbnz	w8, #4, 22730 <PyInit__decimal@@Base+0x1bc1c>
   22720:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   22724:	ldr	x8, [x8, #1376]
   22728:	add	x0, sp, #0x4a0
   2272c:	blr	x8
   22730:	ldrb	w8, [sp, #624]
   22734:	cmp	w8, #0x1f
   22738:	b.hi	2274c <PyInit__decimal@@Base+0x1bc38>  // b.pmore
   2273c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   22740:	ldr	x8, [x8, #1376]
   22744:	ldr	x0, [sp, #664]
   22748:	blr	x8
   2274c:	ldrb	w8, [sp, #624]
   22750:	tbnz	w8, #4, 22764 <PyInit__decimal@@Base+0x1bc50>
   22754:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   22758:	ldr	x8, [x8, #1376]
   2275c:	add	x0, sp, #0x270
   22760:	blr	x8
   22764:	ldrb	w8, [sp, #64]
   22768:	cmp	w8, #0x1f
   2276c:	b.hi	22780 <PyInit__decimal@@Base+0x1bc6c>  // b.pmore
   22770:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   22774:	ldr	x8, [x8, #1376]
   22778:	ldr	x0, [sp, #104]
   2277c:	blr	x8
   22780:	ldrb	w8, [sp, #64]
   22784:	sub	x22, x29, #0x30
   22788:	tbnz	w8, #4, 2279c <PyInit__decimal@@Base+0x1bc88>
   2278c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   22790:	ldr	x8, [x8, #1376]
   22794:	add	x0, sp, #0x40
   22798:	blr	x8
   2279c:	ldp	q1, q0, [x20, #16]
   227a0:	ldr	q2, [x20]
   227a4:	mov	w8, #0x6                   	// #6
   227a8:	sub	x1, x29, #0x30
   227ac:	stp	q1, q0, [x22, #16]
   227b0:	str	q2, [x22]
   227b4:	stur	w8, [x29, #-12]
   227b8:	mov	x0, x21
   227bc:	mov	x2, x19
   227c0:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   227c4:	add	sp, sp, #0x700
   227c8:	ldp	x20, x19, [sp, #80]
   227cc:	ldp	x22, x21, [sp, #64]
   227d0:	ldp	x24, x23, [sp, #48]
   227d4:	ldp	x26, x25, [sp, #32]
   227d8:	ldr	x28, [sp, #16]
   227dc:	ldp	x29, x30, [sp], #96
   227e0:	ret
   227e4:	sub	sp, sp, #0x30
   227e8:	stp	x29, x30, [sp, #16]
   227ec:	stp	x20, x19, [sp, #32]
   227f0:	add	x29, sp, #0x10
   227f4:	mov	x19, x4
   227f8:	sub	x4, x29, #0x4
   227fc:	mov	x20, x0
   22800:	stur	wzr, [x29, #-4]
   22804:	bl	1c118 <PyInit__decimal@@Base+0x15604>
   22808:	ldur	w8, [x29, #-4]
   2280c:	ldr	w9, [x19]
   22810:	mov	w10, #0x1041                	// #4161
   22814:	tst	w8, w10
   22818:	orr	w9, w9, w8
   2281c:	str	w9, [x19]
   22820:	b.eq	22834 <PyInit__decimal@@Base+0x1bd20>  // b.none
   22824:	mov	w1, #0x100                 	// #256
   22828:	mov	x0, x20
   2282c:	mov	x2, x19
   22830:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   22834:	ldp	x20, x19, [sp, #32]
   22838:	ldp	x29, x30, [sp, #16]
   2283c:	add	sp, sp, #0x30
   22840:	ret
   22844:	str	d8, [sp, #-32]!
   22848:	stp	x29, x30, [sp, #8]
   2284c:	str	x19, [sp, #24]
   22850:	mov	x29, sp
   22854:	ldrb	w8, [x0]
   22858:	tst	w8, #0xe
   2285c:	b.ne	22874 <PyInit__decimal@@Base+0x1bd60>  // b.any
   22860:	ldr	x8, [x0, #40]
   22864:	ldr	x9, [x0, #24]
   22868:	add	x8, x8, x9, lsl #3
   2286c:	ldur	x8, [x8, #-8]
   22870:	cbz	x8, 228c0 <PyInit__decimal@@Base+0x1bdac>
   22874:	ldp	x9, x8, [x0, #8]
   22878:	mov	x19, #0xffffffffffffffff    	// #-1
   2287c:	add	x8, x9, x8
   22880:	mov	x9, #0xbcfe                	// #48382
   22884:	movk	x9, #0xa84f, lsl #16
   22888:	movk	x9, #0xa209, lsl #32
   2288c:	movk	x9, #0x9, lsl #48
   22890:	cmp	x8, x9
   22894:	b.hi	228c4 <PyInit__decimal@@Base+0x1bdb0>  // b.pmore
   22898:	ucvtf	d0, w1
   2289c:	ucvtf	d8, x8
   228a0:	bl	65c0 <log10@plt>
   228a4:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
   228a8:	fdiv	d0, d8, d0
   228ac:	fmov	d1, x8
   228b0:	fcvtzu	x9, d0
   228b4:	fcmp	d0, d1
   228b8:	csinc	x19, x19, x9, gt
   228bc:	b	228c4 <PyInit__decimal@@Base+0x1bdb0>
   228c0:	mov	w19, #0x1                   	// #1
   228c4:	mov	x0, x19
   228c8:	ldr	x19, [sp, #24]
   228cc:	ldp	x29, x30, [sp, #8]
   228d0:	ldr	d8, [sp], #32
   228d4:	ret
   228d8:	stp	x29, x30, [sp, #-80]!
   228dc:	str	x28, [sp, #16]
   228e0:	stp	x24, x23, [sp, #32]
   228e4:	stp	x22, x21, [sp, #48]
   228e8:	stp	x20, x19, [sp, #64]
   228ec:	mov	x29, sp
   228f0:	sub	sp, sp, #0x230
   228f4:	mov	w8, #0x30                  	// #48
   228f8:	strb	w8, [sp]
   228fc:	mov	w8, #0x40                  	// #64
   22900:	stp	xzr, x8, [sp, #24]
   22904:	add	x8, sp, #0x30
   22908:	stp	xzr, xzr, [sp, #8]
   2290c:	str	x8, [sp, #40]
   22910:	ldrb	w8, [x3]
   22914:	mov	x19, x4
   22918:	tst	w8, #0xe
   2291c:	b.eq	22950 <PyInit__decimal@@Base+0x1be3c>  // b.none
   22920:	ldr	w8, [x19]
   22924:	mov	x21, #0xffffffffffffffff    	// #-1
   22928:	orr	w8, w8, #0x100
   2292c:	str	w8, [x19]
   22930:	mov	x0, x21
   22934:	add	sp, sp, #0x230
   22938:	ldp	x20, x19, [sp, #64]
   2293c:	ldp	x22, x21, [sp, #48]
   22940:	ldp	x24, x23, [sp, #32]
   22944:	ldr	x28, [sp, #16]
   22948:	ldp	x29, x30, [sp], #80
   2294c:	ret
   22950:	mov	x20, x0
   22954:	mov	x0, x3
   22958:	mov	x23, x3
   2295c:	mov	w21, w2
   22960:	mov	x22, x1
   22964:	bl	18ce8 <PyInit__decimal@@Base+0x121d4>
   22968:	cbz	w0, 22920 <PyInit__decimal@@Base+0x1be0c>
   2296c:	ldr	x8, [x20]
   22970:	cbz	x8, 229b8 <PyInit__decimal@@Base+0x1bea4>
   22974:	mov	w24, wzr
   22978:	ldrb	w8, [x23]
   2297c:	tst	w8, #0xe
   22980:	b.ne	22998 <PyInit__decimal@@Base+0x1be84>  // b.any
   22984:	ldr	x8, [x23, #40]
   22988:	ldr	x9, [x23, #24]
   2298c:	add	x8, x8, x9, lsl #3
   22990:	ldur	x8, [x8, #-8]
   22994:	cbz	x8, 22a88 <PyInit__decimal@@Base+0x1bf74>
   22998:	ldr	x2, [x23, #8]
   2299c:	tbnz	x2, #63, 229e8 <PyInit__decimal@@Base+0x1bed4>
   229a0:	mov	x0, sp
   229a4:	mov	x1, x23
   229a8:	mov	x3, x19
   229ac:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   229b0:	cbnz	w0, 22a04 <PyInit__decimal@@Base+0x1bef0>
   229b4:	b	22a28 <PyInit__decimal@@Base+0x1bf14>
   229b8:	mov	x0, x23
   229bc:	mov	w1, w21
   229c0:	bl	22844 <PyInit__decimal@@Base+0x1bd30>
   229c4:	cmn	x0, #0x1
   229c8:	b.eq	22920 <PyInit__decimal@@Base+0x1be0c>  // b.none
   229cc:	mov	w1, #0x2                   	// #2
   229d0:	mov	x22, x0
   229d4:	bl	17adc <PyInit__decimal@@Base+0x10fc8>
   229d8:	str	x0, [x20]
   229dc:	cbz	x0, 22a98 <PyInit__decimal@@Base+0x1bf84>
   229e0:	mov	w24, #0x1                   	// #1
   229e4:	b	22978 <PyInit__decimal@@Base+0x1be64>
   229e8:	neg	x2, x2
   229ec:	mov	x0, sp
   229f0:	mov	x1, x23
   229f4:	mov	x3, x19
   229f8:	bl	1a604 <PyInit__decimal@@Base+0x13af0>
   229fc:	cmn	x0, #0x1
   22a00:	b.eq	22a28 <PyInit__decimal@@Base+0x1bf14>  // b.none
   22a04:	ldr	x3, [sp, #40]
   22a08:	ldr	x4, [sp, #24]
   22a0c:	mov	w2, w21
   22a10:	mov	x0, x20
   22a14:	mov	x1, x22
   22a18:	bl	22aa4 <PyInit__decimal@@Base+0x1bf90>
   22a1c:	mov	x21, x0
   22a20:	cmn	x0, #0x1
   22a24:	b.ne	22a50 <PyInit__decimal@@Base+0x1bf3c>  // b.any
   22a28:	cbz	w24, 22a40 <PyInit__decimal@@Base+0x1bf2c>
   22a2c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   22a30:	ldr	x8, [x8, #1376]
   22a34:	ldr	x0, [x20]
   22a38:	blr	x8
   22a3c:	str	xzr, [x20]
   22a40:	ldr	w8, [x19]
   22a44:	mov	x21, #0xffffffffffffffff    	// #-1
   22a48:	orr	w8, w8, #0x200
   22a4c:	str	w8, [x19]
   22a50:	ldrb	w8, [sp]
   22a54:	cmp	w8, #0x1f
   22a58:	b.hi	22a6c <PyInit__decimal@@Base+0x1bf58>  // b.pmore
   22a5c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   22a60:	ldr	x8, [x8, #1376]
   22a64:	ldr	x0, [sp, #40]
   22a68:	blr	x8
   22a6c:	ldrb	w8, [sp]
   22a70:	tbnz	w8, #4, 22930 <PyInit__decimal@@Base+0x1be1c>
   22a74:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   22a78:	ldr	x8, [x8, #1376]
   22a7c:	mov	x0, sp
   22a80:	blr	x8
   22a84:	b	22930 <PyInit__decimal@@Base+0x1be1c>
   22a88:	ldr	x8, [x20]
   22a8c:	mov	w21, #0x1                   	// #1
   22a90:	strh	wzr, [x8]
   22a94:	b	22930 <PyInit__decimal@@Base+0x1be1c>
   22a98:	mov	w24, wzr
   22a9c:	cbnz	w24, 22a2c <PyInit__decimal@@Base+0x1bf18>
   22aa0:	b	22a40 <PyInit__decimal@@Base+0x1bf2c>
   22aa4:	stp	x29, x30, [sp, #-80]!
   22aa8:	str	x25, [sp, #16]
   22aac:	stp	x24, x23, [sp, #32]
   22ab0:	stp	x22, x21, [sp, #48]
   22ab4:	stp	x20, x19, [sp, #64]
   22ab8:	mov	x29, sp
   22abc:	mov	x21, x4
   22ac0:	mov	x19, x3
   22ac4:	mov	x20, x2
   22ac8:	mov	x23, x1
   22acc:	mov	x22, x0
   22ad0:	mov	x25, xzr
   22ad4:	b	22b18 <PyInit__decimal@@Base+0x1c004>
   22ad8:	mov	x0, x19
   22adc:	mov	x1, x19
   22ae0:	mov	x2, x21
   22ae4:	mov	x3, x20
   22ae8:	bl	1295c <PyInit__decimal@@Base+0xbe48>
   22aec:	ldr	x8, [x22]
   22af0:	mov	x1, x21
   22af4:	add	x24, x25, #0x1
   22af8:	strh	w0, [x8, x25, lsl #1]
   22afc:	mov	x0, x19
   22b00:	bl	1abf0 <PyInit__decimal@@Base+0x140dc>
   22b04:	add	x8, x19, x0, lsl #3
   22b08:	ldur	x8, [x8, #-8]
   22b0c:	mov	x21, x0
   22b10:	mov	x25, x24
   22b14:	cbz	x8, 22b3c <PyInit__decimal@@Base+0x1c028>
   22b18:	cmp	x25, x23
   22b1c:	b.cc	22ad8 <PyInit__decimal@@Base+0x1bfc4>  // b.lo, b.ul, b.last
   22b20:	add	x23, x25, #0x1
   22b24:	mov	x0, x22
   22b28:	mov	x1, x23
   22b2c:	bl	262b0 <PyInit__decimal@@Base+0x1f79c>
   22b30:	tst	w0, #0xff
   22b34:	b.ne	22ad8 <PyInit__decimal@@Base+0x1bfc4>  // b.any
   22b38:	mov	x24, #0xffffffffffffffff    	// #-1
   22b3c:	mov	x0, x24
   22b40:	ldp	x20, x19, [sp, #64]
   22b44:	ldp	x22, x21, [sp, #48]
   22b48:	ldp	x24, x23, [sp, #32]
   22b4c:	ldr	x25, [sp, #16]
   22b50:	ldp	x29, x30, [sp], #80
   22b54:	ret
   22b58:	stp	x29, x30, [sp, #-80]!
   22b5c:	str	x28, [sp, #16]
   22b60:	stp	x24, x23, [sp, #32]
   22b64:	stp	x22, x21, [sp, #48]
   22b68:	stp	x20, x19, [sp, #64]
   22b6c:	mov	x29, sp
   22b70:	sub	sp, sp, #0x230
   22b74:	mov	w8, #0x30                  	// #48
   22b78:	strb	w8, [sp]
   22b7c:	mov	w8, #0x40                  	// #64
   22b80:	stp	xzr, x8, [sp, #24]
   22b84:	add	x8, sp, #0x30
   22b88:	stp	xzr, xzr, [sp, #8]
   22b8c:	str	x8, [sp, #40]
   22b90:	ldrb	w8, [x3]
   22b94:	mov	x19, x4
   22b98:	tst	w8, #0xe
   22b9c:	b.eq	22bd0 <PyInit__decimal@@Base+0x1c0bc>  // b.none
   22ba0:	ldr	w8, [x19]
   22ba4:	mov	x21, #0xffffffffffffffff    	// #-1
   22ba8:	orr	w8, w8, #0x100
   22bac:	str	w8, [x19]
   22bb0:	mov	x0, x21
   22bb4:	add	sp, sp, #0x230
   22bb8:	ldp	x20, x19, [sp, #64]
   22bbc:	ldp	x22, x21, [sp, #48]
   22bc0:	ldp	x24, x23, [sp, #32]
   22bc4:	ldr	x28, [sp, #16]
   22bc8:	ldp	x29, x30, [sp], #80
   22bcc:	ret
   22bd0:	mov	x20, x0
   22bd4:	mov	x0, x3
   22bd8:	mov	x23, x3
   22bdc:	mov	w21, w2
   22be0:	mov	x22, x1
   22be4:	bl	18ce8 <PyInit__decimal@@Base+0x121d4>
   22be8:	cbz	w0, 22ba0 <PyInit__decimal@@Base+0x1c08c>
   22bec:	ldr	x8, [x20]
   22bf0:	cbz	x8, 22c38 <PyInit__decimal@@Base+0x1c124>
   22bf4:	mov	w24, wzr
   22bf8:	ldrb	w8, [x23]
   22bfc:	tst	w8, #0xe
   22c00:	b.ne	22c18 <PyInit__decimal@@Base+0x1c104>  // b.any
   22c04:	ldr	x8, [x23, #40]
   22c08:	ldr	x9, [x23, #24]
   22c0c:	add	x8, x8, x9, lsl #3
   22c10:	ldur	x8, [x8, #-8]
   22c14:	cbz	x8, 22d08 <PyInit__decimal@@Base+0x1c1f4>
   22c18:	ldr	x2, [x23, #8]
   22c1c:	tbnz	x2, #63, 22c68 <PyInit__decimal@@Base+0x1c154>
   22c20:	mov	x0, sp
   22c24:	mov	x1, x23
   22c28:	mov	x3, x19
   22c2c:	bl	1a214 <PyInit__decimal@@Base+0x13700>
   22c30:	cbnz	w0, 22c84 <PyInit__decimal@@Base+0x1c170>
   22c34:	b	22ca8 <PyInit__decimal@@Base+0x1c194>
   22c38:	mov	x0, x23
   22c3c:	mov	w1, w21
   22c40:	bl	22844 <PyInit__decimal@@Base+0x1bd30>
   22c44:	cmn	x0, #0x1
   22c48:	b.eq	22ba0 <PyInit__decimal@@Base+0x1c08c>  // b.none
   22c4c:	mov	w1, #0x4                   	// #4
   22c50:	mov	x22, x0
   22c54:	bl	17adc <PyInit__decimal@@Base+0x10fc8>
   22c58:	str	x0, [x20]
   22c5c:	cbz	x0, 22d18 <PyInit__decimal@@Base+0x1c204>
   22c60:	mov	w24, #0x1                   	// #1
   22c64:	b	22bf8 <PyInit__decimal@@Base+0x1c0e4>
   22c68:	neg	x2, x2
   22c6c:	mov	x0, sp
   22c70:	mov	x1, x23
   22c74:	mov	x3, x19
   22c78:	bl	1a604 <PyInit__decimal@@Base+0x13af0>
   22c7c:	cmn	x0, #0x1
   22c80:	b.eq	22ca8 <PyInit__decimal@@Base+0x1c194>  // b.none
   22c84:	ldr	x3, [sp, #40]
   22c88:	ldr	x4, [sp, #24]
   22c8c:	mov	x0, x20
   22c90:	mov	x1, x22
   22c94:	mov	w2, w21
   22c98:	bl	22d24 <PyInit__decimal@@Base+0x1c210>
   22c9c:	mov	x21, x0
   22ca0:	cmn	x0, #0x1
   22ca4:	b.ne	22cd0 <PyInit__decimal@@Base+0x1c1bc>  // b.any
   22ca8:	cbz	w24, 22cc0 <PyInit__decimal@@Base+0x1c1ac>
   22cac:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   22cb0:	ldr	x8, [x8, #1376]
   22cb4:	ldr	x0, [x20]
   22cb8:	blr	x8
   22cbc:	str	xzr, [x20]
   22cc0:	ldr	w8, [x19]
   22cc4:	mov	x21, #0xffffffffffffffff    	// #-1
   22cc8:	orr	w8, w8, #0x200
   22ccc:	str	w8, [x19]
   22cd0:	ldrb	w8, [sp]
   22cd4:	cmp	w8, #0x1f
   22cd8:	b.hi	22cec <PyInit__decimal@@Base+0x1c1d8>  // b.pmore
   22cdc:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   22ce0:	ldr	x8, [x8, #1376]
   22ce4:	ldr	x0, [sp, #40]
   22ce8:	blr	x8
   22cec:	ldrb	w8, [sp]
   22cf0:	tbnz	w8, #4, 22bb0 <PyInit__decimal@@Base+0x1c09c>
   22cf4:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   22cf8:	ldr	x8, [x8, #1376]
   22cfc:	mov	x0, sp
   22d00:	blr	x8
   22d04:	b	22bb0 <PyInit__decimal@@Base+0x1c09c>
   22d08:	ldr	x8, [x20]
   22d0c:	mov	w21, #0x1                   	// #1
   22d10:	str	wzr, [x8]
   22d14:	b	22bb0 <PyInit__decimal@@Base+0x1c09c>
   22d18:	mov	w24, wzr
   22d1c:	cbnz	w24, 22cac <PyInit__decimal@@Base+0x1c198>
   22d20:	b	22cc0 <PyInit__decimal@@Base+0x1c1ac>
   22d24:	stp	x29, x30, [sp, #-80]!
   22d28:	str	x25, [sp, #16]
   22d2c:	stp	x24, x23, [sp, #32]
   22d30:	stp	x22, x21, [sp, #48]
   22d34:	stp	x20, x19, [sp, #64]
   22d38:	mov	x29, sp
   22d3c:	mov	x20, x4
   22d40:	mov	x19, x3
   22d44:	mov	x22, x1
   22d48:	mov	x21, x0
   22d4c:	mov	x25, xzr
   22d50:	mov	w23, w2
   22d54:	b	22da4 <PyInit__decimal@@Base+0x1c290>
   22d58:	mov	x4, #0x89e80000            	// #2313682944
   22d5c:	movk	x4, #0x2304, lsl #32
   22d60:	movk	x4, #0x8ac7, lsl #48
   22d64:	mov	x0, x19
   22d68:	mov	x1, x19
   22d6c:	mov	x2, x20
   22d70:	mov	x3, x23
   22d74:	bl	13698 <PyInit__decimal@@Base+0xcb84>
   22d78:	ldr	x8, [x21]
   22d7c:	mov	x1, x20
   22d80:	add	x24, x25, #0x1
   22d84:	str	w0, [x8, x25, lsl #2]
   22d88:	mov	x0, x19
   22d8c:	bl	1abf0 <PyInit__decimal@@Base+0x140dc>
   22d90:	add	x8, x19, x0, lsl #3
   22d94:	ldur	x8, [x8, #-8]
   22d98:	mov	x20, x0
   22d9c:	mov	x25, x24
   22da0:	cbz	x8, 22dc8 <PyInit__decimal@@Base+0x1c2b4>
   22da4:	cmp	x25, x22
   22da8:	b.cc	22d58 <PyInit__decimal@@Base+0x1c244>  // b.lo, b.ul, b.last
   22dac:	add	x22, x25, #0x1
   22db0:	mov	x0, x21
   22db4:	mov	x1, x22
   22db8:	bl	262f0 <PyInit__decimal@@Base+0x1f7dc>
   22dbc:	tst	w0, #0xff
   22dc0:	b.ne	22d58 <PyInit__decimal@@Base+0x1c244>  // b.any
   22dc4:	mov	x24, #0xffffffffffffffff    	// #-1
   22dc8:	mov	x0, x24
   22dcc:	ldp	x20, x19, [sp, #64]
   22dd0:	ldp	x22, x21, [sp, #48]
   22dd4:	ldp	x24, x23, [sp, #32]
   22dd8:	ldr	x25, [sp, #16]
   22ddc:	ldp	x29, x30, [sp], #80
   22de0:	ret
   22de4:	stp	x29, x30, [sp, #-96]!
   22de8:	str	x27, [sp, #16]
   22dec:	stp	x26, x25, [sp, #32]
   22df0:	stp	x24, x23, [sp, #48]
   22df4:	stp	x22, x21, [sp, #64]
   22df8:	stp	x20, x19, [sp, #80]
   22dfc:	mov	x29, sp
   22e00:	mov	x27, x1
   22e04:	mov	x20, x0
   22e08:	mov	x0, x2
   22e0c:	mov	w1, w4
   22e10:	mov	x19, x6
   22e14:	mov	x21, x5
   22e18:	mov	w24, w4
   22e1c:	mov	w23, w3
   22e20:	mov	x25, x2
   22e24:	bl	22fa4 <PyInit__decimal@@Base+0x1c490>
   22e28:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   22e2c:	cmp	x0, x8
   22e30:	b.ne	22e3c <PyInit__decimal@@Base+0x1c328>  // b.any
   22e34:	mov	w1, #0x100                 	// #256
   22e38:	b	22e9c <PyInit__decimal@@Base+0x1c388>
   22e3c:	mov	x26, x0
   22e40:	mov	w1, #0x8                   	// #8
   22e44:	mov	x0, x25
   22e48:	bl	17adc <PyInit__decimal@@Base+0x10fc8>
   22e4c:	cbz	x0, 22e98 <PyInit__decimal@@Base+0x1c384>
   22e50:	mov	x22, x0
   22e54:	cbz	x25, 22e70 <PyInit__decimal@@Base+0x1c35c>
   22e58:	mov	x8, x22
   22e5c:	mov	x9, x25
   22e60:	ldrh	w10, [x27], #2
   22e64:	subs	x9, x9, #0x1
   22e68:	str	x10, [x8], #8
   22e6c:	b.ne	22e60 <PyInit__decimal@@Base+0x1c34c>  // b.any
   22e70:	adrp	x27, 42000 <PyInit__decimal@@Base+0x3b4ec>
   22e74:	ldr	x9, [x27, #1344]
   22e78:	ldr	x8, [x20, #32]
   22e7c:	cmp	x9, x26
   22e80:	csel	x1, x26, x9, lt  // lt = tstop
   22e84:	cmp	x1, x8
   22e88:	b.ne	22eac <PyInit__decimal@@Base+0x1c398>  // b.any
   22e8c:	mov	w0, #0x1                   	// #1
   22e90:	cbnz	w0, 22ee0 <PyInit__decimal@@Base+0x1c3cc>
   22e94:	b	22f78 <PyInit__decimal@@Base+0x1c464>
   22e98:	mov	w1, #0x200                 	// #512
   22e9c:	mov	x0, x20
   22ea0:	mov	x2, x19
   22ea4:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   22ea8:	b	22f88 <PyInit__decimal@@Base+0x1c474>
   22eac:	ldrb	w9, [x20]
   22eb0:	tbnz	w9, #5, 22ec8 <PyInit__decimal@@Base+0x1c3b4>
   22eb4:	mov	x0, x20
   22eb8:	mov	x2, x19
   22ebc:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   22ec0:	cbnz	w0, 22ee0 <PyInit__decimal@@Base+0x1c3cc>
   22ec4:	b	22f78 <PyInit__decimal@@Base+0x1c464>
   22ec8:	cmp	x1, x8
   22ecc:	b.le	22e8c <PyInit__decimal@@Base+0x1c378>
   22ed0:	mov	x0, x20
   22ed4:	mov	x2, x19
   22ed8:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   22edc:	cbz	w0, 22f78 <PyInit__decimal@@Base+0x1c464>
   22ee0:	mov	x0, x20
   22ee4:	mov	x1, x26
   22ee8:	mov	x2, x22
   22eec:	mov	x3, x25
   22ef0:	mov	w4, w24
   22ef4:	mov	x5, x19
   22ef8:	bl	23004 <PyInit__decimal@@Base+0x1c4f0>
   22efc:	cmn	x0, #0x1
   22f00:	b.eq	22f78 <PyInit__decimal@@Base+0x1c464>  // b.none
   22f04:	ldrb	w8, [x20]
   22f08:	str	x0, [x20, #24]
   22f0c:	mov	x0, x20
   22f10:	str	xzr, [x20, #8]
   22f14:	and	w8, w8, #0xf0
   22f18:	orr	w8, w8, w23
   22f1c:	strb	w8, [x20]
   22f20:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   22f24:	ldr	x9, [x27, #1344]
   22f28:	ldp	x10, x8, [x20, #24]
   22f2c:	cmp	x9, x10
   22f30:	csel	x1, x10, x9, lt  // lt = tstop
   22f34:	cmp	x1, x8
   22f38:	b.eq	22f68 <PyInit__decimal@@Base+0x1c454>  // b.none
   22f3c:	ldrb	w9, [x20]
   22f40:	tbnz	w9, #5, 22f54 <PyInit__decimal@@Base+0x1c440>
   22f44:	mov	x0, x20
   22f48:	mov	x2, x19
   22f4c:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   22f50:	b	22f68 <PyInit__decimal@@Base+0x1c454>
   22f54:	cmp	x1, x8
   22f58:	b.le	22f68 <PyInit__decimal@@Base+0x1c454>
   22f5c:	mov	x0, x20
   22f60:	mov	x2, x19
   22f64:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   22f68:	mov	x0, x20
   22f6c:	mov	x1, x21
   22f70:	mov	x2, x19
   22f74:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   22f78:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   22f7c:	ldr	x8, [x8, #1376]
   22f80:	mov	x0, x22
   22f84:	blr	x8
   22f88:	ldp	x20, x19, [sp, #80]
   22f8c:	ldp	x22, x21, [sp, #64]
   22f90:	ldp	x24, x23, [sp, #48]
   22f94:	ldp	x26, x25, [sp, #32]
   22f98:	ldr	x27, [sp, #16]
   22f9c:	ldp	x29, x30, [sp], #96
   22fa0:	ret
   22fa4:	str	d8, [sp, #-32]!
   22fa8:	stp	x29, x30, [sp, #8]
   22fac:	str	x19, [sp, #24]
   22fb0:	mov	x29, sp
   22fb4:	mov	x8, #0x20000000000000      	// #9007199254740992
   22fb8:	cmp	x0, x8
   22fbc:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
   22fc0:	b.hi	22ff0 <PyInit__decimal@@Base+0x1c4dc>  // b.pmore
   22fc4:	ucvtf	d0, w1
   22fc8:	ucvtf	d8, x0
   22fcc:	bl	65c0 <log10@plt>
   22fd0:	adrp	x8, 2e000 <PyInit__decimal@@Base+0x274ec>
   22fd4:	ldr	d2, [x8, #3208]
   22fd8:	fmov	d1, #1.900000000000000000e+01
   22fdc:	fdiv	d0, d0, d1
   22fe0:	fmul	d0, d0, d8
   22fe4:	fcvtzs	x8, d0
   22fe8:	fcmp	d0, d2
   22fec:	csinc	x19, x19, x8, ge  // ge = tcont
   22ff0:	mov	x0, x19
   22ff4:	ldr	x19, [sp, #24]
   22ff8:	ldp	x29, x30, [sp, #8]
   22ffc:	ldr	d8, [sp], #32
   23000:	ret
   23004:	stp	x29, x30, [sp, #-96]!
   23008:	str	x27, [sp, #16]
   2300c:	stp	x26, x25, [sp, #32]
   23010:	stp	x24, x23, [sp, #48]
   23014:	stp	x22, x21, [sp, #64]
   23018:	stp	x20, x19, [sp, #80]
   2301c:	mov	x29, sp
   23020:	subs	x8, x3, #0x1
   23024:	ldr	x8, [x2, x8, lsl #3]
   23028:	ldr	x9, [x0, #40]
   2302c:	str	x8, [x9]
   23030:	b.eq	23170 <PyInit__decimal@@Base+0x1c65c>  // b.none
   23034:	mov	x19, x5
   23038:	mov	x20, x3
   2303c:	mov	x24, x1
   23040:	mov	x21, x0
   23044:	mov	w23, w4
   23048:	sub	x26, x2, #0x10
   2304c:	mov	w22, #0x1                   	// #1
   23050:	adrp	x27, 42000 <PyInit__decimal@@Base+0x3b4ec>
   23054:	b	2307c <PyInit__decimal@@Base+0x1c568>
   23058:	mov	w0, #0x1                   	// #1
   2305c:	cbz	w0, 23178 <PyInit__decimal@@Base+0x1c664>
   23060:	ldr	x8, [x21, #40]
   23064:	add	x9, x22, #0x1
   23068:	str	x25, [x8, x22, lsl #3]
   2306c:	mov	x22, x9
   23070:	sub	x20, x20, #0x1
   23074:	cmp	x20, #0x1
   23078:	b.eq	2317c <PyInit__decimal@@Base+0x1c668>  // b.none
   2307c:	ldr	x0, [x21, #40]
   23080:	mov	x2, x22
   23084:	mov	x3, x23
   23088:	mov	x1, x0
   2308c:	bl	13550 <PyInit__decimal@@Base+0xca3c>
   23090:	cbz	x0, 23104 <PyInit__decimal@@Base+0x1c5f0>
   23094:	mov	x25, x0
   23098:	cmp	x22, x24
   2309c:	b.lt	230f4 <PyInit__decimal@@Base+0x1c5e0>  // b.tstop
   230a0:	ldr	x9, [x27, #1344]
   230a4:	ldr	x8, [x21, #32]
   230a8:	add	x24, x22, #0x1
   230ac:	cmp	x9, x24
   230b0:	csinc	x1, x9, x22, ge  // ge = tcont
   230b4:	cmp	x1, x8
   230b8:	b.eq	230ec <PyInit__decimal@@Base+0x1c5d8>  // b.none
   230bc:	ldrb	w9, [x21]
   230c0:	tbnz	w9, #5, 230d4 <PyInit__decimal@@Base+0x1c5c0>
   230c4:	mov	x0, x21
   230c8:	mov	x2, x19
   230cc:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   230d0:	b	230f0 <PyInit__decimal@@Base+0x1c5dc>
   230d4:	cmp	x1, x8
   230d8:	b.le	230ec <PyInit__decimal@@Base+0x1c5d8>
   230dc:	mov	x0, x21
   230e0:	mov	x2, x19
   230e4:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   230e8:	b	230f0 <PyInit__decimal@@Base+0x1c5dc>
   230ec:	mov	w0, #0x1                   	// #1
   230f0:	cbz	w0, 23178 <PyInit__decimal@@Base+0x1c664>
   230f4:	ldr	x8, [x21, #40]
   230f8:	add	x9, x22, #0x1
   230fc:	str	x25, [x8, x22, lsl #3]
   23100:	mov	x22, x9
   23104:	ldr	x0, [x21, #40]
   23108:	ldr	x2, [x26, x20, lsl #3]
   2310c:	mov	x1, x22
   23110:	bl	12490 <PyInit__decimal@@Base+0xb97c>
   23114:	cbz	x0, 23070 <PyInit__decimal@@Base+0x1c55c>
   23118:	mov	x25, x0
   2311c:	cmp	x22, x24
   23120:	b.lt	23060 <PyInit__decimal@@Base+0x1c54c>  // b.tstop
   23124:	ldr	x9, [x27, #1344]
   23128:	ldr	x8, [x21, #32]
   2312c:	add	x24, x22, #0x1
   23130:	cmp	x9, x24
   23134:	csinc	x1, x9, x22, ge  // ge = tcont
   23138:	cmp	x1, x8
   2313c:	b.eq	23058 <PyInit__decimal@@Base+0x1c544>  // b.none
   23140:	ldrb	w9, [x21]
   23144:	tbnz	w9, #5, 23158 <PyInit__decimal@@Base+0x1c644>
   23148:	mov	x0, x21
   2314c:	mov	x2, x19
   23150:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   23154:	b	2305c <PyInit__decimal@@Base+0x1c548>
   23158:	cmp	x1, x8
   2315c:	b.le	23058 <PyInit__decimal@@Base+0x1c544>
   23160:	mov	x0, x21
   23164:	mov	x2, x19
   23168:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   2316c:	b	2305c <PyInit__decimal@@Base+0x1c548>
   23170:	mov	w22, #0x1                   	// #1
   23174:	b	2317c <PyInit__decimal@@Base+0x1c668>
   23178:	mov	x22, #0xffffffffffffffff    	// #-1
   2317c:	mov	x0, x22
   23180:	ldp	x20, x19, [sp, #80]
   23184:	ldp	x22, x21, [sp, #64]
   23188:	ldp	x24, x23, [sp, #48]
   2318c:	ldp	x26, x25, [sp, #32]
   23190:	ldr	x27, [sp, #16]
   23194:	ldp	x29, x30, [sp], #96
   23198:	ret
   2319c:	stp	x29, x30, [sp, #-96]!
   231a0:	str	x27, [sp, #16]
   231a4:	stp	x26, x25, [sp, #32]
   231a8:	stp	x24, x23, [sp, #48]
   231ac:	stp	x22, x21, [sp, #64]
   231b0:	stp	x20, x19, [sp, #80]
   231b4:	mov	x29, sp
   231b8:	mov	x24, x1
   231bc:	mov	x21, x0
   231c0:	mov	x0, x2
   231c4:	mov	w1, w4
   231c8:	mov	x19, x6
   231cc:	mov	x20, x5
   231d0:	mov	w25, w4
   231d4:	mov	w22, w3
   231d8:	mov	x23, x2
   231dc:	bl	22fa4 <PyInit__decimal@@Base+0x1c490>
   231e0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   231e4:	cmp	x0, x8
   231e8:	b.ne	23200 <PyInit__decimal@@Base+0x1c6ec>  // b.any
   231ec:	mov	w1, #0x100                 	// #256
   231f0:	mov	x0, x21
   231f4:	mov	x2, x19
   231f8:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   231fc:	b	232f8 <PyInit__decimal@@Base+0x1c7e4>
   23200:	adrp	x27, 42000 <PyInit__decimal@@Base+0x3b4ec>
   23204:	ldr	x9, [x27, #1344]
   23208:	ldr	x8, [x21, #32]
   2320c:	mov	x26, x0
   23210:	cmp	x9, x0
   23214:	csel	x1, x0, x9, lt  // lt = tstop
   23218:	cmp	x1, x8
   2321c:	b.ne	2322c <PyInit__decimal@@Base+0x1c718>  // b.any
   23220:	mov	w0, #0x1                   	// #1
   23224:	cbnz	w0, 23260 <PyInit__decimal@@Base+0x1c74c>
   23228:	b	232f8 <PyInit__decimal@@Base+0x1c7e4>
   2322c:	ldrb	w9, [x21]
   23230:	tbnz	w9, #5, 23248 <PyInit__decimal@@Base+0x1c734>
   23234:	mov	x0, x21
   23238:	mov	x2, x19
   2323c:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   23240:	cbnz	w0, 23260 <PyInit__decimal@@Base+0x1c74c>
   23244:	b	232f8 <PyInit__decimal@@Base+0x1c7e4>
   23248:	cmp	x1, x8
   2324c:	b.le	23220 <PyInit__decimal@@Base+0x1c70c>
   23250:	mov	x0, x21
   23254:	mov	x2, x19
   23258:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   2325c:	cbz	w0, 232f8 <PyInit__decimal@@Base+0x1c7e4>
   23260:	mov	w4, w25
   23264:	mov	x0, x21
   23268:	mov	x1, x26
   2326c:	mov	x2, x24
   23270:	mov	x3, x23
   23274:	mov	x5, x19
   23278:	bl	23314 <PyInit__decimal@@Base+0x1c800>
   2327c:	cmn	x0, #0x1
   23280:	b.eq	232f8 <PyInit__decimal@@Base+0x1c7e4>  // b.none
   23284:	ldrb	w8, [x21]
   23288:	str	x0, [x21, #24]
   2328c:	mov	x0, x21
   23290:	str	xzr, [x21, #8]
   23294:	and	w8, w8, #0xf0
   23298:	orr	w8, w8, w22
   2329c:	strb	w8, [x21]
   232a0:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   232a4:	ldr	x9, [x27, #1344]
   232a8:	ldp	x10, x8, [x21, #24]
   232ac:	cmp	x9, x10
   232b0:	csel	x1, x10, x9, lt  // lt = tstop
   232b4:	cmp	x1, x8
   232b8:	b.eq	232e8 <PyInit__decimal@@Base+0x1c7d4>  // b.none
   232bc:	ldrb	w9, [x21]
   232c0:	tbnz	w9, #5, 232d4 <PyInit__decimal@@Base+0x1c7c0>
   232c4:	mov	x0, x21
   232c8:	mov	x2, x19
   232cc:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   232d0:	b	232e8 <PyInit__decimal@@Base+0x1c7d4>
   232d4:	cmp	x1, x8
   232d8:	b.le	232e8 <PyInit__decimal@@Base+0x1c7d4>
   232dc:	mov	x0, x21
   232e0:	mov	x2, x19
   232e4:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   232e8:	mov	x0, x21
   232ec:	mov	x1, x20
   232f0:	mov	x2, x19
   232f4:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   232f8:	ldp	x20, x19, [sp, #80]
   232fc:	ldp	x22, x21, [sp, #64]
   23300:	ldp	x24, x23, [sp, #48]
   23304:	ldp	x26, x25, [sp, #32]
   23308:	ldr	x27, [sp, #16]
   2330c:	ldp	x29, x30, [sp], #96
   23310:	ret
   23314:	stp	x29, x30, [sp, #-96]!
   23318:	str	x27, [sp, #16]
   2331c:	stp	x26, x25, [sp, #32]
   23320:	stp	x24, x23, [sp, #48]
   23324:	stp	x22, x21, [sp, #64]
   23328:	stp	x20, x19, [sp, #80]
   2332c:	mov	x29, sp
   23330:	subs	x8, x3, #0x1
   23334:	ldr	w8, [x2, x8, lsl #2]
   23338:	ldr	x9, [x0, #40]
   2333c:	str	x8, [x9]
   23340:	b.eq	23498 <PyInit__decimal@@Base+0x1c984>  // b.none
   23344:	mov	x19, x5
   23348:	mov	x20, x4
   2334c:	mov	x21, x3
   23350:	mov	x24, x1
   23354:	mov	x22, x0
   23358:	sub	x26, x2, #0x8
   2335c:	mov	w23, #0x1                   	// #1
   23360:	adrp	x27, 42000 <PyInit__decimal@@Base+0x3b4ec>
   23364:	b	2338c <PyInit__decimal@@Base+0x1c878>
   23368:	mov	w0, #0x1                   	// #1
   2336c:	cbz	w0, 234a0 <PyInit__decimal@@Base+0x1c98c>
   23370:	ldr	x8, [x22, #40]
   23374:	add	x9, x23, #0x1
   23378:	str	x25, [x8, x23, lsl #3]
   2337c:	mov	x23, x9
   23380:	sub	x21, x21, #0x1
   23384:	cmp	x21, #0x1
   23388:	b.eq	234a4 <PyInit__decimal@@Base+0x1c990>  // b.none
   2338c:	ldr	x0, [x22, #40]
   23390:	mov	x4, #0x89e80000            	// #2313682944
   23394:	movk	x4, #0x2304, lsl #32
   23398:	movk	x4, #0x8ac7, lsl #48
   2339c:	mov	x1, x0
   233a0:	mov	x2, x23
   233a4:	mov	x3, x20
   233a8:	bl	135ec <PyInit__decimal@@Base+0xcad8>
   233ac:	cbz	x0, 23420 <PyInit__decimal@@Base+0x1c90c>
   233b0:	mov	x25, x0
   233b4:	cmp	x23, x24
   233b8:	b.lt	23410 <PyInit__decimal@@Base+0x1c8fc>  // b.tstop
   233bc:	ldr	x9, [x27, #1344]
   233c0:	ldr	x8, [x22, #32]
   233c4:	add	x24, x23, #0x1
   233c8:	cmp	x9, x24
   233cc:	csinc	x1, x9, x23, ge  // ge = tcont
   233d0:	cmp	x1, x8
   233d4:	b.eq	23408 <PyInit__decimal@@Base+0x1c8f4>  // b.none
   233d8:	ldrb	w9, [x22]
   233dc:	tbnz	w9, #5, 233f0 <PyInit__decimal@@Base+0x1c8dc>
   233e0:	mov	x0, x22
   233e4:	mov	x2, x19
   233e8:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   233ec:	b	2340c <PyInit__decimal@@Base+0x1c8f8>
   233f0:	cmp	x1, x8
   233f4:	b.le	23408 <PyInit__decimal@@Base+0x1c8f4>
   233f8:	mov	x0, x22
   233fc:	mov	x2, x19
   23400:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   23404:	b	2340c <PyInit__decimal@@Base+0x1c8f8>
   23408:	mov	w0, #0x1                   	// #1
   2340c:	cbz	w0, 234a0 <PyInit__decimal@@Base+0x1c98c>
   23410:	ldr	x8, [x22, #40]
   23414:	add	x9, x23, #0x1
   23418:	str	x25, [x8, x23, lsl #3]
   2341c:	mov	x23, x9
   23420:	ldr	x0, [x22, #40]
   23424:	ldr	w2, [x26, x21, lsl #2]
   23428:	mov	x3, #0x89e80000            	// #2313682944
   2342c:	movk	x3, #0x2304, lsl #32
   23430:	movk	x3, #0x8ac7, lsl #48
   23434:	mov	x1, x23
   23438:	bl	134e4 <PyInit__decimal@@Base+0xc9d0>
   2343c:	cbz	x0, 23380 <PyInit__decimal@@Base+0x1c86c>
   23440:	mov	x25, x0
   23444:	cmp	x23, x24
   23448:	b.lt	23370 <PyInit__decimal@@Base+0x1c85c>  // b.tstop
   2344c:	ldr	x9, [x27, #1344]
   23450:	ldr	x8, [x22, #32]
   23454:	add	x24, x23, #0x1
   23458:	cmp	x9, x24
   2345c:	csinc	x1, x9, x23, ge  // ge = tcont
   23460:	cmp	x1, x8
   23464:	b.eq	23368 <PyInit__decimal@@Base+0x1c854>  // b.none
   23468:	ldrb	w9, [x22]
   2346c:	tbnz	w9, #5, 23480 <PyInit__decimal@@Base+0x1c96c>
   23470:	mov	x0, x22
   23474:	mov	x2, x19
   23478:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   2347c:	b	2336c <PyInit__decimal@@Base+0x1c858>
   23480:	cmp	x1, x8
   23484:	b.le	23368 <PyInit__decimal@@Base+0x1c854>
   23488:	mov	x0, x22
   2348c:	mov	x2, x19
   23490:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   23494:	b	2336c <PyInit__decimal@@Base+0x1c858>
   23498:	mov	w23, #0x1                   	// #1
   2349c:	b	234a4 <PyInit__decimal@@Base+0x1c990>
   234a0:	mov	x23, #0xffffffffffffffff    	// #-1
   234a4:	mov	x0, x23
   234a8:	ldp	x20, x19, [sp, #80]
   234ac:	ldp	x22, x21, [sp, #64]
   234b0:	ldp	x24, x23, [sp, #48]
   234b4:	ldp	x26, x25, [sp, #32]
   234b8:	ldr	x27, [sp, #16]
   234bc:	ldp	x29, x30, [sp], #96
   234c0:	ret
   234c4:	sub	sp, sp, #0x40
   234c8:	stp	x29, x30, [sp, #16]
   234cc:	stp	x22, x21, [sp, #32]
   234d0:	stp	x20, x19, [sp, #48]
   234d4:	add	x29, sp, #0x10
   234d8:	mov	x19, x1
   234dc:	mov	x20, x0
   234e0:	cbz	x2, 23540 <PyInit__decimal@@Base+0x1ca2c>
   234e4:	ldr	x0, [x19, #40]
   234e8:	ldr	x1, [x19, #24]
   234ec:	add	x8, x0, x1, lsl #3
   234f0:	ldur	x8, [x8, #-8]
   234f4:	cbz	x8, 23540 <PyInit__decimal@@Base+0x1ca2c>
   234f8:	ldr	x8, [x19, #16]
   234fc:	mov	x21, x2
   23500:	subs	x2, x8, x2
   23504:	b.le	23550 <PyInit__decimal@@Base+0x1ca3c>
   23508:	add	x0, sp, #0x8
   2350c:	mov	x1, sp
   23510:	str	x2, [x20, #16]
   23514:	bl	181e0 <PyInit__decimal@@Base+0x116cc>
   23518:	ldp	x8, x9, [sp]
   2351c:	ldr	x0, [x20, #40]
   23520:	ldr	x1, [x19, #40]
   23524:	ldr	x2, [x19, #24]
   23528:	cmp	x8, #0x0
   2352c:	mov	x3, x21
   23530:	cinc	x22, x9, ne  // ne = any
   23534:	bl	13330 <PyInit__decimal@@Base+0xc81c>
   23538:	str	x22, [x20, #24]
   2353c:	b	23560 <PyInit__decimal@@Base+0x1ca4c>
   23540:	mov	x0, x20
   23544:	mov	x1, x19
   23548:	bl	236a8 <PyInit__decimal@@Base+0x1cb94>
   2354c:	b	23578 <PyInit__decimal@@Base+0x1ca64>
   23550:	cset	w2, eq  // eq = none
   23554:	bl	1a440 <PyInit__decimal@@Base+0x1392c>
   23558:	mov	x0, x20
   2355c:	bl	18a8c <PyInit__decimal@@Base+0x11f78>
   23560:	ldrb	w8, [x19]
   23564:	ldrb	w9, [x20]
   23568:	bfxil	w9, w8, #0, #4
   2356c:	strb	w9, [x20]
   23570:	ldr	x8, [x19, #8]
   23574:	str	x8, [x20, #8]
   23578:	ldp	x20, x19, [sp, #48]
   2357c:	ldp	x22, x21, [sp, #32]
   23580:	ldp	x29, x30, [sp, #16]
   23584:	add	sp, sp, #0x40
   23588:	ret
   2358c:	sub	sp, sp, #0x50
   23590:	stp	x29, x30, [sp, #16]
   23594:	str	x23, [sp, #32]
   23598:	stp	x22, x21, [sp, #48]
   2359c:	stp	x20, x19, [sp, #64]
   235a0:	add	x29, sp, #0x10
   235a4:	mov	x21, x2
   235a8:	ldr	x2, [x2, #16]
   235ac:	mov	w22, w3
   235b0:	mov	x19, x1
   235b4:	mov	x20, x0
   235b8:	add	x0, sp, #0x8
   235bc:	add	x1, x29, #0x18
   235c0:	mov	w3, #0x13                  	// #19
   235c4:	mov	w23, #0x13                  	// #19
   235c8:	bl	18dc8 <PyInit__decimal@@Base+0x122b4>
   235cc:	ldr	x8, [x29, #24]
   235d0:	cmp	x8, #0x0
   235d4:	csel	x8, x23, x8, eq  // eq = none
   235d8:	str	x8, [x29, #24]
   235dc:	str	xzr, [x20]
   235e0:	ldr	x9, [x21, #40]
   235e4:	ldr	x10, [x21, #24]
   235e8:	add	x9, x9, x10, lsl #3
   235ec:	ldur	x2, [x9, #-8]
   235f0:	mov	w9, w22
   235f4:	subs	x22, x8, x9
   235f8:	str	x2, [x19]
   235fc:	b.cs	23668 <PyInit__decimal@@Base+0x1cb54>  // b.hs, b.nlast
   23600:	ldr	x10, [x21, #24]
   23604:	cmp	x10, #0x2
   23608:	b.lt	2367c <PyInit__decimal@@Base+0x1cb68>  // b.tstop
   2360c:	adrp	x23, 2e000 <PyInit__decimal@@Base+0x274ec>
   23610:	sub	x8, x9, x8
   23614:	add	x23, x23, #0x20
   23618:	ldr	x3, [x23, x8, lsl #3]
   2361c:	mov	x0, x20
   23620:	mov	x1, x19
   23624:	bl	23694 <PyInit__decimal@@Base+0x1cb80>
   23628:	ldr	x8, [x21, #40]
   2362c:	ldr	x9, [x21, #24]
   23630:	add	x10, x23, x22, lsl #3
   23634:	add	x8, x8, x9, lsl #3
   23638:	ldur	x8, [x8, #-16]
   2363c:	ldr	x9, [x10, #152]
   23640:	udiv	x8, x8, x9
   23644:	str	x8, [sp, #8]
   23648:	ldr	x9, [x19]
   2364c:	adds	x8, x9, x8
   23650:	str	x8, [x19]
   23654:	b.cc	2367c <PyInit__decimal@@Base+0x1cb68>  // b.lo, b.ul, b.last
   23658:	ldr	x8, [x20]
   2365c:	add	x8, x8, #0x1
   23660:	str	x8, [x20]
   23664:	b	2367c <PyInit__decimal@@Base+0x1cb68>
   23668:	adrp	x8, 2e000 <PyInit__decimal@@Base+0x274ec>
   2366c:	add	x8, x8, #0x20
   23670:	ldr	x8, [x8, x22, lsl #3]
   23674:	udiv	x8, x2, x8
   23678:	str	x8, [x19]
   2367c:	ldp	x20, x19, [sp, #64]
   23680:	ldp	x22, x21, [sp, #48]
   23684:	ldr	x23, [sp, #32]
   23688:	ldp	x29, x30, [sp, #16]
   2368c:	add	sp, sp, #0x50
   23690:	ret
   23694:	mul	x8, x3, x2
   23698:	umulh	x9, x3, x2
   2369c:	str	x9, [x0]
   236a0:	str	x8, [x1]
   236a4:	ret
   236a8:	cmp	x0, x1
   236ac:	b.eq	23708 <PyInit__decimal@@Base+0x1cbf4>  // b.none
   236b0:	stp	x29, x30, [sp, #-32]!
   236b4:	stp	x20, x19, [sp, #16]
   236b8:	mov	x29, sp
   236bc:	ldr	x8, [x1, #24]
   236c0:	mov	x20, x1
   236c4:	mov	x19, x0
   236c8:	ldr	x0, [x0, #40]
   236cc:	ldr	x1, [x1, #40]
   236d0:	lsl	x2, x8, #3
   236d4:	bl	6420 <memcpy@plt>
   236d8:	ldrb	w8, [x20]
   236dc:	ldrb	w9, [x19]
   236e0:	bfxil	w9, w8, #0, #4
   236e4:	strb	w9, [x19]
   236e8:	ldr	x8, [x20, #8]
   236ec:	str	x8, [x19, #8]
   236f0:	ldr	x8, [x20, #16]
   236f4:	str	x8, [x19, #16]
   236f8:	ldr	x8, [x20, #24]
   236fc:	str	x8, [x19, #24]
   23700:	ldp	x20, x19, [sp, #16]
   23704:	ldp	x29, x30, [sp], #32
   23708:	ret
   2370c:	stp	x29, x30, [sp, #-48]!
   23710:	str	x21, [sp, #16]
   23714:	stp	x20, x19, [sp, #32]
   23718:	mov	x29, sp
   2371c:	mov	x19, x3
   23720:	mov	x20, x2
   23724:	mov	x21, x0
   23728:	bl	237c4 <PyInit__decimal@@Base+0x1ccb0>
   2372c:	cbz	w0, 237b4 <PyInit__decimal@@Base+0x1cca0>
   23730:	ldr	x0, [x21, #40]
   23734:	ldr	x1, [x21, #24]
   23738:	bl	12518 <PyInit__decimal@@Base+0xba04>
   2373c:	cbz	x0, 2376c <PyInit__decimal@@Base+0x1cc58>
   23740:	adrp	x8, 2e000 <PyInit__decimal@@Base+0x274ec>
   23744:	add	x8, x8, #0x20
   23748:	ldr	x9, [x21, #40]
   2374c:	ldr	x10, [x21, #24]
   23750:	ldr	x8, [x8, #144]
   23754:	add	x9, x9, x10, lsl #3
   23758:	stur	x8, [x9, #-8]
   2375c:	ldr	x8, [x21, #8]
   23760:	add	x8, x8, #0x1
   23764:	str	x8, [x21, #8]
   23768:	b	237a4 <PyInit__decimal@@Base+0x1cc90>
   2376c:	mov	x0, x21
   23770:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   23774:	ldr	x8, [x21, #16]
   23778:	ldr	x9, [x20]
   2377c:	cmp	x8, x9
   23780:	b.le	237b4 <PyInit__decimal@@Base+0x1cca0>
   23784:	mov	w1, #0x1                   	// #1
   23788:	mov	x0, x21
   2378c:	bl	1a340 <PyInit__decimal@@Base+0x1382c>
   23790:	ldr	x8, [x21, #8]
   23794:	add	x8, x8, #0x1
   23798:	str	x8, [x21, #8]
   2379c:	ldr	x8, [x20]
   237a0:	str	x8, [x21, #16]
   237a4:	mov	x0, x21
   237a8:	mov	x1, x20
   237ac:	mov	x2, x19
   237b0:	bl	19864 <PyInit__decimal@@Base+0x12d50>
   237b4:	ldp	x20, x19, [sp, #32]
   237b8:	ldr	x21, [sp, #16]
   237bc:	ldp	x29, x30, [sp], #48
   237c0:	ret
   237c4:	ldr	w9, [x2, #36]
   237c8:	mov	x8, x0
   237cc:	mov	w0, wzr
   237d0:	cmp	w9, #0x7
   237d4:	b.hi	23888 <PyInit__decimal@@Base+0x1cd74>  // b.pmore
   237d8:	adrp	x10, 2e000 <PyInit__decimal@@Base+0x274ec>
   237dc:	add	x10, x10, #0x361
   237e0:	adr	x11, 237f0 <PyInit__decimal@@Base+0x1ccdc>
   237e4:	ldrb	w12, [x10, x9]
   237e8:	add	x11, x11, x12, lsl #2
   237ec:	br	x11
   237f0:	cmp	x1, #0x0
   237f4:	cset	w0, ne  // ne = any
   237f8:	ret
   237fc:	cbz	x1, 238a0 <PyInit__decimal@@Base+0x1cd8c>
   23800:	ldrb	w8, [x8]
   23804:	mvn	w8, w8
   23808:	and	w0, w8, #0x1
   2380c:	ret
   23810:	cbz	x1, 238a0 <PyInit__decimal@@Base+0x1cd8c>
   23814:	ldrb	w8, [x8]
   23818:	and	w0, w8, #0x1
   2381c:	ret
   23820:	cmp	x1, #0x4
   23824:	cset	w0, hi  // hi = pmore
   23828:	ret
   2382c:	cmp	x1, #0x5
   23830:	cset	w0, hi  // hi = pmore
   23834:	ret
   23838:	cmp	x1, #0x5
   2383c:	b.ls	2388c <PyInit__decimal@@Base+0x1cd78>  // b.plast
   23840:	mov	w0, #0x1                   	// #1
   23844:	ret
   23848:	ldr	x8, [x8, #40]
   2384c:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   23850:	movk	x9, #0xcccd
   23854:	mov	w10, #0xa                   	// #10
   23858:	ldr	x8, [x8]
   2385c:	cmp	x1, #0x0
   23860:	cset	w11, ne  // ne = any
   23864:	umulh	x9, x8, x9
   23868:	lsr	x9, x9, #3
   2386c:	msub	w8, w9, w10, w8
   23870:	cmp	w8, #0x0
   23874:	cset	w9, eq  // eq = none
   23878:	cmp	w8, #0x5
   2387c:	cset	w8, eq  // eq = none
   23880:	orr	w8, w9, w8
   23884:	and	w0, w11, w8
   23888:	ret
   2388c:	b.ne	238a0 <PyInit__decimal@@Base+0x1cd8c>  // b.any
   23890:	ldr	x8, [x8, #40]
   23894:	ldr	w8, [x8]
   23898:	and	w0, w8, #0x1
   2389c:	ret
   238a0:	mov	w0, wzr
   238a4:	ret
   238a8:	stp	x29, x30, [sp, #-16]!
   238ac:	mov	x29, sp
   238b0:	ldr	x8, [x0, #8]
   238b4:	ldr	x9, [x1, #8]
   238b8:	subs	x4, x8, x9
   238bc:	b.ne	238fc <PyInit__decimal@@Base+0x1cde8>  // b.any
   238c0:	ldr	x8, [x0, #24]
   238c4:	sub	x8, x8, #0x1
   238c8:	tbnz	x8, #63, 2392c <PyInit__decimal@@Base+0x1ce18>
   238cc:	ldr	x9, [x0, #40]
   238d0:	ldr	x10, [x1, #40]
   238d4:	lsl	x11, x8, #3
   238d8:	sub	x8, x8, #0x1
   238dc:	ldr	x9, [x9, x11]
   238e0:	ldr	x10, [x10, x11]
   238e4:	cmp	x9, x10
   238e8:	b.eq	238c8 <PyInit__decimal@@Base+0x1cdb4>  // b.none
   238ec:	mov	w8, #0xffffffff            	// #-1
   238f0:	cneg	w0, w8, cs  // cs = hs, nlast
   238f4:	ldp	x29, x30, [sp], #16
   238f8:	ret
   238fc:	cmp	x4, #0x1
   23900:	b.lt	23938 <PyInit__decimal@@Base+0x1ce24>  // b.tstop
   23904:	ldr	x8, [x1, #40]
   23908:	ldr	x9, [x0, #40]
   2390c:	ldr	x2, [x1, #24]
   23910:	ldr	x3, [x0, #24]
   23914:	mov	x0, x8
   23918:	mov	x1, x9
   2391c:	bl	23960 <PyInit__decimal@@Base+0x1ce4c>
   23920:	neg	w0, w0
   23924:	ldp	x29, x30, [sp], #16
   23928:	ret
   2392c:	mov	w0, wzr
   23930:	ldp	x29, x30, [sp], #16
   23934:	ret
   23938:	ldr	x8, [x0, #40]
   2393c:	ldr	x9, [x1, #40]
   23940:	ldr	x2, [x0, #24]
   23944:	ldr	x3, [x1, #24]
   23948:	neg	x4, x4
   2394c:	mov	x0, x8
   23950:	mov	x1, x9
   23954:	bl	23960 <PyInit__decimal@@Base+0x1ce4c>
   23958:	ldp	x29, x30, [sp], #16
   2395c:	ret
   23960:	sub	sp, sp, #0x70
   23964:	stp	x29, x30, [sp, #32]
   23968:	str	x25, [sp, #48]
   2396c:	stp	x24, x23, [sp, #64]
   23970:	stp	x22, x21, [sp, #80]
   23974:	stp	x20, x19, [sp, #96]
   23978:	add	x29, sp, #0x20
   2397c:	mov	x20, x3
   23980:	mov	x23, x2
   23984:	mov	x22, x1
   23988:	mov	x19, x0
   2398c:	add	x0, sp, #0x8
   23990:	mov	x1, sp
   23994:	mov	w3, #0x13                  	// #19
   23998:	mov	x2, x4
   2399c:	bl	18dc8 <PyInit__decimal@@Base+0x122b4>
   239a0:	ldr	x24, [sp]
   239a4:	cbz	x24, 23a78 <PyInit__decimal@@Base+0x1cf64>
   239a8:	add	x8, x22, x20, lsl #3
   239ac:	ldur	x2, [x8, #-8]
   239b0:	mov	w8, #0x13                  	// #19
   239b4:	sub	x21, x8, x24
   239b8:	add	x0, sp, #0x10
   239bc:	sub	x1, x29, #0x8
   239c0:	mov	x3, x21
   239c4:	sub	x25, x23, #0x1
   239c8:	bl	23ad0 <PyInit__decimal@@Base+0x1cfbc>
   239cc:	ldr	x8, [sp, #16]
   239d0:	cbz	x8, 239e4 <PyInit__decimal@@Base+0x1ced0>
   239d4:	ldr	x9, [x19, x25, lsl #3]
   239d8:	cmp	x9, x8
   239dc:	b.ne	23aac <PyInit__decimal@@Base+0x1cf98>  // b.any
   239e0:	sub	x25, x23, #0x2
   239e4:	adrp	x8, 2e000 <PyInit__decimal@@Base+0x274ec>
   239e8:	add	x8, x8, #0x20
   239ec:	ldr	x23, [x8, x24, lsl #3]
   239f0:	sub	x8, x20, #0x2
   239f4:	cmn	x8, #0x1
   239f8:	b.eq	23a48 <PyInit__decimal@@Base+0x1cf34>  // b.none
   239fc:	ldur	x24, [x29, #-8]
   23a00:	add	x25, x19, x25, lsl #3
   23a04:	sub	x22, x22, #0x10
   23a08:	ldr	x2, [x22, x20, lsl #3]
   23a0c:	add	x0, sp, #0x10
   23a10:	add	x1, x29, #0x18
   23a14:	mov	x3, x21
   23a18:	bl	23ad0 <PyInit__decimal@@Base+0x1cfbc>
   23a1c:	ldr	x8, [sp, #16]
   23a20:	ldr	x9, [x25]
   23a24:	madd	x8, x24, x23, x8
   23a28:	cmp	x9, x8
   23a2c:	b.ne	23aa8 <PyInit__decimal@@Base+0x1cf94>  // b.any
   23a30:	ldr	x24, [x29, #24]
   23a34:	sub	x20, x20, #0x1
   23a38:	cmp	x20, #0x1
   23a3c:	sub	x25, x25, #0x8
   23a40:	b.ne	23a08 <PyInit__decimal@@Base+0x1cef4>  // b.any
   23a44:	stur	x24, [x29, #-8]
   23a48:	ldr	x8, [sp, #8]
   23a4c:	ldur	x9, [x29, #-8]
   23a50:	ldr	x8, [x19, x8, lsl #3]
   23a54:	mul	x9, x9, x23
   23a58:	cmp	x8, x9
   23a5c:	b.ne	23aac <PyInit__decimal@@Base+0x1cf98>  // b.any
   23a60:	ldr	x1, [sp, #8]
   23a64:	mov	x0, x19
   23a68:	bl	23e60 <PyInit__decimal@@Base+0x1d34c>
   23a6c:	cmp	w0, #0x0
   23a70:	cset	w0, eq  // eq = none
   23a74:	b	23ab4 <PyInit__decimal@@Base+0x1cfa0>
   23a78:	ldr	x8, [sp, #8]
   23a7c:	sub	x9, x22, #0x8
   23a80:	add	x8, x19, x8, lsl #3
   23a84:	sub	x8, x8, #0x8
   23a88:	cbz	x20, 23a60 <PyInit__decimal@@Base+0x1cf4c>
   23a8c:	lsl	x10, x20, #3
   23a90:	ldr	x11, [x8, x10]
   23a94:	ldr	x10, [x9, x10]
   23a98:	sub	x20, x20, #0x1
   23a9c:	cmp	x11, x10
   23aa0:	b.eq	23a88 <PyInit__decimal@@Base+0x1cf74>  // b.none
   23aa4:	b	23aac <PyInit__decimal@@Base+0x1cf98>
   23aa8:	stur	x24, [x29, #-8]
   23aac:	mov	w8, #0xffffffff            	// #-1
   23ab0:	cneg	w0, w8, cs  // cs = hs, nlast
   23ab4:	ldp	x20, x19, [sp, #96]
   23ab8:	ldp	x22, x21, [sp, #80]
   23abc:	ldp	x24, x23, [sp, #64]
   23ac0:	ldr	x25, [sp, #48]
   23ac4:	ldp	x29, x30, [sp, #32]
   23ac8:	add	sp, sp, #0x70
   23acc:	ret
   23ad0:	cmp	x3, #0x9
   23ad4:	b.hi	23b08 <PyInit__decimal@@Base+0x1cff4>  // b.pmore
   23ad8:	cmp	x3, #0x4
   23adc:	b.hi	23b5c <PyInit__decimal@@Base+0x1d048>  // b.pmore
   23ae0:	b.hi	23e38 <PyInit__decimal@@Base+0x1d324>  // b.pmore
   23ae4:	adrp	x8, 2e000 <PyInit__decimal@@Base+0x274ec>
   23ae8:	add	x8, x8, #0x378
   23aec:	adr	x9, 23afc <PyInit__decimal@@Base+0x1cfe8>
   23af0:	ldrb	w10, [x8, x3]
   23af4:	add	x9, x9, x10, lsl #2
   23af8:	br	x9
   23afc:	str	x2, [x0]
   23b00:	str	xzr, [x1]
   23b04:	ret
   23b08:	cmp	x3, #0xe
   23b0c:	b.hi	23ba8 <PyInit__decimal@@Base+0x1d094>  // b.pmore
   23b10:	sub	x8, x3, #0xa
   23b14:	cmp	x8, #0x4
   23b18:	b.hi	23e38 <PyInit__decimal@@Base+0x1d324>  // b.pmore
   23b1c:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   23b20:	add	x9, x9, #0x36e
   23b24:	adr	x10, 23b34 <PyInit__decimal@@Base+0x1d020>
   23b28:	ldrb	w11, [x9, x8]
   23b2c:	add	x10, x10, x11, lsl #2
   23b30:	br	x10
   23b34:	mov	x8, #0xd5bf                	// #54719
   23b38:	movk	x8, #0xbded, lsl #16
   23b3c:	movk	x8, #0xfece, lsl #32
   23b40:	movk	x8, #0xdbe6, lsl #48
   23b44:	mov	x9, #0xffffffffffff1c00    	// #-58368
   23b48:	movk	x9, #0xabf4, lsl #16
   23b4c:	umulh	x8, x2, x8
   23b50:	movk	x9, #0xfffd, lsl #32
   23b54:	lsr	x8, x8, #33
   23b58:	b	23dd4 <PyInit__decimal@@Base+0x1d2c0>
   23b5c:	sub	x8, x3, #0x5
   23b60:	cmp	x8, #0x4
   23b64:	b.hi	23e38 <PyInit__decimal@@Base+0x1d324>  // b.pmore
   23b68:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   23b6c:	add	x9, x9, #0x373
   23b70:	adr	x10, 23b80 <PyInit__decimal@@Base+0x1d06c>
   23b74:	ldrb	w11, [x9, x8]
   23b78:	add	x10, x10, x11, lsl #2
   23b7c:	br	x10
   23b80:	mov	x9, #0x7843                	// #30787
   23b84:	movk	x9, #0x71b4, lsl #16
   23b88:	movk	x9, #0x5ac4, lsl #32
   23b8c:	lsr	x8, x2, #5
   23b90:	movk	x9, #0xa7c, lsl #48
   23b94:	mov	x10, #0xffffffffffff7960    	// #-34464
   23b98:	umulh	x8, x8, x9
   23b9c:	movk	x10, #0xfffe, lsl #16
   23ba0:	lsr	x8, x8, #7
   23ba4:	b	23e2c <PyInit__decimal@@Base+0x1d318>
   23ba8:	sub	x8, x3, #0xf
   23bac:	cmp	x8, #0x4
   23bb0:	b.hi	23e38 <PyInit__decimal@@Base+0x1d324>  // b.pmore
   23bb4:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   23bb8:	add	x9, x9, #0x369
   23bbc:	adr	x10, 23bcc <PyInit__decimal@@Base+0x1d0b8>
   23bc0:	ldrb	w11, [x9, x8]
   23bc4:	add	x10, x10, x11, lsl #2
   23bc8:	br	x10
   23bcc:	mov	x9, #0xeac3                	// #60099
   23bd0:	movk	x9, #0xf3dc, lsl #16
   23bd4:	movk	x9, #0x4075, lsl #32
   23bd8:	mov	x10, #0x8000                	// #32768
   23bdc:	lsr	x8, x2, #15
   23be0:	movk	x9, #0x2, lsl #48
   23be4:	movk	x10, #0x5b39, lsl #16
   23be8:	movk	x10, #0x7281, lsl #32
   23bec:	umulh	x8, x8, x9
   23bf0:	movk	x10, #0xfffc, lsl #48
   23bf4:	lsr	x8, x8, #20
   23bf8:	b	23e2c <PyInit__decimal@@Base+0x1d318>
   23bfc:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   23c00:	movk	x8, #0xcccd
   23c04:	umulh	x8, x2, x8
   23c08:	mov	x9, #0xfffffffffffffff6    	// #-10
   23c0c:	lsr	x8, x8, #3
   23c10:	b	23dd4 <PyInit__decimal@@Base+0x1d2c0>
   23c14:	mov	x9, #0xf5c3                	// #62915
   23c18:	movk	x9, #0x5c28, lsl #16
   23c1c:	movk	x9, #0xc28f, lsl #32
   23c20:	lsr	x8, x2, #2
   23c24:	movk	x9, #0x28f5, lsl #48
   23c28:	umulh	x8, x8, x9
   23c2c:	mov	x10, #0xffffffffffffff9c    	// #-100
   23c30:	lsr	x8, x8, #2
   23c34:	b	23e2c <PyInit__decimal@@Base+0x1d318>
   23c38:	mov	x9, #0xf7cf                	// #63439
   23c3c:	movk	x9, #0xe353, lsl #16
   23c40:	movk	x9, #0x9ba5, lsl #32
   23c44:	lsr	x8, x2, #3
   23c48:	movk	x9, #0x20c4, lsl #48
   23c4c:	umulh	x8, x8, x9
   23c50:	mov	x10, #0xfffffffffffffc18    	// #-1000
   23c54:	lsr	x8, x8, #4
   23c58:	b	23e2c <PyInit__decimal@@Base+0x1d318>
   23c5c:	mov	x8, #0x594b                	// #22859
   23c60:	movk	x8, #0x3886, lsl #16
   23c64:	movk	x8, #0xc5d6, lsl #32
   23c68:	movk	x8, #0x346d, lsl #48
   23c6c:	umulh	x8, x2, x8
   23c70:	mov	x9, #0xffffffffffffd8f0    	// #-10000
   23c74:	lsr	x8, x8, #11
   23c78:	b	23dd4 <PyInit__decimal@@Base+0x1d2c0>
   23c7c:	mov	x8, #0xaaff                	// #43775
   23c80:	movk	x8, #0xcb24, lsl #16
   23c84:	movk	x8, #0xff0b, lsl #32
   23c88:	movk	x8, #0xafeb, lsl #48
   23c8c:	mov	x9, #0xffffffffffff1800    	// #-59392
   23c90:	movk	x9, #0xb789, lsl #16
   23c94:	umulh	x8, x2, x8
   23c98:	movk	x9, #0xffe8, lsl #32
   23c9c:	lsr	x8, x8, #36
   23ca0:	b	23dd4 <PyInit__decimal@@Base+0x1d2c0>
   23ca4:	mov	x8, #0x2233                	// #8755
   23ca8:	movk	x8, #0x5bd4, lsl #16
   23cac:	movk	x8, #0x3302, lsl #32
   23cb0:	movk	x8, #0x232f, lsl #48
   23cb4:	mov	x9, #0xfffffffffffff000    	// #-4096
   23cb8:	movk	x9, #0x2b5a, lsl #16
   23cbc:	umulh	x8, x2, x8
   23cc0:	movk	x9, #0xff17, lsl #32
   23cc4:	lsr	x8, x8, #37
   23cc8:	b	23dd4 <PyInit__decimal@@Base+0x1d2c0>
   23ccc:	mov	x8, #0x385                 	// #901
   23cd0:	movk	x8, #0x92ed, lsl #16
   23cd4:	movk	x8, #0x84d0, lsl #32
   23cd8:	movk	x8, #0x384b, lsl #48
   23cdc:	mov	x9, #0xffffffffffff6000    	// #-40960
   23ce0:	movk	x9, #0xb18d, lsl #16
   23ce4:	umulh	x8, x2, x8
   23ce8:	movk	x9, #0xf6e7, lsl #32
   23cec:	lsr	x8, x8, #41
   23cf0:	b	23dd4 <PyInit__decimal@@Base+0x1d2c0>
   23cf4:	mov	x8, #0xcd81                	// #52609
   23cf8:	movk	x8, #0x5095, lsl #16
   23cfc:	movk	x8, #0x4dc3, lsl #32
   23d00:	movk	x8, #0xb42, lsl #48
   23d04:	mov	x9, #0xffffffffffffc000    	// #-16384
   23d08:	movk	x9, #0xef85, lsl #16
   23d0c:	umulh	x8, x2, x8
   23d10:	movk	x9, #0xa50c, lsl #32
   23d14:	lsr	x8, x8, #42
   23d18:	b	23dd4 <PyInit__decimal@@Base+0x1d2c0>
   23d1c:	mov	x8, #0x34db                	// #13531
   23d20:	movk	x8, #0xd7b6, lsl #16
   23d24:	movk	x8, #0xde82, lsl #32
   23d28:	movk	x8, #0x431b, lsl #48
   23d2c:	mov	x9, #0xffffffffffffbdc0    	// #-16960
   23d30:	umulh	x8, x2, x8
   23d34:	movk	x9, #0xfff0, lsl #16
   23d38:	lsr	x8, x8, #18
   23d3c:	b	23dd4 <PyInit__decimal@@Base+0x1d2c0>
   23d40:	mov	x8, #0x42bd                	// #17085
   23d44:	movk	x8, #0xe57a, lsl #16
   23d48:	movk	x8, #0x94d5, lsl #32
   23d4c:	movk	x8, #0xd6bf, lsl #48
   23d50:	mov	x9, #0xffffffffffff6980    	// #-38528
   23d54:	umulh	x8, x2, x8
   23d58:	movk	x9, #0xff67, lsl #16
   23d5c:	lsr	x8, x8, #23
   23d60:	b	23dd4 <PyInit__decimal@@Base+0x1d2c0>
   23d64:	mov	x8, #0xcefd                	// #52989
   23d68:	movk	x8, #0x8461, lsl #16
   23d6c:	movk	x8, #0x7711, lsl #32
   23d70:	movk	x8, #0xabcc, lsl #48
   23d74:	mov	x9, #0xffffffffffff1f00    	// #-57600
   23d78:	umulh	x8, x2, x8
   23d7c:	movk	x9, #0xfa0a, lsl #16
   23d80:	lsr	x8, x8, #26
   23d84:	b	23dd4 <PyInit__decimal@@Base+0x1d2c0>
   23d88:	mov	x9, #0x5a53                	// #23123
   23d8c:	movk	x9, #0xa09b, lsl #16
   23d90:	movk	x9, #0xb82f, lsl #32
   23d94:	lsr	x8, x2, #9
   23d98:	movk	x9, #0x44, lsl #48
   23d9c:	mov	x10, #0xffffffffffff3600    	// #-51712
   23da0:	umulh	x8, x8, x9
   23da4:	movk	x10, #0xc465, lsl #16
   23da8:	lsr	x8, x8, #11
   23dac:	b	23e2c <PyInit__decimal@@Base+0x1d318>
   23db0:	mov	x8, #0x7857                	// #30807
   23db4:	movk	x8, #0xb113, lsl #16
   23db8:	movk	x8, #0x652f, lsl #32
   23dbc:	movk	x8, #0x39a5, lsl #48
   23dc0:	mov	x9, #0x903f0000            	// #2420047872
   23dc4:	movk	x9, #0x790d, lsl #32
   23dc8:	umulh	x8, x2, x8
   23dcc:	movk	x9, #0xffdc, lsl #48
   23dd0:	lsr	x8, x8, #51
   23dd4:	str	x8, [x0]
   23dd8:	madd	x8, x8, x9, x2
   23ddc:	b	23e34 <PyInit__decimal@@Base+0x1d320>
   23de0:	mov	x9, #0x1b53                	// #6995
   23de4:	movk	x9, #0xd519, lsl #16
   23de8:	lsr	x8, x2, #17
   23dec:	movk	x9, #0x5c3b, lsl #32
   23df0:	mov	x10, #0xa2760000            	// #2725642240
   23df4:	movk	x10, #0xba87, lsl #32
   23df8:	umulh	x8, x8, x9
   23dfc:	movk	x10, #0xfe9c, lsl #48
   23e00:	lsr	x8, x8, #22
   23e04:	b	23e2c <PyInit__decimal@@Base+0x1d318>
   23e08:	mov	x9, #0x490f                	// #18703
   23e0c:	movk	x9, #0x7747, lsl #16
   23e10:	lsr	x8, x2, #18
   23e14:	movk	x9, #0x49c9, lsl #32
   23e18:	mov	x10, #0x589c0000            	// #1486618624
   23e1c:	movk	x10, #0x494c, lsl #32
   23e20:	umulh	x8, x8, x9
   23e24:	movk	x10, #0xf21f, lsl #48
   23e28:	lsr	x8, x8, #24
   23e2c:	str	x8, [x0]
   23e30:	madd	x8, x8, x10, x2
   23e34:	str	x8, [x1]
   23e38:	ret
   23e3c:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   23e40:	movk	x8, #0x2304, lsl #32
   23e44:	movk	x8, #0x8ac7, lsl #48
   23e48:	cmp	x2, x8
   23e4c:	csinc	x8, xzr, x8, ls  // ls = plast
   23e50:	cset	w9, hi  // hi = pmore
   23e54:	sub	x8, x2, x8
   23e58:	str	x9, [x0]
   23e5c:	b	23e34 <PyInit__decimal@@Base+0x1d320>
   23e60:	sub	x8, x1, #0x1
   23e64:	tbnz	x8, #63, 23e7c <PyInit__decimal@@Base+0x1d368>
   23e68:	ldr	x9, [x0, x8, lsl #3]
   23e6c:	sub	x8, x8, #0x1
   23e70:	cbz	x9, 23e64 <PyInit__decimal@@Base+0x1d350>
   23e74:	mov	w0, wzr
   23e78:	ret
   23e7c:	mov	w0, #0x1                   	// #1
   23e80:	ret
   23e84:	ldr	x8, [x1]
   23e88:	ldr	x9, [x0]
   23e8c:	str	x8, [x0]
   23e90:	str	x9, [x1]
   23e94:	ret
   23e98:	stp	x29, x30, [sp, #-32]!
   23e9c:	str	x19, [sp, #16]
   23ea0:	mov	x29, sp
   23ea4:	ldrb	w8, [x1]
   23ea8:	ldrb	w9, [x2]
   23eac:	mov	x19, x4
   23eb0:	tbnz	w8, #1, 23ee4 <PyInit__decimal@@Base+0x1d3d0>
   23eb4:	ldr	x10, [x3, #16]
   23eb8:	ldr	x11, [x3]
   23ebc:	eor	w8, w9, w8
   23ec0:	and	w1, w8, #0x1
   23ec4:	mov	x2, xzr
   23ec8:	sub	x8, x10, x11
   23ecc:	add	x3, x8, #0x1
   23ed0:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   23ed4:	ldr	w8, [x19]
   23ed8:	orr	w8, w8, #0x1
   23edc:	str	w8, [x19]
   23ee0:	b	23f08 <PyInit__decimal@@Base+0x1d3f4>
   23ee4:	tbnz	w9, #1, 23efc <PyInit__decimal@@Base+0x1d3e8>
   23ee8:	eor	w8, w9, w8
   23eec:	and	w1, w8, #0x1
   23ef0:	mov	w2, #0x2                   	// #2
   23ef4:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   23ef8:	b	23f08 <PyInit__decimal@@Base+0x1d3f4>
   23efc:	mov	w1, #0x100                 	// #256
   23f00:	mov	x2, x19
   23f04:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   23f08:	ldr	x19, [sp, #16]
   23f0c:	ldp	x29, x30, [sp], #32
   23f10:	ret
   23f14:	sub	sp, sp, #0xf0
   23f18:	stp	x29, x30, [sp, #144]
   23f1c:	stp	x28, x27, [sp, #160]
   23f20:	stp	x26, x25, [sp, #176]
   23f24:	stp	x24, x23, [sp, #192]
   23f28:	stp	x22, x21, [sp, #208]
   23f2c:	stp	x20, x19, [sp, #224]
   23f30:	add	x29, sp, #0x90
   23f34:	mov	x19, x1
   23f38:	mov	x20, x0
   23f3c:	add	x0, sp, #0x30
   23f40:	mov	x1, x2
   23f44:	mov	x22, x4
   23f48:	mov	x24, x3
   23f4c:	mov	x25, x2
   23f50:	bl	1a018 <PyInit__decimal@@Base+0x13504>
   23f54:	mov	x0, sp
   23f58:	mov	x1, x24
   23f5c:	bl	1a018 <PyInit__decimal@@Base+0x13504>
   23f60:	ldrb	w8, [sp, #48]
   23f64:	ldrb	w9, [sp]
   23f68:	cmp	x20, x25
   23f6c:	str	xzr, [sp, #56]
   23f70:	and	w8, w8, #0xfe
   23f74:	and	w9, w9, #0xfe
   23f78:	strb	w8, [sp, #48]
   23f7c:	strb	w9, [sp]
   23f80:	str	xzr, [sp, #8]
   23f84:	b.eq	23f94 <PyInit__decimal@@Base+0x1d480>  // b.none
   23f88:	cmp	x20, x24
   23f8c:	mov	x23, x20
   23f90:	b.ne	23fa0 <PyInit__decimal@@Base+0x1d48c>  // b.any
   23f94:	bl	17cbc <PyInit__decimal@@Base+0x111a8>
   23f98:	mov	x23, x0
   23f9c:	cbz	x0, 240c4 <PyInit__decimal@@Base+0x1d5b0>
   23fa0:	cmp	x19, x25
   23fa4:	b.eq	23fb4 <PyInit__decimal@@Base+0x1d4a0>  // b.none
   23fa8:	cmp	x19, x24
   23fac:	mov	x21, x19
   23fb0:	b.ne	23fc0 <PyInit__decimal@@Base+0x1d4ac>  // b.any
   23fb4:	bl	17cbc <PyInit__decimal@@Base+0x111a8>
   23fb8:	mov	x21, x0
   23fbc:	cbz	x0, 240d4 <PyInit__decimal@@Base+0x1d5c0>
   23fc0:	mov	x26, #0xffffffffa763ffff    	// #-1486618625
   23fc4:	movk	x26, #0xb6b3, lsl #32
   23fc8:	sub	x0, x29, #0x30
   23fcc:	movk	x26, #0xde0, lsl #48
   23fd0:	bl	13964 <PyInit__decimal@@Base+0xce50>
   23fd4:	ldr	x9, [x25, #16]
   23fd8:	ldr	x8, [x24, #16]
   23fdc:	cmp	x9, x26
   23fe0:	sub	x8, x9, x8
   23fe4:	add	x8, x8, #0x4
   23fe8:	stur	x8, [x29, #-48]
   23fec:	b.gt	240b8 <PyInit__decimal@@Base+0x1d5a4>
   23ff0:	cmp	x8, x26
   23ff4:	b.gt	240b8 <PyInit__decimal@@Base+0x1d5a4>
   23ff8:	sub	x8, x29, #0x30
   23ffc:	add	x24, x8, #0x1c
   24000:	mov	x1, sp
   24004:	sub	x2, x29, #0x30
   24008:	mov	x0, x21
   2400c:	mov	x3, x24
   24010:	bl	24364 <PyInit__decimal@@Base+0x1d850>
   24014:	add	x1, sp, #0x30
   24018:	sub	x3, x29, #0x30
   2401c:	mov	x0, x23
   24020:	mov	x2, x21
   24024:	mov	x4, x24
   24028:	bl	1e274 <PyInit__decimal@@Base+0x17760>
   2402c:	sub	x2, x29, #0x30
   24030:	mov	x0, x23
   24034:	mov	x1, x23
   24038:	mov	x3, x24
   2403c:	bl	21d00 <PyInit__decimal@@Base+0x1b1ec>
   24040:	ldr	x8, [sp, #64]
   24044:	mov	x10, #0xfffe                	// #65534
   24048:	movk	x10, #0x589b, lsl #16
   2404c:	movk	x10, #0x494c, lsl #32
   24050:	add	x9, x26, #0x3
   24054:	movk	x10, #0xf21f, lsl #48
   24058:	add	x8, x8, #0x3
   2405c:	mov	x1, sp
   24060:	sub	x3, x29, #0x30
   24064:	mov	x0, x21
   24068:	mov	x2, x23
   2406c:	mov	x4, x24
   24070:	stp	x8, x9, [x29, #-48]
   24074:	stur	x10, [x29, #-32]
   24078:	bl	1e274 <PyInit__decimal@@Base+0x17760>
   2407c:	add	x1, sp, #0x30
   24080:	sub	x3, x29, #0x30
   24084:	mov	x0, x21
   24088:	mov	x2, x21
   2408c:	mov	x4, x24
   24090:	bl	24620 <PyInit__decimal@@Base+0x1db0c>
   24094:	ldrb	w8, [x23]
   24098:	tst	w8, #0xe
   2409c:	b.eq	240e0 <PyInit__decimal@@Base+0x1d5cc>  // b.none
   240a0:	ldur	w8, [x29, #-20]
   240a4:	ldr	w9, [x22]
   240a8:	mov	w10, #0x3be                 	// #958
   240ac:	and	w8, w8, w10
   240b0:	orr	w8, w9, w8
   240b4:	b	241e8 <PyInit__decimal@@Base+0x1d6d4>
   240b8:	ldr	w8, [x22]
   240bc:	orr	w8, w8, #0x8
   240c0:	b	241e8 <PyInit__decimal@@Base+0x1d6d4>
   240c4:	ldr	w8, [x22]
   240c8:	mov	x21, x19
   240cc:	orr	w8, w8, #0x200
   240d0:	b	241e8 <PyInit__decimal@@Base+0x1d6d4>
   240d4:	ldr	w8, [x22]
   240d8:	orr	w8, w8, #0x200
   240dc:	b	241e8 <PyInit__decimal@@Base+0x1d6d4>
   240e0:	adrp	x25, 3f000 <PyInit__decimal@@Base+0x384ec>
   240e4:	adrp	x27, 3f000 <PyInit__decimal@@Base+0x384ec>
   240e8:	adrp	x28, 3f000 <PyInit__decimal@@Base+0x384ec>
   240ec:	mov	w26, #0x4                   	// #4
   240f0:	add	x25, x25, #0xcb8
   240f4:	add	x27, x27, #0xce8
   240f8:	add	x28, x28, #0xc88
   240fc:	b	2413c <PyInit__decimal@@Base+0x1d628>
   24100:	mov	x2, sp
   24104:	sub	x3, x29, #0x30
   24108:	mov	x0, x21
   2410c:	mov	x1, x21
   24110:	mov	x4, x24
   24114:	bl	227e4 <PyInit__decimal@@Base+0x1bcd0>
   24118:	mov	x2, x27
   2411c:	sub	x3, x29, #0x30
   24120:	mov	x0, x23
   24124:	mov	x1, x23
   24128:	mov	x4, x24
   2412c:	bl	227e4 <PyInit__decimal@@Base+0x1bcd0>
   24130:	ldrb	w8, [x23]
   24134:	tst	w8, #0xe
   24138:	b.ne	240a0 <PyInit__decimal@@Base+0x1d58c>  // b.any
   2413c:	ldrb	w8, [x21]
   24140:	tst	w8, #0xe
   24144:	b.ne	240a0 <PyInit__decimal@@Base+0x1d58c>  // b.any
   24148:	subs	w26, w26, #0x1
   2414c:	b.eq	24198 <PyInit__decimal@@Base+0x1d684>  // b.none
   24150:	mov	x0, x25
   24154:	mov	x1, x21
   24158:	bl	19cb8 <PyInit__decimal@@Base+0x131a4>
   2415c:	cmp	w0, #0x1
   24160:	b.eq	24100 <PyInit__decimal@@Base+0x1d5ec>  // b.none
   24164:	mov	x1, sp
   24168:	mov	x0, x21
   2416c:	bl	19cb8 <PyInit__decimal@@Base+0x131a4>
   24170:	cmn	w0, #0x1
   24174:	b.eq	242ac <PyInit__decimal@@Base+0x1d798>  // b.none
   24178:	mov	x2, sp
   2417c:	sub	x3, x29, #0x30
   24180:	mov	x0, x21
   24184:	mov	x1, x21
   24188:	mov	x4, x24
   2418c:	bl	24620 <PyInit__decimal@@Base+0x1db0c>
   24190:	mov	x2, x28
   24194:	b	2411c <PyInit__decimal@@Base+0x1d608>
   24198:	adrp	x24, 3f000 <PyInit__decimal@@Base+0x384ec>
   2419c:	ldr	x24, [x24, #3904]
   241a0:	adrp	x1, 2e000 <PyInit__decimal@@Base+0x274ec>
   241a4:	adrp	x2, 2e000 <PyInit__decimal@@Base+0x274ec>
   241a8:	add	x1, x1, #0x158
   241ac:	ldr	x0, [x24]
   241b0:	add	x2, x2, #0xcec
   241b4:	mov	w3, #0x1d0c                	// #7436
   241b8:	bl	6a10 <fprintf@plt>
   241bc:	ldr	x3, [x24]
   241c0:	adrp	x0, 2e000 <PyInit__decimal@@Base+0x274ec>
   241c4:	add	x0, x0, #0xd28
   241c8:	mov	w1, #0x3c                  	// #60
   241cc:	mov	w2, #0x1                   	// #1
   241d0:	bl	68d0 <fwrite@plt>
   241d4:	ldr	x1, [x24]
   241d8:	mov	w0, #0xa                   	// #10
   241dc:	bl	6550 <fputc@plt>
   241e0:	ldr	w8, [x22]
   241e4:	orr	w8, w8, #0x100
   241e8:	str	w8, [x22]
   241ec:	cbz	x23, 2422c <PyInit__decimal@@Base+0x1d718>
   241f0:	cmp	x23, x20
   241f4:	b.eq	2422c <PyInit__decimal@@Base+0x1d718>  // b.none
   241f8:	ldrb	w8, [x23]
   241fc:	cmp	w8, #0x1f
   24200:	b.hi	24214 <PyInit__decimal@@Base+0x1d700>  // b.pmore
   24204:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   24208:	ldr	x8, [x8, #1376]
   2420c:	ldr	x0, [x23, #40]
   24210:	blr	x8
   24214:	ldrb	w8, [x23]
   24218:	tbnz	w8, #4, 2422c <PyInit__decimal@@Base+0x1d718>
   2421c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   24220:	ldr	x8, [x8, #1376]
   24224:	mov	x0, x23
   24228:	blr	x8
   2422c:	cbz	x21, 2426c <PyInit__decimal@@Base+0x1d758>
   24230:	cmp	x21, x19
   24234:	b.eq	2426c <PyInit__decimal@@Base+0x1d758>  // b.none
   24238:	ldrb	w8, [x21]
   2423c:	cmp	w8, #0x1f
   24240:	b.hi	24254 <PyInit__decimal@@Base+0x1d740>  // b.pmore
   24244:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   24248:	ldr	x8, [x8, #1376]
   2424c:	ldr	x0, [x21, #40]
   24250:	blr	x8
   24254:	ldrb	w8, [x21]
   24258:	tbnz	w8, #4, 2426c <PyInit__decimal@@Base+0x1d758>
   2425c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   24260:	ldr	x8, [x8, #1376]
   24264:	mov	x0, x21
   24268:	blr	x8
   2426c:	mov	w2, #0x4                   	// #4
   24270:	mov	x0, x20
   24274:	mov	w1, wzr
   24278:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   2427c:	mov	w2, #0x4                   	// #4
   24280:	mov	x0, x19
   24284:	mov	w1, wzr
   24288:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   2428c:	ldp	x20, x19, [sp, #224]
   24290:	ldp	x22, x21, [sp, #208]
   24294:	ldp	x24, x23, [sp, #192]
   24298:	ldp	x26, x25, [sp, #176]
   2429c:	ldp	x28, x27, [sp, #160]
   242a0:	ldp	x29, x30, [sp, #144]
   242a4:	add	sp, sp, #0xf0
   242a8:	ret
   242ac:	cmp	x23, x20
   242b0:	b.eq	242f8 <PyInit__decimal@@Base+0x1d7e4>  // b.none
   242b4:	mov	x0, x20
   242b8:	mov	x1, x23
   242bc:	mov	x2, x22
   242c0:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   242c4:	cbz	w0, 241ec <PyInit__decimal@@Base+0x1d6d8>
   242c8:	ldrb	w8, [x23]
   242cc:	adrp	x24, 42000 <PyInit__decimal@@Base+0x3b4ec>
   242d0:	cmp	w8, #0x1f
   242d4:	b.hi	242e4 <PyInit__decimal@@Base+0x1d7d0>  // b.pmore
   242d8:	ldr	x8, [x24, #1376]
   242dc:	ldr	x0, [x23, #40]
   242e0:	blr	x8
   242e4:	ldrb	w8, [x23]
   242e8:	tbnz	w8, #4, 242f8 <PyInit__decimal@@Base+0x1d7e4>
   242ec:	ldr	x8, [x24, #1376]
   242f0:	mov	x0, x23
   242f4:	blr	x8
   242f8:	cmp	x21, x19
   242fc:	b.eq	24348 <PyInit__decimal@@Base+0x1d834>  // b.none
   24300:	mov	x0, x19
   24304:	mov	x1, x21
   24308:	mov	x2, x22
   2430c:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   24310:	cbz	w0, 241ec <PyInit__decimal@@Base+0x1d6d8>
   24314:	ldrb	w8, [x21]
   24318:	cmp	w8, #0x1f
   2431c:	b.hi	24330 <PyInit__decimal@@Base+0x1d81c>  // b.pmore
   24320:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   24324:	ldr	x8, [x8, #1376]
   24328:	ldr	x0, [x21, #40]
   2432c:	blr	x8
   24330:	ldrb	w8, [x21]
   24334:	tbnz	w8, #4, 24348 <PyInit__decimal@@Base+0x1d834>
   24338:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   2433c:	ldr	x8, [x8, #1376]
   24340:	mov	x0, x21
   24344:	blr	x8
   24348:	ldur	w8, [x29, #-20]
   2434c:	ldr	w9, [x22]
   24350:	mov	w10, #0x3be                 	// #958
   24354:	and	w8, w8, w10
   24358:	orr	w8, w9, w8
   2435c:	str	w8, [x22]
   24360:	b	2428c <PyInit__decimal@@Base+0x1d778>
   24364:	stp	x29, x30, [sp, #-96]!
   24368:	stp	x28, x27, [sp, #16]
   2436c:	stp	x26, x25, [sp, #32]
   24370:	stp	x24, x23, [sp, #48]
   24374:	stp	x22, x21, [sp, #64]
   24378:	stp	x20, x19, [sp, #80]
   2437c:	mov	x29, sp
   24380:	sub	sp, sp, #0x730
   24384:	ldrb	w23, [x1]
   24388:	mov	w8, #0x50                  	// #80
   2438c:	mov	w10, #0x30                  	// #48
   24390:	mov	w11, #0x40                  	// #64
   24394:	bfxil	w8, w23, #0, #4
   24398:	sturb	w8, [x29, #-144]
   2439c:	ldp	x24, x25, [x1, #8]
   243a0:	mov	x20, x2
   243a4:	mov	w9, #0x50                  	// #80
   243a8:	mov	x2, x3
   243ac:	stp	x24, x25, [x29, #-136]
   243b0:	ldr	x8, [x1, #24]
   243b4:	mov	x19, x3
   243b8:	mov	x21, x0
   243bc:	stur	x8, [x29, #-120]
   243c0:	ldp	x8, x12, [x1, #32]
   243c4:	strb	w10, [sp, #1136]
   243c8:	strb	w10, [sp, #576]
   243cc:	mov	w10, #0x2                   	// #2
   243d0:	stur	x8, [x29, #-112]
   243d4:	add	x8, sp, #0x4a0
   243d8:	str	x8, [sp, #1176]
   243dc:	add	x8, sp, #0x270
   243e0:	str	x11, [sp, #1168]
   243e4:	str	x11, [sp, #608]
   243e8:	mov	w11, #0x90                  	// #144
   243ec:	str	x8, [sp, #616]
   243f0:	mov	w8, #0x1                   	// #1
   243f4:	str	x10, [sp, #568]
   243f8:	add	x10, sp, #0x238
   243fc:	strb	w11, [sp, #520]
   24400:	neg	x11, x25
   24404:	sub	x1, x29, #0x90
   24408:	str	xzr, [sp, #1160]
   2440c:	str	xzr, [sp, #600]
   24410:	str	xzr, [sp, #1144]
   24414:	str	xzr, [sp, #1152]
   24418:	str	xzr, [sp, #584]
   2441c:	str	xzr, [sp, #592]
   24420:	str	xzr, [sp, #528]
   24424:	str	x8, [sp, #536]
   24428:	str	x8, [sp, #544]
   2442c:	str	x8, [sp, #552]
   24430:	str	x10, [sp, #560]
   24434:	sturb	w9, [x29, #-144]
   24438:	stur	x12, [x29, #-104]
   2443c:	stur	x11, [x29, #-136]
   24440:	bl	24680 <PyInit__decimal@@Base+0x1db6c>
   24444:	sub	x0, x29, #0x30
   24448:	bl	13964 <PyInit__decimal@@Base+0xce50>
   2444c:	sub	x0, x29, #0x60
   24450:	bl	13964 <PyInit__decimal@@Base+0xce50>
   24454:	mov	x9, #0x63                  	// #99
   24458:	mov	x10, #0xff9d                	// #65437
   2445c:	movk	x9, #0xa764, lsl #16
   24460:	movk	x10, #0x589b, lsl #16
   24464:	movk	x9, #0xb6b3, lsl #32
   24468:	movk	x10, #0x494c, lsl #32
   2446c:	mov	w8, #0x8                   	// #8
   24470:	movk	x9, #0xde0, lsl #48
   24474:	movk	x10, #0xf21f, lsl #48
   24478:	stur	w8, [x29, #-60]
   2447c:	stur	w8, [x29, #-12]
   24480:	stp	x9, x10, [x29, #-88]
   24484:	stp	x9, x10, [x29, #-40]
   24488:	stur	x9, [x29, #-96]
   2448c:	ldr	x8, [x20]
   24490:	add	x0, sp, #0x8
   24494:	add	x26, sp, #0x8
   24498:	add	x1, x8, #0x2
   2449c:	bl	24894 <PyInit__decimal@@Base+0x1dd80>
   244a0:	tbnz	w0, #31, 2455c <PyInit__decimal@@Base+0x1da48>
   244a4:	sxtw	x27, w0
   244a8:	b	24520 <PyInit__decimal@@Base+0x1da0c>
   244ac:	add	x0, sp, #0x240
   244b0:	sub	x1, x29, #0x90
   244b4:	mov	x3, x19
   244b8:	add	x22, sp, #0x240
   244bc:	bl	1a604 <PyInit__decimal@@Base+0x13af0>
   244c0:	ldur	x8, [x29, #-48]
   244c4:	neg	x8, x8
   244c8:	str	x8, [sp, #584]
   244cc:	add	x0, sp, #0x240
   244d0:	add	x2, sp, #0x470
   244d4:	sub	x3, x29, #0x30
   244d8:	mov	x1, x22
   244dc:	mov	x4, x19
   244e0:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
   244e4:	add	x0, sp, #0x470
   244e8:	add	x2, sp, #0x208
   244ec:	sub	x3, x29, #0x60
   244f0:	mov	x1, x21
   244f4:	mov	x4, x19
   244f8:	bl	211e0 <PyInit__decimal@@Base+0x1a6cc>
   244fc:	add	x1, sp, #0x470
   24500:	add	x2, sp, #0x240
   24504:	sub	x3, x29, #0x60
   24508:	mov	x0, x21
   2450c:	mov	x4, x19
   24510:	bl	24620 <PyInit__decimal@@Base+0x1db0c>
   24514:	cmp	x27, #0x0
   24518:	sub	x27, x27, #0x1
   2451c:	b.le	2455c <PyInit__decimal@@Base+0x1da48>
   24520:	add	x0, sp, #0x470
   24524:	sub	x3, x29, #0x60
   24528:	mov	x1, x21
   2452c:	mov	x2, x21
   24530:	mov	x4, x19
   24534:	bl	211e0 <PyInit__decimal@@Base+0x1a6cc>
   24538:	ldr	x8, [x26, x27, lsl #3]
   2453c:	ldur	x9, [x29, #-128]
   24540:	lsl	x8, x8, #1
   24544:	add	x8, x8, #0x5
   24548:	subs	x2, x9, x8
   2454c:	stur	x8, [x29, #-48]
   24550:	b.gt	244ac <PyInit__decimal@@Base+0x1d998>
   24554:	sub	x22, x29, #0x90
   24558:	b	244cc <PyInit__decimal@@Base+0x1d9b8>
   2455c:	ldrb	w8, [x21]
   24560:	tst	w8, #0xe
   24564:	b.ne	24588 <PyInit__decimal@@Base+0x1da74>  // b.any
   24568:	ldr	x10, [x21, #8]
   2456c:	and	w9, w23, #0x1
   24570:	add	x11, x25, x24
   24574:	and	w8, w8, #0xf0
   24578:	orr	w8, w8, w9
   2457c:	sub	x9, x10, x11
   24580:	str	x9, [x21, #8]
   24584:	strb	w8, [x21]
   24588:	ldrb	w8, [sp, #1136]
   2458c:	cmp	w8, #0x1f
   24590:	b.hi	245a4 <PyInit__decimal@@Base+0x1da90>  // b.pmore
   24594:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   24598:	ldr	x8, [x8, #1376]
   2459c:	ldr	x0, [sp, #1176]
   245a0:	blr	x8
   245a4:	ldrb	w8, [sp, #1136]
   245a8:	tbnz	w8, #4, 245bc <PyInit__decimal@@Base+0x1daa8>
   245ac:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   245b0:	ldr	x8, [x8, #1376]
   245b4:	add	x0, sp, #0x470
   245b8:	blr	x8
   245bc:	ldrb	w8, [sp, #576]
   245c0:	cmp	w8, #0x1f
   245c4:	b.hi	245d8 <PyInit__decimal@@Base+0x1dac4>  // b.pmore
   245c8:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   245cc:	ldr	x8, [x8, #1376]
   245d0:	ldr	x0, [sp, #616]
   245d4:	blr	x8
   245d8:	ldrb	w8, [sp, #576]
   245dc:	tbnz	w8, #4, 245f0 <PyInit__decimal@@Base+0x1dadc>
   245e0:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   245e4:	ldr	x8, [x8, #1376]
   245e8:	add	x0, sp, #0x240
   245ec:	blr	x8
   245f0:	mov	x0, x21
   245f4:	mov	x1, x20
   245f8:	mov	x2, x19
   245fc:	bl	18fe4 <PyInit__decimal@@Base+0x124d0>
   24600:	add	sp, sp, #0x730
   24604:	ldp	x20, x19, [sp, #80]
   24608:	ldp	x22, x21, [sp, #64]
   2460c:	ldp	x24, x23, [sp, #48]
   24610:	ldp	x26, x25, [sp, #32]
   24614:	ldp	x28, x27, [sp, #16]
   24618:	ldp	x29, x30, [sp], #96
   2461c:	ret
   24620:	sub	sp, sp, #0x30
   24624:	stp	x29, x30, [sp, #16]
   24628:	stp	x20, x19, [sp, #32]
   2462c:	add	x29, sp, #0x10
   24630:	mov	x19, x4
   24634:	sub	x4, x29, #0x4
   24638:	mov	x20, x0
   2463c:	stur	wzr, [x29, #-4]
   24640:	bl	1c64c <PyInit__decimal@@Base+0x15b38>
   24644:	ldur	w8, [x29, #-4]
   24648:	ldr	w9, [x19]
   2464c:	mov	w10, #0x1041                	// #4161
   24650:	tst	w8, w10
   24654:	orr	w9, w9, w8
   24658:	str	w9, [x19]
   2465c:	b.eq	24670 <PyInit__decimal@@Base+0x1db5c>  // b.none
   24660:	mov	w1, #0x100                 	// #256
   24664:	mov	x0, x20
   24668:	mov	x2, x19
   2466c:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   24670:	ldp	x20, x19, [sp, #32]
   24674:	ldp	x29, x30, [sp, #16]
   24678:	add	sp, sp, #0x30
   2467c:	ret
   24680:	sub	sp, sp, #0x50
   24684:	stp	x29, x30, [sp, #32]
   24688:	stp	x22, x21, [sp, #48]
   2468c:	stp	x20, x19, [sp, #64]
   24690:	add	x29, sp, #0x20
   24694:	adrp	x21, 2e000 <PyInit__decimal@@Base+0x274ec>
   24698:	add	x21, x21, #0x20
   2469c:	ldr	x22, [x21, #136]
   246a0:	mov	x20, x2
   246a4:	mov	x2, x1
   246a8:	mov	x19, x0
   246ac:	add	x0, sp, #0x8
   246b0:	mov	x1, sp
   246b4:	mov	w3, #0x13                  	// #19
   246b8:	stp	xzr, x22, [sp, #16]
   246bc:	bl	2358c <PyInit__decimal@@Base+0x1ca78>
   246c0:	ldr	x8, [sp]
   246c4:	ldr	x9, [x21, #72]
   246c8:	cmp	x9, x8
   246cc:	b.ls	246f8 <PyInit__decimal@@Base+0x1dbe4>  // b.plast
   246d0:	ldr	x9, [x21, #32]
   246d4:	cmp	x9, x8
   246d8:	b.ls	24720 <PyInit__decimal@@Base+0x1dc0c>  // b.plast
   246dc:	ldr	x9, [x21, #16]
   246e0:	cmp	x9, x8
   246e4:	b.ls	24764 <PyInit__decimal@@Base+0x1dc50>  // b.plast
   246e8:	ldr	x9, [x21, #8]
   246ec:	cmp	x9, x8
   246f0:	mov	w9, #0x1                   	// #1
   246f4:	b	247c4 <PyInit__decimal@@Base+0x1dcb0>
   246f8:	ldr	x9, [x21, #112]
   246fc:	cmp	x9, x8
   24700:	b.ls	2473c <PyInit__decimal@@Base+0x1dc28>  // b.plast
   24704:	ldr	x9, [x21, #88]
   24708:	cmp	x9, x8
   2470c:	b.ls	24774 <PyInit__decimal@@Base+0x1dc60>  // b.plast
   24710:	ldr	x9, [x21, #80]
   24714:	cmp	x9, x8
   24718:	mov	w9, #0xa                   	// #10
   2471c:	b	247c4 <PyInit__decimal@@Base+0x1dcb0>
   24720:	ldr	x9, [x21, #48]
   24724:	cmp	x9, x8
   24728:	b.ls	24790 <PyInit__decimal@@Base+0x1dc7c>  // b.plast
   2472c:	ldr	x9, [x21, #40]
   24730:	cmp	x9, x8
   24734:	mov	w9, #0x5                   	// #5
   24738:	b	247c4 <PyInit__decimal@@Base+0x1dcb0>
   2473c:	ldr	x9, [x21, #144]
   24740:	cmp	x9, x8
   24744:	b.ls	247ac <PyInit__decimal@@Base+0x1dc98>  // b.plast
   24748:	ldr	x9, [x21, #128]
   2474c:	cmp	x9, x8
   24750:	b.ls	247bc <PyInit__decimal@@Base+0x1dca8>  // b.plast
   24754:	ldr	x9, [x21, #120]
   24758:	cmp	x9, x8
   2475c:	mov	w9, #0xf                   	// #15
   24760:	b	247c4 <PyInit__decimal@@Base+0x1dcb0>
   24764:	ldr	x9, [x21, #24]
   24768:	cmp	x9, x8
   2476c:	mov	w9, #0x3                   	// #3
   24770:	b	247c4 <PyInit__decimal@@Base+0x1dcb0>
   24774:	ldr	x9, [x21, #104]
   24778:	cmp	x9, x8
   2477c:	b.ls	24884 <PyInit__decimal@@Base+0x1dd70>  // b.plast
   24780:	ldr	x9, [x21, #96]
   24784:	cmp	x9, x8
   24788:	mov	w9, #0xc                   	// #12
   2478c:	b	247c4 <PyInit__decimal@@Base+0x1dcb0>
   24790:	ldr	x9, [x21, #64]
   24794:	cmp	x9, x8
   24798:	b.ls	2488c <PyInit__decimal@@Base+0x1dd78>  // b.plast
   2479c:	ldr	x9, [x21, #56]
   247a0:	cmp	x9, x8
   247a4:	mov	w9, #0x7                   	// #7
   247a8:	b	247c4 <PyInit__decimal@@Base+0x1dcb0>
   247ac:	ldr	x9, [x21, #152]
   247b0:	cmp	x9, x8
   247b4:	mov	w9, #0x13                  	// #19
   247b8:	b	247c4 <PyInit__decimal@@Base+0x1dcb0>
   247bc:	cmp	x22, x8
   247c0:	mov	w9, #0x11                  	// #17
   247c4:	cinc	x9, x9, ls  // ls = plast
   247c8:	mov	w10, #0x13                  	// #19
   247cc:	sub	x9, x10, x9
   247d0:	ldr	x9, [x21, x9, lsl #3]
   247d4:	adrp	x10, 42000 <PyInit__decimal@@Base+0x3b4ec>
   247d8:	ldr	x10, [x10, #1344]
   247dc:	mul	x21, x9, x8
   247e0:	str	x21, [sp]
   247e4:	ldr	x8, [x19, #32]
   247e8:	cmp	x10, #0x2
   247ec:	mov	w9, #0x2                   	// #2
   247f0:	csel	x1, x10, x9, gt
   247f4:	cmp	x1, x8
   247f8:	b.eq	24828 <PyInit__decimal@@Base+0x1dd14>  // b.none
   247fc:	ldrb	w9, [x19]
   24800:	tbnz	w9, #5, 24814 <PyInit__decimal@@Base+0x1dd00>
   24804:	mov	x0, x19
   24808:	mov	x2, x20
   2480c:	bl	17e28 <PyInit__decimal@@Base+0x11314>
   24810:	b	24828 <PyInit__decimal@@Base+0x1dd14>
   24814:	cmp	x1, x8
   24818:	b.le	24828 <PyInit__decimal@@Base+0x1dd14>
   2481c:	mov	x0, x19
   24820:	mov	x2, x20
   24824:	bl	17d10 <PyInit__decimal@@Base+0x111fc>
   24828:	ldr	x0, [x19, #40]
   2482c:	add	x1, sp, #0x10
   24830:	mov	w2, #0x2                   	// #2
   24834:	mov	x3, x21
   24838:	bl	1295c <PyInit__decimal@@Base+0xbe48>
   2483c:	ldrb	w8, [x19]
   24840:	ldr	x10, [x19, #40]
   24844:	mov	x9, #0xffffffffffffffef    	// #-17
   24848:	str	x9, [x19, #8]
   2484c:	and	w8, w8, #0xf0
   24850:	strb	w8, [x19]
   24854:	ldr	x8, [x10, #8]
   24858:	mov	x0, x19
   2485c:	cmp	x8, #0x0
   24860:	mov	w8, #0x1                   	// #1
   24864:	cinc	x8, x8, ne  // ne = any
   24868:	str	x8, [x19, #24]
   2486c:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   24870:	ldp	x20, x19, [sp, #64]
   24874:	ldp	x22, x21, [sp, #48]
   24878:	ldp	x29, x30, [sp, #32]
   2487c:	add	sp, sp, #0x50
   24880:	ret
   24884:	mov	w9, #0xe                   	// #14
   24888:	b	247c8 <PyInit__decimal@@Base+0x1dcb4>
   2488c:	mov	w9, #0x9                   	// #9
   24890:	b	247c8 <PyInit__decimal@@Base+0x1dcb4>
   24894:	cmp	x1, #0x11
   24898:	b.ge	248a4 <PyInit__decimal@@Base+0x1dd90>  // b.tcont
   2489c:	mov	w0, #0xffffffff            	// #-1
   248a0:	ret
   248a4:	mov	x8, x0
   248a8:	mov	w0, #0xffffffff            	// #-1
   248ac:	add	x9, x1, #0x1
   248b0:	add	x10, x1, #0x2
   248b4:	cmp	x9, #0x0
   248b8:	csinc	x10, x10, x1, lt  // lt = tstop
   248bc:	add	w0, w0, #0x1
   248c0:	asr	x1, x10, #1
   248c4:	cmp	x9, #0x21
   248c8:	str	x1, [x8, w0, sxtw #3]
   248cc:	b.gt	248ac <PyInit__decimal@@Base+0x1dd98>
   248d0:	ret
   248d4:	sub	sp, sp, #0x90
   248d8:	stp	x29, x30, [sp, #96]
   248dc:	str	x21, [sp, #112]
   248e0:	stp	x20, x19, [sp, #128]
   248e4:	add	x29, sp, #0x60
   248e8:	mov	w8, #0x9                   	// #9
   248ec:	str	x8, [x29, #24]
   248f0:	mov	w8, #0x90                  	// #144
   248f4:	strb	w8, [sp, #48]
   248f8:	ldr	x9, [x2]
   248fc:	add	x8, x29, #0x18
   24900:	str	x8, [sp, #88]
   24904:	mov	w8, #0x1                   	// #1
   24908:	mvn	x9, x9
   2490c:	stp	x8, x8, [sp, #72]
   24910:	stp	x9, x8, [sp, #56]
   24914:	ldrb	w8, [x1]
   24918:	mov	w9, #0x50                  	// #80
   2491c:	mov	x20, x0
   24920:	mov	x0, sp
   24924:	bfxil	w9, w8, #0, #4
   24928:	strb	w9, [sp]
   2492c:	ldr	x8, [x1, #8]
   24930:	and	w9, w9, #0xfffffffe
   24934:	mov	x19, x3
   24938:	str	x8, [sp, #8]
   2493c:	ldr	x8, [x1, #16]
   24940:	str	x8, [sp, #16]
   24944:	ldr	x8, [x1, #24]
   24948:	str	x8, [sp, #24]
   2494c:	ldr	x8, [x1, #32]
   24950:	str	x8, [sp, #32]
   24954:	ldr	x8, [x1, #40]
   24958:	add	x1, sp, #0x30
   2495c:	strb	w9, [sp]
   24960:	str	x8, [sp, #40]
   24964:	bl	19cb8 <PyInit__decimal@@Base+0x131a4>
   24968:	cmp	w0, #0x0
   2496c:	b.le	24978 <PyInit__decimal@@Base+0x1de64>
   24970:	mov	w21, wzr
   24974:	b	249a0 <PyInit__decimal@@Base+0x1de8c>
   24978:	mov	w2, #0x1                   	// #1
   2497c:	mov	x0, x20
   24980:	mov	w1, wzr
   24984:	mov	x3, xzr
   24988:	mov	w21, #0x1                   	// #1
   2498c:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   24990:	ldr	w8, [x19]
   24994:	mov	w9, #0x1040                	// #4160
   24998:	orr	w8, w8, w9
   2499c:	str	w8, [x19]
   249a0:	mov	w0, w21
   249a4:	ldp	x20, x19, [sp, #128]
   249a8:	ldr	x21, [sp, #112]
   249ac:	ldp	x29, x30, [sp, #96]
   249b0:	add	sp, sp, #0x90
   249b4:	ret
   249b8:	mov	x8, #0x10000000000000      	// #4503599627370496
   249bc:	cmp	x1, x8
   249c0:	b.le	249cc <PyInit__decimal@@Base+0x1deb8>
   249c4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   249c8:	ret
   249cc:	adrp	x8, 2e000 <PyInit__decimal@@Base+0x274ec>
   249d0:	add	x8, x8, #0x20
   249d4:	ldr	x9, [x8, #72]
   249d8:	cmp	x9, x1
   249dc:	b.ls	24a08 <PyInit__decimal@@Base+0x1def4>  // b.plast
   249e0:	ldr	x9, [x8, #32]
   249e4:	cmp	x9, x1
   249e8:	b.ls	24a30 <PyInit__decimal@@Base+0x1df1c>  // b.plast
   249ec:	ldr	x9, [x8, #16]
   249f0:	cmp	x9, x1
   249f4:	b.ls	24a74 <PyInit__decimal@@Base+0x1df60>  // b.plast
   249f8:	ldr	x8, [x8, #8]
   249fc:	cmp	x8, x1
   24a00:	mov	w8, #0x1                   	// #1
   24a04:	b	24ad8 <PyInit__decimal@@Base+0x1dfc4>
   24a08:	ldr	x9, [x8, #112]
   24a0c:	cmp	x9, x1
   24a10:	b.ls	24a4c <PyInit__decimal@@Base+0x1df38>  // b.plast
   24a14:	ldr	x9, [x8, #88]
   24a18:	cmp	x9, x1
   24a1c:	b.ls	24a84 <PyInit__decimal@@Base+0x1df70>  // b.plast
   24a20:	ldr	x8, [x8, #80]
   24a24:	cmp	x8, x1
   24a28:	mov	w8, #0xa                   	// #10
   24a2c:	b	24ad8 <PyInit__decimal@@Base+0x1dfc4>
   24a30:	ldr	x9, [x8, #48]
   24a34:	cmp	x9, x1
   24a38:	b.ls	24aa0 <PyInit__decimal@@Base+0x1df8c>  // b.plast
   24a3c:	ldr	x8, [x8, #40]
   24a40:	cmp	x8, x1
   24a44:	mov	w8, #0x5                   	// #5
   24a48:	b	24ad8 <PyInit__decimal@@Base+0x1dfc4>
   24a4c:	ldr	x9, [x8, #144]
   24a50:	cmp	x9, x1
   24a54:	b.ls	24abc <PyInit__decimal@@Base+0x1dfa8>  // b.plast
   24a58:	ldr	x9, [x8, #128]
   24a5c:	cmp	x9, x1
   24a60:	b.ls	24acc <PyInit__decimal@@Base+0x1dfb8>  // b.plast
   24a64:	ldr	x8, [x8, #120]
   24a68:	cmp	x8, x1
   24a6c:	mov	w8, #0xf                   	// #15
   24a70:	b	24ad8 <PyInit__decimal@@Base+0x1dfc4>
   24a74:	ldr	x8, [x8, #24]
   24a78:	cmp	x8, x1
   24a7c:	mov	w8, #0x3                   	// #3
   24a80:	b	24ad8 <PyInit__decimal@@Base+0x1dfc4>
   24a84:	ldr	x9, [x8, #104]
   24a88:	cmp	x9, x1
   24a8c:	b.ls	24b24 <PyInit__decimal@@Base+0x1e010>  // b.plast
   24a90:	ldr	x8, [x8, #96]
   24a94:	cmp	x8, x1
   24a98:	mov	w8, #0xc                   	// #12
   24a9c:	b	24ad8 <PyInit__decimal@@Base+0x1dfc4>
   24aa0:	ldr	x9, [x8, #64]
   24aa4:	cmp	x9, x1
   24aa8:	b.ls	24b2c <PyInit__decimal@@Base+0x1e018>  // b.plast
   24aac:	ldr	x8, [x8, #56]
   24ab0:	cmp	x8, x1
   24ab4:	mov	w8, #0x7                   	// #7
   24ab8:	b	24ad8 <PyInit__decimal@@Base+0x1dfc4>
   24abc:	ldr	x8, [x8, #152]
   24ac0:	cmp	x8, x1
   24ac4:	mov	w8, #0x13                  	// #19
   24ac8:	b	24ad8 <PyInit__decimal@@Base+0x1dfc4>
   24acc:	ldr	x8, [x8, #136]
   24ad0:	cmp	x8, x1
   24ad4:	mov	w8, #0x11                  	// #17
   24ad8:	cinc	x8, x8, ls  // ls = plast
   24adc:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   24ae0:	ldr	d0, [x9, #3216]
   24ae4:	ldp	x9, x10, [x0, #8]
   24ae8:	scvtf	d1, x1
   24aec:	adrp	x11, 2e000 <PyInit__decimal@@Base+0x274ec>
   24af0:	fmul	d0, d1, d0
   24af4:	ldr	d1, [x11, #3224]
   24af8:	add	x9, x9, x10
   24afc:	mvn	x9, x9
   24b00:	add	x8, x9, x8
   24b04:	fadd	d0, d0, d1
   24b08:	scvtf	d1, x8
   24b0c:	fdiv	d0, d0, d1
   24b10:	fcvtps	x8, d0
   24b14:	cmp	x8, #0x3
   24b18:	mov	w9, #0x3                   	// #3
   24b1c:	csel	x0, x8, x9, gt
   24b20:	ret
   24b24:	mov	w8, #0xe                   	// #14
   24b28:	b	24adc <PyInit__decimal@@Base+0x1dfc8>
   24b2c:	mov	w8, #0x9                   	// #9
   24b30:	b	24adc <PyInit__decimal@@Base+0x1dfc8>
   24b34:	stp	x29, x30, [sp, #-80]!
   24b38:	str	x25, [sp, #16]
   24b3c:	stp	x24, x23, [sp, #32]
   24b40:	stp	x22, x21, [sp, #48]
   24b44:	stp	x20, x19, [sp, #64]
   24b48:	mov	x29, sp
   24b4c:	mov	w19, w3
   24b50:	mov	x20, x0
   24b54:	str	wzr, [x29, #28]
   24b58:	cbz	x2, 24c28 <PyInit__decimal@@Base+0x1e114>
   24b5c:	mov	x23, x2
   24b60:	mov	x0, x20
   24b64:	mov	x2, x5
   24b68:	mov	x21, x5
   24b6c:	mov	x22, x4
   24b70:	mov	x24, x1
   24b74:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   24b78:	cbz	w0, 24c3c <PyInit__decimal@@Base+0x1e128>
   24b7c:	mov	x0, x23
   24b80:	bl	24c54 <PyInit__decimal@@Base+0x1e140>
   24b84:	adrp	x8, 2d000 <PyInit__decimal@@Base+0x264ec>
   24b88:	add	x8, x8, #0xe20
   24b8c:	ldr	x8, [x8, w0, sxtw #3]
   24b90:	lsr	x25, x8, #1
   24b94:	cbnz	x25, 24ba4 <PyInit__decimal@@Base+0x1e090>
   24b98:	b	24c04 <PyInit__decimal@@Base+0x1e0f0>
   24b9c:	lsr	x25, x25, #1
   24ba0:	cbz	x25, 24c04 <PyInit__decimal@@Base+0x1e0f0>
   24ba4:	add	x4, x29, #0x1c
   24ba8:	mov	x0, x20
   24bac:	mov	x1, x20
   24bb0:	mov	x2, x20
   24bb4:	mov	x3, x22
   24bb8:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
   24bbc:	tst	x25, x23
   24bc0:	b.eq	24bdc <PyInit__decimal@@Base+0x1e0c8>  // b.none
   24bc4:	add	x4, x29, #0x1c
   24bc8:	mov	x0, x20
   24bcc:	mov	x1, x20
   24bd0:	mov	x2, x24
   24bd4:	mov	x3, x22
   24bd8:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
   24bdc:	ldrb	w8, [x20]
   24be0:	tst	w8, #0xe
   24be4:	b.ne	24c04 <PyInit__decimal@@Base+0x1e0f0>  // b.any
   24be8:	ldr	x8, [x20, #40]
   24bec:	ldr	x9, [x20, #24]
   24bf0:	add	x8, x8, x9, lsl #3
   24bf4:	ldur	x8, [x8, #-8]
   24bf8:	cbnz	x8, 24b9c <PyInit__decimal@@Base+0x1e088>
   24bfc:	ldrb	w8, [x29, #28]
   24c00:	tbz	w8, #0, 24b9c <PyInit__decimal@@Base+0x1e088>
   24c04:	ldr	w8, [x29, #28]
   24c08:	ldr	w9, [x21]
   24c0c:	orr	w8, w9, w8
   24c10:	str	w8, [x21]
   24c14:	ldrb	w8, [x20]
   24c18:	and	w8, w8, #0xfe
   24c1c:	orr	w8, w8, w19
   24c20:	strb	w8, [x20]
   24c24:	b	24c3c <PyInit__decimal@@Base+0x1e128>
   24c28:	mov	w2, #0x1                   	// #1
   24c2c:	mov	x0, x20
   24c30:	mov	w1, w19
   24c34:	mov	x3, xzr
   24c38:	bl	191d0 <PyInit__decimal@@Base+0x126bc>
   24c3c:	ldp	x20, x19, [sp, #64]
   24c40:	ldp	x22, x21, [sp, #48]
   24c44:	ldp	x24, x23, [sp, #32]
   24c48:	ldr	x25, [sp, #16]
   24c4c:	ldp	x29, x30, [sp], #80
   24c50:	ret
   24c54:	lsr	x8, x0, #32
   24c58:	cmp	x8, #0x0
   24c5c:	csel	x8, x0, x8, eq  // eq = none
   24c60:	lsr	x12, x8, #16
   24c64:	cset	w10, ne  // ne = any
   24c68:	cmp	x12, #0x0
   24c6c:	mov	w9, #0x10                  	// #16
   24c70:	csel	x8, x8, x12, eq  // eq = none
   24c74:	lsl	w11, w10, #5
   24c78:	bfi	w9, w10, #5, #1
   24c7c:	lsr	x10, x8, #8
   24c80:	csel	w9, w11, w9, eq  // eq = none
   24c84:	cmp	x10, #0x0
   24c88:	csel	x8, x8, x10, eq  // eq = none
   24c8c:	orr	w11, w9, #0x8
   24c90:	lsr	x10, x8, #4
   24c94:	csel	w9, w9, w11, eq  // eq = none
   24c98:	cmp	x10, #0x0
   24c9c:	csel	x8, x8, x10, eq  // eq = none
   24ca0:	orr	w11, w9, #0x4
   24ca4:	lsr	x10, x8, #2
   24ca8:	csel	w9, w9, w11, eq  // eq = none
   24cac:	cmp	x10, #0x0
   24cb0:	csel	x8, x8, x10, eq  // eq = none
   24cb4:	add	w11, w9, #0x2
   24cb8:	lsr	x10, x8, #1
   24cbc:	csel	w9, w9, w11, eq  // eq = none
   24cc0:	cmp	x10, #0x0
   24cc4:	csel	w8, w8, w10, eq  // eq = none
   24cc8:	cinc	w9, w9, ne  // ne = any
   24ccc:	add	w8, w9, w8
   24cd0:	sub	w0, w8, #0x1
   24cd4:	ret
   24cd8:	adrp	x8, 2e000 <PyInit__decimal@@Base+0x274ec>
   24cdc:	add	x8, x8, #0x20
   24ce0:	ldr	x9, [x8, #72]
   24ce4:	cmp	x9, x0
   24ce8:	b.ls	24d14 <PyInit__decimal@@Base+0x1e200>  // b.plast
   24cec:	ldr	x9, [x8, #32]
   24cf0:	cmp	x9, x0
   24cf4:	b.ls	24d3c <PyInit__decimal@@Base+0x1e228>  // b.plast
   24cf8:	ldr	x9, [x8, #16]
   24cfc:	cmp	x9, x0
   24d00:	b.ls	24d80 <PyInit__decimal@@Base+0x1e26c>  // b.plast
   24d04:	ldr	x9, [x8, #8]
   24d08:	cmp	x9, x0
   24d0c:	mov	w9, #0x1                   	// #1
   24d10:	b	24de4 <PyInit__decimal@@Base+0x1e2d0>
   24d14:	ldr	x9, [x8, #112]
   24d18:	cmp	x9, x0
   24d1c:	b.ls	24d58 <PyInit__decimal@@Base+0x1e244>  // b.plast
   24d20:	ldr	x9, [x8, #88]
   24d24:	cmp	x9, x0
   24d28:	b.ls	24d90 <PyInit__decimal@@Base+0x1e27c>  // b.plast
   24d2c:	ldr	x9, [x8, #80]
   24d30:	cmp	x9, x0
   24d34:	mov	w9, #0xa                   	// #10
   24d38:	b	24de4 <PyInit__decimal@@Base+0x1e2d0>
   24d3c:	ldr	x9, [x8, #48]
   24d40:	cmp	x9, x0
   24d44:	b.ls	24dac <PyInit__decimal@@Base+0x1e298>  // b.plast
   24d48:	ldr	x9, [x8, #40]
   24d4c:	cmp	x9, x0
   24d50:	mov	w9, #0x5                   	// #5
   24d54:	b	24de4 <PyInit__decimal@@Base+0x1e2d0>
   24d58:	ldr	x9, [x8, #144]
   24d5c:	cmp	x9, x0
   24d60:	b.ls	24dc8 <PyInit__decimal@@Base+0x1e2b4>  // b.plast
   24d64:	ldr	x9, [x8, #128]
   24d68:	cmp	x9, x0
   24d6c:	b.ls	24dd8 <PyInit__decimal@@Base+0x1e2c4>  // b.plast
   24d70:	ldr	x9, [x8, #120]
   24d74:	cmp	x9, x0
   24d78:	mov	w9, #0xf                   	// #15
   24d7c:	b	24de4 <PyInit__decimal@@Base+0x1e2d0>
   24d80:	ldr	x9, [x8, #24]
   24d84:	cmp	x9, x0
   24d88:	mov	w9, #0x3                   	// #3
   24d8c:	b	24de4 <PyInit__decimal@@Base+0x1e2d0>
   24d90:	ldr	x9, [x8, #104]
   24d94:	cmp	x9, x0
   24d98:	b.ls	24dfc <PyInit__decimal@@Base+0x1e2e8>  // b.plast
   24d9c:	ldr	x9, [x8, #96]
   24da0:	cmp	x9, x0
   24da4:	mov	w9, #0xc                   	// #12
   24da8:	b	24de4 <PyInit__decimal@@Base+0x1e2d0>
   24dac:	ldr	x9, [x8, #64]
   24db0:	cmp	x9, x0
   24db4:	b.ls	24e04 <PyInit__decimal@@Base+0x1e2f0>  // b.plast
   24db8:	ldr	x9, [x8, #56]
   24dbc:	cmp	x9, x0
   24dc0:	mov	w9, #0x7                   	// #7
   24dc4:	b	24de4 <PyInit__decimal@@Base+0x1e2d0>
   24dc8:	ldr	x9, [x8, #152]
   24dcc:	cmp	x9, x0
   24dd0:	mov	w9, #0x13                  	// #19
   24dd4:	b	24de4 <PyInit__decimal@@Base+0x1e2d0>
   24dd8:	ldr	x9, [x8, #136]
   24ddc:	cmp	x9, x0
   24de0:	mov	w9, #0x11                  	// #17
   24de4:	cinc	x9, x9, ls  // ls = plast
   24de8:	add	x8, x8, x9, lsl #3
   24dec:	ldur	x8, [x8, #-8]
   24df0:	cmp	x8, x0
   24df4:	cset	w0, eq  // eq = none
   24df8:	ret
   24dfc:	mov	w9, #0xe                   	// #14
   24e00:	b	24de8 <PyInit__decimal@@Base+0x1e2d4>
   24e04:	mov	w9, #0x9                   	// #9
   24e08:	b	24de8 <PyInit__decimal@@Base+0x1e2d4>
   24e0c:	stp	x29, x30, [sp, #-16]!
   24e10:	mov	x29, sp
   24e14:	ldrb	w8, [x1]
   24e18:	tbnz	w8, #1, 24e40 <PyInit__decimal@@Base+0x1e32c>
   24e1c:	tst	w8, #0xe
   24e20:	b.ne	24e38 <PyInit__decimal@@Base+0x1e324>  // b.any
   24e24:	ldr	x9, [x1, #40]
   24e28:	ldr	x10, [x1, #24]
   24e2c:	add	x9, x9, x10, lsl #3
   24e30:	ldur	x9, [x9, #-8]
   24e34:	cbz	x9, 24e78 <PyInit__decimal@@Base+0x1e364>
   24e38:	ldrb	w9, [x2]
   24e3c:	b	24e60 <PyInit__decimal@@Base+0x1e34c>
   24e40:	ldrb	w9, [x2]
   24e44:	tst	w9, #0xe
   24e48:	b.ne	24e60 <PyInit__decimal@@Base+0x1e34c>  // b.any
   24e4c:	ldr	x10, [x2, #40]
   24e50:	ldr	x11, [x2, #24]
   24e54:	add	x10, x10, x11, lsl #3
   24e58:	ldur	x10, [x10, #-8]
   24e5c:	cbz	x10, 24e78 <PyInit__decimal@@Base+0x1e364>
   24e60:	eor	w8, w9, w8
   24e64:	and	w1, w8, #0x1
   24e68:	mov	w2, #0x2                   	// #2
   24e6c:	bl	18df8 <PyInit__decimal@@Base+0x122e4>
   24e70:	ldp	x29, x30, [sp], #16
   24e74:	ret
   24e78:	mov	w1, #0x100                 	// #256
   24e7c:	mov	x2, x3
   24e80:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   24e84:	ldp	x29, x30, [sp], #16
   24e88:	ret
   24e8c:	sub	sp, sp, #0x30
   24e90:	stp	x29, x30, [sp, #16]
   24e94:	str	x19, [sp, #32]
   24e98:	add	x29, sp, #0x10
   24e9c:	mov	x3, x2
   24ea0:	mov	x2, x1
   24ea4:	mov	x19, x0
   24ea8:	add	x0, x29, #0x18
   24eac:	add	x1, sp, #0x8
   24eb0:	bl	23694 <PyInit__decimal@@Base+0x1cb80>
   24eb4:	ldr	x2, [x29, #24]
   24eb8:	ldr	x3, [sp, #8]
   24ebc:	add	x0, x19, #0x8
   24ec0:	mov	x1, x19
   24ec4:	bl	25478 <PyInit__decimal@@Base+0x1e964>
   24ec8:	ldr	x19, [sp, #32]
   24ecc:	ldp	x29, x30, [sp, #16]
   24ed0:	add	sp, sp, #0x30
   24ed4:	ret
   24ed8:	sub	sp, sp, #0x50
   24edc:	stp	x29, x30, [sp, #16]
   24ee0:	stp	x24, x23, [sp, #32]
   24ee4:	stp	x22, x21, [sp, #48]
   24ee8:	stp	x20, x19, [sp, #64]
   24eec:	add	x29, sp, #0x10
   24ef0:	mov	x20, x2
   24ef4:	mov	x24, x3
   24ef8:	ldr	x2, [x1]
   24efc:	ldr	x3, [x20]
   24f00:	mov	x21, x1
   24f04:	mov	x19, x0
   24f08:	add	x0, sp, #0x8
   24f0c:	mov	x1, sp
   24f10:	bl	23694 <PyInit__decimal@@Base+0x1cb80>
   24f14:	ldp	x3, x2, [sp]
   24f18:	add	x23, x19, #0x8
   24f1c:	mov	x0, x23
   24f20:	mov	x1, x19
   24f24:	bl	25478 <PyInit__decimal@@Base+0x1e964>
   24f28:	ldr	x2, [x21, #8]
   24f2c:	ldr	x3, [x20]
   24f30:	add	x0, sp, #0x8
   24f34:	mov	x1, sp
   24f38:	bl	23694 <PyInit__decimal@@Base+0x1cb80>
   24f3c:	ldr	x8, [x19, #8]
   24f40:	ldr	x9, [sp]
   24f44:	adds	x3, x9, x8
   24f48:	str	x3, [sp]
   24f4c:	b.cc	24f5c <PyInit__decimal@@Base+0x1e448>  // b.lo, b.ul, b.last
   24f50:	ldr	x8, [sp, #8]
   24f54:	add	x8, x8, #0x1
   24f58:	str	x8, [sp, #8]
   24f5c:	ldr	x2, [sp, #8]
   24f60:	add	x22, x19, #0x10
   24f64:	mov	x0, x22
   24f68:	mov	x1, x23
   24f6c:	bl	25478 <PyInit__decimal@@Base+0x1e964>
   24f70:	cmp	x24, #0x1
   24f74:	b.eq	25020 <PyInit__decimal@@Base+0x1e50c>  // b.none
   24f78:	ldr	x2, [x21]
   24f7c:	ldr	x3, [x20, #8]
   24f80:	add	x0, sp, #0x8
   24f84:	mov	x1, sp
   24f88:	bl	23694 <PyInit__decimal@@Base+0x1cb80>
   24f8c:	ldr	x8, [x23]
   24f90:	ldr	x9, [sp]
   24f94:	adds	x3, x9, x8
   24f98:	str	x3, [sp]
   24f9c:	b.cc	24fac <PyInit__decimal@@Base+0x1e498>  // b.lo, b.ul, b.last
   24fa0:	ldr	x8, [sp, #8]
   24fa4:	add	x8, x8, #0x1
   24fa8:	str	x8, [sp, #8]
   24fac:	ldr	x2, [sp, #8]
   24fb0:	add	x24, x19, #0x18
   24fb4:	mov	x0, x24
   24fb8:	mov	x1, x23
   24fbc:	bl	25478 <PyInit__decimal@@Base+0x1e964>
   24fc0:	ldr	x2, [x21, #8]
   24fc4:	ldr	x3, [x20, #8]
   24fc8:	add	x0, sp, #0x8
   24fcc:	mov	x1, sp
   24fd0:	bl	23694 <PyInit__decimal@@Base+0x1cb80>
   24fd4:	ldr	x8, [x19, #16]
   24fd8:	ldr	x9, [sp]
   24fdc:	adds	x8, x9, x8
   24fe0:	str	x8, [sp]
   24fe4:	b.cc	24ff4 <PyInit__decimal@@Base+0x1e4e0>  // b.lo, b.ul, b.last
   24fe8:	ldr	x9, [sp, #8]
   24fec:	add	x9, x9, #0x1
   24ff0:	str	x9, [sp, #8]
   24ff4:	ldr	x9, [x24]
   24ff8:	adds	x3, x9, x8
   24ffc:	str	x3, [sp]
   25000:	b.cc	25010 <PyInit__decimal@@Base+0x1e4fc>  // b.lo, b.ul, b.last
   25004:	ldr	x8, [sp, #8]
   25008:	add	x8, x8, #0x1
   2500c:	str	x8, [sp, #8]
   25010:	ldr	x2, [sp, #8]
   25014:	mov	x0, x24
   25018:	mov	x1, x22
   2501c:	bl	25478 <PyInit__decimal@@Base+0x1e964>
   25020:	ldp	x20, x19, [sp, #64]
   25024:	ldp	x22, x21, [sp, #48]
   25028:	ldp	x24, x23, [sp, #32]
   2502c:	ldp	x29, x30, [sp, #16]
   25030:	add	sp, sp, #0x50
   25034:	ret
   25038:	stp	x29, x30, [sp, #-64]!
   2503c:	stp	x24, x23, [sp, #16]
   25040:	stp	x22, x21, [sp, #32]
   25044:	stp	x20, x19, [sp, #48]
   25048:	mov	x29, sp
   2504c:	mov	x22, x1
   25050:	mov	x23, x0
   25054:	mov	x0, x2
   25058:	mov	x1, x3
   2505c:	mov	x19, x4
   25060:	mov	x20, x3
   25064:	mov	x21, x2
   25068:	bl	25578 <PyInit__decimal@@Base+0x1ea64>
   2506c:	mov	w1, #0x8                   	// #8
   25070:	str	x0, [x19]
   25074:	bl	17b18 <PyInit__decimal@@Base+0x11004>
   25078:	mov	x19, x0
   2507c:	cbz	x0, 250ec <PyInit__decimal@@Base+0x1e5d8>
   25080:	mov	w1, #0x10                  	// #16
   25084:	mov	x0, x21
   25088:	bl	255c0 <PyInit__decimal@@Base+0x1eaac>
   2508c:	cbz	x0, 250b8 <PyInit__decimal@@Base+0x1e5a4>
   25090:	mov	w1, #0x8                   	// #8
   25094:	bl	17b18 <PyInit__decimal@@Base+0x11004>
   25098:	mov	x24, x0
   2509c:	cbnz	x0, 250bc <PyInit__decimal@@Base+0x1e5a8>
   250a0:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   250a4:	ldr	x8, [x8, #1376]
   250a8:	mov	x0, x19
   250ac:	blr	x8
   250b0:	mov	x19, xzr
   250b4:	b	250ec <PyInit__decimal@@Base+0x1e5d8>
   250b8:	mov	x24, xzr
   250bc:	mov	x0, x19
   250c0:	mov	x1, x23
   250c4:	mov	x2, x22
   250c8:	mov	x3, x24
   250cc:	mov	x4, x21
   250d0:	mov	x5, x20
   250d4:	bl	25628 <PyInit__decimal@@Base+0x1eb14>
   250d8:	cbz	x24, 250ec <PyInit__decimal@@Base+0x1e5d8>
   250dc:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   250e0:	ldr	x8, [x8, #1376]
   250e4:	mov	x0, x24
   250e8:	blr	x8
   250ec:	mov	x0, x19
   250f0:	ldp	x20, x19, [sp, #48]
   250f4:	ldp	x22, x21, [sp, #32]
   250f8:	ldp	x24, x23, [sp, #16]
   250fc:	ldp	x29, x30, [sp], #64
   25100:	ret
   25104:	sub	sp, sp, #0x80
   25108:	stp	x29, x30, [sp, #32]
   2510c:	stp	x28, x27, [sp, #48]
   25110:	stp	x26, x25, [sp, #64]
   25114:	stp	x24, x23, [sp, #80]
   25118:	stp	x22, x21, [sp, #96]
   2511c:	stp	x20, x19, [sp, #112]
   25120:	add	x29, sp, #0x20
   25124:	mov	x24, x1
   25128:	mov	x26, x0
   2512c:	mov	x0, x2
   25130:	mov	x1, x3
   25134:	mov	x22, x4
   25138:	mov	x25, x3
   2513c:	mov	x27, x2
   25140:	bl	258c0 <PyInit__decimal@@Base+0x1edac>
   25144:	str	x0, [x22]
   25148:	bl	259b8 <PyInit__decimal@@Base+0x1eea4>
   2514c:	cmn	x0, #0x1
   25150:	b.eq	252ac <PyInit__decimal@@Base+0x1e798>  // b.none
   25154:	mov	w1, #0x8                   	// #8
   25158:	mov	x23, x0
   2515c:	bl	17b18 <PyInit__decimal@@Base+0x11004>
   25160:	mov	x19, x0
   25164:	cbz	x0, 252bc <PyInit__decimal@@Base+0x1e7a8>
   25168:	mov	w1, #0x8                   	// #8
   2516c:	mov	x0, x23
   25170:	bl	17b18 <PyInit__decimal@@Base+0x11004>
   25174:	mov	x20, x0
   25178:	cbz	x0, 252c0 <PyInit__decimal@@Base+0x1e7ac>
   2517c:	mov	w1, #0x8                   	// #8
   25180:	mov	x0, x23
   25184:	bl	17b18 <PyInit__decimal@@Base+0x11004>
   25188:	mov	x21, x0
   2518c:	cbz	x0, 252c4 <PyInit__decimal@@Base+0x1e7b0>
   25190:	lsl	x27, x27, #3
   25194:	mov	x0, x19
   25198:	mov	x1, x26
   2519c:	mov	x2, x27
   251a0:	bl	6420 <memcpy@plt>
   251a4:	mov	x0, x20
   251a8:	mov	x1, x26
   251ac:	mov	x2, x27
   251b0:	bl	6420 <memcpy@plt>
   251b4:	mov	x0, x21
   251b8:	mov	x1, x26
   251bc:	mov	x2, x27
   251c0:	bl	6420 <memcpy@plt>
   251c4:	cmp	x26, x24
   251c8:	b.eq	25328 <PyInit__decimal@@Base+0x1e814>  // b.none
   251cc:	mov	w1, #0x8                   	// #8
   251d0:	mov	x0, x23
   251d4:	bl	17b18 <PyInit__decimal@@Base+0x11004>
   251d8:	cbz	x0, 252c4 <PyInit__decimal@@Base+0x1e7b0>
   251dc:	lsl	x27, x25, #3
   251e0:	mov	x1, x24
   251e4:	mov	x2, x27
   251e8:	mov	x26, x0
   251ec:	bl	6420 <memcpy@plt>
   251f0:	mov	x0, x19
   251f4:	mov	x1, x26
   251f8:	mov	x2, x23
   251fc:	mov	w3, wzr
   25200:	bl	13b6c <PyInit__decimal@@Base+0xd058>
   25204:	cbz	w0, 25380 <PyInit__decimal@@Base+0x1e86c>
   25208:	mov	x0, x26
   2520c:	mov	x1, x24
   25210:	mov	x2, x27
   25214:	bl	6420 <memcpy@plt>
   25218:	subs	x8, x23, x25
   2521c:	add	x28, x26, x25, lsl #3
   25220:	lsl	x25, x8, #3
   25224:	stur	x8, [x29, #-8]
   25228:	b.eq	2523c <PyInit__decimal@@Base+0x1e728>  // b.none
   2522c:	mov	x0, x28
   25230:	mov	w1, wzr
   25234:	mov	x2, x25
   25238:	bl	6610 <memset@plt>
   2523c:	mov	w3, #0x1                   	// #1
   25240:	mov	x0, x20
   25244:	mov	x1, x26
   25248:	mov	x2, x23
   2524c:	stp	x25, x28, [sp, #8]
   25250:	bl	13b6c <PyInit__decimal@@Base+0xd058>
   25254:	cbz	w0, 25380 <PyInit__decimal@@Base+0x1e86c>
   25258:	mov	x0, x26
   2525c:	mov	x1, x24
   25260:	mov	x2, x27
   25264:	bl	6420 <memcpy@plt>
   25268:	ldur	x8, [x29, #-8]
   2526c:	cbz	x8, 2527c <PyInit__decimal@@Base+0x1e768>
   25270:	ldp	x2, x0, [sp, #8]
   25274:	mov	w1, wzr
   25278:	bl	6610 <memset@plt>
   2527c:	mov	w3, #0x2                   	// #2
   25280:	mov	x0, x21
   25284:	mov	x1, x26
   25288:	mov	x2, x23
   2528c:	bl	13b6c <PyInit__decimal@@Base+0xd058>
   25290:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   25294:	ldr	x8, [x8, #1376]
   25298:	mov	w23, w0
   2529c:	mov	x0, x26
   252a0:	blr	x8
   252a4:	cbnz	w23, 25364 <PyInit__decimal@@Base+0x1e850>
   252a8:	b	252c4 <PyInit__decimal@@Base+0x1e7b0>
   252ac:	mov	x20, xzr
   252b0:	mov	x21, xzr
   252b4:	mov	x19, xzr
   252b8:	b	252c4 <PyInit__decimal@@Base+0x1e7b0>
   252bc:	mov	x20, xzr
   252c0:	mov	x21, xzr
   252c4:	cbz	x19, 252dc <PyInit__decimal@@Base+0x1e7c8>
   252c8:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   252cc:	ldr	x8, [x8, #1376]
   252d0:	mov	x0, x19
   252d4:	blr	x8
   252d8:	mov	x19, xzr
   252dc:	cbz	x20, 252f0 <PyInit__decimal@@Base+0x1e7dc>
   252e0:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   252e4:	ldr	x8, [x8, #1376]
   252e8:	mov	x0, x20
   252ec:	blr	x8
   252f0:	cbz	x21, 25304 <PyInit__decimal@@Base+0x1e7f0>
   252f4:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   252f8:	ldr	x8, [x8, #1376]
   252fc:	mov	x0, x21
   25300:	blr	x8
   25304:	mov	x0, x19
   25308:	ldp	x20, x19, [sp, #112]
   2530c:	ldp	x22, x21, [sp, #96]
   25310:	ldp	x24, x23, [sp, #80]
   25314:	ldp	x26, x25, [sp, #64]
   25318:	ldp	x28, x27, [sp, #48]
   2531c:	ldp	x29, x30, [sp, #32]
   25320:	add	sp, sp, #0x80
   25324:	ret
   25328:	mov	x0, x19
   2532c:	mov	x1, x23
   25330:	mov	w2, wzr
   25334:	bl	13ea0 <PyInit__decimal@@Base+0xd38c>
   25338:	cbz	w0, 252c4 <PyInit__decimal@@Base+0x1e7b0>
   2533c:	mov	w2, #0x1                   	// #1
   25340:	mov	x0, x20
   25344:	mov	x1, x23
   25348:	bl	13ea0 <PyInit__decimal@@Base+0xd38c>
   2534c:	cbz	w0, 252c4 <PyInit__decimal@@Base+0x1e7b0>
   25350:	mov	w2, #0x2                   	// #2
   25354:	mov	x0, x21
   25358:	mov	x1, x23
   2535c:	bl	13ea0 <PyInit__decimal@@Base+0xd38c>
   25360:	cbz	w0, 252c4 <PyInit__decimal@@Base+0x1e7b0>
   25364:	ldr	x3, [x22]
   25368:	mov	x0, x19
   2536c:	mov	x1, x20
   25370:	mov	x2, x21
   25374:	bl	14224 <PyInit__decimal@@Base+0xd710>
   25378:	cbnz	x20, 252e0 <PyInit__decimal@@Base+0x1e7cc>
   2537c:	b	252f0 <PyInit__decimal@@Base+0x1e7dc>
   25380:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   25384:	ldr	x8, [x8, #1376]
   25388:	mov	x0, x26
   2538c:	blr	x8
   25390:	b	252c4 <PyInit__decimal@@Base+0x1e7b0>
   25394:	stp	x29, x30, [sp, #-64]!
   25398:	stp	x24, x23, [sp, #16]
   2539c:	stp	x22, x21, [sp, #32]
   253a0:	stp	x20, x19, [sp, #48]
   253a4:	mov	x29, sp
   253a8:	mov	x22, x1
   253ac:	mov	x23, x0
   253b0:	mov	x0, x2
   253b4:	mov	x1, x3
   253b8:	mov	x19, x4
   253bc:	mov	x20, x3
   253c0:	mov	x21, x2
   253c4:	bl	25578 <PyInit__decimal@@Base+0x1ea64>
   253c8:	mov	w1, #0x8                   	// #8
   253cc:	str	x0, [x19]
   253d0:	bl	17b18 <PyInit__decimal@@Base+0x11004>
   253d4:	mov	x19, x0
   253d8:	cbz	x0, 25460 <PyInit__decimal@@Base+0x1e94c>
   253dc:	mov	x1, #0x180000000           	// #6442450944
   253e0:	mov	x0, x21
   253e4:	bl	255c0 <PyInit__decimal@@Base+0x1eaac>
   253e8:	cbz	x0, 25414 <PyInit__decimal@@Base+0x1e900>
   253ec:	mov	w1, #0x8                   	// #8
   253f0:	bl	17b18 <PyInit__decimal@@Base+0x11004>
   253f4:	mov	x24, x0
   253f8:	cbnz	x0, 25418 <PyInit__decimal@@Base+0x1e904>
   253fc:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   25400:	ldr	x8, [x8, #1376]
   25404:	mov	x0, x19
   25408:	blr	x8
   2540c:	mov	x19, xzr
   25410:	b	25460 <PyInit__decimal@@Base+0x1e94c>
   25414:	mov	x24, xzr
   25418:	mov	x0, x19
   2541c:	mov	x1, x23
   25420:	mov	x2, x22
   25424:	mov	x3, x24
   25428:	mov	x4, x21
   2542c:	mov	x5, x20
   25430:	bl	25a54 <PyInit__decimal@@Base+0x1ef40>
   25434:	cbnz	w0, 2544c <PyInit__decimal@@Base+0x1e938>
   25438:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   2543c:	ldr	x8, [x8, #1376]
   25440:	mov	x0, x19
   25444:	blr	x8
   25448:	mov	x19, xzr
   2544c:	cbz	x24, 25460 <PyInit__decimal@@Base+0x1e94c>
   25450:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   25454:	ldr	x8, [x8, #1376]
   25458:	mov	x0, x24
   2545c:	blr	x8
   25460:	mov	x0, x19
   25464:	ldp	x20, x19, [sp, #48]
   25468:	ldp	x22, x21, [sp, #32]
   2546c:	ldp	x24, x23, [sp, #16]
   25470:	ldp	x29, x30, [sp], #64
   25474:	ret
   25478:	sub	sp, sp, #0x50
   2547c:	stp	x29, x30, [sp, #16]
   25480:	stp	x24, x23, [sp, #32]
   25484:	stp	x22, x21, [sp, #48]
   25488:	stp	x20, x19, [sp, #64]
   2548c:	add	x29, sp, #0x10
   25490:	mov	x24, #0x89e80000            	// #2313682944
   25494:	adrp	x9, 2e000 <PyInit__decimal@@Base+0x274ec>
   25498:	mov	x21, x2
   2549c:	movk	x24, #0x2304, lsl #32
   254a0:	ldr	x2, [x9, #192]
   254a4:	movk	x24, #0x8ac7, lsl #48
   254a8:	asr	x8, x3, #63
   254ac:	and	x9, x8, x24
   254b0:	mov	x22, x3
   254b4:	mov	x19, x1
   254b8:	mov	x20, x0
   254bc:	add	x23, x9, x3
   254c0:	sub	x3, x21, x8
   254c4:	add	x0, sp, #0x8
   254c8:	mov	x1, sp
   254cc:	bl	23694 <PyInit__decimal@@Base+0x1cb80>
   254d0:	ldr	x8, [sp]
   254d4:	adds	x8, x8, x23
   254d8:	str	x8, [sp]
   254dc:	b.cc	254ec <PyInit__decimal@@Base+0x1e9d8>  // b.lo, b.ul, b.last
   254e0:	ldr	x8, [sp, #8]
   254e4:	add	x8, x8, #0x1
   254e8:	str	x8, [sp, #8]
   254ec:	ldr	x8, [sp, #8]
   254f0:	mov	x3, #0x89e80000            	// #2313682944
   254f4:	movk	x3, #0x2304, lsl #32
   254f8:	add	x0, sp, #0x8
   254fc:	add	x8, x8, x21
   25500:	mvn	x23, x8
   25504:	mov	x1, sp
   25508:	movk	x3, #0x8ac7, lsl #48
   2550c:	mov	x2, x23
   25510:	bl	23694 <PyInit__decimal@@Base+0x1cb80>
   25514:	ldr	x8, [sp]
   25518:	adds	x8, x8, x22
   2551c:	str	x8, [sp]
   25520:	b.cc	25530 <PyInit__decimal@@Base+0x1ea1c>  // b.lo, b.ul, b.last
   25524:	ldr	x9, [sp, #8]
   25528:	add	x9, x9, #0x1
   2552c:	str	x9, [sp, #8]
   25530:	ldr	x9, [sp, #8]
   25534:	mov	x10, #0x76180000            	// #1981284352
   25538:	movk	x10, #0xdcfb, lsl #32
   2553c:	movk	x10, #0x7538, lsl #48
   25540:	add	x9, x21, x9
   25544:	add	x9, x9, x10
   25548:	str	x9, [sp, #8]
   2554c:	sub	x10, x9, x23
   25550:	and	x9, x9, x24
   25554:	add	x8, x9, x8
   25558:	str	x10, [x20]
   2555c:	str	x8, [x19]
   25560:	ldp	x20, x19, [sp, #64]
   25564:	ldp	x22, x21, [sp, #48]
   25568:	ldp	x24, x23, [sp, #32]
   2556c:	ldp	x29, x30, [sp, #16]
   25570:	add	sp, sp, #0x50
   25574:	ret
   25578:	stp	x29, x30, [sp, #-32]!
   2557c:	stp	x20, x19, [sp, #16]
   25580:	mov	x29, sp
   25584:	mov	x19, x0
   25588:	bl	258c0 <PyInit__decimal@@Base+0x1edac>
   2558c:	mov	w1, #0x1                   	// #1
   25590:	bl	258c0 <PyInit__decimal@@Base+0x1edac>
   25594:	add	x8, x19, #0x1
   25598:	lsr	x8, x8, #1
   2559c:	mov	x20, x0
   255a0:	add	x0, x8, #0x1
   255a4:	mov	w1, #0x3                   	// #3
   255a8:	bl	2592c <PyInit__decimal@@Base+0x1ee18>
   255ac:	cmp	x0, x20
   255b0:	csel	x0, x0, x20, hi  // hi = pmore
   255b4:	ldp	x20, x19, [sp, #16]
   255b8:	ldp	x29, x30, [sp], #32
   255bc:	ret
   255c0:	cmp	x0, x1
   255c4:	b.ls	25620 <PyInit__decimal@@Base+0x1eb0c>  // b.plast
   255c8:	stp	x29, x30, [sp, #-48]!
   255cc:	str	x21, [sp, #16]
   255d0:	stp	x20, x19, [sp, #32]
   255d4:	mov	x29, sp
   255d8:	add	x8, x0, #0x1
   255dc:	lsr	x8, x8, #1
   255e0:	add	x20, x8, #0x1
   255e4:	mov	x19, x1
   255e8:	mov	w1, #0x2                   	// #2
   255ec:	mov	x0, x20
   255f0:	bl	2592c <PyInit__decimal@@Base+0x1ee18>
   255f4:	mov	x21, x0
   255f8:	mov	x0, x20
   255fc:	mov	x1, x19
   25600:	bl	255c0 <PyInit__decimal@@Base+0x1eaac>
   25604:	mov	x1, x0
   25608:	mov	x0, x21
   2560c:	bl	258c0 <PyInit__decimal@@Base+0x1edac>
   25610:	ldp	x20, x19, [sp, #32]
   25614:	ldr	x21, [sp, #16]
   25618:	ldp	x29, x30, [sp], #48
   2561c:	ret
   25620:	mov	x0, xzr
   25624:	ret
   25628:	sub	sp, sp, #0x80
   2562c:	stp	x29, x30, [sp, #32]
   25630:	stp	x28, x27, [sp, #48]
   25634:	stp	x26, x25, [sp, #64]
   25638:	stp	x24, x23, [sp, #80]
   2563c:	stp	x22, x21, [sp, #96]
   25640:	stp	x20, x19, [sp, #112]
   25644:	add	x29, sp, #0x20
   25648:	mov	x24, x5
   2564c:	mov	x25, x4
   25650:	mov	x21, x2
   25654:	mov	x23, x1
   25658:	cmp	x4, #0x10
   2565c:	mov	x20, x0
   25660:	b.hi	25680 <PyInit__decimal@@Base+0x1eb6c>  // b.pmore
   25664:	mov	x0, x20
   25668:	mov	x1, x23
   2566c:	mov	x2, x21
   25670:	mov	x3, x25
   25674:	mov	x4, x24
   25678:	bl	12850 <PyInit__decimal@@Base+0xbd3c>
   2567c:	b	258a0 <PyInit__decimal@@Base+0x1ed8c>
   25680:	add	x27, x25, #0x1
   25684:	lsr	x22, x27, #1
   25688:	mov	x19, x3
   2568c:	cmp	x22, x24
   25690:	b.cs	257dc <PyInit__decimal@@Base+0x1ecc8>  // b.hs, b.nlast
   25694:	lsl	x26, x22, #3
   25698:	mov	x0, x19
   2569c:	mov	x1, x23
   256a0:	mov	x2, x26
   256a4:	bl	6420 <memcpy@plt>
   256a8:	sub	x25, x25, x22
   256ac:	add	x1, x23, x26
   256b0:	mov	x0, x19
   256b4:	mov	x2, x25
   256b8:	str	xzr, [x19, x26]
   256bc:	str	x1, [sp, #16]
   256c0:	bl	123f4 <PyInit__decimal@@Base+0xb8e0>
   256c4:	add	x28, x22, #0x1
   256c8:	stur	x27, [x29, #-8]
   256cc:	add	x27, x19, x28, lsl #3
   256d0:	mov	x0, x27
   256d4:	mov	x1, x21
   256d8:	mov	x2, x26
   256dc:	bl	6420 <memcpy@plt>
   256e0:	sub	x24, x24, x22
   256e4:	add	x8, x28, x22
   256e8:	add	x1, x21, x26
   256ec:	mov	x0, x27
   256f0:	mov	x2, x24
   256f4:	stp	x1, x20, [sp]
   256f8:	str	xzr, [x19, x8, lsl #3]
   256fc:	bl	123f4 <PyInit__decimal@@Base+0xb8e0>
   25700:	add	x26, x20, x26
   25704:	add	x3, x19, x28, lsl #4
   25708:	mov	x0, x26
   2570c:	mov	x1, x19
   25710:	mov	x2, x27
   25714:	mov	x4, x28
   25718:	mov	x5, x28
   2571c:	bl	25628 <PyInit__decimal@@Base+0x1eb14>
   25720:	mov	w27, #0x8                   	// #8
   25724:	bfi	x27, x25, #4, #60
   25728:	mov	x0, x19
   2572c:	mov	w1, wzr
   25730:	mov	x2, x27
   25734:	bl	6610 <memset@plt>
   25738:	ldr	x1, [sp, #16]
   2573c:	ldr	x2, [sp]
   25740:	add	x3, x19, x27
   25744:	mov	x0, x19
   25748:	mov	x4, x25
   2574c:	mov	x5, x24
   25750:	bl	25628 <PyInit__decimal@@Base+0x1eb14>
   25754:	ldur	x28, [x29, #-8]
   25758:	ldr	x27, [sp, #8]
   2575c:	add	x24, x25, x24
   25760:	mov	x1, x19
   25764:	and	x20, x28, #0xfffffffffffffffe
   25768:	add	x0, x27, x20, lsl #3
   2576c:	mov	x2, x24
   25770:	bl	123f4 <PyInit__decimal@@Base+0xb8e0>
   25774:	mov	x0, x26
   25778:	mov	x1, x19
   2577c:	mov	x2, x24
   25780:	bl	1261c <PyInit__decimal@@Base+0xbb08>
   25784:	lsl	x8, x28, #3
   25788:	orr	x24, x8, #0x8
   2578c:	mov	x0, x19
   25790:	mov	w1, wzr
   25794:	mov	x2, x24
   25798:	bl	6610 <memset@plt>
   2579c:	add	x3, x19, x24
   257a0:	mov	x0, x19
   257a4:	mov	x1, x23
   257a8:	mov	x2, x21
   257ac:	mov	x4, x22
   257b0:	mov	x5, x22
   257b4:	bl	25628 <PyInit__decimal@@Base+0x1eb14>
   257b8:	mov	x0, x27
   257bc:	mov	x1, x19
   257c0:	mov	x2, x20
   257c4:	bl	123f4 <PyInit__decimal@@Base+0xb8e0>
   257c8:	mov	x0, x26
   257cc:	mov	x1, x19
   257d0:	mov	x2, x20
   257d4:	bl	1261c <PyInit__decimal@@Base+0xbb08>
   257d8:	b	258a0 <PyInit__decimal@@Base+0x1ed8c>
   257dc:	sub	x25, x25, x22
   257e0:	mov	w26, #0x8                   	// #8
   257e4:	cmp	x25, x24
   257e8:	b.cs	2581c <PyInit__decimal@@Base+0x1ed08>  // b.hs, b.nlast
   257ec:	bfi	x26, x24, #4, #60
   257f0:	mov	x0, x19
   257f4:	mov	w1, wzr
   257f8:	mov	x2, x26
   257fc:	bl	6610 <memset@plt>
   25800:	add	x2, x23, x22, lsl #3
   25804:	add	x3, x19, x26
   25808:	mov	x0, x19
   2580c:	mov	x1, x21
   25810:	mov	x4, x24
   25814:	mov	x5, x25
   25818:	b	25848 <PyInit__decimal@@Base+0x1ed34>
   2581c:	bfi	x26, x25, #4, #60
   25820:	mov	x0, x19
   25824:	mov	w1, wzr
   25828:	mov	x2, x26
   2582c:	bl	6610 <memset@plt>
   25830:	add	x1, x23, x22, lsl #3
   25834:	add	x3, x19, x26
   25838:	mov	x0, x19
   2583c:	mov	x2, x21
   25840:	mov	x4, x25
   25844:	mov	x5, x24
   25848:	bl	25628 <PyInit__decimal@@Base+0x1eb14>
   2584c:	add	x0, x20, x22, lsl #3
   25850:	add	x2, x25, x24
   25854:	mov	x1, x19
   25858:	bl	123f4 <PyInit__decimal@@Base+0xb8e0>
   2585c:	lsl	x8, x27, #3
   25860:	orr	x25, x8, #0x8
   25864:	mov	x0, x19
   25868:	mov	w1, wzr
   2586c:	mov	x2, x25
   25870:	bl	6610 <memset@plt>
   25874:	add	x3, x19, x25
   25878:	mov	x0, x19
   2587c:	mov	x1, x23
   25880:	mov	x2, x21
   25884:	mov	x4, x22
   25888:	mov	x5, x24
   2588c:	bl	25628 <PyInit__decimal@@Base+0x1eb14>
   25890:	add	x2, x22, x24
   25894:	mov	x0, x20
   25898:	mov	x1, x19
   2589c:	bl	123f4 <PyInit__decimal@@Base+0xb8e0>
   258a0:	ldp	x20, x19, [sp, #112]
   258a4:	ldp	x22, x21, [sp, #96]
   258a8:	ldp	x24, x23, [sp, #80]
   258ac:	ldp	x26, x25, [sp, #64]
   258b0:	ldp	x28, x27, [sp, #48]
   258b4:	ldp	x29, x30, [sp, #32]
   258b8:	add	sp, sp, #0x80
   258bc:	ret
   258c0:	mvn	x8, x1
   258c4:	cmp	x8, x0
   258c8:	b.cc	258d4 <PyInit__decimal@@Base+0x1edc0>  // b.lo, b.ul, b.last
   258cc:	add	x0, x1, x0
   258d0:	ret
   258d4:	stp	x29, x30, [sp, #-32]!
   258d8:	str	x19, [sp, #16]
   258dc:	mov	x29, sp
   258e0:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   258e4:	ldr	x19, [x19, #3904]
   258e8:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   258ec:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
   258f0:	add	x1, x1, #0xd58
   258f4:	ldr	x0, [x19]
   258f8:	add	x2, x2, #0xd67
   258fc:	mov	w3, #0x253                 	// #595
   25900:	bl	6a10 <fprintf@plt>
   25904:	ldr	x3, [x19]
   25908:	adrp	x0, 2e000 <PyInit__decimal@@Base+0x274ec>
   2590c:	add	x0, x0, #0xd65
   25910:	mov	w1, #0x29                  	// #41
   25914:	mov	w2, #0x1                   	// #1
   25918:	bl	68d0 <fwrite@plt>
   2591c:	ldr	x1, [x19]
   25920:	mov	w0, #0xa                   	// #10
   25924:	bl	6550 <fputc@plt>
   25928:	bl	6760 <abort@plt>
   2592c:	sub	sp, sp, #0x30
   25930:	stp	x29, x30, [sp, #16]
   25934:	str	x19, [sp, #32]
   25938:	add	x29, sp, #0x10
   2593c:	mov	x3, x1
   25940:	mov	x2, x0
   25944:	add	x0, x29, #0x18
   25948:	add	x1, sp, #0x8
   2594c:	bl	23694 <PyInit__decimal@@Base+0x1cb80>
   25950:	ldr	x8, [x29, #24]
   25954:	cbnz	x8, 2596c <PyInit__decimal@@Base+0x1ee58>
   25958:	ldr	x0, [sp, #8]
   2595c:	ldr	x19, [sp, #32]
   25960:	ldp	x29, x30, [sp, #16]
   25964:	add	sp, sp, #0x30
   25968:	ret
   2596c:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   25970:	ldr	x19, [x19, #3904]
   25974:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   25978:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
   2597c:	add	x1, x1, #0xd58
   25980:	ldr	x0, [x19]
   25984:	add	x2, x2, #0xd67
   25988:	mov	w3, #0x26c                 	// #620
   2598c:	bl	6a10 <fprintf@plt>
   25990:	ldr	x3, [x19]
   25994:	adrp	x0, 2e000 <PyInit__decimal@@Base+0x274ec>
   25998:	add	x0, x0, #0xd8f
   2599c:	mov	w1, #0x29                  	// #41
   259a0:	mov	w2, #0x1                   	// #1
   259a4:	bl	68d0 <fwrite@plt>
   259a8:	ldr	x1, [x19]
   259ac:	mov	w0, #0xa                   	// #10
   259b0:	bl	6550 <fputc@plt>
   259b4:	bl	6760 <abort@plt>
   259b8:	stp	x29, x30, [sp, #-32]!
   259bc:	str	x19, [sp, #16]
   259c0:	mov	x29, sp
   259c4:	mov	x19, x0
   259c8:	bl	24c54 <PyInit__decimal@@Base+0x1e140>
   259cc:	cmp	x19, #0x400
   259d0:	sxtw	x8, w0
   259d4:	b.hi	259f0 <PyInit__decimal@@Base+0x1eedc>  // b.pmore
   259d8:	mov	w9, #0x1                   	// #1
   259dc:	lsl	x8, x9, x8
   259e0:	cmp	x8, x19
   259e4:	cset	w9, ne  // ne = any
   259e8:	lsl	x0, x8, x9
   259ec:	b	25a48 <PyInit__decimal@@Base+0x1ef34>
   259f0:	mov	x9, #0x100000000           	// #4294967296
   259f4:	cmp	x19, x9
   259f8:	b.hi	25a24 <PyInit__decimal@@Base+0x1ef10>  // b.pmore
   259fc:	mov	w9, #0x1                   	// #1
   25a00:	lsl	x0, x9, x8
   25a04:	cmp	x0, x19
   25a08:	b.eq	25a48 <PyInit__decimal@@Base+0x1ef34>  // b.none
   25a0c:	lsr	x8, x0, #1
   25a10:	add	x9, x8, x0
   25a14:	cmp	x9, x19
   25a18:	csel	x8, x8, xzr, cc  // cc = lo, ul, last
   25a1c:	add	x0, x8, x9
   25a20:	b	25a48 <PyInit__decimal@@Base+0x1ef34>
   25a24:	mov	x8, #0x180000000           	// #6442450944
   25a28:	movk	x8, #0x1
   25a2c:	cmp	x19, x8
   25a30:	b.cs	25a3c <PyInit__decimal@@Base+0x1ef28>  // b.hs, b.nlast
   25a34:	mov	x0, #0x180000000           	// #6442450944
   25a38:	b	25a48 <PyInit__decimal@@Base+0x1ef34>
   25a3c:	mov	x8, #0x300000000           	// #12884901888
   25a40:	cmp	x19, x8
   25a44:	csinv	x0, x8, xzr, ls  // ls = plast
   25a48:	ldr	x19, [sp, #16]
   25a4c:	ldp	x29, x30, [sp], #32
   25a50:	ret
   25a54:	sub	sp, sp, #0x90
   25a58:	stp	x29, x30, [sp, #48]
   25a5c:	stp	x28, x27, [sp, #64]
   25a60:	stp	x26, x25, [sp, #80]
   25a64:	stp	x24, x23, [sp, #96]
   25a68:	stp	x22, x21, [sp, #112]
   25a6c:	stp	x20, x19, [sp, #128]
   25a70:	add	x29, sp, #0x30
   25a74:	mov	x8, #0x180000000           	// #6442450944
   25a78:	mov	x24, x5
   25a7c:	mov	x25, x4
   25a80:	mov	x21, x2
   25a84:	mov	x22, x1
   25a88:	cmp	x4, x8
   25a8c:	mov	x27, x0
   25a90:	b.hi	25ab8 <PyInit__decimal@@Base+0x1efa4>  // b.pmore
   25a94:	cmp	x24, #0xc0
   25a98:	b.hi	25c28 <PyInit__decimal@@Base+0x1f114>  // b.pmore
   25a9c:	mov	x0, x27
   25aa0:	mov	x1, x21
   25aa4:	mov	x2, x22
   25aa8:	mov	x3, x24
   25aac:	mov	x4, x25
   25ab0:	bl	12850 <PyInit__decimal@@Base+0xbd3c>
   25ab4:	b	25d44 <PyInit__decimal@@Base+0x1f230>
   25ab8:	add	x19, x25, #0x1
   25abc:	lsr	x23, x19, #1
   25ac0:	mov	x20, x3
   25ac4:	cmp	x23, x24
   25ac8:	b.cs	25c70 <PyInit__decimal@@Base+0x1f15c>  // b.hs, b.nlast
   25acc:	str	x19, [sp, #8]
   25ad0:	lsl	x19, x23, #3
   25ad4:	mov	x0, x20
   25ad8:	mov	x1, x22
   25adc:	mov	x2, x19
   25ae0:	bl	6420 <memcpy@plt>
   25ae4:	add	x1, x22, x19
   25ae8:	sub	x2, x25, x23
   25aec:	mov	x0, x20
   25af0:	str	xzr, [x20, x19]
   25af4:	str	x1, [sp, #24]
   25af8:	stur	x2, [x29, #-16]
   25afc:	bl	123f4 <PyInit__decimal@@Base+0xb8e0>
   25b00:	add	x26, x23, #0x1
   25b04:	add	x25, x20, x26, lsl #3
   25b08:	mov	x0, x25
   25b0c:	mov	x1, x21
   25b10:	mov	x2, x19
   25b14:	bl	6420 <memcpy@plt>
   25b18:	add	x28, x21, x19
   25b1c:	sub	x24, x24, x23
   25b20:	add	x8, x26, x23
   25b24:	mov	x0, x25
   25b28:	mov	x1, x28
   25b2c:	mov	x2, x24
   25b30:	str	xzr, [x20, x8, lsl #3]
   25b34:	bl	123f4 <PyInit__decimal@@Base+0xb8e0>
   25b38:	str	x27, [sp, #16]
   25b3c:	add	x27, x27, x19
   25b40:	add	x3, x20, x26, lsl #4
   25b44:	mov	x0, x27
   25b48:	mov	x1, x20
   25b4c:	mov	x2, x25
   25b50:	mov	x4, x26
   25b54:	mov	x5, x26
   25b58:	bl	25a54 <PyInit__decimal@@Base+0x1ef40>
   25b5c:	cbz	w0, 25d48 <PyInit__decimal@@Base+0x1f234>
   25b60:	ldur	x25, [x29, #-16]
   25b64:	mov	w19, #0x8                   	// #8
   25b68:	mov	x0, x20
   25b6c:	mov	w1, wzr
   25b70:	bfi	x19, x25, #4, #60
   25b74:	mov	x2, x19
   25b78:	bl	6610 <memset@plt>
   25b7c:	ldr	x1, [sp, #24]
   25b80:	add	x3, x20, x19
   25b84:	mov	x0, x20
   25b88:	mov	x2, x28
   25b8c:	mov	x4, x25
   25b90:	mov	x5, x24
   25b94:	bl	25a54 <PyInit__decimal@@Base+0x1ef40>
   25b98:	cbz	w0, 25d48 <PyInit__decimal@@Base+0x1f234>
   25b9c:	ldp	x28, x25, [sp, #8]
   25ba0:	ldur	x8, [x29, #-16]
   25ba4:	mov	x1, x20
   25ba8:	and	x26, x28, #0xfffffffffffffffe
   25bac:	add	x19, x8, x24
   25bb0:	add	x0, x25, x26, lsl #3
   25bb4:	mov	x2, x19
   25bb8:	bl	123f4 <PyInit__decimal@@Base+0xb8e0>
   25bbc:	mov	x0, x27
   25bc0:	mov	x1, x20
   25bc4:	mov	x2, x19
   25bc8:	bl	1261c <PyInit__decimal@@Base+0xbb08>
   25bcc:	lsl	x8, x28, #3
   25bd0:	orr	x19, x8, #0x8
   25bd4:	mov	x0, x20
   25bd8:	mov	w1, wzr
   25bdc:	mov	x2, x19
   25be0:	bl	6610 <memset@plt>
   25be4:	add	x3, x20, x19
   25be8:	mov	x0, x20
   25bec:	mov	x1, x22
   25bf0:	mov	x2, x21
   25bf4:	mov	x4, x23
   25bf8:	mov	x5, x23
   25bfc:	bl	25a54 <PyInit__decimal@@Base+0x1ef40>
   25c00:	cbz	w0, 25d48 <PyInit__decimal@@Base+0x1f234>
   25c04:	mov	x0, x25
   25c08:	mov	x1, x20
   25c0c:	mov	x2, x26
   25c10:	bl	123f4 <PyInit__decimal@@Base+0xb8e0>
   25c14:	mov	x0, x27
   25c18:	mov	x1, x20
   25c1c:	mov	x2, x26
   25c20:	bl	1261c <PyInit__decimal@@Base+0xbb08>
   25c24:	b	25d44 <PyInit__decimal@@Base+0x1f230>
   25c28:	sub	x4, x29, #0x8
   25c2c:	mov	x0, x22
   25c30:	mov	x1, x21
   25c34:	mov	x2, x25
   25c38:	mov	x3, x24
   25c3c:	bl	25104 <PyInit__decimal@@Base+0x1e5f0>
   25c40:	cbz	x0, 25d48 <PyInit__decimal@@Base+0x1f234>
   25c44:	mov	x20, x0
   25c48:	add	x8, x24, x25
   25c4c:	lsl	x2, x8, #3
   25c50:	mov	x0, x27
   25c54:	mov	x1, x20
   25c58:	bl	6420 <memcpy@plt>
   25c5c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   25c60:	ldr	x8, [x8, #1376]
   25c64:	mov	x0, x20
   25c68:	blr	x8
   25c6c:	b	25d44 <PyInit__decimal@@Base+0x1f230>
   25c70:	sub	x25, x25, x23
   25c74:	mov	w26, #0x8                   	// #8
   25c78:	cmp	x25, x24
   25c7c:	b.cs	25cb8 <PyInit__decimal@@Base+0x1f1a4>  // b.hs, b.nlast
   25c80:	bfi	x26, x24, #4, #60
   25c84:	mov	x0, x20
   25c88:	mov	w1, wzr
   25c8c:	mov	x2, x26
   25c90:	bl	6610 <memset@plt>
   25c94:	add	x2, x22, x23, lsl #3
   25c98:	add	x3, x20, x26
   25c9c:	mov	x0, x20
   25ca0:	mov	x1, x21
   25ca4:	mov	x4, x24
   25ca8:	mov	x5, x25
   25cac:	bl	25a54 <PyInit__decimal@@Base+0x1ef40>
   25cb0:	cbnz	w0, 25cec <PyInit__decimal@@Base+0x1f1d8>
   25cb4:	b	25d48 <PyInit__decimal@@Base+0x1f234>
   25cb8:	bfi	x26, x25, #4, #60
   25cbc:	mov	x0, x20
   25cc0:	mov	w1, wzr
   25cc4:	mov	x2, x26
   25cc8:	bl	6610 <memset@plt>
   25ccc:	add	x1, x22, x23, lsl #3
   25cd0:	add	x3, x20, x26
   25cd4:	mov	x0, x20
   25cd8:	mov	x2, x21
   25cdc:	mov	x4, x25
   25ce0:	mov	x5, x24
   25ce4:	bl	25a54 <PyInit__decimal@@Base+0x1ef40>
   25ce8:	cbz	w0, 25d48 <PyInit__decimal@@Base+0x1f234>
   25cec:	add	x0, x27, x23, lsl #3
   25cf0:	add	x2, x25, x24
   25cf4:	mov	x1, x20
   25cf8:	bl	123f4 <PyInit__decimal@@Base+0xb8e0>
   25cfc:	lsl	x8, x19, #3
   25d00:	orr	x25, x8, #0x8
   25d04:	mov	x0, x20
   25d08:	mov	w1, wzr
   25d0c:	mov	x2, x25
   25d10:	bl	6610 <memset@plt>
   25d14:	add	x3, x20, x25
   25d18:	mov	x0, x20
   25d1c:	mov	x1, x22
   25d20:	mov	x2, x21
   25d24:	mov	x4, x23
   25d28:	mov	x5, x24
   25d2c:	bl	25a54 <PyInit__decimal@@Base+0x1ef40>
   25d30:	cbz	w0, 25d48 <PyInit__decimal@@Base+0x1f234>
   25d34:	add	x2, x23, x24
   25d38:	mov	x0, x27
   25d3c:	mov	x1, x20
   25d40:	bl	123f4 <PyInit__decimal@@Base+0xb8e0>
   25d44:	mov	w0, #0x1                   	// #1
   25d48:	ldp	x20, x19, [sp, #128]
   25d4c:	ldp	x22, x21, [sp, #112]
   25d50:	ldp	x24, x23, [sp, #96]
   25d54:	ldp	x26, x25, [sp, #80]
   25d58:	ldp	x28, x27, [sp, #64]
   25d5c:	ldp	x29, x30, [sp, #48]
   25d60:	add	sp, sp, #0x90
   25d64:	ret
   25d68:	stp	x29, x30, [sp, #-48]!
   25d6c:	stp	x28, x21, [sp, #16]
   25d70:	stp	x20, x19, [sp, #32]
   25d74:	mov	x29, sp
   25d78:	sub	sp, sp, #0x260
   25d7c:	mov	w8, #0x30                  	// #48
   25d80:	mov	w9, #0x40                  	// #64
   25d84:	add	x10, sp, #0x30
   25d88:	stp	xzr, xzr, [sp, #8]
   25d8c:	strb	w8, [sp]
   25d90:	stp	xzr, x9, [sp, #24]
   25d94:	str	x10, [sp, #40]
   25d98:	ldp	x8, x9, [x0, #8]
   25d9c:	add	x10, x9, x8
   25da0:	sub	x19, x10, #0x1
   25da4:	cmp	x19, #0x1
   25da8:	b.lt	25db4 <PyInit__decimal@@Base+0x1f2a0>  // b.tstop
   25dac:	mov	x0, x19
   25db0:	b	25dc0 <PyInit__decimal@@Base+0x1f2ac>
   25db4:	cmn	x19, #0x2
   25db8:	b.gt	25de0 <PyInit__decimal@@Base+0x1f2cc>
   25dbc:	add	x0, x9, x8
   25dc0:	bl	1820c <PyInit__decimal@@Base+0x116f8>
   25dc4:	sub	w8, w0, #0x1
   25dc8:	sxtw	x0, w8
   25dcc:	add	sp, sp, #0x260
   25dd0:	ldp	x20, x19, [sp, #32]
   25dd4:	ldp	x28, x21, [sp, #16]
   25dd8:	ldp	x29, x30, [sp], #48
   25ddc:	ret
   25de0:	mov	x20, x0
   25de4:	sub	x0, x29, #0x30
   25de8:	mov	x21, x1
   25dec:	bl	13964 <PyInit__decimal@@Base+0xce50>
   25df0:	adrp	x2, 3f000 <PyInit__decimal@@Base+0x384ec>
   25df4:	add	x2, x2, #0xc88
   25df8:	mov	x0, sp
   25dfc:	sub	x3, x29, #0x30
   25e00:	mov	x1, x20
   25e04:	mov	x4, x21
   25e08:	bl	1c64c <PyInit__decimal@@Base+0x15b38>
   25e0c:	ldrb	w8, [sp]
   25e10:	tst	w8, #0xe
   25e14:	b.eq	25e4c <PyInit__decimal@@Base+0x1f338>  // b.none
   25e18:	cmp	w8, #0x1f
   25e1c:	adrp	x19, 42000 <PyInit__decimal@@Base+0x3b4ec>
   25e20:	b.hi	25e30 <PyInit__decimal@@Base+0x1f31c>  // b.pmore
   25e24:	ldr	x8, [x19, #1376]
   25e28:	ldr	x0, [sp, #40]
   25e2c:	blr	x8
   25e30:	ldrb	w8, [sp]
   25e34:	tbnz	w8, #4, 25e98 <PyInit__decimal@@Base+0x1f384>
   25e38:	ldr	x8, [x19, #1376]
   25e3c:	mov	x0, sp
   25e40:	blr	x8
   25e44:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   25e48:	b	25dcc <PyInit__decimal@@Base+0x1f2b8>
   25e4c:	ldp	x20, x21, [sp, #8]
   25e50:	cmp	w8, #0x1f
   25e54:	b.hi	25e68 <PyInit__decimal@@Base+0x1f354>  // b.pmore
   25e58:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   25e5c:	ldr	x8, [x8, #1376]
   25e60:	ldr	x0, [sp, #40]
   25e64:	blr	x8
   25e68:	ldrb	w8, [sp]
   25e6c:	tbnz	w8, #4, 25e80 <PyInit__decimal@@Base+0x1f36c>
   25e70:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   25e74:	ldr	x8, [x8, #1376]
   25e78:	mov	x0, sp
   25e7c:	blr	x8
   25e80:	cmp	x19, #0x0
   25e84:	mov	x8, #0xfffffffffffffffd    	// #-3
   25e88:	cinc	x8, x8, ne  // ne = any
   25e8c:	add	x8, x8, x20
   25e90:	add	x0, x8, x21
   25e94:	b	25dcc <PyInit__decimal@@Base+0x1f2b8>
   25e98:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   25e9c:	b	25dcc <PyInit__decimal@@Base+0x1f2b8>
   25ea0:	sub	sp, sp, #0xb0
   25ea4:	stp	x29, x30, [sp, #112]
   25ea8:	stp	x24, x23, [sp, #128]
   25eac:	stp	x22, x21, [sp, #144]
   25eb0:	stp	x20, x19, [sp, #160]
   25eb4:	add	x29, sp, #0x70
   25eb8:	mov	w8, #0x2                   	// #2
   25ebc:	str	x8, [sp, #48]
   25ec0:	mov	w8, #0x90                  	// #144
   25ec4:	strb	w8, [sp]
   25ec8:	mov	w8, #0x1                   	// #1
   25ecc:	mov	x20, x0
   25ed0:	stp	xzr, x8, [sp, #8]
   25ed4:	stp	x8, x8, [sp, #24]
   25ed8:	add	x8, sp, #0x30
   25edc:	add	x0, sp, #0x38
   25ee0:	mov	x19, x5
   25ee4:	mov	x22, x4
   25ee8:	mov	w21, w3
   25eec:	mov	x23, x2
   25ef0:	mov	x24, x1
   25ef4:	stur	wzr, [x29, #-4]
   25ef8:	str	x8, [sp, #40]
   25efc:	bl	13964 <PyInit__decimal@@Base+0xce50>
   25f00:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x384ec>
   25f04:	add	x1, x1, #0xc88
   25f08:	mov	x0, x20
   25f0c:	mov	x2, x19
   25f10:	bl	195b0 <PyInit__decimal@@Base+0x12a9c>
   25f14:	ldrb	w8, [x23]
   25f18:	tst	w8, #0xe
   25f1c:	b.eq	25f2c <PyInit__decimal@@Base+0x1f418>  // b.none
   25f20:	mov	w8, wzr
   25f24:	cbz	w8, 25f48 <PyInit__decimal@@Base+0x1f434>
   25f28:	b	26004 <PyInit__decimal@@Base+0x1f4f0>
   25f2c:	ldr	x8, [x23, #40]
   25f30:	ldr	x9, [x23, #24]
   25f34:	add	x8, x8, x9, lsl #3
   25f38:	ldur	x8, [x8, #-8]
   25f3c:	cmp	x8, #0x0
   25f40:	cset	w8, eq  // eq = none
   25f44:	cbnz	w8, 26004 <PyInit__decimal@@Base+0x1f4f0>
   25f48:	mov	x0, x23
   25f4c:	bl	18d34 <PyInit__decimal@@Base+0x12220>
   25f50:	cbz	w0, 25fa0 <PyInit__decimal@@Base+0x1f48c>
   25f54:	sub	x4, x29, #0x4
   25f58:	mov	x0, x20
   25f5c:	mov	x1, x20
   25f60:	mov	x2, x24
   25f64:	mov	x3, x22
   25f68:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
   25f6c:	ldur	w8, [x29, #-4]
   25f70:	ldr	w9, [x19]
   25f74:	orr	w9, w9, w8
   25f78:	str	w9, [x19]
   25f7c:	ldrb	w9, [x20]
   25f80:	tst	w9, #0xe
   25f84:	b.ne	26004 <PyInit__decimal@@Base+0x1f4f0>  // b.any
   25f88:	tbz	w8, #0, 25fa0 <PyInit__decimal@@Base+0x1f48c>
   25f8c:	ldr	x8, [x20, #40]
   25f90:	ldr	x9, [x20, #24]
   25f94:	add	x8, x8, x9, lsl #3
   25f98:	ldur	x8, [x8, #-8]
   25f9c:	cbz	x8, 26004 <PyInit__decimal@@Base+0x1f4f0>
   25fa0:	sub	x4, x29, #0x4
   25fa4:	mov	x0, x24
   25fa8:	mov	x1, x24
   25fac:	mov	x2, x24
   25fb0:	mov	x3, x22
   25fb4:	bl	1e8ec <PyInit__decimal@@Base+0x17dd8>
   25fb8:	mov	x2, sp
   25fbc:	add	x3, sp, #0x38
   25fc0:	sub	x4, x29, #0x4
   25fc4:	mov	x0, x23
   25fc8:	mov	x1, x23
   25fcc:	bl	1d6a8 <PyInit__decimal@@Base+0x16b94>
   25fd0:	ldrb	w8, [x24]
   25fd4:	tst	w8, #0xc
   25fd8:	b.ne	25fe8 <PyInit__decimal@@Base+0x1f4d4>  // b.any
   25fdc:	ldrb	w8, [x23]
   25fe0:	tst	w8, #0xc
   25fe4:	b.eq	25f14 <PyInit__decimal@@Base+0x1f400>  // b.none
   25fe8:	ldur	w8, [x29, #-4]
   25fec:	mov	w9, #0x3be                 	// #958
   25ff0:	mov	x0, x20
   25ff4:	mov	x2, x19
   25ff8:	and	w1, w8, w9
   25ffc:	bl	18e8c <PyInit__decimal@@Base+0x12378>
   26000:	b	26014 <PyInit__decimal@@Base+0x1f500>
   26004:	ldrb	w8, [x20]
   26008:	and	w8, w8, #0xfe
   2600c:	orr	w8, w8, w21
   26010:	strb	w8, [x20]
   26014:	ldp	x20, x19, [sp, #160]
   26018:	ldp	x22, x21, [sp, #144]
   2601c:	ldp	x24, x23, [sp, #128]
   26020:	ldp	x29, x30, [sp, #112]
   26024:	add	sp, sp, #0xb0
   26028:	ret
   2602c:	adrp	x8, 2e000 <PyInit__decimal@@Base+0x274ec>
   26030:	add	x8, x8, #0x20
   26034:	ldr	x9, [x8, #72]
   26038:	cmp	x9, x0
   2603c:	b.ls	26068 <PyInit__decimal@@Base+0x1f554>  // b.plast
   26040:	ldr	x9, [x8, #32]
   26044:	cmp	x9, x0
   26048:	b.ls	26090 <PyInit__decimal@@Base+0x1f57c>  // b.plast
   2604c:	ldr	x9, [x8, #16]
   26050:	cmp	x9, x0
   26054:	b.ls	260d4 <PyInit__decimal@@Base+0x1f5c0>  // b.plast
   26058:	ldr	x9, [x8, #8]
   2605c:	cmp	x9, x0
   26060:	mov	w9, #0x1                   	// #1
   26064:	b	26138 <PyInit__decimal@@Base+0x1f624>
   26068:	ldr	x9, [x8, #112]
   2606c:	cmp	x9, x0
   26070:	b.ls	260ac <PyInit__decimal@@Base+0x1f598>  // b.plast
   26074:	ldr	x9, [x8, #88]
   26078:	cmp	x9, x0
   2607c:	b.ls	260e4 <PyInit__decimal@@Base+0x1f5d0>  // b.plast
   26080:	ldr	x9, [x8, #80]
   26084:	cmp	x9, x0
   26088:	mov	w9, #0xa                   	// #10
   2608c:	b	26138 <PyInit__decimal@@Base+0x1f624>
   26090:	ldr	x9, [x8, #48]
   26094:	cmp	x9, x0
   26098:	b.ls	26100 <PyInit__decimal@@Base+0x1f5ec>  // b.plast
   2609c:	ldr	x9, [x8, #40]
   260a0:	cmp	x9, x0
   260a4:	mov	w9, #0x5                   	// #5
   260a8:	b	26138 <PyInit__decimal@@Base+0x1f624>
   260ac:	ldr	x9, [x8, #144]
   260b0:	cmp	x9, x0
   260b4:	b.ls	2611c <PyInit__decimal@@Base+0x1f608>  // b.plast
   260b8:	ldr	x9, [x8, #128]
   260bc:	cmp	x9, x0
   260c0:	b.ls	2612c <PyInit__decimal@@Base+0x1f618>  // b.plast
   260c4:	ldr	x9, [x8, #120]
   260c8:	cmp	x9, x0
   260cc:	mov	w9, #0xf                   	// #15
   260d0:	b	26138 <PyInit__decimal@@Base+0x1f624>
   260d4:	ldr	x9, [x8, #24]
   260d8:	cmp	x9, x0
   260dc:	mov	w9, #0x3                   	// #3
   260e0:	b	26138 <PyInit__decimal@@Base+0x1f624>
   260e4:	ldr	x9, [x8, #104]
   260e8:	cmp	x9, x0
   260ec:	b.ls	26150 <PyInit__decimal@@Base+0x1f63c>  // b.plast
   260f0:	ldr	x9, [x8, #96]
   260f4:	cmp	x9, x0
   260f8:	mov	w9, #0xc                   	// #12
   260fc:	b	26138 <PyInit__decimal@@Base+0x1f624>
   26100:	ldr	x9, [x8, #64]
   26104:	cmp	x9, x0
   26108:	b.ls	26158 <PyInit__decimal@@Base+0x1f644>  // b.plast
   2610c:	ldr	x9, [x8, #56]
   26110:	cmp	x9, x0
   26114:	mov	w9, #0x7                   	// #7
   26118:	b	26138 <PyInit__decimal@@Base+0x1f624>
   2611c:	ldr	x9, [x8, #152]
   26120:	cmp	x9, x0
   26124:	mov	w9, #0x13                  	// #19
   26128:	b	26138 <PyInit__decimal@@Base+0x1f624>
   2612c:	ldr	x9, [x8, #136]
   26130:	cmp	x9, x0
   26134:	mov	w9, #0x11                  	// #17
   26138:	cinc	x9, x9, ls  // ls = plast
   2613c:	ldr	x8, [x8, x9, lsl #3]
   26140:	sub	x8, x8, #0x1
   26144:	cmp	x8, x0
   26148:	cset	w0, eq  // eq = none
   2614c:	ret
   26150:	mov	w9, #0xe                   	// #14
   26154:	b	2613c <PyInit__decimal@@Base+0x1f628>
   26158:	mov	w9, #0x9                   	// #9
   2615c:	b	2613c <PyInit__decimal@@Base+0x1f628>
   26160:	mov	x9, #0xffffffff89e7ffff    	// #-1981284353
   26164:	movk	x9, #0x2304, lsl #32
   26168:	sub	x8, x1, #0x1
   2616c:	movk	x9, #0x8ac7, lsl #48
   26170:	tbnz	x8, #63, 2618c <PyInit__decimal@@Base+0x1f678>
   26174:	ldr	x10, [x0, x8, lsl #3]
   26178:	sub	x8, x8, #0x1
   2617c:	cmp	x10, x9
   26180:	b.eq	26170 <PyInit__decimal@@Base+0x1f65c>  // b.none
   26184:	mov	w0, wzr
   26188:	ret
   2618c:	mov	w0, #0x1                   	// #1
   26190:	ret
   26194:	stp	x29, x30, [sp, #-48]!
   26198:	str	x21, [sp, #16]
   2619c:	stp	x20, x19, [sp, #32]
   261a0:	mov	x29, sp
   261a4:	mov	x19, x0
   261a8:	mov	w9, #0x3e8                 	// #1000
   261ac:	mov	w8, #0x2710                	// #10000
   261b0:	b	261b8 <PyInit__decimal@@Base+0x1f6a4>
   261b4:	sub	x8, x20, #0x1
   261b8:	add	x10, x9, x8
   261bc:	lsr	x20, x10, #1
   261c0:	mul	x11, x20, x20
   261c4:	cmp	x11, x1
   261c8:	b.hi	261b4 <PyInit__decimal@@Base+0x1f6a0>  // b.pmore
   261cc:	orr	x9, x10, #0x1
   261d0:	add	x9, x9, x11
   261d4:	cmp	x9, x1
   261d8:	b.hi	261e4 <PyInit__decimal@@Base+0x1f6d0>  // b.pmore
   261dc:	add	x9, x20, #0x1
   261e0:	b	261b8 <PyInit__decimal@@Base+0x1f6a4>
   261e4:	ldrb	w8, [x19]
   261e8:	tbnz	w8, #5, 26228 <PyInit__decimal@@Base+0x1f714>
   261ec:	adrp	x21, 42000 <PyInit__decimal@@Base+0x3b4ec>
   261f0:	ldr	x8, [x19, #32]
   261f4:	ldr	x1, [x21, #1344]
   261f8:	cmp	x8, x1
   261fc:	b.le	26228 <PyInit__decimal@@Base+0x1f714>
   26200:	strb	wzr, [x29, #28]
   26204:	ldr	x0, [x19, #40]
   26208:	add	x3, x29, #0x1c
   2620c:	mov	w2, #0x8                   	// #8
   26210:	bl	17b6c <PyInit__decimal@@Base+0x11058>
   26214:	str	x0, [x19, #40]
   26218:	ldrb	w8, [x29, #28]
   2621c:	cbnz	w8, 26228 <PyInit__decimal@@Base+0x1f714>
   26220:	ldr	x8, [x21, #1344]
   26224:	str	x8, [x19, #32]
   26228:	ldrb	w8, [x19]
   2622c:	ldr	x10, [x19, #40]
   26230:	mov	w9, #0xca00                	// #51712
   26234:	movk	w9, #0x3b9a, lsl #16
   26238:	mov	w11, #0x1                   	// #1
   2623c:	mov	x12, #0xfffffffffffffffa    	// #-6
   26240:	udiv	x9, x9, x20
   26244:	and	w8, w8, #0xf0
   26248:	mov	x0, x19
   2624c:	strb	w8, [x19]
   26250:	str	x9, [x10]
   26254:	str	x11, [x19, #24]
   26258:	str	x12, [x19, #8]
   2625c:	bl	18820 <PyInit__decimal@@Base+0x11d0c>
   26260:	ldp	x20, x19, [sp, #32]
   26264:	ldr	x21, [sp, #16]
   26268:	ldp	x29, x30, [sp], #48
   2626c:	ret
   26270:	cmp	x1, #0x4
   26274:	b.ge	26280 <PyInit__decimal@@Base+0x1f76c>  // b.tcont
   26278:	mov	w0, #0xffffffff            	// #-1
   2627c:	ret
   26280:	mov	x8, x0
   26284:	mov	w0, #0xffffffff            	// #-1
   26288:	add	x9, x1, #0x3
   2628c:	add	x10, x1, #0x4
   26290:	cmp	x9, #0x0
   26294:	csel	x10, x10, x9, lt  // lt = tstop
   26298:	add	w0, w0, #0x1
   2629c:	asr	x1, x10, #1
   262a0:	cmp	x9, #0x7
   262a4:	str	x1, [x8, w0, sxtw #3]
   262a8:	b.gt	26288 <PyInit__decimal@@Base+0x1f774>
   262ac:	ret
   262b0:	stp	x29, x30, [sp, #-32]!
   262b4:	str	x19, [sp, #16]
   262b8:	mov	x29, sp
   262bc:	strb	wzr, [x29, #28]
   262c0:	mov	x19, x0
   262c4:	ldr	x0, [x0]
   262c8:	add	x3, x29, #0x1c
   262cc:	mov	w2, #0x2                   	// #2
   262d0:	bl	17b6c <PyInit__decimal@@Base+0x11058>
   262d4:	str	x0, [x19]
   262d8:	ldrb	w8, [x29, #28]
   262dc:	ldr	x19, [sp, #16]
   262e0:	cmp	w8, #0x0
   262e4:	cset	w0, eq  // eq = none
   262e8:	ldp	x29, x30, [sp], #32
   262ec:	ret
   262f0:	stp	x29, x30, [sp, #-32]!
   262f4:	str	x19, [sp, #16]
   262f8:	mov	x29, sp
   262fc:	strb	wzr, [x29, #28]
   26300:	mov	x19, x0
   26304:	ldr	x0, [x0]
   26308:	add	x3, x29, #0x1c
   2630c:	mov	w2, #0x4                   	// #4
   26310:	bl	17b6c <PyInit__decimal@@Base+0x11058>
   26314:	str	x0, [x19]
   26318:	ldrb	w8, [x29, #28]
   2631c:	ldr	x19, [sp, #16]
   26320:	cmp	w8, #0x0
   26324:	cset	w0, eq  // eq = none
   26328:	ldp	x29, x30, [sp], #32
   2632c:	ret
   26330:	stp	x29, x30, [sp, #-48]!
   26334:	str	x21, [sp, #16]
   26338:	stp	x20, x19, [sp, #32]
   2633c:	mov	x29, sp
   26340:	mov	w20, w1
   26344:	mov	x21, x0
   26348:	add	x1, x29, #0x18
   2634c:	mov	w0, w2
   26350:	mov	w19, w2
   26354:	bl	26390 <PyInit__decimal@@Base+0x1f87c>
   26358:	ldr	x2, [x29, #24]
   2635c:	adrp	x8, 2d000 <PyInit__decimal@@Base+0x264ec>
   26360:	add	x8, x8, #0xde8
   26364:	ldr	x0, [x8, w19, sxtw #3]
   26368:	sub	x8, x2, #0x1
   2636c:	udiv	x9, x8, x21
   26370:	sub	x8, x8, x9
   26374:	cmn	w20, #0x1
   26378:	csel	x1, x8, x9, eq  // eq = none
   2637c:	bl	263a4 <PyInit__decimal@@Base+0x1f890>
   26380:	ldp	x20, x19, [sp, #32]
   26384:	ldr	x21, [sp, #16]
   26388:	ldp	x29, x30, [sp], #48
   2638c:	ret
   26390:	adrp	x8, 2d000 <PyInit__decimal@@Base+0x264ec>
   26394:	add	x8, x8, #0xdd0
   26398:	ldr	x8, [x8, w0, sxtw #3]
   2639c:	str	x8, [x1]
   263a0:	ret
   263a4:	stp	x29, x30, [sp, #-48]!
   263a8:	stp	x22, x21, [sp, #16]
   263ac:	stp	x20, x19, [sp, #32]
   263b0:	mov	x29, sp
   263b4:	cbz	x1, 26404 <PyInit__decimal@@Base+0x1f8f0>
   263b8:	mov	x19, x2
   263bc:	mov	x20, x1
   263c0:	mov	x22, x0
   263c4:	mov	w21, #0x1                   	// #1
   263c8:	b	263e8 <PyInit__decimal@@Base+0x1f8d4>
   263cc:	mov	x0, x22
   263d0:	mov	x1, x22
   263d4:	mov	x2, x19
   263d8:	bl	264c0 <PyInit__decimal@@Base+0x1f9ac>
   263dc:	lsr	x20, x20, #1
   263e0:	mov	x22, x0
   263e4:	cbz	x20, 26408 <PyInit__decimal@@Base+0x1f8f4>
   263e8:	tbz	w20, #0, 263cc <PyInit__decimal@@Base+0x1f8b8>
   263ec:	mov	x0, x21
   263f0:	mov	x1, x22
   263f4:	mov	x2, x19
   263f8:	bl	264c0 <PyInit__decimal@@Base+0x1f9ac>
   263fc:	mov	x21, x0
   26400:	b	263cc <PyInit__decimal@@Base+0x1f8b8>
   26404:	mov	w21, #0x1                   	// #1
   26408:	mov	x0, x21
   2640c:	ldp	x20, x19, [sp, #32]
   26410:	ldp	x22, x21, [sp, #16]
   26414:	ldp	x29, x30, [sp], #48
   26418:	ret
   2641c:	stp	x29, x30, [sp, #-64]!
   26420:	str	x23, [sp, #16]
   26424:	stp	x22, x21, [sp, #32]
   26428:	stp	x20, x19, [sp, #48]
   2642c:	mov	x29, sp
   26430:	lsr	x19, x0, #1
   26434:	mov	w22, w2
   26438:	mov	w21, w1
   2643c:	mov	x23, x0
   26440:	mov	w0, #0x18                  	// #24
   26444:	mov	w2, #0x8                   	// #8
   26448:	mov	x1, x19
   2644c:	bl	17bd4 <PyInit__decimal@@Base+0x110c0>
   26450:	mov	x20, x0
   26454:	cbz	x0, 264a8 <PyInit__decimal@@Base+0x1f994>
   26458:	add	x1, x29, #0x18
   2645c:	mov	w0, w22
   26460:	bl	26390 <PyInit__decimal@@Base+0x1f87c>
   26464:	mov	x0, x23
   26468:	mov	w1, w21
   2646c:	mov	w2, w22
   26470:	bl	26330 <PyInit__decimal@@Base+0x1f81c>
   26474:	str	w22, [x20]
   26478:	ldr	x22, [x29, #24]
   2647c:	stp	x22, x0, [x20, #8]
   26480:	cbz	x19, 264a8 <PyInit__decimal@@Base+0x1f994>
   26484:	mov	x21, x0
   26488:	add	x23, x20, #0x18
   2648c:	mov	w0, #0x1                   	// #1
   26490:	mov	x1, x21
   26494:	mov	x2, x22
   26498:	str	x0, [x23], #8
   2649c:	bl	264c0 <PyInit__decimal@@Base+0x1f9ac>
   264a0:	subs	x19, x19, #0x1
   264a4:	b.ne	26490 <PyInit__decimal@@Base+0x1f97c>  // b.any
   264a8:	mov	x0, x20
   264ac:	ldp	x20, x19, [sp, #48]
   264b0:	ldp	x22, x21, [sp, #32]
   264b4:	ldr	x23, [sp, #16]
   264b8:	ldp	x29, x30, [sp], #64
   264bc:	ret
   264c0:	sub	sp, sp, #0x30
   264c4:	stp	x29, x30, [sp, #16]
   264c8:	str	x19, [sp, #32]
   264cc:	add	x29, sp, #0x10
   264d0:	mov	x19, x2
   264d4:	mov	x3, x1
   264d8:	mov	x2, x0
   264dc:	add	x0, x29, #0x18
   264e0:	add	x1, sp, #0x8
   264e4:	bl	266d8 <PyInit__decimal@@Base+0x1fbc4>
   264e8:	tbnz	x19, #32, 26570 <PyInit__decimal@@Base+0x1fa5c>
   264ec:	ldr	x8, [x29, #24]
   264f0:	tbnz	x19, #34, 265c0 <PyInit__decimal@@Base+0x1faac>
   264f4:	ldr	x9, [sp, #8]
   264f8:	lsr	x10, x8, #24
   264fc:	str	x10, [x29, #24]
   26500:	subs	x9, x9, x8
   26504:	b.cs	26510 <PyInit__decimal@@Base+0x1f9fc>  // b.hs, b.nlast
   26508:	sub	x10, x10, #0x1
   2650c:	str	x10, [x29, #24]
   26510:	adds	x8, x9, x8, lsl #40
   26514:	str	x8, [sp, #8]
   26518:	b.cc	26528 <PyInit__decimal@@Base+0x1fa14>  // b.lo, b.ul, b.last
   2651c:	ldr	x9, [x29, #24]
   26520:	add	x9, x9, #0x1
   26524:	str	x9, [x29, #24]
   26528:	ldr	x9, [x29, #24]
   2652c:	subs	x8, x8, x9
   26530:	lsr	x10, x9, #24
   26534:	cset	w11, cc  // cc = lo, ul, last
   26538:	adds	x8, x8, x9, lsl #40
   2653c:	sub	x9, x10, x11
   26540:	str	x9, [x29, #24]
   26544:	str	x8, [sp, #8]
   26548:	b.cc	26558 <PyInit__decimal@@Base+0x1fa44>  // b.lo, b.ul, b.last
   2654c:	ldr	x9, [x29, #24]
   26550:	add	x9, x9, #0x1
   26554:	str	x9, [x29, #24]
   26558:	ldr	x9, [x29, #24]
   2655c:	subs	x8, x8, x9
   26560:	lsr	x10, x9, #24
   26564:	cset	w11, cc  // cc = lo, ul, last
   26568:	adds	x8, x8, x9, lsl #40
   2656c:	b	26638 <PyInit__decimal@@Base+0x1fb24>
   26570:	ldr	x8, [x29, #24]
   26574:	ldr	x9, [sp, #8]
   26578:	lsr	x10, x8, #32
   2657c:	subs	x9, x9, x8
   26580:	str	x10, [x29, #24]
   26584:	b.cs	26590 <PyInit__decimal@@Base+0x1fa7c>  // b.hs, b.nlast
   26588:	sub	x10, x10, #0x1
   2658c:	str	x10, [x29, #24]
   26590:	adds	x8, x9, x8, lsl #32
   26594:	str	x8, [sp, #8]
   26598:	b.cc	265a8 <PyInit__decimal@@Base+0x1fa94>  // b.lo, b.ul, b.last
   2659c:	ldr	x9, [x29, #24]
   265a0:	add	x9, x9, #0x1
   265a4:	str	x9, [x29, #24]
   265a8:	ldr	x9, [x29, #24]
   265ac:	subs	x8, x8, x9
   265b0:	lsr	x10, x9, #32
   265b4:	cset	w11, cc  // cc = lo, ul, last
   265b8:	adds	x8, x8, x9, lsl #32
   265bc:	b	26638 <PyInit__decimal@@Base+0x1fb24>
   265c0:	ldr	x9, [sp, #8]
   265c4:	lsr	x10, x8, #30
   265c8:	str	x10, [x29, #24]
   265cc:	subs	x9, x9, x8
   265d0:	b.cs	265dc <PyInit__decimal@@Base+0x1fac8>  // b.hs, b.nlast
   265d4:	sub	x10, x10, #0x1
   265d8:	str	x10, [x29, #24]
   265dc:	adds	x8, x9, x8, lsl #34
   265e0:	str	x8, [sp, #8]
   265e4:	b.cc	265f4 <PyInit__decimal@@Base+0x1fae0>  // b.lo, b.ul, b.last
   265e8:	ldr	x9, [x29, #24]
   265ec:	add	x9, x9, #0x1
   265f0:	str	x9, [x29, #24]
   265f4:	ldr	x9, [x29, #24]
   265f8:	subs	x8, x8, x9
   265fc:	lsr	x10, x9, #30
   26600:	cset	w11, cc  // cc = lo, ul, last
   26604:	adds	x8, x8, x9, lsl #34
   26608:	sub	x9, x10, x11
   2660c:	str	x9, [x29, #24]
   26610:	str	x8, [sp, #8]
   26614:	b.cc	26624 <PyInit__decimal@@Base+0x1fb10>  // b.lo, b.ul, b.last
   26618:	ldr	x9, [x29, #24]
   2661c:	add	x9, x9, #0x1
   26620:	str	x9, [x29, #24]
   26624:	ldr	x9, [x29, #24]
   26628:	subs	x8, x8, x9
   2662c:	lsr	x10, x9, #30
   26630:	cset	w11, cc  // cc = lo, ul, last
   26634:	adds	x8, x8, x9, lsl #34
   26638:	sub	x9, x10, x11
   2663c:	str	x9, [x29, #24]
   26640:	str	x8, [sp, #8]
   26644:	b.cc	26654 <PyInit__decimal@@Base+0x1fb40>  // b.lo, b.ul, b.last
   26648:	ldr	x9, [x29, #24]
   2664c:	add	x9, x9, #0x1
   26650:	str	x9, [x29, #24]
   26654:	ldr	x9, [x29, #24]
   26658:	ldp	x29, x30, [sp, #16]
   2665c:	cmp	x9, #0x0
   26660:	ccmp	x8, x19, #0x2, eq  // eq = none
   26664:	csel	x9, xzr, x19, cc  // cc = lo, ul, last
   26668:	ldr	x19, [sp, #32]
   2666c:	sub	x0, x8, x9
   26670:	add	sp, sp, #0x30
   26674:	ret
   26678:	stp	x29, x30, [sp, #-48]!
   2667c:	str	x21, [sp, #16]
   26680:	stp	x20, x19, [sp, #32]
   26684:	mov	x29, sp
   26688:	mov	w20, w1
   2668c:	mov	x21, x0
   26690:	add	x1, x29, #0x18
   26694:	mov	w0, w2
   26698:	mov	w19, w2
   2669c:	bl	26390 <PyInit__decimal@@Base+0x1f87c>
   266a0:	mov	w0, #0x3                   	// #3
   266a4:	mov	w1, w20
   266a8:	mov	w2, w19
   266ac:	bl	26330 <PyInit__decimal@@Base+0x1f81c>
   266b0:	mov	w8, #0x1                   	// #1
   266b4:	stp	x8, x0, [x21]
   266b8:	ldr	x2, [x29, #24]
   266bc:	mov	w1, #0x2                   	// #2
   266c0:	bl	263a4 <PyInit__decimal@@Base+0x1f890>
   266c4:	str	x0, [x21, #16]
   266c8:	ldp	x20, x19, [sp, #32]
   266cc:	ldr	x21, [sp, #16]
   266d0:	ldp	x29, x30, [sp], #48
   266d4:	ret
   266d8:	mul	x8, x3, x2
   266dc:	umulh	x9, x3, x2
   266e0:	str	x9, [x0]
   266e4:	str	x8, [x1]
   266e8:	ret
   266ec:	sub	sp, sp, #0xb0
   266f0:	stp	x29, x30, [sp, #80]
   266f4:	stp	x28, x27, [sp, #96]
   266f8:	stp	x26, x25, [sp, #112]
   266fc:	stp	x24, x23, [sp, #128]
   26700:	stp	x22, x21, [sp, #144]
   26704:	stp	x20, x19, [sp, #160]
   26708:	add	x29, sp, #0x50
   2670c:	mov	x19, x0
   26710:	mov	x0, x1
   26714:	mov	w27, w2
   26718:	mov	x24, x1
   2671c:	bl	2692c <PyInit__decimal@@Base+0x1fe18>
   26720:	sxtw	x8, w0
   26724:	lsr	x10, x8, #1
   26728:	mov	w9, #0x1                   	// #1
   2672c:	sub	x26, x8, x10
   26730:	lsl	x20, x9, x10
   26734:	lsl	x23, x9, x26
   26738:	mov	x0, x19
   2673c:	mov	x1, x23
   26740:	mov	x2, x20
   26744:	str	x10, [sp, #32]
   26748:	bl	26f54 <PyInit__decimal@@Base+0x20440>
   2674c:	cbz	w0, 2690c <PyInit__decimal@@Base+0x1fdf8>
   26750:	mov	w1, #0xffffffff            	// #-1
   26754:	mov	x0, x23
   26758:	mov	w2, w27
   2675c:	bl	2641c <PyInit__decimal@@Base+0x1f908>
   26760:	cbz	x0, 2690c <PyInit__decimal@@Base+0x1fdf8>
   26764:	add	x28, x19, x24, lsl #3
   26768:	mov	x22, x0
   2676c:	cmp	x28, x19
   26770:	b.ls	26798 <PyInit__decimal@@Base+0x1fc84>  // b.plast
   26774:	lsl	x21, x23, #3
   26778:	mov	x25, x19
   2677c:	mov	x0, x25
   26780:	mov	x1, x23
   26784:	mov	x2, x22
   26788:	bl	147fc <PyInit__decimal@@Base+0xdce8>
   2678c:	add	x25, x25, x21
   26790:	cmp	x25, x28
   26794:	b.cc	2677c <PyInit__decimal@@Base+0x1fc68>  // b.lo, b.ul, b.last
   26798:	mov	x0, x19
   2679c:	mov	x1, x20
   267a0:	mov	x2, x23
   267a4:	bl	26f54 <PyInit__decimal@@Base+0x20440>
   267a8:	cbz	w0, 26894 <PyInit__decimal@@Base+0x1fd80>
   267ac:	sub	x1, x29, #0x8
   267b0:	mov	w0, w27
   267b4:	str	x28, [sp, #16]
   267b8:	bl	269b0 <PyInit__decimal@@Base+0x1fe9c>
   267bc:	mov	w1, #0xffffffff            	// #-1
   267c0:	mov	x0, x24
   267c4:	mov	w2, w27
   267c8:	str	w27, [sp, #12]
   267cc:	bl	26330 <PyInit__decimal@@Base+0x1f81c>
   267d0:	str	x0, [sp, #24]
   267d4:	cbz	x26, 26880 <PyInit__decimal@@Base+0x1fd6c>
   267d8:	ldur	x25, [x29, #-8]
   267dc:	mov	w26, #0x1                   	// #1
   267e0:	ldr	x0, [sp, #24]
   267e4:	mov	w8, #0x1                   	// #1
   267e8:	mov	x1, x26
   267ec:	mov	x2, x25
   267f0:	stur	x8, [x29, #-16]
   267f4:	bl	269c4 <PyInit__decimal@@Base+0x1feb0>
   267f8:	mov	x1, x0
   267fc:	mov	x2, x25
   26800:	stur	x0, [x29, #-24]
   26804:	bl	26a3c <PyInit__decimal@@Base+0x1ff28>
   26808:	ldr	x8, [sp, #32]
   2680c:	mov	x27, x0
   26810:	mov	x21, xzr
   26814:	lsl	x8, x26, x8
   26818:	add	x24, x19, x8, lsl #3
   2681c:	add	x28, x24, x21, lsl #3
   26820:	ldr	x8, [x28]
   26824:	ldp	x3, x1, [x29, #-24]
   26828:	sub	x0, x29, #0x20
   2682c:	add	x2, sp, #0x28
   26830:	stur	x8, [x29, #-32]
   26834:	ldr	x8, [x28, #8]
   26838:	mov	x4, x25
   2683c:	str	x8, [sp, #40]
   26840:	bl	26bf4 <PyInit__decimal@@Base+0x200e0>
   26844:	sub	x0, x29, #0x10
   26848:	sub	x1, x29, #0x18
   2684c:	mov	x2, x27
   26850:	mov	x3, x25
   26854:	bl	26c48 <PyInit__decimal@@Base+0x20134>
   26858:	ldur	x8, [x29, #-32]
   2685c:	add	x21, x21, #0x2
   26860:	cmp	x21, x20
   26864:	str	x8, [x28]
   26868:	ldr	x8, [sp, #40]
   2686c:	str	x8, [x28, #8]
   26870:	b.cc	2681c <PyInit__decimal@@Base+0x1fd08>  // b.lo, b.ul, b.last
   26874:	add	x26, x26, #0x1
   26878:	cmp	x26, x23
   2687c:	b.cc	267e0 <PyInit__decimal@@Base+0x1fccc>  // b.lo, b.ul, b.last
   26880:	cmp	x20, x23
   26884:	adrp	x21, 42000 <PyInit__decimal@@Base+0x3b4ec>
   26888:	b.ne	268ac <PyInit__decimal@@Base+0x1fd98>  // b.any
   2688c:	ldr	x24, [sp, #16]
   26890:	b	268d4 <PyInit__decimal@@Base+0x1fdc0>
   26894:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   26898:	ldr	x8, [x8, #1376]
   2689c:	mov	x0, x22
   268a0:	blr	x8
   268a4:	mov	w0, wzr
   268a8:	b	2690c <PyInit__decimal@@Base+0x1fdf8>
   268ac:	ldr	x8, [x21, #1376]
   268b0:	mov	x0, x22
   268b4:	blr	x8
   268b8:	ldr	w2, [sp, #12]
   268bc:	mov	w1, #0xffffffff            	// #-1
   268c0:	mov	x0, x20
   268c4:	bl	2641c <PyInit__decimal@@Base+0x1f908>
   268c8:	ldr	x24, [sp, #16]
   268cc:	mov	x22, x0
   268d0:	cbz	x0, 2690c <PyInit__decimal@@Base+0x1fdf8>
   268d4:	cmp	x24, x19
   268d8:	b.ls	268fc <PyInit__decimal@@Base+0x1fde8>  // b.plast
   268dc:	lsl	x23, x20, #3
   268e0:	mov	x0, x19
   268e4:	mov	x1, x20
   268e8:	mov	x2, x22
   268ec:	bl	147fc <PyInit__decimal@@Base+0xdce8>
   268f0:	add	x19, x19, x23
   268f4:	cmp	x19, x24
   268f8:	b.cc	268e0 <PyInit__decimal@@Base+0x1fdcc>  // b.lo, b.ul, b.last
   268fc:	ldr	x8, [x21, #1376]
   26900:	mov	x0, x22
   26904:	blr	x8
   26908:	mov	w0, #0x1                   	// #1
   2690c:	ldp	x20, x19, [sp, #160]
   26910:	ldp	x22, x21, [sp, #144]
   26914:	ldp	x24, x23, [sp, #128]
   26918:	ldp	x26, x25, [sp, #112]
   2691c:	ldp	x28, x27, [sp, #96]
   26920:	ldp	x29, x30, [sp, #80]
   26924:	add	sp, sp, #0xb0
   26928:	ret
   2692c:	lsr	x8, x0, #32
   26930:	cmp	x8, #0x0
   26934:	csel	x8, x0, x8, eq  // eq = none
   26938:	lsr	x12, x8, #16
   2693c:	cset	w10, ne  // ne = any
   26940:	cmp	x12, #0x0
   26944:	mov	w9, #0x10                  	// #16
   26948:	csel	x8, x8, x12, eq  // eq = none
   2694c:	lsl	w11, w10, #5
   26950:	bfi	w9, w10, #5, #1
   26954:	lsr	x10, x8, #8
   26958:	csel	w9, w11, w9, eq  // eq = none
   2695c:	cmp	x10, #0x0
   26960:	csel	x8, x8, x10, eq  // eq = none
   26964:	orr	w11, w9, #0x8
   26968:	lsr	x10, x8, #4
   2696c:	csel	w9, w9, w11, eq  // eq = none
   26970:	cmp	x10, #0x0
   26974:	csel	x8, x8, x10, eq  // eq = none
   26978:	orr	w11, w9, #0x4
   2697c:	lsr	x10, x8, #2
   26980:	csel	w9, w9, w11, eq  // eq = none
   26984:	cmp	x10, #0x0
   26988:	csel	x8, x8, x10, eq  // eq = none
   2698c:	add	w11, w9, #0x2
   26990:	lsr	x10, x8, #1
   26994:	csel	w9, w9, w11, eq  // eq = none
   26998:	cmp	x10, #0x0
   2699c:	csel	w8, w8, w10, eq  // eq = none
   269a0:	cinc	w9, w9, ne  // ne = any
   269a4:	add	w8, w9, w8
   269a8:	sub	w0, w8, #0x1
   269ac:	ret
   269b0:	adrp	x8, 2d000 <PyInit__decimal@@Base+0x264ec>
   269b4:	add	x8, x8, #0xdd0
   269b8:	ldr	x8, [x8, w0, sxtw #3]
   269bc:	str	x8, [x1]
   269c0:	ret
   269c4:	stp	x29, x30, [sp, #-48]!
   269c8:	stp	x22, x21, [sp, #16]
   269cc:	stp	x20, x19, [sp, #32]
   269d0:	mov	x29, sp
   269d4:	cbz	x1, 26a24 <PyInit__decimal@@Base+0x1ff10>
   269d8:	mov	x19, x2
   269dc:	mov	x20, x1
   269e0:	mov	x22, x0
   269e4:	mov	w21, #0x1                   	// #1
   269e8:	b	26a08 <PyInit__decimal@@Base+0x1fef4>
   269ec:	mov	x0, x22
   269f0:	mov	x1, x22
   269f4:	mov	x2, x19
   269f8:	bl	26a3c <PyInit__decimal@@Base+0x1ff28>
   269fc:	lsr	x20, x20, #1
   26a00:	mov	x22, x0
   26a04:	cbz	x20, 26a28 <PyInit__decimal@@Base+0x1ff14>
   26a08:	tbz	w20, #0, 269ec <PyInit__decimal@@Base+0x1fed8>
   26a0c:	mov	x0, x21
   26a10:	mov	x1, x22
   26a14:	mov	x2, x19
   26a18:	bl	26a3c <PyInit__decimal@@Base+0x1ff28>
   26a1c:	mov	x21, x0
   26a20:	b	269ec <PyInit__decimal@@Base+0x1fed8>
   26a24:	mov	w21, #0x1                   	// #1
   26a28:	mov	x0, x21
   26a2c:	ldp	x20, x19, [sp, #32]
   26a30:	ldp	x22, x21, [sp, #16]
   26a34:	ldp	x29, x30, [sp], #48
   26a38:	ret
   26a3c:	sub	sp, sp, #0x30
   26a40:	stp	x29, x30, [sp, #16]
   26a44:	str	x19, [sp, #32]
   26a48:	add	x29, sp, #0x10
   26a4c:	mov	x19, x2
   26a50:	mov	x3, x1
   26a54:	mov	x2, x0
   26a58:	add	x0, x29, #0x18
   26a5c:	add	x1, sp, #0x8
   26a60:	bl	26eec <PyInit__decimal@@Base+0x203d8>
   26a64:	tbnz	x19, #32, 26aec <PyInit__decimal@@Base+0x1ffd8>
   26a68:	ldr	x8, [x29, #24]
   26a6c:	tbnz	x19, #34, 26b3c <PyInit__decimal@@Base+0x20028>
   26a70:	ldr	x9, [sp, #8]
   26a74:	lsr	x10, x8, #24
   26a78:	str	x10, [x29, #24]
   26a7c:	subs	x9, x9, x8
   26a80:	b.cs	26a8c <PyInit__decimal@@Base+0x1ff78>  // b.hs, b.nlast
   26a84:	sub	x10, x10, #0x1
   26a88:	str	x10, [x29, #24]
   26a8c:	adds	x8, x9, x8, lsl #40
   26a90:	str	x8, [sp, #8]
   26a94:	b.cc	26aa4 <PyInit__decimal@@Base+0x1ff90>  // b.lo, b.ul, b.last
   26a98:	ldr	x9, [x29, #24]
   26a9c:	add	x9, x9, #0x1
   26aa0:	str	x9, [x29, #24]
   26aa4:	ldr	x9, [x29, #24]
   26aa8:	subs	x8, x8, x9
   26aac:	lsr	x10, x9, #24
   26ab0:	cset	w11, cc  // cc = lo, ul, last
   26ab4:	adds	x8, x8, x9, lsl #40
   26ab8:	sub	x9, x10, x11
   26abc:	str	x9, [x29, #24]
   26ac0:	str	x8, [sp, #8]
   26ac4:	b.cc	26ad4 <PyInit__decimal@@Base+0x1ffc0>  // b.lo, b.ul, b.last
   26ac8:	ldr	x9, [x29, #24]
   26acc:	add	x9, x9, #0x1
   26ad0:	str	x9, [x29, #24]
   26ad4:	ldr	x9, [x29, #24]
   26ad8:	subs	x8, x8, x9
   26adc:	lsr	x10, x9, #24
   26ae0:	cset	w11, cc  // cc = lo, ul, last
   26ae4:	adds	x8, x8, x9, lsl #40
   26ae8:	b	26bb4 <PyInit__decimal@@Base+0x200a0>
   26aec:	ldr	x8, [x29, #24]
   26af0:	ldr	x9, [sp, #8]
   26af4:	lsr	x10, x8, #32
   26af8:	subs	x9, x9, x8
   26afc:	str	x10, [x29, #24]
   26b00:	b.cs	26b0c <PyInit__decimal@@Base+0x1fff8>  // b.hs, b.nlast
   26b04:	sub	x10, x10, #0x1
   26b08:	str	x10, [x29, #24]
   26b0c:	adds	x8, x9, x8, lsl #32
   26b10:	str	x8, [sp, #8]
   26b14:	b.cc	26b24 <PyInit__decimal@@Base+0x20010>  // b.lo, b.ul, b.last
   26b18:	ldr	x9, [x29, #24]
   26b1c:	add	x9, x9, #0x1
   26b20:	str	x9, [x29, #24]
   26b24:	ldr	x9, [x29, #24]
   26b28:	subs	x8, x8, x9
   26b2c:	lsr	x10, x9, #32
   26b30:	cset	w11, cc  // cc = lo, ul, last
   26b34:	adds	x8, x8, x9, lsl #32
   26b38:	b	26bb4 <PyInit__decimal@@Base+0x200a0>
   26b3c:	ldr	x9, [sp, #8]
   26b40:	lsr	x10, x8, #30
   26b44:	str	x10, [x29, #24]
   26b48:	subs	x9, x9, x8
   26b4c:	b.cs	26b58 <PyInit__decimal@@Base+0x20044>  // b.hs, b.nlast
   26b50:	sub	x10, x10, #0x1
   26b54:	str	x10, [x29, #24]
   26b58:	adds	x8, x9, x8, lsl #34
   26b5c:	str	x8, [sp, #8]
   26b60:	b.cc	26b70 <PyInit__decimal@@Base+0x2005c>  // b.lo, b.ul, b.last
   26b64:	ldr	x9, [x29, #24]
   26b68:	add	x9, x9, #0x1
   26b6c:	str	x9, [x29, #24]
   26b70:	ldr	x9, [x29, #24]
   26b74:	subs	x8, x8, x9
   26b78:	lsr	x10, x9, #30
   26b7c:	cset	w11, cc  // cc = lo, ul, last
   26b80:	adds	x8, x8, x9, lsl #34
   26b84:	sub	x9, x10, x11
   26b88:	str	x9, [x29, #24]
   26b8c:	str	x8, [sp, #8]
   26b90:	b.cc	26ba0 <PyInit__decimal@@Base+0x2008c>  // b.lo, b.ul, b.last
   26b94:	ldr	x9, [x29, #24]
   26b98:	add	x9, x9, #0x1
   26b9c:	str	x9, [x29, #24]
   26ba0:	ldr	x9, [x29, #24]
   26ba4:	subs	x8, x8, x9
   26ba8:	lsr	x10, x9, #30
   26bac:	cset	w11, cc  // cc = lo, ul, last
   26bb0:	adds	x8, x8, x9, lsl #34
   26bb4:	sub	x9, x10, x11
   26bb8:	str	x9, [x29, #24]
   26bbc:	str	x8, [sp, #8]
   26bc0:	b.cc	26bd0 <PyInit__decimal@@Base+0x200bc>  // b.lo, b.ul, b.last
   26bc4:	ldr	x9, [x29, #24]
   26bc8:	add	x9, x9, #0x1
   26bcc:	str	x9, [x29, #24]
   26bd0:	ldr	x9, [x29, #24]
   26bd4:	ldp	x29, x30, [sp, #16]
   26bd8:	cmp	x9, #0x0
   26bdc:	ccmp	x8, x19, #0x2, eq  // eq = none
   26be0:	csel	x9, xzr, x19, cc  // cc = lo, ul, last
   26be4:	ldr	x19, [sp, #32]
   26be8:	sub	x0, x8, x9
   26bec:	add	sp, sp, #0x30
   26bf0:	ret
   26bf4:	stp	x29, x30, [sp, #-48]!
   26bf8:	stp	x22, x21, [sp, #16]
   26bfc:	stp	x20, x19, [sp, #32]
   26c00:	mov	x29, sp
   26c04:	mov	x22, x0
   26c08:	ldr	x0, [x0]
   26c0c:	mov	x21, x2
   26c10:	mov	x2, x4
   26c14:	mov	x19, x4
   26c18:	mov	x20, x3
   26c1c:	bl	26a3c <PyInit__decimal@@Base+0x1ff28>
   26c20:	str	x0, [x22]
   26c24:	ldr	x0, [x21]
   26c28:	mov	x1, x20
   26c2c:	mov	x2, x19
   26c30:	bl	26a3c <PyInit__decimal@@Base+0x1ff28>
   26c34:	str	x0, [x21]
   26c38:	ldp	x20, x19, [sp, #32]
   26c3c:	ldp	x22, x21, [sp, #16]
   26c40:	ldp	x29, x30, [sp], #48
   26c44:	ret
   26c48:	stp	x29, x30, [sp, #-48]!
   26c4c:	stp	x22, x21, [sp, #16]
   26c50:	stp	x20, x19, [sp, #32]
   26c54:	mov	x29, sp
   26c58:	mov	x21, x0
   26c5c:	ldr	x0, [x0]
   26c60:	mov	x20, x2
   26c64:	mov	x22, x1
   26c68:	mov	x1, x2
   26c6c:	mov	x2, x3
   26c70:	mov	x19, x3
   26c74:	bl	26a3c <PyInit__decimal@@Base+0x1ff28>
   26c78:	str	x0, [x21]
   26c7c:	ldr	x0, [x22]
   26c80:	mov	x1, x20
   26c84:	mov	x2, x19
   26c88:	bl	26a3c <PyInit__decimal@@Base+0x1ff28>
   26c8c:	str	x0, [x22]
   26c90:	ldp	x20, x19, [sp, #32]
   26c94:	ldp	x22, x21, [sp, #16]
   26c98:	ldp	x29, x30, [sp], #48
   26c9c:	ret
   26ca0:	sub	sp, sp, #0xb0
   26ca4:	stp	x29, x30, [sp, #80]
   26ca8:	stp	x28, x27, [sp, #96]
   26cac:	stp	x26, x25, [sp, #112]
   26cb0:	stp	x24, x23, [sp, #128]
   26cb4:	stp	x22, x21, [sp, #144]
   26cb8:	stp	x20, x19, [sp, #160]
   26cbc:	add	x29, sp, #0x50
   26cc0:	mov	x22, x0
   26cc4:	mov	x0, x1
   26cc8:	mov	w28, w2
   26ccc:	mov	x24, x1
   26cd0:	bl	2692c <PyInit__decimal@@Base+0x1fe18>
   26cd4:	sxtw	x21, w0
   26cd8:	lsr	x25, x21, #1
   26cdc:	mov	w19, #0x1                   	// #1
   26ce0:	lsl	x20, x19, x25
   26ce4:	mov	w1, #0x1                   	// #1
   26ce8:	mov	x0, x20
   26cec:	mov	w2, w28
   26cf0:	bl	2641c <PyInit__decimal@@Base+0x1f908>
   26cf4:	cbz	x0, 26ecc <PyInit__decimal@@Base+0x203b8>
   26cf8:	sub	x26, x21, x25
   26cfc:	add	x27, x22, x24, lsl #3
   26d00:	mov	x23, x0
   26d04:	cmp	x27, x22
   26d08:	lsl	x21, x19, x26
   26d0c:	str	x25, [sp, #32]
   26d10:	b.ls	26d38 <PyInit__decimal@@Base+0x20224>  // b.plast
   26d14:	lsl	x19, x20, #3
   26d18:	mov	x25, x22
   26d1c:	mov	x0, x25
   26d20:	mov	x1, x20
   26d24:	mov	x2, x23
   26d28:	bl	147fc <PyInit__decimal@@Base+0xdce8>
   26d2c:	add	x25, x25, x19
   26d30:	cmp	x25, x27
   26d34:	b.cc	26d1c <PyInit__decimal@@Base+0x20208>  // b.lo, b.ul, b.last
   26d38:	sub	x1, x29, #0x8
   26d3c:	mov	w0, w28
   26d40:	stp	x27, x23, [sp, #16]
   26d44:	bl	269b0 <PyInit__decimal@@Base+0x1fe9c>
   26d48:	mov	w1, #0x1                   	// #1
   26d4c:	mov	x0, x24
   26d50:	mov	w2, w28
   26d54:	str	w28, [sp, #12]
   26d58:	bl	26330 <PyInit__decimal@@Base+0x1f81c>
   26d5c:	cbz	x26, 26e14 <PyInit__decimal@@Base+0x20300>
   26d60:	ldur	x25, [x29, #-8]
   26d64:	mov	x24, x0
   26d68:	mov	w26, #0x1                   	// #1
   26d6c:	mov	w8, #0x1                   	// #1
   26d70:	mov	x0, x24
   26d74:	mov	x1, x26
   26d78:	mov	x2, x25
   26d7c:	stur	x8, [x29, #-16]
   26d80:	bl	269c4 <PyInit__decimal@@Base+0x1feb0>
   26d84:	mov	x1, x0
   26d88:	mov	x2, x25
   26d8c:	stur	x0, [x29, #-24]
   26d90:	bl	26a3c <PyInit__decimal@@Base+0x1ff28>
   26d94:	ldr	x8, [sp, #32]
   26d98:	mov	x27, x0
   26d9c:	mov	x19, xzr
   26da0:	mov	x23, x22
   26da4:	lsl	x8, x26, x8
   26da8:	add	x28, x22, x8, lsl #3
   26dac:	add	x22, x28, x19, lsl #3
   26db0:	ldr	x8, [x22]
   26db4:	ldp	x3, x1, [x29, #-24]
   26db8:	sub	x0, x29, #0x20
   26dbc:	add	x2, sp, #0x28
   26dc0:	stur	x8, [x29, #-32]
   26dc4:	ldr	x8, [x22, #8]
   26dc8:	mov	x4, x25
   26dcc:	str	x8, [sp, #40]
   26dd0:	bl	26bf4 <PyInit__decimal@@Base+0x200e0>
   26dd4:	sub	x0, x29, #0x10
   26dd8:	sub	x1, x29, #0x18
   26ddc:	mov	x2, x27
   26de0:	mov	x3, x25
   26de4:	bl	26c48 <PyInit__decimal@@Base+0x20134>
   26de8:	ldur	x8, [x29, #-32]
   26dec:	add	x19, x19, #0x2
   26df0:	cmp	x19, x20
   26df4:	str	x8, [x22]
   26df8:	ldr	x8, [sp, #40]
   26dfc:	str	x8, [x22, #8]
   26e00:	b.cc	26dac <PyInit__decimal@@Base+0x20298>  // b.lo, b.ul, b.last
   26e04:	add	x26, x26, #0x1
   26e08:	cmp	x26, x21
   26e0c:	mov	x22, x23
   26e10:	b.cc	26d6c <PyInit__decimal@@Base+0x20258>  // b.lo, b.ul, b.last
   26e14:	mov	x0, x22
   26e18:	mov	x1, x21
   26e1c:	mov	x2, x20
   26e20:	bl	26f54 <PyInit__decimal@@Base+0x20440>
   26e24:	cbz	w0, 26e3c <PyInit__decimal@@Base+0x20328>
   26e28:	cmp	x21, x20
   26e2c:	adrp	x24, 42000 <PyInit__decimal@@Base+0x3b4ec>
   26e30:	b.ne	26e54 <PyInit__decimal@@Base+0x20340>  // b.any
   26e34:	ldp	x26, x25, [sp, #16]
   26e38:	b	26e7c <PyInit__decimal@@Base+0x20368>
   26e3c:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   26e40:	ldr	x8, [x8, #1376]
   26e44:	ldr	x0, [sp, #24]
   26e48:	blr	x8
   26e4c:	mov	w0, wzr
   26e50:	b	26ecc <PyInit__decimal@@Base+0x203b8>
   26e54:	ldr	x8, [x24, #1376]
   26e58:	ldr	x0, [sp, #24]
   26e5c:	blr	x8
   26e60:	ldr	w2, [sp, #12]
   26e64:	mov	w1, #0x1                   	// #1
   26e68:	mov	x0, x21
   26e6c:	bl	2641c <PyInit__decimal@@Base+0x1f908>
   26e70:	ldr	x26, [sp, #16]
   26e74:	mov	x25, x0
   26e78:	cbz	x0, 26ecc <PyInit__decimal@@Base+0x203b8>
   26e7c:	cmp	x26, x22
   26e80:	b.ls	26ea8 <PyInit__decimal@@Base+0x20394>  // b.plast
   26e84:	lsl	x19, x21, #3
   26e88:	mov	x23, x22
   26e8c:	mov	x0, x23
   26e90:	mov	x1, x21
   26e94:	mov	x2, x25
   26e98:	bl	147fc <PyInit__decimal@@Base+0xdce8>
   26e9c:	add	x23, x23, x19
   26ea0:	cmp	x23, x26
   26ea4:	b.cc	26e8c <PyInit__decimal@@Base+0x20378>  // b.lo, b.ul, b.last
   26ea8:	ldr	x8, [x24, #1376]
   26eac:	mov	x0, x25
   26eb0:	blr	x8
   26eb4:	mov	x0, x22
   26eb8:	mov	x1, x20
   26ebc:	mov	x2, x21
   26ec0:	bl	26f54 <PyInit__decimal@@Base+0x20440>
   26ec4:	cmp	w0, #0x0
   26ec8:	cset	w0, ne  // ne = any
   26ecc:	ldp	x20, x19, [sp, #160]
   26ed0:	ldp	x22, x21, [sp, #144]
   26ed4:	ldp	x24, x23, [sp, #128]
   26ed8:	ldp	x26, x25, [sp, #112]
   26edc:	ldp	x28, x27, [sp, #96]
   26ee0:	ldp	x29, x30, [sp, #80]
   26ee4:	add	sp, sp, #0xb0
   26ee8:	ret
   26eec:	mul	x8, x3, x2
   26ef0:	umulh	x9, x3, x2
   26ef4:	str	x9, [x0]
   26ef8:	str	x8, [x1]
   26efc:	ret
   26f00:	cbz	x2, 26f50 <PyInit__decimal@@Base+0x2043c>
   26f04:	mov	x8, xzr
   26f08:	lsl	x9, x3, #3
   26f0c:	lsl	x10, x2, #3
   26f10:	b	26f28 <PyInit__decimal@@Base+0x20414>
   26f14:	add	x8, x8, #0x1
   26f18:	add	x1, x1, x9
   26f1c:	cmp	x8, x2
   26f20:	add	x0, x0, #0x8
   26f24:	b.eq	26f50 <PyInit__decimal@@Base+0x2043c>  // b.none
   26f28:	cbz	x3, 26f14 <PyInit__decimal@@Base+0x20400>
   26f2c:	mov	x11, x0
   26f30:	mov	x12, x1
   26f34:	mov	x13, x3
   26f38:	ldr	x14, [x12], #8
   26f3c:	subs	x13, x13, #0x1
   26f40:	str	x14, [x11]
   26f44:	add	x11, x11, x10
   26f48:	b.ne	26f38 <PyInit__decimal@@Base+0x20424>  // b.any
   26f4c:	b	26f14 <PyInit__decimal@@Base+0x20400>
   26f50:	ret
   26f54:	stp	x29, x30, [sp, #-48]!
   26f58:	stp	x22, x21, [sp, #16]
   26f5c:	stp	x20, x19, [sp, #32]
   26f60:	mov	x29, sp
   26f64:	mov	x19, x1
   26f68:	mov	x20, x0
   26f6c:	mov	x0, x1
   26f70:	mov	x1, x2
   26f74:	mov	x21, x2
   26f78:	bl	27040 <PyInit__decimal@@Base+0x2052c>
   26f7c:	cmp	x21, x19
   26f80:	b.eq	26fcc <PyInit__decimal@@Base+0x204b8>  // b.none
   26f84:	mov	x22, x0
   26f88:	mov	w0, #0x2                   	// #2
   26f8c:	mov	x1, x19
   26f90:	bl	27040 <PyInit__decimal@@Base+0x2052c>
   26f94:	cmp	x0, x21
   26f98:	b.ne	26fec <PyInit__decimal@@Base+0x204d8>  // b.any
   26f9c:	mov	x0, x20
   26fa0:	mov	x1, x19
   26fa4:	mov	x2, x21
   26fa8:	mov	w3, wzr
   26fac:	bl	272cc <PyInit__decimal@@Base+0x207b8>
   26fb0:	cbz	w0, 26fdc <PyInit__decimal@@Base+0x204c8>
   26fb4:	mov	x0, x20
   26fb8:	mov	x1, x19
   26fbc:	bl	270cc <PyInit__decimal@@Base+0x205b8>
   26fc0:	lsl	x8, x22, #2
   26fc4:	and	x8, x8, #0xfffffffffffffff8
   26fc8:	add	x20, x20, x8
   26fcc:	mov	x0, x20
   26fd0:	mov	x1, x19
   26fd4:	bl	270cc <PyInit__decimal@@Base+0x205b8>
   26fd8:	mov	w0, #0x1                   	// #1
   26fdc:	ldp	x20, x19, [sp, #32]
   26fe0:	ldp	x22, x21, [sp, #16]
   26fe4:	ldp	x29, x30, [sp], #48
   26fe8:	ret
   26fec:	mov	w0, #0x2                   	// #2
   26ff0:	mov	x1, x21
   26ff4:	bl	27040 <PyInit__decimal@@Base+0x2052c>
   26ff8:	cmp	x0, x19
   26ffc:	b.ne	2703c <PyInit__decimal@@Base+0x20528>  // b.any
   27000:	mov	x0, x20
   27004:	mov	x1, x21
   27008:	bl	270cc <PyInit__decimal@@Base+0x205b8>
   2700c:	lsl	x8, x22, #2
   27010:	and	x8, x8, #0xfffffffffffffff8
   27014:	add	x0, x20, x8
   27018:	mov	x1, x21
   2701c:	bl	270cc <PyInit__decimal@@Base+0x205b8>
   27020:	mov	w3, #0x1                   	// #1
   27024:	mov	x0, x20
   27028:	mov	x1, x21
   2702c:	mov	x2, x19
   27030:	bl	272cc <PyInit__decimal@@Base+0x207b8>
   27034:	cbnz	w0, 26fd8 <PyInit__decimal@@Base+0x204c4>
   27038:	b	26fdc <PyInit__decimal@@Base+0x204c8>
   2703c:	bl	6760 <abort@plt>
   27040:	sub	sp, sp, #0x30
   27044:	stp	x29, x30, [sp, #16]
   27048:	str	x19, [sp, #32]
   2704c:	add	x29, sp, #0x10
   27050:	mov	x3, x1
   27054:	mov	x2, x0
   27058:	add	x0, x29, #0x18
   2705c:	add	x1, sp, #0x8
   27060:	bl	27518 <PyInit__decimal@@Base+0x20a04>
   27064:	ldr	x8, [x29, #24]
   27068:	cbnz	x8, 27080 <PyInit__decimal@@Base+0x2056c>
   2706c:	ldr	x0, [sp, #8]
   27070:	ldr	x19, [sp, #32]
   27074:	ldp	x29, x30, [sp, #16]
   27078:	add	sp, sp, #0x30
   2707c:	ret
   27080:	adrp	x19, 3f000 <PyInit__decimal@@Base+0x384ec>
   27084:	ldr	x19, [x19, #3904]
   27088:	adrp	x1, 2d000 <PyInit__decimal@@Base+0x264ec>
   2708c:	adrp	x2, 2d000 <PyInit__decimal@@Base+0x264ec>
   27090:	add	x1, x1, #0xd58
   27094:	ldr	x0, [x19]
   27098:	add	x2, x2, #0xd67
   2709c:	mov	w3, #0x26c                 	// #620
   270a0:	bl	6a10 <fprintf@plt>
   270a4:	ldr	x3, [x19]
   270a8:	adrp	x0, 2e000 <PyInit__decimal@@Base+0x274ec>
   270ac:	add	x0, x0, #0xd8f
   270b0:	mov	w1, #0x29                  	// #41
   270b4:	mov	w2, #0x1                   	// #1
   270b8:	bl	68d0 <fwrite@plt>
   270bc:	ldr	x1, [x19]
   270c0:	mov	w0, #0xa                   	// #10
   270c4:	bl	6550 <fputc@plt>
   270c8:	bl	6760 <abort@plt>
   270cc:	stp	x29, x30, [sp, #-96]!
   270d0:	stp	x28, x27, [sp, #16]
   270d4:	stp	x26, x25, [sp, #32]
   270d8:	stp	x24, x23, [sp, #48]
   270dc:	stp	x22, x21, [sp, #64]
   270e0:	stp	x20, x19, [sp, #80]
   270e4:	mov	x29, sp
   270e8:	sub	sp, sp, #0x40, lsl #12
   270ec:	sub	sp, sp, #0x30
   270f0:	mov	x27, x0
   270f4:	mov	x8, x1
   270f8:	str	x1, [sp, #32]
   270fc:	mov	x28, x8
   27100:	cmp	x8, #0x80
   27104:	lsr	x8, x8, #1
   27108:	b.hi	270fc <PyInit__decimal@@Base+0x205e8>  // b.pmore
   2710c:	ldr	x8, [sp, #32]
   27110:	cbz	x8, 272a8 <PyInit__decimal@@Base+0x20794>
   27114:	ldr	x8, [sp, #32]
   27118:	mov	x19, xzr
   2711c:	lsl	x22, x28, #3
   27120:	lsl	x26, x8, #3
   27124:	add	x8, x26, #0x8
   27128:	mul	x8, x8, x28
   2712c:	str	x8, [sp, #8]
   27130:	mul	x8, x26, x28
   27134:	str	x8, [sp, #24]
   27138:	b	27154 <PyInit__decimal@@Base+0x20640>
   2713c:	ldr	x8, [sp, #32]
   27140:	add	x19, x19, x28
   27144:	cmp	x19, x8
   27148:	ldp	x8, x27, [sp, #8]
   2714c:	add	x27, x27, x8
   27150:	b.cs	272a8 <PyInit__decimal@@Base+0x20794>  // b.hs, b.nlast
   27154:	mov	x20, x27
   27158:	mov	x25, x19
   2715c:	str	x27, [sp, #16]
   27160:	b	27180 <PyInit__decimal@@Base+0x2066c>
   27164:	ldr	x8, [sp, #32]
   27168:	add	x25, x25, x28
   2716c:	add	x27, x27, x22
   27170:	cmp	x25, x8
   27174:	ldr	x8, [sp, #24]
   27178:	add	x20, x20, x8
   2717c:	b.cs	2713c <PyInit__decimal@@Base+0x20628>  // b.hs, b.nlast
   27180:	cbz	x28, 271b4 <PyInit__decimal@@Base+0x206a0>
   27184:	add	x23, sp, #0x20, lsl #12
   27188:	add	x23, x23, #0x28
   2718c:	mov	x24, x27
   27190:	mov	x21, x28
   27194:	mov	x0, x23
   27198:	mov	x1, x24
   2719c:	mov	x2, x22
   271a0:	bl	6420 <memcpy@plt>
   271a4:	subs	x21, x21, #0x1
   271a8:	add	x24, x24, x26
   271ac:	add	x23, x23, x22
   271b0:	b.ne	27194 <PyInit__decimal@@Base+0x20680>  // b.any
   271b4:	add	x0, sp, #0x20, lsl #12
   271b8:	add	x0, x0, #0x28
   271bc:	mov	x1, x28
   271c0:	bl	2752c <PyInit__decimal@@Base+0x20a18>
   271c4:	cmp	x19, x25
   271c8:	b.ne	27204 <PyInit__decimal@@Base+0x206f0>  // b.any
   271cc:	cbz	x28, 27164 <PyInit__decimal@@Base+0x20650>
   271d0:	add	x23, sp, #0x20, lsl #12
   271d4:	add	x23, x23, #0x28
   271d8:	mov	x24, x27
   271dc:	mov	x21, x28
   271e0:	mov	x0, x24
   271e4:	mov	x1, x23
   271e8:	mov	x2, x22
   271ec:	bl	6420 <memcpy@plt>
   271f0:	subs	x21, x21, #0x1
   271f4:	add	x23, x23, x22
   271f8:	add	x24, x24, x26
   271fc:	b.ne	271e0 <PyInit__decimal@@Base+0x206cc>  // b.any
   27200:	b	27164 <PyInit__decimal@@Base+0x20650>
   27204:	cbz	x28, 27234 <PyInit__decimal@@Base+0x20720>
   27208:	add	x23, sp, #0x28
   2720c:	mov	x24, x20
   27210:	mov	x21, x28
   27214:	mov	x0, x23
   27218:	mov	x1, x24
   2721c:	mov	x2, x22
   27220:	bl	6420 <memcpy@plt>
   27224:	subs	x21, x21, #0x1
   27228:	add	x24, x24, x26
   2722c:	add	x23, x23, x22
   27230:	b.ne	27214 <PyInit__decimal@@Base+0x20700>  // b.any
   27234:	add	x0, sp, #0x28
   27238:	mov	x1, x28
   2723c:	bl	2752c <PyInit__decimal@@Base+0x20a18>
   27240:	cbz	x28, 27164 <PyInit__decimal@@Base+0x20650>
   27244:	add	x23, sp, #0x20, lsl #12
   27248:	add	x23, x23, #0x28
   2724c:	mov	x24, x20
   27250:	mov	x21, x28
   27254:	mov	x0, x24
   27258:	mov	x1, x23
   2725c:	mov	x2, x22
   27260:	bl	6420 <memcpy@plt>
   27264:	subs	x21, x21, #0x1
   27268:	add	x23, x23, x22
   2726c:	add	x24, x24, x26
   27270:	b.ne	27254 <PyInit__decimal@@Base+0x20740>  // b.any
   27274:	cbz	x28, 27164 <PyInit__decimal@@Base+0x20650>
   27278:	add	x23, sp, #0x28
   2727c:	mov	x24, x27
   27280:	mov	x21, x28
   27284:	mov	x0, x24
   27288:	mov	x1, x23
   2728c:	mov	x2, x22
   27290:	bl	6420 <memcpy@plt>
   27294:	subs	x21, x21, #0x1
   27298:	add	x23, x23, x22
   2729c:	add	x24, x24, x26
   272a0:	b.ne	27284 <PyInit__decimal@@Base+0x20770>  // b.any
   272a4:	b	27164 <PyInit__decimal@@Base+0x20650>
   272a8:	add	sp, sp, #0x40, lsl #12
   272ac:	add	sp, sp, #0x30
   272b0:	ldp	x20, x19, [sp, #80]
   272b4:	ldp	x22, x21, [sp, #64]
   272b8:	ldp	x24, x23, [sp, #48]
   272bc:	ldp	x26, x25, [sp, #32]
   272c0:	ldp	x28, x27, [sp, #16]
   272c4:	ldp	x29, x30, [sp], #96
   272c8:	ret
   272cc:	stp	x29, x30, [sp, #-96]!
   272d0:	stp	x28, x27, [sp, #16]
   272d4:	stp	x26, x25, [sp, #32]
   272d8:	stp	x24, x23, [sp, #48]
   272dc:	stp	x22, x21, [sp, #64]
   272e0:	stp	x20, x19, [sp, #80]
   272e4:	mov	x29, sp
   272e8:	sub	sp, sp, #0x10, lsl #12
   272ec:	sub	sp, sp, #0x60
   272f0:	mov	x19, x2
   272f4:	mov	x20, x1
   272f8:	mov	x22, x1
   272fc:	str	x0, [sp, #64]
   27300:	cbz	w3, 27310 <PyInit__decimal@@Base+0x207fc>
   27304:	cmp	w3, #0x1
   27308:	b.ne	27514 <PyInit__decimal@@Base+0x20a00>  // b.any
   2730c:	mov	w22, #0x2                   	// #2
   27310:	lsr	x8, x20, #3
   27314:	add	x0, x8, #0x1
   27318:	mov	w1, #0x8                   	// #8
   2731c:	bl	17b18 <PyInit__decimal@@Base+0x11004>
   27320:	cbz	x0, 274f0 <PyInit__decimal@@Base+0x209dc>
   27324:	str	x19, [sp, #48]
   27328:	ldr	x19, [sp, #64]
   2732c:	mov	x23, x0
   27330:	cbz	x20, 274dc <PyInit__decimal@@Base+0x209c8>
   27334:	ldr	x8, [sp, #48]
   27338:	ldr	x21, [sp, #48]
   2733c:	adrp	x28, 2d000 <PyInit__decimal@@Base+0x264ec>
   27340:	mov	w25, #0x1                   	// #1
   27344:	sub	x24, x8, #0x1
   27348:	lsr	x10, x8, #1
   2734c:	add	x28, x28, #0xe20
   27350:	stp	x20, x10, [sp, #8]
   27354:	b	27368 <PyInit__decimal@@Base+0x20854>
   27358:	ldr	x20, [sp, #8]
   2735c:	add	x25, x25, #0x2
   27360:	cmp	x25, x20
   27364:	b.hi	274dc <PyInit__decimal@@Base+0x209c8>  // b.pmore
   27368:	lsr	x9, x25, #6
   2736c:	and	x8, x25, #0x3f
   27370:	str	x9, [sp, #40]
   27374:	ldr	x9, [x23, x9, lsl #3]
   27378:	ldr	x8, [x28, x8, lsl #3]
   2737c:	tst	x8, x9
   27380:	str	x8, [sp, #32]
   27384:	b.ne	27358 <PyInit__decimal@@Base+0x20844>  // b.any
   27388:	add	x8, sp, #0x8, lsl #12
   2738c:	add	x8, x8, #0x58
   27390:	str	x8, [sp, #80]
   27394:	add	x8, sp, #0x58
   27398:	str	x8, [sp, #72]
   2739c:	cbz	x10, 27358 <PyInit__decimal@@Base+0x20844>
   273a0:	ldr	x8, [sp, #48]
   273a4:	mov	x20, xzr
   273a8:	mul	x8, x25, x8
   273ac:	lsl	x8, x8, #2
   273b0:	and	x8, x8, #0xfffffffffffffff8
   273b4:	add	x8, x19, x8
   273b8:	str	x8, [sp, #24]
   273bc:	b	273f8 <PyInit__decimal@@Base+0x208e4>
   273c0:	ldr	x1, [sp, #72]
   273c4:	add	x8, x19, x8, lsl #3
   273c8:	add	x0, x8, x20, lsl #3
   273cc:	mov	x2, x26
   273d0:	bl	6420 <memcpy@plt>
   273d4:	ldp	x10, x8, [sp, #32]
   273d8:	ldr	x20, [sp, #56]
   273dc:	lsl	x8, x8, #3
   273e0:	ldr	x9, [x23, x8]
   273e4:	orr	x9, x9, x10
   273e8:	ldr	x10, [sp, #16]
   273ec:	str	x9, [x23, x8]
   273f0:	cmp	x10, x20
   273f4:	b.ls	27358 <PyInit__decimal@@Base+0x20844>  // b.plast
   273f8:	ldr	x9, [sp, #24]
   273fc:	add	x11, x20, #0x1, lsl #12
   27400:	sub	x8, x10, x20
   27404:	ldr	x0, [sp, #80]
   27408:	add	x1, x9, x20, lsl #3
   2740c:	lsl	x8, x8, #3
   27410:	cmp	x11, x10
   27414:	mov	w9, #0x8000                	// #32768
   27418:	csel	x26, x9, x8, cc  // cc = lo, ul, last
   2741c:	mov	x2, x26
   27420:	str	x11, [sp, #56]
   27424:	bl	6420 <memcpy@plt>
   27428:	add	x0, sp, #0x50
   2742c:	add	x1, sp, #0x48
   27430:	bl	2759c <PyInit__decimal@@Base+0x20a88>
   27434:	mov	x0, x25
   27438:	mov	x1, x22
   2743c:	mov	x2, x24
   27440:	bl	275b0 <PyInit__decimal@@Base+0x20a9c>
   27444:	ldr	x8, [sp, #48]
   27448:	cmp	x0, x25
   2744c:	mul	x8, x0, x8
   27450:	lsr	x8, x8, #1
   27454:	b.eq	273c0 <PyInit__decimal@@Base+0x208ac>  // b.none
   27458:	mov	x27, x0
   2745c:	ldr	x0, [sp, #80]
   27460:	add	x9, x19, x20, lsl #3
   27464:	mov	x19, x28
   27468:	add	x28, x9, x8, lsl #3
   2746c:	mov	x1, x28
   27470:	mov	x2, x26
   27474:	bl	6420 <memcpy@plt>
   27478:	mov	x0, x28
   2747c:	mov	x28, x19
   27480:	ldp	x19, x1, [sp, #64]
   27484:	mov	x2, x26
   27488:	bl	6420 <memcpy@plt>
   2748c:	add	x0, sp, #0x50
   27490:	add	x1, sp, #0x48
   27494:	bl	2759c <PyInit__decimal@@Base+0x20a88>
   27498:	lsr	x9, x27, #3
   2749c:	and	x8, x27, #0x3f
   274a0:	and	x9, x9, #0x1ffffffffffffff8
   274a4:	ldr	x8, [x28, x8, lsl #3]
   274a8:	ldr	x10, [x23, x9]
   274ac:	mov	x0, x27
   274b0:	mov	x1, x22
   274b4:	mov	x2, x24
   274b8:	orr	x8, x10, x8
   274bc:	str	x8, [x23, x9]
   274c0:	bl	275b0 <PyInit__decimal@@Base+0x20a9c>
   274c4:	mul	x8, x0, x21
   274c8:	mov	x27, x0
   274cc:	cmp	x0, x25
   274d0:	lsr	x8, x8, #1
   274d4:	b.ne	2745c <PyInit__decimal@@Base+0x20948>  // b.any
   274d8:	b	273c0 <PyInit__decimal@@Base+0x208ac>
   274dc:	adrp	x8, 42000 <PyInit__decimal@@Base+0x3b4ec>
   274e0:	ldr	x8, [x8, #1376]
   274e4:	mov	x0, x23
   274e8:	blr	x8
   274ec:	mov	w0, #0x1                   	// #1
   274f0:	add	sp, sp, #0x10, lsl #12
   274f4:	add	sp, sp, #0x60
   274f8:	ldp	x20, x19, [sp, #80]
   274fc:	ldp	x22, x21, [sp, #64]
   27500:	ldp	x24, x23, [sp, #48]
   27504:	ldp	x26, x25, [sp, #32]
   27508:	ldp	x28, x27, [sp, #16]
   2750c:	ldp	x29, x30, [sp], #96
   27510:	ret
   27514:	bl	6760 <abort@plt>
   27518:	mul	x8, x3, x2
   2751c:	umulh	x9, x3, x2
   27520:	str	x9, [x0]
   27524:	str	x8, [x1]
   27528:	ret
   2752c:	cbz	x1, 27598 <PyInit__decimal@@Base+0x20a84>
   27530:	lsl	x11, x1, #3
   27534:	mov	x8, xzr
   27538:	sub	x9, x1, #0x1
   2753c:	add	x10, x0, #0x8
   27540:	add	x12, x11, #0x8
   27544:	add	x13, x0, x11
   27548:	b	27560 <PyInit__decimal@@Base+0x20a4c>
   2754c:	sub	x9, x9, #0x1
   27550:	add	x10, x10, x12
   27554:	cmp	x8, x1
   27558:	add	x13, x13, x12
   2755c:	b.eq	27598 <PyInit__decimal@@Base+0x20a84>  // b.none
   27560:	add	x8, x8, #0x1
   27564:	cmp	x8, x1
   27568:	b.cs	2754c <PyInit__decimal@@Base+0x20a38>  // b.hs, b.nlast
   2756c:	mov	x14, x13
   27570:	mov	x15, x10
   27574:	mov	x16, x9
   27578:	ldr	x17, [x14]
   2757c:	ldr	x18, [x15]
   27580:	subs	x16, x16, #0x1
   27584:	str	x17, [x15], #8
   27588:	str	x18, [x14]
   2758c:	add	x14, x14, x11
   27590:	b.ne	27578 <PyInit__decimal@@Base+0x20a64>  // b.any
   27594:	b	2754c <PyInit__decimal@@Base+0x20a38>
   27598:	ret
   2759c:	ldr	x8, [x0]
   275a0:	ldr	x9, [x1]
   275a4:	str	x8, [x1]
   275a8:	str	x9, [x0]
   275ac:	ret
   275b0:	sub	sp, sp, #0x40
   275b4:	stp	x29, x30, [sp, #32]
   275b8:	str	x19, [sp, #48]
   275bc:	add	x29, sp, #0x20
   275c0:	mov	x19, x2
   275c4:	mov	x3, x1
   275c8:	mov	x2, x0
   275cc:	add	x0, x29, #0x18
   275d0:	sub	x1, x29, #0x8
   275d4:	bl	27518 <PyInit__decimal@@Base+0x20a04>
   275d8:	ldr	x2, [x29, #24]
   275dc:	ldur	x3, [x29, #-8]
   275e0:	add	x0, sp, #0x10
   275e4:	add	x1, sp, #0x8
   275e8:	mov	x4, x19
   275ec:	bl	27604 <PyInit__decimal@@Base+0x20af0>
   275f0:	ldr	x0, [sp, #8]
   275f4:	ldr	x19, [sp, #48]
   275f8:	ldp	x29, x30, [sp, #32]
   275fc:	add	sp, sp, #0x40
   27600:	ret
   27604:	stp	x29, x30, [sp, #-48]!
   27608:	stp	x22, x21, [sp, #16]
   2760c:	stp	x20, x19, [sp, #32]
   27610:	mov	x29, sp
   27614:	mov	x20, x3
   27618:	mov	x21, x1
   2761c:	mov	x22, x0
   27620:	mov	x0, x3
   27624:	mov	x1, x2
   27628:	mov	x2, x4
   2762c:	mov	x3, xzr
   27630:	mov	x19, x4
   27634:	bl	27658 <PyInit__decimal@@Base+0x20b44>
   27638:	msub	x8, x0, x19, x20
   2763c:	str	x0, [x22]
   27640:	str	x8, [x21]
   27644:	ldp	x20, x19, [sp, #32]
   27648:	ldp	x22, x21, [sp, #16]
   2764c:	ldp	x29, x30, [sp], #48
   27650:	ret
   27654:	nop
   27658:	mov	x4, x2
   2765c:	mov	x5, x0
   27660:	mov	x6, x1
   27664:	cbnz	x3, 27700 <PyInit__decimal@@Base+0x20bec>
   27668:	cmp	x2, x1
   2766c:	b.ls	27814 <PyInit__decimal@@Base+0x20d00>  // b.plast
   27670:	clz	x0, x2
   27674:	cbz	x0, 27690 <PyInit__decimal@@Base+0x20b7c>
   27678:	neg	w1, w0
   2767c:	lsl	x2, x6, x0
   27680:	lsl	x4, x4, x0
   27684:	lsr	x6, x5, x1
   27688:	orr	x6, x6, x2
   2768c:	lsl	x5, x5, x0
   27690:	lsr	x3, x4, #32
   27694:	and	x7, x4, #0xffffffff
   27698:	udiv	x2, x6, x3
   2769c:	mov	x0, x2
   276a0:	msub	x2, x2, x3, x6
   276a4:	mul	x6, x7, x0
   276a8:	extr	x1, x2, x5, #32
   276ac:	cmp	x6, x1
   276b0:	b.ls	276c4 <PyInit__decimal@@Base+0x20bb0>  // b.plast
   276b4:	adds	x1, x4, x1
   276b8:	ccmp	x6, x1, #0x0, cc  // cc = lo, ul, last
   276bc:	b.hi	27984 <PyInit__decimal@@Base+0x20e70>  // b.pmore
   276c0:	sub	x0, x0, #0x1
   276c4:	sub	x1, x1, x6
   276c8:	udiv	x6, x1, x3
   276cc:	msub	x1, x6, x3, x1
   276d0:	mov	x2, x6
   276d4:	mul	x7, x7, x6
   276d8:	bfi	x5, x1, #32, #32
   276dc:	cmp	x7, x5
   276e0:	b.ls	276f4 <PyInit__decimal@@Base+0x20be0>  // b.plast
   276e4:	adds	x5, x4, x5
   276e8:	ccmp	x7, x5, #0x0, cc  // cc = lo, ul, last
   276ec:	cinc	x2, x6, ls  // ls = plast
   276f0:	sub	x2, x2, #0x2
   276f4:	orr	x0, x2, x0, lsl #32
   276f8:	mov	x1, #0x0                   	// #0
   276fc:	ret
   27700:	cmp	x3, x1
   27704:	b.ls	27714 <PyInit__decimal@@Base+0x20c00>  // b.plast
   27708:	mov	x1, #0x0                   	// #0
   2770c:	mov	x0, #0x0                   	// #0
   27710:	ret
   27714:	clz	x7, x3
   27718:	cbz	x7, 2792c <PyInit__decimal@@Base+0x20e18>
   2771c:	mov	x4, #0x40                  	// #64
   27720:	sub	x4, x4, x7
   27724:	lsl	x3, x3, x7
   27728:	lsr	x5, x2, x4
   2772c:	orr	x3, x5, x3
   27730:	lsr	x6, x1, x4
   27734:	and	x8, x3, #0xffffffff
   27738:	lsr	x10, x3, #32
   2773c:	lsr	x4, x0, x4
   27740:	lsl	x1, x1, x7
   27744:	orr	x1, x4, x1
   27748:	lsl	x2, x2, x7
   2774c:	udiv	x5, x6, x10
   27750:	mov	x4, x5
   27754:	msub	x5, x5, x10, x6
   27758:	mul	x6, x8, x4
   2775c:	extr	x5, x5, x1, #32
   27760:	cmp	x6, x5
   27764:	b.ls	27778 <PyInit__decimal@@Base+0x20c64>  // b.plast
   27768:	adds	x5, x3, x5
   2776c:	ccmp	x6, x5, #0x0, cc  // cc = lo, ul, last
   27770:	b.hi	2796c <PyInit__decimal@@Base+0x20e58>  // b.pmore
   27774:	sub	x4, x4, #0x1
   27778:	sub	x6, x5, x6
   2777c:	udiv	x9, x6, x10
   27780:	msub	x6, x9, x10, x6
   27784:	mov	x5, x9
   27788:	mul	x8, x8, x9
   2778c:	bfi	x1, x6, #32, #32
   27790:	cmp	x8, x1
   27794:	b.ls	277a8 <PyInit__decimal@@Base+0x20c94>  // b.plast
   27798:	adds	x1, x3, x1
   2779c:	ccmp	x8, x1, #0x0, cc  // cc = lo, ul, last
   277a0:	b.hi	27954 <PyInit__decimal@@Base+0x20e40>  // b.pmore
   277a4:	sub	x5, x9, #0x1
   277a8:	orr	x4, x5, x4, lsl #32
   277ac:	and	x9, x2, #0xffffffff
   277b0:	mov	w5, w5
   277b4:	lsr	x2, x2, #32
   277b8:	lsr	x6, x4, #32
   277bc:	sub	x1, x1, x8
   277c0:	mov	x10, #0x100000000           	// #4294967296
   277c4:	mul	x11, x5, x9
   277c8:	mul	x8, x6, x9
   277cc:	madd	x5, x5, x2, x8
   277d0:	mul	x2, x6, x2
   277d4:	add	x3, x5, x11, lsr #32
   277d8:	add	x5, x2, x10
   277dc:	cmp	x8, x3
   277e0:	csel	x2, x5, x2, hi  // hi = pmore
   277e4:	add	x2, x2, x3, lsr #32
   277e8:	cmp	x1, x2
   277ec:	b.cc	27808 <PyInit__decimal@@Base+0x20cf4>  // b.lo, b.ul, b.last
   277f0:	and	x11, x11, #0xffffffff
   277f4:	lsl	x0, x0, x7
   277f8:	add	x3, x11, x3, lsl #32
   277fc:	cmp	x0, x3
   27800:	ccmp	x1, x2, #0x0, cc  // cc = lo, ul, last
   27804:	b.ne	2793c <PyInit__decimal@@Base+0x20e28>  // b.any
   27808:	sub	x0, x4, #0x1
   2780c:	mov	x1, #0x0                   	// #0
   27810:	ret
   27814:	cbnz	x2, 27820 <PyInit__decimal@@Base+0x20d0c>
   27818:	mov	x2, #0x1                   	// #1
   2781c:	udiv	x4, x2, x4
   27820:	clz	x8, x4
   27824:	cbnz	x8, 2789c <PyInit__decimal@@Base+0x20d88>
   27828:	lsr	x6, x4, #32
   2782c:	and	x7, x4, #0xffffffff
   27830:	sub	x2, x1, x4
   27834:	mov	x1, #0x1                   	// #1
   27838:	udiv	x3, x2, x6
   2783c:	mov	x0, x3
   27840:	msub	x3, x3, x6, x2
   27844:	mul	x8, x0, x7
   27848:	extr	x2, x3, x5, #32
   2784c:	cmp	x8, x2
   27850:	b.ls	27864 <PyInit__decimal@@Base+0x20d50>  // b.plast
   27854:	adds	x2, x4, x2
   27858:	ccmp	x8, x2, #0x0, cc  // cc = lo, ul, last
   2785c:	b.hi	27978 <PyInit__decimal@@Base+0x20e64>  // b.pmore
   27860:	sub	x0, x0, #0x1
   27864:	sub	x2, x2, x8
   27868:	udiv	x8, x2, x6
   2786c:	msub	x2, x8, x6, x2
   27870:	mov	x3, x8
   27874:	mul	x7, x8, x7
   27878:	bfi	x5, x2, #32, #32
   2787c:	cmp	x7, x5
   27880:	b.ls	27894 <PyInit__decimal@@Base+0x20d80>  // b.plast
   27884:	adds	x4, x4, x5
   27888:	ccmp	x7, x4, #0x0, cc  // cc = lo, ul, last
   2788c:	cinc	x3, x8, ls  // ls = plast
   27890:	sub	x3, x3, #0x2
   27894:	orr	x0, x3, x0, lsl #32
   27898:	ret
   2789c:	lsl	x4, x4, x8
   278a0:	mov	x3, #0x40                  	// #64
   278a4:	sub	x3, x3, x8
   278a8:	lsr	x6, x4, #32
   278ac:	lsl	x2, x1, x8
   278b0:	and	x7, x4, #0xffffffff
   278b4:	lsr	x1, x1, x3
   278b8:	lsr	x3, x0, x3
   278bc:	orr	x3, x3, x2
   278c0:	udiv	x2, x1, x6
   278c4:	lsl	x5, x0, x8
   278c8:	msub	x1, x2, x6, x1
   278cc:	mov	x0, x2
   278d0:	mul	x2, x7, x2
   278d4:	extr	x1, x1, x3, #32
   278d8:	cmp	x2, x1
   278dc:	b.ls	278f0 <PyInit__decimal@@Base+0x20ddc>  // b.plast
   278e0:	adds	x1, x4, x1
   278e4:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
   278e8:	b.hi	27948 <PyInit__decimal@@Base+0x20e34>  // b.pmore
   278ec:	sub	x0, x0, #0x1
   278f0:	sub	x1, x1, x2
   278f4:	udiv	x2, x1, x6
   278f8:	msub	x1, x2, x6, x1
   278fc:	mov	x8, x2
   27900:	mul	x2, x7, x2
   27904:	bfi	x3, x1, #32, #32
   27908:	cmp	x2, x3
   2790c:	b.ls	27920 <PyInit__decimal@@Base+0x20e0c>  // b.plast
   27910:	adds	x3, x4, x3
   27914:	ccmp	x2, x3, #0x0, cc  // cc = lo, ul, last
   27918:	b.hi	27960 <PyInit__decimal@@Base+0x20e4c>  // b.pmore
   2791c:	sub	x8, x8, #0x1
   27920:	sub	x2, x3, x2
   27924:	orr	x1, x8, x0, lsl #32
   27928:	b	27838 <PyInit__decimal@@Base+0x20d24>
   2792c:	ccmp	x2, x0, #0x0, cs  // cs = hs, nlast
   27930:	mov	x1, #0x0                   	// #0
   27934:	cset	x0, ls  // ls = plast
   27938:	ret
   2793c:	mov	x0, x4
   27940:	mov	x1, #0x0                   	// #0
   27944:	ret
   27948:	sub	x0, x0, #0x2
   2794c:	add	x1, x1, x4
   27950:	b	278f0 <PyInit__decimal@@Base+0x20ddc>
   27954:	sub	x5, x9, #0x2
   27958:	add	x1, x1, x3
   2795c:	b	277a8 <PyInit__decimal@@Base+0x20c94>
   27960:	sub	x8, x8, #0x2
   27964:	add	x3, x3, x4
   27968:	b	27920 <PyInit__decimal@@Base+0x20e0c>
   2796c:	sub	x4, x4, #0x2
   27970:	add	x5, x5, x3
   27974:	b	27778 <PyInit__decimal@@Base+0x20c64>
   27978:	sub	x0, x0, #0x2
   2797c:	add	x2, x2, x4
   27980:	b	27864 <PyInit__decimal@@Base+0x20d50>
   27984:	sub	x0, x0, #0x2
   27988:	add	x1, x1, x4
   2798c:	b	276c4 <PyInit__decimal@@Base+0x20bb0>

Disassembly of section .fini:

0000000000027990 <.fini>:
   27990:	stp	x29, x30, [sp, #-16]!
   27994:	mov	x29, sp
   27998:	ldp	x29, x30, [sp], #16
   2799c:	ret
