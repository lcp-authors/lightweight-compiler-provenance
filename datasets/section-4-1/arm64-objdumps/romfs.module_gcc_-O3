
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//romfs.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_romfs_close>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	ldr	x19, [x0, #80]
  10:	ldr	x0, [x19, #8]
  14:	bl	0 <grub_free>
  18:	mov	x0, x19
  1c:	bl	0 <grub_free>
  20:	mov	w0, #0x0                   	// #0
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

0000000000000030 <grub_romfs_read>:
  30:	stp	x29, x30, [sp, #-32]!
  34:	mov	x5, x0
  38:	mov	x3, x2
  3c:	mov	x29, sp
  40:	stp	x19, x20, [sp, #16]
  44:	mov	x4, x1
  48:	mov	x19, x2
  4c:	ldp	x20, x6, [x0, #80]
  50:	ldr	x2, [x0, #24]
  54:	ldp	x0, x1, [x20, #8]
  58:	ldr	x0, [x0, #8]
  5c:	add	x1, x1, x2
  60:	ldr	x2, [x5, #96]
  64:	stp	x6, x2, [x0, #48]
  68:	and	x2, x1, #0x1ff
  6c:	lsr	x1, x1, #9
  70:	bl	0 <grub_disk_read>
  74:	ldr	x0, [x20, #8]
  78:	adrp	x1, 0 <grub_romfs_close>
  7c:	ldr	x1, [x1]
  80:	ldr	x0, [x0, #8]
  84:	ldr	w1, [x1]
  88:	str	xzr, [x0, #48]
  8c:	cmp	w1, #0x0
  90:	csinv	x0, x19, xzr, eq  // eq = none
  94:	ldp	x19, x20, [sp, #16]
  98:	ldp	x29, x30, [sp], #32
  9c:	ret
	...

00000000000000a8 <grub_romfs_read_symlink>:
  a8:	stp	x29, x30, [sp, #-32]!
  ac:	mov	x29, sp
  b0:	stp	x19, x20, [sp, #16]
  b4:	mov	x19, x0
  b8:	ldr	w0, [x0, #32]
  bc:	rev	w0, w0
  c0:	add	w0, w0, #0x1
  c4:	bl	0 <grub_malloc>
  c8:	mov	x20, x0
  cc:	cbz	x0, 100 <grub_romfs_read_symlink+0x58>
  d0:	mov	x4, x0
  d4:	ldr	w3, [x19, #32]
  d8:	ldp	x0, x1, [x19, #8]
  dc:	rev	w3, w3
  e0:	ldr	x0, [x0, #8]
  e4:	and	x2, x1, #0x1ff
  e8:	lsr	x1, x1, #9
  ec:	bl	0 <grub_disk_read>
  f0:	cbnz	w0, 110 <grub_romfs_read_symlink+0x68>
  f4:	ldr	w0, [x19, #32]
  f8:	rev	w0, w0
  fc:	strb	wzr, [x20, w0, uxtw]
 100:	mov	x0, x20
 104:	ldp	x19, x20, [sp, #16]
 108:	ldp	x29, x30, [sp], #32
 10c:	ret
 110:	mov	x0, x20
 114:	mov	x20, #0x0                   	// #0
 118:	bl	0 <grub_free>
 11c:	b	100 <grub_romfs_read_symlink+0x58>

0000000000000120 <grub_romfs_iterate_dir>:
 120:	stp	x29, x30, [sp, #-144]!
 124:	mov	x29, sp
 128:	stp	x23, x24, [sp, #48]
 12c:	ldr	x23, [x0, #16]
 130:	stp	x19, x20, [sp, #16]
 134:	str	x1, [sp, #96]
 138:	cbz	x23, 530 <grub_romfs_iterate_dir+0x410>
 13c:	stp	x21, x22, [sp, #32]
 140:	mov	x21, x0
 144:	mov	x19, #0x0                   	// #0
 148:	stp	x25, x26, [sp, #64]
 14c:	mov	x25, x2
 150:	mov	x20, #0x0                   	// #0
 154:	stp	x27, x28, [sp, #80]
 158:	mov	x3, #0x10                  	// #16
 15c:	ldr	x0, [x21, #8]
 160:	add	x4, sp, #0x70
 164:	and	x2, x23, #0x1ff
 168:	lsr	x1, x23, #9
 16c:	add	x22, x23, x3
 170:	ldr	x0, [x0, #8]
 174:	bl	0 <grub_disk_read>
 178:	mov	w28, w0
 17c:	cbnz	w0, 3c0 <grub_romfs_iterate_dir+0x2a0>
 180:	mov	x24, #0x0                   	// #0
 184:	nop
 188:	cmp	x20, w28, uxtw
 18c:	add	x26, x22, x24
 190:	mov	w27, w28
 194:	b.hi	1b4 <grub_romfs_iterate_dir+0x94>  // b.pmore
 198:	add	w1, w28, #0x1
 19c:	mov	x0, x19
 1a0:	lsl	w20, w1, #1
 1a4:	ubfiz	x1, x1, #5, #31
 1a8:	bl	0 <grub_realloc>
 1ac:	cbz	x0, 3c0 <grub_romfs_iterate_dir+0x2a0>
 1b0:	mov	x19, x0
 1b4:	ldr	x0, [x21, #8]
 1b8:	lsl	x27, x27, #4
 1bc:	add	x4, x19, x27
 1c0:	and	x2, x26, #0x1ff
 1c4:	lsr	x1, x26, #9
 1c8:	mov	x3, #0x10                  	// #16
 1cc:	ldr	x0, [x0, #8]
 1d0:	bl	0 <grub_disk_read>
 1d4:	cbnz	w0, 3c8 <grub_romfs_iterate_dir+0x2a8>
 1d8:	and	x27, x27, #0xffffffff
 1dc:	add	w28, w28, #0x1
 1e0:	ldrb	w0, [x19, x27]
 1e4:	cbz	w0, 2a0 <grub_romfs_iterate_dir+0x180>
 1e8:	add	w0, w24, #0x1
 1ec:	ldrb	w0, [x19, w0, uxtw]
 1f0:	cbz	w0, 2a0 <grub_romfs_iterate_dir+0x180>
 1f4:	add	w0, w24, #0x2
 1f8:	ldrb	w0, [x19, w0, uxtw]
 1fc:	cbz	w0, 2a0 <grub_romfs_iterate_dir+0x180>
 200:	add	w0, w24, #0x3
 204:	ldrb	w0, [x19, w0, uxtw]
 208:	cbz	w0, 2a0 <grub_romfs_iterate_dir+0x180>
 20c:	add	w0, w24, #0x4
 210:	ldrb	w0, [x19, w0, uxtw]
 214:	cbz	w0, 2a0 <grub_romfs_iterate_dir+0x180>
 218:	add	w0, w24, #0x5
 21c:	ldrb	w0, [x19, w0, uxtw]
 220:	cbz	w0, 2a0 <grub_romfs_iterate_dir+0x180>
 224:	add	w0, w24, #0x6
 228:	ldrb	w0, [x19, w0, uxtw]
 22c:	cbz	w0, 2a0 <grub_romfs_iterate_dir+0x180>
 230:	add	w0, w24, #0x7
 234:	ldrb	w0, [x19, w0, uxtw]
 238:	cbz	w0, 2a0 <grub_romfs_iterate_dir+0x180>
 23c:	add	w0, w24, #0x8
 240:	ldrb	w0, [x19, w0, uxtw]
 244:	cbz	w0, 2a0 <grub_romfs_iterate_dir+0x180>
 248:	add	w0, w24, #0x9
 24c:	ldrb	w0, [x19, w0, uxtw]
 250:	cbz	w0, 2a0 <grub_romfs_iterate_dir+0x180>
 254:	add	w0, w24, #0xa
 258:	ldrb	w0, [x19, w0, uxtw]
 25c:	cbz	w0, 2a0 <grub_romfs_iterate_dir+0x180>
 260:	add	w0, w24, #0xb
 264:	ldrb	w0, [x19, w0, uxtw]
 268:	cbz	w0, 2a0 <grub_romfs_iterate_dir+0x180>
 26c:	add	w0, w24, #0xc
 270:	ldrb	w0, [x19, w0, uxtw]
 274:	cbz	w0, 2a0 <grub_romfs_iterate_dir+0x180>
 278:	add	w0, w24, #0xd
 27c:	ldrb	w0, [x19, w0, uxtw]
 280:	cbz	w0, 2a0 <grub_romfs_iterate_dir+0x180>
 284:	add	w0, w24, #0xe
 288:	ldrb	w0, [x19, w0, uxtw]
 28c:	cbz	w0, 2a0 <grub_romfs_iterate_dir+0x180>
 290:	add	w3, w24, #0xf
 294:	add	x24, x24, #0x10
 298:	ldrb	w0, [x19, w3, uxtw]
 29c:	cbnz	w0, 188 <grub_romfs_iterate_dir+0x68>
 2a0:	ldp	w27, w3, [sp, #112]
 2a4:	cmp	wzr, w28, lsl #2
 2a8:	ldp	w0, w2, [sp, #120]
 2ac:	rev	w27, w27
 2b0:	rev	w3, w3
 2b4:	lsl	w1, w28, #2
 2b8:	rev	w0, w0
 2bc:	rev	w2, w2
 2c0:	add	w27, w27, w3
 2c4:	add	w0, w0, w2
 2c8:	add	w27, w27, w0
 2cc:	b.eq	2f0 <grub_romfs_iterate_dir+0x1d0>  // b.none
 2d0:	mov	x0, #0x0                   	// #0
 2d4:	nop
 2d8:	ldr	w2, [x19, x0, lsl #2]
 2dc:	add	x0, x0, #0x1
 2e0:	cmp	w1, w0
 2e4:	rev	w2, w2
 2e8:	add	w27, w27, w2
 2ec:	b.hi	2d8 <grub_romfs_iterate_dir+0x1b8>  // b.pmore
 2f0:	cbnz	w27, 3b0 <grub_romfs_iterate_dir+0x290>
 2f4:	mov	x0, #0x28                  	// #40
 2f8:	bl	0 <grub_malloc>
 2fc:	mov	x5, x0
 300:	cbz	x0, 3c8 <grub_romfs_iterate_dir+0x2a8>
 304:	ldr	w1, [sp, #112]
 308:	lsl	w28, w28, #4
 30c:	ldr	x0, [x21, #8]
 310:	add	x22, x28, x22
 314:	ldp	x2, x3, [sp, #112]
 318:	rev	w1, w1
 31c:	stp	x23, x0, [x5]
 320:	and	w1, w1, #0x7
 324:	cmp	w1, #0x2
 328:	str	x22, [x5, #16]
 32c:	stp	x2, x3, [x5, #24]
 330:	b.eq	464 <grub_romfs_iterate_dir+0x344>  // b.none
 334:	b.hi	358 <grub_romfs_iterate_dir+0x238>  // b.pmore
 338:	cbz	w1, 3e8 <grub_romfs_iterate_dir+0x2c8>
 33c:	cmp	w1, #0x1
 340:	b.ne	364 <grub_romfs_iterate_dir+0x244>  // b.any
 344:	ldr	w0, [sp, #116]
 348:	mov	w27, #0x2                   	// #2
 34c:	rev	w0, w0
 350:	str	x0, [x5, #16]
 354:	b	364 <grub_romfs_iterate_dir+0x244>
 358:	cmp	w1, #0x3
 35c:	mov	w0, #0x3                   	// #3
 360:	csel	w27, wzr, w0, ne  // ne = any
 364:	ldr	x4, [sp, #96]
 368:	mov	x2, x5
 36c:	mov	w1, w27
 370:	mov	x3, x25
 374:	mov	x0, x19
 378:	blr	x4
 37c:	cbnz	w0, 3c0 <grub_romfs_iterate_dir+0x2a0>
 380:	ldr	w23, [sp, #112]
 384:	rev	w23, w23
 388:	tst	w23, #0xfffffff0
 38c:	and	x23, x23, #0xfffffff0
 390:	b.ne	158 <grub_romfs_iterate_dir+0x38>  // b.any
 394:	ldp	x21, x22, [sp, #32]
 398:	ldp	x25, x26, [sp, #64]
 39c:	ldp	x27, x28, [sp, #80]
 3a0:	mov	x0, x19
 3a4:	bl	0 <grub_free>
 3a8:	mov	w0, #0x0                   	// #0
 3ac:	b	3d8 <grub_romfs_iterate_dir+0x2b8>
 3b0:	adrp	x1, 0 <grub_romfs_close>
 3b4:	mov	w0, #0x9                   	// #9
 3b8:	ldr	x1, [x1]
 3bc:	bl	0 <grub_error>
 3c0:	mov	x0, x19
 3c4:	bl	0 <grub_free>
 3c8:	ldp	x21, x22, [sp, #32]
 3cc:	mov	w0, #0x1                   	// #1
 3d0:	ldp	x25, x26, [sp, #64]
 3d4:	ldp	x27, x28, [sp, #80]
 3d8:	ldp	x19, x20, [sp, #16]
 3dc:	ldp	x23, x24, [sp, #48]
 3e0:	ldp	x29, x30, [sp], #144
 3e4:	ret
 3e8:	ldr	x0, [x21, #8]
 3ec:	mov	x4, x5
 3f0:	ldr	w1, [sp, #116]
 3f4:	mov	x3, #0x10                  	// #16
 3f8:	str	x5, [sp, #104]
 3fc:	ldr	x0, [x0, #8]
 400:	rev	w22, w1
 404:	str	x22, [x4], #24
 408:	rev	w1, w1
 40c:	and	x2, x1, #0x1ff
 410:	lsr	x1, x22, #9
 414:	bl	0 <grub_disk_read>
 418:	cbnz	w0, 3c8 <grub_romfs_iterate_dir+0x2a8>
 41c:	ldr	x5, [sp, #104]
 420:	ldr	w27, [x5, #24]
 424:	rev	w27, w27
 428:	and	w27, w27, #0x7
 42c:	sub	w0, w27, #0x2
 430:	cmp	w0, #0x1
 434:	b.ls	46c <grub_romfs_iterate_dir+0x34c>  // b.plast
 438:	cmp	w27, #0x2
 43c:	b.eq	464 <grub_romfs_iterate_dir+0x344>  // b.none
 440:	cmp	w27, #0x3
 444:	b.eq	364 <grub_romfs_iterate_dir+0x244>  // b.none
 448:	cmp	w27, #0x1
 44c:	b.ne	538 <grub_romfs_iterate_dir+0x418>  // b.any
 450:	ldr	w0, [x5, #28]
 454:	mov	w27, #0x2                   	// #2
 458:	rev	w0, w0
 45c:	str	x0, [x5, #16]
 460:	b	364 <grub_romfs_iterate_dir+0x244>
 464:	mov	w27, #0x1                   	// #1
 468:	b	364 <grub_romfs_iterate_dir+0x244>
 46c:	add	x22, x22, #0x10
 470:	ldr	x0, [x21, #8]
 474:	add	x4, sp, #0x80
 478:	and	x2, x22, #0x1ff
 47c:	lsr	x1, x22, #9
 480:	mov	x3, #0x10                  	// #16
 484:	str	x5, [sp, #104]
 488:	ldr	x0, [x0, #8]
 48c:	bl	0 <grub_disk_read>
 490:	cbnz	w0, 3c8 <grub_romfs_iterate_dir+0x2a8>
 494:	ldrb	w0, [sp, #128]
 498:	add	x22, x22, #0x10
 49c:	ldr	x5, [sp, #104]
 4a0:	cbz	w0, 51c <grub_romfs_iterate_dir+0x3fc>
 4a4:	ldrb	w0, [sp, #129]
 4a8:	cbz	w0, 51c <grub_romfs_iterate_dir+0x3fc>
 4ac:	ldrb	w0, [sp, #130]
 4b0:	cbz	w0, 51c <grub_romfs_iterate_dir+0x3fc>
 4b4:	ldrb	w0, [sp, #131]
 4b8:	cbz	w0, 51c <grub_romfs_iterate_dir+0x3fc>
 4bc:	ldrb	w0, [sp, #132]
 4c0:	cbz	w0, 51c <grub_romfs_iterate_dir+0x3fc>
 4c4:	ldrb	w0, [sp, #133]
 4c8:	cbz	w0, 51c <grub_romfs_iterate_dir+0x3fc>
 4cc:	ldrb	w0, [sp, #134]
 4d0:	cbz	w0, 51c <grub_romfs_iterate_dir+0x3fc>
 4d4:	ldrb	w0, [sp, #135]
 4d8:	cbz	w0, 51c <grub_romfs_iterate_dir+0x3fc>
 4dc:	ldrb	w0, [sp, #136]
 4e0:	cbz	w0, 51c <grub_romfs_iterate_dir+0x3fc>
 4e4:	ldrb	w0, [sp, #137]
 4e8:	cbz	w0, 51c <grub_romfs_iterate_dir+0x3fc>
 4ec:	ldrb	w0, [sp, #138]
 4f0:	cbz	w0, 51c <grub_romfs_iterate_dir+0x3fc>
 4f4:	ldrb	w0, [sp, #139]
 4f8:	cbz	w0, 51c <grub_romfs_iterate_dir+0x3fc>
 4fc:	ldrb	w0, [sp, #140]
 500:	cbz	w0, 51c <grub_romfs_iterate_dir+0x3fc>
 504:	ldrb	w0, [sp, #141]
 508:	cbz	w0, 51c <grub_romfs_iterate_dir+0x3fc>
 50c:	ldrb	w0, [sp, #142]
 510:	cbz	w0, 51c <grub_romfs_iterate_dir+0x3fc>
 514:	ldrb	w0, [sp, #143]
 518:	cbnz	w0, 470 <grub_romfs_iterate_dir+0x350>
 51c:	ldr	w27, [x5, #24]
 520:	str	x22, [x5, #16]
 524:	rev	w27, w27
 528:	and	w27, w27, #0x7
 52c:	b	438 <grub_romfs_iterate_dir+0x318>
 530:	mov	x19, #0x0                   	// #0
 534:	b	3a0 <grub_romfs_iterate_dir+0x280>
 538:	mov	w27, #0x0                   	// #0
 53c:	b	364 <grub_romfs_iterate_dir+0x244>
	...

0000000000000548 <grub_romfs_mount.isra.0>:
 548:	sub	sp, sp, #0x240
 54c:	stp	x29, x30, [sp]
 550:	mov	x29, sp
 554:	str	x23, [sp, #48]
 558:	ldr	x23, [x0]
 55c:	cbz	x23, 7ac <grub_romfs_mount.isra.0+0x264>
 560:	stp	x19, x20, [sp, #16]
 564:	add	x20, sp, #0x40
 568:	mov	x4, x20
 56c:	mov	x3, #0x200                 	// #512
 570:	mov	x2, #0x0                   	// #0
 574:	mov	x1, #0x0                   	// #0
 578:	stp	x21, x22, [sp, #32]
 57c:	mov	x21, x0
 580:	mov	x0, x23
 584:	bl	0 <grub_disk_read>
 588:	mov	w19, w0
 58c:	cmp	w0, #0xb
 590:	b.eq	678 <grub_romfs_mount.isra.0+0x130>  // b.none
 594:	cbnz	w0, 7c0 <grub_romfs_mount.isra.0+0x278>
 598:	ldr	w0, [sp, #72]
 59c:	rev	w0, w0
 5a0:	cmp	w0, #0x1ff
 5a4:	b.ls	72c <grub_romfs_mount.isra.0+0x1e4>  // b.plast
 5a8:	adrp	x1, 0 <grub_romfs_close>
 5ac:	mov	x0, x20
 5b0:	mov	x2, #0x8                   	// #8
 5b4:	ldr	x1, [x1]
 5b8:	bl	0 <grub_memcmp>
 5bc:	cbnz	w0, 75c <grub_romfs_mount.isra.0+0x214>
 5c0:	ldr	w1, [sp, #72]
 5c4:	mov	w3, #0x200                 	// #512
 5c8:	rev	w2, w1
 5cc:	cmp	w2, w3
 5d0:	csel	w3, w2, w3, ls  // ls = plast
 5d4:	and	x3, x3, #0xfffffffffffffffc
 5d8:	add	x3, x20, x3
 5dc:	cmp	x3, x20
 5e0:	b.ls	600 <grub_romfs_mount.isra.0+0xb8>  // b.plast
 5e4:	mov	x0, x20
 5e8:	ldr	w1, [x0], #4
 5ec:	rev	w1, w1
 5f0:	cmp	x3, x0
 5f4:	add	w19, w19, w1
 5f8:	b.hi	5e8 <grub_romfs_mount.isra.0+0xa0>  // b.pmore
 5fc:	cbnz	w19, 78c <grub_romfs_mount.isra.0+0x244>
 600:	mov	w1, w2
 604:	add	x19, x20, #0x10
 608:	b	624 <grub_romfs_mount.isra.0+0xdc>
 60c:	ldrb	w0, [x19]
 610:	cbz	w0, 6a8 <grub_romfs_mount.isra.0+0x160>
 614:	add	x19, x19, #0x1
 618:	add	x0, sp, #0x240
 61c:	cmp	x19, x0
 620:	b.eq	7d0 <grub_romfs_mount.isra.0+0x288>  // b.none
 624:	sub	x0, x19, x20
 628:	cmp	x0, x1
 62c:	b.lt	60c <grub_romfs_mount.isra.0+0xc4>  // b.tstop
 630:	mov	x22, #0x0                   	// #0
 634:	mov	x0, #0x10                  	// #16
 638:	bl	0 <grub_malloc>
 63c:	mov	x23, x0
 640:	cbz	x0, 7f8 <grub_romfs_mount.isra.0+0x2b0>
 644:	sub	x1, x19, x20
 648:	add	x1, x1, #0x10
 64c:	and	x1, x1, #0xfffffffffffffff0
 650:	ldr	x0, [x21]
 654:	add	x1, x1, x22
 658:	ldp	x19, x20, [sp, #16]
 65c:	ldp	x21, x22, [sp, #32]
 660:	stp	x1, x0, [x23]
 664:	mov	x0, x23
 668:	ldp	x29, x30, [sp]
 66c:	ldr	x23, [sp, #48]
 670:	add	sp, sp, #0x240
 674:	ret
 678:	adrp	x0, 0 <grub_romfs_close>
 67c:	mov	w1, #0x9                   	// #9
 680:	mov	x23, #0x0                   	// #0
 684:	ldr	x0, [x0]
 688:	ldp	x19, x20, [sp, #16]
 68c:	ldp	x21, x22, [sp, #32]
 690:	str	w1, [x0]
 694:	mov	x0, x23
 698:	ldp	x29, x30, [sp]
 69c:	ldr	x23, [sp, #48]
 6a0:	add	sp, sp, #0x240
 6a4:	ret
 6a8:	add	x0, sp, #0x240
 6ac:	mov	x23, #0x0                   	// #0
 6b0:	cmp	x19, x0
 6b4:	b.ne	630 <grub_romfs_mount.isra.0+0xe8>  // b.any
 6b8:	ldr	x0, [x21]
 6bc:	add	x23, x23, #0x1
 6c0:	mov	x1, x23
 6c4:	mov	x4, x20
 6c8:	mov	x3, #0x200                 	// #512
 6cc:	mov	x2, #0x0                   	// #0
 6d0:	bl	0 <grub_disk_read>
 6d4:	cmp	w0, #0xb
 6d8:	b.eq	678 <grub_romfs_mount.isra.0+0x130>  // b.none
 6dc:	cbnz	w0, 7c0 <grub_romfs_mount.isra.0+0x278>
 6e0:	ldr	w3, [sp, #72]
 6e4:	lsl	x22, x23, #9
 6e8:	mov	x19, x20
 6ec:	rev	w3, w3
 6f0:	b	70c <grub_romfs_mount.isra.0+0x1c4>
 6f4:	ldrb	w2, [x19]
 6f8:	cbz	w2, 71c <grub_romfs_mount.isra.0+0x1d4>
 6fc:	add	x19, x19, #0x1
 700:	add	x0, sp, #0x240
 704:	cmp	x19, x0
 708:	b.eq	6b8 <grub_romfs_mount.isra.0+0x170>  // b.none
 70c:	sub	x2, x19, x20
 710:	add	x2, x2, x22
 714:	cmp	x2, x3
 718:	b.cc	6f4 <grub_romfs_mount.isra.0+0x1ac>  // b.lo, b.ul, b.last
 71c:	add	x0, sp, #0x240
 720:	cmp	x19, x0
 724:	b.eq	6b8 <grub_romfs_mount.isra.0+0x170>  // b.none
 728:	b	634 <grub_romfs_mount.isra.0+0xec>
 72c:	adrp	x1, 0 <grub_romfs_close>
 730:	mov	x23, #0x0                   	// #0
 734:	mov	w0, #0x9                   	// #9
 738:	ldr	x1, [x1]
 73c:	bl	0 <grub_error>
 740:	mov	x0, x23
 744:	ldp	x29, x30, [sp]
 748:	ldp	x19, x20, [sp, #16]
 74c:	ldp	x21, x22, [sp, #32]
 750:	ldr	x23, [sp, #48]
 754:	add	sp, sp, #0x240
 758:	ret
 75c:	adrp	x1, 0 <grub_romfs_close>
 760:	mov	x23, #0x0                   	// #0
 764:	mov	w0, #0x9                   	// #9
 768:	ldr	x1, [x1]
 76c:	bl	0 <grub_error>
 770:	mov	x0, x23
 774:	ldp	x29, x30, [sp]
 778:	ldp	x19, x20, [sp, #16]
 77c:	ldp	x21, x22, [sp, #32]
 780:	ldr	x23, [sp, #48]
 784:	add	sp, sp, #0x240
 788:	ret
 78c:	adrp	x1, 0 <grub_romfs_close>
 790:	mov	w0, #0x9                   	// #9
 794:	ldr	x1, [x1]
 798:	bl	0 <grub_error>
 79c:	cbnz	w0, 7d8 <grub_romfs_mount.isra.0+0x290>
 7a0:	ldr	w1, [sp, #72]
 7a4:	rev	w2, w1
 7a8:	b	600 <grub_romfs_mount.isra.0+0xb8>
 7ac:	adrp	x1, 0 <grub_romfs_close>
 7b0:	mov	w0, #0x9                   	// #9
 7b4:	ldr	x1, [x1]
 7b8:	bl	0 <grub_error>
 7bc:	b	694 <grub_romfs_mount.isra.0+0x14c>
 7c0:	mov	x23, #0x0                   	// #0
 7c4:	ldp	x19, x20, [sp, #16]
 7c8:	ldp	x21, x22, [sp, #32]
 7cc:	b	694 <grub_romfs_mount.isra.0+0x14c>
 7d0:	mov	x23, #0x0                   	// #0
 7d4:	b	6b8 <grub_romfs_mount.isra.0+0x170>
 7d8:	adrp	x1, 0 <grub_romfs_close>
 7dc:	mov	w0, #0x9                   	// #9
 7e0:	mov	x23, #0x0                   	// #0
 7e4:	ldr	x1, [x1]
 7e8:	bl	0 <grub_error>
 7ec:	ldp	x19, x20, [sp, #16]
 7f0:	ldp	x21, x22, [sp, #32]
 7f4:	b	694 <grub_romfs_mount.isra.0+0x14c>
 7f8:	ldp	x19, x20, [sp, #16]
 7fc:	ldp	x21, x22, [sp, #32]
 800:	b	694 <grub_romfs_mount.isra.0+0x14c>
 804:	nop
	...

0000000000000840 <grub_romfs_label>:
 840:	stp	x29, x30, [sp, #-48]!
 844:	mov	x29, sp
 848:	stp	x19, x20, [sp, #16]
 84c:	mov	x20, x1
 850:	str	x21, [sp, #32]
 854:	mov	x21, x0
 858:	str	xzr, [x1]
 85c:	bl	548 <grub_romfs_mount.isra.0>
 860:	cbz	x0, 8d4 <grub_romfs_label+0x94>
 864:	mov	x19, x0
 868:	ldr	x0, [x0]
 86c:	sub	x0, x0, #0xf
 870:	bl	0 <grub_malloc>
 874:	str	x0, [x20]
 878:	mov	x4, x0
 87c:	cbz	x0, 8cc <grub_romfs_label+0x8c>
 880:	ldr	x0, [x21]
 884:	mov	x2, #0x10                  	// #16
 888:	ldr	x3, [x19]
 88c:	mov	x1, #0x0                   	// #0
 890:	sub	x3, x3, #0x10
 894:	bl	0 <grub_disk_read>
 898:	mov	w21, w0
 89c:	cbnz	w0, 8f4 <grub_romfs_label+0xb4>
 8a0:	ldr	x2, [x19]
 8a4:	mov	x0, x19
 8a8:	ldr	x1, [x20]
 8ac:	add	x1, x1, x2
 8b0:	sturb	wzr, [x1, #-16]
 8b4:	bl	0 <grub_free>
 8b8:	mov	w0, w21
 8bc:	ldp	x19, x20, [sp, #16]
 8c0:	ldr	x21, [sp, #32]
 8c4:	ldp	x29, x30, [sp], #48
 8c8:	ret
 8cc:	mov	x0, x19
 8d0:	bl	0 <grub_free>
 8d4:	adrp	x0, 0 <grub_romfs_close>
 8d8:	ldp	x19, x20, [sp, #16]
 8dc:	ldr	x0, [x0]
 8e0:	ldr	w21, [x0]
 8e4:	mov	w0, w21
 8e8:	ldr	x21, [sp, #32]
 8ec:	ldp	x29, x30, [sp], #48
 8f0:	ret
 8f4:	mov	x0, x19
 8f8:	bl	0 <grub_free>
 8fc:	ldr	x0, [x20]
 900:	bl	0 <grub_free>
 904:	str	xzr, [x20]
 908:	mov	w0, w21
 90c:	ldp	x19, x20, [sp, #16]
 910:	ldr	x21, [sp, #32]
 914:	ldp	x29, x30, [sp], #48
 918:	ret
 91c:	nop
	...

0000000000000928 <grub_romfs_open>:
 928:	stp	x29, x30, [sp, #-96]!
 92c:	mov	x29, sp
 930:	stp	x19, x20, [sp, #16]
 934:	mov	x20, x0
 938:	ldr	x0, [x0, #8]
 93c:	str	x21, [sp, #32]
 940:	mov	x21, x1
 944:	str	xzr, [sp, #48]
 948:	bl	548 <grub_romfs_mount.isra.0>
 94c:	mov	x19, x0
 950:	cbz	x0, 9b8 <grub_romfs_open+0x90>
 954:	adrp	x2, 0 <grub_romfs_close>
 958:	adrp	x1, 0 <grub_romfs_close>
 95c:	ldr	x6, [x19]
 960:	mov	x0, x21
 964:	ldr	x4, [x2]
 968:	mov	w5, #0x1                   	// #1
 96c:	ldr	x3, [x1]
 970:	add	x2, sp, #0x30
 974:	add	x1, sp, #0x38
 978:	stp	x6, x19, [sp, #56]
 97c:	str	x6, [sp, #72]
 980:	bl	0 <grub_fshelp_find_file>
 984:	adrp	x0, 0 <grub_romfs_close>
 988:	ldr	x21, [x0]
 98c:	ldr	w0, [x21]
 990:	cbnz	w0, 9c0 <grub_romfs_open+0x98>
 994:	ldr	x2, [sp, #48]
 998:	ldr	x21, [sp, #32]
 99c:	ldr	w1, [x2, #32]
 9a0:	str	x2, [x20, #80]
 9a4:	rev	w1, w1
 9a8:	str	x1, [x20, #64]
 9ac:	ldp	x19, x20, [sp, #16]
 9b0:	ldp	x29, x30, [sp], #96
 9b4:	ret
 9b8:	adrp	x0, 0 <grub_romfs_close>
 9bc:	ldr	x21, [x0]
 9c0:	mov	x0, x19
 9c4:	bl	0 <grub_free>
 9c8:	ldr	w0, [x21]
 9cc:	ldp	x19, x20, [sp, #16]
 9d0:	ldr	x21, [sp, #32]
 9d4:	ldp	x29, x30, [sp], #96
 9d8:	ret
 9dc:	nop
	...

00000000000009f8 <grub_romfs_dir>:
 9f8:	stp	x29, x30, [sp, #-208]!
 9fc:	mov	x29, sp
 a00:	stp	x19, x20, [sp, #16]
 a04:	mov	x19, x1
 a08:	stp	x23, x24, [sp, #48]
 a0c:	stp	x2, x3, [sp, #112]
 a10:	str	xzr, [sp, #128]
 a14:	bl	548 <grub_romfs_mount.isra.0>
 a18:	mov	x20, x0
 a1c:	cbz	x0, cfc <grub_romfs_dir+0x304>
 a20:	adrp	x2, 0 <grub_romfs_close>
 a24:	adrp	x1, 0 <grub_romfs_close>
 a28:	ldr	x6, [x20]
 a2c:	mov	x0, x19
 a30:	ldr	x4, [x2]
 a34:	mov	w5, #0x2                   	// #2
 a38:	ldr	x3, [x1]
 a3c:	add	x2, sp, #0x80
 a40:	add	x1, sp, #0xa8
 a44:	stp	x6, x20, [sp, #168]
 a48:	str	x6, [sp, #184]
 a4c:	bl	0 <grub_fshelp_find_file>
 a50:	adrp	x0, 0 <grub_romfs_close>
 a54:	ldr	x24, [x0]
 a58:	ldr	w0, [x24]
 a5c:	cbz	w0, a7c <grub_romfs_dir+0x84>
 a60:	mov	x0, x20
 a64:	bl	0 <grub_free>
 a68:	ldr	w0, [x24]
 a6c:	ldp	x19, x20, [sp, #16]
 a70:	ldp	x23, x24, [sp, #48]
 a74:	ldp	x29, x30, [sp], #208
 a78:	ret
 a7c:	stp	x25, x26, [sp, #64]
 a80:	ldr	x25, [sp, #128]
 a84:	stp	x21, x22, [sp, #32]
 a88:	ldr	x21, [x25, #16]
 a8c:	cbz	x21, ecc <grub_romfs_dir+0x4d4>
 a90:	mov	x26, #0x0                   	// #0
 a94:	mov	x19, #0x0                   	// #0
 a98:	stp	x27, x28, [sp, #80]
 a9c:	mov	x3, #0x10                  	// #16
 aa0:	ldr	x0, [x25, #8]
 aa4:	add	x5, x21, x3
 aa8:	add	x4, sp, #0x88
 aac:	and	x2, x21, #0x1ff
 ab0:	lsr	x1, x21, #9
 ab4:	str	x5, [sp, #104]
 ab8:	ldr	x0, [x0, #8]
 abc:	bl	0 <grub_disk_read>
 ac0:	mov	w28, w0
 ac4:	cbnz	w0, d58 <grub_romfs_dir+0x360>
 ac8:	mov	x22, #0x0                   	// #0
 acc:	nop
 ad0:	ldr	x0, [sp, #104]
 ad4:	cmp	x26, w28, uxtw
 ad8:	mov	w23, w28
 adc:	add	x27, x0, x22
 ae0:	b.hi	b00 <grub_romfs_dir+0x108>  // b.pmore
 ae4:	add	w1, w28, #0x1
 ae8:	mov	x0, x19
 aec:	lsl	w26, w1, #1
 af0:	ubfiz	x1, x1, #5, #31
 af4:	bl	0 <grub_realloc>
 af8:	cbz	x0, d58 <grub_romfs_dir+0x360>
 afc:	mov	x19, x0
 b00:	ldr	x0, [x25, #8]
 b04:	lsl	x23, x23, #4
 b08:	add	x4, x19, x23
 b0c:	and	x2, x27, #0x1ff
 b10:	lsr	x1, x27, #9
 b14:	mov	x3, #0x10                  	// #16
 b18:	ldr	x0, [x0, #8]
 b1c:	bl	0 <grub_disk_read>
 b20:	cbnz	w0, d20 <grub_romfs_dir+0x328>
 b24:	and	x5, x23, #0xffffffff
 b28:	add	w28, w28, #0x1
 b2c:	ldrb	w0, [x19, x5]
 b30:	cbz	w0, bf0 <grub_romfs_dir+0x1f8>
 b34:	add	w0, w22, #0x1
 b38:	ldrb	w0, [x19, w0, uxtw]
 b3c:	cbz	w0, bf0 <grub_romfs_dir+0x1f8>
 b40:	add	w0, w22, #0x2
 b44:	ldrb	w0, [x19, w0, uxtw]
 b48:	cbz	w0, bf0 <grub_romfs_dir+0x1f8>
 b4c:	add	w0, w22, #0x3
 b50:	ldrb	w0, [x19, w0, uxtw]
 b54:	cbz	w0, bf0 <grub_romfs_dir+0x1f8>
 b58:	add	w0, w22, #0x4
 b5c:	ldrb	w0, [x19, w0, uxtw]
 b60:	cbz	w0, bf0 <grub_romfs_dir+0x1f8>
 b64:	add	w0, w22, #0x5
 b68:	ldrb	w0, [x19, w0, uxtw]
 b6c:	cbz	w0, bf0 <grub_romfs_dir+0x1f8>
 b70:	add	w0, w22, #0x6
 b74:	ldrb	w0, [x19, w0, uxtw]
 b78:	cbz	w0, bf0 <grub_romfs_dir+0x1f8>
 b7c:	add	w0, w22, #0x7
 b80:	ldrb	w0, [x19, w0, uxtw]
 b84:	cbz	w0, bf0 <grub_romfs_dir+0x1f8>
 b88:	add	w0, w22, #0x8
 b8c:	ldrb	w0, [x19, w0, uxtw]
 b90:	cbz	w0, bf0 <grub_romfs_dir+0x1f8>
 b94:	add	w0, w22, #0x9
 b98:	ldrb	w0, [x19, w0, uxtw]
 b9c:	cbz	w0, bf0 <grub_romfs_dir+0x1f8>
 ba0:	add	w0, w22, #0xa
 ba4:	ldrb	w0, [x19, w0, uxtw]
 ba8:	cbz	w0, bf0 <grub_romfs_dir+0x1f8>
 bac:	add	w0, w22, #0xb
 bb0:	ldrb	w0, [x19, w0, uxtw]
 bb4:	cbz	w0, bf0 <grub_romfs_dir+0x1f8>
 bb8:	add	w0, w22, #0xc
 bbc:	ldrb	w0, [x19, w0, uxtw]
 bc0:	cbz	w0, bf0 <grub_romfs_dir+0x1f8>
 bc4:	add	w0, w22, #0xd
 bc8:	ldrb	w0, [x19, w0, uxtw]
 bcc:	cbz	w0, bf0 <grub_romfs_dir+0x1f8>
 bd0:	add	w0, w22, #0xe
 bd4:	ldrb	w0, [x19, w0, uxtw]
 bd8:	cbz	w0, bf0 <grub_romfs_dir+0x1f8>
 bdc:	add	w1, w22, #0xf
 be0:	add	x22, x22, #0x10
 be4:	ldrb	w0, [x19, w1, uxtw]
 be8:	cbnz	w0, ad0 <grub_romfs_dir+0xd8>
 bec:	nop
 bf0:	ldp	w2, w4, [sp, #136]
 bf4:	cmp	wzr, w28, lsl #2
 bf8:	ldp	w0, w1, [sp, #144]
 bfc:	rev	w2, w2
 c00:	rev	w4, w4
 c04:	lsl	w3, w28, #2
 c08:	rev	w0, w0
 c0c:	rev	w1, w1
 c10:	add	w2, w2, w4
 c14:	add	w0, w0, w1
 c18:	add	w2, w2, w0
 c1c:	b.eq	c40 <grub_romfs_dir+0x248>  // b.none
 c20:	mov	x0, #0x0                   	// #0
 c24:	nop
 c28:	ldr	w1, [x19, x0, lsl #2]
 c2c:	add	x0, x0, #0x1
 c30:	cmp	w3, w0
 c34:	rev	w1, w1
 c38:	add	w2, w2, w1
 c3c:	b.hi	c28 <grub_romfs_dir+0x230>  // b.pmore
 c40:	cbnz	w2, d48 <grub_romfs_dir+0x350>
 c44:	mov	x0, #0x28                  	// #40
 c48:	bl	0 <grub_malloc>
 c4c:	mov	x5, x0
 c50:	cbz	x0, d20 <grub_romfs_dir+0x328>
 c54:	ldr	x1, [sp, #104]
 c58:	lsl	w28, w28, #4
 c5c:	ldr	w0, [sp, #136]
 c60:	add	x27, x28, x1
 c64:	ldr	x1, [x25, #8]
 c68:	str	x27, [x5, #16]
 c6c:	ldp	x2, x3, [sp, #136]
 c70:	stp	x21, x1, [x5]
 c74:	rev	w0, w0
 c78:	stp	x2, x3, [x5, #24]
 c7c:	ands	w0, w0, #0x7
 c80:	b.eq	d9c <grub_romfs_dir+0x3a4>  // b.none
 c84:	cmp	w0, #0x1
 c88:	mov	w21, #0x0                   	// #0
 c8c:	b.eq	d88 <grub_romfs_dir+0x390>  // b.none
 c90:	mov	x2, #0x10                  	// #16
 c94:	mov	w1, #0x0                   	// #0
 c98:	add	x0, sp, #0x98
 c9c:	str	x5, [sp, #104]
 ca0:	bl	0 <grub_memset>
 ca4:	ldrb	w1, [sp, #152]
 ca8:	ldr	x5, [sp, #104]
 cac:	bfxil	w1, w21, #0, #1
 cb0:	strb	w1, [sp, #152]
 cb4:	mov	x0, x5
 cb8:	bl	0 <grub_free>
 cbc:	ldp	x3, x2, [sp, #112]
 cc0:	add	x1, sp, #0x98
 cc4:	mov	x0, x19
 cc8:	blr	x3
 ccc:	cbnz	w0, d58 <grub_romfs_dir+0x360>
 cd0:	ldr	w21, [sp, #136]
 cd4:	rev	w21, w21
 cd8:	tst	w21, #0xfffffff0
 cdc:	and	x21, x21, #0xfffffff0
 ce0:	b.ne	a9c <grub_romfs_dir+0xa4>  // b.any
 ce4:	ldp	x27, x28, [sp, #80]
 ce8:	mov	x0, x19
 cec:	bl	0 <grub_free>
 cf0:	ldp	x21, x22, [sp, #32]
 cf4:	ldp	x25, x26, [sp, #64]
 cf8:	b	a60 <grub_romfs_dir+0x68>
 cfc:	adrp	x0, 0 <grub_romfs_close>
 d00:	ldr	x24, [x0]
 d04:	mov	x0, x20
 d08:	bl	0 <grub_free>
 d0c:	ldp	x19, x20, [sp, #16]
 d10:	ldr	w0, [x24]
 d14:	ldp	x23, x24, [sp, #48]
 d18:	ldp	x29, x30, [sp], #208
 d1c:	ret
 d20:	mov	x0, x20
 d24:	ldp	x21, x22, [sp, #32]
 d28:	ldp	x25, x26, [sp, #64]
 d2c:	ldp	x27, x28, [sp, #80]
 d30:	bl	0 <grub_free>
 d34:	ldr	w0, [x24]
 d38:	ldp	x19, x20, [sp, #16]
 d3c:	ldp	x23, x24, [sp, #48]
 d40:	ldp	x29, x30, [sp], #208
 d44:	ret
 d48:	adrp	x1, 0 <grub_romfs_close>
 d4c:	mov	w0, #0x9                   	// #9
 d50:	ldr	x1, [x1]
 d54:	bl	0 <grub_error>
 d58:	mov	x0, x19
 d5c:	bl	0 <grub_free>
 d60:	mov	x0, x20
 d64:	ldp	x21, x22, [sp, #32]
 d68:	ldp	x25, x26, [sp, #64]
 d6c:	ldp	x27, x28, [sp, #80]
 d70:	bl	0 <grub_free>
 d74:	ldr	w0, [x24]
 d78:	ldp	x19, x20, [sp, #16]
 d7c:	ldp	x23, x24, [sp, #48]
 d80:	ldp	x29, x30, [sp], #208
 d84:	ret
 d88:	ldr	w1, [sp, #140]
 d8c:	mov	w21, w0
 d90:	rev	w0, w1
 d94:	str	x0, [x5, #16]
 d98:	b	c90 <grub_romfs_dir+0x298>
 d9c:	ldr	x0, [x25, #8]
 da0:	mov	x4, x5
 da4:	ldr	w2, [sp, #140]
 da8:	mov	x3, #0x10                  	// #16
 dac:	str	x5, [sp, #104]
 db0:	ldr	x0, [x0, #8]
 db4:	rev	w27, w2
 db8:	str	x27, [x4], #24
 dbc:	rev	w2, w2
 dc0:	and	x2, x2, #0x1ff
 dc4:	lsr	x1, x27, #9
 dc8:	bl	0 <grub_disk_read>
 dcc:	cbnz	w0, d20 <grub_romfs_dir+0x328>
 dd0:	ldr	x5, [sp, #104]
 dd4:	ldr	w21, [x5, #24]
 dd8:	rev	w21, w21
 ddc:	and	w21, w21, #0x7
 de0:	sub	w0, w21, #0x2
 de4:	cmp	w0, #0x1
 de8:	b.ls	e04 <grub_romfs_dir+0x40c>  // b.plast
 dec:	cmp	w21, #0x1
 df0:	b.ne	ed4 <grub_romfs_dir+0x4dc>  // b.any
 df4:	ldr	w0, [x5, #28]
 df8:	rev	w0, w0
 dfc:	str	x0, [x5, #16]
 e00:	b	c90 <grub_romfs_dir+0x298>
 e04:	add	x27, x27, #0x10
 e08:	ldr	x0, [x25, #8]
 e0c:	add	x4, sp, #0x98
 e10:	and	x2, x27, #0x1ff
 e14:	lsr	x1, x27, #9
 e18:	mov	x3, #0x10                  	// #16
 e1c:	str	x5, [sp, #104]
 e20:	ldr	x0, [x0, #8]
 e24:	bl	0 <grub_disk_read>
 e28:	cbnz	w0, d20 <grub_romfs_dir+0x328>
 e2c:	ldrb	w0, [sp, #152]
 e30:	add	x27, x27, #0x10
 e34:	ldr	x5, [sp, #104]
 e38:	cbz	w0, eb8 <grub_romfs_dir+0x4c0>
 e3c:	ldrb	w0, [sp, #153]
 e40:	cbz	w0, eb8 <grub_romfs_dir+0x4c0>
 e44:	ldrb	w0, [sp, #154]
 e48:	cbz	w0, eb8 <grub_romfs_dir+0x4c0>
 e4c:	ldrb	w0, [sp, #155]
 e50:	cbz	w0, eb8 <grub_romfs_dir+0x4c0>
 e54:	ldrb	w0, [sp, #156]
 e58:	cbz	w0, eb8 <grub_romfs_dir+0x4c0>
 e5c:	ldrb	w0, [sp, #157]
 e60:	cbz	w0, eb8 <grub_romfs_dir+0x4c0>
 e64:	ldrb	w0, [sp, #158]
 e68:	cbz	w0, eb8 <grub_romfs_dir+0x4c0>
 e6c:	ldrb	w0, [sp, #159]
 e70:	cbz	w0, eb8 <grub_romfs_dir+0x4c0>
 e74:	ldrb	w0, [sp, #160]
 e78:	cbz	w0, eb8 <grub_romfs_dir+0x4c0>
 e7c:	ldrb	w0, [sp, #161]
 e80:	cbz	w0, eb8 <grub_romfs_dir+0x4c0>
 e84:	ldrb	w0, [sp, #162]
 e88:	cbz	w0, eb8 <grub_romfs_dir+0x4c0>
 e8c:	ldrb	w0, [sp, #163]
 e90:	cbz	w0, eb8 <grub_romfs_dir+0x4c0>
 e94:	ldrb	w0, [sp, #164]
 e98:	cbz	w0, eb8 <grub_romfs_dir+0x4c0>
 e9c:	ldrb	w0, [sp, #165]
 ea0:	cbz	w0, eb8 <grub_romfs_dir+0x4c0>
 ea4:	ldrb	w0, [sp, #166]
 ea8:	cbz	w0, eb8 <grub_romfs_dir+0x4c0>
 eac:	ldrb	w0, [sp, #167]
 eb0:	cbnz	w0, e08 <grub_romfs_dir+0x410>
 eb4:	nop
 eb8:	ldr	w21, [x5, #24]
 ebc:	str	x27, [x5, #16]
 ec0:	rev	w21, w21
 ec4:	and	w21, w21, #0x7
 ec8:	b	dec <grub_romfs_dir+0x3f4>
 ecc:	mov	x19, #0x0                   	// #0
 ed0:	b	ce8 <grub_romfs_dir+0x2f0>
 ed4:	mov	w21, #0x0                   	// #0
 ed8:	b	c90 <grub_romfs_dir+0x298>
 edc:	nop
	...

0000000000000f00 <grub_mod_init>:
 f00:	adrp	x1, 0 <grub_romfs_close>
 f04:	adrp	x0, 0 <grub_romfs_close>
 f08:	ldr	x1, [x1]
 f0c:	ldr	x0, [x0]
 f10:	b	0 <grub_list_push>
 f14:	nop
	...

0000000000000f28 <grub_mod_fini>:
 f28:	adrp	x0, 0 <grub_romfs_close>
 f2c:	ldr	x0, [x0]
 f30:	b	0 <grub_list_remove>
 f34:	nop
	...
