
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//hfs.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x13c0>:
       0:	add	x2, x1, x2
       4:	and	w6, w3, #0x1
       8:	cmp	x1, x2
       c:	adrp	x7, 0 <grub_mod_init-0x13c0>
      10:	mov	w8, #0x3a                  	// #58
      14:	b.cc	30 <grub_mod_init-0x1390>  // b.lo, b.ul, b.last
      18:	b	7c <grub_mod_init-0x1344>
      1c:	strb	w3, [x0]
      20:	mov	x0, x5
      24:	add	x1, x1, #0x1
      28:	cmp	x1, x2
      2c:	b.eq	7c <grub_mod_init-0x1344>  // b.none
      30:	ldrb	w3, [x1]
      34:	cbz	w3, 7c <grub_mod_init-0x1344>
      38:	cmp	w3, #0x2f
      3c:	add	x5, x0, #0x1
      40:	csel	w4, w6, wzr, eq  // eq = none
      44:	cbnz	w4, 84 <grub_mod_init-0x133c>
      48:	tbz	w3, #7, 1c <grub_mod_init-0x13a4>
      4c:	ldr	x5, [x7]
      50:	ubfiz	x4, x3, #2, #7
      54:	mov	x3, x0
      58:	add	x5, x5, x4
      5c:	nop
      60:	ldrb	w4, [x5], #1
      64:	mov	x0, x3
      68:	strb	w4, [x3], #1
      6c:	cbnz	w4, 60 <grub_mod_init-0x1360>
      70:	add	x1, x1, #0x1
      74:	cmp	x1, x2
      78:	b.ne	30 <grub_mod_init-0x1390>  // b.any
      7c:	strb	wzr, [x0]
      80:	ret
      84:	strb	w8, [x0]
      88:	mov	x0, x5
      8c:	b	24 <grub_mod_init-0x139c>
	...
      98:	stp	x29, x30, [sp, #-32]!
      9c:	mov	x29, sp
      a0:	ldr	w3, [x2, #12]
      a4:	ldr	x8, [x1]
      a8:	ldr	x7, [x2, #16]
      ac:	str	x19, [sp, #16]
      b0:	cbnz	w3, 164 <grub_mod_init-0x125c>
      b4:	ldur	w4, [x7, #1]
      b8:	ldur	w3, [x8, #1]
      bc:	rev	w4, w4
      c0:	rev	w3, w3
      c4:	subs	w3, w3, w4
      c8:	b.ne	128 <grub_mod_init-0x1298>  // b.any
      cc:	ldrb	w10, [x7, #5]
      d0:	ldrb	w11, [x8, #5]
      d4:	cmp	w10, w11
      d8:	csel	w3, w10, w11, cc  // cc = lo, ul, last
      dc:	ands	w3, w3, #0xff
      e0:	b.eq	1d8 <grub_mod_init-0x11e8>  // b.none
      e4:	adrp	x5, 0 <grub_mod_init-0x13c0>
      e8:	sub	w3, w3, #0x1
      ec:	add	x9, x3, #0x7
      f0:	mov	x4, #0x6                   	// #6
      f4:	ldr	x6, [x5]
      f8:	add	x6, x6, #0x200
      fc:	b	108 <grub_mod_init-0x12b8>
     100:	cmp	x9, x4
     104:	b.eq	1d8 <grub_mod_init-0x11e8>  // b.none
     108:	ldrb	w3, [x8, x4]
     10c:	ldrb	w5, [x7, x4]
     110:	add	x4, x4, #0x1
     114:	ldrb	w3, [x6, w3, sxtw]
     118:	ldrb	w5, [x6, w5, sxtw]
     11c:	subs	w3, w3, w5
     120:	b.eq	100 <grub_mod_init-0x12c0>  // b.none
     124:	nop
     128:	cmp	w3, #0x0
     12c:	mov	w19, #0x1                   	// #1
     130:	b.gt	154 <grub_mod_init-0x126c>
     134:	ldr	x5, [x1, #16]
     138:	ldr	w4, [x5]
     13c:	rev	w4, w4
     140:	str	w4, [x2]
     144:	ldrb	w0, [x0, #8]
     148:	cmp	w0, #0xff
     14c:	b.eq	1b0 <grub_mod_init-0x1210>  // b.none
     150:	mov	w19, #0x0                   	// #0
     154:	mov	w0, w19
     158:	ldr	x19, [sp, #16]
     15c:	ldp	x29, x30, [sp], #32
     160:	ret
     164:	ldrb	w3, [x8]
     168:	ldrb	w4, [x7]
     16c:	subs	w3, w3, w4
     170:	b.ne	128 <grub_mod_init-0x1298>  // b.any
     174:	ldur	w4, [x7, #1]
     178:	ldur	w3, [x8, #1]
     17c:	rev	w4, w4
     180:	rev	w3, w3
     184:	subs	w3, w3, w4
     188:	b.ne	128 <grub_mod_init-0x1298>  // b.any
     18c:	ldurh	w4, [x8, #5]
     190:	ldurh	w5, [x7, #5]
     194:	lsr	w3, w4, #8
     198:	lsr	w6, w5, #8
     19c:	orr	w3, w3, w4, lsl #8
     1a0:	orr	w5, w6, w5, lsl #8
     1a4:	and	w3, w3, #0xffff
     1a8:	sub	w3, w3, w5, uxth
     1ac:	b	128 <grub_mod_init-0x1298>
     1b0:	str	w19, [x2, #4]
     1b4:	cbnz	w3, 150 <grub_mod_init-0x1270>
     1b8:	ldp	x0, x4, [x2, #24]
     1bc:	ldr	x3, [x1, #24]
     1c0:	str	w19, [x2, #8]
     1c4:	mov	x1, x5
     1c8:	cmp	x4, x3
     1cc:	csel	x2, x4, x3, ls  // ls = plast
     1d0:	bl	0 <grub_memmove>
     1d4:	b	154 <grub_mod_init-0x126c>
     1d8:	sub	w3, w11, w10
     1dc:	b	128 <grub_mod_init-0x1298>
	...
     1e8:	stp	x29, x30, [sp, #-112]!
     1ec:	mov	x29, sp
     1f0:	stp	x19, x20, [sp, #16]
     1f4:	mov	w19, #0x0                   	// #0
     1f8:	stp	x21, x22, [sp, #32]
     1fc:	mov	w22, w2
     200:	mov	w21, w4
     204:	mov	x2, #0xc                   	// #12
     208:	stp	x23, x24, [sp, #48]
     20c:	mov	x24, x0
     210:	mov	w23, w3
     214:	add	x0, sp, #0x60
     218:	str	x25, [sp, #64]
     21c:	bl	0 <grub_memmove>
     220:	rev	w0, w22
     224:	strb	wzr, [sp, #88]
     228:	stur	w0, [sp, #89]
     22c:	cbz	w21, 244 <grub_mod_init-0x117c>
     230:	adrp	x0, 0 <grub_mod_init-0x13c0>
     234:	ldr	x1, [x0]
     238:	ldr	w0, [x1]
     23c:	cmp	w0, w22
     240:	b.eq	350 <grub_mod_init-0x1070>  // b.none
     244:	mov	w2, #0x0                   	// #0
     248:	adrp	x25, 0 <grub_mod_init-0x13c0>
     24c:	nop
     250:	add	x5, sp, #0x60
     254:	mov	w6, #0x0                   	// #0
     258:	ldrh	w1, [x5, #2]
     25c:	mov	w20, w19
     260:	add	x5, x5, #0x4
     264:	lsr	w7, w1, #8
     268:	orr	w1, w7, w1, lsl #8
     26c:	add	w19, w19, w1, uxth
     270:	cmp	w19, w23
     274:	b.gt	2d4 <grub_mod_init-0x10ec>
     278:	add	w6, w6, #0x1
     27c:	cmp	w6, #0x3
     280:	b.ne	258 <grub_mod_init-0x1168>  // b.any
     284:	ldr	w2, [x24, #196]
     288:	rev16	w6, w19
     28c:	add	x4, sp, #0x60
     290:	add	x1, sp, #0x58
     294:	mov	x0, x24
     298:	mov	x5, #0xc                   	// #12
     29c:	mov	w3, #0x1                   	// #1
     2a0:	sturh	w6, [sp, #93]
     2a4:	bl	5f8 <grub_mod_init-0xdc8>
     2a8:	ldr	x0, [x25]
     2ac:	mov	w2, #0x1                   	// #1
     2b0:	ldr	w0, [x0]
     2b4:	cbz	w0, 250 <grub_mod_init-0x1170>
     2b8:	mov	w0, #0x0                   	// #0
     2bc:	ldp	x19, x20, [sp, #16]
     2c0:	ldp	x21, x22, [sp, #32]
     2c4:	ldp	x23, x24, [sp, #48]
     2c8:	ldr	x25, [sp, #64]
     2cc:	ldp	x29, x30, [sp], #112
     2d0:	ret
     2d4:	sbfiz	x6, x6, #2, #32
     2d8:	add	x0, sp, #0x60
     2dc:	tst	w2, w21
     2e0:	ldrh	w0, [x0, x6]
     2e4:	lsr	w19, w0, #8
     2e8:	orr	w0, w19, w0, lsl #8
     2ec:	and	w19, w0, #0xffff
     2f0:	b.ne	330 <grub_mod_init-0x1090>  // b.any
     2f4:	ldrh	w1, [x24, #28]
     2f8:	add	w23, w23, w19
     2fc:	ldr	w2, [x24, #212]
     300:	sub	w20, w23, w20
     304:	ldp	x21, x22, [sp, #32]
     308:	lsr	w0, w1, #8
     30c:	orr	w0, w0, w1, lsl #8
     310:	asr	w1, w2, #9
     314:	and	w0, w0, #0xffff
     318:	ldp	x23, x24, [sp, #48]
     31c:	madd	w0, w20, w1, w0
     320:	ldp	x19, x20, [sp, #16]
     324:	ldr	x25, [sp, #64]
     328:	ldp	x29, x30, [sp], #112
     32c:	ret
     330:	adrp	x0, 0 <grub_mod_init-0x13c0>
     334:	add	x1, sp, #0x60
     338:	mov	x2, #0xc                   	// #12
     33c:	ldr	x3, [x0]
     340:	add	x0, x3, #0x8
     344:	stp	w22, w20, [x3]
     348:	bl	0 <grub_memmove>
     34c:	b	2f4 <grub_mod_init-0x10cc>
     350:	ldr	w19, [x1, #4]
     354:	cmp	w19, w23
     358:	b.lt	364 <grub_mod_init-0x105c>  // b.tstop
     35c:	mov	w19, #0x0                   	// #0
     360:	b	244 <grub_mod_init-0x117c>
     364:	rev16	w3, w19
     368:	add	x1, x1, #0x8
     36c:	add	x0, sp, #0x60
     370:	mov	x2, #0xc                   	// #12
     374:	sturh	w3, [sp, #93]
     378:	bl	0 <grub_memmove>
     37c:	b	244 <grub_mod_init-0x117c>
	...
     390:	stp	x29, x30, [sp, #-176]!
     394:	mov	x29, sp
     398:	stp	x19, x20, [sp, #16]
     39c:	stp	x21, x22, [sp, #32]
     3a0:	mov	w21, w1
     3a4:	stp	x23, x24, [sp, #48]
     3a8:	mov	x24, x0
     3ac:	mov	x23, x4
     3b0:	stp	x27, x28, [sp, #80]
     3b4:	mov	x27, x5
     3b8:	str	w3, [sp, #136]
     3bc:	cbnz	w1, 588 <grub_mod_init-0xe38>
     3c0:	ldrsw	x19, [x0, #208]
     3c4:	cmp	x19, #0xe
     3c8:	mov	x0, #0xe                   	// #14
     3cc:	csel	x19, x19, x0, cs  // cs = hs, nlast
     3d0:	str	w2, [sp, #112]
     3d4:	mov	x0, x19
     3d8:	sub	x20, x19, #0x1
     3dc:	bl	0 <grub_malloc>
     3e0:	mov	x28, x0
     3e4:	ldr	w2, [sp, #112]
     3e8:	cbz	x0, 590 <grub_mod_init-0xe30>
     3ec:	adrp	x1, 0 <grub_mod_init-0x13c0>
     3f0:	cmp	w21, #0x0
     3f4:	mov	w3, #0x4                   	// #4
     3f8:	mov	w0, #0x3                   	// #3
     3fc:	ldr	x1, [x1]
     400:	csel	w0, w3, w0, eq  // eq = none
     404:	stp	x25, x26, [sp, #64]
     408:	add	x26, x24, #0x86
     40c:	sub	x21, x19, #0x2
     410:	str	x1, [sp, #104]
     414:	lsr	x1, x19, #1
     418:	str	w0, [sp, #116]
     41c:	add	x0, x24, #0x96
     420:	csel	x0, x26, x0, ne  // ne = any
     424:	sub	w22, w1, #0x1
     428:	stp	x0, x1, [sp, #120]
     42c:	ubfx	w0, w19, #1, #16
     430:	str	w0, [sp, #140]
     434:	ldrsw	x3, [x24, #212]
     438:	sxtw	x25, w2
     43c:	ldr	w2, [sp, #116]
     440:	mov	x0, x24
     444:	ldr	x1, [sp, #120]
     448:	mov	w4, #0x0                   	// #0
     44c:	udiv	x3, x3, x19
     450:	udiv	x3, x25, x3
     454:	bl	1e8 <grub_mod_init-0x11d8>
     458:	ldrsw	x1, [x24, #212]
     45c:	ldr	x2, [sp, #104]
     460:	udiv	x1, x1, x19
     464:	ldr	w3, [x2]
     468:	udiv	x2, x25, x1
     46c:	msub	x1, x2, x1, x25
     470:	add	w1, w0, w1
     474:	cbnz	w3, 5bc <grub_mod_init-0xe04>
     478:	ldr	x0, [x24, #168]
     47c:	sxtw	x1, w1
     480:	mov	x4, x28
     484:	mov	x3, x19
     488:	mov	x2, #0x0                   	// #0
     48c:	bl	0 <grub_disk_read>
     490:	str	w0, [sp, #112]
     494:	cbnz	w0, 5bc <grub_mod_init-0xe04>
     498:	ldrh	w0, [x28, #10]
     49c:	lsr	w1, w0, #8
     4a0:	orr	w0, w1, w0, lsl #8
     4a4:	ldr	x1, [sp, #128]
     4a8:	and	w9, w0, #0xffff
     4ac:	cmp	x1, w0, uxth
     4b0:	b.cc	580 <grub_mod_init-0xe40>  // b.lo, b.ul, b.last
     4b4:	mov	w25, w9
     4b8:	cbz	w9, 53c <grub_mod_init-0xe84>
     4bc:	mov	w26, #0x0                   	// #0
     4c0:	sub	w3, w22, w26
     4c4:	mov	x2, x27
     4c8:	add	x1, sp, #0x90
     4cc:	mov	x0, x28
     4d0:	add	w26, w26, #0x1
     4d4:	ldrh	w4, [x28, w3, sxtw #1]
     4d8:	lsr	w3, w4, #8
     4dc:	orr	w4, w3, w4, lsl #8
     4e0:	and	x3, x4, #0xffff
     4e4:	add	x12, x3, #0x1
     4e8:	sub	x10, x20, x3
     4ec:	cmp	x21, w4, uxth
     4f0:	b.cc	534 <grub_mod_init-0xe8c>  // b.lo, b.ul, b.last
     4f4:	ldrb	w8, [x28, x3]
     4f8:	add	x3, x28, x3
     4fc:	add	x3, x3, #0x1
     500:	add	w4, w8, #0x1
     504:	and	x11, x8, #0xff
     508:	and	x4, x4, #0x1
     50c:	add	x8, x12, w8, uxtb
     510:	add	x4, x4, x11
     514:	cmp	x8, x19
     518:	b.hi	534 <grub_mod_init-0xe8c>  // b.pmore
     51c:	add	x4, x3, x4
     520:	sub	x10, x10, x11
     524:	stp	x3, x11, [sp, #144]
     528:	stp	x4, x10, [sp, #160]
     52c:	blr	x23
     530:	cbnz	w0, 558 <grub_mod_init-0xe68>
     534:	cmp	w26, w25
     538:	b.lt	4c0 <grub_mod_init-0xf00>  // b.tstop
     53c:	ldr	w2, [x28]
     540:	ldr	w0, [sp, #136]
     544:	rev	w2, w2
     548:	cmp	w2, #0x0
     54c:	and	w0, w0, #0x1
     550:	csel	w0, w0, wzr, ne  // ne = any
     554:	cbnz	w0, 434 <grub_mod_init-0xf8c>
     558:	mov	x0, x28
     55c:	bl	0 <grub_free>
     560:	ldr	w0, [sp, #112]
     564:	ldp	x19, x20, [sp, #16]
     568:	ldp	x21, x22, [sp, #32]
     56c:	ldp	x23, x24, [sp, #48]
     570:	ldp	x25, x26, [sp, #64]
     574:	ldp	x27, x28, [sp, #80]
     578:	ldp	x29, x30, [sp], #176
     57c:	ret
     580:	ldr	w25, [sp, #140]
     584:	b	4bc <grub_mod_init-0xf04>
     588:	ldrsw	x19, [x0, #200]
     58c:	b	3c4 <grub_mod_init-0xffc>
     590:	adrp	x0, 0 <grub_mod_init-0x13c0>
     594:	ldp	x19, x20, [sp, #16]
     598:	ldr	x0, [x0]
     59c:	ldp	x21, x22, [sp, #32]
     5a0:	ldr	w0, [x0]
     5a4:	str	w0, [sp, #112]
     5a8:	ldp	x23, x24, [sp, #48]
     5ac:	ldr	w0, [sp, #112]
     5b0:	ldp	x27, x28, [sp, #80]
     5b4:	ldp	x29, x30, [sp], #176
     5b8:	ret
     5bc:	mov	x0, x28
     5c0:	bl	0 <grub_free>
     5c4:	ldr	x0, [sp, #104]
     5c8:	ldp	x19, x20, [sp, #16]
     5cc:	ldr	w0, [x0]
     5d0:	str	w0, [sp, #112]
     5d4:	ldp	x21, x22, [sp, #32]
     5d8:	ldr	w0, [sp, #112]
     5dc:	ldp	x23, x24, [sp, #48]
     5e0:	ldp	x25, x26, [sp, #64]
     5e4:	ldp	x27, x28, [sp, #80]
     5e8:	ldp	x29, x30, [sp], #176
     5ec:	ret
	...
     5f8:	stp	x29, x30, [sp, #-96]!
     5fc:	adrp	x6, 0 <grub_mod_init-0x13c0>
     600:	mov	x29, sp
     604:	stp	x19, x20, [sp, #16]
     608:	mov	x20, x0
     60c:	mov	w19, w3
     610:	stp	x21, x22, [sp, #32]
     614:	mov	w21, #0xffffffff            	// #-1
     618:	ldr	x22, [x6]
     61c:	stur	xzr, [sp, #60]
     620:	str	w3, [sp, #68]
     624:	stp	x1, x4, [sp, #72]
     628:	str	x5, [sp, #88]
     62c:	b	644 <grub_mod_init-0xd7c>
     630:	ldr	w2, [sp, #56]
     634:	cmn	w2, #0x1
     638:	b.eq	664 <grub_mod_init-0xd5c>  // b.none
     63c:	ldr	w1, [sp, #60]
     640:	cbnz	w1, 678 <grub_mod_init-0xd48>
     644:	add	x5, sp, #0x38
     648:	mov	x4, x22
     64c:	mov	w1, w19
     650:	mov	x0, x20
     654:	mov	w3, #0x0                   	// #0
     658:	str	w21, [sp, #56]
     65c:	bl	390 <grub_mod_init-0x1030>
     660:	cbz	w0, 630 <grub_mod_init-0xd90>
     664:	mov	w0, #0x0                   	// #0
     668:	ldp	x19, x20, [sp, #16]
     66c:	ldp	x21, x22, [sp, #32]
     670:	ldp	x29, x30, [sp], #96
     674:	ret
     678:	ldr	w0, [sp, #64]
     67c:	ldp	x19, x20, [sp, #16]
     680:	ldp	x21, x22, [sp, #32]
     684:	ldp	x29, x30, [sp], #96
     688:	ret
     68c:	nop
	...
     698:	stp	x29, x30, [sp, #-128]!
     69c:	mov	x29, sp
     6a0:	stp	x23, x24, [sp, #48]
     6a4:	ldr	x24, [x0, #80]
     6a8:	stp	x19, x20, [sp, #16]
     6ac:	ldr	x19, [x0, #24]
     6b0:	stp	x27, x28, [sp, #80]
     6b4:	ldr	w27, [x24, #212]
     6b8:	stp	x21, x22, [sp, #32]
     6bc:	add	x20, x2, w19, uxtw
     6c0:	sub	x21, x20, #0x1
     6c4:	stp	x25, x26, [sp, #64]
     6c8:	mov	x26, x1
     6cc:	sxtw	x1, w27
     6d0:	mov	w25, w19
     6d4:	udiv	w19, w19, w27
     6d8:	str	x2, [sp, #120]
     6dc:	ldp	x2, x0, [x0, #88]
     6e0:	stp	x2, x0, [sp, #96]
     6e4:	udiv	x21, x21, x1
     6e8:	add	x22, x21, #0x1
     6ec:	cmp	x22, x19
     6f0:	b.ls	7b8 <grub_mod_init-0xc08>  // b.plast
     6f4:	adrp	x0, 0 <grub_mod_init-0x13c0>
     6f8:	add	x1, x24, #0xb0
     6fc:	str	x1, [sp, #112]
     700:	ldr	x23, [x0]
     704:	b	718 <grub_mod_init-0xca8>
     708:	sub	w28, w27, w28
     70c:	cmp	x22, x19
     710:	add	x26, x26, w28, sxtw
     714:	b.ls	7b8 <grub_mod_init-0xc08>  // b.plast
     718:	ldr	w2, [x24, #188]
     71c:	mov	w3, w19
     720:	ldr	x1, [sp, #112]
     724:	mov	x0, x24
     728:	mov	w4, #0x1                   	// #1
     72c:	bl	1e8 <grub_mod_init-0x11d8>
     730:	mov	w1, w0
     734:	ldr	w2, [x23]
     738:	cmp	x21, x19
     73c:	sxtw	x3, w27
     740:	cbnz	w2, 7f0 <grub_mod_init-0xbd0>
     744:	ldr	w0, [x24, #212]
     748:	b.eq	7d8 <grub_mod_init-0xbe8>  // b.none
     74c:	udiv	w2, w25, w0
     750:	mov	w28, #0x0                   	// #0
     754:	cmp	x2, x19
     758:	add	x19, x19, #0x1
     75c:	b.ne	76c <grub_mod_init-0xc54>  // b.any
     760:	udiv	w28, w25, w27
     764:	msub	w28, w28, w27, w25
     768:	sub	x3, x3, w28, sxtw
     76c:	mov	w27, w0
     770:	cbz	x1, 708 <grub_mod_init-0xcb8>
     774:	ldr	x0, [x24, #168]
     778:	mov	x4, x26
     77c:	ldr	x5, [sp, #96]
     780:	sxtw	x2, w28
     784:	str	x5, [x0, #48]
     788:	ldr	x5, [sp, #104]
     78c:	str	x5, [x0, #56]
     790:	bl	0 <grub_disk_read>
     794:	ldr	x1, [x24, #168]
     798:	ldr	w0, [x23]
     79c:	str	xzr, [x1, #48]
     7a0:	cbnz	w0, 7f0 <grub_mod_init-0xbd0>
     7a4:	ldr	w27, [x24, #212]
     7a8:	cmp	x22, x19
     7ac:	sub	w28, w27, w28
     7b0:	add	x26, x26, w28, sxtw
     7b4:	b.hi	718 <grub_mod_init-0xca8>  // b.pmore
     7b8:	ldp	x19, x20, [sp, #16]
     7bc:	ldp	x21, x22, [sp, #32]
     7c0:	ldp	x23, x24, [sp, #48]
     7c4:	ldp	x25, x26, [sp, #64]
     7c8:	ldp	x27, x28, [sp, #80]
     7cc:	ldr	x0, [sp, #120]
     7d0:	ldp	x29, x30, [sp], #128
     7d4:	ret
     7d8:	sxtw	x2, w0
     7dc:	udiv	x3, x20, x2
     7e0:	msub	x3, x3, x2, x20
     7e4:	cmp	x3, #0x0
     7e8:	csel	x3, x3, x2, ne  // ne = any
     7ec:	b	74c <grub_mod_init-0xc74>
     7f0:	mov	x0, #0xffffffffffffffff    	// #-1
     7f4:	ldp	x19, x20, [sp, #16]
     7f8:	ldp	x21, x22, [sp, #32]
     7fc:	ldp	x23, x24, [sp, #48]
     800:	ldp	x25, x26, [sp, #64]
     804:	ldp	x27, x28, [sp, #80]
     808:	ldp	x29, x30, [sp], #128
     80c:	ret
	...
     818:	stp	x29, x30, [sp, #-224]!
     81c:	mov	x29, sp
     820:	stp	x19, x20, [sp, #16]
     824:	mov	x20, x0
     828:	mov	x0, #0xe0                  	// #224
     82c:	bl	0 <grub_malloc>
     830:	cbz	x0, a10 <grub_mod_init-0x9b0>
     834:	mov	x19, x0
     838:	mov	x4, x0
     83c:	mov	x3, #0xa2                  	// #162
     840:	mov	x0, x20
     844:	mov	x2, #0x0                   	// #0
     848:	mov	x1, #0x2                   	// #2
     84c:	bl	0 <grub_disk_read>
     850:	cbnz	w0, a38 <grub_mod_init-0x988>
     854:	ldrh	w1, [x19]
     858:	mov	w0, #0x4244                	// #16964
     85c:	lsl	w2, w1, #8
     860:	orr	w1, w2, w1, lsr #8
     864:	cmp	w0, w1, sxth
     868:	b.ne	9e4 <grub_mod_init-0x9dc>  // b.any
     86c:	ldr	w0, [x19, #20]
     870:	cbz	w0, 9e4 <grub_mod_init-0x9dc>
     874:	mov	w1, #0xc0                  	// #192
     878:	movk	w1, #0xff01, lsl #16
     87c:	tst	w0, w1
     880:	b.ne	9e4 <grub_mod_init-0x9dc>  // b.any
     884:	ldrh	w1, [x19, #124]
     888:	mov	w2, #0x482b                	// #18475
     88c:	lsl	w3, w1, #8
     890:	orr	w1, w3, w1, lsr #8
     894:	cmp	w2, w1, sxth
     898:	b.eq	a78 <grub_mod_init-0x948>  // b.none
     89c:	ldrh	w2, [x19, #134]
     8a0:	rev	w0, w0
     8a4:	ldrh	w3, [x19, #28]
     8a8:	add	x4, sp, #0x68
     8ac:	asr	w6, w0, #9
     8b0:	str	x20, [x19, #168]
     8b4:	lsr	w1, w2, #8
     8b8:	str	w0, [x19, #212]
     8bc:	lsr	w5, w3, #8
     8c0:	orr	w1, w1, w2, lsl #8
     8c4:	orr	w3, w5, w3, lsl #8
     8c8:	and	w1, w1, #0xffff
     8cc:	and	w5, w3, #0xffff
     8d0:	mov	x0, x20
     8d4:	mov	x3, #0x78                  	// #120
     8d8:	mov	x2, #0x0                   	// #0
     8dc:	madd	w1, w1, w6, w5
     8e0:	sxtw	x1, w1
     8e4:	bl	0 <grub_disk_read>
     8e8:	cbnz	w0, a38 <grub_mod_init-0x988>
     8ec:	ldrh	w0, [x19, #150]
     8f0:	add	x4, sp, #0x68
     8f4:	ldrh	w6, [x19, #28]
     8f8:	mov	x3, #0x78                  	// #120
     8fc:	ldr	w8, [x19, #212]
     900:	mov	x2, #0x0                   	// #0
     904:	ldrh	w5, [sp, #136]
     908:	lsr	w1, w0, #8
     90c:	lsr	w7, w6, #8
     910:	orr	w1, w1, w0, lsl #8
     914:	orr	w6, w7, w6, lsl #8
     918:	and	w1, w1, #0xffff
     91c:	and	w6, w6, #0xffff
     920:	asr	w8, w8, #9
     924:	ldr	w7, [sp, #120]
     928:	lsr	w9, w5, #8
     92c:	orr	w5, w9, w5, lsl #8
     930:	ldr	x0, [x19, #168]
     934:	madd	w1, w1, w8, w6
     938:	and	w5, w5, #0xffff
     93c:	rev	w6, w7
     940:	stp	w6, w5, [x19, #196]
     944:	sxtw	x1, w1
     948:	bl	0 <grub_disk_read>
     94c:	cbnz	w0, a38 <grub_mod_init-0x988>
     950:	ldrh	w0, [sp, #136]
     954:	ldr	w1, [sp, #120]
     958:	lsr	w2, w0, #8
     95c:	rev	w1, w1
     960:	orr	w0, w2, w0, lsl #8
     964:	and	w0, w0, #0xffff
     968:	stp	w1, w0, [x19, #204]
     96c:	cbz	w0, a38 <grub_mod_init-0x988>
     970:	ldr	w1, [x19, #212]
     974:	cmp	w0, w1
     978:	b.gt	a38 <grub_mod_init-0x988>
     97c:	ldr	w0, [x19, #200]
     980:	cmp	w1, w0
     984:	b.lt	a38 <grub_mod_init-0x988>  // b.tstop
     988:	ldrb	w2, [x19, #36]
     98c:	mov	w3, #0x1000000             	// #16777216
     990:	add	x1, x19, #0x25
     994:	add	x0, sp, #0x46
     998:	stur	w3, [sp, #65]
     99c:	strb	w2, [sp, #69]
     9a0:	bl	0 <grub_strcpy>
     9a4:	ldr	w2, [x19, #204]
     9a8:	add	x1, sp, #0x40
     9ac:	add	x4, sp, #0x28
     9b0:	mov	x0, x19
     9b4:	mov	x5, #0x12                  	// #18
     9b8:	mov	w3, #0x0                   	// #0
     9bc:	bl	5f8 <grub_mod_init-0xdc8>
     9c0:	cbz	w0, a24 <grub_mod_init-0x99c>
     9c4:	adrp	x0, 0 <grub_mod_init-0x13c0>
     9c8:	ldr	x20, [x0]
     9cc:	ldr	w0, [x20]
     9d0:	cbnz	w0, 9fc <grub_mod_init-0x9c4>
     9d4:	ldur	w0, [sp, #46]
     9d8:	rev	w0, w0
     9dc:	str	w0, [x19, #220]
     9e0:	b	a14 <grub_mod_init-0x9ac>
     9e4:	adrp	x1, 0 <grub_mod_init-0x13c0>
     9e8:	mov	w0, #0x9                   	// #9
     9ec:	ldr	x1, [x1]
     9f0:	bl	0 <grub_error>
     9f4:	adrp	x0, 0 <grub_mod_init-0x13c0>
     9f8:	ldr	x20, [x0]
     9fc:	mov	x0, x19
     a00:	bl	0 <grub_free>
     a04:	ldr	w0, [x20]
     a08:	cmp	w0, #0xb
     a0c:	b.eq	a54 <grub_mod_init-0x96c>  // b.none
     a10:	mov	x19, #0x0                   	// #0
     a14:	mov	x0, x19
     a18:	ldp	x19, x20, [sp, #16]
     a1c:	ldp	x29, x30, [sp], #224
     a20:	ret
     a24:	adrp	x1, 0 <grub_mod_init-0x13c0>
     a28:	mov	w0, #0x9                   	// #9
     a2c:	ldr	x1, [x1]
     a30:	bl	0 <grub_error>
     a34:	nop
     a38:	adrp	x0, 0 <grub_mod_init-0x13c0>
     a3c:	ldr	x20, [x0]
     a40:	mov	x0, x19
     a44:	bl	0 <grub_free>
     a48:	ldr	w0, [x20]
     a4c:	cmp	w0, #0xb
     a50:	b.ne	a10 <grub_mod_init-0x9b0>  // b.any
     a54:	adrp	x1, 0 <grub_mod_init-0x13c0>
     a58:	mov	x19, #0x0                   	// #0
     a5c:	mov	w0, #0x9                   	// #9
     a60:	ldr	x1, [x1]
     a64:	bl	0 <grub_error>
     a68:	mov	x0, x19
     a6c:	ldp	x19, x20, [sp, #16]
     a70:	ldp	x29, x30, [sp], #224
     a74:	ret
     a78:	adrp	x1, 0 <grub_mod_init-0x13c0>
     a7c:	mov	w0, #0x9                   	// #9
     a80:	ldr	x1, [x1]
     a84:	bl	0 <grub_error>
     a88:	adrp	x0, 0 <grub_mod_init-0x13c0>
     a8c:	ldr	x20, [x0]
     a90:	b	9fc <grub_mod_init-0x9c4>
     a94:	nop
	...
     ac0:	stp	x29, x30, [sp, #-48]!
     ac4:	mov	x29, sp
     ac8:	ldr	x0, [x0]
     acc:	stp	x19, x20, [sp, #16]
     ad0:	mov	x20, x1
     ad4:	bl	818 <grub_mod_init-0xba8>
     ad8:	mov	x19, x0
     adc:	cbz	x0, b60 <grub_mod_init-0x860>
     ae0:	str	x21, [sp, #32]
     ae4:	mov	x2, #0x1b                  	// #27
     ae8:	ldrb	w21, [x0, #36]
     aec:	cmp	x21, x2
     af0:	csel	x21, x21, x2, ls  // ls = plast
     af4:	add	x0, x21, x21, lsl #1
     af8:	add	x0, x0, #0x1
     afc:	bl	0 <grub_malloc>
     b00:	str	x0, [x20]
     b04:	cbz	x0, b3c <grub_mod_init-0x884>
     b08:	add	x2, x21, #0x1
     b0c:	add	x1, x19, #0x25
     b10:	mov	w3, #0x0                   	// #0
     b14:	bl	0 <grub_mod_init-0x13c0>
     b18:	mov	x0, x19
     b1c:	ldr	x21, [sp, #32]
     b20:	bl	0 <grub_free>
     b24:	adrp	x0, 0 <grub_mod_init-0x13c0>
     b28:	ldp	x19, x20, [sp, #16]
     b2c:	ldr	x0, [x0]
     b30:	ldp	x29, x30, [sp], #48
     b34:	ldr	w0, [x0]
     b38:	ret
     b3c:	mov	x0, x19
     b40:	ldr	x21, [sp, #32]
     b44:	bl	0 <grub_free>
     b48:	adrp	x0, 0 <grub_mod_init-0x13c0>
     b4c:	ldp	x19, x20, [sp, #16]
     b50:	ldr	x0, [x0]
     b54:	ldp	x29, x30, [sp], #48
     b58:	ldr	w0, [x0]
     b5c:	ret
     b60:	str	xzr, [x20]
     b64:	mov	x0, x19
     b68:	bl	0 <grub_free>
     b6c:	adrp	x0, 0 <grub_mod_init-0x13c0>
     b70:	ldp	x19, x20, [sp, #16]
     b74:	ldr	x0, [x0]
     b78:	ldp	x29, x30, [sp], #48
     b7c:	ldr	w0, [x0]
     b80:	ret
     b84:	nop
	...
     b90:	stp	x29, x30, [sp, #-32]!
     b94:	mov	x29, sp
     b98:	ldr	x0, [x0]
     b9c:	str	x19, [sp, #16]
     ba0:	mov	x19, x1
     ba4:	bl	818 <grub_mod_init-0xba8>
     ba8:	mov	w2, #0x0                   	// #0
     bac:	cbz	x0, bc4 <grub_mod_init-0x7fc>
     bb0:	ldur	w2, [x0, #6]
     bb4:	mov	w1, #0x4f80                	// #20352
     bb8:	movk	w1, #0x83da, lsl #16
     bbc:	rev	w2, w2
     bc0:	add	w2, w2, w1
     bc4:	str	w2, [x19]
     bc8:	bl	0 <grub_free>
     bcc:	adrp	x0, 0 <grub_mod_init-0x13c0>
     bd0:	ldr	x19, [sp, #16]
     bd4:	ldr	x0, [x0]
     bd8:	ldp	x29, x30, [sp], #32
     bdc:	ldr	w0, [x0]
     be0:	ret
     be4:	nop
	...
     bf0:	stp	x29, x30, [sp, #-16]!
     bf4:	mov	x29, sp
     bf8:	ldr	x0, [x0, #80]
     bfc:	bl	0 <grub_free>
     c00:	adrp	x0, 0 <grub_mod_init-0x13c0>
     c04:	ldr	x0, [x0]
     c08:	ldr	x0, [x0, #24]
     c0c:	bl	0 <grub_dl_unref>
     c10:	mov	w0, #0x0                   	// #0
     c14:	ldp	x29, x30, [sp], #16
     c18:	ret
     c1c:	nop
	...
     c28:	stp	x29, x30, [sp, #-48]!
     c2c:	adrp	x2, 0 <grub_mod_init-0x13c0>
     c30:	mov	x29, sp
     c34:	str	x21, [sp, #32]
     c38:	ldr	x21, [x2]
     c3c:	stp	x19, x20, [sp, #16]
     c40:	mov	x19, x0
     c44:	mov	x20, x1
     c48:	ldr	x0, [x21, #24]
     c4c:	bl	0 <grub_dl_ref>
     c50:	ldr	x0, [x19]
     c54:	bl	818 <grub_mod_init-0xba8>
     c58:	mov	x19, x0
     c5c:	cbz	x0, c68 <grub_mod_init-0x758>
     c60:	ldur	x1, [x0, #116]
     c64:	cbnz	x1, c98 <grub_mod_init-0x728>
     c68:	str	xzr, [x20]
     c6c:	ldr	x0, [x21, #24]
     c70:	bl	0 <grub_dl_unref>
     c74:	mov	x0, x19
     c78:	bl	0 <grub_free>
     c7c:	adrp	x0, 0 <grub_mod_init-0x13c0>
     c80:	ldp	x19, x20, [sp, #16]
     c84:	ldr	x0, [x0]
     c88:	ldr	x21, [sp, #32]
     c8c:	ldr	w0, [x0]
     c90:	ldp	x29, x30, [sp], #48
     c94:	ret
     c98:	adrp	x0, 0 <grub_mod_init-0x13c0>
     c9c:	rev	x1, x1
     ca0:	ldr	x0, [x0]
     ca4:	bl	0 <grub_xasprintf>
     ca8:	str	x0, [x20]
     cac:	b	c6c <grub_mod_init-0x754>
	...
     cc8:	mov	x6, x0
     ccc:	stp	x29, x30, [sp, #-160]!
     cd0:	adrp	x4, 0 <grub_mod_init-0x13c0>
     cd4:	mov	x29, sp
     cd8:	mov	w5, w3
     cdc:	ldr	x3, [x4]
     ce0:	stp	x19, x20, [sp, #16]
     ce4:	ldr	w7, [x6, #220]
     ce8:	mov	x19, x2
     cec:	mov	w8, #0x1                   	// #1
     cf0:	stp	x21, x22, [sp, #32]
     cf4:	add	x21, sp, #0x38
     cf8:	mov	x0, x1
     cfc:	stp	xzr, xzr, [sp, #64]
     d00:	mov	x1, x21
     d04:	mov	x4, #0x0                   	// #0
     d08:	stp	xzr, xzr, [sp, #144]
     d0c:	str	x6, [sp, #56]
     d10:	strb	w8, [sp, #64]
     d14:	stp	xzr, xzr, [sp, #80]
     d18:	stp	xzr, xzr, [sp, #96]
     d1c:	stp	xzr, xzr, [sp, #112]
     d20:	stp	xzr, xzr, [sp, #128]
     d24:	str	w7, [sp, #152]
     d28:	bl	0 <grub_fshelp_find_file_lookup>
     d2c:	ldr	x22, [x19]
     d30:	mov	w20, w0
     d34:	cmp	x22, x21
     d38:	b.eq	d50 <grub_mod_init-0x670>  // b.none
     d3c:	mov	w0, w20
     d40:	ldp	x19, x20, [sp, #16]
     d44:	ldp	x21, x22, [sp, #32]
     d48:	ldp	x29, x30, [sp], #160
     d4c:	ret
     d50:	mov	x0, #0x68                  	// #104
     d54:	bl	0 <grub_malloc>
     d58:	str	x0, [x19]
     d5c:	cbz	x0, d80 <grub_mod_init-0x640>
     d60:	mov	x1, x22
     d64:	mov	x2, #0x68                  	// #104
     d68:	bl	0 <grub_memmove>
     d6c:	mov	w0, w20
     d70:	ldp	x19, x20, [sp, #16]
     d74:	ldp	x21, x22, [sp, #32]
     d78:	ldp	x29, x30, [sp], #160
     d7c:	ret
     d80:	adrp	x0, 0 <grub_mod_init-0x13c0>
     d84:	ldr	x0, [x0]
     d88:	ldr	w20, [x0]
     d8c:	b	d3c <grub_mod_init-0x684>
	...
     da0:	stp	x29, x30, [sp, #-64]!
     da4:	adrp	x2, 0 <grub_mod_init-0x13c0>
     da8:	mov	x29, sp
     dac:	stp	x21, x22, [sp, #32]
     db0:	mov	x21, x1
     db4:	ldr	x22, [x2]
     db8:	stp	x19, x20, [sp, #16]
     dbc:	mov	x20, x0
     dc0:	str	xzr, [sp, #56]
     dc4:	ldr	x0, [x22, #24]
     dc8:	bl	0 <grub_dl_ref>
     dcc:	ldr	x0, [x20, #8]
     dd0:	ldr	x0, [x0]
     dd4:	bl	818 <grub_mod_init-0xba8>
     dd8:	cbz	x0, e5c <grub_mod_init-0x564>
     ddc:	mov	x1, x21
     de0:	mov	x19, x0
     de4:	add	x2, sp, #0x38
     de8:	mov	w3, #0x1                   	// #1
     dec:	bl	cc8 <grub_mod_init-0x6f8>
     df0:	mov	w21, w0
     df4:	cbnz	w0, e4c <grub_mod_init-0x574>
     df8:	ldr	x1, [sp, #56]
     dfc:	add	x0, x19, #0xb0
     e00:	mov	x2, #0xc                   	// #12
     e04:	add	x1, x1, #0x52
     e08:	bl	0 <grub_memmove>
     e0c:	ldr	x0, [sp, #56]
     e10:	ldur	w1, [x0, #34]
     e14:	ldr	w2, [x0, #28]
     e18:	rev	w3, w1
     e1c:	str	x3, [x20, #64]
     e20:	rev	w1, w1
     e24:	rev	w2, w2
     e28:	stp	w2, w1, [x19, #188]
     e2c:	str	xzr, [x20, #24]
     e30:	str	x19, [x20, #80]
     e34:	bl	0 <grub_free>
     e38:	mov	w0, w21
     e3c:	ldp	x19, x20, [sp, #16]
     e40:	ldp	x21, x22, [sp, #32]
     e44:	ldp	x29, x30, [sp], #64
     e48:	ret
     e4c:	mov	x0, x19
     e50:	bl	0 <grub_free>
     e54:	ldr	x0, [sp, #56]
     e58:	bl	0 <grub_free>
     e5c:	ldr	x0, [x22, #24]
     e60:	bl	0 <grub_dl_unref>
     e64:	adrp	x0, 0 <grub_mod_init-0x13c0>
     e68:	ldp	x19, x20, [sp, #16]
     e6c:	ldr	x0, [x0]
     e70:	ldr	w21, [x0]
     e74:	mov	w0, w21
     e78:	ldp	x21, x22, [sp, #32]
     e7c:	ldp	x29, x30, [sp], #64
     e80:	ret
     e84:	nop
	...
     e98:	stp	x29, x30, [sp, #-240]!
     e9c:	mov	x29, sp
     ea0:	stp	x19, x20, [sp, #16]
     ea4:	mov	x19, x1
     ea8:	stp	x21, x22, [sp, #32]
     eac:	stp	x23, x24, [sp, #48]
     eb0:	mov	x23, x0
     eb4:	ldr	w0, [x0, #96]
     eb8:	ldrb	w1, [x1]
     ebc:	rev	w0, w0
     ec0:	stp	x2, x3, [sp, #96]
     ec4:	stur	w0, [sp, #113]
     ec8:	cbz	w1, 1088 <grub_mod_init-0x338>
     ecc:	add	x22, sp, #0x70
     ed0:	stp	x25, x26, [sp, #64]
     ed4:	add	x20, x22, #0x7
     ed8:	add	x25, x22, #0x25
     edc:	adrp	x26, 0 <grub_mod_init-0x13c0>
     ee0:	stp	x27, x28, [sp, #80]
     ee4:	b	f08 <grub_mod_init-0x4b8>
     ee8:	add	x19, x19, #0x1
     eec:	mov	x21, x20
     ef0:	sturb	w1, [x20, #-1]
     ef4:	ldrb	w1, [x19]
     ef8:	add	x20, x20, #0x1
     efc:	cmp	w1, #0x0
     f00:	ccmp	x25, x21, #0x0, ne  // ne = any
     f04:	b.ls	f80 <grub_mod_init-0x440>  // b.plast
     f08:	cmp	w1, #0x3a
     f0c:	sub	x21, x20, #0x1
     f10:	b.eq	fd4 <grub_mod_init-0x3ec>  // b.none
     f14:	tbz	w1, #7, ee8 <grub_mod_init-0x4d8>
     f18:	and	w1, w1, #0xf0
     f1c:	mov	w27, #0x0                   	// #0
     f20:	cmp	w1, #0xe0
     f24:	cset	x28, eq  // eq = none
     f28:	ldr	x24, [x26]
     f2c:	add	x28, x28, #0x2
     f30:	b	f44 <grub_mod_init-0x47c>
     f34:	add	w27, w27, #0x1
     f38:	add	x24, x24, #0x4
     f3c:	cmp	w27, #0x80
     f40:	b.eq	fe8 <grub_mod_init-0x3d8>  // b.none
     f44:	mov	x2, x28
     f48:	mov	x1, x19
     f4c:	mov	x0, x24
     f50:	bl	0 <grub_memcmp>
     f54:	cbnz	w0, f34 <grub_mod_init-0x48c>
     f58:	add	x19, x19, x28
     f5c:	orr	w27, w27, #0xffffff80
     f60:	sturb	w27, [x20, #-1]
     f64:	mov	x21, x20
     f68:	add	x20, x20, #0x1
     f6c:	ldrb	w1, [x19]
     f70:	cmp	w1, #0x0
     f74:	ccmp	x25, x21, #0x0, ne  // ne = any
     f78:	b.hi	f08 <grub_mod_init-0x4b8>  // b.pmore
     f7c:	nop
     f80:	cbnz	w1, 107c <grub_mod_init-0x344>
     f84:	add	x0, x22, #0x6
     f88:	subs	x21, x21, x0
     f8c:	b.mi	107c <grub_mod_init-0x344>  // b.first
     f90:	ldp	x25, x26, [sp, #64]
     f94:	ldp	x27, x28, [sp, #80]
     f98:	mov	x1, x22
     f9c:	ldr	x0, [x23]
     fa0:	add	x4, sp, #0x98
     fa4:	mov	x5, #0x56                  	// #86
     fa8:	mov	w3, #0x0                   	// #0
     fac:	strb	w21, [sp, #117]
     fb0:	ldr	w2, [x0, #204]
     fb4:	bl	5f8 <grub_mod_init-0xdc8>
     fb8:	cbnz	w0, ff0 <grub_mod_init-0x3d0>
     fbc:	mov	w0, #0x0                   	// #0
     fc0:	ldp	x19, x20, [sp, #16]
     fc4:	ldp	x21, x22, [sp, #32]
     fc8:	ldp	x23, x24, [sp, #48]
     fcc:	ldp	x29, x30, [sp], #240
     fd0:	ret
     fd4:	mov	w0, #0x2f                  	// #47
     fd8:	add	x19, x19, #0x1
     fdc:	mov	x21, x20
     fe0:	sturb	w0, [x20, #-1]
     fe4:	b	ef4 <grub_mod_init-0x4cc>
     fe8:	ldrb	w1, [x19]
     fec:	b	f80 <grub_mod_init-0x440>
     ff0:	mov	x0, #0x68                  	// #104
     ff4:	bl	0 <grub_malloc>
     ff8:	mov	x1, x0
     ffc:	ldr	x0, [sp, #96]
    1000:	str	x1, [x0]
    1004:	cbz	x1, 1094 <grub_mod_init-0x32c>
    1008:	ldur	w4, [sp, #158]
    100c:	mov	w0, #0x0                   	// #0
    1010:	ldur	x2, [sp, #230]
    1014:	rev	w4, w4
    1018:	str	w4, [x1, #96]
    101c:	ldp	x4, x5, [sp, #168]
    1020:	ldp	x8, x9, [sp, #152]
    1024:	stp	x4, x5, [x1, #24]
    1028:	ldrb	w3, [sp, #152]
    102c:	ldp	x4, x5, [sp, #184]
    1030:	stp	x4, x5, [x1, #40]
    1034:	cmp	w3, #0x1
    1038:	ldp	x4, x5, [sp, #200]
    103c:	stp	x4, x5, [x1, #56]
    1040:	cset	w3, eq  // eq = none
    1044:	ldp	x4, x5, [sp, #216]
    1048:	stp	x4, x5, [x1, #72]
    104c:	add	w3, w3, #0x1
    1050:	ldr	x4, [x23]
    1054:	str	x4, [x1]
    1058:	stp	x8, x9, [x1, #8]
    105c:	stur	x2, [x1, #86]
    1060:	ldr	x1, [sp, #104]
    1064:	ldp	x19, x20, [sp, #16]
    1068:	str	w3, [x1]
    106c:	ldp	x21, x22, [sp, #32]
    1070:	ldp	x23, x24, [sp, #48]
    1074:	ldp	x29, x30, [sp], #240
    1078:	ret
    107c:	ldp	x25, x26, [sp, #64]
    1080:	ldp	x27, x28, [sp, #80]
    1084:	b	fbc <grub_mod_init-0x404>
    1088:	add	x22, sp, #0x70
    108c:	mov	x21, #0x0                   	// #0
    1090:	b	f98 <grub_mod_init-0x428>
    1094:	adrp	x0, 0 <grub_mod_init-0x13c0>
    1098:	ldr	x0, [x0]
    109c:	ldr	w0, [x0]
    10a0:	b	fc0 <grub_mod_init-0x400>
    10a4:	nop
	...
    10b8:	stp	x29, x30, [sp, #-160]!
    10bc:	mov	x3, x0
    10c0:	mov	x2, #0x5e                  	// #94
    10c4:	mov	x29, sp
    10c8:	stp	x19, x20, [sp, #16]
    10cc:	add	x0, sp, #0x40
    10d0:	ldr	x19, [x3]
    10d4:	ldr	x20, [x3, #16]
    10d8:	str	x21, [sp, #32]
    10dc:	mov	x21, x1
    10e0:	mov	w1, #0x0                   	// #0
    10e4:	bl	0 <grub_memset>
    10e8:	mov	x2, #0x10                  	// #16
    10ec:	mov	w1, #0x0                   	// #0
    10f0:	add	x0, sp, #0x30
    10f4:	bl	0 <grub_memset>
    10f8:	ldrb	w2, [x19, #5]
    10fc:	mov	x4, #0x1f                  	// #31
    1100:	add	x0, sp, #0x40
    1104:	mov	w3, #0x1                   	// #1
    1108:	cmp	x2, x4
    110c:	add	x1, x19, #0x6
    1110:	csel	x2, x2, x4, ls  // ls = plast
    1114:	bl	0 <grub_mod_init-0x13c0>
    1118:	ldrb	w3, [sp, #48]
    111c:	orr	w3, w3, #0x4
    1120:	strb	w3, [sp, #48]
    1124:	ldrb	w0, [x20]
    1128:	cmp	w0, #0x1
    112c:	b.eq	114c <grub_mod_init-0x274>  // b.none
    1130:	cmp	w0, #0x2
    1134:	mov	w0, #0x0                   	// #0
    1138:	b.eq	119c <grub_mod_init-0x224>  // b.none
    113c:	ldp	x19, x20, [sp, #16]
    1140:	ldr	x21, [sp, #32]
    1144:	ldp	x29, x30, [sp], #160
    1148:	ret
    114c:	ldp	x5, x2, [x21]
    1150:	mov	w1, #0x4f80                	// #20352
    1154:	ldur	w4, [x20, #6]
    1158:	movk	w1, #0x83da, lsl #16
    115c:	ldur	w0, [x20, #14]
    1160:	rev	w4, w4
    1164:	rev	w0, w0
    1168:	add	w0, w0, w1
    116c:	mov	w1, #0xb                   	// #11
    1170:	orr	w3, w3, w1
    1174:	strb	w3, [sp, #48]
    1178:	str	w0, [sp, #52]
    117c:	add	x1, sp, #0x30
    1180:	str	x4, [sp, #56]
    1184:	add	x0, sp, #0x40
    1188:	blr	x5
    118c:	ldp	x19, x20, [sp, #16]
    1190:	ldr	x21, [sp, #32]
    1194:	ldp	x29, x30, [sp], #160
    1198:	ret
    119c:	ldr	w0, [x20, #48]
    11a0:	mov	w1, #0xfffffff4            	// #-12
    11a4:	ldr	w4, [x20, #20]
    11a8:	mov	w6, #0x4f80                	// #20352
    11ac:	rev	w0, w0
    11b0:	and	w3, w3, w1
    11b4:	movk	w6, #0x83da, lsl #16
    11b8:	rev	w4, w4
    11bc:	add	w0, w0, w6
    11c0:	mov	w1, #0xa                   	// #10
    11c4:	ldp	x5, x2, [x21]
    11c8:	b	1170 <grub_mod_init-0x250>
    11cc:	nop
    11d0:	mov	x0, x1
    11d4:	ldr	w1, [x2]
    11d8:	ldr	x3, [x0]
    11dc:	ldur	w3, [x3, #1]
    11e0:	cmp	w3, w1
    11e4:	b.ne	11f4 <grub_mod_init-0x1cc>  // b.any
    11e8:	ldp	x3, x1, [x2, #16]
    11ec:	mov	x16, x3
    11f0:	br	x16
    11f4:	mov	w0, #0x1                   	// #1
    11f8:	ret
    11fc:	nop
    1200:	ldr	x3, [x1]
    1204:	ldr	w7, [x2]
    1208:	ldur	w6, [x3, #1]
    120c:	rev	w5, w7
    1210:	ldrb	w4, [x3, #5]
    1214:	rev	w3, w6
    1218:	subs	w3, w3, w5
    121c:	csel	w3, w3, w4, ne  // ne = any
    1220:	cmp	w3, #0x0
    1224:	b.gt	1238 <grub_mod_init-0x188>
    1228:	ldr	x3, [x1, #16]
    122c:	ldr	w3, [x3]
    1230:	rev	w3, w3
    1234:	str	w3, [x2, #4]
    1238:	ldrb	w3, [x0, #8]
    123c:	cmp	w3, #0xff
    1240:	ccmp	w4, #0x0, #0x4, eq  // eq = none
    1244:	b.ne	1250 <grub_mod_init-0x170>  // b.any
    1248:	mov	w0, #0x0                   	// #0
    124c:	ret
    1250:	ldr	w0, [x0]
    1254:	mov	w3, #0x1                   	// #1
    1258:	cmp	w7, w6
    125c:	rev	w0, w0
    1260:	stp	w3, w0, [x2, #8]
    1264:	b.ne	1248 <grub_mod_init-0x178>  // b.any
    1268:	mov	x0, x1
    126c:	ldp	x3, x1, [x2, #16]
    1270:	mov	x16, x3
    1274:	br	x16
    1278:	stp	x29, x30, [sp, #-112]!
    127c:	adrp	x4, 0 <grub_mod_init-0x13c0>
    1280:	mov	x29, sp
    1284:	stp	x21, x22, [sp, #32]
    1288:	ldr	x21, [x4]
    128c:	stp	x19, x20, [sp, #16]
    1290:	mov	x19, x0
    1294:	mov	x20, x1
    1298:	stp	xzr, x2, [sp, #56]
    129c:	ldr	x0, [x21, #24]
    12a0:	str	x3, [sp, #72]
    12a4:	bl	0 <grub_dl_ref>
    12a8:	ldr	x0, [x19]
    12ac:	bl	818 <grub_mod_init-0xba8>
    12b0:	mov	x19, x0
    12b4:	cbz	x0, 12cc <grub_mod_init-0xf4>
    12b8:	mov	x1, x20
    12bc:	add	x2, sp, #0x38
    12c0:	mov	w3, #0x2                   	// #2
    12c4:	bl	cc8 <grub_mod_init-0x6f8>
    12c8:	cbz	w0, 1300 <grub_mod_init-0xc0>
    12cc:	ldr	x0, [sp, #56]
    12d0:	bl	0 <grub_free>
    12d4:	mov	x0, x19
    12d8:	bl	0 <grub_free>
    12dc:	ldr	x0, [x21, #24]
    12e0:	bl	0 <grub_dl_unref>
    12e4:	adrp	x0, 0 <grub_mod_init-0x13c0>
    12e8:	ldp	x19, x20, [sp, #16]
    12ec:	ldr	x0, [x0]
    12f0:	ldp	x21, x22, [sp, #32]
    12f4:	ldr	w0, [x0]
    12f8:	ldp	x29, x30, [sp], #112
    12fc:	ret
    1300:	ldr	x0, [sp, #56]
    1304:	adrp	x3, 0 <grub_mod_init-0x13c0>
    1308:	adrp	x1, 0 <grub_mod_init-0x13c0>
    130c:	ldr	w2, [x19, #204]
    1310:	ldr	x3, [x3]
    1314:	mov	w20, #0xffffffff            	// #-1
    1318:	ldr	w0, [x0, #96]
    131c:	ldr	x22, [x1]
    1320:	rev	w0, w0
    1324:	add	x1, sp, #0x40
    1328:	str	w0, [sp, #80]
    132c:	stp	xzr, x3, [sp, #88]
    1330:	str	x1, [sp, #104]
    1334:	b	134c <grub_mod_init-0x74>
    1338:	ldr	w2, [sp, #84]
    133c:	cmn	w2, #0x1
    1340:	b.eq	12cc <grub_mod_init-0xf4>  // b.none
    1344:	ldr	w0, [sp, #88]
    1348:	cbnz	w0, 1370 <grub_mod_init-0x50>
    134c:	add	x5, sp, #0x50
    1350:	mov	x4, x22
    1354:	mov	x0, x19
    1358:	mov	w3, #0x0                   	// #0
    135c:	mov	w1, #0x0                   	// #0
    1360:	str	w20, [sp, #84]
    1364:	bl	390 <grub_mod_init-0x1030>
    1368:	cbz	w0, 1338 <grub_mod_init-0x88>
    136c:	b	12cc <grub_mod_init-0xf4>
    1370:	adrp	x0, 0 <grub_mod_init-0x13c0>
    1374:	ldr	w2, [sp, #92]
    1378:	add	x5, sp, #0x50
    137c:	mov	w3, #0x1                   	// #1
    1380:	ldr	x4, [x0]
    1384:	mov	w1, #0x0                   	// #0
    1388:	mov	x0, x19
    138c:	bl	390 <grub_mod_init-0x1030>
    1390:	b	12cc <grub_mod_init-0xf4>
    1394:	nop
	...

00000000000013c0 <grub_mod_init>:
    13c0:	stp	x29, x30, [sp, #-32]!
    13c4:	adrp	x2, 0 <grub_mod_init-0x13c0>
    13c8:	adrp	x1, 0 <grub_mod_init-0x13c0>
    13cc:	mov	x29, sp
    13d0:	ldr	x1, [x1]
    13d4:	str	x19, [sp, #16]
    13d8:	mov	x19, x0
    13dc:	ldr	x0, [x2]
    13e0:	bl	0 <grub_list_push>
    13e4:	adrp	x0, 0 <grub_mod_init-0x13c0>
    13e8:	ldr	x0, [x0]
    13ec:	str	x19, [x0, #24]
    13f0:	ldr	x19, [sp, #16]
    13f4:	ldp	x29, x30, [sp], #32
    13f8:	ret
    13fc:	nop
	...

0000000000001418 <grub_mod_fini>:
    1418:	adrp	x0, 0 <grub_mod_init-0x13c0>
    141c:	ldr	x0, [x0]
    1420:	b	0 <grub_list_remove>
    1424:	nop
	...
