
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_heapq.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000aa0 <.init>:
 aa0:	stp	x29, x30, [sp, #-16]!
 aa4:	mov	x29, sp
 aa8:	bl	b90 <PyModule_AddObject@plt+0x10>
 aac:	ldp	x29, x30, [sp], #16
 ab0:	ret

Disassembly of section .plt:

0000000000000ac0 <__cxa_finalize@plt-0x20>:
 ac0:	stp	x16, x30, [sp, #-16]!
 ac4:	adrp	x16, 13000 <PyInit__heapq@@Base+0x11848>
 ac8:	ldr	x17, [x16, #4088]
 acc:	add	x16, x16, #0xff8
 ad0:	br	x17
 ad4:	nop
 ad8:	nop
 adc:	nop

0000000000000ae0 <__cxa_finalize@plt>:
 ae0:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 ae4:	ldr	x17, [x16]
 ae8:	add	x16, x16, #0x0
 aec:	br	x17

0000000000000af0 <PyList_SetSlice@plt>:
 af0:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 af4:	ldr	x17, [x16, #8]
 af8:	add	x16, x16, #0x8
 afc:	br	x17

0000000000000b00 <_Py_Dealloc@plt>:
 b00:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b04:	ldr	x17, [x16, #16]
 b08:	add	x16, x16, #0x10
 b0c:	br	x17

0000000000000b10 <PyErr_SetString@plt>:
 b10:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b14:	ldr	x17, [x16, #24]
 b18:	add	x16, x16, #0x18
 b1c:	br	x17

0000000000000b20 <PyObject_RichCompareBool@plt>:
 b20:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b24:	ldr	x17, [x16, #32]
 b28:	add	x16, x16, #0x20
 b2c:	br	x17

0000000000000b30 <PyList_Append@plt>:
 b30:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b34:	ldr	x17, [x16, #40]
 b38:	add	x16, x16, #0x28
 b3c:	br	x17

0000000000000b40 <__gmon_start__@plt>:
 b40:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b44:	ldr	x17, [x16, #48]
 b48:	add	x16, x16, #0x30
 b4c:	br	x17

0000000000000b50 <_PyArg_CheckPositional@plt>:
 b50:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b54:	ldr	x17, [x16, #56]
 b58:	add	x16, x16, #0x38
 b5c:	br	x17

0000000000000b60 <PyModule_Create2@plt>:
 b60:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b64:	ldr	x17, [x16, #64]
 b68:	add	x16, x16, #0x40
 b6c:	br	x17

0000000000000b70 <PyUnicode_DecodeUTF8@plt>:
 b70:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b74:	ldr	x17, [x16, #72]
 b78:	add	x16, x16, #0x48
 b7c:	br	x17

0000000000000b80 <PyModule_AddObject@plt>:
 b80:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b84:	ldr	x17, [x16, #80]
 b88:	add	x16, x16, #0x50
 b8c:	br	x17

Disassembly of section .text:

0000000000000b90 <PyInit__heapq@@Base-0xc28>:
     b90:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
     b94:	ldr	x0, [x0, #4040]
     b98:	cbz	x0, ba0 <PyModule_AddObject@plt+0x20>
     b9c:	b	b40 <__gmon_start__@plt>
     ba0:	ret
     ba4:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12848>
     ba8:	add	x0, x0, #0x1e8
     bac:	adrp	x1, 14000 <PyInit__heapq@@Base+0x12848>
     bb0:	add	x1, x1, #0x1e8
     bb4:	cmp	x0, x1
     bb8:	b.eq	be4 <PyModule_AddObject@plt+0x64>  // b.none
     bbc:	adrp	x1, 13000 <PyInit__heapq@@Base+0x11848>
     bc0:	ldr	x1, [x1, #4008]
     bc4:	cbz	x1, be4 <PyModule_AddObject@plt+0x64>
     bc8:	stp	x29, x30, [sp, #-16]!
     bcc:	mov	x29, sp
     bd0:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12848>
     bd4:	add	x0, x0, #0x1e8
     bd8:	blr	x1
     bdc:	ldp	x29, x30, [sp], #16
     be0:	ret
     be4:	ret
     be8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12848>
     bec:	add	x0, x0, #0x1e8
     bf0:	adrp	x1, 14000 <PyInit__heapq@@Base+0x12848>
     bf4:	add	x1, x1, #0x1e8
     bf8:	sub	x0, x0, x1
     bfc:	lsr	x1, x0, #63
     c00:	add	x0, x1, x0, asr #3
     c04:	cmp	xzr, x0, asr #1
     c08:	b.eq	c38 <PyModule_AddObject@plt+0xb8>  // b.none
     c0c:	asr	x1, x0, #1
     c10:	adrp	x2, 13000 <PyInit__heapq@@Base+0x11848>
     c14:	ldr	x2, [x2, #4064]
     c18:	cbz	x2, c38 <PyModule_AddObject@plt+0xb8>
     c1c:	stp	x29, x30, [sp, #-16]!
     c20:	mov	x29, sp
     c24:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12848>
     c28:	add	x0, x0, #0x1e8
     c2c:	blr	x2
     c30:	ldp	x29, x30, [sp], #16
     c34:	ret
     c38:	ret
     c3c:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12848>
     c40:	ldrb	w0, [x0, #488]
     c44:	cbnz	w0, c80 <PyModule_AddObject@plt+0x100>
     c48:	stp	x29, x30, [sp, #-16]!
     c4c:	mov	x29, sp
     c50:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
     c54:	ldr	x0, [x0, #4016]
     c58:	cbz	x0, c68 <PyModule_AddObject@plt+0xe8>
     c5c:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12848>
     c60:	ldr	x0, [x0, #88]
     c64:	bl	ae0 <__cxa_finalize@plt>
     c68:	bl	ba4 <PyModule_AddObject@plt+0x24>
     c6c:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12848>
     c70:	mov	w1, #0x1                   	// #1
     c74:	strb	w1, [x0, #488]
     c78:	ldp	x29, x30, [sp], #16
     c7c:	ret
     c80:	ret
     c84:	stp	x29, x30, [sp, #-16]!
     c88:	mov	x29, sp
     c8c:	bl	be8 <PyModule_AddObject@plt+0x68>
     c90:	ldp	x29, x30, [sp], #16
     c94:	ret
     c98:	stp	x29, x30, [sp, #-80]!
     c9c:	mov	x29, sp
     ca0:	stp	x19, x20, [sp, #16]
     ca4:	mov	x20, x0
     ca8:	ldr	x0, [x0, #8]
     cac:	ldr	x0, [x0, #168]
     cb0:	tbz	w0, #25, d14 <PyModule_AddObject@plt+0x194>
     cb4:	stp	x21, x22, [sp, #32]
     cb8:	mov	x21, x1
     cbc:	ldr	x19, [x20, #16]
     cc0:	cmp	x19, #0x9c4
     cc4:	b.gt	d34 <PyModule_AddObject@plt+0x1b4>
     cc8:	asr	x19, x19, #1
     ccc:	subs	x19, x19, #0x1
     cd0:	b.mi	cf0 <PyModule_AddObject@plt+0x170>  // b.first
     cd4:	mov	x1, x19
     cd8:	mov	x0, x20
     cdc:	blr	x21
     ce0:	cbnz	w0, e24 <PyModule_AddObject@plt+0x2a4>
     ce4:	sub	x19, x19, #0x1
     ce8:	cmn	x19, #0x1
     cec:	b.ne	cd4 <PyModule_AddObject@plt+0x154>  // b.any
     cf0:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
     cf4:	ldr	x0, [x0, #4048]
     cf8:	ldr	x1, [x0]
     cfc:	add	x1, x1, #0x1
     d00:	str	x1, [x0]
     d04:	ldp	x21, x22, [sp, #32]
     d08:	ldp	x19, x20, [sp, #16]
     d0c:	ldp	x29, x30, [sp], #80
     d10:	ret
     d14:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     d18:	add	x1, x1, #0x828
     d1c:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
     d20:	ldr	x0, [x0, #4032]
     d24:	ldr	x0, [x0]
     d28:	bl	b10 <PyErr_SetString@plt>
     d2c:	mov	x0, #0x0                   	// #0
     d30:	b	d08 <PyModule_AddObject@plt+0x188>
     d34:	stp	x23, x24, [sp, #48]
     d38:	str	x25, [sp, #64]
     d3c:	asr	x23, x19, #1
     d40:	add	x0, x23, #0x1
     d44:	mov	w22, #0x0                   	// #0
     d48:	asr	x0, x0, #1
     d4c:	add	w22, w22, #0x1
     d50:	cmp	x0, #0x1
     d54:	b.gt	d48 <PyModule_AddObject@plt+0x1c8>
     d58:	lsl	x22, x0, x22
     d5c:	asr	x0, x19, #2
     d60:	sub	x24, x22, #0x2
     d64:	cmp	x24, x19, asr #2
     d68:	b.lt	d9c <PyModule_AddObject@plt+0x21c>  // b.tstop
     d6c:	sub	x25, x0, #0x1
     d70:	mov	x19, x24
     d74:	b	d7c <PyModule_AddObject@plt+0x1fc>
     d78:	asr	x19, x19, #1
     d7c:	mov	x1, x19
     d80:	mov	x0, x20
     d84:	blr	x21
     d88:	cbnz	w0, dfc <PyModule_AddObject@plt+0x27c>
     d8c:	tbnz	w19, #0, d78 <PyModule_AddObject@plt+0x1f8>
     d90:	sub	x24, x24, #0x1
     d94:	cmp	x25, x24
     d98:	b.ne	d70 <PyModule_AddObject@plt+0x1f0>  // b.any
     d9c:	sub	x22, x22, #0x1
     da0:	sub	x23, x23, #0x1
     da4:	cmp	x22, x23
     da8:	b.gt	dd8 <PyModule_AddObject@plt+0x258>
     dac:	mov	x19, x23
     db0:	mov	x1, x19
     db4:	mov	x0, x20
     db8:	blr	x21
     dbc:	cbnz	w0, e10 <PyModule_AddObject@plt+0x290>
     dc0:	tbz	w19, #0, dcc <PyModule_AddObject@plt+0x24c>
     dc4:	asr	x19, x19, #1
     dc8:	b	db0 <PyModule_AddObject@plt+0x230>
     dcc:	sub	x23, x23, #0x1
     dd0:	cmp	x22, x23
     dd4:	b.le	dac <PyModule_AddObject@plt+0x22c>
     dd8:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
     ddc:	ldr	x0, [x0, #4048]
     de0:	ldr	x1, [x0]
     de4:	add	x1, x1, #0x1
     de8:	str	x1, [x0]
     dec:	ldp	x21, x22, [sp, #32]
     df0:	ldp	x23, x24, [sp, #48]
     df4:	ldr	x25, [sp, #64]
     df8:	b	d08 <PyModule_AddObject@plt+0x188>
     dfc:	mov	x0, #0x0                   	// #0
     e00:	ldp	x21, x22, [sp, #32]
     e04:	ldp	x23, x24, [sp, #48]
     e08:	ldr	x25, [sp, #64]
     e0c:	b	d08 <PyModule_AddObject@plt+0x188>
     e10:	mov	x0, #0x0                   	// #0
     e14:	ldp	x21, x22, [sp, #32]
     e18:	ldp	x23, x24, [sp, #48]
     e1c:	ldr	x25, [sp, #64]
     e20:	b	d08 <PyModule_AddObject@plt+0x188>
     e24:	mov	x0, #0x0                   	// #0
     e28:	ldp	x21, x22, [sp, #32]
     e2c:	b	d08 <PyModule_AddObject@plt+0x188>
     e30:	stp	x29, x30, [sp, #-16]!
     e34:	mov	x29, sp
     e38:	mov	x0, x1
     e3c:	adrp	x1, 0 <__cxa_finalize@plt-0xae0>
     e40:	add	x1, x1, #0xe70
     e44:	bl	c98 <PyModule_AddObject@plt+0x118>
     e48:	ldp	x29, x30, [sp], #16
     e4c:	ret
     e50:	stp	x29, x30, [sp, #-16]!
     e54:	mov	x29, sp
     e58:	mov	x0, x1
     e5c:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     e60:	add	x1, x1, #0x180
     e64:	bl	c98 <PyModule_AddObject@plt+0x118>
     e68:	ldp	x29, x30, [sp], #16
     e6c:	ret
     e70:	stp	x29, x30, [sp, #-64]!
     e74:	mov	x29, sp
     e78:	stp	x21, x22, [sp, #32]
     e7c:	ldr	x22, [x0, #16]
     e80:	cmp	x22, x1
     e84:	b.le	eb0 <PyModule_AddObject@plt+0x330>
     e88:	stp	x23, x24, [sp, #48]
     e8c:	mov	x21, x0
     e90:	mov	x24, x1
     e94:	ldr	x3, [x0, #24]
     e98:	asr	x23, x22, #1
     e9c:	cmp	x1, x22, asr #1
     ea0:	b.ge	101c <PyModule_AddObject@plt+0x49c>  // b.tcont
     ea4:	stp	x19, x20, [sp, #16]
     ea8:	mov	x20, x1
     eac:	b	eec <PyModule_AddObject@plt+0x36c>
     eb0:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     eb4:	add	x1, x1, #0x848
     eb8:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
     ebc:	ldr	x0, [x0, #4056]
     ec0:	ldr	x0, [x0]
     ec4:	bl	b10 <PyErr_SetString@plt>
     ec8:	mov	w0, #0xffffffff            	// #-1
     ecc:	b	1034 <PyModule_AddObject@plt+0x4b4>
     ed0:	ldr	x0, [x3, x19, lsl #3]
     ed4:	ldr	x1, [x3, x20, lsl #3]
     ed8:	str	x1, [x3, x19, lsl #3]
     edc:	str	x0, [x3, x20, lsl #3]
     ee0:	cmp	x19, x23
     ee4:	b.ge	f54 <PyModule_AddObject@plt+0x3d4>  // b.tcont
     ee8:	mov	x20, x19
     eec:	lsl	x2, x20, #1
     ef0:	add	x19, x2, #0x1
     ef4:	add	x0, x2, #0x2
     ef8:	cmp	x0, x22
     efc:	b.ge	ed0 <PyModule_AddObject@plt+0x350>  // b.tcont
     f00:	mov	w2, #0x0                   	// #0
     f04:	ldr	x1, [x3, x19, lsl #3]
     f08:	ldr	x0, [x3, x0, lsl #3]
     f0c:	bl	b20 <PyObject_RichCompareBool@plt>
     f10:	tbnz	w0, #31, 1028 <PyModule_AddObject@plt+0x4a8>
     f14:	eor	w0, w0, #0x1
     f18:	add	x19, x19, x0
     f1c:	ldr	x3, [x21, #24]
     f20:	ldr	x0, [x21, #16]
     f24:	cmp	x0, x22
     f28:	b.eq	ed0 <PyModule_AddObject@plt+0x350>  // b.none
     f2c:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     f30:	add	x1, x1, #0x860
     f34:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
     f38:	ldr	x0, [x0, #4024]
     f3c:	ldr	x0, [x0]
     f40:	bl	b10 <PyErr_SetString@plt>
     f44:	mov	w0, #0xffffffff            	// #-1
     f48:	ldp	x19, x20, [sp, #16]
     f4c:	ldp	x23, x24, [sp, #48]
     f50:	b	1034 <PyModule_AddObject@plt+0x4b4>
     f54:	ldr	x23, [x21, #16]
     f58:	cmp	x19, x23
     f5c:	b.ge	fcc <PyModule_AddObject@plt+0x44c>  // b.tcont
     f60:	ldr	x0, [x21, #24]
     f64:	ldr	x1, [x0, x19, lsl #3]
     f68:	cmp	x19, x24
     f6c:	b.le	1040 <PyModule_AddObject@plt+0x4c0>
     f70:	mov	x20, x19
     f74:	sub	x19, x19, #0x1
     f78:	asr	x19, x19, #1
     f7c:	lsl	x22, x19, #3
     f80:	mov	w2, #0x0                   	// #0
     f84:	ldr	x0, [x0, x19, lsl #3]
     f88:	bl	b20 <PyObject_RichCompareBool@plt>
     f8c:	tbnz	w0, #31, 1050 <PyModule_AddObject@plt+0x4d0>
     f90:	ldr	x1, [x21, #16]
     f94:	cmp	x23, x1
     f98:	b.ne	ff4 <PyModule_AddObject@plt+0x474>  // b.any
     f9c:	cbz	w0, 1060 <PyModule_AddObject@plt+0x4e0>
     fa0:	ldr	x0, [x21, #24]
     fa4:	ldr	x2, [x0, x22]
     fa8:	ldr	x1, [x0, x20, lsl #3]
     fac:	str	x1, [x0, x22]
     fb0:	str	x2, [x0, x20, lsl #3]
     fb4:	cmp	x24, x19
     fb8:	b.lt	f70 <PyModule_AddObject@plt+0x3f0>  // b.tstop
     fbc:	mov	w0, #0x0                   	// #0
     fc0:	ldp	x19, x20, [sp, #16]
     fc4:	ldp	x23, x24, [sp, #48]
     fc8:	b	1034 <PyModule_AddObject@plt+0x4b4>
     fcc:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     fd0:	add	x1, x1, #0x848
     fd4:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
     fd8:	ldr	x0, [x0, #4056]
     fdc:	ldr	x0, [x0]
     fe0:	bl	b10 <PyErr_SetString@plt>
     fe4:	mov	w0, #0xffffffff            	// #-1
     fe8:	ldp	x19, x20, [sp, #16]
     fec:	ldp	x23, x24, [sp, #48]
     ff0:	b	1034 <PyModule_AddObject@plt+0x4b4>
     ff4:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     ff8:	add	x1, x1, #0x860
     ffc:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
    1000:	ldr	x0, [x0, #4024]
    1004:	ldr	x0, [x0]
    1008:	bl	b10 <PyErr_SetString@plt>
    100c:	mov	w0, #0xffffffff            	// #-1
    1010:	ldp	x19, x20, [sp, #16]
    1014:	ldp	x23, x24, [sp, #48]
    1018:	b	1034 <PyModule_AddObject@plt+0x4b4>
    101c:	mov	w0, #0x0                   	// #0
    1020:	ldp	x23, x24, [sp, #48]
    1024:	b	1034 <PyModule_AddObject@plt+0x4b4>
    1028:	mov	w0, #0xffffffff            	// #-1
    102c:	ldp	x19, x20, [sp, #16]
    1030:	ldp	x23, x24, [sp, #48]
    1034:	ldp	x21, x22, [sp, #32]
    1038:	ldp	x29, x30, [sp], #64
    103c:	ret
    1040:	mov	w0, #0x0                   	// #0
    1044:	ldp	x19, x20, [sp, #16]
    1048:	ldp	x23, x24, [sp, #48]
    104c:	b	1034 <PyModule_AddObject@plt+0x4b4>
    1050:	mov	w0, #0xffffffff            	// #-1
    1054:	ldp	x19, x20, [sp, #16]
    1058:	ldp	x23, x24, [sp, #48]
    105c:	b	1034 <PyModule_AddObject@plt+0x4b4>
    1060:	ldp	x19, x20, [sp, #16]
    1064:	ldp	x23, x24, [sp, #48]
    1068:	b	1034 <PyModule_AddObject@plt+0x4b4>
    106c:	stp	x29, x30, [sp, #-64]!
    1070:	mov	x29, sp
    1074:	stp	x23, x24, [sp, #48]
    1078:	ldr	x23, [x0, #16]
    107c:	cmp	x23, x2
    1080:	b.le	1104 <PyModule_AddObject@plt+0x584>
    1084:	stp	x19, x20, [sp, #16]
    1088:	stp	x21, x22, [sp, #32]
    108c:	mov	x21, x0
    1090:	mov	x22, x1
    1094:	mov	x19, x2
    1098:	ldr	x3, [x0, #24]
    109c:	ldr	x0, [x3, x2, lsl #3]
    10a0:	cmp	x2, x1
    10a4:	b.le	114c <PyModule_AddObject@plt+0x5cc>
    10a8:	mov	x20, x19
    10ac:	sub	x19, x19, #0x1
    10b0:	asr	x19, x19, #1
    10b4:	lsl	x24, x19, #3
    10b8:	mov	w2, #0x0                   	// #0
    10bc:	ldr	x1, [x3, x19, lsl #3]
    10c0:	bl	b20 <PyObject_RichCompareBool@plt>
    10c4:	tbnz	w0, #31, 115c <PyModule_AddObject@plt+0x5dc>
    10c8:	ldr	x1, [x21, #16]
    10cc:	cmp	x1, x23
    10d0:	b.ne	1124 <PyModule_AddObject@plt+0x5a4>  // b.any
    10d4:	cbz	w0, 1174 <PyModule_AddObject@plt+0x5f4>
    10d8:	ldr	x3, [x21, #24]
    10dc:	ldr	x1, [x3, x24]
    10e0:	ldr	x0, [x3, x20, lsl #3]
    10e4:	str	x0, [x3, x24]
    10e8:	str	x1, [x3, x20, lsl #3]
    10ec:	cmp	x22, x19
    10f0:	b.lt	10a8 <PyModule_AddObject@plt+0x528>  // b.tstop
    10f4:	mov	w0, #0x0                   	// #0
    10f8:	ldp	x19, x20, [sp, #16]
    10fc:	ldp	x21, x22, [sp, #32]
    1100:	b	1168 <PyModule_AddObject@plt+0x5e8>
    1104:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1108:	add	x1, x1, #0x848
    110c:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
    1110:	ldr	x0, [x0, #4056]
    1114:	ldr	x0, [x0]
    1118:	bl	b10 <PyErr_SetString@plt>
    111c:	mov	w0, #0xffffffff            	// #-1
    1120:	b	1168 <PyModule_AddObject@plt+0x5e8>
    1124:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1128:	add	x1, x1, #0x860
    112c:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
    1130:	ldr	x0, [x0, #4024]
    1134:	ldr	x0, [x0]
    1138:	bl	b10 <PyErr_SetString@plt>
    113c:	mov	w0, #0xffffffff            	// #-1
    1140:	ldp	x19, x20, [sp, #16]
    1144:	ldp	x21, x22, [sp, #32]
    1148:	b	1168 <PyModule_AddObject@plt+0x5e8>
    114c:	mov	w0, #0x0                   	// #0
    1150:	ldp	x19, x20, [sp, #16]
    1154:	ldp	x21, x22, [sp, #32]
    1158:	b	1168 <PyModule_AddObject@plt+0x5e8>
    115c:	mov	w0, #0xffffffff            	// #-1
    1160:	ldp	x19, x20, [sp, #16]
    1164:	ldp	x21, x22, [sp, #32]
    1168:	ldp	x23, x24, [sp, #48]
    116c:	ldp	x29, x30, [sp], #64
    1170:	ret
    1174:	ldp	x19, x20, [sp, #16]
    1178:	ldp	x21, x22, [sp, #32]
    117c:	b	1168 <PyModule_AddObject@plt+0x5e8>
    1180:	stp	x29, x30, [sp, #-64]!
    1184:	mov	x29, sp
    1188:	stp	x21, x22, [sp, #32]
    118c:	ldr	x21, [x0, #16]
    1190:	cmp	x21, x1
    1194:	b.le	11c0 <PyModule_AddObject@plt+0x640>
    1198:	stp	x19, x20, [sp, #16]
    119c:	stp	x23, x24, [sp, #48]
    11a0:	mov	x23, x0
    11a4:	mov	x24, x1
    11a8:	ldr	x3, [x0, #24]
    11ac:	asr	x22, x21, #1
    11b0:	cmp	x1, x21, asr #1
    11b4:	b.ge	1264 <PyModule_AddObject@plt+0x6e4>  // b.tcont
    11b8:	mov	x20, x1
    11bc:	b	11fc <PyModule_AddObject@plt+0x67c>
    11c0:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    11c4:	add	x1, x1, #0x848
    11c8:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
    11cc:	ldr	x0, [x0, #4056]
    11d0:	ldr	x0, [x0]
    11d4:	bl	b10 <PyErr_SetString@plt>
    11d8:	mov	w0, #0xffffffff            	// #-1
    11dc:	b	1280 <PyModule_AddObject@plt+0x700>
    11e0:	ldr	x0, [x3, x19, lsl #3]
    11e4:	ldr	x1, [x3, x20, lsl #3]
    11e8:	str	x1, [x3, x19, lsl #3]
    11ec:	str	x0, [x3, x20, lsl #3]
    11f0:	cmp	x19, x22
    11f4:	b.ge	1268 <PyModule_AddObject@plt+0x6e8>  // b.tcont
    11f8:	mov	x20, x19
    11fc:	lsl	x2, x20, #1
    1200:	add	x19, x2, #0x1
    1204:	add	x0, x2, #0x2
    1208:	cmp	x0, x21
    120c:	b.ge	11e0 <PyModule_AddObject@plt+0x660>  // b.tcont
    1210:	mov	w2, #0x0                   	// #0
    1214:	ldr	x1, [x3, x0, lsl #3]
    1218:	ldr	x0, [x3, x19, lsl #3]
    121c:	bl	b20 <PyObject_RichCompareBool@plt>
    1220:	tbnz	w0, #31, 128c <PyModule_AddObject@plt+0x70c>
    1224:	eor	w0, w0, #0x1
    1228:	add	x19, x19, x0
    122c:	ldr	x3, [x23, #24]
    1230:	ldr	x0, [x23, #16]
    1234:	cmp	x0, x21
    1238:	b.eq	11e0 <PyModule_AddObject@plt+0x660>  // b.none
    123c:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1240:	add	x1, x1, #0x860
    1244:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
    1248:	ldr	x0, [x0, #4024]
    124c:	ldr	x0, [x0]
    1250:	bl	b10 <PyErr_SetString@plt>
    1254:	mov	w0, #0xffffffff            	// #-1
    1258:	ldp	x19, x20, [sp, #16]
    125c:	ldp	x23, x24, [sp, #48]
    1260:	b	1280 <PyModule_AddObject@plt+0x700>
    1264:	mov	x19, x1
    1268:	mov	x2, x19
    126c:	mov	x1, x24
    1270:	mov	x0, x23
    1274:	bl	106c <PyModule_AddObject@plt+0x4ec>
    1278:	ldp	x19, x20, [sp, #16]
    127c:	ldp	x23, x24, [sp, #48]
    1280:	ldp	x21, x22, [sp, #32]
    1284:	ldp	x29, x30, [sp], #64
    1288:	ret
    128c:	mov	w0, #0xffffffff            	// #-1
    1290:	ldp	x19, x20, [sp, #16]
    1294:	ldp	x23, x24, [sp, #48]
    1298:	b	1280 <PyModule_AddObject@plt+0x700>
    129c:	stp	x29, x30, [sp, #-32]!
    12a0:	mov	x29, sp
    12a4:	str	x19, [sp, #16]
    12a8:	ldr	x3, [x0, #8]
    12ac:	ldr	x3, [x3, #168]
    12b0:	tbz	w3, #25, 12f4 <PyModule_AddObject@plt+0x774>
    12b4:	ldr	x3, [x0, #16]
    12b8:	cbz	x3, 1314 <PyModule_AddObject@plt+0x794>
    12bc:	ldr	x3, [x0, #24]
    12c0:	ldr	x19, [x3]
    12c4:	ldr	x3, [x1]
    12c8:	add	x3, x3, #0x1
    12cc:	str	x3, [x1]
    12d0:	ldr	x3, [x0, #24]
    12d4:	str	x1, [x3]
    12d8:	mov	x1, #0x0                   	// #0
    12dc:	blr	x2
    12e0:	cbnz	w0, 1334 <PyModule_AddObject@plt+0x7b4>
    12e4:	mov	x0, x19
    12e8:	ldr	x19, [sp, #16]
    12ec:	ldp	x29, x30, [sp], #32
    12f0:	ret
    12f4:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    12f8:	add	x1, x1, #0x828
    12fc:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
    1300:	ldr	x0, [x0, #4032]
    1304:	ldr	x0, [x0]
    1308:	bl	b10 <PyErr_SetString@plt>
    130c:	mov	x19, #0x0                   	// #0
    1310:	b	12e4 <PyModule_AddObject@plt+0x764>
    1314:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1318:	add	x1, x1, #0x848
    131c:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
    1320:	ldr	x0, [x0, #4056]
    1324:	ldr	x0, [x0]
    1328:	bl	b10 <PyErr_SetString@plt>
    132c:	mov	x19, #0x0                   	// #0
    1330:	b	12e4 <PyModule_AddObject@plt+0x764>
    1334:	ldr	x0, [x19]
    1338:	sub	x0, x0, #0x1
    133c:	str	x0, [x19]
    1340:	cbz	x0, 134c <PyModule_AddObject@plt+0x7cc>
    1344:	mov	x19, #0x0                   	// #0
    1348:	b	12e4 <PyModule_AddObject@plt+0x764>
    134c:	mov	x0, x19
    1350:	bl	b00 <_Py_Dealloc@plt>
    1354:	mov	x19, #0x0                   	// #0
    1358:	b	12e4 <PyModule_AddObject@plt+0x764>
    135c:	stp	x29, x30, [sp, #-32]!
    1360:	mov	x29, sp
    1364:	str	x19, [sp, #16]
    1368:	mov	x19, x1
    136c:	cmp	x2, #0x2
    1370:	b.eq	1390 <PyModule_AddObject@plt+0x810>  // b.none
    1374:	mov	x1, x2
    1378:	mov	x3, #0x2                   	// #2
    137c:	mov	x2, x3
    1380:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    1384:	add	x0, x0, #0x888
    1388:	bl	b50 <_PyArg_CheckPositional@plt>
    138c:	cbz	w0, 13b0 <PyModule_AddObject@plt+0x830>
    1390:	adrp	x2, 0 <__cxa_finalize@plt-0xae0>
    1394:	add	x2, x2, #0xe70
    1398:	ldr	x1, [x19, #8]
    139c:	ldr	x0, [x19]
    13a0:	bl	129c <PyModule_AddObject@plt+0x71c>
    13a4:	ldr	x19, [sp, #16]
    13a8:	ldp	x29, x30, [sp], #32
    13ac:	ret
    13b0:	mov	x0, #0x0                   	// #0
    13b4:	b	13a4 <PyModule_AddObject@plt+0x824>
    13b8:	stp	x29, x30, [sp, #-32]!
    13bc:	mov	x29, sp
    13c0:	str	x19, [sp, #16]
    13c4:	mov	x19, x1
    13c8:	cmp	x2, #0x2
    13cc:	b.eq	13ec <PyModule_AddObject@plt+0x86c>  // b.none
    13d0:	mov	x1, x2
    13d4:	mov	x3, #0x2                   	// #2
    13d8:	mov	x2, x3
    13dc:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    13e0:	add	x0, x0, #0x8a0
    13e4:	bl	b50 <_PyArg_CheckPositional@plt>
    13e8:	cbz	w0, 140c <PyModule_AddObject@plt+0x88c>
    13ec:	adrp	x2, 1000 <PyModule_AddObject@plt+0x480>
    13f0:	add	x2, x2, #0x180
    13f4:	ldr	x1, [x19, #8]
    13f8:	ldr	x0, [x19]
    13fc:	bl	129c <PyModule_AddObject@plt+0x71c>
    1400:	ldr	x19, [sp, #16]
    1404:	ldp	x29, x30, [sp], #32
    1408:	ret
    140c:	mov	x0, #0x0                   	// #0
    1410:	b	1400 <PyModule_AddObject@plt+0x880>
    1414:	stp	x29, x30, [sp, #-48]!
    1418:	mov	x29, sp
    141c:	stp	x19, x20, [sp, #16]
    1420:	mov	x19, x1
    1424:	cmp	x2, #0x2
    1428:	b.eq	1448 <PyModule_AddObject@plt+0x8c8>  // b.none
    142c:	mov	x1, x2
    1430:	mov	x3, #0x2                   	// #2
    1434:	mov	x2, x3
    1438:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    143c:	add	x0, x0, #0x8b0
    1440:	bl	b50 <_PyArg_CheckPositional@plt>
    1444:	cbz	w0, 155c <PyModule_AddObject@plt+0x9dc>
    1448:	ldr	x20, [x19]
    144c:	ldr	x19, [x19, #8]
    1450:	ldr	x0, [x20, #8]
    1454:	ldr	x0, [x0, #168]
    1458:	tbz	w0, #25, 1480 <PyModule_AddObject@plt+0x900>
    145c:	ldr	x0, [x20, #16]
    1460:	cbnz	x0, 14a0 <PyModule_AddObject@plt+0x920>
    1464:	ldr	x0, [x19]
    1468:	add	x0, x0, #0x1
    146c:	str	x0, [x19]
    1470:	mov	x0, x19
    1474:	ldp	x19, x20, [sp, #16]
    1478:	ldp	x29, x30, [sp], #48
    147c:	ret
    1480:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1484:	add	x1, x1, #0x828
    1488:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
    148c:	ldr	x0, [x0, #4032]
    1490:	ldr	x0, [x0]
    1494:	bl	b10 <PyErr_SetString@plt>
    1498:	mov	x19, #0x0                   	// #0
    149c:	b	1470 <PyModule_AddObject@plt+0x8f0>
    14a0:	ldr	x0, [x20, #24]
    14a4:	mov	w2, #0x0                   	// #0
    14a8:	mov	x1, x19
    14ac:	ldr	x0, [x0]
    14b0:	bl	b20 <PyObject_RichCompareBool@plt>
    14b4:	tbnz	w0, #31, 1564 <PyModule_AddObject@plt+0x9e4>
    14b8:	cbz	w0, 1500 <PyModule_AddObject@plt+0x980>
    14bc:	ldr	x0, [x20, #16]
    14c0:	cbz	x0, 1510 <PyModule_AddObject@plt+0x990>
    14c4:	str	x21, [sp, #32]
    14c8:	ldr	x0, [x20, #24]
    14cc:	ldr	x21, [x0]
    14d0:	ldr	x0, [x19]
    14d4:	add	x0, x0, #0x1
    14d8:	str	x0, [x19]
    14dc:	ldr	x0, [x20, #24]
    14e0:	str	x19, [x0]
    14e4:	mov	x1, #0x0                   	// #0
    14e8:	mov	x0, x20
    14ec:	bl	1180 <PyModule_AddObject@plt+0x600>
    14f0:	mov	x19, x21
    14f4:	cbnz	w0, 1530 <PyModule_AddObject@plt+0x9b0>
    14f8:	ldr	x21, [sp, #32]
    14fc:	b	1470 <PyModule_AddObject@plt+0x8f0>
    1500:	ldr	x0, [x19]
    1504:	add	x0, x0, #0x1
    1508:	str	x0, [x19]
    150c:	b	1470 <PyModule_AddObject@plt+0x8f0>
    1510:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1514:	add	x1, x1, #0x848
    1518:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
    151c:	ldr	x0, [x0, #4056]
    1520:	ldr	x0, [x0]
    1524:	bl	b10 <PyErr_SetString@plt>
    1528:	mov	x19, #0x0                   	// #0
    152c:	b	1470 <PyModule_AddObject@plt+0x8f0>
    1530:	ldr	x0, [x21]
    1534:	sub	x0, x0, #0x1
    1538:	str	x0, [x21]
    153c:	mov	x19, #0x0                   	// #0
    1540:	cbz	x0, 154c <PyModule_AddObject@plt+0x9cc>
    1544:	ldr	x21, [sp, #32]
    1548:	b	1470 <PyModule_AddObject@plt+0x8f0>
    154c:	mov	x0, x21
    1550:	bl	b00 <_Py_Dealloc@plt>
    1554:	ldr	x21, [sp, #32]
    1558:	b	1470 <PyModule_AddObject@plt+0x8f0>
    155c:	mov	x19, #0x0                   	// #0
    1560:	b	1470 <PyModule_AddObject@plt+0x8f0>
    1564:	mov	x19, #0x0                   	// #0
    1568:	b	1470 <PyModule_AddObject@plt+0x8f0>
    156c:	stp	x29, x30, [sp, #-64]!
    1570:	mov	x29, sp
    1574:	stp	x19, x20, [sp, #16]
    1578:	str	x23, [sp, #48]
    157c:	mov	x19, x0
    1580:	ldr	x0, [x0, #8]
    1584:	ldr	x0, [x0, #168]
    1588:	tbz	w0, #25, 160c <PyModule_AddObject@plt+0xa8c>
    158c:	stp	x21, x22, [sp, #32]
    1590:	mov	x22, x1
    1594:	ldr	x20, [x19, #16]
    1598:	cbz	x20, 162c <PyModule_AddObject@plt+0xaac>
    159c:	ldr	x0, [x19, #24]
    15a0:	add	x0, x0, x20, lsl #3
    15a4:	ldur	x21, [x0, #-8]
    15a8:	ldr	x0, [x21]
    15ac:	add	x0, x0, #0x1
    15b0:	str	x0, [x21]
    15b4:	mov	x3, #0x0                   	// #0
    15b8:	mov	x2, x20
    15bc:	sub	x1, x20, #0x1
    15c0:	mov	x0, x19
    15c4:	bl	af0 <PyList_SetSlice@plt>
    15c8:	cbnz	w0, 1650 <PyModule_AddObject@plt+0xad0>
    15cc:	mov	x23, x21
    15d0:	cmp	x20, #0x1
    15d4:	b.eq	16ac <PyModule_AddObject@plt+0xb2c>  // b.none
    15d8:	ldr	x0, [x19, #24]
    15dc:	ldr	x23, [x0]
    15e0:	str	x21, [x0]
    15e4:	mov	x1, #0x0                   	// #0
    15e8:	mov	x0, x19
    15ec:	blr	x22
    15f0:	cbnz	w0, 167c <PyModule_AddObject@plt+0xafc>
    15f4:	ldp	x21, x22, [sp, #32]
    15f8:	mov	x0, x23
    15fc:	ldp	x19, x20, [sp, #16]
    1600:	ldr	x23, [sp, #48]
    1604:	ldp	x29, x30, [sp], #64
    1608:	ret
    160c:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1610:	add	x1, x1, #0x828
    1614:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
    1618:	ldr	x0, [x0, #4032]
    161c:	ldr	x0, [x0]
    1620:	bl	b10 <PyErr_SetString@plt>
    1624:	mov	x23, #0x0                   	// #0
    1628:	b	15f8 <PyModule_AddObject@plt+0xa78>
    162c:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1630:	add	x1, x1, #0x848
    1634:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
    1638:	ldr	x0, [x0, #4056]
    163c:	ldr	x0, [x0]
    1640:	bl	b10 <PyErr_SetString@plt>
    1644:	mov	x23, #0x0                   	// #0
    1648:	ldp	x21, x22, [sp, #32]
    164c:	b	15f8 <PyModule_AddObject@plt+0xa78>
    1650:	ldr	x0, [x21]
    1654:	sub	x0, x0, #0x1
    1658:	str	x0, [x21]
    165c:	mov	x23, #0x0                   	// #0
    1660:	cbz	x0, 166c <PyModule_AddObject@plt+0xaec>
    1664:	ldp	x21, x22, [sp, #32]
    1668:	b	15f8 <PyModule_AddObject@plt+0xa78>
    166c:	mov	x0, x21
    1670:	bl	b00 <_Py_Dealloc@plt>
    1674:	ldp	x21, x22, [sp, #32]
    1678:	b	15f8 <PyModule_AddObject@plt+0xa78>
    167c:	ldr	x0, [x23]
    1680:	sub	x0, x0, #0x1
    1684:	str	x0, [x23]
    1688:	cbz	x0, 1698 <PyModule_AddObject@plt+0xb18>
    168c:	mov	x23, #0x0                   	// #0
    1690:	ldp	x21, x22, [sp, #32]
    1694:	b	15f8 <PyModule_AddObject@plt+0xa78>
    1698:	mov	x0, x23
    169c:	bl	b00 <_Py_Dealloc@plt>
    16a0:	mov	x23, #0x0                   	// #0
    16a4:	ldp	x21, x22, [sp, #32]
    16a8:	b	15f8 <PyModule_AddObject@plt+0xa78>
    16ac:	ldp	x21, x22, [sp, #32]
    16b0:	b	15f8 <PyModule_AddObject@plt+0xa78>
    16b4:	stp	x29, x30, [sp, #-16]!
    16b8:	mov	x29, sp
    16bc:	mov	x0, x1
    16c0:	adrp	x1, 0 <__cxa_finalize@plt-0xae0>
    16c4:	add	x1, x1, #0xe70
    16c8:	bl	156c <PyModule_AddObject@plt+0x9ec>
    16cc:	ldp	x29, x30, [sp], #16
    16d0:	ret
    16d4:	stp	x29, x30, [sp, #-16]!
    16d8:	mov	x29, sp
    16dc:	mov	x0, x1
    16e0:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    16e4:	add	x1, x1, #0x180
    16e8:	bl	156c <PyModule_AddObject@plt+0x9ec>
    16ec:	ldp	x29, x30, [sp], #16
    16f0:	ret
    16f4:	stp	x29, x30, [sp, #-32]!
    16f8:	mov	x29, sp
    16fc:	stp	x19, x20, [sp, #16]
    1700:	mov	x19, x1
    1704:	cmp	x2, #0x2
    1708:	b.eq	1728 <PyModule_AddObject@plt+0xba8>  // b.none
    170c:	mov	x1, x2
    1710:	mov	x3, #0x2                   	// #2
    1714:	mov	x2, x3
    1718:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    171c:	add	x0, x0, #0x8c0
    1720:	bl	b50 <_PyArg_CheckPositional@plt>
    1724:	cbz	w0, 17a8 <PyModule_AddObject@plt+0xc28>
    1728:	ldr	x20, [x19]
    172c:	ldr	x1, [x19, #8]
    1730:	ldr	x0, [x20, #8]
    1734:	ldr	x0, [x0, #168]
    1738:	tbz	w0, #25, 1788 <PyModule_AddObject@plt+0xc08>
    173c:	mov	x0, x20
    1740:	bl	b30 <PyList_Append@plt>
    1744:	mov	w1, w0
    1748:	mov	x0, #0x0                   	// #0
    174c:	cbnz	w1, 177c <PyModule_AddObject@plt+0xbfc>
    1750:	ldr	x2, [x20, #16]
    1754:	sub	x2, x2, #0x1
    1758:	mov	x1, #0x0                   	// #0
    175c:	mov	x0, x20
    1760:	bl	106c <PyModule_AddObject@plt+0x4ec>
    1764:	cbnz	w0, 17b0 <PyModule_AddObject@plt+0xc30>
    1768:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
    176c:	ldr	x0, [x0, #4048]
    1770:	ldr	x1, [x0]
    1774:	add	x1, x1, #0x1
    1778:	str	x1, [x0]
    177c:	ldp	x19, x20, [sp, #16]
    1780:	ldp	x29, x30, [sp], #32
    1784:	ret
    1788:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    178c:	add	x1, x1, #0x828
    1790:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11848>
    1794:	ldr	x0, [x0, #4032]
    1798:	ldr	x0, [x0]
    179c:	bl	b10 <PyErr_SetString@plt>
    17a0:	mov	x0, #0x0                   	// #0
    17a4:	b	177c <PyModule_AddObject@plt+0xbfc>
    17a8:	mov	x0, #0x0                   	// #0
    17ac:	b	177c <PyModule_AddObject@plt+0xbfc>
    17b0:	mov	x0, #0x0                   	// #0
    17b4:	b	177c <PyModule_AddObject@plt+0xbfc>

00000000000017b8 <PyInit__heapq@@Base>:
    17b8:	stp	x29, x30, [sp, #-32]!
    17bc:	mov	x29, sp
    17c0:	str	x19, [sp, #16]
    17c4:	mov	w1, #0x3f5                 	// #1013
    17c8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12848>
    17cc:	add	x0, x0, #0x60
    17d0:	bl	b60 <PyModule_Create2@plt>
    17d4:	mov	x19, x0
    17d8:	cbz	x0, 1804 <PyInit__heapq@@Base+0x4c>
    17dc:	mov	x2, #0x0                   	// #0
    17e0:	mov	x1, #0x126f                	// #4719
    17e4:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    17e8:	add	x0, x0, #0x918
    17ec:	bl	b70 <PyUnicode_DecodeUTF8@plt>
    17f0:	mov	x2, x0
    17f4:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    17f8:	add	x1, x1, #0x8d0
    17fc:	mov	x0, x19
    1800:	bl	b80 <PyModule_AddObject@plt>
    1804:	mov	x0, x19
    1808:	ldr	x19, [sp, #16]
    180c:	ldp	x29, x30, [sp], #32
    1810:	ret

Disassembly of section .fini:

0000000000001814 <.fini>:
    1814:	stp	x29, x30, [sp, #-16]!
    1818:	mov	x29, sp
    181c:	ldp	x29, x30, [sp], #16
    1820:	ret
