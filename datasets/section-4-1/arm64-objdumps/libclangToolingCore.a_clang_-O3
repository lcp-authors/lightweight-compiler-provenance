In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclangToolingCore.a_clang_-O3:

Diagnostic.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	add	x0, x0, #0x10
  18:	str	x0, [x19]
  1c:	cbz	x1, 68 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE+0x68>
  20:	mov	x20, x2
  24:	mov	x21, x1
  28:	cmp	x2, #0x10
  2c:	str	x2, [x29, #24]
  30:	b.cc	50 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE+0x50>  // b.lo, b.ul, b.last
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbz	x20, 80 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE+0x80>
  54:	cmp	x20, #0x1
  58:	b.ne	74 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE+0x74>  // b.any
  5c:	ldrb	w8, [x21]
  60:	strb	w8, [x0]
  64:	b	80 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE+0x80>
  68:	str	xzr, [x19, #8]
  6c:	strb	wzr, [x19, #16]
  70:	b	90 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE+0x90>
  74:	mov	x1, x21
  78:	mov	x2, x20
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	str	x8, [x19, #8]
  8c:	strb	wzr, [x9, x8]
  90:	strb	wzr, [x19, #48]!
  94:	mov	x8, #0x3800000000          	// #240518168576
  98:	stp	x19, xzr, [x19, #-16]
  9c:	str	wzr, [x19, #16]
  a0:	stp	xzr, xzr, [x19, #24]
  a4:	str	x8, [x19, #40]
  a8:	ldp	x20, x19, [sp, #32]
  ac:	ldr	x21, [sp, #16]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret

00000000000000b8 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE>:
  b8:	sub	sp, sp, #0x70
  bc:	stp	x29, x30, [sp, #32]
  c0:	str	x25, [sp, #48]
  c4:	stp	x24, x23, [sp, #64]
  c8:	stp	x22, x21, [sp, #80]
  cc:	stp	x20, x19, [sp, #96]
  d0:	add	x29, sp, #0x20
  d4:	mov	x21, x4
  d8:	mov	x20, x3
  dc:	mov	x19, x0
  e0:	add	x0, x0, #0x10
  e4:	str	x0, [x19]
  e8:	cbz	x1, 134 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x7c>
  ec:	mov	x22, x2
  f0:	mov	x23, x1
  f4:	cmp	x2, #0x10
  f8:	str	x2, [sp]
  fc:	b.cc	11c <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x64>  // b.lo, b.ul, b.last
 100:	mov	x1, sp
 104:	mov	x0, x19
 108:	mov	x2, xzr
 10c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 110:	str	x0, [x19]
 114:	ldr	x8, [sp]
 118:	str	x8, [x19, #16]
 11c:	cbz	x22, 14c <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x94>
 120:	cmp	x22, #0x1
 124:	b.ne	140 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x88>  // b.any
 128:	ldrb	w8, [x23]
 12c:	strb	w8, [x0]
 130:	b	14c <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x94>
 134:	str	xzr, [x19, #8]
 138:	strb	wzr, [x19, #16]
 13c:	b	15c <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0xa4>
 140:	mov	x1, x23
 144:	mov	x2, x22
 148:	bl	0 <memcpy>
 14c:	ldr	x8, [sp]
 150:	ldr	x9, [x19]
 154:	str	x8, [x19, #8]
 158:	strb	wzr, [x9, x8]
 15c:	mov	x25, x19
 160:	mov	x8, #0x3800000000          	// #240518168576
 164:	cmp	w21, #0x0
 168:	strb	wzr, [x25, #48]!
 16c:	stp	x25, xzr, [x25, #-16]
 170:	str	wzr, [x25, #16]
 174:	stp	xzr, xzr, [x25, #24]
 178:	str	x8, [x25, #40]
 17c:	b.le	2f8 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x240>
 180:	and	x21, x21, #0xffffffff
 184:	mov	x0, x20
 188:	mov	x1, x21
 18c:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 190:	mov	x8, sp
 194:	add	x22, x8, #0x10
 198:	str	x22, [sp]
 19c:	cbz	x0, 1ec <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x134>
 1a0:	mov	x23, x0
 1a4:	mov	x24, x1
 1a8:	cmp	x1, #0x10
 1ac:	mov	x0, x22
 1b0:	str	x1, [x29, #24]
 1b4:	b.cc	1d4 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x11c>  // b.lo, b.ul, b.last
 1b8:	mov	x0, sp
 1bc:	add	x1, x29, #0x18
 1c0:	mov	x2, xzr
 1c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 1c8:	ldr	x8, [x29, #24]
 1cc:	str	x0, [sp]
 1d0:	str	x8, [sp, #16]
 1d4:	cbz	x24, 204 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x14c>
 1d8:	cmp	x24, #0x1
 1dc:	b.ne	1f8 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x140>  // b.any
 1e0:	ldrb	w8, [x23]
 1e4:	strb	w8, [x0]
 1e8:	b	204 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x14c>
 1ec:	str	xzr, [sp, #8]
 1f0:	strb	wzr, [sp, #16]
 1f4:	b	24c <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x194>
 1f8:	mov	x1, x23
 1fc:	mov	x2, x24
 200:	bl	0 <memcpy>
 204:	ldr	x8, [x29, #24]
 208:	ldr	x9, [sp]
 20c:	str	x8, [sp, #8]
 210:	strb	wzr, [x9, x8]
 214:	ldr	x9, [sp]
 218:	cmp	x9, x22
 21c:	b.eq	24c <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x194>  // b.none
 220:	ldr	x8, [x19, #32]
 224:	cmp	x8, x25
 228:	b.eq	2d8 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x220>  // b.none
 22c:	ldr	x10, [x19, #48]
 230:	str	x9, [x19, #32]
 234:	ldur	q0, [sp, #8]
 238:	stur	q0, [x19, #40]
 23c:	cbz	x8, 2ec <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x234>
 240:	str	x8, [sp]
 244:	str	x10, [sp, #16]
 248:	b	288 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x1d0>
 24c:	ldr	x2, [sp, #8]
 250:	cbz	x2, 274 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x1bc>
 254:	ldr	x0, [x19, #32]
 258:	cmp	x2, #0x1
 25c:	b.ne	26c <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x1b4>  // b.any
 260:	ldrb	w8, [sp, #16]
 264:	strb	w8, [x0]
 268:	b	274 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x1bc>
 26c:	mov	x1, x22
 270:	bl	0 <memcpy>
 274:	ldr	x8, [sp, #8]
 278:	ldr	x9, [x19, #32]
 27c:	str	x8, [x19, #40]
 280:	strb	wzr, [x9, x8]
 284:	ldr	x8, [sp]
 288:	str	xzr, [sp, #8]
 28c:	strb	wzr, [x8]
 290:	ldr	x0, [sp]
 294:	cmp	x0, x22
 298:	b.eq	2a0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x1e8>  // b.none
 29c:	bl	0 <_ZdlPv>
 2a0:	ldr	x8, [x19, #40]
 2a4:	cbz	x8, 2bc <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x204>
 2a8:	mov	x0, x20
 2ac:	mov	x1, x21
 2b0:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 2b4:	lsr	x8, x0, #32
 2b8:	str	w8, [x19, #64]
 2bc:	ldp	x20, x19, [sp, #96]
 2c0:	ldp	x22, x21, [sp, #80]
 2c4:	ldp	x24, x23, [sp, #64]
 2c8:	ldr	x25, [sp, #48]
 2cc:	ldp	x29, x30, [sp, #32]
 2d0:	add	sp, sp, #0x70
 2d4:	ret
 2d8:	mov	x8, xzr
 2dc:	str	x9, [x19, #32]
 2e0:	ldur	q0, [sp, #8]
 2e4:	stur	q0, [x19, #40]
 2e8:	cbnz	x8, 240 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x188>
 2ec:	mov	x8, x22
 2f0:	str	x22, [sp]
 2f4:	b	288 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x1d0>
 2f8:	adrp	x0, 0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 2fc:	adrp	x1, 0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 300:	adrp	x3, 0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 304:	add	x0, x0, #0x0
 308:	add	x1, x1, #0x0
 30c:	add	x3, x3, #0x0
 310:	mov	w2, #0x1b                  	// #27
 314:	bl	0 <__assert_fail>

0000000000000318 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_>:
 318:	sub	sp, sp, #0x50
 31c:	stp	x29, x30, [sp, #16]
 320:	stp	x24, x23, [sp, #32]
 324:	stp	x22, x21, [sp, #48]
 328:	stp	x20, x19, [sp, #64]
 32c:	add	x29, sp, #0x10
 330:	mov	x20, x5
 334:	mov	x21, x4
 338:	mov	w22, w3
 33c:	mov	x19, x0
 340:	add	x0, x0, #0x10
 344:	str	x0, [x19]
 348:	cbz	x1, 394 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_+0x7c>
 34c:	mov	x23, x2
 350:	mov	x24, x1
 354:	cmp	x2, #0x10
 358:	str	x2, [sp, #8]
 35c:	b.cc	37c <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_+0x64>  // b.lo, b.ul, b.last
 360:	add	x1, sp, #0x8
 364:	mov	x0, x19
 368:	mov	x2, xzr
 36c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 370:	str	x0, [x19]
 374:	ldr	x8, [sp, #8]
 378:	str	x8, [x19, #16]
 37c:	cbz	x23, 3ac <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_+0x94>
 380:	cmp	x23, #0x1
 384:	b.ne	3a0 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_+0x88>  // b.any
 388:	ldrb	w8, [x24]
 38c:	strb	w8, [x0]
 390:	b	3ac <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_+0x94>
 394:	str	xzr, [x19, #8]
 398:	strb	wzr, [x19, #16]
 39c:	b	3bc <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_+0xa4>
 3a0:	mov	x1, x24
 3a4:	mov	x2, x23
 3a8:	bl	0 <memcpy>
 3ac:	ldr	x8, [sp, #8]
 3b0:	ldr	x9, [x19]
 3b4:	str	x8, [x19, #8]
 3b8:	strb	wzr, [x9, x8]
 3bc:	adrp	x10, 0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 3c0:	mov	x8, x19
 3c4:	ldr	d0, [x10]
 3c8:	strb	wzr, [x8, #80]!
 3cc:	mov	x9, #0x3800000000          	// #240518168576
 3d0:	mov	x10, x8
 3d4:	strb	wzr, [x10, #-32]!
 3d8:	stp	xzr, x9, [x8, #32]
 3dc:	add	x9, x8, #0x48
 3e0:	add	x0, x8, #0xc8
 3e4:	str	x9, [x8, #56]
 3e8:	str	w22, [x8, #176]
 3ec:	stp	x8, xzr, [x8, #-16]
 3f0:	str	wzr, [x8, #16]
 3f4:	str	xzr, [x8, #24]
 3f8:	stp	x10, xzr, [x8, #-48]
 3fc:	str	d0, [x8, #64]
 400:	str	x0, [x8, #184]
 404:	cbz	x21, 448 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_+0x130>
 408:	cmp	x20, #0x10
 40c:	str	x20, [sp, #8]
 410:	b.cc	430 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_+0x118>  // b.lo, b.ul, b.last
 414:	add	x0, x8, #0xb8
 418:	add	x1, sp, #0x8
 41c:	mov	x2, xzr
 420:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 424:	str	x0, [x19, #264]
 428:	ldr	x8, [sp, #8]
 42c:	str	x8, [x19, #280]
 430:	cbz	x20, 460 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_+0x148>
 434:	cmp	x20, #0x1
 438:	b.ne	454 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_+0x13c>  // b.any
 43c:	ldrb	w8, [x21]
 440:	strb	w8, [x0]
 444:	b	460 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_+0x148>
 448:	str	xzr, [x19, #272]
 44c:	strb	wzr, [x19, #280]
 450:	b	470 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_+0x158>
 454:	mov	x1, x21
 458:	mov	x2, x20
 45c:	bl	0 <memcpy>
 460:	ldr	x8, [sp, #8]
 464:	ldr	x9, [x19, #264]
 468:	str	x8, [x19, #272]
 46c:	strb	wzr, [x9, x8]
 470:	ldp	x20, x19, [sp, #64]
 474:	ldp	x22, x21, [sp, #48]
 478:	ldp	x24, x23, [sp, #32]
 47c:	ldp	x29, x30, [sp, #16]
 480:	add	sp, sp, #0x50
 484:	ret

0000000000000488 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_>:
 488:	sub	sp, sp, #0x60
 48c:	stp	x29, x30, [sp, #16]
 490:	stp	x26, x25, [sp, #32]
 494:	stp	x24, x23, [sp, #48]
 498:	stp	x22, x21, [sp, #64]
 49c:	stp	x20, x19, [sp, #80]
 4a0:	add	x29, sp, #0x10
 4a4:	mov	x20, x7
 4a8:	mov	x21, x6
 4ac:	mov	w22, w5
 4b0:	mov	x23, x4
 4b4:	mov	x24, x3
 4b8:	mov	x19, x0
 4bc:	add	x0, x0, #0x10
 4c0:	str	x0, [x19]
 4c4:	cbz	x1, 510 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0x88>
 4c8:	mov	x25, x2
 4cc:	mov	x26, x1
 4d0:	cmp	x2, #0x10
 4d4:	str	x2, [sp, #8]
 4d8:	b.cc	4f8 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0x70>  // b.lo, b.ul, b.last
 4dc:	add	x1, sp, #0x8
 4e0:	mov	x0, x19
 4e4:	mov	x2, xzr
 4e8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 4ec:	str	x0, [x19]
 4f0:	ldr	x8, [sp, #8]
 4f4:	str	x8, [x19, #16]
 4f8:	cbz	x25, 528 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0xa0>
 4fc:	cmp	x25, #0x1
 500:	b.ne	51c <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0x94>  // b.any
 504:	ldrb	w8, [x26]
 508:	strb	w8, [x0]
 50c:	b	528 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0xa0>
 510:	str	xzr, [x19, #8]
 514:	strb	wzr, [x19, #16]
 518:	b	538 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0xb0>
 51c:	mov	x1, x26
 520:	mov	x2, x25
 524:	bl	0 <memcpy>
 528:	ldr	x8, [sp, #8]
 52c:	ldr	x9, [x19]
 530:	str	x8, [x19, #8]
 534:	strb	wzr, [x9, x8]
 538:	add	x0, x19, #0x20
 53c:	mov	x1, x24
 540:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 544:	adrp	x8, 0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 548:	ldr	d0, [x8]
 54c:	add	x8, x19, #0x98
 550:	mov	x0, x19
 554:	str	x8, [x0, #136]!
 558:	str	d0, [x0, #8]
 55c:	ldr	w8, [x23, #8]
 560:	cbz	w8, 56c <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0xe4>
 564:	mov	x1, x23
 568:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 56c:	add	x0, x19, #0x118
 570:	str	w22, [x19, #256]
 574:	str	x0, [x19, #264]
 578:	cbz	x21, 5bc <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0x134>
 57c:	cmp	x20, #0x10
 580:	str	x20, [sp, #8]
 584:	b.cc	5a4 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0x11c>  // b.lo, b.ul, b.last
 588:	add	x0, x19, #0x108
 58c:	add	x1, sp, #0x8
 590:	mov	x2, xzr
 594:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 598:	str	x0, [x19, #264]
 59c:	ldr	x8, [sp, #8]
 5a0:	str	x8, [x19, #280]
 5a4:	cbz	x20, 5d4 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0x14c>
 5a8:	cmp	x20, #0x1
 5ac:	b.ne	5c8 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0x140>  // b.any
 5b0:	ldrb	w8, [x21]
 5b4:	strb	w8, [x0]
 5b8:	b	5d4 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0x14c>
 5bc:	str	xzr, [x19, #272]
 5c0:	strb	wzr, [x19, #280]
 5c4:	b	5e4 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0x15c>
 5c8:	mov	x1, x21
 5cc:	mov	x2, x20
 5d0:	bl	0 <memcpy>
 5d4:	ldr	x8, [sp, #8]
 5d8:	ldr	x9, [x19, #264]
 5dc:	str	x8, [x19, #272]
 5e0:	strb	wzr, [x9, x8]
 5e4:	ldp	x20, x19, [sp, #80]
 5e8:	ldp	x22, x21, [sp, #64]
 5ec:	ldp	x24, x23, [sp, #48]
 5f0:	ldp	x26, x25, [sp, #32]
 5f4:	ldp	x29, x30, [sp, #16]
 5f8:	add	sp, sp, #0x60
 5fc:	ret

0000000000000600 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE>:
 600:	ldr	w8, [x0, #116]
 604:	cbz	w8, 610 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0x10>
 608:	add	x0, x0, #0x68
 60c:	ret
 610:	ldr	w11, [x0, #144]
 614:	ldr	x8, [x0, #136]
 618:	mov	w9, #0x68                  	// #104
 61c:	mul	x10, x11, x9
 620:	cmp	x10, #0x139
 624:	add	x9, x8, x10
 628:	b.cc	670 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0x70>  // b.lo, b.ul, b.last
 62c:	lsr	x10, x11, #2
 630:	add	x10, x10, #0x1
 634:	add	x8, x8, #0xd0
 638:	ldur	w11, [x8, #-124]
 63c:	cbnz	w11, 6e4 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xe4>
 640:	ldur	w11, [x8, #-20]
 644:	cbnz	w11, 6f8 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xf8>
 648:	ldr	w11, [x8, #84]
 64c:	cbnz	w11, 6c0 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xc0>
 650:	ldr	w11, [x8, #188]
 654:	cbnz	w11, 70c <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0x10c>
 658:	sub	x10, x10, #0x1
 65c:	cmp	x10, #0x1
 660:	add	x8, x8, #0x1a0
 664:	b.gt	638 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0x38>
 668:	sub	x8, x8, #0xd0
 66c:	sub	x10, x9, x8
 670:	mov	x11, #0x4ec5                	// #20165
 674:	movk	x11, #0xc4ec, lsl #16
 678:	movk	x11, #0xec4e, lsl #32
 67c:	asr	x10, x10, #3
 680:	movk	x11, #0x4ec4, lsl #48
 684:	mul	x10, x10, x11
 688:	cmp	x10, #0x1
 68c:	b.eq	6b8 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xb8>  // b.none
 690:	cmp	x10, #0x2
 694:	b.eq	6ac <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xac>  // b.none
 698:	cmp	x10, #0x3
 69c:	b.ne	6d0 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xd0>  // b.any
 6a0:	ldr	w10, [x8, #84]
 6a4:	cbnz	w10, 6c0 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xc0>
 6a8:	add	x8, x8, #0x68
 6ac:	ldr	w10, [x8, #84]
 6b0:	cbnz	w10, 6c0 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xc0>
 6b4:	add	x8, x8, #0x68
 6b8:	ldr	w10, [x8, #84]
 6bc:	cbz	w10, 6d0 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xd0>
 6c0:	add	x10, x8, #0x48
 6c4:	cmp	x8, x9
 6c8:	csel	x0, xzr, x10, eq  // eq = none
 6cc:	ret
 6d0:	mov	x8, x9
 6d4:	add	x10, x8, #0x48
 6d8:	cmp	x8, x9
 6dc:	csel	x0, xzr, x10, eq  // eq = none
 6e0:	ret
 6e4:	sub	x8, x8, #0xd0
 6e8:	add	x10, x8, #0x48
 6ec:	cmp	x8, x9
 6f0:	csel	x0, xzr, x10, eq  // eq = none
 6f4:	ret
 6f8:	sub	x8, x8, #0x68
 6fc:	add	x10, x8, #0x48
 700:	cmp	x8, x9
 704:	csel	x0, xzr, x10, eq  // eq = none
 708:	ret
 70c:	add	x8, x8, #0x68
 710:	add	x10, x8, #0x48
 714:	cmp	x8, x9
 718:	csel	x0, xzr, x10, eq  // eq = none
 71c:	ret

Disassembly of section .text._ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE:

0000000000000000 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #272]
  14:	and	w20, w1, #0x7fffffff
  18:	mov	w2, w20
  1c:	mov	x19, x0
  20:	mov	x1, x8
  24:	bl	0 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE>
  28:	tbz	w0, #0, 90 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE+0x90>
  2c:	ldr	w0, [x19, #272]
  30:	add	w8, w0, #0x1
  34:	cmp	w8, #0x1
  38:	sturb	wzr, [x29, #-4]
  3c:	b.ls	ac <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE+0xac>  // b.plast
  40:	mov	w1, w0
  44:	tbnz	w1, #31, d4 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE+0xd4>
  48:	ldr	w8, [x19, #208]
  4c:	cmp	w8, w1
  50:	b.ls	10c <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE+0x10c>  // b.plast
  54:	ldr	x8, [x19, #200]
  58:	mov	w9, #0x28                  	// #40
  5c:	madd	x0, x1, x9, x8
  60:	ldr	w8, [x0]
  64:	tbnz	w8, #31, bc <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE+0xbc>
  68:	ldr	x8, [x0, #16]
  6c:	ands	x8, x8, #0xfffffffffffffff8
  70:	b.eq	bc <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE+0xbc>  // b.none
  74:	ldr	x8, [x8, #8]
  78:	cbz	x8, bc <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE+0xbc>
  7c:	ldp	x0, x1, [x8]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	add	sp, sp, #0x30
  8c:	ret
  90:	mov	x0, x19
  94:	mov	w1, w20
  98:	bl	0 <_ZNK5clang13SourceManager13getFileIDSlowEj>
  9c:	add	w8, w0, #0x1
  a0:	cmp	w8, #0x1
  a4:	sturb	wzr, [x29, #-4]
  a8:	b.hi	40 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE+0x40>  // b.pmore
  ac:	mov	w8, #0x1                   	// #1
  b0:	sturb	w8, [x29, #-4]
  b4:	ldr	w8, [x19, #208]
  b8:	cbz	w8, ec <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE+0xec>
  bc:	mov	x0, xzr
  c0:	mov	x1, xzr
  c4:	ldp	x20, x19, [sp, #32]
  c8:	ldp	x29, x30, [sp, #16]
  cc:	add	sp, sp, #0x30
  d0:	ret
  d4:	sub	x2, x29, #0x4
  d8:	mov	x0, x19
  dc:	bl	0 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE>
  e0:	ldurb	w8, [x29, #-4]
  e4:	cbnz	w8, bc <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE+0xbc>
  e8:	b	60 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE+0x60>
  ec:	adrp	x0, 0 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE>
  f0:	adrp	x1, 0 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE>
  f4:	adrp	x3, 0 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x99                  	// #153
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE>
 110:	adrp	x1, 0 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE>
 114:	adrp	x3, 0 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x693                 	// #1683
 128:	bl	0 <__assert_fail>

Disassembly of section .text._ZN5clang7tooling17DiagnosticMessageC2ERKS1_:

0000000000000000 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x20]
  24:	ldp	x21, x22, [x1]
  28:	mov	x19, x1
  2c:	cbnz	x21, 34 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x34>
  30:	cbnz	x22, 1e4 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x1e4>
  34:	cmp	x22, #0x10
  38:	str	x22, [x29, #24]
  3c:	b.cc	5c <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x5c>  // b.lo, b.ul, b.last
  40:	add	x1, x29, #0x18
  44:	mov	x0, x20
  48:	mov	x2, xzr
  4c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  50:	str	x0, [x20]
  54:	ldr	x8, [x29, #24]
  58:	str	x8, [x20, #16]
  5c:	cbz	x22, 80 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x80>
  60:	cmp	x22, #0x1
  64:	b.ne	74 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x74>  // b.any
  68:	ldrb	w8, [x21]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x80>
  74:	mov	x1, x21
  78:	mov	x2, x22
  7c:	bl	0 <memcpy>
  80:	ldr	x9, [x29, #24]
  84:	ldr	x10, [x20]
  88:	add	x0, x20, #0x30
  8c:	mov	x8, x20
  90:	str	x9, [x20, #8]
  94:	strb	wzr, [x10, x9]
  98:	str	x0, [x8, #32]!
  9c:	ldp	x21, x22, [x19, #32]
  a0:	cbnz	x21, a8 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0xa8>
  a4:	cbnz	x22, 1e4 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x1e4>
  a8:	cmp	x22, #0x10
  ac:	str	x22, [x29, #24]
  b0:	b.cc	d0 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0xd0>  // b.lo, b.ul, b.last
  b4:	add	x1, x29, #0x18
  b8:	mov	x0, x8
  bc:	mov	x2, xzr
  c0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  c4:	str	x0, [x20, #32]
  c8:	ldr	x8, [x29, #24]
  cc:	str	x8, [x20, #48]
  d0:	cbz	x22, f4 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0xf4>
  d4:	cmp	x22, #0x1
  d8:	b.ne	e8 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0xe8>  // b.any
  dc:	ldrb	w8, [x21]
  e0:	strb	w8, [x0]
  e4:	b	f4 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0xf4>
  e8:	mov	x1, x21
  ec:	mov	x2, x22
  f0:	bl	0 <memcpy>
  f4:	ldr	x8, [x29, #24]
  f8:	ldr	x9, [x20, #32]
  fc:	mov	x21, x20
 100:	str	x8, [x20, #40]
 104:	strb	wzr, [x9, x8]
 108:	ldr	w8, [x19, #64]
 10c:	mov	x9, #0x3800000000          	// #240518168576
 110:	str	xzr, [x21, #72]!
 114:	stp	xzr, x9, [x21, #8]
 118:	stur	w8, [x21, #-8]
 11c:	ldr	w8, [x19, #84]
 120:	cbz	w8, 1cc <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x1cc>
 124:	ldr	w1, [x19, #80]
 128:	mov	x0, x21
 12c:	bl	0 <_ZN4llvm13StringMapImpl4initEj>
 130:	ldr	x10, [x20, #72]
 134:	ldr	w9, [x20, #80]
 138:	ldur	x11, [x19, #84]
 13c:	ldr	x8, [x19, #72]
 140:	stur	x11, [x20, #84]
 144:	cbz	w9, 1cc <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x1cc>
 148:	lsl	x11, x9, #3
 14c:	add	x10, x10, x11
 150:	add	x11, x8, x11
 154:	mov	x22, xzr
 158:	add	x20, x20, #0x60
 15c:	add	x23, x10, #0x8
 160:	add	x24, x11, #0x8
 164:	sub	x25, x9, #0x1
 168:	ldr	x3, [x8, x22, lsl #3]
 16c:	cbz	x3, 178 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x178>
 170:	cmn	x3, #0x8
 174:	b.ne	18c <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x18c>  // b.any
 178:	ldr	x8, [x21]
 17c:	str	x3, [x8, x22, lsl #3]
 180:	cmp	x25, x22
 184:	b.ne	1b8 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x1b8>  // b.any
 188:	b	1cc <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x1cc>
 18c:	add	x0, x3, #0x38
 190:	ldr	x1, [x3], #8
 194:	mov	x2, x20
 198:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_>
 19c:	ldr	x8, [x21]
 1a0:	str	x0, [x8, x22, lsl #3]
 1a4:	lsl	x8, x22, #2
 1a8:	ldr	w9, [x24, x8]
 1ac:	str	w9, [x23, x8]
 1b0:	cmp	x25, x22
 1b4:	b.eq	1cc <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x1cc>  // b.none
 1b8:	ldr	x8, [x19, #72]
 1bc:	add	x22, x22, #0x1
 1c0:	ldr	x3, [x8, x22, lsl #3]
 1c4:	cbnz	x3, 170 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x170>
 1c8:	b	178 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_+0x178>
 1cc:	ldp	x20, x19, [sp, #64]
 1d0:	ldp	x22, x21, [sp, #48]
 1d4:	ldp	x24, x23, [sp, #32]
 1d8:	ldr	x25, [sp, #16]
 1dc:	ldp	x29, x30, [sp], #80
 1e0:	ret
 1e4:	adrp	x0, 0 <_ZN5clang7tooling17DiagnosticMessageC2ERKS1_>
 1e8:	add	x0, x0, #0x0
 1ec:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb:

0000000000000000 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #224]
   c:	mov	w9, #0xfffffffe            	// #-2
  10:	sub	w1, w9, w1
  14:	cmp	w8, w1
  18:	b.ls	64 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb+0x64>  // b.plast
  1c:	ldr	w8, [x0, #256]
  20:	cmp	w8, w1
  24:	b.ls	84 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb+0x84>  // b.plast
  28:	ldr	x9, [x0, #248]
  2c:	ubfx	x8, x1, #6, #26
  30:	cmp	x9, x8
  34:	b.ls	a4 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb+0xa4>  // b.plast
  38:	ldr	x9, [x0, #240]
  3c:	ldr	x8, [x9, x8, lsl #3]
  40:	lsr	x8, x8, x1
  44:	tbz	w8, #0, 5c <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb+0x5c>
  48:	ldr	x8, [x0, #216]
  4c:	mov	w9, #0x28                  	// #40
  50:	madd	x0, x1, x9, x8
  54:	ldp	x29, x30, [sp], #16
  58:	ret
  5c:	ldp	x29, x30, [sp], #16
  60:	b	0 <_ZNK5clang13SourceManager13loadSLocEntryEjPb>
  64:	adrp	x0, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  68:	adrp	x1, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  6c:	adrp	x3, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x69d                 	// #1693
  80:	bl	0 <__assert_fail>
  84:	adrp	x0, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  88:	adrp	x1, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  8c:	adrp	x3, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x1f0                 	// #496
  a0:	bl	0 <__assert_fail>
  a4:	adrp	x0, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  a8:	adrp	x1, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  ac:	adrp	x3, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  b0:	add	x0, x0, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x1ab                 	// #427
  c0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj:

0000000000000000 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x1
  14:	add	w8, w21, #0x1
  18:	mov	w19, w2
  1c:	cmp	w8, #0x1
  20:	mov	x20, x0
  24:	b.hi	48 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x48>  // b.pmore
  28:	ldr	w8, [x20, #208]
  2c:	cbz	w8, 12c <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x12c>
  30:	ldr	x0, [x20, #200]
  34:	ldr	w8, [x0]
  38:	and	w8, w8, #0x7fffffff
  3c:	cmp	w8, w19
  40:	b.hi	78 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x78>  // b.pmore
  44:	b	ac <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0xac>
  48:	tbnz	w21, #31, 8c <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x8c>
  4c:	ldr	w8, [x20, #208]
  50:	cmp	w8, w21
  54:	b.ls	14c <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x14c>  // b.plast
  58:	ldr	x8, [x20, #200]
  5c:	and	x9, x21, #0xffffffff
  60:	mov	w10, #0x28                  	// #40
  64:	madd	x0, x9, x10, x8
  68:	ldr	w8, [x0]
  6c:	and	w8, w8, #0x7fffffff
  70:	cmp	w8, w19
  74:	b.ls	ac <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0xac>  // b.plast
  78:	mov	w0, wzr
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret
  8c:	mov	x0, x20
  90:	mov	w1, w21
  94:	mov	x2, xzr
  98:	bl	0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
  9c:	ldr	w8, [x0]
  a0:	and	w8, w8, #0x7fffffff
  a4:	cmp	w8, w19
  a8:	b.hi	78 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x78>  // b.pmore
  ac:	cmn	w21, #0x2
  b0:	b.ne	c8 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0xc8>  // b.any
  b4:	mov	w0, #0x1                   	// #1
  b8:	ldp	x20, x19, [sp, #32]
  bc:	ldr	x21, [sp, #16]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret
  c8:	ldr	w8, [x20, #208]
  cc:	add	w1, w21, #0x1
  d0:	cmp	w1, w8
  d4:	b.ne	e0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0xe0>  // b.any
  d8:	ldr	w8, [x20, #232]
  dc:	b	114 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x114>
  e0:	cmn	w21, #0x2
  e4:	b.gt	f8 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0xf8>
  e8:	mov	x0, x20
  ec:	mov	x2, xzr
  f0:	bl	0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
  f4:	b	10c <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x10c>
  f8:	cmp	w8, w1
  fc:	b.ls	14c <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x14c>  // b.plast
 100:	ldr	x8, [x20, #200]
 104:	mov	w9, #0x28                  	// #40
 108:	umaddl	x0, w1, w9, x8
 10c:	ldr	w8, [x0]
 110:	and	w8, w8, #0x7fffffff
 114:	cmp	w8, w19
 118:	cset	w0, hi  // hi = pmore
 11c:	ldp	x20, x19, [sp, #32]
 120:	ldr	x21, [sp, #16]
 124:	ldp	x29, x30, [sp], #48
 128:	ret
 12c:	adrp	x0, 0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
 130:	adrp	x1, 0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
 134:	adrp	x3, 0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x99                  	// #153
 148:	bl	0 <__assert_fail>
 14c:	adrp	x0, 0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
 150:	adrp	x1, 0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
 154:	adrp	x3, 0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x693                 	// #1683
 168:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE:

0000000000000000 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #272]
  14:	and	w19, w1, #0x7fffffff
  18:	mov	w2, w19
  1c:	mov	x20, x0
  20:	mov	x1, x8
  24:	bl	0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  28:	tbz	w0, #0, 74 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0x74>
  2c:	ldr	w0, [x20, #272]
  30:	add	w8, w0, #0x1
  34:	cmp	w8, #0x1
  38:	strb	wzr, [x29, #28]
  3c:	b.ls	90 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0x90>  // b.plast
  40:	mov	w21, w0
  44:	tbnz	w21, #31, bc <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0xbc>
  48:	ldr	w8, [x20, #208]
  4c:	cmp	w8, w21
  50:	b.ls	f8 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0xf8>  // b.plast
  54:	ldr	x8, [x20, #200]
  58:	mov	w9, #0x28                  	// #40
  5c:	madd	x0, x21, x9, x8
  60:	ldr	w8, [x0]
  64:	and	w8, w8, #0x7fffffff
  68:	sub	w8, w19, w8
  6c:	lsl	x8, x8, #32
  70:	b	a8 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0xa8>
  74:	mov	x0, x20
  78:	mov	w1, w19
  7c:	bl	0 <_ZNK5clang13SourceManager13getFileIDSlowEj>
  80:	add	w8, w0, #0x1
  84:	cmp	w8, #0x1
  88:	strb	wzr, [x29, #28]
  8c:	b.hi	40 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0x40>  // b.pmore
  90:	mov	w8, #0x1                   	// #1
  94:	strb	w8, [x29, #28]
  98:	ldr	w8, [x20, #208]
  9c:	cbz	w8, d8 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0xd8>
  a0:	mov	x21, xzr
  a4:	mov	x8, xzr
  a8:	orr	x0, x8, x21
  ac:	ldp	x20, x19, [sp, #32]
  b0:	ldr	x21, [sp, #16]
  b4:	ldp	x29, x30, [sp], #48
  b8:	ret
  bc:	add	x2, x29, #0x1c
  c0:	mov	x0, x20
  c4:	mov	w1, w21
  c8:	bl	0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  cc:	ldrb	w8, [x29, #28]
  d0:	cbnz	w8, a0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0xa0>
  d4:	b	60 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0x60>
  d8:	adrp	x0, 0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  dc:	adrp	x1, 0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  e0:	adrp	x3, 0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x99                  	// #153
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x0, 0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  fc:	adrp	x1, 0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
 100:	adrp	x3, 0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x693                 	// #1683
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_:

0000000000000000 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	x23, x1, #0x39
  18:	mov	x20, x0
  1c:	mov	x0, x23
  20:	mov	x21, x3
  24:	mov	x19, x1
  28:	bl	0 <malloc>
  2c:	mov	x22, x0
  30:	cbnz	x0, 70 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_+0x70>
  34:	cbz	x23, 50 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_+0x50>
  38:	adrp	x0, 0 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_>
  3c:	add	x0, x0, #0x0
  40:	mov	w1, #0x1                   	// #1
  44:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  48:	mov	x22, xzr
  4c:	b	70 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_+0x70>
  50:	mov	w0, #0x1                   	// #1
  54:	bl	0 <malloc>
  58:	mov	x22, x0
  5c:	cbnz	x0, 70 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_+0x70>
  60:	adrp	x0, 0 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_>
  64:	add	x0, x0, #0x0
  68:	mov	w1, #0x1                   	// #1
  6c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  70:	mov	x2, x22
  74:	str	x19, [x22]
  78:	str	wzr, [x2, #16]!
  7c:	stp	xzr, x2, [x22, #24]
  80:	stp	x2, xzr, [x22, #40]
  84:	ldr	x1, [x21, #16]
  88:	cbz	x1, d0 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_+0xd0>
  8c:	add	x0, x22, #0x8
  90:	add	x3, x29, #0x18
  94:	str	x0, [x29, #24]
  98:	bl	0 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_>
  9c:	mov	x9, x0
  a0:	mov	x8, x9
  a4:	ldr	x9, [x9, #16]
  a8:	cbnz	x9, a0 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_+0xa0>
  ac:	mov	x9, x0
  b0:	str	x8, [x22, #32]
  b4:	mov	x8, x9
  b8:	ldr	x9, [x9, #24]
  bc:	cbnz	x9, b4 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_+0xb4>
  c0:	str	x8, [x22, #40]
  c4:	ldr	x8, [x21, #40]
  c8:	str	x0, [x22, #24]
  cc:	str	x8, [x22, #48]
  d0:	add	x21, x22, #0x38
  d4:	cbz	x19, e8 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_+0xe8>
  d8:	mov	x0, x21
  dc:	mov	x1, x20
  e0:	mov	x2, x19
  e4:	bl	0 <memcpy>
  e8:	strb	wzr, [x21, x19]
  ec:	mov	x0, x22
  f0:	ldp	x20, x19, [sp, #48]
  f4:	ldp	x22, x21, [sp, #32]
  f8:	ldr	x23, [sp, #16]
  fc:	ldp	x29, x30, [sp], #64
 100:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	mov	w0, #0x68                  	// #104
  20:	mov	x19, x3
  24:	mov	x23, x2
  28:	mov	x22, x1
  2c:	add	x24, x1, #0x20
  30:	bl	0 <_Znwm>
  34:	mov	x21, x0
  38:	add	x0, x0, #0x20
  3c:	mov	x1, x24
  40:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  44:	ldr	w8, [x22]
  48:	stp	xzr, xzr, [x21, #16]
  4c:	str	x23, [x21, #8]
  50:	str	w8, [x21]
  54:	ldr	x1, [x22, #24]
  58:	cbz	x1, 70 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x70>
  5c:	mov	x0, x20
  60:	mov	x2, x21
  64:	mov	x3, x19
  68:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  6c:	str	x0, [x21, #24]
  70:	ldr	x24, [x22, #16]
  74:	cbz	x24, dc <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0xdc>
  78:	mov	x25, x21
  7c:	b	8c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x8c>
  80:	ldr	x24, [x24, #16]
  84:	mov	x25, x22
  88:	cbz	x24, dc <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0xdc>
  8c:	mov	w0, #0x68                  	// #104
  90:	add	x23, x24, #0x20
  94:	bl	0 <_Znwm>
  98:	mov	x22, x0
  9c:	add	x0, x0, #0x20
  a0:	mov	x1, x23
  a4:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  a8:	ldr	w8, [x24]
  ac:	stp	xzr, xzr, [x22, #16]
  b0:	str	w8, [x22]
  b4:	str	x22, [x25, #16]
  b8:	str	x25, [x22, #8]
  bc:	ldr	x1, [x24, #24]
  c0:	cbz	x1, 80 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x80>
  c4:	mov	x0, x20
  c8:	mov	x2, x22
  cc:	mov	x3, x19
  d0:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  d4:	str	x0, [x22, #24]
  d8:	b	80 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x80>
  dc:	mov	x0, x21
  e0:	ldp	x20, x19, [sp, #64]
  e4:	ldp	x22, x21, [sp, #48]
  e8:	ldp	x24, x23, [sp, #32]
  ec:	ldr	x25, [sp, #16]
  f0:	ldp	x29, x30, [sp], #80
  f4:	ret

Disassembly of section .text._ZN5clang7tooling11ReplacementC2ERKS1_:

0000000000000000 <_ZN5clang7tooling11ReplacementC2ERKS1_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x19, x0
  18:	add	x0, x0, #0x10
  1c:	str	x0, [x19]
  20:	ldp	x21, x22, [x1]
  24:	mov	x20, x1
  28:	cbnz	x21, 30 <_ZN5clang7tooling11ReplacementC2ERKS1_+0x30>
  2c:	cbnz	x22, 11c <_ZN5clang7tooling11ReplacementC2ERKS1_+0x11c>
  30:	cmp	x22, #0x10
  34:	str	x22, [sp, #8]
  38:	b.cc	58 <_ZN5clang7tooling11ReplacementC2ERKS1_+0x58>  // b.lo, b.ul, b.last
  3c:	add	x1, sp, #0x8
  40:	mov	x0, x19
  44:	mov	x2, xzr
  48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  4c:	str	x0, [x19]
  50:	ldr	x8, [sp, #8]
  54:	str	x8, [x19, #16]
  58:	cbz	x22, 7c <_ZN5clang7tooling11ReplacementC2ERKS1_+0x7c>
  5c:	cmp	x22, #0x1
  60:	b.ne	70 <_ZN5clang7tooling11ReplacementC2ERKS1_+0x70>  // b.any
  64:	ldrb	w8, [x21]
  68:	strb	w8, [x0]
  6c:	b	7c <_ZN5clang7tooling11ReplacementC2ERKS1_+0x7c>
  70:	mov	x1, x21
  74:	mov	x2, x22
  78:	bl	0 <memcpy>
  7c:	ldr	x8, [sp, #8]
  80:	ldr	x9, [x19]
  84:	add	x0, x19, #0x38
  88:	str	x8, [x19, #8]
  8c:	strb	wzr, [x9, x8]
  90:	ldr	x9, [x20, #32]
  94:	mov	x8, x19
  98:	str	x0, [x8, #40]!
  9c:	stur	x9, [x8, #-8]
  a0:	ldp	x21, x20, [x20, #40]
  a4:	cbnz	x21, ac <_ZN5clang7tooling11ReplacementC2ERKS1_+0xac>
  a8:	cbnz	x20, 11c <_ZN5clang7tooling11ReplacementC2ERKS1_+0x11c>
  ac:	cmp	x20, #0x10
  b0:	str	x20, [sp, #8]
  b4:	b.cc	d4 <_ZN5clang7tooling11ReplacementC2ERKS1_+0xd4>  // b.lo, b.ul, b.last
  b8:	add	x1, sp, #0x8
  bc:	mov	x0, x8
  c0:	mov	x2, xzr
  c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  c8:	str	x0, [x19, #40]
  cc:	ldr	x8, [sp, #8]
  d0:	str	x8, [x19, #56]
  d4:	cbz	x20, f8 <_ZN5clang7tooling11ReplacementC2ERKS1_+0xf8>
  d8:	cmp	x20, #0x1
  dc:	b.ne	ec <_ZN5clang7tooling11ReplacementC2ERKS1_+0xec>  // b.any
  e0:	ldrb	w8, [x21]
  e4:	strb	w8, [x0]
  e8:	b	f8 <_ZN5clang7tooling11ReplacementC2ERKS1_+0xf8>
  ec:	mov	x1, x21
  f0:	mov	x2, x20
  f4:	bl	0 <memcpy>
  f8:	ldr	x8, [sp, #8]
  fc:	ldr	x9, [x19, #40]
 100:	str	x8, [x19, #48]
 104:	strb	wzr, [x9, x8]
 108:	ldp	x20, x19, [sp, #48]
 10c:	ldp	x22, x21, [sp, #32]
 110:	ldp	x29, x30, [sp, #16]
 114:	add	sp, sp, #0x40
 118:	ret
 11c:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC2ERKS1_>
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_:

0000000000000000 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x19, x0
  1c:	cmp	x0, x1
  20:	b.eq	1c8 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x1c8>  // b.none
  24:	ldr	w20, [x1, #8]
  28:	ldr	w24, [x19, #8]
  2c:	mov	x21, x1
  30:	cmp	w24, w20
  34:	b.cs	ec <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0xec>  // b.hs, b.nlast
  38:	ldr	w8, [x19, #12]
  3c:	cmp	w8, w20
  40:	b.cs	128 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x128>  // b.hs, b.nlast
  44:	cbz	w24, 15c <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x15c>
  48:	ldr	x23, [x19]
  4c:	mov	w8, #0x68                  	// #104
  50:	madd	x24, x24, x8, x23
  54:	b	60 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x60>
  58:	cmp	x24, x23
  5c:	b.eq	15c <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x15c>  // b.none
  60:	ldur	w8, [x24, #-20]
  64:	cbz	w8, b4 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0xb4>
  68:	ldur	w8, [x24, #-24]
  6c:	cbz	w8, b4 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0xb4>
  70:	mov	x25, xzr
  74:	lsl	x26, x8, #3
  78:	b	88 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x88>
  7c:	add	x25, x25, #0x8
  80:	cmp	x26, x25
  84:	b.eq	b4 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0xb4>  // b.none
  88:	ldur	x8, [x24, #-32]
  8c:	ldr	x22, [x8, x25]
  90:	cmn	x22, #0x8
  94:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  98:	b.eq	7c <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x7c>  // b.none
  9c:	ldr	x1, [x22, #24]
  a0:	add	x0, x22, #0x8
  a4:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
  a8:	mov	x0, x22
  ac:	bl	0 <free>
  b0:	b	7c <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x7c>
  b4:	ldur	x0, [x24, #-32]
  b8:	bl	0 <free>
  bc:	ldur	x0, [x24, #-72]
  c0:	sub	x8, x24, #0x38
  c4:	cmp	x0, x8
  c8:	b.eq	d0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0xd0>  // b.none
  cc:	bl	0 <_ZdlPv>
  d0:	ldur	x0, [x24, #-104]
  d4:	sub	x8, x24, #0x58
  d8:	sub	x24, x24, #0x68
  dc:	cmp	x0, x8
  e0:	b.eq	58 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x58>  // b.none
  e4:	bl	0 <_ZdlPv>
  e8:	b	58 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x58>
  ec:	ldr	x22, [x19]
  f0:	cbz	w20, 1e4 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x1e4>
  f4:	ldr	x21, [x21]
  f8:	add	x23, x20, #0x1
  fc:	mov	x0, x22
 100:	mov	x1, x21
 104:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 108:	sub	x23, x23, #0x1
 10c:	add	x21, x21, #0x68
 110:	cmp	x23, #0x1
 114:	add	x22, x22, #0x68
 118:	b.gt	fc <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0xfc>
 11c:	ldr	x8, [x19]
 120:	ldr	w24, [x19, #8]
 124:	b	1e8 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x1e8>
 128:	cbz	w24, 284 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x284>
 12c:	ldr	x22, [x21]
 130:	ldr	x23, [x19]
 134:	add	x25, x24, #0x1
 138:	mov	x0, x23
 13c:	mov	x1, x22
 140:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 144:	sub	x25, x25, #0x1
 148:	add	x22, x22, #0x68
 14c:	cmp	x25, #0x1
 150:	add	x23, x23, #0x68
 154:	b.gt	138 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x138>
 158:	b	170 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x170>
 15c:	mov	x0, x19
 160:	mov	x1, x20
 164:	str	wzr, [x19, #8]
 168:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 16c:	mov	x24, xzr
 170:	ldr	w8, [x21, #8]
 174:	cmp	x24, x8
 178:	b.eq	1b8 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x1b8>  // b.none
 17c:	ldr	x9, [x21]
 180:	ldr	x10, [x19]
 184:	mov	w11, #0x68                  	// #104
 188:	mul	x12, x24, x11
 18c:	neg	x13, x12
 190:	add	x21, x10, x12
 194:	add	x22, x9, x12
 198:	madd	x23, x8, x11, x13
 19c:	mov	x0, x21
 1a0:	mov	x1, x22
 1a4:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 1a8:	add	x22, x22, #0x68
 1ac:	subs	x23, x23, #0x68
 1b0:	add	x21, x21, #0x68
 1b4:	b.ne	19c <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x19c>  // b.any
 1b8:	ldr	w8, [x19, #12]
 1bc:	cmp	w8, w20
 1c0:	b.cc	298 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x298>  // b.lo, b.ul, b.last
 1c4:	str	w20, [x19, #8]
 1c8:	mov	x0, x19
 1cc:	ldp	x20, x19, [sp, #64]
 1d0:	ldp	x22, x21, [sp, #48]
 1d4:	ldp	x24, x23, [sp, #32]
 1d8:	ldp	x26, x25, [sp, #16]
 1dc:	ldp	x29, x30, [sp], #80
 1e0:	ret
 1e4:	mov	x8, x22
 1e8:	mov	w9, #0x68                  	// #104
 1ec:	madd	x23, x24, x9, x8
 1f0:	cmp	x23, x22
 1f4:	b.eq	1b8 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x1b8>  // b.none
 1f8:	ldur	w8, [x23, #-20]
 1fc:	cbz	w8, 24c <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x24c>
 200:	ldur	w8, [x23, #-24]
 204:	cbz	w8, 24c <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x24c>
 208:	mov	x24, xzr
 20c:	lsl	x25, x8, #3
 210:	b	220 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x220>
 214:	add	x24, x24, #0x8
 218:	cmp	x25, x24
 21c:	b.eq	24c <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x24c>  // b.none
 220:	ldur	x8, [x23, #-32]
 224:	ldr	x21, [x8, x24]
 228:	cmn	x21, #0x8
 22c:	ccmp	x21, #0x0, #0x4, ne  // ne = any
 230:	b.eq	214 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x214>  // b.none
 234:	ldr	x1, [x21, #24]
 238:	add	x0, x21, #0x8
 23c:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 240:	mov	x0, x21
 244:	bl	0 <free>
 248:	b	214 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x214>
 24c:	ldur	x0, [x23, #-32]
 250:	bl	0 <free>
 254:	ldur	x0, [x23, #-72]
 258:	sub	x8, x23, #0x38
 25c:	cmp	x0, x8
 260:	b.eq	268 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x268>  // b.none
 264:	bl	0 <_ZdlPv>
 268:	ldur	x0, [x23, #-104]
 26c:	sub	x8, x23, #0x58
 270:	sub	x23, x23, #0x68
 274:	cmp	x0, x8
 278:	b.eq	1f0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x1f0>  // b.none
 27c:	bl	0 <_ZdlPv>
 280:	b	1f0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x1f0>
 284:	mov	x24, xzr
 288:	ldr	w8, [x21, #8]
 28c:	cmp	x24, x8
 290:	b.ne	17c <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x17c>  // b.any
 294:	b	1b8 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x1b8>
 298:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 29c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 2a0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 2a4:	add	x0, x0, #0x0
 2a8:	add	x1, x1, #0x0
 2ac:	add	x3, x3, #0x0
 2b0:	mov	w2, #0x43                  	// #67
 2b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x1
  1c:	lsr	x8, x1, #32
  20:	mov	x19, x0
  24:	cbz	x8, 38 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x38>
  28:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm>
  2c:	add	x0, x0, #0x0
  30:	mov	w1, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  38:	ldr	w8, [x19, #12]
  3c:	add	x8, x8, #0x2
  40:	orr	x8, x8, x8, lsr #1
  44:	orr	x8, x8, x8, lsr #2
  48:	orr	x8, x8, x8, lsr #4
  4c:	orr	x8, x8, x8, lsr #8
  50:	orr	x8, x8, x8, lsr #16
  54:	orr	x8, x8, x8, lsr #32
  58:	add	x9, x8, #0x1
  5c:	cmp	x9, x20
  60:	mov	w9, #0xffffffff            	// #-1
  64:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  68:	cmp	x8, x9
  6c:	csel	x23, x8, x9, cc  // cc = lo, ul, last
  70:	mov	w8, #0x68                  	// #104
  74:	mul	x0, x23, x8
  78:	bl	0 <malloc>
  7c:	mov	x20, x0
  80:	cbnz	x0, c0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0xc0>
  84:	cbz	x23, a0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0xa0>
  88:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm>
  8c:	add	x0, x0, #0x0
  90:	mov	w1, #0x1                   	// #1
  94:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  98:	mov	x20, xzr
  9c:	b	c0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0xc0>
  a0:	mov	w0, #0x1                   	// #1
  a4:	bl	0 <malloc>
  a8:	mov	x20, x0
  ac:	cbnz	x0, c0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0xc0>
  b0:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm>
  b4:	add	x0, x0, #0x0
  b8:	mov	w1, #0x1                   	// #1
  bc:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  c0:	ldr	w9, [x19, #8]
  c4:	ldr	x21, [x19]
  c8:	cbz	w9, 258 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x258>
  cc:	mov	w10, #0x68                  	// #104
  d0:	mov	x8, xzr
  d4:	madd	x9, x9, x10, x21
  d8:	b	138 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x138>
  dc:	str	x12, [x11, #32]
  e0:	add	x12, x21, x8
  e4:	ldr	x12, [x12, #48]
  e8:	str	x12, [x11, #48]
  ec:	ldur	x11, [x10, #-8]
  f0:	add	x12, x20, x8
  f4:	add	x13, x10, #0x38
  f8:	cmp	x13, x9
  fc:	str	x11, [x12, #40]
 100:	ldr	w11, [x10, #16]
 104:	stp	x10, xzr, [x10, #-16]
 108:	strb	wzr, [x10]
 10c:	add	x8, x8, #0x68
 110:	str	w11, [x12, #64]
 114:	ldr	x11, [x10, #24]
 118:	str	x11, [x12, #72]
 11c:	ldr	x11, [x10, #32]
 120:	str	x11, [x12, #80]
 124:	ldr	x11, [x10, #40]
 128:	str	x11, [x12, #88]
 12c:	stp	xzr, xzr, [x10, #24]
 130:	str	wzr, [x10, #40]
 134:	b.eq	1a8 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x1a8>  // b.none
 138:	add	x11, x20, x8
 13c:	add	x10, x11, #0x10
 140:	add	x12, x21, x8
 144:	str	x10, [x11]
 148:	mov	x10, x12
 14c:	ldr	x13, [x10], #16
 150:	cmp	x13, x10
 154:	b.eq	168 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x168>  // b.none
 158:	str	x13, [x11]
 15c:	ldr	x12, [x12, #16]
 160:	str	x12, [x11, #16]
 164:	b	170 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x170>
 168:	ldr	q0, [x13]
 16c:	str	q0, [x11, #16]
 170:	ldur	x12, [x10, #-8]
 174:	add	x11, x20, x8
 178:	add	x13, x11, #0x30
 17c:	str	x12, [x11, #8]
 180:	stp	x10, xzr, [x10, #-16]
 184:	strb	wzr, [x10]
 188:	str	x13, [x11, #32]
 18c:	ldr	x12, [x10, #16]
 190:	add	x10, x10, #0x20
 194:	cmp	x12, x10
 198:	b.ne	dc <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0xdc>  // b.any
 19c:	ldr	q0, [x12]
 1a0:	str	q0, [x11, #48]
 1a4:	b	ec <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0xec>
 1a8:	ldr	w8, [x19, #8]
 1ac:	ldr	x21, [x19]
 1b0:	cbz	w8, 258 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x258>
 1b4:	mov	w9, #0x68                  	// #104
 1b8:	madd	x24, x8, x9, x21
 1bc:	b	1c8 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x1c8>
 1c0:	cmp	x24, x21
 1c4:	b.eq	254 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x254>  // b.none
 1c8:	ldur	w8, [x24, #-20]
 1cc:	cbz	w8, 21c <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x21c>
 1d0:	ldur	w8, [x24, #-24]
 1d4:	cbz	w8, 21c <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x21c>
 1d8:	mov	x25, xzr
 1dc:	lsl	x26, x8, #3
 1e0:	b	1f0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x1f0>
 1e4:	add	x25, x25, #0x8
 1e8:	cmp	x26, x25
 1ec:	b.eq	21c <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x21c>  // b.none
 1f0:	ldur	x8, [x24, #-32]
 1f4:	ldr	x22, [x8, x25]
 1f8:	cmn	x22, #0x8
 1fc:	ccmp	x22, #0x0, #0x4, ne  // ne = any
 200:	b.eq	1e4 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x1e4>  // b.none
 204:	ldr	x1, [x22, #24]
 208:	add	x0, x22, #0x8
 20c:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm>
 210:	mov	x0, x22
 214:	bl	0 <free>
 218:	b	1e4 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x1e4>
 21c:	ldur	x0, [x24, #-32]
 220:	bl	0 <free>
 224:	ldur	x0, [x24, #-72]
 228:	sub	x8, x24, #0x38
 22c:	cmp	x0, x8
 230:	b.eq	238 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x238>  // b.none
 234:	bl	0 <_ZdlPv>
 238:	ldur	x0, [x24, #-104]
 23c:	sub	x8, x24, #0x58
 240:	sub	x24, x24, #0x68
 244:	cmp	x0, x8
 248:	b.eq	1c0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x1c0>  // b.none
 24c:	bl	0 <_ZdlPv>
 250:	b	1c0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x1c0>
 254:	ldr	x21, [x19]
 258:	add	x8, x19, #0x10
 25c:	cmp	x21, x8
 260:	b.eq	26c <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x26c>  // b.none
 264:	mov	x0, x21
 268:	bl	0 <free>
 26c:	str	x20, [x19]
 270:	str	w23, [x19, #12]
 274:	ldp	x20, x19, [sp, #64]
 278:	ldp	x22, x21, [sp, #48]
 27c:	ldp	x24, x23, [sp, #32]
 280:	ldp	x26, x25, [sp, #16]
 284:	ldp	x29, x30, [sp], #80
 288:	ret

Disassembly of section .text._ZN5clang7tooling17DiagnosticMessageaSERKS1_:

0000000000000000 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #32]
   8:	str	x25, [sp, #48]
   c:	stp	x24, x23, [sp, #64]
  10:	stp	x22, x21, [sp, #80]
  14:	stp	x20, x19, [sp, #96]
  18:	add	x29, sp, #0x20
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  28:	add	x0, x19, #0x20
  2c:	add	x1, x20, #0x20
  30:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  34:	ldr	w8, [x20, #64]
  38:	mov	x9, #0x3800000000          	// #240518168576
  3c:	str	w8, [x19, #64]
  40:	stp	xzr, xzr, [sp]
  44:	str	x9, [sp, #16]
  48:	ldr	w8, [x20, #84]
  4c:	cbz	w8, 10c <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0x10c>
  50:	ldr	w1, [x20, #80]
  54:	mov	x0, sp
  58:	mov	x21, sp
  5c:	bl	0 <_ZN4llvm13StringMapImpl4initEj>
  60:	ldp	w8, w10, [x20, #84]
  64:	ldr	w12, [sp, #8]
  68:	ldr	x11, [x20, #72]
  6c:	ldr	x9, [sp]
  70:	stp	w8, w10, [sp, #12]
  74:	cbz	w12, 11c <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0x11c>
  78:	lsl	x8, x12, #3
  7c:	add	x9, x9, x8
  80:	add	x8, x11, x8
  84:	mov	x22, xzr
  88:	add	x21, x21, #0x18
  8c:	add	x23, x9, #0x8
  90:	add	x24, x8, #0x8
  94:	sub	x25, x12, #0x1
  98:	ldr	x3, [x11, x22, lsl #3]
  9c:	cbz	x3, a8 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0xa8>
  a0:	cmn	x3, #0x8
  a4:	b.ne	bc <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0xbc>  // b.any
  a8:	ldr	x8, [sp]
  ac:	str	x3, [x8, x22, lsl #3]
  b0:	cmp	x25, x22
  b4:	b.ne	e8 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0xe8>  // b.any
  b8:	b	fc <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0xfc>
  bc:	add	x0, x3, #0x38
  c0:	ldr	x1, [x3], #8
  c4:	mov	x2, x21
  c8:	bl	0 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_>
  cc:	ldr	x8, [sp]
  d0:	str	x0, [x8, x22, lsl #3]
  d4:	lsl	x8, x22, #2
  d8:	ldr	w9, [x24, x8]
  dc:	str	w9, [x23, x8]
  e0:	cmp	x25, x22
  e4:	b.eq	fc <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0xfc>  // b.none
  e8:	ldr	x11, [x20, #72]
  ec:	add	x22, x22, #0x1
  f0:	ldr	x3, [x11, x22, lsl #3]
  f4:	cbnz	x3, a0 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0xa0>
  f8:	b	a8 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0xa8>
  fc:	ldr	x9, [sp]
 100:	ldp	w11, w8, [sp, #8]
 104:	ldr	w10, [sp, #16]
 108:	b	120 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0x120>
 10c:	mov	w10, wzr
 110:	mov	w11, wzr
 114:	mov	x9, xzr
 118:	b	120 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0x120>
 11c:	mov	w11, wzr
 120:	ldr	x0, [x19, #72]
 124:	str	x9, [x19, #72]
 128:	str	x0, [sp]
 12c:	ldr	w9, [x19, #80]
 130:	str	w9, [sp, #8]
 134:	ldur	d0, [x19, #84]
 138:	stp	w11, w8, [x19, #80]
 13c:	str	w10, [x19, #88]
 140:	stur	d0, [sp, #12]
 144:	cbz	w9, 1a4 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0x1a4>
 148:	fmov	w8, s0
 14c:	cbz	w8, 1a4 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0x1a4>
 150:	lsl	x8, x9, #3
 154:	mov	x21, xzr
 158:	sub	x22, x8, #0x8
 15c:	ldr	x20, [x0, x21]
 160:	cmn	x20, #0x8
 164:	b.eq	180 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0x180>  // b.none
 168:	cbz	x20, 180 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0x180>
 16c:	ldr	x1, [x20, #24]
 170:	add	x0, x20, #0x8
 174:	bl	0 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_>
 178:	mov	x0, x20
 17c:	bl	0 <free>
 180:	cmp	x22, x21
 184:	b.eq	1a0 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0x1a0>  // b.none
 188:	ldr	x0, [sp]
 18c:	add	x21, x21, #0x8
 190:	ldr	x20, [x0, x21]
 194:	cmn	x20, #0x8
 198:	b.ne	168 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0x168>  // b.any
 19c:	b	180 <_ZN5clang7tooling17DiagnosticMessageaSERKS1_+0x180>
 1a0:	ldr	x0, [sp]
 1a4:	bl	0 <free>
 1a8:	mov	x0, x19
 1ac:	ldp	x20, x19, [sp, #96]
 1b0:	ldp	x22, x21, [sp, #80]
 1b4:	ldp	x24, x23, [sp, #64]
 1b8:	ldr	x25, [sp, #48]
 1bc:	ldp	x29, x30, [sp, #32]
 1c0:	add	sp, sp, #0x70
 1c4:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 6c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x6c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 6c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x6c>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>
  3c:	ldr	x0, [x20, #72]
  40:	ldr	x21, [x20, #16]
  44:	add	x8, x20, #0x58
  48:	cmp	x0, x8
  4c:	b.eq	54 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x54>  // b.none
  50:	bl	0 <_ZdlPv>
  54:	ldr	x0, [x20, #32]
  58:	add	x8, x20, #0x30
  5c:	cmp	x0, x8
  60:	b.eq	20 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x20>  // b.none
  64:	bl	0 <_ZdlPv>
  68:	b	20 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x20>
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldr	x21, [sp, #16]
  74:	ldp	x29, x30, [sp], #48
  78:	ret

Lookup.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>:
   0:	sub	sp, sp, #0x190
   4:	stp	x29, x30, [sp, #304]
   8:	stp	x28, x27, [sp, #320]
   c:	stp	x26, x25, [sp, #336]
  10:	stp	x24, x23, [sp, #352]
  14:	stp	x22, x21, [sp, #368]
  18:	stp	x20, x19, [sp, #384]
  1c:	add	x29, sp, #0x130
  20:	cmp	x5, #0x2
  24:	str	x8, [sp, #8]
  28:	stp	x4, x5, [sp, #56]
  2c:	b.cc	bbc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xbbc>  // b.lo, b.ul, b.last
  30:	ldrh	w8, [x4]
  34:	mov	w9, #0x3a3a                	// #14906
  38:	mov	x21, x4
  3c:	cmp	w8, w9
  40:	b.ne	bbc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xbbc>  // b.any
  44:	ldr	x8, [x3, #16]
  48:	mov	x20, x5
  4c:	mov	x23, x2
  50:	mov	x25, x1
  54:	mov	x24, x0
  58:	and	x1, x8, #0xfffffffffffffff8
  5c:	tbnz	w8, #2, 68 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x68>
  60:	mov	x9, x1
  64:	b	6c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x6c>
  68:	ldr	x9, [x1]
  6c:	cbz	x9, c3c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xc3c>
  70:	ldr	w10, [x3, #28]
  74:	ldrh	w9, [x9, #8]
  78:	and	w10, w10, #0x7f
  7c:	sub	w10, w10, #0x21
  80:	cmp	w10, #0x2
  84:	and	w9, w9, #0x7f
  88:	b.hi	ac <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xac>  // b.pmore
  8c:	ldrb	w10, [x3, #74]
  90:	ldrh	w11, [x3, #72]
  94:	bfi	w11, w10, #16, #8
  98:	tst	w11, #0x10000
  9c:	cset	w10, eq  // eq = none
  a0:	cmp	w9, #0x4e
  a4:	b.ne	b8 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xb8>  // b.any
  a8:	b	1ac <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x1ac>
  ac:	mov	w10, wzr
  b0:	cmp	w9, #0x4e
  b4:	b.eq	1ac <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x1ac>  // b.none
  b8:	cbnz	x24, 1ac <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x1ac>
  bc:	tbnz	w10, #0, 1ac <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x1ac>
  c0:	tbz	w8, #2, c8 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xc8>
  c4:	ldr	x1, [x1]
  c8:	sub	x0, x29, #0x58
  cc:	bl	c5c <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE>
  d0:	sub	x0, x29, #0x88
  d4:	mov	x1, x23
  d8:	bl	c5c <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE>
  dc:	ldur	w9, [x29, #-128]
  e0:	ldur	w11, [x29, #-80]
  e4:	cmp	w9, w11
  e8:	b.cs	f4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xf4>  // b.hs, b.nlast
  ec:	ldur	x0, [x29, #-136]
  f0:	b	174 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x174>
  f4:	ldur	x0, [x29, #-136]
  f8:	sub	x10, x9, x11
  fc:	cmp	w9, w10
 100:	cset	w12, eq  // eq = none
 104:	cbz	w11, 170 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x170>
 108:	ldur	x8, [x29, #-88]
 10c:	and	x10, x10, #0xffffffff
 110:	lsl	x13, x9, #3
 114:	lsl	x10, x10, #3
 118:	add	x9, x0, x10
 11c:	sub	x10, x13, x10
 120:	sub	x10, x10, #0x8
 124:	lsl	x11, x11, #3
 128:	tbnz	w12, #0, bdc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xbdc>
 12c:	ldr	x12, [x8]
 130:	ldr	x13, [x9]
 134:	cmp	x12, x13
 138:	b.eq	174 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x174>  // b.none
 13c:	cbz	x12, b7c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xb7c>
 140:	cbz	x13, b7c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xb7c>
 144:	ldr	x12, [x12, #40]
 148:	ldr	x13, [x13, #40]
 14c:	cmp	x12, x13
 150:	b.eq	b38 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xb38>  // b.none
 154:	cmp	x10, #0x0
 158:	add	x8, x8, #0x8
 15c:	add	x9, x9, #0x8
 160:	cset	w12, eq  // eq = none
 164:	subs	x11, x11, #0x8
 168:	sub	x10, x10, #0x8
 16c:	b.ne	128 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x128>  // b.any
 170:	tbz	w12, #0, bdc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xbdc>
 174:	mov	w19, wzr
 178:	sub	x8, x29, #0x88
 17c:	add	x8, x8, #0x10
 180:	cmp	x0, x8
 184:	b.eq	18c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x18c>  // b.none
 188:	bl	0 <free>
 18c:	ldur	x0, [x29, #-88]
 190:	sub	x8, x29, #0x58
 194:	add	x8, x8, #0x10
 198:	cmp	x0, x8
 19c:	b.eq	1a4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x1a4>  // b.none
 1a0:	bl	0 <free>
 1a4:	cbz	w19, 1d4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x1d4>
 1a8:	ldp	x21, x20, [sp, #56]
 1ac:	cbz	x24, 1cc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x1cc>
 1b0:	mov	x0, x24
 1b4:	bl	0 <_ZNK5clang19NestedNameSpecifier7getKindEv>
 1b8:	cmp	w0, #0x5
 1bc:	b.eq	21c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x21c>  // b.none
 1c0:	ldr	x8, [x24, #8]
 1c4:	ands	x24, x8, #0xfffffffffffffff8
 1c8:	b.ne	1b0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x1b0>  // b.any
 1cc:	mov	w22, wzr
 1d0:	b	220 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x220>
 1d4:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 1d8:	add	x1, x1, #0x0
 1dc:	add	x0, sp, #0x38
 1e0:	mov	w2, #0x2                   	// #2
 1e4:	bl	0 <_ZNK4llvm9StringRef5rfindES0_>
 1e8:	cmn	x0, #0x1
 1ec:	b.eq	a58 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa58>  // b.none
 1f0:	ldp	x9, x8, [sp, #56]
 1f4:	add	x10, x0, #0x2
 1f8:	cmp	x8, x10
 1fc:	csel	x10, x8, x10, cc  // cc = lo, ul, last
 200:	add	x20, x9, x10
 204:	sub	x21, x8, x10
 208:	ldr	x19, [sp, #8]
 20c:	add	x0, x19, #0x10
 210:	str	x0, [x19]
 214:	cbnz	x20, a6c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa6c>
 218:	b	af0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xaf0>
 21c:	mov	w22, #0x1                   	// #1
 220:	sub	x8, x29, #0x88
 224:	sub	x9, x29, #0x58
 228:	add	x8, x8, #0x10
 22c:	sub	x10, x29, #0x28
 230:	adrp	x26, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 234:	str	x8, [sp, #48]
 238:	add	x8, x9, #0x10
 23c:	add	x26, x26, #0x0
 240:	str	x8, [sp, #40]
 244:	add	x8, x10, #0x10
 248:	mov	x27, x23
 24c:	str	x8, [sp, #32]
 250:	ldr	x19, [sp, #48]
 254:	cbnz	x27, 260 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x260>
 258:	b	40c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x40c>
 25c:	cbz	x27, 40c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x40c>
 260:	ldrh	w8, [x27, #8]
 264:	and	w8, w8, #0x7f
 268:	cmp	w8, #0xe
 26c:	b.eq	28c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x28c>  // b.none
 270:	mov	x0, x27
 274:	bl	0 <_ZN5clang4Decl19castFromDeclContextEPKNS_11DeclContextE>
 278:	ldr	x8, [x0, #16]
 27c:	and	x27, x8, #0xfffffffffffffff8
 280:	tbz	w8, #2, 25c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x25c>
 284:	ldr	x27, [x27]
 288:	b	25c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x25c>
 28c:	sub	x0, x27, #0x30
 290:	sub	x8, x29, #0x28
 294:	bl	0 <_ZNK5clang9NamedDecl24getQualifiedNameAsStringB5cxx11Ev>
 298:	sub	x0, x29, #0x28
 29c:	mov	w4, #0x2                   	// #2
 2a0:	mov	x1, xzr
 2a4:	mov	x2, xzr
 2a8:	mov	x3, x26
 2ac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
 2b0:	stur	x19, [x29, #-136]
 2b4:	mov	x8, x0
 2b8:	ldr	x9, [x8], #16
 2bc:	cmp	x9, x8
 2c0:	b.eq	2d4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x2d4>  // b.none
 2c4:	stur	x9, [x29, #-136]
 2c8:	ldr	x9, [x0, #16]
 2cc:	stur	x9, [x29, #-120]
 2d0:	b	2dc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x2dc>
 2d4:	ldr	q0, [x9]
 2d8:	str	q0, [x19]
 2dc:	ldr	x9, [x0, #8]
 2e0:	stur	x9, [x29, #-128]
 2e4:	stp	x8, xzr, [x0]
 2e8:	strb	wzr, [x0, #16]
 2ec:	ldur	x8, [x29, #-128]
 2f0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
 2f4:	orr	x8, x8, #0x1
 2f8:	cmp	x8, x9
 2fc:	b.eq	b70 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xb70>  // b.none
 300:	sub	x0, x29, #0x88
 304:	mov	w2, #0x2                   	// #2
 308:	mov	x1, x26
 30c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 310:	ldr	x10, [sp, #40]
 314:	mov	x8, x0
 318:	stur	x10, [x29, #-88]
 31c:	ldr	x9, [x8], #16
 320:	str	w22, [sp, #24]
 324:	cmp	x9, x8
 328:	b.eq	33c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x33c>  // b.none
 32c:	stur	x9, [x29, #-88]
 330:	ldr	x9, [x0, #16]
 334:	stur	x9, [x29, #-72]
 338:	b	344 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x344>
 33c:	ldr	q0, [x9]
 340:	str	q0, [x10]
 344:	ldr	x9, [x0, #8]
 348:	mov	x22, x23
 34c:	stur	x9, [x29, #-80]
 350:	stp	x8, xzr, [x0]
 354:	strb	wzr, [x0, #16]
 358:	ldur	x0, [x29, #-136]
 35c:	cmp	x0, x19
 360:	b.eq	368 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x368>  // b.none
 364:	bl	0 <_ZdlPv>
 368:	ldur	x0, [x29, #-40]
 36c:	ldr	x8, [sp, #32]
 370:	mov	x26, x28
 374:	mov	x23, x25
 378:	cmp	x0, x8
 37c:	b.eq	384 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x384>  // b.none
 380:	bl	0 <_ZdlPv>
 384:	ldur	x28, [x29, #-80]
 388:	subs	x25, x20, x28
 38c:	b.cc	3a8 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x3a8>  // b.lo, b.ul, b.last
 390:	cbz	x28, 3d0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x3d0>
 394:	ldur	x1, [x29, #-88]
 398:	mov	x0, x21
 39c:	mov	x2, x28
 3a0:	bl	0 <bcmp>
 3a4:	cbz	w0, 3d0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x3d0>
 3a8:	mov	x0, x27
 3ac:	bl	0 <_ZN5clang4Decl19castFromDeclContextEPKNS_11DeclContextE>
 3b0:	ldr	x8, [x0, #16]
 3b4:	and	x27, x8, #0xfffffffffffffff8
 3b8:	tbz	w8, #2, 3c0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x3c0>
 3bc:	ldr	x27, [x27]
 3c0:	mov	w19, #0x1                   	// #1
 3c4:	mov	x25, x23
 3c8:	mov	x28, x26
 3cc:	b	3e0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x3e0>
 3d0:	mov	w19, wzr
 3d4:	add	x28, x21, x28
 3d8:	mov	x24, x25
 3dc:	mov	x25, x23
 3e0:	ldr	x8, [sp, #40]
 3e4:	ldur	x0, [x29, #-88]
 3e8:	adrp	x26, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 3ec:	mov	x23, x22
 3f0:	add	x26, x26, #0x0
 3f4:	cmp	x0, x8
 3f8:	b.eq	400 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x400>  // b.none
 3fc:	bl	0 <_ZdlPv>
 400:	ldr	w22, [sp, #24]
 404:	tbnz	w19, #0, 250 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x250>
 408:	b	430 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x430>
 40c:	tbz	w22, #0, 41c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x41c>
 410:	mov	x28, x21
 414:	mov	x24, x20
 418:	b	430 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x430>
 41c:	cmp	x20, #0x2
 420:	mov	w8, #0x2                   	// #2
 424:	csel	x8, x20, x8, cc  // cc = lo, ul, last
 428:	add	x28, x21, x8
 42c:	sub	x24, x20, x8
 430:	ldr	x8, [sp, #64]
 434:	subs	x20, x8, #0x2
 438:	b.cc	bfc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xbfc>  // b.lo, b.ul, b.last
 43c:	ldr	x19, [sp, #56]
 440:	mov	w10, #0x3a3a                	// #14906
 444:	ldrh	w9, [x19]
 448:	cmp	w9, w10
 44c:	b.ne	bfc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xbfc>  // b.any
 450:	subs	x21, x8, x24
 454:	b.cc	c1c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xc1c>  // b.lo, b.ul, b.last
 458:	cbz	x24, 48c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x48c>
 45c:	add	x8, x19, x8
 460:	sub	x0, x8, x24
 464:	mov	x1, x28
 468:	mov	x2, x24
 46c:	bl	0 <bcmp>
 470:	cbnz	w0, c1c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xc1c>
 474:	cmp	x24, #0x2
 478:	b.cc	48c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x48c>  // b.lo, b.ul, b.last
 47c:	ldrh	w8, [x28]
 480:	mov	w9, #0x3a3a                	// #14906
 484:	cmp	w8, w9
 488:	b.eq	aac <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xaac>  // b.none
 48c:	adrp	x8, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 490:	ldr	d0, [x8]
 494:	sub	x8, x29, #0x58
 498:	adrp	x2, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 49c:	add	x8, x8, #0x10
 4a0:	add	x2, x2, #0x0
 4a4:	add	x0, sp, #0x80
 4a8:	sub	x1, x29, #0x58
 4ac:	mov	w3, #0x2                   	// #2
 4b0:	mov	w4, #0xffffffff            	// #-1
 4b4:	mov	w5, wzr
 4b8:	and	x26, x25, #0xffffffff
 4bc:	stp	x19, x21, [sp, #128]
 4c0:	stur	x8, [x29, #-88]
 4c4:	stur	d0, [x29, #-80]
 4c8:	bl	0 <_ZNK4llvm9StringRef5splitERNS_15SmallVectorImplIS0_EES0_ib>
 4cc:	sub	x0, x29, #0x88
 4d0:	mov	x1, x23
 4d4:	bl	c5c <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE>
 4d8:	mov	x0, x23
 4dc:	bl	0 <_ZN5clang4Decl19castFromDeclContextEPKNS_11DeclContextE>
 4e0:	bl	0 <_ZNK5clang4Decl13getASTContextEv>
 4e4:	str	x0, [sp, #32]
 4e8:	mov	x0, x23
 4ec:	bl	0 <_ZN5clang4Decl19castFromDeclContextEPKNS_11DeclContextE>
 4f0:	bl	0 <_ZNK5clang4Decl13getASTContextEv>
 4f4:	ldr	x23, [x0, #2232]
 4f8:	tbz	w25, #31, 50c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x50c>
 4fc:	mov	x0, x23
 500:	mov	x1, x26
 504:	bl	0 <_ZNK5clang13SourceManager22getSpellingLocSlowCaseENS_14SourceLocationE>
 508:	mov	x26, x0
 50c:	add	x8, x19, #0x2
 510:	str	x8, [sp, #48]
 514:	add	x8, sp, #0x60
 518:	add	x0, x8, #0x10
 51c:	str	x0, [sp, #96]
 520:	str	x0, [sp, #16]
 524:	cbz	x28, 568 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x568>
 528:	cmp	x24, #0x10
 52c:	stur	x24, [x29, #-40]
 530:	b.cc	550 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x550>  // b.lo, b.ul, b.last
 534:	add	x0, sp, #0x60
 538:	sub	x1, x29, #0x28
 53c:	mov	x2, xzr
 540:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 544:	ldur	x8, [x29, #-40]
 548:	str	x0, [sp, #96]
 54c:	str	x8, [sp, #112]
 550:	cbz	x24, 580 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x580>
 554:	cmp	x24, #0x1
 558:	b.ne	574 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x574>  // b.any
 55c:	ldrb	w8, [x28]
 560:	strb	w8, [x0]
 564:	b	580 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x580>
 568:	str	xzr, [sp, #104]
 56c:	strb	wzr, [sp, #112]
 570:	b	590 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x590>
 574:	mov	x1, x28
 578:	mov	x2, x24
 57c:	bl	0 <memcpy>
 580:	ldur	x8, [x29, #-40]
 584:	ldr	x9, [sp, #96]
 588:	str	x8, [sp, #104]
 58c:	strb	wzr, [x9, x8]
 590:	sub	x8, x29, #0x28
 594:	and	x24, x26, #0xffffffff
 598:	add	x25, x8, #0x10
 59c:	ldp	x8, x9, [sp, #96]
 5a0:	cmp	x9, #0x2
 5a4:	stp	x8, x9, [sp, #72]
 5a8:	b.cc	5bc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x5bc>  // b.lo, b.ul, b.last
 5ac:	ldrh	w8, [x8]
 5b0:	mov	w9, #0x3a3a                	// #14906
 5b4:	cmp	w8, w9
 5b8:	b.eq	9ec <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x9ec>  // b.none
 5bc:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 5c0:	add	x0, sp, #0x48
 5c4:	mov	w2, #0x2                   	// #2
 5c8:	add	x1, x1, #0x0
 5cc:	mov	x3, xzr
 5d0:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
 5d4:	ldr	x9, [sp, #80]
 5d8:	ldur	w8, [x29, #-128]
 5dc:	mov	x10, #0xffffffffffffffff    	// #-1
 5e0:	cmp	x9, x0
 5e4:	ccmp	x0, x10, #0x4, cs  // cs = hs, nlast
 5e8:	csel	x26, x9, x0, eq  // eq = none
 5ec:	cbz	w8, 9ec <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x9ec>
 5f0:	ldur	x21, [x29, #-136]
 5f4:	ldr	x9, [sp, #72]
 5f8:	add	x8, x21, x8, lsl #3
 5fc:	str	x9, [sp, #40]
 600:	str	x8, [sp, #24]
 604:	b	618 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x618>
 608:	ldr	x8, [sp, #24]
 60c:	add	x21, x21, #0x8
 610:	cmp	x21, x8
 614:	b.eq	9ec <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x9ec>  // b.none
 618:	ldp	x8, x1, [sp, #32]
 61c:	ldr	x19, [x21]
 620:	mov	x2, x26
 624:	mov	x3, x25
 628:	ldr	x28, [x8, #17424]
 62c:	stp	x1, x26, [x29, #-40]
 630:	stur	xzr, [x29, #-24]
 634:	mov	x0, x28
 638:	bl	0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 63c:	ldr	x22, [x0]
 640:	ldr	x1, [x22, #8]
 644:	cbnz	x1, 69c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x69c>
 648:	ldr	x0, [x28, #128]
 64c:	cbz	x0, 670 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x670>
 650:	ldr	x8, [x0]
 654:	ldr	x1, [sp, #40]
 658:	mov	x2, x26
 65c:	ldr	x8, [x8, #16]
 660:	blr	x8
 664:	mov	x1, x0
 668:	str	x0, [x22, #8]
 66c:	cbnz	x0, 69c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x69c>
 670:	add	x0, x28, #0x18
 674:	mov	w1, #0x18                  	// #24
 678:	mov	w2, #0x3                   	// #3
 67c:	bl	0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 680:	ldr	x8, [x0]
 684:	mov	x9, #0x5                   	// #5
 688:	bfxil	x8, x9, #0, #35
 68c:	stp	x8, xzr, [x0]
 690:	str	x0, [x22, #8]
 694:	str	x22, [x0, #16]
 698:	ldr	x1, [x22, #8]
 69c:	tst	x1, #0x7
 6a0:	b.ne	b50 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xb50>  // b.any
 6a4:	add	x0, x19, #0x30
 6a8:	add	x8, sp, #0x90
 6ac:	bl	0 <_ZNK5clang11DeclContext6lookupENS_15DeclarationNameE>
 6b0:	ldr	x8, [sp, #152]
 6b4:	cbz	x8, 608 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x608>
 6b8:	ldr	x28, [sp, #160]
 6bc:	lsl	x22, x8, #3
 6c0:	cbnz	x28, 6d8 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x6d8>
 6c4:	ldr	x27, [sp, #144]
 6c8:	b	76c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x76c>
 6cc:	tbnz	w19, #0, 7f4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x7f4>
 6d0:	subs	x22, x22, #0x8
 6d4:	b.eq	608 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x608>  // b.none
 6d8:	sub	x8, x29, #0x28
 6dc:	mov	x0, x28
 6e0:	bl	0 <_ZNK5clang9NamedDecl24getQualifiedNameAsStringB5cxx11Ev>
 6e4:	ldur	x2, [x29, #-32]
 6e8:	cmp	x20, x2
 6ec:	b.cc	708 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x708>  // b.lo, b.ul, b.last
 6f0:	ldur	x19, [x29, #-40]
 6f4:	cbz	x2, 748 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x748>
 6f8:	ldr	x0, [sp, #48]
 6fc:	mov	x1, x19
 700:	bl	0 <bcmp>
 704:	cbz	w0, 748 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x748>
 708:	ldr	w1, [x28, #24]
 70c:	tbz	w1, #31, 71c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x71c>
 710:	mov	x0, x23
 714:	bl	0 <_ZNK5clang13SourceManager22getSpellingLocSlowCaseENS_14SourceLocationE>
 718:	mov	x1, x0
 71c:	and	x1, x1, #0xffffffff
 720:	mov	x0, x23
 724:	mov	x2, x24
 728:	bl	0 <_ZNK5clang13SourceManager25isBeforeInTranslationUnitENS_14SourceLocationES1_>
 72c:	ldur	x8, [x29, #-40]
 730:	mov	w19, w0
 734:	cmp	x8, x25
 738:	b.eq	6cc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x6cc>  // b.none
 73c:	mov	x0, x8
 740:	bl	0 <_ZdlPv>
 744:	b	6cc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x6cc>
 748:	cmp	x19, x25
 74c:	b.eq	6d0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x6d0>  // b.none
 750:	mov	x0, x19
 754:	bl	0 <_ZdlPv>
 758:	b	6d0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x6d0>
 75c:	tbnz	w19, #0, 7f4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x7f4>
 760:	subs	x22, x22, #0x8
 764:	add	x27, x27, #0x8
 768:	b.eq	608 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x608>  // b.none
 76c:	ldr	x28, [x27]
 770:	sub	x8, x29, #0x28
 774:	mov	x0, x28
 778:	bl	0 <_ZNK5clang9NamedDecl24getQualifiedNameAsStringB5cxx11Ev>
 77c:	ldur	x2, [x29, #-32]
 780:	cmp	x20, x2
 784:	b.cc	7a0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x7a0>  // b.lo, b.ul, b.last
 788:	ldur	x19, [x29, #-40]
 78c:	cbz	x2, 7e0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x7e0>
 790:	ldr	x0, [sp, #48]
 794:	mov	x1, x19
 798:	bl	0 <bcmp>
 79c:	cbz	w0, 7e0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x7e0>
 7a0:	ldr	w1, [x28, #24]
 7a4:	tbz	w1, #31, 7b4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x7b4>
 7a8:	mov	x0, x23
 7ac:	bl	0 <_ZNK5clang13SourceManager22getSpellingLocSlowCaseENS_14SourceLocationE>
 7b0:	mov	x1, x0
 7b4:	and	x1, x1, #0xffffffff
 7b8:	mov	x0, x23
 7bc:	mov	x2, x24
 7c0:	bl	0 <_ZNK5clang13SourceManager25isBeforeInTranslationUnitENS_14SourceLocationES1_>
 7c4:	ldur	x8, [x29, #-40]
 7c8:	mov	w19, w0
 7cc:	cmp	x8, x25
 7d0:	b.eq	75c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x75c>  // b.none
 7d4:	mov	x0, x8
 7d8:	bl	0 <_ZdlPv>
 7dc:	b	75c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x75c>
 7e0:	cmp	x19, x25
 7e4:	b.eq	760 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x760>  // b.none
 7e8:	mov	x0, x19
 7ec:	bl	0 <_ZdlPv>
 7f0:	b	760 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x760>
 7f4:	ldur	w8, [x29, #-80]
 7f8:	cbz	w8, 884 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x884>
 7fc:	ldur	x9, [x29, #-88]
 800:	mov	w10, #0x305                 	// #773
 804:	strh	w10, [sp, #88]
 808:	add	x10, sp, #0x48
 80c:	add	x8, x9, x8, lsl #4
 810:	sub	x8, x8, #0x10
 814:	str	x8, [sp, #72]
 818:	adrp	x8, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 81c:	add	x8, x8, #0x0
 820:	str	x8, [sp, #80]
 824:	mov	w8, #0x402                 	// #1026
 828:	str	x10, [sp, #144]
 82c:	add	x10, sp, #0x60
 830:	strh	w8, [sp, #160]
 834:	sub	x8, x29, #0x28
 838:	add	x0, sp, #0x90
 83c:	str	x10, [sp, #152]
 840:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
 844:	ldur	x9, [x29, #-40]
 848:	cmp	x9, x25
 84c:	b.eq	910 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x910>  // b.none
 850:	sub	x11, x29, #0x28
 854:	ldr	x8, [sp, #96]
 858:	ldur	q0, [x11, #8]
 85c:	ldr	x11, [sp, #16]
 860:	ldr	x10, [sp, #112]
 864:	str	x9, [sp, #96]
 868:	stur	q0, [sp, #104]
 86c:	cmp	x8, x11
 870:	csel	x8, xzr, x8, eq  // eq = none
 874:	cbz	x8, 930 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x930>
 878:	stur	x8, [x29, #-40]
 87c:	stur	x10, [x29, #-24]
 880:	b	984 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x984>
 884:	ldr	x8, [sp, #104]
 888:	sub	x0, x29, #0x28
 88c:	stp	x25, xzr, [x29, #-40]
 890:	sturb	wzr, [x29, #-24]
 894:	add	x1, x8, #0x2
 898:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
 89c:	ldur	x8, [x29, #-32]
 8a0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
 8a4:	orr	x8, x8, #0x1
 8a8:	cmp	x8, x9
 8ac:	b.eq	b70 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xb70>  // b.none
 8b0:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 8b4:	sub	x0, x29, #0x28
 8b8:	mov	w2, #0x2                   	// #2
 8bc:	add	x1, x1, #0x0
 8c0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 8c4:	ldp	x1, x2, [sp, #96]
 8c8:	sub	x0, x29, #0x28
 8cc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 8d0:	ldur	x9, [x29, #-40]
 8d4:	cmp	x9, x25
 8d8:	b.eq	93c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x93c>  // b.none
 8dc:	sub	x11, x29, #0x28
 8e0:	ldr	x8, [sp, #96]
 8e4:	ldur	q0, [x11, #8]
 8e8:	ldr	x11, [sp, #16]
 8ec:	ldr	x10, [sp, #112]
 8f0:	str	x9, [sp, #96]
 8f4:	stur	q0, [sp, #104]
 8f8:	cmp	x8, x11
 8fc:	csel	x8, xzr, x8, eq  // eq = none
 900:	cbz	x8, 95c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x95c>
 904:	stur	x8, [x29, #-40]
 908:	stur	x10, [x29, #-24]
 90c:	b	9d0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x9d0>
 910:	ldur	x2, [x29, #-32]
 914:	cbz	x2, 970 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x970>
 918:	ldr	x0, [sp, #96]
 91c:	cmp	x2, #0x1
 920:	b.ne	968 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x968>  // b.any
 924:	ldurb	w8, [x29, #-24]
 928:	strb	w8, [x0]
 92c:	b	970 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x970>
 930:	mov	x8, x25
 934:	stur	x25, [x29, #-40]
 938:	b	984 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x984>
 93c:	ldur	x2, [x29, #-32]
 940:	cbz	x2, 9bc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x9bc>
 944:	ldr	x0, [sp, #96]
 948:	cmp	x2, #0x1
 94c:	b.ne	9b4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x9b4>  // b.any
 950:	ldurb	w8, [x29, #-24]
 954:	strb	w8, [x0]
 958:	b	9bc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x9bc>
 95c:	mov	x8, x25
 960:	stur	x25, [x29, #-40]
 964:	b	9d0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x9d0>
 968:	mov	x1, x25
 96c:	bl	0 <memcpy>
 970:	ldur	x8, [x29, #-32]
 974:	ldr	x9, [sp, #96]
 978:	str	x8, [sp, #104]
 97c:	strb	wzr, [x9, x8]
 980:	ldur	x8, [x29, #-40]
 984:	stur	xzr, [x29, #-32]
 988:	strb	wzr, [x8]
 98c:	ldur	x0, [x29, #-40]
 990:	cmp	x0, x25
 994:	b.eq	99c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x99c>  // b.none
 998:	bl	0 <_ZdlPv>
 99c:	ldp	w8, w9, [x29, #-80]
 9a0:	sub	x8, x8, #0x1
 9a4:	cmp	x8, x9
 9a8:	b.hi	b9c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xb9c>  // b.pmore
 9ac:	stur	w8, [x29, #-80]
 9b0:	b	59c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x59c>
 9b4:	mov	x1, x25
 9b8:	bl	0 <memcpy>
 9bc:	ldur	x8, [x29, #-32]
 9c0:	ldr	x9, [sp, #96]
 9c4:	str	x8, [sp, #104]
 9c8:	strb	wzr, [x9, x8]
 9cc:	ldur	x8, [x29, #-40]
 9d0:	stur	xzr, [x29, #-32]
 9d4:	strb	wzr, [x8]
 9d8:	ldur	x0, [x29, #-40]
 9dc:	cmp	x0, x25
 9e0:	b.eq	59c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x59c>  // b.none
 9e4:	bl	0 <_ZdlPv>
 9e8:	b	59c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x59c>
 9ec:	ldr	x8, [sp, #96]
 9f0:	ldp	x10, x11, [sp, #8]
 9f4:	add	x9, x10, #0x10
 9f8:	cmp	x8, x11
 9fc:	str	x9, [x10]
 a00:	b.eq	a14 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa14>  // b.none
 a04:	ldr	x9, [sp, #112]
 a08:	str	x8, [x10]
 a0c:	str	x9, [x10, #16]
 a10:	b	a1c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa1c>
 a14:	ldr	q0, [x11]
 a18:	str	q0, [x9]
 a1c:	ldur	x0, [x29, #-136]
 a20:	ldr	x8, [sp, #104]
 a24:	sub	x9, x29, #0x88
 a28:	add	x9, x9, #0x10
 a2c:	cmp	x0, x9
 a30:	str	x8, [x10, #8]
 a34:	b.eq	a3c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa3c>  // b.none
 a38:	bl	0 <free>
 a3c:	ldur	x0, [x29, #-88]
 a40:	sub	x8, x29, #0x58
 a44:	add	x8, x8, #0x10
 a48:	cmp	x0, x8
 a4c:	b.eq	b18 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xb18>  // b.none
 a50:	bl	0 <free>
 a54:	b	b18 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xb18>
 a58:	ldp	x20, x21, [sp, #56]
 a5c:	ldr	x19, [sp, #8]
 a60:	add	x0, x19, #0x10
 a64:	str	x0, [x19]
 a68:	cbz	x20, af0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xaf0>
 a6c:	cmp	x21, #0x10
 a70:	stur	x21, [x29, #-88]
 a74:	b.cc	a94 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa94>  // b.lo, b.ul, b.last
 a78:	sub	x1, x29, #0x58
 a7c:	mov	x0, x19
 a80:	mov	x2, xzr
 a84:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 a88:	ldur	x8, [x29, #-88]
 a8c:	str	x0, [x19]
 a90:	str	x8, [x19, #16]
 a94:	cbz	x21, b08 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xb08>
 a98:	cmp	x21, #0x1
 a9c:	b.ne	afc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xafc>  // b.any
 aa0:	ldrb	w8, [x20]
 aa4:	strb	w8, [x0]
 aa8:	b	b08 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xb08>
 aac:	ldr	x19, [sp, #8]
 ab0:	add	x0, x19, #0x10
 ab4:	str	x0, [x19]
 ab8:	cbz	x28, af0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xaf0>
 abc:	cmp	x24, #0x10
 ac0:	stur	x24, [x29, #-88]
 ac4:	b.cc	ae4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xae4>  // b.lo, b.ul, b.last
 ac8:	sub	x1, x29, #0x58
 acc:	mov	x0, x19
 ad0:	mov	x2, xzr
 ad4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 ad8:	ldur	x8, [x29, #-88]
 adc:	str	x0, [x19]
 ae0:	str	x8, [x19, #16]
 ae4:	mov	x1, x28
 ae8:	mov	x2, x24
 aec:	b	b04 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xb04>
 af0:	str	xzr, [x19, #8]
 af4:	strb	wzr, [x19, #16]
 af8:	b	b18 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xb18>
 afc:	mov	x1, x20
 b00:	mov	x2, x21
 b04:	bl	0 <memcpy>
 b08:	ldur	x8, [x29, #-88]
 b0c:	ldr	x9, [x19]
 b10:	str	x8, [x19, #8]
 b14:	strb	wzr, [x9, x8]
 b18:	ldp	x20, x19, [sp, #384]
 b1c:	ldp	x22, x21, [sp, #368]
 b20:	ldp	x24, x23, [sp, #352]
 b24:	ldp	x26, x25, [sp, #336]
 b28:	ldp	x28, x27, [sp, #320]
 b2c:	ldp	x29, x30, [sp, #304]
 b30:	add	sp, sp, #0x190
 b34:	ret
 b38:	mov	w19, #0x1                   	// #1
 b3c:	sub	x8, x29, #0x88
 b40:	add	x8, x8, #0x10
 b44:	cmp	x0, x8
 b48:	b.ne	188 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x188>  // b.any
 b4c:	b	18c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x18c>
 b50:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 b54:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 b58:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 b5c:	add	x0, x0, #0x0
 b60:	add	x1, x1, #0x0
 b64:	add	x3, x3, #0x0
 b68:	mov	w2, #0x10b                 	// #267
 b6c:	bl	0 <__assert_fail>
 b70:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 b74:	add	x0, x0, #0x0
 b78:	bl	0 <_ZSt20__throw_length_errorPKc>
 b7c:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 b80:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 b84:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 b88:	add	x0, x0, #0x0
 b8c:	add	x1, x1, #0x0
 b90:	add	x3, x3, #0x0
 b94:	mov	w2, #0x69                  	// #105
 b98:	bl	0 <__assert_fail>
 b9c:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 ba0:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 ba4:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 ba8:	add	x0, x0, #0x0
 bac:	add	x1, x1, #0x0
 bb0:	add	x3, x3, #0x0
 bb4:	mov	w2, #0x43                  	// #67
 bb8:	bl	0 <__assert_fail>
 bbc:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 bc0:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 bc4:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 bc8:	add	x0, x0, #0x0
 bcc:	add	x1, x1, #0x0
 bd0:	add	x3, x3, #0x0
 bd4:	mov	w2, #0xbd                  	// #189
 bd8:	bl	0 <__assert_fail>
 bdc:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 be0:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 be4:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 be8:	add	x0, x0, #0x0
 bec:	add	x1, x1, #0x0
 bf0:	add	x3, x3, #0x0
 bf4:	mov	w2, #0x4f                  	// #79
 bf8:	bl	0 <__assert_fail>
 bfc:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 c00:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 c04:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 c08:	add	x0, x0, #0x0
 c0c:	add	x1, x1, #0x0
 c10:	add	x3, x3, #0x0
 c14:	mov	w2, #0x81                  	// #129
 c18:	bl	0 <__assert_fail>
 c1c:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 c20:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 c24:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 c28:	add	x0, x0, #0x0
 c2c:	add	x1, x1, #0x0
 c30:	add	x3, x3, #0x0
 c34:	mov	w2, #0x82                  	// #130
 c38:	bl	0 <__assert_fail>
 c3c:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 c40:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 c44:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 c48:	add	x0, x0, #0x0
 c4c:	add	x1, x1, #0x0
 c50:	add	x3, x3, #0x0
 c54:	mov	w2, #0x69                  	// #105
 c58:	bl	0 <__assert_fail>

0000000000000c5c <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE>:
 c5c:	stp	x29, x30, [sp, #-48]!
 c60:	stp	x22, x21, [sp, #16]
 c64:	stp	x20, x19, [sp, #32]
 c68:	mov	x29, sp
 c6c:	adrp	x8, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 c70:	ldr	d0, [x8]
 c74:	add	x20, x0, #0x10
 c78:	str	x20, [x0]
 c7c:	str	d0, [x0, #8]
 c80:	cbz	x1, cd4 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x78>
 c84:	mov	x21, x1
 c88:	mov	x19, x0
 c8c:	b	c94 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x38>
 c90:	cbz	x21, cd4 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x78>
 c94:	ldrh	w8, [x21, #8]
 c98:	and	w8, w8, #0x7f
 c9c:	cmp	w8, #0xe
 ca0:	b.ne	cb8 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x5c>  // b.any
 ca4:	ldur	x8, [x21, #-8]
 ca8:	cmp	x8, #0x8
 cac:	b.cc	cb8 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x5c>  // b.lo, b.ul, b.last
 cb0:	and	x8, x8, #0x7
 cb4:	cbz	x8, d44 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0xe8>
 cb8:	mov	x0, x21
 cbc:	bl	0 <_ZN5clang4Decl19castFromDeclContextEPKNS_11DeclContextE>
 cc0:	ldr	x8, [x0, #16]
 cc4:	and	x21, x8, #0xfffffffffffffff8
 cc8:	tbz	w8, #2, c90 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x34>
 ccc:	ldr	x21, [x21]
 cd0:	cbnz	x21, c94 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x38>
 cd4:	ldp	x20, x19, [sp, #32]
 cd8:	ldp	x22, x21, [sp, #16]
 cdc:	ldp	x29, x30, [sp], #48
 ce0:	ret
 ce4:	cbz	x21, cd4 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x78>
 ce8:	ldrh	w8, [x21, #8]
 cec:	and	w8, w8, #0x7f
 cf0:	cmp	w8, #0xe
 cf4:	b.ne	d0c <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0xb0>  // b.any
 cf8:	ldur	x8, [x21, #-8]
 cfc:	cmp	x8, #0x8
 d00:	b.cc	d0c <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0xb0>  // b.lo, b.ul, b.last
 d04:	and	x8, x8, #0x7
 d08:	cbz	x8, d44 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0xe8>
 d0c:	mov	x0, x21
 d10:	bl	0 <_ZN5clang4Decl19castFromDeclContextEPKNS_11DeclContextE>
 d14:	ldr	x8, [x0, #16]
 d18:	and	x21, x8, #0xfffffffffffffff8
 d1c:	tbz	w8, #2, ce4 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x88>
 d20:	ldr	x21, [x21]
 d24:	b	ce4 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x88>
 d28:	mov	w3, #0x8                   	// #8
 d2c:	mov	x0, x19
 d30:	mov	x1, x20
 d34:	mov	x2, xzr
 d38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 d3c:	ldr	w8, [x19, #8]
 d40:	b	d64 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x108>
 d44:	ldrh	w8, [x21, #8]
 d48:	and	w8, w8, #0x7f
 d4c:	cmp	w8, #0xe
 d50:	b.ne	da0 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x144>  // b.any
 d54:	ldp	w8, w9, [x19, #8]
 d58:	sub	x22, x21, #0x30
 d5c:	cmp	w8, w9
 d60:	b.cs	d28 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0xcc>  // b.hs, b.nlast
 d64:	ldr	x9, [x19]
 d68:	str	x22, [x9, w8, uxtw #3]
 d6c:	ldp	w8, w9, [x19, #8]
 d70:	cmp	w8, w9
 d74:	b.cs	dc0 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x164>  // b.hs, b.nlast
 d78:	add	w8, w8, #0x1
 d7c:	mov	x0, x21
 d80:	str	w8, [x19, #8]
 d84:	bl	0 <_ZN5clang4Decl19castFromDeclContextEPKNS_11DeclContextE>
 d88:	ldr	x8, [x0, #16]
 d8c:	and	x21, x8, #0xfffffffffffffff8
 d90:	tbz	w8, #2, d98 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x13c>
 d94:	ldr	x21, [x21]
 d98:	cbnz	x21, ce8 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x8c>
 d9c:	b	cd4 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x78>
 da0:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 da4:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 da8:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 dac:	add	x0, x0, #0x0
 db0:	add	x1, x1, #0x0
 db4:	add	x3, x3, #0x0
 db8:	mov	w2, #0x108                 	// #264
 dbc:	bl	0 <__assert_fail>
 dc0:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 dc4:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 dc8:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 dcc:	add	x0, x0, #0x0
 dd0:	add	x1, x1, #0x0
 dd4:	add	x3, x3, #0x0
 dd8:	mov	w2, #0x43                  	// #67
 ddc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_:

0000000000000000 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x24, x3
  1c:	mov	x22, x2
  20:	mov	x23, x1
  24:	mov	x20, x0
  28:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
  2c:	ldr	x8, [x20]
  30:	mov	w21, w0
  34:	add	x19, x8, w0, uxtw #3
  38:	ldr	x8, [x19]
  3c:	cmn	x8, #0x8
  40:	b.eq	64 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0x64>  // b.none
  44:	cbz	x8, 70 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0x70>
  48:	b	50 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0x50>
  4c:	ldr	x8, [x19, #8]!
  50:	cbz	x8, 4c <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0x4c>
  54:	cmn	x8, #0x8
  58:	b.eq	4c <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0x4c>  // b.none
  5c:	mov	x1, xzr
  60:	b	f8 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0xf8>
  64:	ldr	w8, [x20, #16]
  68:	sub	w8, w8, #0x1
  6c:	str	w8, [x20, #16]
  70:	add	x0, x20, #0x18
  74:	add	x1, x22, #0x11
  78:	mov	w2, #0x3                   	// #3
  7c:	bl	0 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_>
  80:	ldr	x8, [x24]
  84:	mov	x25, x0
  88:	add	x24, x0, #0x10
  8c:	stp	x22, x8, [x0]
  90:	cbz	x22, a4 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0xa4>
  94:	mov	x0, x24
  98:	mov	x1, x23
  9c:	mov	x2, x22
  a0:	bl	0 <memcpy>
  a4:	strb	wzr, [x24, x22]
  a8:	str	x25, [x19]
  ac:	ldp	w8, w9, [x20, #12]
  b0:	ldr	w10, [x20, #8]
  b4:	add	w8, w8, #0x1
  b8:	add	w9, w9, w8
  bc:	cmp	w9, w10
  c0:	str	w8, [x20, #12]
  c4:	b.hi	114 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0x114>  // b.pmore
  c8:	mov	x0, x20
  cc:	mov	w1, w21
  d0:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
  d4:	ldr	x8, [x20]
  d8:	add	x19, x8, w0, uxtw #3
  dc:	b	e4 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0xe4>
  e0:	add	x19, x19, #0x8
  e4:	ldr	x8, [x19]
  e8:	cbz	x8, e0 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0xe0>
  ec:	cmn	x8, #0x8
  f0:	b.eq	e0 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0xe0>  // b.none
  f4:	mov	w1, #0x1                   	// #1
  f8:	mov	x0, x19
  fc:	ldp	x20, x19, [sp, #64]
 100:	ldp	x22, x21, [sp, #48]
 104:	ldp	x24, x23, [sp, #32]
 108:	ldr	x25, [sp, #16]
 10c:	ldp	x29, x30, [sp], #80
 110:	ret
 114:	adrp	x0, 0 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_>
 118:	adrp	x1, 0 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_>
 11c:	adrp	x3, 0 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_>
 120:	add	x0, x0, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x3, x3, #0x0
 12c:	mov	w2, #0x1bb                 	// #443
 130:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x10, [x0, #80]
  18:	ldr	x8, [x0]
  1c:	mov	w9, #0x1                   	// #1
  20:	lsl	x9, x9, x2
  24:	sub	x24, x9, #0x1
  28:	add	x12, x10, x1
  2c:	add	x10, x24, x8
  30:	neg	x23, x9
  34:	and	x10, x10, x23
  38:	sub	x10, x10, x8
  3c:	adds	x11, x10, x1
  40:	str	x12, [x0, #80]
  44:	b.cs	158 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x158>  // b.hs, b.nlast
  48:	ldr	x12, [x0, #8]
  4c:	mov	x20, x1
  50:	mov	x19, x0
  54:	sub	x12, x12, x8
  58:	cmp	x11, x12
  5c:	b.ls	f8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xf8>  // b.plast
  60:	add	x8, x20, x9
  64:	sub	x21, x8, #0x1
  68:	cmp	x21, #0x1, lsl #12
  6c:	b.ls	104 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x104>  // b.plast
  70:	mov	x0, x21
  74:	bl	0 <malloc>
  78:	mov	x22, x0
  7c:	cbnz	x0, 90 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x90>
  80:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	ldp	w8, w9, [x19, #72]
  94:	cmp	w8, w9
  98:	b.cs	144 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x144>  // b.hs, b.nlast
  9c:	ldr	x9, [x19, #64]
  a0:	add	x8, x9, w8, uxtw #4
  a4:	stp	x22, x21, [x8]
  a8:	ldp	w8, w9, [x19, #72]
  ac:	cmp	w8, w9
  b0:	b.cs	198 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x198>  // b.hs, b.nlast
  b4:	add	w9, w8, #0x1
  b8:	adds	x8, x24, x22
  bc:	str	w9, [x19, #72]
  c0:	b.cs	178 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x178>  // b.hs, b.nlast
  c4:	and	x0, x8, x23
  c8:	add	x8, x0, x20
  cc:	add	x9, x21, x22
  d0:	cmp	x8, x9
  d4:	b.ls	130 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x130>  // b.plast
  d8:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  dc:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  e0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0xfb                  	// #251
  f4:	bl	0 <__assert_fail>
  f8:	add	x0, x8, x10
  fc:	add	x8, x0, x20
 100:	b	12c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x12c>
 104:	mov	x0, x19
 108:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 10c:	ldr	x8, [x19]
 110:	adds	x8, x24, x8
 114:	b.cs	178 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x178>  // b.hs, b.nlast
 118:	ldr	x9, [x19, #8]
 11c:	and	x0, x8, x23
 120:	add	x8, x0, x20
 124:	cmp	x8, x9
 128:	b.hi	1b8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x1b8>  // b.pmore
 12c:	str	x8, [x19]
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldp	x24, x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	add	x0, x19, #0x40
 148:	mov	x1, xzr
 14c:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 150:	ldr	w8, [x19, #72]
 154:	b	9c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x9c>
 158:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 15c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 160:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0xdc                  	// #220
 174:	bl	0 <__assert_fail>
 178:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 17c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 180:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 184:	add	x0, x0, #0x0
 188:	add	x1, x1, #0x0
 18c:	add	x3, x3, #0x0
 190:	mov	w2, #0xbb                  	// #187
 194:	bl	0 <__assert_fail>
 198:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 19c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1a0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1a4:	add	x0, x0, #0x0
 1a8:	add	x1, x1, #0x0
 1ac:	add	x3, x3, #0x0
 1b0:	mov	w2, #0x43                  	// #67
 1b4:	bl	0 <__assert_fail>
 1b8:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1bc:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1c0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1c4:	add	x0, x0, #0x0
 1c8:	add	x1, x1, #0x0
 1cc:	add	x3, x3, #0x0
 1d0:	mov	w2, #0x106                 	// #262
 1d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w22, [x0, #24]
  14:	mov	w8, #0x1e                  	// #30
  18:	mov	x19, x0
  1c:	lsr	x9, x22, #7
  20:	cmp	x9, #0x1e
  24:	csel	x8, x9, x8, cc  // cc = lo, ul, last
  28:	mov	w9, #0x1000                	// #4096
  2c:	lsl	x20, x9, x8
  30:	mov	x0, x20
  34:	bl	0 <malloc>
  38:	mov	x21, x0
  3c:	cbnz	x0, 54 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x54>
  40:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  44:	add	x0, x0, #0x0
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	ldr	w22, [x19, #24]
  54:	ldr	w8, [x19, #28]
  58:	cmp	w22, w8
  5c:	b.cs	94 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x94>  // b.hs, b.nlast
  60:	ldr	x8, [x19, #16]
  64:	str	x21, [x8, w22, uxtw #3]
  68:	ldp	w8, w9, [x19, #24]
  6c:	cmp	w8, w9
  70:	b.cs	b0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0xb0>  // b.hs, b.nlast
  74:	add	w8, w8, #0x1
  78:	add	x9, x21, x20
  7c:	str	w8, [x19, #24]
  80:	stp	x21, x9, [x19]
  84:	ldp	x20, x19, [sp, #32]
  88:	ldp	x22, x21, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	add	x0, x19, #0x10
  98:	add	x1, x0, #0x10
  9c:	mov	w3, #0x8                   	// #8
  a0:	mov	x2, xzr
  a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  a8:	ldr	w22, [x19, #24]
  ac:	b	60 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x60>
  b0:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  b4:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  b8:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x43                  	// #67
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Replacement.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN5clang7tooling11ReplacementC1Ev>:
       0:	mov	x8, x0
       4:	mov	x9, x0
       8:	strb	wzr, [x8, #16]!
       c:	str	xzr, [x0, #32]
      10:	stp	x8, xzr, [x0]
      14:	strb	wzr, [x9, #56]!
      18:	stp	x9, xzr, [x0, #40]
      1c:	ret

0000000000000020 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>:
      20:	stp	x29, x30, [sp, #-80]!
      24:	str	x25, [sp, #16]
      28:	stp	x24, x23, [sp, #32]
      2c:	stp	x22, x21, [sp, #48]
      30:	stp	x20, x19, [sp, #64]
      34:	mov	x29, sp
      38:	mov	x20, x6
      3c:	mov	x21, x5
      40:	mov	w22, w4
      44:	mov	w23, w3
      48:	mov	x19, x0
      4c:	add	x0, x0, #0x10
      50:	str	x0, [x19]
      54:	cbz	x1, a0 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_+0x80>
      58:	mov	x24, x2
      5c:	mov	x25, x1
      60:	cmp	x2, #0x10
      64:	str	x2, [x29, #24]
      68:	b.cc	88 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_+0x68>  // b.lo, b.ul, b.last
      6c:	add	x1, x29, #0x18
      70:	mov	x0, x19
      74:	mov	x2, xzr
      78:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
      7c:	str	x0, [x19]
      80:	ldr	x8, [x29, #24]
      84:	str	x8, [x19, #16]
      88:	cbz	x24, b8 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_+0x98>
      8c:	cmp	x24, #0x1
      90:	b.ne	ac <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_+0x8c>  // b.any
      94:	ldrb	w8, [x25]
      98:	strb	w8, [x0]
      9c:	b	b8 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_+0x98>
      a0:	str	xzr, [x19, #8]
      a4:	strb	wzr, [x19, #16]
      a8:	b	c8 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_+0xa8>
      ac:	mov	x1, x25
      b0:	mov	x2, x24
      b4:	bl	0 <memcpy>
      b8:	ldr	x8, [x29, #24]
      bc:	ldr	x9, [x19]
      c0:	str	x8, [x19, #8]
      c4:	strb	wzr, [x9, x8]
      c8:	add	x0, x19, #0x38
      cc:	mov	x8, x19
      d0:	str	x0, [x8, #40]!
      d4:	stp	w23, w22, [x8, #-8]
      d8:	cbz	x21, 11c <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_+0xfc>
      dc:	cmp	x20, #0x10
      e0:	str	x20, [x29, #24]
      e4:	b.cc	104 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_+0xe4>  // b.lo, b.ul, b.last
      e8:	add	x1, x29, #0x18
      ec:	mov	x0, x8
      f0:	mov	x2, xzr
      f4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
      f8:	str	x0, [x19, #40]
      fc:	ldr	x8, [x29, #24]
     100:	str	x8, [x19, #56]
     104:	cbz	x20, 134 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_+0x114>
     108:	cmp	x20, #0x1
     10c:	b.ne	128 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_+0x108>  // b.any
     110:	ldrb	w8, [x21]
     114:	strb	w8, [x0]
     118:	b	134 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_+0x114>
     11c:	str	xzr, [x19, #48]
     120:	strb	wzr, [x19, #56]
     124:	b	144 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_+0x124>
     128:	mov	x1, x21
     12c:	mov	x2, x20
     130:	bl	0 <memcpy>
     134:	ldr	x8, [x29, #24]
     138:	ldr	x9, [x19, #40]
     13c:	str	x8, [x19, #48]
     140:	strb	wzr, [x9, x8]
     144:	ldp	x20, x19, [sp, #64]
     148:	ldp	x22, x21, [sp, #48]
     14c:	ldp	x24, x23, [sp, #32]
     150:	ldr	x25, [sp, #16]
     154:	ldp	x29, x30, [sp], #80
     158:	ret

000000000000015c <_ZN5clang7tooling11ReplacementC1ERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE>:
     15c:	mov	x8, x0
     160:	mov	x9, x0
     164:	strb	wzr, [x8, #16]!
     168:	and	x2, x2, #0xffffffff
     16c:	str	xzr, [x0, #32]
     170:	stp	x8, xzr, [x0]
     174:	strb	wzr, [x9, #56]!
     178:	stp	x9, xzr, [x0, #40]
     17c:	b	180 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE>

0000000000000180 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE>:
     180:	sub	sp, sp, #0x80
     184:	stp	x29, x30, [sp, #48]
     188:	stp	x26, x25, [sp, #64]
     18c:	stp	x24, x23, [sp, #80]
     190:	stp	x22, x21, [sp, #96]
     194:	stp	x20, x19, [sp, #112]
     198:	add	x29, sp, #0x30
     19c:	mov	x24, x1
     1a0:	mov	x19, x0
     1a4:	and	x1, x2, #0xffffffff
     1a8:	mov	x0, x24
     1ac:	mov	x20, x5
     1b0:	mov	x21, x4
     1b4:	mov	w22, w3
     1b8:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     1bc:	mov	x23, x0
     1c0:	add	w8, w23, #0x1
     1c4:	cmp	w8, #0x1
     1c8:	strb	wzr, [sp, #8]
     1cc:	b.hi	23c <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0xbc>  // b.pmore
     1d0:	mov	w8, #0x1                   	// #1
     1d4:	strb	w8, [sp, #8]
     1d8:	ldr	w8, [x24, #208]
     1dc:	cbz	w8, 4cc <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x34c>
     1e0:	add	x8, sp, #0x8
     1e4:	add	x24, x8, #0x10
     1e8:	str	x24, [sp, #8]
     1ec:	stur	xzr, [x29, #-8]
     1f0:	ldur	x8, [x29, #-8]
     1f4:	ldr	x9, [sp, #8]
     1f8:	str	x8, [sp, #16]
     1fc:	strb	wzr, [x9, x8]
     200:	ldr	x9, [sp, #8]
     204:	cmp	x9, x24
     208:	b.eq	314 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x194>  // b.none
     20c:	mov	x10, x19
     210:	ldr	x8, [x10], #16
     214:	cmp	x8, x10
     218:	b.eq	2d0 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x150>  // b.none
     21c:	ldr	x10, [x19, #16]
     220:	str	x9, [x19]
     224:	ldur	q0, [sp, #16]
     228:	stur	q0, [x19, #8]
     22c:	cbz	x8, 2e4 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x164>
     230:	str	x8, [sp, #8]
     234:	str	x10, [sp, #24]
     238:	b	350 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x1d0>
     23c:	tbnz	w23, #31, 2f0 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x170>
     240:	ldr	w8, [x24, #208]
     244:	cmp	w8, w23
     248:	b.ls	4ec <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x36c>  // b.plast
     24c:	ldr	x8, [x24, #200]
     250:	and	x9, x23, #0xffffffff
     254:	mov	w10, #0x28                  	// #40
     258:	madd	x0, x9, x10, x8
     25c:	ldr	w8, [x0]
     260:	tbnz	w8, #31, 1e0 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x60>
     264:	ldr	x8, [x0, #16]
     268:	ands	x8, x8, #0xfffffffffffffff8
     26c:	b.eq	1e0 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x60>  // b.none
     270:	ldr	x8, [x8, #8]
     274:	cbz	x8, 1e0 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x60>
     278:	ldp	x25, x26, [x8]
     27c:	add	x8, sp, #0x8
     280:	add	x24, x8, #0x10
     284:	str	x24, [sp, #8]
     288:	cbz	x25, 30c <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x18c>
     28c:	cmp	x26, #0x10
     290:	mov	x0, x24
     294:	stur	x26, [x29, #-8]
     298:	b.cc	2b8 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x138>  // b.lo, b.ul, b.last
     29c:	add	x0, sp, #0x8
     2a0:	sub	x1, x29, #0x8
     2a4:	mov	x2, xzr
     2a8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     2ac:	ldur	x8, [x29, #-8]
     2b0:	str	x0, [sp, #8]
     2b4:	str	x8, [sp, #24]
     2b8:	cbz	x26, 1f0 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x70>
     2bc:	cmp	x26, #0x1
     2c0:	b.ne	4bc <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x33c>  // b.any
     2c4:	ldrb	w8, [x25]
     2c8:	strb	w8, [x0]
     2cc:	b	1f0 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x70>
     2d0:	mov	x8, xzr
     2d4:	str	x9, [x19]
     2d8:	ldur	q0, [sp, #16]
     2dc:	stur	q0, [x19, #8]
     2e0:	cbnz	x8, 230 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0xb0>
     2e4:	mov	x8, x24
     2e8:	str	x24, [sp, #8]
     2ec:	b	350 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x1d0>
     2f0:	add	x2, sp, #0x8
     2f4:	mov	x0, x24
     2f8:	mov	w1, w23
     2fc:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     300:	ldrb	w8, [sp, #8]
     304:	cbnz	w8, 1e0 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x60>
     308:	b	25c <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0xdc>
     30c:	str	xzr, [sp, #16]
     310:	strb	wzr, [sp, #24]
     314:	ldr	x2, [sp, #16]
     318:	cbz	x2, 33c <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x1bc>
     31c:	ldr	x0, [x19]
     320:	cmp	x2, #0x1
     324:	b.ne	334 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x1b4>  // b.any
     328:	ldrb	w8, [sp, #24]
     32c:	strb	w8, [x0]
     330:	b	33c <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x1bc>
     334:	mov	x1, x24
     338:	bl	0 <memcpy>
     33c:	ldr	x8, [sp, #16]
     340:	ldr	x9, [x19]
     344:	str	x8, [x19, #8]
     348:	strb	wzr, [x9, x8]
     34c:	ldr	x8, [sp, #8]
     350:	str	xzr, [sp, #16]
     354:	strb	wzr, [x8]
     358:	ldr	x0, [sp, #8]
     35c:	lsr	x23, x23, #32
     360:	cmp	x0, x24
     364:	b.eq	36c <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x1ec>  // b.none
     368:	bl	0 <_ZdlPv>
     36c:	add	x8, sp, #0x8
     370:	bfi	x23, x22, #32, #32
     374:	add	x22, x8, #0x10
     378:	str	x23, [x19, #32]
     37c:	str	x22, [sp, #8]
     380:	cbz	x21, 3c8 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x248>
     384:	cmp	x20, #0x10
     388:	mov	x0, x22
     38c:	stur	x20, [x29, #-8]
     390:	b.cc	3b0 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x230>  // b.lo, b.ul, b.last
     394:	add	x0, sp, #0x8
     398:	sub	x1, x29, #0x8
     39c:	mov	x2, xzr
     3a0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     3a4:	ldur	x8, [x29, #-8]
     3a8:	str	x0, [sp, #8]
     3ac:	str	x8, [sp, #24]
     3b0:	cbz	x20, 3e0 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x260>
     3b4:	cmp	x20, #0x1
     3b8:	b.ne	3d4 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x254>  // b.any
     3bc:	ldrb	w8, [x21]
     3c0:	strb	w8, [x0]
     3c4:	b	3e0 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x260>
     3c8:	str	xzr, [sp, #16]
     3cc:	strb	wzr, [sp, #24]
     3d0:	b	42c <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x2ac>
     3d4:	mov	x1, x21
     3d8:	mov	x2, x20
     3dc:	bl	0 <memcpy>
     3e0:	ldur	x8, [x29, #-8]
     3e4:	ldr	x9, [sp, #8]
     3e8:	str	x8, [sp, #16]
     3ec:	strb	wzr, [x9, x8]
     3f0:	ldr	x9, [sp, #8]
     3f4:	cmp	x9, x22
     3f8:	b.eq	42c <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x2ac>  // b.none
     3fc:	ldr	x8, [x19, #40]
     400:	add	x10, x19, #0x38
     404:	cmp	x8, x10
     408:	b.eq	49c <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x31c>  // b.none
     40c:	ldr	x10, [x19, #56]
     410:	str	x9, [x19, #40]
     414:	ldur	q0, [sp, #16]
     418:	str	q0, [x19, #48]
     41c:	cbz	x8, 4b0 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x330>
     420:	str	x8, [sp, #8]
     424:	str	x10, [sp, #24]
     428:	b	468 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x2e8>
     42c:	ldr	x2, [sp, #16]
     430:	cbz	x2, 454 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x2d4>
     434:	ldr	x0, [x19, #40]
     438:	cmp	x2, #0x1
     43c:	b.ne	44c <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x2cc>  // b.any
     440:	ldrb	w8, [sp, #24]
     444:	strb	w8, [x0]
     448:	b	454 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x2d4>
     44c:	mov	x1, x22
     450:	bl	0 <memcpy>
     454:	ldr	x8, [sp, #16]
     458:	ldr	x9, [x19, #40]
     45c:	str	x8, [x19, #48]
     460:	strb	wzr, [x9, x8]
     464:	ldr	x8, [sp, #8]
     468:	str	xzr, [sp, #16]
     46c:	strb	wzr, [x8]
     470:	ldr	x0, [sp, #8]
     474:	cmp	x0, x22
     478:	b.eq	480 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x300>  // b.none
     47c:	bl	0 <_ZdlPv>
     480:	ldp	x20, x19, [sp, #112]
     484:	ldp	x22, x21, [sp, #96]
     488:	ldp	x24, x23, [sp, #80]
     48c:	ldp	x26, x25, [sp, #64]
     490:	ldp	x29, x30, [sp, #48]
     494:	add	sp, sp, #0x80
     498:	ret
     49c:	mov	x8, xzr
     4a0:	str	x9, [x19, #40]
     4a4:	ldur	q0, [sp, #16]
     4a8:	str	q0, [x19, #48]
     4ac:	cbnz	x8, 420 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x2a0>
     4b0:	mov	x8, x22
     4b4:	str	x22, [sp, #8]
     4b8:	b	468 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x2e8>
     4bc:	mov	x1, x25
     4c0:	mov	x2, x26
     4c4:	bl	0 <memcpy>
     4c8:	b	1f0 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x70>
     4cc:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     4d0:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     4d4:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     4d8:	add	x0, x0, #0x0
     4dc:	add	x1, x1, #0x0
     4e0:	add	x3, x3, #0x0
     4e4:	mov	w2, #0x99                  	// #153
     4e8:	bl	0 <__assert_fail>
     4ec:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     4f0:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     4f4:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     4f8:	add	x0, x0, #0x0
     4fc:	add	x1, x1, #0x0
     500:	add	x3, x3, #0x0
     504:	mov	w2, #0x693                 	// #1683
     508:	bl	0 <__assert_fail>

000000000000050c <_ZN5clang7tooling11ReplacementC1ERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE>:
     50c:	mov	x8, x0
     510:	mov	x9, x0
     514:	strb	wzr, [x8, #16]!
     518:	str	xzr, [x0, #32]
     51c:	stp	x8, xzr, [x0]
     520:	strb	wzr, [x9, #56]!
     524:	stp	x9, xzr, [x0, #40]
     528:	b	52c <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE>

000000000000052c <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE>:
     52c:	stp	x29, x30, [sp, #-96]!
     530:	str	x27, [sp, #16]
     534:	stp	x26, x25, [sp, #32]
     538:	stp	x24, x23, [sp, #48]
     53c:	stp	x22, x21, [sp, #64]
     540:	stp	x20, x19, [sp, #80]
     544:	mov	x29, sp
     548:	ldr	w23, [x2]
     54c:	mov	x24, x5
     550:	mov	x19, x4
     554:	mov	x20, x3
     558:	mov	x25, x2
     55c:	mov	x21, x1
     560:	mov	x22, x0
     564:	tbnz	w23, #31, 57c <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0x50>
     568:	mov	x1, x23
     56c:	ldr	w8, [x25, #4]
     570:	and	x27, x1, #0xffffffff
     574:	tbz	w8, #31, 5b0 <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0x84>
     578:	b	5a0 <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0x74>
     57c:	mov	x0, x21
     580:	mov	x1, x23
     584:	bl	0 <_ZNK5clang13SourceManager22getSpellingLocSlowCaseENS_14SourceLocationE>
     588:	ldr	w1, [x25]
     58c:	and	x23, x0, #0xffffffff
     590:	tbnz	w1, #31, 638 <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0x10c>
     594:	ldr	w8, [x25, #4]
     598:	and	x27, x1, #0xffffffff
     59c:	tbz	w8, #31, 5b0 <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0x84>
     5a0:	mov	x0, x21
     5a4:	mov	x1, x8
     5a8:	bl	0 <_ZNK5clang13SourceManager22getSpellingLocSlowCaseENS_14SourceLocationE>
     5ac:	mov	x8, x0
     5b0:	mov	x0, x21
     5b4:	mov	x1, x27
     5b8:	and	x26, x8, #0xffffffff
     5bc:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     5c0:	mov	x27, x0
     5c4:	mov	x0, x21
     5c8:	mov	x1, x26
     5cc:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     5d0:	cmp	w27, w0
     5d4:	b.ne	604 <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0xd8>  // b.any
     5d8:	ldrb	w8, [x25, #8]
     5dc:	lsr	x25, x27, #32
     5e0:	lsr	x27, x0, #32
     5e4:	cbz	w8, 5fc <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0xd0>
     5e8:	mov	x0, x26
     5ec:	mov	x1, x21
     5f0:	mov	x2, x24
     5f4:	bl	0 <_ZN5clang5Lexer18MeasureTokenLengthENS_14SourceLocationERKNS_13SourceManagerERKNS_11LangOptionsE>
     5f8:	add	w27, w0, w27
     5fc:	sub	w3, w27, w25
     600:	b	608 <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0xdc>
     604:	mov	w3, #0xffffffff            	// #-1
     608:	mov	x0, x22
     60c:	mov	x1, x21
     610:	mov	x2, x23
     614:	mov	x4, x20
     618:	mov	x5, x19
     61c:	ldp	x20, x19, [sp, #80]
     620:	ldp	x22, x21, [sp, #64]
     624:	ldp	x24, x23, [sp, #48]
     628:	ldp	x26, x25, [sp, #32]
     62c:	ldr	x27, [sp, #16]
     630:	ldp	x29, x30, [sp], #96
     634:	b	180 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE>
     638:	mov	x0, x21
     63c:	bl	0 <_ZNK5clang13SourceManager22getSpellingLocSlowCaseENS_14SourceLocationE>
     640:	mov	x1, x0
     644:	ldr	w8, [x25, #4]
     648:	and	x27, x1, #0xffffffff
     64c:	tbz	w8, #31, 5b0 <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0x84>
     650:	b	5a0 <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0x74>

0000000000000654 <_ZNK5clang7tooling11Replacement12isApplicableEv>:
     654:	stp	x29, x30, [sp, #-16]!
     658:	mov	x29, sp
     65c:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     660:	add	x1, x1, #0x0
     664:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
     668:	cmp	w0, #0x0
     66c:	cset	w0, ne  // ne = any
     670:	ldp	x29, x30, [sp], #16
     674:	ret

0000000000000678 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE>:
     678:	sub	sp, sp, #0x50
     67c:	stp	x29, x30, [sp, #32]
     680:	stp	x22, x21, [sp, #48]
     684:	stp	x20, x19, [sp, #64]
     688:	add	x29, sp, #0x20
     68c:	ldr	x21, [x1]
     690:	mov	x20, x0
     694:	mov	x19, x1
     698:	ldp	x1, x2, [x20]
     69c:	ldr	x0, [x21, #16]
     6a0:	mov	x8, sp
     6a4:	mov	w4, #0x1                   	// #1
     6a8:	mov	w3, wzr
     6ac:	bl	0 <_ZN5clang11FileManager7getFileEN4llvm9StringRefEbb>
     6b0:	ldrb	w8, [sp, #16]
     6b4:	mov	w0, wzr
     6b8:	tbnz	w8, #0, 724 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0xac>
     6bc:	ldr	x22, [sp]
     6c0:	mov	x0, x21
     6c4:	mov	x1, x22
     6c8:	bl	0 <_ZNK5clang13SourceManager13translateFileEPKNS_9FileEntryE>
     6cc:	mov	x1, x0
     6d0:	mov	x8, x0
     6d4:	cbz	w1, 738 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0xc0>
     6d8:	add	w9, w1, #0x1
     6dc:	cmp	w9, #0x1
     6e0:	sturb	wzr, [x29, #-4]
     6e4:	b.hi	788 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0x110>  // b.pmore
     6e8:	mov	w8, #0x1                   	// #1
     6ec:	sturb	w8, [x29, #-4]
     6f0:	ldr	w8, [x21, #208]
     6f4:	cbz	w8, 814 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0x19c>
     6f8:	mov	w8, wzr
     6fc:	ldr	w9, [x20, #32]
     700:	adds	w8, w9, w8
     704:	b.mi	7bc <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0x144>  // b.first
     708:	ldr	w2, [x20, #36]
     70c:	ldp	x3, x4, [x20, #40]
     710:	mov	w1, w8
     714:	mov	x0, x19
     718:	bl	0 <_ZN5clang8Rewriter11ReplaceTextENS_14SourceLocationEjN4llvm9StringRefE>
     71c:	tbnz	w0, #0, 7f4 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0x17c>
     720:	mov	w0, #0x1                   	// #1
     724:	ldp	x20, x19, [sp, #64]
     728:	ldp	x22, x21, [sp, #48]
     72c:	ldp	x29, x30, [sp, #32]
     730:	add	sp, sp, #0x50
     734:	ret
     738:	cbz	x22, 834 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0x1bc>
     73c:	mov	x0, x21
     740:	mov	x1, x22
     744:	mov	w2, wzr
     748:	bl	0 <_ZN5clang13SourceManager23getOrCreateContentCacheEPKNS_9FileEntryEb>
     74c:	cbz	x0, 854 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0x1dc>
     750:	ldp	x2, x3, [x22]
     754:	mov	x1, x0
     758:	mov	x0, x21
     75c:	mov	x4, xzr
     760:	mov	w5, wzr
     764:	mov	w6, wzr
     768:	mov	w7, wzr
     76c:	bl	0 <_ZN5clang13SourceManager12createFileIDEPKNS_6SrcMgr12ContentCacheEN4llvm9StringRefENS_14SourceLocationENS1_18CharacteristicKindEij>
     770:	mov	x1, x0
     774:	and	x8, x0, #0xffffffff
     778:	add	w9, w1, #0x1
     77c:	cmp	w9, #0x1
     780:	sturb	wzr, [x29, #-4]
     784:	b.ls	6e8 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0x70>  // b.plast
     788:	tbnz	w1, #31, 7dc <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0x164>
     78c:	ldr	w9, [x21, #208]
     790:	cmp	w9, w1
     794:	b.ls	874 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0x1fc>  // b.plast
     798:	ldr	x9, [x21, #200]
     79c:	and	x8, x8, #0xffffffff
     7a0:	mov	w10, #0x28                  	// #40
     7a4:	madd	x0, x8, x10, x9
     7a8:	ldr	w8, [x0]
     7ac:	bic	w8, w8, w8, asr #31
     7b0:	ldr	w9, [x20, #32]
     7b4:	adds	w8, w9, w8
     7b8:	b.pl	708 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0x90>  // b.nfrst
     7bc:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     7c0:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     7c4:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     7c8:	add	x0, x0, #0x0
     7cc:	add	x1, x1, #0x0
     7d0:	add	x3, x3, #0x0
     7d4:	mov	w2, #0x85                  	// #133
     7d8:	bl	0 <__assert_fail>
     7dc:	sub	x2, x29, #0x4
     7e0:	mov	x0, x21
     7e4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     7e8:	ldurb	w8, [x29, #-4]
     7ec:	cbnz	w8, 6f8 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0x80>
     7f0:	b	7a8 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0x130>
     7f4:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     7f8:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     7fc:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     800:	add	x0, x0, #0x0
     804:	add	x1, x1, #0x0
     808:	add	x3, x3, #0x0
     80c:	mov	w2, #0x53                  	// #83
     810:	bl	0 <__assert_fail>
     814:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     818:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     81c:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     820:	add	x0, x0, #0x0
     824:	add	x1, x1, #0x0
     828:	add	x3, x3, #0x0
     82c:	mov	w2, #0x99                  	// #153
     830:	bl	0 <__assert_fail>
     834:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     838:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     83c:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     840:	add	x0, x0, #0x0
     844:	add	x1, x1, #0x0
     848:	add	x3, x3, #0x0
     84c:	mov	w2, #0x342                 	// #834
     850:	bl	0 <__assert_fail>
     854:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     858:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     85c:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     860:	add	x0, x0, #0x0
     864:	add	x1, x1, #0x0
     868:	add	x3, x3, #0x0
     86c:	mov	w2, #0x345                 	// #837
     870:	bl	0 <__assert_fail>
     874:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     878:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     87c:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     880:	add	x0, x0, #0x0
     884:	add	x1, x1, #0x0
     888:	add	x3, x3, #0x0
     88c:	mov	w2, #0x693                 	// #1683
     890:	bl	0 <__assert_fail>

0000000000000894 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev>:
     894:	sub	sp, sp, #0x90
     898:	stp	x29, x30, [sp, #96]
     89c:	stp	x22, x21, [sp, #112]
     8a0:	stp	x20, x19, [sp, #128]
     8a4:	add	x29, sp, #0x60
     8a8:	sturb	wzr, [x29, #-24]
     8ac:	stp	xzr, xzr, [sp, #24]
     8b0:	adrp	x11, 0 <_ZTVN4llvm18raw_string_ostreamE>
     8b4:	ldr	x11, [x11]
     8b8:	sub	x9, x29, #0x28
     8bc:	mov	w10, #0x1                   	// #1
     8c0:	str	w10, [sp, #40]
     8c4:	add	x22, x9, #0x10
     8c8:	add	x10, x11, #0x10
     8cc:	str	x9, [sp, #48]
     8d0:	stp	x22, xzr, [x29, #-40]
     8d4:	stp	x10, xzr, [sp, #8]
     8d8:	ldp	x1, x2, [x0]
     8dc:	mov	x20, x0
     8e0:	add	x0, sp, #0x8
     8e4:	mov	x19, x8
     8e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8ec:	ldp	x9, x8, [x0, #16]
     8f0:	sub	x9, x9, x8
     8f4:	cmp	x9, #0x1
     8f8:	b.hi	910 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0x7c>  // b.pmore
     8fc:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     900:	add	x1, x1, #0x0
     904:	mov	w2, #0x2                   	// #2
     908:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     90c:	b	924 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0x90>
     910:	mov	w9, #0x203a                	// #8250
     914:	strh	w9, [x8]
     918:	ldr	x8, [x0, #24]
     91c:	add	x8, x8, #0x2
     920:	str	x8, [x0, #24]
     924:	ldr	w1, [x20, #32]
     928:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     92c:	ldp	x9, x8, [x0, #16]
     930:	sub	x9, x9, x8
     934:	cmp	x9, #0x1
     938:	b.hi	950 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0xbc>  // b.pmore
     93c:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     940:	add	x1, x1, #0x0
     944:	mov	w2, #0x2                   	// #2
     948:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     94c:	b	964 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0xd0>
     950:	mov	w9, #0x2b3a                	// #11066
     954:	strh	w9, [x8]
     958:	ldr	x8, [x0, #24]
     95c:	add	x8, x8, #0x2
     960:	str	x8, [x0, #24]
     964:	ldr	w1, [x20, #36]
     968:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     96c:	ldp	x9, x8, [x0, #16]
     970:	sub	x9, x9, x8
     974:	cmp	x9, #0x1
     978:	b.hi	990 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0xfc>  // b.pmore
     97c:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     980:	add	x1, x1, #0x0
     984:	mov	w2, #0x2                   	// #2
     988:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     98c:	b	9a4 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0x110>
     990:	mov	w9, #0x223a                	// #8762
     994:	strh	w9, [x8]
     998:	ldr	x8, [x0, #24]
     99c:	add	x8, x8, #0x2
     9a0:	str	x8, [x0, #24]
     9a4:	ldp	x1, x2, [x20, #40]
     9a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     9ac:	ldp	x9, x8, [x0, #16]
     9b0:	cmp	x9, x8
     9b4:	b.ne	9dc <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0x148>  // b.any
     9b8:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     9bc:	add	x1, x1, #0x0
     9c0:	mov	w2, #0x1                   	// #1
     9c4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     9c8:	ldr	x8, [sp, #32]
     9cc:	ldr	x9, [sp, #16]
     9d0:	cmp	x8, x9
     9d4:	b.ne	a00 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0x16c>  // b.any
     9d8:	b	a08 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0x174>
     9dc:	mov	w9, #0x22                  	// #34
     9e0:	strb	w9, [x8]
     9e4:	ldr	x8, [x0, #24]
     9e8:	add	x8, x8, #0x1
     9ec:	str	x8, [x0, #24]
     9f0:	ldr	x8, [sp, #32]
     9f4:	ldr	x9, [sp, #16]
     9f8:	cmp	x8, x9
     9fc:	b.eq	a08 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0x174>  // b.none
     a00:	add	x0, sp, #0x8
     a04:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     a08:	ldr	x8, [sp, #48]
     a0c:	add	x0, x19, #0x10
     a10:	str	x0, [x19]
     a14:	ldp	x20, x21, [x8]
     a18:	cbnz	x20, a20 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0x18c>
     a1c:	cbnz	x21, aa8 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0x214>
     a20:	cmp	x21, #0x10
     a24:	stur	x21, [x29, #-8]
     a28:	b.cc	a48 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0x1b4>  // b.lo, b.ul, b.last
     a2c:	sub	x1, x29, #0x8
     a30:	mov	x0, x19
     a34:	mov	x2, xzr
     a38:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     a3c:	ldur	x8, [x29, #-8]
     a40:	str	x0, [x19]
     a44:	str	x8, [x19, #16]
     a48:	cbz	x21, a6c <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0x1d8>
     a4c:	cmp	x21, #0x1
     a50:	b.ne	a60 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0x1cc>  // b.any
     a54:	ldrb	w8, [x20]
     a58:	strb	w8, [x0]
     a5c:	b	a6c <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0x1d8>
     a60:	mov	x1, x20
     a64:	mov	x2, x21
     a68:	bl	0 <memcpy>
     a6c:	ldur	x8, [x29, #-8]
     a70:	ldr	x9, [x19]
     a74:	add	x0, sp, #0x8
     a78:	str	x8, [x19, #8]
     a7c:	strb	wzr, [x9, x8]
     a80:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     a84:	ldur	x0, [x29, #-40]
     a88:	cmp	x0, x22
     a8c:	b.eq	a94 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0x200>  // b.none
     a90:	bl	0 <_ZdlPv>
     a94:	ldp	x20, x19, [sp, #128]
     a98:	ldp	x22, x21, [sp, #112]
     a9c:	ldp	x29, x30, [sp, #96]
     aa0:	add	sp, sp, #0x90
     aa4:	ret
     aa8:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     aac:	add	x0, x0, #0x0
     ab0:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000000ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>:
     ab4:	stp	x29, x30, [sp, #-64]!
     ab8:	stp	x24, x23, [sp, #16]
     abc:	stp	x22, x21, [sp, #32]
     ac0:	stp	x20, x19, [sp, #48]
     ac4:	mov	x29, sp
     ac8:	ldr	w8, [x0, #32]
     acc:	ldr	w9, [x1, #32]
     ad0:	cmp	w8, w9
     ad4:	b.ne	b50 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0x9c>  // b.any
     ad8:	ldr	w8, [x0, #36]
     adc:	ldr	w9, [x1, #36]
     ae0:	mov	x21, x1
     ae4:	mov	x20, x0
     ae8:	cmp	w8, w9
     aec:	b.ne	b50 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0x9c>  // b.any
     af0:	ldp	x23, x19, [x20]
     af4:	ldp	x22, x24, [x21]
     af8:	cmp	x19, x24
     afc:	b.ne	b18 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0x64>  // b.any
     b00:	cbz	x19, b58 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0xa4>
     b04:	mov	x0, x23
     b08:	mov	x1, x22
     b0c:	mov	x2, x19
     b10:	bl	0 <bcmp>
     b14:	cbz	w0, b58 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0xa4>
     b18:	cmp	x24, x19
     b1c:	csel	x2, x24, x19, cc  // cc = lo, ul, last
     b20:	cbz	x2, b94 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0xe0>
     b24:	mov	x0, x23
     b28:	mov	x1, x22
     b2c:	bl	0 <memcmp>
     b30:	cmp	w0, #0x0
     b34:	mov	w8, #0x1                   	// #1
     b38:	cneg	w8, w8, lt  // lt = tstop
     b3c:	csel	w8, w8, wzr, ne  // ne = any
     b40:	cmp	x19, x24
     b44:	b.eq	bb0 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0xfc>  // b.none
     b48:	cbz	w0, ba4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0xf0>
     b4c:	b	bb0 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0xfc>
     b50:	cset	w0, cc  // cc = lo, ul, last
     b54:	b	bb8 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0x104>
     b58:	ldr	x19, [x20, #48]
     b5c:	ldr	x22, [x21, #48]
     b60:	cmp	x22, x19
     b64:	csel	x2, x22, x19, cc  // cc = lo, ul, last
     b68:	cbz	x2, b88 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0xd4>
     b6c:	ldr	x1, [x21, #40]
     b70:	ldr	x0, [x20, #40]
     b74:	bl	0 <memcmp>
     b78:	cmp	w0, #0x0
     b7c:	mov	w8, #0x1                   	// #1
     b80:	cneg	w8, w8, lt  // lt = tstop
     b84:	cbnz	w0, bb0 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0xfc>
     b88:	cmp	x19, x22
     b8c:	b.eq	b9c <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0xe8>  // b.none
     b90:	b	ba8 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0xf4>
     b94:	cmp	x19, x24
     b98:	b.ne	ba4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0xf0>  // b.any
     b9c:	mov	w8, wzr
     ba0:	b	bb0 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0xfc>
     ba4:	cmp	x19, x24
     ba8:	mov	w8, #0xffffffff            	// #-1
     bac:	cneg	w8, w8, cs  // cs = hs, nlast
     bb0:	cmn	w8, #0x1
     bb4:	cset	w0, eq  // eq = none
     bb8:	ldp	x20, x19, [sp, #48]
     bbc:	ldp	x22, x21, [sp, #32]
     bc0:	ldp	x24, x23, [sp, #16]
     bc4:	ldp	x29, x30, [sp], #64
     bc8:	ret

0000000000000bcc <_ZN5clang7toolingeqERKNS0_11ReplacementES3_>:
     bcc:	stp	x29, x30, [sp, #-32]!
     bd0:	stp	x20, x19, [sp, #16]
     bd4:	mov	x29, sp
     bd8:	ldr	w8, [x0, #32]
     bdc:	ldr	w9, [x1, #32]
     be0:	cmp	w8, w9
     be4:	b.ne	c58 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x8c>  // b.any
     be8:	ldr	w8, [x0, #36]
     bec:	ldr	w9, [x1, #36]
     bf0:	mov	x19, x1
     bf4:	mov	x20, x0
     bf8:	cmp	w8, w9
     bfc:	b.ne	c58 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x8c>  // b.any
     c00:	ldr	x2, [x20, #8]
     c04:	ldr	x8, [x19, #8]
     c08:	cmp	x2, x8
     c0c:	b.ne	c58 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x8c>  // b.any
     c10:	cbz	x2, c24 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x58>
     c14:	ldr	x0, [x20]
     c18:	ldr	x1, [x19]
     c1c:	bl	0 <bcmp>
     c20:	cbnz	w0, c58 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x8c>
     c24:	ldr	x2, [x20, #48]
     c28:	ldr	x8, [x19, #48]
     c2c:	cmp	x2, x8
     c30:	b.ne	c58 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x8c>  // b.any
     c34:	cbz	x2, c68 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x9c>
     c38:	ldr	x0, [x20, #40]
     c3c:	ldr	x1, [x19, #40]
     c40:	bl	0 <bcmp>
     c44:	cmp	w0, #0x0
     c48:	cset	w0, eq  // eq = none
     c4c:	ldp	x20, x19, [sp, #16]
     c50:	ldp	x29, x30, [sp], #32
     c54:	ret
     c58:	mov	w0, wzr
     c5c:	ldp	x20, x19, [sp, #16]
     c60:	ldp	x29, x30, [sp], #32
     c64:	ret
     c68:	mov	w0, #0x1                   	// #1
     c6c:	ldp	x20, x19, [sp, #16]
     c70:	ldp	x29, x30, [sp], #32
     c74:	ret

0000000000000c78 <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE>:
     c78:	stp	x29, x30, [sp, #-80]!
     c7c:	stp	x26, x25, [sp, #16]
     c80:	stp	x24, x23, [sp, #32]
     c84:	stp	x22, x21, [sp, #48]
     c88:	stp	x20, x19, [sp, #64]
     c8c:	mov	x29, sp
     c90:	ldr	x22, [x0, #24]
     c94:	ldr	w21, [x1, #32]
     c98:	add	x23, x0, #0x8
     c9c:	mov	x19, x1
     ca0:	cmp	x22, x23
     ca4:	mov	x20, x8
     ca8:	b.eq	ce0 <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE+0x68>  // b.none
     cac:	mov	w25, wzr
     cb0:	mov	x0, x22
     cb4:	ldp	w8, w9, [x0, #64]
     cb8:	add	w10, w9, w8
     cbc:	cmp	w10, w21
     cc0:	b.hi	cf0 <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE+0x78>  // b.pmore
     cc4:	ldr	w8, [x0, #80]
     cc8:	sub	w9, w25, w9
     ccc:	add	w25, w9, w8
     cd0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     cd4:	cmp	x0, x23
     cd8:	b.ne	cb4 <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE+0x3c>  // b.any
     cdc:	b	d08 <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE+0x90>
     ce0:	ldr	w8, [x19, #36]
     ce4:	mov	w24, wzr
     ce8:	add	w25, w8, w21
     cec:	b	d7c <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE+0x104>
     cf0:	cmp	w8, w21
     cf4:	b.cs	d08 <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE+0x90>  // b.hs, b.nlast
     cf8:	ldr	x9, [x0, #80]
     cfc:	add	x10, x9, x8
     d00:	cmp	x10, x21
     d04:	b.ls	dac <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE+0x134>  // b.plast
     d08:	mov	w8, w21
     d0c:	ldr	w9, [x19, #36]
     d10:	mov	w24, wzr
     d14:	add	w26, w8, w25
     d18:	add	w25, w9, w21
     d1c:	ldp	w8, w9, [x22, #64]
     d20:	add	w10, w9, w8
     d24:	cmp	w10, w25
     d28:	b.hi	d50 <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE+0xd8>  // b.pmore
     d2c:	ldr	w8, [x22, #80]
     d30:	sub	w9, w24, w9
     d34:	mov	x0, x22
     d38:	add	w24, w9, w8
     d3c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     d40:	mov	x22, x0
     d44:	cmp	x0, x23
     d48:	b.ne	d1c <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE+0xa4>  // b.any
     d4c:	b	d78 <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE+0x100>
     d50:	cmp	w8, w25
     d54:	b.cs	d78 <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE+0x100>  // b.hs, b.nlast
     d58:	ldr	x9, [x22, #80]
     d5c:	add	x10, x9, x8
     d60:	cmp	x10, w25, uxtw
     d64:	b.hi	d78 <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE+0x100>  // b.pmore
     d68:	cmp	x9, #0x0
     d6c:	add	w8, w8, w9
     d70:	cset	w9, ne  // ne = any
     d74:	sub	w25, w8, w9
     d78:	mov	w21, w26
     d7c:	sub	w8, w24, w21
     d80:	ldp	x1, x2, [x19]
     d84:	ldp	x5, x6, [x19, #40]
     d88:	add	w4, w8, w25
     d8c:	mov	x0, x20
     d90:	mov	w3, w21
     d94:	ldp	x20, x19, [sp, #64]
     d98:	ldp	x22, x21, [sp, #48]
     d9c:	ldp	x24, x23, [sp, #32]
     da0:	ldp	x26, x25, [sp, #16]
     da4:	ldp	x29, x30, [sp], #80
     da8:	b	20 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>
     dac:	cmp	x9, #0x0
     db0:	add	w8, w8, w9
     db4:	cset	w9, ne  // ne = any
     db8:	sub	w8, w8, w9
     dbc:	b	d0c <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE+0x94>

0000000000000dc0 <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj>:
     dc0:	stp	x29, x30, [sp, #-48]!
     dc4:	str	x21, [sp, #16]
     dc8:	stp	x20, x19, [sp, #32]
     dcc:	mov	x29, sp
     dd0:	mov	x8, x0
     dd4:	ldr	x0, [x0, #24]
     dd8:	add	x21, x8, #0x8
     ddc:	mov	w19, w1
     de0:	mov	w20, wzr
     de4:	cmp	x0, x21
     de8:	b.eq	e40 <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj+0x80>  // b.none
     dec:	ldp	w8, w9, [x0, #64]
     df0:	add	w10, w9, w8
     df4:	cmp	w10, w19
     df8:	b.hi	e18 <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj+0x58>  // b.pmore
     dfc:	ldr	w8, [x0, #80]
     e00:	sub	w9, w20, w9
     e04:	add	w20, w9, w8
     e08:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     e0c:	cmp	x0, x21
     e10:	b.ne	dec <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj+0x2c>  // b.any
     e14:	b	e40 <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj+0x80>
     e18:	cmp	w8, w19
     e1c:	b.cs	e40 <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj+0x80>  // b.hs, b.nlast
     e20:	ldr	x9, [x0, #80]
     e24:	add	x10, x9, x8
     e28:	cmp	x10, w19, uxtw
     e2c:	b.hi	e40 <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj+0x80>  // b.pmore
     e30:	cmp	x9, #0x0
     e34:	add	w8, w8, w9
     e38:	cset	w9, ne  // ne = any
     e3c:	sub	w19, w8, w9
     e40:	add	w0, w19, w20
     e44:	ldp	x20, x19, [sp, #32]
     e48:	ldr	x21, [sp, #16]
     e4c:	ldp	x29, x30, [sp], #48
     e50:	ret

0000000000000e54 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev>:
     e54:	sub	sp, sp, #0x70
     e58:	stp	x29, x30, [sp, #64]
     e5c:	str	x21, [sp, #80]
     e60:	stp	x20, x19, [sp, #96]
     e64:	add	x29, sp, #0x40
     e68:	ldr	w9, [x0, #8]
     e6c:	cmp	w9, #0x3
     e70:	b.hi	1140 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x2ec>  // b.pmore
     e74:	mov	x19, x8
     e78:	adrp	x8, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     e7c:	add	x8, x8, #0x0
     e80:	adr	x10, e94 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x40>
     e84:	ldrb	w11, [x8, x9]
     e88:	add	x10, x10, x11, lsl #2
     e8c:	mov	x20, x0
     e90:	br	x10
     e94:	add	x8, x19, #0x10
     e98:	mov	w9, #0x1e                  	// #30
     e9c:	add	x1, sp, #0x20
     ea0:	mov	x0, x19
     ea4:	mov	x2, xzr
     ea8:	str	x8, [x19]
     eac:	str	x9, [sp, #32]
     eb0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     eb4:	adrp	x9, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     eb8:	add	x9, x9, #0x0
     ebc:	ldr	x8, [sp, #32]
     ec0:	ldur	q0, [x9, #14]
     ec4:	ldr	q1, [x9]
     ec8:	str	x0, [x19]
     ecc:	str	x8, [x19, #16]
     ed0:	stur	q0, [x0, #14]
     ed4:	str	q1, [x0]
     ed8:	b	fd0 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x17c>
     edc:	add	x8, x19, #0x10
     ee0:	mov	w9, #0x3a                  	// #58
     ee4:	add	x1, sp, #0x20
     ee8:	mov	x0, x19
     eec:	mov	x2, xzr
     ef0:	str	x8, [x19]
     ef4:	str	x9, [sp, #32]
     ef8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     efc:	adrp	x9, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     f00:	add	x9, x9, #0x0
     f04:	ldr	x8, [sp, #32]
     f08:	ldp	q3, q0, [x9, #16]
     f0c:	ldur	q1, [x9, #42]
     f10:	ldr	q2, [x9]
     f14:	str	x0, [x19]
     f18:	str	x8, [x19, #16]
     f1c:	stur	q1, [x0, #42]
     f20:	stp	q3, q0, [x0, #16]
     f24:	str	q2, [x0]
     f28:	b	fd0 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x17c>
     f2c:	add	x8, x19, #0x10
     f30:	mov	w9, #0x4a                  	// #74
     f34:	add	x1, sp, #0x20
     f38:	mov	x0, x19
     f3c:	mov	x2, xzr
     f40:	str	x8, [x19]
     f44:	str	x9, [sp, #32]
     f48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     f4c:	adrp	x9, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     f50:	add	x9, x9, #0x0
     f54:	ldr	x8, [sp, #32]
     f58:	ldur	q0, [x9, #58]
     f5c:	str	x0, [x19]
     f60:	ldp	q1, q2, [x9, #32]
     f64:	str	x8, [x19, #16]
     f68:	stur	q0, [x0, #58]
     f6c:	ldp	q0, q3, [x9]
     f70:	stp	q1, q2, [x0, #32]
     f74:	stp	q0, q3, [x0]
     f78:	b	fd0 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x17c>
     f7c:	add	x8, x19, #0x10
     f80:	mov	w9, #0x58                  	// #88
     f84:	add	x1, sp, #0x20
     f88:	mov	x0, x19
     f8c:	mov	x2, xzr
     f90:	str	x8, [x19]
     f94:	str	x9, [sp, #32]
     f98:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     f9c:	adrp	x9, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     fa0:	add	x9, x9, #0x0
     fa4:	ldr	x8, [sp, #32]
     fa8:	ldp	q0, q1, [x9]
     fac:	ldp	q2, q3, [x9, #32]
     fb0:	ldr	q4, [x9, #64]
     fb4:	ldr	x9, [x9, #80]
     fb8:	str	x0, [x19]
     fbc:	str	x8, [x19, #16]
     fc0:	stp	q0, q1, [x0]
     fc4:	str	x9, [x0, #80]
     fc8:	stp	q3, q4, [x0, #48]
     fcc:	str	q2, [x0, #32]
     fd0:	ldr	x9, [x19]
     fd4:	str	x8, [x19, #8]
     fd8:	strb	wzr, [x9, x8]
     fdc:	ldrb	w8, [x20, #88]
     fe0:	cbz	w8, 1084 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x230>
     fe4:	add	x0, x20, #0x10
     fe8:	mov	x8, sp
     fec:	bl	894 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev>
     ff0:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     ff4:	add	x3, x3, #0x0
     ff8:	mov	x0, sp
     ffc:	mov	w4, #0x12                  	// #18
    1000:	mov	x1, xzr
    1004:	mov	x2, xzr
    1008:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    100c:	add	x8, sp, #0x20
    1010:	add	x21, x8, #0x10
    1014:	str	x21, [sp, #32]
    1018:	mov	x8, x0
    101c:	ldr	x9, [x8], #16
    1020:	cmp	x9, x8
    1024:	b.eq	1038 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x1e4>  // b.none
    1028:	str	x9, [sp, #32]
    102c:	ldr	x9, [x0, #16]
    1030:	str	x9, [sp, #48]
    1034:	b	1040 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x1ec>
    1038:	ldr	q0, [x9]
    103c:	str	q0, [x21]
    1040:	ldr	x9, [x0, #8]
    1044:	str	x9, [sp, #40]
    1048:	stp	x8, xzr, [x0]
    104c:	strb	wzr, [x0, #16]
    1050:	ldp	x1, x2, [sp, #32]
    1054:	mov	x0, x19
    1058:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    105c:	ldr	x0, [sp, #32]
    1060:	cmp	x0, x21
    1064:	b.eq	106c <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x218>  // b.none
    1068:	bl	0 <_ZdlPv>
    106c:	ldr	x0, [sp]
    1070:	mov	x8, sp
    1074:	add	x8, x8, #0x10
    1078:	cmp	x0, x8
    107c:	b.eq	1084 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x230>  // b.none
    1080:	bl	0 <_ZdlPv>
    1084:	ldrb	w8, [x20, #168]
    1088:	cbz	w8, 112c <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x2d8>
    108c:	add	x0, x20, #0x60
    1090:	mov	x8, sp
    1094:	bl	894 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev>
    1098:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    109c:	add	x3, x3, #0x0
    10a0:	mov	x0, sp
    10a4:	mov	w4, #0x17                  	// #23
    10a8:	mov	x1, xzr
    10ac:	mov	x2, xzr
    10b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    10b4:	add	x8, sp, #0x20
    10b8:	add	x20, x8, #0x10
    10bc:	str	x20, [sp, #32]
    10c0:	mov	x8, x0
    10c4:	ldr	x9, [x8], #16
    10c8:	cmp	x9, x8
    10cc:	b.eq	10e0 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x28c>  // b.none
    10d0:	str	x9, [sp, #32]
    10d4:	ldr	x9, [x0, #16]
    10d8:	str	x9, [sp, #48]
    10dc:	b	10e8 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x294>
    10e0:	ldr	q0, [x9]
    10e4:	str	q0, [x20]
    10e8:	ldr	x9, [x0, #8]
    10ec:	str	x9, [sp, #40]
    10f0:	stp	x8, xzr, [x0]
    10f4:	strb	wzr, [x0, #16]
    10f8:	ldp	x1, x2, [sp, #32]
    10fc:	mov	x0, x19
    1100:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1104:	ldr	x0, [sp, #32]
    1108:	cmp	x0, x20
    110c:	b.eq	1114 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x2c0>  // b.none
    1110:	bl	0 <_ZdlPv>
    1114:	ldr	x0, [sp]
    1118:	mov	x8, sp
    111c:	add	x8, x8, #0x10
    1120:	cmp	x0, x8
    1124:	b.eq	112c <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x2d8>  // b.none
    1128:	bl	0 <_ZdlPv>
    112c:	ldp	x20, x19, [sp, #96]
    1130:	ldr	x21, [sp, #80]
    1134:	ldp	x29, x30, [sp, #64]
    1138:	add	sp, sp, #0x70
    113c:	ret
    1140:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    1144:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    1148:	add	x0, x0, #0x0
    114c:	add	x1, x1, #0x0
    1150:	mov	w2, #0xb1                  	// #177
    1154:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000001158 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv>:
    1158:	sub	sp, sp, #0x140
    115c:	stp	x29, x30, [sp, #224]
    1160:	stp	x28, x27, [sp, #240]
    1164:	stp	x26, x25, [sp, #256]
    1168:	stp	x24, x23, [sp, #272]
    116c:	stp	x22, x21, [sp, #288]
    1170:	stp	x20, x19, [sp, #304]
    1174:	add	x29, sp, #0xe0
    1178:	stp	xzr, xzr, [x29, #-32]
    117c:	stur	xzr, [x29, #-16]
    1180:	ldr	x20, [x0, #24]
    1184:	add	x28, x0, #0x8
    1188:	mov	x21, x8
    118c:	cmp	x20, x28
    1190:	b.eq	1308 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x1b0>  // b.none
    1194:	add	x9, sp, #0x58
    1198:	sub	x10, x29, #0x68
    119c:	add	x9, x9, #0x10
    11a0:	str	x21, [sp, #8]
    11a4:	mov	x22, xzr
    11a8:	mov	x8, xzr
    11ac:	str	x9, [sp, #24]
    11b0:	add	x21, x10, #0x28
    11b4:	add	x9, x10, #0x38
    11b8:	add	x19, x10, #0x10
    11bc:	str	x9, [sp, #16]
    11c0:	cmp	x8, x22
    11c4:	add	x2, x20, #0x20
    11c8:	b.eq	11e0 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x88>  // b.none
    11cc:	ldp	w24, w8, [x22, #-40]
    11d0:	ldr	w9, [x20, #64]
    11d4:	add	w10, w8, w24
    11d8:	cmp	w10, w9
    11dc:	b.cs	1208 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0xb0>  // b.hs, b.nlast
    11e0:	ldur	x8, [x29, #-16]
    11e4:	cmp	x22, x8
    11e8:	b.eq	12c8 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x170>  // b.none
    11ec:	mov	x0, x22
    11f0:	mov	x1, x2
    11f4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    11f8:	ldur	x8, [x29, #-24]
    11fc:	add	x8, x8, #0x48
    1200:	stur	x8, [x29, #-24]
    1204:	b	12d4 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x17c>
    1208:	b.ne	13c8 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x270>  // b.any
    120c:	mov	x23, x22
    1210:	ldp	x25, x26, [x20, #32]
    1214:	ldr	w9, [x20, #68]
    1218:	ldr	q0, [x23, #-32]!
    121c:	add	x0, sp, #0x40
    1220:	add	w27, w9, w8
    1224:	str	q0, [sp, #48]
    1228:	ldur	q0, [x20, #72]
    122c:	add	x8, sp, #0x30
    1230:	str	x8, [sp, #64]
    1234:	add	x8, sp, #0x20
    1238:	str	x8, [sp, #72]
    123c:	mov	w8, #0x505                 	// #1285
    1240:	strh	w8, [sp, #80]
    1244:	add	x8, sp, #0x58
    1248:	str	q0, [sp, #32]
    124c:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1250:	ldp	x5, x6, [sp, #88]
    1254:	sub	x0, x29, #0x68
    1258:	mov	x1, x25
    125c:	mov	x2, x26
    1260:	mov	w3, w24
    1264:	mov	w4, w27
    1268:	bl	20 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>
    126c:	ldr	x0, [sp, #88]
    1270:	ldr	x8, [sp, #24]
    1274:	cmp	x0, x8
    1278:	b.eq	1280 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x128>  // b.none
    127c:	bl	0 <_ZdlPv>
    1280:	sub	x0, x22, #0x48
    1284:	sub	x1, x29, #0x68
    1288:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
    128c:	ldur	x8, [x29, #-72]
    1290:	mov	x0, x23
    1294:	mov	x1, x21
    1298:	stur	x8, [x22, #-40]
    129c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
    12a0:	ldur	x0, [x29, #-64]
    12a4:	ldr	x8, [sp, #16]
    12a8:	cmp	x0, x8
    12ac:	b.eq	12b4 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x15c>  // b.none
    12b0:	bl	0 <_ZdlPv>
    12b4:	ldur	x0, [x29, #-104]
    12b8:	cmp	x0, x19
    12bc:	b.eq	12d4 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x17c>  // b.none
    12c0:	bl	0 <_ZdlPv>
    12c4:	b	12d4 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x17c>
    12c8:	sub	x0, x29, #0x20
    12cc:	mov	x1, x22
    12d0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    12d4:	mov	x0, x20
    12d8:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    12dc:	cmp	x0, x28
    12e0:	b.eq	12fc <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x1a4>  // b.none
    12e4:	ldp	x8, x22, [x29, #-32]
    12e8:	mov	x20, x0
    12ec:	cmp	x8, x22
    12f0:	add	x2, x20, #0x20
    12f4:	b.ne	11cc <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x74>  // b.any
    12f8:	b	11e0 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x88>
    12fc:	ldp	x1, x2, [x29, #-32]
    1300:	ldr	x21, [sp, #8]
    1304:	b	1310 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x1b8>
    1308:	mov	x2, xzr
    130c:	mov	x1, xzr
    1310:	sub	x0, x29, #0x68
    1314:	sub	x19, x29, #0x68
    1318:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    131c:	ldur	x1, [x29, #-80]
    1320:	mov	x8, x21
    1324:	add	x2, x19, #0x8
    1328:	str	xzr, [x8, #8]!
    132c:	mov	x0, x21
    1330:	str	xzr, [x21]
    1334:	stp	xzr, x8, [x21, #16]
    1338:	stp	x8, xzr, [x21, #32]
    133c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1340:	ldur	x1, [x29, #-88]
    1344:	sub	x0, x29, #0x68
    1348:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    134c:	ldp	x19, x20, [x29, #-32]
    1350:	cmp	x19, x20
    1354:	b.ne	1390 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x238>  // b.any
    1358:	cbz	x19, 1364 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x20c>
    135c:	mov	x0, x19
    1360:	bl	0 <_ZdlPv>
    1364:	ldp	x20, x19, [sp, #304]
    1368:	ldp	x22, x21, [sp, #288]
    136c:	ldp	x24, x23, [sp, #272]
    1370:	ldp	x26, x25, [sp, #256]
    1374:	ldp	x28, x27, [sp, #240]
    1378:	ldp	x29, x30, [sp, #224]
    137c:	add	sp, sp, #0x140
    1380:	ret
    1384:	add	x19, x19, #0x48
    1388:	cmp	x20, x19
    138c:	b.eq	13bc <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x264>  // b.none
    1390:	ldr	x0, [x19, #40]
    1394:	add	x8, x19, #0x38
    1398:	cmp	x8, x0
    139c:	b.eq	13a4 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x24c>  // b.none
    13a0:	bl	0 <_ZdlPv>
    13a4:	mov	x8, x19
    13a8:	ldr	x0, [x8], #16
    13ac:	cmp	x8, x0
    13b0:	b.eq	1384 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x22c>  // b.none
    13b4:	bl	0 <_ZdlPv>
    13b8:	b	1384 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x22c>
    13bc:	ldur	x19, [x29, #-32]
    13c0:	cbnz	x19, 135c <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x204>
    13c4:	b	1364 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x20c>
    13c8:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    13cc:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    13d0:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    13d4:	add	x0, x0, #0x0
    13d8:	add	x1, x1, #0x0
    13dc:	add	x3, x3, #0x0
    13e0:	mov	w2, #0xcd                  	// #205
    13e4:	bl	0 <__assert_fail>

00000000000013e8 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE>:
    13e8:	sub	sp, sp, #0x1c0
    13ec:	stp	x29, x30, [sp, #368]
    13f0:	stp	x28, x25, [sp, #384]
    13f4:	stp	x24, x23, [sp, #400]
    13f8:	stp	x22, x21, [sp, #416]
    13fc:	stp	x20, x19, [sp, #432]
    1400:	add	x29, sp, #0x170
    1404:	mov	x19, x8
    1408:	sub	x8, x29, #0x30
    140c:	mov	x21, x0
    1410:	add	x8, x8, #0x8
    1414:	sub	x0, x29, #0x30
    1418:	mov	x20, x1
    141c:	stur	wzr, [x29, #-40]
    1420:	stp	xzr, x8, [x29, #-32]
    1424:	stp	x8, xzr, [x29, #-16]
    1428:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    142c:	sub	x8, x29, #0xa8
    1430:	mov	x0, x21
    1434:	mov	x1, x20
    1438:	sub	x22, x29, #0xa8
    143c:	bl	c78 <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE>
    1440:	sub	x8, x29, #0x60
    1444:	add	x8, x8, #0x8
    1448:	sub	x0, x29, #0x60
    144c:	sub	x1, x29, #0xa8
    1450:	stur	wzr, [x29, #-88]
    1454:	stp	xzr, x8, [x29, #-80]
    1458:	stp	x8, xzr, [x29, #-64]
    145c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1460:	ldur	x0, [x29, #-128]
    1464:	add	x8, x22, #0x38
    1468:	cmp	x0, x8
    146c:	b.eq	1474 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x8c>  // b.none
    1470:	bl	0 <_ZdlPv>
    1474:	ldur	x0, [x29, #-168]
    1478:	add	x8, x22, #0x10
    147c:	cmp	x0, x8
    1480:	b.eq	1488 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0xa0>  // b.none
    1484:	bl	0 <_ZdlPv>
    1488:	add	x8, sp, #0x98
    148c:	add	x8, x8, #0x8
    1490:	str	wzr, [sp, #160]
    1494:	stp	xzr, x8, [sp, #168]
    1498:	stp	x8, xzr, [sp, #184]
    149c:	ldr	x22, [x21, #24]
    14a0:	add	x23, x21, #0x8
    14a4:	cmp	x22, x23
    14a8:	b.eq	1510 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x128>  // b.none
    14ac:	sub	x8, x29, #0xa8
    14b0:	add	x24, x8, #0x38
    14b4:	add	x25, x8, #0x10
    14b8:	b	14d0 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0xe8>
    14bc:	mov	x0, x22
    14c0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    14c4:	mov	x22, x0
    14c8:	cmp	x0, x23
    14cc:	b.eq	1510 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x128>  // b.none
    14d0:	add	x1, x22, #0x20
    14d4:	sub	x8, x29, #0xa8
    14d8:	sub	x0, x29, #0x30
    14dc:	bl	c78 <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE>
    14e0:	add	x0, sp, #0x98
    14e4:	sub	x1, x29, #0xa8
    14e8:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    14ec:	ldur	x0, [x29, #-128]
    14f0:	cmp	x0, x24
    14f4:	b.eq	14fc <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x114>  // b.none
    14f8:	bl	0 <_ZdlPv>
    14fc:	ldur	x0, [x29, #-168]
    1500:	cmp	x0, x25
    1504:	b.eq	14bc <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0xd4>  // b.none
    1508:	bl	0 <_ZdlPv>
    150c:	b	14bc <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0xd4>
    1510:	sub	x8, x29, #0xa8
    1514:	sub	x1, x29, #0x60
    1518:	mov	x0, x21
    151c:	sub	x23, x29, #0xa8
    1520:	bl	1698 <_ZNK5clang7tooling12Replacements5mergeERKS1_>
    1524:	add	x8, sp, #0x68
    1528:	sub	x0, x29, #0x30
    152c:	add	x1, sp, #0x98
    1530:	bl	1698 <_ZNK5clang7tooling12Replacements5mergeERKS1_>
    1534:	add	x8, sp, #0x38
    1538:	sub	x0, x29, #0xa8
    153c:	bl	1158 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv>
    1540:	add	x8, sp, #0x8
    1544:	add	x0, sp, #0x68
    1548:	bl	1158 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv>
    154c:	add	x0, sp, #0x38
    1550:	add	x1, sp, #0x8
    1554:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1558:	ldr	x1, [sp, #24]
    155c:	mov	w22, w0
    1560:	add	x0, sp, #0x8
    1564:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1568:	ldr	x1, [sp, #72]
    156c:	add	x0, sp, #0x38
    1570:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1574:	tbz	w22, #0, 15c8 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x1e0>
    1578:	ldrb	w8, [x19, #48]
    157c:	ldur	x10, [x29, #-152]
    1580:	and	w8, w8, #0xfc
    1584:	orr	w8, w8, #0x2
    1588:	strb	w8, [x19, #48]
    158c:	add	x8, x19, #0x8
    1590:	cbz	x10, 1608 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x220>
    1594:	ldur	q0, [x29, #-144]
    1598:	ldur	w9, [x29, #-160]
    159c:	str	x10, [x19, #16]
    15a0:	add	x11, x23, #0x8
    15a4:	stur	q0, [x19, #24]
    15a8:	str	x8, [x10, #8]
    15ac:	ldur	x13, [x29, #-128]
    15b0:	sub	x12, x29, #0xa8
    15b4:	add	x10, x12, #0x28
    15b8:	stp	xzr, x11, [x29, #-152]
    15bc:	str	x13, [x19, #40]
    15c0:	stur	x11, [x29, #-136]
    15c4:	b	1618 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x230>
    15c8:	mov	w8, #0x2                   	// #2
    15cc:	str	w8, [sp, #8]
    15d0:	ldr	x8, [x21, #24]
    15d4:	add	x0, sp, #0x8
    15d8:	mov	x1, x20
    15dc:	add	x2, x8, #0x20
    15e0:	add	x8, sp, #0x38
    15e4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    15e8:	ldrb	w8, [x19, #48]
    15ec:	ldr	x9, [sp, #56]
    15f0:	orr	w10, w8, #0x3
    15f4:	ands	x8, x9, #0xfffffffffffffffe
    15f8:	strb	w10, [x19, #48]
    15fc:	b.eq	1678 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x290>  // b.none
    1600:	str	x8, [x19]
    1604:	b	1620 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x238>
    1608:	mov	w9, wzr
    160c:	add	x10, x19, #0x28
    1610:	stp	xzr, x8, [x19, #16]
    1614:	str	x8, [x19, #32]
    1618:	str	xzr, [x10]
    161c:	str	w9, [x8]
    1620:	ldr	x1, [sp, #120]
    1624:	add	x0, sp, #0x68
    1628:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    162c:	ldur	x1, [x29, #-152]
    1630:	sub	x0, x29, #0xa8
    1634:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1638:	ldr	x1, [sp, #168]
    163c:	add	x0, sp, #0x98
    1640:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1644:	ldur	x1, [x29, #-80]
    1648:	sub	x0, x29, #0x60
    164c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1650:	ldur	x1, [x29, #-32]
    1654:	sub	x0, x29, #0x30
    1658:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    165c:	ldp	x20, x19, [sp, #432]
    1660:	ldp	x22, x21, [sp, #416]
    1664:	ldp	x24, x23, [sp, #400]
    1668:	ldp	x28, x25, [sp, #384]
    166c:	ldp	x29, x30, [sp, #368]
    1670:	add	sp, sp, #0x1c0
    1674:	ret
    1678:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    167c:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    1680:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    1684:	add	x0, x0, #0x0
    1688:	add	x1, x1, #0x0
    168c:	add	x3, x3, #0x0
    1690:	mov	w2, #0x1ce                 	// #462
    1694:	bl	0 <__assert_fail>

0000000000001698 <_ZNK5clang7tooling12Replacements5mergeERKS1_>:
    1698:	sub	sp, sp, #0x1c0
    169c:	stp	x29, x30, [sp, #352]
    16a0:	stp	x28, x27, [sp, #368]
    16a4:	stp	x26, x25, [sp, #384]
    16a8:	stp	x24, x23, [sp, #400]
    16ac:	stp	x22, x21, [sp, #416]
    16b0:	stp	x20, x19, [sp, #432]
    16b4:	add	x29, sp, #0x160
    16b8:	ldr	x9, [x0, #40]
    16bc:	mov	x20, x8
    16c0:	cbz	x9, 1bcc <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x534>
    16c4:	ldr	x8, [x1, #40]
    16c8:	cbz	x8, 1bcc <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x534>
    16cc:	sub	x8, x29, #0xa0
    16d0:	add	x8, x8, #0x8
    16d4:	stur	wzr, [x29, #-152]
    16d8:	stp	xzr, x8, [x29, #-144]
    16dc:	stp	x8, x20, [sp]
    16e0:	stp	x8, xzr, [x29, #-128]
    16e4:	ldr	x9, [x0, #24]
    16e8:	add	x26, x0, #0x8
    16ec:	add	x25, x1, #0x8
    16f0:	stur	x9, [x29, #-168]
    16f4:	ldr	x8, [x1, #24]
    16f8:	cmp	x9, x26
    16fc:	cset	w10, ne  // ne = any
    1700:	cmp	x8, x25
    1704:	str	x8, [sp, #176]
    1708:	b.ne	1714 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x7c>  // b.any
    170c:	cmp	x9, x26
    1710:	b.eq	1b9c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x504>  // b.none
    1714:	add	x11, sp, #0x68
    1718:	add	x12, sp, #0x20
    171c:	mov	w23, wzr
    1720:	sub	x28, x29, #0x58
    1724:	add	x21, x11, #0x28
    1728:	add	x20, x11, #0x38
    172c:	add	x22, x12, #0x10
    1730:	add	x11, x12, #0x38
    1734:	mov	w27, #0x502                 	// #1282
    1738:	str	x11, [sp, #16]
    173c:	cmp	x8, x25
    1740:	b.eq	175c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0xc4>  // b.none
    1744:	tbz	w10, #0, 1768 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0xd0>
    1748:	ldr	w10, [x8, #64]
    174c:	ldr	w11, [x9, #64]
    1750:	add	w10, w10, w23
    1754:	cmp	w11, w10
    1758:	b.cs	1768 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0xd0>  // b.hs, b.nlast
    175c:	mov	w19, #0x1                   	// #1
    1760:	mov	x8, x9
    1764:	b	176c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0xd4>
    1768:	mov	w19, wzr
    176c:	strb	w19, [sp, #104]
    1770:	str	w23, [sp, #108]
    1774:	ldr	q0, [x8, #32]
    1778:	cmp	w19, #0x0
    177c:	csel	w10, wzr, w23, ne  // ne = any
    1780:	str	w23, [sp, #28]
    1784:	stur	q0, [sp, #120]
    1788:	ldr	w9, [x8, #64]
    178c:	add	w9, w9, w10
    1790:	str	w9, [sp, #136]
    1794:	ldr	w9, [x8, #68]
    1798:	str	w9, [sp, #140]
    179c:	ldp	x23, x24, [x8, #72]
    17a0:	str	x20, [sp, #144]
    17a4:	cbz	x23, 17ec <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x154>
    17a8:	cmp	x24, #0x10
    17ac:	mov	x0, x20
    17b0:	str	x24, [sp, #32]
    17b4:	b.cc	17d4 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x13c>  // b.lo, b.ul, b.last
    17b8:	add	x1, sp, #0x20
    17bc:	mov	x0, x21
    17c0:	mov	x2, xzr
    17c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    17c8:	ldr	x8, [sp, #32]
    17cc:	str	x0, [sp, #144]
    17d0:	str	x8, [sp, #160]
    17d4:	cbz	x24, 1810 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x178>
    17d8:	cmp	x24, #0x1
    17dc:	b.ne	1804 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x16c>  // b.any
    17e0:	ldrb	w8, [x23]
    17e4:	strb	w8, [x0]
    17e8:	b	1810 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x178>
    17ec:	mov	w8, wzr
    17f0:	str	xzr, [sp, #152]
    17f4:	strb	wzr, [sp, #160]
    17f8:	sub	w8, w8, w9
    17fc:	tbz	w19, #0, 1830 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x198>
    1800:	b	1840 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x1a8>
    1804:	mov	x1, x23
    1808:	mov	x2, x24
    180c:	bl	0 <memcpy>
    1810:	ldr	x8, [sp, #32]
    1814:	ldr	x9, [sp, #144]
    1818:	str	x8, [sp, #152]
    181c:	strb	wzr, [x9, x8]
    1820:	ldr	w8, [sp, #152]
    1824:	ldr	w9, [sp, #140]
    1828:	sub	w8, w8, w9
    182c:	tbnz	w19, #0, 1840 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x1a8>
    1830:	ldr	w9, [sp, #108]
    1834:	add	w9, w9, w8
    1838:	mov	w8, wzr
    183c:	str	w9, [sp, #108]
    1840:	str	w8, [sp, #112]
    1844:	cmp	w19, #0x0
    1848:	add	x8, sp, #0xb0
    184c:	sub	x9, x29, #0xa8
    1850:	csel	x19, x9, x8, ne  // ne = any
    1854:	b	1874 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x1dc>
    1858:	ldr	w8, [x23, #80]
    185c:	ldr	w9, [x23, #68]
    1860:	ldr	w10, [sp, #108]
    1864:	add	x19, sp, #0xb0
    1868:	sub	w8, w8, w9
    186c:	add	w8, w8, w10
    1870:	str	w8, [sp, #108]
    1874:	ldr	x0, [x19]
    1878:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    187c:	ldrb	w8, [sp, #104]
    1880:	str	x0, [x19]
    1884:	cbz	w8, 1978 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x2e0>
    1888:	ldr	x8, [sp, #176]
    188c:	cmp	x8, x25
    1890:	b.eq	1b1c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x484>  // b.none
    1894:	ldr	x23, [sp, #176]
    1898:	ldr	x8, [sp, #152]
    189c:	ldr	w9, [sp, #136]
    18a0:	ldr	w11, [sp, #108]
    18a4:	ldr	w10, [x23, #64]
    18a8:	add	x12, x8, x9
    18ac:	add	w10, w11, w10
    18b0:	cmp	x12, x10
    18b4:	b.cc	1b1c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x484>  // b.lo, b.ul, b.last
    18b8:	ldr	w11, [x23, #68]
    18bc:	add	w12, w9, w8
    18c0:	add	w11, w10, w11
    18c4:	subs	w12, w11, w12
    18c8:	b.ls	18dc <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x244>  // b.plast
    18cc:	ldr	w13, [sp, #140]
    18d0:	strb	wzr, [sp, #104]
    18d4:	add	w12, w12, w13
    18d8:	str	w12, [sp, #140]
    18dc:	ldr	x12, [sp, #144]
    18e0:	sub	w10, w10, w9
    18e4:	sub	w9, w11, w9
    18e8:	cmp	x8, x10
    18ec:	csel	x10, x8, x10, cc  // cc = lo, ul, last
    18f0:	cmp	x8, x9
    18f4:	csel	x9, x8, x9, cc  // cc = lo, ul, last
    18f8:	stp	x12, x10, [x29, #-24]
    18fc:	add	x10, x12, x9
    1900:	sub	x8, x8, x9
    1904:	stp	x10, x8, [x29, #-40]
    1908:	sub	x8, x29, #0x18
    190c:	ldur	q0, [x23, #72]
    1910:	stur	x8, [x29, #-88]
    1914:	sub	x8, x29, #0x70
    1918:	stur	x8, [x29, #-80]
    191c:	mov	w8, #0x505                 	// #1285
    1920:	sturh	w8, [x29, #-72]
    1924:	sub	x8, x29, #0x28
    1928:	stp	x28, x8, [x29, #-64]
    192c:	add	x8, sp, #0x20
    1930:	sub	x0, x29, #0x40
    1934:	stur	q0, [x29, #-112]
    1938:	sturh	w27, [x29, #-48]
    193c:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1940:	ldr	x9, [sp, #32]
    1944:	cmp	x9, x22
    1948:	b.eq	1a04 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x36c>  // b.none
    194c:	ldr	x8, [sp, #144]
    1950:	ldr	x10, [sp, #160]
    1954:	ldur	q0, [sp, #40]
    1958:	str	x9, [sp, #144]
    195c:	cmp	x8, x20
    1960:	csel	x8, xzr, x8, eq  // eq = none
    1964:	stur	q0, [sp, #152]
    1968:	cbz	x8, 1a24 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x38c>
    196c:	str	x8, [sp, #32]
    1970:	str	x10, [sp, #48]
    1974:	b	1a78 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x3e0>
    1978:	ldur	x8, [x29, #-168]
    197c:	cmp	x8, x26
    1980:	b.eq	1b1c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x484>  // b.none
    1984:	ldur	x19, [x29, #-168]
    1988:	ldp	w8, w9, [sp, #136]
    198c:	ldr	w10, [x19, #64]
    1990:	add	w24, w9, w8
    1994:	subs	w8, w24, w10
    1998:	b.cc	1b1c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x484>  // b.lo, b.ul, b.last
    199c:	ldp	x9, x23, [x19, #72]
    19a0:	sub	x0, x29, #0x40
    19a4:	stp	x21, x28, [x29, #-64]
    19a8:	cmp	x23, x8
    19ac:	csel	x8, x23, x8, cc  // cc = lo, ul, last
    19b0:	add	x9, x9, x8
    19b4:	sub	x8, x23, x8
    19b8:	stp	x9, x8, [x29, #-88]
    19bc:	mov	w8, #0x504                 	// #1284
    19c0:	sturh	w8, [x29, #-48]
    19c4:	add	x8, sp, #0x20
    19c8:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    19cc:	ldr	x9, [sp, #32]
    19d0:	cmp	x9, x22
    19d4:	b.eq	1a30 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x398>  // b.none
    19d8:	ldr	x8, [sp, #144]
    19dc:	ldr	x10, [sp, #160]
    19e0:	ldur	q0, [sp, #40]
    19e4:	str	x9, [sp, #144]
    19e8:	cmp	x8, x20
    19ec:	csel	x8, xzr, x8, eq  // eq = none
    19f0:	stur	q0, [sp, #152]
    19f4:	cbz	x8, 1a50 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x3b8>
    19f8:	str	x8, [sp, #32]
    19fc:	str	x10, [sp, #48]
    1a00:	b	1ab0 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x418>
    1a04:	ldr	x2, [sp, #40]
    1a08:	cbz	x2, 1a64 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x3cc>
    1a0c:	ldr	x0, [sp, #144]
    1a10:	cmp	x2, #0x1
    1a14:	b.ne	1a5c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x3c4>  // b.any
    1a18:	ldrb	w8, [sp, #48]
    1a1c:	strb	w8, [x0]
    1a20:	b	1a64 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x3cc>
    1a24:	mov	x8, x22
    1a28:	str	x22, [sp, #32]
    1a2c:	b	1a78 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x3e0>
    1a30:	ldr	x2, [sp, #40]
    1a34:	cbz	x2, 1a9c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x404>
    1a38:	ldr	x0, [sp, #144]
    1a3c:	cmp	x2, #0x1
    1a40:	b.ne	1a94 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x3fc>  // b.any
    1a44:	ldrb	w8, [sp, #48]
    1a48:	strb	w8, [x0]
    1a4c:	b	1a9c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x404>
    1a50:	mov	x8, x22
    1a54:	str	x22, [sp, #32]
    1a58:	b	1ab0 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x418>
    1a5c:	mov	x1, x22
    1a60:	bl	0 <memcpy>
    1a64:	ldr	x8, [sp, #40]
    1a68:	ldr	x9, [sp, #144]
    1a6c:	str	x8, [sp, #152]
    1a70:	strb	wzr, [x9, x8]
    1a74:	ldr	x8, [sp, #32]
    1a78:	str	xzr, [sp, #40]
    1a7c:	strb	wzr, [x8]
    1a80:	ldr	x0, [sp, #32]
    1a84:	cmp	x0, x22
    1a88:	b.eq	1858 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x1c0>  // b.none
    1a8c:	bl	0 <_ZdlPv>
    1a90:	b	1858 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x1c0>
    1a94:	mov	x1, x22
    1a98:	bl	0 <memcpy>
    1a9c:	ldr	x8, [sp, #40]
    1aa0:	ldr	x9, [sp, #144]
    1aa4:	str	x8, [sp, #152]
    1aa8:	strb	wzr, [x9, x8]
    1aac:	ldr	x8, [sp, #32]
    1ab0:	str	xzr, [sp, #40]
    1ab4:	strb	wzr, [x8]
    1ab8:	ldr	x0, [sp, #32]
    1abc:	cmp	x0, x22
    1ac0:	b.eq	1ac8 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x430>  // b.none
    1ac4:	bl	0 <_ZdlPv>
    1ac8:	ldp	w9, w8, [x19, #64]
    1acc:	add	x10, x23, x9
    1ad0:	cmp	x10, w24, uxtw
    1ad4:	b.ls	1af4 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x45c>  // b.plast
    1ad8:	ldr	w10, [sp, #136]
    1adc:	add	w9, w8, w9
    1ae0:	sub	w9, w9, w10
    1ae4:	str	w9, [sp, #140]
    1ae8:	mov	w9, #0x1                   	// #1
    1aec:	strb	w9, [sp, #104]
    1af0:	b	1b04 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x46c>
    1af4:	ldr	w9, [sp, #140]
    1af8:	sub	w10, w8, w23
    1afc:	add	w9, w10, w9
    1b00:	str	w9, [sp, #140]
    1b04:	ldr	w9, [sp, #112]
    1b08:	sub	w8, w23, w8
    1b0c:	sub	x19, x29, #0xa8
    1b10:	add	w8, w8, w9
    1b14:	str	w8, [sp, #112]
    1b18:	b	1874 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x1dc>
    1b1c:	ldp	x1, x2, [sp, #120]
    1b20:	ldp	w3, w4, [sp, #136]
    1b24:	ldp	x5, x6, [sp, #144]
    1b28:	ldr	w19, [sp, #112]
    1b2c:	add	x0, sp, #0x20
    1b30:	bl	20 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>
    1b34:	sub	x0, x29, #0xa0
    1b38:	add	x1, sp, #0x20
    1b3c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1b40:	ldr	x0, [sp, #72]
    1b44:	ldr	x8, [sp, #16]
    1b48:	cmp	x0, x8
    1b4c:	b.eq	1b54 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x4bc>  // b.none
    1b50:	bl	0 <_ZdlPv>
    1b54:	ldr	x0, [sp, #32]
    1b58:	ldr	w23, [sp, #28]
    1b5c:	cmp	x0, x22
    1b60:	b.eq	1b68 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x4d0>  // b.none
    1b64:	bl	0 <_ZdlPv>
    1b68:	ldr	x0, [sp, #144]
    1b6c:	sub	w23, w23, w19
    1b70:	cmp	x0, x20
    1b74:	b.eq	1b7c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x4e4>  // b.none
    1b78:	bl	0 <_ZdlPv>
    1b7c:	ldur	x9, [x29, #-168]
    1b80:	ldr	x8, [sp, #176]
    1b84:	cmp	x9, x26
    1b88:	cset	w10, ne  // ne = any
    1b8c:	cmp	x8, x25
    1b90:	b.ne	173c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0xa4>  // b.any
    1b94:	cmp	x9, x26
    1b98:	b.ne	173c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0xa4>  // b.any
    1b9c:	ldp	x2, x0, [sp]
    1ba0:	ldur	x1, [x29, #-136]
    1ba4:	mov	x8, x0
    1ba8:	str	xzr, [x8, #8]!
    1bac:	str	xzr, [x0]
    1bb0:	stp	xzr, x8, [x0, #16]
    1bb4:	stp	x8, xzr, [x0, #32]
    1bb8:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1bbc:	ldur	x1, [x29, #-144]
    1bc0:	sub	x0, x29, #0xa0
    1bc4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1bc8:	b	1c30 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x598>
    1bcc:	mov	x2, x20
    1bd0:	cmp	x9, #0x0
    1bd4:	str	wzr, [x2, #8]!
    1bd8:	csel	x19, x1, x0, eq  // eq = none
    1bdc:	stp	xzr, x2, [x2, #8]
    1be0:	stp	x2, xzr, [x2, #24]
    1be4:	ldr	x1, [x19, #16]
    1be8:	cbz	x1, 1c30 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x598>
    1bec:	add	x3, sp, #0x68
    1bf0:	mov	x0, x20
    1bf4:	str	x20, [sp, #104]
    1bf8:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1bfc:	mov	x9, x0
    1c00:	mov	x8, x9
    1c04:	ldr	x9, [x9, #16]
    1c08:	cbnz	x9, 1c00 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x568>
    1c0c:	mov	x9, x0
    1c10:	str	x8, [x20, #24]
    1c14:	mov	x8, x9
    1c18:	ldr	x9, [x9, #24]
    1c1c:	cbnz	x9, 1c14 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x57c>
    1c20:	str	x8, [x20, #32]
    1c24:	ldr	x8, [x19, #40]
    1c28:	str	x0, [x20, #16]
    1c2c:	str	x8, [x20, #40]
    1c30:	ldp	x20, x19, [sp, #432]
    1c34:	ldp	x22, x21, [sp, #416]
    1c38:	ldp	x24, x23, [sp, #400]
    1c3c:	ldp	x26, x25, [sp, #384]
    1c40:	ldp	x28, x27, [sp, #368]
    1c44:	ldp	x29, x30, [sp, #352]
    1c48:	add	sp, sp, #0x1c0
    1c4c:	ret

0000000000001c50 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE>:
    1c50:	sub	sp, sp, #0x1a0
    1c54:	stp	x29, x30, [sp, #320]
    1c58:	stp	x28, x27, [sp, #336]
    1c5c:	stp	x26, x25, [sp, #352]
    1c60:	stp	x24, x23, [sp, #368]
    1c64:	stp	x22, x21, [sp, #384]
    1c68:	stp	x20, x19, [sp, #400]
    1c6c:	add	x29, sp, #0x140
    1c70:	ldr	x9, [x0, #40]
    1c74:	mov	x21, x1
    1c78:	mov	x20, x0
    1c7c:	mov	x19, x8
    1c80:	cbz	x9, 1cd4 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x84>
    1c84:	ldr	x22, [x20, #24]
    1c88:	ldp	x0, x2, [x21]
    1c8c:	ldr	x1, [x22, #32]!
    1c90:	ldr	x8, [x22, #8]
    1c94:	cmp	x2, x8
    1c98:	b.ne	1ca8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x58>  // b.any
    1c9c:	cbz	x2, 1cd4 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x84>
    1ca0:	bl	0 <bcmp>
    1ca4:	cbz	w0, 1cd4 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x84>
    1ca8:	mov	w8, #0x1                   	// #1
    1cac:	str	w8, [sp, #56]
    1cb0:	sub	x8, x29, #0x48
    1cb4:	add	x0, sp, #0x38
    1cb8:	mov	x1, x21
    1cbc:	mov	x2, x22
    1cc0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1cc4:	ldur	x8, [x29, #-72]
    1cc8:	orr	x8, x8, #0x1
    1ccc:	str	x8, [x19]
    1cd0:	b	1ed4 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x284>
    1cd4:	ldr	w8, [x21, #32]
    1cd8:	cmn	w8, #0x1
    1cdc:	b.eq	1df8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x1a8>  // b.none
    1ce0:	ldr	w9, [x21, #36]
    1ce4:	ldp	x1, x2, [x21]
    1ce8:	adrp	x5, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    1cec:	add	x5, x5, #0x0
    1cf0:	add	w3, w9, w8
    1cf4:	sub	x0, x29, #0x48
    1cf8:	mov	w4, wzr
    1cfc:	mov	x6, xzr
    1d00:	bl	20 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>
    1d04:	ldr	x24, [x20, #16]
    1d08:	add	x23, x20, #0x8
    1d0c:	cbz	x24, 1e10 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x1c0>
    1d10:	add	x26, sp, #0x90
    1d14:	mov	x22, x23
    1d18:	add	x0, x24, #0x20
    1d1c:	sub	x1, x29, #0x48
    1d20:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
    1d24:	add	x8, x24, #0x18
    1d28:	add	x9, x24, #0x10
    1d2c:	tst	w0, #0x1
    1d30:	csel	x8, x8, x9, ne  // ne = any
    1d34:	csel	x22, x22, x24, ne  // ne = any
    1d38:	ldr	x24, [x8]
    1d3c:	cbnz	x24, 1d18 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0xc8>
    1d40:	cmp	x22, x23
    1d44:	b.eq	1e14 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x1c4>  // b.none
    1d48:	ldr	w8, [x21, #32]
    1d4c:	ldr	w9, [x22, #64]
    1d50:	cmp	w8, w9
    1d54:	b.ne	1e14 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x1c4>  // b.any
    1d58:	ldr	w8, [x21, #36]
    1d5c:	cbnz	w8, 2144 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x4f4>
    1d60:	add	x24, x22, #0x20
    1d64:	ldr	w8, [x24, #36]
    1d68:	cbnz	w8, 1e94 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x244>
    1d6c:	ldur	q0, [x21, #40]
    1d70:	sub	x8, x29, #0x70
    1d74:	sub	x9, x29, #0x80
    1d78:	mov	w25, #0x505                 	// #1285
    1d7c:	str	q0, [x26, #64]
    1d80:	ldur	q0, [x22, #72]
    1d84:	stp	x8, x9, [x29, #-96]
    1d88:	add	x8, sp, #0x38
    1d8c:	sub	x0, x29, #0x60
    1d90:	str	q0, [x26, #48]
    1d94:	sturh	w25, [x29, #-80]
    1d98:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1d9c:	ldur	q0, [x22, #72]
    1da0:	add	x8, sp, #0x90
    1da4:	add	x9, sp, #0x80
    1da8:	add	x0, sp, #0xa0
    1dac:	str	q0, [x26]
    1db0:	ldur	q0, [x21, #40]
    1db4:	stp	x8, x9, [sp, #160]
    1db8:	add	x8, sp, #0x8
    1dbc:	strh	w25, [sp, #176]
    1dc0:	str	q0, [sp, #128]
    1dc4:	add	x25, sp, #0x8
    1dc8:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1dcc:	ldr	x2, [sp, #64]
    1dd0:	ldr	x8, [sp, #16]
    1dd4:	cmp	x2, x8
    1dd8:	b.ne	1fdc <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x38c>  // b.any
    1ddc:	cbz	x2, 1fe4 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x394>
    1de0:	ldr	x1, [sp, #8]
    1de4:	ldr	x0, [sp, #56]
    1de8:	bl	0 <bcmp>
    1dec:	cmp	w0, #0x0
    1df0:	cset	w27, ne  // ne = any
    1df4:	b	1fe8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x398>
    1df8:	mov	x0, x20
    1dfc:	mov	x1, x21
    1e00:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1e04:	mov	w8, #0x1                   	// #1
    1e08:	str	x8, [x19]
    1e0c:	b	1ed4 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x284>
    1e10:	mov	x22, x23
    1e14:	ldr	x25, [x20, #24]
    1e18:	cmp	x22, x25
    1e1c:	b.eq	1e94 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x244>  // b.none
    1e20:	mov	x0, x22
    1e24:	bl	0 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>
    1e28:	ldp	w26, w9, [x21, #32]
    1e2c:	ldr	w8, [x0, #64]
    1e30:	add	w27, w9, w26
    1e34:	cmp	w27, w8
    1e38:	b.ls	1e94 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x244>  // b.plast
    1e3c:	ldr	w9, [x0, #68]
    1e40:	mov	x24, x0
    1e44:	add	w8, w9, w8
    1e48:	cmp	w8, w26
    1e4c:	b.ls	1e94 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x244>  // b.plast
    1e50:	mov	x0, x24
    1e54:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    1e58:	mov	x22, x0
    1e5c:	cmp	x25, x24
    1e60:	b.eq	1ef4 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x2a4>  // b.none
    1e64:	mov	x0, x24
    1e68:	mov	x23, x24
    1e6c:	bl	0 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>
    1e70:	ldr	w8, [x0, #64]
    1e74:	cmp	w27, w8
    1e78:	b.ls	1ef8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x2a8>  // b.plast
    1e7c:	ldr	w9, [x0, #68]
    1e80:	mov	x24, x0
    1e84:	add	w8, w9, w8
    1e88:	cmp	w8, w26
    1e8c:	b.hi	1e5c <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x20c>  // b.pmore
    1e90:	b	1ef8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x2a8>
    1e94:	mov	x0, x20
    1e98:	mov	x1, x21
    1e9c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1ea0:	mov	w8, #0x1                   	// #1
    1ea4:	str	x8, [x19]
    1ea8:	ldur	x0, [x29, #-32]
    1eac:	sub	x19, x29, #0x48
    1eb0:	add	x8, x19, #0x38
    1eb4:	cmp	x0, x8
    1eb8:	b.eq	1ec0 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x270>  // b.none
    1ebc:	bl	0 <_ZdlPv>
    1ec0:	ldur	x0, [x29, #-72]
    1ec4:	add	x8, x19, #0x10
    1ec8:	cmp	x0, x8
    1ecc:	b.eq	1ed4 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x284>  // b.none
    1ed0:	bl	0 <_ZdlPv>
    1ed4:	ldp	x20, x19, [sp, #400]
    1ed8:	ldp	x22, x21, [sp, #384]
    1edc:	ldp	x24, x23, [sp, #368]
    1ee0:	ldp	x26, x25, [sp, #352]
    1ee4:	ldp	x28, x27, [sp, #336]
    1ee8:	ldp	x29, x30, [sp, #320]
    1eec:	add	sp, sp, #0x1a0
    1ef0:	ret
    1ef4:	mov	x23, x25
    1ef8:	add	x8, sp, #0x8
    1efc:	add	x8, x8, #0x8
    1f00:	add	x0, sp, #0x8
    1f04:	mov	x1, x23
    1f08:	mov	x2, x22
    1f0c:	stp	xzr, xzr, [sp, #8]
    1f10:	stp	xzr, x8, [sp, #24]
    1f14:	stp	x8, xzr, [sp, #40]
    1f18:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1f1c:	add	x8, sp, #0x38
    1f20:	add	x0, sp, #0x8
    1f24:	mov	x1, x21
    1f28:	bl	13e8 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE>
    1f2c:	ldrb	w9, [sp, #104]
    1f30:	ubfiz	w10, w9, #1, #1
    1f34:	and	w8, w9, #0xfffffffd
    1f38:	orr	w10, w10, w8
    1f3c:	strb	w10, [sp, #104]
    1f40:	tbnz	w9, #0, 1f90 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x340>
    1f44:	mov	x0, x20
    1f48:	mov	x1, x23
    1f4c:	mov	x2, x22
    1f50:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1f54:	ldrb	w8, [sp, #104]
    1f58:	tbnz	w8, #1, 213c <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x4ec>
    1f5c:	tbnz	w8, #0, 2164 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x514>
    1f60:	ldr	x1, [sp, #80]
    1f64:	add	x8, sp, #0x38
    1f68:	add	x2, x8, #0x8
    1f6c:	mov	x0, x20
    1f70:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1f74:	ldrb	w8, [sp, #104]
    1f78:	tbnz	w8, #1, 213c <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x4ec>
    1f7c:	tbnz	w8, #0, 1fb4 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x364>
    1f80:	ldr	x1, [sp, #72]
    1f84:	add	x0, sp, #0x38
    1f88:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1f8c:	b	1fcc <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x37c>
    1f90:	ldr	x9, [sp, #56]
    1f94:	ldr	x1, [sp, #24]
    1f98:	strb	w8, [sp, #104]
    1f9c:	add	x0, sp, #0x8
    1fa0:	orr	x8, x9, #0x1
    1fa4:	str	xzr, [sp, #56]
    1fa8:	str	x8, [x19]
    1fac:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1fb0:	b	1ea8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x258>
    1fb4:	ldr	x0, [sp, #56]
    1fb8:	cbz	x0, 1fc8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x378>
    1fbc:	ldr	x8, [x0]
    1fc0:	ldr	x8, [x8, #8]
    1fc4:	blr	x8
    1fc8:	str	xzr, [sp, #56]
    1fcc:	ldr	x1, [sp, #24]
    1fd0:	add	x0, sp, #0x8
    1fd4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1fd8:	b	1ea0 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x250>
    1fdc:	mov	w27, #0x1                   	// #1
    1fe0:	b	1fe8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x398>
    1fe4:	mov	w27, wzr
    1fe8:	ldr	x0, [sp, #8]
    1fec:	add	x8, x25, #0x10
    1ff0:	cmp	x0, x8
    1ff4:	b.eq	1ffc <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x3ac>  // b.none
    1ff8:	bl	0 <_ZdlPv>
    1ffc:	ldr	x0, [sp, #56]
    2000:	add	x8, sp, #0x38
    2004:	add	x8, x8, #0x10
    2008:	cmp	x0, x8
    200c:	b.eq	2014 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x3c4>  // b.none
    2010:	bl	0 <_ZdlPv>
    2014:	cbz	w27, 2040 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x3f0>
    2018:	mov	w8, #0x3                   	// #3
    201c:	str	w8, [sp, #8]
    2020:	add	x8, sp, #0x38
    2024:	add	x0, sp, #0x8
    2028:	mov	x1, x21
    202c:	mov	x2, x24
    2030:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    2034:	ldr	x8, [sp, #56]
    2038:	orr	x8, x8, #0x1
    203c:	b	1ea4 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x254>
    2040:	ldur	q0, [x21, #40]
    2044:	ldp	x24, x25, [x21]
    2048:	ldr	w21, [x21, #32]
    204c:	add	x8, sp, #0xa0
    2050:	str	q0, [x26, #16]
    2054:	ldur	q0, [x22, #72]
    2058:	sub	x9, x29, #0x70
    205c:	mov	w10, #0x505                 	// #1285
    2060:	stp	x8, x9, [x29, #-96]
    2064:	add	x8, sp, #0x8
    2068:	sub	x0, x29, #0x60
    206c:	str	q0, [x26, #64]
    2070:	sturh	w10, [x29, #-80]
    2074:	add	x26, sp, #0x8
    2078:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    207c:	ldp	x5, x6, [sp, #8]
    2080:	add	x0, sp, #0x38
    2084:	mov	x1, x24
    2088:	mov	x2, x25
    208c:	mov	w3, w21
    2090:	mov	w4, wzr
    2094:	bl	20 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>
    2098:	ldr	x0, [sp, #8]
    209c:	add	x8, x26, #0x10
    20a0:	cmp	x0, x8
    20a4:	b.eq	20ac <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x45c>  // b.none
    20a8:	bl	0 <_ZdlPv>
    20ac:	mov	x0, x22
    20b0:	mov	x1, x23
    20b4:	bl	0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_>
    20b8:	mov	x21, x0
    20bc:	ldr	x0, [x0, #72]
    20c0:	add	x8, x21, #0x58
    20c4:	cmp	x0, x8
    20c8:	b.eq	20d0 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x480>  // b.none
    20cc:	bl	0 <_ZdlPv>
    20d0:	ldr	x0, [x21, #32]
    20d4:	add	x8, x21, #0x30
    20d8:	cmp	x0, x8
    20dc:	b.eq	20e4 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x494>  // b.none
    20e0:	bl	0 <_ZdlPv>
    20e4:	mov	x0, x21
    20e8:	bl	0 <_ZdlPv>
    20ec:	ldr	x8, [x20, #40]
    20f0:	add	x1, sp, #0x38
    20f4:	mov	x0, x20
    20f8:	add	x21, sp, #0x38
    20fc:	sub	x8, x8, #0x1
    2100:	str	x8, [x20, #40]
    2104:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    2108:	ldr	x0, [sp, #96]
    210c:	add	x9, x21, #0x38
    2110:	mov	w8, #0x1                   	// #1
    2114:	str	x8, [x19]
    2118:	cmp	x0, x9
    211c:	b.eq	2124 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x4d4>  // b.none
    2120:	bl	0 <_ZdlPv>
    2124:	ldr	x0, [sp, #56]
    2128:	add	x8, x21, #0x10
    212c:	cmp	x0, x8
    2130:	b.eq	1ea8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x258>  // b.none
    2134:	bl	0 <_ZdlPv>
    2138:	b	1ea8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x258>
    213c:	add	x0, sp, #0x38
    2140:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    2144:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    2148:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    214c:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    2150:	add	x0, x0, #0x0
    2154:	add	x1, x1, #0x0
    2158:	add	x3, x3, #0x0
    215c:	mov	w2, #0x10e                 	// #270
    2160:	bl	0 <__assert_fail>
    2164:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    2168:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    216c:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    2170:	add	x0, x0, #0x0
    2174:	add	x1, x1, #0x0
    2178:	add	x3, x3, #0x0
    217c:	mov	w2, #0x272                 	// #626
    2180:	bl	0 <__assert_fail>

0000000000002184 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE>:
    2184:	sub	sp, sp, #0x1a0
    2188:	stp	x29, x30, [sp, #320]
    218c:	stp	x28, x27, [sp, #336]
    2190:	stp	x26, x25, [sp, #352]
    2194:	stp	x24, x23, [sp, #368]
    2198:	stp	x22, x21, [sp, #384]
    219c:	stp	x20, x19, [sp, #400]
    21a0:	add	x29, sp, #0x140
    21a4:	mov	x22, x8
    21a8:	ldp	x9, x8, [x1]
    21ac:	mov	x20, x0
    21b0:	stp	xzr, xzr, [x29, #-136]
    21b4:	stur	xzr, [x29, #-120]
    21b8:	subs	x0, x8, x9
    21bc:	asr	x19, x0, #3
    21c0:	b.eq	21e0 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x5c>  // b.none
    21c4:	lsr	x8, x19, #60
    21c8:	cbnz	x8, 2494 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x310>
    21cc:	mov	x21, x1
    21d0:	bl	0 <_Znwm>
    21d4:	ldp	x9, x8, [x21]
    21d8:	mov	x21, x0
    21dc:	b	21e4 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x60>
    21e0:	mov	x21, xzr
    21e4:	add	x10, x21, x19, lsl #3
    21e8:	cmp	x9, x8
    21ec:	stur	x10, [x29, #-120]
    21f0:	mov	x10, x21
    21f4:	stp	x21, x21, [x29, #-136]
    21f8:	b.eq	2290 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x10c>  // b.none
    21fc:	sub	x10, x8, x9
    2200:	sub	x10, x10, #0x8
    2204:	cmp	x10, #0x18
    2208:	b.cs	2214 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x90>  // b.hs, b.nlast
    220c:	mov	x10, x21
    2210:	b	2280 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0xfc>
    2214:	and	x11, x10, #0xfffffffffffffff8
    2218:	add	x11, x11, #0x8
    221c:	add	x12, x9, x11
    2220:	cmp	x21, x12
    2224:	b.cs	223c <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0xb8>  // b.hs, b.nlast
    2228:	add	x11, x21, x11
    222c:	cmp	x9, x11
    2230:	b.cs	223c <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0xb8>  // b.hs, b.nlast
    2234:	mov	x10, x21
    2238:	b	2280 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0xfc>
    223c:	lsr	x10, x10, #3
    2240:	add	x11, x10, #0x1
    2244:	and	x12, x11, #0x3ffffffffffffffc
    2248:	lsl	x14, x12, #3
    224c:	add	x13, x9, #0x10
    2250:	add	x10, x21, x14
    2254:	add	x9, x9, x14
    2258:	add	x14, x21, #0x10
    225c:	mov	x15, x12
    2260:	ldp	q0, q1, [x13, #-16]
    2264:	add	x13, x13, #0x20
    2268:	subs	x15, x15, #0x4
    226c:	stp	q0, q1, [x14, #-16]
    2270:	add	x14, x14, #0x20
    2274:	b.ne	2260 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0xdc>  // b.any
    2278:	cmp	x11, x12
    227c:	b.eq	2290 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x10c>  // b.none
    2280:	ldr	x11, [x9], #8
    2284:	cmp	x8, x9
    2288:	str	x11, [x10], #8
    228c:	b.ne	2280 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0xfc>  // b.any
    2290:	sub	x0, x29, #0x70
    2294:	sub	x1, x29, #0x88
    2298:	stur	x10, [x29, #-128]
    229c:	bl	2498 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE>
    22a0:	cbz	x21, 22ac <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x128>
    22a4:	mov	x0, x21
    22a8:	bl	0 <_ZdlPv>
    22ac:	ldr	x8, [x20, #40]
    22b0:	cbz	x8, 23e4 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x260>
    22b4:	ldp	x9, x26, [x29, #-112]
    22b8:	add	x8, sp, #0x88
    22bc:	add	x8, x8, #0x8
    22c0:	str	wzr, [sp, #144]
    22c4:	cmp	x9, x26
    22c8:	stp	xzr, x8, [sp, #152]
    22cc:	stp	x22, x9, [sp, #8]
    22d0:	stp	x8, xzr, [sp, #168]
    22d4:	b.eq	23a0 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x21c>  // b.none
    22d8:	ldr	x21, [sp, #16]
    22dc:	add	x8, sp, #0x18
    22e0:	add	x9, sp, #0x38
    22e4:	add	x27, x8, #0x10
    22e8:	add	x28, x9, #0x38
    22ec:	add	x19, x9, #0x10
    22f0:	b	2300 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x17c>
    22f4:	add	x21, x21, #0x8
    22f8:	cmp	x21, x26
    22fc:	b.eq	23a0 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x21c>  // b.none
    2300:	ldr	x8, [x20, #24]
    2304:	ldp	w24, w25, [x21]
    2308:	add	x0, sp, #0x18
    230c:	mov	w2, #0x20                  	// #32
    2310:	ldp	x22, x23, [x8, #32]
    2314:	mov	x1, x25
    2318:	str	x27, [sp, #24]
    231c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc>
    2320:	ldp	x5, x6, [sp, #24]
    2324:	add	x0, sp, #0x38
    2328:	mov	x1, x22
    232c:	mov	x2, x23
    2330:	mov	w3, w24
    2334:	mov	w4, w25
    2338:	bl	20 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>
    233c:	add	x8, sp, #0x80
    2340:	add	x0, sp, #0x88
    2344:	add	x1, sp, #0x38
    2348:	bl	1c50 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE>
    234c:	ldr	x8, [sp, #128]
    2350:	tst	x8, #0xfffffffffffffffe
    2354:	and	x9, x8, #0xfffffffffffffffe
    2358:	cset	w8, ne  // ne = any
    235c:	orr	x8, x9, x8
    2360:	str	x8, [sp, #128]
    2364:	cbnz	x9, 241c <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x298>
    2368:	cbnz	x8, 248c <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x308>
    236c:	ldr	x0, [sp, #96]
    2370:	cmp	x0, x28
    2374:	b.eq	237c <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x1f8>  // b.none
    2378:	bl	0 <_ZdlPv>
    237c:	ldr	x0, [sp, #56]
    2380:	cmp	x0, x19
    2384:	b.eq	238c <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x208>  // b.none
    2388:	bl	0 <_ZdlPv>
    238c:	ldr	x0, [sp, #24]
    2390:	cmp	x0, x27
    2394:	b.eq	22f4 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x170>  // b.none
    2398:	bl	0 <_ZdlPv>
    239c:	b	22f4 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x170>
    23a0:	add	x8, sp, #0x38
    23a4:	add	x0, sp, #0x88
    23a8:	mov	x1, x20
    23ac:	bl	1698 <_ZNK5clang7tooling12Replacements5mergeERKS1_>
    23b0:	ldr	x8, [sp, #8]
    23b4:	add	x0, sp, #0x38
    23b8:	bl	29cc <_ZNK5clang7tooling12Replacements17getAffectedRangesEv>
    23bc:	ldr	x1, [sp, #72]
    23c0:	add	x0, sp, #0x38
    23c4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    23c8:	ldr	x1, [sp, #152]
    23cc:	add	x0, sp, #0x88
    23d0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    23d4:	ldr	x0, [sp, #16]
    23d8:	cbz	x0, 23fc <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x278>
    23dc:	bl	0 <_ZdlPv>
    23e0:	b	23fc <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x278>
    23e4:	ldur	q0, [x29, #-112]
    23e8:	ldur	x8, [x29, #-96]
    23ec:	stp	xzr, xzr, [x29, #-112]
    23f0:	stur	xzr, [x29, #-96]
    23f4:	str	q0, [x22]
    23f8:	str	x8, [x22, #16]
    23fc:	ldp	x20, x19, [sp, #400]
    2400:	ldp	x22, x21, [sp, #384]
    2404:	ldp	x24, x23, [sp, #368]
    2408:	ldp	x26, x25, [sp, #352]
    240c:	ldp	x28, x27, [sp, #336]
    2410:	ldp	x29, x30, [sp, #320]
    2414:	add	sp, sp, #0x1a0
    2418:	ret
    241c:	sturb	wzr, [x29, #-24]
    2420:	stp	xzr, xzr, [x29, #-72]
    2424:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
    2428:	ldr	x10, [x10]
    242c:	sub	x8, x29, #0x28
    2430:	mov	w9, #0x1                   	// #1
    2434:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    2438:	add	x11, x8, #0x10
    243c:	stur	w9, [x29, #-56]
    2440:	add	x9, x10, #0x10
    2444:	add	x1, x1, #0x0
    2448:	sub	x0, x29, #0x58
    244c:	stp	x11, xzr, [x29, #-40]
    2450:	stp	x9, xzr, [x29, #-88]
    2454:	stur	x8, [x29, #-48]
    2458:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    245c:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    2460:	add	x1, x1, #0x0
    2464:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    2468:	add	x1, sp, #0x80
    246c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    2470:	sub	x0, x29, #0x58
    2474:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    2478:	ldr	x0, [x0]
    247c:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    2480:	add	x1, x1, #0x0
    2484:	mov	w2, #0x2c9                 	// #713
    2488:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    248c:	add	x0, sp, #0x80
    2490:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2494:	bl	0 <_ZSt17__throw_bad_allocv>

0000000000002498 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE>:
    2498:	stp	x29, x30, [sp, #-96]!
    249c:	stp	x28, x27, [sp, #16]
    24a0:	stp	x26, x25, [sp, #32]
    24a4:	stp	x24, x23, [sp, #48]
    24a8:	stp	x22, x21, [sp, #64]
    24ac:	stp	x20, x19, [sp, #80]
    24b0:	mov	x29, sp
    24b4:	ldp	x22, x21, [x1]
    24b8:	mov	x20, x1
    24bc:	mov	x19, x0
    24c0:	cmp	x22, x21
    24c4:	b.eq	26b8 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x220>  // b.none
    24c8:	sub	x23, x21, x22
    24cc:	asr	x8, x23, #3
    24d0:	clz	x8, x8
    24d4:	mov	w9, #0x7e                  	// #126
    24d8:	sub	x2, x9, x8, lsl #1
    24dc:	mov	x0, x22
    24e0:	mov	x1, x21
    24e4:	mov	x3, xzr
    24e8:	bl	3814 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_>
    24ec:	cmp	x23, #0x81
    24f0:	b.lt	25cc <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x134>  // b.tstop
    24f4:	mov	w23, #0x1                   	// #1
    24f8:	mov	x24, x22
    24fc:	b	2514 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x7c>
    2500:	mov	x10, x22
    2504:	add	x23, x23, #0x1
    2508:	cmp	x23, #0x10
    250c:	str	x25, [x10]
    2510:	b.eq	26ac <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x214>  // b.none
    2514:	mov	x8, x24
    2518:	ldr	w9, [x24, #12]
    251c:	ldp	w10, w11, [x22]
    2520:	add	x24, x22, x23, lsl #3
    2524:	ldr	w12, [x24]
    2528:	ldr	x25, [x24]
    252c:	cmp	w9, w11
    2530:	cset	w9, cc  // cc = lo, ul, last
    2534:	cmp	w12, w10
    2538:	cset	w10, cc  // cc = lo, ul, last
    253c:	csel	w9, w9, w10, eq  // eq = none
    2540:	cmp	w9, #0x1
    2544:	b.ne	2564 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0xcc>  // b.any
    2548:	subs	x2, x24, x22
    254c:	b.eq	2500 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x68>  // b.none
    2550:	sub	x8, x8, x2
    2554:	add	x0, x8, #0x10
    2558:	mov	x1, x22
    255c:	bl	0 <memmove>
    2560:	b	2500 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x68>
    2564:	ldp	w11, w10, [x8]
    2568:	lsr	x9, x25, #32
    256c:	cmp	w10, w9
    2570:	cset	w10, hi  // hi = pmore
    2574:	cmp	w11, w25
    2578:	cset	w11, hi  // hi = pmore
    257c:	csel	w10, w10, w11, eq  // eq = none
    2580:	cmp	w10, #0x1
    2584:	mov	x10, x24
    2588:	b.ne	2504 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x6c>  // b.any
    258c:	mov	x11, x24
    2590:	mov	x10, x8
    2594:	ldr	x12, [x8]
    2598:	str	x12, [x11]
    259c:	ldr	w11, [x10, #-8]!
    25a0:	ldur	w12, [x8, #-4]
    25a4:	cmp	w12, w9
    25a8:	cset	w12, hi  // hi = pmore
    25ac:	cmp	w11, w25
    25b0:	cset	w11, hi  // hi = pmore
    25b4:	csel	w12, w12, w11, eq  // eq = none
    25b8:	mov	x11, x8
    25bc:	mov	x8, x10
    25c0:	tbnz	w12, #0, 2594 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0xfc>
    25c4:	add	x10, x10, #0x8
    25c8:	b	2504 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x6c>
    25cc:	add	x9, x22, #0x8
    25d0:	cmp	x9, x21
    25d4:	b.eq	26b8 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x220>  // b.none
    25d8:	mov	x23, x22
    25dc:	b	25f4 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x15c>
    25e0:	mov	x10, x22
    25e4:	add	x9, x23, #0x8
    25e8:	cmp	x9, x21
    25ec:	str	x24, [x10]
    25f0:	b.eq	26b8 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x220>  // b.none
    25f4:	ldr	w10, [x23, #12]
    25f8:	ldp	w12, w11, [x22]
    25fc:	mov	x8, x23
    2600:	mov	x23, x9
    2604:	ldr	w9, [x9]
    2608:	cmp	w10, w11
    260c:	cset	w10, cc  // cc = lo, ul, last
    2610:	ldr	x24, [x23]
    2614:	cmp	w9, w12
    2618:	cset	w9, cc  // cc = lo, ul, last
    261c:	csel	w9, w10, w9, eq  // eq = none
    2620:	cmp	w9, #0x1
    2624:	b.ne	2644 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x1ac>  // b.any
    2628:	subs	x2, x23, x22
    262c:	b.eq	25e0 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x148>  // b.none
    2630:	sub	x8, x8, x2
    2634:	add	x0, x8, #0x10
    2638:	mov	x1, x22
    263c:	bl	0 <memmove>
    2640:	b	25e0 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x148>
    2644:	ldp	w11, w10, [x8]
    2648:	lsr	x9, x24, #32
    264c:	cmp	w10, w9
    2650:	cset	w10, hi  // hi = pmore
    2654:	cmp	w11, w24
    2658:	cset	w11, hi  // hi = pmore
    265c:	csel	w10, w10, w11, eq  // eq = none
    2660:	cmp	w10, #0x1
    2664:	mov	x10, x23
    2668:	b.ne	25e4 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x14c>  // b.any
    266c:	mov	x11, x23
    2670:	mov	x10, x8
    2674:	ldr	x12, [x8]
    2678:	str	x12, [x11]
    267c:	ldr	w11, [x10, #-8]!
    2680:	ldur	w12, [x8, #-4]
    2684:	cmp	w12, w9
    2688:	cset	w12, hi  // hi = pmore
    268c:	cmp	w11, w24
    2690:	cset	w11, hi  // hi = pmore
    2694:	csel	w12, w12, w11, eq  // eq = none
    2698:	mov	x11, x8
    269c:	mov	x8, x10
    26a0:	tbnz	w12, #0, 2674 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x1dc>
    26a4:	add	x10, x10, #0x8
    26a8:	b	25e4 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x14c>
    26ac:	add	x8, x22, #0x80
    26b0:	cmp	x8, x21
    26b4:	b.ne	2944 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x4ac>  // b.any
    26b8:	stp	xzr, xzr, [x19]
    26bc:	str	xzr, [x19, #16]
    26c0:	ldp	x22, x23, [x20]
    26c4:	cmp	x22, x23
    26c8:	b.eq	29a4 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x50c>  // b.none
    26cc:	mov	x26, xzr
    26d0:	mov	x20, xzr
    26d4:	mov	x24, #0x7ffffffffffffff8    	// #9223372036854775800
    26d8:	mov	x25, #0xfffffffffffffff     	// #1152921504606846975
    26dc:	cmp	x20, x26
    26e0:	b.eq	2734 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x29c>  // b.none
    26e4:	ldp	w8, w9, [x26, #-8]
    26e8:	ldr	w10, [x22]
    26ec:	add	w9, w9, w8
    26f0:	cmp	w9, w10
    26f4:	b.cc	2734 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x29c>  // b.lo, b.ul, b.last
    26f8:	ldr	w11, [x22, #4]
    26fc:	ldr	x12, [x19]
    2700:	add	w10, w11, w10
    2704:	cmp	w9, w10
    2708:	csel	w9, w10, w9, cc  // cc = lo, ul, last
    270c:	sub	x11, x26, x12
    2710:	sub	w9, w9, w8
    2714:	add	x10, x11, x20
    2718:	bfi	x8, x9, #32, #32
    271c:	mov	x20, x12
    2720:	stur	x8, [x10, #-8]
    2724:	add	x22, x22, #0x8
    2728:	cmp	x22, x23
    272c:	b.ne	2924 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x48c>  // b.any
    2730:	b	29a4 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x50c>
    2734:	ldr	x8, [x19, #16]
    2738:	cmp	x26, x8
    273c:	b.eq	2758 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x2c0>  // b.none
    2740:	ldr	x8, [x22], #8
    2744:	str	x8, [x26], #8
    2748:	str	x26, [x19, #8]
    274c:	cmp	x22, x23
    2750:	b.ne	2924 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x48c>  // b.any
    2754:	b	29a4 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x50c>
    2758:	ldr	x21, [x19]
    275c:	sub	x8, x26, x21
    2760:	cmp	x8, x24
    2764:	b.eq	29c0 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x528>  // b.none
    2768:	asr	x9, x8, #3
    276c:	cmp	x8, #0x0
    2770:	csinc	x8, x9, xzr, ne  // ne = any
    2774:	adds	x8, x8, x9
    2778:	lsr	x10, x8, #60
    277c:	cset	w9, cs  // cs = hs, nlast
    2780:	cmp	x10, #0x0
    2784:	cset	w10, ne  // ne = any
    2788:	orr	w9, w9, w10
    278c:	cmp	w9, #0x0
    2790:	csel	x27, x25, x8, ne  // ne = any
    2794:	sub	x8, x26, x21
    2798:	asr	x28, x8, #3
    279c:	cbz	x27, 27b0 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x318>
    27a0:	lsl	x0, x27, #3
    27a4:	bl	0 <_Znwm>
    27a8:	mov	x20, x0
    27ac:	b	27b4 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x31c>
    27b0:	mov	x20, xzr
    27b4:	ldr	x8, [x22]
    27b8:	subs	x9, x26, x21
    27bc:	str	x8, [x20, x28, lsl #3]
    27c0:	mov	x8, x20
    27c4:	b.eq	285c <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x3c4>  // b.none
    27c8:	sub	x10, x9, #0x8
    27cc:	cmp	x10, #0x18
    27d0:	mov	x8, x20
    27d4:	mov	x9, x21
    27d8:	b.cc	284c <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x3b4>  // b.lo, b.ul, b.last
    27dc:	and	x8, x10, #0xfffffffffffffff8
    27e0:	add	x9, x21, x8
    27e4:	add	x9, x9, #0x8
    27e8:	cmp	x20, x9
    27ec:	b.cs	2808 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x370>  // b.hs, b.nlast
    27f0:	add	x8, x20, x8
    27f4:	add	x8, x8, #0x8
    27f8:	cmp	x21, x8
    27fc:	mov	x8, x20
    2800:	mov	x9, x21
    2804:	b.cc	284c <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x3b4>  // b.lo, b.ul, b.last
    2808:	lsr	x8, x10, #3
    280c:	add	x10, x8, #0x1
    2810:	and	x11, x10, #0x3ffffffffffffffc
    2814:	lsl	x9, x11, #3
    2818:	add	x12, x21, #0x10
    281c:	add	x8, x20, x9
    2820:	add	x9, x21, x9
    2824:	add	x13, x20, #0x10
    2828:	mov	x14, x11
    282c:	ldp	q0, q1, [x12, #-16]
    2830:	add	x12, x12, #0x20
    2834:	subs	x14, x14, #0x4
    2838:	stp	q0, q1, [x13, #-16]
    283c:	add	x13, x13, #0x20
    2840:	b.ne	282c <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x394>  // b.any
    2844:	cmp	x10, x11
    2848:	b.eq	285c <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x3c4>  // b.none
    284c:	ldr	x10, [x9], #8
    2850:	cmp	x26, x9
    2854:	str	x10, [x8], #8
    2858:	b.ne	284c <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x3b4>  // b.any
    285c:	cmp	x26, x26
    2860:	add	x28, x8, #0x8
    2864:	b.eq	2900 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x468>  // b.none
    2868:	sub	x9, x26, x26
    286c:	sub	x9, x9, #0x8
    2870:	cmp	x9, #0x18
    2874:	b.cs	2880 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x3e8>  // b.hs, b.nlast
    2878:	mov	x9, x26
    287c:	b	28f0 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x458>
    2880:	and	x10, x9, #0xfffffffffffffff8
    2884:	add	x11, x26, x10
    2888:	add	x11, x11, #0x8
    288c:	cmp	x28, x11
    2890:	b.cs	28ac <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x414>  // b.hs, b.nlast
    2894:	add	x10, x8, x10
    2898:	add	x10, x10, #0x10
    289c:	cmp	x26, x10
    28a0:	b.cs	28ac <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x414>  // b.hs, b.nlast
    28a4:	mov	x9, x26
    28a8:	b	28f0 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x458>
    28ac:	lsr	x9, x9, #3
    28b0:	add	x10, x9, #0x1
    28b4:	and	x11, x10, #0x3ffffffffffffffc
    28b8:	lsl	x9, x11, #3
    28bc:	add	x12, x26, #0x10
    28c0:	add	x28, x28, x9
    28c4:	add	x9, x26, x9
    28c8:	add	x8, x8, #0x18
    28cc:	mov	x13, x11
    28d0:	ldp	q0, q1, [x12, #-16]
    28d4:	add	x12, x12, #0x20
    28d8:	subs	x13, x13, #0x4
    28dc:	stp	q0, q1, [x8, #-16]
    28e0:	add	x8, x8, #0x20
    28e4:	b.ne	28d0 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x438>  // b.any
    28e8:	cmp	x10, x11
    28ec:	b.eq	2900 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x468>  // b.none
    28f0:	ldr	x8, [x9], #8
    28f4:	cmp	x26, x9
    28f8:	str	x8, [x28], #8
    28fc:	b.ne	28f0 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x458>  // b.any
    2900:	cbz	x21, 290c <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x474>
    2904:	mov	x0, x21
    2908:	bl	0 <_ZdlPv>
    290c:	add	x8, x20, x27, lsl #3
    2910:	stp	x20, x28, [x19]
    2914:	str	x8, [x19, #16]
    2918:	add	x22, x22, #0x8
    291c:	cmp	x22, x23
    2920:	b.eq	29a4 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x50c>  // b.none
    2924:	ldr	x26, [x19, #8]
    2928:	cmp	x20, x26
    292c:	b.ne	26e4 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x24c>  // b.any
    2930:	b	2734 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x29c>
    2934:	add	x8, x8, #0x8
    2938:	cmp	x8, x21
    293c:	str	x9, [x10]
    2940:	b.eq	26b8 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x220>  // b.none
    2944:	ldr	x9, [x8]
    2948:	ldp	w12, w10, [x8, #-8]
    294c:	lsr	x11, x9, #32
    2950:	cmp	w10, w11
    2954:	cset	w10, hi  // hi = pmore
    2958:	cmp	w12, w9
    295c:	cset	w12, hi  // hi = pmore
    2960:	csel	w10, w10, w12, eq  // eq = none
    2964:	cmp	w10, #0x1
    2968:	mov	x10, x8
    296c:	b.ne	2934 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x49c>  // b.any
    2970:	mov	x12, x8
    2974:	mov	x10, x8
    2978:	ldr	x13, [x10, #-8]!
    297c:	ldp	w15, w14, [x12, #-16]
    2980:	str	x13, [x12]
    2984:	cmp	w14, w11
    2988:	cset	w14, hi  // hi = pmore
    298c:	cmp	w15, w9
    2990:	cset	w15, hi  // hi = pmore
    2994:	csel	w14, w14, w15, eq  // eq = none
    2998:	mov	x12, x10
    299c:	tbnz	w14, #0, 2978 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x4e0>
    29a0:	b	2934 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x49c>
    29a4:	ldp	x20, x19, [sp, #80]
    29a8:	ldp	x22, x21, [sp, #64]
    29ac:	ldp	x24, x23, [sp, #48]
    29b0:	ldp	x26, x25, [sp, #32]
    29b4:	ldp	x28, x27, [sp, #16]
    29b8:	ldp	x29, x30, [sp], #96
    29bc:	ret
    29c0:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    29c4:	add	x0, x0, #0x0
    29c8:	bl	0 <_ZSt20__throw_length_errorPKc>

00000000000029cc <_ZNK5clang7tooling12Replacements17getAffectedRangesEv>:
    29cc:	sub	sp, sp, #0x90
    29d0:	stp	x29, x30, [sp, #48]
    29d4:	stp	x28, x27, [sp, #64]
    29d8:	stp	x26, x25, [sp, #80]
    29dc:	stp	x24, x23, [sp, #96]
    29e0:	stp	x22, x21, [sp, #112]
    29e4:	stp	x20, x19, [sp, #128]
    29e8:	add	x29, sp, #0x30
    29ec:	ldr	x21, [x0, #24]
    29f0:	add	x22, x0, #0x8
    29f4:	mov	x24, x8
    29f8:	cmp	x21, x22
    29fc:	b.eq	2b80 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x1b4>  // b.none
    2a00:	mov	w25, wzr
    2a04:	mov	x20, xzr
    2a08:	mov	x23, xzr
    2a0c:	mov	x28, xzr
    2a10:	stp	x24, x22, [sp, #8]
    2a14:	b	2a44 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x78>
    2a18:	mov	w8, w24
    2a1c:	bfi	x8, x19, #32, #32
    2a20:	str	x8, [x23]
    2a24:	sub	w8, w25, w26
    2a28:	mov	x0, x21
    2a2c:	add	w25, w8, w19
    2a30:	add	x23, x23, #0x8
    2a34:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    2a38:	mov	x21, x0
    2a3c:	cmp	x0, x22
    2a40:	b.eq	2b78 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x1ac>  // b.none
    2a44:	ldp	w8, w26, [x21, #64]
    2a48:	ldr	x19, [x21, #80]
    2a4c:	cmp	x28, x23
    2a50:	add	w24, w8, w25
    2a54:	b.ne	2a18 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x4c>  // b.any
    2a58:	sub	x8, x23, x20
    2a5c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
    2a60:	cmp	x8, x9
    2a64:	b.eq	2cc4 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x2f8>  // b.none
    2a68:	asr	x23, x8, #3
    2a6c:	cmp	x8, #0x0
    2a70:	csinc	x8, x23, xzr, ne  // ne = any
    2a74:	adds	x8, x8, x23
    2a78:	lsr	x10, x8, #60
    2a7c:	cset	w9, cs  // cs = hs, nlast
    2a80:	cmp	x10, #0x0
    2a84:	cset	w10, ne  // ne = any
    2a88:	orr	w9, w9, w10
    2a8c:	cmp	w9, #0x0
    2a90:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    2a94:	csel	x27, x9, x8, ne  // ne = any
    2a98:	cbz	x27, 2aac <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0xe0>
    2a9c:	lsl	x0, x27, #3
    2aa0:	bl	0 <_Znwm>
    2aa4:	mov	x22, x0
    2aa8:	b	2ab0 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0xe4>
    2aac:	mov	x22, xzr
    2ab0:	mov	w9, w24
    2ab4:	bfi	x9, x19, #32, #32
    2ab8:	subs	x8, x28, x20
    2abc:	str	x9, [x22, x23, lsl #3]
    2ac0:	mov	x23, x22
    2ac4:	b.eq	2b5c <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x190>  // b.none
    2ac8:	sub	x9, x8, #0x8
    2acc:	cmp	x9, #0x18
    2ad0:	mov	x23, x22
    2ad4:	mov	x8, x20
    2ad8:	b.cc	2b4c <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x180>  // b.lo, b.ul, b.last
    2adc:	and	x8, x9, #0xfffffffffffffff8
    2ae0:	add	x10, x20, x8
    2ae4:	add	x10, x10, #0x8
    2ae8:	cmp	x22, x10
    2aec:	b.cs	2b08 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x13c>  // b.hs, b.nlast
    2af0:	add	x8, x22, x8
    2af4:	add	x8, x8, #0x8
    2af8:	cmp	x20, x8
    2afc:	mov	x23, x22
    2b00:	mov	x8, x20
    2b04:	b.cc	2b4c <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x180>  // b.lo, b.ul, b.last
    2b08:	lsr	x8, x9, #3
    2b0c:	add	x9, x8, #0x1
    2b10:	and	x10, x9, #0x3ffffffffffffffc
    2b14:	lsl	x8, x10, #3
    2b18:	add	x11, x20, #0x10
    2b1c:	add	x23, x22, x8
    2b20:	add	x8, x20, x8
    2b24:	add	x12, x22, #0x10
    2b28:	mov	x13, x10
    2b2c:	ldp	q0, q1, [x11, #-16]
    2b30:	add	x11, x11, #0x20
    2b34:	subs	x13, x13, #0x4
    2b38:	stp	q0, q1, [x12, #-16]
    2b3c:	add	x12, x12, #0x20
    2b40:	b.ne	2b2c <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x160>  // b.any
    2b44:	cmp	x9, x10
    2b48:	b.eq	2b5c <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x190>  // b.none
    2b4c:	ldr	x9, [x8], #8
    2b50:	cmp	x28, x8
    2b54:	str	x9, [x23], #8
    2b58:	b.ne	2b4c <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x180>  // b.any
    2b5c:	cbz	x20, 2b68 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x19c>
    2b60:	mov	x0, x20
    2b64:	bl	0 <_ZdlPv>
    2b68:	add	x28, x22, x27, lsl #3
    2b6c:	mov	x20, x22
    2b70:	ldr	x22, [sp, #16]
    2b74:	b	2a24 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x58>
    2b78:	ldr	x24, [sp, #8]
    2b7c:	b	2b88 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x1bc>
    2b80:	mov	x23, xzr
    2b84:	mov	x20, xzr
    2b88:	subs	x22, x23, x20
    2b8c:	asr	x19, x22, #3
    2b90:	stp	xzr, xzr, [sp, #24]
    2b94:	str	xzr, [sp, #40]
    2b98:	b.eq	2bb4 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x1e8>  // b.none
    2b9c:	lsr	x8, x19, #60
    2ba0:	cbnz	x8, 2cd0 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x304>
    2ba4:	mov	x0, x22
    2ba8:	bl	0 <_Znwm>
    2bac:	mov	x21, x0
    2bb0:	b	2bb8 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x1ec>
    2bb4:	mov	x21, xzr
    2bb8:	add	x8, x21, x19, lsl #3
    2bbc:	cmp	x20, x23
    2bc0:	str	x8, [sp, #40]
    2bc4:	mov	x8, x21
    2bc8:	stp	x21, x21, [sp, #24]
    2bcc:	b.eq	2c60 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x294>  // b.none
    2bd0:	sub	x10, x22, #0x8
    2bd4:	cmp	x10, #0x18
    2bd8:	mov	x8, x21
    2bdc:	mov	x9, x20
    2be0:	b.cc	2c50 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x284>  // b.lo, b.ul, b.last
    2be4:	and	x8, x10, #0xfffffffffffffff8
    2be8:	add	x8, x8, #0x8
    2bec:	add	x9, x20, x8
    2bf0:	cmp	x21, x9
    2bf4:	b.cs	2c0c <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x240>  // b.hs, b.nlast
    2bf8:	add	x8, x21, x8
    2bfc:	cmp	x20, x8
    2c00:	mov	x8, x21
    2c04:	mov	x9, x20
    2c08:	b.cc	2c50 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x284>  // b.lo, b.ul, b.last
    2c0c:	lsr	x8, x10, #3
    2c10:	add	x10, x8, #0x1
    2c14:	and	x11, x10, #0x3ffffffffffffffc
    2c18:	lsl	x9, x11, #3
    2c1c:	add	x12, x20, #0x10
    2c20:	add	x8, x21, x9
    2c24:	add	x9, x20, x9
    2c28:	add	x13, x21, #0x10
    2c2c:	mov	x14, x11
    2c30:	ldp	q0, q1, [x12, #-16]
    2c34:	add	x12, x12, #0x20
    2c38:	subs	x14, x14, #0x4
    2c3c:	stp	q0, q1, [x13, #-16]
    2c40:	add	x13, x13, #0x20
    2c44:	b.ne	2c30 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x264>  // b.any
    2c48:	cmp	x10, x11
    2c4c:	b.eq	2c60 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x294>  // b.none
    2c50:	ldr	x10, [x9], #8
    2c54:	cmp	x23, x9
    2c58:	str	x10, [x8], #8
    2c5c:	b.ne	2c50 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x284>  // b.any
    2c60:	add	x1, sp, #0x18
    2c64:	mov	x0, x24
    2c68:	str	x8, [sp, #32]
    2c6c:	bl	2498 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE>
    2c70:	cbz	x21, 2c7c <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x2b0>
    2c74:	mov	x0, x21
    2c78:	bl	0 <_ZdlPv>
    2c7c:	cbz	x20, 2ca4 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x2d8>
    2c80:	mov	x0, x20
    2c84:	ldp	x20, x19, [sp, #128]
    2c88:	ldp	x22, x21, [sp, #112]
    2c8c:	ldp	x24, x23, [sp, #96]
    2c90:	ldp	x26, x25, [sp, #80]
    2c94:	ldp	x28, x27, [sp, #64]
    2c98:	ldp	x29, x30, [sp, #48]
    2c9c:	add	sp, sp, #0x90
    2ca0:	b	0 <_ZdlPv>
    2ca4:	ldp	x20, x19, [sp, #128]
    2ca8:	ldp	x22, x21, [sp, #112]
    2cac:	ldp	x24, x23, [sp, #96]
    2cb0:	ldp	x26, x25, [sp, #80]
    2cb4:	ldp	x28, x27, [sp, #64]
    2cb8:	ldp	x29, x30, [sp, #48]
    2cbc:	add	sp, sp, #0x90
    2cc0:	ret
    2cc4:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    2cc8:	add	x0, x0, #0x0
    2ccc:	bl	0 <_ZSt20__throw_length_errorPKc>
    2cd0:	bl	0 <_ZSt17__throw_bad_allocv>

0000000000002cd4 <_ZN5clang7tooling20applyAllReplacementsERKNS0_12ReplacementsERNS_8RewriterE>:
    2cd4:	stp	x29, x30, [sp, #-64]!
    2cd8:	str	x23, [sp, #16]
    2cdc:	stp	x22, x21, [sp, #32]
    2ce0:	stp	x20, x19, [sp, #48]
    2ce4:	mov	x29, sp
    2ce8:	ldr	x22, [x0, #24]
    2cec:	add	x20, x0, #0x8
    2cf0:	cmp	x22, x20
    2cf4:	b.eq	2d58 <_ZN5clang7tooling20applyAllReplacementsERKNS0_12ReplacementsERNS_8RewriterE+0x84>  // b.none
    2cf8:	adrp	x21, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    2cfc:	mov	x19, x1
    2d00:	mov	w23, #0x1                   	// #1
    2d04:	add	x21, x21, #0x0
    2d08:	b	2d38 <_ZN5clang7tooling20applyAllReplacementsERKNS0_12ReplacementsERNS_8RewriterE+0x64>
    2d0c:	mov	x0, x20
    2d10:	bl	0 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>
    2d14:	add	x0, x0, #0x20
    2d18:	mov	x1, x19
    2d1c:	bl	678 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE>
    2d20:	and	w23, w23, w0
    2d24:	mov	x0, x20
    2d28:	bl	0 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>
    2d2c:	mov	x20, x0
    2d30:	cmp	x0, x22
    2d34:	b.eq	2d5c <_ZN5clang7tooling20applyAllReplacementsERKNS0_12ReplacementsERNS_8RewriterE+0x88>  // b.none
    2d38:	mov	x0, x20
    2d3c:	bl	0 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>
    2d40:	add	x0, x0, #0x20
    2d44:	mov	x1, x21
    2d48:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
    2d4c:	cbnz	w0, 2d0c <_ZN5clang7tooling20applyAllReplacementsERKNS0_12ReplacementsERNS_8RewriterE+0x38>
    2d50:	mov	w23, wzr
    2d54:	b	2d24 <_ZN5clang7tooling20applyAllReplacementsERKNS0_12ReplacementsERNS_8RewriterE+0x50>
    2d58:	mov	w23, #0x1                   	// #1
    2d5c:	and	w0, w23, #0x1
    2d60:	ldp	x20, x19, [sp, #48]
    2d64:	ldp	x22, x21, [sp, #32]
    2d68:	ldr	x23, [sp, #16]
    2d6c:	ldp	x29, x30, [sp], #64
    2d70:	ret

0000000000002d74 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE>:
    2d74:	stp	x29, x30, [sp, #-96]!
    2d78:	stp	x28, x27, [sp, #16]
    2d7c:	stp	x26, x25, [sp, #32]
    2d80:	stp	x24, x23, [sp, #48]
    2d84:	stp	x22, x21, [sp, #64]
    2d88:	stp	x20, x19, [sp, #80]
    2d8c:	mov	x29, sp
    2d90:	sub	sp, sp, #0xd50
    2d94:	ldr	x9, [x2, #40]
    2d98:	mov	x22, x1
    2d9c:	mov	x23, x0
    2da0:	mov	x19, x8
    2da4:	cbz	x9, 2f48 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x1d4>
    2da8:	mov	w0, #0x40                  	// #64
    2dac:	mov	x21, x2
    2db0:	bl	0 <_Znwm>
    2db4:	mov	w1, #0x1                   	// #1
    2db8:	mov	x26, x0
    2dbc:	bl	0 <_ZN4llvm3vfs18InMemoryFileSystemC1Eb>
    2dc0:	add	x25, x26, #0x8
    2dc4:	ldxr	w8, [x25]
    2dc8:	add	w8, w8, #0x1
    2dcc:	stxr	w9, w8, [x25]
    2dd0:	cbnz	w9, 2dc4 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x50>
    2dd4:	add	x8, sp, #0x510
    2dd8:	movi	v0.2d, #0x0
    2ddc:	add	x20, x8, #0x10
    2de0:	str	q0, [sp, #1296]
    2de4:	str	q0, [sp, #1312]
    2de8:	strb	wzr, [sp, #1312]
    2dec:	str	x20, [sp, #1296]
    2df0:	str	xzr, [sp, #1304]
    2df4:	str	x26, [sp, #2728]
    2df8:	ldxr	w8, [x25]
    2dfc:	add	w8, w8, #0x1
    2e00:	stxr	w9, w8, [x25]
    2e04:	cbnz	w9, 2df8 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x84>
    2e08:	add	x0, sp, #0xab0
    2e0c:	add	x1, sp, #0x510
    2e10:	add	x2, sp, #0xaa8
    2e14:	bl	0 <_ZN5clang11FileManagerC1ERKNS_17FileSystemOptionsEN4llvm18IntrusiveRefCntPtrINS4_3vfs10FileSystemEEE>
    2e18:	ldr	x8, [sp, #2728]
    2e1c:	cbz	x8, 2e50 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0xdc>
    2e20:	add	x0, x8, #0x8
    2e24:	ldaxr	w8, [x0]
    2e28:	sub	w9, w8, #0x1
    2e2c:	stlxr	w10, w9, [x0]
    2e30:	cbnz	w10, 2e24 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0xb0>
    2e34:	cmp	w8, #0x0
    2e38:	b.le	341c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x6a8>
    2e3c:	cmp	w8, #0x1
    2e40:	b.ne	2e50 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0xdc>  // b.any
    2e44:	ldr	x8, [x0, #-8]!
    2e48:	ldr	x8, [x8, #8]
    2e4c:	blr	x8
    2e50:	ldr	x0, [sp, #1296]
    2e54:	cmp	x0, x20
    2e58:	b.eq	2e60 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0xec>  // b.none
    2e5c:	bl	0 <_ZdlPv>
    2e60:	mov	w0, #0x10                  	// #16
    2e64:	bl	0 <_Znwm>
    2e68:	mov	x24, x0
    2e6c:	bl	0 <_ZN5clang13DiagnosticIDsC1Ev>
    2e70:	ldr	w8, [x24]
    2e74:	mov	w0, #0xb8                  	// #184
    2e78:	str	x24, [sp, #1288]
    2e7c:	add	w8, w8, #0x1
    2e80:	str	w8, [x24]
    2e84:	bl	0 <_Znwm>
    2e88:	mov	x8, x0
    2e8c:	mov	x9, x0
    2e90:	movi	v0.2d, #0x0
    2e94:	adrp	x12, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    2e98:	strb	wzr, [x8, #64]!
    2e9c:	stp	x8, xzr, [x0, #48]
    2ea0:	strb	wzr, [x9, #96]!
    2ea4:	stp	q0, q0, [x0, #112]
    2ea8:	stp	q0, q0, [x0, #144]
    2eac:	ldr	d0, [x12]
    2eb0:	mov	x11, #0x32                  	// #50
    2eb4:	mov	w10, #0x8                   	// #8
    2eb8:	movk	x11, #0x1, lsl #32
    2ebc:	mov	x8, #0xa                   	// #10
    2ec0:	movk	x8, #0xa, lsl #32
    2ec4:	stp	x11, x10, [x0, #24]
    2ec8:	mov	x10, #0x600000000           	// #25769803776
    2ecc:	stp	x10, x8, [x0, #8]
    2ed0:	str	xzr, [x0, #176]
    2ed4:	stp	x9, xzr, [x0, #80]
    2ed8:	strb	wzr, [x0, #40]
    2edc:	str	x0, [sp, #1280]
    2ee0:	str	d0, [x0]
    2ee4:	add	x0, sp, #0x510
    2ee8:	add	x1, sp, #0x508
    2eec:	add	x2, sp, #0x500
    2ef0:	mov	w4, #0x1                   	// #1
    2ef4:	mov	x3, xzr
    2ef8:	bl	0 <_ZN5clang17DiagnosticsEngineC1EN4llvm18IntrusiveRefCntPtrINS_13DiagnosticIDsEEENS2_INS_17DiagnosticOptionsEEEPNS_18DiagnosticConsumerEb>
    2efc:	ldr	x24, [sp, #1280]
    2f00:	cbz	x24, 2f18 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x1a4>
    2f04:	ldr	w8, [x24]
    2f08:	cbz	w8, 349c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x728>
    2f0c:	subs	w8, w8, #0x1
    2f10:	str	w8, [x24]
    2f14:	b.eq	2f9c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x228>  // b.none
    2f18:	ldr	x24, [sp, #1288]
    2f1c:	cbz	x24, 2fb4 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x240>
    2f20:	ldr	w8, [x24]
    2f24:	cbz	w8, 34bc <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x748>
    2f28:	subs	w8, w8, #0x1
    2f2c:	str	w8, [x24]
    2f30:	b.ne	2fb4 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x240>  // b.any
    2f34:	mov	x0, x24
    2f38:	bl	0 <_ZN5clang13DiagnosticIDsD1Ev>
    2f3c:	mov	x0, x24
    2f40:	bl	0 <_ZdlPv>
    2f44:	b	2fb4 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x240>
    2f48:	add	x8, sp, #0x510
    2f4c:	add	x20, x8, #0x10
    2f50:	str	x20, [sp, #1296]
    2f54:	cbz	x23, 336c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x5f8>
    2f58:	cmp	x22, #0x10
    2f5c:	mov	x0, x20
    2f60:	str	x22, [sp, #2736]
    2f64:	b.cc	2f84 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x210>  // b.lo, b.ul, b.last
    2f68:	add	x0, sp, #0x510
    2f6c:	add	x1, sp, #0xab0
    2f70:	mov	x2, xzr
    2f74:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    2f78:	ldr	x8, [sp, #2736]
    2f7c:	str	x0, [sp, #1296]
    2f80:	str	x8, [sp, #1312]
    2f84:	cbz	x22, 3388 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x614>
    2f88:	cmp	x22, #0x1
    2f8c:	b.ne	337c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x608>  // b.any
    2f90:	ldrb	w8, [x23]
    2f94:	strb	w8, [x0]
    2f98:	b	3388 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x614>
    2f9c:	mov	x0, x24
    2fa0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    2fa4:	mov	x0, x24
    2fa8:	bl	0 <_ZdlPv>
    2fac:	ldr	x24, [sp, #1288]
    2fb0:	cbnz	x24, 2f20 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x1ac>
    2fb4:	add	x0, sp, #0x2c0
    2fb8:	add	x1, sp, #0x510
    2fbc:	add	x2, sp, #0xab0
    2fc0:	mov	w3, wzr
    2fc4:	add	x20, sp, #0x2c0
    2fc8:	bl	0 <_ZN5clang13SourceManagerC1ERNS_17DiagnosticsEngineERNS_11FileManagerEb>
    2fcc:	add	x0, sp, #0x60
    2fd0:	add	x24, sp, #0x60
    2fd4:	bl	0 <_ZN5clang11LangOptionsC1Ev>
    2fd8:	add	x8, sp, #0x280
    2fdc:	add	x8, x8, #0x18
    2fe0:	add	x0, sp, #0x60
    2fe4:	str	x20, [sp, #640]
    2fe8:	str	x24, [sp, #648]
    2fec:	str	wzr, [sp, #664]
    2ff0:	str	xzr, [sp, #672]
    2ff4:	str	x8, [sp, #680]
    2ff8:	str	x8, [sp, #688]
    2ffc:	str	xzr, [sp, #696]
    3000:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    3004:	adrp	x2, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3008:	mov	w8, #0x103                 	// #259
    300c:	add	x2, x2, #0x0
    3010:	strh	w8, [sp, #112]
    3014:	add	x8, sp, #0x58
    3018:	mov	w3, #0x7                   	// #7
    301c:	mov	w4, #0x1                   	// #1
    3020:	mov	x0, x23
    3024:	mov	x1, x22
    3028:	stp	x2, xzr, [sp, #96]
    302c:	bl	0 <_ZN4llvm12MemoryBuffer12getMemBufferENS_9StringRefES1_b>
    3030:	add	x1, sp, #0x60
    3034:	add	x3, sp, #0x58
    3038:	mov	x0, x26
    303c:	mov	x2, xzr
    3040:	mov	x4, xzr
    3044:	mov	x5, xzr
    3048:	mov	x6, xzr
    304c:	mov	x7, xzr
    3050:	bl	0 <_ZN4llvm3vfs18InMemoryFileSystem7addFileERKNS_5TwineElSt10unique_ptrINS_12MemoryBufferESt14default_deleteIS6_EENS_8OptionalIjEESB_NSA_INS_3sys2fs9file_typeEEENSA_INSD_5permsEEE>
    3054:	ldr	x0, [sp, #88]
    3058:	cbz	x0, 3068 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x2f4>
    305c:	ldr	x8, [x0]
    3060:	ldr	x8, [x8, #8]
    3064:	blr	x8
    3068:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    306c:	add	x1, x1, #0x0
    3070:	add	x8, sp, #0x60
    3074:	add	x0, sp, #0xab0
    3078:	mov	w2, #0x7                   	// #7
    307c:	mov	w4, #0x1                   	// #1
    3080:	mov	w3, wzr
    3084:	str	xzr, [sp, #88]
    3088:	bl	0 <_ZN5clang11FileManager7getFileEN4llvm9StringRefEbb>
    308c:	ldrb	w8, [sp, #112]
    3090:	tbnz	w8, #0, 343c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x6c8>
    3094:	ldr	x22, [sp, #96]
    3098:	cbz	x22, 345c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x6e8>
    309c:	add	x0, sp, #0x2c0
    30a0:	mov	x1, x22
    30a4:	mov	w2, wzr
    30a8:	bl	0 <_ZN5clang13SourceManager23getOrCreateContentCacheEPKNS_9FileEntryEb>
    30ac:	cbz	x0, 347c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x708>
    30b0:	str	x26, [sp, #8]
    30b4:	ldp	x2, x3, [x22]
    30b8:	mov	x1, x0
    30bc:	add	x0, sp, #0x2c0
    30c0:	mov	x4, xzr
    30c4:	mov	w5, wzr
    30c8:	mov	w6, wzr
    30cc:	mov	w7, wzr
    30d0:	bl	0 <_ZN5clang13SourceManager12createFileIDEPKNS_6SrcMgr12ContentCacheEN4llvm9StringRefENS_14SourceLocationENS1_18CharacteristicKindEij>
    30d4:	ldr	x26, [x21, #24]
    30d8:	add	x22, x21, #0x8
    30dc:	str	x0, [sp]
    30e0:	cmp	x26, x22
    30e4:	b.eq	324c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x4d8>  // b.none
    30e8:	adrp	x10, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    30ec:	ldr	x10, [x10]
    30f0:	add	x8, sp, #0x60
    30f4:	add	x9, sp, #0x10
    30f8:	add	x27, x8, #0x10
    30fc:	add	x28, x8, #0x38
    3100:	add	x21, x9, #0x38
    3104:	add	x20, x9, #0x10
    3108:	add	x23, x10, #0x10
    310c:	mov	x0, x22
    3110:	bl	0 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>
    3114:	ldp	w3, w4, [x0, #64]
    3118:	ldp	x5, x6, [x0, #72]
    311c:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3120:	add	x0, sp, #0x10
    3124:	mov	w2, #0x7                   	// #7
    3128:	add	x1, x1, #0x0
    312c:	bl	20 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>
    3130:	add	x0, sp, #0x10
    3134:	add	x1, sp, #0x280
    3138:	bl	678 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE>
    313c:	tbz	w0, #0, 3180 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x40c>
    3140:	mov	w24, wzr
    3144:	ldr	x0, [sp, #56]
    3148:	cmp	x0, x21
    314c:	b.eq	3154 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x3e0>  // b.none
    3150:	bl	0 <_ZdlPv>
    3154:	ldr	x0, [sp, #16]
    3158:	cmp	x0, x20
    315c:	b.eq	3164 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x3f0>  // b.none
    3160:	bl	0 <_ZdlPv>
    3164:	cbnz	w24, 3310 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x59c>
    3168:	mov	x0, x22
    316c:	bl	0 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>
    3170:	mov	x22, x0
    3174:	cmp	x0, x26
    3178:	b.ne	310c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x398>  // b.any
    317c:	b	324c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x4d8>
    3180:	mov	w0, #0xb0                  	// #176
    3184:	bl	0 <_Znwm>
    3188:	mov	x24, x0
    318c:	add	x0, sp, #0x60
    3190:	add	x1, sp, #0x10
    3194:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    3198:	ldr	x8, [sp, #96]
    319c:	add	x9, x24, #0x70
    31a0:	str	x23, [x24]
    31a4:	str	wzr, [x24, #8]
    31a8:	cmp	x8, x27
    31ac:	strb	wzr, [x24, #16]
    31b0:	strb	wzr, [x24, #88]
    31b4:	str	x9, [x24, #96]
    31b8:	b.eq	31cc <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x458>  // b.none
    31bc:	ldr	x9, [sp, #112]
    31c0:	str	x8, [x24, #96]
    31c4:	str	x9, [x24, #112]
    31c8:	b	31d4 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x460>
    31cc:	ldr	q0, [x27]
    31d0:	str	q0, [x9]
    31d4:	ldp	x11, x8, [sp, #128]
    31d8:	ldr	x10, [sp, #104]
    31dc:	add	x9, x24, #0x98
    31e0:	stp	x27, xzr, [sp, #96]
    31e4:	cmp	x8, x28
    31e8:	strb	wzr, [sp, #112]
    31ec:	str	x10, [x24, #104]
    31f0:	stp	x11, x9, [x24, #128]
    31f4:	b.eq	3208 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x494>  // b.none
    31f8:	ldr	x9, [sp, #152]
    31fc:	str	x8, [x24, #136]
    3200:	str	x9, [x24, #152]
    3204:	b	3210 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x49c>
    3208:	ldr	q0, [x28]
    320c:	str	q0, [x9]
    3210:	ldr	x8, [sp, #144]
    3214:	ldrb	w9, [x19, #32]
    3218:	mov	w10, #0x1                   	// #1
    321c:	strb	w10, [x24, #168]
    3220:	str	x8, [x24, #144]
    3224:	orr	w9, w9, #0x3
    3228:	ands	x8, x24, #0xfffffffffffffffe
    322c:	strb	w9, [x19, #32]
    3230:	b.eq	33fc <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x688>  // b.none
    3234:	mov	w24, #0x1                   	// #1
    3238:	str	x8, [x19]
    323c:	ldr	x0, [sp, #56]
    3240:	cmp	x0, x21
    3244:	b.ne	3150 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x3dc>  // b.any
    3248:	b	3154 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x3e0>
    324c:	ldr	x8, [sp]
    3250:	strb	wzr, [sp, #32]
    3254:	stp	xzr, xzr, [sp, #112]
    3258:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
    325c:	ldr	x10, [x10]
    3260:	and	x1, x8, #0xffffffff
    3264:	add	x8, sp, #0x10
    3268:	mov	w9, #0x1                   	// #1
    326c:	add	x20, x8, #0x10
    3270:	str	w9, [sp, #128]
    3274:	add	x9, x10, #0x10
    3278:	add	x0, sp, #0x280
    327c:	stp	x20, xzr, [sp, #16]
    3280:	stp	x9, xzr, [sp, #96]
    3284:	str	x8, [sp, #136]
    3288:	bl	0 <_ZN5clang8Rewriter13getEditBufferENS_6FileIDE>
    328c:	add	x1, sp, #0x60
    3290:	bl	0 <_ZNK5clang13RewriteBuffer5writeERN4llvm11raw_ostreamE>
    3294:	ldr	x8, [sp, #120]
    3298:	ldr	x9, [sp, #104]
    329c:	cmp	x8, x9
    32a0:	b.eq	32ac <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x538>  // b.none
    32a4:	add	x0, sp, #0x60
    32a8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    32ac:	ldrb	w10, [x19, #32]
    32b0:	ldr	x8, [sp, #16]
    32b4:	add	x9, x19, #0x10
    32b8:	str	x9, [x19]
    32bc:	and	w10, w10, #0xfc
    32c0:	cmp	x8, x20
    32c4:	orr	w10, w10, #0x2
    32c8:	strb	w10, [x19, #32]
    32cc:	b.eq	32e0 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x56c>  // b.none
    32d0:	ldr	x9, [sp, #32]
    32d4:	str	x8, [x19]
    32d8:	str	x9, [x19, #16]
    32dc:	b	32e8 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x574>
    32e0:	ldr	q0, [x20]
    32e4:	str	q0, [x9]
    32e8:	ldr	x8, [sp, #24]
    32ec:	add	x0, sp, #0x60
    32f0:	stp	x20, xzr, [sp, #16]
    32f4:	strb	wzr, [sp, #32]
    32f8:	str	x8, [x19, #8]
    32fc:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    3300:	ldr	x0, [sp, #16]
    3304:	cmp	x0, x20
    3308:	b.eq	3310 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x59c>  // b.none
    330c:	bl	0 <_ZdlPv>
    3310:	ldr	x1, [sp, #672]
    3314:	add	x8, sp, #0x280
    3318:	add	x0, x8, #0x10
    331c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    3320:	add	x0, sp, #0x2c0
    3324:	bl	0 <_ZN5clang13SourceManagerD1Ev>
    3328:	add	x0, sp, #0x510
    332c:	bl	0 <_ZN5clang17DiagnosticsEngineD1Ev>
    3330:	add	x0, sp, #0xab0
    3334:	bl	0 <_ZN5clang11FileManagerD1Ev>
    3338:	ldaxr	w8, [x25]
    333c:	sub	w9, w8, #0x1
    3340:	stlxr	w10, w9, [x25]
    3344:	cbnz	w10, 3338 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x5c4>
    3348:	ldr	x0, [sp, #8]
    334c:	cmp	w8, #0x0
    3350:	b.le	341c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x6a8>
    3354:	cmp	w8, #0x1
    3358:	b.ne	33dc <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x668>  // b.any
    335c:	ldr	x8, [x0]
    3360:	ldr	x8, [x8, #8]
    3364:	blr	x8
    3368:	b	33dc <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x668>
    336c:	str	xzr, [sp, #1304]
    3370:	strb	wzr, [sp, #1312]
    3374:	mov	x8, x20
    3378:	b	339c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x628>
    337c:	mov	x1, x23
    3380:	mov	x2, x22
    3384:	bl	0 <memcpy>
    3388:	ldr	x8, [sp, #2736]
    338c:	ldr	x9, [sp, #1296]
    3390:	str	x8, [sp, #1304]
    3394:	strb	wzr, [x9, x8]
    3398:	ldr	x8, [sp, #1296]
    339c:	ldrb	w10, [x19, #32]
    33a0:	add	x9, x19, #0x10
    33a4:	cmp	x8, x20
    33a8:	str	x9, [x19]
    33ac:	and	w10, w10, #0xfc
    33b0:	orr	w10, w10, #0x2
    33b4:	strb	w10, [x19, #32]
    33b8:	b.eq	33cc <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x658>  // b.none
    33bc:	ldr	x9, [sp, #1312]
    33c0:	str	x8, [x19]
    33c4:	str	x9, [x19, #16]
    33c8:	b	33d4 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x660>
    33cc:	ldr	q0, [x20]
    33d0:	str	q0, [x9]
    33d4:	ldr	x8, [sp, #1304]
    33d8:	str	x8, [x19, #8]
    33dc:	add	sp, sp, #0xd50
    33e0:	ldp	x20, x19, [sp, #80]
    33e4:	ldp	x22, x21, [sp, #64]
    33e8:	ldp	x24, x23, [sp, #48]
    33ec:	ldp	x26, x25, [sp, #32]
    33f0:	ldp	x28, x27, [sp, #16]
    33f4:	ldp	x29, x30, [sp], #96
    33f8:	ret
    33fc:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3400:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3404:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3408:	add	x0, x0, #0x0
    340c:	add	x1, x1, #0x0
    3410:	add	x3, x3, #0x0
    3414:	mov	w2, #0x1ce                 	// #462
    3418:	bl	0 <__assert_fail>
    341c:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3420:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3424:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3428:	add	x0, x0, #0x0
    342c:	add	x1, x1, #0x0
    3430:	add	x3, x3, #0x0
    3434:	mov	w2, #0x62                  	// #98
    3438:	bl	0 <__assert_fail>
    343c:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3440:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3444:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3448:	add	x0, x0, #0x0
    344c:	add	x1, x1, #0x0
    3450:	add	x3, x3, #0x0
    3454:	mov	w2, #0xf3                  	// #243
    3458:	bl	0 <__assert_fail>
    345c:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3460:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3464:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3468:	add	x0, x0, #0x0
    346c:	add	x1, x1, #0x0
    3470:	add	x3, x3, #0x0
    3474:	mov	w2, #0x342                 	// #834
    3478:	bl	0 <__assert_fail>
    347c:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3480:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3484:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3488:	add	x0, x0, #0x0
    348c:	add	x1, x1, #0x0
    3490:	add	x3, x3, #0x0
    3494:	mov	w2, #0x345                 	// #837
    3498:	bl	0 <__assert_fail>
    349c:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    34a0:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    34a4:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    34a8:	add	x0, x0, #0x0
    34ac:	add	x1, x1, #0x0
    34b0:	add	x3, x3, #0x0
    34b4:	mov	w2, #0x50                  	// #80
    34b8:	bl	0 <__assert_fail>
    34bc:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    34c0:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    34c4:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    34c8:	add	x0, x0, #0x0
    34cc:	add	x1, x1, #0x0
    34d0:	add	x3, x3, #0x0
    34d4:	mov	w2, #0x50                  	// #80
    34d8:	bl	0 <__assert_fail>

00000000000034dc <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE>:
    34dc:	sub	sp, sp, #0x140
    34e0:	stp	x29, x30, [sp, #224]
    34e4:	stp	x28, x27, [sp, #240]
    34e8:	stp	x26, x25, [sp, #256]
    34ec:	stp	x24, x23, [sp, #272]
    34f0:	stp	x22, x21, [sp, #288]
    34f4:	stp	x20, x19, [sp, #304]
    34f8:	add	x29, sp, #0xe0
    34fc:	adrp	x9, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3500:	ldr	d0, [x9]
    3504:	mov	x19, x8
    3508:	add	x25, sp, #0x18
    350c:	str	wzr, [x8, #8]!
    3510:	stp	xzr, x8, [x8, #8]
    3514:	stp	x8, xzr, [x8, #24]
    3518:	add	x8, x25, #0x28
    351c:	stp	xzr, x8, [sp, #24]
    3520:	str	x8, [sp, #40]
    3524:	str	d0, [sp, #48]
    3528:	str	wzr, [sp, #56]
    352c:	ldr	x21, [x1, #24]
    3530:	add	x26, x1, #0x8
    3534:	cmp	x21, x26
    3538:	b.eq	37d4 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x2f8>  // b.none
    353c:	adrp	x22, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3540:	adrp	x23, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3544:	mov	x20, x0
    3548:	add	x22, x22, #0x0
    354c:	add	x23, x23, #0x0
    3550:	mov	w27, #0x2068                	// #8296
    3554:	b	3588 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0xac>
    3558:	ldur	x9, [x23, #5]
    355c:	ldr	x10, [x23]
    3560:	stur	x9, [x8, #5]
    3564:	str	x10, [x8]
    3568:	ldr	x8, [x0, #24]
    356c:	add	x8, x8, #0xd
    3570:	str	x8, [x0, #24]
    3574:	mov	x0, x21
    3578:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    357c:	mov	x21, x0
    3580:	cmp	x0, x26
    3584:	b.eq	37c4 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x2e8>  // b.none
    3588:	mov	x24, x21
    358c:	ldr	x1, [x24, #32]!
    3590:	mov	x8, sp
    3594:	mov	w4, #0x1                   	// #1
    3598:	mov	x0, x20
    359c:	ldr	x2, [x24, #8]
    35a0:	mov	w3, wzr
    35a4:	bl	0 <_ZN5clang11FileManager7getFileEN4llvm9StringRefEbb>
    35a8:	ldrb	w8, [sp, #16]
    35ac:	tbnz	w8, #0, 3650 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x174>
    35b0:	ldp	x9, x8, [sp, #32]
    35b4:	ldr	x1, [sp]
    35b8:	cmp	x8, x9
    35bc:	b.eq	36b4 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x1d8>  // b.none
    35c0:	add	x0, sp, #0x18
    35c4:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
    35c8:	and	x8, x1, #0xff
    35cc:	ldp	x10, x9, [sp, #32]
    35d0:	add	x11, x25, #0x1c
    35d4:	add	x12, x25, #0x18
    35d8:	cmp	x9, x10
    35dc:	csel	x10, x11, x12, eq  // eq = none
    35e0:	ldr	w10, [x10]
    35e4:	add	x9, x9, x10, lsl #3
    35e8:	cmp	x9, x0
    35ec:	b.cc	37f4 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x318>  // b.lo, b.ul, b.last
    35f0:	b.eq	360c <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x130>  // b.none
    35f4:	ldr	x10, [x0]
    35f8:	cmn	x10, #0x2
    35fc:	b.cc	360c <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x130>  // b.lo, b.ul, b.last
    3600:	add	x0, x0, #0x8
    3604:	cmp	x9, x0
    3608:	b.ne	35f4 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x118>  // b.any
    360c:	cbz	x8, 3574 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x98>
    3610:	mov	x0, x19
    3614:	mov	x1, x24
    3618:	add	x28, x21, #0x40
    361c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    3620:	cmp	x0, x28
    3624:	b.eq	3574 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x98>  // b.none
    3628:	ldr	x1, [x0, #16]
    362c:	ldr	x8, [x0, #32]
    3630:	mov	x24, x0
    3634:	stur	x0, [x29, #-16]
    3638:	stp	x1, x8, [x29, #-32]
    363c:	cbz	x1, 3744 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x268>
    3640:	str	xzr, [x1, #8]
    3644:	ldr	x8, [x8, #16]
    3648:	cbnz	x8, 3748 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x26c>
    364c:	b	374c <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x270>
    3650:	bl	0 <_ZN4llvm4errsEv>
    3654:	ldp	x9, x8, [x0, #16]
    3658:	sub	x9, x9, x8
    365c:	cmp	x9, #0x9
    3660:	b.hi	3674 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x198>  // b.pmore
    3664:	mov	w2, #0xa                   	// #10
    3668:	mov	x1, x22
    366c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3670:	b	368c <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x1b0>
    3674:	ldr	x9, [x22]
    3678:	strh	w27, [x8, #8]
    367c:	str	x9, [x8]
    3680:	ldr	x8, [x0, #24]
    3684:	add	x8, x8, #0xa
    3688:	str	x8, [x0, #24]
    368c:	ldp	x1, x2, [x21, #32]
    3690:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3694:	ldp	x9, x8, [x0, #16]
    3698:	sub	x9, x9, x8
    369c:	cmp	x9, #0xc
    36a0:	b.hi	3558 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x7c>  // b.pmore
    36a4:	mov	w2, #0xd                   	// #13
    36a8:	mov	x1, x23
    36ac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    36b0:	b	3574 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x98>
    36b4:	ldr	w9, [sp, #52]
    36b8:	cbz	w9, 3710 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x234>
    36bc:	mov	x0, xzr
    36c0:	lsl	x10, x9, #3
    36c4:	mov	x11, x8
    36c8:	ldr	x12, [x11]
    36cc:	cmp	x12, x1
    36d0:	b.eq	37b8 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x2dc>  // b.none
    36d4:	cmn	x12, #0x2
    36d8:	csel	x0, x11, x0, eq  // eq = none
    36dc:	subs	x10, x10, #0x8
    36e0:	add	x11, x11, #0x8
    36e4:	b.ne	36c8 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x1ec>  // b.any
    36e8:	cbz	x0, 3710 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x234>
    36ec:	str	x1, [x0]
    36f0:	ldr	w8, [sp, #56]
    36f4:	ldr	x9, [sp, #24]
    36f8:	sub	w8, w8, #0x1
    36fc:	add	x9, x9, #0x1
    3700:	str	w8, [sp, #56]
    3704:	str	x9, [sp, #24]
    3708:	mov	w8, #0x1                   	// #1
    370c:	b	35cc <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0xf0>
    3710:	ldr	w10, [sp, #48]
    3714:	cmp	w9, w10
    3718:	b.cs	35c0 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0xe4>  // b.hs, b.nlast
    371c:	add	w10, w9, #0x1
    3720:	lsl	x9, x9, #3
    3724:	str	w10, [sp, #52]
    3728:	str	x1, [x8, x9]
    372c:	ldp	x8, x10, [sp, #24]
    3730:	add	x8, x8, #0x1
    3734:	add	x0, x10, x9
    3738:	str	x8, [sp, #24]
    373c:	mov	w8, #0x1                   	// #1
    3740:	b	35cc <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0xf0>
    3744:	mov	x8, xzr
    3748:	stur	x8, [x29, #-24]
    374c:	add	x2, x24, #0x8
    3750:	stp	xzr, x2, [x24, #16]
    3754:	stp	x2, xzr, [x24, #32]
    3758:	ldr	x8, [x21, #80]
    375c:	cbz	x8, 37ac <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x2d0>
    3760:	sub	x3, x29, #0x20
    3764:	mov	x0, x24
    3768:	mov	x1, x8
    376c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    3770:	mov	x9, x0
    3774:	mov	x8, x9
    3778:	ldr	x9, [x9, #16]
    377c:	cbnz	x9, 3774 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x298>
    3780:	mov	x9, x0
    3784:	str	x8, [x24, #24]
    3788:	mov	x8, x9
    378c:	ldr	x9, [x9, #24]
    3790:	cbnz	x9, 3788 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x2ac>
    3794:	str	x8, [x24, #32]
    3798:	ldr	x8, [x21, #104]
    379c:	str	x0, [x24, #16]
    37a0:	str	x8, [x24, #40]
    37a4:	ldur	x24, [x29, #-16]
    37a8:	ldur	x1, [x29, #-32]
    37ac:	mov	x0, x24
    37b0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    37b4:	b	3574 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x98>
    37b8:	mov	x8, xzr
    37bc:	mov	x0, x11
    37c0:	b	35cc <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0xf0>
    37c4:	ldp	x8, x0, [sp, #32]
    37c8:	cmp	x0, x8
    37cc:	b.eq	37d4 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x2f8>  // b.none
    37d0:	bl	0 <free>
    37d4:	ldp	x20, x19, [sp, #304]
    37d8:	ldp	x22, x21, [sp, #288]
    37dc:	ldp	x24, x23, [sp, #272]
    37e0:	ldp	x26, x25, [sp, #256]
    37e4:	ldp	x28, x27, [sp, #240]
    37e8:	ldp	x29, x30, [sp, #224]
    37ec:	add	sp, sp, #0x140
    37f0:	ret
    37f4:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    37f8:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    37fc:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    3800:	add	x0, x0, #0x0
    3804:	add	x1, x1, #0x0
    3808:	add	x3, x3, #0x0
    380c:	mov	w2, #0xf8                  	// #248
    3810:	bl	0 <__assert_fail>

0000000000003814 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_>:
    3814:	stp	x29, x30, [sp, #-64]!
    3818:	str	x23, [sp, #16]
    381c:	stp	x22, x21, [sp, #32]
    3820:	stp	x20, x19, [sp, #48]
    3824:	mov	x29, sp
    3828:	sub	x8, x1, x0
    382c:	cmp	x8, #0x81
    3830:	b.lt	3bf0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x3dc>  // b.tstop
    3834:	mov	x19, x0
    3838:	mov	x20, x2
    383c:	and	x21, x3, #0xff
    3840:	add	x23, x0, #0x8
    3844:	b	3868 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x54>
    3848:	mov	x0, x22
    384c:	mov	x2, x20
    3850:	mov	x3, x21
    3854:	bl	3814 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_>
    3858:	sub	x8, x22, x19
    385c:	cmp	x8, #0x80
    3860:	mov	x1, x22
    3864:	b.le	3bf0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x3dc>
    3868:	cbz	x20, 39fc <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x1e8>
    386c:	lsr	x8, x8, #1
    3870:	and	x8, x8, #0x7ffffffffffffff8
    3874:	add	x8, x19, x8
    3878:	ldp	w10, w12, [x19, #8]
    387c:	ldp	w11, w14, [x8]
    3880:	ldp	w9, w13, [x1, #-8]
    3884:	sub	x20, x20, #0x1
    3888:	cmp	w12, w14
    388c:	cset	w15, cc  // cc = lo, ul, last
    3890:	cmp	w10, w11
    3894:	cset	w16, cc  // cc = lo, ul, last
    3898:	csel	w15, w15, w16, eq  // eq = none
    389c:	cmp	w15, #0x1
    38a0:	b.ne	38d4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0xc0>  // b.any
    38a4:	cmp	w14, w13
    38a8:	cset	w14, cc  // cc = lo, ul, last
    38ac:	cmp	w11, w9
    38b0:	cset	w11, cc  // cc = lo, ul, last
    38b4:	csel	w11, w14, w11, eq  // eq = none
    38b8:	cmp	w11, #0x1
    38bc:	b.ne	38fc <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0xe8>  // b.any
    38c0:	ldr	x9, [x8]
    38c4:	ldr	x10, [x19]
    38c8:	str	x9, [x19]
    38cc:	str	x10, [x8]
    38d0:	b	3974 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x160>
    38d4:	cmp	w12, w13
    38d8:	cset	w12, cc  // cc = lo, ul, last
    38dc:	cmp	w10, w9
    38e0:	cset	w10, cc  // cc = lo, ul, last
    38e4:	csel	w10, w12, w10, eq  // eq = none
    38e8:	cmp	w10, #0x1
    38ec:	b.ne	392c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x118>  // b.any
    38f0:	ldp	x9, x8, [x19]
    38f4:	stp	x8, x9, [x19]
    38f8:	b	3974 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x160>
    38fc:	cmp	w12, w13
    3900:	cset	w11, cc  // cc = lo, ul, last
    3904:	cmp	w10, w9
    3908:	ldr	x8, [x19]
    390c:	cset	w9, cc  // cc = lo, ul, last
    3910:	csel	w9, w11, w9, eq  // eq = none
    3914:	cmp	w9, #0x1
    3918:	b.ne	395c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x148>  // b.any
    391c:	ldur	x9, [x1, #-8]
    3920:	str	x9, [x19]
    3924:	stur	x8, [x1, #-8]
    3928:	b	3974 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x160>
    392c:	cmp	w14, w13
    3930:	cset	w10, cc  // cc = lo, ul, last
    3934:	cmp	w11, w9
    3938:	ldr	x9, [x19]
    393c:	cset	w11, cc  // cc = lo, ul, last
    3940:	csel	w10, w10, w11, eq  // eq = none
    3944:	cmp	w10, #0x1
    3948:	b.ne	3968 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x154>  // b.any
    394c:	ldur	x8, [x1, #-8]
    3950:	str	x8, [x19]
    3954:	stur	x9, [x1, #-8]
    3958:	b	3974 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x160>
    395c:	ldr	x9, [x19, #8]
    3960:	stp	x9, x8, [x19]
    3964:	b	3974 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x160>
    3968:	ldr	x10, [x8]
    396c:	str	x10, [x19]
    3970:	str	x9, [x8]
    3974:	mov	x8, x1
    3978:	mov	x22, x23
    397c:	ldp	w12, w11, [x22]
    3980:	ldp	w10, w9, [x19]
    3984:	cmp	w11, w9
    3988:	cset	w11, cc  // cc = lo, ul, last
    398c:	cmp	w12, w10
    3990:	cset	w12, cc  // cc = lo, ul, last
    3994:	csel	w11, w11, w12, eq  // eq = none
    3998:	cmp	w11, #0x1
    399c:	b.ne	39c0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x1ac>  // b.any
    39a0:	ldr	w11, [x22, #8]!
    39a4:	ldr	w12, [x22, #4]
    39a8:	cmp	w12, w9
    39ac:	cset	w12, cc  // cc = lo, ul, last
    39b0:	cmp	w11, w10
    39b4:	cset	w11, cc  // cc = lo, ul, last
    39b8:	csel	w11, w12, w11, eq  // eq = none
    39bc:	tbnz	w11, #0, 39a0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x18c>
    39c0:	ldr	w11, [x8, #-8]!
    39c4:	ldr	w12, [x8, #4]
    39c8:	cmp	w9, w12
    39cc:	cset	w12, cc  // cc = lo, ul, last
    39d0:	cmp	w10, w11
    39d4:	cset	w11, cc  // cc = lo, ul, last
    39d8:	csel	w11, w12, w11, eq  // eq = none
    39dc:	tbnz	w11, #0, 39c0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x1ac>
    39e0:	cmp	x8, x22
    39e4:	b.ls	3848 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x34>  // b.plast
    39e8:	ldr	x9, [x8]
    39ec:	ldr	x10, [x22]
    39f0:	str	x9, [x22], #8
    39f4:	str	x10, [x8]
    39f8:	b	397c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x168>
    39fc:	lsr	x9, x8, #3
    3a00:	sub	x10, x9, #0x2
    3a04:	sub	x11, x9, #0x1
    3a08:	cmp	x10, #0x0
    3a0c:	csel	x10, x11, x10, lt  // lt = tstop
    3a10:	cmp	x11, #0x0
    3a14:	csel	x9, x9, x11, lt  // lt = tstop
    3a18:	asr	x10, x10, #1
    3a1c:	asr	x9, x9, #1
    3a20:	tbnz	w8, #3, 3b28 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x314>
    3a24:	mov	w11, #0x1                   	// #1
    3a28:	bfi	x11, x10, #1, #63
    3a2c:	mov	x13, x10
    3a30:	b	3a44 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x230>
    3a34:	mov	x16, x14
    3a38:	str	x13, [x19, x16, lsl #3]
    3a3c:	sub	x13, x12, #0x1
    3a40:	cbz	x12, 3be8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x3d4>
    3a44:	mov	x12, x13
    3a48:	ldr	x13, [x19, x13, lsl #3]
    3a4c:	cmp	x9, x12
    3a50:	mov	x14, x12
    3a54:	b.le	3aac <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x298>
    3a58:	mov	x15, x12
    3a5c:	lsl	x14, x15, #1
    3a60:	mov	w16, #0x1                   	// #1
    3a64:	add	x14, x14, #0x2
    3a68:	bfi	x16, x15, #1, #63
    3a6c:	add	x17, x19, x14, lsl #3
    3a70:	add	x18, x19, x16, lsl #3
    3a74:	ldp	w17, w0, [x17]
    3a78:	ldp	w18, w2, [x18]
    3a7c:	cmp	w0, w2
    3a80:	cset	w0, cc  // cc = lo, ul, last
    3a84:	cmp	w17, w18
    3a88:	cset	w17, cc  // cc = lo, ul, last
    3a8c:	csel	w17, w0, w17, eq  // eq = none
    3a90:	cmp	w17, #0x0
    3a94:	csel	x14, x16, x14, ne  // ne = any
    3a98:	ldr	x16, [x19, x14, lsl #3]
    3a9c:	cmp	x14, x9
    3aa0:	str	x16, [x19, x15, lsl #3]
    3aa4:	mov	x15, x14
    3aa8:	b.lt	3a5c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x248>  // b.tstop
    3aac:	cmp	x14, x10
    3ab0:	b.ne	3ac0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x2ac>  // b.any
    3ab4:	ldr	x14, [x19, x11, lsl #3]
    3ab8:	str	x14, [x19, x10, lsl #3]
    3abc:	mov	x14, x11
    3ac0:	cmp	x14, x12
    3ac4:	b.le	3a34 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x220>
    3ac8:	lsr	x15, x13, #32
    3acc:	sub	x16, x14, #0x1
    3ad0:	cmp	x16, #0x0
    3ad4:	csel	x16, x14, x16, lt  // lt = tstop
    3ad8:	asr	x16, x16, #1
    3adc:	add	x17, x19, x16, lsl #3
    3ae0:	ldp	w17, w18, [x17]
    3ae4:	cmp	w18, w15
    3ae8:	cset	w18, cc  // cc = lo, ul, last
    3aec:	cmp	w17, w13
    3af0:	cset	w17, cc  // cc = lo, ul, last
    3af4:	csel	w17, w18, w17, eq  // eq = none
    3af8:	cmp	w17, #0x1
    3afc:	b.ne	3a34 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x220>  // b.any
    3b00:	ldr	x17, [x19, x16, lsl #3]
    3b04:	cmp	x16, x12
    3b08:	str	x17, [x19, x14, lsl #3]
    3b0c:	mov	x14, x16
    3b10:	b.gt	3acc <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x2b8>
    3b14:	b	3a38 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x224>
    3b18:	mov	x13, x12
    3b1c:	str	x10, [x19, x13, lsl #3]
    3b20:	sub	x10, x11, #0x1
    3b24:	cbz	x11, 3be8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x3d4>
    3b28:	mov	x11, x10
    3b2c:	ldr	x10, [x19, x10, lsl #3]
    3b30:	cmp	x9, x11
    3b34:	mov	x13, x11
    3b38:	b.le	3b1c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x308>
    3b3c:	mov	x12, x11
    3b40:	mov	x13, x12
    3b44:	lsl	x12, x12, #1
    3b48:	mov	w14, #0x1                   	// #1
    3b4c:	add	x12, x12, #0x2
    3b50:	bfi	x14, x13, #1, #63
    3b54:	add	x15, x19, x12, lsl #3
    3b58:	add	x16, x19, x14, lsl #3
    3b5c:	ldp	w15, w17, [x15]
    3b60:	ldp	w16, w18, [x16]
    3b64:	cmp	w17, w18
    3b68:	cset	w17, cc  // cc = lo, ul, last
    3b6c:	cmp	w15, w16
    3b70:	cset	w15, cc  // cc = lo, ul, last
    3b74:	csel	w15, w17, w15, eq  // eq = none
    3b78:	cmp	w15, #0x0
    3b7c:	csel	x12, x14, x12, ne  // ne = any
    3b80:	ldr	x14, [x19, x12, lsl #3]
    3b84:	cmp	x12, x9
    3b88:	str	x14, [x19, x13, lsl #3]
    3b8c:	b.lt	3b40 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x32c>  // b.tstop
    3b90:	cmp	x12, x11
    3b94:	b.le	3b18 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x304>
    3b98:	lsr	x14, x10, #32
    3b9c:	sub	x13, x12, #0x1
    3ba0:	cmp	x13, #0x0
    3ba4:	csel	x13, x12, x13, lt  // lt = tstop
    3ba8:	asr	x13, x13, #1
    3bac:	add	x15, x19, x13, lsl #3
    3bb0:	ldp	w15, w16, [x15]
    3bb4:	cmp	w16, w14
    3bb8:	cset	w16, cc  // cc = lo, ul, last
    3bbc:	cmp	w15, w10
    3bc0:	cset	w15, cc  // cc = lo, ul, last
    3bc4:	csel	w15, w16, w15, eq  // eq = none
    3bc8:	cmp	w15, #0x1
    3bcc:	b.ne	3b18 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x304>  // b.any
    3bd0:	ldr	x15, [x19, x13, lsl #3]
    3bd4:	cmp	x13, x11
    3bd8:	str	x15, [x19, x12, lsl #3]
    3bdc:	mov	x12, x13
    3be0:	b.gt	3b9c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x388>
    3be4:	b	3b1c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x308>
    3be8:	cmp	x8, #0x9
    3bec:	b.ge	3c14 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x400>  // b.tcont
    3bf0:	ldp	x20, x19, [sp, #48]
    3bf4:	ldp	x22, x21, [sp, #32]
    3bf8:	ldr	x23, [sp, #16]
    3bfc:	ldp	x29, x30, [sp], #64
    3c00:	ret
    3c04:	mov	x11, x10
    3c08:	cmp	x9, #0x8
    3c0c:	str	x8, [x19, x11, lsl #3]
    3c10:	b.le	3bf0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x3dc>
    3c14:	ldr	x8, [x1, #-8]!
    3c18:	ldr	x13, [x19]
    3c1c:	sub	x9, x1, x19
    3c20:	asr	x12, x9, #3
    3c24:	sub	x11, x12, #0x1
    3c28:	cmp	x11, #0x0
    3c2c:	csel	x10, x12, x11, lt  // lt = tstop
    3c30:	cmp	x9, #0x11
    3c34:	str	x13, [x1]
    3c38:	b.lt	3c9c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x488>  // b.tstop
    3c3c:	mov	x14, xzr
    3c40:	asr	x13, x10, #1
    3c44:	lsl	x10, x14, #1
    3c48:	mov	w15, #0x1                   	// #1
    3c4c:	add	x10, x10, #0x2
    3c50:	bfi	x15, x14, #1, #63
    3c54:	add	x16, x19, x10, lsl #3
    3c58:	add	x17, x19, x15, lsl #3
    3c5c:	ldp	w16, w18, [x16]
    3c60:	ldp	w17, w0, [x17]
    3c64:	cmp	w18, w0
    3c68:	cset	w18, cc  // cc = lo, ul, last
    3c6c:	cmp	w16, w17
    3c70:	cset	w16, cc  // cc = lo, ul, last
    3c74:	csel	w16, w18, w16, eq  // eq = none
    3c78:	cmp	w16, #0x0
    3c7c:	csel	x10, x15, x10, ne  // ne = any
    3c80:	ldr	x15, [x19, x10, lsl #3]
    3c84:	cmp	x10, x13
    3c88:	str	x15, [x19, x14, lsl #3]
    3c8c:	mov	x14, x10
    3c90:	b.lt	3c44 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x430>  // b.tstop
    3c94:	tbz	w9, #3, 3ca4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x490>
    3c98:	b	3ccc <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x4b8>
    3c9c:	mov	x10, xzr
    3ca0:	tbnz	w9, #3, 3ccc <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x4b8>
    3ca4:	sub	x12, x12, #0x2
    3ca8:	cmp	x12, #0x0
    3cac:	csel	x11, x11, x12, lt  // lt = tstop
    3cb0:	cmp	x10, x11, asr #1
    3cb4:	b.ne	3ccc <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x4b8>  // b.any
    3cb8:	mov	w11, #0x1                   	// #1
    3cbc:	bfi	x11, x10, #1, #63
    3cc0:	ldr	x12, [x19, x11, lsl #3]
    3cc4:	str	x12, [x19, x10, lsl #3]
    3cc8:	mov	x10, x11
    3ccc:	cmp	x10, #0x1
    3cd0:	b.lt	3c04 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x3f0>  // b.tstop
    3cd4:	lsr	x12, x8, #32
    3cd8:	sub	x11, x10, #0x1
    3cdc:	cmp	x11, #0x0
    3ce0:	csel	x11, x10, x11, lt  // lt = tstop
    3ce4:	asr	x11, x11, #1
    3ce8:	add	x13, x19, x11, lsl #3
    3cec:	ldp	w15, w14, [x13]
    3cf0:	cmp	w14, w12
    3cf4:	cset	w14, cc  // cc = lo, ul, last
    3cf8:	cmp	w15, w8
    3cfc:	cset	w15, cc  // cc = lo, ul, last
    3d00:	csel	w14, w14, w15, eq  // eq = none
    3d04:	cmp	w14, #0x1
    3d08:	b.ne	3c04 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x3f0>  // b.any
    3d0c:	ldr	x13, [x13]
    3d10:	cmp	x10, #0x2
    3d14:	str	x13, [x19, x10, lsl #3]
    3d18:	mov	x10, x11
    3d1c:	b.gt	3cd8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x4c4>
    3d20:	b	3c08 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x3f4>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x20
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldp	x8, x0, [x19, #16]
  2c:	sub	x8, x8, x0
  30:	cmp	x21, x8
  34:	b.ls	68 <_ZN4llvm11raw_ostreamlsEPKc+0x68>  // b.plast
  38:	mov	x0, x19
  3c:	mov	x1, x20
  40:	mov	x2, x21
  44:	ldp	x20, x19, [sp, #32]
  48:	ldr	x21, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x21, xzr
  58:	ldp	x8, x0, [x19, #16]
  5c:	sub	x8, x8, x0
  60:	cmp	x21, x8
  64:	b.hi	38 <_ZN4llvm11raw_ostreamlsEPKc+0x38>  // b.pmore
  68:	cbz	x21, 84 <_ZN4llvm11raw_ostreamlsEPKc+0x84>
  6c:	mov	x1, x20
  70:	mov	x2, x21
  74:	bl	0 <memcpy>
  78:	ldr	x8, [x19, #24]
  7c:	add	x8, x8, x21
  80:	str	x8, [x19, #24]
  84:	mov	x0, x19
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZN4llvm18raw_string_ostream3strB5cxx11Ev:

0000000000000000 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #24]
  10:	ldr	x9, [x0, #8]
  14:	mov	x19, x0
  18:	cmp	x8, x9
  1c:	b.eq	28 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev+0x28>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  28:	ldr	x0, [x19, #40]
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE:

0000000000000000 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #272]
  14:	and	w19, w1, #0x7fffffff
  18:	mov	w2, w19
  1c:	mov	x20, x0
  20:	mov	x1, x8
  24:	bl	0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  28:	tbz	w0, #0, 74 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0x74>
  2c:	ldr	w0, [x20, #272]
  30:	add	w8, w0, #0x1
  34:	cmp	w8, #0x1
  38:	strb	wzr, [x29, #28]
  3c:	b.ls	90 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0x90>  // b.plast
  40:	mov	w21, w0
  44:	tbnz	w21, #31, bc <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0xbc>
  48:	ldr	w8, [x20, #208]
  4c:	cmp	w8, w21
  50:	b.ls	f8 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0xf8>  // b.plast
  54:	ldr	x8, [x20, #200]
  58:	mov	w9, #0x28                  	// #40
  5c:	madd	x0, x21, x9, x8
  60:	ldr	w8, [x0]
  64:	and	w8, w8, #0x7fffffff
  68:	sub	w8, w19, w8
  6c:	lsl	x8, x8, #32
  70:	b	a8 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0xa8>
  74:	mov	x0, x20
  78:	mov	w1, w19
  7c:	bl	0 <_ZNK5clang13SourceManager13getFileIDSlowEj>
  80:	add	w8, w0, #0x1
  84:	cmp	w8, #0x1
  88:	strb	wzr, [x29, #28]
  8c:	b.hi	40 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0x40>  // b.pmore
  90:	mov	w8, #0x1                   	// #1
  94:	strb	w8, [x29, #28]
  98:	ldr	w8, [x20, #208]
  9c:	cbz	w8, d8 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0xd8>
  a0:	mov	x21, xzr
  a4:	mov	x8, xzr
  a8:	orr	x0, x8, x21
  ac:	ldp	x20, x19, [sp, #32]
  b0:	ldr	x21, [sp, #16]
  b4:	ldp	x29, x30, [sp], #48
  b8:	ret
  bc:	add	x2, x29, #0x1c
  c0:	mov	x0, x20
  c4:	mov	w1, w21
  c8:	bl	0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  cc:	ldrb	w8, [x29, #28]
  d0:	cbnz	w8, a0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0xa0>
  d4:	b	60 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0x60>
  d8:	adrp	x0, 0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  dc:	adrp	x1, 0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  e0:	adrp	x3, 0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x99                  	// #153
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x0, 0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  fc:	adrp	x1, 0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
 100:	adrp	x3, 0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x693                 	// #1683
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_:

0000000000000000 <_ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x22, x0
  1c:	cmp	x1, x2
  20:	str	xzr, [x22, #8]!
  24:	str	xzr, [x0]
  28:	stp	xzr, x22, [x0, #16]
  2c:	stp	x22, xzr, [x0, #32]
  30:	b.eq	c4 <_ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_+0xc4>  // b.none
  34:	mov	x19, x2
  38:	mov	x20, x1
  3c:	mov	x21, x0
  40:	b	88 <_ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_+0x88>
  44:	mov	w0, #0x68                  	// #104
  48:	bl	0 <_Znwm>
  4c:	mov	x25, x0
  50:	add	x0, x0, #0x20
  54:	mov	x1, x20
  58:	bl	0 <_ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_>
  5c:	and	w0, w24, #0x1
  60:	mov	x1, x25
  64:	mov	x2, x23
  68:	mov	x3, x22
  6c:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  70:	ldr	x8, [x21, #40]
  74:	add	x8, x8, #0x1
  78:	str	x8, [x21, #40]
  7c:	add	x20, x20, #0x48
  80:	cmp	x19, x20
  84:	b.eq	c4 <_ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_+0xc4>  // b.none
  88:	mov	x0, x21
  8c:	mov	x1, x22
  90:	mov	x2, x20
  94:	bl	0 <_ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_>
  98:	cbz	x1, 7c <_ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_+0x7c>
  9c:	mov	x23, x1
  a0:	mov	w24, #0x1                   	// #1
  a4:	cbnz	x0, 44 <_ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_+0x44>
  a8:	cmp	x22, x23
  ac:	b.eq	44 <_ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_+0x44>  // b.none
  b0:	add	x1, x23, #0x20
  b4:	mov	x0, x20
  b8:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  bc:	mov	w24, w0
  c0:	b	44 <_ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_+0x44>
  c4:	ldp	x20, x19, [sp, #64]
  c8:	ldp	x22, x21, [sp, #48]
  cc:	ldp	x24, x23, [sp, #32]
  d0:	ldr	x25, [sp, #16]
  d4:	ldp	x29, x30, [sp], #80
  d8:	ret

Disassembly of section .text._ZNK5clang7tooling12ReplacementseqERKS1_:

0000000000000000 <_ZNK5clang7tooling12ReplacementseqERKS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x8, [x0, #40]
  14:	ldr	x9, [x1, #40]
  18:	cmp	x8, x9
  1c:	b.ne	c0 <_ZNK5clang7tooling12ReplacementseqERKS1_+0xc0>  // b.any
  20:	ldr	x19, [x0, #24]
  24:	add	x21, x0, #0x8
  28:	cmp	x19, x21
  2c:	b.eq	d4 <_ZNK5clang7tooling12ReplacementseqERKS1_+0xd4>  // b.none
  30:	ldr	x20, [x1, #24]
  34:	b	58 <_ZNK5clang7tooling12ReplacementseqERKS1_+0x58>
  38:	mov	x0, x19
  3c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  40:	mov	x19, x0
  44:	mov	x0, x20
  48:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  4c:	cmp	x19, x21
  50:	mov	x20, x0
  54:	b.eq	d4 <_ZNK5clang7tooling12ReplacementseqERKS1_+0xd4>  // b.none
  58:	ldr	w8, [x19, #64]
  5c:	ldr	w9, [x20, #64]
  60:	cmp	w8, w9
  64:	b.ne	c0 <_ZNK5clang7tooling12ReplacementseqERKS1_+0xc0>  // b.any
  68:	ldr	w8, [x19, #68]
  6c:	ldr	w9, [x20, #68]
  70:	cmp	w8, w9
  74:	b.ne	c0 <_ZNK5clang7tooling12ReplacementseqERKS1_+0xc0>  // b.any
  78:	ldr	x2, [x19, #40]
  7c:	ldr	x8, [x20, #40]
  80:	cmp	x2, x8
  84:	b.ne	c0 <_ZNK5clang7tooling12ReplacementseqERKS1_+0xc0>  // b.any
  88:	cbz	x2, 9c <_ZNK5clang7tooling12ReplacementseqERKS1_+0x9c>
  8c:	ldr	x0, [x19, #32]
  90:	ldr	x1, [x20, #32]
  94:	bl	0 <bcmp>
  98:	cbnz	w0, c0 <_ZNK5clang7tooling12ReplacementseqERKS1_+0xc0>
  9c:	ldr	x2, [x19, #80]
  a0:	ldr	x8, [x20, #80]
  a4:	cmp	x2, x8
  a8:	b.ne	c0 <_ZNK5clang7tooling12ReplacementseqERKS1_+0xc0>  // b.any
  ac:	cbz	x2, 38 <_ZNK5clang7tooling12ReplacementseqERKS1_+0x38>
  b0:	ldr	x0, [x19, #72]
  b4:	ldr	x1, [x20, #72]
  b8:	bl	0 <bcmp>
  bc:	cbz	w0, 38 <_ZNK5clang7tooling12ReplacementseqERKS1_+0x38>
  c0:	mov	w0, wzr
  c4:	ldp	x20, x19, [sp, #32]
  c8:	ldr	x21, [sp, #16]
  cc:	ldp	x29, x30, [sp], #48
  d0:	ret
  d4:	mov	w0, #0x1                   	// #1
  d8:	ldp	x20, x19, [sp, #32]
  dc:	ldr	x21, [sp, #16]
  e0:	ldp	x29, x30, [sp], #48
  e4:	ret

Disassembly of section .text._ZN5clang11LangOptionsD2Ev:

0000000000000000 <_ZN5clang11LangOptionsD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #504]
  18:	add	x8, x19, #0x208
  1c:	cmp	x0, x8
  20:	b.eq	28 <_ZN5clang11LangOptionsD2Ev+0x28>  // b.none
  24:	bl	0 <_ZdlPv>
  28:	ldp	x20, x21, [x19, #480]
  2c:	cmp	x20, x21
  30:	b.ne	150 <_ZN5clang11LangOptionsD2Ev+0x150>  // b.any
  34:	cbz	x20, 40 <_ZN5clang11LangOptionsD2Ev+0x40>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	ldp	x20, x21, [x19, #456]
  44:	cmp	x20, x21
  48:	b.ne	170 <_ZN5clang11LangOptionsD2Ev+0x170>  // b.any
  4c:	cbz	x20, 58 <_ZN5clang11LangOptionsD2Ev+0x58>
  50:	mov	x0, x20
  54:	bl	0 <_ZdlPv>
  58:	ldp	x20, x21, [x19, #424]
  5c:	cmp	x20, x21
  60:	b.ne	190 <_ZN5clang11LangOptionsD2Ev+0x190>  // b.any
  64:	cbz	x20, 70 <_ZN5clang11LangOptionsD2Ev+0x70>
  68:	mov	x0, x20
  6c:	bl	0 <_ZdlPv>
  70:	ldp	x20, x21, [x19, #400]
  74:	cmp	x20, x21
  78:	b.ne	1b0 <_ZN5clang11LangOptionsD2Ev+0x1b0>  // b.any
  7c:	cbz	x20, 88 <_ZN5clang11LangOptionsD2Ev+0x88>
  80:	mov	x0, x20
  84:	bl	0 <_ZdlPv>
  88:	ldr	x0, [x19, #368]
  8c:	add	x8, x19, #0x180
  90:	cmp	x0, x8
  94:	b.eq	9c <_ZN5clang11LangOptionsD2Ev+0x9c>  // b.none
  98:	bl	0 <_ZdlPv>
  9c:	ldr	x0, [x19, #336]
  a0:	add	x8, x19, #0x160
  a4:	cmp	x0, x8
  a8:	b.eq	b0 <_ZN5clang11LangOptionsD2Ev+0xb0>  // b.none
  ac:	bl	0 <_ZdlPv>
  b0:	ldr	x0, [x19, #304]
  b4:	add	x8, x19, #0x140
  b8:	cmp	x0, x8
  bc:	b.eq	c4 <_ZN5clang11LangOptionsD2Ev+0xc4>  // b.none
  c0:	bl	0 <_ZdlPv>
  c4:	ldr	x0, [x19, #272]
  c8:	add	x8, x19, #0x120
  cc:	cmp	x0, x8
  d0:	b.eq	d8 <_ZN5clang11LangOptionsD2Ev+0xd8>  // b.none
  d4:	bl	0 <_ZdlPv>
  d8:	ldp	x20, x21, [x19, #224]
  dc:	cmp	x20, x21
  e0:	b.ne	1d0 <_ZN5clang11LangOptionsD2Ev+0x1d0>  // b.any
  e4:	cbz	x20, f0 <_ZN5clang11LangOptionsD2Ev+0xf0>
  e8:	mov	x0, x20
  ec:	bl	0 <_ZdlPv>
  f0:	ldp	x20, x21, [x19, #200]
  f4:	cmp	x20, x21
  f8:	b.ne	1f0 <_ZN5clang11LangOptionsD2Ev+0x1f0>  // b.any
  fc:	cbz	x20, 108 <_ZN5clang11LangOptionsD2Ev+0x108>
 100:	mov	x0, x20
 104:	bl	0 <_ZdlPv>
 108:	ldp	x20, x21, [x19, #176]
 10c:	cmp	x20, x21
 110:	b.ne	210 <_ZN5clang11LangOptionsD2Ev+0x210>  // b.any
 114:	cbz	x20, 120 <_ZN5clang11LangOptionsD2Ev+0x120>
 118:	mov	x0, x20
 11c:	bl	0 <_ZdlPv>
 120:	ldp	x20, x21, [x19, #152]
 124:	cmp	x20, x21
 128:	b.ne	230 <_ZN5clang11LangOptionsD2Ev+0x230>  // b.any
 12c:	cbz	x20, 2a0 <_ZN5clang11LangOptionsD2Ev+0x2a0>
 130:	mov	x0, x20
 134:	ldp	x20, x19, [sp, #32]
 138:	ldr	x21, [sp, #16]
 13c:	ldp	x29, x30, [sp], #48
 140:	b	0 <_ZdlPv>
 144:	add	x20, x20, #0x28
 148:	cmp	x20, x21
 14c:	b.eq	244 <_ZN5clang11LangOptionsD2Ev+0x244>  // b.none
 150:	ldr	x0, [x20], #16
 154:	cmp	x0, x20
 158:	b.eq	144 <_ZN5clang11LangOptionsD2Ev+0x144>  // b.none
 15c:	bl	0 <_ZdlPv>
 160:	b	144 <_ZN5clang11LangOptionsD2Ev+0x144>
 164:	add	x20, x20, #0x10
 168:	cmp	x20, x21
 16c:	b.eq	250 <_ZN5clang11LangOptionsD2Ev+0x250>  // b.none
 170:	ldr	x0, [x20], #16
 174:	cmp	x0, x20
 178:	b.eq	164 <_ZN5clang11LangOptionsD2Ev+0x164>  // b.none
 17c:	bl	0 <_ZdlPv>
 180:	b	164 <_ZN5clang11LangOptionsD2Ev+0x164>
 184:	add	x20, x20, #0x10
 188:	cmp	x20, x21
 18c:	b.eq	25c <_ZN5clang11LangOptionsD2Ev+0x25c>  // b.none
 190:	ldr	x0, [x20], #16
 194:	cmp	x0, x20
 198:	b.eq	184 <_ZN5clang11LangOptionsD2Ev+0x184>  // b.none
 19c:	bl	0 <_ZdlPv>
 1a0:	b	184 <_ZN5clang11LangOptionsD2Ev+0x184>
 1a4:	add	x20, x20, #0x10
 1a8:	cmp	x20, x21
 1ac:	b.eq	268 <_ZN5clang11LangOptionsD2Ev+0x268>  // b.none
 1b0:	ldr	x0, [x20], #16
 1b4:	cmp	x0, x20
 1b8:	b.eq	1a4 <_ZN5clang11LangOptionsD2Ev+0x1a4>  // b.none
 1bc:	bl	0 <_ZdlPv>
 1c0:	b	1a4 <_ZN5clang11LangOptionsD2Ev+0x1a4>
 1c4:	add	x20, x20, #0x10
 1c8:	cmp	x20, x21
 1cc:	b.eq	274 <_ZN5clang11LangOptionsD2Ev+0x274>  // b.none
 1d0:	ldr	x0, [x20], #16
 1d4:	cmp	x0, x20
 1d8:	b.eq	1c4 <_ZN5clang11LangOptionsD2Ev+0x1c4>  // b.none
 1dc:	bl	0 <_ZdlPv>
 1e0:	b	1c4 <_ZN5clang11LangOptionsD2Ev+0x1c4>
 1e4:	add	x20, x20, #0x10
 1e8:	cmp	x20, x21
 1ec:	b.eq	280 <_ZN5clang11LangOptionsD2Ev+0x280>  // b.none
 1f0:	ldr	x0, [x20], #16
 1f4:	cmp	x0, x20
 1f8:	b.eq	1e4 <_ZN5clang11LangOptionsD2Ev+0x1e4>  // b.none
 1fc:	bl	0 <_ZdlPv>
 200:	b	1e4 <_ZN5clang11LangOptionsD2Ev+0x1e4>
 204:	add	x20, x20, #0x10
 208:	cmp	x20, x21
 20c:	b.eq	28c <_ZN5clang11LangOptionsD2Ev+0x28c>  // b.none
 210:	ldr	x0, [x20], #16
 214:	cmp	x0, x20
 218:	b.eq	204 <_ZN5clang11LangOptionsD2Ev+0x204>  // b.none
 21c:	bl	0 <_ZdlPv>
 220:	b	204 <_ZN5clang11LangOptionsD2Ev+0x204>
 224:	add	x20, x20, #0x10
 228:	cmp	x20, x21
 22c:	b.eq	298 <_ZN5clang11LangOptionsD2Ev+0x298>  // b.none
 230:	ldr	x0, [x20], #16
 234:	cmp	x0, x20
 238:	b.eq	224 <_ZN5clang11LangOptionsD2Ev+0x224>  // b.none
 23c:	bl	0 <_ZdlPv>
 240:	b	224 <_ZN5clang11LangOptionsD2Ev+0x224>
 244:	ldr	x20, [x19, #480]
 248:	cbnz	x20, 38 <_ZN5clang11LangOptionsD2Ev+0x38>
 24c:	b	40 <_ZN5clang11LangOptionsD2Ev+0x40>
 250:	ldr	x20, [x19, #456]
 254:	cbnz	x20, 50 <_ZN5clang11LangOptionsD2Ev+0x50>
 258:	b	58 <_ZN5clang11LangOptionsD2Ev+0x58>
 25c:	ldr	x20, [x19, #424]
 260:	cbnz	x20, 68 <_ZN5clang11LangOptionsD2Ev+0x68>
 264:	b	70 <_ZN5clang11LangOptionsD2Ev+0x70>
 268:	ldr	x20, [x19, #400]
 26c:	cbnz	x20, 80 <_ZN5clang11LangOptionsD2Ev+0x80>
 270:	b	88 <_ZN5clang11LangOptionsD2Ev+0x88>
 274:	ldr	x20, [x19, #224]
 278:	cbnz	x20, e8 <_ZN5clang11LangOptionsD2Ev+0xe8>
 27c:	b	f0 <_ZN5clang11LangOptionsD2Ev+0xf0>
 280:	ldr	x20, [x19, #200]
 284:	cbnz	x20, 100 <_ZN5clang11LangOptionsD2Ev+0x100>
 288:	b	108 <_ZN5clang11LangOptionsD2Ev+0x108>
 28c:	ldr	x20, [x19, #176]
 290:	cbnz	x20, 118 <_ZN5clang11LangOptionsD2Ev+0x118>
 294:	b	120 <_ZN5clang11LangOptionsD2Ev+0x120>
 298:	ldr	x20, [x19, #152]
 29c:	cbnz	x20, 130 <_ZN5clang11LangOptionsD2Ev+0x130>
 2a0:	ldp	x20, x19, [sp, #32]
 2a4:	ldr	x21, [sp, #16]
 2a8:	ldp	x29, x30, [sp], #48
 2ac:	ret

Disassembly of section .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_:

0000000000000000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	ldr	x25, [x0, #16]
  24:	mov	x20, x1
  28:	mov	x19, x0
  2c:	add	x23, x0, #0x8
  30:	cbz	x25, e0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xe0>
  34:	str	x19, [sp, #8]
  38:	ldp	x22, x24, [x20]
  3c:	mov	w26, #0x7fffffff            	// #2147483647
  40:	mov	x27, #0xffffffff80000000    	// #-2147483648
  44:	mov	w28, #0x80000000            	// #-2147483648
  48:	mov	x21, x23
  4c:	b	74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x74>
  50:	tbnz	w0, #31, 68 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x68>
  54:	add	x8, x25, #0x10
  58:	mov	x21, x25
  5c:	ldr	x25, [x8]
  60:	cbnz	x25, 74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x74>
  64:	b	a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xa8>
  68:	add	x8, x25, #0x18
  6c:	ldr	x25, [x8]
  70:	cbz	x25, a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xa8>
  74:	ldr	x8, [x25, #40]
  78:	subs	x19, x8, x24
  7c:	csel	x2, x24, x8, hi  // hi = pmore
  80:	cbz	x2, 94 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x94>
  84:	ldr	x0, [x25, #32]
  88:	mov	x1, x22
  8c:	bl	0 <memcmp>
  90:	cbnz	w0, 50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x50>
  94:	cmp	x19, x26
  98:	b.gt	54 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x54>
  9c:	cmp	x19, x27
  a0:	csel	w0, w19, w28, gt
  a4:	b	50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x50>
  a8:	cmp	x21, x23
  ac:	b.eq	e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xe8>  // b.none
  b0:	ldr	x8, [x20, #8]
  b4:	ldr	x9, [x21, #40]
  b8:	ldr	x19, [sp, #8]
  bc:	subs	x22, x8, x9
  c0:	csel	x2, x9, x8, hi  // hi = pmore
  c4:	cbz	x2, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x134>
  c8:	ldr	x1, [x21, #32]
  cc:	ldr	x0, [x20]
  d0:	bl	0 <memcmp>
  d4:	cbz	w0, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x134>
  d8:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x110>
  dc:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xec>
  e0:	mov	x21, x23
  e4:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xec>
  e8:	ldr	x19, [sp, #8]
  ec:	adrp	x2, 0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_>
  f0:	add	x2, x2, #0x0
  f4:	sub	x3, x29, #0x8
  f8:	add	x4, sp, #0x10
  fc:	mov	x0, x19
 100:	mov	x1, x21
 104:	stur	x20, [x29, #-8]
 108:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_>
 10c:	mov	x21, x0
 110:	add	x0, x21, #0x40
 114:	ldp	x20, x19, [sp, #112]
 118:	ldp	x22, x21, [sp, #96]
 11c:	ldp	x24, x23, [sp, #80]
 120:	ldp	x26, x25, [sp, #64]
 124:	ldp	x28, x27, [sp, #48]
 128:	ldp	x29, x30, [sp, #32]
 12c:	add	sp, sp, #0x80
 130:	ret
 134:	mov	w8, #0x7fffffff            	// #2147483647
 138:	cmp	x22, x8
 13c:	b.gt	110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x110>
 140:	mov	x8, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x22, x8
 148:	mov	w8, #0x80000000            	// #-2147483648
 14c:	csel	w0, w22, w8, gt
 150:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x110>
 154:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xec>

Disassembly of section .text._ZN5clang7tooling16ReplacementErrorD2Ev:

0000000000000000 <_ZN5clang7tooling16ReplacementErrorD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN5clang7tooling16ReplacementErrorD2Ev>
  10:	ldrb	w8, [x0, #168]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x0]
  24:	cbz	w8, 54 <_ZN5clang7tooling16ReplacementErrorD2Ev+0x54>
  28:	ldr	x0, [x19, #136]
  2c:	add	x8, x19, #0x98
  30:	cmp	x0, x8
  34:	b.eq	3c <_ZN5clang7tooling16ReplacementErrorD2Ev+0x3c>  // b.none
  38:	bl	0 <_ZdlPv>
  3c:	ldr	x0, [x19, #96]
  40:	add	x8, x19, #0x70
  44:	cmp	x0, x8
  48:	b.eq	50 <_ZN5clang7tooling16ReplacementErrorD2Ev+0x50>  // b.none
  4c:	bl	0 <_ZdlPv>
  50:	strb	wzr, [x19, #168]
  54:	ldrb	w8, [x19, #88]
  58:	cbz	w8, 88 <_ZN5clang7tooling16ReplacementErrorD2Ev+0x88>
  5c:	ldr	x0, [x19, #56]
  60:	add	x8, x19, #0x48
  64:	cmp	x0, x8
  68:	b.eq	70 <_ZN5clang7tooling16ReplacementErrorD2Ev+0x70>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	ldr	x0, [x19, #16]
  74:	add	x8, x19, #0x20
  78:	cmp	x0, x8
  7c:	b.eq	84 <_ZN5clang7tooling16ReplacementErrorD2Ev+0x84>  // b.none
  80:	bl	0 <_ZdlPv>
  84:	strb	wzr, [x19, #88]
  88:	ldr	x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret

Disassembly of section .text._ZN5clang7tooling16ReplacementErrorD0Ev:

0000000000000000 <_ZN5clang7tooling16ReplacementErrorD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN5clang7tooling16ReplacementErrorD0Ev>
  10:	ldrb	w8, [x0, #168]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x0]
  24:	cbz	w8, 54 <_ZN5clang7tooling16ReplacementErrorD0Ev+0x54>
  28:	ldr	x0, [x19, #136]
  2c:	add	x8, x19, #0x98
  30:	cmp	x0, x8
  34:	b.eq	3c <_ZN5clang7tooling16ReplacementErrorD0Ev+0x3c>  // b.none
  38:	bl	0 <_ZdlPv>
  3c:	ldr	x0, [x19, #96]
  40:	add	x8, x19, #0x70
  44:	cmp	x0, x8
  48:	b.eq	50 <_ZN5clang7tooling16ReplacementErrorD0Ev+0x50>  // b.none
  4c:	bl	0 <_ZdlPv>
  50:	strb	wzr, [x19, #168]
  54:	ldrb	w8, [x19, #88]
  58:	cbz	w8, 84 <_ZN5clang7tooling16ReplacementErrorD0Ev+0x84>
  5c:	ldr	x0, [x19, #56]
  60:	add	x8, x19, #0x48
  64:	cmp	x0, x8
  68:	b.eq	70 <_ZN5clang7tooling16ReplacementErrorD0Ev+0x70>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	ldr	x0, [x19, #16]
  74:	add	x8, x19, #0x20
  78:	cmp	x0, x8
  7c:	b.eq	84 <_ZN5clang7tooling16ReplacementErrorD0Ev+0x84>  // b.none
  80:	bl	0 <_ZdlPv>
  84:	mov	x0, x19
  88:	ldr	x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK5clang7tooling16ReplacementError3logERN4llvm11raw_ostreamE:

0000000000000000 <_ZNK5clang7tooling16ReplacementError3logERN4llvm11raw_ostreamE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	ldr	x8, [x0]
  14:	mov	x19, x1
  18:	mov	x20, sp
  1c:	ldr	x9, [x8, #24]
  20:	mov	x8, sp
  24:	blr	x9
  28:	ldp	x1, x2, [sp]
  2c:	mov	x0, x19
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	ldr	x0, [sp]
  38:	add	x8, x20, #0x10
  3c:	cmp	x0, x8
  40:	b.eq	48 <_ZNK5clang7tooling16ReplacementError3logERN4llvm11raw_ostreamE+0x48>  // b.none
  44:	bl	0 <_ZdlPv>
  48:	ldp	x20, x19, [sp, #48]
  4c:	ldp	x29, x30, [sp, #32]
  50:	add	sp, sp, #0x40
  54:	ret

Disassembly of section .text._ZNK5clang7tooling16ReplacementError18convertToErrorCodeEv:

0000000000000000 <_ZNK5clang7tooling16ReplacementError18convertToErrorCodeEv>:
   0:	b	0 <_ZN4llvm22inconvertibleErrorCodeEv>

Disassembly of section .text._ZNK4llvm9ErrorInfoIN5clang7tooling16ReplacementErrorENS_13ErrorInfoBaseEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoIN5clang7tooling16ReplacementErrorENS_13ErrorInfoBaseEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZNK4llvm9ErrorInfoIN5clang7tooling16ReplacementErrorENS_13ErrorInfoBaseEE14dynamicClassIDEv>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoIN5clang7tooling16ReplacementErrorENS_13ErrorInfoBaseEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoIN5clang7tooling16ReplacementErrorENS_13ErrorInfoBaseEE3isAEPKv>:
   0:	adrp	x8, 0 <_ZNK4llvm9ErrorInfoIN5clang7tooling16ReplacementErrorENS_13ErrorInfoBaseEE3isAEPKv>
   4:	ldr	x8, [x8]
   8:	adrp	x9, 0 <_ZN4llvm13ErrorInfoBase2IDE>
   c:	ldr	x9, [x9]
  10:	cmp	x1, x8
  14:	cset	w8, eq  // eq = none
  18:	cmp	x1, x9
  1c:	cset	w9, eq  // eq = none
  20:	orr	w0, w8, w9
  24:	ret

Disassembly of section .text._ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb:

0000000000000000 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #224]
   c:	mov	w9, #0xfffffffe            	// #-2
  10:	sub	w1, w9, w1
  14:	cmp	w8, w1
  18:	b.ls	64 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb+0x64>  // b.plast
  1c:	ldr	w8, [x0, #256]
  20:	cmp	w8, w1
  24:	b.ls	84 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb+0x84>  // b.plast
  28:	ldr	x9, [x0, #248]
  2c:	ubfx	x8, x1, #6, #26
  30:	cmp	x9, x8
  34:	b.ls	a4 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb+0xa4>  // b.plast
  38:	ldr	x9, [x0, #240]
  3c:	ldr	x8, [x9, x8, lsl #3]
  40:	lsr	x8, x8, x1
  44:	tbz	w8, #0, 5c <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb+0x5c>
  48:	ldr	x8, [x0, #216]
  4c:	mov	w9, #0x28                  	// #40
  50:	madd	x0, x1, x9, x8
  54:	ldp	x29, x30, [sp], #16
  58:	ret
  5c:	ldp	x29, x30, [sp], #16
  60:	b	0 <_ZNK5clang13SourceManager13loadSLocEntryEjPb>
  64:	adrp	x0, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  68:	adrp	x1, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  6c:	adrp	x3, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x69d                 	// #1693
  80:	bl	0 <__assert_fail>
  84:	adrp	x0, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  88:	adrp	x1, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  8c:	adrp	x3, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x1f0                 	// #496
  a0:	bl	0 <__assert_fail>
  a4:	adrp	x0, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  a8:	adrp	x1, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  ac:	adrp	x3, 0 <_ZNK5clang13SourceManager22getLoadedSLocEntryByIDEiPb>
  b0:	add	x0, x0, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x1ab                 	// #427
  c0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj:

0000000000000000 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x1
  14:	add	w8, w21, #0x1
  18:	mov	w19, w2
  1c:	cmp	w8, #0x1
  20:	mov	x20, x0
  24:	b.hi	48 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x48>  // b.pmore
  28:	ldr	w8, [x20, #208]
  2c:	cbz	w8, 12c <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x12c>
  30:	ldr	x0, [x20, #200]
  34:	ldr	w8, [x0]
  38:	and	w8, w8, #0x7fffffff
  3c:	cmp	w8, w19
  40:	b.hi	78 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x78>  // b.pmore
  44:	b	ac <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0xac>
  48:	tbnz	w21, #31, 8c <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x8c>
  4c:	ldr	w8, [x20, #208]
  50:	cmp	w8, w21
  54:	b.ls	14c <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x14c>  // b.plast
  58:	ldr	x8, [x20, #200]
  5c:	and	x9, x21, #0xffffffff
  60:	mov	w10, #0x28                  	// #40
  64:	madd	x0, x9, x10, x8
  68:	ldr	w8, [x0]
  6c:	and	w8, w8, #0x7fffffff
  70:	cmp	w8, w19
  74:	b.ls	ac <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0xac>  // b.plast
  78:	mov	w0, wzr
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret
  8c:	mov	x0, x20
  90:	mov	w1, w21
  94:	mov	x2, xzr
  98:	bl	0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
  9c:	ldr	w8, [x0]
  a0:	and	w8, w8, #0x7fffffff
  a4:	cmp	w8, w19
  a8:	b.hi	78 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x78>  // b.pmore
  ac:	cmn	w21, #0x2
  b0:	b.ne	c8 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0xc8>  // b.any
  b4:	mov	w0, #0x1                   	// #1
  b8:	ldp	x20, x19, [sp, #32]
  bc:	ldr	x21, [sp, #16]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret
  c8:	ldr	w8, [x20, #208]
  cc:	add	w1, w21, #0x1
  d0:	cmp	w1, w8
  d4:	b.ne	e0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0xe0>  // b.any
  d8:	ldr	w8, [x20, #232]
  dc:	b	114 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x114>
  e0:	cmn	w21, #0x2
  e4:	b.gt	f8 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0xf8>
  e8:	mov	x0, x20
  ec:	mov	x2, xzr
  f0:	bl	0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
  f4:	b	10c <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x10c>
  f8:	cmp	w8, w1
  fc:	b.ls	14c <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj+0x14c>  // b.plast
 100:	ldr	x8, [x20, #200]
 104:	mov	w9, #0x28                  	// #40
 108:	umaddl	x0, w1, w9, x8
 10c:	ldr	w8, [x0]
 110:	and	w8, w8, #0x7fffffff
 114:	cmp	w8, w19
 118:	cset	w0, hi  // hi = pmore
 11c:	ldp	x20, x19, [sp, #32]
 120:	ldr	x21, [sp, #16]
 124:	ldp	x29, x30, [sp], #48
 128:	ret
 12c:	adrp	x0, 0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
 130:	adrp	x1, 0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
 134:	adrp	x3, 0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x99                  	// #153
 148:	bl	0 <__assert_fail>
 14c:	adrp	x0, 0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
 150:	adrp	x1, 0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
 154:	adrp	x3, 0 <_ZNK5clang13SourceManager16isOffsetInFileIDENS_6FileIDEj>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x693                 	// #1683
 168:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	cmp	x1, x2
  1c:	b.eq	c0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_+0xc0>  // b.none
  20:	mov	x19, x2
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	add	x22, x0, #0x8
  30:	b	80 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_+0x80>
  34:	mov	w0, #0x68                  	// #104
  38:	bl	0 <_Znwm>
  3c:	mov	x26, x0
  40:	add	x0, x0, #0x20
  44:	mov	x1, x23
  48:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_>
  4c:	and	w0, w25, #0x1
  50:	mov	x1, x26
  54:	mov	x2, x24
  58:	mov	x3, x22
  5c:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  60:	ldr	x8, [x20, #40]
  64:	add	x8, x8, #0x1
  68:	str	x8, [x20, #40]
  6c:	mov	x0, x21
  70:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  74:	mov	x21, x0
  78:	cmp	x0, x19
  7c:	b.eq	c0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_+0xc0>  // b.none
  80:	add	x23, x21, #0x20
  84:	mov	x0, x20
  88:	mov	x1, x22
  8c:	mov	x2, x23
  90:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_>
  94:	cbz	x1, 6c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_+0x6c>
  98:	mov	x24, x1
  9c:	mov	w25, #0x1                   	// #1
  a0:	cbnz	x0, 34 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_+0x34>
  a4:	cmp	x22, x24
  a8:	b.eq	34 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_+0x34>  // b.none
  ac:	add	x1, x24, #0x20
  b0:	mov	x0, x23
  b4:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  b8:	mov	w25, w0
  bc:	b	34 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_+0x34>
  c0:	ldp	x20, x19, [sp, #64]
  c4:	ldp	x22, x21, [sp, #48]
  c8:	ldp	x24, x23, [sp, #32]
  cc:	ldp	x26, x25, [sp, #16]
  d0:	ldp	x29, x30, [sp], #80
  d4:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	x23, x0, #0x8
  18:	mov	x21, x1
  1c:	mov	x22, x0
  20:	cmp	x23, x1
  24:	mov	x19, x2
  28:	b.eq	80 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x80>  // b.none
  2c:	add	x20, x21, #0x20
  30:	mov	x0, x19
  34:	mov	x1, x20
  38:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  3c:	tbz	w0, #0, e8 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0xe8>
  40:	ldr	x24, [x22, #24]
  44:	cmp	x24, x21
  48:	b.eq	140 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x140>  // b.none
  4c:	mov	x0, x21
  50:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  54:	mov	x20, x0
  58:	add	x0, x0, #0x20
  5c:	mov	x1, x19
  60:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  64:	tbz	w0, #0, 14c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x14c>
  68:	ldr	x8, [x20, #24]
  6c:	cmp	x8, #0x0
  70:	csel	x8, xzr, x21, eq  // eq = none
  74:	csel	x20, x20, x21, eq  // eq = none
  78:	mov	x21, x8
  7c:	b	248 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x248>
  80:	ldr	x8, [x22, #40]
  84:	cbz	x8, 9c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x9c>
  88:	ldr	x20, [x22, #32]
  8c:	mov	x1, x19
  90:	add	x0, x20, #0x20
  94:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  98:	tbnz	w0, #0, 20c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x20c>
  9c:	ldr	x8, [x22, #16]
  a0:	cbz	x8, 190 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x190>
  a4:	add	x1, x8, #0x20
  a8:	mov	x0, x19
  ac:	mov	x20, x8
  b0:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  b4:	add	x8, x20, #0x10
  b8:	add	x9, x20, #0x18
  bc:	tst	w0, #0x1
  c0:	csel	x8, x8, x9, ne  // ne = any
  c4:	ldr	x8, [x8]
  c8:	cbnz	x8, a4 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0xa4>
  cc:	mov	x21, x20
  d0:	mov	x23, x20
  d4:	tbz	w0, #0, 1ac <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x1ac>
  d8:	ldr	x8, [x22, #24]
  dc:	cmp	x8, x21
  e0:	b.ne	1a0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x1a0>  // b.any
  e4:	b	20c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x20c>
  e8:	mov	x0, x20
  ec:	mov	x1, x19
  f0:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  f4:	tbz	w0, #0, 138 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x138>
  f8:	ldr	x20, [x22, #32]
  fc:	cmp	x20, x21
 100:	b.eq	20c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x20c>  // b.none
 104:	mov	x0, x21
 108:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 10c:	mov	x20, x0
 110:	add	x1, x0, #0x20
 114:	mov	x0, x19
 118:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
 11c:	tbz	w0, #0, 1c4 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x1c4>
 120:	ldr	x8, [x21, #24]
 124:	cmp	x8, #0x0
 128:	csel	x8, xzr, x20, eq  // eq = none
 12c:	csel	x20, x21, x20, eq  // eq = none
 130:	mov	x21, x8
 134:	b	248 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x248>
 138:	mov	x20, xzr
 13c:	b	248 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x248>
 140:	mov	x21, x24
 144:	mov	x20, x24
 148:	b	248 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x248>
 14c:	ldr	x8, [x22, #16]
 150:	cbz	x8, 200 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x200>
 154:	add	x1, x8, #0x20
 158:	mov	x0, x19
 15c:	mov	x20, x8
 160:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
 164:	add	x8, x20, #0x10
 168:	add	x9, x20, #0x18
 16c:	tst	w0, #0x1
 170:	csel	x8, x8, x9, ne  // ne = any
 174:	ldr	x8, [x8]
 178:	cbnz	x8, 154 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x154>
 17c:	mov	x21, x20
 180:	tbz	w0, #0, 230 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x230>
 184:	cmp	x24, x20
 188:	b.ne	224 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x224>  // b.any
 18c:	b	20c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x20c>
 190:	mov	x20, x23
 194:	ldr	x8, [x22, #24]
 198:	cmp	x8, x21
 19c:	b.eq	20c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x20c>  // b.none
 1a0:	mov	x0, x21
 1a4:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1a8:	mov	x23, x0
 1ac:	add	x0, x23, #0x20
 1b0:	mov	x1, x19
 1b4:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
 1b8:	tst	w0, #0x1
 1bc:	csel	x21, xzr, x23, ne  // ne = any
 1c0:	b	244 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x244>
 1c4:	ldr	x8, [x22, #16]
 1c8:	cbz	x8, 214 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x214>
 1cc:	add	x1, x8, #0x20
 1d0:	mov	x0, x19
 1d4:	mov	x20, x8
 1d8:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
 1dc:	add	x8, x20, #0x10
 1e0:	add	x9, x20, #0x18
 1e4:	tst	w0, #0x1
 1e8:	csel	x8, x8, x9, ne  // ne = any
 1ec:	ldr	x8, [x8]
 1f0:	cbnz	x8, 1cc <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x1cc>
 1f4:	mov	x21, x20
 1f8:	tbnz	w0, #0, 218 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x218>
 1fc:	b	230 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x230>
 200:	mov	x20, x23
 204:	cmp	x24, x20
 208:	b.ne	224 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x224>  // b.any
 20c:	mov	x21, xzr
 210:	b	248 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x248>
 214:	mov	x20, x23
 218:	ldr	x8, [x22, #24]
 21c:	cmp	x8, x20
 220:	b.eq	20c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x20c>  // b.none
 224:	mov	x0, x20
 228:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 22c:	mov	x21, x0
 230:	add	x0, x21, #0x20
 234:	mov	x1, x19
 238:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
 23c:	tst	w0, #0x1
 240:	csel	x21, xzr, x21, ne  // ne = any
 244:	csel	x20, x20, xzr, ne  // ne = any
 248:	mov	x0, x21
 24c:	mov	x1, x20
 250:	ldp	x20, x19, [sp, #48]
 254:	ldp	x22, x21, [sp, #32]
 258:	ldp	x24, x23, [sp, #16]
 25c:	ldp	x29, x30, [sp], #64
 260:	ret

Disassembly of section .text._ZN5clang7tooling11ReplacementC2ERKS1_:

0000000000000000 <_ZN5clang7tooling11ReplacementC2ERKS1_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x19, x0
  18:	add	x0, x0, #0x10
  1c:	str	x0, [x19]
  20:	ldp	x21, x22, [x1]
  24:	mov	x20, x1
  28:	cbnz	x21, 30 <_ZN5clang7tooling11ReplacementC2ERKS1_+0x30>
  2c:	cbnz	x22, 11c <_ZN5clang7tooling11ReplacementC2ERKS1_+0x11c>
  30:	cmp	x22, #0x10
  34:	str	x22, [sp, #8]
  38:	b.cc	58 <_ZN5clang7tooling11ReplacementC2ERKS1_+0x58>  // b.lo, b.ul, b.last
  3c:	add	x1, sp, #0x8
  40:	mov	x0, x19
  44:	mov	x2, xzr
  48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  4c:	str	x0, [x19]
  50:	ldr	x8, [sp, #8]
  54:	str	x8, [x19, #16]
  58:	cbz	x22, 7c <_ZN5clang7tooling11ReplacementC2ERKS1_+0x7c>
  5c:	cmp	x22, #0x1
  60:	b.ne	70 <_ZN5clang7tooling11ReplacementC2ERKS1_+0x70>  // b.any
  64:	ldrb	w8, [x21]
  68:	strb	w8, [x0]
  6c:	b	7c <_ZN5clang7tooling11ReplacementC2ERKS1_+0x7c>
  70:	mov	x1, x21
  74:	mov	x2, x22
  78:	bl	0 <memcpy>
  7c:	ldr	x8, [sp, #8]
  80:	ldr	x9, [x19]
  84:	add	x0, x19, #0x38
  88:	str	x8, [x19, #8]
  8c:	strb	wzr, [x9, x8]
  90:	ldr	x9, [x20, #32]
  94:	mov	x8, x19
  98:	str	x0, [x8, #40]!
  9c:	stur	x9, [x8, #-8]
  a0:	ldp	x21, x20, [x20, #40]
  a4:	cbnz	x21, ac <_ZN5clang7tooling11ReplacementC2ERKS1_+0xac>
  a8:	cbnz	x20, 11c <_ZN5clang7tooling11ReplacementC2ERKS1_+0x11c>
  ac:	cmp	x20, #0x10
  b0:	str	x20, [sp, #8]
  b4:	b.cc	d4 <_ZN5clang7tooling11ReplacementC2ERKS1_+0xd4>  // b.lo, b.ul, b.last
  b8:	add	x1, sp, #0x8
  bc:	mov	x0, x8
  c0:	mov	x2, xzr
  c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  c8:	str	x0, [x19, #40]
  cc:	ldr	x8, [sp, #8]
  d0:	str	x8, [x19, #56]
  d4:	cbz	x20, f8 <_ZN5clang7tooling11ReplacementC2ERKS1_+0xf8>
  d8:	cmp	x20, #0x1
  dc:	b.ne	ec <_ZN5clang7tooling11ReplacementC2ERKS1_+0xec>  // b.any
  e0:	ldrb	w8, [x21]
  e4:	strb	w8, [x0]
  e8:	b	f8 <_ZN5clang7tooling11ReplacementC2ERKS1_+0xf8>
  ec:	mov	x1, x21
  f0:	mov	x2, x20
  f4:	bl	0 <memcpy>
  f8:	ldr	x8, [sp, #8]
  fc:	ldr	x9, [x19, #40]
 100:	str	x8, [x19, #48]
 104:	strb	wzr, [x9, x8]
 108:	ldp	x20, x19, [sp, #48]
 10c:	ldp	x22, x21, [sp, #32]
 110:	ldp	x29, x30, [sp, #16]
 114:	add	sp, sp, #0x40
 118:	ret
 11c:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC2ERKS1_>
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 6c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x6c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 6c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x6c>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>
  3c:	ldr	x0, [x20, #72]
  40:	ldr	x21, [x20, #16]
  44:	add	x8, x20, #0x58
  48:	cmp	x0, x8
  4c:	b.eq	54 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x54>  // b.none
  50:	bl	0 <_ZdlPv>
  54:	ldr	x0, [x20, #32]
  58:	add	x8, x20, #0x30
  5c:	cmp	x0, x8
  60:	b.eq	20 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x20>  // b.none
  64:	bl	0 <_ZdlPv>
  68:	b	20 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x20>
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldr	x21, [sp, #16]
  74:	ldp	x29, x30, [sp], #48
  78:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	mov	w0, #0x68                  	// #104
  20:	mov	x19, x3
  24:	mov	x23, x2
  28:	mov	x22, x1
  2c:	add	x24, x1, #0x20
  30:	bl	0 <_Znwm>
  34:	mov	x21, x0
  38:	add	x0, x0, #0x20
  3c:	mov	x1, x24
  40:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  44:	ldr	w8, [x22]
  48:	stp	xzr, xzr, [x21, #16]
  4c:	str	x23, [x21, #8]
  50:	str	w8, [x21]
  54:	ldr	x1, [x22, #24]
  58:	cbz	x1, 70 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x70>
  5c:	mov	x0, x20
  60:	mov	x2, x21
  64:	mov	x3, x19
  68:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  6c:	str	x0, [x21, #24]
  70:	ldr	x24, [x22, #16]
  74:	cbz	x24, dc <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0xdc>
  78:	mov	x25, x21
  7c:	b	8c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x8c>
  80:	ldr	x24, [x24, #16]
  84:	mov	x25, x22
  88:	cbz	x24, dc <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0xdc>
  8c:	mov	w0, #0x68                  	// #104
  90:	add	x23, x24, #0x20
  94:	bl	0 <_Znwm>
  98:	mov	x22, x0
  9c:	add	x0, x0, #0x20
  a0:	mov	x1, x23
  a4:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  a8:	ldr	w8, [x24]
  ac:	stp	xzr, xzr, [x22, #16]
  b0:	str	w8, [x22]
  b4:	str	x22, [x25, #16]
  b8:	str	x25, [x22, #8]
  bc:	ldr	x1, [x24, #24]
  c0:	cbz	x1, 80 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x80>
  c4:	mov	x0, x20
  c8:	mov	x2, x22
  cc:	mov	x3, x19
  d0:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  d4:	str	x0, [x22, #24]
  d8:	b	80 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x80>
  dc:	mov	x0, x21
  e0:	ldp	x20, x19, [sp, #64]
  e4:	ldp	x22, x21, [sp, #48]
  e8:	ldp	x24, x23, [sp, #32]
  ec:	ldr	x25, [sp, #16]
  f0:	ldp	x29, x30, [sp], #80
  f4:	ret

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1]
  10:	mov	x19, x0
  14:	ands	x8, x8, #0xfffffffffffffffe
  18:	b.eq	40 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x40>  // b.none
  1c:	ldr	x9, [x8]
  20:	mov	x0, x8
  24:	mov	x1, x19
  28:	ldr	x9, [x9, #16]
  2c:	blr	x9
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	ldp	x9, x8, [x19, #16]
  44:	sub	x9, x9, x8
  48:	cmp	x9, #0x6
  4c:	b.hi	74 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x74>  // b.pmore
  50:	adrp	x1, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  54:	add	x1, x1, #0x0
  58:	mov	w2, #0x7                   	// #7
  5c:	mov	x0, x19
  60:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  64:	mov	x0, x19
  68:	ldr	x19, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	ret
  74:	mov	w9, #0x6563                	// #25955
  78:	mov	w10, #0x7573                	// #30067
  7c:	movk	w9, #0x7373, lsl #16
  80:	movk	w10, #0x6363, lsl #16
  84:	stur	w9, [x8, #3]
  88:	str	w10, [x8]
  8c:	ldr	x8, [x19, #24]
  90:	add	x8, x8, #0x7
  94:	str	x8, [x19, #24]
  98:	mov	x0, x19
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E:

0000000000000000 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 74 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x74>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	3c <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x3c>
  20:	add	x0, x21, #0x30
  24:	bl	0 <_ZN5clang14RopePieceBTreeD1Ev>
  28:	add	x0, x21, #0x28
  2c:	bl	0 <_ZN5clang9DeltaTreeD1Ev>
  30:	mov	x0, x21
  34:	bl	0 <_ZdlPv>
  38:	cbz	x20, 74 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x74>
  3c:	ldr	x1, [x20, #24]
  40:	mov	x0, x19
  44:	mov	x21, x20
  48:	bl	0 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
  4c:	ldr	x0, [x20, #56]
  50:	ldr	x20, [x20, #16]
  54:	cbz	x0, 20 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x20>
  58:	ldr	w8, [x0]
  5c:	cbz	w8, 84 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x84>
  60:	subs	w8, w8, #0x1
  64:	str	w8, [x0]
  68:	b.ne	20 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x20>  // b.any
  6c:	bl	0 <_ZdaPv>
  70:	b	20 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x20>
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	adrp	x0, 0 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
  88:	adrp	x1, 0 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
  8c:	adrp	x3, 0 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x28                  	// #40
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x22, x1
  18:	mov	x20, x0
  1c:	add	x1, x1, #0x20
  20:	mov	x0, x3
  24:	mov	x19, x3
  28:	mov	x23, x2
  2c:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  30:	ldr	w8, [x22]
  34:	stp	xzr, xzr, [x0, #16]
  38:	str	x23, [x0, #8]
  3c:	mov	x21, x0
  40:	str	w8, [x0]
  44:	ldr	x1, [x22, #24]
  48:	cbz	x1, 60 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x60>
  4c:	mov	x0, x20
  50:	mov	x2, x21
  54:	mov	x3, x19
  58:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  5c:	str	x0, [x21, #24]
  60:	ldr	x23, [x22, #16]
  64:	cbz	x23, c0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0xc0>
  68:	mov	x24, x21
  6c:	b	7c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x7c>
  70:	ldr	x23, [x23, #16]
  74:	mov	x24, x22
  78:	cbz	x23, c0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0xc0>
  7c:	add	x1, x23, #0x20
  80:	mov	x0, x19
  84:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  88:	ldr	w8, [x23]
  8c:	stp	xzr, xzr, [x0, #16]
  90:	mov	x22, x0
  94:	str	w8, [x0]
  98:	str	x0, [x24, #16]
  9c:	str	x24, [x0, #8]
  a0:	ldr	x1, [x23, #24]
  a4:	cbz	x1, 70 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x70>
  a8:	mov	x0, x20
  ac:	mov	x2, x22
  b0:	mov	x3, x19
  b4:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  b8:	str	x0, [x22, #24]
  bc:	b	70 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x70>
  c0:	mov	x0, x21
  c4:	ldp	x20, x19, [sp, #48]
  c8:	ldp	x22, x21, [sp, #32]
  cc:	ldp	x24, x23, [sp, #16]
  d0:	ldp	x29, x30, [sp], #64
  d4:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0, #8]
  14:	mov	x19, x1
  18:	cbz	x20, 3c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_+0x3c>
  1c:	ldr	x8, [x20, #8]
  20:	str	x8, [x0, #8]
  24:	cbz	x8, 50 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_+0x50>
  28:	ldr	x9, [x8, #24]
  2c:	cmp	x9, x20
  30:	b.eq	58 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_+0x58>  // b.none
  34:	str	xzr, [x8, #16]
  38:	b	84 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_+0x84>
  3c:	mov	w0, #0x68                  	// #104
  40:	bl	0 <_Znwm>
  44:	mov	x20, x0
  48:	add	x21, x0, #0x20
  4c:	b	b0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_+0xb0>
  50:	str	xzr, [x0]
  54:	b	84 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_+0x84>
  58:	ldr	x9, [x8, #16]
  5c:	str	xzr, [x8, #24]
  60:	cbz	x9, 84 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_+0x84>
  64:	mov	x8, x9
  68:	ldr	x9, [x9, #24]
  6c:	cbnz	x9, 64 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_+0x64>
  70:	str	x8, [x0, #8]
  74:	ldr	x9, [x8, #16]
  78:	cmp	x9, #0x0
  7c:	csel	x8, x8, x9, eq  // eq = none
  80:	str	x8, [x0, #8]
  84:	ldr	x0, [x20, #72]
  88:	add	x8, x20, #0x58
  8c:	add	x21, x20, #0x20
  90:	cmp	x0, x8
  94:	b.eq	9c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_+0x9c>  // b.none
  98:	bl	0 <_ZdlPv>
  9c:	ldr	x0, [x20, #32]
  a0:	add	x8, x20, #0x30
  a4:	cmp	x0, x8
  a8:	b.eq	b0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_+0xb0>  // b.none
  ac:	bl	0 <_ZdlPv>
  b0:	mov	x0, x21
  b4:	mov	x1, x19
  b8:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_>
  bc:	mov	x0, x20
  c0:	ldp	x20, x19, [sp, #32]
  c4:	ldr	x21, [sp, #16]
  c8:	ldp	x29, x30, [sp], #48
  cc:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0, #16]
  18:	mov	x21, x1
  1c:	mov	x19, x0
  20:	add	x20, x0, #0x8
  24:	cbz	x8, 68 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x68>
  28:	add	x1, x8, #0x20
  2c:	mov	x0, x21
  30:	mov	x22, x8
  34:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  38:	add	x8, x22, #0x10
  3c:	add	x9, x22, #0x18
  40:	tst	w0, #0x1
  44:	csel	x8, x8, x9, ne  // ne = any
  48:	ldr	x8, [x8]
  4c:	cbnz	x8, 28 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x28>
  50:	mov	x23, x22
  54:	tbz	w0, #0, 84 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x84>
  58:	ldr	x8, [x19, #24]
  5c:	cmp	x8, x22
  60:	b.ne	78 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x78>  // b.any
  64:	b	94 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x94>
  68:	mov	x22, x20
  6c:	ldr	x8, [x19, #24]
  70:	cmp	x8, x22
  74:	b.eq	94 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x94>  // b.none
  78:	mov	x0, x22
  7c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  80:	mov	x23, x0
  84:	add	x0, x23, #0x20
  88:	mov	x1, x21
  8c:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  90:	tbz	w0, #0, b4 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0xb4>
  94:	cbz	x22, bc <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0xbc>
  98:	cmp	x20, x22
  9c:	b.eq	c8 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0xc8>  // b.none
  a0:	add	x1, x22, #0x20
  a4:	mov	x0, x21
  a8:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  ac:	mov	w24, w0
  b0:	b	cc <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0xcc>
  b4:	mov	x1, xzr
  b8:	b	108 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x108>
  bc:	mov	x23, xzr
  c0:	mov	x1, xzr
  c4:	b	108 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x108>
  c8:	mov	w24, #0x1                   	// #1
  cc:	mov	w0, #0x68                  	// #104
  d0:	bl	0 <_Znwm>
  d4:	mov	x23, x0
  d8:	add	x0, x0, #0x20
  dc:	mov	x1, x21
  e0:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_>
  e4:	and	w0, w24, #0x1
  e8:	mov	x1, x23
  ec:	mov	x2, x22
  f0:	mov	x3, x20
  f4:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  f8:	ldr	x8, [x19, #40]
  fc:	mov	w1, #0x1                   	// #1
 100:	add	x8, x8, #0x1
 104:	str	x8, [x19, #40]
 108:	mov	x0, x23
 10c:	ldp	x20, x19, [sp, #48]
 110:	ldp	x22, x21, [sp, #32]
 114:	ldp	x24, x23, [sp, #16]
 118:	ldp	x29, x30, [sp], #64
 11c:	ret

Disassembly of section .text._ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldp	x20, x25, [x0]
  20:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  24:	sub	x8, x25, x20
  28:	cmp	x8, x9
  2c:	b.eq	2b4 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2b4>  // b.none
  30:	mov	x10, #0x8e39                	// #36409
  34:	movk	x10, #0x38e3, lsl #16
  38:	movk	x10, #0xe38e, lsl #32
  3c:	asr	x9, x8, #3
  40:	movk	x10, #0x8e38, lsl #48
  44:	cmp	x8, #0x0
  48:	mov	x8, #0x71c7                	// #29127
  4c:	movk	x8, #0xc71c, lsl #16
  50:	mul	x9, x9, x10
  54:	movk	x8, #0x1c71, lsl #32
  58:	csinc	x11, x9, xzr, ne  // ne = any
  5c:	movk	x8, #0x1c7, lsl #48
  60:	adds	x9, x11, x9
  64:	cset	w11, cs  // cs = hs, nlast
  68:	cmp	x9, x8
  6c:	cset	w12, hi  // hi = pmore
  70:	orr	w11, w11, w12
  74:	sub	x12, x1, x20
  78:	cmp	w11, #0x0
  7c:	csel	x24, x8, x9, ne  // ne = any
  80:	asr	x8, x12, #3
  84:	mov	x23, x2
  88:	mov	x19, x0
  8c:	mov	x21, x1
  90:	mul	x26, x8, x10
  94:	cbz	x24, ac <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xac>
  98:	add	x8, x24, x24, lsl #3
  9c:	lsl	x0, x8, #3
  a0:	bl	0 <_Znwm>
  a4:	mov	x22, x0
  a8:	b	b0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb0>
  ac:	mov	x22, xzr
  b0:	mov	w8, #0x48                  	// #72
  b4:	madd	x0, x26, x8, x22
  b8:	mov	x1, x23
  bc:	bl	0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  c0:	cmp	x20, x21
  c4:	mov	x23, x22
  c8:	b.eq	198 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x198>  // b.none
  cc:	mov	x23, xzr
  d0:	b	e4 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe4>
  d4:	add	x8, x26, #0x38
  d8:	cmp	x8, x21
  dc:	add	x23, x23, #0x48
  e0:	b.eq	194 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x194>  // b.none
  e4:	add	x9, x22, x23
  e8:	add	x8, x9, #0x10
  ec:	add	x10, x20, x23
  f0:	str	x8, [x9]
  f4:	mov	x8, x10
  f8:	ldr	x11, [x8], #16
  fc:	cmp	x11, x8
 100:	b.eq	114 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x114>  // b.none
 104:	str	x11, [x9]
 108:	ldr	x10, [x10, #16]
 10c:	str	x10, [x9, #16]
 110:	b	11c <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x11c>
 114:	ldr	q0, [x11]
 118:	str	q0, [x9, #16]
 11c:	ldur	x10, [x8, #-8]
 120:	add	x9, x22, x23
 124:	add	x11, x9, #0x38
 128:	str	x10, [x9, #8]
 12c:	ldr	x10, [x8, #16]
 130:	stp	x8, xzr, [x8, #-16]
 134:	strb	wzr, [x8]
 138:	stp	x10, x11, [x9, #32]
 13c:	ldr	x10, [x8, #24]
 140:	add	x8, x8, #0x28
 144:	cmp	x10, x8
 148:	b.eq	160 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x160>  // b.none
 14c:	str	x10, [x9, #40]
 150:	add	x10, x20, x23
 154:	ldr	x10, [x10, #56]
 158:	str	x10, [x9, #56]
 15c:	b	168 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x168>
 160:	ldr	q0, [x10]
 164:	stur	q0, [x9, #56]
 168:	ldur	x9, [x8, #-8]
 16c:	add	x10, x22, x23
 170:	sub	x26, x8, #0x28
 174:	str	x9, [x10, #48]
 178:	ldur	x0, [x8, #-56]
 17c:	stp	x8, xzr, [x8, #-16]
 180:	strb	wzr, [x8]
 184:	cmp	x0, x26
 188:	b.eq	d4 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd4>  // b.none
 18c:	bl	0 <_ZdlPv>
 190:	b	d4 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd4>
 194:	add	x23, x22, x23
 198:	cmp	x25, x21
 19c:	b.eq	2a8 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2a8>  // b.none
 1a0:	mov	x26, xzr
 1a4:	b	1b8 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1b8>
 1a8:	add	x8, x27, #0x38
 1ac:	cmp	x8, x25
 1b0:	add	x26, x26, #0x48
 1b4:	b.eq	268 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x268>  // b.none
 1b8:	add	x9, x23, x26
 1bc:	add	x8, x9, #0x58
 1c0:	add	x10, x21, x26
 1c4:	str	x8, [x9, #72]
 1c8:	mov	x8, x10
 1cc:	ldr	x11, [x8], #16
 1d0:	cmp	x11, x8
 1d4:	b.eq	1e8 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1e8>  // b.none
 1d8:	str	x11, [x9, #72]
 1dc:	ldr	x10, [x10, #16]
 1e0:	str	x10, [x9, #88]
 1e4:	b	1f0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1f0>
 1e8:	ldr	q0, [x11]
 1ec:	stur	q0, [x9, #88]
 1f0:	ldur	x10, [x8, #-8]
 1f4:	add	x9, x23, x26
 1f8:	add	x11, x9, #0x80
 1fc:	str	x10, [x9, #80]
 200:	ldr	x10, [x8, #16]
 204:	stp	x8, xzr, [x8, #-16]
 208:	strb	wzr, [x8]
 20c:	stp	x10, x11, [x9, #104]
 210:	ldr	x10, [x8, #24]
 214:	add	x8, x8, #0x28
 218:	cmp	x10, x8
 21c:	b.eq	234 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x234>  // b.none
 220:	str	x10, [x9, #112]
 224:	add	x10, x21, x26
 228:	ldr	x10, [x10, #56]
 22c:	str	x10, [x9, #128]
 230:	b	23c <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x23c>
 234:	ldr	q0, [x10]
 238:	str	q0, [x9, #128]
 23c:	ldur	x9, [x8, #-8]
 240:	add	x10, x23, x26
 244:	sub	x27, x8, #0x28
 248:	str	x9, [x10, #120]
 24c:	ldur	x0, [x8, #-56]
 250:	stp	x8, xzr, [x8, #-16]
 254:	strb	wzr, [x8]
 258:	cmp	x0, x27
 25c:	b.eq	1a8 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1a8>  // b.none
 260:	bl	0 <_ZdlPv>
 264:	b	1a8 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1a8>
 268:	add	x8, x23, x26
 26c:	add	x21, x8, #0x48
 270:	cbz	x20, 27c <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x27c>
 274:	mov	x0, x20
 278:	bl	0 <_ZdlPv>
 27c:	mov	w8, #0x48                  	// #72
 280:	madd	x8, x24, x8, x22
 284:	stp	x22, x21, [x19]
 288:	str	x8, [x19, #16]
 28c:	ldp	x20, x19, [sp, #80]
 290:	ldp	x22, x21, [sp, #64]
 294:	ldp	x24, x23, [sp, #48]
 298:	ldp	x26, x25, [sp, #32]
 29c:	ldr	x27, [sp, #16]
 2a0:	ldp	x29, x30, [sp], #96
 2a4:	ret
 2a8:	add	x21, x23, #0x48
 2ac:	cbnz	x20, 274 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x274>
 2b0:	b	27c <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x27c>
 2b4:	adrp	x0, 0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 2b8:	add	x0, x0, #0x0
 2bc:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0, #16]
  18:	mov	x21, x1
  1c:	mov	x19, x0
  20:	add	x20, x0, #0x8
  24:	cbz	x8, 68 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x68>
  28:	add	x1, x8, #0x20
  2c:	mov	x0, x21
  30:	mov	x22, x8
  34:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  38:	add	x8, x22, #0x10
  3c:	add	x9, x22, #0x18
  40:	tst	w0, #0x1
  44:	csel	x8, x8, x9, ne  // ne = any
  48:	ldr	x8, [x8]
  4c:	cbnz	x8, 28 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x28>
  50:	mov	x23, x22
  54:	tbz	w0, #0, 84 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x84>
  58:	ldr	x8, [x19, #24]
  5c:	cmp	x8, x22
  60:	b.ne	78 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x78>  // b.any
  64:	b	94 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x94>
  68:	mov	x22, x20
  6c:	ldr	x8, [x19, #24]
  70:	cmp	x8, x22
  74:	b.eq	94 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x94>  // b.none
  78:	mov	x0, x22
  7c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  80:	mov	x23, x0
  84:	add	x0, x23, #0x20
  88:	mov	x1, x21
  8c:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  90:	tbz	w0, #0, b4 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0xb4>
  94:	cbz	x22, bc <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0xbc>
  98:	cmp	x20, x22
  9c:	b.eq	c8 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0xc8>  // b.none
  a0:	add	x1, x22, #0x20
  a4:	mov	x0, x21
  a8:	bl	ab4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  ac:	mov	w24, w0
  b0:	b	cc <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0xcc>
  b4:	mov	x1, xzr
  b8:	b	180 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x180>
  bc:	mov	x23, xzr
  c0:	mov	x1, xzr
  c4:	b	180 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x180>
  c8:	mov	w24, #0x1                   	// #1
  cc:	mov	w0, #0x68                  	// #104
  d0:	bl	0 <_Znwm>
  d4:	add	x9, x0, #0x30
  d8:	str	x9, [x0, #32]
  dc:	mov	x8, x21
  e0:	ldr	x10, [x8], #16
  e4:	mov	x23, x0
  e8:	cmp	x10, x8
  ec:	b.eq	100 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x100>  // b.none
  f0:	str	x10, [x23, #32]
  f4:	ldr	x9, [x21, #16]
  f8:	str	x9, [x23, #48]
  fc:	b	108 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x108>
 100:	ldr	q0, [x10]
 104:	str	q0, [x9]
 108:	ldr	x10, [x21, #8]
 10c:	add	x9, x23, #0x58
 110:	str	x10, [x23, #40]
 114:	ldr	x10, [x21, #32]
 118:	stp	x8, xzr, [x21]
 11c:	strb	wzr, [x21, #16]
 120:	add	x8, x21, #0x38
 124:	stp	x10, x9, [x23, #64]
 128:	ldr	x10, [x21, #40]
 12c:	cmp	x10, x8
 130:	b.eq	144 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x144>  // b.none
 134:	str	x10, [x23, #72]
 138:	ldr	x9, [x21, #56]
 13c:	str	x9, [x23, #88]
 140:	b	14c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x14c>
 144:	ldr	q0, [x10]
 148:	str	q0, [x9]
 14c:	ldr	x9, [x21, #48]
 150:	and	w0, w24, #0x1
 154:	mov	x1, x23
 158:	mov	x2, x22
 15c:	mov	x3, x20
 160:	str	x9, [x23, #80]
 164:	stp	x8, xzr, [x21, #40]
 168:	strb	wzr, [x21, #56]
 16c:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 170:	ldr	x8, [x19, #40]
 174:	mov	w1, #0x1                   	// #1
 178:	add	x8, x8, #0x1
 17c:	str	x8, [x19, #40]
 180:	mov	x0, x23
 184:	ldp	x20, x19, [sp, #48]
 188:	ldp	x22, x21, [sp, #32]
 18c:	ldp	x24, x23, [sp, #16]
 190:	ldp	x29, x30, [sp], #64
 194:	ret

Disassembly of section .text._ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	ldp	x9, x8, [x0, #16]
  18:	sub	x9, x9, x8
  1c:	cmp	x9, #0x39
  20:	b.hi	38 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv+0x38>  // b.pmore
  24:	adrp	x1, 0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
  28:	add	x1, x1, #0x0
  2c:	mov	w2, #0x3a                  	// #58
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	b	64 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv+0x64>
  38:	adrp	x9, 0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
  3c:	add	x9, x9, #0x0
  40:	ldur	q0, [x9, #42]
  44:	ldp	q2, q1, [x9, #16]
  48:	ldr	q3, [x9]
  4c:	stur	q0, [x8, #42]
  50:	stp	q2, q1, [x8, #16]
  54:	str	q3, [x8]
  58:	ldr	x8, [x0, #24]
  5c:	add	x8, x8, #0x3a
  60:	str	x8, [x0, #24]
  64:	ldrb	w20, [x19, #48]
  68:	bl	0 <_ZN4llvm4dbgsEv>
  6c:	ldp	x9, x8, [x0, #16]
  70:	sub	x9, x9, x8
  74:	tbnz	w20, #0, 94 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv+0x94>
  78:	cmp	x9, #0x82
  7c:	b.hi	d4 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv+0xd4>  // b.pmore
  80:	adrp	x1, 0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x83                  	// #131
  8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  90:	bl	0 <abort>
  94:	cmp	x9, #0x26
  98:	b.hi	118 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv+0x118>  // b.pmore
  9c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
  a0:	add	x1, x1, #0x0
  a4:	mov	w2, #0x27                  	// #39
  a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  ac:	ldrb	w8, [x19, #48]
  b0:	tbz	w8, #0, 144 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv+0x144>
  b4:	ldr	x19, [x19]
  b8:	bl	0 <_ZN4llvm4dbgsEv>
  bc:	ldr	x8, [x19]
  c0:	mov	x1, x0
  c4:	mov	x0, x19
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	bl	0 <abort>
  d4:	adrp	x9, 0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
  d8:	add	x9, x9, #0x0
  dc:	ldp	q1, q0, [x9, #32]
  e0:	ldp	q2, q3, [x9]
  e4:	stp	q1, q0, [x8, #32]
  e8:	ldp	q0, q1, [x9, #96]
  ec:	stp	q2, q3, [x8]
  f0:	ldp	q2, q3, [x9, #64]
  f4:	mov	w9, #0x2964                	// #10596
  f8:	movk	w9, #0xa2e, lsl #16
  fc:	stur	w9, [x8, #127]
 100:	stp	q0, q1, [x8, #96]
 104:	stp	q2, q3, [x8, #64]
 108:	ldr	x8, [x0, #24]
 10c:	add	x8, x8, #0x83
 110:	str	x8, [x0, #24]
 114:	bl	0 <abort>
 118:	adrp	x9, 0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
 11c:	add	x9, x9, #0x0
 120:	ldur	x10, [x9, #31]
 124:	ldp	q1, q0, [x9]
 128:	stur	x10, [x8, #31]
 12c:	stp	q1, q0, [x8]
 130:	ldr	x8, [x0, #24]
 134:	add	x8, x8, #0x27
 138:	str	x8, [x0, #24]
 13c:	ldrb	w8, [x19, #48]
 140:	tbnz	w8, #0, b4 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv+0xb4>
 144:	adrp	x0, 0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
 148:	adrp	x1, 0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
 14c:	adrp	x3, 0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x281                 	// #641
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_:

0000000000000000 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_>:
   0:	sub	sp, sp, #0xd0
   4:	stp	x29, x30, [sp, #144]
   8:	stp	x24, x23, [sp, #160]
   c:	stp	x22, x21, [sp, #176]
  10:	stp	x20, x19, [sp, #192]
  14:	add	x29, sp, #0x90
  18:	mov	x20, x0
  1c:	mov	w0, #0xb0                  	// #176
  20:	mov	x21, x2
  24:	mov	x22, x1
  28:	mov	x19, x8
  2c:	bl	0 <_Znwm>
  30:	ldr	w23, [x20]
  34:	mov	x20, x0
  38:	add	x0, sp, #0x48
  3c:	mov	x1, x22
  40:	add	x24, sp, #0x48
  44:	bl	0 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  48:	mov	x0, sp
  4c:	mov	x1, x21
  50:	bl	0 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  54:	adrp	x8, 0 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  58:	ldr	x8, [x8]
  5c:	ldr	x9, [sp, #72]
  60:	add	x10, x20, #0x20
  64:	str	w23, [x20, #8]
  68:	add	x8, x8, #0x10
  6c:	str	x8, [x20]
  70:	add	x8, x24, #0x10
  74:	cmp	x9, x8
  78:	str	x10, [x20, #16]
  7c:	b.eq	90 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x90>  // b.none
  80:	ldr	x10, [sp, #88]
  84:	str	x9, [x20, #16]
  88:	str	x10, [x20, #32]
  8c:	b	98 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x98>
  90:	ldr	q0, [x9]
  94:	str	q0, [x10]
  98:	ldp	x12, x10, [sp, #104]
  9c:	ldr	x11, [sp, #80]
  a0:	stp	x8, xzr, [sp, #72]
  a4:	add	x8, sp, #0x48
  a8:	add	x8, x8, #0x38
  ac:	add	x9, x20, #0x48
  b0:	cmp	x10, x8
  b4:	strb	wzr, [sp, #88]
  b8:	str	x11, [x20, #24]
  bc:	stp	x12, x9, [x20, #48]
  c0:	b.eq	d4 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0xd4>  // b.none
  c4:	ldr	x9, [sp, #128]
  c8:	str	x10, [x20, #56]
  cc:	str	x9, [x20, #72]
  d0:	b	dc <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0xdc>
  d4:	ldr	q0, [x10]
  d8:	str	q0, [x9]
  dc:	ldr	x10, [sp]
  e0:	ldr	x11, [sp, #120]
  e4:	stp	x8, xzr, [sp, #112]
  e8:	mov	w8, #0x1                   	// #1
  ec:	mov	x12, sp
  f0:	strb	w8, [x20, #88]
  f4:	add	x8, x12, #0x10
  f8:	add	x9, x20, #0x70
  fc:	cmp	x10, x8
 100:	strb	wzr, [sp, #128]
 104:	str	x11, [x20, #64]
 108:	str	x9, [x20, #96]
 10c:	b.eq	120 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x120>  // b.none
 110:	ldr	x9, [sp, #16]
 114:	str	x10, [x20, #96]
 118:	str	x9, [x20, #112]
 11c:	b	128 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x128>
 120:	ldr	q0, [x10]
 124:	str	q0, [x9]
 128:	ldp	x11, x9, [sp, #32]
 12c:	ldr	x10, [sp, #8]
 130:	mov	x12, sp
 134:	add	x12, x12, #0x38
 138:	stp	x8, xzr, [sp]
 13c:	add	x8, x20, #0x98
 140:	cmp	x9, x12
 144:	strb	wzr, [sp, #16]
 148:	str	x10, [x20, #104]
 14c:	stp	x11, x8, [x20, #128]
 150:	b.eq	164 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x164>  // b.none
 154:	ldr	x8, [sp, #56]
 158:	str	x9, [x20, #136]
 15c:	str	x8, [x20, #152]
 160:	b	16c <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x16c>
 164:	ldr	q0, [x9]
 168:	str	q0, [x8]
 16c:	ldr	x8, [sp, #48]
 170:	mov	w9, #0x1                   	// #1
 174:	strb	w9, [x20, #168]
 178:	str	x20, [x19]
 17c:	str	x8, [x20, #144]
 180:	ldp	x20, x19, [sp, #192]
 184:	ldp	x22, x21, [sp, #176]
 188:	ldp	x24, x23, [sp, #160]
 18c:	ldp	x29, x30, [sp, #144]
 190:	add	sp, sp, #0xd0
 194:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0, #24]
  18:	mov	x19, x0
  1c:	mov	x23, x1
  20:	mov	x20, x2
  24:	cmp	x8, x1
  28:	b.ne	38 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_+0x38>  // b.any
  2c:	add	x21, x19, #0x8
  30:	cmp	x20, x21
  34:	b.eq	b0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_+0xb0>  // b.none
  38:	cmp	x23, x20
  3c:	b.eq	c4 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_+0xc4>  // b.none
  40:	add	x21, x19, #0x8
  44:	b	68 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_+0x68>
  48:	mov	x0, x23
  4c:	bl	0 <_ZdlPv>
  50:	ldr	x8, [x19, #40]
  54:	cmp	x22, x20
  58:	mov	x23, x22
  5c:	sub	x8, x8, #0x1
  60:	str	x8, [x19, #40]
  64:	b.eq	c4 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_+0xc4>  // b.none
  68:	mov	x0, x23
  6c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  70:	mov	x22, x0
  74:	mov	x0, x23
  78:	mov	x1, x21
  7c:	bl	0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_>
  80:	mov	x23, x0
  84:	ldr	x0, [x0, #72]
  88:	add	x8, x23, #0x58
  8c:	cmp	x0, x8
  90:	b.eq	98 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_+0x98>  // b.none
  94:	bl	0 <_ZdlPv>
  98:	ldr	x0, [x23, #32]
  9c:	add	x8, x23, #0x30
  a0:	cmp	x0, x8
  a4:	b.eq	48 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_+0x48>  // b.none
  a8:	bl	0 <_ZdlPv>
  ac:	b	48 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_+0x48>
  b0:	ldr	x1, [x19, #16]
  b4:	mov	x0, x19
  b8:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_>
  bc:	stp	xzr, x21, [x19, #16]
  c0:	stp	x21, xzr, [x19, #32]
  c4:	ldp	x20, x19, [sp, #48]
  c8:	ldp	x22, x21, [sp, #32]
  cc:	ldr	x23, [sp, #16]
  d0:	ldp	x29, x30, [sp], #64
  d4:	ret

Disassembly of section .text._ZN5clang17DiagnosticOptionsD2Ev:

0000000000000000 <_ZN5clang17DiagnosticOptionsD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x20, x21, [x0, #160]
  14:	mov	x19, x0
  18:	cmp	x20, x21
  1c:	b.ne	9c <_ZN5clang17DiagnosticOptionsD2Ev+0x9c>  // b.any
  20:	cbz	x20, 2c <_ZN5clang17DiagnosticOptionsD2Ev+0x2c>
  24:	mov	x0, x20
  28:	bl	0 <_ZdlPv>
  2c:	ldp	x20, x21, [x19, #136]
  30:	cmp	x20, x21
  34:	b.ne	bc <_ZN5clang17DiagnosticOptionsD2Ev+0xbc>  // b.any
  38:	cbz	x20, 44 <_ZN5clang17DiagnosticOptionsD2Ev+0x44>
  3c:	mov	x0, x20
  40:	bl	0 <_ZdlPv>
  44:	ldp	x20, x21, [x19, #112]
  48:	cmp	x20, x21
  4c:	b.ne	dc <_ZN5clang17DiagnosticOptionsD2Ev+0xdc>  // b.any
  50:	cbz	x20, 5c <_ZN5clang17DiagnosticOptionsD2Ev+0x5c>
  54:	mov	x0, x20
  58:	bl	0 <_ZdlPv>
  5c:	ldr	x0, [x19, #80]
  60:	add	x8, x19, #0x60
  64:	cmp	x0, x8
  68:	b.eq	70 <_ZN5clang17DiagnosticOptionsD2Ev+0x70>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	ldr	x0, [x19, #48]
  74:	add	x8, x19, #0x40
  78:	cmp	x0, x8
  7c:	b.eq	114 <_ZN5clang17DiagnosticOptionsD2Ev+0x114>  // b.none
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	b	0 <_ZdlPv>
  90:	add	x20, x20, #0x10
  94:	cmp	x20, x21
  98:	b.eq	f0 <_ZN5clang17DiagnosticOptionsD2Ev+0xf0>  // b.none
  9c:	ldr	x0, [x20], #16
  a0:	cmp	x0, x20
  a4:	b.eq	90 <_ZN5clang17DiagnosticOptionsD2Ev+0x90>  // b.none
  a8:	bl	0 <_ZdlPv>
  ac:	b	90 <_ZN5clang17DiagnosticOptionsD2Ev+0x90>
  b0:	add	x20, x20, #0x10
  b4:	cmp	x20, x21
  b8:	b.eq	fc <_ZN5clang17DiagnosticOptionsD2Ev+0xfc>  // b.none
  bc:	ldr	x0, [x20], #16
  c0:	cmp	x0, x20
  c4:	b.eq	b0 <_ZN5clang17DiagnosticOptionsD2Ev+0xb0>  // b.none
  c8:	bl	0 <_ZdlPv>
  cc:	b	b0 <_ZN5clang17DiagnosticOptionsD2Ev+0xb0>
  d0:	add	x20, x20, #0x10
  d4:	cmp	x20, x21
  d8:	b.eq	108 <_ZN5clang17DiagnosticOptionsD2Ev+0x108>  // b.none
  dc:	ldr	x0, [x20], #16
  e0:	cmp	x0, x20
  e4:	b.eq	d0 <_ZN5clang17DiagnosticOptionsD2Ev+0xd0>  // b.none
  e8:	bl	0 <_ZdlPv>
  ec:	b	d0 <_ZN5clang17DiagnosticOptionsD2Ev+0xd0>
  f0:	ldr	x20, [x19, #160]
  f4:	cbnz	x20, 24 <_ZN5clang17DiagnosticOptionsD2Ev+0x24>
  f8:	b	2c <_ZN5clang17DiagnosticOptionsD2Ev+0x2c>
  fc:	ldr	x20, [x19, #136]
 100:	cbnz	x20, 3c <_ZN5clang17DiagnosticOptionsD2Ev+0x3c>
 104:	b	44 <_ZN5clang17DiagnosticOptionsD2Ev+0x44>
 108:	ldr	x20, [x19, #112]
 10c:	cbnz	x20, 54 <_ZN5clang17DiagnosticOptionsD2Ev+0x54>
 110:	b	5c <_ZN5clang17DiagnosticOptionsD2Ev+0x5c>
 114:	ldp	x20, x19, [sp, #32]
 118:	ldr	x21, [sp, #16]
 11c:	ldp	x29, x30, [sp], #48
 120:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	mov	w0, #0x70                  	// #112
  20:	mov	x21, x3
  24:	mov	x22, x1
  28:	bl	0 <_Znwm>
  2c:	ldr	x8, [x21]
  30:	add	x25, x0, #0x30
  34:	mov	x21, x0
  38:	str	x25, [x21, #32]!
  3c:	ldp	x23, x24, [x8]
  40:	mov	x19, x0
  44:	cbnz	x23, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x4c>
  48:	cbnz	x24, 1a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x1a8>
  4c:	cmp	x24, #0x10
  50:	str	x24, [x29, #24]
  54:	b.cc	7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x7c>  // b.lo, b.ul, b.last
  58:	add	x1, x29, #0x18
  5c:	mov	x0, x21
  60:	mov	x2, xzr
  64:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  68:	ldr	x8, [x29, #24]
  6c:	str	x0, [x21]
  70:	str	x8, [x25]
  74:	cbnz	x24, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x84>
  78:	b	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xa4>
  7c:	mov	x0, x25
  80:	cbz	x24, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xa4>
  84:	cmp	x24, #0x1
  88:	b.ne	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x98>  // b.any
  8c:	ldrb	w8, [x23]
  90:	strb	w8, [x0]
  94:	b	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xa4>
  98:	mov	x1, x23
  9c:	mov	x2, x24
  a0:	bl	0 <memcpy>
  a4:	ldr	x8, [x29, #24]
  a8:	ldr	x9, [x19, #32]
  ac:	mov	x24, x19
  b0:	mov	x0, x20
  b4:	str	x8, [x19, #40]
  b8:	strb	wzr, [x9, x8]
  bc:	str	xzr, [x24, #64]!
  c0:	mov	x8, x24
  c4:	str	xzr, [x8, #8]!
  c8:	mov	x1, x22
  cc:	mov	x2, x21
  d0:	stp	xzr, x8, [x24, #16]
  d4:	stp	x8, xzr, [x24, #32]
  d8:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>
  dc:	mov	x23, x0
  e0:	cbz	x1, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xf4>
  e4:	mov	x22, x1
  e8:	cbz	x23, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x11c>
  ec:	mov	w0, #0x1                   	// #1
  f0:	b	16c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x16c>
  f4:	ldr	x1, [x19, #80]
  f8:	mov	x0, x24
  fc:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>
 100:	ldr	x0, [x19, #32]
 104:	cmp	x0, x25
 108:	b.eq	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x110>  // b.none
 10c:	bl	0 <_ZdlPv>
 110:	mov	x0, x19
 114:	bl	0 <_ZdlPv>
 118:	b	18c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x18c>
 11c:	add	x8, x20, #0x8
 120:	cmp	x8, x22
 124:	b.eq	ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xec>  // b.none
 128:	ldr	x8, [x19, #40]
 12c:	ldr	x9, [x22, #40]
 130:	subs	x23, x8, x9
 134:	csel	x2, x9, x8, hi  // hi = pmore
 138:	cbz	x2, 14c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x14c>
 13c:	ldr	x1, [x22, #32]
 140:	ldr	x0, [x21]
 144:	bl	0 <memcmp>
 148:	cbnz	w0, 168 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x168>
 14c:	mov	w0, #0x7fffffff            	// #2147483647
 150:	cmp	x23, x0
 154:	b.gt	168 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x168>
 158:	mov	x8, #0xffffffff80000000    	// #-2147483648
 15c:	cmp	x23, x8
 160:	mov	w8, #0x80000000            	// #-2147483648
 164:	csel	w0, w23, w8, gt
 168:	lsr	w0, w0, #31
 16c:	add	x3, x20, #0x8
 170:	mov	x1, x19
 174:	mov	x2, x22
 178:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 17c:	ldr	x8, [x20, #40]
 180:	mov	x23, x19
 184:	add	x8, x8, #0x1
 188:	str	x8, [x20, #40]
 18c:	mov	x0, x23
 190:	ldp	x20, x19, [sp, #64]
 194:	ldp	x22, x21, [sp, #48]
 198:	ldp	x24, x23, [sp, #32]
 19c:	ldr	x25, [sp, #16]
 1a0:	ldp	x29, x30, [sp], #80
 1a4:	ret
 1a8:	adrp	x0, 0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>
 1ac:	add	x0, x0, #0x0
 1b0:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	add	x8, x0, #0x8
  1c:	mov	x21, x0
  20:	cmp	x8, x1
  24:	mov	x20, x2
  28:	b.eq	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xa0>  // b.none
  2c:	ldr	x23, [x20, #8]
  30:	ldr	x24, [x1, #40]
  34:	mov	x19, x1
  38:	subs	x25, x23, x24
  3c:	csel	x22, x24, x23, hi  // hi = pmore
  40:	cbz	x22, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x60>
  44:	ldr	x1, [x19, #32]
  48:	ldr	x0, [x20]
  4c:	mov	x2, x22
  50:	bl	0 <memcmp>
  54:	cbz	w0, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x60>
  58:	tbz	w0, #31, 80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x80>
  5c:	b	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x120>
  60:	mov	w8, #0x7fffffff            	// #2147483647
  64:	cmp	x25, x8
  68:	b.gt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x80>
  6c:	mov	x8, #0xffffffff80000000    	// #-2147483648
  70:	cmp	x25, x8
  74:	mov	w8, #0x80000000            	// #-2147483648
  78:	csel	w0, w25, w8, gt
  7c:	tbnz	w0, #31, 120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x120>
  80:	cbz	x22, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xf4>
  84:	ldr	x1, [x20]
  88:	ldr	x0, [x19, #32]
  8c:	mov	x2, x22
  90:	bl	0 <memcmp>
  94:	cbz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xf4>
  98:	tbz	w0, #31, 118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x118>
  9c:	b	190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x190>
  a0:	ldr	x8, [x21, #40]
  a4:	cbz	x8, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
  a8:	ldr	x22, [x21, #32]
  ac:	ldr	x9, [x20, #8]
  b0:	ldr	x8, [x22, #40]
  b4:	subs	x19, x8, x9
  b8:	csel	x2, x9, x8, hi  // hi = pmore
  bc:	cbz	x2, d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xd0>
  c0:	ldr	x1, [x20]
  c4:	ldr	x0, [x22, #32]
  c8:	bl	0 <memcmp>
  cc:	cbnz	w0, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xec>
  d0:	mov	w8, #0x7fffffff            	// #2147483647
  d4:	cmp	x19, x8
  d8:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
  dc:	mov	x8, #0xffffffff80000000    	// #-2147483648
  e0:	cmp	x19, x8
  e4:	mov	w8, #0x80000000            	// #-2147483648
  e8:	csel	w0, w19, w8, gt
  ec:	tbz	w0, #31, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
  f0:	b	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x21c>
  f4:	sub	x8, x24, x23
  f8:	mov	w9, #0x7fffffff            	// #2147483647
  fc:	cmp	x8, x9
 100:	b.gt	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x118>
 104:	mov	x9, #0xffffffff80000000    	// #-2147483648
 108:	cmp	x8, x9
 10c:	mov	w9, #0x80000000            	// #-2147483648
 110:	csel	w0, w8, w9, gt
 114:	tbnz	w0, #31, 190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x190>
 118:	mov	x22, xzr
 11c:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1fc>
 120:	ldr	x22, [x21, #24]
 124:	cmp	x22, x19
 128:	b.eq	224 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x224>  // b.none
 12c:	mov	x0, x19
 130:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 134:	ldr	x8, [x0, #40]
 138:	mov	x22, x0
 13c:	subs	x24, x8, x23
 140:	csel	x2, x23, x8, hi  // hi = pmore
 144:	cbz	x2, 158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x158>
 148:	ldr	x1, [x20]
 14c:	ldr	x0, [x22, #32]
 150:	bl	0 <memcmp>
 154:	cbnz	w0, 174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x174>
 158:	mov	w8, #0x7fffffff            	// #2147483647
 15c:	cmp	x24, x8
 160:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
 164:	mov	x8, #0xffffffff80000000    	// #-2147483648
 168:	cmp	x24, x8
 16c:	mov	w8, #0x80000000            	// #-2147483648
 170:	csel	w0, w24, w8, gt
 174:	tbz	w0, #31, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
 178:	ldr	x8, [x22, #24]
 17c:	cmp	x8, #0x0
 180:	csel	x8, xzr, x19, eq  // eq = none
 184:	csel	x22, x22, x19, eq  // eq = none
 188:	mov	x19, x8
 18c:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1fc>
 190:	ldr	x22, [x21, #32]
 194:	cmp	x22, x19
 198:	b.eq	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x21c>  // b.none
 19c:	mov	x0, x19
 1a0:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 1a4:	ldr	x8, [x0, #40]
 1a8:	mov	x22, x0
 1ac:	subs	x24, x23, x8
 1b0:	csel	x2, x8, x23, hi  // hi = pmore
 1b4:	cbz	x2, 1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1c8>
 1b8:	ldr	x1, [x22, #32]
 1bc:	ldr	x0, [x20]
 1c0:	bl	0 <memcmp>
 1c4:	cbnz	w0, 1e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e4>
 1c8:	mov	w8, #0x7fffffff            	// #2147483647
 1cc:	cmp	x24, x8
 1d0:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
 1d4:	mov	x8, #0xffffffff80000000    	// #-2147483648
 1d8:	cmp	x24, x8
 1dc:	mov	w8, #0x80000000            	// #-2147483648
 1e0:	csel	w0, w24, w8, gt
 1e4:	tbnz	w0, #31, 22c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x22c>
 1e8:	mov	x0, x21
 1ec:	mov	x1, x20
 1f0:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_>
 1f4:	mov	x19, x0
 1f8:	mov	x22, x1
 1fc:	mov	x0, x19
 200:	mov	x1, x22
 204:	ldp	x20, x19, [sp, #64]
 208:	ldp	x22, x21, [sp, #48]
 20c:	ldp	x24, x23, [sp, #32]
 210:	ldr	x25, [sp, #16]
 214:	ldp	x29, x30, [sp], #80
 218:	ret
 21c:	mov	x19, xzr
 220:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1fc>
 224:	mov	x19, x22
 228:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1fc>
 22c:	ldr	x8, [x19, #24]
 230:	cmp	x8, #0x0
 234:	csel	x8, xzr, x22, eq  // eq = none
 238:	csel	x22, x19, x22, eq  // eq = none
 23c:	mov	x19, x8
 240:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1fc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0, #16]
  1c:	mov	x21, x0
  20:	mov	x20, x1
  24:	cbz	x9, ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xac>
  28:	ldp	x22, x23, [x20]
  2c:	mov	w24, #0x80000000            	// #-2147483648
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x4c>
  38:	tbnz	w0, #31, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x84>
  3c:	mov	w8, wzr
  40:	add	x9, x19, #0x18
  44:	ldr	x9, [x9]
  48:	cbz	x9, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x94>
  4c:	ldr	x8, [x9, #40]
  50:	mov	x19, x9
  54:	subs	x26, x23, x8
  58:	csel	x2, x8, x23, hi  // hi = pmore
  5c:	cbz	x2, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x70>
  60:	ldr	x1, [x19, #32]
  64:	mov	x0, x22
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x38>
  70:	cmp	x26, x24
  74:	b.ge	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x3c>  // b.tcont
  78:	cmp	x26, x25
  7c:	csel	w0, w26, w24, gt
  80:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x38>
  84:	add	x9, x19, #0x10
  88:	mov	w8, #0x1                   	// #1
  8c:	ldr	x9, [x9]
  90:	cbnz	x9, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x4c>
  94:	mov	x22, x19
  98:	cbz	w8, c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xc8>
  9c:	ldr	x8, [x21, #24]
  a0:	cmp	x8, x19
  a4:	b.ne	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xbc>  // b.any
  a8:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x11c>
  ac:	add	x19, x21, #0x8
  b0:	ldr	x8, [x21, #24]
  b4:	cmp	x8, x19
  b8:	b.eq	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x11c>  // b.none
  bc:	mov	x0, x19
  c0:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  c4:	mov	x22, x0
  c8:	ldr	x8, [x22, #40]
  cc:	ldr	x9, [x20, #8]
  d0:	subs	x21, x8, x9
  d4:	csel	x2, x9, x8, hi  // hi = pmore
  d8:	cbz	x2, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xf4>
  dc:	ldr	x1, [x20]
  e0:	ldr	x0, [x22, #32]
  e4:	bl	0 <memcmp>
  e8:	cbz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xf4>
  ec:	tbz	w0, #31, 114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x114>
  f0:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x11c>
  f4:	mov	w8, #0x7fffffff            	// #2147483647
  f8:	cmp	x21, x8
  fc:	b.gt	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x114>
 100:	mov	x8, #0xffffffff80000000    	// #-2147483648
 104:	cmp	x21, x8
 108:	mov	w8, #0x80000000            	// #-2147483648
 10c:	csel	w0, w21, w8, gt
 110:	tbnz	w0, #31, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x11c>
 114:	mov	x19, xzr
 118:	b	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x120>
 11c:	mov	x22, xzr
 120:	mov	x0, x22
 124:	mov	x1, x19
 128:	ldp	x20, x19, [sp, #64]
 12c:	ldp	x22, x21, [sp, #48]
 130:	ldp	x24, x23, [sp, #32]
 134:	ldp	x26, x25, [sp, #16]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret
