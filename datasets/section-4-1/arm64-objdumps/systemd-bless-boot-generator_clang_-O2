
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-bless-boot-generator_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004008e0 <_init>:
  4008e0:	stp	x29, x30, [sp, #-16]!
  4008e4:	mov	x29, sp
  4008e8:	bl	400a68 <call_weak_fn>
  4008ec:	ldp	x29, x30, [sp], #16
  4008f0:	ret

Disassembly of section .plt:

00000000004008f8 <__libc_start_main@plt-0x20>:
  4008f8:	stp	x16, x30, [sp, #-16]!
  4008fc:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  400900:	ldr	x17, [x16, #3960]
  400904:	add	x16, x16, #0xf78
  400908:	br	x17
  40090c:	nop
  400910:	nop
  400914:	nop

0000000000400918 <__libc_start_main@plt>:
  400918:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  40091c:	ldr	x17, [x16, #3968]
  400920:	add	x16, x16, #0xf80
  400924:	br	x17

0000000000400928 <abort@plt>:
  400928:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  40092c:	ldr	x17, [x16, #3976]
  400930:	add	x16, x16, #0xf88
  400934:	br	x17

0000000000400938 <__gmon_start__@plt>:
  400938:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  40093c:	ldr	x17, [x16, #3984]
  400940:	add	x16, x16, #0xf90
  400944:	br	x17

0000000000400948 <log_setup_generator@plt>:
  400948:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  40094c:	ldr	x17, [x16, #3992]
  400950:	add	x16, x16, #0xf98
  400954:	br	x17

0000000000400958 <log_get_max_level_realm@plt>:
  400958:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  40095c:	ldr	x17, [x16, #4000]
  400960:	add	x16, x16, #0xfa0
  400964:	br	x17

0000000000400968 <log_internal_realm@plt>:
  400968:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  40096c:	ldr	x17, [x16, #4008]
  400970:	add	x16, x16, #0xfa8
  400974:	br	x17

0000000000400978 <in_initrd@plt>:
  400978:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  40097c:	ldr	x17, [x16, #4016]
  400980:	add	x16, x16, #0xfb0
  400984:	br	x17

0000000000400988 <detect_container@plt>:
  400988:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  40098c:	ldr	x17, [x16, #4024]
  400990:	add	x16, x16, #0xfb8
  400994:	br	x17

0000000000400998 <is_efi_boot@plt>:
  400998:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  40099c:	ldr	x17, [x16, #4032]
  4009a0:	add	x16, x16, #0xfc0
  4009a4:	br	x17

00000000004009a8 <access@plt>:
  4009a8:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  4009ac:	ldr	x17, [x16, #4040]
  4009b0:	add	x16, x16, #0xfc8
  4009b4:	br	x17

00000000004009b8 <strlen@plt>:
  4009b8:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  4009bc:	ldr	x17, [x16, #4048]
  4009c0:	add	x16, x16, #0xfd0
  4009c4:	br	x17

00000000004009c8 <stpcpy@plt>:
  4009c8:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  4009cc:	ldr	x17, [x16, #4056]
  4009d0:	add	x16, x16, #0xfd8
  4009d4:	br	x17

00000000004009d8 <__errno_location@plt>:
  4009d8:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  4009dc:	ldr	x17, [x16, #4064]
  4009e0:	add	x16, x16, #0xfe0
  4009e4:	br	x17

00000000004009e8 <mkdir_parents@plt>:
  4009e8:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  4009ec:	ldr	x17, [x16, #4072]
  4009f0:	add	x16, x16, #0xfe8
  4009f4:	br	x17

00000000004009f8 <symlink@plt>:
  4009f8:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  4009fc:	ldr	x17, [x16, #4080]
  400a00:	add	x16, x16, #0xff0
  400a04:	br	x17

0000000000400a08 <log_assert_failed_realm@plt>:
  400a08:	adrp	x16, 41f000 <__FRAME_END__+0x1de20>
  400a0c:	ldr	x17, [x16, #4088]
  400a10:	add	x16, x16, #0xff8
  400a14:	br	x17

Disassembly of section .text:

0000000000400a18 <_start>:
  400a18:	mov	x29, #0x0                   	// #0
  400a1c:	mov	x30, #0x0                   	// #0
  400a20:	mov	x5, x0
  400a24:	ldr	x1, [sp]
  400a28:	add	x2, sp, #0x8
  400a2c:	mov	x6, sp
  400a30:	movz	x0, #0x0, lsl #48
  400a34:	movk	x0, #0x0, lsl #32
  400a38:	movk	x0, #0x40, lsl #16
  400a3c:	movk	x0, #0xb24
  400a40:	movz	x3, #0x0, lsl #48
  400a44:	movk	x3, #0x0, lsl #32
  400a48:	movk	x3, #0x40, lsl #16
  400a4c:	movk	x3, #0xe08
  400a50:	movz	x4, #0x0, lsl #48
  400a54:	movk	x4, #0x0, lsl #32
  400a58:	movk	x4, #0x40, lsl #16
  400a5c:	movk	x4, #0xe88
  400a60:	bl	400918 <__libc_start_main@plt>
  400a64:	bl	400928 <abort@plt>

0000000000400a68 <call_weak_fn>:
  400a68:	adrp	x0, 41f000 <__FRAME_END__+0x1de20>
  400a6c:	ldr	x0, [x0, #3936]
  400a70:	cbz	x0, 400a78 <call_weak_fn+0x10>
  400a74:	b	400938 <__gmon_start__@plt>
  400a78:	ret
  400a7c:	udf	#0

0000000000400a80 <deregister_tm_clones>:
  400a80:	adrp	x0, 420000 <arg_dest>
  400a84:	add	x0, x0, #0x0
  400a88:	adrp	x1, 420000 <arg_dest>
  400a8c:	add	x1, x1, #0x0
  400a90:	cmp	x1, x0
  400a94:	b.eq	400aac <deregister_tm_clones+0x2c>  // b.none
  400a98:	adrp	x1, 400000 <_init-0x8e0>
  400a9c:	ldr	x1, [x1, #3744]
  400aa0:	cbz	x1, 400aac <deregister_tm_clones+0x2c>
  400aa4:	mov	x16, x1
  400aa8:	br	x16
  400aac:	ret

0000000000400ab0 <register_tm_clones>:
  400ab0:	adrp	x0, 420000 <arg_dest>
  400ab4:	add	x0, x0, #0x0
  400ab8:	adrp	x1, 420000 <arg_dest>
  400abc:	add	x1, x1, #0x0
  400ac0:	sub	x1, x1, x0
  400ac4:	lsr	x2, x1, #63
  400ac8:	add	x1, x2, x1, asr #3
  400acc:	cmp	xzr, x1, asr #1
  400ad0:	asr	x1, x1, #1
  400ad4:	b.eq	400aec <register_tm_clones+0x3c>  // b.none
  400ad8:	adrp	x2, 400000 <_init-0x8e0>
  400adc:	ldr	x2, [x2, #3752]
  400ae0:	cbz	x2, 400aec <register_tm_clones+0x3c>
  400ae4:	mov	x16, x2
  400ae8:	br	x16
  400aec:	ret

0000000000400af0 <__do_global_dtors_aux>:
  400af0:	stp	x29, x30, [sp, #-32]!
  400af4:	mov	x29, sp
  400af8:	str	x19, [sp, #16]
  400afc:	adrp	x19, 420000 <arg_dest>
  400b00:	ldrb	w0, [x19, #8]
  400b04:	cbnz	w0, 400b14 <__do_global_dtors_aux+0x24>
  400b08:	bl	400a80 <deregister_tm_clones>
  400b0c:	mov	w0, #0x1                   	// #1
  400b10:	strb	w0, [x19, #8]
  400b14:	ldr	x19, [sp, #16]
  400b18:	ldp	x29, x30, [sp], #32
  400b1c:	ret

0000000000400b20 <frame_dummy>:
  400b20:	b	400ab0 <register_tm_clones>

0000000000400b24 <main>:
  400b24:	stp	x29, x30, [sp, #-32]!
  400b28:	stp	x20, x19, [sp, #16]
  400b2c:	mov	x29, sp
  400b30:	mov	x19, x1
  400b34:	mov	w20, w0
  400b38:	bl	400948 <log_setup_generator@plt>
  400b3c:	cmp	w20, #0x2
  400b40:	b.lt	400b8c <main+0x68>  // b.tstop
  400b44:	cmp	w20, #0x4
  400b48:	b.eq	400b8c <main+0x68>  // b.none
  400b4c:	mov	w0, wzr
  400b50:	bl	400958 <log_get_max_level_realm@plt>
  400b54:	cmp	w0, #0x3
  400b58:	b.lt	400b84 <main+0x60>  // b.tstop
  400b5c:	adrp	x2, 400000 <_init-0x8e0>
  400b60:	adrp	x4, 400000 <_init-0x8e0>
  400b64:	adrp	x5, 400000 <_init-0x8e0>
  400b68:	add	x2, x2, #0xeb3
  400b6c:	add	x4, x4, #0xed3
  400b70:	add	x5, x5, #0xed8
  400b74:	mov	w0, #0x3                   	// #3
  400b78:	mov	w3, #0x1c                  	// #28
  400b7c:	mov	w1, wzr
  400b80:	bl	400968 <log_internal_realm@plt>
  400b84:	mov	w0, #0x1                   	// #1
  400b88:	b	400ce0 <main+0x1bc>
  400b8c:	cmp	w20, #0x2
  400b90:	b.lt	400ba0 <main+0x7c>  // b.tstop
  400b94:	ldr	x8, [x19, #16]
  400b98:	adrp	x9, 420000 <arg_dest>
  400b9c:	str	x8, [x9]
  400ba0:	bl	400978 <in_initrd@plt>
  400ba4:	tbz	w0, #0, 400be0 <main+0xbc>
  400ba8:	mov	w0, wzr
  400bac:	bl	400958 <log_get_max_level_realm@plt>
  400bb0:	cmp	w0, #0x7
  400bb4:	mov	w0, wzr
  400bb8:	b.lt	400ce0 <main+0x1bc>  // b.tstop
  400bbc:	adrp	x2, 400000 <_init-0x8e0>
  400bc0:	adrp	x4, 400000 <_init-0x8e0>
  400bc4:	adrp	x5, 400000 <_init-0x8e0>
  400bc8:	add	x2, x2, #0xeb3
  400bcc:	add	x4, x4, #0xed3
  400bd0:	add	x5, x5, #0xf02
  400bd4:	mov	w0, #0x7                   	// #7
  400bd8:	mov	w3, #0x24                  	// #36
  400bdc:	b	400cd4 <main+0x1b0>
  400be0:	bl	400988 <detect_container@plt>
  400be4:	cmp	w0, #0x1
  400be8:	b.lt	400c24 <main+0x100>  // b.tstop
  400bec:	mov	w0, wzr
  400bf0:	bl	400958 <log_get_max_level_realm@plt>
  400bf4:	cmp	w0, #0x7
  400bf8:	mov	w0, wzr
  400bfc:	b.lt	400ce0 <main+0x1bc>  // b.tstop
  400c00:	adrp	x2, 400000 <_init-0x8e0>
  400c04:	adrp	x4, 400000 <_init-0x8e0>
  400c08:	adrp	x5, 400000 <_init-0x8e0>
  400c0c:	add	x2, x2, #0xeb3
  400c10:	add	x4, x4, #0xed3
  400c14:	add	x5, x5, #0xf2d
  400c18:	mov	w0, #0x7                   	// #7
  400c1c:	mov	w3, #0x29                  	// #41
  400c20:	b	400cd4 <main+0x1b0>
  400c24:	bl	400998 <is_efi_boot@plt>
  400c28:	tbz	w0, #0, 400ca0 <main+0x17c>
  400c2c:	adrp	x0, 400000 <_init-0x8e0>
  400c30:	add	x0, x0, #0xf7e
  400c34:	mov	w1, wzr
  400c38:	bl	4009a8 <access@plt>
  400c3c:	tbnz	w0, #31, 400cf0 <main+0x1cc>
  400c40:	adrp	x8, 420000 <arg_dest>
  400c44:	ldr	x20, [x8]
  400c48:	cbz	x20, 400d38 <main+0x214>
  400c4c:	mov	x0, x20
  400c50:	bl	4009b8 <strlen@plt>
  400c54:	add	x8, x0, #0x2f
  400c58:	cmp	x8, #0x400, lsl #12
  400c5c:	b.hi	400de4 <main+0x2c0>  // b.pmore
  400c60:	add	x8, x8, #0xf
  400c64:	mov	x9, sp
  400c68:	and	x8, x8, #0xfffffffffffffff0
  400c6c:	sub	x19, x9, x8
  400c70:	mov	sp, x19
  400c74:	mov	x0, x19
  400c78:	mov	x1, x20
  400c7c:	bl	4009c8 <stpcpy@plt>
  400c80:	adrp	x8, 401000 <_fini+0x174>
  400c84:	add	x8, x8, #0x4d
  400c88:	ldp	q0, q1, [x8]
  400c8c:	ldur	q2, [x8, #31]
  400c90:	add	x8, x0, #0x2e
  400c94:	stp	q0, q1, [x0]
  400c98:	stur	q2, [x0, #31]
  400c9c:	b	400d44 <main+0x220>
  400ca0:	mov	w0, wzr
  400ca4:	bl	400958 <log_get_max_level_realm@plt>
  400ca8:	cmp	w0, #0x7
  400cac:	mov	w0, wzr
  400cb0:	b.lt	400ce0 <main+0x1bc>  // b.tstop
  400cb4:	adrp	x2, 400000 <_init-0x8e0>
  400cb8:	adrp	x4, 400000 <_init-0x8e0>
  400cbc:	adrp	x5, 400000 <_init-0x8e0>
  400cc0:	add	x2, x2, #0xeb3
  400cc4:	add	x4, x4, #0xed3
  400cc8:	add	x5, x5, #0xf59
  400ccc:	mov	w0, #0x7                   	// #7
  400cd0:	mov	w3, #0x2e                  	// #46
  400cd4:	mov	w1, wzr
  400cd8:	bl	400968 <log_internal_realm@plt>
  400cdc:	mov	w0, wzr
  400ce0:	mov	sp, x29
  400ce4:	ldp	x20, x19, [sp, #16]
  400ce8:	ldp	x29, x30, [sp], #32
  400cec:	ret
  400cf0:	bl	4009d8 <__errno_location@plt>
  400cf4:	ldr	w19, [x0]
  400cf8:	mov	w0, wzr
  400cfc:	bl	400958 <log_get_max_level_realm@plt>
  400d00:	cmp	w19, #0x2
  400d04:	b.ne	400db4 <main+0x290>  // b.any
  400d08:	cmp	w0, #0x7
  400d0c:	b.lt	400cdc <main+0x1b8>  // b.tstop
  400d10:	adrp	x2, 400000 <_init-0x8e0>
  400d14:	adrp	x4, 400000 <_init-0x8e0>
  400d18:	adrp	x5, 400000 <_init-0x8e0>
  400d1c:	add	x2, x2, #0xeb3
  400d20:	add	x4, x4, #0xed3
  400d24:	add	x5, x5, #0xfd1
  400d28:	mov	w0, #0x7                   	// #7
  400d2c:	mov	w1, #0x2                   	// #2
  400d30:	mov	w3, #0x35                  	// #53
  400d34:	b	400cd8 <main+0x1b4>
  400d38:	sub	x19, sp, #0x10
  400d3c:	mov	sp, x19
  400d40:	mov	x8, x19
  400d44:	mov	w1, #0x1ed                 	// #493
  400d48:	mov	x0, x19
  400d4c:	strb	wzr, [x8]
  400d50:	bl	4009e8 <mkdir_parents@plt>
  400d54:	adrp	x0, 401000 <_fini+0x174>
  400d58:	add	x0, x0, #0xb2
  400d5c:	mov	x1, x19
  400d60:	bl	4009f8 <symlink@plt>
  400d64:	mov	w8, w0
  400d68:	mov	w0, wzr
  400d6c:	tbz	w8, #31, 400ce0 <main+0x1bc>
  400d70:	mov	w0, wzr
  400d74:	bl	400958 <log_get_max_level_realm@plt>
  400d78:	cmp	w0, #0x3
  400d7c:	b.lt	400b84 <main+0x60>  // b.tstop
  400d80:	bl	4009d8 <__errno_location@plt>
  400d84:	ldr	w1, [x0]
  400d88:	adrp	x2, 400000 <_init-0x8e0>
  400d8c:	adrp	x4, 400000 <_init-0x8e0>
  400d90:	adrp	x5, 401000 <_fini+0x174>
  400d94:	add	x2, x2, #0xeb3
  400d98:	add	x4, x4, #0xed3
  400d9c:	add	x5, x5, #0xe1
  400da0:	mov	w0, #0x3                   	// #3
  400da4:	mov	w3, #0x42                  	// #66
  400da8:	mov	x6, x19
  400dac:	bl	400968 <log_internal_realm@plt>
  400db0:	b	400b84 <main+0x60>
  400db4:	cmp	w0, #0x3
  400db8:	b.lt	400b84 <main+0x60>  // b.tstop
  400dbc:	adrp	x2, 400000 <_init-0x8e0>
  400dc0:	adrp	x4, 400000 <_init-0x8e0>
  400dc4:	adrp	x5, 401000 <_fini+0x174>
  400dc8:	add	x2, x2, #0xeb3
  400dcc:	add	x4, x4, #0xed3
  400dd0:	add	x5, x5, #0xe
  400dd4:	mov	w0, #0x3                   	// #3
  400dd8:	mov	w3, #0x39                  	// #57
  400ddc:	mov	w1, w19
  400de0:	b	400b80 <main+0x5c>
  400de4:	adrp	x1, 401000 <_fini+0x174>
  400de8:	adrp	x2, 400000 <_init-0x8e0>
  400dec:	adrp	x4, 401000 <_fini+0x174>
  400df0:	add	x1, x1, #0x93
  400df4:	add	x2, x2, #0xeb3
  400df8:	add	x4, x4, #0x7c
  400dfc:	mov	w3, #0x3f                  	// #63
  400e00:	mov	w0, wzr
  400e04:	bl	400a08 <log_assert_failed_realm@plt>

0000000000400e08 <__libc_csu_init>:
  400e08:	stp	x29, x30, [sp, #-64]!
  400e0c:	mov	x29, sp
  400e10:	stp	x19, x20, [sp, #16]
  400e14:	adrp	x20, 41f000 <__FRAME_END__+0x1de20>
  400e18:	add	x20, x20, #0xd38
  400e1c:	stp	x21, x22, [sp, #32]
  400e20:	adrp	x21, 41f000 <__FRAME_END__+0x1de20>
  400e24:	add	x21, x21, #0xd30
  400e28:	sub	x20, x20, x21
  400e2c:	mov	w22, w0
  400e30:	stp	x23, x24, [sp, #48]
  400e34:	mov	x23, x1
  400e38:	mov	x24, x2
  400e3c:	bl	4008e0 <_init>
  400e40:	cmp	xzr, x20, asr #3
  400e44:	b.eq	400e70 <__libc_csu_init+0x68>  // b.none
  400e48:	asr	x20, x20, #3
  400e4c:	mov	x19, #0x0                   	// #0
  400e50:	ldr	x3, [x21, x19, lsl #3]
  400e54:	mov	x2, x24
  400e58:	add	x19, x19, #0x1
  400e5c:	mov	x1, x23
  400e60:	mov	w0, w22
  400e64:	blr	x3
  400e68:	cmp	x20, x19
  400e6c:	b.ne	400e50 <__libc_csu_init+0x48>  // b.any
  400e70:	ldp	x19, x20, [sp, #16]
  400e74:	ldp	x21, x22, [sp, #32]
  400e78:	ldp	x23, x24, [sp, #48]
  400e7c:	ldp	x29, x30, [sp], #64
  400e80:	ret
  400e84:	nop

0000000000400e88 <__libc_csu_fini>:
  400e88:	ret

Disassembly of section .fini:

0000000000400e8c <_fini>:
  400e8c:	stp	x29, x30, [sp, #-16]!
  400e90:	mov	x29, sp
  400e94:	ldp	x29, x30, [sp], #16
  400e98:	ret
