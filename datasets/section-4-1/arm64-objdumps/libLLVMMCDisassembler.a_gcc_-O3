In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMMCDisassembler.a_gcc_-O3:

Disassembler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
       8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
       c:	mov	x29, sp
      10:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
      14:	add	x3, x3, #0x0
      18:	add	x1, x1, #0x0
      1c:	add	x0, x0, #0x0
      20:	mov	w2, #0x2d                  	// #45
      24:	bl	0 <__assert_fail>

0000000000000028 <LLVMCreateDisasmCPUFeatures>:
      28:	stp	x29, x30, [sp, #-416]!
      2c:	mov	x29, sp
      30:	stp	x19, x20, [sp, #16]
      34:	add	x19, sp, #0x140
      38:	stp	x23, x24, [sp, #48]
      3c:	add	x24, sp, #0xe8
      40:	add	x7, x24, #0x10
      44:	stp	x21, x22, [sp, #32]
      48:	add	x22, x19, #0x10
      4c:	stp	x25, x26, [sp, #64]
      50:	stp	x27, x28, [sp, #80]
      54:	stp	x3, x5, [sp, #120]
      58:	str	x6, [sp, #136]
      5c:	str	w4, [sp, #156]
      60:	stp	x7, xzr, [sp, #232]
      64:	strb	wzr, [sp, #248]
      68:	str	x22, [sp, #320]
      6c:	cbz	x0, 614 <LLVMCreateDisasmCPUFeatures+0x5ec>
      70:	mov	x26, x1
      74:	mov	x27, x2
      78:	mov	x20, x0
      7c:	bl	0 <strlen>
      80:	str	x0, [sp, #264]
      84:	mov	x21, x0
      88:	cmp	x0, #0xf
      8c:	b.hi	5e0 <LLVMCreateDisasmCPUFeatures+0x5b8>  // b.pmore
      90:	cmp	x0, #0x1
      94:	b.ne	5c4 <LLVMCreateDisasmCPUFeatures+0x59c>  // b.any
      98:	ldrb	w1, [x20]
      9c:	mov	x0, x22
      a0:	strb	w1, [sp, #336]
      a4:	str	x21, [sp, #328]
      a8:	mov	x1, x24
      ac:	strb	wzr, [x0, x21]
      b0:	mov	x0, x19
      b4:	bl	0 <_ZN4llvm14TargetRegistry12lookupTargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_>
      b8:	mov	x21, x0
      bc:	ldr	x2, [sp, #320]
      c0:	add	x1, x19, #0x10
      c4:	cmp	x2, x1
      c8:	b.eq	d4 <LLVMCreateDisasmCPUFeatures+0xac>  // b.none
      cc:	mov	x0, x2
      d0:	bl	0 <_ZdlPv>
      d4:	cbz	x21, 590 <LLVMCreateDisasmCPUFeatures+0x568>
      d8:	mov	x0, x20
      dc:	bl	0 <strlen>
      e0:	ldr	x22, [x21, #72]
      e4:	stp	x20, x0, [sp, #208]
      e8:	cbz	x22, 620 <LLVMCreateDisasmCPUFeatures+0x5f8>
      ec:	add	x23, sp, #0x108
      f0:	mov	w2, #0x105                 	// #261
      f4:	mov	x1, x23
      f8:	mov	x0, x19
      fc:	add	x28, sp, #0xd0
     100:	stp	x28, xzr, [sp, #264]
     104:	strh	w2, [sp, #280]
     108:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     10c:	mov	x0, x19
     110:	blr	x22
     114:	ldr	x2, [sp, #320]
     118:	add	x1, x19, #0x10
     11c:	mov	x22, x0
     120:	cmp	x2, x1
     124:	b.eq	130 <LLVMCreateDisasmCPUFeatures+0x108>  // b.none
     128:	mov	x0, x2
     12c:	bl	0 <_ZdlPv>
     130:	cbz	x22, 620 <LLVMCreateDisasmCPUFeatures+0x5f8>
     134:	mov	x0, x19
     138:	bl	0 <_ZN4llvm15MCTargetOptionsC1Ev>
     13c:	mov	x0, x20
     140:	bl	0 <strlen>
     144:	ldr	x25, [x21, #48]
     148:	stp	x20, x0, [sp, #192]
     14c:	cbz	x25, 7c8 <LLVMCreateDisasmCPUFeatures+0x7a0>
     150:	add	x0, sp, #0xc0
     154:	mov	w2, #0x105                 	// #261
     158:	mov	x3, x0
     15c:	mov	x1, x28
     160:	mov	x0, x23
     164:	str	x3, [sp, #144]
     168:	stp	x3, xzr, [sp, #208]
     16c:	strh	w2, [sp, #224]
     170:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     174:	mov	x2, x19
     178:	mov	x1, x23
     17c:	mov	x0, x22
     180:	blr	x25
     184:	ldr	x2, [sp, #264]
     188:	add	x1, x23, #0x10
     18c:	mov	x25, x0
     190:	cmp	x2, x1
     194:	b.eq	1a0 <LLVMCreateDisasmCPUFeatures+0x178>  // b.none
     198:	mov	x0, x2
     19c:	bl	0 <_ZdlPv>
     1a0:	cbz	x25, 7c8 <LLVMCreateDisasmCPUFeatures+0x7a0>
     1a4:	ldr	x0, [x21, #56]
     1a8:	cbz	x0, 7e4 <LLVMCreateDisasmCPUFeatures+0x7bc>
     1ac:	blr	x0
     1b0:	str	x0, [sp, #112]
     1b4:	cbz	x0, 7e4 <LLVMCreateDisasmCPUFeatures+0x7bc>
     1b8:	mov	x0, x20
     1bc:	bl	0 <strlen>
     1c0:	str	x0, [sp, #104]
     1c4:	mov	x2, #0x0                   	// #0
     1c8:	cbz	x26, 1d8 <LLVMCreateDisasmCPUFeatures+0x1b0>
     1cc:	mov	x0, x26
     1d0:	bl	0 <strlen>
     1d4:	mov	x2, x0
     1d8:	mov	x4, #0x0                   	// #0
     1dc:	cbz	x27, 1f4 <LLVMCreateDisasmCPUFeatures+0x1cc>
     1e0:	mov	x0, x27
     1e4:	str	x2, [sp, #160]
     1e8:	bl	0 <strlen>
     1ec:	mov	x4, x0
     1f0:	ldr	x2, [sp, #160]
     1f4:	stp	x2, x4, [sp, #160]
     1f8:	ldr	x5, [x21, #80]
     1fc:	ldr	x0, [sp, #104]
     200:	str	x5, [sp, #104]
     204:	stp	x20, x0, [sp, #192]
     208:	cbz	x5, 7d0 <LLVMCreateDisasmCPUFeatures+0x7a8>
     20c:	mov	w3, #0x105                 	// #261
     210:	mov	x1, x28
     214:	ldr	x0, [sp, #144]
     218:	stp	x0, xzr, [sp, #208]
     21c:	mov	x0, x23
     220:	strh	w3, [sp, #224]
     224:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     228:	ldp	x2, x4, [sp, #160]
     22c:	mov	x3, x27
     230:	ldr	x5, [sp, #104]
     234:	mov	x1, x26
     238:	mov	x0, x23
     23c:	blr	x5
     240:	mov	x27, x0
     244:	ldr	x2, [sp, #264]
     248:	add	x1, x23, #0x10
     24c:	cmp	x2, x1
     250:	b.eq	25c <LLVMCreateDisasmCPUFeatures+0x234>  // b.none
     254:	mov	x0, x2
     258:	bl	0 <_ZdlPv>
     25c:	cbz	x27, 7d0 <LLVMCreateDisasmCPUFeatures+0x7a8>
     260:	mov	x0, #0x6b8                 	// #1720
     264:	bl	0 <_Znwm>
     268:	mov	x3, #0x0                   	// #0
     26c:	mov	x2, x22
     270:	mov	x1, x25
     274:	mov	w6, #0x1                   	// #1
     278:	mov	x5, #0x0                   	// #0
     27c:	mov	x4, #0x0                   	// #0
     280:	str	x0, [sp, #104]
     284:	bl	0 <_ZN4llvm9MCContextC1EPKNS_9MCAsmInfoEPKNS_14MCRegisterInfoEPKNS_16MCObjectFileInfoEPKNS_9SourceMgrEPKNS_15MCTargetOptionsEb>
     288:	ldr	x3, [x21, #120]
     28c:	cbz	x3, 628 <LLVMCreateDisasmCPUFeatures+0x600>
     290:	ldr	x2, [sp, #104]
     294:	mov	x1, x27
     298:	mov	x0, x21
     29c:	blr	x3
     2a0:	str	x0, [sp, #160]
     2a4:	cbz	x0, 628 <LLVMCreateDisasmCPUFeatures+0x600>
     2a8:	mov	x0, x20
     2ac:	bl	0 <strlen>
     2b0:	adrp	x1, 0 <_ZN4llvm22createMCRelocationInfoERKNS_6TripleERNS_9MCContextE>
     2b4:	mov	w3, #0x105                 	// #261
     2b8:	ldr	x2, [x21, #200]
     2bc:	stp	x20, x0, [sp, #192]
     2c0:	ldr	x1, [x1]
     2c4:	cmp	x2, #0x0
     2c8:	ldr	x0, [sp, #144]
     2cc:	csel	x2, x1, x2, eq  // eq = none
     2d0:	mov	x1, x28
     2d4:	str	x2, [sp, #168]
     2d8:	str	x0, [sp, #208]
     2dc:	mov	x0, x23
     2e0:	str	xzr, [sp, #216]
     2e4:	strh	w3, [sp, #224]
     2e8:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     2ec:	ldr	x1, [sp, #104]
     2f0:	mov	x0, x23
     2f4:	ldr	x2, [sp, #168]
     2f8:	blr	x2
     2fc:	mov	x1, x0
     300:	ldr	x3, [sp, #264]
     304:	add	x2, x23, #0x10
     308:	cmp	x3, x2
     30c:	b.eq	320 <LLVMCreateDisasmCPUFeatures+0x2f8>  // b.none
     310:	mov	x0, x3
     314:	str	x1, [sp, #168]
     318:	bl	0 <_ZdlPv>
     31c:	ldr	x1, [sp, #168]
     320:	str	x1, [sp, #184]
     324:	cbz	x1, 454 <LLVMCreateDisasmCPUFeatures+0x42c>
     328:	mov	x0, x20
     32c:	bl	0 <strlen>
     330:	adrp	x2, 0 <_ZN4llvm18createMCSymbolizerERKNS_6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE>
     334:	mov	x4, x0
     338:	ldr	x6, [x21, #208]
     33c:	mov	w3, #0x105                 	// #261
     340:	ldr	x2, [x2]
     344:	cmp	x6, #0x0
     348:	mov	x1, x28
     34c:	mov	x0, x23
     350:	csel	x6, x2, x6, eq  // eq = none
     354:	str	x6, [sp, #168]
     358:	ldr	x2, [sp, #144]
     35c:	stp	x20, x4, [sp, #192]
     360:	stp	x2, xzr, [sp, #208]
     364:	strh	w3, [sp, #224]
     368:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     36c:	ldp	x3, x1, [sp, #120]
     370:	add	x5, sp, #0xb8
     374:	ldr	x4, [sp, #104]
     378:	mov	x0, x23
     37c:	ldr	x2, [sp, #136]
     380:	ldr	x6, [sp, #168]
     384:	blr	x6
     388:	mov	x2, x0
     38c:	ldr	x3, [sp, #264]
     390:	add	x1, x23, #0x10
     394:	cmp	x3, x1
     398:	b.eq	3ac <LLVMCreateDisasmCPUFeatures+0x384>  // b.none
     39c:	mov	x0, x3
     3a0:	str	x2, [sp, #144]
     3a4:	bl	0 <_ZdlPv>
     3a8:	ldr	x2, [sp, #144]
     3ac:	mov	x1, x23
     3b0:	ldr	x0, [sp, #160]
     3b4:	str	x2, [sp, #264]
     3b8:	bl	0 <_ZN4llvm14MCDisassembler13setSymbolizerESt10unique_ptrINS_12MCSymbolizerESt14default_deleteIS2_EE>
     3bc:	ldr	x0, [sp, #264]
     3c0:	cbz	x0, 3d0 <LLVMCreateDisasmCPUFeatures+0x3a8>
     3c4:	ldr	x1, [x0]
     3c8:	ldr	x1, [x1, #8]
     3cc:	blr	x1
     3d0:	ldrb	w0, [x20]
     3d4:	mov	w1, #0x101                 	// #257
     3d8:	ldr	w2, [x25, #168]
     3dc:	stp	xzr, xzr, [sp, #208]
     3e0:	strh	w1, [sp, #224]
     3e4:	cbz	w0, 3f4 <LLVMCreateDisasmCPUFeatures+0x3cc>
     3e8:	mov	w0, #0x3                   	// #3
     3ec:	str	x20, [sp, #208]
     3f0:	strb	w0, [sp, #224]
     3f4:	mov	x1, x28
     3f8:	mov	x0, x23
     3fc:	str	w2, [sp, #144]
     400:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     404:	ldr	x5, [x21, #128]
     408:	ldr	w2, [sp, #144]
     40c:	cbz	x5, 86c <LLVMCreateDisasmCPUFeatures+0x844>
     410:	ldr	x3, [sp, #112]
     414:	mov	w1, w2
     418:	mov	x4, x22
     41c:	mov	x2, x25
     420:	mov	x0, x23
     424:	blr	x5
     428:	str	x0, [sp, #144]
     42c:	ldr	x2, [sp, #264]
     430:	add	x1, x23, #0x10
     434:	cmp	x2, x1
     438:	b.eq	444 <LLVMCreateDisasmCPUFeatures+0x41c>  // b.none
     43c:	mov	x0, x2
     440:	bl	0 <_ZdlPv>
     444:	ldr	x0, [sp, #144]
     448:	cbnz	x0, 648 <LLVMCreateDisasmCPUFeatures+0x620>
     44c:	ldr	x0, [sp, #184]
     450:	cbnz	x0, 818 <LLVMCreateDisasmCPUFeatures+0x7f0>
     454:	ldr	x0, [sp, #160]
     458:	mov	x21, #0x0                   	// #0
     45c:	ldr	x1, [x0]
     460:	ldr	x1, [x1, #8]
     464:	blr	x1
     468:	ldr	x0, [sp, #104]
     46c:	cbnz	x0, 62c <LLVMCreateDisasmCPUFeatures+0x604>
     470:	cbz	x27, 4d0 <LLVMCreateDisasmCPUFeatures+0x4a8>
     474:	ldr	x1, [x27]
     478:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     47c:	add	x0, x0, #0x0
     480:	ldr	x1, [x1, #8]
     484:	cmp	x1, x0
     488:	b.ne	7ec <LLVMCreateDisasmCPUFeatures+0x7c4>  // b.any
     48c:	adrp	x1, 0 <_ZTVN4llvm15MCSubtargetInfoE>
     490:	add	x2, x27, #0x50
     494:	ldr	x0, [x27, #64]
     498:	ldr	x1, [x1]
     49c:	cmp	x0, x2
     4a0:	add	x1, x1, #0x10
     4a4:	str	x1, [x27]
     4a8:	b.eq	4b0 <LLVMCreateDisasmCPUFeatures+0x488>  // b.none
     4ac:	bl	0 <_ZdlPv>
     4b0:	ldr	x0, [x27, #8]
     4b4:	add	x1, x27, #0x18
     4b8:	cmp	x0, x1
     4bc:	b.eq	4c4 <LLVMCreateDisasmCPUFeatures+0x49c>  // b.none
     4c0:	bl	0 <_ZdlPv>
     4c4:	mov	x0, x27
     4c8:	mov	x1, #0xd0                  	// #208
     4cc:	bl	0 <_ZdlPvm>
     4d0:	ldr	x0, [sp, #112]
     4d4:	cbz	x0, 4e4 <LLVMCreateDisasmCPUFeatures+0x4bc>
     4d8:	ldr	x0, [sp, #112]
     4dc:	mov	x1, #0x20                  	// #32
     4e0:	bl	0 <_ZdlPvm>
     4e4:	cbz	x25, 4f8 <LLVMCreateDisasmCPUFeatures+0x4d0>
     4e8:	ldr	x1, [x25]
     4ec:	mov	x0, x25
     4f0:	ldr	x1, [x1, #8]
     4f4:	blr	x1
     4f8:	ldp	x20, x23, [sp, #392]
     4fc:	cmp	x20, x23
     500:	b.eq	52c <LLVMCreateDisasmCPUFeatures+0x504>  // b.none
     504:	nop
     508:	mov	x1, x20
     50c:	add	x20, x20, #0x20
     510:	ldr	x0, [x1], #16
     514:	cmp	x0, x1
     518:	b.eq	5d0 <LLVMCreateDisasmCPUFeatures+0x5a8>  // b.none
     51c:	bl	0 <_ZdlPv>
     520:	cmp	x23, x20
     524:	b.ne	508 <LLVMCreateDisasmCPUFeatures+0x4e0>  // b.any
     528:	ldr	x23, [sp, #392]
     52c:	cbz	x23, 538 <LLVMCreateDisasmCPUFeatures+0x510>
     530:	mov	x0, x23
     534:	bl	0 <_ZdlPv>
     538:	ldr	x0, [sp, #360]
     53c:	add	x1, x19, #0x38
     540:	cmp	x0, x1
     544:	b.eq	54c <LLVMCreateDisasmCPUFeatures+0x524>  // b.none
     548:	bl	0 <_ZdlPv>
     54c:	ldr	x0, [sp, #328]
     550:	add	x19, x19, #0x18
     554:	cmp	x0, x19
     558:	b.eq	560 <LLVMCreateDisasmCPUFeatures+0x538>  // b.none
     55c:	bl	0 <_ZdlPv>
     560:	cbz	x22, 590 <LLVMCreateDisasmCPUFeatures+0x568>
     564:	ldr	x0, [x22, #200]
     568:	ldr	w1, [x22, #216]
     56c:	lsl	x1, x1, #3
     570:	bl	0 <_ZdlPvm>
     574:	ldr	x0, [x22, #168]
     578:	ldr	w1, [x22, #184]
     57c:	lsl	x1, x1, #3
     580:	bl	0 <_ZdlPvm>
     584:	mov	x0, x22
     588:	mov	x1, #0xe0                  	// #224
     58c:	bl	0 <_ZdlPvm>
     590:	ldr	x0, [sp, #232]
     594:	add	x24, x24, #0x10
     598:	cmp	x0, x24
     59c:	b.eq	5a4 <LLVMCreateDisasmCPUFeatures+0x57c>  // b.none
     5a0:	bl	0 <_ZdlPv>
     5a4:	mov	x0, x21
     5a8:	ldp	x19, x20, [sp, #16]
     5ac:	ldp	x21, x22, [sp, #32]
     5b0:	ldp	x23, x24, [sp, #48]
     5b4:	ldp	x25, x26, [sp, #64]
     5b8:	ldp	x27, x28, [sp, #80]
     5bc:	ldp	x29, x30, [sp], #416
     5c0:	ret
     5c4:	mov	x0, x22
     5c8:	cbz	x21, a4 <LLVMCreateDisasmCPUFeatures+0x7c>
     5cc:	b	5fc <LLVMCreateDisasmCPUFeatures+0x5d4>
     5d0:	cmp	x23, x20
     5d4:	b.ne	508 <LLVMCreateDisasmCPUFeatures+0x4e0>  // b.any
     5d8:	ldr	x23, [sp, #392]
     5dc:	b	52c <LLVMCreateDisasmCPUFeatures+0x504>
     5e0:	add	x1, sp, #0x108
     5e4:	mov	x0, x19
     5e8:	mov	x2, #0x0                   	// #0
     5ec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     5f0:	ldr	x1, [sp, #264]
     5f4:	str	x0, [sp, #320]
     5f8:	str	x1, [sp, #336]
     5fc:	mov	x2, x21
     600:	mov	x1, x20
     604:	bl	0 <memcpy>
     608:	ldr	x21, [sp, #264]
     60c:	ldr	x0, [sp, #320]
     610:	b	a4 <LLVMCreateDisasmCPUFeatures+0x7c>
     614:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     618:	add	x0, x0, #0x0
     61c:	bl	0 <_ZSt19__throw_logic_errorPKc>
     620:	mov	x21, #0x0                   	// #0
     624:	b	590 <LLVMCreateDisasmCPUFeatures+0x568>
     628:	mov	x21, #0x0                   	// #0
     62c:	ldr	x20, [sp, #104]
     630:	mov	x0, x20
     634:	bl	0 <_ZN4llvm9MCContextD1Ev>
     638:	mov	x0, x20
     63c:	mov	x1, #0x6b8                 	// #1720
     640:	bl	0 <_ZdlPvm>
     644:	b	470 <LLVMCreateDisasmCPUFeatures+0x448>
     648:	add	x1, x23, #0x10
     64c:	mov	x0, x20
     650:	str	x1, [sp, #168]
     654:	str	x1, [sp, #264]
     658:	bl	0 <strlen>
     65c:	str	x0, [sp, #208]
     660:	mov	x3, x0
     664:	cmp	x0, #0xf
     668:	ldr	x1, [sp, #168]
     66c:	b.hi	828 <LLVMCreateDisasmCPUFeatures+0x800>  // b.pmore
     670:	cmp	x3, #0x1
     674:	b.ne	7f8 <LLVMCreateDisasmCPUFeatures+0x7d0>  // b.any
     678:	ldrb	w2, [x20]
     67c:	mov	x0, x1
     680:	strb	w2, [sp, #280]
     684:	str	x3, [sp, #272]
     688:	strb	wzr, [x0, x3]
     68c:	mov	x0, #0x168                 	// #360
     690:	bl	0 <_Znwm>
     694:	mov	x20, x0
     698:	ldr	x1, [sp, #264]
     69c:	add	x2, x20, #0x10
     6a0:	str	x2, [x20]
     6a4:	add	x0, x23, #0x10
     6a8:	cmp	x1, x0
     6ac:	b.eq	850 <LLVMCreateDisasmCPUFeatures+0x828>  // b.none
     6b0:	ldr	x0, [sp, #280]
     6b4:	str	x1, [x20]
     6b8:	str	x0, [x20, #16]
     6bc:	ldr	x1, [sp, #272]
     6c0:	str	x1, [x20, #8]
     6c4:	ldr	x1, [sp, #120]
     6c8:	str	x1, [x20, #32]
     6cc:	ldr	w1, [sp, #156]
     6d0:	adrp	x4, 0 <_ZTVN4llvm19raw_svector_ostreamE>
     6d4:	str	w1, [x20, #40]
     6d8:	add	x0, x20, #0x138
     6dc:	ldr	x1, [sp, #128]
     6e0:	str	x1, [x20, #48]
     6e4:	ldr	x1, [sp, #136]
     6e8:	str	x1, [x20, #56]
     6ec:	ldr	x1, [sp, #112]
     6f0:	str	x1, [x20, #96]
     6f4:	ldr	x10, [sp, #160]
     6f8:	str	x10, [x20, #112]
     6fc:	ldr	x4, [x4]
     700:	add	x9, x20, #0x98
     704:	ldr	x1, [sp, #104]
     708:	add	x8, x20, #0xb8
     70c:	ldr	x10, [sp, #144]
     710:	mov	x7, #0x8000000000          	// #549755813888
     714:	stp	x21, x25, [x20, #64]
     718:	add	x4, x4, #0x10
     71c:	add	x5, x20, #0xa8
     720:	stp	x22, x27, [x20, #80]
     724:	mov	w6, #0x1                   	// #1
     728:	add	x23, x23, #0x10
     72c:	str	x1, [x20, #104]
     730:	mov	w3, #0x0                   	// #0
     734:	str	x10, [x20, #120]
     738:	mov	x2, #0x0                   	// #0
     73c:	stp	xzr, x9, [x20, #128]
     740:	mov	x1, #0x0                   	// #0
     744:	str	xzr, [x20, #144]
     748:	strb	wzr, [x20, #152]
     74c:	stp	x8, x7, [x20, #168]
     750:	stp	xzr, xzr, [x0, #8]
     754:	str	xzr, [x0, #24]
     758:	str	w6, [x0, #32]
     75c:	str	x4, [x20, #312]
     760:	str	x5, [x0, #40]
     764:	stp	x23, xzr, [sp, #264]
     768:	strb	wzr, [sp, #280]
     76c:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     770:	ldr	x0, [sp, #264]
     774:	cmp	x0, x23
     778:	b.eq	780 <LLVMCreateDisasmCPUFeatures+0x758>  // b.none
     77c:	bl	0 <_ZdlPv>
     780:	mov	x0, x26
     784:	bl	0 <strlen>
     788:	ldr	x2, [x20, #144]
     78c:	mov	x4, x0
     790:	mov	x3, x26
     794:	add	x0, x20, #0x88
     798:	mov	x1, #0x0                   	// #0
     79c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     7a0:	ldr	x25, [sp, #184]
     7a4:	cbz	x25, 860 <LLVMCreateDisasmCPUFeatures+0x838>
     7a8:	ldr	x1, [x25]
     7ac:	mov	x0, x25
     7b0:	mov	x21, x20
     7b4:	mov	x22, #0x0                   	// #0
     7b8:	mov	x25, #0x0                   	// #0
     7bc:	ldr	x1, [x1, #8]
     7c0:	blr	x1
     7c4:	b	4e4 <LLVMCreateDisasmCPUFeatures+0x4bc>
     7c8:	mov	x21, #0x0                   	// #0
     7cc:	b	4f8 <LLVMCreateDisasmCPUFeatures+0x4d0>
     7d0:	ldr	x0, [sp, #112]
     7d4:	mov	x21, #0x0                   	// #0
     7d8:	mov	x1, #0x20                  	// #32
     7dc:	bl	0 <_ZdlPvm>
     7e0:	b	4e4 <LLVMCreateDisasmCPUFeatures+0x4bc>
     7e4:	mov	x21, #0x0                   	// #0
     7e8:	b	4e8 <LLVMCreateDisasmCPUFeatures+0x4c0>
     7ec:	mov	x0, x27
     7f0:	blr	x1
     7f4:	b	4d0 <LLVMCreateDisasmCPUFeatures+0x4a8>
     7f8:	mov	x0, x1
     7fc:	cbz	x3, 684 <LLVMCreateDisasmCPUFeatures+0x65c>
     800:	mov	x2, x3
     804:	mov	x1, x20
     808:	bl	0 <memcpy>
     80c:	ldr	x3, [sp, #208]
     810:	ldr	x0, [sp, #264]
     814:	b	684 <LLVMCreateDisasmCPUFeatures+0x65c>
     818:	ldr	x1, [x0]
     81c:	ldr	x1, [x1, #8]
     820:	blr	x1
     824:	b	454 <LLVMCreateDisasmCPUFeatures+0x42c>
     828:	mov	x1, x28
     82c:	mov	x0, x23
     830:	mov	x2, #0x0                   	// #0
     834:	str	x3, [sp, #168]
     838:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     83c:	str	x0, [sp, #264]
     840:	ldr	x1, [sp, #208]
     844:	str	x1, [sp, #280]
     848:	ldr	x3, [sp, #168]
     84c:	b	800 <LLVMCreateDisasmCPUFeatures+0x7d8>
     850:	add	x0, sp, #0x200
     854:	ldp	x0, x1, [x0, #-232]
     858:	stp	x0, x1, [x20, #16]
     85c:	b	6bc <LLVMCreateDisasmCPUFeatures+0x694>
     860:	mov	x21, x20
     864:	mov	x22, #0x0                   	// #0
     868:	b	4f8 <LLVMCreateDisasmCPUFeatures+0x4d0>
     86c:	ldr	x2, [sp, #264]
     870:	str	xzr, [sp, #144]
     874:	add	x0, x23, #0x10
     878:	cmp	x2, x0
     87c:	b.ne	43c <LLVMCreateDisasmCPUFeatures+0x414>  // b.any
     880:	b	44c <LLVMCreateDisasmCPUFeatures+0x424>
     884:	nop

0000000000000888 <LLVMCreateDisasmCPU>:
     888:	mov	w6, w3
     88c:	mov	x7, x4
     890:	mov	x3, x2
     894:	mov	w4, w6
     898:	adrp	x2, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     89c:	mov	x6, x5
     8a0:	add	x2, x2, #0x0
     8a4:	mov	x5, x7
     8a8:	b	28 <LLVMCreateDisasmCPUFeatures>
     8ac:	nop

00000000000008b0 <LLVMCreateDisasm>:
     8b0:	mov	w8, w2
     8b4:	adrp	x7, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     8b8:	add	x2, x7, #0x0
     8bc:	mov	x5, x3
     8c0:	mov	x6, x4
     8c4:	mov	x3, x1
     8c8:	mov	w4, w8
     8cc:	mov	x1, x2
     8d0:	b	28 <LLVMCreateDisasmCPUFeatures>
     8d4:	nop

00000000000008d8 <LLVMDisasmDispose>:
     8d8:	cbz	x0, a54 <LLVMDisasmDispose+0x17c>
     8dc:	stp	x29, x30, [sp, #-32]!
     8e0:	adrp	x1, 0 <_ZTVN4llvm17raw_pwrite_streamE>
     8e4:	mov	x29, sp
     8e8:	ldr	x1, [x1]
     8ec:	stp	x19, x20, [sp, #16]
     8f0:	mov	x19, x0
     8f4:	add	x1, x1, #0x10
     8f8:	add	x0, x0, #0x138
     8fc:	str	x1, [x19, #312]
     900:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
     904:	ldr	x0, [x19, #168]
     908:	add	x1, x19, #0xb8
     90c:	cmp	x0, x1
     910:	b.eq	918 <LLVMDisasmDispose+0x40>  // b.none
     914:	bl	0 <free>
     918:	ldr	x0, [x19, #136]
     91c:	add	x1, x19, #0x98
     920:	cmp	x0, x1
     924:	b.eq	92c <LLVMDisasmDispose+0x54>  // b.none
     928:	bl	0 <_ZdlPv>
     92c:	ldr	x0, [x19, #120]
     930:	cbz	x0, 940 <LLVMDisasmDispose+0x68>
     934:	ldr	x1, [x0]
     938:	ldr	x1, [x1, #8]
     93c:	blr	x1
     940:	ldr	x0, [x19, #112]
     944:	cbz	x0, 954 <LLVMDisasmDispose+0x7c>
     948:	ldr	x1, [x0]
     94c:	ldr	x1, [x1, #8]
     950:	blr	x1
     954:	ldr	x20, [x19, #104]
     958:	cbz	x20, 970 <LLVMDisasmDispose+0x98>
     95c:	mov	x0, x20
     960:	bl	0 <_ZN4llvm9MCContextD1Ev>
     964:	mov	x0, x20
     968:	mov	x1, #0x6b8                 	// #1720
     96c:	bl	0 <_ZdlPvm>
     970:	ldr	x0, [x19, #96]
     974:	cbz	x0, 980 <LLVMDisasmDispose+0xa8>
     978:	mov	x1, #0x20                  	// #32
     97c:	bl	0 <_ZdlPvm>
     980:	ldr	x20, [x19, #88]
     984:	cbz	x20, 9e4 <LLVMDisasmDispose+0x10c>
     988:	ldr	x1, [x20]
     98c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     990:	add	x0, x0, #0x0
     994:	ldr	x1, [x1, #8]
     998:	cmp	x1, x0
     99c:	b.ne	a58 <LLVMDisasmDispose+0x180>  // b.any
     9a0:	adrp	x1, 0 <_ZTVN4llvm15MCSubtargetInfoE>
     9a4:	add	x2, x20, #0x50
     9a8:	ldr	x0, [x20, #64]
     9ac:	ldr	x1, [x1]
     9b0:	cmp	x0, x2
     9b4:	add	x1, x1, #0x10
     9b8:	str	x1, [x20]
     9bc:	b.eq	9c4 <LLVMDisasmDispose+0xec>  // b.none
     9c0:	bl	0 <_ZdlPv>
     9c4:	ldr	x0, [x20, #8]
     9c8:	add	x1, x20, #0x18
     9cc:	cmp	x0, x1
     9d0:	b.eq	9d8 <LLVMDisasmDispose+0x100>  // b.none
     9d4:	bl	0 <_ZdlPv>
     9d8:	mov	x0, x20
     9dc:	mov	x1, #0xd0                  	// #208
     9e0:	bl	0 <_ZdlPvm>
     9e4:	ldr	x20, [x19, #80]
     9e8:	cbz	x20, a18 <LLVMDisasmDispose+0x140>
     9ec:	ldr	x0, [x20, #200]
     9f0:	ldr	w1, [x20, #216]
     9f4:	lsl	x1, x1, #3
     9f8:	bl	0 <_ZdlPvm>
     9fc:	ldr	x0, [x20, #168]
     a00:	ldr	w1, [x20, #184]
     a04:	lsl	x1, x1, #3
     a08:	bl	0 <_ZdlPvm>
     a0c:	mov	x0, x20
     a10:	mov	x1, #0xe0                  	// #224
     a14:	bl	0 <_ZdlPvm>
     a18:	ldr	x0, [x19, #72]
     a1c:	cbz	x0, a2c <LLVMDisasmDispose+0x154>
     a20:	ldr	x1, [x0]
     a24:	ldr	x1, [x1, #8]
     a28:	blr	x1
     a2c:	mov	x1, x19
     a30:	ldr	x0, [x1], #16
     a34:	cmp	x0, x1
     a38:	b.eq	a40 <LLVMDisasmDispose+0x168>  // b.none
     a3c:	bl	0 <_ZdlPv>
     a40:	mov	x0, x19
     a44:	mov	x1, #0x168                 	// #360
     a48:	ldp	x19, x20, [sp, #16]
     a4c:	ldp	x29, x30, [sp], #32
     a50:	b	0 <_ZdlPvm>
     a54:	ret
     a58:	mov	x0, x20
     a5c:	blr	x1
     a60:	b	9e4 <LLVMDisasmDispose+0x10c>
     a64:	nop

0000000000000a68 <LLVMDisasmInstruction>:
     a68:	sub	sp, sp, #0x2e0
     a6c:	mov	x8, #0x4000000000          	// #274877906944
     a70:	stp	x29, x30, [sp]
     a74:	mov	x29, sp
     a78:	stp	x21, x22, [sp, #32]
     a7c:	adrp	x21, 0 <_ZTVN4llvm19raw_svector_ostreamE>
     a80:	add	x22, sp, #0x240
     a84:	ldr	x21, [x21]
     a88:	stp	x25, x26, [sp, #64]
     a8c:	add	x25, sp, #0x138
     a90:	add	x7, x21, #0x10
     a94:	add	x6, x25, #0x10
     a98:	stp	x19, x20, [sp, #16]
     a9c:	mov	x20, x0
     aa0:	mov	x26, x1
     aa4:	stp	x27, x28, [sp, #80]
     aa8:	add	x27, sp, #0x98
     aac:	mov	x19, x3
     ab0:	stp	x7, x5, [sp, #96]
     ab4:	add	x5, x22, #0x20
     ab8:	mov	w21, #0x1                   	// #1
     abc:	ldr	x28, [x0, #112]
     ac0:	str	x4, [sp, #120]
     ac4:	mov	x4, #0x800000000           	// #34359738368
     ac8:	mov	x0, x27
     acc:	mov	w3, #0x0                   	// #0
     ad0:	mov	x1, #0x0                   	// #0
     ad4:	stp	x23, x24, [sp, #48]
     ad8:	mov	x24, x2
     adc:	mov	x2, #0x0                   	// #0
     ae0:	stp	x7, xzr, [sp, #152]
     ae4:	stp	xzr, xzr, [sp, #168]
     ae8:	str	w21, [sp, #184]
     aec:	str	x25, [sp, #192]
     af0:	stp	x6, x8, [sp, #312]
     af4:	str	xzr, [sp, #576]
     af8:	str	xzr, [sp, #584]
     afc:	str	x5, [sp, #592]
     b00:	str	x4, [sp, #600]
     b04:	ldr	x23, [x20, #120]
     b08:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     b0c:	ldr	x1, [x28]
     b10:	mov	x3, x26
     b14:	mov	x4, x24
     b18:	mov	x0, x28
     b1c:	mov	x5, x19
     b20:	mov	x6, x27
     b24:	ldr	x9, [x1, #16]
     b28:	add	x2, sp, #0x90
     b2c:	mov	x1, x22
     b30:	blr	x9
     b34:	cmp	w0, w21
     b38:	b.hi	ba4 <LLVMDisasmInstruction+0x13c>  // b.pmore
     b3c:	mov	x20, #0x0                   	// #0
     b40:	adrp	x19, 0 <_ZTVN4llvm17raw_pwrite_streamE>
     b44:	ldr	x19, [x19]
     b48:	mov	x0, x27
     b4c:	add	x25, x25, #0x10
     b50:	add	x19, x19, #0x10
     b54:	str	x19, [sp, #152]
     b58:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
     b5c:	ldr	x0, [sp, #312]
     b60:	cmp	x0, x25
     b64:	b.eq	b6c <LLVMDisasmInstruction+0x104>  // b.none
     b68:	bl	0 <free>
     b6c:	ldr	x0, [sp, #592]
     b70:	add	x22, x22, #0x20
     b74:	cmp	x0, x22
     b78:	b.eq	b80 <LLVMDisasmInstruction+0x118>  // b.none
     b7c:	bl	0 <free>
     b80:	mov	x0, x20
     b84:	ldp	x29, x30, [sp]
     b88:	ldp	x19, x20, [sp, #16]
     b8c:	ldp	x21, x22, [sp, #32]
     b90:	ldp	x23, x24, [sp, #48]
     b94:	ldp	x25, x26, [sp, #64]
     b98:	ldp	x27, x28, [sp, #80]
     b9c:	add	sp, sp, #0x2e0
     ba0:	ret
     ba4:	cmp	w0, #0x3
     ba8:	b.ne	120c <LLVMDisasmInstruction+0x7a4>  // b.any
     bac:	ldr	x7, [sp, #96]
     bb0:	add	x6, sp, #0x188
     bb4:	ldr	x4, [sp, #192]
     bb8:	add	x5, sp, #0x198
     bbc:	mov	x8, #0x4000000000          	// #274877906944
     bc0:	add	x28, sp, #0xc8
     bc4:	mov	x0, x28
     bc8:	mov	x1, #0x0                   	// #0
     bcc:	ldr	w26, [x4, #8]
     bd0:	mov	w3, #0x0                   	// #0
     bd4:	mov	x2, #0x0                   	// #0
     bd8:	stp	x28, x6, [sp, #128]
     bdc:	ldr	x24, [x4]
     be0:	stp	x7, xzr, [sp, #200]
     be4:	stp	xzr, xzr, [sp, #216]
     be8:	str	w21, [sp, #232]
     bec:	str	x6, [sp, #240]
     bf0:	stp	x5, x8, [sp, #392]
     bf4:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     bf8:	adrp	x0, 0 <_ZTVN4llvm21formatted_raw_ostreamE>
     bfc:	ldr	w1, [sp, #232]
     c00:	ldr	x0, [x0]
     c04:	stp	xzr, xzr, [sp, #264]
     c08:	add	x0, x0, #0x10
     c0c:	stp	x0, xzr, [sp, #248]
     c10:	str	w21, [sp, #280]
     c14:	stp	x28, xzr, [sp, #288]
     c18:	ldr	x28, [sp, #208]
     c1c:	cbnz	w1, f04 <LLVMDisasmInstruction+0x49c>
     c20:	ldr	x2, [sp, #216]
     c24:	add	x21, sp, #0xf8
     c28:	subs	x28, x2, x28
     c2c:	b.ne	f34 <LLVMDisasmInstruction+0x4cc>  // b.any
     c30:	mov	x0, x21
     c34:	mov	w3, #0x0                   	// #0
     c38:	mov	x2, #0x0                   	// #0
     c3c:	mov	x1, #0x0                   	// #0
     c40:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     c44:	ldr	x28, [sp, #288]
     c48:	ldr	x0, [x28, #8]
     c4c:	ldr	x1, [x28, #24]
     c50:	cmp	x1, x0
     c54:	b.eq	c60 <LLVMDisasmInstruction+0x1f8>  // b.none
     c58:	mov	x0, x28
     c5c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     c60:	mov	x0, x28
     c64:	mov	w3, #0x0                   	// #0
     c68:	mov	x2, #0x0                   	// #0
     c6c:	mov	x1, #0x0                   	// #0
     c70:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     c74:	ldr	x0, [x23]
     c78:	mov	x3, x24
     c7c:	ldr	x5, [x20, #88]
     c80:	mov	x4, x26
     c84:	ldr	x7, [x0, #24]
     c88:	str	xzr, [sp, #304]
     c8c:	mov	x0, x23
     c90:	mov	x2, x19
     c94:	mov	x6, x21
     c98:	mov	x1, x22
     c9c:	blr	x7
     ca0:	ldr	x0, [x20, #128]
     ca4:	tbnz	w0, #4, fe4 <LLVMDisasmInstruction+0x57c>
     ca8:	ldr	x0, [x20, #72]
     cac:	ldr	w19, [x20, #176]
     cb0:	ldr	x23, [x20, #168]
     cb4:	ldp	x1, x26, [x0, #48]
     cb8:	str	x1, [sp, #96]
     cbc:	cbz	x19, 1134 <LLVMDisasmInstruction+0x6cc>
     cc0:	mov	w1, #0x28                  	// #40
     cc4:	mov	x0, x21
     cc8:	bl	0 <_ZN4llvm21formatted_raw_ostream11PadToColumnEj>
     ccc:	mov	x2, x19
     cd0:	mov	x0, x23
     cd4:	mov	w1, #0xa                   	// #10
     cd8:	bl	0 <memchr>
     cdc:	cbz	x0, d88 <LLVMDisasmInstruction+0x320>
     ce0:	sub	x4, x0, x23
     ce4:	ldp	x1, x0, [sp, #264]
     ce8:	cmp	x19, x4
     cec:	csel	x28, x19, x4, ls  // ls = plast
     cf0:	add	x24, x4, #0x1
     cf4:	sub	x2, x1, x0
     cf8:	cmp	x26, x2
     cfc:	b.hi	da0 <LLVMDisasmInstruction+0x338>  // b.pmore
     d00:	mov	x3, x21
     d04:	cbnz	x26, f54 <LLVMDisasmInstruction+0x4ec>
     d08:	cmp	x1, x0
     d0c:	b.ls	dc0 <LLVMDisasmInstruction+0x358>  // b.plast
     d10:	add	x1, x0, #0x1
     d14:	str	x1, [x3, #24]
     d18:	mov	w1, #0x20                  	// #32
     d1c:	strb	w1, [x0]
     d20:	ldp	x1, x0, [x3, #16]
     d24:	sub	x1, x1, x0
     d28:	cmp	x1, x28
     d2c:	b.cc	de0 <LLVMDisasmInstruction+0x378>  // b.lo, b.ul, b.last
     d30:	cbnz	x28, f74 <LLVMDisasmInstruction+0x50c>
     d34:	cmp	x24, x19
     d38:	ldr	x0, [sp, #272]
     d3c:	b.hi	dfc <LLVMDisasmInstruction+0x394>  // b.pmore
     d40:	subs	x19, x19, x24
     d44:	b.eq	dfc <LLVMDisasmInstruction+0x394>  // b.none
     d48:	ldr	x1, [sp, #264]
     d4c:	cmp	x1, x0
     d50:	b.ls	f98 <LLVMDisasmInstruction+0x530>  // b.plast
     d54:	add	x1, x0, #0x1
     d58:	add	x23, x23, x24
     d5c:	str	x1, [sp, #272]
     d60:	mov	w1, #0xa                   	// #10
     d64:	strb	w1, [x0]
     d68:	mov	w1, #0x28                  	// #40
     d6c:	mov	x0, x21
     d70:	bl	0 <_ZN4llvm21formatted_raw_ostream11PadToColumnEj>
     d74:	mov	x2, x19
     d78:	mov	x0, x23
     d7c:	mov	w1, #0xa                   	// #10
     d80:	bl	0 <memchr>
     d84:	cbnz	x0, ce0 <LLVMDisasmInstruction+0x278>
     d88:	ldp	x1, x0, [sp, #264]
     d8c:	mov	x28, x19
     d90:	mov	x24, #0x0                   	// #0
     d94:	sub	x2, x1, x0
     d98:	cmp	x26, x2
     d9c:	b.ls	d00 <LLVMDisasmInstruction+0x298>  // b.plast
     da0:	ldr	x1, [sp, #96]
     da4:	mov	x2, x26
     da8:	mov	x0, x21
     dac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     db0:	mov	x3, x0
     db4:	ldp	x1, x0, [x0, #16]
     db8:	cmp	x1, x0
     dbc:	b.hi	d10 <LLVMDisasmInstruction+0x2a8>  // b.pmore
     dc0:	mov	x0, x3
     dc4:	mov	w1, #0x20                  	// #32
     dc8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     dcc:	mov	x3, x0
     dd0:	ldp	x1, x0, [x3, #16]
     dd4:	sub	x1, x1, x0
     dd8:	cmp	x1, x28
     ddc:	b.cs	d30 <LLVMDisasmInstruction+0x2c8>  // b.hs, b.nlast
     de0:	mov	x2, x28
     de4:	mov	x0, x3
     de8:	mov	x1, x23
     dec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     df0:	cmp	x24, x19
     df4:	ldr	x0, [sp, #272]
     df8:	b.ls	d40 <LLVMDisasmInstruction+0x2d8>  // b.plast
     dfc:	ldr	x1, [sp, #256]
     e00:	cmp	x1, x0
     e04:	b.eq	e10 <LLVMDisasmInstruction+0x3a8>  // b.none
     e08:	mov	x0, x21
     e0c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     e10:	ldr	x0, [sp, #104]
     e14:	str	wzr, [x20, #176]
     e18:	cbz	x0, 1224 <LLVMDisasmInstruction+0x7bc>
     e1c:	ldr	w2, [sp, #400]
     e20:	sub	x19, x0, #0x1
     e24:	ldr	x1, [sp, #392]
     e28:	cmp	x19, x2
     e2c:	ldr	x20, [sp, #120]
     e30:	csel	x19, x19, x2, ls  // ls = plast
     e34:	mov	x2, x19
     e38:	mov	x0, x20
     e3c:	bl	0 <memcpy>
     e40:	adrp	x0, 0 <_ZTVN4llvm21formatted_raw_ostreamE>
     e44:	strb	wzr, [x20, x19]
     e48:	ldr	x1, [sp, #256]
     e4c:	ldr	x0, [x0]
     e50:	ldr	x2, [sp, #272]
     e54:	add	x0, x0, #0x10
     e58:	str	x0, [sp, #248]
     e5c:	cmp	x2, x1
     e60:	ldr	x20, [sp, #144]
     e64:	b.eq	e70 <LLVMDisasmInstruction+0x408>  // b.none
     e68:	mov	x0, x21
     e6c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     e70:	ldr	x19, [sp, #288]
     e74:	cbz	x19, ec8 <LLVMDisasmInstruction+0x460>
     e78:	ldr	w1, [sp, #280]
     e7c:	ldr	x0, [sp, #256]
     e80:	cbz	w1, e88 <LLVMDisasmInstruction+0x420>
     e84:	cbz	x0, fd0 <LLVMDisasmInstruction+0x568>
     e88:	ldr	x23, [sp, #264]
     e8c:	sub	x23, x23, x0
     e90:	ldr	x0, [x19, #8]
     e94:	ldr	x1, [x19, #24]
     e98:	cmp	x1, x0
     e9c:	cbz	x23, fac <LLVMDisasmInstruction+0x544>
     ea0:	b.eq	eac <LLVMDisasmInstruction+0x444>  // b.none
     ea4:	mov	x0, x19
     ea8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     eac:	mov	x0, x23
     eb0:	bl	0 <_Znam>
     eb4:	mov	x2, x23
     eb8:	mov	x1, x0
     ebc:	mov	w3, #0x1                   	// #1
     ec0:	mov	x0, x19
     ec4:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     ec8:	adrp	x19, 0 <_ZTVN4llvm17raw_pwrite_streamE>
     ecc:	mov	x0, x21
     ed0:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
     ed4:	ldr	x1, [x19]
     ed8:	ldr	x0, [sp, #128]
     edc:	add	x1, x1, #0x10
     ee0:	str	x1, [sp, #200]
     ee4:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
     ee8:	ldr	x0, [sp, #136]
     eec:	add	x1, x0, #0x10
     ef0:	ldr	x0, [sp, #392]
     ef4:	cmp	x0, x1
     ef8:	b.eq	b44 <LLVMDisasmInstruction+0xdc>  // b.none
     efc:	bl	0 <free>
     f00:	b	b44 <LLVMDisasmInstruction+0xdc>
     f04:	cbnz	x28, c20 <LLVMDisasmInstruction+0x1b8>
     f08:	ldr	x0, [sp, #128]
     f0c:	bl	0 <_ZNK4llvm11raw_ostream21preferred_buffer_sizeEv>
     f10:	mov	x28, x0
     f14:	cbz	x0, 1114 <LLVMDisasmInstruction+0x6ac>
     f18:	ldr	x0, [sp, #256]
     f1c:	add	x21, sp, #0xf8
     f20:	ldr	x1, [sp, #272]
     f24:	cmp	x1, x0
     f28:	b.eq	f34 <LLVMDisasmInstruction+0x4cc>  // b.none
     f2c:	mov	x0, x21
     f30:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     f34:	mov	x0, x28
     f38:	bl	0 <_Znam>
     f3c:	mov	x2, x28
     f40:	mov	x1, x0
     f44:	mov	w3, #0x1                   	// #1
     f48:	mov	x0, x21
     f4c:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     f50:	b	c44 <LLVMDisasmInstruction+0x1dc>
     f54:	ldr	x1, [sp, #96]
     f58:	mov	x2, x26
     f5c:	bl	0 <memcpy>
     f60:	ldp	x1, x0, [sp, #264]
     f64:	mov	x3, x21
     f68:	add	x0, x0, x26
     f6c:	str	x0, [sp, #272]
     f70:	b	d08 <LLVMDisasmInstruction+0x2a0>
     f74:	mov	x2, x28
     f78:	mov	x1, x23
     f7c:	str	x3, [sp, #112]
     f80:	bl	0 <memcpy>
     f84:	ldr	x3, [sp, #112]
     f88:	ldr	x0, [x3, #24]
     f8c:	add	x4, x0, x28
     f90:	str	x4, [x3, #24]
     f94:	b	d34 <LLVMDisasmInstruction+0x2cc>
     f98:	mov	x0, x21
     f9c:	mov	w1, #0xa                   	// #10
     fa0:	add	x23, x23, x24
     fa4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     fa8:	b	d68 <LLVMDisasmInstruction+0x300>
     fac:	b.eq	fb8 <LLVMDisasmInstruction+0x550>  // b.none
     fb0:	mov	x0, x19
     fb4:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     fb8:	mov	x0, x19
     fbc:	mov	w3, #0x0                   	// #0
     fc0:	mov	x2, #0x0                   	// #0
     fc4:	mov	x1, #0x0                   	// #0
     fc8:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     fcc:	b	ec8 <LLVMDisasmInstruction+0x460>
     fd0:	mov	x0, x21
     fd4:	bl	0 <_ZNK4llvm11raw_ostream21preferred_buffer_sizeEv>
     fd8:	mov	x23, x0
     fdc:	ldr	x19, [sp, #288]
     fe0:	b	e90 <LLVMDisasmInstruction+0x428>
     fe4:	ldr	x0, [x20, #88]
     fe8:	ldr	x1, [x0, #152]
     fec:	ldr	x4, [x1, #40]
     ff0:	ldr	w5, [x1, #52]
     ff4:	cbz	x4, 1158 <LLVMDisasmInstruction+0x6f0>
     ff8:	ldr	x2, [x20, #96]
     ffc:	ldr	w1, [sp, #576]
    1000:	ldr	w3, [x2, #24]
    1004:	ldr	x2, [x2]
    1008:	cmp	w1, w3
    100c:	b.cs	12c0 <LLVMDisasmInstruction+0x858>  // b.hs, b.nlast
    1010:	ubfiz	x1, x1, #6, #32
    1014:	add	x1, x2, x1
    1018:	ldrh	w3, [x1, #6]
    101c:	cmp	w5, w3
    1020:	b.ls	12a0 <LLVMDisasmInstruction+0x838>  // b.plast
    1024:	mov	w1, #0x18                  	// #24
    1028:	mov	w2, #0xffffc002            	// #-16382
    102c:	umaddl	x3, w3, w1, x4
    1030:	ldrh	w1, [x3, #8]
    1034:	and	w1, w1, #0x3fff
    1038:	add	w1, w1, w2
    103c:	and	w1, w1, #0xffff
    1040:	cmp	w1, #0x1
    1044:	b.ls	ca8 <LLVMDisasmInstruction+0x240>  // b.plast
    1048:	ldrh	w2, [x3, #16]
    104c:	cbz	w2, ca8 <LLVMDisasmInstruction+0x240>
    1050:	ldrh	w1, [x3, #14]
    1054:	sub	w3, w2, #0x1
    1058:	ldr	x4, [x0, #136]
    105c:	mov	w2, #0x0                   	// #0
    1060:	add	x3, x3, w1, uxth
    1064:	add	x5, x4, #0x4
    1068:	lsl	x3, x3, #2
    106c:	add	x0, x4, w1, uxth #2
    1070:	add	x5, x5, x3
    1074:	add	x4, x4, x3
    1078:	b	1088 <LLVMDisasmInstruction+0x620>
    107c:	add	x0, x0, #0x4
    1080:	cmp	x5, x0
    1084:	b.eq	11ec <LLVMDisasmInstruction+0x784>  // b.none
    1088:	ldrsh	w3, [x0]
    108c:	ldrh	w1, [x0]
    1090:	cmp	w3, w2
    1094:	csel	w2, w1, w2, ge  // ge = tcont
    1098:	cmp	x4, x0
    109c:	sxth	w2, w2
    10a0:	b.ne	107c <LLVMDisasmInstruction+0x614>  // b.any
    10a4:	mov	w19, w2
    10a8:	cmp	w19, #0x1
    10ac:	b.le	ca8 <LLVMDisasmInstruction+0x240>
    10b0:	add	x0, x20, #0x138
    10b4:	ldp	x1, x2, [x0, #16]
    10b8:	sub	x1, x1, x2
    10bc:	cmp	x1, #0x8
    10c0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    10c4:	b.ls	113c <LLVMDisasmInstruction+0x6d4>  // b.plast
    10c8:	add	x1, x1, #0x0
    10cc:	ldr	x3, [x1]
    10d0:	str	x3, [x2]
    10d4:	ldrb	w1, [x1, #8]
    10d8:	strb	w1, [x2, #8]
    10dc:	ldr	x1, [x0, #24]
    10e0:	add	x1, x1, #0x9
    10e4:	str	x1, [x0, #24]
    10e8:	sxtw	x1, w19
    10ec:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    10f0:	ldp	x3, x2, [x0, #16]
    10f4:	mov	x1, x0
    10f8:	cmp	x2, x3
    10fc:	b.cs	114c <LLVMDisasmInstruction+0x6e4>  // b.hs, b.nlast
    1100:	add	x0, x2, #0x1
    1104:	str	x0, [x1, #24]
    1108:	mov	w0, #0xa                   	// #10
    110c:	strb	w0, [x2]
    1110:	b	ca8 <LLVMDisasmInstruction+0x240>
    1114:	ldr	x0, [sp, #256]
    1118:	add	x21, sp, #0xf8
    111c:	ldr	x1, [sp, #272]
    1120:	cmp	x1, x0
    1124:	b.eq	c30 <LLVMDisasmInstruction+0x1c8>  // b.none
    1128:	mov	x0, x21
    112c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    1130:	b	c30 <LLVMDisasmInstruction+0x1c8>
    1134:	ldr	x0, [sp, #272]
    1138:	b	dfc <LLVMDisasmInstruction+0x394>
    113c:	add	x1, x1, #0x0
    1140:	mov	x2, #0x9                   	// #9
    1144:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1148:	b	10e8 <LLVMDisasmInstruction+0x680>
    114c:	mov	w1, #0xa                   	// #10
    1150:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1154:	b	ca8 <LLVMDisasmInstruction+0x240>
    1158:	ldp	x1, x2, [x20, #136]
    115c:	cbz	x2, ca8 <LLVMDisasmInstruction+0x240>
    1160:	add	x8, sp, #0x1d8
    1164:	bl	0 <_ZNK4llvm15MCSubtargetInfo23getInstrItineraryForCPUENS_9StringRefE>
    1168:	ldr	x1, [x20, #96]
    116c:	ldr	w0, [sp, #576]
    1170:	ldr	w2, [x1, #24]
    1174:	ldr	x1, [x1]
    1178:	cmp	w0, w2
    117c:	b.cs	12c0 <LLVMDisasmInstruction+0x858>  // b.hs, b.nlast
    1180:	ubfiz	x0, x0, #6, #32
    1184:	ldr	w2, [sp, #600]
    1188:	add	x0, x1, x0
    118c:	ldrh	w1, [x0, #6]
    1190:	cbz	w2, ca8 <LLVMDisasmInstruction+0x240>
    1194:	ldr	x0, [sp, #568]
    1198:	mov	w3, #0xa                   	// #10
    119c:	ldr	x4, [sp, #552]
    11a0:	umaddl	x1, w1, w3, x0
    11a4:	cbz	x0, 1244 <LLVMDisasmInstruction+0x7dc>
    11a8:	ldrh	w0, [x1, #6]
    11ac:	mov	w19, #0x0                   	// #0
    11b0:	ldrh	w3, [x1, #8]
    11b4:	add	w2, w2, w0
    11b8:	b	11d4 <LLVMDisasmInstruction+0x76c>
    11bc:	ldr	w1, [x4, w0, uxtw #2]
    11c0:	add	w0, w0, #0x1
    11c4:	cmp	w19, w1
    11c8:	csel	w19, w19, w1, ge  // ge = tcont
    11cc:	cmp	w0, w2
    11d0:	b.eq	10a8 <LLVMDisasmInstruction+0x640>  // b.none
    11d4:	cmp	w0, w3
    11d8:	b.cc	11bc <LLVMDisasmInstruction+0x754>  // b.lo, b.ul, b.last
    11dc:	add	w0, w0, #0x1
    11e0:	cmp	w2, w0
    11e4:	b.ne	11d4 <LLVMDisasmInstruction+0x76c>  // b.any
    11e8:	b	10a8 <LLVMDisasmInstruction+0x640>
    11ec:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    11f0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    11f4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    11f8:	add	x3, x3, #0x0
    11fc:	add	x1, x1, #0x0
    1200:	add	x0, x0, #0x0
    1204:	mov	w2, #0xab                  	// #171
    1208:	bl	0 <__assert_fail>
    120c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1210:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1214:	add	x1, x1, #0x0
    1218:	add	x0, x0, #0x0
    121c:	mov	w2, #0x127                 	// #295
    1220:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1224:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1228:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    122c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1230:	add	x3, x3, #0x0
    1234:	add	x1, x1, #0x0
    1238:	add	x0, x0, #0x0
    123c:	mov	w2, #0x11f                 	// #287
    1240:	bl	0 <__assert_fail>
    1244:	sub	w0, w2, #0x1
    1248:	cmp	w0, #0x5
    124c:	b.ls	12c4 <LLVMDisasmInstruction+0x85c>  // b.plast
    1250:	movi	v0.4s, #0x0
    1254:	lsr	w1, w2, #2
    1258:	mvni	v1.4s, #0x0
    125c:	mov	w0, #0x0                   	// #0
    1260:	smax	v0.4s, v0.4s, v1.4s
    1264:	add	w0, w0, #0x1
    1268:	cmp	w1, w0
    126c:	b.ne	1260 <LLVMDisasmInstruction+0x7f8>  // b.any
    1270:	smaxv	s0, v0.4s
    1274:	tst	x2, #0x3
    1278:	and	w0, w2, #0xfffffffc
    127c:	mov	w19, v0.s[0]
    1280:	b.eq	10a8 <LLVMDisasmInstruction+0x640>  // b.none
    1284:	mov	w1, #0xffffffff            	// #-1
    1288:	cmp	w19, #0x0
    128c:	add	w0, w0, #0x1
    1290:	csel	w19, w19, w1, ge  // ge = tcont
    1294:	cmp	w2, w0
    1298:	b.ne	1288 <LLVMDisasmInstruction+0x820>  // b.any
    129c:	b	10a8 <LLVMDisasmInstruction+0x640>
    12a0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    12a4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    12a8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    12ac:	add	x3, x3, #0x0
    12b0:	add	x1, x1, #0x0
    12b4:	add	x0, x0, #0x0
    12b8:	mov	w2, #0x15d                 	// #349
    12bc:	bl	0 <__assert_fail>
    12c0:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    12c4:	mov	w19, #0x0                   	// #0
    12c8:	mov	w0, #0x0                   	// #0
    12cc:	b	1284 <LLVMDisasmInstruction+0x81c>

00000000000012d0 <LLVMSetDisasmOptions>:
    12d0:	stp	x29, x30, [sp, #-160]!
    12d4:	mov	x29, sp
    12d8:	stp	x19, x20, [sp, #16]
    12dc:	mov	x19, x1
    12e0:	stp	x21, x22, [sp, #32]
    12e4:	mov	x22, x0
    12e8:	tbz	w1, #0, 1304 <LLVMSetDisasmOptions+0x34>
    12ec:	and	x19, x1, #0xfffffffffffffffe
    12f0:	mov	w2, #0x1                   	// #1
    12f4:	ldp	x0, x1, [x0, #120]
    12f8:	strb	w2, [x0, #40]
    12fc:	orr	x1, x1, #0x1
    1300:	str	x1, [x22, #128]
    1304:	tbz	w19, #1, 1320 <LLVMSetDisasmOptions+0x50>
    1308:	ldp	x0, x1, [x22, #120]
    130c:	mov	w2, #0x1                   	// #1
    1310:	and	x19, x19, #0xfffffffffffffffd
    1314:	strb	w2, [x0, #41]
    1318:	orr	x1, x1, #0x2
    131c:	str	x1, [x22, #128]
    1320:	tbz	w19, #2, 13cc <LLVMSetDisasmOptions+0xfc>
    1324:	stp	x23, x24, [sp, #48]
    1328:	mov	w2, #0x104                 	// #260
    132c:	add	x20, sp, #0x68
    1330:	ldp	x23, x21, [x22, #64]
    1334:	mov	x0, x20
    1338:	add	x1, sp, #0x50
    133c:	stp	x25, x26, [sp, #64]
    1340:	stp	x22, xzr, [sp, #80]
    1344:	ldr	w3, [x21, #168]
    1348:	strh	w2, [sp, #96]
    134c:	cmp	w3, #0x0
    1350:	cset	w24, eq  // eq = none
    1354:	ldr	x26, [x22, #80]
    1358:	ldr	x25, [x22, #96]
    135c:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
    1360:	ldr	x5, [x23, #128]
    1364:	cbz	x5, 1424 <LLVMSetDisasmOptions+0x154>
    1368:	mov	x2, x21
    136c:	mov	x0, x20
    1370:	mov	x4, x26
    1374:	mov	x3, x25
    1378:	mov	w1, w24
    137c:	blr	x5
    1380:	mov	x21, x0
    1384:	add	x20, x20, #0x10
    1388:	ldr	x0, [sp, #104]
    138c:	cmp	x0, x20
    1390:	b.eq	1398 <LLVMSetDisasmOptions+0xc8>  // b.none
    1394:	bl	0 <_ZdlPv>
    1398:	cbz	x21, 1414 <LLVMSetDisasmOptions+0x144>
    139c:	ldr	x0, [x22, #120]
    13a0:	str	x21, [x22, #120]
    13a4:	cbz	x0, 13b4 <LLVMSetDisasmOptions+0xe4>
    13a8:	ldr	x1, [x0]
    13ac:	ldr	x1, [x1, #8]
    13b0:	blr	x1
    13b4:	ldr	x0, [x22, #128]
    13b8:	and	x19, x19, #0xfffffffffffffffb
    13bc:	ldp	x23, x24, [sp, #48]
    13c0:	orr	x0, x0, #0x4
    13c4:	ldp	x25, x26, [sp, #64]
    13c8:	str	x0, [x22, #128]
    13cc:	tbz	w19, #3, 13e8 <LLVMSetDisasmOptions+0x118>
    13d0:	ldp	x1, x0, [x22, #120]
    13d4:	add	x2, x22, #0x138
    13d8:	and	x19, x19, #0xfffffffffffffff7
    13dc:	str	x2, [x1, #8]
    13e0:	orr	x0, x0, #0x8
    13e4:	str	x0, [x22, #128]
    13e8:	tbz	w19, #4, 13fc <LLVMSetDisasmOptions+0x12c>
    13ec:	ldr	x0, [x22, #128]
    13f0:	and	x19, x19, #0xffffffffffffffef
    13f4:	orr	x0, x0, #0x10
    13f8:	str	x0, [x22, #128]
    13fc:	cmp	x19, #0x0
    1400:	cset	w0, eq  // eq = none
    1404:	ldp	x19, x20, [sp, #16]
    1408:	ldp	x21, x22, [sp, #32]
    140c:	ldp	x29, x30, [sp], #160
    1410:	ret
    1414:	ldp	x23, x24, [sp, #48]
    1418:	ldp	x25, x26, [sp, #64]
    141c:	tbz	w19, #3, 13e8 <LLVMSetDisasmOptions+0x118>
    1420:	b	13d0 <LLVMSetDisasmOptions+0x100>
    1424:	ldr	x0, [sp, #104]
    1428:	add	x20, x20, #0x10
    142c:	cmp	x0, x20
    1430:	b.eq	1414 <LLVMSetDisasmOptions+0x144>  // b.none
    1434:	bl	0 <_ZdlPv>
    1438:	ldp	x23, x24, [sp, #48]
    143c:	ldp	x25, x26, [sp, #64]
    1440:	tbz	w19, #3, 13e8 <LLVMSetDisasmOptions+0x118>
    1444:	b	13d0 <LLVMSetDisasmOptions+0x100>

Disassembly of section .text._ZN4llvm15MCSubtargetInfoD0Ev:

0000000000000000 <_ZN4llvm15MCSubtargetInfoD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZTVN4llvm15MCSubtargetInfoE>
   8:	add	x2, x0, #0x50
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #64]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm15MCSubtargetInfoD0Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	ldr	x0, [x19, #8]
  38:	add	x1, x19, #0x18
  3c:	cmp	x0, x1
  40:	b.eq	48 <_ZN4llvm15MCSubtargetInfoD0Ev+0x48>  // b.none
  44:	bl	0 <_ZdlPv>
  48:	mov	x0, x19
  4c:	mov	x1, #0xd0                  	// #208
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm15MCSubtargetInfoD2Ev:

0000000000000000 <_ZN4llvm15MCSubtargetInfoD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZTVN4llvm15MCSubtargetInfoE>
   8:	add	x2, x0, #0x50
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #64]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm15MCSubtargetInfoD1Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	ldr	x0, [x19, #8]
  38:	add	x19, x19, #0x18
  3c:	cmp	x0, x19
  40:	b.eq	50 <_ZN4llvm15MCSubtargetInfoD1Ev+0x50>  // b.none
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	b	0 <_ZdlPv>
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret

MCDisassembler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm14MCDisassembler13onSymbolStartENS_9StringRefERmNS_8ArrayRefIhEEmRNS_11raw_ostreamE>:
   0:	mov	w0, #0x3                   	// #3
   4:	str	xzr, [x3]
   8:	ret
   c:	nop

0000000000000010 <_ZN4llvm14MCDisassemblerD1Ev>:
  10:	adrp	x1, 0 <_ZNK4llvm14MCDisassembler13onSymbolStartENS_9StringRefERmNS_8ArrayRefIhEEmRNS_11raw_ostreamE>
  14:	mov	x2, x0
  18:	ldr	x0, [x0, #24]
  1c:	ldr	x1, [x1]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x2]
  28:	cbz	x0, 3c <_ZN4llvm14MCDisassemblerD1Ev+0x2c>
  2c:	ldr	x1, [x0]
  30:	ldr	x1, [x1, #8]
  34:	mov	x16, x1
  38:	br	x16
  3c:	ret

0000000000000040 <_ZN4llvm14MCDisassemblerD0Ev>:
  40:	stp	x29, x30, [sp, #-32]!
  44:	mov	x29, sp
  48:	str	x19, [sp, #16]
  4c:	mov	x19, x0
  50:	bl	10 <_ZN4llvm14MCDisassemblerD1Ev>
  54:	mov	x0, x19
  58:	mov	x1, #0x28                  	// #40
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	b	0 <_ZdlPvm>

0000000000000068 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm>:
  68:	mov	x8, x0
  6c:	mov	x7, x6
  70:	ldr	x0, [x0, #24]
  74:	and	w4, w4, #0xff
  78:	cbz	x0, a0 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm+0x38>
  7c:	ldr	x10, [x0]
  80:	mov	x6, x5
  84:	mov	w5, w4
  88:	mov	x4, x3
  8c:	mov	x3, x2
  90:	ldr	x2, [x8, #32]
  94:	ldr	x8, [x10, #16]
  98:	mov	x16, x8
  9c:	br	x16
  a0:	mov	w0, #0x0                   	// #0
  a4:	ret

00000000000000a8 <_ZNK4llvm14MCDisassembler31tryAddingPcLoadReferenceCommentElm>:
  a8:	mov	x4, x0
  ac:	mov	x3, x2
  b0:	ldr	x0, [x0, #24]
  b4:	cbz	x0, d0 <_ZNK4llvm14MCDisassembler31tryAddingPcLoadReferenceCommentElm+0x28>
  b8:	ldr	x6, [x0]
  bc:	mov	x2, x1
  c0:	ldr	x1, [x4, #32]
  c4:	ldr	x4, [x6, #24]
  c8:	mov	x16, x4
  cc:	br	x16
  d0:	ret
  d4:	nop

00000000000000d8 <_ZN4llvm14MCDisassembler13setSymbolizerESt10unique_ptrINS_12MCSymbolizerESt14default_deleteIS2_EE>:
  d8:	mov	x2, x0
  dc:	ldr	x0, [x0, #24]
  e0:	ldr	x3, [x1]
  e4:	str	xzr, [x1]
  e8:	str	x3, [x2, #24]
  ec:	cbz	x0, 100 <_ZN4llvm14MCDisassembler13setSymbolizerESt10unique_ptrINS_12MCSymbolizerESt14default_deleteIS2_EE+0x28>
  f0:	ldr	x1, [x0]
  f4:	ldr	x1, [x1, #8]
  f8:	mov	x16, x1
  fc:	br	x16
 100:	ret

MCExternalSymbolizer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>:
   0:	ldr	x5, [x0, #32]
   4:	cbz	x5, 7c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x7c>
   8:	stp	x29, x30, [sp, #-64]!
   c:	mov	x29, sp
  10:	ldr	x0, [x0, #40]
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x1
  1c:	mov	x1, x2
  20:	mov	x2, #0x2                   	// #2
  24:	str	x2, [sp, #48]
  28:	add	x4, sp, #0x38
  2c:	add	x2, sp, #0x30
  30:	blr	x5
  34:	ldr	x0, [sp, #48]
  38:	cmp	x0, #0x2
  3c:	b.eq	100 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x100>  // b.none
  40:	cmp	x0, #0x3
  44:	b.eq	80 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x80>  // b.none
  48:	cmp	x0, #0x4
  4c:	b.eq	1b8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1b8>  // b.none
  50:	cmp	x0, #0x5
  54:	b.eq	234 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x234>  // b.none
  58:	cmp	x0, #0x6
  5c:	b.eq	270 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x270>  // b.none
  60:	cmp	x0, #0x7
  64:	b.eq	2e8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x2e8>  // b.none
  68:	cmp	x0, #0x8
  6c:	b.eq	3a8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3a8>  // b.none
  70:	ldp	x19, x20, [sp, #16]
  74:	ldp	x29, x30, [sp], #64
  78:	ret
  7c:	ret
  80:	ldp	x0, x1, [x19, #16]
  84:	sub	x0, x0, x1
  88:	cmp	x0, #0x12
  8c:	b.ls	390 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x390>  // b.plast
  90:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
  94:	add	x0, x0, #0x0
  98:	ldp	x2, x3, [x0]
  9c:	stp	x2, x3, [x1]
  a0:	ldur	w0, [x0, #15]
  a4:	stur	w0, [x1, #15]
  a8:	ldr	x0, [x19, #24]
  ac:	add	x0, x0, #0x13
  b0:	str	x0, [x19, #24]
  b4:	ldr	x20, [sp, #56]
  b8:	mov	x2, #0x0                   	// #0
  bc:	cbz	x20, cc <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0xcc>
  c0:	mov	x0, x20
  c4:	bl	0 <strlen>
  c8:	mov	x2, x0
  cc:	mov	x1, x20
  d0:	mov	x0, x19
  d4:	mov	w3, #0x0                   	// #0
  d8:	bl	0 <_ZN4llvm11raw_ostream13write_escapedENS_9StringRefEb>
  dc:	ldp	x1, x0, [x19, #16]
  e0:	cmp	x1, x0
  e4:	b.eq	378 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x378>  // b.none
  e8:	mov	w1, #0x22                  	// #34
  ec:	strb	w1, [x0]
  f0:	ldr	x0, [x19, #24]
  f4:	add	x0, x0, #0x1
  f8:	str	x0, [x19, #24]
  fc:	b	70 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x70>
 100:	ldp	x0, x1, [x19, #16]
 104:	str	x21, [sp, #32]
 108:	sub	x0, x0, x1
 10c:	cmp	x0, #0x1c
 110:	b.ls	35c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x35c>  // b.plast
 114:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 118:	add	x0, x0, #0x0
 11c:	ldr	x2, [x0, #16]
 120:	str	x2, [x1, #16]
 124:	ldp	x2, x3, [x0]
 128:	stp	x2, x3, [x1]
 12c:	ldur	x0, [x0, #21]
 130:	stur	x0, [x1, #21]
 134:	ldr	x0, [x19, #24]
 138:	add	x0, x0, #0x1d
 13c:	str	x0, [x19, #24]
 140:	ldr	x21, [sp, #56]
 144:	cbz	x21, 188 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x188>
 148:	mov	x0, x21
 14c:	bl	0 <strlen>
 150:	mov	x20, x0
 154:	ldp	x1, x0, [x19, #16]
 158:	sub	x1, x1, x0
 15c:	cmp	x20, x1
 160:	b.hi	198 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x198>  // b.pmore
 164:	cbz	x20, 188 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x188>
 168:	mov	x1, x21
 16c:	mov	x2, x20
 170:	bl	0 <memcpy>
 174:	ldr	x0, [x19, #24]
 178:	ldr	x21, [sp, #32]
 17c:	add	x0, x0, x20
 180:	str	x0, [x19, #24]
 184:	b	70 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x70>
 188:	ldp	x19, x20, [sp, #16]
 18c:	ldr	x21, [sp, #32]
 190:	ldp	x29, x30, [sp], #64
 194:	ret
 198:	mov	x2, x20
 19c:	mov	x1, x21
 1a0:	mov	x0, x19
 1a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 1a8:	ldp	x19, x20, [sp, #16]
 1ac:	ldr	x21, [sp, #32]
 1b0:	ldp	x29, x30, [sp], #64
 1b4:	ret
 1b8:	ldp	x0, x1, [x19, #16]
 1bc:	str	x21, [sp, #32]
 1c0:	sub	x0, x0, x1
 1c4:	cmp	x0, #0x14
 1c8:	b.ls	3f8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3f8>  // b.plast
 1cc:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 1d0:	add	x0, x0, #0x0
 1d4:	ldp	x2, x3, [x0]
 1d8:	stp	x2, x3, [x1]
 1dc:	ldur	x0, [x0, #13]
 1e0:	stur	x0, [x1, #13]
 1e4:	ldr	x0, [x19, #24]
 1e8:	add	x0, x0, #0x15
 1ec:	str	x0, [x19, #24]
 1f0:	ldr	x21, [sp, #56]
 1f4:	cbz	x21, 2c0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x2c0>
 1f8:	mov	x0, x21
 1fc:	bl	0 <strlen>
 200:	mov	x20, x0
 204:	ldp	x2, x0, [x19, #16]
 208:	sub	x1, x2, x0
 20c:	cmp	x20, x1
 210:	b.hi	2ac <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x2ac>  // b.pmore
 214:	cbz	x20, 2c4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x2c4>
 218:	mov	x1, x21
 21c:	mov	x2, x20
 220:	bl	0 <memcpy>
 224:	ldp	x2, x1, [x19, #16]
 228:	add	x0, x1, x20
 22c:	str	x0, [x19, #24]
 230:	b	2c4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x2c4>
 234:	ldp	x0, x1, [x19, #16]
 238:	str	x21, [sp, #32]
 23c:	sub	x0, x0, x1
 240:	cmp	x0, #0xd
 244:	b.ls	324 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x324>  // b.plast
 248:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 24c:	add	x0, x0, #0x0
 250:	ldr	x2, [x0]
 254:	str	x2, [x1]
 258:	ldur	x0, [x0, #6]
 25c:	stur	x0, [x1, #6]
 260:	ldr	x0, [x19, #24]
 264:	add	x0, x0, #0xe
 268:	str	x0, [x19, #24]
 26c:	b	140 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x140>
 270:	ldp	x0, x1, [x19, #16]
 274:	str	x21, [sp, #32]
 278:	sub	x0, x0, x1
 27c:	cmp	x0, #0x11
 280:	b.ls	340 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x340>  // b.plast
 284:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 288:	add	x0, x0, #0x0
 28c:	ldp	x2, x3, [x0]
 290:	stp	x2, x3, [x1]
 294:	ldrh	w0, [x0, #16]
 298:	strh	w0, [x1, #16]
 29c:	ldr	x0, [x19, #24]
 2a0:	add	x0, x0, #0x12
 2a4:	str	x0, [x19, #24]
 2a8:	b	140 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x140>
 2ac:	mov	x0, x19
 2b0:	mov	x2, x20
 2b4:	mov	x1, x21
 2b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 2bc:	mov	x19, x0
 2c0:	ldp	x2, x0, [x19, #16]
 2c4:	cmp	x2, x0
 2c8:	b.eq	3dc <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3dc>  // b.none
 2cc:	mov	w1, #0x22                  	// #34
 2d0:	strb	w1, [x0]
 2d4:	ldr	x0, [x19, #24]
 2d8:	ldr	x21, [sp, #32]
 2dc:	add	x0, x0, #0x1
 2e0:	str	x0, [x19, #24]
 2e4:	b	70 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x70>
 2e8:	ldp	x0, x1, [x19, #16]
 2ec:	str	x21, [sp, #32]
 2f0:	sub	x0, x0, x1
 2f4:	cmp	x0, #0x12
 2f8:	b.ls	414 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x414>  // b.plast
 2fc:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 300:	add	x0, x0, #0x0
 304:	ldp	x2, x3, [x0]
 308:	stp	x2, x3, [x1]
 30c:	ldur	w0, [x0, #15]
 310:	stur	w0, [x1, #15]
 314:	ldr	x0, [x19, #24]
 318:	add	x0, x0, #0x13
 31c:	str	x0, [x19, #24]
 320:	b	140 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x140>
 324:	mov	x0, x19
 328:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 32c:	mov	x2, #0xe                   	// #14
 330:	add	x1, x1, #0x0
 334:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 338:	mov	x19, x0
 33c:	b	140 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x140>
 340:	mov	x0, x19
 344:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 348:	mov	x2, #0x12                  	// #18
 34c:	add	x1, x1, #0x0
 350:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 354:	mov	x19, x0
 358:	b	140 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x140>
 35c:	mov	x0, x19
 360:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 364:	mov	x2, #0x1d                  	// #29
 368:	add	x1, x1, #0x0
 36c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 370:	mov	x19, x0
 374:	b	140 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x140>
 378:	mov	x0, x19
 37c:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 380:	mov	x2, #0x1                   	// #1
 384:	add	x1, x1, #0x0
 388:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 38c:	b	70 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x70>
 390:	mov	x0, x19
 394:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 398:	mov	x2, #0x13                  	// #19
 39c:	add	x1, x1, #0x0
 3a0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3a4:	b	b4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0xb4>
 3a8:	ldp	x0, x1, [x19, #16]
 3ac:	str	x21, [sp, #32]
 3b0:	sub	x0, x0, x1
 3b4:	cmp	x0, #0xf
 3b8:	b.ls	430 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x430>  // b.plast
 3bc:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 3c0:	add	x0, x0, #0x0
 3c4:	ldp	x2, x3, [x0]
 3c8:	stp	x2, x3, [x1]
 3cc:	ldr	x0, [x19, #24]
 3d0:	add	x0, x0, #0x10
 3d4:	str	x0, [x19, #24]
 3d8:	b	140 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x140>
 3dc:	mov	x0, x19
 3e0:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 3e4:	mov	x2, #0x1                   	// #1
 3e8:	add	x1, x1, #0x0
 3ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3f0:	ldr	x21, [sp, #32]
 3f4:	b	70 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x70>
 3f8:	mov	x0, x19
 3fc:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 400:	mov	x2, #0x15                  	// #21
 404:	add	x1, x1, #0x0
 408:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 40c:	mov	x19, x0
 410:	b	1f0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1f0>
 414:	mov	x0, x19
 418:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 41c:	mov	x2, #0x13                  	// #19
 420:	add	x1, x1, #0x0
 424:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 428:	mov	x19, x0
 42c:	b	140 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x140>
 430:	mov	x0, x19
 434:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 438:	mov	x2, #0x10                  	// #16
 43c:	add	x1, x1, #0x0
 440:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 444:	mov	x19, x0
 448:	b	140 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x140>
 44c:	nop

0000000000000450 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>:
 450:	stp	x29, x30, [sp, #-192]!
 454:	mov	x29, sp
 458:	ldr	x8, [x0, #24]
 45c:	stp	xzr, xzr, [sp, #176]
 460:	stp	x19, x20, [sp, #16]
 464:	mov	x19, x0
 468:	mov	x20, x3
 46c:	stp	x21, x22, [sp, #32]
 470:	mov	x21, x1
 474:	mov	x22, x7
 478:	stp	x23, x24, [sp, #48]
 47c:	mov	x24, x2
 480:	mov	x23, x4
 484:	str	x25, [sp, #64]
 488:	and	w25, w5, #0xff
 48c:	stp	xzr, xzr, [sp, #128]
 490:	stp	xzr, xzr, [sp, #144]
 494:	stp	xzr, xzr, [sp, #160]
 498:	str	x3, [sp, #176]
 49c:	cbz	x8, 4c0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x70>
 4a0:	ldr	x0, [x0, #40]
 4a4:	mov	x2, x6
 4a8:	add	x5, sp, #0x80
 4ac:	mov	x3, x7
 4b0:	mov	x1, x23
 4b4:	mov	w4, #0x1                   	// #1
 4b8:	blr	x8
 4bc:	cbnz	w0, 538 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xe8>
 4c0:	ldr	x5, [x19, #32]
 4c4:	stp	xzr, xzr, [sp, #128]
 4c8:	stp	xzr, xzr, [sp, #144]
 4cc:	stp	xzr, xzr, [sp, #160]
 4d0:	stp	xzr, xzr, [sp, #176]
 4d4:	cbz	x5, 6b0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x260>
 4d8:	cmp	x22, #0x1
 4dc:	eor	w0, w25, #0x1
 4e0:	cset	w22, eq  // eq = none
 4e4:	ands	w22, w22, w0
 4e8:	b.ne	6b0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x260>  // b.any
 4ec:	ldr	x0, [x19, #40]
 4f0:	cbnz	w25, 6f0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2a0>
 4f4:	str	xzr, [sp, #88]
 4f8:	mov	x3, x23
 4fc:	mov	x1, x20
 500:	add	x4, sp, #0x68
 504:	add	x2, sp, #0x58
 508:	blr	x5
 50c:	cbz	x0, 894 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x444>
 510:	ldr	x1, [sp, #88]
 514:	mov	x2, #0x1                   	// #1
 518:	stp	x2, x0, [sp, #128]
 51c:	cmp	x1, #0x9
 520:	b.eq	8a0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x450>  // b.none
 524:	cmp	x1, #0x1
 528:	b.eq	7e0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x390>  // b.none
 52c:	cmp	x1, #0x5
 530:	b.eq	75c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x30c>  // b.none
 534:	cbnz	w22, 6b0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x260>
 538:	ldr	x0, [sp, #128]
 53c:	mov	x20, #0x0                   	// #0
 540:	cbz	x0, 58c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x13c>
 544:	ldr	x0, [sp, #136]
 548:	cbz	x0, 7b0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x360>
 54c:	str	x0, [sp, #88]
 550:	bl	0 <strlen>
 554:	mov	x4, x0
 558:	add	x2, sp, #0x58
 55c:	ldr	x0, [x19, #8]
 560:	mov	w3, #0x105                 	// #261
 564:	add	x1, sp, #0x68
 568:	stp	x4, x2, [sp, #96]
 56c:	str	xzr, [sp, #112]
 570:	strh	w3, [sp, #120]
 574:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 578:	ldr	x2, [x19, #8]
 57c:	mov	x3, #0x0                   	// #0
 580:	mov	w1, #0x0                   	// #0
 584:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 588:	mov	x20, x0
 58c:	ldr	x0, [sp, #152]
 590:	cbz	x0, 6cc <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x27c>
 594:	ldr	x0, [sp, #160]
 598:	cbz	x0, 7c8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x378>
 59c:	str	x0, [sp, #88]
 5a0:	bl	0 <strlen>
 5a4:	mov	x4, x0
 5a8:	add	x2, sp, #0x58
 5ac:	ldr	x0, [x19, #8]
 5b0:	mov	w3, #0x105                 	// #261
 5b4:	add	x1, sp, #0x68
 5b8:	stp	x4, x2, [sp, #96]
 5bc:	str	xzr, [sp, #112]
 5c0:	strh	w3, [sp, #120]
 5c4:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 5c8:	ldr	x2, [x19, #8]
 5cc:	mov	x3, #0x0                   	// #0
 5d0:	mov	w1, #0x0                   	// #0
 5d4:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 5d8:	mov	x22, x0
 5dc:	ldr	x0, [sp, #176]
 5e0:	cbnz	x0, 71c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2cc>
 5e4:	mov	x23, #0x0                   	// #0
 5e8:	cbz	x22, 6d4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x284>
 5ec:	ldr	x3, [x19, #8]
 5f0:	cbz	x20, 794 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x344>
 5f4:	mov	x1, x20
 5f8:	mov	x2, x22
 5fc:	mov	x4, #0x0                   	// #0
 600:	mov	w0, #0x11                  	// #17
 604:	bl	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 608:	mov	x20, x0
 60c:	cbz	x23, 62c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1dc>
 610:	ldr	x3, [x19, #8]
 614:	mov	x1, x20
 618:	mov	x2, x23
 61c:	mov	x4, #0x0                   	// #0
 620:	mov	w0, #0x0                   	// #0
 624:	bl	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 628:	mov	x20, x0
 62c:	ldr	x0, [x19, #16]
 630:	mov	x1, x20
 634:	ldr	w2, [sp, #184]
 638:	ldr	x3, [x0]
 63c:	ldr	x3, [x3, #16]
 640:	blr	x3
 644:	cbz	x0, 6b0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x260>
 648:	ldp	w1, w2, [x21, #24]
 64c:	mov	x3, #0x4                   	// #4
 650:	mov	x20, #0x0                   	// #0
 654:	mov	x19, x0
 658:	bfxil	x20, x3, #0, #8
 65c:	cmp	w1, w2
 660:	b.cs	8e8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x498>  // b.hs, b.nlast
 664:	ldr	x0, [x21, #16]
 668:	ubfiz	x1, x1, #4, #32
 66c:	add	x2, x0, x1
 670:	str	x20, [x0, x1]
 674:	str	x19, [x2, #8]
 678:	ldp	w0, w2, [x21, #24]
 67c:	mov	w1, w0
 680:	add	x1, x1, #0x1
 684:	cmp	x1, x2
 688:	b.hi	934 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x4e4>  // b.pmore
 68c:	add	w1, w0, #0x1
 690:	str	w1, [x21, #24]
 694:	mov	w0, #0x1                   	// #1
 698:	ldp	x19, x20, [sp, #16]
 69c:	ldp	x21, x22, [sp, #32]
 6a0:	ldp	x23, x24, [sp, #48]
 6a4:	ldr	x25, [sp, #64]
 6a8:	ldp	x29, x30, [sp], #192
 6ac:	ret
 6b0:	mov	w0, #0x0                   	// #0
 6b4:	ldp	x19, x20, [sp, #16]
 6b8:	ldp	x21, x22, [sp, #32]
 6bc:	ldp	x23, x24, [sp, #48]
 6c0:	ldr	x25, [sp, #64]
 6c4:	ldp	x29, x30, [sp], #192
 6c8:	ret
 6cc:	ldr	x0, [sp, #176]
 6d0:	cbnz	x0, 744 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2f4>
 6d4:	cbnz	x20, 62c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1dc>
 6d8:	ldr	x1, [x19, #8]
 6dc:	mov	w2, #0x0                   	// #0
 6e0:	mov	x0, #0x0                   	// #0
 6e4:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 6e8:	mov	x20, x0
 6ec:	b	62c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1dc>
 6f0:	mov	x1, #0x1                   	// #1
 6f4:	str	x1, [sp, #88]
 6f8:	mov	x3, x23
 6fc:	add	x4, sp, #0x68
 700:	add	x2, sp, #0x58
 704:	mov	x1, x20
 708:	blr	x5
 70c:	cbnz	x0, 510 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xc0>
 710:	str	x20, [sp, #176]
 714:	ldr	x1, [sp, #88]
 718:	b	524 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xd4>
 71c:	ldr	x1, [x19, #8]
 720:	mov	w2, #0x0                   	// #0
 724:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 728:	mov	x23, x0
 72c:	cbnz	x22, 5ec <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x19c>
 730:	cbnz	x20, 60c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1bc>
 734:	nop
 738:	cbz	x23, 6d8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x288>
 73c:	mov	x20, x23
 740:	b	62c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1dc>
 744:	ldr	x1, [x19, #8]
 748:	mov	w2, #0x0                   	// #0
 74c:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 750:	mov	x23, x0
 754:	cbnz	x20, 60c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1bc>
 758:	b	738 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2e8>
 75c:	ldp	x0, x1, [x24, #16]
 760:	sub	x0, x0, x1
 764:	cmp	x0, #0xd
 768:	b.ls	878 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x428>  // b.plast
 76c:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 770:	add	x0, x0, #0x0
 774:	ldr	x2, [x0]
 778:	str	x2, [x1]
 77c:	ldur	x0, [x0, #6]
 780:	stur	x0, [x1, #6]
 784:	ldr	x0, [x24, #24]
 788:	add	x0, x0, #0xe
 78c:	str	x0, [x24, #24]
 790:	b	814 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3c4>
 794:	mov	x2, x3
 798:	mov	x1, x22
 79c:	mov	x3, #0x0                   	// #0
 7a0:	mov	w0, #0x1                   	// #1
 7a4:	bl	0 <_ZN4llvm11MCUnaryExpr6createENS0_6OpcodeEPKNS_6MCExprERNS_9MCContextENS_5SMLocE>
 7a8:	mov	x20, x0
 7ac:	b	60c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1bc>
 7b0:	ldrsw	x0, [sp, #144]
 7b4:	mov	w2, #0x0                   	// #0
 7b8:	ldr	x1, [x19, #8]
 7bc:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 7c0:	mov	x20, x0
 7c4:	b	58c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x13c>
 7c8:	ldrsw	x0, [sp, #168]
 7cc:	mov	w2, #0x0                   	// #0
 7d0:	ldr	x1, [x19, #8]
 7d4:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 7d8:	mov	x22, x0
 7dc:	b	5dc <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x18c>
 7e0:	ldp	x0, x1, [x24, #16]
 7e4:	sub	x0, x0, x1
 7e8:	cmp	x0, #0x10
 7ec:	b.ls	85c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x40c>  // b.plast
 7f0:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 7f4:	add	x0, x0, #0x0
 7f8:	ldp	x2, x3, [x0]
 7fc:	stp	x2, x3, [x1]
 800:	ldrb	w0, [x0, #16]
 804:	strb	w0, [x1, #16]
 808:	ldr	x0, [x24, #24]
 80c:	add	x0, x0, #0x11
 810:	str	x0, [x24, #24]
 814:	ldr	x23, [sp, #104]
 818:	cbz	x23, 534 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xe4>
 81c:	mov	x0, x23
 820:	bl	0 <strlen>
 824:	mov	x20, x0
 828:	ldp	x1, x0, [x24, #16]
 82c:	sub	x1, x1, x0
 830:	cmp	x20, x1
 834:	b.hi	904 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x4b4>  // b.pmore
 838:	cbz	x20, 534 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xe4>
 83c:	mov	x1, x23
 840:	mov	x2, x20
 844:	bl	0 <memcpy>
 848:	ldr	x0, [x24, #24]
 84c:	add	x0, x0, x20
 850:	str	x0, [x24, #24]
 854:	cbz	w22, 538 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xe8>
 858:	b	6b0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x260>
 85c:	mov	x0, x24
 860:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 864:	mov	x2, #0x11                  	// #17
 868:	add	x1, x1, #0x0
 86c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 870:	mov	x24, x0
 874:	b	814 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3c4>
 878:	mov	x0, x24
 87c:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 880:	mov	x2, #0xe                   	// #14
 884:	add	x1, x1, #0x0
 888:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 88c:	mov	x24, x0
 890:	b	814 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3c4>
 894:	mov	w22, #0x1                   	// #1
 898:	ldr	x1, [sp, #88]
 89c:	b	524 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xd4>
 8a0:	ldr	x23, [sp, #104]
 8a4:	cbz	x23, 538 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xe8>
 8a8:	mov	x0, x23
 8ac:	bl	0 <strlen>
 8b0:	mov	x20, x0
 8b4:	ldp	x1, x0, [x24, #16]
 8b8:	sub	x1, x1, x0
 8bc:	cmp	x20, x1
 8c0:	b.hi	91c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x4cc>  // b.pmore
 8c4:	cbz	x20, 538 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xe8>
 8c8:	mov	x1, x23
 8cc:	mov	x2, x20
 8d0:	bl	0 <memcpy>
 8d4:	ldr	x0, [x24, #24]
 8d8:	ldr	x1, [sp, #88]
 8dc:	add	x0, x0, x20
 8e0:	str	x0, [x24, #24]
 8e4:	b	524 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xd4>
 8e8:	add	x1, x21, #0x20
 8ec:	mov	x3, #0x10                  	// #16
 8f0:	mov	x2, #0x0                   	// #0
 8f4:	add	x0, x21, x3
 8f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 8fc:	ldr	w1, [x21, #24]
 900:	b	664 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x214>
 904:	mov	x2, x20
 908:	mov	x1, x23
 90c:	mov	x0, x24
 910:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 914:	cbz	w22, 538 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xe8>
 918:	b	6b0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x260>
 91c:	mov	x1, x23
 920:	mov	x2, x20
 924:	mov	x0, x24
 928:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 92c:	ldr	x1, [sp, #88]
 930:	b	524 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xd4>
 934:	adrp	x3, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 938:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 93c:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 940:	add	x3, x3, #0x0
 944:	add	x1, x1, #0x0
 948:	add	x0, x0, #0x0
 94c:	mov	w2, #0x43                  	// #67
 950:	bl	0 <__assert_fail>
 954:	nop

0000000000000958 <_ZN4llvm18createMCSymbolizerERKNS_6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE>:
 958:	stp	x29, x30, [sp, #-64]!
 95c:	mov	x29, sp
 960:	stp	x19, x20, [sp, #16]
 964:	stp	x21, x22, [sp, #32]
 968:	str	x23, [sp, #48]
 96c:	cbz	x4, 9bc <_ZN4llvm18createMCSymbolizerERKNS_6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE+0x64>
 970:	ldr	x23, [x5]
 974:	str	xzr, [x5]
 978:	mov	x22, x1
 97c:	mov	x21, x2
 980:	mov	x20, x3
 984:	mov	x19, x4
 988:	mov	x0, #0x30                  	// #48
 98c:	bl	0 <_Znwm>
 990:	adrp	x6, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 994:	stp	x23, x22, [x0, #16]
 998:	ldr	x6, [x6]
 99c:	stp	x21, x20, [x0, #32]
 9a0:	add	x6, x6, #0x10
 9a4:	stp	x6, x19, [x0]
 9a8:	ldp	x19, x20, [sp, #16]
 9ac:	ldp	x21, x22, [sp, #32]
 9b0:	ldr	x23, [sp, #48]
 9b4:	ldp	x29, x30, [sp], #64
 9b8:	ret
 9bc:	adrp	x3, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 9c0:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 9c4:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 9c8:	add	x3, x3, #0x0
 9cc:	add	x1, x1, #0x0
 9d0:	add	x0, x0, #0x0
 9d4:	mov	w2, #0xc2                  	// #194
 9d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20MCExternalSymbolizerD2Ev:

0000000000000000 <_ZN4llvm20MCExternalSymbolizerD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizerD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm12MCSymbolizerD2Ev>

Disassembly of section .text._ZN4llvm20MCExternalSymbolizerD0Ev:

0000000000000000 <_ZN4llvm20MCExternalSymbolizerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizerD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	bl	0 <_ZN4llvm12MCSymbolizerD2Ev>
  24:	mov	x0, x19
  28:	mov	x1, #0x30                  	// #48
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPvm>

MCRelocationInfo.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm16MCRelocationInfoD1Ev>:
   0:	ret
   4:	nop

0000000000000008 <_ZN4llvm16MCRelocationInfo28createExprForCAPIVariantKindEPKNS_6MCExprEj>:
   8:	cmp	w2, #0x0
   c:	csel	x0, x1, xzr, eq  // eq = none
  10:	ret
  14:	nop

0000000000000018 <_ZN4llvm16MCRelocationInfoD0Ev>:
  18:	stp	x29, x30, [sp, #-32]!
  1c:	mov	x29, sp
  20:	str	x19, [sp, #16]
  24:	mov	x19, x0
  28:	bl	0 <_ZN4llvm16MCRelocationInfoD1Ev>
  2c:	mov	x0, x19
  30:	mov	x1, #0x10                  	// #16
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZdlPvm>

0000000000000040 <_ZN4llvm16MCRelocationInfoC1ERNS_9MCContextE>:
  40:	adrp	x2, 0 <_ZN4llvm16MCRelocationInfoD1Ev>
  44:	ldr	x2, [x2]
  48:	add	x2, x2, #0x10
  4c:	stp	x2, x1, [x0]
  50:	ret
  54:	nop

0000000000000058 <_ZN4llvm22createMCRelocationInfoERKNS_6TripleERNS_9MCContextE>:
  58:	stp	x29, x30, [sp, #-32]!
  5c:	mov	x0, #0x10                  	// #16
  60:	mov	x29, sp
  64:	str	x19, [sp, #16]
  68:	mov	x19, x1
  6c:	bl	0 <_Znwm>
  70:	mov	x1, x19
  74:	mov	x19, x0
  78:	bl	40 <_ZN4llvm16MCRelocationInfoC1ERNS_9MCContextE>
  7c:	mov	x0, x19
  80:	ldr	x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	ret

MCSymbolizer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm12MCSymbolizerD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm12MCSymbolizerD1Ev>
   4:	mov	x2, x0
   8:	ldr	x0, [x0, #16]
   c:	ldr	x1, [x1]
  10:	add	x1, x1, #0x10
  14:	str	x1, [x2]
  18:	cbz	x0, 2c <_ZN4llvm12MCSymbolizerD1Ev+0x2c>
  1c:	ldr	x1, [x0]
  20:	ldr	x1, [x1, #8]
  24:	mov	x16, x1
  28:	br	x16
  2c:	ret

0000000000000030 <_ZN4llvm12MCSymbolizerD0Ev>:
  30:	stp	x29, x30, [sp, #-32]!
  34:	mov	x29, sp
  38:	str	x19, [sp, #16]
  3c:	mov	x19, x0
  40:	bl	0 <_ZN4llvm12MCSymbolizerD1Ev>
  44:	mov	x0, x19
  48:	mov	x1, #0x18                  	// #24
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	b	0 <_ZdlPvm>
