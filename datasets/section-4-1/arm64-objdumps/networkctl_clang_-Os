
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//networkctl_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004038b8 <.init>:
  4038b8:	stp	x29, x30, [sp, #-16]!
  4038bc:	mov	x29, sp
  4038c0:	bl	4043a0 <clock_supported@plt+0x60>
  4038c4:	ldp	x29, x30, [sp], #16
  4038c8:	ret

Disassembly of section .plt:

00000000004038d0 <__libc_start_main@plt-0x20>:
  4038d0:	stp	x16, x30, [sp, #-16]!
  4038d4:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4038d8:	ldr	x17, [x16, #2760]
  4038dc:	add	x16, x16, #0xac8
  4038e0:	br	x17
  4038e4:	nop
  4038e8:	nop
  4038ec:	nop

00000000004038f0 <__libc_start_main@plt>:
  4038f0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4038f4:	ldr	x17, [x16, #2768]
  4038f8:	add	x16, x16, #0xad0
  4038fc:	br	x17

0000000000403900 <abort@plt>:
  403900:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403904:	ldr	x17, [x16, #2776]
  403908:	add	x16, x16, #0xad8
  40390c:	br	x17

0000000000403910 <__gmon_start__@plt>:
  403910:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403914:	ldr	x17, [x16, #2784]
  403918:	add	x16, x16, #0xae0
  40391c:	br	x17

0000000000403920 <log_show_color@plt>:
  403920:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403924:	ldr	x17, [x16, #2792]
  403928:	add	x16, x16, #0xae8
  40392c:	br	x17

0000000000403930 <log_parse_environment_realm@plt>:
  403930:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403934:	ldr	x17, [x16, #2800]
  403938:	add	x16, x16, #0xaf0
  40393c:	br	x17

0000000000403940 <log_open@plt>:
  403940:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403944:	ldr	x17, [x16, #2808]
  403948:	add	x16, x16, #0xaf8
  40394c:	br	x17

0000000000403950 <getopt_long@plt>:
  403950:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403954:	ldr	x17, [x16, #2816]
  403958:	add	x16, x16, #0xb00
  40395c:	br	x17

0000000000403960 <version@plt>:
  403960:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403964:	ldr	x17, [x16, #2824]
  403968:	add	x16, x16, #0xb08
  40396c:	br	x17

0000000000403970 <terminal_urlify_man@plt>:
  403970:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403974:	ldr	x17, [x16, #2832]
  403978:	add	x16, x16, #0xb10
  40397c:	br	x17

0000000000403980 <colors_enabled@plt>:
  403980:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403984:	ldr	x17, [x16, #2840]
  403988:	add	x16, x16, #0xb18
  40398c:	br	x17

0000000000403990 <printf@plt>:
  403990:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403994:	ldr	x17, [x16, #2848]
  403998:	add	x16, x16, #0xb20
  40399c:	br	x17

00000000004039a0 <log_oom_internal@plt>:
  4039a0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4039a4:	ldr	x17, [x16, #2856]
  4039a8:	add	x16, x16, #0xb28
  4039ac:	br	x17

00000000004039b0 <free@plt>:
  4039b0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4039b4:	ldr	x17, [x16, #2864]
  4039b8:	add	x16, x16, #0xb30
  4039bc:	br	x17

00000000004039c0 <access@plt>:
  4039c0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4039c4:	ldr	x17, [x16, #2872]
  4039c8:	add	x16, x16, #0xb38
  4039cc:	br	x17

00000000004039d0 <dispatch_verb@plt>:
  4039d0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4039d4:	ldr	x17, [x16, #2880]
  4039d8:	add	x16, x16, #0xb40
  4039dc:	br	x17

00000000004039e0 <ask_password_agent_close@plt>:
  4039e0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4039e4:	ldr	x17, [x16, #2888]
  4039e8:	add	x16, x16, #0xb48
  4039ec:	br	x17

00000000004039f0 <polkit_agent_close@plt>:
  4039f0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4039f4:	ldr	x17, [x16, #2896]
  4039f8:	add	x16, x16, #0xb50
  4039fc:	br	x17

0000000000403a00 <pager_close@plt>:
  403a00:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403a04:	ldr	x17, [x16, #2904]
  403a08:	add	x16, x16, #0xb58
  403a0c:	br	x17

0000000000403a10 <mac_selinux_finish@plt>:
  403a10:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403a14:	ldr	x17, [x16, #2912]
  403a18:	add	x16, x16, #0xb60
  403a1c:	br	x17

0000000000403a20 <fwrite@plt>:
  403a20:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403a24:	ldr	x17, [x16, #2920]
  403a28:	add	x16, x16, #0xb68
  403a2c:	br	x17

0000000000403a30 <log_assert_failed_realm@plt>:
  403a30:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403a34:	ldr	x17, [x16, #2928]
  403a38:	add	x16, x16, #0xb70
  403a3c:	br	x17

0000000000403a40 <log_assert_failed_unreachable_realm@plt>:
  403a40:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403a44:	ldr	x17, [x16, #2936]
  403a48:	add	x16, x16, #0xb78
  403a4c:	br	x17

0000000000403a50 <sd_netlink_open@plt>:
  403a50:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403a54:	ldr	x17, [x16, #2944]
  403a58:	add	x16, x16, #0xb80
  403a5c:	br	x17

0000000000403a60 <pager_open@plt>:
  403a60:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403a64:	ldr	x17, [x16, #2952]
  403a68:	add	x16, x16, #0xb88
  403a6c:	br	x17

0000000000403a70 <table_new_internal@plt>:
  403a70:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403a74:	ldr	x17, [x16, #2960]
  403a78:	add	x16, x16, #0xb90
  403a7c:	br	x17

0000000000403a80 <table_set_header@plt>:
  403a80:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403a84:	ldr	x17, [x16, #2968]
  403a88:	add	x16, x16, #0xb98
  403a8c:	br	x17

0000000000403a90 <table_get_cell@plt>:
  403a90:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403a94:	ldr	x17, [x16, #2976]
  403a98:	add	x16, x16, #0xba0
  403a9c:	br	x17

0000000000403aa0 <table_set_minimum_width@plt>:
  403aa0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403aa4:	ldr	x17, [x16, #2984]
  403aa8:	add	x16, x16, #0xba8
  403aac:	br	x17

0000000000403ab0 <table_set_weight@plt>:
  403ab0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403ab4:	ldr	x17, [x16, #2992]
  403ab8:	add	x16, x16, #0xbb0
  403abc:	br	x17

0000000000403ac0 <table_set_ellipsize_percent@plt>:
  403ac0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403ac4:	ldr	x17, [x16, #3000]
  403ac8:	add	x16, x16, #0xbb8
  403acc:	br	x17

0000000000403ad0 <table_set_align_percent@plt>:
  403ad0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403ad4:	ldr	x17, [x16, #3008]
  403ad8:	add	x16, x16, #0xbc0
  403adc:	br	x17

0000000000403ae0 <sd_network_link_get_operational_state@plt>:
  403ae0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403ae4:	ldr	x17, [x16, #3016]
  403ae8:	add	x16, x16, #0xbc8
  403aec:	br	x17

0000000000403af0 <sd_network_link_get_setup_state@plt>:
  403af0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403af4:	ldr	x17, [x16, #3024]
  403af8:	add	x16, x16, #0xbd0
  403afc:	br	x17

0000000000403b00 <strdup@plt>:
  403b00:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403b04:	ldr	x17, [x16, #3032]
  403b08:	add	x16, x16, #0xbd8
  403b0c:	br	x17

0000000000403b10 <table_add_many_internal@plt>:
  403b10:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403b14:	ldr	x17, [x16, #3040]
  403b18:	add	x16, x16, #0xbe0
  403b1c:	br	x17

0000000000403b20 <table_print@plt>:
  403b20:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403b24:	ldr	x17, [x16, #3048]
  403b28:	add	x16, x16, #0xbe8
  403b2c:	br	x17

0000000000403b30 <log_get_max_level_realm@plt>:
  403b30:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403b34:	ldr	x17, [x16, #3056]
  403b38:	add	x16, x16, #0xbf0
  403b3c:	br	x17

0000000000403b40 <log_internal_realm@plt>:
  403b40:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403b44:	ldr	x17, [x16, #3064]
  403b48:	add	x16, x16, #0xbf8
  403b4c:	br	x17

0000000000403b50 <table_unref@plt>:
  403b50:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403b54:	ldr	x17, [x16, #3072]
  403b58:	add	x16, x16, #0xc00
  403b5c:	br	x17

0000000000403b60 <sd_device_unref@plt>:
  403b60:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403b64:	ldr	x17, [x16, #3080]
  403b68:	add	x16, x16, #0xc08
  403b6c:	br	x17

0000000000403b70 <sd_netlink_unref@plt>:
  403b70:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403b74:	ldr	x17, [x16, #3088]
  403b78:	add	x16, x16, #0xc10
  403b7c:	br	x17

0000000000403b80 <sd_bus_open_system@plt>:
  403b80:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403b84:	ldr	x17, [x16, #3096]
  403b88:	add	x16, x16, #0xc18
  403b8c:	br	x17

0000000000403b90 <sd_hwdb_new@plt>:
  403b90:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403b94:	ldr	x17, [x16, #3104]
  403b98:	add	x16, x16, #0xc20
  403b9c:	br	x17

0000000000403ba0 <sd_network_get_operational_state@plt>:
  403ba0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403ba4:	ldr	x17, [x16, #3112]
  403ba8:	add	x16, x16, #0xc28
  403bac:	br	x17

0000000000403bb0 <special_glyph@plt>:
  403bb0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403bb4:	ldr	x17, [x16, #3120]
  403bb8:	add	x16, x16, #0xc30
  403bbc:	br	x17

0000000000403bc0 <sd_network_get_dns@plt>:
  403bc0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403bc4:	ldr	x17, [x16, #3128]
  403bc8:	add	x16, x16, #0xc38
  403bcc:	br	x17

0000000000403bd0 <sd_network_get_search_domains@plt>:
  403bd0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403bd4:	ldr	x17, [x16, #3136]
  403bd8:	add	x16, x16, #0xc40
  403bdc:	br	x17

0000000000403be0 <sd_network_get_route_domains@plt>:
  403be0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403be4:	ldr	x17, [x16, #3144]
  403be8:	add	x16, x16, #0xc48
  403bec:	br	x17

0000000000403bf0 <sd_network_get_ntp@plt>:
  403bf0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403bf4:	ldr	x17, [x16, #3152]
  403bf8:	add	x16, x16, #0xc50
  403bfc:	br	x17

0000000000403c00 <strv_free@plt>:
  403c00:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403c04:	ldr	x17, [x16, #3160]
  403c08:	add	x16, x16, #0xc58
  403c0c:	br	x17

0000000000403c10 <fputc@plt>:
  403c10:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403c14:	ldr	x17, [x16, #3168]
  403c18:	add	x16, x16, #0xc60
  403c1c:	br	x17

0000000000403c20 <sd_network_link_get_dns@plt>:
  403c20:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403c24:	ldr	x17, [x16, #3176]
  403c28:	add	x16, x16, #0xc68
  403c2c:	br	x17

0000000000403c30 <sd_network_link_get_search_domains@plt>:
  403c30:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403c34:	ldr	x17, [x16, #3184]
  403c38:	add	x16, x16, #0xc70
  403c3c:	br	x17

0000000000403c40 <sd_network_link_get_route_domains@plt>:
  403c40:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403c44:	ldr	x17, [x16, #3192]
  403c48:	add	x16, x16, #0xc78
  403c4c:	br	x17

0000000000403c50 <sd_network_link_get_ntp@plt>:
  403c50:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403c54:	ldr	x17, [x16, #3200]
  403c58:	add	x16, x16, #0xc80
  403c5c:	br	x17

0000000000403c60 <sd_device_get_property_value@plt>:
  403c60:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403c64:	ldr	x17, [x16, #3208]
  403c68:	add	x16, x16, #0xc88
  403c6c:	br	x17

0000000000403c70 <sd_network_link_get_network_file@plt>:
  403c70:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403c74:	ldr	x17, [x16, #3216]
  403c78:	add	x16, x16, #0xc90
  403c7c:	br	x17

0000000000403c80 <sd_network_link_get_carrier_bound_to@plt>:
  403c80:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403c84:	ldr	x17, [x16, #3224]
  403c88:	add	x16, x16, #0xc98
  403c8c:	br	x17

0000000000403c90 <sd_network_link_get_carrier_bound_by@plt>:
  403c90:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403c94:	ldr	x17, [x16, #3232]
  403c98:	add	x16, x16, #0xca0
  403c9c:	br	x17

0000000000403ca0 <table_add_cell_stringf@plt>:
  403ca0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403ca4:	ldr	x17, [x16, #3240]
  403ca8:	add	x16, x16, #0xca8
  403cac:	br	x17

0000000000403cb0 <ether_addr_to_string@plt>:
  403cb0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403cb4:	ldr	x17, [x16, #3248]
  403cb8:	add	x16, x16, #0xcb0
  403cbc:	br	x17

0000000000403cc0 <snprintf@plt>:
  403cc0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403cc4:	ldr	x17, [x16, #3256]
  403cc8:	add	x16, x16, #0xcb8
  403ccc:	br	x17

0000000000403cd0 <strcmp_ptr@plt>:
  403cd0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403cd4:	ldr	x17, [x16, #3264]
  403cd8:	add	x16, x16, #0xcc0
  403cdc:	br	x17

0000000000403ce0 <jiffies_to_usec@plt>:
  403ce0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403ce4:	ldr	x17, [x16, #3272]
  403ce8:	add	x16, x16, #0xcc8
  403cec:	br	x17

0000000000403cf0 <cescape@plt>:
  403cf0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403cf4:	ldr	x17, [x16, #3280]
  403cf8:	add	x16, x16, #0xcd0
  403cfc:	br	x17

0000000000403d00 <format_bytes_full@plt>:
  403d00:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403d04:	ldr	x17, [x16, #3288]
  403d08:	add	x16, x16, #0xcd8
  403d0c:	br	x17

0000000000403d10 <sd_network_link_get_timezone@plt>:
  403d10:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403d14:	ldr	x17, [x16, #3296]
  403d18:	add	x16, x16, #0xce0
  403d1c:	br	x17

0000000000403d20 <duplex_to_string@plt>:
  403d20:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403d24:	ldr	x17, [x16, #3304]
  403d28:	add	x16, x16, #0xce8
  403d2c:	br	x17

0000000000403d30 <port_to_string@plt>:
  403d30:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403d34:	ldr	x17, [x16, #3312]
  403d38:	add	x16, x16, #0xcf0
  403d3c:	br	x17

0000000000403d40 <safe_fclose@plt>:
  403d40:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403d44:	ldr	x17, [x16, #3320]
  403d48:	add	x16, x16, #0xcf8
  403d4c:	br	x17

0000000000403d50 <table_add_cell_full@plt>:
  403d50:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403d54:	ldr	x17, [x16, #3328]
  403d58:	add	x16, x16, #0xd00
  403d5c:	br	x17

0000000000403d60 <sd_hwdb_unref@plt>:
  403d60:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403d64:	ldr	x17, [x16, #3336]
  403d68:	add	x16, x16, #0xd08
  403d6c:	br	x17

0000000000403d70 <sd_bus_flush_close_unref@plt>:
  403d70:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403d74:	ldr	x17, [x16, #3344]
  403d78:	add	x16, x16, #0xd10
  403d7c:	br	x17

0000000000403d80 <strlen@plt>:
  403d80:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403d84:	ldr	x17, [x16, #3352]
  403d88:	add	x16, x16, #0xd18
  403d8c:	br	x17

0000000000403d90 <ellipsize_mem@plt>:
  403d90:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403d94:	ldr	x17, [x16, #3360]
  403d98:	add	x16, x16, #0xd20
  403d9c:	br	x17

0000000000403da0 <malloc@plt>:
  403da0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403da4:	ldr	x17, [x16, #3368]
  403da8:	add	x16, x16, #0xd28
  403dac:	br	x17

0000000000403db0 <columns@plt>:
  403db0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403db4:	ldr	x17, [x16, #3376]
  403db8:	add	x16, x16, #0xd30
  403dbc:	br	x17

0000000000403dc0 <puts@plt>:
  403dc0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403dc4:	ldr	x17, [x16, #3384]
  403dc8:	add	x16, x16, #0xd38
  403dcc:	br	x17

0000000000403dd0 <putchar@plt>:
  403dd0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403dd4:	ldr	x17, [x16, #3392]
  403dd8:	add	x16, x16, #0xd40
  403ddc:	br	x17

0000000000403de0 <sd_rtnl_message_new_addrlabel@plt>:
  403de0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403de4:	ldr	x17, [x16, #3400]
  403de8:	add	x16, x16, #0xd48
  403dec:	br	x17

0000000000403df0 <sd_netlink_message_request_dump@plt>:
  403df0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403df4:	ldr	x17, [x16, #3408]
  403df8:	add	x16, x16, #0xd50
  403dfc:	br	x17

0000000000403e00 <sd_netlink_call@plt>:
  403e00:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403e04:	ldr	x17, [x16, #3416]
  403e08:	add	x16, x16, #0xd58
  403e0c:	br	x17

0000000000403e10 <table_set_sort@plt>:
  403e10:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403e14:	ldr	x17, [x16, #3424]
  403e18:	add	x16, x16, #0xd60
  403e1c:	br	x17

0000000000403e20 <sd_netlink_message_get_errno@plt>:
  403e20:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403e24:	ldr	x17, [x16, #3432]
  403e28:	add	x16, x16, #0xd68
  403e2c:	br	x17

0000000000403e30 <sd_netlink_message_read_u32@plt>:
  403e30:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403e34:	ldr	x17, [x16, #3440]
  403e38:	add	x16, x16, #0xd70
  403e3c:	br	x17

0000000000403e40 <sd_netlink_message_read_in6_addr@plt>:
  403e40:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403e44:	ldr	x17, [x16, #3448]
  403e48:	add	x16, x16, #0xd78
  403e4c:	br	x17

0000000000403e50 <in_addr_to_string@plt>:
  403e50:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403e54:	ldr	x17, [x16, #3456]
  403e58:	add	x16, x16, #0xd80
  403e5c:	br	x17

0000000000403e60 <sd_rtnl_message_addrlabel_get_prefixlen@plt>:
  403e60:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403e64:	ldr	x17, [x16, #3464]
  403e68:	add	x16, x16, #0xd88
  403e6c:	br	x17

0000000000403e70 <sd_netlink_message_next@plt>:
  403e70:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403e74:	ldr	x17, [x16, #3472]
  403e78:	add	x16, x16, #0xd90
  403e7c:	br	x17

0000000000403e80 <sd_netlink_message_unref@plt>:
  403e80:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403e84:	ldr	x17, [x16, #3480]
  403e88:	add	x16, x16, #0xd98
  403e8c:	br	x17

0000000000403e90 <internal_set_new@plt>:
  403e90:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403e94:	ldr	x17, [x16, #3488]
  403e98:	add	x16, x16, #0xda0
  403e9c:	br	x17

0000000000403ea0 <parse_ifindex_or_ifname@plt>:
  403ea0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403ea4:	ldr	x17, [x16, #3496]
  403ea8:	add	x16, x16, #0xda8
  403eac:	br	x17

0000000000403eb0 <set_put@plt>:
  403eb0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403eb4:	ldr	x17, [x16, #3504]
  403eb8:	add	x16, x16, #0xdb0
  403ebc:	br	x17

0000000000403ec0 <set_iterate@plt>:
  403ec0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403ec4:	ldr	x17, [x16, #3512]
  403ec8:	add	x16, x16, #0xdb8
  403ecc:	br	x17

0000000000403ed0 <sd_rtnl_message_new_link@plt>:
  403ed0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403ed4:	ldr	x17, [x16, #3520]
  403ed8:	add	x16, x16, #0xdc0
  403edc:	br	x17

0000000000403ee0 <rtnl_log_create_error@plt>:
  403ee0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403ee4:	ldr	x17, [x16, #3528]
  403ee8:	add	x16, x16, #0xdc8
  403eec:	br	x17

0000000000403ef0 <format_ifname_full@plt>:
  403ef0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403ef4:	ldr	x17, [x16, #3536]
  403ef8:	add	x16, x16, #0xdd0
  403efc:	br	x17

0000000000403f00 <internal_hashmap_free@plt>:
  403f00:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403f04:	ldr	x17, [x16, #3544]
  403f08:	add	x16, x16, #0xdd8
  403f0c:	br	x17

0000000000403f10 <sd_bus_call_method@plt>:
  403f10:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403f14:	ldr	x17, [x16, #3552]
  403f18:	add	x16, x16, #0xde0
  403f1c:	br	x17

0000000000403f20 <bus_error_message@plt>:
  403f20:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403f24:	ldr	x17, [x16, #3560]
  403f28:	add	x16, x16, #0xde8
  403f2c:	br	x17

0000000000403f30 <sd_bus_error_free@plt>:
  403f30:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403f34:	ldr	x17, [x16, #3568]
  403f38:	add	x16, x16, #0xdf0
  403f3c:	br	x17

0000000000403f40 <greedy_realloc0@plt>:
  403f40:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403f44:	ldr	x17, [x16, #3576]
  403f48:	add	x16, x16, #0xdf8
  403f4c:	br	x17

0000000000403f50 <sd_netlink_message_get_type@plt>:
  403f50:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403f54:	ldr	x17, [x16, #3584]
  403f58:	add	x16, x16, #0xe00
  403f5c:	br	x17

0000000000403f60 <sd_rtnl_message_link_get_ifindex@plt>:
  403f60:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403f64:	ldr	x17, [x16, #3592]
  403f68:	add	x16, x16, #0xe08
  403f6c:	br	x17

0000000000403f70 <sd_netlink_message_read_string@plt>:
  403f70:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403f74:	ldr	x17, [x16, #3600]
  403f78:	add	x16, x16, #0xe10
  403f7c:	br	x17

0000000000403f80 <strv_fnmatch@plt>:
  403f80:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403f84:	ldr	x17, [x16, #3608]
  403f88:	add	x16, x16, #0xe18
  403f8c:	br	x17

0000000000403f90 <sd_rtnl_message_link_get_type@plt>:
  403f90:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403f94:	ldr	x17, [x16, #3616]
  403f98:	add	x16, x16, #0xe20
  403f9c:	br	x17

0000000000403fa0 <strscpy@plt>:
  403fa0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403fa4:	ldr	x17, [x16, #3624]
  403fa8:	add	x16, x16, #0xe28
  403fac:	br	x17

0000000000403fb0 <sd_netlink_message_read_ether_addr@plt>:
  403fb0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403fb4:	ldr	x17, [x16, #3632]
  403fb8:	add	x16, x16, #0xe30
  403fbc:	br	x17

0000000000403fc0 <sd_device_new_from_device_id@plt>:
  403fc0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403fc4:	ldr	x17, [x16, #3640]
  403fc8:	add	x16, x16, #0xe38
  403fcc:	br	x17

0000000000403fd0 <ethtool_get_link_info@plt>:
  403fd0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403fd4:	ldr	x17, [x16, #3648]
  403fd8:	add	x16, x16, #0xe40
  403fdc:	br	x17

0000000000403fe0 <sd_device_get_devtype@plt>:
  403fe0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403fe4:	ldr	x17, [x16, #3656]
  403fe8:	add	x16, x16, #0xe48
  403fec:	br	x17

0000000000403ff0 <sd_genl_socket_open@plt>:
  403ff0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  403ff4:	ldr	x17, [x16, #3664]
  403ff8:	add	x16, x16, #0xe50
  403ffc:	br	x17

0000000000404000 <sd_netlink_inc_rcvbuf@plt>:
  404000:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404004:	ldr	x17, [x16, #3672]
  404008:	add	x16, x16, #0xe58
  40400c:	br	x17

0000000000404010 <wifi_get_interface@plt>:
  404010:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404014:	ldr	x17, [x16, #3680]
  404018:	add	x16, x16, #0xe60
  40401c:	br	x17

0000000000404020 <wifi_get_station@plt>:
  404020:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404024:	ldr	x17, [x16, #3688]
  404028:	add	x16, x16, #0xe68
  40402c:	br	x17

0000000000404030 <sd_netlink_message_read@plt>:
  404030:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404034:	ldr	x17, [x16, #3696]
  404038:	add	x16, x16, #0xe70
  40403c:	br	x17

0000000000404040 <sd_netlink_message_enter_container@plt>:
  404040:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404044:	ldr	x17, [x16, #3704]
  404048:	add	x16, x16, #0xe78
  40404c:	br	x17

0000000000404050 <strcmp@plt>:
  404050:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404054:	ldr	x17, [x16, #3712]
  404058:	add	x16, x16, #0xe80
  40405c:	br	x17

0000000000404060 <sd_netlink_message_read_in_addr@plt>:
  404060:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404064:	ldr	x17, [x16, #3720]
  404068:	add	x16, x16, #0xe88
  40406c:	br	x17

0000000000404070 <sd_netlink_message_read_u16@plt>:
  404070:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404074:	ldr	x17, [x16, #3728]
  404078:	add	x16, x16, #0xe90
  40407c:	br	x17

0000000000404080 <sd_netlink_message_read_u8@plt>:
  404080:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404084:	ldr	x17, [x16, #3736]
  404088:	add	x16, x16, #0xe98
  40408c:	br	x17

0000000000404090 <strncpy@plt>:
  404090:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404094:	ldr	x17, [x16, #3744]
  404098:	add	x16, x16, #0xea0
  40409c:	br	x17

00000000004040a0 <sd_netlink_message_exit_container@plt>:
  4040a0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4040a4:	ldr	x17, [x16, #3752]
  4040a8:	add	x16, x16, #0xea8
  4040ac:	br	x17

00000000004040b0 <safe_close@plt>:
  4040b0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4040b4:	ldr	x17, [x16, #3760]
  4040b8:	add	x16, x16, #0xeb0
  4040bc:	br	x17

00000000004040c0 <qsort@plt>:
  4040c0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4040c4:	ldr	x17, [x16, #3768]
  4040c8:	add	x16, x16, #0xeb8
  4040cc:	br	x17

00000000004040d0 <asprintf@plt>:
  4040d0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4040d4:	ldr	x17, [x16, #3776]
  4040d8:	add	x16, x16, #0xec0
  4040dc:	br	x17

00000000004040e0 <sd_bus_path_encode@plt>:
  4040e0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4040e4:	ldr	x17, [x16, #3784]
  4040e8:	add	x16, x16, #0xec8
  4040ec:	br	x17

00000000004040f0 <sd_bus_message_enter_container@plt>:
  4040f0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4040f4:	ldr	x17, [x16, #3792]
  4040f8:	add	x16, x16, #0xed0
  4040fc:	br	x17

0000000000404100 <sd_bus_message_read@plt>:
  404100:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404104:	ldr	x17, [x16, #3800]
  404108:	add	x16, x16, #0xed8
  40410c:	br	x17

0000000000404110 <sd_bus_message_exit_container@plt>:
  404110:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404114:	ldr	x17, [x16, #3808]
  404118:	add	x16, x16, #0xee0
  40411c:	br	x17

0000000000404120 <sd_bus_error_has_name@plt>:
  404120:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404124:	ldr	x17, [x16, #3816]
  404128:	add	x16, x16, #0xee8
  40412c:	br	x17

0000000000404130 <sd_bus_message_unref@plt>:
  404130:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404134:	ldr	x17, [x16, #3824]
  404138:	add	x16, x16, #0xef0
  40413c:	br	x17

0000000000404140 <strv_find@plt>:
  404140:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404144:	ldr	x17, [x16, #3832]
  404148:	add	x16, x16, #0xef8
  40414c:	br	x17

0000000000404150 <arphrd_to_name@plt>:
  404150:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404154:	ldr	x17, [x16, #3840]
  404158:	add	x16, x16, #0xf00
  40415c:	br	x17

0000000000404160 <ascii_strlower@plt>:
  404160:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404164:	ldr	x17, [x16, #3848]
  404168:	add	x16, x16, #0xf08
  40416c:	br	x17

0000000000404170 <local_addresses@plt>:
  404170:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404174:	ldr	x17, [x16, #3856]
  404178:	add	x16, x16, #0xf10
  40417c:	br	x17

0000000000404180 <sd_network_link_get_dhcp4_address@plt>:
  404180:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404184:	ldr	x17, [x16, #3864]
  404188:	add	x16, x16, #0xf18
  40418c:	br	x17

0000000000404190 <strjoin_real@plt>:
  404190:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404194:	ldr	x17, [x16, #3872]
  404198:	add	x16, x16, #0xf20
  40419c:	br	x17

00000000004041a0 <local_gateways@plt>:
  4041a0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4041a4:	ldr	x17, [x16, #3880]
  4041a8:	add	x16, x16, #0xf28
  4041ac:	br	x17

00000000004041b0 <sd_rtnl_message_new_neigh@plt>:
  4041b0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4041b4:	ldr	x17, [x16, #3888]
  4041b8:	add	x16, x16, #0xf30
  4041bc:	br	x17

00000000004041c0 <sd_rtnl_message_neigh_get_family@plt>:
  4041c0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4041c4:	ldr	x17, [x16, #3896]
  4041c8:	add	x16, x16, #0xf38
  4041cc:	br	x17

00000000004041d0 <sd_rtnl_message_neigh_get_ifindex@plt>:
  4041d0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4041d4:	ldr	x17, [x16, #3904]
  4041d8:	add	x16, x16, #0xf40
  4041dc:	br	x17

00000000004041e0 <in_addr_equal@plt>:
  4041e0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4041e4:	ldr	x17, [x16, #3912]
  4041e8:	add	x16, x16, #0xf48
  4041ec:	br	x17

00000000004041f0 <sd_hwdb_get@plt>:
  4041f0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4041f4:	ldr	x17, [x16, #3920]
  4041f8:	add	x16, x16, #0xf50
  4041fc:	br	x17

0000000000404200 <fopen64@plt>:
  404200:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404204:	ldr	x17, [x16, #3928]
  404208:	add	x16, x16, #0xf58
  40420c:	br	x17

0000000000404210 <__errno_location@plt>:
  404210:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404214:	ldr	x17, [x16, #3936]
  404218:	add	x16, x16, #0xf60
  40421c:	br	x17

0000000000404220 <fread@plt>:
  404220:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404224:	ldr	x17, [x16, #3944]
  404228:	add	x16, x16, #0xf68
  40422c:	br	x17

0000000000404230 <feof@plt>:
  404230:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404234:	ldr	x17, [x16, #3952]
  404238:	add	x16, x16, #0xf70
  40423c:	br	x17

0000000000404240 <memcmp@plt>:
  404240:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404244:	ldr	x17, [x16, #3960]
  404248:	add	x16, x16, #0xf78
  40424c:	br	x17

0000000000404250 <siphash24_compress@plt>:
  404250:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404254:	ldr	x17, [x16, #3968]
  404258:	add	x16, x16, #0xf80
  40425c:	br	x17

0000000000404260 <internal_hashmap_remove_value@plt>:
  404260:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404264:	ldr	x17, [x16, #3976]
  404268:	add	x16, x16, #0xf88
  40426c:	br	x17

0000000000404270 <prioq_remove@plt>:
  404270:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404274:	ldr	x17, [x16, #3984]
  404278:	add	x16, x16, #0xf90
  40427c:	br	x17

0000000000404280 <calloc@plt>:
  404280:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404284:	ldr	x17, [x16, #3992]
  404288:	add	x16, x16, #0xf98
  40428c:	br	x17

0000000000404290 <memdup@plt>:
  404290:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404294:	ldr	x17, [x16, #4000]
  404298:	add	x16, x16, #0xfa0
  40429c:	br	x17

00000000004042a0 <memchr@plt>:
  4042a0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4042a4:	ldr	x17, [x16, #4008]
  4042a8:	add	x16, x16, #0xfa8
  4042ac:	br	x17

00000000004042b0 <cescape_length@plt>:
  4042b0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4042b4:	ldr	x17, [x16, #4016]
  4042b8:	add	x16, x16, #0xfb0
  4042bc:	br	x17

00000000004042c0 <clock_boottime_or_monotonic@plt>:
  4042c0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4042c4:	ldr	x17, [x16, #4024]
  4042c8:	add	x16, x16, #0xfb8
  4042cc:	br	x17

00000000004042d0 <triple_timestamp_by_clock@plt>:
  4042d0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4042d4:	ldr	x17, [x16, #4032]
  4042d8:	add	x16, x16, #0xfc0
  4042dc:	br	x17

00000000004042e0 <now@plt>:
  4042e0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4042e4:	ldr	x17, [x16, #4040]
  4042e8:	add	x16, x16, #0xfc8
  4042ec:	br	x17

00000000004042f0 <prioq_reshuffle@plt>:
  4042f0:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  4042f4:	ldr	x17, [x16, #4048]
  4042f8:	add	x16, x16, #0xfd0
  4042fc:	br	x17

0000000000404300 <bcmp@plt>:
  404300:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404304:	ldr	x17, [x16, #4056]
  404308:	add	x16, x16, #0xfd8
  40430c:	br	x17

0000000000404310 <log_assert_failed_return_realm@plt>:
  404310:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404314:	ldr	x17, [x16, #4064]
  404318:	add	x16, x16, #0xfe0
  40431c:	br	x17

0000000000404320 <hexmem@plt>:
  404320:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404324:	ldr	x17, [x16, #4072]
  404328:	add	x16, x16, #0xfe8
  40432c:	br	x17

0000000000404330 <memcpy@plt>:
  404330:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404334:	ldr	x17, [x16, #4080]
  404338:	add	x16, x16, #0xff0
  40433c:	br	x17

0000000000404340 <clock_supported@plt>:
  404340:	adrp	x16, 41f000 <clock_supported@plt+0x1acc0>
  404344:	ldr	x17, [x16, #4088]
  404348:	add	x16, x16, #0xff8
  40434c:	br	x17

Disassembly of section .text:

0000000000404350 <.text>:
  404350:	mov	x29, #0x0                   	// #0
  404354:	mov	x30, #0x0                   	// #0
  404358:	mov	x5, x0
  40435c:	ldr	x1, [sp]
  404360:	add	x2, sp, #0x8
  404364:	mov	x6, sp
  404368:	movz	x0, #0x0, lsl #48
  40436c:	movk	x0, #0x0, lsl #32
  404370:	movk	x0, #0x40, lsl #16
  404374:	movk	x0, #0x447c
  404378:	movz	x3, #0x0, lsl #48
  40437c:	movk	x3, #0x0, lsl #32
  404380:	movk	x3, #0x40, lsl #16
  404384:	movk	x3, #0xad68
  404388:	movz	x4, #0x0, lsl #48
  40438c:	movk	x4, #0x0, lsl #32
  404390:	movk	x4, #0x40, lsl #16
  404394:	movk	x4, #0xade8
  404398:	bl	4038f0 <__libc_start_main@plt>
  40439c:	bl	403900 <abort@plt>
  4043a0:	adrp	x0, 41f000 <clock_supported@plt+0x1acc0>
  4043a4:	ldr	x0, [x0, #2720]
  4043a8:	cbz	x0, 4043b0 <clock_supported@plt+0x70>
  4043ac:	b	403910 <__gmon_start__@plt>
  4043b0:	ret
  4043b4:	adrp	x0, 420000 <__bss_start@@Base>
  4043b8:	add	x1, x0, #0x0
  4043bc:	adrp	x0, 420000 <__bss_start@@Base>
  4043c0:	add	x0, x0, #0x0
  4043c4:	cmp	x1, x0
  4043c8:	b.eq	4043f4 <clock_supported@plt+0xb4>  // b.none
  4043cc:	sub	sp, sp, #0x10
  4043d0:	adrp	x1, 40a000 <clock_supported@plt+0x5cc0>
  4043d4:	ldr	x1, [x1, #3584]
  4043d8:	str	x1, [sp, #8]
  4043dc:	cbz	x1, 4043ec <clock_supported@plt+0xac>
  4043e0:	mov	x16, x1
  4043e4:	add	sp, sp, #0x10
  4043e8:	br	x16
  4043ec:	add	sp, sp, #0x10
  4043f0:	ret
  4043f4:	ret
  4043f8:	adrp	x0, 420000 <__bss_start@@Base>
  4043fc:	add	x1, x0, #0x0
  404400:	adrp	x0, 420000 <__bss_start@@Base>
  404404:	add	x0, x0, #0x0
  404408:	sub	x1, x1, x0
  40440c:	mov	x2, #0x2                   	// #2
  404410:	asr	x1, x1, #3
  404414:	sdiv	x1, x1, x2
  404418:	cbz	x1, 404444 <clock_supported@plt+0x104>
  40441c:	sub	sp, sp, #0x10
  404420:	adrp	x2, 40a000 <clock_supported@plt+0x5cc0>
  404424:	ldr	x2, [x2, #3592]
  404428:	str	x2, [sp, #8]
  40442c:	cbz	x2, 40443c <clock_supported@plt+0xfc>
  404430:	mov	x16, x2
  404434:	add	sp, sp, #0x10
  404438:	br	x16
  40443c:	add	sp, sp, #0x10
  404440:	ret
  404444:	ret
  404448:	stp	x29, x30, [sp, #-32]!
  40444c:	mov	x29, sp
  404450:	str	x19, [sp, #16]
  404454:	adrp	x19, 420000 <__bss_start@@Base>
  404458:	ldrb	w0, [x19]
  40445c:	cbnz	w0, 40446c <clock_supported@plt+0x12c>
  404460:	bl	4043b4 <clock_supported@plt+0x74>
  404464:	mov	w0, #0x1                   	// #1
  404468:	strb	w0, [x19]
  40446c:	ldr	x19, [sp, #16]
  404470:	ldp	x29, x30, [sp], #32
  404474:	ret
  404478:	b	4043f8 <clock_supported@plt+0xb8>
  40447c:	stp	x29, x30, [sp, #-96]!
  404480:	adrp	x8, 420000 <__bss_start@@Base>
  404484:	stp	x20, x19, [sp, #80]
  404488:	mov	w20, w0
  40448c:	adrp	x9, 420000 <__bss_start@@Base>
  404490:	str	w0, [x8, #16]
  404494:	mov	w0, #0x1                   	// #1
  404498:	str	x27, [sp, #16]
  40449c:	stp	x26, x25, [sp, #32]
  4044a0:	stp	x24, x23, [sp, #48]
  4044a4:	stp	x22, x21, [sp, #64]
  4044a8:	mov	x29, sp
  4044ac:	mov	x19, x1
  4044b0:	str	x1, [x9, #24]
  4044b4:	bl	403920 <log_show_color@plt>
  4044b8:	mov	w0, wzr
  4044bc:	bl	403930 <log_parse_environment_realm@plt>
  4044c0:	bl	403940 <log_open@plt>
  4044c4:	tbnz	w20, #31, 40471c <clock_supported@plt+0x3dc>
  4044c8:	cbz	x19, 40473c <clock_supported@plt+0x3fc>
  4044cc:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4044d0:	adrp	x3, 40a000 <clock_supported@plt+0x5cc0>
  4044d4:	add	x2, x2, #0x12a
  4044d8:	add	x3, x3, #0xe20
  4044dc:	mov	w0, w20
  4044e0:	mov	x1, x19
  4044e4:	mov	x4, xzr
  4044e8:	bl	403950 <getopt_long@plt>
  4044ec:	tbnz	w0, #31, 40465c <clock_supported@plt+0x31c>
  4044f0:	adrp	x21, 40b000 <clock_supported@plt+0x6cc0>
  4044f4:	adrp	x22, 40a000 <clock_supported@plt+0x5cc0>
  4044f8:	adrp	x23, 420000 <__bss_start@@Base>
  4044fc:	mov	w24, #0x1                   	// #1
  404500:	add	x21, x21, #0x12a
  404504:	add	x22, x22, #0xe20
  404508:	adrp	x25, 420000 <__bss_start@@Base>
  40450c:	adrp	x26, 420000 <__bss_start@@Base>
  404510:	adrp	x27, 420000 <__bss_start@@Base>
  404514:	cmp	w0, #0x72
  404518:	b.le	404534 <clock_supported@plt+0x1f4>
  40451c:	cmp	w0, #0x100
  404520:	b.gt	40454c <clock_supported@plt+0x20c>
  404524:	cmp	w0, #0x73
  404528:	b.ne	404590 <clock_supported@plt+0x250>  // b.any
  40452c:	strb	w24, [x25, #10]
  404530:	b	404570 <clock_supported@plt+0x230>
  404534:	cmp	w0, #0x3f
  404538:	b.eq	4045a4 <clock_supported@plt+0x264>  // b.none
  40453c:	cmp	w0, #0x61
  404540:	b.ne	4045ac <clock_supported@plt+0x26c>  // b.any
  404544:	strb	w24, [x23, #9]
  404548:	b	404570 <clock_supported@plt+0x230>
  40454c:	cmp	w0, #0x101
  404550:	b.ne	404564 <clock_supported@plt+0x224>  // b.any
  404554:	ldr	w8, [x26, #4]
  404558:	orr	w8, w8, #0x1
  40455c:	str	w8, [x26, #4]
  404560:	b	404570 <clock_supported@plt+0x230>
  404564:	cmp	w0, #0x102
  404568:	b.ne	404760 <clock_supported@plt+0x420>  // b.any
  40456c:	strb	w24, [x27, #8]
  404570:	mov	w0, w20
  404574:	mov	x1, x19
  404578:	mov	x2, x21
  40457c:	mov	x3, x22
  404580:	mov	x4, xzr
  404584:	bl	403950 <getopt_long@plt>
  404588:	tbz	w0, #31, 404514 <clock_supported@plt+0x1d4>
  40458c:	b	40465c <clock_supported@plt+0x31c>
  404590:	cmp	w0, #0x100
  404594:	b.ne	404760 <clock_supported@plt+0x420>  // b.any
  404598:	bl	403960 <version@plt>
  40459c:	mov	w21, w0
  4045a0:	b	404654 <clock_supported@plt+0x314>
  4045a4:	mov	w21, #0xffffffea            	// #-22
  4045a8:	b	40468c <clock_supported@plt+0x34c>
  4045ac:	cmp	w0, #0x68
  4045b0:	b.ne	404760 <clock_supported@plt+0x420>  // b.any
  4045b4:	adrp	x0, 40b000 <clock_supported@plt+0x6cc0>
  4045b8:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  4045bc:	add	x0, x0, #0x13f
  4045c0:	add	x1, x1, #0x14a
  4045c4:	add	x2, x29, #0x18
  4045c8:	str	xzr, [x29, #24]
  4045cc:	bl	403970 <terminal_urlify_man@plt>
  4045d0:	tbnz	w0, #31, 40462c <clock_supported@plt+0x2ec>
  4045d4:	adrp	x8, 420000 <__bss_start@@Base>
  4045d8:	ldr	x21, [x8, #32]
  4045dc:	bl	403980 <colors_enabled@plt>
  4045e0:	adrp	x23, 40b000 <clock_supported@plt+0x6cc0>
  4045e4:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  4045e8:	add	x23, x23, #0x497
  4045ec:	add	x8, x8, #0x48d
  4045f0:	tst	w0, #0x1
  4045f4:	csel	x22, x8, x23, ne  // ne = any
  4045f8:	bl	403980 <colors_enabled@plt>
  4045fc:	ldr	x4, [x29, #24]
  404600:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  404604:	add	x8, x8, #0x498
  404608:	tst	w0, #0x1
  40460c:	adrp	x0, 40b000 <clock_supported@plt+0x6cc0>
  404610:	csel	x3, x8, x23, ne  // ne = any
  404614:	add	x0, x0, #0x14c
  404618:	mov	x1, x21
  40461c:	mov	x2, x22
  404620:	bl	403990 <printf@plt>
  404624:	mov	w21, wzr
  404628:	b	40464c <clock_supported@plt+0x30c>
  40462c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  404630:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  404634:	add	x1, x1, #0xef
  404638:	add	x3, x3, #0xb8
  40463c:	mov	w2, #0x760                 	// #1888
  404640:	mov	w0, wzr
  404644:	bl	4039a0 <log_oom_internal@plt>
  404648:	mov	w21, w0
  40464c:	ldr	x0, [x29, #24]
  404650:	bl	4039b0 <free@plt>
  404654:	cmp	w21, #0x1
  404658:	b.lt	40468c <clock_supported@plt+0x34c>  // b.tstop
  40465c:	adrp	x0, 40b000 <clock_supported@plt+0x6cc0>
  404660:	add	x0, x0, #0x49d
  404664:	mov	w1, wzr
  404668:	bl	4039c0 <access@plt>
  40466c:	tbnz	w0, #31, 4046fc <clock_supported@plt+0x3bc>
  404670:	adrp	x2, 40a000 <clock_supported@plt+0x5cc0>
  404674:	add	x2, x2, #0xf00
  404678:	mov	w0, w20
  40467c:	mov	x1, x19
  404680:	mov	x3, xzr
  404684:	bl	4039d0 <dispatch_verb@plt>
  404688:	mov	w21, w0
  40468c:	bl	4039e0 <ask_password_agent_close@plt>
  404690:	bl	4039f0 <polkit_agent_close@plt>
  404694:	bl	403a00 <pager_close@plt>
  404698:	bl	403a10 <mac_selinux_finish@plt>
  40469c:	adrp	x8, 41f000 <clock_supported@plt+0x1acc0>
  4046a0:	ldr	x8, [x8, #2728]
  4046a4:	adrp	x19, 41f000 <clock_supported@plt+0x1acc0>
  4046a8:	ldr	x19, [x19, #2736]
  4046ac:	add	x9, x8, #0x7
  4046b0:	and	x20, x9, #0xfffffffffffffff8
  4046b4:	cmp	x20, x19
  4046b8:	cset	w9, cs  // cs = hs, nlast
  4046bc:	cmp	x8, #0x0
  4046c0:	cset	w8, eq  // eq = none
  4046c4:	orr	w8, w8, w9
  4046c8:	tbnz	w8, #0, 4046dc <clock_supported@plt+0x39c>
  4046cc:	ldp	x0, x8, [x20], #16
  4046d0:	blr	x8
  4046d4:	cmp	x20, x19
  4046d8:	b.cc	4046cc <clock_supported@plt+0x38c>  // b.lo, b.ul, b.last
  4046dc:	lsr	w0, w21, #31
  4046e0:	ldp	x20, x19, [sp, #80]
  4046e4:	ldp	x22, x21, [sp, #64]
  4046e8:	ldp	x24, x23, [sp, #48]
  4046ec:	ldp	x26, x25, [sp, #32]
  4046f0:	ldr	x27, [sp, #16]
  4046f4:	ldp	x29, x30, [sp], #96
  4046f8:	ret
  4046fc:	adrp	x8, 420000 <__bss_start@@Base>
  404700:	ldr	x3, [x8, #40]
  404704:	adrp	x0, 40b000 <clock_supported@plt+0x6cc0>
  404708:	add	x0, x0, #0x4b6
  40470c:	mov	w1, #0x46                  	// #70
  404710:	mov	w2, #0x1                   	// #1
  404714:	bl	403a20 <fwrite@plt>
  404718:	b	404670 <clock_supported@plt+0x330>
  40471c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  404720:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  404724:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  404728:	add	x1, x1, #0xe2
  40472c:	add	x2, x2, #0xef
  404730:	add	x4, x4, #0x108
  404734:	mov	w3, #0x792                 	// #1938
  404738:	b	404758 <clock_supported@plt+0x418>
  40473c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  404740:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  404744:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  404748:	add	x1, x1, #0x125
  40474c:	add	x2, x2, #0xef
  404750:	add	x4, x4, #0x108
  404754:	mov	w3, #0x793                 	// #1939
  404758:	mov	w0, wzr
  40475c:	bl	403a30 <log_assert_failed_realm@plt>
  404760:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  404764:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  404768:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  40476c:	add	x1, x1, #0x12e
  404770:	add	x2, x2, #0xef
  404774:	add	x4, x4, #0x108
  404778:	mov	w3, #0x7b3                 	// #1971
  40477c:	mov	w0, wzr
  404780:	bl	403a40 <log_assert_failed_unreachable_realm@plt>
  404784:	sub	sp, sp, #0xe0
  404788:	stp	x29, x30, [sp, #128]
  40478c:	add	x29, sp, #0x80
  404790:	stp	x20, x19, [sp, #208]
  404794:	mov	w20, w0
  404798:	sub	x0, x29, #0x8
  40479c:	stp	x28, x27, [sp, #144]
  4047a0:	stp	x26, x25, [sp, #160]
  4047a4:	stp	x24, x23, [sp, #176]
  4047a8:	stp	x22, x21, [sp, #192]
  4047ac:	mov	x21, x1
  4047b0:	stp	xzr, xzr, [x29, #-16]
  4047b4:	bl	403a50 <sd_netlink_open@plt>
  4047b8:	tbnz	w0, #31, 404a28 <clock_supported@plt+0x6e8>
  4047bc:	ldur	x1, [x29, #-8]
  4047c0:	add	x8, x21, #0x8
  4047c4:	cmp	w20, #0x1
  4047c8:	csel	x2, x8, xzr, gt
  4047cc:	sub	x3, x29, #0x10
  4047d0:	mov	x0, xzr
  4047d4:	bl	4077c0 <clock_supported@plt+0x3480>
  4047d8:	mov	w19, w0
  4047dc:	tbnz	w0, #31, 404af8 <clock_supported@plt+0x7b8>
  4047e0:	adrp	x8, 420000 <__bss_start@@Base>
  4047e4:	ldr	w0, [x8, #4]
  4047e8:	bl	403a60 <pager_open@plt>
  4047ec:	adrp	x0, 40b000 <clock_supported@plt+0x6cc0>
  4047f0:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  4047f4:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4047f8:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  4047fc:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  404800:	add	x0, x0, #0x560
  404804:	add	x1, x1, #0x564
  404808:	add	x2, x2, #0x569
  40480c:	add	x3, x3, #0x56e
  404810:	add	x4, x4, #0x57a
  404814:	mov	x5, xzr
  404818:	bl	403a70 <table_new_internal@plt>
  40481c:	cbz	x0, 404a78 <clock_supported@plt+0x738>
  404820:	adrp	x8, 420000 <__bss_start@@Base>
  404824:	ldrb	w8, [x8, #8]
  404828:	mov	x20, x0
  40482c:	mvn	w8, w8
  404830:	and	w1, w8, #0x1
  404834:	bl	403a80 <table_set_header@plt>
  404838:	mov	x0, x20
  40483c:	mov	x1, xzr
  404840:	mov	x2, xzr
  404844:	bl	403a90 <table_get_cell@plt>
  404848:	cbz	x0, 404b74 <clock_supported@plt+0x834>
  40484c:	mov	x21, x0
  404850:	mov	w2, #0x3                   	// #3
  404854:	mov	x0, x20
  404858:	mov	x1, x21
  40485c:	bl	403aa0 <table_set_minimum_width@plt>
  404860:	mov	x0, x20
  404864:	mov	x1, x21
  404868:	mov	w2, wzr
  40486c:	bl	403ab0 <table_set_weight@plt>
  404870:	mov	w2, #0x64                  	// #100
  404874:	mov	x0, x20
  404878:	mov	x1, x21
  40487c:	bl	403ac0 <table_set_ellipsize_percent@plt>
  404880:	mov	w2, #0x64                  	// #100
  404884:	mov	x0, x20
  404888:	mov	x1, x21
  40488c:	bl	403ad0 <table_set_align_percent@plt>
  404890:	mov	w2, #0x1                   	// #1
  404894:	mov	x0, x20
  404898:	mov	x1, xzr
  40489c:	bl	403a90 <table_get_cell@plt>
  4048a0:	cbz	x0, 404b94 <clock_supported@plt+0x854>
  4048a4:	mov	x1, x0
  4048a8:	mov	w2, #0x64                  	// #100
  4048ac:	mov	x0, x20
  4048b0:	bl	403ac0 <table_set_ellipsize_percent@plt>
  4048b4:	cmp	w19, #0x1
  4048b8:	b.lt	4049f4 <clock_supported@plt+0x6b4>  // b.tstop
  4048bc:	mov	w8, #0x1c8                 	// #456
  4048c0:	adrp	x26, 40b000 <clock_supported@plt+0x6cc0>
  4048c4:	mov	x25, xzr
  4048c8:	add	x26, x26, #0xa62
  4048cc:	mov	w27, #0x18                  	// #24
  4048d0:	mov	w28, #0x1e                  	// #30
  4048d4:	umull	x24, w19, w8
  4048d8:	mov	w21, #0x1                   	// #1
  4048dc:	ldur	x8, [x29, #-16]
  4048e0:	stp	xzr, xzr, [x29, #-32]
  4048e4:	sub	x1, x29, #0x20
  4048e8:	add	x8, x8, x25
  4048ec:	ldr	w0, [x8, #96]
  4048f0:	bl	403ae0 <sd_network_link_get_operational_state@plt>
  4048f4:	ldur	x8, [x29, #-16]
  4048f8:	ldur	x1, [x29, #-32]
  4048fc:	sub	x2, x29, #0x28
  404900:	sub	x3, x29, #0x30
  404904:	add	x0, x8, x25
  404908:	bl	4082f0 <clock_supported@plt+0x3fb0>
  40490c:	ldur	x8, [x29, #-16]
  404910:	sub	x1, x29, #0x18
  404914:	add	x8, x8, x25
  404918:	ldr	w0, [x8, #96]
  40491c:	bl	403af0 <sd_network_link_get_setup_state@plt>
  404920:	cmn	w0, #0x3d
  404924:	b.ne	40493c <clock_supported@plt+0x5fc>  // b.any
  404928:	adrp	x0, 40b000 <clock_supported@plt+0x6cc0>
  40492c:	add	x0, x0, #0x5eb
  404930:	bl	403b00 <strdup@plt>
  404934:	stur	x0, [x29, #-24]
  404938:	b	404940 <clock_supported@plt+0x600>
  40493c:	ldur	x0, [x29, #-24]
  404940:	sub	x1, x29, #0x38
  404944:	add	x2, sp, #0x40
  404948:	bl	408440 <clock_supported@plt+0x4100>
  40494c:	ldur	x8, [x29, #-16]
  404950:	add	x8, x8, x25
  404954:	ldr	x1, [x8, #88]
  404958:	ldrh	w0, [x8, #100]
  40495c:	bl	40858c <clock_supported@plt+0x424c>
  404960:	ldp	x11, x8, [x29, #-24]
  404964:	ldp	x10, x9, [x29, #-40]
  404968:	cmp	x0, #0x0
  40496c:	csel	x6, x26, x0, eq  // eq = none
  404970:	add	x4, x8, x25
  404974:	ldr	w2, [x4, #96]
  404978:	ldur	x8, [x29, #-56]
  40497c:	cmp	x9, #0x0
  404980:	csel	x9, x26, x9, eq  // eq = none
  404984:	cmp	x11, #0x0
  404988:	mov	x23, x0
  40498c:	csel	x11, x26, x11, eq  // eq = none
  404990:	mov	w1, #0xa                   	// #10
  404994:	mov	w3, #0x1                   	// #1
  404998:	mov	w5, #0x1                   	// #1
  40499c:	mov	w7, #0x1                   	// #1
  4049a0:	mov	x0, x20
  4049a4:	str	w27, [sp, #56]
  4049a8:	str	x8, [sp, #48]
  4049ac:	str	w28, [sp, #40]
  4049b0:	str	x11, [sp, #32]
  4049b4:	str	w21, [sp, #24]
  4049b8:	str	x10, [sp, #16]
  4049bc:	str	w28, [sp, #8]
  4049c0:	str	x9, [sp]
  4049c4:	bl	403b10 <table_add_many_internal@plt>
  4049c8:	mov	w22, w0
  4049cc:	mov	x0, x23
  4049d0:	bl	4039b0 <free@plt>
  4049d4:	ldur	x0, [x29, #-32]
  4049d8:	bl	4039b0 <free@plt>
  4049dc:	ldur	x0, [x29, #-24]
  4049e0:	bl	4039b0 <free@plt>
  4049e4:	tbnz	w22, #31, 404a98 <clock_supported@plt+0x758>
  4049e8:	add	x25, x25, #0x1c8
  4049ec:	cmp	x24, x25
  4049f0:	b.ne	4048dc <clock_supported@plt+0x59c>  // b.any
  4049f4:	mov	x0, x20
  4049f8:	mov	x1, xzr
  4049fc:	bl	403b20 <table_print@plt>
  404a00:	tbnz	w0, #31, 404aa0 <clock_supported@plt+0x760>
  404a04:	adrp	x8, 420000 <__bss_start@@Base>
  404a08:	ldrb	w8, [x8, #8]
  404a0c:	tbnz	w8, #0, 404a20 <clock_supported@plt+0x6e0>
  404a10:	adrp	x0, 40b000 <clock_supported@plt+0x6cc0>
  404a14:	add	x0, x0, #0x60f
  404a18:	mov	w1, w19
  404a1c:	bl	403990 <printf@plt>
  404a20:	mov	w19, wzr
  404a24:	b	404af0 <clock_supported@plt+0x7b0>
  404a28:	mov	w19, w0
  404a2c:	mov	w0, wzr
  404a30:	bl	403b30 <log_get_max_level_realm@plt>
  404a34:	cmp	w0, #0x3
  404a38:	b.lt	404a68 <clock_supported@plt+0x728>  // b.tstop
  404a3c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  404a40:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  404a44:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  404a48:	add	x2, x2, #0xef
  404a4c:	add	x4, x4, #0x534
  404a50:	add	x5, x5, #0x53f
  404a54:	mov	w0, #0x3                   	// #3
  404a58:	mov	w3, #0x1e1                 	// #481
  404a5c:	mov	w1, w19
  404a60:	bl	403b40 <log_internal_realm@plt>
  404a64:	b	404a90 <clock_supported@plt+0x750>
  404a68:	mov	w8, wzr
  404a6c:	neg	w9, w19
  404a70:	sub	w19, w8, w9, uxtb
  404a74:	b	404af8 <clock_supported@plt+0x7b8>
  404a78:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  404a7c:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  404a80:	add	x1, x1, #0xef
  404a84:	add	x3, x3, #0x534
  404a88:	mov	w2, #0x1eb                 	// #491
  404a8c:	bl	4039a0 <log_oom_internal@plt>
  404a90:	mov	w19, w0
  404a94:	b	404af8 <clock_supported@plt+0x7b8>
  404a98:	mov	w19, w22
  404a9c:	b	404af0 <clock_supported@plt+0x7b0>
  404aa0:	mov	w21, w0
  404aa4:	mov	w0, wzr
  404aa8:	bl	403b30 <log_get_max_level_realm@plt>
  404aac:	cmp	w0, #0x3
  404ab0:	b.lt	404ae4 <clock_supported@plt+0x7a4>  // b.tstop
  404ab4:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  404ab8:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  404abc:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  404ac0:	add	x2, x2, #0xef
  404ac4:	add	x4, x4, #0x534
  404ac8:	add	x5, x5, #0x5f5
  404acc:	mov	w0, #0x3                   	// #3
  404ad0:	mov	w3, #0x216                 	// #534
  404ad4:	mov	w1, w21
  404ad8:	bl	403b40 <log_internal_realm@plt>
  404adc:	mov	w19, w0
  404ae0:	b	404af0 <clock_supported@plt+0x7b0>
  404ae4:	mov	w8, wzr
  404ae8:	neg	w9, w21
  404aec:	sub	w19, w8, w9, uxtb
  404af0:	mov	x0, x20
  404af4:	bl	403b50 <table_unref@plt>
  404af8:	ldur	x20, [x29, #-16]
  404afc:	cbz	x20, 404b44 <clock_supported@plt+0x804>
  404b00:	ldrb	w8, [x20, #455]
  404b04:	tbz	w8, #0, 404b3c <clock_supported@plt+0x7fc>
  404b08:	mov	x8, xzr
  404b0c:	mov	w21, #0x1                   	// #1
  404b10:	mov	w22, #0x1c8                 	// #456
  404b14:	madd	x23, x8, x22, x20
  404b18:	ldr	x0, [x23, #88]
  404b1c:	bl	403b60 <sd_device_unref@plt>
  404b20:	ldr	x0, [x23, #440]
  404b24:	bl	4039b0 <free@plt>
  404b28:	umaddl	x8, w21, w22, x20
  404b2c:	ldrb	w9, [x8, #455]
  404b30:	mov	w8, w21
  404b34:	add	w21, w21, #0x1
  404b38:	tbnz	w9, #0, 404b14 <clock_supported@plt+0x7d4>
  404b3c:	mov	x0, x20
  404b40:	bl	4039b0 <free@plt>
  404b44:	ldur	x0, [x29, #-8]
  404b48:	cbz	x0, 404b50 <clock_supported@plt+0x810>
  404b4c:	bl	403b70 <sd_netlink_unref@plt>
  404b50:	mov	w0, w19
  404b54:	ldp	x20, x19, [sp, #208]
  404b58:	ldp	x22, x21, [sp, #192]
  404b5c:	ldp	x24, x23, [sp, #176]
  404b60:	ldp	x26, x25, [sp, #160]
  404b64:	ldp	x28, x27, [sp, #144]
  404b68:	ldp	x29, x30, [sp, #128]
  404b6c:	add	sp, sp, #0xe0
  404b70:	ret
  404b74:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  404b78:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  404b7c:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  404b80:	add	x1, x1, #0x580
  404b84:	add	x2, x2, #0xef
  404b88:	add	x4, x4, #0x5a3
  404b8c:	mov	w3, #0x1ef                 	// #495
  404b90:	bl	403a30 <log_assert_failed_realm@plt>
  404b94:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  404b98:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  404b9c:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  404ba0:	add	x1, x1, #0x5c8
  404ba4:	add	x2, x2, #0xef
  404ba8:	add	x4, x4, #0x5a3
  404bac:	mov	w3, #0x1f5                 	// #501
  404bb0:	bl	403a30 <log_assert_failed_realm@plt>
  404bb4:	stp	x29, x30, [sp, #-96]!
  404bb8:	stp	x28, x27, [sp, #16]
  404bbc:	stp	x26, x25, [sp, #32]
  404bc0:	stp	x24, x23, [sp, #48]
  404bc4:	stp	x22, x21, [sp, #64]
  404bc8:	stp	x20, x19, [sp, #80]
  404bcc:	mov	x29, sp
  404bd0:	sub	sp, sp, #0x210
  404bd4:	adrp	x8, 420000 <__bss_start@@Base>
  404bd8:	mov	w20, w0
  404bdc:	ldr	w0, [x8, #4]
  404be0:	mov	x19, x1
  404be4:	stp	xzr, xzr, [x29, #-248]
  404be8:	stur	xzr, [x29, #-256]
  404bec:	str	xzr, [sp, #264]
  404bf0:	bl	403a60 <pager_open@plt>
  404bf4:	sub	x0, x29, #0xf0
  404bf8:	bl	403b80 <sd_bus_open_system@plt>
  404bfc:	tbnz	w0, #31, 404c74 <clock_supported@plt+0x934>
  404c00:	sub	x0, x29, #0xf8
  404c04:	bl	403a50 <sd_netlink_open@plt>
  404c08:	tbnz	w0, #31, 404cac <clock_supported@plt+0x96c>
  404c0c:	sub	x0, x29, #0x100
  404c10:	bl	403b90 <sd_hwdb_new@plt>
  404c14:	tbz	w0, #31, 404c54 <clock_supported@plt+0x914>
  404c18:	mov	w21, w0
  404c1c:	mov	w0, wzr
  404c20:	bl	403b30 <log_get_max_level_realm@plt>
  404c24:	cmp	w0, #0x7
  404c28:	b.lt	404c54 <clock_supported@plt+0x914>  // b.tstop
  404c2c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  404c30:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  404c34:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  404c38:	add	x2, x2, #0xef
  404c3c:	add	x4, x4, #0xa66
  404c40:	add	x5, x5, #0xa93
  404c44:	mov	w0, #0x7                   	// #7
  404c48:	mov	w3, #0x5eb                 	// #1515
  404c4c:	mov	w1, w21
  404c50:	bl	403b40 <log_internal_realm@plt>
  404c54:	adrp	x8, 420000 <__bss_start@@Base>
  404c58:	ldrb	w8, [x8, #9]
  404c5c:	cmp	w8, #0x1
  404c60:	b.ne	404d00 <clock_supported@plt+0x9c0>  // b.any
  404c64:	ldp	x1, x0, [x29, #-248]
  404c68:	add	x3, sp, #0x108
  404c6c:	mov	x2, xzr
  404c70:	b	404f04 <clock_supported@plt+0xbc4>
  404c74:	mov	w21, w0
  404c78:	mov	w0, wzr
  404c7c:	bl	403b30 <log_get_max_level_realm@plt>
  404c80:	cmp	w0, #0x3
  404c84:	b.lt	404cf0 <clock_supported@plt+0x9b0>  // b.tstop
  404c88:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  404c8c:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  404c90:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  404c94:	add	x2, x2, #0xef
  404c98:	add	x4, x4, #0xa66
  404c9c:	add	x5, x5, #0xa72
  404ca0:	mov	w0, #0x3                   	// #3
  404ca4:	mov	w3, #0x5e3                 	// #1507
  404ca8:	b	404ce0 <clock_supported@plt+0x9a0>
  404cac:	mov	w21, w0
  404cb0:	mov	w0, wzr
  404cb4:	bl	403b30 <log_get_max_level_realm@plt>
  404cb8:	cmp	w0, #0x3
  404cbc:	b.lt	404cf0 <clock_supported@plt+0x9b0>  // b.tstop
  404cc0:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  404cc4:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  404cc8:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  404ccc:	add	x2, x2, #0xef
  404cd0:	add	x4, x4, #0xa66
  404cd4:	add	x5, x5, #0x53f
  404cd8:	mov	w0, #0x3                   	// #3
  404cdc:	mov	w3, #0x5e7                 	// #1511
  404ce0:	mov	w1, w21
  404ce4:	bl	403b40 <log_internal_realm@plt>
  404ce8:	mov	w19, w0
  404cec:	b	4061b0 <clock_supported@plt+0x1e70>
  404cf0:	mov	w8, wzr
  404cf4:	neg	w9, w21
  404cf8:	sub	w19, w8, w9, uxtb
  404cfc:	b	4061b0 <clock_supported@plt+0x1e70>
  404d00:	cmp	w20, #0x1
  404d04:	b.gt	404ef8 <clock_supported@plt+0xbb8>
  404d08:	ldp	x22, x21, [x29, #-256]
  404d0c:	stur	xzr, [x29, #-216]
  404d10:	stur	xzr, [x29, #-232]
  404d14:	stp	xzr, xzr, [x29, #-24]
  404d18:	stur	xzr, [x29, #-32]
  404d1c:	cbz	x21, 406328 <clock_supported@plt+0x1fe8>
  404d20:	sub	x0, x29, #0xd8
  404d24:	bl	403ba0 <sd_network_get_operational_state@plt>
  404d28:	ldur	x1, [x29, #-216]
  404d2c:	sub	x2, x29, #0x28
  404d30:	sub	x3, x29, #0x30
  404d34:	mov	x0, xzr
  404d38:	bl	4082f0 <clock_supported@plt+0x3fb0>
  404d3c:	adrp	x0, 40b000 <clock_supported@plt+0x6cc0>
  404d40:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  404d44:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  404d48:	add	x0, x0, #0xae3
  404d4c:	add	x1, x1, #0xae7
  404d50:	add	x2, x2, #0xaeb
  404d54:	mov	x3, xzr
  404d58:	bl	403a70 <table_new_internal@plt>
  404d5c:	cbz	x0, 406180 <clock_supported@plt+0x1e40>
  404d60:	mov	x1, xzr
  404d64:	mov	x2, xzr
  404d68:	mov	x20, x0
  404d6c:	bl	403a90 <table_get_cell@plt>
  404d70:	cbz	x0, 406348 <clock_supported@plt+0x2008>
  404d74:	mov	x1, x0
  404d78:	mov	w2, #0x64                  	// #100
  404d7c:	mov	x0, x20
  404d80:	bl	403ac0 <table_set_ellipsize_percent@plt>
  404d84:	mov	w2, #0x1                   	// #1
  404d88:	mov	x0, x20
  404d8c:	mov	x1, xzr
  404d90:	bl	403a90 <table_get_cell@plt>
  404d94:	cbz	x0, 406368 <clock_supported@plt+0x2028>
  404d98:	mov	x19, x0
  404d9c:	mov	w2, #0x64                  	// #100
  404da0:	mov	x0, x20
  404da4:	mov	x1, x19
  404da8:	bl	403ad0 <table_set_align_percent@plt>
  404dac:	mov	w2, #0x64                  	// #100
  404db0:	mov	x0, x20
  404db4:	mov	x1, x19
  404db8:	bl	403ac0 <table_set_ellipsize_percent@plt>
  404dbc:	mov	x0, x20
  404dc0:	mov	w1, wzr
  404dc4:	bl	403a80 <table_set_header@plt>
  404dc8:	mov	w0, #0x5                   	// #5
  404dcc:	bl	403bb0 <special_glyph@plt>
  404dd0:	ldur	x8, [x29, #-216]
  404dd4:	ldur	x4, [x29, #-40]
  404dd8:	adrp	x9, 40b000 <clock_supported@plt+0x6cc0>
  404ddc:	add	x9, x9, #0xa62
  404de0:	cmp	x8, #0x0
  404de4:	adrp	x6, 40b000 <clock_supported@plt+0x6cc0>
  404de8:	mov	x2, x0
  404dec:	csel	x8, x9, x8, eq  // eq = none
  404df0:	mov	w9, #0x18                  	// #24
  404df4:	mov	w10, #0x1e                  	// #30
  404df8:	add	x6, x6, #0xaf1
  404dfc:	mov	w1, #0x1                   	// #1
  404e00:	mov	w3, #0x1e                  	// #30
  404e04:	mov	w5, #0x1                   	// #1
  404e08:	mov	w7, #0x1                   	// #1
  404e0c:	mov	x0, x20
  404e10:	str	x4, [sp, #16]
  404e14:	str	w9, [sp, #24]
  404e18:	str	w10, [sp, #8]
  404e1c:	str	x8, [sp]
  404e20:	bl	403b10 <table_add_many_internal@plt>
  404e24:	mov	x0, x21
  404e28:	mov	x1, x20
  404e2c:	mov	w2, wzr
  404e30:	bl	408620 <clock_supported@plt+0x42e0>
  404e34:	tbnz	w0, #31, 404edc <clock_supported@plt+0xb9c>
  404e38:	mov	x0, x21
  404e3c:	mov	x1, x22
  404e40:	mov	x2, x20
  404e44:	mov	w3, wzr
  404e48:	bl	408864 <clock_supported@plt+0x4524>
  404e4c:	tbnz	w0, #31, 404edc <clock_supported@plt+0xb9c>
  404e50:	sub	x0, x29, #0xe8
  404e54:	bl	403bc0 <sd_network_get_dns@plt>
  404e58:	ldur	x2, [x29, #-232]
  404e5c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  404e60:	add	x1, x1, #0xaf8
  404e64:	mov	x0, x20
  404e68:	bl	408e24 <clock_supported@plt+0x4ae4>
  404e6c:	tbnz	w0, #31, 404edc <clock_supported@plt+0xb9c>
  404e70:	sub	x0, x29, #0x18
  404e74:	bl	403bd0 <sd_network_get_search_domains@plt>
  404e78:	ldur	x2, [x29, #-24]
  404e7c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  404e80:	add	x1, x1, #0xafd
  404e84:	mov	x0, x20
  404e88:	bl	408e24 <clock_supported@plt+0x4ae4>
  404e8c:	tbnz	w0, #31, 404edc <clock_supported@plt+0xb9c>
  404e90:	sub	x0, x29, #0x20
  404e94:	bl	403be0 <sd_network_get_route_domains@plt>
  404e98:	ldur	x2, [x29, #-32]
  404e9c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  404ea0:	add	x1, x1, #0xb0d
  404ea4:	mov	x0, x20
  404ea8:	bl	408e24 <clock_supported@plt+0x4ae4>
  404eac:	tbnz	w0, #31, 404edc <clock_supported@plt+0xb9c>
  404eb0:	sub	x0, x29, #0x10
  404eb4:	bl	403bf0 <sd_network_get_ntp@plt>
  404eb8:	ldur	x2, [x29, #-16]
  404ebc:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  404ec0:	add	x1, x1, #0xb1c
  404ec4:	mov	x0, x20
  404ec8:	bl	408e24 <clock_supported@plt+0x4ae4>
  404ecc:	tbnz	w0, #31, 404edc <clock_supported@plt+0xb9c>
  404ed0:	mov	x0, x20
  404ed4:	mov	x1, xzr
  404ed8:	bl	403b20 <table_print@plt>
  404edc:	mov	w19, w0
  404ee0:	mov	x0, x20
  404ee4:	bl	403b50 <table_unref@plt>
  404ee8:	ldur	x0, [x29, #-32]
  404eec:	cbz	x0, 406184 <clock_supported@plt+0x1e44>
  404ef0:	bl	403c00 <strv_free@plt>
  404ef4:	b	406184 <clock_supported@plt+0x1e44>
  404ef8:	ldp	x1, x0, [x29, #-248]
  404efc:	add	x2, x19, #0x8
  404f00:	add	x3, sp, #0x108
  404f04:	bl	4077c0 <clock_supported@plt+0x3480>
  404f08:	mov	w19, w0
  404f0c:	tbnz	w0, #31, 4061b0 <clock_supported@plt+0x1e70>
  404f10:	cbz	w19, 4061b0 <clock_supported@plt+0x1e70>
  404f14:	mov	x24, xzr
  404f18:	mov	w25, w19
  404f1c:	mov	w20, #0x1c8                 	// #456
  404f20:	cbz	x24, 404f34 <clock_supported@plt+0xbf4>
  404f24:	adrp	x8, 420000 <__bss_start@@Base>
  404f28:	ldr	x1, [x8, #48]
  404f2c:	mov	w0, #0xa                   	// #10
  404f30:	bl	403c10 <fputc@plt>
  404f34:	ldp	x27, x26, [x29, #-256]
  404f38:	ldr	x22, [sp, #264]
  404f3c:	stp	xzr, xzr, [x29, #-48]
  404f40:	stp	xzr, xzr, [x29, #-64]
  404f44:	stp	xzr, xzr, [x29, #-80]
  404f48:	stp	xzr, xzr, [x29, #-96]
  404f4c:	stp	xzr, xzr, [x29, #-112]
  404f50:	stp	xzr, xzr, [x29, #-128]
  404f54:	stur	xzr, [x29, #-136]
  404f58:	stp	xzr, xzr, [x29, #-184]
  404f5c:	cbz	x26, 406244 <clock_supported@plt+0x1f04>
  404f60:	cbz	x22, 406264 <clock_supported@plt+0x1f24>
  404f64:	madd	x28, x24, x20, x22
  404f68:	mov	x21, x28
  404f6c:	ldr	w0, [x21, #96]!
  404f70:	sub	x1, x29, #0x50
  404f74:	bl	403ae0 <sd_network_link_get_operational_state@plt>
  404f78:	ldur	x1, [x29, #-80]
  404f7c:	sub	x2, x29, #0x90
  404f80:	sub	x3, x29, #0x98
  404f84:	mov	x0, x28
  404f88:	bl	4082f0 <clock_supported@plt+0x3fb0>
  404f8c:	ldr	w0, [x21]
  404f90:	sub	x1, x29, #0x48
  404f94:	bl	403af0 <sd_network_link_get_setup_state@plt>
  404f98:	cmn	w0, #0x3d
  404f9c:	b.ne	404fb4 <clock_supported@plt+0xc74>  // b.any
  404fa0:	adrp	x0, 40b000 <clock_supported@plt+0x6cc0>
  404fa4:	add	x0, x0, #0x5eb
  404fa8:	bl	403b00 <strdup@plt>
  404fac:	stur	x0, [x29, #-72]
  404fb0:	b	404fb8 <clock_supported@plt+0xc78>
  404fb4:	ldur	x0, [x29, #-72]
  404fb8:	sub	x1, x29, #0xa0
  404fbc:	sub	x2, x29, #0xa8
  404fc0:	bl	408440 <clock_supported@plt+0x4100>
  404fc4:	ldr	w0, [x21]
  404fc8:	sub	x1, x29, #0x28
  404fcc:	bl	403c20 <sd_network_link_get_dns@plt>
  404fd0:	ldr	w0, [x21]
  404fd4:	sub	x1, x29, #0x38
  404fd8:	bl	403c30 <sd_network_link_get_search_domains@plt>
  404fdc:	ldr	w0, [x21]
  404fe0:	sub	x1, x29, #0x40
  404fe4:	bl	403c40 <sd_network_link_get_route_domains@plt>
  404fe8:	ldr	w0, [x21]
  404fec:	sub	x1, x29, #0x30
  404ff0:	bl	403c50 <sd_network_link_get_ntp@plt>
  404ff4:	madd	x19, x24, x20, x22
  404ff8:	ldr	x0, [x19, #88]!
  404ffc:	cbz	x0, 405090 <clock_supported@plt+0xd50>
  405000:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  405004:	sub	x2, x29, #0x88
  405008:	add	x1, x1, #0xe00
  40500c:	bl	403c60 <sd_device_get_property_value@plt>
  405010:	ldr	x0, [x19]
  405014:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  405018:	sub	x2, x29, #0x68
  40501c:	add	x1, x1, #0xe11
  405020:	bl	403c60 <sd_device_get_property_value@plt>
  405024:	ldr	x0, [x19]
  405028:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40502c:	sub	x2, x29, #0x70
  405030:	add	x1, x1, #0xe1f
  405034:	bl	403c60 <sd_device_get_property_value@plt>
  405038:	ldr	x0, [x19]
  40503c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  405040:	sub	x2, x29, #0x78
  405044:	add	x1, x1, #0xe27
  405048:	bl	403c60 <sd_device_get_property_value@plt>
  40504c:	tbz	w0, #31, 405064 <clock_supported@plt+0xd24>
  405050:	ldr	x0, [x19]
  405054:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  405058:	sub	x2, x29, #0x78
  40505c:	add	x1, x1, #0xe3f
  405060:	bl	403c60 <sd_device_get_property_value@plt>
  405064:	ldr	x0, [x19]
  405068:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40506c:	sub	x2, x29, #0x80
  405070:	add	x1, x1, #0xe49
  405074:	bl	403c60 <sd_device_get_property_value@plt>
  405078:	tbz	w0, #31, 405090 <clock_supported@plt+0xd50>
  40507c:	ldr	x0, [x19]
  405080:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  405084:	sub	x2, x29, #0x80
  405088:	add	x1, x1, #0xe60
  40508c:	bl	403c60 <sd_device_get_property_value@plt>
  405090:	madd	x8, x24, x20, x22
  405094:	ldr	x1, [x19]
  405098:	ldrh	w0, [x8, #100]
  40509c:	bl	40858c <clock_supported@plt+0x424c>
  4050a0:	ldr	w8, [x21]
  4050a4:	mov	x23, x0
  4050a8:	sub	x1, x29, #0x60
  4050ac:	mov	w0, w8
  4050b0:	bl	403c70 <sd_network_link_get_network_file@plt>
  4050b4:	ldr	w0, [x21]
  4050b8:	sub	x1, x29, #0xb0
  4050bc:	bl	403c80 <sd_network_link_get_carrier_bound_to@plt>
  4050c0:	ldr	w0, [x21]
  4050c4:	sub	x1, x29, #0xb8
  4050c8:	bl	403c90 <sd_network_link_get_carrier_bound_by@plt>
  4050cc:	adrp	x0, 40b000 <clock_supported@plt+0x6cc0>
  4050d0:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  4050d4:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4050d8:	add	x0, x0, #0xae3
  4050dc:	add	x1, x1, #0xae7
  4050e0:	add	x2, x2, #0xaeb
  4050e4:	mov	x3, xzr
  4050e8:	bl	403a70 <table_new_internal@plt>
  4050ec:	cbz	x0, 40569c <clock_supported@plt+0x135c>
  4050f0:	mov	x1, xzr
  4050f4:	mov	x2, xzr
  4050f8:	mov	x19, x0
  4050fc:	bl	403a90 <table_get_cell@plt>
  405100:	stur	x0, [x29, #-192]
  405104:	cbz	x0, 406288 <clock_supported@plt+0x1f48>
  405108:	mov	x1, x0
  40510c:	mov	w2, #0x64                  	// #100
  405110:	mov	x0, x19
  405114:	bl	403ac0 <table_set_ellipsize_percent@plt>
  405118:	mov	w2, #0x1                   	// #1
  40511c:	mov	x0, x19
  405120:	mov	x1, xzr
  405124:	bl	403a90 <table_get_cell@plt>
  405128:	stur	x0, [x29, #-192]
  40512c:	cbz	x0, 4062a8 <clock_supported@plt+0x1f68>
  405130:	mov	x1, x0
  405134:	mov	w2, #0x64                  	// #100
  405138:	mov	x0, x19
  40513c:	bl	403ac0 <table_set_ellipsize_percent@plt>
  405140:	mov	x0, x19
  405144:	mov	w1, wzr
  405148:	bl	403a80 <table_set_header@plt>
  40514c:	mov	w0, #0x5                   	// #5
  405150:	bl	403bb0 <special_glyph@plt>
  405154:	ldur	x4, [x29, #-144]
  405158:	mov	x2, x0
  40515c:	mov	w1, #0x1                   	// #1
  405160:	mov	w3, #0x1e                  	// #30
  405164:	mov	w5, #0x18                  	// #24
  405168:	mov	x0, x19
  40516c:	bl	403b10 <table_add_many_internal@plt>
  405170:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405174:	ldr	w3, [x21]
  405178:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  40517c:	sub	x1, x29, #0xc0
  405180:	mov	x0, x19
  405184:	add	x2, x2, #0xe69
  405188:	mov	x4, x28
  40518c:	bl	403ca0 <table_add_cell_stringf@plt>
  405190:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405194:	ldur	x1, [x29, #-192]
  405198:	mov	x0, x19
  40519c:	mov	w2, wzr
  4051a0:	bl	403ad0 <table_set_align_percent@plt>
  4051a4:	ldur	x8, [x29, #-136]
  4051a8:	ldur	x9, [x29, #-96]
  4051ac:	adrp	x10, 40b000 <clock_supported@plt+0x6cc0>
  4051b0:	add	x10, x10, #0xa62
  4051b4:	cmp	x8, #0x0
  4051b8:	csel	x8, x10, x8, eq  // eq = none
  4051bc:	cmp	x9, #0x0
  4051c0:	csel	x9, x10, x9, eq  // eq = none
  4051c4:	cmp	x23, #0x0
  4051c8:	mov	w11, #0x18                  	// #24
  4051cc:	csel	x10, x10, x23, eq  // eq = none
  4051d0:	str	w11, [sp, #112]
  4051d4:	adrp	x11, 40b000 <clock_supported@plt+0x6cc0>
  4051d8:	add	x11, x11, #0xaf1
  4051dc:	str	x10, [sp, #80]
  4051e0:	adrp	x10, 40b000 <clock_supported@plt+0x6cc0>
  4051e4:	str	x9, [sp, #40]
  4051e8:	adrp	x9, 40b000 <clock_supported@plt+0x6cc0>
  4051ec:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  4051f0:	str	x11, [sp, #104]
  4051f4:	mov	w11, #0x1                   	// #1
  4051f8:	add	x10, x10, #0xe89
  4051fc:	add	x9, x9, #0xe7b
  405200:	mov	w3, #0x1                   	// #1
  405204:	mov	w5, #0x1c                  	// #28
  405208:	mov	w6, #0x64                  	// #100
  40520c:	mov	w7, #0x1                   	// #1
  405210:	mov	x0, x19
  405214:	mov	w1, wzr
  405218:	mov	w2, wzr
  40521c:	add	x4, x4, #0xe70
  405220:	str	w11, [sp, #96]
  405224:	str	wzr, [sp, #88]
  405228:	str	w11, [sp, #72]
  40522c:	str	x10, [sp, #64]
  405230:	str	w11, [sp, #56]
  405234:	str	wzr, [sp, #48]
  405238:	str	w11, [sp, #32]
  40523c:	str	x9, [sp, #24]
  405240:	str	w11, [sp, #16]
  405244:	str	wzr, [sp, #8]
  405248:	str	x8, [sp]
  40524c:	bl	403b10 <table_add_many_internal@plt>
  405250:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405254:	ldp	x8, x9, [x29, #-80]
  405258:	ldp	x5, x3, [x29, #-152]
  40525c:	ldp	x10, x6, [x29, #-168]
  405260:	adrp	x11, 40b000 <clock_supported@plt+0x6cc0>
  405264:	cmp	x8, #0x0
  405268:	add	x11, x11, #0xa62
  40526c:	csel	x4, x11, x8, eq  // eq = none
  405270:	cmp	x9, #0x0
  405274:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  405278:	csel	x7, x11, x9, eq  // eq = none
  40527c:	mov	x0, x19
  405280:	mov	x1, xzr
  405284:	add	x2, x2, #0xe8f
  405288:	str	x10, [sp]
  40528c:	bl	403ca0 <table_add_cell_stringf@plt>
  405290:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405294:	ldur	x5, [x29, #-112]
  405298:	cbz	x5, 4052c0 <clock_supported@plt+0xf80>
  40529c:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  4052a0:	mov	w2, #0x1                   	// #1
  4052a4:	mov	w4, #0x1                   	// #1
  4052a8:	mov	w6, #0x18                  	// #24
  4052ac:	mov	x0, x19
  4052b0:	mov	w1, wzr
  4052b4:	add	x3, x3, #0xe9f
  4052b8:	bl	403b10 <table_add_many_internal@plt>
  4052bc:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  4052c0:	ldur	x5, [x29, #-104]
  4052c4:	cbz	x5, 4052ec <clock_supported@plt+0xfac>
  4052c8:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  4052cc:	mov	w2, #0x1                   	// #1
  4052d0:	mov	w4, #0x1                   	// #1
  4052d4:	mov	w6, #0x18                  	// #24
  4052d8:	mov	x0, x19
  4052dc:	mov	w1, wzr
  4052e0:	add	x3, x3, #0xea5
  4052e4:	bl	403b10 <table_add_many_internal@plt>
  4052e8:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  4052ec:	ldur	x5, [x29, #-120]
  4052f0:	cbz	x5, 405318 <clock_supported@plt+0xfd8>
  4052f4:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  4052f8:	mov	w2, #0x1                   	// #1
  4052fc:	mov	w4, #0x1                   	// #1
  405300:	mov	w6, #0x18                  	// #24
  405304:	mov	x0, x19
  405308:	mov	w1, wzr
  40530c:	add	x3, x3, #0xead
  405310:	bl	403b10 <table_add_many_internal@plt>
  405314:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405318:	ldur	x5, [x29, #-128]
  40531c:	cbz	x5, 405344 <clock_supported@plt+0x1004>
  405320:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  405324:	mov	w2, #0x1                   	// #1
  405328:	mov	w4, #0x1                   	// #1
  40532c:	mov	w6, #0x18                  	// #24
  405330:	mov	x0, x19
  405334:	mov	w1, wzr
  405338:	add	x3, x3, #0xeb5
  40533c:	bl	403b10 <table_add_many_internal@plt>
  405340:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405344:	madd	x8, x24, x20, x22
  405348:	str	x8, [sp, #256]
  40534c:	ldrb	w8, [x8, #454]
  405350:	tbz	w8, #0, 4053f4 <clock_supported@plt+0x10b4>
  405354:	madd	x8, x24, x20, x22
  405358:	add	x28, x8, #0x66
  40535c:	sub	x2, x29, #0xe8
  405360:	mov	x0, x27
  405364:	mov	x1, x28
  405368:	stur	xzr, [x29, #-232]
  40536c:	bl	408ea4 <clock_supported@plt+0x4b64>
  405370:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  405374:	mov	w2, #0x1                   	// #1
  405378:	mov	w4, #0x18                  	// #24
  40537c:	mov	x0, x19
  405380:	mov	w1, wzr
  405384:	add	x3, x3, #0xebc
  405388:	bl	403b10 <table_add_many_internal@plt>
  40538c:	tbnz	w0, #31, 4054b0 <clock_supported@plt+0x1170>
  405390:	sub	x1, x29, #0xd8
  405394:	mov	x0, x28
  405398:	bl	403cb0 <ether_addr_to_string@plt>
  40539c:	ldur	x8, [x29, #-232]
  4053a0:	adrp	x9, 40b000 <clock_supported@plt+0x6cc0>
  4053a4:	add	x9, x9, #0x497
  4053a8:	adrp	x10, 40b000 <clock_supported@plt+0x6cc0>
  4053ac:	cmp	x8, #0x0
  4053b0:	csel	x5, x9, x8, eq  // eq = none
  4053b4:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  4053b8:	add	x10, x10, #0xbf9
  4053bc:	add	x8, x8, #0xbfc
  4053c0:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4053c4:	mov	x3, x0
  4053c8:	csel	x4, x9, x10, eq  // eq = none
  4053cc:	csel	x6, x9, x8, eq  // eq = none
  4053d0:	mov	x0, x19
  4053d4:	mov	x1, xzr
  4053d8:	add	x2, x2, #0xec8
  4053dc:	bl	403ca0 <table_add_cell_stringf@plt>
  4053e0:	ldur	x8, [x29, #-232]
  4053e4:	mov	w28, w0
  4053e8:	mov	x0, x8
  4053ec:	bl	4039b0 <free@plt>
  4053f0:	tbnz	w28, #31, 405694 <clock_supported@plt+0x1354>
  4053f4:	madd	x28, x24, x20, x22
  4053f8:	ldr	w8, [x28, #108]!
  4053fc:	cbz	w8, 405534 <clock_supported@plt+0x11f4>
  405400:	str	x25, [sp, #248]
  405404:	madd	x25, x24, x20, x22
  405408:	ldr	w3, [x25, #112]!
  40540c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  405410:	sub	x0, x29, #0xd8
  405414:	mov	w1, #0xc                   	// #12
  405418:	add	x2, x2, #0xed1
  40541c:	bl	403cc0 <snprintf@plt>
  405420:	cmp	w0, #0xc
  405424:	b.cs	4062c8 <clock_supported@plt+0x1f88>  // b.hs, b.nlast
  405428:	mov	w8, #0x1c8                 	// #456
  40542c:	madd	x20, x24, x8, x22
  405430:	ldr	w3, [x20, #116]!
  405434:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  405438:	sub	x0, x29, #0xe8
  40543c:	mov	w1, #0xc                   	// #12
  405440:	add	x2, x2, #0xed1
  405444:	bl	403cc0 <snprintf@plt>
  405448:	cmp	w0, #0xc
  40544c:	b.cs	4062e8 <clock_supported@plt+0x1fa8>  // b.hs, b.nlast
  405450:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  405454:	mov	w2, #0x1                   	// #1
  405458:	mov	w4, #0x18                  	// #24
  40545c:	mov	x0, x19
  405460:	mov	w1, wzr
  405464:	add	x3, x3, #0xf22
  405468:	bl	403b10 <table_add_many_internal@plt>
  40546c:	tbnz	w0, #31, 40568c <clock_supported@plt+0x134c>
  405470:	ldr	w3, [x28]
  405474:	ldr	w8, [x25]
  405478:	ldr	w9, [x20]
  40547c:	cbz	w8, 4054bc <clock_supported@plt+0x117c>
  405480:	adrp	x11, 40b000 <clock_supported@plt+0x6cc0>
  405484:	adrp	x10, 40b000 <clock_supported@plt+0x6cc0>
  405488:	cmp	w9, #0x0
  40548c:	add	x11, x11, #0x497
  405490:	add	x10, x10, #0xf3e
  405494:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  405498:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  40549c:	sub	x6, x29, #0xd8
  4054a0:	csel	x7, x11, x10, eq  // eq = none
  4054a4:	add	x4, x4, #0xbf9
  4054a8:	add	x5, x5, #0xf38
  4054ac:	b	4054e0 <clock_supported@plt+0x11a0>
  4054b0:	ldur	x0, [x29, #-232]
  4054b4:	bl	4039b0 <free@plt>
  4054b8:	b	405694 <clock_supported@plt+0x1354>
  4054bc:	adrp	x11, 40b000 <clock_supported@plt+0x6cc0>
  4054c0:	adrp	x10, 40b000 <clock_supported@plt+0x6cc0>
  4054c4:	cmp	w9, #0x0
  4054c8:	add	x11, x11, #0x497
  4054cc:	add	x10, x10, #0xbf9
  4054d0:	csel	x4, x11, x10, eq  // eq = none
  4054d4:	mov	x5, x11
  4054d8:	mov	x6, x11
  4054dc:	mov	x7, x11
  4054e0:	orr	w8, w9, w8
  4054e4:	cmp	w9, #0x0
  4054e8:	adrp	x9, 40b000 <clock_supported@plt+0x6cc0>
  4054ec:	add	x9, x9, #0xf41
  4054f0:	sub	x10, x29, #0xe8
  4054f4:	csel	x9, x9, x11, ne  // ne = any
  4054f8:	csel	x10, x10, x11, ne  // ne = any
  4054fc:	cmp	w8, #0x0
  405500:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  405504:	add	x8, x8, #0xbfc
  405508:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  40550c:	csel	x8, x8, x11, ne  // ne = any
  405510:	mov	x0, x19
  405514:	mov	x1, xzr
  405518:	add	x2, x2, #0xf27
  40551c:	stp	x9, x10, [sp]
  405520:	str	x8, [sp, #16]
  405524:	bl	403ca0 <table_add_cell_stringf@plt>
  405528:	tbnz	w0, #31, 40568c <clock_supported@plt+0x134c>
  40552c:	ldr	x25, [sp, #248]
  405530:	mov	w20, #0x1c8                 	// #456
  405534:	madd	x8, x24, x20, x22
  405538:	add	x28, x8, #0x11
  40553c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  405540:	mov	x0, x28
  405544:	add	x1, x1, #0x72e
  405548:	bl	403cd0 <strcmp_ptr@plt>
  40554c:	cbz	w0, 405714 <clock_supported@plt+0x13d4>
  405550:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  405554:	mov	x0, x28
  405558:	add	x1, x1, #0x735
  40555c:	bl	403cd0 <strcmp_ptr@plt>
  405560:	cbnz	w0, 405854 <clock_supported@plt+0x1514>
  405564:	madd	x8, x24, x20, x22
  405568:	ldr	w5, [x8, #360]
  40556c:	cbz	w5, 405594 <clock_supported@plt+0x1254>
  405570:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  405574:	mov	w2, #0x1                   	// #1
  405578:	mov	w4, #0x12                  	// #18
  40557c:	mov	w6, #0x18                  	// #24
  405580:	mov	x0, x19
  405584:	mov	w1, wzr
  405588:	add	x3, x3, #0xf9f
  40558c:	bl	403b10 <table_add_many_internal@plt>
  405590:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405594:	madd	x8, x24, x20, x22
  405598:	ldr	w8, [x8, #372]
  40559c:	orr	w9, w8, #0x8
  4055a0:	cmp	w9, #0xa
  4055a4:	b.ne	4055dc <clock_supported@plt+0x129c>  // b.any
  4055a8:	cmp	w8, #0x2
  4055ac:	madd	x8, x24, x20, x22
  4055b0:	mov	w9, #0x16                  	// #22
  4055b4:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  4055b8:	cinc	w4, w9, ne  // ne = any
  4055bc:	add	x5, x8, #0x188
  4055c0:	mov	w2, #0x1                   	// #1
  4055c4:	mov	w6, #0x18                  	// #24
  4055c8:	mov	x0, x19
  4055cc:	mov	w1, wzr
  4055d0:	add	x3, x3, #0xfa4
  4055d4:	bl	403b10 <table_add_many_internal@plt>
  4055d8:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  4055dc:	madd	x8, x24, x20, x22
  4055e0:	ldr	w8, [x8, #368]
  4055e4:	orr	w9, w8, #0x8
  4055e8:	cmp	w9, #0xa
  4055ec:	b.ne	405624 <clock_supported@plt+0x12e4>  // b.any
  4055f0:	cmp	w8, #0x2
  4055f4:	madd	x8, x24, x20, x22
  4055f8:	mov	w9, #0x16                  	// #22
  4055fc:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  405600:	cinc	w4, w9, ne  // ne = any
  405604:	add	x5, x8, #0x178
  405608:	mov	w2, #0x1                   	// #1
  40560c:	mov	w6, #0x18                  	// #24
  405610:	mov	x0, x19
  405614:	mov	w1, wzr
  405618:	add	x3, x3, #0xfab
  40561c:	bl	403b10 <table_add_many_internal@plt>
  405620:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405624:	madd	x8, x24, x20, x22
  405628:	ldrh	w8, [x8, #408]
  40562c:	cbz	w8, 405658 <clock_supported@plt+0x1318>
  405630:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  405634:	rev16	w5, w8
  405638:	mov	w2, #0x1                   	// #1
  40563c:	mov	w4, #0x11                  	// #17
  405640:	mov	w6, #0x18                  	// #24
  405644:	mov	x0, x19
  405648:	mov	w1, wzr
  40564c:	add	x3, x3, #0xfb2
  405650:	bl	403b10 <table_add_many_internal@plt>
  405654:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405658:	madd	x8, x24, x20, x22
  40565c:	ldr	w5, [x8, #364]
  405660:	cbz	w5, 405854 <clock_supported@plt+0x1514>
  405664:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  405668:	mov	w2, #0x1                   	// #1
  40566c:	mov	w4, #0x15                  	// #21
  405670:	mov	w6, #0x18                  	// #24
  405674:	mov	x0, x19
  405678:	mov	w1, wzr
  40567c:	add	x3, x3, #0xfc4
  405680:	bl	403b10 <table_add_many_internal@plt>
  405684:	tbz	w0, #31, 405854 <clock_supported@plt+0x1514>
  405688:	b	405694 <clock_supported@plt+0x1354>
  40568c:	ldr	x25, [sp, #248]
  405690:	mov	w20, #0x1c8                 	// #456
  405694:	mov	x0, x19
  405698:	bl	403b50 <table_unref@plt>
  40569c:	ldur	x0, [x29, #-184]
  4056a0:	bl	4039b0 <free@plt>
  4056a4:	ldur	x0, [x29, #-176]
  4056a8:	bl	4039b0 <free@plt>
  4056ac:	ldur	x0, [x29, #-96]
  4056b0:	bl	4039b0 <free@plt>
  4056b4:	mov	x0, x23
  4056b8:	bl	4039b0 <free@plt>
  4056bc:	ldur	x0, [x29, #-88]
  4056c0:	bl	4039b0 <free@plt>
  4056c4:	ldur	x0, [x29, #-80]
  4056c8:	bl	4039b0 <free@plt>
  4056cc:	ldur	x0, [x29, #-72]
  4056d0:	bl	4039b0 <free@plt>
  4056d4:	ldur	x0, [x29, #-64]
  4056d8:	cbz	x0, 4056e0 <clock_supported@plt+0x13a0>
  4056dc:	bl	403c00 <strv_free@plt>
  4056e0:	ldur	x0, [x29, #-56]
  4056e4:	cbz	x0, 4056ec <clock_supported@plt+0x13ac>
  4056e8:	bl	403c00 <strv_free@plt>
  4056ec:	ldur	x0, [x29, #-48]
  4056f0:	cbz	x0, 4056f8 <clock_supported@plt+0x13b8>
  4056f4:	bl	403c00 <strv_free@plt>
  4056f8:	ldur	x0, [x29, #-40]
  4056fc:	cbz	x0, 405704 <clock_supported@plt+0x13c4>
  405700:	bl	403c00 <strv_free@plt>
  405704:	add	x24, x24, #0x1
  405708:	cmp	x24, x25
  40570c:	b.ne	404f20 <clock_supported@plt+0xbe0>  // b.any
  405710:	b	406178 <clock_supported@plt+0x1e38>
  405714:	mov	w8, #0x1c8                 	// #456
  405718:	madd	x20, x24, x8, x22
  40571c:	ldr	w0, [x20, #336]
  405720:	bl	403ce0 <jiffies_to_usec@plt>
  405724:	ldr	w8, [x20, #340]
  405728:	str	x0, [sp, #248]
  40572c:	mov	w0, w8
  405730:	bl	403ce0 <jiffies_to_usec@plt>
  405734:	ldr	w8, [x20, #344]
  405738:	str	x0, [sp, #240]
  40573c:	mov	w0, w8
  405740:	bl	403ce0 <jiffies_to_usec@plt>
  405744:	ldr	w8, [x20, #348]
  405748:	mov	x28, x0
  40574c:	mov	w0, w8
  405750:	bl	403ce0 <jiffies_to_usec@plt>
  405754:	ldr	w8, [x20, #352]
  405758:	ldrh	w9, [x20, #356]
  40575c:	ldrb	w10, [x20, #358]
  405760:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  405764:	cmp	w8, #0x0
  405768:	cset	w8, ne  // ne = any
  40576c:	str	w8, [sp, #176]
  405770:	mov	w8, #0x2                   	// #2
  405774:	str	w8, [sp, #168]
  405778:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  40577c:	str	w9, [sp, #136]
  405780:	adrp	x9, 40b000 <clock_supported@plt+0x6cc0>
  405784:	add	x8, x8, #0xf82
  405788:	add	x9, x9, #0xf6b
  40578c:	str	x8, [sp, #160]
  405790:	mov	w8, #0x11                  	// #17
  405794:	str	x9, [sp, #80]
  405798:	adrp	x9, 40b000 <clock_supported@plt+0x6cc0>
  40579c:	str	w8, [sp, #128]
  4057a0:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  4057a4:	add	x9, x9, #0xf62
  4057a8:	str	w10, [sp, #216]
  4057ac:	mov	w10, #0x10                  	// #16
  4057b0:	add	x8, x8, #0xf78
  4057b4:	str	x9, [sp, #40]
  4057b8:	ldp	x9, x5, [sp, #240]
  4057bc:	str	w10, [sp, #208]
  4057c0:	adrp	x10, 40b000 <clock_supported@plt+0x6cc0>
  4057c4:	str	x8, [sp, #120]
  4057c8:	mov	w8, #0x7                   	// #7
  4057cc:	add	x10, x10, #0xf87
  4057d0:	str	w8, [sp, #88]
  4057d4:	str	w8, [sp, #48]
  4057d8:	str	w8, [sp, #8]
  4057dc:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  4057e0:	mov	w11, #0x18                  	// #24
  4057e4:	str	x10, [sp, #200]
  4057e8:	mov	w10, #0x1                   	// #1
  4057ec:	str	x0, [sp, #96]
  4057f0:	mov	w2, #0x1                   	// #1
  4057f4:	mov	w4, #0x7                   	// #7
  4057f8:	mov	w7, #0x1                   	// #1
  4057fc:	add	x8, x8, #0xf56
  405800:	mov	x0, x19
  405804:	mov	w1, wzr
  405808:	add	x3, x3, #0xf47
  40580c:	mov	w6, wzr
  405810:	mov	w20, #0x1c8                 	// #456
  405814:	str	w11, [sp, #224]
  405818:	str	w10, [sp, #192]
  40581c:	str	wzr, [sp, #184]
  405820:	str	w10, [sp, #152]
  405824:	str	wzr, [sp, #144]
  405828:	str	w10, [sp, #112]
  40582c:	str	wzr, [sp, #104]
  405830:	str	w10, [sp, #72]
  405834:	str	wzr, [sp, #64]
  405838:	str	x28, [sp, #56]
  40583c:	str	w10, [sp, #32]
  405840:	str	wzr, [sp, #24]
  405844:	str	x9, [sp, #16]
  405848:	str	x8, [sp]
  40584c:	bl	403b10 <table_add_many_internal@plt>
  405850:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405854:	ldr	x8, [sp, #256]
  405858:	add	x8, x8, #0x1c6
  40585c:	str	x8, [sp, #256]
  405860:	ldrh	w8, [x8]
  405864:	tbz	w8, #7, 405900 <clock_supported@plt+0x15c0>
  405868:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  40586c:	mov	w2, #0x1                   	// #1
  405870:	mov	w4, #0x18                  	// #24
  405874:	mov	x0, x19
  405878:	mov	w1, wzr
  40587c:	add	x3, x3, #0xfd7
  405880:	bl	403b10 <table_add_many_internal@plt>
  405884:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405888:	madd	x8, x24, x20, x22
  40588c:	ldr	x0, [x8, #440]
  405890:	cbz	x0, 4058a0 <clock_supported@plt+0x1560>
  405894:	bl	403cf0 <cescape@plt>
  405898:	mov	x28, x0
  40589c:	b	4058a4 <clock_supported@plt+0x1564>
  4058a0:	mov	x28, xzr
  4058a4:	adrp	x9, 40c000 <clock_supported@plt+0x7cc0>
  4058a8:	cmp	x28, #0x0
  4058ac:	madd	x8, x24, x20, x22
  4058b0:	add	x9, x9, #0x90
  4058b4:	csel	x9, x9, x28, eq  // eq = none
  4058b8:	add	x0, x8, #0x1c0
  4058bc:	sub	x1, x29, #0xd8
  4058c0:	str	x9, [sp, #248]
  4058c4:	bl	403cb0 <ether_addr_to_string@plt>
  4058c8:	ldr	x3, [sp, #248]
  4058cc:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4058d0:	mov	x4, x0
  4058d4:	mov	x0, x19
  4058d8:	mov	x1, xzr
  4058dc:	add	x2, x2, #0xfea
  4058e0:	bl	403ca0 <table_add_cell_stringf@plt>
  4058e4:	str	w0, [sp, #248]
  4058e8:	mov	x0, x28
  4058ec:	bl	4039b0 <free@plt>
  4058f0:	ldr	w8, [sp, #248]
  4058f4:	tbnz	w8, #31, 405694 <clock_supported@plt+0x1354>
  4058f8:	ldr	x8, [sp, #256]
  4058fc:	ldrh	w8, [x8]
  405900:	tbz	w8, #5, 405984 <clock_supported@plt+0x1644>
  405904:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  405908:	mov	w2, #0x1                   	// #1
  40590c:	mov	w4, #0x18                  	// #24
  405910:	mov	x0, x19
  405914:	mov	w1, wzr
  405918:	add	x3, x3, #0xff2
  40591c:	bl	403b10 <table_add_many_internal@plt>
  405920:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405924:	mov	w8, #0x1c8                 	// #456
  405928:	madd	x20, x24, x8, x22
  40592c:	ldr	x2, [x20, #320]
  405930:	sub	x0, x29, #0xd8
  405934:	mov	w1, #0x8                   	// #8
  405938:	mov	w3, wzr
  40593c:	bl	403d00 <format_bytes_full@plt>
  405940:	ldr	x2, [x20, #328]
  405944:	mov	x28, x0
  405948:	sub	x0, x29, #0xe8
  40594c:	mov	w1, #0x8                   	// #8
  405950:	mov	w3, wzr
  405954:	mov	w20, #0x1c8                 	// #456
  405958:	bl	403d00 <format_bytes_full@plt>
  40595c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  405960:	mov	x4, x0
  405964:	mov	x0, x19
  405968:	mov	x1, xzr
  40596c:	add	x2, x2, #0x4
  405970:	mov	x3, x28
  405974:	bl	403ca0 <table_add_cell_stringf@plt>
  405978:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  40597c:	ldr	x8, [sp, #256]
  405980:	ldrh	w8, [x8]
  405984:	tst	w8, #0x6
  405988:	b.eq	4059d4 <clock_supported@plt+0x1694>  // b.none
  40598c:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  405990:	mov	w2, #0x1                   	// #1
  405994:	mov	w4, #0x18                  	// #24
  405998:	mov	x0, x19
  40599c:	mov	w1, wzr
  4059a0:	add	x3, x3, #0x10
  4059a4:	bl	403b10 <table_add_many_internal@plt>
  4059a8:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  4059ac:	madd	x8, x24, x20, x22
  4059b0:	ldp	w3, w4, [x8, #120]
  4059b4:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  4059b8:	mov	x0, x19
  4059bc:	mov	x1, xzr
  4059c0:	add	x2, x2, #0x26
  4059c4:	bl	403ca0 <table_add_cell_stringf@plt>
  4059c8:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  4059cc:	ldr	x8, [sp, #256]
  4059d0:	ldrh	w8, [x8]
  4059d4:	tbnz	w8, #6, 405af4 <clock_supported@plt+0x17b4>
  4059d8:	ldr	w2, [x21]
  4059dc:	mov	x0, x26
  4059e0:	mov	x1, x19
  4059e4:	bl	408620 <clock_supported@plt+0x42e0>
  4059e8:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  4059ec:	ldr	w3, [x21]
  4059f0:	mov	x0, x26
  4059f4:	mov	x1, x27
  4059f8:	mov	x2, x19
  4059fc:	bl	408864 <clock_supported@plt+0x4524>
  405a00:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405a04:	ldur	x2, [x29, #-40]
  405a08:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  405a0c:	mov	x0, x19
  405a10:	add	x1, x1, #0xaf8
  405a14:	bl	408e24 <clock_supported@plt+0x4ae4>
  405a18:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405a1c:	ldur	x2, [x29, #-56]
  405a20:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  405a24:	mov	x0, x19
  405a28:	add	x1, x1, #0xafd
  405a2c:	bl	408e24 <clock_supported@plt+0x4ae4>
  405a30:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405a34:	ldur	x2, [x29, #-64]
  405a38:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  405a3c:	mov	x0, x19
  405a40:	add	x1, x1, #0xb0d
  405a44:	bl	408e24 <clock_supported@plt+0x4ae4>
  405a48:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405a4c:	ldur	x2, [x29, #-48]
  405a50:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  405a54:	mov	x0, x19
  405a58:	add	x1, x1, #0xb1c
  405a5c:	bl	408e24 <clock_supported@plt+0x4ae4>
  405a60:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405a64:	ldur	x2, [x29, #-176]
  405a68:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  405a6c:	mov	x0, x19
  405a70:	add	x1, x1, #0x53
  405a74:	bl	408fb0 <clock_supported@plt+0x4c70>
  405a78:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405a7c:	ldur	x2, [x29, #-184]
  405a80:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  405a84:	mov	x0, x19
  405a88:	add	x1, x1, #0x65
  405a8c:	bl	408fb0 <clock_supported@plt+0x4c70>
  405a90:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405a94:	ldr	w0, [x21]
  405a98:	sub	x1, x29, #0x58
  405a9c:	bl	403d10 <sd_network_link_get_timezone@plt>
  405aa0:	ldur	x5, [x29, #-88]
  405aa4:	cbz	x5, 405acc <clock_supported@plt+0x178c>
  405aa8:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  405aac:	mov	w2, #0x1                   	// #1
  405ab0:	mov	w4, #0x1                   	// #1
  405ab4:	mov	w6, #0x18                  	// #24
  405ab8:	mov	x0, x19
  405abc:	mov	w1, wzr
  405ac0:	add	x3, x3, #0x77
  405ac4:	bl	403b10 <table_add_many_internal@plt>
  405ac8:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405acc:	ldr	w0, [x21]
  405ad0:	stur	xzr, [x29, #-216]
  405ad4:	cmp	w0, #0x0
  405ad8:	b.le	406308 <clock_supported@plt+0x1fc8>
  405adc:	sub	x1, x29, #0xd8
  405ae0:	bl	409060 <clock_supported@plt+0x4d20>
  405ae4:	cmn	w0, #0x2
  405ae8:	b.ne	405be0 <clock_supported@plt+0x18a0>  // b.any
  405aec:	mov	w26, wzr
  405af0:	b	405d18 <clock_supported@plt+0x19d8>
  405af4:	mov	w8, #0x1c8                 	// #456
  405af8:	madd	x20, x24, x8, x22
  405afc:	ldr	w0, [x20, #424]
  405b00:	bl	403d20 <duplex_to_string@plt>
  405b04:	ldr	w8, [x20, #428]
  405b08:	mov	x28, x0
  405b0c:	mov	w0, w8
  405b10:	bl	403d30 <port_to_string@plt>
  405b14:	ldr	w8, [x20, #412]
  405b18:	mov	w20, #0x1c8                 	// #456
  405b1c:	str	x0, [sp, #248]
  405b20:	cmp	w8, #0x1
  405b24:	b.hi	405b50 <clock_supported@plt+0x1810>  // b.pmore
  405b28:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  405b2c:	cset	w5, eq  // eq = none
  405b30:	mov	w2, #0x1                   	// #1
  405b34:	mov	w4, #0x2                   	// #2
  405b38:	mov	w6, #0x18                  	// #24
  405b3c:	mov	x0, x19
  405b40:	mov	w1, wzr
  405b44:	add	x3, x3, #0x2c
  405b48:	bl	403b10 <table_add_many_internal@plt>
  405b4c:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405b50:	madd	x8, x24, x20, x22
  405b54:	ldr	x5, [x8, #416]
  405b58:	cbz	x5, 405b80 <clock_supported@plt+0x1840>
  405b5c:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  405b60:	mov	w2, #0x1                   	// #1
  405b64:	mov	w4, #0x9                   	// #9
  405b68:	mov	w6, #0x18                  	// #24
  405b6c:	mov	x0, x19
  405b70:	mov	w1, wzr
  405b74:	add	x3, x3, #0x3e
  405b78:	bl	403b10 <table_add_many_internal@plt>
  405b7c:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405b80:	cbz	x28, 405bac <clock_supported@plt+0x186c>
  405b84:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  405b88:	mov	w2, #0x1                   	// #1
  405b8c:	mov	w4, #0x1                   	// #1
  405b90:	mov	w6, #0x18                  	// #24
  405b94:	mov	x0, x19
  405b98:	mov	w1, wzr
  405b9c:	add	x3, x3, #0x45
  405ba0:	mov	x5, x28
  405ba4:	bl	403b10 <table_add_many_internal@plt>
  405ba8:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405bac:	ldr	x8, [sp, #248]
  405bb0:	cbz	x8, 4059d8 <clock_supported@plt+0x1698>
  405bb4:	ldr	x5, [sp, #248]
  405bb8:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  405bbc:	mov	w2, #0x1                   	// #1
  405bc0:	mov	w4, #0x1                   	// #1
  405bc4:	mov	w6, #0x18                  	// #24
  405bc8:	mov	x0, x19
  405bcc:	mov	w1, wzr
  405bd0:	add	x3, x3, #0x4d
  405bd4:	bl	403b10 <table_add_many_internal@plt>
  405bd8:	tbz	w0, #31, 4059d8 <clock_supported@plt+0x1698>
  405bdc:	b	405694 <clock_supported@plt+0x1354>
  405be0:	mov	w26, w0
  405be4:	tbnz	w0, #31, 405d18 <clock_supported@plt+0x19d8>
  405be8:	ldur	x27, [x29, #-216]
  405bec:	adrp	x20, 40b000 <clock_supported@plt+0x6cc0>
  405bf0:	mov	w21, wzr
  405bf4:	add	x20, x20, #0x497
  405bf8:	sub	x1, x29, #0x20
  405bfc:	mov	x0, x27
  405c00:	stur	xzr, [x29, #-232]
  405c04:	stp	xzr, xzr, [x29, #-24]
  405c08:	stur	xzr, [x29, #-32]
  405c0c:	bl	4090e0 <clock_supported@plt+0x4da0>
  405c10:	tbnz	w0, #31, 405cb0 <clock_supported@plt+0x1970>
  405c14:	cbz	w0, 405cbc <clock_supported@plt+0x197c>
  405c18:	adrp	x8, 40c000 <clock_supported@plt+0x7cc0>
  405c1c:	cmp	w21, #0x0
  405c20:	add	x8, x8, #0x82
  405c24:	csel	x3, x8, x20, eq  // eq = none
  405c28:	mov	w2, #0x1                   	// #1
  405c2c:	mov	w4, #0x18                  	// #24
  405c30:	mov	x0, x19
  405c34:	mov	w1, wzr
  405c38:	mov	w28, #0x1                   	// #1
  405c3c:	bl	403b10 <table_add_many_internal@plt>
  405c40:	tbnz	w0, #31, 405cb4 <clock_supported@plt+0x1974>
  405c44:	ldur	x0, [x29, #-32]
  405c48:	sub	x1, x29, #0xe8
  405c4c:	bl	40a46c <clock_supported@plt+0x612c>
  405c50:	ldur	x0, [x29, #-32]
  405c54:	sub	x1, x29, #0x10
  405c58:	bl	40a2b4 <clock_supported@plt+0x5f74>
  405c5c:	ldur	x0, [x29, #-32]
  405c60:	sub	x1, x29, #0x18
  405c64:	bl	40a564 <clock_supported@plt+0x6224>
  405c68:	ldur	x8, [x29, #-232]
  405c6c:	ldp	x6, x9, [x29, #-24]
  405c70:	adrp	x10, 40b000 <clock_supported@plt+0x6cc0>
  405c74:	add	x10, x10, #0xa62
  405c78:	cmp	x8, #0x0
  405c7c:	csel	x3, x10, x8, eq  // eq = none
  405c80:	cmp	x9, #0x0
  405c84:	csel	x4, x10, x9, eq  // eq = none
  405c88:	cbz	x6, 405cc4 <clock_supported@plt+0x1984>
  405c8c:	ldrb	w8, [x6]
  405c90:	cmp	w8, #0x0
  405c94:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  405c98:	add	x8, x8, #0xbf9
  405c9c:	csel	x5, x20, x8, eq  // eq = none
  405ca0:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  405ca4:	add	x8, x8, #0xbfc
  405ca8:	csel	x7, x20, x8, eq  // eq = none
  405cac:	b	405cd0 <clock_supported@plt+0x1990>
  405cb0:	mov	w28, #0x1                   	// #1
  405cb4:	mov	w26, w0
  405cb8:	b	405cf8 <clock_supported@plt+0x19b8>
  405cbc:	mov	w28, #0x8                   	// #8
  405cc0:	b	405cf8 <clock_supported@plt+0x19b8>
  405cc4:	mov	x5, x20
  405cc8:	mov	x6, x20
  405ccc:	mov	x7, x20
  405cd0:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  405cd4:	mov	x0, x19
  405cd8:	mov	x1, xzr
  405cdc:	add	x2, x2, #0x115
  405ce0:	bl	403ca0 <table_add_cell_stringf@plt>
  405ce4:	cmp	w0, #0x0
  405ce8:	mvn	w8, w0
  405cec:	csel	w26, w0, w26, lt  // lt = tstop
  405cf0:	add	w21, w21, w8, lsr #31
  405cf4:	lsr	w28, w0, #31
  405cf8:	ldur	x0, [x29, #-32]
  405cfc:	cbz	x0, 405d04 <clock_supported@plt+0x19c4>
  405d00:	bl	4093f0 <clock_supported@plt+0x50b0>
  405d04:	cbz	w28, 405bf8 <clock_supported@plt+0x18b8>
  405d08:	cmp	w28, #0x8
  405d0c:	mov	w20, #0x1c8                 	// #456
  405d10:	b.ne	405d18 <clock_supported@plt+0x19d8>  // b.any
  405d14:	mov	w26, w21
  405d18:	ldur	x0, [x29, #-216]
  405d1c:	bl	403d40 <safe_fclose@plt>
  405d20:	tbnz	w26, #31, 405694 <clock_supported@plt+0x1354>
  405d24:	adrp	x8, 420000 <__bss_start@@Base>
  405d28:	ldrb	w8, [x8, #10]
  405d2c:	cmp	w8, #0x1
  405d30:	b.ne	406168 <clock_supported@plt+0x1e28>  // b.any
  405d34:	ldr	x8, [sp, #256]
  405d38:	ldrb	w8, [x8]
  405d3c:	tst	w8, #0x18
  405d40:	b.eq	406168 <clock_supported@plt+0x1e28>  // b.none
  405d44:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  405d48:	mov	w2, #0x1                   	// #1
  405d4c:	mov	w4, #0x18                  	// #24
  405d50:	mov	x0, x19
  405d54:	mov	w1, wzr
  405d58:	add	x3, x3, #0x17d
  405d5c:	bl	403b10 <table_add_many_internal@plt>
  405d60:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405d64:	ldr	x8, [sp, #256]
  405d68:	madd	x9, x24, x20, x22
  405d6c:	add	x26, x9, #0x80
  405d70:	mov	x4, #0xffffffffffffffff    	// #-1
  405d74:	ldrh	w8, [x8]
  405d78:	mov	x5, #0xffffffffffffffff    	// #-1
  405d7c:	mov	w6, #0xffffffff            	// #-1
  405d80:	mov	w7, #0xffffffff            	// #-1
  405d84:	tst	w8, #0x8
  405d88:	mov	w8, #0x12                  	// #18
  405d8c:	cinc	w2, w8, ne  // ne = any
  405d90:	mov	w8, #0xffffffff            	// #-1
  405d94:	mov	x0, x19
  405d98:	mov	x1, xzr
  405d9c:	mov	x3, x26
  405da0:	str	w8, [sp]
  405da4:	bl	403d50 <table_add_cell_full@plt>
  405da8:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405dac:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  405db0:	mov	w2, #0x1                   	// #1
  405db4:	mov	w4, #0x18                  	// #24
  405db8:	mov	x0, x19
  405dbc:	mov	w1, wzr
  405dc0:	add	x3, x3, #0x189
  405dc4:	bl	403b10 <table_add_many_internal@plt>
  405dc8:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405dcc:	ldr	x8, [sp, #256]
  405dd0:	madd	x9, x24, x20, x22
  405dd4:	add	x10, x26, #0x4
  405dd8:	add	x21, x9, #0x88
  405ddc:	ldrh	w8, [x8]
  405de0:	mov	x4, #0xffffffffffffffff    	// #-1
  405de4:	mov	x5, #0xffffffffffffffff    	// #-1
  405de8:	mov	w6, #0xffffffff            	// #-1
  405dec:	tst	w8, #0x8
  405df0:	mov	w8, #0x12                  	// #18
  405df4:	cinc	w2, w8, ne  // ne = any
  405df8:	csel	x3, x21, x10, ne  // ne = any
  405dfc:	mov	w7, #0xffffffff            	// #-1
  405e00:	mov	w8, #0xffffffff            	// #-1
  405e04:	mov	x0, x19
  405e08:	mov	x1, xzr
  405e0c:	str	w8, [sp]
  405e10:	bl	403d50 <table_add_cell_full@plt>
  405e14:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405e18:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  405e1c:	mov	w2, #0x1                   	// #1
  405e20:	mov	w4, #0x18                  	// #24
  405e24:	mov	x0, x19
  405e28:	mov	w1, wzr
  405e2c:	add	x3, x3, #0x195
  405e30:	bl	403b10 <table_add_many_internal@plt>
  405e34:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405e38:	ldr	x8, [sp, #256]
  405e3c:	madd	x9, x24, x20, x22
  405e40:	add	x28, x9, #0x90
  405e44:	mov	x4, #0xffffffffffffffff    	// #-1
  405e48:	ldrh	w8, [x8]
  405e4c:	mov	x5, #0xffffffffffffffff    	// #-1
  405e50:	mov	w6, #0xffffffff            	// #-1
  405e54:	mov	w7, #0xffffffff            	// #-1
  405e58:	tst	w8, #0x8
  405e5c:	mov	w8, #0x12                  	// #18
  405e60:	cinc	w2, w8, ne  // ne = any
  405e64:	csel	x3, x28, x21, ne  // ne = any
  405e68:	mov	w8, #0xffffffff            	// #-1
  405e6c:	mov	x0, x19
  405e70:	mov	x1, xzr
  405e74:	str	w8, [sp]
  405e78:	bl	403d50 <table_add_cell_full@plt>
  405e7c:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405e80:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  405e84:	mov	w2, #0x1                   	// #1
  405e88:	mov	w4, #0x18                  	// #24
  405e8c:	mov	x0, x19
  405e90:	mov	w1, wzr
  405e94:	add	x3, x3, #0x19f
  405e98:	bl	403b10 <table_add_many_internal@plt>
  405e9c:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405ea0:	ldr	x8, [sp, #256]
  405ea4:	madd	x9, x24, x20, x22
  405ea8:	add	x10, x26, #0xc
  405eac:	add	x27, x9, #0x98
  405eb0:	ldrh	w8, [x8]
  405eb4:	mov	x4, #0xffffffffffffffff    	// #-1
  405eb8:	mov	x5, #0xffffffffffffffff    	// #-1
  405ebc:	mov	w6, #0xffffffff            	// #-1
  405ec0:	tst	w8, #0x8
  405ec4:	mov	w8, #0x12                  	// #18
  405ec8:	cinc	w2, w8, ne  // ne = any
  405ecc:	csel	x3, x27, x10, ne  // ne = any
  405ed0:	mov	w7, #0xffffffff            	// #-1
  405ed4:	mov	w8, #0xffffffff            	// #-1
  405ed8:	mov	x0, x19
  405edc:	mov	x1, xzr
  405ee0:	str	w8, [sp]
  405ee4:	bl	403d50 <table_add_cell_full@plt>
  405ee8:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405eec:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  405ef0:	mov	w2, #0x1                   	// #1
  405ef4:	mov	w4, #0x18                  	// #24
  405ef8:	mov	x0, x19
  405efc:	mov	w1, wzr
  405f00:	add	x3, x3, #0x1a9
  405f04:	bl	403b10 <table_add_many_internal@plt>
  405f08:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405f0c:	ldr	x8, [sp, #256]
  405f10:	madd	x9, x24, x20, x22
  405f14:	add	x21, x9, #0xa0
  405f18:	mov	x4, #0xffffffffffffffff    	// #-1
  405f1c:	ldrh	w8, [x8]
  405f20:	mov	x5, #0xffffffffffffffff    	// #-1
  405f24:	mov	w6, #0xffffffff            	// #-1
  405f28:	mov	w7, #0xffffffff            	// #-1
  405f2c:	tst	w8, #0x8
  405f30:	mov	w8, #0x12                  	// #18
  405f34:	cinc	w2, w8, ne  // ne = any
  405f38:	csel	x3, x21, x28, ne  // ne = any
  405f3c:	mov	w8, #0xffffffff            	// #-1
  405f40:	mov	x0, x19
  405f44:	mov	x1, xzr
  405f48:	str	w8, [sp]
  405f4c:	bl	403d50 <table_add_cell_full@plt>
  405f50:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405f54:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  405f58:	mov	w2, #0x1                   	// #1
  405f5c:	mov	w4, #0x18                  	// #24
  405f60:	mov	x0, x19
  405f64:	mov	w1, wzr
  405f68:	add	x3, x3, #0x1b4
  405f6c:	bl	403b10 <table_add_many_internal@plt>
  405f70:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405f74:	ldr	x8, [sp, #256]
  405f78:	madd	x9, x24, x20, x22
  405f7c:	add	x10, x26, #0x14
  405f80:	add	x9, x9, #0xa8
  405f84:	ldrh	w8, [x8]
  405f88:	mov	x4, #0xffffffffffffffff    	// #-1
  405f8c:	mov	x5, #0xffffffffffffffff    	// #-1
  405f90:	mov	w6, #0xffffffff            	// #-1
  405f94:	tst	w8, #0x8
  405f98:	mov	w8, #0x12                  	// #18
  405f9c:	cinc	w2, w8, ne  // ne = any
  405fa0:	csel	x3, x9, x10, ne  // ne = any
  405fa4:	mov	w7, #0xffffffff            	// #-1
  405fa8:	mov	w8, #0xffffffff            	// #-1
  405fac:	mov	x0, x19
  405fb0:	mov	x1, xzr
  405fb4:	str	w8, [sp]
  405fb8:	bl	403d50 <table_add_cell_full@plt>
  405fbc:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405fc0:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  405fc4:	mov	w2, #0x1                   	// #1
  405fc8:	mov	w4, #0x18                  	// #24
  405fcc:	mov	x0, x19
  405fd0:	mov	w1, wzr
  405fd4:	add	x3, x3, #0x1bf
  405fd8:	bl	403b10 <table_add_many_internal@plt>
  405fdc:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  405fe0:	ldr	x8, [sp, #256]
  405fe4:	madd	x9, x24, x20, x22
  405fe8:	add	x9, x9, #0xb0
  405fec:	mov	x4, #0xffffffffffffffff    	// #-1
  405ff0:	ldrh	w8, [x8]
  405ff4:	mov	x5, #0xffffffffffffffff    	// #-1
  405ff8:	mov	w6, #0xffffffff            	// #-1
  405ffc:	mov	w7, #0xffffffff            	// #-1
  406000:	tst	w8, #0x8
  406004:	mov	w8, #0x12                  	// #18
  406008:	cinc	w2, w8, ne  // ne = any
  40600c:	csel	x3, x9, x27, ne  // ne = any
  406010:	mov	w8, #0xffffffff            	// #-1
  406014:	mov	x0, x19
  406018:	mov	x1, xzr
  40601c:	str	w8, [sp]
  406020:	bl	403d50 <table_add_cell_full@plt>
  406024:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  406028:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  40602c:	mov	w2, #0x1                   	// #1
  406030:	mov	w4, #0x18                  	// #24
  406034:	mov	x0, x19
  406038:	mov	w1, wzr
  40603c:	add	x3, x3, #0x1cb
  406040:	bl	403b10 <table_add_many_internal@plt>
  406044:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  406048:	ldr	x8, [sp, #256]
  40604c:	madd	x9, x24, x20, x22
  406050:	add	x10, x26, #0x1c
  406054:	add	x9, x9, #0xb8
  406058:	ldrh	w8, [x8]
  40605c:	mov	x4, #0xffffffffffffffff    	// #-1
  406060:	mov	x5, #0xffffffffffffffff    	// #-1
  406064:	mov	w6, #0xffffffff            	// #-1
  406068:	tst	w8, #0x8
  40606c:	mov	w8, #0x12                  	// #18
  406070:	cinc	w2, w8, ne  // ne = any
  406074:	csel	x3, x9, x10, ne  // ne = any
  406078:	mov	w7, #0xffffffff            	// #-1
  40607c:	mov	w8, #0xffffffff            	// #-1
  406080:	mov	x0, x19
  406084:	mov	x1, xzr
  406088:	str	w8, [sp]
  40608c:	bl	403d50 <table_add_cell_full@plt>
  406090:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  406094:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  406098:	mov	w2, #0x1                   	// #1
  40609c:	mov	w4, #0x18                  	// #24
  4060a0:	mov	x0, x19
  4060a4:	mov	w1, wzr
  4060a8:	add	x3, x3, #0x1d7
  4060ac:	bl	403b10 <table_add_many_internal@plt>
  4060b0:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  4060b4:	ldr	x8, [sp, #256]
  4060b8:	madd	x9, x24, x20, x22
  4060bc:	add	x9, x9, #0xc0
  4060c0:	mov	x4, #0xffffffffffffffff    	// #-1
  4060c4:	ldrh	w8, [x8]
  4060c8:	mov	x5, #0xffffffffffffffff    	// #-1
  4060cc:	mov	w6, #0xffffffff            	// #-1
  4060d0:	mov	w7, #0xffffffff            	// #-1
  4060d4:	tst	w8, #0x8
  4060d8:	mov	w8, #0x12                  	// #18
  4060dc:	cinc	w2, w8, ne  // ne = any
  4060e0:	csel	x3, x9, x21, ne  // ne = any
  4060e4:	mov	w8, #0xffffffff            	// #-1
  4060e8:	mov	x0, x19
  4060ec:	mov	x1, xzr
  4060f0:	str	w8, [sp]
  4060f4:	bl	403d50 <table_add_cell_full@plt>
  4060f8:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  4060fc:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  406100:	mov	w2, #0x1                   	// #1
  406104:	mov	w4, #0x18                  	// #24
  406108:	mov	x0, x19
  40610c:	mov	w1, wzr
  406110:	add	x3, x3, #0x1ea
  406114:	bl	403b10 <table_add_many_internal@plt>
  406118:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  40611c:	ldr	x8, [sp, #256]
  406120:	madd	x9, x24, x20, x22
  406124:	add	x10, x26, #0x24
  406128:	add	x9, x9, #0xc8
  40612c:	ldrh	w8, [x8]
  406130:	mov	x4, #0xffffffffffffffff    	// #-1
  406134:	mov	x5, #0xffffffffffffffff    	// #-1
  406138:	mov	w6, #0xffffffff            	// #-1
  40613c:	tst	w8, #0x8
  406140:	mov	w8, #0x12                  	// #18
  406144:	cinc	w2, w8, ne  // ne = any
  406148:	csel	x3, x9, x10, ne  // ne = any
  40614c:	mov	w7, #0xffffffff            	// #-1
  406150:	mov	w8, #0xffffffff            	// #-1
  406154:	mov	x0, x19
  406158:	mov	x1, xzr
  40615c:	str	w8, [sp]
  406160:	bl	403d50 <table_add_cell_full@plt>
  406164:	tbnz	w0, #31, 405694 <clock_supported@plt+0x1354>
  406168:	mov	x0, x19
  40616c:	mov	x1, xzr
  406170:	bl	403b20 <table_print@plt>
  406174:	b	405694 <clock_supported@plt+0x1354>
  406178:	mov	w19, wzr
  40617c:	b	4061b0 <clock_supported@plt+0x1e70>
  406180:	mov	w19, #0xfffffff4            	// #-12
  406184:	ldur	x0, [x29, #-24]
  406188:	cbz	x0, 406190 <clock_supported@plt+0x1e50>
  40618c:	bl	403c00 <strv_free@plt>
  406190:	ldur	x0, [x29, #-16]
  406194:	cbz	x0, 40619c <clock_supported@plt+0x1e5c>
  406198:	bl	403c00 <strv_free@plt>
  40619c:	ldur	x0, [x29, #-232]
  4061a0:	cbz	x0, 4061a8 <clock_supported@plt+0x1e68>
  4061a4:	bl	403c00 <strv_free@plt>
  4061a8:	ldur	x0, [x29, #-216]
  4061ac:	bl	4039b0 <free@plt>
  4061b0:	ldr	x20, [sp, #264]
  4061b4:	cbz	x20, 4061fc <clock_supported@plt+0x1ebc>
  4061b8:	ldrb	w8, [x20, #455]
  4061bc:	tbz	w8, #0, 4061f4 <clock_supported@plt+0x1eb4>
  4061c0:	mov	x8, xzr
  4061c4:	mov	w21, #0x1                   	// #1
  4061c8:	mov	w22, #0x1c8                 	// #456
  4061cc:	madd	x23, x8, x22, x20
  4061d0:	ldr	x0, [x23, #88]
  4061d4:	bl	403b60 <sd_device_unref@plt>
  4061d8:	ldr	x0, [x23, #440]
  4061dc:	bl	4039b0 <free@plt>
  4061e0:	umaddl	x8, w21, w22, x20
  4061e4:	ldrb	w9, [x8, #455]
  4061e8:	mov	w8, w21
  4061ec:	add	w21, w21, #0x1
  4061f0:	tbnz	w9, #0, 4061cc <clock_supported@plt+0x1e8c>
  4061f4:	mov	x0, x20
  4061f8:	bl	4039b0 <free@plt>
  4061fc:	ldur	x0, [x29, #-256]
  406200:	cbz	x0, 406208 <clock_supported@plt+0x1ec8>
  406204:	bl	403d60 <sd_hwdb_unref@plt>
  406208:	ldur	x0, [x29, #-248]
  40620c:	cbz	x0, 406214 <clock_supported@plt+0x1ed4>
  406210:	bl	403b70 <sd_netlink_unref@plt>
  406214:	ldur	x0, [x29, #-240]
  406218:	cbz	x0, 406220 <clock_supported@plt+0x1ee0>
  40621c:	bl	403d70 <sd_bus_flush_close_unref@plt>
  406220:	mov	w0, w19
  406224:	add	sp, sp, #0x210
  406228:	ldp	x20, x19, [sp, #80]
  40622c:	ldp	x22, x21, [sp, #64]
  406230:	ldp	x24, x23, [sp, #48]
  406234:	ldp	x26, x25, [sp, #32]
  406238:	ldp	x28, x27, [sp, #16]
  40623c:	ldp	x29, x30, [sp], #96
  406240:	ret
  406244:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  406248:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  40624c:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  406250:	add	x1, x1, #0x622
  406254:	add	x2, x2, #0xef
  406258:	add	x4, x4, #0xdc1
  40625c:	mov	w3, #0x42d                 	// #1069
  406260:	b	406280 <clock_supported@plt+0x1f40>
  406264:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  406268:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  40626c:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  406270:	add	x1, x1, #0x703
  406274:	add	x2, x2, #0xef
  406278:	add	x4, x4, #0xdc1
  40627c:	mov	w3, #0x42e                 	// #1070
  406280:	mov	w0, wzr
  406284:	bl	403a30 <log_assert_failed_realm@plt>
  406288:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40628c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406290:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  406294:	add	x1, x1, #0x580
  406298:	add	x2, x2, #0xef
  40629c:	add	x4, x4, #0xdc1
  4062a0:	mov	w3, #0x454                 	// #1108
  4062a4:	bl	403a30 <log_assert_failed_realm@plt>
  4062a8:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  4062ac:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4062b0:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  4062b4:	add	x1, x1, #0x5c8
  4062b8:	add	x2, x2, #0xef
  4062bc:	add	x4, x4, #0xdc1
  4062c0:	mov	w3, #0x457                 	// #1111
  4062c4:	bl	403a30 <log_assert_failed_realm@plt>
  4062c8:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  4062cc:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4062d0:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  4062d4:	add	x1, x1, #0xed4
  4062d8:	add	x2, x2, #0xef
  4062dc:	add	x4, x4, #0xdc1
  4062e0:	mov	w3, #0x4b4                 	// #1204
  4062e4:	b	406280 <clock_supported@plt+0x1f40>
  4062e8:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  4062ec:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4062f0:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  4062f4:	add	x1, x1, #0xefb
  4062f8:	add	x2, x2, #0xef
  4062fc:	add	x4, x4, #0xdc1
  406300:	mov	w3, #0x4b5                 	// #1205
  406304:	b	406280 <clock_supported@plt+0x1f40>
  406308:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40630c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406310:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  406314:	add	x1, x1, #0x109
  406318:	add	x2, x2, #0xef
  40631c:	add	x4, x4, #0xd5
  406320:	mov	w3, #0x3a7                 	// #935
  406324:	b	406280 <clock_supported@plt+0x1f40>
  406328:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40632c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406330:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  406334:	add	x1, x1, #0x622
  406338:	add	x2, x2, #0xef
  40633c:	add	x4, x4, #0xab8
  406340:	mov	w3, #0x5a1                 	// #1441
  406344:	b	406280 <clock_supported@plt+0x1f40>
  406348:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40634c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406350:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  406354:	add	x1, x1, #0x580
  406358:	add	x2, x2, #0xef
  40635c:	add	x4, x4, #0xab8
  406360:	mov	w3, #0x5aa                 	// #1450
  406364:	bl	403a30 <log_assert_failed_realm@plt>
  406368:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40636c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406370:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  406374:	add	x1, x1, #0x5c8
  406378:	add	x2, x2, #0xef
  40637c:	add	x4, x4, #0xab8
  406380:	mov	w3, #0x5ad                 	// #1453
  406384:	bl	403a30 <log_assert_failed_realm@plt>
  406388:	sub	sp, sp, #0xf0
  40638c:	stp	x29, x30, [sp, #144]
  406390:	add	x29, sp, #0x90
  406394:	stp	x20, x19, [sp, #224]
  406398:	mov	w20, w0
  40639c:	sub	x0, x29, #0x8
  4063a0:	stp	x28, x27, [sp, #160]
  4063a4:	stp	x26, x25, [sp, #176]
  4063a8:	stp	x24, x23, [sp, #192]
  4063ac:	stp	x22, x21, [sp, #208]
  4063b0:	mov	x21, x1
  4063b4:	stp	xzr, xzr, [x29, #-16]
  4063b8:	bl	403a50 <sd_netlink_open@plt>
  4063bc:	tbnz	w0, #31, 4068a4 <clock_supported@plt+0x2564>
  4063c0:	ldur	x1, [x29, #-8]
  4063c4:	add	x8, x21, #0x8
  4063c8:	cmp	w20, #0x1
  4063cc:	csel	x2, x8, xzr, gt
  4063d0:	sub	x3, x29, #0x10
  4063d4:	mov	x0, xzr
  4063d8:	bl	4077c0 <clock_supported@plt+0x3480>
  4063dc:	mov	w24, w0
  4063e0:	tbnz	w0, #31, 406a28 <clock_supported@plt+0x26e8>
  4063e4:	adrp	x8, 420000 <__bss_start@@Base>
  4063e8:	ldr	w0, [x8, #4]
  4063ec:	bl	403a60 <pager_open@plt>
  4063f0:	adrp	x0, 40b000 <clock_supported@plt+0x6cc0>
  4063f4:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  4063f8:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  4063fc:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  406400:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  406404:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  406408:	add	x0, x0, #0x564
  40640c:	add	x1, x1, #0x207
  406410:	add	x2, x2, #0x212
  406414:	add	x3, x3, #0x21e
  406418:	add	x4, x4, #0x223
  40641c:	add	x5, x5, #0x22b
  406420:	mov	x6, xzr
  406424:	bl	403a70 <table_new_internal@plt>
  406428:	cbz	x0, 4068f8 <clock_supported@plt+0x25b8>
  40642c:	adrp	x8, 420000 <__bss_start@@Base>
  406430:	ldrb	w8, [x8, #8]
  406434:	mov	x19, x0
  406438:	mvn	w8, w8
  40643c:	and	w1, w8, #0x1
  406440:	bl	403a80 <table_set_header@plt>
  406444:	mov	x0, x19
  406448:	mov	x1, xzr
  40644c:	mov	x2, xzr
  406450:	bl	403a90 <table_get_cell@plt>
  406454:	cbz	x0, 406aa4 <clock_supported@plt+0x2764>
  406458:	mov	x1, x0
  40645c:	mov	w2, #0x10                  	// #16
  406460:	mov	x0, x19
  406464:	bl	403aa0 <table_set_minimum_width@plt>
  406468:	mov	w2, #0x1                   	// #1
  40646c:	mov	x0, x19
  406470:	mov	x1, xzr
  406474:	bl	403a90 <table_get_cell@plt>
  406478:	cbz	x0, 406ac4 <clock_supported@plt+0x2784>
  40647c:	mov	x1, x0
  406480:	mov	w2, #0x11                  	// #17
  406484:	mov	x0, x19
  406488:	bl	403aa0 <table_set_minimum_width@plt>
  40648c:	mov	w2, #0x2                   	// #2
  406490:	mov	x0, x19
  406494:	mov	x1, xzr
  406498:	bl	403a90 <table_get_cell@plt>
  40649c:	cbz	x0, 406ae4 <clock_supported@plt+0x27a4>
  4064a0:	mov	x1, x0
  4064a4:	mov	w2, #0x10                  	// #16
  4064a8:	mov	x0, x19
  4064ac:	bl	403aa0 <table_set_minimum_width@plt>
  4064b0:	mov	w2, #0x3                   	// #3
  4064b4:	mov	x0, x19
  4064b8:	mov	x1, xzr
  4064bc:	bl	403a90 <table_get_cell@plt>
  4064c0:	cbz	x0, 406b04 <clock_supported@plt+0x27c4>
  4064c4:	mov	x1, x0
  4064c8:	mov	w2, #0xb                   	// #11
  4064cc:	mov	x0, x19
  4064d0:	bl	403aa0 <table_set_minimum_width@plt>
  4064d4:	mov	w2, #0x4                   	// #4
  4064d8:	mov	x0, x19
  4064dc:	mov	x1, xzr
  4064e0:	bl	403a90 <table_get_cell@plt>
  4064e4:	cbz	x0, 406b24 <clock_supported@plt+0x27e4>
  4064e8:	mov	x1, x0
  4064ec:	mov	w2, #0x11                  	// #17
  4064f0:	mov	x0, x19
  4064f4:	bl	403aa0 <table_set_minimum_width@plt>
  4064f8:	mov	w2, #0x5                   	// #5
  4064fc:	mov	x0, x19
  406500:	mov	x1, xzr
  406504:	bl	403a90 <table_get_cell@plt>
  406508:	cbz	x0, 406b44 <clock_supported@plt+0x2804>
  40650c:	mov	x1, x0
  406510:	mov	w2, #0x10                  	// #16
  406514:	mov	x0, x19
  406518:	str	x19, [sp, #56]
  40651c:	bl	403aa0 <table_set_minimum_width@plt>
  406520:	cmp	w24, #0x1
  406524:	b.lt	406914 <clock_supported@plt+0x25d4>  // b.tstop
  406528:	adrp	x19, 40b000 <clock_supported@plt+0x6cc0>
  40652c:	adrp	x21, 40b000 <clock_supported@plt+0x6cc0>
  406530:	mov	x23, xzr
  406534:	mov	w20, w24
  406538:	add	x19, x19, #0x50
  40653c:	add	x21, x21, #0xa62
  406540:	str	wzr, [sp, #72]
  406544:	str	wzr, [sp, #64]
  406548:	str	x20, [sp, #48]
  40654c:	ldur	x8, [x29, #-16]
  406550:	mov	w9, #0x1c8                 	// #456
  406554:	stur	xzr, [x29, #-24]
  406558:	sub	x1, x29, #0x18
  40655c:	madd	x8, x23, x9, x8
  406560:	ldr	w0, [x8, #96]
  406564:	bl	409060 <clock_supported@plt+0x4d20>
  406568:	cmn	w0, #0x2
  40656c:	b.eq	40688c <clock_supported@plt+0x254c>  // b.none
  406570:	mov	w22, w0
  406574:	tbnz	w0, #31, 406844 <clock_supported@plt+0x2504>
  406578:	ldur	x26, [x29, #-24]
  40657c:	sub	x1, x29, #0x40
  406580:	mov	x0, x26
  406584:	stp	xzr, xzr, [x29, #-40]
  406588:	stp	xzr, xzr, [x29, #-56]
  40658c:	stur	xzr, [x29, #-64]
  406590:	bl	4090e0 <clock_supported@plt+0x4da0>
  406594:	mov	w22, w0
  406598:	tbnz	w0, #31, 406604 <clock_supported@plt+0x22c4>
  40659c:	cbz	w22, 40663c <clock_supported@plt+0x22fc>
  4065a0:	ldur	x0, [x29, #-64]
  4065a4:	sub	x1, x29, #0x20
  4065a8:	bl	409f68 <clock_supported@plt+0x5c28>
  4065ac:	ldur	x0, [x29, #-64]
  4065b0:	sub	x1, x29, #0x28
  4065b4:	bl	40a2b4 <clock_supported@plt+0x5f74>
  4065b8:	ldur	x0, [x29, #-64]
  4065bc:	sub	x1, x29, #0x30
  4065c0:	bl	40a46c <clock_supported@plt+0x612c>
  4065c4:	ldur	x0, [x29, #-64]
  4065c8:	sub	x1, x29, #0x38
  4065cc:	bl	40a564 <clock_supported@plt+0x6224>
  4065d0:	ldur	x22, [x29, #-32]
  4065d4:	cbz	x22, 406658 <clock_supported@plt+0x2318>
  4065d8:	mov	x0, x22
  4065dc:	bl	403d80 <strlen@plt>
  4065e0:	mov	x1, x0
  4065e4:	mov	w2, #0x11                  	// #17
  4065e8:	mov	w3, #0x64                  	// #100
  4065ec:	mov	x0, x22
  4065f0:	bl	403d90 <ellipsize_mem@plt>
  4065f4:	mov	x27, x0
  4065f8:	cbz	x0, 40665c <clock_supported@plt+0x231c>
  4065fc:	stur	x27, [x29, #-32]
  406600:	b	40665c <clock_supported@plt+0x231c>
  406604:	mov	w0, wzr
  406608:	bl	403b30 <log_get_max_level_realm@plt>
  40660c:	cmp	w0, #0x4
  406610:	b.lt	40663c <clock_supported@plt+0x22fc>  // b.tstop
  406614:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406618:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40661c:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  406620:	mov	w0, #0x4                   	// #4
  406624:	mov	w3, #0x674                 	// #1652
  406628:	mov	w1, w22
  40662c:	add	x2, x2, #0xef
  406630:	add	x4, x4, #0x1f6
  406634:	add	x5, x5, #0x321
  406638:	bl	403b40 <log_internal_realm@plt>
  40663c:	mov	x27, xzr
  406640:	mov	x28, xzr
  406644:	mov	x24, xzr
  406648:	mov	x25, xzr
  40664c:	mov	x22, xzr
  406650:	mov	w20, #0x11                  	// #17
  406654:	b	4067fc <clock_supported@plt+0x24bc>
  406658:	mov	x27, xzr
  40665c:	ldur	x22, [x29, #-40]
  406660:	cbz	x22, 406690 <clock_supported@plt+0x2350>
  406664:	mov	x0, x22
  406668:	bl	403d80 <strlen@plt>
  40666c:	mov	x1, x0
  406670:	mov	w2, #0x11                  	// #17
  406674:	mov	w3, #0x64                  	// #100
  406678:	mov	x0, x22
  40667c:	bl	403d90 <ellipsize_mem@plt>
  406680:	mov	x28, x0
  406684:	cbz	x0, 406694 <clock_supported@plt+0x2354>
  406688:	stur	x28, [x29, #-40]
  40668c:	b	406694 <clock_supported@plt+0x2354>
  406690:	mov	x28, xzr
  406694:	ldur	x22, [x29, #-48]
  406698:	cbz	x22, 4066c8 <clock_supported@plt+0x2388>
  40669c:	mov	x0, x22
  4066a0:	bl	403d80 <strlen@plt>
  4066a4:	mov	x1, x0
  4066a8:	mov	w2, #0x10                  	// #16
  4066ac:	mov	w3, #0x64                  	// #100
  4066b0:	mov	x0, x22
  4066b4:	bl	403d90 <ellipsize_mem@plt>
  4066b8:	mov	x24, x0
  4066bc:	cbz	x0, 4066cc <clock_supported@plt+0x238c>
  4066c0:	stur	x24, [x29, #-48]
  4066c4:	b	4066cc <clock_supported@plt+0x238c>
  4066c8:	mov	x24, xzr
  4066cc:	ldur	x22, [x29, #-56]
  4066d0:	cbz	x22, 406700 <clock_supported@plt+0x23c0>
  4066d4:	mov	x0, x22
  4066d8:	bl	403d80 <strlen@plt>
  4066dc:	mov	x1, x0
  4066e0:	mov	w2, #0x10                  	// #16
  4066e4:	mov	w3, #0x64                  	// #100
  4066e8:	mov	x0, x22
  4066ec:	bl	403d90 <ellipsize_mem@plt>
  4066f0:	mov	x25, x0
  4066f4:	cbz	x0, 406704 <clock_supported@plt+0x23c4>
  4066f8:	stur	x25, [x29, #-56]
  4066fc:	b	406704 <clock_supported@plt+0x23c4>
  406700:	mov	x25, xzr
  406704:	ldur	x0, [x29, #-64]
  406708:	sub	x1, x29, #0x44
  40670c:	bl	40a664 <clock_supported@plt+0x6324>
  406710:	tbnz	w0, #31, 406764 <clock_supported@plt+0x2424>
  406714:	ldurh	w20, [x29, #-68]
  406718:	mov	w0, #0xc                   	// #12
  40671c:	bl	403da0 <malloc@plt>
  406720:	mov	x22, x0
  406724:	cbz	x0, 406754 <clock_supported@plt+0x2414>
  406728:	mov	x8, xzr
  40672c:	lsr	w9, w20, w8
  406730:	tbz	w9, #0, 40673c <clock_supported@plt+0x23fc>
  406734:	ldrb	w9, [x19, x8]
  406738:	b	406740 <clock_supported@plt+0x2400>
  40673c:	mov	w9, #0x2e                  	// #46
  406740:	strb	w9, [x22, x8]
  406744:	add	x8, x8, #0x1
  406748:	cmp	x8, #0xb
  40674c:	b.ne	40672c <clock_supported@plt+0x23ec>  // b.any
  406750:	strb	wzr, [x22, #11]
  406754:	ldr	w8, [sp, #64]
  406758:	orr	w8, w20, w8
  40675c:	str	w8, [sp, #64]
  406760:	b	406768 <clock_supported@plt+0x2428>
  406764:	mov	x22, xzr
  406768:	ldp	x11, x9, [x29, #-40]
  40676c:	ldp	x12, x10, [x29, #-56]
  406770:	ldur	x8, [x29, #-16]
  406774:	mov	w13, #0x1c8                 	// #456
  406778:	cmp	x9, #0x0
  40677c:	csel	x4, x21, x9, eq  // eq = none
  406780:	cmp	x10, #0x0
  406784:	csel	x6, x21, x10, eq  // eq = none
  406788:	cmp	x22, #0x0
  40678c:	madd	x2, x23, x13, x8
  406790:	csel	x8, x21, x22, eq  // eq = none
  406794:	cmp	x11, #0x0
  406798:	ldr	x0, [sp, #56]
  40679c:	csel	x9, x21, x11, eq  // eq = none
  4067a0:	cmp	x12, #0x0
  4067a4:	csel	x10, x21, x12, eq  // eq = none
  4067a8:	mov	w11, #0x18                  	// #24
  4067ac:	str	x10, [sp, #32]
  4067b0:	mov	w10, #0x1                   	// #1
  4067b4:	mov	w1, #0x1                   	// #1
  4067b8:	mov	w3, #0x1                   	// #1
  4067bc:	mov	w5, #0x1                   	// #1
  4067c0:	mov	w7, #0x1                   	// #1
  4067c4:	str	w11, [sp, #40]
  4067c8:	str	w10, [sp, #24]
  4067cc:	str	x9, [sp, #16]
  4067d0:	str	w10, [sp, #8]
  4067d4:	str	x8, [sp]
  4067d8:	bl	403b10 <table_add_many_internal@plt>
  4067dc:	ldr	w9, [sp, #72]
  4067e0:	mvn	w8, w0
  4067e4:	cmp	w0, #0x0
  4067e8:	lsr	w20, w0, #31
  4067ec:	add	w9, w9, w8, lsr #31
  4067f0:	ldr	w8, [sp, #68]
  4067f4:	csel	w8, w0, w8, lt  // lt = tstop
  4067f8:	stp	w8, w9, [sp, #68]
  4067fc:	ldur	x0, [x29, #-64]
  406800:	cbz	x0, 406808 <clock_supported@plt+0x24c8>
  406804:	bl	4093f0 <clock_supported@plt+0x50b0>
  406808:	mov	x0, x22
  40680c:	bl	4039b0 <free@plt>
  406810:	mov	x0, x25
  406814:	bl	4039b0 <free@plt>
  406818:	mov	x0, x24
  40681c:	bl	4039b0 <free@plt>
  406820:	mov	x0, x28
  406824:	bl	4039b0 <free@plt>
  406828:	mov	x0, x27
  40682c:	bl	4039b0 <free@plt>
  406830:	cbz	w20, 40657c <clock_supported@plt+0x223c>
  406834:	cmp	w20, #0x11
  406838:	b.ne	406900 <clock_supported@plt+0x25c0>  // b.any
  40683c:	ldr	x20, [sp, #48]
  406840:	b	40688c <clock_supported@plt+0x254c>
  406844:	mov	w0, wzr
  406848:	bl	403b30 <log_get_max_level_realm@plt>
  40684c:	cmp	w0, #0x4
  406850:	b.lt	40688c <clock_supported@plt+0x254c>  // b.tstop
  406854:	ldur	x8, [x29, #-16]
  406858:	mov	w9, #0x1c8                 	// #456
  40685c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406860:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  406864:	madd	x8, x23, x9, x8
  406868:	ldr	w6, [x8, #96]
  40686c:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  406870:	mov	w0, #0x4                   	// #4
  406874:	mov	w3, #0x668                 	// #1640
  406878:	mov	w1, w22
  40687c:	add	x2, x2, #0xef
  406880:	add	x4, x4, #0x1f6
  406884:	add	x5, x5, #0x2f3
  406888:	bl	403b40 <log_internal_realm@plt>
  40688c:	ldur	x0, [x29, #-24]
  406890:	bl	403d40 <safe_fclose@plt>
  406894:	add	x23, x23, #0x1
  406898:	cmp	x23, x20
  40689c:	b.ne	40654c <clock_supported@plt+0x220c>  // b.any
  4068a0:	b	40691c <clock_supported@plt+0x25dc>
  4068a4:	mov	w19, w0
  4068a8:	mov	w0, wzr
  4068ac:	bl	403b30 <log_get_max_level_realm@plt>
  4068b0:	cmp	w0, #0x3
  4068b4:	b.lt	4068e8 <clock_supported@plt+0x25a8>  // b.tstop
  4068b8:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4068bc:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4068c0:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  4068c4:	add	x2, x2, #0xef
  4068c8:	add	x4, x4, #0x1f6
  4068cc:	add	x5, x5, #0x53f
  4068d0:	mov	w0, #0x3                   	// #3
  4068d4:	mov	w3, #0x63c                 	// #1596
  4068d8:	mov	w1, w19
  4068dc:	bl	403b40 <log_internal_realm@plt>
  4068e0:	mov	w24, w0
  4068e4:	b	406a28 <clock_supported@plt+0x26e8>
  4068e8:	mov	w8, wzr
  4068ec:	neg	w9, w19
  4068f0:	sub	w24, w8, w9, uxtb
  4068f4:	b	406a28 <clock_supported@plt+0x26e8>
  4068f8:	mov	w24, #0xfffffff4            	// #-12
  4068fc:	b	406a28 <clock_supported@plt+0x26e8>
  406900:	mov	x0, x26
  406904:	bl	403d40 <safe_fclose@plt>
  406908:	ldr	x21, [sp, #56]
  40690c:	ldr	w24, [sp, #68]
  406910:	b	406a20 <clock_supported@plt+0x26e0>
  406914:	str	wzr, [sp, #64]
  406918:	str	wzr, [sp, #72]
  40691c:	ldr	x21, [sp, #56]
  406920:	mov	x1, xzr
  406924:	mov	x0, x21
  406928:	bl	403b20 <table_print@plt>
  40692c:	tbnz	w0, #31, 406a1c <clock_supported@plt+0x26dc>
  406930:	adrp	x8, 420000 <__bss_start@@Base>
  406934:	ldrb	w8, [x8, #8]
  406938:	tbnz	w8, #0, 406a14 <clock_supported@plt+0x26d4>
  40693c:	bl	403db0 <columns@plt>
  406940:	ldr	w8, [sp, #64]
  406944:	ands	w19, w8, #0xffff
  406948:	b.eq	406a04 <clock_supported@plt+0x26c4>  // b.none
  40694c:	mov	w20, w0
  406950:	adrp	x0, 40c000 <clock_supported@plt+0x7cc0>
  406954:	add	x0, x0, #0x679
  406958:	bl	403dc0 <puts@plt>
  40695c:	mov	w23, w20
  406960:	adrp	x26, 40b000 <clock_supported@plt+0x6cc0>
  406964:	adrp	x27, 40c000 <clock_supported@plt+0x7cc0>
  406968:	adrp	x28, 40c000 <clock_supported@plt+0x7cc0>
  40696c:	adrp	x20, 40c000 <clock_supported@plt+0x7cc0>
  406970:	mov	x21, xzr
  406974:	mov	w24, wzr
  406978:	add	x26, x26, #0x497
  40697c:	add	x27, x27, #0x416
  406980:	add	x28, x28, #0x418
  406984:	add	x20, x20, #0x40f
  406988:	lsr	w8, w19, w21
  40698c:	tbnz	w8, #0, 4069a0 <clock_supported@plt+0x2660>
  406990:	adrp	x8, 420000 <__bss_start@@Base>
  406994:	ldrb	w8, [x8, #9]
  406998:	cmp	w8, #0x1
  40699c:	b.ne	4069ec <clock_supported@plt+0x26ac>  // b.any
  4069a0:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  4069a4:	add	x8, x8, #0x60
  4069a8:	ldr	x22, [x8, x21, lsl #3]
  4069ac:	cmp	w24, #0x0
  4069b0:	cset	w25, ne  // ne = any
  4069b4:	mov	x0, x22
  4069b8:	bl	403d80 <strlen@plt>
  4069bc:	lsl	x8, x25, #1
  4069c0:	add	x8, x8, w24, uxtw
  4069c4:	add	x8, x8, x0
  4069c8:	cmp	x8, x23
  4069cc:	csel	w24, wzr, w24, hi  // hi = pmore
  4069d0:	csel	x1, x27, x26, hi  // hi = pmore
  4069d4:	cmp	w24, #0x0
  4069d8:	csel	x2, x26, x28, eq  // eq = none
  4069dc:	mov	x0, x20
  4069e0:	mov	x3, x22
  4069e4:	bl	403990 <printf@plt>
  4069e8:	add	w24, w24, w0
  4069ec:	add	x21, x21, #0x1
  4069f0:	cmp	x21, #0xb
  4069f4:	b.ne	406988 <clock_supported@plt+0x2648>  // b.any
  4069f8:	mov	w0, #0xa                   	// #10
  4069fc:	bl	403dd0 <putchar@plt>
  406a00:	ldr	x21, [sp, #56]
  406a04:	ldr	w1, [sp, #72]
  406a08:	adrp	x0, 40c000 <clock_supported@plt+0x7cc0>
  406a0c:	add	x0, x0, #0x342
  406a10:	bl	403990 <printf@plt>
  406a14:	mov	w24, wzr
  406a18:	b	406a20 <clock_supported@plt+0x26e0>
  406a1c:	mov	w24, w0
  406a20:	mov	x0, x21
  406a24:	bl	403b50 <table_unref@plt>
  406a28:	ldur	x19, [x29, #-16]
  406a2c:	cbz	x19, 406a74 <clock_supported@plt+0x2734>
  406a30:	ldrb	w8, [x19, #455]
  406a34:	tbz	w8, #0, 406a6c <clock_supported@plt+0x272c>
  406a38:	mov	x8, xzr
  406a3c:	mov	w20, #0x1                   	// #1
  406a40:	mov	w21, #0x1c8                 	// #456
  406a44:	madd	x22, x8, x21, x19
  406a48:	ldr	x0, [x22, #88]
  406a4c:	bl	403b60 <sd_device_unref@plt>
  406a50:	ldr	x0, [x22, #440]
  406a54:	bl	4039b0 <free@plt>
  406a58:	umaddl	x8, w20, w21, x19
  406a5c:	ldrb	w9, [x8, #455]
  406a60:	mov	w8, w20
  406a64:	add	w20, w20, #0x1
  406a68:	tbnz	w9, #0, 406a44 <clock_supported@plt+0x2704>
  406a6c:	mov	x0, x19
  406a70:	bl	4039b0 <free@plt>
  406a74:	ldur	x0, [x29, #-8]
  406a78:	cbz	x0, 406a80 <clock_supported@plt+0x2740>
  406a7c:	bl	403b70 <sd_netlink_unref@plt>
  406a80:	mov	w0, w24
  406a84:	ldp	x20, x19, [sp, #224]
  406a88:	ldp	x22, x21, [sp, #208]
  406a8c:	ldp	x24, x23, [sp, #192]
  406a90:	ldp	x26, x25, [sp, #176]
  406a94:	ldp	x28, x27, [sp, #160]
  406a98:	ldp	x29, x30, [sp, #144]
  406a9c:	add	sp, sp, #0xf0
  406aa0:	ret
  406aa4:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  406aa8:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406aac:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  406ab0:	add	x1, x1, #0x580
  406ab4:	add	x2, x2, #0xef
  406ab8:	add	x4, x4, #0x23c
  406abc:	mov	w3, #0x64f                 	// #1615
  406ac0:	bl	403a30 <log_assert_failed_realm@plt>
  406ac4:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  406ac8:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406acc:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  406ad0:	add	x1, x1, #0x5c8
  406ad4:	add	x2, x2, #0xef
  406ad8:	add	x4, x4, #0x23c
  406adc:	mov	w3, #0x652                 	// #1618
  406ae0:	bl	403a30 <log_assert_failed_realm@plt>
  406ae4:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  406ae8:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406aec:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  406af0:	add	x1, x1, #0x267
  406af4:	add	x2, x2, #0xef
  406af8:	add	x4, x4, #0x23c
  406afc:	mov	w3, #0x655                 	// #1621
  406b00:	bl	403a30 <log_assert_failed_realm@plt>
  406b04:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  406b08:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406b0c:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  406b10:	add	x1, x1, #0x28a
  406b14:	add	x2, x2, #0xef
  406b18:	add	x4, x4, #0x23c
  406b1c:	mov	w3, #0x658                 	// #1624
  406b20:	bl	403a30 <log_assert_failed_realm@plt>
  406b24:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  406b28:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406b2c:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  406b30:	add	x1, x1, #0x2ad
  406b34:	add	x2, x2, #0xef
  406b38:	add	x4, x4, #0x23c
  406b3c:	mov	w3, #0x65b                 	// #1627
  406b40:	bl	403a30 <log_assert_failed_realm@plt>
  406b44:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  406b48:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406b4c:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  406b50:	add	x1, x1, #0x2d0
  406b54:	add	x2, x2, #0xef
  406b58:	add	x4, x4, #0x23c
  406b5c:	mov	w3, #0x65e                 	// #1630
  406b60:	bl	403a30 <log_assert_failed_realm@plt>
  406b64:	sub	sp, sp, #0xa0
  406b68:	add	x0, sp, #0x10
  406b6c:	stp	x29, x30, [sp, #64]
  406b70:	str	x27, [sp, #80]
  406b74:	stp	x26, x25, [sp, #96]
  406b78:	stp	x24, x23, [sp, #112]
  406b7c:	stp	x22, x21, [sp, #128]
  406b80:	stp	x20, x19, [sp, #144]
  406b84:	add	x29, sp, #0x40
  406b88:	str	xzr, [sp, #16]
  406b8c:	bl	403a50 <sd_netlink_open@plt>
  406b90:	tbnz	w0, #31, 406df8 <clock_supported@plt+0x2ab8>
  406b94:	ldr	x19, [sp, #16]
  406b98:	str	xzr, [x29, #24]
  406b9c:	stur	xzr, [x29, #-8]
  406ba0:	cbz	x19, 406eec <clock_supported@plt+0x2bac>
  406ba4:	add	x1, x29, #0x18
  406ba8:	mov	w2, #0x4a                  	// #74
  406bac:	mov	w4, #0xa                   	// #10
  406bb0:	mov	x0, x19
  406bb4:	mov	w3, wzr
  406bb8:	bl	403de0 <sd_rtnl_message_new_addrlabel@plt>
  406bbc:	tbnz	w0, #31, 406e3c <clock_supported@plt+0x2afc>
  406bc0:	ldr	x0, [x29, #24]
  406bc4:	mov	w1, #0x1                   	// #1
  406bc8:	bl	403df0 <sd_netlink_message_request_dump@plt>
  406bcc:	tbnz	w0, #31, 406ea0 <clock_supported@plt+0x2b60>
  406bd0:	ldr	x1, [x29, #24]
  406bd4:	sub	x3, x29, #0x8
  406bd8:	mov	x0, x19
  406bdc:	mov	x2, xzr
  406be0:	bl	403e00 <sd_netlink_call@plt>
  406be4:	tbnz	w0, #31, 406ea0 <clock_supported@plt+0x2b60>
  406be8:	adrp	x0, 40b000 <clock_supported@plt+0x6cc0>
  406bec:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  406bf0:	add	x0, x0, #0x50e
  406bf4:	add	x1, x1, #0x499
  406bf8:	mov	x2, xzr
  406bfc:	bl	403a70 <table_new_internal@plt>
  406c00:	cbz	x0, 406ea0 <clock_supported@plt+0x2b60>
  406c04:	mov	x2, #0xffffffffffffffff    	// #-1
  406c08:	mov	x1, xzr
  406c0c:	mov	x19, x0
  406c10:	bl	403e10 <table_set_sort@plt>
  406c14:	tbnz	w0, #31, 406e98 <clock_supported@plt+0x2b58>
  406c18:	mov	x0, x19
  406c1c:	mov	x1, xzr
  406c20:	mov	x2, xzr
  406c24:	bl	403a90 <table_get_cell@plt>
  406c28:	cbz	x0, 406f10 <clock_supported@plt+0x2bd0>
  406c2c:	mov	x20, x0
  406c30:	mov	w2, #0x64                  	// #100
  406c34:	mov	x0, x19
  406c38:	mov	x1, x20
  406c3c:	bl	403ad0 <table_set_align_percent@plt>
  406c40:	mov	w2, #0x64                  	// #100
  406c44:	mov	x0, x19
  406c48:	mov	x1, x20
  406c4c:	bl	403ac0 <table_set_ellipsize_percent@plt>
  406c50:	mov	w2, #0x1                   	// #1
  406c54:	mov	x0, x19
  406c58:	mov	x1, xzr
  406c5c:	bl	403a90 <table_get_cell@plt>
  406c60:	cbz	x0, 406f30 <clock_supported@plt+0x2bf0>
  406c64:	mov	x1, x0
  406c68:	mov	w2, #0x64                  	// #100
  406c6c:	mov	x0, x19
  406c70:	bl	403ad0 <table_set_align_percent@plt>
  406c74:	ldur	x20, [x29, #-8]
  406c78:	cbz	x20, 406e8c <clock_supported@plt+0x2b4c>
  406c7c:	adrp	x21, 40b000 <clock_supported@plt+0x6cc0>
  406c80:	adrp	x22, 40c000 <clock_supported@plt+0x7cc0>
  406c84:	adrp	x23, 40b000 <clock_supported@plt+0x6cc0>
  406c88:	adrp	x24, 40c000 <clock_supported@plt+0x7cc0>
  406c8c:	adrp	x25, 40c000 <clock_supported@plt+0x7cc0>
  406c90:	add	x21, x21, #0xef
  406c94:	add	x22, x22, #0x455
  406c98:	add	x23, x23, #0xca4
  406c9c:	add	x24, x24, #0x4aa
  406ca0:	mov	w27, #0xffffffff            	// #-1
  406ca4:	add	x25, x25, #0x4d2
  406ca8:	mov	x0, x20
  406cac:	stur	xzr, [x29, #-16]
  406cb0:	stp	xzr, xzr, [sp, #32]
  406cb4:	bl	403e20 <sd_netlink_message_get_errno@plt>
  406cb8:	tbnz	w0, #31, 406d08 <clock_supported@plt+0x29c8>
  406cbc:	add	x2, sp, #0x18
  406cc0:	mov	w1, #0x2                   	// #2
  406cc4:	mov	x0, x20
  406cc8:	bl	403e30 <sd_netlink_message_read_u32@plt>
  406ccc:	tbz	w0, #31, 406d3c <clock_supported@plt+0x29fc>
  406cd0:	mov	w26, w0
  406cd4:	cmn	w0, #0x3d
  406cd8:	b.eq	406d3c <clock_supported@plt+0x29fc>  // b.none
  406cdc:	mov	w0, wzr
  406ce0:	bl	403b30 <log_get_max_level_realm@plt>
  406ce4:	cmp	w0, #0x3
  406ce8:	b.lt	406dc4 <clock_supported@plt+0x2a84>  // b.tstop
  406cec:	mov	w0, #0x3                   	// #3
  406cf0:	mov	w3, #0x348                 	// #840
  406cf4:	mov	w1, w26
  406cf8:	mov	x2, x21
  406cfc:	mov	x4, x22
  406d00:	mov	x5, x24
  406d04:	b	406d34 <clock_supported@plt+0x29f4>
  406d08:	mov	w26, w0
  406d0c:	mov	w0, wzr
  406d10:	bl	403b30 <log_get_max_level_realm@plt>
  406d14:	cmp	w0, #0x3
  406d18:	b.lt	406dc4 <clock_supported@plt+0x2a84>  // b.tstop
  406d1c:	mov	w0, #0x3                   	// #3
  406d20:	mov	w3, #0x342                 	// #834
  406d24:	mov	w1, w26
  406d28:	mov	x2, x21
  406d2c:	mov	x4, x22
  406d30:	mov	x5, x23
  406d34:	bl	403b40 <log_internal_realm@plt>
  406d38:	b	406dc4 <clock_supported@plt+0x2a84>
  406d3c:	add	x2, sp, #0x20
  406d40:	mov	w1, #0x1                   	// #1
  406d44:	mov	x0, x20
  406d48:	bl	403e40 <sd_netlink_message_read_in6_addr@plt>
  406d4c:	tbnz	w0, #31, 406dc4 <clock_supported@plt+0x2a84>
  406d50:	add	x1, sp, #0x20
  406d54:	sub	x2, x29, #0x10
  406d58:	mov	w0, #0xa                   	// #10
  406d5c:	mov	w26, #0xa                   	// #10
  406d60:	bl	403e50 <in_addr_to_string@plt>
  406d64:	tbnz	w0, #31, 406dc8 <clock_supported@plt+0x2a88>
  406d68:	add	x1, sp, #0x1c
  406d6c:	mov	x0, x20
  406d70:	bl	403e60 <sd_rtnl_message_addrlabel_get_prefixlen@plt>
  406d74:	tbnz	w0, #31, 406dc4 <clock_supported@plt+0x2a84>
  406d78:	add	x3, sp, #0x18
  406d7c:	mov	w2, #0x12                  	// #18
  406d80:	mov	x4, #0xffffffffffffffff    	// #-1
  406d84:	mov	x5, #0xffffffffffffffff    	// #-1
  406d88:	mov	w6, #0xffffffff            	// #-1
  406d8c:	mov	w7, #0xffffffff            	// #-1
  406d90:	mov	x0, x19
  406d94:	mov	x1, xzr
  406d98:	str	w27, [sp]
  406d9c:	bl	403d50 <table_add_cell_full@plt>
  406da0:	tbnz	w0, #31, 406df0 <clock_supported@plt+0x2ab0>
  406da4:	ldur	x3, [x29, #-16]
  406da8:	ldrb	w4, [sp, #28]
  406dac:	mov	x0, x19
  406db0:	mov	x1, xzr
  406db4:	mov	x2, x25
  406db8:	bl	403ca0 <table_add_cell_stringf@plt>
  406dbc:	lsr	w26, w0, #31
  406dc0:	b	406dc8 <clock_supported@plt+0x2a88>
  406dc4:	mov	w26, #0xa                   	// #10
  406dc8:	ldur	x0, [x29, #-16]
  406dcc:	bl	4039b0 <free@plt>
  406dd0:	cmp	w26, #0xa
  406dd4:	b.eq	406ddc <clock_supported@plt+0x2a9c>  // b.none
  406dd8:	cbnz	w26, 406e98 <clock_supported@plt+0x2b58>
  406ddc:	mov	x0, x20
  406de0:	bl	403e70 <sd_netlink_message_next@plt>
  406de4:	mov	x20, x0
  406de8:	cbnz	x0, 406ca8 <clock_supported@plt+0x2968>
  406dec:	b	406e8c <clock_supported@plt+0x2b4c>
  406df0:	mov	w26, #0x1                   	// #1
  406df4:	b	406dc8 <clock_supported@plt+0x2a88>
  406df8:	mov	w19, w0
  406dfc:	mov	w0, wzr
  406e00:	bl	403b30 <log_get_max_level_realm@plt>
  406e04:	cmp	w0, #0x3
  406e08:	b.lt	406e7c <clock_supported@plt+0x2b3c>  // b.tstop
  406e0c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406e10:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  406e14:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  406e18:	add	x2, x2, #0xef
  406e1c:	add	x4, x4, #0x41b
  406e20:	add	x5, x5, #0x53f
  406e24:	mov	w0, #0x3                   	// #3
  406e28:	mov	w3, #0x36a                 	// #874
  406e2c:	mov	w1, w19
  406e30:	bl	403b40 <log_internal_realm@plt>
  406e34:	mov	w19, w0
  406e38:	b	406ebc <clock_supported@plt+0x2b7c>
  406e3c:	mov	w20, w0
  406e40:	mov	w0, wzr
  406e44:	bl	403b30 <log_get_max_level_realm@plt>
  406e48:	cmp	w0, #0x3
  406e4c:	b.lt	406ea0 <clock_supported@plt+0x2b60>  // b.tstop
  406e50:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406e54:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  406e58:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  406e5c:	add	x2, x2, #0xef
  406e60:	add	x4, x4, #0x455
  406e64:	add	x5, x5, #0x469
  406e68:	mov	w0, #0x3                   	// #3
  406e6c:	mov	w3, #0x321                 	// #801
  406e70:	mov	w1, w20
  406e74:	bl	403b40 <log_internal_realm@plt>
  406e78:	b	406ea0 <clock_supported@plt+0x2b60>
  406e7c:	mov	w8, wzr
  406e80:	neg	w9, w19
  406e84:	sub	w19, w8, w9, uxtb
  406e88:	b	406ebc <clock_supported@plt+0x2b7c>
  406e8c:	mov	x0, x19
  406e90:	mov	x1, xzr
  406e94:	bl	403b20 <table_print@plt>
  406e98:	mov	x0, x19
  406e9c:	bl	403b50 <table_unref@plt>
  406ea0:	ldur	x0, [x29, #-8]
  406ea4:	cbz	x0, 406eac <clock_supported@plt+0x2b6c>
  406ea8:	bl	403e80 <sd_netlink_message_unref@plt>
  406eac:	ldr	x0, [x29, #24]
  406eb0:	cbz	x0, 406eb8 <clock_supported@plt+0x2b78>
  406eb4:	bl	403e80 <sd_netlink_message_unref@plt>
  406eb8:	mov	w19, wzr
  406ebc:	ldr	x0, [sp, #16]
  406ec0:	cbz	x0, 406ec8 <clock_supported@plt+0x2b88>
  406ec4:	bl	403b70 <sd_netlink_unref@plt>
  406ec8:	mov	w0, w19
  406ecc:	ldp	x20, x19, [sp, #144]
  406ed0:	ldp	x22, x21, [sp, #128]
  406ed4:	ldp	x24, x23, [sp, #112]
  406ed8:	ldp	x26, x25, [sp, #96]
  406edc:	ldr	x27, [sp, #80]
  406ee0:	ldp	x29, x30, [sp, #64]
  406ee4:	add	sp, sp, #0xa0
  406ee8:	ret
  406eec:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  406ef0:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406ef4:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  406ef8:	add	x1, x1, #0x622
  406efc:	add	x2, x2, #0xef
  406f00:	add	x4, x4, #0x42f
  406f04:	mov	w3, #0x31d                 	// #797
  406f08:	mov	w0, wzr
  406f0c:	bl	403a30 <log_assert_failed_realm@plt>
  406f10:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  406f14:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406f18:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  406f1c:	add	x1, x1, #0x580
  406f20:	add	x2, x2, #0xef
  406f24:	add	x4, x4, #0x42f
  406f28:	mov	w3, #0x333                 	// #819
  406f2c:	bl	403a30 <log_assert_failed_realm@plt>
  406f30:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  406f34:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  406f38:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  406f3c:	add	x1, x1, #0x5c8
  406f40:	add	x2, x2, #0xef
  406f44:	add	x4, x4, #0x42f
  406f48:	mov	w3, #0x337                 	// #823
  406f4c:	bl	403a30 <log_assert_failed_realm@plt>
  406f50:	sub	sp, sp, #0x80
  406f54:	stp	x29, x30, [sp, #64]
  406f58:	add	x29, sp, #0x40
  406f5c:	stp	x22, x21, [sp, #96]
  406f60:	mov	w22, w0
  406f64:	add	x0, x29, #0x18
  406f68:	str	x23, [sp, #80]
  406f6c:	stp	x20, x19, [sp, #112]
  406f70:	mov	x21, x1
  406f74:	str	xzr, [x29, #24]
  406f78:	bl	403a50 <sd_netlink_open@plt>
  406f7c:	mov	w20, w0
  406f80:	tbnz	w0, #31, 407098 <clock_supported@plt+0x2d58>
  406f84:	mov	x0, xzr
  406f88:	bl	403e90 <internal_set_new@plt>
  406f8c:	mov	x19, x0
  406f90:	cbz	x0, 4070e0 <clock_supported@plt+0x2da0>
  406f94:	cmp	w22, #0x2
  406f98:	b.lt	406fd4 <clock_supported@plt+0x2c94>  // b.tstop
  406f9c:	mov	w23, w22
  406fa0:	mov	w22, #0x1                   	// #1
  406fa4:	ldr	x0, [x21, x22, lsl #3]
  406fa8:	sub	x1, x29, #0x4
  406fac:	bl	403ea0 <parse_ifindex_or_ifname@plt>
  406fb0:	tbnz	w0, #31, 407104 <clock_supported@plt+0x2dc4>
  406fb4:	ldursw	x1, [x29, #-4]
  406fb8:	mov	x0, x19
  406fbc:	bl	403eb0 <set_put@plt>
  406fc0:	tbnz	w0, #31, 407190 <clock_supported@plt+0x2e50>
  406fc4:	add	x22, x22, #0x1
  406fc8:	mov	w20, w0
  406fcc:	cmp	x23, x22
  406fd0:	b.ne	406fa4 <clock_supported@plt+0x2c64>  // b.any
  406fd4:	mov	w8, #0xfffffffe            	// #-2
  406fd8:	stur	w8, [x29, #-24]
  406fdc:	stur	xzr, [x29, #-16]
  406fe0:	sub	x1, x29, #0x18
  406fe4:	add	x2, sp, #0x20
  406fe8:	mov	x0, x19
  406fec:	bl	403ec0 <set_iterate@plt>
  406ff0:	tbz	w0, #0, 407154 <clock_supported@plt+0x2e14>
  406ff4:	ldr	w3, [sp, #32]
  406ff8:	ldr	x20, [x29, #24]
  406ffc:	str	xzr, [sp, #8]
  407000:	stur	w3, [x29, #-4]
  407004:	cbz	x20, 4071b8 <clock_supported@plt+0x2e78>
  407008:	add	x1, sp, #0x8
  40700c:	mov	w2, #0x11                  	// #17
  407010:	mov	x0, x20
  407014:	bl	403ed0 <sd_rtnl_message_new_link@plt>
  407018:	tbnz	w0, #31, 407038 <clock_supported@plt+0x2cf8>
  40701c:	ldr	x1, [sp, #8]
  407020:	mov	x0, x20
  407024:	mov	x2, xzr
  407028:	mov	x3, xzr
  40702c:	bl	403e00 <sd_netlink_call@plt>
  407030:	and	w20, w0, w0, asr #31
  407034:	b	407040 <clock_supported@plt+0x2d00>
  407038:	bl	403ee0 <rtnl_log_create_error@plt>
  40703c:	mov	w20, w0
  407040:	ldr	x0, [sp, #8]
  407044:	cbz	x0, 40704c <clock_supported@plt+0x2d0c>
  407048:	bl	403e80 <sd_netlink_message_unref@plt>
  40704c:	tbz	w20, #31, 406fe0 <clock_supported@plt+0x2ca0>
  407050:	mov	w0, wzr
  407054:	bl	403b30 <log_get_max_level_realm@plt>
  407058:	cmp	w0, #0x3
  40705c:	b.lt	407148 <clock_supported@plt+0x2e08>  // b.tstop
  407060:	ldur	w0, [x29, #-4]
  407064:	add	x1, sp, #0x8
  407068:	mov	w2, #0x1                   	// #1
  40706c:	bl	403ef0 <format_ifname_full@plt>
  407070:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  407074:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  407078:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  40707c:	mov	x6, x0
  407080:	add	x2, x2, #0xef
  407084:	add	x4, x4, #0x4d8
  407088:	add	x5, x5, #0x503
  40708c:	mov	w0, #0x3                   	// #3
  407090:	mov	w3, #0x6e7                 	// #1767
  407094:	b	40713c <clock_supported@plt+0x2dfc>
  407098:	mov	w0, wzr
  40709c:	bl	403b30 <log_get_max_level_realm@plt>
  4070a0:	cmp	w0, #0x3
  4070a4:	b.lt	4070f8 <clock_supported@plt+0x2db8>  // b.tstop
  4070a8:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4070ac:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4070b0:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  4070b4:	add	x2, x2, #0xef
  4070b8:	add	x4, x4, #0x4d8
  4070bc:	add	x5, x5, #0x53f
  4070c0:	mov	w0, #0x3                   	// #3
  4070c4:	mov	w3, #0x6d0                 	// #1744
  4070c8:	mov	w1, w20
  4070cc:	bl	403b40 <log_internal_realm@plt>
  4070d0:	mov	w20, w0
  4070d4:	mov	x19, xzr
  4070d8:	cbnz	x19, 407158 <clock_supported@plt+0x2e18>
  4070dc:	b	407168 <clock_supported@plt+0x2e28>
  4070e0:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  4070e4:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  4070e8:	add	x1, x1, #0xef
  4070ec:	add	x3, x3, #0x4d8
  4070f0:	mov	w2, #0x6d4                 	// #1748
  4070f4:	b	4071a8 <clock_supported@plt+0x2e68>
  4070f8:	mov	w8, wzr
  4070fc:	mov	x19, xzr
  407100:	b	40714c <clock_supported@plt+0x2e0c>
  407104:	mov	w20, w0
  407108:	mov	w0, wzr
  40710c:	bl	403b30 <log_get_max_level_realm@plt>
  407110:	cmp	w0, #0x3
  407114:	b.lt	407148 <clock_supported@plt+0x2e08>  // b.tstop
  407118:	ldr	x6, [x21, w22, uxtw #3]
  40711c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  407120:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  407124:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  407128:	add	x2, x2, #0xef
  40712c:	add	x4, x4, #0x4d8
  407130:	add	x5, x5, #0x4e4
  407134:	mov	w0, #0x3                   	// #3
  407138:	mov	w3, #0x6d9                 	// #1753
  40713c:	mov	w1, w20
  407140:	bl	403b40 <log_internal_realm@plt>
  407144:	b	4071ac <clock_supported@plt+0x2e6c>
  407148:	mov	w8, wzr
  40714c:	neg	w9, w20
  407150:	sub	w20, w8, w9, uxtb
  407154:	cbz	x19, 407168 <clock_supported@plt+0x2e28>
  407158:	mov	x0, x19
  40715c:	mov	x1, xzr
  407160:	mov	x2, xzr
  407164:	bl	403f00 <internal_hashmap_free@plt>
  407168:	ldr	x0, [x29, #24]
  40716c:	cbz	x0, 407174 <clock_supported@plt+0x2e34>
  407170:	bl	403b70 <sd_netlink_unref@plt>
  407174:	mov	w0, w20
  407178:	ldp	x20, x19, [sp, #112]
  40717c:	ldp	x22, x21, [sp, #96]
  407180:	ldr	x23, [sp, #80]
  407184:	ldp	x29, x30, [sp, #64]
  407188:	add	sp, sp, #0x80
  40718c:	ret
  407190:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  407194:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  407198:	add	x1, x1, #0xef
  40719c:	add	x3, x3, #0x4d8
  4071a0:	mov	w2, #0x6dd                 	// #1757
  4071a4:	mov	w0, wzr
  4071a8:	bl	4039a0 <log_oom_internal@plt>
  4071ac:	mov	w20, w0
  4071b0:	cbnz	x19, 407158 <clock_supported@plt+0x2e18>
  4071b4:	b	407168 <clock_supported@plt+0x2e28>
  4071b8:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  4071bc:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4071c0:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4071c4:	add	x1, x1, #0x622
  4071c8:	add	x2, x2, #0xef
  4071cc:	add	x4, x4, #0x525
  4071d0:	mov	w3, #0x6ba                 	// #1722
  4071d4:	mov	w0, wzr
  4071d8:	bl	403a30 <log_assert_failed_realm@plt>
  4071dc:	sub	sp, sp, #0x90
  4071e0:	stp	x22, x21, [sp, #112]
  4071e4:	mov	w21, w0
  4071e8:	add	x0, sp, #0x10
  4071ec:	stp	x29, x30, [sp, #48]
  4071f0:	stp	x28, x27, [sp, #64]
  4071f4:	stp	x26, x25, [sp, #80]
  4071f8:	stp	x24, x23, [sp, #96]
  4071fc:	stp	x20, x19, [sp, #128]
  407200:	add	x29, sp, #0x30
  407204:	mov	x20, x1
  407208:	str	xzr, [sp, #16]
  40720c:	bl	403b80 <sd_bus_open_system@plt>
  407210:	tbnz	w0, #31, 407330 <clock_supported@plt+0x2ff0>
  407214:	cmp	w21, #0x2
  407218:	b.lt	407370 <clock_supported@plt+0x3030>  // b.tstop
  40721c:	mov	w8, w21
  407220:	adrp	x21, 40c000 <clock_supported@plt+0x7cc0>
  407224:	adrp	x22, 40c000 <clock_supported@plt+0x7cc0>
  407228:	adrp	x23, 40c000 <clock_supported@plt+0x7cc0>
  40722c:	adrp	x24, 40c000 <clock_supported@plt+0x7cc0>
  407230:	mov	w19, wzr
  407234:	add	x26, x20, #0x8
  407238:	add	x21, x21, #0x560
  40723c:	add	x22, x22, #0x57a
  407240:	add	x23, x23, #0x59b
  407244:	add	x24, x24, #0x5a5
  407248:	sub	x27, x8, #0x1
  40724c:	mov	w20, #0xffffffff            	// #-1
  407250:	ldr	x0, [x26]
  407254:	add	x1, sp, #0xc
  407258:	bl	403ea0 <parse_ifindex_or_ifname@plt>
  40725c:	tbnz	w0, #31, 407384 <clock_supported@plt+0x3044>
  407260:	ldr	x0, [sp, #16]
  407264:	ldr	w8, [sp, #12]
  407268:	ldr	x28, [x26]
  40726c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  407270:	add	x5, sp, #0x18
  407274:	add	x1, x1, #0x830
  407278:	mov	x2, x21
  40727c:	mov	x3, x22
  407280:	mov	x4, x23
  407284:	mov	x6, xzr
  407288:	mov	x7, x24
  40728c:	stp	xzr, xzr, [sp, #24]
  407290:	str	xzr, [sp, #40]
  407294:	str	w8, [sp]
  407298:	bl	403f10 <sd_bus_call_method@plt>
  40729c:	tbnz	w0, #31, 4072a8 <clock_supported@plt+0x2f68>
  4072a0:	mov	w25, wzr
  4072a4:	b	40730c <clock_supported@plt+0x2fcc>
  4072a8:	mov	w25, w0
  4072ac:	mov	w0, wzr
  4072b0:	bl	403b30 <log_get_max_level_realm@plt>
  4072b4:	cmp	w0, #0x3
  4072b8:	b.lt	407300 <clock_supported@plt+0x2fc0>  // b.tstop
  4072bc:	add	x0, sp, #0x18
  4072c0:	mov	w1, w25
  4072c4:	bl	403f20 <bus_error_message@plt>
  4072c8:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4072cc:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4072d0:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  4072d4:	mov	x7, x0
  4072d8:	mov	w0, #0x3                   	// #3
  4072dc:	mov	w3, #0x6fd                 	// #1789
  4072e0:	mov	w1, w25
  4072e4:	add	x2, x2, #0xef
  4072e8:	add	x4, x4, #0x5a7
  4072ec:	add	x5, x5, #0x5b6
  4072f0:	mov	x6, x28
  4072f4:	bl	403b40 <log_internal_realm@plt>
  4072f8:	mov	w25, w0
  4072fc:	b	40730c <clock_supported@plt+0x2fcc>
  407300:	mov	w8, wzr
  407304:	neg	w9, w25
  407308:	sub	w25, w8, w9, uxtb
  40730c:	add	x0, sp, #0x18
  407310:	bl	403f30 <sd_bus_error_free@plt>
  407314:	cmp	w25, #0x0
  407318:	ccmp	w19, w20, #0x4, lt  // lt = tstop
  40731c:	csel	w19, w25, w19, gt
  407320:	subs	x27, x27, #0x1
  407324:	add	x26, x26, #0x8
  407328:	b.ne	407250 <clock_supported@plt+0x2f10>  // b.any
  40732c:	b	4073d8 <clock_supported@plt+0x3098>
  407330:	mov	w19, w0
  407334:	mov	w0, wzr
  407338:	bl	403b30 <log_get_max_level_realm@plt>
  40733c:	cmp	w0, #0x3
  407340:	b.lt	407378 <clock_supported@plt+0x3038>  // b.tstop
  407344:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  407348:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40734c:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  407350:	add	x2, x2, #0xef
  407354:	add	x4, x4, #0x555
  407358:	add	x5, x5, #0xa72
  40735c:	mov	w0, #0x3                   	// #3
  407360:	mov	w3, #0x708                 	// #1800
  407364:	mov	w1, w19
  407368:	bl	403b40 <log_internal_realm@plt>
  40736c:	b	4073c4 <clock_supported@plt+0x3084>
  407370:	mov	w19, wzr
  407374:	b	4073d8 <clock_supported@plt+0x3098>
  407378:	mov	w8, wzr
  40737c:	neg	w9, w19
  407380:	b	4073d4 <clock_supported@plt+0x3094>
  407384:	mov	w28, w0
  407388:	mov	w0, wzr
  40738c:	bl	403b30 <log_get_max_level_realm@plt>
  407390:	cmp	w0, #0x3
  407394:	b.lt	4073cc <clock_supported@plt+0x308c>  // b.tstop
  407398:	ldr	x6, [x26]
  40739c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4073a0:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4073a4:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  4073a8:	add	x2, x2, #0xef
  4073ac:	add	x4, x4, #0x555
  4073b0:	add	x5, x5, #0x4e4
  4073b4:	mov	w0, #0x3                   	// #3
  4073b8:	mov	w3, #0x70d                 	// #1805
  4073bc:	mov	w1, w28
  4073c0:	bl	403b40 <log_internal_realm@plt>
  4073c4:	mov	w19, w0
  4073c8:	b	4073d8 <clock_supported@plt+0x3098>
  4073cc:	mov	w8, wzr
  4073d0:	neg	w9, w28
  4073d4:	sub	w19, w8, w9, uxtb
  4073d8:	ldr	x0, [sp, #16]
  4073dc:	cbz	x0, 4073e4 <clock_supported@plt+0x30a4>
  4073e0:	bl	403d70 <sd_bus_flush_close_unref@plt>
  4073e4:	mov	w0, w19
  4073e8:	ldp	x20, x19, [sp, #128]
  4073ec:	ldp	x22, x21, [sp, #112]
  4073f0:	ldp	x24, x23, [sp, #96]
  4073f4:	ldp	x26, x25, [sp, #80]
  4073f8:	ldp	x28, x27, [sp, #64]
  4073fc:	ldp	x29, x30, [sp, #48]
  407400:	add	sp, sp, #0x90
  407404:	ret
  407408:	sub	sp, sp, #0xb0
  40740c:	stp	x29, x30, [sp, #96]
  407410:	add	x29, sp, #0x60
  407414:	stp	x22, x21, [sp, #144]
  407418:	mov	w21, w0
  40741c:	add	x0, x29, #0x18
  407420:	str	x25, [sp, #112]
  407424:	stp	x24, x23, [sp, #128]
  407428:	stp	x20, x19, [sp, #160]
  40742c:	mov	x20, x1
  407430:	stp	xzr, xzr, [x29, #-24]
  407434:	stur	xzr, [x29, #-8]
  407438:	str	xzr, [x29, #24]
  40743c:	bl	403b80 <sd_bus_open_system@plt>
  407440:	tbnz	w0, #31, 40755c <clock_supported@plt+0x321c>
  407444:	mov	x0, xzr
  407448:	bl	403e90 <internal_set_new@plt>
  40744c:	mov	x19, x0
  407450:	cbz	x0, 4075a8 <clock_supported@plt+0x3268>
  407454:	cmp	w21, #0x2
  407458:	b.lt	407490 <clock_supported@plt+0x3150>  // b.tstop
  40745c:	mov	w23, w21
  407460:	mov	w22, #0x1                   	// #1
  407464:	ldr	x0, [x20, x22, lsl #3]
  407468:	sub	x1, x29, #0x1c
  40746c:	bl	403ea0 <parse_ifindex_or_ifname@plt>
  407470:	tbnz	w0, #31, 4075dc <clock_supported@plt+0x329c>
  407474:	ldursw	x1, [x29, #-28]
  407478:	mov	x0, x19
  40747c:	bl	403eb0 <set_put@plt>
  407480:	tbnz	w0, #31, 407620 <clock_supported@plt+0x32e0>
  407484:	add	x22, x22, #0x1
  407488:	cmp	x23, x22
  40748c:	b.ne	407464 <clock_supported@plt+0x3124>  // b.any
  407490:	adrp	x21, 40b000 <clock_supported@plt+0x6cc0>
  407494:	adrp	x22, 40c000 <clock_supported@plt+0x7cc0>
  407498:	adrp	x23, 40c000 <clock_supported@plt+0x7cc0>
  40749c:	adrp	x24, 40c000 <clock_supported@plt+0x7cc0>
  4074a0:	adrp	x25, 40c000 <clock_supported@plt+0x7cc0>
  4074a4:	mov	w8, #0xfffffffe            	// #-2
  4074a8:	add	x21, x21, #0x830
  4074ac:	add	x22, x22, #0x560
  4074b0:	add	x23, x23, #0x57a
  4074b4:	add	x24, x24, #0x601
  4074b8:	add	x25, x25, #0x5a5
  4074bc:	str	xzr, [sp, #56]
  4074c0:	str	w8, [sp, #48]
  4074c4:	add	x1, sp, #0x30
  4074c8:	add	x2, sp, #0x28
  4074cc:	mov	x0, x19
  4074d0:	bl	403ec0 <set_iterate@plt>
  4074d4:	tbz	w0, #0, 4075d0 <clock_supported@plt+0x3290>
  4074d8:	ldr	w8, [sp, #40]
  4074dc:	ldr	x0, [x29, #24]
  4074e0:	sub	x5, x29, #0x18
  4074e4:	mov	x1, x21
  4074e8:	mov	x2, x22
  4074ec:	mov	x3, x23
  4074f0:	mov	x4, x24
  4074f4:	mov	x6, xzr
  4074f8:	mov	x7, x25
  4074fc:	stur	w8, [x29, #-28]
  407500:	str	w8, [sp]
  407504:	bl	403f10 <sd_bus_call_method@plt>
  407508:	tbz	w0, #31, 4074c4 <clock_supported@plt+0x3184>
  40750c:	mov	w20, w0
  407510:	mov	w0, wzr
  407514:	bl	403b30 <log_get_max_level_realm@plt>
  407518:	cmp	w0, #0x3
  40751c:	b.lt	407688 <clock_supported@plt+0x3348>  // b.tstop
  407520:	ldur	w0, [x29, #-28]
  407524:	add	x1, sp, #0x14
  407528:	mov	w2, #0x1                   	// #1
  40752c:	bl	403ef0 <format_ifname_full@plt>
  407530:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  407534:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  407538:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  40753c:	mov	x6, x0
  407540:	add	x2, x2, #0xef
  407544:	add	x4, x4, #0x5f0
  407548:	add	x5, x5, #0x611
  40754c:	mov	w0, #0x3                   	// #3
  407550:	mov	w3, #0x753                 	// #1875
  407554:	mov	w1, w20
  407558:	b	407618 <clock_supported@plt+0x32d8>
  40755c:	mov	w22, w0
  407560:	mov	w0, wzr
  407564:	bl	403b30 <log_get_max_level_realm@plt>
  407568:	cmp	w0, #0x3
  40756c:	b.lt	4075c0 <clock_supported@plt+0x3280>  // b.tstop
  407570:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  407574:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  407578:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  40757c:	add	x2, x2, #0xef
  407580:	add	x4, x4, #0x5f0
  407584:	add	x5, x5, #0xa72
  407588:	mov	w0, #0x3                   	// #3
  40758c:	mov	w3, #0x737                 	// #1847
  407590:	mov	w1, w22
  407594:	bl	403b40 <log_internal_realm@plt>
  407598:	mov	w20, w0
  40759c:	mov	x19, xzr
  4075a0:	cbnz	x19, 407644 <clock_supported@plt+0x3304>
  4075a4:	b	407654 <clock_supported@plt+0x3314>
  4075a8:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  4075ac:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  4075b0:	add	x1, x1, #0xef
  4075b4:	add	x3, x3, #0x5f0
  4075b8:	mov	w2, #0x73b                 	// #1851
  4075bc:	b	407638 <clock_supported@plt+0x32f8>
  4075c0:	mov	w8, wzr
  4075c4:	mov	x19, xzr
  4075c8:	neg	w9, w22
  4075cc:	b	40769c <clock_supported@plt+0x335c>
  4075d0:	mov	w20, wzr
  4075d4:	cbnz	x19, 407644 <clock_supported@plt+0x3304>
  4075d8:	b	407654 <clock_supported@plt+0x3314>
  4075dc:	mov	w21, w0
  4075e0:	mov	w0, wzr
  4075e4:	bl	403b30 <log_get_max_level_realm@plt>
  4075e8:	cmp	w0, #0x3
  4075ec:	b.lt	407694 <clock_supported@plt+0x3354>  // b.tstop
  4075f0:	ldr	x6, [x20, w22, uxtw #3]
  4075f4:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4075f8:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4075fc:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  407600:	add	x2, x2, #0xef
  407604:	add	x4, x4, #0x5f0
  407608:	add	x5, x5, #0x4e4
  40760c:	mov	w0, #0x3                   	// #3
  407610:	mov	w3, #0x740                 	// #1856
  407614:	mov	w1, w21
  407618:	bl	403b40 <log_internal_realm@plt>
  40761c:	b	40763c <clock_supported@plt+0x32fc>
  407620:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  407624:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  407628:	add	x1, x1, #0xef
  40762c:	add	x3, x3, #0x5f0
  407630:	mov	w2, #0x744                 	// #1860
  407634:	mov	w0, wzr
  407638:	bl	4039a0 <log_oom_internal@plt>
  40763c:	mov	w20, w0
  407640:	cbz	x19, 407654 <clock_supported@plt+0x3314>
  407644:	mov	x0, x19
  407648:	mov	x1, xzr
  40764c:	mov	x2, xzr
  407650:	bl	403f00 <internal_hashmap_free@plt>
  407654:	ldr	x0, [x29, #24]
  407658:	cbz	x0, 407660 <clock_supported@plt+0x3320>
  40765c:	bl	403d70 <sd_bus_flush_close_unref@plt>
  407660:	sub	x0, x29, #0x18
  407664:	bl	403f30 <sd_bus_error_free@plt>
  407668:	mov	w0, w20
  40766c:	ldp	x20, x19, [sp, #160]
  407670:	ldp	x22, x21, [sp, #144]
  407674:	ldp	x24, x23, [sp, #128]
  407678:	ldr	x25, [sp, #112]
  40767c:	ldp	x29, x30, [sp, #96]
  407680:	add	sp, sp, #0xb0
  407684:	ret
  407688:	mov	w8, wzr
  40768c:	neg	w9, w20
  407690:	b	40769c <clock_supported@plt+0x335c>
  407694:	mov	w8, wzr
  407698:	neg	w9, w21
  40769c:	sub	w20, w8, w9, uxtb
  4076a0:	cbnz	x19, 407644 <clock_supported@plt+0x3304>
  4076a4:	b	407654 <clock_supported@plt+0x3314>
  4076a8:	sub	sp, sp, #0x40
  4076ac:	stp	x29, x30, [sp, #32]
  4076b0:	add	x29, sp, #0x20
  4076b4:	add	x0, x29, #0x18
  4076b8:	str	x19, [sp, #48]
  4076bc:	stp	xzr, xzr, [sp, #8]
  4076c0:	str	xzr, [sp, #24]
  4076c4:	str	xzr, [x29, #24]
  4076c8:	bl	403b80 <sd_bus_open_system@plt>
  4076cc:	tbnz	w0, #31, 407710 <clock_supported@plt+0x33d0>
  4076d0:	ldr	x0, [x29, #24]
  4076d4:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  4076d8:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  4076dc:	adrp	x3, 40c000 <clock_supported@plt+0x7cc0>
  4076e0:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4076e4:	add	x1, x1, #0x830
  4076e8:	add	x2, x2, #0x560
  4076ec:	add	x3, x3, #0x57a
  4076f0:	add	x4, x4, #0x64c
  4076f4:	add	x5, sp, #0x8
  4076f8:	mov	x6, xzr
  4076fc:	mov	x7, xzr
  407700:	bl	403f10 <sd_bus_call_method@plt>
  407704:	tbnz	w0, #31, 407748 <clock_supported@plt+0x3408>
  407708:	mov	w19, wzr
  40770c:	b	407798 <clock_supported@plt+0x3458>
  407710:	mov	w19, w0
  407714:	mov	w0, wzr
  407718:	bl	403b30 <log_get_max_level_realm@plt>
  40771c:	cmp	w0, #0x3
  407720:	b.lt	40778c <clock_supported@plt+0x344c>  // b.tstop
  407724:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  407728:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40772c:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  407730:	add	x2, x2, #0xef
  407734:	add	x4, x4, #0x640
  407738:	add	x5, x5, #0xa72
  40773c:	mov	w0, #0x3                   	// #3
  407740:	mov	w3, #0x71e                 	// #1822
  407744:	b	40777c <clock_supported@plt+0x343c>
  407748:	mov	w19, w0
  40774c:	mov	w0, wzr
  407750:	bl	403b30 <log_get_max_level_realm@plt>
  407754:	cmp	w0, #0x3
  407758:	b.lt	40778c <clock_supported@plt+0x344c>  // b.tstop
  40775c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  407760:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  407764:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  407768:	add	x2, x2, #0xef
  40776c:	add	x4, x4, #0x640
  407770:	add	x5, x5, #0x653
  407774:	mov	w0, #0x3                   	// #3
  407778:	mov	w3, #0x728                 	// #1832
  40777c:	mov	w1, w19
  407780:	bl	403b40 <log_internal_realm@plt>
  407784:	mov	w19, w0
  407788:	b	407798 <clock_supported@plt+0x3458>
  40778c:	mov	w8, wzr
  407790:	neg	w9, w19
  407794:	sub	w19, w8, w9, uxtb
  407798:	ldr	x0, [x29, #24]
  40779c:	cbz	x0, 4077a4 <clock_supported@plt+0x3464>
  4077a0:	bl	403d70 <sd_bus_flush_close_unref@plt>
  4077a4:	add	x0, sp, #0x8
  4077a8:	bl	403f30 <sd_bus_error_free@plt>
  4077ac:	mov	w0, w19
  4077b0:	ldr	x19, [sp, #48]
  4077b4:	ldp	x29, x30, [sp, #32]
  4077b8:	add	sp, sp, #0x40
  4077bc:	ret
  4077c0:	sub	sp, sp, #0xe0
  4077c4:	mov	w8, #0xffffffff            	// #-1
  4077c8:	stp	x29, x30, [sp, #128]
  4077cc:	stp	x28, x27, [sp, #144]
  4077d0:	stp	x26, x25, [sp, #160]
  4077d4:	stp	x24, x23, [sp, #176]
  4077d8:	stp	x22, x21, [sp, #192]
  4077dc:	stp	x20, x19, [sp, #208]
  4077e0:	add	x29, sp, #0x80
  4077e4:	stp	xzr, xzr, [sp, #56]
  4077e8:	str	xzr, [sp, #48]
  4077ec:	str	w8, [sp, #44]
  4077f0:	str	xzr, [sp, #32]
  4077f4:	cbz	x1, 40826c <clock_supported@plt+0x3f2c>
  4077f8:	mov	x19, x3
  4077fc:	cbz	x3, 40828c <clock_supported@plt+0x3f4c>
  407800:	mov	x21, x1
  407804:	mov	x22, x2
  407808:	mov	x20, x0
  40780c:	add	x1, sp, #0x40
  407810:	mov	w2, #0x12                  	// #18
  407814:	mov	x0, x21
  407818:	mov	w3, wzr
  40781c:	bl	403ed0 <sd_rtnl_message_new_link@plt>
  407820:	tbnz	w0, #31, 407eb8 <clock_supported@plt+0x3b78>
  407824:	ldr	x0, [sp, #64]
  407828:	mov	w1, #0x1                   	// #1
  40782c:	bl	403df0 <sd_netlink_message_request_dump@plt>
  407830:	tbnz	w0, #31, 407eb8 <clock_supported@plt+0x3b78>
  407834:	ldr	x1, [sp, #64]
  407838:	add	x3, sp, #0x38
  40783c:	mov	x0, x21
  407840:	mov	x2, xzr
  407844:	bl	403e00 <sd_netlink_call@plt>
  407848:	tbnz	w0, #31, 407f50 <clock_supported@plt+0x3c10>
  40784c:	ldr	x23, [sp, #56]
  407850:	cbz	x23, 407f90 <clock_supported@plt+0x3c50>
  407854:	adrp	x28, 40b000 <clock_supported@plt+0x6cc0>
  407858:	adrp	x25, 40b000 <clock_supported@plt+0x6cc0>
  40785c:	stp	x19, x20, [sp, #16]
  407860:	mov	x20, xzr
  407864:	mov	w24, #0x1c8                 	// #456
  407868:	add	x28, x28, #0x69f
  40786c:	add	x25, x25, #0x73b
  407870:	add	x2, x20, #0x2
  407874:	add	x0, sp, #0x30
  407878:	add	x1, sp, #0x20
  40787c:	mov	w3, #0x1c8                 	// #456
  407880:	bl	403f40 <greedy_realloc0@plt>
  407884:	cbz	x0, 407fa8 <clock_supported@plt+0x3c68>
  407888:	ldr	x27, [sp, #48]
  40788c:	cbz	x27, 40822c <clock_supported@plt+0x3eec>
  407890:	sub	x1, x29, #0x34
  407894:	mov	x0, x23
  407898:	bl	403f50 <sd_netlink_message_get_type@plt>
  40789c:	tbnz	w0, #31, 407984 <clock_supported@plt+0x3644>
  4078a0:	ldurh	w8, [x29, #-52]
  4078a4:	cmp	w8, #0x10
  4078a8:	b.ne	407990 <clock_supported@plt+0x3650>  // b.any
  4078ac:	sub	x1, x29, #0x30
  4078b0:	mov	x0, x23
  4078b4:	bl	403f60 <sd_rtnl_message_link_get_ifindex@plt>
  4078b8:	tbnz	w0, #31, 407984 <clock_supported@plt+0x3644>
  4078bc:	sub	x2, x29, #0x8
  4078c0:	mov	w1, #0x3                   	// #3
  4078c4:	mov	x0, x23
  4078c8:	bl	403f70 <sd_netlink_message_read_string@plt>
  4078cc:	tbnz	w0, #31, 407984 <clock_supported@plt+0x3644>
  4078d0:	cbz	x22, 40791c <clock_supported@plt+0x35dc>
  4078d4:	ldur	w3, [x29, #-48]
  4078d8:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4078dc:	sub	x0, x29, #0x20
  4078e0:	mov	w1, #0xc                   	// #12
  4078e4:	add	x2, x2, #0x708
  4078e8:	bl	403cc0 <snprintf@plt>
  4078ec:	cmp	w0, #0xc
  4078f0:	b.cs	4082b0 <clock_supported@plt+0x3f70>  // b.hs, b.nlast
  4078f4:	sub	x1, x29, #0x20
  4078f8:	mov	x0, x22
  4078fc:	mov	w2, wzr
  407900:	bl	403f80 <strv_fnmatch@plt>
  407904:	tbnz	w0, #0, 40791c <clock_supported@plt+0x35dc>
  407908:	ldur	x1, [x29, #-8]
  40790c:	mov	x0, x22
  407910:	mov	w2, wzr
  407914:	bl	403f80 <strv_fnmatch@plt>
  407918:	tbz	w0, #0, 407990 <clock_supported@plt+0x3650>
  40791c:	madd	x8, x20, x24, x27
  407920:	add	x1, x8, #0x64
  407924:	mov	x0, x23
  407928:	bl	403f90 <sd_rtnl_message_link_get_type@plt>
  40792c:	tbnz	w0, #31, 407984 <clock_supported@plt+0x3644>
  407930:	ldur	x2, [x29, #-8]
  407934:	madd	x26, x20, x24, x27
  407938:	mov	w1, #0x11                  	// #17
  40793c:	mov	x0, x26
  407940:	bl	403fa0 <strscpy@plt>
  407944:	ldur	w8, [x29, #-48]
  407948:	mov	w1, #0x1                   	// #1
  40794c:	mov	x0, x23
  407950:	str	w8, [x26, #96]
  407954:	add	x26, x26, #0x66
  407958:	mov	x2, x26
  40795c:	bl	403fb0 <sd_netlink_message_read_ether_addr@plt>
  407960:	tbnz	w0, #31, 407bd8 <clock_supported@plt+0x3898>
  407964:	sturh	wzr, [x29, #-36]
  407968:	stur	wzr, [x29, #-40]
  40796c:	ldr	w8, [x26]
  407970:	ldrh	w9, [x26, #4]
  407974:	orr	w8, w8, w9
  407978:	cmp	w8, #0x0
  40797c:	cset	w8, ne  // ne = any
  407980:	b	407bdc <clock_supported@plt+0x389c>
  407984:	mov	w26, w0
  407988:	tbz	w26, #31, 407998 <clock_supported@plt+0x3658>
  40798c:	b	407ec0 <clock_supported@plt+0x3b80>
  407990:	mov	w26, wzr
  407994:	tbnz	w26, #31, 407ec0 <clock_supported@plt+0x3b80>
  407998:	cbz	w26, 407bc4 <clock_supported@plt+0x3884>
  40799c:	ldr	x8, [sp, #48]
  4079a0:	mul	x9, x20, x24
  4079a4:	sub	x0, x29, #0x20
  4079a8:	mov	w1, #0xe                   	// #14
  4079ac:	add	x8, x8, x9
  4079b0:	ldrh	w10, [x8, #454]
  4079b4:	mov	x2, x28
  4079b8:	orr	w10, w10, #0x100
  4079bc:	strh	w10, [x8, #454]
  4079c0:	ldr	x8, [sp, #48]
  4079c4:	add	x8, x8, x9
  4079c8:	ldr	w3, [x8, #96]
  4079cc:	bl	403cc0 <snprintf@plt>
  4079d0:	cmp	w0, #0xe
  4079d4:	b.cs	40824c <clock_supported@plt+0x3f0c>  // b.hs, b.nlast
  4079d8:	ldr	x8, [sp, #48]
  4079dc:	mul	x26, x20, x24
  4079e0:	sub	x1, x29, #0x20
  4079e4:	add	x8, x8, x26
  4079e8:	add	x0, x8, #0x58
  4079ec:	bl	403fc0 <sd_device_new_from_device_id@plt>
  4079f0:	ldr	x21, [sp, #48]
  4079f4:	add	x0, sp, #0x2c
  4079f8:	add	x1, x21, x26
  4079fc:	add	x2, x1, #0x19c
  407a00:	add	x3, x1, #0x1a0
  407a04:	add	x4, x1, #0x1a8
  407a08:	add	x5, x1, #0x1ac
  407a0c:	bl	403fd0 <ethtool_get_link_info@plt>
  407a10:	tbnz	w0, #31, 407a24 <clock_supported@plt+0x36e4>
  407a14:	madd	x8, x20, x24, x21
  407a18:	ldrh	w9, [x8, #454]
  407a1c:	orr	w9, w9, #0x40
  407a20:	strh	w9, [x8, #454]
  407a24:	ldr	x21, [sp, #48]
  407a28:	stur	xzr, [x29, #-8]
  407a2c:	stur	xzr, [x29, #-40]
  407a30:	madd	x26, x20, x24, x21
  407a34:	ldr	x0, [x26, #88]
  407a38:	cbz	x0, 407a48 <clock_supported@plt+0x3708>
  407a3c:	sub	x1, x29, #0x28
  407a40:	bl	403fe0 <sd_device_get_devtype@plt>
  407a44:	ldur	x0, [x29, #-40]
  407a48:	mov	x1, x25
  407a4c:	bl	403cd0 <strcmp_ptr@plt>
  407a50:	cbnz	w0, 407bb4 <clock_supported@plt+0x3874>
  407a54:	sub	x0, x29, #0x8
  407a58:	bl	403ff0 <sd_genl_socket_open@plt>
  407a5c:	tbnz	w0, #31, 407b40 <clock_supported@plt+0x3800>
  407a60:	ldur	x0, [x29, #-8]
  407a64:	mov	w1, #0x20000               	// #131072
  407a68:	mov	x19, x22
  407a6c:	mov	x22, x25
  407a70:	mov	x25, x28
  407a74:	bl	404000 <sd_netlink_inc_rcvbuf@plt>
  407a78:	madd	x28, x20, x24, x21
  407a7c:	ldur	x0, [x29, #-8]
  407a80:	ldr	w1, [x28, #96]!
  407a84:	add	x2, x28, #0x150
  407a88:	add	x3, x28, #0x158
  407a8c:	bl	404010 <wifi_get_interface@plt>
  407a90:	mov	w27, w0
  407a94:	tbz	w0, #31, 407ad4 <clock_supported@plt+0x3794>
  407a98:	mov	w0, wzr
  407a9c:	bl	403b30 <log_get_max_level_realm@plt>
  407aa0:	cmp	w0, #0x7
  407aa4:	b.lt	407ad4 <clock_supported@plt+0x3794>  // b.tstop
  407aa8:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  407aac:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  407ab0:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  407ab4:	mov	w0, #0x7                   	// #7
  407ab8:	mov	w3, #0x195                 	// #405
  407abc:	mov	w1, w27
  407ac0:	add	x2, x2, #0xef
  407ac4:	add	x4, x4, #0x740
  407ac8:	add	x5, x5, #0x781
  407acc:	mov	x6, x26
  407ad0:	bl	403b40 <log_internal_realm@plt>
  407ad4:	madd	x8, x20, x24, x21
  407ad8:	ldrh	w8, [x8, #100]
  407adc:	cmp	w8, #0x2
  407ae0:	b.ne	407b80 <clock_supported@plt+0x3840>  // b.any
  407ae4:	ldur	x0, [x29, #-8]
  407ae8:	ldr	w1, [x28]
  407aec:	madd	x8, x20, x24, x21
  407af0:	add	x2, x8, #0x1c0
  407af4:	bl	404020 <wifi_get_station@plt>
  407af8:	mov	w28, w0
  407afc:	tbz	w0, #31, 407b84 <clock_supported@plt+0x3844>
  407b00:	mov	w0, wzr
  407b04:	bl	403b30 <log_get_max_level_realm@plt>
  407b08:	cmp	w0, #0x7
  407b0c:	b.lt	407b84 <clock_supported@plt+0x3844>  // b.tstop
  407b10:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  407b14:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  407b18:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  407b1c:	mov	w0, #0x7                   	// #7
  407b20:	mov	w3, #0x19a                 	// #410
  407b24:	mov	w1, w28
  407b28:	add	x2, x2, #0xef
  407b2c:	add	x4, x4, #0x740
  407b30:	add	x5, x5, #0x79e
  407b34:	mov	x6, x26
  407b38:	bl	403b40 <log_internal_realm@plt>
  407b3c:	b	407b84 <clock_supported@plt+0x3844>
  407b40:	mov	w27, w0
  407b44:	mov	w0, wzr
  407b48:	bl	403b30 <log_get_max_level_realm@plt>
  407b4c:	cmp	w0, #0x7
  407b50:	b.lt	407bb4 <clock_supported@plt+0x3874>  // b.tstop
  407b54:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  407b58:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  407b5c:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  407b60:	mov	w0, #0x7                   	// #7
  407b64:	mov	w3, #0x18d                 	// #397
  407b68:	mov	w1, w27
  407b6c:	add	x2, x2, #0xef
  407b70:	add	x4, x4, #0x740
  407b74:	add	x5, x5, #0x757
  407b78:	bl	403b40 <log_internal_realm@plt>
  407b7c:	b	407bb4 <clock_supported@plt+0x3874>
  407b80:	mov	w28, wzr
  407b84:	madd	x8, x20, x24, x21
  407b88:	ldrh	w9, [x8, #454]
  407b8c:	cmp	w28, #0x0
  407b90:	ccmp	w27, #0x0, #0x0, le
  407b94:	mov	w10, #0x80                  	// #128
  407b98:	csel	w10, w10, wzr, gt
  407b9c:	and	w9, w9, #0xffffff7f
  407ba0:	orr	w9, w10, w9
  407ba4:	mov	x28, x25
  407ba8:	mov	x25, x22
  407bac:	mov	x22, x19
  407bb0:	strh	w9, [x8, #454]
  407bb4:	ldur	x0, [x29, #-8]
  407bb8:	cbz	x0, 407bc0 <clock_supported@plt+0x3880>
  407bbc:	bl	403b70 <sd_netlink_unref@plt>
  407bc0:	add	x20, x20, #0x1
  407bc4:	mov	x0, x23
  407bc8:	bl	403e70 <sd_netlink_message_next@plt>
  407bcc:	mov	x23, x0
  407bd0:	cbnz	x0, 407870 <clock_supported@plt+0x3530>
  407bd4:	b	407fb0 <clock_supported@plt+0x3c70>
  407bd8:	mov	w8, wzr
  407bdc:	madd	x26, x20, x24, x27
  407be0:	ldrh	w9, [x26, #454]
  407be4:	add	x2, x26, #0x6c
  407be8:	mov	w1, #0x4                   	// #4
  407bec:	mov	x0, x23
  407bf0:	and	w9, w9, #0xfffe
  407bf4:	orr	w8, w9, w8
  407bf8:	add	x21, x26, #0x1c6
  407bfc:	strh	w8, [x26, #454]
  407c00:	bl	403e30 <sd_netlink_message_read_u32@plt>
  407c04:	add	x2, x26, #0x70
  407c08:	mov	w1, #0x32                  	// #50
  407c0c:	mov	x0, x23
  407c10:	bl	403e30 <sd_netlink_message_read_u32@plt>
  407c14:	add	x2, x26, #0x74
  407c18:	mov	w1, #0x33                  	// #51
  407c1c:	mov	x0, x23
  407c20:	bl	403e30 <sd_netlink_message_read_u32@plt>
  407c24:	add	x26, x26, #0x7c
  407c28:	mov	w1, #0x20                  	// #32
  407c2c:	mov	x0, x23
  407c30:	mov	x2, x26
  407c34:	bl	403e30 <sd_netlink_message_read_u32@plt>
  407c38:	tbnz	w0, #31, 407c50 <clock_supported@plt+0x3910>
  407c3c:	ldr	w8, [x26]
  407c40:	cmp	w8, #0x0
  407c44:	cset	w8, ne  // ne = any
  407c48:	lsl	w8, w8, #2
  407c4c:	b	407c54 <clock_supported@plt+0x3914>
  407c50:	mov	w8, wzr
  407c54:	ldrh	w9, [x21]
  407c58:	madd	x10, x20, x24, x27
  407c5c:	add	x26, x10, #0x78
  407c60:	mov	w1, #0x1f                  	// #31
  407c64:	and	w9, w9, #0xfffffffb
  407c68:	orr	w8, w9, w8
  407c6c:	mov	x0, x23
  407c70:	mov	x2, x26
  407c74:	strh	w8, [x21]
  407c78:	bl	403e30 <sd_netlink_message_read_u32@plt>
  407c7c:	tbnz	w0, #31, 407c94 <clock_supported@plt+0x3954>
  407c80:	ldr	w8, [x26]
  407c84:	cmp	w8, #0x0
  407c88:	cset	w8, ne  // ne = any
  407c8c:	lsl	w8, w8, #1
  407c90:	b	407c98 <clock_supported@plt+0x3958>
  407c94:	mov	w8, wzr
  407c98:	ldrh	w9, [x21]
  407c9c:	madd	x10, x20, x24, x27
  407ca0:	add	x26, x10, #0x80
  407ca4:	mov	w1, #0x17                  	// #23
  407ca8:	and	w9, w9, #0xfffffffd
  407cac:	orr	w8, w9, w8
  407cb0:	mov	w2, #0xc0                  	// #192
  407cb4:	mov	x0, x23
  407cb8:	mov	x3, x26
  407cbc:	strh	w8, [x21]
  407cc0:	bl	404030 <sd_netlink_message_read@plt>
  407cc4:	tbnz	w0, #31, 407cd0 <clock_supported@plt+0x3990>
  407cc8:	mov	w8, #0x8                   	// #8
  407ccc:	b	407cec <clock_supported@plt+0x39ac>
  407cd0:	mov	w1, #0x7                   	// #7
  407cd4:	mov	w2, #0x60                  	// #96
  407cd8:	mov	x0, x23
  407cdc:	mov	x3, x26
  407ce0:	bl	404030 <sd_netlink_message_read@plt>
  407ce4:	tbnz	w0, #31, 407cf8 <clock_supported@plt+0x39b8>
  407ce8:	mov	w8, #0x10                  	// #16
  407cec:	ldrh	w9, [x21]
  407cf0:	orr	w8, w9, w8
  407cf4:	strh	w8, [x21]
  407cf8:	mov	w1, #0x12                  	// #18
  407cfc:	mov	x0, x23
  407d00:	bl	404040 <sd_netlink_message_enter_container@plt>
  407d04:	tbnz	w0, #31, 407eac <clock_supported@plt+0x3b6c>
  407d08:	sub	x2, x29, #0x20
  407d0c:	mov	w1, #0x1                   	// #1
  407d10:	mov	x0, x23
  407d14:	bl	403f70 <sd_netlink_message_read_string@plt>
  407d18:	tbnz	w0, #31, 407eac <clock_supported@plt+0x3b6c>
  407d1c:	mov	w1, #0x2                   	// #2
  407d20:	mov	x0, x23
  407d24:	bl	404040 <sd_netlink_message_enter_container@plt>
  407d28:	tbnz	w0, #31, 407eac <clock_supported@plt+0x3b6c>
  407d2c:	ldur	x26, [x29, #-32]
  407d30:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  407d34:	add	x1, x1, #0x72e
  407d38:	mov	x0, x26
  407d3c:	bl	404050 <strcmp@plt>
  407d40:	cbz	w0, 407dcc <clock_supported@plt+0x3a8c>
  407d44:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  407d48:	mov	x0, x26
  407d4c:	add	x1, x1, #0x735
  407d50:	bl	404050 <strcmp@plt>
  407d54:	cbnz	w0, 407e88 <clock_supported@plt+0x3b48>
  407d58:	madd	x21, x20, x24, x27
  407d5c:	add	x2, x21, #0x168
  407d60:	mov	w1, #0x1                   	// #1
  407d64:	mov	x0, x23
  407d68:	bl	403e30 <sd_netlink_message_read_u32@plt>
  407d6c:	add	x26, x21, #0x188
  407d70:	mov	w1, #0x2                   	// #2
  407d74:	mov	x0, x23
  407d78:	mov	x2, x26
  407d7c:	mov	w21, #0x2                   	// #2
  407d80:	bl	404060 <sd_netlink_message_read_in_addr@plt>
  407d84:	tbz	w0, #31, 407da0 <clock_supported@plt+0x3a60>
  407d88:	mov	w1, #0x10                  	// #16
  407d8c:	mov	x0, x23
  407d90:	mov	x2, x26
  407d94:	bl	403e40 <sd_netlink_message_read_in6_addr@plt>
  407d98:	tbnz	w0, #31, 407da8 <clock_supported@plt+0x3a68>
  407d9c:	mov	w21, #0xa                   	// #10
  407da0:	madd	x8, x20, x24, x27
  407da4:	str	w21, [x8, #372]
  407da8:	madd	x8, x20, x24, x27
  407dac:	add	x26, x8, #0x178
  407db0:	mov	w1, #0x4                   	// #4
  407db4:	mov	x0, x23
  407db8:	mov	x2, x26
  407dbc:	bl	404060 <sd_netlink_message_read_in_addr@plt>
  407dc0:	tbnz	w0, #31, 407e44 <clock_supported@plt+0x3b04>
  407dc4:	mov	w8, #0x2                   	// #2
  407dc8:	b	407e5c <clock_supported@plt+0x3b1c>
  407dcc:	madd	x21, x20, x24, x27
  407dd0:	add	x2, x21, #0x150
  407dd4:	mov	w1, #0x1                   	// #1
  407dd8:	mov	x0, x23
  407ddc:	bl	403e30 <sd_netlink_message_read_u32@plt>
  407de0:	add	x2, x21, #0x154
  407de4:	mov	w1, #0x2                   	// #2
  407de8:	mov	x0, x23
  407dec:	bl	403e30 <sd_netlink_message_read_u32@plt>
  407df0:	add	x2, x21, #0x158
  407df4:	mov	w1, #0x3                   	// #3
  407df8:	mov	x0, x23
  407dfc:	bl	403e30 <sd_netlink_message_read_u32@plt>
  407e00:	add	x2, x21, #0x15c
  407e04:	mov	w1, #0x4                   	// #4
  407e08:	mov	x0, x23
  407e0c:	bl	403e30 <sd_netlink_message_read_u32@plt>
  407e10:	add	x2, x21, #0x160
  407e14:	mov	w1, #0x5                   	// #5
  407e18:	mov	x0, x23
  407e1c:	bl	403e30 <sd_netlink_message_read_u32@plt>
  407e20:	add	x2, x21, #0x164
  407e24:	mov	w1, #0x6                   	// #6
  407e28:	mov	x0, x23
  407e2c:	bl	404070 <sd_netlink_message_read_u16@plt>
  407e30:	add	x2, x21, #0x166
  407e34:	mov	w1, #0x2b                  	// #43
  407e38:	mov	x0, x23
  407e3c:	bl	404080 <sd_netlink_message_read_u8@plt>
  407e40:	b	407e88 <clock_supported@plt+0x3b48>
  407e44:	mov	w1, #0x11                  	// #17
  407e48:	mov	x0, x23
  407e4c:	mov	x2, x26
  407e50:	bl	403e40 <sd_netlink_message_read_in6_addr@plt>
  407e54:	tbnz	w0, #31, 407e64 <clock_supported@plt+0x3b24>
  407e58:	mov	w8, #0xa                   	// #10
  407e5c:	madd	x9, x20, x24, x27
  407e60:	str	w8, [x9, #368]
  407e64:	madd	x21, x20, x24, x27
  407e68:	add	x2, x21, #0x16c
  407e6c:	mov	w1, #0x3                   	// #3
  407e70:	mov	x0, x23
  407e74:	bl	403e30 <sd_netlink_message_read_u32@plt>
  407e78:	add	x2, x21, #0x198
  407e7c:	mov	w1, #0xf                   	// #15
  407e80:	mov	x0, x23
  407e84:	bl	404070 <sd_netlink_message_read_u16@plt>
  407e88:	ldur	x1, [x29, #-32]
  407e8c:	madd	x8, x20, x24, x27
  407e90:	add	x0, x8, #0x11
  407e94:	mov	w2, #0x10                  	// #16
  407e98:	bl	404090 <strncpy@plt>
  407e9c:	mov	x0, x23
  407ea0:	bl	4040a0 <sd_netlink_message_exit_container@plt>
  407ea4:	mov	x0, x23
  407ea8:	bl	4040a0 <sd_netlink_message_exit_container@plt>
  407eac:	mov	w26, #0x1                   	// #1
  407eb0:	tbz	w26, #31, 407998 <clock_supported@plt+0x3658>
  407eb4:	b	407ec0 <clock_supported@plt+0x3b80>
  407eb8:	bl	403ee0 <rtnl_log_create_error@plt>
  407ebc:	mov	w26, w0
  407ec0:	ldr	w0, [sp, #44]
  407ec4:	bl	4040b0 <safe_close@plt>
  407ec8:	ldr	x19, [sp, #48]
  407ecc:	cbz	x19, 407f14 <clock_supported@plt+0x3bd4>
  407ed0:	ldrb	w8, [x19, #455]
  407ed4:	tbz	w8, #0, 407f0c <clock_supported@plt+0x3bcc>
  407ed8:	mov	x8, xzr
  407edc:	mov	w20, #0x1                   	// #1
  407ee0:	mov	w21, #0x1c8                 	// #456
  407ee4:	madd	x22, x8, x21, x19
  407ee8:	ldr	x0, [x22, #88]
  407eec:	bl	403b60 <sd_device_unref@plt>
  407ef0:	ldr	x0, [x22, #440]
  407ef4:	bl	4039b0 <free@plt>
  407ef8:	umaddl	x8, w20, w21, x19
  407efc:	ldrb	w9, [x8, #455]
  407f00:	mov	w8, w20
  407f04:	add	w20, w20, #0x1
  407f08:	tbnz	w9, #0, 407ee4 <clock_supported@plt+0x3ba4>
  407f0c:	mov	x0, x19
  407f10:	bl	4039b0 <free@plt>
  407f14:	ldr	x0, [sp, #56]
  407f18:	cbz	x0, 407f20 <clock_supported@plt+0x3be0>
  407f1c:	bl	403e80 <sd_netlink_message_unref@plt>
  407f20:	ldr	x0, [sp, #64]
  407f24:	cbz	x0, 407f2c <clock_supported@plt+0x3bec>
  407f28:	bl	403e80 <sd_netlink_message_unref@plt>
  407f2c:	mov	w0, w26
  407f30:	ldp	x20, x19, [sp, #208]
  407f34:	ldp	x22, x21, [sp, #192]
  407f38:	ldp	x24, x23, [sp, #176]
  407f3c:	ldp	x26, x25, [sp, #160]
  407f40:	ldp	x28, x27, [sp, #144]
  407f44:	ldp	x29, x30, [sp, #128]
  407f48:	add	sp, sp, #0xe0
  407f4c:	ret
  407f50:	mov	w21, w0
  407f54:	mov	w0, wzr
  407f58:	bl	403b30 <log_get_max_level_realm@plt>
  407f5c:	cmp	w0, #0x3
  407f60:	b.lt	407f98 <clock_supported@plt+0x3c58>  // b.tstop
  407f64:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  407f68:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  407f6c:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  407f70:	add	x2, x2, #0xef
  407f74:	add	x4, x4, #0x66f
  407f78:	add	x5, x5, #0x681
  407f7c:	mov	w0, #0x3                   	// #3
  407f80:	mov	w3, #0x1b5                 	// #437
  407f84:	mov	w1, w21
  407f88:	bl	403b40 <log_internal_realm@plt>
  407f8c:	b	407ebc <clock_supported@plt+0x3b7c>
  407f90:	mov	x20, xzr
  407f94:	b	408218 <clock_supported@plt+0x3ed8>
  407f98:	mov	w8, wzr
  407f9c:	neg	w9, w21
  407fa0:	sub	w26, w8, w9, uxtb
  407fa4:	b	407ec0 <clock_supported@plt+0x3b80>
  407fa8:	mov	w26, #0xfffffff4            	// #-12
  407fac:	b	407ec0 <clock_supported@plt+0x3b80>
  407fb0:	ldp	x19, x21, [sp, #16]
  407fb4:	cmp	x20, #0x2
  407fb8:	b.cc	407fd8 <clock_supported@plt+0x3c98>  // b.lo, b.ul, b.last
  407fbc:	ldr	x0, [sp, #48]
  407fc0:	cbz	x0, 4082d0 <clock_supported@plt+0x3f90>
  407fc4:	adrp	x3, 408000 <clock_supported@plt+0x3cc0>
  407fc8:	add	x3, x3, #0x608
  407fcc:	mov	w2, #0x1c8                 	// #456
  407fd0:	mov	x1, x20
  407fd4:	bl	4040c0 <qsort@plt>
  407fd8:	cbz	x21, 408218 <clock_supported@plt+0x3ed8>
  407fdc:	cbz	x20, 408218 <clock_supported@plt+0x3ed8>
  407fe0:	adrp	x22, 40b000 <clock_supported@plt+0x6cc0>
  407fe4:	adrp	x23, 40b000 <clock_supported@plt+0x6cc0>
  407fe8:	adrp	x19, 40b000 <clock_supported@plt+0x6cc0>
  407fec:	adrp	x27, 40b000 <clock_supported@plt+0x6cc0>
  407ff0:	adrp	x28, 40b000 <clock_supported@plt+0x6cc0>
  407ff4:	mov	w26, #0x1c6                 	// #454
  407ff8:	add	x22, x22, #0x708
  407ffc:	add	x23, x23, #0x811
  408000:	add	x19, x19, #0x88e
  408004:	add	x27, x27, #0x86d
  408008:	add	x28, x28, #0x927
  40800c:	mov	x21, x20
  408010:	ldr	x25, [sp, #48]
  408014:	stp	xzr, xzr, [x29, #-16]
  408018:	stp	xzr, xzr, [x29, #-32]
  40801c:	stp	xzr, xzr, [x29, #-48]
  408020:	add	x8, x25, x26
  408024:	sub	x8, x8, #0x166
  408028:	ldr	w2, [x8]
  40802c:	sub	x0, x29, #0x30
  408030:	mov	x1, x22
  408034:	bl	4040d0 <asprintf@plt>
  408038:	tbnz	w0, #31, 4081e4 <clock_supported@plt+0x3ea4>
  40803c:	ldur	x1, [x29, #-48]
  408040:	sub	x2, x29, #0x28
  408044:	mov	x0, x23
  408048:	bl	4040e0 <sd_bus_path_encode@plt>
  40804c:	tbnz	w0, #31, 4081e4 <clock_supported@plt+0x3ea4>
  408050:	ldur	x2, [x29, #-40]
  408054:	ldr	x0, [sp, #24]
  408058:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  40805c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408060:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  408064:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408068:	sub	x5, x29, #0x20
  40806c:	sub	x6, x29, #0x8
  408070:	add	x8, x8, #0x870
  408074:	add	x1, x1, #0x830
  408078:	add	x3, x3, #0x849
  40807c:	add	x4, x4, #0x869
  408080:	mov	x7, x27
  408084:	stp	x8, x19, [sp]
  408088:	bl	403f10 <sd_bus_call_method@plt>
  40808c:	tbnz	w0, #31, 4080dc <clock_supported@plt+0x3d9c>
  408090:	ldur	x0, [x29, #-8]
  408094:	mov	w1, #0x76                  	// #118
  408098:	mov	x2, x28
  40809c:	bl	4040f0 <sd_bus_message_enter_container@plt>
  4080a0:	tbnz	w0, #31, 4080fc <clock_supported@plt+0x3dbc>
  4080a4:	ldur	x0, [x29, #-8]
  4080a8:	add	x8, x25, x26
  4080ac:	sub	x2, x8, #0x86
  4080b0:	sub	x3, x8, #0x7e
  4080b4:	mov	x1, x28
  4080b8:	bl	404100 <sd_bus_message_read@plt>
  4080bc:	tbnz	w0, #31, 40811c <clock_supported@plt+0x3ddc>
  4080c0:	ldur	x0, [x29, #-8]
  4080c4:	bl	404110 <sd_bus_message_exit_container@plt>
  4080c8:	tbnz	w0, #31, 4081a8 <clock_supported@plt+0x3e68>
  4080cc:	ldrh	w8, [x25, x26]
  4080d0:	orr	w8, w8, #0x20
  4080d4:	strh	w8, [x25, x26]
  4080d8:	b	4081e4 <clock_supported@plt+0x3ea4>
  4080dc:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  4080e0:	mov	w24, w0
  4080e4:	sub	x0, x29, #0x20
  4080e8:	add	x1, x1, #0x897
  4080ec:	bl	404120 <sd_bus_error_has_name@plt>
  4080f0:	cbz	w0, 40813c <clock_supported@plt+0x3dfc>
  4080f4:	mov	w25, #0x7                   	// #7
  4080f8:	b	40815c <clock_supported@plt+0x3e1c>
  4080fc:	mov	w24, w0
  408100:	mov	w0, wzr
  408104:	bl	403b30 <log_get_max_level_realm@plt>
  408108:	cmp	w0, #0x3
  40810c:	b.lt	4081e4 <clock_supported@plt+0x3ea4>  // b.tstop
  408110:	mov	w0, #0x3                   	// #3
  408114:	mov	w3, #0x169                 	// #361
  408118:	b	4081c4 <clock_supported@plt+0x3e84>
  40811c:	mov	w24, w0
  408120:	mov	w0, wzr
  408124:	bl	403b30 <log_get_max_level_realm@plt>
  408128:	cmp	w0, #0x3
  40812c:	b.lt	4081e4 <clock_supported@plt+0x3ea4>  // b.tstop
  408130:	mov	w0, #0x3                   	// #3
  408134:	mov	w3, #0x16d                 	// #365
  408138:	b	4081c4 <clock_supported@plt+0x3e84>
  40813c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408140:	sub	x0, x29, #0x20
  408144:	add	x1, x1, #0x8c2
  408148:	bl	404120 <sd_bus_error_has_name@plt>
  40814c:	cmp	w0, #0x0
  408150:	mov	w8, #0x7                   	// #7
  408154:	mov	w9, #0x4                   	// #4
  408158:	csel	w25, w9, w8, eq  // eq = none
  40815c:	mov	w0, wzr
  408160:	bl	403b30 <log_get_max_level_realm@plt>
  408164:	cmp	w0, w25
  408168:	b.lt	4081e4 <clock_supported@plt+0x3ea4>  // b.tstop
  40816c:	sub	x0, x29, #0x20
  408170:	mov	w1, w24
  408174:	bl	403f20 <bus_error_message@plt>
  408178:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  40817c:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408180:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  408184:	mov	x6, x0
  408188:	mov	w3, #0x164                 	// #356
  40818c:	mov	w0, w25
  408190:	mov	w1, w24
  408194:	add	x2, x2, #0xef
  408198:	add	x4, x4, #0x8ee
  40819c:	add	x5, x5, #0x904
  4081a0:	bl	403b40 <log_internal_realm@plt>
  4081a4:	b	4081e4 <clock_supported@plt+0x3ea4>
  4081a8:	mov	w24, w0
  4081ac:	mov	w0, wzr
  4081b0:	bl	403b30 <log_get_max_level_realm@plt>
  4081b4:	cmp	w0, #0x3
  4081b8:	b.lt	4081e4 <clock_supported@plt+0x3ea4>  // b.tstop
  4081bc:	mov	w0, #0x3                   	// #3
  4081c0:	mov	w3, #0x171                 	// #369
  4081c4:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4081c8:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  4081cc:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  4081d0:	mov	w1, w24
  4081d4:	add	x2, x2, #0xef
  4081d8:	add	x4, x4, #0x8ee
  4081dc:	add	x5, x5, #0x92c
  4081e0:	bl	403b40 <log_internal_realm@plt>
  4081e4:	ldur	x0, [x29, #-48]
  4081e8:	bl	4039b0 <free@plt>
  4081ec:	ldur	x0, [x29, #-40]
  4081f0:	bl	4039b0 <free@plt>
  4081f4:	sub	x0, x29, #0x20
  4081f8:	bl	403f30 <sd_bus_error_free@plt>
  4081fc:	ldur	x0, [x29, #-8]
  408200:	cbz	x0, 408208 <clock_supported@plt+0x3ec8>
  408204:	bl	404130 <sd_bus_message_unref@plt>
  408208:	subs	x21, x21, #0x1
  40820c:	add	x26, x26, #0x1c8
  408210:	b.ne	408010 <clock_supported@plt+0x3cd0>  // b.any
  408214:	ldr	x19, [sp, #16]
  408218:	ldr	x8, [sp, #48]
  40821c:	mov	w26, w20
  408220:	str	xzr, [sp, #48]
  408224:	str	x8, [x19]
  408228:	b	407ec0 <clock_supported@plt+0x3b80>
  40822c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408230:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408234:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408238:	add	x1, x1, #0x703
  40823c:	add	x2, x2, #0xef
  408240:	add	x4, x4, #0x6c8
  408244:	mov	w3, #0x10b                 	// #267
  408248:	b	4082a8 <clock_supported@plt+0x3f68>
  40824c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408250:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408254:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408258:	add	x1, x1, #0x6a3
  40825c:	add	x2, x2, #0xef
  408260:	add	x4, x4, #0x627
  408264:	mov	w3, #0x1c4                 	// #452
  408268:	b	4082a8 <clock_supported@plt+0x3f68>
  40826c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408270:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408274:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408278:	add	x1, x1, #0x622
  40827c:	add	x2, x2, #0xef
  408280:	add	x4, x4, #0x627
  408284:	mov	w3, #0x1a8                 	// #424
  408288:	b	4082a8 <clock_supported@plt+0x3f68>
  40828c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408290:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408294:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408298:	add	x1, x1, #0x66b
  40829c:	add	x2, x2, #0xef
  4082a0:	add	x4, x4, #0x627
  4082a4:	mov	w3, #0x1a9                 	// #425
  4082a8:	mov	w0, wzr
  4082ac:	bl	403a30 <log_assert_failed_realm@plt>
  4082b0:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  4082b4:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4082b8:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  4082bc:	add	x1, x1, #0x70b
  4082c0:	add	x2, x2, #0xef
  4082c4:	add	x4, x4, #0x6c8
  4082c8:	mov	w3, #0x11f                 	// #287
  4082cc:	b	4082a8 <clock_supported@plt+0x3f68>
  4082d0:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  4082d4:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4082d8:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  4082dc:	add	x1, x1, #0x7bc
  4082e0:	add	x2, x2, #0x7c4
  4082e4:	add	x4, x4, #0x7da
  4082e8:	mov	w3, #0x2e                  	// #46
  4082ec:	bl	403a30 <log_assert_failed_realm@plt>
  4082f0:	sub	sp, sp, #0x50
  4082f4:	stp	x29, x30, [sp, #32]
  4082f8:	stp	x22, x21, [sp, #48]
  4082fc:	stp	x20, x19, [sp, #64]
  408300:	add	x29, sp, #0x20
  408304:	cbz	x2, 4083fc <clock_supported@plt+0x40bc>
  408308:	mov	x19, x3
  40830c:	cbz	x3, 40841c <clock_supported@plt+0x40dc>
  408310:	mov	x20, x2
  408314:	mov	x21, x1
  408318:	mov	x22, x0
  40831c:	cbz	x1, 408360 <clock_supported@plt+0x4020>
  408320:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  408324:	add	x8, x8, #0x20
  408328:	ldr	q0, [x8]
  40832c:	ldr	x8, [x8, #16]
  408330:	mov	x0, sp
  408334:	mov	x1, x21
  408338:	str	q0, [sp]
  40833c:	str	x8, [sp, #16]
  408340:	bl	404140 <strv_find@plt>
  408344:	cbz	x0, 408360 <clock_supported@plt+0x4020>
  408348:	bl	403980 <colors_enabled@plt>
  40834c:	adrp	x21, 40b000 <clock_supported@plt+0x6cc0>
  408350:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  408354:	add	x21, x21, #0x497
  408358:	add	x8, x8, #0x9d3
  40835c:	b	4083c4 <clock_supported@plt+0x4084>
  408360:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408364:	add	x1, x1, #0x9bf
  408368:	mov	x0, x22
  40836c:	bl	403cd0 <strcmp_ptr@plt>
  408370:	cbnz	w0, 408388 <clock_supported@plt+0x4048>
  408374:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408378:	add	x1, x1, #0x9c2
  40837c:	mov	x0, x21
  408380:	bl	403cd0 <strcmp_ptr@plt>
  408384:	cbz	w0, 408348 <clock_supported@plt+0x4008>
  408388:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40838c:	add	x1, x1, #0x9ca
  408390:	mov	x0, x21
  408394:	bl	403cd0 <strcmp_ptr@plt>
  408398:	cbz	w0, 4083b0 <clock_supported@plt+0x4070>
  40839c:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  4083a0:	add	x8, x8, #0x497
  4083a4:	str	x8, [x19]
  4083a8:	str	x8, [x20]
  4083ac:	b	4083e8 <clock_supported@plt+0x40a8>
  4083b0:	bl	403980 <colors_enabled@plt>
  4083b4:	adrp	x21, 40b000 <clock_supported@plt+0x6cc0>
  4083b8:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  4083bc:	add	x21, x21, #0x497
  4083c0:	add	x8, x8, #0x9dd
  4083c4:	tst	w0, #0x1
  4083c8:	csel	x8, x8, x21, ne  // ne = any
  4083cc:	str	x8, [x20]
  4083d0:	bl	403980 <colors_enabled@plt>
  4083d4:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  4083d8:	add	x8, x8, #0x498
  4083dc:	tst	w0, #0x1
  4083e0:	csel	x8, x8, x21, ne  // ne = any
  4083e4:	str	x8, [x19]
  4083e8:	ldp	x20, x19, [sp, #64]
  4083ec:	ldp	x22, x21, [sp, #48]
  4083f0:	ldp	x29, x30, [sp, #32]
  4083f4:	add	sp, sp, #0x50
  4083f8:	ret
  4083fc:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408400:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408404:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408408:	add	x1, x1, #0x94c
  40840c:	add	x2, x2, #0xef
  408410:	add	x4, x4, #0x94f
  408414:	mov	w3, #0x55                  	// #85
  408418:	b	408438 <clock_supported@plt+0x40f8>
  40841c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408420:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408424:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408428:	add	x1, x1, #0x9a9
  40842c:	add	x2, x2, #0xef
  408430:	add	x4, x4, #0x94f
  408434:	mov	w3, #0x56                  	// #86
  408438:	mov	w0, wzr
  40843c:	bl	403a30 <log_assert_failed_realm@plt>
  408440:	sub	sp, sp, #0x50
  408444:	stp	x29, x30, [sp, #32]
  408448:	str	x21, [sp, #48]
  40844c:	stp	x20, x19, [sp, #64]
  408450:	add	x29, sp, #0x20
  408454:	cbz	x1, 408548 <clock_supported@plt+0x4208>
  408458:	mov	x19, x2
  40845c:	cbz	x2, 408568 <clock_supported@plt+0x4228>
  408460:	mov	x20, x1
  408464:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408468:	add	x1, x1, #0xa33
  40846c:	mov	x21, x0
  408470:	bl	403cd0 <strcmp_ptr@plt>
  408474:	cbz	w0, 4084d0 <clock_supported@plt+0x4190>
  408478:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40847c:	add	x1, x1, #0xa3e
  408480:	mov	x0, x21
  408484:	bl	403cd0 <strcmp_ptr@plt>
  408488:	cbz	w0, 4084fc <clock_supported@plt+0x41bc>
  40848c:	cbz	x21, 4084e8 <clock_supported@plt+0x41a8>
  408490:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  408494:	add	x8, x8, #0x38
  408498:	ldr	q0, [x8]
  40849c:	ldr	x8, [x8, #16]
  4084a0:	mov	x0, sp
  4084a4:	mov	x1, x21
  4084a8:	str	q0, [sp]
  4084ac:	str	x8, [sp, #16]
  4084b0:	bl	404140 <strv_find@plt>
  4084b4:	cbz	x0, 4084e8 <clock_supported@plt+0x41a8>
  4084b8:	bl	403980 <colors_enabled@plt>
  4084bc:	adrp	x21, 40b000 <clock_supported@plt+0x6cc0>
  4084c0:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  4084c4:	add	x21, x21, #0x497
  4084c8:	add	x8, x8, #0xa58
  4084cc:	b	408510 <clock_supported@plt+0x41d0>
  4084d0:	bl	403980 <colors_enabled@plt>
  4084d4:	adrp	x21, 40b000 <clock_supported@plt+0x6cc0>
  4084d8:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  4084dc:	add	x21, x21, #0x497
  4084e0:	add	x8, x8, #0x9d3
  4084e4:	b	408510 <clock_supported@plt+0x41d0>
  4084e8:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  4084ec:	add	x8, x8, #0x497
  4084f0:	str	x8, [x19]
  4084f4:	str	x8, [x20]
  4084f8:	b	408534 <clock_supported@plt+0x41f4>
  4084fc:	bl	403980 <colors_enabled@plt>
  408500:	adrp	x21, 40b000 <clock_supported@plt+0x6cc0>
  408504:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  408508:	add	x21, x21, #0x497
  40850c:	add	x8, x8, #0x9dd
  408510:	tst	w0, #0x1
  408514:	csel	x8, x8, x21, ne  // ne = any
  408518:	str	x8, [x20]
  40851c:	bl	403980 <colors_enabled@plt>
  408520:	adrp	x8, 40b000 <clock_supported@plt+0x6cc0>
  408524:	add	x8, x8, #0x498
  408528:	tst	w0, #0x1
  40852c:	csel	x8, x8, x21, ne  // ne = any
  408530:	str	x8, [x19]
  408534:	ldp	x20, x19, [sp, #64]
  408538:	ldr	x21, [sp, #48]
  40853c:	ldp	x29, x30, [sp, #32]
  408540:	add	sp, sp, #0x50
  408544:	ret
  408548:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40854c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408550:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408554:	add	x1, x1, #0x94c
  408558:	add	x2, x2, #0xef
  40855c:	add	x4, x4, #0x9ed
  408560:	mov	w3, #0x64                  	// #100
  408564:	b	408584 <clock_supported@plt+0x4244>
  408568:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40856c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408570:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408574:	add	x1, x1, #0x9a9
  408578:	add	x2, x2, #0xef
  40857c:	add	x4, x4, #0x9ed
  408580:	mov	w3, #0x65                  	// #101
  408584:	mov	w0, wzr
  408588:	bl	403a30 <log_assert_failed_realm@plt>
  40858c:	stp	x29, x30, [sp, #-32]!
  408590:	str	x19, [sp, #16]
  408594:	mov	w19, w0
  408598:	mov	x29, sp
  40859c:	cbz	x1, 4085d0 <clock_supported@plt+0x4290>
  4085a0:	mov	x8, x1
  4085a4:	add	x1, x29, #0x18
  4085a8:	mov	x0, x8
  4085ac:	bl	403fe0 <sd_device_get_devtype@plt>
  4085b0:	tbnz	w0, #31, 4085d0 <clock_supported@plt+0x4290>
  4085b4:	ldr	x0, [x29, #24]
  4085b8:	cbz	x0, 4085d0 <clock_supported@plt+0x4290>
  4085bc:	ldrb	w8, [x0]
  4085c0:	cbz	w8, 4085d0 <clock_supported@plt+0x4290>
  4085c4:	bl	403b00 <strdup@plt>
  4085c8:	mov	x19, x0
  4085cc:	b	4085f8 <clock_supported@plt+0x42b8>
  4085d0:	and	w0, w19, #0xffff
  4085d4:	bl	404150 <arphrd_to_name@plt>
  4085d8:	cbz	x0, 4085f4 <clock_supported@plt+0x42b4>
  4085dc:	bl	403b00 <strdup@plt>
  4085e0:	mov	x19, x0
  4085e4:	cbz	x0, 4085f8 <clock_supported@plt+0x42b8>
  4085e8:	mov	x0, x19
  4085ec:	bl	404160 <ascii_strlower@plt>
  4085f0:	b	4085f8 <clock_supported@plt+0x42b8>
  4085f4:	mov	x19, xzr
  4085f8:	mov	x0, x19
  4085fc:	ldr	x19, [sp, #16]
  408600:	ldp	x29, x30, [sp], #32
  408604:	ret
  408608:	ldr	w8, [x0, #96]
  40860c:	ldr	w9, [x1, #96]
  408610:	cmp	w8, w9
  408614:	cset	w8, gt
  408618:	csinv	w0, w8, wzr, ge  // ge = tcont
  40861c:	ret
  408620:	sub	sp, sp, #0xa0
  408624:	stp	x29, x30, [sp, #64]
  408628:	add	x29, sp, #0x40
  40862c:	stp	x28, x27, [sp, #80]
  408630:	stp	x26, x25, [sp, #96]
  408634:	stp	x24, x23, [sp, #112]
  408638:	stp	x22, x21, [sp, #128]
  40863c:	stp	x20, x19, [sp, #144]
  408640:	stp	xzr, xzr, [x29, #-16]
  408644:	cbz	x0, 408820 <clock_supported@plt+0x44e0>
  408648:	mov	x20, x1
  40864c:	cbz	x1, 408840 <clock_supported@plt+0x4500>
  408650:	mov	w19, w2
  408654:	sub	x3, x29, #0x8
  408658:	mov	w1, w2
  40865c:	mov	w2, wzr
  408660:	bl	404170 <local_addresses@plt>
  408664:	mov	w21, w0
  408668:	tbnz	w0, #31, 4087ec <clock_supported@plt+0x44ac>
  40866c:	sub	x1, x29, #0x10
  408670:	mov	w0, w19
  408674:	bl	404180 <sd_network_link_get_dhcp4_address@plt>
  408678:	cbz	w21, 4087ec <clock_supported@plt+0x44ac>
  40867c:	mov	w8, w21
  408680:	adrp	x28, 40b000 <clock_supported@plt+0x6cc0>
  408684:	adrp	x24, 40b000 <clock_supported@plt+0x6cc0>
  408688:	adrp	x22, 40b000 <clock_supported@plt+0x6cc0>
  40868c:	mov	x27, xzr
  408690:	add	x28, x28, #0x497
  408694:	add	x24, x24, #0xb56
  408698:	add	x22, x22, #0xb77
  40869c:	mov	w25, #0xffffffff            	// #-1
  4086a0:	lsl	x23, x8, #5
  4086a4:	cmp	x27, #0x0
  4086a8:	csel	x3, x24, x28, eq  // eq = none
  4086ac:	mov	w2, #0x1                   	// #1
  4086b0:	mov	w4, #0x18                  	// #24
  4086b4:	mov	x0, x20
  4086b8:	mov	w1, wzr
  4086bc:	stur	xzr, [x29, #-24]
  4086c0:	mov	w26, #0x1                   	// #1
  4086c4:	bl	403b10 <table_add_many_internal@plt>
  4086c8:	tbnz	w0, #31, 408758 <clock_supported@plt+0x4418>
  4086cc:	ldur	x8, [x29, #-8]
  4086d0:	sub	x2, x29, #0x18
  4086d4:	add	x1, x8, x27
  4086d8:	ldr	w0, [x1], #16
  4086dc:	bl	403e50 <in_addr_to_string@plt>
  4086e0:	tbnz	w0, #31, 408754 <clock_supported@plt+0x4414>
  4086e4:	ldur	x1, [x29, #-16]
  4086e8:	cbz	x1, 408720 <clock_supported@plt+0x43e0>
  4086ec:	ldur	x26, [x29, #-24]
  4086f0:	mov	x0, x26
  4086f4:	bl	404050 <strcmp@plt>
  4086f8:	cbnz	w0, 408720 <clock_supported@plt+0x43e0>
  4086fc:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408700:	mov	x0, x26
  408704:	add	x1, x1, #0xb5f
  408708:	mov	x2, xzr
  40870c:	bl	404190 <strjoin_real@plt>
  408710:	stur	x0, [x29, #-24]
  408714:	cbz	x0, 4087bc <clock_supported@plt+0x447c>
  408718:	mov	x0, x26
  40871c:	bl	4039b0 <free@plt>
  408720:	cmp	w19, #0x0
  408724:	b.le	408760 <clock_supported@plt+0x4420>
  408728:	ldur	x3, [x29, #-24]
  40872c:	mov	w2, #0x1                   	// #1
  408730:	mov	x4, #0xffffffffffffffff    	// #-1
  408734:	mov	x5, #0xffffffffffffffff    	// #-1
  408738:	mov	w6, #0xffffffff            	// #-1
  40873c:	mov	w7, #0xffffffff            	// #-1
  408740:	mov	x0, x20
  408744:	mov	x1, xzr
  408748:	str	w25, [sp]
  40874c:	bl	403d50 <table_add_cell_full@plt>
  408750:	b	408794 <clock_supported@plt+0x4454>
  408754:	mov	w26, #0x1                   	// #1
  408758:	mov	w21, w0
  40875c:	b	4087a0 <clock_supported@plt+0x4460>
  408760:	ldur	x8, [x29, #-8]
  408764:	ldur	x26, [x29, #-24]
  408768:	add	x1, sp, #0x14
  40876c:	mov	w2, #0x3                   	// #3
  408770:	add	x8, x8, x27
  408774:	ldr	w0, [x8, #4]
  408778:	bl	403ef0 <format_ifname_full@plt>
  40877c:	mov	x4, x0
  408780:	mov	x0, x20
  408784:	mov	x1, xzr
  408788:	mov	x2, x22
  40878c:	mov	x3, x26
  408790:	bl	403ca0 <table_add_cell_stringf@plt>
  408794:	cmp	w0, #0x0
  408798:	csel	w21, w0, w21, lt  // lt = tstop
  40879c:	lsr	w26, w0, #31
  4087a0:	ldur	x0, [x29, #-24]
  4087a4:	bl	4039b0 <free@plt>
  4087a8:	cbnz	w26, 4087ec <clock_supported@plt+0x44ac>
  4087ac:	add	x27, x27, #0x20
  4087b0:	cmp	x23, x27
  4087b4:	b.ne	4086a4 <clock_supported@plt+0x4364>  // b.any
  4087b8:	b	4087e8 <clock_supported@plt+0x44a8>
  4087bc:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  4087c0:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  4087c4:	mov	w2, #0x305                 	// #773
  4087c8:	add	x1, x1, #0xef
  4087cc:	add	x3, x3, #0xb68
  4087d0:	bl	4039a0 <log_oom_internal@plt>
  4087d4:	mov	w21, w0
  4087d8:	mov	x0, x26
  4087dc:	bl	4039b0 <free@plt>
  4087e0:	mov	w26, #0x1                   	// #1
  4087e4:	b	4087a0 <clock_supported@plt+0x4460>
  4087e8:	mov	w21, wzr
  4087ec:	ldur	x0, [x29, #-16]
  4087f0:	bl	4039b0 <free@plt>
  4087f4:	ldur	x0, [x29, #-8]
  4087f8:	bl	4039b0 <free@plt>
  4087fc:	mov	w0, w21
  408800:	ldp	x20, x19, [sp, #144]
  408804:	ldp	x22, x21, [sp, #128]
  408808:	ldp	x24, x23, [sp, #112]
  40880c:	ldp	x26, x25, [sp, #96]
  408810:	ldp	x28, x27, [sp, #80]
  408814:	ldp	x29, x30, [sp, #64]
  408818:	add	sp, sp, #0xa0
  40881c:	ret
  408820:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408824:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408828:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  40882c:	add	x1, x1, #0x622
  408830:	add	x2, x2, #0xef
  408834:	add	x4, x4, #0xb21
  408838:	mov	w3, #0x2e9                 	// #745
  40883c:	bl	403a30 <log_assert_failed_realm@plt>
  408840:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408844:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408848:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  40884c:	add	x1, x1, #0xb50
  408850:	add	x2, x2, #0xef
  408854:	add	x4, x4, #0xb21
  408858:	mov	w3, #0x2ea                 	// #746
  40885c:	mov	w0, wzr
  408860:	bl	403a30 <log_assert_failed_realm@plt>
  408864:	sub	sp, sp, #0xe0
  408868:	stp	x29, x30, [sp, #128]
  40886c:	add	x29, sp, #0x80
  408870:	stp	x28, x27, [sp, #144]
  408874:	stp	x26, x25, [sp, #160]
  408878:	stp	x24, x23, [sp, #176]
  40887c:	stp	x22, x21, [sp, #192]
  408880:	stp	x20, x19, [sp, #208]
  408884:	str	w3, [sp, #28]
  408888:	stur	xzr, [x29, #-48]
  40888c:	str	x0, [sp, #32]
  408890:	cbz	x0, 408de0 <clock_supported@plt+0x4aa0>
  408894:	mov	x20, x2
  408898:	cbz	x2, 408e00 <clock_supported@plt+0x4ac0>
  40889c:	mov	x21, x1
  4088a0:	ldr	x0, [sp, #32]
  4088a4:	ldr	w1, [sp, #28]
  4088a8:	sub	x3, x29, #0x30
  4088ac:	mov	w2, wzr
  4088b0:	bl	4041a0 <local_gateways@plt>
  4088b4:	mov	w26, w0
  4088b8:	tbnz	w0, #31, 408d74 <clock_supported@plt+0x4a34>
  4088bc:	cbz	w26, 408d74 <clock_supported@plt+0x4a34>
  4088c0:	adrp	x19, 40b000 <clock_supported@plt+0x6cc0>
  4088c4:	adrp	x22, 40b000 <clock_supported@plt+0x6cc0>
  4088c8:	mov	x24, xzr
  4088cc:	mov	w23, w26
  4088d0:	add	x19, x19, #0x497
  4088d4:	add	x22, x22, #0xbb9
  4088d8:	str	x21, [sp, #8]
  4088dc:	cmp	x24, #0x0
  4088e0:	csel	x3, x22, x19, eq  // eq = none
  4088e4:	mov	w2, #0x1                   	// #1
  4088e8:	mov	w4, #0x18                  	// #24
  4088ec:	mov	x0, x20
  4088f0:	mov	w1, wzr
  4088f4:	stur	xzr, [x29, #-56]
  4088f8:	str	xzr, [sp, #64]
  4088fc:	bl	403b10 <table_add_many_internal@plt>
  408900:	tbnz	w0, #31, 408c00 <clock_supported@plt+0x48c0>
  408904:	ldur	x8, [x29, #-48]
  408908:	sub	x2, x29, #0x38
  40890c:	add	x1, x8, x24, lsl #5
  408910:	ldr	w0, [x1], #16
  408914:	bl	403e50 <in_addr_to_string@plt>
  408918:	tbnz	w0, #31, 408c00 <clock_supported@plt+0x48c0>
  40891c:	ldur	x8, [x29, #-48]
  408920:	add	x25, x8, x24, lsl #5
  408924:	ldp	w27, w21, [x25]
  408928:	stp	xzr, xzr, [x29, #-16]
  40892c:	tbnz	w21, #31, 408da0 <clock_supported@plt+0x4a60>
  408930:	orr	w8, w27, #0x8
  408934:	cmp	w8, #0xa
  408938:	b.ne	408dc0 <clock_supported@plt+0x4a80>  // b.any
  40893c:	ldr	x0, [sp, #32]
  408940:	sub	x1, x29, #0x8
  408944:	mov	w2, #0x1e                  	// #30
  408948:	mov	w3, w21
  40894c:	mov	w4, w27
  408950:	bl	4041b0 <sd_rtnl_message_new_neigh@plt>
  408954:	tbnz	w0, #31, 408c10 <clock_supported@plt+0x48d0>
  408958:	ldur	x0, [x29, #-8]
  40895c:	mov	w1, #0x1                   	// #1
  408960:	bl	403df0 <sd_netlink_message_request_dump@plt>
  408964:	tbnz	w0, #31, 408c10 <clock_supported@plt+0x48d0>
  408968:	ldur	x1, [x29, #-8]
  40896c:	ldr	x0, [sp, #32]
  408970:	sub	x3, x29, #0x10
  408974:	mov	x2, xzr
  408978:	bl	403e00 <sd_netlink_call@plt>
  40897c:	tbnz	w0, #31, 408c10 <clock_supported@plt+0x48d0>
  408980:	ldur	x28, [x29, #-16]
  408984:	cbz	x28, 408d68 <clock_supported@plt+0x4a28>
  408988:	add	x8, x25, #0x10
  40898c:	str	x8, [sp, #16]
  408990:	mov	x0, x28
  408994:	stp	xzr, xzr, [sp, #40]
  408998:	sturh	wzr, [x29, #-20]
  40899c:	stur	wzr, [x29, #-24]
  4089a0:	bl	403e20 <sd_netlink_message_get_errno@plt>
  4089a4:	tbnz	w0, #31, 408a30 <clock_supported@plt+0x46f0>
  4089a8:	sub	x1, x29, #0x1c
  4089ac:	mov	x0, x28
  4089b0:	bl	403f50 <sd_netlink_message_get_type@plt>
  4089b4:	tbnz	w0, #31, 408a6c <clock_supported@plt+0x472c>
  4089b8:	ldurh	w8, [x29, #-28]
  4089bc:	cmp	w8, #0x1c
  4089c0:	b.ne	408aa8 <clock_supported@plt+0x4768>  // b.any
  4089c4:	sub	x1, x29, #0x24
  4089c8:	mov	x0, x28
  4089cc:	bl	4041c0 <sd_rtnl_message_neigh_get_family@plt>
  4089d0:	tbnz	w0, #31, 408ae0 <clock_supported@plt+0x47a0>
  4089d4:	ldur	w8, [x29, #-36]
  4089d8:	cmp	w8, w27
  4089dc:	b.ne	408b1c <clock_supported@plt+0x47dc>  // b.any
  4089e0:	sub	x1, x29, #0x20
  4089e4:	mov	x0, x28
  4089e8:	bl	4041d0 <sd_rtnl_message_neigh_get_ifindex@plt>
  4089ec:	tbnz	w0, #31, 408b54 <clock_supported@plt+0x4814>
  4089f0:	cmp	w21, #0x1
  4089f4:	b.lt	408a04 <clock_supported@plt+0x46c4>  // b.tstop
  4089f8:	ldur	w8, [x29, #-32]
  4089fc:	cmp	w8, w21
  408a00:	b.ne	408b90 <clock_supported@plt+0x4850>  // b.any
  408a04:	ldur	w8, [x29, #-36]
  408a08:	cmp	w8, #0xa
  408a0c:	b.eq	408ba4 <clock_supported@plt+0x4864>  // b.none
  408a10:	cmp	w8, #0x2
  408a14:	b.ne	408b90 <clock_supported@plt+0x4850>  // b.any
  408a18:	add	x2, sp, #0x28
  408a1c:	mov	w1, #0x1                   	// #1
  408a20:	mov	x0, x28
  408a24:	bl	404060 <sd_netlink_message_read_in_addr@plt>
  408a28:	tbz	w0, #31, 408bb8 <clock_supported@plt+0x4878>
  408a2c:	b	408b90 <clock_supported@plt+0x4850>
  408a30:	mov	w25, w0
  408a34:	mov	w0, wzr
  408a38:	bl	403b30 <log_get_max_level_realm@plt>
  408a3c:	cmp	w0, #0x3
  408a40:	b.lt	408b90 <clock_supported@plt+0x4850>  // b.tstop
  408a44:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408a48:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408a4c:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  408a50:	mov	w0, #0x3                   	// #3
  408a54:	mov	w3, #0x265                 	// #613
  408a58:	mov	w1, w25
  408a5c:	add	x2, x2, #0xef
  408a60:	add	x4, x4, #0xc8c
  408a64:	add	x5, x5, #0xca4
  408a68:	b	408b8c <clock_supported@plt+0x484c>
  408a6c:	mov	w25, w0
  408a70:	mov	w0, wzr
  408a74:	bl	403b30 <log_get_max_level_realm@plt>
  408a78:	cmp	w0, #0x3
  408a7c:	b.lt	408b90 <clock_supported@plt+0x4850>  // b.tstop
  408a80:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408a84:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408a88:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  408a8c:	mov	w0, #0x3                   	// #3
  408a90:	mov	w3, #0x26b                 	// #619
  408a94:	mov	w1, w25
  408a98:	add	x2, x2, #0xef
  408a9c:	add	x4, x4, #0xc8c
  408aa0:	add	x5, x5, #0xcb2
  408aa4:	b	408b8c <clock_supported@plt+0x484c>
  408aa8:	mov	w0, wzr
  408aac:	bl	403b30 <log_get_max_level_realm@plt>
  408ab0:	cmp	w0, #0x3
  408ab4:	b.lt	408b90 <clock_supported@plt+0x4850>  // b.tstop
  408ab8:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408abc:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408ac0:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  408ac4:	mov	w0, #0x3                   	// #3
  408ac8:	mov	w3, #0x270                 	// #624
  408acc:	mov	w1, wzr
  408ad0:	add	x2, x2, #0xef
  408ad4:	add	x4, x4, #0xc8c
  408ad8:	add	x5, x5, #0xcc9
  408adc:	b	408b8c <clock_supported@plt+0x484c>
  408ae0:	mov	w25, w0
  408ae4:	mov	w0, wzr
  408ae8:	bl	403b30 <log_get_max_level_realm@plt>
  408aec:	cmp	w0, #0x3
  408af0:	b.lt	408b90 <clock_supported@plt+0x4850>  // b.tstop
  408af4:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408af8:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408afc:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  408b00:	mov	w0, #0x3                   	// #3
  408b04:	mov	w3, #0x276                 	// #630
  408b08:	mov	w1, w25
  408b0c:	add	x2, x2, #0xef
  408b10:	add	x4, x4, #0xc8c
  408b14:	add	x5, x5, #0xce2
  408b18:	b	408b8c <clock_supported@plt+0x484c>
  408b1c:	mov	w0, wzr
  408b20:	bl	403b30 <log_get_max_level_realm@plt>
  408b24:	cmp	w0, #0x3
  408b28:	b.lt	408b90 <clock_supported@plt+0x4850>  // b.tstop
  408b2c:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408b30:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408b34:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  408b38:	mov	w0, #0x3                   	// #3
  408b3c:	mov	w3, #0x27b                 	// #635
  408b40:	mov	w1, wzr
  408b44:	add	x2, x2, #0xef
  408b48:	add	x4, x4, #0xc8c
  408b4c:	add	x5, x5, #0xcfb
  408b50:	b	408b8c <clock_supported@plt+0x484c>
  408b54:	mov	w25, w0
  408b58:	mov	w0, wzr
  408b5c:	bl	403b30 <log_get_max_level_realm@plt>
  408b60:	cmp	w0, #0x3
  408b64:	b.lt	408b90 <clock_supported@plt+0x4850>  // b.tstop
  408b68:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408b6c:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408b70:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  408b74:	mov	w0, #0x3                   	// #3
  408b78:	mov	w3, #0x281                 	// #641
  408b7c:	mov	w1, w25
  408b80:	add	x2, x2, #0xef
  408b84:	add	x4, x4, #0xc8c
  408b88:	add	x5, x5, #0xd11
  408b8c:	bl	403b40 <log_internal_realm@plt>
  408b90:	mov	x0, x28
  408b94:	bl	403e70 <sd_netlink_message_next@plt>
  408b98:	mov	x28, x0
  408b9c:	cbnz	x0, 408990 <clock_supported@plt+0x4650>
  408ba0:	b	408d60 <clock_supported@plt+0x4a20>
  408ba4:	add	x2, sp, #0x28
  408ba8:	mov	w1, #0x1                   	// #1
  408bac:	mov	x0, x28
  408bb0:	bl	403e40 <sd_netlink_message_read_in6_addr@plt>
  408bb4:	tbnz	w0, #31, 408b90 <clock_supported@plt+0x4850>
  408bb8:	ldur	w0, [x29, #-36]
  408bbc:	ldr	x2, [sp, #16]
  408bc0:	add	x1, sp, #0x28
  408bc4:	bl	4041e0 <in_addr_equal@plt>
  408bc8:	cbz	w0, 408b90 <clock_supported@plt+0x4850>
  408bcc:	sub	x3, x29, #0x18
  408bd0:	mov	w1, #0x2                   	// #2
  408bd4:	mov	w2, #0x6                   	// #6
  408bd8:	mov	x0, x28
  408bdc:	bl	404030 <sd_netlink_message_read@plt>
  408be0:	tbnz	w0, #31, 408b90 <clock_supported@plt+0x4850>
  408be4:	ldr	x0, [sp, #8]
  408be8:	sub	x1, x29, #0x18
  408bec:	add	x2, sp, #0x40
  408bf0:	bl	408ea4 <clock_supported@plt+0x4b64>
  408bf4:	tbnz	w0, #31, 408b90 <clock_supported@plt+0x4850>
  408bf8:	mov	w28, wzr
  408bfc:	b	408c14 <clock_supported@plt+0x48d4>
  408c00:	mov	x21, xzr
  408c04:	mov	w25, wzr
  408c08:	mov	w26, w0
  408c0c:	b	408d34 <clock_supported@plt+0x49f4>
  408c10:	mov	w28, w0
  408c14:	ldur	x0, [x29, #-16]
  408c18:	cbz	x0, 408c20 <clock_supported@plt+0x48e0>
  408c1c:	bl	403e80 <sd_netlink_message_unref@plt>
  408c20:	ldur	x0, [x29, #-8]
  408c24:	cbz	x0, 408c2c <clock_supported@plt+0x48ec>
  408c28:	bl	403e80 <sd_netlink_message_unref@plt>
  408c2c:	tbz	w28, #31, 408c68 <clock_supported@plt+0x4928>
  408c30:	mov	w0, wzr
  408c34:	bl	403b30 <log_get_max_level_realm@plt>
  408c38:	cmp	w0, #0x7
  408c3c:	b.lt	408c68 <clock_supported@plt+0x4928>  // b.tstop
  408c40:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408c44:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408c48:	adrp	x5, 40b000 <clock_supported@plt+0x6cc0>
  408c4c:	mov	w0, #0x7                   	// #7
  408c50:	mov	w3, #0x2c8                 	// #712
  408c54:	mov	w1, w28
  408c58:	add	x2, x2, #0xef
  408c5c:	add	x4, x4, #0xbc2
  408c60:	add	x5, x5, #0xbd0
  408c64:	bl	403b40 <log_internal_realm@plt>
  408c68:	ldr	x2, [sp, #64]
  408c6c:	cbz	x2, 408ca0 <clock_supported@plt+0x4960>
  408c70:	ldur	x0, [x29, #-56]
  408c74:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408c78:	adrp	x3, 40b000 <clock_supported@plt+0x6cc0>
  408c7c:	add	x1, x1, #0xbf9
  408c80:	add	x3, x3, #0xbfc
  408c84:	mov	x4, xzr
  408c88:	bl	404190 <strjoin_real@plt>
  408c8c:	mov	x21, x0
  408c90:	cbnz	x0, 408ca4 <clock_supported@plt+0x4964>
  408c94:	mov	w25, wzr
  408c98:	mov	w26, #0xfffffff4            	// #-12
  408c9c:	b	408d34 <clock_supported@plt+0x49f4>
  408ca0:	mov	x21, xzr
  408ca4:	ldr	w8, [sp, #28]
  408ca8:	cmp	w8, #0x0
  408cac:	b.le	408ce8 <clock_supported@plt+0x49a8>
  408cb0:	ldur	x8, [x29, #-56]
  408cb4:	cmp	x21, #0x0
  408cb8:	mov	w2, #0x1                   	// #1
  408cbc:	mov	x4, #0xffffffffffffffff    	// #-1
  408cc0:	csel	x3, x8, x21, eq  // eq = none
  408cc4:	mov	x5, #0xffffffffffffffff    	// #-1
  408cc8:	mov	w6, #0xffffffff            	// #-1
  408ccc:	mov	w7, #0xffffffff            	// #-1
  408cd0:	mov	w8, #0xffffffff            	// #-1
  408cd4:	mov	x0, x20
  408cd8:	mov	x1, xzr
  408cdc:	str	w8, [sp]
  408ce0:	bl	403d50 <table_add_cell_full@plt>
  408ce4:	b	408d24 <clock_supported@plt+0x49e4>
  408ce8:	ldp	x9, x8, [x29, #-56]
  408cec:	cmp	x21, #0x0
  408cf0:	add	x1, sp, #0x28
  408cf4:	mov	w2, #0x3                   	// #3
  408cf8:	add	x8, x8, x24, lsl #5
  408cfc:	ldr	w0, [x8, #4]
  408d00:	csel	x25, x9, x21, eq  // eq = none
  408d04:	bl	403ef0 <format_ifname_full@plt>
  408d08:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408d0c:	mov	x4, x0
  408d10:	mov	x0, x20
  408d14:	mov	x1, xzr
  408d18:	add	x2, x2, #0xb77
  408d1c:	mov	x3, x25
  408d20:	bl	403ca0 <table_add_cell_stringf@plt>
  408d24:	mvn	w8, w0
  408d28:	cmp	w0, #0x0
  408d2c:	lsr	w25, w8, #31
  408d30:	csel	w26, w0, w26, lt  // lt = tstop
  408d34:	mov	x0, x21
  408d38:	bl	4039b0 <free@plt>
  408d3c:	ldr	x0, [sp, #64]
  408d40:	bl	4039b0 <free@plt>
  408d44:	ldur	x0, [x29, #-56]
  408d48:	bl	4039b0 <free@plt>
  408d4c:	tbz	w25, #0, 408d74 <clock_supported@plt+0x4a34>
  408d50:	add	x24, x24, #0x1
  408d54:	cmp	x24, x23
  408d58:	b.ne	4088dc <clock_supported@plt+0x459c>  // b.any
  408d5c:	b	408d70 <clock_supported@plt+0x4a30>
  408d60:	mov	w28, #0xffffffc3            	// #-61
  408d64:	b	408c14 <clock_supported@plt+0x48d4>
  408d68:	mov	w28, #0xffffffc3            	// #-61
  408d6c:	b	408c20 <clock_supported@plt+0x48e0>
  408d70:	mov	w26, wzr
  408d74:	ldur	x0, [x29, #-48]
  408d78:	bl	4039b0 <free@plt>
  408d7c:	mov	w0, w26
  408d80:	ldp	x20, x19, [sp, #208]
  408d84:	ldp	x22, x21, [sp, #192]
  408d88:	ldp	x24, x23, [sp, #176]
  408d8c:	ldp	x26, x25, [sp, #160]
  408d90:	ldp	x28, x27, [sp, #144]
  408d94:	ldp	x29, x30, [sp, #128]
  408d98:	add	sp, sp, #0xe0
  408d9c:	ret
  408da0:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408da4:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408da8:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408dac:	add	x1, x1, #0xc5d
  408db0:	add	x2, x2, #0xef
  408db4:	add	x4, x4, #0xbfe
  408db8:	mov	w3, #0x24c                 	// #588
  408dbc:	b	408e1c <clock_supported@plt+0x4adc>
  408dc0:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408dc4:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408dc8:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408dcc:	add	x1, x1, #0xc6a
  408dd0:	add	x2, x2, #0xef
  408dd4:	add	x4, x4, #0xbfe
  408dd8:	mov	w3, #0x24d                 	// #589
  408ddc:	b	408e1c <clock_supported@plt+0x4adc>
  408de0:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408de4:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408de8:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408dec:	add	x1, x1, #0x622
  408df0:	add	x2, x2, #0xef
  408df4:	add	x4, x4, #0xb80
  408df8:	mov	w3, #0x2b2                 	// #690
  408dfc:	bl	403a30 <log_assert_failed_realm@plt>
  408e00:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408e04:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408e08:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408e0c:	add	x1, x1, #0xb50
  408e10:	add	x2, x2, #0xef
  408e14:	add	x4, x4, #0xb80
  408e18:	mov	w3, #0x2b3                 	// #691
  408e1c:	mov	w0, wzr
  408e20:	bl	403a30 <log_assert_failed_realm@plt>
  408e24:	stp	x29, x30, [sp, #-64]!
  408e28:	str	x23, [sp, #16]
  408e2c:	stp	x22, x21, [sp, #32]
  408e30:	stp	x20, x19, [sp, #48]
  408e34:	mov	x29, sp
  408e38:	cbz	x2, 408e8c <clock_supported@plt+0x4b4c>
  408e3c:	ldr	x5, [x2]
  408e40:	cbz	x5, 408e8c <clock_supported@plt+0x4b4c>
  408e44:	adrp	x23, 40b000 <clock_supported@plt+0x6cc0>
  408e48:	mov	x19, x1
  408e4c:	mov	x20, x0
  408e50:	mov	x21, xzr
  408e54:	add	x22, x2, #0x8
  408e58:	add	x23, x23, #0x497
  408e5c:	cmp	x21, #0x0
  408e60:	csel	x3, x19, x23, eq  // eq = none
  408e64:	mov	w2, #0x1                   	// #1
  408e68:	mov	w4, #0x1                   	// #1
  408e6c:	mov	w6, #0x18                  	// #24
  408e70:	mov	x0, x20
  408e74:	mov	w1, wzr
  408e78:	bl	403b10 <table_add_many_internal@plt>
  408e7c:	tbnz	w0, #31, 408e90 <clock_supported@plt+0x4b50>
  408e80:	ldr	x5, [x22, x21]
  408e84:	add	x21, x21, #0x8
  408e88:	cbnz	x5, 408e5c <clock_supported@plt+0x4b1c>
  408e8c:	mov	w0, wzr
  408e90:	ldp	x20, x19, [sp, #48]
  408e94:	ldp	x22, x21, [sp, #32]
  408e98:	ldr	x23, [sp, #16]
  408e9c:	ldp	x29, x30, [sp], #64
  408ea0:	ret
  408ea4:	sub	sp, sp, #0x50
  408ea8:	stp	x29, x30, [sp, #48]
  408eac:	stp	x20, x19, [sp, #64]
  408eb0:	add	x29, sp, #0x30
  408eb4:	cbz	x2, 408f6c <clock_supported@plt+0x4c2c>
  408eb8:	mov	x20, x0
  408ebc:	mov	w0, #0xffffffea            	// #-22
  408ec0:	cbz	x20, 408f5c <clock_supported@plt+0x4c1c>
  408ec4:	cbz	x1, 408f5c <clock_supported@plt+0x4c1c>
  408ec8:	ldrh	w8, [x1]
  408ecc:	ldrb	w9, [x1, #2]
  408ed0:	orr	w8, w8, w9
  408ed4:	tst	w8, #0xffff
  408ed8:	b.eq	408f50 <clock_supported@plt+0x4c10>  // b.none
  408edc:	ldrb	w3, [x1]
  408ee0:	ldrb	w4, [x1, #1]
  408ee4:	ldrb	w5, [x1, #2]
  408ee8:	ldrb	w6, [x1, #3]
  408eec:	ldrb	w7, [x1, #4]
  408ef0:	ldrb	w8, [x1, #5]
  408ef4:	mov	x19, x2
  408ef8:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408efc:	add	x2, x2, #0xd67
  408f00:	add	x0, sp, #0x14
  408f04:	mov	w1, #0x11                  	// #17
  408f08:	str	w8, [sp]
  408f0c:	bl	403cc0 <snprintf@plt>
  408f10:	cmp	w0, #0x11
  408f14:	b.cs	408f8c <clock_supported@plt+0x4c4c>  // b.hs, b.nlast
  408f18:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408f1c:	add	x2, x2, #0xdac
  408f20:	add	x1, sp, #0x14
  408f24:	sub	x3, x29, #0x8
  408f28:	mov	x0, x20
  408f2c:	bl	4041f0 <sd_hwdb_get@plt>
  408f30:	tbnz	w0, #31, 408f5c <clock_supported@plt+0x4c1c>
  408f34:	ldur	x0, [x29, #-8]
  408f38:	bl	403b00 <strdup@plt>
  408f3c:	cbz	x0, 408f58 <clock_supported@plt+0x4c18>
  408f40:	mov	x8, x0
  408f44:	mov	w0, wzr
  408f48:	str	x8, [x19]
  408f4c:	b	408f5c <clock_supported@plt+0x4c1c>
  408f50:	mov	w0, #0xffffffea            	// #-22
  408f54:	b	408f5c <clock_supported@plt+0x4c1c>
  408f58:	mov	w0, #0xfffffff4            	// #-12
  408f5c:	ldp	x20, x19, [sp, #64]
  408f60:	ldp	x29, x30, [sp, #48]
  408f64:	add	sp, sp, #0x50
  408f68:	ret
  408f6c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408f70:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408f74:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408f78:	add	x1, x1, #0x66b
  408f7c:	add	x2, x2, #0xef
  408f80:	add	x4, x4, #0xd2b
  408f84:	mov	w3, #0x224                 	// #548
  408f88:	b	408fa8 <clock_supported@plt+0x4c68>
  408f8c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  408f90:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  408f94:	adrp	x4, 40b000 <clock_supported@plt+0x6cc0>
  408f98:	add	x1, x1, #0xd84
  408f9c:	add	x2, x2, #0xef
  408fa0:	add	x4, x4, #0xd2b
  408fa4:	mov	w3, #0x231                 	// #561
  408fa8:	mov	w0, wzr
  408fac:	bl	403a30 <log_assert_failed_realm@plt>
  408fb0:	stp	x29, x30, [sp, #-64]!
  408fb4:	str	x23, [sp, #16]
  408fb8:	stp	x22, x21, [sp, #32]
  408fbc:	stp	x20, x19, [sp, #48]
  408fc0:	mov	x29, sp
  408fc4:	cbz	x1, 40903c <clock_supported@plt+0x4cfc>
  408fc8:	mov	x19, x2
  408fcc:	cbz	x2, 409024 <clock_supported@plt+0x4ce4>
  408fd0:	ldr	w5, [x19]
  408fd4:	cmp	w5, #0x1
  408fd8:	b.lt	409024 <clock_supported@plt+0x4ce4>  // b.tstop
  408fdc:	adrp	x23, 40b000 <clock_supported@plt+0x6cc0>
  408fe0:	mov	x20, x1
  408fe4:	mov	x21, x0
  408fe8:	mov	w22, #0x1                   	// #1
  408fec:	add	x23, x23, #0x497
  408ff0:	cmp	w22, #0x1
  408ff4:	csel	x3, x20, x23, eq  // eq = none
  408ff8:	mov	w2, #0x1                   	// #1
  408ffc:	mov	w4, #0x15                  	// #21
  409000:	mov	w6, #0x18                  	// #24
  409004:	mov	x0, x21
  409008:	mov	w1, wzr
  40900c:	bl	403b10 <table_add_many_internal@plt>
  409010:	tbnz	w0, #31, 409028 <clock_supported@plt+0x4ce8>
  409014:	ldr	w5, [x19, w22, uxtw #2]
  409018:	add	w22, w22, #0x1
  40901c:	cmp	w5, #0x1
  409020:	b.ge	408ff0 <clock_supported@plt+0x4cb0>  // b.tcont
  409024:	mov	w0, wzr
  409028:	ldp	x20, x19, [sp, #48]
  40902c:	ldp	x22, x21, [sp, #32]
  409030:	ldr	x23, [sp, #16]
  409034:	ldp	x29, x30, [sp], #64
  409038:	ret
  40903c:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  409040:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  409044:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409048:	add	x1, x1, #0x97
  40904c:	add	x2, x2, #0xef
  409050:	add	x4, x4, #0x9e
  409054:	mov	w3, #0x3d6                 	// #982
  409058:	mov	w0, wzr
  40905c:	bl	403a30 <log_assert_failed_realm@plt>
  409060:	sub	sp, sp, #0x30
  409064:	stp	x20, x19, [sp, #32]
  409068:	mov	x19, x1
  40906c:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  409070:	mov	w2, w0
  409074:	add	x1, x1, #0x129
  409078:	add	x0, sp, #0x8
  40907c:	stp	x29, x30, [sp, #16]
  409080:	add	x29, sp, #0x10
  409084:	str	xzr, [sp, #8]
  409088:	bl	4040d0 <asprintf@plt>
  40908c:	tbnz	w0, #31, 4090b0 <clock_supported@plt+0x4d70>
  409090:	ldr	x0, [sp, #8]
  409094:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  409098:	add	x1, x1, #0x144
  40909c:	bl	404200 <fopen64@plt>
  4090a0:	cbz	x0, 4090b8 <clock_supported@plt+0x4d78>
  4090a4:	mov	w20, wzr
  4090a8:	str	x0, [x19]
  4090ac:	b	4090c4 <clock_supported@plt+0x4d84>
  4090b0:	mov	w20, #0xfffffff4            	// #-12
  4090b4:	b	4090c4 <clock_supported@plt+0x4d84>
  4090b8:	bl	404210 <__errno_location@plt>
  4090bc:	ldr	w8, [x0]
  4090c0:	neg	w20, w8
  4090c4:	ldr	x0, [sp, #8]
  4090c8:	bl	4039b0 <free@plt>
  4090cc:	mov	w0, w20
  4090d0:	ldp	x20, x19, [sp, #32]
  4090d4:	ldp	x29, x30, [sp, #16]
  4090d8:	add	sp, sp, #0x30
  4090dc:	ret
  4090e0:	sub	sp, sp, #0x40
  4090e4:	stp	x29, x30, [sp, #16]
  4090e8:	stp	x22, x21, [sp, #32]
  4090ec:	stp	x20, x19, [sp, #48]
  4090f0:	add	x29, sp, #0x10
  4090f4:	cbz	x0, 4091c8 <clock_supported@plt+0x4e88>
  4090f8:	mov	x20, x1
  4090fc:	cbz	x1, 4091e8 <clock_supported@plt+0x4ea8>
  409100:	mov	x21, x0
  409104:	add	x0, sp, #0x8
  409108:	mov	w1, #0x1                   	// #1
  40910c:	mov	w2, #0x8                   	// #8
  409110:	mov	x3, x21
  409114:	bl	404220 <fread@plt>
  409118:	cmp	x0, #0x8
  40911c:	b.eq	409140 <clock_supported@plt+0x4e00>  // b.none
  409120:	cbnz	x0, 40914c <clock_supported@plt+0x4e0c>
  409124:	mov	x0, x21
  409128:	bl	404230 <feof@plt>
  40912c:	cmp	w0, #0x0
  409130:	mov	w8, #0xffffffb6            	// #-74
  409134:	mov	x19, xzr
  409138:	csel	w20, w8, wzr, eq  // eq = none
  40913c:	b	409154 <clock_supported@plt+0x4e14>
  409140:	ldr	x22, [sp, #8]
  409144:	cmp	x22, #0xfff
  409148:	b.ls	409174 <clock_supported@plt+0x4e34>  // b.plast
  40914c:	mov	x19, xzr
  409150:	mov	w20, #0xffffffb6            	// #-74
  409154:	mov	x0, x19
  409158:	bl	4039b0 <free@plt>
  40915c:	mov	w0, w20
  409160:	ldp	x20, x19, [sp, #48]
  409164:	ldp	x22, x21, [sp, #32]
  409168:	ldp	x29, x30, [sp, #16]
  40916c:	add	sp, sp, #0x40
  409170:	ret
  409174:	cmp	x22, #0x0
  409178:	csinc	x0, x22, xzr, ne  // ne = any
  40917c:	bl	403da0 <malloc@plt>
  409180:	mov	x19, x0
  409184:	cbz	x0, 4091c0 <clock_supported@plt+0x4e80>
  409188:	mov	w1, #0x1                   	// #1
  40918c:	mov	x0, x19
  409190:	mov	x2, x22
  409194:	mov	x3, x21
  409198:	bl	404220 <fread@plt>
  40919c:	cmp	x0, x22
  4091a0:	b.ne	409150 <clock_supported@plt+0x4e10>  // b.any
  4091a4:	mov	x0, x20
  4091a8:	mov	x1, x19
  4091ac:	mov	x2, x22
  4091b0:	bl	40a6e8 <clock_supported@plt+0x63a8>
  4091b4:	cmp	w0, #0x0
  4091b8:	csinc	w20, w0, wzr, lt  // lt = tstop
  4091bc:	b	409154 <clock_supported@plt+0x4e14>
  4091c0:	mov	w20, #0xfffffff4            	// #-12
  4091c4:	b	409154 <clock_supported@plt+0x4e14>
  4091c8:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  4091cc:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4091d0:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4091d4:	add	x1, x1, #0x147
  4091d8:	add	x2, x2, #0xef
  4091dc:	add	x4, x4, #0x149
  4091e0:	mov	w3, #0x386                 	// #902
  4091e4:	bl	403a30 <log_assert_failed_realm@plt>
  4091e8:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  4091ec:	adrp	x2, 40b000 <clock_supported@plt+0x6cc0>
  4091f0:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4091f4:	add	x1, x1, #0x66b
  4091f8:	add	x2, x2, #0xef
  4091fc:	add	x4, x4, #0x149
  409200:	mov	w3, #0x387                 	// #903
  409204:	mov	w0, wzr
  409208:	bl	403a30 <log_assert_failed_realm@plt>
  40920c:	stp	x29, x30, [sp, #-48]!
  409210:	stp	x22, x21, [sp, #16]
  409214:	stp	x20, x19, [sp, #32]
  409218:	ldr	x21, [x0, #8]
  40921c:	ldr	x22, [x1, #8]
  409220:	mov	x19, x1
  409224:	mov	x20, x0
  409228:	mov	x29, sp
  40922c:	cmp	x21, x22
  409230:	csel	x2, x21, x22, cc  // cc = lo, ul, last
  409234:	cbz	x2, 409264 <clock_supported@plt+0x4f24>
  409238:	ldr	x0, [x20]
  40923c:	cbz	x0, 4092d4 <clock_supported@plt+0x4f94>
  409240:	ldr	x1, [x19]
  409244:	cbz	x1, 4092f4 <clock_supported@plt+0x4fb4>
  409248:	bl	404240 <memcmp@plt>
  40924c:	cmp	x21, x22
  409250:	cset	w8, hi  // hi = pmore
  409254:	csinv	w8, w8, wzr, cs  // cs = hs, nlast
  409258:	cbnz	w0, 409278 <clock_supported@plt+0x4f38>
  40925c:	mov	w0, w8
  409260:	b	409274 <clock_supported@plt+0x4f34>
  409264:	cset	w0, hi  // hi = pmore
  409268:	b.cs	409274 <clock_supported@plt+0x4f34>  // b.hs, b.nlast
  40926c:	mov	w0, #0xffffffff            	// #-1
  409270:	b	409278 <clock_supported@plt+0x4f38>
  409274:	cbz	w0, 409288 <clock_supported@plt+0x4f48>
  409278:	ldp	x20, x19, [sp, #32]
  40927c:	ldp	x22, x21, [sp, #16]
  409280:	ldp	x29, x30, [sp], #48
  409284:	ret
  409288:	ldr	x21, [x20, #24]
  40928c:	ldr	x22, [x19, #24]
  409290:	cmp	x21, x22
  409294:	csel	x2, x21, x22, cc  // cc = lo, ul, last
  409298:	cbz	x2, 4092c8 <clock_supported@plt+0x4f88>
  40929c:	ldr	x0, [x20, #16]
  4092a0:	cbz	x0, 4092d4 <clock_supported@plt+0x4f94>
  4092a4:	ldr	x1, [x19, #16]
  4092a8:	cbz	x1, 4092f4 <clock_supported@plt+0x4fb4>
  4092ac:	bl	404240 <memcmp@plt>
  4092b0:	cmp	x21, x22
  4092b4:	cset	w8, hi  // hi = pmore
  4092b8:	csinv	w8, w8, wzr, cs  // cs = hs, nlast
  4092bc:	cbnz	w0, 409278 <clock_supported@plt+0x4f38>
  4092c0:	mov	w0, w8
  4092c4:	b	409278 <clock_supported@plt+0x4f38>
  4092c8:	cset	w8, hi  // hi = pmore
  4092cc:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  4092d0:	b	409278 <clock_supported@plt+0x4f38>
  4092d4:	adrp	x1, 40d000 <clock_supported@plt+0x8cc0>
  4092d8:	adrp	x2, 40d000 <clock_supported@plt+0x8cc0>
  4092dc:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  4092e0:	add	x1, x1, #0x22a
  4092e4:	add	x2, x2, #0x230
  4092e8:	add	x4, x4, #0x248
  4092ec:	mov	w3, #0x1c                  	// #28
  4092f0:	bl	403a30 <log_assert_failed_realm@plt>
  4092f4:	adrp	x1, 40d000 <clock_supported@plt+0x8cc0>
  4092f8:	adrp	x2, 40d000 <clock_supported@plt+0x8cc0>
  4092fc:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  409300:	add	x1, x1, #0x27c
  409304:	add	x2, x2, #0x230
  409308:	add	x4, x4, #0x248
  40930c:	mov	w3, #0x1d                  	// #29
  409310:	mov	w0, wzr
  409314:	bl	403a30 <log_assert_failed_realm@plt>
  409318:	stp	x29, x30, [sp, #-48]!
  40931c:	stp	x20, x19, [sp, #32]
  409320:	mov	x19, x0
  409324:	str	x21, [sp, #16]
  409328:	mov	x20, x19
  40932c:	ldr	x0, [x0]
  409330:	ldr	x8, [x20, #8]!
  409334:	mov	x21, x1
  409338:	mov	x2, x21
  40933c:	mov	x29, sp
  409340:	mov	x1, x8
  409344:	bl	404250 <siphash24_compress@plt>
  409348:	mov	w1, #0x8                   	// #8
  40934c:	mov	x0, x20
  409350:	mov	x2, x21
  409354:	bl	404250 <siphash24_compress@plt>
  409358:	ldr	x1, [x19, #24]!
  40935c:	mov	x2, x21
  409360:	ldur	x0, [x19, #-8]
  409364:	bl	404250 <siphash24_compress@plt>
  409368:	mov	x0, x19
  40936c:	mov	x2, x21
  409370:	ldp	x20, x19, [sp, #32]
  409374:	ldr	x21, [sp, #16]
  409378:	mov	w1, #0x8                   	// #8
  40937c:	ldp	x29, x30, [sp], #48
  409380:	b	404250 <siphash24_compress@plt>
  409384:	b	4094c8 <clock_supported@plt+0x5188>
  409388:	ldr	x8, [x0, #40]
  40938c:	ldr	x9, [x1, #40]
  409390:	cmp	x8, x9
  409394:	cset	w8, hi  // hi = pmore
  409398:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  40939c:	ret
  4093a0:	stp	x29, x30, [sp, #-16]!
  4093a4:	mov	x29, sp
  4093a8:	cbz	x0, 4093c4 <clock_supported@plt+0x5084>
  4093ac:	ldr	w8, [x0, #8]
  4093b0:	cbnz	w8, 4093bc <clock_supported@plt+0x507c>
  4093b4:	ldr	x9, [x0]
  4093b8:	cbz	x9, 4093cc <clock_supported@plt+0x508c>
  4093bc:	add	w8, w8, #0x1
  4093c0:	str	w8, [x0, #8]
  4093c4:	ldp	x29, x30, [sp], #16
  4093c8:	ret
  4093cc:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  4093d0:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  4093d4:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4093d8:	add	x1, x1, #0x68c
  4093dc:	add	x2, x2, #0x6a7
  4093e0:	add	x4, x4, #0x6ce
  4093e4:	mov	w3, #0x27                  	// #39
  4093e8:	mov	w0, wzr
  4093ec:	bl	403a30 <log_assert_failed_realm@plt>
  4093f0:	stp	x29, x30, [sp, #-16]!
  4093f4:	mov	x29, sp
  4093f8:	cbz	x0, 40941c <clock_supported@plt+0x50dc>
  4093fc:	ldr	w8, [x0, #8]
  409400:	cbz	w8, 409428 <clock_supported@plt+0x50e8>
  409404:	subs	w8, w8, #0x1
  409408:	str	w8, [x0, #8]
  40940c:	b.ne	40941c <clock_supported@plt+0x50dc>  // b.any
  409410:	ldr	x8, [x0]
  409414:	cbnz	x8, 40941c <clock_supported@plt+0x50dc>
  409418:	bl	40944c <clock_supported@plt+0x510c>
  40941c:	mov	x0, xzr
  409420:	ldp	x29, x30, [sp], #16
  409424:	ret
  409428:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40942c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409430:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409434:	add	x1, x1, #0x709
  409438:	add	x2, x2, #0x6a7
  40943c:	add	x4, x4, #0x716
  409440:	mov	w3, #0x42                  	// #66
  409444:	mov	w0, wzr
  409448:	bl	403a30 <log_assert_failed_realm@plt>
  40944c:	stp	x29, x30, [sp, #-32]!
  409450:	str	x19, [sp, #16]
  409454:	mov	x29, sp
  409458:	cbz	x0, 4094a8 <clock_supported@plt+0x5168>
  40945c:	mov	x19, x0
  409460:	ldr	x0, [x0, #80]
  409464:	bl	4039b0 <free@plt>
  409468:	ldr	x0, [x19, #64]
  40946c:	bl	4039b0 <free@plt>
  409470:	ldr	x0, [x19, #120]
  409474:	bl	4039b0 <free@plt>
  409478:	ldr	x0, [x19, #128]
  40947c:	bl	4039b0 <free@plt>
  409480:	ldr	x0, [x19, #136]
  409484:	bl	4039b0 <free@plt>
  409488:	ldr	x0, [x19, #152]
  40948c:	bl	4039b0 <free@plt>
  409490:	ldr	x0, [x19, #160]
  409494:	bl	4039b0 <free@plt>
  409498:	mov	x0, x19
  40949c:	ldr	x19, [sp, #16]
  4094a0:	ldp	x29, x30, [sp], #32
  4094a4:	b	4039b0 <free@plt>
  4094a8:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  4094ac:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  4094b0:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  4094b4:	add	x1, x1, #0x7cf
  4094b8:	add	x2, x2, #0x6a7
  4094bc:	add	x4, x4, #0x27f
  4094c0:	mov	w3, #0x2e                  	// #46
  4094c4:	bl	403a30 <log_assert_failed_realm@plt>
  4094c8:	stp	x29, x30, [sp, #-32]!
  4094cc:	str	x19, [sp, #16]
  4094d0:	mov	x29, sp
  4094d4:	cbz	x0, 409520 <clock_supported@plt+0x51e0>
  4094d8:	ldr	x8, [x0]
  4094dc:	mov	x19, x0
  4094e0:	cbz	x8, 409520 <clock_supported@plt+0x51e0>
  4094e4:	ldr	x0, [x8, #56]
  4094e8:	add	x1, x19, #0x40
  4094ec:	mov	x2, x19
  4094f0:	bl	404260 <internal_hashmap_remove_value@plt>
  4094f4:	mov	x2, x19
  4094f8:	ldr	x8, [x2], #48
  4094fc:	mov	x1, x19
  409500:	ldr	x0, [x8, #48]
  409504:	bl	404270 <prioq_remove@plt>
  409508:	tbnz	w0, #31, 409530 <clock_supported@plt+0x51f0>
  40950c:	ldr	w8, [x19, #8]
  409510:	str	xzr, [x19]
  409514:	cbnz	w8, 409520 <clock_supported@plt+0x51e0>
  409518:	mov	x0, x19
  40951c:	bl	40944c <clock_supported@plt+0x510c>
  409520:	ldr	x19, [sp, #16]
  409524:	mov	x0, xzr
  409528:	ldp	x29, x30, [sp], #32
  40952c:	ret
  409530:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  409534:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409538:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40953c:	add	x1, x1, #0x753
  409540:	add	x2, x2, #0x6a7
  409544:	add	x4, x4, #0x794
  409548:	mov	w3, #0x5b                  	// #91
  40954c:	mov	w0, wzr
  409550:	bl	403a30 <log_assert_failed_realm@plt>
  409554:	stp	x29, x30, [sp, #-32]!
  409558:	stp	x20, x19, [sp, #16]
  40955c:	mov	x19, x0
  409560:	add	x1, x0, #0xa8
  409564:	mov	w0, #0x1                   	// #1
  409568:	mov	x29, sp
  40956c:	mov	w20, #0x1                   	// #1
  409570:	bl	404280 <calloc@plt>
  409574:	cbz	x0, 409580 <clock_supported@plt+0x5240>
  409578:	str	x19, [x0, #96]
  40957c:	str	w20, [x0, #8]
  409580:	ldp	x20, x19, [sp, #16]
  409584:	ldp	x29, x30, [sp], #32
  409588:	ret
  40958c:	sub	sp, sp, #0x70
  409590:	stp	x29, x30, [sp, #16]
  409594:	stp	x28, x27, [sp, #32]
  409598:	stp	x26, x25, [sp, #48]
  40959c:	stp	x24, x23, [sp, #64]
  4095a0:	stp	x22, x21, [sp, #80]
  4095a4:	stp	x20, x19, [sp, #96]
  4095a8:	add	x29, sp, #0x10
  4095ac:	cbz	x0, 409a58 <clock_supported@plt+0x5718>
  4095b0:	ldr	x9, [x0, #96]
  4095b4:	mov	x19, x0
  4095b8:	cmp	x9, #0xd
  4095bc:	b.hi	4095e4 <clock_supported@plt+0x52a4>  // b.pmore
  4095c0:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  4095c4:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4095c8:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  4095cc:	add	x2, x2, #0x6a7
  4095d0:	add	x4, x4, #0x7fd
  4095d4:	add	x5, x5, #0x811
  4095d8:	mov	w0, #0x7                   	// #7
  4095dc:	mov	w3, #0x9f                  	// #159
  4095e0:	b	4096fc <clock_supported@plt+0x53bc>
  4095e4:	mov	x8, x19
  4095e8:	ldrb	w15, [x8, #168]!
  4095ec:	ldrh	w16, [x8, #10]
  4095f0:	ldur	w17, [x8, #6]
  4095f4:	ldrb	w14, [x8, #1]
  4095f8:	ldrb	w13, [x8, #2]
  4095fc:	ldrb	w10, [x8, #3]
  409600:	ldrb	w12, [x8, #4]
  409604:	ldrb	w11, [x8, #5]
  409608:	strh	w16, [sp, #12]
  40960c:	str	w17, [sp, #8]
  409610:	ldrh	w16, [x8, #12]
  409614:	mov	w17, #0xcc88                	// #52360
  409618:	cmp	w16, w17
  40961c:	b.ne	4096b8 <clock_supported@plt+0x5378>  // b.any
  409620:	cmp	w15, #0x1
  409624:	b.ne	4096dc <clock_supported@plt+0x539c>  // b.any
  409628:	cmp	w14, #0x80
  40962c:	b.ne	4096dc <clock_supported@plt+0x539c>  // b.any
  409630:	cmp	w13, #0xc2
  409634:	b.ne	4096dc <clock_supported@plt+0x539c>  // b.any
  409638:	orr	w13, w12, w10
  40963c:	cbnz	w13, 4096dc <clock_supported@plt+0x539c>
  409640:	cmp	w11, #0xe
  409644:	b.hi	4096dc <clock_supported@plt+0x539c>  // b.pmore
  409648:	mov	w13, #0x1                   	// #1
  40964c:	lsl	w13, w13, w11
  409650:	mov	w14, #0x4009                	// #16393
  409654:	tst	w13, w14
  409658:	b.eq	4096dc <clock_supported@plt+0x539c>  // b.none
  40965c:	ldr	w13, [sp, #8]
  409660:	ldrh	w14, [sp, #12]
  409664:	sub	x25, x9, #0xe
  409668:	mov	w15, #0x8001                	// #32769
  40966c:	mov	w16, #0xc2                  	// #194
  409670:	cmp	x25, #0x2
  409674:	strb	w10, [x19, #61]
  409678:	strb	w12, [x19, #62]
  40967c:	strh	w15, [x19, #58]
  409680:	strb	w16, [x19, #60]
  409684:	strh	w14, [x19, #56]
  409688:	str	w13, [x19, #52]
  40968c:	strb	w11, [x19, #63]
  409690:	b.cs	409728 <clock_supported@plt+0x53e8>  // b.hs, b.nlast
  409694:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409698:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40969c:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  4096a0:	add	x2, x2, #0x6a7
  4096a4:	add	x4, x4, #0x7fd
  4096a8:	add	x5, x5, #0x8ad
  4096ac:	mov	w0, #0x7                   	// #7
  4096b0:	mov	w3, #0xbf                  	// #191
  4096b4:	b	4096fc <clock_supported@plt+0x53bc>
  4096b8:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  4096bc:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4096c0:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  4096c4:	add	x2, x2, #0x6a7
  4096c8:	add	x4, x4, #0x7fd
  4096cc:	add	x5, x5, #0x83c
  4096d0:	mov	w0, #0x7                   	// #7
  4096d4:	mov	w3, #0xa6                  	// #166
  4096d8:	b	4096fc <clock_supported@plt+0x53bc>
  4096dc:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  4096e0:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4096e4:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  4096e8:	add	x2, x2, #0x6a7
  4096ec:	add	x4, x4, #0x7fd
  4096f0:	add	x5, x5, #0x86d
  4096f4:	mov	w0, #0x7                   	// #7
  4096f8:	mov	w3, #0xb0                  	// #176
  4096fc:	mov	w1, wzr
  409700:	bl	403b40 <log_internal_realm@plt>
  409704:	mov	w0, #0xffffffb6            	// #-74
  409708:	ldp	x20, x19, [sp, #96]
  40970c:	ldp	x22, x21, [sp, #80]
  409710:	ldp	x24, x23, [sp, #64]
  409714:	ldp	x26, x25, [sp, #48]
  409718:	ldp	x28, x27, [sp, #32]
  40971c:	ldp	x29, x30, [sp, #16]
  409720:	add	sp, sp, #0x70
  409724:	ret
  409728:	adrp	x23, 40c000 <clock_supported@plt+0x7cc0>
  40972c:	adrp	x24, 40c000 <clock_supported@plt+0x7cc0>
  409730:	adrp	x26, 40d000 <clock_supported@plt+0x8cc0>
  409734:	add	x8, x8, #0xe
  409738:	add	x20, x19, #0x88
  40973c:	add	x21, x19, #0x80
  409740:	add	x22, x19, #0x78
  409744:	add	x23, x23, #0x6a7
  409748:	add	x24, x24, #0x7fd
  40974c:	add	x26, x26, #0x39b
  409750:	ldrb	w9, [x8]
  409754:	ldrb	w27, [x8, #1]
  409758:	and	x10, x9, #0x1
  40975c:	bfi	x27, x10, #8, #1
  409760:	sub	x10, x25, #0x2
  409764:	subs	x25, x10, x27
  409768:	b.cc	4098e0 <clock_supported@plt+0x55a0>  // b.lo, b.ul, b.last
  40976c:	lsr	w9, w9, #1
  409770:	cmp	w9, #0x7
  409774:	add	x28, x8, #0x2
  409778:	b.hi	4097c0 <clock_supported@plt+0x5480>  // b.pmore
  40977c:	adr	x10, 40978c <clock_supported@plt+0x544c>
  409780:	ldrb	w11, [x26, x9]
  409784:	add	x10, x10, x11, lsl #2
  409788:	br	x10
  40978c:	sub	w8, w27, #0x2
  409790:	and	w8, w8, #0xffff
  409794:	cmp	w8, #0xff
  409798:	b.cs	409970 <clock_supported@plt+0x5630>  // b.hs, b.nlast
  40979c:	ldr	x8, [x19, #64]
  4097a0:	cbnz	x8, 4099dc <clock_supported@plt+0x569c>
  4097a4:	mov	x0, x28
  4097a8:	mov	x1, x27
  4097ac:	bl	404290 <memdup@plt>
  4097b0:	str	x0, [x19, #64]
  4097b4:	cbz	x0, 409968 <clock_supported@plt+0x5628>
  4097b8:	str	x27, [x19, #72]
  4097bc:	b	4098d0 <clock_supported@plt+0x5590>
  4097c0:	cmp	w9, #0x7f
  4097c4:	b.ne	4098d0 <clock_supported@plt+0x5590>  // b.any
  4097c8:	cmp	w27, #0x3
  4097cc:	b.hi	4098d0 <clock_supported@plt+0x5590>  // b.pmore
  4097d0:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  4097d4:	mov	w0, #0x7                   	// #7
  4097d8:	mov	w3, #0x129                 	// #297
  4097dc:	mov	w1, wzr
  4097e0:	mov	x2, x23
  4097e4:	mov	x4, x24
  4097e8:	add	x5, x5, #0xaa8
  4097ec:	b	4098cc <clock_supported@plt+0x558c>
  4097f0:	sub	w8, w27, #0x2
  4097f4:	and	w8, w8, #0xffff
  4097f8:	cmp	w8, #0xff
  4097fc:	b.cs	409994 <clock_supported@plt+0x5654>  // b.hs, b.nlast
  409800:	ldr	x8, [x19, #80]
  409804:	cbnz	x8, 409a00 <clock_supported@plt+0x56c0>
  409808:	mov	x0, x28
  40980c:	mov	x1, x27
  409810:	bl	404290 <memdup@plt>
  409814:	str	x0, [x19, #80]
  409818:	cbz	x0, 409968 <clock_supported@plt+0x5628>
  40981c:	str	x27, [x19, #88]
  409820:	b	4098d0 <clock_supported@plt+0x5590>
  409824:	mov	x0, x22
  409828:	b	40989c <clock_supported@plt+0x555c>
  40982c:	mov	x0, x21
  409830:	b	40989c <clock_supported@plt+0x555c>
  409834:	cmp	w27, #0x4
  409838:	b.ne	4098b0 <clock_supported@plt+0x5570>  // b.any
  40983c:	ldrh	w9, [x8, #2]
  409840:	ldrb	w10, [x19, #112]
  409844:	rev	w9, w9
  409848:	lsr	w9, w9, #16
  40984c:	strh	w9, [x19, #116]
  409850:	ldrh	w8, [x8, #4]
  409854:	orr	w9, w10, #0x2
  409858:	strb	w9, [x19, #112]
  40985c:	rev	w8, w8
  409860:	lsr	w8, w8, #16
  409864:	strh	w8, [x19, #118]
  409868:	b	4098d0 <clock_supported@plt+0x5590>
  40986c:	cmp	w27, #0x2
  409870:	b.ne	4099b8 <clock_supported@plt+0x5678>  // b.any
  409874:	ldrb	w8, [x19, #112]
  409878:	tbnz	w8, #0, 409a24 <clock_supported@plt+0x56e4>
  40987c:	ldrh	w9, [x28]
  409880:	orr	w8, w8, #0x1
  409884:	strb	w8, [x19, #112]
  409888:	rev	w9, w9
  40988c:	lsr	w9, w9, #16
  409890:	strh	w9, [x19, #114]
  409894:	b	4098d0 <clock_supported@plt+0x5590>
  409898:	mov	x0, x20
  40989c:	mov	x1, x28
  4098a0:	mov	x2, x27
  4098a4:	bl	409a78 <clock_supported@plt+0x5738>
  4098a8:	tbz	w0, #31, 4098d0 <clock_supported@plt+0x5590>
  4098ac:	b	409708 <clock_supported@plt+0x53c8>
  4098b0:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  4098b4:	mov	w0, #0x7                   	// #7
  4098b8:	mov	w3, #0x11e                 	// #286
  4098bc:	mov	w1, wzr
  4098c0:	mov	x2, x23
  4098c4:	mov	x4, x24
  4098c8:	add	x5, x5, #0xa6e
  4098cc:	bl	403b40 <log_internal_realm@plt>
  4098d0:	cmp	x25, #0x2
  4098d4:	add	x8, x28, x27
  4098d8:	b.cs	409750 <clock_supported@plt+0x5410>  // b.hs, b.nlast
  4098dc:	b	409694 <clock_supported@plt+0x5354>
  4098e0:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  4098e4:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4098e8:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  4098ec:	add	x2, x2, #0x6a7
  4098f0:	add	x4, x4, #0x7fd
  4098f4:	add	x5, x5, #0x8cf
  4098f8:	mov	w0, #0x7                   	// #7
  4098fc:	mov	w3, #0xc8                  	// #200
  409900:	b	4096fc <clock_supported@plt+0x53bc>
  409904:	cbz	w27, 40992c <clock_supported@plt+0x55ec>
  409908:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40990c:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409910:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  409914:	add	x2, x2, #0x6a7
  409918:	add	x4, x4, #0x7fd
  40991c:	add	x5, x5, #0x8f7
  409920:	mov	w0, #0x7                   	// #7
  409924:	mov	w3, #0xd0                  	// #208
  409928:	b	4096fc <clock_supported@plt+0x53bc>
  40992c:	ldr	x8, [x19, #64]
  409930:	cbz	x8, 409944 <clock_supported@plt+0x5604>
  409934:	ldr	x8, [x19, #80]
  409938:	cbz	x8, 409944 <clock_supported@plt+0x5604>
  40993c:	ldrb	w8, [x19, #112]
  409940:	tbnz	w8, #0, 409a48 <clock_supported@plt+0x5708>
  409944:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409948:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40994c:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  409950:	add	x2, x2, #0x6a7
  409954:	add	x4, x4, #0x7fd
  409958:	add	x5, x5, #0xadd
  40995c:	mov	w0, #0x7                   	// #7
  409960:	mov	w3, #0x133                 	// #307
  409964:	b	4096fc <clock_supported@plt+0x53bc>
  409968:	mov	w0, #0xfffffff4            	// #-12
  40996c:	b	409708 <clock_supported@plt+0x53c8>
  409970:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409974:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409978:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  40997c:	add	x2, x2, #0x6a7
  409980:	add	x4, x4, #0x7fd
  409984:	add	x5, x5, #0x92f
  409988:	mov	w0, #0x7                   	// #7
  40998c:	mov	w3, #0xdb                  	// #219
  409990:	b	4096fc <clock_supported@plt+0x53bc>
  409994:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409998:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40999c:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  4099a0:	add	x2, x2, #0x6a7
  4099a4:	add	x4, x4, #0x7fd
  4099a8:	add	x5, x5, #0x9a1
  4099ac:	mov	w0, #0x7                   	// #7
  4099b0:	mov	w3, #0xec                  	// #236
  4099b4:	b	4096fc <clock_supported@plt+0x53bc>
  4099b8:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  4099bc:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4099c0:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  4099c4:	add	x2, x2, #0x6a7
  4099c8:	add	x4, x4, #0x7fd
  4099cc:	add	x5, x5, #0xa0d
  4099d0:	mov	w0, #0x7                   	// #7
  4099d4:	mov	w3, #0xfd                  	// #253
  4099d8:	b	4096fc <clock_supported@plt+0x53bc>
  4099dc:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  4099e0:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  4099e4:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  4099e8:	add	x2, x2, #0x6a7
  4099ec:	add	x4, x4, #0x7fd
  4099f0:	add	x5, x5, #0x96c
  4099f4:	mov	w0, #0x7                   	// #7
  4099f8:	mov	w3, #0xdf                  	// #223
  4099fc:	b	4096fc <clock_supported@plt+0x53bc>
  409a00:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409a04:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409a08:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  409a0c:	add	x2, x2, #0x6a7
  409a10:	add	x4, x4, #0x7fd
  409a14:	add	x5, x5, #0x9db
  409a18:	mov	w0, #0x7                   	// #7
  409a1c:	mov	w3, #0xf0                  	// #240
  409a20:	b	4096fc <clock_supported@plt+0x53bc>
  409a24:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409a28:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409a2c:	adrp	x5, 40c000 <clock_supported@plt+0x7cc0>
  409a30:	add	x2, x2, #0x6a7
  409a34:	add	x4, x4, #0x7fd
  409a38:	add	x5, x5, #0xa40
  409a3c:	mov	w0, #0x7                   	// #7
  409a40:	mov	w3, #0x102                 	// #258
  409a44:	b	4096fc <clock_supported@plt+0x53bc>
  409a48:	mov	w0, wzr
  409a4c:	mov	w8, #0xe                   	// #14
  409a50:	str	x8, [x19, #104]
  409a54:	b	409708 <clock_supported@plt+0x53c8>
  409a58:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  409a5c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409a60:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409a64:	add	x1, x1, #0x7cf
  409a68:	add	x2, x2, #0x6a7
  409a6c:	add	x4, x4, #0x7d1
  409a70:	mov	w3, #0x9c                  	// #156
  409a74:	bl	403a30 <log_assert_failed_realm@plt>
  409a78:	stp	x29, x30, [sp, #-48]!
  409a7c:	str	x21, [sp, #16]
  409a80:	stp	x20, x19, [sp, #32]
  409a84:	mov	x29, sp
  409a88:	cbz	x0, 409b64 <clock_supported@plt+0x5824>
  409a8c:	mov	x20, x1
  409a90:	mov	x19, x0
  409a94:	cbnz	x1, 409a9c <clock_supported@plt+0x575c>
  409a98:	cbnz	x2, 409b84 <clock_supported@plt+0x5844>
  409a9c:	ldr	x8, [x19]
  409aa0:	cbz	x8, 409ae0 <clock_supported@plt+0x57a0>
  409aa4:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409aa8:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  409aac:	adrp	x5, 40d000 <clock_supported@plt+0x8cc0>
  409ab0:	add	x2, x2, #0x6a7
  409ab4:	add	x4, x4, #0x2e9
  409ab8:	add	x5, x5, #0x2f6
  409abc:	mov	w0, #0x7                   	// #7
  409ac0:	mov	w3, #0x7a                  	// #122
  409ac4:	mov	w1, wzr
  409ac8:	bl	403b40 <log_internal_realm@plt>
  409acc:	mov	w0, wzr
  409ad0:	ldp	x20, x19, [sp, #32]
  409ad4:	ldr	x21, [sp, #16]
  409ad8:	ldp	x29, x30, [sp], #48
  409adc:	ret
  409ae0:	sub	x8, x2, #0x1
  409ae4:	cmn	x8, #0x1
  409ae8:	b.eq	409acc <clock_supported@plt+0x578c>  // b.none
  409aec:	ldrb	w9, [x20, x8]
  409af0:	sub	x8, x8, #0x1
  409af4:	cbz	w9, 409ae4 <clock_supported@plt+0x57a4>
  409af8:	add	x21, x8, #0x2
  409afc:	mov	x0, x20
  409b00:	mov	w1, wzr
  409b04:	mov	x2, x21
  409b08:	bl	4042a0 <memchr@plt>
  409b0c:	cbz	x0, 409b34 <clock_supported@plt+0x57f4>
  409b10:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409b14:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  409b18:	adrp	x5, 40d000 <clock_supported@plt+0x8cc0>
  409b1c:	add	x2, x2, #0x6a7
  409b20:	add	x4, x4, #0x2e9
  409b24:	add	x5, x5, #0x324
  409b28:	mov	w0, #0x7                   	// #7
  409b2c:	mov	w3, #0x87                  	// #135
  409b30:	b	409ac4 <clock_supported@plt+0x5784>
  409b34:	mov	x0, x20
  409b38:	mov	x1, x21
  409b3c:	bl	4042b0 <cescape_length@plt>
  409b40:	cbz	x0, 409b5c <clock_supported@plt+0x581c>
  409b44:	mov	x20, x0
  409b48:	ldr	x0, [x19]
  409b4c:	bl	4039b0 <free@plt>
  409b50:	mov	w0, #0x1                   	// #1
  409b54:	str	x20, [x19]
  409b58:	b	409ad0 <clock_supported@plt+0x5790>
  409b5c:	mov	w0, #0xfffffff4            	// #-12
  409b60:	b	409ad0 <clock_supported@plt+0x5790>
  409b64:	adrp	x1, 40d000 <clock_supported@plt+0x8cc0>
  409b68:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409b6c:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  409b70:	add	x1, x1, #0x2ab
  409b74:	add	x2, x2, #0x6a7
  409b78:	add	x4, x4, #0x2ad
  409b7c:	mov	w3, #0x76                  	// #118
  409b80:	bl	403a30 <log_assert_failed_realm@plt>
  409b84:	adrp	x1, 40d000 <clock_supported@plt+0x8cc0>
  409b88:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409b8c:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  409b90:	add	x1, x1, #0x2dd
  409b94:	add	x2, x2, #0x6a7
  409b98:	add	x4, x4, #0x2ad
  409b9c:	mov	w3, #0x77                  	// #119
  409ba0:	mov	w0, wzr
  409ba4:	bl	403a30 <log_assert_failed_realm@plt>
  409ba8:	stp	x29, x30, [sp, #-32]!
  409bac:	stp	x20, x19, [sp, #16]
  409bb0:	mov	x29, sp
  409bb4:	cbz	x0, 409c50 <clock_supported@plt+0x5910>
  409bb8:	ldrh	w8, [x0, #114]
  409bbc:	mov	x19, x0
  409bc0:	cbz	w8, 409c1c <clock_supported@plt+0x58dc>
  409bc4:	add	x20, x19, #0x10
  409bc8:	bl	4042c0 <clock_boottime_or_monotonic@plt>
  409bcc:	mov	w1, w0
  409bd0:	mov	x0, x20
  409bd4:	bl	4042d0 <triple_timestamp_by_clock@plt>
  409bd8:	add	x8, x0, #0x1
  409bdc:	cmp	x8, #0x1
  409be0:	b.hi	409bec <clock_supported@plt+0x58ac>  // b.pmore
  409be4:	bl	4042c0 <clock_boottime_or_monotonic@plt>
  409be8:	bl	4042e0 <now@plt>
  409bec:	ldrh	w8, [x19, #114]
  409bf0:	mov	w9, #0x4240                	// #16960
  409bf4:	movk	w9, #0xf, lsl #16
  409bf8:	mul	x8, x8, x9
  409bfc:	adds	x9, x8, x0
  409c00:	cset	w10, cs  // cs = hs, nlast
  409c04:	cmp	x9, x8
  409c08:	cset	w8, cc  // cc = lo, ul, last
  409c0c:	orr	w8, w10, w8
  409c10:	cmp	w8, #0x0
  409c14:	csinv	x8, x9, xzr, eq  // eq = none
  409c18:	b	409c20 <clock_supported@plt+0x58e0>
  409c1c:	mov	x8, xzr
  409c20:	ldr	x9, [x19]
  409c24:	str	x8, [x19, #40]
  409c28:	cbz	x9, 409c44 <clock_supported@plt+0x5904>
  409c2c:	ldr	x0, [x9, #48]
  409c30:	add	x2, x19, #0x30
  409c34:	mov	x1, x19
  409c38:	ldp	x20, x19, [sp, #16]
  409c3c:	ldp	x29, x30, [sp], #32
  409c40:	b	4042f0 <prioq_reshuffle@plt>
  409c44:	ldp	x20, x19, [sp, #16]
  409c48:	ldp	x29, x30, [sp], #32
  409c4c:	ret
  409c50:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  409c54:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409c58:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409c5c:	add	x1, x1, #0x7cf
  409c60:	add	x2, x2, #0x6a7
  409c64:	add	x4, x4, #0xb1c
  409c68:	mov	w3, #0x13e                 	// #318
  409c6c:	bl	403a30 <log_assert_failed_realm@plt>
  409c70:	stp	x29, x30, [sp, #-16]!
  409c74:	cmp	x0, x1
  409c78:	mov	x29, sp
  409c7c:	b.eq	409cb8 <clock_supported@plt+0x5978>  // b.none
  409c80:	mov	x8, x0
  409c84:	mov	w0, wzr
  409c88:	cbz	x8, 409cc4 <clock_supported@plt+0x5984>
  409c8c:	cbz	x1, 409cc4 <clock_supported@plt+0x5984>
  409c90:	ldr	x2, [x8, #96]
  409c94:	ldr	x9, [x1, #96]
  409c98:	cmp	x2, x9
  409c9c:	b.ne	409cc0 <clock_supported@plt+0x5980>  // b.any
  409ca0:	add	x0, x8, #0xa8
  409ca4:	add	x1, x1, #0xa8
  409ca8:	bl	404300 <bcmp@plt>
  409cac:	cmp	w0, #0x0
  409cb0:	cset	w0, eq  // eq = none
  409cb4:	b	409cc4 <clock_supported@plt+0x5984>
  409cb8:	mov	w0, #0x1                   	// #1
  409cbc:	b	409cc4 <clock_supported@plt+0x5984>
  409cc0:	mov	w0, wzr
  409cc4:	ldp	x29, x30, [sp], #16
  409cc8:	ret
  409ccc:	stp	x29, x30, [sp, #-16]!
  409cd0:	mov	x29, sp
  409cd4:	cbz	x0, 409cfc <clock_supported@plt+0x59bc>
  409cd8:	cbz	x1, 409d1c <clock_supported@plt+0x59dc>
  409cdc:	mov	x8, x0
  409ce0:	ldrh	w9, [x8, #56]
  409ce4:	ldr	w8, [x8, #52]
  409ce8:	mov	w0, wzr
  409cec:	strh	w9, [x1, #4]
  409cf0:	str	w8, [x1]
  409cf4:	ldp	x29, x30, [sp], #16
  409cf8:	ret
  409cfc:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  409d00:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409d04:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409d08:	add	x1, x1, #0x7cf
  409d0c:	add	x2, x2, #0x6a7
  409d10:	add	x4, x4, #0xb4d
  409d14:	mov	w3, #0x15e                 	// #350
  409d18:	b	409d3c <clock_supported@plt+0x59fc>
  409d1c:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  409d20:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409d24:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409d28:	add	x1, x1, #0xb9e
  409d2c:	add	x2, x2, #0x6a7
  409d30:	add	x4, x4, #0xb4d
  409d34:	mov	w3, #0x15f                 	// #351
  409d38:	mov	w0, wzr
  409d3c:	bl	404310 <log_assert_failed_return_realm@plt>
  409d40:	mov	w0, #0xffffffea            	// #-22
  409d44:	b	409cf4 <clock_supported@plt+0x59b4>
  409d48:	stp	x29, x30, [sp, #-16]!
  409d4c:	mov	x29, sp
  409d50:	cbz	x0, 409d78 <clock_supported@plt+0x5a38>
  409d54:	cbz	x1, 409d98 <clock_supported@plt+0x5a58>
  409d58:	mov	x8, x0
  409d5c:	ldrh	w9, [x8, #62]
  409d60:	ldur	w8, [x8, #58]
  409d64:	mov	w0, wzr
  409d68:	strh	w9, [x1, #4]
  409d6c:	str	w8, [x1]
  409d70:	ldp	x29, x30, [sp], #16
  409d74:	ret
  409d78:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  409d7c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409d80:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409d84:	add	x1, x1, #0x7cf
  409d88:	add	x2, x2, #0x6a7
  409d8c:	add	x4, x4, #0xba6
  409d90:	mov	w3, #0x166                 	// #358
  409d94:	b	409db8 <clock_supported@plt+0x5a78>
  409d98:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  409d9c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409da0:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409da4:	add	x1, x1, #0xb9e
  409da8:	add	x2, x2, #0x6a7
  409dac:	add	x4, x4, #0xba6
  409db0:	mov	w3, #0x167                 	// #359
  409db4:	mov	w0, wzr
  409db8:	bl	404310 <log_assert_failed_return_realm@plt>
  409dbc:	mov	w0, #0xffffffea            	// #-22
  409dc0:	b	409d70 <clock_supported@plt+0x5a30>
  409dc4:	stp	x29, x30, [sp, #-16]!
  409dc8:	mov	x29, sp
  409dcc:	cbz	x0, 409df8 <clock_supported@plt+0x5ab8>
  409dd0:	cbz	x1, 409e18 <clock_supported@plt+0x5ad8>
  409dd4:	cbz	x2, 409e38 <clock_supported@plt+0x5af8>
  409dd8:	mov	x8, x0
  409ddc:	add	x9, x8, #0xa8
  409de0:	str	x9, [x1]
  409de4:	ldr	x8, [x8, #96]
  409de8:	mov	w0, wzr
  409dec:	str	x8, [x2]
  409df0:	ldp	x29, x30, [sp], #16
  409df4:	ret
  409df8:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  409dfc:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409e00:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409e04:	add	x1, x1, #0x7cf
  409e08:	add	x2, x2, #0x6a7
  409e0c:	add	x4, x4, #0xbfc
  409e10:	mov	w3, #0x16e                 	// #366
  409e14:	b	409e58 <clock_supported@plt+0x5b18>
  409e18:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  409e1c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409e20:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409e24:	add	x1, x1, #0x66b
  409e28:	add	x2, x2, #0x6a7
  409e2c:	add	x4, x4, #0xbfc
  409e30:	mov	w3, #0x16f                 	// #367
  409e34:	b	409e54 <clock_supported@plt+0x5b14>
  409e38:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  409e3c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409e40:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409e44:	add	x1, x1, #0xc46
  409e48:	add	x2, x2, #0x6a7
  409e4c:	add	x4, x4, #0xbfc
  409e50:	mov	w3, #0x170                 	// #368
  409e54:	mov	w0, wzr
  409e58:	bl	404310 <log_assert_failed_return_realm@plt>
  409e5c:	mov	w0, #0xffffffea            	// #-22
  409e60:	b	409df0 <clock_supported@plt+0x5ab0>
  409e64:	stp	x29, x30, [sp, #-16]!
  409e68:	mov	x29, sp
  409e6c:	cbz	x0, 409eb8 <clock_supported@plt+0x5b78>
  409e70:	cbz	x1, 409ed8 <clock_supported@plt+0x5b98>
  409e74:	cbz	x2, 409ef8 <clock_supported@plt+0x5bb8>
  409e78:	cbz	x3, 409f18 <clock_supported@plt+0x5bd8>
  409e7c:	ldr	x9, [x0, #72]
  409e80:	mov	x8, x0
  409e84:	cbz	x9, 409f44 <clock_supported@plt+0x5c04>
  409e88:	ldr	x9, [x8, #64]
  409e8c:	mov	w0, wzr
  409e90:	ldrb	w9, [x9]
  409e94:	strb	w9, [x1]
  409e98:	ldr	x9, [x8, #64]
  409e9c:	add	x9, x9, #0x1
  409ea0:	str	x9, [x2]
  409ea4:	ldr	x8, [x8, #72]
  409ea8:	sub	x8, x8, #0x1
  409eac:	str	x8, [x3]
  409eb0:	ldp	x29, x30, [sp], #16
  409eb4:	ret
  409eb8:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  409ebc:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409ec0:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409ec4:	add	x1, x1, #0x7cf
  409ec8:	add	x2, x2, #0x6a7
  409ecc:	add	x4, x4, #0xc4b
  409ed0:	mov	w3, #0x179                 	// #377
  409ed4:	b	409f38 <clock_supported@plt+0x5bf8>
  409ed8:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  409edc:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409ee0:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409ee4:	add	x1, x1, #0x569
  409ee8:	add	x2, x2, #0x6a7
  409eec:	add	x4, x4, #0xc4b
  409ef0:	mov	w3, #0x17a                 	// #378
  409ef4:	b	409f34 <clock_supported@plt+0x5bf4>
  409ef8:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  409efc:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409f00:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409f04:	add	x1, x1, #0x66b
  409f08:	add	x2, x2, #0x6a7
  409f0c:	add	x4, x4, #0xc4b
  409f10:	mov	w3, #0x17b                 	// #379
  409f14:	b	409f34 <clock_supported@plt+0x5bf4>
  409f18:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  409f1c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409f20:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409f24:	add	x1, x1, #0xc46
  409f28:	add	x2, x2, #0x6a7
  409f2c:	add	x4, x4, #0xc4b
  409f30:	mov	w3, #0x17c                 	// #380
  409f34:	mov	w0, wzr
  409f38:	bl	404310 <log_assert_failed_return_realm@plt>
  409f3c:	mov	w0, #0xffffffea            	// #-22
  409f40:	b	409eb0 <clock_supported@plt+0x5b70>
  409f44:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  409f48:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  409f4c:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  409f50:	add	x1, x1, #0xca7
  409f54:	add	x2, x2, #0x6a7
  409f58:	add	x4, x4, #0xc4b
  409f5c:	mov	w3, #0x17e                 	// #382
  409f60:	mov	w0, wzr
  409f64:	bl	403a30 <log_assert_failed_realm@plt>
  409f68:	sub	sp, sp, #0x30
  409f6c:	stp	x29, x30, [sp, #16]
  409f70:	stp	x20, x19, [sp, #32]
  409f74:	add	x29, sp, #0x10
  409f78:	cbz	x0, 40a03c <clock_supported@plt+0x5cfc>
  409f7c:	mov	x19, x1
  409f80:	cbz	x1, 40a05c <clock_supported@plt+0x5d1c>
  409f84:	ldr	x8, [x0, #152]
  409f88:	mov	x20, x0
  409f8c:	cbz	x8, 409f98 <clock_supported@plt+0x5c58>
  409f90:	mov	w0, wzr
  409f94:	b	40a020 <clock_supported@plt+0x5ce0>
  409f98:	ldr	x1, [x20, #72]
  409f9c:	cbz	x1, 40a088 <clock_supported@plt+0x5d48>
  409fa0:	ldr	x0, [x20, #64]
  409fa4:	ldrb	w8, [x0]
  409fa8:	cmp	w8, #0x7
  409fac:	b.hi	40a004 <clock_supported@plt+0x5cc4>  // b.pmore
  409fb0:	mov	w9, #0x1                   	// #1
  409fb4:	lsl	w9, w9, w8
  409fb8:	mov	w10, #0xce                  	// #206
  409fbc:	tst	w9, w10
  409fc0:	b.eq	409fd4 <clock_supported@plt+0x5c94>  // b.none
  409fc4:	add	x0, x0, #0x1
  409fc8:	sub	x1, x1, #0x1
  409fcc:	bl	4042b0 <cescape_length@plt>
  409fd0:	b	40a00c <clock_supported@plt+0x5ccc>
  409fd4:	cmp	w8, #0x4
  409fd8:	b.eq	409ff4 <clock_supported@plt+0x5cb4>  // b.none
  409fdc:	cmp	w8, #0x5
  409fe0:	b.ne	40a004 <clock_supported@plt+0x5cc4>  // b.any
  409fe4:	add	x2, sp, #0x8
  409fe8:	bl	40a13c <clock_supported@plt+0x5dfc>
  409fec:	tbz	w0, #31, 40a000 <clock_supported@plt+0x5cc0>
  409ff0:	b	40a024 <clock_supported@plt+0x5ce4>
  409ff4:	add	x2, sp, #0x8
  409ff8:	bl	40a0ac <clock_supported@plt+0x5d6c>
  409ffc:	tbnz	w0, #31, 40a024 <clock_supported@plt+0x5ce4>
  40a000:	cbnz	w0, 40a014 <clock_supported@plt+0x5cd4>
  40a004:	ldp	x0, x1, [x20, #64]
  40a008:	bl	404320 <hexmem@plt>
  40a00c:	str	x0, [sp, #8]
  40a010:	cbz	x0, 40a034 <clock_supported@plt+0x5cf4>
  40a014:	ldr	x8, [sp, #8]
  40a018:	mov	w0, wzr
  40a01c:	str	x8, [x20, #152]
  40a020:	str	x8, [x19]
  40a024:	ldp	x20, x19, [sp, #32]
  40a028:	ldp	x29, x30, [sp, #16]
  40a02c:	add	sp, sp, #0x30
  40a030:	ret
  40a034:	mov	w0, #0xfffffff4            	// #-12
  40a038:	b	40a024 <clock_supported@plt+0x5ce4>
  40a03c:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a040:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a044:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a048:	add	x1, x1, #0x7cf
  40a04c:	add	x2, x2, #0x6a7
  40a050:	add	x4, x4, #0xcc1
  40a054:	mov	w3, #0x1b1                 	// #433
  40a058:	b	40a07c <clock_supported@plt+0x5d3c>
  40a05c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40a060:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a064:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a068:	add	x1, x1, #0x66b
  40a06c:	add	x2, x2, #0x6a7
  40a070:	add	x4, x4, #0xcc1
  40a074:	mov	w3, #0x1b2                 	// #434
  40a078:	mov	w0, wzr
  40a07c:	bl	404310 <log_assert_failed_return_realm@plt>
  40a080:	mov	w0, #0xffffffea            	// #-22
  40a084:	b	40a024 <clock_supported@plt+0x5ce4>
  40a088:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a08c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a090:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a094:	add	x1, x1, #0xca7
  40a098:	add	x2, x2, #0x6a7
  40a09c:	add	x4, x4, #0xcc1
  40a0a0:	mov	w3, #0x1b9                 	// #441
  40a0a4:	mov	w0, wzr
  40a0a8:	bl	403a30 <log_assert_failed_realm@plt>
  40a0ac:	stp	x29, x30, [sp, #-32]!
  40a0b0:	str	x19, [sp, #16]
  40a0b4:	mov	x19, x2
  40a0b8:	mov	x29, sp
  40a0bc:	cbnz	x0, 40a0c4 <clock_supported@plt+0x5d84>
  40a0c0:	cbnz	x1, 40a118 <clock_supported@plt+0x5dd8>
  40a0c4:	cmp	x1, #0x7
  40a0c8:	b.ne	40a100 <clock_supported@plt+0x5dc0>  // b.any
  40a0cc:	ldurh	w8, [x0, #5]
  40a0d0:	ldur	w9, [x0, #1]
  40a0d4:	mov	w0, #0x12                  	// #18
  40a0d8:	strh	w8, [x29, #28]
  40a0dc:	str	w9, [x29, #24]
  40a0e0:	bl	403da0 <malloc@plt>
  40a0e4:	cbz	x0, 40a108 <clock_supported@plt+0x5dc8>
  40a0e8:	mov	x1, x0
  40a0ec:	add	x0, x29, #0x18
  40a0f0:	bl	403cb0 <ether_addr_to_string@plt>
  40a0f4:	str	x0, [x19]
  40a0f8:	mov	w0, #0x1                   	// #1
  40a0fc:	b	40a10c <clock_supported@plt+0x5dcc>
  40a100:	mov	w0, wzr
  40a104:	b	40a10c <clock_supported@plt+0x5dcc>
  40a108:	mov	w0, #0xfffffff4            	// #-12
  40a10c:	ldr	x19, [sp, #16]
  40a110:	ldp	x29, x30, [sp], #32
  40a114:	ret
  40a118:	adrp	x1, 40d000 <clock_supported@plt+0x8cc0>
  40a11c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a120:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  40a124:	add	x1, x1, #0x355
  40a128:	add	x2, x2, #0x6a7
  40a12c:	add	x4, x4, #0x365
  40a130:	mov	w3, #0x18b                 	// #395
  40a134:	mov	w0, wzr
  40a138:	bl	403a30 <log_assert_failed_realm@plt>
  40a13c:	sub	sp, sp, #0x20
  40a140:	cmp	x1, #0x12
  40a144:	stp	x29, x30, [sp, #16]
  40a148:	add	x29, sp, #0x10
  40a14c:	b.eq	40a174 <clock_supported@plt+0x5e34>  // b.none
  40a150:	cmp	x1, #0x6
  40a154:	b.ne	40a1a0 <clock_supported@plt+0x5e60>  // b.any
  40a158:	ldrb	w8, [x0, #1]
  40a15c:	cmp	w8, #0x1
  40a160:	b.ne	40a1a0 <clock_supported@plt+0x5e60>  // b.any
  40a164:	ldur	w8, [x0, #2]
  40a168:	mov	w0, #0x2                   	// #2
  40a16c:	str	w8, [sp]
  40a170:	b	40a18c <clock_supported@plt+0x5e4c>
  40a174:	ldrb	w8, [x0, #1]
  40a178:	cmp	w8, #0x2
  40a17c:	b.ne	40a1a0 <clock_supported@plt+0x5e60>  // b.any
  40a180:	ldur	q0, [x0, #2]
  40a184:	mov	w0, #0xa                   	// #10
  40a188:	str	q0, [sp]
  40a18c:	mov	x1, sp
  40a190:	bl	403e50 <in_addr_to_string@plt>
  40a194:	cmp	w0, #0x0
  40a198:	csinc	w0, w0, wzr, lt  // lt = tstop
  40a19c:	b	40a1a4 <clock_supported@plt+0x5e64>
  40a1a0:	mov	w0, wzr
  40a1a4:	ldp	x29, x30, [sp, #16]
  40a1a8:	add	sp, sp, #0x20
  40a1ac:	ret
  40a1b0:	stp	x29, x30, [sp, #-16]!
  40a1b4:	mov	x29, sp
  40a1b8:	cbz	x0, 40a204 <clock_supported@plt+0x5ec4>
  40a1bc:	cbz	x1, 40a224 <clock_supported@plt+0x5ee4>
  40a1c0:	cbz	x2, 40a244 <clock_supported@plt+0x5f04>
  40a1c4:	cbz	x3, 40a264 <clock_supported@plt+0x5f24>
  40a1c8:	ldr	x9, [x0, #88]
  40a1cc:	mov	x8, x0
  40a1d0:	cbz	x9, 40a290 <clock_supported@plt+0x5f50>
  40a1d4:	ldr	x9, [x8, #80]
  40a1d8:	mov	w0, wzr
  40a1dc:	ldrb	w9, [x9]
  40a1e0:	strb	w9, [x1]
  40a1e4:	ldr	x9, [x8, #80]
  40a1e8:	add	x9, x9, #0x1
  40a1ec:	str	x9, [x2]
  40a1f0:	ldr	x8, [x8, #88]
  40a1f4:	sub	x8, x8, #0x1
  40a1f8:	str	x8, [x3]
  40a1fc:	ldp	x29, x30, [sp], #16
  40a200:	ret
  40a204:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a208:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a20c:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a210:	add	x1, x1, #0x7cf
  40a214:	add	x2, x2, #0x6a7
  40a218:	add	x4, x4, #0xd12
  40a21c:	mov	w3, #0x1e6                 	// #486
  40a220:	b	40a284 <clock_supported@plt+0x5f44>
  40a224:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40a228:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a22c:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a230:	add	x1, x1, #0x569
  40a234:	add	x2, x2, #0x6a7
  40a238:	add	x4, x4, #0xd12
  40a23c:	mov	w3, #0x1e7                 	// #487
  40a240:	b	40a280 <clock_supported@plt+0x5f40>
  40a244:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40a248:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a24c:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a250:	add	x1, x1, #0x66b
  40a254:	add	x2, x2, #0x6a7
  40a258:	add	x4, x4, #0xd12
  40a25c:	mov	w3, #0x1e8                 	// #488
  40a260:	b	40a280 <clock_supported@plt+0x5f40>
  40a264:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a268:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a26c:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a270:	add	x1, x1, #0xc46
  40a274:	add	x2, x2, #0x6a7
  40a278:	add	x4, x4, #0xd12
  40a27c:	mov	w3, #0x1e9                 	// #489
  40a280:	mov	w0, wzr
  40a284:	bl	404310 <log_assert_failed_return_realm@plt>
  40a288:	mov	w0, #0xffffffea            	// #-22
  40a28c:	b	40a1fc <clock_supported@plt+0x5ebc>
  40a290:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a294:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a298:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a29c:	add	x1, x1, #0xd6b
  40a2a0:	add	x2, x2, #0x6a7
  40a2a4:	add	x4, x4, #0xd12
  40a2a8:	mov	w3, #0x1eb                 	// #491
  40a2ac:	mov	w0, wzr
  40a2b0:	bl	403a30 <log_assert_failed_realm@plt>
  40a2b4:	sub	sp, sp, #0x30
  40a2b8:	stp	x29, x30, [sp, #16]
  40a2bc:	stp	x20, x19, [sp, #32]
  40a2c0:	add	x29, sp, #0x10
  40a2c4:	cbz	x0, 40a388 <clock_supported@plt+0x6048>
  40a2c8:	mov	x19, x1
  40a2cc:	cbz	x1, 40a3a8 <clock_supported@plt+0x6068>
  40a2d0:	ldr	x8, [x0, #160]
  40a2d4:	mov	x20, x0
  40a2d8:	cbz	x8, 40a2e4 <clock_supported@plt+0x5fa4>
  40a2dc:	mov	w0, wzr
  40a2e0:	b	40a36c <clock_supported@plt+0x602c>
  40a2e4:	ldr	x1, [x20, #88]
  40a2e8:	cbz	x1, 40a3d4 <clock_supported@plt+0x6094>
  40a2ec:	ldr	x0, [x20, #80]
  40a2f0:	ldrb	w8, [x0]
  40a2f4:	cmp	w8, #0x7
  40a2f8:	b.hi	40a350 <clock_supported@plt+0x6010>  // b.pmore
  40a2fc:	mov	w9, #0x1                   	// #1
  40a300:	lsl	w9, w9, w8
  40a304:	mov	w10, #0xa6                  	// #166
  40a308:	tst	w9, w10
  40a30c:	b.eq	40a320 <clock_supported@plt+0x5fe0>  // b.none
  40a310:	add	x0, x0, #0x1
  40a314:	sub	x1, x1, #0x1
  40a318:	bl	4042b0 <cescape_length@plt>
  40a31c:	b	40a358 <clock_supported@plt+0x6018>
  40a320:	cmp	w8, #0x3
  40a324:	b.eq	40a340 <clock_supported@plt+0x6000>  // b.none
  40a328:	cmp	w8, #0x4
  40a32c:	b.ne	40a350 <clock_supported@plt+0x6010>  // b.any
  40a330:	add	x2, sp, #0x8
  40a334:	bl	40a13c <clock_supported@plt+0x5dfc>
  40a338:	tbz	w0, #31, 40a34c <clock_supported@plt+0x600c>
  40a33c:	b	40a370 <clock_supported@plt+0x6030>
  40a340:	add	x2, sp, #0x8
  40a344:	bl	40a0ac <clock_supported@plt+0x5d6c>
  40a348:	tbnz	w0, #31, 40a370 <clock_supported@plt+0x6030>
  40a34c:	cbnz	w0, 40a360 <clock_supported@plt+0x6020>
  40a350:	ldp	x0, x1, [x20, #80]
  40a354:	bl	404320 <hexmem@plt>
  40a358:	str	x0, [sp, #8]
  40a35c:	cbz	x0, 40a380 <clock_supported@plt+0x6040>
  40a360:	ldr	x8, [sp, #8]
  40a364:	mov	w0, wzr
  40a368:	str	x8, [x20, #160]
  40a36c:	str	x8, [x19]
  40a370:	ldp	x20, x19, [sp, #32]
  40a374:	ldp	x29, x30, [sp, #16]
  40a378:	add	sp, sp, #0x30
  40a37c:	ret
  40a380:	mov	w0, #0xfffffff4            	// #-12
  40a384:	b	40a370 <clock_supported@plt+0x6030>
  40a388:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a38c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a390:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a394:	add	x1, x1, #0x7cf
  40a398:	add	x2, x2, #0x6a7
  40a39c:	add	x4, x4, #0xd82
  40a3a0:	mov	w3, #0x1f8                 	// #504
  40a3a4:	b	40a3c8 <clock_supported@plt+0x6088>
  40a3a8:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40a3ac:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a3b0:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a3b4:	add	x1, x1, #0x66b
  40a3b8:	add	x2, x2, #0x6a7
  40a3bc:	add	x4, x4, #0xd82
  40a3c0:	mov	w3, #0x1f9                 	// #505
  40a3c4:	mov	w0, wzr
  40a3c8:	bl	404310 <log_assert_failed_return_realm@plt>
  40a3cc:	mov	w0, #0xffffffea            	// #-22
  40a3d0:	b	40a370 <clock_supported@plt+0x6030>
  40a3d4:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a3d8:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a3dc:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a3e0:	add	x1, x1, #0xd6b
  40a3e4:	add	x2, x2, #0x6a7
  40a3e8:	add	x4, x4, #0xd82
  40a3ec:	mov	w3, #0x200                 	// #512
  40a3f0:	mov	w0, wzr
  40a3f4:	bl	403a30 <log_assert_failed_realm@plt>
  40a3f8:	stp	x29, x30, [sp, #-16]!
  40a3fc:	mov	x29, sp
  40a400:	cbz	x0, 40a420 <clock_supported@plt+0x60e0>
  40a404:	cbz	x1, 40a440 <clock_supported@plt+0x6100>
  40a408:	mov	x8, x0
  40a40c:	ldrh	w8, [x8, #114]
  40a410:	mov	w0, wzr
  40a414:	strh	w8, [x1]
  40a418:	ldp	x29, x30, [sp], #16
  40a41c:	ret
  40a420:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a424:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a428:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a42c:	add	x1, x1, #0x7cf
  40a430:	add	x2, x2, #0x6a7
  40a434:	add	x4, x4, #0xdd0
  40a438:	mov	w3, #0x22c                 	// #556
  40a43c:	b	40a460 <clock_supported@plt+0x6120>
  40a440:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a444:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a448:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a44c:	add	x1, x1, #0xe0d
  40a450:	add	x2, x2, #0x6a7
  40a454:	add	x4, x4, #0xdd0
  40a458:	mov	w3, #0x22d                 	// #557
  40a45c:	mov	w0, wzr
  40a460:	bl	404310 <log_assert_failed_return_realm@plt>
  40a464:	mov	w0, #0xffffffea            	// #-22
  40a468:	b	40a418 <clock_supported@plt+0x60d8>
  40a46c:	stp	x29, x30, [sp, #-16]!
  40a470:	mov	x29, sp
  40a474:	cbz	x0, 40a49c <clock_supported@plt+0x615c>
  40a478:	cbz	x1, 40a4bc <clock_supported@plt+0x617c>
  40a47c:	ldr	x8, [x0, #128]
  40a480:	cbz	x8, 40a490 <clock_supported@plt+0x6150>
  40a484:	mov	w0, wzr
  40a488:	str	x8, [x1]
  40a48c:	b	40a494 <clock_supported@plt+0x6154>
  40a490:	mov	w0, #0xffffffc3            	// #-61
  40a494:	ldp	x29, x30, [sp], #16
  40a498:	ret
  40a49c:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a4a0:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a4a4:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a4a8:	add	x1, x1, #0x7cf
  40a4ac:	add	x2, x2, #0x6a7
  40a4b0:	add	x4, x4, #0xe15
  40a4b4:	mov	w3, #0x234                 	// #564
  40a4b8:	b	40a4dc <clock_supported@plt+0x619c>
  40a4bc:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40a4c0:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a4c4:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a4c8:	add	x1, x1, #0x66b
  40a4cc:	add	x2, x2, #0x6a7
  40a4d0:	add	x4, x4, #0xe15
  40a4d4:	mov	w3, #0x235                 	// #565
  40a4d8:	mov	w0, wzr
  40a4dc:	bl	404310 <log_assert_failed_return_realm@plt>
  40a4e0:	mov	w0, #0xffffffea            	// #-22
  40a4e4:	b	40a494 <clock_supported@plt+0x6154>
  40a4e8:	stp	x29, x30, [sp, #-16]!
  40a4ec:	mov	x29, sp
  40a4f0:	cbz	x0, 40a518 <clock_supported@plt+0x61d8>
  40a4f4:	cbz	x1, 40a538 <clock_supported@plt+0x61f8>
  40a4f8:	ldr	x8, [x0, #136]
  40a4fc:	cbz	x8, 40a50c <clock_supported@plt+0x61cc>
  40a500:	mov	w0, wzr
  40a504:	str	x8, [x1]
  40a508:	b	40a510 <clock_supported@plt+0x61d0>
  40a50c:	mov	w0, #0xffffffc3            	// #-61
  40a510:	ldp	x29, x30, [sp], #16
  40a514:	ret
  40a518:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a51c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a520:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a524:	add	x1, x1, #0x7cf
  40a528:	add	x2, x2, #0x6a7
  40a52c:	add	x4, x4, #0xe5d
  40a530:	mov	w3, #0x23f                 	// #575
  40a534:	b	40a558 <clock_supported@plt+0x6218>
  40a538:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40a53c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a540:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a544:	add	x1, x1, #0x66b
  40a548:	add	x2, x2, #0x6a7
  40a54c:	add	x4, x4, #0xe5d
  40a550:	mov	w3, #0x240                 	// #576
  40a554:	mov	w0, wzr
  40a558:	bl	404310 <log_assert_failed_return_realm@plt>
  40a55c:	mov	w0, #0xffffffea            	// #-22
  40a560:	b	40a510 <clock_supported@plt+0x61d0>
  40a564:	stp	x29, x30, [sp, #-16]!
  40a568:	mov	x29, sp
  40a56c:	cbz	x0, 40a594 <clock_supported@plt+0x6254>
  40a570:	cbz	x1, 40a5b4 <clock_supported@plt+0x6274>
  40a574:	ldr	x8, [x0, #120]
  40a578:	cbz	x8, 40a588 <clock_supported@plt+0x6248>
  40a57c:	mov	w0, wzr
  40a580:	str	x8, [x1]
  40a584:	b	40a58c <clock_supported@plt+0x624c>
  40a588:	mov	w0, #0xffffffc3            	// #-61
  40a58c:	ldp	x29, x30, [sp], #16
  40a590:	ret
  40a594:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a598:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a59c:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a5a0:	add	x1, x1, #0x7cf
  40a5a4:	add	x2, x2, #0x6a7
  40a5a8:	add	x4, x4, #0xeac
  40a5ac:	mov	w3, #0x24a                 	// #586
  40a5b0:	b	40a5d4 <clock_supported@plt+0x6294>
  40a5b4:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40a5b8:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a5bc:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a5c0:	add	x1, x1, #0x66b
  40a5c4:	add	x2, x2, #0x6a7
  40a5c8:	add	x4, x4, #0xeac
  40a5cc:	mov	w3, #0x24b                 	// #587
  40a5d0:	mov	w0, wzr
  40a5d4:	bl	404310 <log_assert_failed_return_realm@plt>
  40a5d8:	mov	w0, #0xffffffea            	// #-22
  40a5dc:	b	40a58c <clock_supported@plt+0x624c>
  40a5e0:	stp	x29, x30, [sp, #-16]!
  40a5e4:	mov	x29, sp
  40a5e8:	cbz	x0, 40a618 <clock_supported@plt+0x62d8>
  40a5ec:	cbz	x1, 40a638 <clock_supported@plt+0x62f8>
  40a5f0:	ldrb	w9, [x0, #112]
  40a5f4:	mov	x8, x0
  40a5f8:	tbnz	w9, #1, 40a604 <clock_supported@plt+0x62c4>
  40a5fc:	mov	w0, #0xffffffc3            	// #-61
  40a600:	b	40a610 <clock_supported@plt+0x62d0>
  40a604:	ldrh	w8, [x8, #116]
  40a608:	mov	w0, wzr
  40a60c:	strh	w8, [x1]
  40a610:	ldp	x29, x30, [sp], #16
  40a614:	ret
  40a618:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a61c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a620:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a624:	add	x1, x1, #0x7cf
  40a628:	add	x2, x2, #0x6a7
  40a62c:	add	x4, x4, #0xef9
  40a630:	mov	w3, #0x255                 	// #597
  40a634:	b	40a658 <clock_supported@plt+0x6318>
  40a638:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40a63c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a640:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a644:	add	x1, x1, #0x66b
  40a648:	add	x2, x2, #0x6a7
  40a64c:	add	x4, x4, #0xef9
  40a650:	mov	w3, #0x256                 	// #598
  40a654:	mov	w0, wzr
  40a658:	bl	404310 <log_assert_failed_return_realm@plt>
  40a65c:	mov	w0, #0xffffffea            	// #-22
  40a660:	b	40a610 <clock_supported@plt+0x62d0>
  40a664:	stp	x29, x30, [sp, #-16]!
  40a668:	mov	x29, sp
  40a66c:	cbz	x0, 40a69c <clock_supported@plt+0x635c>
  40a670:	cbz	x1, 40a6bc <clock_supported@plt+0x637c>
  40a674:	ldrb	w9, [x0, #112]
  40a678:	mov	x8, x0
  40a67c:	tbnz	w9, #1, 40a688 <clock_supported@plt+0x6348>
  40a680:	mov	w0, #0xffffffc3            	// #-61
  40a684:	b	40a694 <clock_supported@plt+0x6354>
  40a688:	ldrh	w8, [x8, #118]
  40a68c:	mov	w0, wzr
  40a690:	strh	w8, [x1]
  40a694:	ldp	x29, x30, [sp], #16
  40a698:	ret
  40a69c:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a6a0:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a6a4:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a6a8:	add	x1, x1, #0x7cf
  40a6ac:	add	x2, x2, #0x6a7
  40a6b0:	add	x4, x4, #0xf46
  40a6b4:	mov	w3, #0x260                 	// #608
  40a6b8:	b	40a6dc <clock_supported@plt+0x639c>
  40a6bc:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40a6c0:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a6c4:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a6c8:	add	x1, x1, #0x66b
  40a6cc:	add	x2, x2, #0x6a7
  40a6d0:	add	x4, x4, #0xf46
  40a6d4:	mov	w3, #0x261                 	// #609
  40a6d8:	mov	w0, wzr
  40a6dc:	bl	404310 <log_assert_failed_return_realm@plt>
  40a6e0:	mov	w0, #0xffffffea            	// #-22
  40a6e4:	b	40a694 <clock_supported@plt+0x6354>
  40a6e8:	stp	x29, x30, [sp, #-64]!
  40a6ec:	str	x23, [sp, #16]
  40a6f0:	stp	x22, x21, [sp, #32]
  40a6f4:	stp	x20, x19, [sp, #48]
  40a6f8:	mov	x29, sp
  40a6fc:	cbz	x0, 40a784 <clock_supported@plt+0x6444>
  40a700:	mov	x20, x2
  40a704:	mov	x21, x1
  40a708:	mov	x19, x0
  40a70c:	cbnz	x1, 40a714 <clock_supported@plt+0x63d4>
  40a710:	cbnz	x20, 40a7a4 <clock_supported@plt+0x6464>
  40a714:	add	x1, x20, #0xa8
  40a718:	mov	w0, #0x1                   	// #1
  40a71c:	mov	w23, #0x1                   	// #1
  40a720:	bl	404280 <calloc@plt>
  40a724:	cbz	x0, 40a75c <clock_supported@plt+0x641c>
  40a728:	mov	x22, x0
  40a72c:	str	x20, [x0, #96]
  40a730:	str	w23, [x0, #8]
  40a734:	add	x0, x0, #0xa8
  40a738:	mov	x1, x21
  40a73c:	mov	x2, x20
  40a740:	bl	404330 <memcpy@plt>
  40a744:	mov	x0, x22
  40a748:	bl	40958c <clock_supported@plt+0x524c>
  40a74c:	mov	w20, w0
  40a750:	tbnz	w0, #31, 40a764 <clock_supported@plt+0x6424>
  40a754:	str	x22, [x19]
  40a758:	b	40a76c <clock_supported@plt+0x642c>
  40a75c:	mov	w20, #0xfffffff4            	// #-12
  40a760:	b	40a76c <clock_supported@plt+0x642c>
  40a764:	mov	x0, x22
  40a768:	bl	4093f0 <clock_supported@plt+0x50b0>
  40a76c:	mov	w0, w20
  40a770:	ldp	x20, x19, [sp, #48]
  40a774:	ldp	x22, x21, [sp, #32]
  40a778:	ldr	x23, [sp, #16]
  40a77c:	ldp	x29, x30, [sp], #64
  40a780:	ret
  40a784:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40a788:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a78c:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a790:	add	x1, x1, #0x66b
  40a794:	add	x2, x2, #0x6a7
  40a798:	add	x4, x4, #0xf94
  40a79c:	mov	w3, #0x26e                 	// #622
  40a7a0:	b	40a7c4 <clock_supported@plt+0x6484>
  40a7a4:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a7a8:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a7ac:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a7b0:	add	x1, x1, #0xfdd
  40a7b4:	add	x2, x2, #0x6a7
  40a7b8:	add	x4, x4, #0xf94
  40a7bc:	mov	w3, #0x26f                 	// #623
  40a7c0:	mov	w0, wzr
  40a7c4:	bl	404310 <log_assert_failed_return_realm@plt>
  40a7c8:	mov	w20, #0xffffffea            	// #-22
  40a7cc:	b	40a76c <clock_supported@plt+0x642c>
  40a7d0:	stp	x29, x30, [sp, #-16]!
  40a7d4:	mov	x29, sp
  40a7d8:	cbz	x0, 40a800 <clock_supported@plt+0x64c0>
  40a7dc:	ldr	x8, [x0, #96]
  40a7e0:	cmp	x8, #0xd
  40a7e4:	b.ls	40a828 <clock_supported@plt+0x64e8>  // b.plast
  40a7e8:	mov	w9, #0xe                   	// #14
  40a7ec:	cmp	x8, #0xe
  40a7f0:	str	x9, [x0, #104]
  40a7f4:	cset	w0, ne  // ne = any
  40a7f8:	ldp	x29, x30, [sp], #16
  40a7fc:	ret
  40a800:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a804:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a808:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a80c:	add	x1, x1, #0x7cf
  40a810:	add	x2, x2, #0x6a7
  40a814:	add	x4, x4, #0xff2
  40a818:	mov	w3, #0x280                 	// #640
  40a81c:	bl	404310 <log_assert_failed_return_realm@plt>
  40a820:	mov	w0, #0xffffffea            	// #-22
  40a824:	b	40a7f8 <clock_supported@plt+0x64b8>
  40a828:	adrp	x1, 40d000 <clock_supported@plt+0x8cc0>
  40a82c:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a830:	adrp	x4, 40c000 <clock_supported@plt+0x7cc0>
  40a834:	add	x1, x1, #0x26
  40a838:	add	x2, x2, #0x6a7
  40a83c:	add	x4, x4, #0xff2
  40a840:	mov	w3, #0x282                 	// #642
  40a844:	mov	w0, wzr
  40a848:	bl	403a30 <log_assert_failed_realm@plt>
  40a84c:	stp	x29, x30, [sp, #-16]!
  40a850:	mov	x29, sp
  40a854:	cbz	x0, 40a8b0 <clock_supported@plt+0x6570>
  40a858:	ldp	x8, x10, [x0, #96]
  40a85c:	cmp	x10, x8
  40a860:	b.ne	40a86c <clock_supported@plt+0x652c>  // b.any
  40a864:	mov	w0, #0xffffffe3            	// #-29
  40a868:	b	40a8a8 <clock_supported@plt+0x6568>
  40a86c:	add	x9, x10, #0x2
  40a870:	cmp	x9, x8
  40a874:	b.hi	40a898 <clock_supported@plt+0x6558>  // b.pmore
  40a878:	add	x10, x0, x10
  40a87c:	ldrb	w11, [x10, #168]
  40a880:	ldrb	w10, [x10, #169]
  40a884:	and	x11, x11, #0x1
  40a888:	bfi	x10, x11, #8, #1
  40a88c:	add	x9, x10, x9
  40a890:	cmp	x9, x8
  40a894:	b.ls	40a8a0 <clock_supported@plt+0x6560>  // b.plast
  40a898:	mov	w0, #0xffffffb6            	// #-74
  40a89c:	b	40a8a8 <clock_supported@plt+0x6568>
  40a8a0:	str	x9, [x0, #104]
  40a8a4:	cset	w0, cc  // cc = lo, ul, last
  40a8a8:	ldp	x29, x30, [sp], #16
  40a8ac:	ret
  40a8b0:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a8b4:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a8b8:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  40a8bc:	add	x1, x1, #0x7cf
  40a8c0:	add	x2, x2, #0x6a7
  40a8c4:	add	x4, x4, #0x51
  40a8c8:	mov	w3, #0x28b                 	// #651
  40a8cc:	bl	404310 <log_assert_failed_return_realm@plt>
  40a8d0:	mov	w0, #0xffffffea            	// #-22
  40a8d4:	b	40a8a8 <clock_supported@plt+0x6568>
  40a8d8:	stp	x29, x30, [sp, #-16]!
  40a8dc:	mov	x29, sp
  40a8e0:	cbz	x0, 40a930 <clock_supported@plt+0x65f0>
  40a8e4:	cbz	x1, 40a950 <clock_supported@plt+0x6610>
  40a8e8:	ldp	x10, x9, [x0, #96]
  40a8ec:	mov	x8, x0
  40a8f0:	cmp	x9, x10
  40a8f4:	b.ne	40a900 <clock_supported@plt+0x65c0>  // b.any
  40a8f8:	mov	w0, #0xffffffe3            	// #-29
  40a8fc:	b	40a928 <clock_supported@plt+0x65e8>
  40a900:	add	x11, x9, #0x2
  40a904:	cmp	x11, x10
  40a908:	b.ls	40a914 <clock_supported@plt+0x65d4>  // b.plast
  40a90c:	mov	w0, #0xffffffb6            	// #-74
  40a910:	b	40a928 <clock_supported@plt+0x65e8>
  40a914:	add	x8, x8, x9
  40a918:	ldrb	w8, [x8, #168]
  40a91c:	mov	w0, wzr
  40a920:	lsr	w8, w8, #1
  40a924:	strb	w8, [x1]
  40a928:	ldp	x29, x30, [sp], #16
  40a92c:	ret
  40a930:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a934:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a938:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  40a93c:	add	x1, x1, #0x7cf
  40a940:	add	x2, x2, #0x6a7
  40a944:	add	x4, x4, #0x83
  40a948:	mov	w3, #0x29c                 	// #668
  40a94c:	b	40a970 <clock_supported@plt+0x6630>
  40a950:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40a954:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a958:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  40a95c:	add	x1, x1, #0x569
  40a960:	add	x2, x2, #0x6a7
  40a964:	add	x4, x4, #0x83
  40a968:	mov	w3, #0x29d                 	// #669
  40a96c:	mov	w0, wzr
  40a970:	bl	404310 <log_assert_failed_return_realm@plt>
  40a974:	mov	w0, #0xffffffea            	// #-22
  40a978:	b	40a928 <clock_supported@plt+0x65e8>
  40a97c:	stp	x29, x30, [sp, #-16]!
  40a980:	mov	x29, sp
  40a984:	cbz	x0, 40a9cc <clock_supported@plt+0x668c>
  40a988:	ldp	x9, x8, [x0, #96]
  40a98c:	cmp	x8, x9
  40a990:	b.ne	40a99c <clock_supported@plt+0x665c>  // b.any
  40a994:	mov	w0, #0xffffffe3            	// #-29
  40a998:	b	40a9c4 <clock_supported@plt+0x6684>
  40a99c:	add	x10, x8, #0x2
  40a9a0:	cmp	x10, x9
  40a9a4:	b.ls	40a9b0 <clock_supported@plt+0x6670>  // b.plast
  40a9a8:	mov	w0, #0xffffffb6            	// #-74
  40a9ac:	b	40a9c4 <clock_supported@plt+0x6684>
  40a9b0:	add	x8, x0, x8
  40a9b4:	ldrb	w8, [x8, #168]
  40a9b8:	lsr	w8, w8, #1
  40a9bc:	cmp	w8, w1, uxtb
  40a9c0:	cset	w0, eq  // eq = none
  40a9c4:	ldp	x29, x30, [sp], #16
  40a9c8:	ret
  40a9cc:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40a9d0:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40a9d4:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  40a9d8:	add	x1, x1, #0x7cf
  40a9dc:	add	x2, x2, #0x6a7
  40a9e0:	add	x4, x4, #0xc4
  40a9e4:	mov	w3, #0x2ad                 	// #685
  40a9e8:	bl	404310 <log_assert_failed_return_realm@plt>
  40a9ec:	mov	w0, #0xffffffea            	// #-22
  40a9f0:	b	40a9c4 <clock_supported@plt+0x6684>
  40a9f4:	stp	x29, x30, [sp, #-16]!
  40a9f8:	mov	x29, sp
  40a9fc:	cbz	x0, 40aa8c <clock_supported@plt+0x674c>
  40aa00:	cbz	x2, 40aaac <clock_supported@plt+0x676c>
  40aa04:	ldp	x9, x8, [x0, #96]
  40aa08:	cmp	x8, x9
  40aa0c:	b.ne	40aa18 <clock_supported@plt+0x66d8>  // b.any
  40aa10:	mov	w0, #0xffffffe3            	// #-29
  40aa14:	b	40aa84 <clock_supported@plt+0x6744>
  40aa18:	add	x10, x8, #0x2
  40aa1c:	cmp	x10, x9
  40aa20:	b.ls	40aa2c <clock_supported@plt+0x66ec>  // b.plast
  40aa24:	mov	w0, #0xffffffb6            	// #-74
  40aa28:	b	40aa84 <clock_supported@plt+0x6744>
  40aa2c:	add	x8, x0, x8
  40aa30:	ldrb	w12, [x8, #168]!
  40aa34:	cmp	w12, #0xfe
  40aa38:	b.cc	40aa80 <clock_supported@plt+0x6740>  // b.lo, b.ul, b.last
  40aa3c:	ldrb	w11, [x8, #1]
  40aa40:	and	x12, x12, #0x1
  40aa44:	mov	w0, #0xffffffb6            	// #-74
  40aa48:	bfi	x11, x12, #8, #1
  40aa4c:	cmp	x11, #0x4
  40aa50:	b.cc	40aa84 <clock_supported@plt+0x6744>  // b.lo, b.ul, b.last
  40aa54:	add	x10, x10, x11
  40aa58:	cmp	x10, x9
  40aa5c:	b.hi	40aa84 <clock_supported@plt+0x6744>  // b.pmore
  40aa60:	ldrb	w9, [x8, #4]
  40aa64:	ldrh	w10, [x8, #2]
  40aa68:	mov	w0, wzr
  40aa6c:	strb	w9, [x1, #2]
  40aa70:	strh	w10, [x1]
  40aa74:	ldrb	w8, [x8, #5]
  40aa78:	strb	w8, [x2]
  40aa7c:	b	40aa84 <clock_supported@plt+0x6744>
  40aa80:	mov	w0, #0xfffffffa            	// #-6
  40aa84:	ldp	x29, x30, [sp], #16
  40aa88:	ret
  40aa8c:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40aa90:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40aa94:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  40aa98:	add	x1, x1, #0x7cf
  40aa9c:	add	x2, x2, #0x6a7
  40aaa0:	add	x4, x4, #0x102
  40aaa4:	mov	w3, #0x2bb                 	// #699
  40aaa8:	b	40aacc <clock_supported@plt+0x678c>
  40aaac:	adrp	x1, 40d000 <clock_supported@plt+0x8cc0>
  40aab0:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40aab4:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  40aab8:	add	x1, x1, #0x14d
  40aabc:	add	x2, x2, #0x6a7
  40aac0:	add	x4, x4, #0x102
  40aac4:	mov	w3, #0x2bd                 	// #701
  40aac8:	mov	w0, wzr
  40aacc:	bl	404310 <log_assert_failed_return_realm@plt>
  40aad0:	mov	w0, #0xffffffea            	// #-22
  40aad4:	b	40aa84 <clock_supported@plt+0x6744>
  40aad8:	sub	sp, sp, #0x30
  40aadc:	stp	x29, x30, [sp, #16]
  40aae0:	add	x29, sp, #0x10
  40aae4:	stp	x20, x19, [sp, #32]
  40aae8:	mov	w19, w2
  40aaec:	mov	x20, x1
  40aaf0:	sub	x1, x29, #0x4
  40aaf4:	add	x2, sp, #0x8
  40aaf8:	bl	40a9f4 <clock_supported@plt+0x66b4>
  40aafc:	cmn	w0, #0x6
  40ab00:	b.ne	40ab0c <clock_supported@plt+0x67cc>  // b.any
  40ab04:	mov	w0, wzr
  40ab08:	b	40ab44 <clock_supported@plt+0x6804>
  40ab0c:	tbnz	w0, #31, 40ab44 <clock_supported@plt+0x6804>
  40ab10:	ldurh	w8, [x29, #-4]
  40ab14:	ldrh	w9, [x20]
  40ab18:	ldurb	w10, [x29, #-2]
  40ab1c:	ldrb	w11, [x20, #2]
  40ab20:	ldrb	w12, [sp, #8]
  40ab24:	eor	w8, w8, w9
  40ab28:	eor	w9, w10, w11
  40ab2c:	orr	w8, w8, w9
  40ab30:	tst	w8, #0xffff
  40ab34:	cset	w8, eq  // eq = none
  40ab38:	cmp	w12, w19, uxtb
  40ab3c:	cset	w9, eq  // eq = none
  40ab40:	and	w0, w8, w9
  40ab44:	ldp	x20, x19, [sp, #32]
  40ab48:	ldp	x29, x30, [sp, #16]
  40ab4c:	add	sp, sp, #0x30
  40ab50:	ret
  40ab54:	stp	x29, x30, [sp, #-16]!
  40ab58:	mov	x29, sp
  40ab5c:	cbz	x0, 40abb8 <clock_supported@plt+0x6878>
  40ab60:	cbz	x1, 40abd8 <clock_supported@plt+0x6898>
  40ab64:	cbz	x2, 40abf8 <clock_supported@plt+0x68b8>
  40ab68:	ldp	x8, x9, [x0, #96]
  40ab6c:	add	x10, x9, #0x2
  40ab70:	cmp	x10, x8
  40ab74:	b.hi	40ab98 <clock_supported@plt+0x6858>  // b.pmore
  40ab78:	add	x9, x0, x9
  40ab7c:	ldrb	w12, [x9, #168]!
  40ab80:	ldrb	w11, [x9, #1]
  40ab84:	and	x12, x12, #0x1
  40ab88:	bfi	x11, x12, #8, #1
  40ab8c:	add	x10, x11, x10
  40ab90:	cmp	x10, x8
  40ab94:	b.ls	40aba0 <clock_supported@plt+0x6860>  // b.plast
  40ab98:	mov	w0, #0xffffffb6            	// #-74
  40ab9c:	b	40abb0 <clock_supported@plt+0x6870>
  40aba0:	mov	w0, wzr
  40aba4:	add	x8, x11, #0x2
  40aba8:	str	x9, [x1]
  40abac:	str	x8, [x2]
  40abb0:	ldp	x29, x30, [sp], #16
  40abb4:	ret
  40abb8:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40abbc:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40abc0:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  40abc4:	add	x1, x1, #0x7cf
  40abc8:	add	x2, x2, #0x6a7
  40abcc:	add	x4, x4, #0x155
  40abd0:	mov	w3, #0x2e3                 	// #739
  40abd4:	b	40ac18 <clock_supported@plt+0x68d8>
  40abd8:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40abdc:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40abe0:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  40abe4:	add	x1, x1, #0x66b
  40abe8:	add	x2, x2, #0x6a7
  40abec:	add	x4, x4, #0x155
  40abf0:	mov	w3, #0x2e4                 	// #740
  40abf4:	b	40ac14 <clock_supported@plt+0x68d4>
  40abf8:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40abfc:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40ac00:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  40ac04:	add	x1, x1, #0xc46
  40ac08:	add	x2, x2, #0x6a7
  40ac0c:	add	x4, x4, #0x155
  40ac10:	mov	w3, #0x2e5                 	// #741
  40ac14:	mov	w0, wzr
  40ac18:	bl	404310 <log_assert_failed_return_realm@plt>
  40ac1c:	mov	w0, #0xffffffea            	// #-22
  40ac20:	b	40abb0 <clock_supported@plt+0x6870>
  40ac24:	stp	x29, x30, [sp, #-48]!
  40ac28:	str	x21, [sp, #16]
  40ac2c:	stp	x20, x19, [sp, #32]
  40ac30:	mov	x29, sp
  40ac34:	cbz	x0, 40acfc <clock_supported@plt+0x69bc>
  40ac38:	mov	w20, w1
  40ac3c:	cmp	w1, #0x9
  40ac40:	b.hi	40acc8 <clock_supported@plt+0x6988>  // b.pmore
  40ac44:	mov	w8, #0x1                   	// #1
  40ac48:	lsl	w8, w8, w20
  40ac4c:	mov	w9, #0x383                 	// #899
  40ac50:	tst	w8, w9
  40ac54:	b.eq	40acc8 <clock_supported@plt+0x6988>  // b.none
  40ac58:	mov	x21, x0
  40ac5c:	mov	w0, w20
  40ac60:	mov	x19, x2
  40ac64:	bl	404340 <clock_supported@plt>
  40ac68:	tbz	w0, #0, 40ad1c <clock_supported@plt+0x69dc>
  40ac6c:	cbz	x19, 40ad3c <clock_supported@plt+0x69fc>
  40ac70:	mov	x0, x21
  40ac74:	ldr	x8, [x0, #16]!
  40ac78:	add	x8, x8, #0x1
  40ac7c:	cmp	x8, #0x1
  40ac80:	b.hi	40aca4 <clock_supported@plt+0x6964>  // b.pmore
  40ac84:	ldr	x8, [x21, #24]
  40ac88:	add	x8, x8, #0x1
  40ac8c:	cmp	x8, #0x1
  40ac90:	b.hi	40aca4 <clock_supported@plt+0x6964>  // b.pmore
  40ac94:	ldr	x8, [x21, #32]
  40ac98:	add	x8, x8, #0x1
  40ac9c:	cmp	x8, #0x2
  40aca0:	b.cc	40acf4 <clock_supported@plt+0x69b4>  // b.lo, b.ul, b.last
  40aca4:	mov	w1, w20
  40aca8:	bl	4042d0 <triple_timestamp_by_clock@plt>
  40acac:	mov	x8, x0
  40acb0:	mov	w0, wzr
  40acb4:	str	x8, [x19]
  40acb8:	ldp	x20, x19, [sp, #32]
  40acbc:	ldr	x21, [sp, #16]
  40acc0:	ldp	x29, x30, [sp], #48
  40acc4:	ret
  40acc8:	adrp	x1, 40d000 <clock_supported@plt+0x8cc0>
  40accc:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40acd0:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  40acd4:	add	x1, x1, #0x1f1
  40acd8:	add	x2, x2, #0x6a7
  40acdc:	add	x4, x4, #0x1a3
  40ace0:	mov	w3, #0x2f8                 	// #760
  40ace4:	mov	w0, wzr
  40ace8:	bl	404310 <log_assert_failed_return_realm@plt>
  40acec:	mov	w0, #0xffffffa1            	// #-95
  40acf0:	b	40acb8 <clock_supported@plt+0x6978>
  40acf4:	mov	w0, #0xffffffc3            	// #-61
  40acf8:	b	40acb8 <clock_supported@plt+0x6978>
  40acfc:	adrp	x1, 40c000 <clock_supported@plt+0x7cc0>
  40ad00:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40ad04:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  40ad08:	add	x1, x1, #0x7cf
  40ad0c:	add	x2, x2, #0x6a7
  40ad10:	add	x4, x4, #0x1a3
  40ad14:	mov	w3, #0x2f7                 	// #759
  40ad18:	b	40ad5c <clock_supported@plt+0x6a1c>
  40ad1c:	adrp	x1, 40d000 <clock_supported@plt+0x8cc0>
  40ad20:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40ad24:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  40ad28:	add	x1, x1, #0x213
  40ad2c:	add	x2, x2, #0x6a7
  40ad30:	add	x4, x4, #0x1a3
  40ad34:	mov	w3, #0x2f9                 	// #761
  40ad38:	b	40ace4 <clock_supported@plt+0x69a4>
  40ad3c:	adrp	x1, 40b000 <clock_supported@plt+0x6cc0>
  40ad40:	adrp	x2, 40c000 <clock_supported@plt+0x7cc0>
  40ad44:	adrp	x4, 40d000 <clock_supported@plt+0x8cc0>
  40ad48:	add	x1, x1, #0x66b
  40ad4c:	add	x2, x2, #0x6a7
  40ad50:	add	x4, x4, #0x1a3
  40ad54:	mov	w3, #0x2fa                 	// #762
  40ad58:	mov	w0, wzr
  40ad5c:	bl	404310 <log_assert_failed_return_realm@plt>
  40ad60:	mov	w0, #0xffffffea            	// #-22
  40ad64:	b	40acb8 <clock_supported@plt+0x6978>
  40ad68:	stp	x29, x30, [sp, #-64]!
  40ad6c:	mov	x29, sp
  40ad70:	stp	x19, x20, [sp, #16]
  40ad74:	adrp	x20, 41f000 <clock_supported@plt+0x1acc0>
  40ad78:	add	x20, x20, #0x878
  40ad7c:	stp	x21, x22, [sp, #32]
  40ad80:	adrp	x21, 41f000 <clock_supported@plt+0x1acc0>
  40ad84:	add	x21, x21, #0x870
  40ad88:	sub	x20, x20, x21
  40ad8c:	mov	w22, w0
  40ad90:	stp	x23, x24, [sp, #48]
  40ad94:	mov	x23, x1
  40ad98:	mov	x24, x2
  40ad9c:	bl	4038b8 <__libc_start_main@plt-0x38>
  40ada0:	cmp	xzr, x20, asr #3
  40ada4:	b.eq	40add0 <clock_supported@plt+0x6a90>  // b.none
  40ada8:	asr	x20, x20, #3
  40adac:	mov	x19, #0x0                   	// #0
  40adb0:	ldr	x3, [x21, x19, lsl #3]
  40adb4:	mov	x2, x24
  40adb8:	add	x19, x19, #0x1
  40adbc:	mov	x1, x23
  40adc0:	mov	w0, w22
  40adc4:	blr	x3
  40adc8:	cmp	x20, x19
  40adcc:	b.ne	40adb0 <clock_supported@plt+0x6a70>  // b.any
  40add0:	ldp	x19, x20, [sp, #16]
  40add4:	ldp	x21, x22, [sp, #32]
  40add8:	ldp	x23, x24, [sp, #48]
  40addc:	ldp	x29, x30, [sp], #64
  40ade0:	ret
  40ade4:	nop
  40ade8:	ret

Disassembly of section .fini:

000000000040adec <.fini>:
  40adec:	stp	x29, x30, [sp, #-16]!
  40adf0:	mov	x29, sp
  40adf4:	ldp	x29, x30, [sp], #16
  40adf8:	ret
