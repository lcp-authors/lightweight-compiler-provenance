
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//affs.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_latin1_to_utf8>:
   0:	mov	x3, #0x0                   	// #0
   4:	cmp	x2, x3
   8:	b.ne	10 <grub_latin1_to_utf8+0x10>  // b.any
   c:	ret
  10:	ldrsb	w5, [x1, x3]
  14:	ldrb	w4, [x1, x3]
  18:	tbnz	w5, #31, 28 <grub_latin1_to_utf8+0x28>
  1c:	strb	w4, [x0], #1
  20:	add	x3, x3, #0x1
  24:	b	4 <grub_latin1_to_utf8+0x4>
  28:	mov	x5, x0
  2c:	lsr	w4, w4, #6
  30:	orr	w4, w4, #0xffffffc0
  34:	strb	w4, [x5], #2
  38:	ldrb	w4, [x1, x3]
  3c:	and	w4, w4, #0x3f
  40:	orr	w4, w4, #0xffffff80
  44:	strb	w4, [x0, #1]
  48:	mov	x0, x5
  4c:	b	20 <grub_latin1_to_utf8+0x20>

0000000000000050 <grub_affs_close>:
  50:	stp	x29, x30, [sp, #-32]!
  54:	mov	x29, sp
  58:	str	x19, [sp, #16]
  5c:	mov	x19, x0
  60:	ldr	x0, [x0, #80]
  64:	ldr	x0, [x0, #240]
  68:	bl	0 <grub_free>
  6c:	ldr	x0, [x19, #80]
  70:	bl	0 <grub_free>
  74:	adrp	x0, 0 <grub_latin1_to_utf8>
  78:	ldr	x0, [x0]
  7c:	ldr	x0, [x0]
  80:	bl	0 <grub_dl_unref>
  84:	mov	w0, #0x0                   	// #0
  88:	ldr	x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret
  94:	nop
	...

00000000000000a0 <aftime2ctime>:
  a0:	ldp	w2, w3, [x0]
  a4:	ldr	w1, [x0, #8]
  a8:	mov	w0, #0x3c                  	// #60
  ac:	rev	w3, w3
  b0:	rev	w2, w2
  b4:	rev	w1, w1
  b8:	mul	w0, w3, w0
  bc:	mov	w3, #0x5180                	// #20864
  c0:	movk	w3, #0x1, lsl #16
  c4:	madd	w2, w2, w3, w0
  c8:	mov	w0, #0x32                  	// #50
  cc:	udiv	w1, w1, w0
  d0:	mov	w0, #0x3f00                	// #16128
  d4:	movk	w0, #0xf0c, lsl #16
  d8:	add	w0, w1, w0
  dc:	add	w0, w2, w0
  e0:	ret

00000000000000e4 <grub_affs_read_block>:
  e4:	stp	x29, x30, [sp, #-304]!
  e8:	mov	x29, sp
  ec:	stp	x19, x20, [sp, #16]
  f0:	mov	x19, x0
  f4:	stp	x21, x22, [sp, #32]
  f8:	mov	x21, x1
  fc:	ldr	x22, [x0]
 100:	stp	x23, x24, [sp, #48]
 104:	ldr	x0, [x0, #224]
 108:	stp	x25, x26, [sp, #64]
 10c:	stp	x27, x28, [sp, #80]
 110:	cbnz	x0, 150 <grub_affs_read_block+0x6c>
 114:	ldr	w0, [x19, #36]
 118:	ldr	w1, [x22, #264]
 11c:	rev	w0, w0
 120:	add	w1, w1, #0x9
 124:	lsr	w0, w0, w1
 128:	ldr	w1, [x22, #268]
 12c:	udiv	w0, w0, w1
 130:	add	w0, w0, #0x2
 134:	lsl	x0, x0, #2
 138:	bl	0 <grub_malloc>
 13c:	str	x0, [x19, #224]
 140:	cbz	x0, 230 <grub_affs_read_block+0x14c>
 144:	ldr	w1, [x19, #8]
 148:	str	wzr, [x19, #232]
 14c:	str	w1, [x0]
 150:	ldr	w25, [x22, #268]
 154:	adrp	x27, 0 <grub_latin1_to_utf8>
 158:	ldr	w20, [x19, #232]
 15c:	add	w23, w20, #0x1
 160:	add	w20, w20, #0x1
 164:	udiv	w26, w21, w25
 168:	lsl	x20, x20, #2
 16c:	add	w28, w26, #0x1
 170:	ldr	x24, [x27]
 174:	cmp	w28, w23
 178:	ldr	w5, [x22, #264]
 17c:	ldr	x1, [x19, #224]
 180:	ldr	x0, [x22, #256]
 184:	b.hi	1c4 <grub_affs_read_block+0xe0>  // b.pmore
 188:	ldr	w2, [x22, #268]
 18c:	msub	w21, w26, w25, w21
 190:	ldr	w1, [x1, w26, uxtw #2]
 194:	add	x4, sp, #0x64
 198:	add	x2, x2, #0x5
 19c:	mov	x3, #0x4                   	// #4
 1a0:	sub	x2, x2, x21
 1a4:	lsl	x1, x1, x5
 1a8:	lsl	x2, x2, #2
 1ac:	bl	0 <grub_disk_read>
 1b0:	ldr	w0, [x24]
 1b4:	cbnz	w0, 1f0 <grub_affs_read_block+0x10c>
 1b8:	ldr	w0, [sp, #100]
 1bc:	rev	w0, w0
 1c0:	b	1f4 <grub_affs_read_block+0x110>
 1c4:	sub	w2, w23, #0x1
 1c8:	add	x4, sp, #0x68
 1cc:	mov	x3, #0xc8                  	// #200
 1d0:	ldr	w1, [x1, x2, lsl #2]
 1d4:	mov	x2, #0x138                 	// #312
 1d8:	add	x1, x1, #0x1
 1dc:	lsl	x1, x1, x5
 1e0:	sub	x1, x1, #0x1
 1e4:	bl	0 <grub_disk_read>
 1e8:	ldr	w0, [x24]
 1ec:	cbz	w0, 210 <grub_affs_read_block+0x12c>
 1f0:	mov	x0, #0x0                   	// #0
 1f4:	ldp	x19, x20, [sp, #16]
 1f8:	ldp	x21, x22, [sp, #32]
 1fc:	ldp	x23, x24, [sp, #48]
 200:	ldp	x25, x26, [sp, #64]
 204:	ldp	x27, x28, [sp, #80]
 208:	ldp	x29, x30, [sp], #304
 20c:	ret
 210:	ldr	x1, [x19, #224]
 214:	ldr	w0, [sp, #296]
 218:	rev	w0, w0
 21c:	str	w0, [x1, x20]
 220:	add	x20, x20, #0x4
 224:	str	w23, [x19, #232]
 228:	add	w23, w23, #0x1
 22c:	b	170 <grub_affs_read_block+0x8c>
 230:	mov	x0, #0xffffffffffffffff    	// #-1
 234:	b	1f4 <grub_affs_read_block+0x110>
	...

0000000000000240 <grub_affs_iterate_dir>:
 240:	stp	x29, x30, [sp, #-400]!
 244:	mov	x29, sp
 248:	stp	x19, x20, [sp, #16]
 24c:	mov	x20, x0
 250:	stp	x21, x22, [sp, #32]
 254:	stp	x23, x24, [sp, #48]
 258:	mov	x24, x1
 25c:	stp	x25, x26, [sp, #64]
 260:	mov	x25, x2
 264:	stp	x27, x28, [sp, #80]
 268:	ldr	x22, [x0]
 26c:	mov	x0, #0xf0                  	// #240
 270:	bl	0 <grub_zalloc>
 274:	cbnz	x0, 280 <grub_affs_iterate_dir+0x40>
 278:	mov	w21, #0x1                   	// #1
 27c:	b	358 <grub_affs_iterate_dir+0x118>
 280:	mov	x28, x0
 284:	mov	x1, x20
 288:	mov	x2, #0xf0                  	// #240
 28c:	bl	0 <memcpy>
 290:	adrp	x0, 0 <grub_latin1_to_utf8>
 294:	mov	x3, x25
 298:	mov	x2, x28
 29c:	mov	w1, #0x2                   	// #2
 2a0:	ldr	x0, [x0]
 2a4:	blr	x24
 2a8:	mov	w21, w0
 2ac:	cbnz	w0, 278 <grub_affs_iterate_dir+0x38>
 2b0:	ldr	x0, [x20, #16]
 2b4:	cbz	x0, 2f0 <grub_affs_iterate_dir+0xb0>
 2b8:	mov	x0, #0xf0                  	// #240
 2bc:	bl	0 <grub_zalloc>
 2c0:	mov	x28, x0
 2c4:	cbz	x0, 278 <grub_affs_iterate_dir+0x38>
 2c8:	ldr	x1, [x20, #16]
 2cc:	mov	x2, #0xf0                  	// #240
 2d0:	bl	0 <memcpy>
 2d4:	adrp	x0, 0 <grub_latin1_to_utf8>
 2d8:	mov	x3, x25
 2dc:	mov	x2, x28
 2e0:	mov	w1, #0x2                   	// #2
 2e4:	ldr	x0, [x0]
 2e8:	blr	x24
 2ec:	cbnz	w0, 278 <grub_affs_iterate_dir+0x38>
 2f0:	ldr	w0, [x22, #268]
 2f4:	lsl	x0, x0, #2
 2f8:	bl	0 <grub_zalloc>
 2fc:	mov	x19, x0
 300:	cbz	x0, 278 <grub_affs_iterate_dir+0x38>
 304:	ldr	w1, [x20, #8]
 308:	mov	x4, x0
 30c:	ldr	w0, [x22, #264]
 310:	mov	x2, #0x18                  	// #24
 314:	ldr	w3, [x22, #268]
 318:	lsl	x1, x1, x0
 31c:	ldr	x0, [x22, #256]
 320:	lsl	x3, x3, #2
 324:	bl	0 <grub_disk_read>
 328:	adrp	x0, 0 <grub_latin1_to_utf8>
 32c:	ldr	x0, [x0]
 330:	str	x0, [sp, #104]
 334:	ldr	w23, [x0]
 338:	cbnz	w23, 4ec <grub_affs_iterate_dir+0x2ac>
 33c:	add	x0, sp, #0x141
 340:	str	x0, [sp, #112]
 344:	ldr	w0, [x22, #268]
 348:	cmp	w0, w23
 34c:	b.hi	378 <grub_affs_iterate_dir+0x138>  // b.pmore
 350:	mov	x0, x19
 354:	bl	0 <grub_free>
 358:	mov	w0, w21
 35c:	ldp	x19, x20, [sp, #16]
 360:	ldp	x21, x22, [sp, #32]
 364:	ldp	x23, x24, [sp, #48]
 368:	ldp	x25, x26, [sp, #64]
 36c:	ldp	x27, x28, [sp, #80]
 370:	ldp	x29, x30, [sp], #400
 374:	ret
 378:	ldr	w6, [x19, w23, uxtw #2]
 37c:	cbz	w6, 388 <grub_affs_iterate_dir+0x148>
 380:	rev	w6, w6
 384:	cbnz	w6, 390 <grub_affs_iterate_dir+0x150>
 388:	add	w23, w23, #0x1
 38c:	b	344 <grub_affs_iterate_dir+0x104>
 390:	ldr	w0, [x22, #264]
 394:	mov	w1, w6
 398:	add	x1, x1, #0x1
 39c:	add	x4, sp, #0xc8
 3a0:	mov	x3, #0xc8                  	// #200
 3a4:	mov	x2, #0x138                 	// #312
 3a8:	lsl	x1, x1, x0
 3ac:	sub	x1, x1, #0x1
 3b0:	ldr	x0, [x22, #256]
 3b4:	str	w6, [sp, #120]
 3b8:	bl	0 <grub_disk_read>
 3bc:	ldr	x0, [sp, #104]
 3c0:	ldr	w26, [x0]
 3c4:	cbnz	w26, 4ec <grub_affs_iterate_dir+0x2ac>
 3c8:	mov	x0, #0xf0                  	// #240
 3cc:	ldr	x27, [x20]
 3d0:	bl	0 <grub_zalloc>
 3d4:	ldr	w6, [sp, #120]
 3d8:	mov	x28, x0
 3dc:	cbnz	x0, 3ec <grub_affs_iterate_dir+0x1ac>
 3e0:	mov	x0, x19
 3e4:	bl	0 <grub_free>
 3e8:	b	278 <grub_affs_iterate_dir+0x38>
 3ec:	str	x27, [x0]
 3f0:	mov	x2, #0x1e                  	// #30
 3f4:	str	w6, [x0, #8]
 3f8:	str	x20, [x0, #16]
 3fc:	ldr	x1, [sp, #112]
 400:	ldrb	w0, [sp, #320]
 404:	cmp	x0, #0x1e
 408:	csel	x2, x0, x2, ls  // ls = plast
 40c:	add	x0, sp, #0x88
 410:	bl	0 <grub_latin1_to_utf8>
 414:	strb	wzr, [x0]
 418:	add	x4, x28, #0x18
 41c:	mov	x2, #0xc8                  	// #200
 420:	mov	x0, x4
 424:	add	x1, sp, x2
 428:	bl	0 <memcpy>
 42c:	mov	x4, x0
 430:	mov	w6, #0xfcffffff            	// #-50331649
 434:	ldr	w0, [x28, #220]
 438:	cmp	w0, w6
 43c:	b.eq	47c <grub_affs_iterate_dir+0x23c>  // b.none
 440:	b.hi	468 <grub_affs_iterate_dir+0x228>  // b.pmore
 444:	mov	w1, #0x2000000             	// #33554432
 448:	cmp	w0, w1
 44c:	b.eq	4c8 <grub_affs_iterate_dir+0x288>  // b.none
 450:	mov	w2, #0x3000000             	// #50331648
 454:	mov	w1, #0x3                   	// #3
 458:	cmp	w0, w2
 45c:	b.eq	4cc <grub_affs_iterate_dir+0x28c>  // b.none
 460:	ldr	w6, [sp, #384]
 464:	b	380 <grub_affs_iterate_dir+0x140>
 468:	mov	w1, #0xfdffffff            	// #-33554433
 46c:	cmp	w0, w1
 470:	b.ne	460 <grub_affs_iterate_dir+0x220>  // b.any
 474:	mov	w1, #0x1                   	// #1
 478:	b	4cc <grub_affs_iterate_dir+0x28c>
 47c:	ldr	w1, [x28, #180]
 480:	mov	x3, #0xc8                  	// #200
 484:	ldr	w0, [x27, #264]
 488:	mov	x2, #0x138                 	// #312
 48c:	rev	w1, w1
 490:	str	w1, [x28, #8]
 494:	add	x1, x1, #0x1
 498:	str	x4, [sp, #120]
 49c:	lsl	x1, x1, x0
 4a0:	sub	x1, x1, #0x1
 4a4:	ldr	x0, [x27, #256]
 4a8:	bl	0 <grub_disk_read>
 4ac:	cbnz	w0, 278 <grub_affs_iterate_dir+0x38>
 4b0:	add	w26, w26, #0x1
 4b4:	mov	w6, #0xfcffffff            	// #-50331649
 4b8:	cmp	w26, #0x8
 4bc:	ldr	x4, [sp, #120]
 4c0:	b.eq	460 <grub_affs_iterate_dir+0x220>  // b.none
 4c4:	b	434 <grub_affs_iterate_dir+0x1f4>
 4c8:	mov	w1, #0x2                   	// #2
 4cc:	mov	x3, x25
 4d0:	mov	x2, x28
 4d4:	orr	w1, w1, #0x100
 4d8:	add	x0, sp, #0x88
 4dc:	blr	x24
 4e0:	cbnz	w0, 3e0 <grub_affs_iterate_dir+0x1a0>
 4e4:	mov	x28, #0x0                   	// #0
 4e8:	b	460 <grub_affs_iterate_dir+0x220>
 4ec:	mov	x0, x28
 4f0:	bl	0 <grub_free>
 4f4:	b	350 <grub_affs_iterate_dir+0x110>
	...

0000000000000510 <grub_affs_read>:
 510:	sub	sp, sp, #0x30
 514:	mov	x5, x2
 518:	mov	x6, x1
 51c:	stp	x29, x30, [sp, #32]
 520:	add	x29, sp, #0x20
 524:	ldr	x8, [x0, #80]
 528:	add	x1, x8, #0x10
 52c:	ldr	w3, [x8, #52]
 530:	ldr	x9, [x8, #16]
 534:	str	xzr, [sp, #16]
 538:	rev	w3, w3
 53c:	ldr	w4, [x8, #264]
 540:	str	x3, [sp]
 544:	adrp	x3, 0 <grub_latin1_to_utf8>
 548:	str	w4, [sp, #8]
 54c:	ldr	x7, [x3]
 550:	ldp	x2, x3, [x0, #88]
 554:	ldr	x4, [x0, #24]
 558:	ldr	x0, [x9, #256]
 55c:	bl	0 <grub_fshelp_read_file>
 560:	ldp	x29, x30, [sp, #32]
 564:	add	sp, sp, #0x30
 568:	ret
 56c:	nop
	...

0000000000000578 <grub_affs_read_symlink>:
 578:	stp	x29, x30, [sp, #-64]!
 57c:	mov	x29, sp
 580:	str	x23, [sp, #48]
 584:	ldr	x23, [x0]
 588:	stp	x21, x22, [sp, #32]
 58c:	mov	x22, x0
 590:	stp	x19, x20, [sp, #16]
 594:	mov	w19, #0x200                 	// #512
 598:	ldr	w0, [x23, #264]
 59c:	lsl	w19, w19, w0
 5a0:	sub	w19, w19, #0x18
 5a4:	sxtw	x21, w19
 5a8:	add	x0, x21, #0x1
 5ac:	bl	0 <grub_malloc>
 5b0:	cbz	x0, 5f0 <grub_affs_read_symlink+0x78>
 5b4:	ldr	w1, [x22, #8]
 5b8:	mov	x4, x0
 5bc:	mov	x20, x0
 5c0:	ldr	w0, [x23, #264]
 5c4:	mov	x3, x21
 5c8:	mov	x2, #0x18                  	// #24
 5cc:	lsl	x1, x1, x0
 5d0:	ldr	x0, [x23, #256]
 5d4:	bl	0 <grub_disk_read>
 5d8:	adrp	x0, 0 <grub_latin1_to_utf8>
 5dc:	ldr	x0, [x0]
 5e0:	ldr	w0, [x0]
 5e4:	cbz	w0, 5f8 <grub_affs_read_symlink+0x80>
 5e8:	mov	x0, x20
 5ec:	bl	0 <grub_free>
 5f0:	mov	x19, #0x0                   	// #0
 5f4:	b	618 <grub_affs_read_symlink+0xa0>
 5f8:	strb	wzr, [x20, x21]
 5fc:	mov	x0, #0x1                   	// #1
 600:	add	x0, x0, w19, sxtw #1
 604:	bl	0 <grub_malloc>
 608:	mov	x19, x0
 60c:	cbnz	x0, 630 <grub_affs_read_symlink+0xb8>
 610:	mov	x0, x20
 614:	bl	0 <grub_free>
 618:	mov	x0, x19
 61c:	ldp	x19, x20, [sp, #16]
 620:	ldp	x21, x22, [sp, #32]
 624:	ldr	x23, [sp, #48]
 628:	ldp	x29, x30, [sp], #64
 62c:	ret
 630:	mov	x2, x21
 634:	mov	x1, x20
 638:	bl	0 <grub_latin1_to_utf8>
 63c:	strb	wzr, [x0]
 640:	adrp	x0, 0 <grub_latin1_to_utf8>
 644:	mov	x4, x19
 648:	mov	w1, #0x137                 	// #311
 64c:	ldr	x3, [x0]
 650:	adrp	x0, 0 <grub_latin1_to_utf8>
 654:	ldr	x2, [x0]
 658:	adrp	x0, 0 <grub_latin1_to_utf8>
 65c:	ldr	x0, [x0]
 660:	bl	0 <grub_real_dprintf>
 664:	mov	x0, x20
 668:	bl	0 <grub_free>
 66c:	ldrb	w0, [x19]
 670:	cmp	w0, #0x3a
 674:	b.ne	618 <grub_affs_read_symlink+0xa0>  // b.any
 678:	mov	w0, #0x2f                  	// #47
 67c:	strb	w0, [x19]
 680:	b	618 <grub_affs_read_symlink+0xa0>
 684:	nop
	...

00000000000006a8 <grub_affs_dir_iter>:
 6a8:	stp	x29, x30, [sp, #-64]!
 6ac:	mov	x29, sp
 6b0:	stp	x19, x20, [sp, #16]
 6b4:	mov	w19, w1
 6b8:	mov	x20, x3
 6bc:	and	w19, w19, #0xff
 6c0:	mov	w1, #0x0                   	// #0
 6c4:	stp	x21, x22, [sp, #32]
 6c8:	mov	x21, x2
 6cc:	mov	x22, x0
 6d0:	mov	x2, #0x10                  	// #16
 6d4:	add	x0, sp, #0x30
 6d8:	bl	0 <grub_memset>
 6dc:	cmp	w19, #0x2
 6e0:	ldrb	w0, [sp, #48]
 6e4:	cset	w1, eq  // eq = none
 6e8:	and	w0, w0, #0xfffffffc
 6ec:	orr	w1, w1, #0x2
 6f0:	orr	w1, w1, w0
 6f4:	add	x0, x21, #0x84
 6f8:	strb	w1, [sp, #48]
 6fc:	bl	a0 <aftime2ctime>
 700:	str	w0, [sp, #52]
 704:	mov	x0, x21
 708:	bl	0 <grub_free>
 70c:	ldp	x3, x2, [x20]
 710:	add	x1, sp, #0x30
 714:	mov	x0, x22
 718:	blr	x3
 71c:	ldp	x19, x20, [sp, #16]
 720:	ldp	x21, x22, [sp, #32]
 724:	ldp	x29, x30, [sp], #64
 728:	ret

000000000000072c <grub_affs_mount>:
 72c:	stp	x29, x30, [sp, #-96]!
 730:	mov	x29, sp
 734:	stp	x19, x20, [sp, #16]
 738:	stp	x21, x22, [sp, #32]
 73c:	stp	x23, x24, [sp, #48]
 740:	mov	x23, x0
 744:	mov	x0, #0x110                 	// #272
 748:	stp	x25, x26, [sp, #64]
 74c:	stp	x27, x28, [sp, #80]
 750:	bl	0 <grub_zalloc>
 754:	mov	x19, x0
 758:	cbz	x0, 8cc <grub_affs_mount+0x1a0>
 75c:	mov	x25, #0x0                   	// #0
 760:	mov	x20, #0x0                   	// #0
 764:	mov	w26, #0x2000000             	// #33554432
 768:	mov	w27, #0x1000000             	// #16777216
 76c:	mov	x4, x19
 770:	mov	x1, x25
 774:	mov	x0, x23
 778:	mov	x3, #0xc                   	// #12
 77c:	mov	x2, #0x0                   	// #0
 780:	bl	0 <grub_disk_read>
 784:	adrp	x0, 0 <grub_latin1_to_utf8>
 788:	ldr	x24, [x0]
 78c:	ldr	w0, [x24]
 790:	cbnz	w0, 80c <grub_affs_mount+0xe0>
 794:	adrp	x0, 0 <grub_latin1_to_utf8>
 798:	mov	x2, #0x3                   	// #3
 79c:	ldr	x1, [x0]
 7a0:	mov	x0, x19
 7a4:	bl	0 <grub_strncmp>
 7a8:	mov	w21, w0
 7ac:	cbnz	w0, 808 <grub_affs_mount+0xdc>
 7b0:	ldrb	w0, [x19, #3]
 7b4:	tbz	w0, #0, 808 <grub_affs_mount+0xdc>
 7b8:	cbnz	x20, 7cc <grub_affs_mount+0xa0>
 7bc:	mov	x0, #0x2000                	// #8192
 7c0:	bl	0 <grub_malloc>
 7c4:	mov	x20, x0
 7c8:	cbz	x0, 80c <grub_affs_mount+0xe0>
 7cc:	mov	w28, #0x200                 	// #512
 7d0:	ldr	w1, [x19, #8]
 7d4:	lsl	w22, w28, w21
 7d8:	sxtw	x22, w22
 7dc:	mov	x4, x20
 7e0:	rev	w1, w1
 7e4:	mov	x3, x22
 7e8:	mov	x0, x23
 7ec:	mov	x2, #0x0                   	// #0
 7f0:	lsl	x1, x1, x21
 7f4:	bl	0 <grub_disk_read>
 7f8:	ldr	w0, [x24]
 7fc:	cmp	w0, #0xb
 800:	b.ne	84c <grub_affs_mount+0x120>  // b.any
 804:	str	wzr, [x24]
 808:	cbz	x25, 844 <grub_affs_mount+0x118>
 80c:	ldr	w0, [x24]
 810:	cmp	w0, #0x0
 814:	ccmp	w0, #0xb, #0x4, ne  // ne = any
 818:	b.ne	82c <grub_affs_mount+0x100>  // b.any
 81c:	adrp	x0, 0 <grub_latin1_to_utf8>
 820:	ldr	x1, [x0]
 824:	mov	w0, #0x9                   	// #9
 828:	bl	0 <grub_error>
 82c:	mov	x0, x19
 830:	bl	0 <grub_free>
 834:	mov	x0, x20
 838:	mov	x19, #0x0                   	// #0
 83c:	bl	0 <grub_free>
 840:	b	8cc <grub_affs_mount+0x1a0>
 844:	mov	x25, #0x1                   	// #1
 848:	b	76c <grub_affs_mount+0x40>
 84c:	cbnz	w0, 80c <grub_affs_mount+0xe0>
 850:	ldr	w1, [x20]
 854:	cmp	w1, w26
 858:	b.ne	900 <grub_affs_mount+0x1d4>  // b.any
 85c:	ldr	w1, [x20, #12]
 860:	cbz	w1, 900 <grub_affs_mount+0x1d4>
 864:	and	x2, x22, #0xfffffffffffffffc
 868:	add	x2, x20, x2
 86c:	ldur	w2, [x2, #-4]
 870:	cmp	w2, w27
 874:	b.ne	900 <grub_affs_mount+0x1d4>  // b.any
 878:	lsr	x22, x22, #2
 87c:	mov	w2, #0x0                   	// #0
 880:	mov	w3, w2
 884:	cmp	x22, w2, uxtw
 888:	b.hi	8ec <grub_affs_mount+0x1c0>  // b.pmore
 88c:	cbnz	w0, 900 <grub_affs_mount+0x1d4>
 890:	ldr	w0, [x19, #8]
 894:	rev	w1, w1
 898:	str	x19, [x19, #16]
 89c:	mov	x2, #0xc8                  	// #200
 8a0:	rev	w0, w0
 8a4:	str	w0, [x19, #24]
 8a8:	str	xzr, [x19, #32]
 8ac:	add	x0, x19, #0x28
 8b0:	str	x23, [x19, #256]
 8b4:	str	w21, [x19, #264]
 8b8:	str	w1, [x19, #268]
 8bc:	mov	x1, x20
 8c0:	bl	0 <grub_memmove>
 8c4:	mov	x0, x20
 8c8:	bl	0 <grub_free>
 8cc:	mov	x0, x19
 8d0:	ldp	x19, x20, [sp, #16]
 8d4:	ldp	x21, x22, [sp, #32]
 8d8:	ldp	x23, x24, [sp, #48]
 8dc:	ldp	x25, x26, [sp, #64]
 8e0:	ldp	x27, x28, [sp, #80]
 8e4:	ldp	x29, x30, [sp], #96
 8e8:	ret
 8ec:	ldr	w3, [x20, x3, lsl #2]
 8f0:	add	w2, w2, #0x1
 8f4:	rev	w3, w3
 8f8:	add	w0, w0, w3
 8fc:	b	880 <grub_affs_mount+0x154>
 900:	add	w21, w21, #0x1
 904:	cmp	w21, #0x5
 908:	b.ne	7d0 <grub_affs_mount+0xa4>  // b.any
 90c:	b	808 <grub_affs_mount+0xdc>
	...

0000000000000928 <grub_affs_mtime>:
 928:	stp	x29, x30, [sp, #-80]!
 92c:	mov	x29, sp
 930:	stp	x19, x20, [sp, #16]
 934:	ldr	x19, [x0]
 938:	adrp	x0, 0 <grub_latin1_to_utf8>
 93c:	stp	x21, x22, [sp, #32]
 940:	mov	x22, x1
 944:	ldr	x21, [x0]
 948:	ldr	x0, [x21]
 94c:	str	x23, [sp, #48]
 950:	str	wzr, [x1]
 954:	bl	0 <grub_dl_ref>
 958:	mov	x0, x19
 95c:	bl	72c <grub_affs_mount>
 960:	mov	x19, x0
 964:	adrp	x0, 0 <grub_latin1_to_utf8>
 968:	ldr	x23, [x0]
 96c:	cbnz	x19, 994 <grub_affs_mtime+0x6c>
 970:	ldr	x0, [x21]
 974:	bl	0 <grub_dl_unref>
 978:	ldr	w20, [x23]
 97c:	mov	w0, w20
 980:	ldp	x19, x20, [sp, #16]
 984:	ldp	x21, x22, [sp, #32]
 988:	ldr	x23, [sp, #48]
 98c:	ldp	x29, x30, [sp], #80
 990:	ret
 994:	ldr	w0, [x19, #8]
 998:	add	x4, sp, #0x40
 99c:	ldr	w1, [x19, #264]
 9a0:	mov	x3, #0xc                   	// #12
 9a4:	rev	w0, w0
 9a8:	mov	x2, #0x1d8                 	// #472
 9ac:	add	x0, x0, #0x1
 9b0:	lsl	x1, x0, x1
 9b4:	sub	x1, x1, #0x1
 9b8:	ldr	x0, [x19, #256]
 9bc:	bl	0 <grub_disk_read>
 9c0:	ldr	w20, [x23]
 9c4:	cbz	w20, 9dc <grub_affs_mtime+0xb4>
 9c8:	ldr	x0, [x21]
 9cc:	bl	0 <grub_dl_unref>
 9d0:	mov	x0, x19
 9d4:	bl	0 <grub_free>
 9d8:	b	978 <grub_affs_mtime+0x50>
 9dc:	add	x0, sp, #0x40
 9e0:	bl	a0 <aftime2ctime>
 9e4:	str	w0, [x22]
 9e8:	ldr	x0, [x21]
 9ec:	bl	0 <grub_dl_unref>
 9f0:	mov	x0, x19
 9f4:	bl	0 <grub_free>
 9f8:	b	97c <grub_affs_mtime+0x54>
 9fc:	nop
	...

0000000000000a10 <grub_affs_label>:
 a10:	stp	x29, x30, [sp, #-272]!
 a14:	mov	x29, sp
 a18:	stp	x19, x20, [sp, #16]
 a1c:	ldr	x19, [x0]
 a20:	adrp	x0, 0 <grub_latin1_to_utf8>
 a24:	stp	x21, x22, [sp, #32]
 a28:	mov	x21, x1
 a2c:	ldr	x22, [x0]
 a30:	ldr	x0, [x22]
 a34:	str	x23, [sp, #48]
 a38:	bl	0 <grub_dl_ref>
 a3c:	mov	x0, x19
 a40:	bl	72c <grub_affs_mount>
 a44:	mov	x19, x0
 a48:	adrp	x0, 0 <grub_latin1_to_utf8>
 a4c:	ldr	x23, [x0]
 a50:	cbz	x19, ae4 <grub_affs_label+0xd4>
 a54:	ldr	w0, [x19, #8]
 a58:	add	x4, sp, #0x48
 a5c:	ldr	w1, [x19, #264]
 a60:	mov	x3, #0xc8                  	// #200
 a64:	rev	w0, w0
 a68:	mov	x2, #0x138                 	// #312
 a6c:	add	x0, x0, #0x1
 a70:	lsl	x1, x0, x1
 a74:	sub	x1, x1, #0x1
 a78:	ldr	x0, [x19, #256]
 a7c:	bl	0 <grub_disk_read>
 a80:	ldr	w0, [x23]
 a84:	cbnz	w0, ad0 <grub_affs_label+0xc0>
 a88:	ldrb	w20, [sp, #192]
 a8c:	mov	x2, #0x1e                  	// #30
 a90:	cmp	x20, #0x1e
 a94:	csel	x20, x20, x2, ls  // ls = plast
 a98:	lsl	x0, x20, #1
 a9c:	add	x0, x0, #0x1
 aa0:	bl	0 <grub_malloc>
 aa4:	str	x0, [x21]
 aa8:	cbz	x0, abc <grub_affs_label+0xac>
 aac:	mov	x2, x20
 ab0:	add	x1, sp, #0xc1
 ab4:	bl	0 <grub_latin1_to_utf8>
 ab8:	strb	wzr, [x0]
 abc:	ldr	x0, [x22]
 ac0:	bl	0 <grub_dl_unref>
 ac4:	mov	x0, x19
 ac8:	bl	0 <grub_free>
 acc:	ldr	w0, [x23]
 ad0:	ldp	x19, x20, [sp, #16]
 ad4:	ldp	x21, x22, [sp, #32]
 ad8:	ldr	x23, [sp, #48]
 adc:	ldp	x29, x30, [sp], #272
 ae0:	ret
 ae4:	str	xzr, [x21]
 ae8:	b	abc <grub_affs_label+0xac>
 aec:	nop
	...

0000000000000b00 <grub_affs_open>:
 b00:	stp	x29, x30, [sp, #-96]!
 b04:	mov	x29, sp
 b08:	stp	x19, x20, [sp, #16]
 b0c:	mov	x20, x0
 b10:	adrp	x0, 0 <grub_latin1_to_utf8>
 b14:	stp	x23, x24, [sp, #48]
 b18:	ldr	x24, [x0]
 b1c:	stp	x21, x22, [sp, #32]
 b20:	mov	x21, x1
 b24:	str	xzr, [sp, #88]
 b28:	ldr	x0, [x24]
 b2c:	str	x25, [sp, #64]
 b30:	bl	0 <grub_dl_ref>
 b34:	ldr	x0, [x20, #8]
 b38:	ldr	x0, [x0]
 b3c:	bl	72c <grub_affs_mount>
 b40:	mov	x19, x0
 b44:	adrp	x0, 0 <grub_latin1_to_utf8>
 b48:	ldr	x25, [x0]
 b4c:	cbz	x19, bdc <grub_affs_open+0xdc>
 b50:	adrp	x0, 0 <grub_latin1_to_utf8>
 b54:	add	x23, x19, #0x10
 b58:	add	x2, sp, #0x58
 b5c:	mov	x1, x23
 b60:	ldr	x4, [x0]
 b64:	adrp	x0, 0 <grub_latin1_to_utf8>
 b68:	mov	w5, #0x1                   	// #1
 b6c:	ldr	x3, [x0]
 b70:	mov	x0, x21
 b74:	bl	0 <grub_fshelp_find_file>
 b78:	ldr	w22, [x25]
 b7c:	ldr	x21, [sp, #88]
 b80:	cbnz	w22, bcc <grub_affs_open+0xcc>
 b84:	ldr	w0, [x21, #36]
 b88:	mov	x1, x21
 b8c:	mov	x2, #0xf0                  	// #240
 b90:	rev	w0, w0
 b94:	str	x0, [x20, #64]
 b98:	mov	x0, x23
 b9c:	bl	0 <memcpy>
 ba0:	mov	x0, x21
 ba4:	bl	0 <grub_free>
 ba8:	str	xzr, [x20, #24]
 bac:	str	x19, [x20, #80]
 bb0:	mov	w0, w22
 bb4:	ldp	x19, x20, [sp, #16]
 bb8:	ldp	x21, x22, [sp, #32]
 bbc:	ldp	x23, x24, [sp, #48]
 bc0:	ldr	x25, [sp, #64]
 bc4:	ldp	x29, x30, [sp], #96
 bc8:	ret
 bcc:	cmp	x23, x21
 bd0:	b.eq	bdc <grub_affs_open+0xdc>  // b.none
 bd4:	mov	x0, x21
 bd8:	bl	0 <grub_free>
 bdc:	mov	x0, x19
 be0:	bl	0 <grub_free>
 be4:	ldr	x0, [x24]
 be8:	bl	0 <grub_dl_unref>
 bec:	ldr	w22, [x25]
 bf0:	b	bb0 <grub_affs_open+0xb0>
 bf4:	nop
	...

0000000000000c18 <grub_affs_dir>:
 c18:	stp	x29, x30, [sp, #-96]!
 c1c:	mov	x29, sp
 c20:	stp	x19, x20, [sp, #16]
 c24:	mov	x19, x0
 c28:	adrp	x0, 0 <grub_latin1_to_utf8>
 c2c:	stp	x21, x22, [sp, #32]
 c30:	mov	x20, x1
 c34:	ldr	x21, [x0]
 c38:	stp	xzr, x2, [sp, #72]
 c3c:	str	x3, [sp, #88]
 c40:	ldr	x0, [x21]
 c44:	str	x23, [sp, #48]
 c48:	bl	0 <grub_dl_ref>
 c4c:	ldr	x0, [x19]
 c50:	bl	72c <grub_affs_mount>
 c54:	mov	x19, x0
 c58:	adrp	x0, 0 <grub_latin1_to_utf8>
 c5c:	ldr	x22, [x0]
 c60:	cbz	x19, cb8 <grub_affs_dir+0xa0>
 c64:	adrp	x0, 0 <grub_latin1_to_utf8>
 c68:	add	x23, x19, #0x10
 c6c:	add	x2, sp, #0x48
 c70:	mov	x1, x23
 c74:	ldr	x4, [x0]
 c78:	adrp	x0, 0 <grub_latin1_to_utf8>
 c7c:	mov	w5, #0x2                   	// #2
 c80:	ldr	x3, [x0]
 c84:	mov	x0, x20
 c88:	bl	0 <grub_fshelp_find_file>
 c8c:	ldr	w0, [x22]
 c90:	cbnz	w0, ca8 <grub_affs_dir+0x90>
 c94:	adrp	x0, 0 <grub_latin1_to_utf8>
 c98:	add	x2, sp, #0x50
 c9c:	ldr	x1, [x0]
 ca0:	ldr	x0, [sp, #72]
 ca4:	bl	240 <grub_affs_iterate_dir>
 ca8:	ldr	x0, [sp, #72]
 cac:	cmp	x23, x0
 cb0:	b.eq	cb8 <grub_affs_dir+0xa0>  // b.none
 cb4:	bl	0 <grub_free>
 cb8:	mov	x0, x19
 cbc:	bl	0 <grub_free>
 cc0:	ldr	x0, [x21]
 cc4:	bl	0 <grub_dl_unref>
 cc8:	ldr	w0, [x22]
 ccc:	ldp	x19, x20, [sp, #16]
 cd0:	ldp	x21, x22, [sp, #32]
 cd4:	ldr	x23, [sp, #48]
 cd8:	ldp	x29, x30, [sp], #96
 cdc:	ret
	...

0000000000000d08 <grub_mod_init>:
 d08:	stp	x29, x30, [sp, #-32]!
 d0c:	mov	x29, sp
 d10:	str	x19, [sp, #16]
 d14:	mov	x19, x0
 d18:	adrp	x0, 0 <grub_latin1_to_utf8>
 d1c:	ldr	x1, [x0]
 d20:	adrp	x0, 0 <grub_latin1_to_utf8>
 d24:	ldr	x0, [x0]
 d28:	bl	0 <grub_list_push>
 d2c:	adrp	x0, 0 <grub_latin1_to_utf8>
 d30:	ldr	x0, [x0]
 d34:	str	x19, [x0]
 d38:	ldr	x19, [sp, #16]
 d3c:	ldp	x29, x30, [sp], #32
 d40:	ret
 d44:	nop
	...

0000000000000d60 <grub_mod_fini>:
 d60:	adrp	x0, 0 <grub_latin1_to_utf8>
 d64:	ldr	x0, [x0]
 d68:	b	0 <grub_list_remove>
 d6c:	nop
	...
