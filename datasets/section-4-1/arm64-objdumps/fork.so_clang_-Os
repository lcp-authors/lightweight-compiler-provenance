
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fork.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000860 <.init>:
 860:	stp	x29, x30, [sp, #-16]!
 864:	mov	x29, sp
 868:	bl	980 <fprintf@plt+0x10>
 86c:	ldp	x29, x30, [sp], #16
 870:	ret

Disassembly of section .plt:

0000000000000880 <memcpy@plt-0x20>:
 880:	stp	x16, x30, [sp, #-16]!
 884:	adrp	x16, 11000 <dl_load@@Base+0x105ac>
 888:	ldr	x17, [x16, #4088]
 88c:	add	x16, x16, #0xff8
 890:	br	x17
 894:	nop
 898:	nop
 89c:	nop

00000000000008a0 <memcpy@plt>:
 8a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8a4:	ldr	x17, [x16]
 8a8:	add	x16, x16, #0x0
 8ac:	br	x17

00000000000008b0 <strlen@plt>:
 8b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8b4:	ldr	x17, [x16, #8]
 8b8:	add	x16, x16, #0x8
 8bc:	br	x17

00000000000008c0 <exit@plt>:
 8c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #16]
 8c8:	add	x16, x16, #0x10
 8cc:	br	x17

00000000000008d0 <__cxa_finalize@plt>:
 8d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8d4:	ldr	x17, [x16, #24]
 8d8:	add	x16, x16, #0x18
 8dc:	br	x17

00000000000008e0 <fork@plt>:
 8e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8e4:	ldr	x17, [x16, #32]
 8e8:	add	x16, x16, #0x20
 8ec:	br	x17

00000000000008f0 <getpid@plt>:
 8f0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8f4:	ldr	x17, [x16, #40]
 8f8:	add	x16, x16, #0x28
 8fc:	br	x17

0000000000000900 <getppid@plt>:
 900:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 904:	ldr	x17, [x16, #48]
 908:	add	x16, x16, #0x30
 90c:	br	x17

0000000000000910 <__gmon_start__@plt>:
 910:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 914:	ldr	x17, [x16, #56]
 918:	add	x16, x16, #0x38
 91c:	br	x17

0000000000000920 <fwrite@plt>:
 920:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 924:	ldr	x17, [x16, #64]
 928:	add	x16, x16, #0x40
 92c:	br	x17

0000000000000930 <wait@plt>:
 930:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 934:	ldr	x17, [x16, #72]
 938:	add	x16, x16, #0x48
 93c:	br	x17

0000000000000940 <dcgettext@plt>:
 940:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 944:	ldr	x17, [x16, #80]
 948:	add	x16, x16, #0x50
 94c:	br	x17

0000000000000950 <__errno_location@plt>:
 950:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 954:	ldr	x17, [x16, #88]
 958:	add	x16, x16, #0x58
 95c:	br	x17

0000000000000960 <waitpid@plt>:
 960:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 964:	ldr	x17, [x16, #96]
 968:	add	x16, x16, #0x60
 96c:	br	x17

0000000000000970 <fprintf@plt>:
 970:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 974:	ldr	x17, [x16, #104]
 978:	add	x16, x16, #0x68
 97c:	br	x17

Disassembly of section .text:

0000000000000980 <dl_load@@Base-0xd4>:
 980:	adrp	x0, 11000 <dl_load@@Base+0x105ac>
 984:	ldr	x0, [x0, #4056]
 988:	cbz	x0, 990 <fprintf@plt+0x20>
 98c:	b	910 <__gmon_start__@plt>
 990:	ret
 994:	nop
 998:	adrp	x0, 12000 <dl_load@@Base+0x115ac>
 99c:	add	x0, x0, #0x108
 9a0:	adrp	x1, 12000 <dl_load@@Base+0x115ac>
 9a4:	add	x1, x1, #0x108
 9a8:	cmp	x1, x0
 9ac:	b.eq	9c4 <fprintf@plt+0x54>  // b.none
 9b0:	adrp	x1, 11000 <dl_load@@Base+0x105ac>
 9b4:	ldr	x1, [x1, #4032]
 9b8:	cbz	x1, 9c4 <fprintf@plt+0x54>
 9bc:	mov	x16, x1
 9c0:	br	x16
 9c4:	ret
 9c8:	adrp	x0, 12000 <dl_load@@Base+0x115ac>
 9cc:	add	x0, x0, #0x108
 9d0:	adrp	x1, 12000 <dl_load@@Base+0x115ac>
 9d4:	add	x1, x1, #0x108
 9d8:	sub	x1, x1, x0
 9dc:	lsr	x2, x1, #63
 9e0:	add	x1, x2, x1, asr #3
 9e4:	cmp	xzr, x1, asr #1
 9e8:	asr	x1, x1, #1
 9ec:	b.eq	a04 <fprintf@plt+0x94>  // b.none
 9f0:	adrp	x2, 11000 <dl_load@@Base+0x105ac>
 9f4:	ldr	x2, [x2, #4064]
 9f8:	cbz	x2, a04 <fprintf@plt+0x94>
 9fc:	mov	x16, x2
 a00:	br	x16
 a04:	ret
 a08:	stp	x29, x30, [sp, #-32]!
 a0c:	mov	x29, sp
 a10:	str	x19, [sp, #16]
 a14:	adrp	x19, 12000 <dl_load@@Base+0x115ac>
 a18:	ldrb	w0, [x19, #264]
 a1c:	cbnz	w0, a44 <fprintf@plt+0xd4>
 a20:	adrp	x0, 11000 <dl_load@@Base+0x105ac>
 a24:	ldr	x0, [x0, #4040]
 a28:	cbz	x0, a38 <fprintf@plt+0xc8>
 a2c:	adrp	x0, 12000 <dl_load@@Base+0x115ac>
 a30:	ldr	x0, [x0, #112]
 a34:	bl	8d0 <__cxa_finalize@plt>
 a38:	bl	998 <fprintf@plt+0x28>
 a3c:	mov	w0, #0x1                   	// #1
 a40:	strb	w0, [x19, #264]
 a44:	ldr	x19, [sp, #16]
 a48:	ldp	x29, x30, [sp], #32
 a4c:	ret
 a50:	b	9c8 <fprintf@plt+0x58>

0000000000000a54 <dl_load@@Base>:
 a54:	stp	x29, x30, [sp, #-80]!
 a58:	stp	x24, x23, [sp, #32]
 a5c:	stp	x22, x21, [sp, #48]
 a60:	adrp	x22, 12000 <dl_load@@Base+0x115ac>
 a64:	adrp	x23, 12000 <dl_load@@Base+0x115ac>
 a68:	stp	x26, x25, [sp, #16]
 a6c:	stp	x20, x19, [sp, #64]
 a70:	str	x0, [x22, #272]
 a74:	str	x1, [x23, #280]
 a78:	ldr	w8, [x0]
 a7c:	mov	x29, sp
 a80:	cmp	w8, #0x2
 a84:	b.ne	b38 <dl_load@@Base+0xe4>  // b.any
 a88:	ldr	w8, [x0, #4]
 a8c:	tbnz	w8, #31, b38 <dl_load@@Base+0xe4>
 a90:	adrp	x26, 12000 <dl_load@@Base+0x115ac>
 a94:	adrp	x19, 0 <memcpy@plt-0x8a0>
 a98:	adrp	x20, 0 <memcpy@plt-0x8a0>
 a9c:	mov	x25, xzr
 aa0:	mov	w24, wzr
 aa4:	add	x26, x26, #0x78
 aa8:	add	x19, x19, #0xef6
 aac:	add	x20, x20, #0xf2a
 ab0:	add	x21, x26, x25
 ab4:	ldr	x8, [x21]
 ab8:	cbz	x8, b00 <dl_load@@Base+0xac>
 abc:	ldr	x8, [x22, #272]
 ac0:	ldr	x0, [x23, #280]
 ac4:	mov	x1, x19
 ac8:	mov	x2, x21
 acc:	ldr	x8, [x8, #48]
 ad0:	blr	x8
 ad4:	cbnz	w0, af4 <dl_load@@Base+0xa0>
 ad8:	ldr	x8, [x22, #272]
 adc:	ldr	x0, [x23, #280]
 ae0:	ldr	x2, [x21]
 ae4:	mov	x1, x20
 ae8:	ldr	x8, [x8, #104]
 aec:	blr	x8
 af0:	add	w24, w24, #0x1
 af4:	add	x25, x25, #0x30
 af8:	cmp	x25, #0x90
 afc:	b.ne	ab0 <dl_load@@Base+0x5c>  // b.any
 b00:	ldr	x8, [x22, #272]
 b04:	ldr	x0, [x23, #280]
 b08:	adrp	x1, 0 <memcpy@plt-0x8a0>
 b0c:	add	x1, x1, #0xfad
 b10:	ldr	x8, [x8, #88]
 b14:	blr	x8
 b18:	cmp	w24, #0x0
 b1c:	ldp	x20, x19, [sp, #64]
 b20:	ldp	x22, x21, [sp, #48]
 b24:	ldp	x24, x23, [sp, #32]
 b28:	ldp	x26, x25, [sp, #16]
 b2c:	cset	w0, eq  // eq = none
 b30:	ldp	x29, x30, [sp], #80
 b34:	ret
 b38:	adrp	x19, 11000 <dl_load@@Base+0x105ac>
 b3c:	ldr	x19, [x19, #4048]
 b40:	adrp	x0, 0 <memcpy@plt-0x8a0>
 b44:	add	x0, x0, #0xed4
 b48:	mov	w1, #0x22                  	// #34
 b4c:	ldr	x3, [x19]
 b50:	mov	w2, #0x1                   	// #1
 b54:	bl	920 <fwrite@plt>
 b58:	ldr	x8, [x22, #272]
 b5c:	ldr	x0, [x19]
 b60:	adrp	x1, 0 <memcpy@plt-0x8a0>
 b64:	add	x1, x1, #0xef7
 b68:	ldp	w4, w5, [x8]
 b6c:	mov	w2, #0x2                   	// #2
 b70:	mov	w3, wzr
 b74:	bl	970 <fprintf@plt>
 b78:	mov	w0, #0x1                   	// #1
 b7c:	bl	8c0 <exit@plt>
 b80:	sub	sp, sp, #0x50
 b84:	stp	x29, x30, [sp, #32]
 b88:	stp	x22, x21, [sp, #48]
 b8c:	stp	x20, x19, [sp, #64]
 b90:	add	x29, sp, #0x20
 b94:	mov	x19, x1
 b98:	bl	8e0 <fork@plt>
 b9c:	mov	w20, w0
 ba0:	tbnz	w0, #31, c24 <dl_load@@Base+0x1d0>
 ba4:	cbnz	w20, c48 <dl_load@@Base+0x1f4>
 ba8:	adrp	x22, 12000 <dl_load@@Base+0x115ac>
 bac:	ldr	x8, [x22, #272]
 bb0:	adrp	x21, 12000 <dl_load@@Base+0x115ac>
 bb4:	ldr	x0, [x21, #280]
 bb8:	adrp	x1, 0 <memcpy@plt-0x8a0>
 bbc:	ldr	x8, [x8, #168]
 bc0:	adrp	x2, 0 <memcpy@plt-0x8a0>
 bc4:	add	x1, x1, #0xef6
 bc8:	add	x2, x2, #0xf53
 bcc:	mov	x4, sp
 bd0:	mov	w3, #0x5                   	// #5
 bd4:	blr	x8
 bd8:	cbz	w0, c48 <dl_load@@Base+0x1f4>
 bdc:	ldr	w8, [sp]
 be0:	cmp	w8, #0x5
 be4:	b.ne	c74 <dl_load@@Base+0x220>  // b.any
 be8:	ldr	x21, [sp, #8]
 bec:	bl	8f0 <getpid@plt>
 bf0:	adrp	x1, 0 <memcpy@plt-0x8a0>
 bf4:	scvtf	d0, w0
 bf8:	add	x1, x1, #0xf7d
 bfc:	mov	x0, x21
 c00:	bl	dd0 <dl_load@@Base+0x37c>
 c04:	ldr	x21, [sp, #8]
 c08:	bl	900 <getppid@plt>
 c0c:	adrp	x1, 0 <memcpy@plt-0x8a0>
 c10:	scvtf	d0, w0
 c14:	add	x1, x1, #0xf7c
 c18:	mov	x0, x21
 c1c:	bl	dd0 <dl_load@@Base+0x37c>
 c20:	b	c48 <dl_load@@Base+0x1f4>
 c24:	adrp	x8, 12000 <dl_load@@Base+0x115ac>
 c28:	ldr	x8, [x8, #272]
 c2c:	adrp	x9, 12000 <dl_load@@Base+0x115ac>
 c30:	ldr	x21, [x9, #280]
 c34:	ldr	x22, [x8, #128]
 c38:	bl	950 <__errno_location@plt>
 c3c:	ldr	w1, [x0]
 c40:	mov	x0, x21
 c44:	blr	x22
 c48:	scvtf	d0, w20
 c4c:	mov	w8, #0x1                   	// #1
 c50:	str	w8, [x19]
 c54:	str	d0, [x19, #8]
 c58:	str	wzr, [x19, #16]
 c5c:	mov	x0, x19
 c60:	ldp	x20, x19, [sp, #64]
 c64:	ldp	x22, x21, [sp, #48]
 c68:	ldp	x29, x30, [sp, #32]
 c6c:	add	sp, sp, #0x50
 c70:	ret
 c74:	ldr	x8, [x22, #272]
 c78:	ldr	w9, [x8, #24]
 c7c:	cbz	w9, c48 <dl_load@@Base+0x1f4>
 c80:	ldr	x22, [x8, #112]
 c84:	ldr	x21, [x21, #280]
 c88:	adrp	x1, 0 <memcpy@plt-0x8a0>
 c8c:	add	x1, x1, #0xf5c
 c90:	mov	w2, #0x5                   	// #5
 c94:	mov	x0, xzr
 c98:	bl	940 <dcgettext@plt>
 c9c:	mov	x1, x0
 ca0:	mov	x0, x21
 ca4:	blr	x22
 ca8:	b	c48 <dl_load@@Base+0x1f4>
 cac:	sub	sp, sp, #0x60
 cb0:	stp	x22, x21, [sp, #64]
 cb4:	adrp	x21, 12000 <dl_load@@Base+0x115ac>
 cb8:	ldr	x8, [x21, #272]
 cbc:	stp	x29, x30, [sp, #32]
 cc0:	stp	x24, x23, [sp, #48]
 cc4:	stp	x20, x19, [sp, #80]
 cc8:	adrp	x23, 12000 <dl_load@@Base+0x115ac>
 ccc:	ldr	x8, [x8, #152]
 cd0:	ldr	x0, [x23, #280]
 cd4:	mov	x19, x1
 cd8:	mov	x3, sp
 cdc:	mov	w2, #0x1                   	// #1
 ce0:	mov	x1, xzr
 ce4:	add	x29, sp, #0x20
 ce8:	mov	w22, #0x1                   	// #1
 cec:	blr	x8
 cf0:	cbz	w0, d30 <dl_load@@Base+0x2dc>
 cf4:	ldr	d0, [sp, #8]
 cf8:	mov	w2, #0x3                   	// #3
 cfc:	mov	x1, xzr
 d00:	fcvtzs	w0, d0
 d04:	bl	960 <waitpid@plt>
 d08:	mov	w20, w0
 d0c:	tbz	w0, #31, d34 <dl_load@@Base+0x2e0>
 d10:	ldr	x8, [x21, #272]
 d14:	ldr	x21, [x23, #280]
 d18:	ldr	x24, [x8, #128]
 d1c:	bl	950 <__errno_location@plt>
 d20:	ldr	w1, [x0]
 d24:	mov	x0, x21
 d28:	blr	x24
 d2c:	b	d34 <dl_load@@Base+0x2e0>
 d30:	mov	w20, #0xffffffff            	// #-1
 d34:	scvtf	d0, w20
 d38:	str	w22, [x19]
 d3c:	str	d0, [x19, #8]
 d40:	str	wzr, [x19, #16]
 d44:	mov	x0, x19
 d48:	ldp	x20, x19, [sp, #80]
 d4c:	ldp	x22, x21, [sp, #64]
 d50:	ldp	x24, x23, [sp, #48]
 d54:	ldp	x29, x30, [sp, #32]
 d58:	add	sp, sp, #0x60
 d5c:	ret
 d60:	stp	x29, x30, [sp, #-48]!
 d64:	mov	x0, xzr
 d68:	stp	x22, x21, [sp, #16]
 d6c:	stp	x20, x19, [sp, #32]
 d70:	mov	x29, sp
 d74:	mov	x19, x1
 d78:	bl	930 <wait@plt>
 d7c:	mov	w20, w0
 d80:	tbz	w0, #31, da8 <dl_load@@Base+0x354>
 d84:	adrp	x8, 12000 <dl_load@@Base+0x115ac>
 d88:	ldr	x8, [x8, #272]
 d8c:	adrp	x9, 12000 <dl_load@@Base+0x115ac>
 d90:	ldr	x21, [x9, #280]
 d94:	ldr	x22, [x8, #128]
 d98:	bl	950 <__errno_location@plt>
 d9c:	ldr	w1, [x0]
 da0:	mov	x0, x21
 da4:	blr	x22
 da8:	scvtf	d0, w20
 dac:	mov	w8, #0x1                   	// #1
 db0:	str	w8, [x19]
 db4:	str	d0, [x19, #8]
 db8:	str	wzr, [x19, #16]
 dbc:	mov	x0, x19
 dc0:	ldp	x20, x19, [sp, #32]
 dc4:	ldp	x22, x21, [sp, #16]
 dc8:	ldp	x29, x30, [sp], #48
 dcc:	ret
 dd0:	sub	sp, sp, #0xa0
 dd4:	adrp	x8, 12000 <dl_load@@Base+0x115ac>
 dd8:	stp	x26, x25, [sp, #96]
 ddc:	ldr	x26, [x8, #272]
 de0:	stp	x29, x30, [sp, #80]
 de4:	stp	x24, x23, [sp, #112]
 de8:	stp	x22, x21, [sp, #128]
 dec:	stp	x20, x19, [sp, #144]
 df0:	adrp	x8, 12000 <dl_load@@Base+0x115ac>
 df4:	ldr	x25, [x26, #232]
 df8:	ldr	x19, [x8, #280]
 dfc:	mov	x20, x0
 e00:	mov	x0, x1
 e04:	str	d8, [sp, #64]
 e08:	add	x29, sp, #0x40
 e0c:	mov	v8.16b, v0.16b
 e10:	mov	x21, x1
 e14:	bl	8b0 <strlen@plt>
 e18:	movi	v0.2d, #0x0
 e1c:	mov	w8, #0x2                   	// #2
 e20:	stp	q0, q0, [sp, #32]
 e24:	str	w8, [sp, #32]
 e28:	str	x0, [sp, #48]
 e2c:	ldr	x8, [x26, #280]
 e30:	add	x24, x0, #0x1
 e34:	mov	x22, x0
 e38:	mov	x0, x24
 e3c:	blr	x8
 e40:	mov	x23, x0
 e44:	cbnz	x0, e68 <dl_load@@Base+0x414>
 e48:	ldr	x8, [x26, #96]
 e4c:	adrp	x1, 0 <memcpy@plt-0x8a0>
 e50:	adrp	x2, 0 <memcpy@plt-0x8a0>
 e54:	add	x1, x1, #0xf81
 e58:	add	x2, x2, #0xf9f
 e5c:	mov	x0, x19
 e60:	mov	x3, x24
 e64:	blr	x8
 e68:	mov	x0, x23
 e6c:	mov	x1, x21
 e70:	mov	x2, x22
 e74:	bl	8a0 <memcpy@plt>
 e78:	mov	w8, #0x1                   	// #1
 e7c:	add	x2, sp, #0x20
 e80:	mov	x3, sp
 e84:	mov	x0, x19
 e88:	mov	x1, x20
 e8c:	strb	wzr, [x23, x22]
 e90:	str	x23, [sp, #40]
 e94:	str	d8, [sp, #8]
 e98:	str	w8, [sp]
 e9c:	str	wzr, [sp, #16]
 ea0:	blr	x25
 ea4:	ldp	x20, x19, [sp, #144]
 ea8:	ldp	x22, x21, [sp, #128]
 eac:	ldp	x24, x23, [sp, #112]
 eb0:	ldp	x26, x25, [sp, #96]
 eb4:	ldp	x29, x30, [sp, #80]
 eb8:	ldr	d8, [sp, #64]
 ebc:	add	sp, sp, #0xa0
 ec0:	ret

Disassembly of section .fini:

0000000000000ec4 <.fini>:
 ec4:	stp	x29, x30, [sp, #-16]!
 ec8:	mov	x29, sp
 ecc:	ldp	x29, x30, [sp], #16
 ed0:	ret
