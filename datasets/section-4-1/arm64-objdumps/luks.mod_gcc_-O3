
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//luks.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xd10>:
       0:	sub	sp, sp, #0x4e0
       4:	mov	x2, #0xf0                  	// #240
       8:	stp	x29, x30, [sp]
       c:	mov	x29, sp
      10:	stp	x19, x20, [sp, #16]
      14:	mov	x20, x0
      18:	add	x0, sp, #0x1a0
      1c:	stp	x21, x22, [sp, #32]
      20:	mov	x21, x1
      24:	mov	w1, #0x0                   	// #0
      28:	stp	xzr, xzr, [sp, #400]
      2c:	bl	0 <memset>
      30:	mov	x0, x20
      34:	add	x4, sp, #0x290
      38:	mov	x3, #0x250                 	// #592
      3c:	mov	x2, #0x0                   	// #0
      40:	mov	x1, #0x0                   	// #0
      44:	bl	0 <grub_disk_read>
      48:	mov	w19, w0
      4c:	cbz	w0, 68 <grub_mod_init-0xca8>
      50:	mov	w0, w19
      54:	ldp	x29, x30, [sp]
      58:	ldp	x19, x20, [sp, #16]
      5c:	ldp	x21, x22, [sp, #32]
      60:	add	sp, sp, #0x4e0
      64:	ret
      68:	adrp	x0, 0 <grub_mod_init-0xd10>
      6c:	stp	x23, x24, [sp, #48]
      70:	ldr	x0, [x0]
      74:	bl	0 <grub_puts_>
      78:	ldr	w22, [sp, #764]
      7c:	rev	w24, w22
      80:	rev	w22, w22
      84:	cmp	w24, #0x80
      88:	b.hi	450 <grub_mod_init-0x8c0>  // b.pmore
      8c:	ldr	w2, [sp, #864]
      90:	mov	w1, #0xac00                	// #44032
      94:	movk	w1, #0xf371, lsl #16
      98:	mov	x0, #0x1                   	// #1
      9c:	cmp	w2, w1
      a0:	b.ne	b4 <grub_mod_init-0xc5c>  // b.any
      a4:	ldr	w0, [sp, #908]
      a8:	rev	w0, w0
      ac:	cmp	x0, #0x0
      b0:	csinc	x0, x0, xzr, ne  // ne = any
      b4:	ldr	w2, [sp, #912]
      b8:	mov	w1, #0xac00                	// #44032
      bc:	movk	w1, #0xf371, lsl #16
      c0:	cmp	w2, w1
      c4:	b.ne	d8 <grub_mod_init-0xc38>  // b.any
      c8:	ldr	w1, [sp, #956]
      cc:	rev	w1, w1
      d0:	cmp	x0, x1
      d4:	csel	x0, x0, x1, cs  // cs = hs, nlast
      d8:	ldr	w2, [sp, #960]
      dc:	mov	w1, #0xac00                	// #44032
      e0:	movk	w1, #0xf371, lsl #16
      e4:	cmp	w2, w1
      e8:	b.ne	fc <grub_mod_init-0xc14>  // b.any
      ec:	ldr	w1, [sp, #1004]
      f0:	rev	w1, w1
      f4:	cmp	x0, x1
      f8:	csel	x0, x0, x1, cs  // cs = hs, nlast
      fc:	ldr	w2, [sp, #1008]
     100:	mov	w1, #0xac00                	// #44032
     104:	movk	w1, #0xf371, lsl #16
     108:	cmp	w2, w1
     10c:	b.ne	120 <grub_mod_init-0xbf0>  // b.any
     110:	ldr	w1, [sp, #1052]
     114:	rev	w1, w1
     118:	cmp	x0, x1
     11c:	csel	x0, x0, x1, cs  // cs = hs, nlast
     120:	ldr	w2, [sp, #1056]
     124:	mov	w1, #0xac00                	// #44032
     128:	movk	w1, #0xf371, lsl #16
     12c:	cmp	w2, w1
     130:	b.ne	144 <grub_mod_init-0xbcc>  // b.any
     134:	ldr	w1, [sp, #1100]
     138:	rev	w1, w1
     13c:	cmp	x0, x1
     140:	csel	x0, x0, x1, cs  // cs = hs, nlast
     144:	ldr	w2, [sp, #1104]
     148:	mov	w1, #0xac00                	// #44032
     14c:	movk	w1, #0xf371, lsl #16
     150:	cmp	w2, w1
     154:	b.ne	168 <grub_mod_init-0xba8>  // b.any
     158:	ldr	w1, [sp, #1148]
     15c:	rev	w1, w1
     160:	cmp	x0, x1
     164:	csel	x0, x0, x1, cs  // cs = hs, nlast
     168:	ldr	w2, [sp, #1152]
     16c:	mov	w1, #0xac00                	// #44032
     170:	movk	w1, #0xf371, lsl #16
     174:	cmp	w2, w1
     178:	b.ne	18c <grub_mod_init-0xb84>  // b.any
     17c:	ldr	w1, [sp, #1196]
     180:	rev	w1, w1
     184:	cmp	x0, x1
     188:	csel	x0, x0, x1, cs  // cs = hs, nlast
     18c:	ldr	w2, [sp, #1200]
     190:	mov	w1, #0xac00                	// #44032
     194:	movk	w1, #0xf371, lsl #16
     198:	cmp	w2, w1
     19c:	b.ne	1b0 <grub_mod_init-0xb60>  // b.any
     1a0:	ldr	w1, [sp, #1244]
     1a4:	rev	w1, w1
     1a8:	cmp	x0, x1
     1ac:	csel	x0, x0, x1, cs  // cs = hs, nlast
     1b0:	mul	x0, x0, x22
     1b4:	bl	0 <grub_malloc>
     1b8:	mov	x23, x0
     1bc:	cbz	x0, 46c <grub_mod_init-0x8a4>
     1c0:	ldr	x0, [x20, #40]
     1c4:	stp	x25, x26, [sp, #64]
     1c8:	stp	x27, x28, [sp, #80]
     1cc:	cbz	x0, 288 <grub_mod_init-0xa88>
     1d0:	bl	0 <grub_partition_get_name>
     1d4:	mov	x3, x0
     1d8:	ldr	x2, [x20, #40]
     1dc:	ldr	x1, [x20]
     1e0:	cbz	x2, 4d4 <grub_mod_init-0x83c>
     1e4:	adrp	x0, 0 <grub_mod_init-0xd10>
     1e8:	ldr	x2, [x0]
     1ec:	mov	x25, x3
     1f0:	cbz	x3, 514 <grub_mod_init-0x7fc>
     1f4:	adrp	x0, 0 <grub_mod_init-0xd10>
     1f8:	add	x4, x21, #0x8c
     1fc:	add	x28, sp, #0x368
     200:	ldr	x0, [x0]
     204:	bl	0 <grub_printf_>
     208:	mov	x0, x25
     20c:	bl	0 <grub_free>
     210:	add	x0, sp, #0x190
     214:	mov	w1, #0x100                 	// #256
     218:	bl	0 <grub_password_get>
     21c:	cbz	w0, 49c <grub_mod_init-0x874>
     220:	mov	w27, #0x71f3                	// #29171
     224:	movk	w27, #0xac, lsl #16
     228:	ldur	w0, [x28, #-8]
     22c:	rev	w0, w0
     230:	cmp	w0, w27
     234:	b.eq	2a0 <grub_mod_init-0xa70>  // b.none
     238:	add	w19, w19, #0x1
     23c:	add	x28, x28, #0x30
     240:	cmp	w19, #0x8
     244:	b.ne	228 <grub_mod_init-0xae8>  // b.any
     248:	mov	x0, x23
     24c:	bl	0 <grub_free>
     250:	adrp	x1, 0 <grub_mod_init-0xd10>
     254:	mov	w0, #0x1e                  	// #30
     258:	ldr	x1, [x1]
     25c:	bl	0 <grub_error>
     260:	mov	w19, w0
     264:	mov	w0, w19
     268:	ldp	x29, x30, [sp]
     26c:	ldp	x19, x20, [sp, #16]
     270:	ldp	x21, x22, [sp, #32]
     274:	ldp	x23, x24, [sp, #48]
     278:	ldp	x25, x26, [sp, #64]
     27c:	ldp	x27, x28, [sp, #80]
     280:	add	sp, sp, #0x4e0
     284:	ret
     288:	adrp	x0, 0 <grub_mod_init-0xd10>
     28c:	mov	x25, #0x0                   	// #0
     290:	ldr	x1, [x20]
     294:	ldr	x3, [x0]
     298:	mov	x2, x3
     29c:	b	1f4 <grub_mod_init-0xb1c>
     2a0:	adrp	x2, 0 <grub_mod_init-0xd10>
     2a4:	adrp	x1, 0 <grub_mod_init-0xd10>
     2a8:	adrp	x0, 0 <grub_mod_init-0xd10>
     2ac:	mov	w4, w19
     2b0:	ldr	x3, [x2]
     2b4:	ldr	x26, [x1]
     2b8:	mov	w1, #0x170                 	// #368
     2bc:	ldr	x25, [x0]
     2c0:	mov	x2, x26
     2c4:	mov	x0, x25
     2c8:	bl	0 <grub_real_dprintf>
     2cc:	ldr	x1, [x21, #88]
     2d0:	add	x0, sp, #0x190
     2d4:	str	x1, [sp, #104]
     2d8:	bl	0 <grub_strlen>
     2dc:	mov	x2, x0
     2e0:	ldr	x1, [sp, #104]
     2e4:	mov	x7, x22
     2e8:	ldur	w5, [x28, #-4]
     2ec:	add	x6, sp, #0x110
     2f0:	mov	x0, x1
     2f4:	add	x1, sp, #0x190
     2f8:	mov	x3, x28
     2fc:	rev	w5, w5
     300:	mov	x4, #0x20                  	// #32
     304:	bl	0 <grub_crypto_pbkdf2>
     308:	mov	w1, w0
     30c:	cbnz	w0, 4e0 <grub_mod_init-0x830>
     310:	adrp	x3, 0 <grub_mod_init-0xd10>
     314:	mov	x2, x26
     318:	mov	x0, x25
     31c:	mov	w1, #0x181                 	// #385
     320:	ldr	x3, [x3]
     324:	bl	0 <grub_real_dprintf>
     328:	add	x1, sp, #0x110
     32c:	mov	x2, x22
     330:	mov	x0, x21
     334:	bl	0 <grub_cryptodisk_setkey>
     338:	mov	w1, w0
     33c:	cbnz	w0, 4e0 <grub_mod_init-0x830>
     340:	ldp	w1, w3, [x28, #32]
     344:	mov	x4, x23
     348:	mov	x0, x20
     34c:	mov	x2, #0x0                   	// #0
     350:	rev	w3, w3
     354:	rev	w1, w1
     358:	umull	x3, w3, w24
     35c:	str	x3, [sp, #104]
     360:	bl	0 <grub_disk_read>
     364:	mov	w1, w0
     368:	ldr	x3, [sp, #104]
     36c:	cbnz	w0, 4f8 <grub_mod_init-0x818>
     370:	mov	x1, x23
     374:	mov	x2, x3
     378:	mov	x0, x21
     37c:	mov	x3, #0x0                   	// #0
     380:	bl	0 <grub_cryptodisk_decrypt>
     384:	mov	w1, w0
     388:	cbnz	w0, 4e0 <grub_mod_init-0x830>
     38c:	ldr	x0, [x21, #88]
     390:	mov	x1, x23
     394:	ldr	w4, [x28, #36]
     398:	mov	x3, x22
     39c:	add	x2, sp, #0x90
     3a0:	rev	w4, w4
     3a4:	bl	d50 <AF_merge>
     3a8:	mov	w1, w0
     3ac:	cbnz	w0, 4e0 <grub_mod_init-0x830>
     3b0:	adrp	x3, 0 <grub_mod_init-0xd10>
     3b4:	mov	x2, x26
     3b8:	mov	x0, x25
     3bc:	mov	w1, #0x1a7                 	// #423
     3c0:	ldr	x3, [x3]
     3c4:	bl	0 <grub_real_dprintf>
     3c8:	ldr	x0, [x21, #88]
     3cc:	add	x1, sp, #0x90
     3d0:	ldr	w2, [sp, #764]
     3d4:	add	x6, sp, #0x78
     3d8:	ldr	w5, [sp, #820]
     3dc:	add	x3, sp, #0x314
     3e0:	rev	w2, w2
     3e4:	mov	x7, #0x14                  	// #20
     3e8:	rev	w5, w5
     3ec:	mov	x4, #0x20                  	// #32
     3f0:	bl	0 <grub_crypto_pbkdf2>
     3f4:	mov	w1, w0
     3f8:	cbnz	w0, 4e0 <grub_mod_init-0x830>
     3fc:	add	x1, sp, #0x300
     400:	add	x0, sp, #0x78
     404:	mov	x2, #0x14                  	// #20
     408:	bl	0 <grub_memcmp>
     40c:	cbnz	w0, 480 <grub_mod_init-0x890>
     410:	adrp	x0, 0 <grub_mod_init-0xd10>
     414:	mov	w1, w19
     418:	ldr	x0, [x0]
     41c:	bl	0 <grub_printf_>
     420:	mov	x2, x22
     424:	add	x1, sp, #0x90
     428:	mov	x0, x21
     42c:	bl	0 <grub_cryptodisk_setkey>
     430:	mov	w19, w0
     434:	mov	x0, x23
     438:	cbnz	w19, 4b4 <grub_mod_init-0x85c>
     43c:	bl	0 <grub_free>
     440:	ldp	x23, x24, [sp, #48]
     444:	ldp	x25, x26, [sp, #64]
     448:	ldp	x27, x28, [sp, #80]
     44c:	b	50 <grub_mod_init-0xcc0>
     450:	adrp	x1, 0 <grub_mod_init-0xd10>
     454:	mov	w0, #0x9                   	// #9
     458:	ldr	x1, [x1]
     45c:	bl	0 <grub_error>
     460:	mov	w19, w0
     464:	ldp	x23, x24, [sp, #48]
     468:	b	50 <grub_mod_init-0xcc0>
     46c:	adrp	x0, 0 <grub_mod_init-0xd10>
     470:	ldp	x23, x24, [sp, #48]
     474:	ldr	x0, [x0]
     478:	ldr	w19, [x0]
     47c:	b	50 <grub_mod_init-0xcc0>
     480:	adrp	x3, 0 <grub_mod_init-0xd10>
     484:	mov	x2, x26
     488:	mov	x0, x25
     48c:	mov	w1, #0x1bd                 	// #445
     490:	ldr	x3, [x3]
     494:	bl	0 <grub_real_dprintf>
     498:	b	238 <grub_mod_init-0xad8>
     49c:	mov	x0, x23
     4a0:	bl	0 <grub_free>
     4a4:	adrp	x1, 0 <grub_mod_init-0xd10>
     4a8:	mov	w0, #0x12                  	// #18
     4ac:	ldr	x1, [x1]
     4b0:	b	25c <grub_mod_init-0xab4>
     4b4:	bl	0 <grub_free>
     4b8:	mov	w0, w19
     4bc:	bl	0 <grub_crypto_gcry_error>
     4c0:	mov	w19, w0
     4c4:	ldp	x23, x24, [sp, #48]
     4c8:	ldp	x25, x26, [sp, #64]
     4cc:	ldp	x27, x28, [sp, #80]
     4d0:	b	50 <grub_mod_init-0xcc0>
     4d4:	adrp	x0, 0 <grub_mod_init-0xd10>
     4d8:	ldr	x2, [x0]
     4dc:	b	1ec <grub_mod_init-0xb24>
     4e0:	mov	x0, x23
     4e4:	str	w1, [sp, #104]
     4e8:	bl	0 <grub_free>
     4ec:	ldr	w1, [sp, #104]
     4f0:	mov	w0, w1
     4f4:	b	4bc <grub_mod_init-0x854>
     4f8:	mov	x0, x23
     4fc:	mov	w19, w1
     500:	bl	0 <grub_free>
     504:	ldp	x23, x24, [sp, #48]
     508:	ldp	x25, x26, [sp, #64]
     50c:	ldp	x27, x28, [sp, #80]
     510:	b	50 <grub_mod_init-0xcc0>
     514:	adrp	x0, 0 <grub_mod_init-0xd10>
     518:	mov	x25, #0x0                   	// #0
     51c:	ldr	x3, [x0]
     520:	b	1f4 <grub_mod_init-0xb1c>
     524:	nop
	...
     5a0:	sub	sp, sp, #0x360
     5a4:	stp	x29, x30, [sp]
     5a8:	mov	x29, sp
     5ac:	stp	x19, x20, [sp, #16]
     5b0:	cbnz	w2, 7c8 <grub_mod_init-0x548>
     5b4:	mov	x19, x1
     5b8:	add	x4, sp, #0x110
     5bc:	mov	x3, #0x250                 	// #592
     5c0:	mov	x2, #0x0                   	// #0
     5c4:	mov	x1, #0x0                   	// #0
     5c8:	stp	x21, x22, [sp, #32]
     5cc:	mov	x21, x0
     5d0:	bl	0 <grub_disk_read>
     5d4:	mov	w20, w0
     5d8:	cbnz	w0, 7bc <grub_mod_init-0x554>
     5dc:	adrp	x1, 0 <grub_mod_init-0xd10>
     5e0:	add	x0, sp, #0x110
     5e4:	mov	x2, #0x6                   	// #6
     5e8:	ldr	x1, [x1]
     5ec:	bl	0 <grub_memcmp>
     5f0:	cbnz	w0, 7c4 <grub_mod_init-0x54c>
     5f4:	ldrh	w1, [sp, #278]
     5f8:	lsl	w2, w1, #8
     5fc:	orr	w1, w2, w1, lsr #8
     600:	sxth	w1, w1
     604:	cmp	w1, #0x1
     608:	b.ne	7c4 <grub_mod_init-0x54c>  // b.any
     60c:	add	x1, sp, #0x110
     610:	add	x2, sp, #0x1b8
     614:	add	x5, sp, #0xe0
     618:	add	x6, x1, #0xd0
     61c:	nop
     620:	ldrb	w4, [x2]
     624:	mov	x3, x5
     628:	add	x2, x2, #0x1
     62c:	cmp	w4, #0x2d
     630:	b.eq	63c <grub_mod_init-0x6d4>  // b.none
     634:	strb	w4, [x3], #1
     638:	mov	x5, x3
     63c:	cmp	x2, x6
     640:	b.ne	620 <grub_mod_init-0x6f0>  // b.any
     644:	strb	wzr, [x5]
     648:	cbz	x19, 678 <grub_mod_init-0x698>
     64c:	ldrb	w1, [x19]
     650:	mov	x8, x19
     654:	add	x4, sp, #0xe0
     658:	cbnz	w1, 7f4 <grub_mod_init-0x51c>
     65c:	ldrb	w2, [x4]
     660:	sub	w5, w2, #0x41
     664:	cmp	w5, #0x1a
     668:	add	w1, w2, #0x20
     66c:	csel	w2, w1, w2, cc  // cc = lo, ul, last
     670:	cmp	w0, w2
     674:	b.ne	81c <grub_mod_init-0x4f4>  // b.any
     678:	add	x1, sp, #0x118
     67c:	mov	x2, #0x20                  	// #32
     680:	add	x0, sp, #0x68
     684:	bl	0 <grub_memmove>
     688:	add	x1, sp, #0x138
     68c:	mov	x2, #0x20                  	// #32
     690:	add	x0, sp, #0x90
     694:	strb	wzr, [sp, #136]
     698:	bl	0 <grub_memmove>
     69c:	strb	wzr, [sp, #176]
     6a0:	add	x1, sp, #0x158
     6a4:	mov	x2, #0x20                  	// #32
     6a8:	add	x0, sp, #0xb8
     6ac:	bl	0 <grub_memmove>
     6b0:	add	x0, sp, #0x68
     6b4:	strb	wzr, [sp, #216]
     6b8:	bl	0 <grub_crypto_lookup_cipher_by_name>
     6bc:	mov	x19, x0
     6c0:	cbz	x0, 948 <grub_mod_init-0x3c8>
     6c4:	stp	x23, x24, [sp, #48]
     6c8:	bl	0 <grub_crypto_cipher_open>
     6cc:	mov	x23, x0
     6d0:	cbz	x0, 964 <grub_mod_init-0x3ac>
     6d4:	ldr	w2, [sp, #380]
     6d8:	rev	w2, w2
     6dc:	cmp	w2, #0x400
     6e0:	b.hi	8a8 <grub_mod_init-0x468>  // b.pmore
     6e4:	adrp	x1, 0 <grub_mod_init-0xd10>
     6e8:	add	x0, sp, #0x90
     6ec:	stp	x25, x26, [sp, #64]
     6f0:	ldr	x1, [x1]
     6f4:	stp	x27, x28, [sp, #80]
     6f8:	bl	0 <grub_strcmp>
     6fc:	mov	w22, w0
     700:	cbnz	w0, 874 <grub_mod_init-0x49c>
     704:	mov	w27, #0x0                   	// #0
     708:	mov	x25, #0x0                   	// #0
     70c:	mov	w20, #0x1                   	// #1
     710:	mov	x26, #0x0                   	// #0
     714:	mov	x28, #0x0                   	// #0
     718:	add	x0, sp, #0xb8
     71c:	bl	0 <grub_crypto_lookup_md_by_name>
     720:	mov	x24, x0
     724:	cbz	x0, 970 <grub_mod_init-0x3a0>
     728:	mov	x0, #0x238                 	// #568
     72c:	bl	0 <grub_zalloc>
     730:	mov	x19, x0
     734:	cbz	x0, 9b4 <grub_mod_init-0x35c>
     738:	ldr	w1, [sp, #376]
     73c:	mov	w2, #0x9                   	// #9
     740:	str	xzr, [x19, #40]
     744:	mov	x0, x21
     748:	rev	w1, w1
     74c:	str	x1, [x19, #24]
     750:	stp	x23, x25, [x19, #56]
     754:	stp	x28, x26, [x19, #72]
     758:	str	x24, [x19, #88]
     75c:	stp	w27, w20, [x19, #104]
     760:	str	w22, [x19, #112]
     764:	str	w2, [x19, #456]
     768:	bl	0 <grub_disk_get_size>
     76c:	mov	x3, x0
     770:	ldr	x4, [x19, #24]
     774:	add	x1, sp, #0xe0
     778:	add	x0, x19, #0x8c
     77c:	mov	x2, #0x48                  	// #72
     780:	sub	x3, x3, x4
     784:	str	x3, [x19, #32]
     788:	bl	0 <grub_memmove>
     78c:	adrp	x0, 0 <grub_mod_init-0xd10>
     790:	ldp	x21, x22, [sp, #32]
     794:	ldr	x0, [x0]
     798:	ldp	x23, x24, [sp, #48]
     79c:	ldp	x25, x26, [sp, #64]
     7a0:	ldp	x27, x28, [sp, #80]
     7a4:	str	x0, [x19, #448]
     7a8:	mov	x0, x19
     7ac:	ldp	x29, x30, [sp]
     7b0:	ldp	x19, x20, [sp, #16]
     7b4:	add	sp, sp, #0x360
     7b8:	ret
     7bc:	cmp	w0, #0xb
     7c0:	b.eq	850 <grub_mod_init-0x4c0>  // b.none
     7c4:	ldp	x21, x22, [sp, #32]
     7c8:	mov	x19, #0x0                   	// #0
     7cc:	mov	x0, x19
     7d0:	ldp	x29, x30, [sp]
     7d4:	ldp	x19, x20, [sp, #16]
     7d8:	add	sp, sp, #0x360
     7dc:	ret
     7e0:	csel	w3, w3, w2, cc  // cc = lo, ul, last
     7e4:	cmp	w3, w9
     7e8:	b.ne	868 <grub_mod_init-0x4a8>  // b.any
     7ec:	ldrb	w1, [x8, #1]!
     7f0:	cbz	w1, 65c <grub_mod_init-0x6b4>
     7f4:	ldrb	w2, [x4]
     7f8:	sub	w7, w1, #0x41
     7fc:	cmp	w7, #0x1a
     800:	add	w6, w1, #0x20
     804:	sub	w5, w2, #0x41
     808:	csel	w9, w6, w1, cc  // cc = lo, ul, last
     80c:	add	x4, x4, #0x1
     810:	add	w3, w2, #0x20
     814:	cmp	w5, #0x1a
     818:	cbnz	w2, 7e0 <grub_mod_init-0x530>
     81c:	adrp	x2, 0 <grub_mod_init-0xd10>
     820:	adrp	x1, 0 <grub_mod_init-0xd10>
     824:	adrp	x0, 0 <grub_mod_init-0xd10>
     828:	mov	x5, x19
     82c:	ldr	x3, [x2]
     830:	add	x4, sp, #0xe0
     834:	ldr	x2, [x1]
     838:	mov	x19, #0x0                   	// #0
     83c:	ldr	x0, [x0]
     840:	mov	w1, #0x75                  	// #117
     844:	bl	0 <grub_real_dprintf>
     848:	ldp	x21, x22, [sp, #32]
     84c:	b	7cc <grub_mod_init-0x544>
     850:	adrp	x0, 0 <grub_mod_init-0xd10>
     854:	mov	x19, #0x0                   	// #0
     858:	ldp	x21, x22, [sp, #32]
     85c:	ldr	x0, [x0]
     860:	str	wzr, [x0]
     864:	b	7cc <grub_mod_init-0x544>
     868:	cmp	w7, #0x1a
     86c:	csel	w0, w6, w1, cc  // cc = lo, ul, last
     870:	b	664 <grub_mod_init-0x6ac>
     874:	adrp	x1, 0 <grub_mod_init-0xd10>
     878:	add	x0, sp, #0x90
     87c:	ldr	x26, [x1]
     880:	mov	x1, x26
     884:	bl	0 <grub_strcmp>
     888:	mov	w22, w0
     88c:	cbnz	w0, 8d0 <grub_mod_init-0x440>
     890:	mov	w27, #0x1                   	// #1
     894:	mov	x25, #0x0                   	// #0
     898:	mov	w20, w27
     89c:	mov	x26, #0x0                   	// #0
     8a0:	mov	x28, #0x0                   	// #0
     8a4:	b	718 <grub_mod_init-0x5f8>
     8a8:	adrp	x1, 0 <grub_mod_init-0xd10>
     8ac:	mov	w0, #0x12                  	// #18
     8b0:	mov	x19, #0x0                   	// #0
     8b4:	ldr	x1, [x1]
     8b8:	bl	0 <grub_error>
     8bc:	mov	x0, x23
     8c0:	bl	0 <grub_free>
     8c4:	ldp	x21, x22, [sp, #32]
     8c8:	ldp	x23, x24, [sp, #48]
     8cc:	b	7cc <grub_mod_init-0x544>
     8d0:	adrp	x1, 0 <grub_mod_init-0xd10>
     8d4:	add	x0, sp, #0x90
     8d8:	mov	x2, #0x4                   	// #4
     8dc:	ldr	x1, [x1]
     8e0:	bl	0 <grub_memcmp>
     8e4:	cbnz	w0, a54 <grub_mod_init-0x2bc>
     8e8:	add	x24, sp, #0x94
     8ec:	mov	w27, #0x1                   	// #1
     8f0:	mov	x25, #0x0                   	// #0
     8f4:	mov	x1, x26
     8f8:	mov	x0, x24
     8fc:	mov	x2, #0x5                   	// #5
     900:	bl	0 <grub_memcmp>
     904:	mov	w22, w0
     908:	cbnz	w0, 91c <grub_mod_init-0x3f4>
     90c:	mov	w20, #0x1                   	// #1
     910:	mov	x26, #0x0                   	// #0
     914:	mov	x28, #0x0                   	// #0
     918:	b	718 <grub_mod_init-0x5f8>
     91c:	adrp	x1, 0 <grub_mod_init-0xd10>
     920:	mov	x0, x24
     924:	mov	x2, #0x7                   	// #7
     928:	ldr	x1, [x1]
     92c:	bl	0 <grub_memcmp>
     930:	mov	w22, w0
     934:	cbnz	w0, 9e0 <grub_mod_init-0x330>
     938:	mov	w20, #0x2                   	// #2
     93c:	mov	x26, #0x0                   	// #0
     940:	mov	x28, #0x0                   	// #0
     944:	b	718 <grub_mod_init-0x5f8>
     948:	adrp	x1, 0 <grub_mod_init-0xd10>
     94c:	add	x2, sp, #0x68
     950:	mov	w0, #0x5                   	// #5
     954:	ldr	x1, [x1]
     958:	bl	0 <grub_error>
     95c:	ldp	x21, x22, [sp, #32]
     960:	b	7cc <grub_mod_init-0x544>
     964:	ldp	x21, x22, [sp, #32]
     968:	ldp	x23, x24, [sp, #48]
     96c:	b	7c8 <grub_mod_init-0x548>
     970:	mov	x0, x23
     974:	bl	0 <grub_free>
     978:	mov	x0, x28
     97c:	bl	0 <grub_free>
     980:	mov	x0, x25
     984:	bl	0 <grub_free>
     988:	add	x2, sp, #0xb8
     98c:	adrp	x1, 0 <grub_mod_init-0xd10>
     990:	ldr	x1, [x1]
     994:	mov	w0, #0x5                   	// #5
     998:	mov	x19, #0x0                   	// #0
     99c:	bl	0 <grub_error>
     9a0:	ldp	x21, x22, [sp, #32]
     9a4:	ldp	x23, x24, [sp, #48]
     9a8:	ldp	x25, x26, [sp, #64]
     9ac:	ldp	x27, x28, [sp, #80]
     9b0:	b	7cc <grub_mod_init-0x544>
     9b4:	mov	x0, x23
     9b8:	bl	0 <grub_free>
     9bc:	mov	x0, x28
     9c0:	bl	0 <grub_free>
     9c4:	mov	x0, x25
     9c8:	bl	0 <grub_free>
     9cc:	ldp	x21, x22, [sp, #32]
     9d0:	ldp	x23, x24, [sp, #48]
     9d4:	ldp	x25, x26, [sp, #64]
     9d8:	ldp	x27, x28, [sp, #80]
     9dc:	b	7cc <grub_mod_init-0x544>
     9e0:	adrp	x1, 0 <grub_mod_init-0xd10>
     9e4:	mov	x0, x24
     9e8:	mov	x2, #0x5                   	// #5
     9ec:	ldr	x1, [x1]
     9f0:	bl	0 <grub_memcmp>
     9f4:	mov	w22, w0
     9f8:	cbnz	w0, a7c <grub_mod_init-0x294>
     9fc:	ldr	x0, [x23]
     a00:	ldr	x2, [x0, #24]
     a04:	sub	x0, x2, #0x1
     a08:	tst	x0, x2
     a0c:	ccmp	x2, #0x0, #0x4, eq  // eq = none
     a10:	b.ne	a2c <grub_mod_init-0x2e4>  // b.any
     a14:	adrp	x1, 0 <grub_mod_init-0xd10>
     a18:	mov	w0, #0x12                  	// #18
     a1c:	ldr	x1, [x1]
     a20:	bl	0 <grub_error>
     a24:	ldr	x0, [x23]
     a28:	ldr	x2, [x0, #24]
     a2c:	cmp	x2, #0x1ff
     a30:	b.hi	a44 <grub_mod_init-0x2cc>  // b.pmore
     a34:	add	w22, w22, #0x1
     a38:	lsl	x0, x2, x22
     a3c:	cmp	x0, #0x1ff
     a40:	b.ls	a34 <grub_mod_init-0x2dc>  // b.plast
     a44:	mov	w20, #0x4                   	// #4
     a48:	mov	x26, #0x0                   	// #0
     a4c:	mov	x28, #0x0                   	// #0
     a50:	b	718 <grub_mod_init-0x5f8>
     a54:	adrp	x1, 0 <grub_mod_init-0xd10>
     a58:	add	x0, sp, #0x90
     a5c:	mov	x2, #0x5                   	// #5
     a60:	ldr	x1, [x1]
     a64:	bl	0 <grub_memcmp>
     a68:	cbnz	w0, af4 <grub_mod_init-0x21c>
     a6c:	add	x24, sp, #0x95
     a70:	mov	w27, #0x2                   	// #2
     a74:	mov	x25, #0x0                   	// #0
     a78:	b	8f4 <grub_mod_init-0x41c>
     a7c:	adrp	x1, 0 <grub_mod_init-0xd10>
     a80:	mov	x0, x24
     a84:	mov	x2, #0x4                   	// #4
     a88:	mov	x26, #0x0                   	// #0
     a8c:	ldr	x1, [x1]
     a90:	mov	x28, #0x0                   	// #0
     a94:	bl	0 <grub_memcmp>
     a98:	mov	w22, w0
     a9c:	cbz	w0, 718 <grub_mod_init-0x5f8>
     aa0:	adrp	x1, 0 <grub_mod_init-0xd10>
     aa4:	mov	x0, x24
     aa8:	mov	x2, #0x6                   	// #6
     aac:	ldr	x1, [x1]
     ab0:	bl	0 <grub_memcmp>
     ab4:	mov	w22, w0
     ab8:	cbnz	w0, c00 <grub_mod_init-0x110>
     abc:	add	x24, x24, #0x6
     ac0:	mov	x0, x24
     ac4:	bl	0 <grub_crypto_lookup_md_by_name>
     ac8:	mov	x26, x0
     acc:	cbz	x0, be4 <grub_mod_init-0x12c>
     ad0:	mov	x0, x19
     ad4:	bl	0 <grub_crypto_cipher_open>
     ad8:	mov	w20, #0x3                   	// #3
     adc:	mov	x28, x0
     ae0:	mov	x19, #0x0                   	// #0
     ae4:	mov	x0, x23
     ae8:	cbnz	x28, 718 <grub_mod_init-0x5f8>
     aec:	bl	0 <grub_free>
     af0:	b	9c4 <grub_mod_init-0x34c>
     af4:	adrp	x1, 0 <grub_mod_init-0xd10>
     af8:	add	x0, sp, #0x90
     afc:	mov	x2, #0x4                   	// #4
     b00:	ldr	x1, [x1]
     b04:	bl	0 <grub_memcmp>
     b08:	cbnz	w0, b48 <grub_mod_init-0x1c8>
     b0c:	mov	x0, x19
     b10:	bl	0 <grub_crypto_cipher_open>
     b14:	mov	x25, x0
     b18:	cbz	x0, c48 <grub_mod_init-0xc8>
     b1c:	ldr	x0, [x23]
     b20:	ldr	x2, [x0, #24]
     b24:	cmp	x2, #0x10
     b28:	b.ne	c28 <grub_mod_init-0xe8>  // b.any
     b2c:	ldr	x0, [x25]
     b30:	ldr	x0, [x0, #24]
     b34:	cmp	x0, #0x10
     b38:	b.ne	b80 <grub_mod_init-0x190>  // b.any
     b3c:	add	x24, sp, #0x94
     b40:	mov	w27, #0x3                   	// #3
     b44:	b	8f4 <grub_mod_init-0x41c>
     b48:	adrp	x1, 0 <grub_mod_init-0xd10>
     b4c:	add	x0, sp, #0x90
     b50:	mov	x2, #0x4                   	// #4
     b54:	ldr	x1, [x1]
     b58:	bl	0 <grub_memcmp>
     b5c:	cbnz	w0, bc4 <grub_mod_init-0x14c>
     b60:	ldr	x0, [x23]
     b64:	ldr	x2, [x0, #24]
     b68:	cmp	x2, #0x10
     b6c:	b.ne	ba8 <grub_mod_init-0x168>  // b.any
     b70:	add	x24, sp, #0x94
     b74:	mov	w27, #0x4                   	// #4
     b78:	mov	x25, #0x0                   	// #0
     b7c:	b	8f4 <grub_mod_init-0x41c>
     b80:	mov	x0, x23
     b84:	bl	0 <grub_free>
     b88:	ldr	x2, [x25]
     b8c:	adrp	x1, 0 <grub_mod_init-0xd10>
     b90:	mov	x19, #0x0                   	// #0
     b94:	mov	w0, #0x12                  	// #18
     b98:	ldr	x1, [x1]
     b9c:	ldr	x2, [x2, #24]
     ba0:	bl	0 <grub_error>
     ba4:	b	9c4 <grub_mod_init-0x34c>
     ba8:	adrp	x1, 0 <grub_mod_init-0xd10>
     bac:	mov	w0, #0x12                  	// #18
     bb0:	mov	x19, #0x0                   	// #0
     bb4:	ldr	x1, [x1]
     bb8:	bl	0 <grub_error>
     bbc:	mov	x0, x23
     bc0:	b	9c8 <grub_mod_init-0x348>
     bc4:	mov	x0, x23
     bc8:	bl	0 <grub_free>
     bcc:	adrp	x1, 0 <grub_mod_init-0xd10>
     bd0:	add	x2, sp, #0x90
     bd4:	mov	w0, #0x12                  	// #18
     bd8:	mov	x19, #0x0                   	// #0
     bdc:	ldr	x1, [x1]
     be0:	b	99c <grub_mod_init-0x374>
     be4:	mov	x0, x23
     be8:	bl	0 <grub_free>
     bec:	mov	x0, x25
     bf0:	bl	0 <grub_free>
     bf4:	mov	x2, x24
     bf8:	adrp	x1, 0 <grub_mod_init-0xd10>
     bfc:	b	990 <grub_mod_init-0x380>
     c00:	mov	x0, x23
     c04:	bl	0 <grub_free>
     c08:	mov	x0, x25
     c0c:	bl	0 <grub_free>
     c10:	adrp	x1, 0 <grub_mod_init-0xd10>
     c14:	mov	x2, x24
     c18:	mov	w0, #0x12                  	// #18
     c1c:	mov	x19, #0x0                   	// #0
     c20:	ldr	x1, [x1]
     c24:	b	99c <grub_mod_init-0x374>
     c28:	adrp	x1, 0 <grub_mod_init-0xd10>
     c2c:	mov	w0, #0x12                  	// #18
     c30:	mov	x19, #0x0                   	// #0
     c34:	ldr	x1, [x1]
     c38:	bl	0 <grub_error>
     c3c:	mov	x0, x23
     c40:	bl	0 <grub_free>
     c44:	b	9c4 <grub_mod_init-0x34c>
     c48:	mov	x0, x23
     c4c:	mov	x19, #0x0                   	// #0
     c50:	b	9c8 <grub_mod_init-0x348>
     c54:	nop
	...

0000000000000d10 <grub_mod_init>:
     d10:	adrp	x1, 0 <grub_mod_init-0xd10>
     d14:	adrp	x0, 0 <grub_mod_init-0xd10>
     d18:	ldr	x1, [x1]
     d1c:	ldr	x0, [x0]
     d20:	b	0 <grub_list_push>
     d24:	nop
	...

0000000000000d38 <grub_mod_fini>:
     d38:	adrp	x0, 0 <grub_mod_init-0xd10>
     d3c:	ldr	x0, [x0]
     d40:	b	0 <grub_list_remove>
     d44:	nop
	...

0000000000000d50 <AF_merge>:
     d50:	stp	x29, x30, [sp, #-272]!
     d54:	mov	x29, sp
     d58:	stp	x25, x26, [sp, #64]
     d5c:	mov	x25, x0
     d60:	ldr	x0, [x0, #32]
     d64:	sub	x0, x0, #0x1
     d68:	cmp	x0, #0x3f
     d6c:	b.hi	1148 <AF_merge+0x3f8>  // b.pmore
     d70:	mov	x0, x3
     d74:	stp	x19, x20, [sp, #16]
     d78:	mov	x19, x3
     d7c:	stp	x21, x22, [sp, #32]
     d80:	mov	x22, x2
     d84:	mov	x21, x4
     d88:	stp	x27, x28, [sp, #80]
     d8c:	mov	x27, x1
     d90:	bl	0 <grub_zalloc>
     d94:	mov	x20, x0
     d98:	cbz	x0, 1158 <AF_merge+0x408>
     d9c:	mov	x2, x19
     da0:	mov	w1, #0x0                   	// #0
     da4:	bl	0 <grub_memset>
     da8:	subs	x0, x21, #0x1
     dac:	str	x0, [sp, #120]
     db0:	b.eq	f88 <AF_merge+0x238>  // b.none
     db4:	stp	x23, x24, [sp, #48]
     db8:	mov	x23, x27
     dbc:	add	x0, sp, #0xcc
     dc0:	mov	x21, #0x0                   	// #0
     dc4:	str	x0, [sp, #112]
     dc8:	mov	x3, x23
     dcc:	cbz	x19, f68 <AF_merge+0x218>
     dd0:	orr	x0, x20, x23
     dd4:	mov	x5, x19
     dd8:	mov	x4, x20
     ddc:	b	dfc <AF_merge+0xac>
     de0:	ldrb	w0, [x3], #1
     de4:	subs	x5, x5, #0x1
     de8:	ldrb	w1, [x4]
     dec:	eor	w0, w0, w1
     df0:	strb	w0, [x4], #1
     df4:	orr	x0, x3, x4
     df8:	b.eq	ee8 <AF_merge+0x198>  // b.none
     dfc:	tst	x0, #0x7
     e00:	b.ne	de0 <AF_merge+0x90>  // b.any
     e04:	cmp	x5, #0x7
     e08:	b.ls	e48 <AF_merge+0xf8>  // b.plast
     e0c:	sub	x7, x5, #0x8
     e10:	mov	x6, #0x0                   	// #0
     e14:	and	x7, x7, #0xfffffffffffffff8
     e18:	add	x7, x7, #0x8
     e1c:	ldr	x0, [x4, x6]
     e20:	ldr	x1, [x3, x6]
     e24:	eor	x0, x0, x1
     e28:	str	x0, [x4, x6]
     e2c:	add	x6, x6, #0x8
     e30:	cmp	x6, x7
     e34:	b.ne	e1c <AF_merge+0xcc>  // b.any
     e38:	add	x3, x3, x6
     e3c:	add	x4, x4, x6
     e40:	ands	x5, x5, #0x7
     e44:	b.eq	ee8 <AF_merge+0x198>  // b.none
     e48:	ldrb	w0, [x3]
     e4c:	cmp	x5, #0x1
     e50:	ldrb	w1, [x4]
     e54:	eor	w0, w0, w1
     e58:	strb	w0, [x4]
     e5c:	b.eq	ee8 <AF_merge+0x198>  // b.none
     e60:	ldrb	w0, [x3, #1]
     e64:	cmp	x5, #0x2
     e68:	ldrb	w1, [x4, #1]
     e6c:	eor	w0, w0, w1
     e70:	strb	w0, [x4, #1]
     e74:	b.eq	ee8 <AF_merge+0x198>  // b.none
     e78:	ldrb	w0, [x3, #2]
     e7c:	cmp	x5, #0x3
     e80:	ldrb	w1, [x4, #2]
     e84:	eor	w0, w0, w1
     e88:	strb	w0, [x4, #2]
     e8c:	b.eq	ee8 <AF_merge+0x198>  // b.none
     e90:	ldrb	w0, [x3, #3]
     e94:	cmp	x5, #0x4
     e98:	ldrb	w1, [x4, #3]
     e9c:	eor	w0, w0, w1
     ea0:	strb	w0, [x4, #3]
     ea4:	b.eq	ee8 <AF_merge+0x198>  // b.none
     ea8:	ldrb	w0, [x3, #4]
     eac:	subs	x5, x5, #0x5
     eb0:	ldrb	w1, [x4, #4]
     eb4:	eor	w0, w0, w1
     eb8:	strb	w0, [x4, #4]
     ebc:	b.eq	ee8 <AF_merge+0x198>  // b.none
     ec0:	ldrb	w0, [x3, #5]
     ec4:	cmp	x5, #0x1
     ec8:	ldrb	w1, [x4, #5]
     ecc:	eor	w0, w0, w1
     ed0:	strb	w0, [x4, #5]
     ed4:	b.eq	ee8 <AF_merge+0x198>  // b.none
     ed8:	ldrb	w0, [x3, #6]
     edc:	ldrb	w1, [x4, #6]
     ee0:	eor	w0, w0, w1
     ee4:	strb	w0, [x4, #6]
     ee8:	ldr	x4, [x25, #32]
     eec:	mov	w3, #0x0                   	// #0
     ef0:	mov	x24, #0x0                   	// #0
     ef4:	cmp	x19, x4
     ef8:	udiv	x26, x19, x4
     efc:	msub	x28, x26, x4, x19
     f00:	b.cc	1140 <AF_merge+0x3f0>  // b.lo, b.ul, b.last
     f04:	nop
     f08:	add	x1, sp, #0x84
     f0c:	mov	x2, #0x4                   	// #4
     f10:	add	x0, sp, #0xc8
     f14:	str	x4, [sp, #104]
     f18:	str	w3, [sp, #132]
     f1c:	bl	0 <grub_memmove>
     f20:	ldr	x2, [x25, #32]
     f24:	ldr	x0, [sp, #112]
     f28:	madd	x1, x2, x24, x20
     f2c:	bl	0 <grub_memmove>
     f30:	ldr	x1, [x25, #32]
     f34:	add	x2, sp, #0xc8
     f38:	mov	x0, x25
     f3c:	add	x3, x1, #0x4
     f40:	madd	x1, x1, x24, x20
     f44:	add	x24, x24, #0x1
     f48:	bl	0 <grub_crypto_hash>
     f4c:	rev	w3, w24
     f50:	cmp	x26, x24
     f54:	ldr	x4, [sp, #104]
     f58:	b.hi	f08 <AF_merge+0x1b8>  // b.pmore
     f5c:	cmp	x19, x4
     f60:	csinc	x26, x26, xzr, cs  // cs = hs, nlast
     f64:	cbnz	w28, 10c4 <AF_merge+0x374>
     f68:	ldr	x0, [sp, #120]
     f6c:	add	x21, x21, #0x1
     f70:	add	x23, x23, x19
     f74:	cmp	x21, x0
     f78:	b.ne	dc8 <AF_merge+0x78>  // b.any
     f7c:	ldr	x0, [sp, #120]
     f80:	ldp	x23, x24, [sp, #48]
     f84:	madd	x27, x19, x0, x27
     f88:	mov	x0, x20
     f8c:	cbnz	x19, fcc <AF_merge+0x27c>
     f90:	mov	x0, x20
     f94:	bl	0 <grub_free>
     f98:	mov	w0, #0x0                   	// #0
     f9c:	ldp	x19, x20, [sp, #16]
     fa0:	ldp	x21, x22, [sp, #32]
     fa4:	ldp	x25, x26, [sp, #64]
     fa8:	ldp	x27, x28, [sp, #80]
     fac:	ldp	x29, x30, [sp], #272
     fb0:	ret
     fb4:	ldrb	w1, [x27], #1
     fb8:	subs	x19, x19, #0x1
     fbc:	ldrb	w2, [x0], #1
     fc0:	eor	w1, w1, w2
     fc4:	strb	w1, [x22], #1
     fc8:	b.eq	f90 <AF_merge+0x240>  // b.none
     fcc:	orr	x4, x27, x0
     fd0:	orr	x4, x22, x4
     fd4:	ands	x4, x4, #0x7
     fd8:	b.ne	fb4 <AF_merge+0x264>  // b.any
     fdc:	cmp	x19, #0x7
     fe0:	b.ls	1020 <AF_merge+0x2d0>  // b.plast
     fe4:	sub	x3, x19, #0x8
     fe8:	and	x3, x3, #0xfffffffffffffff8
     fec:	add	x3, x3, #0x8
     ff0:	ldr	x1, [x27, x4]
     ff4:	ldr	x2, [x0, x4]
     ff8:	eor	x1, x1, x2
     ffc:	str	x1, [x22, x4]
    1000:	add	x4, x4, #0x8
    1004:	cmp	x4, x3
    1008:	b.ne	ff0 <AF_merge+0x2a0>  // b.any
    100c:	add	x27, x27, x4
    1010:	add	x0, x0, x4
    1014:	add	x22, x22, x4
    1018:	ands	x19, x19, #0x7
    101c:	b.eq	f90 <AF_merge+0x240>  // b.none
    1020:	ldrb	w1, [x0]
    1024:	cmp	x19, #0x1
    1028:	ldrb	w2, [x27]
    102c:	eor	w1, w1, w2
    1030:	strb	w1, [x22]
    1034:	b.eq	f90 <AF_merge+0x240>  // b.none
    1038:	ldrb	w1, [x0, #1]
    103c:	cmp	x19, #0x2
    1040:	ldrb	w2, [x27, #1]
    1044:	eor	w1, w1, w2
    1048:	strb	w1, [x22, #1]
    104c:	b.eq	f90 <AF_merge+0x240>  // b.none
    1050:	ldrb	w1, [x0, #2]
    1054:	cmp	x19, #0x3
    1058:	ldrb	w2, [x27, #2]
    105c:	eor	w1, w1, w2
    1060:	strb	w1, [x22, #2]
    1064:	b.eq	f90 <AF_merge+0x240>  // b.none
    1068:	ldrb	w1, [x0, #3]
    106c:	cmp	x19, #0x4
    1070:	ldrb	w2, [x27, #3]
    1074:	eor	w1, w1, w2
    1078:	strb	w1, [x22, #3]
    107c:	b.eq	f90 <AF_merge+0x240>  // b.none
    1080:	ldrb	w1, [x0, #4]
    1084:	subs	x19, x19, #0x5
    1088:	ldrb	w2, [x27, #4]
    108c:	eor	w1, w1, w2
    1090:	strb	w1, [x22, #4]
    1094:	b.eq	f90 <AF_merge+0x240>  // b.none
    1098:	ldrb	w1, [x27, #5]
    109c:	cmp	x19, #0x1
    10a0:	ldrb	w2, [x0, #5]
    10a4:	eor	w1, w1, w2
    10a8:	strb	w1, [x22, #5]
    10ac:	b.eq	f90 <AF_merge+0x240>  // b.none
    10b0:	ldrb	w1, [x27, #6]
    10b4:	ldrb	w0, [x0, #6]
    10b8:	eor	w0, w1, w0
    10bc:	strb	w0, [x22, #6]
    10c0:	b	f90 <AF_merge+0x240>
    10c4:	rev	w3, w26
    10c8:	add	x1, sp, #0x84
    10cc:	mov	x2, #0x4                   	// #4
    10d0:	add	x0, sp, #0xc8
    10d4:	str	w3, [sp, #132]
    10d8:	sxtw	x28, w28
    10dc:	bl	0 <grub_memmove>
    10e0:	add	x21, x21, #0x1
    10e4:	ldr	x1, [x25, #32]
    10e8:	mov	x2, x28
    10ec:	ldr	x0, [sp, #112]
    10f0:	add	x23, x23, x19
    10f4:	madd	x1, x26, x1, x20
    10f8:	bl	0 <grub_memmove>
    10fc:	add	x3, x28, #0x4
    1100:	add	x2, sp, #0xc8
    1104:	add	x1, sp, #0x88
    1108:	mov	x0, x25
    110c:	bl	0 <grub_crypto_hash>
    1110:	ldr	x0, [x25, #32]
    1114:	mov	x2, x28
    1118:	add	x1, sp, #0x88
    111c:	madd	x0, x26, x0, x20
    1120:	bl	0 <grub_memmove>
    1124:	ldr	x0, [sp, #120]
    1128:	cmp	x21, x0
    112c:	b.ne	dc8 <AF_merge+0x78>  // b.any
    1130:	ldr	x0, [sp, #120]
    1134:	ldp	x23, x24, [sp, #48]
    1138:	madd	x27, x19, x0, x27
    113c:	b	f88 <AF_merge+0x238>
    1140:	mov	x26, #0x0                   	// #0
    1144:	b	f64 <AF_merge+0x214>
    1148:	mov	w0, #0xa                   	// #10
    114c:	ldp	x25, x26, [sp, #64]
    1150:	ldp	x29, x30, [sp], #272
    1154:	ret
    1158:	mov	w0, #0x22                  	// #34
    115c:	ldp	x19, x20, [sp, #16]
    1160:	ldp	x21, x22, [sp, #32]
    1164:	ldp	x25, x26, [sp, #64]
    1168:	ldp	x27, x28, [sp, #80]
    116c:	ldp	x29, x30, [sp], #272
    1170:	ret
