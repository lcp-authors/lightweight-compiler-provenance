
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//archelp.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_archelp_dir-0x2e0>:
   0:	mov	x1, x0
   4:	mov	x2, x0
   8:	ldrb	w3, [x2]
   c:	cbnz	w3, 1c <grub_archelp_dir-0x2c4>
  10:	strb	wzr, [x1]
  14:	ret
  18:	add	x2, x2, #0x1
  1c:	ldrb	w3, [x2]
  20:	cmp	w3, #0x2f
  24:	b.eq	18 <grub_archelp_dir-0x2c8>  // b.none
  28:	cmp	w3, #0x2e
  2c:	b.ne	9c <grub_archelp_dir-0x244>  // b.any
  30:	ldrb	w3, [x2, #1]
  34:	cmp	w3, #0x2f
  38:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  3c:	b.ne	48 <grub_archelp_dir-0x298>  // b.any
  40:	add	x2, x2, #0x1
  44:	b	8 <grub_archelp_dir-0x2d8>
  48:	cmp	w3, #0x2e
  4c:	b.ne	9c <grub_archelp_dir-0x244>  // b.any
  50:	ldrb	w3, [x2, #2]
  54:	cmp	w3, #0x2f
  58:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  5c:	b.ne	9c <grub_archelp_dir-0x244>  // b.any
  60:	add	x2, x2, #0x2
  64:	cmp	x1, x0
  68:	b.eq	8 <grub_archelp_dir-0x2d8>  // b.none
  6c:	sub	x1, x1, #0x2
  70:	cmp	x1, x0
  74:	b.cs	80 <grub_archelp_dir-0x260>  // b.hs, b.nlast
  78:	add	x1, x1, #0x1
  7c:	b	8 <grub_archelp_dir-0x2d8>
  80:	ldrb	w3, [x1]
  84:	cmp	w3, #0x2f
  88:	b.eq	78 <grub_archelp_dir-0x268>  // b.none
  8c:	sub	x1, x1, #0x1
  90:	b	70 <grub_archelp_dir-0x270>
  94:	add	x2, x2, #0x1
  98:	strb	w3, [x1], #1
  9c:	ldrb	w3, [x2]
  a0:	cmp	w3, #0x2f
  a4:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  a8:	b.ne	94 <grub_archelp_dir-0x24c>  // b.any
  ac:	cbz	w3, 8 <grub_archelp_dir-0x2d8>
  b0:	add	x2, x2, #0x1
  b4:	strb	w3, [x1], #1
  b8:	b	8 <grub_archelp_dir-0x2d8>
  bc:	stp	x29, x30, [sp, #-80]!
  c0:	mov	x29, sp
  c4:	stp	x21, x22, [sp, #32]
  c8:	mov	x21, x3
  cc:	mov	x22, x0
  d0:	mov	x0, x2
  d4:	stp	x19, x20, [sp, #16]
  d8:	mov	x19, x2
  dc:	stp	x23, x24, [sp, #48]
  e0:	mov	x23, x1
  e4:	mov	x24, x4
  e8:	stp	x25, x26, [sp, #64]
  ec:	bl	0 <grub_strlen>
  f0:	mov	x20, x0
  f4:	mov	x2, x0
  f8:	mov	x1, x19
  fc:	ldr	x0, [x21]
 100:	bl	0 <grub_memcmp>
 104:	cbz	w0, 110 <grub_archelp_dir-0x1d0>
 108:	mov	w0, #0x0                   	// #0
 10c:	b	170 <grub_archelp_dir-0x170>
 110:	ldr	x3, [x21]
 114:	add	x19, x3, x20
 118:	ldrb	w0, [x3, x20]
 11c:	cmp	w0, #0x2f
 120:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 124:	b.ne	108 <grub_archelp_dir-0x1d8>  // b.any
 128:	cmp	w0, #0x0
 12c:	cinc	x25, x19, ne  // ne = any
 130:	cmp	x3, x19
 134:	b.hi	190 <grub_archelp_dir-0x150>  // b.pmore
 138:	ldrb	w0, [x19]
 13c:	cmp	w0, #0x2f
 140:	b.ne	188 <grub_archelp_dir-0x158>  // b.any
 144:	subs	x19, x19, x3
 148:	cset	x0, ne  // ne = any
 14c:	add	x19, x19, x0
 150:	ldr	x1, [x23]
 154:	mov	x0, x22
 158:	blr	x1
 15c:	mov	x23, x0
 160:	cbnz	x0, 198 <grub_archelp_dir-0x148>
 164:	adrp	x0, 0 <grub_archelp_dir-0x2e0>
 168:	ldr	x0, [x0]
 16c:	ldr	w0, [x0]
 170:	ldp	x19, x20, [sp, #16]
 174:	ldp	x21, x22, [sp, #32]
 178:	ldp	x23, x24, [sp, #48]
 17c:	ldp	x25, x26, [sp, #64]
 180:	ldp	x29, x30, [sp], #80
 184:	ret
 188:	sub	x19, x19, #0x1
 18c:	b	130 <grub_archelp_dir-0x1b0>
 190:	mov	x19, #0x0                   	// #0
 194:	b	150 <grub_archelp_dir-0x190>
 198:	ldrb	w1, [x0]
 19c:	cbz	w1, 108 <grub_archelp_dir-0x1d8>
 1a0:	bl	0 <grub_strlen>
 1a4:	mov	x22, x0
 1a8:	ldr	x0, [x21]
 1ac:	bl	0 <grub_strlen>
 1b0:	add	x0, x22, x0
 1b4:	add	x0, x0, #0x2
 1b8:	bl	0 <grub_malloc>
 1bc:	mov	x20, x0
 1c0:	cbz	x0, 164 <grub_archelp_dir-0x17c>
 1c4:	mov	x1, x23
 1c8:	add	x26, x0, x19
 1cc:	mov	x0, x26
 1d0:	bl	0 <grub_strcpy>
 1d4:	mov	x0, x23
 1d8:	bl	0 <grub_free>
 1dc:	ldrb	w0, [x20, x19]
 1e0:	cmp	w0, #0x2f
 1e4:	b.ne	274 <grub_archelp_dir-0x6c>  // b.any
 1e8:	sub	x3, x26, #0x1
 1ec:	mov	x0, #0x0                   	// #0
 1f0:	ldrb	w2, [x26, x0]
 1f4:	add	x1, x20, x0
 1f8:	strb	w2, [x20, x0]
 1fc:	add	x0, x0, #0x1
 200:	ldrb	w2, [x3, x0]
 204:	cbnz	w2, 1f0 <grub_archelp_dir-0xf0>
 208:	sub	x4, x25, #0x1
 20c:	mov	x0, #0x0                   	// #0
 210:	ldrb	w3, [x25, x0]
 214:	add	x2, x0, x1
 218:	strb	w3, [x1, x0]
 21c:	add	x0, x0, #0x1
 220:	ldrb	w3, [x4, x0]
 224:	cbnz	w3, 210 <grub_archelp_dir-0xd0>
 228:	adrp	x0, 0 <grub_archelp_dir-0x2e0>
 22c:	strb	wzr, [x2]
 230:	mov	x5, x20
 234:	mov	w1, #0x70                  	// #112
 238:	ldr	x3, [x0]
 23c:	adrp	x0, 0 <grub_archelp_dir-0x2e0>
 240:	ldr	x4, [x21]
 244:	ldr	x2, [x0]
 248:	adrp	x0, 0 <grub_archelp_dir-0x2e0>
 24c:	ldr	x0, [x0]
 250:	bl	0 <grub_real_dprintf>
 254:	ldr	x0, [x21]
 258:	bl	0 <grub_free>
 25c:	mov	x0, x20
 260:	bl	0 <grub_archelp_dir-0x2e0>
 264:	str	x20, [x21]
 268:	mov	w0, #0x1                   	// #1
 26c:	str	w0, [x24]
 270:	b	108 <grub_archelp_dir-0x1d8>
 274:	cbz	x19, 290 <grub_archelp_dir-0x50>
 278:	ldr	x1, [x21]
 27c:	mov	x2, x19
 280:	mov	x0, x20
 284:	bl	0 <grub_memmove>
 288:	mov	w0, #0x2f                  	// #47
 28c:	sturb	w0, [x26, #-1]
 290:	add	x0, x22, x19
 294:	mov	x1, x25
 298:	add	x0, x20, x0
 29c:	bl	0 <grub_strcpy>
 2a0:	adrp	x0, 0 <grub_archelp_dir-0x2e0>
 2a4:	mov	x5, x20
 2a8:	mov	w1, #0x7f                  	// #127
 2ac:	ldr	x3, [x0]
 2b0:	adrp	x0, 0 <grub_archelp_dir-0x2e0>
 2b4:	ldr	x4, [x21]
 2b8:	ldr	x2, [x0]
 2bc:	b	248 <grub_archelp_dir-0x98>
	...

00000000000002e0 <grub_archelp_dir>:
 2e0:	stp	x29, x30, [sp, #-144]!
 2e4:	mov	x29, sp
 2e8:	stp	x19, x20, [sp, #16]
 2ec:	stp	x21, x22, [sp, #32]
 2f0:	mov	x21, x1
 2f4:	stp	x23, x24, [sp, #48]
 2f8:	mov	x24, x0
 2fc:	add	x0, x2, #0x1
 300:	stp	x25, x26, [sp, #64]
 304:	mov	x25, x3
 308:	mov	x26, x4
 30c:	stp	x27, x28, [sp, #80]
 310:	bl	0 <grub_strdup>
 314:	str	x0, [sp, #120]
 318:	cbnz	x0, 344 <grub_archelp_dir+0x64>
 31c:	adrp	x0, 0 <grub_archelp_dir-0x2e0>
 320:	ldp	x19, x20, [sp, #16]
 324:	ldr	x0, [x0]
 328:	ldp	x21, x22, [sp, #32]
 32c:	ldr	w0, [x0]
 330:	ldp	x23, x24, [sp, #48]
 334:	ldp	x25, x26, [sp, #64]
 338:	ldp	x27, x28, [sp, #80]
 33c:	ldp	x29, x30, [sp], #144
 340:	ret
 344:	bl	0 <grub_archelp_dir-0x2e0>
 348:	ldr	x19, [sp, #120]
 34c:	mov	x0, x19
 350:	bl	0 <grub_strlen>
 354:	sub	x2, x0, #0x1
 358:	add	x2, x19, x2
 35c:	ldr	x0, [sp, #120]
 360:	cmp	x0, x2
 364:	b.hi	374 <grub_archelp_dir+0x94>  // b.pmore
 368:	ldrb	w1, [x2]
 36c:	cmp	w1, #0x2f
 370:	b.eq	47c <grub_archelp_dir+0x19c>  // b.none
 374:	bl	0 <grub_strlen>
 378:	mov	x19, x0
 37c:	mov	w27, #0x0                   	// #0
 380:	mov	x23, #0x0                   	// #0
 384:	ldr	x4, [x21]
 388:	add	x3, sp, #0x6c
 38c:	add	x2, sp, #0x68
 390:	add	x1, sp, #0x70
 394:	mov	x0, x24
 398:	blr	x4
 39c:	mov	w20, w0
 3a0:	cbnz	w0, 468 <grub_archelp_dir+0x188>
 3a4:	ldr	w0, [sp, #108]
 3a8:	cmn	w0, #0x1
 3ac:	b.eq	468 <grub_archelp_dir+0x188>  // b.none
 3b0:	ldr	x0, [sp, #112]
 3b4:	bl	0 <grub_archelp_dir-0x2e0>
 3b8:	ldp	x1, x0, [sp, #112]
 3bc:	mov	x2, x19
 3c0:	bl	0 <grub_memcmp>
 3c4:	cbnz	w0, 548 <grub_archelp_dir+0x268>
 3c8:	ldr	x0, [sp, #112]
 3cc:	add	x22, x0, x19
 3d0:	ldrb	w0, [x0, x19]
 3d4:	cmp	w0, #0x2f
 3d8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 3dc:	b.eq	488 <grub_archelp_dir+0x1a8>  // b.none
 3e0:	cbnz	x19, 548 <grub_archelp_dir+0x268>
 3e4:	mov	x0, x22
 3e8:	mov	w1, #0x2f                  	// #47
 3ec:	bl	0 <grub_strchr>
 3f0:	mov	x28, x0
 3f4:	cbz	x0, 3fc <grub_archelp_dir+0x11c>
 3f8:	strb	wzr, [x0]
 3fc:	cbnz	x23, 498 <grub_archelp_dir+0x1b8>
 400:	ldrb	w0, [x22]
 404:	cbz	w0, 4a8 <grub_archelp_dir+0x1c8>
 408:	mov	w1, #0x0                   	// #0
 40c:	add	x0, sp, #0x80
 410:	mov	x2, #0x10                  	// #16
 414:	bl	0 <grub_memset>
 418:	ldr	w1, [sp, #108]
 41c:	cbnz	x28, 520 <grub_archelp_dir+0x240>
 420:	and	w0, w1, #0xe000
 424:	cmp	w0, #0x4, lsl #12
 428:	cset	w2, eq  // eq = none
 42c:	ldrb	w0, [sp, #128]
 430:	bfxil	w0, w2, #0, #1
 434:	strb	w0, [sp, #128]
 438:	tbnz	w1, #31, 44c <grub_archelp_dir+0x16c>
 43c:	ldr	w1, [sp, #104]
 440:	orr	w0, w0, #0x2
 444:	strb	w0, [sp, #128]
 448:	str	w1, [sp, #132]
 44c:	mov	x2, x26
 450:	add	x1, sp, #0x80
 454:	mov	x0, x22
 458:	blr	x25
 45c:	cbz	w0, 528 <grub_archelp_dir+0x248>
 460:	ldr	x0, [sp, #112]
 464:	bl	0 <grub_free>
 468:	ldr	x0, [sp, #120]
 46c:	bl	0 <grub_free>
 470:	mov	x0, x23
 474:	bl	0 <grub_free>
 478:	b	31c <grub_archelp_dir+0x3c>
 47c:	strb	wzr, [x2], #-1
 480:	b	35c <grub_archelp_dir+0x7c>
 484:	add	x22, x22, #0x1
 488:	ldrb	w0, [x22]
 48c:	cmp	w0, #0x2f
 490:	b.eq	484 <grub_archelp_dir+0x1a4>  // b.none
 494:	b	3e4 <grub_archelp_dir+0x104>
 498:	ldr	x1, [sp, #112]
 49c:	mov	x0, x23
 4a0:	bl	0 <grub_strcmp>
 4a4:	cbnz	w0, 400 <grub_archelp_dir+0x120>
 4a8:	ldr	w0, [sp, #108]
 4ac:	str	wzr, [sp, #128]
 4b0:	and	w0, w0, #0xe000
 4b4:	cmp	w0, #0xa, lsl #12
 4b8:	b.ne	4e0 <grub_archelp_dir+0x200>  // b.any
 4bc:	ldr	x0, [x21, #8]
 4c0:	cbz	x0, 4e0 <grub_archelp_dir+0x200>
 4c4:	ldr	x2, [sp, #112]
 4c8:	add	x4, sp, #0x80
 4cc:	add	x3, sp, #0x78
 4d0:	add	x1, x21, #0x8
 4d4:	mov	x0, x24
 4d8:	bl	bc <grub_archelp_dir-0x224>
 4dc:	mov	w20, w0
 4e0:	ldr	x0, [sp, #112]
 4e4:	bl	0 <grub_free>
 4e8:	cbnz	w20, 468 <grub_archelp_dir+0x188>
 4ec:	ldr	w0, [sp, #128]
 4f0:	cbz	w0, 384 <grub_archelp_dir+0xa4>
 4f4:	ldr	x0, [sp, #120]
 4f8:	add	w27, w27, #0x1
 4fc:	bl	0 <grub_strlen>
 500:	mov	x19, x0
 504:	cmp	w27, #0x8
 508:	b.ne	538 <grub_archelp_dir+0x258>  // b.any
 50c:	adrp	x0, 0 <grub_archelp_dir-0x2e0>
 510:	ldr	x1, [x0]
 514:	mov	w0, #0x19                  	// #25
 518:	bl	0 <grub_error>
 51c:	b	468 <grub_archelp_dir+0x188>
 520:	mov	w2, #0x1                   	// #1
 524:	b	42c <grub_archelp_dir+0x14c>
 528:	mov	x0, x23
 52c:	bl	0 <grub_free>
 530:	ldr	x23, [sp, #112]
 534:	b	384 <grub_archelp_dir+0xa4>
 538:	ldr	x1, [x21, #16]
 53c:	mov	x0, x24
 540:	blr	x1
 544:	b	384 <grub_archelp_dir+0xa4>
 548:	ldr	x0, [sp, #112]
 54c:	bl	0 <grub_free>
 550:	b	384 <grub_archelp_dir+0xa4>
 554:	nop
	...

0000000000000568 <grub_archelp_open>:
 568:	stp	x29, x30, [sp, #-96]!
 56c:	mov	x29, sp
 570:	stp	x19, x20, [sp, #16]
 574:	mov	x20, x1
 578:	stp	x21, x22, [sp, #32]
 57c:	mov	x21, x0
 580:	mov	x22, x2
 584:	add	x0, x2, #0x1
 588:	str	x23, [sp, #48]
 58c:	bl	0 <grub_strdup>
 590:	str	x0, [sp, #88]
 594:	cbnz	x0, 5a8 <grub_archelp_open+0x40>
 598:	adrp	x0, 0 <grub_archelp_dir-0x2e0>
 59c:	ldr	x0, [x0]
 5a0:	ldr	w19, [x0]
 5a4:	b	698 <grub_archelp_open+0x130>
 5a8:	mov	w23, #0x0                   	// #0
 5ac:	bl	0 <grub_archelp_dir-0x2e0>
 5b0:	ldr	x4, [x20]
 5b4:	add	x3, sp, #0x44
 5b8:	add	x2, sp, #0x48
 5bc:	add	x1, sp, #0x50
 5c0:	mov	x0, x21
 5c4:	blr	x4
 5c8:	mov	w19, w0
 5cc:	cbnz	w0, 5f0 <grub_archelp_open+0x88>
 5d0:	ldr	w0, [sp, #68]
 5d4:	cmn	w0, #0x1
 5d8:	b.ne	5fc <grub_archelp_open+0x94>  // b.any
 5dc:	adrp	x0, 0 <grub_archelp_dir-0x2e0>
 5e0:	mov	x2, x22
 5e4:	ldr	x1, [x0]
 5e8:	mov	w0, #0x5                   	// #5
 5ec:	bl	0 <grub_error>
 5f0:	ldr	x0, [sp, #88]
 5f4:	bl	0 <grub_free>
 5f8:	b	598 <grub_archelp_open+0x30>
 5fc:	ldr	x0, [sp, #80]
 600:	bl	0 <grub_archelp_dir-0x2e0>
 604:	str	wzr, [sp, #76]
 608:	ldr	w0, [sp, #68]
 60c:	ldr	x2, [sp, #80]
 610:	and	w0, w0, #0xe000
 614:	cmp	w0, #0xa, lsl #12
 618:	b.ne	67c <grub_archelp_open+0x114>  // b.any
 61c:	ldr	x0, [x20, #8]
 620:	cbz	x0, 67c <grub_archelp_open+0x114>
 624:	add	x4, sp, #0x4c
 628:	add	x3, sp, #0x58
 62c:	add	x1, x20, #0x8
 630:	mov	x0, x21
 634:	bl	bc <grub_archelp_dir-0x224>
 638:	cbz	w0, 648 <grub_archelp_open+0xe0>
 63c:	ldr	x0, [sp, #80]
 640:	bl	0 <grub_free>
 644:	b	5f0 <grub_archelp_open+0x88>
 648:	ldr	w0, [sp, #76]
 64c:	cbz	w0, 67c <grub_archelp_open+0x114>
 650:	ldr	x1, [x20, #16]
 654:	mov	x0, x21
 658:	add	w23, w23, #0x1
 65c:	blr	x1
 660:	cmp	w23, #0x8
 664:	b.ne	6b0 <grub_archelp_open+0x148>  // b.any
 668:	adrp	x0, 0 <grub_archelp_dir-0x2e0>
 66c:	ldr	x1, [x0]
 670:	mov	w0, #0x19                  	// #25
 674:	bl	0 <grub_error>
 678:	b	5f0 <grub_archelp_open+0x88>
 67c:	ldp	x1, x0, [sp, #80]
 680:	bl	0 <grub_strcmp>
 684:	cbnz	w0, 6b0 <grub_archelp_open+0x148>
 688:	ldr	x0, [sp, #80]
 68c:	bl	0 <grub_free>
 690:	ldr	x0, [sp, #88]
 694:	bl	0 <grub_free>
 698:	mov	w0, w19
 69c:	ldp	x19, x20, [sp, #16]
 6a0:	ldp	x21, x22, [sp, #32]
 6a4:	ldr	x23, [sp, #48]
 6a8:	ldp	x29, x30, [sp], #96
 6ac:	ret
 6b0:	ldr	x0, [sp, #80]
 6b4:	bl	0 <grub_free>
 6b8:	b	5b0 <grub_archelp_open+0x48>
 6bc:	nop
	...
