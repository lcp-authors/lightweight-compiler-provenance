
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ISIRI-3342.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 12000 <gconv@@Base+0x11718>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0x100>:
     760:	adrp	x0, 12000 <gconv@@Base+0x11718>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 13000 <gconv@@Base+0x12718>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 13000 <gconv@@Base+0x12718>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 12000 <gconv@@Base+0x11718>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 13000 <gconv@@Base+0x12718>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 13000 <gconv@@Base+0x12718>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 12000 <gconv@@Base+0x11718>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 13000 <gconv@@Base+0x12718>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 12000 <gconv@@Base+0x11718>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 13000 <gconv@@Base+0x12718>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	and	x2, x1, #0xff
     83c:	adrp	x0, 1000 <gconv@@Base+0x718>
     840:	add	x0, x0, #0x800
     844:	and	w1, w1, #0xff
     848:	ldr	w0, [x0, x2, lsl #2]
     84c:	cbz	w0, 854 <__assert_fail@plt+0x104>
     850:	ret
     854:	tst	x1, #0x7f
     858:	csetm	w0, ne  // ne = any
     85c:	ret

0000000000000860 <gconv_init@@Base>:
     860:	stp	x29, x30, [sp, #-32]!
     864:	mov	x29, sp
     868:	stp	x19, x20, [sp, #16]
     86c:	mov	x19, x0
     870:	adrp	x20, 1000 <gconv@@Base+0x718>
     874:	ldr	x0, [x0, #24]
     878:	add	x20, x20, #0x670
     87c:	mov	x1, x20
     880:	bl	730 <strcmp@plt>
     884:	cbnz	w0, 8b8 <gconv_init@@Base+0x58>
     888:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     88c:	mov	x2, #0x100000001           	// #4294967297
     890:	add	x0, x0, #0x838
     894:	mov	x1, #0x400000004           	// #17179869188
     898:	str	x0, [x19, #48]
     89c:	stp	x2, x1, [x19, #72]
     8a0:	str	xzr, [x19, #96]
     8a4:	mov	w0, #0x0                   	// #0
     8a8:	str	wzr, [x19, #88]
     8ac:	ldp	x19, x20, [sp, #16]
     8b0:	ldp	x29, x30, [sp], #32
     8b4:	ret
     8b8:	ldr	x0, [x19, #32]
     8bc:	mov	x1, x20
     8c0:	bl	730 <strcmp@plt>
     8c4:	cbnz	w0, 8e0 <gconv_init@@Base+0x80>
     8c8:	mov	x0, #0xffffffffffffffff    	// #-1
     8cc:	mov	x2, #0x400000004           	// #17179869188
     8d0:	mov	x1, #0x100000001           	// #4294967297
     8d4:	stp	x2, x1, [x19, #72]
     8d8:	str	x0, [x19, #96]
     8dc:	b	8a4 <gconv_init@@Base+0x44>
     8e0:	mov	w0, #0x1                   	// #1
     8e4:	b	8ac <gconv_init@@Base+0x4c>

00000000000008e8 <gconv@@Base>:
     8e8:	stp	x29, x30, [sp, #-240]!
     8ec:	mov	x9, x0
     8f0:	mov	x8, x4
     8f4:	mov	x29, sp
     8f8:	stp	x19, x20, [sp, #16]
     8fc:	mov	x20, x1
     900:	adrp	x1, 12000 <gconv@@Base+0x11718>
     904:	stp	x23, x24, [sp, #48]
     908:	mov	x19, x3
     90c:	ldr	w13, [x20, #16]
     910:	ldr	x1, [x1, #4056]
     914:	stp	x25, x26, [sp, #64]
     918:	mov	x26, x5
     91c:	ldr	x0, [x1]
     920:	str	x0, [sp, #232]
     924:	mov	x0, #0x0                   	// #0
     928:	add	x1, x9, #0x68
     92c:	add	x0, x20, #0x30
     930:	stp	x27, x28, [sp, #80]
     934:	mov	x25, #0x0                   	// #0
     938:	stp	x1, x0, [sp, #144]
     93c:	mov	x27, x2
     940:	str	w7, [sp, #168]
     944:	tbnz	w13, #0, 964 <gconv@@Base+0x7c>
     948:	ldr	x0, [x9, #104]
     94c:	ldr	x25, [x9, #144]
     950:	cbz	x0, 964 <gconv@@Base+0x7c>
     954:	adrp	x0, 12000 <gconv@@Base+0x11718>
     958:	ldr	x0, [x0, #4040]
     95c:	ldr	x0, [x0]
     960:	eor	x25, x25, x0
     964:	cbnz	w6, 1050 <gconv@@Base+0x768>
     968:	cmp	x8, #0x0
     96c:	add	x1, sp, #0xc0
     970:	csel	x2, x20, x8, eq  // eq = none
     974:	cmp	x26, #0x0
     978:	csel	x1, x1, xzr, ne  // ne = any
     97c:	stp	x21, x22, [sp, #32]
     980:	mov	x10, #0x0                   	// #0
     984:	ldr	x23, [x2]
     988:	str	x1, [sp, #136]
     98c:	ldr	w1, [sp, #168]
     990:	ldr	x0, [x9, #96]
     994:	cmp	w1, #0x0
     998:	cset	w1, ne  // ne = any
     99c:	str	w1, [sp, #172]
     9a0:	str	xzr, [sp, #192]
     9a4:	cmp	x0, #0x0
     9a8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     9ac:	ldr	x21, [x27]
     9b0:	ldr	x22, [x20, #8]
     9b4:	b.ne	d58 <gconv@@Base+0x470>  // b.any
     9b8:	add	x1, sp, #0xd8
     9bc:	adrp	x18, 1000 <gconv@@Base+0x718>
     9c0:	add	x14, x18, #0x800
     9c4:	str	x1, [sp, #160]
     9c8:	mov	x1, x26
     9cc:	mov	x24, x23
     9d0:	mov	x26, x22
     9d4:	mov	x23, x27
     9d8:	add	x15, x14, #0x400
     9dc:	mov	w7, w13
     9e0:	mov	x27, x10
     9e4:	mov	x22, x1
     9e8:	stp	x9, x8, [sp, #120]
     9ec:	cbz	x22, 9f8 <gconv@@Base+0x110>
     9f0:	ldr	x1, [x22]
     9f4:	add	x27, x27, x1
     9f8:	cbz	x0, b84 <gconv@@Base+0x29c>
     9fc:	stp	x21, x24, [sp, #208]
     a00:	mov	x28, x24
     a04:	cmp	x19, x21
     a08:	b.eq	10ec <gconv@@Base+0x804>  // b.none
     a0c:	mov	x0, x21
     a10:	add	x3, sp, #0xd0
     a14:	mov	w11, #0x4                   	// #4
     a18:	add	x1, x0, #0x4
     a1c:	cmp	x19, x1
     a20:	b.cc	c5c <gconv@@Base+0x374>  // b.lo, b.ul, b.last
     a24:	cmp	x26, x28
     a28:	b.ls	c68 <gconv@@Base+0x380>  // b.plast
     a2c:	ldr	w8, [x0]
     a30:	mov	w2, #0xfffe                	// #65534
     a34:	cmp	w8, w2
     a38:	b.hi	b58 <gconv@@Base+0x270>  // b.pmore
     a3c:	mov	w2, w8
     a40:	cmp	w8, #0x7f
     a44:	mov	x5, x15
     a48:	mov	w6, #0xa4                  	// #164
     a4c:	b.hi	a5c <gconv@@Base+0x174>  // b.pmore
     a50:	b	a7c <gconv@@Base+0x194>
     a54:	ldrh	w6, [x2, #10]
     a58:	mov	x5, x2
     a5c:	cmp	w8, w6
     a60:	add	x2, x5, #0x8
     a64:	b.hi	a54 <gconv@@Base+0x16c>  // b.pmore
     a68:	ldrh	w1, [x2]
     a6c:	cmp	w8, w1
     a70:	b.cc	b64 <gconv@@Base+0x27c>  // b.lo, b.ul, b.last
     a74:	ldr	w2, [x5, #12]
     a78:	add	w2, w8, w2
     a7c:	add	x1, x18, #0x800
     a80:	add	x1, x1, #0x480
     a84:	ldrb	w1, [x1, w2, uxtw]
     a88:	cmp	w1, #0x0
     a8c:	ccmp	w8, #0x0, #0x4, eq  // eq = none
     a90:	b.ne	b64 <gconv@@Base+0x27c>  // b.any
     a94:	add	x0, x28, #0x1
     a98:	str	x0, [sp, #216]
     a9c:	strb	w1, [x28]
     aa0:	ldp	x0, x28, [sp, #208]
     aa4:	add	x0, x0, #0x4
     aa8:	str	x0, [sp, #208]
     aac:	cmp	x19, x0
     ab0:	b.ne	a18 <gconv@@Base+0x130>  // b.any
     ab4:	nop
     ab8:	str	x0, [x23]
     abc:	ldr	x0, [sp, #128]
     ac0:	cbnz	x0, c04 <gconv@@Base+0x31c>
     ac4:	ldp	w1, w0, [x20, #16]
     ac8:	add	w0, w0, #0x1
     acc:	str	w0, [x20, #20]
     ad0:	tbnz	w1, #0, cfc <gconv@@Base+0x414>
     ad4:	cmp	x24, x28
     ad8:	b.cs	d48 <gconv@@Base+0x460>  // b.hs, b.nlast
     adc:	ldr	x1, [x20]
     ae0:	mov	x0, x25
     ae4:	stp	x14, x15, [sp, #96]
     ae8:	str	w11, [sp, #112]
     aec:	str	x1, [sp, #200]
     af0:	bl	740 <_dl_mcount_wrapper_check@plt>
     af4:	ldp	x0, x1, [sp, #144]
     af8:	mov	x5, x22
     afc:	ldr	w7, [sp, #168]
     b00:	mov	x3, x28
     b04:	add	x2, sp, #0xc8
     b08:	mov	w6, #0x0                   	// #0
     b0c:	mov	x4, #0x0                   	// #0
     b10:	blr	x25
     b14:	mov	w7, w0
     b18:	ldr	w11, [sp, #112]
     b1c:	cmp	w0, #0x4
     b20:	adrp	x18, 1000 <gconv@@Base+0x718>
     b24:	ldp	x14, x15, [sp, #96]
     b28:	b.eq	c44 <gconv@@Base+0x35c>  // b.none
     b2c:	ldr	x11, [sp, #200]
     b30:	cmp	x11, x28
     b34:	b.ne	ec8 <gconv@@Base+0x5e0>  // b.any
     b38:	ldr	x0, [sp, #120]
     b3c:	ldr	x0, [x0, #96]
     b40:	cbnz	w7, 109c <gconv@@Base+0x7b4>
     b44:	ldr	w7, [x20, #16]
     b48:	ldr	x24, [x20]
     b4c:	ldr	x21, [x23]
     b50:	ldr	x27, [sp, #192]
     b54:	b	9ec <gconv@@Base+0x104>
     b58:	mov	w0, #0x1c00                	// #7168
     b5c:	cmp	w0, w8, lsr #7
     b60:	b.eq	1030 <gconv@@Base+0x748>  // b.none
     b64:	ldr	x0, [sp, #136]
     b68:	cbz	x0, 1314 <gconv@@Base+0xa2c>
     b6c:	ldr	w0, [x20, #16]
     b70:	tbnz	w0, #3, c80 <gconv@@Base+0x398>
     b74:	ldr	x0, [sp, #208]
     b78:	tbnz	w7, #1, cdc <gconv@@Base+0x3f4>
     b7c:	mov	w11, #0x6                   	// #6
     b80:	b	ab8 <gconv@@Base+0x1d0>
     b84:	cmp	x19, x21
     b88:	b.eq	1300 <gconv@@Base+0xa18>  // b.none
     b8c:	add	x1, x24, #0x4
     b90:	cmp	x26, x1
     b94:	b.cc	103c <gconv@@Base+0x754>  // b.lo, b.ul, b.last
     b98:	and	w7, w7, #0x2
     b9c:	mov	x0, x21
     ba0:	mov	x28, x24
     ba4:	mov	w11, #0x4                   	// #4
     ba8:	b	bd0 <gconv@@Base+0x2e8>
     bac:	add	x0, x0, #0x1
     bb0:	str	w2, [x28]
     bb4:	mov	x3, x0
     bb8:	mov	x28, x1
     bbc:	cmp	x19, x0
     bc0:	b.eq	bf8 <gconv@@Base+0x310>  // b.none
     bc4:	add	x1, x28, #0x4
     bc8:	cmp	x26, x1
     bcc:	b.cc	c74 <gconv@@Base+0x38c>  // b.lo, b.ul, b.last
     bd0:	ldrb	w4, [x0]
     bd4:	mov	x3, x0
     bd8:	ldr	w2, [x14, w4, sxtw #2]
     bdc:	cbnz	w2, bac <gconv@@Base+0x2c4>
     be0:	tst	x4, #0x7f
     be4:	b.eq	bac <gconv@@Base+0x2c4>  // b.none
     be8:	ldr	x2, [sp, #136]
     bec:	cbz	x2, bf4 <gconv@@Base+0x30c>
     bf0:	cbnz	w7, 1014 <gconv@@Base+0x72c>
     bf4:	mov	w11, #0x6                   	// #6
     bf8:	str	x3, [x23]
     bfc:	ldr	x0, [sp, #128]
     c00:	cbz	x0, ac4 <gconv@@Base+0x1dc>
     c04:	mov	w24, w11
     c08:	ldp	x21, x22, [sp, #32]
     c0c:	str	x28, [x0]
     c10:	adrp	x0, 12000 <gconv@@Base+0x11718>
     c14:	ldr	x0, [x0, #4056]
     c18:	ldr	x1, [sp, #232]
     c1c:	ldr	x0, [x0]
     c20:	eor	x0, x1, x0
     c24:	cbnz	x0, 1654 <gconv@@Base+0xd6c>
     c28:	mov	w0, w24
     c2c:	ldp	x19, x20, [sp, #16]
     c30:	ldp	x23, x24, [sp, #48]
     c34:	ldp	x25, x26, [sp, #64]
     c38:	ldp	x27, x28, [sp, #80]
     c3c:	ldp	x29, x30, [sp], #240
     c40:	ret
     c44:	cmp	w11, #0x5
     c48:	b.eq	d3c <gconv@@Base+0x454>  // b.none
     c4c:	ldr	x0, [sp, #120]
     c50:	mov	w7, w11
     c54:	ldr	x0, [x0, #96]
     c58:	b	b40 <gconv@@Base+0x258>
     c5c:	mov	w11, #0x7                   	// #7
     c60:	ldr	x0, [sp, #208]
     c64:	b	ab8 <gconv@@Base+0x1d0>
     c68:	mov	w11, #0x5                   	// #5
     c6c:	ldr	x0, [sp, #208]
     c70:	b	ab8 <gconv@@Base+0x1d0>
     c74:	mov	w11, #0x5                   	// #5
     c78:	str	x3, [x23]
     c7c:	b	bfc <gconv@@Base+0x314>
     c80:	ldr	x2, [x23]
     c84:	mov	x4, x19
     c88:	ldr	x0, [sp, #120]
     c8c:	mov	x1, x20
     c90:	ldr	x6, [sp, #136]
     c94:	str	x3, [sp, #96]
     c98:	ldr	x5, [sp, #160]
     c9c:	str	w7, [sp, #104]
     ca0:	str	x14, [sp, #112]
     ca4:	str	x15, [sp, #176]
     ca8:	bl	700 <__gconv_transliterate@plt>
     cac:	mov	w11, w0
     cb0:	ldr	w7, [sp, #104]
     cb4:	cmp	w0, #0x6
     cb8:	adrp	x18, 1000 <gconv@@Base+0x718>
     cbc:	ldr	x3, [sp, #96]
     cc0:	ldr	x14, [sp, #112]
     cc4:	ldr	x15, [sp, #176]
     cc8:	b.eq	100c <gconv@@Base+0x724>  // b.none
     ccc:	cmp	w0, #0x5
     cd0:	ldp	x0, x28, [sp, #208]
     cd4:	b.ne	aac <gconv@@Base+0x1c4>  // b.any
     cd8:	b	ab8 <gconv@@Base+0x1d0>
     cdc:	ldr	x2, [sp, #136]
     ce0:	add	x0, x0, #0x4
     ce4:	mov	w11, #0x6                   	// #6
     ce8:	str	x0, [sp, #208]
     cec:	ldr	x1, [x2]
     cf0:	add	x1, x1, #0x1
     cf4:	str	x1, [x2]
     cf8:	b	aac <gconv@@Base+0x1c4>
     cfc:	ldr	x9, [sp, #120]
     d00:	mov	w24, w11
     d04:	ldr	x1, [x22]
     d08:	mov	x27, x23
     d0c:	ldr	x2, [sp, #192]
     d10:	ldr	x0, [x9, #96]
     d14:	str	x28, [x20]
     d18:	add	x1, x1, x2
     d1c:	str	x1, [x22]
     d20:	cmp	x0, #0x0
     d24:	ldr	w0, [sp, #172]
     d28:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     d2c:	ccmp	w24, #0x7, #0x0, ne  // ne = any
     d30:	b.eq	11e0 <gconv@@Base+0x8f8>  // b.none
     d34:	ldp	x21, x22, [sp, #32]
     d38:	b	c10 <gconv@@Base+0x328>
     d3c:	ldr	x0, [sp, #120]
     d40:	ldr	x0, [x0, #96]
     d44:	b	b44 <gconv@@Base+0x25c>
     d48:	ldr	x0, [sp, #120]
     d4c:	mov	w7, w11
     d50:	ldr	x0, [x0, #96]
     d54:	b	b40 <gconv@@Base+0x258>
     d58:	ldr	x14, [x20, #32]
     d5c:	ldr	w3, [x14]
     d60:	ands	w4, w3, #0x7
     d64:	b.eq	9b8 <gconv@@Base+0xd0>  // b.none
     d68:	cbnz	x8, 1634 <gconv@@Base+0xd4c>
     d6c:	stp	x21, x23, [sp, #208]
     d70:	cmp	w4, #0x4
     d74:	b.hi	158c <gconv@@Base+0xca4>  // b.pmore
     d78:	mov	w7, w4
     d7c:	cbz	w4, 1374 <gconv@@Base+0xa8c>
     d80:	add	x6, x14, #0x3
     d84:	add	x10, sp, #0xe0
     d88:	mov	x0, #0x1                   	// #1
     d8c:	add	x1, x10, x0
     d90:	ldrb	w5, [x6, x0]
     d94:	cmp	x0, x7
     d98:	add	x0, x0, #0x1
     d9c:	sturb	w5, [x1, #-1]
     da0:	b.ne	d8c <gconv@@Base+0x4a4>  // b.any
     da4:	mov	x0, #0x4                   	// #4
     da8:	sub	x0, x0, x7
     dac:	add	x0, x21, x0
     db0:	cmp	x19, x0
     db4:	b.cc	13f4 <gconv@@Base+0xb0c>  // b.lo, b.ul, b.last
     db8:	add	x0, x21, #0x1
     dbc:	add	x10, sp, #0xe0
     dc0:	cmp	x23, x22
     dc4:	b.cs	1368 <gconv@@Base+0xa80>  // b.hs, b.nlast
     dc8:	add	x7, x7, #0x1
     dcc:	str	x0, [sp, #208]
     dd0:	add	x1, x10, x7
     dd4:	cmp	x7, #0x3
     dd8:	ldurb	w2, [x0, #-1]
     ddc:	ccmp	x19, x0, #0x0, ls  // ls = plast
     de0:	add	x0, x0, #0x1
     de4:	sturb	w2, [x1, #-1]
     de8:	b.hi	dc8 <gconv@@Base+0x4e0>  // b.pmore
     dec:	ldr	w5, [sp, #224]
     df0:	mov	w0, #0xfffe                	// #65534
     df4:	str	x10, [sp, #208]
     df8:	cmp	w5, w0
     dfc:	b.hi	13d8 <gconv@@Base+0xaf0>  // b.pmore
     e00:	mov	w1, w5
     e04:	cmp	w5, #0x7f
     e08:	adrp	x3, 1000 <gconv@@Base+0x718>
     e0c:	b.ls	e4c <gconv@@Base+0x564>  // b.plast
     e10:	adrp	x3, 1000 <gconv@@Base+0x718>
     e14:	add	x1, x3, #0x800
     e18:	add	x1, x1, #0x400
     e1c:	mov	w2, #0xa4                  	// #164
     e20:	b	e2c <gconv@@Base+0x544>
     e24:	ldrh	w2, [x0, #10]
     e28:	mov	x1, x0
     e2c:	cmp	w5, w2
     e30:	add	x0, x1, #0x8
     e34:	b.hi	e24 <gconv@@Base+0x53c>  // b.pmore
     e38:	ldrh	w0, [x0]
     e3c:	cmp	w5, w0
     e40:	b.cc	1398 <gconv@@Base+0xab0>  // b.lo, b.ul, b.last
     e44:	ldr	w1, [x1, #12]
     e48:	add	w1, w5, w1
     e4c:	add	x0, x3, #0x800
     e50:	add	x0, x0, #0x480
     e54:	ldrb	w0, [x0, w1, uxtw]
     e58:	cmp	w0, #0x0
     e5c:	ccmp	w5, #0x0, #0x4, eq  // eq = none
     e60:	b.ne	1398 <gconv@@Base+0xab0>  // b.any
     e64:	add	x1, x23, #0x1
     e68:	str	x1, [sp, #216]
     e6c:	strb	w0, [x23]
     e70:	ldr	x0, [sp, #208]
     e74:	add	x0, x0, #0x4
     e78:	str	x0, [sp, #208]
     e7c:	cmp	x0, x10
     e80:	b.eq	1384 <gconv@@Base+0xa9c>  // b.none
     e84:	ldr	w3, [x14]
     e88:	sub	x10, x0, x10
     e8c:	and	w4, w3, #0x7
     e90:	mov	w0, w4
     e94:	cmp	x0, x10
     e98:	b.ge	1614 <gconv@@Base+0xd2c>  // b.tcont
     e9c:	ldr	x21, [x27]
     ea0:	sub	x0, x10, x0
     ea4:	ldr	w13, [x20, #16]
     ea8:	and	w3, w3, #0xfffffff8
     eac:	add	x21, x21, x0
     eb0:	str	x21, [x27]
     eb4:	ldr	x10, [sp, #192]
     eb8:	ldr	x0, [x9, #96]
     ebc:	ldr	x23, [sp, #216]
     ec0:	str	w3, [x14]
     ec4:	b	9b8 <gconv@@Base+0xd0>
     ec8:	mov	x0, #0x0                   	// #0
     ecc:	cbz	x22, ed4 <gconv@@Base+0x5ec>
     ed0:	ldr	x0, [x22]
     ed4:	ldr	x1, [sp, #192]
     ed8:	add	x0, x0, x1
     edc:	cmp	x0, x27
     ee0:	b.eq	10f8 <gconv@@Base+0x810>  // b.none
     ee4:	ldr	x0, [sp, #120]
     ee8:	ldr	w28, [x20, #16]
     eec:	str	x21, [x23]
     ef0:	ldr	x0, [x0, #96]
     ef4:	cbz	x0, 1238 <gconv@@Base+0x950>
     ef8:	stp	x21, x24, [sp, #208]
     efc:	cmp	x19, x21
     f00:	b.eq	152c <gconv@@Base+0xc44>  // b.none
     f04:	add	x27, sp, #0xd0
     f08:	mov	x5, x24
     f0c:	mov	x10, x26
     f10:	mov	x26, x24
     f14:	mov	x24, x20
     f18:	mov	x20, x11
     f1c:	mov	x11, x22
     f20:	mov	x3, x27
     f24:	ldr	x22, [sp, #136]
     f28:	mov	x27, x25
     f2c:	mov	x25, x23
     f30:	mov	x23, x15
     f34:	mov	x6, #0x4                   	// #4
     f38:	add	x0, x21, #0x4
     f3c:	cmp	x19, x0
     f40:	b.cc	12d0 <gconv@@Base+0x9e8>  // b.lo, b.ul, b.last
     f44:	cmp	x20, x5
     f48:	b.ls	1338 <gconv@@Base+0xa50>  // b.plast
     f4c:	ldr	w9, [x21]
     f50:	mov	w1, #0xfffe                	// #65534
     f54:	cmp	w9, w1
     f58:	b.hi	1320 <gconv@@Base+0xa38>  // b.pmore
     f5c:	mov	w0, w9
     f60:	cmp	w9, #0x7f
     f64:	mov	x2, x23
     f68:	mov	w8, #0xa4                  	// #164
     f6c:	b.hi	f7c <gconv@@Base+0x694>  // b.pmore
     f70:	b	f9c <gconv@@Base+0x6b4>
     f74:	ldrh	w8, [x0, #10]
     f78:	mov	x2, x0
     f7c:	cmp	w9, w8
     f80:	add	x0, x2, #0x8
     f84:	b.hi	f74 <gconv@@Base+0x68c>  // b.pmore
     f88:	ldrh	w0, [x0]
     f8c:	cmp	w9, w0
     f90:	b.cc	10a8 <gconv@@Base+0x7c0>  // b.lo, b.ul, b.last
     f94:	ldr	w0, [x2, #12]
     f98:	add	w0, w9, w0
     f9c:	add	x1, x18, #0x800
     fa0:	add	x1, x1, #0x480
     fa4:	ldrb	w0, [x1, w0, uxtw]
     fa8:	cmp	w0, #0x0
     fac:	ccmp	w9, #0x0, #0x4, eq  // eq = none
     fb0:	b.ne	10a8 <gconv@@Base+0x7c0>  // b.any
     fb4:	add	x1, x5, #0x1
     fb8:	str	x1, [sp, #216]
     fbc:	strb	w0, [x5]
     fc0:	ldp	x21, x5, [sp, #208]
     fc4:	add	x21, x21, #0x4
     fc8:	str	x21, [sp, #208]
     fcc:	cmp	x19, x21
     fd0:	b.ne	f38 <gconv@@Base+0x650>  // b.any
     fd4:	mov	x15, x23
     fd8:	mov	x23, x25
     fdc:	mov	x22, x11
     fe0:	mov	x20, x24
     fe4:	ldr	x11, [sp, #200]
     fe8:	mov	x24, x26
     fec:	mov	x25, x27
     ff0:	mov	x26, x10
     ff4:	str	x19, [x23]
     ff8:	cmp	x5, x11
     ffc:	b.ne	12e0 <gconv@@Base+0x9f8>  // b.any
    1000:	cmp	x6, #0x5
    1004:	b.eq	11c0 <gconv@@Base+0x8d8>  // b.none
    1008:	b	10cc <gconv@@Base+0x7e4>
    100c:	ldr	x28, [sp, #216]
    1010:	b	b74 <gconv@@Base+0x28c>
    1014:	ldr	x1, [x2]
    1018:	add	x0, x0, #0x1
    101c:	mov	x3, x0
    1020:	mov	w11, #0x6                   	// #6
    1024:	add	x1, x1, #0x1
    1028:	str	x1, [x2]
    102c:	b	bbc <gconv@@Base+0x2d4>
    1030:	mov	x0, x1
    1034:	str	x1, [sp, #208]
    1038:	b	aac <gconv@@Base+0x1c4>
    103c:	mov	x3, x21
    1040:	mov	x28, x24
    1044:	mov	w11, #0x5                   	// #5
    1048:	str	x3, [x23]
    104c:	b	bfc <gconv@@Base+0x314>
    1050:	cbnz	x8, 1540 <gconv@@Base+0xc58>
    1054:	ldr	x0, [x20, #32]
    1058:	mov	w24, #0x0                   	// #0
    105c:	str	xzr, [x0]
    1060:	ldr	w0, [x20, #16]
    1064:	tbnz	w0, #0, c10 <gconv@@Base+0x328>
    1068:	mov	x0, x25
    106c:	str	w6, [sp, #96]
    1070:	bl	740 <_dl_mcount_wrapper_check@plt>
    1074:	ldp	x0, x1, [sp, #144]
    1078:	mov	x5, x26
    107c:	ldr	w6, [sp, #96]
    1080:	mov	x4, #0x0                   	// #0
    1084:	ldr	w7, [sp, #168]
    1088:	mov	x3, #0x0                   	// #0
    108c:	mov	x2, #0x0                   	// #0
    1090:	blr	x25
    1094:	mov	w24, w0
    1098:	b	c10 <gconv@@Base+0x328>
    109c:	mov	x27, x23
    10a0:	mov	w24, w7
    10a4:	b	d20 <gconv@@Base+0x438>
    10a8:	cbz	x22, 12d0 <gconv@@Base+0x9e8>
    10ac:	ldr	w0, [x24, #16]
    10b0:	tbnz	w0, #3, 113c <gconv@@Base+0x854>
    10b4:	ldr	x21, [sp, #208]
    10b8:	tbnz	w28, #1, 1120 <gconv@@Base+0x838>
    10bc:	ldr	x0, [sp, #200]
    10c0:	str	x21, [x25]
    10c4:	cmp	x5, x0
    10c8:	b.ne	12e0 <gconv@@Base+0x9f8>  // b.any
    10cc:	adrp	x3, 1000 <gconv@@Base+0x718>
    10d0:	adrp	x1, 1000 <gconv@@Base+0x718>
    10d4:	adrp	x0, 1000 <gconv@@Base+0x718>
    10d8:	add	x3, x3, #0x7f8
    10dc:	add	x1, x1, #0x680
    10e0:	add	x0, x0, #0x7b0
    10e4:	mov	w2, #0x2eb                 	// #747
    10e8:	bl	750 <__assert_fail@plt>
    10ec:	mov	x0, x19
    10f0:	mov	w11, #0x4                   	// #4
    10f4:	b	ab8 <gconv@@Base+0x1d0>
    10f8:	ldr	x0, [sp, #120]
    10fc:	sub	x11, x28, x11
    1100:	ldr	x1, [x23]
    1104:	ldr	x0, [x0, #96]
    1108:	cbz	x0, 142c <gconv@@Base+0xb44>
    110c:	ldr	x0, [sp, #120]
    1110:	sub	x11, x1, x11, lsl #2
    1114:	str	x11, [x23]
    1118:	ldr	x0, [x0, #96]
    111c:	b	b40 <gconv@@Base+0x258>
    1120:	ldr	x0, [x22]
    1124:	add	x21, x21, #0x4
    1128:	mov	x6, #0x6                   	// #6
    112c:	str	x21, [sp, #208]
    1130:	add	x0, x0, #0x1
    1134:	str	x0, [x22]
    1138:	b	fcc <gconv@@Base+0x6e4>
    113c:	ldr	x2, [x25]
    1140:	mov	x6, x22
    1144:	ldr	x0, [sp, #120]
    1148:	mov	x4, x19
    114c:	ldr	x5, [sp, #160]
    1150:	mov	x1, x24
    1154:	str	x3, [sp, #96]
    1158:	str	w7, [sp, #104]
    115c:	str	x10, [sp, #112]
    1160:	stp	x11, x14, [sp, #176]
    1164:	bl	700 <__gconv_transliterate@plt>
    1168:	sxtw	x6, w0
    116c:	ldr	w7, [sp, #104]
    1170:	cmp	w6, #0x6
    1174:	adrp	x18, 1000 <gconv@@Base+0x718>
    1178:	ldr	x3, [sp, #96]
    117c:	ldr	x10, [sp, #112]
    1180:	ldp	x11, x14, [sp, #176]
    1184:	b.eq	1538 <gconv@@Base+0xc50>  // b.none
    1188:	cmp	w6, #0x5
    118c:	ldp	x21, x5, [sp, #208]
    1190:	b.ne	fcc <gconv@@Base+0x6e4>  // b.any
    1194:	mov	x15, x23
    1198:	mov	x23, x25
    119c:	ldr	x0, [sp, #200]
    11a0:	mov	x20, x24
    11a4:	str	x21, [x23]
    11a8:	mov	x24, x26
    11ac:	mov	x22, x11
    11b0:	mov	x26, x10
    11b4:	mov	x25, x27
    11b8:	cmp	x5, x0
    11bc:	b.ne	12e0 <gconv@@Base+0x9f8>  // b.any
    11c0:	ldr	x0, [sp, #120]
    11c4:	cmp	x24, x5
    11c8:	ldr	x0, [x0, #96]
    11cc:	b.ne	b40 <gconv@@Base+0x258>  // b.any
    11d0:	ldr	w1, [x20, #20]
    11d4:	sub	w1, w1, #0x1
    11d8:	str	w1, [x20, #20]
    11dc:	b	b40 <gconv@@Base+0x258>
    11e0:	ldr	x1, [x27]
    11e4:	sub	x0, x19, x1
    11e8:	cmp	x0, #0x3
    11ec:	b.gt	156c <gconv@@Base+0xc84>
    11f0:	ldr	x2, [x20, #32]
    11f4:	cmp	x1, x19
    11f8:	mov	x0, x1
    11fc:	add	x3, x2, #0x4
    1200:	b.cs	1564 <gconv@@Base+0xc7c>  // b.hs, b.nlast
    1204:	add	x0, x0, #0x1
    1208:	str	x0, [x27]
    120c:	cmp	x0, x19
    1210:	ldurb	w4, [x0, #-1]
    1214:	strb	w4, [x3], #1
    1218:	b.ne	1204 <gconv@@Base+0x91c>  // b.any
    121c:	sub	w0, w0, w1
    1220:	ldr	w1, [x2]
    1224:	ldp	x21, x22, [sp, #32]
    1228:	and	w1, w1, #0xfffffff8
    122c:	orr	w0, w1, w0
    1230:	str	w0, [x2]
    1234:	b	c10 <gconv@@Base+0x328>
    1238:	cmp	x19, x21
    123c:	b.eq	152c <gconv@@Base+0xc44>  // b.none
    1240:	add	x1, x24, #0x4
    1244:	cmp	x1, x11
    1248:	b.hi	1520 <gconv@@Base+0xc38>  // b.pmore
    124c:	and	w28, w28, #0x2
    1250:	mov	x5, x24
    1254:	mov	x0, x21
    1258:	mov	x6, #0x4                   	// #4
    125c:	ldr	x8, [sp, #136]
    1260:	b	1288 <gconv@@Base+0x9a0>
    1264:	add	x0, x0, #0x1
    1268:	str	w3, [x5]
    126c:	mov	x2, x0
    1270:	mov	x5, x1
    1274:	cmp	x19, x0
    1278:	b.eq	12c8 <gconv@@Base+0x9e0>  // b.none
    127c:	add	x1, x5, #0x4
    1280:	cmp	x11, x1
    1284:	b.cc	12c4 <gconv@@Base+0x9dc>  // b.lo, b.ul, b.last
    1288:	ldrb	w4, [x0]
    128c:	mov	x2, x0
    1290:	ldr	w3, [x14, w4, sxtw #2]
    1294:	cbnz	w3, 1264 <gconv@@Base+0x97c>
    1298:	tst	x4, #0x7f
    129c:	b.eq	1264 <gconv@@Base+0x97c>  // b.none
    12a0:	cbz	x8, 1514 <gconv@@Base+0xc2c>
    12a4:	cbz	w28, 1514 <gconv@@Base+0xc2c>
    12a8:	ldr	x1, [x8]
    12ac:	add	x0, x0, #0x1
    12b0:	mov	x2, x0
    12b4:	mov	x6, #0x6                   	// #6
    12b8:	add	x1, x1, #0x1
    12bc:	str	x1, [x8]
    12c0:	b	1274 <gconv@@Base+0x98c>
    12c4:	mov	x6, #0x5                   	// #5
    12c8:	str	x2, [x23]
    12cc:	b	ff8 <gconv@@Base+0x710>
    12d0:	ldp	x0, x1, [sp, #200]
    12d4:	str	x1, [x25]
    12d8:	cmp	x0, x5
    12dc:	b.eq	10cc <gconv@@Base+0x7e4>  // b.none
    12e0:	adrp	x3, 1000 <gconv@@Base+0x718>
    12e4:	adrp	x1, 1000 <gconv@@Base+0x718>
    12e8:	adrp	x0, 1000 <gconv@@Base+0x718>
    12ec:	add	x3, x3, #0x7f8
    12f0:	add	x1, x1, #0x680
    12f4:	add	x0, x0, #0x798
    12f8:	mov	w2, #0x2ea                 	// #746
    12fc:	bl	750 <__assert_fail@plt>
    1300:	mov	x3, x19
    1304:	mov	x28, x24
    1308:	mov	w11, #0x4                   	// #4
    130c:	str	x3, [x23]
    1310:	b	bfc <gconv@@Base+0x314>
    1314:	mov	w11, #0x6                   	// #6
    1318:	ldr	x0, [sp, #208]
    131c:	b	ab8 <gconv@@Base+0x1d0>
    1320:	mov	w1, #0x1c00                	// #7168
    1324:	cmp	w1, w9, lsr #7
    1328:	b.ne	10a8 <gconv@@Base+0x7c0>  // b.any
    132c:	mov	x21, x0
    1330:	str	x0, [sp, #208]
    1334:	b	fcc <gconv@@Base+0x6e4>
    1338:	ldp	x0, x1, [sp, #200]
    133c:	mov	x15, x23
    1340:	mov	x23, x25
    1344:	mov	x20, x24
    1348:	mov	x22, x11
    134c:	mov	x24, x26
    1350:	mov	x25, x27
    1354:	mov	x26, x10
    1358:	str	x1, [x23]
    135c:	cmp	x0, x5
    1360:	b.eq	11c0 <gconv@@Base+0x8d8>  // b.none
    1364:	b	12e0 <gconv@@Base+0x9f8>
    1368:	mov	w24, #0x5                   	// #5
    136c:	ldp	x21, x22, [sp, #32]
    1370:	b	c10 <gconv@@Base+0x328>
    1374:	mov	x0, #0x4                   	// #4
    1378:	mov	x7, #0x0                   	// #0
    137c:	b	dac <gconv@@Base+0x4c4>
    1380:	cbnz	w24, d34 <gconv@@Base+0x44c>
    1384:	ldr	w13, [x20, #16]
    1388:	ldr	x21, [x27]
    138c:	ldr	x0, [x9, #96]
    1390:	ldr	x10, [sp, #192]
    1394:	b	9b8 <gconv@@Base+0xd0>
    1398:	ldr	x0, [sp, #136]
    139c:	cbz	x0, 13cc <gconv@@Base+0xae4>
    13a0:	tbnz	w13, #3, 1444 <gconv@@Base+0xb5c>
    13a4:	tbz	w13, #1, 13cc <gconv@@Base+0xae4>
    13a8:	mov	x0, x10
    13ac:	ldr	x2, [sp, #136]
    13b0:	add	x0, x0, #0x4
    13b4:	str	x0, [sp, #208]
    13b8:	ldr	x1, [x2]
    13bc:	add	x1, x1, #0x1
    13c0:	str	x1, [x2]
    13c4:	cmp	x0, x10
    13c8:	b.ne	e84 <gconv@@Base+0x59c>  // b.any
    13cc:	mov	w24, #0x6                   	// #6
    13d0:	ldp	x21, x22, [sp, #32]
    13d4:	b	c10 <gconv@@Base+0x328>
    13d8:	mov	w0, #0x1c00                	// #7168
    13dc:	cmp	w0, w5, lsr #7
    13e0:	b.ne	1398 <gconv@@Base+0xab0>  // b.any
    13e4:	add	x0, x10, #0x4
    13e8:	mov	x10, #0x4                   	// #4
    13ec:	str	x0, [sp, #208]
    13f0:	b	e90 <gconv@@Base+0x5a8>
    13f4:	str	x19, [x27]
    13f8:	cmp	x21, x19
    13fc:	b.cs	1420 <gconv@@Base+0xb38>  // b.hs, b.nlast
    1400:	add	x7, x14, x7
    1404:	add	x21, x21, #0x1
    1408:	str	x21, [sp, #208]
    140c:	cmp	x19, x21
    1410:	add	x7, x7, #0x1
    1414:	ldurb	w0, [x21, #-1]
    1418:	strb	w0, [x7, #3]
    141c:	b.ne	1404 <gconv@@Base+0xb1c>  // b.any
    1420:	mov	w24, #0x7                   	// #7
    1424:	ldp	x21, x22, [sp, #32]
    1428:	b	c10 <gconv@@Base+0x328>
    142c:	add	x0, x11, #0x3
    1430:	cmp	x11, #0x0
    1434:	csel	x11, x0, x11, lt  // lt = tstop
    1438:	sub	x0, x1, x11, asr #2
    143c:	str	x0, [x23]
    1440:	b	b38 <gconv@@Base+0x250>
    1444:	add	x28, x10, x7
    1448:	mov	x6, x0
    144c:	mov	x2, x21
    1450:	mov	x0, x9
    1454:	mov	x4, x28
    1458:	add	x5, sp, #0xd8
    145c:	add	x3, sp, #0xd0
    1460:	mov	x1, x20
    1464:	stp	x9, x10, [sp, #96]
    1468:	stp	x7, x14, [sp, #112]
    146c:	str	w13, [sp, #128]
    1470:	str	x8, [sp, #160]
    1474:	bl	700 <__gconv_transliterate@plt>
    1478:	ldr	w13, [sp, #128]
    147c:	mov	w24, w0
    1480:	cmp	w0, #0x6
    1484:	ldp	x9, x10, [sp, #96]
    1488:	ldr	x14, [sp, #120]
    148c:	ldr	x8, [sp, #160]
    1490:	ldr	x0, [sp, #208]
    1494:	b.eq	160c <gconv@@Base+0xd24>  // b.none
    1498:	cmp	x0, x10
    149c:	ldr	x7, [sp, #112]
    14a0:	b.ne	e84 <gconv@@Base+0x59c>  // b.any
    14a4:	cmp	w24, #0x7
    14a8:	b.ne	1380 <gconv@@Base+0xa98>  // b.any
    14ac:	add	x0, x10, #0x4
    14b0:	cmp	x28, x0
    14b4:	b.eq	15ec <gconv@@Base+0xd04>  // b.none
    14b8:	ldr	w0, [x14]
    14bc:	ldr	x1, [x27]
    14c0:	and	x2, x0, #0x7
    14c4:	sub	x2, x7, x2
    14c8:	and	w0, w0, #0xfffffff8
    14cc:	add	x1, x1, x2
    14d0:	str	x1, [x27]
    14d4:	cmp	x7, w0, sxtw
    14d8:	b.le	15cc <gconv@@Base+0xce4>
    14dc:	cmp	x7, #0x4
    14e0:	b.hi	15ac <gconv@@Base+0xcc4>  // b.pmore
    14e4:	orr	w0, w0, w7
    14e8:	str	w0, [x14]
    14ec:	cmp	x28, x10
    14f0:	b.ls	1420 <gconv@@Base+0xb38>  // b.plast
    14f4:	add	x14, x14, #0x4
    14f8:	add	x10, x10, #0x1
    14fc:	str	x10, [sp, #208]
    1500:	cmp	x28, x10
    1504:	ldurb	w0, [x10, #-1]
    1508:	strb	w0, [x14], #1
    150c:	b.ne	14f8 <gconv@@Base+0xc10>  // b.any
    1510:	b	1420 <gconv@@Base+0xb38>
    1514:	mov	x6, #0x6                   	// #6
    1518:	str	x2, [x23]
    151c:	b	ff8 <gconv@@Base+0x710>
    1520:	cmp	x11, x24
    1524:	b.eq	11d0 <gconv@@Base+0x8e8>  // b.none
    1528:	b	12e0 <gconv@@Base+0x9f8>
    152c:	cmp	x11, x24
    1530:	b.eq	10cc <gconv@@Base+0x7e4>  // b.none
    1534:	b	12e0 <gconv@@Base+0x9f8>
    1538:	ldr	x5, [sp, #216]
    153c:	b	10b4 <gconv@@Base+0x7cc>
    1540:	adrp	x3, 1000 <gconv@@Base+0x718>
    1544:	adrp	x1, 1000 <gconv@@Base+0x718>
    1548:	adrp	x0, 1000 <gconv@@Base+0x718>
    154c:	add	x3, x3, #0x7f8
    1550:	add	x1, x1, #0x680
    1554:	add	x0, x0, #0x698
    1558:	mov	w2, #0x1a4                 	// #420
    155c:	stp	x21, x22, [sp, #32]
    1560:	bl	750 <__assert_fail@plt>
    1564:	mov	w0, #0x0                   	// #0
    1568:	b	1220 <gconv@@Base+0x938>
    156c:	adrp	x3, 1000 <gconv@@Base+0x718>
    1570:	adrp	x1, 1000 <gconv@@Base+0x718>
    1574:	adrp	x0, 1000 <gconv@@Base+0x718>
    1578:	add	x3, x3, #0x7f8
    157c:	add	x1, x1, #0x680
    1580:	add	x0, x0, #0x7d0
    1584:	mov	w2, #0x31e                 	// #798
    1588:	bl	750 <__assert_fail@plt>
    158c:	adrp	x3, 1000 <gconv@@Base+0x718>
    1590:	adrp	x1, 1000 <gconv@@Base+0x718>
    1594:	adrp	x0, 1000 <gconv@@Base+0x718>
    1598:	add	x3, x3, #0x7e8
    159c:	add	x1, x1, #0x6b0
    15a0:	add	x0, x0, #0x6c0
    15a4:	mov	w2, #0x18b                 	// #395
    15a8:	bl	750 <__assert_fail@plt>
    15ac:	adrp	x3, 1000 <gconv@@Base+0x718>
    15b0:	adrp	x1, 1000 <gconv@@Base+0x718>
    15b4:	adrp	x0, 1000 <gconv@@Base+0x718>
    15b8:	add	x3, x3, #0x7e8
    15bc:	add	x1, x1, #0x6b0
    15c0:	add	x0, x0, #0x768
    15c4:	mov	w2, #0x1e6                 	// #486
    15c8:	bl	750 <__assert_fail@plt>
    15cc:	adrp	x3, 1000 <gconv@@Base+0x718>
    15d0:	adrp	x1, 1000 <gconv@@Base+0x718>
    15d4:	adrp	x0, 1000 <gconv@@Base+0x718>
    15d8:	add	x3, x3, #0x7e8
    15dc:	add	x1, x1, #0x6b0
    15e0:	add	x0, x0, #0x740
    15e4:	mov	w2, #0x1e5                 	// #485
    15e8:	bl	750 <__assert_fail@plt>
    15ec:	adrp	x3, 1000 <gconv@@Base+0x718>
    15f0:	adrp	x1, 1000 <gconv@@Base+0x718>
    15f4:	adrp	x0, 1000 <gconv@@Base+0x718>
    15f8:	add	x3, x3, #0x7e8
    15fc:	add	x1, x1, #0x6b0
    1600:	add	x0, x0, #0x718
    1604:	mov	w2, #0x1db                 	// #475
    1608:	bl	750 <__assert_fail@plt>
    160c:	tbz	w13, #1, 13c4 <gconv@@Base+0xadc>
    1610:	b	13ac <gconv@@Base+0xac4>
    1614:	adrp	x3, 1000 <gconv@@Base+0x718>
    1618:	adrp	x1, 1000 <gconv@@Base+0x718>
    161c:	adrp	x0, 1000 <gconv@@Base+0x718>
    1620:	add	x3, x3, #0x7e8
    1624:	add	x1, x1, #0x6b0
    1628:	add	x0, x0, #0x6f0
    162c:	mov	w2, #0x1c9                 	// #457
    1630:	bl	750 <__assert_fail@plt>
    1634:	adrp	x3, 1000 <gconv@@Base+0x718>
    1638:	adrp	x1, 1000 <gconv@@Base+0x718>
    163c:	adrp	x0, 1000 <gconv@@Base+0x718>
    1640:	add	x3, x3, #0x7f8
    1644:	add	x1, x1, #0x680
    1648:	add	x0, x0, #0x698
    164c:	mov	w2, #0x234                 	// #564
    1650:	bl	750 <__assert_fail@plt>
    1654:	stp	x21, x22, [sp, #32]
    1658:	bl	710 <__stack_chk_fail@plt>

Disassembly of section .fini:

000000000000165c <.fini>:
    165c:	stp	x29, x30, [sp, #-16]!
    1660:	mov	x29, sp
    1664:	ldp	x29, x30, [sp], #16
    1668:	ret
