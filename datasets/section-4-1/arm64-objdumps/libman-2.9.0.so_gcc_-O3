
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libman-2.9.0.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000a268 <.init>:
    a268:	stp	x29, x30, [sp, #-16]!
    a26c:	mov	x29, sp
    a270:	bl	b010 <xgetcwd@plt+0x10>
    a274:	ldp	x29, x30, [sp], #16
    a278:	ret

Disassembly of section .plt:

000000000000a280 <base_len@plt-0x20>:
    a280:	stp	x16, x30, [sp, #-16]!
    a284:	adrp	x16, 4c000 <vasnprintf@@Base+0x1b848>
    a288:	ldr	x17, [x16, #4088]
    a28c:	add	x16, x16, #0xff8
    a290:	br	x17
    a294:	nop
    a298:	nop
    a29c:	nop

000000000000a2a0 <base_len@plt>:
    a2a0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a2a4:	ldr	x17, [x16]
    a2a8:	add	x16, x16, #0x0
    a2ac:	br	x17

000000000000a2b0 <mbrtowc@plt>:
    a2b0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a2b4:	ldr	x17, [x16, #8]
    a2b8:	add	x16, x16, #0x8
    a2bc:	br	x17

000000000000a2c0 <memcpy@plt>:
    a2c0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a2c4:	ldr	x17, [x16, #16]
    a2c8:	add	x16, x16, #0x10
    a2cc:	br	x17

000000000000a2d0 <memmove@plt>:
    a2d0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a2d4:	ldr	x17, [x16, #24]
    a2d8:	add	x16, x16, #0x18
    a2dc:	br	x17

000000000000a2e0 <pthread_rwlockattr_init@plt>:
    a2e0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a2e4:	ldr	x17, [x16, #32]
    a2e8:	add	x16, x16, #0x20
    a2ec:	br	x17

000000000000a2f0 <_exit@plt>:
    a2f0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a2f4:	ldr	x17, [x16, #40]
    a2f8:	add	x16, x16, #0x28
    a2fc:	br	x17

000000000000a300 <getcwd@plt>:
    a300:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a304:	ldr	x17, [x16, #48]
    a308:	add	x16, x16, #0x30
    a30c:	br	x17

000000000000a310 <same_nameat@plt>:
    a310:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a314:	ldr	x17, [x16, #56]
    a318:	add	x16, x16, #0x38
    a31c:	br	x17

000000000000a320 <fwrite_unlocked@plt>:
    a320:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a324:	ldr	x17, [x16, #64]
    a328:	add	x16, x16, #0x40
    a32c:	br	x17

000000000000a330 <get_canonical_charset_name@plt>:
    a330:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a334:	ldr	x17, [x16, #72]
    a338:	add	x16, x16, #0x48
    a33c:	br	x17

000000000000a340 <strlen@plt>:
    a340:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a344:	ldr	x17, [x16, #80]
    a348:	add	x16, x16, #0x50
    a34c:	br	x17

000000000000a350 <exit@plt>:
    a350:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a354:	ldr	x17, [x16, #88]
    a358:	add	x16, x16, #0x58
    a35c:	br	x17

000000000000a360 <error@plt>:
    a360:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a364:	ldr	x17, [x16, #96]
    a368:	add	x16, x16, #0x60
    a36c:	br	x17

000000000000a370 <pthread_mutexattr_settype@plt>:
    a370:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a374:	ldr	x17, [x16, #104]
    a378:	add	x16, x16, #0x68
    a37c:	br	x17

000000000000a380 <fchdir@plt>:
    a380:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a384:	ldr	x17, [x16, #112]
    a388:	add	x16, x16, #0x70
    a38c:	br	x17

000000000000a390 <perror@plt>:
    a390:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a394:	ldr	x17, [x16, #120]
    a398:	add	x16, x16, #0x78
    a39c:	br	x17

000000000000a3a0 <flockfile@plt>:
    a3a0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a3a4:	ldr	x17, [x16, #128]
    a3a8:	add	x16, x16, #0x80
    a3ac:	br	x17

000000000000a3b0 <getegid@plt>:
    a3b0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a3b4:	ldr	x17, [x16, #136]
    a3b8:	add	x16, x16, #0x88
    a3bc:	br	x17

000000000000a3c0 <wctype@plt>:
    a3c0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a3c4:	ldr	x17, [x16, #144]
    a3c8:	add	x16, x16, #0x90
    a3cc:	br	x17

000000000000a3d0 <sigprocmask@plt>:
    a3d0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a3d4:	ldr	x17, [x16, #152]
    a3d8:	add	x16, x16, #0x98
    a3dc:	br	x17

000000000000a3e0 <rpl_mbrtowc@plt>:
    a3e0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a3e4:	ldr	x17, [x16, #160]
    a3e8:	add	x16, x16, #0xa0
    a3ec:	br	x17

000000000000a3f0 <geteuid@plt>:
    a3f0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a3f4:	ldr	x17, [x16, #168]
    a3f8:	add	x16, x16, #0xa8
    a3fc:	br	x17

000000000000a400 <get_roff_encoding@plt>:
    a400:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a404:	ldr	x17, [x16, #176]
    a408:	add	x16, x16, #0xb0
    a40c:	br	x17

000000000000a410 <pthread_rwlock_init@plt>:
    a410:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a414:	ldr	x17, [x16, #184]
    a418:	add	x16, x16, #0xb8
    a41c:	br	x17

000000000000a420 <getresuid@plt>:
    a420:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a424:	ldr	x17, [x16, #192]
    a428:	add	x16, x16, #0xc0
    a42c:	br	x17

000000000000a430 <pthread_rwlockattr_setkind_np@plt>:
    a430:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a434:	ldr	x17, [x16, #200]
    a438:	add	x16, x16, #0xc8
    a43c:	br	x17

000000000000a440 <chdir_long@plt>:
    a440:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a444:	ldr	x17, [x16, #208]
    a448:	add	x16, x16, #0xd0
    a44c:	br	x17

000000000000a450 <hash_insert@plt>:
    a450:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a454:	ldr	x17, [x16, #216]
    a458:	add	x16, x16, #0xd8
    a45c:	br	x17

000000000000a460 <setenv@plt>:
    a460:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a464:	ldr	x17, [x16, #224]
    a468:	add	x16, x16, #0xe0
    a46c:	br	x17

000000000000a470 <readlink@plt>:
    a470:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a474:	ldr	x17, [x16, #232]
    a478:	add	x16, x16, #0xe8
    a47c:	br	x17

000000000000a480 <__cxa_finalize@plt>:
    a480:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a484:	ldr	x17, [x16, #240]
    a488:	add	x16, x16, #0xf0
    a48c:	br	x17

000000000000a490 <sprintf@plt>:
    a490:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a494:	ldr	x17, [x16, #248]
    a498:	add	x16, x16, #0xf8
    a49c:	br	x17

000000000000a4a0 <getuid@plt>:
    a4a0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a4a4:	ldr	x17, [x16, #256]
    a4a8:	add	x16, x16, #0x100
    a4ac:	br	x17

000000000000a4b0 <pipe@plt>:
    a4b0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a4b4:	ldr	x17, [x16, #264]
    a4b8:	add	x16, x16, #0x108
    a4bc:	br	x17

000000000000a4c0 <opendir@plt>:
    a4c0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a4c4:	ldr	x17, [x16, #272]
    a4c8:	add	x16, x16, #0x110
    a4cc:	br	x17

000000000000a4d0 <__cxa_atexit@plt>:
    a4d0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a4d4:	ldr	x17, [x16, #280]
    a4d8:	add	x16, x16, #0x118
    a4dc:	br	x17

000000000000a4e0 <fputc@plt>:
    a4e0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a4e4:	ldr	x17, [x16, #288]
    a4e8:	add	x16, x16, #0x120
    a4ec:	br	x17

000000000000a4f0 <clock_gettime@plt>:
    a4f0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a4f4:	ldr	x17, [x16, #296]
    a4f8:	add	x16, x16, #0x128
    a4fc:	br	x17

000000000000a500 <qsort@plt>:
    a500:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a504:	ldr	x17, [x16, #304]
    a508:	add	x16, x16, #0x130
    a50c:	br	x17

000000000000a510 <kill@plt>:
    a510:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a514:	ldr	x17, [x16, #312]
    a518:	add	x16, x16, #0x138
    a51c:	br	x17

000000000000a520 <_argp_fmtstream_update@plt>:
    a520:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a524:	ldr	x17, [x16, #320]
    a528:	add	x16, x16, #0x140
    a52c:	br	x17

000000000000a530 <__ctype_tolower_loc@plt>:
    a530:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a534:	ldr	x17, [x16, #328]
    a538:	add	x16, x16, #0x148
    a53c:	br	x17

000000000000a540 <snprintf@plt>:
    a540:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a544:	ldr	x17, [x16, #336]
    a548:	add	x16, x16, #0x150
    a54c:	br	x17

000000000000a550 <mdir_name@plt>:
    a550:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a554:	ldr	x17, [x16, #344]
    a558:	add	x16, x16, #0x158
    a55c:	br	x17

000000000000a560 <triple_free@plt>:
    a560:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a564:	ldr	x17, [x16, #352]
    a568:	add	x16, x16, #0x160
    a56c:	br	x17

000000000000a570 <debug@plt>:
    a570:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a574:	ldr	x17, [x16, #360]
    a578:	add	x16, x16, #0x168
    a57c:	br	x17

000000000000a580 <hash_free@plt>:
    a580:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a584:	ldr	x17, [x16, #368]
    a588:	add	x16, x16, #0x170
    a58c:	br	x17

000000000000a590 <fclose@plt>:
    a590:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a594:	ldr	x17, [x16, #376]
    a598:	add	x16, x16, #0x178
    a59c:	br	x17

000000000000a5a0 <rpl_regcomp@plt>:
    a5a0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a5a4:	ldr	x17, [x16, #384]
    a5a8:	add	x16, x16, #0x180
    a5ac:	br	x17

000000000000a5b0 <getpid@plt>:
    a5b0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a5b4:	ldr	x17, [x16, #392]
    a5b8:	add	x16, x16, #0x188
    a5bc:	br	x17

000000000000a5c0 <nl_langinfo@plt>:
    a5c0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a5c4:	ldr	x17, [x16, #400]
    a5c8:	add	x16, x16, #0x190
    a5cc:	br	x17

000000000000a5d0 <fopen@plt>:
    a5d0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a5d4:	ldr	x17, [x16, #408]
    a5d8:	add	x16, x16, #0x198
    a5dc:	br	x17

000000000000a5e0 <iswctype@plt>:
    a5e0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a5e4:	ldr	x17, [x16, #416]
    a5e8:	add	x16, x16, #0x1a0
    a5ec:	br	x17

000000000000a5f0 <malloc@plt>:
    a5f0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a5f4:	ldr	x17, [x16, #424]
    a5f8:	add	x16, x16, #0x1a8
    a5fc:	br	x17

000000000000a600 <record_file@plt>:
    a600:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a604:	ldr	x17, [x16, #432]
    a608:	add	x16, x16, #0x1b0
    a60c:	br	x17

000000000000a610 <futimesat@plt>:
    a610:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a614:	ldr	x17, [x16, #440]
    a618:	add	x16, x16, #0x1b8
    a61c:	br	x17

000000000000a620 <funlockfile@plt>:
    a620:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a624:	ldr	x17, [x16, #448]
    a628:	add	x16, x16, #0x1c0
    a62c:	br	x17

000000000000a630 <stdopen@plt>:
    a630:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a634:	ldr	x17, [x16, #456]
    a638:	add	x16, x16, #0x1c8
    a63c:	br	x17

000000000000a640 <open@plt>:
    a640:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a644:	ldr	x17, [x16, #464]
    a648:	add	x16, x16, #0x1d0
    a64c:	br	x17

000000000000a650 <argp_failure@plt>:
    a650:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a654:	ldr	x17, [x16, #472]
    a658:	add	x16, x16, #0x1d8
    a65c:	br	x17

000000000000a660 <xrealloc@plt>:
    a660:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a664:	ldr	x17, [x16, #480]
    a668:	add	x16, x16, #0x1e0
    a66c:	br	x17

000000000000a670 <dir_name@plt>:
    a670:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a674:	ldr	x17, [x16, #488]
    a678:	add	x16, x16, #0x1e8
    a67c:	br	x17

000000000000a680 <idpriv_temp_drop@plt>:
    a680:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a684:	ldr	x17, [x16, #496]
    a688:	add	x16, x16, #0x1f0
    a68c:	br	x17

000000000000a690 <sigemptyset@plt>:
    a690:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a694:	ldr	x17, [x16, #504]
    a698:	add	x16, x16, #0x1f8
    a69c:	br	x17

000000000000a6a0 <get_groff_preconv@plt>:
    a6a0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a6a4:	ldr	x17, [x16, #512]
    a6a8:	add	x16, x16, #0x200
    a6ac:	br	x17

000000000000a6b0 <futimens@plt>:
    a6b0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a6b4:	ldr	x17, [x16, #520]
    a6b8:	add	x16, x16, #0x208
    a6bc:	br	x17

000000000000a6c0 <strncmp@plt>:
    a6c0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a6c4:	ldr	x17, [x16, #528]
    a6c8:	add	x16, x16, #0x210
    a6cc:	br	x17

000000000000a6d0 <bindtextdomain@plt>:
    a6d0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a6d4:	ldr	x17, [x16, #536]
    a6d8:	add	x16, x16, #0x218
    a6dc:	br	x17

000000000000a6e0 <fstatfs@plt>:
    a6e0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a6e4:	ldr	x17, [x16, #544]
    a6e8:	add	x16, x16, #0x220
    a6ec:	br	x17

000000000000a6f0 <memset@plt>:
    a6f0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a6f4:	ldr	x17, [x16, #552]
    a6f8:	add	x16, x16, #0x228
    a6fc:	br	x17

000000000000a700 <gettimeofday@plt>:
    a700:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a704:	ldr	x17, [x16, #560]
    a708:	add	x16, x16, #0x230
    a70c:	br	x17

000000000000a710 <xmalloc@plt>:
    a710:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a714:	ldr	x17, [x16, #568]
    a718:	add	x16, x16, #0x238
    a71c:	br	x17

000000000000a720 <getpwnam@plt>:
    a720:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a724:	ldr	x17, [x16, #576]
    a728:	add	x16, x16, #0x240
    a72c:	br	x17

000000000000a730 <xstrdup@plt>:
    a730:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a734:	ldr	x17, [x16, #584]
    a738:	add	x16, x16, #0x248
    a73c:	br	x17

000000000000a740 <sleep@plt>:
    a740:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a744:	ldr	x17, [x16, #592]
    a748:	add	x16, x16, #0x250
    a74c:	br	x17

000000000000a750 <same_name@plt>:
    a750:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a754:	ldr	x17, [x16, #600]
    a758:	add	x16, x16, #0x258
    a75c:	br	x17

000000000000a760 <strerror_r@plt>:
    a760:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a764:	ldr	x17, [x16, #608]
    a768:	add	x16, x16, #0x260
    a76c:	br	x17

000000000000a770 <calloc@plt>:
    a770:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a774:	ldr	x17, [x16, #616]
    a778:	add	x16, x16, #0x268
    a77c:	br	x17

000000000000a780 <last_component@plt>:
    a780:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a784:	ldr	x17, [x16, #624]
    a788:	add	x16, x16, #0x270
    a78c:	br	x17

000000000000a790 <hard_locale@plt>:
    a790:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a794:	ldr	x17, [x16, #632]
    a798:	add	x16, x16, #0x278
    a79c:	br	x17

000000000000a7a0 <hash_insert_if_absent@plt>:
    a7a0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a7a4:	ldr	x17, [x16, #640]
    a7a8:	add	x16, x16, #0x280
    a7ac:	br	x17

000000000000a7b0 <hash_get_n_buckets_used@plt>:
    a7b0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a7b4:	ldr	x17, [x16, #648]
    a7b8:	add	x16, x16, #0x288
    a7bc:	br	x17

000000000000a7c0 <strcasecmp@plt>:
    a7c0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a7c4:	ldr	x17, [x16, #656]
    a7c8:	add	x16, x16, #0x290
    a7cc:	br	x17

000000000000a7d0 <readdir@plt>:
    a7d0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a7d4:	ldr	x17, [x16, #664]
    a7d8:	add	x16, x16, #0x298
    a7dc:	br	x17

000000000000a7e0 <realloc@plt>:
    a7e0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a7e4:	ldr	x17, [x16, #672]
    a7e8:	add	x16, x16, #0x2a0
    a7ec:	br	x17

000000000000a7f0 <__ctype_toupper_loc@plt>:
    a7f0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a7f4:	ldr	x17, [x16, #680]
    a7f8:	add	x16, x16, #0x2a8
    a7fc:	br	x17

000000000000a800 <hash_initialize@plt>:
    a800:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a804:	ldr	x17, [x16, #688]
    a808:	add	x16, x16, #0x2b0
    a80c:	br	x17

000000000000a810 <try_tempname@plt>:
    a810:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a814:	ldr	x17, [x16, #696]
    a818:	add	x16, x16, #0x2b8
    a81c:	br	x17

000000000000a820 <closedir@plt>:
    a820:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a824:	ldr	x17, [x16, #704]
    a828:	add	x16, x16, #0x2c0
    a82c:	br	x17

000000000000a830 <strerror@plt>:
    a830:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a834:	ldr	x17, [x16, #712]
    a838:	add	x16, x16, #0x2c8
    a83c:	br	x17

000000000000a840 <pthread_mutex_init@plt>:
    a840:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a844:	ldr	x17, [x16, #720]
    a848:	add	x16, x16, #0x2d0
    a84c:	br	x17

000000000000a850 <close@plt>:
    a850:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a854:	ldr	x17, [x16, #728]
    a858:	add	x16, x16, #0x2d8
    a85c:	br	x17

000000000000a860 <sigaction@plt>:
    a860:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a864:	ldr	x17, [x16, #736]
    a868:	add	x16, x16, #0x2e0
    a86c:	br	x17

000000000000a870 <hash_lookup@plt>:
    a870:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a874:	ldr	x17, [x16, #744]
    a878:	add	x16, x16, #0x2e8
    a87c:	br	x17

000000000000a880 <strrchr@plt>:
    a880:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a884:	ldr	x17, [x16, #752]
    a888:	add	x16, x16, #0x2f0
    a88c:	br	x17

000000000000a890 <xalloc_die@plt>:
    a890:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a894:	ldr	x17, [x16, #760]
    a898:	add	x16, x16, #0x2f8
    a89c:	br	x17

000000000000a8a0 <memmem@plt>:
    a8a0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a8a4:	ldr	x17, [x16, #768]
    a8a8:	add	x16, x16, #0x300
    a8ac:	br	x17

000000000000a8b0 <__gmon_start__@plt>:
    a8b0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a8b4:	ldr	x17, [x16, #776]
    a8b8:	add	x16, x16, #0x308
    a8bc:	br	x17

000000000000a8c0 <drop_effective_privs@plt>:
    a8c0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a8c4:	ldr	x17, [x16, #784]
    a8c8:	add	x16, x16, #0x310
    a8cc:	br	x17

000000000000a8d0 <btowc@plt>:
    a8d0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a8d4:	ldr	x17, [x16, #792]
    a8d8:	add	x16, x16, #0x318
    a8dc:	br	x17

000000000000a8e0 <mkdtemp@plt>:
    a8e0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a8e4:	ldr	x17, [x16, #800]
    a8e8:	add	x16, x16, #0x320
    a8ec:	br	x17

000000000000a8f0 <argp_fmtstream_printf@plt>:
    a8f0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a8f4:	ldr	x17, [x16, #808]
    a8f8:	add	x16, x16, #0x328
    a8fc:	br	x17

000000000000a900 <abort@plt>:
    a900:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a904:	ldr	x17, [x16, #816]
    a908:	add	x16, x16, #0x330
    a90c:	br	x17

000000000000a910 <_getopt_long_only_r@plt>:
    a910:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a914:	ldr	x17, [x16, #824]
    a918:	add	x16, x16, #0x338
    a91c:	br	x17

000000000000a920 <hash_rehash@plt>:
    a920:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a924:	ldr	x17, [x16, #832]
    a928:	add	x16, x16, #0x340
    a92c:	br	x17

000000000000a930 <mbsinit@plt>:
    a930:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a934:	ldr	x17, [x16, #840]
    a938:	add	x16, x16, #0x348
    a93c:	br	x17

000000000000a940 <__overflow@plt>:
    a940:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a944:	ldr	x17, [x16, #848]
    a948:	add	x16, x16, #0x350
    a94c:	br	x17

000000000000a950 <access@plt>:
    a950:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a954:	ldr	x17, [x16, #856]
    a958:	add	x16, x16, #0x358
    a95c:	br	x17

000000000000a960 <fdutimens@plt>:
    a960:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a964:	ldr	x17, [x16, #864]
    a968:	add	x16, x16, #0x360
    a96c:	br	x17

000000000000a970 <memcmp@plt>:
    a970:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a974:	ldr	x17, [x16, #872]
    a978:	add	x16, x16, #0x368
    a97c:	br	x17

000000000000a980 <hash_pjw_bare@plt>:
    a980:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a984:	ldr	x17, [x16, #880]
    a988:	add	x16, x16, #0x370
    a98c:	br	x17

000000000000a990 <textdomain@plt>:
    a990:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a994:	ldr	x17, [x16, #888]
    a998:	add	x16, x16, #0x378
    a99c:	br	x17

000000000000a9a0 <strsep@plt>:
    a9a0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a9a4:	ldr	x17, [x16, #896]
    a9a8:	add	x16, x16, #0x380
    a9ac:	br	x17

000000000000a9b0 <strcmp@plt>:
    a9b0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a9b4:	ldr	x17, [x16, #904]
    a9b8:	add	x16, x16, #0x388
    a9bc:	br	x17

000000000000a9c0 <_getopt_long_r@plt>:
    a9c0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a9c4:	ldr	x17, [x16, #912]
    a9c8:	add	x16, x16, #0x390
    a9cc:	br	x17

000000000000a9d0 <__ctype_b_loc@plt>:
    a9d0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a9d4:	ldr	x17, [x16, #920]
    a9d8:	add	x16, x16, #0x398
    a9dc:	br	x17

000000000000a9e0 <rmdir@plt>:
    a9e0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a9e4:	ldr	x17, [x16, #928]
    a9e8:	add	x16, x16, #0x3a0
    a9ec:	br	x17

000000000000a9f0 <seen_file@plt>:
    a9f0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    a9f4:	ldr	x17, [x16, #936]
    a9f8:	add	x16, x16, #0x3a8
    a9fc:	br	x17

000000000000aa00 <strtol@plt>:
    aa00:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aa04:	ldr	x17, [x16, #944]
    aa08:	add	x16, x16, #0x3b0
    aa0c:	br	x17

000000000000aa10 <hash_get_max_bucket_length@plt>:
    aa10:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aa14:	ldr	x17, [x16, #952]
    aa18:	add	x16, x16, #0x3b8
    aa1c:	br	x17

000000000000aa20 <dir_len@plt>:
    aa20:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aa24:	ldr	x17, [x16, #960]
    aa28:	add	x16, x16, #0x3c0
    aa2c:	br	x17

000000000000aa30 <chdir@plt>:
    aa30:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aa34:	ldr	x17, [x16, #968]
    aa38:	add	x16, x16, #0x3c8
    aa3c:	br	x17

000000000000aa40 <dup_safer@plt>:
    aa40:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aa44:	ldr	x17, [x16, #976]
    aa48:	add	x16, x16, #0x3d0
    aa4c:	br	x17

000000000000aa50 <free@plt>:
    aa50:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aa54:	ldr	x17, [x16, #984]
    aa58:	add	x16, x16, #0x3d8
    aa5c:	br	x17

000000000000aa60 <renameat2@plt>:
    aa60:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aa64:	ldr	x17, [x16, #992]
    aa68:	add	x16, x16, #0x3e0
    aa6c:	br	x17

000000000000aa70 <argp_make_fmtstream@plt>:
    aa70:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aa74:	ldr	x17, [x16, #1000]
    aa78:	add	x16, x16, #0x3e8
    aa7c:	br	x17

000000000000aa80 <__ctype_get_mb_cur_max@plt>:
    aa80:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aa84:	ldr	x17, [x16, #1008]
    aa88:	add	x16, x16, #0x3f0
    aa8c:	br	x17

000000000000aa90 <getgid@plt>:
    aa90:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aa94:	ldr	x17, [x16, #1016]
    aa98:	add	x16, x16, #0x3f8
    aa9c:	br	x17

000000000000aaa0 <renameat@plt>:
    aaa0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aaa4:	ldr	x17, [x16, #1024]
    aaa8:	add	x16, x16, #0x400
    aaac:	br	x17

000000000000aab0 <mempcpy@plt>:
    aab0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aab4:	ldr	x17, [x16, #1032]
    aab8:	add	x16, x16, #0x408
    aabc:	br	x17

000000000000aac0 <xasprintf@plt>:
    aac0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aac4:	ldr	x17, [x16, #1040]
    aac8:	add	x16, x16, #0x410
    aacc:	br	x17

000000000000aad0 <vasnprintf@plt>:
    aad0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aad4:	ldr	x17, [x16, #1048]
    aad8:	add	x16, x16, #0x418
    aadc:	br	x17

000000000000aae0 <printf_fetchargs@plt>:
    aae0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aae4:	ldr	x17, [x16, #1056]
    aae8:	add	x16, x16, #0x420
    aaec:	br	x17

000000000000aaf0 <hash_get_n_buckets@plt>:
    aaf0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aaf4:	ldr	x17, [x16, #1064]
    aaf8:	add	x16, x16, #0x428
    aafc:	br	x17

000000000000ab00 <nanosleep@plt>:
    ab00:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ab04:	ldr	x17, [x16, #1072]
    ab08:	add	x16, x16, #0x430
    ab0c:	br	x17

000000000000ab10 <vasprintf@plt>:
    ab10:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ab14:	ldr	x17, [x16, #1080]
    ab18:	add	x16, x16, #0x438
    ab1c:	br	x17

000000000000ab20 <rpl_getopt_internal@plt>:
    ab20:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ab24:	ldr	x17, [x16, #1088]
    ab28:	add	x16, x16, #0x440
    ab2c:	br	x17

000000000000ab30 <strndup@plt>:
    ab30:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ab34:	ldr	x17, [x16, #1096]
    ab38:	add	x16, x16, #0x448
    ab3c:	br	x17

000000000000ab40 <strspn@plt>:
    ab40:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ab44:	ldr	x17, [x16, #1104]
    ab48:	add	x16, x16, #0x450
    ab4c:	br	x17

000000000000ab50 <rpl_ioctl@plt>:
    ab50:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ab54:	ldr	x17, [x16, #1112]
    ab58:	add	x16, x16, #0x458
    ab5c:	br	x17

000000000000ab60 <strchr@plt>:
    ab60:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ab64:	ldr	x17, [x16, #1120]
    ab68:	add	x16, x16, #0x460
    ab6c:	br	x17

000000000000ab70 <areadlink_with_size@plt>:
    ab70:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ab74:	ldr	x17, [x16, #1128]
    ab78:	add	x16, x16, #0x468
    ab7c:	br	x17

000000000000ab80 <argp_error@plt>:
    ab80:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ab84:	ldr	x17, [x16, #1136]
    ab88:	add	x16, x16, #0x470
    ab8c:	br	x17

000000000000ab90 <memrchr@plt>:
    ab90:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ab94:	ldr	x17, [x16, #1144]
    ab98:	add	x16, x16, #0x478
    ab9c:	br	x17

000000000000aba0 <utimensat@plt>:
    aba0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aba4:	ldr	x17, [x16, #1152]
    aba8:	add	x16, x16, #0x480
    abac:	br	x17

000000000000abb0 <pipeline_peekline@plt>:
    abb0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    abb4:	ldr	x17, [x16, #1160]
    abb8:	add	x16, x16, #0x488
    abbc:	br	x17

000000000000abc0 <do_cleanups_sigsafe@plt>:
    abc0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    abc4:	ldr	x17, [x16, #1168]
    abc8:	add	x16, x16, #0x490
    abcc:	br	x17

000000000000abd0 <fwrite@plt>:
    abd0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    abd4:	ldr	x17, [x16, #1176]
    abd8:	add	x16, x16, #0x498
    abdc:	br	x17

000000000000abe0 <rpl_fcntl@plt>:
    abe0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    abe4:	ldr	x17, [x16, #1184]
    abe8:	add	x16, x16, #0x4a0
    abec:	br	x17

000000000000abf0 <fnmatch@plt>:
    abf0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    abf4:	ldr	x17, [x16, #1192]
    abf8:	add	x16, x16, #0x4a8
    abfc:	br	x17

000000000000ac00 <fcntl@plt>:
    ac00:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ac04:	ldr	x17, [x16, #1200]
    ac08:	add	x16, x16, #0x4b0
    ac0c:	br	x17

000000000000ac10 <idpriv_drop@plt>:
    ac10:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ac14:	ldr	x17, [x16, #1208]
    ac18:	add	x16, x16, #0x4b8
    ac1c:	br	x17

000000000000ac20 <rpl_regerror@plt>:
    ac20:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ac24:	ldr	x17, [x16, #1216]
    ac28:	add	x16, x16, #0x4c0
    ac2c:	br	x17

000000000000ac30 <pthread_mutex_destroy@plt>:
    ac30:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ac34:	ldr	x17, [x16, #1224]
    ac38:	add	x16, x16, #0x4c8
    ac3c:	br	x17

000000000000ac40 <strcpy@plt>:
    ac40:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ac44:	ldr	x17, [x16, #1232]
    ac48:	add	x16, x16, #0x4d0
    ac4c:	br	x17

000000000000ac50 <hash_pjw@plt>:
    ac50:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ac54:	ldr	x17, [x16, #1240]
    ac58:	add	x16, x16, #0x4d8
    ac5c:	br	x17

000000000000ac60 <_argp_input@plt>:
    ac60:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ac64:	ldr	x17, [x16, #1248]
    ac68:	add	x16, x16, #0x4e0
    ac6c:	br	x17

000000000000ac70 <__lxstat@plt>:
    ac70:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ac74:	ldr	x17, [x16, #1256]
    ac78:	add	x16, x16, #0x4e8
    ac7c:	br	x17

000000000000ac80 <dup_safer_flag@plt>:
    ac80:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ac84:	ldr	x17, [x16, #1264]
    ac88:	add	x16, x16, #0x4f0
    ac8c:	br	x17

000000000000ac90 <memchr@plt>:
    ac90:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ac94:	ldr	x17, [x16, #1272]
    ac98:	add	x16, x16, #0x4f8
    ac9c:	br	x17

000000000000aca0 <idpriv_temp_restore@plt>:
    aca0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aca4:	ldr	x17, [x16, #1280]
    aca8:	add	x16, x16, #0x500
    acac:	br	x17

000000000000acb0 <new_string_list@plt>:
    acb0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    acb4:	ldr	x17, [x16, #1288]
    acb8:	add	x16, x16, #0x508
    acbc:	br	x17

000000000000acc0 <getresgid@plt>:
    acc0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    acc4:	ldr	x17, [x16, #1296]
    acc8:	add	x16, x16, #0x510
    accc:	br	x17

000000000000acd0 <isatty@plt>:
    acd0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    acd4:	ldr	x17, [x16, #1304]
    acd8:	add	x16, x16, #0x518
    acdc:	br	x17

000000000000ace0 <xzalloc@plt>:
    ace0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ace4:	ldr	x17, [x16, #1312]
    ace8:	add	x16, x16, #0x520
    acec:	br	x17

000000000000acf0 <xstrndup@plt>:
    acf0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    acf4:	ldr	x17, [x16, #1320]
    acf8:	add	x16, x16, #0x528
    acfc:	br	x17

000000000000ad00 <pthread_mutexattr_init@plt>:
    ad00:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ad04:	ldr	x17, [x16, #1328]
    ad08:	add	x16, x16, #0x530
    ad0c:	br	x17

000000000000ad10 <setresuid@plt>:
    ad10:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ad14:	ldr	x17, [x16, #1336]
    ad18:	add	x16, x16, #0x538
    ad1c:	br	x17

000000000000ad20 <utimes@plt>:
    ad20:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ad24:	ldr	x17, [x16, #1344]
    ad28:	add	x16, x16, #0x540
    ad2c:	br	x17

000000000000ad30 <iswalnum@plt>:
    ad30:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ad34:	ldr	x17, [x16, #1352]
    ad38:	add	x16, x16, #0x548
    ad3c:	br	x17

000000000000ad40 <__fxstat@plt>:
    ad40:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ad44:	ldr	x17, [x16, #1360]
    ad48:	add	x16, x16, #0x550
    ad4c:	br	x17

000000000000ad50 <pthread_mutexattr_destroy@plt>:
    ad50:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ad54:	ldr	x17, [x16, #1368]
    ad58:	add	x16, x16, #0x558
    ad5c:	br	x17

000000000000ad60 <strchrnul@plt>:
    ad60:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ad64:	ldr	x17, [x16, #1376]
    ad68:	add	x16, x16, #0x560
    ad6c:	br	x17

000000000000ad70 <strstr@plt>:
    ad70:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ad74:	ldr	x17, [x16, #1384]
    ad78:	add	x16, x16, #0x568
    ad7c:	br	x17

000000000000ad80 <_argp_fmtstream_ensure@plt>:
    ad80:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ad84:	ldr	x17, [x16, #1392]
    ad88:	add	x16, x16, #0x570
    ad8c:	br	x17

000000000000ad90 <argp_state_help@plt>:
    ad90:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ad94:	ldr	x17, [x16, #1400]
    ad98:	add	x16, x16, #0x578
    ad9c:	br	x17

000000000000ada0 <dcgettext@plt>:
    ada0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ada4:	ldr	x17, [x16, #1408]
    ada8:	add	x16, x16, #0x580
    adac:	br	x17

000000000000adb0 <pthread_rwlockattr_destroy@plt>:
    adb0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    adb4:	ldr	x17, [x16, #1416]
    adb8:	add	x16, x16, #0x588
    adbc:	br	x17

000000000000adc0 <vsnprintf@plt>:
    adc0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    adc4:	ldr	x17, [x16, #1424]
    adc8:	add	x16, x16, #0x590
    adcc:	br	x17

000000000000add0 <argp_fmtstream_free@plt>:
    add0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    add4:	ldr	x17, [x16, #1432]
    add8:	add	x16, x16, #0x598
    addc:	br	x17

000000000000ade0 <get_locale_charset@plt>:
    ade0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ade4:	ldr	x17, [x16, #1440]
    ade8:	add	x16, x16, #0x5a0
    adec:	br	x17

000000000000adf0 <xvasprintf@plt>:
    adf0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    adf4:	ldr	x17, [x16, #1448]
    adf8:	add	x16, x16, #0x5a8
    adfc:	br	x17

000000000000ae00 <fputs_unlocked@plt>:
    ae00:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ae04:	ldr	x17, [x16, #1456]
    ae08:	add	x16, x16, #0x5b0
    ae0c:	br	x17

000000000000ae10 <sigaddset@plt>:
    ae10:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ae14:	ldr	x17, [x16, #1464]
    ae18:	add	x16, x16, #0x5b8
    ae1c:	br	x17

000000000000ae20 <pathsearch_executable@plt>:
    ae20:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ae24:	ldr	x17, [x16, #1472]
    ae28:	add	x16, x16, #0x5c0
    ae2c:	br	x17

000000000000ae30 <towupper@plt>:
    ae30:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ae34:	ldr	x17, [x16, #1480]
    ae38:	add	x16, x16, #0x5c8
    ae3c:	br	x17

000000000000ae40 <fd_safer_flag@plt>:
    ae40:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ae44:	ldr	x17, [x16, #1488]
    ae48:	add	x16, x16, #0x5d0
    ae4c:	br	x17

000000000000ae50 <xmemdup@plt>:
    ae50:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ae54:	ldr	x17, [x16, #1496]
    ae58:	add	x16, x16, #0x5d8
    ae5c:	br	x17

000000000000ae60 <strcspn@plt>:
    ae60:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ae64:	ldr	x17, [x16, #1504]
    ae68:	add	x16, x16, #0x5e0
    ae6c:	br	x17

000000000000ae70 <_getopt_internal_r@plt>:
    ae70:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ae74:	ldr	x17, [x16, #1512]
    ae78:	add	x16, x16, #0x5e8
    ae7c:	br	x17

000000000000ae80 <vfprintf@plt>:
    ae80:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ae84:	ldr	x17, [x16, #1520]
    ae88:	add	x16, x16, #0x5f0
    ae8c:	br	x17

000000000000ae90 <openat@plt>:
    ae90:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    ae94:	ldr	x17, [x16, #1528]
    ae98:	add	x16, x16, #0x5f8
    ae9c:	br	x17

000000000000aea0 <__assert_fail@plt>:
    aea0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aea4:	ldr	x17, [x16, #1536]
    aea8:	add	x16, x16, #0x600
    aeac:	br	x17

000000000000aeb0 <__errno_location@plt>:
    aeb0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aeb4:	ldr	x17, [x16, #1544]
    aeb8:	add	x16, x16, #0x608
    aebc:	br	x17

000000000000aec0 <setresgid@plt>:
    aec0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aec4:	ldr	x17, [x16, #1552]
    aec8:	add	x16, x16, #0x610
    aecc:	br	x17

000000000000aed0 <getenv@plt>:
    aed0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aed4:	ldr	x17, [x16, #1560]
    aed8:	add	x16, x16, #0x618
    aedc:	br	x17

000000000000aee0 <locale_charset@plt>:
    aee0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aee4:	ldr	x17, [x16, #1568]
    aee8:	add	x16, x16, #0x620
    aeec:	br	x17

000000000000aef0 <__xstat@plt>:
    aef0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aef4:	ldr	x17, [x16, #1576]
    aef8:	add	x16, x16, #0x628
    aefc:	br	x17

000000000000af00 <pthread_mutex_lock@plt>:
    af00:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    af04:	ldr	x17, [x16, #1584]
    af08:	add	x16, x16, #0x630
    af0c:	br	x17

000000000000af10 <__getdelim@plt>:
    af10:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    af14:	ldr	x17, [x16, #1592]
    af18:	add	x16, x16, #0x638
    af1c:	br	x17

000000000000af20 <printf_parse@plt>:
    af20:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    af24:	ldr	x17, [x16, #1600]
    af28:	add	x16, x16, #0x640
    af2c:	br	x17

000000000000af30 <fd_safer@plt>:
    af30:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    af34:	ldr	x17, [x16, #1608]
    af38:	add	x16, x16, #0x648
    af3c:	br	x17

000000000000af40 <pthread_mutex_unlock@plt>:
    af40:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    af44:	ldr	x17, [x16, #1616]
    af48:	add	x16, x16, #0x650
    af4c:	br	x17

000000000000af50 <unlink@plt>:
    af50:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    af54:	ldr	x17, [x16, #1624]
    af58:	add	x16, x16, #0x658
    af5c:	br	x17

000000000000af60 <mkdir@plt>:
    af60:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    af64:	ldr	x17, [x16, #1632]
    af68:	add	x16, x16, #0x660
    af6c:	br	x17

000000000000af70 <towlower@plt>:
    af70:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    af74:	ldr	x17, [x16, #1640]
    af78:	add	x16, x16, #0x668
    af7c:	br	x17

000000000000af80 <gettime@plt>:
    af80:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    af84:	ldr	x17, [x16, #1648]
    af88:	add	x16, x16, #0x670
    af8c:	br	x17

000000000000af90 <rpl_re_compile_fastmap@plt>:
    af90:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    af94:	ldr	x17, [x16, #1656]
    af98:	add	x16, x16, #0x678
    af9c:	br	x17

000000000000afa0 <fprintf@plt>:
    afa0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    afa4:	ldr	x17, [x16, #1664]
    afa8:	add	x16, x16, #0x680
    afac:	br	x17

000000000000afb0 <hash_get_n_entries@plt>:
    afb0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    afb4:	ldr	x17, [x16, #1672]
    afb8:	add	x16, x16, #0x688
    afbc:	br	x17

000000000000afc0 <ioctl@plt>:
    afc0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    afc4:	ldr	x17, [x16, #1680]
    afc8:	add	x16, x16, #0x690
    afcc:	br	x17

000000000000afd0 <setlocale@plt>:
    afd0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    afd4:	ldr	x17, [x16, #1688]
    afd8:	add	x16, x16, #0x698
    afdc:	br	x17

000000000000afe0 <__fxstatat@plt>:
    afe0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    afe4:	ldr	x17, [x16, #1696]
    afe8:	add	x16, x16, #0x6a0
    afec:	br	x17

000000000000aff0 <wcrtomb@plt>:
    aff0:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    aff4:	ldr	x17, [x16, #1704]
    aff8:	add	x16, x16, #0x6a8
    affc:	br	x17

000000000000b000 <xgetcwd@plt>:
    b000:	adrp	x16, 4d000 <base_len@@Base+0x38058>
    b004:	ldr	x17, [x16, #1712]
    b008:	add	x16, x16, #0x6b0
    b00c:	br	x17

Disassembly of section .text:

000000000000b010 <appendstr@@Base-0xd8>:
    b010:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
    b014:	ldr	x0, [x0, #3904]
    b018:	cbz	x0, b020 <xgetcwd@plt+0x20>
    b01c:	b	a8b0 <__gmon_start__@plt>
    b020:	ret
    b024:	nop
    b028:	adrp	x0, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b02c:	add	x0, x0, #0x228
    b030:	adrp	x1, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b034:	add	x1, x1, #0x228
    b038:	cmp	x1, x0
    b03c:	b.eq	b054 <xgetcwd@plt+0x54>  // b.none
    b040:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
    b044:	ldr	x1, [x1, #3776]
    b048:	cbz	x1, b054 <xgetcwd@plt+0x54>
    b04c:	mov	x16, x1
    b050:	br	x16
    b054:	ret
    b058:	adrp	x0, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b05c:	add	x0, x0, #0x228
    b060:	adrp	x1, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b064:	add	x1, x1, #0x228
    b068:	sub	x1, x1, x0
    b06c:	lsr	x2, x1, #63
    b070:	add	x1, x2, x1, asr #3
    b074:	cmp	xzr, x1, asr #1
    b078:	asr	x1, x1, #1
    b07c:	b.eq	b094 <xgetcwd@plt+0x94>  // b.none
    b080:	adrp	x2, 4c000 <vasnprintf@@Base+0x1b848>
    b084:	ldr	x2, [x2, #4024]
    b088:	cbz	x2, b094 <xgetcwd@plt+0x94>
    b08c:	mov	x16, x2
    b090:	br	x16
    b094:	ret
    b098:	stp	x29, x30, [sp, #-32]!
    b09c:	mov	x29, sp
    b0a0:	str	x19, [sp, #16]
    b0a4:	adrp	x19, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b0a8:	ldrb	w0, [x19, #552]
    b0ac:	cbnz	w0, b0d4 <xgetcwd@plt+0xd4>
    b0b0:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
    b0b4:	ldr	x0, [x0, #3800]
    b0b8:	cbz	x0, b0c8 <xgetcwd@plt+0xc8>
    b0bc:	adrp	x0, 4d000 <base_len@@Base+0x38058>
    b0c0:	ldr	x0, [x0, #1728]
    b0c4:	bl	a480 <__cxa_finalize@plt>
    b0c8:	bl	b028 <xgetcwd@plt+0x28>
    b0cc:	mov	w0, #0x1                   	// #1
    b0d0:	strb	w0, [x19, #552]
    b0d4:	ldr	x19, [sp, #16]
    b0d8:	ldp	x29, x30, [sp], #32
    b0dc:	ret
    b0e0:	b	b058 <xgetcwd@plt+0x58>
    b0e4:	nop

000000000000b0e8 <appendstr@@Base>:
    b0e8:	stp	x29, x30, [sp, #-176]!
    b0ec:	mov	x29, sp
    b0f0:	stp	x19, x20, [sp, #16]
    b0f4:	stp	x21, x22, [sp, #32]
    b0f8:	stp	x23, x24, [sp, #48]
    b0fc:	mov	x24, x0
    b100:	str	x25, [sp, #64]
    b104:	stp	x1, x2, [sp, #120]
    b108:	stp	x3, x4, [sp, #136]
    b10c:	stp	x5, x6, [sp, #152]
    b110:	str	x7, [sp, #168]
    b114:	cbz	x0, b238 <appendstr@@Base+0x150>
    b118:	bl	a340 <strlen@plt>
    b11c:	mov	x20, x0
    b120:	add	x22, x0, #0x1
    b124:	add	x25, sp, #0xb0
    b128:	mov	w0, #0xffffffc8            	// #-56
    b12c:	add	x23, sp, #0x70
    b130:	mov	w19, w0
    b134:	mov	x21, x25
    b138:	stp	x25, x25, [sp, #80]
    b13c:	str	x23, [sp, #96]
    b140:	stp	w0, wzr, [sp, #104]
    b144:	b	b160 <appendstr@@Base+0x78>
    b148:	mov	x2, x21
    b14c:	add	x21, x21, #0x8
    b150:	ldr	x0, [x2]
    b154:	cbz	x0, b180 <appendstr@@Base+0x98>
    b158:	bl	a340 <strlen@plt>
    b15c:	add	x22, x22, x0
    b160:	add	w3, w19, #0x8
    b164:	tbz	w19, #31, b148 <appendstr@@Base+0x60>
    b168:	add	x2, x25, w19, sxtw
    b16c:	cmp	w3, #0x0
    b170:	mov	w19, w3
    b174:	b.gt	b148 <appendstr@@Base+0x60>
    b178:	ldr	x0, [x2]
    b17c:	cbnz	x0, b158 <appendstr@@Base+0x70>
    b180:	mov	x1, x22
    b184:	mov	x0, x24
    b188:	bl	a660 <xrealloc@plt>
    b18c:	mov	x21, x0
    b190:	add	x1, sp, #0xb0
    b194:	mov	w0, #0xffffffc8            	// #-56
    b198:	add	x20, x21, x20
    b19c:	stp	x1, x1, [sp, #80]
    b1a0:	str	x23, [sp, #96]
    b1a4:	stp	w0, wzr, [sp, #104]
    b1a8:	b	b1d4 <appendstr@@Base+0xec>
    b1ac:	and	x3, x3, #0xfffffffffffffff8
    b1b0:	str	x3, [sp, #80]
    b1b4:	ldr	x19, [x1]
    b1b8:	mov	x0, x20
    b1bc:	mov	x1, x19
    b1c0:	cbz	x19, b210 <appendstr@@Base+0x128>
    b1c4:	bl	ac40 <strcpy@plt>
    b1c8:	mov	x0, x19
    b1cc:	bl	a340 <strlen@plt>
    b1d0:	add	x20, x20, x0
    b1d4:	ldr	w2, [sp, #104]
    b1d8:	ldr	x1, [sp, #80]
    b1dc:	add	w0, w2, #0x8
    b1e0:	add	x3, x1, #0xf
    b1e4:	tbz	w2, #31, b1ac <appendstr@@Base+0xc4>
    b1e8:	str	w0, [sp, #104]
    b1ec:	add	x3, x1, #0xf
    b1f0:	cmp	w0, #0x0
    b1f4:	and	x3, x3, #0xfffffffffffffff8
    b1f8:	b.le	b22c <appendstr@@Base+0x144>
    b1fc:	ldr	x19, [x1]
    b200:	str	x3, [sp, #80]
    b204:	mov	x0, x20
    b208:	mov	x1, x19
    b20c:	cbnz	x19, b1c4 <appendstr@@Base+0xdc>
    b210:	mov	x0, x21
    b214:	ldp	x19, x20, [sp, #16]
    b218:	ldp	x21, x22, [sp, #32]
    b21c:	ldp	x23, x24, [sp, #48]
    b220:	ldr	x25, [sp, #64]
    b224:	ldp	x29, x30, [sp], #176
    b228:	ret
    b22c:	ldr	x1, [sp, #88]
    b230:	add	x1, x1, w2, sxtw
    b234:	b	b1b4 <appendstr@@Base+0xcc>
    b238:	mov	x22, #0x1                   	// #1
    b23c:	mov	x20, #0x0                   	// #0
    b240:	b	b124 <appendstr@@Base+0x3c>
    b244:	nop
    b248:	stp	x29, x30, [sp, #-192]!
    b24c:	mov	x29, sp
    b250:	add	x2, sp, #0x28
    b254:	stp	x19, x20, [sp, #16]
    b258:	mov	x20, x1
    b25c:	mov	w19, w0
    b260:	mov	x1, #0x0                   	// #0
    b264:	bl	a860 <sigaction@plt>
    b268:	cbnz	w0, b2a0 <appendstr@@Base+0x1b8>
    b26c:	ldr	x1, [sp, #40]
    b270:	adrp	x2, b000 <xgetcwd@plt>
    b274:	add	x2, x2, #0x3b0
    b278:	cmp	x1, x2
    b27c:	b.eq	b28c <appendstr@@Base+0x1a4>  // b.none
    b280:	ldp	x19, x20, [sp, #16]
    b284:	ldp	x29, x30, [sp], #192
    b288:	ret
    b28c:	mov	x1, x20
    b290:	mov	w0, w19
    b294:	mov	x2, #0x0                   	// #0
    b298:	bl	a860 <sigaction@plt>
    b29c:	b	b280 <appendstr@@Base+0x198>
    b2a0:	mov	w0, #0xffffffff            	// #-1
    b2a4:	b	b280 <appendstr@@Base+0x198>

000000000000b2a8 <do_cleanups_sigsafe@@Base>:
    b2a8:	stp	x29, x30, [sp, #-32]!
    b2ac:	adrp	x1, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b2b0:	mov	x29, sp
    b2b4:	stp	x19, x20, [sp, #16]
    b2b8:	add	x20, x1, #0x230
    b2bc:	ldr	w19, [x1, #560]
    b2c0:	ldr	w1, [x20, #4]
    b2c4:	cmp	w19, w1
    b2c8:	b.hi	b34c <do_cleanups_sigsafe@@Base+0xa4>  // b.pmore
    b2cc:	cbz	w19, b308 <do_cleanups_sigsafe@@Base+0x60>
    b2d0:	sub	w19, w19, #0x1
    b2d4:	cbz	w0, b314 <do_cleanups_sigsafe@@Base+0x6c>
    b2d8:	mov	w0, #0x18                  	// #24
    b2dc:	umull	x19, w19, w0
    b2e0:	ldr	x1, [x20, #8]
    b2e4:	add	x0, x1, x19
    b2e8:	ldr	w2, [x0, #16]
    b2ec:	cbz	w2, b2fc <do_cleanups_sigsafe@@Base+0x54>
    b2f0:	ldr	x1, [x1, x19]
    b2f4:	ldr	x0, [x0, #8]
    b2f8:	blr	x1
    b2fc:	sub	x19, x19, #0x18
    b300:	cmn	x19, #0x18
    b304:	b.ne	b2e0 <do_cleanups_sigsafe@@Base+0x38>  // b.any
    b308:	ldp	x19, x20, [sp, #16]
    b30c:	ldp	x29, x30, [sp], #32
    b310:	ret
    b314:	mov	w0, #0x18                  	// #24
    b318:	umull	x19, w19, w0
    b31c:	nop
    b320:	ldr	x0, [x20, #8]
    b324:	add	x2, x0, x19
    b328:	ldr	x1, [x0, x19]
    b32c:	sub	x19, x19, #0x18
    b330:	ldr	x0, [x2, #8]
    b334:	blr	x1
    b338:	cmn	x19, #0x18
    b33c:	b.ne	b320 <do_cleanups_sigsafe@@Base+0x78>  // b.any
    b340:	ldp	x19, x20, [sp, #16]
    b344:	ldp	x29, x30, [sp], #32
    b348:	ret
    b34c:	adrp	x3, 31000 <vasnprintf@@Base+0x848>
    b350:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    b354:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    b358:	add	x3, x3, #0x4a8
    b35c:	add	x1, x1, #0x470
    b360:	add	x0, x0, #0x480
    b364:	mov	w2, #0xa9                  	// #169
    b368:	bl	aea0 <__assert_fail@plt>
    b36c:	nop

000000000000b370 <do_cleanups@@Base>:
    b370:	stp	x29, x30, [sp, #-32]!
    b374:	mov	w0, #0x0                   	// #0
    b378:	mov	x29, sp
    b37c:	str	x19, [sp, #16]
    b380:	bl	abc0 <do_cleanups_sigsafe@plt>
    b384:	adrp	x0, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b388:	add	x19, x0, #0x230
    b38c:	str	wzr, [x0, #560]
    b390:	ldr	x0, [x19, #8]
    b394:	str	wzr, [x19, #4]
    b398:	bl	aa50 <free@plt>
    b39c:	str	xzr, [x19, #8]
    b3a0:	ldr	x19, [sp, #16]
    b3a4:	ldp	x29, x30, [sp], #32
    b3a8:	ret
    b3ac:	nop
    b3b0:	stp	x29, x30, [sp, #-320]!
    b3b4:	mov	x29, sp
    b3b8:	stp	x19, x20, [sp, #16]
    b3bc:	mov	w20, w0
    b3c0:	mov	w0, #0x1                   	// #1
    b3c4:	bl	abc0 <do_cleanups_sigsafe@plt>
    b3c8:	stp	xzr, xzr, [sp, #168]
    b3cc:	add	x1, sp, #0x200
    b3d0:	stp	xzr, xzr, [sp, #184]
    b3d4:	add	x19, sp, #0xa8
    b3d8:	add	x0, x19, #0x8
    b3dc:	stp	xzr, xzr, [sp, #200]
    b3e0:	stp	xzr, xzr, [sp, #216]
    b3e4:	stp	xzr, xzr, [sp, #232]
    b3e8:	stp	xzr, xzr, [sp, #248]
    b3ec:	stp	xzr, xzr, [x1, #-248]
    b3f0:	stp	xzr, xzr, [x1, #-232]
    b3f4:	stp	xzr, xzr, [x1, #-216]
    b3f8:	str	xzr, [sp, #312]
    b3fc:	bl	a690 <sigemptyset@plt>
    b400:	mov	x1, x19
    b404:	mov	w0, w20
    b408:	mov	x2, #0x0                   	// #0
    b40c:	str	wzr, [sp, #304]
    b410:	bl	a860 <sigaction@plt>
    b414:	cbnz	w0, b428 <do_cleanups@@Base+0xb8>
    b418:	add	x19, sp, #0x28
    b41c:	mov	x0, x19
    b420:	bl	a690 <sigemptyset@plt>
    b424:	cbz	w0, b430 <do_cleanups@@Base+0xc0>
    b428:	mov	w0, #0x2                   	// #2
    b42c:	bl	a2f0 <_exit@plt>
    b430:	mov	w1, w20
    b434:	mov	x0, x19
    b438:	bl	ae10 <sigaddset@plt>
    b43c:	cbnz	w0, b428 <do_cleanups@@Base+0xb8>
    b440:	mov	x1, x19
    b444:	mov	x2, #0x0                   	// #0
    b448:	mov	w0, #0x1                   	// #1
    b44c:	bl	a3d0 <sigprocmask@plt>
    b450:	cbnz	w0, b428 <do_cleanups@@Base+0xb8>
    b454:	bl	a5b0 <getpid@plt>
    b458:	mov	w1, w20
    b45c:	bl	a510 <kill@plt>
    b460:	bl	a900 <abort@plt>
    b464:	nop

000000000000b468 <push_cleanup@@Base>:
    b468:	stp	x29, x30, [sp, #-240]!
    b46c:	mov	x29, sp
    b470:	stp	x19, x20, [sp, #16]
    b474:	adrp	x20, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b478:	stp	x21, x22, [sp, #32]
    b47c:	add	x22, x20, #0x230
    b480:	ldr	w19, [x20, #560]
    b484:	stp	x23, x24, [sp, #48]
    b488:	ldr	w21, [x22, #4]
    b48c:	str	x25, [sp, #64]
    b490:	cmp	w19, w21
    b494:	b.hi	b704 <push_cleanup@@Base+0x29c>  // b.pmore
    b498:	mov	x25, x0
    b49c:	ldr	w0, [x22, #16]
    b4a0:	mov	x24, x1
    b4a4:	mov	w23, w2
    b4a8:	cbz	w0, b5ac <push_cleanup@@Base+0x144>
    b4ac:	cmp	w19, w21
    b4b0:	b.eq	b570 <push_cleanup@@Base+0x108>  // b.none
    b4b4:	cmp	w21, w19
    b4b8:	b.ls	b6e0 <push_cleanup@@Base+0x278>  // b.plast
    b4bc:	add	x21, x20, #0x230
    b4c0:	mov	w1, #0x18                  	// #24
    b4c4:	add	w0, w19, #0x1
    b4c8:	add	x22, x21, #0x18
    b4cc:	umull	x19, w19, w1
    b4d0:	str	w0, [x20, #560]
    b4d4:	ldr	x4, [x21, #8]
    b4d8:	mov	x2, x22
    b4dc:	mov	x1, #0x0                   	// #0
    b4e0:	mov	w0, #0x1                   	// #1
    b4e4:	add	x3, x4, x19
    b4e8:	str	x25, [x4, x19]
    b4ec:	str	x24, [x3, #8]
    b4f0:	str	w23, [x3, #16]
    b4f4:	bl	a860 <sigaction@plt>
    b4f8:	cbnz	w0, b550 <push_cleanup@@Base+0xe8>
    b4fc:	ldr	x0, [x21, #24]
    b500:	cbz	x0, b628 <push_cleanup@@Base+0x1c0>
    b504:	add	x19, x20, #0x230
    b508:	mov	x1, #0x0                   	// #0
    b50c:	add	x21, x19, #0xb0
    b510:	mov	w0, #0x2                   	// #2
    b514:	mov	x2, x21
    b518:	bl	a860 <sigaction@plt>
    b51c:	cbnz	w0, b550 <push_cleanup@@Base+0xe8>
    b520:	ldr	x0, [x19, #176]
    b524:	cbz	x0, b680 <push_cleanup@@Base+0x218>
    b528:	add	x20, x20, #0x230
    b52c:	mov	x1, #0x0                   	// #0
    b530:	add	x21, x20, #0x148
    b534:	mov	w0, #0xf                   	// #15
    b538:	mov	x2, x21
    b53c:	bl	a860 <sigaction@plt>
    b540:	mov	w19, w0
    b544:	cbnz	w0, b550 <push_cleanup@@Base+0xe8>
    b548:	ldr	x0, [x20, #328]
    b54c:	cbz	x0, b5c8 <push_cleanup@@Base+0x160>
    b550:	mov	w19, #0x0                   	// #0
    b554:	mov	w0, w19
    b558:	ldp	x19, x20, [sp, #16]
    b55c:	ldp	x21, x22, [sp, #32]
    b560:	ldp	x23, x24, [sp, #48]
    b564:	ldr	x25, [sp, #64]
    b568:	ldp	x29, x30, [sp], #240
    b56c:	ret
    b570:	add	x2, x20, #0x230
    b574:	add	w19, w19, #0x1
    b578:	mov	w1, #0x18                  	// #24
    b57c:	ldr	x0, [x2, #8]
    b580:	umull	x1, w19, w1
    b584:	cbz	x0, b61c <push_cleanup@@Base+0x1b4>
    b588:	bl	a660 <xrealloc@plt>
    b58c:	cbz	x0, b6d8 <push_cleanup@@Base+0x270>
    b590:	add	x1, x20, #0x230
    b594:	ldr	w19, [x20, #560]
    b598:	ldr	w21, [x1, #4]
    b59c:	str	x0, [x1, #8]
    b5a0:	add	w21, w21, #0x1
    b5a4:	str	w21, [x1, #4]
    b5a8:	b	b4b4 <push_cleanup@@Base+0x4c>
    b5ac:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
    b5b0:	ldr	x0, [x0, #3840]
    b5b4:	bl	31450 <vasnprintf@@Base+0xc98>
    b5b8:	cbnz	w0, b6d8 <push_cleanup@@Base+0x270>
    b5bc:	mov	w0, #0x1                   	// #1
    b5c0:	str	w0, [x22, #16]
    b5c4:	b	b4ac <push_cleanup@@Base+0x44>
    b5c8:	add	x0, sp, #0x60
    b5cc:	adrp	x1, b000 <xgetcwd@plt>
    b5d0:	add	x1, x1, #0x3b0
    b5d4:	str	x1, [sp, #88]
    b5d8:	stp	xzr, xzr, [sp, #96]
    b5dc:	add	x20, sp, #0x58
    b5e0:	stp	xzr, xzr, [x0, #16]
    b5e4:	stp	xzr, xzr, [x0, #32]
    b5e8:	stp	xzr, xzr, [x0, #48]
    b5ec:	stp	xzr, xzr, [x0, #64]
    b5f0:	stp	xzr, xzr, [x0, #80]
    b5f4:	stp	xzr, xzr, [x0, #96]
    b5f8:	stp	xzr, xzr, [x0, #112]
    b5fc:	stp	xzr, xzr, [x0, #128]
    b600:	bl	a690 <sigemptyset@plt>
    b604:	str	wzr, [sp, #224]
    b608:	mov	x1, x20
    b60c:	mov	x2, x21
    b610:	mov	w0, #0xf                   	// #15
    b614:	bl	a860 <sigaction@plt>
    b618:	b	b554 <push_cleanup@@Base+0xec>
    b61c:	mov	x0, x1
    b620:	bl	a710 <xmalloc@plt>
    b624:	b	b58c <push_cleanup@@Base+0x124>
    b628:	add	x0, sp, #0x60
    b62c:	adrp	x1, b000 <xgetcwd@plt>
    b630:	add	x1, x1, #0x3b0
    b634:	str	x1, [sp, #88]
    b638:	stp	xzr, xzr, [sp, #96]
    b63c:	add	x19, sp, #0x58
    b640:	stp	xzr, xzr, [x0, #16]
    b644:	stp	xzr, xzr, [x0, #32]
    b648:	stp	xzr, xzr, [x0, #48]
    b64c:	stp	xzr, xzr, [x0, #64]
    b650:	stp	xzr, xzr, [x0, #80]
    b654:	stp	xzr, xzr, [x0, #96]
    b658:	stp	xzr, xzr, [x0, #112]
    b65c:	stp	xzr, xzr, [x0, #128]
    b660:	bl	a690 <sigemptyset@plt>
    b664:	str	wzr, [sp, #224]
    b668:	mov	x1, x19
    b66c:	mov	x2, x22
    b670:	mov	w0, #0x1                   	// #1
    b674:	bl	a860 <sigaction@plt>
    b678:	cbz	w0, b504 <push_cleanup@@Base+0x9c>
    b67c:	b	b550 <push_cleanup@@Base+0xe8>
    b680:	add	x0, sp, #0x60
    b684:	adrp	x1, b000 <xgetcwd@plt>
    b688:	add	x1, x1, #0x3b0
    b68c:	str	x1, [sp, #88]
    b690:	stp	xzr, xzr, [sp, #96]
    b694:	add	x19, sp, #0x58
    b698:	stp	xzr, xzr, [x0, #16]
    b69c:	stp	xzr, xzr, [x0, #32]
    b6a0:	stp	xzr, xzr, [x0, #48]
    b6a4:	stp	xzr, xzr, [x0, #64]
    b6a8:	stp	xzr, xzr, [x0, #80]
    b6ac:	stp	xzr, xzr, [x0, #96]
    b6b0:	stp	xzr, xzr, [x0, #112]
    b6b4:	stp	xzr, xzr, [x0, #128]
    b6b8:	bl	a690 <sigemptyset@plt>
    b6bc:	str	wzr, [sp, #224]
    b6c0:	mov	x1, x19
    b6c4:	mov	x2, x21
    b6c8:	mov	w0, #0x2                   	// #2
    b6cc:	bl	a860 <sigaction@plt>
    b6d0:	cbz	w0, b528 <push_cleanup@@Base+0xc0>
    b6d4:	b	b550 <push_cleanup@@Base+0xe8>
    b6d8:	mov	w19, #0xffffffff            	// #-1
    b6dc:	b	b554 <push_cleanup@@Base+0xec>
    b6e0:	adrp	x3, 31000 <vasnprintf@@Base+0x848>
    b6e4:	add	x3, x3, #0x4a8
    b6e8:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    b6ec:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    b6f0:	add	x3, x3, #0x18
    b6f4:	add	x1, x1, #0x470
    b6f8:	add	x0, x0, #0x490
    b6fc:	mov	w2, #0xe0                  	// #224
    b700:	bl	aea0 <__assert_fail@plt>
    b704:	adrp	x3, 31000 <vasnprintf@@Base+0x848>
    b708:	add	x3, x3, #0x4a8
    b70c:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    b710:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    b714:	add	x3, x3, #0x18
    b718:	add	x1, x1, #0x470
    b71c:	add	x0, x0, #0x480
    b720:	mov	w2, #0xc8                  	// #200
    b724:	bl	aea0 <__assert_fail@plt>

000000000000b728 <pop_cleanup@@Base>:
    b728:	stp	x29, x30, [sp, #-32]!
    b72c:	adrp	x6, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b730:	mov	x29, sp
    b734:	ldr	w8, [x6, #560]
    b738:	cbz	w8, b808 <pop_cleanup@@Base+0xe0>
    b73c:	add	x2, x6, #0x230
    b740:	sub	w7, w8, #0x1
    b744:	mov	w3, #0x18                  	// #24
    b748:	ldr	x9, [x2, #8]
    b74c:	mov	w2, w8
    b750:	umaddl	x3, w7, w3, x9
    b754:	b	b760 <pop_cleanup@@Base+0x38>
    b758:	sub	x3, x3, #0x18
    b75c:	cbz	w2, b800 <pop_cleanup@@Base+0xd8>
    b760:	ldr	x4, [x3]
    b764:	mov	w5, w2
    b768:	sub	w2, w2, #0x1
    b76c:	cmp	x4, x0
    b770:	b.ne	b758 <pop_cleanup@@Base+0x30>  // b.any
    b774:	ldr	x4, [x3, #8]
    b778:	cmp	x4, x1
    b77c:	b.ne	b758 <pop_cleanup@@Base+0x30>  // b.any
    b780:	str	x19, [sp, #16]
    b784:	cmp	w8, w5
    b788:	b.ls	b7c4 <pop_cleanup@@Base+0x9c>  // b.plast
    b78c:	mov	w1, #0x18                  	// #24
    b790:	sub	w0, w5, #0x1
    b794:	mov	w4, w1
    b798:	umaddl	x5, w5, w1, x9
    b79c:	nop
    b7a0:	umaddl	x1, w0, w4, x9
    b7a4:	add	w0, w0, #0x1
    b7a8:	ldp	x2, x3, [x5]
    b7ac:	cmp	w7, w0
    b7b0:	add	x5, x5, #0x18
    b7b4:	stp	x2, x3, [x1]
    b7b8:	ldur	x2, [x5, #-8]
    b7bc:	str	x2, [x1, #16]
    b7c0:	b.ne	b7a0 <pop_cleanup@@Base+0x78>  // b.any
    b7c4:	str	w7, [x6, #560]
    b7c8:	add	x19, x6, #0x230
    b7cc:	cbnz	w7, b7fc <pop_cleanup@@Base+0xd4>
    b7d0:	add	x1, x19, #0x18
    b7d4:	mov	w0, #0x1                   	// #1
    b7d8:	bl	b248 <appendstr@@Base+0x160>
    b7dc:	add	x1, x19, #0xb0
    b7e0:	mov	w0, #0x2                   	// #2
    b7e4:	bl	b248 <appendstr@@Base+0x160>
    b7e8:	add	x1, x19, #0x148
    b7ec:	mov	w0, #0xf                   	// #15
    b7f0:	ldr	x19, [sp, #16]
    b7f4:	ldp	x29, x30, [sp], #32
    b7f8:	b	b248 <appendstr@@Base+0x160>
    b7fc:	ldr	x19, [sp, #16]
    b800:	ldp	x29, x30, [sp], #32
    b804:	ret
    b808:	adrp	x3, 31000 <vasnprintf@@Base+0x848>
    b80c:	add	x3, x3, #0x4a8
    b810:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    b814:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    b818:	add	x3, x3, #0x28
    b81c:	add	x1, x1, #0x470
    b820:	add	x0, x0, #0x4a0
    b824:	mov	w2, #0xf5                  	// #245
    b828:	str	x19, [sp, #16]
    b82c:	bl	aea0 <__assert_fail@plt>

000000000000b830 <pop_all_cleanups@@Base>:
    b830:	stp	x29, x30, [sp, #-32]!
    b834:	adrp	x2, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b838:	mov	w0, #0x1                   	// #1
    b83c:	mov	x29, sp
    b840:	str	x19, [sp, #16]
    b844:	add	x19, x2, #0x230
    b848:	add	x1, x19, #0x18
    b84c:	str	wzr, [x2, #560]
    b850:	bl	b248 <appendstr@@Base+0x160>
    b854:	add	x1, x19, #0xb0
    b858:	mov	w0, #0x2                   	// #2
    b85c:	bl	b248 <appendstr@@Base+0x160>
    b860:	add	x1, x19, #0x148
    b864:	mov	w0, #0xf                   	// #15
    b868:	ldr	x19, [sp, #16]
    b86c:	ldp	x29, x30, [sp], #32
    b870:	b	b248 <appendstr@@Base+0x160>
    b874:	nop

000000000000b878 <init_debug@@Base>:
    b878:	stp	x29, x30, [sp, #-16]!
    b87c:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    b880:	add	x0, x0, #0x4e0
    b884:	mov	x29, sp
    b888:	bl	aed0 <getenv@plt>
    b88c:	cbz	x0, b8b4 <init_debug@@Base+0x3c>
    b890:	ldrb	w1, [x0]
    b894:	cmp	w1, #0x31
    b898:	b.ne	b8b4 <init_debug@@Base+0x3c>  // b.any
    b89c:	ldrb	w0, [x0, #1]
    b8a0:	cbnz	w0, b8b4 <init_debug@@Base+0x3c>
    b8a4:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
    b8a8:	mov	w1, #0x1                   	// #1
    b8ac:	ldr	x0, [x0, #3808]
    b8b0:	strb	w1, [x0]
    b8b4:	ldp	x29, x30, [sp], #16
    b8b8:	ret
    b8bc:	nop

000000000000b8c0 <debug@@Base>:
    b8c0:	stp	x29, x30, [sp, #-304]!
    b8c4:	adrp	x8, 4c000 <vasnprintf@@Base+0x1b848>
    b8c8:	mov	x29, sp
    b8cc:	ldr	x8, [x8, #3808]
    b8d0:	str	q0, [sp, #112]
    b8d4:	str	q1, [sp, #128]
    b8d8:	str	q2, [sp, #144]
    b8dc:	ldrb	w8, [x8]
    b8e0:	str	q3, [sp, #160]
    b8e4:	str	q4, [sp, #176]
    b8e8:	str	q5, [sp, #192]
    b8ec:	str	q6, [sp, #208]
    b8f0:	str	q7, [sp, #224]
    b8f4:	stp	x1, x2, [sp, #248]
    b8f8:	stp	x3, x4, [sp, #264]
    b8fc:	stp	x5, x6, [sp, #280]
    b900:	str	x7, [sp, #296]
    b904:	cbnz	w8, b910 <debug@@Base+0x50>
    b908:	ldp	x29, x30, [sp], #304
    b90c:	ret
    b910:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
    b914:	add	x2, sp, #0xf0
    b918:	add	x1, sp, #0x130
    b91c:	mov	w5, #0xffffffc8            	// #-56
    b920:	ldr	x3, [x3, #3816]
    b924:	mov	w4, #0xffffff80            	// #-128
    b928:	stp	x1, x1, [sp, #48]
    b92c:	mov	x1, x0
    b930:	str	x2, [sp, #64]
    b934:	add	x2, sp, #0x10
    b938:	stp	w5, w4, [sp, #72]
    b93c:	ldp	x6, x7, [sp, #48]
    b940:	stp	x6, x7, [sp, #80]
    b944:	ldp	x4, x5, [sp, #64]
    b948:	stp	x4, x5, [sp, #96]
    b94c:	ldr	x0, [x3]
    b950:	stp	x6, x7, [sp, #16]
    b954:	stp	x4, x5, [sp, #32]
    b958:	bl	ae80 <vfprintf@plt>
    b95c:	ldp	x29, x30, [sp], #304
    b960:	ret
    b964:	nop

000000000000b968 <debug_error@@Base>:
    b968:	stp	x29, x30, [sp, #-304]!
    b96c:	adrp	x8, 4c000 <vasnprintf@@Base+0x1b848>
    b970:	mov	x29, sp
    b974:	ldr	x8, [x8, #3808]
    b978:	str	q0, [sp, #112]
    b97c:	str	q1, [sp, #128]
    b980:	str	q2, [sp, #144]
    b984:	ldrb	w8, [x8]
    b988:	str	q3, [sp, #160]
    b98c:	str	q4, [sp, #176]
    b990:	str	q5, [sp, #192]
    b994:	str	q6, [sp, #208]
    b998:	str	q7, [sp, #224]
    b99c:	stp	x1, x2, [sp, #248]
    b9a0:	stp	x3, x4, [sp, #264]
    b9a4:	stp	x5, x6, [sp, #280]
    b9a8:	str	x7, [sp, #296]
    b9ac:	cbnz	w8, b9b8 <debug_error@@Base+0x50>
    b9b0:	ldp	x29, x30, [sp], #304
    b9b4:	ret
    b9b8:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
    b9bc:	add	x2, sp, #0xf0
    b9c0:	add	x1, sp, #0x130
    b9c4:	mov	w5, #0xffffffc8            	// #-56
    b9c8:	ldr	x3, [x3, #3816]
    b9cc:	mov	w4, #0xffffff80            	// #-128
    b9d0:	stp	x1, x1, [sp, #48]
    b9d4:	mov	x1, x0
    b9d8:	str	x2, [sp, #64]
    b9dc:	add	x2, sp, #0x10
    b9e0:	stp	w5, w4, [sp, #72]
    b9e4:	ldp	x6, x7, [sp, #48]
    b9e8:	stp	x6, x7, [sp, #80]
    b9ec:	ldp	x4, x5, [sp, #64]
    b9f0:	stp	x4, x5, [sp, #96]
    b9f4:	ldr	x0, [x3]
    b9f8:	stp	x6, x7, [sp, #16]
    b9fc:	stp	x4, x5, [sp, #32]
    ba00:	bl	ae80 <vfprintf@plt>
    ba04:	bl	aeb0 <__errno_location@plt>
    ba08:	ldr	w0, [x0]
    ba0c:	bl	a830 <strerror@plt>
    ba10:	mov	x1, x0
    ba14:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    ba18:	add	x0, x0, #0x4f0
    ba1c:	bl	a570 <debug@plt>
    ba20:	ldp	x29, x30, [sp], #304
    ba24:	ret

000000000000ba28 <get_groff_preconv@@Base>:
    ba28:	stp	x29, x30, [sp, #-48]!
    ba2c:	mov	x29, sp
    ba30:	stp	x19, x20, [sp, #16]
    ba34:	adrp	x20, 4c000 <vasnprintf@@Base+0x1b848>
    ba38:	ldr	x20, [x20, #3832]
    ba3c:	ldr	x19, [x20]
    ba40:	cbz	x19, ba60 <get_groff_preconv@@Base+0x38>
    ba44:	ldrb	w0, [x19]
    ba48:	cmp	w0, #0x0
    ba4c:	csel	x19, x19, xzr, ne  // ne = any
    ba50:	mov	x0, x19
    ba54:	ldp	x19, x20, [sp, #16]
    ba58:	ldp	x29, x30, [sp], #48
    ba5c:	ret
    ba60:	str	x21, [sp, #32]
    ba64:	adrp	x21, 31000 <vasnprintf@@Base+0x848>
    ba68:	add	x21, x21, #0x500
    ba6c:	mov	x0, x21
    ba70:	bl	ae20 <pathsearch_executable@plt>
    ba74:	tst	w0, #0xff
    ba78:	b.eq	ba98 <get_groff_preconv@@Base+0x70>  // b.none
    ba7c:	str	x21, [x20]
    ba80:	mov	x19, x21
    ba84:	mov	x0, x19
    ba88:	ldp	x19, x20, [sp, #16]
    ba8c:	ldr	x21, [sp, #32]
    ba90:	ldp	x29, x30, [sp], #48
    ba94:	ret
    ba98:	adrp	x21, 31000 <vasnprintf@@Base+0x848>
    ba9c:	add	x21, x21, #0x4f8
    baa0:	mov	x0, x21
    baa4:	bl	ae20 <pathsearch_executable@plt>
    baa8:	tst	w0, #0xff
    baac:	b.ne	ba7c <get_groff_preconv@@Base+0x54>  // b.any
    bab0:	adrp	x0, 33000 <vasnprintf@@Base+0x2848>
    bab4:	add	x0, x0, #0xff0
    bab8:	ldr	x21, [sp, #32]
    babc:	str	x0, [x20]
    bac0:	b	ba50 <get_groff_preconv@@Base+0x28>
    bac4:	nop

000000000000bac8 <get_source_encoding@@Base>:
    bac8:	stp	x29, x30, [sp, #-48]!
    bacc:	mov	x29, sp
    bad0:	str	x21, [sp, #32]
    bad4:	cbz	x0, bb34 <get_source_encoding@@Base+0x6c>
    bad8:	mov	x21, x0
    badc:	ldrb	w0, [x0]
    bae0:	cbz	w0, bb34 <get_source_encoding@@Base+0x6c>
    bae4:	adrp	x0, 4d000 <base_len@@Base+0x38058>
    bae8:	stp	x19, x20, [sp, #16]
    baec:	add	x20, x0, #0x6d0
    baf0:	ldr	x19, [x0, #1744]
    baf4:	cbnz	x19, bb04 <get_source_encoding@@Base+0x3c>
    baf8:	b	bb5c <get_source_encoding@@Base+0x94>
    bafc:	ldr	x19, [x20, #16]!
    bb00:	cbz	x19, bb5c <get_source_encoding@@Base+0x94>
    bb04:	mov	x0, x19
    bb08:	bl	a340 <strlen@plt>
    bb0c:	mov	x1, x21
    bb10:	mov	x2, x0
    bb14:	mov	x0, x19
    bb18:	bl	a6c0 <strncmp@plt>
    bb1c:	cbnz	w0, bafc <get_source_encoding@@Base+0x34>
    bb20:	ldr	x0, [x20, #8]
    bb24:	ldp	x19, x20, [sp, #16]
    bb28:	ldr	x21, [sp, #32]
    bb2c:	ldp	x29, x30, [sp], #48
    bb30:	ret
    bb34:	mov	x1, #0x0                   	// #0
    bb38:	mov	w0, #0x5                   	// #5
    bb3c:	bl	afd0 <setlocale@plt>
    bb40:	mov	x21, x0
    bb44:	cbnz	x0, bae4 <get_source_encoding@@Base+0x1c>
    bb48:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    bb4c:	add	x0, x0, #0xe58
    bb50:	ldr	x21, [sp, #32]
    bb54:	ldp	x29, x30, [sp], #48
    bb58:	ret
    bb5c:	ldp	x19, x20, [sp, #16]
    bb60:	b	bb48 <get_source_encoding@@Base+0x80>
    bb64:	nop

000000000000bb68 <get_canonical_charset_name@@Base>:
    bb68:	stp	x29, x30, [sp, #-48]!
    bb6c:	mov	x29, sp
    bb70:	stp	x19, x20, [sp, #16]
    bb74:	str	x21, [sp, #32]
    bb78:	mov	x21, x0
    bb7c:	bl	a730 <xstrdup@plt>
    bb80:	ldrb	w19, [x0]
    bb84:	mov	x20, x0
    bb88:	cbz	w19, bba8 <get_canonical_charset_name@@Base+0x40>
    bb8c:	bl	a7f0 <__ctype_toupper_loc@plt>
    bb90:	ldr	x0, [x0]
    bb94:	mov	x2, x20
    bb98:	ldr	w3, [x0, x19, lsl #2]
    bb9c:	strb	w3, [x2]
    bba0:	ldrb	w19, [x2, #1]!
    bba4:	cbnz	w19, bb98 <get_canonical_charset_name@@Base+0x30>
    bba8:	adrp	x0, 4d000 <base_len@@Base+0x38058>
    bbac:	add	x0, x0, #0x6d0
    bbb0:	add	x19, x0, #0x2e0
    bbb4:	ldr	x0, [x0, #736]
    bbb8:	cbnz	x0, bbc8 <get_canonical_charset_name@@Base+0x60>
    bbbc:	b	bbf0 <get_canonical_charset_name@@Base+0x88>
    bbc0:	ldr	x0, [x19, #16]!
    bbc4:	cbz	x0, bbf0 <get_canonical_charset_name@@Base+0x88>
    bbc8:	mov	x1, x20
    bbcc:	bl	a9b0 <strcmp@plt>
    bbd0:	cbnz	w0, bbc0 <get_canonical_charset_name@@Base+0x58>
    bbd4:	mov	x0, x20
    bbd8:	bl	aa50 <free@plt>
    bbdc:	ldr	x0, [x19, #8]
    bbe0:	ldp	x19, x20, [sp, #16]
    bbe4:	ldr	x21, [sp, #32]
    bbe8:	ldp	x29, x30, [sp], #48
    bbec:	ret
    bbf0:	mov	x0, x20
    bbf4:	bl	aa50 <free@plt>
    bbf8:	mov	x0, x21
    bbfc:	ldp	x19, x20, [sp, #16]
    bc00:	ldr	x21, [sp, #32]
    bc04:	ldp	x29, x30, [sp], #48
    bc08:	ret
    bc0c:	nop

000000000000bc10 <get_page_encoding@@Base>:
    bc10:	stp	x29, x30, [sp, #-48]!
    bc14:	mov	x29, sp
    bc18:	stp	x19, x20, [sp, #16]
    bc1c:	cbz	x0, bc8c <get_page_encoding@@Base+0x7c>
    bc20:	mov	x20, x0
    bc24:	ldrb	w0, [x0]
    bc28:	cbz	w0, bc8c <get_page_encoding@@Base+0x7c>
    bc2c:	mov	x0, x20
    bc30:	mov	w1, #0x2e                  	// #46
    bc34:	bl	ab60 <strchr@plt>
    bc38:	cbnz	x0, bcb4 <get_page_encoding@@Base+0xa4>
    bc3c:	adrp	x0, 4d000 <base_len@@Base+0x38058>
    bc40:	str	x21, [sp, #32]
    bc44:	add	x21, x0, #0x6d0
    bc48:	ldr	x19, [x0, #1744]
    bc4c:	cbnz	x19, bc5c <get_page_encoding@@Base+0x4c>
    bc50:	b	bcfc <get_page_encoding@@Base+0xec>
    bc54:	ldr	x19, [x21, #16]!
    bc58:	cbz	x19, bcfc <get_page_encoding@@Base+0xec>
    bc5c:	mov	x0, x19
    bc60:	bl	a340 <strlen@plt>
    bc64:	mov	x1, x20
    bc68:	mov	x2, x0
    bc6c:	mov	x0, x19
    bc70:	bl	a6c0 <strncmp@plt>
    bc74:	cbnz	w0, bc54 <get_page_encoding@@Base+0x44>
    bc78:	ldr	x0, [x21, #8]
    bc7c:	ldp	x19, x20, [sp, #16]
    bc80:	ldr	x21, [sp, #32]
    bc84:	ldp	x29, x30, [sp], #48
    bc88:	b	a730 <xstrdup@plt>
    bc8c:	mov	x1, #0x0                   	// #0
    bc90:	mov	w0, #0x5                   	// #5
    bc94:	bl	afd0 <setlocale@plt>
    bc98:	mov	x20, x0
    bc9c:	cbnz	x0, bc2c <get_page_encoding@@Base+0x1c>
    bca0:	ldp	x19, x20, [sp, #16]
    bca4:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    bca8:	ldp	x29, x30, [sp], #48
    bcac:	add	x0, x0, #0xe58
    bcb0:	b	a730 <xstrdup@plt>
    bcb4:	add	x19, x0, #0x1
    bcb8:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    bcbc:	add	x1, x1, #0x510
    bcc0:	mov	x0, x19
    bcc4:	bl	ae60 <strcspn@plt>
    bcc8:	mov	x1, x0
    bccc:	mov	x0, x19
    bcd0:	bl	acf0 <xstrndup@plt>
    bcd4:	mov	x20, x0
    bcd8:	bl	a330 <get_canonical_charset_name@plt>
    bcdc:	bl	a730 <xstrdup@plt>
    bce0:	mov	x19, x0
    bce4:	mov	x0, x20
    bce8:	bl	aa50 <free@plt>
    bcec:	mov	x0, x19
    bcf0:	ldp	x19, x20, [sp, #16]
    bcf4:	ldp	x29, x30, [sp], #48
    bcf8:	ret
    bcfc:	ldp	x19, x20, [sp, #16]
    bd00:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    bd04:	ldr	x21, [sp, #32]
    bd08:	add	x0, x0, #0xe58
    bd0c:	ldp	x29, x30, [sp], #48
    bd10:	b	a730 <xstrdup@plt>
    bd14:	nop

000000000000bd18 <get_locale_charset@@Base>:
    bd18:	stp	x29, x30, [sp, #-32]!
    bd1c:	mov	x1, #0x0                   	// #0
    bd20:	mov	w0, #0x0                   	// #0
    bd24:	mov	x29, sp
    bd28:	stp	x19, x20, [sp, #16]
    bd2c:	bl	afd0 <setlocale@plt>
    bd30:	mov	x19, x0
    bd34:	cbz	x0, bd40 <get_locale_charset@@Base+0x28>
    bd38:	bl	a730 <xstrdup@plt>
    bd3c:	mov	x19, x0
    bd40:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
    bd44:	add	x1, x1, #0xff0
    bd48:	mov	w0, #0x0                   	// #0
    bd4c:	bl	afd0 <setlocale@plt>
    bd50:	bl	aee0 <locale_charset@plt>
    bd54:	mov	x20, x0
    bd58:	mov	x1, x19
    bd5c:	mov	w0, #0x0                   	// #0
    bd60:	bl	afd0 <setlocale@plt>
    bd64:	mov	x0, x19
    bd68:	bl	aa50 <free@plt>
    bd6c:	cbz	x20, bd88 <get_locale_charset@@Base+0x70>
    bd70:	ldrb	w0, [x20]
    bd74:	cbz	w0, bd88 <get_locale_charset@@Base+0x70>
    bd78:	mov	x0, x20
    bd7c:	ldp	x19, x20, [sp, #16]
    bd80:	ldp	x29, x30, [sp], #32
    bd84:	b	a330 <get_canonical_charset_name@plt>
    bd88:	mov	x0, #0x0                   	// #0
    bd8c:	ldp	x19, x20, [sp, #16]
    bd90:	ldp	x29, x30, [sp], #32
    bd94:	ret

000000000000bd98 <find_charset_locale@@Base>:
    bd98:	stp	x29, x30, [sp, #-128]!
    bd9c:	mov	x29, sp
    bda0:	stp	x19, x20, [sp, #16]
    bda4:	mov	x19, x0
    bda8:	stp	x21, x22, [sp, #32]
    bdac:	bl	a330 <get_canonical_charset_name@plt>
    bdb0:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    bdb4:	add	x1, x1, #0x538
    bdb8:	mov	x22, x0
    bdbc:	stp	xzr, xzr, [sp, #80]
    bdc0:	ldp	x2, x3, [x1]
    bdc4:	stp	x2, x3, [sp, #96]
    bdc8:	ldrh	w0, [x1, #24]
    bdcc:	ldr	x1, [x1, #16]
    bdd0:	str	x1, [sp, #112]
    bdd4:	strh	w0, [sp, #120]
    bdd8:	bl	ade0 <get_locale_charset@plt>
    bddc:	mov	x1, x0
    bde0:	mov	x0, x19
    bde4:	mov	x19, #0x0                   	// #0
    bde8:	bl	a9b0 <strcmp@plt>
    bdec:	cbz	w0, bf1c <find_charset_locale@@Base+0x184>
    bdf0:	mov	x1, #0x0                   	// #0
    bdf4:	mov	w0, #0x0                   	// #0
    bdf8:	str	x25, [sp, #64]
    bdfc:	bl	afd0 <setlocale@plt>
    be00:	mov	x25, x0
    be04:	cbz	x0, be10 <find_charset_locale@@Base+0x78>
    be08:	bl	a730 <xstrdup@plt>
    be0c:	mov	x25, x0
    be10:	add	x0, sp, #0x60
    be14:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    be18:	add	x1, x1, #0xf20
    be1c:	bl	a5d0 <fopen@plt>
    be20:	mov	x21, x0
    be24:	cbz	x0, bf30 <find_charset_locale@@Base+0x198>
    be28:	stp	x23, x24, [sp, #48]
    be2c:	add	x24, sp, #0x58
    be30:	add	x23, sp, #0x50
    be34:	b	bec0 <find_charset_locale@@Base+0x128>
    be38:	ldr	x20, [sp, #80]
    be3c:	mov	x0, x20
    be40:	bl	ab60 <strchr@plt>
    be44:	mov	x19, x0
    be48:	cbz	x0, beb4 <find_charset_locale@@Base+0x11c>
    be4c:	add	x0, x0, #0x1
    be50:	bl	a730 <xstrdup@plt>
    be54:	mov	w1, #0xa                   	// #10
    be58:	mov	x20, x0
    be5c:	bl	ab60 <strchr@plt>
    be60:	cbz	x0, be68 <find_charset_locale@@Base+0xd0>
    be64:	strb	wzr, [x0]
    be68:	mov	x0, x20
    be6c:	bl	a330 <get_canonical_charset_name@plt>
    be70:	mov	x1, x0
    be74:	mov	x0, x22
    be78:	bl	a9b0 <strcmp@plt>
    be7c:	cbnz	w0, bea8 <find_charset_locale@@Base+0x110>
    be80:	ldr	x0, [sp, #80]
    be84:	sub	x1, x19, x0
    be88:	bl	acf0 <xstrndup@plt>
    be8c:	mov	x19, x0
    be90:	mov	x1, x19
    be94:	mov	w0, #0x0                   	// #0
    be98:	bl	afd0 <setlocale@plt>
    be9c:	cbnz	x0, c050 <find_charset_locale@@Base+0x2b8>
    bea0:	mov	x0, x19
    bea4:	bl	aa50 <free@plt>
    bea8:	mov	x0, x20
    beac:	bl	aa50 <free@plt>
    beb0:	ldr	x20, [sp, #80]
    beb4:	mov	x0, x20
    beb8:	bl	aa50 <free@plt>
    bebc:	str	xzr, [sp, #80]
    bec0:	mov	x1, x24
    bec4:	mov	x3, x21
    bec8:	mov	x0, x23
    becc:	mov	w2, #0xa                   	// #10
    bed0:	bl	af10 <__getdelim@plt>
    bed4:	mov	w1, #0x20                  	// #32
    bed8:	tbz	x0, #63, be38 <find_charset_locale@@Base+0xa0>
    bedc:	mov	x0, x22
    bee0:	bl	a340 <strlen@plt>
    bee4:	cmp	x0, #0x4
    bee8:	b.hi	bfb8 <find_charset_locale@@Base+0x220>  // b.pmore
    beec:	ldr	x0, [sp, #80]
    bef0:	mov	x19, #0x0                   	// #0
    bef4:	bl	aa50 <free@plt>
    bef8:	mov	x1, x25
    befc:	mov	w0, #0x0                   	// #0
    bf00:	bl	afd0 <setlocale@plt>
    bf04:	mov	x0, x25
    bf08:	bl	aa50 <free@plt>
    bf0c:	ldp	x23, x24, [sp, #48]
    bf10:	mov	x0, x21
    bf14:	bl	a590 <fclose@plt>
    bf18:	ldr	x25, [sp, #64]
    bf1c:	mov	x0, x19
    bf20:	ldp	x19, x20, [sp, #16]
    bf24:	ldp	x21, x22, [sp, #32]
    bf28:	ldp	x29, x30, [sp], #128
    bf2c:	ret
    bf30:	mov	x0, x22
    bf34:	bl	a340 <strlen@plt>
    bf38:	cmp	x0, #0x4
    bf3c:	b.ls	bf80 <find_charset_locale@@Base+0x1e8>  // b.plast
    bf40:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    bf44:	mov	x0, x22
    bf48:	add	x1, x1, #0x518
    bf4c:	mov	x2, #0x5                   	// #5
    bf50:	bl	a6c0 <strncmp@plt>
    bf54:	cbnz	w0, bf80 <find_charset_locale@@Base+0x1e8>
    bf58:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    bf5c:	add	x0, x0, #0x520
    bf60:	bl	a730 <xstrdup@plt>
    bf64:	mov	x19, x0
    bf68:	mov	x1, x19
    bf6c:	mov	w0, #0x0                   	// #0
    bf70:	bl	afd0 <setlocale@plt>
    bf74:	cbz	x0, c060 <find_charset_locale@@Base+0x2c8>
    bf78:	ldr	x0, [sp, #80]
    bf7c:	b	bf88 <find_charset_locale@@Base+0x1f0>
    bf80:	ldr	x0, [sp, #80]
    bf84:	mov	x19, #0x0                   	// #0
    bf88:	bl	aa50 <free@plt>
    bf8c:	mov	x1, x25
    bf90:	mov	w0, #0x0                   	// #0
    bf94:	bl	afd0 <setlocale@plt>
    bf98:	mov	x0, x25
    bf9c:	bl	aa50 <free@plt>
    bfa0:	mov	x0, x19
    bfa4:	ldp	x19, x20, [sp, #16]
    bfa8:	ldp	x21, x22, [sp, #32]
    bfac:	ldr	x25, [sp, #64]
    bfb0:	ldp	x29, x30, [sp], #128
    bfb4:	ret
    bfb8:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    bfbc:	mov	x0, x22
    bfc0:	add	x1, x1, #0x518
    bfc4:	mov	x2, #0x5                   	// #5
    bfc8:	bl	a6c0 <strncmp@plt>
    bfcc:	cbnz	w0, beec <find_charset_locale@@Base+0x154>
    bfd0:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    bfd4:	add	x0, x0, #0x520
    bfd8:	bl	a730 <xstrdup@plt>
    bfdc:	mov	x19, x0
    bfe0:	mov	x1, x19
    bfe4:	mov	w0, #0x0                   	// #0
    bfe8:	bl	afd0 <setlocale@plt>
    bfec:	cbnz	x0, c058 <find_charset_locale@@Base+0x2c0>
    bff0:	mov	x0, x19
    bff4:	bl	aa50 <free@plt>
    bff8:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    bffc:	add	x0, x0, #0x528
    c000:	bl	a730 <xstrdup@plt>
    c004:	mov	x19, x0
    c008:	mov	x1, x19
    c00c:	mov	w0, #0x0                   	// #0
    c010:	bl	afd0 <setlocale@plt>
    c014:	cbnz	x0, c058 <find_charset_locale@@Base+0x2c0>
    c018:	ldp	x23, x24, [sp, #48]
    c01c:	mov	x0, x19
    c020:	bl	aa50 <free@plt>
    c024:	mov	x19, #0x0                   	// #0
    c028:	ldr	x0, [sp, #80]
    c02c:	bl	aa50 <free@plt>
    c030:	mov	x1, x25
    c034:	mov	w0, #0x0                   	// #0
    c038:	bl	afd0 <setlocale@plt>
    c03c:	mov	x0, x25
    c040:	bl	aa50 <free@plt>
    c044:	cbnz	x21, bf10 <find_charset_locale@@Base+0x178>
    c048:	ldr	x25, [sp, #64]
    c04c:	b	bf1c <find_charset_locale@@Base+0x184>
    c050:	mov	x0, x20
    c054:	bl	aa50 <free@plt>
    c058:	ldr	x0, [sp, #80]
    c05c:	b	bef4 <find_charset_locale@@Base+0x15c>
    c060:	mov	x0, x19
    c064:	bl	aa50 <free@plt>
    c068:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    c06c:	add	x0, x0, #0x528
    c070:	bl	a730 <xstrdup@plt>
    c074:	mov	x19, x0
    c078:	mov	x1, x19
    c07c:	mov	w0, #0x0                   	// #0
    c080:	bl	afd0 <setlocale@plt>
    c084:	cbz	x0, c01c <find_charset_locale@@Base+0x284>
    c088:	ldr	x0, [sp, #80]
    c08c:	b	bf88 <find_charset_locale@@Base+0x1f0>

000000000000c090 <is_roff_device@@Base>:
    c090:	stp	x29, x30, [sp, #-32]!
    c094:	adrp	x1, 4d000 <base_len@@Base+0x38058>
    c098:	add	x1, x1, #0x6d0
    c09c:	mov	x29, sp
    c0a0:	stp	x19, x20, [sp, #16]
    c0a4:	mov	x20, x0
    c0a8:	ldr	x0, [x1, #1440]
    c0ac:	cbz	x0, c0dc <is_roff_device@@Base+0x4c>
    c0b0:	add	x19, x1, #0x5a0
    c0b4:	b	c0c0 <is_roff_device@@Base+0x30>
    c0b8:	ldr	x0, [x19, #24]!
    c0bc:	cbz	x0, c0d0 <is_roff_device@@Base+0x40>
    c0c0:	mov	x1, x20
    c0c4:	bl	a9b0 <strcmp@plt>
    c0c8:	cbnz	w0, c0b8 <is_roff_device@@Base+0x28>
    c0cc:	mov	w0, #0x1                   	// #1
    c0d0:	ldp	x19, x20, [sp, #16]
    c0d4:	ldp	x29, x30, [sp], #32
    c0d8:	ret
    c0dc:	mov	w0, #0x0                   	// #0
    c0e0:	b	c0d0 <is_roff_device@@Base+0x40>
    c0e4:	nop

000000000000c0e8 <get_roff_encoding@@Base>:
    c0e8:	stp	x29, x30, [sp, #-48]!
    c0ec:	mov	x29, sp
    c0f0:	stp	x19, x20, [sp, #16]
    c0f4:	cbz	x0, c164 <get_roff_encoding@@Base+0x7c>
    c0f8:	mov	x20, x0
    c0fc:	adrp	x0, 4d000 <base_len@@Base+0x38058>
    c100:	add	x0, x0, #0x6d0
    c104:	stp	x21, x22, [sp, #32]
    c108:	add	x19, x0, #0x5a0
    c10c:	mov	x21, x1
    c110:	ldr	x0, [x0, #1440]
    c114:	cbnz	x0, c124 <get_roff_encoding@@Base+0x3c>
    c118:	b	c244 <get_roff_encoding@@Base+0x15c>
    c11c:	ldr	x0, [x19, #24]!
    c120:	cbz	x0, c244 <get_roff_encoding@@Base+0x15c>
    c124:	mov	x1, x20
    c128:	bl	a9b0 <strcmp@plt>
    c12c:	cbnz	w0, c11c <get_roff_encoding@@Base+0x34>
    c130:	mov	x0, x20
    c134:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c138:	add	x1, x1, #0x558
    c13c:	bl	a9b0 <strcmp@plt>
    c140:	ldr	x19, [x19, #8]
    c144:	cbz	w0, c180 <get_roff_encoding@@Base+0x98>
    c148:	cmp	x19, #0x0
    c14c:	csel	x19, x19, x21, ne  // ne = any
    c150:	ldp	x21, x22, [sp, #32]
    c154:	mov	x0, x19
    c158:	ldp	x19, x20, [sp, #16]
    c15c:	ldp	x29, x30, [sp], #48
    c160:	ret
    c164:	adrp	x19, 31000 <vasnprintf@@Base+0x848>
    c168:	add	x19, x19, #0xe58
    c16c:	add	x19, x19, #0x10
    c170:	mov	x0, x19
    c174:	ldp	x19, x20, [sp, #16]
    c178:	ldp	x29, x30, [sp], #48
    c17c:	ret
    c180:	bl	a6a0 <get_groff_preconv@plt>
    c184:	cbnz	x0, c148 <get_roff_encoding@@Base+0x60>
    c188:	bl	ade0 <get_locale_charset@plt>
    c18c:	adrp	x20, 31000 <vasnprintf@@Base+0x848>
    c190:	add	x1, x20, #0x518
    c194:	bl	a9b0 <strcmp@plt>
    c198:	cbnz	w0, c148 <get_roff_encoding@@Base+0x60>
    c19c:	mov	x1, #0x0                   	// #0
    c1a0:	mov	w0, #0x0                   	// #0
    c1a4:	bl	afd0 <setlocale@plt>
    c1a8:	mov	x22, x0
    c1ac:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c1b0:	mov	x2, #0x5                   	// #5
    c1b4:	add	x1, x1, #0x560
    c1b8:	bl	a6c0 <strncmp@plt>
    c1bc:	cbz	w0, c238 <get_roff_encoding@@Base+0x150>
    c1c0:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c1c4:	mov	x0, x22
    c1c8:	add	x1, x1, #0x568
    c1cc:	mov	x2, #0x5                   	// #5
    c1d0:	bl	a6c0 <strncmp@plt>
    c1d4:	cbz	w0, c238 <get_roff_encoding@@Base+0x150>
    c1d8:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c1dc:	mov	x0, x22
    c1e0:	add	x1, x1, #0x570
    c1e4:	mov	x2, #0x5                   	// #5
    c1e8:	bl	a6c0 <strncmp@plt>
    c1ec:	cbz	w0, c238 <get_roff_encoding@@Base+0x150>
    c1f0:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c1f4:	mov	x0, x22
    c1f8:	add	x1, x1, #0x578
    c1fc:	mov	x2, #0x5                   	// #5
    c200:	bl	a6c0 <strncmp@plt>
    c204:	cbz	w0, c238 <get_roff_encoding@@Base+0x150>
    c208:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c20c:	mov	x0, x22
    c210:	add	x1, x1, #0x580
    c214:	mov	x2, #0x5                   	// #5
    c218:	bl	a6c0 <strncmp@plt>
    c21c:	cbz	w0, c238 <get_roff_encoding@@Base+0x150>
    c220:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c224:	mov	x0, x22
    c228:	add	x1, x1, #0x588
    c22c:	mov	x2, #0x5                   	// #5
    c230:	bl	a6c0 <strncmp@plt>
    c234:	cbnz	w0, c148 <get_roff_encoding@@Base+0x60>
    c238:	add	x19, x20, #0x518
    c23c:	ldp	x21, x22, [sp, #32]
    c240:	b	c154 <get_roff_encoding@@Base+0x6c>
    c244:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c248:	mov	x0, x20
    c24c:	add	x1, x1, #0x558
    c250:	bl	a9b0 <strcmp@plt>
    c254:	cbz	w0, c278 <get_roff_encoding@@Base+0x190>
    c258:	adrp	x19, 31000 <vasnprintf@@Base+0x848>
    c25c:	add	x19, x19, #0xe58
    c260:	add	x19, x19, #0x10
    c264:	mov	x0, x19
    c268:	ldp	x19, x20, [sp, #16]
    c26c:	ldp	x21, x22, [sp, #32]
    c270:	ldp	x29, x30, [sp], #48
    c274:	ret
    c278:	bl	a6a0 <get_groff_preconv@plt>
    c27c:	cbnz	x0, c258 <get_roff_encoding@@Base+0x170>
    c280:	bl	ade0 <get_locale_charset@plt>
    c284:	adrp	x19, 31000 <vasnprintf@@Base+0x848>
    c288:	add	x19, x19, #0xe58
    c28c:	adrp	x20, 31000 <vasnprintf@@Base+0x848>
    c290:	add	x19, x19, #0x10
    c294:	add	x1, x20, #0x518
    c298:	bl	a9b0 <strcmp@plt>
    c29c:	cbz	w0, c19c <get_roff_encoding@@Base+0xb4>
    c2a0:	ldp	x21, x22, [sp, #32]
    c2a4:	b	c154 <get_roff_encoding@@Base+0x6c>

000000000000c2a8 <get_default_device@@Base>:
    c2a8:	stp	x29, x30, [sp, #-80]!
    c2ac:	mov	x29, sp
    c2b0:	stp	x19, x20, [sp, #16]
    c2b4:	mov	x20, x0
    c2b8:	stp	x21, x22, [sp, #32]
    c2bc:	mov	x21, x1
    c2c0:	bl	a6a0 <get_groff_preconv@plt>
    c2c4:	cbz	x0, c304 <get_default_device@@Base+0x5c>
    c2c8:	cbz	x20, c46c <get_default_device@@Base+0x1c4>
    c2cc:	mov	x0, x20
    c2d0:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c2d4:	add	x1, x1, #0x5a0
    c2d8:	bl	a9b0 <strcmp@plt>
    c2dc:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c2e0:	cmp	w0, #0x0
    c2e4:	add	x1, x1, #0x598
    c2e8:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    c2ec:	add	x0, x0, #0x558
    c2f0:	csel	x0, x0, x1, ne  // ne = any
    c2f4:	ldp	x19, x20, [sp, #16]
    c2f8:	ldp	x21, x22, [sp, #32]
    c2fc:	ldp	x29, x30, [sp], #80
    c300:	ret
    c304:	cbz	x20, c3d8 <get_default_device@@Base+0x130>
    c308:	adrp	x0, 4d000 <base_len@@Base+0x38058>
    c30c:	add	x0, x0, #0x6d0
    c310:	add	x19, x0, #0x710
    c314:	ldr	x0, [x0, #1808]
    c318:	cbz	x0, c3d8 <get_default_device@@Base+0x130>
    c31c:	stp	x23, x24, [sp, #48]
    c320:	adrp	x23, 31000 <vasnprintf@@Base+0x848>
    c324:	adrp	x24, 31000 <vasnprintf@@Base+0x848>
    c328:	add	x23, x23, #0x5a0
    c32c:	add	x24, x24, #0x518
    c330:	str	x25, [sp, #64]
    c334:	adrp	x25, 31000 <vasnprintf@@Base+0x848>
    c338:	b	c344 <get_default_device@@Base+0x9c>
    c33c:	ldr	x0, [x19, #16]!
    c340:	cbz	x0, c3d0 <get_default_device@@Base+0x128>
    c344:	mov	x1, x20
    c348:	bl	a9b0 <strcmp@plt>
    c34c:	cbnz	w0, c33c <get_default_device@@Base+0x94>
    c350:	ldr	x0, [x19, #8]
    c354:	mov	x1, x21
    c358:	bl	a400 <get_roff_encoding@plt>
    c35c:	mov	x22, x0
    c360:	mov	x1, x22
    c364:	mov	x0, x21
    c368:	bl	a9b0 <strcmp@plt>
    c36c:	cbz	w0, c3c0 <get_default_device@@Base+0x118>
    c370:	mov	x1, x23
    c374:	mov	x0, x21
    c378:	bl	a9b0 <strcmp@plt>
    c37c:	cbz	w0, c3c0 <get_default_device@@Base+0x118>
    c380:	mov	x1, x24
    c384:	mov	x0, x21
    c388:	bl	a9b0 <strcmp@plt>
    c38c:	cbz	w0, c3c0 <get_default_device@@Base+0x118>
    c390:	mov	x1, x23
    c394:	mov	x0, x22
    c398:	bl	a9b0 <strcmp@plt>
    c39c:	cbz	w0, c3c0 <get_default_device@@Base+0x118>
    c3a0:	add	x1, x25, #0x5b0
    c3a4:	mov	x0, x21
    c3a8:	bl	a9b0 <strcmp@plt>
    c3ac:	cbnz	w0, c3f0 <get_default_device@@Base+0x148>
    c3b0:	mov	x0, x22
    c3b4:	mov	x1, x24
    c3b8:	bl	a9b0 <strcmp@plt>
    c3bc:	cbnz	w0, c33c <get_default_device@@Base+0x94>
    c3c0:	ldr	x0, [x19, #8]
    c3c4:	ldp	x23, x24, [sp, #48]
    c3c8:	ldr	x25, [sp, #64]
    c3cc:	b	c2f4 <get_default_device@@Base+0x4c>
    c3d0:	ldp	x23, x24, [sp, #48]
    c3d4:	ldr	x25, [sp, #64]
    c3d8:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    c3dc:	add	x0, x0, #0x590
    c3e0:	ldp	x19, x20, [sp, #16]
    c3e4:	ldp	x21, x22, [sp, #32]
    c3e8:	ldp	x29, x30, [sp], #80
    c3ec:	ret
    c3f0:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c3f4:	mov	x0, x21
    c3f8:	add	x1, x1, #0x5b8
    c3fc:	bl	a9b0 <strcmp@plt>
    c400:	cbz	w0, c3b0 <get_default_device@@Base+0x108>
    c404:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c408:	mov	x0, x21
    c40c:	add	x1, x1, #0x5c8
    c410:	bl	a9b0 <strcmp@plt>
    c414:	cbz	w0, c3b0 <get_default_device@@Base+0x108>
    c418:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c41c:	mov	x0, x21
    c420:	add	x1, x1, #0x5d0
    c424:	bl	a9b0 <strcmp@plt>
    c428:	cbz	w0, c3b0 <get_default_device@@Base+0x108>
    c42c:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c430:	mov	x0, x21
    c434:	add	x1, x1, #0x5d8
    c438:	bl	a9b0 <strcmp@plt>
    c43c:	cbz	w0, c3b0 <get_default_device@@Base+0x108>
    c440:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c444:	mov	x0, x21
    c448:	add	x1, x1, #0x5e0
    c44c:	bl	a9b0 <strcmp@plt>
    c450:	cbz	w0, c3b0 <get_default_device@@Base+0x108>
    c454:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c458:	mov	x0, x21
    c45c:	add	x1, x1, #0x5e8
    c460:	bl	a9b0 <strcmp@plt>
    c464:	cbnz	w0, c33c <get_default_device@@Base+0x94>
    c468:	b	c3b0 <get_default_device@@Base+0x108>
    c46c:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    c470:	add	x0, x0, #0x558
    c474:	ldp	x19, x20, [sp, #16]
    c478:	ldp	x21, x22, [sp, #32]
    c47c:	ldp	x29, x30, [sp], #80
    c480:	ret
    c484:	nop

000000000000c488 <get_output_encoding@@Base>:
    c488:	stp	x29, x30, [sp, #-32]!
    c48c:	adrp	x1, 4d000 <base_len@@Base+0x38058>
    c490:	add	x1, x1, #0x6d0
    c494:	mov	x29, sp
    c498:	stp	x19, x20, [sp, #16]
    c49c:	mov	x20, x0
    c4a0:	ldr	x0, [x1, #1440]
    c4a4:	cbz	x0, c4c8 <get_output_encoding@@Base+0x40>
    c4a8:	add	x19, x1, #0x5a0
    c4ac:	b	c4b8 <get_output_encoding@@Base+0x30>
    c4b0:	ldr	x0, [x19, #24]!
    c4b4:	cbz	x0, c4c8 <get_output_encoding@@Base+0x40>
    c4b8:	mov	x1, x20
    c4bc:	bl	a9b0 <strcmp@plt>
    c4c0:	cbnz	w0, c4b0 <get_output_encoding@@Base+0x28>
    c4c4:	ldr	x0, [x19, #16]
    c4c8:	ldp	x19, x20, [sp, #16]
    c4cc:	ldp	x29, x30, [sp], #32
    c4d0:	ret
    c4d4:	nop

000000000000c4d8 <get_less_charset@@Base>:
    c4d8:	cbz	x0, c540 <get_less_charset@@Base+0x68>
    c4dc:	stp	x29, x30, [sp, #-32]!
    c4e0:	mov	x29, sp
    c4e4:	stp	x19, x20, [sp, #16]
    c4e8:	mov	x20, x0
    c4ec:	adrp	x0, 4d000 <base_len@@Base+0x38058>
    c4f0:	add	x0, x0, #0x6d0
    c4f4:	add	x19, x0, #0x7b0
    c4f8:	ldr	x0, [x0, #1968]
    c4fc:	cbnz	x0, c50c <get_less_charset@@Base+0x34>
    c500:	b	c528 <get_less_charset@@Base+0x50>
    c504:	ldr	x0, [x19, #24]!
    c508:	cbz	x0, c528 <get_less_charset@@Base+0x50>
    c50c:	mov	x1, x20
    c510:	bl	a9b0 <strcmp@plt>
    c514:	cbnz	w0, c504 <get_less_charset@@Base+0x2c>
    c518:	ldr	x0, [x19, #8]
    c51c:	ldp	x19, x20, [sp, #16]
    c520:	ldp	x29, x30, [sp], #32
    c524:	ret
    c528:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    c52c:	add	x0, x0, #0xe58
    c530:	add	x0, x0, #0x20
    c534:	ldp	x19, x20, [sp, #16]
    c538:	ldp	x29, x30, [sp], #32
    c53c:	ret
    c540:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    c544:	add	x0, x0, #0xe58
    c548:	add	x0, x0, #0x20
    c54c:	ret

000000000000c550 <get_jless_charset@@Base>:
    c550:	cbz	x0, c5a0 <get_jless_charset@@Base+0x50>
    c554:	stp	x29, x30, [sp, #-32]!
    c558:	mov	x29, sp
    c55c:	stp	x19, x20, [sp, #16]
    c560:	mov	x20, x0
    c564:	adrp	x0, 4d000 <base_len@@Base+0x38058>
    c568:	add	x0, x0, #0x6d0
    c56c:	add	x19, x0, #0x7b0
    c570:	ldr	x0, [x0, #1968]
    c574:	cbnz	x0, c584 <get_jless_charset@@Base+0x34>
    c578:	b	c594 <get_jless_charset@@Base+0x44>
    c57c:	ldr	x0, [x19, #24]!
    c580:	cbz	x0, c594 <get_jless_charset@@Base+0x44>
    c584:	mov	x1, x20
    c588:	bl	a9b0 <strcmp@plt>
    c58c:	cbnz	w0, c57c <get_jless_charset@@Base+0x2c>
    c590:	ldr	x0, [x19, #16]
    c594:	ldp	x19, x20, [sp, #16]
    c598:	ldp	x29, x30, [sp], #32
    c59c:	ret
    c5a0:	mov	x0, #0x0                   	// #0
    c5a4:	ret

000000000000c5a8 <check_preprocessor_encoding@@Base>:
    c5a8:	stp	x29, x30, [sp, #-96]!
    c5ac:	mov	x29, sp
    c5b0:	stp	x21, x22, [sp, #32]
    c5b4:	mov	x22, x1
    c5b8:	stp	x23, x24, [sp, #48]
    c5bc:	mov	x23, x2
    c5c0:	bl	abb0 <pipeline_peekline@plt>
    c5c4:	cbz	x0, c690 <check_preprocessor_encoding@@Base+0xe8>
    c5c8:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c5cc:	mov	x21, x0
    c5d0:	add	x1, x1, #0x5f0
    c5d4:	mov	x2, #0x4                   	// #4
    c5d8:	bl	a6c0 <strncmp@plt>
    c5dc:	cbnz	w0, c6a8 <check_preprocessor_encoding@@Base+0x100>
    c5e0:	mov	x0, x21
    c5e4:	mov	w1, #0xa                   	// #10
    c5e8:	stp	x19, x20, [sp, #16]
    c5ec:	bl	ab60 <strchr@plt>
    c5f0:	add	x19, x21, #0x4
    c5f4:	mov	x20, x0
    c5f8:	cbz	x0, c84c <check_preprocessor_encoding@@Base+0x2a4>
    c5fc:	adrp	x2, 31000 <vasnprintf@@Base+0x848>
    c600:	sub	x1, x20, x19
    c604:	add	x2, x2, #0x600
    c608:	mov	x0, x19
    c60c:	mov	x3, #0x3                   	// #3
    c610:	bl	a8a0 <memmem@plt>
    c614:	cbz	x0, c68c <check_preprocessor_encoding@@Base+0xe4>
    c618:	add	x19, x0, #0x3
    c61c:	adrp	x24, 31000 <vasnprintf@@Base+0x848>
    c620:	cmp	x19, #0x0
    c624:	add	x24, x24, #0x608
    c628:	ccmp	x19, x20, #0x2, ne  // ne = any
    c62c:	b.cs	c68c <check_preprocessor_encoding@@Base+0xe4>  // b.hs, b.nlast
    c630:	ldrb	w0, [x19]
    c634:	cbz	w0, c68c <check_preprocessor_encoding@@Base+0xe4>
    c638:	cmp	w0, #0x20
    c63c:	b.ne	c64c <check_preprocessor_encoding@@Base+0xa4>  // b.any
    c640:	ldrb	w3, [x19, #1]!
    c644:	cmp	w3, #0x20
    c648:	b.eq	c640 <check_preprocessor_encoding@@Base+0x98>  // b.none
    c64c:	mov	x1, x24
    c650:	mov	x0, x19
    c654:	mov	x2, #0x7                   	// #7
    c658:	bl	a6c0 <strncmp@plt>
    c65c:	cbz	w0, c6e0 <check_preprocessor_encoding@@Base+0x138>
    c660:	sub	x2, x20, x19
    c664:	mov	x0, x19
    c668:	mov	w1, #0x3b                  	// #59
    c66c:	bl	ac90 <memchr@plt>
    c670:	cmp	x0, #0x0
    c674:	mov	x19, x0
    c678:	cset	w0, ne  // ne = any
    c67c:	add	x19, x19, x0
    c680:	cmp	x19, #0x0
    c684:	ccmp	x19, x20, #0x2, ne  // ne = any
    c688:	b.cc	c630 <check_preprocessor_encoding@@Base+0x88>  // b.lo, b.ul, b.last
    c68c:	ldp	x19, x20, [sp, #16]
    c690:	mov	x24, #0x0                   	// #0
    c694:	mov	x0, x24
    c698:	ldp	x21, x22, [sp, #32]
    c69c:	ldp	x23, x24, [sp, #48]
    c6a0:	ldp	x29, x30, [sp], #96
    c6a4:	ret
    c6a8:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c6ac:	mov	x0, x21
    c6b0:	add	x1, x1, #0x5f8
    c6b4:	mov	x2, #0x4                   	// #4
    c6b8:	bl	a6c0 <strncmp@plt>
    c6bc:	cbnz	w0, c690 <check_preprocessor_encoding@@Base+0xe8>
    c6c0:	mov	x0, x21
    c6c4:	mov	w1, #0xa                   	// #10
    c6c8:	stp	x19, x20, [sp, #16]
    c6cc:	bl	ab60 <strchr@plt>
    c6d0:	add	x19, x21, #0x4
    c6d4:	mov	x20, x0
    c6d8:	cbnz	x0, c5fc <check_preprocessor_encoding@@Base+0x54>
    c6dc:	b	c84c <check_preprocessor_encoding@@Base+0x2a4>
    c6e0:	stp	x25, x26, [sp, #64]
    c6e4:	add	x19, x19, #0x7
    c6e8:	ldrb	w0, [x19]
    c6ec:	cmp	w0, #0x20
    c6f0:	b.ne	c704 <check_preprocessor_encoding@@Base+0x15c>  // b.any
    c6f4:	nop
    c6f8:	ldrb	w0, [x19, #1]!
    c6fc:	cmp	w0, #0x20
    c700:	b.eq	c6f8 <check_preprocessor_encoding@@Base+0x150>  // b.none
    c704:	mov	x0, x19
    c708:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c70c:	add	x1, x1, #0x610
    c710:	bl	ab40 <strspn@plt>
    c714:	mov	x26, x0
    c718:	mov	x0, x19
    c71c:	mov	x1, x26
    c720:	bl	acf0 <xstrndup@plt>
    c724:	mov	x24, x0
    c728:	bl	a340 <strlen@plt>
    c72c:	mov	x25, x0
    c730:	cmp	x0, #0x4
    c734:	b.ls	c79c <check_preprocessor_encoding@@Base+0x1f4>  // b.plast
    c738:	stp	x27, x28, [sp, #80]
    c73c:	sub	x28, x0, #0x4
    c740:	add	x27, x24, x28
    c744:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c748:	mov	x0, x27
    c74c:	add	x1, x1, #0x658
    c750:	bl	a7c0 <strcasecmp@plt>
    c754:	cbnz	w0, c75c <check_preprocessor_encoding@@Base+0x1b4>
    c758:	strb	wzr, [x24, x28]
    c75c:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c760:	mov	x0, x27
    c764:	add	x1, x1, #0x698
    c768:	bl	a7c0 <strcasecmp@plt>
    c76c:	cbnz	w0, c774 <check_preprocessor_encoding@@Base+0x1cc>
    c770:	strb	wzr, [x27]
    c774:	cmp	x25, #0x5
    c778:	b.eq	c894 <check_preprocessor_encoding@@Base+0x2ec>  // b.none
    c77c:	sub	x25, x25, #0x5
    c780:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    c784:	add	x0, x24, x25
    c788:	add	x1, x1, #0x660
    c78c:	bl	a7c0 <strcasecmp@plt>
    c790:	cbnz	w0, c894 <check_preprocessor_encoding@@Base+0x2ec>
    c794:	strb	wzr, [x24, x25]
    c798:	ldp	x27, x28, [sp, #80]
    c79c:	adrp	x0, 4d000 <base_len@@Base+0x38058>
    c7a0:	add	x0, x0, #0x6d0
    c7a4:	add	x25, x0, #0x870
    c7a8:	ldr	x0, [x0, #2160]
    c7ac:	cbnz	x0, c7bc <check_preprocessor_encoding@@Base+0x214>
    c7b0:	b	c85c <check_preprocessor_encoding@@Base+0x2b4>
    c7b4:	ldr	x0, [x25, #16]!
    c7b8:	cbz	x0, c85c <check_preprocessor_encoding@@Base+0x2b4>
    c7bc:	mov	x1, x24
    c7c0:	bl	a7c0 <strcasecmp@plt>
    c7c4:	cbnz	w0, c7b4 <check_preprocessor_encoding@@Base+0x20c>
    c7c8:	mov	x0, x24
    c7cc:	bl	aa50 <free@plt>
    c7d0:	ldr	x0, [x25, #8]
    c7d4:	bl	a730 <xstrdup@plt>
    c7d8:	mov	x24, x0
    c7dc:	mov	x1, x24
    c7e0:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    c7e4:	add	x0, x0, #0x668
    c7e8:	bl	a570 <debug@plt>
    c7ec:	cmp	x22, #0x0
    c7f0:	ccmp	x23, #0x0, #0x4, ne  // ne = any
    c7f4:	b.eq	c878 <check_preprocessor_encoding@@Base+0x2d0>  // b.none
    c7f8:	cbz	x24, c89c <check_preprocessor_encoding@@Base+0x2f4>
    c7fc:	mov	x1, x22
    c800:	mov	x0, x24
    c804:	bl	a7c0 <strcasecmp@plt>
    c808:	cbz	w0, c878 <check_preprocessor_encoding@@Base+0x2d0>
    c80c:	add	x5, x19, x26
    c810:	sub	w1, w19, w21
    c814:	mov	x3, x22
    c818:	sub	w4, w20, w5
    c81c:	mov	x2, x21
    c820:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    c824:	add	x0, x0, #0x688
    c828:	bl	aac0 <xasprintf@plt>
    c82c:	ldp	x19, x20, [sp, #16]
    c830:	ldp	x25, x26, [sp, #64]
    c834:	str	x0, [x23]
    c838:	mov	x0, x24
    c83c:	ldp	x21, x22, [sp, #32]
    c840:	ldp	x23, x24, [sp, #48]
    c844:	ldp	x29, x30, [sp], #96
    c848:	ret
    c84c:	mov	x0, x19
    c850:	bl	a340 <strlen@plt>
    c854:	add	x20, x19, x0
    c858:	b	c5fc <check_preprocessor_encoding@@Base+0x54>
    c85c:	mov	x1, x24
    c860:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    c864:	add	x0, x0, #0x668
    c868:	bl	a570 <debug@plt>
    c86c:	cmp	x22, #0x0
    c870:	ccmp	x23, #0x0, #0x4, ne  // ne = any
    c874:	b.ne	c7fc <check_preprocessor_encoding@@Base+0x254>  // b.any
    c878:	mov	x0, x24
    c87c:	ldp	x19, x20, [sp, #16]
    c880:	ldp	x21, x22, [sp, #32]
    c884:	ldp	x23, x24, [sp, #48]
    c888:	ldp	x25, x26, [sp, #64]
    c88c:	ldp	x29, x30, [sp], #96
    c890:	ret
    c894:	ldp	x27, x28, [sp, #80]
    c898:	b	c79c <check_preprocessor_encoding@@Base+0x1f4>
    c89c:	ldp	x19, x20, [sp, #16]
    c8a0:	ldp	x25, x26, [sp, #64]
    c8a4:	b	c690 <check_preprocessor_encoding@@Base+0xe8>

000000000000c8a8 <string_equals@@Base>:
    c8a8:	stp	x29, x30, [sp, #-16]!
    c8ac:	mov	x29, sp
    c8b0:	bl	a9b0 <strcmp@plt>
    c8b4:	cmp	w0, #0x0
    c8b8:	cset	w0, eq  // eq = none
    c8bc:	ldp	x29, x30, [sp], #16
    c8c0:	ret
    c8c4:	nop

000000000000c8c8 <string_hash@@Base>:
    c8c8:	stp	x29, x30, [sp, #-32]!
    c8cc:	mov	x29, sp
    c8d0:	str	x19, [sp, #16]
    c8d4:	mov	x19, x0
    c8d8:	bl	a340 <strlen@plt>
    c8dc:	mov	x1, x0
    c8e0:	mov	x0, x19
    c8e4:	ldr	x19, [sp, #16]
    c8e8:	ldp	x29, x30, [sp], #32
    c8ec:	b	a980 <hash_pjw_bare@plt>

000000000000c8f0 <plain_free@@Base>:
    c8f0:	b	aa50 <free@plt>
    c8f4:	nop

000000000000c8f8 <new_string_list@@Base>:
    c8f8:	stp	x29, x30, [sp, #-16]!
    c8fc:	adrp	x5, 4c000 <vasnprintf@@Base+0x1b848>
    c900:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
    c904:	adrp	x2, 4c000 <vasnprintf@@Base+0x1b848>
    c908:	mov	x29, sp
    c90c:	mov	w4, w1
    c910:	ldr	x1, [x5, #3824]
    c914:	ldr	x3, [x3, #4000]
    c918:	ldr	x2, [x2, #3864]
    c91c:	ldr	x5, [x0]
    c920:	blr	x5
    c924:	cbz	x0, c930 <new_string_list@@Base+0x38>
    c928:	ldp	x29, x30, [sp], #16
    c92c:	ret
    c930:	bl	a890 <xalloc_die@plt>
    c934:	nop

000000000000c938 <new_string_map@@Base>:
    c938:	stp	x29, x30, [sp, #-16]!
    c93c:	adrp	x5, 4c000 <vasnprintf@@Base+0x1b848>
    c940:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
    c944:	adrp	x2, 4c000 <vasnprintf@@Base+0x1b848>
    c948:	mov	x29, sp
    c94c:	mov	x4, x1
    c950:	ldr	x1, [x5, #3824]
    c954:	ldr	x3, [x3, #4000]
    c958:	ldr	x2, [x2, #3864]
    c95c:	ldr	x5, [x0]
    c960:	blr	x5
    c964:	cbz	x0, c970 <new_string_map@@Base+0x38>
    c968:	ldp	x29, x30, [sp], #16
    c96c:	ret
    c970:	bl	a890 <xalloc_die@plt>
    c974:	nop

000000000000c978 <new_string_set@@Base>:
    c978:	stp	x29, x30, [sp, #-16]!
    c97c:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
    c980:	adrp	x2, 4c000 <vasnprintf@@Base+0x1b848>
    c984:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
    c988:	mov	x29, sp
    c98c:	ldr	x3, [x3, #4000]
    c990:	ldr	x2, [x2, #3864]
    c994:	ldr	x1, [x1, #3824]
    c998:	ldr	x4, [x0]
    c99c:	blr	x4
    c9a0:	cbz	x0, c9ac <new_string_set@@Base+0x34>
    c9a4:	ldp	x29, x30, [sp], #16
    c9a8:	ret
    c9ac:	bl	a890 <xalloc_die@plt>

000000000000c9b0 <get_line_length@@Base>:
    c9b0:	stp	x29, x30, [sp, #-64]!
    c9b4:	mov	x29, sp
    c9b8:	stp	x19, x20, [sp, #16]
    c9bc:	adrp	x19, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c9c0:	ldr	w0, [x19, #480]
    c9c4:	cmn	w0, #0x1
    c9c8:	b.eq	c9d8 <get_line_length@@Base+0x28>  // b.none
    c9cc:	ldp	x19, x20, [sp, #16]
    c9d0:	ldp	x29, x30, [sp], #64
    c9d4:	ret
    c9d8:	mov	w1, #0x50                  	// #80
    c9dc:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    c9e0:	str	w1, [x19, #480]
    c9e4:	add	x0, x0, #0xe80
    c9e8:	bl	aed0 <getenv@plt>
    c9ec:	cbz	x0, ca08 <get_line_length@@Base+0x58>
    c9f0:	mov	x1, #0x0                   	// #0
    c9f4:	mov	w2, #0xa                   	// #10
    c9f8:	bl	aa00 <strtol@plt>
    c9fc:	mov	x1, x0
    ca00:	cmp	w0, #0x0
    ca04:	b.gt	ca88 <get_line_length@@Base+0xd8>
    ca08:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    ca0c:	add	x0, x0, #0xe90
    ca10:	bl	aed0 <getenv@plt>
    ca14:	cbz	x0, ca30 <get_line_length@@Base+0x80>
    ca18:	mov	x1, #0x0                   	// #0
    ca1c:	mov	w2, #0xa                   	// #10
    ca20:	bl	aa00 <strtol@plt>
    ca24:	mov	x1, x0
    ca28:	cmp	w0, #0x0
    ca2c:	b.gt	ca88 <get_line_length@@Base+0xd8>
    ca30:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    ca34:	mov	w1, #0x0                   	// #0
    ca38:	add	x0, x0, #0xe98
    ca3c:	str	x21, [sp, #32]
    ca40:	bl	a640 <open@plt>
    ca44:	mov	w20, w0
    ca48:	tbnz	w0, #31, ca98 <get_line_length@@Base+0xe8>
    ca4c:	add	x2, sp, #0x38
    ca50:	mov	w1, #0x5413                	// #21523
    ca54:	bl	ab50 <rpl_ioctl@plt>
    ca58:	mov	w21, w0
    ca5c:	mov	w0, w20
    ca60:	bl	a850 <close@plt>
    ca64:	cbnz	w21, cad0 <get_line_length@@Base+0x120>
    ca68:	ldrh	w0, [sp, #58]
    ca6c:	cbnz	w0, ca74 <get_line_length@@Base+0xc4>
    ca70:	mov	w0, #0x50                  	// #80
    ca74:	str	w0, [x19, #480]
    ca78:	ldp	x19, x20, [sp, #16]
    ca7c:	ldr	x21, [sp, #32]
    ca80:	ldp	x29, x30, [sp], #64
    ca84:	ret
    ca88:	str	w1, [x19, #480]
    ca8c:	ldp	x19, x20, [sp, #16]
    ca90:	ldp	x29, x30, [sp], #64
    ca94:	ret
    ca98:	mov	w0, #0x1                   	// #1
    ca9c:	bl	acd0 <isatty@plt>
    caa0:	mov	w20, w0
    caa4:	cbz	w0, cac4 <get_line_length@@Base+0x114>
    caa8:	mov	w20, #0x1                   	// #1
    caac:	mov	w0, w20
    cab0:	add	x2, sp, #0x38
    cab4:	mov	w1, #0x5413                	// #21523
    cab8:	bl	ab50 <rpl_ioctl@plt>
    cabc:	mov	w21, w0
    cac0:	b	ca64 <get_line_length@@Base+0xb4>
    cac4:	bl	acd0 <isatty@plt>
    cac8:	cbnz	w0, caac <get_line_length@@Base+0xfc>
    cacc:	b	ca70 <get_line_length@@Base+0xc0>
    cad0:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    cad4:	add	x0, x0, #0xea8
    cad8:	bl	a390 <perror@plt>
    cadc:	b	ca70 <get_line_length@@Base+0xc0>
    cae0:	stp	x29, x30, [sp, #-64]!
    cae4:	mov	x29, sp
    cae8:	stp	x19, x20, [sp, #16]
    caec:	adrp	x20, 4c000 <vasnprintf@@Base+0x1b848>
    caf0:	add	x19, sp, #0x38
    caf4:	ldr	x20, [x20, #3984]
    caf8:	str	x21, [sp, #32]
    cafc:	mov	x21, x1
    cb00:	mov	x1, x0
    cb04:	str	xzr, [sp, #56]
    cb08:	mov	x2, x19
    cb0c:	ldr	x0, [x20]
    cb10:	ldr	x3, [x0]
    cb14:	ldr	x3, [x3, #16]
    cb18:	blr	x3
    cb1c:	ldr	x0, [x20]
    cb20:	mov	x1, x21
    cb24:	ldr	x20, [sp, #56]
    cb28:	str	xzr, [sp, #56]
    cb2c:	mov	x2, x19
    cb30:	ldr	x3, [x0]
    cb34:	ldr	x3, [x3, #16]
    cb38:	blr	x3
    cb3c:	ldr	x0, [sp, #56]
    cb40:	cbz	x20, cb74 <get_line_length@@Base+0x1c4>
    cb44:	mov	x1, #0xffffffffffffffff    	// #-1
    cb48:	ldr	x2, [x20]
    cb4c:	cbz	x0, cb54 <get_line_length@@Base+0x1a4>
    cb50:	ldr	x1, [x0]
    cb54:	cmp	x1, x2
    cb58:	cset	w0, cc  // cc = lo, ul, last
    cb5c:	mov	w1, #0xffffffff            	// #-1
    cb60:	csel	w0, w0, w1, ls  // ls = plast
    cb64:	ldp	x19, x20, [sp, #16]
    cb68:	ldr	x21, [sp, #32]
    cb6c:	ldp	x29, x30, [sp], #64
    cb70:	ret
    cb74:	mov	x2, #0xffffffffffffffff    	// #-1
    cb78:	cbnz	x0, cb50 <get_line_length@@Base+0x1a0>
    cb7c:	b	cb64 <get_line_length@@Base+0x1b4>

000000000000cb80 <order_files@@Base>:
    cb80:	stp	x29, x30, [sp, #-416]!
    cb84:	mov	x29, sp
    cb88:	stp	x25, x26, [sp, #64]
    cb8c:	mov	x25, x1
    cb90:	mov	w1, #0x4000                	// #16384
    cb94:	movk	w1, #0x20, lsl #16
    cb98:	stp	x27, x28, [sp, #80]
    cb9c:	str	x25, [sp, #104]
    cba0:	ldr	x27, [x25]
    cba4:	bl	a640 <open@plt>
    cba8:	tbnz	w0, #31, cd50 <order_files@@Base+0x1d0>
    cbac:	add	x1, sp, #0x128
    cbb0:	stp	x19, x20, [sp, #16]
    cbb4:	mov	w20, w0
    cbb8:	bl	a6e0 <fstatfs@plt>
    cbbc:	tbnz	w0, #31, cdc4 <order_files@@Base+0x244>
    cbc0:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
    cbc4:	adrp	x4, 4c000 <vasnprintf@@Base+0x1b848>
    cbc8:	adrp	x2, 4c000 <vasnprintf@@Base+0x1b848>
    cbcc:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
    cbd0:	ldr	x0, [x0, #3912]
    cbd4:	stp	x21, x22, [sp, #32]
    cbd8:	mov	x3, #0x0                   	// #0
    cbdc:	ldr	x2, [x2, #3864]
    cbe0:	stp	x23, x24, [sp, #48]
    cbe4:	ldr	x4, [x4, #4000]
    cbe8:	ldr	x1, [x1, #3824]
    cbec:	ldr	x5, [x0]
    cbf0:	blr	x5
    cbf4:	mov	x2, x0
    cbf8:	cbz	x0, ccf4 <order_files@@Base+0x174>
    cbfc:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
    cc00:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
    cc04:	mov	w1, #0x0                   	// #0
    cc08:	add	x22, sp, #0x98
    cc0c:	ldr	x3, [x3, #3984]
    cc10:	mov	w28, #0x660b                	// #26123
    cc14:	ldr	x0, [x0, #3896]
    cc18:	adrp	x26, c000 <find_charset_locale@@Base+0x268>
    cc1c:	str	x2, [x3]
    cc20:	add	x2, sp, #0x90
    cc24:	str	x2, [sp, #112]
    cc28:	add	x24, sp, #0x88
    cc2c:	add	x23, sp, #0x80
    cc30:	add	x19, sp, #0xd0
    cc34:	bl	acb0 <new_string_list@plt>
    cc38:	add	x26, x26, #0xae0
    cc3c:	ldr	x1, [x27]
    cc40:	mov	x21, x0
    cc44:	mov	x8, x22
    cc48:	mov	x0, x27
    cc4c:	movk	w28, #0xc020, lsl #16
    cc50:	ldr	x1, [x1, #160]
    cc54:	blr	x1
    cc58:	ldr	x3, [sp, #152]
    cc5c:	mov	x2, x24
    cc60:	mov	x1, x23
    cc64:	mov	x0, x22
    cc68:	ldr	x3, [x3, #176]
    cc6c:	blr	x3
    cc70:	tst	w0, #0xff
    cc74:	b.eq	ccf8 <order_files@@Base+0x178>  // b.none
    cc78:	ldr	x1, [sp, #128]
    cc7c:	mov	w0, w20
    cc80:	mov	w2, #0x0                   	// #0
    cc84:	bl	ae90 <openat@plt>
    cc88:	mov	w25, w0
    cc8c:	tbnz	w0, #31, cc58 <order_files@@Base+0xd8>
    cc90:	ldr	x5, [sp, #304]
    cc94:	mov	w3, #0x1                   	// #1
    cc98:	stp	xzr, xzr, [x19]
    cc9c:	mov	x2, x19
    cca0:	mov	w1, w28
    cca4:	stp	xzr, xzr, [x19, #16]
    cca8:	stp	xzr, xzr, [x19, #32]
    ccac:	stp	xzr, xzr, [x19, #48]
    ccb0:	stp	xzr, xzr, [x19, #64]
    ccb4:	str	xzr, [x19, #80]
    ccb8:	str	x5, [sp, #216]
    ccbc:	str	w3, [sp, #232]
    ccc0:	bl	ab50 <rpl_ioctl@plt>
    ccc4:	cbz	w0, cd60 <order_files@@Base+0x1e0>
    ccc8:	mov	w0, w25
    cccc:	bl	a850 <close@plt>
    ccd0:	ldr	x0, [sp, #128]
    ccd4:	bl	a730 <xstrdup@plt>
    ccd8:	mov	x2, x0
    ccdc:	ldr	x3, [x21]
    cce0:	mov	x1, x26
    cce4:	mov	x0, x21
    cce8:	ldr	x3, [x3, #224]
    ccec:	blr	x3
    ccf0:	cbnz	x0, cc58 <order_files@@Base+0xd8>
    ccf4:	bl	a890 <xalloc_die@plt>
    ccf8:	ldr	x1, [sp, #152]
    ccfc:	mov	x0, x22
    cd00:	ldr	x1, [x1, #184]
    cd04:	blr	x1
    cd08:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
    cd0c:	ldr	x19, [x0, #3984]
    cd10:	ldr	x0, [x19]
    cd14:	ldr	x1, [x0]
    cd18:	ldr	x1, [x1, #40]
    cd1c:	blr	x1
    cd20:	str	xzr, [x19]
    cd24:	mov	w0, w20
    cd28:	bl	a850 <close@plt>
    cd2c:	ldr	x1, [x27]
    cd30:	mov	x0, x27
    cd34:	ldr	x1, [x1, #152]
    cd38:	blr	x1
    cd3c:	ldr	x0, [sp, #104]
    cd40:	ldp	x19, x20, [sp, #16]
    cd44:	ldp	x23, x24, [sp, #48]
    cd48:	str	x21, [x0]
    cd4c:	ldp	x21, x22, [sp, #32]
    cd50:	ldp	x25, x26, [sp, #64]
    cd54:	ldp	x27, x28, [sp, #80]
    cd58:	ldp	x29, x30, [sp], #416
    cd5c:	ret
    cd60:	mov	x0, #0x8                   	// #8
    cd64:	bl	a710 <xmalloc@plt>
    cd68:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
    cd6c:	mov	x2, x0
    cd70:	ldr	x3, [sp, #112]
    cd74:	ldr	x5, [x1, #3984]
    cd78:	ldr	x1, [sp, #128]
    cd7c:	ldr	x5, [x5]
    cd80:	str	x5, [sp, #120]
    cd84:	ldr	x0, [sp, #248]
    cd88:	ldr	x6, [x5]
    cd8c:	ldr	x6, [x6, #24]
    cd90:	str	x0, [x2]
    cd94:	mov	x0, x5
    cd98:	blr	x6
    cd9c:	cmp	w0, #0x0
    cda0:	cbnz	w0, cdbc <order_files@@Base+0x23c>
    cda4:	ldr	x5, [sp, #120]
    cda8:	ldr	x1, [x5, #24]
    cdac:	cbz	x1, ccc8 <order_files@@Base+0x148>
    cdb0:	ldr	x0, [sp, #144]
    cdb4:	blr	x1
    cdb8:	b	ccc8 <order_files@@Base+0x148>
    cdbc:	b.ge	ccc8 <order_files@@Base+0x148>  // b.tcont
    cdc0:	bl	a890 <xalloc_die@plt>
    cdc4:	mov	w0, w20
    cdc8:	bl	a850 <close@plt>
    cdcc:	ldp	x19, x20, [sp, #16]
    cdd0:	b	cd50 <order_files@@Base+0x1d0>
    cdd4:	nop

000000000000cdd8 <pathsearch_executable@@Base>:
    cdd8:	stp	x29, x30, [sp, #-240]!
    cddc:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    cde0:	mov	x29, sp
    cde4:	stp	x19, x20, [sp, #16]
    cde8:	mov	x19, x0
    cdec:	add	x0, x1, #0xec0
    cdf0:	bl	aed0 <getenv@plt>
    cdf4:	cbz	x0, ce50 <pathsearch_executable@@Base+0x78>
    cdf8:	mov	x20, x0
    cdfc:	mov	w1, #0x2f                  	// #47
    ce00:	mov	x0, x19
    ce04:	stp	x25, x26, [sp, #64]
    ce08:	bl	ab60 <strchr@plt>
    ce0c:	mov	x26, x0
    ce10:	cbz	x0, ce6c <pathsearch_executable@@Base+0x94>
    ce14:	mov	x1, x19
    ce18:	add	x2, sp, #0x70
    ce1c:	mov	w0, #0x0                   	// #0
    ce20:	bl	aef0 <__xstat@plt>
    ce24:	cmn	w0, #0x1
    ce28:	b.eq	ce64 <pathsearch_executable@@Base+0x8c>  // b.none
    ce2c:	ldr	w0, [sp, #128]
    ce30:	and	w1, w0, #0xf000
    ce34:	cmp	w1, #0x8, lsl #12
    ce38:	b.ne	ce64 <pathsearch_executable@@Base+0x8c>  // b.any
    ce3c:	mov	w1, #0x49                  	// #73
    ce40:	mov	w19, #0x1                   	// #1
    ce44:	tst	w0, w1
    ce48:	ldp	x25, x26, [sp, #64]
    ce4c:	b.ne	ce54 <pathsearch_executable@@Base+0x7c>  // b.any
    ce50:	mov	w19, #0x0                   	// #0
    ce54:	mov	w0, w19
    ce58:	ldp	x19, x20, [sp, #16]
    ce5c:	ldp	x29, x30, [sp], #240
    ce60:	ret
    ce64:	ldp	x25, x26, [sp, #64]
    ce68:	b	ce50 <pathsearch_executable@@Base+0x78>
    ce6c:	mov	x0, x20
    ce70:	adrp	x20, 31000 <vasnprintf@@Base+0x848>
    ce74:	add	x20, x20, #0xec8
    ce78:	stp	x21, x22, [sp, #32]
    ce7c:	add	x22, sp, #0x68
    ce80:	stp	x23, x24, [sp, #48]
    ce84:	bl	a730 <xstrdup@plt>
    ce88:	mov	x1, x20
    ce8c:	mov	x24, x0
    ce90:	mov	x0, x22
    ce94:	str	x24, [sp, #104]
    ce98:	bl	a9a0 <strsep@plt>
    ce9c:	mov	x1, x0
    cea0:	cbz	x0, cf94 <pathsearch_executable@@Base+0x1bc>
    cea4:	adrp	x21, 31000 <vasnprintf@@Base+0x848>
    cea8:	add	x23, sp, #0x70
    ceac:	add	x21, x21, #0xed0
    ceb0:	mov	w25, #0x49                  	// #73
    ceb4:	str	x27, [sp, #80]
    ceb8:	b	ced0 <pathsearch_executable@@Base+0xf8>
    cebc:	mov	x1, x20
    cec0:	mov	x0, x22
    cec4:	bl	a9a0 <strsep@plt>
    cec8:	mov	x1, x0
    cecc:	cbz	x0, cf78 <pathsearch_executable@@Base+0x1a0>
    ced0:	ldrb	w0, [x1]
    ced4:	cbnz	w0, cee0 <pathsearch_executable@@Base+0x108>
    ced8:	mov	x1, x26
    cedc:	cbz	x26, cf84 <pathsearch_executable@@Base+0x1ac>
    cee0:	mov	x2, x19
    cee4:	mov	x0, x21
    cee8:	bl	aac0 <xasprintf@plt>
    ceec:	mov	x27, x0
    cef0:	mov	x1, x27
    cef4:	mov	x2, x23
    cef8:	mov	w0, #0x0                   	// #0
    cefc:	bl	aef0 <__xstat@plt>
    cf00:	mov	w1, w0
    cf04:	mov	x0, x27
    cf08:	cmn	w1, #0x1
    cf0c:	b.eq	cf60 <pathsearch_executable@@Base+0x188>  // b.none
    cf10:	bl	aa50 <free@plt>
    cf14:	ldr	w0, [sp, #128]
    cf18:	and	w1, w0, #0xf000
    cf1c:	cmp	w1, #0x8, lsl #12
    cf20:	b.ne	cebc <pathsearch_executable@@Base+0xe4>  // b.any
    cf24:	tst	w0, w25
    cf28:	b.eq	cebc <pathsearch_executable@@Base+0xe4>  // b.none
    cf2c:	ldr	x27, [sp, #80]
    cf30:	mov	w19, #0x1                   	// #1
    cf34:	mov	x0, x24
    cf38:	bl	aa50 <free@plt>
    cf3c:	mov	x0, x26
    cf40:	bl	aa50 <free@plt>
    cf44:	mov	w0, w19
    cf48:	ldp	x19, x20, [sp, #16]
    cf4c:	ldp	x21, x22, [sp, #32]
    cf50:	ldp	x23, x24, [sp, #48]
    cf54:	ldp	x25, x26, [sp, #64]
    cf58:	ldp	x29, x30, [sp], #240
    cf5c:	ret
    cf60:	bl	aa50 <free@plt>
    cf64:	mov	x1, x20
    cf68:	mov	x0, x22
    cf6c:	bl	a9a0 <strsep@plt>
    cf70:	mov	x1, x0
    cf74:	cbnz	x0, ced0 <pathsearch_executable@@Base+0xf8>
    cf78:	mov	w19, #0x0                   	// #0
    cf7c:	ldr	x27, [sp, #80]
    cf80:	b	cf34 <pathsearch_executable@@Base+0x15c>
    cf84:	bl	b000 <xgetcwd@plt>
    cf88:	mov	x1, x0
    cf8c:	mov	x26, x0
    cf90:	b	cee0 <pathsearch_executable@@Base+0x108>
    cf94:	mov	w19, #0x0                   	// #0
    cf98:	b	cf34 <pathsearch_executable@@Base+0x15c>
    cf9c:	nop

000000000000cfa0 <directory_on_path@@Base>:
    cfa0:	stp	x29, x30, [sp, #-80]!
    cfa4:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    cfa8:	mov	x29, sp
    cfac:	stp	x19, x20, [sp, #16]
    cfb0:	mov	x20, x0
    cfb4:	mov	w19, #0x0                   	// #0
    cfb8:	add	x0, x1, #0xec0
    cfbc:	bl	aed0 <getenv@plt>
    cfc0:	cbz	x0, d06c <directory_on_path@@Base+0xcc>
    cfc4:	adrp	x19, 31000 <vasnprintf@@Base+0x848>
    cfc8:	add	x19, x19, #0xec8
    cfcc:	stp	x21, x22, [sp, #32]
    cfd0:	add	x21, sp, #0x48
    cfd4:	str	x23, [sp, #48]
    cfd8:	bl	a730 <xstrdup@plt>
    cfdc:	mov	x1, x19
    cfe0:	mov	x22, x0
    cfe4:	mov	x23, #0x0                   	// #0
    cfe8:	mov	x0, x21
    cfec:	str	x22, [sp, #72]
    cff0:	bl	a9a0 <strsep@plt>
    cff4:	cbnz	x0, d01c <directory_on_path@@Base+0x7c>
    cff8:	b	d07c <directory_on_path@@Base+0xdc>
    cffc:	mov	x1, x20
    d000:	bl	a9b0 <strcmp@plt>
    d004:	mov	x1, x19
    d008:	mov	w2, w0
    d00c:	mov	x0, x21
    d010:	cbz	w2, d050 <directory_on_path@@Base+0xb0>
    d014:	bl	a9a0 <strsep@plt>
    d018:	cbz	x0, d07c <directory_on_path@@Base+0xdc>
    d01c:	ldrb	w2, [x0]
    d020:	cbnz	w2, cffc <directory_on_path@@Base+0x5c>
    d024:	mov	x0, x23
    d028:	cbnz	x23, cffc <directory_on_path@@Base+0x5c>
    d02c:	bl	b000 <xgetcwd@plt>
    d030:	mov	x23, x0
    d034:	mov	x1, x20
    d038:	bl	a9b0 <strcmp@plt>
    d03c:	mov	x1, x19
    d040:	mov	w2, w0
    d044:	mov	x0, x21
    d048:	cbnz	w2, d014 <directory_on_path@@Base+0x74>
    d04c:	nop
    d050:	mov	x0, x22
    d054:	bl	aa50 <free@plt>
    d058:	mov	x0, x23
    d05c:	bl	aa50 <free@plt>
    d060:	ldp	x21, x22, [sp, #32]
    d064:	mov	w19, #0x1                   	// #1
    d068:	ldr	x23, [sp, #48]
    d06c:	mov	w0, w19
    d070:	ldp	x19, x20, [sp, #16]
    d074:	ldp	x29, x30, [sp], #80
    d078:	ret
    d07c:	mov	x0, x22
    d080:	bl	aa50 <free@plt>
    d084:	mov	x0, x23
    d088:	mov	w19, #0x0                   	// #0
    d08c:	bl	aa50 <free@plt>
    d090:	mov	w0, w19
    d094:	ldp	x19, x20, [sp, #16]
    d098:	ldp	x21, x22, [sp, #32]
    d09c:	ldr	x23, [sp, #48]
    d0a0:	ldp	x29, x30, [sp], #80
    d0a4:	ret

000000000000d0a8 <sandbox_init@@Base>:
    d0a8:	stp	x29, x30, [sp, #-16]!
    d0ac:	mov	x0, #0x1                   	// #1
    d0b0:	mov	x29, sp
    d0b4:	bl	ace0 <xzalloc@plt>
    d0b8:	strb	wzr, [x0]
    d0bc:	ldp	x29, x30, [sp], #16
    d0c0:	ret
    d0c4:	nop

000000000000d0c8 <sandbox_load@@Base>:
    d0c8:	ret
    d0cc:	nop

000000000000d0d0 <sandbox_load_permissive@@Base>:
    d0d0:	ret
    d0d4:	nop

000000000000d0d8 <sandbox_free@@Base>:
    d0d8:	b	aa50 <free@plt>
    d0dc:	nop

000000000000d0e0 <running_setuid@@Base>:
    d0e0:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
    d0e4:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
    d0e8:	ldr	x1, [x1, #4064]
    d0ec:	ldr	x0, [x0, #3784]
    d0f0:	ldr	w1, [x1]
    d0f4:	ldr	w0, [x0]
    d0f8:	cmp	w1, w0
    d0fc:	cset	w0, ne  // ne = any
    d100:	ret
    d104:	nop

000000000000d108 <get_man_owner@@Base>:
    d108:	stp	x29, x30, [sp, #-32]!
    d10c:	mov	x29, sp
    d110:	stp	x19, x20, [sp, #16]
    d114:	adrp	x19, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    d118:	ldr	x1, [x19, #1064]
    d11c:	cbz	x1, d130 <get_man_owner@@Base+0x28>
    d120:	mov	x0, x1
    d124:	ldp	x19, x20, [sp, #16]
    d128:	ldp	x29, x30, [sp], #32
    d12c:	ret
    d130:	adrp	x20, 31000 <vasnprintf@@Base+0x848>
    d134:	add	x20, x20, #0xed8
    d138:	mov	x0, x20
    d13c:	bl	a720 <getpwnam@plt>
    d140:	str	x0, [x19, #1064]
    d144:	mov	x1, x0
    d148:	cbnz	x0, d120 <get_man_owner@@Base+0x18>
    d14c:	mov	w2, #0x5                   	// #5
    d150:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    d154:	add	x1, x1, #0xee0
    d158:	bl	ada0 <dcgettext@plt>
    d15c:	mov	w1, #0x0                   	// #0
    d160:	mov	x2, x0
    d164:	mov	x3, x20
    d168:	mov	w0, #0x1                   	// #1
    d16c:	bl	a360 <error@plt>
    d170:	ldr	x1, [x19, #1064]
    d174:	cbnz	x1, d120 <get_man_owner@@Base+0x18>
    d178:	adrp	x3, 31000 <vasnprintf@@Base+0x848>
    d17c:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    d180:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    d184:	add	x3, x3, #0xfd8
    d188:	add	x1, x1, #0xf08
    d18c:	add	x0, x0, #0xf18
    d190:	mov	w2, #0x78                  	// #120
    d194:	bl	aea0 <__assert_fail@plt>

000000000000d198 <drop_effective_privs@@Base>:
    d198:	stp	x29, x30, [sp, #-48]!
    d19c:	mov	x29, sp
    d1a0:	stp	x19, x20, [sp, #16]
    d1a4:	adrp	x19, 4c000 <vasnprintf@@Base+0x1b848>
    d1a8:	adrp	x20, 4c000 <vasnprintf@@Base+0x1b848>
    d1ac:	ldr	x1, [x19, #3952]
    d1b0:	ldr	x0, [x20, #4064]
    d1b4:	ldr	w1, [x1]
    d1b8:	ldr	w0, [x0]
    d1bc:	cmp	w1, w0
    d1c0:	b.ne	d1ec <drop_effective_privs@@Base+0x54>  // b.any
    d1c4:	adrp	x2, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    d1c8:	add	x2, x2, #0x428
    d1cc:	ldp	x19, x20, [sp, #16]
    d1d0:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    d1d4:	ldr	w1, [x2, #8]
    d1d8:	add	x0, x0, #0xf58
    d1dc:	add	w1, w1, #0x1
    d1e0:	str	w1, [x2, #8]
    d1e4:	ldp	x29, x30, [sp], #48
    d1e8:	b	a570 <debug@plt>
    d1ec:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    d1f0:	add	x0, x0, #0xf28
    d1f4:	bl	a570 <debug@plt>
    d1f8:	bl	a680 <idpriv_temp_drop@plt>
    d1fc:	cbnz	w0, d22c <drop_effective_privs@@Base+0x94>
    d200:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
    d204:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
    d208:	ldr	x20, [x20, #4064]
    d20c:	ldr	x1, [x1, #3960]
    d210:	ldr	x19, [x19, #3952]
    d214:	ldr	x0, [x0, #3792]
    d218:	ldr	w1, [x1]
    d21c:	ldr	w2, [x20]
    d220:	str	w1, [x0]
    d224:	str	w2, [x19]
    d228:	b	d1c4 <drop_effective_privs@@Base+0x2c>
    d22c:	str	x21, [sp, #32]
    d230:	bl	aeb0 <__errno_location@plt>
    d234:	mov	x3, x0
    d238:	mov	w2, #0x5                   	// #5
    d23c:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    d240:	mov	x0, #0x0                   	// #0
    d244:	add	x1, x1, #0xf40
    d248:	ldr	w21, [x3]
    d24c:	bl	ada0 <dcgettext@plt>
    d250:	mov	x2, x0
    d254:	mov	w0, #0x2                   	// #2
    d258:	mov	w1, w21
    d25c:	bl	a360 <error@plt>
    d260:	ldr	x21, [sp, #32]
    d264:	b	d200 <drop_effective_privs@@Base+0x68>

000000000000d268 <init_security@@Base>:
    d268:	stp	x29, x30, [sp, #-32]!
    d26c:	mov	x29, sp
    d270:	str	x19, [sp, #16]
    d274:	adrp	x19, 4c000 <vasnprintf@@Base+0x1b848>
    d278:	bl	a4a0 <getuid@plt>
    d27c:	ldr	x19, [x19, #4064]
    d280:	str	w0, [x19]
    d284:	bl	a3f0 <geteuid@plt>
    d288:	adrp	x4, 4c000 <vasnprintf@@Base+0x1b848>
    d28c:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
    d290:	ldr	w1, [x19]
    d294:	mov	w2, w0
    d298:	ldr	x4, [x4, #3784]
    d29c:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    d2a0:	ldr	x3, [x3, #3952]
    d2a4:	add	x0, x0, #0xf70
    d2a8:	adrp	x19, 4c000 <vasnprintf@@Base+0x1b848>
    d2ac:	str	w2, [x4]
    d2b0:	str	w2, [x3]
    d2b4:	bl	a570 <debug@plt>
    d2b8:	bl	aa90 <getgid@plt>
    d2bc:	ldr	x19, [x19, #3960]
    d2c0:	str	w0, [x19]
    d2c4:	bl	a3b0 <getegid@plt>
    d2c8:	adrp	x4, 4c000 <vasnprintf@@Base+0x1b848>
    d2cc:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
    d2d0:	ldr	w1, [x19]
    d2d4:	mov	w2, w0
    d2d8:	ldr	x4, [x4, #3760]
    d2dc:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    d2e0:	ldr	x3, [x3, #3792]
    d2e4:	add	x0, x0, #0xf88
    d2e8:	str	w2, [x4]
    d2ec:	str	w2, [x3]
    d2f0:	bl	a570 <debug@plt>
    d2f4:	ldr	x19, [sp, #16]
    d2f8:	adrp	x0, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    d2fc:	ldp	x29, x30, [sp], #32
    d300:	str	wzr, [x0, #1072]
    d304:	b	a8c0 <drop_effective_privs@plt>

000000000000d308 <regain_effective_privs@@Base>:
    d308:	stp	x29, x30, [sp, #-48]!
    d30c:	mov	x29, sp
    d310:	stp	x19, x20, [sp, #16]
    d314:	adrp	x19, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    d318:	add	x19, x19, #0x428
    d31c:	ldr	w1, [x19, #8]
    d320:	cbnz	w1, d398 <regain_effective_privs@@Base+0x90>
    d324:	adrp	x19, 4c000 <vasnprintf@@Base+0x1b848>
    d328:	adrp	x20, 4c000 <vasnprintf@@Base+0x1b848>
    d32c:	ldr	x1, [x19, #3952]
    d330:	ldr	x0, [x20, #3784]
    d334:	ldr	w1, [x1]
    d338:	ldr	w0, [x0]
    d33c:	cmp	w1, w0
    d340:	b.ne	d350 <regain_effective_privs@@Base+0x48>  // b.any
    d344:	ldp	x19, x20, [sp, #16]
    d348:	ldp	x29, x30, [sp], #48
    d34c:	ret
    d350:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    d354:	add	x0, x0, #0xfb8
    d358:	bl	a570 <debug@plt>
    d35c:	bl	aca0 <idpriv_temp_restore@plt>
    d360:	cbnz	w0, d3c0 <regain_effective_privs@@Base+0xb8>
    d364:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
    d368:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
    d36c:	ldr	x20, [x20, #3784]
    d370:	ldr	x1, [x1, #3760]
    d374:	ldr	x19, [x19, #3952]
    d378:	ldr	x0, [x0, #3792]
    d37c:	ldr	w2, [x20]
    d380:	ldr	w1, [x1]
    d384:	str	w2, [x19]
    d388:	str	w1, [x0]
    d38c:	ldp	x19, x20, [sp, #16]
    d390:	ldp	x29, x30, [sp], #48
    d394:	ret
    d398:	sub	w1, w1, #0x1
    d39c:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    d3a0:	add	x0, x0, #0xfa0
    d3a4:	str	w1, [x19, #8]
    d3a8:	bl	a570 <debug@plt>
    d3ac:	ldr	w0, [x19, #8]
    d3b0:	cbz	w0, d324 <regain_effective_privs@@Base+0x1c>
    d3b4:	ldp	x19, x20, [sp, #16]
    d3b8:	ldp	x29, x30, [sp], #48
    d3bc:	ret
    d3c0:	str	x21, [sp, #32]
    d3c4:	bl	aeb0 <__errno_location@plt>
    d3c8:	mov	x3, x0
    d3cc:	mov	w2, #0x5                   	// #5
    d3d0:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    d3d4:	mov	x0, #0x0                   	// #0
    d3d8:	add	x1, x1, #0xf40
    d3dc:	ldr	w21, [x3]
    d3e0:	bl	ada0 <dcgettext@plt>
    d3e4:	mov	x2, x0
    d3e8:	mov	w0, #0x2                   	// #2
    d3ec:	mov	w1, w21
    d3f0:	bl	a360 <error@plt>
    d3f4:	ldr	x21, [sp, #32]
    d3f8:	b	d364 <regain_effective_privs@@Base+0x5c>
    d3fc:	nop

000000000000d400 <drop_privs@@Base>:
    d400:	stp	x29, x30, [sp, #-32]!
    d404:	mov	x29, sp
    d408:	bl	ac10 <idpriv_drop@plt>
    d40c:	cbnz	w0, d418 <drop_privs@@Base+0x18>
    d410:	ldp	x29, x30, [sp], #32
    d414:	ret
    d418:	str	x19, [sp, #16]
    d41c:	bl	aeb0 <__errno_location@plt>
    d420:	mov	x3, x0
    d424:	mov	w2, #0x5                   	// #5
    d428:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
    d42c:	mov	x0, #0x0                   	// #0
    d430:	add	x1, x1, #0xf40
    d434:	ldr	w19, [x3]
    d438:	bl	ada0 <dcgettext@plt>
    d43c:	mov	x2, x0
    d440:	mov	w0, #0x2                   	// #2
    d444:	mov	w1, w19
    d448:	ldr	x19, [sp, #16]
    d44c:	ldp	x29, x30, [sp], #32
    d450:	b	a360 <error@plt>
    d454:	nop

000000000000d458 <create_tempdir@@Base>:
    d458:	stp	x29, x30, [sp, #-48]!
    d45c:	mov	x29, sp
    d460:	stp	x19, x20, [sp, #16]
    d464:	str	x21, [sp, #32]
    d468:	mov	x21, x0
    d46c:	bl	a4a0 <getuid@plt>
    d470:	mov	w19, w0
    d474:	bl	a3f0 <geteuid@plt>
    d478:	cmp	w19, w0
    d47c:	b.eq	d4f8 <create_tempdir@@Base+0xa0>  // b.none
    d480:	adrp	x19, 31000 <vasnprintf@@Base+0x848>
    d484:	add	x20, x19, #0xfe8
    d488:	mov	x0, x20
    d48c:	mov	w1, #0x2                   	// #2
    d490:	bl	a950 <access@plt>
    d494:	cbnz	w0, d4d0 <create_tempdir@@Base+0x78>
    d498:	add	x19, x19, #0xfe8
    d49c:	mov	x1, x19
    d4a0:	mov	x2, x21
    d4a4:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
    d4a8:	add	x0, x0, #0x0
    d4ac:	bl	aac0 <xasprintf@plt>
    d4b0:	mov	x19, x0
    d4b4:	bl	a8e0 <mkdtemp@plt>
    d4b8:	cbz	x0, d4e0 <create_tempdir@@Base+0x88>
    d4bc:	mov	x0, x19
    d4c0:	ldp	x19, x20, [sp, #16]
    d4c4:	ldr	x21, [sp, #32]
    d4c8:	ldp	x29, x30, [sp], #48
    d4cc:	ret
    d4d0:	mov	x0, x20
    d4d4:	mov	w1, #0x2                   	// #2
    d4d8:	bl	a950 <access@plt>
    d4dc:	cbz	w0, d498 <create_tempdir@@Base+0x40>
    d4e0:	mov	x19, #0x0                   	// #0
    d4e4:	mov	x0, x19
    d4e8:	ldp	x19, x20, [sp, #16]
    d4ec:	ldr	x21, [sp, #32]
    d4f0:	ldp	x29, x30, [sp], #48
    d4f4:	ret
    d4f8:	bl	aa90 <getgid@plt>
    d4fc:	mov	w19, w0
    d500:	bl	a3b0 <getegid@plt>
    d504:	cmp	w19, w0
    d508:	b.ne	d480 <create_tempdir@@Base+0x28>  // b.any
    d50c:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    d510:	add	x0, x0, #0xff0
    d514:	bl	aed0 <getenv@plt>
    d518:	mov	x19, x0
    d51c:	cbz	x0, d52c <create_tempdir@@Base+0xd4>
    d520:	mov	w1, #0x2                   	// #2
    d524:	bl	a950 <access@plt>
    d528:	cbz	w0, d49c <create_tempdir@@Base+0x44>
    d52c:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    d530:	add	x0, x0, #0xff8
    d534:	bl	aed0 <getenv@plt>
    d538:	mov	x19, x0
    d53c:	cbz	x0, d480 <create_tempdir@@Base+0x28>
    d540:	mov	w1, #0x2                   	// #2
    d544:	bl	a950 <access@plt>
    d548:	cbnz	w0, d480 <create_tempdir@@Base+0x28>
    d54c:	b	d49c <create_tempdir@@Base+0x44>

000000000000d550 <is_changed@@Base>:
    d550:	stp	x29, x30, [sp, #-288]!
    d554:	mov	x2, x1
    d558:	mov	x29, sp
    d55c:	stp	x19, x20, [sp, #16]
    d560:	mov	x20, x0
    d564:	mov	x19, x1
    d568:	mov	x1, x0
    d56c:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
    d570:	add	x0, x0, #0x10
    d574:	bl	a570 <debug@plt>
    d578:	mov	x1, x20
    d57c:	add	x2, sp, #0x20
    d580:	mov	w0, #0x0                   	// #0
    d584:	bl	aef0 <__xstat@plt>
    d588:	mov	x1, x19
    d58c:	add	x2, sp, #0xa0
    d590:	cbnz	w0, d614 <is_changed@@Base+0xc4>
    d594:	mov	w19, #0xfffffffe            	// #-2
    d598:	bl	aef0 <__xstat@plt>
    d59c:	cbnz	w0, d5f4 <is_changed@@Base+0xa4>
    d5a0:	ldr	x1, [sp, #80]
    d5a4:	mov	w0, #0x4                   	// #4
    d5a8:	ldr	x4, [sp, #208]
    d5ac:	cmp	x1, #0x0
    d5b0:	ldr	x3, [sp, #120]
    d5b4:	mov	w5, #0x6                   	// #6
    d5b8:	ldr	x2, [sp, #248]
    d5bc:	csel	w0, w0, w5, ne  // ne = any
    d5c0:	mov	w19, #0x2                   	// #2
    d5c4:	csel	w19, wzr, w19, ne  // ne = any
    d5c8:	cmp	x4, #0x0
    d5cc:	mov	w1, #0x1                   	// #1
    d5d0:	csel	w19, w19, w0, ne  // ne = any
    d5d4:	cmp	x3, x2
    d5d8:	ldr	x2, [sp, #128]
    d5dc:	ldr	x0, [sp, #256]
    d5e0:	b.lt	d5f0 <is_changed@@Base+0xa0>  // b.tstop
    d5e4:	b.gt	d5f0 <is_changed@@Base+0xa0>
    d5e8:	cmp	w2, w0
    d5ec:	cset	w1, ne  // ne = any
    d5f0:	orr	w19, w19, w1
    d5f4:	mov	w1, w19
    d5f8:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
    d5fc:	add	x0, x0, #0x28
    d600:	bl	a570 <debug@plt>
    d604:	mov	w0, w19
    d608:	ldp	x19, x20, [sp, #16]
    d60c:	ldp	x29, x30, [sp], #288
    d610:	ret
    d614:	mov	w0, #0x0                   	// #0
    d618:	bl	aef0 <__xstat@plt>
    d61c:	cmp	w0, #0x0
    d620:	mov	w19, #0xfffffffd            	// #-3
    d624:	csinv	w19, w19, wzr, ne  // ne = any
    d628:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
    d62c:	mov	w1, w19
    d630:	add	x0, x0, #0x28
    d634:	bl	a570 <debug@plt>
    d638:	mov	w0, w19
    d63c:	ldp	x19, x20, [sp, #16]
    d640:	ldp	x29, x30, [sp], #288
    d644:	ret

000000000000d648 <is_directory@@Base>:
    d648:	stp	x29, x30, [sp, #-144]!
    d64c:	mov	x1, x0
    d650:	mov	w0, #0x0                   	// #0
    d654:	mov	x29, sp
    d658:	add	x2, sp, #0x10
    d65c:	bl	aef0 <__xstat@plt>
    d660:	cbnz	w0, d66c <is_directory@@Base+0x24>
    d664:	ldr	w0, [sp, #32]
    d668:	ubfx	x0, x0, #14, #1
    d66c:	ldp	x29, x30, [sp], #144
    d670:	ret
    d674:	nop

000000000000d678 <escape_shell@@Base>:
    d678:	stp	x29, x30, [sp, #-64]!
    d67c:	mov	x29, sp
    d680:	stp	x21, x22, [sp, #32]
    d684:	cbz	x0, d730 <escape_shell@@Base+0xb8>
    d688:	mov	x22, x0
    d68c:	stp	x19, x20, [sp, #16]
    d690:	bl	a340 <strlen@plt>
    d694:	lsl	x0, x0, #1
    d698:	add	x0, x0, #0x1
    d69c:	bl	a710 <xmalloc@plt>
    d6a0:	ldrb	w19, [x22]
    d6a4:	mov	x21, x0
    d6a8:	cbz	w19, d708 <escape_shell@@Base+0x90>
    d6ac:	mov	x20, x0
    d6b0:	str	x23, [sp, #48]
    d6b4:	adrp	x23, 32000 <vasnprintf@@Base+0x1848>
    d6b8:	add	x23, x23, #0x30
    d6bc:	nop
    d6c0:	and	w2, w19, #0xffffffdf
    d6c4:	sub	w3, w19, #0x30
    d6c8:	sub	w2, w2, #0x41
    d6cc:	and	w3, w3, #0xff
    d6d0:	and	w2, w2, #0xff
    d6d4:	mov	w1, w19
    d6d8:	cmp	w2, #0x19
    d6dc:	mov	x0, x23
    d6e0:	ccmp	w3, #0x9, #0x0, hi  // hi = pmore
    d6e4:	b.ls	d6f0 <escape_shell@@Base+0x78>  // b.plast
    d6e8:	bl	ab60 <strchr@plt>
    d6ec:	cbz	x0, d720 <escape_shell@@Base+0xa8>
    d6f0:	add	x0, x20, #0x1
    d6f4:	strb	w19, [x20]
    d6f8:	mov	x20, x0
    d6fc:	ldrb	w19, [x22, #1]!
    d700:	cbnz	w19, d6c0 <escape_shell@@Base+0x48>
    d704:	ldr	x23, [sp, #48]
    d708:	strb	wzr, [x0]
    d70c:	mov	x0, x21
    d710:	ldp	x19, x20, [sp, #16]
    d714:	ldp	x21, x22, [sp, #32]
    d718:	ldp	x29, x30, [sp], #64
    d71c:	ret
    d720:	add	x0, x20, #0x2
    d724:	strb	w19, [x20, #1]
    d728:	mov	w19, #0x5c                  	// #92
    d72c:	b	d6f4 <escape_shell@@Base+0x7c>
    d730:	mov	x21, #0x0                   	// #0
    d734:	mov	x0, x21
    d738:	ldp	x21, x22, [sp, #32]
    d73c:	ldp	x29, x30, [sp], #64
    d740:	ret
    d744:	nop

000000000000d748 <remove_directory@@Base>:
    d748:	stp	x29, x30, [sp, #-208]!
    d74c:	mov	x29, sp
    d750:	stp	x21, x22, [sp, #32]
    d754:	mov	x21, x0
    d758:	stp	x23, x24, [sp, #48]
    d75c:	mov	w24, w1
    d760:	bl	a4c0 <opendir@plt>
    d764:	cbz	x0, d998 <remove_directory@@Base+0x250>
    d768:	stp	x19, x20, [sp, #16]
    d76c:	mov	x20, x0
    d770:	cbz	w24, d844 <remove_directory@@Base+0xfc>
    d774:	adrp	x22, 31000 <vasnprintf@@Base+0x848>
    d778:	add	x22, x22, #0xed0
    d77c:	str	x25, [sp, #64]
    d780:	add	x25, sp, #0x50
    d784:	mov	w23, #0x2e2e                	// #11822
    d788:	mov	x0, x20
    d78c:	bl	a7d0 <readdir@plt>
    d790:	mov	x1, x21
    d794:	mov	x3, x0
    d798:	mov	x0, x22
    d79c:	cbz	x3, d814 <remove_directory@@Base+0xcc>
    d7a0:	add	x4, x3, #0x13
    d7a4:	ldurh	w3, [x3, #19]
    d7a8:	mov	x2, x4
    d7ac:	cmp	w3, #0x2e
    d7b0:	b.eq	d788 <remove_directory@@Base+0x40>  // b.none
    d7b4:	cmp	w3, w23
    d7b8:	b.eq	d8e0 <remove_directory@@Base+0x198>  // b.none
    d7bc:	bl	aac0 <xasprintf@plt>
    d7c0:	mov	x1, x0
    d7c4:	mov	x19, x0
    d7c8:	mov	x2, x25
    d7cc:	mov	w0, #0x0                   	// #0
    d7d0:	bl	aef0 <__xstat@plt>
    d7d4:	cmn	w0, #0x1
    d7d8:	b.eq	d908 <remove_directory@@Base+0x1c0>  // b.none
    d7dc:	ldr	w0, [sp, #96]
    d7e0:	and	w0, w0, #0xf000
    d7e4:	cmp	w0, #0x4, lsl #12
    d7e8:	b.eq	d96c <remove_directory@@Base+0x224>  // b.none
    d7ec:	cmp	w0, #0x8, lsl #12
    d7f0:	b.eq	d954 <remove_directory@@Base+0x20c>  // b.none
    d7f4:	mov	x0, x19
    d7f8:	bl	aa50 <free@plt>
    d7fc:	mov	x0, x20
    d800:	bl	a7d0 <readdir@plt>
    d804:	mov	x1, x21
    d808:	mov	x3, x0
    d80c:	mov	x0, x22
    d810:	cbnz	x3, d7a0 <remove_directory@@Base+0x58>
    d814:	ldr	x25, [sp, #64]
    d818:	mov	x0, x20
    d81c:	bl	a820 <closedir@plt>
    d820:	mov	x0, x21
    d824:	bl	a9e0 <rmdir@plt>
    d828:	ldp	x19, x20, [sp, #16]
    d82c:	cmn	w0, #0x1
    d830:	csetm	w0, eq  // eq = none
    d834:	ldp	x21, x22, [sp, #32]
    d838:	ldp	x23, x24, [sp, #48]
    d83c:	ldp	x29, x30, [sp], #208
    d840:	ret
    d844:	adrp	x22, 31000 <vasnprintf@@Base+0x848>
    d848:	add	x24, sp, #0x50
    d84c:	add	x22, x22, #0xed0
    d850:	mov	w23, #0x2e2e                	// #11822
    d854:	nop
    d858:	mov	x0, x20
    d85c:	bl	a7d0 <readdir@plt>
    d860:	mov	x1, x21
    d864:	mov	x3, x0
    d868:	mov	x0, x22
    d86c:	cbz	x3, d818 <remove_directory@@Base+0xd0>
    d870:	add	x4, x3, #0x13
    d874:	ldurh	w3, [x3, #19]
    d878:	mov	x2, x4
    d87c:	cmp	w3, #0x2e
    d880:	b.eq	d858 <remove_directory@@Base+0x110>  // b.none
    d884:	cmp	w3, w23
    d888:	b.eq	d934 <remove_directory@@Base+0x1ec>  // b.none
    d88c:	bl	aac0 <xasprintf@plt>
    d890:	mov	x1, x0
    d894:	mov	x19, x0
    d898:	mov	x2, x24
    d89c:	mov	w0, #0x0                   	// #0
    d8a0:	bl	aef0 <__xstat@plt>
    d8a4:	cmn	w0, #0x1
    d8a8:	b.eq	d90c <remove_directory@@Base+0x1c4>  // b.none
    d8ac:	ldr	w0, [sp, #96]
    d8b0:	and	w0, w0, #0xf000
    d8b4:	cmp	w0, #0x8, lsl #12
    d8b8:	b.eq	d940 <remove_directory@@Base+0x1f8>  // b.none
    d8bc:	mov	x0, x19
    d8c0:	bl	aa50 <free@plt>
    d8c4:	mov	x0, x20
    d8c8:	bl	a7d0 <readdir@plt>
    d8cc:	mov	x1, x21
    d8d0:	mov	x3, x0
    d8d4:	mov	x0, x22
    d8d8:	cbnz	x3, d870 <remove_directory@@Base+0x128>
    d8dc:	b	d818 <remove_directory@@Base+0xd0>
    d8e0:	ldrb	w3, [x4, #2]
    d8e4:	cbz	w3, d788 <remove_directory@@Base+0x40>
    d8e8:	bl	aac0 <xasprintf@plt>
    d8ec:	mov	x1, x0
    d8f0:	mov	x19, x0
    d8f4:	mov	x2, x25
    d8f8:	mov	w0, #0x0                   	// #0
    d8fc:	bl	aef0 <__xstat@plt>
    d900:	cmn	w0, #0x1
    d904:	b.ne	d7dc <remove_directory@@Base+0x94>  // b.any
    d908:	ldr	x25, [sp, #64]
    d90c:	mov	x0, x19
    d910:	bl	aa50 <free@plt>
    d914:	mov	x0, x20
    d918:	bl	a820 <closedir@plt>
    d91c:	mov	w0, #0xffffffff            	// #-1
    d920:	ldp	x19, x20, [sp, #16]
    d924:	ldp	x21, x22, [sp, #32]
    d928:	ldp	x23, x24, [sp, #48]
    d92c:	ldp	x29, x30, [sp], #208
    d930:	ret
    d934:	ldrb	w3, [x4, #2]
    d938:	cbz	w3, d858 <remove_directory@@Base+0x110>
    d93c:	b	d88c <remove_directory@@Base+0x144>
    d940:	mov	x0, x19
    d944:	bl	af50 <unlink@plt>
    d948:	cmn	w0, #0x1
    d94c:	b.ne	d8bc <remove_directory@@Base+0x174>  // b.any
    d950:	b	d90c <remove_directory@@Base+0x1c4>
    d954:	mov	x0, x19
    d958:	bl	af50 <unlink@plt>
    d95c:	cmn	w0, #0x1
    d960:	b.ne	d7f4 <remove_directory@@Base+0xac>  // b.any
    d964:	ldr	x25, [sp, #64]
    d968:	b	d90c <remove_directory@@Base+0x1c4>
    d96c:	mov	w1, w24
    d970:	mov	x0, x19
    d974:	bl	d748 <remove_directory@@Base>
    d978:	cmn	w0, #0x1
    d97c:	b.ne	d7f4 <remove_directory@@Base+0xac>  // b.any
    d980:	mov	x0, x19
    d984:	bl	aa50 <free@plt>
    d988:	mov	x0, x20
    d98c:	bl	a820 <closedir@plt>
    d990:	ldr	x25, [sp, #64]
    d994:	b	d91c <remove_directory@@Base+0x1d4>
    d998:	mov	w0, #0xffffffff            	// #-1
    d99c:	b	d834 <remove_directory@@Base+0xec>

000000000000d9a0 <trim_spaces@@Base>:
    d9a0:	stp	x29, x30, [sp, #-32]!
    d9a4:	mov	x29, sp
    d9a8:	str	x19, [sp, #16]
    d9ac:	mov	x19, x0
    d9b0:	ldrb	w0, [x0]
    d9b4:	cmp	w0, #0x20
    d9b8:	b.ne	d9cc <trim_spaces@@Base+0x2c>  // b.any
    d9bc:	nop
    d9c0:	ldrb	w0, [x19, #1]!
    d9c4:	cmp	w0, #0x20
    d9c8:	b.eq	d9c0 <trim_spaces@@Base+0x20>  // b.none
    d9cc:	mov	x0, x19
    d9d0:	bl	a340 <strlen@plt>
    d9d4:	cbz	w0, da08 <trim_spaces@@Base+0x68>
    d9d8:	sxtw	x1, w0
    d9dc:	sub	x2, x19, #0x1
    d9e0:	b	d9ec <trim_spaces@@Base+0x4c>
    d9e4:	sub	x1, x1, #0x1
    d9e8:	cbz	w1, da08 <trim_spaces@@Base+0x68>
    d9ec:	ldrb	w0, [x2, x1]
    d9f0:	cmp	w0, #0x20
    d9f4:	b.eq	d9e4 <trim_spaces@@Base+0x44>  // b.none
    d9f8:	mov	x0, x19
    d9fc:	ldr	x19, [sp, #16]
    da00:	ldp	x29, x30, [sp], #32
    da04:	b	acf0 <xstrndup@plt>
    da08:	mov	x0, x19
    da0c:	mov	x1, #0x0                   	// #0
    da10:	ldr	x19, [sp, #16]
    da14:	ldp	x29, x30, [sp], #32
    da18:	b	acf0 <xstrndup@plt>
    da1c:	nop

000000000000da20 <lang_dir@@Base>:
    da20:	stp	x29, x30, [sp, #-48]!
    da24:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
    da28:	mov	x29, sp
    da2c:	stp	x19, x20, [sp, #16]
    da30:	mov	x19, x0
    da34:	add	x0, x1, #0xff0
    da38:	bl	a730 <xstrdup@plt>
    da3c:	mov	x20, x0
    da40:	cbz	x19, dae8 <lang_dir@@Base+0xc8>
    da44:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
    da48:	mov	x0, x19
    da4c:	add	x1, x1, #0x48
    da50:	mov	x2, #0x4                   	// #4
    da54:	bl	a6c0 <strncmp@plt>
    da58:	cbnz	w0, daf8 <lang_dir@@Base+0xd8>
    da5c:	add	x0, x19, #0x2
    da60:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
    da64:	add	x1, x1, #0x88
    da68:	stp	x21, x22, [sp, #32]
    da6c:	bl	ad70 <strstr@plt>
    da70:	mov	x21, x0
    da74:	cbz	x0, db2c <lang_dir@@Base+0x10c>
    da78:	ldrb	w22, [x21, #5]
    da7c:	cmp	w22, #0x2f
    da80:	b.ne	db2c <lang_dir@@Base+0x10c>  // b.any
    da84:	ldrb	w1, [x21, #4]
    da88:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
    da8c:	add	x0, x0, #0x58
    da90:	bl	ab60 <strchr@plt>
    da94:	cbz	x0, db2c <lang_dir@@Base+0x10c>
    da98:	add	x0, x19, #0x3
    da9c:	cmp	x21, x0
    daa0:	b.eq	db40 <lang_dir@@Base+0x120>  // b.none
    daa4:	add	x19, x19, #0x4
    daa8:	mov	w1, w22
    daac:	mov	x0, x19
    dab0:	bl	ab60 <strchr@plt>
    dab4:	mov	x21, x0
    dab8:	cbz	x0, db2c <lang_dir@@Base+0x10c>
    dabc:	mov	x0, x20
    dac0:	bl	aa50 <free@plt>
    dac4:	sub	x1, x21, x19
    dac8:	mov	x0, x19
    dacc:	bl	acf0 <xstrndup@plt>
    dad0:	mov	x20, x0
    dad4:	mov	x1, x20
    dad8:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
    dadc:	add	x0, x0, #0x68
    dae0:	bl	a570 <debug@plt>
    dae4:	ldp	x21, x22, [sp, #32]
    dae8:	mov	x0, x20
    daec:	ldp	x19, x20, [sp, #16]
    daf0:	ldp	x29, x30, [sp], #48
    daf4:	ret
    daf8:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
    dafc:	mov	x0, x19
    db00:	add	x1, x1, #0x50
    db04:	bl	ad70 <strstr@plt>
    db08:	cbz	x0, dae8 <lang_dir@@Base+0xc8>
    db0c:	add	x19, x0, #0x1
    db10:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
    db14:	add	x0, x19, #0x2
    db18:	add	x1, x1, #0x88
    db1c:	stp	x21, x22, [sp, #32]
    db20:	bl	ad70 <strstr@plt>
    db24:	mov	x21, x0
    db28:	cbnz	x0, da78 <lang_dir@@Base+0x58>
    db2c:	mov	x0, x20
    db30:	ldp	x19, x20, [sp, #16]
    db34:	ldp	x21, x22, [sp, #32]
    db38:	ldp	x29, x30, [sp], #48
    db3c:	ret
    db40:	mov	x0, x20
    db44:	bl	aa50 <free@plt>
    db48:	ldp	x19, x20, [sp, #16]
    db4c:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
    db50:	ldp	x21, x22, [sp, #32]
    db54:	add	x0, x0, #0xcf8
    db58:	ldp	x29, x30, [sp], #48
    db5c:	b	a730 <xstrdup@plt>

000000000000db60 <init_locale@@Base>:
    db60:	stp	x29, x30, [sp, #-32]!
    db64:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
    db68:	mov	w0, #0x6                   	// #6
    db6c:	mov	x29, sp
    db70:	add	x1, x1, #0xff0
    db74:	stp	x19, x20, [sp, #16]
    db78:	adrp	x19, 32000 <vasnprintf@@Base+0x1848>
    db7c:	bl	afd0 <setlocale@plt>
    db80:	cbz	x0, dbd4 <init_locale@@Base+0x74>
    db84:	mov	w2, #0x1                   	// #1
    db88:	add	x0, x19, #0x90
    db8c:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
    db90:	adrp	x20, 32000 <vasnprintf@@Base+0x1848>
    db94:	add	x1, x1, #0x210
    db98:	add	x20, x20, #0x100
    db9c:	bl	a460 <setenv@plt>
    dba0:	adrp	x19, 32000 <vasnprintf@@Base+0x1848>
    dba4:	add	x19, x19, #0x118
    dba8:	mov	x1, x20
    dbac:	mov	x0, x19
    dbb0:	bl	a6d0 <bindtextdomain@plt>
    dbb4:	mov	x1, x20
    dbb8:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
    dbbc:	add	x0, x0, #0x120
    dbc0:	bl	a6d0 <bindtextdomain@plt>
    dbc4:	mov	x0, x19
    dbc8:	ldp	x19, x20, [sp, #16]
    dbcc:	ldp	x29, x30, [sp], #32
    dbd0:	b	a990 <textdomain@plt>
    dbd4:	add	x0, x19, #0x90
    dbd8:	bl	aed0 <getenv@plt>
    dbdc:	cbnz	x0, db84 <init_locale@@Base+0x24>
    dbe0:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
    dbe4:	add	x0, x0, #0xa8
    dbe8:	bl	aed0 <getenv@plt>
    dbec:	cbnz	x0, db84 <init_locale@@Base+0x24>
    dbf0:	adrp	x2, 32000 <vasnprintf@@Base+0x1848>
    dbf4:	mov	w1, #0x0                   	// #0
    dbf8:	add	x2, x2, #0xc0
    dbfc:	bl	a360 <error@plt>
    dc00:	b	db84 <init_locale@@Base+0x24>
    dc04:	nop

000000000000dc08 <word_fnmatch@@Base>:
    dc08:	stp	x29, x30, [sp, #-64]!
    dc0c:	mov	x29, sp
    dc10:	stp	x19, x20, [sp, #16]
    dc14:	stp	x21, x22, [sp, #32]
    dc18:	mov	x22, x0
    dc1c:	mov	x0, x1
    dc20:	bl	a730 <xstrdup@plt>
    dc24:	ldrb	w19, [x0]
    dc28:	mov	x21, x0
    dc2c:	cbz	w19, dcb4 <word_fnmatch@@Base+0xac>
    dc30:	mov	x20, x0
    dc34:	str	x23, [sp, #48]
    dc38:	bl	a9d0 <__ctype_b_loc@plt>
    dc3c:	mov	x23, x0
    dc40:	mov	x1, x21
    dc44:	b	dc58 <word_fnmatch@@Base+0x50>
    dc48:	mov	x1, x5
    dc4c:	ldrb	w19, [x3]
    dc50:	mov	x20, x3
    dc54:	cbz	w19, dcb0 <word_fnmatch@@Base+0xa8>
    dc58:	ldr	x4, [x23]
    dc5c:	ubfiz	x2, x19, #1, #8
    dc60:	cmp	w19, #0x5f
    dc64:	add	x5, x1, #0x1
    dc68:	add	x3, x20, #0x1
    dc6c:	ldrh	w2, [x4, x2]
    dc70:	and	w2, w2, #0x400
    dc74:	ccmp	w2, #0x0, #0x0, ne  // ne = any
    dc78:	b.ne	dc4c <word_fnmatch@@Base+0x44>  // b.any
    dc7c:	cmp	x5, x20
    dc80:	b.cs	dc48 <word_fnmatch@@Base+0x40>  // b.hs, b.nlast
    dc84:	strb	wzr, [x20]
    dc88:	mov	x0, x22
    dc8c:	mov	w2, #0x10                  	// #16
    dc90:	bl	abf0 <fnmatch@plt>
    dc94:	add	x1, x20, #0x1
    dc98:	cbz	w0, dcd0 <word_fnmatch@@Base+0xc8>
    dc9c:	mov	x3, x1
    dca0:	mov	x20, x3
    dca4:	ldrb	w19, [x3]
    dca8:	cbnz	w19, dc58 <word_fnmatch@@Base+0x50>
    dcac:	nop
    dcb0:	ldr	x23, [sp, #48]
    dcb4:	mov	x0, x21
    dcb8:	bl	aa50 <free@plt>
    dcbc:	mov	w0, #0x0                   	// #0
    dcc0:	ldp	x19, x20, [sp, #16]
    dcc4:	ldp	x21, x22, [sp, #32]
    dcc8:	ldp	x29, x30, [sp], #64
    dccc:	ret
    dcd0:	mov	x0, x21
    dcd4:	bl	aa50 <free@plt>
    dcd8:	mov	w0, #0x1                   	// #1
    dcdc:	ldp	x19, x20, [sp, #16]
    dce0:	ldp	x21, x22, [sp, #32]
    dce4:	ldr	x23, [sp, #48]
    dce8:	ldp	x29, x30, [sp], #64
    dcec:	ret

000000000000dcf0 <xregcomp@@Base>:
    dcf0:	stp	x29, x30, [sp, #-48]!
    dcf4:	mov	x29, sp
    dcf8:	stp	x19, x20, [sp, #16]
    dcfc:	mov	x20, x0
    dd00:	stp	x21, x22, [sp, #32]
    dd04:	mov	x21, x1
    dd08:	bl	a5a0 <rpl_regcomp@plt>
    dd0c:	cbnz	w0, dd20 <xregcomp@@Base+0x30>
    dd10:	ldp	x19, x20, [sp, #16]
    dd14:	ldp	x21, x22, [sp, #32]
    dd18:	ldp	x29, x30, [sp], #48
    dd1c:	ret
    dd20:	mov	x1, x20
    dd24:	mov	x3, #0x0                   	// #0
    dd28:	mov	x2, #0x0                   	// #0
    dd2c:	mov	w19, w0
    dd30:	bl	ac20 <rpl_regerror@plt>
    dd34:	mov	x22, x0
    dd38:	bl	a710 <xmalloc@plt>
    dd3c:	mov	x3, x22
    dd40:	mov	x22, x0
    dd44:	mov	x1, x20
    dd48:	mov	x2, x22
    dd4c:	mov	w0, w19
    dd50:	bl	ac20 <rpl_regerror@plt>
    dd54:	mov	w2, #0x5                   	// #5
    dd58:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
    dd5c:	mov	x0, #0x0                   	// #0
    dd60:	add	x1, x1, #0x130
    dd64:	bl	ada0 <dcgettext@plt>
    dd68:	mov	x2, x0
    dd6c:	mov	x4, x22
    dd70:	mov	x3, x21
    dd74:	ldp	x19, x20, [sp, #16]
    dd78:	mov	w1, #0x0                   	// #0
    dd7c:	ldp	x21, x22, [sp, #32]
    dd80:	mov	w0, #0x2                   	// #2
    dd84:	ldp	x29, x30, [sp], #48
    dd88:	b	a360 <error@plt>
    dd8c:	nop

000000000000dd90 <areadlink_with_size@@Base>:
    dd90:	stp	x29, x30, [sp, #-224]!
    dd94:	cmp	x1, #0x0
    dd98:	mov	x29, sp
    dd9c:	stp	x19, x20, [sp, #16]
    dda0:	mov	x19, #0x80                  	// #128
    dda4:	stp	x21, x22, [sp, #32]
    dda8:	mov	x22, x0
    ddac:	stp	x23, x24, [sp, #48]
    ddb0:	cset	w23, ne  // ne = any
    ddb4:	stp	x25, x26, [sp, #64]
    ddb8:	str	x27, [sp, #80]
    ddbc:	cbz	x1, ddcc <areadlink_with_size@@Base+0x3c>
    ddc0:	cmp	x1, #0x401
    ddc4:	mov	x19, #0x401                 	// #1025
    ddc8:	csinc	x19, x19, x1, cs  // cs = hs, nlast
    ddcc:	add	x25, sp, #0x60
    ddd0:	mov	x24, #0x3fffffffffffffff    	// #4611686018427387903
    ddd4:	mov	x26, #0x7ffffffffffffffe    	// #9223372036854775806
    ddd8:	cmp	x19, #0x80
    dddc:	ccmp	w23, #0x0, #0x0, eq  // eq = none
    dde0:	b.eq	de38 <areadlink_with_size@@Base+0xa8>  // b.none
    dde4:	mov	x0, x19
    dde8:	bl	a5f0 <malloc@plt>
    ddec:	mov	x21, x0
    ddf0:	cbz	x0, df78 <areadlink_with_size@@Base+0x1e8>
    ddf4:	mov	x27, x0
    ddf8:	mov	x2, x19
    ddfc:	mov	x1, x21
    de00:	mov	x0, x22
    de04:	bl	a470 <readlink@plt>
    de08:	mov	x20, x0
    de0c:	tbnz	x0, #63, de58 <areadlink_with_size@@Base+0xc8>
    de10:	cmp	x19, x20
    de14:	b.hi	dea4 <areadlink_with_size@@Base+0x114>  // b.pmore
    de18:	mov	x0, x27
    de1c:	bl	aa50 <free@plt>
    de20:	cmp	x19, x24
    de24:	b.hi	de94 <areadlink_with_size@@Base+0x104>  // b.pmore
    de28:	lsl	x19, x19, #1
    de2c:	cmp	x19, #0x80
    de30:	ccmp	w23, #0x0, #0x0, eq  // eq = none
    de34:	b.ne	dde4 <areadlink_with_size@@Base+0x54>  // b.any
    de38:	mov	x21, x25
    de3c:	mov	x2, x19
    de40:	mov	x1, x21
    de44:	mov	x0, x22
    de48:	mov	x27, #0x0                   	// #0
    de4c:	bl	a470 <readlink@plt>
    de50:	mov	x20, x0
    de54:	tbz	x0, #63, de10 <areadlink_with_size@@Base+0x80>
    de58:	bl	aeb0 <__errno_location@plt>
    de5c:	ldr	w0, [x0]
    de60:	cmp	w0, #0x22
    de64:	b.eq	de10 <areadlink_with_size@@Base+0x80>  // b.none
    de68:	mov	x0, x27
    de6c:	mov	x27, #0x0                   	// #0
    de70:	bl	aa50 <free@plt>
    de74:	mov	x0, x27
    de78:	ldp	x19, x20, [sp, #16]
    de7c:	ldp	x21, x22, [sp, #32]
    de80:	ldp	x23, x24, [sp, #48]
    de84:	ldp	x25, x26, [sp, #64]
    de88:	ldr	x27, [sp, #80]
    de8c:	ldp	x29, x30, [sp], #224
    de90:	ret
    de94:	cmp	x19, x26
    de98:	b.hi	ded8 <areadlink_with_size@@Base+0x148>  // b.pmore
    de9c:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
    dea0:	b	ddd8 <areadlink_with_size@@Base+0x48>
    dea4:	strb	wzr, [x21, x20]
    dea8:	add	x20, x20, #0x1
    deac:	cbz	x27, df08 <areadlink_with_size@@Base+0x178>
    deb0:	cmp	x19, x20
    deb4:	b.hi	df44 <areadlink_with_size@@Base+0x1b4>  // b.pmore
    deb8:	mov	x0, x27
    debc:	ldp	x19, x20, [sp, #16]
    dec0:	ldp	x21, x22, [sp, #32]
    dec4:	ldp	x23, x24, [sp, #48]
    dec8:	ldp	x25, x26, [sp, #64]
    decc:	ldr	x27, [sp, #80]
    ded0:	ldp	x29, x30, [sp], #224
    ded4:	ret
    ded8:	bl	aeb0 <__errno_location@plt>
    dedc:	mov	x27, #0x0                   	// #0
    dee0:	mov	w1, #0xc                   	// #12
    dee4:	str	w1, [x0]
    dee8:	mov	x0, x27
    deec:	ldp	x19, x20, [sp, #16]
    def0:	ldp	x21, x22, [sp, #32]
    def4:	ldp	x23, x24, [sp, #48]
    def8:	ldp	x25, x26, [sp, #64]
    defc:	ldr	x27, [sp, #80]
    df00:	ldp	x29, x30, [sp], #224
    df04:	ret
    df08:	mov	x0, x20
    df0c:	bl	a5f0 <malloc@plt>
    df10:	cbz	x0, df78 <areadlink_with_size@@Base+0x1e8>
    df14:	mov	x2, x20
    df18:	mov	x1, x21
    df1c:	bl	a2c0 <memcpy@plt>
    df20:	mov	x27, x0
    df24:	mov	x0, x27
    df28:	ldp	x19, x20, [sp, #16]
    df2c:	ldp	x21, x22, [sp, #32]
    df30:	ldp	x23, x24, [sp, #48]
    df34:	ldp	x25, x26, [sp, #64]
    df38:	ldr	x27, [sp, #80]
    df3c:	ldp	x29, x30, [sp], #224
    df40:	ret
    df44:	mov	x1, x20
    df48:	mov	x0, x27
    df4c:	bl	a7e0 <realloc@plt>
    df50:	cmp	x0, #0x0
    df54:	csel	x27, x27, x0, eq  // eq = none
    df58:	mov	x0, x27
    df5c:	ldp	x19, x20, [sp, #16]
    df60:	ldp	x21, x22, [sp, #32]
    df64:	ldp	x23, x24, [sp, #48]
    df68:	ldp	x25, x26, [sp, #64]
    df6c:	ldr	x27, [sp, #80]
    df70:	ldp	x29, x30, [sp], #224
    df74:	ret
    df78:	mov	x27, #0x0                   	// #0
    df7c:	b	deb8 <areadlink_with_size@@Base+0x128>

000000000000df80 <argp_make_fmtstream@@Base>:
    df80:	stp	x29, x30, [sp, #-64]!
    df84:	mov	x29, sp
    df88:	stp	x19, x20, [sp, #16]
    df8c:	mov	x20, x3
    df90:	stp	x21, x22, [sp, #32]
    df94:	mov	x22, x1
    df98:	mov	x21, x2
    df9c:	str	x23, [sp, #48]
    dfa0:	mov	x23, x0
    dfa4:	mov	x0, #0x48                  	// #72
    dfa8:	bl	a5f0 <malloc@plt>
    dfac:	mov	x19, x0
    dfb0:	cbz	x0, dfd8 <argp_make_fmtstream@@Base+0x58>
    dfb4:	stp	x23, x22, [x19]
    dfb8:	mov	x0, #0xc8                  	// #200
    dfbc:	stp	x21, x20, [x19, #16]
    dfc0:	stp	xzr, xzr, [x19, #32]
    dfc4:	bl	a5f0 <malloc@plt>
    dfc8:	str	x0, [x19, #48]
    dfcc:	cbz	x0, dff0 <argp_make_fmtstream@@Base+0x70>
    dfd0:	add	x1, x0, #0xc8
    dfd4:	stp	x0, x1, [x19, #56]
    dfd8:	mov	x0, x19
    dfdc:	ldp	x19, x20, [sp, #16]
    dfe0:	ldp	x21, x22, [sp, #32]
    dfe4:	ldr	x23, [sp, #48]
    dfe8:	ldp	x29, x30, [sp], #64
    dfec:	ret
    dff0:	mov	x0, x19
    dff4:	mov	x19, #0x0                   	// #0
    dff8:	bl	aa50 <free@plt>
    dffc:	b	dfd8 <argp_make_fmtstream@@Base+0x58>

000000000000e000 <_argp_fmtstream_update@@Base>:
    e000:	stp	x29, x30, [sp, #-96]!
    e004:	mov	x29, sp
    e008:	stp	x21, x22, [sp, #32]
    e00c:	mov	x21, x0
    e010:	stp	x19, x20, [sp, #16]
    e014:	ldr	x19, [x0, #32]
    e018:	ldr	x0, [x0, #48]
    e01c:	ldr	x2, [x21, #56]
    e020:	add	x19, x0, x19
    e024:	cmp	x2, x19
    e028:	b.ls	e2b8 <_argp_fmtstream_update@@Base+0x2b8>  // b.plast
    e02c:	ldr	x22, [x21, #40]
    e030:	stp	x27, x28, [sp, #80]
    e034:	mov	x27, x2
    e038:	stp	x23, x24, [sp, #48]
    e03c:	mov	w23, #0x20                  	// #32
    e040:	stp	x25, x26, [sp, #64]
    e044:	nop
    e048:	cbnz	x22, e0a8 <_argp_fmtstream_update@@Base+0xa8>
    e04c:	ldr	x20, [x21, #8]
    e050:	cbz	x20, e2d0 <_argp_fmtstream_update@@Base+0x2d0>
    e054:	ldr	x1, [x21, #64]
    e058:	add	x0, x2, x20
    e05c:	cmp	x1, x0
    e060:	b.ls	e454 <_argp_fmtstream_update@@Base+0x454>  // b.plast
    e064:	add	x3, x19, x20
    e068:	sub	x2, x2, x19
    e06c:	mov	x1, x19
    e070:	mov	x0, x3
    e074:	bl	a2d0 <memmove@plt>
    e078:	mov	x3, x0
    e07c:	ldr	x1, [x21, #56]
    e080:	mov	x0, x19
    e084:	mov	x2, x20
    e088:	mov	x19, x3
    e08c:	add	x1, x1, x20
    e090:	str	x1, [x21, #56]
    e094:	mov	w1, #0x20                  	// #32
    e098:	bl	a6f0 <memset@plt>
    e09c:	ldr	x27, [x21, #56]
    e0a0:	mov	x22, x20
    e0a4:	str	x20, [x21, #40]
    e0a8:	sub	x25, x27, x19
    e0ac:	mov	x0, x19
    e0b0:	mov	x2, x25
    e0b4:	mov	w1, #0xa                   	// #10
    e0b8:	bl	ac90 <memchr@plt>
    e0bc:	mov	x26, x0
    e0c0:	tbz	x22, #63, e0cc <_argp_fmtstream_update@@Base+0xcc>
    e0c4:	mov	x22, #0x0                   	// #0
    e0c8:	str	xzr, [x21, #40]
    e0cc:	ldr	x28, [x21, #16]
    e0d0:	cbz	x26, e144 <_argp_fmtstream_update@@Base+0x144>
    e0d4:	sub	x0, x26, x19
    e0d8:	add	x0, x0, x22
    e0dc:	cmp	x0, x28
    e0e0:	b.lt	e290 <_argp_fmtstream_update@@Base+0x290>  // b.tstop
    e0e4:	ldr	x24, [x21, #24]
    e0e8:	sub	x20, x28, #0x1
    e0ec:	tbz	x24, #63, e160 <_argp_fmtstream_update@@Base+0x160>
    e0f0:	cmp	x27, x26
    e0f4:	b.ls	e49c <_argp_fmtstream_update@@Base+0x49c>  // b.plast
    e0f8:	sub	x0, x20, x22
    e0fc:	sub	x2, x27, x26
    e100:	add	x0, x19, x0
    e104:	mov	x1, x26
    e108:	bl	a2d0 <memmove@plt>
    e10c:	mov	x22, #0x0                   	// #0
    e110:	ldr	x0, [x21, #40]
    e114:	str	xzr, [x21, #40]
    e118:	ldr	x2, [x21, #56]
    e11c:	sub	x20, x20, x0
    e120:	add	x20, x19, x20
    e124:	add	x19, x19, x28
    e128:	sub	x20, x20, x26
    e12c:	sub	x2, x2, x20
    e130:	str	x2, [x21, #56]
    e134:	cmp	x19, x2
    e138:	b.cs	e2a8 <_argp_fmtstream_update@@Base+0x2a8>  // b.hs, b.nlast
    e13c:	mov	x27, x2
    e140:	b	e048 <_argp_fmtstream_update@@Base+0x48>
    e144:	add	x0, x22, x25
    e148:	cmp	x0, x28
    e14c:	b.cc	e52c <_argp_fmtstream_update@@Base+0x52c>  // b.lo, b.ul, b.last
    e150:	ldr	x24, [x21, #24]
    e154:	sub	x20, x28, #0x1
    e158:	tbnz	x24, #63, e4a0 <_argp_fmtstream_update@@Base+0x4a0>
    e15c:	mov	x26, x27
    e160:	add	x3, x20, #0x1
    e164:	sub	x22, x3, x22
    e168:	adds	x22, x19, x22
    e16c:	b.cs	e398 <_argp_fmtstream_update@@Base+0x398>  // b.hs, b.nlast
    e170:	bl	a9d0 <__ctype_b_loc@plt>
    e174:	mov	x20, x22
    e178:	ldr	x1, [x0]
    e17c:	b	e18c <_argp_fmtstream_update@@Base+0x18c>
    e180:	cmp	x19, x3
    e184:	b.hi	e3a0 <_argp_fmtstream_update@@Base+0x3a0>  // b.pmore
    e188:	mov	x20, x3
    e18c:	ldrb	w0, [x20]
    e190:	sub	x3, x20, #0x1
    e194:	ldrh	w0, [x1, x0, lsl #1]
    e198:	tbz	w0, #0, e180 <_argp_fmtstream_update@@Base+0x180>
    e19c:	add	x3, x20, #0x1
    e1a0:	cmp	x19, x3
    e1a4:	b.cs	e3b0 <_argp_fmtstream_update@@Base+0x3b0>  // b.hs, b.nlast
    e1a8:	cmp	x19, x20
    e1ac:	b.ls	e1c0 <_argp_fmtstream_update@@Base+0x1c0>  // b.plast
    e1b0:	b	e490 <_argp_fmtstream_update@@Base+0x490>
    e1b4:	ldrb	w0, [x20]
    e1b8:	ldrh	w0, [x1, x0, lsl #1]
    e1bc:	tbz	w0, #0, e1d0 <_argp_fmtstream_update@@Base+0x1d0>
    e1c0:	mov	x22, x20
    e1c4:	sub	x20, x20, #0x1
    e1c8:	cmp	x19, x20
    e1cc:	b.ls	e1b4 <_argp_fmtstream_update@@Base+0x1b4>  // b.plast
    e1d0:	mov	x20, x3
    e1d4:	nop
    e1d8:	add	x0, x25, #0x1
    e1dc:	add	x0, x19, x0
    e1e0:	cmp	x20, x0
    e1e4:	b.eq	e2ec <_argp_fmtstream_update@@Base+0x2ec>  // b.none
    e1e8:	add	x1, x22, #0x1
    e1ec:	sub	x0, x20, x1
    e1f0:	cmp	x0, x24
    e1f4:	b.ge	e304 <_argp_fmtstream_update@@Base+0x304>  // b.tcont
    e1f8:	cmp	x27, x20
    e1fc:	b.ls	e2fc <_argp_fmtstream_update@@Base+0x2fc>  // b.plast
    e200:	ldr	x1, [x21, #64]
    e204:	add	x24, x24, #0x1
    e208:	sub	x1, x1, x27
    e20c:	cmp	x1, x24
    e210:	b.gt	e4d8 <_argp_fmtstream_update@@Base+0x4d8>
    e214:	ldr	x0, [x21, #48]
    e218:	ldr	x3, [x21]
    e21c:	cmp	x0, x22
    e220:	b.cs	e234 <_argp_fmtstream_update@@Base+0x234>  // b.hs, b.nlast
    e224:	sub	x2, x22, x0
    e228:	mov	x1, #0x1                   	// #1
    e22c:	bl	a320 <fwrite_unlocked@plt>
    e230:	ldr	x3, [x21]
    e234:	ldp	x0, x1, [x3, #40]
    e238:	cmp	x0, x1
    e23c:	b.cs	e51c <_argp_fmtstream_update@@Base+0x51c>  // b.hs, b.nlast
    e240:	add	x1, x0, #0x1
    e244:	str	x1, [x3, #40]
    e248:	mov	w1, #0xa                   	// #10
    e24c:	strb	w1, [x0]
    e250:	ldr	x28, [x21, #48]
    e254:	sub	x19, x19, x28
    e258:	sub	x0, x20, x28
    e25c:	add	x25, x25, x19
    e260:	mov	x27, x0
    e264:	mov	x19, x28
    e268:	b	e318 <_argp_fmtstream_update@@Base+0x318>
    e26c:	bl	a9d0 <__ctype_b_loc@plt>
    e270:	ldrb	w3, [x22]
    e274:	ldr	x1, [x0]
    e278:	ldrh	w0, [x1, x3, lsl #1]
    e27c:	tbnz	w0, #0, e3c4 <_argp_fmtstream_update@@Base+0x3c4>
    e280:	add	x22, x22, #0x1
    e284:	cmp	x22, x26
    e288:	b.ne	e26c <_argp_fmtstream_update@@Base+0x26c>  // b.any
    e28c:	nop
    e290:	ldr	x2, [x21, #56]
    e294:	str	xzr, [x21, #40]
    e298:	add	x19, x26, #0x1
    e29c:	mov	x22, #0x0                   	// #0
    e2a0:	cmp	x19, x2
    e2a4:	b.cc	e13c <_argp_fmtstream_update@@Base+0x13c>  // b.lo, b.ul, b.last
    e2a8:	ldp	x23, x24, [sp, #48]
    e2ac:	ldp	x25, x26, [sp, #64]
    e2b0:	ldp	x27, x28, [sp, #80]
    e2b4:	ldr	x0, [x21, #48]
    e2b8:	sub	x2, x2, x0
    e2bc:	ldp	x19, x20, [sp, #16]
    e2c0:	str	x2, [x21, #32]
    e2c4:	ldp	x21, x22, [sp, #32]
    e2c8:	ldp	x29, x30, [sp], #96
    e2cc:	ret
    e2d0:	sub	x25, x2, x19
    e2d4:	mov	x0, x19
    e2d8:	mov	x2, x25
    e2dc:	mov	w1, #0xa                   	// #10
    e2e0:	bl	ac90 <memchr@plt>
    e2e4:	mov	x26, x0
    e2e8:	b	e0cc <_argp_fmtstream_update@@Base+0xcc>
    e2ec:	ldr	x0, [x21, #64]
    e2f0:	sub	x0, x0, x22
    e2f4:	cmp	x0, x24
    e2f8:	b.le	e1f8 <_argp_fmtstream_update@@Base+0x1f8>
    e2fc:	add	x1, x22, #0x1
    e300:	sub	x0, x20, x1
    e304:	sub	x27, x20, x19
    e308:	mov	x28, x19
    e30c:	mov	x19, x1
    e310:	mov	w1, #0xa                   	// #10
    e314:	strb	w1, [x22]
    e318:	ldr	x22, [x21, #24]
    e31c:	cmp	x22, x0
    e320:	b.le	e344 <_argp_fmtstream_update@@Base+0x344>
    e324:	add	x0, x25, #0x1
    e328:	add	x0, x28, x0
    e32c:	cmp	x20, x0
    e330:	b.ne	e3d8 <_argp_fmtstream_update@@Base+0x3d8>  // b.any
    e334:	ldr	x0, [x21, #64]
    e338:	sub	x0, x0, x20
    e33c:	cmp	x22, x0
    e340:	b.gt	e3d8 <_argp_fmtstream_update@@Base+0x3d8>
    e344:	cmp	x22, #0x0
    e348:	b.le	e374 <_argp_fmtstream_update@@Base+0x374>
    e34c:	add	x0, x19, #0x1
    e350:	mvn	x2, x19
    e354:	nop
    e358:	sturb	w23, [x0, #-1]
    e35c:	mov	x19, x0
    e360:	add	x0, x0, #0x1
    e364:	ldr	x22, [x21, #24]
    e368:	add	x1, x2, x0
    e36c:	cmp	x22, x1
    e370:	b.gt	e358 <_argp_fmtstream_update@@Base+0x358>
    e374:	cmp	x19, x20
    e378:	b.cc	e438 <_argp_fmtstream_update@@Base+0x438>  // b.lo, b.ul, b.last
    e37c:	sub	x2, x25, x27
    e380:	cmp	x22, #0x0
    e384:	add	x2, x19, x2
    e388:	csinv	x22, x22, xzr, ne  // ne = any
    e38c:	str	x22, [x21, #40]
    e390:	str	x2, [x21, #56]
    e394:	b	e134 <_argp_fmtstream_update@@Base+0x134>
    e398:	add	x20, x22, #0x1
    e39c:	nop
    e3a0:	cmp	x19, x20
    e3a4:	b.cs	e3b0 <_argp_fmtstream_update@@Base+0x3b0>  // b.hs, b.nlast
    e3a8:	mov	x22, x20
    e3ac:	b	e1d8 <_argp_fmtstream_update@@Base+0x1d8>
    e3b0:	cmp	x22, x26
    e3b4:	b.cc	e280 <_argp_fmtstream_update@@Base+0x280>  // b.lo, b.ul, b.last
    e3b8:	b.eq	e290 <_argp_fmtstream_update@@Base+0x290>  // b.none
    e3bc:	bl	a9d0 <__ctype_b_loc@plt>
    e3c0:	ldr	x1, [x0]
    e3c4:	mov	x20, x22
    e3c8:	ldrb	w0, [x20, #1]!
    e3cc:	ldrh	w0, [x1, x0, lsl #1]
    e3d0:	tbnz	w0, #0, e3c8 <_argp_fmtstream_update@@Base+0x3c8>
    e3d4:	b	e1d8 <_argp_fmtstream_update@@Base+0x1d8>
    e3d8:	cmp	x22, #0x0
    e3dc:	mov	x26, #0x0                   	// #0
    e3e0:	b.gt	e400 <_argp_fmtstream_update@@Base+0x400>
    e3e4:	b	e374 <_argp_fmtstream_update@@Base+0x374>
    e3e8:	str	x3, [x0, #40]
    e3ec:	add	x26, x26, #0x1
    e3f0:	strb	w23, [x1]
    e3f4:	ldr	x22, [x21, #24]
    e3f8:	cmp	x22, x26
    e3fc:	b.le	e374 <_argp_fmtstream_update@@Base+0x374>
    e400:	ldr	x0, [x21]
    e404:	ldp	x1, x2, [x0, #40]
    e408:	add	x3, x1, #0x1
    e40c:	cmp	x1, x2
    e410:	b.cc	e3e8 <_argp_fmtstream_update@@Base+0x3e8>  // b.lo, b.ul, b.last
    e414:	mov	w1, #0x20                  	// #32
    e418:	bl	a940 <__overflow@plt>
    e41c:	ldr	x22, [x21, #24]
    e420:	add	x26, x26, #0x1
    e424:	cmp	x26, x22
    e428:	b.lt	e400 <_argp_fmtstream_update@@Base+0x400>  // b.tstop
    e42c:	cmp	x19, x20
    e430:	b.cs	e37c <_argp_fmtstream_update@@Base+0x37c>  // b.hs, b.nlast
    e434:	nop
    e438:	add	x2, x28, x25
    e43c:	mov	x1, x20
    e440:	sub	x2, x2, x20
    e444:	mov	x0, x19
    e448:	bl	a2d0 <memmove@plt>
    e44c:	ldr	x22, [x21, #24]
    e450:	b	e37c <_argp_fmtstream_update@@Base+0x37c>
    e454:	mov	x22, #0x0                   	// #0
    e458:	b	e470 <_argp_fmtstream_update@@Base+0x470>
    e45c:	str	x3, [x0, #40]
    e460:	strb	w23, [x1]
    e464:	add	x22, x22, #0x1
    e468:	cmp	x20, x22
    e46c:	b.eq	e09c <_argp_fmtstream_update@@Base+0x9c>  // b.none
    e470:	ldr	x0, [x21]
    e474:	ldp	x1, x2, [x0, #40]
    e478:	add	x3, x1, #0x1
    e47c:	cmp	x1, x2
    e480:	b.cc	e45c <_argp_fmtstream_update@@Base+0x45c>  // b.lo, b.ul, b.last
    e484:	mov	w1, #0x20                  	// #32
    e488:	bl	a940 <__overflow@plt>
    e48c:	b	e464 <_argp_fmtstream_update@@Base+0x464>
    e490:	mov	x22, x3
    e494:	mov	x20, x3
    e498:	b	e1d8 <_argp_fmtstream_update@@Base+0x1d8>
    e49c:	add	x0, x25, x22
    e4a0:	sub	x2, x20, x0
    e4a4:	add	x2, x27, x2
    e4a8:	ldp	x23, x24, [sp, #48]
    e4ac:	ldp	x25, x26, [sp, #64]
    e4b0:	ldp	x27, x28, [sp, #80]
    e4b4:	str	x0, [x21, #40]
    e4b8:	ldr	x0, [x21, #48]
    e4bc:	str	x2, [x21, #56]
    e4c0:	ldp	x19, x20, [sp, #16]
    e4c4:	sub	x2, x2, x0
    e4c8:	str	x2, [x21, #32]
    e4cc:	ldp	x21, x22, [sp, #32]
    e4d0:	ldp	x29, x30, [sp], #96
    e4d4:	ret
    e4d8:	sub	x27, x27, x20
    e4dc:	mov	x1, x20
    e4e0:	mov	x2, x27
    e4e4:	add	x0, x22, x24
    e4e8:	bl	a2d0 <memmove@plt>
    e4ec:	mov	x28, x19
    e4f0:	ldr	x0, [x21, #24]
    e4f4:	mov	x1, x22
    e4f8:	mov	w2, #0xa                   	// #10
    e4fc:	add	x20, x0, #0x1
    e500:	add	x20, x22, x20
    e504:	strb	w2, [x1], #1
    e508:	add	x2, x20, x27
    e50c:	sub	x27, x20, x19
    e510:	sub	x25, x2, x19
    e514:	mov	x19, x1
    e518:	b	e318 <_argp_fmtstream_update@@Base+0x318>
    e51c:	mov	x0, x3
    e520:	mov	w1, #0xa                   	// #10
    e524:	bl	a940 <__overflow@plt>
    e528:	b	e250 <_argp_fmtstream_update@@Base+0x250>
    e52c:	ldp	x23, x24, [sp, #48]
    e530:	ldr	x2, [x21, #56]
    e534:	ldp	x25, x26, [sp, #64]
    e538:	ldp	x27, x28, [sp, #80]
    e53c:	str	x0, [x21, #40]
    e540:	ldr	x0, [x21, #48]
    e544:	ldp	x19, x20, [sp, #16]
    e548:	sub	x2, x2, x0
    e54c:	str	x2, [x21, #32]
    e550:	ldp	x21, x22, [sp, #32]
    e554:	ldp	x29, x30, [sp], #96
    e558:	ret
    e55c:	nop

000000000000e560 <argp_fmtstream_free@@Base>:
    e560:	stp	x29, x30, [sp, #-32]!
    e564:	mov	x29, sp
    e568:	str	x19, [sp, #16]
    e56c:	mov	x19, x0
    e570:	bl	a520 <_argp_fmtstream_update@plt>
    e574:	ldp	x0, x2, [x19, #48]
    e578:	cmp	x2, x0
    e57c:	b.ls	e594 <argp_fmtstream_free@@Base+0x34>  // b.plast
    e580:	ldr	x3, [x19]
    e584:	sub	x2, x2, x0
    e588:	mov	x1, #0x1                   	// #1
    e58c:	bl	a320 <fwrite_unlocked@plt>
    e590:	ldr	x0, [x19, #48]
    e594:	bl	aa50 <free@plt>
    e598:	mov	x0, x19
    e59c:	ldr	x19, [sp, #16]
    e5a0:	ldp	x29, x30, [sp], #32
    e5a4:	b	aa50 <free@plt>

000000000000e5a8 <_argp_fmtstream_ensure@@Base>:
    e5a8:	stp	x29, x30, [sp, #-32]!
    e5ac:	mov	x29, sp
    e5b0:	stp	x19, x20, [sp, #16]
    e5b4:	mov	x20, x1
    e5b8:	ldp	x2, x1, [x0, #56]
    e5bc:	sub	x1, x1, x2
    e5c0:	cmp	x1, x20
    e5c4:	b.cc	e5d8 <_argp_fmtstream_ensure@@Base+0x30>  // b.lo, b.ul, b.last
    e5c8:	mov	w0, #0x1                   	// #1
    e5cc:	ldp	x19, x20, [sp, #16]
    e5d0:	ldp	x29, x30, [sp], #32
    e5d4:	ret
    e5d8:	mov	x19, x0
    e5dc:	bl	a520 <_argp_fmtstream_update@plt>
    e5e0:	mov	x1, #0x1                   	// #1
    e5e4:	ldp	x0, x2, [x19, #48]
    e5e8:	ldr	x3, [x19]
    e5ec:	sub	x2, x2, x0
    e5f0:	bl	a320 <fwrite_unlocked@plt>
    e5f4:	mov	x1, x0
    e5f8:	ldp	x0, x2, [x19, #48]
    e5fc:	sub	x3, x2, x0
    e600:	cmp	x1, x3
    e604:	b.ne	e64c <_argp_fmtstream_ensure@@Base+0xa4>  // b.any
    e608:	ldr	x1, [x19, #64]
    e60c:	str	xzr, [x19, #32]
    e610:	str	x0, [x19, #56]
    e614:	sub	x1, x1, x0
    e618:	cmp	x20, x1
    e61c:	b.ls	e5c8 <_argp_fmtstream_ensure@@Base+0x20>  // b.plast
    e620:	adds	x20, x20, x1
    e624:	b.cs	e67c <_argp_fmtstream_ensure@@Base+0xd4>  // b.hs, b.nlast
    e628:	mov	x1, x20
    e62c:	bl	a7e0 <realloc@plt>
    e630:	cbz	x0, e67c <_argp_fmtstream_ensure@@Base+0xd4>
    e634:	dup	v0.2d, x0
    e638:	add	x20, x0, x20
    e63c:	mov	w0, #0x1                   	// #1
    e640:	str	x20, [x19, #64]
    e644:	str	q0, [x19, #48]
    e648:	b	e5cc <_argp_fmtstream_ensure@@Base+0x24>
    e64c:	ldr	x3, [x19, #32]
    e650:	sub	x2, x2, x1
    e654:	str	x2, [x19, #56]
    e658:	sub	x2, x2, x0
    e65c:	sub	x3, x3, x1
    e660:	str	x3, [x19, #32]
    e664:	add	x1, x0, x1
    e668:	bl	a2d0 <memmove@plt>
    e66c:	mov	w0, #0x0                   	// #0
    e670:	ldp	x19, x20, [sp, #16]
    e674:	ldp	x29, x30, [sp], #32
    e678:	ret
    e67c:	bl	aeb0 <__errno_location@plt>
    e680:	mov	x1, x0
    e684:	mov	w2, #0xc                   	// #12
    e688:	mov	w0, #0x0                   	// #0
    e68c:	str	w2, [x1]
    e690:	b	e5cc <_argp_fmtstream_ensure@@Base+0x24>
    e694:	nop

000000000000e698 <argp_fmtstream_printf@@Base>:
    e698:	stp	x29, x30, [sp, #-320]!
    e69c:	mov	x29, sp
    e6a0:	str	x25, [sp, #64]
    e6a4:	mov	x25, x0
    e6a8:	mov	x0, x25
    e6ac:	stp	x19, x20, [sp, #16]
    e6b0:	add	x20, sp, #0x50
    e6b4:	stp	x21, x22, [sp, #32]
    e6b8:	mov	x21, x1
    e6bc:	mov	x1, #0x96                  	// #150
    e6c0:	stp	x23, x24, [sp, #48]
    e6c4:	mov	w22, #0xffffff80            	// #-128
    e6c8:	add	x24, sp, #0x110
    e6cc:	str	q0, [sp, #144]
    e6d0:	mov	w23, #0xffffffd0            	// #-48
    e6d4:	str	q1, [sp, #160]
    e6d8:	str	q2, [sp, #176]
    e6dc:	str	q3, [sp, #192]
    e6e0:	str	q4, [sp, #208]
    e6e4:	str	q5, [sp, #224]
    e6e8:	str	q6, [sp, #240]
    e6ec:	str	q7, [sp, #256]
    e6f0:	stp	x2, x3, [sp, #272]
    e6f4:	stp	x4, x5, [sp, #288]
    e6f8:	stp	x6, x7, [sp, #304]
    e6fc:	bl	ad80 <_argp_fmtstream_ensure@plt>
    e700:	mov	x3, x20
    e704:	mov	x2, x21
    e708:	cbz	w0, e790 <argp_fmtstream_printf@@Base+0xf8>
    e70c:	nop
    e710:	add	x1, sp, #0x140
    e714:	stp	x1, x1, [sp, #112]
    e718:	str	x24, [sp, #128]
    e71c:	stp	w23, w22, [sp, #136]
    e720:	ldp	x4, x5, [sp, #112]
    e724:	ldp	x0, x19, [x25, #56]
    e728:	stp	x4, x5, [x20]
    e72c:	ldp	x4, x5, [sp, #128]
    e730:	stp	x4, x5, [x20, #16]
    e734:	sub	x19, x19, x0
    e738:	mov	x1, x19
    e73c:	bl	adc0 <vsnprintf@plt>
    e740:	add	w1, w0, #0x1
    e744:	cmp	x19, w0, sxtw
    e748:	sxtw	x2, w0
    e74c:	b.ls	e778 <argp_fmtstream_printf@@Base+0xe0>  // b.plast
    e750:	ldr	x1, [x25, #56]
    e754:	mov	x0, x2
    e758:	ldp	x19, x20, [sp, #16]
    e75c:	add	x2, x1, x2
    e760:	str	x2, [x25, #56]
    e764:	ldp	x21, x22, [sp, #32]
    e768:	ldp	x23, x24, [sp, #48]
    e76c:	ldr	x25, [sp, #64]
    e770:	ldp	x29, x30, [sp], #320
    e774:	ret
    e778:	sxtw	x1, w1
    e77c:	mov	x0, x25
    e780:	bl	ad80 <_argp_fmtstream_ensure@plt>
    e784:	mov	x3, x20
    e788:	mov	x2, x21
    e78c:	cbnz	w0, e710 <argp_fmtstream_printf@@Base+0x78>
    e790:	mov	x0, #0xffffffffffffffff    	// #-1
    e794:	ldp	x19, x20, [sp, #16]
    e798:	ldp	x21, x22, [sp, #32]
    e79c:	ldp	x23, x24, [sp, #48]
    e7a0:	ldr	x25, [sp, #64]
    e7a4:	ldp	x29, x30, [sp], #320
    e7a8:	ret
    e7ac:	nop

000000000000e7b0 <argp_fmtstream_write@@Base>:
    e7b0:	stp	x29, x30, [sp, #-48]!
    e7b4:	mov	x29, sp
    e7b8:	stp	x19, x20, [sp, #16]
    e7bc:	mov	x20, x2
    e7c0:	mov	x19, x0
    e7c4:	ldp	x2, x3, [x0, #56]
    e7c8:	str	x21, [sp, #32]
    e7cc:	mov	x21, x1
    e7d0:	add	x1, x2, x20
    e7d4:	cmp	x3, x1
    e7d8:	b.cs	e7f4 <argp_fmtstream_write@@Base+0x44>  // b.hs, b.nlast
    e7dc:	mov	x1, x20
    e7e0:	bl	ad80 <_argp_fmtstream_ensure@plt>
    e7e4:	mov	w1, w0
    e7e8:	mov	x0, #0x0                   	// #0
    e7ec:	cbz	w1, e814 <argp_fmtstream_write@@Base+0x64>
    e7f0:	ldr	x2, [x19, #56]
    e7f4:	mov	x0, x2
    e7f8:	mov	x1, x21
    e7fc:	mov	x2, x20
    e800:	bl	a2c0 <memcpy@plt>
    e804:	ldr	x2, [x19, #56]
    e808:	mov	x0, x20
    e80c:	add	x2, x2, x20
    e810:	str	x2, [x19, #56]
    e814:	ldp	x19, x20, [sp, #16]
    e818:	ldr	x21, [sp, #32]
    e81c:	ldp	x29, x30, [sp], #48
    e820:	ret
    e824:	nop

000000000000e828 <argp_fmtstream_puts@@Base>:
    e828:	stp	x29, x30, [sp, #-48]!
    e82c:	mov	x29, sp
    e830:	stp	x19, x20, [sp, #16]
    e834:	mov	x20, x0
    e838:	mov	x0, x1
    e83c:	str	x21, [sp, #32]
    e840:	mov	x21, x1
    e844:	bl	a340 <strlen@plt>
    e848:	cbnz	x0, e860 <argp_fmtstream_puts@@Base+0x38>
    e84c:	mov	w0, #0x0                   	// #0
    e850:	ldp	x19, x20, [sp, #16]
    e854:	ldr	x21, [sp, #32]
    e858:	ldp	x29, x30, [sp], #48
    e85c:	ret
    e860:	mov	x19, x0
    e864:	ldp	x0, x2, [x20, #56]
    e868:	add	x1, x0, x19
    e86c:	cmp	x2, x1
    e870:	b.cs	e890 <argp_fmtstream_puts@@Base+0x68>  // b.hs, b.nlast
    e874:	mov	x1, x19
    e878:	mov	x0, x20
    e87c:	bl	ad80 <_argp_fmtstream_ensure@plt>
    e880:	mov	w1, w0
    e884:	mov	w0, #0xffffffff            	// #-1
    e888:	cbz	w1, e850 <argp_fmtstream_puts@@Base+0x28>
    e88c:	ldr	x0, [x20, #56]
    e890:	mov	x1, x21
    e894:	mov	x2, x19
    e898:	bl	a2c0 <memcpy@plt>
    e89c:	ldr	x2, [x20, #56]
    e8a0:	mov	w0, #0x0                   	// #0
    e8a4:	ldr	x21, [sp, #32]
    e8a8:	add	x2, x2, x19
    e8ac:	str	x2, [x20, #56]
    e8b0:	ldp	x19, x20, [sp, #16]
    e8b4:	ldp	x29, x30, [sp], #48
    e8b8:	ret
    e8bc:	nop

000000000000e8c0 <argp_fmtstream_putc@@Base>:
    e8c0:	stp	x29, x30, [sp, #-32]!
    e8c4:	mov	x29, sp
    e8c8:	stp	x19, x20, [sp, #16]
    e8cc:	mov	w20, w1
    e8d0:	mov	x19, x0
    e8d4:	ldp	x1, x2, [x0, #56]
    e8d8:	cmp	x1, x2
    e8dc:	b.cs	e8fc <argp_fmtstream_putc@@Base+0x3c>  // b.hs, b.nlast
    e8e0:	add	x0, x1, #0x1
    e8e4:	str	x0, [x19, #56]
    e8e8:	and	w0, w20, #0xff
    e8ec:	strb	w20, [x1]
    e8f0:	ldp	x19, x20, [sp, #16]
    e8f4:	ldp	x29, x30, [sp], #32
    e8f8:	ret
    e8fc:	mov	x1, #0x1                   	// #1
    e900:	bl	ad80 <_argp_fmtstream_ensure@plt>
    e904:	cbz	w0, e910 <argp_fmtstream_putc@@Base+0x50>
    e908:	ldr	x1, [x19, #56]
    e90c:	b	e8e0 <argp_fmtstream_putc@@Base+0x20>
    e910:	mov	w0, #0xffffffff            	// #-1
    e914:	b	e8f0 <argp_fmtstream_putc@@Base+0x30>

000000000000e918 <argp_fmtstream_set_lmargin@@Base>:
    e918:	stp	x29, x30, [sp, #-32]!
    e91c:	mov	x29, sp
    e920:	stp	x19, x20, [sp, #16]
    e924:	mov	x20, x1
    e928:	mov	x19, x0
    e92c:	ldp	x3, x1, [x0, #48]
    e930:	ldr	x2, [x0, #32]
    e934:	sub	x1, x1, x3
    e938:	cmp	x1, x2
    e93c:	b.hi	e954 <argp_fmtstream_set_lmargin@@Base+0x3c>  // b.pmore
    e940:	ldr	x0, [x19, #8]
    e944:	str	x20, [x19, #8]
    e948:	ldp	x19, x20, [sp, #16]
    e94c:	ldp	x29, x30, [sp], #32
    e950:	ret
    e954:	bl	a520 <_argp_fmtstream_update@plt>
    e958:	ldr	x0, [x19, #8]
    e95c:	str	x20, [x19, #8]
    e960:	ldp	x19, x20, [sp, #16]
    e964:	ldp	x29, x30, [sp], #32
    e968:	ret
    e96c:	nop

000000000000e970 <argp_fmtstream_set_rmargin@@Base>:
    e970:	stp	x29, x30, [sp, #-32]!
    e974:	mov	x29, sp
    e978:	stp	x19, x20, [sp, #16]
    e97c:	mov	x20, x1
    e980:	mov	x19, x0
    e984:	ldp	x3, x1, [x0, #48]
    e988:	ldr	x2, [x0, #32]
    e98c:	sub	x1, x1, x3
    e990:	cmp	x1, x2
    e994:	b.hi	e9ac <argp_fmtstream_set_rmargin@@Base+0x3c>  // b.pmore
    e998:	ldr	x0, [x19, #16]
    e99c:	str	x20, [x19, #16]
    e9a0:	ldp	x19, x20, [sp, #16]
    e9a4:	ldp	x29, x30, [sp], #32
    e9a8:	ret
    e9ac:	bl	a520 <_argp_fmtstream_update@plt>
    e9b0:	ldr	x0, [x19, #16]
    e9b4:	str	x20, [x19, #16]
    e9b8:	ldp	x19, x20, [sp, #16]
    e9bc:	ldp	x29, x30, [sp], #32
    e9c0:	ret
    e9c4:	nop

000000000000e9c8 <argp_fmtstream_set_wmargin@@Base>:
    e9c8:	stp	x29, x30, [sp, #-32]!
    e9cc:	mov	x29, sp
    e9d0:	stp	x19, x20, [sp, #16]
    e9d4:	mov	x20, x1
    e9d8:	mov	x19, x0
    e9dc:	ldp	x3, x1, [x0, #48]
    e9e0:	ldr	x2, [x0, #32]
    e9e4:	sub	x1, x1, x3
    e9e8:	cmp	x1, x2
    e9ec:	b.hi	ea04 <argp_fmtstream_set_wmargin@@Base+0x3c>  // b.pmore
    e9f0:	ldr	x0, [x19, #24]
    e9f4:	str	x20, [x19, #24]
    e9f8:	ldp	x19, x20, [sp, #16]
    e9fc:	ldp	x29, x30, [sp], #32
    ea00:	ret
    ea04:	bl	a520 <_argp_fmtstream_update@plt>
    ea08:	ldr	x0, [x19, #24]
    ea0c:	str	x20, [x19, #24]
    ea10:	ldp	x19, x20, [sp, #16]
    ea14:	ldp	x29, x30, [sp], #32
    ea18:	ret
    ea1c:	nop

000000000000ea20 <argp_fmtstream_point@@Base>:
    ea20:	stp	x29, x30, [sp, #-32]!
    ea24:	mov	x29, sp
    ea28:	ldp	x3, x1, [x0, #48]
    ea2c:	ldr	x2, [x0, #32]
    ea30:	str	x19, [sp, #16]
    ea34:	mov	x19, x0
    ea38:	sub	x1, x1, x3
    ea3c:	cmp	x1, x2
    ea40:	b.hi	ea5c <argp_fmtstream_point@@Base+0x3c>  // b.pmore
    ea44:	ldr	x0, [x19, #40]
    ea48:	ldr	x19, [sp, #16]
    ea4c:	cmp	x0, #0x0
    ea50:	csel	x0, x0, xzr, ge  // ge = tcont
    ea54:	ldp	x29, x30, [sp], #32
    ea58:	ret
    ea5c:	bl	a520 <_argp_fmtstream_update@plt>
    ea60:	ldr	x0, [x19, #40]
    ea64:	ldr	x19, [sp, #16]
    ea68:	cmp	x0, #0x0
    ea6c:	csel	x0, x0, xzr, ge  // ge = tcont
    ea70:	ldp	x29, x30, [sp], #32
    ea74:	ret
    ea78:	stp	x29, x30, [sp, #-32]!
    ea7c:	mov	x29, sp
    ea80:	stp	x19, x20, [sp, #16]
    ea84:	mov	x19, x1
    ea88:	mov	x20, #0x0                   	// #0
    ea8c:	cbz	x0, eaa0 <argp_fmtstream_point@@Base+0x80>
    ea90:	mov	w1, #0xa                   	// #10
    ea94:	bl	ab60 <strchr@plt>
    ea98:	cmp	x0, #0x0
    ea9c:	cset	x20, ne  // ne = any
    eaa0:	cbz	x19, eac4 <argp_fmtstream_point@@Base+0xa4>
    eaa4:	ldr	x2, [x19]
    eaa8:	cbz	x2, eac4 <argp_fmtstream_point@@Base+0xa4>
    eaac:	ldr	x0, [x2, #16]
    eab0:	ldr	x1, [x2, #32]
    eab4:	bl	ea78 <argp_fmtstream_point@@Base+0x58>
    eab8:	add	x20, x20, x0
    eabc:	ldr	x2, [x19, #32]!
    eac0:	cbnz	x2, eaac <argp_fmtstream_point@@Base+0x8c>
    eac4:	mov	x0, x20
    eac8:	ldp	x19, x20, [sp, #16]
    eacc:	ldp	x29, x30, [sp], #32
    ead0:	ret
    ead4:	nop
    ead8:	stp	x29, x30, [sp, #-160]!
    eadc:	mov	x29, sp
    eae0:	stp	x21, x22, [sp, #32]
    eae4:	mov	x22, x0
    eae8:	mov	x21, x1
    eaec:	mov	x0, #0x20                  	// #32
    eaf0:	stp	x19, x20, [sp, #16]
    eaf4:	stp	x23, x24, [sp, #48]
    eaf8:	stp	x25, x26, [sp, #64]
    eafc:	stp	x27, x28, [sp, #80]
    eb00:	ldr	x23, [x22]
    eb04:	ldr	x20, [x22, #32]
    eb08:	bl	a5f0 <malloc@plt>
    eb0c:	cbz	x0, f090 <argp_fmtstream_point@@Base+0x670>
    eb10:	str	wzr, [x0, #8]
    eb14:	mov	x19, x0
    eb18:	str	xzr, [x0, #24]
    eb1c:	cbz	x23, ed08 <argp_fmtstream_point@@Base+0x2e8>
    eb20:	ldr	w0, [x23, #24]
    eb24:	tbnz	w0, #2, f070 <argp_fmtstream_point@@Base+0x650>
    eb28:	mov	x24, x23
    eb2c:	mov	w25, #0x0                   	// #0
    eb30:	mov	w27, #0x0                   	// #0
    eb34:	nop
    eb38:	ldr	w0, [x24, #8]
    eb3c:	cbnz	w0, eb48 <argp_fmtstream_point@@Base+0x128>
    eb40:	ldr	x0, [x24]
    eb44:	cbz	x0, eb8c <argp_fmtstream_point@@Base+0x16c>
    eb48:	ldr	w0, [x24, #24]
    eb4c:	tbnz	w0, #2, eb58 <argp_fmtstream_point@@Base+0x138>
    eb50:	add	w25, w25, #0x1
    eb54:	str	w25, [x19, #8]
    eb58:	ldr	w0, [x24, #24]
    eb5c:	tbnz	w0, #3, eb84 <argp_fmtstream_point@@Base+0x164>
    eb60:	ldr	w26, [x24, #8]
    eb64:	sub	w0, w26, #0x1
    eb68:	cmp	w0, #0xfe
    eb6c:	b.hi	eb84 <argp_fmtstream_point@@Base+0x164>  // b.pmore
    eb70:	bl	a9d0 <__ctype_b_loc@plt>
    eb74:	ldr	x0, [x0]
    eb78:	ldrh	w0, [x0, w26, sxtw #1]
    eb7c:	ubfx	x0, x0, #14, #1
    eb80:	add	w27, w27, w0
    eb84:	add	x24, x24, #0x30
    eb88:	b	eb38 <argp_fmtstream_point@@Base+0x118>
    eb8c:	ldr	x0, [x24, #32]
    eb90:	cbnz	x0, eb48 <argp_fmtstream_point@@Base+0x128>
    eb94:	ldr	w28, [x24, #40]
    eb98:	cbnz	w28, eb48 <argp_fmtstream_point@@Base+0x128>
    eb9c:	mov	w0, #0x38                  	// #56
    eba0:	umull	x0, w25, w0
    eba4:	bl	a5f0 <malloc@plt>
    eba8:	mov	x24, x0
    ebac:	str	x24, [x19]
    ebb0:	add	w0, w27, #0x1
    ebb4:	bl	a5f0 <malloc@plt>
    ebb8:	str	x0, [x19, #16]
    ebbc:	cmp	x24, #0x0
    ebc0:	mov	x3, x0
    ebc4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    ebc8:	b.eq	f050 <argp_fmtstream_point@@Base+0x630>  // b.none
    ebcc:	ldr	w2, [x23, #8]
    ebd0:	mov	x25, x0
    ebd4:	ldr	w1, [x23, #40]
    ebd8:	cbnz	w2, eca8 <argp_fmtstream_point@@Base+0x288>
    ebdc:	nop
    ebe0:	ldr	x0, [x23]
    ebe4:	cbz	x0, ecd8 <argp_fmtstream_point@@Base+0x2b8>
    ebe8:	str	x23, [x24]
    ebec:	str	wzr, [x24, #8]
    ebf0:	str	x25, [x24, #16]
    ebf4:	cbnz	w1, ecb8 <argp_fmtstream_point@@Base+0x298>
    ebf8:	ldr	x0, [x23]
    ebfc:	cmp	x0, #0x0
    ec00:	ccmp	w2, #0x0, #0x0, eq  // eq = none
    ec04:	b.eq	ecf0 <argp_fmtstream_point@@Base+0x2d0>  // b.none
    ec08:	mov	w27, #0x1                   	// #1
    ec0c:	str	w28, [x24, #24]
    ec10:	stp	x21, x22, [x24, #32]
    ec14:	nop
    ec18:	str	w27, [x24, #8]
    ec1c:	ldr	w0, [x23, #24]
    ec20:	tbnz	w0, #3, ec78 <argp_fmtstream_point@@Base+0x258>
    ec24:	ldr	w26, [x23, #8]
    ec28:	sub	w0, w26, #0x1
    ec2c:	cmp	w0, #0xfe
    ec30:	b.hi	ec78 <argp_fmtstream_point@@Base+0x258>  // b.pmore
    ec34:	str	x3, [sp, #104]
    ec38:	bl	a9d0 <__ctype_b_loc@plt>
    ec3c:	ldr	x0, [x0]
    ec40:	ldr	x3, [sp, #104]
    ec44:	ldrh	w0, [x0, w26, sxtw #1]
    ec48:	tbz	w0, #14, ec78 <argp_fmtstream_point@@Base+0x258>
    ec4c:	and	w26, w26, #0xff
    ec50:	cmp	x3, x25
    ec54:	b.cs	ecf8 <argp_fmtstream_point@@Base+0x2d8>  // b.hs, b.nlast
    ec58:	mov	x1, x3
    ec5c:	b	ec6c <argp_fmtstream_point@@Base+0x24c>
    ec60:	add	x1, x1, #0x1
    ec64:	cmp	x1, x25
    ec68:	b.eq	ecf8 <argp_fmtstream_point@@Base+0x2d8>  // b.none
    ec6c:	ldrb	w0, [x1]
    ec70:	cmp	w0, w26
    ec74:	b.ne	ec60 <argp_fmtstream_point@@Base+0x240>  // b.any
    ec78:	ldr	w0, [x23, #56]
    ec7c:	add	x23, x23, #0x30
    ec80:	cbnz	w0, ec8c <argp_fmtstream_point@@Base+0x26c>
    ec84:	ldr	x1, [x23]
    ec88:	cbz	x1, ecc0 <argp_fmtstream_point@@Base+0x2a0>
    ec8c:	ldr	w1, [x23, #24]
    ec90:	add	w27, w27, #0x1
    ec94:	tbnz	w1, #2, ec18 <argp_fmtstream_point@@Base+0x1f8>
    ec98:	mov	w2, w0
    ec9c:	add	x24, x24, #0x38
    eca0:	ldr	w1, [x23, #40]
    eca4:	cbz	w2, ebe0 <argp_fmtstream_point@@Base+0x1c0>
    eca8:	str	x23, [x24]
    ecac:	str	wzr, [x24, #8]
    ecb0:	str	x25, [x24, #16]
    ecb4:	cbz	w1, ec08 <argp_fmtstream_point@@Base+0x1e8>
    ecb8:	mov	w28, w1
    ecbc:	b	ec08 <argp_fmtstream_point@@Base+0x1e8>
    ecc0:	ldr	x1, [x23, #32]
    ecc4:	cbnz	x1, ec8c <argp_fmtstream_point@@Base+0x26c>
    ecc8:	ldr	w2, [x23, #40]
    eccc:	cbnz	w2, ec8c <argp_fmtstream_point@@Base+0x26c>
    ecd0:	add	x24, x24, #0x38
    ecd4:	b	eca0 <argp_fmtstream_point@@Base+0x280>
    ecd8:	ldr	x0, [x23, #32]
    ecdc:	cbz	x0, ed00 <argp_fmtstream_point@@Base+0x2e0>
    ece0:	str	x23, [x24]
    ece4:	str	wzr, [x24, #8]
    ece8:	str	x25, [x24, #16]
    ecec:	cbnz	w1, ecb8 <argp_fmtstream_point@@Base+0x298>
    ecf0:	add	w28, w28, #0x1
    ecf4:	b	ec08 <argp_fmtstream_point@@Base+0x1e8>
    ecf8:	strb	w26, [x25], #1
    ecfc:	b	ec78 <argp_fmtstream_point@@Base+0x258>
    ed00:	cbnz	w1, ee00 <argp_fmtstream_point@@Base+0x3e0>
    ed04:	strb	wzr, [x25]
    ed08:	cbz	x20, ede0 <argp_fmtstream_point@@Base+0x3c0>
    ed0c:	ldr	x24, [x20]
    ed10:	cbz	x24, ede0 <argp_fmtstream_point@@Base+0x3c0>
    ed14:	add	x0, x19, #0x18
    ed18:	str	x0, [sp, #152]
    ed1c:	ldr	w25, [x20, #24]
    ed20:	ldr	x26, [x20, #16]
    ed24:	cbnz	w25, ed30 <argp_fmtstream_point@@Base+0x310>
    ed28:	mov	x1, x21
    ed2c:	cbz	x26, ed78 <argp_fmtstream_point@@Base+0x358>
    ed30:	ldr	x23, [x22, #32]
    ed34:	mov	x0, #0x30                  	// #48
    ed38:	bl	a5f0 <malloc@plt>
    ed3c:	mov	x1, x0
    ed40:	sub	x23, x20, x23
    ed44:	asr	x23, x23, #5
    ed48:	cbz	x0, ed78 <argp_fmtstream_point@@Base+0x358>
    ed4c:	str	x26, [x1]
    ed50:	mov	w0, #0x0                   	// #0
    ed54:	stp	w23, w25, [x1, #8]
    ed58:	stp	x21, x22, [x1, #16]
    ed5c:	cbz	x21, ed68 <argp_fmtstream_point@@Base+0x348>
    ed60:	ldr	w0, [x21, #32]
    ed64:	add	w0, w0, #0x1
    ed68:	ldr	x2, [x19, #24]
    ed6c:	str	x1, [x19, #24]
    ed70:	str	w0, [x1, #32]
    ed74:	str	x2, [x1, #40]
    ed78:	mov	x0, x24
    ed7c:	bl	ead8 <argp_fmtstream_point@@Base+0xb8>
    ed80:	ldr	x1, [x19, #24]
    ed84:	mov	x26, x0
    ed88:	cbz	x1, f048 <argp_fmtstream_point@@Base+0x628>
    ed8c:	nop
    ed90:	mov	x0, x1
    ed94:	ldr	x1, [x1, #40]
    ed98:	cbnz	x1, ed90 <argp_fmtstream_point@@Base+0x370>
    ed9c:	add	x0, x0, #0x28
    eda0:	ldr	w27, [x26, #8]
    eda4:	ldr	x1, [x26, #24]
    eda8:	str	x1, [x0]
    edac:	str	xzr, [x26, #24]
    edb0:	cbz	w27, edd0 <argp_fmtstream_point@@Base+0x3b0>
    edb4:	ldr	w28, [x19, #8]
    edb8:	cbnz	w28, ee10 <argp_fmtstream_point@@Base+0x3f0>
    edbc:	ldr	x0, [x26]
    edc0:	str	x0, [x19]
    edc4:	ldr	x0, [x26, #16]
    edc8:	str	w27, [x19, #8]
    edcc:	str	x0, [x19, #16]
    edd0:	mov	x0, x26
    edd4:	bl	aa50 <free@plt>
    edd8:	ldr	x24, [x20, #32]!
    eddc:	cbnz	x24, ed1c <argp_fmtstream_point@@Base+0x2fc>
    ede0:	mov	x0, x19
    ede4:	ldp	x19, x20, [sp, #16]
    ede8:	ldp	x21, x22, [sp, #32]
    edec:	ldp	x23, x24, [sp, #48]
    edf0:	ldp	x25, x26, [sp, #64]
    edf4:	ldp	x27, x28, [sp, #80]
    edf8:	ldp	x29, x30, [sp], #160
    edfc:	ret
    ee00:	mov	w28, w1
    ee04:	str	x23, [x24]
    ee08:	str	x25, [x24, #16]
    ee0c:	b	ec08 <argp_fmtstream_point@@Base+0x1e8>
    ee10:	add	w0, w27, w28
    ee14:	mov	w1, #0x38                  	// #56
    ee18:	str	w0, [sp, #140]
    ee1c:	umull	x0, w0, w1
    ee20:	bl	a5f0 <malloc@plt>
    ee24:	str	x0, [sp, #120]
    ee28:	ldr	x24, [x19, #16]
    ee2c:	mov	x0, x24
    ee30:	bl	a340 <strlen@plt>
    ee34:	ldr	x25, [x26, #16]
    ee38:	mov	w23, w0
    ee3c:	str	x23, [sp, #104]
    ee40:	mov	x0, x25
    ee44:	bl	a340 <strlen@plt>
    ee48:	add	x0, x0, #0x1
    ee4c:	add	x0, x0, x23
    ee50:	bl	a5f0 <malloc@plt>
    ee54:	ldr	x1, [sp, #120]
    ee58:	mov	x23, x0
    ee5c:	cmp	x1, #0x0
    ee60:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    ee64:	b.eq	f0b0 <argp_fmtstream_point@@Base+0x690>  // b.none
    ee68:	mov	w0, #0x38                  	// #56
    ee6c:	ldr	x3, [x19]
    ee70:	umull	x2, w28, w0
    ee74:	ldr	x0, [sp, #120]
    ee78:	mov	x1, x3
    ee7c:	str	x3, [sp, #144]
    ee80:	bl	aab0 <mempcpy@plt>
    ee84:	mov	w2, #0x38                  	// #56
    ee88:	ldr	x1, [x26]
    ee8c:	umull	x2, w27, w2
    ee90:	bl	a2c0 <memcpy@plt>
    ee94:	ldr	x2, [sp, #104]
    ee98:	mov	x1, x24
    ee9c:	mov	x0, x23
    eea0:	bl	a2c0 <memcpy@plt>
    eea4:	sub	w4, w28, #0x1
    eea8:	add	x4, x4, #0x1
    eeac:	ldr	x1, [sp, #120]
    eeb0:	lsl	x0, x4, #3
    eeb4:	sub	x4, x0, x4
    eeb8:	mov	x2, x1
    eebc:	add	x28, x1, x4, lsl #3
    eec0:	ldr	x1, [x2, #16]
    eec4:	add	x2, x2, #0x38
    eec8:	sub	x1, x1, x24
    eecc:	add	x1, x23, x1
    eed0:	stur	x1, [x2, #-40]
    eed4:	cmp	x2, x28
    eed8:	b.ne	eec0 <argp_fmtstream_point@@Base+0x4a0>  // b.any
    eedc:	sub	w27, w27, #0x1
    eee0:	ldr	x0, [sp, #104]
    eee4:	add	x27, x27, #0x1
    eee8:	add	x24, x23, x0
    eeec:	lsl	x0, x27, #3
    eef0:	sub	x27, x0, x27
    eef4:	str	x24, [sp, #112]
    eef8:	add	x0, x28, x27, lsl #3
    eefc:	str	x0, [sp, #128]
    ef00:	ldr	w1, [x28, #8]
    ef04:	str	x24, [x28, #16]
    ef08:	ldr	x5, [x28]
    ef0c:	cbz	w1, ef70 <argp_fmtstream_point@@Base+0x550>
    ef10:	sub	w1, w1, #0x1
    ef14:	add	x1, x1, #0x1
    ef18:	add	x1, x1, x1, lsl #1
    ef1c:	add	x27, x5, x1, lsl #4
    ef20:	ldr	w0, [x5, #24]
    ef24:	tbnz	w0, #3, ef64 <argp_fmtstream_point@@Base+0x544>
    ef28:	ldr	w2, [x5, #8]
    ef2c:	str	w2, [sp, #136]
    ef30:	sub	w0, w2, #0x1
    ef34:	cmp	w0, #0xfe
    ef38:	b.hi	ef64 <argp_fmtstream_point@@Base+0x544>  // b.pmore
    ef3c:	str	x5, [sp, #104]
    ef40:	bl	a9d0 <__ctype_b_loc@plt>
    ef44:	ldr	w2, [sp, #136]
    ef48:	ldr	x0, [x0]
    ef4c:	ldrb	w6, [x25]
    ef50:	ldr	x5, [sp, #104]
    ef54:	ldrh	w0, [x0, w2, sxtw #1]
    ef58:	tst	x0, #0x4000
    ef5c:	ccmp	w6, w2, #0x0, ne  // ne = any
    ef60:	b.eq	f008 <argp_fmtstream_point@@Base+0x5e8>  // b.none
    ef64:	add	x5, x5, #0x30
    ef68:	cmp	x5, x27
    ef6c:	b.ne	ef20 <argp_fmtstream_point@@Base+0x500>  // b.any
    ef70:	ldr	x0, [sp, #128]
    ef74:	add	x28, x28, #0x38
    ef78:	cmp	x28, x0
    ef7c:	b.ne	ef00 <argp_fmtstream_point@@Base+0x4e0>  // b.any
    ef80:	ldr	x0, [sp, #144]
    ef84:	strb	wzr, [x24]
    ef88:	bl	aa50 <free@plt>
    ef8c:	ldr	x0, [x19, #16]
    ef90:	bl	aa50 <free@plt>
    ef94:	ldr	x24, [x26, #24]
    ef98:	str	x23, [x19, #16]
    ef9c:	ldr	x0, [sp, #120]
    efa0:	str	x0, [x19]
    efa4:	ldr	w0, [sp, #140]
    efa8:	str	w0, [x19, #8]
    efac:	cbz	x24, efc0 <argp_fmtstream_point@@Base+0x5a0>
    efb0:	mov	x0, x24
    efb4:	ldr	x24, [x24, #40]
    efb8:	bl	aa50 <free@plt>
    efbc:	cbnz	x24, efb0 <argp_fmtstream_point@@Base+0x590>
    efc0:	ldr	w0, [x26, #8]
    efc4:	cbz	w0, edd0 <argp_fmtstream_point@@Base+0x3b0>
    efc8:	ldr	x0, [x26]
    efcc:	bl	aa50 <free@plt>
    efd0:	ldr	x0, [x26, #16]
    efd4:	bl	aa50 <free@plt>
    efd8:	mov	x0, x26
    efdc:	bl	aa50 <free@plt>
    efe0:	ldr	x24, [x20, #32]!
    efe4:	cbnz	x24, ed1c <argp_fmtstream_point@@Base+0x2fc>
    efe8:	mov	x0, x19
    efec:	ldp	x19, x20, [sp, #16]
    eff0:	ldp	x21, x22, [sp, #32]
    eff4:	ldp	x23, x24, [sp, #48]
    eff8:	ldp	x25, x26, [sp, #64]
    effc:	ldp	x27, x28, [sp, #80]
    f000:	ldp	x29, x30, [sp], #160
    f004:	ret
    f008:	ldr	x0, [sp, #112]
    f00c:	cmp	x23, x0
    f010:	b.cs	f034 <argp_fmtstream_point@@Base+0x614>  // b.hs, b.nlast
    f014:	mov	x2, x23
    f018:	ldrb	w0, [x2]
    f01c:	cmp	w0, w6
    f020:	b.eq	f040 <argp_fmtstream_point@@Base+0x620>  // b.none
    f024:	ldr	x0, [sp, #112]
    f028:	add	x2, x2, #0x1
    f02c:	cmp	x0, x2
    f030:	b.ne	f018 <argp_fmtstream_point@@Base+0x5f8>  // b.any
    f034:	mov	x7, x24
    f038:	strb	w6, [x7], #1
    f03c:	mov	x24, x7
    f040:	add	x25, x25, #0x1
    f044:	b	ef64 <argp_fmtstream_point@@Base+0x544>
    f048:	ldr	x0, [sp, #152]
    f04c:	b	eda0 <argp_fmtstream_point@@Base+0x380>
    f050:	adrp	x3, 32000 <vasnprintf@@Base+0x1848>
    f054:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
    f058:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
    f05c:	add	x3, x3, #0x410
    f060:	add	x1, x1, #0x148
    f064:	add	x0, x0, #0x170
    f068:	mov	w2, #0x1db                 	// #475
    f06c:	bl	aea0 <__assert_fail@plt>
    f070:	adrp	x3, 32000 <vasnprintf@@Base+0x1848>
    f074:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
    f078:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
    f07c:	add	x3, x3, #0x410
    f080:	add	x1, x1, #0x148
    f084:	add	x0, x0, #0x160
    f088:	mov	w2, #0x1cd                 	// #461
    f08c:	bl	aea0 <__assert_fail@plt>
    f090:	adrp	x3, 32000 <vasnprintf@@Base+0x1848>
    f094:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
    f098:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
    f09c:	add	x3, x3, #0x410
    f0a0:	add	x1, x1, #0x148
    f0a4:	add	x0, x0, #0x158
    f0a8:	mov	w2, #0x1c3                 	// #451
    f0ac:	bl	aea0 <__assert_fail@plt>
    f0b0:	adrp	x3, 32000 <vasnprintf@@Base+0x1848>
    f0b4:	add	x3, x3, #0x410
    f0b8:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
    f0bc:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
    f0c0:	add	x3, x3, #0x10
    f0c4:	add	x1, x1, #0x148
    f0c8:	add	x0, x0, #0x198
    f0cc:	mov	w2, #0x370                 	// #880
    f0d0:	bl	aea0 <__assert_fail@plt>
    f0d4:	nop
    f0d8:	stp	x29, x30, [sp, #-128]!
    f0dc:	mov	x29, sp
    f0e0:	ldr	x3, [x1, #32]
    f0e4:	stp	x19, x20, [sp, #16]
    f0e8:	ldr	w4, [x0, #24]
    f0ec:	ldr	x2, [x0, #32]
    f0f0:	mov	x20, x1
    f0f4:	ldr	w1, [x1, #24]
    f0f8:	cmp	x2, x3
    f0fc:	b.eq	f1f4 <argp_fmtstream_point@@Base+0x7d4>  // b.none
    f100:	cbz	x2, f194 <argp_fmtstream_point@@Base+0x774>
    f104:	cbz	x3, f1b4 <argp_fmtstream_point@@Base+0x794>
    f108:	ldr	w0, [x2, #32]
    f10c:	ldr	w1, [x3, #32]
    f110:	cmp	w0, w1
    f114:	b.le	f138 <argp_fmtstream_point@@Base+0x718>
    f118:	ldr	x2, [x2, #16]
    f11c:	ldr	w0, [x2, #32]
    f120:	cmp	w0, w1
    f124:	b.gt	f118 <argp_fmtstream_point@@Base+0x6f8>
    f128:	cmp	w1, w0
    f12c:	b.le	f140 <argp_fmtstream_point@@Base+0x720>
    f130:	ldr	x3, [x3, #16]
    f134:	ldr	w1, [x3, #32]
    f138:	cmp	w1, w0
    f13c:	b.gt	f130 <argp_fmtstream_point@@Base+0x710>
    f140:	mov	x0, x2
    f144:	mov	x4, x3
    f148:	ldr	x2, [x2, #16]
    f14c:	ldr	x3, [x3, #16]
    f150:	cmp	x2, x3
    f154:	b.ne	f140 <argp_fmtstream_point@@Base+0x720>  // b.any
    f158:	ldp	w3, w1, [x4, #8]
    f15c:	ldr	w2, [x0, #12]
    f160:	ldr	w0, [x0, #8]
    f164:	cmp	w2, w1
    f168:	sub	w0, w3, w0
    f16c:	b.eq	f188 <argp_fmtstream_point@@Base+0x768>  // b.none
    f170:	mvn	w3, w1
    f174:	sub	w4, w2, w1
    f178:	sub	w0, w1, w2
    f17c:	lsr	w1, w3, #31
    f180:	cmp	w1, w2, lsr #31
    f184:	csel	w0, w0, w4, eq  // eq = none
    f188:	ldp	x19, x20, [sp, #16]
    f18c:	ldp	x29, x30, [sp], #128
    f190:	ret
    f194:	mov	x0, x3
    f198:	ldr	x3, [x3, #16]
    f19c:	cbnz	x3, f194 <argp_fmtstream_point@@Base+0x774>
    f1a0:	ldr	w1, [x0, #12]
    f1a4:	mov	w0, #0xffffffff            	// #-1
    f1a8:	cmp	w4, w1
    f1ac:	b.ne	f1fc <argp_fmtstream_point@@Base+0x7dc>  // b.any
    f1b0:	b	f188 <argp_fmtstream_point@@Base+0x768>
    f1b4:	mov	x0, x2
    f1b8:	ldr	x2, [x2, #16]
    f1bc:	cbnz	x2, f1b4 <argp_fmtstream_point@@Base+0x794>
    f1c0:	ldr	w2, [x0, #12]
    f1c4:	mov	w0, #0x1                   	// #1
    f1c8:	cmp	w1, w2
    f1cc:	b.eq	f188 <argp_fmtstream_point@@Base+0x768>  // b.none
    f1d0:	mvn	w3, w1
    f1d4:	sub	w0, w2, w1
    f1d8:	sub	w1, w1, w2
    f1dc:	lsr	w3, w3, #31
    f1e0:	cmp	w3, w2, lsr #31
    f1e4:	csel	w0, w1, w0, eq  // eq = none
    f1e8:	ldp	x19, x20, [sp, #16]
    f1ec:	ldp	x29, x30, [sp], #128
    f1f0:	ret
    f1f4:	cmp	w4, w1
    f1f8:	b.eq	f220 <argp_fmtstream_point@@Base+0x800>  // b.none
    f1fc:	mvn	w2, w1
    f200:	sub	w0, w4, w1
    f204:	sub	w1, w1, w4
    f208:	lsr	w2, w2, #31
    f20c:	cmp	w2, w4, lsr #31
    f210:	csel	w0, w1, w0, eq  // eq = none
    f214:	ldp	x19, x20, [sp, #16]
    f218:	ldp	x29, x30, [sp], #128
    f21c:	ret
    f220:	stp	x21, x22, [sp, #32]
    f224:	ldr	w22, [x0, #8]
    f228:	stp	x23, x24, [sp, #48]
    f22c:	stp	x25, x26, [sp, #64]
    f230:	stp	x27, x28, [sp, #80]
    f234:	ldr	x28, [x0]
    f238:	ldr	x27, [x0, #16]
    f23c:	cbz	w22, f598 <argp_fmtstream_point@@Base+0xb78>
    f240:	mov	w23, w22
    f244:	mov	x19, x28
    f248:	b	f2a0 <argp_fmtstream_point@@Base+0x880>
    f24c:	ldr	w26, [x19, #8]
    f250:	sub	w0, w26, #0x1
    f254:	cmp	w0, #0xfe
    f258:	b.hi	f290 <argp_fmtstream_point@@Base+0x870>  // b.pmore
    f25c:	bl	a9d0 <__ctype_b_loc@plt>
    f260:	ldr	x0, [x0]
    f264:	ldrh	w0, [x0, w26, sxtw #1]
    f268:	tbz	w0, #14, f290 <argp_fmtstream_point@@Base+0x870>
    f26c:	ldrb	w0, [x27]
    f270:	cmp	w26, w0
    f274:	b.ne	f290 <argp_fmtstream_point@@Base+0x870>  // b.any
    f278:	ands	w21, w21, #0x2
    f27c:	add	x27, x27, #0x1
    f280:	csel	w24, wzr, w24, eq  // eq = none
    f284:	cmp	w21, #0x0
    f288:	csel	w25, w26, wzr, eq  // eq = none
    f28c:	nop
    f290:	subs	w23, w23, #0x1
    f294:	add	x19, x19, #0x30
    f298:	ccmp	w24, #0x0, #0x4, ne  // ne = any
    f29c:	b.eq	f2b8 <argp_fmtstream_point@@Base+0x898>  // b.none
    f2a0:	ldr	w21, [x19, #24]
    f2a4:	mov	w24, #0x1                   	// #1
    f2a8:	and	w25, w21, #0x8
    f2ac:	tbz	w21, #3, f24c <argp_fmtstream_point@@Base+0x82c>
    f2b0:	mov	w25, #0x0                   	// #0
    f2b4:	b	f290 <argp_fmtstream_point@@Base+0x870>
    f2b8:	ldr	x24, [x20]
    f2bc:	and	w0, w25, #0xff
    f2c0:	str	w0, [sp, #120]
    f2c4:	mov	w27, #0x0                   	// #0
    f2c8:	ldr	w0, [x28, #24]
    f2cc:	mov	w23, #0x0                   	// #0
    f2d0:	ldr	w1, [x24, #24]
    f2d4:	ldr	w19, [x20, #8]
    f2d8:	and	w0, w0, #0x8
    f2dc:	str	w0, [sp, #116]
    f2e0:	and	w0, w1, #0x8
    f2e4:	str	w0, [sp, #112]
    f2e8:	ldr	x6, [x20, #16]
    f2ec:	cbz	w19, f384 <argp_fmtstream_point@@Base+0x964>
    f2f0:	mov	w23, w19
    f2f4:	mov	x20, x24
    f2f8:	b	f360 <argp_fmtstream_point@@Base+0x940>
    f2fc:	ldr	w5, [x20, #8]
    f300:	str	w5, [sp, #100]
    f304:	sub	w0, w5, #0x1
    f308:	cmp	w0, #0xfe
    f30c:	b.hi	f350 <argp_fmtstream_point@@Base+0x930>  // b.pmore
    f310:	str	x6, [sp, #104]
    f314:	bl	a9d0 <__ctype_b_loc@plt>
    f318:	ldr	w5, [sp, #100]
    f31c:	ldr	x0, [x0]
    f320:	ldr	x6, [sp, #104]
    f324:	ldrh	w0, [x0, w5, sxtw #1]
    f328:	tbz	w0, #14, f350 <argp_fmtstream_point@@Base+0x930>
    f32c:	ldrb	w0, [x6]
    f330:	cmp	w5, w0
    f334:	b.ne	f350 <argp_fmtstream_point@@Base+0x930>  // b.any
    f338:	ands	w21, w21, #0x2
    f33c:	add	x6, x6, #0x1
    f340:	csel	w26, wzr, w26, eq  // eq = none
    f344:	cmp	w21, #0x0
    f348:	csel	w27, w5, wzr, eq  // eq = none
    f34c:	nop
    f350:	subs	w23, w23, #0x1
    f354:	add	x20, x20, #0x30
    f358:	ccmp	w26, #0x0, #0x4, ne  // ne = any
    f35c:	b.eq	f378 <argp_fmtstream_point@@Base+0x958>  // b.none
    f360:	ldr	w21, [x20, #24]
    f364:	mov	w26, #0x1                   	// #1
    f368:	and	w27, w21, #0x8
    f36c:	tbz	w21, #3, f2fc <argp_fmtstream_point@@Base+0x8dc>
    f370:	mov	w27, #0x0                   	// #0
    f374:	b	f350 <argp_fmtstream_point@@Base+0x930>
    f378:	and	w23, w27, #0xff
    f37c:	mov	x21, #0x0                   	// #0
    f380:	cbz	w22, f3bc <argp_fmtstream_point@@Base+0x99c>
    f384:	sub	w0, w22, #0x1
    f388:	add	x0, x0, #0x1
    f38c:	add	x0, x0, x0, lsl #1
    f390:	add	x0, x28, x0, lsl #4
    f394:	nop
    f398:	ldr	x21, [x28]
    f39c:	cbz	x21, f3a8 <argp_fmtstream_point@@Base+0x988>
    f3a0:	ldr	w5, [x28, #24]
    f3a4:	tbz	w5, #1, f3b8 <argp_fmtstream_point@@Base+0x998>
    f3a8:	add	x28, x28, #0x30
    f3ac:	cmp	x28, x0
    f3b0:	b.ne	f398 <argp_fmtstream_point@@Base+0x978>  // b.any
    f3b4:	mov	x21, #0x0                   	// #0
    f3b8:	cbz	w19, f3ec <argp_fmtstream_point@@Base+0x9cc>
    f3bc:	sub	w0, w19, #0x1
    f3c0:	add	x0, x0, #0x1
    f3c4:	add	x0, x0, x0, lsl #1
    f3c8:	add	x0, x24, x0, lsl #4
    f3cc:	nop
    f3d0:	ldr	x20, [x24]
    f3d4:	cbz	x20, f3e0 <argp_fmtstream_point@@Base+0x9c0>
    f3d8:	ldr	w2, [x24, #24]
    f3dc:	tbz	w2, #1, f3f0 <argp_fmtstream_point@@Base+0x9d0>
    f3e0:	add	x24, x24, #0x30
    f3e4:	cmp	x24, x0
    f3e8:	b.ne	f3d0 <argp_fmtstream_point@@Base+0x9b0>  // b.any
    f3ec:	mov	x20, #0x0                   	// #0
    f3f0:	ldr	w0, [sp, #116]
    f3f4:	cbnz	w0, f438 <argp_fmtstream_point@@Base+0xa18>
    f3f8:	ldr	w0, [sp, #112]
    f3fc:	cbnz	w0, f49c <argp_fmtstream_point@@Base+0xa7c>
    f400:	orr	w0, w27, w25
    f404:	cmp	w0, #0x0
    f408:	ccmp	x21, #0x0, #0x4, eq  // eq = none
    f40c:	b.eq	f580 <argp_fmtstream_point@@Base+0xb60>  // b.none
    f410:	cbz	x20, f588 <argp_fmtstream_point@@Base+0xb68>
    f414:	mov	x1, x20
    f418:	mov	x0, x21
    f41c:	ldp	x19, x20, [sp, #16]
    f420:	ldp	x21, x22, [sp, #32]
    f424:	ldp	x23, x24, [sp, #48]
    f428:	ldp	x25, x26, [sp, #64]
    f42c:	ldp	x27, x28, [sp, #80]
    f430:	ldp	x29, x30, [sp], #128
    f434:	b	a7c0 <strcasecmp@plt>
    f438:	cbz	x21, f520 <argp_fmtstream_point@@Base+0xb00>
    f43c:	bl	a9d0 <__ctype_b_loc@plt>
    f440:	ldrb	w1, [x21]
    f444:	ldr	x2, [x0]
    f448:	ubfiz	x0, x1, #1, #8
    f44c:	ldrh	w0, [x2, x0]
    f450:	tbz	w0, #13, f468 <argp_fmtstream_point@@Base+0xa48>
    f454:	nop
    f458:	ldrb	w1, [x21, #1]!
    f45c:	ubfiz	x0, x1, #1, #8
    f460:	ldrh	w0, [x2, x0]
    f464:	tbnz	w0, #13, f458 <argp_fmtstream_point@@Base+0xa38>
    f468:	cbz	w1, f488 <argp_fmtstream_point@@Base+0xa68>
    f46c:	nop
    f470:	tbnz	w0, #3, f488 <argp_fmtstream_point@@Base+0xa68>
    f474:	ldrb	w0, [x21, #1]!
    f478:	ubfiz	x5, x0, #1, #8
    f47c:	cbz	w0, f488 <argp_fmtstream_point@@Base+0xa68>
    f480:	ldrh	w0, [x2, x5]
    f484:	b	f470 <argp_fmtstream_point@@Base+0xa50>
    f488:	cmp	w1, #0x2d
    f48c:	cset	w0, ne  // ne = any
    f490:	str	w0, [sp, #116]
    f494:	ldr	w0, [sp, #112]
    f498:	cbz	w0, f4fc <argp_fmtstream_point@@Base+0xadc>
    f49c:	str	wzr, [sp, #112]
    f4a0:	cbz	x20, f4fc <argp_fmtstream_point@@Base+0xadc>
    f4a4:	bl	a9d0 <__ctype_b_loc@plt>
    f4a8:	ldrb	w1, [x20]
    f4ac:	ldr	x2, [x0]
    f4b0:	ubfiz	x0, x1, #1, #8
    f4b4:	ldrh	w0, [x2, x0]
    f4b8:	tbz	w0, #13, f4d0 <argp_fmtstream_point@@Base+0xab0>
    f4bc:	nop
    f4c0:	ldrb	w1, [x20, #1]!
    f4c4:	ubfiz	x0, x1, #1, #8
    f4c8:	ldrh	w0, [x2, x0]
    f4cc:	tbnz	w0, #13, f4c0 <argp_fmtstream_point@@Base+0xaa0>
    f4d0:	cbz	w1, f4f0 <argp_fmtstream_point@@Base+0xad0>
    f4d4:	nop
    f4d8:	tbnz	w0, #3, f4f0 <argp_fmtstream_point@@Base+0xad0>
    f4dc:	ldrb	w0, [x20, #1]!
    f4e0:	ubfiz	x5, x0, #1, #8
    f4e4:	cbz	w0, f4f0 <argp_fmtstream_point@@Base+0xad0>
    f4e8:	ldrh	w0, [x2, x5]
    f4ec:	b	f4d8 <argp_fmtstream_point@@Base+0xab8>
    f4f0:	cmp	w1, #0x2d
    f4f4:	cset	w0, ne  // ne = any
    f4f8:	str	w0, [sp, #112]
    f4fc:	ldp	w0, w1, [sp, #112]
    f500:	cmp	w0, w1
    f504:	b.eq	f400 <argp_fmtstream_point@@Base+0x9e0>  // b.none
    f508:	sub	w0, w1, w0
    f50c:	ldp	x21, x22, [sp, #32]
    f510:	ldp	x23, x24, [sp, #48]
    f514:	ldp	x25, x26, [sp, #64]
    f518:	ldp	x27, x28, [sp, #80]
    f51c:	b	f188 <argp_fmtstream_point@@Base+0x768>
    f520:	ldr	w0, [sp, #112]
    f524:	cbz	w0, f530 <argp_fmtstream_point@@Base+0xb10>
    f528:	str	wzr, [sp, #116]
    f52c:	b	f49c <argp_fmtstream_point@@Base+0xa7c>
    f530:	cbz	w25, f5e8 <argp_fmtstream_point@@Base+0xbc8>
    f534:	ldr	x0, [sp, #120]
    f538:	ubfiz	x21, x0, #2, #8
    f53c:	cbnz	w27, f548 <argp_fmtstream_point@@Base+0xb28>
    f540:	cbz	x20, f5dc <argp_fmtstream_point@@Base+0xbbc>
    f544:	ldrb	w23, [x20]
    f548:	ubfiz	x19, x23, #2, #8
    f54c:	bl	a530 <__ctype_tolower_loc@plt>
    f550:	ldr	w1, [sp, #120]
    f554:	ldp	x25, x26, [sp, #64]
    f558:	sub	w23, w23, w1
    f55c:	ldr	x1, [x0]
    f560:	ldp	x27, x28, [sp, #80]
    f564:	ldr	w0, [x1, x21]
    f568:	ldr	w1, [x1, x19]
    f56c:	ldp	x21, x22, [sp, #32]
    f570:	subs	w0, w0, w1
    f574:	csel	w0, w23, w0, eq  // eq = none
    f578:	ldp	x23, x24, [sp, #48]
    f57c:	b	f188 <argp_fmtstream_point@@Base+0x768>
    f580:	cbnz	w25, f534 <argp_fmtstream_point@@Base+0xb14>
    f584:	cbz	x21, f5e8 <argp_fmtstream_point@@Base+0xbc8>
    f588:	ldrb	w0, [x21]
    f58c:	str	w0, [sp, #120]
    f590:	ubfiz	x21, x0, #2, #8
    f594:	b	f53c <argp_fmtstream_point@@Base+0xb1c>
    f598:	ldr	x24, [x20]
    f59c:	mov	w25, #0x0                   	// #0
    f5a0:	ldr	w0, [x28, #24]
    f5a4:	ldr	w19, [x20, #8]
    f5a8:	ldr	w1, [x24, #24]
    f5ac:	and	w0, w0, #0x8
    f5b0:	stp	w0, wzr, [sp, #116]
    f5b4:	and	w0, w1, #0x8
    f5b8:	str	w0, [sp, #112]
    f5bc:	ldr	x6, [x20, #16]
    f5c0:	cbnz	w19, f2f0 <argp_fmtstream_point@@Base+0x8d0>
    f5c4:	mov	w27, #0x0                   	// #0
    f5c8:	mov	w23, #0x0                   	// #0
    f5cc:	mov	x20, #0x0                   	// #0
    f5d0:	mov	x21, #0x0                   	// #0
    f5d4:	str	wzr, [sp, #116]
    f5d8:	b	f494 <argp_fmtstream_point@@Base+0xa74>
    f5dc:	mov	x19, #0x0                   	// #0
    f5e0:	mov	w23, #0x0                   	// #0
    f5e4:	b	f54c <argp_fmtstream_point@@Base+0xb2c>
    f5e8:	mov	x21, #0x0                   	// #0
    f5ec:	str	wzr, [sp, #120]
    f5f0:	b	f53c <argp_fmtstream_point@@Base+0xb1c>
    f5f4:	nop
    f5f8:	stp	x29, x30, [sp, #-112]!
    f5fc:	mov	x29, sp
    f600:	stp	x25, x26, [sp, #64]
    f604:	ldr	x25, [x0, #16]
    f608:	stp	x19, x20, [sp, #16]
    f60c:	mov	x19, x0
    f610:	ldr	x0, [x2]
    f614:	stp	x21, x22, [sp, #32]
    f618:	mov	w20, w3
    f61c:	stp	x23, x24, [sp, #48]
    f620:	mov	x23, x2
    f624:	mov	x24, x1
    f628:	stp	x27, x28, [sp, #80]
    f62c:	mov	x27, x4
    f630:	str	x0, [sp, #104]
    f634:	ldr	x22, [x19, #32]
    f638:	cbz	x25, f874 <argp_fmtstream_point@@Base+0xe54>
    f63c:	ldr	x0, [x19, #48]
    f640:	mov	x1, x25
    f644:	mov	w2, #0x5                   	// #5
    f648:	bl	ada0 <dcgettext@plt>
    f64c:	str	x0, [sp, #96]
    f650:	ldr	x1, [x19, #40]
    f654:	mov	x25, x0
    f658:	cbz	x1, f684 <argp_fmtstream_point@@Base+0xc64>
    f65c:	mov	x1, x24
    f660:	mov	x0, x19
    f664:	bl	ac60 <_argp_input@plt>
    f668:	mov	x2, x0
    f66c:	ldr	x3, [x19, #40]
    f670:	mov	w0, #0x6                   	// #6
    f674:	mov	x1, x25
    f678:	movk	w0, #0x200, lsl #16
    f67c:	blr	x3
    f680:	str	x0, [sp, #96]
    f684:	ldr	x0, [sp, #96]
    f688:	cbz	x0, f87c <argp_fmtstream_point@@Base+0xe5c>
    f68c:	mov	w1, #0xa                   	// #10
    f690:	bl	ad60 <strchrnul@plt>
    f694:	mov	x19, x0
    f698:	ldrb	w0, [x0]
    f69c:	cbnz	w0, f7c4 <argp_fmtstream_point@@Base+0xda4>
    f6a0:	ldp	x2, x1, [x27, #48]
    f6a4:	add	x0, x19, #0x1
    f6a8:	ldr	x26, [sp, #96]
    f6ac:	mov	w21, #0x0                   	// #0
    f6b0:	ldr	x5, [x27, #32]
    f6b4:	sub	x28, x0, x26
    f6b8:	sub	x0, x1, x2
    f6bc:	cmp	x0, x5
    f6c0:	b.hi	f824 <argp_fmtstream_point@@Base+0xe04>  // b.pmore
    f6c4:	ldr	x0, [x27, #40]
    f6c8:	ldr	x2, [x27, #16]
    f6cc:	cmp	x0, #0x0
    f6d0:	csel	x0, x0, xzr, ge  // ge = tcont
    f6d4:	add	x0, x0, x28
    f6d8:	cmp	x0, x2
    f6dc:	ldr	x0, [x27, #64]
    f6e0:	b.cc	f850 <argp_fmtstream_point@@Base+0xe30>  // b.lo, b.ul, b.last
    f6e4:	cmp	x1, x0
    f6e8:	b.cs	f8f4 <argp_fmtstream_point@@Base+0xed4>  // b.hs, b.nlast
    f6ec:	add	x0, x1, #0x1
    f6f0:	str	x0, [x27, #56]
    f6f4:	mov	w0, #0xa                   	// #10
    f6f8:	strb	w0, [x1]
    f6fc:	ldp	x0, x2, [x27, #56]
    f700:	sub	x28, x19, x26
    f704:	add	x1, x0, x28
    f708:	cmp	x2, x1
    f70c:	b.cs	f724 <argp_fmtstream_point@@Base+0xd04>  // b.hs, b.nlast
    f710:	mov	x1, x28
    f714:	mov	x0, x27
    f718:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f71c:	cbz	w0, f73c <argp_fmtstream_point@@Base+0xd1c>
    f720:	ldr	x0, [x27, #56]
    f724:	mov	x2, x28
    f728:	mov	x1, x26
    f72c:	bl	a2c0 <memcpy@plt>
    f730:	ldr	x2, [x27, #56]
    f734:	add	x2, x2, x28
    f738:	str	x2, [x27, #56]
    f73c:	ldr	x0, [sp, #96]
    f740:	cmp	x25, x0
    f744:	b.ne	f86c <argp_fmtstream_point@@Base+0xe4c>  // b.any
    f748:	cbz	x22, f780 <argp_fmtstream_point@@Base+0xd60>
    f74c:	ldr	x0, [x22]
    f750:	cbz	x0, f780 <argp_fmtstream_point@@Base+0xd60>
    f754:	nop
    f758:	mov	w3, w20
    f75c:	mov	x1, x24
    f760:	mov	x4, x27
    f764:	mov	x2, x23
    f768:	bl	f5f8 <argp_fmtstream_point@@Base+0xbd8>
    f76c:	mov	w1, w0
    f770:	ldr	x0, [x22, #32]!
    f774:	cmp	w1, #0x0
    f778:	cset	w20, eq  // eq = none
    f77c:	cbnz	x0, f758 <argp_fmtstream_point@@Base+0xd38>
    f780:	cmp	w20, #0x0
    f784:	ccmp	w21, #0x0, #0x4, ne  // ne = any
    f788:	b.eq	f880 <argp_fmtstream_point@@Base+0xe60>  // b.none
    f78c:	ldrb	w0, [x19]
    f790:	ldr	x2, [sp, #104]
    f794:	ldrb	w1, [x2]
    f798:	cbz	w0, f8a4 <argp_fmtstream_point@@Base+0xe84>
    f79c:	add	w1, w1, #0x1
    f7a0:	mov	w0, #0x1                   	// #1
    f7a4:	strb	w1, [x2]
    f7a8:	ldp	x19, x20, [sp, #16]
    f7ac:	ldp	x21, x22, [sp, #32]
    f7b0:	ldp	x23, x24, [sp, #48]
    f7b4:	ldp	x25, x26, [sp, #64]
    f7b8:	ldp	x27, x28, [sp, #80]
    f7bc:	ldp	x29, x30, [sp], #112
    f7c0:	ret
    f7c4:	ldr	x0, [sp, #104]
    f7c8:	ldrb	w28, [x0]
    f7cc:	cbz	w28, f920 <argp_fmtstream_point@@Base+0xf00>
    f7d0:	mov	w21, #0x0                   	// #0
    f7d4:	nop
    f7d8:	add	x26, x19, #0x1
    f7dc:	add	w21, w21, #0x1
    f7e0:	mov	x0, x26
    f7e4:	mov	w1, #0xa                   	// #10
    f7e8:	bl	ad60 <strchrnul@plt>
    f7ec:	mov	x19, x0
    f7f0:	cmp	w21, w28
    f7f4:	b.ne	f7d8 <argp_fmtstream_point@@Base+0xdb8>  // b.any
    f7f8:	ldr	x0, [x23]
    f7fc:	mov	w21, #0x1                   	// #1
    f800:	ldr	x5, [x27, #32]
    f804:	add	x0, x0, #0x1
    f808:	str	x0, [x23]
    f80c:	add	x0, x19, #0x1
    f810:	sub	x28, x0, x26
    f814:	ldp	x2, x1, [x27, #48]
    f818:	sub	x0, x1, x2
    f81c:	cmp	x0, x5
    f820:	b.ls	f6c4 <argp_fmtstream_point@@Base+0xca4>  // b.plast
    f824:	mov	x0, x27
    f828:	bl	a520 <_argp_fmtstream_update@plt>
    f82c:	ldr	x0, [x27, #40]
    f830:	ldr	x2, [x27, #16]
    f834:	cmp	x0, #0x0
    f838:	csel	x0, x0, xzr, ge  // ge = tcont
    f83c:	add	x0, x0, x28
    f840:	cmp	x0, x2
    f844:	ldr	x1, [x27, #56]
    f848:	ldr	x0, [x27, #64]
    f84c:	b.cs	f6e4 <argp_fmtstream_point@@Base+0xcc4>  // b.hs, b.nlast
    f850:	cmp	x1, x0
    f854:	b.cs	f8cc <argp_fmtstream_point@@Base+0xeac>  // b.hs, b.nlast
    f858:	add	x0, x1, #0x1
    f85c:	str	x0, [x27, #56]
    f860:	mov	w0, #0x20                  	// #32
    f864:	strb	w0, [x1]
    f868:	b	f6fc <argp_fmtstream_point@@Base+0xcdc>
    f86c:	bl	aa50 <free@plt>
    f870:	b	f748 <argp_fmtstream_point@@Base+0xd28>
    f874:	ldr	x0, [x19, #40]
    f878:	cbnz	x0, f65c <argp_fmtstream_point@@Base+0xc3c>
    f87c:	cbnz	x22, f90c <argp_fmtstream_point@@Base+0xeec>
    f880:	cmp	w20, #0x0
    f884:	cset	w0, eq  // eq = none
    f888:	ldp	x19, x20, [sp, #16]
    f88c:	ldp	x21, x22, [sp, #32]
    f890:	ldp	x23, x24, [sp, #48]
    f894:	ldp	x25, x26, [sp, #64]
    f898:	ldp	x27, x28, [sp, #80]
    f89c:	ldp	x29, x30, [sp], #112
    f8a0:	ret
    f8a4:	mov	w0, #0x0                   	// #0
    f8a8:	cbz	w1, f7a8 <argp_fmtstream_point@@Base+0xd88>
    f8ac:	strb	wzr, [x2]
    f8b0:	ldp	x19, x20, [sp, #16]
    f8b4:	ldp	x21, x22, [sp, #32]
    f8b8:	ldp	x23, x24, [sp, #48]
    f8bc:	ldp	x25, x26, [sp, #64]
    f8c0:	ldp	x27, x28, [sp, #80]
    f8c4:	ldp	x29, x30, [sp], #112
    f8c8:	ret
    f8cc:	mov	x0, x27
    f8d0:	mov	x1, #0x1                   	// #1
    f8d4:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f8d8:	cbz	w0, f6fc <argp_fmtstream_point@@Base+0xcdc>
    f8dc:	ldr	x1, [x27, #56]
    f8e0:	add	x0, x1, #0x1
    f8e4:	str	x0, [x27, #56]
    f8e8:	mov	w0, #0x20                  	// #32
    f8ec:	strb	w0, [x1]
    f8f0:	b	f6fc <argp_fmtstream_point@@Base+0xcdc>
    f8f4:	mov	x0, x27
    f8f8:	mov	x1, #0x1                   	// #1
    f8fc:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f900:	cbz	w0, f6fc <argp_fmtstream_point@@Base+0xcdc>
    f904:	ldr	x1, [x27, #56]
    f908:	b	f6ec <argp_fmtstream_point@@Base+0xccc>
    f90c:	ldr	x0, [x22]
    f910:	mov	w21, #0x0                   	// #0
    f914:	mov	x19, #0x0                   	// #0
    f918:	cbnz	x0, f758 <argp_fmtstream_point@@Base+0xd38>
    f91c:	b	f880 <argp_fmtstream_point@@Base+0xe60>
    f920:	ldr	x26, [sp, #96]
    f924:	b	f7f8 <argp_fmtstream_point@@Base+0xdd8>
    f928:	stp	x29, x30, [sp, #-96]!
    f92c:	mov	x29, sp
    f930:	stp	x19, x20, [sp, #16]
    f934:	mov	x19, x1
    f938:	stp	x21, x22, [sp, #32]
    f93c:	mov	x22, x0
    f940:	stp	x23, x24, [sp, #48]
    f944:	mov	x23, x2
    f948:	cbz	x0, fb24 <argp_fmtstream_point@@Base+0x1104>
    f94c:	mov	x1, x0
    f950:	mov	w2, #0x5                   	// #5
    f954:	ldr	x0, [x19, #48]
    f958:	bl	ada0 <dcgettext@plt>
    f95c:	mov	x21, x0
    f960:	ldr	x1, [x19, #40]
    f964:	mov	x22, x0
    f968:	cbz	x1, f994 <argp_fmtstream_point@@Base+0xf74>
    f96c:	ldr	x1, [x23, #32]
    f970:	mov	x0, x19
    f974:	bl	ac60 <_argp_input@plt>
    f978:	mov	x2, x0
    f97c:	ldr	x3, [x19, #40]
    f980:	mov	w0, #0x3                   	// #3
    f984:	mov	x1, x22
    f988:	movk	w0, #0x200, lsl #16
    f98c:	blr	x3
    f990:	mov	x21, x0
    f994:	cbz	x21, f9ac <argp_fmtstream_point@@Base+0xf8c>
    f998:	ldrb	w1, [x21]
    f99c:	ldr	x0, [x23, #16]
    f9a0:	cbnz	w1, f9cc <argp_fmtstream_point@@Base+0xfac>
    f9a4:	mov	w1, #0x1                   	// #1
    f9a8:	str	w1, [x0, #8]
    f9ac:	cmp	x22, x21
    f9b0:	b.eq	fb30 <argp_fmtstream_point@@Base+0x1110>  // b.none
    f9b4:	mov	x0, x21
    f9b8:	ldp	x19, x20, [sp, #16]
    f9bc:	ldp	x21, x22, [sp, #32]
    f9c0:	ldp	x23, x24, [sp, #48]
    f9c4:	ldp	x29, x30, [sp], #96
    f9c8:	b	aa50 <free@plt>
    f9cc:	ldr	x0, [x0]
    f9d0:	stp	x25, x26, [sp, #64]
    f9d4:	ldr	x19, [x23, #8]
    f9d8:	stp	x27, x28, [sp, #80]
    f9dc:	ldr	x20, [x19, #56]
    f9e0:	cbz	x0, fa1c <argp_fmtstream_point@@Base+0xffc>
    f9e4:	ldr	x0, [x19, #64]
    f9e8:	cmp	x0, x20
    f9ec:	b.hi	fa04 <argp_fmtstream_point@@Base+0xfe4>  // b.pmore
    f9f0:	mov	x0, x19
    f9f4:	mov	x1, #0x1                   	// #1
    f9f8:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f9fc:	cbz	w0, fa14 <argp_fmtstream_point@@Base+0xff4>
    fa00:	ldr	x20, [x19, #56]
    fa04:	add	x0, x20, #0x1
    fa08:	str	x0, [x19, #56]
    fa0c:	mov	w0, #0xa                   	// #10
    fa10:	strb	w0, [x20]
    fa14:	ldr	x19, [x23, #8]
    fa18:	ldr	x20, [x19, #56]
    fa1c:	adrp	x25, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
    fa20:	ldr	x0, [x19, #48]
    fa24:	add	x2, x25, #0x1e8
    fa28:	ldr	x1, [x19, #32]
    fa2c:	sub	x0, x20, x0
    fa30:	ldr	w26, [x2, #24]
    fa34:	cmp	x0, x1
    fa38:	b.hi	fb70 <argp_fmtstream_point@@Base+0x1150>  // b.pmore
    fa3c:	ldr	x24, [x19, #40]
    fa40:	cmp	x24, #0x0
    fa44:	csel	x24, x24, xzr, ge  // ge = tcont
    fa48:	sub	w24, w26, w24
    fa4c:	cmp	w24, #0x0
    fa50:	sub	w24, w24, #0x1
    fa54:	b.le	fc28 <argp_fmtstream_point@@Base+0x1208>
    fa58:	mov	w26, #0x20                  	// #32
    fa5c:	b	fa64 <argp_fmtstream_point@@Base+0x1044>
    fa60:	ldr	x20, [x19, #56]
    fa64:	mov	x0, x19
    fa68:	ldr	x2, [x19, #64]
    fa6c:	mov	x1, #0x1                   	// #1
    fa70:	cmp	x2, x20
    fa74:	b.hi	fa84 <argp_fmtstream_point@@Base+0x1064>  // b.pmore
    fa78:	bl	ad80 <_argp_fmtstream_ensure@plt>
    fa7c:	cbz	w0, fa90 <argp_fmtstream_point@@Base+0x1070>
    fa80:	ldr	x20, [x19, #56]
    fa84:	add	x0, x20, #0x1
    fa88:	str	x0, [x19, #56]
    fa8c:	strb	w26, [x20]
    fa90:	cmp	w24, #0x0
    fa94:	sub	w24, w24, #0x1
    fa98:	b.gt	fa60 <argp_fmtstream_point@@Base+0x1040>
    fa9c:	ldr	x19, [x23, #8]
    faa0:	add	x25, x25, #0x1e8
    faa4:	mov	x24, x19
    faa8:	ldp	x0, x20, [x19, #48]
    faac:	ldr	x1, [x19, #32]
    fab0:	ldrsw	x27, [x25, #24]
    fab4:	sub	x0, x20, x0
    fab8:	cmp	x0, x1
    fabc:	b.hi	fbe8 <argp_fmtstream_point@@Base+0x11c8>  // b.pmore
    fac0:	mov	x28, x19
    fac4:	str	x27, [x19, #8]
    fac8:	str	x27, [x28, #24]
    facc:	mov	x0, x21
    fad0:	bl	a340 <strlen@plt>
    fad4:	mov	x19, x0
    fad8:	cbnz	x0, fb9c <argp_fmtstream_point@@Base+0x117c>
    fadc:	ldr	x0, [x24, #48]
    fae0:	mov	x19, x24
    fae4:	ldr	x1, [x24, #32]
    fae8:	sub	x0, x20, x0
    faec:	cmp	x0, x1
    faf0:	b.hi	fb5c <argp_fmtstream_point@@Base+0x113c>  // b.pmore
    faf4:	ldr	x0, [x19, #64]
    faf8:	str	xzr, [x24, #8]
    fafc:	cmp	x0, x20
    fb00:	b.ls	fb44 <argp_fmtstream_point@@Base+0x1124>  // b.plast
    fb04:	add	x0, x20, #0x1
    fb08:	str	x0, [x19, #56]
    fb0c:	mov	w0, #0xa                   	// #10
    fb10:	strb	w0, [x20]
    fb14:	ldr	x0, [x23, #16]
    fb18:	ldp	x25, x26, [sp, #64]
    fb1c:	ldp	x27, x28, [sp, #80]
    fb20:	b	f9a4 <argp_fmtstream_point@@Base+0xf84>
    fb24:	cbz	x1, fb30 <argp_fmtstream_point@@Base+0x1110>
    fb28:	ldr	x0, [x1, #40]
    fb2c:	cbnz	x0, f96c <argp_fmtstream_point@@Base+0xf4c>
    fb30:	ldp	x19, x20, [sp, #16]
    fb34:	ldp	x21, x22, [sp, #32]
    fb38:	ldp	x23, x24, [sp, #48]
    fb3c:	ldp	x29, x30, [sp], #96
    fb40:	ret
    fb44:	mov	x0, x19
    fb48:	mov	x1, #0x1                   	// #1
    fb4c:	bl	ad80 <_argp_fmtstream_ensure@plt>
    fb50:	cbz	w0, fb14 <argp_fmtstream_point@@Base+0x10f4>
    fb54:	ldr	x20, [x19, #56]
    fb58:	b	fb04 <argp_fmtstream_point@@Base+0x10e4>
    fb5c:	mov	x0, x24
    fb60:	bl	a520 <_argp_fmtstream_update@plt>
    fb64:	ldr	x19, [x23, #8]
    fb68:	ldr	x20, [x19, #56]
    fb6c:	b	faf4 <argp_fmtstream_point@@Base+0x10d4>
    fb70:	mov	x0, x19
    fb74:	bl	a520 <_argp_fmtstream_update@plt>
    fb78:	ldr	x24, [x19, #40]
    fb7c:	cmp	x24, #0x0
    fb80:	csel	x24, x24, xzr, ge  // ge = tcont
    fb84:	sub	w24, w26, w24
    fb88:	cmp	w24, #0x0
    fb8c:	sub	w24, w24, #0x1
    fb90:	b.le	fa9c <argp_fmtstream_point@@Base+0x107c>
    fb94:	ldr	x20, [x19, #56]
    fb98:	b	fa58 <argp_fmtstream_point@@Base+0x1038>
    fb9c:	ldr	x1, [x24, #64]
    fba0:	add	x0, x20, x0
    fba4:	cmp	x1, x0
    fba8:	b.cs	fbc0 <argp_fmtstream_point@@Base+0x11a0>  // b.hs, b.nlast
    fbac:	mov	x1, x19
    fbb0:	mov	x0, x24
    fbb4:	bl	ad80 <_argp_fmtstream_ensure@plt>
    fbb8:	cbz	w0, fbdc <argp_fmtstream_point@@Base+0x11bc>
    fbbc:	ldr	x20, [x24, #56]
    fbc0:	mov	x0, x20
    fbc4:	mov	x2, x19
    fbc8:	mov	x1, x21
    fbcc:	bl	a2c0 <memcpy@plt>
    fbd0:	ldr	x0, [x24, #56]
    fbd4:	add	x0, x0, x19
    fbd8:	str	x0, [x24, #56]
    fbdc:	ldr	x24, [x23, #8]
    fbe0:	ldr	x20, [x24, #56]
    fbe4:	b	fadc <argp_fmtstream_point@@Base+0x10bc>
    fbe8:	mov	x0, x19
    fbec:	bl	a520 <_argp_fmtstream_update@plt>
    fbf0:	ldr	x28, [x23, #8]
    fbf4:	ldr	w26, [x25, #24]
    fbf8:	ldp	x0, x20, [x28, #48]
    fbfc:	ldr	x1, [x28, #32]
    fc00:	str	x27, [x19, #8]
    fc04:	sub	x0, x20, x0
    fc08:	cmp	x0, x1
    fc0c:	b.ls	fc34 <argp_fmtstream_point@@Base+0x1214>  // b.plast
    fc10:	mov	x0, x28
    fc14:	bl	a520 <_argp_fmtstream_update@plt>
    fc18:	ldr	x24, [x23, #8]
    fc1c:	sxtw	x27, w26
    fc20:	ldr	x20, [x24, #56]
    fc24:	b	fac8 <argp_fmtstream_point@@Base+0x10a8>
    fc28:	sxtw	x27, w26
    fc2c:	mov	x24, x19
    fc30:	b	fac0 <argp_fmtstream_point@@Base+0x10a0>
    fc34:	sxtw	x27, w26
    fc38:	mov	x24, x28
    fc3c:	b	fac8 <argp_fmtstream_point@@Base+0x10a8>
    fc40:	stp	x29, x30, [sp, #-64]!
    fc44:	mov	x29, sp
    fc48:	stp	x19, x20, [sp, #16]
    fc4c:	mov	w20, w0
    fc50:	ldr	w0, [x1, #24]
    fc54:	stp	x21, x22, [sp, #32]
    fc58:	mov	x21, x1
    fc5c:	ldr	x19, [x1, #8]
    fc60:	cbz	w0, fd6c <argp_fmtstream_point@@Base+0x134c>
    fc64:	ldr	x1, [x1]
    fc68:	ldr	x0, [x21, #16]
    fc6c:	ldr	x22, [x1, #32]
    fc70:	str	x23, [sp, #48]
    fc74:	ldr	x23, [x0]
    fc78:	ldr	w0, [x0, #8]
    fc7c:	cmp	w0, #0x0
    fc80:	ccmp	x23, #0x0, #0x4, ne  // ne = any
    fc84:	b.ne	fd20 <argp_fmtstream_point@@Base+0x1300>  // b.any
    fc88:	cbz	x22, fc9c <argp_fmtstream_point@@Base+0x127c>
    fc8c:	ldr	x0, [x22]
    fc90:	cbz	x0, fc9c <argp_fmtstream_point@@Base+0x127c>
    fc94:	ldrb	w1, [x0]
    fc98:	cbnz	w1, fdcc <argp_fmtstream_point@@Base+0x13ac>
    fc9c:	ldp	x2, x0, [x19, #48]
    fca0:	ldr	x1, [x19, #32]
    fca4:	sub	x0, x0, x2
    fca8:	ldr	x23, [sp, #48]
    fcac:	str	wzr, [x21, #24]
    fcb0:	cmp	x0, x1
    fcb4:	b.hi	fdc0 <argp_fmtstream_point@@Base+0x13a0>  // b.pmore
    fcb8:	ldr	x0, [x19, #40]
    fcbc:	mov	w21, #0x20                  	// #32
    fcc0:	cmp	x0, #0x0
    fcc4:	csel	x0, x0, xzr, ge  // ge = tcont
    fcc8:	sub	w20, w20, w0
    fccc:	cmp	w20, #0x0
    fcd0:	sub	w20, w20, #0x1
    fcd4:	b.le	fd10 <argp_fmtstream_point@@Base+0x12f0>
    fcd8:	ldp	x2, x3, [x19, #56]
    fcdc:	sub	w20, w20, #0x1
    fce0:	mov	x0, x19
    fce4:	mov	x1, #0x1                   	// #1
    fce8:	cmp	x2, x3
    fcec:	b.cc	fcfc <argp_fmtstream_point@@Base+0x12dc>  // b.lo, b.ul, b.last
    fcf0:	bl	ad80 <_argp_fmtstream_ensure@plt>
    fcf4:	cbz	w0, fd08 <argp_fmtstream_point@@Base+0x12e8>
    fcf8:	ldr	x2, [x19, #56]
    fcfc:	add	x0, x2, #0x1
    fd00:	str	x0, [x19, #56]
    fd04:	strb	w21, [x2]
    fd08:	cmn	w20, #0x1
    fd0c:	b.ne	fcd8 <argp_fmtstream_point@@Base+0x12b8>  // b.any
    fd10:	ldp	x19, x20, [sp, #16]
    fd14:	ldp	x21, x22, [sp, #32]
    fd18:	ldp	x29, x30, [sp], #64
    fd1c:	ret
    fd20:	ldr	w1, [x1, #24]
    fd24:	ldr	w0, [x23, #24]
    fd28:	cmp	w1, w0
    fd2c:	b.eq	fc88 <argp_fmtstream_point@@Base+0x1268>  // b.none
    fd30:	ldp	x0, x1, [x19, #56]
    fd34:	cmp	x0, x1
    fd38:	b.cc	fd50 <argp_fmtstream_point@@Base+0x1330>  // b.lo, b.ul, b.last
    fd3c:	mov	x0, x19
    fd40:	mov	x1, #0x1                   	// #1
    fd44:	bl	ad80 <_argp_fmtstream_ensure@plt>
    fd48:	cbz	w0, fd60 <argp_fmtstream_point@@Base+0x1340>
    fd4c:	ldr	x0, [x19, #56]
    fd50:	add	x1, x0, #0x1
    fd54:	str	x1, [x19, #56]
    fd58:	mov	w1, #0xa                   	// #10
    fd5c:	strb	w1, [x0]
    fd60:	ldr	x19, [x21, #8]
    fd64:	cbnz	x22, fc8c <argp_fmtstream_point@@Base+0x126c>
    fd68:	b	fc9c <argp_fmtstream_point@@Base+0x127c>
    fd6c:	ldp	x0, x2, [x19, #56]
    fd70:	add	x1, x0, #0x2
    fd74:	cmp	x2, x1
    fd78:	b.cs	fd90 <argp_fmtstream_point@@Base+0x1370>  // b.hs, b.nlast
    fd7c:	mov	x0, x19
    fd80:	mov	x1, #0x2                   	// #2
    fd84:	bl	ad80 <_argp_fmtstream_ensure@plt>
    fd88:	cbz	w0, fda4 <argp_fmtstream_point@@Base+0x1384>
    fd8c:	ldr	x0, [x19, #56]
    fd90:	mov	w1, #0x202c                	// #8236
    fd94:	strh	w1, [x0]
    fd98:	ldr	x0, [x19, #56]
    fd9c:	add	x0, x0, #0x2
    fda0:	str	x0, [x19, #56]
    fda4:	ldr	x19, [x21, #8]
    fda8:	ldp	x2, x0, [x19, #48]
    fdac:	ldr	x1, [x19, #32]
    fdb0:	sub	x0, x0, x2
    fdb4:	cmp	x0, x1
    fdb8:	b.ls	fcb8 <argp_fmtstream_point@@Base+0x1298>  // b.plast
    fdbc:	nop
    fdc0:	mov	x0, x19
    fdc4:	bl	a520 <_argp_fmtstream_update@plt>
    fdc8:	b	fcb8 <argp_fmtstream_point@@Base+0x1298>
    fdcc:	cbz	x23, fdf8 <argp_fmtstream_point@@Base+0x13d8>
    fdd0:	ldr	x1, [x23, #32]
    fdd4:	cmp	x1, x22
    fdd8:	b.eq	fc9c <argp_fmtstream_point@@Base+0x127c>  // b.none
    fddc:	cbz	x1, fdf8 <argp_fmtstream_point@@Base+0x13d8>
    fde0:	ldr	x1, [x1, #16]
    fde4:	cmp	x1, #0x0
    fde8:	ccmp	x22, x1, #0x4, ne  // ne = any
    fdec:	b.ne	fde0 <argp_fmtstream_point@@Base+0x13c0>  // b.any
    fdf0:	cmp	x22, x1
    fdf4:	b.eq	fc9c <argp_fmtstream_point@@Base+0x127c>  // b.none
    fdf8:	ldr	x1, [x22, #24]
    fdfc:	mov	x2, x21
    fe00:	ldr	x23, [x19, #24]
    fe04:	bl	f928 <argp_fmtstream_point@@Base+0xf08>
    fe08:	ldr	x22, [x21, #8]
    fe0c:	mov	x19, x22
    fe10:	ldp	x2, x0, [x22, #48]
    fe14:	ldr	x1, [x22, #32]
    fe18:	sub	x0, x0, x2
    fe1c:	cmp	x0, x1
    fe20:	b.hi	fe30 <argp_fmtstream_point@@Base+0x1410>  // b.pmore
    fe24:	sxtw	x23, w23
    fe28:	str	x23, [x22, #24]
    fe2c:	b	fca8 <argp_fmtstream_point@@Base+0x1288>
    fe30:	mov	x0, x22
    fe34:	bl	a520 <_argp_fmtstream_update@plt>
    fe38:	ldr	x19, [x21, #8]
    fe3c:	ldp	x2, x0, [x19, #48]
    fe40:	ldr	x1, [x19, #32]
    fe44:	sub	x0, x0, x2
    fe48:	b	fe24 <argp_fmtstream_point@@Base+0x1404>
    fe4c:	nop
    fe50:	stp	x29, x30, [sp, #-128]!
    fe54:	mov	x29, sp
    fe58:	stp	x21, x22, [sp, #32]
    fe5c:	ldr	w21, [x0, #8]
    fe60:	stp	x19, x20, [sp, #16]
    fe64:	stp	x23, x24, [sp, #48]
    fe68:	stp	x25, x26, [sp, #64]
    fe6c:	stp	x27, x28, [sp, #80]
    fe70:	str	x0, [x29, #120]
    fe74:	cbz	w21, 100c8 <argp_fmtstream_point@@Base+0x16a8>
    fe78:	mov	x19, x0
    fe7c:	mov	x22, x1
    fe80:	ldr	x0, [x0, #16]
    fe84:	sub	w1, w21, #0x1
    fe88:	mov	w20, w1
    fe8c:	str	w1, [x29, #96]
    fe90:	bl	a340 <strlen@plt>
    fe94:	add	x0, x0, #0x10
    fe98:	mov	w1, w20
    fe9c:	and	x0, x0, #0xfffffffffffffff0
    fea0:	add	x1, x1, #0x1
    fea4:	sub	sp, sp, x0
    fea8:	ldr	x26, [x19]
    feac:	lsl	x23, x1, #3
    feb0:	sub	x23, x23, x1
    feb4:	mov	x0, sp
    feb8:	mov	x21, x26
    febc:	stp	x0, x0, [x29, #104]
    fec0:	add	x23, x26, x23, lsl #3
    fec4:	nop
    fec8:	ldr	w0, [x21, #8]
    fecc:	ldr	x24, [x21]
    fed0:	ldr	x25, [x21, #16]
    fed4:	cbz	w0, ff34 <argp_fmtstream_point@@Base+0x1514>
    fed8:	sub	w0, w0, #0x1
    fedc:	mov	x19, x24
    fee0:	add	x20, x0, #0x1
    fee4:	add	x20, x20, x20, lsl #1
    fee8:	add	x20, x24, x20, lsl #4
    feec:	nop
    fef0:	ldr	w27, [x19, #24]
    fef4:	tbnz	w27, #3, ff28 <argp_fmtstream_point@@Base+0x1508>
    fef8:	ldr	w28, [x19, #8]
    fefc:	sub	w0, w28, #0x1
    ff00:	cmp	w0, #0xfe
    ff04:	b.hi	ff28 <argp_fmtstream_point@@Base+0x1508>  // b.pmore
    ff08:	bl	a9d0 <__ctype_b_loc@plt>
    ff0c:	ldr	x0, [x0]
    ff10:	ldrh	w0, [x0, w28, sxtw #1]
    ff14:	tbz	w0, #14, ff28 <argp_fmtstream_point@@Base+0x1508>
    ff18:	ldrb	w0, [x25]
    ff1c:	cmp	w28, w0
    ff20:	b.eq	100e8 <argp_fmtstream_point@@Base+0x16c8>  // b.none
    ff24:	nop
    ff28:	add	x19, x19, #0x30
    ff2c:	cmp	x19, x20
    ff30:	b.ne	fef0 <argp_fmtstream_point@@Base+0x14d0>  // b.any
    ff34:	add	x21, x21, #0x38
    ff38:	cmp	x21, x23
    ff3c:	b.ne	fec8 <argp_fmtstream_point@@Base+0x14a8>  // b.any
    ff40:	ldp	x0, x1, [x29, #104]
    ff44:	cmp	x0, x1
    ff48:	b.cc	10220 <argp_fmtstream_point@@Base+0x1800>  // b.lo, b.ul, b.last
    ff4c:	ldr	w0, [x29, #96]
    ff50:	adrp	x27, 32000 <vasnprintf@@Base+0x1848>
    ff54:	add	x1, x27, #0x1d0
    ff58:	str	x1, [x29, #112]
    ff5c:	add	x0, x0, #0x1
    ff60:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
    ff64:	add	x1, x1, #0x1c0
    ff68:	str	x1, [x29, #104]
    ff6c:	lsl	x23, x0, #3
    ff70:	sub	x0, x23, x0
    ff74:	add	x23, x26, x0, lsl #3
    ff78:	ldr	w0, [x26, #8]
    ff7c:	ldr	x1, [x26, #40]
    ff80:	ldr	x27, [x26]
    ff84:	ldr	x21, [x26, #16]
    ff88:	ldr	x25, [x1, #48]
    ff8c:	cbz	w0, ffec <argp_fmtstream_point@@Base+0x15cc>
    ff90:	sub	w0, w0, #0x1
    ff94:	mov	x19, x27
    ff98:	add	x28, x0, #0x1
    ff9c:	add	x28, x28, x28, lsl #1
    ffa0:	add	x28, x27, x28, lsl #4
    ffa4:	nop
    ffa8:	ldr	w20, [x19, #24]
    ffac:	tbnz	w20, #3, ffe0 <argp_fmtstream_point@@Base+0x15c0>
    ffb0:	ldr	w24, [x19, #8]
    ffb4:	sub	w0, w24, #0x1
    ffb8:	cmp	w0, #0xfe
    ffbc:	b.hi	ffe0 <argp_fmtstream_point@@Base+0x15c0>  // b.pmore
    ffc0:	bl	a9d0 <__ctype_b_loc@plt>
    ffc4:	ldr	x0, [x0]
    ffc8:	ldrh	w0, [x0, w24, sxtw #1]
    ffcc:	tbz	w0, #14, ffe0 <argp_fmtstream_point@@Base+0x15c0>
    ffd0:	ldrb	w0, [x21]
    ffd4:	cmp	w24, w0
    ffd8:	b.eq	1014c <argp_fmtstream_point@@Base+0x172c>  // b.none
    ffdc:	nop
    ffe0:	add	x19, x19, #0x30
    ffe4:	cmp	x19, x28
    ffe8:	b.ne	ffa8 <argp_fmtstream_point@@Base+0x1588>  // b.any
    ffec:	add	x26, x26, #0x38
    fff0:	cmp	x26, x23
    fff4:	b.ne	ff78 <argp_fmtstream_point@@Base+0x1558>  // b.any
    fff8:	ldr	x1, [x29, #120]
    fffc:	ldr	w0, [x1, #8]
   10000:	ldr	x28, [x1]
   10004:	cbz	w0, 100c8 <argp_fmtstream_point@@Base+0x16a8>
   10008:	sub	w0, w0, #0x1
   1000c:	adrp	x26, 32000 <vasnprintf@@Base+0x1848>
   10010:	add	x0, x0, #0x1
   10014:	adrp	x25, 32000 <vasnprintf@@Base+0x1848>
   10018:	add	x26, x26, #0x1f0
   1001c:	add	x25, x25, #0x1e0
   10020:	lsl	x24, x0, #3
   10024:	sub	x0, x24, x0
   10028:	add	x24, x28, x0, lsl #3
   1002c:	nop
   10030:	ldr	w0, [x28, #8]
   10034:	ldr	x1, [x28, #40]
   10038:	ldr	x27, [x28]
   1003c:	ldr	x23, [x1, #48]
   10040:	cbz	w0, 100bc <argp_fmtstream_point@@Base+0x169c>
   10044:	sub	w0, w0, #0x1
   10048:	mov	x19, x27
   1004c:	add	x21, x0, #0x1
   10050:	add	x21, x21, x21, lsl #1
   10054:	add	x21, x27, x21, lsl #4
   10058:	ldr	x2, [x19]
   1005c:	cbz	x2, 100b0 <argp_fmtstream_point@@Base+0x1690>
   10060:	ldr	w0, [x19, #24]
   10064:	tst	x0, #0x4
   10068:	csel	x27, x27, x19, ne  // ne = any
   1006c:	tbnz	w0, #1, 100b0 <argp_fmtstream_point@@Base+0x1690>
   10070:	ldr	x1, [x19, #16]
   10074:	ldr	w20, [x27, #24]
   10078:	orr	w20, w0, w20
   1007c:	and	w0, w20, #0x10
   10080:	cbz	x1, 1012c <argp_fmtstream_point@@Base+0x170c>
   10084:	cbnz	w0, 100b0 <argp_fmtstream_point@@Base+0x1690>
   10088:	mov	w2, #0x5                   	// #5
   1008c:	mov	x0, x23
   10090:	bl	ada0 <dcgettext@plt>
   10094:	mov	x3, x0
   10098:	ldr	x2, [x19]
   1009c:	tbz	w20, #0, 10200 <argp_fmtstream_point@@Base+0x17e0>
   100a0:	mov	x1, x25
   100a4:	mov	x0, x22
   100a8:	bl	a8f0 <argp_fmtstream_printf@plt>
   100ac:	nop
   100b0:	add	x19, x19, #0x30
   100b4:	cmp	x19, x21
   100b8:	b.ne	10058 <argp_fmtstream_point@@Base+0x1638>  // b.any
   100bc:	add	x28, x28, #0x38
   100c0:	cmp	x28, x24
   100c4:	b.ne	10030 <argp_fmtstream_point@@Base+0x1610>  // b.any
   100c8:	mov	sp, x29
   100cc:	ldp	x19, x20, [sp, #16]
   100d0:	ldp	x21, x22, [sp, #32]
   100d4:	ldp	x23, x24, [sp, #48]
   100d8:	ldp	x25, x26, [sp, #64]
   100dc:	ldp	x27, x28, [sp, #80]
   100e0:	ldp	x29, x30, [sp], #128
   100e4:	ret
   100e8:	tst	x27, #0x4
   100ec:	csel	x24, x24, x19, ne  // ne = any
   100f0:	tbnz	w27, #1, 100fc <argp_fmtstream_point@@Base+0x16dc>
   100f4:	ldr	x0, [x19, #16]
   100f8:	cbz	x0, 10104 <argp_fmtstream_point@@Base+0x16e4>
   100fc:	add	x25, x25, #0x1
   10100:	b	ff28 <argp_fmtstream_point@@Base+0x1508>
   10104:	ldr	x0, [x24, #16]
   10108:	cbnz	x0, 100fc <argp_fmtstream_point@@Base+0x16dc>
   1010c:	ldr	w0, [x24, #24]
   10110:	orr	w27, w27, w0
   10114:	tbnz	w27, #4, 100fc <argp_fmtstream_point@@Base+0x16dc>
   10118:	ldr	x0, [x29, #112]
   1011c:	add	x25, x25, #0x1
   10120:	strb	w28, [x0], #1
   10124:	str	x0, [x29, #112]
   10128:	b	ff28 <argp_fmtstream_point@@Base+0x1508>
   1012c:	cbnz	w0, 100b0 <argp_fmtstream_point@@Base+0x1690>
   10130:	ldr	x1, [x27, #16]
   10134:	cbnz	x1, 10088 <argp_fmtstream_point@@Base+0x1668>
   10138:	mov	x0, x22
   1013c:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   10140:	add	x1, x1, #0x200
   10144:	bl	a8f0 <argp_fmtstream_printf@plt>
   10148:	b	100b0 <argp_fmtstream_point@@Base+0x1690>
   1014c:	tst	x20, #0x4
   10150:	csel	x27, x27, x19, ne  // ne = any
   10154:	tbnz	w20, #1, 1016c <argp_fmtstream_point@@Base+0x174c>
   10158:	ldr	x1, [x19, #16]
   1015c:	cbz	x1, 10210 <argp_fmtstream_point@@Base+0x17f0>
   10160:	ldr	w0, [x27, #24]
   10164:	orr	w20, w20, w0
   10168:	tbz	w20, #4, 10174 <argp_fmtstream_point@@Base+0x1754>
   1016c:	add	x21, x21, #0x1
   10170:	b	ffe0 <argp_fmtstream_point@@Base+0x15c0>
   10174:	mov	x0, x25
   10178:	mov	w2, #0x5                   	// #5
   1017c:	bl	ada0 <dcgettext@plt>
   10180:	mov	x3, x0
   10184:	tbnz	w20, #0, 10254 <argp_fmtstream_point@@Base+0x1834>
   10188:	str	x0, [x29, #96]
   1018c:	bl	a340 <strlen@plt>
   10190:	ldp	x1, x2, [x22, #48]
   10194:	mov	x20, x0
   10198:	ldr	x0, [x22, #32]
   1019c:	ldr	x3, [x29, #96]
   101a0:	sub	x1, x2, x1
   101a4:	cmp	x1, x0
   101a8:	b.hi	10288 <argp_fmtstream_point@@Base+0x1868>  // b.pmore
   101ac:	ldr	x1, [x22, #40]
   101b0:	ldr	x0, [x22, #16]
   101b4:	cmp	x1, #0x0
   101b8:	csel	x1, x1, xzr, ge  // ge = tcont
   101bc:	add	x1, x1, #0x6
   101c0:	add	x1, x1, x20
   101c4:	cmp	x1, x0
   101c8:	ldr	x0, [x22, #64]
   101cc:	b.cc	1026c <argp_fmtstream_point@@Base+0x184c>  // b.lo, b.ul, b.last
   101d0:	cmp	x2, x0
   101d4:	b.cs	102bc <argp_fmtstream_point@@Base+0x189c>  // b.hs, b.nlast
   101d8:	add	x0, x2, #0x1
   101dc:	str	x0, [x22, #56]
   101e0:	mov	w0, #0xa                   	// #10
   101e4:	strb	w0, [x2]
   101e8:	ldr	w2, [x19, #8]
   101ec:	mov	x0, x22
   101f0:	ldr	x1, [x29, #112]
   101f4:	add	x21, x21, #0x1
   101f8:	bl	a8f0 <argp_fmtstream_printf@plt>
   101fc:	b	ffe0 <argp_fmtstream_point@@Base+0x15c0>
   10200:	mov	x1, x26
   10204:	mov	x0, x22
   10208:	bl	a8f0 <argp_fmtstream_printf@plt>
   1020c:	b	100b0 <argp_fmtstream_point@@Base+0x1690>
   10210:	ldr	x1, [x27, #16]
   10214:	cbnz	x1, 10160 <argp_fmtstream_point@@Base+0x1740>
   10218:	add	x21, x21, #0x1
   1021c:	b	ffe0 <argp_fmtstream_point@@Base+0x15c0>
   10220:	strb	wzr, [x1]
   10224:	mov	x2, x0
   10228:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   1022c:	mov	x0, x22
   10230:	add	x1, x1, #0x1b8
   10234:	bl	a8f0 <argp_fmtstream_printf@plt>
   10238:	ldr	x0, [x29, #120]
   1023c:	ldr	w21, [x0, #8]
   10240:	cbz	w21, 100c8 <argp_fmtstream_point@@Base+0x16a8>
   10244:	ldr	x26, [x0]
   10248:	sub	w0, w21, #0x1
   1024c:	str	w0, [x29, #96]
   10250:	b	ff4c <argp_fmtstream_point@@Base+0x152c>
   10254:	ldr	w2, [x19, #8]
   10258:	mov	x0, x22
   1025c:	ldr	x1, [x29, #104]
   10260:	add	x21, x21, #0x1
   10264:	bl	a8f0 <argp_fmtstream_printf@plt>
   10268:	b	ffe0 <argp_fmtstream_point@@Base+0x15c0>
   1026c:	cmp	x2, x0
   10270:	b.cs	1029c <argp_fmtstream_point@@Base+0x187c>  // b.hs, b.nlast
   10274:	add	x0, x2, #0x1
   10278:	str	x0, [x22, #56]
   1027c:	mov	w0, #0x20                  	// #32
   10280:	strb	w0, [x2]
   10284:	b	101e8 <argp_fmtstream_point@@Base+0x17c8>
   10288:	mov	x0, x22
   1028c:	bl	a520 <_argp_fmtstream_update@plt>
   10290:	ldr	x2, [x22, #56]
   10294:	ldr	x3, [x29, #96]
   10298:	b	101ac <argp_fmtstream_point@@Base+0x178c>
   1029c:	mov	x0, x22
   102a0:	mov	x1, #0x1                   	// #1
   102a4:	str	x3, [x29, #96]
   102a8:	bl	ad80 <_argp_fmtstream_ensure@plt>
   102ac:	ldr	x3, [x29, #96]
   102b0:	cbz	w0, 101e8 <argp_fmtstream_point@@Base+0x17c8>
   102b4:	ldr	x2, [x22, #56]
   102b8:	b	10274 <argp_fmtstream_point@@Base+0x1854>
   102bc:	mov	x0, x22
   102c0:	mov	x1, #0x1                   	// #1
   102c4:	str	x3, [x29, #96]
   102c8:	bl	ad80 <_argp_fmtstream_ensure@plt>
   102cc:	ldr	x3, [x29, #96]
   102d0:	cbz	w0, 101e8 <argp_fmtstream_point@@Base+0x17c8>
   102d4:	ldr	x2, [x22, #56]
   102d8:	b	101d8 <argp_fmtstream_point@@Base+0x17b8>
   102dc:	nop
   102e0:	stp	x29, x30, [sp, #-128]!
   102e4:	mov	x29, sp
   102e8:	stp	x27, x28, [sp, #80]
   102ec:	ldr	x27, [x0, #24]
   102f0:	stp	x19, x20, [sp, #16]
   102f4:	mov	x19, x5
   102f8:	stp	x21, x22, [sp, #32]
   102fc:	mov	x21, x0
   10300:	stp	x23, x24, [sp, #48]
   10304:	mov	w23, w2
   10308:	mov	w24, w3
   1030c:	stp	x25, x26, [sp, #64]
   10310:	mov	x25, x1
   10314:	mov	w26, w4
   10318:	cbz	x27, 103ac <argp_fmtstream_point@@Base+0x198c>
   1031c:	ldr	x0, [x0, #48]
   10320:	mov	x1, x27
   10324:	mov	w2, #0x5                   	// #5
   10328:	bl	ada0 <dcgettext@plt>
   1032c:	mov	x27, x0
   10330:	ldr	x22, [x21, #32]
   10334:	cbz	x0, 10698 <argp_fmtstream_point@@Base+0x1c78>
   10338:	mov	w1, #0xb                   	// #11
   1033c:	bl	ab60 <strchr@plt>
   10340:	str	x0, [sp, #104]
   10344:	ldr	x3, [x21, #40]
   10348:	cbnz	w23, 10674 <argp_fmtstream_point@@Base+0x1c54>
   1034c:	cbz	x0, 1067c <argp_fmtstream_point@@Base+0x1c5c>
   10350:	subs	x20, x0, x27
   10354:	cset	w5, ne  // ne = any
   10358:	cbz	x3, 10688 <argp_fmtstream_point@@Base+0x1c68>
   1035c:	cbz	x20, 10378 <argp_fmtstream_point@@Base+0x1958>
   10360:	mov	x0, x27
   10364:	mov	x1, x20
   10368:	str	w5, [sp, #104]
   1036c:	bl	ab30 <strndup@plt>
   10370:	ldr	w5, [sp, #104]
   10374:	mov	x27, x0
   10378:	mov	x1, x25
   1037c:	mov	x0, x21
   10380:	str	w5, [sp, #116]
   10384:	bl	ac60 <_argp_input@plt>
   10388:	ldr	w5, [sp, #116]
   1038c:	cmp	x27, #0x0
   10390:	str	x0, [sp, #104]
   10394:	csel	w0, w5, wzr, ne  // ne = any
   10398:	str	w0, [sp, #116]
   1039c:	mov	w0, #0x1                   	// #1
   103a0:	movk	w0, #0x200, lsl #16
   103a4:	ldr	x3, [x21, #40]
   103a8:	b	103e0 <argp_fmtstream_point@@Base+0x19c0>
   103ac:	ldp	x22, x3, [x0, #32]
   103b0:	cbz	x3, 106a0 <argp_fmtstream_point@@Base+0x1c80>
   103b4:	mov	x1, x25
   103b8:	mov	x0, x21
   103bc:	bl	ac60 <_argp_input@plt>
   103c0:	str	x0, [sp, #104]
   103c4:	mov	w0, #0x1                   	// #1
   103c8:	mov	w5, #0x0                   	// #0
   103cc:	ldr	x3, [x21, #40]
   103d0:	movk	w0, #0x200, lsl #16
   103d4:	add	w0, w23, w0
   103d8:	mov	x20, #0x0                   	// #0
   103dc:	str	wzr, [sp, #116]
   103e0:	ldr	x2, [sp, #104]
   103e4:	mov	x1, x27
   103e8:	str	w5, [sp, #120]
   103ec:	blr	x3
   103f0:	mov	x28, x0
   103f4:	cbz	x0, 10798 <argp_fmtstream_point@@Base+0x1d78>
   103f8:	ldr	w5, [sp, #120]
   103fc:	cmp	x0, x27
   10400:	csel	w5, w5, wzr, eq  // eq = none
   10404:	ldr	x3, [x19, #56]
   10408:	cbnz	w24, 10584 <argp_fmtstream_point@@Base+0x1b64>
   1040c:	cbz	w5, 105a8 <argp_fmtstream_point@@Base+0x1b88>
   10410:	ldr	x1, [x19, #64]
   10414:	add	x0, x3, x20
   10418:	cmp	x1, x0
   1041c:	b.cs	10604 <argp_fmtstream_point@@Base+0x1be4>  // b.hs, b.nlast
   10420:	mov	x1, x20
   10424:	mov	x0, x19
   10428:	bl	ad80 <_argp_fmtstream_ensure@plt>
   1042c:	ldr	x3, [x19, #56]
   10430:	cbnz	w0, 10604 <argp_fmtstream_point@@Base+0x1be4>
   10434:	ldr	x1, [x19, #48]
   10438:	ldr	x0, [x19, #32]
   1043c:	sub	x3, x3, x1
   10440:	cmp	x3, x0
   10444:	b.hi	10634 <argp_fmtstream_point@@Base+0x1c14>  // b.pmore
   10448:	ldr	x0, [x19, #40]
   1044c:	ldr	x1, [x19, #8]
   10450:	cmp	x0, #0x0
   10454:	csel	x0, x0, xzr, ge  // ge = tcont
   10458:	cmp	x1, x0
   1045c:	b.cc	10654 <argp_fmtstream_point@@Base+0x1c34>  // b.lo, b.ul, b.last
   10460:	cmp	x27, x28
   10464:	mov	w20, #0x1                   	// #1
   10468:	b.eq	10474 <argp_fmtstream_point@@Base+0x1a54>  // b.none
   1046c:	mov	x0, x28
   10470:	bl	aa50 <free@plt>
   10474:	ldr	w0, [sp, #116]
   10478:	cbz	w0, 1048c <argp_fmtstream_point@@Base+0x1a6c>
   1047c:	ldr	x0, [x21, #40]
   10480:	cbz	x0, 10508 <argp_fmtstream_point@@Base+0x1ae8>
   10484:	mov	x0, x27
   10488:	bl	aa50 <free@plt>
   1048c:	cbz	w23, 10508 <argp_fmtstream_point@@Base+0x1ae8>
   10490:	ldr	x3, [x21, #40]
   10494:	cbz	x3, 10508 <argp_fmtstream_point@@Base+0x1ae8>
   10498:	ldr	x2, [sp, #104]
   1049c:	mov	w0, #0x4                   	// #4
   104a0:	movk	w0, #0x200, lsl #16
   104a4:	mov	x1, #0x0                   	// #0
   104a8:	blr	x3
   104ac:	mov	x21, x0
   104b0:	cbz	x0, 10508 <argp_fmtstream_point@@Base+0x1ae8>
   104b4:	orr	w20, w24, w20
   104b8:	cbnz	w20, 10778 <argp_fmtstream_point@@Base+0x1d58>
   104bc:	mov	x0, x21
   104c0:	bl	a340 <strlen@plt>
   104c4:	mov	x20, x0
   104c8:	cbnz	x0, 10738 <argp_fmtstream_point@@Base+0x1d18>
   104cc:	mov	x0, x21
   104d0:	bl	aa50 <free@plt>
   104d4:	ldp	x2, x0, [x19, #48]
   104d8:	ldr	x1, [x19, #32]
   104dc:	sub	x0, x0, x2
   104e0:	cmp	x0, x1
   104e4:	b.hi	1072c <argp_fmtstream_point@@Base+0x1d0c>  // b.pmore
   104e8:	ldr	x0, [x19, #40]
   104ec:	mov	w20, #0x1                   	// #1
   104f0:	ldr	x1, [x19, #8]
   104f4:	cmp	x0, #0x0
   104f8:	csel	x0, x0, xzr, ge  // ge = tcont
   104fc:	cmp	x1, x0
   10500:	b.cc	10708 <argp_fmtstream_point@@Base+0x1ce8>  // b.lo, b.ul, b.last
   10504:	nop
   10508:	cbz	x22, 10564 <argp_fmtstream_point@@Base+0x1b44>
   1050c:	ldr	x0, [x22]
   10510:	cbz	x0, 10564 <argp_fmtstream_point@@Base+0x1b44>
   10514:	eor	w2, w26, #0x1
   10518:	eor	w1, w20, #0x1
   1051c:	and	w21, w2, #0x1
   10520:	orr	w1, w1, w2
   10524:	tbz	w1, #0, 107a0 <argp_fmtstream_point@@Base+0x1d80>
   10528:	orr	w1, w24, w20
   1052c:	mov	x5, x19
   10530:	cmp	w1, #0x0
   10534:	mov	w4, w26
   10538:	cset	w3, ne  // ne = any
   1053c:	mov	x1, x25
   10540:	mov	w2, w23
   10544:	bl	102e0 <argp_fmtstream_point@@Base+0x18c0>
   10548:	mov	w1, w0
   1054c:	ldr	x0, [x22, #32]!
   10550:	orr	w20, w20, w1
   10554:	cmp	w20, #0x0
   10558:	ccmp	w21, #0x0, #0x0, ne  // ne = any
   1055c:	cbz	x0, 10564 <argp_fmtstream_point@@Base+0x1b44>
   10560:	b.ne	10528 <argp_fmtstream_point@@Base+0x1b08>  // b.any
   10564:	mov	w0, w20
   10568:	ldp	x19, x20, [sp, #16]
   1056c:	ldp	x21, x22, [sp, #32]
   10570:	ldp	x23, x24, [sp, #48]
   10574:	ldp	x25, x26, [sp, #64]
   10578:	ldp	x27, x28, [sp, #80]
   1057c:	ldp	x29, x30, [sp], #128
   10580:	ret
   10584:	ldr	x0, [x19, #64]
   10588:	cmp	x0, x3
   1058c:	b.ls	106d4 <argp_fmtstream_point@@Base+0x1cb4>  // b.plast
   10590:	add	x0, x3, #0x1
   10594:	str	x0, [x19, #56]
   10598:	mov	w0, #0xa                   	// #10
   1059c:	strb	w0, [x3]
   105a0:	ldr	x3, [x19, #56]
   105a4:	cbnz	w5, 10410 <argp_fmtstream_point@@Base+0x19f0>
   105a8:	mov	x0, x28
   105ac:	str	x3, [sp, #120]
   105b0:	bl	a340 <strlen@plt>
   105b4:	mov	x20, x0
   105b8:	ldr	x3, [sp, #120]
   105bc:	cbz	x0, 10434 <argp_fmtstream_point@@Base+0x1a14>
   105c0:	ldr	x1, [x19, #64]
   105c4:	add	x0, x3, x0
   105c8:	cmp	x1, x0
   105cc:	b.cs	105e4 <argp_fmtstream_point@@Base+0x1bc4>  // b.hs, b.nlast
   105d0:	mov	x1, x20
   105d4:	mov	x0, x19
   105d8:	bl	ad80 <_argp_fmtstream_ensure@plt>
   105dc:	ldr	x3, [x19, #56]
   105e0:	cbz	w0, 10434 <argp_fmtstream_point@@Base+0x1a14>
   105e4:	mov	x0, x3
   105e8:	mov	x2, x20
   105ec:	mov	x1, x28
   105f0:	bl	a2c0 <memcpy@plt>
   105f4:	ldr	x3, [x19, #56]
   105f8:	add	x3, x3, x20
   105fc:	str	x3, [x19, #56]
   10600:	b	10434 <argp_fmtstream_point@@Base+0x1a14>
   10604:	mov	x0, x3
   10608:	mov	x1, x27
   1060c:	mov	x2, x20
   10610:	bl	a2c0 <memcpy@plt>
   10614:	ldr	x3, [x19, #56]
   10618:	ldr	x1, [x19, #48]
   1061c:	add	x3, x3, x20
   10620:	ldr	x0, [x19, #32]
   10624:	str	x3, [x19, #56]
   10628:	sub	x3, x3, x1
   1062c:	cmp	x3, x0
   10630:	b.ls	10448 <argp_fmtstream_point@@Base+0x1a28>  // b.plast
   10634:	mov	x0, x19
   10638:	bl	a520 <_argp_fmtstream_update@plt>
   1063c:	ldr	x0, [x19, #40]
   10640:	ldr	x1, [x19, #8]
   10644:	cmp	x0, #0x0
   10648:	csel	x0, x0, xzr, ge  // ge = tcont
   1064c:	cmp	x1, x0
   10650:	b.cs	10460 <argp_fmtstream_point@@Base+0x1a40>  // b.hs, b.nlast
   10654:	ldp	x0, x1, [x19, #56]
   10658:	cmp	x0, x1
   1065c:	b.cs	106ac <argp_fmtstream_point@@Base+0x1c8c>  // b.hs, b.nlast
   10660:	add	x1, x0, #0x1
   10664:	str	x1, [x19, #56]
   10668:	mov	w1, #0xa                   	// #10
   1066c:	strb	w1, [x0]
   10670:	b	10460 <argp_fmtstream_point@@Base+0x1a40>
   10674:	add	x27, x0, #0x1
   10678:	cbz	x0, 107a8 <argp_fmtstream_point@@Base+0x1d88>
   1067c:	mov	w5, #0x0                   	// #0
   10680:	mov	x20, #0x0                   	// #0
   10684:	cbnz	x3, 103b4 <argp_fmtstream_point@@Base+0x1994>
   10688:	mov	x28, x27
   1068c:	str	xzr, [sp, #104]
   10690:	str	w5, [sp, #116]
   10694:	b	10404 <argp_fmtstream_point@@Base+0x19e4>
   10698:	ldr	x3, [x21, #40]
   1069c:	cbnz	x3, 103b4 <argp_fmtstream_point@@Base+0x1994>
   106a0:	mov	w20, #0x0                   	// #0
   106a4:	str	xzr, [sp, #104]
   106a8:	b	1048c <argp_fmtstream_point@@Base+0x1a6c>
   106ac:	mov	x0, x19
   106b0:	mov	x1, #0x1                   	// #1
   106b4:	bl	ad80 <_argp_fmtstream_ensure@plt>
   106b8:	cbz	w0, 10460 <argp_fmtstream_point@@Base+0x1a40>
   106bc:	ldr	x0, [x19, #56]
   106c0:	add	x1, x0, #0x1
   106c4:	str	x1, [x19, #56]
   106c8:	mov	w1, #0xa                   	// #10
   106cc:	strb	w1, [x0]
   106d0:	b	10460 <argp_fmtstream_point@@Base+0x1a40>
   106d4:	mov	x0, x19
   106d8:	mov	x1, #0x1                   	// #1
   106dc:	str	w5, [sp, #120]
   106e0:	bl	ad80 <_argp_fmtstream_ensure@plt>
   106e4:	ldr	w5, [sp, #120]
   106e8:	ldr	x3, [x19, #56]
   106ec:	cbz	w0, 1040c <argp_fmtstream_point@@Base+0x19ec>
   106f0:	add	x0, x3, #0x1
   106f4:	str	x0, [x19, #56]
   106f8:	mov	w0, #0xa                   	// #10
   106fc:	strb	w0, [x3]
   10700:	ldr	x3, [x19, #56]
   10704:	b	105a4 <argp_fmtstream_point@@Base+0x1b84>
   10708:	ldp	x0, x1, [x19, #56]
   1070c:	cmp	x0, x1
   10710:	b.cs	107d0 <argp_fmtstream_point@@Base+0x1db0>  // b.hs, b.nlast
   10714:	add	x1, x0, #0x1
   10718:	str	x1, [x19, #56]
   1071c:	mov	w20, #0x1                   	// #1
   10720:	mov	w1, #0xa                   	// #10
   10724:	strb	w1, [x0]
   10728:	b	10508 <argp_fmtstream_point@@Base+0x1ae8>
   1072c:	mov	x0, x19
   10730:	bl	a520 <_argp_fmtstream_update@plt>
   10734:	b	104e8 <argp_fmtstream_point@@Base+0x1ac8>
   10738:	ldp	x0, x2, [x19, #56]
   1073c:	add	x1, x0, x20
   10740:	cmp	x2, x1
   10744:	b.cs	1075c <argp_fmtstream_point@@Base+0x1d3c>  // b.hs, b.nlast
   10748:	mov	x1, x20
   1074c:	mov	x0, x19
   10750:	bl	ad80 <_argp_fmtstream_ensure@plt>
   10754:	cbz	w0, 104cc <argp_fmtstream_point@@Base+0x1aac>
   10758:	ldr	x0, [x19, #56]
   1075c:	mov	x2, x20
   10760:	mov	x1, x21
   10764:	bl	a2c0 <memcpy@plt>
   10768:	ldr	x0, [x19, #56]
   1076c:	add	x0, x0, x20
   10770:	str	x0, [x19, #56]
   10774:	b	104cc <argp_fmtstream_point@@Base+0x1aac>
   10778:	ldp	x0, x1, [x19, #56]
   1077c:	cmp	x0, x1
   10780:	b.cs	107b8 <argp_fmtstream_point@@Base+0x1d98>  // b.hs, b.nlast
   10784:	add	x1, x0, #0x1
   10788:	str	x1, [x19, #56]
   1078c:	mov	w1, #0xa                   	// #10
   10790:	strb	w1, [x0]
   10794:	b	104bc <argp_fmtstream_point@@Base+0x1a9c>
   10798:	mov	w20, #0x0                   	// #0
   1079c:	b	10474 <argp_fmtstream_point@@Base+0x1a54>
   107a0:	mov	w20, #0x1                   	// #1
   107a4:	b	10564 <argp_fmtstream_point@@Base+0x1b44>
   107a8:	mov	x27, #0x0                   	// #0
   107ac:	mov	w20, #0x0                   	// #0
   107b0:	cbnz	x3, 103b4 <argp_fmtstream_point@@Base+0x1994>
   107b4:	b	10508 <argp_fmtstream_point@@Base+0x1ae8>
   107b8:	mov	x0, x19
   107bc:	mov	x1, #0x1                   	// #1
   107c0:	bl	ad80 <_argp_fmtstream_ensure@plt>
   107c4:	cbz	w0, 104bc <argp_fmtstream_point@@Base+0x1a9c>
   107c8:	ldr	x0, [x19, #56]
   107cc:	b	10784 <argp_fmtstream_point@@Base+0x1d64>
   107d0:	mov	x0, x19
   107d4:	mov	x1, #0x1                   	// #1
   107d8:	bl	ad80 <_argp_fmtstream_ensure@plt>
   107dc:	cbz	w0, 10508 <argp_fmtstream_point@@Base+0x1ae8>
   107e0:	ldr	x0, [x19, #56]
   107e4:	b	10714 <argp_fmtstream_point@@Base+0x1cf4>

00000000000107e8 <argp_failure@@Base>:
   107e8:	stp	x29, x30, [sp, #-464]!
   107ec:	mov	x29, sp
   107f0:	stp	x19, x20, [sp, #16]
   107f4:	mov	x20, x0
   107f8:	stp	x21, x22, [sp, #32]
   107fc:	mov	w22, w2
   10800:	mov	x21, x3
   10804:	str	x23, [sp, #48]
   10808:	mov	w23, w1
   1080c:	str	q0, [sp, #304]
   10810:	str	q1, [sp, #320]
   10814:	str	q2, [sp, #336]
   10818:	str	q3, [sp, #352]
   1081c:	str	q4, [sp, #368]
   10820:	str	q5, [sp, #384]
   10824:	str	q6, [sp, #400]
   10828:	str	q7, [sp, #416]
   1082c:	stp	x4, x5, [sp, #432]
   10830:	stp	x6, x7, [sp, #448]
   10834:	cbz	x0, 10974 <argp_failure@@Base+0x18c>
   10838:	ldr	w0, [x0, #28]
   1083c:	tbnz	w0, #1, 10960 <argp_failure@@Base+0x178>
   10840:	ldr	x19, [x20, #72]
   10844:	cbz	x19, 10960 <argp_failure@@Base+0x178>
   10848:	mov	x0, x19
   1084c:	bl	a3a0 <flockfile@plt>
   10850:	ldr	x0, [x20, #64]
   10854:	mov	x1, x19
   10858:	bl	ae00 <fputs_unlocked@plt>
   1085c:	cbz	x21, 108d4 <argp_failure@@Base+0xec>
   10860:	ldp	x0, x4, [x19, #40]
   10864:	add	x3, sp, #0x1b0
   10868:	add	x5, sp, #0x1d0
   1086c:	mov	w2, #0xffffffe0            	// #-32
   10870:	mov	w1, #0xffffff80            	// #-128
   10874:	stp	x5, x5, [sp, #104]
   10878:	str	x3, [sp, #120]
   1087c:	stp	w2, w1, [sp, #128]
   10880:	cmp	x0, x4
   10884:	b.cs	109ec <argp_failure@@Base+0x204>  // b.hs, b.nlast
   10888:	add	x1, x0, #0x1
   1088c:	str	x1, [x19, #40]
   10890:	mov	w1, #0x3a                  	// #58
   10894:	strb	w1, [x0]
   10898:	ldp	x0, x1, [x19, #40]
   1089c:	cmp	x0, x1
   108a0:	b.cs	109dc <argp_failure@@Base+0x1f4>  // b.hs, b.nlast
   108a4:	add	x1, x0, #0x1
   108a8:	str	x1, [x19, #40]
   108ac:	mov	w1, #0x20                  	// #32
   108b0:	strb	w1, [x0]
   108b4:	ldp	x4, x5, [sp, #104]
   108b8:	mov	x1, x21
   108bc:	ldp	x6, x7, [sp, #120]
   108c0:	add	x2, sp, #0x40
   108c4:	mov	x0, x19
   108c8:	stp	x4, x5, [sp, #64]
   108cc:	stp	x6, x7, [sp, #80]
   108d0:	bl	ae80 <vfprintf@plt>
   108d4:	ldp	x0, x1, [x19, #40]
   108d8:	cbz	w22, 10930 <argp_failure@@Base+0x148>
   108dc:	cmp	x0, x1
   108e0:	b.cs	10a0c <argp_failure@@Base+0x224>  // b.hs, b.nlast
   108e4:	add	x1, x0, #0x1
   108e8:	str	x1, [x19, #40]
   108ec:	mov	w1, #0x3a                  	// #58
   108f0:	strb	w1, [x0]
   108f4:	ldp	x0, x1, [x19, #40]
   108f8:	cmp	x0, x1
   108fc:	b.cs	109fc <argp_failure@@Base+0x214>  // b.hs, b.nlast
   10900:	add	x1, x0, #0x1
   10904:	str	x1, [x19, #40]
   10908:	mov	w1, #0x20                  	// #32
   1090c:	strb	w1, [x0]
   10910:	add	x1, sp, #0x68
   10914:	mov	w0, w22
   10918:	mov	x2, #0xc8                  	// #200
   1091c:	bl	a760 <strerror_r@plt>
   10920:	cbz	x0, 109b4 <argp_failure@@Base+0x1cc>
   10924:	mov	x1, x19
   10928:	bl	ae00 <fputs_unlocked@plt>
   1092c:	ldp	x0, x1, [x19, #40]
   10930:	cmp	x1, x0
   10934:	b.ls	109a4 <argp_failure@@Base+0x1bc>  // b.plast
   10938:	add	x1, x0, #0x1
   1093c:	str	x1, [x19, #40]
   10940:	mov	w1, #0xa                   	// #10
   10944:	strb	w1, [x0]
   10948:	mov	x0, x19
   1094c:	bl	a620 <funlockfile@plt>
   10950:	cbz	w23, 10960 <argp_failure@@Base+0x178>
   10954:	cbz	x20, 1099c <argp_failure@@Base+0x1b4>
   10958:	ldr	w0, [x20, #28]
   1095c:	tbz	w0, #5, 1099c <argp_failure@@Base+0x1b4>
   10960:	ldp	x19, x20, [sp, #16]
   10964:	ldp	x21, x22, [sp, #32]
   10968:	ldr	x23, [sp, #48]
   1096c:	ldp	x29, x30, [sp], #464
   10970:	ret
   10974:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   10978:	ldr	x0, [x0, #3816]
   1097c:	ldr	x19, [x0]
   10980:	cbz	x19, 10960 <argp_failure@@Base+0x178>
   10984:	mov	x0, x19
   10988:	bl	a3a0 <flockfile@plt>
   1098c:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   10990:	ldr	x0, [x0, #4008]
   10994:	ldr	x0, [x0]
   10998:	b	10854 <argp_failure@@Base+0x6c>
   1099c:	mov	w0, w23
   109a0:	bl	a350 <exit@plt>
   109a4:	mov	x0, x19
   109a8:	mov	w1, #0xa                   	// #10
   109ac:	bl	a940 <__overflow@plt>
   109b0:	b	10948 <argp_failure@@Base+0x160>
   109b4:	mov	w0, w22
   109b8:	bl	a830 <strerror@plt>
   109bc:	cbnz	x0, 10924 <argp_failure@@Base+0x13c>
   109c0:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   109c4:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   109c8:	add	x1, x1, #0x208
   109cc:	mov	w2, #0x5                   	// #5
   109d0:	add	x0, x0, #0x120
   109d4:	bl	ada0 <dcgettext@plt>
   109d8:	b	10924 <argp_failure@@Base+0x13c>
   109dc:	mov	x0, x19
   109e0:	mov	w1, #0x20                  	// #32
   109e4:	bl	a940 <__overflow@plt>
   109e8:	b	108b4 <argp_failure@@Base+0xcc>
   109ec:	mov	x0, x19
   109f0:	mov	w1, #0x3a                  	// #58
   109f4:	bl	a940 <__overflow@plt>
   109f8:	b	10898 <argp_failure@@Base+0xb0>
   109fc:	mov	x0, x19
   10a00:	mov	w1, #0x20                  	// #32
   10a04:	bl	a940 <__overflow@plt>
   10a08:	b	10910 <argp_failure@@Base+0x128>
   10a0c:	mov	x0, x19
   10a10:	mov	w1, #0x3a                  	// #58
   10a14:	bl	a940 <__overflow@plt>
   10a18:	b	108f4 <argp_failure@@Base+0x10c>
   10a1c:	nop
   10a20:	stp	x29, x30, [sp, #-256]!
   10a24:	mov	x29, sp
   10a28:	stp	x19, x20, [sp, #16]
   10a2c:	stp	x21, x22, [sp, #32]
   10a30:	stp	x23, x24, [sp, #48]
   10a34:	stp	x25, x26, [sp, #64]
   10a38:	stp	x27, x28, [sp, #80]
   10a3c:	str	x2, [x29, #128]
   10a40:	cbz	x2, 10ee0 <argp_failure@@Base+0x6f8>
   10a44:	adrp	x21, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
   10a48:	add	x22, x21, #0x1e8
   10a4c:	mov	x26, x0
   10a50:	mov	x20, x1
   10a54:	mov	x0, x2
   10a58:	mov	w19, w3
   10a5c:	mov	x27, x4
   10a60:	bl	a3a0 <flockfile@plt>
   10a64:	ldr	w0, [x22, #36]
   10a68:	cbz	w0, 10f00 <argp_failure@@Base+0x718>
   10a6c:	add	x2, x21, #0x1e8
   10a70:	mov	x3, #0x0                   	// #0
   10a74:	ldr	x0, [x29, #128]
   10a78:	mov	x1, #0x0                   	// #0
   10a7c:	ldrsw	x2, [x2, #32]
   10a80:	bl	aa70 <argp_make_fmtstream@plt>
   10a84:	mov	x25, x0
   10a88:	cbz	x0, 11f94 <argp_failure@@Base+0x17ac>
   10a8c:	mov	w0, #0xb                   	// #11
   10a90:	mov	x24, #0x0                   	// #0
   10a94:	tst	w19, w0
   10a98:	b.ne	11254 <argp_failure@@Base+0xa6c>  // b.any
   10a9c:	tst	x19, #0x3
   10aa0:	mov	w22, #0x0                   	// #0
   10aa4:	b.ne	110b4 <argp_failure@@Base+0x8cc>  // b.any
   10aa8:	tbnz	w19, #4, 11088 <argp_failure@@Base+0x8a0>
   10aac:	and	w23, w19, #0x8
   10ab0:	tbnz	w19, #2, 11014 <argp_failure@@Base+0x82c>
   10ab4:	cbz	w23, 10e5c <argp_failure@@Base+0x674>
   10ab8:	ldr	w0, [x24, #8]
   10abc:	cbz	w0, 10e5c <argp_failure@@Base+0x674>
   10ac0:	cbnz	w22, 11050 <argp_failure@@Base+0x868>
   10ac4:	ldr	x22, [x24]
   10ac8:	str	xzr, [x29, #200]
   10acc:	str	xzr, [x29, #208]
   10ad0:	sub	w0, w0, #0x1
   10ad4:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   10ad8:	add	x0, x0, #0x1
   10adc:	add	x1, x1, #0x2b0
   10ae0:	str	x1, [x29, #96]
   10ae4:	add	x3, x29, #0xd8
   10ae8:	lsl	x2, x0, #3
   10aec:	str	x3, [x29, #160]
   10af0:	sub	x0, x2, x0
   10af4:	add	x2, x29, #0xc8
   10af8:	ldr	x1, [x25, #32]
   10afc:	add	x0, x22, x0, lsl #3
   10b00:	stp	x0, x2, [x29, #112]
   10b04:	ldp	x2, x0, [x25, #48]
   10b08:	sub	x0, x0, x2
   10b0c:	cmp	x0, x1
   10b10:	mov	x2, x1
   10b14:	ldr	x23, [x22]
   10b18:	ldr	x27, [x22, #16]
   10b1c:	b.hi	117b4 <argp_failure@@Base+0xfcc>  // b.pmore
   10b20:	ldr	w1, [x23, #24]
   10b24:	mov	w3, #0x1                   	// #1
   10b28:	ldr	x4, [x25, #8]
   10b2c:	str	x4, [x29, #152]
   10b30:	ldr	x4, [x25, #24]
   10b34:	str	x4, [x29, #144]
   10b38:	and	w4, w1, #0x8
   10b3c:	str	xzr, [x25, #8]
   10b40:	str	w4, [x29, #136]
   10b44:	ldr	x4, [x29, #120]
   10b48:	stp	x22, x25, [x29, #216]
   10b4c:	str	x4, [x29, #232]
   10b50:	str	w3, [x29, #240]
   10b54:	str	x20, [x29, #248]
   10b58:	tbnz	w1, #3, 11894 <argp_failure@@Base+0x10ac>
   10b5c:	ldr	w1, [x22, #8]
   10b60:	cbz	w1, 10b94 <argp_failure@@Base+0x3ac>
   10b64:	sub	w3, w1, #0x1
   10b68:	mov	x1, x23
   10b6c:	add	x3, x3, #0x1
   10b70:	add	x3, x3, x3, lsl #1
   10b74:	add	x3, x23, x3, lsl #4
   10b78:	ldr	x4, [x1]
   10b7c:	cbz	x4, 10b88 <argp_failure@@Base+0x3a0>
   10b80:	ldr	w4, [x1, #24]
   10b84:	tbz	w4, #1, 119ec <argp_failure@@Base+0x1204>
   10b88:	add	x1, x1, #0x30
   10b8c:	cmp	x1, x3
   10b90:	b.ne	10b78 <argp_failure@@Base+0x390>  // b.any
   10b94:	add	x1, x21, #0x1e8
   10b98:	cmp	x0, x2
   10b9c:	ldr	w28, [x1, #8]
   10ba0:	b.hi	118a8 <argp_failure@@Base+0x10c0>  // b.pmore
   10ba4:	ldr	w0, [x22, #8]
   10ba8:	sxtw	x1, w28
   10bac:	str	x1, [x25, #24]
   10bb0:	cbz	w0, 10c30 <argp_failure@@Base+0x448>
   10bb4:	sub	w0, w0, #0x1
   10bb8:	mov	x28, x23
   10bbc:	add	x0, x0, #0x1
   10bc0:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   10bc4:	add	x1, x1, #0x330
   10bc8:	str	x1, [x29, #104]
   10bcc:	add	x0, x0, x0, lsl #1
   10bd0:	add	x0, x23, x0, lsl #4
   10bd4:	str	x0, [x29, #168]
   10bd8:	ldr	w2, [x28, #24]
   10bdc:	str	w2, [x29, #176]
   10be0:	tbnz	w2, #3, 10c20 <argp_failure@@Base+0x438>
   10be4:	ldr	w1, [x28, #8]
   10be8:	str	w1, [x29, #184]
   10bec:	sub	w0, w1, #0x1
   10bf0:	cmp	w0, #0xfe
   10bf4:	b.hi	10c20 <argp_failure@@Base+0x438>  // b.pmore
   10bf8:	bl	a9d0 <__ctype_b_loc@plt>
   10bfc:	ldr	w1, [x29, #184]
   10c00:	ldr	x0, [x0]
   10c04:	ldrh	w0, [x0, w1, sxtw #1]
   10c08:	tbz	w0, #14, 10c20 <argp_failure@@Base+0x438>
   10c0c:	ldrb	w0, [x27]
   10c10:	ldr	w2, [x29, #176]
   10c14:	cmp	w1, w0
   10c18:	b.eq	114b0 <argp_failure@@Base+0xcc8>  // b.none
   10c1c:	nop
   10c20:	ldr	x0, [x29, #168]
   10c24:	add	x28, x28, #0x30
   10c28:	cmp	x28, x0
   10c2c:	b.ne	10bd8 <argp_failure@@Base+0x3f0>  // b.any
   10c30:	ldp	x3, x0, [x25, #48]
   10c34:	ldr	w1, [x23, #24]
   10c38:	ldr	x2, [x25, #32]
   10c3c:	sub	x0, x0, x3
   10c40:	tbz	w1, #3, 117cc <argp_failure@@Base+0xfe4>
   10c44:	add	x1, x21, #0x1e8
   10c48:	cmp	x0, x2
   10c4c:	ldr	w27, [x1, #16]
   10c50:	b.hi	11a88 <argp_failure@@Base+0x12a0>  // b.pmore
   10c54:	ldr	w0, [x22, #8]
   10c58:	sxtw	x27, w27
   10c5c:	str	x27, [x25, #24]
   10c60:	cbz	w0, 10d40 <argp_failure@@Base+0x558>
   10c64:	cbz	x20, 11b6c <argp_failure@@Base+0x1384>
   10c68:	sub	w27, w0, #0x1
   10c6c:	mov	x3, x23
   10c70:	add	x27, x27, #0x1
   10c74:	add	x0, x21, #0x1e8
   10c78:	str	x0, [x29, #176]
   10c7c:	add	x27, x27, x27, lsl #1
   10c80:	add	x27, x23, x27, lsl #4
   10c84:	b	10c94 <argp_failure@@Base+0x4ac>
   10c88:	add	x3, x3, #0x30
   10c8c:	cmp	x3, x27
   10c90:	b.eq	10d40 <argp_failure@@Base+0x558>  // b.none
   10c94:	ldr	x0, [x3]
   10c98:	cbz	x0, 10c88 <argp_failure@@Base+0x4a0>
   10c9c:	ldr	w0, [x3, #24]
   10ca0:	tbnz	w0, #1, 10c88 <argp_failure@@Base+0x4a0>
   10ca4:	ldr	x0, [x29, #176]
   10ca8:	str	x3, [x29, #184]
   10cac:	ldr	x1, [x29, #160]
   10cb0:	ldr	w0, [x0, #16]
   10cb4:	bl	fc40 <argp_fmtstream_point@@Base+0x1220>
   10cb8:	ldr	x0, [x22, #40]
   10cbc:	mov	w2, #0x5                   	// #5
   10cc0:	ldr	x3, [x29, #184]
   10cc4:	ldr	x0, [x0, #48]
   10cc8:	ldr	x1, [x3]
   10ccc:	bl	ada0 <dcgettext@plt>
   10cd0:	str	x0, [x29, #168]
   10cd4:	bl	a340 <strlen@plt>
   10cd8:	mov	x28, x0
   10cdc:	ldr	x3, [x29, #184]
   10ce0:	cbz	x0, 10c88 <argp_failure@@Base+0x4a0>
   10ce4:	ldp	x4, x7, [x25, #56]
   10ce8:	mov	x1, x0
   10cec:	mov	x0, x25
   10cf0:	add	x6, x4, x28
   10cf4:	cmp	x7, x6
   10cf8:	b.cs	10d0c <argp_failure@@Base+0x524>  // b.hs, b.nlast
   10cfc:	bl	ad80 <_argp_fmtstream_ensure@plt>
   10d00:	ldr	x3, [x29, #184]
   10d04:	cbz	w0, 10c88 <argp_failure@@Base+0x4a0>
   10d08:	ldr	x4, [x25, #56]
   10d0c:	mov	x2, x28
   10d10:	ldr	x1, [x29, #168]
   10d14:	mov	x0, x4
   10d18:	str	x3, [x29, #184]
   10d1c:	bl	a2c0 <memcpy@plt>
   10d20:	ldr	x0, [x25, #56]
   10d24:	ldr	x3, [x29, #184]
   10d28:	add	x2, x0, x28
   10d2c:	str	x2, [x25, #56]
   10d30:	add	x3, x3, #0x30
   10d34:	cmp	x3, x27
   10d38:	b.ne	10c94 <argp_failure@@Base+0x4ac>  // b.any
   10d3c:	nop
   10d40:	ldp	x2, x0, [x25, #48]
   10d44:	ldr	x1, [x25, #32]
   10d48:	sub	x0, x0, x2
   10d4c:	cmp	x0, x1
   10d50:	b.hi	119c4 <argp_failure@@Base+0x11dc>  // b.pmore
   10d54:	ldr	w0, [x29, #240]
   10d58:	str	xzr, [x25, #8]
   10d5c:	cbz	w0, 1155c <argp_failure@@Base+0xd74>
   10d60:	ldr	w0, [x23, #24]
   10d64:	tbnz	w0, #3, 10d88 <argp_failure@@Base+0x5a0>
   10d68:	ldr	w27, [x23, #8]
   10d6c:	sub	w0, w27, #0x1
   10d70:	cmp	w0, #0xfe
   10d74:	b.hi	10d88 <argp_failure@@Base+0x5a0>  // b.pmore
   10d78:	bl	a9d0 <__ctype_b_loc@plt>
   10d7c:	ldr	x0, [x0]
   10d80:	ldrh	w0, [x0, w27, sxtw #1]
   10d84:	tbnz	w0, #14, 10d90 <argp_failure@@Base+0x5a8>
   10d88:	ldr	x0, [x23]
   10d8c:	cbz	x0, 11cac <argp_failure@@Base+0x14c4>
   10d90:	ldp	x2, x0, [x25, #48]
   10d94:	ldr	x1, [x25, #32]
   10d98:	ldrsw	x23, [x29, #152]
   10d9c:	sub	x3, x0, x2
   10da0:	cmp	x3, x1
   10da4:	b.hi	11754 <argp_failure@@Base+0xf6c>  // b.pmore
   10da8:	str	x23, [x25, #8]
   10dac:	ldrsw	x3, [x29, #144]
   10db0:	add	x22, x22, #0x38
   10db4:	str	x3, [x25, #24]
   10db8:	ldr	x3, [x29, #112]
   10dbc:	cmp	x22, x3
   10dc0:	b.ne	10b08 <argp_failure@@Base+0x320>  // b.any
   10dc4:	ldr	w0, [x29, #212]
   10dc8:	cbz	w0, 10e58 <argp_failure@@Base+0x670>
   10dcc:	add	x21, x21, #0x1e8
   10dd0:	ldr	w0, [x21, #4]
   10dd4:	cbz	w0, 10e58 <argp_failure@@Base+0x670>
   10dd8:	cbz	x20, 120cc <argp_failure@@Base+0x18e4>
   10ddc:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   10de0:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   10de4:	add	x1, x1, #0x370
   10de8:	add	x0, x0, #0x120
   10dec:	mov	w2, #0x5                   	// #5
   10df0:	bl	ada0 <dcgettext@plt>
   10df4:	ldr	x22, [x20]
   10df8:	mov	x23, x0
   10dfc:	mov	x21, x0
   10e00:	cbz	x22, 10e38 <argp_failure@@Base+0x650>
   10e04:	ldr	x0, [x22, #40]
   10e08:	mov	x21, x23
   10e0c:	cbz	x0, 10e38 <argp_failure@@Base+0x650>
   10e10:	mov	x1, x20
   10e14:	mov	x0, x22
   10e18:	bl	ac60 <_argp_input@plt>
   10e1c:	mov	x2, x0
   10e20:	ldr	x3, [x22, #40]
   10e24:	mov	w0, #0x5                   	// #5
   10e28:	mov	x1, x23
   10e2c:	movk	w0, #0x200, lsl #16
   10e30:	blr	x3
   10e34:	mov	x21, x0
   10e38:	cbz	x21, 10e58 <argp_failure@@Base+0x670>
   10e3c:	ldrb	w0, [x21]
   10e40:	cbnz	w0, 120ec <argp_failure@@Base+0x1904>
   10e44:	cmp	x21, x23
   10e48:	b.eq	10e58 <argp_failure@@Base+0x670>  // b.none
   10e4c:	mov	x0, x21
   10e50:	bl	aa50 <free@plt>
   10e54:	nop
   10e58:	mov	w22, #0x1                   	// #1
   10e5c:	tbnz	w19, #5, 11380 <argp_failure@@Base+0xb98>
   10e60:	tbz	w19, #6, 10ea4 <argp_failure@@Base+0x6bc>
   10e64:	adrp	x19, 4c000 <vasnprintf@@Base+0x1b848>
   10e68:	ldr	x0, [x19, #3968]
   10e6c:	ldr	x0, [x0]
   10e70:	cbz	x0, 10ea4 <argp_failure@@Base+0x6bc>
   10e74:	cbnz	w22, 11490 <argp_failure@@Base+0xca8>
   10e78:	mov	w2, #0x5                   	// #5
   10e7c:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   10e80:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   10e84:	add	x1, x1, #0x358
   10e88:	add	x0, x0, #0x120
   10e8c:	bl	ada0 <dcgettext@plt>
   10e90:	ldr	x19, [x19, #3968]
   10e94:	mov	x1, x0
   10e98:	mov	x0, x25
   10e9c:	ldr	x2, [x19]
   10ea0:	bl	a8f0 <argp_fmtstream_printf@plt>
   10ea4:	ldr	x0, [x29, #128]
   10ea8:	bl	a620 <funlockfile@plt>
   10eac:	cbz	x24, 10ed8 <argp_failure@@Base+0x6f0>
   10eb0:	ldr	x19, [x24, #24]
   10eb4:	cbz	x19, 10ec8 <argp_failure@@Base+0x6e0>
   10eb8:	mov	x0, x19
   10ebc:	ldr	x19, [x19, #40]
   10ec0:	bl	aa50 <free@plt>
   10ec4:	cbnz	x19, 10eb8 <argp_failure@@Base+0x6d0>
   10ec8:	ldr	w0, [x24, #8]
   10ecc:	cbnz	w0, 11dec <argp_failure@@Base+0x1604>
   10ed0:	mov	x0, x24
   10ed4:	bl	aa50 <free@plt>
   10ed8:	mov	x0, x25
   10edc:	bl	add0 <argp_fmtstream_free@plt>
   10ee0:	mov	sp, x29
   10ee4:	ldp	x19, x20, [sp, #16]
   10ee8:	ldp	x21, x22, [sp, #32]
   10eec:	ldp	x23, x24, [sp, #48]
   10ef0:	ldp	x25, x26, [sp, #64]
   10ef4:	ldp	x27, x28, [sp, #80]
   10ef8:	ldp	x29, x30, [sp], #256
   10efc:	ret
   10f00:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   10f04:	add	x0, x0, #0x220
   10f08:	bl	aed0 <getenv@plt>
   10f0c:	mov	x25, x0
   10f10:	ldp	x0, x1, [x22, #16]
   10f14:	stp	x0, x1, [x29, #232]
   10f18:	ldp	x2, x3, [x22]
   10f1c:	stp	x2, x3, [x29, #216]
   10f20:	ldr	x0, [x22, #32]
   10f24:	str	x0, [x29, #248]
   10f28:	cbz	x25, 10a6c <argp_failure@@Base+0x284>
   10f2c:	ldrb	w24, [x25]
   10f30:	cbz	w24, 10fa0 <argp_failure@@Base+0x7b8>
   10f34:	cmp	x20, #0x0
   10f38:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   10f3c:	str	x0, [x29, #176]
   10f40:	add	x0, x0, #0x120
   10f44:	csel	x0, x0, xzr, ne  // ne = any
   10f48:	str	x0, [x29, #136]
   10f4c:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   10f50:	add	x23, x0, #0x410
   10f54:	str	x23, [x29, #184]
   10f58:	bl	a9d0 <__ctype_b_loc@plt>
   10f5c:	mov	x22, x0
   10f60:	add	x0, x23, #0x40
   10f64:	add	x1, x23, #0x20
   10f68:	stp	x0, x1, [x29, #144]
   10f6c:	add	x0, x29, #0xd8
   10f70:	str	x0, [x29, #112]
   10f74:	nop
   10f78:	ldr	x3, [x22]
   10f7c:	ubfiz	x0, x24, #1, #8
   10f80:	ldrh	w1, [x3, x0]
   10f84:	tbz	w1, #13, 10f98 <argp_failure@@Base+0x7b0>
   10f88:	ldrb	w24, [x25, #1]!
   10f8c:	ubfiz	x0, x24, #1, #8
   10f90:	ldrh	w1, [x3, x0]
   10f94:	tbnz	w1, #13, 10f88 <argp_failure@@Base+0x7a0>
   10f98:	tbnz	w1, #10, 118b4 <argp_failure@@Base+0x10cc>
   10f9c:	cbnz	w24, 11fa0 <argp_failure@@Base+0x17b8>
   10fa0:	ldr	w1, [x29, #224]
   10fa4:	ldr	w0, [x29, #248]
   10fa8:	cmp	w0, w1
   10fac:	b.le	12160 <argp_failure@@Base+0x1978>
   10fb0:	ldr	w1, [x29, #228]
   10fb4:	cmp	w0, w1
   10fb8:	b.le	121ac <argp_failure@@Base+0x19c4>
   10fbc:	ldr	w1, [x29, #232]
   10fc0:	cmp	w0, w1
   10fc4:	b.le	121bc <argp_failure@@Base+0x19d4>
   10fc8:	ldr	w1, [x29, #236]
   10fcc:	cmp	w0, w1
   10fd0:	b.le	121cc <argp_failure@@Base+0x19e4>
   10fd4:	ldr	w1, [x29, #240]
   10fd8:	cmp	w0, w1
   10fdc:	b.le	121e4 <argp_failure@@Base+0x19fc>
   10fe0:	ldr	w1, [x29, #244]
   10fe4:	cmp	w0, w1
   10fe8:	b.le	121f4 <argp_failure@@Base+0x1a0c>
   10fec:	add	x0, x21, #0x1e8
   10ff0:	mov	w1, #0x1                   	// #1
   10ff4:	ldr	x2, [x29, #248]
   10ff8:	str	x2, [x0, #32]
   10ffc:	ldp	x2, x3, [x29, #216]
   11000:	stp	x2, x3, [x0]
   11004:	ldp	x2, x3, [x29, #232]
   11008:	stp	x2, x3, [x0, #16]
   1100c:	str	w1, [x0, #36]
   11010:	b	10a6c <argp_failure@@Base+0x284>
   11014:	mov	w2, #0x5                   	// #5
   11018:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   1101c:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   11020:	add	x1, x1, #0x2f8
   11024:	add	x0, x0, #0x120
   11028:	bl	ada0 <dcgettext@plt>
   1102c:	mov	x3, x27
   11030:	mov	x1, x0
   11034:	mov	x2, x27
   11038:	mov	x0, x25
   1103c:	mov	w22, #0x1                   	// #1
   11040:	bl	a8f0 <argp_fmtstream_printf@plt>
   11044:	cbz	w23, 10e5c <argp_failure@@Base+0x674>
   11048:	ldr	w0, [x24, #8]
   1104c:	cbz	w0, 10e5c <argp_failure@@Base+0x674>
   11050:	ldp	x0, x1, [x25, #56]
   11054:	cmp	x0, x1
   11058:	b.cs	12038 <argp_failure@@Base+0x1850>  // b.hs, b.nlast
   1105c:	add	x1, x0, #0x1
   11060:	str	x1, [x25, #56]
   11064:	mov	w1, #0xa                   	// #10
   11068:	strb	w1, [x0]
   1106c:	ldr	w0, [x24, #8]
   11070:	ldr	x22, [x24]
   11074:	str	xzr, [x29, #200]
   11078:	str	xzr, [x29, #208]
   1107c:	cbnz	w0, 10ad0 <argp_failure@@Base+0x2e8>
   11080:	mov	w22, #0x1                   	// #1
   11084:	b	10e5c <argp_failure@@Base+0x674>
   11088:	mov	x5, x25
   1108c:	mov	x1, x20
   11090:	mov	x0, x26
   11094:	mov	w4, #0x1                   	// #1
   11098:	mov	w3, #0x0                   	// #0
   1109c:	mov	w2, #0x0                   	// #0
   110a0:	and	w23, w19, #0x8
   110a4:	bl	102e0 <argp_fmtstream_point@@Base+0x18c0>
   110a8:	orr	w22, w22, w0
   110ac:	tbz	w19, #2, 10ab4 <argp_failure@@Base+0x2cc>
   110b0:	b	11014 <argp_failure@@Base+0x82c>
   110b4:	ldr	x0, [x26, #16]
   110b8:	mov	x22, #0x0                   	// #0
   110bc:	ldr	x23, [x26, #32]
   110c0:	cbz	x0, 110d4 <argp_failure@@Base+0x8ec>
   110c4:	mov	w1, #0xa                   	// #10
   110c8:	bl	ab60 <strchr@plt>
   110cc:	cmp	x0, #0x0
   110d0:	cset	x22, ne  // ne = any
   110d4:	cbz	x23, 110f8 <argp_failure@@Base+0x910>
   110d8:	ldr	x1, [x23]
   110dc:	cbz	x1, 110f8 <argp_failure@@Base+0x910>
   110e0:	ldr	x0, [x1, #16]
   110e4:	ldr	x1, [x1, #32]
   110e8:	bl	ea78 <argp_fmtstream_point@@Base+0x58>
   110ec:	add	x22, x22, x0
   110f0:	ldr	x1, [x23, #32]!
   110f4:	cbnz	x1, 110e0 <argp_failure@@Base+0x8f8>
   110f8:	add	x0, x22, #0xf
   110fc:	mov	w1, #0x0                   	// #0
   11100:	and	x0, x0, #0xfffffffffffffff0
   11104:	mov	x2, x22
   11108:	sub	sp, sp, x0
   1110c:	add	x0, x29, #0xd8
   11110:	str	x0, [x29, #160]
   11114:	mov	x0, sp
   11118:	str	x0, [x29, #168]
   1111c:	bl	a6f0 <memset@plt>
   11120:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   11124:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   11128:	add	x1, x1, #0x2e0
   1112c:	add	x0, x0, #0x2d0
   11130:	add	x28, x21, #0x1e8
   11134:	stp	x0, x1, [x29, #144]
   11138:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   1113c:	mov	w1, #0x1                   	// #1
   11140:	str	x0, [x29, #176]
   11144:	b	11218 <argp_failure@@Base+0xa30>
   11148:	ldr	x1, [x29, #144]
   1114c:	ldr	x0, [x29, #176]
   11150:	add	x0, x0, #0x120
   11154:	bl	ada0 <dcgettext@plt>
   11158:	mov	x2, x0
   1115c:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   11160:	mov	x3, x27
   11164:	add	x1, x0, #0x2d8
   11168:	mov	x0, x25
   1116c:	bl	a8f0 <argp_fmtstream_printf@plt>
   11170:	ldp	x2, x0, [x25, #48]
   11174:	ldr	x1, [x25, #32]
   11178:	ldrsw	x23, [x28, #28]
   1117c:	sub	x0, x0, x2
   11180:	cmp	x0, x1
   11184:	b.hi	11404 <argp_failure@@Base+0xc1c>  // b.pmore
   11188:	ldr	x0, [x25, #8]
   1118c:	str	x23, [x25, #8]
   11190:	str	x0, [x29, #184]
   11194:	tbz	w19, #1, 113f0 <argp_failure@@Base+0xc08>
   11198:	ldr	w0, [x24, #8]
   1119c:	cbnz	w0, 11410 <argp_failure@@Base+0xc28>
   111a0:	ldr	x2, [x29, #160]
   111a4:	mov	x1, x20
   111a8:	mov	x4, x25
   111ac:	mov	x0, x26
   111b0:	mov	w3, #0x1                   	// #1
   111b4:	bl	f5f8 <argp_fmtstream_point@@Base+0xbd8>
   111b8:	mov	w23, w0
   111bc:	ldp	x1, x0, [x25, #48]
   111c0:	ldr	x2, [x25, #32]
   111c4:	sub	x1, x0, x1
   111c8:	cmp	x1, x2
   111cc:	b.hi	113b8 <argp_failure@@Base+0xbd0>  // b.pmore
   111d0:	sxtw	x1, w22
   111d4:	ldrsw	x22, [x29, #184]
   111d8:	str	x1, [x25, #24]
   111dc:	ldr	x1, [x25, #64]
   111e0:	str	x22, [x25, #8]
   111e4:	cmp	x1, x0
   111e8:	b.hi	11200 <argp_failure@@Base+0xa18>  // b.pmore
   111ec:	mov	x0, x25
   111f0:	mov	x1, #0x1                   	// #1
   111f4:	bl	ad80 <_argp_fmtstream_ensure@plt>
   111f8:	cbz	w0, 11210 <argp_failure@@Base+0xa28>
   111fc:	ldr	x0, [x25, #56]
   11200:	add	x1, x0, #0x1
   11204:	str	x1, [x25, #56]
   11208:	mov	w1, #0xa                   	// #10
   1120c:	strb	w1, [x0]
   11210:	mov	w1, #0x0                   	// #0
   11214:	cbz	w23, 11484 <argp_failure@@Base+0xc9c>
   11218:	ldp	x3, x0, [x25, #48]
   1121c:	ldr	x2, [x25, #32]
   11220:	ldr	w22, [x28, #28]
   11224:	sub	x0, x0, x3
   11228:	cmp	x0, x2
   1122c:	b.hi	113a4 <argp_failure@@Base+0xbbc>  // b.pmore
   11230:	sxtw	x0, w22
   11234:	mov	w2, #0x5                   	// #5
   11238:	ldr	x22, [x25, #24]
   1123c:	str	x0, [x25, #24]
   11240:	ldr	x0, [x29, #168]
   11244:	str	x0, [x29, #216]
   11248:	cbnz	w1, 11148 <argp_failure@@Base+0x960>
   1124c:	ldr	x1, [x29, #152]
   11250:	b	1114c <argp_failure@@Base+0x964>
   11254:	mov	x1, #0x0                   	// #0
   11258:	mov	x0, x26
   1125c:	bl	ead8 <argp_fmtstream_point@@Base+0xb8>
   11260:	mov	x24, x0
   11264:	ldr	w1, [x0, #8]
   11268:	str	w1, [x29, #152]
   1126c:	ldr	x2, [x24]
   11270:	str	x2, [x29, #168]
   11274:	sub	w0, w1, #0x1
   11278:	cbz	w1, 10a9c <argp_failure@@Base+0x2b4>
   1127c:	add	x1, x0, #0x1
   11280:	adrp	x28, 32000 <vasnprintf@@Base+0x1848>
   11284:	str	x0, [x29, #160]
   11288:	add	x0, x28, #0x2c0
   1128c:	str	x0, [x29, #184]
   11290:	lsl	x0, x1, #3
   11294:	sub	x0, x0, x1
   11298:	mov	x23, x2
   1129c:	add	x0, x2, x0, lsl #3
   112a0:	str	x0, [x29, #176]
   112a4:	ldr	w0, [x23, #8]
   112a8:	ldr	x28, [x23]
   112ac:	sub	w22, w0, #0x1
   112b0:	cbz	w0, 112e8 <argp_failure@@Base+0xb00>
   112b4:	add	x22, x22, #0x1
   112b8:	add	x22, x22, x22, lsl #1
   112bc:	add	x22, x28, x22, lsl #4
   112c0:	ldr	x0, [x28]
   112c4:	cbz	x0, 112dc <argp_failure@@Base+0xaf4>
   112c8:	ldr	w3, [x28, #24]
   112cc:	ldr	x1, [x29, #184]
   112d0:	tbnz	w3, #1, 112dc <argp_failure@@Base+0xaf4>
   112d4:	bl	a9b0 <strcmp@plt>
   112d8:	cbz	w0, 11c34 <argp_failure@@Base+0x144c>
   112dc:	add	x28, x28, #0x30
   112e0:	cmp	x28, x22
   112e4:	b.ne	112c0 <argp_failure@@Base+0xad8>  // b.any
   112e8:	ldr	x0, [x29, #176]
   112ec:	add	x23, x23, #0x38
   112f0:	cmp	x23, x0
   112f4:	b.ne	112a4 <argp_failure@@Base+0xabc>  // b.any
   112f8:	ldp	x0, x2, [x29, #160]
   112fc:	adrp	x28, 32000 <vasnprintf@@Base+0x1848>
   11300:	add	x1, x0, #0x1
   11304:	add	x0, x28, #0x2c8
   11308:	str	x0, [x29, #184]
   1130c:	mov	x23, x2
   11310:	lsl	x0, x1, #3
   11314:	sub	x0, x0, x1
   11318:	add	x0, x2, x0, lsl #3
   1131c:	str	x0, [x29, #176]
   11320:	ldr	w0, [x23, #8]
   11324:	ldr	x28, [x23]
   11328:	sub	w22, w0, #0x1
   1132c:	cbz	w0, 11368 <argp_failure@@Base+0xb80>
   11330:	add	x22, x22, #0x1
   11334:	add	x22, x22, x22, lsl #1
   11338:	add	x22, x28, x22, lsl #4
   1133c:	nop
   11340:	ldr	x0, [x28]
   11344:	cbz	x0, 1135c <argp_failure@@Base+0xb74>
   11348:	ldr	w3, [x28, #24]
   1134c:	ldr	x1, [x29, #184]
   11350:	tbnz	w3, #1, 1135c <argp_failure@@Base+0xb74>
   11354:	bl	a9b0 <strcmp@plt>
   11358:	cbz	w0, 11c54 <argp_failure@@Base+0x146c>
   1135c:	add	x28, x28, #0x30
   11360:	cmp	x28, x22
   11364:	b.ne	11340 <argp_failure@@Base+0xb58>  // b.any
   11368:	ldr	x0, [x29, #176]
   1136c:	add	x23, x23, #0x38
   11370:	cmp	x23, x0
   11374:	b.ne	11320 <argp_failure@@Base+0xb38>  // b.any
   11378:	ldr	w1, [x29, #152]
   1137c:	b	11c64 <argp_failure@@Base+0x147c>
   11380:	mov	w3, w22
   11384:	mov	x1, x20
   11388:	mov	x0, x26
   1138c:	mov	x5, x25
   11390:	mov	w4, #0x0                   	// #0
   11394:	mov	w2, #0x1                   	// #1
   11398:	bl	102e0 <argp_fmtstream_point@@Base+0x18c0>
   1139c:	orr	w22, w22, w0
   113a0:	b	10e60 <argp_failure@@Base+0x678>
   113a4:	mov	x0, x25
   113a8:	str	w1, [x29, #184]
   113ac:	bl	a520 <_argp_fmtstream_update@plt>
   113b0:	ldr	w1, [x29, #184]
   113b4:	b	11230 <argp_failure@@Base+0xa48>
   113b8:	mov	x0, x25
   113bc:	bl	a520 <_argp_fmtstream_update@plt>
   113c0:	ldp	x1, x0, [x25, #48]
   113c4:	sxtw	x22, w22
   113c8:	ldr	x2, [x25, #32]
   113cc:	str	x22, [x25, #24]
   113d0:	ldrsw	x22, [x29, #184]
   113d4:	sub	x1, x0, x1
   113d8:	cmp	x1, x2
   113dc:	b.ls	111dc <argp_failure@@Base+0x9f4>  // b.plast
   113e0:	mov	x0, x25
   113e4:	bl	a520 <_argp_fmtstream_update@plt>
   113e8:	ldr	x0, [x25, #56]
   113ec:	b	111dc <argp_failure@@Base+0x9f4>
   113f0:	orr	w19, w19, #0x2
   113f4:	mov	x1, x25
   113f8:	mov	x0, x24
   113fc:	bl	fe50 <argp_fmtstream_point@@Base+0x1430>
   11400:	b	111a0 <argp_failure@@Base+0x9b8>
   11404:	mov	x0, x25
   11408:	bl	a520 <_argp_fmtstream_update@plt>
   1140c:	b	11188 <argp_failure@@Base+0x9a0>
   11410:	ldr	x0, [x29, #176]
   11414:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   11418:	add	x1, x1, #0x2e8
   1141c:	mov	w2, #0x5                   	// #5
   11420:	add	x0, x0, #0x120
   11424:	bl	ada0 <dcgettext@plt>
   11428:	mov	x23, x0
   1142c:	bl	a340 <strlen@plt>
   11430:	mov	x2, x0
   11434:	cbz	x0, 111a0 <argp_failure@@Base+0x9b8>
   11438:	ldp	x0, x3, [x25, #56]
   1143c:	add	x1, x0, x2
   11440:	cmp	x3, x1
   11444:	b.cs	11464 <argp_failure@@Base+0xc7c>  // b.hs, b.nlast
   11448:	mov	x1, x2
   1144c:	mov	x0, x25
   11450:	str	x2, [x29, #136]
   11454:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11458:	cbz	w0, 111a0 <argp_failure@@Base+0x9b8>
   1145c:	ldr	x0, [x25, #56]
   11460:	ldr	x2, [x29, #136]
   11464:	mov	x1, x23
   11468:	str	x2, [x29, #136]
   1146c:	bl	a2c0 <memcpy@plt>
   11470:	ldr	x0, [x25, #56]
   11474:	ldr	x2, [x29, #136]
   11478:	add	x2, x0, x2
   1147c:	str	x2, [x25, #56]
   11480:	b	111a0 <argp_failure@@Base+0x9b8>
   11484:	mov	w22, #0x1                   	// #1
   11488:	tbz	w19, #4, 10aac <argp_failure@@Base+0x2c4>
   1148c:	b	11088 <argp_failure@@Base+0x8a0>
   11490:	ldp	x0, x1, [x25, #56]
   11494:	cmp	x0, x1
   11498:	b.cs	11ffc <argp_failure@@Base+0x1814>  // b.hs, b.nlast
   1149c:	add	x1, x0, #0x1
   114a0:	str	x1, [x25, #56]
   114a4:	mov	w1, #0xa                   	// #10
   114a8:	strb	w1, [x0]
   114ac:	b	10e78 <argp_failure@@Base+0x690>
   114b0:	tbz	w2, #1, 114bc <argp_failure@@Base+0xcd4>
   114b4:	add	x27, x27, #0x1
   114b8:	b	10c20 <argp_failure@@Base+0x438>
   114bc:	add	x0, x21, #0x1e8
   114c0:	ldr	x1, [x29, #160]
   114c4:	ldr	w0, [x0, #8]
   114c8:	bl	fc40 <argp_fmtstream_point@@Base+0x1220>
   114cc:	ldp	x0, x1, [x25, #56]
   114d0:	cmp	x0, x1
   114d4:	b.cc	114ec <argp_failure@@Base+0xd04>  // b.lo, b.ul, b.last
   114d8:	mov	x0, x25
   114dc:	mov	x1, #0x1                   	// #1
   114e0:	bl	ad80 <_argp_fmtstream_ensure@plt>
   114e4:	cbz	w0, 114fc <argp_failure@@Base+0xd14>
   114e8:	ldr	x0, [x25, #56]
   114ec:	add	x1, x0, #0x1
   114f0:	str	x1, [x25, #56]
   114f4:	mov	w1, #0x2d                  	// #45
   114f8:	strb	w1, [x0]
   114fc:	ldp	x0, x1, [x25, #56]
   11500:	ldrb	w2, [x27]
   11504:	cmp	x0, x1
   11508:	b.cc	11528 <argp_failure@@Base+0xd40>  // b.lo, b.ul, b.last
   1150c:	mov	x0, x25
   11510:	mov	x1, #0x1                   	// #1
   11514:	str	w2, [x29, #184]
   11518:	bl	ad80 <_argp_fmtstream_ensure@plt>
   1151c:	cbz	w0, 11534 <argp_failure@@Base+0xd4c>
   11520:	ldr	w2, [x29, #184]
   11524:	ldr	x0, [x25, #56]
   11528:	add	x1, x0, #0x1
   1152c:	str	x1, [x25, #56]
   11530:	strb	w2, [x0]
   11534:	ldr	w0, [x29, #136]
   11538:	ldr	x1, [x23, #16]
   1153c:	cbz	w0, 11a4c <argp_failure@@Base+0x1264>
   11540:	ldr	w0, [x21, #488]
   11544:	cbnz	w0, 11a4c <argp_failure@@Base+0x1264>
   11548:	cbz	x1, 114b4 <argp_failure@@Base+0xccc>
   1154c:	mov	w0, #0x1                   	// #1
   11550:	add	x27, x27, #0x1
   11554:	str	w0, [x29, #212]
   11558:	b	10c20 <argp_failure@@Base+0x438>
   1155c:	ldr	x3, [x23, #32]
   11560:	cbz	x3, 11ab0 <argp_failure@@Base+0x12c8>
   11564:	mov	x0, #0x0                   	// #0
   11568:	cbz	x20, 11574 <argp_failure@@Base+0xd8c>
   1156c:	ldr	x0, [x22, #40]
   11570:	ldr	x0, [x0, #48]
   11574:	mov	x1, x3
   11578:	mov	w2, #0x5                   	// #5
   1157c:	bl	ada0 <dcgettext@plt>
   11580:	ldr	x4, [x22, #40]
   11584:	mov	x27, x0
   11588:	cbz	x4, 11e00 <argp_failure@@Base+0x1618>
   1158c:	mov	x3, x0
   11590:	ldr	x0, [x4, #40]
   11594:	cbz	x0, 115d0 <argp_failure@@Base+0xde8>
   11598:	ldr	w23, [x23, #8]
   1159c:	mov	x1, x20
   115a0:	mov	x0, x4
   115a4:	stp	x3, x4, [x29, #176]
   115a8:	bl	ac60 <_argp_input@plt>
   115ac:	ldp	x3, x4, [x29, #176]
   115b0:	mov	x2, x0
   115b4:	mov	w0, w23
   115b8:	str	x3, [x29, #184]
   115bc:	ldr	x4, [x4, #40]
   115c0:	mov	x1, x3
   115c4:	blr	x4
   115c8:	mov	x27, x0
   115cc:	ldr	x3, [x29, #184]
   115d0:	cbz	x27, 116f0 <argp_failure@@Base+0xf08>
   115d4:	ldrb	w0, [x27]
   115d8:	cbz	w0, 116e0 <argp_failure@@Base+0xef8>
   115dc:	ldp	x1, x0, [x25, #48]
   115e0:	ldr	x2, [x25, #32]
   115e4:	sub	x1, x0, x1
   115e8:	cmp	x1, x2
   115ec:	b.hi	11efc <argp_failure@@Base+0x1714>  // b.pmore
   115f0:	add	x2, x21, #0x1e8
   115f4:	ldr	x1, [x25, #40]
   115f8:	ldr	w2, [x2, #20]
   115fc:	cmp	x1, #0x0
   11600:	csel	x1, x1, xzr, ge  // ge = tcont
   11604:	sxtw	x4, w2
   11608:	str	x4, [x25, #8]
   1160c:	mov	w4, w2
   11610:	sxtw	x4, w4
   11614:	str	x4, [x25, #24]
   11618:	add	w4, w2, #0x3
   1161c:	cmp	w4, w1
   11620:	b.cc	11edc <argp_failure@@Base+0x16f4>  // b.lo, b.ul, b.last
   11624:	cmp	w2, w1
   11628:	b.hi	11e5c <argp_failure@@Base+0x1674>  // b.pmore
   1162c:	ldr	x2, [x25, #64]
   11630:	add	x1, x0, #0x3
   11634:	cmp	x2, x1
   11638:	b.cs	11658 <argp_failure@@Base+0xe70>  // b.hs, b.nlast
   1163c:	mov	x0, x25
   11640:	mov	x1, #0x3                   	// #3
   11644:	str	x3, [x29, #184]
   11648:	bl	ad80 <_argp_fmtstream_ensure@plt>
   1164c:	ldr	x3, [x29, #184]
   11650:	cbz	w0, 11680 <argp_failure@@Base+0xe98>
   11654:	ldr	x0, [x25, #56]
   11658:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   1165c:	add	x1, x1, #0x350
   11660:	ldrh	w2, [x1]
   11664:	ldrb	w1, [x1, #2]
   11668:	strh	w2, [x0]
   1166c:	strb	w1, [x0, #2]
   11670:	ldr	x0, [x25, #56]
   11674:	add	x0, x0, #0x3
   11678:	str	x0, [x25, #56]
   1167c:	nop
   11680:	mov	x0, x27
   11684:	str	x3, [x29, #184]
   11688:	bl	a340 <strlen@plt>
   1168c:	mov	x23, x0
   11690:	ldr	x3, [x29, #184]
   11694:	cbz	x0, 116e0 <argp_failure@@Base+0xef8>
   11698:	ldp	x0, x2, [x25, #56]
   1169c:	add	x1, x0, x23
   116a0:	cmp	x2, x1
   116a4:	b.cs	116c0 <argp_failure@@Base+0xed8>  // b.hs, b.nlast
   116a8:	mov	x1, x23
   116ac:	mov	x0, x25
   116b0:	bl	ad80 <_argp_fmtstream_ensure@plt>
   116b4:	ldr	x3, [x29, #184]
   116b8:	cbz	w0, 116e0 <argp_failure@@Base+0xef8>
   116bc:	ldr	x0, [x25, #56]
   116c0:	mov	x2, x23
   116c4:	mov	x1, x27
   116c8:	str	x3, [x29, #184]
   116cc:	bl	a2c0 <memcpy@plt>
   116d0:	ldr	x0, [x25, #56]
   116d4:	ldr	x3, [x29, #184]
   116d8:	add	x0, x0, x23
   116dc:	str	x0, [x25, #56]
   116e0:	cmp	x27, x3
   116e4:	b.eq	116f0 <argp_failure@@Base+0xf08>  // b.none
   116e8:	mov	x0, x27
   116ec:	bl	aa50 <free@plt>
   116f0:	ldp	x1, x0, [x25, #48]
   116f4:	ldr	x2, [x25, #32]
   116f8:	sub	x1, x0, x1
   116fc:	cmp	x1, x2
   11700:	b.hi	11a94 <argp_failure@@Base+0x12ac>  // b.pmore
   11704:	ldr	x1, [x25, #64]
   11708:	str	xzr, [x25, #8]
   1170c:	cmp	x1, x0
   11710:	b.hi	11728 <argp_failure@@Base+0xf40>  // b.pmore
   11714:	mov	x0, x25
   11718:	mov	x1, #0x1                   	// #1
   1171c:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11720:	cbz	w0, 11738 <argp_failure@@Base+0xf50>
   11724:	ldr	x0, [x25, #56]
   11728:	add	x1, x0, #0x1
   1172c:	str	x1, [x25, #56]
   11730:	mov	w1, #0xa                   	// #10
   11734:	strb	w1, [x0]
   11738:	str	x22, [x29, #200]
   1173c:	ldp	x2, x0, [x25, #48]
   11740:	ldr	x1, [x25, #32]
   11744:	ldrsw	x23, [x29, #152]
   11748:	sub	x3, x0, x2
   1174c:	cmp	x3, x1
   11750:	b.ls	10da8 <argp_failure@@Base+0x5c0>  // b.plast
   11754:	mov	x0, x25
   11758:	bl	a520 <_argp_fmtstream_update@plt>
   1175c:	ldp	x2, x0, [x25, #48]
   11760:	str	x23, [x25, #8]
   11764:	ldr	x1, [x25, #32]
   11768:	sub	x3, x0, x2
   1176c:	cmp	x3, x1
   11770:	b.ls	10dac <argp_failure@@Base+0x5c4>  // b.plast
   11774:	mov	x0, x25
   11778:	bl	a520 <_argp_fmtstream_update@plt>
   1177c:	ldrsw	x0, [x29, #144]
   11780:	add	x22, x22, #0x38
   11784:	str	x0, [x25, #24]
   11788:	ldr	x0, [x29, #112]
   1178c:	cmp	x22, x0
   11790:	b.eq	10dc4 <argp_failure@@Base+0x5dc>  // b.none
   11794:	ldp	x2, x0, [x25, #48]
   11798:	ldr	x1, [x25, #32]
   1179c:	ldr	x23, [x22]
   117a0:	sub	x0, x0, x2
   117a4:	mov	x2, x1
   117a8:	cmp	x0, x1
   117ac:	ldr	x27, [x22, #16]
   117b0:	b.ls	10b20 <argp_failure@@Base+0x338>  // b.plast
   117b4:	mov	x0, x25
   117b8:	bl	a520 <_argp_fmtstream_update@plt>
   117bc:	ldp	x1, x0, [x25, #48]
   117c0:	ldr	x2, [x25, #32]
   117c4:	sub	x0, x0, x1
   117c8:	b	10b20 <argp_failure@@Base+0x338>
   117cc:	add	x1, x21, #0x1e8
   117d0:	cmp	x0, x2
   117d4:	ldr	w27, [x1, #12]
   117d8:	b.hi	11aa4 <argp_failure@@Base+0x12bc>  // b.pmore
   117dc:	ldr	w0, [x22, #8]
   117e0:	sxtw	x27, w27
   117e4:	str	x27, [x25, #24]
   117e8:	cbz	w0, 10d40 <argp_failure@@Base+0x558>
   117ec:	cbz	x20, 11ac4 <argp_failure@@Base+0x12dc>
   117f0:	sub	w27, w0, #0x1
   117f4:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   117f8:	add	x1, x27, #0x1
   117fc:	add	x0, x0, #0x338
   11800:	mov	x27, x23
   11804:	str	x0, [x29, #184]
   11808:	add	x1, x1, x1, lsl #1
   1180c:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   11810:	add	x0, x0, #0x340
   11814:	str	x0, [x29, #176]
   11818:	add	x28, x23, x1, lsl #4
   1181c:	b	1182c <argp_failure@@Base+0x1044>
   11820:	add	x27, x27, #0x30
   11824:	cmp	x27, x28
   11828:	b.eq	10d40 <argp_failure@@Base+0x558>  // b.none
   1182c:	ldr	x0, [x27]
   11830:	cbz	x0, 11820 <argp_failure@@Base+0x1038>
   11834:	ldr	w0, [x27, #24]
   11838:	tbnz	w0, #1, 11820 <argp_failure@@Base+0x1038>
   1183c:	add	x0, x21, #0x1e8
   11840:	ldr	x1, [x29, #160]
   11844:	ldr	w0, [x0, #12]
   11848:	bl	fc40 <argp_fmtstream_point@@Base+0x1220>
   1184c:	ldr	x2, [x27]
   11850:	mov	x0, x25
   11854:	ldr	x1, [x29, #184]
   11858:	bl	a8f0 <argp_fmtstream_printf@plt>
   1185c:	ldr	x1, [x23, #16]
   11860:	ldr	x0, [x22, #40]
   11864:	ldr	x0, [x0, #48]
   11868:	cbz	x1, 11820 <argp_failure@@Base+0x1038>
   1186c:	ldr	w4, [x23, #24]
   11870:	mov	w2, #0x5                   	// #5
   11874:	tbz	w4, #0, 119d0 <argp_failure@@Base+0x11e8>
   11878:	bl	ada0 <dcgettext@plt>
   1187c:	mov	x2, x0
   11880:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   11884:	mov	x0, x25
   11888:	add	x1, x1, #0x348
   1188c:	bl	a8f0 <argp_fmtstream_printf@plt>
   11890:	b	11820 <argp_failure@@Base+0x1038>
   11894:	add	x1, x21, #0x1e8
   11898:	str	wzr, [x29, #136]
   1189c:	cmp	x0, x2
   118a0:	ldr	w28, [x1, #8]
   118a4:	b.ls	10ba4 <argp_failure@@Base+0x3bc>  // b.plast
   118a8:	mov	x0, x25
   118ac:	bl	a520 <_argp_fmtstream_update@plt>
   118b0:	b	10ba4 <argp_failure@@Base+0x3bc>
   118b4:	cmp	w24, #0x2d
   118b8:	and	w0, w1, #0x8
   118bc:	mov	w2, #0x5f                  	// #95
   118c0:	ccmp	w24, w2, #0x4, ne  // ne = any
   118c4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   118c8:	b.eq	120bc <argp_failure@@Base+0x18d4>  // b.none
   118cc:	mov	x28, x25
   118d0:	mov	w4, #0x2d                  	// #45
   118d4:	nop
   118d8:	ldrb	w2, [x28, #1]!
   118dc:	cmp	w2, #0x5f
   118e0:	ubfiz	x0, x2, #1, #8
   118e4:	ccmp	w2, w4, #0x4, ne  // ne = any
   118e8:	ldrh	w1, [x3, x0]
   118ec:	and	w0, w1, #0x8
   118f0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   118f4:	b.ne	118d8 <argp_failure@@Base+0x10f0>  // b.any
   118f8:	sub	x23, x28, x25
   118fc:	tbz	w1, #13, 11910 <argp_failure@@Base+0x1128>
   11900:	ldrb	w2, [x28, #1]!
   11904:	ubfiz	x0, x2, #1, #8
   11908:	ldrh	w1, [x3, x0]
   1190c:	tbnz	w1, #13, 11900 <argp_failure@@Base+0x1118>
   11910:	cmp	w2, #0x2c
   11914:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   11918:	b.eq	119f8 <argp_failure@@Base+0x1210>  // b.none
   1191c:	cmp	w2, #0x3d
   11920:	b.eq	12014 <argp_failure@@Base+0x182c>  // b.none
   11924:	tbnz	w1, #11, 1206c <argp_failure@@Base+0x1884>
   11928:	mov	x24, x25
   1192c:	mov	x25, x28
   11930:	str	wzr, [x29, #160]
   11934:	str	wzr, [x29, #168]
   11938:	cmp	x23, #0x8
   1193c:	b.eq	11a1c <argp_failure@@Base+0x1234>  // b.none
   11940:	cmp	x23, #0xd
   11944:	b.ne	11cd8 <argp_failure@@Base+0x14f0>  // b.any
   11948:	ldr	x0, [x29, #184]
   1194c:	mov	x2, x23
   11950:	add	x1, x0, #0x30
   11954:	mov	x0, x24
   11958:	str	x1, [x29, #120]
   1195c:	bl	a6c0 <strncmp@plt>
   11960:	ldr	x1, [x29, #120]
   11964:	cbz	w0, 11d28 <argp_failure@@Base+0x1540>
   11968:	ldr	x1, [x29, #144]
   1196c:	mov	x2, x23
   11970:	mov	x0, x24
   11974:	bl	a6c0 <strncmp@plt>
   11978:	cbz	w0, 121dc <argp_failure@@Base+0x19f4>
   1197c:	nop
   11980:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   11984:	add	x1, x1, #0x3e8
   11988:	mov	w2, #0x5                   	// #5
   1198c:	ldr	x0, [x29, #136]
   11990:	bl	ada0 <dcgettext@plt>
   11994:	mov	x3, x0
   11998:	mov	x5, x24
   1199c:	mov	w4, w23
   119a0:	mov	x0, x20
   119a4:	mov	w2, #0x0                   	// #0
   119a8:	mov	w1, #0x0                   	// #0
   119ac:	bl	a650 <argp_failure@plt>
   119b0:	ldrb	w24, [x28]
   119b4:	cmp	w24, #0x2c
   119b8:	b.eq	11cc4 <argp_failure@@Base+0x14dc>  // b.none
   119bc:	cbnz	w24, 10f78 <argp_failure@@Base+0x790>
   119c0:	b	10fa0 <argp_failure@@Base+0x7b8>
   119c4:	mov	x0, x25
   119c8:	bl	a520 <_argp_fmtstream_update@plt>
   119cc:	b	10d54 <argp_failure@@Base+0x56c>
   119d0:	mov	w2, #0x5                   	// #5
   119d4:	bl	ada0 <dcgettext@plt>
   119d8:	ldr	x1, [x29, #176]
   119dc:	mov	x2, x0
   119e0:	mov	x0, x25
   119e4:	bl	a8f0 <argp_fmtstream_printf@plt>
   119e8:	b	11820 <argp_failure@@Base+0x1038>
   119ec:	mov	w1, #0x1                   	// #1
   119f0:	str	w1, [x29, #136]
   119f4:	b	10b94 <argp_failure@@Base+0x3ac>
   119f8:	cmp	w24, #0x6e
   119fc:	b.eq	11e28 <argp_failure@@Base+0x1640>  // b.none
   11a00:	mov	w0, #0x1                   	// #1
   11a04:	str	w0, [x29, #160]
   11a08:	str	w0, [x29, #168]
   11a0c:	mov	x24, x25
   11a10:	cmp	x23, #0x8
   11a14:	mov	x25, x28
   11a18:	b.ne	11940 <argp_failure@@Base+0x1158>  // b.any
   11a1c:	ldr	x1, [x29, #152]
   11a20:	mov	x2, x23
   11a24:	mov	x0, x24
   11a28:	bl	a6c0 <strncmp@plt>
   11a2c:	cbnz	w0, 11980 <argp_failure@@Base+0x1198>
   11a30:	ldr	x1, [x29, #152]
   11a34:	nop
   11a38:	ldrb	w0, [x1, #15]
   11a3c:	ldr	x1, [x29, #112]
   11a40:	ldr	w2, [x29, #160]
   11a44:	str	w2, [x1, x0]
   11a48:	b	119b0 <argp_failure@@Base+0x11c8>
   11a4c:	mov	x0, #0x0                   	// #0
   11a50:	cbz	x20, 11a5c <argp_failure@@Base+0x1274>
   11a54:	ldr	x0, [x22, #40]
   11a58:	ldr	x0, [x0, #48]
   11a5c:	cbz	x1, 114b4 <argp_failure@@Base+0xccc>
   11a60:	ldr	w2, [x23, #24]
   11a64:	tbz	w2, #0, 11e08 <argp_failure@@Base+0x1620>
   11a68:	mov	w2, #0x5                   	// #5
   11a6c:	bl	ada0 <dcgettext@plt>
   11a70:	ldr	x1, [x29, #104]
   11a74:	mov	x2, x0
   11a78:	add	x27, x27, #0x1
   11a7c:	mov	x0, x25
   11a80:	bl	a8f0 <argp_fmtstream_printf@plt>
   11a84:	b	10c20 <argp_failure@@Base+0x438>
   11a88:	mov	x0, x25
   11a8c:	bl	a520 <_argp_fmtstream_update@plt>
   11a90:	b	10c54 <argp_failure@@Base+0x46c>
   11a94:	mov	x0, x25
   11a98:	bl	a520 <_argp_fmtstream_update@plt>
   11a9c:	ldr	x0, [x25, #56]
   11aa0:	b	11704 <argp_failure@@Base+0xf1c>
   11aa4:	mov	x0, x25
   11aa8:	bl	a520 <_argp_fmtstream_update@plt>
   11aac:	b	117dc <argp_failure@@Base+0xff4>
   11ab0:	ldr	x4, [x22, #40]
   11ab4:	cbz	x4, 116f0 <argp_failure@@Base+0xf08>
   11ab8:	ldr	x0, [x4, #40]
   11abc:	cbnz	x0, 11598 <argp_failure@@Base+0xdb0>
   11ac0:	b	116f0 <argp_failure@@Base+0xf08>
   11ac4:	sub	w0, w0, #0x1
   11ac8:	adrp	x27, 32000 <vasnprintf@@Base+0x1848>
   11acc:	add	x4, x0, #0x1
   11ad0:	add	x28, x27, #0x338
   11ad4:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   11ad8:	mov	x27, x23
   11adc:	add	x4, x4, x4, lsl #1
   11ae0:	add	x0, x0, #0x348
   11ae4:	str	x0, [x29, #176]
   11ae8:	add	x3, x23, x4, lsl #4
   11aec:	b	11afc <argp_failure@@Base+0x1314>
   11af0:	add	x27, x27, #0x30
   11af4:	cmp	x3, x27
   11af8:	b.eq	10d40 <argp_failure@@Base+0x558>  // b.none
   11afc:	ldr	x0, [x27]
   11b00:	cbz	x0, 11af0 <argp_failure@@Base+0x1308>
   11b04:	ldr	w0, [x27, #24]
   11b08:	tbnz	w0, #1, 11af0 <argp_failure@@Base+0x1308>
   11b0c:	add	x0, x21, #0x1e8
   11b10:	str	x3, [x29, #184]
   11b14:	ldr	x1, [x29, #160]
   11b18:	ldr	w0, [x0, #12]
   11b1c:	bl	fc40 <argp_fmtstream_point@@Base+0x1220>
   11b20:	ldr	x2, [x27]
   11b24:	mov	x1, x28
   11b28:	mov	x0, x25
   11b2c:	bl	a8f0 <argp_fmtstream_printf@plt>
   11b30:	ldr	x1, [x23, #16]
   11b34:	ldr	x3, [x29, #184]
   11b38:	cbz	x1, 11af0 <argp_failure@@Base+0x1308>
   11b3c:	ldr	w6, [x23, #24]
   11b40:	mov	w2, #0x5                   	// #5
   11b44:	mov	x0, #0x0                   	// #0
   11b48:	tbnz	w6, #0, 11dc4 <argp_failure@@Base+0x15dc>
   11b4c:	bl	ada0 <dcgettext@plt>
   11b50:	mov	x2, x0
   11b54:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   11b58:	mov	x0, x25
   11b5c:	add	x1, x1, #0x340
   11b60:	bl	a8f0 <argp_fmtstream_printf@plt>
   11b64:	ldr	x3, [x29, #184]
   11b68:	b	11af0 <argp_failure@@Base+0x1308>
   11b6c:	sub	w0, w0, #0x1
   11b70:	mov	x27, x23
   11b74:	add	x4, x0, #0x1
   11b78:	add	x0, x21, #0x1e8
   11b7c:	str	x0, [x29, #176]
   11b80:	add	x4, x4, x4, lsl #1
   11b84:	add	x3, x23, x4, lsl #4
   11b88:	b	11b98 <argp_failure@@Base+0x13b0>
   11b8c:	add	x27, x27, #0x30
   11b90:	cmp	x3, x27
   11b94:	b.eq	10d40 <argp_failure@@Base+0x558>  // b.none
   11b98:	ldr	x0, [x27]
   11b9c:	cbz	x0, 11b8c <argp_failure@@Base+0x13a4>
   11ba0:	ldr	w0, [x27, #24]
   11ba4:	tbnz	w0, #1, 11b8c <argp_failure@@Base+0x13a4>
   11ba8:	ldr	x0, [x29, #176]
   11bac:	str	x3, [x29, #184]
   11bb0:	ldr	x1, [x29, #160]
   11bb4:	ldr	w0, [x0, #16]
   11bb8:	bl	fc40 <argp_fmtstream_point@@Base+0x1220>
   11bbc:	ldr	x1, [x27]
   11bc0:	mov	w2, #0x5                   	// #5
   11bc4:	mov	x0, #0x0                   	// #0
   11bc8:	bl	ada0 <dcgettext@plt>
   11bcc:	str	x0, [x29, #168]
   11bd0:	bl	a340 <strlen@plt>
   11bd4:	mov	x28, x0
   11bd8:	ldr	x3, [x29, #184]
   11bdc:	cbz	x0, 11b8c <argp_failure@@Base+0x13a4>
   11be0:	ldp	x6, x8, [x25, #56]
   11be4:	mov	x1, x0
   11be8:	mov	x0, x25
   11bec:	add	x7, x6, x28
   11bf0:	cmp	x8, x7
   11bf4:	b.cs	11c0c <argp_failure@@Base+0x1424>  // b.hs, b.nlast
   11bf8:	str	x3, [x29, #184]
   11bfc:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11c00:	ldr	x3, [x29, #184]
   11c04:	cbz	w0, 11b8c <argp_failure@@Base+0x13a4>
   11c08:	ldr	x6, [x25, #56]
   11c0c:	mov	x2, x28
   11c10:	ldr	x1, [x29, #168]
   11c14:	mov	x0, x6
   11c18:	str	x3, [x29, #184]
   11c1c:	bl	a2c0 <memcpy@plt>
   11c20:	ldr	x0, [x25, #56]
   11c24:	ldr	x3, [x29, #184]
   11c28:	add	x2, x0, x28
   11c2c:	str	x2, [x25, #56]
   11c30:	b	11b8c <argp_failure@@Base+0x13a4>
   11c34:	mov	w0, #0xffffffff            	// #-1
   11c38:	str	w0, [x23, #24]
   11c3c:	ldr	w0, [x24, #8]
   11c40:	str	w0, [x29, #152]
   11c44:	sub	w1, w0, #0x1
   11c48:	str	x1, [x29, #160]
   11c4c:	cbnz	w0, 112f8 <argp_failure@@Base+0xb10>
   11c50:	b	10a9c <argp_failure@@Base+0x2b4>
   11c54:	mov	w0, #0xffffffff            	// #-1
   11c58:	str	w0, [x23, #24]
   11c5c:	ldr	w1, [x24, #8]
   11c60:	cbz	w1, 10a9c <argp_failure@@Base+0x2b4>
   11c64:	ldr	x2, [x29, #168]
   11c68:	mov	w0, #0x0                   	// #0
   11c6c:	nop
   11c70:	str	w0, [x2, #48]
   11c74:	add	w0, w0, #0x1
   11c78:	cmp	w0, w1
   11c7c:	add	x2, x2, #0x38
   11c80:	b.cc	11c70 <argp_failure@@Base+0x1488>  // b.lo, b.ul, b.last
   11c84:	ldr	x0, [x29, #168]
   11c88:	mov	w1, w1
   11c8c:	adrp	x3, f000 <argp_fmtstream_point@@Base+0x5e0>
   11c90:	mov	x2, #0x38                  	// #56
   11c94:	add	x3, x3, #0xd8
   11c98:	mov	w22, #0x0                   	// #0
   11c9c:	bl	a500 <qsort@plt>
   11ca0:	tst	x19, #0x3
   11ca4:	b.eq	10aa8 <argp_failure@@Base+0x2c0>  // b.none
   11ca8:	b	110b4 <argp_failure@@Base+0x8cc>
   11cac:	ldr	x0, [x23, #32]
   11cb0:	ldr	x1, [x22, #40]
   11cb4:	ldr	x2, [x29, #160]
   11cb8:	bl	f928 <argp_fmtstream_point@@Base+0xf08>
   11cbc:	str	x22, [x29, #200]
   11cc0:	b	1173c <argp_failure@@Base+0xf54>
   11cc4:	ldrb	w24, [x28, #1]
   11cc8:	add	x7, x28, #0x1
   11ccc:	cbz	w24, 10fa0 <argp_failure@@Base+0x7b8>
   11cd0:	mov	x25, x7
   11cd4:	b	10f78 <argp_failure@@Base+0x790>
   11cd8:	cmp	x23, #0xc
   11cdc:	b.ne	11d48 <argp_failure@@Base+0x1560>  // b.any
   11ce0:	ldr	x0, [x29, #184]
   11ce4:	mov	x2, x23
   11ce8:	add	x1, x0, #0x50
   11cec:	mov	x0, x24
   11cf0:	str	x1, [x29, #120]
   11cf4:	bl	a6c0 <strncmp@plt>
   11cf8:	ldr	x1, [x29, #120]
   11cfc:	cbz	w0, 11d28 <argp_failure@@Base+0x1540>
   11d00:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   11d04:	add	x1, x0, #0x410
   11d08:	add	x1, x1, #0x90
   11d0c:	mov	x0, x24
   11d10:	mov	x2, #0xc                   	// #12
   11d14:	str	x1, [x29, #120]
   11d18:	bl	a6c0 <strncmp@plt>
   11d1c:	ldr	x1, [x29, #120]
   11d20:	cbnz	w0, 11980 <argp_failure@@Base+0x1198>
   11d24:	nop
   11d28:	ldr	w0, [x29, #168]
   11d2c:	cbz	w0, 11a38 <argp_failure@@Base+0x1250>
   11d30:	ldrb	w0, [x1, #14]
   11d34:	cbnz	w0, 11a38 <argp_failure@@Base+0x1250>
   11d38:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   11d3c:	mov	w2, #0x5                   	// #5
   11d40:	add	x1, x1, #0x230
   11d44:	b	1198c <argp_failure@@Base+0x11a4>
   11d48:	cmp	x23, #0xb
   11d4c:	b.ne	11d94 <argp_failure@@Base+0x15ac>  // b.any
   11d50:	ldr	x0, [x29, #184]
   11d54:	mov	x2, x23
   11d58:	add	x1, x0, #0x60
   11d5c:	mov	x0, x24
   11d60:	str	x1, [x29, #120]
   11d64:	bl	a6c0 <strncmp@plt>
   11d68:	ldr	x1, [x29, #120]
   11d6c:	cbz	w0, 11d28 <argp_failure@@Base+0x1540>
   11d70:	ldr	x0, [x29, #184]
   11d74:	add	x1, x0, #0x70
   11d78:	mov	x2, x23
   11d7c:	mov	x0, x24
   11d80:	str	x1, [x29, #120]
   11d84:	bl	a6c0 <strncmp@plt>
   11d88:	ldr	x1, [x29, #120]
   11d8c:	cbnz	w0, 11980 <argp_failure@@Base+0x1198>
   11d90:	b	11d28 <argp_failure@@Base+0x1540>
   11d94:	cmp	x23, #0xa
   11d98:	b.ne	11da8 <argp_failure@@Base+0x15c0>  // b.any
   11d9c:	ldr	x0, [x29, #184]
   11da0:	add	x1, x0, #0x80
   11da4:	b	11d78 <argp_failure@@Base+0x1590>
   11da8:	cmp	x23, #0xc
   11dac:	b.eq	11d00 <argp_failure@@Base+0x1518>  // b.none
   11db0:	cmp	x23, #0x7
   11db4:	b.ne	11980 <argp_failure@@Base+0x1198>  // b.any
   11db8:	ldr	x0, [x29, #184]
   11dbc:	add	x1, x0, #0xa0
   11dc0:	b	11d78 <argp_failure@@Base+0x1590>
   11dc4:	mov	w2, #0x5                   	// #5
   11dc8:	mov	x0, #0x0                   	// #0
   11dcc:	str	x3, [x29, #184]
   11dd0:	bl	ada0 <dcgettext@plt>
   11dd4:	ldr	x1, [x29, #176]
   11dd8:	mov	x2, x0
   11ddc:	mov	x0, x25
   11de0:	bl	a8f0 <argp_fmtstream_printf@plt>
   11de4:	ldr	x3, [x29, #184]
   11de8:	b	11af0 <argp_failure@@Base+0x1308>
   11dec:	ldr	x0, [x24]
   11df0:	bl	aa50 <free@plt>
   11df4:	ldr	x0, [x24, #16]
   11df8:	bl	aa50 <free@plt>
   11dfc:	b	10ed0 <argp_failure@@Base+0x6e8>
   11e00:	mov	x3, x0
   11e04:	b	115d0 <argp_failure@@Base+0xde8>
   11e08:	mov	w2, #0x5                   	// #5
   11e0c:	bl	ada0 <dcgettext@plt>
   11e10:	ldr	x1, [x29, #96]
   11e14:	mov	x2, x0
   11e18:	add	x27, x27, #0x1
   11e1c:	mov	x0, x25
   11e20:	bl	a8f0 <argp_fmtstream_printf@plt>
   11e24:	b	10c20 <argp_failure@@Base+0x438>
   11e28:	ldrb	w0, [x25, #1]
   11e2c:	cmp	w0, #0x6f
   11e30:	b.ne	11a00 <argp_failure@@Base+0x1218>  // b.any
   11e34:	ldrb	w0, [x25, #2]
   11e38:	cmp	w0, #0x2d
   11e3c:	b.ne	11a00 <argp_failure@@Base+0x1218>  // b.any
   11e40:	add	x24, x25, #0x3
   11e44:	mov	w0, #0x1                   	// #1
   11e48:	sub	x23, x23, #0x3
   11e4c:	mov	x25, x28
   11e50:	str	wzr, [x29, #160]
   11e54:	str	w0, [x29, #168]
   11e58:	b	11938 <argp_failure@@Base+0x1150>
   11e5c:	ldr	x1, [x25, #48]
   11e60:	ldr	x4, [x25, #32]
   11e64:	sub	x0, x0, x1
   11e68:	cmp	x0, x4
   11e6c:	b.hi	12050 <argp_failure@@Base+0x1868>  // b.pmore
   11e70:	ldr	x0, [x25, #40]
   11e74:	cmp	x0, #0x0
   11e78:	csel	x23, x0, xzr, ge  // ge = tcont
   11e7c:	sub	w23, w2, w23
   11e80:	cmp	w23, #0x0
   11e84:	sub	w23, w23, #0x1
   11e88:	b.le	11680 <argp_failure@@Base+0xe98>
   11e8c:	mov	w6, #0x20                  	// #32
   11e90:	ldp	x2, x4, [x25, #56]
   11e94:	sub	w23, w23, #0x1
   11e98:	mov	x0, x25
   11e9c:	mov	x1, #0x1                   	// #1
   11ea0:	cmp	x2, x4
   11ea4:	b.cc	11ec4 <argp_failure@@Base+0x16dc>  // b.lo, b.ul, b.last
   11ea8:	str	w6, [x29, #176]
   11eac:	str	x3, [x29, #184]
   11eb0:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11eb4:	ldr	w6, [x29, #176]
   11eb8:	ldr	x3, [x29, #184]
   11ebc:	cbz	w0, 11ed0 <argp_failure@@Base+0x16e8>
   11ec0:	ldr	x2, [x25, #56]
   11ec4:	add	x0, x2, #0x1
   11ec8:	str	x0, [x25, #56]
   11ecc:	strb	w6, [x2]
   11ed0:	cmn	w23, #0x1
   11ed4:	b.ne	11e90 <argp_failure@@Base+0x16a8>  // b.any
   11ed8:	b	11680 <argp_failure@@Base+0xe98>
   11edc:	ldr	x1, [x25, #64]
   11ee0:	cmp	x1, x0
   11ee4:	b.ls	11fdc <argp_failure@@Base+0x17f4>  // b.plast
   11ee8:	add	x1, x0, #0x1
   11eec:	str	x1, [x25, #56]
   11ef0:	mov	w1, #0xa                   	// #10
   11ef4:	strb	w1, [x0]
   11ef8:	b	11680 <argp_failure@@Base+0xe98>
   11efc:	mov	x0, x25
   11f00:	str	x3, [x29, #184]
   11f04:	bl	a520 <_argp_fmtstream_update@plt>
   11f08:	add	x23, x21, #0x1e8
   11f0c:	ldp	x7, x1, [x25, #32]
   11f10:	ldp	x6, x0, [x25, #48]
   11f14:	ldr	w2, [x23, #20]
   11f18:	ldr	x3, [x29, #184]
   11f1c:	cmp	x1, #0x0
   11f20:	csel	x1, x1, xzr, ge  // ge = tcont
   11f24:	sxtw	x4, w2
   11f28:	sub	x6, x0, x6
   11f2c:	cmp	x6, x7
   11f30:	b.ls	11608 <argp_failure@@Base+0xe20>  // b.plast
   11f34:	mov	x0, x25
   11f38:	stp	x3, x4, [x29, #168]
   11f3c:	str	w1, [x29, #184]
   11f40:	bl	a520 <_argp_fmtstream_update@plt>
   11f44:	ldp	x2, x0, [x25, #48]
   11f48:	ldr	x6, [x25, #32]
   11f4c:	ldp	x3, x4, [x29, #168]
   11f50:	str	x4, [x25, #8]
   11f54:	sub	x2, x0, x2
   11f58:	ldr	w1, [x29, #184]
   11f5c:	ldr	w4, [x23, #20]
   11f60:	cmp	x2, x6
   11f64:	b.ls	12258 <argp_failure@@Base+0x1a70>  // b.plast
   11f68:	mov	x0, x25
   11f6c:	str	w4, [x29, #168]
   11f70:	str	x3, [x29, #176]
   11f74:	str	w1, [x29, #184]
   11f78:	bl	a520 <_argp_fmtstream_update@plt>
   11f7c:	ldr	w2, [x23, #20]
   11f80:	ldr	w4, [x29, #168]
   11f84:	ldr	w1, [x29, #184]
   11f88:	ldr	x0, [x25, #56]
   11f8c:	ldr	x3, [x29, #176]
   11f90:	b	11610 <argp_failure@@Base+0xe28>
   11f94:	ldr	x0, [x29, #128]
   11f98:	bl	a620 <funlockfile@plt>
   11f9c:	b	10ee0 <argp_failure@@Base+0x6f8>
   11fa0:	ldr	x0, [x29, #176]
   11fa4:	cmp	x20, #0x0
   11fa8:	mov	w2, #0x5                   	// #5
   11fac:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   11fb0:	add	x0, x0, #0x120
   11fb4:	add	x1, x1, #0x260
   11fb8:	csel	x0, x0, xzr, ne  // ne = any
   11fbc:	bl	ada0 <dcgettext@plt>
   11fc0:	mov	x4, x25
   11fc4:	mov	x3, x0
   11fc8:	mov	w2, #0x0                   	// #0
   11fcc:	mov	x0, x20
   11fd0:	mov	w1, #0x0                   	// #0
   11fd4:	bl	a650 <argp_failure@plt>
   11fd8:	b	10fa0 <argp_failure@@Base+0x7b8>
   11fdc:	mov	x0, x25
   11fe0:	mov	x1, #0x1                   	// #1
   11fe4:	str	x3, [x29, #184]
   11fe8:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11fec:	ldr	x3, [x29, #184]
   11ff0:	cbz	w0, 11680 <argp_failure@@Base+0xe98>
   11ff4:	ldr	x0, [x25, #56]
   11ff8:	b	11ee8 <argp_failure@@Base+0x1700>
   11ffc:	mov	x0, x25
   12000:	mov	x1, #0x1                   	// #1
   12004:	bl	ad80 <_argp_fmtstream_ensure@plt>
   12008:	cbz	w0, 10e78 <argp_failure@@Base+0x690>
   1200c:	ldr	x0, [x25, #56]
   12010:	b	1149c <argp_failure@@Base+0xcb4>
   12014:	ldrb	w0, [x28, #1]
   12018:	add	x6, x28, #0x1
   1201c:	mov	x28, x6
   12020:	ldrh	w1, [x3, x0, lsl #1]
   12024:	tbz	w1, #13, 11924 <argp_failure@@Base+0x113c>
   12028:	ldrb	w0, [x28, #1]!
   1202c:	ldrh	w1, [x3, x0, lsl #1]
   12030:	tbnz	w1, #13, 12028 <argp_failure@@Base+0x1840>
   12034:	b	11924 <argp_failure@@Base+0x113c>
   12038:	mov	x0, x25
   1203c:	mov	x1, #0x1                   	// #1
   12040:	bl	ad80 <_argp_fmtstream_ensure@plt>
   12044:	cbz	w0, 1106c <argp_failure@@Base+0x884>
   12048:	ldr	x0, [x25, #56]
   1204c:	b	1105c <argp_failure@@Base+0x874>
   12050:	mov	x0, x25
   12054:	str	x3, [x29, #176]
   12058:	str	w2, [x29, #184]
   1205c:	bl	a520 <_argp_fmtstream_update@plt>
   12060:	ldr	w2, [x29, #184]
   12064:	ldr	x3, [x29, #176]
   12068:	b	11e70 <argp_failure@@Base+0x1688>
   1206c:	mov	w2, #0xa                   	// #10
   12070:	mov	x1, #0x0                   	// #0
   12074:	mov	x0, x28
   12078:	bl	aa00 <strtol@plt>
   1207c:	ldrb	w2, [x28]
   12080:	ldr	x1, [x22]
   12084:	str	w0, [x29, #160]
   12088:	ldrh	w0, [x1, x2, lsl #1]
   1208c:	tbz	w0, #11, 1209c <argp_failure@@Base+0x18b4>
   12090:	ldrb	w0, [x28, #1]!
   12094:	ldrh	w0, [x1, x0, lsl #1]
   12098:	tbnz	w0, #11, 12090 <argp_failure@@Base+0x18a8>
   1209c:	tbz	w0, #13, 12204 <argp_failure@@Base+0x1a1c>
   120a0:	ldrb	w0, [x28, #1]!
   120a4:	ldrh	w0, [x1, x0, lsl #1]
   120a8:	tbnz	w0, #13, 120a0 <argp_failure@@Base+0x18b8>
   120ac:	mov	x24, x25
   120b0:	mov	x25, x28
   120b4:	str	wzr, [x29, #168]
   120b8:	b	11938 <argp_failure@@Base+0x1150>
   120bc:	mov	w2, w24
   120c0:	mov	x28, x25
   120c4:	mov	x23, #0x0                   	// #0
   120c8:	b	11910 <argp_failure@@Base+0x1128>
   120cc:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   120d0:	mov	w2, #0x5                   	// #5
   120d4:	add	x1, x1, #0x370
   120d8:	mov	x0, #0x0                   	// #0
   120dc:	bl	ada0 <dcgettext@plt>
   120e0:	mov	x21, x0
   120e4:	mov	x23, x0
   120e8:	b	10e38 <argp_failure@@Base+0x650>
   120ec:	ldp	x0, x1, [x25, #56]
   120f0:	cmp	x0, x1
   120f4:	b.cc	1210c <argp_failure@@Base+0x1924>  // b.lo, b.ul, b.last
   120f8:	mov	x0, x25
   120fc:	mov	x1, #0x1                   	// #1
   12100:	bl	ad80 <_argp_fmtstream_ensure@plt>
   12104:	cbz	w0, 1211c <argp_failure@@Base+0x1934>
   12108:	ldr	x0, [x25, #56]
   1210c:	add	x1, x0, #0x1
   12110:	str	x1, [x25, #56]
   12114:	mov	w1, #0xa                   	// #10
   12118:	strb	w1, [x0]
   1211c:	mov	x0, x21
   12120:	bl	a340 <strlen@plt>
   12124:	mov	x22, x0
   12128:	ldp	x0, x1, [x25, #56]
   1212c:	cbnz	x22, 12214 <argp_failure@@Base+0x1a2c>
   12130:	cmp	x0, x1
   12134:	b.cc	1214c <argp_failure@@Base+0x1964>  // b.lo, b.ul, b.last
   12138:	mov	x0, x25
   1213c:	mov	x1, #0x1                   	// #1
   12140:	bl	ad80 <_argp_fmtstream_ensure@plt>
   12144:	cbz	w0, 10e44 <argp_failure@@Base+0x65c>
   12148:	ldr	x0, [x25, #56]
   1214c:	add	x1, x0, #0x1
   12150:	str	x1, [x25, #56]
   12154:	mov	w1, #0xa                   	// #10
   12158:	strb	w1, [x0]
   1215c:	b	10e44 <argp_failure@@Base+0x65c>
   12160:	adrp	x22, 32000 <vasnprintf@@Base+0x1848>
   12164:	add	x22, x22, #0x410
   12168:	add	x22, x22, #0x40
   1216c:	nop
   12170:	mov	w2, #0x5                   	// #5
   12174:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   12178:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   1217c:	add	x1, x1, #0x280
   12180:	add	x0, x0, #0x120
   12184:	bl	ada0 <dcgettext@plt>
   12188:	mov	x5, x22
   1218c:	mov	x3, x0
   12190:	adrp	x4, 32000 <vasnprintf@@Base+0x1848>
   12194:	mov	x0, x20
   12198:	add	x4, x4, #0x2b8
   1219c:	mov	w2, #0x0                   	// #0
   121a0:	mov	w1, #0x0                   	// #0
   121a4:	bl	a650 <argp_failure@plt>
   121a8:	b	10a6c <argp_failure@@Base+0x284>
   121ac:	adrp	x22, 32000 <vasnprintf@@Base+0x1848>
   121b0:	add	x22, x22, #0x410
   121b4:	add	x22, x22, #0x50
   121b8:	b	12170 <argp_failure@@Base+0x1988>
   121bc:	adrp	x22, 32000 <vasnprintf@@Base+0x1848>
   121c0:	add	x22, x22, #0x410
   121c4:	add	x22, x22, #0x60
   121c8:	b	12170 <argp_failure@@Base+0x1988>
   121cc:	adrp	x22, 32000 <vasnprintf@@Base+0x1848>
   121d0:	add	x22, x22, #0x410
   121d4:	add	x22, x22, #0x70
   121d8:	b	12170 <argp_failure@@Base+0x1988>
   121dc:	ldr	x1, [x29, #144]
   121e0:	b	11d28 <argp_failure@@Base+0x1540>
   121e4:	adrp	x22, 32000 <vasnprintf@@Base+0x1848>
   121e8:	add	x22, x22, #0x410
   121ec:	add	x22, x22, #0x80
   121f0:	b	12170 <argp_failure@@Base+0x1988>
   121f4:	adrp	x22, 32000 <vasnprintf@@Base+0x1848>
   121f8:	add	x22, x22, #0x410
   121fc:	add	x22, x22, #0x90
   12200:	b	12170 <argp_failure@@Base+0x1988>
   12204:	mov	x24, x25
   12208:	mov	x25, x28
   1220c:	str	wzr, [x29, #168]
   12210:	b	11938 <argp_failure@@Base+0x1150>
   12214:	add	x2, x0, x22
   12218:	cmp	x1, x2
   1221c:	b.cs	1223c <argp_failure@@Base+0x1a54>  // b.hs, b.nlast
   12220:	mov	x1, x22
   12224:	mov	x0, x25
   12228:	bl	ad80 <_argp_fmtstream_ensure@plt>
   1222c:	cbnz	w0, 12238 <argp_failure@@Base+0x1a50>
   12230:	ldp	x0, x1, [x25, #56]
   12234:	b	12130 <argp_failure@@Base+0x1948>
   12238:	ldr	x0, [x25, #56]
   1223c:	mov	x1, x21
   12240:	mov	x2, x22
   12244:	bl	a2c0 <memcpy@plt>
   12248:	ldp	x0, x1, [x25, #56]
   1224c:	add	x0, x0, x22
   12250:	str	x0, [x25, #56]
   12254:	b	12130 <argp_failure@@Base+0x1948>
   12258:	mov	w2, w4
   1225c:	b	11610 <argp_failure@@Base+0xe28>

0000000000012260 <argp_help@@Base>:
   12260:	mov	w5, w2
   12264:	mov	x4, x3
   12268:	mov	x2, x1
   1226c:	mov	w3, w5
   12270:	mov	x1, #0x0                   	// #0
   12274:	b	10a20 <argp_failure@@Base+0x238>

0000000000012278 <argp_state_help@@Base>:
   12278:	stp	x29, x30, [sp, #-32]!
   1227c:	mov	x29, sp
   12280:	stp	x19, x20, [sp, #16]
   12284:	mov	w20, w2
   12288:	cbz	x0, 122e8 <argp_state_help@@Base+0x70>
   1228c:	ldr	w2, [x0, #28]
   12290:	mov	x19, x0
   12294:	tst	x2, #0x2
   12298:	ccmp	x1, #0x0, #0x4, eq  // eq = none
   1229c:	b.ne	122ac <argp_state_help@@Base+0x34>  // b.any
   122a0:	ldp	x19, x20, [sp, #16]
   122a4:	ldp	x29, x30, [sp], #32
   122a8:	ret
   122ac:	tst	x2, #0x40
   122b0:	orr	w2, w20, #0x80
   122b4:	csel	w20, w2, w20, ne  // ne = any
   122b8:	mov	x2, x1
   122bc:	mov	x1, x0
   122c0:	mov	w3, w20
   122c4:	ldr	x0, [x0]
   122c8:	ldr	x4, [x19, #64]
   122cc:	bl	10a20 <argp_failure@@Base+0x238>
   122d0:	ldr	w0, [x19, #28]
   122d4:	tbnz	w0, #5, 122a0 <argp_state_help@@Base+0x28>
   122d8:	tbnz	w20, #8, 1230c <argp_state_help@@Base+0x94>
   122dc:	tbz	w20, #9, 122a0 <argp_state_help@@Base+0x28>
   122e0:	mov	w0, #0x0                   	// #0
   122e4:	bl	a350 <exit@plt>
   122e8:	cbz	x1, 122a0 <argp_state_help@@Base+0x28>
   122ec:	adrp	x4, 4c000 <vasnprintf@@Base+0x1b848>
   122f0:	mov	x2, x1
   122f4:	mov	w3, w20
   122f8:	mov	x1, #0x0                   	// #0
   122fc:	ldr	x4, [x4, #4008]
   12300:	ldr	x4, [x4]
   12304:	bl	10a20 <argp_failure@@Base+0x238>
   12308:	b	122d8 <argp_state_help@@Base+0x60>
   1230c:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   12310:	ldr	x0, [x0, #4048]
   12314:	ldr	w0, [x0]
   12318:	bl	a350 <exit@plt>
   1231c:	nop

0000000000012320 <argp_error@@Base>:
   12320:	stp	x29, x30, [sp, #-288]!
   12324:	mov	x29, sp
   12328:	stp	x19, x20, [sp, #16]
   1232c:	mov	x20, x0
   12330:	str	x21, [sp, #32]
   12334:	mov	x21, x1
   12338:	str	q0, [sp, #112]
   1233c:	str	q1, [sp, #128]
   12340:	str	q2, [sp, #144]
   12344:	str	q3, [sp, #160]
   12348:	str	q4, [sp, #176]
   1234c:	str	q5, [sp, #192]
   12350:	str	q6, [sp, #208]
   12354:	str	q7, [sp, #224]
   12358:	stp	x2, x3, [sp, #240]
   1235c:	stp	x4, x5, [sp, #256]
   12360:	stp	x6, x7, [sp, #272]
   12364:	cbz	x0, 12444 <argp_error@@Base+0x124>
   12368:	ldr	w0, [x0, #28]
   1236c:	tbnz	w0, #1, 12434 <argp_error@@Base+0x114>
   12370:	ldr	x19, [x20, #72]
   12374:	cbz	x19, 12434 <argp_error@@Base+0x114>
   12378:	mov	x0, x19
   1237c:	bl	a3a0 <flockfile@plt>
   12380:	mov	w0, #0xffffff80            	// #-128
   12384:	mov	w1, #0xffffffd0            	// #-48
   12388:	stp	w1, w0, [sp, #104]
   1238c:	add	x2, sp, #0xf0
   12390:	ldr	x0, [x20, #64]
   12394:	add	x3, sp, #0x120
   12398:	stp	x3, x3, [sp, #80]
   1239c:	str	x2, [sp, #96]
   123a0:	mov	x1, x19
   123a4:	bl	ae00 <fputs_unlocked@plt>
   123a8:	ldp	x0, x1, [x19, #40]
   123ac:	cmp	x0, x1
   123b0:	b.cs	12498 <argp_error@@Base+0x178>  // b.hs, b.nlast
   123b4:	add	x1, x0, #0x1
   123b8:	str	x1, [x19, #40]
   123bc:	mov	w1, #0x3a                  	// #58
   123c0:	strb	w1, [x0]
   123c4:	ldp	x0, x1, [x19, #40]
   123c8:	cmp	x0, x1
   123cc:	b.cs	124a8 <argp_error@@Base+0x188>  // b.hs, b.nlast
   123d0:	add	x1, x0, #0x1
   123d4:	str	x1, [x19, #40]
   123d8:	mov	w1, #0x20                  	// #32
   123dc:	strb	w1, [x0]
   123e0:	ldp	x6, x7, [sp, #80]
   123e4:	mov	x1, x21
   123e8:	ldp	x4, x5, [sp, #96]
   123ec:	add	x2, sp, #0x30
   123f0:	mov	x0, x19
   123f4:	stp	x6, x7, [sp, #48]
   123f8:	stp	x4, x5, [sp, #64]
   123fc:	bl	ae80 <vfprintf@plt>
   12400:	ldp	x0, x1, [x19, #40]
   12404:	cmp	x0, x1
   12408:	b.cs	12488 <argp_error@@Base+0x168>  // b.hs, b.nlast
   1240c:	add	x1, x0, #0x1
   12410:	str	x1, [x19, #40]
   12414:	mov	w1, #0xa                   	// #10
   12418:	strb	w1, [x0]
   1241c:	mov	x1, x19
   12420:	mov	w2, #0x104                 	// #260
   12424:	mov	x0, x20
   12428:	bl	ad90 <argp_state_help@plt>
   1242c:	mov	x0, x19
   12430:	bl	a620 <funlockfile@plt>
   12434:	ldp	x19, x20, [sp, #16]
   12438:	ldr	x21, [sp, #32]
   1243c:	ldp	x29, x30, [sp], #288
   12440:	ret
   12444:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   12448:	ldr	x0, [x0, #3816]
   1244c:	ldr	x19, [x0]
   12450:	cbz	x19, 12434 <argp_error@@Base+0x114>
   12454:	mov	x0, x19
   12458:	bl	a3a0 <flockfile@plt>
   1245c:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   12460:	add	x3, sp, #0xf0
   12464:	add	x4, sp, #0x120
   12468:	mov	w2, #0xffffffd0            	// #-48
   1246c:	ldr	x0, [x0, #4008]
   12470:	mov	w1, #0xffffff80            	// #-128
   12474:	stp	x4, x4, [sp, #80]
   12478:	str	x3, [sp, #96]
   1247c:	stp	w2, w1, [sp, #104]
   12480:	ldr	x0, [x0]
   12484:	b	123a0 <argp_error@@Base+0x80>
   12488:	mov	x0, x19
   1248c:	mov	w1, #0xa                   	// #10
   12490:	bl	a940 <__overflow@plt>
   12494:	b	1241c <argp_error@@Base+0xfc>
   12498:	mov	x0, x19
   1249c:	mov	w1, #0x3a                  	// #58
   124a0:	bl	a940 <__overflow@plt>
   124a4:	b	123c4 <argp_error@@Base+0xa4>
   124a8:	mov	x0, x19
   124ac:	mov	w1, #0x20                  	// #32
   124b0:	bl	a940 <__overflow@plt>
   124b4:	b	123e0 <argp_error@@Base+0xc0>
   124b8:	stp	x29, x30, [sp, #-32]!
   124bc:	mov	x29, sp
   124c0:	ldr	x2, [x0]
   124c4:	stp	x19, x20, [sp, #16]
   124c8:	mov	x19, x1
   124cc:	ldr	x20, [x0, #32]
   124d0:	cbz	x2, 1256c <argp_error@@Base+0x24c>
   124d4:	ldr	x1, [x1, #16]
   124d8:	mov	w0, #0x0                   	// #0
   124dc:	add	x1, x1, #0x1
   124e0:	str	x1, [x19, #16]
   124e4:	nop
   124e8:	ldr	w3, [x2, #8]
   124ec:	add	x2, x2, #0x30
   124f0:	cbnz	w3, 124fc <argp_error@@Base+0x1dc>
   124f4:	ldur	x3, [x2, #-48]
   124f8:	cbz	x3, 12504 <argp_error@@Base+0x1e4>
   124fc:	add	w0, w0, #0x1
   12500:	b	124e8 <argp_error@@Base+0x1c8>
   12504:	ldur	x1, [x2, #-16]
   12508:	cbnz	x1, 124fc <argp_error@@Base+0x1dc>
   1250c:	ldur	w1, [x2, #-8]
   12510:	cbnz	w1, 124fc <argp_error@@Base+0x1dc>
   12514:	add	w2, w0, w0, lsl #1
   12518:	sxtw	x0, w0
   1251c:	ldr	q1, [x19]
   12520:	sxtw	x2, w2
   12524:	fmov	d0, x2
   12528:	mov	v0.d[1], x3
   1252c:	mov	v0.d[1], x0
   12530:	add	v0.2d, v0.2d, v1.2d
   12534:	str	q0, [x19]
   12538:	cbz	x20, 12560 <argp_error@@Base+0x240>
   1253c:	ldr	x0, [x20]
   12540:	cbz	x0, 12560 <argp_error@@Base+0x240>
   12544:	mov	x1, x19
   12548:	bl	124b8 <argp_error@@Base+0x198>
   1254c:	ldr	x1, [x19, #24]
   12550:	ldr	x0, [x20, #32]!
   12554:	add	x1, x1, #0x1
   12558:	str	x1, [x19, #24]
   1255c:	cbnz	x0, 12544 <argp_error@@Base+0x224>
   12560:	ldp	x19, x20, [sp, #16]
   12564:	ldp	x29, x30, [sp], #32
   12568:	ret
   1256c:	ldr	x0, [x0, #8]
   12570:	cbz	x0, 12538 <argp_error@@Base+0x218>
   12574:	ldr	x0, [x1, #16]
   12578:	add	x0, x0, #0x1
   1257c:	str	x0, [x1, #16]
   12580:	b	12538 <argp_error@@Base+0x218>
   12584:	nop
   12588:	cmp	w0, #0x56
   1258c:	b.eq	12598 <argp_error@@Base+0x278>  // b.none
   12590:	mov	w0, #0x7                   	// #7
   12594:	ret
   12598:	stp	x29, x30, [sp, #-32]!
   1259c:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   125a0:	mov	x29, sp
   125a4:	ldr	x0, [x0, #4056]
   125a8:	str	x19, [sp, #16]
   125ac:	mov	x19, x2
   125b0:	ldr	x2, [x0]
   125b4:	cbz	x2, 125e0 <argp_error@@Base+0x2c0>
   125b8:	ldr	x0, [x19, #80]
   125bc:	mov	x1, x19
   125c0:	blr	x2
   125c4:	ldr	w1, [x19, #28]
   125c8:	mov	w0, #0x0                   	// #0
   125cc:	tbz	w1, #5, 125dc <argp_error@@Base+0x2bc>
   125d0:	ldr	x19, [sp, #16]
   125d4:	ldp	x29, x30, [sp], #32
   125d8:	ret
   125dc:	bl	a350 <exit@plt>
   125e0:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   125e4:	ldr	x0, [x0, #3936]
   125e8:	ldr	x2, [x0]
   125ec:	cbz	x2, 12604 <argp_error@@Base+0x2e4>
   125f0:	ldr	x0, [x19, #80]
   125f4:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   125f8:	add	x1, x1, #0x4c0
   125fc:	bl	afa0 <fprintf@plt>
   12600:	b	125c4 <argp_error@@Base+0x2a4>
   12604:	mov	w2, #0x5                   	// #5
   12608:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   1260c:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   12610:	add	x1, x1, #0x4c8
   12614:	add	x0, x0, #0x120
   12618:	bl	ada0 <dcgettext@plt>
   1261c:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   12620:	mov	x2, x0
   12624:	add	x1, x1, #0x4f0
   12628:	mov	x0, x19
   1262c:	bl	ab80 <argp_error@plt>
   12630:	b	125c4 <argp_error@@Base+0x2a4>
   12634:	nop
   12638:	stp	x29, x30, [sp, #-32]!
   1263c:	cmn	w0, #0x2
   12640:	mov	x29, sp
   12644:	stp	x19, x20, [sp, #16]
   12648:	mov	x20, x1
   1264c:	mov	x19, x2
   12650:	b.eq	126b8 <argp_error@@Base+0x398>  // b.none
   12654:	cmn	w0, #0x1
   12658:	b.ge	1268c <argp_error@@Base+0x36c>  // b.tcont
   1265c:	cmn	w0, #0x4
   12660:	b.eq	126fc <argp_error@@Base+0x3dc>  // b.none
   12664:	cmn	w0, #0x3
   12668:	b.ne	1276c <argp_error@@Base+0x44c>  // b.any
   1266c:	ldr	x1, [x19, #80]
   12670:	mov	x0, x2
   12674:	mov	w2, #0x201                 	// #513
   12678:	bl	ad90 <argp_state_help@plt>
   1267c:	mov	w0, #0x0                   	// #0
   12680:	ldp	x19, x20, [sp, #16]
   12684:	ldp	x29, x30, [sp], #32
   12688:	ret
   1268c:	cmp	w0, #0x3f
   12690:	mov	w0, #0x7                   	// #7
   12694:	b.ne	12680 <argp_error@@Base+0x360>  // b.any
   12698:	ldr	x1, [x19, #80]
   1269c:	mov	x0, x2
   126a0:	mov	w2, #0x27a                 	// #634
   126a4:	bl	ad90 <argp_state_help@plt>
   126a8:	mov	w0, #0x0                   	// #0
   126ac:	ldp	x19, x20, [sp, #16]
   126b0:	ldp	x29, x30, [sp], #32
   126b4:	ret
   126b8:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   126bc:	mov	x0, x20
   126c0:	ldr	x1, [x1, #3768]
   126c4:	str	x20, [x1]
   126c8:	bl	a780 <last_component@plt>
   126cc:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   126d0:	ldr	w2, [x19, #28]
   126d4:	str	x0, [x19, #64]
   126d8:	ldr	x1, [x1, #4008]
   126dc:	and	w2, w2, #0x3
   126e0:	cmp	w2, #0x1
   126e4:	str	x0, [x1]
   126e8:	b.eq	1275c <argp_error@@Base+0x43c>  // b.none
   126ec:	mov	w0, #0x0                   	// #0
   126f0:	ldp	x19, x20, [sp, #16]
   126f4:	ldp	x29, x30, [sp], #32
   126f8:	ret
   126fc:	cmp	x1, #0x0
   12700:	adrp	x19, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
   12704:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   12708:	add	x0, x0, #0x4f8
   1270c:	csel	x0, x0, x1, eq  // eq = none
   12710:	mov	w2, #0xa                   	// #10
   12714:	mov	x1, #0x0                   	// #0
   12718:	bl	aa00 <strtol@plt>
   1271c:	str	w0, [x19, #1100]
   12720:	ldr	w0, [x19, #1100]
   12724:	sub	w1, w0, #0x1
   12728:	str	w1, [x19, #1100]
   1272c:	cmp	w0, #0x0
   12730:	b.le	126ec <argp_error@@Base+0x3cc>
   12734:	add	x19, x19, #0x44c
   12738:	mov	w0, #0x1                   	// #1
   1273c:	bl	a740 <sleep@plt>
   12740:	ldr	w0, [x19]
   12744:	sub	w1, w0, #0x1
   12748:	str	w1, [x19]
   1274c:	cmp	w0, #0x0
   12750:	b.gt	12738 <argp_error@@Base+0x418>
   12754:	mov	w0, #0x0                   	// #0
   12758:	b	126f0 <argp_error@@Base+0x3d0>
   1275c:	ldr	x1, [x19, #16]
   12760:	mov	w0, #0x0                   	// #0
   12764:	str	x20, [x1]
   12768:	b	12680 <argp_error@@Base+0x360>
   1276c:	mov	w0, #0x7                   	// #7
   12770:	b	12680 <argp_error@@Base+0x360>
   12774:	nop
   12778:	stp	x29, x30, [sp, #-128]!
   1277c:	mov	x29, sp
   12780:	stp	x19, x20, [sp, #16]
   12784:	mov	x19, x4
   12788:	ldr	x20, [x0]
   1278c:	stp	x0, x1, [sp, #104]
   12790:	ldr	x0, [x0, #32]
   12794:	stp	x23, x24, [sp, #48]
   12798:	mov	x24, x3
   1279c:	str	x0, [sp, #96]
   127a0:	str	w2, [sp, #124]
   127a4:	cbz	x20, 12a00 <argp_error@@Base+0x6e0>
   127a8:	ldr	x23, [x4, #8]
   127ac:	stp	x27, x28, [sp, #80]
   127b0:	mov	x28, x20
   127b4:	stp	x21, x22, [sp, #32]
   127b8:	stp	x25, x26, [sp, #64]
   127bc:	nop
   127c0:	ldr	w22, [x28, #8]
   127c4:	cbnz	w22, 127d0 <argp_error@@Base+0x4b0>
   127c8:	ldr	x0, [x28]
   127cc:	cbz	x0, 12918 <argp_error@@Base+0x5f8>
   127d0:	ldr	w1, [x28, #24]
   127d4:	tbz	w1, #2, 128f8 <argp_error@@Base+0x5d8>
   127d8:	ldr	w0, [x20, #24]
   127dc:	and	w21, w0, #0x8
   127e0:	tbnz	w0, #3, 128f0 <argp_error@@Base+0x5d0>
   127e4:	tbnz	w1, #3, 12854 <argp_error@@Base+0x534>
   127e8:	sub	w0, w22, #0x1
   127ec:	cmp	w0, #0xfe
   127f0:	b.hi	12854 <argp_error@@Base+0x534>  // b.pmore
   127f4:	bl	a9d0 <__ctype_b_loc@plt>
   127f8:	ldr	x0, [x0]
   127fc:	ldrh	w0, [x0, w22, sxtw #1]
   12800:	tbz	w0, #14, 12854 <argp_error@@Base+0x534>
   12804:	add	x0, x23, #0x1
   12808:	str	x0, [x19, #8]
   1280c:	strb	w22, [x23]
   12810:	ldr	x0, [x20, #16]
   12814:	cbz	x0, 12848 <argp_error@@Base+0x528>
   12818:	ldr	x0, [x19, #8]
   1281c:	add	x1, x0, #0x1
   12820:	str	x1, [x19, #8]
   12824:	mov	w1, #0x3a                  	// #58
   12828:	strb	w1, [x0]
   1282c:	ldr	w0, [x20, #24]
   12830:	tbz	w0, #0, 12848 <argp_error@@Base+0x528>
   12834:	ldr	x0, [x19, #8]
   12838:	add	x1, x0, #0x1
   1283c:	str	x1, [x19, #8]
   12840:	mov	w1, #0x3a                  	// #58
   12844:	strb	w1, [x0]
   12848:	ldr	x0, [x19, #8]
   1284c:	strb	wzr, [x0]
   12850:	ldr	x23, [x19, #8]
   12854:	ldr	x27, [x28]
   12858:	cbz	x27, 128f0 <argp_error@@Base+0x5d0>
   1285c:	ldr	x25, [x19]
   12860:	ldr	x22, [x25, #16]
   12864:	ldr	x0, [x22]
   12868:	cbz	x0, 12884 <argp_error@@Base+0x564>
   1286c:	mov	x26, x22
   12870:	mov	x1, x27
   12874:	bl	a9b0 <strcmp@plt>
   12878:	cbz	w0, 12904 <argp_error@@Base+0x5e4>
   1287c:	ldr	x0, [x26, #32]!
   12880:	cbnz	x0, 12870 <argp_error@@Base+0x550>
   12884:	ldr	x3, [x19, #16]
   12888:	ldr	x0, [x20, #16]
   1288c:	str	x27, [x3]
   12890:	cbz	x0, 128a0 <argp_error@@Base+0x580>
   12894:	ldr	w21, [x20, #24]
   12898:	and	w21, w21, #0x1
   1289c:	add	w21, w21, #0x1
   128a0:	str	w21, [x3, #8]
   128a4:	str	xzr, [x3, #16]
   128a8:	ldr	w0, [x28, #8]
   128ac:	cbnz	w0, 128b4 <argp_error@@Base+0x594>
   128b0:	ldr	w0, [x20, #8]
   128b4:	and	w1, w0, #0xffffff
   128b8:	mov	x2, #0x8e39                	// #36409
   128bc:	ldr	x0, [x25, #80]
   128c0:	movk	x2, #0x38e3, lsl #16
   128c4:	movk	x2, #0xe38e, lsl #32
   128c8:	add	x4, x3, #0x20
   128cc:	sub	x0, x24, x0
   128d0:	movk	x2, #0x8e38, lsl #48
   128d4:	asr	x0, x0, #3
   128d8:	mul	x0, x0, x2
   128dc:	add	w0, w0, #0x1
   128e0:	add	w0, w1, w0, lsl #24
   128e4:	str	w0, [x3, #24]
   128e8:	str	x4, [x19, #16]
   128ec:	str	xzr, [x3, #32]
   128f0:	add	x28, x28, #0x30
   128f4:	b	127c0 <argp_error@@Base+0x4a0>
   128f8:	mov	w0, w1
   128fc:	mov	x20, x28
   12900:	b	127dc <argp_error@@Base+0x4bc>
   12904:	sub	x22, x26, x22
   12908:	asr	x22, x22, #5
   1290c:	tbnz	w22, #31, 12884 <argp_error@@Base+0x564>
   12910:	add	x28, x28, #0x30
   12914:	b	127c0 <argp_error@@Base+0x4a0>
   12918:	ldr	x0, [x28, #32]
   1291c:	cbnz	x0, 127d0 <argp_error@@Base+0x4b0>
   12920:	ldr	w0, [x28, #40]
   12924:	cbnz	w0, 127d0 <argp_error@@Base+0x4b0>
   12928:	ldr	x0, [sp, #104]
   1292c:	ldp	x21, x22, [sp, #32]
   12930:	ldp	x25, x26, [sp, #64]
   12934:	ldp	x27, x28, [sp, #80]
   12938:	ldr	x0, [x0, #8]
   1293c:	str	x0, [x24]
   12940:	ldr	x0, [sp, #104]
   12944:	str	x0, [x24, #8]
   12948:	ldr	x0, [sp, #112]
   1294c:	str	x0, [x24, #32]
   12950:	ldr	w0, [sp, #124]
   12954:	str	w0, [x24, #40]
   12958:	ldr	x0, [sp, #96]
   1295c:	str	x23, [x24, #16]
   12960:	str	wzr, [x24, #24]
   12964:	stp	xzr, xzr, [x24, #48]
   12968:	str	xzr, [x24, #64]
   1296c:	cbz	x0, 129ac <argp_error@@Base+0x68c>
   12970:	ldr	x0, [x0]
   12974:	cbz	x0, 12a1c <argp_error@@Base+0x6fc>
   12978:	mov	w0, #0x0                   	// #0
   1297c:	nop
   12980:	add	w2, w0, #0x1
   12984:	ldr	x3, [sp, #96]
   12988:	ubfiz	x1, x2, #5, #32
   1298c:	mov	x0, x2
   12990:	ldr	x1, [x3, x1]
   12994:	cbnz	x1, 12980 <argp_error@@Base+0x660>
   12998:	lsl	x2, x2, #3
   1299c:	ldr	x0, [x19, #24]
   129a0:	str	x0, [x24, #56]
   129a4:	add	x2, x0, x2
   129a8:	str	x2, [x19, #24]
   129ac:	add	x3, x24, #0x48
   129b0:	ldr	x0, [sp, #96]
   129b4:	cbz	x0, 129ec <argp_error@@Base+0x6cc>
   129b8:	ldr	x0, [x0]
   129bc:	cbz	x0, 129ec <argp_error@@Base+0x6cc>
   129c0:	mov	w20, #0x0                   	// #0
   129c4:	mov	w2, w20
   129c8:	mov	x1, x24
   129cc:	mov	x4, x19
   129d0:	bl	12778 <argp_error@@Base+0x458>
   129d4:	ldr	x1, [sp, #96]
   129d8:	mov	x3, x0
   129dc:	add	w20, w20, #0x1
   129e0:	ldr	x0, [x1, #32]!
   129e4:	str	x1, [sp, #96]
   129e8:	cbnz	x0, 129c4 <argp_error@@Base+0x6a4>
   129ec:	mov	x0, x3
   129f0:	ldp	x19, x20, [sp, #16]
   129f4:	ldp	x23, x24, [sp, #48]
   129f8:	ldp	x29, x30, [sp], #128
   129fc:	ret
   12a00:	ldr	x0, [sp, #104]
   12a04:	ldr	x0, [x0, #8]
   12a08:	cbz	x0, 12a14 <argp_error@@Base+0x6f4>
   12a0c:	ldr	x23, [x4, #8]
   12a10:	b	1293c <argp_error@@Base+0x61c>
   12a14:	mov	x24, #0x0                   	// #0
   12a18:	b	129b0 <argp_error@@Base+0x690>
   12a1c:	mov	x2, #0x0                   	// #0
   12a20:	b	1299c <argp_error@@Base+0x67c>
   12a24:	nop

0000000000012a28 <argp_parse@@Base>:
   12a28:	stp	x29, x30, [sp, #-464]!
   12a2c:	mov	x29, sp
   12a30:	stp	x19, x20, [sp, #16]
   12a34:	mov	w20, w1
   12a38:	stp	x21, x22, [sp, #32]
   12a3c:	mov	x22, x2
   12a40:	stp	x23, x24, [sp, #48]
   12a44:	mov	w24, w3
   12a48:	stp	x25, x26, [sp, #64]
   12a4c:	mov	x26, x5
   12a50:	stp	x27, x28, [sp, #80]
   12a54:	mov	x28, x0
   12a58:	str	x4, [x29, #104]
   12a5c:	tbnz	w24, #0, 12a80 <argp_parse@@Base+0x58>
   12a60:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   12a64:	ldr	x0, [x0, #3768]
   12a68:	ldr	x1, [x0]
   12a6c:	cbz	x1, 13350 <argp_parse@@Base+0x928>
   12a70:	adrp	x19, 4c000 <vasnprintf@@Base+0x1b848>
   12a74:	ldr	x19, [x19, #4008]
   12a78:	ldr	x0, [x19]
   12a7c:	cbz	x0, 13368 <argp_parse@@Base+0x940>
   12a80:	ands	w0, w24, #0x4
   12a84:	str	w0, [x29, #100]
   12a88:	cset	x0, eq  // eq = none
   12a8c:	tbz	w24, #4, 12ac0 <argp_parse@@Base+0x98>
   12a90:	stp	x0, xzr, [x29, #120]
   12a94:	stp	xzr, xzr, [x29, #136]
   12a98:	stp	xzr, xzr, [x29, #184]
   12a9c:	stp	xzr, xzr, [x29, #200]
   12aa0:	stp	xzr, xzr, [x29, #216]
   12aa4:	str	xzr, [x29, #232]
   12aa8:	cbnz	x28, 12b60 <argp_parse@@Base+0x138>
   12aac:	mov	x25, #0x48                  	// #72
   12ab0:	mov	x19, #0x68                  	// #104
   12ab4:	mov	x21, x25
   12ab8:	mov	x23, #0x0                   	// #0
   12abc:	b	12b90 <argp_parse@@Base+0x168>
   12ac0:	sub	sp, sp, #0x80
   12ac4:	mov	x1, sp
   12ac8:	sub	sp, sp, #0x40
   12acc:	mov	x2, sp
   12ad0:	mov	x3, x1
   12ad4:	stp	xzr, xzr, [x1]
   12ad8:	stp	xzr, xzr, [x2, #32]
   12adc:	stp	xzr, xzr, [x2]
   12ae0:	stp	xzr, xzr, [x1, #16]
   12ae4:	stp	xzr, xzr, [x2, #16]
   12ae8:	stp	xzr, xzr, [x1, #32]
   12aec:	str	x1, [x2, #32]
   12af0:	stp	xzr, xzr, [x1, #48]
   12af4:	str	xzr, [x2, #48]
   12af8:	stp	xzr, xzr, [x1, #64]
   12afc:	stp	xzr, xzr, [x1, #80]
   12b00:	stp	xzr, xzr, [x1, #96]
   12b04:	stp	xzr, xzr, [x1, #112]
   12b08:	cbz	x28, 12b14 <argp_parse@@Base+0xec>
   12b0c:	add	x3, x1, #0x20
   12b10:	str	x28, [x1]
   12b14:	adrp	x4, 4c000 <vasnprintf@@Base+0x1b848>
   12b18:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   12b1c:	add	x5, x1, #0x798
   12b20:	str	x5, [x3]
   12b24:	ldr	x4, [x4, #3936]
   12b28:	ldr	x4, [x4]
   12b2c:	cbz	x4, 135b4 <argp_parse@@Base+0xb8c>
   12b30:	add	x1, x1, #0x798
   12b34:	add	x4, x3, #0x40
   12b38:	add	x1, x1, #0x38
   12b3c:	str	x1, [x3, #32]
   12b40:	mov	x28, x2
   12b44:	str	xzr, [x4]
   12b48:	stp	x0, xzr, [x29, #120]
   12b4c:	stp	xzr, xzr, [x29, #136]
   12b50:	stp	xzr, xzr, [x29, #184]
   12b54:	stp	xzr, xzr, [x29, #200]
   12b58:	stp	xzr, xzr, [x29, #216]
   12b5c:	str	xzr, [x29, #232]
   12b60:	mov	x0, x28
   12b64:	add	x1, x29, #0x78
   12b68:	bl	124b8 <argp_error@@Base+0x198>
   12b6c:	ldp	x3, x2, [x29, #136]
   12b70:	ldp	x0, x19, [x29, #120]
   12b74:	add	x3, x3, #0x1
   12b78:	lsl	x23, x2, #3
   12b7c:	add	x3, x3, x3, lsl #3
   12b80:	add	x19, x19, #0x1
   12b84:	lsl	x21, x3, #3
   12b88:	add	x25, x23, x21
   12b8c:	add	x19, x25, x19, lsl #5
   12b90:	add	x0, x19, x0
   12b94:	add	x0, x0, #0x1
   12b98:	bl	a5f0 <malloc@plt>
   12b9c:	str	x0, [x29, #448]
   12ba0:	mov	x27, x0
   12ba4:	cbz	x0, 136d4 <argp_parse@@Base+0xcac>
   12ba8:	movi	v0.2s, #0x1
   12bac:	add	x1, x29, #0x200
   12bb0:	ldp	x6, x7, [x29, #200]
   12bb4:	add	x3, x0, x21
   12bb8:	ldp	x4, x5, [x29, #216]
   12bbc:	str	d0, [x29, #184]
   12bc0:	ldp	x8, x9, [x29, #184]
   12bc4:	stp	x8, x9, [x1, #-248]
   12bc8:	add	x25, x0, x25
   12bcc:	ldr	x12, [x29, #232]
   12bd0:	add	x8, x29, #0x210
   12bd4:	mov	x2, x23
   12bd8:	mov	x0, x3
   12bdc:	add	x23, x27, x19
   12be0:	add	x21, x29, #0xf0
   12be4:	mov	w1, #0x0                   	// #0
   12be8:	stp	x6, x7, [x8, #-248]
   12bec:	stp	x4, x5, [x8, #-232]
   12bf0:	stp	x23, x25, [x29, #248]
   12bf4:	stp	x12, x27, [x29, #312]
   12bf8:	str	x3, [x29, #336]
   12bfc:	bl	a6f0 <memset@plt>
   12c00:	stp	x21, x23, [x29, #152]
   12c04:	stp	x25, x0, [x29, #168]
   12c08:	tbnz	w24, #3, 12d48 <argp_parse@@Base+0x320>
   12c0c:	mov	x0, x23
   12c10:	ands	w1, w24, #0x4
   12c14:	cbz	w1, 12c28 <argp_parse@@Base+0x200>
   12c18:	add	x0, x23, #0x1
   12c1c:	mov	w1, #0x2b                  	// #43
   12c20:	strb	w1, [x23]
   12c24:	str	x0, [x29, #160]
   12c28:	ldr	x1, [x29, #168]
   12c2c:	strb	wzr, [x0]
   12c30:	str	xzr, [x1]
   12c34:	str	x28, [x29, #240]
   12c38:	cbz	x28, 12d6c <argp_parse@@Base+0x344>
   12c3c:	ldr	x3, [x29, #320]
   12c40:	add	x4, x29, #0x98
   12c44:	mov	w2, #0x0                   	// #0
   12c48:	mov	x1, #0x0                   	// #0
   12c4c:	mov	x0, x28
   12c50:	bl	12778 <argp_error@@Base+0x458>
   12c54:	str	x21, [x29, #440]
   12c58:	add	x4, x29, #0x210
   12c5c:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
   12c60:	adrp	x2, 4c000 <vasnprintf@@Base+0x1b848>
   12c64:	mov	w6, #0x1                   	// #1
   12c68:	ldr	x5, [x29, #240]
   12c6c:	stp	xzr, xzr, [x4, #-168]
   12c70:	mov	x1, x22
   12c74:	ldr	x4, [x3, #3816]
   12c78:	stp	xzr, xzr, [x21, #136]
   12c7c:	ldr	x3, [x2, #3872]
   12c80:	str	x0, [x29, #328]
   12c84:	ldr	x4, [x4]
   12c88:	str	w6, [x29, #344]
   12c8c:	ldr	x3, [x3]
   12c90:	stp	x4, x3, [x29, #424]
   12c94:	ldr	x2, [x29, #320]
   12c98:	stp	xzr, xzr, [x21, #152]
   12c9c:	stp	xzr, xzr, [x21, #168]
   12ca0:	cmp	x0, x2
   12ca4:	str	x5, [x29, #352]
   12ca8:	str	w20, [x29, #360]
   12cac:	str	x22, [x29, #368]
   12cb0:	str	w24, [x29, #380]
   12cb4:	b.ls	12dc4 <argp_parse@@Base+0x39c>  // b.plast
   12cb8:	mov	w23, #0x3                   	// #3
   12cbc:	add	x20, x2, #0x48
   12cc0:	add	x24, x21, #0x70
   12cc4:	movk	w23, #0x100, lsl #16
   12cc8:	str	x26, [x2, #48]
   12ccc:	nop
   12cd0:	ldur	x3, [x20, #-40]
   12cd4:	mov	x2, x24
   12cd8:	mov	w0, w23
   12cdc:	mov	x1, #0x0                   	// #0
   12ce0:	cbz	x3, 12cf4 <argp_parse@@Base+0x2cc>
   12ce4:	ldur	w4, [x20, #-32]
   12ce8:	ldr	x3, [x3, #56]
   12cec:	ldr	x3, [x3, x4, lsl #3]
   12cf0:	stur	x3, [x20, #-24]
   12cf4:	ldur	x3, [x20, #-72]
   12cf8:	cbz	x3, 12f84 <argp_parse@@Base+0x55c>
   12cfc:	ldur	x4, [x20, #-8]
   12d00:	str	x4, [x29, #408]
   12d04:	ldur	w4, [x20, #-48]
   12d08:	ldur	q0, [x20, #-24]
   12d0c:	str	w4, [x29, #384]
   12d10:	add	x4, x29, #0x210
   12d14:	stur	q0, [x4, #-136]
   12d18:	blr	x3
   12d1c:	mov	w19, w0
   12d20:	ldr	x1, [x29, #408]
   12d24:	stur	x1, [x20, #-8]
   12d28:	ldr	x3, [x29, #328]
   12d2c:	cmp	x3, x20
   12d30:	b.ls	131dc <argp_parse@@Base+0x7b4>  // b.plast
   12d34:	cmp	w0, #0x0
   12d38:	ccmp	w0, #0x7, #0x4, ne  // ne = any
   12d3c:	b.ne	12f60 <argp_parse@@Base+0x538>  // b.any
   12d40:	add	x20, x20, #0x48
   12d44:	b	12cd0 <argp_parse@@Base+0x2a8>
   12d48:	mov	w1, #0x2d                  	// #45
   12d4c:	add	x0, x23, #0x1
   12d50:	strb	w1, [x27, x19]
   12d54:	ldr	x1, [x29, #168]
   12d58:	str	x0, [x29, #160]
   12d5c:	strb	wzr, [x0]
   12d60:	str	xzr, [x1]
   12d64:	str	x28, [x29, #240]
   12d68:	cbnz	x28, 12c3c <argp_parse@@Base+0x214>
   12d6c:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
   12d70:	adrp	x2, 4c000 <vasnprintf@@Base+0x1b848>
   12d74:	add	x1, x29, #0x210
   12d78:	mov	w4, #0x1                   	// #1
   12d7c:	ldr	x3, [x3, #3816]
   12d80:	str	w4, [x29, #344]
   12d84:	ldr	x2, [x2, #3872]
   12d88:	stp	xzr, xzr, [x1, #-168]
   12d8c:	mov	x1, x22
   12d90:	stp	xzr, xzr, [x21, #136]
   12d94:	ldr	x2, [x2]
   12d98:	str	x21, [x29, #440]
   12d9c:	ldr	x3, [x3]
   12da0:	stp	x3, x2, [x29, #424]
   12da4:	ldr	x4, [x29, #320]
   12da8:	stp	xzr, xzr, [x21, #152]
   12dac:	stp	xzr, xzr, [x21, #168]
   12db0:	str	x4, [x29, #328]
   12db4:	str	xzr, [x29, #352]
   12db8:	str	w20, [x29, #360]
   12dbc:	str	x22, [x29, #368]
   12dc0:	str	w24, [x29, #380]
   12dc4:	tbz	w24, #1, 12fc4 <argp_parse@@Base+0x59c>
   12dc8:	str	wzr, [x29, #268]
   12dcc:	ldr	w19, [x29, #360]
   12dd0:	tbnz	w24, #0, 1333c <argp_parse@@Base+0x914>
   12dd4:	cmp	x22, x1
   12dd8:	b.eq	12fd8 <argp_parse@@Base+0x5b0>  // b.none
   12ddc:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   12de0:	ldr	x0, [x0, #4008]
   12de4:	ldr	x0, [x0]
   12de8:	str	x0, [x29, #416]
   12dec:	ldr	w2, [x29, #344]
   12df0:	mov	w24, #0x6                   	// #6
   12df4:	ldr	w28, [x29, #376]
   12df8:	mov	w0, w19
   12dfc:	add	x22, x21, #0x70
   12e00:	mov	w26, #0xffffffff            	// #-1
   12e04:	movk	w24, #0x100, lsl #16
   12e08:	ldr	w1, [x29, #388]
   12e0c:	cbz	w1, 12e1c <argp_parse@@Base+0x3f4>
   12e10:	cmp	w1, w28
   12e14:	b.le	12e20 <argp_parse@@Base+0x3f8>
   12e18:	str	wzr, [x29, #388]
   12e1c:	cbnz	w2, 1310c <argp_parse@@Base+0x6e4>
   12e20:	cmp	w28, w0
   12e24:	b.ge	13070 <argp_parse@@Base+0x648>  // b.tcont
   12e28:	ldr	w0, [x29, #380]
   12e2c:	tbnz	w0, #2, 131fc <argp_parse@@Base+0x7d4>
   12e30:	ldr	x0, [x29, #368]
   12e34:	ldr	x23, [x0, w28, sxtw #3]
   12e38:	str	x23, [x29, #280]
   12e3c:	ldp	x27, x3, [x29, #320]
   12e40:	str	w28, [x29, #376]
   12e44:	cmp	x27, x3
   12e48:	b.cs	13064 <argp_parse@@Base+0x63c>  // b.hs, b.nlast
   12e4c:	mov	w5, w28
   12e50:	mov	x20, x27
   12e54:	ldr	x4, [x20]
   12e58:	add	w6, w5, #0x1
   12e5c:	str	w6, [x29, #376]
   12e60:	mov	x2, x22
   12e64:	mov	x1, x23
   12e68:	mov	w0, #0x0                   	// #0
   12e6c:	cbz	x4, 13054 <argp_parse@@Base+0x62c>
   12e70:	ldr	x3, [x20, #64]
   12e74:	str	x3, [x29, #408]
   12e78:	ldr	w3, [x20, #24]
   12e7c:	ldr	q0, [x20, #48]
   12e80:	str	w3, [x29, #384]
   12e84:	add	x3, x29, #0x210
   12e88:	stur	q0, [x3, #-136]
   12e8c:	blr	x4
   12e90:	mov	w19, w0
   12e94:	ldr	x1, [x29, #408]
   12e98:	str	x1, [x20, #64]
   12e9c:	cmp	w0, #0x7
   12ea0:	b.eq	12fec <argp_parse@@Base+0x5c4>  // b.none
   12ea4:	add	x27, x20, #0x48
   12ea8:	cbnz	w0, 13378 <argp_parse@@Base+0x950>
   12eac:	ldr	w0, [x29, #360]
   12eb0:	ldr	w1, [x29, #376]
   12eb4:	cmp	w28, w1
   12eb8:	b.ge	13160 <argp_parse@@Base+0x738>  // b.tcont
   12ebc:	ldur	w3, [x27, #-48]
   12ec0:	sub	w4, w1, w28
   12ec4:	ldr	w2, [x29, #344]
   12ec8:	mov	w28, w1
   12ecc:	add	w1, w3, w4
   12ed0:	stur	w1, [x27, #-48]
   12ed4:	b	12e08 <argp_parse@@Base+0x3e0>
   12ed8:	cmp	w0, #0x7
   12edc:	b.eq	13298 <argp_parse@@Base+0x870>  // b.none
   12ee0:	ldr	x3, [x29, #328]
   12ee4:	sub	x20, x3, #0x48
   12ee8:	cmp	x20, x4
   12eec:	b.cc	12f4c <argp_parse@@Base+0x524>  // b.lo, b.ul, b.last
   12ef0:	mov	w22, #0x7                   	// #7
   12ef4:	add	x21, x21, #0x70
   12ef8:	movk	w22, #0x100, lsl #16
   12efc:	nop
   12f00:	ldr	x3, [x20]
   12f04:	mov	x2, x21
   12f08:	mov	w0, w22
   12f0c:	mov	x1, #0x0                   	// #0
   12f10:	cbz	x3, 13490 <argp_parse@@Base+0xa68>
   12f14:	ldr	x4, [x20, #64]
   12f18:	str	x4, [x29, #408]
   12f1c:	ldr	w4, [x20, #24]
   12f20:	sub	x20, x20, #0x48
   12f24:	ldur	q0, [x20, #120]
   12f28:	str	w4, [x29, #384]
   12f2c:	add	x4, x29, #0x210
   12f30:	stur	q0, [x4, #-136]
   12f34:	blr	x3
   12f38:	ldr	x0, [x29, #408]
   12f3c:	str	x0, [x20, #136]
   12f40:	ldr	x4, [x29, #320]
   12f44:	cmp	x20, x4
   12f48:	b.cs	12f00 <argp_parse@@Base+0x4d8>  // b.hs, b.nlast
   12f4c:	cmp	w19, #0x7
   12f50:	mov	w0, #0x16                  	// #22
   12f54:	csel	w19, w19, w0, ne  // ne = any
   12f58:	ldr	x0, [x29, #448]
   12f5c:	bl	aa50 <free@plt>
   12f60:	mov	sp, x29
   12f64:	mov	w0, w19
   12f68:	ldp	x19, x20, [sp, #16]
   12f6c:	ldp	x21, x22, [sp, #32]
   12f70:	ldp	x23, x24, [sp, #48]
   12f74:	ldp	x25, x26, [sp, #64]
   12f78:	ldp	x27, x28, [sp, #80]
   12f7c:	ldp	x29, x30, [sp], #464
   12f80:	ret
   12f84:	ldur	x3, [x20, #-64]
   12f88:	ldr	x3, [x3, #32]
   12f8c:	cbz	x3, 12fa8 <argp_parse@@Base+0x580>
   12f90:	ldr	x3, [x3]
   12f94:	cbz	x3, 12fa8 <argp_parse@@Base+0x580>
   12f98:	ldp	x4, x3, [x20, #-24]
   12f9c:	str	x4, [x3]
   12fa0:	ldur	x3, [x20, #-72]
   12fa4:	cbnz	x3, 12cfc <argp_parse@@Base+0x2d4>
   12fa8:	ldr	x3, [x29, #328]
   12fac:	cmp	x3, x20
   12fb0:	b.hi	12d40 <argp_parse@@Base+0x318>  // b.pmore
   12fb4:	ldr	w24, [x29, #380]
   12fb8:	ldr	x1, [x29, #368]
   12fbc:	nop
   12fc0:	tbnz	w24, #1, 12dc8 <argp_parse@@Base+0x3a0>
   12fc4:	mov	w0, #0x1                   	// #1
   12fc8:	str	w0, [x29, #268]
   12fcc:	ldr	w19, [x29, #360]
   12fd0:	cmp	x22, x1
   12fd4:	b.ne	12ddc <argp_parse@@Base+0x3b4>  // b.any
   12fd8:	ldr	x0, [x22]
   12fdc:	cbz	x0, 12ddc <argp_parse@@Base+0x3b4>
   12fe0:	bl	a780 <last_component@plt>
   12fe4:	str	x0, [x29, #416]
   12fe8:	b	12dec <argp_parse@@Base+0x3c4>
   12fec:	mov	x27, x20
   12ff0:	ldr	w5, [x29, #376]
   12ff4:	sub	w5, w5, #0x1
   12ff8:	ldr	x3, [x27], #72
   12ffc:	str	w5, [x29, #376]
   13000:	cbz	x3, 136dc <argp_parse@@Base+0xcb4>
   13004:	ldr	x0, [x20, #64]
   13008:	str	x0, [x29, #408]
   1300c:	add	x4, x29, #0x210
   13010:	ldr	w0, [x20, #24]
   13014:	ldr	q0, [x20, #48]
   13018:	str	w0, [x29, #384]
   1301c:	mov	x2, x22
   13020:	mov	w0, w24
   13024:	mov	x1, #0x0                   	// #0
   13028:	stur	q0, [x4, #-136]
   1302c:	blr	x3
   13030:	mov	w19, w0
   13034:	ldr	x3, [x29, #328]
   13038:	ldr	x0, [x29, #408]
   1303c:	str	x0, [x20, #64]
   13040:	cmp	x3, x27
   13044:	ccmp	w19, #0x7, #0x0, hi  // hi = pmore
   13048:	b.ne	136e8 <argp_parse@@Base+0xcc0>  // b.any
   1304c:	ldr	w5, [x29, #376]
   13050:	b	12e50 <argp_parse@@Base+0x428>
   13054:	add	x20, x20, #0x48
   13058:	str	w5, [x29, #376]
   1305c:	cmp	x20, x3
   13060:	b.cc	12e54 <argp_parse@@Base+0x42c>  // b.lo, b.ul, b.last
   13064:	ldr	w0, [x29, #360]
   13068:	ldr	w28, [x29, #376]
   1306c:	nop
   13070:	cmp	w28, w0
   13074:	b.ne	131fc <argp_parse@@Base+0x7d4>  // b.any
   13078:	ldp	x20, x3, [x29, #320]
   1307c:	mov	x4, x20
   13080:	cmp	x20, x3
   13084:	b.cs	136a4 <argp_parse@@Base+0xc7c>  // b.hs, b.nlast
   13088:	mov	w22, #0x2                   	// #2
   1308c:	add	x23, x21, #0x70
   13090:	mov	w19, #0x0                   	// #0
   13094:	movk	w22, #0x100, lsl #16
   13098:	b	130dc <argp_parse@@Base+0x6b4>
   1309c:	ldur	x3, [x20, #-8]
   130a0:	str	x3, [x29, #408]
   130a4:	add	x3, x29, #0x210
   130a8:	ldur	q0, [x20, #-24]
   130ac:	str	wzr, [x29, #384]
   130b0:	stur	q0, [x3, #-136]
   130b4:	blr	x4
   130b8:	mov	w19, w0
   130bc:	ldr	x1, [x29, #408]
   130c0:	stur	x1, [x20, #-8]
   130c4:	ldr	x3, [x29, #328]
   130c8:	cmp	x3, x20
   130cc:	b.ls	135cc <argp_parse@@Base+0xba4>  // b.plast
   130d0:	cmp	w19, #0x0
   130d4:	ccmp	w19, #0x7, #0x4, ne  // ne = any
   130d8:	b.ne	13650 <argp_parse@@Base+0xc28>  // b.any
   130dc:	ldr	w4, [x20, #24]
   130e0:	mov	x2, x23
   130e4:	mov	w0, w22
   130e8:	add	x20, x20, #0x48
   130ec:	mov	x1, #0x0                   	// #0
   130f0:	cbnz	w4, 130c8 <argp_parse@@Base+0x6a0>
   130f4:	ldur	x4, [x20, #-72]
   130f8:	cbnz	x4, 1309c <argp_parse@@Base+0x674>
   130fc:	cmp	x3, x20
   13100:	b.ls	136c0 <argp_parse@@Base+0xc98>  // b.plast
   13104:	mov	w19, #0x7                   	// #7
   13108:	b	130dc <argp_parse@@Base+0x6b4>
   1310c:	ldr	w4, [x29, #380]
   13110:	str	w28, [x29, #264]
   13114:	str	w26, [x29, #272]
   13118:	ldp	x2, x3, [x29, #248]
   1311c:	ldr	x1, [x29, #368]
   13120:	tbz	w4, #6, 13174 <argp_parse@@Base+0x74c>
   13124:	add	x5, x21, #0x18
   13128:	mov	x4, #0x0                   	// #0
   1312c:	bl	a910 <_getopt_long_only_r@plt>
   13130:	ldr	w28, [x29, #264]
   13134:	str	w28, [x29, #376]
   13138:	mov	w20, w0
   1313c:	cmn	w20, #0x1
   13140:	b.eq	13194 <argp_parse@@Base+0x76c>  // b.none
   13144:	cmp	w20, #0x3f
   13148:	b.eq	132b0 <argp_parse@@Base+0x888>  // b.none
   1314c:	cmp	w20, #0x1
   13150:	b.ne	134b4 <argp_parse@@Base+0xa8c>  // b.any
   13154:	sub	w28, w28, #0x1
   13158:	ldr	x23, [x29, #280]
   1315c:	b	12e3c <argp_parse@@Base+0x414>
   13160:	mov	w28, w1
   13164:	mov	w1, #0x1                   	// #1
   13168:	mov	w2, w1
   1316c:	str	w1, [x29, #344]
   13170:	b	12e08 <argp_parse@@Base+0x3e0>
   13174:	add	x5, x21, #0x18
   13178:	mov	x4, #0x0                   	// #0
   1317c:	bl	a9c0 <_getopt_long_r@plt>
   13180:	ldr	w28, [x29, #264]
   13184:	str	w28, [x29, #376]
   13188:	mov	w20, w0
   1318c:	cmn	w20, #0x1
   13190:	b.ne	13144 <argp_parse@@Base+0x71c>  // b.any
   13194:	str	wzr, [x29, #344]
   13198:	cmp	w28, #0x1
   1319c:	b.le	131f4 <argp_parse@@Base+0x7cc>
   131a0:	mov	x0, #0xfffffffffffffff8    	// #-8
   131a4:	ldr	x1, [x29, #368]
   131a8:	add	x0, x0, w28, sxtw #3
   131ac:	ldr	x0, [x1, x0]
   131b0:	ldrb	w1, [x0]
   131b4:	cmp	w1, #0x2d
   131b8:	b.ne	131f4 <argp_parse@@Base+0x7cc>  // b.any
   131bc:	ldrb	w1, [x0, #1]
   131c0:	cmp	w1, #0x2d
   131c4:	b.ne	131f4 <argp_parse@@Base+0x7cc>  // b.any
   131c8:	ldrb	w0, [x0, #2]
   131cc:	cbnz	w0, 131f4 <argp_parse@@Base+0x7cc>
   131d0:	ldr	w0, [x29, #360]
   131d4:	str	w28, [x29, #388]
   131d8:	b	12e20 <argp_parse@@Base+0x3f8>
   131dc:	cmp	w0, #0x0
   131e0:	ccmp	w0, #0x7, #0x4, ne  // ne = any
   131e4:	b.ne	12f60 <argp_parse@@Base+0x538>  // b.any
   131e8:	ldr	w24, [x29, #380]
   131ec:	ldr	x1, [x29, #368]
   131f0:	b	12fc0 <argp_parse@@Base+0x598>
   131f4:	ldr	w0, [x29, #360]
   131f8:	b	12e20 <argp_parse@@Base+0x3f8>
   131fc:	ldr	x0, [x29, #104]
   13200:	cbz	x0, 1340c <argp_parse@@Base+0x9e4>
   13204:	ldp	x4, x3, [x29, #320]
   13208:	str	w28, [x0]
   1320c:	sub	x20, x3, #0x48
   13210:	cmp	x20, x4
   13214:	b.cc	136b8 <argp_parse@@Base+0xc90>  // b.lo, b.ul, b.last
   13218:	mov	w22, #0x4                   	// #4
   1321c:	add	x23, x21, #0x70
   13220:	movk	w22, #0x100, lsl #16
   13224:	ldr	x3, [x20], #-72
   13228:	mov	x2, x23
   1322c:	mov	w0, w22
   13230:	mov	x1, #0x0                   	// #0
   13234:	cbz	x3, 13290 <argp_parse@@Base+0x868>
   13238:	ldr	x4, [x20, #136]
   1323c:	str	x4, [x29, #408]
   13240:	ldr	w4, [x20, #96]
   13244:	ldur	q0, [x20, #120]
   13248:	str	w4, [x29, #384]
   1324c:	add	x4, x29, #0x210
   13250:	stur	q0, [x4, #-136]
   13254:	blr	x3
   13258:	mov	w19, w0
   1325c:	ldr	x1, [x29, #408]
   13260:	str	x1, [x20, #136]
   13264:	ldr	x4, [x29, #320]
   13268:	cmp	x4, x20
   1326c:	b.hi	12ed8 <argp_parse@@Base+0x4b0>  // b.pmore
   13270:	cmp	w0, #0x0
   13274:	ccmp	w0, #0x7, #0x4, ne  // ne = any
   13278:	b.ne	12ee0 <argp_parse@@Base+0x4b8>  // b.any
   1327c:	ldr	x3, [x20], #-72
   13280:	mov	x2, x23
   13284:	mov	w0, w22
   13288:	mov	x1, #0x0                   	// #0
   1328c:	cbnz	x3, 13238 <argp_parse@@Base+0x810>
   13290:	cmp	x4, x20
   13294:	b.ls	13224 <argp_parse@@Base+0x7fc>  // b.plast
   13298:	ldr	x20, [x29, #328]
   1329c:	mov	w19, #0x0                   	// #0
   132a0:	sub	x20, x20, #0x48
   132a4:	cmp	x20, x4
   132a8:	b.cs	12ef0 <argp_parse@@Base+0x4c8>  // b.hs, b.nlast
   132ac:	b	12f58 <argp_parse@@Base+0x530>
   132b0:	ldr	w0, [x29, #272]
   132b4:	cmn	w0, #0x1
   132b8:	b.ne	13380 <argp_parse@@Base+0x958>  // b.any
   132bc:	ldr	x0, [x29, #248]
   132c0:	mov	w1, w20
   132c4:	bl	ab60 <strchr@plt>
   132c8:	cbz	x0, 13450 <argp_parse@@Base+0xa28>
   132cc:	ldp	x23, x2, [x29, #320]
   132d0:	cmp	x23, x2
   132d4:	b.cc	132e8 <argp_parse@@Base+0x8c0>  // b.lo, b.ul, b.last
   132d8:	b	13450 <argp_parse@@Base+0xa28>
   132dc:	add	x23, x23, #0x48
   132e0:	cmp	x23, x2
   132e4:	b.cs	13450 <argp_parse@@Base+0xa28>  // b.hs, b.nlast
   132e8:	ldr	x1, [x23, #16]
   132ec:	cmp	x0, x1
   132f0:	b.cs	132dc <argp_parse@@Base+0x8b4>  // b.hs, b.nlast
   132f4:	ldr	x3, [x23]
   132f8:	cbz	x3, 13450 <argp_parse@@Base+0xa28>
   132fc:	ldr	x0, [x23, #64]
   13300:	mov	x2, x22
   13304:	ldr	w4, [x23, #24]
   13308:	mov	w27, #0x0                   	// #0
   1330c:	str	x0, [x29, #408]
   13310:	mov	w0, w20
   13314:	ldr	x1, [x29, #280]
   13318:	ldr	q0, [x23, #48]
   1331c:	str	w4, [x29, #384]
   13320:	add	x4, x29, #0x210
   13324:	stur	q0, [x4, #-136]
   13328:	blr	x3
   1332c:	mov	w19, w0
   13330:	ldr	x1, [x29, #408]
   13334:	str	x1, [x23, #64]
   13338:	b	13524 <argp_parse@@Base+0xafc>
   1333c:	sub	x1, x1, #0x8
   13340:	add	w19, w19, #0x1
   13344:	str	w19, [x29, #360]
   13348:	str	x1, [x29, #368]
   1334c:	b	12dd4 <argp_parse@@Base+0x3ac>
   13350:	adrp	x19, 4c000 <vasnprintf@@Base+0x1b848>
   13354:	ldr	x1, [x2]
   13358:	str	x1, [x0]
   1335c:	ldr	x19, [x19, #4008]
   13360:	ldr	x0, [x19]
   13364:	cbnz	x0, 12a80 <argp_parse@@Base+0x58>
   13368:	ldr	x0, [x22]
   1336c:	bl	a780 <last_component@plt>
   13370:	str	x0, [x19]
   13374:	b	12a80 <argp_parse@@Base+0x58>
   13378:	cmp	w19, #0x7
   1337c:	b.ne	13398 <argp_parse@@Base+0x970>  // b.any
   13380:	ldr	x19, [x29, #424]
   13384:	mov	x1, x19
   13388:	mov	w19, #0x7                   	// #7
   1338c:	add	x0, x21, #0x70
   13390:	mov	w2, #0x104                 	// #260
   13394:	bl	ad90 <argp_state_help@plt>
   13398:	ldr	x3, [x29, #328]
   1339c:	ldr	x20, [x29, #320]
   133a0:	cmp	x3, x20
   133a4:	mov	x4, x20
   133a8:	b.ls	12ee4 <argp_parse@@Base+0x4bc>  // b.plast
   133ac:	mov	w22, #0x5                   	// #5
   133b0:	add	x23, x21, #0x70
   133b4:	movk	w22, #0x100, lsl #16
   133b8:	ldr	x4, [x20]
   133bc:	mov	x2, x23
   133c0:	mov	w0, w22
   133c4:	mov	x1, #0x0                   	// #0
   133c8:	cbz	x4, 134a0 <argp_parse@@Base+0xa78>
   133cc:	ldr	x3, [x20, #64]
   133d0:	str	x3, [x29, #408]
   133d4:	ldr	w3, [x20, #24]
   133d8:	add	x20, x20, #0x48
   133dc:	ldur	q0, [x20, #-24]
   133e0:	str	w3, [x29, #384]
   133e4:	add	x3, x29, #0x210
   133e8:	stur	q0, [x3, #-136]
   133ec:	blr	x4
   133f0:	ldr	x0, [x29, #408]
   133f4:	stur	x0, [x20, #-8]
   133f8:	ldr	x3, [x29, #328]
   133fc:	cmp	x20, x3
   13400:	b.cc	133b8 <argp_parse@@Base+0x990>  // b.lo, b.ul, b.last
   13404:	ldr	x4, [x29, #320]
   13408:	b	12ee4 <argp_parse@@Base+0x4bc>
   1340c:	ldr	w0, [x29, #380]
   13410:	ldr	x19, [x29, #424]
   13414:	tbnz	w0, #1, 13384 <argp_parse@@Base+0x95c>
   13418:	cbz	x19, 13384 <argp_parse@@Base+0x95c>
   1341c:	mov	w2, #0x5                   	// #5
   13420:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   13424:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   13428:	add	x1, x1, #0x520
   1342c:	add	x0, x0, #0x120
   13430:	bl	ada0 <dcgettext@plt>
   13434:	ldr	x2, [x29, #416]
   13438:	mov	x1, x0
   1343c:	mov	x0, x19
   13440:	bl	afa0 <fprintf@plt>
   13444:	ldr	x19, [x29, #424]
   13448:	b	13384 <argp_parse@@Base+0x95c>
   1344c:	cbnz	w27, 13540 <argp_parse@@Base+0xb18>
   13450:	mov	w2, #0x5                   	// #5
   13454:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   13458:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   1345c:	add	x1, x1, #0x600
   13460:	add	x0, x0, #0x120
   13464:	bl	ada0 <dcgettext@plt>
   13468:	mov	w2, w20
   1346c:	mov	x3, x0
   13470:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   13474:	add	x0, x21, #0x70
   13478:	add	x1, x1, #0x508
   1347c:	bl	ab80 <argp_error@plt>
   13480:	add	w0, w20, #0x1
   13484:	and	w0, w0, #0xfffffffd
   13488:	cbnz	w0, 13380 <argp_parse@@Base+0x958>
   1348c:	b	13064 <argp_parse@@Base+0x63c>
   13490:	sub	x20, x20, #0x48
   13494:	cmp	x20, x4
   13498:	b.cs	12f00 <argp_parse@@Base+0x4d8>  // b.hs, b.nlast
   1349c:	b	12f4c <argp_parse@@Base+0x524>
   134a0:	add	x20, x20, #0x48
   134a4:	cmp	x20, x3
   134a8:	b.cc	133b8 <argp_parse@@Base+0x990>  // b.lo, b.ul, b.last
   134ac:	ldr	x4, [x29, #320]
   134b0:	b	12ee4 <argp_parse@@Base+0x4bc>
   134b4:	cmp	wzr, w20, asr #24
   134b8:	asr	w27, w20, #24
   134bc:	b.eq	132bc <argp_parse@@Base+0x894>  // b.none
   134c0:	mov	x0, #0xffffffffffffffb8    	// #-72
   134c4:	mov	w1, #0x48                  	// #72
   134c8:	ldr	x3, [x29, #320]
   134cc:	smaddl	x1, w27, w1, x0
   134d0:	ands	w2, w20, #0x800000
   134d4:	and	w0, w20, #0xffffff
   134d8:	add	x23, x3, x1
   134dc:	mov	w4, #0xff000000            	// #-16777216
   134e0:	csel	w2, w2, w4, eq  // eq = none
   134e4:	ldr	x3, [x3, x1]
   134e8:	orr	w0, w0, w2
   134ec:	cbz	x3, 13540 <argp_parse@@Base+0xb18>
   134f0:	ldr	x1, [x23, #64]
   134f4:	mov	x2, x22
   134f8:	ldr	w4, [x23, #24]
   134fc:	str	x1, [x29, #408]
   13500:	ldr	x1, [x29, #280]
   13504:	ldr	q0, [x23, #48]
   13508:	str	w4, [x29, #384]
   1350c:	add	x4, x29, #0x210
   13510:	stur	q0, [x4, #-136]
   13514:	blr	x3
   13518:	mov	w19, w0
   1351c:	ldr	x0, [x29, #408]
   13520:	str	x0, [x23, #64]
   13524:	cmp	w19, #0x7
   13528:	b.eq	1344c <argp_parse@@Base+0xa24>  // b.none
   1352c:	cbnz	w19, 13378 <argp_parse@@Base+0x950>
   13530:	ldr	w2, [x29, #344]
   13534:	ldr	w0, [x29, #360]
   13538:	ldr	w28, [x29, #376]
   1353c:	b	12e08 <argp_parse@@Base+0x3e0>
   13540:	ldr	x0, [x29, #256]
   13544:	ldr	w1, [x0, #24]
   13548:	cmp	w20, w1
   1354c:	b.ne	13560 <argp_parse@@Base+0xb38>  // b.any
   13550:	b	1366c <argp_parse@@Base+0xc44>
   13554:	ldr	w1, [x0, #24]
   13558:	cmp	w20, w1
   1355c:	b.eq	1366c <argp_parse@@Base+0xc44>  // b.none
   13560:	ldr	x1, [x0]
   13564:	add	x0, x0, #0x20
   13568:	cbnz	x1, 13554 <argp_parse@@Base+0xb2c>
   1356c:	adrp	x19, 32000 <vasnprintf@@Base+0x1848>
   13570:	add	x19, x19, #0x500
   13574:	mov	w2, #0x5                   	// #5
   13578:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   1357c:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   13580:	add	x1, x1, #0x600
   13584:	add	x0, x0, #0x120
   13588:	bl	ada0 <dcgettext@plt>
   1358c:	mov	x2, x19
   13590:	mov	x3, x0
   13594:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   13598:	add	x0, x21, #0x70
   1359c:	add	x1, x1, #0x510
   135a0:	bl	ab80 <argp_error@plt>
   135a4:	add	w0, w20, #0x1
   135a8:	and	w0, w0, #0xfffffffd
   135ac:	cbnz	w0, 13380 <argp_parse@@Base+0x958>
   135b0:	b	13064 <argp_parse@@Base+0x63c>
   135b4:	adrp	x4, 4c000 <vasnprintf@@Base+0x1b848>
   135b8:	ldr	x4, [x4, #4056]
   135bc:	ldr	x4, [x4]
   135c0:	cbnz	x4, 12b30 <argp_parse@@Base+0x108>
   135c4:	add	x4, x3, #0x20
   135c8:	b	12b40 <argp_parse@@Base+0x118>
   135cc:	ldr	x4, [x29, #320]
   135d0:	sub	x20, x3, #0x48
   135d4:	cmp	x20, x4
   135d8:	b.cc	13698 <argp_parse@@Base+0xc70>  // b.lo, b.ul, b.last
   135dc:	cmp	w19, #0x0
   135e0:	ccmp	w19, #0x7, #0x4, ne  // ne = any
   135e4:	b.ne	13650 <argp_parse@@Base+0xc28>  // b.any
   135e8:	mov	w22, #0x1                   	// #1
   135ec:	add	x23, x21, #0x70
   135f0:	movk	w22, #0x100, lsl #16
   135f4:	nop
   135f8:	ldr	x3, [x20], #-72
   135fc:	mov	x2, x23
   13600:	mov	w0, w22
   13604:	mov	x1, #0x0                   	// #0
   13608:	cbz	x3, 13678 <argp_parse@@Base+0xc50>
   1360c:	ldr	x4, [x20, #136]
   13610:	str	x4, [x29, #408]
   13614:	ldr	w4, [x20, #96]
   13618:	ldur	q0, [x20, #120]
   1361c:	str	w4, [x29, #384]
   13620:	add	x4, x29, #0x210
   13624:	stur	q0, [x4, #-136]
   13628:	blr	x3
   1362c:	mov	w19, w0
   13630:	ldr	x1, [x29, #408]
   13634:	str	x1, [x20, #136]
   13638:	ldr	x4, [x29, #320]
   1363c:	cmp	x4, x20
   13640:	b.hi	13698 <argp_parse@@Base+0xc70>  // b.pmore
   13644:	cmp	w0, #0x0
   13648:	ccmp	w0, #0x7, #0x4, ne  // ne = any
   1364c:	b.eq	135f8 <argp_parse@@Base+0xbd0>  // b.none
   13650:	ldr	x1, [x29, #104]
   13654:	cbz	x1, 13660 <argp_parse@@Base+0xc38>
   13658:	ldr	w0, [x29, #376]
   1365c:	str	w0, [x1]
   13660:	cbnz	w19, 13378 <argp_parse@@Base+0x950>
   13664:	ldp	x4, x3, [x29, #320]
   13668:	b	1320c <argp_parse@@Base+0x7e4>
   1366c:	ldr	x19, [x0]
   13670:	cbnz	x19, 13574 <argp_parse@@Base+0xb4c>
   13674:	b	1356c <argp_parse@@Base+0xb44>
   13678:	cmp	x4, x20
   1367c:	b.ls	135f8 <argp_parse@@Base+0xbd0>  // b.plast
   13680:	ldr	x3, [x29, #328]
   13684:	ldr	x1, [x29, #104]
   13688:	cbz	x1, 1320c <argp_parse@@Base+0x7e4>
   1368c:	ldr	w0, [x29, #376]
   13690:	str	w0, [x1]
   13694:	b	1320c <argp_parse@@Base+0x7e4>
   13698:	cmp	w19, #0x7
   1369c:	b.eq	13680 <argp_parse@@Base+0xc58>  // b.none
   136a0:	b	13650 <argp_parse@@Base+0xc28>
   136a4:	sub	x20, x3, #0x48
   136a8:	cmp	x4, x20
   136ac:	b.ls	135e8 <argp_parse@@Base+0xbc0>  // b.plast
   136b0:	ldr	x1, [x29, #104]
   136b4:	cbnz	x1, 1368c <argp_parse@@Base+0xc64>
   136b8:	mov	w19, #0x0                   	// #0
   136bc:	b	12f58 <argp_parse@@Base+0x530>
   136c0:	ldr	x4, [x29, #320]
   136c4:	sub	x20, x3, #0x48
   136c8:	cmp	x4, x20
   136cc:	b.ls	135e8 <argp_parse@@Base+0xbc0>  // b.plast
   136d0:	b	13684 <argp_parse@@Base+0xc5c>
   136d4:	mov	w19, #0xc                   	// #12
   136d8:	b	12f60 <argp_parse@@Base+0x538>
   136dc:	mov	x20, x27
   136e0:	ldr	x3, [x29, #328]
   136e4:	b	1305c <argp_parse@@Base+0x634>
   136e8:	cbnz	w19, 136fc <argp_parse@@Base+0xcd4>
   136ec:	ldr	w1, [x29, #360]
   136f0:	str	w1, [x29, #376]
   136f4:	mov	w0, w1
   136f8:	b	12eb4 <argp_parse@@Base+0x48c>
   136fc:	cmp	w19, #0x7
   13700:	b.eq	13064 <argp_parse@@Base+0x63c>  // b.none
   13704:	b	1339c <argp_parse@@Base+0x974>

0000000000013708 <_argp_input@@Base>:
   13708:	cbz	x1, 13740 <_argp_input@@Base+0x38>
   1370c:	ldr	x2, [x1, #88]
   13710:	ldp	x1, x3, [x2, #80]
   13714:	cmp	x1, x3
   13718:	b.cc	1372c <_argp_input@@Base+0x24>  // b.lo, b.ul, b.last
   1371c:	b	13740 <_argp_input@@Base+0x38>
   13720:	add	x1, x1, #0x48
   13724:	cmp	x1, x3
   13728:	b.cs	13740 <_argp_input@@Base+0x38>  // b.hs, b.nlast
   1372c:	ldr	x2, [x1, #8]
   13730:	cmp	x2, x0
   13734:	b.ne	13720 <_argp_input@@Base+0x18>  // b.any
   13738:	ldr	x0, [x1, #48]
   1373c:	ret
   13740:	mov	x0, #0x0                   	// #0
   13744:	ret

0000000000013748 <argp_usage@@Base>:
   13748:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   1374c:	mov	w2, #0x106                 	// #262
   13750:	ldr	x1, [x1, #3816]
   13754:	ldr	x1, [x1]
   13758:	b	ad90 <argp_state_help@plt>
   1375c:	nop

0000000000013760 <_option_is_short@@Base>:
   13760:	ldr	w2, [x0, #24]
   13764:	tbnz	w2, #3, 137a8 <_option_is_short@@Base+0x48>
   13768:	stp	x29, x30, [sp, #-32]!
   1376c:	mov	x1, x0
   13770:	and	w0, w2, #0x8
   13774:	mov	x29, sp
   13778:	str	x19, [sp, #16]
   1377c:	ldr	w19, [x1, #8]
   13780:	sub	w1, w19, #0x1
   13784:	cmp	w1, #0xfe
   13788:	b.hi	1379c <_option_is_short@@Base+0x3c>  // b.pmore
   1378c:	bl	a9d0 <__ctype_b_loc@plt>
   13790:	ldr	x0, [x0]
   13794:	ldrh	w0, [x0, w19, sxtw #1]
   13798:	ubfx	x0, x0, #14, #1
   1379c:	ldr	x19, [sp, #16]
   137a0:	ldp	x29, x30, [sp], #32
   137a4:	ret
   137a8:	mov	w0, #0x0                   	// #0
   137ac:	ret

00000000000137b0 <_option_is_end@@Base>:
   137b0:	mov	x1, x0
   137b4:	ldr	w0, [x0, #8]
   137b8:	cbnz	w0, 137c8 <_option_is_end@@Base+0x18>
   137bc:	ldr	x2, [x1]
   137c0:	cbz	x2, 137d0 <_option_is_end@@Base+0x20>
   137c4:	ret
   137c8:	mov	w0, #0x0                   	// #0
   137cc:	ret
   137d0:	ldr	x2, [x1, #32]
   137d4:	cbnz	x2, 137c4 <_option_is_end@@Base+0x14>
   137d8:	ldr	w0, [x1, #40]
   137dc:	cmp	w0, #0x0
   137e0:	cset	w0, eq  // eq = none
   137e4:	ret
   137e8:	ldr	x0, [x0, #48]
   137ec:	ret
   137f0:	ldp	x2, x1, [x0, #40]
   137f4:	stp	x0, x1, [x8, #8]
   137f8:	ldr	x0, [x0]
   137fc:	str	x0, [x8]
   13800:	str	x2, [x8, #24]
   13804:	add	x1, x2, x1, lsl #3
   13808:	str	x1, [x8, #32]
   1380c:	ret
   13810:	ret
   13814:	nop
   13818:	ldp	x5, x4, [x0, #8]
   1381c:	mov	x3, x0
   13820:	ldr	x0, [x5, #48]
   13824:	cmp	x4, x0
   13828:	b.eq	1388c <_option_is_end@@Base+0xdc>  // b.none
   1382c:	add	x6, x0, #0x1
   13830:	cmp	x4, x6
   13834:	b.ne	13894 <_option_is_end@@Base+0xe4>  // b.any
   13838:	ldr	x4, [x3, #24]
   1383c:	sub	x4, x4, #0x8
   13840:	stp	x0, x4, [x3, #16]
   13844:	ldr	x0, [x3, #32]
   13848:	sub	x0, x0, #0x8
   1384c:	str	x0, [x3, #32]
   13850:	cmp	x4, x0
   13854:	mov	w0, #0x0                   	// #0
   13858:	b.cs	13888 <_option_is_end@@Base+0xd8>  // b.hs, b.nlast
   1385c:	ldr	x0, [x4]
   13860:	str	x0, [x1]
   13864:	cbz	x2, 1387c <_option_is_end@@Base+0xcc>
   13868:	ldr	x0, [x5, #40]
   1386c:	sub	x0, x4, x0
   13870:	asr	x0, x0, #3
   13874:	add	x0, x0, #0x1
   13878:	str	x0, [x2]
   1387c:	add	x4, x4, #0x8
   13880:	mov	w0, #0x1                   	// #1
   13884:	str	x4, [x3, #24]
   13888:	ret
   1388c:	ldp	x4, x0, [x3, #24]
   13890:	b	13850 <_option_is_end@@Base+0xa0>
   13894:	stp	x29, x30, [sp, #-16]!
   13898:	mov	x29, sp
   1389c:	bl	a900 <abort@plt>
   138a0:	cmp	x1, x2
   138a4:	b.hi	138d4 <_option_is_end@@Base+0x124>  // b.pmore
   138a8:	ldr	x3, [x0, #48]
   138ac:	cmp	x3, x2
   138b0:	b.cc	138d4 <_option_is_end@@Base+0x124>  // b.lo, b.ul, b.last
   138b4:	ldr	x4, [x0, #40]
   138b8:	stp	x0, x3, [x8, #8]
   138bc:	ldr	x0, [x0]
   138c0:	add	x1, x4, x1, lsl #3
   138c4:	add	x2, x4, x2, lsl #3
   138c8:	str	x0, [x8]
   138cc:	stp	x1, x2, [x8, #24]
   138d0:	ret
   138d4:	stp	x29, x30, [sp, #-16]!
   138d8:	mov	x29, sp
   138dc:	bl	a900 <abort@plt>
   138e0:	stp	x29, x30, [sp, #-48]!
   138e4:	mov	x29, sp
   138e8:	stp	x21, x22, [sp, #32]
   138ec:	ldr	x21, [x0, #48]
   138f0:	stp	x19, x20, [sp, #16]
   138f4:	cmp	x21, x1
   138f8:	b.ls	13960 <_option_is_end@@Base+0x1b0>  // b.plast
   138fc:	mov	x19, x1
   13900:	mov	x20, x0
   13904:	ldr	x1, [x0, #24]
   13908:	ldr	x22, [x0, #40]
   1390c:	cbz	x1, 13918 <_option_is_end@@Base+0x168>
   13910:	ldr	x0, [x22, x19, lsl #3]
   13914:	blr	x1
   13918:	add	x0, x19, #0x1
   1391c:	cmp	x21, x0
   13920:	b.ls	13944 <_option_is_end@@Base+0x194>  // b.plast
   13924:	mvn	x2, x19
   13928:	lsl	x1, x0, #3
   1392c:	add	x2, x2, x21
   13930:	sub	x0, x1, #0x8
   13934:	add	x0, x22, x0
   13938:	add	x1, x22, x1
   1393c:	lsl	x2, x2, #3
   13940:	bl	a2d0 <memmove@plt>
   13944:	sub	x21, x21, #0x1
   13948:	str	x21, [x20, #48]
   1394c:	mov	w0, #0x1                   	// #1
   13950:	ldp	x19, x20, [sp, #16]
   13954:	ldp	x21, x22, [sp, #32]
   13958:	ldp	x29, x30, [sp], #48
   1395c:	ret
   13960:	bl	a900 <abort@plt>
   13964:	nop
   13968:	stp	x29, x30, [sp, #-48]!
   1396c:	mov	x29, sp
   13970:	stp	x19, x20, [sp, #16]
   13974:	mov	x20, x0
   13978:	sub	x0, x1, #0x1
   1397c:	stp	x21, x22, [sp, #32]
   13980:	ldr	x21, [x20, #48]
   13984:	cmp	x21, x0
   13988:	b.ls	139e4 <_option_is_end@@Base+0x234>  // b.plast
   1398c:	mov	x19, x1
   13990:	ldr	x1, [x20, #24]
   13994:	ldr	x22, [x20, #40]
   13998:	cbz	x1, 139a4 <_option_is_end@@Base+0x1f4>
   1399c:	ldr	x0, [x22, x0, lsl #3]
   139a0:	blr	x1
   139a4:	cmp	x19, x21
   139a8:	b.cs	139c8 <_option_is_end@@Base+0x218>  // b.hs, b.nlast
   139ac:	lsl	x1, x19, #3
   139b0:	sub	x2, x21, x19
   139b4:	sub	x0, x1, #0x8
   139b8:	add	x1, x22, x1
   139bc:	lsl	x2, x2, #3
   139c0:	add	x0, x22, x0
   139c4:	bl	a2d0 <memmove@plt>
   139c8:	sub	x21, x21, #0x1
   139cc:	str	x21, [x20, #48]
   139d0:	mov	w0, #0x1                   	// #1
   139d4:	ldp	x19, x20, [sp, #16]
   139d8:	ldp	x21, x22, [sp, #32]
   139dc:	ldp	x29, x30, [sp], #48
   139e0:	ret
   139e4:	bl	a900 <abort@plt>
   139e8:	ldr	x3, [x0, #48]
   139ec:	cmp	x3, x1
   139f0:	b.ls	13a04 <_option_is_end@@Base+0x254>  // b.plast
   139f4:	ldr	x3, [x0, #40]
   139f8:	add	x0, x1, #0x1
   139fc:	str	x2, [x3, x1, lsl #3]
   13a00:	ret
   13a04:	stp	x29, x30, [sp, #-16]!
   13a08:	mov	x29, sp
   13a0c:	bl	a900 <abort@plt>
   13a10:	ldr	x2, [x0, #48]
   13a14:	cmp	x2, x1
   13a18:	b.ls	13a28 <_option_is_end@@Base+0x278>  // b.plast
   13a1c:	ldr	x0, [x0, #40]
   13a20:	ldr	x0, [x0, x1, lsl #3]
   13a24:	ret
   13a28:	stp	x29, x30, [sp, #-16]!
   13a2c:	mov	x29, sp
   13a30:	bl	a900 <abort@plt>
   13a34:	nop
   13a38:	ldr	x0, [x0, #48]
   13a3c:	sub	x1, x1, #0x1
   13a40:	cmp	x0, x1
   13a44:	b.ls	13a50 <_option_is_end@@Base+0x2a0>  // b.plast
   13a48:	mov	x0, x1
   13a4c:	ret
   13a50:	stp	x29, x30, [sp, #-16]!
   13a54:	mov	x29, sp
   13a58:	bl	a900 <abort@plt>
   13a5c:	nop
   13a60:	ldr	x0, [x0, #48]
   13a64:	sub	x2, x1, #0x1
   13a68:	cmp	x0, x2
   13a6c:	b.ls	13a7c <_option_is_end@@Base+0x2cc>  // b.plast
   13a70:	cmp	x1, x0
   13a74:	csinc	x0, xzr, x1, cs  // cs = hs, nlast
   13a78:	ret
   13a7c:	stp	x29, x30, [sp, #-16]!
   13a80:	mov	x29, sp
   13a84:	bl	a900 <abort@plt>
   13a88:	ldr	x3, [x0, #48]
   13a8c:	sub	x1, x1, #0x1
   13a90:	cmp	x3, x1
   13a94:	b.ls	13aa8 <_option_is_end@@Base+0x2f8>  // b.plast
   13a98:	ldr	x3, [x0, #40]
   13a9c:	mov	w0, #0x0                   	// #0
   13aa0:	str	x2, [x3, x1, lsl #3]
   13aa4:	ret
   13aa8:	stp	x29, x30, [sp, #-16]!
   13aac:	mov	x29, sp
   13ab0:	bl	a900 <abort@plt>
   13ab4:	nop
   13ab8:	ldr	x2, [x0, #48]
   13abc:	sub	x1, x1, #0x1
   13ac0:	cmp	x2, x1
   13ac4:	b.ls	13ad4 <_option_is_end@@Base+0x324>  // b.plast
   13ac8:	ldr	x0, [x0, #40]
   13acc:	ldr	x0, [x0, x1, lsl #3]
   13ad0:	ret
   13ad4:	stp	x29, x30, [sp, #-16]!
   13ad8:	mov	x29, sp
   13adc:	bl	a900 <abort@plt>
   13ae0:	stp	x29, x30, [sp, #-64]!
   13ae4:	mov	x29, sp
   13ae8:	stp	x21, x22, [sp, #32]
   13aec:	ldr	x21, [x0, #40]
   13af0:	stp	x19, x20, [sp, #16]
   13af4:	mov	x20, x0
   13af8:	cbz	x21, 13b3c <_option_is_end@@Base+0x38c>
   13afc:	ldr	x22, [x0, #24]
   13b00:	cbz	x22, 13b34 <_option_is_end@@Base+0x384>
   13b04:	str	x23, [sp, #48]
   13b08:	ldr	x23, [x0, #48]
   13b0c:	cbz	x23, 13b50 <_option_is_end@@Base+0x3a0>
   13b10:	mov	x19, #0x0                   	// #0
   13b14:	nop
   13b18:	ldr	x0, [x21, x19, lsl #3]
   13b1c:	add	x19, x19, #0x1
   13b20:	blr	x22
   13b24:	cmp	x23, x19
   13b28:	b.ne	13b18 <_option_is_end@@Base+0x368>  // b.any
   13b2c:	ldr	x21, [x20, #40]
   13b30:	ldr	x23, [sp, #48]
   13b34:	mov	x0, x21
   13b38:	bl	aa50 <free@plt>
   13b3c:	mov	x0, x20
   13b40:	ldp	x19, x20, [sp, #16]
   13b44:	ldp	x21, x22, [sp, #32]
   13b48:	ldp	x29, x30, [sp], #64
   13b4c:	b	aa50 <free@plt>
   13b50:	ldr	x23, [sp, #48]
   13b54:	b	13b34 <_option_is_end@@Base+0x384>
   13b58:	stp	x29, x30, [sp, #-64]!
   13b5c:	mov	x29, sp
   13b60:	stp	x19, x20, [sp, #16]
   13b64:	mov	x20, x2
   13b68:	mov	x19, x3
   13b6c:	stp	x21, x22, [sp, #32]
   13b70:	mov	x22, x0
   13b74:	mov	x21, x1
   13b78:	mov	x0, #0x40                  	// #64
   13b7c:	str	x23, [sp, #48]
   13b80:	and	w23, w4, #0xff
   13b84:	bl	a5f0 <malloc@plt>
   13b88:	cbz	x0, 13ba0 <_option_is_end@@Base+0x3f0>
   13b8c:	stp	x22, x21, [x0]
   13b90:	stp	x20, x19, [x0, #16]
   13b94:	strb	w23, [x0, #32]
   13b98:	stp	xzr, xzr, [x0, #40]
   13b9c:	str	xzr, [x0, #56]
   13ba0:	ldp	x19, x20, [sp, #16]
   13ba4:	ldp	x21, x22, [sp, #32]
   13ba8:	ldr	x23, [sp, #48]
   13bac:	ldp	x29, x30, [sp], #64
   13bb0:	ret
   13bb4:	nop
   13bb8:	stp	x29, x30, [sp, #-80]!
   13bbc:	mov	x29, sp
   13bc0:	stp	x19, x20, [sp, #16]
   13bc4:	mov	x20, x5
   13bc8:	stp	x21, x22, [sp, #32]
   13bcc:	mov	x22, x2
   13bd0:	mov	x21, x6
   13bd4:	stp	x23, x24, [sp, #48]
   13bd8:	mov	x24, x0
   13bdc:	mov	x23, x1
   13be0:	mov	x0, #0x40                  	// #64
   13be4:	stp	x25, x26, [sp, #64]
   13be8:	mov	x25, x3
   13bec:	and	w26, w4, #0xff
   13bf0:	bl	a5f0 <malloc@plt>
   13bf4:	mov	x19, x0
   13bf8:	cbz	x0, 13c40 <_option_is_end@@Base+0x490>
   13bfc:	stp	x24, x23, [x0]
   13c00:	stp	x22, x25, [x0, #16]
   13c04:	strb	w26, [x0, #32]
   13c08:	cbz	x20, 13c5c <_option_is_end@@Base+0x4ac>
   13c0c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   13c10:	cmp	x20, x0
   13c14:	b.hi	13c84 <_option_is_end@@Base+0x4d4>  // b.pmore
   13c18:	lsl	x22, x20, #3
   13c1c:	mov	x0, x22
   13c20:	bl	a5f0 <malloc@plt>
   13c24:	str	x0, [x19, #40]
   13c28:	cbz	x0, 13c84 <_option_is_end@@Base+0x4d4>
   13c2c:	mov	x2, x22
   13c30:	mov	x1, x21
   13c34:	bl	a2c0 <memcpy@plt>
   13c38:	dup	v0.2d, x20
   13c3c:	str	q0, [x19, #48]
   13c40:	mov	x0, x19
   13c44:	ldp	x19, x20, [sp, #16]
   13c48:	ldp	x21, x22, [sp, #32]
   13c4c:	ldp	x23, x24, [sp, #48]
   13c50:	ldp	x25, x26, [sp, #64]
   13c54:	ldp	x29, x30, [sp], #80
   13c58:	ret
   13c5c:	dup	v0.2d, x20
   13c60:	str	xzr, [x0, #40]
   13c64:	mov	x0, x19
   13c68:	ldp	x21, x22, [sp, #32]
   13c6c:	str	q0, [x19, #48]
   13c70:	ldp	x19, x20, [sp, #16]
   13c74:	ldp	x23, x24, [sp, #48]
   13c78:	ldp	x25, x26, [sp, #64]
   13c7c:	ldp	x29, x30, [sp], #80
   13c80:	ret
   13c84:	mov	x0, x19
   13c88:	mov	x19, #0x0                   	// #0
   13c8c:	bl	aa50 <free@plt>
   13c90:	mov	x0, x19
   13c94:	ldp	x19, x20, [sp, #16]
   13c98:	ldp	x21, x22, [sp, #32]
   13c9c:	ldp	x23, x24, [sp, #48]
   13ca0:	ldp	x25, x26, [sp, #64]
   13ca4:	ldp	x29, x30, [sp], #80
   13ca8:	ret
   13cac:	nop
   13cb0:	stp	x29, x30, [sp, #-64]!
   13cb4:	mov	x29, sp
   13cb8:	stp	x19, x20, [sp, #16]
   13cbc:	mov	x20, x2
   13cc0:	stp	x21, x22, [sp, #32]
   13cc4:	mov	x22, x1
   13cc8:	mov	x21, x3
   13ccc:	stp	x23, x24, [sp, #48]
   13cd0:	mov	x24, x0
   13cd4:	mov	x23, x4
   13cd8:	b	13cec <_option_is_end@@Base+0x53c>
   13cdc:	b.eq	13d34 <_option_is_end@@Base+0x584>  // b.none
   13ce0:	mov	x21, x19
   13ce4:	cmp	x20, x21
   13ce8:	b.cs	13d18 <_option_is_end@@Base+0x568>  // b.hs, b.nlast
   13cec:	sub	x19, x21, x20
   13cf0:	mov	x1, x23
   13cf4:	ldr	x2, [x24, #40]
   13cf8:	add	x19, x20, x19, lsr #1
   13cfc:	ldr	x0, [x2, x19, lsl #3]
   13d00:	blr	x22
   13d04:	cmp	w0, #0x0
   13d08:	b.ge	13cdc <_option_is_end@@Base+0x52c>  // b.tcont
   13d0c:	add	x20, x19, #0x1
   13d10:	cmp	x20, x21
   13d14:	b.cc	13cec <_option_is_end@@Base+0x53c>  // b.lo, b.ul, b.last
   13d18:	mov	x0, #0xffffffffffffffff    	// #-1
   13d1c:	ldp	x19, x20, [sp, #16]
   13d20:	ldp	x21, x22, [sp, #32]
   13d24:	ldp	x23, x24, [sp, #48]
   13d28:	ldp	x29, x30, [sp], #64
   13d2c:	ret
   13d30:	add	x20, x21, #0x1
   13d34:	cmp	x20, x19
   13d38:	b.cs	13d74 <_option_is_end@@Base+0x5c4>  // b.hs, b.nlast
   13d3c:	sub	x21, x19, x20
   13d40:	mov	x1, x23
   13d44:	ldr	x0, [x24, #40]
   13d48:	add	x21, x20, x21, lsr #1
   13d4c:	ldr	x0, [x0, x21, lsl #3]
   13d50:	blr	x22
   13d54:	cmp	w0, #0x0
   13d58:	b.lt	13d30 <_option_is_end@@Base+0x580>  // b.tstop
   13d5c:	b.ne	13d8c <_option_is_end@@Base+0x5dc>  // b.any
   13d60:	cmp	x21, x20
   13d64:	b.eq	13d74 <_option_is_end@@Base+0x5c4>  // b.none
   13d68:	sub	x19, x21, #0x1
   13d6c:	cmp	x20, x19
   13d70:	b.cc	13d3c <_option_is_end@@Base+0x58c>  // b.lo, b.ul, b.last
   13d74:	mov	x0, x20
   13d78:	ldp	x19, x20, [sp, #16]
   13d7c:	ldp	x21, x22, [sp, #32]
   13d80:	ldp	x23, x24, [sp, #48]
   13d84:	ldp	x29, x30, [sp], #64
   13d88:	ret
   13d8c:	bl	a900 <abort@plt>
   13d90:	cmp	x2, x3
   13d94:	b.hi	13db8 <_option_is_end@@Base+0x608>  // b.pmore
   13d98:	ldr	x7, [x0, #48]
   13d9c:	cmp	x7, x3
   13da0:	b.cc	13db8 <_option_is_end@@Base+0x608>  // b.lo, b.ul, b.last
   13da4:	cmp	x2, x3
   13da8:	b.cs	13db0 <_option_is_end@@Base+0x600>  // b.hs, b.nlast
   13dac:	b	13cb0 <_option_is_end@@Base+0x500>
   13db0:	mov	x0, #0xffffffffffffffff    	// #-1
   13db4:	ret
   13db8:	stp	x29, x30, [sp, #-16]!
   13dbc:	mov	x29, sp
   13dc0:	bl	a900 <abort@plt>
   13dc4:	nop
   13dc8:	stp	x29, x30, [sp, #-64]!
   13dcc:	mov	x29, sp
   13dd0:	stp	x21, x22, [sp, #32]
   13dd4:	mov	x21, x0
   13dd8:	ldr	x0, [x0, #48]
   13ddc:	stp	x19, x20, [sp, #16]
   13de0:	cmp	x0, x2
   13de4:	ccmp	x1, x2, #0x2, cs  // cs = hs, nlast
   13de8:	b.hi	13ea0 <_option_is_end@@Base+0x6f0>  // b.pmore
   13dec:	mov	x20, x2
   13df0:	mov	x19, x1
   13df4:	cmp	x1, x2
   13df8:	b.cs	13e8c <_option_is_end@@Base+0x6dc>  // b.hs, b.nlast
   13dfc:	ldr	x1, [x21, #40]
   13e00:	str	x23, [sp, #48]
   13e04:	ldr	x23, [x21, #8]
   13e08:	mov	x22, x3
   13e0c:	cbz	x23, 13e70 <_option_is_end@@Base+0x6c0>
   13e10:	ldr	x1, [x1, x19, lsl #3]
   13e14:	mov	x0, x22
   13e18:	blr	x23
   13e1c:	tst	w0, #0xff
   13e20:	b.ne	13e4c <_option_is_end@@Base+0x69c>  // b.any
   13e24:	nop
   13e28:	add	x19, x19, #0x1
   13e2c:	cmp	x20, x19
   13e30:	b.eq	13e88 <_option_is_end@@Base+0x6d8>  // b.none
   13e34:	ldr	x1, [x21, #40]
   13e38:	mov	x0, x22
   13e3c:	ldr	x1, [x1, x19, lsl #3]
   13e40:	blr	x23
   13e44:	tst	w0, #0xff
   13e48:	b.eq	13e28 <_option_is_end@@Base+0x678>  // b.none
   13e4c:	ldr	x23, [sp, #48]
   13e50:	mov	x0, x19
   13e54:	ldp	x19, x20, [sp, #16]
   13e58:	ldp	x21, x22, [sp, #32]
   13e5c:	ldp	x29, x30, [sp], #64
   13e60:	ret
   13e64:	add	x19, x19, #0x1
   13e68:	cmp	x20, x19
   13e6c:	b.eq	13e88 <_option_is_end@@Base+0x6d8>  // b.none
   13e70:	ldr	x0, [x1, x19, lsl #3]
   13e74:	cmp	x22, x0
   13e78:	b.ne	13e64 <_option_is_end@@Base+0x6b4>  // b.any
   13e7c:	mov	x0, x19
   13e80:	ldr	x23, [sp, #48]
   13e84:	b	13e54 <_option_is_end@@Base+0x6a4>
   13e88:	ldr	x23, [sp, #48]
   13e8c:	mov	x0, #0xffffffffffffffff    	// #-1
   13e90:	ldp	x19, x20, [sp, #16]
   13e94:	ldp	x21, x22, [sp, #32]
   13e98:	ldp	x29, x30, [sp], #64
   13e9c:	ret
   13ea0:	str	x23, [sp, #48]
   13ea4:	bl	a900 <abort@plt>
   13ea8:	stp	x29, x30, [sp, #-64]!
   13eac:	mov	x29, sp
   13eb0:	stp	x21, x22, [sp, #32]
   13eb4:	mov	x21, x0
   13eb8:	sub	x0, x1, #0x1
   13ebc:	stp	x19, x20, [sp, #16]
   13ec0:	ldr	x19, [x21, #48]
   13ec4:	stp	x23, x24, [sp, #48]
   13ec8:	cmp	x19, x0
   13ecc:	b.ls	13f74 <_option_is_end@@Base+0x7c4>  // b.plast
   13ed0:	ldr	x0, [x21, #56]
   13ed4:	mov	x20, x1
   13ed8:	mov	x24, x2
   13edc:	cmp	x0, x19
   13ee0:	b.eq	13f34 <_option_is_end@@Base+0x784>  // b.none
   13ee4:	ldr	x23, [x21, #40]
   13ee8:	add	x22, x20, #0x1
   13eec:	cmp	x20, x19
   13ef0:	b.cs	13f10 <_option_is_end@@Base+0x760>  // b.hs, b.nlast
   13ef4:	lsl	x0, x22, #3
   13ef8:	sub	x2, x19, x20
   13efc:	sub	x1, x0, #0x8
   13f00:	add	x0, x23, x0
   13f04:	lsl	x2, x2, #3
   13f08:	add	x1, x23, x1
   13f0c:	bl	a2d0 <memmove@plt>
   13f10:	mov	x0, x22
   13f14:	str	x24, [x23, x20, lsl #3]
   13f18:	add	x19, x19, #0x1
   13f1c:	str	x19, [x21, #48]
   13f20:	ldp	x19, x20, [sp, #16]
   13f24:	ldp	x21, x22, [sp, #32]
   13f28:	ldp	x23, x24, [sp, #48]
   13f2c:	ldp	x29, x30, [sp], #64
   13f30:	ret
   13f34:	tbnz	x19, #63, 13f6c <_option_is_end@@Base+0x7bc>
   13f38:	lsl	x22, x19, #1
   13f3c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   13f40:	add	x22, x22, #0x1
   13f44:	cmp	x22, x0
   13f48:	b.hi	13f6c <_option_is_end@@Base+0x7bc>  // b.pmore
   13f4c:	ldr	x0, [x21, #40]
   13f50:	lsl	x1, x22, #3
   13f54:	bl	a7e0 <realloc@plt>
   13f58:	mov	x23, x0
   13f5c:	cbz	x0, 13f6c <_option_is_end@@Base+0x7bc>
   13f60:	str	x0, [x21, #40]
   13f64:	str	x22, [x21, #56]
   13f68:	b	13ee8 <_option_is_end@@Base+0x738>
   13f6c:	mov	x0, #0x0                   	// #0
   13f70:	b	13f20 <_option_is_end@@Base+0x770>
   13f74:	bl	a900 <abort@plt>
   13f78:	ldr	x3, [x0, #48]
   13f7c:	mov	x4, x2
   13f80:	cbz	x3, 13f8c <_option_is_end@@Base+0x7dc>
   13f84:	mov	x2, #0x0                   	// #0
   13f88:	b	13cb0 <_option_is_end@@Base+0x500>
   13f8c:	mov	x0, #0xffffffffffffffff    	// #-1
   13f90:	ret
   13f94:	nop
   13f98:	stp	x29, x30, [sp, #-16]!
   13f9c:	cmp	x2, x3
   13fa0:	mov	x29, sp
   13fa4:	b.hi	13fd4 <_option_is_end@@Base+0x824>  // b.pmore
   13fa8:	ldr	x7, [x0, #48]
   13fac:	cmp	x3, x7
   13fb0:	b.hi	13fd4 <_option_is_end@@Base+0x824>  // b.pmore
   13fb4:	cmp	x2, x3
   13fb8:	mov	x5, #0x0                   	// #0
   13fbc:	b.cs	13fc8 <_option_is_end@@Base+0x818>  // b.hs, b.nlast
   13fc0:	bl	13cb0 <_option_is_end@@Base+0x500>
   13fc4:	add	x5, x0, #0x1
   13fc8:	mov	x0, x5
   13fcc:	ldp	x29, x30, [sp], #16
   13fd0:	ret
   13fd4:	bl	a900 <abort@plt>
   13fd8:	ldr	x3, [x0, #48]
   13fdc:	cbz	x3, 14000 <_option_is_end@@Base+0x850>
   13fe0:	stp	x29, x30, [sp, #-16]!
   13fe4:	mov	x4, x2
   13fe8:	mov	x2, #0x0                   	// #0
   13fec:	mov	x29, sp
   13ff0:	bl	13cb0 <_option_is_end@@Base+0x500>
   13ff4:	add	x0, x0, #0x1
   13ff8:	ldp	x29, x30, [sp], #16
   13ffc:	ret
   14000:	mov	x0, #0x0                   	// #0
   14004:	ret
   14008:	stp	x29, x30, [sp, #-64]!
   1400c:	mov	x29, sp
   14010:	stp	x21, x22, [sp, #32]
   14014:	mov	x21, x0
   14018:	ldr	x0, [x0, #48]
   1401c:	stp	x19, x20, [sp, #16]
   14020:	cmp	x2, x0
   14024:	ccmp	x1, x2, #0x2, ls  // ls = plast
   14028:	b.hi	140e0 <_option_is_end@@Base+0x930>  // b.pmore
   1402c:	mov	x20, x2
   14030:	mov	x19, x1
   14034:	cmp	x1, x2
   14038:	b.cs	140cc <_option_is_end@@Base+0x91c>  // b.hs, b.nlast
   1403c:	ldr	x0, [x21, #40]
   14040:	str	x23, [sp, #48]
   14044:	ldr	x23, [x21, #8]
   14048:	mov	x22, x3
   1404c:	cbz	x23, 140ac <_option_is_end@@Base+0x8fc>
   14050:	ldr	x1, [x0, x19, lsl #3]
   14054:	mov	x0, x22
   14058:	add	x19, x19, #0x1
   1405c:	blr	x23
   14060:	tst	w0, #0xff
   14064:	b.ne	1408c <_option_is_end@@Base+0x8dc>  // b.any
   14068:	cmp	x20, x19
   1406c:	b.eq	140c8 <_option_is_end@@Base+0x918>  // b.none
   14070:	ldr	x0, [x21, #40]
   14074:	ldr	x1, [x0, x19, lsl #3]
   14078:	mov	x0, x22
   1407c:	add	x19, x19, #0x1
   14080:	blr	x23
   14084:	tst	w0, #0xff
   14088:	b.eq	14068 <_option_is_end@@Base+0x8b8>  // b.none
   1408c:	ldr	x23, [sp, #48]
   14090:	mov	x0, x19
   14094:	ldp	x19, x20, [sp, #16]
   14098:	ldp	x21, x22, [sp, #32]
   1409c:	ldp	x29, x30, [sp], #64
   140a0:	ret
   140a4:	cmp	x20, x19
   140a8:	b.eq	140c8 <_option_is_end@@Base+0x918>  // b.none
   140ac:	ldr	x1, [x0, x19, lsl #3]
   140b0:	add	x19, x19, #0x1
   140b4:	cmp	x22, x1
   140b8:	b.ne	140a4 <_option_is_end@@Base+0x8f4>  // b.any
   140bc:	mov	x0, x19
   140c0:	ldr	x23, [sp, #48]
   140c4:	b	14094 <_option_is_end@@Base+0x8e4>
   140c8:	ldr	x23, [sp, #48]
   140cc:	mov	x0, #0x0                   	// #0
   140d0:	ldp	x19, x20, [sp, #16]
   140d4:	ldp	x21, x22, [sp, #32]
   140d8:	ldp	x29, x30, [sp], #64
   140dc:	ret
   140e0:	str	x23, [sp, #48]
   140e4:	bl	a900 <abort@plt>
   140e8:	stp	x29, x30, [sp, #-64]!
   140ec:	mov	x29, sp
   140f0:	stp	x21, x22, [sp, #32]
   140f4:	ldr	x21, [x0, #48]
   140f8:	cbz	x21, 141f0 <_option_is_end@@Base+0xa40>
   140fc:	stp	x23, x24, [sp, #48]
   14100:	mov	x22, x1
   14104:	ldr	x24, [x0, #8]
   14108:	stp	x19, x20, [sp, #16]
   1410c:	mov	x20, x0
   14110:	mov	x19, #0x0                   	// #0
   14114:	ldr	x0, [x0, #40]
   14118:	cbz	x24, 141d4 <_option_is_end@@Base+0xa24>
   1411c:	ldr	x1, [x0, x19, lsl #3]
   14120:	lsl	x23, x19, #3
   14124:	mov	x0, x22
   14128:	blr	x24
   1412c:	tst	w0, #0xff
   14130:	b.ne	14160 <_option_is_end@@Base+0x9b0>  // b.any
   14134:	nop
   14138:	add	x19, x19, #0x1
   1413c:	cmp	x21, x19
   14140:	b.eq	141e8 <_option_is_end@@Base+0xa38>  // b.none
   14144:	ldr	x0, [x20, #40]
   14148:	lsl	x23, x19, #3
   1414c:	ldr	x1, [x0, x19, lsl #3]
   14150:	mov	x0, x22
   14154:	blr	x24
   14158:	tst	w0, #0xff
   1415c:	b.eq	14138 <_option_is_end@@Base+0x988>  // b.none
   14160:	ldr	x21, [x20, #48]
   14164:	cmp	x19, x21
   14168:	b.cs	14200 <_option_is_end@@Base+0xa50>  // b.hs, b.nlast
   1416c:	ldr	x1, [x20, #24]
   14170:	ldr	x22, [x20, #40]
   14174:	cbz	x1, 14180 <_option_is_end@@Base+0x9d0>
   14178:	ldr	x0, [x22, x23]
   1417c:	blr	x1
   14180:	add	x0, x19, #0x1
   14184:	cmp	x0, x21
   14188:	sub	x21, x21, #0x1
   1418c:	b.cs	141ac <_option_is_end@@Base+0x9fc>  // b.hs, b.nlast
   14190:	lsl	x1, x0, #3
   14194:	sub	x2, x21, x19
   14198:	sub	x0, x1, #0x8
   1419c:	add	x1, x22, x1
   141a0:	add	x0, x22, x0
   141a4:	lsl	x2, x2, #3
   141a8:	bl	a2d0 <memmove@plt>
   141ac:	ldp	x23, x24, [sp, #48]
   141b0:	str	x21, [x20, #48]
   141b4:	mov	w0, #0x1                   	// #1
   141b8:	ldp	x19, x20, [sp, #16]
   141bc:	ldp	x21, x22, [sp, #32]
   141c0:	ldp	x29, x30, [sp], #64
   141c4:	ret
   141c8:	add	x19, x19, #0x1
   141cc:	cmp	x21, x19
   141d0:	b.eq	141e8 <_option_is_end@@Base+0xa38>  // b.none
   141d4:	ldr	x1, [x0, x19, lsl #3]
   141d8:	lsl	x23, x19, #3
   141dc:	cmp	x22, x1
   141e0:	b.ne	141c8 <_option_is_end@@Base+0xa18>  // b.any
   141e4:	b	14164 <_option_is_end@@Base+0x9b4>
   141e8:	ldp	x19, x20, [sp, #16]
   141ec:	ldp	x23, x24, [sp, #48]
   141f0:	mov	w0, #0x0                   	// #0
   141f4:	ldp	x21, x22, [sp, #32]
   141f8:	ldp	x29, x30, [sp], #64
   141fc:	ret
   14200:	bl	a900 <abort@plt>
   14204:	nop
   14208:	ldr	x3, [x0, #48]
   1420c:	cbz	x3, 142b0 <_option_is_end@@Base+0xb00>
   14210:	stp	x29, x30, [sp, #-48]!
   14214:	mov	x4, x2
   14218:	mov	x2, #0x0                   	// #0
   1421c:	mov	x29, sp
   14220:	stp	x19, x20, [sp, #16]
   14224:	mov	x19, x0
   14228:	bl	13cb0 <_option_is_end@@Base+0x500>
   1422c:	mov	x20, x0
   14230:	cmn	x0, #0x1
   14234:	b.eq	142a0 <_option_is_end@@Base+0xaf0>  // b.none
   14238:	stp	x21, x22, [sp, #32]
   1423c:	ldr	x21, [x19, #48]
   14240:	cmp	x0, x21
   14244:	b.cs	142b8 <_option_is_end@@Base+0xb08>  // b.hs, b.nlast
   14248:	ldr	x1, [x19, #24]
   1424c:	ldr	x22, [x19, #40]
   14250:	cbz	x1, 1425c <_option_is_end@@Base+0xaac>
   14254:	ldr	x0, [x22, x0, lsl #3]
   14258:	blr	x1
   1425c:	add	x0, x20, #0x1
   14260:	cmp	x21, x0
   14264:	sub	x21, x21, #0x1
   14268:	b.ls	14288 <_option_is_end@@Base+0xad8>  // b.plast
   1426c:	lsl	x1, x0, #3
   14270:	sub	x2, x21, x20
   14274:	sub	x0, x1, #0x8
   14278:	add	x1, x22, x1
   1427c:	add	x0, x22, x0
   14280:	lsl	x2, x2, #3
   14284:	bl	a2d0 <memmove@plt>
   14288:	str	x21, [x19, #48]
   1428c:	mov	w0, #0x1                   	// #1
   14290:	ldp	x19, x20, [sp, #16]
   14294:	ldp	x21, x22, [sp, #32]
   14298:	ldp	x29, x30, [sp], #48
   1429c:	ret
   142a0:	mov	w0, #0x0                   	// #0
   142a4:	ldp	x19, x20, [sp, #16]
   142a8:	ldp	x29, x30, [sp], #48
   142ac:	ret
   142b0:	mov	w0, #0x0                   	// #0
   142b4:	ret
   142b8:	bl	a900 <abort@plt>
   142bc:	nop
   142c0:	stp	x29, x30, [sp, #-48]!
   142c4:	mov	x29, sp
   142c8:	stp	x19, x20, [sp, #16]
   142cc:	mov	x19, x0
   142d0:	ldp	x20, x0, [x0, #48]
   142d4:	stp	x21, x22, [sp, #32]
   142d8:	mov	x21, x1
   142dc:	cmp	x0, x20
   142e0:	b.eq	14308 <_option_is_end@@Base+0xb58>  // b.none
   142e4:	ldr	x0, [x19, #40]
   142e8:	add	x1, x20, #0x1
   142ec:	str	x21, [x0, x20, lsl #3]
   142f0:	mov	x0, x1
   142f4:	str	x1, [x19, #48]
   142f8:	ldp	x19, x20, [sp, #16]
   142fc:	ldp	x21, x22, [sp, #32]
   14300:	ldp	x29, x30, [sp], #48
   14304:	ret
   14308:	tbnz	x20, #63, 1433c <_option_is_end@@Base+0xb8c>
   1430c:	lsl	x22, x20, #1
   14310:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   14314:	add	x22, x22, #0x1
   14318:	cmp	x22, x0
   1431c:	b.hi	1433c <_option_is_end@@Base+0xb8c>  // b.pmore
   14320:	ldr	x0, [x19, #40]
   14324:	lsl	x1, x22, #3
   14328:	bl	a7e0 <realloc@plt>
   1432c:	cbz	x0, 1433c <_option_is_end@@Base+0xb8c>
   14330:	str	x0, [x19, #40]
   14334:	str	x22, [x19, #56]
   14338:	b	142e8 <_option_is_end@@Base+0xb38>
   1433c:	mov	x0, #0x0                   	// #0
   14340:	b	142f8 <_option_is_end@@Base+0xb48>
   14344:	nop
   14348:	stp	x29, x30, [sp, #-80]!
   1434c:	mov	x29, sp
   14350:	stp	x19, x20, [sp, #16]
   14354:	mov	x19, x0
   14358:	str	x0, [sp, #72]
   1435c:	ldr	x20, [x0, #48]
   14360:	stp	x21, x22, [sp, #32]
   14364:	mov	x22, x1
   14368:	ldr	x0, [x0, #56]
   1436c:	cmp	x0, x20
   14370:	b.eq	143ac <_option_is_end@@Base+0xbfc>  // b.none
   14374:	ldr	x21, [x19, #40]
   14378:	cbz	x20, 1438c <_option_is_end@@Base+0xbdc>
   1437c:	lsl	x2, x20, #3
   14380:	mov	x1, x21
   14384:	add	x0, x21, #0x8
   14388:	bl	a2d0 <memmove@plt>
   1438c:	str	x22, [x21]
   14390:	add	x20, x20, #0x1
   14394:	mov	x0, #0x1                   	// #1
   14398:	str	x20, [x19, #48]
   1439c:	ldp	x19, x20, [sp, #16]
   143a0:	ldp	x21, x22, [sp, #32]
   143a4:	ldp	x29, x30, [sp], #80
   143a8:	ret
   143ac:	tbnz	x20, #63, 143f0 <_option_is_end@@Base+0xc40>
   143b0:	str	x23, [sp, #48]
   143b4:	lsl	x23, x20, #1
   143b8:	add	x23, x23, #0x1
   143bc:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   143c0:	cmp	x23, x0
   143c4:	b.hi	143ec <_option_is_end@@Base+0xc3c>  // b.pmore
   143c8:	ldr	x0, [x19, #40]
   143cc:	lsl	x1, x23, #3
   143d0:	bl	a7e0 <realloc@plt>
   143d4:	mov	x21, x0
   143d8:	cbz	x0, 143ec <_option_is_end@@Base+0xc3c>
   143dc:	str	x0, [x19, #40]
   143e0:	str	x23, [x19, #56]
   143e4:	ldr	x23, [sp, #48]
   143e8:	b	14378 <_option_is_end@@Base+0xbc8>
   143ec:	ldr	x23, [sp, #48]
   143f0:	mov	x0, #0x0                   	// #0
   143f4:	b	1439c <_option_is_end@@Base+0xbec>
   143f8:	stp	x29, x30, [sp, #-64]!
   143fc:	mov	x29, sp
   14400:	stp	x21, x22, [sp, #32]
   14404:	mov	x22, x0
   14408:	ldr	x21, [x0, #48]
   1440c:	stp	x19, x20, [sp, #16]
   14410:	stp	x23, x24, [sp, #48]
   14414:	mov	x23, x2
   14418:	cbz	x21, 14514 <_option_is_end@@Base+0xd64>
   1441c:	mov	x24, x1
   14420:	mov	x20, #0x0                   	// #0
   14424:	b	14438 <_option_is_end@@Base+0xc88>
   14428:	b.eq	144cc <_option_is_end@@Base+0xd1c>  // b.none
   1442c:	mov	x21, x19
   14430:	cmp	x20, x21
   14434:	b.cs	14464 <_option_is_end@@Base+0xcb4>  // b.hs, b.nlast
   14438:	sub	x19, x21, x20
   1443c:	mov	x1, x23
   14440:	ldr	x3, [x22, #40]
   14444:	add	x19, x20, x19, lsr #1
   14448:	ldr	x0, [x3, x19, lsl #3]
   1444c:	blr	x24
   14450:	cmp	w0, #0x0
   14454:	b.ge	14428 <_option_is_end@@Base+0xc78>  // b.tcont
   14458:	add	x20, x19, #0x1
   1445c:	cmp	x20, x21
   14460:	b.cc	14438 <_option_is_end@@Base+0xc88>  // b.lo, b.ul, b.last
   14464:	ldr	x21, [x22, #48]
   14468:	cmp	x20, x21
   1446c:	b.hi	14530 <_option_is_end@@Base+0xd80>  // b.pmore
   14470:	ldr	x0, [x22, #56]
   14474:	cmp	x21, x0
   14478:	b.eq	144d4 <_option_is_end@@Base+0xd24>  // b.none
   1447c:	ldr	x24, [x22, #40]
   14480:	add	x19, x20, #0x1
   14484:	cmp	x21, x20
   14488:	b.ls	144a8 <_option_is_end@@Base+0xcf8>  // b.plast
   1448c:	lsl	x0, x19, #3
   14490:	sub	x2, x21, x20
   14494:	sub	x1, x0, #0x8
   14498:	add	x0, x24, x0
   1449c:	lsl	x2, x2, #3
   144a0:	add	x1, x24, x1
   144a4:	bl	a2d0 <memmove@plt>
   144a8:	mov	x0, x19
   144ac:	str	x23, [x24, x20, lsl #3]
   144b0:	add	x21, x21, #0x1
   144b4:	str	x21, [x22, #48]
   144b8:	ldp	x19, x20, [sp, #16]
   144bc:	ldp	x21, x22, [sp, #32]
   144c0:	ldp	x23, x24, [sp, #48]
   144c4:	ldp	x29, x30, [sp], #64
   144c8:	ret
   144cc:	mov	x20, x19
   144d0:	b	14464 <_option_is_end@@Base+0xcb4>
   144d4:	tbnz	x21, #63, 1450c <_option_is_end@@Base+0xd5c>
   144d8:	lsl	x19, x21, #1
   144dc:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   144e0:	add	x19, x19, #0x1
   144e4:	cmp	x19, x0
   144e8:	b.hi	1450c <_option_is_end@@Base+0xd5c>  // b.pmore
   144ec:	ldr	x0, [x22, #40]
   144f0:	lsl	x1, x19, #3
   144f4:	bl	a7e0 <realloc@plt>
   144f8:	mov	x24, x0
   144fc:	cbz	x0, 1450c <_option_is_end@@Base+0xd5c>
   14500:	str	x0, [x22, #40]
   14504:	str	x19, [x22, #56]
   14508:	b	14480 <_option_is_end@@Base+0xcd0>
   1450c:	mov	x0, #0x0                   	// #0
   14510:	b	144b8 <_option_is_end@@Base+0xd08>
   14514:	ldr	x20, [x0, #56]
   14518:	cbz	x20, 14524 <_option_is_end@@Base+0xd74>
   1451c:	mov	x20, #0x0                   	// #0
   14520:	b	1447c <_option_is_end@@Base+0xccc>
   14524:	mov	x21, x20
   14528:	mov	x19, #0x1                   	// #1
   1452c:	b	144ec <_option_is_end@@Base+0xd3c>
   14530:	bl	a900 <abort@plt>
   14534:	nop
   14538:	stp	x29, x30, [sp, #-64]!
   1453c:	mov	x29, sp
   14540:	stp	x19, x20, [sp, #16]
   14544:	ldr	x19, [x0, #48]
   14548:	stp	x21, x22, [sp, #32]
   1454c:	stp	x23, x24, [sp, #48]
   14550:	cmp	x19, x1
   14554:	b.cc	14600 <_option_is_end@@Base+0xe50>  // b.lo, b.ul, b.last
   14558:	mov	x21, x0
   1455c:	mov	x20, x1
   14560:	ldr	x0, [x0, #56]
   14564:	mov	x24, x2
   14568:	cmp	x0, x19
   1456c:	b.eq	145c0 <_option_is_end@@Base+0xe10>  // b.none
   14570:	ldr	x23, [x21, #40]
   14574:	add	x22, x20, #0x1
   14578:	cmp	x19, x20
   1457c:	b.ls	1459c <_option_is_end@@Base+0xdec>  // b.plast
   14580:	lsl	x0, x22, #3
   14584:	sub	x2, x19, x20
   14588:	sub	x1, x0, #0x8
   1458c:	add	x0, x23, x0
   14590:	lsl	x2, x2, #3
   14594:	add	x1, x23, x1
   14598:	bl	a2d0 <memmove@plt>
   1459c:	mov	x0, x22
   145a0:	str	x24, [x23, x20, lsl #3]
   145a4:	add	x19, x19, #0x1
   145a8:	str	x19, [x21, #48]
   145ac:	ldp	x19, x20, [sp, #16]
   145b0:	ldp	x21, x22, [sp, #32]
   145b4:	ldp	x23, x24, [sp, #48]
   145b8:	ldp	x29, x30, [sp], #64
   145bc:	ret
   145c0:	tbnz	x19, #63, 145f8 <_option_is_end@@Base+0xe48>
   145c4:	lsl	x22, x19, #1
   145c8:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   145cc:	add	x22, x22, #0x1
   145d0:	cmp	x22, x0
   145d4:	b.hi	145f8 <_option_is_end@@Base+0xe48>  // b.pmore
   145d8:	ldr	x0, [x21, #40]
   145dc:	lsl	x1, x22, #3
   145e0:	bl	a7e0 <realloc@plt>
   145e4:	mov	x23, x0
   145e8:	cbz	x0, 145f8 <_option_is_end@@Base+0xe48>
   145ec:	str	x0, [x21, #40]
   145f0:	str	x22, [x21, #56]
   145f4:	b	14574 <_option_is_end@@Base+0xdc4>
   145f8:	mov	x0, #0x0                   	// #0
   145fc:	b	145ac <_option_is_end@@Base+0xdfc>
   14600:	bl	a900 <abort@plt>
   14604:	nop
   14608:	stp	x29, x30, [sp, #-80]!
   1460c:	mov	x29, sp
   14610:	stp	x21, x22, [sp, #32]
   14614:	ldr	x21, [x0, #48]
   14618:	stp	x19, x20, [sp, #16]
   1461c:	stp	x23, x24, [sp, #48]
   14620:	sub	x24, x1, #0x1
   14624:	cmp	x21, x24
   14628:	b.ls	146d8 <_option_is_end@@Base+0xf28>  // b.plast
   1462c:	mov	x20, x0
   14630:	mov	x19, x1
   14634:	ldr	x0, [x0, #56]
   14638:	mov	x23, x2
   1463c:	cmp	x0, x21
   14640:	b.eq	1468c <_option_is_end@@Base+0xedc>  // b.none
   14644:	ldr	x22, [x20, #40]
   14648:	sub	x2, x21, x19
   1464c:	lsl	x0, x19, #3
   14650:	add	x2, x2, #0x1
   14654:	sub	x1, x0, #0x8
   14658:	add	x0, x22, x0
   1465c:	add	x1, x22, x1
   14660:	lsl	x2, x2, #3
   14664:	bl	a2d0 <memmove@plt>
   14668:	str	x23, [x22, x24, lsl #3]
   1466c:	mov	x0, x19
   14670:	add	x21, x21, #0x1
   14674:	str	x21, [x20, #48]
   14678:	ldp	x19, x20, [sp, #16]
   1467c:	ldp	x21, x22, [sp, #32]
   14680:	ldp	x23, x24, [sp, #48]
   14684:	ldp	x29, x30, [sp], #80
   14688:	ret
   1468c:	tbnz	x21, #63, 146d0 <_option_is_end@@Base+0xf20>
   14690:	str	x25, [sp, #64]
   14694:	lsl	x25, x21, #1
   14698:	add	x25, x25, #0x1
   1469c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   146a0:	cmp	x25, x0
   146a4:	b.hi	146cc <_option_is_end@@Base+0xf1c>  // b.pmore
   146a8:	ldr	x0, [x20, #40]
   146ac:	lsl	x1, x25, #3
   146b0:	bl	a7e0 <realloc@plt>
   146b4:	mov	x22, x0
   146b8:	cbz	x0, 146cc <_option_is_end@@Base+0xf1c>
   146bc:	str	x0, [x20, #40]
   146c0:	str	x25, [x20, #56]
   146c4:	ldr	x25, [sp, #64]
   146c8:	b	14648 <_option_is_end@@Base+0xe98>
   146cc:	ldr	x25, [sp, #64]
   146d0:	mov	x0, #0x0                   	// #0
   146d4:	b	14678 <_option_is_end@@Base+0xec8>
   146d8:	str	x25, [sp, #64]
   146dc:	bl	a900 <abort@plt>

00000000000146e0 <rotl64@@Base>:
   146e0:	neg	w1, w1
   146e4:	ror	x0, x0, x1
   146e8:	ret
   146ec:	nop

00000000000146f0 <rotr64@@Base>:
   146f0:	ror	x0, x0, x1
   146f4:	ret

00000000000146f8 <rotl32@@Base>:
   146f8:	neg	w1, w1
   146fc:	ror	w0, w0, w1
   14700:	ret
   14704:	nop

0000000000014708 <rotr32@@Base>:
   14708:	ror	w0, w0, w1
   1470c:	ret

0000000000014710 <rotl_sz@@Base>:
   14710:	neg	w1, w1
   14714:	ror	x0, x0, x1
   14718:	ret
   1471c:	nop

0000000000014720 <rotr_sz@@Base>:
   14720:	ror	x0, x0, x1
   14724:	ret

0000000000014728 <rotl16@@Base>:
   14728:	neg	w2, w1
   1472c:	and	w0, w0, #0xffff
   14730:	and	w2, w2, #0xf
   14734:	lsl	w1, w0, w1
   14738:	lsr	w0, w0, w2
   1473c:	orr	w0, w1, w0
   14740:	ret
   14744:	nop

0000000000014748 <rotr16@@Base>:
   14748:	neg	w2, w1
   1474c:	and	w0, w0, #0xffff
   14750:	and	w2, w2, #0xf
   14754:	lsr	w1, w0, w1
   14758:	lsl	w0, w0, w2
   1475c:	orr	w0, w1, w0
   14760:	ret
   14764:	nop

0000000000014768 <rotl8@@Base>:
   14768:	neg	w2, w1
   1476c:	and	w0, w0, #0xff
   14770:	and	w2, w2, #0x7
   14774:	lsl	w1, w0, w1
   14778:	lsr	w0, w0, w2
   1477c:	orr	w0, w1, w0
   14780:	ret
   14784:	nop

0000000000014788 <rotr8@@Base>:
   14788:	neg	w2, w1
   1478c:	and	w0, w0, #0xff
   14790:	and	w2, w2, #0x7
   14794:	lsr	w1, w0, w1
   14798:	lsl	w0, w0, w2
   1479c:	orr	w0, w1, w0
   147a0:	ret
   147a4:	nop

00000000000147a8 <canonicalize_filename_mode@@Base>:
   147a8:	stp	x29, x30, [sp, #-288]!
   147ac:	mov	x29, sp
   147b0:	stp	x19, x20, [sp, #16]
   147b4:	stp	x21, x22, [sp, #32]
   147b8:	and	w21, w1, #0x3
   147bc:	stp	x27, x28, [sp, #80]
   147c0:	mov	x27, x0
   147c4:	sub	w0, w21, #0x1
   147c8:	tst	w0, w21
   147cc:	b.ne	14bf4 <canonicalize_filename_mode@@Base+0x44c>  // b.any
   147d0:	cbz	x27, 14bf4 <canonicalize_filename_mode@@Base+0x44c>
   147d4:	stp	x23, x24, [sp, #48]
   147d8:	ldrb	w23, [x27]
   147dc:	cbz	w23, 14c8c <canonicalize_filename_mode@@Base+0x4e4>
   147e0:	mov	w22, w1
   147e4:	cmp	w23, #0x2f
   147e8:	b.eq	14a18 <canonicalize_filename_mode@@Base+0x270>  // b.none
   147ec:	bl	b000 <xgetcwd@plt>
   147f0:	mov	x19, x0
   147f4:	cbz	x0, 14cd4 <canonicalize_filename_mode@@Base+0x52c>
   147f8:	bl	a340 <strlen@plt>
   147fc:	mov	x28, x0
   14800:	cmp	x0, #0xfff
   14804:	b.ls	14cb8 <canonicalize_filename_mode@@Base+0x510>  // b.plast
   14808:	add	x28, x19, x0
   1480c:	mov	x20, x28
   14810:	ldrb	w3, [x27]
   14814:	cbz	w3, 14d80 <canonicalize_filename_mode@@Base+0x5d8>
   14818:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   1481c:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   14820:	cmp	w21, #0x2
   14824:	ubfx	x23, x22, #2, #1
   14828:	ldr	x1, [x1, #3848]
   1482c:	csel	w23, w23, wzr, eq  // eq = none
   14830:	ldr	x0, [x0, #3928]
   14834:	stp	x25, x26, [sp, #64]
   14838:	add	x25, sp, #0xa0
   1483c:	and	w2, w22, #0x4
   14840:	str	xzr, [sp, #96]
   14844:	str	w2, [sp, #104]
   14848:	stp	x27, xzr, [sp, #112]
   1484c:	stp	xzr, x1, [sp, #128]
   14850:	str	x0, [sp, #144]
   14854:	nop
   14858:	mov	w0, w3
   1485c:	cmp	w3, #0x2f
   14860:	b.ne	14878 <canonicalize_filename_mode@@Base+0xd0>  // b.any
   14864:	nop
   14868:	ldrb	w0, [x27, #1]!
   1486c:	cmp	w0, #0x2f
   14870:	b.eq	14868 <canonicalize_filename_mode@@Base+0xc0>  // b.none
   14874:	cbz	w0, 14988 <canonicalize_filename_mode@@Base+0x1e0>
   14878:	mov	x22, x27
   1487c:	nop
   14880:	mov	x26, x22
   14884:	ldrb	w3, [x22, #1]!
   14888:	cmp	w3, #0x2f
   1488c:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   14890:	b.ne	14880 <canonicalize_filename_mode@@Base+0xd8>  // b.any
   14894:	cmp	x22, x27
   14898:	b.eq	14988 <canonicalize_filename_mode@@Base+0x1e0>  // b.none
   1489c:	sub	x24, x22, x27
   148a0:	cmp	x24, #0x1
   148a4:	b.eq	14a60 <canonicalize_filename_mode@@Base+0x2b8>  // b.none
   148a8:	cmp	w0, #0x2e
   148ac:	ccmp	x24, #0x2, #0x0, eq  // eq = none
   148b0:	b.eq	14bac <canonicalize_filename_mode@@Base+0x404>  // b.none
   148b4:	ldurb	w0, [x28, #-1]
   148b8:	cmp	w0, #0x2f
   148bc:	b.eq	148d0 <canonicalize_filename_mode@@Base+0x128>  // b.none
   148c0:	mov	x6, x28
   148c4:	mov	w0, #0x2f                  	// #47
   148c8:	strb	w0, [x6], #1
   148cc:	mov	x28, x6
   148d0:	add	x0, x28, x24
   148d4:	cmp	x20, x0
   148d8:	b.hi	1490c <canonicalize_filename_mode@@Base+0x164>  // b.pmore
   148dc:	sub	x1, x20, x19
   148e0:	cmp	x24, #0x1, lsl #12
   148e4:	add	x20, x24, x1
   148e8:	add	x1, x1, #0x1, lsl #12
   148ec:	csinc	x20, x1, x20, lt  // lt = tstop
   148f0:	mov	x0, x19
   148f4:	mov	x1, x20
   148f8:	bl	a660 <xrealloc@plt>
   148fc:	sub	x6, x28, x19
   14900:	add	x20, x0, x20
   14904:	mov	x19, x0
   14908:	add	x28, x0, x6
   1490c:	mov	x0, x28
   14910:	mov	x1, x27
   14914:	mov	x2, x24
   14918:	bl	a2c0 <memcpy@plt>
   1491c:	strb	wzr, [x0, x24]
   14920:	add	x28, x0, x24
   14924:	cbnz	w23, 14964 <canonicalize_filename_mode@@Base+0x1bc>
   14928:	ldr	w0, [sp, #104]
   1492c:	mov	x2, x25
   14930:	mov	x1, x19
   14934:	cbz	w0, 14a74 <canonicalize_filename_mode@@Base+0x2cc>
   14938:	mov	w0, #0x0                   	// #0
   1493c:	bl	aef0 <__xstat@plt>
   14940:	cmp	w0, #0x0
   14944:	cset	w0, ne  // ne = any
   14948:	cbz	w0, 14a44 <canonicalize_filename_mode@@Base+0x29c>
   1494c:	bl	aeb0 <__errno_location@plt>
   14950:	ldr	w24, [x0]
   14954:	mov	x2, x0
   14958:	cbz	w21, 14c44 <canonicalize_filename_mode@@Base+0x49c>
   1495c:	cmp	w21, #0x1
   14960:	b.eq	149e4 <canonicalize_filename_mode@@Base+0x23c>  // b.none
   14964:	str	wzr, [sp, #176]
   14968:	ldrb	w0, [x22]
   1496c:	cmp	w0, #0x0
   14970:	ccmp	w21, #0x2, #0x4, ne  // ne = any
   14974:	b.ne	14d70 <canonicalize_filename_mode@@Base+0x5c8>  // b.any
   14978:	ldrb	w3, [x22]
   1497c:	mov	x27, x22
   14980:	cbnz	w3, 14858 <canonicalize_filename_mode@@Base+0xb0>
   14984:	nop
   14988:	ldp	x25, x26, [sp, #64]
   1498c:	add	x0, x19, #0x1
   14990:	cmp	x28, x0
   14994:	b.ls	149a4 <canonicalize_filename_mode@@Base+0x1fc>  // b.plast
   14998:	ldurb	w0, [x28, #-1]
   1499c:	cmp	w0, #0x2f
   149a0:	b.eq	14d1c <canonicalize_filename_mode@@Base+0x574>  // b.none
   149a4:	add	x0, x28, #0x1
   149a8:	strb	wzr, [x28]
   149ac:	cmp	x0, x20
   149b0:	b.eq	149c8 <canonicalize_filename_mode@@Base+0x220>  // b.none
   149b4:	sub	x1, x28, x19
   149b8:	mov	x0, x19
   149bc:	add	x1, x1, #0x1
   149c0:	bl	a660 <xrealloc@plt>
   149c4:	mov	x19, x0
   149c8:	ldr	x0, [sp, #120]
   149cc:	bl	aa50 <free@plt>
   149d0:	ldr	x0, [sp, #96]
   149d4:	cbz	x0, 14cd4 <canonicalize_filename_mode@@Base+0x52c>
   149d8:	bl	a580 <hash_free@plt>
   149dc:	ldp	x23, x24, [sp, #48]
   149e0:	b	14b94 <canonicalize_filename_mode@@Base+0x3ec>
   149e4:	mov	x0, x22
   149e8:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   149ec:	add	x1, x1, #0x38
   149f0:	str	x2, [sp, #152]
   149f4:	bl	ab40 <strspn@plt>
   149f8:	ldrb	w0, [x22, x0]
   149fc:	cmp	w0, #0x0
   14a00:	ccmp	w24, #0x2, #0x0, eq  // eq = none
   14a04:	b.ne	14c40 <canonicalize_filename_mode@@Base+0x498>  // b.any
   14a08:	ldrb	w3, [x26, #1]
   14a0c:	mov	x27, x22
   14a10:	cbnz	w3, 14858 <canonicalize_filename_mode@@Base+0xb0>
   14a14:	b	14988 <canonicalize_filename_mode@@Base+0x1e0>
   14a18:	mov	x0, #0x1000                	// #4096
   14a1c:	bl	a710 <xmalloc@plt>
   14a20:	mov	x28, x0
   14a24:	ldrb	w3, [x27]
   14a28:	mov	x19, x0
   14a2c:	add	x20, x0, #0x1, lsl #12
   14a30:	strb	w23, [x28], #1
   14a34:	cbnz	w3, 14818 <canonicalize_filename_mode@@Base+0x70>
   14a38:	str	xzr, [sp, #96]
   14a3c:	str	xzr, [sp, #120]
   14a40:	b	149a4 <canonicalize_filename_mode@@Base+0x1fc>
   14a44:	ldr	w0, [sp, #176]
   14a48:	and	w0, w0, #0xf000
   14a4c:	cmp	w0, #0xa, lsl #12
   14a50:	b.eq	14a88 <canonicalize_filename_mode@@Base+0x2e0>  // b.none
   14a54:	cmp	w0, #0x4, lsl #12
   14a58:	b.eq	14978 <canonicalize_filename_mode@@Base+0x1d0>  // b.none
   14a5c:	b	14968 <canonicalize_filename_mode@@Base+0x1c0>
   14a60:	cmp	w0, #0x2e
   14a64:	b.ne	148b4 <canonicalize_filename_mode@@Base+0x10c>  // b.any
   14a68:	mov	x27, x22
   14a6c:	cbnz	w3, 14858 <canonicalize_filename_mode@@Base+0xb0>
   14a70:	b	14988 <canonicalize_filename_mode@@Base+0x1e0>
   14a74:	mov	w0, #0x0                   	// #0
   14a78:	bl	ac70 <__lxstat@plt>
   14a7c:	cmp	w0, #0x0
   14a80:	cset	w0, ne  // ne = any
   14a84:	b	14948 <canonicalize_filename_mode@@Base+0x1a0>
   14a88:	ldr	x0, [sp, #96]
   14a8c:	cbz	x0, 14c1c <canonicalize_filename_mode@@Base+0x474>
   14a90:	ldr	x0, [sp, #96]
   14a94:	mov	x2, x25
   14a98:	ldr	x1, [sp, #112]
   14a9c:	bl	a9f0 <seen_file@plt>
   14aa0:	tst	w0, #0xff
   14aa4:	b.ne	14b48 <canonicalize_filename_mode@@Base+0x3a0>  // b.any
   14aa8:	ldr	x0, [sp, #96]
   14aac:	mov	x2, x25
   14ab0:	ldr	x1, [sp, #112]
   14ab4:	bl	a600 <record_file@plt>
   14ab8:	ldr	x1, [sp, #208]
   14abc:	mov	x0, x19
   14ac0:	bl	ab70 <areadlink_with_size@plt>
   14ac4:	mov	x27, x0
   14ac8:	cbz	x0, 14cf0 <canonicalize_filename_mode@@Base+0x548>
   14acc:	bl	a340 <strlen@plt>
   14ad0:	mov	x26, x0
   14ad4:	mov	x0, x22
   14ad8:	bl	a340 <strlen@plt>
   14adc:	mov	x2, x0
   14ae0:	add	x1, x26, x0
   14ae4:	ldr	x0, [sp, #128]
   14ae8:	cbz	x0, 14c64 <canonicalize_filename_mode@@Base+0x4bc>
   14aec:	add	x1, x1, #0x1
   14af0:	cmp	x1, x0
   14af4:	b.hi	14d28 <canonicalize_filename_mode@@Base+0x580>  // b.pmore
   14af8:	mov	x1, x22
   14afc:	add	x2, x2, #0x1
   14b00:	ldr	x22, [sp, #120]
   14b04:	add	x0, x22, x26
   14b08:	bl	a2d0 <memmove@plt>
   14b0c:	mov	x1, x27
   14b10:	mov	x2, x26
   14b14:	mov	x0, x22
   14b18:	bl	a2c0 <memcpy@plt>
   14b1c:	ldrb	w1, [x27]
   14b20:	str	x0, [sp, #112]
   14b24:	add	x0, x19, #0x1
   14b28:	cmp	w1, #0x2f
   14b2c:	b.eq	14d10 <canonicalize_filename_mode@@Base+0x568>  // b.none
   14b30:	cmp	x28, x0
   14b34:	b.hi	14d48 <canonicalize_filename_mode@@Base+0x5a0>  // b.pmore
   14b38:	mov	x0, x27
   14b3c:	ldr	x22, [sp, #112]
   14b40:	bl	aa50 <free@plt>
   14b44:	b	14978 <canonicalize_filename_mode@@Base+0x1d0>
   14b48:	cmp	w21, #0x2
   14b4c:	b.eq	14a08 <canonicalize_filename_mode@@Base+0x260>  // b.none
   14b50:	bl	aeb0 <__errno_location@plt>
   14b54:	mov	x2, x0
   14b58:	mov	w24, #0x28                  	// #40
   14b5c:	ldr	x0, [sp, #120]
   14b60:	str	x2, [sp, #104]
   14b64:	bl	aa50 <free@plt>
   14b68:	mov	x0, x19
   14b6c:	bl	aa50 <free@plt>
   14b70:	ldr	x2, [sp, #104]
   14b74:	str	x2, [sp, #104]
   14b78:	ldr	x0, [sp, #96]
   14b7c:	bl	a580 <hash_free@plt>
   14b80:	ldr	x2, [sp, #104]
   14b84:	mov	x19, #0x0                   	// #0
   14b88:	ldp	x25, x26, [sp, #64]
   14b8c:	str	w24, [x2]
   14b90:	ldp	x23, x24, [sp, #48]
   14b94:	mov	x0, x19
   14b98:	ldp	x19, x20, [sp, #16]
   14b9c:	ldp	x21, x22, [sp, #32]
   14ba0:	ldp	x27, x28, [sp, #80]
   14ba4:	ldp	x29, x30, [sp], #288
   14ba8:	ret
   14bac:	ldrb	w0, [x27, #1]
   14bb0:	cmp	w0, #0x2e
   14bb4:	b.ne	148b4 <canonicalize_filename_mode@@Base+0x10c>  // b.any
   14bb8:	add	x0, x19, #0x1
   14bbc:	mov	x27, x22
   14bc0:	cmp	x28, x0
   14bc4:	b.ls	14980 <canonicalize_filename_mode@@Base+0x1d8>  // b.plast
   14bc8:	sub	x28, x28, #0x1
   14bcc:	cmp	x28, x19
   14bd0:	b.ls	14980 <canonicalize_filename_mode@@Base+0x1d8>  // b.plast
   14bd4:	ldurb	w0, [x28, #-1]
   14bd8:	cmp	w0, #0x2f
   14bdc:	b.eq	14a68 <canonicalize_filename_mode@@Base+0x2c0>  // b.none
   14be0:	sub	x28, x28, #0x1
   14be4:	cmp	x28, x19
   14be8:	b.ne	14bd4 <canonicalize_filename_mode@@Base+0x42c>  // b.any
   14bec:	mov	x27, x22
   14bf0:	b	14a6c <canonicalize_filename_mode@@Base+0x2c4>
   14bf4:	bl	aeb0 <__errno_location@plt>
   14bf8:	mov	x19, #0x0                   	// #0
   14bfc:	mov	w1, #0x16                  	// #22
   14c00:	str	w1, [x0]
   14c04:	mov	x0, x19
   14c08:	ldp	x19, x20, [sp, #16]
   14c0c:	ldp	x21, x22, [sp, #32]
   14c10:	ldp	x27, x28, [sp, #80]
   14c14:	ldp	x29, x30, [sp], #288
   14c18:	ret
   14c1c:	adrp	x2, 4c000 <vasnprintf@@Base+0x1b848>
   14c20:	mov	x1, #0x0                   	// #0
   14c24:	ldp	x4, x3, [sp, #136]
   14c28:	mov	x0, #0x7                   	// #7
   14c2c:	ldr	x2, [x2, #3888]
   14c30:	bl	a800 <hash_initialize@plt>
   14c34:	str	x0, [sp, #96]
   14c38:	cbnz	x0, 14a90 <canonicalize_filename_mode@@Base+0x2e8>
   14c3c:	bl	a890 <xalloc_die@plt>
   14c40:	ldr	x2, [sp, #152]
   14c44:	str	x2, [sp, #104]
   14c48:	ldr	x0, [sp, #120]
   14c4c:	bl	aa50 <free@plt>
   14c50:	mov	x0, x19
   14c54:	bl	aa50 <free@plt>
   14c58:	ldp	x0, x2, [sp, #96]
   14c5c:	cbz	x0, 14b84 <canonicalize_filename_mode@@Base+0x3dc>
   14c60:	b	14b74 <canonicalize_filename_mode@@Base+0x3cc>
   14c64:	add	x1, x1, #0x1
   14c68:	mov	x0, #0x1000                	// #4096
   14c6c:	cmp	x1, x0
   14c70:	str	x2, [sp, #112]
   14c74:	csel	x0, x1, x0, cs  // cs = hs, nlast
   14c78:	str	x0, [sp, #128]
   14c7c:	bl	a710 <xmalloc@plt>
   14c80:	str	x0, [sp, #120]
   14c84:	ldr	x2, [sp, #112]
   14c88:	b	14af8 <canonicalize_filename_mode@@Base+0x350>
   14c8c:	bl	aeb0 <__errno_location@plt>
   14c90:	mov	x19, #0x0                   	// #0
   14c94:	mov	w1, #0x2                   	// #2
   14c98:	ldp	x23, x24, [sp, #48]
   14c9c:	str	w1, [x0]
   14ca0:	mov	x0, x19
   14ca4:	ldp	x19, x20, [sp, #16]
   14ca8:	ldp	x21, x22, [sp, #32]
   14cac:	ldp	x27, x28, [sp, #80]
   14cb0:	ldp	x29, x30, [sp], #288
   14cb4:	ret
   14cb8:	mov	x0, x19
   14cbc:	mov	x1, #0x1000                	// #4096
   14cc0:	bl	a660 <xrealloc@plt>
   14cc4:	mov	x19, x0
   14cc8:	add	x28, x0, x28
   14ccc:	add	x20, x0, #0x1, lsl #12
   14cd0:	b	14810 <canonicalize_filename_mode@@Base+0x68>
   14cd4:	mov	x0, x19
   14cd8:	ldp	x19, x20, [sp, #16]
   14cdc:	ldp	x21, x22, [sp, #32]
   14ce0:	ldp	x23, x24, [sp, #48]
   14ce4:	ldp	x27, x28, [sp, #80]
   14ce8:	ldp	x29, x30, [sp], #288
   14cec:	ret
   14cf0:	bl	aeb0 <__errno_location@plt>
   14cf4:	ldr	w24, [x0]
   14cf8:	mov	x2, x0
   14cfc:	cmp	w21, #0x2
   14d00:	b.ne	14b5c <canonicalize_filename_mode@@Base+0x3b4>  // b.any
   14d04:	cmp	w24, #0xc
   14d08:	b.ne	14a08 <canonicalize_filename_mode@@Base+0x260>  // b.any
   14d0c:	b	14b5c <canonicalize_filename_mode@@Base+0x3b4>
   14d10:	mov	x28, x0
   14d14:	strb	w1, [x19]
   14d18:	b	14b38 <canonicalize_filename_mode@@Base+0x390>
   14d1c:	mov	x0, x28
   14d20:	sub	x28, x28, #0x1
   14d24:	b	149a8 <canonicalize_filename_mode@@Base+0x200>
   14d28:	ldr	x0, [sp, #120]
   14d2c:	str	x1, [sp, #112]
   14d30:	str	x2, [sp, #152]
   14d34:	bl	a660 <xrealloc@plt>
   14d38:	ldr	x1, [sp, #112]
   14d3c:	stp	x0, x1, [sp, #120]
   14d40:	ldr	x2, [sp, #152]
   14d44:	b	14af8 <canonicalize_filename_mode@@Base+0x350>
   14d48:	sub	x28, x28, #0x1
   14d4c:	cmp	x19, x28
   14d50:	b.cs	14b38 <canonicalize_filename_mode@@Base+0x390>  // b.hs, b.nlast
   14d54:	ldurb	w0, [x28, #-1]
   14d58:	cmp	w0, #0x2f
   14d5c:	b.eq	14b38 <canonicalize_filename_mode@@Base+0x390>  // b.none
   14d60:	sub	x28, x28, #0x1
   14d64:	cmp	x19, x28
   14d68:	b.ne	14d54 <canonicalize_filename_mode@@Base+0x5ac>  // b.any
   14d6c:	b	14b38 <canonicalize_filename_mode@@Base+0x390>
   14d70:	bl	aeb0 <__errno_location@plt>
   14d74:	mov	w24, #0x14                  	// #20
   14d78:	mov	x2, x0
   14d7c:	b	14c44 <canonicalize_filename_mode@@Base+0x49c>
   14d80:	str	xzr, [sp, #96]
   14d84:	str	xzr, [sp, #120]
   14d88:	b	1498c <canonicalize_filename_mode@@Base+0x1e4>
   14d8c:	nop

0000000000014d90 <set_cloexec_flag@@Base>:
   14d90:	stp	x29, x30, [sp, #-32]!
   14d94:	mov	w2, #0x0                   	// #0
   14d98:	mov	x29, sp
   14d9c:	stp	x19, x20, [sp, #16]
   14da0:	and	w20, w1, #0xff
   14da4:	mov	w19, w0
   14da8:	mov	w1, #0x1                   	// #1
   14dac:	bl	abe0 <rpl_fcntl@plt>
   14db0:	tbnz	w0, #31, 14df4 <set_cloexec_flag@@Base+0x64>
   14db4:	cmp	w20, #0x0
   14db8:	orr	w3, w0, #0x1
   14dbc:	and	w2, w0, #0xfffffffe
   14dc0:	mov	w1, w0
   14dc4:	csel	w2, w2, w3, eq  // eq = none
   14dc8:	mov	w0, #0x0                   	// #0
   14dcc:	cmp	w2, w1
   14dd0:	b.eq	14de8 <set_cloexec_flag@@Base+0x58>  // b.none
   14dd4:	mov	w0, w19
   14dd8:	mov	w1, #0x2                   	// #2
   14ddc:	bl	abe0 <rpl_fcntl@plt>
   14de0:	cmn	w0, #0x1
   14de4:	csetm	w0, eq  // eq = none
   14de8:	ldp	x19, x20, [sp, #16]
   14dec:	ldp	x29, x30, [sp], #32
   14df0:	ret
   14df4:	mov	w0, #0xffffffff            	// #-1
   14df8:	b	14de8 <set_cloexec_flag@@Base+0x58>
   14dfc:	nop

0000000000014e00 <dup_cloexec@@Base>:
   14e00:	mov	w2, #0x0                   	// #0
   14e04:	mov	w1, #0x406                 	// #1030
   14e08:	b	abe0 <rpl_fcntl@plt>
   14e0c:	nop

0000000000014e10 <dir_name@@Base>:
   14e10:	stp	x29, x30, [sp, #-16]!
   14e14:	mov	x29, sp
   14e18:	bl	a550 <mdir_name@plt>
   14e1c:	cbz	x0, 14e28 <dir_name@@Base+0x18>
   14e20:	ldp	x29, x30, [sp], #16
   14e24:	ret
   14e28:	bl	a890 <xalloc_die@plt>
   14e2c:	nop

0000000000014e30 <base_name@@Base>:
   14e30:	stp	x29, x30, [sp, #-32]!
   14e34:	mov	x29, sp
   14e38:	stp	x19, x20, [sp, #16]
   14e3c:	mov	x20, x0
   14e40:	bl	a780 <last_component@plt>
   14e44:	ldrb	w1, [x0]
   14e48:	cbz	w1, 14e74 <base_name@@Base+0x44>
   14e4c:	mov	x19, x0
   14e50:	bl	a2a0 <base_len@plt>
   14e54:	mov	x1, x0
   14e58:	mov	x0, x19
   14e5c:	ldrb	w2, [x19, x1]
   14e60:	ldp	x19, x20, [sp, #16]
   14e64:	cmp	w2, #0x2f
   14e68:	ldp	x29, x30, [sp], #32
   14e6c:	cinc	x1, x1, eq  // eq = none
   14e70:	b	acf0 <xstrndup@plt>
   14e74:	mov	x0, x20
   14e78:	bl	a2a0 <base_len@plt>
   14e7c:	mov	x1, x0
   14e80:	mov	x0, x20
   14e84:	ldp	x19, x20, [sp, #16]
   14e88:	ldp	x29, x30, [sp], #32
   14e8c:	b	acf0 <xstrndup@plt>

0000000000014e90 <dir_len@@Base>:
   14e90:	stp	x29, x30, [sp, #-32]!
   14e94:	mov	x29, sp
   14e98:	stp	x19, x20, [sp, #16]
   14e9c:	mov	x19, x0
   14ea0:	ldrb	w1, [x0]
   14ea4:	cmp	w1, #0x2f
   14ea8:	cset	x20, eq  // eq = none
   14eac:	bl	a780 <last_component@plt>
   14eb0:	sub	x0, x0, x19
   14eb4:	b	14ec8 <dir_len@@Base+0x38>
   14eb8:	ldrb	w2, [x19, x1]
   14ebc:	cmp	w2, #0x2f
   14ec0:	b.ne	14ed4 <dir_len@@Base+0x44>  // b.any
   14ec4:	mov	x0, x1
   14ec8:	sub	x1, x0, #0x1
   14ecc:	cmp	x0, x20
   14ed0:	b.hi	14eb8 <dir_len@@Base+0x28>  // b.pmore
   14ed4:	ldp	x19, x20, [sp, #16]
   14ed8:	ldp	x29, x30, [sp], #32
   14edc:	ret

0000000000014ee0 <mdir_name@@Base>:
   14ee0:	stp	x29, x30, [sp, #-48]!
   14ee4:	mov	x29, sp
   14ee8:	stp	x19, x20, [sp, #16]
   14eec:	str	x21, [sp, #32]
   14ef0:	mov	x21, x0
   14ef4:	bl	aa20 <dir_len@plt>
   14ef8:	cmp	x0, #0x0
   14efc:	mov	x19, x0
   14f00:	add	x0, x0, #0x1
   14f04:	cinc	x0, x0, eq  // eq = none
   14f08:	bl	a5f0 <malloc@plt>
   14f0c:	mov	x20, x0
   14f10:	cbz	x0, 14f28 <mdir_name@@Base+0x48>
   14f14:	mov	x1, x21
   14f18:	mov	x2, x19
   14f1c:	bl	a2c0 <memcpy@plt>
   14f20:	cbz	x19, 14f3c <mdir_name@@Base+0x5c>
   14f24:	strb	wzr, [x20, x19]
   14f28:	mov	x0, x20
   14f2c:	ldp	x19, x20, [sp, #16]
   14f30:	ldr	x21, [sp, #32]
   14f34:	ldp	x29, x30, [sp], #48
   14f38:	ret
   14f3c:	mov	w0, #0x2e                  	// #46
   14f40:	mov	x19, #0x1                   	// #1
   14f44:	strb	w0, [x20]
   14f48:	b	14f24 <mdir_name@@Base+0x44>
   14f4c:	nop

0000000000014f50 <last_component@@Base>:
   14f50:	ldrb	w1, [x0]
   14f54:	cmp	w1, #0x2f
   14f58:	b.ne	14f6c <last_component@@Base+0x1c>  // b.any
   14f5c:	nop
   14f60:	ldrb	w1, [x0, #1]!
   14f64:	cmp	w1, #0x2f
   14f68:	b.eq	14f60 <last_component@@Base+0x10>  // b.none
   14f6c:	cbz	w1, 14fa4 <last_component@@Base+0x54>
   14f70:	mov	x2, x0
   14f74:	mov	w3, #0x0                   	// #0
   14f78:	b	14f90 <last_component@@Base+0x40>
   14f7c:	cbz	w3, 14f88 <last_component@@Base+0x38>
   14f80:	mov	x0, x2
   14f84:	mov	w3, #0x0                   	// #0
   14f88:	ldrb	w1, [x2, #1]!
   14f8c:	cbz	w1, 14fa4 <last_component@@Base+0x54>
   14f90:	cmp	w1, #0x2f
   14f94:	b.ne	14f7c <last_component@@Base+0x2c>  // b.any
   14f98:	ldrb	w1, [x2, #1]!
   14f9c:	mov	w3, #0x1                   	// #1
   14fa0:	cbnz	w1, 14f90 <last_component@@Base+0x40>
   14fa4:	ret

0000000000014fa8 <base_len@@Base>:
   14fa8:	stp	x29, x30, [sp, #-32]!
   14fac:	mov	x29, sp
   14fb0:	str	x19, [sp, #16]
   14fb4:	mov	x19, x0
   14fb8:	bl	a340 <strlen@plt>
   14fbc:	subs	x1, x0, #0x1
   14fc0:	b.ls	14fd0 <base_len@@Base+0x28>  // b.plast
   14fc4:	ldrb	w2, [x19, x1]
   14fc8:	cmp	w2, #0x2f
   14fcc:	b.eq	14fdc <base_len@@Base+0x34>  // b.none
   14fd0:	ldr	x19, [sp, #16]
   14fd4:	ldp	x29, x30, [sp], #32
   14fd8:	ret
   14fdc:	mov	x0, x1
   14fe0:	b	14fbc <base_len@@Base+0x14>
   14fe4:	nop

0000000000014fe8 <strip_trailing_slashes@@Base>:
   14fe8:	stp	x29, x30, [sp, #-32]!
   14fec:	mov	x29, sp
   14ff0:	str	x19, [sp, #16]
   14ff4:	mov	x19, x0
   14ff8:	bl	a780 <last_component@plt>
   14ffc:	ldrb	w1, [x0]
   15000:	cmp	w1, #0x0
   15004:	csel	x19, x19, x0, eq  // eq = none
   15008:	mov	x0, x19
   1500c:	bl	a2a0 <base_len@plt>
   15010:	ldrb	w1, [x19, x0]
   15014:	strb	wzr, [x19, x0]
   15018:	cmp	w1, #0x0
   1501c:	cset	w0, ne  // ne = any
   15020:	ldr	x19, [sp, #16]
   15024:	ldp	x29, x30, [sp], #32
   15028:	ret
   1502c:	nop

0000000000015030 <fd_safer_flag@@Base>:
   15030:	stp	x29, x30, [sp, #-48]!
   15034:	cmp	w0, #0x2
   15038:	mov	x29, sp
   1503c:	stp	x19, x20, [sp, #16]
   15040:	mov	w19, w0
   15044:	b.ls	15058 <fd_safer_flag@@Base+0x28>  // b.plast
   15048:	mov	w0, w19
   1504c:	ldp	x19, x20, [sp, #16]
   15050:	ldp	x29, x30, [sp], #48
   15054:	ret
   15058:	str	x21, [sp, #32]
   1505c:	bl	ac80 <dup_safer_flag@plt>
   15060:	mov	w21, w0
   15064:	bl	aeb0 <__errno_location@plt>
   15068:	mov	x20, x0
   1506c:	mov	w0, w19
   15070:	mov	w19, w21
   15074:	ldr	w21, [x20]
   15078:	bl	a850 <close@plt>
   1507c:	str	w21, [x20]
   15080:	mov	w0, w19
   15084:	ldp	x19, x20, [sp, #16]
   15088:	ldr	x21, [sp, #32]
   1508c:	ldp	x29, x30, [sp], #48
   15090:	ret
   15094:	nop

0000000000015098 <dup_safer_flag@@Base>:
   15098:	ands	w1, w1, #0x80000
   1509c:	mov	w3, #0x406                 	// #1030
   150a0:	mov	w2, #0x3                   	// #3
   150a4:	csel	w1, w1, w3, eq  // eq = none
   150a8:	b	abe0 <rpl_fcntl@plt>
   150ac:	nop

00000000000150b0 <record_file@@Base>:
   150b0:	cbz	x0, 15134 <record_file@@Base+0x84>
   150b4:	stp	x29, x30, [sp, #-48]!
   150b8:	mov	x29, sp
   150bc:	stp	x21, x22, [sp, #32]
   150c0:	mov	x21, x2
   150c4:	mov	x22, x1
   150c8:	stp	x19, x20, [sp, #16]
   150cc:	mov	x20, x0
   150d0:	mov	x0, #0x18                  	// #24
   150d4:	bl	a710 <xmalloc@plt>
   150d8:	mov	x19, x0
   150dc:	mov	x0, x22
   150e0:	bl	a730 <xstrdup@plt>
   150e4:	ldr	q0, [x21]
   150e8:	mov	x2, x0
   150ec:	str	x2, [x19]
   150f0:	mov	x1, x19
   150f4:	mov	x0, x20
   150f8:	ext	v0.16b, v0.16b, v0.16b, #8
   150fc:	stur	q0, [x19, #8]
   15100:	bl	a450 <hash_insert@plt>
   15104:	cbz	x0, 15138 <record_file@@Base+0x88>
   15108:	cmp	x19, x0
   1510c:	b.eq	15124 <record_file@@Base+0x74>  // b.none
   15110:	mov	x0, x19
   15114:	ldp	x19, x20, [sp, #16]
   15118:	ldp	x21, x22, [sp, #32]
   1511c:	ldp	x29, x30, [sp], #48
   15120:	b	a560 <triple_free@plt>
   15124:	ldp	x19, x20, [sp, #16]
   15128:	ldp	x21, x22, [sp, #32]
   1512c:	ldp	x29, x30, [sp], #48
   15130:	ret
   15134:	ret
   15138:	bl	a890 <xalloc_die@plt>
   1513c:	nop

0000000000015140 <seen_file@@Base>:
   15140:	cbz	x0, 15178 <seen_file@@Base+0x38>
   15144:	stp	x29, x30, [sp, #-48]!
   15148:	mov	x3, x1
   1514c:	mov	x29, sp
   15150:	ldr	q0, [x2]
   15154:	add	x1, sp, #0x10
   15158:	str	x3, [sp, #16]
   1515c:	ext	v0.16b, v0.16b, v0.16b, #8
   15160:	stur	q0, [sp, #24]
   15164:	bl	a870 <hash_lookup@plt>
   15168:	cmp	x0, #0x0
   1516c:	cset	w0, ne  // ne = any
   15170:	ldp	x29, x30, [sp], #48
   15174:	ret
   15178:	mov	w0, #0x0                   	// #0
   1517c:	ret

0000000000015180 <mfile_name_concat@@Base>:
   15180:	stp	x29, x30, [sp, #-80]!
   15184:	mov	x29, sp
   15188:	stp	x19, x20, [sp, #16]
   1518c:	stp	x21, x22, [sp, #32]
   15190:	mov	x21, x1
   15194:	mov	x22, x0
   15198:	stp	x23, x24, [sp, #48]
   1519c:	mov	x23, x2
   151a0:	stp	x25, x26, [sp, #64]
   151a4:	bl	a780 <last_component@plt>
   151a8:	mov	x20, x0
   151ac:	bl	a2a0 <base_len@plt>
   151b0:	mov	x19, x0
   151b4:	mov	x0, x21
   151b8:	bl	a340 <strlen@plt>
   151bc:	sub	x3, x20, x22
   151c0:	mov	x24, x0
   151c4:	add	x26, x3, x19
   151c8:	add	x1, x0, #0x1
   151cc:	cbz	x19, 15254 <mfile_name_concat@@Base+0xd4>
   151d0:	add	x0, x22, x26
   151d4:	ldurb	w0, [x0, #-1]
   151d8:	cmp	w0, #0x2f
   151dc:	b.eq	15278 <mfile_name_concat@@Base+0xf8>  // b.none
   151e0:	ldrb	w0, [x21]
   151e4:	cmp	w0, #0x2f
   151e8:	b.eq	15278 <mfile_name_concat@@Base+0xf8>  // b.none
   151ec:	add	x0, x26, #0x1
   151f0:	mov	x19, #0x1                   	// #1
   151f4:	mov	w25, #0x2f                  	// #47
   151f8:	add	x0, x0, x1
   151fc:	bl	a5f0 <malloc@plt>
   15200:	mov	x20, x0
   15204:	cbz	x0, 15238 <mfile_name_concat@@Base+0xb8>
   15208:	mov	x1, x22
   1520c:	mov	x2, x26
   15210:	bl	aab0 <mempcpy@plt>
   15214:	mov	x1, x0
   15218:	add	x0, x0, x19
   1521c:	strb	w25, [x1]
   15220:	cbz	x23, 15228 <mfile_name_concat@@Base+0xa8>
   15224:	str	x0, [x23]
   15228:	mov	x2, x24
   1522c:	mov	x1, x21
   15230:	bl	aab0 <mempcpy@plt>
   15234:	strb	wzr, [x0]
   15238:	mov	x0, x20
   1523c:	ldp	x19, x20, [sp, #16]
   15240:	ldp	x21, x22, [sp, #32]
   15244:	ldp	x23, x24, [sp, #48]
   15248:	ldp	x25, x26, [sp, #64]
   1524c:	ldp	x29, x30, [sp], #80
   15250:	ret
   15254:	ldrb	w2, [x21]
   15258:	mov	x0, x26
   1525c:	mov	w25, #0x0                   	// #0
   15260:	cmp	w2, #0x2f
   15264:	b.ne	151f8 <mfile_name_concat@@Base+0x78>  // b.any
   15268:	add	x0, x3, #0x1
   1526c:	mov	x19, #0x1                   	// #1
   15270:	mov	w25, #0x2e                  	// #46
   15274:	b	151f8 <mfile_name_concat@@Base+0x78>
   15278:	mov	x0, x26
   1527c:	mov	x19, #0x0                   	// #0
   15280:	mov	w25, #0x0                   	// #0
   15284:	b	151f8 <mfile_name_concat@@Base+0x78>

0000000000015288 <getprogname@@Base>:
   15288:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   1528c:	ldr	x0, [x0, #4008]
   15290:	ldr	x0, [x0]
   15294:	ret

0000000000015298 <gettime@@Base>:
   15298:	mov	x1, x0
   1529c:	mov	w0, #0x0                   	// #0
   152a0:	b	a4f0 <clock_gettime@plt>
   152a4:	nop

00000000000152a8 <current_timespec@@Base>:
   152a8:	stp	x29, x30, [sp, #-32]!
   152ac:	mov	x29, sp
   152b0:	add	x0, sp, #0x10
   152b4:	bl	af80 <gettime@plt>
   152b8:	ldp	x0, x1, [sp, #16]
   152bc:	ldp	x29, x30, [sp], #32
   152c0:	ret
   152c4:	nop

00000000000152c8 <hard_locale@@Base>:
   152c8:	stp	x29, x30, [sp, #-16]!
   152cc:	mov	x1, #0x0                   	// #0
   152d0:	mov	x29, sp
   152d4:	bl	afd0 <setlocale@plt>
   152d8:	mov	w1, #0x1                   	// #1
   152dc:	cbz	x0, 15300 <hard_locale@@Base+0x38>
   152e0:	ldrb	w1, [x0]
   152e4:	cmp	w1, #0x43
   152e8:	b.eq	1530c <hard_locale@@Base+0x44>  // b.none
   152ec:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
   152f0:	add	x1, x1, #0xd00
   152f4:	bl	a9b0 <strcmp@plt>
   152f8:	cmp	w0, #0x0
   152fc:	cset	w1, ne  // ne = any
   15300:	mov	w0, w1
   15304:	ldp	x29, x30, [sp], #16
   15308:	ret
   1530c:	ldrb	w2, [x0, #1]
   15310:	mov	w1, #0x0                   	// #0
   15314:	cbnz	w2, 152ec <hard_locale@@Base+0x24>
   15318:	mov	w0, w1
   1531c:	ldp	x29, x30, [sp], #16
   15320:	ret
   15324:	nop
   15328:	ror	x2, x0, #3
   1532c:	udiv	x0, x2, x1
   15330:	msub	x0, x0, x1, x2
   15334:	ret
   15338:	cmp	x1, x0
   1533c:	cset	w0, eq  // eq = none
   15340:	ret
   15344:	nop
   15348:	stp	x29, x30, [sp, #-80]!
   1534c:	mov	x29, sp
   15350:	stp	x21, x22, [sp, #32]
   15354:	mov	x21, x0
   15358:	mov	x0, x1
   1535c:	stp	x19, x20, [sp, #16]
   15360:	mov	x20, x1
   15364:	stp	x23, x24, [sp, #48]
   15368:	mov	x24, x2
   1536c:	and	w23, w3, #0xff
   15370:	ldr	x1, [x21, #16]
   15374:	ldr	x2, [x21, #48]
   15378:	str	x25, [sp, #64]
   1537c:	blr	x2
   15380:	ldr	x1, [x21, #16]
   15384:	cmp	x0, x1
   15388:	b.cs	15494 <hard_locale@@Base+0x1cc>  // b.hs, b.nlast
   1538c:	ldr	x25, [x21]
   15390:	lsl	x22, x0, #4
   15394:	add	x19, x25, x22
   15398:	str	x19, [x24]
   1539c:	ldr	x1, [x25, x22]
   153a0:	cbz	x1, 1542c <hard_locale@@Base+0x164>
   153a4:	cmp	x1, x20
   153a8:	b.eq	1548c <hard_locale@@Base+0x1c4>  // b.none
   153ac:	ldr	x2, [x21, #56]
   153b0:	mov	x0, x20
   153b4:	blr	x2
   153b8:	tst	w0, #0xff
   153bc:	b.eq	15424 <hard_locale@@Base+0x15c>  // b.none
   153c0:	ldr	x0, [x25, x22]
   153c4:	cbz	w23, 15430 <hard_locale@@Base+0x168>
   153c8:	ldr	x1, [x19, #8]
   153cc:	cbz	x1, 15484 <hard_locale@@Base+0x1bc>
   153d0:	ldp	x2, x3, [x1]
   153d4:	stp	x2, x3, [x19]
   153d8:	str	xzr, [x1]
   153dc:	ldp	x19, x20, [sp, #16]
   153e0:	ldr	x2, [x21, #72]
   153e4:	str	x2, [x1, #8]
   153e8:	str	x1, [x21, #72]
   153ec:	ldp	x21, x22, [sp, #32]
   153f0:	ldp	x23, x24, [sp, #48]
   153f4:	ldr	x25, [sp, #64]
   153f8:	ldp	x29, x30, [sp], #80
   153fc:	ret
   15400:	ldr	x1, [x2]
   15404:	cmp	x1, x20
   15408:	b.eq	1544c <hard_locale@@Base+0x184>  // b.none
   1540c:	ldr	x2, [x21, #56]
   15410:	mov	x0, x20
   15414:	blr	x2
   15418:	tst	w0, #0xff
   1541c:	b.ne	15448 <hard_locale@@Base+0x180>  // b.any
   15420:	ldr	x19, [x19, #8]
   15424:	ldr	x2, [x19, #8]
   15428:	cbnz	x2, 15400 <hard_locale@@Base+0x138>
   1542c:	mov	x0, #0x0                   	// #0
   15430:	ldp	x19, x20, [sp, #16]
   15434:	ldp	x21, x22, [sp, #32]
   15438:	ldp	x23, x24, [sp, #48]
   1543c:	ldr	x25, [sp, #64]
   15440:	ldp	x29, x30, [sp], #80
   15444:	ret
   15448:	ldr	x2, [x19, #8]
   1544c:	ldr	x0, [x2]
   15450:	cbz	w23, 15430 <hard_locale@@Base+0x168>
   15454:	ldr	x1, [x2, #8]
   15458:	str	x1, [x19, #8]
   1545c:	str	xzr, [x2]
   15460:	ldp	x19, x20, [sp, #16]
   15464:	ldr	x1, [x21, #72]
   15468:	str	x1, [x2, #8]
   1546c:	str	x2, [x21, #72]
   15470:	ldp	x21, x22, [sp, #32]
   15474:	ldp	x23, x24, [sp, #48]
   15478:	ldr	x25, [sp, #64]
   1547c:	ldp	x29, x30, [sp], #80
   15480:	ret
   15484:	str	xzr, [x25, x22]
   15488:	b	15430 <hard_locale@@Base+0x168>
   1548c:	mov	x0, x1
   15490:	b	153c4 <hard_locale@@Base+0xfc>
   15494:	bl	a900 <abort@plt>
   15498:	stp	x29, x30, [sp, #-64]!
   1549c:	mov	x29, sp
   154a0:	stp	x19, x20, [sp, #16]
   154a4:	mov	x20, x0
   154a8:	stp	x21, x22, [sp, #32]
   154ac:	mov	x22, x1
   154b0:	ldp	x21, x0, [x1]
   154b4:	stp	x23, x24, [sp, #48]
   154b8:	and	w23, w2, #0xff
   154bc:	cmp	x21, x0
   154c0:	b.cc	154d4 <hard_locale@@Base+0x20c>  // b.lo, b.ul, b.last
   154c4:	b	15574 <hard_locale@@Base+0x2ac>
   154c8:	add	x21, x21, #0x10
   154cc:	cmp	x21, x0
   154d0:	b.cs	15574 <hard_locale@@Base+0x2ac>  // b.hs, b.nlast
   154d4:	ldr	x24, [x21]
   154d8:	cbz	x24, 154c8 <hard_locale@@Base+0x200>
   154dc:	ldr	x19, [x21, #8]
   154e0:	cbz	x19, 1555c <hard_locale@@Base+0x294>
   154e4:	ldr	x1, [x20, #16]
   154e8:	ldr	x2, [x20, #48]
   154ec:	ldr	x24, [x19]
   154f0:	mov	x0, x24
   154f4:	blr	x2
   154f8:	ldr	x1, [x20, #16]
   154fc:	cmp	x0, x1
   15500:	b.cs	1562c <hard_locale@@Base+0x364>  // b.hs, b.nlast
   15504:	ldr	x2, [x20]
   15508:	lsl	x0, x0, #4
   1550c:	ldr	x3, [x19, #8]
   15510:	add	x4, x2, x0
   15514:	ldr	x5, [x2, x0]
   15518:	cbz	x5, 15534 <hard_locale@@Base+0x26c>
   1551c:	ldr	x0, [x4, #8]
   15520:	str	x0, [x19, #8]
   15524:	str	x19, [x4, #8]
   15528:	cbz	x3, 15558 <hard_locale@@Base+0x290>
   1552c:	mov	x19, x3
   15530:	b	154e8 <hard_locale@@Base+0x220>
   15534:	ldr	x4, [x20, #24]
   15538:	str	x24, [x2, x0]
   1553c:	add	x0, x4, #0x1
   15540:	str	x0, [x20, #24]
   15544:	str	xzr, [x19]
   15548:	ldr	x0, [x20, #72]
   1554c:	str	x0, [x19, #8]
   15550:	str	x19, [x20, #72]
   15554:	cbnz	x3, 1552c <hard_locale@@Base+0x264>
   15558:	ldr	x24, [x21]
   1555c:	str	xzr, [x21, #8]
   15560:	cbz	w23, 15590 <hard_locale@@Base+0x2c8>
   15564:	ldr	x0, [x22, #8]
   15568:	add	x21, x21, #0x10
   1556c:	cmp	x21, x0
   15570:	b.cc	154d4 <hard_locale@@Base+0x20c>  // b.lo, b.ul, b.last
   15574:	mov	w23, #0x1                   	// #1
   15578:	mov	w0, w23
   1557c:	ldp	x19, x20, [sp, #16]
   15580:	ldp	x21, x22, [sp, #32]
   15584:	ldp	x23, x24, [sp, #48]
   15588:	ldp	x29, x30, [sp], #64
   1558c:	ret
   15590:	ldr	x1, [x20, #16]
   15594:	mov	x0, x24
   15598:	ldr	x2, [x20, #48]
   1559c:	blr	x2
   155a0:	ldr	x1, [x20, #16]
   155a4:	cmp	x0, x1
   155a8:	b.cs	1562c <hard_locale@@Base+0x364>  // b.hs, b.nlast
   155ac:	ldr	x1, [x20]
   155b0:	lsl	x0, x0, #4
   155b4:	add	x19, x1, x0
   155b8:	ldr	x2, [x1, x0]
   155bc:	cbz	x2, 155f4 <hard_locale@@Base+0x32c>
   155c0:	ldr	x0, [x20, #72]
   155c4:	cbz	x0, 15608 <hard_locale@@Base+0x340>
   155c8:	ldr	x1, [x0, #8]
   155cc:	str	x1, [x20, #72]
   155d0:	ldr	x1, [x19, #8]
   155d4:	stp	x24, x1, [x0]
   155d8:	str	x0, [x19, #8]
   155dc:	ldr	x1, [x22, #24]
   155e0:	str	xzr, [x21]
   155e4:	sub	x1, x1, #0x1
   155e8:	str	x1, [x22, #24]
   155ec:	ldr	x0, [x22, #8]
   155f0:	b	154c8 <hard_locale@@Base+0x200>
   155f4:	ldr	x2, [x20, #24]
   155f8:	str	x24, [x1, x0]
   155fc:	add	x0, x2, #0x1
   15600:	str	x0, [x20, #24]
   15604:	b	155dc <hard_locale@@Base+0x314>
   15608:	mov	x0, #0x10                  	// #16
   1560c:	bl	a5f0 <malloc@plt>
   15610:	cbnz	x0, 155d0 <hard_locale@@Base+0x308>
   15614:	mov	w0, w23
   15618:	ldp	x19, x20, [sp, #16]
   1561c:	ldp	x21, x22, [sp, #32]
   15620:	ldp	x23, x24, [sp, #48]
   15624:	ldp	x29, x30, [sp], #64
   15628:	ret
   1562c:	bl	a900 <abort@plt>

0000000000015630 <hash_get_n_buckets@@Base>:
   15630:	ldr	x0, [x0, #16]
   15634:	ret

0000000000015638 <hash_get_n_buckets_used@@Base>:
   15638:	ldr	x0, [x0, #24]
   1563c:	ret

0000000000015640 <hash_get_n_entries@@Base>:
   15640:	ldr	x0, [x0, #32]
   15644:	ret

0000000000015648 <hash_get_max_bucket_length@@Base>:
   15648:	ldp	x3, x4, [x0]
   1564c:	mov	x0, #0x0                   	// #0
   15650:	cmp	x3, x4
   15654:	b.cc	15668 <hash_get_max_bucket_length@@Base+0x20>  // b.lo, b.ul, b.last
   15658:	b	156a0 <hash_get_max_bucket_length@@Base+0x58>
   1565c:	add	x3, x3, #0x10
   15660:	cmp	x3, x4
   15664:	b.cs	156a0 <hash_get_max_bucket_length@@Base+0x58>  // b.hs, b.nlast
   15668:	ldr	x1, [x3]
   1566c:	cbz	x1, 1565c <hash_get_max_bucket_length@@Base+0x14>
   15670:	ldr	x1, [x3, #8]
   15674:	mov	x2, #0x1                   	// #1
   15678:	cbz	x1, 1568c <hash_get_max_bucket_length@@Base+0x44>
   1567c:	nop
   15680:	ldr	x1, [x1, #8]
   15684:	add	x2, x2, #0x1
   15688:	cbnz	x1, 15680 <hash_get_max_bucket_length@@Base+0x38>
   1568c:	cmp	x0, x2
   15690:	add	x3, x3, #0x10
   15694:	csel	x0, x0, x2, cs  // cs = hs, nlast
   15698:	cmp	x3, x4
   1569c:	b.cc	15668 <hash_get_max_bucket_length@@Base+0x20>  // b.lo, b.ul, b.last
   156a0:	ret
   156a4:	nop

00000000000156a8 <hash_table_ok@@Base>:
   156a8:	ldp	x3, x4, [x0]
   156ac:	mov	x6, x0
   156b0:	mov	x2, #0x0                   	// #0
   156b4:	mov	x5, #0x0                   	// #0
   156b8:	cmp	x3, x4
   156bc:	b.cc	156d0 <hash_table_ok@@Base+0x28>  // b.lo, b.ul, b.last
   156c0:	b	15700 <hash_table_ok@@Base+0x58>
   156c4:	add	x3, x3, #0x10
   156c8:	cmp	x3, x4
   156cc:	b.cs	15700 <hash_table_ok@@Base+0x58>  // b.hs, b.nlast
   156d0:	ldr	x1, [x3]
   156d4:	cbz	x1, 156c4 <hash_table_ok@@Base+0x1c>
   156d8:	ldr	x1, [x3, #8]
   156dc:	add	x5, x5, #0x1
   156e0:	add	x2, x2, #0x1
   156e4:	cbz	x1, 156c4 <hash_table_ok@@Base+0x1c>
   156e8:	ldr	x1, [x1, #8]
   156ec:	add	x2, x2, #0x1
   156f0:	cbnz	x1, 156e8 <hash_table_ok@@Base+0x40>
   156f4:	add	x3, x3, #0x10
   156f8:	cmp	x3, x4
   156fc:	b.cc	156d0 <hash_table_ok@@Base+0x28>  // b.lo, b.ul, b.last
   15700:	ldr	x1, [x6, #24]
   15704:	mov	w0, #0x0                   	// #0
   15708:	cmp	x1, x5
   1570c:	b.eq	15714 <hash_table_ok@@Base+0x6c>  // b.none
   15710:	ret
   15714:	ldr	x0, [x6, #32]
   15718:	cmp	x0, x2
   1571c:	cset	w0, eq  // eq = none
   15720:	ret
   15724:	nop

0000000000015728 <hash_print_statistics@@Base>:
   15728:	stp	x29, x30, [sp, #-64]!
   1572c:	mov	x29, sp
   15730:	stp	x19, x20, [sp, #16]
   15734:	mov	x19, x1
   15738:	stp	x21, x22, [sp, #32]
   1573c:	mov	x21, x0
   15740:	str	x23, [sp, #48]
   15744:	bl	afb0 <hash_get_n_entries@plt>
   15748:	mov	x23, x0
   1574c:	mov	x0, x21
   15750:	bl	aaf0 <hash_get_n_buckets@plt>
   15754:	mov	x20, x0
   15758:	mov	x0, x21
   1575c:	bl	a7b0 <hash_get_n_buckets_used@plt>
   15760:	mov	x22, x0
   15764:	mov	x0, x21
   15768:	bl	aa10 <hash_get_max_bucket_length@plt>
   1576c:	mov	x21, x0
   15770:	mov	x2, x23
   15774:	mov	x0, x19
   15778:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   1577c:	add	x1, x1, #0x638
   15780:	bl	afa0 <fprintf@plt>
   15784:	mov	x2, x20
   15788:	mov	x0, x19
   1578c:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   15790:	add	x1, x1, #0x650
   15794:	bl	afa0 <fprintf@plt>
   15798:	ucvtf	d0, x22
   1579c:	mov	x0, #0x4059000000000000    	// #4636737291354636288
   157a0:	fmov	d2, x0
   157a4:	ucvtf	d1, x20
   157a8:	mov	x2, x22
   157ac:	mov	x0, x19
   157b0:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   157b4:	add	x1, x1, #0x668
   157b8:	fmul	d0, d0, d2
   157bc:	fdiv	d0, d0, d1
   157c0:	bl	afa0 <fprintf@plt>
   157c4:	mov	x2, x21
   157c8:	mov	x0, x19
   157cc:	ldp	x19, x20, [sp, #16]
   157d0:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   157d4:	ldp	x21, x22, [sp, #32]
   157d8:	add	x1, x1, #0x690
   157dc:	ldr	x23, [sp, #48]
   157e0:	ldp	x29, x30, [sp], #64
   157e4:	b	afa0 <fprintf@plt>

00000000000157e8 <hash_lookup@@Base>:
   157e8:	stp	x29, x30, [sp, #-48]!
   157ec:	mov	x29, sp
   157f0:	str	x21, [sp, #32]
   157f4:	mov	x21, x0
   157f8:	mov	x0, x1
   157fc:	stp	x19, x20, [sp, #16]
   15800:	mov	x20, x1
   15804:	ldr	x1, [x21, #16]
   15808:	ldr	x2, [x21, #48]
   1580c:	blr	x2
   15810:	ldr	x1, [x21, #16]
   15814:	cmp	x0, x1
   15818:	b.cs	15888 <hash_lookup@@Base+0xa0>  // b.hs, b.nlast
   1581c:	ldr	x1, [x21]
   15820:	lsl	x0, x0, #4
   15824:	add	x19, x1, x0
   15828:	ldr	x1, [x1, x0]
   1582c:	cbnz	x1, 15838 <hash_lookup@@Base+0x50>
   15830:	b	1585c <hash_lookup@@Base+0x74>
   15834:	ldr	x1, [x19]
   15838:	cmp	x1, x20
   1583c:	b.eq	15874 <hash_lookup@@Base+0x8c>  // b.none
   15840:	ldr	x2, [x21, #56]
   15844:	mov	x0, x20
   15848:	blr	x2
   1584c:	tst	w0, #0xff
   15850:	b.ne	15870 <hash_lookup@@Base+0x88>  // b.any
   15854:	ldr	x19, [x19, #8]
   15858:	cbnz	x19, 15834 <hash_lookup@@Base+0x4c>
   1585c:	mov	x0, #0x0                   	// #0
   15860:	ldp	x19, x20, [sp, #16]
   15864:	ldr	x21, [sp, #32]
   15868:	ldp	x29, x30, [sp], #48
   1586c:	ret
   15870:	ldr	x20, [x19]
   15874:	mov	x0, x20
   15878:	ldp	x19, x20, [sp, #16]
   1587c:	ldr	x21, [sp, #32]
   15880:	ldp	x29, x30, [sp], #48
   15884:	ret
   15888:	bl	a900 <abort@plt>
   1588c:	nop

0000000000015890 <hash_get_first@@Base>:
   15890:	ldr	x1, [x0, #32]
   15894:	cbz	x1, 158c0 <hash_get_first@@Base+0x30>
   15898:	ldp	x1, x2, [x0]
   1589c:	cmp	x1, x2
   158a0:	b.cc	158b4 <hash_get_first@@Base+0x24>  // b.lo, b.ul, b.last
   158a4:	b	158c8 <hash_get_first@@Base+0x38>
   158a8:	add	x1, x1, #0x10
   158ac:	cmp	x1, x2
   158b0:	b.cs	158c8 <hash_get_first@@Base+0x38>  // b.hs, b.nlast
   158b4:	ldr	x0, [x1]
   158b8:	cbz	x0, 158a8 <hash_get_first@@Base+0x18>
   158bc:	ret
   158c0:	mov	x0, #0x0                   	// #0
   158c4:	ret
   158c8:	stp	x29, x30, [sp, #-16]!
   158cc:	mov	x29, sp
   158d0:	bl	a900 <abort@plt>
   158d4:	nop

00000000000158d8 <hash_get_next@@Base>:
   158d8:	stp	x29, x30, [sp, #-32]!
   158dc:	mov	x29, sp
   158e0:	stp	x19, x20, [sp, #16]
   158e4:	mov	x20, x0
   158e8:	mov	x19, x1
   158ec:	mov	x0, x1
   158f0:	ldr	x1, [x20, #16]
   158f4:	ldr	x2, [x20, #48]
   158f8:	blr	x2
   158fc:	ldr	x1, [x20, #16]
   15900:	cmp	x0, x1
   15904:	b.cs	15968 <hash_get_next@@Base+0x90>  // b.hs, b.nlast
   15908:	ldr	x3, [x20]
   1590c:	add	x3, x3, x0, lsl #4
   15910:	mov	x2, x3
   15914:	b	1591c <hash_get_next@@Base+0x44>
   15918:	cbz	x2, 1592c <hash_get_next@@Base+0x54>
   1591c:	ldp	x4, x2, [x2]
   15920:	cmp	x4, x19
   15924:	b.ne	15918 <hash_get_next@@Base+0x40>  // b.any
   15928:	cbnz	x2, 15958 <hash_get_next@@Base+0x80>
   1592c:	ldr	x1, [x20, #8]
   15930:	b	1593c <hash_get_next@@Base+0x64>
   15934:	ldr	x0, [x3]
   15938:	cbnz	x0, 1594c <hash_get_next@@Base+0x74>
   1593c:	add	x3, x3, #0x10
   15940:	cmp	x1, x3
   15944:	b.hi	15934 <hash_get_next@@Base+0x5c>  // b.pmore
   15948:	mov	x0, #0x0                   	// #0
   1594c:	ldp	x19, x20, [sp, #16]
   15950:	ldp	x29, x30, [sp], #32
   15954:	ret
   15958:	ldr	x0, [x2]
   1595c:	ldp	x19, x20, [sp, #16]
   15960:	ldp	x29, x30, [sp], #32
   15964:	ret
   15968:	bl	a900 <abort@plt>
   1596c:	nop

0000000000015970 <hash_get_entries@@Base>:
   15970:	ldp	x5, x3, [x0]
   15974:	mov	x6, x0
   15978:	cmp	x3, x5
   1597c:	b.ls	159cc <hash_get_entries@@Base+0x5c>  // b.plast
   15980:	sub	x4, x1, #0x8
   15984:	mov	x0, #0x0                   	// #0
   15988:	ldr	x1, [x5]
   1598c:	cbnz	x1, 159a0 <hash_get_entries@@Base+0x30>
   15990:	add	x5, x5, #0x10
   15994:	cmp	x5, x3
   15998:	b.cc	15988 <hash_get_entries@@Base+0x18>  // b.lo, b.ul, b.last
   1599c:	ret
   159a0:	mov	x1, x5
   159a4:	nop
   159a8:	cmp	x2, x0
   159ac:	b.ls	1599c <hash_get_entries@@Base+0x2c>  // b.plast
   159b0:	add	x0, x0, #0x1
   159b4:	ldr	x3, [x1]
   159b8:	str	x3, [x4, x0, lsl #3]
   159bc:	ldr	x1, [x1, #8]
   159c0:	cbnz	x1, 159a8 <hash_get_entries@@Base+0x38>
   159c4:	ldr	x3, [x6, #8]
   159c8:	b	15990 <hash_get_entries@@Base+0x20>
   159cc:	mov	x0, #0x0                   	// #0
   159d0:	ret
   159d4:	nop

00000000000159d8 <hash_do_for_each@@Base>:
   159d8:	stp	x29, x30, [sp, #-64]!
   159dc:	mov	x29, sp
   159e0:	stp	x21, x22, [sp, #32]
   159e4:	mov	x21, x1
   159e8:	stp	x23, x24, [sp, #48]
   159ec:	ldp	x23, x1, [x0]
   159f0:	stp	x19, x20, [sp, #16]
   159f4:	cmp	x1, x23
   159f8:	b.ls	15a64 <hash_do_for_each@@Base+0x8c>  // b.plast
   159fc:	mov	x24, x0
   15a00:	mov	x22, x2
   15a04:	mov	x20, #0x0                   	// #0
   15a08:	ldr	x0, [x23]
   15a0c:	cbnz	x0, 15a34 <hash_do_for_each@@Base+0x5c>
   15a10:	add	x23, x23, #0x10
   15a14:	cmp	x23, x1
   15a18:	b.cc	15a08 <hash_do_for_each@@Base+0x30>  // b.lo, b.ul, b.last
   15a1c:	mov	x0, x20
   15a20:	ldp	x19, x20, [sp, #16]
   15a24:	ldp	x21, x22, [sp, #32]
   15a28:	ldp	x23, x24, [sp, #48]
   15a2c:	ldp	x29, x30, [sp], #64
   15a30:	ret
   15a34:	mov	x19, x23
   15a38:	b	15a40 <hash_do_for_each@@Base+0x68>
   15a3c:	ldr	x0, [x19]
   15a40:	mov	x1, x22
   15a44:	blr	x21
   15a48:	tst	w0, #0xff
   15a4c:	b.eq	15a1c <hash_do_for_each@@Base+0x44>  // b.none
   15a50:	ldr	x19, [x19, #8]
   15a54:	add	x20, x20, #0x1
   15a58:	cbnz	x19, 15a3c <hash_do_for_each@@Base+0x64>
   15a5c:	ldr	x1, [x24, #8]
   15a60:	b	15a10 <hash_do_for_each@@Base+0x38>
   15a64:	mov	x20, #0x0                   	// #0
   15a68:	b	15a1c <hash_do_for_each@@Base+0x44>
   15a6c:	nop

0000000000015a70 <hash_string@@Base>:
   15a70:	ldrb	w4, [x0]
   15a74:	mov	x2, #0x0                   	// #0
   15a78:	cbz	w4, 15a9c <hash_string@@Base+0x2c>
   15a7c:	nop
   15a80:	lsl	x3, x2, #5
   15a84:	sub	x2, x3, x2
   15a88:	add	x2, x2, w4, uxtb
   15a8c:	ldrb	w4, [x0, #1]!
   15a90:	udiv	x3, x2, x1
   15a94:	msub	x2, x3, x1, x2
   15a98:	cbnz	w4, 15a80 <hash_string@@Base+0x10>
   15a9c:	mov	x0, x2
   15aa0:	ret
   15aa4:	nop

0000000000015aa8 <hash_reset_tuning@@Base>:
   15aa8:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   15aac:	add	x1, x1, #0x6c0
   15ab0:	ldp	x2, x3, [x1]
   15ab4:	stp	x2, x3, [x0]
   15ab8:	ldr	w1, [x1, #16]
   15abc:	str	w1, [x0, #16]
   15ac0:	ret
   15ac4:	nop

0000000000015ac8 <hash_initialize@@Base>:
   15ac8:	stp	x29, x30, [sp, #-64]!
   15acc:	cmp	x2, #0x0
   15ad0:	mov	x29, sp
   15ad4:	stp	x23, x24, [sp, #48]
   15ad8:	mov	x23, x2
   15adc:	adrp	x2, 15000 <strip_trailing_slashes@@Base+0x18>
   15ae0:	add	x2, x2, #0x328
   15ae4:	stp	x19, x20, [sp, #16]
   15ae8:	csel	x23, x2, x23, eq  // eq = none
   15aec:	cmp	x3, #0x0
   15af0:	adrp	x2, 15000 <strip_trailing_slashes@@Base+0x18>
   15af4:	add	x2, x2, #0x338
   15af8:	mov	x19, x0
   15afc:	mov	x20, x4
   15b00:	csel	x24, x2, x3, eq  // eq = none
   15b04:	mov	x0, #0x50                  	// #80
   15b08:	stp	x21, x22, [sp, #32]
   15b0c:	mov	x22, x1
   15b10:	bl	a5f0 <malloc@plt>
   15b14:	mov	x21, x0
   15b18:	cbz	x0, 15bd4 <hash_initialize@@Base+0x10c>
   15b1c:	cbz	x22, 15bec <hash_initialize@@Base+0x124>
   15b20:	str	x22, [x21, #40]
   15b24:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   15b28:	add	x0, x0, #0x6c0
   15b2c:	cmp	x22, x0
   15b30:	b.eq	15bf8 <hash_initialize@@Base+0x130>  // b.none
   15b34:	mov	w0, #0xcccd                	// #52429
   15b38:	ldr	s2, [x22, #8]
   15b3c:	movk	w0, #0x3dcc, lsl #16
   15b40:	fmov	s1, w0
   15b44:	fcmpe	s2, s1
   15b48:	b.le	15bc8 <hash_initialize@@Base+0x100>
   15b4c:	mov	w0, #0x6666                	// #26214
   15b50:	movk	w0, #0x3f66, lsl #16
   15b54:	fmov	s0, w0
   15b58:	fcmpe	s2, s0
   15b5c:	b.pl	15bc8 <hash_initialize@@Base+0x100>  // b.nfrst
   15b60:	mov	w0, #0xcccd                	// #52429
   15b64:	ldr	s3, [x22, #12]
   15b68:	movk	w0, #0x3f8c, lsl #16
   15b6c:	fmov	s0, w0
   15b70:	fcmpe	s3, s0
   15b74:	b.le	15bc8 <hash_initialize@@Base+0x100>
   15b78:	ldr	s0, [x22]
   15b7c:	fcmpe	s0, #0.0
   15b80:	b.lt	15bc8 <hash_initialize@@Base+0x100>  // b.tstop
   15b84:	fadd	s1, s0, s1
   15b88:	ldr	s0, [x22, #4]
   15b8c:	fcmpe	s1, s0
   15b90:	b.pl	15bc8 <hash_initialize@@Base+0x100>  // b.nfrst
   15b94:	fmov	s3, #1.000000000000000000e+00
   15b98:	fcmpe	s0, s3
   15b9c:	b.hi	15bc8 <hash_initialize@@Base+0x100>  // b.pmore
   15ba0:	fcmpe	s2, s1
   15ba4:	b.le	15bc8 <hash_initialize@@Base+0x100>
   15ba8:	ldrb	w0, [x22, #16]
   15bac:	cbnz	w0, 15c20 <hash_initialize@@Base+0x158>
   15bb0:	ucvtf	s0, x19
   15bb4:	mov	w0, #0x5f800000            	// #1602224128
   15bb8:	fmov	s1, w0
   15bbc:	fdiv	s0, s0, s2
   15bc0:	fcmpe	s0, s1
   15bc4:	b.lt	15c1c <hash_initialize@@Base+0x154>  // b.tstop
   15bc8:	mov	x0, x21
   15bcc:	mov	x21, #0x0                   	// #0
   15bd0:	bl	aa50 <free@plt>
   15bd4:	mov	x0, x21
   15bd8:	ldp	x19, x20, [sp, #16]
   15bdc:	ldp	x21, x22, [sp, #32]
   15be0:	ldp	x23, x24, [sp, #48]
   15be4:	ldp	x29, x30, [sp], #64
   15be8:	ret
   15bec:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   15bf0:	add	x0, x0, #0x6c0
   15bf4:	str	x0, [x21, #40]
   15bf8:	ucvtf	s0, x19
   15bfc:	mov	w0, #0xcccd                	// #52429
   15c00:	movk	w0, #0x3f4c, lsl #16
   15c04:	fmov	s2, w0
   15c08:	mov	w0, #0x5f800000            	// #1602224128
   15c0c:	fmov	s1, w0
   15c10:	fdiv	s0, s0, s2
   15c14:	fcmpe	s0, s1
   15c18:	b.ge	15bc8 <hash_initialize@@Base+0x100>  // b.tcont
   15c1c:	fcvtzu	x19, s0
   15c20:	cmp	x19, #0xa
   15c24:	mov	x0, #0xa                   	// #10
   15c28:	csel	x19, x19, x0, cs  // cs = hs, nlast
   15c2c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   15c30:	orr	x19, x19, #0x1
   15c34:	movk	x4, #0xaaab
   15c38:	cmn	x19, #0x1
   15c3c:	b.eq	15bc8 <hash_initialize@@Base+0x100>  // b.none
   15c40:	umulh	x1, x19, x4
   15c44:	cmp	x19, #0x9
   15c48:	and	x0, x1, #0xfffffffffffffffe
   15c4c:	add	x1, x0, x1, lsr #1
   15c50:	sub	x1, x19, x1
   15c54:	b.ls	15c8c <hash_initialize@@Base+0x1c4>  // b.plast
   15c58:	cbz	x1, 15c90 <hash_initialize@@Base+0x1c8>
   15c5c:	mov	x3, #0x10                  	// #16
   15c60:	mov	x2, #0x9                   	// #9
   15c64:	mov	x0, #0x3                   	// #3
   15c68:	b	15c70 <hash_initialize@@Base+0x1a8>
   15c6c:	cbz	x1, 15c90 <hash_initialize@@Base+0x1c8>
   15c70:	add	x0, x0, #0x2
   15c74:	add	x2, x2, x3
   15c78:	cmp	x2, x19
   15c7c:	add	x3, x3, #0x8
   15c80:	udiv	x1, x19, x0
   15c84:	msub	x1, x1, x0, x19
   15c88:	b.cc	15c6c <hash_initialize@@Base+0x1a4>  // b.lo, b.ul, b.last
   15c8c:	cbnz	x1, 15ca0 <hash_initialize@@Base+0x1d8>
   15c90:	add	x19, x19, #0x2
   15c94:	cmn	x19, #0x1
   15c98:	b.ne	15c40 <hash_initialize@@Base+0x178>  // b.any
   15c9c:	b	15bc8 <hash_initialize@@Base+0x100>
   15ca0:	cmp	xzr, x19, lsr #61
   15ca4:	cset	x0, ne  // ne = any
   15ca8:	tbnz	x19, #60, 15bc8 <hash_initialize@@Base+0x100>
   15cac:	cbnz	x0, 15bc8 <hash_initialize@@Base+0x100>
   15cb0:	str	x19, [x21, #16]
   15cb4:	mov	x0, x19
   15cb8:	mov	x1, #0x10                  	// #16
   15cbc:	bl	a770 <calloc@plt>
   15cc0:	str	x0, [x21]
   15cc4:	cbz	x0, 15bc8 <hash_initialize@@Base+0x100>
   15cc8:	add	x19, x0, x19, lsl #4
   15ccc:	str	x19, [x21, #8]
   15cd0:	stp	xzr, xzr, [x21, #24]
   15cd4:	mov	x0, x21
   15cd8:	stp	x23, x24, [x21, #48]
   15cdc:	stp	x20, xzr, [x21, #64]
   15ce0:	ldp	x19, x20, [sp, #16]
   15ce4:	ldp	x21, x22, [sp, #32]
   15ce8:	ldp	x23, x24, [sp, #48]
   15cec:	ldp	x29, x30, [sp], #64
   15cf0:	ret
   15cf4:	nop

0000000000015cf8 <hash_clear@@Base>:
   15cf8:	stp	x29, x30, [sp, #-48]!
   15cfc:	mov	x29, sp
   15d00:	ldr	x1, [x0, #8]
   15d04:	str	x21, [sp, #32]
   15d08:	ldr	x21, [x0]
   15d0c:	stp	x19, x20, [sp, #16]
   15d10:	mov	x20, x0
   15d14:	cmp	x21, x1
   15d18:	b.cc	15d2c <hash_clear@@Base+0x34>  // b.lo, b.ul, b.last
   15d1c:	b	15d84 <hash_clear@@Base+0x8c>
   15d20:	add	x21, x21, #0x10
   15d24:	cmp	x1, x21
   15d28:	b.ls	15d84 <hash_clear@@Base+0x8c>  // b.plast
   15d2c:	ldr	x0, [x21]
   15d30:	cbz	x0, 15d20 <hash_clear@@Base+0x28>
   15d34:	ldr	x19, [x21, #8]
   15d38:	ldr	x1, [x20, #64]
   15d3c:	cbz	x19, 15d64 <hash_clear@@Base+0x6c>
   15d40:	cbz	x1, 15d98 <hash_clear@@Base+0xa0>
   15d44:	ldr	x0, [x19]
   15d48:	blr	x1
   15d4c:	ldr	x2, [x19, #8]
   15d50:	ldp	x1, x0, [x20, #64]
   15d54:	stp	xzr, x0, [x19]
   15d58:	str	x19, [x20, #72]
   15d5c:	mov	x19, x2
   15d60:	cbnz	x2, 15d40 <hash_clear@@Base+0x48>
   15d64:	cbz	x1, 15d70 <hash_clear@@Base+0x78>
   15d68:	ldr	x0, [x21]
   15d6c:	blr	x1
   15d70:	stp	xzr, xzr, [x21]
   15d74:	add	x21, x21, #0x10
   15d78:	ldr	x1, [x20, #8]
   15d7c:	cmp	x1, x21
   15d80:	b.hi	15d2c <hash_clear@@Base+0x34>  // b.pmore
   15d84:	stp	xzr, xzr, [x20, #24]
   15d88:	ldp	x19, x20, [sp, #16]
   15d8c:	ldr	x21, [sp, #32]
   15d90:	ldp	x29, x30, [sp], #48
   15d94:	ret
   15d98:	ldr	x0, [x20, #72]
   15d9c:	mov	x1, x19
   15da0:	str	xzr, [x19]
   15da4:	ldr	x19, [x19, #8]
   15da8:	str	x0, [x1, #8]
   15dac:	str	x1, [x20, #72]
   15db0:	mov	x0, x1
   15db4:	cbnz	x19, 15d9c <hash_clear@@Base+0xa4>
   15db8:	b	15d70 <hash_clear@@Base+0x78>
   15dbc:	nop

0000000000015dc0 <hash_free@@Base>:
   15dc0:	stp	x29, x30, [sp, #-48]!
   15dc4:	mov	x29, sp
   15dc8:	str	x21, [sp, #32]
   15dcc:	mov	x21, x0
   15dd0:	ldr	x0, [x0, #64]
   15dd4:	stp	x19, x20, [sp, #16]
   15dd8:	ldp	x20, x1, [x21]
   15ddc:	cbz	x0, 15e38 <hash_free@@Base+0x78>
   15de0:	ldr	x0, [x21, #32]
   15de4:	cbz	x0, 15e38 <hash_free@@Base+0x78>
   15de8:	cmp	x20, x1
   15dec:	b.cc	15e00 <hash_free@@Base+0x40>  // b.lo, b.ul, b.last
   15df0:	b	15e68 <hash_free@@Base+0xa8>
   15df4:	add	x20, x20, #0x10
   15df8:	cmp	x20, x1
   15dfc:	b.cs	15e34 <hash_free@@Base+0x74>  // b.hs, b.nlast
   15e00:	ldr	x0, [x20]
   15e04:	cbz	x0, 15df4 <hash_free@@Base+0x34>
   15e08:	mov	x19, x20
   15e0c:	b	15e14 <hash_free@@Base+0x54>
   15e10:	ldr	x0, [x19]
   15e14:	ldr	x1, [x21, #64]
   15e18:	blr	x1
   15e1c:	ldr	x19, [x19, #8]
   15e20:	cbnz	x19, 15e10 <hash_free@@Base+0x50>
   15e24:	ldr	x1, [x21, #8]
   15e28:	add	x20, x20, #0x10
   15e2c:	cmp	x20, x1
   15e30:	b.cc	15e00 <hash_free@@Base+0x40>  // b.lo, b.ul, b.last
   15e34:	ldr	x20, [x21]
   15e38:	cmp	x1, x20
   15e3c:	b.ls	15e68 <hash_free@@Base+0xa8>  // b.plast
   15e40:	ldr	x19, [x20, #8]
   15e44:	cbz	x19, 15e5c <hash_free@@Base+0x9c>
   15e48:	mov	x0, x19
   15e4c:	ldr	x19, [x19, #8]
   15e50:	bl	aa50 <free@plt>
   15e54:	cbnz	x19, 15e48 <hash_free@@Base+0x88>
   15e58:	ldr	x1, [x21, #8]
   15e5c:	add	x20, x20, #0x10
   15e60:	cmp	x20, x1
   15e64:	b.cc	15e40 <hash_free@@Base+0x80>  // b.lo, b.ul, b.last
   15e68:	ldr	x19, [x21, #72]
   15e6c:	cbz	x19, 15e80 <hash_free@@Base+0xc0>
   15e70:	mov	x0, x19
   15e74:	ldr	x19, [x19, #8]
   15e78:	bl	aa50 <free@plt>
   15e7c:	cbnz	x19, 15e70 <hash_free@@Base+0xb0>
   15e80:	ldr	x0, [x21]
   15e84:	bl	aa50 <free@plt>
   15e88:	mov	x0, x21
   15e8c:	ldp	x19, x20, [sp, #16]
   15e90:	ldr	x21, [sp, #32]
   15e94:	ldp	x29, x30, [sp], #48
   15e98:	b	aa50 <free@plt>
   15e9c:	nop

0000000000015ea0 <hash_rehash@@Base>:
   15ea0:	stp	x29, x30, [sp, #-128]!
   15ea4:	mov	x29, sp
   15ea8:	stp	x21, x22, [sp, #32]
   15eac:	ldr	x21, [x0, #40]
   15eb0:	stp	x19, x20, [sp, #16]
   15eb4:	mov	x20, x0
   15eb8:	ldrb	w0, [x21, #16]
   15ebc:	cbnz	w0, 15ee0 <hash_rehash@@Base+0x40>
   15ec0:	ucvtf	s0, x1
   15ec4:	ldr	s2, [x21, #8]
   15ec8:	mov	w0, #0x5f800000            	// #1602224128
   15ecc:	fmov	s1, w0
   15ed0:	fdiv	s0, s0, s2
   15ed4:	fcmpe	s0, s1
   15ed8:	fcvtzu	x1, s0
   15edc:	b.ge	15f5c <hash_rehash@@Base+0xbc>  // b.tcont
   15ee0:	cmp	x1, #0xa
   15ee4:	mov	x19, #0xa                   	// #10
   15ee8:	csel	x1, x1, x19, cs  // cs = hs, nlast
   15eec:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   15ef0:	orr	x19, x1, #0x1
   15ef4:	movk	x4, #0xaaab
   15ef8:	cmn	x19, #0x1
   15efc:	b.eq	15f5c <hash_rehash@@Base+0xbc>  // b.none
   15f00:	umulh	x1, x19, x4
   15f04:	cmp	x19, #0x9
   15f08:	and	x0, x1, #0xfffffffffffffffe
   15f0c:	add	x1, x0, x1, lsr #1
   15f10:	sub	x1, x19, x1
   15f14:	b.ls	15f4c <hash_rehash@@Base+0xac>  // b.plast
   15f18:	cbz	x1, 15f50 <hash_rehash@@Base+0xb0>
   15f1c:	mov	x3, #0x10                  	// #16
   15f20:	mov	x2, #0x9                   	// #9
   15f24:	mov	x0, #0x3                   	// #3
   15f28:	b	15f34 <hash_rehash@@Base+0x94>
   15f2c:	add	x3, x3, #0x8
   15f30:	cbz	x1, 15f50 <hash_rehash@@Base+0xb0>
   15f34:	add	x0, x0, #0x2
   15f38:	add	x2, x2, x3
   15f3c:	cmp	x2, x19
   15f40:	udiv	x1, x19, x0
   15f44:	msub	x1, x1, x0, x19
   15f48:	b.cc	15f2c <hash_rehash@@Base+0x8c>  // b.lo, b.ul, b.last
   15f4c:	cbnz	x1, 15f74 <hash_rehash@@Base+0xd4>
   15f50:	add	x19, x19, #0x2
   15f54:	cmn	x19, #0x1
   15f58:	b.ne	15f00 <hash_rehash@@Base+0x60>  // b.any
   15f5c:	mov	w19, #0x0                   	// #0
   15f60:	mov	w0, w19
   15f64:	ldp	x19, x20, [sp, #16]
   15f68:	ldp	x21, x22, [sp, #32]
   15f6c:	ldp	x29, x30, [sp], #128
   15f70:	ret
   15f74:	cmp	xzr, x19, lsr #61
   15f78:	cset	x0, ne  // ne = any
   15f7c:	tbnz	x19, #60, 15f5c <hash_rehash@@Base+0xbc>
   15f80:	cbnz	x0, 15f5c <hash_rehash@@Base+0xbc>
   15f84:	ldr	x0, [x20, #16]
   15f88:	cmp	x0, x19
   15f8c:	b.eq	16034 <hash_rehash@@Base+0x194>  // b.none
   15f90:	mov	x0, x19
   15f94:	mov	x1, #0x10                  	// #16
   15f98:	bl	a770 <calloc@plt>
   15f9c:	str	x0, [sp, #48]
   15fa0:	cbz	x0, 15f5c <hash_rehash@@Base+0xbc>
   15fa4:	ldp	x5, x4, [x20, #64]
   15fa8:	add	x3, x0, x19, lsl #4
   15fac:	ldr	q0, [x20, #48]
   15fb0:	add	x22, sp, #0x30
   15fb4:	mov	x0, x22
   15fb8:	mov	x1, x20
   15fbc:	mov	w2, #0x0                   	// #0
   15fc0:	stp	x3, x19, [sp, #56]
   15fc4:	stp	xzr, xzr, [sp, #72]
   15fc8:	str	x21, [sp, #88]
   15fcc:	str	q0, [sp, #96]
   15fd0:	stp	x5, x4, [sp, #112]
   15fd4:	bl	15498 <hard_locale@@Base+0x1d0>
   15fd8:	ands	w19, w0, #0xff
   15fdc:	b.ne	1604c <hash_rehash@@Base+0x1ac>  // b.any
   15fe0:	ldr	x0, [sp, #120]
   15fe4:	str	x0, [x20, #72]
   15fe8:	mov	x1, x22
   15fec:	mov	x0, x20
   15ff0:	mov	w2, #0x1                   	// #1
   15ff4:	bl	15498 <hard_locale@@Base+0x1d0>
   15ff8:	tst	w0, #0xff
   15ffc:	b.eq	16078 <hash_rehash@@Base+0x1d8>  // b.none
   16000:	mov	x1, x22
   16004:	mov	x0, x20
   16008:	mov	w2, #0x0                   	// #0
   1600c:	bl	15498 <hard_locale@@Base+0x1d0>
   16010:	tst	w0, #0xff
   16014:	b.eq	16078 <hash_rehash@@Base+0x1d8>  // b.none
   16018:	ldr	x0, [sp, #48]
   1601c:	bl	aa50 <free@plt>
   16020:	mov	w0, w19
   16024:	ldp	x19, x20, [sp, #16]
   16028:	ldp	x21, x22, [sp, #32]
   1602c:	ldp	x29, x30, [sp], #128
   16030:	ret
   16034:	mov	w19, #0x1                   	// #1
   16038:	mov	w0, w19
   1603c:	ldp	x19, x20, [sp, #16]
   16040:	ldp	x21, x22, [sp, #32]
   16044:	ldp	x29, x30, [sp], #128
   16048:	ret
   1604c:	ldr	x0, [x20]
   16050:	bl	aa50 <free@plt>
   16054:	ldp	q1, q0, [sp, #48]
   16058:	ldr	x0, [sp, #120]
   1605c:	str	x0, [x20, #72]
   16060:	stp	q1, q0, [x20]
   16064:	mov	w0, w19
   16068:	ldp	x19, x20, [sp, #16]
   1606c:	ldp	x21, x22, [sp, #32]
   16070:	ldp	x29, x30, [sp], #128
   16074:	ret
   16078:	bl	a900 <abort@plt>
   1607c:	nop

0000000000016080 <hash_insert_if_absent@@Base>:
   16080:	stp	x29, x30, [sp, #-64]!
   16084:	mov	x29, sp
   16088:	stp	x19, x20, [sp, #16]
   1608c:	stp	x21, x22, [sp, #32]
   16090:	cbz	x1, 16204 <hash_insert_if_absent@@Base+0x184>
   16094:	mov	w3, #0x0                   	// #0
   16098:	add	x22, sp, #0x38
   1609c:	mov	x21, x2
   160a0:	mov	x19, x0
   160a4:	mov	x20, x1
   160a8:	mov	x2, x22
   160ac:	bl	15348 <hard_locale@@Base+0x80>
   160b0:	mov	x3, x0
   160b4:	cbz	x0, 160d4 <hash_insert_if_absent@@Base+0x54>
   160b8:	mov	w0, #0x0                   	// #0
   160bc:	cbz	x21, 160c4 <hash_insert_if_absent@@Base+0x44>
   160c0:	str	x3, [x21]
   160c4:	ldp	x19, x20, [sp, #16]
   160c8:	ldp	x21, x22, [sp, #32]
   160cc:	ldp	x29, x30, [sp], #64
   160d0:	ret
   160d4:	ldr	x0, [x19, #16]
   160d8:	ldr	x1, [x19, #40]
   160dc:	ucvtf	s0, x0
   160e0:	ldr	x0, [x19, #24]
   160e4:	ldr	s2, [x1, #8]
   160e8:	ucvtf	s1, x0
   160ec:	fmul	s3, s2, s0
   160f0:	fcmpe	s1, s3
   160f4:	b.gt	16140 <hash_insert_if_absent@@Base+0xc0>
   160f8:	ldr	x21, [sp, #56]
   160fc:	ldr	x0, [x21]
   16100:	cbz	x0, 16240 <hash_insert_if_absent@@Base+0x1c0>
   16104:	ldr	x0, [x19, #72]
   16108:	cbz	x0, 1626c <hash_insert_if_absent@@Base+0x1ec>
   1610c:	ldr	x1, [x0, #8]
   16110:	str	x1, [x19, #72]
   16114:	ldr	x2, [x21, #8]
   16118:	ldr	x1, [x19, #32]
   1611c:	stp	x20, x2, [x0]
   16120:	str	x0, [x21, #8]
   16124:	add	x1, x1, #0x1
   16128:	str	x1, [x19, #32]
   1612c:	mov	w0, #0x1                   	// #1
   16130:	ldp	x19, x20, [sp, #16]
   16134:	ldp	x21, x22, [sp, #32]
   16138:	ldp	x29, x30, [sp], #64
   1613c:	ret
   16140:	adrp	x2, 32000 <vasnprintf@@Base+0x1848>
   16144:	add	x0, x2, #0x6c0
   16148:	cmp	x1, x0
   1614c:	b.eq	1628c <hash_insert_if_absent@@Base+0x20c>  // b.none
   16150:	mov	w0, #0xcccd                	// #52429
   16154:	movk	w0, #0x3dcc, lsl #16
   16158:	fmov	s3, w0
   1615c:	fcmpe	s2, s3
   16160:	b.le	16208 <hash_insert_if_absent@@Base+0x188>
   16164:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   16168:	ldr	s4, [x0, #1704]
   1616c:	fcmpe	s2, s4
   16170:	b.pl	16208 <hash_insert_if_absent@@Base+0x188>  // b.nfrst
   16174:	mov	w0, #0xcccd                	// #52429
   16178:	ldr	s5, [x1, #12]
   1617c:	movk	w0, #0x3f8c, lsl #16
   16180:	fmov	s4, w0
   16184:	fcmpe	s5, s4
   16188:	b.le	16208 <hash_insert_if_absent@@Base+0x188>
   1618c:	ldr	s4, [x1]
   16190:	fcmpe	s4, #0.0
   16194:	b.lt	16208 <hash_insert_if_absent@@Base+0x188>  // b.tstop
   16198:	fadd	s3, s4, s3
   1619c:	ldr	s4, [x1, #4]
   161a0:	fcmpe	s3, s4
   161a4:	b.pl	16208 <hash_insert_if_absent@@Base+0x188>  // b.nfrst
   161a8:	fmov	s6, #1.000000000000000000e+00
   161ac:	fcmpe	s4, s6
   161b0:	b.hi	16208 <hash_insert_if_absent@@Base+0x188>  // b.pmore
   161b4:	fcmpe	s2, s3
   161b8:	b.le	16208 <hash_insert_if_absent@@Base+0x188>
   161bc:	ldrb	w0, [x1, #16]
   161c0:	fmul	s0, s0, s5
   161c4:	cbz	w0, 16238 <hash_insert_if_absent@@Base+0x1b8>
   161c8:	mov	w0, #0x5f800000            	// #1602224128
   161cc:	fmov	s1, w0
   161d0:	fcmpe	s0, s1
   161d4:	b.ge	16278 <hash_insert_if_absent@@Base+0x1f8>  // b.tcont
   161d8:	fcvtzu	x1, s0
   161dc:	mov	x0, x19
   161e0:	bl	a920 <hash_rehash@plt>
   161e4:	tst	w0, #0xff
   161e8:	b.eq	16278 <hash_insert_if_absent@@Base+0x1f8>  // b.none
   161ec:	mov	x2, x22
   161f0:	mov	x1, x20
   161f4:	mov	x0, x19
   161f8:	mov	w3, #0x0                   	// #0
   161fc:	bl	15348 <hard_locale@@Base+0x80>
   16200:	cbz	x0, 160f8 <hash_insert_if_absent@@Base+0x78>
   16204:	bl	a900 <abort@plt>
   16208:	mov	w0, #0xcccd                	// #52429
   1620c:	add	x2, x2, #0x6c0
   16210:	movk	w0, #0x3f4c, lsl #16
   16214:	fmov	s2, w0
   16218:	str	x2, [x19, #40]
   1621c:	fmul	s3, s0, s2
   16220:	fcmpe	s1, s3
   16224:	b.le	160f8 <hash_insert_if_absent@@Base+0x78>
   16228:	mov	w0, #0xfdf4                	// #65012
   1622c:	movk	w0, #0x3fb4, lsl #16
   16230:	fmov	s1, w0
   16234:	fmul	s0, s0, s1
   16238:	fmul	s0, s0, s2
   1623c:	b	161c8 <hash_insert_if_absent@@Base+0x148>
   16240:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   16244:	ldur	q0, [x19, #24]
   16248:	str	x20, [x21]
   1624c:	ldr	q1, [x0, #1712]
   16250:	mov	w0, #0x1                   	// #1
   16254:	ldp	x21, x22, [sp, #32]
   16258:	add	v0.2d, v0.2d, v1.2d
   1625c:	stur	q0, [x19, #24]
   16260:	ldp	x19, x20, [sp, #16]
   16264:	ldp	x29, x30, [sp], #64
   16268:	ret
   1626c:	mov	x0, #0x10                  	// #16
   16270:	bl	a5f0 <malloc@plt>
   16274:	cbnz	x0, 16114 <hash_insert_if_absent@@Base+0x94>
   16278:	mov	w0, #0xffffffff            	// #-1
   1627c:	ldp	x19, x20, [sp, #16]
   16280:	ldp	x21, x22, [sp, #32]
   16284:	ldp	x29, x30, [sp], #64
   16288:	ret
   1628c:	mov	w0, #0xfdf4                	// #65012
   16290:	movk	w0, #0x3fb4, lsl #16
   16294:	fmov	s1, w0
   16298:	mov	w0, #0xcccd                	// #52429
   1629c:	fmul	s0, s0, s1
   162a0:	movk	w0, #0x3f4c, lsl #16
   162a4:	fmov	s2, w0
   162a8:	fmul	s0, s0, s2
   162ac:	b	161c8 <hash_insert_if_absent@@Base+0x148>

00000000000162b0 <hash_insert@@Base>:
   162b0:	stp	x29, x30, [sp, #-48]!
   162b4:	mov	x29, sp
   162b8:	add	x2, sp, #0x28
   162bc:	str	x19, [sp, #16]
   162c0:	mov	x19, x1
   162c4:	bl	a7a0 <hash_insert_if_absent@plt>
   162c8:	cmn	w0, #0x1
   162cc:	b.eq	162e8 <hash_insert@@Base+0x38>  // b.none
   162d0:	ldr	x1, [sp, #40]
   162d4:	cmp	w0, #0x0
   162d8:	csel	x0, x1, x19, eq  // eq = none
   162dc:	ldr	x19, [sp, #16]
   162e0:	ldp	x29, x30, [sp], #48
   162e4:	ret
   162e8:	mov	x0, #0x0                   	// #0
   162ec:	ldr	x19, [sp, #16]
   162f0:	ldp	x29, x30, [sp], #48
   162f4:	ret

00000000000162f8 <hash_delete@@Base>:
   162f8:	stp	x29, x30, [sp, #-64]!
   162fc:	mov	w3, #0x1                   	// #1
   16300:	mov	x29, sp
   16304:	add	x2, sp, #0x38
   16308:	stp	x19, x20, [sp, #16]
   1630c:	mov	x19, x0
   16310:	bl	15348 <hard_locale@@Base+0x80>
   16314:	mov	x20, x0
   16318:	cbz	x0, 16334 <hash_delete@@Base+0x3c>
   1631c:	ldr	x1, [sp, #56]
   16320:	ldr	x0, [x19, #32]
   16324:	ldr	x1, [x1]
   16328:	sub	x0, x0, #0x1
   1632c:	str	x0, [x19, #32]
   16330:	cbz	x1, 16344 <hash_delete@@Base+0x4c>
   16334:	mov	x0, x20
   16338:	ldp	x19, x20, [sp, #16]
   1633c:	ldp	x29, x30, [sp], #64
   16340:	ret
   16344:	ldr	x0, [x19, #16]
   16348:	ldr	x1, [x19, #40]
   1634c:	ucvtf	s1, x0
   16350:	ldr	x0, [x19, #24]
   16354:	ldr	s2, [x1]
   16358:	sub	x0, x0, #0x1
   1635c:	str	x0, [x19, #24]
   16360:	fmul	s3, s2, s1
   16364:	ucvtf	s0, x0
   16368:	fcmpe	s0, s3
   1636c:	b.pl	16334 <hash_delete@@Base+0x3c>  // b.nfrst
   16370:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   16374:	add	x2, x0, #0x6c0
   16378:	cmp	x1, x2
   1637c:	b.eq	1645c <hash_delete@@Base+0x164>  // b.none
   16380:	mov	w2, #0xcccd                	// #52429
   16384:	ldr	s3, [x1, #8]
   16388:	movk	w2, #0x3dcc, lsl #16
   1638c:	fmov	s4, w2
   16390:	fcmpe	s3, s4
   16394:	b.le	16444 <hash_delete@@Base+0x14c>
   16398:	mov	w2, #0x6666                	// #26214
   1639c:	movk	w2, #0x3f66, lsl #16
   163a0:	fmov	s5, w2
   163a4:	fcmpe	s3, s5
   163a8:	b.pl	16444 <hash_delete@@Base+0x14c>  // b.nfrst
   163ac:	mov	w2, #0xcccd                	// #52429
   163b0:	ldr	s6, [x1, #12]
   163b4:	movk	w2, #0x3f8c, lsl #16
   163b8:	fmov	s5, w2
   163bc:	fcmpe	s6, s5
   163c0:	b.le	16444 <hash_delete@@Base+0x14c>
   163c4:	fcmpe	s2, #0.0
   163c8:	b.lt	16444 <hash_delete@@Base+0x14c>  // b.tstop
   163cc:	fadd	s2, s2, s4
   163d0:	ldr	s4, [x1, #4]
   163d4:	fcmpe	s2, s4
   163d8:	b.pl	16444 <hash_delete@@Base+0x14c>  // b.nfrst
   163dc:	fmov	s5, #1.000000000000000000e+00
   163e0:	fcmpe	s4, s5
   163e4:	b.hi	16444 <hash_delete@@Base+0x14c>  // b.pmore
   163e8:	fcmpe	s3, s2
   163ec:	b.le	16444 <hash_delete@@Base+0x14c>
   163f0:	ldrb	w0, [x1, #16]
   163f4:	fmul	s1, s1, s4
   163f8:	cbnz	w0, 16404 <hash_delete@@Base+0x10c>
   163fc:	nop
   16400:	fmul	s1, s1, s3
   16404:	fcvtzu	x1, s1
   16408:	mov	x0, x19
   1640c:	bl	a920 <hash_rehash@plt>
   16410:	tst	w0, #0xff
   16414:	b.ne	16334 <hash_delete@@Base+0x3c>  // b.any
   16418:	str	x21, [sp, #32]
   1641c:	ldr	x21, [x19, #72]
   16420:	cbz	x21, 16438 <hash_delete@@Base+0x140>
   16424:	nop
   16428:	mov	x0, x21
   1642c:	ldr	x21, [x21, #8]
   16430:	bl	aa50 <free@plt>
   16434:	cbnz	x21, 16428 <hash_delete@@Base+0x130>
   16438:	ldr	x21, [sp, #32]
   1643c:	str	xzr, [x19, #72]
   16440:	b	16334 <hash_delete@@Base+0x3c>
   16444:	movi	v2.2s, #0x0
   16448:	add	x0, x0, #0x6c0
   1644c:	str	x0, [x19, #40]
   16450:	fmul	s2, s1, s2
   16454:	fcmpe	s0, s2
   16458:	b.pl	16334 <hash_delete@@Base+0x3c>  // b.nfrst
   1645c:	mov	w0, #0xcccd                	// #52429
   16460:	movk	w0, #0x3f4c, lsl #16
   16464:	fmov	s3, w0
   16468:	b	16400 <hash_delete@@Base+0x108>
   1646c:	nop
   16470:	ldr	x0, [x0, #56]
   16474:	ret
   16478:	stp	x29, x30, [sp, #-64]!
   1647c:	mov	x29, sp
   16480:	stp	x19, x20, [sp, #16]
   16484:	mov	x20, x1
   16488:	mov	x19, x0
   1648c:	stp	x21, x22, [sp, #32]
   16490:	mov	x21, x1
   16494:	ldr	x1, [x0, #32]
   16498:	str	x23, [sp, #48]
   1649c:	mov	x23, x2
   164a0:	cbz	x1, 164b0 <hash_delete@@Base+0x1b8>
   164a4:	mov	x0, x21
   164a8:	blr	x1
   164ac:	mov	x20, x0
   164b0:	ldp	x2, x1, [x19, #40]
   164b4:	ldr	x22, [x19, #8]
   164b8:	udiv	x0, x20, x1
   164bc:	msub	x0, x0, x1, x20
   164c0:	ldr	x19, [x2, x0, lsl #3]
   164c4:	cbz	x19, 16540 <hash_delete@@Base+0x248>
   164c8:	cbnz	x22, 164d8 <hash_delete@@Base+0x1e0>
   164cc:	b	1652c <hash_delete@@Base+0x234>
   164d0:	ldr	x19, [x19]
   164d4:	cbz	x19, 16540 <hash_delete@@Base+0x248>
   164d8:	ldr	x3, [x19, #8]
   164dc:	cmp	x3, x20
   164e0:	b.ne	164d0 <hash_delete@@Base+0x1d8>  // b.any
   164e4:	ldr	x1, [x19, #16]
   164e8:	mov	x0, x21
   164ec:	blr	x22
   164f0:	tst	w0, #0xff
   164f4:	b.eq	164d0 <hash_delete@@Base+0x1d8>  // b.none
   164f8:	ldr	x1, [x19, #24]
   164fc:	str	x1, [x23]
   16500:	mov	w0, #0x1                   	// #1
   16504:	ldp	x19, x20, [sp, #16]
   16508:	ldp	x21, x22, [sp, #32]
   1650c:	ldr	x23, [sp, #48]
   16510:	ldp	x29, x30, [sp], #64
   16514:	ret
   16518:	ldr	x0, [x19, #16]
   1651c:	cmp	x21, x0
   16520:	b.eq	164f8 <hash_delete@@Base+0x200>  // b.none
   16524:	ldr	x19, [x19]
   16528:	cbz	x19, 16540 <hash_delete@@Base+0x248>
   1652c:	ldr	x0, [x19, #8]
   16530:	cmp	x20, x0
   16534:	b.eq	16518 <hash_delete@@Base+0x220>  // b.none
   16538:	ldr	x19, [x19]
   1653c:	cbnz	x19, 1652c <hash_delete@@Base+0x234>
   16540:	mov	w0, #0x0                   	// #0
   16544:	ldp	x19, x20, [sp, #16]
   16548:	ldp	x21, x22, [sp, #32]
   1654c:	ldr	x23, [sp, #48]
   16550:	ldp	x29, x30, [sp], #64
   16554:	ret
   16558:	ldr	x1, [x0]
   1655c:	stp	x1, x0, [x8]
   16560:	ldr	x1, [x0, #48]
   16564:	str	xzr, [x8, #24]
   16568:	str	xzr, [x8, #40]
   1656c:	str	x1, [x8, #48]
   16570:	ret
   16574:	nop
   16578:	ret
   1657c:	nop
   16580:	stp	x29, x30, [sp, #-80]!
   16584:	mov	x29, sp
   16588:	stp	x23, x24, [sp, #48]
   1658c:	mov	x24, x0
   16590:	ldr	x0, [x0, #56]
   16594:	str	x25, [sp, #64]
   16598:	ldr	x25, [x24, #40]
   1659c:	cbz	x0, 16604 <hash_delete@@Base+0x30c>
   165a0:	ldr	x23, [x24, #48]
   165a4:	stp	x21, x22, [sp, #32]
   165a8:	ldp	x22, x21, [x24, #16]
   165ac:	cbz	x23, 166a8 <hash_delete@@Base+0x3b0>
   165b0:	stp	x19, x20, [sp, #16]
   165b4:	nop
   165b8:	sub	x23, x23, #0x1
   165bc:	ldr	x19, [x25, x23, lsl #3]
   165c0:	cbz	x19, 165f4 <hash_delete@@Base+0x2fc>
   165c4:	cbz	x21, 1665c <hash_delete@@Base+0x364>
   165c8:	cbz	x22, 16620 <hash_delete@@Base+0x328>
   165cc:	nop
   165d0:	mov	x20, x19
   165d4:	ldr	x19, [x19]
   165d8:	ldr	x0, [x20, #24]
   165dc:	blr	x21
   165e0:	ldr	x0, [x20, #16]
   165e4:	blr	x22
   165e8:	mov	x0, x20
   165ec:	bl	aa50 <free@plt>
   165f0:	cbnz	x19, 165d0 <hash_delete@@Base+0x2d8>
   165f4:	cbnz	x23, 165b8 <hash_delete@@Base+0x2c0>
   165f8:	ldp	x19, x20, [sp, #16]
   165fc:	ldp	x21, x22, [sp, #32]
   16600:	ldr	x25, [x24, #40]
   16604:	mov	x0, x25
   16608:	bl	aa50 <free@plt>
   1660c:	mov	x0, x24
   16610:	ldp	x23, x24, [sp, #48]
   16614:	ldr	x25, [sp, #64]
   16618:	ldp	x29, x30, [sp], #80
   1661c:	b	aa50 <free@plt>
   16620:	mov	x20, x19
   16624:	ldr	x19, [x19]
   16628:	ldr	x0, [x20, #24]
   1662c:	blr	x21
   16630:	mov	x0, x20
   16634:	bl	aa50 <free@plt>
   16638:	cbz	x19, 165f4 <hash_delete@@Base+0x2fc>
   1663c:	mov	x20, x19
   16640:	ldr	x19, [x19]
   16644:	ldr	x0, [x20, #24]
   16648:	blr	x21
   1664c:	mov	x0, x20
   16650:	bl	aa50 <free@plt>
   16654:	cbnz	x19, 16620 <hash_delete@@Base+0x328>
   16658:	b	165f4 <hash_delete@@Base+0x2fc>
   1665c:	cbz	x22, 16684 <hash_delete@@Base+0x38c>
   16660:	mov	x20, x19
   16664:	ldr	x19, [x19]
   16668:	ldr	x0, [x20, #16]
   1666c:	blr	x22
   16670:	mov	x0, x20
   16674:	bl	aa50 <free@plt>
   16678:	cbnz	x19, 16660 <hash_delete@@Base+0x368>
   1667c:	cbnz	x23, 165b8 <hash_delete@@Base+0x2c0>
   16680:	b	165f8 <hash_delete@@Base+0x300>
   16684:	mov	x0, x19
   16688:	ldr	x19, [x19]
   1668c:	bl	aa50 <free@plt>
   16690:	cbz	x19, 165f4 <hash_delete@@Base+0x2fc>
   16694:	mov	x0, x19
   16698:	ldr	x19, [x19]
   1669c:	bl	aa50 <free@plt>
   166a0:	cbnz	x19, 16684 <hash_delete@@Base+0x38c>
   166a4:	b	165f4 <hash_delete@@Base+0x2fc>
   166a8:	ldp	x21, x22, [sp, #32]
   166ac:	b	16604 <hash_delete@@Base+0x30c>
   166b0:	stp	x29, x30, [sp, #-80]!
   166b4:	mov	x29, sp
   166b8:	stp	x21, x22, [sp, #32]
   166bc:	mov	x22, x1
   166c0:	mov	x21, x1
   166c4:	ldr	x1, [x0, #32]
   166c8:	stp	x19, x20, [sp, #16]
   166cc:	stp	x23, x24, [sp, #48]
   166d0:	mov	x23, x0
   166d4:	mov	x24, x2
   166d8:	str	x25, [sp, #64]
   166dc:	cbz	x1, 166ec <hash_delete@@Base+0x3f4>
   166e0:	mov	x0, x22
   166e4:	blr	x1
   166e8:	mov	x21, x0
   166ec:	ldp	x1, x2, [x23, #40]
   166f0:	ldr	x25, [x23, #8]
   166f4:	udiv	x0, x21, x2
   166f8:	msub	x0, x0, x2, x21
   166fc:	add	x20, x1, x0, lsl #3
   16700:	ldr	x19, [x1, x0, lsl #3]
   16704:	cbz	x19, 1674c <hash_delete@@Base+0x454>
   16708:	cbnz	x25, 1671c <hash_delete@@Base+0x424>
   1670c:	b	16784 <hash_delete@@Base+0x48c>
   16710:	mov	x20, x19
   16714:	ldr	x19, [x19]
   16718:	cbz	x19, 1674c <hash_delete@@Base+0x454>
   1671c:	ldr	x3, [x19, #8]
   16720:	cmp	x3, x21
   16724:	b.ne	16710 <hash_delete@@Base+0x418>  // b.any
   16728:	ldr	x1, [x19, #16]
   1672c:	mov	x0, x22
   16730:	blr	x25
   16734:	tst	w0, #0xff
   16738:	b.ne	16794 <hash_delete@@Base+0x49c>  // b.any
   1673c:	ldr	x19, [x20]
   16740:	mov	x20, x19
   16744:	ldr	x19, [x19]
   16748:	cbnz	x19, 1671c <hash_delete@@Base+0x424>
   1674c:	mov	w0, #0x0                   	// #0
   16750:	ldp	x19, x20, [sp, #16]
   16754:	ldp	x21, x22, [sp, #32]
   16758:	ldp	x23, x24, [sp, #48]
   1675c:	ldr	x25, [sp, #64]
   16760:	ldp	x29, x30, [sp], #80
   16764:	ret
   16768:	ldr	x0, [x19, #16]
   1676c:	cmp	x22, x0
   16770:	b.eq	16794 <hash_delete@@Base+0x49c>  // b.none
   16774:	ldr	x19, [x20]
   16778:	mov	x20, x19
   1677c:	ldr	x19, [x19]
   16780:	cbz	x19, 1674c <hash_delete@@Base+0x454>
   16784:	ldr	x1, [x19, #8]
   16788:	cmp	x21, x1
   1678c:	b.ne	16778 <hash_delete@@Base+0x480>  // b.any
   16790:	b	16768 <hash_delete@@Base+0x470>
   16794:	ldr	x0, [x19, #24]
   16798:	str	x0, [x24]
   1679c:	ldr	x0, [x23, #56]
   167a0:	ldr	x1, [x19]
   167a4:	str	x1, [x20]
   167a8:	ldr	x1, [x23, #16]
   167ac:	sub	x0, x0, #0x1
   167b0:	str	x0, [x23, #56]
   167b4:	cbz	x1, 167c0 <hash_delete@@Base+0x4c8>
   167b8:	ldr	x0, [x19, #16]
   167bc:	blr	x1
   167c0:	mov	x0, x19
   167c4:	bl	aa50 <free@plt>
   167c8:	mov	w0, #0x1                   	// #1
   167cc:	ldp	x19, x20, [sp, #16]
   167d0:	ldp	x21, x22, [sp, #32]
   167d4:	ldp	x23, x24, [sp, #48]
   167d8:	ldr	x25, [sp, #64]
   167dc:	ldp	x29, x30, [sp], #80
   167e0:	ret
   167e4:	nop
   167e8:	stp	x29, x30, [sp, #-64]!
   167ec:	mov	x29, sp
   167f0:	stp	x19, x20, [sp, #16]
   167f4:	mov	x20, x2
   167f8:	stp	x21, x22, [sp, #32]
   167fc:	mov	x22, x3
   16800:	mov	x21, x4
   16804:	stp	x23, x24, [sp, #48]
   16808:	mov	x24, x0
   1680c:	mov	x23, x1
   16810:	mov	x0, #0x40                  	// #64
   16814:	bl	a5f0 <malloc@plt>
   16818:	mov	x19, x0
   1681c:	cbz	x0, 16848 <hash_delete@@Base+0x550>
   16820:	mov	x0, #0xb                   	// #11
   16824:	stp	x24, x23, [x19]
   16828:	mov	x1, #0x8                   	// #8
   1682c:	stp	x22, x21, [x19, #16]
   16830:	str	x20, [x19, #32]
   16834:	str	x0, [x19, #48]
   16838:	bl	a770 <calloc@plt>
   1683c:	str	x0, [x19, #40]
   16840:	cbz	x0, 16860 <hash_delete@@Base+0x568>
   16844:	str	xzr, [x19, #56]
   16848:	mov	x0, x19
   1684c:	ldp	x19, x20, [sp, #16]
   16850:	ldp	x21, x22, [sp, #32]
   16854:	ldp	x23, x24, [sp, #48]
   16858:	ldp	x29, x30, [sp], #64
   1685c:	ret
   16860:	mov	x0, x19
   16864:	mov	x19, #0x0                   	// #0
   16868:	bl	aa50 <free@plt>
   1686c:	b	16848 <hash_delete@@Base+0x550>
   16870:	ldr	x3, [x0, #24]
   16874:	mov	x4, x0
   16878:	cbz	x3, 1689c <hash_delete@@Base+0x5a4>
   1687c:	ldr	x0, [x3, #16]
   16880:	str	x0, [x1]
   16884:	mov	w0, #0x1                   	// #1
   16888:	ldr	x1, [x3, #24]
   1688c:	str	x1, [x2]
   16890:	ldr	x1, [x3]
   16894:	str	x1, [x4, #24]
   16898:	ret
   1689c:	ldp	x3, x6, [x0, #40]
   168a0:	cmp	x6, x3
   168a4:	b.ls	168f0 <hash_delete@@Base+0x5f8>  // b.plast
   168a8:	ldr	x0, [x0, #8]
   168ac:	ldr	x0, [x0, #40]
   168b0:	sub	x0, x0, #0x8
   168b4:	b	168bc <hash_delete@@Base+0x5c4>
   168b8:	b.eq	168f0 <hash_delete@@Base+0x5f8>  // b.none
   168bc:	add	x3, x3, #0x1
   168c0:	cmp	x6, x3
   168c4:	ldr	x5, [x0, x3, lsl #3]
   168c8:	cbz	x5, 168b8 <hash_delete@@Base+0x5c0>
   168cc:	ldr	x0, [x5, #16]
   168d0:	str	x0, [x1]
   168d4:	mov	w0, #0x1                   	// #1
   168d8:	ldr	x1, [x5, #24]
   168dc:	str	x1, [x2]
   168e0:	ldr	x1, [x5]
   168e4:	str	x1, [x4, #24]
   168e8:	str	x3, [x4, #40]
   168ec:	ret
   168f0:	mov	w0, #0x0                   	// #0
   168f4:	str	x6, [x4, #40]
   168f8:	ret
   168fc:	nop
   16900:	stp	x29, x30, [sp, #-80]!
   16904:	mov	x29, sp
   16908:	stp	x21, x22, [sp, #32]
   1690c:	mov	x22, x1
   16910:	mov	x21, x0
   16914:	ldr	x1, [x0, #32]
   16918:	stp	x19, x20, [sp, #16]
   1691c:	mov	x20, x22
   16920:	stp	x23, x24, [sp, #48]
   16924:	mov	x24, x2
   16928:	stp	x25, x26, [sp, #64]
   1692c:	mov	x25, x3
   16930:	cbz	x1, 16940 <hash_delete@@Base+0x648>
   16934:	mov	x0, x22
   16938:	blr	x1
   1693c:	mov	x20, x0
   16940:	ldp	x1, x0, [x21, #40]
   16944:	ldr	x26, [x21, #8]
   16948:	udiv	x23, x20, x0
   1694c:	msub	x23, x23, x0, x20
   16950:	ldr	x19, [x1, x23, lsl #3]
   16954:	cbz	x19, 169d8 <hash_delete@@Base+0x6e0>
   16958:	cbnz	x26, 16968 <hash_delete@@Base+0x670>
   1695c:	b	169c4 <hash_delete@@Base+0x6cc>
   16960:	ldr	x19, [x19]
   16964:	cbz	x19, 169d8 <hash_delete@@Base+0x6e0>
   16968:	ldr	x4, [x19, #8]
   1696c:	cmp	x4, x20
   16970:	b.ne	16960 <hash_delete@@Base+0x668>  // b.any
   16974:	ldr	x1, [x19, #16]
   16978:	mov	x0, x22
   1697c:	blr	x26
   16980:	tst	w0, #0xff
   16984:	b.eq	16960 <hash_delete@@Base+0x668>  // b.none
   16988:	ldr	x0, [x19, #24]
   1698c:	str	x0, [x25]
   16990:	str	x24, [x19, #24]
   16994:	mov	w0, #0x0                   	// #0
   16998:	ldp	x19, x20, [sp, #16]
   1699c:	ldp	x21, x22, [sp, #32]
   169a0:	ldp	x23, x24, [sp, #48]
   169a4:	ldp	x25, x26, [sp, #64]
   169a8:	ldp	x29, x30, [sp], #80
   169ac:	ret
   169b0:	ldr	x0, [x19, #16]
   169b4:	cmp	x22, x0
   169b8:	b.eq	16988 <hash_delete@@Base+0x690>  // b.none
   169bc:	ldr	x19, [x19]
   169c0:	cbz	x19, 169d8 <hash_delete@@Base+0x6e0>
   169c4:	ldr	x0, [x19, #8]
   169c8:	cmp	x20, x0
   169cc:	b.eq	169b0 <hash_delete@@Base+0x6b8>  // b.none
   169d0:	ldr	x19, [x19]
   169d4:	cbnz	x19, 169c4 <hash_delete@@Base+0x6cc>
   169d8:	mov	x0, #0x20                  	// #32
   169dc:	bl	a5f0 <malloc@plt>
   169e0:	cbz	x0, 16ad0 <hash_delete@@Base+0x7d8>
   169e4:	ldr	x25, [x21, #40]
   169e8:	stp	x20, x22, [x0, #8]
   169ec:	ldr	x2, [x21, #56]
   169f0:	str	x24, [x0, #24]
   169f4:	ldr	x20, [x21, #48]
   169f8:	add	x2, x2, #0x1
   169fc:	ldr	x1, [x25, x23, lsl #3]
   16a00:	str	x1, [x0]
   16a04:	lsr	x1, x2, #1
   16a08:	str	x0, [x25, x23, lsl #3]
   16a0c:	adds	x0, x2, x1
   16a10:	str	x2, [x21, #56]
   16a14:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   16a18:	cmp	x20, x0
   16a1c:	b.cc	16a3c <hash_delete@@Base+0x744>  // b.lo, b.ul, b.last
   16a20:	mov	w0, #0x1                   	// #1
   16a24:	ldp	x19, x20, [sp, #16]
   16a28:	ldp	x21, x22, [sp, #32]
   16a2c:	ldp	x23, x24, [sp, #48]
   16a30:	ldp	x25, x26, [sp, #64]
   16a34:	ldp	x29, x30, [sp], #80
   16a38:	ret
   16a3c:	adrp	x2, 32000 <vasnprintf@@Base+0x1848>
   16a40:	mov	x1, #0x0                   	// #0
   16a44:	add	x2, x2, #0x6e0
   16a48:	b	16a54 <hash_delete@@Base+0x75c>
   16a4c:	cmp	x1, #0xe8
   16a50:	b.eq	16a20 <hash_delete@@Base+0x728>  // b.none
   16a54:	ldr	x19, [x2, x1, lsl #3]
   16a58:	add	x1, x1, #0x1
   16a5c:	cmp	x0, x19
   16a60:	b.hi	16a4c <hash_delete@@Base+0x754>  // b.pmore
   16a64:	cmp	x20, x19
   16a68:	b.cs	16a20 <hash_delete@@Base+0x728>  // b.hs, b.nlast
   16a6c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   16a70:	cmp	x19, x0
   16a74:	b.hi	16a20 <hash_delete@@Base+0x728>  // b.pmore
   16a78:	mov	x0, x19
   16a7c:	mov	x1, #0x8                   	// #8
   16a80:	bl	a770 <calloc@plt>
   16a84:	cbz	x0, 16a20 <hash_delete@@Base+0x728>
   16a88:	cbz	x20, 16ac0 <hash_delete@@Base+0x7c8>
   16a8c:	sub	x20, x20, #0x1
   16a90:	ldr	x2, [x25, x20, lsl #3]
   16a94:	cbz	x2, 16a88 <hash_delete@@Base+0x790>
   16a98:	mov	x3, x2
   16a9c:	ldr	x2, [x2]
   16aa0:	ldr	x4, [x3, #8]
   16aa4:	udiv	x1, x4, x19
   16aa8:	msub	x1, x1, x19, x4
   16aac:	ldr	x4, [x0, x1, lsl #3]
   16ab0:	str	x4, [x3]
   16ab4:	str	x3, [x0, x1, lsl #3]
   16ab8:	cbnz	x2, 16a98 <hash_delete@@Base+0x7a0>
   16abc:	b	16a88 <hash_delete@@Base+0x790>
   16ac0:	stp	x0, x19, [x21, #40]
   16ac4:	mov	x0, x25
   16ac8:	bl	aa50 <free@plt>
   16acc:	b	16a20 <hash_delete@@Base+0x728>
   16ad0:	mov	w0, #0xffffffff            	// #-1
   16ad4:	b	16a24 <hash_delete@@Base+0x72c>

0000000000016ad8 <hash_pjw@@Base>:
   16ad8:	ldrb	w3, [x0]
   16adc:	cbz	w3, 16b04 <hash_pjw@@Base+0x2c>
   16ae0:	mov	x2, #0x0                   	// #0
   16ae4:	nop
   16ae8:	ror	x2, x2, #55
   16aec:	add	x2, x2, w3, uxtb
   16af0:	ldrb	w3, [x0, #1]!
   16af4:	cbnz	w3, 16ae8 <hash_pjw@@Base+0x10>
   16af8:	udiv	x0, x2, x1
   16afc:	msub	x0, x0, x1, x2
   16b00:	ret
   16b04:	mov	x0, #0x0                   	// #0
   16b08:	ret
   16b0c:	nop

0000000000016b10 <hash_pjw_bare@@Base>:
   16b10:	mov	x4, x0
   16b14:	cbz	x1, 16b48 <hash_pjw_bare@@Base+0x38>
   16b18:	mov	w2, #0x0                   	// #0
   16b1c:	mov	x0, #0x0                   	// #0
   16b20:	mov	x3, #0x0                   	// #0
   16b24:	nop
   16b28:	ldrb	w3, [x4, x3]
   16b2c:	add	w2, w2, #0x1
   16b30:	ror	x0, x0, #55
   16b34:	add	x0, x3, x0
   16b38:	cmp	x1, w2, uxtw
   16b3c:	mov	w3, w2
   16b40:	b.hi	16b28 <hash_pjw_bare@@Base+0x18>  // b.pmore
   16b44:	ret
   16b48:	mov	x0, #0x0                   	// #0
   16b4c:	ret
   16b50:	ldr	x0, [x0, #48]
   16b54:	ret
   16b58:	stp	x29, x30, [sp, #-48]!
   16b5c:	mov	x29, sp
   16b60:	stp	x19, x20, [sp, #16]
   16b64:	mov	x20, x1
   16b68:	mov	x19, x0
   16b6c:	stp	x21, x22, [sp, #32]
   16b70:	mov	x21, x1
   16b74:	ldr	x1, [x0, #24]
   16b78:	cbz	x1, 16b88 <hash_pjw_bare@@Base+0x78>
   16b7c:	mov	x0, x21
   16b80:	blr	x1
   16b84:	mov	x20, x0
   16b88:	ldp	x2, x1, [x19, #32]
   16b8c:	ldr	x22, [x19, #8]
   16b90:	udiv	x0, x20, x1
   16b94:	msub	x0, x0, x1, x20
   16b98:	ldr	x19, [x2, x0, lsl #3]
   16b9c:	cbz	x19, 16c0c <hash_pjw_bare@@Base+0xfc>
   16ba0:	cbnz	x22, 16bb0 <hash_pjw_bare@@Base+0xa0>
   16ba4:	b	16bf8 <hash_pjw_bare@@Base+0xe8>
   16ba8:	ldr	x19, [x19]
   16bac:	cbz	x19, 16c0c <hash_pjw_bare@@Base+0xfc>
   16bb0:	ldr	x2, [x19, #8]
   16bb4:	cmp	x2, x20
   16bb8:	b.ne	16ba8 <hash_pjw_bare@@Base+0x98>  // b.any
   16bbc:	ldr	x1, [x19, #16]
   16bc0:	mov	x0, x21
   16bc4:	blr	x22
   16bc8:	tst	w0, #0xff
   16bcc:	b.eq	16ba8 <hash_pjw_bare@@Base+0x98>  // b.none
   16bd0:	mov	w0, #0x1                   	// #1
   16bd4:	ldp	x19, x20, [sp, #16]
   16bd8:	ldp	x21, x22, [sp, #32]
   16bdc:	ldp	x29, x30, [sp], #48
   16be0:	ret
   16be4:	ldr	x0, [x19, #16]
   16be8:	cmp	x21, x0
   16bec:	b.eq	16bd0 <hash_pjw_bare@@Base+0xc0>  // b.none
   16bf0:	ldr	x19, [x19]
   16bf4:	cbz	x19, 16c0c <hash_pjw_bare@@Base+0xfc>
   16bf8:	ldr	x0, [x19, #8]
   16bfc:	cmp	x20, x0
   16c00:	b.eq	16be4 <hash_pjw_bare@@Base+0xd4>  // b.none
   16c04:	ldr	x19, [x19]
   16c08:	cbnz	x19, 16bf8 <hash_pjw_bare@@Base+0xe8>
   16c0c:	mov	w0, #0x0                   	// #0
   16c10:	ldp	x19, x20, [sp, #16]
   16c14:	ldp	x21, x22, [sp, #32]
   16c18:	ldp	x29, x30, [sp], #48
   16c1c:	ret
   16c20:	ldr	x1, [x0]
   16c24:	stp	x1, x0, [x8]
   16c28:	ldr	x1, [x0, #40]
   16c2c:	str	xzr, [x8, #24]
   16c30:	str	xzr, [x8, #40]
   16c34:	str	x1, [x8, #48]
   16c38:	ret
   16c3c:	nop
   16c40:	ret
   16c44:	nop
   16c48:	stp	x29, x30, [sp, #-64]!
   16c4c:	mov	x29, sp
   16c50:	stp	x23, x24, [sp, #48]
   16c54:	mov	x23, x0
   16c58:	ldr	x0, [x0, #48]
   16c5c:	ldr	x24, [x23, #32]
   16c60:	cbz	x0, 16cb4 <hash_pjw_bare@@Base+0x1a4>
   16c64:	stp	x21, x22, [sp, #32]
   16c68:	ldr	x22, [x23, #40]
   16c6c:	ldr	x21, [x23, #16]
   16c70:	cbz	x22, 16cf0 <hash_pjw_bare@@Base+0x1e0>
   16c74:	stp	x19, x20, [sp, #16]
   16c78:	sub	x22, x22, #0x1
   16c7c:	ldr	x19, [x24, x22, lsl #3]
   16c80:	cbz	x19, 16ca4 <hash_pjw_bare@@Base+0x194>
   16c84:	cbz	x21, 16ccc <hash_pjw_bare@@Base+0x1bc>
   16c88:	mov	x20, x19
   16c8c:	ldr	x19, [x19]
   16c90:	ldr	x0, [x20, #16]
   16c94:	blr	x21
   16c98:	mov	x0, x20
   16c9c:	bl	aa50 <free@plt>
   16ca0:	cbnz	x19, 16c88 <hash_pjw_bare@@Base+0x178>
   16ca4:	cbnz	x22, 16c78 <hash_pjw_bare@@Base+0x168>
   16ca8:	ldp	x19, x20, [sp, #16]
   16cac:	ldp	x21, x22, [sp, #32]
   16cb0:	ldr	x24, [x23, #32]
   16cb4:	mov	x0, x24
   16cb8:	bl	aa50 <free@plt>
   16cbc:	mov	x0, x23
   16cc0:	ldp	x23, x24, [sp, #48]
   16cc4:	ldp	x29, x30, [sp], #64
   16cc8:	b	aa50 <free@plt>
   16ccc:	mov	x0, x19
   16cd0:	ldr	x19, [x19]
   16cd4:	bl	aa50 <free@plt>
   16cd8:	cbz	x19, 16ca4 <hash_pjw_bare@@Base+0x194>
   16cdc:	mov	x0, x19
   16ce0:	ldr	x19, [x19]
   16ce4:	bl	aa50 <free@plt>
   16ce8:	cbnz	x19, 16ccc <hash_pjw_bare@@Base+0x1bc>
   16cec:	b	16ca4 <hash_pjw_bare@@Base+0x194>
   16cf0:	ldp	x21, x22, [sp, #32]
   16cf4:	b	16cb4 <hash_pjw_bare@@Base+0x1a4>
   16cf8:	stp	x29, x30, [sp, #-64]!
   16cfc:	mov	x29, sp
   16d00:	stp	x21, x22, [sp, #32]
   16d04:	mov	x22, x1
   16d08:	mov	x21, x1
   16d0c:	ldr	x1, [x0, #24]
   16d10:	stp	x19, x20, [sp, #16]
   16d14:	stp	x23, x24, [sp, #48]
   16d18:	mov	x23, x0
   16d1c:	cbz	x1, 16d2c <hash_pjw_bare@@Base+0x21c>
   16d20:	mov	x0, x22
   16d24:	blr	x1
   16d28:	mov	x21, x0
   16d2c:	ldp	x1, x2, [x23, #32]
   16d30:	ldr	x24, [x23, #8]
   16d34:	udiv	x0, x21, x2
   16d38:	msub	x0, x0, x2, x21
   16d3c:	add	x20, x1, x0, lsl #3
   16d40:	ldr	x19, [x1, x0, lsl #3]
   16d44:	cbz	x19, 16d8c <hash_pjw_bare@@Base+0x27c>
   16d48:	cbnz	x24, 16d5c <hash_pjw_bare@@Base+0x24c>
   16d4c:	b	16dc0 <hash_pjw_bare@@Base+0x2b0>
   16d50:	mov	x20, x19
   16d54:	ldr	x19, [x19]
   16d58:	cbz	x19, 16d8c <hash_pjw_bare@@Base+0x27c>
   16d5c:	ldr	x2, [x19, #8]
   16d60:	cmp	x2, x21
   16d64:	b.ne	16d50 <hash_pjw_bare@@Base+0x240>  // b.any
   16d68:	ldr	x1, [x19, #16]
   16d6c:	mov	x0, x22
   16d70:	blr	x24
   16d74:	tst	w0, #0xff
   16d78:	b.ne	16dd0 <hash_pjw_bare@@Base+0x2c0>  // b.any
   16d7c:	ldr	x19, [x20]
   16d80:	mov	x20, x19
   16d84:	ldr	x19, [x19]
   16d88:	cbnz	x19, 16d5c <hash_pjw_bare@@Base+0x24c>
   16d8c:	mov	w0, #0x0                   	// #0
   16d90:	ldp	x19, x20, [sp, #16]
   16d94:	ldp	x21, x22, [sp, #32]
   16d98:	ldp	x23, x24, [sp, #48]
   16d9c:	ldp	x29, x30, [sp], #64
   16da0:	ret
   16da4:	ldr	x0, [x19, #16]
   16da8:	cmp	x22, x0
   16dac:	b.eq	16dd0 <hash_pjw_bare@@Base+0x2c0>  // b.none
   16db0:	ldr	x19, [x20]
   16db4:	mov	x20, x19
   16db8:	ldr	x19, [x19]
   16dbc:	cbz	x19, 16d8c <hash_pjw_bare@@Base+0x27c>
   16dc0:	ldr	x1, [x19, #8]
   16dc4:	cmp	x21, x1
   16dc8:	b.ne	16db4 <hash_pjw_bare@@Base+0x2a4>  // b.any
   16dcc:	b	16da4 <hash_pjw_bare@@Base+0x294>
   16dd0:	ldr	x1, [x19]
   16dd4:	ldr	x0, [x23, #48]
   16dd8:	str	x1, [x20]
   16ddc:	ldr	x1, [x23, #16]
   16de0:	sub	x0, x0, #0x1
   16de4:	str	x0, [x23, #48]
   16de8:	cbz	x1, 16df4 <hash_pjw_bare@@Base+0x2e4>
   16dec:	ldr	x0, [x19, #16]
   16df0:	blr	x1
   16df4:	mov	x0, x19
   16df8:	bl	aa50 <free@plt>
   16dfc:	mov	w0, #0x1                   	// #1
   16e00:	ldp	x19, x20, [sp, #16]
   16e04:	ldp	x21, x22, [sp, #32]
   16e08:	ldp	x23, x24, [sp, #48]
   16e0c:	ldp	x29, x30, [sp], #64
   16e10:	ret
   16e14:	nop
   16e18:	stp	x29, x30, [sp, #-64]!
   16e1c:	mov	x29, sp
   16e20:	stp	x19, x20, [sp, #16]
   16e24:	mov	x20, x2
   16e28:	stp	x21, x22, [sp, #32]
   16e2c:	mov	x22, x1
   16e30:	mov	x21, x3
   16e34:	str	x23, [sp, #48]
   16e38:	mov	x23, x0
   16e3c:	mov	x0, #0x38                  	// #56
   16e40:	bl	a5f0 <malloc@plt>
   16e44:	mov	x19, x0
   16e48:	cbz	x0, 16e70 <hash_pjw_bare@@Base+0x360>
   16e4c:	mov	x0, #0xb                   	// #11
   16e50:	stp	x23, x22, [x19]
   16e54:	mov	x1, #0x8                   	// #8
   16e58:	stp	x21, x20, [x19, #16]
   16e5c:	str	x0, [x19, #40]
   16e60:	bl	a770 <calloc@plt>
   16e64:	str	x0, [x19, #32]
   16e68:	cbz	x0, 16e88 <hash_pjw_bare@@Base+0x378>
   16e6c:	str	xzr, [x19, #48]
   16e70:	mov	x0, x19
   16e74:	ldp	x19, x20, [sp, #16]
   16e78:	ldp	x21, x22, [sp, #32]
   16e7c:	ldr	x23, [sp, #48]
   16e80:	ldp	x29, x30, [sp], #64
   16e84:	ret
   16e88:	mov	x0, x19
   16e8c:	mov	x19, #0x0                   	// #0
   16e90:	bl	aa50 <free@plt>
   16e94:	b	16e70 <hash_pjw_bare@@Base+0x360>
   16e98:	ldr	x2, [x0, #24]
   16e9c:	mov	x3, x0
   16ea0:	cbz	x2, 16ebc <hash_pjw_bare@@Base+0x3ac>
   16ea4:	ldr	x0, [x2, #16]
   16ea8:	str	x0, [x1]
   16eac:	mov	w0, #0x1                   	// #1
   16eb0:	ldr	x1, [x2]
   16eb4:	str	x1, [x3, #24]
   16eb8:	ret
   16ebc:	ldp	x2, x5, [x0, #40]
   16ec0:	cmp	x5, x2
   16ec4:	b.ls	16f08 <hash_pjw_bare@@Base+0x3f8>  // b.plast
   16ec8:	ldr	x0, [x0, #8]
   16ecc:	ldr	x0, [x0, #32]
   16ed0:	sub	x0, x0, #0x8
   16ed4:	b	16edc <hash_pjw_bare@@Base+0x3cc>
   16ed8:	b.eq	16f08 <hash_pjw_bare@@Base+0x3f8>  // b.none
   16edc:	add	x2, x2, #0x1
   16ee0:	cmp	x5, x2
   16ee4:	ldr	x4, [x0, x2, lsl #3]
   16ee8:	cbz	x4, 16ed8 <hash_pjw_bare@@Base+0x3c8>
   16eec:	ldr	x0, [x4, #16]
   16ef0:	str	x0, [x1]
   16ef4:	mov	w0, #0x1                   	// #1
   16ef8:	ldr	x1, [x4]
   16efc:	str	x1, [x3, #24]
   16f00:	str	x2, [x3, #40]
   16f04:	ret
   16f08:	mov	w0, #0x0                   	// #0
   16f0c:	str	x5, [x3, #40]
   16f10:	ret
   16f14:	nop
   16f18:	stp	x29, x30, [sp, #-64]!
   16f1c:	mov	x29, sp
   16f20:	stp	x19, x20, [sp, #16]
   16f24:	mov	x20, x1
   16f28:	stp	x21, x22, [sp, #32]
   16f2c:	mov	x22, x1
   16f30:	mov	x21, x0
   16f34:	ldr	x1, [x0, #24]
   16f38:	stp	x23, x24, [sp, #48]
   16f3c:	cbz	x1, 16f4c <hash_pjw_bare@@Base+0x43c>
   16f40:	mov	x0, x22
   16f44:	blr	x1
   16f48:	mov	x20, x0
   16f4c:	ldp	x1, x0, [x21, #32]
   16f50:	ldr	x24, [x21, #8]
   16f54:	udiv	x23, x20, x0
   16f58:	msub	x23, x23, x0, x20
   16f5c:	ldr	x19, [x1, x23, lsl #3]
   16f60:	cbz	x19, 16fd8 <hash_pjw_bare@@Base+0x4c8>
   16f64:	cbnz	x24, 16f74 <hash_pjw_bare@@Base+0x464>
   16f68:	b	16fc0 <hash_pjw_bare@@Base+0x4b0>
   16f6c:	ldr	x19, [x19]
   16f70:	cbz	x19, 16fd8 <hash_pjw_bare@@Base+0x4c8>
   16f74:	ldr	x2, [x19, #8]
   16f78:	cmp	x2, x20
   16f7c:	b.ne	16f6c <hash_pjw_bare@@Base+0x45c>  // b.any
   16f80:	ldr	x1, [x19, #16]
   16f84:	mov	x0, x22
   16f88:	blr	x24
   16f8c:	tst	w0, #0xff
   16f90:	b.eq	16f6c <hash_pjw_bare@@Base+0x45c>  // b.none
   16f94:	mov	w0, #0x0                   	// #0
   16f98:	ldp	x19, x20, [sp, #16]
   16f9c:	ldp	x21, x22, [sp, #32]
   16fa0:	ldp	x23, x24, [sp, #48]
   16fa4:	ldp	x29, x30, [sp], #64
   16fa8:	ret
   16fac:	ldr	x0, [x19, #16]
   16fb0:	cmp	x22, x0
   16fb4:	b.eq	16f94 <hash_pjw_bare@@Base+0x484>  // b.none
   16fb8:	ldr	x19, [x19]
   16fbc:	cbz	x19, 16fd8 <hash_pjw_bare@@Base+0x4c8>
   16fc0:	ldr	x0, [x19, #8]
   16fc4:	cmp	x20, x0
   16fc8:	b.eq	16fac <hash_pjw_bare@@Base+0x49c>  // b.none
   16fcc:	ldr	x19, [x19]
   16fd0:	cbnz	x19, 16fc0 <hash_pjw_bare@@Base+0x4b0>
   16fd4:	nop
   16fd8:	mov	x0, #0x18                  	// #24
   16fdc:	bl	a5f0 <malloc@plt>
   16fe0:	cbz	x0, 170c8 <hash_pjw_bare@@Base+0x5b8>
   16fe4:	ldr	x24, [x21, #32]
   16fe8:	stp	x20, x22, [x0, #8]
   16fec:	ldr	x2, [x21, #48]
   16ff0:	ldr	x1, [x24, x23, lsl #3]
   16ff4:	add	x2, x2, #0x1
   16ff8:	str	x1, [x0]
   16ffc:	lsr	x1, x2, #1
   17000:	ldr	x20, [x21, #40]
   17004:	str	x0, [x24, x23, lsl #3]
   17008:	adds	x0, x2, x1
   1700c:	str	x2, [x21, #48]
   17010:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   17014:	cmp	x20, x0
   17018:	b.cc	17034 <hash_pjw_bare@@Base+0x524>  // b.lo, b.ul, b.last
   1701c:	mov	w0, #0x1                   	// #1
   17020:	ldp	x19, x20, [sp, #16]
   17024:	ldp	x21, x22, [sp, #32]
   17028:	ldp	x23, x24, [sp, #48]
   1702c:	ldp	x29, x30, [sp], #64
   17030:	ret
   17034:	adrp	x2, 32000 <vasnprintf@@Base+0x1848>
   17038:	mov	x1, #0x0                   	// #0
   1703c:	add	x2, x2, #0xe20
   17040:	b	1704c <hash_pjw_bare@@Base+0x53c>
   17044:	cmp	x1, #0xe8
   17048:	b.eq	1701c <hash_pjw_bare@@Base+0x50c>  // b.none
   1704c:	ldr	x19, [x2, x1, lsl #3]
   17050:	add	x1, x1, #0x1
   17054:	cmp	x0, x19
   17058:	b.hi	17044 <hash_pjw_bare@@Base+0x534>  // b.pmore
   1705c:	cmp	x20, x19
   17060:	b.cs	1701c <hash_pjw_bare@@Base+0x50c>  // b.hs, b.nlast
   17064:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   17068:	cmp	x19, x0
   1706c:	b.hi	1701c <hash_pjw_bare@@Base+0x50c>  // b.pmore
   17070:	mov	x0, x19
   17074:	mov	x1, #0x8                   	// #8
   17078:	bl	a770 <calloc@plt>
   1707c:	cbz	x0, 1701c <hash_pjw_bare@@Base+0x50c>
   17080:	cbz	x20, 170b8 <hash_pjw_bare@@Base+0x5a8>
   17084:	sub	x20, x20, #0x1
   17088:	ldr	x2, [x24, x20, lsl #3]
   1708c:	cbz	x2, 17080 <hash_pjw_bare@@Base+0x570>
   17090:	mov	x3, x2
   17094:	ldr	x2, [x2]
   17098:	ldr	x4, [x3, #8]
   1709c:	udiv	x1, x4, x19
   170a0:	msub	x1, x1, x19, x4
   170a4:	ldr	x4, [x0, x1, lsl #3]
   170a8:	str	x4, [x3]
   170ac:	str	x3, [x0, x1, lsl #3]
   170b0:	cbnz	x2, 17090 <hash_pjw_bare@@Base+0x580>
   170b4:	b	17080 <hash_pjw_bare@@Base+0x570>
   170b8:	stp	x0, x19, [x21, #32]
   170bc:	mov	x0, x24
   170c0:	bl	aa50 <free@plt>
   170c4:	b	1701c <hash_pjw_bare@@Base+0x50c>
   170c8:	mov	w0, #0xffffffff            	// #-1
   170cc:	b	17020 <hash_pjw_bare@@Base+0x510>

00000000000170d0 <triple_hash@@Base>:
   170d0:	stp	x29, x30, [sp, #-32]!
   170d4:	mov	x29, sp
   170d8:	stp	x19, x20, [sp, #16]
   170dc:	mov	x20, x0
   170e0:	mov	x19, x1
   170e4:	ldr	x0, [x0]
   170e8:	bl	ac50 <hash_pjw@plt>
   170ec:	ldr	x1, [x20, #8]
   170f0:	eor	x0, x0, x1
   170f4:	udiv	x1, x0, x19
   170f8:	msub	x0, x1, x19, x0
   170fc:	ldp	x19, x20, [sp, #16]
   17100:	ldp	x29, x30, [sp], #32
   17104:	ret

0000000000017108 <triple_hash_no_name@@Base>:
   17108:	ldr	x0, [x0, #8]
   1710c:	udiv	x2, x0, x1
   17110:	msub	x0, x2, x1, x0
   17114:	ret

0000000000017118 <triple_compare@@Base>:
   17118:	mov	x2, x0
   1711c:	ldr	x0, [x1, #8]
   17120:	ldr	x3, [x2, #8]
   17124:	cmp	x3, x0
   17128:	b.eq	17134 <triple_compare@@Base+0x1c>  // b.none
   1712c:	mov	w0, #0x0                   	// #0
   17130:	ret
   17134:	ldr	x3, [x1, #16]
   17138:	mov	w0, #0x0                   	// #0
   1713c:	ldr	x4, [x2, #16]
   17140:	cmp	x4, x3
   17144:	b.ne	17130 <triple_compare@@Base+0x18>  // b.any
   17148:	ldr	x1, [x1]
   1714c:	ldr	x0, [x2]
   17150:	b	a750 <same_name@plt>
   17154:	nop

0000000000017158 <triple_compare_ino_str@@Base>:
   17158:	mov	x2, x0
   1715c:	ldr	x3, [x0, #8]
   17160:	ldr	x0, [x1, #8]
   17164:	cmp	x3, x0
   17168:	b.eq	17174 <triple_compare_ino_str@@Base+0x1c>  // b.none
   1716c:	mov	w0, #0x0                   	// #0
   17170:	ret
   17174:	ldr	x3, [x1, #16]
   17178:	mov	w0, #0x0                   	// #0
   1717c:	ldr	x4, [x2, #16]
   17180:	cmp	x4, x3
   17184:	b.eq	1718c <triple_compare_ino_str@@Base+0x34>  // b.none
   17188:	ret
   1718c:	stp	x29, x30, [sp, #-16]!
   17190:	mov	x29, sp
   17194:	ldr	x1, [x1]
   17198:	ldr	x0, [x2]
   1719c:	bl	a9b0 <strcmp@plt>
   171a0:	cmp	w0, #0x0
   171a4:	cset	w0, eq  // eq = none
   171a8:	ldp	x29, x30, [sp], #16
   171ac:	ret

00000000000171b0 <triple_free@@Base>:
   171b0:	stp	x29, x30, [sp, #-32]!
   171b4:	mov	x29, sp
   171b8:	str	x19, [sp, #16]
   171bc:	mov	x19, x0
   171c0:	ldr	x0, [x0]
   171c4:	bl	aa50 <free@plt>
   171c8:	mov	x0, x19
   171cc:	ldr	x19, [sp, #16]
   171d0:	ldp	x29, x30, [sp], #32
   171d4:	b	aa50 <free@plt>

00000000000171d8 <idpriv_drop@@Base>:
   171d8:	stp	x29, x30, [sp, #-64]!
   171dc:	mov	x29, sp
   171e0:	stp	x19, x20, [sp, #16]
   171e4:	bl	a4a0 <getuid@plt>
   171e8:	mov	w19, w0
   171ec:	bl	aa90 <getgid@plt>
   171f0:	mov	w20, w0
   171f4:	mov	w2, w0
   171f8:	mov	w1, w0
   171fc:	bl	aec0 <setresgid@plt>
   17200:	tbnz	w0, #31, 17298 <idpriv_drop@@Base+0xc0>
   17204:	mov	w2, w19
   17208:	mov	w1, w19
   1720c:	mov	w0, w19
   17210:	bl	ad10 <setresuid@plt>
   17214:	tbnz	w0, #31, 17298 <idpriv_drop@@Base+0xc0>
   17218:	add	x2, sp, #0x30
   1721c:	add	x1, sp, #0x2c
   17220:	add	x0, sp, #0x28
   17224:	bl	a420 <getresuid@plt>
   17228:	tbnz	w0, #31, 172a0 <idpriv_drop@@Base+0xc8>
   1722c:	ldr	w0, [sp, #40]
   17230:	cmp	w19, w0
   17234:	b.ne	172a0 <idpriv_drop@@Base+0xc8>  // b.any
   17238:	ldr	w0, [sp, #44]
   1723c:	cmp	w19, w0
   17240:	b.ne	172a0 <idpriv_drop@@Base+0xc8>  // b.any
   17244:	ldr	w0, [sp, #48]
   17248:	cmp	w19, w0
   1724c:	b.ne	172a0 <idpriv_drop@@Base+0xc8>  // b.any
   17250:	add	x2, sp, #0x3c
   17254:	add	x1, sp, #0x38
   17258:	add	x0, sp, #0x34
   1725c:	bl	acc0 <getresgid@plt>
   17260:	tbnz	w0, #31, 172a0 <idpriv_drop@@Base+0xc8>
   17264:	ldr	w0, [sp, #52]
   17268:	cmp	w20, w0
   1726c:	b.ne	172a0 <idpriv_drop@@Base+0xc8>  // b.any
   17270:	ldr	w0, [sp, #56]
   17274:	cmp	w20, w0
   17278:	b.ne	172a0 <idpriv_drop@@Base+0xc8>  // b.any
   1727c:	ldr	w0, [sp, #60]
   17280:	cmp	w20, w0
   17284:	b.ne	172a0 <idpriv_drop@@Base+0xc8>  // b.any
   17288:	mov	w0, #0x0                   	// #0
   1728c:	ldp	x19, x20, [sp, #16]
   17290:	ldp	x29, x30, [sp], #64
   17294:	ret
   17298:	mov	w0, #0xffffffff            	// #-1
   1729c:	b	1728c <idpriv_drop@@Base+0xb4>
   172a0:	bl	a900 <abort@plt>
   172a4:	nop

00000000000172a8 <idpriv_temp_drop@@Base>:
   172a8:	stp	x29, x30, [sp, #-96]!
   172ac:	mov	x29, sp
   172b0:	stp	x21, x22, [sp, #32]
   172b4:	adrp	x21, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
   172b8:	stp	x19, x20, [sp, #16]
   172bc:	str	x23, [sp, #48]
   172c0:	bl	a4a0 <getuid@plt>
   172c4:	mov	w20, w0
   172c8:	bl	aa90 <getgid@plt>
   172cc:	ldr	w23, [x21, #532]
   172d0:	mov	w22, w0
   172d4:	cmn	w23, #0x1
   172d8:	b.eq	1739c <idpriv_temp_drop@@Base+0xf4>  // b.none
   172dc:	add	x21, x21, #0x214
   172e0:	ldr	w19, [x21, #4]
   172e4:	cmn	w19, #0x1
   172e8:	b.eq	173b8 <idpriv_temp_drop@@Base+0x110>  // b.none
   172ec:	mov	w2, w19
   172f0:	mov	w1, w22
   172f4:	mov	w0, #0xffffffff            	// #-1
   172f8:	bl	aec0 <setresgid@plt>
   172fc:	tbnz	w0, #31, 173c8 <idpriv_temp_drop@@Base+0x120>
   17300:	mov	w2, w23
   17304:	mov	w1, w20
   17308:	mov	w0, #0xffffffff            	// #-1
   1730c:	bl	ad10 <setresuid@plt>
   17310:	tbnz	w0, #31, 173c8 <idpriv_temp_drop@@Base+0x120>
   17314:	add	x2, sp, #0x50
   17318:	add	x1, sp, #0x4c
   1731c:	add	x0, sp, #0x48
   17320:	bl	a420 <getresuid@plt>
   17324:	tbnz	w0, #31, 173d0 <idpriv_temp_drop@@Base+0x128>
   17328:	ldr	w0, [sp, #72]
   1732c:	cmp	w20, w0
   17330:	b.ne	173d0 <idpriv_temp_drop@@Base+0x128>  // b.any
   17334:	ldr	w0, [sp, #76]
   17338:	cmp	w20, w0
   1733c:	b.ne	173d0 <idpriv_temp_drop@@Base+0x128>  // b.any
   17340:	ldr	w0, [sp, #80]
   17344:	cmp	w23, w0
   17348:	b.ne	173d0 <idpriv_temp_drop@@Base+0x128>  // b.any
   1734c:	add	x2, sp, #0x5c
   17350:	add	x1, sp, #0x58
   17354:	add	x0, sp, #0x54
   17358:	bl	acc0 <getresgid@plt>
   1735c:	tbnz	w0, #31, 173d0 <idpriv_temp_drop@@Base+0x128>
   17360:	ldr	w0, [sp, #84]
   17364:	cmp	w22, w0
   17368:	b.ne	173d0 <idpriv_temp_drop@@Base+0x128>  // b.any
   1736c:	ldr	w0, [sp, #88]
   17370:	cmp	w22, w0
   17374:	b.ne	173d0 <idpriv_temp_drop@@Base+0x128>  // b.any
   17378:	ldr	w0, [sp, #92]
   1737c:	cmp	w0, w19
   17380:	b.ne	173d0 <idpriv_temp_drop@@Base+0x128>  // b.any
   17384:	mov	w0, #0x0                   	// #0
   17388:	ldp	x19, x20, [sp, #16]
   1738c:	ldp	x21, x22, [sp, #32]
   17390:	ldr	x23, [sp, #48]
   17394:	ldp	x29, x30, [sp], #96
   17398:	ret
   1739c:	bl	a3f0 <geteuid@plt>
   173a0:	str	w0, [x21, #532]
   173a4:	add	x21, x21, #0x214
   173a8:	mov	w23, w0
   173ac:	ldr	w19, [x21, #4]
   173b0:	cmn	w19, #0x1
   173b4:	b.ne	172ec <idpriv_temp_drop@@Base+0x44>  // b.any
   173b8:	bl	a3b0 <getegid@plt>
   173bc:	mov	w19, w0
   173c0:	str	w0, [x21, #4]
   173c4:	b	172ec <idpriv_temp_drop@@Base+0x44>
   173c8:	mov	w0, #0xffffffff            	// #-1
   173cc:	b	17388 <idpriv_temp_drop@@Base+0xe0>
   173d0:	bl	a900 <abort@plt>
   173d4:	nop

00000000000173d8 <idpriv_temp_restore@@Base>:
   173d8:	stp	x29, x30, [sp, #-80]!
   173dc:	mov	x29, sp
   173e0:	stp	x19, x20, [sp, #16]
   173e4:	stp	x21, x22, [sp, #32]
   173e8:	bl	a4a0 <getuid@plt>
   173ec:	mov	w22, w0
   173f0:	bl	aa90 <getgid@plt>
   173f4:	adrp	x1, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
   173f8:	ldr	w19, [x1, #532]
   173fc:	cmn	w19, #0x1
   17400:	b.eq	174cc <idpriv_temp_restore@@Base+0xf4>  // b.none
   17404:	add	x2, x1, #0x214
   17408:	ldr	w20, [x2, #4]
   1740c:	cmn	w20, #0x1
   17410:	b.eq	174cc <idpriv_temp_restore@@Base+0xf4>  // b.none
   17414:	mov	w21, w0
   17418:	mov	w2, #0xffffffff            	// #-1
   1741c:	mov	w1, w19
   17420:	mov	w0, w2
   17424:	bl	ad10 <setresuid@plt>
   17428:	tbnz	w0, #31, 174c4 <idpriv_temp_restore@@Base+0xec>
   1742c:	mov	w2, #0xffffffff            	// #-1
   17430:	mov	w1, w20
   17434:	mov	w0, w2
   17438:	bl	aec0 <setresgid@plt>
   1743c:	tbnz	w0, #31, 174c4 <idpriv_temp_restore@@Base+0xec>
   17440:	add	x2, sp, #0x40
   17444:	add	x1, sp, #0x3c
   17448:	add	x0, sp, #0x38
   1744c:	bl	a420 <getresuid@plt>
   17450:	tbnz	w0, #31, 174cc <idpriv_temp_restore@@Base+0xf4>
   17454:	ldr	w0, [sp, #56]
   17458:	cmp	w22, w0
   1745c:	b.ne	174cc <idpriv_temp_restore@@Base+0xf4>  // b.any
   17460:	ldr	w0, [sp, #60]
   17464:	cmp	w19, w0
   17468:	b.ne	174cc <idpriv_temp_restore@@Base+0xf4>  // b.any
   1746c:	ldr	w0, [sp, #64]
   17470:	cmp	w19, w0
   17474:	b.ne	174cc <idpriv_temp_restore@@Base+0xf4>  // b.any
   17478:	add	x2, sp, #0x4c
   1747c:	add	x1, sp, #0x48
   17480:	add	x0, sp, #0x44
   17484:	bl	acc0 <getresgid@plt>
   17488:	tbnz	w0, #31, 174cc <idpriv_temp_restore@@Base+0xf4>
   1748c:	ldr	w0, [sp, #68]
   17490:	cmp	w21, w0
   17494:	b.ne	174cc <idpriv_temp_restore@@Base+0xf4>  // b.any
   17498:	ldr	w0, [sp, #72]
   1749c:	cmp	w20, w0
   174a0:	b.ne	174cc <idpriv_temp_restore@@Base+0xf4>  // b.any
   174a4:	ldr	w0, [sp, #76]
   174a8:	cmp	w20, w0
   174ac:	b.ne	174cc <idpriv_temp_restore@@Base+0xf4>  // b.any
   174b0:	mov	w0, #0x0                   	// #0
   174b4:	ldp	x19, x20, [sp, #16]
   174b8:	ldp	x21, x22, [sp, #32]
   174bc:	ldp	x29, x30, [sp], #80
   174c0:	ret
   174c4:	mov	w0, #0xffffffff            	// #-1
   174c8:	b	174b4 <idpriv_temp_restore@@Base+0xdc>
   174cc:	bl	a900 <abort@plt>
   174d0:	ldr	x0, [x0, #96]
   174d4:	ret
   174d8:	ldr	x0, [x1, #32]
   174dc:	ret
   174e0:	add	x2, x0, #0x38
   174e4:	ldr	x0, [x1, #16]
   174e8:	cmp	x0, x2
   174ec:	csel	x0, x0, xzr, ne  // ne = any
   174f0:	ret
   174f4:	nop
   174f8:	add	x2, x0, #0x38
   174fc:	ldr	x0, [x1, #24]
   17500:	cmp	x0, x2
   17504:	csel	x0, x0, xzr, ne  // ne = any
   17508:	ret
   1750c:	nop
   17510:	ldr	x2, [x0]
   17514:	stp	x2, x0, [x8]
   17518:	add	x1, x0, #0x38
   1751c:	ldr	x2, [x0, #72]
   17520:	str	x2, [x8, #24]
   17524:	str	x1, [x8, #32]
   17528:	ret
   1752c:	nop
   17530:	mov	x3, x0
   17534:	ldp	x0, x4, [x0, #24]
   17538:	cmp	x0, x4
   1753c:	b.eq	17560 <idpriv_temp_restore@@Base+0x188>  // b.none
   17540:	ldr	x4, [x0, #32]
   17544:	str	x4, [x1]
   17548:	cbz	x2, 17550 <idpriv_temp_restore@@Base+0x178>
   1754c:	str	x0, [x2]
   17550:	ldr	x1, [x0, #16]
   17554:	mov	w0, #0x1                   	// #1
   17558:	str	x1, [x3, #24]
   1755c:	ret
   17560:	mov	w0, #0x0                   	// #0
   17564:	ret
   17568:	ret
   1756c:	nop
   17570:	stp	x29, x30, [sp, #-48]!
   17574:	mov	x29, sp
   17578:	stp	x19, x20, [sp, #16]
   1757c:	ldr	x19, [x0, #72]
   17580:	stp	x21, x22, [sp, #32]
   17584:	add	x22, x0, #0x38
   17588:	cmp	x19, x22
   1758c:	b.eq	175c0 <idpriv_temp_restore@@Base+0x1e8>  // b.none
   17590:	mov	x21, x1
   17594:	mov	x20, x2
   17598:	b	175ac <idpriv_temp_restore@@Base+0x1d4>
   1759c:	b.eq	175c4 <idpriv_temp_restore@@Base+0x1ec>  // b.none
   175a0:	ldr	x19, [x19, #16]
   175a4:	cmp	x19, x22
   175a8:	b.eq	175c0 <idpriv_temp_restore@@Base+0x1e8>  // b.none
   175ac:	ldr	x0, [x19, #32]
   175b0:	mov	x1, x20
   175b4:	blr	x21
   175b8:	cmp	w0, #0x0
   175bc:	b.le	1759c <idpriv_temp_restore@@Base+0x1c4>
   175c0:	mov	x19, #0x0                   	// #0
   175c4:	mov	x0, x19
   175c8:	ldp	x19, x20, [sp, #16]
   175cc:	ldp	x21, x22, [sp, #32]
   175d0:	ldp	x29, x30, [sp], #48
   175d4:	ret
   175d8:	stp	x29, x30, [sp, #-64]!
   175dc:	mov	x29, sp
   175e0:	stp	x19, x20, [sp, #16]
   175e4:	ldr	x19, [x0, #72]
   175e8:	str	x23, [sp, #48]
   175ec:	add	x23, x0, #0x38
   175f0:	cmp	x19, x23
   175f4:	b.eq	17638 <idpriv_temp_restore@@Base+0x260>  // b.none
   175f8:	mov	x20, #0x0                   	// #0
   175fc:	stp	x21, x22, [sp, #32]
   17600:	mov	x21, x1
   17604:	mov	x22, x2
   17608:	b	17620 <idpriv_temp_restore@@Base+0x248>
   1760c:	b.eq	17650 <idpriv_temp_restore@@Base+0x278>  // b.none
   17610:	ldr	x19, [x19, #16]
   17614:	add	x20, x20, #0x1
   17618:	cmp	x19, x23
   1761c:	b.eq	17634 <idpriv_temp_restore@@Base+0x25c>  // b.none
   17620:	ldr	x0, [x19, #32]
   17624:	mov	x1, x22
   17628:	blr	x21
   1762c:	cmp	w0, #0x0
   17630:	b.le	1760c <idpriv_temp_restore@@Base+0x234>
   17634:	ldp	x21, x22, [sp, #32]
   17638:	mov	x20, #0xffffffffffffffff    	// #-1
   1763c:	mov	x0, x20
   17640:	ldp	x19, x20, [sp, #16]
   17644:	ldr	x23, [sp, #48]
   17648:	ldp	x29, x30, [sp], #64
   1764c:	ret
   17650:	mov	x0, x20
   17654:	ldp	x19, x20, [sp, #16]
   17658:	ldp	x21, x22, [sp, #32]
   1765c:	ldr	x23, [sp, #48]
   17660:	ldp	x29, x30, [sp], #64
   17664:	ret
   17668:	stp	x29, x30, [sp, #-64]!
   1766c:	cmp	x2, x3
   17670:	mov	x29, sp
   17674:	ldr	x5, [x0, #96]
   17678:	stp	x19, x20, [sp, #16]
   1767c:	ccmp	x5, x3, #0x0, ls  // ls = plast
   17680:	b.cc	17748 <idpriv_temp_restore@@Base+0x370>  // b.lo, b.ul, b.last
   17684:	mov	x20, x2
   17688:	subs	x3, x3, x2
   1768c:	b.eq	176fc <idpriv_temp_restore@@Base+0x324>  // b.none
   17690:	stp	x21, x22, [sp, #32]
   17694:	mov	x22, x1
   17698:	sub	x1, x5, #0x1
   1769c:	str	x23, [sp, #48]
   176a0:	mov	x23, x4
   176a4:	cmp	x2, x1, lsr #1
   176a8:	b.hi	1770c <idpriv_temp_restore@@Base+0x334>  // b.pmore
   176ac:	ldr	x19, [x0, #72]
   176b0:	cbz	x2, 176c4 <idpriv_temp_restore@@Base+0x2ec>
   176b4:	mov	x0, x2
   176b8:	subs	x0, x0, #0x1
   176bc:	ldr	x19, [x19, #16]
   176c0:	b.ne	176b8 <idpriv_temp_restore@@Base+0x2e0>  // b.any
   176c4:	add	x21, x3, x20
   176c8:	b	176e0 <idpriv_temp_restore@@Base+0x308>
   176cc:	b.eq	17730 <idpriv_temp_restore@@Base+0x358>  // b.none
   176d0:	add	x20, x20, #0x1
   176d4:	cmp	x21, x20
   176d8:	ldr	x19, [x19, #16]
   176dc:	b.eq	176f4 <idpriv_temp_restore@@Base+0x31c>  // b.none
   176e0:	ldr	x0, [x19, #32]
   176e4:	mov	x1, x23
   176e8:	blr	x22
   176ec:	cmp	w0, #0x0
   176f0:	b.le	176cc <idpriv_temp_restore@@Base+0x2f4>
   176f4:	ldp	x21, x22, [sp, #32]
   176f8:	ldr	x23, [sp, #48]
   176fc:	mov	x0, #0xffffffffffffffff    	// #-1
   17700:	ldp	x19, x20, [sp, #16]
   17704:	ldp	x29, x30, [sp], #64
   17708:	ret
   1770c:	mvn	x2, x2
   17710:	adds	x2, x2, x5
   17714:	ldr	x19, [x0, #80]
   17718:	b.eq	176c4 <idpriv_temp_restore@@Base+0x2ec>  // b.none
   1771c:	nop
   17720:	subs	x2, x2, #0x1
   17724:	ldr	x19, [x19, #24]
   17728:	b.ne	17720 <idpriv_temp_restore@@Base+0x348>  // b.any
   1772c:	b	176c4 <idpriv_temp_restore@@Base+0x2ec>
   17730:	mov	x0, x20
   17734:	ldp	x19, x20, [sp, #16]
   17738:	ldp	x21, x22, [sp, #32]
   1773c:	ldr	x23, [sp, #48]
   17740:	ldp	x29, x30, [sp], #64
   17744:	ret
   17748:	stp	x21, x22, [sp, #32]
   1774c:	str	x23, [sp, #48]
   17750:	bl	a900 <abort@plt>
   17754:	nop
   17758:	stp	x29, x30, [sp, #-48]!
   1775c:	mov	x29, sp
   17760:	ldr	x5, [x0, #96]
   17764:	stp	x19, x20, [sp, #16]
   17768:	cmp	x5, x3
   1776c:	ccmp	x2, x3, #0x2, cs  // cs = hs, nlast
   17770:	b.hi	17834 <idpriv_temp_restore@@Base+0x45c>  // b.pmore
   17774:	subs	x20, x3, x2
   17778:	b.eq	177e8 <idpriv_temp_restore@@Base+0x410>  // b.none
   1777c:	stp	x21, x22, [sp, #32]
   17780:	mov	x21, x1
   17784:	sub	x1, x5, #0x1
   17788:	mov	x22, x4
   1778c:	cmp	x2, x1, lsr #1
   17790:	b.hi	177fc <idpriv_temp_restore@@Base+0x424>  // b.pmore
   17794:	ldr	x19, [x0, #72]
   17798:	cbz	x2, 177d0 <idpriv_temp_restore@@Base+0x3f8>
   1779c:	nop
   177a0:	subs	x2, x2, #0x1
   177a4:	ldr	x19, [x19, #16]
   177a8:	b.ne	177a0 <idpriv_temp_restore@@Base+0x3c8>  // b.any
   177ac:	ldr	x0, [x19, #32]
   177b0:	mov	x1, x22
   177b4:	blr	x21
   177b8:	cmp	w0, #0x0
   177bc:	b.gt	177e4 <idpriv_temp_restore@@Base+0x40c>
   177c0:	b.eq	17820 <idpriv_temp_restore@@Base+0x448>  // b.none
   177c4:	subs	x20, x20, #0x1
   177c8:	ldr	x19, [x19, #16]
   177cc:	b.eq	177e4 <idpriv_temp_restore@@Base+0x40c>  // b.none
   177d0:	ldr	x0, [x19, #32]
   177d4:	mov	x1, x22
   177d8:	blr	x21
   177dc:	cmp	w0, #0x0
   177e0:	b.le	177c0 <idpriv_temp_restore@@Base+0x3e8>
   177e4:	ldp	x21, x22, [sp, #32]
   177e8:	mov	x19, #0x0                   	// #0
   177ec:	mov	x0, x19
   177f0:	ldp	x19, x20, [sp, #16]
   177f4:	ldp	x29, x30, [sp], #48
   177f8:	ret
   177fc:	mvn	x2, x2
   17800:	adds	x2, x2, x5
   17804:	ldr	x19, [x0, #80]
   17808:	b.eq	177d0 <idpriv_temp_restore@@Base+0x3f8>  // b.none
   1780c:	nop
   17810:	subs	x2, x2, #0x1
   17814:	ldr	x19, [x19, #24]
   17818:	b.ne	17810 <idpriv_temp_restore@@Base+0x438>  // b.any
   1781c:	b	177d0 <idpriv_temp_restore@@Base+0x3f8>
   17820:	mov	x0, x19
   17824:	ldp	x19, x20, [sp, #16]
   17828:	ldp	x21, x22, [sp, #32]
   1782c:	ldp	x29, x30, [sp], #48
   17830:	ret
   17834:	stp	x21, x22, [sp, #32]
   17838:	bl	a900 <abort@plt>
   1783c:	nop
   17840:	cmp	x1, x2
   17844:	b.hi	17920 <idpriv_temp_restore@@Base+0x548>  // b.pmore
   17848:	ldr	x3, [x0, #96]
   1784c:	cmp	x3, x2
   17850:	b.cc	17920 <idpriv_temp_restore@@Base+0x548>  // b.lo, b.ul, b.last
   17854:	sub	x3, x3, x2
   17858:	sub	x2, x2, x1
   1785c:	cmp	x2, x3
   17860:	csel	x4, x2, x3, cs  // cs = hs, nlast
   17864:	cmp	x1, x4
   17868:	ldr	x5, [x0]
   1786c:	b.ls	178a8 <idpriv_temp_restore@@Base+0x4d0>  // b.plast
   17870:	add	x1, x0, #0x38
   17874:	cbz	x3, 17884 <idpriv_temp_restore@@Base+0x4ac>
   17878:	subs	x3, x3, #0x1
   1787c:	ldr	x1, [x1, #24]
   17880:	b.ne	17878 <idpriv_temp_restore@@Base+0x4a0>  // b.any
   17884:	mov	x4, x1
   17888:	cbz	x2, 1789c <idpriv_temp_restore@@Base+0x4c4>
   1788c:	nop
   17890:	subs	x2, x2, #0x1
   17894:	ldr	x4, [x4, #24]
   17898:	b.ne	17890 <idpriv_temp_restore@@Base+0x4b8>  // b.any
   1789c:	stp	x5, x0, [x8]
   178a0:	stp	x4, x1, [x8, #24]
   178a4:	ret
   178a8:	cmp	x2, x3
   178ac:	ldr	x4, [x0, #72]
   178b0:	b.ls	178e8 <idpriv_temp_restore@@Base+0x510>  // b.plast
   178b4:	cbz	x1, 178c4 <idpriv_temp_restore@@Base+0x4ec>
   178b8:	subs	x1, x1, #0x1
   178bc:	ldr	x4, [x4, #16]
   178c0:	b.ne	178b8 <idpriv_temp_restore@@Base+0x4e0>  // b.any
   178c4:	add	x1, x0, #0x38
   178c8:	cbz	x3, 1789c <idpriv_temp_restore@@Base+0x4c4>
   178cc:	nop
   178d0:	subs	x3, x3, #0x1
   178d4:	ldr	x1, [x1, #24]
   178d8:	b.ne	178d0 <idpriv_temp_restore@@Base+0x4f8>  // b.any
   178dc:	stp	x5, x0, [x8]
   178e0:	stp	x4, x1, [x8, #24]
   178e4:	ret
   178e8:	cbz	x1, 178fc <idpriv_temp_restore@@Base+0x524>
   178ec:	nop
   178f0:	subs	x1, x1, #0x1
   178f4:	ldr	x4, [x4, #16]
   178f8:	b.ne	178f0 <idpriv_temp_restore@@Base+0x518>  // b.any
   178fc:	mov	x1, x4
   17900:	cbz	x2, 1789c <idpriv_temp_restore@@Base+0x4c4>
   17904:	nop
   17908:	subs	x2, x2, #0x1
   1790c:	ldr	x1, [x1, #16]
   17910:	b.ne	17908 <idpriv_temp_restore@@Base+0x530>  // b.any
   17914:	stp	x5, x0, [x8]
   17918:	stp	x4, x1, [x8, #24]
   1791c:	ret
   17920:	stp	x29, x30, [sp, #-16]!
   17924:	mov	x29, sp
   17928:	bl	a900 <abort@plt>
   1792c:	nop
   17930:	stp	x29, x30, [sp, #-48]!
   17934:	mov	x29, sp
   17938:	str	x21, [sp, #32]
   1793c:	mov	x21, x0
   17940:	ldr	x0, [x1, #32]
   17944:	cmp	x0, x2
   17948:	b.eq	179b0 <idpriv_temp_restore@@Base+0x5d8>  // b.none
   1794c:	stp	x19, x20, [sp, #16]
   17950:	mov	x19, x1
   17954:	mov	x20, x2
   17958:	ldr	x1, [x21, #16]
   1795c:	mov	x0, x2
   17960:	cbz	x1, 17968 <idpriv_temp_restore@@Base+0x590>
   17964:	blr	x1
   17968:	ldr	x1, [x19, #8]
   1796c:	cmp	x1, x0
   17970:	b.eq	179a8 <idpriv_temp_restore@@Base+0x5d0>  // b.none
   17974:	ldp	x3, x4, [x21, #40]
   17978:	udiv	x2, x1, x4
   1797c:	msub	x1, x2, x4, x1
   17980:	add	x2, x3, x1, lsl #3
   17984:	ldr	x3, [x3, x1, lsl #3]
   17988:	cmp	x3, x19
   1798c:	b.eq	179c4 <idpriv_temp_restore@@Base+0x5ec>  // b.none
   17990:	cbz	x3, 17a00 <idpriv_temp_restore@@Base+0x628>
   17994:	ldr	x1, [x3]
   17998:	cmp	x1, x19
   1799c:	b.eq	179c0 <idpriv_temp_restore@@Base+0x5e8>  // b.none
   179a0:	mov	x3, x1
   179a4:	b	17990 <idpriv_temp_restore@@Base+0x5b8>
   179a8:	str	x20, [x19, #32]
   179ac:	ldp	x19, x20, [sp, #16]
   179b0:	mov	w0, #0x0                   	// #0
   179b4:	ldr	x21, [sp, #32]
   179b8:	ldp	x29, x30, [sp], #48
   179bc:	ret
   179c0:	mov	x2, x3
   179c4:	ldr	x1, [x19]
   179c8:	str	x1, [x2]
   179cc:	str	x0, [x19, #8]
   179d0:	str	x20, [x19, #32]
   179d4:	ldp	x2, x3, [x21, #40]
   179d8:	ldr	x21, [sp, #32]
   179dc:	udiv	x1, x0, x3
   179e0:	msub	x0, x1, x3, x0
   179e4:	ldr	x1, [x2, x0, lsl #3]
   179e8:	str	x1, [x19]
   179ec:	str	x19, [x2, x0, lsl #3]
   179f0:	mov	w0, #0x0                   	// #0
   179f4:	ldp	x19, x20, [sp, #16]
   179f8:	ldp	x29, x30, [sp], #48
   179fc:	ret
   17a00:	bl	a900 <abort@plt>
   17a04:	nop
   17a08:	stp	x29, x30, [sp, #-80]!
   17a0c:	mov	x29, sp
   17a10:	stp	x21, x22, [sp, #32]
   17a14:	mov	x21, x0
   17a18:	ldr	x0, [x0, #96]
   17a1c:	stp	x19, x20, [sp, #16]
   17a20:	stp	x23, x24, [sp, #48]
   17a24:	cmp	x0, x2
   17a28:	ccmp	x1, x2, #0x2, cs  // cs = hs, nlast
   17a2c:	stp	x25, x26, [sp, #64]
   17a30:	b.hi	17c38 <idpriv_temp_restore@@Base+0x860>  // b.pmore
   17a34:	mov	x24, x1
   17a38:	mov	x23, x2
   17a3c:	ldr	x1, [x21, #16]
   17a40:	mov	x22, x3
   17a44:	mov	x20, x3
   17a48:	cbz	x1, 17a58 <idpriv_temp_restore@@Base+0x680>
   17a4c:	mov	x0, x3
   17a50:	blr	x1
   17a54:	mov	x20, x0
   17a58:	ldp	x3, x1, [x21, #40]
   17a5c:	ldrb	w2, [x21, #32]
   17a60:	ldr	x25, [x21, #8]
   17a64:	udiv	x0, x20, x1
   17a68:	msub	x0, x0, x1, x20
   17a6c:	ldr	x19, [x3, x0, lsl #3]
   17a70:	cbnz	w2, 17b00 <idpriv_temp_restore@@Base+0x728>
   17a74:	cbz	x19, 17ae4 <idpriv_temp_restore@@Base+0x70c>
   17a78:	cbnz	x25, 17a88 <idpriv_temp_restore@@Base+0x6b0>
   17a7c:	b	17b58 <idpriv_temp_restore@@Base+0x780>
   17a80:	ldr	x19, [x19]
   17a84:	cbz	x19, 17ae4 <idpriv_temp_restore@@Base+0x70c>
   17a88:	ldr	x0, [x19, #8]
   17a8c:	cmp	x0, x20
   17a90:	b.ne	17a80 <idpriv_temp_restore@@Base+0x6a8>  // b.any
   17a94:	ldr	x1, [x19, #32]
   17a98:	mov	x0, x22
   17a9c:	blr	x25
   17aa0:	tst	w0, #0xff
   17aa4:	b.eq	17a80 <idpriv_temp_restore@@Base+0x6a8>  // b.none
   17aa8:	mov	x26, x19
   17aac:	b	17ab4 <idpriv_temp_restore@@Base+0x6dc>
   17ab0:	cbz	x26, 17ae4 <idpriv_temp_restore@@Base+0x70c>
   17ab4:	ldr	x3, [x26, #24]
   17ab8:	add	x21, x21, #0x38
   17abc:	mov	x0, #0x0                   	// #0
   17ac0:	cmp	x21, x3
   17ac4:	b.eq	17ad8 <idpriv_temp_restore@@Base+0x700>  // b.none
   17ac8:	ldr	x3, [x3, #24]
   17acc:	add	x0, x0, #0x1
   17ad0:	cmp	x3, x21
   17ad4:	b.ne	17ac8 <idpriv_temp_restore@@Base+0x6f0>  // b.any
   17ad8:	cmp	x24, x0
   17adc:	ccmp	x23, x0, #0x0, ls  // ls = plast
   17ae0:	b.hi	17ae8 <idpriv_temp_restore@@Base+0x710>  // b.pmore
   17ae4:	mov	x0, #0xffffffffffffffff    	// #-1
   17ae8:	ldp	x19, x20, [sp, #16]
   17aec:	ldp	x21, x22, [sp, #32]
   17af0:	ldp	x23, x24, [sp, #48]
   17af4:	ldp	x25, x26, [sp, #64]
   17af8:	ldp	x29, x30, [sp], #80
   17afc:	ret
   17b00:	cbz	x19, 17ae4 <idpriv_temp_restore@@Base+0x70c>
   17b04:	mov	x26, #0x0                   	// #0
   17b08:	cbnz	x25, 17b18 <idpriv_temp_restore@@Base+0x740>
   17b0c:	b	17c04 <idpriv_temp_restore@@Base+0x82c>
   17b10:	ldr	x19, [x19]
   17b14:	cbz	x19, 17ab0 <idpriv_temp_restore@@Base+0x6d8>
   17b18:	ldr	x0, [x19, #8]
   17b1c:	cmp	x0, x20
   17b20:	b.ne	17b10 <idpriv_temp_restore@@Base+0x738>  // b.any
   17b24:	ldr	x1, [x19, #32]
   17b28:	mov	x0, x22
   17b2c:	blr	x25
   17b30:	tst	w0, #0xff
   17b34:	b.eq	17b10 <idpriv_temp_restore@@Base+0x738>  // b.none
   17b38:	cbnz	x26, 17b68 <idpriv_temp_restore@@Base+0x790>
   17b3c:	mov	x26, x19
   17b40:	b	17b10 <idpriv_temp_restore@@Base+0x738>
   17b44:	ldr	x0, [x19, #32]
   17b48:	cmp	x22, x0
   17b4c:	b.eq	17aa8 <idpriv_temp_restore@@Base+0x6d0>  // b.none
   17b50:	ldr	x19, [x19]
   17b54:	cbz	x19, 17ae4 <idpriv_temp_restore@@Base+0x70c>
   17b58:	ldr	x0, [x19, #8]
   17b5c:	cmp	x20, x0
   17b60:	b.ne	17b50 <idpriv_temp_restore@@Base+0x778>  // b.any
   17b64:	b	17b44 <idpriv_temp_restore@@Base+0x76c>
   17b68:	mov	x0, x24
   17b6c:	ldr	x19, [x21, #72]
   17b70:	cbz	x24, 17b84 <idpriv_temp_restore@@Base+0x7ac>
   17b74:	nop
   17b78:	subs	x0, x0, #0x1
   17b7c:	ldr	x19, [x19, #16]
   17b80:	b.ne	17b78 <idpriv_temp_restore@@Base+0x7a0>  // b.any
   17b84:	cmp	x24, x23
   17b88:	b.cs	17ae4 <idpriv_temp_restore@@Base+0x70c>  // b.hs, b.nlast
   17b8c:	cbz	x25, 17bf4 <idpriv_temp_restore@@Base+0x81c>
   17b90:	ldr	x0, [x19, #8]
   17b94:	cmp	x0, x20
   17b98:	b.eq	17bbc <idpriv_temp_restore@@Base+0x7e4>  // b.none
   17b9c:	nop
   17ba0:	add	x24, x24, #0x1
   17ba4:	cmp	x23, x24
   17ba8:	ldr	x19, [x19, #16]
   17bac:	b.eq	17ae4 <idpriv_temp_restore@@Base+0x70c>  // b.none
   17bb0:	ldr	x0, [x19, #8]
   17bb4:	cmp	x0, x20
   17bb8:	b.ne	17ba0 <idpriv_temp_restore@@Base+0x7c8>  // b.any
   17bbc:	ldr	x1, [x19, #32]
   17bc0:	mov	x0, x22
   17bc4:	blr	x25
   17bc8:	tst	w0, #0xff
   17bcc:	b.eq	17ba0 <idpriv_temp_restore@@Base+0x7c8>  // b.none
   17bd0:	mov	x0, x24
   17bd4:	b	17ae8 <idpriv_temp_restore@@Base+0x710>
   17bd8:	ldr	x0, [x19, #32]
   17bdc:	cmp	x0, x22
   17be0:	b.eq	17bd0 <idpriv_temp_restore@@Base+0x7f8>  // b.none
   17be4:	add	x24, x24, #0x1
   17be8:	cmp	x24, x23
   17bec:	ldr	x19, [x19, #16]
   17bf0:	b.eq	17ae4 <idpriv_temp_restore@@Base+0x70c>  // b.none
   17bf4:	ldr	x0, [x19, #8]
   17bf8:	cmp	x20, x0
   17bfc:	b.ne	17be4 <idpriv_temp_restore@@Base+0x80c>  // b.any
   17c00:	b	17bd8 <idpriv_temp_restore@@Base+0x800>
   17c04:	mov	x26, x25
   17c08:	b	17c14 <idpriv_temp_restore@@Base+0x83c>
   17c0c:	ldr	x19, [x19]
   17c10:	cbz	x19, 17ab0 <idpriv_temp_restore@@Base+0x6d8>
   17c14:	ldr	x0, [x19, #8]
   17c18:	cmp	x20, x0
   17c1c:	b.ne	17c0c <idpriv_temp_restore@@Base+0x834>  // b.any
   17c20:	ldr	x0, [x19, #32]
   17c24:	cmp	x0, x22
   17c28:	b.ne	17c0c <idpriv_temp_restore@@Base+0x834>  // b.any
   17c2c:	cbnz	x26, 17b68 <idpriv_temp_restore@@Base+0x790>
   17c30:	mov	x26, x19
   17c34:	b	17c0c <idpriv_temp_restore@@Base+0x834>
   17c38:	bl	a900 <abort@plt>
   17c3c:	nop
   17c40:	stp	x29, x30, [sp, #-96]!
   17c44:	cmp	x1, x2
   17c48:	mov	x29, sp
   17c4c:	str	x27, [sp, #80]
   17c50:	ldr	x27, [x0, #96]
   17c54:	stp	x19, x20, [sp, #16]
   17c58:	stp	x21, x22, [sp, #32]
   17c5c:	ccmp	x27, x2, #0x0, ls  // ls = plast
   17c60:	stp	x23, x24, [sp, #48]
   17c64:	stp	x25, x26, [sp, #64]
   17c68:	b.cc	17f1c <idpriv_temp_restore@@Base+0xb44>  // b.lo, b.ul, b.last
   17c6c:	mov	x25, x1
   17c70:	mov	x23, x0
   17c74:	ldr	x1, [x0, #16]
   17c78:	mov	x24, x2
   17c7c:	mov	x22, x3
   17c80:	mov	x21, x3
   17c84:	cbz	x1, 17c94 <idpriv_temp_restore@@Base+0x8bc>
   17c88:	mov	x0, x3
   17c8c:	blr	x1
   17c90:	mov	x21, x0
   17c94:	ldp	x3, x1, [x23, #40]
   17c98:	ldrb	w2, [x23, #32]
   17c9c:	ldr	x26, [x23, #8]
   17ca0:	udiv	x0, x21, x1
   17ca4:	msub	x0, x0, x1, x21
   17ca8:	ldr	x19, [x3, x0, lsl #3]
   17cac:	cbnz	w2, 17d6c <idpriv_temp_restore@@Base+0x994>
   17cb0:	cbz	x19, 17e18 <idpriv_temp_restore@@Base+0xa40>
   17cb4:	cbnz	x26, 17cc4 <idpriv_temp_restore@@Base+0x8ec>
   17cb8:	b	17e04 <idpriv_temp_restore@@Base+0xa2c>
   17cbc:	ldr	x19, [x19]
   17cc0:	cbz	x19, 17e18 <idpriv_temp_restore@@Base+0xa40>
   17cc4:	ldr	x0, [x19, #8]
   17cc8:	cmp	x0, x21
   17ccc:	b.ne	17cbc <idpriv_temp_restore@@Base+0x8e4>  // b.any
   17cd0:	ldr	x1, [x19, #32]
   17cd4:	mov	x0, x22
   17cd8:	blr	x26
   17cdc:	tst	w0, #0xff
   17ce0:	b.eq	17cbc <idpriv_temp_restore@@Base+0x8e4>  // b.none
   17ce4:	mov	x20, x19
   17ce8:	cbz	x25, 17d10 <idpriv_temp_restore@@Base+0x938>
   17cec:	ldr	x0, [x23, #72]
   17cf0:	cmp	x20, x0
   17cf4:	b.ne	17d08 <idpriv_temp_restore@@Base+0x930>  // b.any
   17cf8:	b	17d48 <idpriv_temp_restore@@Base+0x970>
   17cfc:	ldr	x0, [x0, #16]
   17d00:	cmp	x20, x0
   17d04:	b.eq	17d48 <idpriv_temp_restore@@Base+0x970>  // b.none
   17d08:	subs	x25, x25, #0x1
   17d0c:	b.ne	17cfc <idpriv_temp_restore@@Base+0x924>  // b.any
   17d10:	cmp	x27, x24
   17d14:	b.ls	17d4c <idpriv_temp_restore@@Base+0x974>  // b.plast
   17d18:	ldr	x0, [x23, #80]
   17d1c:	mvn	x19, x24
   17d20:	cmp	x20, x0
   17d24:	b.eq	17d48 <idpriv_temp_restore@@Base+0x970>  // b.none
   17d28:	adds	x27, x19, x27
   17d2c:	b.ne	17d3c <idpriv_temp_restore@@Base+0x964>  // b.any
   17d30:	b	17d4c <idpriv_temp_restore@@Base+0x974>
   17d34:	subs	x27, x27, #0x1
   17d38:	b.eq	17d4c <idpriv_temp_restore@@Base+0x974>  // b.none
   17d3c:	ldr	x0, [x0, #24]
   17d40:	cmp	x20, x0
   17d44:	b.ne	17d34 <idpriv_temp_restore@@Base+0x95c>  // b.any
   17d48:	mov	x20, #0x0                   	// #0
   17d4c:	mov	x0, x20
   17d50:	ldp	x19, x20, [sp, #16]
   17d54:	ldp	x21, x22, [sp, #32]
   17d58:	ldp	x23, x24, [sp, #48]
   17d5c:	ldp	x25, x26, [sp, #64]
   17d60:	ldr	x27, [sp, #80]
   17d64:	ldp	x29, x30, [sp], #96
   17d68:	ret
   17d6c:	mov	x20, #0x0                   	// #0
   17d70:	cbz	x19, 17db8 <idpriv_temp_restore@@Base+0x9e0>
   17d74:	cbnz	x26, 17d84 <idpriv_temp_restore@@Base+0x9ac>
   17d78:	b	17ee8 <idpriv_temp_restore@@Base+0xb10>
   17d7c:	ldr	x19, [x19]
   17d80:	cbz	x19, 17db8 <idpriv_temp_restore@@Base+0x9e0>
   17d84:	ldr	x3, [x19, #8]
   17d88:	cmp	x3, x21
   17d8c:	b.ne	17d7c <idpriv_temp_restore@@Base+0x9a4>  // b.any
   17d90:	ldr	x1, [x19, #32]
   17d94:	mov	x0, x22
   17d98:	blr	x26
   17d9c:	tst	w0, #0xff
   17da0:	b.eq	17d7c <idpriv_temp_restore@@Base+0x9a4>  // b.none
   17da4:	cbnz	x20, 17e60 <idpriv_temp_restore@@Base+0xa88>
   17da8:	mov	x20, x19
   17dac:	ldr	x19, [x19]
   17db0:	cbnz	x19, 17d84 <idpriv_temp_restore@@Base+0x9ac>
   17db4:	nop
   17db8:	cbz	x25, 17e20 <idpriv_temp_restore@@Base+0xa48>
   17dbc:	ldr	x0, [x23, #72]
   17dc0:	add	x1, x23, #0x38
   17dc4:	cmp	x0, x1
   17dc8:	b.ne	17de4 <idpriv_temp_restore@@Base+0xa0c>  // b.any
   17dcc:	b	17e20 <idpriv_temp_restore@@Base+0xa48>
   17dd0:	subs	x25, x25, #0x1
   17dd4:	b.eq	17e20 <idpriv_temp_restore@@Base+0xa48>  // b.none
   17dd8:	ldr	x0, [x0, #16]
   17ddc:	cmp	x0, x1
   17de0:	b.eq	17e20 <idpriv_temp_restore@@Base+0xa48>  // b.none
   17de4:	cmp	x0, x20
   17de8:	b.ne	17dd0 <idpriv_temp_restore@@Base+0x9f8>  // b.any
   17dec:	b	17d48 <idpriv_temp_restore@@Base+0x970>
   17df0:	ldr	x0, [x19, #32]
   17df4:	cmp	x22, x0
   17df8:	b.eq	17ce4 <idpriv_temp_restore@@Base+0x90c>  // b.none
   17dfc:	ldr	x19, [x19]
   17e00:	cbz	x19, 17e18 <idpriv_temp_restore@@Base+0xa40>
   17e04:	ldr	x0, [x19, #8]
   17e08:	cmp	x21, x0
   17e0c:	b.eq	17df0 <idpriv_temp_restore@@Base+0xa18>  // b.none
   17e10:	ldr	x19, [x19]
   17e14:	cbnz	x19, 17e04 <idpriv_temp_restore@@Base+0xa2c>
   17e18:	mov	x20, #0x0                   	// #0
   17e1c:	b	17ce8 <idpriv_temp_restore@@Base+0x910>
   17e20:	ldr	x2, [x23, #96]
   17e24:	cmp	x2, x24
   17e28:	b.ls	17d4c <idpriv_temp_restore@@Base+0x974>  // b.plast
   17e2c:	ldr	x1, [x23, #80]
   17e30:	mvn	x0, x24
   17e34:	cmp	x1, x20
   17e38:	b.eq	17d48 <idpriv_temp_restore@@Base+0x970>  // b.none
   17e3c:	adds	x0, x0, x2
   17e40:	b.ne	17e50 <idpriv_temp_restore@@Base+0xa78>  // b.any
   17e44:	b	17d4c <idpriv_temp_restore@@Base+0x974>
   17e48:	subs	x0, x0, #0x1
   17e4c:	b.eq	17d4c <idpriv_temp_restore@@Base+0x974>  // b.none
   17e50:	ldr	x1, [x1, #24]
   17e54:	cmp	x1, x20
   17e58:	b.ne	17e48 <idpriv_temp_restore@@Base+0xa70>  // b.any
   17e5c:	b	17d48 <idpriv_temp_restore@@Base+0x970>
   17e60:	sub	x24, x24, x25
   17e64:	ldr	x20, [x23, #72]
   17e68:	cbz	x25, 17e7c <idpriv_temp_restore@@Base+0xaa4>
   17e6c:	nop
   17e70:	subs	x25, x25, #0x1
   17e74:	ldr	x20, [x20, #16]
   17e78:	b.ne	17e70 <idpriv_temp_restore@@Base+0xa98>  // b.any
   17e7c:	cbz	x24, 17d48 <idpriv_temp_restore@@Base+0x970>
   17e80:	cbz	x26, 17ed8 <idpriv_temp_restore@@Base+0xb00>
   17e84:	ldr	x0, [x20, #8]
   17e88:	cmp	x0, x21
   17e8c:	b.eq	17ea8 <idpriv_temp_restore@@Base+0xad0>  // b.none
   17e90:	subs	x24, x24, #0x1
   17e94:	ldr	x20, [x20, #16]
   17e98:	b.eq	17d48 <idpriv_temp_restore@@Base+0x970>  // b.none
   17e9c:	ldr	x0, [x20, #8]
   17ea0:	cmp	x0, x21
   17ea4:	b.ne	17e90 <idpriv_temp_restore@@Base+0xab8>  // b.any
   17ea8:	ldr	x1, [x20, #32]
   17eac:	mov	x0, x22
   17eb0:	blr	x26
   17eb4:	tst	w0, #0xff
   17eb8:	b.eq	17e90 <idpriv_temp_restore@@Base+0xab8>  // b.none
   17ebc:	b	17d4c <idpriv_temp_restore@@Base+0x974>
   17ec0:	ldr	x0, [x20, #32]
   17ec4:	cmp	x22, x0
   17ec8:	b.eq	17d4c <idpriv_temp_restore@@Base+0x974>  // b.none
   17ecc:	subs	x24, x24, #0x1
   17ed0:	ldr	x20, [x20, #16]
   17ed4:	b.eq	17d48 <idpriv_temp_restore@@Base+0x970>  // b.none
   17ed8:	ldr	x0, [x20, #8]
   17edc:	cmp	x21, x0
   17ee0:	b.ne	17ecc <idpriv_temp_restore@@Base+0xaf4>  // b.any
   17ee4:	b	17ec0 <idpriv_temp_restore@@Base+0xae8>
   17ee8:	mov	x20, x26
   17eec:	b	17ef8 <idpriv_temp_restore@@Base+0xb20>
   17ef0:	ldr	x19, [x19]
   17ef4:	cbz	x19, 17db8 <idpriv_temp_restore@@Base+0x9e0>
   17ef8:	ldr	x0, [x19, #8]
   17efc:	cmp	x0, x21
   17f00:	b.ne	17ef0 <idpriv_temp_restore@@Base+0xb18>  // b.any
   17f04:	ldr	x0, [x19, #32]
   17f08:	cmp	x0, x22
   17f0c:	b.ne	17ef0 <idpriv_temp_restore@@Base+0xb18>  // b.any
   17f10:	cbnz	x20, 17e60 <idpriv_temp_restore@@Base+0xa88>
   17f14:	mov	x20, x19
   17f18:	b	17ef0 <idpriv_temp_restore@@Base+0xb18>
   17f1c:	bl	a900 <abort@plt>
   17f20:	stp	x29, x30, [sp, #-48]!
   17f24:	mov	x29, sp
   17f28:	ldr	x3, [x0, #96]
   17f2c:	stp	x19, x20, [sp, #16]
   17f30:	str	x21, [sp, #32]
   17f34:	cmp	x3, x1
   17f38:	b.ls	18044 <idpriv_temp_restore@@Base+0xc6c>  // b.plast
   17f3c:	mov	x20, x0
   17f40:	sub	x0, x3, #0x1
   17f44:	mov	x21, x2
   17f48:	cmp	x1, x0, lsr #1
   17f4c:	b.hi	17fd8 <idpriv_temp_restore@@Base+0xc00>  // b.pmore
   17f50:	ldr	x19, [x20, #72]
   17f54:	cbz	x1, 17f64 <idpriv_temp_restore@@Base+0xb8c>
   17f58:	subs	x1, x1, #0x1
   17f5c:	ldr	x19, [x19, #16]
   17f60:	b.ne	17f58 <idpriv_temp_restore@@Base+0xb80>  // b.any
   17f64:	ldr	x0, [x19, #32]
   17f68:	cmp	x0, x21
   17f6c:	b.eq	17fc4 <idpriv_temp_restore@@Base+0xbec>  // b.none
   17f70:	ldr	x1, [x20, #16]
   17f74:	mov	x0, x21
   17f78:	cbz	x1, 17f80 <idpriv_temp_restore@@Base+0xba8>
   17f7c:	blr	x1
   17f80:	ldr	x1, [x19, #8]
   17f84:	cmp	x1, x0
   17f88:	b.eq	17fc0 <idpriv_temp_restore@@Base+0xbe8>  // b.none
   17f8c:	ldp	x3, x4, [x20, #40]
   17f90:	udiv	x2, x1, x4
   17f94:	msub	x1, x2, x4, x1
   17f98:	add	x2, x3, x1, lsl #3
   17f9c:	ldr	x1, [x3, x1, lsl #3]
   17fa0:	cmp	x1, x19
   17fa4:	b.eq	18008 <idpriv_temp_restore@@Base+0xc30>  // b.none
   17fa8:	cbz	x1, 18044 <idpriv_temp_restore@@Base+0xc6c>
   17fac:	ldr	x3, [x1]
   17fb0:	cmp	x3, x19
   17fb4:	b.eq	18004 <idpriv_temp_restore@@Base+0xc2c>  // b.none
   17fb8:	mov	x1, x3
   17fbc:	b	17fa8 <idpriv_temp_restore@@Base+0xbd0>
   17fc0:	str	x21, [x19, #32]
   17fc4:	mov	x0, x19
   17fc8:	ldp	x19, x20, [sp, #16]
   17fcc:	ldr	x21, [sp, #32]
   17fd0:	ldp	x29, x30, [sp], #48
   17fd4:	ret
   17fd8:	mvn	x1, x1
   17fdc:	adds	x1, x3, x1
   17fe0:	ldr	x19, [x20, #80]
   17fe4:	b.eq	17f64 <idpriv_temp_restore@@Base+0xb8c>  // b.none
   17fe8:	subs	x1, x1, #0x1
   17fec:	ldr	x19, [x19, #24]
   17ff0:	b.eq	17f64 <idpriv_temp_restore@@Base+0xb8c>  // b.none
   17ff4:	subs	x1, x1, #0x1
   17ff8:	ldr	x19, [x19, #24]
   17ffc:	b.ne	17fe8 <idpriv_temp_restore@@Base+0xc10>  // b.any
   18000:	b	17f64 <idpriv_temp_restore@@Base+0xb8c>
   18004:	mov	x2, x1
   18008:	ldr	x1, [x19]
   1800c:	str	x1, [x2]
   18010:	str	x0, [x19, #8]
   18014:	str	x21, [x19, #32]
   18018:	ldr	x21, [sp, #32]
   1801c:	ldp	x2, x3, [x20, #40]
   18020:	udiv	x1, x0, x3
   18024:	msub	x0, x1, x3, x0
   18028:	ldr	x1, [x2, x0, lsl #3]
   1802c:	str	x1, [x19]
   18030:	str	x19, [x2, x0, lsl #3]
   18034:	mov	x0, x19
   18038:	ldp	x19, x20, [sp, #16]
   1803c:	ldp	x29, x30, [sp], #48
   18040:	ret
   18044:	bl	a900 <abort@plt>
   18048:	ldr	x2, [x0, #96]
   1804c:	cmp	x2, x1
   18050:	b.ls	180ac <idpriv_temp_restore@@Base+0xcd4>  // b.plast
   18054:	sub	x3, x2, #0x1
   18058:	cmp	x1, x3, lsr #1
   1805c:	b.hi	1807c <idpriv_temp_restore@@Base+0xca4>  // b.pmore
   18060:	ldr	x0, [x0, #72]
   18064:	cbz	x1, 18074 <idpriv_temp_restore@@Base+0xc9c>
   18068:	subs	x1, x1, #0x1
   1806c:	ldr	x0, [x0, #16]
   18070:	b.ne	18068 <idpriv_temp_restore@@Base+0xc90>  // b.any
   18074:	ldr	x0, [x0, #32]
   18078:	ret
   1807c:	mvn	x1, x1
   18080:	adds	x1, x1, x2
   18084:	ldr	x0, [x0, #80]
   18088:	b.eq	18074 <idpriv_temp_restore@@Base+0xc9c>  // b.none
   1808c:	nop
   18090:	subs	x1, x1, #0x1
   18094:	ldr	x0, [x0, #24]
   18098:	b.eq	18074 <idpriv_temp_restore@@Base+0xc9c>  // b.none
   1809c:	subs	x1, x1, #0x1
   180a0:	ldr	x0, [x0, #24]
   180a4:	b.ne	18090 <idpriv_temp_restore@@Base+0xcb8>  // b.any
   180a8:	b	18074 <idpriv_temp_restore@@Base+0xc9c>
   180ac:	stp	x29, x30, [sp, #-16]!
   180b0:	mov	x29, sp
   180b4:	bl	a900 <abort@plt>
   180b8:	stp	x29, x30, [sp, #-64]!
   180bc:	mov	x29, sp
   180c0:	stp	x19, x20, [sp, #16]
   180c4:	ldr	x19, [x0, #72]
   180c8:	stp	x21, x22, [sp, #32]
   180cc:	add	x21, x0, #0x38
   180d0:	str	x23, [sp, #48]
   180d4:	mov	x22, x0
   180d8:	cmp	x19, x21
   180dc:	ldr	x23, [x0, #24]
   180e0:	b.eq	18108 <idpriv_temp_restore@@Base+0xd30>  // b.none
   180e4:	cbz	x23, 18128 <idpriv_temp_restore@@Base+0xd50>
   180e8:	mov	x20, x19
   180ec:	ldr	x19, [x19, #16]
   180f0:	ldr	x0, [x20, #32]
   180f4:	blr	x23
   180f8:	mov	x0, x20
   180fc:	bl	aa50 <free@plt>
   18100:	cmp	x19, x21
   18104:	b.ne	180e8 <idpriv_temp_restore@@Base+0xd10>  // b.any
   18108:	ldr	x0, [x22, #40]
   1810c:	bl	aa50 <free@plt>
   18110:	mov	x0, x22
   18114:	ldp	x19, x20, [sp, #16]
   18118:	ldp	x21, x22, [sp, #32]
   1811c:	ldr	x23, [sp, #48]
   18120:	ldp	x29, x30, [sp], #64
   18124:	b	aa50 <free@plt>
   18128:	mov	x0, x19
   1812c:	ldr	x19, [x19, #16]
   18130:	bl	aa50 <free@plt>
   18134:	cmp	x19, x21
   18138:	b.eq	18108 <idpriv_temp_restore@@Base+0xd30>  // b.none
   1813c:	mov	x0, x19
   18140:	ldr	x19, [x19, #16]
   18144:	bl	aa50 <free@plt>
   18148:	cmp	x19, x21
   1814c:	b.ne	18128 <idpriv_temp_restore@@Base+0xd50>  // b.any
   18150:	b	18108 <idpriv_temp_restore@@Base+0xd30>
   18154:	nop
   18158:	stp	x29, x30, [sp, #-32]!
   1815c:	mov	x29, sp
   18160:	ldr	x3, [x0, #96]
   18164:	str	x19, [sp, #16]
   18168:	cmp	x3, x1
   1816c:	b.ls	18248 <idpriv_temp_restore@@Base+0xe70>  // b.plast
   18170:	sub	x4, x3, #0x1
   18174:	add	x2, x0, #0x38
   18178:	cmp	x1, x4, lsr #1
   1817c:	b.hi	18218 <idpriv_temp_restore@@Base+0xe40>  // b.pmore
   18180:	cbz	x1, 18194 <idpriv_temp_restore@@Base+0xdbc>
   18184:	nop
   18188:	subs	x1, x1, #0x1
   1818c:	ldr	x2, [x2, #16]
   18190:	b.ne	18188 <idpriv_temp_restore@@Base+0xdb0>  // b.any
   18194:	ldr	x19, [x2, #16]
   18198:	ldr	x1, [x19, #16]
   1819c:	str	x1, [x2, #16]
   181a0:	str	x2, [x1, #24]
   181a4:	ldp	x2, x3, [x0, #40]
   181a8:	ldr	x5, [x19, #8]
   181ac:	udiv	x1, x5, x3
   181b0:	msub	x1, x1, x3, x5
   181b4:	add	x3, x2, x1, lsl #3
   181b8:	ldr	x1, [x2, x1, lsl #3]
   181bc:	cmp	x1, x19
   181c0:	b.eq	181e4 <idpriv_temp_restore@@Base+0xe0c>  // b.none
   181c4:	nop
   181c8:	cbz	x1, 18248 <idpriv_temp_restore@@Base+0xe70>
   181cc:	ldr	x2, [x1]
   181d0:	cmp	x2, x19
   181d4:	b.eq	181e0 <idpriv_temp_restore@@Base+0xe08>  // b.none
   181d8:	mov	x1, x2
   181dc:	b	181c8 <idpriv_temp_restore@@Base+0xdf0>
   181e0:	mov	x3, x1
   181e4:	ldr	x1, [x19]
   181e8:	str	x1, [x3]
   181ec:	ldr	x1, [x0, #24]
   181f0:	str	x4, [x0, #96]
   181f4:	cbz	x1, 18200 <idpriv_temp_restore@@Base+0xe28>
   181f8:	ldr	x0, [x19, #32]
   181fc:	blr	x1
   18200:	mov	x0, x19
   18204:	bl	aa50 <free@plt>
   18208:	mov	w0, #0x1                   	// #1
   1820c:	ldr	x19, [sp, #16]
   18210:	ldp	x29, x30, [sp], #32
   18214:	ret
   18218:	mvn	x1, x1
   1821c:	adds	x1, x3, x1
   18220:	b.eq	18234 <idpriv_temp_restore@@Base+0xe5c>  // b.none
   18224:	nop
   18228:	subs	x1, x1, #0x1
   1822c:	ldr	x2, [x2, #24]
   18230:	b.ne	18228 <idpriv_temp_restore@@Base+0xe50>  // b.any
   18234:	ldr	x19, [x2, #24]
   18238:	ldr	x1, [x19, #24]
   1823c:	str	x1, [x2, #24]
   18240:	str	x2, [x1, #16]
   18244:	b	181a4 <idpriv_temp_restore@@Base+0xdcc>
   18248:	bl	a900 <abort@plt>
   1824c:	nop
   18250:	stp	x29, x30, [sp, #-32]!
   18254:	mov	x29, sp
   18258:	ldp	x2, x3, [x0, #40]
   1825c:	ldr	x4, [x1, #8]
   18260:	str	x19, [sp, #16]
   18264:	mov	x19, x1
   18268:	udiv	x1, x4, x3
   1826c:	msub	x1, x1, x3, x4
   18270:	add	x4, x2, x1, lsl #3
   18274:	ldr	x2, [x2, x1, lsl #3]
   18278:	cmp	x2, x19
   1827c:	b.eq	1829c <idpriv_temp_restore@@Base+0xec4>  // b.none
   18280:	cbz	x2, 182e4 <idpriv_temp_restore@@Base+0xf0c>
   18284:	ldr	x3, [x2]
   18288:	cmp	x3, x19
   1828c:	b.eq	18298 <idpriv_temp_restore@@Base+0xec0>  // b.none
   18290:	mov	x2, x3
   18294:	b	18280 <idpriv_temp_restore@@Base+0xea8>
   18298:	mov	x4, x2
   1829c:	ldp	x2, x3, [x19, #16]
   182a0:	ldr	x1, [x19]
   182a4:	str	x1, [x4]
   182a8:	ldr	x1, [x0, #96]
   182ac:	ldr	x4, [x0, #24]
   182b0:	str	x2, [x3, #16]
   182b4:	str	x3, [x2, #24]
   182b8:	sub	x1, x1, #0x1
   182bc:	str	x1, [x0, #96]
   182c0:	cbz	x4, 182cc <idpriv_temp_restore@@Base+0xef4>
   182c4:	ldr	x0, [x19, #32]
   182c8:	blr	x4
   182cc:	mov	x0, x19
   182d0:	bl	aa50 <free@plt>
   182d4:	mov	w0, #0x1                   	// #1
   182d8:	ldr	x19, [sp, #16]
   182dc:	ldp	x29, x30, [sp], #32
   182e0:	ret
   182e4:	bl	a900 <abort@plt>
   182e8:	stp	x29, x30, [sp, #-80]!
   182ec:	mov	x29, sp
   182f0:	stp	x19, x20, [sp, #16]
   182f4:	mov	x19, x3
   182f8:	stp	x21, x22, [sp, #32]
   182fc:	mov	x21, x5
   18300:	mov	x22, x6
   18304:	stp	x23, x24, [sp, #48]
   18308:	mov	x24, x1
   1830c:	mov	x23, x2
   18310:	stp	x25, x26, [sp, #64]
   18314:	mov	x25, x0
   18318:	and	w26, w4, #0xff
   1831c:	mov	x0, #0x68                  	// #104
   18320:	bl	a5f0 <malloc@plt>
   18324:	mov	x20, x0
   18328:	cbz	x0, 18440 <idpriv_temp_restore@@Base+0x1068>
   1832c:	stp	x25, x24, [x20]
   18330:	lsr	x0, x21, #1
   18334:	adds	x0, x0, x21
   18338:	stp	x23, x19, [x20, #16]
   1833c:	strb	w26, [x20, #32]
   18340:	b.cs	184a8 <idpriv_temp_restore@@Base+0x10d0>  // b.hs, b.nlast
   18344:	cmp	x0, #0xa
   18348:	mov	x2, #0xa                   	// #10
   1834c:	csel	x2, x0, x2, cs  // cs = hs, nlast
   18350:	adrp	x3, 33000 <vasnprintf@@Base+0x2848>
   18354:	mov	x1, #0x0                   	// #0
   18358:	add	x3, x3, #0x560
   1835c:	b	18368 <idpriv_temp_restore@@Base+0xf90>
   18360:	cmp	x1, #0xe8
   18364:	b.eq	18478 <idpriv_temp_restore@@Base+0x10a0>  // b.none
   18368:	ldr	x0, [x3, x1, lsl #3]
   1836c:	add	x1, x1, #0x1
   18370:	cmp	x2, x0
   18374:	b.hi	18360 <idpriv_temp_restore@@Base+0xf88>  // b.pmore
   18378:	str	x0, [x20, #48]
   1837c:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   18380:	cmp	x0, x1
   18384:	b.hi	18478 <idpriv_temp_restore@@Base+0x10a0>  // b.pmore
   18388:	mov	x1, #0x8                   	// #8
   1838c:	bl	a770 <calloc@plt>
   18390:	str	x0, [x20, #40]
   18394:	mov	x25, x0
   18398:	cbz	x0, 18478 <idpriv_temp_restore@@Base+0x10a0>
   1839c:	str	x21, [x20, #96]
   183a0:	add	x24, x20, #0x38
   183a4:	cbz	x21, 184a0 <idpriv_temp_restore@@Base+0x10c8>
   183a8:	mov	x23, x24
   183ac:	b	183e8 <idpriv_temp_restore@@Base+0x1010>
   183b0:	blr	x1
   183b4:	str	x0, [x19, #8]
   183b8:	ldp	x25, x2, [x20, #40]
   183bc:	add	x22, x22, #0x8
   183c0:	subs	x21, x21, #0x1
   183c4:	udiv	x1, x0, x2
   183c8:	msub	x0, x1, x2, x0
   183cc:	ldr	x1, [x25, x0, lsl #3]
   183d0:	str	x1, [x19]
   183d4:	str	x19, [x25, x0, lsl #3]
   183d8:	str	x23, [x19, #24]
   183dc:	str	x19, [x23, #16]
   183e0:	b.eq	18438 <idpriv_temp_restore@@Base+0x1060>  // b.none
   183e4:	mov	x23, x19
   183e8:	mov	x0, #0x28                  	// #40
   183ec:	bl	a5f0 <malloc@plt>
   183f0:	mov	x19, x0
   183f4:	cbz	x0, 18468 <idpriv_temp_restore@@Base+0x1090>
   183f8:	ldr	x1, [x20, #16]
   183fc:	ldr	x0, [x22]
   18400:	str	x0, [x19, #32]
   18404:	cbnz	x1, 183b0 <idpriv_temp_restore@@Base+0xfd8>
   18408:	ldr	x2, [x20, #48]
   1840c:	str	x0, [x19, #8]
   18410:	add	x22, x22, #0x8
   18414:	subs	x21, x21, #0x1
   18418:	udiv	x1, x0, x2
   1841c:	msub	x0, x1, x2, x0
   18420:	ldr	x1, [x25, x0, lsl #3]
   18424:	str	x1, [x19]
   18428:	str	x19, [x25, x0, lsl #3]
   1842c:	str	x23, [x19, #24]
   18430:	str	x19, [x23, #16]
   18434:	b.ne	183e4 <idpriv_temp_restore@@Base+0x100c>  // b.any
   18438:	str	x24, [x19, #16]
   1843c:	str	x19, [x20, #80]
   18440:	mov	x0, x20
   18444:	ldp	x19, x20, [sp, #16]
   18448:	ldp	x21, x22, [sp, #32]
   1844c:	ldp	x23, x24, [sp, #48]
   18450:	ldp	x25, x26, [sp, #64]
   18454:	ldp	x29, x30, [sp], #80
   18458:	ret
   1845c:	mov	x0, x23
   18460:	ldr	x23, [x23, #24]
   18464:	bl	aa50 <free@plt>
   18468:	cmp	x24, x23
   1846c:	b.ne	1845c <idpriv_temp_restore@@Base+0x1084>  // b.any
   18470:	ldr	x0, [x20, #40]
   18474:	bl	aa50 <free@plt>
   18478:	mov	x0, x20
   1847c:	mov	x20, #0x0                   	// #0
   18480:	bl	aa50 <free@plt>
   18484:	mov	x0, x20
   18488:	ldp	x19, x20, [sp, #16]
   1848c:	ldp	x21, x22, [sp, #32]
   18490:	ldp	x23, x24, [sp, #48]
   18494:	ldp	x25, x26, [sp, #64]
   18498:	ldp	x29, x30, [sp], #80
   1849c:	ret
   184a0:	mov	x19, x24
   184a4:	b	18438 <idpriv_temp_restore@@Base+0x1060>
   184a8:	mov	x2, #0xffffffffffffffff    	// #-1
   184ac:	b	18350 <idpriv_temp_restore@@Base+0xf78>
   184b0:	stp	x29, x30, [sp, #-64]!
   184b4:	mov	x29, sp
   184b8:	stp	x19, x20, [sp, #16]
   184bc:	mov	x20, x3
   184c0:	stp	x21, x22, [sp, #32]
   184c4:	mov	x22, x1
   184c8:	mov	x21, x2
   184cc:	stp	x23, x24, [sp, #48]
   184d0:	mov	x23, x0
   184d4:	and	w24, w4, #0xff
   184d8:	mov	x0, #0x68                  	// #104
   184dc:	bl	a5f0 <malloc@plt>
   184e0:	mov	x19, x0
   184e4:	cbz	x0, 1851c <idpriv_temp_restore@@Base+0x1144>
   184e8:	mov	x0, #0xb                   	// #11
   184ec:	stp	x23, x22, [x19]
   184f0:	mov	x1, #0x8                   	// #8
   184f4:	stp	x21, x20, [x19, #16]
   184f8:	strb	w24, [x19, #32]
   184fc:	str	x0, [x19, #48]
   18500:	bl	a770 <calloc@plt>
   18504:	str	x0, [x19, #40]
   18508:	cbz	x0, 18534 <idpriv_temp_restore@@Base+0x115c>
   1850c:	add	x0, x19, #0x38
   18510:	str	xzr, [x19, #96]
   18514:	dup	v0.2d, x0
   18518:	stur	q0, [x19, #72]
   1851c:	mov	x0, x19
   18520:	ldp	x19, x20, [sp, #16]
   18524:	ldp	x21, x22, [sp, #32]
   18528:	ldp	x23, x24, [sp, #48]
   1852c:	ldp	x29, x30, [sp], #64
   18530:	ret
   18534:	mov	x0, x19
   18538:	mov	x19, #0x0                   	// #0
   1853c:	bl	aa50 <free@plt>
   18540:	b	1851c <idpriv_temp_restore@@Base+0x1144>
   18544:	nop
   18548:	stp	x29, x30, [sp, #-48]!
   1854c:	mov	x29, sp
   18550:	stp	x19, x20, [sp, #16]
   18554:	mov	x19, x0
   18558:	ldr	x0, [x0, #96]
   1855c:	ldr	x20, [x19, #48]
   18560:	lsr	x1, x0, #1
   18564:	adds	x1, x1, x0
   18568:	csinv	x1, x1, xzr, cc  // cc = lo, ul, last
   1856c:	cmp	x20, x1
   18570:	b.cc	18580 <idpriv_temp_restore@@Base+0x11a8>  // b.lo, b.ul, b.last
   18574:	ldp	x19, x20, [sp, #16]
   18578:	ldp	x29, x30, [sp], #48
   1857c:	ret
   18580:	adrp	x2, 33000 <vasnprintf@@Base+0x2848>
   18584:	mov	x0, #0x0                   	// #0
   18588:	add	x2, x2, #0x560
   1858c:	stp	x21, x22, [sp, #32]
   18590:	b	1859c <idpriv_temp_restore@@Base+0x11c4>
   18594:	cmp	x0, #0xe8
   18598:	b.eq	18610 <idpriv_temp_restore@@Base+0x1238>  // b.none
   1859c:	ldr	x21, [x2, x0, lsl #3]
   185a0:	add	x0, x0, #0x1
   185a4:	cmp	x1, x21
   185a8:	b.hi	18594 <idpriv_temp_restore@@Base+0x11bc>  // b.pmore
   185ac:	cmp	x20, x21
   185b0:	b.cs	18610 <idpriv_temp_restore@@Base+0x1238>  // b.hs, b.nlast
   185b4:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   185b8:	cmp	x21, x0
   185bc:	b.hi	18610 <idpriv_temp_restore@@Base+0x1238>  // b.pmore
   185c0:	mov	x0, x21
   185c4:	mov	x1, #0x8                   	// #8
   185c8:	ldr	x22, [x19, #40]
   185cc:	bl	a770 <calloc@plt>
   185d0:	cbz	x0, 18610 <idpriv_temp_restore@@Base+0x1238>
   185d4:	nop
   185d8:	cbz	x20, 18620 <idpriv_temp_restore@@Base+0x1248>
   185dc:	sub	x20, x20, #0x1
   185e0:	ldr	x1, [x22, x20, lsl #3]
   185e4:	cbz	x1, 185d8 <idpriv_temp_restore@@Base+0x1200>
   185e8:	mov	x3, x1
   185ec:	ldr	x1, [x1]
   185f0:	ldr	x4, [x3, #8]
   185f4:	udiv	x2, x4, x21
   185f8:	msub	x2, x2, x21, x4
   185fc:	ldr	x4, [x0, x2, lsl #3]
   18600:	str	x4, [x3]
   18604:	str	x3, [x0, x2, lsl #3]
   18608:	cbnz	x1, 185e8 <idpriv_temp_restore@@Base+0x1210>
   1860c:	b	185d8 <idpriv_temp_restore@@Base+0x1200>
   18610:	ldp	x19, x20, [sp, #16]
   18614:	ldp	x21, x22, [sp, #32]
   18618:	ldp	x29, x30, [sp], #48
   1861c:	ret
   18620:	stp	x0, x21, [x19, #40]
   18624:	mov	x0, x22
   18628:	ldp	x19, x20, [sp, #16]
   1862c:	ldp	x21, x22, [sp, #32]
   18630:	ldp	x29, x30, [sp], #48
   18634:	b	aa50 <free@plt>
   18638:	stp	x29, x30, [sp, #-64]!
   1863c:	mov	x29, sp
   18640:	stp	x19, x20, [sp, #16]
   18644:	ldr	x20, [x0, #96]
   18648:	stp	x21, x22, [sp, #32]
   1864c:	str	x23, [sp, #48]
   18650:	cmp	x20, x1
   18654:	b.cc	18730 <idpriv_temp_restore@@Base+0x1358>  // b.lo, b.ul, b.last
   18658:	mov	x22, x0
   1865c:	mov	x19, x1
   18660:	mov	x23, x2
   18664:	mov	x0, #0x28                  	// #40
   18668:	bl	a5f0 <malloc@plt>
   1866c:	mov	x21, x0
   18670:	cbz	x0, 186ec <idpriv_temp_restore@@Base+0x1314>
   18674:	ldr	x1, [x22, #16]
   18678:	str	x23, [x21, #32]
   1867c:	mov	x0, x23
   18680:	mov	x2, x20
   18684:	cbz	x1, 18690 <idpriv_temp_restore@@Base+0x12b8>
   18688:	blr	x1
   1868c:	ldr	x2, [x22, #96]
   18690:	str	x0, [x21, #8]
   18694:	ldp	x4, x5, [x22, #40]
   18698:	cmp	x19, x20, lsr #1
   1869c:	add	x3, x22, #0x38
   186a0:	udiv	x1, x0, x5
   186a4:	msub	x0, x1, x5, x0
   186a8:	ldr	x1, [x4, x0, lsl #3]
   186ac:	str	x1, [x21]
   186b0:	str	x21, [x4, x0, lsl #3]
   186b4:	b.hi	18704 <idpriv_temp_restore@@Base+0x132c>  // b.pmore
   186b8:	cbz	x19, 186cc <idpriv_temp_restore@@Base+0x12f4>
   186bc:	nop
   186c0:	subs	x19, x19, #0x1
   186c4:	ldr	x3, [x3, #16]
   186c8:	b.ne	186c0 <idpriv_temp_restore@@Base+0x12e8>  // b.any
   186cc:	ldr	x0, [x3, #16]
   186d0:	stp	x0, x3, [x21, #16]
   186d4:	str	x21, [x0, #24]
   186d8:	str	x21, [x3, #16]
   186dc:	add	x0, x2, #0x1
   186e0:	str	x0, [x22, #96]
   186e4:	mov	x0, x22
   186e8:	bl	18548 <idpriv_temp_restore@@Base+0x1170>
   186ec:	mov	x0, x21
   186f0:	ldp	x19, x20, [sp, #16]
   186f4:	ldp	x21, x22, [sp, #32]
   186f8:	ldr	x23, [sp, #48]
   186fc:	ldp	x29, x30, [sp], #64
   18700:	ret
   18704:	subs	x19, x20, x19
   18708:	b.eq	1871c <idpriv_temp_restore@@Base+0x1344>  // b.none
   1870c:	nop
   18710:	subs	x19, x19, #0x1
   18714:	ldr	x3, [x3, #24]
   18718:	b.ne	18710 <idpriv_temp_restore@@Base+0x1338>  // b.any
   1871c:	ldr	x0, [x3, #24]
   18720:	stp	x3, x0, [x21, #16]
   18724:	str	x21, [x0, #16]
   18728:	str	x21, [x3, #24]
   1872c:	b	186dc <idpriv_temp_restore@@Base+0x1304>
   18730:	bl	a900 <abort@plt>
   18734:	nop
   18738:	stp	x29, x30, [sp, #-48]!
   1873c:	mov	x29, sp
   18740:	stp	x19, x20, [sp, #16]
   18744:	mov	x20, x2
   18748:	stp	x21, x22, [sp, #32]
   1874c:	mov	x21, x0
   18750:	mov	x22, x1
   18754:	mov	x0, #0x28                  	// #40
   18758:	bl	a5f0 <malloc@plt>
   1875c:	mov	x19, x0
   18760:	cbz	x0, 187b8 <idpriv_temp_restore@@Base+0x13e0>
   18764:	ldr	x1, [x21, #16]
   18768:	str	x20, [x0, #32]
   1876c:	cbz	x1, 1877c <idpriv_temp_restore@@Base+0x13a4>
   18770:	mov	x0, x20
   18774:	blr	x1
   18778:	mov	x20, x0
   1877c:	ldp	x5, x6, [x21, #40]
   18780:	mov	x0, x21
   18784:	ldr	x3, [x21, #96]
   18788:	ldr	x4, [x22, #16]
   1878c:	udiv	x1, x20, x6
   18790:	msub	x2, x1, x6, x20
   18794:	add	x1, x3, #0x1
   18798:	ldr	x3, [x5, x2, lsl #3]
   1879c:	stp	x3, x20, [x19]
   187a0:	str	x19, [x5, x2, lsl #3]
   187a4:	stp	x4, x22, [x19, #16]
   187a8:	str	x19, [x4, #24]
   187ac:	str	x19, [x22, #16]
   187b0:	str	x1, [x21, #96]
   187b4:	bl	18548 <idpriv_temp_restore@@Base+0x1170>
   187b8:	mov	x0, x19
   187bc:	ldp	x19, x20, [sp, #16]
   187c0:	ldp	x21, x22, [sp, #32]
   187c4:	ldp	x29, x30, [sp], #48
   187c8:	ret
   187cc:	nop
   187d0:	stp	x29, x30, [sp, #-48]!
   187d4:	mov	x29, sp
   187d8:	stp	x19, x20, [sp, #16]
   187dc:	mov	x20, x2
   187e0:	stp	x21, x22, [sp, #32]
   187e4:	mov	x21, x0
   187e8:	mov	x22, x1
   187ec:	mov	x0, #0x28                  	// #40
   187f0:	bl	a5f0 <malloc@plt>
   187f4:	mov	x19, x0
   187f8:	cbz	x0, 18850 <idpriv_temp_restore@@Base+0x1478>
   187fc:	ldr	x1, [x21, #16]
   18800:	str	x20, [x0, #32]
   18804:	cbz	x1, 18814 <idpriv_temp_restore@@Base+0x143c>
   18808:	mov	x0, x20
   1880c:	blr	x1
   18810:	mov	x20, x0
   18814:	ldp	x5, x6, [x21, #40]
   18818:	mov	x0, x21
   1881c:	ldr	x3, [x21, #96]
   18820:	ldr	x4, [x22, #24]
   18824:	udiv	x1, x20, x6
   18828:	msub	x2, x1, x6, x20
   1882c:	add	x1, x3, #0x1
   18830:	ldr	x3, [x5, x2, lsl #3]
   18834:	stp	x3, x20, [x19]
   18838:	str	x19, [x5, x2, lsl #3]
   1883c:	stp	x22, x4, [x19, #16]
   18840:	str	x19, [x4, #16]
   18844:	str	x19, [x22, #24]
   18848:	str	x1, [x21, #96]
   1884c:	bl	18548 <idpriv_temp_restore@@Base+0x1170>
   18850:	mov	x0, x19
   18854:	ldp	x19, x20, [sp, #16]
   18858:	ldp	x21, x22, [sp, #32]
   1885c:	ldp	x29, x30, [sp], #48
   18860:	ret
   18864:	nop
   18868:	stp	x29, x30, [sp, #-48]!
   1886c:	mov	x29, sp
   18870:	stp	x19, x20, [sp, #16]
   18874:	mov	x20, x0
   18878:	mov	x0, #0x28                  	// #40
   1887c:	str	x21, [sp, #32]
   18880:	mov	x21, x1
   18884:	bl	a5f0 <malloc@plt>
   18888:	mov	x19, x0
   1888c:	cbz	x0, 188e8 <idpriv_temp_restore@@Base+0x1510>
   18890:	ldr	x2, [x20, #16]
   18894:	str	x21, [x0, #32]
   18898:	cbz	x2, 188a8 <idpriv_temp_restore@@Base+0x14d0>
   1889c:	mov	x0, x21
   188a0:	blr	x2
   188a4:	mov	x21, x0
   188a8:	ldp	x5, x6, [x20, #40]
   188ac:	add	x7, x20, #0x38
   188b0:	ldr	x3, [x20, #96]
   188b4:	mov	x0, x20
   188b8:	ldr	x4, [x20, #80]
   188bc:	udiv	x2, x21, x6
   188c0:	msub	x1, x2, x6, x21
   188c4:	add	x2, x3, #0x1
   188c8:	ldr	x3, [x5, x1, lsl #3]
   188cc:	stp	x3, x21, [x19]
   188d0:	str	x19, [x5, x1, lsl #3]
   188d4:	stp	x7, x4, [x19, #16]
   188d8:	str	x19, [x4, #16]
   188dc:	str	x19, [x20, #80]
   188e0:	str	x2, [x20, #96]
   188e4:	bl	18548 <idpriv_temp_restore@@Base+0x1170>
   188e8:	mov	x0, x19
   188ec:	ldp	x19, x20, [sp, #16]
   188f0:	ldr	x21, [sp, #32]
   188f4:	ldp	x29, x30, [sp], #48
   188f8:	ret
   188fc:	nop
   18900:	stp	x29, x30, [sp, #-48]!
   18904:	mov	x29, sp
   18908:	stp	x19, x20, [sp, #16]
   1890c:	mov	x20, x0
   18910:	mov	x0, #0x28                  	// #40
   18914:	str	x21, [sp, #32]
   18918:	mov	x21, x1
   1891c:	bl	a5f0 <malloc@plt>
   18920:	mov	x19, x0
   18924:	cbz	x0, 18980 <idpriv_temp_restore@@Base+0x15a8>
   18928:	ldr	x2, [x20, #16]
   1892c:	str	x21, [x0, #32]
   18930:	cbz	x2, 18940 <idpriv_temp_restore@@Base+0x1568>
   18934:	mov	x0, x21
   18938:	blr	x2
   1893c:	mov	x21, x0
   18940:	ldp	x5, x6, [x20, #40]
   18944:	add	x7, x20, #0x38
   18948:	ldr	x3, [x20, #96]
   1894c:	mov	x0, x20
   18950:	ldr	x4, [x20, #72]
   18954:	udiv	x2, x21, x6
   18958:	msub	x1, x2, x6, x21
   1895c:	add	x2, x3, #0x1
   18960:	ldr	x3, [x5, x1, lsl #3]
   18964:	stp	x3, x21, [x19]
   18968:	str	x19, [x5, x1, lsl #3]
   1896c:	stp	x4, x7, [x19, #16]
   18970:	str	x19, [x4, #24]
   18974:	str	x19, [x20, #72]
   18978:	str	x2, [x20, #96]
   1897c:	bl	18548 <idpriv_temp_restore@@Base+0x1170>
   18980:	mov	x0, x19
   18984:	ldp	x19, x20, [sp, #16]
   18988:	ldr	x21, [sp, #32]
   1898c:	ldp	x29, x30, [sp], #48
   18990:	ret
   18994:	nop
   18998:	stp	x29, x30, [sp, #-64]!
   1899c:	mov	x29, sp
   189a0:	stp	x19, x20, [sp, #16]
   189a4:	mov	x20, x2
   189a8:	ldr	x19, [x0, #72]
   189ac:	stp	x21, x22, [sp, #32]
   189b0:	mov	x22, x0
   189b4:	str	x23, [sp, #48]
   189b8:	add	x23, x0, #0x38
   189bc:	cmp	x19, x23
   189c0:	b.eq	18a68 <idpriv_temp_restore@@Base+0x1690>  // b.none
   189c4:	mov	x21, x1
   189c8:	b	189d8 <idpriv_temp_restore@@Base+0x1600>
   189cc:	ldr	x19, [x19, #16]
   189d0:	cmp	x19, x23
   189d4:	b.eq	18a68 <idpriv_temp_restore@@Base+0x1690>  // b.none
   189d8:	ldr	x0, [x19, #32]
   189dc:	mov	x1, x20
   189e0:	blr	x21
   189e4:	tbnz	w0, #31, 189cc <idpriv_temp_restore@@Base+0x15f4>
   189e8:	mov	x0, #0x28                  	// #40
   189ec:	bl	a5f0 <malloc@plt>
   189f0:	mov	x21, x0
   189f4:	cbz	x0, 18ae8 <idpriv_temp_restore@@Base+0x1710>
   189f8:	ldr	x1, [x22, #16]
   189fc:	str	x20, [x0, #32]
   18a00:	cbz	x1, 18a10 <idpriv_temp_restore@@Base+0x1638>
   18a04:	mov	x0, x20
   18a08:	blr	x1
   18a0c:	mov	x20, x0
   18a10:	ldp	x4, x5, [x22, #40]
   18a14:	mov	x0, x22
   18a18:	ldr	x3, [x19, #24]
   18a1c:	str	x20, [x21, #8]
   18a20:	ldr	x2, [x22, #96]
   18a24:	udiv	x1, x20, x5
   18a28:	msub	x20, x1, x5, x20
   18a2c:	add	x1, x2, #0x1
   18a30:	ldr	x2, [x4, x20, lsl #3]
   18a34:	str	x2, [x21]
   18a38:	str	x21, [x4, x20, lsl #3]
   18a3c:	stp	x19, x3, [x21, #16]
   18a40:	str	x21, [x3, #16]
   18a44:	str	x21, [x19, #24]
   18a48:	str	x1, [x22, #96]
   18a4c:	bl	18548 <idpriv_temp_restore@@Base+0x1170>
   18a50:	mov	x0, x21
   18a54:	ldp	x19, x20, [sp, #16]
   18a58:	ldp	x21, x22, [sp, #32]
   18a5c:	ldr	x23, [sp, #48]
   18a60:	ldp	x29, x30, [sp], #64
   18a64:	ret
   18a68:	mov	x0, #0x28                  	// #40
   18a6c:	bl	a5f0 <malloc@plt>
   18a70:	mov	x21, x0
   18a74:	cbz	x0, 18ae8 <idpriv_temp_restore@@Base+0x1710>
   18a78:	ldr	x1, [x22, #16]
   18a7c:	str	x20, [x0, #32]
   18a80:	cbz	x1, 18a90 <idpriv_temp_restore@@Base+0x16b8>
   18a84:	mov	x0, x20
   18a88:	blr	x1
   18a8c:	mov	x20, x0
   18a90:	ldp	x4, x5, [x22, #40]
   18a94:	str	x20, [x21, #8]
   18a98:	ldr	x2, [x22, #96]
   18a9c:	mov	x0, x22
   18aa0:	ldr	x3, [x22, #80]
   18aa4:	udiv	x1, x20, x5
   18aa8:	msub	x20, x1, x5, x20
   18aac:	add	x1, x2, #0x1
   18ab0:	ldr	x2, [x4, x20, lsl #3]
   18ab4:	str	x2, [x21]
   18ab8:	str	x21, [x4, x20, lsl #3]
   18abc:	stp	x23, x3, [x21, #16]
   18ac0:	str	x21, [x3, #16]
   18ac4:	str	x21, [x22, #80]
   18ac8:	str	x1, [x22, #96]
   18acc:	bl	18548 <idpriv_temp_restore@@Base+0x1170>
   18ad0:	mov	x0, x21
   18ad4:	ldp	x19, x20, [sp, #16]
   18ad8:	ldp	x21, x22, [sp, #32]
   18adc:	ldr	x23, [sp, #48]
   18ae0:	ldp	x29, x30, [sp], #64
   18ae4:	ret
   18ae8:	mov	x21, #0x0                   	// #0
   18aec:	b	18ad0 <idpriv_temp_restore@@Base+0x16f8>
   18af0:	stp	x29, x30, [sp, #-80]!
   18af4:	mov	x29, sp
   18af8:	stp	x21, x22, [sp, #32]
   18afc:	mov	x22, x1
   18b00:	mov	x21, x0
   18b04:	stp	x23, x24, [sp, #48]
   18b08:	mov	x24, x1
   18b0c:	ldr	x1, [x0, #16]
   18b10:	stp	x19, x20, [sp, #16]
   18b14:	ldr	x23, [x0, #96]
   18b18:	str	x25, [sp, #64]
   18b1c:	cbz	x1, 18b2c <idpriv_temp_restore@@Base+0x1754>
   18b20:	mov	x0, x24
   18b24:	blr	x1
   18b28:	mov	x22, x0
   18b2c:	ldp	x3, x1, [x21, #40]
   18b30:	ldrb	w2, [x21, #32]
   18b34:	ldr	x25, [x21, #8]
   18b38:	udiv	x0, x22, x1
   18b3c:	msub	x0, x0, x1, x22
   18b40:	ldr	x19, [x3, x0, lsl #3]
   18b44:	cbnz	w2, 18bb8 <idpriv_temp_restore@@Base+0x17e0>
   18b48:	cbz	x19, 18c00 <idpriv_temp_restore@@Base+0x1828>
   18b4c:	cbnz	x25, 18b5c <idpriv_temp_restore@@Base+0x1784>
   18b50:	b	18d24 <idpriv_temp_restore@@Base+0x194c>
   18b54:	ldr	x19, [x19]
   18b58:	cbz	x19, 18c00 <idpriv_temp_restore@@Base+0x1828>
   18b5c:	ldr	x0, [x19, #8]
   18b60:	cmp	x22, x0
   18b64:	b.ne	18b54 <idpriv_temp_restore@@Base+0x177c>  // b.any
   18b68:	ldr	x1, [x19, #32]
   18b6c:	mov	x0, x24
   18b70:	blr	x25
   18b74:	tst	w0, #0xff
   18b78:	b.eq	18b54 <idpriv_temp_restore@@Base+0x177c>  // b.none
   18b7c:	mov	x20, x19
   18b80:	ldp	x1, x2, [x21, #40]
   18b84:	ldr	x3, [x20, #8]
   18b88:	udiv	x0, x3, x2
   18b8c:	msub	x0, x0, x2, x3
   18b90:	add	x3, x1, x0, lsl #3
   18b94:	ldr	x0, [x1, x0, lsl #3]
   18b98:	cmp	x0, x20
   18b9c:	b.eq	18c90 <idpriv_temp_restore@@Base+0x18b8>  // b.none
   18ba0:	cbz	x0, 18dac <idpriv_temp_restore@@Base+0x19d4>
   18ba4:	ldr	x1, [x0]
   18ba8:	cmp	x1, x20
   18bac:	b.eq	18d34 <idpriv_temp_restore@@Base+0x195c>  // b.none
   18bb0:	mov	x0, x1
   18bb4:	b	18ba0 <idpriv_temp_restore@@Base+0x17c8>
   18bb8:	cbnz	x19, 18c1c <idpriv_temp_restore@@Base+0x1844>
   18bbc:	ldr	x1, [x21, #96]
   18bc0:	mov	x20, #0x0                   	// #0
   18bc4:	cmp	x23, x1
   18bc8:	b.cs	18c00 <idpriv_temp_restore@@Base+0x1828>  // b.hs, b.nlast
   18bcc:	nop
   18bd0:	ldr	x0, [x21, #80]
   18bd4:	mvn	x23, x23
   18bd8:	cmp	x0, x20
   18bdc:	b.eq	18c00 <idpriv_temp_restore@@Base+0x1828>  // b.none
   18be0:	adds	x23, x23, x1
   18be4:	b.ne	18bf4 <idpriv_temp_restore@@Base+0x181c>  // b.any
   18be8:	b	18c6c <idpriv_temp_restore@@Base+0x1894>
   18bec:	subs	x23, x23, #0x1
   18bf0:	b.eq	18c6c <idpriv_temp_restore@@Base+0x1894>  // b.none
   18bf4:	ldr	x0, [x0, #24]
   18bf8:	cmp	x20, x0
   18bfc:	b.ne	18bec <idpriv_temp_restore@@Base+0x1814>  // b.any
   18c00:	mov	w0, #0x0                   	// #0
   18c04:	ldp	x19, x20, [sp, #16]
   18c08:	ldp	x21, x22, [sp, #32]
   18c0c:	ldp	x23, x24, [sp, #48]
   18c10:	ldr	x25, [sp, #64]
   18c14:	ldp	x29, x30, [sp], #80
   18c18:	ret
   18c1c:	mov	x20, #0x0                   	// #0
   18c20:	cbnz	x25, 18c30 <idpriv_temp_restore@@Base+0x1858>
   18c24:	b	18d00 <idpriv_temp_restore@@Base+0x1928>
   18c28:	ldr	x19, [x19]
   18c2c:	cbz	x19, 18c60 <idpriv_temp_restore@@Base+0x1888>
   18c30:	ldr	x0, [x19, #8]
   18c34:	cmp	x22, x0
   18c38:	b.ne	18c28 <idpriv_temp_restore@@Base+0x1850>  // b.any
   18c3c:	ldr	x1, [x19, #32]
   18c40:	mov	x0, x24
   18c44:	blr	x25
   18c48:	tst	w0, #0xff
   18c4c:	b.eq	18c28 <idpriv_temp_restore@@Base+0x1850>  // b.none
   18c50:	cbnz	x20, 18d3c <idpriv_temp_restore@@Base+0x1964>
   18c54:	mov	x20, x19
   18c58:	ldr	x19, [x19]
   18c5c:	cbnz	x19, 18c30 <idpriv_temp_restore@@Base+0x1858>
   18c60:	ldr	x1, [x21, #96]
   18c64:	cmp	x23, x1
   18c68:	b.cc	18bd0 <idpriv_temp_restore@@Base+0x17f8>  // b.lo, b.ul, b.last
   18c6c:	cbz	x20, 18c00 <idpriv_temp_restore@@Base+0x1828>
   18c70:	ldp	x1, x2, [x21, #40]
   18c74:	ldr	x3, [x20, #8]
   18c78:	udiv	x0, x3, x2
   18c7c:	msub	x0, x0, x2, x3
   18c80:	add	x3, x1, x0, lsl #3
   18c84:	ldr	x0, [x1, x0, lsl #3]
   18c88:	cmp	x0, x20
   18c8c:	b.ne	18ba0 <idpriv_temp_restore@@Base+0x17c8>  // b.any
   18c90:	ldp	x1, x2, [x20, #16]
   18c94:	ldr	x0, [x20]
   18c98:	str	x0, [x3]
   18c9c:	ldr	x0, [x21, #96]
   18ca0:	ldr	x3, [x21, #24]
   18ca4:	str	x1, [x2, #16]
   18ca8:	str	x2, [x1, #24]
   18cac:	sub	x0, x0, #0x1
   18cb0:	str	x0, [x21, #96]
   18cb4:	cbz	x3, 18cc0 <idpriv_temp_restore@@Base+0x18e8>
   18cb8:	ldr	x0, [x20, #32]
   18cbc:	blr	x3
   18cc0:	mov	x0, x20
   18cc4:	bl	aa50 <free@plt>
   18cc8:	mov	w0, #0x1                   	// #1
   18ccc:	ldp	x19, x20, [sp, #16]
   18cd0:	ldp	x21, x22, [sp, #32]
   18cd4:	ldp	x23, x24, [sp, #48]
   18cd8:	ldr	x25, [sp, #64]
   18cdc:	ldp	x29, x30, [sp], #80
   18ce0:	ret
   18ce4:	ldr	x0, [x19, #32]
   18ce8:	cmp	x24, x0
   18cec:	b.ne	18cf8 <idpriv_temp_restore@@Base+0x1920>  // b.any
   18cf0:	cbnz	x20, 18d78 <idpriv_temp_restore@@Base+0x19a0>
   18cf4:	mov	x20, x19
   18cf8:	ldr	x19, [x19]
   18cfc:	cbz	x19, 18c60 <idpriv_temp_restore@@Base+0x1888>
   18d00:	ldr	x0, [x19, #8]
   18d04:	cmp	x22, x0
   18d08:	b.ne	18cf8 <idpriv_temp_restore@@Base+0x1920>  // b.any
   18d0c:	b	18ce4 <idpriv_temp_restore@@Base+0x190c>
   18d10:	ldr	x0, [x19, #32]
   18d14:	cmp	x24, x0
   18d18:	b.eq	18b7c <idpriv_temp_restore@@Base+0x17a4>  // b.none
   18d1c:	ldr	x19, [x19]
   18d20:	cbz	x19, 18c00 <idpriv_temp_restore@@Base+0x1828>
   18d24:	ldr	x0, [x19, #8]
   18d28:	cmp	x22, x0
   18d2c:	b.ne	18d1c <idpriv_temp_restore@@Base+0x1944>  // b.any
   18d30:	b	18d10 <idpriv_temp_restore@@Base+0x1938>
   18d34:	mov	x3, x0
   18d38:	b	18c90 <idpriv_temp_restore@@Base+0x18b8>
   18d3c:	ldr	x20, [x21, #72]
   18d40:	cbnz	x23, 18d54 <idpriv_temp_restore@@Base+0x197c>
   18d44:	b	18c00 <idpriv_temp_restore@@Base+0x1828>
   18d48:	subs	x23, x23, #0x1
   18d4c:	ldr	x20, [x20, #16]
   18d50:	b.eq	18c00 <idpriv_temp_restore@@Base+0x1828>  // b.none
   18d54:	ldr	x0, [x20, #8]
   18d58:	cmp	x22, x0
   18d5c:	b.ne	18d48 <idpriv_temp_restore@@Base+0x1970>  // b.any
   18d60:	ldr	x1, [x20, #32]
   18d64:	mov	x0, x24
   18d68:	blr	x25
   18d6c:	tst	w0, #0xff
   18d70:	b.eq	18d48 <idpriv_temp_restore@@Base+0x1970>  // b.none
   18d74:	b	18c70 <idpriv_temp_restore@@Base+0x1898>
   18d78:	ldr	x20, [x21, #72]
   18d7c:	cbnz	x23, 18d90 <idpriv_temp_restore@@Base+0x19b8>
   18d80:	b	18c00 <idpriv_temp_restore@@Base+0x1828>
   18d84:	subs	x23, x23, #0x1
   18d88:	ldr	x20, [x20, #16]
   18d8c:	b.eq	18c00 <idpriv_temp_restore@@Base+0x1828>  // b.none
   18d90:	ldr	x0, [x20, #8]
   18d94:	cmp	x22, x0
   18d98:	b.ne	18d84 <idpriv_temp_restore@@Base+0x19ac>  // b.any
   18d9c:	ldr	x0, [x20, #32]
   18da0:	cmp	x24, x0
   18da4:	b.ne	18d84 <idpriv_temp_restore@@Base+0x19ac>  // b.any
   18da8:	b	18c70 <idpriv_temp_restore@@Base+0x1898>
   18dac:	bl	a900 <abort@plt>
   18db0:	stp	x29, x30, [sp, #-64]!
   18db4:	mov	x29, sp
   18db8:	stp	x19, x20, [sp, #16]
   18dbc:	ldr	x19, [x0, #72]
   18dc0:	stp	x21, x22, [sp, #32]
   18dc4:	add	x22, x0, #0x38
   18dc8:	cmp	x19, x22
   18dcc:	b.eq	18e0c <idpriv_temp_restore@@Base+0x1a34>  // b.none
   18dd0:	mov	x21, x1
   18dd4:	mov	x20, x2
   18dd8:	str	x23, [sp, #48]
   18ddc:	mov	x23, x0
   18de0:	b	18df4 <idpriv_temp_restore@@Base+0x1a1c>
   18de4:	b.eq	18e20 <idpriv_temp_restore@@Base+0x1a48>  // b.none
   18de8:	ldr	x19, [x19, #16]
   18dec:	cmp	x19, x22
   18df0:	b.eq	18e08 <idpriv_temp_restore@@Base+0x1a30>  // b.none
   18df4:	ldr	x0, [x19, #32]
   18df8:	mov	x1, x20
   18dfc:	blr	x21
   18e00:	cmp	w0, #0x0
   18e04:	b.le	18de4 <idpriv_temp_restore@@Base+0x1a0c>
   18e08:	ldr	x23, [sp, #48]
   18e0c:	mov	w0, #0x0                   	// #0
   18e10:	ldp	x19, x20, [sp, #16]
   18e14:	ldp	x21, x22, [sp, #32]
   18e18:	ldp	x29, x30, [sp], #64
   18e1c:	ret
   18e20:	ldp	x1, x2, [x23, #40]
   18e24:	ldr	x3, [x19, #8]
   18e28:	udiv	x0, x3, x2
   18e2c:	msub	x0, x0, x2, x3
   18e30:	add	x3, x1, x0, lsl #3
   18e34:	ldr	x1, [x1, x0, lsl #3]
   18e38:	cmp	x1, x19
   18e3c:	b.eq	18e5c <idpriv_temp_restore@@Base+0x1a84>  // b.none
   18e40:	cbz	x1, 18eac <idpriv_temp_restore@@Base+0x1ad4>
   18e44:	ldr	x2, [x1]
   18e48:	cmp	x2, x19
   18e4c:	b.eq	18e58 <idpriv_temp_restore@@Base+0x1a80>  // b.none
   18e50:	mov	x1, x2
   18e54:	b	18e40 <idpriv_temp_restore@@Base+0x1a68>
   18e58:	mov	x3, x1
   18e5c:	ldp	x1, x2, [x19, #16]
   18e60:	ldr	x0, [x19]
   18e64:	str	x0, [x3]
   18e68:	ldr	x0, [x23, #96]
   18e6c:	ldr	x3, [x23, #24]
   18e70:	str	x1, [x2, #16]
   18e74:	str	x2, [x1, #24]
   18e78:	sub	x0, x0, #0x1
   18e7c:	str	x0, [x23, #96]
   18e80:	cbz	x3, 18e8c <idpriv_temp_restore@@Base+0x1ab4>
   18e84:	ldr	x0, [x19, #32]
   18e88:	blr	x3
   18e8c:	mov	x0, x19
   18e90:	bl	aa50 <free@plt>
   18e94:	mov	w0, #0x1                   	// #1
   18e98:	ldp	x19, x20, [sp, #16]
   18e9c:	ldp	x21, x22, [sp, #32]
   18ea0:	ldr	x23, [sp, #48]
   18ea4:	ldp	x29, x30, [sp], #64
   18ea8:	ret
   18eac:	bl	a900 <abort@plt>

0000000000018eb0 <gl_list_nx_create_empty@@Base>:
   18eb0:	ldr	x5, [x0]
   18eb4:	mov	x16, x5
   18eb8:	br	x16
   18ebc:	nop

0000000000018ec0 <gl_list_nx_create@@Base>:
   18ec0:	ldr	x7, [x0, #8]
   18ec4:	mov	x16, x7
   18ec8:	br	x16
   18ecc:	nop

0000000000018ed0 <gl_list_size@@Base>:
   18ed0:	ldr	x1, [x0]
   18ed4:	ldr	x1, [x1, #16]
   18ed8:	mov	x16, x1
   18edc:	br	x16

0000000000018ee0 <gl_list_node_value@@Base>:
   18ee0:	ldr	x2, [x0]
   18ee4:	ldr	x2, [x2, #24]
   18ee8:	mov	x16, x2
   18eec:	br	x16

0000000000018ef0 <gl_list_node_nx_set_value@@Base>:
   18ef0:	ldr	x3, [x0]
   18ef4:	ldr	x3, [x3, #32]
   18ef8:	mov	x16, x3
   18efc:	br	x16

0000000000018f00 <gl_list_next_node@@Base>:
   18f00:	ldr	x2, [x0]
   18f04:	ldr	x2, [x2, #40]
   18f08:	mov	x16, x2
   18f0c:	br	x16

0000000000018f10 <gl_list_previous_node@@Base>:
   18f10:	ldr	x2, [x0]
   18f14:	ldr	x2, [x2, #48]
   18f18:	mov	x16, x2
   18f1c:	br	x16

0000000000018f20 <gl_list_get_at@@Base>:
   18f20:	ldr	x2, [x0]
   18f24:	ldr	x2, [x2, #56]
   18f28:	mov	x16, x2
   18f2c:	br	x16

0000000000018f30 <gl_list_nx_set_at@@Base>:
   18f30:	ldr	x3, [x0]
   18f34:	ldr	x3, [x3, #64]
   18f38:	mov	x16, x3
   18f3c:	br	x16

0000000000018f40 <gl_list_search@@Base>:
   18f40:	stp	x29, x30, [sp, #-32]!
   18f44:	mov	x29, sp
   18f48:	stp	x19, x20, [sp, #16]
   18f4c:	mov	x20, x1
   18f50:	mov	x19, x0
   18f54:	ldr	x1, [x0]
   18f58:	ldr	x1, [x1, #16]
   18f5c:	blr	x1
   18f60:	mov	x2, x0
   18f64:	ldr	x4, [x19]
   18f68:	mov	x3, x20
   18f6c:	mov	x0, x19
   18f70:	mov	x1, #0x0                   	// #0
   18f74:	ldp	x19, x20, [sp, #16]
   18f78:	ldp	x29, x30, [sp], #32
   18f7c:	ldr	x4, [x4, #72]
   18f80:	mov	x16, x4
   18f84:	br	x16

0000000000018f88 <gl_list_search_from@@Base>:
   18f88:	stp	x29, x30, [sp, #-48]!
   18f8c:	mov	x29, sp
   18f90:	stp	x19, x20, [sp, #16]
   18f94:	mov	x20, x1
   18f98:	mov	x19, x0
   18f9c:	ldr	x1, [x0]
   18fa0:	ldr	x1, [x1, #16]
   18fa4:	str	x21, [sp, #32]
   18fa8:	mov	x21, x2
   18fac:	blr	x1
   18fb0:	mov	x2, x0
   18fb4:	ldr	x4, [x19]
   18fb8:	mov	x3, x21
   18fbc:	mov	x1, x20
   18fc0:	mov	x0, x19
   18fc4:	ldp	x19, x20, [sp, #16]
   18fc8:	ldr	x21, [sp, #32]
   18fcc:	ldp	x29, x30, [sp], #48
   18fd0:	ldr	x4, [x4, #72]
   18fd4:	mov	x16, x4
   18fd8:	br	x16
   18fdc:	nop

0000000000018fe0 <gl_list_search_from_to@@Base>:
   18fe0:	ldr	x4, [x0]
   18fe4:	ldr	x4, [x4, #72]
   18fe8:	mov	x16, x4
   18fec:	br	x16

0000000000018ff0 <gl_list_indexof@@Base>:
   18ff0:	stp	x29, x30, [sp, #-32]!
   18ff4:	mov	x29, sp
   18ff8:	stp	x19, x20, [sp, #16]
   18ffc:	mov	x20, x1
   19000:	mov	x19, x0
   19004:	ldr	x1, [x0]
   19008:	ldr	x1, [x1, #16]
   1900c:	blr	x1
   19010:	mov	x2, x0
   19014:	ldr	x4, [x19]
   19018:	mov	x3, x20
   1901c:	mov	x0, x19
   19020:	mov	x1, #0x0                   	// #0
   19024:	ldp	x19, x20, [sp, #16]
   19028:	ldp	x29, x30, [sp], #32
   1902c:	ldr	x4, [x4, #80]
   19030:	mov	x16, x4
   19034:	br	x16

0000000000019038 <gl_list_indexof_from@@Base>:
   19038:	stp	x29, x30, [sp, #-48]!
   1903c:	mov	x29, sp
   19040:	stp	x19, x20, [sp, #16]
   19044:	mov	x20, x1
   19048:	mov	x19, x0
   1904c:	ldr	x1, [x0]
   19050:	ldr	x1, [x1, #16]
   19054:	str	x21, [sp, #32]
   19058:	mov	x21, x2
   1905c:	blr	x1
   19060:	mov	x2, x0
   19064:	ldr	x4, [x19]
   19068:	mov	x3, x21
   1906c:	mov	x1, x20
   19070:	mov	x0, x19
   19074:	ldp	x19, x20, [sp, #16]
   19078:	ldr	x21, [sp, #32]
   1907c:	ldp	x29, x30, [sp], #48
   19080:	ldr	x4, [x4, #80]
   19084:	mov	x16, x4
   19088:	br	x16
   1908c:	nop

0000000000019090 <gl_list_indexof_from_to@@Base>:
   19090:	ldr	x4, [x0]
   19094:	ldr	x4, [x4, #80]
   19098:	mov	x16, x4
   1909c:	br	x16

00000000000190a0 <gl_list_nx_add_first@@Base>:
   190a0:	ldr	x2, [x0]
   190a4:	ldr	x2, [x2, #88]
   190a8:	mov	x16, x2
   190ac:	br	x16

00000000000190b0 <gl_list_nx_add_last@@Base>:
   190b0:	ldr	x2, [x0]
   190b4:	ldr	x2, [x2, #96]
   190b8:	mov	x16, x2
   190bc:	br	x16

00000000000190c0 <gl_list_nx_add_before@@Base>:
   190c0:	ldr	x3, [x0]
   190c4:	ldr	x3, [x3, #104]
   190c8:	mov	x16, x3
   190cc:	br	x16

00000000000190d0 <gl_list_nx_add_after@@Base>:
   190d0:	ldr	x3, [x0]
   190d4:	ldr	x3, [x3, #112]
   190d8:	mov	x16, x3
   190dc:	br	x16

00000000000190e0 <gl_list_nx_add_at@@Base>:
   190e0:	ldr	x3, [x0]
   190e4:	ldr	x3, [x3, #120]
   190e8:	mov	x16, x3
   190ec:	br	x16

00000000000190f0 <gl_list_remove_node@@Base>:
   190f0:	ldr	x2, [x0]
   190f4:	ldr	x2, [x2, #128]
   190f8:	mov	x16, x2
   190fc:	br	x16

0000000000019100 <gl_list_remove_at@@Base>:
   19100:	ldr	x2, [x0]
   19104:	ldr	x2, [x2, #136]
   19108:	mov	x16, x2
   1910c:	br	x16

0000000000019110 <gl_list_remove@@Base>:
   19110:	ldr	x2, [x0]
   19114:	ldr	x2, [x2, #144]
   19118:	mov	x16, x2
   1911c:	br	x16

0000000000019120 <gl_list_free@@Base>:
   19120:	ldr	x1, [x0]
   19124:	ldr	x1, [x1, #152]
   19128:	mov	x16, x1
   1912c:	br	x16

0000000000019130 <gl_list_iterator@@Base>:
   19130:	stp	x29, x30, [sp, #-16]!
   19134:	mov	x29, sp
   19138:	ldr	x1, [x0]
   1913c:	ldr	x1, [x1, #160]
   19140:	blr	x1
   19144:	ldp	x29, x30, [sp], #16
   19148:	ret
   1914c:	nop

0000000000019150 <gl_list_iterator_from_to@@Base>:
   19150:	stp	x29, x30, [sp, #-16]!
   19154:	mov	x29, sp
   19158:	ldr	x3, [x0]
   1915c:	ldr	x3, [x3, #168]
   19160:	blr	x3
   19164:	ldp	x29, x30, [sp], #16
   19168:	ret
   1916c:	nop

0000000000019170 <gl_list_iterator_next@@Base>:
   19170:	ldr	x3, [x0]
   19174:	ldr	x3, [x3, #176]
   19178:	mov	x16, x3
   1917c:	br	x16

0000000000019180 <gl_list_iterator_free@@Base>:
   19180:	ldr	x1, [x0]
   19184:	ldr	x1, [x1, #184]
   19188:	mov	x16, x1
   1918c:	br	x16

0000000000019190 <gl_sortedlist_search@@Base>:
   19190:	ldr	x3, [x0]
   19194:	ldr	x3, [x3, #192]
   19198:	mov	x16, x3
   1919c:	br	x16

00000000000191a0 <gl_sortedlist_search_from_to@@Base>:
   191a0:	ldr	x5, [x0]
   191a4:	ldr	x5, [x5, #200]
   191a8:	mov	x16, x5
   191ac:	br	x16

00000000000191b0 <gl_sortedlist_indexof@@Base>:
   191b0:	ldr	x3, [x0]
   191b4:	ldr	x3, [x3, #208]
   191b8:	mov	x16, x3
   191bc:	br	x16

00000000000191c0 <gl_sortedlist_indexof_from_to@@Base>:
   191c0:	ldr	x5, [x0]
   191c4:	ldr	x5, [x5, #216]
   191c8:	mov	x16, x5
   191cc:	br	x16

00000000000191d0 <gl_sortedlist_nx_add@@Base>:
   191d0:	ldr	x3, [x0]
   191d4:	ldr	x3, [x3, #224]
   191d8:	mov	x16, x3
   191dc:	br	x16

00000000000191e0 <gl_sortedlist_remove@@Base>:
   191e0:	ldr	x3, [x0]
   191e4:	ldr	x3, [x3, #232]
   191e8:	mov	x16, x3
   191ec:	br	x16

00000000000191f0 <locale_charset@@Base>:
   191f0:	stp	x29, x30, [sp, #-16]!
   191f4:	mov	w0, #0xe                   	// #14
   191f8:	mov	x29, sp
   191fc:	bl	a5c0 <nl_langinfo@plt>
   19200:	cbz	x0, 19220 <locale_charset@@Base+0x30>
   19204:	ldrb	w2, [x0]
   19208:	adrp	x1, 31000 <vasnprintf@@Base+0x848>
   1920c:	add	x1, x1, #0xb98
   19210:	cmp	w2, #0x0
   19214:	csel	x0, x1, x0, eq  // eq = none
   19218:	ldp	x29, x30, [sp], #16
   1921c:	ret
   19220:	ldp	x29, x30, [sp], #16
   19224:	adrp	x0, 31000 <vasnprintf@@Base+0x848>
   19228:	add	x0, x0, #0xb98
   1922c:	ret

0000000000019230 <glthread_rwlock_init_for_glibc@@Base>:
   19230:	stp	x29, x30, [sp, #-64]!
   19234:	mov	x29, sp
   19238:	str	x21, [sp, #32]
   1923c:	add	x21, sp, #0x38
   19240:	stp	x19, x20, [sp, #16]
   19244:	mov	x20, x0
   19248:	mov	x0, x21
   1924c:	bl	a2e0 <pthread_rwlockattr_init@plt>
   19250:	mov	w19, w0
   19254:	cbz	w0, 1926c <glthread_rwlock_init_for_glibc@@Base+0x3c>
   19258:	mov	w0, w19
   1925c:	ldp	x19, x20, [sp, #16]
   19260:	ldr	x21, [sp, #32]
   19264:	ldp	x29, x30, [sp], #64
   19268:	ret
   1926c:	mov	x0, x21
   19270:	mov	w1, #0x2                   	// #2
   19274:	bl	a430 <pthread_rwlockattr_setkind_np@plt>
   19278:	mov	w19, w0
   1927c:	cbz	w0, 1929c <glthread_rwlock_init_for_glibc@@Base+0x6c>
   19280:	mov	x0, x21
   19284:	bl	adb0 <pthread_rwlockattr_destroy@plt>
   19288:	mov	w0, w19
   1928c:	ldp	x19, x20, [sp, #16]
   19290:	ldr	x21, [sp, #32]
   19294:	ldp	x29, x30, [sp], #64
   19298:	ret
   1929c:	mov	x0, x20
   192a0:	mov	x1, x21
   192a4:	bl	a410 <pthread_rwlock_init@plt>
   192a8:	mov	w19, w0
   192ac:	b	19280 <glthread_rwlock_init_for_glibc@@Base+0x50>

00000000000192b0 <glthread_recursive_lock_init_multithreaded@@Base>:
   192b0:	stp	x29, x30, [sp, #-64]!
   192b4:	mov	x29, sp
   192b8:	str	x21, [sp, #32]
   192bc:	add	x21, sp, #0x38
   192c0:	stp	x19, x20, [sp, #16]
   192c4:	mov	x20, x0
   192c8:	mov	x0, x21
   192cc:	bl	ad00 <pthread_mutexattr_init@plt>
   192d0:	mov	w19, w0
   192d4:	cbz	w0, 192ec <glthread_recursive_lock_init_multithreaded@@Base+0x3c>
   192d8:	mov	w0, w19
   192dc:	ldp	x19, x20, [sp, #16]
   192e0:	ldr	x21, [sp, #32]
   192e4:	ldp	x29, x30, [sp], #64
   192e8:	ret
   192ec:	mov	x0, x21
   192f0:	mov	w1, #0x1                   	// #1
   192f4:	bl	a370 <pthread_mutexattr_settype@plt>
   192f8:	mov	w19, w0
   192fc:	cbnz	w0, 19334 <glthread_recursive_lock_init_multithreaded@@Base+0x84>
   19300:	mov	x0, x20
   19304:	mov	x1, x21
   19308:	bl	a840 <pthread_mutex_init@plt>
   1930c:	mov	w19, w0
   19310:	mov	x0, x21
   19314:	cbnz	w19, 19350 <glthread_recursive_lock_init_multithreaded@@Base+0xa0>
   19318:	bl	ad50 <pthread_mutexattr_destroy@plt>
   1931c:	mov	w19, w0
   19320:	mov	w0, w19
   19324:	ldp	x19, x20, [sp, #16]
   19328:	ldr	x21, [sp, #32]
   1932c:	ldp	x29, x30, [sp], #64
   19330:	ret
   19334:	mov	x0, x21
   19338:	bl	ad50 <pthread_mutexattr_destroy@plt>
   1933c:	mov	w0, w19
   19340:	ldp	x19, x20, [sp, #16]
   19344:	ldr	x21, [sp, #32]
   19348:	ldp	x29, x30, [sp], #64
   1934c:	ret
   19350:	bl	ad50 <pthread_mutexattr_destroy@plt>
   19354:	mov	w0, w19
   19358:	ldp	x19, x20, [sp, #16]
   1935c:	ldr	x21, [sp, #32]
   19360:	ldp	x29, x30, [sp], #64
   19364:	ret

0000000000019368 <glthread_once_singlethreaded@@Base>:
   19368:	mov	x1, x0
   1936c:	ldrb	w0, [x0]
   19370:	cbnz	w0, 19384 <glthread_once_singlethreaded@@Base+0x1c>
   19374:	mov	w2, #0xffffffff            	// #-1
   19378:	mov	w0, #0x1                   	// #1
   1937c:	strb	w2, [x1]
   19380:	ret
   19384:	mov	w0, #0x0                   	// #0
   19388:	ret
   1938c:	nop

0000000000019390 <mmalloca@@Base>:
   19390:	adds	x0, x0, #0x20
   19394:	b.cs	193cc <mmalloca@@Base+0x3c>  // b.hs, b.nlast
   19398:	stp	x29, x30, [sp, #-16]!
   1939c:	mov	x29, sp
   193a0:	bl	a5f0 <malloc@plt>
   193a4:	mov	x1, x0
   193a8:	mov	x0, #0x0                   	// #0
   193ac:	cbz	x1, 193c4 <mmalloca@@Base+0x34>
   193b0:	add	x0, x1, #0x10
   193b4:	and	x0, x0, #0xffffffffffffffe0
   193b8:	add	x0, x0, #0x10
   193bc:	sub	x1, x0, x1
   193c0:	sturb	w1, [x0, #-1]
   193c4:	ldp	x29, x30, [sp], #16
   193c8:	ret
   193cc:	mov	x0, #0x0                   	// #0
   193d0:	ret
   193d4:	nop

00000000000193d8 <freea@@Base>:
   193d8:	tst	x0, #0xf
   193dc:	b.ne	193f4 <freea@@Base+0x1c>  // b.any
   193e0:	tbnz	w0, #4, 193e8 <freea@@Base+0x10>
   193e4:	ret
   193e8:	ldurb	w1, [x0, #-1]
   193ec:	sub	x0, x0, x1
   193f0:	b	aa50 <free@plt>
   193f4:	stp	x29, x30, [sp, #-16]!
   193f8:	mov	x29, sp
   193fc:	bl	a900 <abort@plt>

0000000000019400 <gl_map_nx_create_empty@@Base>:
   19400:	ldr	x5, [x0]
   19404:	mov	x16, x5
   19408:	br	x16
   1940c:	nop

0000000000019410 <gl_map_size@@Base>:
   19410:	ldr	x1, [x0]
   19414:	ldr	x1, [x1, #8]
   19418:	mov	x16, x1
   1941c:	br	x16

0000000000019420 <gl_map_search@@Base>:
   19420:	ldr	x3, [x0]
   19424:	ldr	x3, [x3, #16]
   19428:	mov	x16, x3
   1942c:	br	x16

0000000000019430 <gl_map_nx_getput@@Base>:
   19430:	ldr	x4, [x0]
   19434:	ldr	x4, [x4, #24]
   19438:	mov	x16, x4
   1943c:	br	x16

0000000000019440 <gl_map_getremove@@Base>:
   19440:	ldr	x3, [x0]
   19444:	ldr	x3, [x3, #32]
   19448:	mov	x16, x3
   1944c:	br	x16

0000000000019450 <gl_map_free@@Base>:
   19450:	ldr	x1, [x0]
   19454:	ldr	x1, [x1, #40]
   19458:	mov	x16, x1
   1945c:	br	x16

0000000000019460 <gl_map_iterator@@Base>:
   19460:	stp	x29, x30, [sp, #-16]!
   19464:	mov	x29, sp
   19468:	ldr	x1, [x0]
   1946c:	ldr	x1, [x1, #48]
   19470:	blr	x1
   19474:	ldp	x29, x30, [sp], #16
   19478:	ret
   1947c:	nop

0000000000019480 <gl_map_iterator_next@@Base>:
   19480:	ldr	x3, [x0]
   19484:	ldr	x3, [x3, #56]
   19488:	mov	x16, x3
   1948c:	br	x16

0000000000019490 <gl_map_iterator_free@@Base>:
   19490:	ldr	x1, [x0]
   19494:	ldr	x1, [x1, #64]
   19498:	mov	x16, x1
   1949c:	br	x16

00000000000194a0 <gl_map_get@@Base>:
   194a0:	stp	x29, x30, [sp, #-32]!
   194a4:	mov	x29, sp
   194a8:	ldr	x3, [x0]
   194ac:	str	xzr, [sp, #24]
   194b0:	add	x2, sp, #0x18
   194b4:	ldr	x3, [x3, #16]
   194b8:	blr	x3
   194bc:	ldr	x0, [sp, #24]
   194c0:	ldp	x29, x30, [sp], #32
   194c4:	ret

00000000000194c8 <gl_map_nx_put@@Base>:
   194c8:	stp	x29, x30, [sp, #-48]!
   194cc:	mov	x29, sp
   194d0:	ldr	x4, [x0]
   194d4:	stp	x19, x20, [sp, #16]
   194d8:	add	x3, sp, #0x28
   194dc:	mov	x20, x0
   194e0:	ldr	x4, [x4, #24]
   194e4:	blr	x4
   194e8:	mov	w19, w0
   194ec:	cbnz	w0, 19500 <gl_map_nx_put@@Base+0x38>
   194f0:	ldr	x1, [x20, #24]
   194f4:	cbz	x1, 19500 <gl_map_nx_put@@Base+0x38>
   194f8:	ldr	x0, [sp, #40]
   194fc:	blr	x1
   19500:	mov	w0, w19
   19504:	ldp	x19, x20, [sp, #16]
   19508:	ldp	x29, x30, [sp], #48
   1950c:	ret

0000000000019510 <gl_map_remove@@Base>:
   19510:	stp	x29, x30, [sp, #-48]!
   19514:	mov	x29, sp
   19518:	ldr	x3, [x0]
   1951c:	stp	x19, x20, [sp, #16]
   19520:	add	x2, sp, #0x28
   19524:	mov	x20, x0
   19528:	ldr	x3, [x3, #32]
   1952c:	blr	x3
   19530:	mov	w19, w0
   19534:	tst	w0, #0xff
   19538:	b.eq	1954c <gl_map_remove@@Base+0x3c>  // b.none
   1953c:	ldr	x1, [x20, #24]
   19540:	cbz	x1, 1954c <gl_map_remove@@Base+0x3c>
   19544:	ldr	x0, [sp, #40]
   19548:	blr	x1
   1954c:	mov	w0, w19
   19550:	ldp	x19, x20, [sp, #16]
   19554:	ldp	x29, x30, [sp], #48
   19558:	ret
   1955c:	nop

0000000000019560 <get_nonblocking_flag@@Base>:
   19560:	stp	x29, x30, [sp, #-16]!
   19564:	mov	w2, #0x0                   	// #0
   19568:	mov	w1, #0x3                   	// #3
   1956c:	mov	x29, sp
   19570:	bl	ac00 <fcntl@plt>
   19574:	cmp	w0, #0x0
   19578:	ubfx	x0, x0, #11, #1
   1957c:	csinv	w0, w0, wzr, ge  // ge = tcont
   19580:	ldp	x29, x30, [sp], #16
   19584:	ret

0000000000019588 <set_nonblocking_flag@@Base>:
   19588:	stp	x29, x30, [sp, #-32]!
   1958c:	mov	w2, #0x0                   	// #0
   19590:	mov	x29, sp
   19594:	stp	x19, x20, [sp, #16]
   19598:	and	w20, w1, #0xff
   1959c:	mov	w19, w0
   195a0:	mov	w1, #0x3                   	// #3
   195a4:	bl	ac00 <fcntl@plt>
   195a8:	tbnz	w0, #31, 195ec <set_nonblocking_flag@@Base+0x64>
   195ac:	ubfx	x1, x0, #11, #1
   195b0:	cmp	w1, w20
   195b4:	b.eq	195dc <set_nonblocking_flag@@Base+0x54>  // b.none
   195b8:	cmp	w20, #0x0
   195bc:	orr	w1, w0, #0x800
   195c0:	and	w2, w0, #0xfffff7ff
   195c4:	mov	w0, w19
   195c8:	ldp	x19, x20, [sp, #16]
   195cc:	csel	w2, w2, w1, eq  // eq = none
   195d0:	ldp	x29, x30, [sp], #32
   195d4:	mov	w1, #0x4                   	// #4
   195d8:	b	ac00 <fcntl@plt>
   195dc:	mov	w0, #0x0                   	// #0
   195e0:	ldp	x19, x20, [sp, #16]
   195e4:	ldp	x29, x30, [sp], #32
   195e8:	ret
   195ec:	mov	w0, #0xffffffff            	// #-1
   195f0:	b	195e0 <set_nonblocking_flag@@Base+0x58>
   195f4:	nop

00000000000195f8 <openat_save_fail@@Base>:
   195f8:	stp	x29, x30, [sp, #-32]!
   195fc:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
   19600:	mov	w2, #0x5                   	// #5
   19604:	mov	x29, sp
   19608:	ldr	x3, [x3, #3976]
   1960c:	stp	x19, x20, [sp, #16]
   19610:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   19614:	mov	w19, w0
   19618:	add	x1, x1, #0xca0
   1961c:	ldr	w20, [x3]
   19620:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   19624:	add	x0, x0, #0x120
   19628:	bl	ada0 <dcgettext@plt>
   1962c:	mov	w1, w19
   19630:	mov	x2, x0
   19634:	mov	w0, w20
   19638:	bl	a360 <error@plt>
   1963c:	bl	a900 <abort@plt>

0000000000019640 <openat_restore_fail@@Base>:
   19640:	stp	x29, x30, [sp, #-32]!
   19644:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
   19648:	mov	w2, #0x5                   	// #5
   1964c:	mov	x29, sp
   19650:	ldr	x3, [x3, #3976]
   19654:	stp	x19, x20, [sp, #16]
   19658:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1965c:	mov	w19, w0
   19660:	add	x1, x1, #0xcd0
   19664:	ldr	w20, [x3]
   19668:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   1966c:	add	x0, x0, #0x120
   19670:	bl	ada0 <dcgettext@plt>
   19674:	mov	w1, w19
   19678:	mov	x2, x0
   1967c:	mov	w0, w20
   19680:	bl	a360 <error@plt>
   19684:	bl	a900 <abort@plt>

0000000000019688 <set_program_name@@Base>:
   19688:	stp	x29, x30, [sp, #-48]!
   1968c:	mov	x29, sp
   19690:	stp	x19, x20, [sp, #16]
   19694:	cbz	x0, 19748 <set_program_name@@Base+0xc0>
   19698:	mov	x19, x0
   1969c:	mov	w1, #0x2f                  	// #47
   196a0:	bl	a880 <strrchr@plt>
   196a4:	mov	x20, x0
   196a8:	cbz	x0, 19710 <set_program_name@@Base+0x88>
   196ac:	str	x21, [sp, #32]
   196b0:	add	x21, x0, #0x1
   196b4:	sub	x0, x21, x19
   196b8:	cmp	x0, #0x6
   196bc:	b.le	19734 <set_program_name@@Base+0xac>
   196c0:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   196c4:	sub	x0, x20, #0x6
   196c8:	add	x1, x1, #0xd38
   196cc:	mov	x2, #0x7                   	// #7
   196d0:	bl	a6c0 <strncmp@plt>
   196d4:	cbnz	w0, 19734 <set_program_name@@Base+0xac>
   196d8:	ldrb	w0, [x20, #1]
   196dc:	cmp	w0, #0x6c
   196e0:	b.ne	1973c <set_program_name@@Base+0xb4>  // b.any
   196e4:	ldrb	w0, [x21, #1]
   196e8:	cmp	w0, #0x74
   196ec:	b.ne	1973c <set_program_name@@Base+0xb4>  // b.any
   196f0:	ldrb	w0, [x21, #2]
   196f4:	cmp	w0, #0x2d
   196f8:	b.ne	1973c <set_program_name@@Base+0xb4>  // b.any
   196fc:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   19700:	add	x19, x20, #0x4
   19704:	ldr	x21, [sp, #32]
   19708:	ldr	x0, [x0, #4008]
   1970c:	str	x19, [x0]
   19710:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   19714:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   19718:	ldr	x1, [x1, #3992]
   1971c:	ldr	x0, [x0, #3768]
   19720:	str	x19, [x1]
   19724:	str	x19, [x0]
   19728:	ldp	x19, x20, [sp, #16]
   1972c:	ldp	x29, x30, [sp], #48
   19730:	ret
   19734:	ldr	x21, [sp, #32]
   19738:	b	19710 <set_program_name@@Base+0x88>
   1973c:	mov	x19, x21
   19740:	ldr	x21, [sp, #32]
   19744:	b	19710 <set_program_name@@Base+0x88>
   19748:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
   1974c:	mov	x2, #0x37                  	// #55
   19750:	mov	x1, #0x1                   	// #1
   19754:	adrp	x0, 33000 <vasnprintf@@Base+0x2848>
   19758:	ldr	x3, [x3, #3816]
   1975c:	add	x0, x0, #0xd00
   19760:	ldr	x3, [x3]
   19764:	str	x21, [sp, #32]
   19768:	bl	abd0 <fwrite@plt>
   1976c:	bl	a900 <abort@plt>
   19770:	ldr	x0, [x0, #40]
   19774:	cbz	x0, 19780 <set_program_name@@Base+0xf8>
   19778:	ldr	x0, [x0, #32]
   1977c:	ret
   19780:	mov	x0, #0x0                   	// #0
   19784:	ret
   19788:	ldr	x0, [x1, #40]
   1978c:	ret
   19790:	mov	w0, #0x0                   	// #0
   19794:	str	x2, [x1, #40]
   19798:	ret
   1979c:	nop
   197a0:	ldr	x1, [x0, #40]
   197a4:	mov	x2, #0x0                   	// #0
   197a8:	ldr	x3, [x0]
   197ac:	cbz	x1, 197bc <set_program_name@@Base+0x134>
   197b0:	mov	x2, x1
   197b4:	ldr	x1, [x1]
   197b8:	cbnz	x1, 197b0 <set_program_name@@Base+0x128>
   197bc:	stp	x3, x0, [x8]
   197c0:	stp	x2, xzr, [x8, #24]
   197c4:	ret
   197c8:	mov	x4, x0
   197cc:	ldp	x3, x0, [x0, #24]
   197d0:	cmp	x3, x0
   197d4:	b.eq	1982c <set_program_name@@Base+0x1a4>  // b.none
   197d8:	ldr	x0, [x3, #40]
   197dc:	str	x0, [x1]
   197e0:	cbz	x2, 197e8 <set_program_name@@Base+0x160>
   197e4:	str	x3, [x2]
   197e8:	ldr	x1, [x3, #8]
   197ec:	cbz	x1, 19814 <set_program_name@@Base+0x18c>
   197f0:	mov	x3, x1
   197f4:	ldr	x1, [x1]
   197f8:	cbnz	x1, 197f0 <set_program_name@@Base+0x168>
   197fc:	mov	w0, #0x1                   	// #1
   19800:	str	x3, [x4, #24]
   19804:	ret
   19808:	ldr	x1, [x3, #8]
   1980c:	cmp	x1, x0
   19810:	b.ne	197fc <set_program_name@@Base+0x174>  // b.any
   19814:	mov	x0, x3
   19818:	ldr	x3, [x3, #16]
   1981c:	cbnz	x3, 19808 <set_program_name@@Base+0x180>
   19820:	mov	w0, #0x1                   	// #1
   19824:	str	x3, [x4, #24]
   19828:	b	19804 <set_program_name@@Base+0x17c>
   1982c:	mov	w0, #0x0                   	// #0
   19830:	ret
   19834:	nop
   19838:	ret
   1983c:	nop
   19840:	stp	x29, x30, [sp, #-64]!
   19844:	mov	x29, sp
   19848:	str	x23, [sp, #48]
   1984c:	ldr	x23, [x0]
   19850:	stp	x19, x20, [sp, #16]
   19854:	mov	x19, x0
   19858:	stp	x21, x22, [sp, #32]
   1985c:	mov	x20, x1
   19860:	mov	w21, #0x0                   	// #0
   19864:	cbz	x23, 19878 <set_program_name@@Base+0x1f0>
   19868:	mov	x1, x0
   1986c:	mov	x0, x23
   19870:	bl	19840 <set_program_name@@Base+0x1b8>
   19874:	mov	w21, w0
   19878:	ldr	x22, [x19, #8]
   1987c:	mov	w0, #0x0                   	// #0
   19880:	cbz	x22, 19890 <set_program_name@@Base+0x208>
   19884:	mov	x1, x19
   19888:	mov	x0, x22
   1988c:	bl	19840 <set_program_name@@Base+0x1b8>
   19890:	ldr	x1, [x19, #16]
   19894:	cmp	x1, x20
   19898:	b.ne	19904 <set_program_name@@Base+0x27c>  // b.any
   1989c:	mov	x2, #0x1                   	// #1
   198a0:	ldr	x1, [x19, #32]
   198a4:	cbz	x23, 198b0 <set_program_name@@Base+0x228>
   198a8:	ldr	x2, [x23, #32]
   198ac:	add	x2, x2, #0x1
   198b0:	cbz	x22, 198bc <set_program_name@@Base+0x234>
   198b4:	ldr	x3, [x22, #32]
   198b8:	add	x2, x2, x3
   198bc:	cmp	x1, x2
   198c0:	b.ne	19904 <set_program_name@@Base+0x27c>  // b.any
   198c4:	ldr	w2, [x19, #24]
   198c8:	cmp	w2, #0x1
   198cc:	b.hi	19904 <set_program_name@@Base+0x27c>  // b.pmore
   198d0:	cmp	x20, #0x0
   198d4:	and	w1, w2, #0x1
   198d8:	csel	w1, w1, wzr, eq  // eq = none
   198dc:	cbnz	w1, 19904 <set_program_name@@Base+0x27c>
   198e0:	cmp	w21, w0
   198e4:	b.ne	19904 <set_program_name@@Base+0x27c>  // b.any
   198e8:	eor	w2, w2, #0x1
   198ec:	add	w0, w2, w21
   198f0:	ldp	x19, x20, [sp, #16]
   198f4:	ldp	x21, x22, [sp, #32]
   198f8:	ldr	x23, [sp, #48]
   198fc:	ldp	x29, x30, [sp], #64
   19900:	ret
   19904:	bl	a900 <abort@plt>
   19908:	stp	x29, x30, [sp, #-80]!
   1990c:	cmp	x2, x3
   19910:	mov	x29, sp
   19914:	stp	x19, x20, [sp, #16]
   19918:	stp	x21, x22, [sp, #32]
   1991c:	b.hi	19a4c <set_program_name@@Base+0x3c4>  // b.pmore
   19920:	ldr	x20, [x0, #40]
   19924:	mov	x22, x3
   19928:	cbz	x20, 19a48 <set_program_name@@Base+0x3c0>
   1992c:	ldr	x0, [x20, #32]
   19930:	stp	x23, x24, [sp, #48]
   19934:	mov	x21, x2
   19938:	str	x25, [sp, #64]
   1993c:	mov	x23, x1
   19940:	mov	x24, x4
   19944:	cmp	x3, x0
   19948:	mov	x25, #0x0                   	// #0
   1994c:	b.hi	19a54 <set_program_name@@Base+0x3cc>  // b.pmore
   19950:	ldr	x0, [x20]
   19954:	mov	x19, #0x0                   	// #0
   19958:	cbz	x0, 19960 <set_program_name@@Base+0x2d8>
   1995c:	ldr	x19, [x0, #32]
   19960:	cmp	x19, x21
   19964:	b.cs	199a8 <set_program_name@@Base+0x320>  // b.hs, b.nlast
   19968:	sub	x21, x21, #0x1
   1996c:	sub	x22, x22, #0x1
   19970:	add	x25, x25, #0x1
   19974:	sub	x21, x21, x19
   19978:	ldr	x20, [x20, #8]
   1997c:	sub	x22, x22, x19
   19980:	add	x25, x19, x25
   19984:	cbnz	x20, 19950 <set_program_name@@Base+0x2c8>
   19988:	ldp	x23, x24, [sp, #48]
   1998c:	ldr	x25, [sp, #64]
   19990:	mov	x22, #0xffffffffffffffff    	// #-1
   19994:	mov	x0, x22
   19998:	ldp	x19, x20, [sp, #16]
   1999c:	ldp	x21, x22, [sp, #32]
   199a0:	ldp	x29, x30, [sp], #80
   199a4:	ret
   199a8:	cmp	x19, x22
   199ac:	b.cs	19a1c <set_program_name@@Base+0x394>  // b.hs, b.nlast
   199b0:	ldr	x0, [x20, #40]
   199b4:	mov	x1, x24
   199b8:	blr	x23
   199bc:	cmp	w0, #0x0
   199c0:	b.lt	19a28 <set_program_name@@Base+0x3a0>  // b.tstop
   199c4:	ldr	x20, [x20]
   199c8:	b.ne	19984 <set_program_name@@Base+0x2fc>  // b.any
   199cc:	cbz	x20, 19a8c <set_program_name@@Base+0x404>
   199d0:	ldr	x22, [x20, #32]
   199d4:	add	x22, x25, x22
   199d8:	ldr	x0, [x20]
   199dc:	mov	x19, #0x0                   	// #0
   199e0:	cbz	x0, 199e8 <set_program_name@@Base+0x360>
   199e4:	ldr	x19, [x0, #32]
   199e8:	cmp	x19, x21
   199ec:	b.cs	19a58 <set_program_name@@Base+0x3d0>  // b.hs, b.nlast
   199f0:	sub	x21, x21, #0x1
   199f4:	ldr	x20, [x20, #8]
   199f8:	sub	x21, x21, x19
   199fc:	cbnz	x20, 199d8 <set_program_name@@Base+0x350>
   19a00:	mov	x0, x22
   19a04:	ldp	x19, x20, [sp, #16]
   19a08:	ldp	x21, x22, [sp, #32]
   19a0c:	ldp	x23, x24, [sp, #48]
   19a10:	ldr	x25, [sp, #64]
   19a14:	ldp	x29, x30, [sp], #80
   19a18:	ret
   19a1c:	mov	x20, x0
   19a20:	cbnz	x20, 19950 <set_program_name@@Base+0x2c8>
   19a24:	b	19988 <set_program_name@@Base+0x300>
   19a28:	ldr	x20, [x20, #8]
   19a2c:	sub	x22, x22, #0x1
   19a30:	add	x25, x25, #0x1
   19a34:	sub	x22, x22, x19
   19a38:	add	x25, x19, x25
   19a3c:	mov	x21, #0x0                   	// #0
   19a40:	cbnz	x20, 19950 <set_program_name@@Base+0x2c8>
   19a44:	b	19988 <set_program_name@@Base+0x300>
   19a48:	cbz	x3, 19990 <set_program_name@@Base+0x308>
   19a4c:	stp	x23, x24, [sp, #48]
   19a50:	str	x25, [sp, #64]
   19a54:	bl	a900 <abort@plt>
   19a58:	ldr	x0, [x20, #40]
   19a5c:	mov	x1, x24
   19a60:	blr	x23
   19a64:	cmp	w0, #0x0
   19a68:	b.lt	19a7c <set_program_name@@Base+0x3f4>  // b.tstop
   19a6c:	b.ne	19a54 <set_program_name@@Base+0x3cc>  // b.any
   19a70:	add	x22, x19, x25
   19a74:	ldr	x20, [x20]
   19a78:	b	199fc <set_program_name@@Base+0x374>
   19a7c:	add	x25, x25, #0x1
   19a80:	add	x25, x19, x25
   19a84:	ldr	x20, [x20, #8]
   19a88:	b	199fc <set_program_name@@Base+0x374>
   19a8c:	mov	x22, x25
   19a90:	b	19a00 <set_program_name@@Base+0x378>
   19a94:	nop
   19a98:	stp	x29, x30, [sp, #-64]!
   19a9c:	mov	x29, sp
   19aa0:	stp	x19, x20, [sp, #16]
   19aa4:	ldr	x19, [x0, #40]
   19aa8:	cbz	x19, 19ae4 <set_program_name@@Base+0x45c>
   19aac:	stp	x21, x22, [sp, #32]
   19ab0:	mov	x21, x1
   19ab4:	mov	x22, x2
   19ab8:	mov	x20, #0x0                   	// #0
   19abc:	nop
   19ac0:	ldr	x0, [x19, #40]
   19ac4:	mov	x1, x22
   19ac8:	blr	x21
   19acc:	cmp	w0, #0x0
   19ad0:	b.lt	19af8 <set_program_name@@Base+0x470>  // b.tstop
   19ad4:	ldr	x19, [x19]
   19ad8:	b.eq	19b18 <set_program_name@@Base+0x490>  // b.none
   19adc:	cbnz	x19, 19ac0 <set_program_name@@Base+0x438>
   19ae0:	ldp	x21, x22, [sp, #32]
   19ae4:	mov	x20, #0xffffffffffffffff    	// #-1
   19ae8:	mov	x0, x20
   19aec:	ldp	x19, x20, [sp, #16]
   19af0:	ldp	x29, x30, [sp], #64
   19af4:	ret
   19af8:	ldr	x0, [x19]
   19afc:	cbz	x0, 19b08 <set_program_name@@Base+0x480>
   19b00:	ldr	x0, [x0, #32]
   19b04:	add	x20, x20, x0
   19b08:	ldr	x19, [x19, #8]
   19b0c:	add	x20, x20, #0x1
   19b10:	cbnz	x19, 19ac0 <set_program_name@@Base+0x438>
   19b14:	b	19ae0 <set_program_name@@Base+0x458>
   19b18:	cbz	x19, 19b8c <set_program_name@@Base+0x504>
   19b1c:	str	x23, [sp, #48]
   19b20:	ldr	x0, [x19, #32]
   19b24:	add	x23, x20, x0
   19b28:	ldr	x0, [x19, #40]
   19b2c:	mov	x1, x22
   19b30:	blr	x21
   19b34:	cmp	w0, #0x0
   19b38:	b.lt	19b60 <set_program_name@@Base+0x4d8>  // b.tstop
   19b3c:	b.ne	19ba0 <set_program_name@@Base+0x518>  // b.any
   19b40:	ldr	x19, [x19]
   19b44:	cbnz	x19, 19b20 <set_program_name@@Base+0x498>
   19b48:	mov	x0, x20
   19b4c:	ldp	x19, x20, [sp, #16]
   19b50:	ldp	x21, x22, [sp, #32]
   19b54:	ldr	x23, [sp, #48]
   19b58:	ldp	x29, x30, [sp], #64
   19b5c:	ret
   19b60:	ldr	x0, [x19]
   19b64:	cbz	x0, 19b70 <set_program_name@@Base+0x4e8>
   19b68:	ldr	x0, [x0, #32]
   19b6c:	add	x20, x20, x0
   19b70:	ldr	x19, [x19, #8]
   19b74:	add	x20, x20, #0x1
   19b78:	cbnz	x19, 19b28 <set_program_name@@Base+0x4a0>
   19b7c:	mov	x20, x23
   19b80:	ldp	x21, x22, [sp, #32]
   19b84:	ldr	x23, [sp, #48]
   19b88:	b	19ae8 <set_program_name@@Base+0x460>
   19b8c:	mov	x0, x20
   19b90:	ldp	x19, x20, [sp, #16]
   19b94:	ldp	x21, x22, [sp, #32]
   19b98:	ldp	x29, x30, [sp], #64
   19b9c:	ret
   19ba0:	bl	a900 <abort@plt>
   19ba4:	nop
   19ba8:	stp	x29, x30, [sp, #-64]!
   19bac:	cmp	x2, x3
   19bb0:	mov	x29, sp
   19bb4:	stp	x19, x20, [sp, #16]
   19bb8:	stp	x21, x22, [sp, #32]
   19bbc:	b.hi	19cf0 <set_program_name@@Base+0x668>  // b.pmore
   19bc0:	ldr	x20, [x0, #40]
   19bc4:	mov	x22, x3
   19bc8:	cbz	x20, 19cec <set_program_name@@Base+0x664>
   19bcc:	ldr	x0, [x20, #32]
   19bd0:	stp	x23, x24, [sp, #48]
   19bd4:	mov	x21, x2
   19bd8:	mov	x23, x1
   19bdc:	mov	x24, x4
   19be0:	cmp	x3, x0
   19be4:	b.hi	19cf4 <set_program_name@@Base+0x66c>  // b.pmore
   19be8:	ldr	x0, [x20]
   19bec:	mov	x19, #0x0                   	// #0
   19bf0:	cbz	x0, 19bf8 <set_program_name@@Base+0x570>
   19bf4:	ldr	x19, [x0, #32]
   19bf8:	cmp	x19, x21
   19bfc:	b.cs	19c34 <set_program_name@@Base+0x5ac>  // b.hs, b.nlast
   19c00:	ldr	x20, [x20, #8]
   19c04:	sub	x21, x21, #0x1
   19c08:	sub	x22, x22, #0x1
   19c0c:	sub	x21, x21, x19
   19c10:	sub	x22, x22, x19
   19c14:	cbnz	x20, 19be8 <set_program_name@@Base+0x560>
   19c18:	ldp	x23, x24, [sp, #48]
   19c1c:	mov	x20, #0x0                   	// #0
   19c20:	mov	x0, x20
   19c24:	ldp	x19, x20, [sp, #16]
   19c28:	ldp	x21, x22, [sp, #32]
   19c2c:	ldp	x29, x30, [sp], #64
   19c30:	ret
   19c34:	cmp	x19, x22
   19c38:	b.cs	19cc8 <set_program_name@@Base+0x640>  // b.hs, b.nlast
   19c3c:	ldr	x0, [x20, #40]
   19c40:	mov	x1, x24
   19c44:	blr	x23
   19c48:	cmp	w0, #0x0
   19c4c:	b.lt	19cd4 <set_program_name@@Base+0x64c>  // b.tstop
   19c50:	ldr	x19, [x20]
   19c54:	b.eq	19c84 <set_program_name@@Base+0x5fc>  // b.none
   19c58:	mov	x20, x19
   19c5c:	cbnz	x20, 19be8 <set_program_name@@Base+0x560>
   19c60:	b	19c18 <set_program_name@@Base+0x590>
   19c64:	ldr	x0, [x19, #40]
   19c68:	mov	x1, x24
   19c6c:	blr	x23
   19c70:	cmp	w0, #0x0
   19c74:	b.lt	19cf8 <set_program_name@@Base+0x670>  // b.tstop
   19c78:	b.ne	19cf4 <set_program_name@@Base+0x66c>  // b.any
   19c7c:	mov	x20, x19
   19c80:	ldr	x19, [x19]
   19c84:	cbz	x19, 19cb0 <set_program_name@@Base+0x628>
   19c88:	ldr	x1, [x19]
   19c8c:	mov	x0, #0x0                   	// #0
   19c90:	cbz	x1, 19c98 <set_program_name@@Base+0x610>
   19c94:	ldr	x0, [x1, #32]
   19c98:	cmp	x0, x21
   19c9c:	b.cs	19c64 <set_program_name@@Base+0x5dc>  // b.hs, b.nlast
   19ca0:	ldr	x19, [x19, #8]
   19ca4:	sub	x21, x21, #0x1
   19ca8:	sub	x21, x21, x0
   19cac:	cbnz	x19, 19c88 <set_program_name@@Base+0x600>
   19cb0:	mov	x0, x20
   19cb4:	ldp	x19, x20, [sp, #16]
   19cb8:	ldp	x21, x22, [sp, #32]
   19cbc:	ldp	x23, x24, [sp, #48]
   19cc0:	ldp	x29, x30, [sp], #64
   19cc4:	ret
   19cc8:	mov	x20, x0
   19ccc:	cbnz	x20, 19be8 <set_program_name@@Base+0x560>
   19cd0:	b	19c18 <set_program_name@@Base+0x590>
   19cd4:	ldr	x20, [x20, #8]
   19cd8:	sub	x22, x22, #0x1
   19cdc:	sub	x22, x22, x19
   19ce0:	mov	x21, #0x0                   	// #0
   19ce4:	cbnz	x20, 19be8 <set_program_name@@Base+0x560>
   19ce8:	b	19c18 <set_program_name@@Base+0x590>
   19cec:	cbz	x3, 19c1c <set_program_name@@Base+0x594>
   19cf0:	stp	x23, x24, [sp, #48]
   19cf4:	bl	a900 <abort@plt>
   19cf8:	mov	x21, #0x0                   	// #0
   19cfc:	ldr	x19, [x19, #8]
   19d00:	b	19c84 <set_program_name@@Base+0x5fc>
   19d04:	nop
   19d08:	stp	x29, x30, [sp, #-48]!
   19d0c:	mov	x29, sp
   19d10:	stp	x19, x20, [sp, #16]
   19d14:	ldr	x19, [x0, #40]
   19d18:	cbz	x19, 19d50 <set_program_name@@Base+0x6c8>
   19d1c:	stp	x21, x22, [sp, #32]
   19d20:	mov	x21, x1
   19d24:	mov	x22, x2
   19d28:	ldr	x0, [x19, #40]
   19d2c:	mov	x1, x22
   19d30:	blr	x21
   19d34:	cmp	w0, #0x0
   19d38:	b.lt	19da4 <set_program_name@@Base+0x71c>  // b.tstop
   19d3c:	ldr	x20, [x19]
   19d40:	b.eq	19d68 <set_program_name@@Base+0x6e0>  // b.none
   19d44:	mov	x19, x20
   19d48:	cbnz	x19, 19d28 <set_program_name@@Base+0x6a0>
   19d4c:	ldp	x21, x22, [sp, #32]
   19d50:	mov	x19, #0x0                   	// #0
   19d54:	mov	x0, x19
   19d58:	ldp	x19, x20, [sp, #16]
   19d5c:	ldp	x29, x30, [sp], #48
   19d60:	ret
   19d64:	ldr	x20, [x20, #8]
   19d68:	cbz	x20, 19d90 <set_program_name@@Base+0x708>
   19d6c:	ldr	x0, [x20, #40]
   19d70:	mov	x1, x22
   19d74:	blr	x21
   19d78:	cmp	w0, #0x0
   19d7c:	b.lt	19d64 <set_program_name@@Base+0x6dc>  // b.tstop
   19d80:	b.ne	19db0 <set_program_name@@Base+0x728>  // b.any
   19d84:	mov	x19, x20
   19d88:	ldr	x20, [x20]
   19d8c:	cbnz	x20, 19d6c <set_program_name@@Base+0x6e4>
   19d90:	mov	x0, x19
   19d94:	ldp	x19, x20, [sp, #16]
   19d98:	ldp	x21, x22, [sp, #32]
   19d9c:	ldp	x29, x30, [sp], #48
   19da0:	ret
   19da4:	ldr	x19, [x19, #8]
   19da8:	cbnz	x19, 19d28 <set_program_name@@Base+0x6a0>
   19dac:	b	19d4c <set_program_name@@Base+0x6c4>
   19db0:	bl	a900 <abort@plt>
   19db4:	nop
   19db8:	ldr	x3, [x0, #40]
   19dbc:	cmp	x1, x2
   19dc0:	cset	w4, hi  // hi = pmore
   19dc4:	cbz	x3, 19e58 <set_program_name@@Base+0x7d0>
   19dc8:	ldr	x7, [x3, #32]
   19dcc:	cmp	w4, #0x0
   19dd0:	ccmp	x7, x2, #0x0, eq  // eq = none
   19dd4:	b.cc	19e88 <set_program_name@@Base+0x800>  // b.lo, b.ul, b.last
   19dd8:	cmp	x7, x1
   19ddc:	mov	x4, x3
   19de0:	ldr	x9, [x0]
   19de4:	b.ls	19e18 <set_program_name@@Base+0x790>  // b.plast
   19de8:	ldr	x5, [x4]
   19dec:	cbz	x5, 19e00 <set_program_name@@Base+0x778>
   19df0:	ldr	x6, [x5, #32]
   19df4:	cmp	x6, x1
   19df8:	b.hi	19e10 <set_program_name@@Base+0x788>  // b.pmore
   19dfc:	sub	x1, x1, x6
   19e00:	cbz	x1, 19e1c <set_program_name@@Base+0x794>
   19e04:	sub	x1, x1, #0x1
   19e08:	ldr	x4, [x4, #8]
   19e0c:	b	19de8 <set_program_name@@Base+0x760>
   19e10:	mov	x4, x5
   19e14:	b	19de8 <set_program_name@@Base+0x760>
   19e18:	mov	x4, #0x0                   	// #0
   19e1c:	cmp	x7, x2
   19e20:	b.ls	19e78 <set_program_name@@Base+0x7f0>  // b.plast
   19e24:	nop
   19e28:	ldr	x1, [x3]
   19e2c:	cbz	x1, 19e40 <set_program_name@@Base+0x7b8>
   19e30:	ldr	x5, [x1, #32]
   19e34:	cmp	x5, x2
   19e38:	b.hi	19e50 <set_program_name@@Base+0x7c8>  // b.pmore
   19e3c:	sub	x2, x2, x5
   19e40:	cbz	x2, 19e6c <set_program_name@@Base+0x7e4>
   19e44:	sub	x2, x2, #0x1
   19e48:	ldr	x3, [x3, #8]
   19e4c:	b	19e28 <set_program_name@@Base+0x7a0>
   19e50:	mov	x3, x1
   19e54:	b	19e28 <set_program_name@@Base+0x7a0>
   19e58:	cmp	x2, #0x0
   19e5c:	ccmp	w4, #0x0, #0x0, eq  // eq = none
   19e60:	b.ne	19e88 <set_program_name@@Base+0x800>  // b.any
   19e64:	ldr	x9, [x0]
   19e68:	mov	x4, #0x0                   	// #0
   19e6c:	stp	x9, x0, [x8]
   19e70:	stp	x4, x3, [x8, #24]
   19e74:	ret
   19e78:	mov	x3, #0x0                   	// #0
   19e7c:	stp	x9, x0, [x8]
   19e80:	stp	x4, x3, [x8, #24]
   19e84:	ret
   19e88:	stp	x29, x30, [sp, #-16]!
   19e8c:	mov	x29, sp
   19e90:	bl	a900 <abort@plt>
   19e94:	nop
   19e98:	sub	sp, sp, #0x7a0
   19e9c:	cmp	x1, x2
   19ea0:	stp	x29, x30, [sp]
   19ea4:	mov	x29, sp
   19ea8:	stp	x19, x20, [sp, #16]
   19eac:	stp	x21, x22, [sp, #32]
   19eb0:	stp	x23, x24, [sp, #48]
   19eb4:	stp	x25, x26, [sp, #64]
   19eb8:	stp	x27, x28, [sp, #80]
   19ebc:	b.hi	1a048 <set_program_name@@Base+0x9c0>  // b.pmore
   19ec0:	mov	x20, x1
   19ec4:	mov	x23, x2
   19ec8:	ldr	x1, [x0, #40]
   19ecc:	mov	x27, x3
   19ed0:	mov	x2, #0x0                   	// #0
   19ed4:	cbz	x1, 19edc <set_program_name@@Base+0x854>
   19ed8:	ldr	x2, [x1, #32]
   19edc:	cmp	x2, x23
   19ee0:	b.cc	1a048 <set_program_name@@Base+0x9c0>  // b.lo, b.ul, b.last
   19ee4:	add	x21, sp, #0x60
   19ee8:	ldr	x26, [x0, #8]
   19eec:	cbz	x20, 19f5c <set_program_name@@Base+0x8d4>
   19ef0:	mov	x19, x21
   19ef4:	mov	x24, #0x0                   	// #0
   19ef8:	cbz	x1, 19f2c <set_program_name@@Base+0x8a4>
   19efc:	ldr	x0, [x1, #32]
   19f00:	cmp	x0, x20
   19f04:	b.ls	19f2c <set_program_name@@Base+0x8a4>  // b.plast
   19f08:	stp	x1, xzr, [x19]
   19f0c:	add	x19, x19, #0x10
   19f10:	ldr	x1, [x1]
   19f14:	b	19ef8 <set_program_name@@Base+0x870>
   19f18:	mov	x22, x19
   19f1c:	sub	x19, x19, #0x10
   19f20:	ldr	x0, [x19, #8]
   19f24:	cbz	x0, 19f98 <set_program_name@@Base+0x910>
   19f28:	add	x20, x20, x0
   19f2c:	cmp	x19, x21
   19f30:	b.ne	19f18 <set_program_name@@Base+0x890>  // b.any
   19f34:	mov	x24, #0xffffffffffffffff    	// #-1
   19f38:	mov	x0, x24
   19f3c:	ldp	x29, x30, [sp]
   19f40:	ldp	x19, x20, [sp, #16]
   19f44:	ldp	x21, x22, [sp, #32]
   19f48:	ldp	x23, x24, [sp, #48]
   19f4c:	ldp	x25, x26, [sp, #64]
   19f50:	ldp	x27, x28, [sp, #80]
   19f54:	add	sp, sp, #0x7a0
   19f58:	ret
   19f5c:	mov	x19, x21
   19f60:	mov	x25, #0x1                   	// #1
   19f64:	nop
   19f68:	cbz	x1, 19f8c <set_program_name@@Base+0x904>
   19f6c:	stp	x1, xzr, [x19]
   19f70:	add	x19, x19, #0x10
   19f74:	ldr	x1, [x1]
   19f78:	b	19f68 <set_program_name@@Base+0x8e0>
   19f7c:	ldur	x0, [x19, #-8]
   19f80:	sub	x22, x19, #0x10
   19f84:	cbz	x0, 19ff4 <set_program_name@@Base+0x96c>
   19f88:	mov	x19, x22
   19f8c:	cmp	x19, x21
   19f90:	b.ne	19f7c <set_program_name@@Base+0x8f4>  // b.any
   19f94:	b	19f34 <set_program_name@@Base+0x8ac>
   19f98:	ldr	x28, [x19]
   19f9c:	mov	x25, #0x1                   	// #1
   19fa0:	ldr	x0, [x28]
   19fa4:	cbz	x0, 19fb0 <set_program_name@@Base+0x928>
   19fa8:	ldr	x25, [x0, #32]
   19fac:	add	x25, x25, #0x1
   19fb0:	cmp	x25, x20
   19fb4:	b.ls	19fd4 <set_program_name@@Base+0x94c>  // b.plast
   19fb8:	ldr	x1, [x28, #40]
   19fbc:	cbz	x26, 1a028 <set_program_name@@Base+0x9a0>
   19fc0:	mov	x0, x27
   19fc4:	blr	x26
   19fc8:	and	w0, w0, #0xff
   19fcc:	cbnz	w0, 19f38 <set_program_name@@Base+0x8b0>
   19fd0:	mov	x20, x25
   19fd4:	add	x24, x24, #0x1
   19fd8:	cmp	x23, x24
   19fdc:	b.ls	19f34 <set_program_name@@Base+0x8ac>  // b.plast
   19fe0:	sub	x20, x20, x25
   19fe4:	str	x25, [x19, #8]
   19fe8:	mov	x19, x22
   19fec:	ldr	x1, [x28, #8]
   19ff0:	b	19ef8 <set_program_name@@Base+0x870>
   19ff4:	ldr	x24, [x22]
   19ff8:	ldr	x1, [x24, #40]
   19ffc:	cbz	x26, 1a034 <set_program_name@@Base+0x9ac>
   1a000:	mov	x0, x27
   1a004:	blr	x26
   1a008:	and	w0, w0, #0xff
   1a00c:	cbnz	w0, 1a040 <set_program_name@@Base+0x9b8>
   1a010:	add	x20, x20, #0x1
   1a014:	cmp	x23, x20
   1a018:	b.ls	19f34 <set_program_name@@Base+0x8ac>  // b.plast
   1a01c:	str	x25, [x22, #8]
   1a020:	ldr	x1, [x24, #8]
   1a024:	b	19f68 <set_program_name@@Base+0x8e0>
   1a028:	cmp	x1, x27
   1a02c:	cset	w0, eq  // eq = none
   1a030:	b	19fcc <set_program_name@@Base+0x944>
   1a034:	cmp	x27, x1
   1a038:	cset	w0, eq  // eq = none
   1a03c:	b	1a00c <set_program_name@@Base+0x984>
   1a040:	mov	x24, x20
   1a044:	b	19f38 <set_program_name@@Base+0x8b0>
   1a048:	bl	a900 <abort@plt>
   1a04c:	nop
   1a050:	sub	sp, sp, #0x7a0
   1a054:	cmp	x1, x2
   1a058:	stp	x29, x30, [sp]
   1a05c:	mov	x29, sp
   1a060:	stp	x19, x20, [sp, #16]
   1a064:	stp	x21, x22, [sp, #32]
   1a068:	stp	x23, x24, [sp, #48]
   1a06c:	stp	x25, x26, [sp, #64]
   1a070:	stp	x27, x28, [sp, #80]
   1a074:	b.hi	1a1f8 <set_program_name@@Base+0xb70>  // b.pmore
   1a078:	mov	x20, x1
   1a07c:	mov	x23, x2
   1a080:	ldr	x1, [x0, #40]
   1a084:	mov	x27, x3
   1a088:	mov	x2, #0x0                   	// #0
   1a08c:	cbz	x1, 1a094 <set_program_name@@Base+0xa0c>
   1a090:	ldr	x2, [x1, #32]
   1a094:	cmp	x2, x23
   1a098:	b.cc	1a1f8 <set_program_name@@Base+0xb70>  // b.lo, b.ul, b.last
   1a09c:	add	x21, sp, #0x60
   1a0a0:	ldr	x26, [x0, #8]
   1a0a4:	cbz	x20, 1a114 <set_program_name@@Base+0xa8c>
   1a0a8:	mov	x19, x21
   1a0ac:	mov	x28, #0x0                   	// #0
   1a0b0:	cbz	x1, 1a0e4 <set_program_name@@Base+0xa5c>
   1a0b4:	ldr	x0, [x1, #32]
   1a0b8:	cmp	x0, x20
   1a0bc:	b.ls	1a0e4 <set_program_name@@Base+0xa5c>  // b.plast
   1a0c0:	stp	x1, xzr, [x19]
   1a0c4:	add	x19, x19, #0x10
   1a0c8:	ldr	x1, [x1]
   1a0cc:	b	1a0b0 <set_program_name@@Base+0xa28>
   1a0d0:	mov	x22, x19
   1a0d4:	sub	x19, x19, #0x10
   1a0d8:	ldr	x0, [x19, #8]
   1a0dc:	cbz	x0, 1a150 <set_program_name@@Base+0xac8>
   1a0e0:	add	x20, x20, x0
   1a0e4:	cmp	x19, x21
   1a0e8:	b.ne	1a0d0 <set_program_name@@Base+0xa48>  // b.any
   1a0ec:	mov	x24, #0x0                   	// #0
   1a0f0:	mov	x0, x24
   1a0f4:	ldp	x29, x30, [sp]
   1a0f8:	ldp	x19, x20, [sp, #16]
   1a0fc:	ldp	x21, x22, [sp, #32]
   1a100:	ldp	x23, x24, [sp, #48]
   1a104:	ldp	x25, x26, [sp, #64]
   1a108:	ldp	x27, x28, [sp, #80]
   1a10c:	add	sp, sp, #0x7a0
   1a110:	ret
   1a114:	mov	x19, x21
   1a118:	mov	x25, #0x1                   	// #1
   1a11c:	nop
   1a120:	cbz	x1, 1a144 <set_program_name@@Base+0xabc>
   1a124:	stp	x1, xzr, [x19]
   1a128:	add	x19, x19, #0x10
   1a12c:	ldr	x1, [x1]
   1a130:	b	1a120 <set_program_name@@Base+0xa98>
   1a134:	ldur	x0, [x19, #-8]
   1a138:	sub	x22, x19, #0x10
   1a13c:	cbz	x0, 1a1ac <set_program_name@@Base+0xb24>
   1a140:	mov	x19, x22
   1a144:	cmp	x19, x21
   1a148:	b.ne	1a134 <set_program_name@@Base+0xaac>  // b.any
   1a14c:	b	1a0ec <set_program_name@@Base+0xa64>
   1a150:	ldr	x24, [x19]
   1a154:	mov	x25, #0x1                   	// #1
   1a158:	ldr	x0, [x24]
   1a15c:	cbz	x0, 1a168 <set_program_name@@Base+0xae0>
   1a160:	ldr	x25, [x0, #32]
   1a164:	add	x25, x25, #0x1
   1a168:	cmp	x25, x20
   1a16c:	b.ls	1a18c <set_program_name@@Base+0xb04>  // b.plast
   1a170:	ldr	x1, [x24, #40]
   1a174:	cbz	x26, 1a1e0 <set_program_name@@Base+0xb58>
   1a178:	mov	x0, x27
   1a17c:	blr	x26
   1a180:	and	w0, w0, #0xff
   1a184:	cbnz	w0, 1a0f0 <set_program_name@@Base+0xa68>
   1a188:	mov	x20, x25
   1a18c:	add	x28, x28, #0x1
   1a190:	cmp	x23, x28
   1a194:	b.ls	1a0ec <set_program_name@@Base+0xa64>  // b.plast
   1a198:	sub	x20, x20, x25
   1a19c:	str	x25, [x19, #8]
   1a1a0:	mov	x19, x22
   1a1a4:	ldr	x1, [x24, #8]
   1a1a8:	b	1a0b0 <set_program_name@@Base+0xa28>
   1a1ac:	ldr	x24, [x22]
   1a1b0:	ldr	x1, [x24, #40]
   1a1b4:	cbz	x26, 1a1ec <set_program_name@@Base+0xb64>
   1a1b8:	mov	x0, x27
   1a1bc:	blr	x26
   1a1c0:	and	w0, w0, #0xff
   1a1c4:	cbnz	w0, 1a0f0 <set_program_name@@Base+0xa68>
   1a1c8:	add	x20, x20, #0x1
   1a1cc:	cmp	x23, x20
   1a1d0:	b.ls	1a0ec <set_program_name@@Base+0xa64>  // b.plast
   1a1d4:	str	x25, [x22, #8]
   1a1d8:	ldr	x1, [x24, #8]
   1a1dc:	b	1a120 <set_program_name@@Base+0xa98>
   1a1e0:	cmp	x1, x27
   1a1e4:	cset	w0, eq  // eq = none
   1a1e8:	b	1a184 <set_program_name@@Base+0xafc>
   1a1ec:	cmp	x27, x1
   1a1f0:	cset	w0, eq  // eq = none
   1a1f4:	b	1a1c4 <set_program_name@@Base+0xb3c>
   1a1f8:	bl	a900 <abort@plt>
   1a1fc:	nop
   1a200:	ldr	x0, [x0, #40]
   1a204:	cbz	x0, 1a250 <set_program_name@@Base+0xbc8>
   1a208:	ldr	x3, [x0, #32]
   1a20c:	cmp	x3, x1
   1a210:	b.ls	1a250 <set_program_name@@Base+0xbc8>  // b.plast
   1a214:	nop
   1a218:	ldr	x3, [x0]
   1a21c:	cbz	x3, 1a230 <set_program_name@@Base+0xba8>
   1a220:	ldr	x4, [x3, #32]
   1a224:	cmp	x4, x1
   1a228:	b.hi	1a240 <set_program_name@@Base+0xbb8>  // b.pmore
   1a22c:	sub	x1, x1, x4
   1a230:	cbz	x1, 1a248 <set_program_name@@Base+0xbc0>
   1a234:	sub	x1, x1, #0x1
   1a238:	ldr	x0, [x0, #8]
   1a23c:	b	1a218 <set_program_name@@Base+0xb90>
   1a240:	mov	x0, x3
   1a244:	b	1a218 <set_program_name@@Base+0xb90>
   1a248:	str	x2, [x0, #40]
   1a24c:	ret
   1a250:	stp	x29, x30, [sp, #-16]!
   1a254:	mov	x29, sp
   1a258:	bl	a900 <abort@plt>
   1a25c:	nop
   1a260:	ldr	x0, [x0, #40]
   1a264:	cbz	x0, 1a2b0 <set_program_name@@Base+0xc28>
   1a268:	ldr	x2, [x0, #32]
   1a26c:	cmp	x2, x1
   1a270:	b.ls	1a2b0 <set_program_name@@Base+0xc28>  // b.plast
   1a274:	nop
   1a278:	ldr	x2, [x0]
   1a27c:	cbz	x2, 1a290 <set_program_name@@Base+0xc08>
   1a280:	ldr	x3, [x2, #32]
   1a284:	cmp	x3, x1
   1a288:	b.hi	1a2a0 <set_program_name@@Base+0xc18>  // b.pmore
   1a28c:	sub	x1, x1, x3
   1a290:	cbz	x1, 1a2a8 <set_program_name@@Base+0xc20>
   1a294:	sub	x1, x1, #0x1
   1a298:	ldr	x0, [x0, #8]
   1a29c:	b	1a278 <set_program_name@@Base+0xbf0>
   1a2a0:	mov	x0, x2
   1a2a4:	b	1a278 <set_program_name@@Base+0xbf0>
   1a2a8:	ldr	x0, [x0, #40]
   1a2ac:	ret
   1a2b0:	stp	x29, x30, [sp, #-16]!
   1a2b4:	mov	x29, sp
   1a2b8:	bl	a900 <abort@plt>
   1a2bc:	nop
   1a2c0:	sub	sp, sp, #0x780
   1a2c4:	stp	x29, x30, [sp]
   1a2c8:	mov	x29, sp
   1a2cc:	ldr	x2, [x0, #40]
   1a2d0:	stp	x21, x22, [sp, #32]
   1a2d4:	add	x22, sp, #0x40
   1a2d8:	mov	x21, x0
   1a2dc:	mov	x1, x22
   1a2e0:	stp	x19, x20, [sp, #16]
   1a2e4:	str	x23, [sp, #48]
   1a2e8:	mov	x23, #0x1                   	// #1
   1a2ec:	cbz	x2, 1a300 <set_program_name@@Base+0xc78>
   1a2f0:	stp	x2, xzr, [x1]
   1a2f4:	add	x1, x1, #0x10
   1a2f8:	ldr	x2, [x2]
   1a2fc:	cbnz	x2, 1a2f0 <set_program_name@@Base+0xc68>
   1a300:	cmp	x1, x22
   1a304:	b.eq	1a364 <set_program_name@@Base+0xcdc>  // b.none
   1a308:	ldp	x20, x2, [x1, #-16]
   1a30c:	sub	x19, x1, #0x10
   1a310:	cbz	x2, 1a348 <set_program_name@@Base+0xcc0>
   1a314:	nop
   1a318:	ldr	x1, [x21, #24]
   1a31c:	cbz	x1, 1a354 <set_program_name@@Base+0xccc>
   1a320:	ldr	x0, [x20, #40]
   1a324:	blr	x1
   1a328:	mov	x0, x20
   1a32c:	bl	aa50 <free@plt>
   1a330:	cmp	x19, x22
   1a334:	b.eq	1a364 <set_program_name@@Base+0xcdc>  // b.none
   1a338:	mov	x1, x19
   1a33c:	sub	x19, x1, #0x10
   1a340:	ldp	x20, x2, [x1, #-16]
   1a344:	cbnz	x2, 1a318 <set_program_name@@Base+0xc90>
   1a348:	str	x23, [x19, #8]
   1a34c:	ldr	x2, [x20, #8]
   1a350:	b	1a2ec <set_program_name@@Base+0xc64>
   1a354:	mov	x0, x20
   1a358:	bl	aa50 <free@plt>
   1a35c:	cmp	x19, x22
   1a360:	b.ne	1a338 <set_program_name@@Base+0xcb0>  // b.any
   1a364:	mov	x0, x21
   1a368:	ldp	x29, x30, [sp]
   1a36c:	ldp	x19, x20, [sp, #16]
   1a370:	ldp	x21, x22, [sp, #32]
   1a374:	ldr	x23, [sp, #48]
   1a378:	add	sp, sp, #0x780
   1a37c:	b	aa50 <free@plt>
   1a380:	stp	x29, x30, [sp, #-32]!
   1a384:	mov	x29, sp
   1a388:	str	x19, [sp, #16]
   1a38c:	mov	x19, x0
   1a390:	ldr	x0, [x0]
   1a394:	cbz	x0, 1a39c <set_program_name@@Base+0xd14>
   1a398:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a39c:	ldr	x0, [x19, #8]
   1a3a0:	cbz	x0, 1a3a8 <set_program_name@@Base+0xd20>
   1a3a4:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a3a8:	mov	x0, x19
   1a3ac:	ldr	x19, [sp, #16]
   1a3b0:	ldp	x29, x30, [sp], #32
   1a3b4:	b	aa50 <free@plt>
   1a3b8:	stp	x29, x30, [sp, #-64]!
   1a3bc:	mov	x29, sp
   1a3c0:	stp	x19, x20, [sp, #16]
   1a3c4:	mov	x20, x2
   1a3c8:	mov	x19, x3
   1a3cc:	stp	x21, x22, [sp, #32]
   1a3d0:	mov	x22, x0
   1a3d4:	mov	x21, x1
   1a3d8:	mov	x0, #0x30                  	// #48
   1a3dc:	str	x23, [sp, #48]
   1a3e0:	and	w23, w4, #0xff
   1a3e4:	bl	a5f0 <malloc@plt>
   1a3e8:	cbz	x0, 1a3fc <set_program_name@@Base+0xd74>
   1a3ec:	stp	x22, x21, [x0]
   1a3f0:	stp	x20, x19, [x0, #16]
   1a3f4:	strb	w23, [x0, #32]
   1a3f8:	str	xzr, [x0, #40]
   1a3fc:	ldp	x19, x20, [sp, #16]
   1a400:	ldp	x21, x22, [sp, #32]
   1a404:	ldr	x23, [sp, #48]
   1a408:	ldp	x29, x30, [sp], #64
   1a40c:	ret
   1a410:	ldr	x2, [x1, #8]
   1a414:	cbz	x2, 1a428 <set_program_name@@Base+0xda0>
   1a418:	mov	x0, x2
   1a41c:	ldr	x2, [x2]
   1a420:	cbnz	x2, 1a418 <set_program_name@@Base+0xd90>
   1a424:	ret
   1a428:	mov	x0, x1
   1a42c:	b	1a43c <set_program_name@@Base+0xdb4>
   1a430:	ldr	x2, [x0, #8]
   1a434:	cmp	x1, x2
   1a438:	b.ne	1a424 <set_program_name@@Base+0xd9c>  // b.any
   1a43c:	mov	x1, x0
   1a440:	ldr	x0, [x0, #16]
   1a444:	cbnz	x0, 1a430 <set_program_name@@Base+0xda8>
   1a448:	ret
   1a44c:	nop
   1a450:	ldr	x2, [x1]
   1a454:	cbz	x2, 1a468 <set_program_name@@Base+0xde0>
   1a458:	mov	x0, x2
   1a45c:	ldr	x2, [x2, #8]
   1a460:	cbnz	x2, 1a458 <set_program_name@@Base+0xdd0>
   1a464:	ret
   1a468:	mov	x0, x1
   1a46c:	b	1a47c <set_program_name@@Base+0xdf4>
   1a470:	ldr	x2, [x0]
   1a474:	cmp	x1, x2
   1a478:	b.ne	1a464 <set_program_name@@Base+0xddc>  // b.any
   1a47c:	mov	x1, x0
   1a480:	ldr	x0, [x0, #16]
   1a484:	cbnz	x0, 1a470 <set_program_name@@Base+0xde8>
   1a488:	ret
   1a48c:	nop
   1a490:	stp	x29, x30, [sp, #-64]!
   1a494:	mov	x29, sp
   1a498:	stp	x19, x20, [sp, #16]
   1a49c:	mov	x20, x1
   1a4a0:	stp	x21, x22, [sp, #32]
   1a4a4:	mov	x22, x2
   1a4a8:	stp	x23, x24, [sp, #48]
   1a4ac:	sub	x24, x1, #0x1
   1a4b0:	mov	w23, w0
   1a4b4:	mov	x0, #0x30                  	// #48
   1a4b8:	bl	a5f0 <malloc@plt>
   1a4bc:	mov	x19, x0
   1a4c0:	cbz	x0, 1a4fc <set_program_name@@Base+0xe74>
   1a4c4:	lsr	x21, x24, #1
   1a4c8:	cmp	x24, #0x1
   1a4cc:	b.hi	1a514 <set_program_name@@Base+0xe8c>  // b.pmore
   1a4d0:	str	xzr, [x0]
   1a4d4:	cmp	x20, #0x1
   1a4d8:	ldr	x0, [x22, x21, lsl #3]
   1a4dc:	str	x0, [x19, #40]
   1a4e0:	lsl	x21, x21, #3
   1a4e4:	b.hi	1a544 <set_program_name@@Base+0xebc>  // b.pmore
   1a4e8:	str	xzr, [x19, #8]
   1a4ec:	cmp	w23, #0x0
   1a4f0:	str	x20, [x19, #32]
   1a4f4:	cset	w0, eq  // eq = none
   1a4f8:	str	w0, [x19, #24]
   1a4fc:	mov	x0, x19
   1a500:	ldp	x19, x20, [sp, #16]
   1a504:	ldp	x21, x22, [sp, #32]
   1a508:	ldp	x23, x24, [sp, #48]
   1a50c:	ldp	x29, x30, [sp], #64
   1a510:	ret
   1a514:	mov	x2, x22
   1a518:	mov	x1, x21
   1a51c:	sub	w0, w23, #0x1
   1a520:	bl	1a490 <set_program_name@@Base+0xe08>
   1a524:	str	x0, [x19]
   1a528:	cbz	x0, 1a8d8 <set_program_name@@Base+0x1250>
   1a52c:	str	x19, [x0, #16]
   1a530:	cmp	x20, #0x1
   1a534:	ldr	x0, [x22, x21, lsl #3]
   1a538:	str	x0, [x19, #40]
   1a53c:	lsl	x21, x21, #3
   1a540:	b.ls	1a4e8 <set_program_name@@Base+0xe60>  // b.plast
   1a544:	add	x21, x21, #0x8
   1a548:	lsr	x1, x20, #1
   1a54c:	add	x2, x22, x21
   1a550:	sub	w0, w23, #0x1
   1a554:	bl	1a490 <set_program_name@@Base+0xe08>
   1a558:	str	x0, [x19, #8]
   1a55c:	cbz	x0, 1a568 <set_program_name@@Base+0xee0>
   1a560:	str	x19, [x0, #16]
   1a564:	b	1a4ec <set_program_name@@Base+0xe64>
   1a568:	ldr	x20, [x19]
   1a56c:	cbz	x20, 1a8d8 <set_program_name@@Base+0x1250>
   1a570:	ldr	x21, [x20]
   1a574:	cbz	x21, 1a720 <set_program_name@@Base+0x1098>
   1a578:	ldr	x22, [x21]
   1a57c:	cbz	x22, 1a648 <set_program_name@@Base+0xfc0>
   1a580:	ldr	x23, [x22]
   1a584:	cbz	x23, 1a5e0 <set_program_name@@Base+0xf58>
   1a588:	ldr	x24, [x23]
   1a58c:	cbz	x24, 1a5b0 <set_program_name@@Base+0xf28>
   1a590:	ldr	x0, [x24]
   1a594:	cbz	x0, 1a59c <set_program_name@@Base+0xf14>
   1a598:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a59c:	ldr	x0, [x24, #8]
   1a5a0:	cbz	x0, 1a5a8 <set_program_name@@Base+0xf20>
   1a5a4:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a5a8:	mov	x0, x24
   1a5ac:	bl	aa50 <free@plt>
   1a5b0:	ldr	x24, [x23, #8]
   1a5b4:	cbz	x24, 1a5d8 <set_program_name@@Base+0xf50>
   1a5b8:	ldr	x0, [x24]
   1a5bc:	cbz	x0, 1a5c4 <set_program_name@@Base+0xf3c>
   1a5c0:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a5c4:	ldr	x0, [x24, #8]
   1a5c8:	cbz	x0, 1a5d0 <set_program_name@@Base+0xf48>
   1a5cc:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a5d0:	mov	x0, x24
   1a5d4:	bl	aa50 <free@plt>
   1a5d8:	mov	x0, x23
   1a5dc:	bl	aa50 <free@plt>
   1a5e0:	ldr	x23, [x22, #8]
   1a5e4:	cbz	x23, 1a640 <set_program_name@@Base+0xfb8>
   1a5e8:	ldr	x24, [x23]
   1a5ec:	cbz	x24, 1a610 <set_program_name@@Base+0xf88>
   1a5f0:	ldr	x0, [x24]
   1a5f4:	cbz	x0, 1a5fc <set_program_name@@Base+0xf74>
   1a5f8:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a5fc:	ldr	x0, [x24, #8]
   1a600:	cbz	x0, 1a608 <set_program_name@@Base+0xf80>
   1a604:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a608:	mov	x0, x24
   1a60c:	bl	aa50 <free@plt>
   1a610:	ldr	x24, [x23, #8]
   1a614:	cbz	x24, 1a638 <set_program_name@@Base+0xfb0>
   1a618:	ldr	x0, [x24]
   1a61c:	cbz	x0, 1a624 <set_program_name@@Base+0xf9c>
   1a620:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a624:	ldr	x0, [x24, #8]
   1a628:	cbz	x0, 1a630 <set_program_name@@Base+0xfa8>
   1a62c:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a630:	mov	x0, x24
   1a634:	bl	aa50 <free@plt>
   1a638:	mov	x0, x23
   1a63c:	bl	aa50 <free@plt>
   1a640:	mov	x0, x22
   1a644:	bl	aa50 <free@plt>
   1a648:	ldr	x22, [x21, #8]
   1a64c:	cbz	x22, 1a718 <set_program_name@@Base+0x1090>
   1a650:	ldr	x23, [x22]
   1a654:	cbz	x23, 1a6b0 <set_program_name@@Base+0x1028>
   1a658:	ldr	x24, [x23]
   1a65c:	cbz	x24, 1a680 <set_program_name@@Base+0xff8>
   1a660:	ldr	x0, [x24]
   1a664:	cbz	x0, 1a66c <set_program_name@@Base+0xfe4>
   1a668:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a66c:	ldr	x0, [x24, #8]
   1a670:	cbz	x0, 1a678 <set_program_name@@Base+0xff0>
   1a674:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a678:	mov	x0, x24
   1a67c:	bl	aa50 <free@plt>
   1a680:	ldr	x24, [x23, #8]
   1a684:	cbz	x24, 1a6a8 <set_program_name@@Base+0x1020>
   1a688:	ldr	x0, [x24]
   1a68c:	cbz	x0, 1a694 <set_program_name@@Base+0x100c>
   1a690:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a694:	ldr	x0, [x24, #8]
   1a698:	cbz	x0, 1a6a0 <set_program_name@@Base+0x1018>
   1a69c:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a6a0:	mov	x0, x24
   1a6a4:	bl	aa50 <free@plt>
   1a6a8:	mov	x0, x23
   1a6ac:	bl	aa50 <free@plt>
   1a6b0:	ldr	x23, [x22, #8]
   1a6b4:	cbz	x23, 1a710 <set_program_name@@Base+0x1088>
   1a6b8:	ldr	x24, [x23]
   1a6bc:	cbz	x24, 1a6e0 <set_program_name@@Base+0x1058>
   1a6c0:	ldr	x0, [x24]
   1a6c4:	cbz	x0, 1a6cc <set_program_name@@Base+0x1044>
   1a6c8:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a6cc:	ldr	x0, [x24, #8]
   1a6d0:	cbz	x0, 1a6d8 <set_program_name@@Base+0x1050>
   1a6d4:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a6d8:	mov	x0, x24
   1a6dc:	bl	aa50 <free@plt>
   1a6e0:	ldr	x24, [x23, #8]
   1a6e4:	cbz	x24, 1a708 <set_program_name@@Base+0x1080>
   1a6e8:	ldr	x0, [x24]
   1a6ec:	cbz	x0, 1a6f4 <set_program_name@@Base+0x106c>
   1a6f0:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a6f4:	ldr	x0, [x24, #8]
   1a6f8:	cbz	x0, 1a700 <set_program_name@@Base+0x1078>
   1a6fc:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a700:	mov	x0, x24
   1a704:	bl	aa50 <free@plt>
   1a708:	mov	x0, x23
   1a70c:	bl	aa50 <free@plt>
   1a710:	mov	x0, x22
   1a714:	bl	aa50 <free@plt>
   1a718:	mov	x0, x21
   1a71c:	bl	aa50 <free@plt>
   1a720:	ldr	x21, [x20, #8]
   1a724:	cbz	x21, 1a8d0 <set_program_name@@Base+0x1248>
   1a728:	ldr	x22, [x21]
   1a72c:	cbz	x22, 1a7f8 <set_program_name@@Base+0x1170>
   1a730:	ldr	x23, [x22]
   1a734:	cbz	x23, 1a790 <set_program_name@@Base+0x1108>
   1a738:	ldr	x24, [x23]
   1a73c:	cbz	x24, 1a760 <set_program_name@@Base+0x10d8>
   1a740:	ldr	x0, [x24]
   1a744:	cbz	x0, 1a74c <set_program_name@@Base+0x10c4>
   1a748:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a74c:	ldr	x0, [x24, #8]
   1a750:	cbz	x0, 1a758 <set_program_name@@Base+0x10d0>
   1a754:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a758:	mov	x0, x24
   1a75c:	bl	aa50 <free@plt>
   1a760:	ldr	x24, [x23, #8]
   1a764:	cbz	x24, 1a788 <set_program_name@@Base+0x1100>
   1a768:	ldr	x0, [x24]
   1a76c:	cbz	x0, 1a774 <set_program_name@@Base+0x10ec>
   1a770:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a774:	ldr	x0, [x24, #8]
   1a778:	cbz	x0, 1a780 <set_program_name@@Base+0x10f8>
   1a77c:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a780:	mov	x0, x24
   1a784:	bl	aa50 <free@plt>
   1a788:	mov	x0, x23
   1a78c:	bl	aa50 <free@plt>
   1a790:	ldr	x23, [x22, #8]
   1a794:	cbz	x23, 1a7f0 <set_program_name@@Base+0x1168>
   1a798:	ldr	x24, [x23]
   1a79c:	cbz	x24, 1a7c0 <set_program_name@@Base+0x1138>
   1a7a0:	ldr	x0, [x24]
   1a7a4:	cbz	x0, 1a7ac <set_program_name@@Base+0x1124>
   1a7a8:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a7ac:	ldr	x0, [x24, #8]
   1a7b0:	cbz	x0, 1a7b8 <set_program_name@@Base+0x1130>
   1a7b4:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a7b8:	mov	x0, x24
   1a7bc:	bl	aa50 <free@plt>
   1a7c0:	ldr	x24, [x23, #8]
   1a7c4:	cbz	x24, 1a7e8 <set_program_name@@Base+0x1160>
   1a7c8:	ldr	x0, [x24]
   1a7cc:	cbz	x0, 1a7d4 <set_program_name@@Base+0x114c>
   1a7d0:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a7d4:	ldr	x0, [x24, #8]
   1a7d8:	cbz	x0, 1a7e0 <set_program_name@@Base+0x1158>
   1a7dc:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a7e0:	mov	x0, x24
   1a7e4:	bl	aa50 <free@plt>
   1a7e8:	mov	x0, x23
   1a7ec:	bl	aa50 <free@plt>
   1a7f0:	mov	x0, x22
   1a7f4:	bl	aa50 <free@plt>
   1a7f8:	ldr	x22, [x21, #8]
   1a7fc:	cbz	x22, 1a8c8 <set_program_name@@Base+0x1240>
   1a800:	ldr	x23, [x22]
   1a804:	cbz	x23, 1a860 <set_program_name@@Base+0x11d8>
   1a808:	ldr	x24, [x23]
   1a80c:	cbz	x24, 1a830 <set_program_name@@Base+0x11a8>
   1a810:	ldr	x0, [x24]
   1a814:	cbz	x0, 1a81c <set_program_name@@Base+0x1194>
   1a818:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a81c:	ldr	x0, [x24, #8]
   1a820:	cbz	x0, 1a828 <set_program_name@@Base+0x11a0>
   1a824:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a828:	mov	x0, x24
   1a82c:	bl	aa50 <free@plt>
   1a830:	ldr	x24, [x23, #8]
   1a834:	cbz	x24, 1a858 <set_program_name@@Base+0x11d0>
   1a838:	ldr	x0, [x24]
   1a83c:	cbz	x0, 1a844 <set_program_name@@Base+0x11bc>
   1a840:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a844:	ldr	x0, [x24, #8]
   1a848:	cbz	x0, 1a850 <set_program_name@@Base+0x11c8>
   1a84c:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a850:	mov	x0, x24
   1a854:	bl	aa50 <free@plt>
   1a858:	mov	x0, x23
   1a85c:	bl	aa50 <free@plt>
   1a860:	ldr	x23, [x22, #8]
   1a864:	cbz	x23, 1a8c0 <set_program_name@@Base+0x1238>
   1a868:	ldr	x24, [x23]
   1a86c:	cbz	x24, 1a890 <set_program_name@@Base+0x1208>
   1a870:	ldr	x0, [x24]
   1a874:	cbz	x0, 1a87c <set_program_name@@Base+0x11f4>
   1a878:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a87c:	ldr	x0, [x24, #8]
   1a880:	cbz	x0, 1a888 <set_program_name@@Base+0x1200>
   1a884:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a888:	mov	x0, x24
   1a88c:	bl	aa50 <free@plt>
   1a890:	ldr	x24, [x23, #8]
   1a894:	cbz	x24, 1a8b8 <set_program_name@@Base+0x1230>
   1a898:	ldr	x0, [x24]
   1a89c:	cbz	x0, 1a8a4 <set_program_name@@Base+0x121c>
   1a8a0:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a8a4:	ldr	x0, [x24, #8]
   1a8a8:	cbz	x0, 1a8b0 <set_program_name@@Base+0x1228>
   1a8ac:	bl	1a380 <set_program_name@@Base+0xcf8>
   1a8b0:	mov	x0, x24
   1a8b4:	bl	aa50 <free@plt>
   1a8b8:	mov	x0, x23
   1a8bc:	bl	aa50 <free@plt>
   1a8c0:	mov	x0, x22
   1a8c4:	bl	aa50 <free@plt>
   1a8c8:	mov	x0, x21
   1a8cc:	bl	aa50 <free@plt>
   1a8d0:	mov	x0, x20
   1a8d4:	bl	aa50 <free@plt>
   1a8d8:	mov	x0, x19
   1a8dc:	mov	x19, #0x0                   	// #0
   1a8e0:	bl	aa50 <free@plt>
   1a8e4:	b	1a4fc <set_program_name@@Base+0xe74>
   1a8e8:	stp	x29, x30, [sp, #-80]!
   1a8ec:	mov	x29, sp
   1a8f0:	stp	x19, x20, [sp, #16]
   1a8f4:	mov	x20, x5
   1a8f8:	stp	x21, x22, [sp, #32]
   1a8fc:	mov	x22, x2
   1a900:	mov	x21, x3
   1a904:	stp	x23, x24, [sp, #48]
   1a908:	mov	x24, x0
   1a90c:	mov	x23, x1
   1a910:	mov	x0, #0x30                  	// #48
   1a914:	stp	x25, x26, [sp, #64]
   1a918:	mov	x25, x6
   1a91c:	and	w26, w4, #0xff
   1a920:	bl	a5f0 <malloc@plt>
   1a924:	mov	x19, x0
   1a928:	cbz	x0, 1a978 <set_program_name@@Base+0x12f0>
   1a92c:	stp	x24, x23, [x0]
   1a930:	stp	x22, x21, [x0, #16]
   1a934:	strb	w26, [x0, #32]
   1a938:	cbz	x20, 1a994 <set_program_name@@Base+0x130c>
   1a93c:	add	x3, x20, #0x1
   1a940:	mov	w0, #0x0                   	// #0
   1a944:	cmp	x3, #0x1
   1a948:	b.ls	1a960 <set_program_name@@Base+0x12d8>  // b.plast
   1a94c:	nop
   1a950:	lsr	x3, x3, #1
   1a954:	add	w0, w0, #0x1
   1a958:	cmp	x3, #0x1
   1a95c:	b.ne	1a950 <set_program_name@@Base+0x12c8>  // b.any
   1a960:	mov	x2, x25
   1a964:	mov	x1, x20
   1a968:	bl	1a490 <set_program_name@@Base+0xe08>
   1a96c:	str	x0, [x19, #40]
   1a970:	cbz	x0, 1a9b4 <set_program_name@@Base+0x132c>
   1a974:	str	xzr, [x0, #16]
   1a978:	mov	x0, x19
   1a97c:	ldp	x19, x20, [sp, #16]
   1a980:	ldp	x21, x22, [sp, #32]
   1a984:	ldp	x23, x24, [sp, #48]
   1a988:	ldp	x25, x26, [sp, #64]
   1a98c:	ldp	x29, x30, [sp], #80
   1a990:	ret
   1a994:	str	xzr, [x0, #40]
   1a998:	mov	x0, x19
   1a99c:	ldp	x19, x20, [sp, #16]
   1a9a0:	ldp	x21, x22, [sp, #32]
   1a9a4:	ldp	x23, x24, [sp, #48]
   1a9a8:	ldp	x25, x26, [sp, #64]
   1a9ac:	ldp	x29, x30, [sp], #80
   1a9b0:	ret
   1a9b4:	mov	x0, x19
   1a9b8:	mov	x19, #0x0                   	// #0
   1a9bc:	bl	aa50 <free@plt>
   1a9c0:	b	1a978 <set_program_name@@Base+0x12f0>
   1a9c4:	nop
   1a9c8:	ldr	w3, [x2, #24]
   1a9cc:	cbz	w3, 1ab20 <set_program_name@@Base+0x1498>
   1a9d0:	ldr	x3, [x2, #16]
   1a9d4:	ldp	x7, x8, [x3]
   1a9d8:	cmp	x7, x2
   1a9dc:	b.eq	1aa1c <set_program_name@@Base+0x1394>  // b.none
   1a9e0:	cmp	x2, x8
   1a9e4:	b.ne	1ac64 <set_program_name@@Base+0x15dc>  // b.any
   1a9e8:	mov	x4, x7
   1a9ec:	ldr	x5, [x3, #16]
   1a9f0:	cbz	x4, 1aa24 <set_program_name@@Base+0x139c>
   1a9f4:	ldr	w6, [x4, #24]
   1a9f8:	cmp	w6, #0x1
   1a9fc:	b.ne	1aa24 <set_program_name@@Base+0x139c>  // b.any
   1aa00:	str	w6, [x1, #24]
   1aa04:	str	wzr, [x4, #24]
   1aa08:	str	wzr, [x2, #24]
   1aa0c:	cbz	x5, 1ab2c <set_program_name@@Base+0x14a4>
   1aa10:	mov	x2, x5
   1aa14:	mov	x1, x3
   1aa18:	b	1a9c8 <set_program_name@@Base+0x1340>
   1aa1c:	mov	x4, x8
   1aa20:	b	1a9ec <set_program_name@@Base+0x1364>
   1aa24:	add	x0, x0, #0x28
   1aa28:	cbz	x5, 1aa48 <set_program_name@@Base+0x13c0>
   1aa2c:	ldr	x0, [x5]
   1aa30:	cmp	x0, x3
   1aa34:	b.eq	1ab34 <set_program_name@@Base+0x14ac>  // b.none
   1aa38:	ldr	x0, [x5, #8]
   1aa3c:	cmp	x0, x3
   1aa40:	b.ne	1ac64 <set_program_name@@Base+0x15dc>  // b.any
   1aa44:	add	x0, x5, #0x8
   1aa48:	cmp	x7, x2
   1aa4c:	ldp	x4, x6, [x2]
   1aa50:	b.eq	1aab8 <set_program_name@@Base+0x1430>  // b.none
   1aa54:	cmp	x1, x4
   1aa58:	b.eq	1ab60 <set_program_name@@Base+0x14d8>  // b.none
   1aa5c:	str	x4, [x3, #8]
   1aa60:	str	x3, [x2]
   1aa64:	str	x5, [x2, #16]
   1aa68:	str	x2, [x3, #16]
   1aa6c:	cbz	x4, 1ab3c <set_program_name@@Base+0x14b4>
   1aa70:	str	x3, [x4, #16]
   1aa74:	cbz	x7, 1ab58 <set_program_name@@Base+0x14d0>
   1aa78:	ldr	x5, [x7, #32]
   1aa7c:	add	x5, x5, #0x1
   1aa80:	ldr	x4, [x4, #32]
   1aa84:	add	x4, x5, x4
   1aa88:	add	x5, x4, #0x1
   1aa8c:	str	x4, [x3, #32]
   1aa90:	cbz	x6, 1aa9c <set_program_name@@Base+0x1414>
   1aa94:	ldr	x4, [x6, #32]
   1aa98:	add	x5, x5, x4
   1aa9c:	str	x5, [x2, #32]
   1aaa0:	mov	w4, #0x1                   	// #1
   1aaa4:	str	x2, [x0]
   1aaa8:	str	wzr, [x2, #24]
   1aaac:	str	w4, [x3, #24]
   1aab0:	str	w4, [x1, #24]
   1aab4:	ret
   1aab8:	cmp	x1, x6
   1aabc:	b.eq	1abd0 <set_program_name@@Base+0x1548>  // b.none
   1aac0:	str	x6, [x3]
   1aac4:	mov	x7, #0x1                   	// #1
   1aac8:	stp	x3, x5, [x2, #8]
   1aacc:	str	x2, [x3, #16]
   1aad0:	cbz	x6, 1aae0 <set_program_name@@Base+0x1458>
   1aad4:	ldr	x7, [x6, #32]
   1aad8:	str	x3, [x6, #16]
   1aadc:	add	x7, x7, #0x1
   1aae0:	cbz	x8, 1aaec <set_program_name@@Base+0x1464>
   1aae4:	ldr	x5, [x8, #32]
   1aae8:	add	x7, x7, x5
   1aaec:	str	x7, [x3, #32]
   1aaf0:	mov	x5, #0x1                   	// #1
   1aaf4:	cbz	x4, 1ab00 <set_program_name@@Base+0x1478>
   1aaf8:	ldr	x5, [x4, #32]
   1aafc:	add	x5, x5, #0x1
   1ab00:	add	x5, x5, x7
   1ab04:	str	x5, [x2, #32]
   1ab08:	str	x2, [x0]
   1ab0c:	mov	w0, #0x1                   	// #1
   1ab10:	str	wzr, [x2, #24]
   1ab14:	str	w0, [x3, #24]
   1ab18:	str	w0, [x1, #24]
   1ab1c:	ret
   1ab20:	mov	w0, #0x1                   	// #1
   1ab24:	str	w0, [x1, #24]
   1ab28:	ret
   1ab2c:	str	wzr, [x3, #24]
   1ab30:	ret
   1ab34:	mov	x0, x5
   1ab38:	b	1aa48 <set_program_name@@Base+0x13c0>
   1ab3c:	mov	x5, #0x2                   	// #2
   1ab40:	mov	x4, #0x1                   	// #1
   1ab44:	cbz	x7, 1aa8c <set_program_name@@Base+0x1404>
   1ab48:	ldr	x5, [x7, #32]
   1ab4c:	add	x4, x5, #0x1
   1ab50:	add	x5, x5, #0x2
   1ab54:	b	1aa8c <set_program_name@@Base+0x1404>
   1ab58:	mov	x5, #0x1                   	// #1
   1ab5c:	b	1aa80 <set_program_name@@Base+0x13f8>
   1ab60:	ldp	x7, x5, [x1]
   1ab64:	str	x5, [x2]
   1ab68:	stp	x2, x3, [x1, #8]
   1ab6c:	mov	x4, #0x1                   	// #1
   1ab70:	str	x1, [x2, #16]
   1ab74:	cbz	x5, 1ab84 <set_program_name@@Base+0x14fc>
   1ab78:	ldr	x4, [x5, #32]
   1ab7c:	str	x2, [x5, #16]
   1ab80:	add	x4, x4, #0x1
   1ab84:	cbz	x6, 1ab90 <set_program_name@@Base+0x1508>
   1ab88:	ldr	x5, [x6, #32]
   1ab8c:	add	x4, x4, x5
   1ab90:	str	x4, [x2, #32]
   1ab94:	mov	x5, #0x1                   	// #1
   1ab98:	cbz	x7, 1aba4 <set_program_name@@Base+0x151c>
   1ab9c:	ldr	x5, [x7, #32]
   1aba0:	add	x5, x5, #0x1
   1aba4:	add	x4, x5, x4
   1aba8:	mov	x8, x1
   1abac:	ldr	x7, [x3]
   1abb0:	ldr	x5, [x3, #16]
   1abb4:	str	x4, [x1, #32]
   1abb8:	ldr	x4, [x1]
   1abbc:	str	x1, [x3, #8]
   1abc0:	ldr	x6, [x1, #8]
   1abc4:	mov	x1, x2
   1abc8:	mov	x2, x8
   1abcc:	b	1aa5c <set_program_name@@Base+0x13d4>
   1abd0:	ldp	x5, x6, [x1]
   1abd4:	str	x5, [x2, #8]
   1abd8:	str	x2, [x1]
   1abdc:	str	x3, [x1, #16]
   1abe0:	str	x1, [x2, #16]
   1abe4:	cbz	x5, 1ac3c <set_program_name@@Base+0x15b4>
   1abe8:	str	x2, [x5, #16]
   1abec:	cbz	x4, 1ac50 <set_program_name@@Base+0x15c8>
   1abf0:	ldr	x4, [x4, #32]
   1abf4:	add	x4, x4, #0x1
   1abf8:	ldr	x5, [x5, #32]
   1abfc:	add	x4, x4, x5
   1ac00:	add	x5, x4, #0x1
   1ac04:	str	x4, [x2, #32]
   1ac08:	cbz	x6, 1ac14 <set_program_name@@Base+0x158c>
   1ac0c:	ldr	x4, [x6, #32]
   1ac10:	add	x5, x5, x4
   1ac14:	ldr	x8, [x3, #8]
   1ac18:	str	x5, [x1, #32]
   1ac1c:	ldr	x6, [x1, #8]
   1ac20:	str	x1, [x3]
   1ac24:	mov	x7, x1
   1ac28:	ldr	x4, [x1]
   1ac2c:	mov	x1, x2
   1ac30:	mov	x2, x7
   1ac34:	ldr	x5, [x3, #16]
   1ac38:	b	1aac0 <set_program_name@@Base+0x1438>
   1ac3c:	cbz	x4, 1ac58 <set_program_name@@Base+0x15d0>
   1ac40:	ldr	x5, [x4, #32]
   1ac44:	add	x4, x5, #0x1
   1ac48:	add	x5, x5, #0x2
   1ac4c:	b	1ac04 <set_program_name@@Base+0x157c>
   1ac50:	mov	x4, #0x1                   	// #1
   1ac54:	b	1abf8 <set_program_name@@Base+0x1570>
   1ac58:	mov	x5, #0x2                   	// #2
   1ac5c:	mov	x4, #0x1                   	// #1
   1ac60:	b	1ac04 <set_program_name@@Base+0x157c>
   1ac64:	stp	x29, x30, [sp, #-16]!
   1ac68:	mov	x29, sp
   1ac6c:	bl	a900 <abort@plt>
   1ac70:	stp	x29, x30, [sp, #-48]!
   1ac74:	mov	x29, sp
   1ac78:	stp	x19, x20, [sp, #16]
   1ac7c:	mov	x19, x1
   1ac80:	stp	x21, x22, [sp, #32]
   1ac84:	mov	x21, x0
   1ac88:	mov	x22, x2
   1ac8c:	mov	x0, #0x30                  	// #48
   1ac90:	bl	a5f0 <malloc@plt>
   1ac94:	mov	x20, x0
   1ac98:	cbz	x0, 1acec <set_program_name@@Base+0x1664>
   1ac9c:	ldr	x3, [x19, #8]
   1aca0:	stp	xzr, xzr, [x0]
   1aca4:	mov	x0, #0x1                   	// #1
   1aca8:	stp	x0, x22, [x20, #32]
   1acac:	cbz	x3, 1ad00 <set_program_name@@Base+0x1678>
   1acb0:	mov	x19, x3
   1acb4:	ldr	x3, [x3]
   1acb8:	cbnz	x3, 1acb0 <set_program_name@@Base+0x1628>
   1acbc:	str	x20, [x19]
   1acc0:	mov	x3, x19
   1acc4:	str	x19, [x20, #16]
   1acc8:	ldr	x4, [x3, #32]
   1accc:	add	x4, x4, #0x1
   1acd0:	str	x4, [x3, #32]
   1acd4:	ldr	x3, [x3, #16]
   1acd8:	cbnz	x3, 1acc8 <set_program_name@@Base+0x1640>
   1acdc:	mov	x2, x19
   1ace0:	mov	x0, x21
   1ace4:	mov	x1, x20
   1ace8:	bl	1a9c8 <set_program_name@@Base+0x1340>
   1acec:	mov	x0, x20
   1acf0:	ldp	x19, x20, [sp, #16]
   1acf4:	ldp	x21, x22, [sp, #32]
   1acf8:	ldp	x29, x30, [sp], #48
   1acfc:	ret
   1ad00:	str	x20, [x19, #8]
   1ad04:	b	1acc0 <set_program_name@@Base+0x1638>
   1ad08:	stp	x29, x30, [sp, #-48]!
   1ad0c:	mov	x29, sp
   1ad10:	stp	x19, x20, [sp, #16]
   1ad14:	mov	x19, x1
   1ad18:	stp	x21, x22, [sp, #32]
   1ad1c:	mov	x21, x0
   1ad20:	mov	x22, x2
   1ad24:	mov	x0, #0x30                  	// #48
   1ad28:	bl	a5f0 <malloc@plt>
   1ad2c:	mov	x20, x0
   1ad30:	cbz	x0, 1ad84 <set_program_name@@Base+0x16fc>
   1ad34:	ldr	x3, [x19]
   1ad38:	stp	xzr, xzr, [x0]
   1ad3c:	mov	x0, #0x1                   	// #1
   1ad40:	stp	x0, x22, [x20, #32]
   1ad44:	cbz	x3, 1ad98 <set_program_name@@Base+0x1710>
   1ad48:	mov	x19, x3
   1ad4c:	ldr	x3, [x3, #8]
   1ad50:	cbnz	x3, 1ad48 <set_program_name@@Base+0x16c0>
   1ad54:	str	x20, [x19, #8]
   1ad58:	mov	x3, x19
   1ad5c:	str	x19, [x20, #16]
   1ad60:	ldr	x4, [x3, #32]
   1ad64:	add	x4, x4, #0x1
   1ad68:	str	x4, [x3, #32]
   1ad6c:	ldr	x3, [x3, #16]
   1ad70:	cbnz	x3, 1ad60 <set_program_name@@Base+0x16d8>
   1ad74:	mov	x2, x19
   1ad78:	mov	x0, x21
   1ad7c:	mov	x1, x20
   1ad80:	bl	1a9c8 <set_program_name@@Base+0x1340>
   1ad84:	mov	x0, x20
   1ad88:	ldp	x19, x20, [sp, #16]
   1ad8c:	ldp	x21, x22, [sp, #32]
   1ad90:	ldp	x29, x30, [sp], #48
   1ad94:	ret
   1ad98:	str	x20, [x19]
   1ad9c:	b	1ad58 <set_program_name@@Base+0x16d0>
   1ada0:	stp	x29, x30, [sp, #-48]!
   1ada4:	mov	x29, sp
   1ada8:	stp	x19, x20, [sp, #16]
   1adac:	mov	x20, x0
   1adb0:	mov	x0, #0x30                  	// #48
   1adb4:	str	x21, [sp, #32]
   1adb8:	mov	x21, x1
   1adbc:	bl	a5f0 <malloc@plt>
   1adc0:	mov	x19, x0
   1adc4:	cbz	x0, 1ae18 <set_program_name@@Base+0x1790>
   1adc8:	ldr	x3, [x20, #40]
   1adcc:	stp	xzr, xzr, [x0]
   1add0:	mov	x0, #0x1                   	// #1
   1add4:	stp	x0, x21, [x19, #32]
   1add8:	cbz	x3, 1ae2c <set_program_name@@Base+0x17a4>
   1addc:	nop
   1ade0:	mov	x2, x3
   1ade4:	ldr	x3, [x3, #8]
   1ade8:	cbnz	x3, 1ade0 <set_program_name@@Base+0x1758>
   1adec:	mov	x3, x2
   1adf0:	str	x19, [x2, #8]
   1adf4:	str	x2, [x19, #16]
   1adf8:	ldr	x4, [x3, #32]
   1adfc:	add	x4, x4, #0x1
   1ae00:	str	x4, [x3, #32]
   1ae04:	ldr	x3, [x3, #16]
   1ae08:	cbnz	x3, 1adf8 <set_program_name@@Base+0x1770>
   1ae0c:	mov	x0, x20
   1ae10:	mov	x1, x19
   1ae14:	bl	1a9c8 <set_program_name@@Base+0x1340>
   1ae18:	mov	x0, x19
   1ae1c:	ldp	x19, x20, [sp, #16]
   1ae20:	ldr	x21, [sp, #32]
   1ae24:	ldp	x29, x30, [sp], #48
   1ae28:	ret
   1ae2c:	str	x19, [x20, #40]
   1ae30:	mov	x0, x19
   1ae34:	str	xzr, [x19, #16]
   1ae38:	str	wzr, [x19, #24]
   1ae3c:	ldp	x19, x20, [sp, #16]
   1ae40:	ldr	x21, [sp, #32]
   1ae44:	ldp	x29, x30, [sp], #48
   1ae48:	ret
   1ae4c:	nop
   1ae50:	stp	x29, x30, [sp, #-48]!
   1ae54:	mov	x29, sp
   1ae58:	stp	x19, x20, [sp, #16]
   1ae5c:	mov	x20, x0
   1ae60:	mov	x0, #0x30                  	// #48
   1ae64:	str	x21, [sp, #32]
   1ae68:	mov	x21, x1
   1ae6c:	bl	a5f0 <malloc@plt>
   1ae70:	mov	x19, x0
   1ae74:	cbz	x0, 1aec8 <set_program_name@@Base+0x1840>
   1ae78:	ldr	x3, [x20, #40]
   1ae7c:	stp	xzr, xzr, [x0]
   1ae80:	mov	x0, #0x1                   	// #1
   1ae84:	stp	x0, x21, [x19, #32]
   1ae88:	cbz	x3, 1aedc <set_program_name@@Base+0x1854>
   1ae8c:	nop
   1ae90:	mov	x2, x3
   1ae94:	ldr	x3, [x3]
   1ae98:	cbnz	x3, 1ae90 <set_program_name@@Base+0x1808>
   1ae9c:	mov	x3, x2
   1aea0:	str	x19, [x2]
   1aea4:	str	x2, [x19, #16]
   1aea8:	ldr	x4, [x3, #32]
   1aeac:	add	x4, x4, #0x1
   1aeb0:	str	x4, [x3, #32]
   1aeb4:	ldr	x3, [x3, #16]
   1aeb8:	cbnz	x3, 1aea8 <set_program_name@@Base+0x1820>
   1aebc:	mov	x0, x20
   1aec0:	mov	x1, x19
   1aec4:	bl	1a9c8 <set_program_name@@Base+0x1340>
   1aec8:	mov	x0, x19
   1aecc:	ldp	x19, x20, [sp, #16]
   1aed0:	ldr	x21, [sp, #32]
   1aed4:	ldp	x29, x30, [sp], #48
   1aed8:	ret
   1aedc:	str	x19, [x20, #40]
   1aee0:	mov	x0, x19
   1aee4:	str	xzr, [x19, #16]
   1aee8:	str	wzr, [x19, #24]
   1aeec:	ldp	x19, x20, [sp, #16]
   1aef0:	ldr	x21, [sp, #32]
   1aef4:	ldp	x29, x30, [sp], #48
   1aef8:	ret
   1aefc:	nop
   1af00:	stp	x29, x30, [sp, #-48]!
   1af04:	mov	x29, sp
   1af08:	stp	x19, x20, [sp, #16]
   1af0c:	ldr	x19, [x0, #40]
   1af10:	stp	x21, x22, [sp, #32]
   1af14:	mov	x21, x0
   1af18:	mov	x22, x2
   1af1c:	mov	x0, #0x0                   	// #0
   1af20:	cbz	x19, 1af28 <set_program_name@@Base+0x18a0>
   1af24:	ldr	x0, [x19, #32]
   1af28:	cmp	x0, x1
   1af2c:	b.cc	1b050 <set_program_name@@Base+0x19c8>  // b.lo, b.ul, b.last
   1af30:	b.eq	1afe8 <set_program_name@@Base+0x1960>  // b.none
   1af34:	nop
   1af38:	ldr	x3, [x19]
   1af3c:	cbz	x3, 1af50 <set_program_name@@Base+0x18c8>
   1af40:	ldr	x4, [x3, #32]
   1af44:	cmp	x4, x1
   1af48:	b.hi	1af60 <set_program_name@@Base+0x18d8>  // b.pmore
   1af4c:	sub	x1, x1, x4
   1af50:	cbz	x1, 1af68 <set_program_name@@Base+0x18e0>
   1af54:	sub	x1, x1, #0x1
   1af58:	ldr	x19, [x19, #8]
   1af5c:	b	1af38 <set_program_name@@Base+0x18b0>
   1af60:	mov	x19, x3
   1af64:	b	1af38 <set_program_name@@Base+0x18b0>
   1af68:	mov	x0, #0x30                  	// #48
   1af6c:	bl	a5f0 <malloc@plt>
   1af70:	mov	x20, x0
   1af74:	cbz	x0, 1b048 <set_program_name@@Base+0x19c0>
   1af78:	stp	xzr, xzr, [x0]
   1af7c:	mov	x0, #0x1                   	// #1
   1af80:	ldr	x2, [x19]
   1af84:	stp	x0, x22, [x20, #32]
   1af88:	cbz	x2, 1afe0 <set_program_name@@Base+0x1958>
   1af8c:	nop
   1af90:	mov	x19, x2
   1af94:	ldr	x2, [x2, #8]
   1af98:	cbnz	x2, 1af90 <set_program_name@@Base+0x1908>
   1af9c:	str	x20, [x19, #8]
   1afa0:	mov	x2, x19
   1afa4:	str	x19, [x20, #16]
   1afa8:	ldr	x3, [x2, #32]
   1afac:	add	x3, x3, #0x1
   1afb0:	str	x3, [x2, #32]
   1afb4:	ldr	x2, [x2, #16]
   1afb8:	cbnz	x2, 1afa8 <set_program_name@@Base+0x1920>
   1afbc:	mov	x2, x19
   1afc0:	mov	x0, x21
   1afc4:	mov	x1, x20
   1afc8:	bl	1a9c8 <set_program_name@@Base+0x1340>
   1afcc:	mov	x0, x20
   1afd0:	ldp	x19, x20, [sp, #16]
   1afd4:	ldp	x21, x22, [sp, #32]
   1afd8:	ldp	x29, x30, [sp], #48
   1afdc:	ret
   1afe0:	str	x20, [x19]
   1afe4:	b	1afa0 <set_program_name@@Base+0x1918>
   1afe8:	mov	x0, #0x30                  	// #48
   1afec:	bl	a5f0 <malloc@plt>
   1aff0:	mov	x20, x0
   1aff4:	cbz	x0, 1b048 <set_program_name@@Base+0x19c0>
   1aff8:	stp	xzr, xzr, [x0]
   1affc:	mov	x0, #0x1                   	// #1
   1b000:	stp	x0, x22, [x20, #32]
   1b004:	cbz	x19, 1b038 <set_program_name@@Base+0x19b0>
   1b008:	mov	x2, x19
   1b00c:	ldr	x19, [x19, #8]
   1b010:	cbnz	x19, 1b008 <set_program_name@@Base+0x1980>
   1b014:	mov	x1, x2
   1b018:	str	x20, [x2, #8]
   1b01c:	str	x2, [x20, #16]
   1b020:	ldr	x0, [x1, #32]
   1b024:	add	x0, x0, #0x1
   1b028:	str	x0, [x1, #32]
   1b02c:	ldr	x1, [x1, #16]
   1b030:	cbnz	x1, 1b020 <set_program_name@@Base+0x1998>
   1b034:	b	1afc0 <set_program_name@@Base+0x1938>
   1b038:	str	xzr, [x20, #16]
   1b03c:	str	wzr, [x20, #24]
   1b040:	str	x20, [x21, #40]
   1b044:	b	1afcc <set_program_name@@Base+0x1944>
   1b048:	mov	x20, #0x0                   	// #0
   1b04c:	b	1afcc <set_program_name@@Base+0x1944>
   1b050:	bl	a900 <abort@plt>
   1b054:	nop
   1b058:	stp	x29, x30, [sp, #-48]!
   1b05c:	mov	x29, sp
   1b060:	stp	x19, x20, [sp, #16]
   1b064:	mov	x20, x2
   1b068:	ldr	x19, [x0, #40]
   1b06c:	stp	x21, x22, [sp, #32]
   1b070:	mov	x22, x0
   1b074:	mov	x21, x1
   1b078:	cbz	x19, 1b1f0 <set_program_name@@Base+0x1b68>
   1b07c:	ldr	x0, [x19, #40]
   1b080:	mov	x1, x20
   1b084:	blr	x21
   1b088:	cmp	w0, #0x0
   1b08c:	b.lt	1b0b4 <set_program_name@@Base+0x1a2c>  // b.tstop
   1b090:	b.eq	1b188 <set_program_name@@Base+0x1b00>  // b.none
   1b094:	ldr	x3, [x19]
   1b098:	cbz	x3, 1b130 <set_program_name@@Base+0x1aa8>
   1b09c:	mov	x19, x3
   1b0a0:	mov	x1, x20
   1b0a4:	ldr	x0, [x19, #40]
   1b0a8:	blr	x21
   1b0ac:	cmp	w0, #0x0
   1b0b0:	b.ge	1b090 <set_program_name@@Base+0x1a08>  // b.tcont
   1b0b4:	ldr	x3, [x19, #8]
   1b0b8:	cbnz	x3, 1b09c <set_program_name@@Base+0x1a14>
   1b0bc:	mov	x0, #0x30                  	// #48
   1b0c0:	bl	a5f0 <malloc@plt>
   1b0c4:	mov	x21, x0
   1b0c8:	cbz	x0, 1b224 <set_program_name@@Base+0x1b9c>
   1b0cc:	stp	xzr, xzr, [x0]
   1b0d0:	mov	x0, #0x1                   	// #1
   1b0d4:	stp	x0, x20, [x21, #32]
   1b0d8:	ldr	x0, [x19, #8]
   1b0dc:	cbz	x0, 1b1e0 <set_program_name@@Base+0x1b58>
   1b0e0:	mov	x19, x0
   1b0e4:	ldr	x0, [x0]
   1b0e8:	cbnz	x0, 1b0e0 <set_program_name@@Base+0x1a58>
   1b0ec:	str	x21, [x19]
   1b0f0:	mov	x0, x19
   1b0f4:	str	x19, [x21, #16]
   1b0f8:	ldr	x1, [x0, #32]
   1b0fc:	add	x1, x1, #0x1
   1b100:	str	x1, [x0, #32]
   1b104:	ldr	x0, [x0, #16]
   1b108:	cbnz	x0, 1b0f8 <set_program_name@@Base+0x1a70>
   1b10c:	mov	x2, x19
   1b110:	mov	x0, x22
   1b114:	mov	x1, x21
   1b118:	bl	1a9c8 <set_program_name@@Base+0x1340>
   1b11c:	mov	x0, x21
   1b120:	ldp	x19, x20, [sp, #16]
   1b124:	ldp	x21, x22, [sp, #32]
   1b128:	ldp	x29, x30, [sp], #48
   1b12c:	ret
   1b130:	mov	x0, #0x30                  	// #48
   1b134:	bl	a5f0 <malloc@plt>
   1b138:	mov	x21, x0
   1b13c:	cbz	x0, 1b224 <set_program_name@@Base+0x1b9c>
   1b140:	stp	xzr, xzr, [x0]
   1b144:	mov	x0, #0x1                   	// #1
   1b148:	stp	x0, x20, [x21, #32]
   1b14c:	ldr	x0, [x19]
   1b150:	cbz	x0, 1b21c <set_program_name@@Base+0x1b94>
   1b154:	nop
   1b158:	mov	x19, x0
   1b15c:	ldr	x0, [x0, #8]
   1b160:	cbnz	x0, 1b158 <set_program_name@@Base+0x1ad0>
   1b164:	str	x21, [x19, #8]
   1b168:	mov	x2, x19
   1b16c:	str	x19, [x21, #16]
   1b170:	ldr	x0, [x2, #32]
   1b174:	add	x0, x0, #0x1
   1b178:	str	x0, [x2, #32]
   1b17c:	ldr	x2, [x2, #16]
   1b180:	cbnz	x2, 1b170 <set_program_name@@Base+0x1ae8>
   1b184:	b	1b10c <set_program_name@@Base+0x1a84>
   1b188:	mov	x0, #0x30                  	// #48
   1b18c:	bl	a5f0 <malloc@plt>
   1b190:	mov	x21, x0
   1b194:	cbz	x0, 1b224 <set_program_name@@Base+0x1b9c>
   1b198:	stp	xzr, xzr, [x0]
   1b19c:	mov	x0, #0x1                   	// #1
   1b1a0:	stp	x0, x20, [x21, #32]
   1b1a4:	ldr	x0, [x19]
   1b1a8:	cbz	x0, 1b1e8 <set_program_name@@Base+0x1b60>
   1b1ac:	nop
   1b1b0:	mov	x19, x0
   1b1b4:	ldr	x0, [x0, #8]
   1b1b8:	cbnz	x0, 1b1b0 <set_program_name@@Base+0x1b28>
   1b1bc:	str	x21, [x19, #8]
   1b1c0:	mov	x2, x19
   1b1c4:	str	x19, [x21, #16]
   1b1c8:	ldr	x3, [x2, #32]
   1b1cc:	add	x3, x3, #0x1
   1b1d0:	str	x3, [x2, #32]
   1b1d4:	ldr	x2, [x2, #16]
   1b1d8:	cbnz	x2, 1b1c8 <set_program_name@@Base+0x1b40>
   1b1dc:	b	1b10c <set_program_name@@Base+0x1a84>
   1b1e0:	str	x21, [x19, #8]
   1b1e4:	b	1b0f0 <set_program_name@@Base+0x1a68>
   1b1e8:	str	x21, [x19]
   1b1ec:	b	1b1c0 <set_program_name@@Base+0x1b38>
   1b1f0:	mov	x0, #0x30                  	// #48
   1b1f4:	bl	a5f0 <malloc@plt>
   1b1f8:	mov	x21, x0
   1b1fc:	cbz	x0, 1b11c <set_program_name@@Base+0x1a94>
   1b200:	mov	x0, #0x1                   	// #1
   1b204:	stp	xzr, xzr, [x21]
   1b208:	str	xzr, [x21, #16]
   1b20c:	str	wzr, [x21, #24]
   1b210:	stp	x0, x20, [x21, #32]
   1b214:	str	x21, [x22, #40]
   1b218:	b	1b11c <set_program_name@@Base+0x1a94>
   1b21c:	str	x21, [x19]
   1b220:	b	1b168 <set_program_name@@Base+0x1ae0>
   1b224:	mov	x21, #0x0                   	// #0
   1b228:	b	1b11c <set_program_name@@Base+0x1a94>
   1b22c:	nop
   1b230:	add	x0, x0, #0x28
   1b234:	mov	w8, #0x1                   	// #1
   1b238:	ldr	x4, [x2, #16]
   1b23c:	mov	x7, x0
   1b240:	cbz	x4, 1b264 <set_program_name@@Base+0x1bdc>
   1b244:	ldr	x3, [x4]
   1b248:	mov	x7, x4
   1b24c:	cmp	x3, x2
   1b250:	b.eq	1b264 <set_program_name@@Base+0x1bdc>  // b.none
   1b254:	ldr	x3, [x4, #8]
   1b258:	cmp	x3, x2
   1b25c:	b.ne	1b6e4 <set_program_name@@Base+0x205c>  // b.any
   1b260:	add	x7, x4, #0x8
   1b264:	ldp	x3, x5, [x2]
   1b268:	cmp	x3, x1
   1b26c:	b.eq	1b32c <set_program_name@@Base+0x1ca4>  // b.none
   1b270:	cmp	x5, x1
   1b274:	b.ne	1b6e4 <set_program_name@@Base+0x205c>  // b.any
   1b278:	ldr	w5, [x3, #24]
   1b27c:	cmp	w5, #0x1
   1b280:	ldp	x6, x5, [x3]
   1b284:	b.eq	1b2c8 <set_program_name@@Base+0x1c40>  // b.none
   1b288:	cbz	x6, 1b298 <set_program_name@@Base+0x1c10>
   1b28c:	ldr	w1, [x6, #24]
   1b290:	cmp	w1, #0x1
   1b294:	b.eq	1b404 <set_program_name@@Base+0x1d7c>  // b.none
   1b298:	cbz	x5, 1b2a8 <set_program_name@@Base+0x1c20>
   1b29c:	ldr	w1, [x5, #24]
   1b2a0:	cmp	w1, #0x1
   1b2a4:	b.eq	1b4d4 <set_program_name@@Base+0x1e4c>  // b.none
   1b2a8:	ldr	w1, [x2, #24]
   1b2ac:	cbnz	w1, 1b3ec <set_program_name@@Base+0x1d64>
   1b2b0:	str	w8, [x3, #24]
   1b2b4:	mov	x1, x2
   1b2b8:	ldr	x3, [x2, #16]
   1b2bc:	cbz	x3, 1b374 <set_program_name@@Base+0x1cec>
   1b2c0:	mov	x2, x3
   1b2c4:	b	1b238 <set_program_name@@Base+0x1bb0>
   1b2c8:	str	x5, [x2]
   1b2cc:	mov	x9, #0x1                   	// #1
   1b2d0:	stp	x2, x4, [x3, #8]
   1b2d4:	str	x3, [x2, #16]
   1b2d8:	cbz	x5, 1b2e8 <set_program_name@@Base+0x1c60>
   1b2dc:	ldr	x9, [x5, #32]
   1b2e0:	str	x2, [x5, #16]
   1b2e4:	add	x9, x9, #0x1
   1b2e8:	cbz	x1, 1b2f4 <set_program_name@@Base+0x1c6c>
   1b2ec:	ldr	x1, [x1, #32]
   1b2f0:	add	x9, x9, x1
   1b2f4:	str	x9, [x2, #32]
   1b2f8:	mov	x1, #0x1                   	// #1
   1b2fc:	cbz	x6, 1b308 <set_program_name@@Base+0x1c80>
   1b300:	ldr	x1, [x6, #32]
   1b304:	add	x1, x1, #0x1
   1b308:	add	x9, x1, x9
   1b30c:	str	x9, [x3, #32]
   1b310:	str	x3, [x7]
   1b314:	add	x7, x3, #0x8
   1b318:	str	w8, [x2, #24]
   1b31c:	str	wzr, [x3, #24]
   1b320:	ldr	x3, [x2]
   1b324:	ldp	x6, x5, [x3]
   1b328:	b	1b288 <set_program_name@@Base+0x1c00>
   1b32c:	ldr	w6, [x5, #24]
   1b330:	cmp	w6, #0x1
   1b334:	ldp	x3, x6, [x5]
   1b338:	b.eq	1b378 <set_program_name@@Base+0x1cf0>  // b.none
   1b33c:	cbz	x6, 1b34c <set_program_name@@Base+0x1cc4>
   1b340:	ldr	w1, [x6, #24]
   1b344:	cmp	w1, #0x1
   1b348:	b.eq	1b470 <set_program_name@@Base+0x1de8>  // b.none
   1b34c:	cbz	x3, 1b35c <set_program_name@@Base+0x1cd4>
   1b350:	ldr	w1, [x3, #24]
   1b354:	cmp	w1, #0x1
   1b358:	b.eq	1b5ac <set_program_name@@Base+0x1f24>  // b.none
   1b35c:	ldr	w1, [x2, #24]
   1b360:	cbnz	w1, 1b59c <set_program_name@@Base+0x1f14>
   1b364:	ldr	x3, [x2, #16]
   1b368:	str	w8, [x5, #24]
   1b36c:	mov	x1, x2
   1b370:	cbnz	x3, 1b2c0 <set_program_name@@Base+0x1c38>
   1b374:	ret
   1b378:	str	x3, [x2, #8]
   1b37c:	str	x2, [x5]
   1b380:	str	x4, [x5, #16]
   1b384:	str	x5, [x2, #16]
   1b388:	cbz	x3, 1b3d8 <set_program_name@@Base+0x1d50>
   1b38c:	str	x2, [x3, #16]
   1b390:	cbz	x1, 1b3fc <set_program_name@@Base+0x1d74>
   1b394:	ldr	x1, [x1, #32]
   1b398:	add	x1, x1, #0x1
   1b39c:	ldr	x3, [x3, #32]
   1b3a0:	add	x1, x1, x3
   1b3a4:	add	x3, x1, #0x1
   1b3a8:	str	x1, [x2, #32]
   1b3ac:	cbz	x6, 1b3b8 <set_program_name@@Base+0x1d30>
   1b3b0:	ldr	x1, [x6, #32]
   1b3b4:	add	x3, x3, x1
   1b3b8:	str	x3, [x5, #32]
   1b3bc:	str	x5, [x7]
   1b3c0:	mov	x7, x5
   1b3c4:	str	w8, [x2, #24]
   1b3c8:	str	wzr, [x5, #24]
   1b3cc:	ldr	x5, [x2, #8]
   1b3d0:	ldp	x3, x6, [x5]
   1b3d4:	b	1b33c <set_program_name@@Base+0x1cb4>
   1b3d8:	cbz	x1, 1b464 <set_program_name@@Base+0x1ddc>
   1b3dc:	ldr	x3, [x1, #32]
   1b3e0:	add	x1, x3, #0x1
   1b3e4:	add	x3, x3, #0x2
   1b3e8:	b	1b3a8 <set_program_name@@Base+0x1d20>
   1b3ec:	str	wzr, [x2, #24]
   1b3f0:	mov	w0, #0x1                   	// #1
   1b3f4:	str	w0, [x3, #24]
   1b3f8:	ret
   1b3fc:	mov	x1, #0x1                   	// #1
   1b400:	b	1b39c <set_program_name@@Base+0x1d14>
   1b404:	str	x5, [x2]
   1b408:	mov	x0, #0x1                   	// #1
   1b40c:	ldp	x1, x4, [x2, #8]
   1b410:	stp	x2, x4, [x3, #8]
   1b414:	str	x3, [x2, #16]
   1b418:	cbz	x5, 1b428 <set_program_name@@Base+0x1da0>
   1b41c:	ldr	x0, [x5, #32]
   1b420:	str	x2, [x5, #16]
   1b424:	add	x0, x0, #0x1
   1b428:	cbz	x1, 1b434 <set_program_name@@Base+0x1dac>
   1b42c:	ldr	x1, [x1, #32]
   1b430:	add	x0, x0, x1
   1b434:	str	x0, [x2, #32]
   1b438:	ldr	w4, [x2, #24]
   1b43c:	ldr	x1, [x6, #32]
   1b440:	add	x1, x1, #0x1
   1b444:	add	x0, x1, x0
   1b448:	str	x0, [x3, #32]
   1b44c:	str	x3, [x7]
   1b450:	str	w4, [x3, #24]
   1b454:	ldr	x0, [x3]
   1b458:	str	wzr, [x2, #24]
   1b45c:	str	wzr, [x0, #24]
   1b460:	ret
   1b464:	mov	x3, #0x2                   	// #2
   1b468:	mov	x1, #0x1                   	// #1
   1b46c:	b	1b3a8 <set_program_name@@Base+0x1d20>
   1b470:	str	x3, [x2, #8]
   1b474:	ldr	x1, [x2, #16]
   1b478:	ldr	x0, [x2]
   1b47c:	str	x2, [x5]
   1b480:	str	x1, [x5, #16]
   1b484:	str	x5, [x2, #16]
   1b488:	cbz	x3, 1b67c <set_program_name@@Base+0x1ff4>
   1b48c:	str	x2, [x3, #16]
   1b490:	cbz	x0, 1b6d0 <set_program_name@@Base+0x2048>
   1b494:	ldr	x0, [x0, #32]
   1b498:	add	x0, x0, #0x1
   1b49c:	ldr	x1, [x3, #32]
   1b4a0:	add	x1, x0, x1
   1b4a4:	str	x1, [x2, #32]
   1b4a8:	ldr	w3, [x2, #24]
   1b4ac:	ldr	x0, [x6, #32]
   1b4b0:	add	x0, x0, #0x1
   1b4b4:	add	x0, x0, x1
   1b4b8:	str	x0, [x5, #32]
   1b4bc:	str	x5, [x7]
   1b4c0:	str	w3, [x5, #24]
   1b4c4:	ldr	x0, [x5, #8]
   1b4c8:	str	wzr, [x2, #24]
   1b4cc:	str	wzr, [x0, #24]
   1b4d0:	ret
   1b4d4:	ldp	x1, x4, [x5]
   1b4d8:	str	x1, [x3, #8]
   1b4dc:	ldr	x0, [x3, #16]
   1b4e0:	str	x3, [x5]
   1b4e4:	str	x0, [x5, #16]
   1b4e8:	str	x5, [x3, #16]
   1b4ec:	cbz	x1, 1b6a4 <set_program_name@@Base+0x201c>
   1b4f0:	str	x3, [x1, #16]
   1b4f4:	cbz	x6, 1b6c0 <set_program_name@@Base+0x2038>
   1b4f8:	ldr	x0, [x6, #32]
   1b4fc:	add	x0, x0, #0x1
   1b500:	ldr	x1, [x1, #32]
   1b504:	add	x0, x0, x1
   1b508:	add	x1, x0, #0x1
   1b50c:	str	x0, [x3, #32]
   1b510:	cbz	x4, 1b51c <set_program_name@@Base+0x1e94>
   1b514:	ldr	x0, [x4, #32]
   1b518:	add	x1, x1, x0
   1b51c:	ldp	x4, x6, [x2, #8]
   1b520:	str	x1, [x5, #32]
   1b524:	str	x5, [x2]
   1b528:	mov	w1, #0x1                   	// #1
   1b52c:	str	w1, [x3, #24]
   1b530:	mov	x0, #0x1                   	// #1
   1b534:	ldp	x3, x1, [x5]
   1b538:	str	wzr, [x5, #24]
   1b53c:	str	x1, [x2]
   1b540:	stp	x2, x6, [x5, #8]
   1b544:	str	x5, [x2, #16]
   1b548:	cbz	x1, 1b558 <set_program_name@@Base+0x1ed0>
   1b54c:	ldr	x0, [x1, #32]
   1b550:	str	x2, [x1, #16]
   1b554:	add	x0, x0, #0x1
   1b558:	cbz	x4, 1b564 <set_program_name@@Base+0x1edc>
   1b55c:	ldr	x1, [x4, #32]
   1b560:	add	x0, x0, x1
   1b564:	str	x0, [x2, #32]
   1b568:	mov	x1, #0x1                   	// #1
   1b56c:	cbz	x3, 1b578 <set_program_name@@Base+0x1ef0>
   1b570:	ldr	x1, [x3, #32]
   1b574:	add	x1, x1, #0x1
   1b578:	add	x0, x1, x0
   1b57c:	ldr	w1, [x2, #24]
   1b580:	str	x0, [x5, #32]
   1b584:	str	x5, [x7]
   1b588:	str	w1, [x5, #24]
   1b58c:	ldr	x0, [x5]
   1b590:	str	wzr, [x2, #24]
   1b594:	str	wzr, [x0, #24]
   1b598:	ret
   1b59c:	str	wzr, [x2, #24]
   1b5a0:	mov	w0, #0x1                   	// #1
   1b5a4:	str	w0, [x5, #24]
   1b5a8:	ret
   1b5ac:	ldp	x8, x4, [x3]
   1b5b0:	str	x4, [x5]
   1b5b4:	ldr	x0, [x5, #16]
   1b5b8:	stp	x5, x0, [x3, #8]
   1b5bc:	mov	x1, #0x1                   	// #1
   1b5c0:	str	x3, [x5, #16]
   1b5c4:	cbz	x4, 1b5d4 <set_program_name@@Base+0x1f4c>
   1b5c8:	ldr	x0, [x4, #32]
   1b5cc:	str	x5, [x4, #16]
   1b5d0:	add	x1, x0, x1
   1b5d4:	cbz	x6, 1b5e0 <set_program_name@@Base+0x1f58>
   1b5d8:	ldr	x0, [x6, #32]
   1b5dc:	add	x1, x1, x0
   1b5e0:	str	x1, [x5, #32]
   1b5e4:	mov	x0, #0x1                   	// #1
   1b5e8:	cbz	x8, 1b5f4 <set_program_name@@Base+0x1f6c>
   1b5ec:	ldr	x0, [x8, #32]
   1b5f0:	add	x0, x0, #0x1
   1b5f4:	add	x0, x0, x1
   1b5f8:	str	x0, [x3, #32]
   1b5fc:	ldr	x1, [x3]
   1b600:	str	x3, [x2, #8]
   1b604:	mov	w0, #0x1                   	// #1
   1b608:	ldr	x4, [x3, #8]
   1b60c:	str	w0, [x5, #24]
   1b610:	ldr	x0, [x2]
   1b614:	ldr	x5, [x2, #16]
   1b618:	str	wzr, [x3, #24]
   1b61c:	str	x1, [x2, #8]
   1b620:	str	x2, [x3]
   1b624:	str	x5, [x3, #16]
   1b628:	str	x3, [x2, #16]
   1b62c:	cbz	x1, 1b690 <set_program_name@@Base+0x2008>
   1b630:	str	x2, [x1, #16]
   1b634:	cbz	x0, 1b6c8 <set_program_name@@Base+0x2040>
   1b638:	ldr	x0, [x0, #32]
   1b63c:	add	x0, x0, #0x1
   1b640:	ldr	x1, [x1, #32]
   1b644:	add	x0, x0, x1
   1b648:	add	x1, x0, #0x1
   1b64c:	str	x0, [x2, #32]
   1b650:	cbz	x4, 1b65c <set_program_name@@Base+0x1fd4>
   1b654:	ldr	x0, [x4, #32]
   1b658:	add	x1, x1, x0
   1b65c:	str	x1, [x3, #32]
   1b660:	ldr	w1, [x2, #24]
   1b664:	str	x3, [x7]
   1b668:	str	w1, [x3, #24]
   1b66c:	ldr	x0, [x3, #8]
   1b670:	str	wzr, [x2, #24]
   1b674:	str	wzr, [x0, #24]
   1b678:	ret
   1b67c:	mov	x1, #0x1                   	// #1
   1b680:	cbz	x0, 1b4a4 <set_program_name@@Base+0x1e1c>
   1b684:	ldr	x0, [x0, #32]
   1b688:	add	x1, x0, #0x1
   1b68c:	b	1b4a4 <set_program_name@@Base+0x1e1c>
   1b690:	cbz	x0, 1b6d8 <set_program_name@@Base+0x2050>
   1b694:	ldr	x1, [x0, #32]
   1b698:	add	x0, x1, #0x1
   1b69c:	add	x1, x1, #0x2
   1b6a0:	b	1b64c <set_program_name@@Base+0x1fc4>
   1b6a4:	mov	x1, #0x2                   	// #2
   1b6a8:	mov	x0, #0x1                   	// #1
   1b6ac:	cbz	x6, 1b50c <set_program_name@@Base+0x1e84>
   1b6b0:	ldr	x1, [x6, #32]
   1b6b4:	add	x0, x1, #0x1
   1b6b8:	add	x1, x1, #0x2
   1b6bc:	b	1b50c <set_program_name@@Base+0x1e84>
   1b6c0:	mov	x0, #0x1                   	// #1
   1b6c4:	b	1b500 <set_program_name@@Base+0x1e78>
   1b6c8:	mov	x0, #0x1                   	// #1
   1b6cc:	b	1b640 <set_program_name@@Base+0x1fb8>
   1b6d0:	mov	x0, #0x1                   	// #1
   1b6d4:	b	1b49c <set_program_name@@Base+0x1e14>
   1b6d8:	mov	x1, #0x2                   	// #2
   1b6dc:	mov	x0, #0x1                   	// #1
   1b6e0:	b	1b64c <set_program_name@@Base+0x1fc4>
   1b6e4:	stp	x29, x30, [sp, #-16]!
   1b6e8:	mov	x29, sp
   1b6ec:	bl	a900 <abort@plt>
   1b6f0:	stp	x29, x30, [sp, #-32]!
   1b6f4:	mov	x29, sp
   1b6f8:	stp	x19, x20, [sp, #16]
   1b6fc:	mov	x20, x0
   1b700:	mov	x19, x1
   1b704:	ldp	x5, x0, [x1]
   1b708:	ldr	x3, [x1, #16]
   1b70c:	cbz	x5, 1b828 <set_program_name@@Base+0x21a0>
   1b710:	mov	x1, x5
   1b714:	cbz	x0, 1b7f0 <set_program_name@@Base+0x2168>
   1b718:	mov	x2, x1
   1b71c:	ldr	x1, [x1, #8]
   1b720:	cbnz	x1, 1b718 <set_program_name@@Base+0x2090>
   1b724:	ldr	x7, [x2, #16]
   1b728:	ldr	w8, [x2, #24]
   1b72c:	cmp	x19, x7
   1b730:	ldr	x1, [x2]
   1b734:	b.eq	1b748 <set_program_name@@Base+0x20c0>  // b.none
   1b738:	cbz	x1, 1b740 <set_program_name@@Base+0x20b8>
   1b73c:	str	x7, [x1, #16]
   1b740:	str	x1, [x7, #8]
   1b744:	ldr	x0, [x19, #8]
   1b748:	mov	x4, x7
   1b74c:	nop
   1b750:	ldr	x6, [x4, #32]
   1b754:	sub	x6, x6, #0x1
   1b758:	str	x6, [x4, #32]
   1b75c:	ldr	x4, [x4, #16]
   1b760:	cbnz	x4, 1b750 <set_program_name@@Base+0x20c8>
   1b764:	cmp	x19, x7
   1b768:	b.eq	1b774 <set_program_name@@Base+0x20ec>  // b.none
   1b76c:	str	x5, [x2]
   1b770:	str	x2, [x5, #16]
   1b774:	ldr	w4, [x19, #24]
   1b778:	str	x0, [x2, #8]
   1b77c:	str	x2, [x0, #16]
   1b780:	ldr	x0, [x19, #32]
   1b784:	str	x3, [x2, #16]
   1b788:	str	w4, [x2, #24]
   1b78c:	str	x0, [x2, #32]
   1b790:	cbz	x3, 1b890 <set_program_name@@Base+0x2208>
   1b794:	ldr	x0, [x3]
   1b798:	cmp	x19, x0
   1b79c:	b.eq	1b898 <set_program_name@@Base+0x2210>  // b.none
   1b7a0:	str	x2, [x3, #8]
   1b7a4:	cbnz	w8, 1b7c8 <set_program_name@@Base+0x2140>
   1b7a8:	cbz	x1, 1b7b8 <set_program_name@@Base+0x2130>
   1b7ac:	ldr	w0, [x1, #24]
   1b7b0:	cmp	w0, #0x1
   1b7b4:	b.eq	1b8a8 <set_program_name@@Base+0x2220>  // b.none
   1b7b8:	cmp	x19, x7
   1b7bc:	mov	x0, x20
   1b7c0:	csel	x2, x7, x2, ne  // ne = any
   1b7c4:	bl	1b230 <set_program_name@@Base+0x1ba8>
   1b7c8:	ldr	x1, [x20, #24]
   1b7cc:	cbz	x1, 1b7d8 <set_program_name@@Base+0x2150>
   1b7d0:	ldr	x0, [x19, #40]
   1b7d4:	blr	x1
   1b7d8:	mov	x0, x19
   1b7dc:	bl	aa50 <free@plt>
   1b7e0:	mov	w0, #0x1                   	// #1
   1b7e4:	ldp	x19, x20, [sp, #16]
   1b7e8:	ldp	x29, x30, [sp], #32
   1b7ec:	ret
   1b7f0:	str	x3, [x5, #16]
   1b7f4:	str	wzr, [x5, #24]
   1b7f8:	cbz	x3, 1b880 <set_program_name@@Base+0x21f8>
   1b7fc:	ldr	x0, [x3]
   1b800:	cmp	x19, x0
   1b804:	b.eq	1b8b0 <set_program_name@@Base+0x2228>  // b.none
   1b808:	str	x5, [x3, #8]
   1b80c:	nop
   1b810:	ldr	x0, [x3, #32]
   1b814:	sub	x0, x0, #0x1
   1b818:	str	x0, [x3, #32]
   1b81c:	ldr	x3, [x3, #16]
   1b820:	cbnz	x3, 1b810 <set_program_name@@Base+0x2188>
   1b824:	b	1b7c8 <set_program_name@@Base+0x2140>
   1b828:	cbz	x0, 1b834 <set_program_name@@Base+0x21ac>
   1b82c:	str	x3, [x0, #16]
   1b830:	str	wzr, [x0, #24]
   1b834:	cbz	x3, 1b8a0 <set_program_name@@Base+0x2218>
   1b838:	ldr	x1, [x3]
   1b83c:	cmp	x19, x1
   1b840:	b.eq	1b888 <set_program_name@@Base+0x2200>  // b.none
   1b844:	str	x0, [x3, #8]
   1b848:	mov	x1, x3
   1b84c:	nop
   1b850:	ldr	x2, [x1, #32]
   1b854:	sub	x2, x2, #0x1
   1b858:	str	x2, [x1, #32]
   1b85c:	ldr	x1, [x1, #16]
   1b860:	cbnz	x1, 1b850 <set_program_name@@Base+0x21c8>
   1b864:	cbnz	x0, 1b7c8 <set_program_name@@Base+0x2140>
   1b868:	ldr	w0, [x19, #24]
   1b86c:	cbnz	w0, 1b7c8 <set_program_name@@Base+0x2140>
   1b870:	mov	x2, x3
   1b874:	mov	x0, x20
   1b878:	bl	1b230 <set_program_name@@Base+0x1ba8>
   1b87c:	b	1b7c8 <set_program_name@@Base+0x2140>
   1b880:	str	x5, [x20, #40]
   1b884:	b	1b7c8 <set_program_name@@Base+0x2140>
   1b888:	str	x0, [x3]
   1b88c:	b	1b848 <set_program_name@@Base+0x21c0>
   1b890:	str	x2, [x20, #40]
   1b894:	b	1b7a4 <set_program_name@@Base+0x211c>
   1b898:	str	x2, [x3]
   1b89c:	b	1b7a4 <set_program_name@@Base+0x211c>
   1b8a0:	str	x0, [x20, #40]
   1b8a4:	b	1b7c8 <set_program_name@@Base+0x2140>
   1b8a8:	str	wzr, [x1, #24]
   1b8ac:	b	1b7c8 <set_program_name@@Base+0x2140>
   1b8b0:	str	x5, [x3]
   1b8b4:	b	1b810 <set_program_name@@Base+0x2188>
   1b8b8:	stp	x29, x30, [sp, #-64]!
   1b8bc:	mov	x29, sp
   1b8c0:	stp	x19, x20, [sp, #16]
   1b8c4:	ldr	x19, [x0, #40]
   1b8c8:	cbz	x19, 1b90c <set_program_name@@Base+0x2284>
   1b8cc:	stp	x21, x22, [sp, #32]
   1b8d0:	mov	x21, x1
   1b8d4:	mov	x22, x2
   1b8d8:	str	x23, [sp, #48]
   1b8dc:	mov	x23, x0
   1b8e0:	ldr	x0, [x19, #40]
   1b8e4:	mov	x1, x22
   1b8e8:	blr	x21
   1b8ec:	cmp	w0, #0x0
   1b8f0:	b.lt	1b964 <set_program_name@@Base+0x22dc>  // b.tstop
   1b8f4:	ldr	x20, [x19]
   1b8f8:	b.eq	1b920 <set_program_name@@Base+0x2298>  // b.none
   1b8fc:	mov	x19, x20
   1b900:	cbnz	x19, 1b8e0 <set_program_name@@Base+0x2258>
   1b904:	ldp	x21, x22, [sp, #32]
   1b908:	ldr	x23, [sp, #48]
   1b90c:	mov	w0, #0x0                   	// #0
   1b910:	ldp	x19, x20, [sp, #16]
   1b914:	ldp	x29, x30, [sp], #64
   1b918:	ret
   1b91c:	ldr	x20, [x20, #8]
   1b920:	cbz	x20, 1b948 <set_program_name@@Base+0x22c0>
   1b924:	ldr	x0, [x20, #40]
   1b928:	mov	x1, x22
   1b92c:	blr	x21
   1b930:	cmp	w0, #0x0
   1b934:	b.lt	1b91c <set_program_name@@Base+0x2294>  // b.tstop
   1b938:	b.ne	1b970 <set_program_name@@Base+0x22e8>  // b.any
   1b93c:	mov	x19, x20
   1b940:	ldr	x20, [x20]
   1b944:	cbnz	x20, 1b924 <set_program_name@@Base+0x229c>
   1b948:	mov	x1, x19
   1b94c:	mov	x0, x23
   1b950:	ldp	x19, x20, [sp, #16]
   1b954:	ldp	x21, x22, [sp, #32]
   1b958:	ldr	x23, [sp, #48]
   1b95c:	ldp	x29, x30, [sp], #64
   1b960:	b	1b6f0 <set_program_name@@Base+0x2068>
   1b964:	ldr	x19, [x19, #8]
   1b968:	cbnz	x19, 1b8e0 <set_program_name@@Base+0x2258>
   1b96c:	b	1b904 <set_program_name@@Base+0x227c>
   1b970:	bl	a900 <abort@plt>
   1b974:	nop
   1b978:	mov	x3, x1
   1b97c:	ldr	x1, [x0, #40]
   1b980:	cbz	x1, 1b9b4 <set_program_name@@Base+0x232c>
   1b984:	stp	x29, x30, [sp, #-32]!
   1b988:	mov	x29, sp
   1b98c:	ldr	x2, [x1, #32]
   1b990:	mov	x1, #0x0                   	// #0
   1b994:	str	x19, [sp, #16]
   1b998:	mov	x19, x0
   1b99c:	bl	1a050 <set_program_name@@Base+0x9c8>
   1b9a0:	cbnz	x0, 1b9bc <set_program_name@@Base+0x2334>
   1b9a4:	mov	w0, #0x0                   	// #0
   1b9a8:	ldr	x19, [sp, #16]
   1b9ac:	ldp	x29, x30, [sp], #32
   1b9b0:	ret
   1b9b4:	mov	w0, #0x0                   	// #0
   1b9b8:	ret
   1b9bc:	mov	x1, x0
   1b9c0:	mov	x0, x19
   1b9c4:	ldr	x19, [sp, #16]
   1b9c8:	ldp	x29, x30, [sp], #32
   1b9cc:	b	1b6f0 <set_program_name@@Base+0x2068>
   1b9d0:	mov	x2, x1
   1b9d4:	ldr	x1, [x0, #40]
   1b9d8:	cbz	x1, 1ba1c <set_program_name@@Base+0x2394>
   1b9dc:	ldr	x3, [x1, #32]
   1b9e0:	cmp	x3, x2
   1b9e4:	b.ls	1ba1c <set_program_name@@Base+0x2394>  // b.plast
   1b9e8:	ldr	x3, [x1]
   1b9ec:	cbz	x3, 1ba00 <set_program_name@@Base+0x2378>
   1b9f0:	ldr	x4, [x3, #32]
   1b9f4:	cmp	x4, x2
   1b9f8:	b.hi	1ba10 <set_program_name@@Base+0x2388>  // b.pmore
   1b9fc:	sub	x2, x2, x4
   1ba00:	cbz	x2, 1ba18 <set_program_name@@Base+0x2390>
   1ba04:	sub	x2, x2, #0x1
   1ba08:	ldr	x1, [x1, #8]
   1ba0c:	b	1b9e8 <set_program_name@@Base+0x2360>
   1ba10:	mov	x1, x3
   1ba14:	b	1b9e8 <set_program_name@@Base+0x2360>
   1ba18:	b	1b6f0 <set_program_name@@Base+0x2068>
   1ba1c:	stp	x29, x30, [sp, #-16]!
   1ba20:	mov	x29, sp
   1ba24:	bl	a900 <abort@plt>

000000000001ba28 <gl_rbtree_list_check_invariants@@Base>:
   1ba28:	stp	x29, x30, [sp, #-48]!
   1ba2c:	mov	x29, sp
   1ba30:	stp	x19, x20, [sp, #16]
   1ba34:	ldr	x19, [x0, #40]
   1ba38:	cbz	x19, 1bab8 <gl_rbtree_list_check_invariants@@Base+0x90>
   1ba3c:	stp	x21, x22, [sp, #32]
   1ba40:	mov	w22, #0x0                   	// #0
   1ba44:	ldr	x21, [x19]
   1ba48:	cbz	x21, 1ba5c <gl_rbtree_list_check_invariants@@Base+0x34>
   1ba4c:	mov	x1, x19
   1ba50:	mov	x0, x21
   1ba54:	bl	19840 <set_program_name@@Base+0x1b8>
   1ba58:	mov	w22, w0
   1ba5c:	ldr	x20, [x19, #8]
   1ba60:	mov	w0, #0x0                   	// #0
   1ba64:	cbz	x20, 1ba74 <gl_rbtree_list_check_invariants@@Base+0x4c>
   1ba68:	mov	x1, x19
   1ba6c:	mov	x0, x20
   1ba70:	bl	19840 <set_program_name@@Base+0x1b8>
   1ba74:	ldr	x1, [x19, #16]
   1ba78:	cbnz	x1, 1bac4 <gl_rbtree_list_check_invariants@@Base+0x9c>
   1ba7c:	mov	x1, #0x1                   	// #1
   1ba80:	ldr	x2, [x19, #32]
   1ba84:	cbz	x21, 1ba90 <gl_rbtree_list_check_invariants@@Base+0x68>
   1ba88:	ldr	x1, [x21, #32]
   1ba8c:	add	x1, x1, #0x1
   1ba90:	cbz	x20, 1ba9c <gl_rbtree_list_check_invariants@@Base+0x74>
   1ba94:	ldr	x3, [x20, #32]
   1ba98:	add	x1, x1, x3
   1ba9c:	cmp	x2, x1
   1baa0:	b.ne	1bac4 <gl_rbtree_list_check_invariants@@Base+0x9c>  // b.any
   1baa4:	ldr	w1, [x19, #24]
   1baa8:	cbnz	w1, 1bac4 <gl_rbtree_list_check_invariants@@Base+0x9c>
   1baac:	cmp	w22, w0
   1bab0:	b.ne	1bac4 <gl_rbtree_list_check_invariants@@Base+0x9c>  // b.any
   1bab4:	ldp	x21, x22, [sp, #32]
   1bab8:	ldp	x19, x20, [sp, #16]
   1babc:	ldp	x29, x30, [sp], #48
   1bac0:	ret
   1bac4:	bl	a900 <abort@plt>

000000000001bac8 <renameatu@@Base>:
   1bac8:	stp	x29, x30, [sp, #-336]!
   1bacc:	mov	x29, sp
   1bad0:	stp	x19, x20, [sp, #16]
   1bad4:	mov	x20, x3
   1bad8:	stp	x21, x22, [sp, #32]
   1badc:	mov	x21, x1
   1bae0:	stp	x23, x24, [sp, #48]
   1bae4:	mov	w24, w2
   1bae8:	stp	x25, x26, [sp, #64]
   1baec:	mov	w25, w0
   1baf0:	mov	w26, w4
   1baf4:	bl	aa60 <renameat2@plt>
   1baf8:	mov	w19, w0
   1bafc:	tbz	w0, #31, 1bb3c <renameatu@@Base+0x74>
   1bb00:	bl	aeb0 <__errno_location@plt>
   1bb04:	mov	x22, x0
   1bb08:	ldr	w0, [x0]
   1bb0c:	sub	w1, w0, #0x16
   1bb10:	tst	w1, #0xffffffef
   1bb14:	cset	w23, ne  // ne = any
   1bb18:	cmp	w0, #0x5f
   1bb1c:	csel	w23, w23, wzr, ne  // ne = any
   1bb20:	cbnz	w23, 1bb3c <renameatu@@Base+0x74>
   1bb24:	cbz	w26, 1bb90 <renameatu@@Base+0xc8>
   1bb28:	tst	w26, #0xfffffffe
   1bb2c:	b.eq	1bb58 <renameatu@@Base+0x90>  // b.none
   1bb30:	mov	w0, #0x5f                  	// #95
   1bb34:	mov	w19, #0xffffffff            	// #-1
   1bb38:	str	w0, [x22]
   1bb3c:	mov	w0, w19
   1bb40:	ldp	x19, x20, [sp, #16]
   1bb44:	ldp	x21, x22, [sp, #32]
   1bb48:	ldp	x23, x24, [sp, #48]
   1bb4c:	ldp	x25, x26, [sp, #64]
   1bb50:	ldp	x29, x30, [sp], #336
   1bb54:	ret
   1bb58:	add	x3, sp, #0xd0
   1bb5c:	mov	x2, x20
   1bb60:	mov	w1, w24
   1bb64:	mov	w4, #0x100                 	// #256
   1bb68:	mov	w0, #0x0                   	// #0
   1bb6c:	bl	afe0 <__fxstatat@plt>
   1bb70:	cbz	w0, 1bc80 <renameatu@@Base+0x1b8>
   1bb74:	ldr	w0, [x22]
   1bb78:	cmp	w0, #0x4b
   1bb7c:	b.eq	1bc80 <renameatu@@Base+0x1b8>  // b.none
   1bb80:	cmp	w0, #0x2
   1bb84:	b.ne	1bc78 <renameatu@@Base+0x1b0>  // b.any
   1bb88:	mov	w23, #0x1                   	// #1
   1bb8c:	nop
   1bb90:	mov	x0, x21
   1bb94:	bl	a340 <strlen@plt>
   1bb98:	mov	x19, x0
   1bb9c:	mov	x0, x20
   1bba0:	bl	a340 <strlen@plt>
   1bba4:	cmp	x19, #0x0
   1bba8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   1bbac:	b.eq	1bc44 <renameatu@@Base+0x17c>  // b.none
   1bbb0:	add	x19, x21, x19
   1bbb4:	add	x0, x20, x0
   1bbb8:	mov	w1, #0x2f                  	// #47
   1bbbc:	ldurb	w2, [x19, #-1]
   1bbc0:	ldurb	w0, [x0, #-1]
   1bbc4:	cmp	w2, w1
   1bbc8:	ccmp	w0, w1, #0x4, ne  // ne = any
   1bbcc:	b.ne	1bc44 <renameatu@@Base+0x17c>  // b.any
   1bbd0:	add	x3, sp, #0x50
   1bbd4:	mov	x2, x21
   1bbd8:	mov	w1, w25
   1bbdc:	mov	w4, #0x100                 	// #256
   1bbe0:	mov	w0, #0x0                   	// #0
   1bbe4:	bl	afe0 <__fxstatat@plt>
   1bbe8:	cbnz	w0, 1bc78 <renameatu@@Base+0x1b0>
   1bbec:	cbz	w23, 1bc10 <renameatu@@Base+0x148>
   1bbf0:	ldr	w0, [sp, #96]
   1bbf4:	and	w0, w0, #0xf000
   1bbf8:	cmp	w0, #0x4, lsl #12
   1bbfc:	b.eq	1bc44 <renameatu@@Base+0x17c>  // b.none
   1bc00:	mov	w0, #0x2                   	// #2
   1bc04:	mov	w19, #0xffffffff            	// #-1
   1bc08:	str	w0, [x22]
   1bc0c:	b	1bb3c <renameatu@@Base+0x74>
   1bc10:	add	x3, sp, #0xd0
   1bc14:	mov	x2, x20
   1bc18:	mov	w1, w24
   1bc1c:	mov	w4, #0x100                 	// #256
   1bc20:	bl	afe0 <__fxstatat@plt>
   1bc24:	cbz	w0, 1bc90 <renameatu@@Base+0x1c8>
   1bc28:	ldr	w0, [x22]
   1bc2c:	cmp	w0, #0x2
   1bc30:	b.ne	1bc78 <renameatu@@Base+0x1b0>  // b.any
   1bc34:	ldr	w0, [sp, #96]
   1bc38:	and	w0, w0, #0xf000
   1bc3c:	cmp	w0, #0x4, lsl #12
   1bc40:	b.ne	1bc78 <renameatu@@Base+0x1b0>  // b.any
   1bc44:	mov	x3, x20
   1bc48:	mov	w2, w24
   1bc4c:	mov	x1, x21
   1bc50:	mov	w0, w25
   1bc54:	bl	aaa0 <renameat@plt>
   1bc58:	mov	w19, w0
   1bc5c:	mov	w0, w19
   1bc60:	ldp	x19, x20, [sp, #16]
   1bc64:	ldp	x21, x22, [sp, #32]
   1bc68:	ldp	x23, x24, [sp, #48]
   1bc6c:	ldp	x25, x26, [sp, #64]
   1bc70:	ldp	x29, x30, [sp], #336
   1bc74:	ret
   1bc78:	mov	w19, #0xffffffff            	// #-1
   1bc7c:	b	1bb3c <renameatu@@Base+0x74>
   1bc80:	mov	w0, #0x11                  	// #17
   1bc84:	mov	w19, #0xffffffff            	// #-1
   1bc88:	str	w0, [x22]
   1bc8c:	b	1bb3c <renameatu@@Base+0x74>
   1bc90:	ldr	w0, [sp, #224]
   1bc94:	and	w0, w0, #0xf000
   1bc98:	cmp	w0, #0x4, lsl #12
   1bc9c:	b.eq	1bcb0 <renameatu@@Base+0x1e8>  // b.none
   1bca0:	mov	w0, #0x14                  	// #20
   1bca4:	mov	w19, #0xffffffff            	// #-1
   1bca8:	str	w0, [x22]
   1bcac:	b	1bb3c <renameatu@@Base+0x74>
   1bcb0:	ldr	w0, [sp, #96]
   1bcb4:	and	w0, w0, #0xf000
   1bcb8:	cmp	w0, #0x4, lsl #12
   1bcbc:	b.eq	1bc44 <renameatu@@Base+0x17c>  // b.none
   1bcc0:	mov	w0, #0x15                  	// #21
   1bcc4:	mov	w19, #0xffffffff            	// #-1
   1bcc8:	str	w0, [x22]
   1bccc:	b	1bb3c <renameatu@@Base+0x74>

000000000001bcd0 <same_nameat@@Base>:
   1bcd0:	stp	x29, x30, [sp, #-336]!
   1bcd4:	mov	x29, sp
   1bcd8:	stp	x19, x20, [sp, #16]
   1bcdc:	stp	x21, x22, [sp, #32]
   1bce0:	mov	x22, x3
   1bce4:	stp	x23, x24, [sp, #48]
   1bce8:	mov	x23, x1
   1bcec:	mov	w24, w2
   1bcf0:	str	x25, [sp, #64]
   1bcf4:	mov	w25, w0
   1bcf8:	mov	x0, x1
   1bcfc:	bl	a780 <last_component@plt>
   1bd00:	mov	x19, x0
   1bd04:	mov	x0, x22
   1bd08:	bl	a780 <last_component@plt>
   1bd0c:	mov	x20, x0
   1bd10:	mov	x0, x19
   1bd14:	bl	a2a0 <base_len@plt>
   1bd18:	mov	x21, x0
   1bd1c:	mov	x0, x20
   1bd20:	bl	a2a0 <base_len@plt>
   1bd24:	cmp	x21, x0
   1bd28:	b.eq	1bd4c <same_nameat@@Base+0x7c>  // b.none
   1bd2c:	mov	w19, #0x0                   	// #0
   1bd30:	mov	w0, w19
   1bd34:	ldp	x19, x20, [sp, #16]
   1bd38:	ldp	x21, x22, [sp, #32]
   1bd3c:	ldp	x23, x24, [sp, #48]
   1bd40:	ldr	x25, [sp, #64]
   1bd44:	ldp	x29, x30, [sp], #336
   1bd48:	ret
   1bd4c:	mov	x2, x21
   1bd50:	mov	x1, x20
   1bd54:	mov	x0, x19
   1bd58:	bl	a970 <memcmp@plt>
   1bd5c:	cbnz	w0, 1bd2c <same_nameat@@Base+0x5c>
   1bd60:	mov	x0, x23
   1bd64:	bl	a670 <dir_name@plt>
   1bd68:	mov	w1, w25
   1bd6c:	mov	x19, x0
   1bd70:	mov	x2, x0
   1bd74:	add	x3, sp, #0x50
   1bd78:	mov	w4, #0x100                 	// #256
   1bd7c:	mov	w0, #0x0                   	// #0
   1bd80:	bl	afe0 <__fxstatat@plt>
   1bd84:	cbnz	w0, 1be24 <same_nameat@@Base+0x154>
   1bd88:	mov	x0, x19
   1bd8c:	bl	aa50 <free@plt>
   1bd90:	mov	x0, x22
   1bd94:	bl	a670 <dir_name@plt>
   1bd98:	mov	w1, w24
   1bd9c:	mov	x20, x0
   1bda0:	mov	x2, x0
   1bda4:	add	x3, sp, #0xd0
   1bda8:	mov	w4, #0x100                 	// #256
   1bdac:	mov	w0, #0x0                   	// #0
   1bdb0:	bl	afe0 <__fxstatat@plt>
   1bdb4:	cbnz	w0, 1be00 <same_nameat@@Base+0x130>
   1bdb8:	ldr	x1, [sp, #88]
   1bdbc:	mov	w19, #0x0                   	// #0
   1bdc0:	ldr	x0, [sp, #216]
   1bdc4:	cmp	x1, x0
   1bdc8:	b.ne	1bddc <same_nameat@@Base+0x10c>  // b.any
   1bdcc:	ldr	x1, [sp, #80]
   1bdd0:	ldr	x0, [sp, #208]
   1bdd4:	cmp	x1, x0
   1bdd8:	cset	w19, eq  // eq = none
   1bddc:	mov	x0, x20
   1bde0:	bl	aa50 <free@plt>
   1bde4:	mov	w0, w19
   1bde8:	ldp	x19, x20, [sp, #16]
   1bdec:	ldp	x21, x22, [sp, #32]
   1bdf0:	ldp	x23, x24, [sp, #48]
   1bdf4:	ldr	x25, [sp, #64]
   1bdf8:	ldp	x29, x30, [sp], #336
   1bdfc:	ret
   1be00:	bl	aeb0 <__errno_location@plt>
   1be04:	mov	x1, x0
   1be08:	mov	x3, x20
   1be0c:	adrp	x2, 32000 <vasnprintf@@Base+0x1848>
   1be10:	mov	w0, #0x1                   	// #1
   1be14:	add	x2, x2, #0x4f0
   1be18:	ldr	w1, [x1]
   1be1c:	bl	a360 <error@plt>
   1be20:	b	1bdb8 <same_nameat@@Base+0xe8>
   1be24:	bl	aeb0 <__errno_location@plt>
   1be28:	mov	x1, x0
   1be2c:	mov	x3, x19
   1be30:	adrp	x2, 32000 <vasnprintf@@Base+0x1848>
   1be34:	mov	w0, #0x1                   	// #1
   1be38:	add	x2, x2, #0x4f0
   1be3c:	ldr	w1, [x1]
   1be40:	bl	a360 <error@plt>
   1be44:	b	1bd88 <same_nameat@@Base+0xb8>

000000000001be48 <same_name@@Base>:
   1be48:	mov	x3, x1
   1be4c:	mov	w2, #0xffffff9c            	// #-100
   1be50:	mov	x1, x0
   1be54:	mov	w0, w2
   1be58:	b	a310 <same_nameat@plt>
   1be5c:	nop

000000000001be60 <save_cwd@@Base>:
   1be60:	stp	x29, x30, [sp, #-32]!
   1be64:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   1be68:	mov	x29, sp
   1be6c:	str	x19, [sp, #16]
   1be70:	mov	x19, x0
   1be74:	add	x0, x1, #0x38
   1be78:	mov	w1, #0x80000               	// #524288
   1be7c:	str	xzr, [x19, #8]
   1be80:	bl	a640 <open@plt>
   1be84:	str	w0, [x19]
   1be88:	mov	w1, #0x80000               	// #524288
   1be8c:	bl	ae40 <fd_safer_flag@plt>
   1be90:	str	w0, [x19]
   1be94:	tbnz	w0, #31, 1bea8 <save_cwd@@Base+0x48>
   1be98:	mov	w0, #0x0                   	// #0
   1be9c:	ldr	x19, [sp, #16]
   1bea0:	ldp	x29, x30, [sp], #32
   1bea4:	ret
   1bea8:	mov	x1, #0x0                   	// #0
   1beac:	mov	x0, #0x0                   	// #0
   1beb0:	bl	a300 <getcwd@plt>
   1beb4:	str	x0, [x19, #8]
   1beb8:	cmp	x0, #0x0
   1bebc:	csetm	w0, eq  // eq = none
   1bec0:	ldr	x19, [sp, #16]
   1bec4:	ldp	x29, x30, [sp], #32
   1bec8:	ret
   1becc:	nop

000000000001bed0 <restore_cwd@@Base>:
   1bed0:	mov	x1, x0
   1bed4:	ldr	w0, [x0]
   1bed8:	tbnz	w0, #31, 1bee0 <restore_cwd@@Base+0x10>
   1bedc:	b	a380 <fchdir@plt>
   1bee0:	ldr	x0, [x1, #8]
   1bee4:	b	a440 <chdir_long@plt>

000000000001bee8 <free_cwd@@Base>:
   1bee8:	stp	x29, x30, [sp, #-32]!
   1beec:	mov	x29, sp
   1bef0:	str	x19, [sp, #16]
   1bef4:	mov	x19, x0
   1bef8:	ldr	w0, [x0]
   1befc:	tbnz	w0, #31, 1bf04 <free_cwd@@Base+0x1c>
   1bf00:	bl	a850 <close@plt>
   1bf04:	ldr	x0, [x19, #8]
   1bf08:	ldr	x19, [sp, #16]
   1bf0c:	ldp	x29, x30, [sp], #32
   1bf10:	b	aa50 <free@plt>
   1bf14:	nop

000000000001bf18 <gl_scratch_buffer_grow@@Base>:
   1bf18:	stp	x29, x30, [sp, #-48]!
   1bf1c:	mov	x29, sp
   1bf20:	stp	x19, x20, [sp, #16]
   1bf24:	mov	x20, x0
   1bf28:	mov	x19, x0
   1bf2c:	ldr	x1, [x0, #8]
   1bf30:	ldr	x0, [x20], #16
   1bf34:	str	x21, [sp, #32]
   1bf38:	lsl	x21, x1, #1
   1bf3c:	cmp	x0, x20
   1bf40:	b.eq	1bf4c <gl_scratch_buffer_grow@@Base+0x34>  // b.none
   1bf44:	bl	aa50 <free@plt>
   1bf48:	ldr	x1, [x19, #8]
   1bf4c:	cmp	x21, x1
   1bf50:	b.cc	1bf7c <gl_scratch_buffer_grow@@Base+0x64>  // b.lo, b.ul, b.last
   1bf54:	mov	x0, x21
   1bf58:	bl	a5f0 <malloc@plt>
   1bf5c:	mov	x1, x0
   1bf60:	cbz	x0, 1bfac <gl_scratch_buffer_grow@@Base+0x94>
   1bf64:	mov	w0, #0x1                   	// #1
   1bf68:	stp	x1, x21, [x19]
   1bf6c:	ldp	x19, x20, [sp, #16]
   1bf70:	ldr	x21, [sp, #32]
   1bf74:	ldp	x29, x30, [sp], #48
   1bf78:	ret
   1bf7c:	bl	aeb0 <__errno_location@plt>
   1bf80:	mov	x2, x0
   1bf84:	mov	w3, #0xc                   	// #12
   1bf88:	mov	x1, x20
   1bf8c:	mov	x21, #0x400                 	// #1024
   1bf90:	mov	w0, #0x0                   	// #0
   1bf94:	str	w3, [x2]
   1bf98:	stp	x1, x21, [x19]
   1bf9c:	ldp	x19, x20, [sp, #16]
   1bfa0:	ldr	x21, [sp, #32]
   1bfa4:	ldp	x29, x30, [sp], #48
   1bfa8:	ret
   1bfac:	mov	x1, x20
   1bfb0:	mov	x21, #0x400                 	// #1024
   1bfb4:	mov	w0, #0x0                   	// #0
   1bfb8:	b	1bf68 <gl_scratch_buffer_grow@@Base+0x50>
   1bfbc:	nop

000000000001bfc0 <gl_scratch_buffer_grow_preserve@@Base>:
   1bfc0:	stp	x29, x30, [sp, #-64]!
   1bfc4:	mov	x29, sp
   1bfc8:	stp	x21, x22, [sp, #32]
   1bfcc:	mov	x21, x0
   1bfd0:	stp	x23, x24, [sp, #48]
   1bfd4:	ldr	x24, [x0, #8]
   1bfd8:	stp	x19, x20, [sp, #16]
   1bfdc:	mov	x19, x0
   1bfe0:	ldr	x23, [x21], #16
   1bfe4:	lsl	x22, x24, #1
   1bfe8:	cmp	x23, x21
   1bfec:	b.eq	1c028 <gl_scratch_buffer_grow_preserve@@Base+0x68>  // b.none
   1bff0:	cmp	x24, x22
   1bff4:	b.hi	1c048 <gl_scratch_buffer_grow_preserve@@Base+0x88>  // b.pmore
   1bff8:	mov	x0, x23
   1bffc:	mov	x1, x22
   1c000:	bl	a7e0 <realloc@plt>
   1c004:	mov	x20, x0
   1c008:	cbz	x0, 1c06c <gl_scratch_buffer_grow_preserve@@Base+0xac>
   1c00c:	mov	w0, #0x1                   	// #1
   1c010:	stp	x20, x22, [x19]
   1c014:	ldp	x19, x20, [sp, #16]
   1c018:	ldp	x21, x22, [sp, #32]
   1c01c:	ldp	x23, x24, [sp, #48]
   1c020:	ldp	x29, x30, [sp], #64
   1c024:	ret
   1c028:	mov	x0, x22
   1c02c:	bl	a5f0 <malloc@plt>
   1c030:	mov	x20, x0
   1c034:	cbz	x0, 1c074 <gl_scratch_buffer_grow_preserve@@Base+0xb4>
   1c038:	mov	x2, x24
   1c03c:	mov	x1, x23
   1c040:	bl	a2c0 <memcpy@plt>
   1c044:	b	1c00c <gl_scratch_buffer_grow_preserve@@Base+0x4c>
   1c048:	bl	aeb0 <__errno_location@plt>
   1c04c:	mov	w1, #0xc                   	// #12
   1c050:	str	w1, [x0]
   1c054:	mov	x0, x23
   1c058:	bl	aa50 <free@plt>
   1c05c:	mov	x1, #0x400                 	// #1024
   1c060:	mov	w0, #0x0                   	// #0
   1c064:	stp	x21, x1, [x19]
   1c068:	b	1c014 <gl_scratch_buffer_grow_preserve@@Base+0x54>
   1c06c:	ldr	x23, [x19]
   1c070:	b	1c054 <gl_scratch_buffer_grow_preserve@@Base+0x94>
   1c074:	mov	w0, #0x0                   	// #0
   1c078:	b	1c014 <gl_scratch_buffer_grow_preserve@@Base+0x54>
   1c07c:	nop

000000000001c080 <gl_scratch_buffer_set_array_size@@Base>:
   1c080:	stp	x29, x30, [sp, #-48]!
   1c084:	orr	x3, x1, x2
   1c088:	mov	x29, sp
   1c08c:	stp	x19, x20, [sp, #16]
   1c090:	cmp	xzr, x3, lsr #32
   1c094:	mul	x20, x1, x2
   1c098:	mov	x19, x0
   1c09c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1c0a0:	b.ne	1c0f4 <gl_scratch_buffer_set_array_size@@Base+0x74>  // b.any
   1c0a4:	ldr	x1, [x19, #8]
   1c0a8:	mov	w0, #0x1                   	// #1
   1c0ac:	cmp	x1, x20
   1c0b0:	b.cs	1c0e8 <gl_scratch_buffer_set_array_size@@Base+0x68>  // b.hs, b.nlast
   1c0b4:	str	x21, [sp, #32]
   1c0b8:	mov	x21, x19
   1c0bc:	ldr	x0, [x21], #16
   1c0c0:	cmp	x0, x21
   1c0c4:	b.eq	1c0cc <gl_scratch_buffer_set_array_size@@Base+0x4c>  // b.none
   1c0c8:	bl	aa50 <free@plt>
   1c0cc:	mov	x0, x20
   1c0d0:	bl	a5f0 <malloc@plt>
   1c0d4:	mov	x1, x0
   1c0d8:	cbz	x0, 1c13c <gl_scratch_buffer_set_array_size@@Base+0xbc>
   1c0dc:	mov	w0, #0x1                   	// #1
   1c0e0:	ldr	x21, [sp, #32]
   1c0e4:	stp	x1, x20, [x19]
   1c0e8:	ldp	x19, x20, [sp, #16]
   1c0ec:	ldp	x29, x30, [sp], #48
   1c0f0:	ret
   1c0f4:	udiv	x1, x20, x1
   1c0f8:	cmp	x1, x2
   1c0fc:	b.eq	1c0a4 <gl_scratch_buffer_set_array_size@@Base+0x24>  // b.none
   1c100:	mov	x20, x0
   1c104:	ldr	x0, [x20], #16
   1c108:	cmp	x0, x20
   1c10c:	b.eq	1c114 <gl_scratch_buffer_set_array_size@@Base+0x94>  // b.none
   1c110:	bl	aa50 <free@plt>
   1c114:	mov	x0, #0x400                 	// #1024
   1c118:	stp	x20, x0, [x19]
   1c11c:	bl	aeb0 <__errno_location@plt>
   1c120:	mov	x1, x0
   1c124:	mov	w2, #0xc                   	// #12
   1c128:	mov	w0, #0x0                   	// #0
   1c12c:	ldp	x19, x20, [sp, #16]
   1c130:	str	w2, [x1]
   1c134:	ldp	x29, x30, [sp], #48
   1c138:	ret
   1c13c:	mov	x1, #0x400                 	// #1024
   1c140:	mov	w0, #0x0                   	// #0
   1c144:	stp	x21, x1, [x19]
   1c148:	ldr	x21, [sp, #32]
   1c14c:	b	1c0e8 <gl_scratch_buffer_set_array_size@@Base+0x68>

000000000001c150 <gl_set_nx_create_empty@@Base>:
   1c150:	ldr	x4, [x0]
   1c154:	mov	x16, x4
   1c158:	br	x16
   1c15c:	nop

000000000001c160 <gl_set_size@@Base>:
   1c160:	ldr	x1, [x0]
   1c164:	ldr	x1, [x1, #8]
   1c168:	mov	x16, x1
   1c16c:	br	x16

000000000001c170 <gl_set_search@@Base>:
   1c170:	ldr	x2, [x0]
   1c174:	ldr	x2, [x2, #16]
   1c178:	mov	x16, x2
   1c17c:	br	x16

000000000001c180 <gl_set_nx_add@@Base>:
   1c180:	ldr	x2, [x0]
   1c184:	ldr	x2, [x2, #24]
   1c188:	mov	x16, x2
   1c18c:	br	x16

000000000001c190 <gl_set_remove@@Base>:
   1c190:	ldr	x2, [x0]
   1c194:	ldr	x2, [x2, #32]
   1c198:	mov	x16, x2
   1c19c:	br	x16

000000000001c1a0 <gl_set_free@@Base>:
   1c1a0:	ldr	x1, [x0]
   1c1a4:	ldr	x1, [x1, #40]
   1c1a8:	mov	x16, x1
   1c1ac:	br	x16

000000000001c1b0 <gl_set_iterator@@Base>:
   1c1b0:	stp	x29, x30, [sp, #-16]!
   1c1b4:	mov	x29, sp
   1c1b8:	ldr	x1, [x0]
   1c1bc:	ldr	x1, [x1, #48]
   1c1c0:	blr	x1
   1c1c4:	ldp	x29, x30, [sp], #16
   1c1c8:	ret
   1c1cc:	nop

000000000001c1d0 <gl_set_iterator_next@@Base>:
   1c1d0:	ldr	x2, [x0]
   1c1d4:	ldr	x2, [x2, #56]
   1c1d8:	mov	x16, x2
   1c1dc:	br	x16

000000000001c1e0 <gl_set_iterator_free@@Base>:
   1c1e0:	ldr	x1, [x0]
   1c1e4:	ldr	x1, [x1, #64]
   1c1e8:	mov	x16, x1
   1c1ec:	br	x16

000000000001c1f0 <get_handler@@Base>:
   1c1f0:	ldr	x0, [x0]
   1c1f4:	ret

000000000001c1f8 <gl_sockets_startup@@Base>:
   1c1f8:	mov	w0, #0x0                   	// #0
   1c1fc:	ret

000000000001c200 <gl_sockets_cleanup@@Base>:
   1c200:	mov	w0, #0x0                   	// #0
   1c204:	ret

000000000001c208 <get_stat_atime_ns@@Base>:
   1c208:	ldr	x0, [x0, #80]
   1c20c:	ret

000000000001c210 <get_stat_ctime_ns@@Base>:
   1c210:	ldr	x0, [x0, #112]
   1c214:	ret

000000000001c218 <get_stat_mtime_ns@@Base>:
   1c218:	ldr	x0, [x0, #96]
   1c21c:	ret

000000000001c220 <get_stat_birthtime_ns@@Base>:
   1c220:	mov	x0, #0x0                   	// #0
   1c224:	ret

000000000001c228 <get_stat_atime@@Base>:
   1c228:	ldp	x0, x1, [x0, #72]
   1c22c:	ret

000000000001c230 <get_stat_ctime@@Base>:
   1c230:	ldp	x0, x1, [x0, #104]
   1c234:	ret

000000000001c238 <get_stat_mtime@@Base>:
   1c238:	ldp	x0, x1, [x0, #88]
   1c23c:	ret

000000000001c240 <get_stat_birthtime@@Base>:
   1c240:	mov	x0, #0xffffffffffffffff    	// #-1
   1c244:	mov	x1, x0
   1c248:	ret
   1c24c:	nop

000000000001c250 <stat_time_normalize@@Base>:
   1c250:	ret
   1c254:	nop

000000000001c258 <statat@@Base>:
   1c258:	mov	x4, x1
   1c25c:	mov	x3, x2
   1c260:	mov	w1, w0
   1c264:	mov	x2, x4
   1c268:	mov	w0, #0x0                   	// #0
   1c26c:	mov	w4, #0x0                   	// #0
   1c270:	b	afe0 <__fxstatat@plt>
   1c274:	nop

000000000001c278 <lstatat@@Base>:
   1c278:	mov	x4, x1
   1c27c:	mov	x3, x2
   1c280:	mov	w1, w0
   1c284:	mov	x2, x4
   1c288:	mov	w0, #0x0                   	// #0
   1c28c:	mov	w4, #0x100                 	// #256
   1c290:	b	afe0 <__fxstatat@plt>
   1c294:	nop

000000000001c298 <stdopen@@Base>:
   1c298:	stp	x29, x30, [sp, #-48]!
   1c29c:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1c2a0:	adrp	x0, 33000 <vasnprintf@@Base+0x2848>
   1c2a4:	mov	x29, sp
   1c2a8:	stp	x19, x20, [sp, #16]
   1c2ac:	add	x20, x0, #0xd40
   1c2b0:	mov	w19, #0x0                   	// #0
   1c2b4:	mov	w0, w19
   1c2b8:	stp	x21, x22, [sp, #32]
   1c2bc:	add	x21, x1, #0xd50
   1c2c0:	mov	w1, #0x1                   	// #1
   1c2c4:	bl	abe0 <rpl_fcntl@plt>
   1c2c8:	tbnz	w0, #31, 1c2e8 <stdopen@@Base+0x50>
   1c2cc:	cmp	w19, #0x2
   1c2d0:	b.eq	1c318 <stdopen@@Base+0x80>  // b.none
   1c2d4:	add	w19, w19, #0x1
   1c2d8:	mov	w0, w19
   1c2dc:	mov	w1, #0x1                   	// #1
   1c2e0:	bl	abe0 <rpl_fcntl@plt>
   1c2e4:	tbz	w0, #31, 1c2cc <stdopen@@Base+0x34>
   1c2e8:	cmp	w19, #0x0
   1c2ec:	cset	w22, eq  // eq = none
   1c2f0:	cbz	w19, 1c32c <stdopen@@Base+0x94>
   1c2f4:	mov	w1, w22
   1c2f8:	mov	x0, x20
   1c2fc:	bl	a640 <open@plt>
   1c300:	tbnz	w0, #31, 1c34c <stdopen@@Base+0xb4>
   1c304:	cmp	w0, #0x2
   1c308:	b.le	1c2cc <stdopen@@Base+0x34>
   1c30c:	bl	a850 <close@plt>
   1c310:	mov	w0, #0x0                   	// #0
   1c314:	b	1c31c <stdopen@@Base+0x84>
   1c318:	mov	w0, #0x0                   	// #0
   1c31c:	ldp	x19, x20, [sp, #16]
   1c320:	ldp	x21, x22, [sp, #32]
   1c324:	ldp	x29, x30, [sp], #48
   1c328:	ret
   1c32c:	mov	x0, x21
   1c330:	mov	w1, #0x1                   	// #1
   1c334:	bl	a640 <open@plt>
   1c338:	tbnz	w0, #31, 1c2f4 <stdopen@@Base+0x5c>
   1c33c:	cmp	w0, #0x2
   1c340:	b.gt	1c30c <stdopen@@Base+0x74>
   1c344:	add	w19, w19, #0x1
   1c348:	b	1c2d8 <stdopen@@Base+0x40>
   1c34c:	bl	aeb0 <__errno_location@plt>
   1c350:	ldr	w0, [x0]
   1c354:	b	1c31c <stdopen@@Base+0x84>

000000000001c358 <strnlen1@@Base>:
   1c358:	stp	x29, x30, [sp, #-32]!
   1c35c:	mov	x2, x1
   1c360:	mov	x29, sp
   1c364:	stp	x19, x20, [sp, #16]
   1c368:	mov	x19, x0
   1c36c:	mov	x20, x1
   1c370:	mov	w1, #0x0                   	// #0
   1c374:	bl	ac90 <memchr@plt>
   1c378:	sub	x19, x0, x19
   1c37c:	cmp	x0, #0x0
   1c380:	csinc	x0, x20, x19, eq  // eq = none
   1c384:	ldp	x19, x20, [sp, #16]
   1c388:	ldp	x29, x30, [sp], #32
   1c38c:	ret
   1c390:	stp	x29, x30, [sp, #-160]!
   1c394:	mov	x1, x0
   1c398:	mov	w0, #0x0                   	// #0
   1c39c:	add	x2, sp, #0x20
   1c3a0:	mov	x29, sp
   1c3a4:	str	x19, [sp, #16]
   1c3a8:	bl	ac70 <__lxstat@plt>
   1c3ac:	mov	w19, w0
   1c3b0:	bl	aeb0 <__errno_location@plt>
   1c3b4:	mov	x1, x0
   1c3b8:	cbz	w19, 1c3dc <strnlen1@@Base+0x84>
   1c3bc:	ldr	w0, [x0]
   1c3c0:	cmp	w0, #0x4b
   1c3c4:	b.eq	1c3dc <strnlen1@@Base+0x84>  // b.none
   1c3c8:	cmp	w0, #0x2
   1c3cc:	csetm	w0, ne  // ne = any
   1c3d0:	ldr	x19, [sp, #16]
   1c3d4:	ldp	x29, x30, [sp], #160
   1c3d8:	ret
   1c3dc:	mov	w2, #0x11                  	// #17
   1c3e0:	str	w2, [x1]
   1c3e4:	mov	w0, #0xffffffff            	// #-1
   1c3e8:	ldr	x19, [sp, #16]
   1c3ec:	ldp	x29, x30, [sp], #160
   1c3f0:	ret
   1c3f4:	nop
   1c3f8:	mov	w1, #0x1c0                 	// #448
   1c3fc:	b	af60 <mkdir@plt>
   1c400:	ldr	w3, [x1]
   1c404:	mov	w5, #0xffffff3c            	// #-196
   1c408:	mov	w4, #0xc2                  	// #194
   1c40c:	mov	w2, #0x180                 	// #384
   1c410:	and	w1, w3, w5
   1c414:	orr	w1, w1, w4
   1c418:	b	a640 <open@plt>
   1c41c:	nop

000000000001c420 <try_tempname@@Base>:
   1c420:	stp	x29, x30, [sp, #-128]!
   1c424:	mov	x29, sp
   1c428:	stp	x19, x20, [sp, #16]
   1c42c:	mov	w19, w1
   1c430:	mov	x20, x0
   1c434:	stp	x21, x22, [sp, #32]
   1c438:	mov	x22, x2
   1c43c:	stp	x23, x24, [sp, #48]
   1c440:	mov	x23, x3
   1c444:	bl	aeb0 <__errno_location@plt>
   1c448:	mov	x21, x0
   1c44c:	mov	x0, x20
   1c450:	bl	a340 <strlen@plt>
   1c454:	add	w1, w19, #0x5
   1c458:	cmp	w1, w0
   1c45c:	ldr	w1, [x21]
   1c460:	str	w1, [sp, #108]
   1c464:	b.ge	1c490 <try_tempname@@Base+0x70>  // b.tcont
   1c468:	sub	w0, w0, #0x6
   1c46c:	stp	x25, x26, [sp, #64]
   1c470:	sub	w0, w0, w19
   1c474:	mov	w1, #0x5858                	// #22616
   1c478:	add	x26, x20, w0, sxtw
   1c47c:	movk	w1, #0x5858, lsl #16
   1c480:	ldr	w0, [x20, w0, sxtw]
   1c484:	cmp	w0, w1
   1c488:	b.eq	1c4b0 <try_tempname@@Base+0x90>  // b.none
   1c48c:	ldp	x25, x26, [sp, #64]
   1c490:	mov	w1, #0x16                  	// #22
   1c494:	str	w1, [x21]
   1c498:	mov	w0, #0xffffffff            	// #-1
   1c49c:	ldp	x19, x20, [sp, #16]
   1c4a0:	ldp	x21, x22, [sp, #32]
   1c4a4:	ldp	x23, x24, [sp, #48]
   1c4a8:	ldp	x29, x30, [sp], #128
   1c4ac:	ret
   1c4b0:	ldrh	w1, [x26, #4]
   1c4b4:	mov	w0, #0x5858                	// #22616
   1c4b8:	cmp	w1, w0
   1c4bc:	b.ne	1c48c <try_tempname@@Base+0x6c>  // b.any
   1c4c0:	mov	x1, #0x0                   	// #0
   1c4c4:	add	x0, sp, #0x70
   1c4c8:	stp	x27, x28, [sp, #80]
   1c4cc:	bl	a700 <gettimeofday@plt>
   1c4d0:	adrp	x25, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1c4d4:	ldp	x27, x3, [sp, #112]
   1c4d8:	mov	x28, #0x2109                	// #8457
   1c4dc:	movk	x28, #0x1084, lsl #16
   1c4e0:	mov	w19, #0xa2f8                	// #41720
   1c4e4:	movk	x28, #0x842, lsl #32
   1c4e8:	movk	w19, #0x3, lsl #16
   1c4ec:	movk	x28, #0x8421, lsl #48
   1c4f0:	mov	x24, #0x1e61                	// #7777
   1c4f4:	eor	x27, x27, x3, lsl #16
   1c4f8:	bl	a5b0 <getpid@plt>
   1c4fc:	ldr	x6, [x25, #1120]
   1c500:	sxtw	x3, w0
   1c504:	eor	x3, x3, x27
   1c508:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1c50c:	add	x3, x3, x6
   1c510:	add	x27, x1, #0xda0
   1c514:	str	x3, [x25, #1120]
   1c518:	b	1c53c <try_tempname@@Base+0x11c>
   1c51c:	ldr	w0, [x21]
   1c520:	cmp	w0, #0x11
   1c524:	b.ne	1c630 <try_tempname@@Base+0x210>  // b.any
   1c528:	ldr	x6, [x25, #1120]
   1c52c:	subs	w19, w19, #0x1
   1c530:	add	x3, x6, x24
   1c534:	str	x3, [x25, #1120]
   1c538:	b.eq	1c630 <try_tempname@@Base+0x210>  // b.none
   1c53c:	lsr	x2, x3, #1
   1c540:	mov	x1, x22
   1c544:	mov	x0, x20
   1c548:	umulh	x2, x2, x28
   1c54c:	lsr	x4, x2, #5
   1c550:	lsr	x2, x2, #4
   1c554:	lsl	x6, x2, #5
   1c558:	umulh	x4, x4, x28
   1c55c:	sub	x6, x6, x2
   1c560:	sub	x6, x3, x6, lsl #1
   1c564:	lsr	x3, x4, #5
   1c568:	lsr	x4, x4, #4
   1c56c:	lsl	x7, x4, #5
   1c570:	ldrb	w6, [x27, x6]
   1c574:	umulh	x3, x3, x28
   1c578:	sub	x7, x7, x4
   1c57c:	strb	w6, [x26]
   1c580:	sub	x7, x2, x7, lsl #1
   1c584:	lsr	x2, x3, #5
   1c588:	lsr	x3, x3, #4
   1c58c:	lsl	x6, x3, #5
   1c590:	ldrb	w7, [x27, x7]
   1c594:	umulh	x2, x2, x28
   1c598:	sub	x6, x6, x3
   1c59c:	strb	w7, [x26, #1]
   1c5a0:	sub	x6, x4, x6, lsl #1
   1c5a4:	lsr	x4, x2, #5
   1c5a8:	lsr	x2, x2, #4
   1c5ac:	lsl	x7, x2, #5
   1c5b0:	ldrb	w6, [x27, x6]
   1c5b4:	umulh	x4, x4, x28
   1c5b8:	sub	x7, x7, x2
   1c5bc:	strb	w6, [x26, #2]
   1c5c0:	sub	x7, x3, x7, lsl #1
   1c5c4:	lsr	x3, x4, #5
   1c5c8:	lsr	x4, x4, #4
   1c5cc:	lsl	x6, x4, #5
   1c5d0:	ldrb	w7, [x27, x7]
   1c5d4:	umulh	x3, x3, x28
   1c5d8:	sub	x6, x6, x4
   1c5dc:	strb	w7, [x26, #3]
   1c5e0:	sub	x2, x2, x6, lsl #1
   1c5e4:	lsr	x3, x3, #4
   1c5e8:	lsl	x6, x3, #5
   1c5ec:	ldrb	w2, [x27, x2]
   1c5f0:	sub	x3, x6, x3
   1c5f4:	strb	w2, [x26, #4]
   1c5f8:	sub	x4, x4, x3, lsl #1
   1c5fc:	ldrb	w2, [x27, x4]
   1c600:	strb	w2, [x26, #5]
   1c604:	blr	x23
   1c608:	tbnz	w0, #31, 1c51c <try_tempname@@Base+0xfc>
   1c60c:	ldr	w1, [sp, #108]
   1c610:	ldp	x25, x26, [sp, #64]
   1c614:	ldp	x27, x28, [sp, #80]
   1c618:	str	w1, [x21]
   1c61c:	ldp	x19, x20, [sp, #16]
   1c620:	ldp	x21, x22, [sp, #32]
   1c624:	ldp	x23, x24, [sp, #48]
   1c628:	ldp	x29, x30, [sp], #128
   1c62c:	ret
   1c630:	mov	w0, #0xffffffff            	// #-1
   1c634:	ldp	x19, x20, [sp, #16]
   1c638:	ldp	x21, x22, [sp, #32]
   1c63c:	ldp	x23, x24, [sp, #48]
   1c640:	ldp	x25, x26, [sp, #64]
   1c644:	ldp	x27, x28, [sp, #80]
   1c648:	ldp	x29, x30, [sp], #128
   1c64c:	ret

000000000001c650 <gen_tempname@@Base>:
   1c650:	stp	x29, x30, [sp, #-32]!
   1c654:	cmp	w3, #0x1
   1c658:	mov	x29, sp
   1c65c:	str	w2, [sp, #28]
   1c660:	b.eq	1c6c4 <gen_tempname@@Base+0x74>  // b.none
   1c664:	cmp	w3, #0x2
   1c668:	b.eq	1c694 <gen_tempname@@Base+0x44>  // b.none
   1c66c:	cbz	w3, 1c6ac <gen_tempname@@Base+0x5c>
   1c670:	adrp	x3, 33000 <vasnprintf@@Base+0x2848>
   1c674:	add	x3, x3, #0xda0
   1c678:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1c67c:	adrp	x0, 33000 <vasnprintf@@Base+0x2848>
   1c680:	add	x3, x3, #0x40
   1c684:	add	x1, x1, #0xd68
   1c688:	add	x0, x0, #0xd78
   1c68c:	mov	w2, #0x13f                 	// #319
   1c690:	bl	aea0 <__assert_fail@plt>
   1c694:	add	x2, sp, #0x1c
   1c698:	adrp	x3, 1c000 <gl_scratch_buffer_grow_preserve@@Base+0x40>
   1c69c:	add	x3, x3, #0x390
   1c6a0:	bl	a810 <try_tempname@plt>
   1c6a4:	ldp	x29, x30, [sp], #32
   1c6a8:	ret
   1c6ac:	add	x2, sp, #0x1c
   1c6b0:	adrp	x3, 1c000 <gl_scratch_buffer_grow_preserve@@Base+0x40>
   1c6b4:	add	x3, x3, #0x400
   1c6b8:	bl	a810 <try_tempname@plt>
   1c6bc:	ldp	x29, x30, [sp], #32
   1c6c0:	ret
   1c6c4:	add	x2, sp, #0x1c
   1c6c8:	adrp	x3, 1c000 <gl_scratch_buffer_grow_preserve@@Base+0x40>
   1c6cc:	add	x3, x3, #0x3f8
   1c6d0:	bl	a810 <try_tempname@plt>
   1c6d4:	ldp	x29, x30, [sp], #32
   1c6d8:	ret
   1c6dc:	nop

000000000001c6e0 <make_timespec@@Base>:
   1c6e0:	ret
   1c6e4:	nop

000000000001c6e8 <timespec_cmp@@Base>:
   1c6e8:	cmp	x0, x2
   1c6ec:	b.lt	1c6fc <timespec_cmp@@Base+0x14>  // b.tstop
   1c6f0:	sub	w1, w1, w3
   1c6f4:	csinc	w0, w1, wzr, le
   1c6f8:	ret
   1c6fc:	mov	w0, #0xffffffff            	// #-1
   1c700:	ret
   1c704:	nop

000000000001c708 <timespec_sign@@Base>:
   1c708:	tbnz	x0, #63, 1c71c <timespec_sign@@Base+0x14>
   1c70c:	orr	x0, x0, x1
   1c710:	cmp	x0, #0x0
   1c714:	cset	w0, ne  // ne = any
   1c718:	ret
   1c71c:	mov	w0, #0xffffffff            	// #-1
   1c720:	ret
   1c724:	nop

000000000001c728 <timespectod@@Base>:
   1c728:	scvtf	d1, x1
   1c72c:	mov	x2, #0xcd6500000000        	// #225833675390976
   1c730:	movk	x2, #0x41cd, lsl #48
   1c734:	fmov	d0, x2
   1c738:	scvtf	d2, x0
   1c73c:	fdiv	d0, d1, d0
   1c740:	fadd	d0, d0, d2
   1c744:	ret

000000000001c748 <dup_safer@@Base>:
   1c748:	mov	w2, #0x3                   	// #3
   1c74c:	mov	w1, #0x0                   	// #0
   1c750:	b	abe0 <rpl_fcntl@plt>
   1c754:	nop

000000000001c758 <fd_safer@@Base>:
   1c758:	stp	x29, x30, [sp, #-48]!
   1c75c:	cmp	w0, #0x2
   1c760:	mov	x29, sp
   1c764:	stp	x19, x20, [sp, #16]
   1c768:	mov	w19, w0
   1c76c:	b.ls	1c780 <fd_safer@@Base+0x28>  // b.plast
   1c770:	mov	w0, w19
   1c774:	ldp	x19, x20, [sp, #16]
   1c778:	ldp	x29, x30, [sp], #48
   1c77c:	ret
   1c780:	str	x21, [sp, #32]
   1c784:	bl	aa40 <dup_safer@plt>
   1c788:	mov	w21, w0
   1c78c:	bl	aeb0 <__errno_location@plt>
   1c790:	mov	x20, x0
   1c794:	mov	w0, w19
   1c798:	mov	w19, w21
   1c79c:	ldr	w21, [x20]
   1c7a0:	bl	a850 <close@plt>
   1c7a4:	str	w21, [x20]
   1c7a8:	mov	w0, w19
   1c7ac:	ldp	x19, x20, [sp, #16]
   1c7b0:	ldr	x21, [sp, #32]
   1c7b4:	ldp	x29, x30, [sp], #48
   1c7b8:	ret
   1c7bc:	nop

000000000001c7c0 <pipe_safer@@Base>:
   1c7c0:	stp	x29, x30, [sp, #-48]!
   1c7c4:	mov	x29, sp
   1c7c8:	stp	x19, x20, [sp, #16]
   1c7cc:	mov	x19, x0
   1c7d0:	bl	a4b0 <pipe@plt>
   1c7d4:	cbnz	w0, 1c840 <pipe_safer@@Base+0x80>
   1c7d8:	mov	w20, w0
   1c7dc:	ldr	w0, [x19]
   1c7e0:	bl	af30 <fd_safer@plt>
   1c7e4:	str	w0, [x19]
   1c7e8:	tbnz	w0, #31, 1c80c <pipe_safer@@Base+0x4c>
   1c7ec:	ldr	w0, [x19, #4]
   1c7f0:	bl	af30 <fd_safer@plt>
   1c7f4:	str	w0, [x19, #4]
   1c7f8:	tbnz	w0, #31, 1c838 <pipe_safer@@Base+0x78>
   1c7fc:	mov	w0, w20
   1c800:	ldp	x19, x20, [sp, #16]
   1c804:	ldp	x29, x30, [sp], #48
   1c808:	ret
   1c80c:	add	x19, x19, #0x4
   1c810:	str	x21, [sp, #32]
   1c814:	bl	aeb0 <__errno_location@plt>
   1c818:	mov	x21, x0
   1c81c:	ldr	w0, [x19]
   1c820:	mov	w20, #0xffffffff            	// #-1
   1c824:	ldr	w19, [x21]
   1c828:	bl	a850 <close@plt>
   1c82c:	str	w19, [x21]
   1c830:	ldr	x21, [sp, #32]
   1c834:	b	1c7fc <pipe_safer@@Base+0x3c>
   1c838:	str	x21, [sp, #32]
   1c83c:	b	1c814 <pipe_safer@@Base+0x54>
   1c840:	mov	w20, #0xffffffff            	// #-1
   1c844:	b	1c7fc <pipe_safer@@Base+0x3c>

000000000001c848 <fdutimens@@Base>:
   1c848:	stp	x29, x30, [sp, #-288]!
   1c84c:	mov	x29, sp
   1c850:	stp	x19, x20, [sp, #16]
   1c854:	mov	w20, w0
   1c858:	mov	x19, x2
   1c85c:	stp	x21, x22, [sp, #32]
   1c860:	stp	x23, x24, [sp, #48]
   1c864:	mov	x23, x1
   1c868:	cbz	x2, 1caa8 <fdutimens@@Base+0x260>
   1c86c:	ldp	x0, x1, [x2]
   1c870:	stp	x0, x1, [sp, #64]
   1c874:	mov	x3, #0xc9ff                	// #51711
   1c878:	ldp	x6, x7, [x2, #16]
   1c87c:	mov	x0, #0xffffffffffff0002    	// #-65534
   1c880:	ldr	x2, [sp, #72]
   1c884:	movk	x0, #0xc000, lsl #16
   1c888:	stp	x6, x7, [sp, #80]
   1c88c:	movk	x3, #0x3b9a, lsl #16
   1c890:	add	x4, x2, x0
   1c894:	cmp	x4, #0x1
   1c898:	ccmp	x2, x3, #0x0, hi  // hi = pmore
   1c89c:	b.hi	1ccc8 <fdutimens@@Base+0x480>  // b.pmore
   1c8a0:	ldr	x1, [sp, #88]
   1c8a4:	add	x0, x1, x0
   1c8a8:	cmp	x0, #0x1
   1c8ac:	cset	w21, hi  // hi = pmore
   1c8b0:	cmp	x1, x3
   1c8b4:	cset	w3, hi  // hi = pmore
   1c8b8:	ands	w21, w21, w3
   1c8bc:	b.ne	1ccc8 <fdutimens@@Base+0x480>  // b.any
   1c8c0:	cmp	x4, #0x1
   1c8c4:	mov	w3, #0x0                   	// #0
   1c8c8:	mov	w4, #0x0                   	// #0
   1c8cc:	b.ls	1c9b8 <fdutimens@@Base+0x170>  // b.plast
   1c8d0:	cmp	x0, #0x1
   1c8d4:	b.ls	1c99c <fdutimens@@Base+0x154>  // b.plast
   1c8d8:	add	w21, w21, w3
   1c8dc:	add	x19, sp, #0x40
   1c8e0:	cmp	w20, #0x0
   1c8e4:	ccmp	x23, #0x0, #0x0, lt  // lt = tstop
   1c8e8:	b.eq	1ccdc <fdutimens@@Base+0x494>  // b.none
   1c8ec:	adrp	x24, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1c8f0:	add	x1, x24, #0x468
   1c8f4:	ldr	w0, [x24, #1128]
   1c8f8:	tbnz	w0, #31, 1c9dc <fdutimens@@Base+0x194>
   1c8fc:	cmp	w21, #0x2
   1c900:	b.eq	1cae4 <fdutimens@@Base+0x29c>  // b.none
   1c904:	tbnz	w20, #31, 1cb30 <fdutimens@@Base+0x2e8>
   1c908:	mov	x1, x19
   1c90c:	mov	w0, w20
   1c910:	bl	a6b0 <futimens@plt>
   1c914:	mov	w22, w0
   1c918:	cmp	w0, #0x0
   1c91c:	b.le	1cb50 <fdutimens@@Base+0x308>
   1c920:	bl	aeb0 <__errno_location@plt>
   1c924:	mov	w1, #0x26                  	// #38
   1c928:	str	w1, [x0]
   1c92c:	add	x1, x24, #0x468
   1c930:	mov	w0, #0xffffffff            	// #-1
   1c934:	str	w0, [x24, #1128]
   1c938:	str	w0, [x1, #4]
   1c93c:	cbz	w21, 1ca14 <fdutimens@@Base+0x1cc>
   1c940:	cmp	w21, #0x3
   1c944:	b.ne	1c9ec <fdutimens@@Base+0x1a4>  // b.any
   1c948:	cbz	x19, 1cab0 <fdutimens@@Base+0x268>
   1c94c:	ldr	x0, [x19, #8]
   1c950:	mov	x2, #0x3ffffffe            	// #1073741822
   1c954:	ldr	x1, [x19, #24]
   1c958:	cmp	x0, x2
   1c95c:	b.eq	1cc3c <fdutimens@@Base+0x3f4>  // b.none
   1c960:	mov	x2, #0x3fffffff            	// #1073741823
   1c964:	cmp	x0, x2
   1c968:	b.ne	1c980 <fdutimens@@Base+0x138>  // b.any
   1c96c:	cmp	x1, x0
   1c970:	b.eq	1cab0 <fdutimens@@Base+0x268>  // b.none
   1c974:	mov	x0, x19
   1c978:	bl	af80 <gettime@plt>
   1c97c:	ldr	x1, [x19, #24]
   1c980:	mov	x0, #0x3ffffffe            	// #1073741822
   1c984:	cmp	x1, x0
   1c988:	b.ne	1cc50 <fdutimens@@Base+0x408>  // b.any
   1c98c:	ldur	q0, [sp, #248]
   1c990:	ldp	x4, x1, [sp, #248]
   1c994:	str	q0, [x19, #16]
   1c998:	b	1ca1c <fdutimens@@Base+0x1d4>
   1c99c:	eor	w4, w4, #0x1
   1c9a0:	mov	x0, #0x3ffffffe            	// #1073741822
   1c9a4:	cmp	x1, x0
   1c9a8:	mov	w3, #0x1                   	// #1
   1c9ac:	csel	w21, w4, w21, eq  // eq = none
   1c9b0:	str	xzr, [sp, #80]
   1c9b4:	b	1c8d8 <fdutimens@@Base+0x90>
   1c9b8:	mov	x3, #0x3ffffffe            	// #1073741822
   1c9bc:	cmp	x2, x3
   1c9c0:	str	xzr, [sp, #64]
   1c9c4:	cset	w21, eq  // eq = none
   1c9c8:	mov	w4, w21
   1c9cc:	cmp	x0, #0x1
   1c9d0:	mov	w3, #0x1                   	// #1
   1c9d4:	b.hi	1c8d8 <fdutimens@@Base+0x90>  // b.pmore
   1c9d8:	b	1c99c <fdutimens@@Base+0x154>
   1c9dc:	mov	w0, #0xffffffff            	// #-1
   1c9e0:	str	w0, [x24, #1128]
   1c9e4:	str	w0, [x1, #4]
   1c9e8:	cbz	w21, 1ca14 <fdutimens@@Base+0x1cc>
   1c9ec:	add	x2, sp, #0xa0
   1c9f0:	tbnz	w20, #31, 1cb74 <fdutimens@@Base+0x32c>
   1c9f4:	mov	w1, w20
   1c9f8:	mov	w0, #0x0                   	// #0
   1c9fc:	bl	ad40 <__fxstat@plt>
   1ca00:	cmp	w0, #0x0
   1ca04:	cset	w0, ne  // ne = any
   1ca08:	cbz	w0, 1c948 <fdutimens@@Base+0x100>
   1ca0c:	mov	w22, #0xffffffff            	// #-1
   1ca10:	b	1ca90 <fdutimens@@Base+0x248>
   1ca14:	cbz	x19, 1cab0 <fdutimens@@Base+0x268>
   1ca18:	ldp	x4, x1, [x19, #16]
   1ca1c:	mov	x0, #0xf7cf                	// #63439
   1ca20:	movk	x0, #0xe353, lsl #16
   1ca24:	add	x21, sp, #0x60
   1ca28:	ldr	x2, [x19, #8]
   1ca2c:	movk	x0, #0x9ba5, lsl #32
   1ca30:	movk	x0, #0x20c4, lsl #48
   1ca34:	smulh	x3, x1, x0
   1ca38:	smulh	x0, x2, x0
   1ca3c:	asr	x3, x3, #7
   1ca40:	asr	x0, x0, #7
   1ca44:	sub	x1, x3, x1, asr #63
   1ca48:	sub	x0, x0, x2, asr #63
   1ca4c:	stp	x0, x4, [sp, #104]
   1ca50:	mov	x2, x21
   1ca54:	ldr	x4, [x19]
   1ca58:	str	x4, [sp, #96]
   1ca5c:	str	x1, [sp, #120]
   1ca60:	tbnz	w20, #31, 1cabc <fdutimens@@Base+0x274>
   1ca64:	mov	w0, w20
   1ca68:	mov	x1, #0x0                   	// #0
   1ca6c:	bl	a610 <futimesat@plt>
   1ca70:	mov	w22, w0
   1ca74:	cbz	w0, 1cb90 <fdutimens@@Base+0x348>
   1ca78:	mov	w22, #0xffffffff            	// #-1
   1ca7c:	cbz	x23, 1ca90 <fdutimens@@Base+0x248>
   1ca80:	mov	x1, x21
   1ca84:	mov	x0, x23
   1ca88:	bl	ad20 <utimes@plt>
   1ca8c:	mov	w22, w0
   1ca90:	mov	w0, w22
   1ca94:	ldp	x19, x20, [sp, #16]
   1ca98:	ldp	x21, x22, [sp, #32]
   1ca9c:	ldp	x23, x24, [sp, #48]
   1caa0:	ldp	x29, x30, [sp], #288
   1caa4:	ret
   1caa8:	mov	w21, #0x0                   	// #0
   1caac:	b	1c8e0 <fdutimens@@Base+0x98>
   1cab0:	mov	x21, #0x0                   	// #0
   1cab4:	mov	x2, x21
   1cab8:	tbz	w20, #31, 1ca64 <fdutimens@@Base+0x21c>
   1cabc:	mov	x1, x23
   1cac0:	mov	w0, #0xffffff9c            	// #-100
   1cac4:	bl	a610 <futimesat@plt>
   1cac8:	mov	w22, w0
   1cacc:	mov	w0, w22
   1cad0:	ldp	x19, x20, [sp, #16]
   1cad4:	ldp	x21, x22, [sp, #32]
   1cad8:	ldp	x23, x24, [sp, #48]
   1cadc:	ldp	x29, x30, [sp], #288
   1cae0:	ret
   1cae4:	add	x2, sp, #0xa0
   1cae8:	tbnz	w20, #31, 1cc64 <fdutimens@@Base+0x41c>
   1caec:	mov	w1, w20
   1caf0:	mov	w0, #0x0                   	// #0
   1caf4:	bl	ad40 <__fxstat@plt>
   1caf8:	cmp	w0, #0x0
   1cafc:	cset	w0, ne  // ne = any
   1cb00:	cbnz	w0, 1ca0c <fdutimens@@Base+0x1c4>
   1cb04:	ldr	x1, [x19, #8]
   1cb08:	mov	x0, #0x3ffffffe            	// #1073741822
   1cb0c:	cmp	x1, x0
   1cb10:	b.eq	1cc7c <fdutimens@@Base+0x434>  // b.none
   1cb14:	ldr	x1, [x19, #24]
   1cb18:	mov	w21, #0x3                   	// #3
   1cb1c:	cmp	x1, x0
   1cb20:	b.ne	1c904 <fdutimens@@Base+0xbc>  // b.any
   1cb24:	ldur	q0, [sp, #248]
   1cb28:	str	q0, [x19, #16]
   1cb2c:	tbz	w20, #31, 1c908 <fdutimens@@Base+0xc0>
   1cb30:	mov	x2, x19
   1cb34:	mov	x1, x23
   1cb38:	mov	w3, #0x0                   	// #0
   1cb3c:	mov	w0, #0xffffff9c            	// #-100
   1cb40:	bl	aba0 <utimensat@plt>
   1cb44:	mov	w22, w0
   1cb48:	cmp	w0, #0x0
   1cb4c:	b.gt	1c920 <fdutimens@@Base+0xd8>
   1cb50:	b.ne	1cc90 <fdutimens@@Base+0x448>  // b.any
   1cb54:	mov	w0, #0x1                   	// #1
   1cb58:	str	w0, [x24, #1128]
   1cb5c:	mov	w0, w22
   1cb60:	ldp	x19, x20, [sp, #16]
   1cb64:	ldp	x21, x22, [sp, #32]
   1cb68:	ldp	x23, x24, [sp, #48]
   1cb6c:	ldp	x29, x30, [sp], #288
   1cb70:	ret
   1cb74:	mov	x1, x23
   1cb78:	mov	w0, #0x0                   	// #0
   1cb7c:	bl	aef0 <__xstat@plt>
   1cb80:	cmp	w0, #0x0
   1cb84:	cset	w0, ne  // ne = any
   1cb88:	cbz	w0, 1c948 <fdutimens@@Base+0x100>
   1cb8c:	b	1ca0c <fdutimens@@Base+0x1c4>
   1cb90:	cbz	x21, 1ca90 <fdutimens@@Base+0x248>
   1cb94:	ldr	x3, [x21, #8]
   1cb98:	mov	x1, #0xa11f                	// #41247
   1cb9c:	ldr	x2, [x21, #24]
   1cba0:	movk	x1, #0x7, lsl #16
   1cba4:	cmp	x3, x1
   1cba8:	cset	w23, gt
   1cbac:	cmp	x2, x1
   1cbb0:	cset	w19, gt
   1cbb4:	cmp	w23, #0x0
   1cbb8:	ccmp	w19, #0x0, #0x0, eq  // eq = none
   1cbbc:	b.eq	1ca90 <fdutimens@@Base+0x248>  // b.none
   1cbc0:	add	x2, sp, #0xa0
   1cbc4:	mov	w1, w20
   1cbc8:	bl	ad40 <__fxstat@plt>
   1cbcc:	cbnz	w0, 1ca90 <fdutimens@@Base+0x248>
   1cbd0:	ldr	x2, [x21, #16]
   1cbd4:	ldr	x1, [sp, #248]
   1cbd8:	ldp	x4, x5, [x21]
   1cbdc:	sub	x1, x1, x2
   1cbe0:	ldr	x2, [x21]
   1cbe4:	stp	x4, x5, [sp, #128]
   1cbe8:	cmp	x1, #0x1
   1cbec:	ldr	x0, [sp, #232]
   1cbf0:	csel	w19, w19, wzr, eq  // eq = none
   1cbf4:	ldp	x4, x5, [x21, #16]
   1cbf8:	stp	x4, x5, [sp, #144]
   1cbfc:	cmp	w23, #0x0
   1cc00:	sub	x0, x0, x2
   1cc04:	ccmp	x0, #0x1, #0x0, ne  // ne = any
   1cc08:	b.ne	1ccb4 <fdutimens@@Base+0x46c>  // b.any
   1cc0c:	ldr	x0, [sp, #240]
   1cc10:	cbnz	x0, 1ccb4 <fdutimens@@Base+0x46c>
   1cc14:	str	xzr, [sp, #136]
   1cc18:	cbz	w19, 1cc24 <fdutimens@@Base+0x3dc>
   1cc1c:	ldr	x0, [sp, #256]
   1cc20:	cbz	x0, 1ccc0 <fdutimens@@Base+0x478>
   1cc24:	mov	w0, w20
   1cc28:	add	x2, sp, #0x80
   1cc2c:	mov	x1, #0x0                   	// #0
   1cc30:	bl	a610 <futimesat@plt>
   1cc34:	mov	w22, #0x0                   	// #0
   1cc38:	b	1ca90 <fdutimens@@Base+0x248>
   1cc3c:	cmp	x1, x0
   1cc40:	mov	w22, #0x0                   	// #0
   1cc44:	b.eq	1ca90 <fdutimens@@Base+0x248>  // b.none
   1cc48:	ldur	q0, [sp, #232]
   1cc4c:	str	q0, [x19]
   1cc50:	mov	x0, #0x3fffffff            	// #1073741823
   1cc54:	cmp	x1, x0
   1cc58:	b.eq	1cca4 <fdutimens@@Base+0x45c>  // b.none
   1cc5c:	ldr	x4, [x19, #16]
   1cc60:	b	1ca1c <fdutimens@@Base+0x1d4>
   1cc64:	mov	x1, x23
   1cc68:	mov	w0, #0x0                   	// #0
   1cc6c:	bl	aef0 <__xstat@plt>
   1cc70:	cmp	w0, #0x0
   1cc74:	cset	w0, ne  // ne = any
   1cc78:	b	1cb00 <fdutimens@@Base+0x2b8>
   1cc7c:	ldur	q0, [sp, #232]
   1cc80:	mov	w21, #0x3                   	// #3
   1cc84:	str	q0, [x19]
   1cc88:	tbz	w20, #31, 1c908 <fdutimens@@Base+0xc0>
   1cc8c:	b	1cb30 <fdutimens@@Base+0x2e8>
   1cc90:	bl	aeb0 <__errno_location@plt>
   1cc94:	ldr	w0, [x0]
   1cc98:	cmp	w0, #0x26
   1cc9c:	b.ne	1cb54 <fdutimens@@Base+0x30c>  // b.any
   1cca0:	b	1c92c <fdutimens@@Base+0xe4>
   1cca4:	add	x0, x19, #0x10
   1cca8:	bl	af80 <gettime@plt>
   1ccac:	ldp	x4, x1, [x19, #16]
   1ccb0:	b	1ca1c <fdutimens@@Base+0x1d4>
   1ccb4:	cbz	w19, 1cc34 <fdutimens@@Base+0x3ec>
   1ccb8:	ldr	x0, [sp, #256]
   1ccbc:	cbnz	x0, 1cc34 <fdutimens@@Base+0x3ec>
   1ccc0:	str	xzr, [sp, #152]
   1ccc4:	b	1cc24 <fdutimens@@Base+0x3dc>
   1ccc8:	bl	aeb0 <__errno_location@plt>
   1cccc:	mov	w22, #0xffffffff            	// #-1
   1ccd0:	mov	w1, #0x16                  	// #22
   1ccd4:	str	w1, [x0]
   1ccd8:	b	1ca90 <fdutimens@@Base+0x248>
   1ccdc:	bl	aeb0 <__errno_location@plt>
   1cce0:	mov	w22, #0xffffffff            	// #-1
   1cce4:	mov	w1, #0x9                   	// #9
   1cce8:	str	w1, [x0]
   1ccec:	b	1ca90 <fdutimens@@Base+0x248>

000000000001ccf0 <utimens@@Base>:
   1ccf0:	mov	x2, x1
   1ccf4:	mov	x1, x0
   1ccf8:	mov	w0, #0xffffffff            	// #-1
   1ccfc:	b	a960 <fdutimens@plt>

000000000001cd00 <lutimens@@Base>:
   1cd00:	stp	x29, x30, [sp, #-224]!
   1cd04:	mov	x29, sp
   1cd08:	stp	x19, x20, [sp, #16]
   1cd0c:	mov	x19, x1
   1cd10:	stp	x21, x22, [sp, #32]
   1cd14:	mov	x22, x0
   1cd18:	str	x23, [sp, #48]
   1cd1c:	cbz	x1, 1cee8 <lutimens@@Base+0x1e8>
   1cd20:	ldp	x0, x1, [x1]
   1cd24:	stp	x0, x1, [sp, #64]
   1cd28:	mov	x2, #0xffffffffffff0002    	// #-65534
   1cd2c:	ldr	x0, [sp, #72]
   1cd30:	movk	x2, #0xc000, lsl #16
   1cd34:	ldp	x6, x7, [x19, #16]
   1cd38:	add	x4, x0, x2
   1cd3c:	stp	x6, x7, [sp, #80]
   1cd40:	cmp	x4, #0x1
   1cd44:	mov	x1, #0xc9ff                	// #51711
   1cd48:	movk	x1, #0x3b9a, lsl #16
   1cd4c:	ccmp	x0, x1, #0x0, hi  // hi = pmore
   1cd50:	b.hi	1d034 <lutimens@@Base+0x334>  // b.pmore
   1cd54:	ldr	x3, [sp, #88]
   1cd58:	add	x2, x3, x2
   1cd5c:	cmp	x2, #0x1
   1cd60:	cset	w20, hi  // hi = pmore
   1cd64:	cmp	x3, x1
   1cd68:	cset	w1, hi  // hi = pmore
   1cd6c:	ands	w20, w20, w1
   1cd70:	b.ne	1d034 <lutimens@@Base+0x334>  // b.any
   1cd74:	cmp	x4, #0x1
   1cd78:	mov	w1, #0x0                   	// #0
   1cd7c:	mov	w4, #0x0                   	// #0
   1cd80:	b.ls	1cec0 <lutimens@@Base+0x1c0>  // b.plast
   1cd84:	cmp	x2, #0x1
   1cd88:	adrp	x23, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1cd8c:	b.ls	1ce30 <lutimens@@Base+0x130>  // b.plast
   1cd90:	add	x0, x23, #0x468
   1cd94:	add	w20, w20, w4
   1cd98:	ldr	w1, [x0, #4]
   1cd9c:	tbnz	w1, #31, 1cf88 <lutimens@@Base+0x288>
   1cda0:	cmp	w20, #0x2
   1cda4:	b.ne	1cf80 <lutimens@@Base+0x280>  // b.any
   1cda8:	add	x2, sp, #0x60
   1cdac:	mov	x1, x22
   1cdb0:	mov	w0, #0x0                   	// #0
   1cdb4:	bl	ac70 <__lxstat@plt>
   1cdb8:	cbnz	w0, 1d018 <lutimens@@Base+0x318>
   1cdbc:	ldr	x1, [sp, #72]
   1cdc0:	mov	x0, #0x3ffffffe            	// #1073741822
   1cdc4:	cmp	x1, x0
   1cdc8:	b.eq	1cfc8 <lutimens@@Base+0x2c8>  // b.none
   1cdcc:	ldr	x1, [sp, #88]
   1cdd0:	add	x19, sp, #0x40
   1cdd4:	mov	w20, #0x3                   	// #3
   1cdd8:	cmp	x1, x0
   1cddc:	b.eq	1cfdc <lutimens@@Base+0x2dc>  // b.none
   1cde0:	mov	x2, x19
   1cde4:	mov	x1, x22
   1cde8:	mov	w3, #0x100                 	// #256
   1cdec:	mov	w0, #0xffffff9c            	// #-100
   1cdf0:	bl	aba0 <utimensat@plt>
   1cdf4:	mov	w21, w0
   1cdf8:	cmp	w0, #0x0
   1cdfc:	b.le	1cf54 <lutimens@@Base+0x254>
   1ce00:	bl	aeb0 <__errno_location@plt>
   1ce04:	mov	w1, #0x26                  	// #38
   1ce08:	str	w1, [x0]
   1ce0c:	add	x23, x23, #0x468
   1ce10:	mov	w0, #0xffffffff            	// #-1
   1ce14:	str	w0, [x23, #4]
   1ce18:	cbz	w20, 1cf04 <lutimens@@Base+0x204>
   1ce1c:	cmp	w20, #0x3
   1ce20:	b.ne	1d004 <lutimens@@Base+0x304>  // b.any
   1ce24:	cbnz	x19, 1ce74 <lutimens@@Base+0x174>
   1ce28:	mov	x19, #0x0                   	// #0
   1ce2c:	b	1cf18 <lutimens@@Base+0x218>
   1ce30:	add	x2, x23, #0x468
   1ce34:	mov	x0, #0x3ffffffe            	// #1073741822
   1ce38:	cmp	x3, x0
   1ce3c:	eor	w1, w1, #0x1
   1ce40:	str	xzr, [sp, #80]
   1ce44:	csel	w20, w1, w20, eq  // eq = none
   1ce48:	ldr	w0, [x2, #4]
   1ce4c:	add	w20, w20, #0x1
   1ce50:	tbz	w0, #31, 1cda0 <lutimens@@Base+0xa0>
   1ce54:	mov	w0, #0xffffffff            	// #-1
   1ce58:	str	w0, [x2, #4]
   1ce5c:	add	x2, sp, #0x60
   1ce60:	mov	x1, x22
   1ce64:	mov	w0, #0x0                   	// #0
   1ce68:	bl	ac70 <__lxstat@plt>
   1ce6c:	cbnz	w0, 1d018 <lutimens@@Base+0x318>
   1ce70:	add	x19, sp, #0x40
   1ce74:	ldr	x0, [x19, #8]
   1ce78:	mov	x2, #0x3ffffffe            	// #1073741822
   1ce7c:	ldr	x1, [x19, #24]
   1ce80:	cmp	x0, x2
   1ce84:	b.eq	1cf9c <lutimens@@Base+0x29c>  // b.none
   1ce88:	mov	x2, #0x3fffffff            	// #1073741823
   1ce8c:	cmp	x0, x2
   1ce90:	b.ne	1cea8 <lutimens@@Base+0x1a8>  // b.any
   1ce94:	cmp	x1, x0
   1ce98:	b.eq	1ce28 <lutimens@@Base+0x128>  // b.none
   1ce9c:	mov	x0, x19
   1cea0:	bl	af80 <gettime@plt>
   1cea4:	ldr	x1, [x19, #24]
   1cea8:	mov	x0, #0x3ffffffe            	// #1073741822
   1ceac:	cmp	x1, x0
   1ceb0:	b.ne	1cfb0 <lutimens@@Base+0x2b0>  // b.any
   1ceb4:	ldur	q0, [sp, #184]
   1ceb8:	str	q0, [x19, #16]
   1cebc:	b	1cf18 <lutimens@@Base+0x218>
   1cec0:	mov	x1, #0x3ffffffe            	// #1073741822
   1cec4:	cmp	x0, x1
   1cec8:	str	xzr, [sp, #64]
   1cecc:	cset	w20, eq  // eq = none
   1ced0:	mov	w1, w20
   1ced4:	cmp	x2, #0x1
   1ced8:	mov	w4, #0x1                   	// #1
   1cedc:	adrp	x23, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1cee0:	b.hi	1cd90 <lutimens@@Base+0x90>  // b.pmore
   1cee4:	b	1ce30 <lutimens@@Base+0x130>
   1cee8:	adrp	x23, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1ceec:	add	x0, x23, #0x468
   1cef0:	mov	w20, #0x0                   	// #0
   1cef4:	ldr	w1, [x0, #4]
   1cef8:	tbz	w1, #31, 1cde0 <lutimens@@Base+0xe0>
   1cefc:	mov	w1, #0xffffffff            	// #-1
   1cf00:	str	w1, [x0, #4]
   1cf04:	add	x2, sp, #0x60
   1cf08:	mov	x1, x22
   1cf0c:	mov	w0, #0x0                   	// #0
   1cf10:	bl	ac70 <__lxstat@plt>
   1cf14:	cbnz	w0, 1d018 <lutimens@@Base+0x318>
   1cf18:	ldr	w2, [sp, #112]
   1cf1c:	and	w2, w2, #0xf000
   1cf20:	cmp	w2, #0xa, lsl #12
   1cf24:	b.eq	1d020 <lutimens@@Base+0x320>  // b.none
   1cf28:	mov	x2, x19
   1cf2c:	mov	x1, x22
   1cf30:	mov	w0, #0xffffffff            	// #-1
   1cf34:	bl	a960 <fdutimens@plt>
   1cf38:	mov	w21, w0
   1cf3c:	mov	w0, w21
   1cf40:	ldp	x19, x20, [sp, #16]
   1cf44:	ldp	x21, x22, [sp, #32]
   1cf48:	ldr	x23, [sp, #48]
   1cf4c:	ldp	x29, x30, [sp], #224
   1cf50:	ret
   1cf54:	b.ne	1cff0 <lutimens@@Base+0x2f0>  // b.any
   1cf58:	add	x1, x23, #0x468
   1cf5c:	mov	w0, #0x1                   	// #1
   1cf60:	str	w0, [x23, #1128]
   1cf64:	ldp	x19, x20, [sp, #16]
   1cf68:	str	w0, [x1, #4]
   1cf6c:	mov	w0, w21
   1cf70:	ldp	x21, x22, [sp, #32]
   1cf74:	ldr	x23, [sp, #48]
   1cf78:	ldp	x29, x30, [sp], #224
   1cf7c:	ret
   1cf80:	add	x19, sp, #0x40
   1cf84:	b	1cde0 <lutimens@@Base+0xe0>
   1cf88:	mov	w1, #0xffffffff            	// #-1
   1cf8c:	str	w1, [x0, #4]
   1cf90:	add	x19, sp, #0x40
   1cf94:	cbz	w20, 1cf04 <lutimens@@Base+0x204>
   1cf98:	b	1ce5c <lutimens@@Base+0x15c>
   1cf9c:	cmp	x1, x0
   1cfa0:	mov	w21, #0x0                   	// #0
   1cfa4:	b.eq	1cf3c <lutimens@@Base+0x23c>  // b.none
   1cfa8:	ldur	q0, [sp, #168]
   1cfac:	str	q0, [x19]
   1cfb0:	mov	x0, #0x3fffffff            	// #1073741823
   1cfb4:	cmp	x1, x0
   1cfb8:	b.ne	1cf18 <lutimens@@Base+0x218>  // b.any
   1cfbc:	add	x0, x19, #0x10
   1cfc0:	bl	af80 <gettime@plt>
   1cfc4:	b	1cf18 <lutimens@@Base+0x218>
   1cfc8:	ldur	q0, [sp, #168]
   1cfcc:	add	x19, sp, #0x40
   1cfd0:	mov	w20, #0x3                   	// #3
   1cfd4:	str	q0, [sp, #64]
   1cfd8:	b	1cde0 <lutimens@@Base+0xe0>
   1cfdc:	ldur	q0, [sp, #184]
   1cfe0:	add	x19, sp, #0x40
   1cfe4:	mov	w20, #0x3                   	// #3
   1cfe8:	str	q0, [sp, #80]
   1cfec:	b	1cde0 <lutimens@@Base+0xe0>
   1cff0:	bl	aeb0 <__errno_location@plt>
   1cff4:	ldr	w0, [x0]
   1cff8:	cmp	w0, #0x26
   1cffc:	b.ne	1cf58 <lutimens@@Base+0x258>  // b.any
   1d000:	b	1ce0c <lutimens@@Base+0x10c>
   1d004:	add	x2, sp, #0x60
   1d008:	mov	x1, x22
   1d00c:	mov	w0, #0x0                   	// #0
   1d010:	bl	ac70 <__lxstat@plt>
   1d014:	cbz	w0, 1ce24 <lutimens@@Base+0x124>
   1d018:	mov	w21, #0xffffffff            	// #-1
   1d01c:	b	1cf3c <lutimens@@Base+0x23c>
   1d020:	bl	aeb0 <__errno_location@plt>
   1d024:	mov	w21, #0xffffffff            	// #-1
   1d028:	mov	w1, #0x26                  	// #38
   1d02c:	str	w1, [x0]
   1d030:	b	1cf3c <lutimens@@Base+0x23c>
   1d034:	bl	aeb0 <__errno_location@plt>
   1d038:	mov	w21, #0xffffffff            	// #-1
   1d03c:	mov	w1, #0x16                  	// #22
   1d040:	str	w1, [x0]
   1d044:	b	1cf3c <lutimens@@Base+0x23c>

000000000001d048 <xmalloc@@Base>:
   1d048:	stp	x29, x30, [sp, #-32]!
   1d04c:	mov	x29, sp
   1d050:	str	x19, [sp, #16]
   1d054:	mov	x19, x0
   1d058:	bl	a5f0 <malloc@plt>
   1d05c:	cmp	x0, #0x0
   1d060:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   1d064:	b.ne	1d074 <xmalloc@@Base+0x2c>  // b.any
   1d068:	ldr	x19, [sp, #16]
   1d06c:	ldp	x29, x30, [sp], #32
   1d070:	ret
   1d074:	bl	a890 <xalloc_die@plt>

000000000001d078 <xnmalloc@@Base>:
   1d078:	umulh	x2, x0, x1
   1d07c:	mul	x0, x0, x1
   1d080:	cmp	x2, #0x0
   1d084:	cset	x1, ne  // ne = any
   1d088:	tbnz	x0, #63, 1d094 <xnmalloc@@Base+0x1c>
   1d08c:	cbnz	x1, 1d094 <xnmalloc@@Base+0x1c>
   1d090:	b	a710 <xmalloc@plt>
   1d094:	stp	x29, x30, [sp, #-16]!
   1d098:	mov	x29, sp
   1d09c:	bl	a890 <xalloc_die@plt>

000000000001d0a0 <xcharalloc@@Base>:
   1d0a0:	b	a710 <xmalloc@plt>
   1d0a4:	nop

000000000001d0a8 <xrealloc@@Base>:
   1d0a8:	stp	x29, x30, [sp, #-32]!
   1d0ac:	cmp	x1, #0x0
   1d0b0:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   1d0b4:	mov	x29, sp
   1d0b8:	b.ne	1d0e0 <xrealloc@@Base+0x38>  // b.any
   1d0bc:	str	x19, [sp, #16]
   1d0c0:	mov	x19, x1
   1d0c4:	bl	a7e0 <realloc@plt>
   1d0c8:	cmp	x0, #0x0
   1d0cc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   1d0d0:	b.ne	1d0f0 <xrealloc@@Base+0x48>  // b.any
   1d0d4:	ldr	x19, [sp, #16]
   1d0d8:	ldp	x29, x30, [sp], #32
   1d0dc:	ret
   1d0e0:	bl	aa50 <free@plt>
   1d0e4:	mov	x0, #0x0                   	// #0
   1d0e8:	ldp	x29, x30, [sp], #32
   1d0ec:	ret
   1d0f0:	bl	a890 <xalloc_die@plt>
   1d0f4:	nop

000000000001d0f8 <xnrealloc@@Base>:
   1d0f8:	umulh	x3, x1, x2
   1d0fc:	mul	x1, x1, x2
   1d100:	cmp	x3, #0x0
   1d104:	cset	x2, ne  // ne = any
   1d108:	tbnz	x1, #63, 1d114 <xnrealloc@@Base+0x1c>
   1d10c:	cbnz	x2, 1d114 <xnrealloc@@Base+0x1c>
   1d110:	b	a660 <xrealloc@plt>
   1d114:	stp	x29, x30, [sp, #-16]!
   1d118:	mov	x29, sp
   1d11c:	bl	a890 <xalloc_die@plt>

000000000001d120 <x2nrealloc@@Base>:
   1d120:	mov	x4, x1
   1d124:	ldr	x3, [x1]
   1d128:	cbz	x0, 1d154 <x2nrealloc@@Base+0x34>
   1d12c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
   1d130:	movk	x1, #0x5554
   1d134:	udiv	x1, x1, x2
   1d138:	cmp	x1, x3
   1d13c:	b.ls	1d170 <x2nrealloc@@Base+0x50>  // b.plast
   1d140:	add	x1, x3, #0x1
   1d144:	add	x3, x1, x3, lsr #1
   1d148:	mul	x1, x3, x2
   1d14c:	str	x3, [x4]
   1d150:	b	a660 <xrealloc@plt>
   1d154:	cbz	x3, 1d17c <x2nrealloc@@Base+0x5c>
   1d158:	umulh	x5, x3, x2
   1d15c:	mul	x1, x3, x2
   1d160:	cmp	x5, #0x0
   1d164:	cset	x2, ne  // ne = any
   1d168:	tbnz	x1, #63, 1d170 <x2nrealloc@@Base+0x50>
   1d16c:	cbz	x2, 1d14c <x2nrealloc@@Base+0x2c>
   1d170:	stp	x29, x30, [sp, #-16]!
   1d174:	mov	x29, sp
   1d178:	bl	a890 <xalloc_die@plt>
   1d17c:	mov	x3, #0x80                  	// #128
   1d180:	cmp	x2, x3
   1d184:	udiv	x3, x3, x2
   1d188:	cinc	x3, x3, hi  // hi = pmore
   1d18c:	b	1d158 <x2nrealloc@@Base+0x38>

000000000001d190 <x2realloc@@Base>:
   1d190:	mov	x2, x1
   1d194:	ldr	x1, [x1]
   1d198:	cbz	x0, 1d1bc <x2realloc@@Base+0x2c>
   1d19c:	mov	x3, #0x5555555555555555    	// #6148914691236517205
   1d1a0:	movk	x3, #0x5553
   1d1a4:	cmp	x1, x3
   1d1a8:	b.hi	1d1d4 <x2realloc@@Base+0x44>  // b.pmore
   1d1ac:	add	x3, x1, #0x1
   1d1b0:	add	x1, x3, x1, lsr #1
   1d1b4:	str	x1, [x2]
   1d1b8:	b	a660 <xrealloc@plt>
   1d1bc:	cmp	x1, #0x0
   1d1c0:	cbnz	x1, 1d1d0 <x2realloc@@Base+0x40>
   1d1c4:	mov	x1, #0x80                  	// #128
   1d1c8:	str	x1, [x2]
   1d1cc:	b	a660 <xrealloc@plt>
   1d1d0:	b.ge	1d1b4 <x2realloc@@Base+0x24>  // b.tcont
   1d1d4:	stp	x29, x30, [sp, #-16]!
   1d1d8:	mov	x29, sp
   1d1dc:	bl	a890 <xalloc_die@plt>

000000000001d1e0 <xzalloc@@Base>:
   1d1e0:	stp	x29, x30, [sp, #-32]!
   1d1e4:	mov	x29, sp
   1d1e8:	str	x19, [sp, #16]
   1d1ec:	mov	x19, x0
   1d1f0:	bl	a710 <xmalloc@plt>
   1d1f4:	mov	x2, x19
   1d1f8:	mov	w1, #0x0                   	// #0
   1d1fc:	ldr	x19, [sp, #16]
   1d200:	ldp	x29, x30, [sp], #32
   1d204:	b	a6f0 <memset@plt>

000000000001d208 <xcalloc@@Base>:
   1d208:	umulh	x4, x0, x1
   1d20c:	stp	x29, x30, [sp, #-16]!
   1d210:	mul	x2, x0, x1
   1d214:	cmp	x4, #0x0
   1d218:	mov	x29, sp
   1d21c:	cset	x3, ne  // ne = any
   1d220:	tbnz	x2, #63, 1d238 <xcalloc@@Base+0x30>
   1d224:	cbnz	x3, 1d238 <xcalloc@@Base+0x30>
   1d228:	bl	a770 <calloc@plt>
   1d22c:	cbz	x0, 1d238 <xcalloc@@Base+0x30>
   1d230:	ldp	x29, x30, [sp], #16
   1d234:	ret
   1d238:	bl	a890 <xalloc_die@plt>
   1d23c:	nop

000000000001d240 <xmemdup@@Base>:
   1d240:	stp	x29, x30, [sp, #-32]!
   1d244:	mov	x29, sp
   1d248:	stp	x19, x20, [sp, #16]
   1d24c:	mov	x19, x1
   1d250:	mov	x20, x0
   1d254:	mov	x0, x1
   1d258:	bl	a710 <xmalloc@plt>
   1d25c:	mov	x2, x19
   1d260:	mov	x1, x20
   1d264:	ldp	x19, x20, [sp, #16]
   1d268:	ldp	x29, x30, [sp], #32
   1d26c:	b	a2c0 <memcpy@plt>

000000000001d270 <xstrdup@@Base>:
   1d270:	stp	x29, x30, [sp, #-32]!
   1d274:	mov	x29, sp
   1d278:	str	x19, [sp, #16]
   1d27c:	mov	x19, x0
   1d280:	bl	a340 <strlen@plt>
   1d284:	mov	x1, x0
   1d288:	mov	x0, x19
   1d28c:	add	x1, x1, #0x1
   1d290:	ldr	x19, [sp, #16]
   1d294:	ldp	x29, x30, [sp], #32
   1d298:	b	ae50 <xmemdup@plt>
   1d29c:	nop

000000000001d2a0 <xalloc_die@@Base>:
   1d2a0:	stp	x29, x30, [sp, #-32]!
   1d2a4:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
   1d2a8:	mov	w2, #0x5                   	// #5
   1d2ac:	mov	x29, sp
   1d2b0:	ldr	x3, [x3, #3976]
   1d2b4:	str	x19, [sp, #16]
   1d2b8:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1d2bc:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   1d2c0:	add	x1, x1, #0xdf0
   1d2c4:	add	x0, x0, #0x120
   1d2c8:	ldr	w19, [x3]
   1d2cc:	bl	ada0 <dcgettext@plt>
   1d2d0:	adrp	x2, 32000 <vasnprintf@@Base+0x1848>
   1d2d4:	mov	x3, x0
   1d2d8:	add	x2, x2, #0x4f0
   1d2dc:	mov	w0, w19
   1d2e0:	mov	w1, #0x0                   	// #0
   1d2e4:	bl	a360 <error@plt>
   1d2e8:	bl	a900 <abort@plt>
   1d2ec:	nop

000000000001d2f0 <xgetcwd@@Base>:
   1d2f0:	stp	x29, x30, [sp, #-32]!
   1d2f4:	mov	x1, #0x0                   	// #0
   1d2f8:	mov	x0, #0x0                   	// #0
   1d2fc:	mov	x29, sp
   1d300:	str	x19, [sp, #16]
   1d304:	bl	a300 <getcwd@plt>
   1d308:	mov	x19, x0
   1d30c:	cbz	x0, 1d320 <xgetcwd@@Base+0x30>
   1d310:	mov	x0, x19
   1d314:	ldr	x19, [sp, #16]
   1d318:	ldp	x29, x30, [sp], #32
   1d31c:	ret
   1d320:	bl	aeb0 <__errno_location@plt>
   1d324:	ldr	w0, [x0]
   1d328:	cmp	w0, #0xc
   1d32c:	b.ne	1d310 <xgetcwd@@Base+0x20>  // b.any
   1d330:	bl	a890 <xalloc_die@plt>
   1d334:	nop

000000000001d338 <gl_list_create_empty@@Base>:
   1d338:	stp	x29, x30, [sp, #-16]!
   1d33c:	mov	x29, sp
   1d340:	ldr	x5, [x0]
   1d344:	blr	x5
   1d348:	cbz	x0, 1d354 <gl_list_create_empty@@Base+0x1c>
   1d34c:	ldp	x29, x30, [sp], #16
   1d350:	ret
   1d354:	bl	a890 <xalloc_die@plt>

000000000001d358 <gl_list_create@@Base>:
   1d358:	stp	x29, x30, [sp, #-16]!
   1d35c:	mov	x29, sp
   1d360:	ldr	x7, [x0, #8]
   1d364:	blr	x7
   1d368:	cbz	x0, 1d374 <gl_list_create@@Base+0x1c>
   1d36c:	ldp	x29, x30, [sp], #16
   1d370:	ret
   1d374:	bl	a890 <xalloc_die@plt>

000000000001d378 <gl_list_node_set_value@@Base>:
   1d378:	stp	x29, x30, [sp, #-16]!
   1d37c:	mov	x29, sp
   1d380:	ldr	x3, [x0]
   1d384:	ldr	x3, [x3, #32]
   1d388:	blr	x3
   1d38c:	tbnz	w0, #31, 1d398 <gl_list_node_set_value@@Base+0x20>
   1d390:	ldp	x29, x30, [sp], #16
   1d394:	ret
   1d398:	bl	a890 <xalloc_die@plt>
   1d39c:	nop

000000000001d3a0 <gl_list_set_at@@Base>:
   1d3a0:	stp	x29, x30, [sp, #-16]!
   1d3a4:	mov	x29, sp
   1d3a8:	ldr	x3, [x0]
   1d3ac:	ldr	x3, [x3, #64]
   1d3b0:	blr	x3
   1d3b4:	cbz	x0, 1d3c0 <gl_list_set_at@@Base+0x20>
   1d3b8:	ldp	x29, x30, [sp], #16
   1d3bc:	ret
   1d3c0:	bl	a890 <xalloc_die@plt>
   1d3c4:	nop

000000000001d3c8 <gl_list_add_first@@Base>:
   1d3c8:	stp	x29, x30, [sp, #-16]!
   1d3cc:	mov	x29, sp
   1d3d0:	ldr	x2, [x0]
   1d3d4:	ldr	x2, [x2, #88]
   1d3d8:	blr	x2
   1d3dc:	cbz	x0, 1d3e8 <gl_list_add_first@@Base+0x20>
   1d3e0:	ldp	x29, x30, [sp], #16
   1d3e4:	ret
   1d3e8:	bl	a890 <xalloc_die@plt>
   1d3ec:	nop

000000000001d3f0 <gl_list_add_last@@Base>:
   1d3f0:	stp	x29, x30, [sp, #-16]!
   1d3f4:	mov	x29, sp
   1d3f8:	ldr	x2, [x0]
   1d3fc:	ldr	x2, [x2, #96]
   1d400:	blr	x2
   1d404:	cbz	x0, 1d410 <gl_list_add_last@@Base+0x20>
   1d408:	ldp	x29, x30, [sp], #16
   1d40c:	ret
   1d410:	bl	a890 <xalloc_die@plt>
   1d414:	nop

000000000001d418 <gl_list_add_before@@Base>:
   1d418:	stp	x29, x30, [sp, #-16]!
   1d41c:	mov	x29, sp
   1d420:	ldr	x3, [x0]
   1d424:	ldr	x3, [x3, #104]
   1d428:	blr	x3
   1d42c:	cbz	x0, 1d438 <gl_list_add_before@@Base+0x20>
   1d430:	ldp	x29, x30, [sp], #16
   1d434:	ret
   1d438:	bl	a890 <xalloc_die@plt>
   1d43c:	nop

000000000001d440 <gl_list_add_after@@Base>:
   1d440:	stp	x29, x30, [sp, #-16]!
   1d444:	mov	x29, sp
   1d448:	ldr	x3, [x0]
   1d44c:	ldr	x3, [x3, #112]
   1d450:	blr	x3
   1d454:	cbz	x0, 1d460 <gl_list_add_after@@Base+0x20>
   1d458:	ldp	x29, x30, [sp], #16
   1d45c:	ret
   1d460:	bl	a890 <xalloc_die@plt>
   1d464:	nop

000000000001d468 <gl_list_add_at@@Base>:
   1d468:	stp	x29, x30, [sp, #-16]!
   1d46c:	mov	x29, sp
   1d470:	ldr	x3, [x0]
   1d474:	ldr	x3, [x3, #120]
   1d478:	blr	x3
   1d47c:	cbz	x0, 1d488 <gl_list_add_at@@Base+0x20>
   1d480:	ldp	x29, x30, [sp], #16
   1d484:	ret
   1d488:	bl	a890 <xalloc_die@plt>
   1d48c:	nop

000000000001d490 <gl_sortedlist_add@@Base>:
   1d490:	stp	x29, x30, [sp, #-16]!
   1d494:	mov	x29, sp
   1d498:	ldr	x3, [x0]
   1d49c:	ldr	x3, [x3, #224]
   1d4a0:	blr	x3
   1d4a4:	cbz	x0, 1d4b0 <gl_sortedlist_add@@Base+0x20>
   1d4a8:	ldp	x29, x30, [sp], #16
   1d4ac:	ret
   1d4b0:	bl	a890 <xalloc_die@plt>
   1d4b4:	nop

000000000001d4b8 <gl_map_create_empty@@Base>:
   1d4b8:	stp	x29, x30, [sp, #-16]!
   1d4bc:	mov	x29, sp
   1d4c0:	ldr	x5, [x0]
   1d4c4:	blr	x5
   1d4c8:	cbz	x0, 1d4d4 <gl_map_create_empty@@Base+0x1c>
   1d4cc:	ldp	x29, x30, [sp], #16
   1d4d0:	ret
   1d4d4:	bl	a890 <xalloc_die@plt>

000000000001d4d8 <gl_map_put@@Base>:
   1d4d8:	stp	x29, x30, [sp, #-48]!
   1d4dc:	mov	x29, sp
   1d4e0:	ldr	x4, [x0]
   1d4e4:	stp	x19, x20, [sp, #16]
   1d4e8:	add	x3, sp, #0x28
   1d4ec:	mov	x20, x0
   1d4f0:	ldr	x4, [x4, #24]
   1d4f4:	blr	x4
   1d4f8:	mov	w19, w0
   1d4fc:	cbnz	w0, 1d524 <gl_map_put@@Base+0x4c>
   1d500:	ldr	x1, [x20, #24]
   1d504:	cbz	x1, 1d510 <gl_map_put@@Base+0x38>
   1d508:	ldr	x0, [sp, #40]
   1d50c:	blr	x1
   1d510:	cmp	w19, #0x0
   1d514:	cset	w0, ne  // ne = any
   1d518:	ldp	x19, x20, [sp, #16]
   1d51c:	ldp	x29, x30, [sp], #48
   1d520:	ret
   1d524:	cmp	w0, #0x0
   1d528:	b.ge	1d510 <gl_map_put@@Base+0x38>  // b.tcont
   1d52c:	bl	a890 <xalloc_die@plt>

000000000001d530 <gl_map_getput@@Base>:
   1d530:	stp	x29, x30, [sp, #-16]!
   1d534:	mov	x29, sp
   1d538:	ldr	x4, [x0]
   1d53c:	ldr	x4, [x4, #24]
   1d540:	blr	x4
   1d544:	cmp	w0, #0x0
   1d548:	b.lt	1d558 <gl_map_getput@@Base+0x28>  // b.tstop
   1d54c:	cset	w0, ne  // ne = any
   1d550:	ldp	x29, x30, [sp], #16
   1d554:	ret
   1d558:	bl	a890 <xalloc_die@plt>
   1d55c:	nop

000000000001d560 <gl_set_create_empty@@Base>:
   1d560:	stp	x29, x30, [sp, #-16]!
   1d564:	mov	x29, sp
   1d568:	ldr	x4, [x0]
   1d56c:	blr	x4
   1d570:	cbz	x0, 1d57c <gl_set_create_empty@@Base+0x1c>
   1d574:	ldp	x29, x30, [sp], #16
   1d578:	ret
   1d57c:	bl	a890 <xalloc_die@plt>

000000000001d580 <gl_set_add@@Base>:
   1d580:	stp	x29, x30, [sp, #-16]!
   1d584:	mov	x29, sp
   1d588:	ldr	x2, [x0]
   1d58c:	ldr	x2, [x2, #24]
   1d590:	blr	x2
   1d594:	cmp	w0, #0x0
   1d598:	b.lt	1d5a8 <gl_set_add@@Base+0x28>  // b.tstop
   1d59c:	cset	w0, ne  // ne = any
   1d5a0:	ldp	x29, x30, [sp], #16
   1d5a4:	ret
   1d5a8:	bl	a890 <xalloc_die@plt>
   1d5ac:	nop

000000000001d5b0 <xsum@@Base>:
   1d5b0:	adds	x0, x0, x1
   1d5b4:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   1d5b8:	ret
   1d5bc:	nop

000000000001d5c0 <xsum3@@Base>:
   1d5c0:	adds	x1, x0, x1
   1d5c4:	mov	x0, #0xffffffffffffffff    	// #-1
   1d5c8:	csel	x1, x1, x0, cc  // cc = lo, ul, last
   1d5cc:	adds	x1, x2, x1
   1d5d0:	csel	x0, x1, x0, cc  // cc = lo, ul, last
   1d5d4:	ret

000000000001d5d8 <xsum4@@Base>:
   1d5d8:	adds	x1, x0, x1
   1d5dc:	mov	x0, #0xffffffffffffffff    	// #-1
   1d5e0:	csel	x1, x1, x0, cc  // cc = lo, ul, last
   1d5e4:	adds	x2, x2, x1
   1d5e8:	csel	x2, x2, x0, cc  // cc = lo, ul, last
   1d5ec:	adds	x2, x3, x2
   1d5f0:	csel	x0, x2, x0, cc  // cc = lo, ul, last
   1d5f4:	ret

000000000001d5f8 <xmax@@Base>:
   1d5f8:	cmp	x0, x1
   1d5fc:	csel	x0, x0, x1, cs  // cs = hs, nlast
   1d600:	ret
   1d604:	nop

000000000001d608 <xstdopen@@Base>:
   1d608:	stp	x29, x30, [sp, #-32]!
   1d60c:	mov	x29, sp
   1d610:	bl	a630 <stdopen@plt>
   1d614:	cbnz	w0, 1d620 <xstdopen@@Base+0x18>
   1d618:	ldp	x29, x30, [sp], #32
   1d61c:	ret
   1d620:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
   1d624:	stp	x19, x20, [sp, #16]
   1d628:	mov	w2, #0x5                   	// #5
   1d62c:	ldr	x3, [x3, #3976]
   1d630:	mov	w19, w0
   1d634:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1d638:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   1d63c:	add	x1, x1, #0xe08
   1d640:	add	x0, x0, #0x120
   1d644:	ldr	w20, [x3]
   1d648:	bl	ada0 <dcgettext@plt>
   1d64c:	mov	w1, w19
   1d650:	mov	x2, x0
   1d654:	mov	w0, w20
   1d658:	ldp	x19, x20, [sp, #16]
   1d65c:	ldp	x29, x30, [sp], #32
   1d660:	b	a360 <error@plt>
   1d664:	nop

000000000001d668 <xstrndup@@Base>:
   1d668:	stp	x29, x30, [sp, #-16]!
   1d66c:	mov	x29, sp
   1d670:	bl	ab30 <strndup@plt>
   1d674:	cbz	x0, 1d680 <xstrndup@@Base+0x18>
   1d678:	ldp	x29, x30, [sp], #16
   1d67c:	ret
   1d680:	bl	a890 <xalloc_die@plt>
   1d684:	nop
   1d688:	stp	x29, x30, [sp, #-128]!
   1d68c:	mov	x29, sp
   1d690:	stp	x23, x24, [sp, #48]
   1d694:	mov	x24, x1
   1d698:	stp	x19, x20, [sp, #16]
   1d69c:	mov	x20, x0
   1d6a0:	ldp	x0, x1, [x1]
   1d6a4:	stp	x0, x1, [sp, #96]
   1d6a8:	ldp	x0, x1, [x24, #16]
   1d6ac:	stp	x21, x22, [sp, #32]
   1d6b0:	ldr	w22, [x24, #24]
   1d6b4:	stp	x25, x26, [sp, #64]
   1d6b8:	stp	x0, x1, [sp, #112]
   1d6bc:	ldr	x21, [x24]
   1d6c0:	cbz	x20, 1d834 <xstrndup@@Base+0x1cc>
   1d6c4:	mov	x19, #0x0                   	// #0
   1d6c8:	mov	x23, #0xffffffffffffffff    	// #-1
   1d6cc:	stp	x27, x28, [sp, #80]
   1d6d0:	mov	x28, x20
   1d6d4:	ldr	w27, [sp, #120]
   1d6d8:	ldp	x26, x25, [sp, #96]
   1d6dc:	b	1d704 <xstrndup@@Base+0x9c>
   1d6e0:	mov	x3, x26
   1d6e4:	mov	x26, x2
   1d6e8:	str	x2, [sp, #96]
   1d6ec:	ldr	x0, [x3]
   1d6f0:	bl	a340 <strlen@plt>
   1d6f4:	adds	x19, x0, x19
   1d6f8:	csel	x19, x19, x23, cc  // cc = lo, ul, last
   1d6fc:	subs	x28, x28, #0x1
   1d700:	b.eq	1d754 <xstrndup@@Base+0xec>  // b.none
   1d704:	add	x2, x26, #0xf
   1d708:	add	w1, w27, #0x8
   1d70c:	and	x2, x2, #0xfffffffffffffff8
   1d710:	tbz	w27, #31, 1d6e0 <xstrndup@@Base+0x78>
   1d714:	str	w1, [sp, #120]
   1d718:	add	x0, x26, #0xf
   1d71c:	add	x3, x25, w27, sxtw
   1d720:	and	x0, x0, #0xfffffffffffffff8
   1d724:	mov	w27, w1
   1d728:	cmp	w1, #0x0
   1d72c:	b.le	1d6ec <xstrndup@@Base+0x84>
   1d730:	mov	x3, x26
   1d734:	str	x0, [sp, #96]
   1d738:	mov	x26, x0
   1d73c:	ldr	x0, [x3]
   1d740:	bl	a340 <strlen@plt>
   1d744:	adds	x19, x0, x19
   1d748:	csel	x19, x19, x23, cc  // cc = lo, ul, last
   1d74c:	subs	x28, x28, #0x1
   1d750:	b.ne	1d704 <xstrndup@@Base+0x9c>  // b.any
   1d754:	mov	x0, #0x7fffffff            	// #2147483647
   1d758:	cmp	x19, x0
   1d75c:	b.hi	1d804 <xstrndup@@Base+0x19c>  // b.pmore
   1d760:	add	x0, x19, #0x1
   1d764:	bl	a710 <xmalloc@plt>
   1d768:	mov	x25, x0
   1d76c:	mov	x23, x0
   1d770:	b	1d7a8 <xstrndup@@Base+0x140>
   1d774:	mov	x1, x21
   1d778:	and	x21, x2, #0xfffffffffffffff8
   1d77c:	ldr	x19, [x1]
   1d780:	mov	x0, x19
   1d784:	bl	a340 <strlen@plt>
   1d788:	mov	x1, x19
   1d78c:	mov	x19, x0
   1d790:	mov	x2, x19
   1d794:	mov	x0, x23
   1d798:	bl	a2c0 <memcpy@plt>
   1d79c:	add	x23, x23, x19
   1d7a0:	subs	x20, x20, #0x1
   1d7a4:	b.eq	1d7e0 <xstrndup@@Base+0x178>  // b.none
   1d7a8:	add	x2, x21, #0xf
   1d7ac:	add	w0, w22, #0x8
   1d7b0:	tbz	w22, #31, 1d774 <xstrndup@@Base+0x10c>
   1d7b4:	add	x2, x21, #0xf
   1d7b8:	cmp	w0, #0x0
   1d7bc:	b.le	1d7d0 <xstrndup@@Base+0x168>
   1d7c0:	mov	x1, x21
   1d7c4:	mov	w22, w0
   1d7c8:	and	x21, x2, #0xfffffffffffffff8
   1d7cc:	b	1d77c <xstrndup@@Base+0x114>
   1d7d0:	ldr	x1, [x24, #8]
   1d7d4:	add	x1, x1, w22, sxtw
   1d7d8:	mov	w22, w0
   1d7dc:	b	1d77c <xstrndup@@Base+0x114>
   1d7e0:	ldp	x27, x28, [sp, #80]
   1d7e4:	strb	wzr, [x23]
   1d7e8:	mov	x0, x25
   1d7ec:	ldp	x19, x20, [sp, #16]
   1d7f0:	ldp	x21, x22, [sp, #32]
   1d7f4:	ldp	x23, x24, [sp, #48]
   1d7f8:	ldp	x25, x26, [sp, #64]
   1d7fc:	ldp	x29, x30, [sp], #128
   1d800:	ret
   1d804:	bl	aeb0 <__errno_location@plt>
   1d808:	mov	x25, #0x0                   	// #0
   1d80c:	mov	w1, #0x4b                  	// #75
   1d810:	ldp	x27, x28, [sp, #80]
   1d814:	str	w1, [x0]
   1d818:	mov	x0, x25
   1d81c:	ldp	x19, x20, [sp, #16]
   1d820:	ldp	x21, x22, [sp, #32]
   1d824:	ldp	x23, x24, [sp, #48]
   1d828:	ldp	x25, x26, [sp, #64]
   1d82c:	ldp	x29, x30, [sp], #128
   1d830:	ret
   1d834:	mov	x0, #0x1                   	// #1
   1d838:	bl	a710 <xmalloc@plt>
   1d83c:	mov	x23, x0
   1d840:	mov	x25, x0
   1d844:	b	1d7e4 <xstrndup@@Base+0x17c>

000000000001d848 <xvasprintf@@Base>:
   1d848:	mov	x4, x0
   1d84c:	stp	x29, x30, [sp, #-64]!
   1d850:	mov	x3, x0
   1d854:	mov	x29, sp
   1d858:	ldrb	w2, [x4]
   1d85c:	mov	x5, x1
   1d860:	mov	x0, #0x0                   	// #0
   1d864:	cbnz	w2, 1d884 <xvasprintf@@Base+0x3c>
   1d868:	b	1d8d8 <xvasprintf@@Base+0x90>
   1d86c:	ldrb	w2, [x3, #1]
   1d870:	cmp	w2, #0x73
   1d874:	b.ne	1d88c <xvasprintf@@Base+0x44>  // b.any
   1d878:	ldrb	w2, [x3, #2]!
   1d87c:	add	x0, x0, #0x1
   1d880:	cbz	w2, 1d8d8 <xvasprintf@@Base+0x90>
   1d884:	cmp	w2, #0x25
   1d888:	b.eq	1d86c <xvasprintf@@Base+0x24>  // b.none
   1d88c:	mov	x1, x4
   1d890:	add	x2, sp, #0x10
   1d894:	ldp	x6, x7, [x5]
   1d898:	add	x0, sp, #0x38
   1d89c:	ldp	x4, x5, [x5, #16]
   1d8a0:	stp	x6, x7, [sp, #16]
   1d8a4:	stp	x4, x5, [sp, #32]
   1d8a8:	bl	ab10 <vasprintf@plt>
   1d8ac:	tbnz	w0, #31, 1d8bc <xvasprintf@@Base+0x74>
   1d8b0:	ldr	x0, [sp, #56]
   1d8b4:	ldp	x29, x30, [sp], #64
   1d8b8:	ret
   1d8bc:	bl	aeb0 <__errno_location@plt>
   1d8c0:	mov	x1, x0
   1d8c4:	mov	x0, #0x0                   	// #0
   1d8c8:	ldr	w1, [x1]
   1d8cc:	cmp	w1, #0xc
   1d8d0:	b.ne	1d8b4 <xvasprintf@@Base+0x6c>  // b.any
   1d8d4:	bl	a890 <xalloc_die@plt>
   1d8d8:	ldp	x6, x7, [x5]
   1d8dc:	add	x1, sp, #0x10
   1d8e0:	ldp	x2, x3, [x5, #16]
   1d8e4:	stp	x6, x7, [sp, #16]
   1d8e8:	stp	x2, x3, [sp, #32]
   1d8ec:	bl	1d688 <xstrndup@@Base+0x20>
   1d8f0:	ldp	x29, x30, [sp], #64
   1d8f4:	ret

000000000001d8f8 <xasprintf@@Base>:
   1d8f8:	stp	x29, x30, [sp, #-272]!
   1d8fc:	mov	w9, #0xffffffc8            	// #-56
   1d900:	mov	w8, #0xffffff80            	// #-128
   1d904:	mov	x29, sp
   1d908:	add	x10, sp, #0xd0
   1d90c:	add	x11, sp, #0x110
   1d910:	stp	x11, x11, [sp, #48]
   1d914:	str	x10, [sp, #64]
   1d918:	stp	w9, w8, [sp, #72]
   1d91c:	ldp	x10, x11, [sp, #48]
   1d920:	stp	x10, x11, [sp, #16]
   1d924:	ldp	x8, x9, [sp, #64]
   1d928:	stp	x8, x9, [sp, #32]
   1d92c:	str	q0, [sp, #80]
   1d930:	str	q1, [sp, #96]
   1d934:	str	q2, [sp, #112]
   1d938:	str	q3, [sp, #128]
   1d93c:	str	q4, [sp, #144]
   1d940:	str	q5, [sp, #160]
   1d944:	str	q6, [sp, #176]
   1d948:	str	q7, [sp, #192]
   1d94c:	stp	x1, x2, [sp, #216]
   1d950:	add	x1, sp, #0x10
   1d954:	stp	x3, x4, [sp, #232]
   1d958:	stp	x5, x6, [sp, #248]
   1d95c:	str	x7, [sp, #264]
   1d960:	bl	adf0 <xvasprintf@plt>
   1d964:	ldp	x29, x30, [sp], #272
   1d968:	ret
   1d96c:	nop

000000000001d970 <asnprintf@@Base>:
   1d970:	stp	x29, x30, [sp, #-256]!
   1d974:	mov	w9, #0xffffffd8            	// #-40
   1d978:	mov	w8, #0xffffff80            	// #-128
   1d97c:	mov	x29, sp
   1d980:	add	x10, sp, #0xd0
   1d984:	add	x11, sp, #0x100
   1d988:	stp	x11, x11, [sp, #48]
   1d98c:	str	x10, [sp, #64]
   1d990:	stp	w9, w8, [sp, #72]
   1d994:	ldp	x10, x11, [sp, #48]
   1d998:	stp	x10, x11, [sp, #16]
   1d99c:	ldp	x8, x9, [sp, #64]
   1d9a0:	stp	x8, x9, [sp, #32]
   1d9a4:	str	q0, [sp, #80]
   1d9a8:	str	q1, [sp, #96]
   1d9ac:	str	q2, [sp, #112]
   1d9b0:	str	q3, [sp, #128]
   1d9b4:	str	q4, [sp, #144]
   1d9b8:	str	q5, [sp, #160]
   1d9bc:	str	q6, [sp, #176]
   1d9c0:	str	q7, [sp, #192]
   1d9c4:	stp	x3, x4, [sp, #216]
   1d9c8:	add	x3, sp, #0x10
   1d9cc:	stp	x5, x6, [sp, #232]
   1d9d0:	str	x7, [sp, #248]
   1d9d4:	bl	aad0 <vasnprintf@plt>
   1d9d8:	ldp	x29, x30, [sp], #256
   1d9dc:	ret
   1d9e0:	stp	x29, x30, [sp, #-16]!
   1d9e4:	adrp	x3, 33000 <vasnprintf@@Base+0x2848>
   1d9e8:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1d9ec:	mov	x29, sp
   1d9f0:	adrp	x0, 33000 <vasnprintf@@Base+0x2848>
   1d9f4:	add	x3, x3, #0xe98
   1d9f8:	add	x1, x1, #0xe28
   1d9fc:	add	x0, x0, #0xe38
   1da00:	mov	w2, #0x40                  	// #64
   1da04:	bl	aea0 <__assert_fail@plt>

000000000001da08 <chdir_long@@Base>:
   1da08:	stp	x29, x30, [sp, #-80]!
   1da0c:	mov	x29, sp
   1da10:	stp	x19, x20, [sp, #16]
   1da14:	stp	x21, x22, [sp, #32]
   1da18:	mov	x21, x0
   1da1c:	bl	aa30 <chdir@plt>
   1da20:	mov	w19, w0
   1da24:	cbz	w0, 1db80 <chdir_long@@Base+0x178>
   1da28:	bl	aeb0 <__errno_location@plt>
   1da2c:	mov	x22, x0
   1da30:	ldr	w0, [x0]
   1da34:	cmp	w0, #0x24
   1da38:	b.ne	1db80 <chdir_long@@Base+0x178>  // b.any
   1da3c:	mov	x0, x21
   1da40:	stp	x23, x24, [sp, #48]
   1da44:	stp	x25, x26, [sp, #64]
   1da48:	bl	a340 <strlen@plt>
   1da4c:	mov	x23, x0
   1da50:	cbz	x0, 1dcd4 <chdir_long@@Base+0x2cc>
   1da54:	cmp	x0, #0xfff
   1da58:	b.ls	1dcf8 <chdir_long@@Base+0x2f0>  // b.plast
   1da5c:	adrp	x24, 34000 <vasnprintf@@Base+0x3848>
   1da60:	add	x25, x24, #0x38
   1da64:	mov	x1, x25
   1da68:	mov	x0, x21
   1da6c:	bl	ab40 <strspn@plt>
   1da70:	mov	x19, x0
   1da74:	cmp	x0, #0x2
   1da78:	b.eq	1dbb4 <chdir_long@@Base+0x1ac>  // b.none
   1da7c:	mov	x20, x21
   1da80:	mov	w26, #0xffffff9c            	// #-100
   1da84:	cbnz	x0, 1db94 <chdir_long@@Base+0x18c>
   1da88:	ldrb	w0, [x20]
   1da8c:	cmp	w0, #0x2f
   1da90:	b.eq	1dd1c <chdir_long@@Base+0x314>  // b.none
   1da94:	add	x23, x21, x23
   1da98:	cmp	x20, x23
   1da9c:	b.hi	1dd40 <chdir_long@@Base+0x338>  // b.pmore
   1daa0:	sub	x0, x23, x20
   1daa4:	add	x24, x24, #0x38
   1daa8:	cmp	x0, #0xfff
   1daac:	mov	w25, #0x2f                  	// #47
   1dab0:	b.gt	1dadc <chdir_long@@Base+0xd4>
   1dab4:	b	1db30 <chdir_long@@Base+0x128>
   1dab8:	strb	w25, [x19], #1
   1dabc:	mov	x1, x24
   1dac0:	mov	x0, x19
   1dac4:	bl	ab40 <strspn@plt>
   1dac8:	add	x20, x19, x0
   1dacc:	sub	x0, x23, x20
   1dad0:	cmp	x0, #0xfff
   1dad4:	b.le	1db38 <chdir_long@@Base+0x130>
   1dad8:	mov	w26, w21
   1dadc:	mov	x0, x20
   1dae0:	mov	x2, #0x1000                	// #4096
   1dae4:	mov	w1, #0x2f                  	// #47
   1dae8:	bl	ab90 <memrchr@plt>
   1daec:	mov	x19, x0
   1daf0:	cbz	x0, 1dc04 <chdir_long@@Base+0x1fc>
   1daf4:	strb	wzr, [x0]
   1daf8:	sub	x0, x0, x20
   1dafc:	cmp	x0, #0xfff
   1db00:	b.gt	1dcb0 <chdir_long@@Base+0x2a8>
   1db04:	mov	x1, x20
   1db08:	mov	w0, w26
   1db0c:	mov	w2, #0x4900                	// #18688
   1db10:	bl	ae90 <openat@plt>
   1db14:	mov	w21, w0
   1db18:	tbnz	w0, #31, 1dc78 <chdir_long@@Base+0x270>
   1db1c:	tbnz	w26, #31, 1dab8 <chdir_long@@Base+0xb0>
   1db20:	mov	w0, w26
   1db24:	bl	a850 <close@plt>
   1db28:	cbz	w0, 1dab8 <chdir_long@@Base+0xb0>
   1db2c:	bl	1d9e0 <asnprintf@@Base+0x70>
   1db30:	mov	w21, w26
   1db34:	nop
   1db38:	cmp	x23, x20
   1db3c:	b.ls	1dc1c <chdir_long@@Base+0x214>  // b.plast
   1db40:	mov	x1, x20
   1db44:	mov	w0, w21
   1db48:	mov	w2, #0x4900                	// #18688
   1db4c:	bl	ae90 <openat@plt>
   1db50:	mov	w26, w0
   1db54:	tbnz	w0, #31, 1dc34 <chdir_long@@Base+0x22c>
   1db58:	tbz	w21, #31, 1dc94 <chdir_long@@Base+0x28c>
   1db5c:	mov	w0, w26
   1db60:	bl	a380 <fchdir@plt>
   1db64:	cbnz	w0, 1dc64 <chdir_long@@Base+0x25c>
   1db68:	mov	w0, w26
   1db6c:	bl	a850 <close@plt>
   1db70:	cbnz	w0, 1db2c <chdir_long@@Base+0x124>
   1db74:	ldp	x23, x24, [sp, #48]
   1db78:	mov	w19, #0x0                   	// #0
   1db7c:	ldp	x25, x26, [sp, #64]
   1db80:	mov	w0, w19
   1db84:	ldp	x19, x20, [sp, #16]
   1db88:	ldp	x21, x22, [sp, #32]
   1db8c:	ldp	x29, x30, [sp], #80
   1db90:	ret
   1db94:	mov	w0, w26
   1db98:	mov	x1, x25
   1db9c:	mov	w2, #0x4900                	// #18688
   1dba0:	bl	ae90 <openat@plt>
   1dba4:	mov	w26, w0
   1dba8:	tbnz	w0, #31, 1dca8 <chdir_long@@Base+0x2a0>
   1dbac:	add	x20, x21, x19
   1dbb0:	b	1da88 <chdir_long@@Base+0x80>
   1dbb4:	sub	x2, x23, #0x3
   1dbb8:	add	x0, x21, #0x3
   1dbbc:	mov	w1, #0x2f                  	// #47
   1dbc0:	bl	ac90 <memchr@plt>
   1dbc4:	mov	x19, x0
   1dbc8:	cbz	x0, 1dc84 <chdir_long@@Base+0x27c>
   1dbcc:	strb	wzr, [x0]
   1dbd0:	mov	x1, x21
   1dbd4:	mov	w2, #0x4900                	// #18688
   1dbd8:	mov	w0, #0xffffff9c            	// #-100
   1dbdc:	bl	ae90 <openat@plt>
   1dbe0:	mov	w26, w0
   1dbe4:	mov	w0, #0x2f                  	// #47
   1dbe8:	tbnz	w26, #31, 1dca4 <chdir_long@@Base+0x29c>
   1dbec:	strb	w0, [x19], #1
   1dbf0:	mov	x1, x25
   1dbf4:	mov	x0, x19
   1dbf8:	bl	ab40 <strspn@plt>
   1dbfc:	add	x20, x19, x0
   1dc00:	b	1da88 <chdir_long@@Base+0x80>
   1dc04:	mov	w0, #0x24                  	// #36
   1dc08:	mov	w19, #0xffffffff            	// #-1
   1dc0c:	ldp	x23, x24, [sp, #48]
   1dc10:	ldp	x25, x26, [sp, #64]
   1dc14:	str	w0, [x22]
   1dc18:	b	1db80 <chdir_long@@Base+0x178>
   1dc1c:	mov	w0, w21
   1dc20:	mov	w26, w21
   1dc24:	bl	a380 <fchdir@plt>
   1dc28:	cbnz	w0, 1dc38 <chdir_long@@Base+0x230>
   1dc2c:	tbnz	w21, #31, 1db74 <chdir_long@@Base+0x16c>
   1dc30:	b	1db68 <chdir_long@@Base+0x160>
   1dc34:	mov	w26, w21
   1dc38:	ldr	w20, [x22]
   1dc3c:	tbz	w26, #31, 1dc68 <chdir_long@@Base+0x260>
   1dc40:	ldp	x23, x24, [sp, #48]
   1dc44:	mov	w19, #0xffffffff            	// #-1
   1dc48:	ldp	x25, x26, [sp, #64]
   1dc4c:	str	w20, [x22]
   1dc50:	mov	w0, w19
   1dc54:	ldp	x19, x20, [sp, #16]
   1dc58:	ldp	x21, x22, [sp, #32]
   1dc5c:	ldp	x29, x30, [sp], #80
   1dc60:	ret
   1dc64:	ldr	w20, [x22]
   1dc68:	mov	w0, w26
   1dc6c:	bl	a850 <close@plt>
   1dc70:	cbz	w0, 1dc40 <chdir_long@@Base+0x238>
   1dc74:	bl	1d9e0 <asnprintf@@Base+0x70>
   1dc78:	mov	w0, #0x2f                  	// #47
   1dc7c:	strb	w0, [x19]
   1dc80:	b	1dc38 <chdir_long@@Base+0x230>
   1dc84:	mov	w19, #0xffffffff            	// #-1
   1dc88:	ldp	x23, x24, [sp, #48]
   1dc8c:	ldp	x25, x26, [sp, #64]
   1dc90:	b	1db80 <chdir_long@@Base+0x178>
   1dc94:	mov	w0, w21
   1dc98:	bl	a850 <close@plt>
   1dc9c:	cbz	w0, 1db5c <chdir_long@@Base+0x154>
   1dca0:	bl	1d9e0 <asnprintf@@Base+0x70>
   1dca4:	strb	w0, [x19]
   1dca8:	ldr	w20, [x22]
   1dcac:	b	1dc40 <chdir_long@@Base+0x238>
   1dcb0:	adrp	x3, 33000 <vasnprintf@@Base+0x2848>
   1dcb4:	add	x3, x3, #0xe98
   1dcb8:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1dcbc:	adrp	x0, 33000 <vasnprintf@@Base+0x2848>
   1dcc0:	add	x3, x3, #0x10
   1dcc4:	add	x1, x1, #0xe28
   1dcc8:	add	x0, x0, #0xe80
   1dccc:	mov	w2, #0xb3                  	// #179
   1dcd0:	bl	aea0 <__assert_fail@plt>
   1dcd4:	adrp	x3, 33000 <vasnprintf@@Base+0x2848>
   1dcd8:	add	x3, x3, #0xe98
   1dcdc:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1dce0:	adrp	x0, 33000 <vasnprintf@@Base+0x2848>
   1dce4:	add	x3, x3, #0x10
   1dce8:	add	x1, x1, #0xe28
   1dcec:	add	x0, x0, #0xe48
   1dcf0:	mov	w2, #0x7e                  	// #126
   1dcf4:	bl	aea0 <__assert_fail@plt>
   1dcf8:	adrp	x3, 33000 <vasnprintf@@Base+0x2848>
   1dcfc:	add	x3, x3, #0xe98
   1dd00:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1dd04:	adrp	x0, 33000 <vasnprintf@@Base+0x2848>
   1dd08:	add	x3, x3, #0x10
   1dd0c:	add	x1, x1, #0xe28
   1dd10:	add	x0, x0, #0xe50
   1dd14:	mov	w2, #0x7f                  	// #127
   1dd18:	bl	aea0 <__assert_fail@plt>
   1dd1c:	adrp	x3, 33000 <vasnprintf@@Base+0x2848>
   1dd20:	add	x3, x3, #0xe98
   1dd24:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1dd28:	adrp	x0, 33000 <vasnprintf@@Base+0x2848>
   1dd2c:	add	x3, x3, #0x10
   1dd30:	add	x1, x1, #0xe28
   1dd34:	add	x0, x0, #0xe60
   1dd38:	mov	w2, #0xa2                  	// #162
   1dd3c:	bl	aea0 <__assert_fail@plt>
   1dd40:	adrp	x3, 33000 <vasnprintf@@Base+0x2848>
   1dd44:	add	x3, x3, #0xe98
   1dd48:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1dd4c:	adrp	x0, 33000 <vasnprintf@@Base+0x2848>
   1dd50:	add	x3, x3, #0x10
   1dd54:	add	x1, x1, #0xe28
   1dd58:	add	x0, x0, #0xe70
   1dd5c:	mov	w2, #0xa3                  	// #163
   1dd60:	bl	aea0 <__assert_fail@plt>
   1dd64:	nop

000000000001dd68 <rpl_fcntl@@Base>:
   1dd68:	stp	x29, x30, [sp, #-112]!
   1dd6c:	mov	w6, #0xffffffe0            	// #-32
   1dd70:	mov	x29, sp
   1dd74:	add	x7, sp, #0x50
   1dd78:	stp	x19, x20, [sp, #16]
   1dd7c:	str	x7, [sp, #64]
   1dd80:	stp	w6, wzr, [sp, #72]
   1dd84:	stp	x2, x3, [sp, #80]
   1dd88:	add	x2, sp, #0x70
   1dd8c:	stp	x2, x2, [sp, #48]
   1dd90:	stp	x4, x5, [sp, #96]
   1dd94:	cbz	w1, 1de54 <rpl_fcntl@@Base+0xec>
   1dd98:	mov	w20, w0
   1dd9c:	mov	w3, w1
   1dda0:	cmp	w1, #0x406
   1dda4:	b.eq	1de70 <rpl_fcntl@@Base+0x108>  // b.none
   1dda8:	cmp	w1, #0xb
   1ddac:	b.gt	1ddf8 <rpl_fcntl@@Base+0x90>
   1ddb0:	cmp	w1, #0x0
   1ddb4:	b.le	1de24 <rpl_fcntl@@Base+0xbc>
   1ddb8:	mov	x1, #0x1                   	// #1
   1ddbc:	mov	x2, #0x514                 	// #1300
   1ddc0:	lsl	x1, x1, x3
   1ddc4:	tst	x1, x2
   1ddc8:	b.ne	1deec <rpl_fcntl@@Base+0x184>  // b.any
   1ddcc:	mov	x2, #0xa0a                 	// #2570
   1ddd0:	tst	x1, x2
   1ddd4:	b.eq	1de24 <rpl_fcntl@@Base+0xbc>  // b.none
   1ddd8:	mov	w1, w3
   1dddc:	mov	w0, w20
   1dde0:	bl	ac00 <fcntl@plt>
   1dde4:	mov	w19, w0
   1dde8:	mov	w0, w19
   1ddec:	ldp	x19, x20, [sp, #16]
   1ddf0:	ldp	x29, x30, [sp], #112
   1ddf4:	ret
   1ddf8:	sub	w0, w1, #0x400
   1ddfc:	cmp	w0, #0xa
   1de00:	b.hi	1de24 <rpl_fcntl@@Base+0xbc>  // b.pmore
   1de04:	mov	x1, #0x1                   	// #1
   1de08:	mov	x2, #0x2c5                 	// #709
   1de0c:	lsl	x1, x1, x0
   1de10:	tst	x1, x2
   1de14:	b.ne	1deec <rpl_fcntl@@Base+0x184>  // b.any
   1de18:	mov	x2, #0x502                 	// #1282
   1de1c:	tst	x1, x2
   1de20:	b.ne	1ddd8 <rpl_fcntl@@Base+0x70>  // b.any
   1de24:	ldr	w0, [sp, #72]
   1de28:	ldr	x1, [sp, #48]
   1de2c:	tbnz	w0, #31, 1df98 <rpl_fcntl@@Base+0x230>
   1de30:	ldr	x2, [x1]
   1de34:	mov	w0, w20
   1de38:	mov	w1, w3
   1de3c:	bl	ac00 <fcntl@plt>
   1de40:	mov	w19, w0
   1de44:	mov	w0, w19
   1de48:	ldp	x19, x20, [sp, #16]
   1de4c:	ldp	x29, x30, [sp], #112
   1de50:	ret
   1de54:	ldr	w2, [sp, #80]
   1de58:	bl	ac00 <fcntl@plt>
   1de5c:	mov	w19, w0
   1de60:	mov	w0, w19
   1de64:	ldp	x19, x20, [sp, #16]
   1de68:	ldp	x29, x30, [sp], #112
   1de6c:	ret
   1de70:	stp	x21, x22, [sp, #32]
   1de74:	adrp	x21, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1de78:	mov	w2, #0xffffffe8            	// #-24
   1de7c:	str	w2, [sp, #72]
   1de80:	ldr	w2, [x21, #1136]
   1de84:	ldr	w22, [sp, #80]
   1de88:	tbnz	w2, #31, 1deb8 <rpl_fcntl@@Base+0x150>
   1de8c:	mov	w2, w22
   1de90:	bl	ac00 <fcntl@plt>
   1de94:	mov	w19, w0
   1de98:	tbnz	w0, #31, 1df1c <rpl_fcntl@@Base+0x1b4>
   1de9c:	mov	w0, #0x1                   	// #1
   1dea0:	str	w0, [x21, #1136]
   1dea4:	mov	w0, w19
   1dea8:	ldp	x19, x20, [sp, #16]
   1deac:	ldp	x21, x22, [sp, #32]
   1deb0:	ldp	x29, x30, [sp], #112
   1deb4:	ret
   1deb8:	mov	w2, w22
   1debc:	mov	w1, #0x0                   	// #0
   1dec0:	bl	ac00 <fcntl@plt>
   1dec4:	mov	w19, w0
   1dec8:	tbnz	w0, #31, 1ded8 <rpl_fcntl@@Base+0x170>
   1decc:	ldr	w0, [x21, #1136]
   1ded0:	cmn	w0, #0x1
   1ded4:	b.eq	1df4c <rpl_fcntl@@Base+0x1e4>  // b.none
   1ded8:	mov	w0, w19
   1dedc:	ldp	x19, x20, [sp, #16]
   1dee0:	ldp	x21, x22, [sp, #32]
   1dee4:	ldp	x29, x30, [sp], #112
   1dee8:	ret
   1deec:	ldr	w0, [sp, #72]
   1def0:	ldr	x1, [sp, #48]
   1def4:	tbnz	w0, #31, 1dfac <rpl_fcntl@@Base+0x244>
   1def8:	ldr	w2, [x1]
   1defc:	mov	w0, w20
   1df00:	mov	w1, w3
   1df04:	bl	ac00 <fcntl@plt>
   1df08:	mov	w19, w0
   1df0c:	mov	w0, w19
   1df10:	ldp	x19, x20, [sp, #16]
   1df14:	ldp	x29, x30, [sp], #112
   1df18:	ret
   1df1c:	bl	aeb0 <__errno_location@plt>
   1df20:	ldr	w0, [x0]
   1df24:	cmp	w0, #0x16
   1df28:	b.ne	1de9c <rpl_fcntl@@Base+0x134>  // b.any
   1df2c:	mov	w2, w22
   1df30:	mov	w0, w20
   1df34:	mov	w1, #0x0                   	// #0
   1df38:	bl	ac00 <fcntl@plt>
   1df3c:	mov	w19, w0
   1df40:	tbnz	w0, #31, 1ded8 <rpl_fcntl@@Base+0x170>
   1df44:	mov	w0, #0xffffffff            	// #-1
   1df48:	str	w0, [x21, #1136]
   1df4c:	mov	w0, w19
   1df50:	mov	w1, #0x1                   	// #1
   1df54:	bl	ac00 <fcntl@plt>
   1df58:	tbnz	w0, #31, 1df74 <rpl_fcntl@@Base+0x20c>
   1df5c:	orr	w2, w0, #0x1
   1df60:	mov	w1, #0x2                   	// #2
   1df64:	mov	w0, w19
   1df68:	bl	ac00 <fcntl@plt>
   1df6c:	cmn	w0, #0x1
   1df70:	b.ne	1ded8 <rpl_fcntl@@Base+0x170>  // b.any
   1df74:	bl	aeb0 <__errno_location@plt>
   1df78:	mov	x20, x0
   1df7c:	mov	w0, w19
   1df80:	mov	w19, #0xffffffff            	// #-1
   1df84:	ldr	w21, [x20]
   1df88:	bl	a850 <close@plt>
   1df8c:	str	w21, [x20]
   1df90:	ldp	x21, x22, [sp, #32]
   1df94:	b	1dde8 <rpl_fcntl@@Base+0x80>
   1df98:	cmn	w0, #0x7
   1df9c:	b.ge	1de30 <rpl_fcntl@@Base+0xc8>  // b.tcont
   1dfa0:	ldr	x1, [sp, #56]
   1dfa4:	add	x1, x1, w0, sxtw
   1dfa8:	b	1de30 <rpl_fcntl@@Base+0xc8>
   1dfac:	cmn	w0, #0x7
   1dfb0:	b.ge	1def8 <rpl_fcntl@@Base+0x190>  // b.tcont
   1dfb4:	ldr	x1, [sp, #56]
   1dfb8:	add	x1, x1, w0, sxtw
   1dfbc:	b	1def8 <rpl_fcntl@@Base+0x190>
   1dfc0:	ldp	w11, w5, [x1, #44]
   1dfc4:	ldr	w10, [x1]
   1dfc8:	cmp	w11, w5
   1dfcc:	ccmp	w5, w10, #0x0, lt  // lt = tstop
   1dfd0:	b.ge	1e1a0 <rpl_fcntl@@Base+0x438>  // b.tcont
   1dfd4:	sbfiz	x8, x5, #3, #32
   1dfd8:	sxtw	x13, w5
   1dfdc:	add	x9, x8, #0x10
   1dfe0:	add	x7, x0, x8
   1dfe4:	mov	w6, w10
   1dfe8:	mov	w4, w11
   1dfec:	add	x12, x0, #0x8
   1dff0:	stp	x29, x30, [sp, #-16]!
   1dff4:	mov	x29, sp
   1dff8:	sub	w16, w6, w5
   1dffc:	sub	w17, w5, w4
   1e000:	cmp	w16, w17
   1e004:	b.le	1e0b4 <rpl_fcntl@@Base+0x34c>
   1e008:	sxtw	x18, w4
   1e00c:	sub	w6, w6, w17
   1e010:	add	x2, x18, #0x2
   1e014:	sub	w16, w17, #0x1
   1e018:	sbfiz	x14, x6, #3, #32
   1e01c:	sxtw	x15, w6
   1e020:	lsl	x2, x2, #3
   1e024:	add	x30, x14, #0x10
   1e028:	sub	x3, x2, #0x10
   1e02c:	cmp	x3, x30
   1e030:	ccmp	x14, x2, #0x0, lt  // lt = tstop
   1e034:	ccmp	w16, #0x4, #0x0, ge  // ge = tcont
   1e038:	b.ls	1e16c <rpl_fcntl@@Base+0x404>  // b.plast
   1e03c:	lsr	w15, w17, #1
   1e040:	add	x3, x0, x3
   1e044:	add	x14, x0, x14
   1e048:	mov	x2, #0x0                   	// #0
   1e04c:	lsl	x15, x15, #4
   1e050:	ldr	q1, [x14, x2]
   1e054:	ldr	q0, [x3, x2]
   1e058:	str	q1, [x3, x2]
   1e05c:	str	q0, [x14, x2]
   1e060:	add	x2, x2, #0x10
   1e064:	cmp	x15, x2
   1e068:	b.ne	1e050 <rpl_fcntl@@Base+0x2e8>  // b.any
   1e06c:	and	w2, w17, #0xfffffffe
   1e070:	tbz	w17, #0, 1e094 <rpl_fcntl@@Base+0x32c>
   1e074:	add	w3, w2, w6
   1e078:	add	w2, w2, w4
   1e07c:	sxtw	x3, w3
   1e080:	sxtw	x2, w2
   1e084:	ldr	x15, [x0, x3, lsl #3]
   1e088:	ldr	x14, [x0, x2, lsl #3]
   1e08c:	str	x15, [x0, x2, lsl #3]
   1e090:	str	x14, [x0, x3, lsl #3]
   1e094:	cmp	w6, w5
   1e098:	ccmp	w4, w5, #0x0, gt
   1e09c:	b.lt	1dff8 <rpl_fcntl@@Base+0x290>  // b.tstop
   1e0a0:	sub	w5, w10, w5
   1e0a4:	add	w11, w5, w11
   1e0a8:	stp	w11, w10, [x1, #44]
   1e0ac:	ldp	x29, x30, [sp], #16
   1e0b0:	ret
   1e0b4:	sxtw	x14, w4
   1e0b8:	sub	w2, w16, #0x1
   1e0bc:	add	x3, x14, #0x2
   1e0c0:	lsl	x3, x3, #3
   1e0c4:	cmp	x3, x8
   1e0c8:	sub	x3, x3, #0x10
   1e0cc:	ccmp	x9, x3, #0x4, gt
   1e0d0:	ccmp	w2, #0x4, #0x0, le
   1e0d4:	b.ls	1e134 <rpl_fcntl@@Base+0x3cc>  // b.plast
   1e0d8:	lsr	w14, w16, #1
   1e0dc:	add	x3, x0, x3
   1e0e0:	mov	x2, #0x0                   	// #0
   1e0e4:	lsl	x14, x14, #4
   1e0e8:	ldr	q1, [x7, x2]
   1e0ec:	ldr	q0, [x3, x2]
   1e0f0:	str	q1, [x3, x2]
   1e0f4:	str	q0, [x7, x2]
   1e0f8:	add	x2, x2, #0x10
   1e0fc:	cmp	x2, x14
   1e100:	b.ne	1e0e8 <rpl_fcntl@@Base+0x380>  // b.any
   1e104:	and	w2, w16, #0xfffffffe
   1e108:	tbz	w16, #0, 1e12c <rpl_fcntl@@Base+0x3c4>
   1e10c:	add	w3, w5, w2
   1e110:	add	w2, w4, w2
   1e114:	sxtw	x3, w3
   1e118:	sxtw	x2, w2
   1e11c:	ldr	x15, [x0, x3, lsl #3]
   1e120:	ldr	x14, [x0, x2, lsl #3]
   1e124:	str	x15, [x0, x2, lsl #3]
   1e128:	str	x14, [x0, x3, lsl #3]
   1e12c:	add	w4, w4, w16
   1e130:	b	1e094 <rpl_fcntl@@Base+0x32c>
   1e134:	add	x15, x14, w2, uxtw
   1e138:	add	x2, x0, x3
   1e13c:	sub	x3, x13, x14
   1e140:	add	x14, x12, x15, lsl #3
   1e144:	nop
   1e148:	ldr	x17, [x2, x3, lsl #3]
   1e14c:	ldr	x15, [x2]
   1e150:	str	x17, [x2]
   1e154:	str	x15, [x2, x3, lsl #3]
   1e158:	add	x2, x2, #0x8
   1e15c:	cmp	x2, x14
   1e160:	b.ne	1e148 <rpl_fcntl@@Base+0x3e0>  // b.any
   1e164:	add	w4, w4, w16
   1e168:	b	1e094 <rpl_fcntl@@Base+0x32c>
   1e16c:	add	x14, x18, w16, uxtw
   1e170:	add	x2, x0, x3
   1e174:	sub	x3, x15, x18
   1e178:	add	x14, x12, x14, lsl #3
   1e17c:	nop
   1e180:	ldr	x16, [x2, x3, lsl #3]
   1e184:	ldr	x15, [x2]
   1e188:	str	x16, [x2]
   1e18c:	str	x15, [x2, x3, lsl #3]
   1e190:	add	x2, x2, #0x8
   1e194:	cmp	x14, x2
   1e198:	b.ne	1e180 <rpl_fcntl@@Base+0x418>  // b.any
   1e19c:	b	1e094 <rpl_fcntl@@Base+0x32c>
   1e1a0:	sub	w5, w10, w5
   1e1a4:	add	w11, w5, w11
   1e1a8:	stp	w11, w10, [x1, #44]
   1e1ac:	ret
   1e1b0:	stp	x29, x30, [sp, #-176]!
   1e1b4:	mov	x29, sp
   1e1b8:	stp	x23, x24, [sp, #48]
   1e1bc:	ldr	x23, [x6, #32]
   1e1c0:	stp	x19, x20, [sp, #16]
   1e1c4:	stp	x21, x22, [sp, #32]
   1e1c8:	mov	x22, x23
   1e1cc:	stp	x25, x26, [sp, #64]
   1e1d0:	mov	x26, x6
   1e1d4:	mov	x25, x3
   1e1d8:	stp	x27, x28, [sp, #80]
   1e1dc:	ldrb	w28, [x23]
   1e1e0:	stp	w7, w5, [sp, #104]
   1e1e4:	stp	x4, x1, [sp, #112]
   1e1e8:	cmp	w28, #0x3d
   1e1ec:	ccmp	w28, #0x0, #0x4, ne  // ne = any
   1e1f0:	str	x2, [sp, #128]
   1e1f4:	str	w0, [sp, #152]
   1e1f8:	b.eq	1e598 <rpl_fcntl@@Base+0x830>  // b.none
   1e1fc:	nop
   1e200:	ldrb	w0, [x22, #1]!
   1e204:	cmp	w0, #0x3d
   1e208:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   1e20c:	b.ne	1e200 <rpl_fcntl@@Base+0x498>  // b.any
   1e210:	sub	x21, x22, x23
   1e214:	ldr	x24, [x25]
   1e218:	mov	x19, x25
   1e21c:	mov	x20, #0x0                   	// #0
   1e220:	mov	x27, x24
   1e224:	cbnz	x24, 1e230 <rpl_fcntl@@Base+0x4c8>
   1e228:	b	1e458 <rpl_fcntl@@Base+0x6f0>
   1e22c:	sxtw	x20, w0
   1e230:	mov	x1, x23
   1e234:	mov	x2, x21
   1e238:	mov	x0, x27
   1e23c:	bl	a6c0 <strncmp@plt>
   1e240:	mov	w1, w0
   1e244:	mov	x0, x27
   1e248:	cbnz	w1, 1e258 <rpl_fcntl@@Base+0x4f0>
   1e24c:	bl	a340 <strlen@plt>
   1e250:	cmp	x0, x21
   1e254:	b.eq	1e398 <rpl_fcntl@@Base+0x630>  // b.none
   1e258:	ldr	x27, [x19, #32]!
   1e25c:	add	w0, w20, #0x1
   1e260:	cbnz	x27, 1e22c <rpl_fcntl@@Base+0x4c4>
   1e264:	ldr	w1, [sp, #104]
   1e268:	cbz	w1, 1e408 <rpl_fcntl@@Base+0x6a0>
   1e26c:	ldr	w1, [sp, #108]
   1e270:	sxtw	x0, w0
   1e274:	str	x0, [sp, #168]
   1e278:	cbnz	w1, 1e2e8 <rpl_fcntl@@Base+0x580>
   1e27c:	mov	x3, x25
   1e280:	mov	w0, #0xffffffff            	// #-1
   1e284:	mov	x19, #0x0                   	// #0
   1e288:	mov	x4, #0x0                   	// #0
   1e28c:	stp	w0, wzr, [sp, #156]
   1e290:	str	wzr, [sp, #164]
   1e294:	mov	x0, x24
   1e298:	mov	x2, x21
   1e29c:	mov	x1, x23
   1e2a0:	stp	x4, x3, [sp, #136]
   1e2a4:	bl	a6c0 <strncmp@plt>
   1e2a8:	ldp	x4, x3, [sp, #136]
   1e2ac:	cbnz	w0, 1e2d8 <rpl_fcntl@@Base+0x570>
   1e2b0:	cbz	x19, 1e5ac <rpl_fcntl@@Base+0x844>
   1e2b4:	ldr	w1, [x3, #8]
   1e2b8:	ldr	w0, [x19, #8]
   1e2bc:	cmp	w1, w0
   1e2c0:	b.eq	1e6ac <rpl_fcntl@@Base+0x944>  // b.none
   1e2c4:	ldr	w0, [sp, #160]
   1e2c8:	cbnz	w0, 1e2d8 <rpl_fcntl@@Base+0x570>
   1e2cc:	cbz	x27, 1e64c <rpl_fcntl@@Base+0x8e4>
   1e2d0:	mov	w0, #0x1                   	// #1
   1e2d4:	strb	w0, [x27, x4]
   1e2d8:	ldr	x24, [x3, #32]!
   1e2dc:	add	x4, x4, #0x1
   1e2e0:	cbnz	x24, 1e294 <rpl_fcntl@@Base+0x52c>
   1e2e4:	b	1e374 <rpl_fcntl@@Base+0x60c>
   1e2e8:	mov	x4, x25
   1e2ec:	mov	w0, #0xffffffff            	// #-1
   1e2f0:	mov	x19, #0x0                   	// #0
   1e2f4:	mov	x3, #0x0                   	// #0
   1e2f8:	stp	w0, wzr, [sp, #156]
   1e2fc:	str	wzr, [sp, #164]
   1e300:	mov	x0, x24
   1e304:	mov	x2, x21
   1e308:	mov	x1, x23
   1e30c:	stp	x3, x4, [sp, #136]
   1e310:	bl	a6c0 <strncmp@plt>
   1e314:	ldp	x3, x4, [sp, #136]
   1e318:	cbnz	w0, 1e368 <rpl_fcntl@@Base+0x600>
   1e31c:	cbz	x19, 1e5a0 <rpl_fcntl@@Base+0x838>
   1e320:	ldr	w0, [sp, #160]
   1e324:	cbnz	w0, 1e368 <rpl_fcntl@@Base+0x600>
   1e328:	cbnz	x27, 1e35c <rpl_fcntl@@Base+0x5f4>
   1e32c:	ldr	x0, [sp, #168]
   1e330:	mov	x1, #0x1                   	// #1
   1e334:	stp	x3, x4, [sp, #136]
   1e338:	bl	a770 <calloc@plt>
   1e33c:	mov	x27, x0
   1e340:	mov	w0, #0x1                   	// #1
   1e344:	ldp	x3, x4, [sp, #136]
   1e348:	cbz	x27, 1e824 <rpl_fcntl@@Base+0xabc>
   1e34c:	str	w0, [sp, #164]
   1e350:	mov	w1, #0x1                   	// #1
   1e354:	ldr	w0, [sp, #156]
   1e358:	strb	w1, [x27, w0, sxtw]
   1e35c:	mov	w0, #0x1                   	// #1
   1e360:	strb	w0, [x27, x3]
   1e364:	nop
   1e368:	ldr	x24, [x4, #32]!
   1e36c:	add	x3, x3, #0x1
   1e370:	cbnz	x24, 1e300 <rpl_fcntl@@Base+0x598>
   1e374:	ldr	w0, [sp, #160]
   1e378:	cmp	x27, #0x0
   1e37c:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   1e380:	b.ne	1e6d0 <rpl_fcntl@@Base+0x968>  // b.any
   1e384:	mov	x27, x19
   1e388:	cbz	x27, 1e458 <rpl_fcntl@@Base+0x6f0>
   1e38c:	ldr	w20, [sp, #156]
   1e390:	mov	x19, x27
   1e394:	nop
   1e398:	ldr	w0, [x26]
   1e39c:	ldr	w3, [x19, #8]
   1e3a0:	add	w1, w0, #0x1
   1e3a4:	str	w1, [x26]
   1e3a8:	str	xzr, [x26, #32]
   1e3ac:	ldrb	w2, [x22]
   1e3b0:	cbnz	w2, 1e3f8 <rpl_fcntl@@Base+0x690>
   1e3b4:	cmp	w3, #0x1
   1e3b8:	b.eq	1e574 <rpl_fcntl@@Base+0x80c>  // b.none
   1e3bc:	ldr	x0, [sp, #112]
   1e3c0:	cbz	x0, 1e3c8 <rpl_fcntl@@Base+0x660>
   1e3c4:	str	w20, [x0]
   1e3c8:	ldr	x1, [x19, #16]
   1e3cc:	ldr	w0, [x19, #24]
   1e3d0:	cbz	x1, 1e3dc <rpl_fcntl@@Base+0x674>
   1e3d4:	str	w0, [x1]
   1e3d8:	mov	w0, #0x0                   	// #0
   1e3dc:	ldp	x19, x20, [sp, #16]
   1e3e0:	ldp	x21, x22, [sp, #32]
   1e3e4:	ldp	x23, x24, [sp, #48]
   1e3e8:	ldp	x25, x26, [sp, #64]
   1e3ec:	ldp	x27, x28, [sp, #80]
   1e3f0:	ldp	x29, x30, [sp], #176
   1e3f4:	ret
   1e3f8:	cbz	w3, 1e5c4 <rpl_fcntl@@Base+0x85c>
   1e3fc:	add	x22, x22, #0x1
   1e400:	str	x22, [x26, #16]
   1e404:	b	1e3bc <rpl_fcntl@@Base+0x654>
   1e408:	ldr	w0, [sp, #108]
   1e40c:	mov	w19, #0x0                   	// #0
   1e410:	mov	w20, #0x0                   	// #0
   1e414:	cbz	w0, 1e4c4 <rpl_fcntl@@Base+0x75c>
   1e418:	mov	w0, #0xffffffff            	// #-1
   1e41c:	str	w0, [sp, #156]
   1e420:	b	1e434 <rpl_fcntl@@Base+0x6cc>
   1e424:	mov	w19, #0x1                   	// #1
   1e428:	ldr	x24, [x25, #32]!
   1e42c:	add	w20, w20, #0x1
   1e430:	cbz	x24, 1e504 <rpl_fcntl@@Base+0x79c>
   1e434:	mov	x0, x24
   1e438:	mov	x2, x21
   1e43c:	mov	x1, x23
   1e440:	bl	a6c0 <strncmp@plt>
   1e444:	cbnz	w0, 1e428 <rpl_fcntl@@Base+0x6c0>
   1e448:	cbnz	x27, 1e424 <rpl_fcntl@@Base+0x6bc>
   1e44c:	mov	x27, x25
   1e450:	str	w20, [sp, #156]
   1e454:	b	1e428 <rpl_fcntl@@Base+0x6c0>
   1e458:	ldr	w0, [sp, #108]
   1e45c:	cbz	w0, 1e488 <rpl_fcntl@@Base+0x720>
   1e460:	ldrsw	x0, [x26]
   1e464:	ldr	x1, [sp, #120]
   1e468:	ldr	x0, [x1, x0, lsl #3]
   1e46c:	ldrb	w0, [x0, #1]
   1e470:	cmp	w0, #0x2d
   1e474:	b.eq	1e488 <rpl_fcntl@@Base+0x720>  // b.none
   1e478:	ldr	x0, [sp, #128]
   1e47c:	mov	w1, w28
   1e480:	bl	ab60 <strchr@plt>
   1e484:	cbnz	x0, 1e644 <rpl_fcntl@@Base+0x8dc>
   1e488:	ldr	w0, [sp, #104]
   1e48c:	cbnz	w0, 1e530 <rpl_fcntl@@Base+0x7c8>
   1e490:	ldr	w1, [x26]
   1e494:	mov	w0, #0x3f                  	// #63
   1e498:	str	wzr, [x26, #8]
   1e49c:	add	w1, w1, #0x1
   1e4a0:	str	w1, [x26]
   1e4a4:	str	xzr, [x26, #32]
   1e4a8:	ldp	x19, x20, [sp, #16]
   1e4ac:	ldp	x21, x22, [sp, #32]
   1e4b0:	ldp	x23, x24, [sp, #48]
   1e4b4:	ldp	x25, x26, [sp, #64]
   1e4b8:	ldp	x27, x28, [sp, #80]
   1e4bc:	ldp	x29, x30, [sp], #176
   1e4c0:	ret
   1e4c4:	mov	w0, #0xffffffff            	// #-1
   1e4c8:	str	w0, [sp, #156]
   1e4cc:	mov	x0, x24
   1e4d0:	mov	x2, x21
   1e4d4:	mov	x1, x23
   1e4d8:	bl	a6c0 <strncmp@plt>
   1e4dc:	cbnz	w0, 1e4f8 <rpl_fcntl@@Base+0x790>
   1e4e0:	cbz	x27, 1e5b8 <rpl_fcntl@@Base+0x850>
   1e4e4:	ldr	w0, [x25, #8]
   1e4e8:	ldr	w1, [x27, #8]
   1e4ec:	cmp	w1, w0
   1e4f0:	b.eq	1e5dc <rpl_fcntl@@Base+0x874>  // b.none
   1e4f4:	mov	w19, #0x1                   	// #1
   1e4f8:	ldr	x24, [x25, #32]!
   1e4fc:	add	w20, w20, #0x1
   1e500:	cbnz	x24, 1e4cc <rpl_fcntl@@Base+0x764>
   1e504:	cbz	w19, 1e388 <rpl_fcntl@@Base+0x620>
   1e508:	mov	x0, x23
   1e50c:	bl	a340 <strlen@plt>
   1e510:	ldr	w1, [x26]
   1e514:	add	x23, x23, x0
   1e518:	mov	w0, #0x3f                  	// #63
   1e51c:	str	wzr, [x26, #8]
   1e520:	add	w1, w1, #0x1
   1e524:	str	w1, [x26]
   1e528:	str	x23, [x26, #32]
   1e52c:	b	1e3dc <rpl_fcntl@@Base+0x674>
   1e530:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
   1e534:	mov	w2, #0x5                   	// #5
   1e538:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1e53c:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   1e540:	ldr	x3, [x3, #3816]
   1e544:	add	x1, x1, #0xf10
   1e548:	add	x0, x0, #0x120
   1e54c:	ldr	x19, [x3]
   1e550:	bl	ada0 <dcgettext@plt>
   1e554:	mov	x1, x0
   1e558:	ldr	x0, [sp, #120]
   1e55c:	ldr	x4, [x26, #32]
   1e560:	ldr	x2, [x0]
   1e564:	mov	x0, x19
   1e568:	ldr	x3, [sp, #176]
   1e56c:	bl	afa0 <fprintf@plt>
   1e570:	b	1e490 <rpl_fcntl@@Base+0x728>
   1e574:	ldr	w2, [sp, #152]
   1e578:	cmp	w1, w2
   1e57c:	b.ge	1e680 <rpl_fcntl@@Base+0x918>  // b.tcont
   1e580:	ldr	x2, [sp, #120]
   1e584:	add	w0, w0, #0x2
   1e588:	ldr	x1, [x2, w1, sxtw #3]
   1e58c:	str	w0, [x26]
   1e590:	str	x1, [x26, #16]
   1e594:	b	1e3bc <rpl_fcntl@@Base+0x654>
   1e598:	mov	x21, #0x0                   	// #0
   1e59c:	b	1e214 <rpl_fcntl@@Base+0x4ac>
   1e5a0:	mov	x19, x4
   1e5a4:	str	w3, [sp, #156]
   1e5a8:	b	1e368 <rpl_fcntl@@Base+0x600>
   1e5ac:	mov	x19, x3
   1e5b0:	str	w4, [sp, #156]
   1e5b4:	b	1e2d8 <rpl_fcntl@@Base+0x570>
   1e5b8:	mov	x27, x25
   1e5bc:	str	w20, [sp, #156]
   1e5c0:	b	1e4f8 <rpl_fcntl@@Base+0x790>
   1e5c4:	ldr	w0, [sp, #104]
   1e5c8:	cbnz	w0, 1e600 <rpl_fcntl@@Base+0x898>
   1e5cc:	ldr	w1, [x19, #24]
   1e5d0:	mov	w0, #0x3f                  	// #63
   1e5d4:	str	w1, [x26, #8]
   1e5d8:	b	1e3dc <rpl_fcntl@@Base+0x674>
   1e5dc:	ldr	x0, [x25, #16]
   1e5e0:	ldr	x1, [x27, #16]
   1e5e4:	cmp	x1, x0
   1e5e8:	b.ne	1e4f4 <rpl_fcntl@@Base+0x78c>  // b.any
   1e5ec:	ldr	w0, [x25, #24]
   1e5f0:	ldr	w1, [x27, #24]
   1e5f4:	cmp	w1, w0
   1e5f8:	csinc	w19, w19, wzr, eq  // eq = none
   1e5fc:	b	1e4f8 <rpl_fcntl@@Base+0x790>
   1e600:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
   1e604:	mov	w2, #0x5                   	// #5
   1e608:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1e60c:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   1e610:	ldr	x3, [x3, #3816]
   1e614:	add	x1, x1, #0xf30
   1e618:	add	x0, x0, #0x120
   1e61c:	ldr	x20, [x3]
   1e620:	bl	ada0 <dcgettext@plt>
   1e624:	mov	x1, x0
   1e628:	ldr	x0, [sp, #120]
   1e62c:	ldr	x4, [x19]
   1e630:	ldr	x2, [x0]
   1e634:	mov	x0, x20
   1e638:	ldr	x3, [sp, #176]
   1e63c:	bl	afa0 <fprintf@plt>
   1e640:	b	1e5cc <rpl_fcntl@@Base+0x864>
   1e644:	mov	w0, #0xffffffff            	// #-1
   1e648:	b	1e3dc <rpl_fcntl@@Base+0x674>
   1e64c:	ldr	x0, [sp, #168]
   1e650:	mov	x1, #0x1                   	// #1
   1e654:	stp	x4, x3, [sp, #136]
   1e658:	bl	a770 <calloc@plt>
   1e65c:	mov	x27, x0
   1e660:	mov	w0, #0x1                   	// #1
   1e664:	ldp	x4, x3, [sp, #136]
   1e668:	cbz	x27, 1e82c <rpl_fcntl@@Base+0xac4>
   1e66c:	str	w0, [sp, #164]
   1e670:	mov	w1, #0x1                   	// #1
   1e674:	ldr	w0, [sp, #156]
   1e678:	strb	w1, [x27, w0, sxtw]
   1e67c:	b	1e2d0 <rpl_fcntl@@Base+0x568>
   1e680:	ldr	w0, [sp, #104]
   1e684:	cbnz	w0, 1e7e0 <rpl_fcntl@@Base+0xa78>
   1e688:	ldr	x2, [sp, #128]
   1e68c:	mov	w0, #0x3a                  	// #58
   1e690:	ldr	w1, [x19, #24]
   1e694:	str	w1, [x26, #8]
   1e698:	mov	w1, #0x3f                  	// #63
   1e69c:	ldrb	w2, [x2]
   1e6a0:	cmp	w2, w0
   1e6a4:	csel	w0, w0, w1, eq  // eq = none
   1e6a8:	b	1e3dc <rpl_fcntl@@Base+0x674>
   1e6ac:	ldr	x0, [x3, #16]
   1e6b0:	ldr	x1, [x19, #16]
   1e6b4:	cmp	x1, x0
   1e6b8:	b.ne	1e2c4 <rpl_fcntl@@Base+0x55c>  // b.any
   1e6bc:	ldr	w0, [x3, #24]
   1e6c0:	ldr	w1, [x19, #24]
   1e6c4:	cmp	w1, w0
   1e6c8:	b.ne	1e2c4 <rpl_fcntl@@Base+0x55c>  // b.any
   1e6cc:	b	1e2d8 <rpl_fcntl@@Base+0x570>
   1e6d0:	adrp	x21, 4c000 <vasnprintf@@Base+0x1b848>
   1e6d4:	ldr	w0, [sp, #160]
   1e6d8:	ldr	x23, [x21, #3816]
   1e6dc:	ldr	x19, [x23]
   1e6e0:	cbz	w0, 1e730 <rpl_fcntl@@Base+0x9c8>
   1e6e4:	mov	w2, #0x5                   	// #5
   1e6e8:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1e6ec:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   1e6f0:	add	x1, x1, #0xeb8
   1e6f4:	add	x0, x0, #0x120
   1e6f8:	bl	ada0 <dcgettext@plt>
   1e6fc:	ldr	x1, [sp, #120]
   1e700:	ldr	x4, [x26, #32]
   1e704:	ldr	x2, [x1]
   1e708:	mov	x1, x0
   1e70c:	ldr	x3, [sp, #176]
   1e710:	mov	x0, x19
   1e714:	bl	afa0 <fprintf@plt>
   1e718:	ldr	x23, [x26, #32]
   1e71c:	ldr	w0, [sp, #164]
   1e720:	cbz	w0, 1e508 <rpl_fcntl@@Base+0x7a0>
   1e724:	mov	x0, x27
   1e728:	bl	aa50 <free@plt>
   1e72c:	b	1e508 <rpl_fcntl@@Base+0x7a0>
   1e730:	mov	x0, x19
   1e734:	bl	a3a0 <flockfile@plt>
   1e738:	mov	w2, #0x5                   	// #5
   1e73c:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1e740:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   1e744:	add	x1, x1, #0xed8
   1e748:	add	x0, x0, #0x120
   1e74c:	add	x20, x20, #0x1
   1e750:	ldr	x19, [x23]
   1e754:	bl	ada0 <dcgettext@plt>
   1e758:	ldr	x1, [sp, #120]
   1e75c:	mov	x22, x23
   1e760:	ldr	x4, [x26, #32]
   1e764:	add	x20, x20, x27
   1e768:	ldr	x2, [x1]
   1e76c:	mov	x1, x0
   1e770:	ldr	x3, [sp, #176]
   1e774:	mov	x0, x19
   1e778:	mov	x19, x27
   1e77c:	bl	afa0 <fprintf@plt>
   1e780:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1e784:	ldr	x0, [x23]
   1e788:	add	x23, x1, #0xf08
   1e78c:	b	1e79c <rpl_fcntl@@Base+0xa34>
   1e790:	add	x25, x25, #0x20
   1e794:	cmp	x20, x19
   1e798:	b.eq	1e7c0 <rpl_fcntl@@Base+0xa58>  // b.none
   1e79c:	ldrb	w2, [x19]
   1e7a0:	add	x19, x19, #0x1
   1e7a4:	cbz	w2, 1e790 <rpl_fcntl@@Base+0xa28>
   1e7a8:	ldr	x3, [x25]
   1e7ac:	mov	x1, x23
   1e7b0:	ldr	x2, [sp, #176]
   1e7b4:	bl	afa0 <fprintf@plt>
   1e7b8:	ldr	x0, [x22]
   1e7bc:	b	1e790 <rpl_fcntl@@Base+0xa28>
   1e7c0:	mov	x1, x0
   1e7c4:	mov	w0, #0xa                   	// #10
   1e7c8:	bl	a4e0 <fputc@plt>
   1e7cc:	ldr	x21, [x21, #3816]
   1e7d0:	ldr	x0, [x21]
   1e7d4:	bl	a620 <funlockfile@plt>
   1e7d8:	ldr	x23, [x26, #32]
   1e7dc:	b	1e71c <rpl_fcntl@@Base+0x9b4>
   1e7e0:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
   1e7e4:	mov	w2, #0x5                   	// #5
   1e7e8:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1e7ec:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   1e7f0:	ldr	x3, [x3, #3816]
   1e7f4:	add	x1, x1, #0xf60
   1e7f8:	add	x0, x0, #0x120
   1e7fc:	ldr	x20, [x3]
   1e800:	bl	ada0 <dcgettext@plt>
   1e804:	mov	x1, x0
   1e808:	ldr	x0, [sp, #120]
   1e80c:	ldr	x4, [x19]
   1e810:	ldr	x2, [x0]
   1e814:	mov	x0, x20
   1e818:	ldr	x3, [sp, #176]
   1e81c:	bl	afa0 <fprintf@plt>
   1e820:	b	1e688 <rpl_fcntl@@Base+0x920>
   1e824:	str	w0, [sp, #160]
   1e828:	b	1e368 <rpl_fcntl@@Base+0x600>
   1e82c:	str	w0, [sp, #160]
   1e830:	b	1e2d8 <rpl_fcntl@@Base+0x570>
   1e834:	nop

000000000001e838 <_getopt_internal_r@@Base>:
   1e838:	sub	sp, sp, #0x70
   1e83c:	cmp	w0, #0x0
   1e840:	stp	x29, x30, [sp, #16]
   1e844:	add	x29, sp, #0x10
   1e848:	stp	x25, x26, [sp, #80]
   1e84c:	ldr	w26, [x6, #4]
   1e850:	b.le	1ed00 <_getopt_internal_r@@Base+0x4c8>
   1e854:	stp	x19, x20, [sp, #32]
   1e858:	mov	w20, w0
   1e85c:	ldr	w0, [x6]
   1e860:	stp	x21, x22, [sp, #48]
   1e864:	mov	x19, x6
   1e868:	mov	x25, x3
   1e86c:	stp	x23, x24, [sp, #64]
   1e870:	mov	x22, x4
   1e874:	mov	x23, x1
   1e878:	stp	x27, x28, [sp, #96]
   1e87c:	mov	x24, x2
   1e880:	mov	w27, w5
   1e884:	str	xzr, [x6, #16]
   1e888:	cbz	w0, 1ea7c <_getopt_internal_r@@Base+0x244>
   1e88c:	ldr	w1, [x6, #24]
   1e890:	cbnz	w1, 1e8c4 <_getopt_internal_r@@Base+0x8c>
   1e894:	dup	v0.2s, w0
   1e898:	str	xzr, [x19, #32]
   1e89c:	stur	d0, [x19, #44]
   1e8a0:	ldrb	w0, [x24]
   1e8a4:	cmp	w0, #0x2d
   1e8a8:	b.eq	1e988 <_getopt_internal_r@@Base+0x150>  // b.none
   1e8ac:	cmp	w0, #0x2b
   1e8b0:	b.eq	1eca4 <_getopt_internal_r@@Base+0x46c>  // b.none
   1e8b4:	mov	x21, #0x0                   	// #0
   1e8b8:	cbz	w7, 1ec28 <_getopt_internal_r@@Base+0x3f0>
   1e8bc:	str	wzr, [x19, #40]
   1e8c0:	b	1e998 <_getopt_internal_r@@Base+0x160>
   1e8c4:	ldrb	w0, [x2]
   1e8c8:	mov	w1, #0xfd                  	// #253
   1e8cc:	ldr	x21, [x6, #32]
   1e8d0:	sub	w2, w0, #0x2b
   1e8d4:	tst	w2, w1
   1e8d8:	b.ne	1e9a4 <_getopt_internal_r@@Base+0x16c>  // b.any
   1e8dc:	ldrb	w0, [x24, #1]
   1e8e0:	add	x24, x24, #0x1
   1e8e4:	cmp	w0, #0x3a
   1e8e8:	csel	w26, w26, wzr, ne  // ne = any
   1e8ec:	cbnz	x21, 1e9b0 <_getopt_internal_r@@Base+0x178>
   1e8f0:	ldr	w8, [x19]
   1e8f4:	ldr	w0, [x19, #48]
   1e8f8:	cmp	w0, w8
   1e8fc:	b.le	1e904 <_getopt_internal_r@@Base+0xcc>
   1e900:	str	w8, [x19, #48]
   1e904:	ldr	w0, [x19, #44]
   1e908:	cmp	w8, w0
   1e90c:	b.ge	1e918 <_getopt_internal_r@@Base+0xe0>  // b.tcont
   1e910:	mov	w0, w8
   1e914:	str	w8, [x19, #44]
   1e918:	ldr	w1, [x19, #40]
   1e91c:	cmp	w1, #0x1
   1e920:	b.eq	1eacc <_getopt_internal_r@@Base+0x294>  // b.none
   1e924:	cmp	w20, w8
   1e928:	b.eq	1eaa4 <_getopt_internal_r@@Base+0x26c>  // b.none
   1e92c:	ldr	x21, [x23, w8, sxtw #3]
   1e930:	ldrb	w0, [x21]
   1e934:	cmp	w0, #0x2d
   1e938:	b.ne	1ea38 <_getopt_internal_r@@Base+0x200>  // b.any
   1e93c:	ldrb	w0, [x21, #1]
   1e940:	cmp	w0, #0x2d
   1e944:	b.ne	1ea38 <_getopt_internal_r@@Base+0x200>  // b.any
   1e948:	ldrb	w0, [x21, #2]
   1e94c:	cbnz	w0, 1ea38 <_getopt_internal_r@@Base+0x200>
   1e950:	ldp	w1, w0, [x19, #44]
   1e954:	add	w8, w8, #0x1
   1e958:	str	w8, [x19]
   1e95c:	cmp	w1, w0
   1e960:	b.eq	1ed08 <_getopt_internal_r@@Base+0x4d0>  // b.none
   1e964:	cmp	w8, w0
   1e968:	b.eq	1e97c <_getopt_internal_r@@Base+0x144>  // b.none
   1e96c:	mov	x1, x19
   1e970:	mov	x0, x23
   1e974:	bl	1dfc0 <rpl_fcntl@@Base+0x258>
   1e978:	ldr	w1, [x19, #44]
   1e97c:	str	w20, [x19]
   1e980:	str	w20, [x19, #48]
   1e984:	b	1eaa8 <_getopt_internal_r@@Base+0x270>
   1e988:	add	x24, x24, #0x1
   1e98c:	mov	w0, #0x2                   	// #2
   1e990:	mov	x21, #0x0                   	// #0
   1e994:	str	w0, [x19, #40]
   1e998:	mov	w0, #0x1                   	// #1
   1e99c:	str	w0, [x19, #24]
   1e9a0:	ldrb	w0, [x24]
   1e9a4:	cmp	w0, #0x3a
   1e9a8:	csel	w26, w26, wzr, ne  // ne = any
   1e9ac:	cbz	x21, 1e8f0 <_getopt_internal_r@@Base+0xb8>
   1e9b0:	ldrb	w0, [x21]
   1e9b4:	cbz	w0, 1e8f0 <_getopt_internal_r@@Base+0xb8>
   1e9b8:	add	x28, x21, #0x1
   1e9bc:	str	x28, [x19, #32]
   1e9c0:	mov	x0, x24
   1e9c4:	ldrb	w27, [x21]
   1e9c8:	mov	w1, w27
   1e9cc:	bl	ab60 <strchr@plt>
   1e9d0:	ldrb	w1, [x21, #1]
   1e9d4:	mov	x2, x0
   1e9d8:	mov	w0, w27
   1e9dc:	cbnz	w1, 1e9ec <_getopt_internal_r@@Base+0x1b4>
   1e9e0:	ldr	w1, [x19]
   1e9e4:	add	w1, w1, #0x1
   1e9e8:	str	w1, [x19]
   1e9ec:	sub	w1, w27, #0x3a
   1e9f0:	cmp	x2, #0x0
   1e9f4:	and	w1, w1, #0xff
   1e9f8:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   1e9fc:	b.ls	1ecb4 <_getopt_internal_r@@Base+0x47c>  // b.plast
   1ea00:	ldrb	w3, [x2]
   1ea04:	ldrb	w1, [x2, #1]
   1ea08:	cmp	w3, #0x57
   1ea0c:	b.eq	1ebb8 <_getopt_internal_r@@Base+0x380>  // b.none
   1ea10:	cmp	w1, #0x3a
   1ea14:	b.eq	1ec48 <_getopt_internal_r@@Base+0x410>  // b.none
   1ea18:	ldp	x29, x30, [sp, #16]
   1ea1c:	ldp	x19, x20, [sp, #32]
   1ea20:	ldp	x21, x22, [sp, #48]
   1ea24:	ldp	x23, x24, [sp, #64]
   1ea28:	ldp	x25, x26, [sp, #80]
   1ea2c:	ldp	x27, x28, [sp, #96]
   1ea30:	add	sp, sp, #0x70
   1ea34:	ret
   1ea38:	ldrb	w0, [x21]
   1ea3c:	cmp	w0, #0x2d
   1ea40:	b.eq	1eb3c <_getopt_internal_r@@Base+0x304>  // b.none
   1ea44:	ldr	w0, [x19, #40]
   1ea48:	cbz	w0, 1ecf0 <_getopt_internal_r@@Base+0x4b8>
   1ea4c:	add	w8, w8, #0x1
   1ea50:	mov	w0, #0x1                   	// #1
   1ea54:	ldp	x23, x24, [sp, #64]
   1ea58:	ldp	x27, x28, [sp, #96]
   1ea5c:	str	w8, [x19]
   1ea60:	str	x21, [x19, #16]
   1ea64:	ldp	x19, x20, [sp, #32]
   1ea68:	ldp	x21, x22, [sp, #48]
   1ea6c:	ldp	x29, x30, [sp, #16]
   1ea70:	ldp	x25, x26, [sp, #80]
   1ea74:	add	sp, sp, #0x70
   1ea78:	ret
   1ea7c:	mov	w1, #0x1                   	// #1
   1ea80:	mov	w0, w1
   1ea84:	str	w1, [x6]
   1ea88:	dup	v0.2s, w0
   1ea8c:	str	xzr, [x19, #32]
   1ea90:	stur	d0, [x19, #44]
   1ea94:	ldrb	w0, [x24]
   1ea98:	cmp	w0, #0x2d
   1ea9c:	b.ne	1e8ac <_getopt_internal_r@@Base+0x74>  // b.any
   1eaa0:	b	1e988 <_getopt_internal_r@@Base+0x150>
   1eaa4:	ldp	w1, w20, [x19, #44]
   1eaa8:	cmp	w20, w1
   1eaac:	b.eq	1ecf0 <_getopt_internal_r@@Base+0x4b8>  // b.none
   1eab0:	mov	w0, #0xffffffff            	// #-1
   1eab4:	ldp	x21, x22, [sp, #48]
   1eab8:	ldp	x23, x24, [sp, #64]
   1eabc:	ldp	x27, x28, [sp, #96]
   1eac0:	str	w1, [x19]
   1eac4:	ldp	x19, x20, [sp, #32]
   1eac8:	b	1ea6c <_getopt_internal_r@@Base+0x234>
   1eacc:	ldr	w6, [x19, #48]
   1ead0:	cmp	w6, w0
   1ead4:	b.eq	1ec90 <_getopt_internal_r@@Base+0x458>  // b.none
   1ead8:	cmp	w8, w6
   1eadc:	b.eq	1eaf0 <_getopt_internal_r@@Base+0x2b8>  // b.none
   1eae0:	mov	x1, x19
   1eae4:	mov	x0, x23
   1eae8:	bl	1dfc0 <rpl_fcntl@@Base+0x258>
   1eaec:	ldr	w6, [x19]
   1eaf0:	cmp	w20, w6
   1eaf4:	b.le	1ed74 <_getopt_internal_r@@Base+0x53c>
   1eaf8:	sxtw	x6, w6
   1eafc:	b	1eb10 <_getopt_internal_r@@Base+0x2d8>
   1eb00:	add	w8, w2, #0x1
   1eb04:	str	w8, [x19]
   1eb08:	cmp	w20, w6
   1eb0c:	b.le	1eb34 <_getopt_internal_r@@Base+0x2fc>
   1eb10:	ldr	x0, [x23, x6, lsl #3]
   1eb14:	mov	w2, w6
   1eb18:	mov	w8, w6
   1eb1c:	add	x6, x6, #0x1
   1eb20:	ldrb	w1, [x0]
   1eb24:	cmp	w1, #0x2d
   1eb28:	b.ne	1eb00 <_getopt_internal_r@@Base+0x2c8>  // b.any
   1eb2c:	ldrb	w0, [x0, #1]
   1eb30:	cbz	w0, 1eb00 <_getopt_internal_r@@Base+0x2c8>
   1eb34:	str	w8, [x19, #48]
   1eb38:	b	1e924 <_getopt_internal_r@@Base+0xec>
   1eb3c:	ldrb	w1, [x21, #1]
   1eb40:	cbz	w1, 1ea44 <_getopt_internal_r@@Base+0x20c>
   1eb44:	cbz	x25, 1ebb0 <_getopt_internal_r@@Base+0x378>
   1eb48:	cmp	w1, #0x2d
   1eb4c:	b.eq	1eda0 <_getopt_internal_r@@Base+0x568>  // b.none
   1eb50:	cbz	w27, 1ebb0 <_getopt_internal_r@@Base+0x378>
   1eb54:	ldrb	w0, [x21, #2]
   1eb58:	cbnz	w0, 1eb68 <_getopt_internal_r@@Base+0x330>
   1eb5c:	mov	x0, x24
   1eb60:	bl	ab60 <strchr@plt>
   1eb64:	cbnz	x0, 1ebb0 <_getopt_internal_r@@Base+0x378>
   1eb68:	adrp	x0, 33000 <vasnprintf@@Base+0x2848>
   1eb6c:	add	x0, x0, #0xfa0
   1eb70:	str	x0, [sp]
   1eb74:	add	x21, x21, #0x1
   1eb78:	str	x21, [x19, #32]
   1eb7c:	mov	w5, w27
   1eb80:	mov	w7, w26
   1eb84:	mov	x6, x19
   1eb88:	mov	x4, x22
   1eb8c:	mov	x3, x25
   1eb90:	mov	x2, x24
   1eb94:	mov	x1, x23
   1eb98:	mov	w0, w20
   1eb9c:	bl	1e1b0 <rpl_fcntl@@Base+0x448>
   1eba0:	cmn	w0, #0x1
   1eba4:	b.ne	1ea18 <_getopt_internal_r@@Base+0x1e0>  // b.any
   1eba8:	ldrsw	x0, [x19]
   1ebac:	ldr	x21, [x23, x0, lsl #3]
   1ebb0:	add	x21, x21, #0x1
   1ebb4:	b	1e9b8 <_getopt_internal_r@@Base+0x180>
   1ebb8:	cmp	w1, #0x3b
   1ebbc:	ccmp	x25, #0x0, #0x4, eq  // eq = none
   1ebc0:	b.eq	1ea10 <_getopt_internal_r@@Base+0x1d8>  // b.none
   1ebc4:	ldrb	w0, [x21, #1]
   1ebc8:	cbnz	w0, 1ebdc <_getopt_internal_r@@Base+0x3a4>
   1ebcc:	ldr	w0, [x19]
   1ebd0:	cmp	w0, w20
   1ebd4:	b.eq	1edd8 <_getopt_internal_r@@Base+0x5a0>  // b.none
   1ebd8:	ldr	x28, [x23, w0, sxtw #3]
   1ebdc:	adrp	x0, 33000 <vasnprintf@@Base+0x2848>
   1ebe0:	add	x0, x0, #0xff8
   1ebe4:	mov	w7, w26
   1ebe8:	mov	x6, x19
   1ebec:	mov	x4, x22
   1ebf0:	mov	x3, x25
   1ebf4:	mov	x2, x24
   1ebf8:	mov	x1, x23
   1ebfc:	str	x0, [sp]
   1ec00:	mov	w0, w20
   1ec04:	mov	w5, #0x0                   	// #0
   1ec08:	str	xzr, [x19, #16]
   1ec0c:	str	x28, [x19, #32]
   1ec10:	bl	1e1b0 <rpl_fcntl@@Base+0x448>
   1ec14:	ldp	x19, x20, [sp, #32]
   1ec18:	ldp	x21, x22, [sp, #48]
   1ec1c:	ldp	x23, x24, [sp, #64]
   1ec20:	ldp	x27, x28, [sp, #96]
   1ec24:	b	1ea6c <_getopt_internal_r@@Base+0x234>
   1ec28:	adrp	x0, 33000 <vasnprintf@@Base+0x2848>
   1ec2c:	add	x0, x0, #0xf88
   1ec30:	bl	aed0 <getenv@plt>
   1ec34:	ldr	x21, [x19, #32]
   1ec38:	cbnz	x0, 1e8bc <_getopt_internal_r@@Base+0x84>
   1ec3c:	mov	w0, #0x1                   	// #1
   1ec40:	str	w0, [x19, #40]
   1ec44:	b	1e998 <_getopt_internal_r@@Base+0x160>
   1ec48:	ldrb	w1, [x2, #2]
   1ec4c:	ldrb	w2, [x21, #1]
   1ec50:	cmp	w1, #0x3a
   1ec54:	b.eq	1ed50 <_getopt_internal_r@@Base+0x518>  // b.none
   1ec58:	ldr	w1, [x19]
   1ec5c:	cbnz	w2, 1ece0 <_getopt_internal_r@@Base+0x4a8>
   1ec60:	cmp	w20, w1
   1ec64:	b.eq	1ed80 <_getopt_internal_r@@Base+0x548>  // b.none
   1ec68:	ldr	x2, [x23, w1, sxtw #3]
   1ec6c:	add	w1, w1, #0x1
   1ec70:	str	w1, [x19]
   1ec74:	str	x2, [x19, #16]
   1ec78:	ldp	x21, x22, [sp, #48]
   1ec7c:	ldp	x23, x24, [sp, #64]
   1ec80:	ldp	x27, x28, [sp, #96]
   1ec84:	str	xzr, [x19, #32]
   1ec88:	ldp	x19, x20, [sp, #32]
   1ec8c:	b	1ea6c <_getopt_internal_r@@Base+0x234>
   1ec90:	cmp	w8, w0
   1ec94:	b.eq	1ee80 <_getopt_internal_r@@Base+0x648>  // b.none
   1ec98:	mov	w6, w8
   1ec9c:	str	w8, [x19, #44]
   1eca0:	b	1eaf0 <_getopt_internal_r@@Base+0x2b8>
   1eca4:	add	x24, x24, #0x1
   1eca8:	mov	x21, #0x0                   	// #0
   1ecac:	str	wzr, [x19, #40]
   1ecb0:	b	1e998 <_getopt_internal_r@@Base+0x160>
   1ecb4:	cbnz	w26, 1ed14 <_getopt_internal_r@@Base+0x4dc>
   1ecb8:	mov	w0, #0x3f                  	// #63
   1ecbc:	ldp	x29, x30, [sp, #16]
   1ecc0:	ldp	x21, x22, [sp, #48]
   1ecc4:	ldp	x23, x24, [sp, #64]
   1ecc8:	str	w27, [x19, #8]
   1eccc:	ldp	x19, x20, [sp, #32]
   1ecd0:	ldp	x25, x26, [sp, #80]
   1ecd4:	ldp	x27, x28, [sp, #96]
   1ecd8:	add	sp, sp, #0x70
   1ecdc:	ret
   1ece0:	add	w1, w1, #0x1
   1ece4:	str	w1, [x19]
   1ece8:	str	x28, [x19, #16]
   1ecec:	b	1ec78 <_getopt_internal_r@@Base+0x440>
   1ecf0:	ldp	x19, x20, [sp, #32]
   1ecf4:	ldp	x21, x22, [sp, #48]
   1ecf8:	ldp	x23, x24, [sp, #64]
   1ecfc:	ldp	x27, x28, [sp, #96]
   1ed00:	mov	w0, #0xffffffff            	// #-1
   1ed04:	b	1ea6c <_getopt_internal_r@@Base+0x234>
   1ed08:	mov	w1, w8
   1ed0c:	str	w8, [x19, #44]
   1ed10:	b	1e97c <_getopt_internal_r@@Base+0x144>
   1ed14:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
   1ed18:	mov	w2, #0x5                   	// #5
   1ed1c:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1ed20:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   1ed24:	ldr	x3, [x3, #3816]
   1ed28:	add	x1, x1, #0xfa8
   1ed2c:	add	x0, x0, #0x120
   1ed30:	ldr	x20, [x3]
   1ed34:	bl	ada0 <dcgettext@plt>
   1ed38:	ldr	x2, [x23]
   1ed3c:	mov	x1, x0
   1ed40:	mov	w3, w27
   1ed44:	mov	x0, x20
   1ed48:	bl	afa0 <fprintf@plt>
   1ed4c:	b	1ecb8 <_getopt_internal_r@@Base+0x480>
   1ed50:	cbz	w2, 1ed68 <_getopt_internal_r@@Base+0x530>
   1ed54:	ldr	w1, [x19]
   1ed58:	str	x28, [x19, #16]
   1ed5c:	add	w1, w1, #0x1
   1ed60:	str	w1, [x19]
   1ed64:	b	1ec78 <_getopt_internal_r@@Base+0x440>
   1ed68:	mov	x28, #0x0                   	// #0
   1ed6c:	str	x28, [x19, #16]
   1ed70:	b	1ec78 <_getopt_internal_r@@Base+0x440>
   1ed74:	mov	w8, w6
   1ed78:	str	w8, [x19, #48]
   1ed7c:	b	1e924 <_getopt_internal_r@@Base+0xec>
   1ed80:	cbnz	w26, 1ee08 <_getopt_internal_r@@Base+0x5d0>
   1ed84:	str	w27, [x19, #8]
   1ed88:	mov	w1, #0x3a                  	// #58
   1ed8c:	mov	w0, #0x3f                  	// #63
   1ed90:	ldrb	w2, [x24]
   1ed94:	cmp	w2, w1
   1ed98:	csel	w0, w1, w0, eq  // eq = none
   1ed9c:	b	1ec78 <_getopt_internal_r@@Base+0x440>
   1eda0:	adrp	x0, 33000 <vasnprintf@@Base+0x2848>
   1eda4:	add	x0, x0, #0xf98
   1eda8:	str	x0, [sp]
   1edac:	add	x21, x21, #0x2
   1edb0:	mov	w7, w26
   1edb4:	mov	x6, x19
   1edb8:	mov	w5, w27
   1edbc:	mov	x4, x22
   1edc0:	mov	x3, x25
   1edc4:	mov	x2, x24
   1edc8:	mov	x1, x23
   1edcc:	mov	w0, w20
   1edd0:	str	x21, [x19, #32]
   1edd4:	b	1ec10 <_getopt_internal_r@@Base+0x3d8>
   1edd8:	cbnz	w26, 1ee44 <_getopt_internal_r@@Base+0x60c>
   1eddc:	ldp	x21, x22, [sp, #48]
   1ede0:	str	w27, [x19, #8]
   1ede4:	mov	w1, #0x3a                  	// #58
   1ede8:	mov	w0, #0x3f                  	// #63
   1edec:	ldrb	w2, [x24]
   1edf0:	ldp	x19, x20, [sp, #32]
   1edf4:	cmp	w2, w1
   1edf8:	csel	w0, w1, w0, eq  // eq = none
   1edfc:	ldp	x23, x24, [sp, #64]
   1ee00:	ldp	x27, x28, [sp, #96]
   1ee04:	b	1ea6c <_getopt_internal_r@@Base+0x234>
   1ee08:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
   1ee0c:	mov	w2, #0x5                   	// #5
   1ee10:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1ee14:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   1ee18:	ldr	x3, [x3, #3816]
   1ee1c:	add	x1, x1, #0xfc8
   1ee20:	add	x0, x0, #0x120
   1ee24:	ldr	x20, [x3]
   1ee28:	bl	ada0 <dcgettext@plt>
   1ee2c:	ldr	x2, [x23]
   1ee30:	mov	x1, x0
   1ee34:	mov	w3, w27
   1ee38:	mov	x0, x20
   1ee3c:	bl	afa0 <fprintf@plt>
   1ee40:	b	1ed84 <_getopt_internal_r@@Base+0x54c>
   1ee44:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
   1ee48:	mov	w2, #0x5                   	// #5
   1ee4c:	adrp	x1, 33000 <vasnprintf@@Base+0x2848>
   1ee50:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   1ee54:	ldr	x3, [x3, #3816]
   1ee58:	add	x1, x1, #0xfc8
   1ee5c:	add	x0, x0, #0x120
   1ee60:	ldr	x20, [x3]
   1ee64:	bl	ada0 <dcgettext@plt>
   1ee68:	ldr	x2, [x23]
   1ee6c:	mov	x1, x0
   1ee70:	mov	w3, w27
   1ee74:	mov	x0, x20
   1ee78:	bl	afa0 <fprintf@plt>
   1ee7c:	b	1eddc <_getopt_internal_r@@Base+0x5a4>
   1ee80:	mov	w6, w0
   1ee84:	b	1eaf0 <_getopt_internal_r@@Base+0x2b8>

000000000001ee88 <rpl_getopt_internal@@Base>:
   1ee88:	stp	x29, x30, [sp, #-48]!
   1ee8c:	adrp	x8, 4c000 <vasnprintf@@Base+0x1b848>
   1ee90:	mov	w7, w6
   1ee94:	mov	x29, sp
   1ee98:	stp	x19, x20, [sp, #16]
   1ee9c:	adrp	x20, 4c000 <vasnprintf@@Base+0x1b848>
   1eea0:	ldr	x8, [x8, #3856]
   1eea4:	ldr	x20, [x20, #4032]
   1eea8:	ldr	w8, [x8]
   1eeac:	ldr	w9, [x20]
   1eeb0:	str	x21, [sp, #32]
   1eeb4:	adrp	x21, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1eeb8:	add	x19, x21, #0x478
   1eebc:	mov	x6, x19
   1eec0:	str	w9, [x21, #1144]
   1eec4:	str	w8, [x19, #4]
   1eec8:	bl	ae70 <_getopt_internal_r@plt>
   1eecc:	adrp	x2, 4c000 <vasnprintf@@Base+0x1b848>
   1eed0:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   1eed4:	ldr	w3, [x21, #1144]
   1eed8:	ldr	x2, [x2, #4016]
   1eedc:	ldr	x1, [x1, #3880]
   1eee0:	ldr	x4, [x19, #16]
   1eee4:	ldr	x21, [sp, #32]
   1eee8:	str	w3, [x20]
   1eeec:	ldr	w3, [x19, #8]
   1eef0:	str	x4, [x2]
   1eef4:	ldp	x19, x20, [sp, #16]
   1eef8:	str	w3, [x1]
   1eefc:	ldp	x29, x30, [sp], #48
   1ef00:	ret
   1ef04:	nop

000000000001ef08 <rpl_getopt@@Base>:
   1ef08:	mov	w6, #0x1                   	// #1
   1ef0c:	mov	w5, #0x0                   	// #0
   1ef10:	mov	x4, #0x0                   	// #0
   1ef14:	mov	x3, #0x0                   	// #0
   1ef18:	b	ab20 <rpl_getopt_internal@plt>
   1ef1c:	nop

000000000001ef20 <rpl_getopt_long@@Base>:
   1ef20:	mov	w6, #0x0                   	// #0
   1ef24:	mov	w5, #0x0                   	// #0
   1ef28:	b	ab20 <rpl_getopt_internal@plt>
   1ef2c:	nop

000000000001ef30 <_getopt_long_r@@Base>:
   1ef30:	mov	x6, x5
   1ef34:	mov	w7, #0x0                   	// #0
   1ef38:	mov	w5, #0x0                   	// #0
   1ef3c:	b	ae70 <_getopt_internal_r@plt>

000000000001ef40 <rpl_getopt_long_only@@Base>:
   1ef40:	mov	w6, #0x0                   	// #0
   1ef44:	mov	w5, #0x1                   	// #1
   1ef48:	b	ab20 <rpl_getopt_internal@plt>
   1ef4c:	nop

000000000001ef50 <_getopt_long_only_r@@Base>:
   1ef50:	mov	x6, x5
   1ef54:	mov	w7, #0x0                   	// #0
   1ef58:	mov	w5, #0x1                   	// #1
   1ef5c:	b	ae70 <_getopt_internal_r@plt>

000000000001ef60 <rpl_ioctl@@Base>:
   1ef60:	stp	x29, x30, [sp, #-64]!
   1ef64:	mov	w3, #0xfffffff8            	// #-8
   1ef68:	mov	w1, w1
   1ef6c:	add	x4, sp, #0x30
   1ef70:	add	x5, sp, #0x40
   1ef74:	mov	x29, sp
   1ef78:	stp	x5, x5, [sp, #16]
   1ef7c:	str	x4, [sp, #32]
   1ef80:	stp	w3, wzr, [sp, #40]
   1ef84:	str	x2, [sp, #56]
   1ef88:	bl	afc0 <ioctl@plt>
   1ef8c:	ldp	x29, x30, [sp], #64
   1ef90:	ret
   1ef94:	nop

000000000001ef98 <rpl_mbrtowc@@Base>:
   1ef98:	stp	x29, x30, [sp, #-64]!
   1ef9c:	cmp	x0, #0x0
   1efa0:	add	x4, sp, #0x3c
   1efa4:	mov	x29, sp
   1efa8:	stp	x19, x20, [sp, #16]
   1efac:	csel	x19, x4, x0, eq  // eq = none
   1efb0:	mov	x20, x2
   1efb4:	mov	x0, x19
   1efb8:	str	x21, [sp, #32]
   1efbc:	mov	x21, x1
   1efc0:	bl	a2b0 <mbrtowc@plt>
   1efc4:	cmp	x20, #0x0
   1efc8:	mov	x20, x0
   1efcc:	ccmn	x0, #0x3, #0x0, ne  // ne = any
   1efd0:	b.hi	1efe8 <rpl_mbrtowc@@Base+0x50>  // b.pmore
   1efd4:	mov	x0, x20
   1efd8:	ldp	x19, x20, [sp, #16]
   1efdc:	ldr	x21, [sp, #32]
   1efe0:	ldp	x29, x30, [sp], #64
   1efe4:	ret
   1efe8:	mov	w0, #0x0                   	// #0
   1efec:	bl	a790 <hard_locale@plt>
   1eff0:	tst	w0, #0xff
   1eff4:	b.ne	1efd4 <rpl_mbrtowc@@Base+0x3c>  // b.any
   1eff8:	ldrb	w0, [x21]
   1effc:	mov	x20, #0x1                   	// #1
   1f000:	str	w0, [x19]
   1f004:	mov	x0, x20
   1f008:	ldp	x19, x20, [sp, #16]
   1f00c:	ldr	x21, [sp, #32]
   1f010:	ldp	x29, x30, [sp], #64
   1f014:	ret

000000000001f018 <rpl_nanosleep@@Base>:
   1f018:	stp	x29, x30, [sp, #-64]!
   1f01c:	mov	x2, #0xc9ff                	// #51711
   1f020:	movk	x2, #0x3b9a, lsl #16
   1f024:	mov	x29, sp
   1f028:	stp	x21, x22, [sp, #32]
   1f02c:	mov	x21, x1
   1f030:	ldr	x1, [x0, #8]
   1f034:	cmp	x1, x2
   1f038:	b.hi	1f0d4 <rpl_nanosleep@@Base+0xbc>  // b.pmore
   1f03c:	stp	x19, x20, [sp, #16]
   1f040:	mov	x19, #0xa400                	// #41984
   1f044:	movk	x19, #0x1f, lsl #16
   1f048:	ldr	x20, [x0]
   1f04c:	str	x1, [sp, #56]
   1f050:	add	x22, sp, #0x30
   1f054:	cmp	x20, x19
   1f058:	b.gt	1f06c <rpl_nanosleep@@Base+0x54>
   1f05c:	b	1f0a4 <rpl_nanosleep@@Base+0x8c>
   1f060:	str	xzr, [sp, #56]
   1f064:	cmp	x20, x19
   1f068:	b.le	1f0a4 <rpl_nanosleep@@Base+0x8c>
   1f06c:	mov	x1, x21
   1f070:	mov	x0, x22
   1f074:	sub	x20, x20, x19
   1f078:	str	x19, [sp, #48]
   1f07c:	bl	ab00 <nanosleep@plt>
   1f080:	cbz	w0, 1f060 <rpl_nanosleep@@Base+0x48>
   1f084:	cbz	x21, 1f0c4 <rpl_nanosleep@@Base+0xac>
   1f088:	ldr	x1, [x21]
   1f08c:	add	x20, x1, x20
   1f090:	str	x20, [x21]
   1f094:	ldp	x19, x20, [sp, #16]
   1f098:	ldp	x21, x22, [sp, #32]
   1f09c:	ldp	x29, x30, [sp], #64
   1f0a0:	ret
   1f0a4:	mov	x1, x21
   1f0a8:	mov	x0, x22
   1f0ac:	str	x20, [sp, #48]
   1f0b0:	bl	ab00 <nanosleep@plt>
   1f0b4:	ldp	x19, x20, [sp, #16]
   1f0b8:	ldp	x21, x22, [sp, #32]
   1f0bc:	ldp	x29, x30, [sp], #64
   1f0c0:	ret
   1f0c4:	ldp	x19, x20, [sp, #16]
   1f0c8:	ldp	x21, x22, [sp, #32]
   1f0cc:	ldp	x29, x30, [sp], #64
   1f0d0:	ret
   1f0d4:	bl	aeb0 <__errno_location@plt>
   1f0d8:	mov	x1, x0
   1f0dc:	mov	w2, #0x16                  	// #22
   1f0e0:	mov	w0, #0xffffffff            	// #-1
   1f0e4:	str	w2, [x1]
   1f0e8:	b	1f0b8 <rpl_nanosleep@@Base+0xa0>
   1f0ec:	nop

000000000001f0f0 <openat_proc_name@@Base>:
   1f0f0:	stp	x29, x30, [sp, #-96]!
   1f0f4:	mov	x29, sp
   1f0f8:	stp	x19, x20, [sp, #16]
   1f0fc:	mov	x19, x0
   1f100:	ldrb	w0, [x2]
   1f104:	cbz	w0, 1f1c0 <openat_proc_name@@Base+0xd0>
   1f108:	stp	x21, x22, [sp, #32]
   1f10c:	adrp	x22, 4e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1f110:	mov	x20, x2
   1f114:	ldr	w0, [x22, #1200]
   1f118:	mov	w21, w1
   1f11c:	cbz	w0, 1f184 <openat_proc_name@@Base+0x94>
   1f120:	tbnz	w0, #31, 1f178 <openat_proc_name@@Base+0x88>
   1f124:	mov	x0, x20
   1f128:	bl	a340 <strlen@plt>
   1f12c:	add	x0, x0, #0x1b
   1f130:	cmp	x0, #0xfc0
   1f134:	b.hi	1f16c <openat_proc_name@@Base+0x7c>  // b.pmore
   1f138:	mov	w2, w21
   1f13c:	mov	x0, x19
   1f140:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   1f144:	add	x1, x1, #0x28
   1f148:	bl	a490 <sprintf@plt>
   1f14c:	add	x0, x19, w0, sxtw
   1f150:	mov	x1, x20
   1f154:	bl	ac40 <strcpy@plt>
   1f158:	ldp	x21, x22, [sp, #32]
   1f15c:	mov	x0, x19
   1f160:	ldp	x19, x20, [sp, #16]
   1f164:	ldp	x29, x30, [sp], #96
   1f168:	ret
   1f16c:	bl	a5f0 <malloc@plt>
   1f170:	mov	x19, x0
   1f174:	cbnz	x0, 1f138 <openat_proc_name@@Base+0x48>
   1f178:	mov	x0, #0x0                   	// #0
   1f17c:	ldp	x21, x22, [sp, #32]
   1f180:	b	1f160 <openat_proc_name@@Base+0x70>
   1f184:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   1f188:	mov	w1, #0x4900                	// #18688
   1f18c:	add	x0, x0, #0x0
   1f190:	stp	x23, x24, [sp, #48]
   1f194:	bl	a640 <open@plt>
   1f198:	mov	w23, w0
   1f19c:	tbz	w0, #31, 1f1d4 <openat_proc_name@@Base+0xe4>
   1f1a0:	mov	w1, #0xffffffff            	// #-1
   1f1a4:	str	w1, [x22, #1200]
   1f1a8:	mov	x0, #0x0                   	// #0
   1f1ac:	ldp	x19, x20, [sp, #16]
   1f1b0:	ldp	x21, x22, [sp, #32]
   1f1b4:	ldp	x23, x24, [sp, #48]
   1f1b8:	ldp	x29, x30, [sp], #96
   1f1bc:	ret
   1f1c0:	strb	wzr, [x19]
   1f1c4:	mov	x0, x19
   1f1c8:	ldp	x19, x20, [sp, #16]
   1f1cc:	ldp	x29, x30, [sp], #96
   1f1d0:	ret
   1f1d4:	mov	w2, w0
   1f1d8:	add	x24, sp, #0x40
   1f1dc:	mov	x0, x24
   1f1e0:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   1f1e4:	add	x1, x1, #0x10
   1f1e8:	bl	a490 <sprintf@plt>
   1f1ec:	mov	x0, x24
   1f1f0:	mov	w1, #0x0                   	// #0
   1f1f4:	bl	a950 <access@plt>
   1f1f8:	cmp	w0, #0x0
   1f1fc:	mov	w1, #0x1                   	// #1
   1f200:	cneg	w1, w1, ne  // ne = any
   1f204:	mov	w0, w23
   1f208:	str	w1, [x22, #1200]
   1f20c:	bl	a850 <close@plt>
   1f210:	ldr	w0, [x22, #1200]
   1f214:	ldp	x23, x24, [sp, #48]
   1f218:	b	1f120 <openat_proc_name@@Base+0x30>
   1f21c:	nop

000000000001f220 <printf_fetchargs@@Base>:
   1f220:	ldp	x3, x2, [x1]
   1f224:	ldp	w5, w9, [x0, #24]
   1f228:	ldp	x4, x10, [x0]
   1f22c:	ldr	x11, [x0, #16]
   1f230:	cbz	x3, 1f2a4 <printf_fetchargs@@Base+0x84>
   1f234:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   1f238:	adrp	x6, 34000 <vasnprintf@@Base+0x3848>
   1f23c:	add	x8, x0, #0x70
   1f240:	add	x6, x6, #0x50
   1f244:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   1f248:	add	x7, x0, #0x40
   1f24c:	mov	x3, #0x0                   	// #0
   1f250:	ldr	w0, [x2]
   1f254:	sub	w0, w0, #0x1
   1f258:	cmp	w0, #0x15
   1f25c:	b.ls	1f268 <printf_fetchargs@@Base+0x48>  // b.plast
   1f260:	mov	w0, #0xffffffff            	// #-1
   1f264:	ret
   1f268:	ldrb	w0, [x6, w0, uxtw]
   1f26c:	adr	x12, 1f278 <printf_fetchargs@@Base+0x58>
   1f270:	add	x0, x12, w0, sxtb #2
   1f274:	br	x0
   1f278:	tbnz	w5, #31, 1f300 <printf_fetchargs@@Base+0xe0>
   1f27c:	add	x12, x4, #0xf
   1f280:	mov	x0, x4
   1f284:	and	x4, x12, #0xfffffffffffffff8
   1f288:	ldr	x0, [x0]
   1f28c:	str	x0, [x2, #16]
   1f290:	ldr	x0, [x1]
   1f294:	add	x3, x3, #0x1
   1f298:	add	x2, x2, #0x20
   1f29c:	cmp	x0, x3
   1f2a0:	b.hi	1f250 <printf_fetchargs@@Base+0x30>  // b.pmore
   1f2a4:	mov	w0, #0x0                   	// #0
   1f2a8:	ret
   1f2ac:	tbnz	w5, #31, 1f32c <printf_fetchargs@@Base+0x10c>
   1f2b0:	add	x12, x4, #0xb
   1f2b4:	mov	x0, x4
   1f2b8:	and	x4, x12, #0xfffffffffffffff8
   1f2bc:	ldr	w0, [x0]
   1f2c0:	str	w0, [x2, #16]
   1f2c4:	b	1f290 <printf_fetchargs@@Base+0x70>
   1f2c8:	tbnz	w5, #31, 1f3d8 <printf_fetchargs@@Base+0x1b8>
   1f2cc:	add	x12, x4, #0xb
   1f2d0:	mov	x0, x4
   1f2d4:	and	x4, x12, #0xfffffffffffffff8
   1f2d8:	ldr	w0, [x0]
   1f2dc:	strh	w0, [x2, #16]
   1f2e0:	b	1f290 <printf_fetchargs@@Base+0x70>
   1f2e4:	tbnz	w5, #31, 1f3f8 <printf_fetchargs@@Base+0x1d8>
   1f2e8:	add	x12, x4, #0xb
   1f2ec:	mov	x0, x4
   1f2f0:	and	x4, x12, #0xfffffffffffffff8
   1f2f4:	ldr	w0, [x0]
   1f2f8:	strb	w0, [x2, #16]
   1f2fc:	b	1f290 <printf_fetchargs@@Base+0x70>
   1f300:	add	w12, w5, #0x8
   1f304:	cmp	w12, #0x0
   1f308:	b.le	1f320 <printf_fetchargs@@Base+0x100>
   1f30c:	add	x13, x4, #0xf
   1f310:	mov	x0, x4
   1f314:	mov	w5, w12
   1f318:	and	x4, x13, #0xfffffffffffffff8
   1f31c:	b	1f288 <printf_fetchargs@@Base+0x68>
   1f320:	add	x0, x10, w5, sxtw
   1f324:	mov	w5, w12
   1f328:	b	1f288 <printf_fetchargs@@Base+0x68>
   1f32c:	add	w12, w5, #0x8
   1f330:	cmp	w12, #0x0
   1f334:	b.le	1f34c <printf_fetchargs@@Base+0x12c>
   1f338:	add	x13, x4, #0xb
   1f33c:	mov	x0, x4
   1f340:	mov	w5, w12
   1f344:	and	x4, x13, #0xfffffffffffffff8
   1f348:	b	1f2bc <printf_fetchargs@@Base+0x9c>
   1f34c:	add	x0, x10, w5, sxtw
   1f350:	mov	w5, w12
   1f354:	b	1f2bc <printf_fetchargs@@Base+0x9c>
   1f358:	tbnz	w9, #31, 1f418 <printf_fetchargs@@Base+0x1f8>
   1f35c:	add	x12, x4, #0xf
   1f360:	mov	x0, x4
   1f364:	and	x4, x12, #0xfffffffffffffff8
   1f368:	ldr	d0, [x0]
   1f36c:	str	d0, [x2, #16]
   1f370:	b	1f290 <printf_fetchargs@@Base+0x70>
   1f374:	tbnz	w5, #31, 1f478 <printf_fetchargs@@Base+0x258>
   1f378:	add	x12, x4, #0xf
   1f37c:	mov	x0, x4
   1f380:	and	x4, x12, #0xfffffffffffffff8
   1f384:	ldr	x0, [x0]
   1f388:	cmp	x0, #0x0
   1f38c:	csel	x0, x8, x0, eq  // eq = none
   1f390:	str	x0, [x2, #16]
   1f394:	b	1f290 <printf_fetchargs@@Base+0x70>
   1f398:	tbnz	w9, #31, 1f458 <printf_fetchargs@@Base+0x238>
   1f39c:	add	x0, x4, #0xf
   1f3a0:	and	x0, x0, #0xfffffffffffffff0
   1f3a4:	add	x4, x0, #0x10
   1f3a8:	ldr	q0, [x0]
   1f3ac:	str	q0, [x2, #16]
   1f3b0:	b	1f290 <printf_fetchargs@@Base+0x70>
   1f3b4:	tbnz	w5, #31, 1f438 <printf_fetchargs@@Base+0x218>
   1f3b8:	add	x12, x4, #0xf
   1f3bc:	mov	x0, x4
   1f3c0:	and	x4, x12, #0xfffffffffffffff8
   1f3c4:	ldr	x0, [x0]
   1f3c8:	cmp	x0, #0x0
   1f3cc:	csel	x0, x7, x0, eq  // eq = none
   1f3d0:	str	x0, [x2, #16]
   1f3d4:	b	1f290 <printf_fetchargs@@Base+0x70>
   1f3d8:	add	w12, w5, #0x8
   1f3dc:	cmp	w12, #0x0
   1f3e0:	b.le	1f4a4 <printf_fetchargs@@Base+0x284>
   1f3e4:	add	x13, x4, #0xb
   1f3e8:	mov	x0, x4
   1f3ec:	mov	w5, w12
   1f3f0:	and	x4, x13, #0xfffffffffffffff8
   1f3f4:	b	1f2d8 <printf_fetchargs@@Base+0xb8>
   1f3f8:	add	w12, w5, #0x8
   1f3fc:	cmp	w12, #0x0
   1f400:	b.le	1f498 <printf_fetchargs@@Base+0x278>
   1f404:	add	x13, x4, #0xb
   1f408:	mov	x0, x4
   1f40c:	mov	w5, w12
   1f410:	and	x4, x13, #0xfffffffffffffff8
   1f414:	b	1f2f4 <printf_fetchargs@@Base+0xd4>
   1f418:	add	w12, w9, #0x10
   1f41c:	cmp	w12, #0x0
   1f420:	b.le	1f4bc <printf_fetchargs@@Base+0x29c>
   1f424:	add	x13, x4, #0xf
   1f428:	mov	x0, x4
   1f42c:	mov	w9, w12
   1f430:	and	x4, x13, #0xfffffffffffffff8
   1f434:	b	1f368 <printf_fetchargs@@Base+0x148>
   1f438:	add	w12, w5, #0x8
   1f43c:	cmp	w12, #0x0
   1f440:	b.le	1f4c8 <printf_fetchargs@@Base+0x2a8>
   1f444:	add	x13, x4, #0xf
   1f448:	mov	x0, x4
   1f44c:	mov	w5, w12
   1f450:	and	x4, x13, #0xfffffffffffffff8
   1f454:	b	1f3c4 <printf_fetchargs@@Base+0x1a4>
   1f458:	add	w12, w9, #0x10
   1f45c:	cmp	w12, #0x0
   1f460:	b.le	1f4d4 <printf_fetchargs@@Base+0x2b4>
   1f464:	add	x0, x4, #0xf
   1f468:	mov	w9, w12
   1f46c:	and	x0, x0, #0xfffffffffffffff0
   1f470:	add	x4, x0, #0x10
   1f474:	b	1f3a8 <printf_fetchargs@@Base+0x188>
   1f478:	add	w12, w5, #0x8
   1f47c:	cmp	w12, #0x0
   1f480:	b.le	1f4b0 <printf_fetchargs@@Base+0x290>
   1f484:	add	x13, x4, #0xf
   1f488:	mov	x0, x4
   1f48c:	mov	w5, w12
   1f490:	and	x4, x13, #0xfffffffffffffff8
   1f494:	b	1f384 <printf_fetchargs@@Base+0x164>
   1f498:	add	x0, x10, w5, sxtw
   1f49c:	mov	w5, w12
   1f4a0:	b	1f2f4 <printf_fetchargs@@Base+0xd4>
   1f4a4:	add	x0, x10, w5, sxtw
   1f4a8:	mov	w5, w12
   1f4ac:	b	1f2d8 <printf_fetchargs@@Base+0xb8>
   1f4b0:	add	x0, x10, w5, sxtw
   1f4b4:	mov	w5, w12
   1f4b8:	b	1f384 <printf_fetchargs@@Base+0x164>
   1f4bc:	add	x0, x11, w9, sxtw
   1f4c0:	mov	w9, w12
   1f4c4:	b	1f368 <printf_fetchargs@@Base+0x148>
   1f4c8:	add	x0, x10, w5, sxtw
   1f4cc:	mov	w5, w12
   1f4d0:	b	1f3c4 <printf_fetchargs@@Base+0x1a4>
   1f4d4:	add	x0, x11, w9, sxtw
   1f4d8:	mov	w9, w12
   1f4dc:	b	1f3a8 <printf_fetchargs@@Base+0x188>

000000000001f4e0 <printf_parse@@Base>:
   1f4e0:	stp	x29, x30, [sp, #-144]!
   1f4e4:	mov	x8, #0x0                   	// #0
   1f4e8:	mov	x29, sp
   1f4ec:	stp	x23, x24, [sp, #48]
   1f4f0:	mov	x24, x1
   1f4f4:	mov	x23, x2
   1f4f8:	stp	x19, x20, [sp, #16]
   1f4fc:	mov	x20, #0x0                   	// #0
   1f500:	stp	x21, x22, [sp, #32]
   1f504:	mov	x22, #0x0                   	// #0
   1f508:	stp	x25, x26, [sp, #64]
   1f50c:	mov	x26, x2
   1f510:	stp	x27, x28, [sp, #80]
   1f514:	mov	x27, x1
   1f518:	mov	x1, x0
   1f51c:	str	xzr, [x24], #32
   1f520:	mov	x28, #0x7                   	// #7
   1f524:	str	xzr, [sp, #104]
   1f528:	mov	x6, x28
   1f52c:	str	x24, [x27, #8]
   1f530:	mov	x3, x24
   1f534:	str	xzr, [x23], #16
   1f538:	str	x23, [x2, #8]
   1f53c:	ldrb	w0, [x1]
   1f540:	cbz	w0, 1f560 <printf_parse@@Base+0x80>
   1f544:	nop
   1f548:	cmp	w0, #0x25
   1f54c:	add	x19, x1, #0x1
   1f550:	b.eq	1f594 <printf_parse@@Base+0xb4>  // b.none
   1f554:	mov	x1, x19
   1f558:	ldrb	w0, [x1]
   1f55c:	cbnz	w0, 1f548 <printf_parse@@Base+0x68>
   1f560:	add	x2, x20, x20, lsl #1
   1f564:	lsl	x2, x2, #2
   1f568:	sub	x20, x2, x20
   1f56c:	str	x1, [x3, x20, lsl #3]
   1f570:	ldr	x1, [sp, #104]
   1f574:	stp	x22, x1, [x27, #16]
   1f578:	ldp	x19, x20, [sp, #16]
   1f57c:	ldp	x21, x22, [sp, #32]
   1f580:	ldp	x23, x24, [sp, #48]
   1f584:	ldp	x25, x26, [sp, #64]
   1f588:	ldp	x27, x28, [sp, #80]
   1f58c:	ldp	x29, x30, [sp], #144
   1f590:	ret
   1f594:	add	x0, x20, x20, lsl #1
   1f598:	mov	x2, #0xffffffffffffffff    	// #-1
   1f59c:	movi	v0.4s, #0x0
   1f5a0:	mov	x25, x2
   1f5a4:	lsl	x0, x0, #2
   1f5a8:	sub	x20, x0, x20
   1f5ac:	add	x21, x3, x20, lsl #3
   1f5b0:	str	x1, [x3, x20, lsl #3]
   1f5b4:	str	wzr, [x21, #16]
   1f5b8:	str	x2, [x21, #40]
   1f5bc:	str	x2, [x21, #64]
   1f5c0:	str	x2, [x21, #80]
   1f5c4:	stur	q0, [x21, #24]
   1f5c8:	str	q0, [x21, #48]
   1f5cc:	ldrb	w1, [x1, #1]
   1f5d0:	sub	w1, w1, #0x30
   1f5d4:	and	w0, w1, #0xff
   1f5d8:	cmp	w0, #0x9
   1f5dc:	b.ls	1fa48 <printf_parse@@Base+0x568>  // b.plast
   1f5e0:	mov	x0, x19
   1f5e4:	ldrb	w3, [x0], #1
   1f5e8:	cmp	w3, #0x27
   1f5ec:	b.eq	1f640 <printf_parse@@Base+0x160>  // b.none
   1f5f0:	cmp	w3, #0x2d
   1f5f4:	b.eq	1f654 <printf_parse@@Base+0x174>  // b.none
   1f5f8:	cmp	w3, #0x2b
   1f5fc:	b.eq	1f668 <printf_parse@@Base+0x188>  // b.none
   1f600:	cmp	w3, #0x20
   1f604:	b.eq	1f67c <printf_parse@@Base+0x19c>  // b.none
   1f608:	cmp	w3, #0x23
   1f60c:	b.eq	1f690 <printf_parse@@Base+0x1b0>  // b.none
   1f610:	cmp	w3, #0x30
   1f614:	b.eq	1f6a4 <printf_parse@@Base+0x1c4>  // b.none
   1f618:	cmp	w3, #0x49
   1f61c:	b.ne	1f6b8 <printf_parse@@Base+0x1d8>  // b.any
   1f620:	ldr	w1, [x21, #16]
   1f624:	mov	x19, x0
   1f628:	orr	w1, w1, #0x40
   1f62c:	str	w1, [x21, #16]
   1f630:	mov	x0, x19
   1f634:	ldrb	w3, [x0], #1
   1f638:	cmp	w3, #0x27
   1f63c:	b.ne	1f5f0 <printf_parse@@Base+0x110>  // b.any
   1f640:	ldr	w3, [x21, #16]
   1f644:	mov	x19, x0
   1f648:	orr	w3, w3, #0x1
   1f64c:	str	w3, [x21, #16]
   1f650:	b	1f630 <printf_parse@@Base+0x150>
   1f654:	ldr	w1, [x21, #16]
   1f658:	mov	x19, x0
   1f65c:	orr	w1, w1, #0x2
   1f660:	str	w1, [x21, #16]
   1f664:	b	1f630 <printf_parse@@Base+0x150>
   1f668:	ldr	w1, [x21, #16]
   1f66c:	mov	x19, x0
   1f670:	orr	w1, w1, #0x4
   1f674:	str	w1, [x21, #16]
   1f678:	b	1f630 <printf_parse@@Base+0x150>
   1f67c:	ldr	w1, [x21, #16]
   1f680:	mov	x19, x0
   1f684:	orr	w1, w1, #0x8
   1f688:	str	w1, [x21, #16]
   1f68c:	b	1f630 <printf_parse@@Base+0x150>
   1f690:	ldr	w1, [x21, #16]
   1f694:	mov	x19, x0
   1f698:	orr	w1, w1, #0x10
   1f69c:	str	w1, [x21, #16]
   1f6a0:	b	1f630 <printf_parse@@Base+0x150>
   1f6a4:	ldr	w1, [x21, #16]
   1f6a8:	mov	x19, x0
   1f6ac:	orr	w1, w1, #0x20
   1f6b0:	str	w1, [x21, #16]
   1f6b4:	b	1f630 <printf_parse@@Base+0x150>
   1f6b8:	cmp	w3, #0x2a
   1f6bc:	b.eq	1f798 <printf_parse@@Base+0x2b8>  // b.none
   1f6c0:	sub	w1, w3, #0x30
   1f6c4:	and	w1, w1, #0xff
   1f6c8:	cmp	w1, #0x9
   1f6cc:	b.ls	1fd28 <printf_parse@@Base+0x848>  // b.plast
   1f6d0:	cmp	w3, #0x2e
   1f6d4:	b.eq	1f884 <printf_parse@@Base+0x3a4>  // b.none
   1f6d8:	mov	w0, #0x0                   	// #0
   1f6dc:	mov	w2, #0x1                   	// #1
   1f6e0:	ldrb	w20, [x19], #1
   1f6e4:	cmp	w20, #0x68
   1f6e8:	b.eq	1f728 <printf_parse@@Base+0x248>  // b.none
   1f6ec:	cmp	w20, #0x4c
   1f6f0:	b.eq	1f9d0 <printf_parse@@Base+0x4f0>  // b.none
   1f6f4:	cmp	w20, #0x6c
   1f6f8:	b.eq	1f718 <printf_parse@@Base+0x238>  // b.none
   1f6fc:	cmp	w20, #0x6a
   1f700:	b.eq	1f718 <printf_parse@@Base+0x238>  // b.none
   1f704:	and	w1, w20, #0xffffffdf
   1f708:	cmp	w1, #0x5a
   1f70c:	b.eq	1f718 <printf_parse@@Base+0x238>  // b.none
   1f710:	cmp	w20, #0x74
   1f714:	b.ne	1f738 <printf_parse@@Base+0x258>  // b.any
   1f718:	ldrb	w20, [x19], #1
   1f71c:	add	w0, w0, #0x8
   1f720:	cmp	w20, #0x68
   1f724:	b.ne	1f6ec <printf_parse@@Base+0x20c>  // b.any
   1f728:	and	w3, w0, #0x1
   1f72c:	lsl	w3, w2, w3
   1f730:	orr	w0, w0, w3
   1f734:	b	1f6e0 <printf_parse@@Base+0x200>
   1f738:	sub	w1, w20, #0x25
   1f73c:	cmp	w1, #0x53
   1f740:	b.ls	1f780 <printf_parse@@Base+0x2a0>  // b.plast
   1f744:	ldr	x3, [x26, #8]
   1f748:	cmp	x23, x3
   1f74c:	b.eq	1f758 <printf_parse@@Base+0x278>  // b.none
   1f750:	mov	x0, x3
   1f754:	bl	aa50 <free@plt>
   1f758:	ldr	x0, [x27, #8]
   1f75c:	cmp	x24, x0
   1f760:	b.eq	1f768 <printf_parse@@Base+0x288>  // b.none
   1f764:	bl	aa50 <free@plt>
   1f768:	bl	aeb0 <__errno_location@plt>
   1f76c:	mov	x1, x0
   1f770:	mov	w2, #0x16                  	// #22
   1f774:	mov	w0, #0xffffffff            	// #-1
   1f778:	str	w2, [x1]
   1f77c:	b	1f578 <printf_parse@@Base+0x98>
   1f780:	adrp	x2, 34000 <vasnprintf@@Base+0x3848>
   1f784:	add	x2, x2, #0x8c
   1f788:	ldrh	w1, [x2, w1, uxtw #1]
   1f78c:	adr	x2, 1f798 <printf_parse@@Base+0x2b8>
   1f790:	add	x1, x2, w1, sxth #2
   1f794:	br	x1
   1f798:	stp	x19, x0, [x21, #24]
   1f79c:	cmp	x22, #0x0
   1f7a0:	csinc	x22, x22, xzr, ne  // ne = any
   1f7a4:	ldrb	w2, [x19, #1]
   1f7a8:	sub	w2, w2, #0x30
   1f7ac:	and	w1, w2, #0xff
   1f7b0:	cmp	w1, #0x9
   1f7b4:	b.ls	1fb70 <printf_parse@@Base+0x690>  // b.plast
   1f7b8:	str	x8, [x21, #40]
   1f7bc:	adds	x1, x8, #0x1
   1f7c0:	b.eq	1f744 <printf_parse@@Base+0x264>  // b.none
   1f7c4:	mov	x20, x8
   1f7c8:	mov	x19, x0
   1f7cc:	mov	x8, x1
   1f7d0:	cmp	x28, x20
   1f7d4:	ldr	x3, [x26, #8]
   1f7d8:	b.hi	1fe4c <printf_parse@@Base+0x96c>  // b.pmore
   1f7dc:	lsl	x28, x28, #1
   1f7e0:	cmp	x28, x20
   1f7e4:	b.hi	1f7f4 <printf_parse@@Base+0x314>  // b.pmore
   1f7e8:	cmp	x20, x1
   1f7ec:	b.hi	1ffbc <printf_parse@@Base+0xadc>  // b.pmore
   1f7f0:	mov	x28, x1
   1f7f4:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
   1f7f8:	cmp	x28, x0
   1f7fc:	b.hi	1ffbc <printf_parse@@Base+0xadc>  // b.pmore
   1f800:	cmp	x23, x3
   1f804:	lsl	x0, x28, #5
   1f808:	b.eq	1fea8 <printf_parse@@Base+0x9c8>  // b.none
   1f80c:	mov	x1, x0
   1f810:	mov	x0, x3
   1f814:	stp	x6, x8, [sp, #112]
   1f818:	bl	a7e0 <realloc@plt>
   1f81c:	mov	x3, x0
   1f820:	ldr	x0, [x26, #8]
   1f824:	ldp	x6, x8, [sp, #112]
   1f828:	cbz	x3, 2005c <printf_parse@@Base+0xb7c>
   1f82c:	cmp	x23, x0
   1f830:	ldr	x2, [x26]
   1f834:	b.eq	20050 <printf_parse@@Base+0xb70>  // b.none
   1f838:	str	x3, [x26, #8]
   1f83c:	cmp	x2, x20
   1f840:	sub	x9, x3, #0x20
   1f844:	b.hi	1f860 <printf_parse@@Base+0x380>  // b.pmore
   1f848:	add	x2, x2, #0x1
   1f84c:	cmp	x2, x20
   1f850:	lsl	x0, x2, #5
   1f854:	str	wzr, [x9, x0]
   1f858:	b.ls	1f848 <printf_parse@@Base+0x368>  // b.plast
   1f85c:	str	x2, [x26]
   1f860:	lsl	x20, x20, #5
   1f864:	ldr	w0, [x3, x20]
   1f868:	cbnz	w0, 1fd80 <printf_parse@@Base+0x8a0>
   1f86c:	mov	x0, x19
   1f870:	mov	w1, #0x5                   	// #5
   1f874:	str	w1, [x3, x20]
   1f878:	ldrb	w3, [x0], #1
   1f87c:	cmp	w3, #0x2e
   1f880:	b.ne	1f6d8 <printf_parse@@Base+0x1f8>  // b.any
   1f884:	ldrb	w1, [x19, #1]
   1f888:	cmp	w1, #0x2a
   1f88c:	b.ne	1fae0 <printf_parse@@Base+0x600>  // b.any
   1f890:	add	x0, x19, #0x2
   1f894:	stp	x19, x0, [x21, #48]
   1f898:	mov	x2, #0x2                   	// #2
   1f89c:	ldr	x3, [sp, #104]
   1f8a0:	mov	x20, x0
   1f8a4:	ldrb	w1, [x19, #2]
   1f8a8:	cmp	x3, #0x2
   1f8ac:	csel	x2, x3, x2, cs  // cs = hs, nlast
   1f8b0:	sub	w1, w1, #0x30
   1f8b4:	str	x2, [sp, #104]
   1f8b8:	and	w2, w1, #0xff
   1f8bc:	cmp	w2, #0x9
   1f8c0:	b.ls	1ff18 <printf_parse@@Base+0xa38>  // b.plast
   1f8c4:	ldr	x19, [x21, #64]
   1f8c8:	cmn	x19, #0x1
   1f8cc:	b.eq	1ff00 <printf_parse@@Base+0xa20>  // b.none
   1f8d0:	cmp	x28, x19
   1f8d4:	ldr	x3, [x26, #8]
   1f8d8:	b.ls	1fe54 <printf_parse@@Base+0x974>  // b.plast
   1f8dc:	ldr	x0, [x26]
   1f8e0:	sub	x9, x3, #0x20
   1f8e4:	cmp	x0, x19
   1f8e8:	b.hi	1f908 <printf_parse@@Base+0x428>  // b.pmore
   1f8ec:	nop
   1f8f0:	add	x0, x0, #0x1
   1f8f4:	cmp	x0, x19
   1f8f8:	lsl	x1, x0, #5
   1f8fc:	str	wzr, [x9, x1]
   1f900:	b.ls	1f8f0 <printf_parse@@Base+0x410>  // b.plast
   1f904:	str	x0, [x26]
   1f908:	lsl	x1, x19, #5
   1f90c:	ldr	w0, [x3, x1]
   1f910:	cbnz	w0, 1fe3c <printf_parse@@Base+0x95c>
   1f914:	mov	w0, #0x5                   	// #5
   1f918:	mov	x19, x20
   1f91c:	str	w0, [x3, x1]
   1f920:	b	1f6d8 <printf_parse@@Base+0x1f8>
   1f924:	cmp	w0, #0xf
   1f928:	mov	w10, #0x9                   	// #9
   1f92c:	b.gt	1f958 <printf_parse@@Base+0x478>
   1f930:	tbnz	w0, #2, 1f958 <printf_parse@@Base+0x478>
   1f934:	cmp	w0, #0x7
   1f938:	mov	w10, #0x7                   	// #7
   1f93c:	b.gt	1f958 <printf_parse@@Base+0x478>
   1f940:	mov	w10, #0x1                   	// #1
   1f944:	tbnz	w0, #1, 1f958 <printf_parse@@Base+0x478>
   1f948:	tst	x0, #0x1
   1f94c:	mov	w10, #0x3                   	// #3
   1f950:	mov	w0, #0x5                   	// #5
   1f954:	csel	w10, w10, w0, ne  // ne = any
   1f958:	cmn	x25, #0x1
   1f95c:	b.eq	1fd10 <printf_parse@@Base+0x830>  // b.none
   1f960:	str	x25, [x21, #80]
   1f964:	cmp	x28, x25
   1f968:	ldr	x3, [x26, #8]
   1f96c:	b.ls	1fcac <printf_parse@@Base+0x7cc>  // b.plast
   1f970:	ldr	x0, [x26]
   1f974:	sub	x9, x3, #0x20
   1f978:	cmp	x0, x25
   1f97c:	b.hi	1f998 <printf_parse@@Base+0x4b8>  // b.pmore
   1f980:	add	x0, x0, #0x1
   1f984:	cmp	x0, x25
   1f988:	lsl	x1, x0, #5
   1f98c:	str	wzr, [x9, x1]
   1f990:	b.ls	1f980 <printf_parse@@Base+0x4a0>  // b.plast
   1f994:	str	x0, [x26]
   1f998:	lsl	x25, x25, #5
   1f99c:	ldr	w0, [x3, x25]
   1f9a0:	cbnz	w0, 1fd04 <printf_parse@@Base+0x824>
   1f9a4:	str	w10, [x3, x25]
   1f9a8:	strb	w20, [x21, #72]
   1f9ac:	ldr	x20, [x27]
   1f9b0:	str	x19, [x21, #8]
   1f9b4:	add	x20, x20, #0x1
   1f9b8:	str	x20, [x27]
   1f9bc:	cmp	x6, x20
   1f9c0:	b.ls	1f9d8 <printf_parse@@Base+0x4f8>  // b.plast
   1f9c4:	mov	x1, x19
   1f9c8:	ldr	x3, [x27, #8]
   1f9cc:	b	1f558 <printf_parse@@Base+0x78>
   1f9d0:	orr	w0, w0, #0x4
   1f9d4:	b	1f6e0 <printf_parse@@Base+0x200>
   1f9d8:	tbnz	x6, #63, 1ffb8 <printf_parse@@Base+0xad8>
   1f9dc:	mov	x0, #0xe8ba                	// #59578
   1f9e0:	lsl	x25, x6, #1
   1f9e4:	movk	x0, #0x8ba2, lsl #16
   1f9e8:	movk	x0, #0xba2e, lsl #32
   1f9ec:	movk	x0, #0x2e8, lsl #48
   1f9f0:	cmp	x0, x6, lsl #1
   1f9f4:	b.cc	1ffb8 <printf_parse@@Base+0xad8>  // b.lo, b.ul, b.last
   1f9f8:	add	x1, x25, x6
   1f9fc:	str	x8, [sp, #112]
   1fa00:	ldr	x21, [x27, #8]
   1fa04:	lsl	x1, x1, #2
   1fa08:	sub	x1, x1, x6
   1fa0c:	cmp	x24, x21
   1fa10:	lsl	x1, x1, #4
   1fa14:	b.eq	1fb2c <printf_parse@@Base+0x64c>  // b.none
   1fa18:	mov	x0, x21
   1fa1c:	bl	a7e0 <realloc@plt>
   1fa20:	mov	x3, x0
   1fa24:	ldr	x8, [sp, #112]
   1fa28:	cbz	x0, 1ffb8 <printf_parse@@Base+0xad8>
   1fa2c:	ldp	x20, x21, [x27]
   1fa30:	cmp	x24, x21
   1fa34:	b.eq	1fb40 <printf_parse@@Base+0x660>  // b.none
   1fa38:	mov	x6, x25
   1fa3c:	mov	x1, x19
   1fa40:	str	x3, [x27, #8]
   1fa44:	b	1f558 <printf_parse@@Base+0x78>
   1fa48:	mov	x3, x19
   1fa4c:	nop
   1fa50:	ldrb	w2, [x3, #1]!
   1fa54:	sub	w0, w2, #0x30
   1fa58:	and	w0, w0, #0xff
   1fa5c:	cmp	w0, #0x9
   1fa60:	b.ls	1fa50 <printf_parse@@Base+0x570>  // b.plast
   1fa64:	cmp	w2, #0x24
   1fa68:	mov	x25, #0xffffffffffffffff    	// #-1
   1fa6c:	b.ne	1f5e0 <printf_parse@@Base+0x100>  // b.any
   1fa70:	mov	x2, x19
   1fa74:	mov	x10, x25
   1fa78:	mov	x3, #0x0                   	// #0
   1fa7c:	b	1fa90 <printf_parse@@Base+0x5b0>
   1fa80:	and	w9, w1, #0xff
   1fa84:	add	x2, x2, #0x1
   1fa88:	cmp	w9, #0x9
   1fa8c:	b.hi	1ffa4 <printf_parse@@Base+0xac4>  // b.pmore
   1fa90:	add	x0, x3, x3, lsl #2
   1fa94:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   1fa98:	movk	x4, #0x1999, lsl #48
   1fa9c:	cmp	x3, x4
   1faa0:	lsl	x0, x0, #1
   1faa4:	mov	x19, x2
   1faa8:	csel	x25, x0, x10, ls  // ls = plast
   1faac:	sxtw	x0, w1
   1fab0:	ldrb	w1, [x2, #1]
   1fab4:	adds	x0, x0, x25
   1fab8:	sub	w1, w1, #0x30
   1fabc:	mov	x3, x0
   1fac0:	b.cc	1fa80 <printf_parse@@Base+0x5a0>  // b.lo, b.ul, b.last
   1fac4:	and	w0, w1, #0xff
   1fac8:	cmp	w0, #0x9
   1facc:	b.hi	1f744 <printf_parse@@Base+0x264>  // b.pmore
   1fad0:	add	x2, x2, #0x1
   1fad4:	mov	x25, #0xffffffffffffffff    	// #-1
   1fad8:	mov	x19, x2
   1fadc:	b	1faac <printf_parse@@Base+0x5cc>
   1fae0:	str	x19, [x21, #48]
   1fae4:	ldrb	w1, [x19, #1]
   1fae8:	sub	w1, w1, #0x30
   1faec:	and	w1, w1, #0xff
   1faf0:	cmp	w1, #0x9
   1faf4:	b.hi	20038 <printf_parse@@Base+0xb58>  // b.pmore
   1faf8:	ldrb	w1, [x0, #1]!
   1fafc:	sub	w1, w1, #0x30
   1fb00:	and	w1, w1, #0xff
   1fb04:	cmp	w1, #0x9
   1fb08:	b.ls	1faf8 <printf_parse@@Base+0x618>  // b.plast
   1fb0c:	sub	x1, x0, x19
   1fb10:	mov	x19, x0
   1fb14:	ldr	x2, [sp, #104]
   1fb18:	str	x0, [x21, #56]
   1fb1c:	cmp	x2, x1
   1fb20:	csel	x0, x2, x1, cs  // cs = hs, nlast
   1fb24:	str	x0, [sp, #104]
   1fb28:	b	1f6d8 <printf_parse@@Base+0x1f8>
   1fb2c:	mov	x0, x1
   1fb30:	bl	a5f0 <malloc@plt>
   1fb34:	mov	x3, x0
   1fb38:	ldr	x8, [sp, #112]
   1fb3c:	cbz	x0, 1fde8 <printf_parse@@Base+0x908>
   1fb40:	add	x2, x20, x20, lsl #1
   1fb44:	mov	x0, x3
   1fb48:	mov	x1, x21
   1fb4c:	str	x8, [sp, #112]
   1fb50:	lsl	x2, x2, #2
   1fb54:	sub	x2, x2, x20
   1fb58:	lsl	x2, x2, #3
   1fb5c:	bl	a2c0 <memcpy@plt>
   1fb60:	mov	x3, x0
   1fb64:	ldr	x20, [x27]
   1fb68:	ldr	x8, [sp, #112]
   1fb6c:	b	1fa38 <printf_parse@@Base+0x558>
   1fb70:	mov	x9, x0
   1fb74:	ldrb	w3, [x9, #1]!
   1fb78:	sub	w1, w3, #0x30
   1fb7c:	and	w1, w1, #0xff
   1fb80:	cmp	w1, #0x9
   1fb84:	b.ls	1fb74 <printf_parse@@Base+0x694>  // b.plast
   1fb88:	cmp	w3, #0x24
   1fb8c:	b.ne	1f7b8 <printf_parse@@Base+0x2d8>  // b.any
   1fb90:	mov	x1, #0x0                   	// #0
   1fb94:	mov	x9, #0xffffffffffffffff    	// #-1
   1fb98:	b	1fbac <printf_parse@@Base+0x6cc>
   1fb9c:	and	w3, w2, #0xff
   1fba0:	add	x0, x0, #0x1
   1fba4:	cmp	w3, #0x9
   1fba8:	b.hi	20020 <printf_parse@@Base+0xb40>  // b.pmore
   1fbac:	add	x3, x1, x1, lsl #2
   1fbb0:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   1fbb4:	movk	x4, #0x1999, lsl #48
   1fbb8:	cmp	x1, x4
   1fbbc:	lsl	x1, x3, #1
   1fbc0:	mov	x19, x0
   1fbc4:	csel	x3, x1, x9, ls  // ls = plast
   1fbc8:	sxtw	x1, w2
   1fbcc:	ldrb	w2, [x0, #1]
   1fbd0:	adds	x1, x1, x3
   1fbd4:	sub	w2, w2, #0x30
   1fbd8:	b.cc	1fb9c <printf_parse@@Base+0x6bc>  // b.lo, b.ul, b.last
   1fbdc:	and	w1, w2, #0xff
   1fbe0:	cmp	w1, #0x9
   1fbe4:	b.hi	1f744 <printf_parse@@Base+0x264>  // b.pmore
   1fbe8:	add	x0, x0, #0x1
   1fbec:	mov	x3, #0xffffffffffffffff    	// #-1
   1fbf0:	mov	x19, x0
   1fbf4:	b	1fbc8 <printf_parse@@Base+0x6e8>
   1fbf8:	cmp	w0, #0xf
   1fbfc:	mov	w10, #0xc                   	// #12
   1fc00:	b.gt	1f958 <printf_parse@@Base+0x478>
   1fc04:	ubfx	x0, x0, #2, #1
   1fc08:	add	w10, w0, #0xb
   1fc0c:	b	1f958 <printf_parse@@Base+0x478>
   1fc10:	cmp	w0, #0xf
   1fc14:	mov	w10, #0xa                   	// #10
   1fc18:	b.gt	1f958 <printf_parse@@Base+0x478>
   1fc1c:	tbnz	w0, #2, 1f958 <printf_parse@@Base+0x478>
   1fc20:	cmp	w0, #0x7
   1fc24:	mov	w10, #0x8                   	// #8
   1fc28:	b.gt	1f958 <printf_parse@@Base+0x478>
   1fc2c:	mov	w10, #0x2                   	// #2
   1fc30:	tbnz	w0, #1, 1f958 <printf_parse@@Base+0x478>
   1fc34:	tst	x0, #0x1
   1fc38:	mov	w10, #0x4                   	// #4
   1fc3c:	mov	w0, #0x6                   	// #6
   1fc40:	csel	w10, w10, w0, ne  // ne = any
   1fc44:	b	1f958 <printf_parse@@Base+0x478>
   1fc48:	cmp	w0, #0x7
   1fc4c:	cset	w0, gt
   1fc50:	add	w10, w0, #0xd
   1fc54:	b	1f958 <printf_parse@@Base+0x478>
   1fc58:	cmp	w0, #0xf
   1fc5c:	mov	w10, #0x16                  	// #22
   1fc60:	b.gt	1f958 <printf_parse@@Base+0x478>
   1fc64:	tbnz	w0, #2, 1f958 <printf_parse@@Base+0x478>
   1fc68:	cmp	w0, #0x7
   1fc6c:	mov	w10, #0x15                  	// #21
   1fc70:	b.gt	1f958 <printf_parse@@Base+0x478>
   1fc74:	and	w10, w0, #0x1
   1fc78:	tst	x0, #0x2
   1fc7c:	mov	w0, #0x14                  	// #20
   1fc80:	sub	w0, w0, w10
   1fc84:	mov	w10, #0x12                  	// #18
   1fc88:	csel	w10, w0, w10, eq  // eq = none
   1fc8c:	b	1f958 <printf_parse@@Base+0x478>
   1fc90:	mov	w10, #0xe                   	// #14
   1fc94:	mov	w20, #0x63                  	// #99
   1fc98:	b	1f958 <printf_parse@@Base+0x478>
   1fc9c:	cmp	w0, #0x7
   1fca0:	cset	w0, gt
   1fca4:	add	w10, w0, #0xf
   1fca8:	b	1f958 <printf_parse@@Base+0x478>
   1fcac:	lsl	x28, x28, #1
   1fcb0:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
   1fcb4:	cmp	x28, x25
   1fcb8:	csinc	x28, x28, x25, hi  // hi = pmore
   1fcbc:	cmp	x28, x0
   1fcc0:	b.hi	1ffbc <printf_parse@@Base+0xadc>  // b.pmore
   1fcc4:	cmp	x23, x3
   1fcc8:	lsl	x1, x28, #5
   1fccc:	b.eq	1fd94 <printf_parse@@Base+0x8b4>  // b.none
   1fcd0:	mov	x0, x3
   1fcd4:	stp	x6, x8, [sp, #112]
   1fcd8:	str	w10, [sp, #128]
   1fcdc:	bl	a7e0 <realloc@plt>
   1fce0:	ldr	w10, [sp, #128]
   1fce4:	mov	x3, x0
   1fce8:	ldp	x6, x8, [sp, #112]
   1fcec:	cbz	x0, 1ffb8 <printf_parse@@Base+0xad8>
   1fcf0:	ldr	x0, [x26, #8]
   1fcf4:	cmp	x23, x0
   1fcf8:	b.eq	20064 <printf_parse@@Base+0xb84>  // b.none
   1fcfc:	str	x3, [x26, #8]
   1fd00:	b	1f970 <printf_parse@@Base+0x490>
   1fd04:	cmp	w0, w10
   1fd08:	b.eq	1f9a8 <printf_parse@@Base+0x4c8>  // b.none
   1fd0c:	b	1f748 <printf_parse@@Base+0x268>
   1fd10:	str	x8, [x21, #80]
   1fd14:	adds	x0, x8, #0x1
   1fd18:	b.eq	1f744 <printf_parse@@Base+0x264>  // b.none
   1fd1c:	mov	x25, x8
   1fd20:	mov	x8, x0
   1fd24:	b	1f964 <printf_parse@@Base+0x484>
   1fd28:	str	x19, [x21, #24]
   1fd2c:	mov	x2, x19
   1fd30:	ldrb	w1, [x19]
   1fd34:	sub	w1, w1, #0x30
   1fd38:	and	w1, w1, #0xff
   1fd3c:	cmp	w1, #0x9
   1fd40:	b.hi	1fd64 <printf_parse@@Base+0x884>  // b.pmore
   1fd44:	nop
   1fd48:	mov	x0, x2
   1fd4c:	ldrb	w1, [x2, #1]!
   1fd50:	sub	w1, w1, #0x30
   1fd54:	and	w1, w1, #0xff
   1fd58:	cmp	w1, #0x9
   1fd5c:	b.ls	1fd48 <printf_parse@@Base+0x868>  // b.plast
   1fd60:	add	x0, x0, #0x2
   1fd64:	sub	x1, x2, x19
   1fd68:	str	x2, [x21, #32]
   1fd6c:	cmp	x22, x1
   1fd70:	mov	x19, x2
   1fd74:	ldrb	w3, [x2]
   1fd78:	csel	x22, x22, x1, cs  // cs = hs, nlast
   1fd7c:	b	1f6d0 <printf_parse@@Base+0x1f0>
   1fd80:	cmp	w0, #0x5
   1fd84:	b.ne	1f748 <printf_parse@@Base+0x268>  // b.any
   1fd88:	mov	x0, x19
   1fd8c:	ldrb	w3, [x0], #1
   1fd90:	b	1f6d0 <printf_parse@@Base+0x1f0>
   1fd94:	mov	x0, x1
   1fd98:	stp	x6, x8, [sp, #112]
   1fd9c:	str	x3, [sp, #128]
   1fda0:	str	w10, [sp, #140]
   1fda4:	bl	a5f0 <malloc@plt>
   1fda8:	ldr	w10, [sp, #140]
   1fdac:	ldp	x6, x8, [sp, #112]
   1fdb0:	ldr	x3, [sp, #128]
   1fdb4:	cbz	x0, 1fdfc <printf_parse@@Base+0x91c>
   1fdb8:	ldr	x2, [x26]
   1fdbc:	mov	x1, x3
   1fdc0:	stp	x0, x6, [sp, #112]
   1fdc4:	lsl	x2, x2, #5
   1fdc8:	str	x8, [sp, #128]
   1fdcc:	str	w10, [sp, #140]
   1fdd0:	bl	a2c0 <memcpy@plt>
   1fdd4:	ldp	x3, x6, [sp, #112]
   1fdd8:	str	x3, [x26, #8]
   1fddc:	ldr	w10, [sp, #140]
   1fde0:	ldr	x8, [sp, #128]
   1fde4:	b	1f970 <printf_parse@@Base+0x490>
   1fde8:	ldr	x3, [x26, #8]
   1fdec:	cmp	x23, x3
   1fdf0:	b.eq	1fe0c <printf_parse@@Base+0x92c>  // b.none
   1fdf4:	mov	x0, x3
   1fdf8:	bl	aa50 <free@plt>
   1fdfc:	ldr	x0, [x27, #8]
   1fe00:	cmp	x24, x0
   1fe04:	b.eq	1fe0c <printf_parse@@Base+0x92c>  // b.none
   1fe08:	bl	aa50 <free@plt>
   1fe0c:	bl	aeb0 <__errno_location@plt>
   1fe10:	mov	x1, x0
   1fe14:	mov	w2, #0xc                   	// #12
   1fe18:	mov	w0, #0xffffffff            	// #-1
   1fe1c:	ldp	x19, x20, [sp, #16]
   1fe20:	str	w2, [x1]
   1fe24:	ldp	x21, x22, [sp, #32]
   1fe28:	ldp	x23, x24, [sp, #48]
   1fe2c:	ldp	x25, x26, [sp, #64]
   1fe30:	ldp	x27, x28, [sp, #80]
   1fe34:	ldp	x29, x30, [sp], #144
   1fe38:	ret
   1fe3c:	cmp	w0, #0x5
   1fe40:	b.ne	1f748 <printf_parse@@Base+0x268>  // b.any
   1fe44:	mov	x19, x20
   1fe48:	b	1f6d8 <printf_parse@@Base+0x1f8>
   1fe4c:	ldr	x2, [x26]
   1fe50:	b	1f83c <printf_parse@@Base+0x35c>
   1fe54:	lsl	x28, x28, #1
   1fe58:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
   1fe5c:	cmp	x28, x19
   1fe60:	csinc	x28, x28, x19, hi  // hi = pmore
   1fe64:	cmp	x28, x0
   1fe68:	b.hi	1ffbc <printf_parse@@Base+0xadc>  // b.pmore
   1fe6c:	cmp	x23, x3
   1fe70:	lsl	x0, x28, #5
   1fe74:	b.eq	1ffc8 <printf_parse@@Base+0xae8>  // b.none
   1fe78:	mov	x1, x0
   1fe7c:	mov	x0, x3
   1fe80:	stp	x6, x8, [sp, #112]
   1fe84:	bl	a7e0 <realloc@plt>
   1fe88:	mov	x3, x0
   1fe8c:	ldp	x6, x8, [sp, #112]
   1fe90:	cbz	x0, 1ffb8 <printf_parse@@Base+0xad8>
   1fe94:	ldr	x0, [x26, #8]
   1fe98:	cmp	x23, x0
   1fe9c:	b.eq	20044 <printf_parse@@Base+0xb64>  // b.none
   1fea0:	str	x3, [x26, #8]
   1fea4:	b	1f8dc <printf_parse@@Base+0x3fc>
   1fea8:	stp	x6, x8, [sp, #112]
   1feac:	str	x3, [sp, #128]
   1feb0:	bl	a5f0 <malloc@plt>
   1feb4:	mov	x9, x0
   1feb8:	ldp	x6, x8, [sp, #112]
   1febc:	ldr	x3, [sp, #128]
   1fec0:	cbz	x0, 1fdfc <printf_parse@@Base+0x91c>
   1fec4:	ldr	x2, [x26]
   1fec8:	lsl	x2, x2, #5
   1fecc:	mov	x1, x3
   1fed0:	mov	x0, x9
   1fed4:	stp	x6, x8, [sp, #112]
   1fed8:	bl	a2c0 <memcpy@plt>
   1fedc:	mov	x3, x0
   1fee0:	ldr	x2, [x26]
   1fee4:	ldp	x6, x8, [sp, #112]
   1fee8:	b	1f838 <printf_parse@@Base+0x358>
   1feec:	mov	w10, #0x11                  	// #17
   1fef0:	b	1f958 <printf_parse@@Base+0x478>
   1fef4:	mov	w10, #0x10                  	// #16
   1fef8:	mov	w20, #0x73                  	// #115
   1fefc:	b	1f958 <printf_parse@@Base+0x478>
   1ff00:	str	x8, [x21, #64]
   1ff04:	adds	x0, x8, #0x1
   1ff08:	b.eq	1f744 <printf_parse@@Base+0x264>  // b.none
   1ff0c:	mov	x19, x8
   1ff10:	mov	x8, x0
   1ff14:	b	1f8d0 <printf_parse@@Base+0x3f0>
   1ff18:	mov	x9, x0
   1ff1c:	ldrb	w3, [x9, #1]!
   1ff20:	sub	w2, w3, #0x30
   1ff24:	and	w2, w2, #0xff
   1ff28:	cmp	w2, #0x9
   1ff2c:	b.ls	1ff1c <printf_parse@@Base+0xa3c>  // b.plast
   1ff30:	cmp	w3, #0x24
   1ff34:	b.ne	1f8c4 <printf_parse@@Base+0x3e4>  // b.any
   1ff38:	mov	x3, #0x0                   	// #0
   1ff3c:	mov	x9, #0xffffffffffffffff    	// #-1
   1ff40:	b	1ff54 <printf_parse@@Base+0xa74>
   1ff44:	and	w10, w1, #0xff
   1ff48:	add	x0, x0, #0x1
   1ff4c:	cmp	w10, #0x9
   1ff50:	b.hi	20008 <printf_parse@@Base+0xb28>  // b.pmore
   1ff54:	add	x2, x3, x3, lsl #2
   1ff58:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   1ff5c:	movk	x4, #0x1999, lsl #48
   1ff60:	cmp	x3, x4
   1ff64:	lsl	x2, x2, #1
   1ff68:	mov	x20, x0
   1ff6c:	csel	x2, x2, x9, ls  // ls = plast
   1ff70:	sxtw	x3, w1
   1ff74:	ldrb	w1, [x0, #1]
   1ff78:	adds	x2, x3, x2
   1ff7c:	sub	w1, w1, #0x30
   1ff80:	mov	x3, x2
   1ff84:	b.cc	1ff44 <printf_parse@@Base+0xa64>  // b.lo, b.ul, b.last
   1ff88:	and	w2, w1, #0xff
   1ff8c:	cmp	w2, #0x9
   1ff90:	b.hi	1f744 <printf_parse@@Base+0x264>  // b.pmore
   1ff94:	add	x0, x0, #0x1
   1ff98:	mov	x2, #0xffffffffffffffff    	// #-1
   1ff9c:	mov	x20, x0
   1ffa0:	b	1ff70 <printf_parse@@Base+0xa90>
   1ffa4:	sub	x25, x0, #0x1
   1ffa8:	cmn	x25, #0x3
   1ffac:	b.hi	1f744 <printf_parse@@Base+0x264>  // b.pmore
   1ffb0:	add	x19, x19, #0x2
   1ffb4:	b	1f5e0 <printf_parse@@Base+0x100>
   1ffb8:	ldr	x3, [x26, #8]
   1ffbc:	cmp	x23, x3
   1ffc0:	b.ne	1fdf4 <printf_parse@@Base+0x914>  // b.any
   1ffc4:	b	1fdfc <printf_parse@@Base+0x91c>
   1ffc8:	stp	x6, x8, [sp, #112]
   1ffcc:	str	x3, [sp, #128]
   1ffd0:	bl	a5f0 <malloc@plt>
   1ffd4:	ldp	x6, x8, [sp, #112]
   1ffd8:	ldr	x3, [sp, #128]
   1ffdc:	cbz	x0, 1fdfc <printf_parse@@Base+0x91c>
   1ffe0:	ldr	x2, [x26]
   1ffe4:	mov	x1, x3
   1ffe8:	stp	x0, x6, [sp, #112]
   1ffec:	lsl	x2, x2, #5
   1fff0:	str	x8, [sp, #128]
   1fff4:	bl	a2c0 <memcpy@plt>
   1fff8:	ldp	x3, x6, [sp, #112]
   1fffc:	str	x3, [x26, #8]
   20000:	ldr	x8, [sp, #128]
   20004:	b	1f8dc <printf_parse@@Base+0x3fc>
   20008:	sub	x19, x2, #0x1
   2000c:	cmn	x19, #0x3
   20010:	b.hi	1f744 <printf_parse@@Base+0x264>  // b.pmore
   20014:	add	x20, x20, #0x2
   20018:	str	x19, [x21, #64]
   2001c:	b	1f8d0 <printf_parse@@Base+0x3f0>
   20020:	sub	x20, x1, #0x1
   20024:	cmn	x20, #0x3
   20028:	b.hi	1f744 <printf_parse@@Base+0x264>  // b.pmore
   2002c:	add	x19, x19, #0x2
   20030:	str	x20, [x21, #40]
   20034:	b	1f7d0 <printf_parse@@Base+0x2f0>
   20038:	mov	x19, x0
   2003c:	mov	x1, #0x1                   	// #1
   20040:	b	1fb14 <printf_parse@@Base+0x634>
   20044:	mov	x0, x3
   20048:	mov	x3, x23
   2004c:	b	1ffe0 <printf_parse@@Base+0xb00>
   20050:	mov	x9, x3
   20054:	mov	x3, x23
   20058:	b	1fec8 <printf_parse@@Base+0x9e8>
   2005c:	mov	x3, x0
   20060:	b	1ffbc <printf_parse@@Base+0xadc>
   20064:	mov	x0, x3
   20068:	mov	x3, x23
   2006c:	b	1fdb8 <printf_parse@@Base+0x8d8>
   20070:	mov	x3, x0
   20074:	ldr	x0, [x1, #72]
   20078:	ldr	x4, [x1, #104]
   2007c:	cmp	x4, x0
   20080:	b.le	20124 <printf_parse@@Base+0xc44>
   20084:	ldr	x5, [x1, #8]
   20088:	ldr	w6, [x1, #144]
   2008c:	ldrb	w4, [x5, x0]
   20090:	cmp	w6, #0x1
   20094:	strb	w4, [x3]
   20098:	b.le	200b8 <printf_parse@@Base+0xbd8>
   2009c:	ldr	x6, [x1, #48]
   200a0:	cmp	x0, x6
   200a4:	b.eq	200b8 <printf_parse@@Base+0xbd8>  // b.none
   200a8:	ldr	x6, [x1, #16]
   200ac:	ldr	w6, [x6, x0, lsl #2]
   200b0:	cmn	w6, #0x1
   200b4:	b.eq	200fc <printf_parse@@Base+0xc1c>  // b.none
   200b8:	cmp	w4, #0x5c
   200bc:	b.eq	200e8 <printf_parse@@Base+0xc08>  // b.none
   200c0:	cmp	w4, #0x5b
   200c4:	b.eq	20134 <printf_parse@@Base+0xc54>  // b.none
   200c8:	cmp	w4, #0x5d
   200cc:	b.eq	20180 <printf_parse@@Base+0xca0>  // b.none
   200d0:	cmp	w4, #0x5e
   200d4:	b.ne	2010c <printf_parse@@Base+0xc2c>  // b.any
   200d8:	mov	w1, #0x19                  	// #25
   200dc:	mov	w0, #0x1                   	// #1
   200e0:	strb	w1, [x3, #8]
   200e4:	ret
   200e8:	tbz	w2, #0, 200fc <printf_parse@@Base+0xc1c>
   200ec:	ldr	x4, [x1, #88]
   200f0:	add	x2, x0, #0x1
   200f4:	cmp	x2, x4
   200f8:	b.lt	20190 <printf_parse@@Base+0xcb0>  // b.tstop
   200fc:	mov	w1, #0x1                   	// #1
   20100:	mov	w0, #0x1                   	// #1
   20104:	strb	w1, [x3, #8]
   20108:	ret
   2010c:	cmp	w4, #0x2d
   20110:	b.ne	200fc <printf_parse@@Base+0xc1c>  // b.any
   20114:	mov	w1, #0x16                  	// #22
   20118:	mov	w0, #0x1                   	// #1
   2011c:	strb	w1, [x3, #8]
   20120:	ret
   20124:	mov	w1, #0x2                   	// #2
   20128:	mov	w0, #0x0                   	// #0
   2012c:	strb	w1, [x3, #8]
   20130:	ret
   20134:	ldr	x1, [x1, #88]
   20138:	add	x4, x0, #0x1
   2013c:	cmp	x4, x1
   20140:	b.ge	20168 <printf_parse@@Base+0xc88>  // b.tcont
   20144:	add	x0, x5, x0
   20148:	ldrb	w0, [x0, #1]
   2014c:	strb	w0, [x3]
   20150:	cmp	w0, #0x3a
   20154:	b.eq	201cc <printf_parse@@Base+0xcec>  // b.none
   20158:	cmp	w0, #0x3d
   2015c:	b.eq	201bc <printf_parse@@Base+0xcdc>  // b.none
   20160:	cmp	w0, #0x2e
   20164:	b.eq	201ac <printf_parse@@Base+0xccc>  // b.none
   20168:	mov	w1, #0x1                   	// #1
   2016c:	mov	w2, #0x5b                  	// #91
   20170:	mov	w0, #0x1                   	// #1
   20174:	strb	w2, [x3]
   20178:	strb	w1, [x3, #8]
   2017c:	ret
   20180:	mov	w1, #0x15                  	// #21
   20184:	mov	w0, #0x1                   	// #1
   20188:	strb	w1, [x3, #8]
   2018c:	ret
   20190:	str	x2, [x1, #72]
   20194:	mov	w0, #0x1                   	// #1
   20198:	mov	w1, #0x1                   	// #1
   2019c:	ldrb	w2, [x5, x2]
   201a0:	strb	w2, [x3]
   201a4:	strb	w1, [x3, #8]
   201a8:	ret
   201ac:	mov	w1, #0x1a                  	// #26
   201b0:	mov	w0, #0x2                   	// #2
   201b4:	strb	w1, [x3, #8]
   201b8:	ret
   201bc:	mov	w1, #0x1c                  	// #28
   201c0:	mov	w0, #0x2                   	// #2
   201c4:	strb	w1, [x3, #8]
   201c8:	ret
   201cc:	tbz	w2, #2, 20168 <printf_parse@@Base+0xc88>
   201d0:	mov	w1, #0x1e                  	// #30
   201d4:	mov	w0, #0x2                   	// #2
   201d8:	strb	w1, [x3, #8]
   201dc:	ret
   201e0:	stp	x29, x30, [sp, #-144]!
   201e4:	mov	x13, x0
   201e8:	add	x8, x3, x3, lsl #1
   201ec:	mov	x29, sp
   201f0:	stp	x27, x28, [sp, #80]
   201f4:	ldr	x27, [x0, #152]
   201f8:	stp	x23, x24, [sp, #48]
   201fc:	stp	x25, x26, [sp, #64]
   20200:	mov	w26, w1
   20204:	ldr	x0, [x27, #48]
   20208:	add	x23, x0, x8, lsl #3
   2020c:	ldr	x9, [x23, #8]
   20210:	cmp	x9, #0x0
   20214:	b.le	203c0 <printf_parse@@Base+0xee0>
   20218:	mov	x0, #0x1                   	// #1
   2021c:	stp	x21, x22, [sp, #32]
   20220:	lsl	x0, x0, x2
   20224:	str	x0, [sp, #128]
   20228:	mvn	w0, w0
   2022c:	and	w0, w0, #0xffff
   20230:	add	x22, x4, x4, lsl #2
   20234:	str	w0, [sp, #140]
   20238:	and	w0, w1, #0x2
   2023c:	mov	x14, x3
   20240:	mov	x25, x2
   20244:	mov	x24, x4
   20248:	lsl	x22, x22, #3
   2024c:	stp	x19, x20, [sp, #16]
   20250:	mov	x19, #0x0                   	// #0
   20254:	str	w0, [sp, #108]
   20258:	and	w0, w1, #0x1
   2025c:	str	w0, [sp, #136]
   20260:	b	20278 <printf_parse@@Base+0xd98>
   20264:	cmp	w5, #0x4
   20268:	b.eq	20308 <printf_parse@@Base+0xe28>  // b.none
   2026c:	add	x19, x19, #0x1
   20270:	cmp	x19, x9
   20274:	b.ge	203b8 <printf_parse@@Base+0xed8>  // b.tcont
   20278:	ldr	x5, [x23, #16]
   2027c:	ldr	x7, [x27]
   20280:	ldr	x20, [x5, x19, lsl #3]
   20284:	lsl	x6, x20, #4
   20288:	add	x5, x7, x6
   2028c:	ldrb	w5, [x5, #8]
   20290:	cmp	w5, #0x8
   20294:	b.eq	202d4 <printf_parse@@Base+0xdf4>  // b.none
   20298:	cmp	w5, #0x9
   2029c:	b.ne	20264 <printf_parse@@Base+0xd84>  // b.any
   202a0:	ldr	w0, [sp, #108]
   202a4:	cbz	w0, 2026c <printf_parse@@Base+0xd8c>
   202a8:	ldr	x0, [x7, x6]
   202ac:	cmp	x0, x25
   202b0:	b.ne	2026c <printf_parse@@Base+0xd8c>  // b.any
   202b4:	mov	w0, #0x0                   	// #0
   202b8:	ldp	x19, x20, [sp, #16]
   202bc:	ldp	x21, x22, [sp, #32]
   202c0:	ldp	x23, x24, [sp, #48]
   202c4:	ldp	x25, x26, [sp, #64]
   202c8:	ldp	x27, x28, [sp, #80]
   202cc:	ldp	x29, x30, [sp], #144
   202d0:	ret
   202d4:	ldr	w0, [sp, #136]
   202d8:	cbz	w0, 2026c <printf_parse@@Base+0xd8c>
   202dc:	ldr	x0, [x7, x6]
   202e0:	cmp	x0, x25
   202e4:	b.ne	2026c <printf_parse@@Base+0xd8c>  // b.any
   202e8:	mov	w0, #0xffffffff            	// #-1
   202ec:	ldp	x19, x20, [sp, #16]
   202f0:	ldp	x21, x22, [sp, #32]
   202f4:	ldp	x23, x24, [sp, #48]
   202f8:	ldp	x25, x26, [sp, #64]
   202fc:	ldp	x27, x28, [sp, #80]
   20300:	ldp	x29, x30, [sp], #144
   20304:	ret
   20308:	cmn	x24, #0x1
   2030c:	b.eq	2026c <printf_parse@@Base+0xd8c>  // b.none
   20310:	ldr	x21, [x13, #216]
   20314:	add	x28, x20, x20, lsl #1
   20318:	ldr	w0, [sp, #108]
   2031c:	cmp	x25, #0x3f
   20320:	lsl	x28, x28, #3
   20324:	add	x21, x21, x22
   20328:	b.gt	203d8 <printf_parse@@Base+0xef8>
   2032c:	cbnz	w0, 20504 <printf_parse@@Base+0x1024>
   20330:	ldr	x0, [x21]
   20334:	cmp	x20, x0
   20338:	b.ne	20398 <printf_parse@@Base+0xeb8>  // b.any
   2033c:	ldr	x5, [sp, #128]
   20340:	mov	x4, x24
   20344:	ldrh	w3, [x21, #34]
   20348:	mov	x2, x25
   2034c:	mov	w1, w26
   20350:	mov	x0, x13
   20354:	tst	x3, x5
   20358:	b.eq	20398 <printf_parse@@Base+0xeb8>  // b.none
   2035c:	ldr	x3, [x27, #40]
   20360:	stp	x14, x13, [sp, #112]
   20364:	add	x3, x3, x28
   20368:	ldr	x3, [x3, #16]
   2036c:	ldr	x3, [x3]
   20370:	cmp	x14, x3
   20374:	b.eq	20514 <printf_parse@@Base+0x1034>  // b.none
   20378:	bl	201e0 <printf_parse@@Base+0xd00>
   2037c:	cmn	w0, #0x1
   20380:	b.eq	202e8 <printf_parse@@Base+0xe08>  // b.none
   20384:	ldp	x14, x13, [sp, #112]
   20388:	ldrh	w0, [x21, #34]
   2038c:	ldr	w1, [sp, #140]
   20390:	and	w0, w1, w0
   20394:	strh	w0, [x21, #34]
   20398:	ldrb	w0, [x21, #32]
   2039c:	add	x21, x21, #0x28
   203a0:	cbnz	w0, 20330 <printf_parse@@Base+0xe50>
   203a4:	ldr	x9, [x23, #8]
   203a8:	add	x19, x19, #0x1
   203ac:	cmp	x19, x9
   203b0:	b.lt	20278 <printf_parse@@Base+0xd98>  // b.tstop
   203b4:	nop
   203b8:	ldp	x19, x20, [sp, #16]
   203bc:	ldp	x21, x22, [sp, #32]
   203c0:	asr	w0, w26, #1
   203c4:	ldp	x23, x24, [sp, #48]
   203c8:	ldp	x25, x26, [sp, #64]
   203cc:	ldp	x27, x28, [sp, #80]
   203d0:	ldp	x29, x30, [sp], #144
   203d4:	ret
   203d8:	cbnz	w0, 20474 <printf_parse@@Base+0xf94>
   203dc:	nop
   203e0:	ldr	x3, [x21]
   203e4:	mov	x4, x24
   203e8:	mov	x2, x25
   203ec:	mov	w1, w26
   203f0:	mov	x0, x13
   203f4:	add	x21, x21, #0x28
   203f8:	cmp	x20, x3
   203fc:	b.ne	2042c <printf_parse@@Base+0xf4c>  // b.any
   20400:	ldr	x3, [x27, #40]
   20404:	stp	x14, x13, [sp, #112]
   20408:	add	x3, x3, x28
   2040c:	ldr	x3, [x3, #16]
   20410:	ldr	x3, [x3]
   20414:	cmp	x14, x3
   20418:	b.eq	20514 <printf_parse@@Base+0x1034>  // b.none
   2041c:	bl	201e0 <printf_parse@@Base+0xd00>
   20420:	cmn	w0, #0x1
   20424:	ldp	x14, x13, [sp, #112]
   20428:	b.eq	202e8 <printf_parse@@Base+0xe08>  // b.none
   2042c:	ldurb	w0, [x21, #-8]
   20430:	cbnz	w0, 203e0 <printf_parse@@Base+0xf00>
   20434:	ldr	x9, [x23, #8]
   20438:	b	203a8 <printf_parse@@Base+0xec8>
   2043c:	ldr	x3, [x27, #40]
   20440:	stp	x14, x13, [sp, #112]
   20444:	add	x3, x3, x28
   20448:	ldr	x3, [x3, #16]
   2044c:	ldr	x3, [x3]
   20450:	cmp	x14, x3
   20454:	b.eq	20514 <printf_parse@@Base+0x1034>  // b.none
   20458:	bl	201e0 <printf_parse@@Base+0xd00>
   2045c:	cmn	w0, #0x1
   20460:	b.eq	202e8 <printf_parse@@Base+0xe08>  // b.none
   20464:	ldp	x14, x13, [sp, #112]
   20468:	cbz	w0, 202b4 <printf_parse@@Base+0xdd4>
   2046c:	ldurb	w0, [x21, #-8]
   20470:	cbz	w0, 203a4 <printf_parse@@Base+0xec4>
   20474:	ldr	x3, [x21]
   20478:	mov	x4, x24
   2047c:	mov	x2, x25
   20480:	mov	w1, w26
   20484:	mov	x0, x13
   20488:	add	x21, x21, #0x28
   2048c:	cmp	x20, x3
   20490:	b.eq	2043c <printf_parse@@Base+0xf5c>  // b.none
   20494:	b	2046c <printf_parse@@Base+0xf8c>
   20498:	ldr	x5, [sp, #128]
   2049c:	mov	x4, x24
   204a0:	ldrh	w3, [x21, #34]
   204a4:	mov	x2, x25
   204a8:	mov	w1, w26
   204ac:	mov	x0, x13
   204b0:	tst	x3, x5
   204b4:	b.eq	204f8 <printf_parse@@Base+0x1018>  // b.none
   204b8:	ldr	x3, [x27, #40]
   204bc:	add	x3, x3, x28
   204c0:	ldr	x3, [x3, #16]
   204c4:	ldr	x3, [x3]
   204c8:	cmp	x14, x3
   204cc:	b.eq	20514 <printf_parse@@Base+0x1034>  // b.none
   204d0:	stp	x13, x14, [sp, #112]
   204d4:	bl	201e0 <printf_parse@@Base+0xd00>
   204d8:	cmn	w0, #0x1
   204dc:	ldp	x13, x14, [sp, #112]
   204e0:	b.eq	202e8 <printf_parse@@Base+0xe08>  // b.none
   204e4:	cbz	w0, 202b4 <printf_parse@@Base+0xdd4>
   204e8:	ldrh	w0, [x21, #34]
   204ec:	ldr	w1, [sp, #140]
   204f0:	and	w0, w1, w0
   204f4:	strh	w0, [x21, #34]
   204f8:	ldrb	w0, [x21, #32]
   204fc:	add	x21, x21, #0x28
   20500:	cbz	w0, 203a4 <printf_parse@@Base+0xec4>
   20504:	ldr	x0, [x21]
   20508:	cmp	x0, x20
   2050c:	b.eq	20498 <printf_parse@@Base+0xfb8>  // b.none
   20510:	b	204f8 <printf_parse@@Base+0x1018>
   20514:	ldr	w0, [sp, #136]
   20518:	ldp	x19, x20, [sp, #16]
   2051c:	neg	w0, w0
   20520:	ldp	x21, x22, [sp, #32]
   20524:	ldp	x23, x24, [sp, #48]
   20528:	ldp	x25, x26, [sp, #64]
   2052c:	ldp	x27, x28, [sp, #80]
   20530:	ldp	x29, x30, [sp], #144
   20534:	ret
   20538:	stp	x29, x30, [sp, #-48]!
   2053c:	mov	x29, sp
   20540:	stp	x19, x20, [sp, #16]
   20544:	mov	x19, x0
   20548:	mov	x20, x1
   2054c:	ldr	x0, [x0]
   20550:	cbz	x0, 20588 <printf_parse@@Base+0x10a8>
   20554:	ldr	x1, [x19, #8]
   20558:	str	x21, [sp, #32]
   2055c:	ldr	x21, [x19, #16]
   20560:	cbnz	x1, 205bc <printf_parse@@Base+0x10dc>
   20564:	str	x20, [x21]
   20568:	ldr	x1, [x19, #8]
   2056c:	mov	w0, #0x1                   	// #1
   20570:	ldr	x21, [sp, #32]
   20574:	add	x1, x1, #0x1
   20578:	str	x1, [x19, #8]
   2057c:	ldp	x19, x20, [sp, #16]
   20580:	ldp	x29, x30, [sp], #48
   20584:	ret
   20588:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   2058c:	ldr	q0, [x0, #1712]
   20590:	mov	x0, #0x8                   	// #8
   20594:	str	q0, [x19]
   20598:	bl	a5f0 <malloc@plt>
   2059c:	mov	x1, x0
   205a0:	str	x0, [x19, #16]
   205a4:	cbz	x0, 20624 <printf_parse@@Base+0x1144>
   205a8:	str	x20, [x1]
   205ac:	mov	w0, #0x1                   	// #1
   205b0:	ldp	x19, x20, [sp, #16]
   205b4:	ldp	x29, x30, [sp], #48
   205b8:	ret
   205bc:	cmp	x0, x1
   205c0:	b.eq	20630 <printf_parse@@Base+0x1150>  // b.none
   205c4:	ldr	x0, [x21]
   205c8:	lsl	x2, x1, #3
   205cc:	cmp	x0, x20
   205d0:	b.gt	20604 <printf_parse@@Base+0x1124>
   205d4:	add	x0, x21, x2
   205d8:	ldur	x0, [x0, #-8]
   205dc:	cmp	x20, x0
   205e0:	b.ge	205fc <printf_parse@@Base+0x111c>  // b.tcont
   205e4:	sub	x1, x21, #0x8
   205e8:	str	x0, [x21, x2]
   205ec:	sub	x2, x2, #0x8
   205f0:	ldr	x0, [x1, x2]
   205f4:	cmp	x0, x20
   205f8:	b.gt	205e8 <printf_parse@@Base+0x1108>
   205fc:	str	x20, [x21, x2]
   20600:	b	20568 <printf_parse@@Base+0x1088>
   20604:	cmp	x1, #0x0
   20608:	b.le	205fc <printf_parse@@Base+0x111c>
   2060c:	mov	x1, x21
   20610:	add	x0, x21, #0x8
   20614:	bl	a2d0 <memmove@plt>
   20618:	mov	x2, #0x0                   	// #0
   2061c:	str	x20, [x21, x2]
   20620:	b	20568 <printf_parse@@Base+0x1088>
   20624:	mov	w0, #0x0                   	// #0
   20628:	stp	xzr, xzr, [x19]
   2062c:	b	2057c <printf_parse@@Base+0x109c>
   20630:	lsl	x0, x1, #1
   20634:	str	x0, [x19]
   20638:	lsl	x1, x1, #4
   2063c:	mov	x0, x21
   20640:	bl	a7e0 <realloc@plt>
   20644:	mov	x21, x0
   20648:	cbz	x0, 20658 <printf_parse@@Base+0x1178>
   2064c:	str	x0, [x19, #16]
   20650:	ldr	x1, [x19, #8]
   20654:	b	205c4 <printf_parse@@Base+0x10e4>
   20658:	mov	w0, #0x0                   	// #0
   2065c:	ldr	x21, [sp, #32]
   20660:	b	2057c <printf_parse@@Base+0x109c>
   20664:	nop
   20668:	stp	x29, x30, [sp, #-80]!
   2066c:	mov	x29, sp
   20670:	stp	x21, x22, [sp, #32]
   20674:	add	x22, x1, #0x20
   20678:	mov	x21, x1
   2067c:	stp	x23, x24, [sp, #48]
   20680:	mov	x24, x2
   20684:	ldr	x23, [x1, #16]
   20688:	str	x25, [sp, #64]
   2068c:	str	x2, [x1]
   20690:	mov	x25, x0
   20694:	str	x23, [x1, #32]
   20698:	str	xzr, [x22, #8]
   2069c:	lsl	x0, x23, #3
   206a0:	bl	a5f0 <malloc@plt>
   206a4:	str	x0, [x22, #16]
   206a8:	cbz	x0, 20784 <printf_parse@@Base+0x12a4>
   206ac:	stp	x19, x20, [sp, #16]
   206b0:	cmp	x23, #0x0
   206b4:	mov	x19, #0x0                   	// #0
   206b8:	b.gt	206c8 <printf_parse@@Base+0x11e8>
   206bc:	b	2070c <printf_parse@@Base+0x122c>
   206c0:	cmp	x19, x23
   206c4:	b.ge	2070c <printf_parse@@Base+0x122c>  // b.tcont
   206c8:	ldr	x4, [x21, #24]
   206cc:	ldr	x3, [x25]
   206d0:	ldr	x20, [x4, x19, lsl #3]
   206d4:	add	x19, x19, #0x1
   206d8:	add	x3, x3, x20, lsl #4
   206dc:	ldrb	w3, [x3, #8]
   206e0:	tbnz	w3, #3, 206c0 <printf_parse@@Base+0x11e0>
   206e4:	ldp	x2, x1, [x22]
   206e8:	ldr	x0, [x22, #16]
   206ec:	cmp	x2, x1
   206f0:	b.eq	2075c <printf_parse@@Base+0x127c>  // b.none
   206f4:	add	x2, x1, #0x1
   206f8:	str	x2, [x22, #8]
   206fc:	str	x20, [x0, x1, lsl #3]
   20700:	ldr	x23, [x21, #16]
   20704:	cmp	x19, x23
   20708:	b.lt	206c8 <printf_parse@@Base+0x11e8>  // b.tstop
   2070c:	ldr	x19, [x25, #136]
   20710:	ldr	x20, [x25, #64]
   20714:	and	x24, x24, x19
   20718:	add	x24, x24, x24, lsl #1
   2071c:	lsl	x24, x24, #3
   20720:	add	x22, x20, x24
   20724:	ldr	x2, [x20, x24]
   20728:	ldp	x0, x3, [x22, #8]
   2072c:	add	x1, x2, #0x1
   20730:	cmp	x0, x2
   20734:	b.le	2079c <printf_parse@@Base+0x12bc>
   20738:	str	x1, [x20, x24]
   2073c:	mov	w0, #0x0                   	// #0
   20740:	str	x21, [x3, x2, lsl #3]
   20744:	ldp	x19, x20, [sp, #16]
   20748:	ldp	x21, x22, [sp, #32]
   2074c:	ldp	x23, x24, [sp, #48]
   20750:	ldr	x25, [sp, #64]
   20754:	ldp	x29, x30, [sp], #80
   20758:	ret
   2075c:	add	x1, x1, #0x1
   20760:	lsl	x2, x1, #1
   20764:	str	x2, [x22]
   20768:	lsl	x1, x1, #4
   2076c:	bl	a7e0 <realloc@plt>
   20770:	cbz	x0, 20780 <printf_parse@@Base+0x12a0>
   20774:	str	x0, [x22, #16]
   20778:	ldr	x1, [x22, #8]
   2077c:	b	206f4 <printf_parse@@Base+0x1214>
   20780:	ldp	x19, x20, [sp, #16]
   20784:	mov	w0, #0xc                   	// #12
   20788:	ldp	x21, x22, [sp, #32]
   2078c:	ldp	x23, x24, [sp, #48]
   20790:	ldr	x25, [sp, #64]
   20794:	ldp	x29, x30, [sp], #80
   20798:	ret
   2079c:	mov	x0, x3
   207a0:	lsl	x23, x1, #1
   207a4:	lsl	x1, x1, #4
   207a8:	bl	a7e0 <realloc@plt>
   207ac:	mov	x3, x0
   207b0:	cbz	x0, 20780 <printf_parse@@Base+0x12a0>
   207b4:	ldr	x2, [x20, x24]
   207b8:	stp	x23, x0, [x22, #8]
   207bc:	add	x1, x2, #0x1
   207c0:	b	20738 <printf_parse@@Base+0x1258>
   207c4:	nop
   207c8:	stp	x29, x30, [sp, #-160]!
   207cc:	mov	x29, sp
   207d0:	stp	x19, x20, [sp, #16]
   207d4:	mov	x19, x0
   207d8:	stp	x21, x22, [sp, #32]
   207dc:	ldr	x21, [x0, #64]
   207e0:	ldr	x0, [x0, #88]
   207e4:	ldr	x20, [x19, #48]
   207e8:	cmp	x21, x0
   207ec:	csel	x21, x21, x0, le
   207f0:	cmp	x21, x20
   207f4:	b.le	208a0 <printf_parse@@Base+0x13c0>
   207f8:	add	x22, sp, #0x5c
   207fc:	stp	x23, x24, [sp, #48]
   20800:	add	x23, x19, #0x20
   20804:	add	x24, sp, #0x60
   20808:	str	x25, [sp, #64]
   2080c:	nop
   20810:	ldr	x4, [x19, #120]
   20814:	sub	x2, x21, x20
   20818:	ldr	x25, [x19, #32]
   2081c:	cbnz	x4, 20918 <printf_parse@@Base+0x1438>
   20820:	ldr	x0, [x19, #40]
   20824:	ldr	x1, [x19]
   20828:	add	x0, x20, x0
   2082c:	add	x1, x1, x0
   20830:	mov	x3, x23
   20834:	mov	x0, x22
   20838:	bl	a3e0 <rpl_mbrtowc@plt>
   2083c:	sub	x1, x0, #0x1
   20840:	cmn	x1, #0x3
   20844:	b.hi	208b8 <printf_parse@@Base+0x13d8>  // b.pmore
   20848:	cmn	x0, #0x2
   2084c:	b.eq	20990 <printf_parse@@Base+0x14b0>  // b.none
   20850:	ldr	x3, [x19, #16]
   20854:	add	x1, x20, x0
   20858:	ldr	w4, [sp, #92]
   2085c:	add	x0, x20, #0x1
   20860:	lsl	x2, x20, #2
   20864:	cmp	x0, x1
   20868:	str	w4, [x3, x20, lsl #2]
   2086c:	b.ge	208f8 <printf_parse@@Base+0x1418>  // b.tcont
   20870:	mvn	x20, x20
   20874:	add	x0, x2, #0x4
   20878:	add	x2, x20, x1
   2087c:	add	x0, x3, x0
   20880:	mov	x20, x1
   20884:	mov	w1, #0xff                  	// #255
   20888:	lsl	x2, x2, #2
   2088c:	bl	a6f0 <memset@plt>
   20890:	cmp	x21, x20
   20894:	b.gt	20810 <printf_parse@@Base+0x1330>
   20898:	ldp	x23, x24, [sp, #48]
   2089c:	ldr	x25, [sp, #64]
   208a0:	dup	v0.2d, x20
   208a4:	ldp	x21, x22, [sp, #32]
   208a8:	str	q0, [x19, #48]
   208ac:	ldp	x19, x20, [sp, #16]
   208b0:	ldp	x29, x30, [sp], #160
   208b4:	ret
   208b8:	ldr	x0, [x19]
   208bc:	ldr	x2, [x19, #40]
   208c0:	add	x0, x0, x20
   208c4:	ldr	x1, [x19, #120]
   208c8:	ldrb	w4, [x0, x2]
   208cc:	str	w4, [sp, #92]
   208d0:	cbnz	x1, 209c4 <printf_parse@@Base+0x14e4>
   208d4:	ldr	x3, [x19, #16]
   208d8:	str	x25, [x19, #32]
   208dc:	mov	x0, #0x1                   	// #1
   208e0:	add	x1, x20, x0
   208e4:	add	x0, x20, #0x1
   208e8:	lsl	x2, x20, #2
   208ec:	str	w4, [x3, x20, lsl #2]
   208f0:	cmp	x0, x1
   208f4:	b.lt	20870 <printf_parse@@Base+0x1390>  // b.tstop
   208f8:	mov	x20, x0
   208fc:	cmp	x21, x0
   20900:	b.le	20898 <printf_parse@@Base+0x13b8>
   20904:	ldr	x4, [x19, #120]
   20908:	sub	x2, x21, x20
   2090c:	ldr	x25, [x19, #32]
   20910:	cbz	x4, 20820 <printf_parse@@Base+0x1340>
   20914:	nop
   20918:	ldr	w0, [x19, #144]
   2091c:	cmp	w0, #0x0
   20920:	b.le	20988 <printf_parse@@Base+0x14a8>
   20924:	cmp	x2, #0x0
   20928:	b.le	20988 <printf_parse@@Base+0x14a8>
   2092c:	mov	x1, #0x1                   	// #1
   20930:	b	20944 <printf_parse@@Base+0x1464>
   20934:	cmp	x1, x2
   20938:	b.eq	20988 <printf_parse@@Base+0x14a8>  // b.none
   2093c:	ldr	x4, [x19, #120]
   20940:	mov	x1, x7
   20944:	ldr	x0, [x19]
   20948:	add	x5, x24, x1
   2094c:	ldr	x3, [x19, #40]
   20950:	add	x0, x0, x1
   20954:	add	x0, x0, x20
   20958:	add	x7, x1, #0x1
   2095c:	add	x0, x0, x3
   20960:	ldr	x3, [x19, #8]
   20964:	ldurb	w6, [x0, #-1]
   20968:	add	x0, x3, x1
   2096c:	add	x0, x0, x20
   20970:	ldrb	w3, [x4, x6]
   20974:	sturb	w3, [x0, #-1]
   20978:	sturb	w3, [x5, #-1]
   2097c:	ldr	w0, [x19, #144]
   20980:	cmp	w0, w1
   20984:	b.gt	20934 <printf_parse@@Base+0x1454>
   20988:	mov	x1, x24
   2098c:	b	20830 <printf_parse@@Base+0x1350>
   20990:	ldr	x1, [x19, #64]
   20994:	ldr	x0, [x19, #88]
   20998:	cmp	x1, x0
   2099c:	b.ge	208b8 <printf_parse@@Base+0x13d8>  // b.tcont
   209a0:	dup	v0.2d, x20
   209a4:	ldp	x23, x24, [sp, #48]
   209a8:	str	x25, [x19, #32]
   209ac:	ldp	x21, x22, [sp, #32]
   209b0:	ldr	x25, [sp, #64]
   209b4:	str	q0, [x19, #48]
   209b8:	ldp	x19, x20, [sp, #16]
   209bc:	ldp	x29, x30, [sp], #160
   209c0:	ret
   209c4:	and	x4, x4, #0xff
   209c8:	ldrb	w4, [x1, x4]
   209cc:	b	208d4 <printf_parse@@Base+0x13f4>
   209d0:	stp	x29, x30, [sp, #-208]!
   209d4:	mov	x29, sp
   209d8:	stp	x19, x20, [sp, #16]
   209dc:	mov	x19, x0
   209e0:	stp	x21, x22, [sp, #32]
   209e4:	ldrb	w1, [x0, #138]
   209e8:	ldr	x21, [x0, #64]
   209ec:	ldr	x0, [x0, #88]
   209f0:	ldr	x20, [x19, #48]
   209f4:	cmp	x21, x0
   209f8:	csel	x21, x21, x0, le
   209fc:	cbnz	w1, 20a08 <printf_parse@@Base+0x1528>
   20a00:	ldr	x0, [x19, #120]
   20a04:	cbz	x0, 20b60 <printf_parse@@Base+0x1680>
   20a08:	ldr	x22, [x19, #56]
   20a0c:	cmp	x21, x20
   20a10:	b.le	20b48 <printf_parse@@Base+0x1668>
   20a14:	stp	x23, x24, [sp, #48]
   20a18:	add	x24, x19, #0x20
   20a1c:	sub	x23, x21, x20
   20a20:	add	x0, sp, #0x84
   20a24:	stp	x25, x26, [sp, #64]
   20a28:	str	x0, [sp, #112]
   20a2c:	ldr	x2, [x19, #120]
   20a30:	ldr	x0, [x19, #32]
   20a34:	str	x0, [sp, #136]
   20a38:	cbnz	x2, 20d3c <printf_parse@@Base+0x185c>
   20a3c:	ldr	x0, [x19, #40]
   20a40:	ldr	x25, [x19]
   20a44:	add	x0, x22, x0
   20a48:	add	x25, x25, x0
   20a4c:	ldr	x0, [sp, #112]
   20a50:	mov	x2, x23
   20a54:	mov	x3, x24
   20a58:	mov	x1, x25
   20a5c:	bl	a3e0 <rpl_mbrtowc@plt>
   20a60:	sub	x26, x0, #0x1
   20a64:	mov	x23, x0
   20a68:	cmn	x26, #0x4
   20a6c:	b.hi	20de8 <printf_parse@@Base+0x1908>  // b.pmore
   20a70:	stp	x27, x28, [sp, #80]
   20a74:	mov	x24, x20
   20a78:	ldr	w28, [sp, #132]
   20a7c:	mov	w0, w28
   20a80:	bl	ae30 <towupper@plt>
   20a84:	mov	w27, w0
   20a88:	cmp	w28, w0
   20a8c:	b.eq	20dd0 <printf_parse@@Base+0x18f0>  // b.none
   20a90:	add	x2, sp, #0x88
   20a94:	add	x28, sp, #0x90
   20a98:	mov	x0, x28
   20a9c:	mov	w1, w27
   20aa0:	bl	aff0 <wcrtomb@plt>
   20aa4:	mov	x2, x0
   20aa8:	cmp	x23, x0
   20aac:	b.ne	20b1c <printf_parse@@Base+0x163c>  // b.any
   20ab0:	ldr	x0, [x19, #8]
   20ab4:	mov	x1, x28
   20ab8:	mov	x2, x23
   20abc:	add	x0, x0, x20
   20ac0:	bl	a2c0 <memcpy@plt>
   20ac4:	ldrb	w0, [x19, #140]
   20ac8:	cbnz	w0, 20e50 <printf_parse@@Base+0x1970>
   20acc:	ldr	x0, [x19, #16]
   20ad0:	add	x20, x20, #0x1
   20ad4:	add	x1, x23, x24
   20ad8:	add	x22, x23, x22
   20adc:	cmp	x20, x1
   20ae0:	lsl	x3, x24, #2
   20ae4:	str	w27, [x0, x24, lsl #2]
   20ae8:	b.ge	20b0c <printf_parse@@Base+0x162c>  // b.tcont
   20aec:	mvn	x2, x24
   20af0:	add	x3, x3, #0x4
   20af4:	add	x2, x2, x1
   20af8:	mov	x20, x1
   20afc:	add	x0, x0, x3
   20b00:	mov	w1, #0xff                  	// #255
   20b04:	lsl	x2, x2, #2
   20b08:	bl	a6f0 <memset@plt>
   20b0c:	ldp	x23, x24, [sp, #48]
   20b10:	ldp	x25, x26, [sp, #64]
   20b14:	ldp	x27, x28, [sp, #80]
   20b18:	b	20a0c <printf_parse@@Base+0x152c>
   20b1c:	cmn	x0, #0x1
   20b20:	b.eq	20dd0 <printf_parse@@Base+0x18f0>  // b.none
   20b24:	add	x24, x0, x20
   20b28:	ldr	x0, [x19, #64]
   20b2c:	cmp	x24, x0
   20b30:	b.ls	20f0c <printf_parse@@Base+0x1a2c>  // b.plast
   20b34:	ldp	x27, x28, [sp, #80]
   20b38:	ldr	x0, [sp, #136]
   20b3c:	ldp	x23, x24, [sp, #48]
   20b40:	ldp	x25, x26, [sp, #64]
   20b44:	str	x0, [x19, #32]
   20b48:	mov	w0, #0x0                   	// #0
   20b4c:	stp	x20, x22, [x19, #48]
   20b50:	ldp	x19, x20, [sp, #16]
   20b54:	ldp	x21, x22, [sp, #32]
   20b58:	ldp	x29, x30, [sp], #208
   20b5c:	ret
   20b60:	ldrb	w0, [x19, #140]
   20b64:	cbnz	w0, 20a08 <printf_parse@@Base+0x1528>
   20b68:	cmp	x20, x21
   20b6c:	b.ge	20dc0 <printf_parse@@Base+0x18e0>  // b.tcont
   20b70:	add	x0, sp, #0x88
   20b74:	stp	x23, x24, [sp, #48]
   20b78:	add	x24, x19, #0x20
   20b7c:	stp	x25, x26, [sp, #64]
   20b80:	add	x25, sp, #0x84
   20b84:	stp	x27, x28, [sp, #80]
   20b88:	add	x27, sp, #0x90
   20b8c:	str	x0, [sp, #120]
   20b90:	b	20c04 <printf_parse@@Base+0x1724>
   20b94:	ldr	x2, [sp, #120]
   20b98:	mov	w1, w0
   20b9c:	mov	x0, x27
   20ba0:	bl	aff0 <wcrtomb@plt>
   20ba4:	cmp	x28, x0
   20ba8:	b.ne	20da8 <printf_parse@@Base+0x18c8>  // b.any
   20bac:	ldr	x0, [x19, #8]
   20bb0:	mov	x2, x28
   20bb4:	mov	x1, x27
   20bb8:	add	x0, x0, x20
   20bbc:	bl	a2c0 <memcpy@plt>
   20bc0:	ldr	x0, [x19, #16]
   20bc4:	add	x20, x20, #0x1
   20bc8:	add	x3, x28, x22
   20bcc:	lsl	x1, x22, #2
   20bd0:	cmp	x20, x3
   20bd4:	str	w26, [x0, x22, lsl #2]
   20bd8:	b.ge	20bfc <printf_parse@@Base+0x171c>  // b.tcont
   20bdc:	mvn	x2, x22
   20be0:	add	x1, x1, #0x4
   20be4:	add	x2, x2, x3
   20be8:	add	x0, x0, x1
   20bec:	mov	x20, x3
   20bf0:	mov	w1, #0xff                  	// #255
   20bf4:	lsl	x2, x2, #2
   20bf8:	bl	a6f0 <memset@plt>
   20bfc:	cmp	x20, x21
   20c00:	b.ge	20db4 <printf_parse@@Base+0x18d4>  // b.tcont
   20c04:	ldr	x26, [x19]
   20c08:	mov	x22, x20
   20c0c:	ldr	x23, [x19, #40]
   20c10:	add	x0, x26, x23
   20c14:	ldrb	w28, [x0, x20]
   20c18:	tbnz	w28, #7, 20c28 <printf_parse@@Base+0x1748>
   20c1c:	mov	x0, x24
   20c20:	bl	a930 <mbsinit@plt>
   20c24:	cbnz	w0, 20ca0 <printf_parse@@Base+0x17c0>
   20c28:	ldr	x4, [x19, #32]
   20c2c:	add	x1, x23, x20
   20c30:	sub	x23, x21, x20
   20c34:	add	x1, x26, x1
   20c38:	mov	x2, x23
   20c3c:	mov	x3, x24
   20c40:	mov	x0, x25
   20c44:	str	x4, [sp, #136]
   20c48:	bl	a3e0 <rpl_mbrtowc@plt>
   20c4c:	str	x25, [sp, #112]
   20c50:	mov	x28, x0
   20c54:	sub	x0, x0, #0x1
   20c58:	cmn	x0, #0x4
   20c5c:	b.hi	20ccc <printf_parse@@Base+0x17ec>  // b.pmore
   20c60:	ldr	w1, [sp, #132]
   20c64:	str	w1, [sp, #104]
   20c68:	mov	w0, w1
   20c6c:	bl	ae30 <towupper@plt>
   20c70:	mov	w26, w0
   20c74:	ldr	w1, [sp, #104]
   20c78:	cmp	w1, w0
   20c7c:	b.ne	20b94 <printf_parse@@Base+0x16b4>  // b.any
   20c80:	ldp	x5, x0, [x19]
   20c84:	mov	x2, x28
   20c88:	ldr	x1, [x19, #40]
   20c8c:	add	x1, x20, x1
   20c90:	add	x1, x5, x1
   20c94:	add	x0, x0, x20
   20c98:	bl	a2c0 <memcpy@plt>
   20c9c:	b	20bc0 <printf_parse@@Base+0x16e0>
   20ca0:	bl	a7f0 <__ctype_toupper_loc@plt>
   20ca4:	ldr	x0, [x0]
   20ca8:	mov	w1, w28
   20cac:	ldr	x2, [x19, #8]
   20cb0:	ldr	w0, [x0, x1, lsl #2]
   20cb4:	strb	w0, [x2, x20]
   20cb8:	ldp	x1, x0, [x19, #8]
   20cbc:	ldrb	w1, [x1, x20]
   20cc0:	str	w1, [x0, x20, lsl #2]
   20cc4:	add	x20, x20, #0x1
   20cc8:	b	20bfc <printf_parse@@Base+0x171c>
   20ccc:	cmn	x0, #0x3
   20cd0:	b.eq	20d08 <printf_parse@@Base+0x1828>  // b.none
   20cd4:	ldp	x0, x1, [x19]
   20cd8:	cmn	x28, #0x1
   20cdc:	ldr	x2, [x19, #40]
   20ce0:	add	x0, x0, x20
   20ce4:	ldrb	w0, [x0, x2]
   20ce8:	strb	w0, [x1, x20]
   20cec:	add	x20, x20, #0x1
   20cf0:	ldr	x1, [x19, #16]
   20cf4:	str	w0, [x1, x22, lsl #2]
   20cf8:	b.ne	20bfc <printf_parse@@Base+0x171c>  // b.any
   20cfc:	ldr	x0, [sp, #136]
   20d00:	str	x0, [x19, #32]
   20d04:	b	20bfc <printf_parse@@Base+0x171c>
   20d08:	ldr	x1, [x19, #64]
   20d0c:	ldr	x0, [x19, #88]
   20d10:	cmp	x1, x0
   20d14:	b.lt	20ef4 <printf_parse@@Base+0x1a14>  // b.tstop
   20d18:	ldp	x0, x1, [x19]
   20d1c:	ldr	x2, [x19, #40]
   20d20:	add	x0, x0, x20
   20d24:	ldrb	w0, [x0, x2]
   20d28:	strb	w0, [x1, x20]
   20d2c:	add	x20, x20, #0x1
   20d30:	ldr	x1, [x19, #16]
   20d34:	str	w0, [x1, x22, lsl #2]
   20d38:	b	20bfc <printf_parse@@Base+0x171c>
   20d3c:	ldr	w6, [x19, #144]
   20d40:	stp	x27, x28, [sp, #80]
   20d44:	cmp	w6, #0x0
   20d48:	b.le	2126c <printf_parse@@Base+0x1d8c>
   20d4c:	cmp	x23, #0x0
   20d50:	b.le	2126c <printf_parse@@Base+0x1d8c>
   20d54:	ldr	x1, [x19, #40]
   20d58:	add	x28, sp, #0x90
   20d5c:	ldr	x5, [x19]
   20d60:	add	x1, x22, x1
   20d64:	sub	x1, x1, #0x1
   20d68:	mov	x0, #0x1                   	// #1
   20d6c:	add	x5, x5, x1
   20d70:	b	20d80 <printf_parse@@Base+0x18a0>
   20d74:	cmp	x0, x23
   20d78:	mov	x0, x3
   20d7c:	b.eq	20d9c <printf_parse@@Base+0x18bc>  // b.none
   20d80:	ldrb	w4, [x5, x0]
   20d84:	add	x1, x28, x0
   20d88:	cmp	w6, w0
   20d8c:	add	x3, x0, #0x1
   20d90:	ldrb	w4, [x2, x4]
   20d94:	sturb	w4, [x1, #-1]
   20d98:	b.gt	20d74 <printf_parse@@Base+0x1894>
   20d9c:	mov	x25, x28
   20da0:	ldp	x27, x28, [sp, #80]
   20da4:	b	20a4c <printf_parse@@Base+0x156c>
   20da8:	mov	x22, x20
   20dac:	ldp	x27, x28, [sp, #80]
   20db0:	b	20a2c <printf_parse@@Base+0x154c>
   20db4:	ldp	x23, x24, [sp, #48]
   20db8:	ldp	x25, x26, [sp, #64]
   20dbc:	ldp	x27, x28, [sp, #80]
   20dc0:	dup	v0.2d, x20
   20dc4:	mov	w0, #0x0                   	// #0
   20dc8:	str	q0, [x19, #48]
   20dcc:	b	20b50 <printf_parse@@Base+0x1670>
   20dd0:	ldr	x0, [x19, #8]
   20dd4:	mov	x1, x25
   20dd8:	mov	x2, x23
   20ddc:	add	x0, x0, x20
   20de0:	bl	a2c0 <memcpy@plt>
   20de4:	b	20ac4 <printf_parse@@Base+0x15e4>
   20de8:	cmn	x26, #0x3
   20dec:	b.ne	20e00 <printf_parse@@Base+0x1920>  // b.any
   20df0:	ldr	x1, [x19, #64]
   20df4:	ldr	x0, [x19, #88]
   20df8:	cmp	x1, x0
   20dfc:	b.lt	20b38 <printf_parse@@Base+0x1658>  // b.tstop
   20e00:	ldr	x0, [x19]
   20e04:	ldr	x2, [x19, #40]
   20e08:	add	x0, x0, x22
   20e0c:	ldr	x1, [x19, #120]
   20e10:	ldrb	w0, [x0, x2]
   20e14:	cbnz	x1, 212ec <printf_parse@@Base+0x1e0c>
   20e18:	ldr	x1, [x19, #8]
   20e1c:	mov	x2, x20
   20e20:	strb	w0, [x1, x20]
   20e24:	ldrb	w1, [x19, #140]
   20e28:	cbnz	w1, 212e0 <printf_parse@@Base+0x1e00>
   20e2c:	ldr	x1, [x19, #16]
   20e30:	add	x22, x22, #0x1
   20e34:	add	x20, x20, #0x1
   20e38:	cmn	x23, #0x1
   20e3c:	str	w0, [x1, x2, lsl #2]
   20e40:	b.eq	212cc <printf_parse@@Base+0x1dec>  // b.none
   20e44:	ldp	x23, x24, [sp, #48]
   20e48:	ldp	x25, x26, [sp, #64]
   20e4c:	b	20a0c <printf_parse@@Base+0x152c>
   20e50:	cmp	x26, #0x3
   20e54:	ldr	x2, [x19, #24]
   20e58:	b.ls	21274 <printf_parse@@Base+0x1d94>  // b.plast
   20e5c:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   20e60:	lsr	x1, x23, #1
   20e64:	add	x0, x2, x20, lsl #3
   20e68:	dup	v3.2d, x22
   20e6c:	ldr	q1, [x3, #1712]
   20e70:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   20e74:	add	x1, x0, x1, lsl #4
   20e78:	ldr	q2, [x3, #1728]
   20e7c:	mov	v0.16b, v1.16b
   20e80:	add	v1.2d, v1.2d, v2.2d
   20e84:	add	v0.2d, v3.2d, v0.2d
   20e88:	str	q0, [x0], #16
   20e8c:	cmp	x0, x1
   20e90:	b.ne	20e7c <printf_parse@@Base+0x199c>  // b.any
   20e94:	and	x0, x23, #0xfffffffffffffffe
   20e98:	tbz	w23, #0, 20acc <printf_parse@@Base+0x15ec>
   20e9c:	add	x3, x0, x20
   20ea0:	add	x4, x0, x22
   20ea4:	add	x1, x0, #0x1
   20ea8:	cmp	x23, x1
   20eac:	str	x4, [x2, x3, lsl #3]
   20eb0:	b.ls	20acc <printf_parse@@Base+0x15ec>  // b.plast
   20eb4:	add	x4, x1, x20
   20eb8:	add	x3, x1, x22
   20ebc:	add	x1, x0, #0x2
   20ec0:	cmp	x23, x1
   20ec4:	str	x3, [x2, x4, lsl #3]
   20ec8:	b.ls	20acc <printf_parse@@Base+0x15ec>  // b.plast
   20ecc:	add	x3, x20, x1
   20ed0:	add	x1, x1, x22
   20ed4:	add	x0, x0, #0x3
   20ed8:	cmp	x0, x23
   20edc:	str	x1, [x2, x3, lsl #3]
   20ee0:	b.cs	20acc <printf_parse@@Base+0x15ec>  // b.hs, b.nlast
   20ee4:	add	x1, x0, x20
   20ee8:	add	x0, x0, x22
   20eec:	str	x0, [x2, x1, lsl #3]
   20ef0:	b	20acc <printf_parse@@Base+0x15ec>
   20ef4:	ldr	x0, [sp, #136]
   20ef8:	ldp	x23, x24, [sp, #48]
   20efc:	ldp	x25, x26, [sp, #64]
   20f00:	ldp	x27, x28, [sp, #80]
   20f04:	str	x0, [x19, #32]
   20f08:	b	20dc0 <printf_parse@@Base+0x18e0>
   20f0c:	ldr	x1, [x19, #24]
   20f10:	cbz	x1, 21240 <printf_parse@@Base+0x1d60>
   20f14:	ldrb	w0, [x19, #140]
   20f18:	cbnz	w0, 20fb4 <printf_parse@@Base+0x1ad4>
   20f1c:	cbz	x20, 20fac <printf_parse@@Base+0x1acc>
   20f20:	sub	x0, x20, #0x1
   20f24:	cmp	x0, #0x4
   20f28:	ldr	x1, [x19, #24]
   20f2c:	b.ls	212c4 <printf_parse@@Base+0x1de4>  // b.plast
   20f30:	adrp	x4, 34000 <vasnprintf@@Base+0x3848>
   20f34:	lsr	x0, x20, #1
   20f38:	mov	x3, x1
   20f3c:	ldr	q0, [x4, #1712]
   20f40:	adrp	x4, 34000 <vasnprintf@@Base+0x3848>
   20f44:	add	x0, x1, x0, lsl #4
   20f48:	ldr	q1, [x4, #1728]
   20f4c:	mov	v2.16b, v0.16b
   20f50:	add	v0.2d, v0.2d, v1.2d
   20f54:	str	q2, [x3], #16
   20f58:	cmp	x3, x0
   20f5c:	b.ne	20f4c <printf_parse@@Base+0x1a6c>  // b.any
   20f60:	and	x0, x20, #0xfffffffffffffffe
   20f64:	tbz	w20, #0, 20fac <printf_parse@@Base+0x1acc>
   20f68:	str	x0, [x1, x0, lsl #3]
   20f6c:	add	x3, x0, #0x1
   20f70:	cmp	x20, x3
   20f74:	b.ls	20fac <printf_parse@@Base+0x1acc>  // b.plast
   20f78:	str	x3, [x1, x3, lsl #3]
   20f7c:	add	x3, x0, #0x2
   20f80:	cmp	x20, x3
   20f84:	b.ls	20fac <printf_parse@@Base+0x1acc>  // b.plast
   20f88:	str	x3, [x1, x3, lsl #3]
   20f8c:	add	x3, x0, #0x3
   20f90:	cmp	x20, x3
   20f94:	b.ls	20fac <printf_parse@@Base+0x1acc>  // b.plast
   20f98:	str	x3, [x1, x3, lsl #3]
   20f9c:	add	x0, x0, #0x4
   20fa0:	cmp	x20, x0
   20fa4:	b.ls	20fac <printf_parse@@Base+0x1acc>  // b.plast
   20fa8:	str	x0, [x1, x0, lsl #3]
   20fac:	mov	w0, #0x1                   	// #1
   20fb0:	strb	w0, [x19, #140]
   20fb4:	ldr	x0, [x19, #8]
   20fb8:	mov	x1, x28
   20fbc:	str	x2, [sp, #104]
   20fc0:	add	x0, x0, x20
   20fc4:	bl	a2c0 <memcpy@plt>
   20fc8:	ldp	x0, x4, [x19, #16]
   20fcc:	str	w27, [x0, x20, lsl #2]
   20fd0:	ldr	x2, [sp, #104]
   20fd4:	lsl	x5, x20, #2
   20fd8:	lsl	x3, x20, #3
   20fdc:	cmp	x2, #0x1
   20fe0:	str	x22, [x4, x20, lsl #3]
   20fe4:	add	x9, x0, x5
   20fe8:	add	x10, x4, x3
   20fec:	b.ls	211f8 <printf_parse@@Base+0x1d18>  // b.plast
   20ff0:	cmp	x23, #0x1
   20ff4:	mov	x1, #0x1                   	// #1
   20ff8:	b.ls	21108 <printf_parse@@Base+0x1c28>  // b.plast
   20ffc:	cmp	x23, x2
   21000:	add	x3, x3, #0x8
   21004:	csel	x6, x23, x2, ls  // ls = plast
   21008:	add	x3, x4, x3
   2100c:	add	x7, x6, x20
   21010:	add	x5, x5, #0x4
   21014:	add	x5, x0, x5
   21018:	sub	x8, x6, #0x2
   2101c:	add	x11, x0, x7, lsl #2
   21020:	add	x7, x4, x7, lsl #3
   21024:	cmp	x11, x3
   21028:	ccmp	x7, x5, #0x0, hi  // hi = pmore
   2102c:	ccmp	x8, #0x7, #0x0, ls  // ls = plast
   21030:	b.ls	212a4 <printf_parse@@Base+0x1dc4>  // b.plast
   21034:	adrp	x8, 34000 <vasnprintf@@Base+0x3848>
   21038:	sub	x7, x6, #0x1
   2103c:	mov	x1, x3
   21040:	mov	x3, x5
   21044:	ldr	q1, [x8, #1744]
   21048:	adrp	x8, 34000 <vasnprintf@@Base+0x3848>
   2104c:	lsr	x5, x7, #2
   21050:	dup	v3.2d, x22
   21054:	ldr	q7, [x8, #1760]
   21058:	adrp	x8, 34000 <vasnprintf@@Base+0x3848>
   2105c:	mvni	v5.4s, #0x0
   21060:	add	x5, x1, x5, lsl #5
   21064:	ldr	q6, [x8, #1728]
   21068:	adrp	x8, 34000 <vasnprintf@@Base+0x3848>
   2106c:	ldr	q4, [x8, #1776]
   21070:	mov	v0.16b, v1.16b
   21074:	add	v1.2d, v1.2d, v7.2d
   21078:	add	v2.2d, v0.2d, v6.2d
   2107c:	add	v16.2d, v0.2d, v3.2d
   21080:	add	v0.2d, v0.2d, v4.2d
   21084:	add	v2.2d, v2.2d, v3.2d
   21088:	stp	q16, q2, [x1]
   2108c:	add	x1, x1, #0x20
   21090:	cmp	x1, x5
   21094:	str	q5, [x3], #16
   21098:	b.ne	21070 <printf_parse@@Base+0x1b90>  // b.any
   2109c:	and	x3, x7, #0xfffffffffffffffc
   210a0:	mov	x1, v0.d[1]
   210a4:	cmp	x7, x3
   210a8:	add	x5, x3, #0x1
   210ac:	b.eq	21100 <printf_parse@@Base+0x1c20>  // b.none
   210b0:	add	x8, x20, x5
   210b4:	add	x5, x22, x5
   210b8:	mov	w7, #0xffffffff            	// #-1
   210bc:	add	x1, x3, #0x2
   210c0:	cmp	x6, x1
   210c4:	str	x5, [x4, x8, lsl #3]
   210c8:	str	w7, [x0, x8, lsl #2]
   210cc:	b.ls	21100 <printf_parse@@Base+0x1c20>  // b.plast
   210d0:	add	x5, x20, x1
   210d4:	add	x8, x22, x1
   210d8:	add	x1, x3, #0x3
   210dc:	cmp	x6, x1
   210e0:	str	x8, [x4, x5, lsl #3]
   210e4:	str	w7, [x0, x5, lsl #2]
   210e8:	b.ls	21100 <printf_parse@@Base+0x1c20>  // b.plast
   210ec:	add	x5, x20, x1
   210f0:	add	x6, x22, x1
   210f4:	add	x1, x3, #0x4
   210f8:	str	x6, [x4, x5, lsl #3]
   210fc:	str	w7, [x0, x5, lsl #2]
   21100:	cmp	x2, x1
   21104:	b.ls	211f8 <printf_parse@@Base+0x1d18>  // b.plast
   21108:	sub	x6, x2, x1
   2110c:	add	x5, x1, #0x1
   21110:	add	x3, x1, x20
   21114:	cmp	x2, x5
   21118:	lsl	x8, x6, #3
   2111c:	mov	x11, #0x8                   	// #8
   21120:	lsl	x7, x6, #2
   21124:	csel	x8, x8, x11, cs  // cs = hs, nlast
   21128:	add	x8, x8, x3, lsl #3
   2112c:	mov	x11, #0x4                   	// #4
   21130:	csel	x7, x7, x11, cs  // cs = hs, nlast
   21134:	add	x8, x4, x8
   21138:	add	x7, x7, x3, lsl #2
   2113c:	add	x11, x0, x3, lsl #2
   21140:	add	x7, x0, x7
   21144:	cmp	x11, x8
   21148:	add	x3, x4, x3, lsl #3
   2114c:	sub	x8, x2, #0x1
   21150:	ccmp	x3, x7, #0x2, cc  // cc = lo, ul, last
   21154:	sub	x7, x8, x1
   21158:	cset	w8, cs  // cs = hs, nlast
   2115c:	cmp	x7, #0x6
   21160:	ccmp	x2, x5, #0x0, hi  // hi = pmore
   21164:	cset	w7, cs  // cs = hs, nlast
   21168:	tst	w8, w7
   2116c:	b.eq	2127c <printf_parse@@Base+0x1d9c>  // b.none
   21170:	mvni	v2.4s, #0x0
   21174:	cmp	x2, x5
   21178:	add	x5, x26, x22
   2117c:	fmov	d0, x5
   21180:	csinc	x5, x6, xzr, cs  // cs = hs, nlast
   21184:	mov	x6, x11
   21188:	dup	v1.2d, v0.d[0]
   2118c:	lsr	x7, x5, #2
   21190:	add	x7, x3, x7, lsl #5
   21194:	stp	q1, q1, [x3]
   21198:	add	x3, x3, #0x20
   2119c:	cmp	x3, x7
   211a0:	str	q2, [x6], #16
   211a4:	b.ne	21194 <printf_parse@@Base+0x1cb4>  // b.any
   211a8:	and	x3, x5, #0xfffffffffffffffc
   211ac:	add	x1, x1, x3
   211b0:	cmp	x5, x3
   211b4:	b.eq	211f8 <printf_parse@@Base+0x1d18>  // b.none
   211b8:	add	x5, x1, x20
   211bc:	mov	w6, #0xffffffff            	// #-1
   211c0:	add	x3, x1, #0x1
   211c4:	cmp	x3, x2
   211c8:	str	d0, [x4, x5, lsl #3]
   211cc:	str	w6, [x0, x5, lsl #2]
   211d0:	b.cs	211f8 <printf_parse@@Base+0x1d18>  // b.hs, b.nlast
   211d4:	add	x3, x3, x20
   211d8:	add	x1, x1, #0x2
   211dc:	cmp	x2, x1
   211e0:	str	d0, [x4, x3, lsl #3]
   211e4:	str	w6, [x0, x3, lsl #2]
   211e8:	b.ls	211f8 <printf_parse@@Base+0x1d18>  // b.plast
   211ec:	add	x20, x20, x1
   211f0:	str	d0, [x4, x20, lsl #3]
   211f4:	str	w6, [x0, x20, lsl #2]
   211f8:	sub	x0, x2, x23
   211fc:	ldp	x1, x2, [x19, #88]
   21200:	add	x1, x0, x1
   21204:	str	x1, [x19, #88]
   21208:	cmp	x22, x2
   2120c:	b.ge	2121c <printf_parse@@Base+0x1d3c>  // b.tcont
   21210:	ldr	x2, [x19, #104]
   21214:	add	x0, x2, x0
   21218:	str	x0, [x19, #104]
   2121c:	ldr	x21, [x19, #64]
   21220:	mov	x20, x24
   21224:	add	x22, x23, x22
   21228:	cmp	x21, x1
   2122c:	csel	x21, x21, x1, le
   21230:	ldp	x23, x24, [sp, #48]
   21234:	ldp	x25, x26, [sp, #64]
   21238:	ldp	x27, x28, [sp, #80]
   2123c:	b	20a0c <printf_parse@@Base+0x152c>
   21240:	lsl	x0, x0, #3
   21244:	str	x2, [sp, #104]
   21248:	bl	a5f0 <malloc@plt>
   2124c:	str	x0, [x19, #24]
   21250:	ldr	x2, [sp, #104]
   21254:	cbnz	x0, 20f14 <printf_parse@@Base+0x1a34>
   21258:	mov	w0, #0xc                   	// #12
   2125c:	ldp	x23, x24, [sp, #48]
   21260:	ldp	x25, x26, [sp, #64]
   21264:	ldp	x27, x28, [sp, #80]
   21268:	b	20b50 <printf_parse@@Base+0x1670>
   2126c:	add	x28, sp, #0x90
   21270:	b	20d9c <printf_parse@@Base+0x18bc>
   21274:	mov	x0, #0x0                   	// #0
   21278:	b	20e9c <printf_parse@@Base+0x19bc>
   2127c:	add	x0, x26, x22
   21280:	fmov	d0, x0
   21284:	mov	w0, #0xffffffff            	// #-1
   21288:	str	d0, [x10, x1, lsl #3]
   2128c:	cmp	x2, x5
   21290:	str	w0, [x9, x1, lsl #2]
   21294:	mov	x1, x5
   21298:	add	x5, x5, #0x1
   2129c:	b.hi	21288 <printf_parse@@Base+0x1da8>  // b.pmore
   212a0:	b	211f8 <printf_parse@@Base+0x1d18>
   212a4:	mov	w3, #0xffffffff            	// #-1
   212a8:	add	x5, x22, x1
   212ac:	str	x5, [x10, x1, lsl #3]
   212b0:	str	w3, [x9, x1, lsl #2]
   212b4:	add	x1, x1, #0x1
   212b8:	cmp	x6, x1
   212bc:	b.hi	212a8 <printf_parse@@Base+0x1dc8>  // b.pmore
   212c0:	b	21100 <printf_parse@@Base+0x1c20>
   212c4:	mov	x0, #0x0                   	// #0
   212c8:	b	20f68 <printf_parse@@Base+0x1a88>
   212cc:	ldr	x0, [sp, #136]
   212d0:	ldp	x23, x24, [sp, #48]
   212d4:	ldp	x25, x26, [sp, #64]
   212d8:	str	x0, [x19, #32]
   212dc:	b	20a0c <printf_parse@@Base+0x152c>
   212e0:	ldr	x1, [x19, #24]
   212e4:	str	x22, [x1, x20, lsl #3]
   212e8:	b	20e2c <printf_parse@@Base+0x194c>
   212ec:	and	x0, x0, #0xff
   212f0:	ldrb	w0, [x1, x0]
   212f4:	b	20e18 <printf_parse@@Base+0x1938>
   212f8:	stp	x29, x30, [sp, #-96]!
   212fc:	mov	x29, sp
   21300:	stp	x21, x22, [sp, #32]
   21304:	ldp	x21, x4, [x0, #8]
   21308:	stp	x19, x20, [sp, #16]
   2130c:	mov	x19, x0
   21310:	stp	x23, x24, [sp, #48]
   21314:	mov	x20, x2
   21318:	mov	x24, x1
   2131c:	stp	x25, x26, [sp, #64]
   21320:	and	w25, w2, #0xff
   21324:	cmp	x4, x21
   21328:	b.cs	213d4 <printf_parse@@Base+0x1ef4>  // b.hs, b.nlast
   2132c:	ldr	x22, [x0, #24]
   21330:	ldr	x21, [x0, #40]
   21334:	lsl	x3, x4, #4
   21338:	ldr	x5, [x19]
   2133c:	and	w1, w20, #0xfffc00ff
   21340:	cmp	w25, #0x6
   21344:	add	x2, x5, x3
   21348:	cset	w0, eq  // eq = none
   2134c:	str	x24, [x5, x3]
   21350:	cmp	w25, #0x5
   21354:	str	x20, [x2, #8]
   21358:	str	w1, [x2, #8]
   2135c:	b.ne	2136c <printf_parse@@Base+0x1e8c>  // b.any
   21360:	ldr	w0, [x19, #180]
   21364:	cmp	w0, #0x1
   21368:	cset	w0, gt
   2136c:	ldrb	w1, [x2, #10]
   21370:	mov	x3, #0xffffffffffffffff    	// #-1
   21374:	bfi	w1, w0, #4, #1
   21378:	strb	w1, [x2, #10]
   2137c:	str	x3, [x22, x4, lsl #3]
   21380:	ldr	x0, [x19, #16]
   21384:	add	x0, x0, x0, lsl #1
   21388:	add	x0, x21, x0, lsl #3
   2138c:	stp	xzr, xzr, [x0]
   21390:	str	xzr, [x0, #16]
   21394:	ldr	x0, [x19, #16]
   21398:	ldr	x1, [x19, #48]
   2139c:	add	x0, x0, x0, lsl #1
   213a0:	add	x0, x1, x0, lsl #3
   213a4:	stp	xzr, xzr, [x0]
   213a8:	str	xzr, [x0, #16]
   213ac:	ldr	x1, [x19, #16]
   213b0:	mov	x0, x1
   213b4:	add	x1, x1, #0x1
   213b8:	str	x1, [x19, #16]
   213bc:	ldp	x19, x20, [sp, #16]
   213c0:	ldp	x21, x22, [sp, #32]
   213c4:	ldp	x23, x24, [sp, #48]
   213c8:	ldp	x25, x26, [sp, #64]
   213cc:	ldp	x29, x30, [sp], #96
   213d0:	ret
   213d4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   213d8:	lsl	x23, x21, #1
   213dc:	movk	x0, #0xaaa, lsl #48
   213e0:	cmp	x0, x21, lsl #1
   213e4:	b.cc	21480 <printf_parse@@Base+0x1fa0>  // b.lo, b.ul, b.last
   213e8:	ldr	x0, [x19]
   213ec:	lsl	x1, x21, #5
   213f0:	bl	a7e0 <realloc@plt>
   213f4:	mov	x1, x0
   213f8:	cbz	x0, 21480 <printf_parse@@Base+0x1fa0>
   213fc:	ldr	x0, [x19, #24]
   21400:	str	x27, [sp, #80]
   21404:	str	x1, [x19]
   21408:	lsl	x26, x21, #4
   2140c:	mov	x1, x26
   21410:	add	x21, x23, x21
   21414:	bl	a7e0 <realloc@plt>
   21418:	mov	x22, x0
   2141c:	ldr	x0, [x19, #32]
   21420:	mov	x1, x26
   21424:	lsl	x21, x21, #4
   21428:	bl	a7e0 <realloc@plt>
   2142c:	mov	x26, x0
   21430:	ldr	x0, [x19, #40]
   21434:	mov	x1, x21
   21438:	bl	a7e0 <realloc@plt>
   2143c:	mov	x1, x21
   21440:	mov	x21, x0
   21444:	ldr	x0, [x19, #48]
   21448:	bl	a7e0 <realloc@plt>
   2144c:	mov	x27, x0
   21450:	cmp	x22, #0x0
   21454:	ccmp	x26, #0x0, #0x4, ne  // ne = any
   21458:	b.eq	21488 <printf_parse@@Base+0x1fa8>  // b.none
   2145c:	cmp	x21, #0x0
   21460:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   21464:	b.eq	21488 <printf_parse@@Base+0x1fa8>  // b.none
   21468:	str	x23, [x19, #8]
   2146c:	stp	x22, x26, [x19, #24]
   21470:	stp	x21, x0, [x19, #40]
   21474:	ldr	x4, [x19, #16]
   21478:	ldr	x27, [sp, #80]
   2147c:	b	21334 <printf_parse@@Base+0x1e54>
   21480:	mov	x0, #0xffffffffffffffff    	// #-1
   21484:	b	213bc <printf_parse@@Base+0x1edc>
   21488:	mov	x0, x22
   2148c:	bl	aa50 <free@plt>
   21490:	mov	x0, x26
   21494:	bl	aa50 <free@plt>
   21498:	mov	x0, x21
   2149c:	bl	aa50 <free@plt>
   214a0:	mov	x0, x27
   214a4:	bl	aa50 <free@plt>
   214a8:	mov	x0, #0xffffffffffffffff    	// #-1
   214ac:	ldr	x27, [sp, #80]
   214b0:	b	213bc <printf_parse@@Base+0x1edc>
   214b4:	nop
   214b8:	stp	x29, x30, [sp, #-64]!
   214bc:	mov	x29, sp
   214c0:	str	x23, [sp, #48]
   214c4:	mov	x23, x0
   214c8:	ldr	x0, [x0, #232]
   214cc:	cmp	x0, #0x0
   214d0:	b.le	21560 <printf_parse@@Base+0x2080>
   214d4:	stp	x19, x20, [sp, #16]
   214d8:	stp	x21, x22, [sp, #32]
   214dc:	mov	x22, #0x0                   	// #0
   214e0:	ldr	x0, [x23, #248]
   214e4:	ldr	x21, [x0, x22, lsl #3]
   214e8:	ldr	x0, [x21, #32]
   214ec:	cmp	x0, #0x0
   214f0:	b.le	21520 <printf_parse@@Base+0x2040>
   214f4:	mov	x19, #0x0                   	// #0
   214f8:	ldr	x1, [x21, #40]
   214fc:	ldr	x20, [x1, x19, lsl #3]
   21500:	add	x19, x19, #0x1
   21504:	ldr	x0, [x20, #32]
   21508:	bl	aa50 <free@plt>
   2150c:	mov	x0, x20
   21510:	bl	aa50 <free@plt>
   21514:	ldr	x1, [x21, #32]
   21518:	cmp	x1, x19
   2151c:	b.gt	214f8 <printf_parse@@Base+0x2018>
   21520:	ldr	x0, [x21, #40]
   21524:	bl	aa50 <free@plt>
   21528:	ldr	x0, [x21, #16]
   2152c:	cbz	x0, 21574 <printf_parse@@Base+0x2094>
   21530:	ldr	x0, [x0, #16]
   21534:	add	x22, x22, #0x1
   21538:	bl	aa50 <free@plt>
   2153c:	ldr	x0, [x21, #16]
   21540:	bl	aa50 <free@plt>
   21544:	mov	x0, x21
   21548:	bl	aa50 <free@plt>
   2154c:	ldr	x0, [x23, #232]
   21550:	cmp	x0, x22
   21554:	b.gt	214e0 <printf_parse@@Base+0x2000>
   21558:	ldp	x19, x20, [sp, #16]
   2155c:	ldp	x21, x22, [sp, #32]
   21560:	str	xzr, [x23, #200]
   21564:	str	xzr, [x23, #232]
   21568:	ldr	x23, [sp, #48]
   2156c:	ldp	x29, x30, [sp], #64
   21570:	ret
   21574:	mov	x0, x21
   21578:	bl	aa50 <free@plt>
   2157c:	ldr	x0, [x23, #232]
   21580:	add	x22, x22, #0x1
   21584:	cmp	x0, x22
   21588:	b.gt	214e0 <printf_parse@@Base+0x2000>
   2158c:	b	21558 <printf_parse@@Base+0x2078>
   21590:	stp	x29, x30, [sp, #-96]!
   21594:	mov	x29, sp
   21598:	stp	x21, x22, [sp, #32]
   2159c:	mov	x22, x2
   215a0:	ldr	x2, [x1]
   215a4:	ldr	x21, [x0, #152]
   215a8:	cmp	x2, #0x0
   215ac:	b.le	21664 <printf_parse@@Base+0x2184>
   215b0:	stp	x19, x20, [sp, #16]
   215b4:	mov	x19, #0x0                   	// #0
   215b8:	stp	x23, x24, [sp, #48]
   215bc:	mov	x24, x0
   215c0:	mov	x23, x3
   215c4:	stp	x25, x26, [sp, #64]
   215c8:	mov	x25, x1
   215cc:	b	215d8 <printf_parse@@Base+0x20f8>
   215d0:	cmp	x19, x2
   215d4:	b.ge	21658 <printf_parse@@Base+0x2178>  // b.tcont
   215d8:	ldr	x4, [x22]
   215dc:	ldr	x5, [x21]
   215e0:	ldr	x20, [x4, x19, lsl #3]
   215e4:	add	x19, x19, #0x1
   215e8:	lsl	x4, x20, #4
   215ec:	add	x6, x5, x4
   215f0:	ldrb	w6, [x6, #8]
   215f4:	cmp	w6, #0x8
   215f8:	b.ne	215d0 <printf_parse@@Base+0x20f0>  // b.any
   215fc:	ldr	x3, [x5, x4]
   21600:	cmp	x3, #0x3f
   21604:	b.gt	215d0 <printf_parse@@Base+0x20f0>
   21608:	ldr	x4, [x21, #160]
   2160c:	lsr	x3, x4, x3
   21610:	tbz	w3, #0, 215d0 <printf_parse@@Base+0x20f0>
   21614:	ldp	x26, x0, [x24, #232]
   21618:	str	x27, [sp, #80]
   2161c:	ldr	x27, [x24, #248]
   21620:	cmp	x26, x0
   21624:	b.eq	2168c <printf_parse@@Base+0x21ac>  // b.none
   21628:	mov	x1, #0x30                  	// #48
   2162c:	mov	x0, #0x1                   	// #1
   21630:	bl	a770 <calloc@plt>
   21634:	str	x0, [x27, x26, lsl #3]
   21638:	add	x1, x26, #0x1
   2163c:	cbz	x0, 21674 <printf_parse@@Base+0x2194>
   21640:	ldr	x27, [sp, #80]
   21644:	str	x1, [x24, #232]
   21648:	stp	x23, x20, [x0]
   2164c:	ldr	x2, [x25]
   21650:	cmp	x19, x2
   21654:	b.lt	215d8 <printf_parse@@Base+0x20f8>  // b.tstop
   21658:	ldp	x19, x20, [sp, #16]
   2165c:	ldp	x23, x24, [sp, #48]
   21660:	ldp	x25, x26, [sp, #64]
   21664:	mov	w0, #0x0                   	// #0
   21668:	ldp	x21, x22, [sp, #32]
   2166c:	ldp	x29, x30, [sp], #96
   21670:	ret
   21674:	mov	w0, #0xc                   	// #12
   21678:	ldp	x19, x20, [sp, #16]
   2167c:	ldp	x23, x24, [sp, #48]
   21680:	ldp	x25, x26, [sp, #64]
   21684:	ldr	x27, [sp, #80]
   21688:	b	21668 <printf_parse@@Base+0x2188>
   2168c:	mov	x0, x27
   21690:	lsl	x1, x26, #4
   21694:	bl	a7e0 <realloc@plt>
   21698:	mov	x27, x0
   2169c:	lsl	x0, x26, #1
   216a0:	cbz	x27, 21674 <printf_parse@@Base+0x2194>
   216a4:	stp	x0, x27, [x24, #240]
   216a8:	ldr	x26, [x24, #232]
   216ac:	b	21628 <printf_parse@@Base+0x2148>
   216b0:	cbz	x1, 21844 <printf_parse@@Base+0x2364>
   216b4:	stp	x29, x30, [sp, #-48]!
   216b8:	mov	x29, sp
   216bc:	stp	x19, x20, [sp, #16]
   216c0:	ldr	x19, [x1, #8]
   216c4:	stp	x21, x22, [sp, #32]
   216c8:	mov	x21, x1
   216cc:	cbz	x19, 217b4 <printf_parse@@Base+0x22d4>
   216d0:	ldp	x2, x1, [x0]
   216d4:	mov	x20, x0
   216d8:	add	x0, x1, x19, lsl #1
   216dc:	cmp	x2, x0
   216e0:	b.lt	217fc <printf_parse@@Base+0x231c>  // b.tstop
   216e4:	cbz	x1, 21828 <printf_parse@@Base+0x2348>
   216e8:	subs	x2, x19, #0x1
   216ec:	sub	x3, x1, #0x1
   216f0:	add	x19, x1, x19, lsl #1
   216f4:	ccmp	x3, #0x0, #0x1, pl  // pl = nfrst
   216f8:	b.lt	21748 <printf_parse@@Base+0x2268>  // b.tstop
   216fc:	ldr	x0, [x20, #16]
   21700:	ldr	x1, [x21, #16]
   21704:	b	21724 <printf_parse@@Base+0x2244>
   21708:	b.ge	217c8 <printf_parse@@Base+0x22e8>  // b.tcont
   2170c:	sub	x19, x19, #0x1
   21710:	sub	x2, x2, #0x1
   21714:	str	x4, [x0, x19, lsl #3]
   21718:	cmp	x2, #0x0
   2171c:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
   21720:	b.lt	21748 <printf_parse@@Base+0x2268>  // b.tstop
   21724:	ldr	x5, [x0, x3, lsl #3]
   21728:	ldr	x4, [x1, x2, lsl #3]
   2172c:	cmp	x5, x4
   21730:	b.ne	21708 <printf_parse@@Base+0x2228>  // b.any
   21734:	sub	x2, x2, #0x1
   21738:	sub	x3, x3, #0x1
   2173c:	cmp	x2, #0x0
   21740:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
   21744:	b.ge	21724 <printf_parse@@Base+0x2244>  // b.tcont
   21748:	tbnz	x2, #63, 21768 <printf_parse@@Base+0x2288>
   2174c:	ldr	x0, [x20, #16]
   21750:	add	x2, x2, #0x1
   21754:	ldr	x1, [x21, #16]
   21758:	sub	x19, x19, x2
   2175c:	lsl	x2, x2, #3
   21760:	add	x0, x0, x19, lsl #3
   21764:	bl	a2c0 <memcpy@plt>
   21768:	ldr	x3, [x20, #8]
   2176c:	ldr	x2, [x21, #8]
   21770:	add	x2, x3, x2, lsl #1
   21774:	sub	x5, x2, #0x1
   21778:	subs	x2, x2, x19
   2177c:	b.eq	217b4 <printf_parse@@Base+0x22d4>  // b.none
   21780:	ldr	x0, [x20, #16]
   21784:	sub	x1, x3, #0x1
   21788:	add	x3, x3, x2
   2178c:	str	x3, [x20, #8]
   21790:	ldr	x4, [x0, x5, lsl #3]
   21794:	add	x6, x1, x2
   21798:	ldr	x3, [x0, x1, lsl #3]
   2179c:	cmp	x4, x3
   217a0:	b.le	217d0 <printf_parse@@Base+0x22f0>
   217a4:	str	x4, [x0, x6, lsl #3]
   217a8:	sub	x5, x5, #0x1
   217ac:	subs	x2, x2, #0x1
   217b0:	b.ne	21790 <printf_parse@@Base+0x22b0>  // b.any
   217b4:	mov	w0, #0x0                   	// #0
   217b8:	ldp	x19, x20, [sp, #16]
   217bc:	ldp	x21, x22, [sp, #32]
   217c0:	ldp	x29, x30, [sp], #48
   217c4:	ret
   217c8:	sub	x3, x3, #0x1
   217cc:	b	21718 <printf_parse@@Base+0x2238>
   217d0:	str	x3, [x0, x6, lsl #3]
   217d4:	subs	x1, x1, #0x1
   217d8:	b.pl	21790 <printf_parse@@Base+0x22b0>  // b.nfrst
   217dc:	add	x1, x0, x19, lsl #3
   217e0:	lsl	x2, x2, #3
   217e4:	bl	a2c0 <memcpy@plt>
   217e8:	mov	w0, #0x0                   	// #0
   217ec:	ldp	x19, x20, [sp, #16]
   217f0:	ldp	x21, x22, [sp, #32]
   217f4:	ldp	x29, x30, [sp], #48
   217f8:	ret
   217fc:	ldr	x0, [x20, #16]
   21800:	add	x19, x19, x2
   21804:	lsl	x22, x19, #1
   21808:	lsl	x1, x19, #4
   2180c:	bl	a7e0 <realloc@plt>
   21810:	cbz	x0, 2184c <printf_parse@@Base+0x236c>
   21814:	ldr	x1, [x20, #8]
   21818:	ldr	x19, [x21, #8]
   2181c:	str	x22, [x20]
   21820:	str	x0, [x20, #16]
   21824:	cbnz	x1, 216e8 <printf_parse@@Base+0x2208>
   21828:	ldr	x1, [x21, #16]
   2182c:	str	x19, [x20, #8]
   21830:	ldr	x0, [x20, #16]
   21834:	ldr	x2, [x21, #8]
   21838:	lsl	x2, x2, #3
   2183c:	bl	a2c0 <memcpy@plt>
   21840:	b	217b4 <printf_parse@@Base+0x22d4>
   21844:	mov	w0, #0x0                   	// #0
   21848:	ret
   2184c:	mov	w0, #0xc                   	// #12
   21850:	b	217b8 <printf_parse@@Base+0x22d8>
   21854:	nop
   21858:	ldr	x4, [x1, #8]
   2185c:	cbz	x4, 219d0 <printf_parse@@Base+0x24f0>
   21860:	stp	x29, x30, [sp, #-48]!
   21864:	mov	x29, sp
   21868:	ldr	x8, [x2, #8]
   2186c:	stp	x19, x20, [sp, #16]
   21870:	mov	x19, x0
   21874:	stp	x21, x22, [sp, #32]
   21878:	mov	w0, #0x0                   	// #0
   2187c:	mov	x21, x2
   21880:	cbz	x8, 21974 <printf_parse@@Base+0x2494>
   21884:	ldp	x22, x3, [x19]
   21888:	mov	x20, x1
   2188c:	add	x1, x4, x8
   21890:	ldr	x0, [x19, #16]
   21894:	add	x2, x1, x3
   21898:	cmp	x2, x22
   2189c:	b.gt	219d8 <printf_parse@@Base+0x24f8>
   218a0:	ldr	x10, [x20, #16]
   218a4:	sub	x6, x4, #0x1
   218a8:	ldr	x9, [x21, #16]
   218ac:	sub	x7, x8, #0x1
   218b0:	add	x4, x3, x4
   218b4:	sub	x3, x3, #0x1
   218b8:	add	x8, x4, x8
   218bc:	ldr	x5, [x9, x7, lsl #3]
   218c0:	ldr	x4, [x10, x6, lsl #3]
   218c4:	nop
   218c8:	cmp	x4, x5
   218cc:	b.eq	218e8 <printf_parse@@Base+0x2408>  // b.none
   218d0:	b.ge	219c0 <printf_parse@@Base+0x24e0>  // b.tcont
   218d4:	subs	x7, x7, #0x1
   218d8:	b.mi	21930 <printf_parse@@Base+0x2450>  // b.first
   218dc:	ldr	x5, [x9, x7, lsl #3]
   218e0:	cmp	x4, x5
   218e4:	b.ne	218d0 <printf_parse@@Base+0x23f0>  // b.any
   218e8:	tbz	x3, #63, 218fc <printf_parse@@Base+0x241c>
   218ec:	b	2190c <printf_parse@@Base+0x242c>
   218f0:	sub	x3, x3, #0x1
   218f4:	cmn	x3, #0x1
   218f8:	b.eq	2190c <printf_parse@@Base+0x242c>  // b.none
   218fc:	ldr	x5, [x0, x3, lsl #3]
   21900:	cmp	x5, x4
   21904:	b.gt	218f0 <printf_parse@@Base+0x2410>
   21908:	b.eq	21914 <printf_parse@@Base+0x2434>  // b.none
   2190c:	sub	x8, x8, #0x1
   21910:	str	x4, [x0, x8, lsl #3]
   21914:	subs	x6, x6, #0x1
   21918:	b.mi	21930 <printf_parse@@Base+0x2450>  // b.first
   2191c:	subs	x7, x7, #0x1
   21920:	b.mi	21930 <printf_parse@@Base+0x2450>  // b.first
   21924:	ldr	x4, [x10, x6, lsl #3]
   21928:	ldr	x5, [x9, x7, lsl #3]
   2192c:	b	218e0 <printf_parse@@Base+0x2400>
   21930:	ldr	x1, [x19, #8]
   21934:	ldr	x4, [x20, #8]
   21938:	sub	x2, x1, #0x1
   2193c:	ldr	x3, [x21, #8]
   21940:	add	x4, x1, x4
   21944:	add	x4, x4, x3
   21948:	sub	x3, x4, x8
   2194c:	sub	x4, x4, #0x1
   21950:	add	x1, x1, x3
   21954:	str	x1, [x19, #8]
   21958:	cmp	x3, #0x0
   2195c:	ccmp	x2, #0x0, #0x1, gt
   21960:	b.ge	21994 <printf_parse@@Base+0x24b4>  // b.tcont
   21964:	lsl	x2, x3, #3
   21968:	add	x1, x0, x8, lsl #3
   2196c:	bl	a2c0 <memcpy@plt>
   21970:	mov	w0, #0x0                   	// #0
   21974:	ldp	x19, x20, [sp, #16]
   21978:	ldp	x21, x22, [sp, #32]
   2197c:	ldp	x29, x30, [sp], #48
   21980:	ret
   21984:	str	x1, [x0, x6, lsl #3]
   21988:	sub	x2, x2, #0x1
   2198c:	cmn	x2, #0x1
   21990:	b.eq	21964 <printf_parse@@Base+0x2484>  // b.none
   21994:	ldr	x5, [x0, x4, lsl #3]
   21998:	add	x6, x2, x3
   2199c:	ldr	x1, [x0, x2, lsl #3]
   219a0:	cmp	x5, x1
   219a4:	b.le	21984 <printf_parse@@Base+0x24a4>
   219a8:	str	x5, [x0, x6, lsl #3]
   219ac:	sub	x4, x4, #0x1
   219b0:	subs	x3, x3, #0x1
   219b4:	b.ne	21994 <printf_parse@@Base+0x24b4>  // b.any
   219b8:	mov	x2, #0x0                   	// #0
   219bc:	b	21968 <printf_parse@@Base+0x2488>
   219c0:	subs	x6, x6, #0x1
   219c4:	b.mi	21930 <printf_parse@@Base+0x2450>  // b.first
   219c8:	ldr	x4, [x10, x6, lsl #3]
   219cc:	b	218c8 <printf_parse@@Base+0x23e8>
   219d0:	mov	w0, #0x0                   	// #0
   219d4:	ret
   219d8:	add	x22, x1, x22
   219dc:	lsl	x1, x22, #3
   219e0:	bl	a7e0 <realloc@plt>
   219e4:	cbz	x0, 21a00 <printf_parse@@Base+0x2520>
   219e8:	ldr	x4, [x20, #8]
   219ec:	ldr	x8, [x21, #8]
   219f0:	str	x22, [x19]
   219f4:	str	x0, [x19, #16]
   219f8:	ldr	x3, [x19, #8]
   219fc:	b	218a0 <printf_parse@@Base+0x23c0>
   21a00:	mov	w0, #0xc                   	// #12
   21a04:	b	21974 <printf_parse@@Base+0x2494>
   21a08:	stp	x29, x30, [sp, #-32]!
   21a0c:	mov	x29, sp
   21a10:	stp	x19, x20, [sp, #16]
   21a14:	mov	x20, x0
   21a18:	tbnz	x1, #63, 21aac <printf_parse@@Base+0x25cc>
   21a1c:	ldr	x0, [x0, #88]
   21a20:	cmp	x0, x1
   21a24:	b.eq	21ad8 <printf_parse@@Base+0x25f8>  // b.none
   21a28:	ldr	w0, [x20, #144]
   21a2c:	cmp	w0, #0x1
   21a30:	b.le	21a74 <printf_parse@@Base+0x2594>
   21a34:	ldr	x0, [x20, #16]
   21a38:	b	21a44 <printf_parse@@Base+0x2564>
   21a3c:	cmn	x1, #0x1
   21a40:	b.eq	21aac <printf_parse@@Base+0x25cc>  // b.none
   21a44:	ldr	w19, [x0, x1, lsl #2]
   21a48:	sub	x1, x1, #0x1
   21a4c:	cmn	w19, #0x1
   21a50:	b.eq	21a3c <printf_parse@@Base+0x255c>  // b.none
   21a54:	ldrb	w0, [x20, #142]
   21a58:	cbnz	w0, 21aec <printf_parse@@Base+0x260c>
   21a5c:	cmp	w19, #0xa
   21a60:	mov	w0, #0x0                   	// #0
   21a64:	b.eq	21abc <printf_parse@@Base+0x25dc>  // b.none
   21a68:	ldp	x19, x20, [sp, #16]
   21a6c:	ldp	x29, x30, [sp], #32
   21a70:	ret
   21a74:	ldr	x2, [x20, #8]
   21a78:	mov	w0, #0x1                   	// #1
   21a7c:	ldr	x3, [x20, #128]
   21a80:	ldrb	w2, [x2, x1]
   21a84:	ubfx	x1, x2, #6, #2
   21a88:	ldr	x1, [x3, x1, lsl #3]
   21a8c:	lsr	x1, x1, x2
   21a90:	tbnz	w1, #0, 21a68 <printf_parse@@Base+0x2588>
   21a94:	cmp	w2, #0xa
   21a98:	b.eq	21abc <printf_parse@@Base+0x25dc>  // b.none
   21a9c:	mov	w0, #0x0                   	// #0
   21aa0:	ldp	x19, x20, [sp, #16]
   21aa4:	ldp	x29, x30, [sp], #32
   21aa8:	ret
   21aac:	ldr	w0, [x20, #112]
   21ab0:	ldp	x19, x20, [sp, #16]
   21ab4:	ldp	x29, x30, [sp], #32
   21ab8:	ret
   21abc:	ldrb	w0, [x20, #141]
   21ac0:	ldp	x19, x20, [sp, #16]
   21ac4:	cmp	w0, #0x0
   21ac8:	cset	w0, ne  // ne = any
   21acc:	ldp	x29, x30, [sp], #32
   21ad0:	lsl	w0, w0, #1
   21ad4:	ret
   21ad8:	tst	x2, #0x2
   21adc:	mov	w0, #0x8                   	// #8
   21ae0:	mov	w1, #0xa                   	// #10
   21ae4:	csel	w0, w0, w1, ne  // ne = any
   21ae8:	b	21a68 <printf_parse@@Base+0x2588>
   21aec:	mov	w0, w19
   21af0:	bl	ad30 <iswalnum@plt>
   21af4:	cmp	w19, #0x5f
   21af8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   21afc:	mov	w0, #0x1                   	// #1
   21b00:	b.ne	21a68 <printf_parse@@Base+0x2588>  // b.any
   21b04:	b	21a5c <printf_parse@@Base+0x257c>
   21b08:	stp	x29, x30, [sp, #-144]!
   21b0c:	mov	x29, sp
   21b10:	stp	x19, x20, [sp, #16]
   21b14:	mov	x19, x0
   21b18:	ldr	x0, [x0, #40]
   21b1c:	stp	x21, x22, [sp, #32]
   21b20:	mov	x21, x1
   21b24:	stp	x23, x24, [sp, #48]
   21b28:	sub	x20, x1, x0
   21b2c:	mov	w24, w2
   21b30:	cmp	x0, x1
   21b34:	b.le	21b90 <printf_parse@@Base+0x26b0>
   21b38:	ldr	w0, [x19, #144]
   21b3c:	cmp	w0, #0x1
   21b40:	b.le	21b48 <printf_parse@@Base+0x2668>
   21b44:	str	xzr, [x19, #32]
   21b48:	ldrb	w0, [x19, #139]
   21b4c:	tst	x24, #0x1
   21b50:	ldr	x3, [x19, #80]
   21b54:	mov	w1, #0x4                   	// #4
   21b58:	ldr	x2, [x19, #96]
   21b5c:	mov	w4, #0x6                   	// #6
   21b60:	csel	w1, w1, w4, ne  // ne = any
   21b64:	stp	xzr, xzr, [x19, #40]
   21b68:	str	xzr, [x19, #56]
   21b6c:	str	x3, [x19, #88]
   21b70:	str	x2, [x19, #104]
   21b74:	str	w1, [x19, #112]
   21b78:	strb	wzr, [x19, #140]
   21b7c:	cbnz	w0, 21c44 <printf_parse@@Base+0x2764>
   21b80:	mov	x20, x21
   21b84:	mov	x0, #0x0                   	// #0
   21b88:	ldr	x1, [x19]
   21b8c:	str	x1, [x19, #8]
   21b90:	cbz	x20, 21c50 <printf_parse@@Base+0x2770>
   21b94:	ldp	x23, x22, [x19, #48]
   21b98:	ldrb	w1, [x19, #140]
   21b9c:	cmp	x22, x20
   21ba0:	b.le	21cac <printf_parse@@Base+0x27cc>
   21ba4:	cbnz	w1, 21d90 <printf_parse@@Base+0x28b0>
   21ba8:	mov	w2, w24
   21bac:	sub	x1, x20, #0x1
   21bb0:	mov	x0, x19
   21bb4:	bl	21a08 <printf_parse@@Base+0x2528>
   21bb8:	str	w0, [x19, #112]
   21bbc:	sub	x2, x23, x20
   21bc0:	ldr	w0, [x19, #144]
   21bc4:	cmp	w0, #0x1
   21bc8:	b.gt	21c80 <printf_parse@@Base+0x27a0>
   21bcc:	ldrb	w0, [x19, #139]
   21bd0:	cbnz	w0, 21dd4 <printf_parse@@Base+0x28f4>
   21bd4:	ldr	x3, [x19, #56]
   21bd8:	ldr	x1, [x19, #88]
   21bdc:	sub	x3, x3, x20
   21be0:	stp	x2, x3, [x19, #48]
   21be4:	ldr	w3, [x19, #144]
   21be8:	ldr	x2, [x19, #104]
   21bec:	sub	x1, x1, x20
   21bf0:	sub	x2, x2, x20
   21bf4:	cbnz	w0, 21c04 <printf_parse@@Base+0x2724>
   21bf8:	ldr	x0, [x19, #8]
   21bfc:	add	x20, x0, x20
   21c00:	str	x20, [x19, #8]
   21c04:	str	x21, [x19, #40]
   21c08:	cmp	w3, #0x1
   21c0c:	str	x1, [x19, #88]
   21c10:	str	x2, [x19, #104]
   21c14:	b.le	21c70 <printf_parse@@Base+0x2790>
   21c18:	ldrb	w0, [x19, #136]
   21c1c:	cbnz	w0, 21c9c <printf_parse@@Base+0x27bc>
   21c20:	mov	x0, x19
   21c24:	bl	207c8 <printf_parse@@Base+0x12e8>
   21c28:	mov	w0, #0x0                   	// #0
   21c2c:	str	xzr, [x19, #72]
   21c30:	ldp	x19, x20, [sp, #16]
   21c34:	ldp	x21, x22, [sp, #32]
   21c38:	ldp	x23, x24, [sp, #48]
   21c3c:	ldp	x29, x30, [sp], #144
   21c40:	ret
   21c44:	mov	x20, x21
   21c48:	mov	x0, #0x0                   	// #0
   21c4c:	cbnz	x20, 21b94 <printf_parse@@Base+0x26b4>
   21c50:	ldr	x1, [x19, #88]
   21c54:	str	x21, [x19, #40]
   21c58:	ldr	x2, [x19, #104]
   21c5c:	str	x1, [x19, #88]
   21c60:	ldr	w3, [x19, #144]
   21c64:	str	x2, [x19, #104]
   21c68:	cmp	w3, #0x1
   21c6c:	b.gt	21c18 <printf_parse@@Base+0x2738>
   21c70:	ldrb	w0, [x19, #139]
   21c74:	cbnz	w0, 21f94 <printf_parse@@Base+0x2ab4>
   21c78:	str	x1, [x19, #48]
   21c7c:	b	21c28 <printf_parse@@Base+0x2748>
   21c80:	ldr	x0, [x19, #16]
   21c84:	lsl	x2, x2, #2
   21c88:	add	x1, x0, x20, lsl #2
   21c8c:	bl	a2d0 <memmove@plt>
   21c90:	ldr	x2, [x19, #48]
   21c94:	sub	x2, x2, x20
   21c98:	b	21bcc <printf_parse@@Base+0x26ec>
   21c9c:	mov	x0, x19
   21ca0:	bl	209d0 <printf_parse@@Base+0x14f0>
   21ca4:	cbz	w0, 21c28 <printf_parse@@Base+0x2748>
   21ca8:	b	21c30 <printf_parse@@Base+0x2750>
   21cac:	cbnz	w1, 221fc <printf_parse@@Base+0x2d1c>
   21cb0:	ldr	w3, [x19, #144]
   21cb4:	str	xzr, [x19, #48]
   21cb8:	cmp	w3, #0x1
   21cbc:	b.le	22018 <printf_parse@@Base+0x2b38>
   21cc0:	ldrb	w1, [x19, #137]
   21cc4:	cbnz	w1, 21eec <printf_parse@@Base+0x2a0c>
   21cc8:	add	x22, x0, x22
   21ccc:	cmp	x21, x22
   21cd0:	b.le	22370 <printf_parse@@Base+0x2e90>
   21cd4:	stp	x25, x26, [sp, #64]
   21cd8:	add	x25, sp, #0x88
   21cdc:	stp	x27, x28, [sp, #80]
   21ce0:	add	x27, x19, #0x20
   21ce4:	nop
   21ce8:	mov	x3, x27
   21cec:	ldr	x1, [x19]
   21cf0:	mov	x0, x25
   21cf4:	ldr	x28, [x19, #80]
   21cf8:	add	x1, x1, x22
   21cfc:	ldr	x26, [x19, #32]
   21d00:	sub	x28, x28, x22
   21d04:	mov	x2, x28
   21d08:	bl	a3e0 <rpl_mbrtowc@plt>
   21d0c:	sub	x1, x0, #0x1
   21d10:	cmn	x1, #0x4
   21d14:	b.hi	22224 <printf_parse@@Base+0x2d44>  // b.pmore
   21d18:	ldr	w1, [sp, #136]
   21d1c:	add	x22, x22, x0
   21d20:	cmp	x21, x22
   21d24:	b.gt	21ce8 <printf_parse@@Base+0x2808>
   21d28:	sub	x22, x22, x21
   21d2c:	str	x22, [x19, #48]
   21d30:	cmn	w1, #0x1
   21d34:	b.eq	22248 <printf_parse@@Base+0x2d68>  // b.none
   21d38:	ldp	x27, x28, [sp, #80]
   21d3c:	ldrb	w0, [x19, #142]
   21d40:	cbnz	w0, 222a0 <printf_parse@@Base+0x2dc0>
   21d44:	cmp	w1, #0xa
   21d48:	mov	w0, #0x0                   	// #0
   21d4c:	b.ne	21d60 <printf_parse@@Base+0x2880>  // b.any
   21d50:	ldrb	w0, [x19, #141]
   21d54:	cmp	w0, #0x0
   21d58:	cset	w0, ne  // ne = any
   21d5c:	lsl	w0, w0, #1
   21d60:	ldp	x25, x26, [sp, #64]
   21d64:	str	w0, [x19, #112]
   21d68:	cmp	x22, #0x0
   21d6c:	cbnz	x22, 22268 <printf_parse@@Base+0x2d88>
   21d70:	ldrb	w0, [x19, #139]
   21d74:	ldr	x1, [x19, #88]
   21d78:	str	x22, [x19, #56]
   21d7c:	ldr	x2, [x19, #104]
   21d80:	sub	x1, x1, x20
   21d84:	ldr	w3, [x19, #144]
   21d88:	sub	x2, x2, x20
   21d8c:	b	21bf4 <printf_parse@@Base+0x2714>
   21d90:	mov	x1, x23
   21d94:	mov	x2, #0x0                   	// #0
   21d98:	stp	x25, x26, [sp, #64]
   21d9c:	ldr	x25, [x19, #24]
   21da0:	b	21db4 <printf_parse@@Base+0x28d4>
   21da4:	b.ge	21f88 <printf_parse@@Base+0x2aa8>  // b.tcont
   21da8:	add	x2, x0, #0x1
   21dac:	cmp	x2, x1
   21db0:	b.ge	21df0 <printf_parse@@Base+0x2910>  // b.tcont
   21db4:	add	x0, x2, x1
   21db8:	add	x0, x0, x0, lsr #63
   21dbc:	asr	x0, x0, #1
   21dc0:	ldr	x3, [x25, x0, lsl #3]
   21dc4:	cmp	x3, x20
   21dc8:	b.le	21da4 <printf_parse@@Base+0x28c4>
   21dcc:	mov	x1, x0
   21dd0:	b	21dac <printf_parse@@Base+0x28cc>
   21dd4:	ldr	x0, [x19, #8]
   21dd8:	add	x1, x0, x20
   21ddc:	bl	a2d0 <memmove@plt>
   21de0:	ldr	x2, [x19, #48]
   21de4:	ldrb	w0, [x19, #139]
   21de8:	sub	x2, x2, x20
   21dec:	b	21bd4 <printf_parse@@Base+0x26f4>
   21df0:	cmp	x3, x20
   21df4:	add	x22, x0, #0x1
   21df8:	b.ge	21f88 <printf_parse@@Base+0x2aa8>  // b.tcont
   21dfc:	mov	x1, x0
   21e00:	mov	w2, w24
   21e04:	mov	x0, x19
   21e08:	bl	21a08 <printf_parse@@Base+0x2528>
   21e0c:	str	w0, [x19, #112]
   21e10:	cmp	x20, x22
   21e14:	ccmp	x20, x23, #0x0, eq  // eq = none
   21e18:	b.lt	220c8 <printf_parse@@Base+0x2be8>  // b.tstop
   21e1c:	ldr	x1, [x19, #80]
   21e20:	strb	wzr, [x19, #140]
   21e24:	ldr	x2, [x19, #96]
   21e28:	sub	x1, x1, x21
   21e2c:	add	x0, x1, x20
   21e30:	str	x0, [x19, #88]
   21e34:	sub	x2, x2, x21
   21e38:	cmp	x22, #0x0
   21e3c:	add	x0, x2, x20
   21e40:	str	x0, [x19, #104]
   21e44:	sub	x3, x25, #0x8
   21e48:	b.gt	21e58 <printf_parse@@Base+0x2978>
   21e4c:	b	21e64 <printf_parse@@Base+0x2984>
   21e50:	subs	x22, x22, #0x1
   21e54:	b.eq	21e64 <printf_parse@@Base+0x2984>  // b.none
   21e58:	ldr	x0, [x3, x22, lsl #3]
   21e5c:	cmp	x0, x20
   21e60:	b.eq	21e50 <printf_parse@@Base+0x2970>  // b.none
   21e64:	cmp	x22, x23
   21e68:	b.ge	2209c <printf_parse@@Base+0x2bbc>  // b.tcont
   21e6c:	ldr	x3, [x19, #16]
   21e70:	b	21e80 <printf_parse@@Base+0x29a0>
   21e74:	add	x22, x22, #0x1
   21e78:	cmp	x22, x23
   21e7c:	b.eq	220a0 <printf_parse@@Base+0x2bc0>  // b.none
   21e80:	ldr	w0, [x3, x22, lsl #2]
   21e84:	cmn	w0, #0x1
   21e88:	b.eq	21e74 <printf_parse@@Base+0x2994>  // b.none
   21e8c:	ldr	x22, [x25, x22, lsl #3]
   21e90:	sub	x22, x22, x20
   21e94:	str	x22, [x19, #48]
   21e98:	cmp	x22, #0x0
   21e9c:	cbz	x22, 21ed8 <printf_parse@@Base+0x29f8>
   21ea0:	b.le	21eb4 <printf_parse@@Base+0x29d4>
   21ea4:	ldr	x0, [x19, #16]
   21ea8:	lsl	x2, x22, #2
   21eac:	mov	w1, #0xff                  	// #255
   21eb0:	bl	a6f0 <memset@plt>
   21eb4:	ldr	x0, [x19, #8]
   21eb8:	mov	x2, x22
   21ebc:	mov	w1, #0xff                  	// #255
   21ec0:	bl	a6f0 <memset@plt>
   21ec4:	ldr	x1, [x19, #88]
   21ec8:	ldr	x2, [x19, #104]
   21ecc:	sub	x1, x1, x20
   21ed0:	ldr	x22, [x19, #48]
   21ed4:	sub	x2, x2, x20
   21ed8:	ldrb	w0, [x19, #139]
   21edc:	ldr	w3, [x19, #144]
   21ee0:	ldp	x25, x26, [sp, #64]
   21ee4:	str	x22, [x19, #56]
   21ee8:	b	21bf4 <printf_parse@@Base+0x2714>
   21eec:	ldr	x2, [x19]
   21ef0:	sub	x1, x20, w3, sxtw
   21ef4:	stp	x25, x26, [sp, #64]
   21ef8:	sub	x25, x20, #0x1
   21efc:	add	x26, x2, x0
   21f00:	add	x1, x26, x1
   21f04:	add	x25, x26, x25
   21f08:	cmp	x2, x1
   21f0c:	csel	x2, x2, x1, cs  // cs = hs, nlast
   21f10:	cmp	x2, x25
   21f14:	b.ls	21f28 <printf_parse@@Base+0x2a48>  // b.plast
   21f18:	b	22164 <printf_parse@@Base+0x2c84>
   21f1c:	sub	x25, x25, #0x1
   21f20:	cmp	x2, x25
   21f24:	b.hi	22164 <printf_parse@@Base+0x2c84>  // b.pmore
   21f28:	ldrb	w1, [x25]
   21f2c:	and	w1, w1, #0xc0
   21f30:	cmp	w1, #0x80
   21f34:	b.eq	21f1c <printf_parse@@Base+0x2a3c>  // b.none
   21f38:	ldr	x2, [x19, #88]
   21f3c:	mov	x1, x25
   21f40:	ldr	x0, [x19, #120]
   21f44:	add	x2, x26, x2
   21f48:	sub	x2, x2, x25
   21f4c:	cbnz	x0, 222cc <printf_parse@@Base+0x2dec>
   21f50:	add	x22, x26, x20
   21f54:	add	x3, sp, #0x88
   21f58:	sub	x22, x22, x25
   21f5c:	add	x0, sp, #0x7c
   21f60:	str	xzr, [sp, #136]
   21f64:	bl	a3e0 <rpl_mbrtowc@plt>
   21f68:	cmp	x0, x22
   21f6c:	b.cc	21f78 <printf_parse@@Base+0x2a98>  // b.lo, b.ul, b.last
   21f70:	cmn	x0, #0x3
   21f74:	b.ls	220ac <printf_parse@@Base+0x2bcc>  // b.plast
   21f78:	ldr	x0, [x19, #40]
   21f7c:	ldr	x22, [x19, #56]
   21f80:	ldp	x25, x26, [sp, #64]
   21f84:	b	21cc8 <printf_parse@@Base+0x27e8>
   21f88:	mov	x22, x0
   21f8c:	sub	x0, x0, #0x1
   21f90:	b	21dfc <printf_parse@@Base+0x291c>
   21f94:	ldrb	w0, [x19, #136]
   21f98:	cbnz	w0, 2216c <printf_parse@@Base+0x2c8c>
   21f9c:	ldr	x4, [x19, #120]
   21fa0:	cbz	x4, 21c28 <printf_parse@@Base+0x2748>
   21fa4:	ldr	x2, [x19, #64]
   21fa8:	ldr	x3, [x19, #48]
   21fac:	cmp	x2, x1
   21fb0:	csel	x2, x2, x1, le
   21fb4:	cmp	x2, x3
   21fb8:	b.le	222c4 <printf_parse@@Base+0x2de4>
   21fbc:	ldp	x1, x5, [x19]
   21fc0:	add	x0, x3, #0x1
   21fc4:	cmp	x2, x0
   21fc8:	add	x1, x1, x3
   21fcc:	ldrb	w1, [x1, x21]
   21fd0:	ldrb	w1, [x4, x1]
   21fd4:	strb	w1, [x5, x3]
   21fd8:	b.le	2200c <printf_parse@@Base+0x2b2c>
   21fdc:	nop
   21fe0:	ldr	x1, [x19]
   21fe4:	ldr	x3, [x19, #40]
   21fe8:	add	x1, x1, x0
   21fec:	ldr	x4, [x19, #120]
   21ff0:	ldrb	w3, [x1, x3]
   21ff4:	ldr	x1, [x19, #8]
   21ff8:	ldrb	w3, [x4, x3]
   21ffc:	strb	w3, [x1, x0]
   22000:	add	x0, x0, #0x1
   22004:	cmp	x2, x0
   22008:	b.ne	21fe0 <printf_parse@@Base+0x2b00>  // b.any
   2200c:	dup	v0.2d, x2
   22010:	str	q0, [x19, #48]
   22014:	b	21c28 <printf_parse@@Base+0x2748>
   22018:	ldr	x1, [x19]
   2201c:	ldr	x2, [x19, #120]
   22020:	add	x0, x1, x0
   22024:	add	x0, x0, x20
   22028:	ldurb	w0, [x0, #-1]
   2202c:	str	xzr, [x19, #56]
   22030:	cbz	x2, 2203c <printf_parse@@Base+0x2b5c>
   22034:	and	x0, x0, #0xff
   22038:	ldrb	w0, [x2, x0]
   2203c:	ldr	x4, [x19, #128]
   22040:	ubfx	x1, x0, #6, #2
   22044:	mov	w2, #0x1                   	// #1
   22048:	ldr	x1, [x4, x1, lsl #3]
   2204c:	lsr	x1, x1, x0
   22050:	tbnz	w1, #0, 22070 <printf_parse@@Base+0x2b90>
   22054:	cmp	w0, #0xa
   22058:	mov	w2, #0x0                   	// #0
   2205c:	b.ne	22070 <printf_parse@@Base+0x2b90>  // b.any
   22060:	ldrb	w0, [x19, #141]
   22064:	cmp	w0, #0x0
   22068:	cset	w2, ne  // ne = any
   2206c:	lsl	w2, w2, #1
   22070:	ldrb	w0, [x19, #139]
   22074:	str	w2, [x19, #112]
   22078:	ldr	x1, [x19, #88]
   2207c:	ldr	x2, [x19, #104]
   22080:	sub	x1, x1, x20
   22084:	sub	x2, x2, x20
   22088:	cbz	w0, 21bf8 <printf_parse@@Base+0x2718>
   2208c:	str	x21, [x19, #40]
   22090:	str	x1, [x19, #88]
   22094:	str	x2, [x19, #104]
   22098:	b	21c74 <printf_parse@@Base+0x2794>
   2209c:	b.ne	21e8c <printf_parse@@Base+0x29ac>  // b.any
   220a0:	mov	x22, #0x0                   	// #0
   220a4:	str	xzr, [x19, #48]
   220a8:	b	21ed8 <printf_parse@@Base+0x29f8>
   220ac:	ldr	w1, [sp, #124]
   220b0:	sub	x22, x0, x22
   220b4:	str	xzr, [x19, #32]
   220b8:	str	x22, [x19, #48]
   220bc:	cmn	w1, #0x1
   220c0:	b.ne	21d3c <printf_parse@@Base+0x285c>  // b.any
   220c4:	b	21f78 <printf_parse@@Base+0x2a98>
   220c8:	ldr	x0, [x25, x22, lsl #3]
   220cc:	cmp	x0, x20
   220d0:	b.ne	21e1c <printf_parse@@Base+0x293c>  // b.any
   220d4:	ldr	x0, [x19, #16]
   220d8:	sub	x2, x23, x20
   220dc:	lsl	x2, x2, #2
   220e0:	add	x1, x0, x20, lsl #2
   220e4:	bl	a2d0 <memmove@plt>
   220e8:	ldr	x0, [x19, #8]
   220ec:	ldr	x2, [x19, #48]
   220f0:	add	x1, x0, x20
   220f4:	sub	x2, x2, x20
   220f8:	bl	a2d0 <memmove@plt>
   220fc:	dup	v1.2d, x20
   22100:	ldr	q0, [x19, #48]
   22104:	ldr	x0, [x19, #48]
   22108:	sub	v0.2d, v0.2d, v1.2d
   2210c:	sub	x0, x0, x20
   22110:	cmp	x0, #0x0
   22114:	str	q0, [x19, #48]
   22118:	b.le	22144 <printf_parse@@Base+0x2c64>
   2211c:	ldr	x2, [x19, #24]
   22120:	mov	x0, #0x0                   	// #0
   22124:	add	x3, x2, x20, lsl #3
   22128:	ldr	x1, [x3, x0, lsl #3]
   2212c:	sub	x1, x1, x20
   22130:	str	x1, [x2, x0, lsl #3]
   22134:	add	x0, x0, #0x1
   22138:	ldr	x1, [x19, #48]
   2213c:	cmp	x1, x0
   22140:	b.gt	22128 <printf_parse@@Base+0x2c48>
   22144:	ldr	x1, [x19, #88]
   22148:	ldr	x2, [x19, #104]
   2214c:	sub	x1, x1, x20
   22150:	ldrb	w0, [x19, #139]
   22154:	ldr	w3, [x19, #144]
   22158:	sub	x2, x2, x20
   2215c:	ldp	x25, x26, [sp, #64]
   22160:	b	21bf4 <printf_parse@@Base+0x2714>
   22164:	ldp	x25, x26, [sp, #64]
   22168:	b	21cc8 <printf_parse@@Base+0x27e8>
   2216c:	ldr	x22, [x19, #64]
   22170:	ldr	x20, [x19, #48]
   22174:	cmp	x22, x1
   22178:	csel	x22, x22, x1, le
   2217c:	cmp	x22, x20
   22180:	b.le	221c4 <printf_parse@@Base+0x2ce4>
   22184:	bl	a7f0 <__ctype_toupper_loc@plt>
   22188:	ldr	x1, [x19]
   2218c:	ldr	x2, [x19, #120]
   22190:	add	x1, x1, x20
   22194:	ldrb	w3, [x1, x21]
   22198:	and	x1, x3, #0xff
   2219c:	cbnz	x2, 221d4 <printf_parse@@Base+0x2cf4>
   221a0:	ldr	x2, [x0]
   221a4:	ldr	x1, [x19, #8]
   221a8:	ldr	w2, [x2, x3, lsl #2]
   221ac:	strb	w2, [x1, x20]
   221b0:	add	x20, x20, #0x1
   221b4:	cmp	x22, x20
   221b8:	b.eq	221c8 <printf_parse@@Base+0x2ce8>  // b.none
   221bc:	ldr	x21, [x19, #40]
   221c0:	b	22188 <printf_parse@@Base+0x2ca8>
   221c4:	mov	x22, x20
   221c8:	dup	v0.2d, x22
   221cc:	str	q0, [x19, #48]
   221d0:	b	21c28 <printf_parse@@Base+0x2748>
   221d4:	ldrb	w2, [x2, x1]
   221d8:	ldr	x3, [x0]
   221dc:	ldr	x1, [x19, #8]
   221e0:	ldr	w2, [x3, x2, lsl #2]
   221e4:	strb	w2, [x1, x20]
   221e8:	add	x20, x20, #0x1
   221ec:	cmp	x20, x22
   221f0:	b.eq	221c8 <printf_parse@@Base+0x2ce8>  // b.none
   221f4:	ldr	x21, [x19, #40]
   221f8:	b	22188 <printf_parse@@Base+0x2ca8>
   221fc:	ldr	x2, [x19, #80]
   22200:	strb	wzr, [x19, #140]
   22204:	ldr	x1, [x19, #96]
   22208:	sub	x2, x2, x21
   2220c:	add	x2, x2, x20
   22210:	str	x2, [x19, #88]
   22214:	sub	x1, x1, x21
   22218:	add	x1, x1, x20
   2221c:	str	x1, [x19, #104]
   22220:	b	21cb0 <printf_parse@@Base+0x27d0>
   22224:	cmp	x0, #0x0
   22228:	mov	w1, #0x0                   	// #0
   2222c:	ccmp	x28, #0x0, #0x4, ne  // ne = any
   22230:	b.eq	2223c <printf_parse@@Base+0x2d5c>  // b.none
   22234:	ldr	x0, [x19]
   22238:	ldrb	w1, [x0, x22]
   2223c:	mov	x0, #0x1                   	// #1
   22240:	str	x26, [x19, #32]
   22244:	b	21d1c <printf_parse@@Base+0x283c>
   22248:	ldp	x25, x26, [sp, #64]
   2224c:	ldp	x27, x28, [sp, #80]
   22250:	mov	w2, w24
   22254:	sub	x1, x23, #0x1
   22258:	mov	x0, x19
   2225c:	bl	21a08 <printf_parse@@Base+0x2528>
   22260:	str	w0, [x19, #112]
   22264:	b	21d68 <printf_parse@@Base+0x2888>
   22268:	b.le	2227c <printf_parse@@Base+0x2d9c>
   2226c:	ldr	x0, [x19, #16]
   22270:	lsl	x2, x22, #2
   22274:	mov	w1, #0xff                  	// #255
   22278:	bl	a6f0 <memset@plt>
   2227c:	ldrb	w0, [x19, #139]
   22280:	cbz	w0, 21d74 <printf_parse@@Base+0x2894>
   22284:	ldr	x0, [x19, #8]
   22288:	mov	x2, x22
   2228c:	mov	w1, #0xff                  	// #255
   22290:	bl	a6f0 <memset@plt>
   22294:	ldrb	w0, [x19, #139]
   22298:	ldr	x22, [x19, #48]
   2229c:	b	21d74 <printf_parse@@Base+0x2894>
   222a0:	mov	w0, w1
   222a4:	str	w1, [sp, #108]
   222a8:	bl	ad30 <iswalnum@plt>
   222ac:	ldr	w1, [sp, #108]
   222b0:	cmp	w1, #0x5f
   222b4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   222b8:	mov	w0, #0x1                   	// #1
   222bc:	b.ne	21d60 <printf_parse@@Base+0x2880>  // b.any
   222c0:	b	21d44 <printf_parse@@Base+0x2864>
   222c4:	mov	x2, x3
   222c8:	b	2200c <printf_parse@@Base+0x2b2c>
   222cc:	cmp	x2, #0x6
   222d0:	mov	x3, #0x6                   	// #6
   222d4:	csel	x3, x2, x3, le
   222d8:	add	x1, sp, #0x80
   222dc:	subs	w4, w3, #0x1
   222e0:	b.mi	21f50 <printf_parse@@Base+0x2a70>  // b.first
   222e4:	ldrb	w6, [x25, w4, sxtw]
   222e8:	add	x1, sp, #0x80
   222ec:	cmp	w3, #0x1
   222f0:	sub	w5, w3, #0x2
   222f4:	ldrb	w6, [x0, x6]
   222f8:	strb	w6, [x1, w4, sxtw]
   222fc:	b.eq	21f50 <printf_parse@@Base+0x2a70>  // b.none
   22300:	ldrb	w6, [x25, w5, sxtw]
   22304:	cmp	w3, #0x2
   22308:	sub	w4, w3, #0x3
   2230c:	ldrb	w6, [x0, x6]
   22310:	strb	w6, [x1, w5, sxtw]
   22314:	b.eq	21f50 <printf_parse@@Base+0x2a70>  // b.none
   22318:	ldrb	w6, [x25, w4, sxtw]
   2231c:	cmp	w3, #0x3
   22320:	sub	w5, w3, #0x4
   22324:	ldrb	w6, [x0, x6]
   22328:	strb	w6, [x1, w4, sxtw]
   2232c:	b.eq	21f50 <printf_parse@@Base+0x2a70>  // b.none
   22330:	ldrb	w6, [x25, w5, sxtw]
   22334:	cmp	w3, #0x4
   22338:	sub	w4, w3, #0x5
   2233c:	ldrb	w6, [x0, x6]
   22340:	strb	w6, [x1, w5, sxtw]
   22344:	b.eq	21f50 <printf_parse@@Base+0x2a70>  // b.none
   22348:	ldrb	w5, [x25, w4, sxtw]
   2234c:	cmp	w3, #0x5
   22350:	sub	w3, w3, #0x6
   22354:	ldrb	w5, [x0, x5]
   22358:	strb	w5, [x1, w4, sxtw]
   2235c:	b.eq	21f50 <printf_parse@@Base+0x2a70>  // b.none
   22360:	ldrb	w4, [x25, w3, sxtw]
   22364:	ldrb	w0, [x0, x4]
   22368:	strb	w0, [x1, w3, sxtw]
   2236c:	b	21f50 <printf_parse@@Base+0x2a70>
   22370:	sub	x22, x22, x21
   22374:	str	x22, [x19, #48]
   22378:	b	22250 <printf_parse@@Base+0x2d70>
   2237c:	nop
   22380:	stp	x29, x30, [sp, #-48]!
   22384:	mov	x29, sp
   22388:	str	x21, [sp, #32]
   2238c:	mov	x21, x2
   22390:	ldr	w2, [x0, #160]
   22394:	stp	x19, x20, [sp, #16]
   22398:	mov	x19, x1
   2239c:	mov	x20, x0
   223a0:	mov	x1, x3
   223a4:	bl	21a08 <printf_parse@@Base+0x2528>
   223a8:	cmp	x19, #0x0
   223ac:	b.le	22404 <printf_parse@@Base+0x2f24>
   223b0:	ldr	x1, [x20, #152]
   223b4:	and	w5, w0, #0x2
   223b8:	and	w2, w0, #0x8
   223bc:	ldr	x3, [x21]
   223c0:	ldr	x4, [x1]
   223c4:	tbz	w0, #0, 22418 <printf_parse@@Base+0x2f38>
   223c8:	cbz	w5, 2253c <printf_parse@@Base+0x305c>
   223cc:	cbz	w2, 225c4 <printf_parse@@Base+0x30e4>
   223d0:	mov	x2, #0x0                   	// #0
   223d4:	ldr	x0, [x3, x2, lsl #3]
   223d8:	add	x2, x2, #0x1
   223dc:	add	x5, x4, x0, lsl #4
   223e0:	ldr	w1, [x5, #8]
   223e4:	ldrb	w5, [x5, #8]
   223e8:	ubfx	x1, x1, #8, #10
   223ec:	cmp	w5, #0x2
   223f0:	b.ne	223fc <printf_parse@@Base+0x2f1c>  // b.any
   223f4:	cbz	w1, 22450 <printf_parse@@Base+0x2f70>
   223f8:	tbz	w1, #3, 22450 <printf_parse@@Base+0x2f70>
   223fc:	cmp	x19, x2
   22400:	b.ne	223d4 <printf_parse@@Base+0x2ef4>  // b.any
   22404:	mov	x0, #0x0                   	// #0
   22408:	ldp	x19, x20, [sp, #16]
   2240c:	ldr	x21, [sp, #32]
   22410:	ldp	x29, x30, [sp], #48
   22414:	ret
   22418:	mov	x1, #0x0                   	// #0
   2241c:	cbz	w5, 224b4 <printf_parse@@Base+0x2fd4>
   22420:	cbz	w2, 22470 <printf_parse@@Base+0x2f90>
   22424:	nop
   22428:	ldr	x0, [x3, x1, lsl #3]
   2242c:	add	x1, x1, #0x1
   22430:	add	x5, x4, x0, lsl #4
   22434:	ldr	w2, [x5, #8]
   22438:	ldrb	w5, [x5, #8]
   2243c:	ubfx	x2, x2, #8, #10
   22440:	cmp	w5, #0x2
   22444:	b.ne	22460 <printf_parse@@Base+0x2f80>  // b.any
   22448:	cbz	w2, 22450 <printf_parse@@Base+0x2f70>
   2244c:	tbnz	w2, #2, 22460 <printf_parse@@Base+0x2f80>
   22450:	ldp	x19, x20, [sp, #16]
   22454:	ldr	x21, [sp, #32]
   22458:	ldp	x29, x30, [sp], #48
   2245c:	ret
   22460:	cmp	x19, x1
   22464:	b.ne	22428 <printf_parse@@Base+0x2f48>  // b.any
   22468:	mov	x0, #0x0                   	// #0
   2246c:	b	22408 <printf_parse@@Base+0x2f28>
   22470:	mov	w6, #0x84                  	// #132
   22474:	nop
   22478:	ldr	x0, [x3, x1, lsl #3]
   2247c:	add	x1, x1, #0x1
   22480:	add	x5, x4, x0, lsl #4
   22484:	ldr	w2, [x5, #8]
   22488:	ldrb	w5, [x5, #8]
   2248c:	ubfx	x2, x2, #8, #10
   22490:	cmp	w5, #0x2
   22494:	b.ne	224a4 <printf_parse@@Base+0x2fc4>  // b.any
   22498:	cbz	w2, 22450 <printf_parse@@Base+0x2f70>
   2249c:	tst	w2, w6
   224a0:	b.eq	22450 <printf_parse@@Base+0x2f70>  // b.none
   224a4:	cmp	x19, x1
   224a8:	b.ne	22478 <printf_parse@@Base+0x2f98>  // b.any
   224ac:	mov	x0, #0x0                   	// #0
   224b0:	b	22408 <printf_parse@@Base+0x2f28>
   224b4:	cbz	w2, 224fc <printf_parse@@Base+0x301c>
   224b8:	mov	w6, #0x24                  	// #36
   224bc:	nop
   224c0:	ldr	x0, [x3, x1, lsl #3]
   224c4:	add	x1, x1, #0x1
   224c8:	add	x5, x4, x0, lsl #4
   224cc:	ldr	w2, [x5, #8]
   224d0:	ldrb	w5, [x5, #8]
   224d4:	ubfx	x2, x2, #8, #10
   224d8:	cmp	w5, #0x2
   224dc:	b.ne	224ec <printf_parse@@Base+0x300c>  // b.any
   224e0:	cbz	w2, 22450 <printf_parse@@Base+0x2f70>
   224e4:	tst	w2, w6
   224e8:	b.eq	22450 <printf_parse@@Base+0x2f70>  // b.none
   224ec:	cmp	x19, x1
   224f0:	b.ne	224c0 <printf_parse@@Base+0x2fe0>  // b.any
   224f4:	mov	x0, #0x0                   	// #0
   224f8:	b	22408 <printf_parse@@Base+0x2f28>
   224fc:	mov	w6, #0xa4                  	// #164
   22500:	ldr	x0, [x3, x1, lsl #3]
   22504:	add	x1, x1, #0x1
   22508:	add	x5, x4, x0, lsl #4
   2250c:	ldr	w2, [x5, #8]
   22510:	ldrb	w5, [x5, #8]
   22514:	ubfx	x2, x2, #8, #10
   22518:	cmp	w5, #0x2
   2251c:	b.ne	2252c <printf_parse@@Base+0x304c>  // b.any
   22520:	cbz	w2, 22450 <printf_parse@@Base+0x2f70>
   22524:	tst	w2, w6
   22528:	b.eq	22450 <printf_parse@@Base+0x2f70>  // b.none
   2252c:	cmp	x19, x1
   22530:	b.ne	22500 <printf_parse@@Base+0x3020>  // b.any
   22534:	mov	x0, #0x0                   	// #0
   22538:	b	22408 <printf_parse@@Base+0x2f28>
   2253c:	cbz	w2, 2257c <printf_parse@@Base+0x309c>
   22540:	mov	x2, #0x0                   	// #0
   22544:	ldr	x0, [x3, x2, lsl #3]
   22548:	add	x5, x4, x0, lsl #4
   2254c:	ldr	w1, [x5, #8]
   22550:	ldrb	w5, [x5, #8]
   22554:	ubfx	x1, x1, #8, #10
   22558:	cmp	w5, #0x2
   2255c:	b.ne	22568 <printf_parse@@Base+0x3088>  // b.any
   22560:	cbz	w1, 22450 <printf_parse@@Base+0x2f70>
   22564:	tbz	w1, #3, 22600 <printf_parse@@Base+0x3120>
   22568:	add	x2, x2, #0x1
   2256c:	cmp	x19, x2
   22570:	b.ne	22544 <printf_parse@@Base+0x3064>  // b.any
   22574:	mov	x0, #0x0                   	// #0
   22578:	b	22408 <printf_parse@@Base+0x2f28>
   2257c:	mov	x2, #0x0                   	// #0
   22580:	mov	w6, #0xa0                  	// #160
   22584:	ldr	x0, [x3, x2, lsl #3]
   22588:	add	x5, x4, x0, lsl #4
   2258c:	ldr	w1, [x5, #8]
   22590:	ldrb	w5, [x5, #8]
   22594:	ubfx	x1, x1, #8, #10
   22598:	cmp	w5, #0x2
   2259c:	b.ne	225b0 <printf_parse@@Base+0x30d0>  // b.any
   225a0:	cbz	w1, 22450 <printf_parse@@Base+0x2f70>
   225a4:	tbnz	w1, #3, 225b0 <printf_parse@@Base+0x30d0>
   225a8:	tst	w1, w6
   225ac:	b.eq	22450 <printf_parse@@Base+0x2f70>  // b.none
   225b0:	add	x2, x2, #0x1
   225b4:	cmp	x19, x2
   225b8:	b.ne	22584 <printf_parse@@Base+0x30a4>  // b.any
   225bc:	mov	x0, #0x0                   	// #0
   225c0:	b	22408 <printf_parse@@Base+0x2f28>
   225c4:	mov	x2, #0x0                   	// #0
   225c8:	ldr	x0, [x3, x2, lsl #3]
   225cc:	add	x5, x4, x0, lsl #4
   225d0:	ldr	w1, [x5, #8]
   225d4:	ldrb	w5, [x5, #8]
   225d8:	ubfx	x1, x1, #8, #10
   225dc:	cmp	w5, #0x2
   225e0:	b.ne	225ec <printf_parse@@Base+0x310c>  // b.any
   225e4:	cbz	w1, 22450 <printf_parse@@Base+0x2f70>
   225e8:	tbz	w1, #3, 22608 <printf_parse@@Base+0x3128>
   225ec:	add	x2, x2, #0x1
   225f0:	cmp	x19, x2
   225f4:	b.ne	225c8 <printf_parse@@Base+0x30e8>  // b.any
   225f8:	mov	x0, #0x0                   	// #0
   225fc:	b	22408 <printf_parse@@Base+0x2f28>
   22600:	tbz	w1, #5, 22450 <printf_parse@@Base+0x2f70>
   22604:	b	22568 <printf_parse@@Base+0x3088>
   22608:	tbz	w1, #7, 22450 <printf_parse@@Base+0x2f70>
   2260c:	b	225ec <printf_parse@@Base+0x310c>
   22610:	stp	x29, x30, [sp, #-16]!
   22614:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   22618:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2261c:	mov	x29, sp
   22620:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   22624:	add	x3, x3, #0x410
   22628:	add	x1, x1, #0x138
   2262c:	add	x0, x0, #0x148
   22630:	mov	w2, #0x555                 	// #1365
   22634:	bl	aea0 <__assert_fail@plt>
   22638:	stp	x29, x30, [sp, #-80]!
   2263c:	mov	x29, sp
   22640:	stp	x19, x20, [sp, #16]
   22644:	mov	x20, x0
   22648:	mov	x19, x1
   2264c:	stp	x21, x22, [sp, #32]
   22650:	mov	x22, x3
   22654:	mov	x21, x5
   22658:	stp	x23, x24, [sp, #48]
   2265c:	mov	x24, x4
   22660:	stp	x25, x26, [sp, #64]
   22664:	mov	x25, x2
   22668:	tbz	w6, #22, 22688 <printf_parse@@Base+0x31a8>
   2266c:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   22670:	mov	x0, x5
   22674:	add	x1, x1, #0x160
   22678:	bl	a9b0 <strcmp@plt>
   2267c:	cbnz	w0, 22774 <printf_parse@@Base+0x3294>
   22680:	adrp	x21, 34000 <vasnprintf@@Base+0x3848>
   22684:	add	x21, x21, #0x158
   22688:	ldr	x23, [x22]
   2268c:	ldr	x0, [x24]
   22690:	ldr	x26, [x25]
   22694:	cmp	x0, x23
   22698:	b.eq	227a8 <printf_parse@@Base+0x32c8>  // b.none
   2269c:	add	x0, x23, #0x1
   226a0:	str	x0, [x22]
   226a4:	mov	x0, x21
   226a8:	bl	a3c0 <wctype@plt>
   226ac:	str	x0, [x26, x23, lsl #3]
   226b0:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   226b4:	mov	x0, x21
   226b8:	add	x1, x1, #0x170
   226bc:	bl	a9b0 <strcmp@plt>
   226c0:	cbz	w0, 22734 <printf_parse@@Base+0x3254>
   226c4:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   226c8:	mov	x0, x21
   226cc:	add	x1, x1, #0x178
   226d0:	bl	a9b0 <strcmp@plt>
   226d4:	cbnz	w0, 227d4 <printf_parse@@Base+0x32f4>
   226d8:	bl	a9d0 <__ctype_b_loc@plt>
   226dc:	mov	x2, #0x0                   	// #0
   226e0:	mov	x5, #0x1                   	// #1
   226e4:	ldr	x4, [x0]
   226e8:	cbnz	x20, 22960 <printf_parse@@Base+0x3480>
   226ec:	nop
   226f0:	ldrh	w0, [x4, x2, lsl #1]
   226f4:	asr	x1, x2, #6
   226f8:	lsl	x3, x5, x2
   226fc:	add	x2, x2, #0x1
   22700:	tbz	w0, #1, 22710 <printf_parse@@Base+0x3230>
   22704:	ldr	x0, [x19, x1, lsl #3]
   22708:	orr	x0, x0, x3
   2270c:	str	x0, [x19, x1, lsl #3]
   22710:	cmp	x2, #0x100
   22714:	b.ne	226f0 <printf_parse@@Base+0x3210>  // b.any
   22718:	mov	w0, #0x0                   	// #0
   2271c:	ldp	x19, x20, [sp, #16]
   22720:	ldp	x21, x22, [sp, #32]
   22724:	ldp	x23, x24, [sp, #48]
   22728:	ldp	x25, x26, [sp, #64]
   2272c:	ldp	x29, x30, [sp], #80
   22730:	ret
   22734:	bl	a9d0 <__ctype_b_loc@plt>
   22738:	mov	x2, #0x0                   	// #0
   2273c:	mov	x6, #0x1                   	// #1
   22740:	ldr	x5, [x0]
   22744:	cbnz	x20, 22924 <printf_parse@@Base+0x3444>
   22748:	ldrh	w3, [x5, x2, lsl #1]
   2274c:	asr	x0, x2, #6
   22750:	lsl	x4, x6, x2
   22754:	add	x2, x2, #0x1
   22758:	tbz	w3, #3, 22768 <printf_parse@@Base+0x3288>
   2275c:	ldr	x1, [x19, x0, lsl #3]
   22760:	orr	x1, x1, x4
   22764:	str	x1, [x19, x0, lsl #3]
   22768:	cmp	x2, #0x100
   2276c:	b.ne	22748 <printf_parse@@Base+0x3268>  // b.any
   22770:	b	22718 <printf_parse@@Base+0x3238>
   22774:	mov	x0, x21
   22778:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2277c:	add	x1, x1, #0x168
   22780:	bl	a9b0 <strcmp@plt>
   22784:	cmp	w0, #0x0
   22788:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2278c:	ldr	x23, [x22]
   22790:	add	x1, x1, #0x158
   22794:	ldr	x0, [x24]
   22798:	csel	x21, x1, x21, eq  // eq = none
   2279c:	ldr	x26, [x25]
   227a0:	cmp	x0, x23
   227a4:	b.ne	2269c <printf_parse@@Base+0x31bc>  // b.any
   227a8:	lsl	x23, x23, #1
   227ac:	mov	x0, x26
   227b0:	add	x23, x23, #0x1
   227b4:	lsl	x1, x23, #3
   227b8:	bl	a7e0 <realloc@plt>
   227bc:	mov	x26, x0
   227c0:	cbz	x0, 22a78 <printf_parse@@Base+0x3598>
   227c4:	str	x0, [x25]
   227c8:	str	x23, [x24]
   227cc:	ldr	x23, [x22]
   227d0:	b	2269c <printf_parse@@Base+0x31bc>
   227d4:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   227d8:	mov	x0, x21
   227dc:	add	x1, x1, #0x168
   227e0:	bl	a9b0 <strcmp@plt>
   227e4:	cbz	w0, 2283c <printf_parse@@Base+0x335c>
   227e8:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   227ec:	mov	x0, x21
   227f0:	add	x1, x1, #0x180
   227f4:	bl	a9b0 <strcmp@plt>
   227f8:	cbnz	w0, 2287c <printf_parse@@Base+0x339c>
   227fc:	bl	a9d0 <__ctype_b_loc@plt>
   22800:	mov	x1, #0x0                   	// #0
   22804:	mov	x5, #0x1                   	// #1
   22808:	ldr	x4, [x0]
   2280c:	cbnz	x20, 22b08 <printf_parse@@Base+0x3628>
   22810:	ldrh	w0, [x4, x1, lsl #1]
   22814:	asr	x2, x1, #6
   22818:	lsl	x3, x5, x1
   2281c:	add	x1, x1, #0x1
   22820:	tbz	w0, #13, 22830 <printf_parse@@Base+0x3350>
   22824:	ldr	x0, [x19, x2, lsl #3]
   22828:	orr	x0, x0, x3
   2282c:	str	x0, [x19, x2, lsl #3]
   22830:	cmp	x1, #0x100
   22834:	b.ne	22810 <printf_parse@@Base+0x3330>  // b.any
   22838:	b	22718 <printf_parse@@Base+0x3238>
   2283c:	bl	a9d0 <__ctype_b_loc@plt>
   22840:	mov	x1, #0x0                   	// #0
   22844:	mov	x5, #0x1                   	// #1
   22848:	ldr	x4, [x0]
   2284c:	cbnz	x20, 22998 <printf_parse@@Base+0x34b8>
   22850:	ldrh	w0, [x4, x1, lsl #1]
   22854:	asr	x2, x1, #6
   22858:	lsl	x3, x5, x1
   2285c:	add	x1, x1, #0x1
   22860:	tbz	w0, #9, 22870 <printf_parse@@Base+0x3390>
   22864:	ldr	x0, [x19, x2, lsl #3]
   22868:	orr	x0, x0, x3
   2286c:	str	x0, [x19, x2, lsl #3]
   22870:	cmp	x1, #0x100
   22874:	b.ne	22850 <printf_parse@@Base+0x3370>  // b.any
   22878:	b	22718 <printf_parse@@Base+0x3238>
   2287c:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   22880:	mov	x0, x21
   22884:	add	x1, x1, #0x158
   22888:	bl	a9b0 <strcmp@plt>
   2288c:	cbz	w0, 228e4 <printf_parse@@Base+0x3404>
   22890:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   22894:	mov	x0, x21
   22898:	add	x1, x1, #0x188
   2289c:	bl	a9b0 <strcmp@plt>
   228a0:	cbnz	w0, 229d0 <printf_parse@@Base+0x34f0>
   228a4:	bl	a9d0 <__ctype_b_loc@plt>
   228a8:	mov	x1, #0x0                   	// #0
   228ac:	mov	x5, #0x1                   	// #1
   228b0:	ldr	x4, [x0]
   228b4:	cbnz	x20, 22b40 <printf_parse@@Base+0x3660>
   228b8:	ldrh	w2, [x4, x1, lsl #1]
   228bc:	asr	x0, x1, #6
   228c0:	lsl	x3, x5, x1
   228c4:	add	x1, x1, #0x1
   228c8:	tbz	w2, #11, 228d8 <printf_parse@@Base+0x33f8>
   228cc:	ldr	x2, [x19, x0, lsl #3]
   228d0:	orr	x2, x2, x3
   228d4:	str	x2, [x19, x0, lsl #3]
   228d8:	cmp	x1, #0x100
   228dc:	b.ne	228b8 <printf_parse@@Base+0x33d8>  // b.any
   228e0:	b	22718 <printf_parse@@Base+0x3238>
   228e4:	bl	a9d0 <__ctype_b_loc@plt>
   228e8:	mov	x1, #0x0                   	// #0
   228ec:	mov	x5, #0x1                   	// #1
   228f0:	ldr	x4, [x0]
   228f4:	cbnz	x20, 22ad4 <printf_parse@@Base+0x35f4>
   228f8:	ldrh	w0, [x4, x1, lsl #1]
   228fc:	asr	x2, x1, #6
   22900:	lsl	x3, x5, x1
   22904:	add	x1, x1, #0x1
   22908:	tbz	w0, #10, 22918 <printf_parse@@Base+0x3438>
   2290c:	ldr	x0, [x19, x2, lsl #3]
   22910:	orr	x0, x0, x3
   22914:	str	x0, [x19, x2, lsl #3]
   22918:	cmp	x1, #0x100
   2291c:	b.ne	228f8 <printf_parse@@Base+0x3418>  // b.any
   22920:	b	22718 <printf_parse@@Base+0x3238>
   22924:	mov	x4, x6
   22928:	mov	x0, #0x0                   	// #0
   2292c:	nop
   22930:	ldrh	w1, [x5, x0, lsl #1]
   22934:	tbz	w1, #3, 22950 <printf_parse@@Base+0x3470>
   22938:	ldrb	w1, [x20, x0]
   2293c:	ubfx	x3, x1, #6, #2
   22940:	lsl	x1, x4, x1
   22944:	ldr	x2, [x19, x3, lsl #3]
   22948:	orr	x1, x2, x1
   2294c:	str	x1, [x19, x3, lsl #3]
   22950:	add	x0, x0, #0x1
   22954:	cmp	x0, #0x100
   22958:	b.ne	22930 <printf_parse@@Base+0x3450>  // b.any
   2295c:	b	22718 <printf_parse@@Base+0x3238>
   22960:	mov	x0, #0x0                   	// #0
   22964:	nop
   22968:	ldrh	w1, [x4, x0, lsl #1]
   2296c:	tbz	w1, #1, 22988 <printf_parse@@Base+0x34a8>
   22970:	ldrb	w1, [x20, x0]
   22974:	ubfx	x3, x1, #6, #2
   22978:	lsl	x1, x5, x1
   2297c:	ldr	x2, [x19, x3, lsl #3]
   22980:	orr	x1, x2, x1
   22984:	str	x1, [x19, x3, lsl #3]
   22988:	add	x0, x0, #0x1
   2298c:	cmp	x0, #0x100
   22990:	b.ne	22968 <printf_parse@@Base+0x3488>  // b.any
   22994:	b	22718 <printf_parse@@Base+0x3238>
   22998:	mov	x0, #0x0                   	// #0
   2299c:	nop
   229a0:	ldrh	w1, [x4, x0, lsl #1]
   229a4:	tbz	w1, #9, 229c0 <printf_parse@@Base+0x34e0>
   229a8:	ldrb	w1, [x20, x0]
   229ac:	ubfx	x3, x1, #6, #2
   229b0:	lsl	x1, x5, x1
   229b4:	ldr	x2, [x19, x3, lsl #3]
   229b8:	orr	x1, x2, x1
   229bc:	str	x1, [x19, x3, lsl #3]
   229c0:	add	x0, x0, #0x1
   229c4:	cmp	x0, #0x100
   229c8:	b.ne	229a0 <printf_parse@@Base+0x34c0>  // b.any
   229cc:	b	22718 <printf_parse@@Base+0x3238>
   229d0:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   229d4:	mov	x0, x21
   229d8:	add	x1, x1, #0x190
   229dc:	bl	a9b0 <strcmp@plt>
   229e0:	cbnz	w0, 22a24 <printf_parse@@Base+0x3544>
   229e4:	bl	a9d0 <__ctype_b_loc@plt>
   229e8:	mov	x1, #0x0                   	// #0
   229ec:	mov	x5, #0x1                   	// #1
   229f0:	ldr	x4, [x0]
   229f4:	cbnz	x20, 22d20 <printf_parse@@Base+0x3840>
   229f8:	ldrh	w0, [x4, x1, lsl #1]
   229fc:	asr	x2, x1, #6
   22a00:	lsl	x3, x5, x1
   22a04:	add	x1, x1, #0x1
   22a08:	tbz	w0, #14, 22a18 <printf_parse@@Base+0x3538>
   22a0c:	ldr	x0, [x19, x2, lsl #3]
   22a10:	orr	x0, x0, x3
   22a14:	str	x0, [x19, x2, lsl #3]
   22a18:	cmp	x1, #0x100
   22a1c:	b.ne	229f8 <printf_parse@@Base+0x3518>  // b.any
   22a20:	b	22718 <printf_parse@@Base+0x3238>
   22a24:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   22a28:	mov	x0, x21
   22a2c:	add	x1, x1, #0x160
   22a30:	bl	a9b0 <strcmp@plt>
   22a34:	cbnz	w0, 22a80 <printf_parse@@Base+0x35a0>
   22a38:	bl	a9d0 <__ctype_b_loc@plt>
   22a3c:	mov	x1, #0x0                   	// #0
   22a40:	mov	x5, #0x1                   	// #1
   22a44:	ldr	x4, [x0]
   22a48:	cbnz	x20, 22d8c <printf_parse@@Base+0x38ac>
   22a4c:	ldrh	w0, [x4, x1, lsl #1]
   22a50:	asr	x2, x1, #6
   22a54:	lsl	x3, x5, x1
   22a58:	add	x1, x1, #0x1
   22a5c:	tbz	w0, #8, 22a6c <printf_parse@@Base+0x358c>
   22a60:	ldr	x0, [x19, x2, lsl #3]
   22a64:	orr	x0, x0, x3
   22a68:	str	x0, [x19, x2, lsl #3]
   22a6c:	cmp	x1, #0x100
   22a70:	b.ne	22a4c <printf_parse@@Base+0x356c>  // b.any
   22a74:	b	22718 <printf_parse@@Base+0x3238>
   22a78:	mov	w0, #0xc                   	// #12
   22a7c:	b	2271c <printf_parse@@Base+0x323c>
   22a80:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   22a84:	mov	x0, x21
   22a88:	add	x1, x1, #0x198
   22a8c:	bl	a9b0 <strcmp@plt>
   22a90:	cbnz	w0, 22b74 <printf_parse@@Base+0x3694>
   22a94:	bl	a9d0 <__ctype_b_loc@plt>
   22a98:	mov	x1, #0x0                   	// #0
   22a9c:	mov	x4, #0x1                   	// #1
   22aa0:	ldr	x2, [x0]
   22aa4:	cbnz	x20, 22d54 <printf_parse@@Base+0x3874>
   22aa8:	ldrh	w0, [x2, x1, lsl #1]
   22aac:	asr	x3, x1, #6
   22ab0:	lsl	x5, x4, x1
   22ab4:	add	x1, x1, #0x1
   22ab8:	tbz	w0, #0, 22ac8 <printf_parse@@Base+0x35e8>
   22abc:	ldr	x0, [x19, x3, lsl #3]
   22ac0:	orr	x0, x0, x5
   22ac4:	str	x0, [x19, x3, lsl #3]
   22ac8:	cmp	x1, #0x100
   22acc:	b.ne	22aa8 <printf_parse@@Base+0x35c8>  // b.any
   22ad0:	b	22718 <printf_parse@@Base+0x3238>
   22ad4:	mov	x0, #0x0                   	// #0
   22ad8:	ldrh	w1, [x4, x0, lsl #1]
   22adc:	tbz	w1, #10, 22af8 <printf_parse@@Base+0x3618>
   22ae0:	ldrb	w1, [x20, x0]
   22ae4:	ubfx	x3, x1, #6, #2
   22ae8:	lsl	x1, x5, x1
   22aec:	ldr	x2, [x19, x3, lsl #3]
   22af0:	orr	x1, x2, x1
   22af4:	str	x1, [x19, x3, lsl #3]
   22af8:	add	x0, x0, #0x1
   22afc:	cmp	x0, #0x100
   22b00:	b.ne	22ad8 <printf_parse@@Base+0x35f8>  // b.any
   22b04:	b	22718 <printf_parse@@Base+0x3238>
   22b08:	mov	x0, #0x0                   	// #0
   22b0c:	nop
   22b10:	ldrh	w1, [x4, x0, lsl #1]
   22b14:	tbz	w1, #13, 22b30 <printf_parse@@Base+0x3650>
   22b18:	ldrb	w1, [x20, x0]
   22b1c:	ubfx	x3, x1, #6, #2
   22b20:	lsl	x1, x5, x1
   22b24:	ldr	x2, [x19, x3, lsl #3]
   22b28:	orr	x1, x2, x1
   22b2c:	str	x1, [x19, x3, lsl #3]
   22b30:	add	x0, x0, #0x1
   22b34:	cmp	x0, #0x100
   22b38:	b.ne	22b10 <printf_parse@@Base+0x3630>  // b.any
   22b3c:	b	22718 <printf_parse@@Base+0x3238>
   22b40:	mov	x0, #0x0                   	// #0
   22b44:	ldrh	w1, [x4, x0, lsl #1]
   22b48:	tbz	w1, #11, 22b64 <printf_parse@@Base+0x3684>
   22b4c:	ldrb	w1, [x20, x0]
   22b50:	ubfx	x3, x1, #6, #2
   22b54:	lsl	x1, x5, x1
   22b58:	ldr	x2, [x19, x3, lsl #3]
   22b5c:	orr	x1, x2, x1
   22b60:	str	x1, [x19, x3, lsl #3]
   22b64:	add	x0, x0, #0x1
   22b68:	cmp	x0, #0x100
   22b6c:	b.ne	22b44 <printf_parse@@Base+0x3664>  // b.any
   22b70:	b	22718 <printf_parse@@Base+0x3238>
   22b74:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   22b78:	mov	x0, x21
   22b7c:	add	x1, x1, #0x1a0
   22b80:	bl	a9b0 <strcmp@plt>
   22b84:	cbnz	w0, 22c00 <printf_parse@@Base+0x3720>
   22b88:	bl	a9d0 <__ctype_b_loc@plt>
   22b8c:	mov	x1, #0x0                   	// #0
   22b90:	mov	x4, #0x1                   	// #1
   22b94:	ldr	x3, [x0]
   22b98:	cbnz	x20, 22bc8 <printf_parse@@Base+0x36e8>
   22b9c:	ldrsh	w0, [x3, x1, lsl #1]
   22ba0:	asr	x2, x1, #6
   22ba4:	lsl	x5, x4, x1
   22ba8:	add	x1, x1, #0x1
   22bac:	tbz	w0, #31, 22bbc <printf_parse@@Base+0x36dc>
   22bb0:	ldr	x0, [x19, x2, lsl #3]
   22bb4:	orr	x0, x0, x5
   22bb8:	str	x0, [x19, x2, lsl #3]
   22bbc:	cmp	x1, #0x100
   22bc0:	b.ne	22b9c <printf_parse@@Base+0x36bc>  // b.any
   22bc4:	b	22718 <printf_parse@@Base+0x3238>
   22bc8:	mov	x5, x4
   22bcc:	mov	x0, #0x0                   	// #0
   22bd0:	ldrsh	w1, [x3, x0, lsl #1]
   22bd4:	tbz	w1, #31, 22bf0 <printf_parse@@Base+0x3710>
   22bd8:	ldrb	w1, [x20, x0]
   22bdc:	ubfx	x4, x1, #6, #2
   22be0:	lsl	x1, x5, x1
   22be4:	ldr	x2, [x19, x4, lsl #3]
   22be8:	orr	x1, x2, x1
   22bec:	str	x1, [x19, x4, lsl #3]
   22bf0:	add	x0, x0, #0x1
   22bf4:	cmp	x0, #0x100
   22bf8:	b.ne	22bd0 <printf_parse@@Base+0x36f0>  // b.any
   22bfc:	b	22718 <printf_parse@@Base+0x3238>
   22c00:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   22c04:	mov	x0, x21
   22c08:	add	x1, x1, #0x1a8
   22c0c:	bl	a9b0 <strcmp@plt>
   22c10:	cbnz	w0, 22c8c <printf_parse@@Base+0x37ac>
   22c14:	bl	a9d0 <__ctype_b_loc@plt>
   22c18:	mov	x1, #0x0                   	// #0
   22c1c:	mov	x4, #0x1                   	// #1
   22c20:	ldr	x3, [x0]
   22c24:	cbnz	x20, 22c54 <printf_parse@@Base+0x3774>
   22c28:	ldrh	w0, [x3, x1, lsl #1]
   22c2c:	asr	x2, x1, #6
   22c30:	lsl	x5, x4, x1
   22c34:	add	x1, x1, #0x1
   22c38:	tbz	w0, #2, 22c48 <printf_parse@@Base+0x3768>
   22c3c:	ldr	x0, [x19, x2, lsl #3]
   22c40:	orr	x0, x0, x5
   22c44:	str	x0, [x19, x2, lsl #3]
   22c48:	cmp	x1, #0x100
   22c4c:	b.ne	22c28 <printf_parse@@Base+0x3748>  // b.any
   22c50:	b	22718 <printf_parse@@Base+0x3238>
   22c54:	mov	x5, x4
   22c58:	mov	x0, #0x0                   	// #0
   22c5c:	ldrh	w1, [x3, x0, lsl #1]
   22c60:	tbz	w1, #2, 22c7c <printf_parse@@Base+0x379c>
   22c64:	ldrb	w1, [x20, x0]
   22c68:	ubfx	x4, x1, #6, #2
   22c6c:	lsl	x1, x5, x1
   22c70:	ldr	x2, [x19, x4, lsl #3]
   22c74:	orr	x1, x2, x1
   22c78:	str	x1, [x19, x4, lsl #3]
   22c7c:	add	x0, x0, #0x1
   22c80:	cmp	x0, #0x100
   22c84:	b.ne	22c5c <printf_parse@@Base+0x377c>  // b.any
   22c88:	b	22718 <printf_parse@@Base+0x3238>
   22c8c:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   22c90:	mov	x0, x21
   22c94:	add	x1, x1, #0x1b0
   22c98:	bl	a9b0 <strcmp@plt>
   22c9c:	cbnz	w0, 22d18 <printf_parse@@Base+0x3838>
   22ca0:	bl	a9d0 <__ctype_b_loc@plt>
   22ca4:	mov	x1, #0x0                   	// #0
   22ca8:	mov	x4, #0x1                   	// #1
   22cac:	ldr	x3, [x0]
   22cb0:	cbnz	x20, 22ce0 <printf_parse@@Base+0x3800>
   22cb4:	ldrh	w0, [x3, x1, lsl #1]
   22cb8:	asr	x2, x1, #6
   22cbc:	lsl	x5, x4, x1
   22cc0:	add	x1, x1, #0x1
   22cc4:	tbz	w0, #12, 22cd4 <printf_parse@@Base+0x37f4>
   22cc8:	ldr	x0, [x19, x2, lsl #3]
   22ccc:	orr	x0, x0, x5
   22cd0:	str	x0, [x19, x2, lsl #3]
   22cd4:	cmp	x1, #0x100
   22cd8:	b.ne	22cb4 <printf_parse@@Base+0x37d4>  // b.any
   22cdc:	b	22718 <printf_parse@@Base+0x3238>
   22ce0:	mov	x5, x4
   22ce4:	mov	x0, #0x0                   	// #0
   22ce8:	ldrh	w1, [x3, x0, lsl #1]
   22cec:	tbz	w1, #12, 22d08 <printf_parse@@Base+0x3828>
   22cf0:	ldrb	w1, [x20, x0]
   22cf4:	ubfx	x4, x1, #6, #2
   22cf8:	lsl	x1, x5, x1
   22cfc:	ldr	x2, [x19, x4, lsl #3]
   22d00:	orr	x1, x2, x1
   22d04:	str	x1, [x19, x4, lsl #3]
   22d08:	add	x0, x0, #0x1
   22d0c:	cmp	x0, #0x100
   22d10:	b.ne	22ce8 <printf_parse@@Base+0x3808>  // b.any
   22d14:	b	22718 <printf_parse@@Base+0x3238>
   22d18:	mov	w0, #0x4                   	// #4
   22d1c:	b	2271c <printf_parse@@Base+0x323c>
   22d20:	mov	x0, #0x0                   	// #0
   22d24:	ldrh	w1, [x4, x0, lsl #1]
   22d28:	tbz	w1, #14, 22d44 <printf_parse@@Base+0x3864>
   22d2c:	ldrb	w1, [x20, x0]
   22d30:	ubfx	x3, x1, #6, #2
   22d34:	lsl	x1, x5, x1
   22d38:	ldr	x2, [x19, x3, lsl #3]
   22d3c:	orr	x1, x2, x1
   22d40:	str	x1, [x19, x3, lsl #3]
   22d44:	add	x0, x0, #0x1
   22d48:	cmp	x0, #0x100
   22d4c:	b.ne	22d24 <printf_parse@@Base+0x3844>  // b.any
   22d50:	b	22718 <printf_parse@@Base+0x3238>
   22d54:	mov	x5, x4
   22d58:	mov	x0, #0x0                   	// #0
   22d5c:	ldrh	w1, [x2, x0, lsl #1]
   22d60:	tbz	w1, #0, 22d7c <printf_parse@@Base+0x389c>
   22d64:	ldrb	w1, [x20, x0]
   22d68:	ubfx	x4, x1, #6, #2
   22d6c:	lsl	x1, x5, x1
   22d70:	ldr	x3, [x19, x4, lsl #3]
   22d74:	orr	x1, x3, x1
   22d78:	str	x1, [x19, x4, lsl #3]
   22d7c:	add	x0, x0, #0x1
   22d80:	cmp	x0, #0x100
   22d84:	b.ne	22d5c <printf_parse@@Base+0x387c>  // b.any
   22d88:	b	22718 <printf_parse@@Base+0x3238>
   22d8c:	mov	x0, #0x0                   	// #0
   22d90:	ldrh	w1, [x4, x0, lsl #1]
   22d94:	tbz	w1, #8, 22db0 <printf_parse@@Base+0x38d0>
   22d98:	ldrb	w1, [x20, x0]
   22d9c:	ubfx	x3, x1, #6, #2
   22da0:	lsl	x1, x5, x1
   22da4:	ldr	x2, [x19, x3, lsl #3]
   22da8:	orr	x1, x2, x1
   22dac:	str	x1, [x19, x3, lsl #3]
   22db0:	add	x0, x0, #0x1
   22db4:	cmp	x0, #0x100
   22db8:	b.ne	22d90 <printf_parse@@Base+0x38b0>  // b.any
   22dbc:	b	22718 <printf_parse@@Base+0x3238>
   22dc0:	stp	x29, x30, [sp, #-432]!
   22dc4:	mov	x29, sp
   22dc8:	stp	x23, x24, [sp, #48]
   22dcc:	ldr	x23, [x0]
   22dd0:	stp	x19, x20, [sp, #16]
   22dd4:	mov	x19, x3
   22dd8:	stp	x21, x22, [sp, #32]
   22ddc:	str	wzr, [sp, #124]
   22de0:	stp	x0, x2, [sp, #128]
   22de4:	ldr	w0, [x23, #180]
   22de8:	str	x1, [sp, #152]
   22dec:	cmp	w0, #0x1
   22df0:	b.ne	22e04 <printf_parse@@Base+0x3924>  // b.any
   22df4:	ldr	x0, [sp, #128]
   22df8:	ldr	x0, [x0, #24]
   22dfc:	ubfx	w0, w0, #22, #1
   22e00:	str	w0, [sp, #124]
   22e04:	ldr	x0, [sp, #152]
   22e08:	neg	x21, x19, lsl #2
   22e0c:	mov	x22, #0x0                   	// #0
   22e10:	ldr	x5, [x0]
   22e14:	cmp	x5, #0x0
   22e18:	b.le	22f04 <printf_parse@@Base+0x3a24>
   22e1c:	add	x0, sp, #0xa8
   22e20:	add	x24, sp, #0xb0
   22e24:	stp	x25, x26, [sp, #64]
   22e28:	stp	x27, x28, [sp, #80]
   22e2c:	mov	w28, #0x1                   	// #1
   22e30:	str	x0, [sp, #96]
   22e34:	b	22e68 <printf_parse@@Base+0x3988>
   22e38:	cmp	w20, #0x3
   22e3c:	b.eq	23078 <printf_parse@@Base+0x3b98>  // b.none
   22e40:	cmp	w20, #0x6
   22e44:	b.eq	22f18 <printf_parse@@Base+0x3a38>  // b.none
   22e48:	and	w0, w20, #0xfffffffd
   22e4c:	cmp	w0, #0x5
   22e50:	b.eq	231f8 <printf_parse@@Base+0x3d18>  // b.none
   22e54:	cmp	w20, #0x2
   22e58:	b.eq	2321c <printf_parse@@Base+0x3d3c>  // b.none
   22e5c:	add	x22, x22, #0x1
   22e60:	cmp	x22, x5
   22e64:	b.ge	22efc <printf_parse@@Base+0x3a1c>  // b.tcont
   22e68:	ldr	x0, [sp, #136]
   22e6c:	ldr	x1, [x0]
   22e70:	ldr	x0, [x23]
   22e74:	ldr	x1, [x1, x22, lsl #3]
   22e78:	lsl	x2, x1, #4
   22e7c:	str	x2, [sp, #104]
   22e80:	add	x2, x0, x2
   22e84:	ldrb	w20, [x2, #8]
   22e88:	cmp	w20, #0x1
   22e8c:	b.ne	22e38 <printf_parse@@Base+0x3958>  // b.any
   22e90:	ldr	x2, [sp, #104]
   22e94:	ldrb	w2, [x0, x2]
   22e98:	str	w2, [sp, #112]
   22e9c:	and	x0, x2, #0xff
   22ea0:	strb	w20, [x19, x0]
   22ea4:	ldr	w0, [sp, #124]
   22ea8:	cbz	w0, 22ecc <printf_parse@@Base+0x39ec>
   22eac:	str	x1, [sp, #144]
   22eb0:	bl	a530 <__ctype_tolower_loc@plt>
   22eb4:	ldr	w2, [sp, #112]
   22eb8:	ldr	x0, [x0]
   22ebc:	mov	w2, w2
   22ec0:	ldr	x1, [sp, #144]
   22ec4:	ldrsw	x0, [x0, x2, lsl #2]
   22ec8:	strb	w20, [x19, x0]
   22ecc:	ldr	x0, [sp, #128]
   22ed0:	ldr	x0, [x0, #24]
   22ed4:	tbz	w0, #22, 22ee8 <printf_parse@@Base+0x3a08>
   22ed8:	ldr	w0, [x23, #180]
   22edc:	cmp	w0, #0x1
   22ee0:	b.gt	2313c <printf_parse@@Base+0x3c5c>
   22ee4:	nop
   22ee8:	ldr	x0, [sp, #152]
   22eec:	add	x22, x22, #0x1
   22ef0:	ldr	x5, [x0]
   22ef4:	cmp	x22, x5
   22ef8:	b.lt	22e68 <printf_parse@@Base+0x3988>  // b.tstop
   22efc:	ldp	x25, x26, [sp, #64]
   22f00:	ldp	x27, x28, [sp, #80]
   22f04:	ldp	x19, x20, [sp, #16]
   22f08:	ldp	x21, x22, [sp, #32]
   22f0c:	ldp	x23, x24, [sp, #48]
   22f10:	ldp	x29, x30, [sp], #432
   22f14:	ret
   22f18:	ldr	w0, [x23, #180]
   22f1c:	ldr	x20, [x2]
   22f20:	cmp	w0, #0x1
   22f24:	b.le	22f40 <printf_parse@@Base+0x3a60>
   22f28:	ldr	x0, [x20, #72]
   22f2c:	cbnz	x0, 23004 <printf_parse@@Base+0x3b24>
   22f30:	ldrb	w0, [x20, #32]
   22f34:	tbnz	w0, #0, 23004 <printf_parse@@Base+0x3b24>
   22f38:	ldr	x0, [x20, #64]
   22f3c:	cbnz	x0, 23004 <printf_parse@@Base+0x3b24>
   22f40:	ldr	x0, [x20, #40]
   22f44:	mov	x25, #0x0                   	// #0
   22f48:	cmp	x0, #0x0
   22f4c:	b.gt	22f60 <printf_parse@@Base+0x3a80>
   22f50:	b	22e5c <printf_parse@@Base+0x397c>
   22f54:	ldr	x0, [x20, #40]
   22f58:	cmp	x25, x0
   22f5c:	b.ge	22ee8 <printf_parse@@Base+0x3a08>  // b.tcont
   22f60:	ldr	x0, [sp, #96]
   22f64:	lsl	x26, x25, #2
   22f68:	mov	x2, x0
   22f6c:	str	xzr, [x0]
   22f70:	mov	x0, x24
   22f74:	ldr	x1, [x20]
   22f78:	ldr	w1, [x1, x25, lsl #2]
   22f7c:	add	x25, x25, #0x1
   22f80:	bl	aff0 <wcrtomb@plt>
   22f84:	cmn	x0, #0x1
   22f88:	b.eq	22fbc <printf_parse@@Base+0x3adc>  // b.none
   22f8c:	ldrb	w1, [sp, #176]
   22f90:	str	w1, [sp, #104]
   22f94:	and	x0, x1, #0xff
   22f98:	strb	w28, [x19, x0]
   22f9c:	ldr	w0, [sp, #124]
   22fa0:	cbz	w0, 22fbc <printf_parse@@Base+0x3adc>
   22fa4:	bl	a530 <__ctype_tolower_loc@plt>
   22fa8:	ldr	w1, [sp, #104]
   22fac:	ldr	x0, [x0]
   22fb0:	mov	w1, w1
   22fb4:	ldrsw	x0, [x0, x1, lsl #2]
   22fb8:	strb	w28, [x19, x0]
   22fbc:	ldr	x0, [sp, #128]
   22fc0:	ldr	x0, [x0, #24]
   22fc4:	tbz	w0, #22, 22f54 <printf_parse@@Base+0x3a74>
   22fc8:	ldr	w0, [x23, #180]
   22fcc:	cmp	w0, #0x1
   22fd0:	b.le	22f54 <printf_parse@@Base+0x3a74>
   22fd4:	ldr	x0, [x20]
   22fd8:	ldr	w0, [x0, x26]
   22fdc:	bl	af70 <towlower@plt>
   22fe0:	mov	w1, w0
   22fe4:	ldr	x2, [sp, #96]
   22fe8:	mov	x0, x24
   22fec:	bl	aff0 <wcrtomb@plt>
   22ff0:	cmn	x0, #0x1
   22ff4:	b.eq	22f54 <printf_parse@@Base+0x3a74>  // b.none
   22ff8:	ldrb	w0, [sp, #176]
   22ffc:	strb	w28, [x19, x0]
   23000:	b	22f54 <printf_parse@@Base+0x3a74>
   23004:	strb	wzr, [sp, #168]
   23008:	ldr	x1, [sp, #96]
   2300c:	mov	x3, x24
   23010:	mov	x2, #0x1                   	// #1
   23014:	mov	x0, #0x0                   	// #0
   23018:	str	xzr, [x24]
   2301c:	bl	a3e0 <rpl_mbrtowc@plt>
   23020:	cmn	x0, #0x2
   23024:	b.eq	2305c <printf_parse@@Base+0x3b7c>  // b.none
   23028:	ldrb	w0, [sp, #168]
   2302c:	add	w0, w0, #0x1
   23030:	and	w0, w0, #0xff
   23034:	strb	w0, [sp, #168]
   23038:	cbz	w0, 22ee8 <printf_parse@@Base+0x3a08>
   2303c:	ldr	x1, [sp, #96]
   23040:	mov	x3, x24
   23044:	mov	x2, #0x1                   	// #1
   23048:	mov	x0, #0x0                   	// #0
   2304c:	str	xzr, [x24]
   23050:	bl	a3e0 <rpl_mbrtowc@plt>
   23054:	cmn	x0, #0x2
   23058:	b.ne	23028 <printf_parse@@Base+0x3b48>  // b.any
   2305c:	ldrb	w1, [sp, #168]
   23060:	add	w0, w1, #0x1
   23064:	and	w0, w0, #0xff
   23068:	strb	w0, [sp, #168]
   2306c:	strb	w28, [x19, x1]
   23070:	cbnz	w0, 23008 <printf_parse@@Base+0x3b28>
   23074:	b	22ee8 <printf_parse@@Base+0x3a08>
   23078:	str	xzr, [sp, #112]
   2307c:	mov	x20, x19
   23080:	ldr	x0, [x2]
   23084:	str	xzr, [sp, #144]
   23088:	ldr	x1, [sp, #112]
   2308c:	ldr	x26, [x0, x1]
   23090:	ldr	w0, [sp, #124]
   23094:	cbnz	w0, 230fc <printf_parse@@Base+0x3c1c>
   23098:	mov	x0, #0x0                   	// #0
   2309c:	nop
   230a0:	lsr	x1, x26, x0
   230a4:	tbz	w1, #0, 230ac <printf_parse@@Base+0x3bcc>
   230a8:	strb	w28, [x20, x0]
   230ac:	add	x0, x0, #0x1
   230b0:	cmp	x0, #0x40
   230b4:	b.ne	230a0 <printf_parse@@Base+0x3bc0>  // b.any
   230b8:	ldr	x1, [sp, #112]
   230bc:	add	x20, x20, #0x40
   230c0:	ldr	x0, [sp, #144]
   230c4:	add	x1, x1, #0x8
   230c8:	str	x1, [sp, #112]
   230cc:	add	x0, x0, #0x40
   230d0:	str	x0, [sp, #144]
   230d4:	cmp	x0, #0x100
   230d8:	b.eq	22ee8 <printf_parse@@Base+0x3a08>  // b.none
   230dc:	ldr	x0, [x23]
   230e0:	ldr	x1, [sp, #104]
   230e4:	add	x2, x0, x1
   230e8:	ldr	x1, [sp, #112]
   230ec:	ldr	x0, [x2]
   230f0:	ldr	x26, [x0, x1]
   230f4:	ldr	w0, [sp, #124]
   230f8:	cbz	w0, 23098 <printf_parse@@Base+0x3bb8>
   230fc:	mov	x25, x20
   23100:	mov	w27, #0x0                   	// #0
   23104:	nop
   23108:	lsr	x0, x26, x27
   2310c:	add	w27, w27, #0x1
   23110:	tbz	w0, #0, 2312c <printf_parse@@Base+0x3c4c>
   23114:	strb	w28, [x25]
   23118:	bl	a530 <__ctype_tolower_loc@plt>
   2311c:	ldr	x0, [x0]
   23120:	add	x0, x0, x25, lsl #2
   23124:	ldrsw	x0, [x0, x21]
   23128:	strb	w28, [x19, x0]
   2312c:	add	x25, x25, #0x1
   23130:	cmp	w27, #0x40
   23134:	b.ne	23108 <printf_parse@@Base+0x3c28>  // b.any
   23138:	b	230b8 <printf_parse@@Base+0x3bd8>
   2313c:	add	x0, x1, #0x1
   23140:	add	x5, x24, #0x1
   23144:	ldr	x2, [x23]
   23148:	ldr	x1, [sp, #104]
   2314c:	ldrb	w1, [x2, x1]
   23150:	strb	w1, [sp, #176]
   23154:	ldr	x1, [x23, #16]
   23158:	cmp	x1, x0
   2315c:	b.ls	23258 <printf_parse@@Base+0x3d78>  // b.plast
   23160:	mov	w7, #0xff                  	// #255
   23164:	mov	w6, #0x1                   	// #1
   23168:	movk	w7, #0x20, lsl #16
   2316c:	movk	w6, #0x20, lsl #16
   23170:	b	2318c <printf_parse@@Base+0x3cac>
   23174:	ldrb	w1, [x2, x3]
   23178:	strb	w1, [x5], #1
   2317c:	ldr	x1, [x23, #16]
   23180:	cmp	x1, x0
   23184:	b.ls	231a8 <printf_parse@@Base+0x3cc8>  // b.plast
   23188:	ldr	x2, [x23]
   2318c:	lsl	x3, x0, #4
   23190:	add	x1, x2, x3
   23194:	add	x0, x0, #0x1
   23198:	ldr	w1, [x1, #8]
   2319c:	and	w1, w1, w7
   231a0:	cmp	w1, w6
   231a4:	b.eq	23174 <printf_parse@@Base+0x3c94>  // b.none
   231a8:	sub	x20, x5, x24
   231ac:	ldr	x3, [sp, #96]
   231b0:	mov	x2, x20
   231b4:	mov	x1, x24
   231b8:	add	x0, sp, #0xa4
   231bc:	str	xzr, [x3]
   231c0:	bl	a3e0 <rpl_mbrtowc@plt>
   231c4:	cmp	x0, x20
   231c8:	b.ne	22ee8 <printf_parse@@Base+0x3a08>  // b.any
   231cc:	ldr	w0, [sp, #164]
   231d0:	bl	af70 <towlower@plt>
   231d4:	mov	w1, w0
   231d8:	ldr	x2, [sp, #96]
   231dc:	mov	x0, x24
   231e0:	bl	aff0 <wcrtomb@plt>
   231e4:	cmn	x0, #0x1
   231e8:	b.eq	22ee8 <printf_parse@@Base+0x3a08>  // b.none
   231ec:	ldrb	w0, [sp, #176]
   231f0:	strb	w28, [x19, x0]
   231f4:	b	22ee8 <printf_parse@@Base+0x3a08>
   231f8:	mov	x0, x19
   231fc:	mov	x2, #0x100                 	// #256
   23200:	mov	w1, #0x1                   	// #1
   23204:	bl	a6f0 <memset@plt>
   23208:	cmp	w20, #0x2
   2320c:	b.eq	2322c <printf_parse@@Base+0x3d4c>  // b.none
   23210:	ldp	x25, x26, [sp, #64]
   23214:	ldp	x27, x28, [sp, #80]
   23218:	b	22f04 <printf_parse@@Base+0x3a24>
   2321c:	mov	x0, x19
   23220:	mov	x2, #0x100                 	// #256
   23224:	mov	w1, #0x1                   	// #1
   23228:	bl	a6f0 <memset@plt>
   2322c:	ldr	x1, [sp, #128]
   23230:	ldp	x25, x26, [sp, #64]
   23234:	ldrb	w0, [x1, #56]
   23238:	ldp	x27, x28, [sp, #80]
   2323c:	orr	w0, w0, #0x1
   23240:	strb	w0, [x1, #56]
   23244:	ldp	x19, x20, [sp, #16]
   23248:	ldp	x21, x22, [sp, #32]
   2324c:	ldp	x23, x24, [sp, #48]
   23250:	ldp	x29, x30, [sp], #432
   23254:	ret
   23258:	mov	x20, #0x1                   	// #1
   2325c:	b	231ac <printf_parse@@Base+0x3ccc>
   23260:	stp	x29, x30, [sp, #-96]!
   23264:	mov	x29, sp
   23268:	stp	x19, x20, [sp, #16]
   2326c:	mov	x19, x1
   23270:	stp	x21, x22, [sp, #32]
   23274:	ldr	x21, [x1, #72]
   23278:	stp	x23, x24, [sp, #48]
   2327c:	mov	x23, x0
   23280:	ldr	x1, [x1, #104]
   23284:	cmp	x1, x21
   23288:	b.le	234b0 <printf_parse@@Base+0x3fd0>
   2328c:	ldr	x24, [x19, #8]
   23290:	mov	x22, x2
   23294:	ldrb	w1, [x0, #10]
   23298:	ldr	w0, [x19, #144]
   2329c:	ldrb	w20, [x24, x21]
   232a0:	and	w1, w1, #0xffffff9f
   232a4:	strb	w20, [x23]
   232a8:	cmp	w0, #0x1
   232ac:	strb	w1, [x23, #10]
   232b0:	b.le	23364 <printf_parse@@Base+0x3e84>
   232b4:	ldr	x1, [x19, #48]
   232b8:	cmp	x21, x1
   232bc:	b.eq	232d0 <printf_parse@@Base+0x3df0>  // b.none
   232c0:	ldr	x1, [x19, #16]
   232c4:	ldr	w1, [x1, x21, lsl #2]
   232c8:	cmn	w1, #0x1
   232cc:	b.eq	23540 <printf_parse@@Base+0x4060>  // b.none
   232d0:	cmp	w20, #0x5c
   232d4:	b.eq	233ac <printf_parse@@Base+0x3ecc>  // b.none
   232d8:	ldr	x0, [x19, #16]
   232dc:	str	x25, [sp, #64]
   232e0:	mov	w1, #0x1                   	// #1
   232e4:	strb	w1, [x23, #8]
   232e8:	ldr	w25, [x0, x21, lsl #2]
   232ec:	mov	w0, w25
   232f0:	bl	ad30 <iswalnum@plt>
   232f4:	cmp	w25, #0x5f
   232f8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   232fc:	ldrb	w0, [x23, #10]
   23300:	cset	w1, ne  // ne = any
   23304:	bfi	w0, w1, #6, #1
   23308:	strb	w0, [x23, #10]
   2330c:	ldr	x25, [sp, #64]
   23310:	cmp	w20, #0x2e
   23314:	b.eq	23888 <printf_parse@@Base+0x43a8>  // b.none
   23318:	b.hi	233dc <printf_parse@@Base+0x3efc>  // b.pmore
   2331c:	cmp	w20, #0x29
   23320:	b.eq	2386c <printf_parse@@Base+0x438c>  // b.none
   23324:	b.ls	23414 <printf_parse@@Base+0x3f34>  // b.plast
   23328:	cmp	w20, #0x2a
   2332c:	b.eq	23878 <printf_parse@@Base+0x4398>  // b.none
   23330:	cmp	w20, #0x2b
   23334:	b.ne	23864 <printf_parse@@Base+0x4384>  // b.any
   23338:	mov	x1, #0x402                 	// #1026
   2333c:	mov	w0, #0x1                   	// #1
   23340:	tst	x22, x1
   23344:	b.ne	23350 <printf_parse@@Base+0x3e70>  // b.any
   23348:	mov	w1, #0x12                  	// #18
   2334c:	strb	w1, [x23, #8]
   23350:	ldp	x19, x20, [sp, #16]
   23354:	ldp	x21, x22, [sp, #32]
   23358:	ldp	x23, x24, [sp, #48]
   2335c:	ldp	x29, x30, [sp], #96
   23360:	ret
   23364:	cmp	w20, #0x5c
   23368:	b.eq	233ac <printf_parse@@Base+0x3ecc>  // b.none
   2336c:	bl	a9d0 <__ctype_b_loc@plt>
   23370:	ldr	x0, [x0]
   23374:	ubfiz	x2, x20, #1, #8
   23378:	cmp	w20, #0x5f
   2337c:	ldr	w1, [x23, #8]
   23380:	ldrh	w0, [x0, x2]
   23384:	and	w1, w1, #0xffffff00
   23388:	and	w1, w1, #0xffbfffff
   2338c:	and	w0, w0, #0x8
   23390:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   23394:	cset	w0, ne  // ne = any
   23398:	lsl	w0, w0, #22
   2339c:	orr	w0, w0, #0x1
   233a0:	orr	w0, w0, w1
   233a4:	str	w0, [x23, #8]
   233a8:	b	23310 <printf_parse@@Base+0x3e30>
   233ac:	ldr	x2, [x19, #88]
   233b0:	add	x1, x21, #0x1
   233b4:	cmp	x1, x2
   233b8:	b.lt	234d0 <printf_parse@@Base+0x3ff0>  // b.tstop
   233bc:	mov	w1, #0x24                  	// #36
   233c0:	strb	w1, [x23, #8]
   233c4:	mov	w0, #0x1                   	// #1
   233c8:	ldp	x19, x20, [sp, #16]
   233cc:	ldp	x21, x22, [sp, #32]
   233d0:	ldp	x23, x24, [sp, #48]
   233d4:	ldp	x29, x30, [sp], #96
   233d8:	ret
   233dc:	cmp	w20, #0x7b
   233e0:	b.eq	23840 <printf_parse@@Base+0x4360>  // b.none
   233e4:	b.ls	23438 <printf_parse@@Base+0x3f58>  // b.plast
   233e8:	cmp	w20, #0x7c
   233ec:	b.eq	23854 <printf_parse@@Base+0x4374>  // b.none
   233f0:	cmp	w20, #0x7d
   233f4:	b.ne	23864 <printf_parse@@Base+0x4384>  // b.any
   233f8:	mov	x1, #0x1200                	// #4608
   233fc:	mov	w0, #0x1                   	// #1
   23400:	bics	xzr, x1, x22
   23404:	b.ne	23350 <printf_parse@@Base+0x3e70>  // b.any
   23408:	mov	w1, #0x18                  	// #24
   2340c:	strb	w1, [x23, #8]
   23410:	b	23350 <printf_parse@@Base+0x3e70>
   23414:	cmp	w20, #0x24
   23418:	b.eq	237dc <printf_parse@@Base+0x42fc>  // b.none
   2341c:	cmp	w20, #0x28
   23420:	mov	w0, #0x1                   	// #1
   23424:	b.ne	23470 <printf_parse@@Base+0x3f90>  // b.any
   23428:	tbz	w22, #13, 23350 <printf_parse@@Base+0x3e70>
   2342c:	mov	w1, #0x8                   	// #8
   23430:	strb	w1, [x23, #8]
   23434:	b	23350 <printf_parse@@Base+0x3e70>
   23438:	cmp	w20, #0x5b
   2343c:	b.eq	23898 <printf_parse@@Base+0x43b8>  // b.none
   23440:	cmp	w20, #0x5e
   23444:	b.ne	2348c <printf_parse@@Base+0x3fac>  // b.any
   23448:	and	x0, x22, #0xfffff8
   2344c:	ands	x0, x0, #0xffffffffff80000f
   23450:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   23454:	b.ne	235fc <printf_parse@@Base+0x411c>  // b.any
   23458:	mov	w1, #0xc                   	// #12
   2345c:	mov	w2, #0x10                  	// #16
   23460:	mov	w0, #0x1                   	// #1
   23464:	str	w2, [x23]
   23468:	strb	w1, [x23, #8]
   2346c:	b	23350 <printf_parse@@Base+0x3e70>
   23470:	cmp	w20, #0xa
   23474:	b.ne	23350 <printf_parse@@Base+0x3e70>  // b.any
   23478:	tbz	w22, #11, 23350 <printf_parse@@Base+0x3e70>
   2347c:	mov	w1, #0xa                   	// #10
   23480:	mov	w0, #0x1                   	// #1
   23484:	strb	w1, [x23, #8]
   23488:	b	23350 <printf_parse@@Base+0x3e70>
   2348c:	cmp	w20, #0x3f
   23490:	b.ne	23864 <printf_parse@@Base+0x4384>  // b.any
   23494:	mov	x1, #0x402                 	// #1026
   23498:	mov	w0, #0x1                   	// #1
   2349c:	tst	x22, x1
   234a0:	b.ne	23350 <printf_parse@@Base+0x3e70>  // b.any
   234a4:	mov	w1, #0x13                  	// #19
   234a8:	strb	w1, [x23, #8]
   234ac:	b	23350 <printf_parse@@Base+0x3e70>
   234b0:	mov	w1, #0x2                   	// #2
   234b4:	strb	w1, [x23, #8]
   234b8:	mov	w0, #0x0                   	// #0
   234bc:	ldp	x19, x20, [sp, #16]
   234c0:	ldp	x21, x22, [sp, #32]
   234c4:	ldp	x23, x24, [sp, #48]
   234c8:	ldp	x29, x30, [sp], #96
   234cc:	ret
   234d0:	ldrb	w2, [x19, #139]
   234d4:	cbnz	w2, 2359c <printf_parse@@Base+0x40bc>
   234d8:	ldrb	w20, [x24, x1]
   234dc:	mov	w2, #0x1                   	// #1
   234e0:	strb	w20, [x23]
   234e4:	strb	w2, [x23, #8]
   234e8:	cmp	w0, #0x1
   234ec:	b.le	23564 <printf_parse@@Base+0x4084>
   234f0:	ldr	x2, [x19, #16]
   234f4:	add	x2, x2, x1, lsl #2
   234f8:	ldr	w19, [x2]
   234fc:	mov	w0, w19
   23500:	bl	ad30 <iswalnum@plt>
   23504:	cmp	w19, #0x5f
   23508:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   2350c:	ldrb	w0, [x23, #10]
   23510:	cset	w1, ne  // ne = any
   23514:	bfi	w0, w1, #6, #1
   23518:	strb	w0, [x23, #10]
   2351c:	sub	w0, w20, #0x27
   23520:	cmp	w0, #0x56
   23524:	b.hi	23594 <printf_parse@@Base+0x40b4>  // b.pmore
   23528:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2352c:	add	x1, x1, #0x2b0
   23530:	ldrh	w0, [x1, w0, uxtw #1]
   23534:	adr	x1, 23540 <printf_parse@@Base+0x4060>
   23538:	add	x0, x1, w0, sxth #2
   2353c:	br	x0
   23540:	ldr	w1, [x23, #8]
   23544:	mov	w2, #0x1                   	// #1
   23548:	movk	w2, #0x20, lsl #16
   2354c:	mov	w0, #0x1                   	// #1
   23550:	and	w1, w1, #0xffffff00
   23554:	and	w1, w1, #0xffdfffff
   23558:	orr	w1, w1, w2
   2355c:	str	w1, [x23, #8]
   23560:	b	23350 <printf_parse@@Base+0x3e70>
   23564:	bl	a9d0 <__ctype_b_loc@plt>
   23568:	ldr	x0, [x0]
   2356c:	ubfiz	x1, x20, #1, #8
   23570:	cmp	w20, #0x5f
   23574:	ldrb	w2, [x23, #10]
   23578:	ldrh	w0, [x0, x1]
   2357c:	and	w0, w0, #0x8
   23580:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   23584:	cset	w0, ne  // ne = any
   23588:	bfi	w2, w0, #6, #1
   2358c:	strb	w2, [x23, #10]
   23590:	b	2351c <printf_parse@@Base+0x403c>
   23594:	mov	w0, #0x2                   	// #2
   23598:	b	23350 <printf_parse@@Base+0x3e70>
   2359c:	cmp	w0, #0x1
   235a0:	b.le	235d4 <printf_parse@@Base+0x40f4>
   235a4:	ldr	x2, [x19, #16]
   235a8:	ldr	w3, [x2, x1, lsl #2]
   235ac:	add	x2, x2, x1, lsl #2
   235b0:	cmn	w3, #0x1
   235b4:	b.eq	238b4 <printf_parse@@Base+0x43d4>  // b.none
   235b8:	ldr	x3, [x19, #48]
   235bc:	add	x21, x21, #0x2
   235c0:	cmp	x3, x21
   235c4:	b.eq	235d4 <printf_parse@@Base+0x40f4>  // b.none
   235c8:	ldr	w3, [x2, #4]
   235cc:	cmn	w3, #0x1
   235d0:	b.eq	238b4 <printf_parse@@Base+0x43d4>  // b.none
   235d4:	ldrb	w3, [x19, #140]
   235d8:	ldr	x2, [x19]
   235dc:	ldr	x4, [x19, #40]
   235e0:	cbz	w3, 238a8 <printf_parse@@Base+0x43c8>
   235e4:	ldr	x3, [x19, #24]
   235e8:	add	x2, x2, x4
   235ec:	ldr	x3, [x3, x1, lsl #3]
   235f0:	ldrb	w20, [x2, x3]
   235f4:	tbz	w20, #7, 234dc <printf_parse@@Base+0x3ffc>
   235f8:	b	234d8 <printf_parse@@Base+0x3ff8>
   235fc:	add	x21, x24, x21
   23600:	tst	x22, #0x800
   23604:	mov	w0, #0x1                   	// #1
   23608:	ldurb	w1, [x21, #-1]
   2360c:	ccmp	w1, #0xa, #0x0, ne  // ne = any
   23610:	b.ne	23350 <printf_parse@@Base+0x3e70>  // b.any
   23614:	b	23458 <printf_parse@@Base+0x3f78>
   23618:	mov	w0, #0x2                   	// #2
   2361c:	tbnz	w22, #14, 23350 <printf_parse@@Base+0x3e70>
   23620:	sub	w1, w20, #0x31
   23624:	mov	w2, #0x4                   	// #4
   23628:	strb	w2, [x23, #8]
   2362c:	sxtw	x1, w1
   23630:	str	x1, [x23]
   23634:	b	23350 <printf_parse@@Base+0x3e70>
   23638:	mov	x0, #0x402                 	// #1026
   2363c:	and	x0, x22, x0
   23640:	cmp	x0, #0x2
   23644:	mov	w0, #0x2                   	// #2
   23648:	b.ne	23350 <printf_parse@@Base+0x3e70>  // b.any
   2364c:	b	23348 <printf_parse@@Base+0x3e68>
   23650:	mov	w0, #0x2                   	// #2
   23654:	tbnz	w22, #19, 23350 <printf_parse@@Base+0x3e70>
   23658:	mov	w1, #0xc                   	// #12
   2365c:	mov	w2, #0x9                   	// #9
   23660:	str	w2, [x23]
   23664:	strb	w1, [x23, #8]
   23668:	b	23350 <printf_parse@@Base+0x3e70>
   2366c:	mov	w0, #0x2                   	// #2
   23670:	tbnz	w22, #19, 23350 <printf_parse@@Base+0x3e70>
   23674:	mov	w1, #0xc                   	// #12
   23678:	mov	w2, #0x6                   	// #6
   2367c:	str	w2, [x23]
   23680:	strb	w1, [x23, #8]
   23684:	b	23350 <printf_parse@@Base+0x3e70>
   23688:	mov	w0, #0x2                   	// #2
   2368c:	tbnz	w22, #19, 23350 <printf_parse@@Base+0x3e70>
   23690:	mov	w1, #0x20                  	// #32
   23694:	strb	w1, [x23, #8]
   23698:	b	23350 <printf_parse@@Base+0x3e70>
   2369c:	mov	w0, #0x2                   	// #2
   236a0:	tbnz	w22, #19, 23350 <printf_parse@@Base+0x3e70>
   236a4:	mov	w1, #0x22                  	// #34
   236a8:	strb	w1, [x23, #8]
   236ac:	b	23350 <printf_parse@@Base+0x3e70>
   236b0:	mov	w0, #0x2                   	// #2
   236b4:	tbnz	w22, #19, 23350 <printf_parse@@Base+0x3e70>
   236b8:	mov	w1, #0xc                   	// #12
   236bc:	mov	w2, #0x100                 	// #256
   236c0:	str	w2, [x23]
   236c4:	strb	w1, [x23, #8]
   236c8:	b	23350 <printf_parse@@Base+0x3e70>
   236cc:	mov	w0, #0x2                   	// #2
   236d0:	tbnz	w22, #19, 23350 <printf_parse@@Base+0x3e70>
   236d4:	mov	w1, #0xc                   	// #12
   236d8:	mov	w2, #0x40                  	// #64
   236dc:	str	w2, [x23]
   236e0:	strb	w1, [x23, #8]
   236e4:	b	23350 <printf_parse@@Base+0x3e70>
   236e8:	mov	w0, #0x2                   	// #2
   236ec:	tbnz	w22, #19, 23350 <printf_parse@@Base+0x3e70>
   236f0:	mov	w1, #0x21                  	// #33
   236f4:	strb	w1, [x23, #8]
   236f8:	b	23350 <printf_parse@@Base+0x3e70>
   236fc:	mov	w0, #0x2                   	// #2
   23700:	tbnz	w22, #19, 23350 <printf_parse@@Base+0x3e70>
   23704:	mov	w1, #0x23                  	// #35
   23708:	strb	w1, [x23, #8]
   2370c:	b	23350 <printf_parse@@Base+0x3e70>
   23710:	mov	w0, #0x2                   	// #2
   23714:	tbnz	w22, #19, 23350 <printf_parse@@Base+0x3e70>
   23718:	mov	w1, #0xc                   	// #12
   2371c:	mov	w2, #0x200                 	// #512
   23720:	str	w2, [x23]
   23724:	strb	w1, [x23, #8]
   23728:	b	23350 <printf_parse@@Base+0x3e70>
   2372c:	mov	x0, #0x402                 	// #1026
   23730:	and	x0, x22, x0
   23734:	cmp	x0, #0x2
   23738:	mov	w0, #0x2                   	// #2
   2373c:	b.ne	23350 <printf_parse@@Base+0x3e70>  // b.any
   23740:	b	234a4 <printf_parse@@Base+0x3fc4>
   23744:	mov	x1, #0x8400                	// #33792
   23748:	mov	w0, #0x2                   	// #2
   2374c:	tst	x22, x1
   23750:	b.ne	23350 <printf_parse@@Base+0x3e70>  // b.any
   23754:	mov	w1, #0xa                   	// #10
   23758:	strb	w1, [x23, #8]
   2375c:	b	23350 <printf_parse@@Base+0x3e70>
   23760:	mov	x0, #0x1200                	// #4608
   23764:	and	x0, x22, x0
   23768:	cmp	x0, #0x200
   2376c:	mov	w0, #0x2                   	// #2
   23770:	b.ne	23350 <printf_parse@@Base+0x3e70>  // b.any
   23774:	nop
   23778:	mov	w1, #0x17                  	// #23
   2377c:	strb	w1, [x23, #8]
   23780:	b	23350 <printf_parse@@Base+0x3e70>
   23784:	mov	x0, #0x1200                	// #4608
   23788:	and	x0, x22, x0
   2378c:	cmp	x0, #0x200
   23790:	mov	w0, #0x2                   	// #2
   23794:	b.ne	23350 <printf_parse@@Base+0x3e70>  // b.any
   23798:	b	23408 <printf_parse@@Base+0x3f28>
   2379c:	mov	w0, #0x2                   	// #2
   237a0:	tbnz	w22, #13, 23350 <printf_parse@@Base+0x3e70>
   237a4:	nop
   237a8:	mov	w1, #0x9                   	// #9
   237ac:	strb	w1, [x23, #8]
   237b0:	b	23350 <printf_parse@@Base+0x3e70>
   237b4:	mov	w0, #0x2                   	// #2
   237b8:	tbnz	w22, #13, 23350 <printf_parse@@Base+0x3e70>
   237bc:	b	2342c <printf_parse@@Base+0x3f4c>
   237c0:	mov	w0, #0x2                   	// #2
   237c4:	tbnz	w22, #19, 23350 <printf_parse@@Base+0x3e70>
   237c8:	mov	w1, #0xc                   	// #12
   237cc:	mov	w2, #0x80                  	// #128
   237d0:	str	w2, [x23]
   237d4:	strb	w1, [x23, #8]
   237d8:	b	23350 <printf_parse@@Base+0x3e70>
   237dc:	tbnz	w22, #3, 23828 <printf_parse@@Base+0x4348>
   237e0:	ldr	x0, [x19, #88]
   237e4:	add	x21, x21, #0x1
   237e8:	cmp	x21, x0
   237ec:	b.eq	23828 <printf_parse@@Base+0x4348>  // b.none
   237f0:	str	x21, [x19, #72]
   237f4:	mov	x2, x22
   237f8:	mov	x1, x19
   237fc:	add	x0, sp, #0x50
   23800:	bl	23260 <printf_parse@@Base+0x3d80>
   23804:	ldr	x2, [x19, #72]
   23808:	mov	w0, #0x1                   	// #1
   2380c:	ldrb	w1, [sp, #88]
   23810:	sub	x2, x2, #0x1
   23814:	str	x2, [x19, #72]
   23818:	sub	w1, w1, #0x9
   2381c:	and	w1, w1, #0xff
   23820:	cmp	w1, w0
   23824:	b.hi	23350 <printf_parse@@Base+0x3e70>  // b.pmore
   23828:	mov	w1, #0xc                   	// #12
   2382c:	mov	w2, #0x20                  	// #32
   23830:	mov	w0, #0x1                   	// #1
   23834:	str	w2, [x23]
   23838:	strb	w1, [x23, #8]
   2383c:	b	23350 <printf_parse@@Base+0x3e70>
   23840:	mov	x1, #0x1200                	// #4608
   23844:	mov	w0, #0x1                   	// #1
   23848:	bics	xzr, x1, x22
   2384c:	b.ne	23350 <printf_parse@@Base+0x3e70>  // b.any
   23850:	b	23778 <printf_parse@@Base+0x4298>
   23854:	mov	x0, #0x8400                	// #33792
   23858:	and	x0, x22, x0
   2385c:	cmp	x0, #0x8, lsl #12
   23860:	b.eq	2347c <printf_parse@@Base+0x3f9c>  // b.none
   23864:	mov	w0, #0x1                   	// #1
   23868:	b	23350 <printf_parse@@Base+0x3e70>
   2386c:	mov	w0, #0x1                   	// #1
   23870:	tbz	w22, #13, 23350 <printf_parse@@Base+0x3e70>
   23874:	b	237a8 <printf_parse@@Base+0x42c8>
   23878:	mov	w1, #0xb                   	// #11
   2387c:	mov	w0, #0x1                   	// #1
   23880:	strb	w1, [x23, #8]
   23884:	b	23350 <printf_parse@@Base+0x3e70>
   23888:	mov	w1, #0x5                   	// #5
   2388c:	mov	w0, #0x1                   	// #1
   23890:	strb	w1, [x23, #8]
   23894:	b	23350 <printf_parse@@Base+0x3e70>
   23898:	mov	w1, #0x14                  	// #20
   2389c:	mov	w0, #0x1                   	// #1
   238a0:	strb	w1, [x23, #8]
   238a4:	b	23350 <printf_parse@@Base+0x3e70>
   238a8:	add	x2, x2, x1
   238ac:	ldrb	w20, [x2, x4]
   238b0:	b	234dc <printf_parse@@Base+0x3ffc>
   238b4:	ldrb	w20, [x24, x1]
   238b8:	mov	w0, #0x1                   	// #1
   238bc:	strb	w20, [x23]
   238c0:	strb	w0, [x23, #8]
   238c4:	b	234f8 <printf_parse@@Base+0x4018>
   238c8:	mov	x8, x2
   238cc:	ldr	w2, [x1, #144]
   238d0:	mov	x10, x0
   238d4:	and	w5, w5, #0xff
   238d8:	cmp	w2, #0x1
   238dc:	ldr	x7, [x1, #72]
   238e0:	b.eq	23920 <printf_parse@@Base+0x4440>  // b.none
   238e4:	ldr	x2, [x1, #48]
   238e8:	add	x6, x7, #0x1
   238ec:	cmp	x6, x2
   238f0:	b.ge	23920 <printf_parse@@Base+0x4440>  // b.tcont
   238f4:	ldr	x9, [x1, #16]
   238f8:	b	23908 <printf_parse@@Base+0x4428>
   238fc:	add	x6, x6, #0x1
   23900:	cmp	x6, x2
   23904:	b.eq	23a0c <printf_parse@@Base+0x452c>  // b.none
   23908:	ldr	w0, [x9, x6, lsl #2]
   2390c:	sub	w11, w6, w7
   23910:	cmn	w0, #0x1
   23914:	b.eq	238fc <printf_parse@@Base+0x441c>  // b.none
   23918:	cmp	w11, #0x1
   2391c:	b.ne	23a0c <printf_parse@@Base+0x452c>  // b.any
   23920:	ldrb	w6, [x8, #8]
   23924:	add	x3, x7, w3, sxtw
   23928:	str	x3, [x1, #72]
   2392c:	and	w0, w6, #0xfffffffb
   23930:	cmp	w0, #0x1a
   23934:	ccmp	w6, #0x1c, #0x4, ne  // ne = any
   23938:	b.eq	2395c <printf_parse@@Base+0x447c>  // b.none
   2393c:	cmp	w5, #0x0
   23940:	ccmp	w6, #0x16, #0x0, eq  // eq = none
   23944:	b.eq	23acc <printf_parse@@Base+0x45ec>  // b.none
   23948:	ldrb	w1, [x8]
   2394c:	mov	w0, #0x0                   	// #0
   23950:	str	wzr, [x10]
   23954:	strb	w1, [x10, #8]
   23958:	ret
   2395c:	ldr	x7, [x1, #104]
   23960:	cmp	x3, x7
   23964:	b.ge	23a04 <printf_parse@@Base+0x4524>  // b.tcont
   23968:	ldrb	w9, [x8]
   2396c:	mov	x2, #0x0                   	// #0
   23970:	b	23994 <printf_parse@@Base+0x44b4>
   23974:	ldr	x0, [x10, #8]
   23978:	strb	w5, [x0, x2]
   2397c:	add	x2, x2, #0x1
   23980:	cmp	x2, #0x20
   23984:	b.eq	23a04 <printf_parse@@Base+0x4524>  // b.none
   23988:	ldrb	w6, [x8, #8]
   2398c:	ldr	x3, [x1, #72]
   23990:	ldr	x7, [x1, #104]
   23994:	cmp	w6, #0x1e
   23998:	add	x4, x3, #0x1
   2399c:	mov	w6, w2
   239a0:	b.eq	23a28 <printf_parse@@Base+0x4548>  // b.none
   239a4:	ldr	x0, [x1, #8]
   239a8:	str	x4, [x1, #72]
   239ac:	ldrb	w5, [x0, x3]
   239b0:	cmp	x7, x4
   239b4:	b.le	23a04 <printf_parse@@Base+0x4524>
   239b8:	cmp	w9, w5
   239bc:	b.ne	23974 <printf_parse@@Base+0x4494>  // b.any
   239c0:	ldr	x0, [x1, #8]
   239c4:	ldrb	w0, [x0, x4]
   239c8:	cmp	w0, #0x5d
   239cc:	b.ne	23974 <printf_parse@@Base+0x4494>  // b.any
   239d0:	ldr	x0, [x10, #8]
   239d4:	add	x4, x4, #0x1
   239d8:	str	x4, [x1, #72]
   239dc:	strb	wzr, [x0, w6, sxtw]
   239e0:	ldrb	w0, [x8, #8]
   239e4:	cmp	w0, #0x1c
   239e8:	b.eq	23b20 <printf_parse@@Base+0x4640>  // b.none
   239ec:	cmp	w0, #0x1e
   239f0:	b.eq	23b10 <printf_parse@@Base+0x4630>  // b.none
   239f4:	cmp	w0, #0x1a
   239f8:	mov	w0, #0x0                   	// #0
   239fc:	b.eq	23b04 <printf_parse@@Base+0x4624>  // b.none
   23a00:	ret
   23a04:	mov	w0, #0x7                   	// #7
   23a08:	ret
   23a0c:	mov	w0, #0x1                   	// #1
   23a10:	str	w0, [x10]
   23a14:	mov	w0, #0x0                   	// #0
   23a18:	ldr	w2, [x9, x7, lsl #2]
   23a1c:	str	w2, [x10, #8]
   23a20:	str	x6, [x1, #72]
   23a24:	ret
   23a28:	ldrb	w0, [x1, #139]
   23a2c:	cbz	w0, 239a4 <printf_parse@@Base+0x44c4>
   23a30:	ldrb	w0, [x1, #140]
   23a34:	cbz	w0, 23ab4 <printf_parse@@Base+0x45d4>
   23a38:	ldr	x11, [x1, #48]
   23a3c:	cmp	x3, x11
   23a40:	b.eq	23a54 <printf_parse@@Base+0x4574>  // b.none
   23a44:	ldr	x0, [x1, #16]
   23a48:	ldr	w0, [x0, x3, lsl #2]
   23a4c:	cmn	w0, #0x1
   23a50:	b.eq	239a4 <printf_parse@@Base+0x44c4>  // b.none
   23a54:	ldr	x5, [x1, #24]
   23a58:	ldr	x0, [x1]
   23a5c:	ldr	x12, [x5, x3, lsl #3]
   23a60:	ldr	x5, [x1, #40]
   23a64:	add	x0, x0, x12
   23a68:	ldrb	w5, [x0, x5]
   23a6c:	tbnz	w5, #7, 239a4 <printf_parse@@Base+0x44c4>
   23a70:	ldr	w0, [x1, #144]
   23a74:	cmp	w0, #0x1
   23a78:	b.eq	23aac <printf_parse@@Base+0x45cc>  // b.none
   23a7c:	cmp	x11, x4
   23a80:	b.le	23aac <printf_parse@@Base+0x45cc>
   23a84:	ldr	x12, [x1, #16]
   23a88:	b	23a94 <printf_parse@@Base+0x45b4>
   23a8c:	cmp	x11, x4
   23a90:	b.eq	23aac <printf_parse@@Base+0x45cc>  // b.none
   23a94:	ldr	w0, [x12, x4, lsl #2]
   23a98:	sub	w13, w4, w3
   23a9c:	add	x4, x4, #0x1
   23aa0:	cmn	w0, #0x1
   23aa4:	b.eq	23a8c <printf_parse@@Base+0x45ac>  // b.none
   23aa8:	add	x4, x3, w13, sxtw
   23aac:	str	x4, [x1, #72]
   23ab0:	b	239b0 <printf_parse@@Base+0x44d0>
   23ab4:	ldr	x0, [x1]
   23ab8:	str	x4, [x1, #72]
   23abc:	ldr	x5, [x1, #40]
   23ac0:	add	x3, x0, x3
   23ac4:	ldrb	w5, [x3, x5]
   23ac8:	b	239b0 <printf_parse@@Base+0x44d0>
   23acc:	stp	x29, x30, [sp, #-32]!
   23ad0:	mov	x2, x4
   23ad4:	mov	x29, sp
   23ad8:	add	x0, sp, #0x10
   23adc:	bl	20070 <printf_parse@@Base+0xb90>
   23ae0:	ldrb	w0, [sp, #24]
   23ae4:	cmp	w0, #0x15
   23ae8:	b.ne	23b30 <printf_parse@@Base+0x4650>  // b.any
   23aec:	ldrb	w1, [x8]
   23af0:	mov	w0, #0x0                   	// #0
   23af4:	str	wzr, [x10]
   23af8:	strb	w1, [x10, #8]
   23afc:	ldp	x29, x30, [sp], #32
   23b00:	ret
   23b04:	mov	w1, #0x3                   	// #3
   23b08:	str	w1, [x10]
   23b0c:	ret
   23b10:	mov	w1, #0x4                   	// #4
   23b14:	mov	w0, #0x0                   	// #0
   23b18:	str	w1, [x10]
   23b1c:	ret
   23b20:	mov	w1, #0x2                   	// #2
   23b24:	mov	w0, #0x0                   	// #0
   23b28:	str	w1, [x10]
   23b2c:	ret
   23b30:	mov	w0, #0xb                   	// #11
   23b34:	b	23afc <printf_parse@@Base+0x461c>
   23b38:	stp	x29, x30, [sp, #-96]!
   23b3c:	mov	x10, x0
   23b40:	mov	x18, x4
   23b44:	mov	x29, sp
   23b48:	ldr	x13, [x0, #200]
   23b4c:	mov	x15, x6
   23b50:	mov	x11, #0x0                   	// #0
   23b54:	stp	x19, x20, [sp, #16]
   23b58:	mov	x9, x13
   23b5c:	mov	x20, x1
   23b60:	mov	x19, x2
   23b64:	stp	x21, x22, [sp, #32]
   23b68:	mov	x21, x3
   23b6c:	mov	x22, x5
   23b70:	stp	x23, x24, [sp, #48]
   23b74:	ldr	x23, [x0, #152]
   23b78:	b	23b9c <printf_parse@@Base+0x46bc>
   23b7c:	asr	x7, x7, #1
   23b80:	ldr	x0, [x10, #216]
   23b84:	add	x8, x7, x7, lsl #2
   23b88:	add	x8, x0, x8, lsl #3
   23b8c:	ldr	x0, [x8, #8]
   23b90:	cmp	x0, x18
   23b94:	b.lt	23cec <printf_parse@@Base+0x480c>  // b.tstop
   23b98:	mov	x9, x7
   23b9c:	add	x7, x9, x11
   23ba0:	cmp	x9, x11
   23ba4:	b.gt	23b7c <printf_parse@@Base+0x469c>
   23ba8:	cmp	x13, x11
   23bac:	b.le	23da4 <printf_parse@@Base+0x48c4>
   23bb0:	ldr	x1, [x10, #216]
   23bb4:	add	x0, x11, x11, lsl #2
   23bb8:	add	x0, x1, x0, lsl #3
   23bbc:	ldr	x0, [x0, #8]
   23bc0:	cmp	x18, x0
   23bc4:	csinv	x11, x11, xzr, eq  // eq = none
   23bc8:	mov	x9, x13
   23bcc:	mov	x12, #0x0                   	// #0
   23bd0:	b	23bf4 <printf_parse@@Base+0x4714>
   23bd4:	asr	x7, x7, #1
   23bd8:	ldr	x0, [x10, #216]
   23bdc:	add	x8, x7, x7, lsl #2
   23be0:	add	x8, x0, x8, lsl #3
   23be4:	ldr	x0, [x8, #8]
   23be8:	cmp	x0, x15
   23bec:	b.lt	23cf4 <printf_parse@@Base+0x4814>  // b.tstop
   23bf0:	mov	x9, x7
   23bf4:	add	x7, x9, x12
   23bf8:	cmp	x9, x12
   23bfc:	b.gt	23bd4 <printf_parse@@Base+0x46f4>
   23c00:	cmp	x13, x12
   23c04:	b.le	23dac <printf_parse@@Base+0x48cc>
   23c08:	ldr	x1, [x10, #216]
   23c0c:	add	x0, x12, x12, lsl #2
   23c10:	add	x0, x1, x0, lsl #3
   23c14:	ldr	x0, [x0, #8]
   23c18:	cmp	x15, x0
   23c1c:	csinv	x12, x12, xzr, eq  // eq = none
   23c20:	ldr	x4, [x20]
   23c24:	mov	x24, #0x0                   	// #0
   23c28:	cmp	x4, #0x0
   23c2c:	b.le	23d34 <printf_parse@@Base+0x4854>
   23c30:	stp	x25, x26, [sp, #64]
   23c34:	str	x27, [sp, #80]
   23c38:	ldr	x0, [x19]
   23c3c:	lsl	x26, x24, #3
   23c40:	ldr	x2, [x10, #216]
   23c44:	ldr	x0, [x0, x24, lsl #3]
   23c48:	ldr	x5, [x23]
   23c4c:	add	x0, x0, x0, lsl #2
   23c50:	add	x1, x2, x0, lsl #3
   23c54:	ldr	x0, [x2, x0, lsl #3]
   23c58:	ldr	x3, [x1, #16]
   23c5c:	lsl	x0, x0, #4
   23c60:	cmp	x18, x3
   23c64:	ldr	x27, [x5, x0]
   23c68:	b.lt	23d88 <printf_parse@@Base+0x48a8>  // b.tstop
   23c6c:	ldr	x4, [x1, #24]
   23c70:	cmp	x18, x4
   23c74:	b.gt	23d80 <printf_parse@@Base+0x48a0>
   23c78:	cmp	x18, x3
   23c7c:	cset	w1, eq  // eq = none
   23c80:	cmp	x18, x4
   23c84:	b.eq	23d3c <printf_parse@@Base+0x485c>  // b.none
   23c88:	cmp	x18, x3
   23c8c:	mov	w25, #0x0                   	// #0
   23c90:	b.eq	23d40 <printf_parse@@Base+0x4860>  // b.none
   23c94:	cmp	x15, x3
   23c98:	b.lt	23ccc <printf_parse@@Base+0x47ec>  // b.tstop
   23c9c:	cmp	x15, x4
   23ca0:	mov	w0, #0x1                   	// #1
   23ca4:	b.gt	23cc4 <printf_parse@@Base+0x47e4>
   23ca8:	cmp	x15, x3
   23cac:	cset	w1, eq  // eq = none
   23cb0:	cmp	x15, x4
   23cb4:	b.eq	23cfc <printf_parse@@Base+0x481c>  // b.none
   23cb8:	cmp	x15, x3
   23cbc:	mov	w0, #0x0                   	// #0
   23cc0:	b.eq	23d00 <printf_parse@@Base+0x4820>  // b.none
   23cc4:	cmp	w0, w25
   23cc8:	b.eq	23d1c <printf_parse@@Base+0x483c>  // b.none
   23ccc:	ldp	x25, x26, [sp, #64]
   23cd0:	mov	w0, #0x1                   	// #1
   23cd4:	ldr	x27, [sp, #80]
   23cd8:	ldp	x19, x20, [sp, #16]
   23cdc:	ldp	x21, x22, [sp, #32]
   23ce0:	ldp	x23, x24, [sp, #48]
   23ce4:	ldp	x29, x30, [sp], #96
   23ce8:	ret
   23cec:	add	x11, x7, #0x1
   23cf0:	b	23b9c <printf_parse@@Base+0x46bc>
   23cf4:	add	x12, x7, #0x1
   23cf8:	b	23bf4 <printf_parse@@Base+0x4714>
   23cfc:	orr	w1, w1, #0x2
   23d00:	mov	x2, x27
   23d04:	mov	x4, x12
   23d08:	mov	x3, x22
   23d0c:	mov	x0, x10
   23d10:	bl	201e0 <printf_parse@@Base+0xd00>
   23d14:	cmp	w0, w25
   23d18:	b.ne	23ccc <printf_parse@@Base+0x47ec>  // b.any
   23d1c:	ldr	x4, [x20]
   23d20:	add	x24, x24, #0x1
   23d24:	cmp	x24, x4
   23d28:	b.lt	23c38 <printf_parse@@Base+0x4758>  // b.tstop
   23d2c:	ldp	x25, x26, [sp, #64]
   23d30:	ldr	x27, [sp, #80]
   23d34:	mov	w0, #0x0                   	// #0
   23d38:	b	23cd8 <printf_parse@@Base+0x47f8>
   23d3c:	orr	w1, w1, #0x2
   23d40:	mov	x3, x21
   23d44:	mov	x2, x27
   23d48:	mov	x4, x11
   23d4c:	mov	x0, x10
   23d50:	bl	201e0 <printf_parse@@Base+0xd00>
   23d54:	mov	w25, w0
   23d58:	ldr	x2, [x19]
   23d5c:	ldr	x1, [x10, #216]
   23d60:	ldr	x0, [x2, x26]
   23d64:	add	x0, x0, x0, lsl #2
   23d68:	add	x0, x1, x0, lsl #3
   23d6c:	ldr	x3, [x0, #16]
   23d70:	cmp	x15, x3
   23d74:	b.lt	23db4 <printf_parse@@Base+0x48d4>  // b.tstop
   23d78:	ldr	x4, [x0, #24]
   23d7c:	b	23c9c <printf_parse@@Base+0x47bc>
   23d80:	mov	w25, #0x1                   	// #1
   23d84:	b	23c94 <printf_parse@@Base+0x47b4>
   23d88:	cmp	x15, x3
   23d8c:	b.lt	23d20 <printf_parse@@Base+0x4840>  // b.tstop
   23d90:	ldr	x4, [x1, #24]
   23d94:	cmp	x15, x4
   23d98:	b.gt	23ccc <printf_parse@@Base+0x47ec>
   23d9c:	mov	w25, #0xffffffff            	// #-1
   23da0:	b	23ca8 <printf_parse@@Base+0x47c8>
   23da4:	mov	x11, #0xffffffffffffffff    	// #-1
   23da8:	b	23bc8 <printf_parse@@Base+0x46e8>
   23dac:	mov	x12, #0xffffffffffffffff    	// #-1
   23db0:	b	23c20 <printf_parse@@Base+0x4740>
   23db4:	mov	w0, #0xffffffff            	// #-1
   23db8:	b	23cc4 <printf_parse@@Base+0x47e4>
   23dbc:	nop
   23dc0:	lsl	x2, x2, #4
   23dc4:	stp	x29, x30, [sp, #-48]!
   23dc8:	add	x5, x0, x2
   23dcc:	mov	x29, sp
   23dd0:	stp	x19, x20, [sp, #16]
   23dd4:	ldrb	w6, [x5, #8]
   23dd8:	cmp	w6, #0x7
   23ddc:	b.eq	23f08 <printf_parse@@Base+0x4a28>  // b.none
   23de0:	ldr	w5, [x3, #144]
   23de4:	cmp	w5, #0x1
   23de8:	b.eq	23e40 <printf_parse@@Base+0x4960>  // b.none
   23dec:	ldr	x8, [x3, #48]
   23df0:	add	x5, x4, #0x1
   23df4:	cmp	x8, x5
   23df8:	b.le	23e40 <printf_parse@@Base+0x4960>
   23dfc:	mov	w19, #0x1                   	// #1
   23e00:	stp	x21, x22, [sp, #32]
   23e04:	ldr	x9, [x3, #16]
   23e08:	b	23e18 <printf_parse@@Base+0x4938>
   23e0c:	add	w19, w19, #0x1
   23e10:	cmp	x5, x8
   23e14:	b.eq	23e54 <printf_parse@@Base+0x4974>  // b.none
   23e18:	ldr	w7, [x9, x5, lsl #2]
   23e1c:	add	x5, x5, #0x1
   23e20:	cmn	w7, #0x1
   23e24:	b.eq	23e0c <printf_parse@@Base+0x492c>  // b.none
   23e28:	cmp	w6, #0x5
   23e2c:	b.eq	23ef4 <printf_parse@@Base+0x4a14>  // b.none
   23e30:	cmp	w6, #0x6
   23e34:	ccmp	w19, #0x1, #0x4, eq  // eq = none
   23e38:	b.ne	23e98 <printf_parse@@Base+0x49b8>  // b.any
   23e3c:	ldp	x21, x22, [sp, #32]
   23e40:	mov	w19, #0x0                   	// #0
   23e44:	mov	w0, w19
   23e48:	ldp	x19, x20, [sp, #16]
   23e4c:	ldp	x29, x30, [sp], #48
   23e50:	ret
   23e54:	cmp	w6, #0x5
   23e58:	b.ne	23e30 <printf_parse@@Base+0x4950>  // b.any
   23e5c:	ldr	x0, [x1]
   23e60:	tbnz	w0, #6, 23e74 <printf_parse@@Base+0x4994>
   23e64:	ldr	x1, [x3, #8]
   23e68:	ldrb	w1, [x1, x4]
   23e6c:	cmp	w1, #0xa
   23e70:	b.eq	23e3c <printf_parse@@Base+0x495c>  // b.none
   23e74:	tbz	w0, #7, 23e84 <printf_parse@@Base+0x49a4>
   23e78:	ldr	x0, [x3, #8]
   23e7c:	ldrb	w0, [x0, x4]
   23e80:	cbz	w0, 23e3c <printf_parse@@Base+0x495c>
   23e84:	ldp	x21, x22, [sp, #32]
   23e88:	mov	w0, w19
   23e8c:	ldp	x19, x20, [sp, #16]
   23e90:	ldp	x29, x30, [sp], #48
   23e94:	ret
   23e98:	ldr	x22, [x0, x2]
   23e9c:	ldr	x5, [x22, #64]
   23ea0:	ldr	x2, [x22, #40]
   23ea4:	cbnz	x5, 23eb4 <printf_parse@@Base+0x49d4>
   23ea8:	ldr	x0, [x22, #72]
   23eac:	orr	x0, x2, x0
   23eb0:	cbz	x0, 24060 <printf_parse@@Base+0x4b80>
   23eb4:	ldr	w20, [x9, x4, lsl #2]
   23eb8:	cmp	x2, #0x0
   23ebc:	b.le	23fe4 <printf_parse@@Base+0x4b04>
   23ec0:	mov	x0, #0x0                   	// #0
   23ec4:	ldr	x3, [x22]
   23ec8:	b	23ed4 <printf_parse@@Base+0x49f4>
   23ecc:	cmp	x0, x2
   23ed0:	b.eq	23fe4 <printf_parse@@Base+0x4b04>  // b.none
   23ed4:	ldr	w1, [x3, x0, lsl #2]
   23ed8:	add	x0, x0, #0x1
   23edc:	cmp	w20, w1
   23ee0:	b.ne	23ecc <printf_parse@@Base+0x49ec>  // b.any
   23ee4:	ldrb	w0, [x22, #32]
   23ee8:	tbnz	w0, #0, 23e3c <printf_parse@@Base+0x495c>
   23eec:	ldp	x21, x22, [sp, #32]
   23ef0:	b	23e88 <printf_parse@@Base+0x49a8>
   23ef4:	cmp	w19, #0x1
   23ef8:	b.eq	23e3c <printf_parse@@Base+0x495c>  // b.none
   23efc:	ldr	x0, [x1]
   23f00:	tbnz	w0, #6, 23e74 <printf_parse@@Base+0x4994>
   23f04:	b	23e64 <printf_parse@@Base+0x4984>
   23f08:	ldr	x1, [x3, #8]
   23f0c:	ldrb	w0, [x1, x4]
   23f10:	cmp	w0, #0xc1
   23f14:	b.ls	23e40 <printf_parse@@Base+0x4960>  // b.plast
   23f18:	ldr	x3, [x3, #88]
   23f1c:	add	x2, x4, #0x1
   23f20:	cmp	x2, x3
   23f24:	b.ge	23e40 <printf_parse@@Base+0x4960>  // b.tcont
   23f28:	add	x6, x1, x4
   23f2c:	cmp	w0, #0xdf
   23f30:	ldrb	w5, [x6, #1]
   23f34:	b.ls	24094 <printf_parse@@Base+0x4bb4>  // b.plast
   23f38:	cmp	w0, #0xef
   23f3c:	b.hi	24070 <printf_parse@@Base+0x4b90>  // b.pmore
   23f40:	cmp	w0, #0xe0
   23f44:	mov	w0, #0x9f                  	// #159
   23f48:	ccmp	w5, w0, #0x2, eq  // eq = none
   23f4c:	b.ls	23e40 <printf_parse@@Base+0x4960>  // b.plast
   23f50:	mov	x0, #0x3                   	// #3
   23f54:	mov	w19, w0
   23f58:	add	x4, x4, x0
   23f5c:	cmp	x3, x4
   23f60:	b.lt	23e40 <printf_parse@@Base+0x4960>  // b.tstop
   23f64:	ldrb	w1, [x1, x2]
   23f68:	sub	w1, w1, #0x80
   23f6c:	and	w1, w1, #0xff
   23f70:	cmp	w1, #0x3f
   23f74:	b.hi	23e40 <printf_parse@@Base+0x4960>  // b.pmore
   23f78:	ldrb	w1, [x6, #2]
   23f7c:	sub	w1, w1, #0x80
   23f80:	and	w1, w1, #0xff
   23f84:	cmp	w1, #0x3f
   23f88:	b.hi	23e40 <printf_parse@@Base+0x4960>  // b.pmore
   23f8c:	cmp	x0, #0x3
   23f90:	b.eq	23e44 <printf_parse@@Base+0x4964>  // b.none
   23f94:	ldrb	w1, [x6, #3]
   23f98:	sub	w1, w1, #0x80
   23f9c:	and	w1, w1, #0xff
   23fa0:	cmp	w1, #0x3f
   23fa4:	b.hi	23e40 <printf_parse@@Base+0x4960>  // b.pmore
   23fa8:	cmp	x0, #0x4
   23fac:	b.eq	23e44 <printf_parse@@Base+0x4964>  // b.none
   23fb0:	ldrb	w1, [x6, #4]
   23fb4:	sub	w1, w1, #0x80
   23fb8:	and	w1, w1, #0xff
   23fbc:	cmp	w1, #0x3f
   23fc0:	b.hi	23e40 <printf_parse@@Base+0x4960>  // b.pmore
   23fc4:	cmp	x0, #0x6
   23fc8:	b.ne	23e44 <printf_parse@@Base+0x4964>  // b.any
   23fcc:	ldrb	w0, [x6, #5]
   23fd0:	sub	w0, w0, #0x80
   23fd4:	and	w0, w0, #0xff
   23fd8:	cmp	w0, #0x3f
   23fdc:	b.ls	23e44 <printf_parse@@Base+0x4964>  // b.plast
   23fe0:	b	23e40 <printf_parse@@Base+0x4960>
   23fe4:	ldr	x0, [x22, #72]
   23fe8:	cmp	x0, #0x0
   23fec:	b.le	24024 <printf_parse@@Base+0x4b44>
   23ff0:	mov	x21, #0x0                   	// #0
   23ff4:	b	24004 <printf_parse@@Base+0x4b24>
   23ff8:	ldr	x0, [x22, #72]
   23ffc:	cmp	x21, x0
   24000:	b.ge	24020 <printf_parse@@Base+0x4b40>  // b.tcont
   24004:	ldr	x1, [x22, #24]
   24008:	mov	w0, w20
   2400c:	ldr	x1, [x1, x21, lsl #3]
   24010:	add	x21, x21, #0x1
   24014:	bl	a5e0 <iswctype@plt>
   24018:	cbz	w0, 23ff8 <printf_parse@@Base+0x4b18>
   2401c:	b	23ee4 <printf_parse@@Base+0x4a04>
   24020:	ldr	x5, [x22, #64]
   24024:	cmp	x5, #0x0
   24028:	b.le	24060 <printf_parse@@Base+0x4b80>
   2402c:	ldr	x2, [x22, #8]
   24030:	mov	x0, #0x0                   	// #0
   24034:	nop
   24038:	ldr	w1, [x2, x0, lsl #2]
   2403c:	cmp	w20, w1
   24040:	b.cc	24054 <printf_parse@@Base+0x4b74>  // b.lo, b.ul, b.last
   24044:	ldr	x1, [x22, #16]
   24048:	ldr	w1, [x1, x0, lsl #2]
   2404c:	cmp	w20, w1
   24050:	b.ls	23ee4 <printf_parse@@Base+0x4a04>  // b.plast
   24054:	add	x0, x0, #0x1
   24058:	cmp	x0, x5
   2405c:	b.ne	24038 <printf_parse@@Base+0x4b58>  // b.any
   24060:	ldrb	w0, [x22, #32]
   24064:	tbz	w0, #0, 23e3c <printf_parse@@Base+0x495c>
   24068:	ldp	x21, x22, [sp, #32]
   2406c:	b	23e88 <printf_parse@@Base+0x49a8>
   24070:	cmp	w0, #0xf7
   24074:	b.hi	240ac <printf_parse@@Base+0x4bcc>  // b.pmore
   24078:	cmp	w0, #0xf0
   2407c:	mov	w0, #0x8f                  	// #143
   24080:	ccmp	w5, w0, #0x2, eq  // eq = none
   24084:	b.ls	23e40 <printf_parse@@Base+0x4960>  // b.plast
   24088:	mov	x0, #0x4                   	// #4
   2408c:	mov	w19, w0
   24090:	b	23f58 <printf_parse@@Base+0x4a78>
   24094:	sub	w0, w5, #0x80
   24098:	mov	w19, #0x2                   	// #2
   2409c:	and	w0, w0, #0xff
   240a0:	cmp	w0, #0x3f
   240a4:	b.ls	23e44 <printf_parse@@Base+0x4964>  // b.plast
   240a8:	b	23e40 <printf_parse@@Base+0x4960>
   240ac:	cmp	w0, #0xfb
   240b0:	b.hi	240d0 <printf_parse@@Base+0x4bf0>  // b.pmore
   240b4:	cmp	w0, #0xf8
   240b8:	mov	w0, #0x87                  	// #135
   240bc:	ccmp	w5, w0, #0x2, eq  // eq = none
   240c0:	b.ls	23e40 <printf_parse@@Base+0x4960>  // b.plast
   240c4:	mov	x0, #0x5                   	// #5
   240c8:	mov	w19, w0
   240cc:	b	23f58 <printf_parse@@Base+0x4a78>
   240d0:	cmp	w0, #0xfd
   240d4:	b.hi	23e40 <printf_parse@@Base+0x4960>  // b.pmore
   240d8:	cmp	w0, #0xfc
   240dc:	mov	w0, #0x83                  	// #131
   240e0:	ccmp	w5, w0, #0x2, eq  // eq = none
   240e4:	b.ls	23e40 <printf_parse@@Base+0x4960>  // b.plast
   240e8:	mov	x0, #0x6                   	// #6
   240ec:	mov	w19, w0
   240f0:	b	23f58 <printf_parse@@Base+0x4a78>
   240f4:	nop
   240f8:	stp	x29, x30, [sp, #-48]!
   240fc:	mov	x29, sp
   24100:	str	x21, [sp, #32]
   24104:	mov	w21, #0xff                  	// #255
   24108:	movk	w21, #0x4, lsl #16
   2410c:	stp	x19, x20, [sp, #16]
   24110:	mov	x19, x0
   24114:	ldr	x0, [x0, #8]
   24118:	cbnz	x0, 24110 <printf_parse@@Base+0x4c30>
   2411c:	ldr	x0, [x19, #16]
   24120:	cbnz	x0, 24110 <printf_parse@@Base+0x4c30>
   24124:	ldr	w0, [x19, #48]
   24128:	and	w0, w0, w21
   2412c:	cmp	w0, #0x6
   24130:	b.eq	2416c <printf_parse@@Base+0x4c8c>  // b.none
   24134:	nop
   24138:	cmp	w0, #0x3
   2413c:	b.eq	241b4 <printf_parse@@Base+0x4cd4>  // b.none
   24140:	ldr	x1, [x19]
   24144:	cbz	x1, 241a0 <printf_parse@@Base+0x4cc0>
   24148:	ldr	x0, [x1, #16]
   2414c:	cmp	x0, #0x0
   24150:	ccmp	x19, x0, #0x4, ne  // ne = any
   24154:	mov	x19, x1
   24158:	b.ne	24110 <printf_parse@@Base+0x4c30>  // b.any
   2415c:	ldr	w0, [x19, #48]
   24160:	and	w0, w0, w21
   24164:	cmp	w0, #0x6
   24168:	b.ne	24138 <printf_parse@@Base+0x4c58>  // b.any
   2416c:	ldr	x20, [x19, #40]
   24170:	ldr	x0, [x20]
   24174:	bl	aa50 <free@plt>
   24178:	ldr	x0, [x20, #8]
   2417c:	bl	aa50 <free@plt>
   24180:	ldr	x0, [x20, #16]
   24184:	bl	aa50 <free@plt>
   24188:	ldr	x0, [x20, #24]
   2418c:	bl	aa50 <free@plt>
   24190:	mov	x0, x20
   24194:	bl	aa50 <free@plt>
   24198:	ldr	x1, [x19]
   2419c:	cbnz	x1, 24148 <printf_parse@@Base+0x4c68>
   241a0:	mov	w0, #0x0                   	// #0
   241a4:	ldp	x19, x20, [sp, #16]
   241a8:	ldr	x21, [sp, #32]
   241ac:	ldp	x29, x30, [sp], #48
   241b0:	ret
   241b4:	ldr	x0, [x19, #40]
   241b8:	bl	aa50 <free@plt>
   241bc:	b	24140 <printf_parse@@Base+0x4c60>
   241c0:	stp	x29, x30, [sp, #-32]!
   241c4:	mov	x29, sp
   241c8:	ldr	w0, [x1, #48]
   241cc:	and	w0, w0, #0x7ffff
   241d0:	and	w0, w0, #0xfffc00ff
   241d4:	cmp	w0, #0x6
   241d8:	b.eq	241f0 <printf_parse@@Base+0x4d10>  // b.none
   241dc:	cmp	w0, #0x3
   241e0:	b.eq	24230 <printf_parse@@Base+0x4d50>  // b.none
   241e4:	mov	w0, #0x0                   	// #0
   241e8:	ldp	x29, x30, [sp], #32
   241ec:	ret
   241f0:	str	x19, [sp, #16]
   241f4:	ldr	x19, [x1, #40]
   241f8:	ldr	x0, [x19]
   241fc:	bl	aa50 <free@plt>
   24200:	ldr	x0, [x19, #8]
   24204:	bl	aa50 <free@plt>
   24208:	ldr	x0, [x19, #16]
   2420c:	bl	aa50 <free@plt>
   24210:	ldr	x0, [x19, #24]
   24214:	bl	aa50 <free@plt>
   24218:	mov	x0, x19
   2421c:	bl	aa50 <free@plt>
   24220:	mov	w0, #0x0                   	// #0
   24224:	ldr	x19, [sp, #16]
   24228:	ldp	x29, x30, [sp], #32
   2422c:	ret
   24230:	ldr	x0, [x1, #40]
   24234:	bl	aa50 <free@plt>
   24238:	mov	w0, #0x0                   	// #0
   2423c:	ldp	x29, x30, [sp], #32
   24240:	ret
   24244:	nop
   24248:	stp	x29, x30, [sp, #-64]!
   2424c:	mov	x29, sp
   24250:	ldr	x1, [x0]
   24254:	stp	x19, x20, [sp, #16]
   24258:	stp	x21, x22, [sp, #32]
   2425c:	mov	x22, x0
   24260:	stp	x23, x24, [sp, #48]
   24264:	cbz	x1, 242f0 <printf_parse@@Base+0x4e10>
   24268:	ldr	x4, [x0, #16]
   2426c:	cbz	x4, 242f0 <printf_parse@@Base+0x4e10>
   24270:	mov	w21, #0xff                  	// #255
   24274:	mov	x19, #0x0                   	// #0
   24278:	movk	w21, #0x4, lsl #16
   2427c:	b	24298 <printf_parse@@Base+0x4db8>
   24280:	cmp	w0, #0x3
   24284:	b.eq	24494 <printf_parse@@Base+0x4fb4>  // b.none
   24288:	add	x19, x19, #0x1
   2428c:	cmp	x19, x4
   24290:	b.cs	242f0 <printf_parse@@Base+0x4e10>  // b.hs, b.nlast
   24294:	ldr	x1, [x22]
   24298:	lsl	x2, x19, #4
   2429c:	add	x3, x1, x2
   242a0:	ldr	w0, [x3, #8]
   242a4:	and	w0, w0, w21
   242a8:	cmp	w0, #0x6
   242ac:	b.ne	24280 <printf_parse@@Base+0x4da0>  // b.any
   242b0:	ldr	x20, [x1, x2]
   242b4:	add	x19, x19, #0x1
   242b8:	ldr	x0, [x20]
   242bc:	bl	aa50 <free@plt>
   242c0:	ldr	x0, [x20, #8]
   242c4:	bl	aa50 <free@plt>
   242c8:	ldr	x0, [x20, #16]
   242cc:	bl	aa50 <free@plt>
   242d0:	ldr	x0, [x20, #24]
   242d4:	bl	aa50 <free@plt>
   242d8:	mov	x0, x20
   242dc:	bl	aa50 <free@plt>
   242e0:	ldr	x4, [x22, #16]
   242e4:	cmp	x19, x4
   242e8:	b.cc	24294 <printf_parse@@Base+0x4db4>  // b.lo, b.ul, b.last
   242ec:	nop
   242f0:	ldr	x0, [x22, #24]
   242f4:	mov	x19, #0x0                   	// #0
   242f8:	mov	x20, #0x0                   	// #0
   242fc:	bl	aa50 <free@plt>
   24300:	ldr	x0, [x22, #16]
   24304:	cbz	x0, 24358 <printf_parse@@Base+0x4e78>
   24308:	ldr	x0, [x22, #48]
   2430c:	add	x1, x0, x19
   24310:	cbz	x0, 2431c <printf_parse@@Base+0x4e3c>
   24314:	ldr	x0, [x1, #16]
   24318:	bl	aa50 <free@plt>
   2431c:	ldr	x0, [x22, #56]
   24320:	add	x1, x0, x19
   24324:	cbz	x0, 24330 <printf_parse@@Base+0x4e50>
   24328:	ldr	x0, [x1, #16]
   2432c:	bl	aa50 <free@plt>
   24330:	ldr	x0, [x22, #40]
   24334:	add	x1, x0, x19
   24338:	cbz	x0, 24438 <printf_parse@@Base+0x4f58>
   2433c:	ldr	x0, [x1, #16]
   24340:	add	x20, x20, #0x1
   24344:	add	x19, x19, #0x18
   24348:	bl	aa50 <free@plt>
   2434c:	ldr	x0, [x22, #16]
   24350:	cmp	x20, x0
   24354:	b.cc	24308 <printf_parse@@Base+0x4e28>  // b.lo, b.ul, b.last
   24358:	ldr	x0, [x22, #40]
   2435c:	bl	aa50 <free@plt>
   24360:	ldr	x0, [x22, #48]
   24364:	mov	x23, #0x0                   	// #0
   24368:	mov	x24, #0x0                   	// #0
   2436c:	bl	aa50 <free@plt>
   24370:	ldr	x0, [x22, #56]
   24374:	bl	aa50 <free@plt>
   24378:	ldr	x0, [x22]
   2437c:	bl	aa50 <free@plt>
   24380:	ldr	x0, [x22, #64]
   24384:	cbz	x0, 24454 <printf_parse@@Base+0x4f74>
   24388:	ldr	x1, [x0, x23]
   2438c:	add	x21, x0, x23
   24390:	mov	x20, #0x0                   	// #0
   24394:	cmp	x1, #0x0
   24398:	b.gt	243e0 <printf_parse@@Base+0x4f00>
   2439c:	b	24414 <printf_parse@@Base+0x4f34>
   243a0:	ldr	x0, [x1, #16]
   243a4:	add	x20, x20, #0x1
   243a8:	bl	aa50 <free@plt>
   243ac:	ldr	x0, [x19, #80]
   243b0:	bl	aa50 <free@plt>
   243b4:	ldr	x0, [x19, #24]
   243b8:	bl	aa50 <free@plt>
   243bc:	ldr	x0, [x19, #96]
   243c0:	bl	aa50 <free@plt>
   243c4:	ldr	x0, [x19, #88]
   243c8:	bl	aa50 <free@plt>
   243cc:	mov	x0, x19
   243d0:	bl	aa50 <free@plt>
   243d4:	ldr	x0, [x21]
   243d8:	cmp	x0, x20
   243dc:	b.le	24414 <printf_parse@@Base+0x4f34>
   243e0:	ldr	x1, [x21, #16]
   243e4:	ldr	x19, [x1, x20, lsl #3]
   243e8:	ldr	x0, [x19, #48]
   243ec:	bl	aa50 <free@plt>
   243f0:	ldr	x0, [x19, #72]
   243f4:	bl	aa50 <free@plt>
   243f8:	ldr	x1, [x19, #80]
   243fc:	add	x2, x19, #0x8
   24400:	cmp	x1, x2
   24404:	b.ne	243a0 <printf_parse@@Base+0x4ec0>  // b.any
   24408:	add	x20, x20, #0x1
   2440c:	ldr	x0, [x19, #24]
   24410:	b	243b8 <printf_parse@@Base+0x4ed8>
   24414:	ldr	x0, [x21, #16]
   24418:	add	x24, x24, #0x1
   2441c:	add	x23, x23, #0x18
   24420:	bl	aa50 <free@plt>
   24424:	ldr	x0, [x22, #136]
   24428:	cmp	x0, x24
   2442c:	b.cc	24450 <printf_parse@@Base+0x4f70>  // b.lo, b.ul, b.last
   24430:	ldr	x0, [x22, #64]
   24434:	b	24388 <printf_parse@@Base+0x4ea8>
   24438:	ldr	x1, [x22, #16]
   2443c:	add	x20, x20, #0x1
   24440:	add	x19, x19, #0x18
   24444:	cmp	x1, x20
   24448:	b.hi	24308 <printf_parse@@Base+0x4e28>  // b.pmore
   2444c:	b	2435c <printf_parse@@Base+0x4e7c>
   24450:	ldr	x0, [x22, #64]
   24454:	bl	aa50 <free@plt>
   24458:	ldr	x0, [x22, #120]
   2445c:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   24460:	add	x1, x1, #0x410
   24464:	add	x1, x1, #0x10
   24468:	cmp	x0, x1
   2446c:	b.eq	24474 <printf_parse@@Base+0x4f94>  // b.none
   24470:	bl	aa50 <free@plt>
   24474:	ldr	x0, [x22, #224]
   24478:	bl	aa50 <free@plt>
   2447c:	mov	x0, x22
   24480:	ldp	x19, x20, [sp, #16]
   24484:	ldp	x21, x22, [sp, #32]
   24488:	ldp	x23, x24, [sp, #48]
   2448c:	ldp	x29, x30, [sp], #64
   24490:	b	aa50 <free@plt>
   24494:	ldr	x0, [x3]
   24498:	bl	aa50 <free@plt>
   2449c:	ldr	x4, [x22, #16]
   244a0:	b	24288 <printf_parse@@Base+0x4da8>
   244a4:	nop
   244a8:	stp	x29, x30, [sp, #-96]!
   244ac:	mov	x29, sp
   244b0:	stp	x19, x20, [sp, #16]
   244b4:	mov	x20, x0
   244b8:	mov	x19, x2
   244bc:	stp	x21, x22, [sp, #32]
   244c0:	mov	x21, x1
   244c4:	lsl	x22, x1, #4
   244c8:	stp	x23, x24, [sp, #48]
   244cc:	mov	w24, w4
   244d0:	stp	x25, x26, [sp, #64]
   244d4:	mov	x25, x3
   244d8:	str	x27, [sp, #80]
   244dc:	ldr	x3, [x20]
   244e0:	mov	x23, x19
   244e4:	ldr	x5, [x20, #40]
   244e8:	add	x2, x3, x22
   244ec:	ldrb	w0, [x2, #8]
   244f0:	cmp	w0, #0x4
   244f4:	b.eq	24718 <printf_parse@@Base+0x5238>  // b.none
   244f8:	add	x26, x21, x21, lsl #1
   244fc:	lsl	x26, x26, #3
   24500:	add	x1, x5, x26
   24504:	ldr	x0, [x1, #8]
   24508:	cbz	x0, 2486c <printf_parse@@Base+0x538c>
   2450c:	ldr	x1, [x1, #16]
   24510:	add	x23, x19, x19, lsl #1
   24514:	cmp	x0, #0x1
   24518:	lsl	x23, x23, #3
   2451c:	add	x0, x5, x23
   24520:	ldr	x27, [x1]
   24524:	b.eq	24658 <printf_parse@@Base+0x5178>  // b.none
   24528:	ldr	x4, [x20, #16]
   2452c:	sub	x1, x4, #0x1
   24530:	add	x2, x3, x1, lsl #4
   24534:	ldrb	w5, [x2, #10]
   24538:	str	xzr, [x0, #8]
   2453c:	tst	x5, #0x4
   24540:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   24544:	b.le	247c8 <printf_parse@@Base+0x52e8>
   24548:	add	x4, x3, x4, lsl #4
   2454c:	sub	x4, x4, x2
   24550:	sub	x4, x4, #0x20
   24554:	ldr	x6, [x20, #32]
   24558:	b	24574 <printf_parse@@Base+0x5094>
   2455c:	add	x2, x2, x4
   24560:	sub	x1, x1, #0x1
   24564:	ldrb	w5, [x2, #10]
   24568:	tst	x5, #0x4
   2456c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   24570:	b.le	247c8 <printf_parse@@Base+0x52e8>
   24574:	ldr	x5, [x6, x1, lsl #3]
   24578:	cmp	x5, x27
   2457c:	b.ne	2455c <printf_parse@@Base+0x507c>  // b.any
   24580:	ldr	w5, [x2, #8]
   24584:	ubfx	x5, x5, #8, #10
   24588:	cmp	w24, w5
   2458c:	b.ne	2455c <printf_parse@@Base+0x507c>  // b.any
   24590:	bl	20538 <printf_parse@@Base+0x1058>
   24594:	tst	w0, #0xff
   24598:	b.eq	24638 <printf_parse@@Base+0x5158>  // b.none
   2459c:	ldr	x2, [x20, #40]
   245a0:	mov	x0, x20
   245a4:	ldr	x1, [x20]
   245a8:	add	x26, x2, x26
   245ac:	ldr	x2, [x26, #16]
   245b0:	ldr	x21, [x2, #8]
   245b4:	lsl	x22, x21, #4
   245b8:	add	x1, x1, x22
   245bc:	ldp	x2, x3, [x1]
   245c0:	mov	x1, x2
   245c4:	mov	x2, x3
   245c8:	bl	212f8 <printf_parse@@Base+0x1e18>
   245cc:	mov	x19, x0
   245d0:	cmn	x0, #0x1
   245d4:	b.eq	24638 <printf_parse@@Base+0x5158>  // b.none
   245d8:	ldr	x3, [x20]
   245dc:	mov	x1, x0
   245e0:	and	w2, w24, #0x3ff
   245e4:	add	x5, x3, x22
   245e8:	mov	w4, w2
   245ec:	add	x3, x3, x0, lsl #4
   245f0:	ldr	w0, [x3, #8]
   245f4:	bfi	w0, w2, #8, #10
   245f8:	str	w0, [x3, #8]
   245fc:	and	w0, w0, #0xfff800ff
   24600:	ldr	w2, [x5, #8]
   24604:	ubfx	x2, x2, #8, #10
   24608:	orr	w2, w2, w4
   2460c:	ldp	x5, x4, [x20, #32]
   24610:	lsl	w2, w2, #8
   24614:	orr	w2, w2, #0x40000
   24618:	orr	w2, w2, w0
   2461c:	str	w2, [x3, #8]
   24620:	str	x21, [x5, x19, lsl #3]
   24624:	add	x0, x4, x23
   24628:	bl	20538 <printf_parse@@Base+0x1058>
   2462c:	tst	w0, #0xff
   24630:	b.ne	244dc <printf_parse@@Base+0x4ffc>  // b.any
   24634:	nop
   24638:	mov	w0, #0xc                   	// #12
   2463c:	ldp	x19, x20, [sp, #16]
   24640:	ldp	x21, x22, [sp, #32]
   24644:	ldp	x23, x24, [sp, #48]
   24648:	ldp	x25, x26, [sp, #64]
   2464c:	ldr	x27, [sp, #80]
   24650:	ldp	x29, x30, [sp], #96
   24654:	ret
   24658:	str	xzr, [x0, #8]
   2465c:	cmp	x21, x25
   24660:	ccmp	x21, x19, #0x4, eq  // eq = none
   24664:	b.ne	2487c <printf_parse@@Base+0x539c>  // b.any
   24668:	lsl	x22, x27, #4
   2466c:	ldr	w2, [x2, #8]
   24670:	add	x3, x3, x22
   24674:	mov	x0, x20
   24678:	ubfx	x2, x2, #8, #10
   2467c:	ldp	x4, x5, [x3]
   24680:	orr	w24, w24, w2
   24684:	mov	x1, x4
   24688:	mov	x2, x5
   2468c:	bl	212f8 <printf_parse@@Base+0x1e18>
   24690:	mov	x19, x0
   24694:	cmn	x0, #0x1
   24698:	b.eq	24638 <printf_parse@@Base+0x5158>  // b.none
   2469c:	ldr	x3, [x20]
   246a0:	mov	x1, x0
   246a4:	and	w2, w24, #0x3ff
   246a8:	add	x5, x3, x22
   246ac:	mov	w4, w2
   246b0:	add	x3, x3, x0, lsl #4
   246b4:	ldr	w0, [x3, #8]
   246b8:	bfi	w0, w2, #8, #10
   246bc:	str	w0, [x3, #8]
   246c0:	and	w0, w0, #0xfff800ff
   246c4:	ldr	w2, [x5, #8]
   246c8:	ubfx	x2, x2, #8, #10
   246cc:	orr	w2, w2, w4
   246d0:	ldp	x5, x4, [x20, #32]
   246d4:	lsl	w2, w2, #8
   246d8:	orr	w2, w2, #0x40000
   246dc:	orr	w2, w2, w0
   246e0:	str	w2, [x3, #8]
   246e4:	str	x27, [x5, x19, lsl #3]
   246e8:	add	x0, x4, x23
   246ec:	bl	20538 <printf_parse@@Base+0x1058>
   246f0:	tst	w0, #0xff
   246f4:	b.eq	24638 <printf_parse@@Base+0x5158>  // b.none
   246f8:	ldr	x3, [x20]
   246fc:	mov	x21, x27
   24700:	mov	x23, x19
   24704:	add	x2, x3, x22
   24708:	ldr	x5, [x20, #40]
   2470c:	ldrb	w0, [x2, #8]
   24710:	cmp	w0, #0x4
   24714:	b.ne	244f8 <printf_parse@@Base+0x5018>  // b.any
   24718:	ldr	x1, [x20, #24]
   2471c:	lsl	x27, x21, #3
   24720:	add	x19, x19, x19, lsl #1
   24724:	mov	x0, x20
   24728:	ldr	x21, [x1, x21, lsl #3]
   2472c:	lsl	x26, x19, #3
   24730:	add	x5, x5, x26
   24734:	lsl	x22, x21, #4
   24738:	add	x3, x3, x22
   2473c:	ldp	x2, x3, [x3]
   24740:	str	xzr, [x5, #8]
   24744:	mov	x1, x2
   24748:	mov	x2, x3
   2474c:	bl	212f8 <printf_parse@@Base+0x1e18>
   24750:	mov	x19, x0
   24754:	cmn	x0, #0x1
   24758:	b.eq	24638 <printf_parse@@Base+0x5158>  // b.none
   2475c:	ldr	x2, [x20]
   24760:	and	w0, w24, #0x3ff
   24764:	mov	w4, w0
   24768:	mov	x1, x19
   2476c:	add	x5, x2, x22
   24770:	add	x2, x2, x19, lsl #4
   24774:	ldr	w3, [x2, #8]
   24778:	bfi	w3, w0, #8, #10
   2477c:	str	w3, [x2, #8]
   24780:	and	w3, w3, #0xfff800ff
   24784:	ldr	w0, [x5, #8]
   24788:	ubfx	x0, x0, #8, #10
   2478c:	orr	w0, w0, w4
   24790:	ldp	x4, x5, [x20, #24]
   24794:	lsl	w0, w0, #8
   24798:	orr	w0, w0, #0x40000
   2479c:	orr	w0, w0, w3
   247a0:	str	w0, [x2, #8]
   247a4:	ldr	x0, [x20, #40]
   247a8:	str	x21, [x5, x19, lsl #3]
   247ac:	add	x0, x0, x26
   247b0:	ldr	x2, [x4, x27]
   247b4:	str	x2, [x4, x23, lsl #3]
   247b8:	bl	20538 <printf_parse@@Base+0x1058>
   247bc:	tst	w0, #0xff
   247c0:	b.ne	244dc <printf_parse@@Base+0x4ffc>  // b.any
   247c4:	b	24638 <printf_parse@@Base+0x5158>
   247c8:	lsl	x21, x27, #4
   247cc:	mov	x0, x20
   247d0:	add	x3, x3, x21
   247d4:	ldp	x2, x3, [x3]
   247d8:	mov	x1, x2
   247dc:	mov	x2, x3
   247e0:	bl	212f8 <printf_parse@@Base+0x1e18>
   247e4:	mov	x19, x0
   247e8:	cmn	x0, #0x1
   247ec:	b.eq	24638 <printf_parse@@Base+0x5158>  // b.none
   247f0:	ldr	x2, [x20]
   247f4:	and	w3, w24, #0x3ff
   247f8:	mov	w4, w3
   247fc:	mov	x1, x19
   24800:	add	x21, x2, x21
   24804:	add	x2, x2, x19, lsl #4
   24808:	ldr	w0, [x2, #8]
   2480c:	bfi	w0, w3, #8, #10
   24810:	str	w0, [x2, #8]
   24814:	and	w0, w0, #0xfff800ff
   24818:	ldr	w3, [x21, #8]
   2481c:	ubfx	x3, x3, #8, #10
   24820:	orr	w3, w3, w4
   24824:	ldp	x5, x4, [x20, #32]
   24828:	lsl	w3, w3, #8
   2482c:	orr	w3, w3, #0x40000
   24830:	orr	w3, w3, w0
   24834:	str	w3, [x2, #8]
   24838:	str	x27, [x5, x19, lsl #3]
   2483c:	add	x0, x4, x23
   24840:	bl	20538 <printf_parse@@Base+0x1058>
   24844:	tst	w0, #0xff
   24848:	b.eq	24638 <printf_parse@@Base+0x5158>  // b.none
   2484c:	mov	x2, x19
   24850:	mov	x1, x27
   24854:	mov	w4, w24
   24858:	mov	x3, x25
   2485c:	mov	x0, x20
   24860:	bl	244a8 <printf_parse@@Base+0x4fc8>
   24864:	cbz	w0, 2459c <printf_parse@@Base+0x50bc>
   24868:	b	2463c <printf_parse@@Base+0x515c>
   2486c:	ldr	x1, [x20, #24]
   24870:	ldr	x2, [x1, x21, lsl #3]
   24874:	str	x2, [x1, x19, lsl #3]
   24878:	b	2463c <printf_parse@@Base+0x515c>
   2487c:	mov	x1, x27
   24880:	bl	20538 <printf_parse@@Base+0x1058>
   24884:	tst	w0, #0xff
   24888:	mov	w0, #0x0                   	// #0
   2488c:	b.ne	2463c <printf_parse@@Base+0x515c>  // b.any
   24890:	b	24638 <printf_parse@@Base+0x5158>
   24894:	nop
   24898:	stp	x29, x30, [sp, #-144]!
   2489c:	mov	x29, sp
   248a0:	stp	x19, x20, [sp, #16]
   248a4:	add	x20, x2, x2, lsl #1
   248a8:	mov	x19, x1
   248ac:	stp	x23, x24, [sp, #48]
   248b0:	lsl	x20, x20, #3
   248b4:	ldr	x23, [x1, #40]
   248b8:	stp	x21, x22, [sp, #32]
   248bc:	mov	x22, x0
   248c0:	add	x23, x23, x20
   248c4:	mov	x21, x2
   248c8:	stp	x25, x26, [sp, #64]
   248cc:	and	w25, w3, #0xff
   248d0:	ldr	x0, [x23, #8]
   248d4:	add	x0, x0, #0x1
   248d8:	stp	x0, xzr, [sp, #96]
   248dc:	lsl	x0, x0, #3
   248e0:	bl	a5f0 <malloc@plt>
   248e4:	str	x0, [sp, #112]
   248e8:	cbz	x0, 24ad4 <printf_parse@@Base+0x55f4>
   248ec:	ldr	x2, [x19]
   248f0:	lsl	x24, x21, #4
   248f4:	ldr	x0, [x19, #48]
   248f8:	add	x1, x2, x24
   248fc:	mov	x3, #0xffffffffffffffff    	// #-1
   24900:	add	x0, x0, x20
   24904:	ldr	w4, [x1, #8]
   24908:	str	x3, [x0, #8]
   2490c:	tst	w4, #0x3ff00
   24910:	b.ne	24a5c <printf_parse@@Base+0x557c>  // b.any
   24914:	ldrb	w0, [x1, #8]
   24918:	tbz	w0, #3, 24aa0 <printf_parse@@Base+0x55c0>
   2491c:	ldr	x1, [x19, #40]
   24920:	add	x0, x1, x20
   24924:	ldr	x2, [x0, #8]
   24928:	cmp	x2, #0x0
   2492c:	b.le	24aa0 <printf_parse@@Base+0x55c0>
   24930:	add	x23, sp, #0x60
   24934:	mov	w24, #0x0                   	// #0
   24938:	stp	x27, x28, [sp, #80]
   2493c:	mov	x27, #0x0                   	// #0
   24940:	add	x28, sp, #0x78
   24944:	ldr	x0, [x0, #16]
   24948:	ldr	x3, [x19, #48]
   2494c:	ldr	x2, [x0, x27, lsl #3]
   24950:	add	x26, x2, x2, lsl #1
   24954:	lsl	x26, x26, #3
   24958:	add	x3, x3, x26
   2495c:	ldr	x0, [x3, #8]
   24960:	cmn	x0, #0x1
   24964:	b.eq	24a54 <printf_parse@@Base+0x5574>  // b.none
   24968:	cbz	x0, 24a20 <printf_parse@@Base+0x5540>
   2496c:	ldp	x0, x1, [x3]
   24970:	stp	x0, x1, [sp, #120]
   24974:	ldr	x0, [x3, #16]
   24978:	str	x0, [sp, #136]
   2497c:	mov	x1, x28
   24980:	mov	x0, x23
   24984:	bl	216b0 <printf_parse@@Base+0x21d0>
   24988:	cbnz	w0, 24a38 <printf_parse@@Base+0x5558>
   2498c:	ldr	x0, [x19, #48]
   24990:	add	x26, x0, x26
   24994:	ldr	x0, [x26, #8]
   24998:	cbz	x0, 24a10 <printf_parse@@Base+0x5530>
   2499c:	ldr	x1, [x19, #40]
   249a0:	add	x0, x1, x20
   249a4:	add	x27, x27, #0x1
   249a8:	ldr	x2, [x0, #8]
   249ac:	cmp	x2, x27
   249b0:	b.gt	24940 <printf_parse@@Base+0x5460>
   249b4:	mov	x1, x21
   249b8:	add	x0, sp, #0x60
   249bc:	bl	20538 <printf_parse@@Base+0x1058>
   249c0:	tst	w0, #0xff
   249c4:	b.eq	24ad0 <printf_parse@@Base+0x55f0>  // b.none
   249c8:	ldr	x0, [x19, #48]
   249cc:	eor	w25, w25, #0x1
   249d0:	tst	w24, w25
   249d4:	add	x1, x0, x20
   249d8:	b.eq	24af0 <printf_parse@@Base+0x5610>  // b.none
   249dc:	ldp	x27, x28, [sp, #80]
   249e0:	str	xzr, [x1, #8]
   249e4:	ldp	x2, x3, [sp, #96]
   249e8:	mov	w0, #0x0                   	// #0
   249ec:	ldr	x1, [sp, #112]
   249f0:	stp	x2, x3, [x22]
   249f4:	str	x1, [x22, #16]
   249f8:	ldp	x19, x20, [sp, #16]
   249fc:	ldp	x21, x22, [sp, #32]
   24a00:	ldp	x23, x24, [sp, #48]
   24a04:	ldp	x25, x26, [sp, #64]
   24a08:	ldp	x29, x30, [sp], #144
   24a0c:	ret
   24a10:	ldr	x0, [sp, #136]
   24a14:	mov	w24, #0x1                   	// #1
   24a18:	bl	aa50 <free@plt>
   24a1c:	b	2499c <printf_parse@@Base+0x54bc>
   24a20:	add	x28, sp, #0x78
   24a24:	mov	x1, x19
   24a28:	mov	x0, x28
   24a2c:	mov	w3, #0x0                   	// #0
   24a30:	bl	24898 <printf_parse@@Base+0x53b8>
   24a34:	cbz	w0, 2497c <printf_parse@@Base+0x549c>
   24a38:	ldp	x19, x20, [sp, #16]
   24a3c:	ldp	x21, x22, [sp, #32]
   24a40:	ldp	x23, x24, [sp, #48]
   24a44:	ldp	x25, x26, [sp, #64]
   24a48:	ldp	x27, x28, [sp, #80]
   24a4c:	ldp	x29, x30, [sp], #144
   24a50:	ret
   24a54:	mov	w24, #0x1                   	// #1
   24a58:	b	249a0 <printf_parse@@Base+0x54c0>
   24a5c:	ldr	x0, [x23, #8]
   24a60:	cbz	x0, 24aa0 <printf_parse@@Base+0x55c0>
   24a64:	ldr	x0, [x23, #16]
   24a68:	ldr	x0, [x0]
   24a6c:	add	x2, x2, x0, lsl #4
   24a70:	ldrb	w0, [x2, #10]
   24a74:	tbnz	w0, #2, 24914 <printf_parse@@Base+0x5434>
   24a78:	ubfx	x4, x4, #8, #10
   24a7c:	mov	x3, x21
   24a80:	mov	x2, x21
   24a84:	mov	x1, x21
   24a88:	mov	x0, x19
   24a8c:	bl	244a8 <printf_parse@@Base+0x4fc8>
   24a90:	cbnz	w0, 249f8 <printf_parse@@Base+0x5518>
   24a94:	ldr	x1, [x19]
   24a98:	add	x1, x1, x24
   24a9c:	b	24914 <printf_parse@@Base+0x5434>
   24aa0:	mov	x1, x21
   24aa4:	add	x0, sp, #0x60
   24aa8:	bl	20538 <printf_parse@@Base+0x1058>
   24aac:	tst	w0, #0xff
   24ab0:	b.eq	24ad4 <printf_parse@@Base+0x55f4>  // b.none
   24ab4:	ldr	x0, [x19, #48]
   24ab8:	add	x20, x0, x20
   24abc:	ldp	x0, x1, [sp, #96]
   24ac0:	stp	x0, x1, [x20]
   24ac4:	ldr	x0, [sp, #112]
   24ac8:	str	x0, [x20, #16]
   24acc:	b	249e4 <printf_parse@@Base+0x5504>
   24ad0:	ldp	x27, x28, [sp, #80]
   24ad4:	mov	w0, #0xc                   	// #12
   24ad8:	ldp	x19, x20, [sp, #16]
   24adc:	ldp	x21, x22, [sp, #32]
   24ae0:	ldp	x23, x24, [sp, #48]
   24ae4:	ldp	x25, x26, [sp, #64]
   24ae8:	ldp	x29, x30, [sp], #144
   24aec:	ret
   24af0:	ldp	x27, x28, [sp, #80]
   24af4:	b	24ab8 <printf_parse@@Base+0x55d8>
   24af8:	stp	x29, x30, [sp, #-64]!
   24afc:	mov	x29, sp
   24b00:	stp	x19, x20, [sp, #16]
   24b04:	mov	x19, x2
   24b08:	mov	w20, w4
   24b0c:	stp	x21, x22, [sp, #32]
   24b10:	mov	x22, x1
   24b14:	mov	x21, x3
   24b18:	str	x23, [sp, #48]
   24b1c:	mov	x23, x0
   24b20:	ldr	x2, [x22, #8]
   24b24:	cmp	x2, #0x0
   24b28:	b.le	24b68 <printf_parse@@Base+0x5688>
   24b2c:	sub	x2, x2, #0x1
   24b30:	mov	x3, #0x0                   	// #0
   24b34:	ldr	x0, [x22, #16]
   24b38:	b	24b50 <printf_parse@@Base+0x5670>
   24b3c:	lsr	x5, x5, #1
   24b40:	ldr	x1, [x0, x5, lsl #3]
   24b44:	cmp	x19, x1
   24b48:	b.gt	24bfc <printf_parse@@Base+0x571c>
   24b4c:	mov	x2, x5
   24b50:	add	x5, x2, x3
   24b54:	cmp	x2, x3
   24b58:	b.hi	24b3c <printf_parse@@Base+0x565c>  // b.pmore
   24b5c:	ldr	x0, [x0, x3, lsl #3]
   24b60:	cmp	x19, x0
   24b64:	b.eq	24c20 <printf_parse@@Base+0x5740>  // b.none
   24b68:	ldr	x1, [x23]
   24b6c:	lsl	x0, x19, #4
   24b70:	add	x2, x1, x0
   24b74:	ldrb	w2, [x2, #8]
   24b78:	cmp	w2, w20
   24b7c:	b.ne	24b8c <printf_parse@@Base+0x56ac>  // b.any
   24b80:	ldr	x0, [x1, x0]
   24b84:	cmp	x0, x21
   24b88:	b.eq	24c04 <printf_parse@@Base+0x5724>  // b.none
   24b8c:	mov	x1, x19
   24b90:	mov	x0, x22
   24b94:	bl	20538 <printf_parse@@Base+0x1058>
   24b98:	tst	w0, #0xff
   24b9c:	b.eq	24c38 <printf_parse@@Base+0x5758>  // b.none
   24ba0:	add	x19, x19, x19, lsl #1
   24ba4:	ldr	x2, [x23, #40]
   24ba8:	lsl	x19, x19, #3
   24bac:	add	x2, x2, x19
   24bb0:	ldr	x0, [x2, #8]
   24bb4:	cbz	x0, 24c20 <printf_parse@@Base+0x5740>
   24bb8:	cmp	x0, #0x2
   24bbc:	ldr	x0, [x2, #16]
   24bc0:	b.eq	24bcc <printf_parse@@Base+0x56ec>  // b.none
   24bc4:	ldr	x19, [x0]
   24bc8:	b	24b20 <printf_parse@@Base+0x5640>
   24bcc:	ldr	x2, [x0, #8]
   24bd0:	mov	w4, w20
   24bd4:	mov	x3, x21
   24bd8:	mov	x1, x22
   24bdc:	mov	x0, x23
   24be0:	bl	24af8 <printf_parse@@Base+0x5618>
   24be4:	cbnz	w0, 24c24 <printf_parse@@Base+0x5744>
   24be8:	ldr	x0, [x23, #40]
   24bec:	add	x19, x0, x19
   24bf0:	ldr	x0, [x19, #16]
   24bf4:	ldr	x19, [x0]
   24bf8:	b	24b20 <printf_parse@@Base+0x5640>
   24bfc:	add	x3, x5, #0x1
   24c00:	b	24b50 <printf_parse@@Base+0x5670>
   24c04:	cmp	w20, #0x9
   24c08:	b.ne	24c20 <printf_parse@@Base+0x5740>  // b.any
   24c0c:	mov	x1, x19
   24c10:	mov	x0, x22
   24c14:	bl	20538 <printf_parse@@Base+0x1058>
   24c18:	tst	w0, #0xff
   24c1c:	b.eq	24c38 <printf_parse@@Base+0x5758>  // b.none
   24c20:	mov	w0, #0x0                   	// #0
   24c24:	ldp	x19, x20, [sp, #16]
   24c28:	ldp	x21, x22, [sp, #32]
   24c2c:	ldr	x23, [sp, #48]
   24c30:	ldp	x29, x30, [sp], #64
   24c34:	ret
   24c38:	mov	w0, #0xc                   	// #12
   24c3c:	ldp	x19, x20, [sp, #16]
   24c40:	ldp	x21, x22, [sp, #32]
   24c44:	ldr	x23, [sp, #48]
   24c48:	ldp	x29, x30, [sp], #64
   24c4c:	ret
   24c50:	stp	x29, x30, [sp, #-112]!
   24c54:	mov	x29, sp
   24c58:	stp	x19, x20, [sp, #16]
   24c5c:	mov	w19, w3
   24c60:	ldr	x20, [x1, #8]
   24c64:	stp	x21, x22, [sp, #32]
   24c68:	mov	x21, x2
   24c6c:	stp	x23, x24, [sp, #48]
   24c70:	mov	x24, x0
   24c74:	lsl	x0, x20, #3
   24c78:	str	x25, [sp, #64]
   24c7c:	mov	x25, x1
   24c80:	stp	x20, xzr, [sp, #88]
   24c84:	bl	a5f0 <malloc@plt>
   24c88:	str	x0, [sp, #104]
   24c8c:	cbz	x0, 24da0 <printf_parse@@Base+0x58c0>
   24c90:	cmp	x20, #0x0
   24c94:	b.le	24d34 <printf_parse@@Base+0x5854>
   24c98:	add	x20, sp, #0x58
   24c9c:	mov	x23, #0x0                   	// #0
   24ca0:	ldr	x1, [x25, #16]
   24ca4:	ldr	x0, [x24, #48]
   24ca8:	ldr	x2, [x1, x23, lsl #3]
   24cac:	add	x1, x2, x2, lsl #1
   24cb0:	add	x1, x0, x1, lsl #3
   24cb4:	ldr	x10, [x1, #8]
   24cb8:	cmp	x10, #0x0
   24cbc:	b.le	24d6c <printf_parse@@Base+0x588c>
   24cc0:	mov	x5, #0x0                   	// #0
   24cc4:	ldr	x9, [x24]
   24cc8:	ldr	x4, [x1, #16]
   24ccc:	b	24cd8 <printf_parse@@Base+0x57f8>
   24cd0:	cmp	x10, x5
   24cd4:	b.eq	24d6c <printf_parse@@Base+0x588c>  // b.none
   24cd8:	ldr	x7, [x4, x5, lsl #3]
   24cdc:	add	x5, x5, #0x1
   24ce0:	lsl	x6, x7, #4
   24ce4:	add	x8, x9, x6
   24ce8:	ldrb	w8, [x8, #8]
   24cec:	cmp	w19, w8
   24cf0:	b.ne	24cd0 <printf_parse@@Base+0x57f0>  // b.any
   24cf4:	ldr	x6, [x9, x6]
   24cf8:	cmp	x21, x6
   24cfc:	b.ne	24cd0 <printf_parse@@Base+0x57f0>  // b.any
   24d00:	cmn	x7, #0x1
   24d04:	b.eq	24d6c <printf_parse@@Base+0x588c>  // b.none
   24d08:	mov	w4, w19
   24d0c:	mov	x3, x21
   24d10:	mov	x1, x20
   24d14:	mov	x0, x24
   24d18:	bl	24af8 <printf_parse@@Base+0x5618>
   24d1c:	mov	w22, w0
   24d20:	cbnz	w0, 24d7c <printf_parse@@Base+0x589c>
   24d24:	ldr	x0, [x25, #8]
   24d28:	add	x23, x23, #0x1
   24d2c:	cmp	x0, x23
   24d30:	b.gt	24ca0 <printf_parse@@Base+0x57c0>
   24d34:	ldr	x0, [x25, #16]
   24d38:	mov	w22, #0x0                   	// #0
   24d3c:	bl	aa50 <free@plt>
   24d40:	ldp	x0, x1, [sp, #88]
   24d44:	stp	x0, x1, [x25]
   24d48:	ldr	x0, [sp, #104]
   24d4c:	str	x0, [x25, #16]
   24d50:	mov	w0, w22
   24d54:	ldp	x19, x20, [sp, #16]
   24d58:	ldp	x21, x22, [sp, #32]
   24d5c:	ldp	x23, x24, [sp, #48]
   24d60:	ldr	x25, [sp, #64]
   24d64:	ldp	x29, x30, [sp], #112
   24d68:	ret
   24d6c:	mov	x0, x20
   24d70:	bl	216b0 <printf_parse@@Base+0x21d0>
   24d74:	mov	w22, w0
   24d78:	cbz	w0, 24d24 <printf_parse@@Base+0x5844>
   24d7c:	ldr	x0, [sp, #104]
   24d80:	bl	aa50 <free@plt>
   24d84:	mov	w0, w22
   24d88:	ldp	x19, x20, [sp, #16]
   24d8c:	ldp	x21, x22, [sp, #32]
   24d90:	ldp	x23, x24, [sp, #48]
   24d94:	ldr	x25, [sp, #64]
   24d98:	ldp	x29, x30, [sp], #112
   24d9c:	ret
   24da0:	mov	w22, #0xc                   	// #12
   24da4:	mov	w0, w22
   24da8:	ldp	x19, x20, [sp, #16]
   24dac:	ldp	x21, x22, [sp, #32]
   24db0:	ldp	x23, x24, [sp, #48]
   24db4:	ldr	x25, [sp, #64]
   24db8:	ldp	x29, x30, [sp], #112
   24dbc:	ret
   24dc0:	stp	x29, x30, [sp, #-48]!
   24dc4:	mov	x2, #0xffffffffffffffe     	// #1152921504606846974
   24dc8:	mov	x29, sp
   24dcc:	stp	x19, x20, [sp, #16]
   24dd0:	mov	x19, x0
   24dd4:	ldr	x0, [x0, #64]
   24dd8:	cmp	x0, x2
   24ddc:	b.hi	24f24 <printf_parse@@Base+0x5a44>  // b.pmore
   24de0:	ldr	x2, [x19, #88]
   24de4:	lsl	x20, x0, #1
   24de8:	sxtw	x1, w1
   24dec:	ldr	w0, [x19, #144]
   24df0:	cmp	x20, x2
   24df4:	csel	x20, x20, x2, le
   24df8:	cmp	x20, x1
   24dfc:	csel	x20, x20, x1, ge  // ge = tcont
   24e00:	cmp	w0, #0x1
   24e04:	b.le	24e44 <printf_parse@@Base+0x5964>
   24e08:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   24e0c:	cmp	x20, x0
   24e10:	b.hi	24f24 <printf_parse@@Base+0x5a44>  // b.pmore
   24e14:	ldr	x0, [x19, #16]
   24e18:	lsl	x1, x20, #2
   24e1c:	bl	a7e0 <realloc@plt>
   24e20:	mov	x1, x0
   24e24:	cbz	x0, 24f24 <printf_parse@@Base+0x5a44>
   24e28:	ldr	x0, [x19, #24]
   24e2c:	str	x1, [x19, #16]
   24e30:	cbz	x0, 24e44 <printf_parse@@Base+0x5964>
   24e34:	lsl	x1, x20, #3
   24e38:	bl	a7e0 <realloc@plt>
   24e3c:	cbz	x0, 24f24 <printf_parse@@Base+0x5a44>
   24e40:	str	x0, [x19, #24]
   24e44:	ldrb	w0, [x19, #139]
   24e48:	cbnz	w0, 24f34 <printf_parse@@Base+0x5a54>
   24e4c:	ldr	x0, [x19, #184]
   24e50:	str	x20, [x19, #64]
   24e54:	cbz	x0, 24e6c <printf_parse@@Base+0x598c>
   24e58:	add	x1, x20, #0x1
   24e5c:	lsl	x1, x1, #3
   24e60:	bl	a7e0 <realloc@plt>
   24e64:	cbz	x0, 24f24 <printf_parse@@Base+0x5a44>
   24e68:	str	x0, [x19, #184]
   24e6c:	ldrb	w0, [x19, #136]
   24e70:	ldr	w1, [x19, #144]
   24e74:	cmp	w1, #0x1
   24e78:	cbz	w0, 24e90 <printf_parse@@Base+0x59b0>
   24e7c:	b.le	24f64 <printf_parse@@Base+0x5a84>
   24e80:	mov	x0, x19
   24e84:	ldp	x19, x20, [sp, #16]
   24e88:	ldp	x29, x30, [sp], #48
   24e8c:	b	209d0 <printf_parse@@Base+0x14f0>
   24e90:	b.gt	24f4c <printf_parse@@Base+0x5a6c>
   24e94:	ldr	x3, [x19, #120]
   24e98:	mov	w0, #0x0                   	// #0
   24e9c:	cbz	x3, 24f18 <printf_parse@@Base+0x5a38>
   24ea0:	ldr	x2, [x19, #64]
   24ea4:	ldr	x0, [x19, #88]
   24ea8:	ldr	x1, [x19, #48]
   24eac:	cmp	x2, x0
   24eb0:	csel	x2, x2, x0, le
   24eb4:	cmp	x2, x1
   24eb8:	b.le	25000 <printf_parse@@Base+0x5b20>
   24ebc:	ldp	x4, x5, [x19]
   24ec0:	add	x0, x1, #0x1
   24ec4:	ldr	x6, [x19, #40]
   24ec8:	cmp	x2, x0
   24ecc:	add	x4, x4, x1
   24ed0:	ldrb	w4, [x4, x6]
   24ed4:	ldrb	w3, [x3, x4]
   24ed8:	strb	w3, [x5, x1]
   24edc:	b.le	24f0c <printf_parse@@Base+0x5a2c>
   24ee0:	ldr	x1, [x19]
   24ee4:	ldr	x3, [x19, #40]
   24ee8:	add	x1, x1, x0
   24eec:	ldr	x4, [x19, #120]
   24ef0:	ldrb	w3, [x1, x3]
   24ef4:	ldr	x1, [x19, #8]
   24ef8:	ldrb	w3, [x4, x3]
   24efc:	strb	w3, [x1, x0]
   24f00:	add	x0, x0, #0x1
   24f04:	cmp	x2, x0
   24f08:	b.ne	24ee0 <printf_parse@@Base+0x5a00>  // b.any
   24f0c:	dup	v0.2d, x2
   24f10:	mov	w0, #0x0                   	// #0
   24f14:	str	q0, [x19, #48]
   24f18:	ldp	x19, x20, [sp, #16]
   24f1c:	ldp	x29, x30, [sp], #48
   24f20:	ret
   24f24:	mov	w0, #0xc                   	// #12
   24f28:	ldp	x19, x20, [sp, #16]
   24f2c:	ldp	x29, x30, [sp], #48
   24f30:	ret
   24f34:	ldr	x0, [x19, #8]
   24f38:	mov	x1, x20
   24f3c:	bl	a7e0 <realloc@plt>
   24f40:	cbz	x0, 24f24 <printf_parse@@Base+0x5a44>
   24f44:	str	x0, [x19, #8]
   24f48:	b	24e4c <printf_parse@@Base+0x596c>
   24f4c:	mov	x0, x19
   24f50:	bl	207c8 <printf_parse@@Base+0x12e8>
   24f54:	mov	w0, #0x0                   	// #0
   24f58:	ldp	x19, x20, [sp, #16]
   24f5c:	ldp	x29, x30, [sp], #48
   24f60:	ret
   24f64:	ldr	x20, [x19, #48]
   24f68:	ldr	x0, [x19, #88]
   24f6c:	str	x21, [sp, #32]
   24f70:	ldr	x21, [x19, #64]
   24f74:	cmp	x21, x0
   24f78:	csel	x21, x21, x0, le
   24f7c:	cmp	x21, x20
   24f80:	b.le	25008 <printf_parse@@Base+0x5b28>
   24f84:	bl	a7f0 <__ctype_toupper_loc@plt>
   24f88:	b	24fa8 <printf_parse@@Base+0x5ac8>
   24f8c:	ldr	x2, [x0]
   24f90:	ldr	x1, [x19, #8]
   24f94:	ldr	w2, [x2, x3, lsl #2]
   24f98:	strb	w2, [x1, x20]
   24f9c:	add	x20, x20, #0x1
   24fa0:	cmp	x21, x20
   24fa4:	b.eq	24fe4 <printf_parse@@Base+0x5b04>  // b.none
   24fa8:	ldr	x1, [x19]
   24fac:	ldr	x3, [x19, #40]
   24fb0:	add	x1, x1, x20
   24fb4:	ldr	x2, [x19, #120]
   24fb8:	ldrb	w3, [x1, x3]
   24fbc:	and	x1, x3, #0xff
   24fc0:	cbz	x2, 24f8c <printf_parse@@Base+0x5aac>
   24fc4:	ldrb	w2, [x2, x1]
   24fc8:	ldr	x3, [x0]
   24fcc:	ldr	x1, [x19, #8]
   24fd0:	ldr	w2, [x3, x2, lsl #2]
   24fd4:	strb	w2, [x1, x20]
   24fd8:	add	x20, x20, #0x1
   24fdc:	cmp	x20, x21
   24fe0:	b.ne	24fa8 <printf_parse@@Base+0x5ac8>  // b.any
   24fe4:	dup	v0.2d, x21
   24fe8:	mov	w0, #0x0                   	// #0
   24fec:	ldr	x21, [sp, #32]
   24ff0:	str	q0, [x19, #48]
   24ff4:	ldp	x19, x20, [sp, #16]
   24ff8:	ldp	x29, x30, [sp], #48
   24ffc:	ret
   25000:	mov	x2, x1
   25004:	b	24f0c <printf_parse@@Base+0x5a2c>
   25008:	mov	x21, x20
   2500c:	b	24fe4 <printf_parse@@Base+0x5b04>
   25010:	stp	x29, x30, [sp, #-112]!
   25014:	mov	x29, sp
   25018:	stp	x21, x22, [sp, #32]
   2501c:	mov	x22, x0
   25020:	add	x21, x1, x1, lsl #1
   25024:	ldr	x0, [x0, #56]
   25028:	stp	xzr, xzr, [sp, #88]
   2502c:	str	xzr, [sp, #104]
   25030:	add	x21, x0, x21, lsl #3
   25034:	stp	x25, x26, [sp, #64]
   25038:	ldr	x8, [x21, #8]
   2503c:	cmp	x8, #0x0
   25040:	b.le	25350 <printf_parse@@Base+0x5e70>
   25044:	mov	x25, x3
   25048:	stp	x19, x20, [sp, #16]
   2504c:	mov	x20, x2
   25050:	stp	x23, x24, [sp, #48]
   25054:	mov	x23, x1
   25058:	add	x24, sp, #0x58
   2505c:	mov	x19, #0x0                   	// #0
   25060:	ldr	x5, [x21, #16]
   25064:	ldr	x4, [x5, x19, lsl #3]
   25068:	cmp	x23, x4
   2506c:	b.eq	251b0 <printf_parse@@Base+0x5cd0>  // b.none
   25070:	ldr	x0, [x22]
   25074:	add	x0, x0, x4, lsl #4
   25078:	ldrb	w0, [x0, #8]
   2507c:	tbz	w0, #3, 251b0 <printf_parse@@Base+0x5cd0>
   25080:	add	x4, x4, x4, lsl #1
   25084:	mov	x1, #0xffffffffffffffff    	// #-1
   25088:	ldr	x0, [x22, #40]
   2508c:	lsl	x6, x4, #3
   25090:	add	x0, x0, x6
   25094:	ldp	x2, x4, [x0, #8]
   25098:	cmp	x2, #0x1
   2509c:	b.le	250a4 <printf_parse@@Base+0x5bc4>
   250a0:	ldr	x1, [x4, #8]
   250a4:	sub	x2, x8, #0x1
   250a8:	mov	x0, x2
   250ac:	mov	x3, #0x0                   	// #0
   250b0:	ldr	x9, [x4]
   250b4:	b	250cc <printf_parse@@Base+0x5bec>
   250b8:	lsr	x4, x4, #1
   250bc:	ldr	x7, [x5, x4, lsl #3]
   250c0:	cmp	x9, x7
   250c4:	b.gt	2529c <printf_parse@@Base+0x5dbc>
   250c8:	mov	x0, x4
   250cc:	add	x4, x0, x3
   250d0:	cmp	x0, x3
   250d4:	b.hi	250b8 <printf_parse@@Base+0x5bd8>  // b.pmore
   250d8:	ldr	x0, [x5, x3, lsl #3]
   250dc:	cmp	x9, x0
   250e0:	b.eq	2512c <printf_parse@@Base+0x5c4c>  // b.none
   250e4:	ldr	x7, [x20, #8]
   250e8:	cmp	x7, #0x0
   250ec:	b.le	2512c <printf_parse@@Base+0x5c4c>
   250f0:	sub	x7, x7, #0x1
   250f4:	mov	x0, #0x0                   	// #0
   250f8:	ldr	x10, [x20, #16]
   250fc:	b	25114 <printf_parse@@Base+0x5c34>
   25100:	lsr	x4, x4, #1
   25104:	ldr	x3, [x10, x4, lsl #3]
   25108:	cmp	x9, x3
   2510c:	b.gt	25314 <printf_parse@@Base+0x5e34>
   25110:	mov	x7, x4
   25114:	add	x4, x7, x0
   25118:	cmp	x7, x0
   2511c:	b.hi	25100 <printf_parse@@Base+0x5c20>  // b.pmore
   25120:	ldr	x0, [x10, x0, lsl #3]
   25124:	cmp	x9, x0
   25128:	b.eq	252f0 <printf_parse@@Base+0x5e10>  // b.none
   2512c:	cmp	x1, #0x0
   25130:	mov	x0, #0x0                   	// #0
   25134:	b.gt	25150 <printf_parse@@Base+0x5c70>
   25138:	b	251b0 <printf_parse@@Base+0x5cd0>
   2513c:	lsr	x4, x4, #1
   25140:	ldr	x3, [x5, x4, lsl #3]
   25144:	cmp	x3, x1
   25148:	b.lt	2531c <printf_parse@@Base+0x5e3c>  // b.tstop
   2514c:	mov	x2, x4
   25150:	add	x4, x2, x0
   25154:	cmp	x2, x0
   25158:	b.hi	2513c <printf_parse@@Base+0x5c5c>  // b.pmore
   2515c:	ldr	x0, [x5, x0, lsl #3]
   25160:	cmp	x0, x1
   25164:	b.eq	251b0 <printf_parse@@Base+0x5cd0>  // b.none
   25168:	ldr	x2, [x20, #8]
   2516c:	cmp	x2, #0x0
   25170:	b.le	251b0 <printf_parse@@Base+0x5cd0>
   25174:	sub	x2, x2, #0x1
   25178:	mov	x0, #0x0                   	// #0
   2517c:	ldr	x5, [x20, #16]
   25180:	b	25198 <printf_parse@@Base+0x5cb8>
   25184:	lsr	x4, x4, #1
   25188:	ldr	x3, [x5, x4, lsl #3]
   2518c:	cmp	x3, x1
   25190:	b.lt	25324 <printf_parse@@Base+0x5e44>  // b.tstop
   25194:	mov	x2, x4
   25198:	add	x4, x2, x0
   2519c:	cmp	x2, x0
   251a0:	b.hi	25184 <printf_parse@@Base+0x5ca4>  // b.pmore
   251a4:	ldr	x0, [x5, x0, lsl #3]
   251a8:	cmp	x0, x1
   251ac:	b.eq	252f0 <printf_parse@@Base+0x5e10>  // b.none
   251b0:	add	x19, x19, #0x1
   251b4:	cmp	x19, x8
   251b8:	b.lt	25060 <printf_parse@@Base+0x5b80>  // b.tstop
   251bc:	cmp	x8, #0x0
   251c0:	ldr	x0, [sp, #104]
   251c4:	b.le	25270 <printf_parse@@Base+0x5d90>
   251c8:	ldr	x11, [x21, #16]
   251cc:	mov	x7, #0x0                   	// #0
   251d0:	ldr	x3, [sp, #96]
   251d4:	ldr	x4, [x11, x7, lsl #3]
   251d8:	cmp	x3, #0x0
   251dc:	b.le	25218 <printf_parse@@Base+0x5d38>
   251e0:	sub	x3, x3, #0x1
   251e4:	mov	x2, #0x0                   	// #0
   251e8:	b	25200 <printf_parse@@Base+0x5d20>
   251ec:	lsr	x1, x1, #1
   251f0:	ldr	x5, [x0, x1, lsl #3]
   251f4:	cmp	x4, x5
   251f8:	b.gt	25294 <printf_parse@@Base+0x5db4>
   251fc:	mov	x3, x1
   25200:	add	x1, x3, x2
   25204:	cmp	x3, x2
   25208:	b.hi	251ec <printf_parse@@Base+0x5d0c>  // b.pmore
   2520c:	ldr	x1, [x0, x2, lsl #3]
   25210:	cmp	x4, x1
   25214:	b.eq	25264 <printf_parse@@Base+0x5d84>  // b.none
   25218:	ldr	x9, [x20, #8]
   2521c:	cmp	x9, #0x0
   25220:	b.le	25264 <printf_parse@@Base+0x5d84>
   25224:	sub	x10, x9, #0x1
   25228:	mov	x3, #0x0                   	// #0
   2522c:	mov	x2, x10
   25230:	ldr	x5, [x20, #16]
   25234:	b	2524c <printf_parse@@Base+0x5d6c>
   25238:	lsr	x1, x1, #1
   2523c:	ldr	x6, [x5, x1, lsl #3]
   25240:	cmp	x4, x6
   25244:	b.gt	252e8 <printf_parse@@Base+0x5e08>
   25248:	mov	x2, x1
   2524c:	add	x1, x2, x3
   25250:	cmp	x2, x3
   25254:	b.hi	25238 <printf_parse@@Base+0x5d58>  // b.pmore
   25258:	ldr	x1, [x5, x3, lsl #3]
   2525c:	cmp	x4, x1
   25260:	b.eq	252a4 <printf_parse@@Base+0x5dc4>  // b.none
   25264:	add	x7, x7, #0x1
   25268:	cmp	x7, x8
   2526c:	b.lt	251d0 <printf_parse@@Base+0x5cf0>  // b.tstop
   25270:	ldp	x19, x20, [sp, #16]
   25274:	ldp	x23, x24, [sp, #48]
   25278:	bl	aa50 <free@plt>
   2527c:	mov	w26, #0x0                   	// #0
   25280:	mov	w0, w26
   25284:	ldp	x21, x22, [sp, #32]
   25288:	ldp	x25, x26, [sp, #64]
   2528c:	ldp	x29, x30, [sp], #112
   25290:	ret
   25294:	add	x2, x1, #0x1
   25298:	b	25200 <printf_parse@@Base+0x5d20>
   2529c:	add	x3, x4, #0x1
   252a0:	b	250cc <printf_parse@@Base+0x5bec>
   252a4:	cmp	x3, #0x0
   252a8:	mov	x1, x3
   252ac:	ccmp	x3, x9, #0x0, ge  // ge = tcont
   252b0:	b.ge	25264 <printf_parse@@Base+0x5d84>  // b.tcont
   252b4:	str	x10, [x20, #8]
   252b8:	cmp	x3, x10
   252bc:	add	x3, x5, #0x8
   252c0:	b.ge	252e0 <printf_parse@@Base+0x5e00>  // b.tcont
   252c4:	nop
   252c8:	ldr	x2, [x3, x1, lsl #3]
   252cc:	str	x2, [x5, x1, lsl #3]
   252d0:	add	x1, x1, #0x1
   252d4:	ldr	x2, [x20, #8]
   252d8:	cmp	x1, x2
   252dc:	b.lt	252c8 <printf_parse@@Base+0x5de8>  // b.tstop
   252e0:	ldr	x8, [x21, #8]
   252e4:	b	25264 <printf_parse@@Base+0x5d84>
   252e8:	add	x3, x1, #0x1
   252ec:	b	2524c <printf_parse@@Base+0x5d6c>
   252f0:	ldr	x2, [x22, #56]
   252f4:	mov	x1, x25
   252f8:	mov	x0, x24
   252fc:	add	x2, x2, x6
   25300:	bl	21858 <printf_parse@@Base+0x2378>
   25304:	mov	w26, w0
   25308:	cbnz	w0, 2532c <printf_parse@@Base+0x5e4c>
   2530c:	ldr	x8, [x21, #8]
   25310:	b	251b0 <printf_parse@@Base+0x5cd0>
   25314:	add	x0, x4, #0x1
   25318:	b	25114 <printf_parse@@Base+0x5c34>
   2531c:	add	x0, x4, #0x1
   25320:	b	25150 <printf_parse@@Base+0x5c70>
   25324:	add	x0, x4, #0x1
   25328:	b	25198 <printf_parse@@Base+0x5cb8>
   2532c:	ldr	x0, [sp, #104]
   25330:	bl	aa50 <free@plt>
   25334:	mov	w0, w26
   25338:	ldp	x19, x20, [sp, #16]
   2533c:	ldp	x21, x22, [sp, #32]
   25340:	ldp	x23, x24, [sp, #48]
   25344:	ldp	x25, x26, [sp, #64]
   25348:	ldp	x29, x30, [sp], #112
   2534c:	ret
   25350:	mov	x0, #0x0                   	// #0
   25354:	b	25278 <printf_parse@@Base+0x5d98>
   25358:	stp	x29, x30, [sp, #-192]!
   2535c:	adrp	x5, 34000 <vasnprintf@@Base+0x3848>
   25360:	tst	w4, #0xff
   25364:	mov	x29, sp
   25368:	ldr	q0, [x5, #1792]
   2536c:	stp	x19, x20, [sp, #16]
   25370:	mov	x20, x1
   25374:	ldr	x0, [x0]
   25378:	stp	x21, x22, [sp, #32]
   2537c:	mov	x19, x2
   25380:	stp	x23, x24, [sp, #48]
   25384:	mov	x24, x3
   25388:	stp	x25, x26, [sp, #64]
   2538c:	stp	x27, x28, [sp, #80]
   25390:	str	x0, [x29, #136]
   25394:	str	xzr, [x29, #160]
   25398:	str	q0, [x29, #144]
   2539c:	b.eq	25c04 <printf_parse@@Base+0x6724>  // b.none
   253a0:	mov	x0, #0x60                  	// #96
   253a4:	bl	a5f0 <malloc@plt>
   253a8:	str	x0, [x29, #160]
   253ac:	add	x28, x29, #0x90
   253b0:	cbz	x0, 25c9c <printf_parse@@Base+0x67bc>
   253b4:	ldr	x1, [x29, #136]
   253b8:	lsl	x0, x19, #4
   253bc:	str	x0, [x29, #128]
   253c0:	cmp	x0, #0xfbf
   253c4:	stp	xzr, xzr, [x29, #168]
   253c8:	str	xzr, [x29, #184]
   253cc:	ldr	x21, [x1, #144]
   253d0:	b.hi	25c28 <printf_parse@@Base+0x6748>  // b.pmore
   253d4:	sub	sp, sp, x0
   253d8:	str	wzr, [x29, #116]
   253dc:	mov	x0, sp
   253e0:	str	x0, [x29, #120]
   253e4:	ldp	x0, x2, [x29, #120]
   253e8:	mov	x1, x24
   253ec:	bl	a2c0 <memcpy@plt>
   253f0:	ldr	x25, [x24]
   253f4:	nop
   253f8:	ldr	x0, [x24, #8]
   253fc:	cmp	x0, x25
   25400:	b.lt	255b0 <printf_parse@@Base+0x60d0>  // b.tstop
   25404:	ldr	x1, [x29, #136]
   25408:	lsl	x22, x21, #4
   2540c:	mov	x26, x21
   25410:	ldr	x2, [x1]
   25414:	add	x8, x2, x22
   25418:	ldrb	w1, [x8, #8]
   2541c:	cmp	w1, #0x8
   25420:	b.eq	2576c <printf_parse@@Base+0x628c>  // b.none
   25424:	cmp	w1, #0x9
   25428:	b.eq	25854 <printf_parse@@Base+0x6374>  // b.none
   2542c:	cmp	x25, x0
   25430:	b.ne	25440 <printf_parse@@Base+0x5f60>  // b.any
   25434:	ldr	x0, [x20, #176]
   25438:	cmp	x0, x21
   2543c:	b.eq	25964 <printf_parse@@Base+0x6484>  // b.none
   25440:	ldr	x23, [x20, #152]
   25444:	ldr	x0, [x23]
   25448:	add	x2, x0, x22
   2544c:	ldrb	w1, [x2, #8]
   25450:	tbnz	w1, #3, 25798 <printf_parse@@Base+0x62b8>
   25454:	ldrb	w8, [x2, #10]
   25458:	tbnz	w8, #4, 2589c <printf_parse@@Base+0x63bc>
   2545c:	cmp	w1, #0x4
   25460:	b.eq	258dc <printf_parse@@Base+0x63fc>  // b.none
   25464:	ldr	x0, [x20, #8]
   25468:	cmp	w1, #0x5
   2546c:	ldrb	w0, [x0, x25]
   25470:	b.eq	25744 <printf_parse@@Base+0x6264>  // b.none
   25474:	b.hi	25738 <printf_parse@@Base+0x6258>  // b.pmore
   25478:	cmp	w1, #0x1
   2547c:	b.eq	25950 <printf_parse@@Base+0x6470>  // b.none
   25480:	cmp	w1, #0x3
   25484:	b.ne	25708 <printf_parse@@Base+0x6228>  // b.any
   25488:	ldr	x1, [x2]
   2548c:	ubfx	x5, x0, #6, #2
   25490:	ldr	x1, [x1, x5, lsl #3]
   25494:	lsr	x0, x1, x0
   25498:	tbz	w0, #0, 25708 <printf_parse@@Base+0x6228>
   2549c:	ldr	w22, [x2, #8]
   254a0:	tst	w22, #0x3ff00
   254a4:	b.eq	254d8 <printf_parse@@Base+0x5ff8>  // b.none
   254a8:	ldr	w2, [x20, #160]
   254ac:	mov	x1, x25
   254b0:	mov	x0, x20
   254b4:	bl	21a08 <printf_parse@@Base+0x2528>
   254b8:	ubfx	x1, x22, #8, #10
   254bc:	tbz	w22, #10, 25a5c <printf_parse@@Base+0x657c>
   254c0:	tbz	w0, #0, 25708 <printf_parse@@Base+0x6228>
   254c4:	tbnz	w1, #3, 25708 <printf_parse@@Base+0x6228>
   254c8:	tbz	w1, #5, 254d0 <printf_parse@@Base+0x5ff0>
   254cc:	tbz	w0, #1, 25708 <printf_parse@@Base+0x6228>
   254d0:	tbz	w1, #7, 254d8 <printf_parse@@Base+0x5ff8>
   254d4:	tbz	w0, #3, 25708 <printf_parse@@Base+0x6228>
   254d8:	ldr	x0, [x23, #24]
   254dc:	add	x25, x25, #0x1
   254e0:	ldr	x21, [x0, x26, lsl #3]
   254e4:	cbz	x28, 2572c <printf_parse@@Base+0x624c>
   254e8:	ldr	x0, [x20, #168]
   254ec:	cmp	x25, x0
   254f0:	b.gt	25548 <printf_parse@@Base+0x6068>
   254f4:	ldr	x0, [x20, #184]
   254f8:	ldr	x0, [x0, x25, lsl #3]
   254fc:	cbz	x0, 25548 <printf_parse@@Base+0x6068>
   25500:	ldr	x2, [x0, #16]
   25504:	cmp	x2, #0x0
   25508:	b.le	25548 <printf_parse@@Base+0x6068>
   2550c:	sub	x2, x2, #0x1
   25510:	mov	x1, #0x0                   	// #0
   25514:	ldr	x9, [x0, #24]
   25518:	b	25534 <printf_parse@@Base+0x6054>
   2551c:	add	x0, x2, x1
   25520:	lsr	x0, x0, #1
   25524:	ldr	x8, [x9, x0, lsl #3]
   25528:	cmp	x21, x8
   2552c:	b.gt	25764 <printf_parse@@Base+0x6284>
   25530:	mov	x2, x0
   25534:	cmp	x2, x1
   25538:	b.hi	2551c <printf_parse@@Base+0x603c>  // b.pmore
   2553c:	ldr	x0, [x9, x1, lsl #3]
   25540:	cmp	x21, x0
   25544:	b.eq	2572c <printf_parse@@Base+0x624c>  // b.none
   25548:	ldr	x0, [x28]
   2554c:	sub	x0, x0, #0x1
   25550:	str	x0, [x28]
   25554:	tbnz	x0, #63, 25cc0 <printf_parse@@Base+0x67e0>
   25558:	add	x0, x0, x0, lsl #1
   2555c:	ldr	x4, [x28, #16]
   25560:	lsl	x1, x0, #4
   25564:	ldr	x2, [x29, #128]
   25568:	add	x22, x4, x1
   2556c:	ldr	x25, [x4, x1]
   25570:	mov	x0, x24
   25574:	ldr	x1, [x22, #16]
   25578:	bl	a2c0 <memcpy@plt>
   2557c:	ldr	x0, [x29, #184]
   25580:	bl	aa50 <free@plt>
   25584:	ldr	x0, [x22, #16]
   25588:	bl	aa50 <free@plt>
   2558c:	ldp	x0, x1, [x22, #24]
   25590:	stp	x0, x1, [x29, #168]
   25594:	ldr	x0, [x22, #40]
   25598:	str	x0, [x29, #184]
   2559c:	ldr	x0, [x24, #8]
   255a0:	ldr	x21, [x22, #8]
   255a4:	cmp	x0, x25
   255a8:	b.ge	25404 <printf_parse@@Base+0x5f24>  // b.tcont
   255ac:	nop
   255b0:	ldr	x0, [x29, #184]
   255b4:	bl	aa50 <free@plt>
   255b8:	ldr	w0, [x29, #116]
   255bc:	cbnz	w0, 25ba0 <printf_parse@@Base+0x66c0>
   255c0:	cbz	x28, 25bc0 <printf_parse@@Base+0x66e0>
   255c4:	ldr	x20, [x28]
   255c8:	ldr	x21, [x28, #16]
   255cc:	cmp	x20, #0x0
   255d0:	b.le	255fc <printf_parse@@Base+0x611c>
   255d4:	add	x20, x20, x20, lsl #1
   255d8:	mov	x19, x21
   255dc:	add	x20, x21, x20, lsl #4
   255e0:	ldr	x0, [x19, #40]
   255e4:	add	x19, x19, #0x30
   255e8:	bl	aa50 <free@plt>
   255ec:	ldur	x0, [x19, #-32]
   255f0:	bl	aa50 <free@plt>
   255f4:	cmp	x20, x19
   255f8:	b.ne	255e0 <printf_parse@@Base+0x6100>  // b.any
   255fc:	mov	x0, x21
   25600:	mov	w19, #0x0                   	// #0
   25604:	bl	aa50 <free@plt>
   25608:	mov	sp, x29
   2560c:	mov	w0, w19
   25610:	ldp	x19, x20, [sp, #16]
   25614:	ldp	x21, x22, [sp, #32]
   25618:	ldp	x23, x24, [sp, #48]
   2561c:	ldp	x25, x26, [sp, #64]
   25620:	ldp	x27, x28, [sp, #80]
   25624:	ldp	x29, x30, [sp], #192
   25628:	ret
   2562c:	ldr	x22, [x29, #176]
   25630:	cmp	x22, #0x0
   25634:	b.le	25674 <printf_parse@@Base+0x6194>
   25638:	sub	x1, x22, #0x1
   2563c:	mov	x2, #0x0                   	// #0
   25640:	ldr	x9, [x29, #184]
   25644:	b	25660 <printf_parse@@Base+0x6180>
   25648:	add	x0, x1, x2
   2564c:	lsr	x0, x0, #1
   25650:	ldr	x8, [x9, x0, lsl #3]
   25654:	cmp	x8, x21
   25658:	b.lt	259e8 <printf_parse@@Base+0x6508>  // b.tstop
   2565c:	mov	x1, x0
   25660:	cmp	x1, x2
   25664:	b.hi	25648 <printf_parse@@Base+0x6168>  // b.pmore
   25668:	ldr	x0, [x9, x2, lsl #3]
   2566c:	cmp	x0, x21
   25670:	b.eq	25944 <printf_parse@@Base+0x6464>  // b.none
   25674:	cbz	x28, 256fc <printf_parse@@Base+0x621c>
   25678:	ldp	x23, x0, [x28]
   2567c:	ldr	x26, [x28, #16]
   25680:	add	x1, x23, #0x1
   25684:	str	x1, [x28]
   25688:	str	x1, [x29, #104]
   2568c:	cmp	x1, x0
   25690:	b.eq	25bd8 <printf_parse@@Base+0x66f8>  // b.none
   25694:	add	x23, x23, x23, lsl #1
   25698:	ldr	x0, [x29, #128]
   2569c:	lsl	x1, x23, #4
   256a0:	add	x23, x26, x1
   256a4:	str	x25, [x26, x1]
   256a8:	str	x27, [x23, #8]
   256ac:	bl	a5f0 <malloc@plt>
   256b0:	str	x0, [x23, #16]
   256b4:	cbz	x0, 25c7c <printf_parse@@Base+0x679c>
   256b8:	ldr	x2, [x29, #128]
   256bc:	add	x27, x23, #0x18
   256c0:	mov	x1, x24
   256c4:	bl	a2c0 <memcpy@plt>
   256c8:	str	x22, [x27, #8]
   256cc:	cmp	x22, #0x0
   256d0:	b.le	25bc8 <printf_parse@@Base+0x66e8>
   256d4:	lsl	x2, x22, #3
   256d8:	str	x22, [x23, #24]
   256dc:	mov	x0, x2
   256e0:	str	x2, [x29, #96]
   256e4:	bl	a5f0 <malloc@plt>
   256e8:	str	x0, [x27, #16]
   256ec:	ldr	x2, [x29, #96]
   256f0:	cbz	x0, 25c78 <printf_parse@@Base+0x6798>
   256f4:	ldr	x1, [x29, #184]
   256f8:	bl	a2c0 <memcpy@plt>
   256fc:	tbz	x21, #63, 253f8 <printf_parse@@Base+0x5f18>
   25700:	cmn	x21, #0x2
   25704:	b.eq	25b00 <printf_parse@@Base+0x6620>  // b.none
   25708:	cbnz	x28, 25548 <printf_parse@@Base+0x6068>
   2570c:	ldr	x0, [x29, #184]
   25710:	mov	w19, #0x1                   	// #1
   25714:	bl	aa50 <free@plt>
   25718:	ldr	w0, [x29, #116]
   2571c:	cbz	w0, 25608 <printf_parse@@Base+0x6128>
   25720:	ldr	x0, [x29, #120]
   25724:	bl	aa50 <free@plt>
   25728:	b	25608 <printf_parse@@Base+0x6128>
   2572c:	str	xzr, [x29, #176]
   25730:	tbz	x21, #63, 253f8 <printf_parse@@Base+0x5f18>
   25734:	b	25700 <printf_parse@@Base+0x6220>
   25738:	cmp	w1, #0x7
   2573c:	b.ne	25708 <printf_parse@@Base+0x6228>  // b.any
   25740:	tbnz	w0, #7, 25708 <printf_parse@@Base+0x6228>
   25744:	cmp	w0, #0xa
   25748:	b.eq	25a6c <printf_parse@@Base+0x658c>  // b.none
   2574c:	cbnz	w0, 2549c <printf_parse@@Base+0x5fbc>
   25750:	ldr	x0, [x20, #152]
   25754:	ldr	x0, [x0, #216]
   25758:	tbz	w0, #7, 2549c <printf_parse@@Base+0x5fbc>
   2575c:	cbnz	x28, 25548 <printf_parse@@Base+0x6068>
   25760:	b	2570c <printf_parse@@Base+0x622c>
   25764:	add	x1, x0, #0x1
   25768:	b	25534 <printf_parse@@Base+0x6054>
   2576c:	ldr	x1, [x2, x22]
   25770:	add	x1, x1, #0x1
   25774:	cmp	x19, x1
   25778:	b.le	2542c <printf_parse@@Base+0x5f4c>
   2577c:	lsl	x1, x1, #4
   25780:	add	x0, x24, x1
   25784:	str	x25, [x24, x1]
   25788:	mov	x1, #0xffffffffffffffff    	// #-1
   2578c:	str	x1, [x0, #8]
   25790:	ldr	x0, [x24, #8]
   25794:	b	2542c <printf_parse@@Base+0x5f4c>
   25798:	ldr	x0, [x23, #40]
   2579c:	add	x23, x21, x21, lsl #1
   257a0:	ldr	x2, [x20, #184]
   257a4:	mov	x1, x21
   257a8:	add	x23, x0, x23, lsl #3
   257ac:	add	x0, x29, #0xa8
   257b0:	ldr	x22, [x2, x25, lsl #3]
   257b4:	bl	20538 <printf_parse@@Base+0x1058>
   257b8:	tst	w0, #0xff
   257bc:	b.eq	25b00 <printf_parse@@Base+0x6620>  // b.none
   257c0:	ldr	x11, [x23, #8]
   257c4:	cmp	x11, #0x0
   257c8:	b.le	25708 <printf_parse@@Base+0x6228>
   257cc:	ldr	x12, [x22, #16]
   257d0:	mov	x21, #0xffffffffffffffff    	// #-1
   257d4:	ldr	x14, [x23, #16]
   257d8:	add	x13, x12, x21
   257dc:	mov	x1, #0x0                   	// #0
   257e0:	cmp	x12, #0x0
   257e4:	b.le	25828 <printf_parse@@Base+0x6348>
   257e8:	mov	x8, x13
   257ec:	mov	x2, #0x0                   	// #0
   257f0:	ldr	x27, [x14, x1, lsl #3]
   257f4:	ldr	x9, [x22, #24]
   257f8:	b	25814 <printf_parse@@Base+0x6334>
   257fc:	add	x0, x8, x2
   25800:	lsr	x0, x0, #1
   25804:	ldr	x10, [x9, x0, lsl #3]
   25808:	cmp	x27, x10
   2580c:	b.gt	2584c <printf_parse@@Base+0x636c>
   25810:	mov	x8, x0
   25814:	cmp	x8, x2
   25818:	b.hi	257fc <printf_parse@@Base+0x631c>  // b.pmore
   2581c:	ldr	x0, [x9, x2, lsl #3]
   25820:	cmp	x27, x0
   25824:	b.eq	2583c <printf_parse@@Base+0x635c>  // b.none
   25828:	add	x1, x1, #0x1
   2582c:	cmp	x1, x11
   25830:	b.ne	257e0 <printf_parse@@Base+0x6300>  // b.any
   25834:	tbz	x21, #63, 253f8 <printf_parse@@Base+0x5f18>
   25838:	b	25700 <printf_parse@@Base+0x6220>
   2583c:	cmn	x21, #0x1
   25840:	b.ne	2562c <printf_parse@@Base+0x614c>  // b.any
   25844:	mov	x21, x27
   25848:	b	25828 <printf_parse@@Base+0x6348>
   2584c:	add	x2, x0, #0x1
   25850:	b	25814 <printf_parse@@Base+0x6334>
   25854:	ldr	x1, [x8]
   25858:	add	x1, x1, #0x1
   2585c:	cmp	x19, x1
   25860:	b.le	2542c <printf_parse@@Base+0x5f4c>
   25864:	lsl	x1, x1, #4
   25868:	add	x2, x24, x1
   2586c:	ldr	x0, [x24, x1]
   25870:	cmp	x0, x25
   25874:	b.lt	25b64 <printf_parse@@Base+0x6684>  // b.tstop
   25878:	ldrb	w0, [x8, #10]
   2587c:	tbz	w0, #3, 25890 <printf_parse@@Base+0x63b0>
   25880:	ldr	x3, [x29, #120]
   25884:	ldr	x0, [x3, x1]
   25888:	cmn	x0, #0x1
   2588c:	b.ne	25b88 <printf_parse@@Base+0x66a8>  // b.any
   25890:	str	x25, [x2, #8]
   25894:	ldr	x0, [x24, #8]
   25898:	b	2542c <printf_parse@@Base+0x5f4c>
   2589c:	mov	x4, x25
   258a0:	mov	x3, x20
   258a4:	mov	x2, x21
   258a8:	add	x1, x23, #0xd8
   258ac:	bl	23dc0 <printf_parse@@Base+0x48e0>
   258b0:	sxtw	x27, w0
   258b4:	cbnz	w0, 258cc <printf_parse@@Base+0x63ec>
   258b8:	ldr	x2, [x23]
   258bc:	add	x2, x2, x22
   258c0:	ldrb	w1, [x2, #8]
   258c4:	b	25464 <printf_parse@@Base+0x5f84>
   258c8:	cbz	x27, 25a80 <printf_parse@@Base+0x65a0>
   258cc:	ldr	x0, [x23, #24]
   258d0:	add	x25, x25, x27
   258d4:	ldr	x21, [x0, x21, lsl #3]
   258d8:	b	254e4 <printf_parse@@Base+0x6004>
   258dc:	ldr	x0, [x2]
   258e0:	add	x0, x0, #0x1
   258e4:	lsl	x0, x0, #4
   258e8:	add	x1, x24, x0
   258ec:	ldr	x0, [x24, x0]
   258f0:	ldr	x1, [x1, #8]
   258f4:	sub	x27, x1, x0
   258f8:	cbz	x28, 258c8 <printf_parse@@Base+0x63e8>
   258fc:	cmn	x0, #0x1
   25900:	ccmn	x1, #0x1, #0x4, ne  // ne = any
   25904:	b.eq	25548 <printf_parse@@Base+0x6068>  // b.none
   25908:	cbz	x27, 25a80 <printf_parse@@Base+0x65a0>
   2590c:	ldr	x2, [x20, #48]
   25910:	ldr	x1, [x20, #8]
   25914:	sub	x2, x2, x25
   25918:	cmp	x27, x2
   2591c:	b.gt	25548 <printf_parse@@Base+0x6068>
   25920:	add	x0, x1, x0
   25924:	mov	x2, x27
   25928:	add	x1, x1, x25
   2592c:	bl	a970 <memcmp@plt>
   25930:	cbnz	w0, 25548 <printf_parse@@Base+0x6068>
   25934:	ldr	x0, [x23, #24]
   25938:	add	x25, x25, x27
   2593c:	ldr	x21, [x0, x21, lsl #3]
   25940:	b	254e4 <printf_parse@@Base+0x6004>
   25944:	mov	x21, x27
   25948:	tbz	x21, #63, 253f8 <printf_parse@@Base+0x5f18>
   2594c:	b	25700 <printf_parse@@Base+0x6220>
   25950:	ldrb	w1, [x2]
   25954:	cmp	w1, w0
   25958:	b.eq	2549c <printf_parse@@Base+0x5fbc>  // b.none
   2595c:	cbnz	x28, 25548 <printf_parse@@Base+0x6068>
   25960:	b	2570c <printf_parse@@Base+0x622c>
   25964:	cbz	x28, 25bb0 <printf_parse@@Base+0x66d0>
   25968:	cbz	x19, 2599c <printf_parse@@Base+0x64bc>
   2596c:	mov	x0, x24
   25970:	mov	x1, #0x0                   	// #0
   25974:	nop
   25978:	ldr	x2, [x0]
   2597c:	tbnz	x2, #63, 2598c <printf_parse@@Base+0x64ac>
   25980:	ldr	x2, [x0, #8]
   25984:	cmn	x2, #0x1
   25988:	b.eq	259f0 <printf_parse@@Base+0x6510>  // b.none
   2598c:	add	x1, x1, #0x1
   25990:	add	x0, x0, #0x10
   25994:	cmp	x19, x1
   25998:	b.ne	25978 <printf_parse@@Base+0x6498>  // b.any
   2599c:	ldr	x0, [x29, #184]
   259a0:	bl	aa50 <free@plt>
   259a4:	ldr	w0, [x29, #116]
   259a8:	cbnz	w0, 25cb4 <printf_parse@@Base+0x67d4>
   259ac:	ldr	x0, [x28]
   259b0:	ldr	x21, [x28, #16]
   259b4:	cmp	x0, #0x0
   259b8:	b.le	255fc <printf_parse@@Base+0x611c>
   259bc:	add	x0, x0, x0, lsl #1
   259c0:	mov	x19, x21
   259c4:	add	x20, x21, x0, lsl #4
   259c8:	ldr	x0, [x19, #40]
   259cc:	add	x19, x19, #0x30
   259d0:	bl	aa50 <free@plt>
   259d4:	ldur	x0, [x19, #-32]
   259d8:	bl	aa50 <free@plt>
   259dc:	cmp	x20, x19
   259e0:	b.ne	259c8 <printf_parse@@Base+0x64e8>  // b.any
   259e4:	b	255fc <printf_parse@@Base+0x611c>
   259e8:	add	x2, x0, #0x1
   259ec:	b	25660 <printf_parse@@Base+0x6180>
   259f0:	cmp	x19, x1
   259f4:	ldr	x0, [x28]
   259f8:	b.eq	2599c <printf_parse@@Base+0x64bc>  // b.none
   259fc:	sub	x0, x0, #0x1
   25a00:	str	x0, [x28]
   25a04:	tbnz	x0, #63, 25cc0 <printf_parse@@Base+0x67e0>
   25a08:	add	x0, x0, x0, lsl #1
   25a0c:	ldr	x4, [x28, #16]
   25a10:	lsl	x1, x0, #4
   25a14:	ldr	x2, [x29, #128]
   25a18:	add	x22, x4, x1
   25a1c:	ldr	x25, [x4, x1]
   25a20:	mov	x0, x24
   25a24:	ldr	x1, [x22, #16]
   25a28:	bl	a2c0 <memcpy@plt>
   25a2c:	ldr	x0, [x29, #184]
   25a30:	bl	aa50 <free@plt>
   25a34:	ldr	x0, [x22, #16]
   25a38:	bl	aa50 <free@plt>
   25a3c:	ldr	x21, [x22, #8]
   25a40:	ldp	x8, x9, [x22, #24]
   25a44:	mov	x26, x21
   25a48:	ldr	x0, [x22, #40]
   25a4c:	lsl	x22, x21, #4
   25a50:	stp	x8, x9, [x29, #168]
   25a54:	str	x0, [x29, #184]
   25a58:	b	25440 <printf_parse@@Base+0x5f60>
   25a5c:	tbz	w1, #3, 254c8 <printf_parse@@Base+0x5fe8>
   25a60:	tbz	w0, #0, 254c8 <printf_parse@@Base+0x5fe8>
   25a64:	cbnz	x28, 25548 <printf_parse@@Base+0x6068>
   25a68:	b	2570c <printf_parse@@Base+0x622c>
   25a6c:	ldr	x0, [x20, #152]
   25a70:	ldr	x0, [x0, #216]
   25a74:	tbnz	w0, #6, 2549c <printf_parse@@Base+0x5fbc>
   25a78:	cbnz	x28, 25548 <printf_parse@@Base+0x6068>
   25a7c:	b	2570c <printf_parse@@Base+0x622c>
   25a80:	mov	x1, x21
   25a84:	add	x0, x29, #0xa8
   25a88:	bl	20538 <printf_parse@@Base+0x1058>
   25a8c:	tst	w0, #0xff
   25a90:	b.eq	25b00 <printf_parse@@Base+0x6620>  // b.none
   25a94:	ldr	x0, [x20, #184]
   25a98:	ldr	x0, [x0, x25, lsl #3]
   25a9c:	ldr	x1, [x0, #16]
   25aa0:	cmp	x1, #0x0
   25aa4:	b.le	258b8 <printf_parse@@Base+0x63d8>
   25aa8:	ldr	x8, [x23, #40]
   25aac:	add	x5, x21, x21, lsl #1
   25ab0:	ldr	x9, [x0, #24]
   25ab4:	sub	x1, x1, #0x1
   25ab8:	add	x0, x8, x5, lsl #3
   25abc:	mov	x2, #0x0                   	// #0
   25ac0:	ldr	x0, [x0, #16]
   25ac4:	ldr	x8, [x0]
   25ac8:	b	25ae4 <printf_parse@@Base+0x6604>
   25acc:	add	x0, x1, x2
   25ad0:	lsr	x0, x0, #1
   25ad4:	ldr	x5, [x9, x0, lsl #3]
   25ad8:	cmp	x8, x5
   25adc:	b.gt	25b80 <printf_parse@@Base+0x66a0>
   25ae0:	mov	x1, x0
   25ae4:	cmp	x1, x2
   25ae8:	b.hi	25acc <printf_parse@@Base+0x65ec>  // b.pmore
   25aec:	ldr	x21, [x9, x2, lsl #3]
   25af0:	cmp	x8, x21
   25af4:	b.ne	258b8 <printf_parse@@Base+0x63d8>  // b.any
   25af8:	tbz	x21, #63, 253f8 <printf_parse@@Base+0x5f18>
   25afc:	b	25700 <printf_parse@@Base+0x6220>
   25b00:	ldr	x0, [x29, #184]
   25b04:	bl	aa50 <free@plt>
   25b08:	ldr	w0, [x29, #116]
   25b0c:	cbnz	w0, 25c90 <printf_parse@@Base+0x67b0>
   25b10:	cbz	x28, 25c9c <printf_parse@@Base+0x67bc>
   25b14:	ldr	x26, [x28, #16]
   25b18:	ldr	x0, [x28]
   25b1c:	str	x0, [x29, #104]
   25b20:	ldr	x0, [x29, #104]
   25b24:	cmp	x0, #0x0
   25b28:	b.le	25b54 <printf_parse@@Base+0x6674>
   25b2c:	add	x22, x0, x0, lsl #1
   25b30:	mov	x19, x26
   25b34:	add	x22, x26, x22, lsl #4
   25b38:	ldr	x0, [x19, #40]
   25b3c:	add	x19, x19, #0x30
   25b40:	bl	aa50 <free@plt>
   25b44:	ldur	x0, [x19, #-32]
   25b48:	bl	aa50 <free@plt>
   25b4c:	cmp	x22, x19
   25b50:	b.ne	25b38 <printf_parse@@Base+0x6658>  // b.any
   25b54:	mov	x0, x26
   25b58:	mov	w19, #0xc                   	// #12
   25b5c:	bl	aa50 <free@plt>
   25b60:	b	25608 <printf_parse@@Base+0x6128>
   25b64:	str	x25, [x2, #8]
   25b68:	mov	x1, x24
   25b6c:	ldr	x0, [x29, #120]
   25b70:	ldr	x2, [x29, #128]
   25b74:	bl	a2c0 <memcpy@plt>
   25b78:	ldr	x0, [x24, #8]
   25b7c:	b	2542c <printf_parse@@Base+0x5f4c>
   25b80:	add	x2, x0, #0x1
   25b84:	b	25ae4 <printf_parse@@Base+0x6604>
   25b88:	ldr	x2, [x29, #128]
   25b8c:	mov	x1, x3
   25b90:	mov	x0, x24
   25b94:	bl	a2c0 <memcpy@plt>
   25b98:	ldr	x0, [x24, #8]
   25b9c:	b	2542c <printf_parse@@Base+0x5f4c>
   25ba0:	ldr	x0, [x29, #120]
   25ba4:	bl	aa50 <free@plt>
   25ba8:	cbnz	x28, 255c4 <printf_parse@@Base+0x60e4>
   25bac:	b	25bc0 <printf_parse@@Base+0x66e0>
   25bb0:	ldr	x0, [x29, #184]
   25bb4:	bl	aa50 <free@plt>
   25bb8:	ldr	w0, [x29, #116]
   25bbc:	cbnz	w0, 25ca4 <printf_parse@@Base+0x67c4>
   25bc0:	mov	w19, #0x0                   	// #0
   25bc4:	b	25608 <printf_parse@@Base+0x6128>
   25bc8:	stp	xzr, xzr, [x23, #24]
   25bcc:	str	xzr, [x27, #16]
   25bd0:	tbz	x21, #63, 253f8 <printf_parse@@Base+0x5f18>
   25bd4:	b	25700 <printf_parse@@Base+0x6220>
   25bd8:	lsl	x2, x1, #1
   25bdc:	mov	x0, x26
   25be0:	add	x1, x2, x1
   25be4:	str	x2, [x29, #96]
   25be8:	lsl	x1, x1, #5
   25bec:	bl	a7e0 <realloc@plt>
   25bf0:	cbz	x0, 25c7c <printf_parse@@Base+0x679c>
   25bf4:	ldr	x2, [x29, #96]
   25bf8:	mov	x26, x0
   25bfc:	stp	x2, x0, [x28, #8]
   25c00:	b	25694 <printf_parse@@Base+0x61b4>
   25c04:	ldr	x1, [x29, #136]
   25c08:	lsl	x0, x19, #4
   25c0c:	str	x0, [x29, #128]
   25c10:	cmp	x0, #0xfbf
   25c14:	stp	xzr, xzr, [x29, #168]
   25c18:	mov	x28, #0x0                   	// #0
   25c1c:	str	xzr, [x29, #184]
   25c20:	ldr	x21, [x1, #144]
   25c24:	b.ls	253d4 <printf_parse@@Base+0x5ef4>  // b.plast
   25c28:	bl	a5f0 <malloc@plt>
   25c2c:	str	x0, [x29, #120]
   25c30:	mov	w1, #0x1                   	// #1
   25c34:	str	w1, [x29, #116]
   25c38:	cbnz	x0, 253e4 <printf_parse@@Base+0x5f04>
   25c3c:	cbz	x28, 25c9c <printf_parse@@Base+0x67bc>
   25c40:	mov	x20, #0x0                   	// #0
   25c44:	mov	x21, #0x30                  	// #48
   25c48:	b	25c64 <printf_parse@@Base+0x6784>
   25c4c:	madd	x19, x20, x21, x0
   25c50:	add	x20, x20, #0x1
   25c54:	ldr	x0, [x19, #40]
   25c58:	bl	aa50 <free@plt>
   25c5c:	ldr	x0, [x19, #16]
   25c60:	bl	aa50 <free@plt>
   25c64:	ldr	x1, [x28]
   25c68:	ldr	x0, [x28, #16]
   25c6c:	cmp	x20, x1
   25c70:	b.lt	25c4c <printf_parse@@Base+0x676c>  // b.tstop
   25c74:	b	25b58 <printf_parse@@Base+0x6678>
   25c78:	stp	xzr, xzr, [x23, #24]
   25c7c:	ldr	x0, [x29, #184]
   25c80:	bl	aa50 <free@plt>
   25c84:	ldr	w0, [x29, #116]
   25c88:	cbz	w0, 25b20 <printf_parse@@Base+0x6640>
   25c8c:	nop
   25c90:	ldr	x0, [x29, #120]
   25c94:	bl	aa50 <free@plt>
   25c98:	b	25b10 <printf_parse@@Base+0x6630>
   25c9c:	mov	w19, #0xc                   	// #12
   25ca0:	b	25608 <printf_parse@@Base+0x6128>
   25ca4:	ldr	x0, [x29, #120]
   25ca8:	mov	w19, #0x0                   	// #0
   25cac:	bl	aa50 <free@plt>
   25cb0:	b	25608 <printf_parse@@Base+0x6128>
   25cb4:	ldr	x0, [x29, #120]
   25cb8:	bl	aa50 <free@plt>
   25cbc:	b	259ac <printf_parse@@Base+0x64cc>
   25cc0:	bl	22610 <printf_parse@@Base+0x3130>
   25cc4:	nop
   25cc8:	stp	x29, x30, [sp, #-80]!
   25ccc:	mov	x29, sp
   25cd0:	stp	x21, x22, [sp, #32]
   25cd4:	mov	x21, x0
   25cd8:	ldr	x22, [x2, #8]
   25cdc:	stp	x19, x20, [sp, #16]
   25ce0:	cbz	x22, 25fc0 <printf_parse@@Base+0x6ae0>
   25ce4:	stp	x23, x24, [sp, #48]
   25ce8:	cmp	x22, #0x0
   25cec:	mov	x24, x2
   25cf0:	str	x25, [sp, #64]
   25cf4:	mov	x25, x1
   25cf8:	b.le	25fdc <printf_parse@@Base+0x6afc>
   25cfc:	sub	x0, x22, #0x1
   25d00:	cmp	x0, #0x2
   25d04:	ldr	x2, [x2, #16]
   25d08:	b.ls	25fe4 <printf_parse@@Base+0x6b04>  // b.plast
   25d0c:	lsr	x1, x22, #1
   25d10:	mov	x0, x2
   25d14:	movi	v0.4s, #0x0
   25d18:	add	x1, x2, x1, lsl #4
   25d1c:	nop
   25d20:	ldr	q1, [x0], #16
   25d24:	add	v0.2d, v0.2d, v1.2d
   25d28:	cmp	x1, x0
   25d2c:	b.ne	25d20 <printf_parse@@Base+0x6840>  // b.any
   25d30:	addp	d0, v0.2d
   25d34:	and	x0, x22, #0xfffffffffffffffe
   25d38:	mov	x20, v0.d[0]
   25d3c:	add	x20, x22, x20
   25d40:	tbz	w22, #0, 25d7c <printf_parse@@Base+0x689c>
   25d44:	ldr	x1, [x2, x0, lsl #3]
   25d48:	add	x3, x0, #0x1
   25d4c:	cmp	x22, x3
   25d50:	lsl	x3, x0, #3
   25d54:	add	x20, x20, x1
   25d58:	b.le	25d7c <printf_parse@@Base+0x689c>
   25d5c:	add	x2, x2, x3
   25d60:	add	x0, x0, #0x2
   25d64:	cmp	x22, x0
   25d68:	ldr	x0, [x2, #8]
   25d6c:	add	x20, x20, x0
   25d70:	b.le	25d7c <printf_parse@@Base+0x689c>
   25d74:	ldr	x0, [x2, #16]
   25d78:	add	x20, x20, x0
   25d7c:	ldr	x0, [x25, #136]
   25d80:	ldr	x1, [x25, #64]
   25d84:	and	x0, x20, x0
   25d88:	add	x0, x0, x0, lsl #1
   25d8c:	lsl	x0, x0, #3
   25d90:	add	x2, x1, x0
   25d94:	ldr	x1, [x1, x0]
   25d98:	cmp	x1, #0x0
   25d9c:	b.le	25de4 <printf_parse@@Base+0x6904>
   25da0:	mov	x4, #0x0                   	// #0
   25da4:	ldr	x2, [x2, #16]
   25da8:	b	25db8 <printf_parse@@Base+0x68d8>
   25dac:	add	x4, x4, #0x1
   25db0:	cmp	x1, x4
   25db4:	b.eq	25de4 <printf_parse@@Base+0x6904>  // b.none
   25db8:	ldr	x19, [x2, x4, lsl #3]
   25dbc:	ldr	x0, [x19]
   25dc0:	cmp	x0, x20
   25dc4:	b.ne	25dac <printf_parse@@Base+0x68cc>  // b.any
   25dc8:	ldr	x3, [x19, #16]
   25dcc:	add	x7, x19, #0x8
   25dd0:	cmp	x22, x3
   25dd4:	b.eq	25ef4 <printf_parse@@Base+0x6a14>  // b.none
   25dd8:	add	x4, x4, #0x1
   25ddc:	cmp	x1, x4
   25de0:	b.ne	25db8 <printf_parse@@Base+0x68d8>  // b.any
   25de4:	mov	x1, #0x1                   	// #1
   25de8:	mov	x0, #0x70                  	// #112
   25dec:	bl	a770 <calloc@plt>
   25df0:	mov	x19, x0
   25df4:	cbz	x0, 25f84 <printf_parse@@Base+0x6aa4>
   25df8:	str	x22, [x0, #16]
   25dfc:	add	x23, x0, #0x8
   25e00:	cmp	x22, #0x0
   25e04:	b.le	25f18 <printf_parse@@Base+0x6a38>
   25e08:	str	x22, [x0, #8]
   25e0c:	lsl	x22, x22, #3
   25e10:	mov	x0, x22
   25e14:	bl	a5f0 <malloc@plt>
   25e18:	str	x0, [x23, #16]
   25e1c:	cbz	x0, 25f7c <printf_parse@@Base+0x6a9c>
   25e20:	ldr	x24, [x24, #16]
   25e24:	mov	x2, x22
   25e28:	mov	x1, x24
   25e2c:	bl	a2c0 <memcpy@plt>
   25e30:	mov	x4, x24
   25e34:	add	x2, x24, x22
   25e38:	str	x23, [x19, #80]
   25e3c:	ldr	x7, [x25]
   25e40:	b	25e8c <printf_parse@@Base+0x69ac>
   25e44:	ldrb	w3, [x19, #104]
   25e48:	cmp	w5, #0x2
   25e4c:	ldrb	w6, [x0, #10]
   25e50:	mov	w1, w3
   25e54:	ubfx	x3, x3, #5, #1
   25e58:	ubfx	x6, x6, #4, #1
   25e5c:	orr	w3, w3, w6
   25e60:	bfi	w1, w3, #5, #1
   25e64:	strb	w1, [x19, #104]
   25e68:	b.eq	25f9c <printf_parse@@Base+0x6abc>  // b.none
   25e6c:	cmp	w5, #0x4
   25e70:	b.ne	25fa8 <printf_parse@@Base+0x6ac8>  // b.any
   25e74:	orr	w1, w1, #0x40
   25e78:	strb	w1, [x19, #104]
   25e7c:	nop
   25e80:	add	x4, x4, #0x8
   25e84:	cmp	x2, x4
   25e88:	b.eq	25f24 <printf_parse@@Base+0x6a44>  // b.none
   25e8c:	ldr	x0, [x4]
   25e90:	add	x0, x7, x0, lsl #4
   25e94:	ldrb	w5, [x0, #8]
   25e98:	cmp	w5, #0x1
   25e9c:	b.ne	25e44 <printf_parse@@Base+0x6964>  // b.any
   25ea0:	ldr	w1, [x0, #8]
   25ea4:	tst	w1, #0x3ff00
   25ea8:	b.eq	25e80 <printf_parse@@Base+0x69a0>  // b.none
   25eac:	ldrb	w1, [x0, #10]
   25eb0:	ldrb	w0, [x19, #104]
   25eb4:	ubfx	x1, x1, #4, #1
   25eb8:	mov	w3, w0
   25ebc:	ubfx	x0, x0, #5, #1
   25ec0:	orr	w0, w0, w1
   25ec4:	bfi	w3, w0, #5, #1
   25ec8:	strb	w3, [x19, #104]
   25ecc:	ldrb	w0, [x19, #104]
   25ed0:	orr	w0, w0, #0xffffff80
   25ed4:	strb	w0, [x19, #104]
   25ed8:	b	25e80 <printf_parse@@Base+0x69a0>
   25edc:	ldr	x6, [x7, #16]
   25ee0:	ldr	x5, [x24, #16]
   25ee4:	ldr	x6, [x6, x3, lsl #3]
   25ee8:	ldr	x5, [x5, x3, lsl #3]
   25eec:	cmp	x6, x5
   25ef0:	b.ne	25dac <printf_parse@@Base+0x68cc>  // b.any
   25ef4:	subs	x3, x3, #0x1
   25ef8:	b.pl	25edc <printf_parse@@Base+0x69fc>  // b.nfrst
   25efc:	ldp	x23, x24, [sp, #48]
   25f00:	ldr	x25, [sp, #64]
   25f04:	mov	x0, x19
   25f08:	ldp	x19, x20, [sp, #16]
   25f0c:	ldp	x21, x22, [sp, #32]
   25f10:	ldp	x29, x30, [sp], #80
   25f14:	ret
   25f18:	stp	xzr, xzr, [x0, #8]
   25f1c:	str	xzr, [x23, #16]
   25f20:	str	x23, [x0, #80]
   25f24:	mov	x2, x20
   25f28:	mov	x0, x25
   25f2c:	mov	x1, x19
   25f30:	bl	20668 <printf_parse@@Base+0x1188>
   25f34:	cbz	w0, 25efc <printf_parse@@Base+0x6a1c>
   25f38:	ldr	x0, [x19, #48]
   25f3c:	bl	aa50 <free@plt>
   25f40:	ldr	x0, [x19, #72]
   25f44:	bl	aa50 <free@plt>
   25f48:	ldr	x0, [x19, #80]
   25f4c:	cmp	x23, x0
   25f50:	b.eq	25f64 <printf_parse@@Base+0x6a84>  // b.none
   25f54:	ldr	x0, [x0, #16]
   25f58:	bl	aa50 <free@plt>
   25f5c:	ldr	x0, [x19, #80]
   25f60:	bl	aa50 <free@plt>
   25f64:	ldr	x0, [x19, #24]
   25f68:	bl	aa50 <free@plt>
   25f6c:	ldr	x0, [x19, #96]
   25f70:	bl	aa50 <free@plt>
   25f74:	ldr	x0, [x19, #88]
   25f78:	bl	aa50 <free@plt>
   25f7c:	mov	x0, x19
   25f80:	bl	aa50 <free@plt>
   25f84:	mov	w0, #0xc                   	// #12
   25f88:	mov	x19, #0x0                   	// #0
   25f8c:	ldp	x23, x24, [sp, #48]
   25f90:	ldr	x25, [sp, #64]
   25f94:	str	w0, [x21]
   25f98:	b	25f04 <printf_parse@@Base+0x6a24>
   25f9c:	orr	w1, w1, #0x10
   25fa0:	strb	w1, [x19, #104]
   25fa4:	b	25e80 <printf_parse@@Base+0x69a0>
   25fa8:	cmp	w5, #0xc
   25fac:	b.eq	25ecc <printf_parse@@Base+0x69ec>  // b.none
   25fb0:	ldr	w0, [x0, #8]
   25fb4:	tst	w0, #0x3ff00
   25fb8:	b.eq	25e80 <printf_parse@@Base+0x69a0>  // b.none
   25fbc:	b	25ecc <printf_parse@@Base+0x69ec>
   25fc0:	str	wzr, [x0]
   25fc4:	mov	x19, #0x0                   	// #0
   25fc8:	mov	x0, x19
   25fcc:	ldp	x19, x20, [sp, #16]
   25fd0:	ldp	x21, x22, [sp, #32]
   25fd4:	ldp	x29, x30, [sp], #80
   25fd8:	ret
   25fdc:	mov	x20, x22
   25fe0:	b	25d7c <printf_parse@@Base+0x689c>
   25fe4:	mov	x20, x22
   25fe8:	mov	x0, #0x0                   	// #0
   25fec:	b	25d44 <printf_parse@@Base+0x6864>
   25ff0:	stp	x29, x30, [sp, #-192]!
   25ff4:	mov	x29, sp
   25ff8:	ldr	x6, [x0, #200]
   25ffc:	stp	x19, x20, [sp, #16]
   26000:	mov	x20, x1
   26004:	mov	x19, #0x0                   	// #0
   26008:	stp	x25, x26, [sp, #64]
   2600c:	mov	x26, x0
   26010:	mov	x0, x6
   26014:	stp	x27, x28, [sp, #80]
   26018:	mov	x27, x2
   2601c:	str	x3, [sp, #120]
   26020:	str	w4, [sp, #132]
   26024:	b	26048 <printf_parse@@Base+0x6b68>
   26028:	asr	x5, x5, #1
   2602c:	ldr	x2, [x26, #216]
   26030:	add	x1, x5, x5, lsl #2
   26034:	add	x1, x2, x1, lsl #3
   26038:	ldr	x1, [x1, #8]
   2603c:	cmp	x27, x1
   26040:	b.gt	26358 <printf_parse@@Base+0x6e78>
   26044:	mov	x0, x5
   26048:	add	x5, x0, x19
   2604c:	cmp	x0, x19
   26050:	b.gt	26028 <printf_parse@@Base+0x6b48>
   26054:	cmp	x6, x19
   26058:	b.le	260fc <printf_parse@@Base+0x6c1c>
   2605c:	add	x19, x19, x19, lsl #2
   26060:	ldr	x25, [x26, #216]
   26064:	lsl	x0, x19, #3
   26068:	str	x0, [sp, #136]
   2606c:	add	x25, x25, x0
   26070:	ldr	x0, [x25, #8]
   26074:	cmp	x27, x0
   26078:	b.ne	260fc <printf_parse@@Base+0x6c1c>  // b.any
   2607c:	ldr	x28, [x26, #152]
   26080:	stp	x23, x24, [sp, #48]
   26084:	add	x23, sp, #0xa0
   26088:	add	x0, sp, #0x9c
   2608c:	stp	x21, x22, [sp, #32]
   26090:	str	x0, [sp, #96]
   26094:	nop
   26098:	ldr	x5, [x20, #8]
   2609c:	cmp	x5, #0x0
   260a0:	b.le	260e8 <printf_parse@@Base+0x6c08>
   260a4:	sub	x5, x5, #0x1
   260a8:	mov	x1, #0x0                   	// #0
   260ac:	mov	x0, x5
   260b0:	ldr	x2, [x25]
   260b4:	ldr	x3, [x20, #16]
   260b8:	b	260d0 <printf_parse@@Base+0x6bf0>
   260bc:	lsr	x6, x6, #1
   260c0:	ldr	x4, [x3, x6, lsl #3]
   260c4:	cmp	x2, x4
   260c8:	b.gt	26114 <printf_parse@@Base+0x6c34>
   260cc:	mov	x0, x6
   260d0:	add	x6, x0, x1
   260d4:	cmp	x0, x1
   260d8:	b.hi	260bc <printf_parse@@Base+0x6bdc>  // b.pmore
   260dc:	ldr	x0, [x3, x1, lsl #3]
   260e0:	cmp	x2, x0
   260e4:	b.eq	2611c <printf_parse@@Base+0x6c3c>  // b.none
   260e8:	ldrb	w0, [x25, #32]
   260ec:	add	x25, x25, #0x28
   260f0:	cbnz	w0, 26098 <printf_parse@@Base+0x6bb8>
   260f4:	ldp	x21, x22, [sp, #32]
   260f8:	ldp	x23, x24, [sp, #48]
   260fc:	mov	w0, #0x0                   	// #0
   26100:	ldp	x19, x20, [sp, #16]
   26104:	ldp	x25, x26, [sp, #64]
   26108:	ldp	x27, x28, [sp, #80]
   2610c:	ldp	x29, x30, [sp], #192
   26110:	ret
   26114:	add	x1, x6, #0x1
   26118:	b	260d0 <printf_parse@@Base+0x6bf0>
   2611c:	ldp	x0, x6, [x25, #16]
   26120:	add	x6, x27, x6
   26124:	sub	x21, x6, x0
   26128:	cmp	x27, x21
   2612c:	b.eq	26248 <printf_parse@@Base+0x6d68>  // b.none
   26130:	ldr	x0, [x26, #184]
   26134:	lsl	x19, x21, #3
   26138:	ldr	x4, [x28, #24]
   2613c:	add	x24, x0, x19
   26140:	ldr	x1, [x0, x21, lsl #3]
   26144:	ldr	x22, [x4, x2, lsl #3]
   26148:	cbz	x1, 26320 <printf_parse@@Base+0x6e40>
   2614c:	ldr	x2, [x1, #16]
   26150:	cmp	x2, #0x0
   26154:	b.le	26348 <printf_parse@@Base+0x6e68>
   26158:	sub	x0, x2, #0x1
   2615c:	mov	x3, #0x0                   	// #0
   26160:	ldr	x1, [x1, #24]
   26164:	b	2617c <printf_parse@@Base+0x6c9c>
   26168:	lsr	x5, x5, #1
   2616c:	ldr	x4, [x1, x5, lsl #3]
   26170:	cmp	x22, x4
   26174:	b.gt	26240 <printf_parse@@Base+0x6d60>
   26178:	mov	x0, x5
   2617c:	add	x5, x0, x3
   26180:	cmp	x0, x3
   26184:	b.hi	26168 <printf_parse@@Base+0x6c88>  // b.pmore
   26188:	ldr	x0, [x1, x3, lsl #3]
   2618c:	cmp	x22, x0
   26190:	b.eq	260e8 <printf_parse@@Base+0x6c08>  // b.none
   26194:	dup	v0.2d, x2
   26198:	lsl	x2, x2, #3
   2619c:	mov	x0, x2
   261a0:	stp	x2, x1, [sp, #104]
   261a4:	str	q0, [sp, #160]
   261a8:	bl	a5f0 <malloc@plt>
   261ac:	str	x0, [sp, #176]
   261b0:	ldp	x2, x1, [sp, #104]
   261b4:	cbz	x0, 263cc <printf_parse@@Base+0x6eec>
   261b8:	bl	a2c0 <memcpy@plt>
   261bc:	mov	w2, #0x0                   	// #0
   261c0:	mov	x1, x22
   261c4:	mov	x0, x23
   261c8:	str	w2, [sp, #156]
   261cc:	bl	20538 <printf_parse@@Base+0x1058>
   261d0:	ldr	w1, [sp, #156]
   261d4:	and	w0, w0, #0xff
   261d8:	eor	w0, w0, #0x1
   261dc:	cmp	w1, #0x0
   261e0:	cset	w1, ne  // ne = any
   261e4:	orr	w0, w1, w0
   261e8:	cbnz	w0, 26360 <printf_parse@@Base+0x6e80>
   261ec:	ldr	x3, [x26, #184]
   261f0:	add	x24, x3, x19
   261f4:	ldr	x0, [sp, #96]
   261f8:	mov	x2, x23
   261fc:	mov	x1, x28
   26200:	bl	25cc8 <printf_parse@@Base+0x67e8>
   26204:	str	x0, [x24]
   26208:	ldr	x0, [sp, #176]
   2620c:	bl	aa50 <free@plt>
   26210:	ldr	x0, [x26, #184]
   26214:	ldr	x0, [x0, x21, lsl #3]
   26218:	cbnz	x0, 260e8 <printf_parse@@Base+0x6c08>
   2621c:	ldr	w0, [sp, #156]
   26220:	cbz	w0, 260e8 <printf_parse@@Base+0x6c08>
   26224:	ldp	x19, x20, [sp, #16]
   26228:	ldp	x21, x22, [sp, #32]
   2622c:	ldp	x23, x24, [sp, #48]
   26230:	ldp	x25, x26, [sp, #64]
   26234:	ldp	x27, x28, [sp, #80]
   26238:	ldp	x29, x30, [sp], #192
   2623c:	ret
   26240:	add	x3, x5, #0x1
   26244:	b	2617c <printf_parse@@Base+0x6c9c>
   26248:	ldr	x1, [x28, #40]
   2624c:	add	x2, x2, x2, lsl #1
   26250:	mov	x0, #0x0                   	// #0
   26254:	add	x2, x1, x2, lsl #3
   26258:	ldr	x1, [x2, #16]
   2625c:	ldr	x4, [x1]
   26260:	b	26278 <printf_parse@@Base+0x6d98>
   26264:	lsr	x1, x1, #1
   26268:	ldr	x2, [x3, x1, lsl #3]
   2626c:	cmp	x4, x2
   26270:	b.gt	26318 <printf_parse@@Base+0x6e38>
   26274:	mov	x5, x1
   26278:	add	x1, x5, x0
   2627c:	cmp	x5, x0
   26280:	b.hi	26264 <printf_parse@@Base+0x6d84>  // b.pmore
   26284:	ldr	x0, [x3, x0, lsl #3]
   26288:	str	x4, [sp, #104]
   2628c:	cmp	x4, x0
   26290:	b.eq	260e8 <printf_parse@@Base+0x6c08>  // b.none
   26294:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   26298:	ldr	q0, [x0, #1712]
   2629c:	mov	x0, #0x8                   	// #8
   262a0:	str	q0, [sp, #160]
   262a4:	bl	a5f0 <malloc@plt>
   262a8:	ldr	w3, [sp, #132]
   262ac:	str	x0, [sp, #176]
   262b0:	mov	x5, x0
   262b4:	ldr	x4, [sp, #104]
   262b8:	ldr	x2, [sp, #120]
   262bc:	cbz	x0, 263a8 <printf_parse@@Base+0x6ec8>
   262c0:	str	x4, [x5]
   262c4:	mov	x1, x23
   262c8:	mov	x0, x28
   262cc:	str	wzr, [sp, #156]
   262d0:	bl	24c50 <printf_parse@@Base+0x5770>
   262d4:	mov	w25, w0
   262d8:	mov	x1, x23
   262dc:	mov	x0, x20
   262e0:	bl	216b0 <printf_parse@@Base+0x21d0>
   262e4:	mov	w1, w0
   262e8:	str	w1, [sp, #104]
   262ec:	ldr	x0, [sp, #176]
   262f0:	bl	aa50 <free@plt>
   262f4:	ldr	w1, [sp, #104]
   262f8:	ldr	w0, [sp, #156]
   262fc:	orr	w2, w25, w1
   26300:	orr	w2, w2, w0
   26304:	cbnz	w2, 26390 <printf_parse@@Base+0x6eb0>
   26308:	ldr	x0, [sp, #136]
   2630c:	ldr	x25, [x26, #216]
   26310:	add	x25, x25, x0
   26314:	b	26098 <printf_parse@@Base+0x6bb8>
   26318:	add	x0, x1, #0x1
   2631c:	b	26278 <printf_parse@@Base+0x6d98>
   26320:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   26324:	mov	x0, #0x8                   	// #8
   26328:	ldr	q0, [x1, #1712]
   2632c:	str	q0, [sp, #160]
   26330:	bl	a5f0 <malloc@plt>
   26334:	str	x0, [sp, #176]
   26338:	cbz	x0, 26370 <printf_parse@@Base+0x6e90>
   2633c:	str	x22, [x0]
   26340:	str	wzr, [sp, #156]
   26344:	b	261f4 <printf_parse@@Base+0x6d14>
   26348:	mov	w2, #0x0                   	// #0
   2634c:	stp	xzr, xzr, [x23]
   26350:	str	xzr, [x23, #16]
   26354:	b	261c0 <printf_parse@@Base+0x6ce0>
   26358:	add	x19, x5, #0x1
   2635c:	b	26048 <printf_parse@@Base+0x6b68>
   26360:	ldr	x0, [sp, #176]
   26364:	bl	aa50 <free@plt>
   26368:	ldr	w0, [sp, #156]
   2636c:	cbnz	w0, 26224 <printf_parse@@Base+0x6d44>
   26370:	mov	w0, #0xc                   	// #12
   26374:	ldp	x19, x20, [sp, #16]
   26378:	ldp	x21, x22, [sp, #32]
   2637c:	ldp	x23, x24, [sp, #48]
   26380:	ldp	x25, x26, [sp, #64]
   26384:	ldp	x27, x28, [sp, #80]
   26388:	ldp	x29, x30, [sp], #192
   2638c:	ret
   26390:	cbnz	w0, 26224 <printf_parse@@Base+0x6d44>
   26394:	cmp	w25, #0x0
   26398:	csel	w0, w25, w1, ne  // ne = any
   2639c:	ldp	x21, x22, [sp, #32]
   263a0:	ldp	x23, x24, [sp, #48]
   263a4:	b	26100 <printf_parse@@Base+0x6c20>
   263a8:	mov	w4, #0xc                   	// #12
   263ac:	mov	x1, x23
   263b0:	mov	x0, x28
   263b4:	str	w4, [sp, #156]
   263b8:	stp	xzr, xzr, [sp, #160]
   263bc:	bl	24c50 <printf_parse@@Base+0x5770>
   263c0:	mov	x1, x23
   263c4:	mov	w25, w0
   263c8:	b	262dc <printf_parse@@Base+0x6dfc>
   263cc:	mov	w2, #0xc                   	// #12
   263d0:	stp	xzr, xzr, [sp, #160]
   263d4:	b	261c0 <printf_parse@@Base+0x6ce0>
   263d8:	stp	x29, x30, [sp, #-144]!
   263dc:	mov	x29, sp
   263e0:	stp	x21, x22, [sp, #32]
   263e4:	ldr	x21, [x2, #8]
   263e8:	stp	x19, x20, [sp, #16]
   263ec:	str	x1, [sp, #104]
   263f0:	str	x0, [sp, #136]
   263f4:	cbz	x21, 267d4 <printf_parse@@Base+0x72f4>
   263f8:	stp	x23, x24, [sp, #48]
   263fc:	mov	x22, x2
   26400:	cmp	x21, #0x0
   26404:	stp	x27, x28, [sp, #80]
   26408:	add	x23, x21, w3, uxtw
   2640c:	mov	w27, w3
   26410:	b.le	26494 <printf_parse@@Base+0x6fb4>
   26414:	sub	x0, x21, #0x1
   26418:	cmp	x0, #0x2
   2641c:	ldr	x2, [x2, #16]
   26420:	b.ls	26844 <printf_parse@@Base+0x7364>  // b.plast
   26424:	lsr	x1, x21, #1
   26428:	mov	x0, x2
   2642c:	movi	v0.4s, #0x0
   26430:	add	x1, x2, x1, lsl #4
   26434:	nop
   26438:	ldr	q1, [x0], #16
   2643c:	add	v0.2d, v0.2d, v1.2d
   26440:	cmp	x1, x0
   26444:	b.ne	26438 <printf_parse@@Base+0x6f58>  // b.any
   26448:	addp	d0, v0.2d
   2644c:	and	x1, x21, #0xfffffffffffffffe
   26450:	mov	x0, v0.d[0]
   26454:	add	x23, x23, x0
   26458:	tbz	w21, #0, 26494 <printf_parse@@Base+0x6fb4>
   2645c:	ldr	x0, [x2, x1, lsl #3]
   26460:	add	x3, x1, #0x1
   26464:	cmp	x21, x3
   26468:	lsl	x3, x1, #3
   2646c:	add	x23, x23, x0
   26470:	b.le	26494 <printf_parse@@Base+0x6fb4>
   26474:	add	x2, x2, x3
   26478:	add	x1, x1, #0x2
   2647c:	cmp	x21, x1
   26480:	ldr	x0, [x2, #8]
   26484:	add	x23, x23, x0
   26488:	b.le	26494 <printf_parse@@Base+0x6fb4>
   2648c:	ldr	x0, [x2, #16]
   26490:	add	x23, x23, x0
   26494:	ldr	x1, [sp, #104]
   26498:	ldr	x0, [x1, #136]
   2649c:	ldr	x1, [x1, #64]
   264a0:	and	x0, x23, x0
   264a4:	add	x0, x0, x0, lsl #1
   264a8:	lsl	x0, x0, #3
   264ac:	add	x2, x1, x0
   264b0:	ldr	x6, [x1, x0]
   264b4:	cmp	x6, #0x0
   264b8:	b.le	26518 <printf_parse@@Base+0x7038>
   264bc:	mov	x0, #0x0                   	// #0
   264c0:	ldr	x7, [x2, #16]
   264c4:	b	264d4 <printf_parse@@Base+0x6ff4>
   264c8:	add	x0, x0, #0x1
   264cc:	cmp	x0, x6
   264d0:	b.eq	26518 <printf_parse@@Base+0x7038>  // b.none
   264d4:	ldr	x19, [x7, x0, lsl #3]
   264d8:	ldr	x1, [x19]
   264dc:	cmp	x1, x23
   264e0:	b.ne	264c8 <printf_parse@@Base+0x6fe8>  // b.any
   264e4:	ldrb	w1, [x19, #104]
   264e8:	and	w1, w1, #0xf
   264ec:	cmp	w1, w27
   264f0:	b.ne	264c8 <printf_parse@@Base+0x6fe8>  // b.any
   264f4:	ldr	x8, [x19, #80]
   264f8:	cbz	x8, 264c8 <printf_parse@@Base+0x6fe8>
   264fc:	ldr	x1, [x8, #8]
   26500:	cmp	x21, x1
   26504:	b.eq	266b0 <printf_parse@@Base+0x71d0>  // b.none
   26508:	add	x0, x0, #0x1
   2650c:	cmp	x0, x6
   26510:	b.ne	264d4 <printf_parse@@Base+0x6ff4>  // b.any
   26514:	nop
   26518:	mov	x1, #0x1                   	// #1
   2651c:	mov	x0, #0x70                  	// #112
   26520:	bl	a770 <calloc@plt>
   26524:	mov	x19, x0
   26528:	cbz	x0, 267b8 <printf_parse@@Base+0x72d8>
   2652c:	str	x21, [x0, #16]
   26530:	add	x20, x0, #0x8
   26534:	cmp	x21, #0x0
   26538:	b.le	26740 <printf_parse@@Base+0x7260>
   2653c:	stp	x25, x26, [sp, #64]
   26540:	lsl	x0, x21, #3
   26544:	str	x21, [x19, #8]
   26548:	str	x0, [sp, #112]
   2654c:	bl	a5f0 <malloc@plt>
   26550:	str	x0, [x20, #16]
   26554:	mov	x24, x0
   26558:	cbz	x0, 26834 <printf_parse@@Base+0x7354>
   2655c:	ldr	x2, [sp, #112]
   26560:	and	w1, w27, #0x1
   26564:	ldr	x22, [x22, #16]
   26568:	str	w1, [sp, #100]
   2656c:	and	w1, w27, #0x2
   26570:	add	x25, x0, #0x8
   26574:	str	w1, [sp, #120]
   26578:	mov	x1, x22
   2657c:	bl	a2c0 <memcpy@plt>
   26580:	mov	x28, #0x0                   	// #0
   26584:	ldrb	w0, [x19, #104]
   26588:	and	w1, w27, #0x4
   2658c:	mov	x10, #0x0                   	// #0
   26590:	str	x20, [x19, #80]
   26594:	str	w1, [sp, #124]
   26598:	bfxil	w0, w27, #0, #4
   2659c:	strb	w0, [x19, #104]
   265a0:	ldr	x0, [sp, #104]
   265a4:	ldr	x26, [x0]
   265a8:	ldr	x2, [x22, x28, lsl #3]
   265ac:	add	x2, x26, x2, lsl #4
   265b0:	ldr	w27, [x2, #8]
   265b4:	ldrb	w0, [x2, #8]
   265b8:	ubfx	x27, x27, #8, #10
   265bc:	cmp	w27, #0x0
   265c0:	ccmp	w0, #0x1, #0x0, eq  // eq = none
   265c4:	b.eq	26658 <printf_parse@@Base+0x7178>  // b.none
   265c8:	ldrb	w9, [x2, #10]
   265cc:	cmp	w0, #0x2
   265d0:	ldrb	w2, [x19, #104]
   265d4:	ubfx	x9, x9, #4, #1
   265d8:	mov	w3, w2
   265dc:	ubfx	x2, x2, #5, #1
   265e0:	orr	w2, w2, w9
   265e4:	bfi	w3, w2, #5, #1
   265e8:	strb	w3, [x19, #104]
   265ec:	b.eq	2675c <printf_parse@@Base+0x727c>  // b.none
   265f0:	cmp	w0, #0x4
   265f4:	b.eq	266bc <printf_parse@@Base+0x71dc>  // b.none
   265f8:	cbz	w27, 26658 <printf_parse@@Base+0x7178>
   265fc:	ldr	x0, [x19, #80]
   26600:	cmp	x20, x0
   26604:	b.eq	266c8 <printf_parse@@Base+0x71e8>  // b.none
   26608:	tbz	w27, #0, 26718 <printf_parse@@Base+0x7238>
   2660c:	ldr	w0, [sp, #100]
   26610:	cbz	w0, 26618 <printf_parse@@Base+0x7138>
   26614:	tbz	w27, #1, 26724 <printf_parse@@Base+0x7244>
   26618:	subs	x2, x28, x10
   2661c:	b.mi	26654 <printf_parse@@Base+0x7174>  // b.first
   26620:	ldr	x3, [x19, #16]
   26624:	cmp	x2, x3
   26628:	b.ge	26654 <printf_parse@@Base+0x7174>  // b.tcont
   2662c:	sub	x3, x3, #0x1
   26630:	str	x3, [x19, #16]
   26634:	cmp	x2, x3
   26638:	b.ge	26654 <printf_parse@@Base+0x7174>  // b.tcont
   2663c:	nop
   26640:	ldr	x0, [x25, x2, lsl #3]
   26644:	str	x0, [x24, x2, lsl #3]
   26648:	add	x2, x2, #0x1
   2664c:	cmp	x2, x3
   26650:	b.lt	26640 <printf_parse@@Base+0x7160>  // b.tstop
   26654:	add	x10, x10, #0x1
   26658:	add	x28, x28, #0x1
   2665c:	cmp	x21, x28
   26660:	b.gt	265a8 <printf_parse@@Base+0x70c8>
   26664:	ldp	x25, x26, [sp, #64]
   26668:	mov	x2, x23
   2666c:	ldr	x0, [sp, #104]
   26670:	mov	x1, x19
   26674:	bl	20668 <printf_parse@@Base+0x1188>
   26678:	cbnz	w0, 26768 <printf_parse@@Base+0x7288>
   2667c:	ldp	x23, x24, [sp, #48]
   26680:	ldp	x27, x28, [sp, #80]
   26684:	mov	x0, x19
   26688:	ldp	x19, x20, [sp, #16]
   2668c:	ldp	x21, x22, [sp, #32]
   26690:	ldp	x29, x30, [sp], #144
   26694:	ret
   26698:	ldr	x3, [x8, #16]
   2669c:	ldr	x2, [x22, #16]
   266a0:	ldr	x3, [x3, x1, lsl #3]
   266a4:	ldr	x2, [x2, x1, lsl #3]
   266a8:	cmp	x3, x2
   266ac:	b.ne	264c8 <printf_parse@@Base+0x6fe8>  // b.any
   266b0:	subs	x1, x1, #0x1
   266b4:	b.pl	26698 <printf_parse@@Base+0x71b8>  // b.nfrst
   266b8:	b	2667c <printf_parse@@Base+0x719c>
   266bc:	orr	w3, w3, #0x40
   266c0:	strb	w3, [x19, #104]
   266c4:	b	265f8 <printf_parse@@Base+0x7118>
   266c8:	mov	x0, #0x18                  	// #24
   266cc:	bl	a5f0 <malloc@plt>
   266d0:	mov	x2, x0
   266d4:	cbz	x0, 267f0 <printf_parse@@Base+0x7310>
   266d8:	ldr	x0, [sp, #112]
   266dc:	stp	x21, x21, [x2]
   266e0:	str	x2, [x19, #80]
   266e4:	str	x2, [sp, #128]
   266e8:	bl	a5f0 <malloc@plt>
   266ec:	ldr	x2, [sp, #128]
   266f0:	str	x0, [x2, #16]
   266f4:	cbz	x0, 2684c <printf_parse@@Base+0x736c>
   266f8:	ldr	x2, [sp, #112]
   266fc:	mov	x1, x22
   26700:	bl	a2c0 <memcpy@plt>
   26704:	ldrb	w0, [x19, #104]
   26708:	mov	x10, #0x0                   	// #0
   2670c:	orr	w0, w0, #0xffffff80
   26710:	strb	w0, [x19, #104]
   26714:	tbnz	w27, #0, 2660c <printf_parse@@Base+0x712c>
   26718:	tbz	w27, #1, 26724 <printf_parse@@Base+0x7244>
   2671c:	ldr	w0, [sp, #100]
   26720:	cbnz	w0, 26618 <printf_parse@@Base+0x7138>
   26724:	tbz	w27, #4, 26730 <printf_parse@@Base+0x7250>
   26728:	ldr	w0, [sp, #120]
   2672c:	cbz	w0, 26618 <printf_parse@@Base+0x7138>
   26730:	tbz	w27, #6, 26658 <printf_parse@@Base+0x7178>
   26734:	ldr	w0, [sp, #124]
   26738:	cbnz	w0, 26658 <printf_parse@@Base+0x7178>
   2673c:	b	26618 <printf_parse@@Base+0x7138>
   26740:	stp	xzr, xzr, [x0, #8]
   26744:	str	xzr, [x20, #16]
   26748:	ldrb	w0, [x0, #104]
   2674c:	str	x20, [x19, #80]
   26750:	bfxil	w0, w27, #0, #4
   26754:	strb	w0, [x19, #104]
   26758:	b	26668 <printf_parse@@Base+0x7188>
   2675c:	orr	w3, w3, #0x10
   26760:	strb	w3, [x19, #104]
   26764:	b	265f8 <printf_parse@@Base+0x7118>
   26768:	ldr	x0, [x19, #48]
   2676c:	bl	aa50 <free@plt>
   26770:	ldr	x0, [x19, #72]
   26774:	bl	aa50 <free@plt>
   26778:	ldr	x0, [x19, #80]
   2677c:	cmp	x20, x0
   26780:	b.eq	26794 <printf_parse@@Base+0x72b4>  // b.none
   26784:	ldr	x0, [x0, #16]
   26788:	bl	aa50 <free@plt>
   2678c:	ldr	x0, [x19, #80]
   26790:	bl	aa50 <free@plt>
   26794:	ldr	x0, [x19, #24]
   26798:	bl	aa50 <free@plt>
   2679c:	ldr	x0, [x19, #96]
   267a0:	bl	aa50 <free@plt>
   267a4:	ldr	x0, [x19, #88]
   267a8:	bl	aa50 <free@plt>
   267ac:	mov	x0, x19
   267b0:	bl	aa50 <free@plt>
   267b4:	nop
   267b8:	ldr	x1, [sp, #136]
   267bc:	mov	w0, #0xc                   	// #12
   267c0:	mov	x19, #0x0                   	// #0
   267c4:	ldp	x23, x24, [sp, #48]
   267c8:	ldp	x27, x28, [sp, #80]
   267cc:	str	w0, [x1]
   267d0:	b	26684 <printf_parse@@Base+0x71a4>
   267d4:	str	wzr, [x0]
   267d8:	mov	x19, #0x0                   	// #0
   267dc:	mov	x0, x19
   267e0:	ldp	x19, x20, [sp, #16]
   267e4:	ldp	x21, x22, [sp, #32]
   267e8:	ldp	x29, x30, [sp], #144
   267ec:	ret
   267f0:	ldr	x0, [x19, #48]
   267f4:	bl	aa50 <free@plt>
   267f8:	ldr	x0, [x19, #72]
   267fc:	bl	aa50 <free@plt>
   26800:	ldr	x0, [x19, #80]
   26804:	cmp	x20, x0
   26808:	b.eq	2681c <printf_parse@@Base+0x733c>  // b.none
   2680c:	ldr	x0, [x0, #16]
   26810:	bl	aa50 <free@plt>
   26814:	ldr	x0, [x19, #80]
   26818:	bl	aa50 <free@plt>
   2681c:	ldr	x0, [x19, #24]
   26820:	bl	aa50 <free@plt>
   26824:	ldr	x0, [x19, #96]
   26828:	bl	aa50 <free@plt>
   2682c:	ldr	x0, [x19, #88]
   26830:	bl	aa50 <free@plt>
   26834:	mov	x0, x19
   26838:	bl	aa50 <free@plt>
   2683c:	ldp	x25, x26, [sp, #64]
   26840:	b	267b8 <printf_parse@@Base+0x72d8>
   26844:	mov	x1, #0x0                   	// #0
   26848:	b	2645c <printf_parse@@Base+0x6f7c>
   2684c:	stp	xzr, xzr, [x2]
   26850:	ldr	x0, [x19, #48]
   26854:	b	267f4 <printf_parse@@Base+0x7314>
   26858:	stp	x29, x30, [sp, #-256]!
   2685c:	mov	x7, x1
   26860:	mov	x29, sp
   26864:	stp	x19, x20, [sp, #16]
   26868:	mov	x20, x2
   2686c:	mov	x19, x3
   26870:	ldr	x2, [x0, #152]
   26874:	str	x2, [sp, #104]
   26878:	stp	x21, x22, [sp, #32]
   2687c:	ldr	x2, [x2]
   26880:	stp	x4, x1, [sp, #160]
   26884:	ldr	x22, [x1, #8]
   26888:	lsl	x1, x20, #4
   2688c:	stp	x27, x28, [sp, #80]
   26890:	mov	x27, x0
   26894:	ldrsw	x0, [x0, #224]
   26898:	ldr	x1, [x2, x1]
   2689c:	stp	x23, x24, [sp, #48]
   268a0:	add	x0, x0, x5
   268a4:	str	x5, [sp, #128]
   268a8:	cmp	x0, x22
   268ac:	str	x1, [sp, #136]
   268b0:	str	w6, [sp, #148]
   268b4:	str	wzr, [sp, #200]
   268b8:	b.ge	26e18 <printf_parse@@Base+0x7938>  // b.tcont
   268bc:	ldr	x0, [sp, #168]
   268c0:	ldr	w2, [x27, #160]
   268c4:	ldr	x21, [x0]
   268c8:	ldr	x22, [x0, #16]
   268cc:	ldr	x0, [x27, #72]
   268d0:	str	x0, [sp, #176]
   268d4:	ldr	x0, [x27, #184]
   268d8:	str	x0, [sp, #184]
   268dc:	cbnz	x21, 26994 <printf_parse@@Base+0x74b4>
   268e0:	str	x19, [x27, #72]
   268e4:	sub	x1, x19, #0x1
   268e8:	str	x22, [x27, #184]
   268ec:	mov	x0, x27
   268f0:	bl	21a08 <printf_parse@@Base+0x2528>
   268f4:	mov	w23, w0
   268f8:	adrp	x0, 32000 <vasnprintf@@Base+0x1848>
   268fc:	ldr	q0, [x0, #1712]
   26900:	mov	x0, #0x8                   	// #8
   26904:	str	q0, [sp, #208]
   26908:	bl	a5f0 <malloc@plt>
   2690c:	mov	x4, x0
   26910:	str	x0, [sp, #224]
   26914:	cbz	x0, 26e70 <printf_parse@@Base+0x7990>
   26918:	ldr	w3, [sp, #148]
   2691c:	add	x22, sp, #0xd0
   26920:	ldr	x0, [sp, #104]
   26924:	str	x20, [x4]
   26928:	ldr	x2, [sp, #136]
   2692c:	mov	x1, x22
   26930:	str	wzr, [sp, #200]
   26934:	bl	24c50 <printf_parse@@Base+0x5770>
   26938:	str	w0, [sp, #200]
   2693c:	cbnz	w0, 26e80 <printf_parse@@Base+0x79a0>
   26940:	ldr	x0, [sp, #216]
   26944:	mov	x21, x19
   26948:	cbz	x0, 2696c <printf_parse@@Base+0x748c>
   2694c:	ldr	w4, [sp, #148]
   26950:	mov	x2, x21
   26954:	ldr	x3, [sp, #136]
   26958:	mov	x1, x22
   2695c:	mov	x0, x27
   26960:	bl	25ff0 <printf_parse@@Base+0x6b10>
   26964:	str	w0, [sp, #200]
   26968:	cbnz	w0, 26e80 <printf_parse@@Base+0x79a0>
   2696c:	ldr	x1, [sp, #104]
   26970:	mov	w3, w23
   26974:	mov	x2, x22
   26978:	add	x0, sp, #0xc8
   2697c:	bl	263d8 <printf_parse@@Base+0x6ef8>
   26980:	mov	x19, x0
   26984:	cbz	x0, 26e78 <printf_parse@@Base+0x7998>
   26988:	ldr	x0, [x27, #184]
   2698c:	str	x19, [x0, x21, lsl #3]
   26990:	b	269cc <printf_parse@@Base+0x74ec>
   26994:	str	x21, [x27, #72]
   26998:	sub	x1, x21, #0x1
   2699c:	str	x22, [x27, #184]
   269a0:	mov	x0, x27
   269a4:	bl	21a08 <printf_parse@@Base+0x2528>
   269a8:	mov	w23, w0
   269ac:	cmp	x21, x19
   269b0:	b.eq	268f8 <printf_parse@@Base+0x7418>  // b.none
   269b4:	ldr	x19, [x22, x21, lsl #3]
   269b8:	cbz	x19, 269c4 <printf_parse@@Base+0x74e4>
   269bc:	ldrb	w1, [x19, #104]
   269c0:	tbnz	w1, #6, 26d9c <printf_parse@@Base+0x78bc>
   269c4:	stp	xzr, xzr, [sp, #208]
   269c8:	str	xzr, [sp, #224]
   269cc:	ldr	x0, [sp, #128]
   269d0:	cmp	x21, x0
   269d4:	b.ge	26bc0 <printf_parse@@Base+0x76e0>  // b.tcont
   269d8:	mov	x22, x21
   269dc:	stp	x25, x26, [sp, #64]
   269e0:	add	x25, sp, #0xd0
   269e4:	add	x26, sp, #0xe8
   269e8:	add	x0, sp, #0xcc
   269ec:	str	xzr, [sp, #96]
   269f0:	str	x0, [sp, #152]
   269f4:	ldr	x1, [sp, #96]
   269f8:	mov	x21, x22
   269fc:	ldrsw	x0, [x27, #224]
   26a00:	cmp	x1, x0
   26a04:	b.gt	26bbc <printf_parse@@Base+0x76dc>
   26a08:	ldr	x0, [x27, #184]
   26a0c:	add	x21, x22, #0x1
   26a10:	ldr	x1, [x0, x21, lsl #3]
   26a14:	str	xzr, [sp, #216]
   26a18:	cbz	x1, 26d40 <printf_parse@@Base+0x7860>
   26a1c:	add	x1, x1, #0x8
   26a20:	mov	x0, x25
   26a24:	bl	216b0 <printf_parse@@Base+0x21d0>
   26a28:	str	w0, [sp, #200]
   26a2c:	cbnz	w0, 26d74 <printf_parse@@Base+0x7894>
   26a30:	cbz	x19, 26b30 <printf_parse@@Base+0x7650>
   26a34:	ldr	x0, [x19, #40]
   26a38:	stp	xzr, xzr, [x26]
   26a3c:	add	x19, x19, #0x20
   26a40:	str	xzr, [x26, #16]
   26a44:	cmp	x0, #0x0
   26a48:	str	wzr, [sp, #204]
   26a4c:	ldr	x23, [x27, #152]
   26a50:	b.le	26eac <printf_parse@@Base+0x79cc>
   26a54:	add	x0, x23, #0xd8
   26a58:	mov	x24, #0x0                   	// #0
   26a5c:	str	x0, [sp, #120]
   26a60:	ldr	x1, [x19, #16]
   26a64:	ldr	x0, [x23]
   26a68:	ldr	x28, [x1, x24, lsl #3]
   26a6c:	lsl	x20, x28, #4
   26a70:	add	x1, x0, x20
   26a74:	ldrb	w2, [x1, #10]
   26a78:	tbnz	w2, #4, 26c44 <printf_parse@@Base+0x7764>
   26a7c:	ldr	x0, [x27, #8]
   26a80:	ldrb	w2, [x1, #8]
   26a84:	ldrb	w0, [x0, x22]
   26a88:	cmp	w2, #0x5
   26a8c:	b.eq	26d04 <printf_parse@@Base+0x7824>  // b.none
   26a90:	b.hi	26cf8 <printf_parse@@Base+0x7818>  // b.pmore
   26a94:	cmp	w2, #0x1
   26a98:	b.eq	26d20 <printf_parse@@Base+0x7840>  // b.none
   26a9c:	cmp	w2, #0x3
   26aa0:	b.ne	26b14 <printf_parse@@Base+0x7634>  // b.any
   26aa4:	ldr	x2, [x1]
   26aa8:	ubfx	x3, x0, #6, #2
   26aac:	ldr	x2, [x2, x3, lsl #3]
   26ab0:	lsr	x0, x2, x0
   26ab4:	tbz	w0, #0, 26b14 <printf_parse@@Base+0x7634>
   26ab8:	ldr	w20, [x1, #8]
   26abc:	tst	w20, #0x3ff00
   26ac0:	b.eq	26af8 <printf_parse@@Base+0x7618>  // b.none
   26ac4:	ldr	w2, [x27, #160]
   26ac8:	mov	x1, x22
   26acc:	mov	x0, x27
   26ad0:	bl	21a08 <printf_parse@@Base+0x2528>
   26ad4:	ubfx	x1, x20, #8, #10
   26ad8:	tbz	w20, #10, 26d48 <printf_parse@@Base+0x7868>
   26adc:	tbz	w0, #0, 26b14 <printf_parse@@Base+0x7634>
   26ae0:	tbnz	w1, #3, 26b14 <printf_parse@@Base+0x7634>
   26ae4:	tbz	w1, #5, 26aec <printf_parse@@Base+0x760c>
   26ae8:	tbz	w0, #1, 26b14 <printf_parse@@Base+0x7634>
   26aec:	tbz	w1, #7, 26af8 <printf_parse@@Base+0x7618>
   26af0:	tbz	w0, #3, 26b14 <printf_parse@@Base+0x7634>
   26af4:	nop
   26af8:	lsl	x20, x28, #3
   26afc:	ldr	x1, [x23, #24]
   26b00:	mov	x0, x25
   26b04:	ldr	x1, [x1, x20]
   26b08:	bl	20538 <printf_parse@@Base+0x1058>
   26b0c:	tst	w0, #0xff
   26b10:	b.eq	26d64 <printf_parse@@Base+0x7884>  // b.none
   26b14:	ldr	x0, [x19, #8]
   26b18:	add	x24, x24, #0x1
   26b1c:	cmp	x24, x0
   26b20:	b.lt	26a60 <printf_parse@@Base+0x7580>  // b.tstop
   26b24:	ldr	x0, [sp, #248]
   26b28:	bl	aa50 <free@plt>
   26b2c:	str	wzr, [sp, #200]
   26b30:	ldr	x0, [sp, #216]
   26b34:	cbz	x0, 26b74 <printf_parse@@Base+0x7694>
   26b38:	ldr	w3, [sp, #148]
   26b3c:	mov	x1, x25
   26b40:	ldr	x0, [sp, #104]
   26b44:	ldr	x2, [sp, #136]
   26b48:	bl	24c50 <printf_parse@@Base+0x5770>
   26b4c:	str	w0, [sp, #200]
   26b50:	cbnz	w0, 26d74 <printf_parse@@Base+0x7894>
   26b54:	ldr	w4, [sp, #148]
   26b58:	mov	x2, x21
   26b5c:	ldr	x3, [sp, #136]
   26b60:	mov	x1, x25
   26b64:	mov	x0, x27
   26b68:	bl	25ff0 <printf_parse@@Base+0x6b10>
   26b6c:	str	w0, [sp, #200]
   26b70:	cbnz	w0, 26d74 <printf_parse@@Base+0x7894>
   26b74:	ldr	w2, [x27, #160]
   26b78:	mov	x1, x22
   26b7c:	mov	x0, x27
   26b80:	bl	21a08 <printf_parse@@Base+0x2528>
   26b84:	mov	w3, w0
   26b88:	ldr	x1, [sp, #104]
   26b8c:	mov	x2, x25
   26b90:	add	x0, sp, #0xc8
   26b94:	bl	263d8 <printf_parse@@Base+0x6ef8>
   26b98:	mov	x19, x0
   26b9c:	cbz	x0, 26de4 <printf_parse@@Base+0x7904>
   26ba0:	ldr	x0, [x27, #184]
   26ba4:	str	xzr, [sp, #96]
   26ba8:	str	x19, [x0, x21, lsl #3]
   26bac:	ldr	x0, [sp, #128]
   26bb0:	mov	x22, x21
   26bb4:	cmp	x21, x0
   26bb8:	b.lt	269f4 <printf_parse@@Base+0x7514>  // b.tstop
   26bbc:	ldp	x25, x26, [sp, #64]
   26bc0:	ldr	x0, [sp, #224]
   26bc4:	bl	aa50 <free@plt>
   26bc8:	ldr	x1, [sp, #128]
   26bcc:	ldr	x0, [x27, #184]
   26bd0:	ldr	x3, [x0, x1, lsl #3]
   26bd4:	cbz	x3, 26e90 <printf_parse@@Base+0x79b0>
   26bd8:	ldp	x0, x1, [sp, #168]
   26bdc:	str	x21, [x0]
   26be0:	str	x1, [x27, #72]
   26be4:	ldr	x1, [sp, #184]
   26be8:	str	x1, [x27, #184]
   26bec:	ldr	x1, [x3, #16]
   26bf0:	mov	w0, #0x1                   	// #1
   26bf4:	cmp	x1, #0x0
   26bf8:	b.le	26d84 <printf_parse@@Base+0x78a4>
   26bfc:	sub	x1, x1, #0x1
   26c00:	mov	x2, #0x0                   	// #0
   26c04:	ldr	x4, [x3, #24]
   26c08:	b	26c24 <printf_parse@@Base+0x7744>
   26c0c:	lsr	x0, x0, #1
   26c10:	ldr	x5, [sp, #160]
   26c14:	ldr	x3, [x4, x0, lsl #3]
   26c18:	cmp	x5, x3
   26c1c:	b.gt	26e68 <printf_parse@@Base+0x7988>
   26c20:	mov	x1, x0
   26c24:	add	x0, x1, x2
   26c28:	cmp	x1, x2
   26c2c:	b.hi	26c0c <printf_parse@@Base+0x772c>  // b.pmore
   26c30:	ldr	x0, [x4, x2, lsl #3]
   26c34:	ldr	x1, [sp, #160]
   26c38:	cmp	x0, x1
   26c3c:	cset	w0, ne  // ne = any
   26c40:	b	26d84 <printf_parse@@Base+0x78a4>
   26c44:	ldr	x1, [sp, #120]
   26c48:	mov	x4, x22
   26c4c:	mov	x3, x27
   26c50:	mov	x2, x28
   26c54:	bl	23dc0 <printf_parse@@Base+0x48e0>
   26c58:	cmp	w0, #0x1
   26c5c:	b.le	26d30 <printf_parse@@Base+0x7850>
   26c60:	add	x0, x22, w0, sxtw
   26c64:	lsl	x20, x28, #3
   26c68:	ldr	x1, [x27, #184]
   26c6c:	mov	x2, x0
   26c70:	ldr	x0, [x23, #24]
   26c74:	str	x2, [sp, #112]
   26c78:	ldr	x1, [x1, x2, lsl #3]
   26c7c:	ldr	x28, [x0, x28, lsl #3]
   26c80:	str	xzr, [sp, #240]
   26c84:	cbz	x1, 26c9c <printf_parse@@Base+0x77bc>
   26c88:	add	x1, x1, #0x8
   26c8c:	mov	x0, x26
   26c90:	bl	216b0 <printf_parse@@Base+0x21d0>
   26c94:	str	w0, [sp, #204]
   26c98:	cbnz	w0, 26ce0 <printf_parse@@Base+0x7800>
   26c9c:	mov	x1, x28
   26ca0:	mov	x0, x26
   26ca4:	bl	20538 <printf_parse@@Base+0x1058>
   26ca8:	tst	w0, #0xff
   26cac:	b.eq	26d64 <printf_parse@@Base+0x7884>  // b.none
   26cb0:	ldr	x0, [sp, #152]
   26cb4:	mov	x2, x26
   26cb8:	mov	x1, x23
   26cbc:	ldr	x28, [x27, #184]
   26cc0:	bl	25cc8 <printf_parse@@Base+0x67e8>
   26cc4:	ldr	x2, [sp, #112]
   26cc8:	ldr	x1, [x27, #184]
   26ccc:	str	x0, [x28, x2, lsl #3]
   26cd0:	ldr	x0, [x1, x2, lsl #3]
   26cd4:	cbnz	x0, 26afc <printf_parse@@Base+0x761c>
   26cd8:	ldr	w0, [sp, #204]
   26cdc:	cbz	w0, 26afc <printf_parse@@Base+0x761c>
   26ce0:	ldr	x0, [sp, #248]
   26ce4:	bl	aa50 <free@plt>
   26ce8:	ldr	w0, [sp, #204]
   26cec:	str	w0, [sp, #200]
   26cf0:	cbz	w0, 26b30 <printf_parse@@Base+0x7650>
   26cf4:	b	26d74 <printf_parse@@Base+0x7894>
   26cf8:	cmp	w2, #0x7
   26cfc:	b.ne	26b14 <printf_parse@@Base+0x7634>  // b.any
   26d00:	tbnz	w0, #7, 26b14 <printf_parse@@Base+0x7634>
   26d04:	cmp	w0, #0xa
   26d08:	b.eq	26d54 <printf_parse@@Base+0x7874>  // b.none
   26d0c:	cbnz	w0, 26ab8 <printf_parse@@Base+0x75d8>
   26d10:	ldr	x0, [x27, #152]
   26d14:	ldr	x0, [x0, #216]
   26d18:	tbz	w0, #7, 26ab8 <printf_parse@@Base+0x75d8>
   26d1c:	b	26b14 <printf_parse@@Base+0x7634>
   26d20:	ldrb	w2, [x1]
   26d24:	cmp	w2, w0
   26d28:	b.eq	26ab8 <printf_parse@@Base+0x75d8>  // b.none
   26d2c:	b	26b14 <printf_parse@@Base+0x7634>
   26d30:	cbnz	w0, 26af8 <printf_parse@@Base+0x7618>
   26d34:	ldr	x1, [x23]
   26d38:	add	x1, x1, x20
   26d3c:	b	26a7c <printf_parse@@Base+0x759c>
   26d40:	cbnz	x19, 26a34 <printf_parse@@Base+0x7554>
   26d44:	b	26b74 <printf_parse@@Base+0x7694>
   26d48:	tbz	w1, #3, 26ae4 <printf_parse@@Base+0x7604>
   26d4c:	tbz	w0, #0, 26ae4 <printf_parse@@Base+0x7604>
   26d50:	b	26b14 <printf_parse@@Base+0x7634>
   26d54:	ldr	x0, [x27, #152]
   26d58:	ldr	x0, [x0, #216]
   26d5c:	tbnz	w0, #6, 26ab8 <printf_parse@@Base+0x75d8>
   26d60:	b	26b14 <printf_parse@@Base+0x7634>
   26d64:	ldr	x0, [sp, #248]
   26d68:	bl	aa50 <free@plt>
   26d6c:	mov	w0, #0xc                   	// #12
   26d70:	str	w0, [sp, #200]
   26d74:	ldr	x0, [sp, #224]
   26d78:	bl	aa50 <free@plt>
   26d7c:	ldp	x25, x26, [sp, #64]
   26d80:	ldr	w0, [sp, #200]
   26d84:	ldp	x19, x20, [sp, #16]
   26d88:	ldp	x21, x22, [sp, #32]
   26d8c:	ldp	x23, x24, [sp, #48]
   26d90:	ldp	x27, x28, [sp, #80]
   26d94:	ldp	x29, x30, [sp], #256
   26d98:	ret
   26d9c:	ldr	x0, [x19, #16]
   26da0:	str	x0, [sp, #216]
   26da4:	cmp	x0, #0x0
   26da8:	b.le	26e04 <printf_parse@@Base+0x7924>
   26dac:	lsl	x22, x0, #3
   26db0:	str	x0, [sp, #208]
   26db4:	mov	x0, x22
   26db8:	bl	a5f0 <malloc@plt>
   26dbc:	str	x0, [sp, #224]
   26dc0:	cbz	x0, 26e70 <printf_parse@@Base+0x7990>
   26dc4:	ldr	x1, [x19, #24]
   26dc8:	mov	x2, x22
   26dcc:	add	x22, sp, #0xd0
   26dd0:	bl	a2c0 <memcpy@plt>
   26dd4:	str	wzr, [sp, #200]
   26dd8:	ldrb	w0, [x19, #104]
   26ddc:	tbz	w0, #6, 269cc <printf_parse@@Base+0x74ec>
   26de0:	b	2694c <printf_parse@@Base+0x746c>
   26de4:	ldr	w0, [sp, #200]
   26de8:	cbnz	w0, 26d74 <printf_parse@@Base+0x7894>
   26dec:	ldr	x0, [x27, #184]
   26df0:	ldr	x1, [sp, #96]
   26df4:	str	xzr, [x0, x21, lsl #3]
   26df8:	add	x1, x1, #0x1
   26dfc:	str	x1, [sp, #96]
   26e00:	b	26bac <printf_parse@@Base+0x76cc>
   26e04:	add	x22, sp, #0xd0
   26e08:	str	wzr, [sp, #200]
   26e0c:	stp	xzr, xzr, [sp, #208]
   26e10:	str	xzr, [sp, #224]
   26e14:	b	2696c <printf_parse@@Base+0x748c>
   26e18:	add	x21, x0, #0x1
   26e1c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   26e20:	sub	x0, x0, x22
   26e24:	cmp	x0, x21
   26e28:	b.lt	26e70 <printf_parse@@Base+0x7990>  // b.tstop
   26e2c:	add	x23, x22, x21
   26e30:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   26e34:	cmp	x23, x0
   26e38:	b.hi	26e70 <printf_parse@@Base+0x7990>  // b.pmore
   26e3c:	ldr	x0, [x7, #16]
   26e40:	mov	x24, x7
   26e44:	lsl	x1, x23, #3
   26e48:	bl	a7e0 <realloc@plt>
   26e4c:	cbz	x0, 26e70 <printf_parse@@Base+0x7990>
   26e50:	stp	x23, x0, [x24, #8]
   26e54:	lsl	x2, x21, #3
   26e58:	add	x0, x0, x22, lsl #3
   26e5c:	mov	w1, #0x0                   	// #0
   26e60:	bl	a6f0 <memset@plt>
   26e64:	b	268bc <printf_parse@@Base+0x73dc>
   26e68:	add	x2, x0, #0x1
   26e6c:	b	26c24 <printf_parse@@Base+0x7744>
   26e70:	mov	w0, #0xc                   	// #12
   26e74:	b	26d84 <printf_parse@@Base+0x78a4>
   26e78:	ldr	w0, [sp, #200]
   26e7c:	cbz	w0, 26988 <printf_parse@@Base+0x74a8>
   26e80:	ldr	x0, [sp, #224]
   26e84:	bl	aa50 <free@plt>
   26e88:	ldr	w0, [sp, #200]
   26e8c:	b	26d84 <printf_parse@@Base+0x78a4>
   26e90:	ldp	x0, x1, [sp, #168]
   26e94:	str	x21, [x0]
   26e98:	str	x1, [x27, #72]
   26e9c:	ldr	x1, [sp, #184]
   26ea0:	mov	w0, #0x1                   	// #1
   26ea4:	str	x1, [x27, #184]
   26ea8:	b	26d84 <printf_parse@@Base+0x78a4>
   26eac:	mov	x0, #0x0                   	// #0
   26eb0:	b	26b28 <printf_parse@@Base+0x7648>
   26eb4:	nop
   26eb8:	stp	x29, x30, [sp, #-80]!
   26ebc:	mov	x6, x2
   26ec0:	mov	x5, x4
   26ec4:	mov	x29, sp
   26ec8:	stp	x19, x20, [sp, #16]
   26ecc:	mov	x20, x4
   26ed0:	mov	x4, x3
   26ed4:	stp	x21, x22, [sp, #32]
   26ed8:	mov	x21, x2
   26edc:	mov	x22, x1
   26ee0:	stp	x23, x24, [sp, #48]
   26ee4:	mov	x24, x3
   26ee8:	mov	x19, x0
   26eec:	ldr	x3, [x2, #8]
   26ef0:	ldr	x2, [x6], #16
   26ef4:	mov	x1, x6
   26ef8:	mov	w6, #0x8                   	// #8
   26efc:	bl	26858 <printf_parse@@Base+0x7378>
   26f00:	mov	w23, w0
   26f04:	cbz	w0, 26f20 <printf_parse@@Base+0x7a40>
   26f08:	mov	w0, w23
   26f0c:	ldp	x19, x20, [sp, #16]
   26f10:	ldp	x21, x22, [sp, #32]
   26f14:	ldp	x23, x24, [sp, #48]
   26f18:	ldp	x29, x30, [sp], #80
   26f1c:	ret
   26f20:	ldp	x2, x1, [x19, #200]
   26f24:	stp	x25, x26, [sp, #64]
   26f28:	ldr	x25, [x21, #8]
   26f2c:	ldr	x26, [x22]
   26f30:	cmp	x2, x1
   26f34:	mov	x4, x25
   26f38:	ldr	x0, [x19, #216]
   26f3c:	b.ge	27024 <printf_parse@@Base+0x7b44>  // b.tcont
   26f40:	add	x1, x2, x2, lsl #2
   26f44:	cmp	x2, #0x0
   26f48:	lsl	x1, x1, #3
   26f4c:	b.le	26f64 <printf_parse@@Base+0x7a84>
   26f50:	sub	x3, x1, #0x28
   26f54:	add	x3, x0, x3
   26f58:	ldr	x5, [x3, #8]
   26f5c:	cmp	x20, x5
   26f60:	b.eq	27018 <printf_parse@@Base+0x7b38>  // b.none
   26f64:	add	x6, x0, x1
   26f68:	cmp	x26, x25
   26f6c:	str	x24, [x0, x1]
   26f70:	csetm	w1, eq  // eq = none
   26f74:	add	x2, x2, #0x1
   26f78:	sub	x0, x25, x26
   26f7c:	stp	x20, x26, [x6, #8]
   26f80:	str	x25, [x6, #24]
   26f84:	strh	w1, [x6, #34]
   26f88:	str	x2, [x19, #200]
   26f8c:	strb	wzr, [x6, #32]
   26f90:	ldrsw	x1, [x19, #224]
   26f94:	cmp	x1, x0
   26f98:	b.ge	26fa4 <printf_parse@@Base+0x7ac4>  // b.tcont
   26f9c:	sub	w1, w25, w26
   26fa0:	str	w1, [x19, #224]
   26fa4:	ldr	x5, [x22]
   26fa8:	add	x4, x20, x4
   26fac:	ldr	x0, [x19, #64]
   26fb0:	sub	x20, x4, x5
   26fb4:	ldr	x21, [x19, #192]
   26fb8:	cmp	x20, x0
   26fbc:	b.lt	26fcc <printf_parse@@Base+0x7aec>  // b.tstop
   26fc0:	ldr	x1, [x19, #88]
   26fc4:	cmp	x0, x1
   26fc8:	b.lt	26fe4 <printf_parse@@Base+0x7b04>  // b.tstop
   26fcc:	ldr	x0, [x19, #48]
   26fd0:	cmp	x20, x0
   26fd4:	b.lt	26ff4 <printf_parse@@Base+0x7b14>  // b.tstop
   26fd8:	ldr	x1, [x19, #88]
   26fdc:	cmp	x0, x1
   26fe0:	b.ge	26ff4 <printf_parse@@Base+0x7b14>  // b.tcont
   26fe4:	add	w1, w20, #0x1
   26fe8:	mov	x0, x19
   26fec:	bl	24dc0 <printf_parse@@Base+0x58e0>
   26ff0:	cbnz	w0, 270a8 <printf_parse@@Base+0x7bc8>
   26ff4:	cmp	x20, x21
   26ff8:	b.gt	2706c <printf_parse@@Base+0x7b8c>
   26ffc:	mov	w0, w23
   27000:	ldp	x19, x20, [sp, #16]
   27004:	ldp	x21, x22, [sp, #32]
   27008:	ldp	x23, x24, [sp, #48]
   2700c:	ldp	x25, x26, [sp, #64]
   27010:	ldp	x29, x30, [sp], #80
   27014:	ret
   27018:	mov	w5, #0x1                   	// #1
   2701c:	strb	w5, [x3, #32]
   27020:	b	26f64 <printf_parse@@Base+0x7a84>
   27024:	add	x1, x1, x1, lsl #2
   27028:	lsl	x1, x1, #4
   2702c:	bl	a7e0 <realloc@plt>
   27030:	cbz	x0, 270b4 <printf_parse@@Base+0x7bd4>
   27034:	ldp	x3, x2, [x19, #200]
   27038:	str	x0, [x19, #216]
   2703c:	mov	w1, #0x0                   	// #0
   27040:	add	x3, x3, x3, lsl #2
   27044:	add	x2, x2, x2, lsl #2
   27048:	add	x0, x0, x3, lsl #3
   2704c:	lsl	x2, x2, #3
   27050:	bl	a6f0 <memset@plt>
   27054:	ldp	x2, x1, [x19, #200]
   27058:	ldr	x4, [x21, #8]
   2705c:	ldr	x0, [x19, #216]
   27060:	lsl	x1, x1, #1
   27064:	str	x1, [x19, #208]
   27068:	b	26f40 <printf_parse@@Base+0x7a60>
   2706c:	ldr	x0, [x19, #184]
   27070:	add	x3, x21, #0x1
   27074:	sub	x2, x20, x21
   27078:	mov	w1, #0x0                   	// #0
   2707c:	lsl	x2, x2, #3
   27080:	add	x0, x0, x3, lsl #3
   27084:	bl	a6f0 <memset@plt>
   27088:	ldp	x25, x26, [sp, #64]
   2708c:	str	x20, [x19, #192]
   27090:	mov	w0, w23
   27094:	ldp	x19, x20, [sp, #16]
   27098:	ldp	x21, x22, [sp, #32]
   2709c:	ldp	x23, x24, [sp, #48]
   270a0:	ldp	x29, x30, [sp], #80
   270a4:	ret
   270a8:	mov	w23, w0
   270ac:	ldp	x25, x26, [sp, #64]
   270b0:	b	26f08 <printf_parse@@Base+0x7a28>
   270b4:	ldr	x0, [x19, #216]
   270b8:	mov	w23, #0xc                   	// #12
   270bc:	bl	aa50 <free@plt>
   270c0:	ldp	x25, x26, [sp, #64]
   270c4:	b	26f08 <printf_parse@@Base+0x7a28>
   270c8:	stp	x29, x30, [sp, #-224]!
   270cc:	mov	x29, sp
   270d0:	stp	x23, x24, [sp, #48]
   270d4:	mov	x23, x0
   270d8:	mov	x0, #0x3800                	// #14336
   270dc:	str	x1, [sp, #136]
   270e0:	bl	a5f0 <malloc@plt>
   270e4:	str	x0, [sp, #96]
   270e8:	cbz	x0, 279d0 <printf_parse@@Base+0x84f0>
   270ec:	ldr	x1, [sp, #136]
   270f0:	stp	x25, x26, [sp, #64]
   270f4:	mov	x3, #0x1800                	// #6144
   270f8:	add	x25, x1, #0x8
   270fc:	stp	x19, x20, [sp, #16]
   27100:	add	x20, x0, x3
   27104:	stp	xzr, xzr, [x1, #88]
   27108:	ldr	x1, [x25, #8]
   2710c:	stp	xzr, xzr, [sp, #192]
   27110:	stp	xzr, xzr, [sp, #208]
   27114:	cmp	x1, #0x0
   27118:	b.le	27a40 <printf_parse@@Base+0x8560>
   2711c:	mov	x19, #0x0                   	// #0
   27120:	mov	x24, #0x0                   	// #0
   27124:	stp	x21, x22, [sp, #32]
   27128:	stp	x27, x28, [sp, #80]
   2712c:	lsl	x1, x24, #3
   27130:	ldr	x0, [x25, #16]
   27134:	str	x1, [sp, #112]
   27138:	ldr	x2, [x23]
   2713c:	ldr	x1, [x0, x24, lsl #3]
   27140:	lsl	x1, x1, #4
   27144:	add	x21, x2, x1
   27148:	ldr	w0, [x21, #8]
   2714c:	ldrb	w10, [x21, #8]
   27150:	ubfx	x0, x0, #8, #10
   27154:	cmp	w10, #0x1
   27158:	b.eq	273fc <printf_parse@@Base+0x7f1c>  // b.none
   2715c:	cmp	w10, #0x3
   27160:	b.eq	27908 <printf_parse@@Base+0x8428>  // b.none
   27164:	cmp	w10, #0x5
   27168:	b.eq	277b8 <printf_parse@@Base+0x82d8>  // b.none
   2716c:	cmp	w10, #0x7
   27170:	b.eq	278d8 <printf_parse@@Base+0x83f8>  // b.none
   27174:	ldr	x0, [x25, #8]
   27178:	add	x24, x24, #0x1
   2717c:	cmp	x24, x0
   27180:	b.lt	2712c <printf_parse@@Base+0x7c4c>  // b.tstop
   27184:	cmp	x19, #0x0
   27188:	b.le	27b58 <printf_parse@@Base+0x8678>
   2718c:	add	x22, x19, #0x1
   27190:	stp	x22, xzr, [sp, #168]
   27194:	lsl	x22, x22, #3
   27198:	mov	x0, x22
   2719c:	bl	a5f0 <malloc@plt>
   271a0:	str	x0, [sp, #184]
   271a4:	mov	x25, x0
   271a8:	cbz	x0, 27728 <printf_parse@@Base+0x8248>
   271ac:	mov	x0, #0xa855                	// #43093
   271b0:	str	wzr, [sp, #164]
   271b4:	movk	x0, #0xaaaa, lsl #16
   271b8:	movk	x0, #0xaaaa, lsl #32
   271bc:	movk	x0, #0xaaa, lsl #48
   271c0:	cmp	x19, x0
   271c4:	lsl	x0, x19, #1
   271c8:	str	x0, [sp, #120]
   271cc:	b.gt	27730 <printf_parse@@Base+0x8250>
   271d0:	add	x0, x0, x19
   271d4:	lsl	x0, x0, #3
   271d8:	str	x0, [sp, #152]
   271dc:	bl	a5f0 <malloc@plt>
   271e0:	mov	x24, x0
   271e4:	cbz	x0, 27730 <printf_parse@@Base+0x8250>
   271e8:	sub	x22, x22, #0x8
   271ec:	mov	x25, x20
   271f0:	add	x21, x0, x22
   271f4:	add	x27, sp, #0xa8
   271f8:	ldr	x0, [sp, #96]
   271fc:	str	x20, [sp, #112]
   27200:	str	wzr, [sp, #148]
   27204:	add	x26, x0, #0x8
   27208:	add	x0, x21, x22
   2720c:	mov	x22, #0x0                   	// #0
   27210:	str	x0, [sp, #128]
   27214:	add	x0, sp, #0xa4
   27218:	str	x0, [sp, #104]
   2721c:	stp	xzr, xzr, [sp, #192]
   27220:	stp	xzr, xzr, [sp, #208]
   27224:	mov	x28, #0x0                   	// #0
   27228:	ldr	x7, [x26]
   2722c:	str	xzr, [sp, #176]
   27230:	cmp	x7, #0x0
   27234:	b.le	2727c <printf_parse@@Base+0x7d9c>
   27238:	ldr	x4, [x26, #8]
   2723c:	mov	x0, x27
   27240:	ldr	x1, [x23, #24]
   27244:	ldr	x4, [x4, x28, lsl #3]
   27248:	add	x28, x28, #0x1
   2724c:	ldr	x4, [x1, x4, lsl #3]
   27250:	cmn	x4, #0x1
   27254:	b.eq	27274 <printf_parse@@Base+0x7d94>  // b.none
   27258:	ldr	x1, [x23, #48]
   2725c:	add	x4, x4, x4, lsl #1
   27260:	add	x1, x1, x4, lsl #3
   27264:	bl	216b0 <printf_parse@@Base+0x21d0>
   27268:	str	w0, [sp, #164]
   2726c:	cbnz	w0, 27830 <printf_parse@@Base+0x8350>
   27270:	ldr	x7, [x26]
   27274:	cmp	x28, x7
   27278:	b.lt	27238 <printf_parse@@Base+0x7d58>  // b.tstop
   2727c:	ldr	x0, [sp, #104]
   27280:	mov	x2, x27
   27284:	mov	x1, x23
   27288:	mov	w3, #0x0                   	// #0
   2728c:	bl	263d8 <printf_parse@@Base+0x6ef8>
   27290:	str	x0, [x24, x22, lsl #3]
   27294:	cbz	x0, 27824 <printf_parse@@Base+0x8344>
   27298:	ldrsb	w1, [x0, #104]
   2729c:	tbnz	w1, #31, 27958 <printf_parse@@Base+0x8478>
   272a0:	ldr	x1, [sp, #128]
   272a4:	str	x0, [x21, x22, lsl #3]
   272a8:	str	x0, [x1, x22, lsl #3]
   272ac:	ldp	x3, x7, [x25]
   272b0:	add	x22, x22, #0x1
   272b4:	ldp	x0, x4, [sp, #192]
   272b8:	cmp	x22, x19
   272bc:	ldr	x1, [sp, #208]
   272c0:	add	x26, x26, #0x18
   272c4:	add	x25, x25, #0x20
   272c8:	orr	x3, x3, x0
   272cc:	str	x3, [sp, #192]
   272d0:	orr	x4, x4, x7
   272d4:	ldur	x7, [x25, #-16]
   272d8:	str	x4, [sp, #200]
   272dc:	ldr	x0, [sp, #216]
   272e0:	orr	x1, x1, x7
   272e4:	ldur	x4, [x25, #-8]
   272e8:	orr	x0, x0, x4
   272ec:	stp	x1, x0, [sp, #208]
   272f0:	b.ne	27224 <printf_parse@@Base+0x7d44>  // b.any
   272f4:	ldr	w0, [sp, #148]
   272f8:	str	x3, [sp, #104]
   272fc:	cbnz	w0, 27a94 <printf_parse@@Base+0x85b4>
   27300:	mov	x1, #0x100                 	// #256
   27304:	mov	x0, #0x8                   	// #8
   27308:	bl	a770 <calloc@plt>
   2730c:	mov	x9, x0
   27310:	ldr	x0, [sp, #136]
   27314:	str	x9, [x0, #88]
   27318:	cbz	x9, 27830 <printf_parse@@Base+0x8350>
   2731c:	ldr	x3, [sp, #104]
   27320:	mov	x0, #0xffffffffffffe8b8    	// #-5960
   27324:	mov	x1, #0xffffffffffffe8c0    	// #-5952
   27328:	add	x6, x23, x0
   2732c:	mov	x8, x9
   27330:	add	x11, sp, x1
   27334:	mov	x7, #0x1800                	// #6144
   27338:	mov	x10, #0x1820                	// #6176
   2733c:	ldr	x0, [x7, x11]
   27340:	mov	x4, x8
   27344:	mov	x1, #0x1                   	// #1
   27348:	cbz	x0, 27364 <printf_parse@@Base+0x7e84>
   2734c:	nop
   27350:	tbnz	w0, #0, 279ec <printf_parse@@Base+0x850c>
   27354:	lsl	x1, x1, #1
   27358:	lsr	x0, x0, #1
   2735c:	add	x4, x4, #0x8
   27360:	cbnz	x0, 27350 <printf_parse@@Base+0x7e70>
   27364:	ldr	x0, [sp, #112]
   27368:	add	x7, x7, #0x8
   2736c:	add	x8, x8, #0x200
   27370:	cmp	x7, x10
   27374:	add	x0, x0, #0x8
   27378:	str	x0, [sp, #112]
   2737c:	b.ne	2733c <printf_parse@@Base+0x7e5c>  // b.any
   27380:	tst	w3, #0x400
   27384:	b.eq	273a8 <printf_parse@@Base+0x7ec8>  // b.none
   27388:	mov	x0, #0x0                   	// #0
   2738c:	lsl	x1, x0, #5
   27390:	ldr	x1, [x20, x1]
   27394:	tst	w1, #0x400
   27398:	b.ne	27a78 <printf_parse@@Base+0x8598>  // b.any
   2739c:	add	x0, x0, #0x1
   273a0:	cmp	x0, x19
   273a4:	b.ne	2738c <printf_parse@@Base+0x7eac>  // b.any
   273a8:	mov	x0, x24
   273ac:	bl	aa50 <free@plt>
   273b0:	ldr	x1, [sp, #152]
   273b4:	ldr	x0, [sp, #184]
   273b8:	ldr	x20, [sp, #96]
   273bc:	add	x19, x20, x1
   273c0:	bl	aa50 <free@plt>
   273c4:	nop
   273c8:	ldr	x0, [x20, #16]
   273cc:	add	x20, x20, #0x18
   273d0:	bl	aa50 <free@plt>
   273d4:	cmp	x20, x19
   273d8:	b.ne	273c8 <printf_parse@@Base+0x7ee8>  // b.any
   273dc:	ldr	x0, [sp, #96]
   273e0:	bl	aa50 <free@plt>
   273e4:	mov	w0, #0x1                   	// #1
   273e8:	ldp	x19, x20, [sp, #16]
   273ec:	ldp	x21, x22, [sp, #32]
   273f0:	ldp	x25, x26, [sp, #64]
   273f4:	ldp	x27, x28, [sp, #80]
   273f8:	b	27780 <printf_parse@@Base+0x82a0>
   273fc:	ldrb	w2, [x2, x1]
   27400:	add	x3, sp, #0xc0
   27404:	mov	x1, #0x1                   	// #1
   27408:	ubfx	x4, x2, #6, #2
   2740c:	lsl	x2, x1, x2
   27410:	ldr	x1, [x3, x4, lsl #3]
   27414:	orr	x1, x1, x2
   27418:	str	x1, [x3, x4, lsl #3]
   2741c:	cbz	w0, 27520 <printf_parse@@Base+0x8040>
   27420:	tbnz	w0, #5, 276f0 <printf_parse@@Base+0x8210>
   27424:	tbnz	w0, #7, 27710 <printf_parse@@Base+0x8230>
   27428:	tbz	w0, #2, 274a4 <printf_parse@@Base+0x7fc4>
   2742c:	cmp	w10, #0x1
   27430:	b.eq	278b0 <printf_parse@@Base+0x83d0>  // b.none
   27434:	ldr	w1, [x23, #180]
   27438:	ldp	x15, x14, [x23, #184]
   2743c:	cmp	w1, #0x1
   27440:	ldp	x2, x5, [sp, #192]
   27444:	ldp	x3, x4, [x23, #200]
   27448:	ldp	x13, x9, [sp, #208]
   2744c:	b.le	27884 <printf_parse@@Base+0x83a4>
   27450:	ldr	x12, [x23, #120]
   27454:	ldr	x1, [x12]
   27458:	orn	x1, x15, x1
   2745c:	and	x1, x1, x2
   27460:	str	x1, [sp, #192]
   27464:	ldr	x2, [x12, #8]
   27468:	orn	x2, x14, x2
   2746c:	and	x2, x2, x5
   27470:	str	x2, [sp, #200]
   27474:	orr	x1, x1, x2
   27478:	ldr	x2, [x12, #16]
   2747c:	orn	x2, x3, x2
   27480:	and	x2, x2, x13
   27484:	str	x2, [sp, #208]
   27488:	ldr	x3, [x12, #24]
   2748c:	orn	x3, x4, x3
   27490:	and	x3, x3, x9
   27494:	str	x3, [sp, #216]
   27498:	orr	x2, x2, x3
   2749c:	orr	x1, x1, x2
   274a0:	cbz	x1, 27174 <printf_parse@@Base+0x7c94>
   274a4:	tbz	w0, #3, 27520 <printf_parse@@Base+0x8040>
   274a8:	cmp	w10, #0x1
   274ac:	b.eq	2794c <printf_parse@@Base+0x846c>  // b.none
   274b0:	ldr	w0, [x23, #180]
   274b4:	ldp	x4, x12, [sp, #192]
   274b8:	cmp	w0, #0x1
   274bc:	ldp	x0, x2, [x23, #184]
   274c0:	ldp	x1, x3, [x23, #200]
   274c4:	ldp	x13, x9, [sp, #208]
   274c8:	b.le	27858 <printf_parse@@Base+0x8378>
   274cc:	ldr	x5, [x23, #120]
   274d0:	ldr	x14, [x5]
   274d4:	and	x0, x0, x14
   274d8:	bic	x0, x4, x0
   274dc:	str	x0, [sp, #192]
   274e0:	ldr	x4, [x5, #8]
   274e4:	and	x2, x2, x4
   274e8:	bic	x2, x12, x2
   274ec:	str	x2, [sp, #200]
   274f0:	orr	x0, x0, x2
   274f4:	ldr	x2, [x5, #16]
   274f8:	and	x1, x1, x2
   274fc:	bic	x1, x13, x1
   27500:	str	x1, [sp, #208]
   27504:	ldr	x2, [x5, #24]
   27508:	and	x3, x3, x2
   2750c:	bic	x3, x9, x3
   27510:	str	x3, [sp, #216]
   27514:	orr	x1, x1, x3
   27518:	orr	x0, x0, x1
   2751c:	cbz	x0, 27174 <printf_parse@@Base+0x7c94>
   27520:	cmp	x19, #0x0
   27524:	mov	x22, x20
   27528:	mov	x26, #0x0                   	// #0
   2752c:	ldr	x27, [sp, #96]
   27530:	b.gt	27564 <printf_parse@@Base+0x8084>
   27534:	b	27688 <printf_parse@@Base+0x81a8>
   27538:	ldrb	w2, [x21]
   2753c:	ubfx	x1, x2, #6, #2
   27540:	add	x1, x20, x1, lsl #3
   27544:	ldr	x0, [x1, x0]
   27548:	lsr	x0, x0, x2
   2754c:	tbnz	w0, #0, 27570 <printf_parse@@Base+0x8090>
   27550:	add	x26, x26, #0x1
   27554:	add	x22, x22, #0x20
   27558:	cmp	x26, x19
   2755c:	add	x27, x27, #0x18
   27560:	b.ge	27688 <printf_parse@@Base+0x81a8>  // b.tcont
   27564:	cmp	w10, #0x1
   27568:	lsl	x0, x26, #5
   2756c:	b.eq	27538 <printf_parse@@Base+0x8058>  // b.none
   27570:	ldp	x28, x0, [x22]
   27574:	ldp	x5, x4, [x22, #16]
   27578:	ldp	x1, x14, [sp, #192]
   2757c:	ldp	x13, x12, [sp, #208]
   27580:	and	x18, x1, x28
   27584:	and	x17, x14, x0
   27588:	orr	x2, x18, x17
   2758c:	and	x16, x13, x5
   27590:	and	x15, x12, x4
   27594:	orr	x30, x16, x15
   27598:	orr	x2, x2, x30
   2759c:	cbz	x2, 27550 <printf_parse@@Base+0x8070>
   275a0:	bic	x30, x14, x0
   275a4:	bic	x2, x28, x1
   275a8:	bic	x0, x0, x14
   275ac:	bic	x28, x1, x28
   275b0:	bic	x14, x13, x5
   275b4:	bic	x5, x5, x13
   275b8:	bic	x13, x12, x4
   275bc:	bic	x4, x4, x12
   275c0:	stp	x28, x30, [sp, #192]
   275c4:	orr	x1, x14, x13
   275c8:	orr	x12, x5, x4
   275cc:	stp	x14, x13, [sp, #208]
   275d0:	orr	x28, x28, x30
   275d4:	orr	x13, x2, x0
   275d8:	orr	x28, x28, x1
   275dc:	orr	x1, x12, x13
   275e0:	cbz	x1, 27660 <printf_parse@@Base+0x8180>
   275e4:	lsl	x1, x19, #5
   275e8:	add	x12, x19, x19, lsl #1
   275ec:	add	x13, x20, x1
   275f0:	ldr	x3, [sp, #96]
   275f4:	str	x2, [x20, x1]
   275f8:	stp	x0, x5, [x13, #8]
   275fc:	str	x4, [x13, #24]
   27600:	add	x1, x3, x12, lsl #3
   27604:	stp	x18, x17, [x22]
   27608:	stp	x16, x15, [x22, #16]
   2760c:	ldr	x0, [x27, #8]
   27610:	str	x0, [x1, #8]
   27614:	cmp	x0, #0x0
   27618:	b.le	2771c <printf_parse@@Base+0x823c>
   2761c:	lsl	x2, x0, #3
   27620:	str	x0, [x3, x12, lsl #3]
   27624:	mov	x0, x2
   27628:	str	x2, [sp, #104]
   2762c:	str	w10, [sp, #120]
   27630:	str	x1, [sp, #128]
   27634:	bl	a5f0 <malloc@plt>
   27638:	ldr	x1, [sp, #128]
   2763c:	ldr	w10, [sp, #120]
   27640:	ldr	x2, [sp, #104]
   27644:	str	x0, [x1, #16]
   27648:	cbz	x0, 2778c <printf_parse@@Base+0x82ac>
   2764c:	ldr	x1, [x27, #16]
   27650:	str	w10, [sp, #104]
   27654:	bl	a2c0 <memcpy@plt>
   27658:	ldr	w10, [sp, #104]
   2765c:	add	x19, x19, #0x1
   27660:	ldr	x1, [x25, #16]
   27664:	mov	x0, x27
   27668:	ldr	x2, [sp, #112]
   2766c:	str	w10, [sp, #104]
   27670:	ldr	x1, [x1, x2]
   27674:	bl	20538 <printf_parse@@Base+0x1058>
   27678:	tst	w0, #0xff
   2767c:	b.eq	27790 <printf_parse@@Base+0x82b0>  // b.none
   27680:	ldr	w10, [sp, #104]
   27684:	cbnz	x28, 27550 <printf_parse@@Base+0x8070>
   27688:	cmp	x26, x19
   2768c:	b.ne	27174 <printf_parse@@Base+0x7c94>  // b.any
   27690:	add	x5, x20, x19, lsl #5
   27694:	add	x4, x19, x19, lsl #1
   27698:	ldp	x0, x1, [sp, #192]
   2769c:	lsl	x4, x4, #3
   276a0:	ldr	x9, [x25, #16]
   276a4:	ldp	x2, x3, [sp, #208]
   276a8:	stp	x0, x1, [x5]
   276ac:	mov	x0, #0x8                   	// #8
   276b0:	ldr	x1, [sp, #112]
   276b4:	stp	x2, x3, [x5, #16]
   276b8:	ldr	x6, [sp, #96]
   276bc:	ldr	x22, [x9, x1]
   276c0:	adrp	x1, 32000 <vasnprintf@@Base+0x1848>
   276c4:	add	x28, x6, x4
   276c8:	ldr	q0, [x1, #1712]
   276cc:	str	q0, [x6, x4]
   276d0:	bl	a5f0 <malloc@plt>
   276d4:	str	x0, [x28, #16]
   276d8:	cbz	x0, 279e0 <printf_parse@@Base+0x8500>
   276dc:	add	x19, x19, #0x1
   276e0:	str	x22, [x0]
   276e4:	stp	xzr, xzr, [sp, #192]
   276e8:	stp	xzr, xzr, [sp, #208]
   276ec:	b	27174 <printf_parse@@Base+0x7c94>
   276f0:	ldr	x1, [sp, #192]
   276f4:	stp	xzr, xzr, [sp, #192]
   276f8:	stp	xzr, xzr, [sp, #208]
   276fc:	tst	w1, #0x400
   27700:	b.eq	27174 <printf_parse@@Base+0x7c94>  // b.none
   27704:	mov	x1, #0x400                 	// #1024
   27708:	str	x1, [sp, #192]
   2770c:	tbz	w0, #7, 27428 <printf_parse@@Base+0x7f48>
   27710:	stp	xzr, xzr, [sp, #192]
   27714:	stp	xzr, xzr, [sp, #208]
   27718:	b	27174 <printf_parse@@Base+0x7c94>
   2771c:	stp	xzr, xzr, [x1]
   27720:	str	xzr, [x1, #16]
   27724:	b	2765c <printf_parse@@Base+0x817c>
   27728:	lsl	x0, x19, #1
   2772c:	str	x0, [sp, #120]
   27730:	mov	x0, x25
   27734:	bl	aa50 <free@plt>
   27738:	ldr	x0, [sp, #120]
   2773c:	add	x19, x0, x19
   27740:	ldr	x0, [sp, #96]
   27744:	mov	x20, x0
   27748:	add	x19, x0, x19, lsl #3
   2774c:	nop
   27750:	ldr	x0, [x20, #16]
   27754:	add	x20, x20, #0x18
   27758:	bl	aa50 <free@plt>
   2775c:	cmp	x19, x20
   27760:	b.ne	27750 <printf_parse@@Base+0x8270>  // b.any
   27764:	ldr	x0, [sp, #96]
   27768:	bl	aa50 <free@plt>
   2776c:	ldp	x19, x20, [sp, #16]
   27770:	mov	w0, #0x0                   	// #0
   27774:	ldp	x21, x22, [sp, #32]
   27778:	ldp	x25, x26, [sp, #64]
   2777c:	ldp	x27, x28, [sp, #80]
   27780:	ldp	x23, x24, [sp, #48]
   27784:	ldp	x29, x30, [sp], #224
   27788:	ret
   2778c:	stp	xzr, xzr, [x1]
   27790:	mov	x20, #0x0                   	// #0
   27794:	ldr	x0, [sp, #96]
   27798:	add	x22, x0, #0x10
   2779c:	nop
   277a0:	ldr	x0, [x22], #24
   277a4:	add	x20, x20, #0x1
   277a8:	bl	aa50 <free@plt>
   277ac:	cmp	x20, x19
   277b0:	b.lt	277a0 <printf_parse@@Base+0x82c0>  // b.tstop
   277b4:	b	27764 <printf_parse@@Base+0x8284>
   277b8:	ldr	w1, [x23, #180]
   277bc:	cmp	w1, #0x1
   277c0:	b.le	27840 <printf_parse@@Base+0x8360>
   277c4:	ldr	x2, [x23, #120]
   277c8:	ldp	x1, x5, [sp, #192]
   277cc:	ldr	x3, [x2]
   277d0:	ldr	x4, [sp, #208]
   277d4:	orr	x1, x1, x3
   277d8:	str	x1, [sp, #192]
   277dc:	ldr	x3, [sp, #216]
   277e0:	ldr	x9, [x2, #8]
   277e4:	orr	x5, x5, x9
   277e8:	str	x5, [sp, #200]
   277ec:	ldr	x5, [x2, #16]
   277f0:	orr	x4, x4, x5
   277f4:	str	x4, [sp, #208]
   277f8:	ldr	x2, [x2, #24]
   277fc:	orr	x2, x3, x2
   27800:	str	x2, [sp, #216]
   27804:	ldr	x2, [x23, #216]
   27808:	tbnz	w2, #6, 27814 <printf_parse@@Base+0x8334>
   2780c:	and	x1, x1, #0xfffffffffffffbff
   27810:	str	x1, [sp, #192]
   27814:	tbz	w2, #7, 2741c <printf_parse@@Base+0x7f3c>
   27818:	and	x1, x1, #0xfffffffffffffffe
   2781c:	str	x1, [sp, #192]
   27820:	b	2741c <printf_parse@@Base+0x7f3c>
   27824:	ldr	w1, [sp, #164]
   27828:	cbz	w1, 27298 <printf_parse@@Base+0x7db8>
   2782c:	nop
   27830:	mov	x0, x24
   27834:	bl	aa50 <free@plt>
   27838:	ldr	x25, [sp, #184]
   2783c:	b	27730 <printf_parse@@Base+0x8250>
   27840:	mov	x2, #0xffffffffffffffff    	// #-1
   27844:	mov	x3, #0xffffffffffffffff    	// #-1
   27848:	mov	x1, #0xffffffffffffffff    	// #-1
   2784c:	stp	x2, x3, [sp, #192]
   27850:	stp	x2, x3, [sp, #208]
   27854:	b	27804 <printf_parse@@Base+0x8324>
   27858:	bic	x4, x4, x0
   2785c:	bic	x2, x12, x2
   27860:	bic	x1, x13, x1
   27864:	bic	x3, x9, x3
   27868:	stp	x4, x2, [sp, #192]
   2786c:	orr	x0, x4, x2
   27870:	orr	x5, x1, x3
   27874:	stp	x1, x3, [sp, #208]
   27878:	orr	x0, x0, x5
   2787c:	cbz	x0, 27174 <printf_parse@@Base+0x7c94>
   27880:	b	27520 <printf_parse@@Base+0x8040>
   27884:	and	x13, x13, x3
   27888:	and	x2, x2, x15
   2788c:	and	x5, x5, x14
   27890:	and	x3, x9, x4
   27894:	stp	x2, x5, [sp, #192]
   27898:	orr	x1, x2, x5
   2789c:	orr	x4, x13, x3
   278a0:	stp	x13, x3, [sp, #208]
   278a4:	orr	x1, x1, x4
   278a8:	cbnz	x1, 274a4 <printf_parse@@Base+0x7fc4>
   278ac:	b	27174 <printf_parse@@Base+0x7c94>
   278b0:	ldrb	w1, [x21, #10]
   278b4:	tbz	w1, #6, 27710 <printf_parse@@Base+0x8230>
   278b8:	ldr	w1, [x23, #180]
   278bc:	ldp	x15, x14, [x23, #184]
   278c0:	cmp	w1, #0x1
   278c4:	ldp	x2, x5, [sp, #192]
   278c8:	ldp	x3, x4, [x23, #200]
   278cc:	ldp	x13, x9, [sp, #208]
   278d0:	b.gt	27450 <printf_parse@@Base+0x7f70>
   278d4:	b	27884 <printf_parse@@Base+0x83a4>
   278d8:	ldr	x1, [x23, #216]
   278dc:	mov	x2, #0xffffffffffffffff    	// #-1
   278e0:	mov	x3, #0xffffffffffffffff    	// #-1
   278e4:	stp	x2, x3, [sp, #192]
   278e8:	mov	x2, #0xfffffffffffffffe    	// #-2
   278ec:	tbnz	w1, #6, 278fc <printf_parse@@Base+0x841c>
   278f0:	mov	x3, #0xfffffffffffffbff    	// #-1025
   278f4:	mov	x2, #0xfffffffffffffbfe    	// #-1026
   278f8:	str	x3, [sp, #192]
   278fc:	tbz	w1, #7, 2741c <printf_parse@@Base+0x7f3c>
   27900:	str	x2, [sp, #192]
   27904:	b	2741c <printf_parse@@Base+0x7f3c>
   27908:	ldr	x1, [x2, x1]
   2790c:	ldp	x2, x4, [sp, #192]
   27910:	ldr	x3, [x1]
   27914:	orr	x2, x2, x3
   27918:	str	x2, [sp, #192]
   2791c:	ldr	x3, [sp, #208]
   27920:	ldr	x5, [x1, #8]
   27924:	ldr	x2, [sp, #216]
   27928:	orr	x4, x4, x5
   2792c:	str	x4, [sp, #200]
   27930:	ldr	x4, [x1, #16]
   27934:	orr	x3, x3, x4
   27938:	str	x3, [sp, #208]
   2793c:	ldr	x1, [x1, #24]
   27940:	orr	x1, x2, x1
   27944:	str	x1, [sp, #216]
   27948:	b	2741c <printf_parse@@Base+0x7f3c>
   2794c:	ldrb	w0, [x21, #10]
   27950:	tbz	w0, #6, 274b0 <printf_parse@@Base+0x7fd0>
   27954:	b	27710 <printf_parse@@Base+0x8230>
   27958:	ldr	x0, [sp, #104]
   2795c:	mov	x2, x27
   27960:	mov	x1, x23
   27964:	mov	w3, #0x1                   	// #1
   27968:	bl	263d8 <printf_parse@@Base+0x6ef8>
   2796c:	str	x0, [x21, x22, lsl #3]
   27970:	cbz	x0, 27a6c <printf_parse@@Base+0x858c>
   27974:	ldr	x1, [x24, x22, lsl #3]
   27978:	cmp	x0, x1
   2797c:	b.eq	27994 <printf_parse@@Base+0x84b4>  // b.none
   27980:	ldr	w0, [x23, #180]
   27984:	cmp	w0, #0x2
   27988:	ldr	w0, [sp, #148]
   2798c:	csinc	w0, w0, wzr, lt  // lt = tstop
   27990:	str	w0, [sp, #148]
   27994:	ldr	x0, [sp, #104]
   27998:	mov	x1, x23
   2799c:	mov	x2, x27
   279a0:	mov	w3, #0x2                   	// #2
   279a4:	bl	263d8 <printf_parse@@Base+0x6ef8>
   279a8:	ldr	x1, [sp, #128]
   279ac:	str	x0, [x1, x22, lsl #3]
   279b0:	cbnz	x0, 272ac <printf_parse@@Base+0x7dcc>
   279b4:	ldr	w0, [sp, #164]
   279b8:	cbz	w0, 272ac <printf_parse@@Base+0x7dcc>
   279bc:	b	27830 <printf_parse@@Base+0x8350>
   279c0:	ldp	x19, x20, [sp, #16]
   279c4:	ldp	x21, x22, [sp, #32]
   279c8:	ldp	x25, x26, [sp, #64]
   279cc:	ldp	x27, x28, [sp, #80]
   279d0:	mov	w0, #0x0                   	// #0
   279d4:	ldp	x23, x24, [sp, #48]
   279d8:	ldp	x29, x30, [sp], #224
   279dc:	ret
   279e0:	stp	xzr, xzr, [x28]
   279e4:	cbz	x19, 27764 <printf_parse@@Base+0x8284>
   279e8:	b	27790 <printf_parse@@Base+0x82b0>
   279ec:	ldr	x2, [sp, #112]
   279f0:	ldr	x2, [x2]
   279f4:	tst	x1, x2
   279f8:	mov	x2, #0x0                   	// #0
   279fc:	b.ne	27a1c <printf_parse@@Base+0x853c>  // b.any
   27a00:	add	x2, x2, #0x1
   27a04:	ldr	x12, [sp, #112]
   27a08:	lsl	x5, x2, #5
   27a0c:	ldr	x5, [x12, x5]
   27a10:	tst	x1, x5
   27a14:	b.eq	27a00 <printf_parse@@Base+0x8520>  // b.none
   27a18:	lsl	x2, x2, #3
   27a1c:	ldr	x5, [x6, x7]
   27a20:	tst	x1, x5
   27a24:	b.eq	27a34 <printf_parse@@Base+0x8554>  // b.none
   27a28:	ldr	x2, [x21, x2]
   27a2c:	str	x2, [x4]
   27a30:	b	27354 <printf_parse@@Base+0x7e74>
   27a34:	ldr	x2, [x24, x2]
   27a38:	str	x2, [x4]
   27a3c:	b	27354 <printf_parse@@Base+0x7e74>
   27a40:	bl	aa50 <free@plt>
   27a44:	mov	x1, #0x100                 	// #256
   27a48:	mov	x0, #0x8                   	// #8
   27a4c:	bl	a770 <calloc@plt>
   27a50:	cmp	x0, #0x0
   27a54:	ldr	x1, [sp, #136]
   27a58:	ldp	x19, x20, [sp, #16]
   27a5c:	ldp	x25, x26, [sp, #64]
   27a60:	str	x0, [x1, #88]
   27a64:	cset	w0, ne  // ne = any
   27a68:	b	27780 <printf_parse@@Base+0x82a0>
   27a6c:	ldr	w1, [sp, #164]
   27a70:	cbz	w1, 27974 <printf_parse@@Base+0x8494>
   27a74:	b	27830 <printf_parse@@Base+0x8350>
   27a78:	ldr	x1, [sp, #128]
   27a7c:	ldr	x0, [x1, x0, lsl #3]
   27a80:	str	x0, [x9, #80]
   27a84:	ldr	w1, [sp, #148]
   27a88:	cbz	w1, 273a8 <printf_parse@@Base+0x7ec8>
   27a8c:	str	x0, [x9, #2128]
   27a90:	b	273a8 <printf_parse@@Base+0x7ec8>
   27a94:	mov	x1, #0x200                 	// #512
   27a98:	mov	x0, #0x8                   	// #8
   27a9c:	bl	a770 <calloc@plt>
   27aa0:	mov	x9, x0
   27aa4:	ldr	x0, [sp, #136]
   27aa8:	str	x9, [x0, #96]
   27aac:	cbz	x9, 27830 <printf_parse@@Base+0x8350>
   27ab0:	ldr	x3, [sp, #104]
   27ab4:	add	x10, sp, #0xc0
   27ab8:	add	x8, x9, #0x800
   27abc:	mov	w7, #0x0                   	// #0
   27ac0:	ldr	x0, [x10]
   27ac4:	mov	x4, x8
   27ac8:	mov	x2, #0x1                   	// #1
   27acc:	cbz	x0, 27ae4 <printf_parse@@Base+0x8604>
   27ad0:	tbnz	w0, #0, 27b08 <printf_parse@@Base+0x8628>
   27ad4:	lsl	x2, x2, #1
   27ad8:	lsr	x0, x0, #1
   27adc:	add	x4, x4, #0x8
   27ae0:	cbnz	x0, 27ad0 <printf_parse@@Base+0x85f0>
   27ae4:	ldr	x0, [sp, #112]
   27ae8:	add	w7, w7, #0x40
   27aec:	add	x10, x10, #0x8
   27af0:	cmp	w7, #0x100
   27af4:	add	x0, x0, #0x8
   27af8:	str	x0, [sp, #112]
   27afc:	add	x8, x8, #0x200
   27b00:	b.ne	27ac0 <printf_parse@@Base+0x85e0>  // b.any
   27b04:	b	27380 <printf_parse@@Base+0x7ea0>
   27b08:	ldr	x1, [sp, #112]
   27b0c:	ldr	x1, [x1]
   27b10:	tst	x2, x1
   27b14:	b.ne	27b50 <printf_parse@@Base+0x8670>  // b.any
   27b18:	mov	x1, #0x0                   	// #0
   27b1c:	add	x1, x1, #0x1
   27b20:	ldr	x11, [sp, #112]
   27b24:	lsl	x5, x1, #5
   27b28:	mov	x6, x1
   27b2c:	ldr	x5, [x11, x5]
   27b30:	tst	x2, x5
   27b34:	b.eq	27b1c <printf_parse@@Base+0x863c>  // b.none
   27b38:	sub	x1, x4, #0x8, lsl #12
   27b3c:	ldr	x5, [x24, x6, lsl #3]
   27b40:	str	x5, [x1, #30720]
   27b44:	ldr	x1, [x21, x6, lsl #3]
   27b48:	str	x1, [x4]
   27b4c:	b	27ad4 <printf_parse@@Base+0x85f4>
   27b50:	mov	x6, #0x0                   	// #0
   27b54:	b	27b38 <printf_parse@@Base+0x8658>
   27b58:	ldr	x0, [sp, #96]
   27b5c:	bl	aa50 <free@plt>
   27b60:	cbnz	x19, 279c0 <printf_parse@@Base+0x84e0>
   27b64:	ldp	x21, x22, [sp, #32]
   27b68:	ldp	x27, x28, [sp, #80]
   27b6c:	b	27a44 <printf_parse@@Base+0x8564>
   27b70:	stp	x29, x30, [sp, #-80]!
   27b74:	mov	x29, sp
   27b78:	stp	x19, x20, [sp, #16]
   27b7c:	stp	x21, x22, [sp, #32]
   27b80:	ldr	x22, [x1]
   27b84:	stp	x23, x24, [sp, #48]
   27b88:	mov	x24, x2
   27b8c:	ldr	x19, [x2, #8]
   27b90:	str	x25, [sp, #64]
   27b94:	mov	x25, x0
   27b98:	ldrb	w0, [x1, #56]
   27b9c:	tst	x0, #0x10
   27ba0:	ccmp	x19, #0x0, #0x4, ne  // ne = any
   27ba4:	b.ne	27dcc <printf_parse@@Base+0x88ec>  // b.any
   27ba8:	ldr	w2, [x22, #128]
   27bac:	cmp	w2, #0xf
   27bb0:	b.eq	27e28 <printf_parse@@Base+0x8948>  // b.none
   27bb4:	sbfiz	x20, x2, #6, #32
   27bb8:	sxtw	x1, w2
   27bbc:	add	x4, x20, #0x30
   27bc0:	add	x0, x20, #0x8
   27bc4:	ldr	x20, [x22, #112]
   27bc8:	add	w2, w2, #0x1
   27bcc:	movi	v0.4s, #0x0
   27bd0:	lsl	x1, x1, #6
   27bd4:	add	x3, x20, x1
   27bd8:	add	x4, x20, x4
   27bdc:	str	w2, [x22, #128]
   27be0:	add	x2, x1, #0x20
   27be4:	add	x2, x20, x2
   27be8:	mov	w6, #0x8                   	// #8
   27bec:	stur	q0, [x3, #8]
   27bf0:	add	x20, x20, x0
   27bf4:	mov	x5, #0xffffffffffffffff    	// #-1
   27bf8:	str	xzr, [x3, #24]
   27bfc:	strb	w6, [x4, #8]
   27c00:	ldrb	w0, [x2, #26]
   27c04:	and	w0, w0, #0xfffffff3
   27c08:	strb	w0, [x2, #26]
   27c0c:	str	x5, [x3, #64]
   27c10:	str	q0, [x3, #32]
   27c14:	ldr	w3, [x22, #128]
   27c18:	cmp	w3, #0xf
   27c1c:	b.eq	27e58 <printf_parse@@Base+0x8978>  // b.none
   27c20:	sbfiz	x2, x3, #6, #32
   27c24:	sxtw	x1, w3
   27c28:	ldr	x21, [x22, #112]
   27c2c:	add	x0, x2, #0x8
   27c30:	add	w3, w3, #0x1
   27c34:	add	x2, x2, #0x30
   27c38:	movi	v0.4s, #0x0
   27c3c:	lsl	x1, x1, #6
   27c40:	add	x4, x21, x1
   27c44:	add	x2, x21, x2
   27c48:	str	w3, [x22, #128]
   27c4c:	add	x3, x1, #0x20
   27c50:	add	x3, x21, x3
   27c54:	mov	w6, #0x9                   	// #9
   27c58:	stur	q0, [x4, #8]
   27c5c:	add	x21, x21, x0
   27c60:	mov	x5, #0xffffffffffffffff    	// #-1
   27c64:	str	xzr, [x4, #24]
   27c68:	strb	w6, [x2, #8]
   27c6c:	ldrb	w0, [x3, #26]
   27c70:	and	w0, w0, #0xfffffff3
   27c74:	strb	w0, [x3, #26]
   27c78:	str	x5, [x4, #64]
   27c7c:	str	q0, [x4, #32]
   27c80:	ldr	w3, [x22, #128]
   27c84:	mov	x23, x21
   27c88:	cbz	x19, 27d00 <printf_parse@@Base+0x8820>
   27c8c:	cmp	w3, #0xf
   27c90:	b.eq	27eb8 <printf_parse@@Base+0x89d8>  // b.none
   27c94:	sbfiz	x0, x3, #6, #32
   27c98:	sxtw	x1, w3
   27c9c:	ldr	x23, [x22, #112]
   27ca0:	add	x6, x0, #0x8
   27ca4:	add	x2, x0, #0x30
   27ca8:	add	w3, w3, #0x1
   27cac:	lsl	x1, x1, #6
   27cb0:	add	x2, x23, x2
   27cb4:	add	x0, x23, x1
   27cb8:	add	x4, x1, #0x20
   27cbc:	str	w3, [x22, #128]
   27cc0:	add	x3, x23, x4
   27cc4:	mov	w5, #0x10                  	// #16
   27cc8:	mov	x4, #0xffffffffffffffff    	// #-1
   27ccc:	stp	xzr, x19, [x0, #8]
   27cd0:	add	x23, x23, x6
   27cd4:	str	x21, [x0, #24]
   27cd8:	strb	w5, [x2, #8]
   27cdc:	ldrb	w2, [x3, #26]
   27ce0:	and	w2, w2, #0xfffffff3
   27ce4:	strb	w2, [x3, #26]
   27ce8:	stp	xzr, xzr, [x0, #32]
   27cec:	str	x4, [x0, #64]
   27cf0:	str	x23, [x19]
   27cf4:	cbz	x21, 27cfc <printf_parse@@Base+0x881c>
   27cf8:	str	x23, [x21]
   27cfc:	ldr	w3, [x22, #128]
   27d00:	cmp	w3, #0xf
   27d04:	b.eq	27e88 <printf_parse@@Base+0x89a8>  // b.none
   27d08:	sbfiz	x19, x3, #6, #32
   27d0c:	sxtw	x1, w3
   27d10:	add	x5, x19, #0x30
   27d14:	add	x0, x19, #0x8
   27d18:	ldr	x19, [x22, #112]
   27d1c:	add	w3, w3, #0x1
   27d20:	lsl	x1, x1, #6
   27d24:	add	x5, x19, x5
   27d28:	add	x2, x19, x1
   27d2c:	add	x4, x1, #0x20
   27d30:	str	w3, [x22, #128]
   27d34:	add	x3, x19, x4
   27d38:	mov	w6, #0x10                  	// #16
   27d3c:	add	x19, x19, x0
   27d40:	stp	xzr, x20, [x2, #8]
   27d44:	mov	x4, #0xffffffffffffffff    	// #-1
   27d48:	str	x23, [x2, #24]
   27d4c:	strb	w6, [x5, #8]
   27d50:	ldrb	w0, [x3, #26]
   27d54:	and	w0, w0, #0xfffffff3
   27d58:	strb	w0, [x3, #26]
   27d5c:	stp	xzr, xzr, [x2, #32]
   27d60:	str	x4, [x2, #64]
   27d64:	cbz	x20, 27d6c <printf_parse@@Base+0x888c>
   27d68:	str	x19, [x20]
   27d6c:	cbz	x23, 27e00 <printf_parse@@Base+0x8920>
   27d70:	str	x19, [x23]
   27d74:	cbz	x19, 27e00 <printf_parse@@Base+0x8920>
   27d78:	cmp	x20, #0x0
   27d7c:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   27d80:	b.eq	27e00 <printf_parse@@Base+0x8920>  // b.none
   27d84:	ldr	x0, [x24, #40]
   27d88:	str	x0, [x21, #40]
   27d8c:	str	x0, [x20, #40]
   27d90:	ldrb	w0, [x24, #50]
   27d94:	ldrb	w1, [x21, #50]
   27d98:	ubfx	x0, x0, #3, #1
   27d9c:	bfi	w1, w0, #3, #1
   27da0:	strb	w1, [x21, #50]
   27da4:	ldrb	w1, [x20, #50]
   27da8:	bfi	w1, w0, #3, #1
   27dac:	strb	w1, [x20, #50]
   27db0:	mov	x0, x19
   27db4:	ldp	x19, x20, [sp, #16]
   27db8:	ldp	x21, x22, [sp, #32]
   27dbc:	ldp	x23, x24, [sp, #48]
   27dc0:	ldr	x25, [sp, #64]
   27dc4:	ldp	x29, x30, [sp], #80
   27dc8:	ret
   27dcc:	ldr	x0, [x2, #40]
   27dd0:	cmp	x0, #0x3f
   27dd4:	b.gt	27db0 <printf_parse@@Base+0x88d0>
   27dd8:	ldr	x1, [x22, #160]
   27ddc:	lsr	x0, x1, x0
   27de0:	tbnz	w0, #0, 27ba8 <printf_parse@@Base+0x86c8>
   27de4:	mov	x0, x19
   27de8:	ldp	x19, x20, [sp, #16]
   27dec:	ldp	x21, x22, [sp, #32]
   27df0:	ldp	x23, x24, [sp, #48]
   27df4:	ldr	x25, [sp, #64]
   27df8:	ldp	x29, x30, [sp], #80
   27dfc:	ret
   27e00:	mov	w0, #0xc                   	// #12
   27e04:	str	w0, [x25]
   27e08:	mov	x19, #0x0                   	// #0
   27e0c:	mov	x0, x19
   27e10:	ldp	x19, x20, [sp, #16]
   27e14:	ldp	x21, x22, [sp, #32]
   27e18:	ldp	x23, x24, [sp, #48]
   27e1c:	ldr	x25, [sp, #64]
   27e20:	ldp	x29, x30, [sp], #80
   27e24:	ret
   27e28:	mov	x0, #0x3c8                 	// #968
   27e2c:	bl	a5f0 <malloc@plt>
   27e30:	mov	x20, x0
   27e34:	cbz	x0, 27ef0 <printf_parse@@Base+0x8a10>
   27e38:	ldr	x0, [x22, #112]
   27e3c:	str	x0, [x20]
   27e40:	mov	w2, #0x1                   	// #1
   27e44:	mov	x4, #0x30                  	// #48
   27e48:	mov	x1, #0x0                   	// #0
   27e4c:	mov	x0, #0x8                   	// #8
   27e50:	str	x20, [x22, #112]
   27e54:	b	27bcc <printf_parse@@Base+0x86ec>
   27e58:	mov	x0, #0x3c8                 	// #968
   27e5c:	bl	a5f0 <malloc@plt>
   27e60:	mov	x21, x0
   27e64:	cbz	x0, 27ee8 <printf_parse@@Base+0x8a08>
   27e68:	ldr	x0, [x22, #112]
   27e6c:	str	x0, [x21]
   27e70:	mov	x2, #0x30                  	// #48
   27e74:	mov	w3, #0x1                   	// #1
   27e78:	mov	x1, #0x0                   	// #0
   27e7c:	mov	x0, #0x8                   	// #8
   27e80:	str	x21, [x22, #112]
   27e84:	b	27c38 <printf_parse@@Base+0x8758>
   27e88:	mov	x0, #0x3c8                 	// #968
   27e8c:	bl	a5f0 <malloc@plt>
   27e90:	mov	x19, x0
   27e94:	cbz	x0, 27e00 <printf_parse@@Base+0x8920>
   27e98:	ldr	x0, [x22, #112]
   27e9c:	str	x0, [x19]
   27ea0:	mov	w3, #0x1                   	// #1
   27ea4:	mov	x5, #0x30                  	// #48
   27ea8:	mov	x1, #0x0                   	// #0
   27eac:	mov	x0, #0x8                   	// #8
   27eb0:	str	x19, [x22, #112]
   27eb4:	b	27d20 <printf_parse@@Base+0x8840>
   27eb8:	mov	x0, #0x3c8                 	// #968
   27ebc:	bl	a5f0 <malloc@plt>
   27ec0:	mov	x23, x0
   27ec4:	cbz	x0, 27ef8 <printf_parse@@Base+0x8a18>
   27ec8:	ldr	x0, [x22, #112]
   27ecc:	str	x0, [x23]
   27ed0:	mov	x2, #0x30                  	// #48
   27ed4:	mov	w3, #0x1                   	// #1
   27ed8:	mov	x6, #0x8                   	// #8
   27edc:	mov	x1, #0x0                   	// #0
   27ee0:	str	x23, [x22, #112]
   27ee4:	b	27cac <printf_parse@@Base+0x87cc>
   27ee8:	mov	x21, #0x0                   	// #0
   27eec:	b	27c80 <printf_parse@@Base+0x87a0>
   27ef0:	mov	x20, #0x0                   	// #0
   27ef4:	b	27c14 <printf_parse@@Base+0x8734>
   27ef8:	ldr	w3, [x22, #128]
   27efc:	mov	x23, #0x0                   	// #0
   27f00:	b	27d00 <printf_parse@@Base+0x8820>
   27f04:	nop
   27f08:	stp	x29, x30, [sp, #-64]!
   27f0c:	mov	x29, sp
   27f10:	stp	x19, x20, [sp, #16]
   27f14:	mov	x20, x0
   27f18:	mov	x19, x2
   27f1c:	cbz	x1, 27f44 <printf_parse@@Base+0x8a64>
   27f20:	stp	x21, x22, [sp, #32]
   27f24:	cmp	x2, #0x0
   27f28:	mov	x21, x1
   27f2c:	ldr	x22, [x1, #8]
   27f30:	ccmp	x22, #0x0, #0x4, ne  // ne = any
   27f34:	b.gt	27f6c <printf_parse@@Base+0x8a8c>
   27f38:	cmp	x22, #0x0
   27f3c:	b.gt	27f80 <printf_parse@@Base+0x8aa0>
   27f40:	ldp	x21, x22, [sp, #32]
   27f44:	cbz	x19, 27f54 <printf_parse@@Base+0x8a74>
   27f48:	ldr	x2, [x19, #8]
   27f4c:	cmp	x2, #0x0
   27f50:	b.gt	27fb4 <printf_parse@@Base+0x8ad4>
   27f54:	mov	w0, #0x0                   	// #0
   27f58:	stp	xzr, xzr, [x20]
   27f5c:	str	xzr, [x20, #16]
   27f60:	ldp	x19, x20, [sp, #16]
   27f64:	ldp	x29, x30, [sp], #64
   27f68:	ret
   27f6c:	str	x23, [sp, #48]
   27f70:	ldr	x23, [x2, #8]
   27f74:	cmp	x23, #0x0
   27f78:	b.gt	27ff4 <printf_parse@@Base+0x8b14>
   27f7c:	ldr	x23, [sp, #48]
   27f80:	dup	v0.2d, x22
   27f84:	lsl	x22, x22, #3
   27f88:	mov	x0, x22
   27f8c:	str	q0, [x20]
   27f90:	bl	a5f0 <malloc@plt>
   27f94:	str	x0, [x20, #16]
   27f98:	cbz	x0, 280c0 <printf_parse@@Base+0x8be0>
   27f9c:	ldr	x1, [x21, #16]
   27fa0:	mov	x2, x22
   27fa4:	bl	a2c0 <memcpy@plt>
   27fa8:	mov	w0, #0x0                   	// #0
   27fac:	ldp	x21, x22, [sp, #32]
   27fb0:	b	27f60 <printf_parse@@Base+0x8a80>
   27fb4:	dup	v0.2d, x2
   27fb8:	stp	x21, x22, [sp, #32]
   27fbc:	lsl	x21, x2, #3
   27fc0:	mov	x0, x21
   27fc4:	str	q0, [x20]
   27fc8:	bl	a5f0 <malloc@plt>
   27fcc:	str	x0, [x20, #16]
   27fd0:	cbz	x0, 280c0 <printf_parse@@Base+0x8be0>
   27fd4:	ldr	x1, [x19, #16]
   27fd8:	mov	x2, x21
   27fdc:	bl	a2c0 <memcpy@plt>
   27fe0:	mov	w0, #0x0                   	// #0
   27fe4:	ldp	x19, x20, [sp, #16]
   27fe8:	ldp	x21, x22, [sp, #32]
   27fec:	ldp	x29, x30, [sp], #64
   27ff0:	ret
   27ff4:	add	x0, x22, x23
   27ff8:	str	x0, [x20]
   27ffc:	lsl	x0, x0, #3
   28000:	bl	a5f0 <malloc@plt>
   28004:	str	x0, [x20, #16]
   28008:	cbz	x0, 280d0 <printf_parse@@Base+0x8bf0>
   2800c:	sub	x7, x0, #0x8
   28010:	mov	x3, #0x0                   	// #0
   28014:	mov	x4, #0x0                   	// #0
   28018:	ldr	x6, [x19, #16]
   2801c:	mov	x19, #0x0                   	// #0
   28020:	ldr	x1, [x21, #16]
   28024:	b	28044 <printf_parse@@Base+0x8b64>
   28028:	cinc	x3, x3, eq  // eq = none
   2802c:	add	x4, x4, #0x1
   28030:	str	x2, [x7, x19, lsl #3]
   28034:	cmp	x22, x4
   28038:	b.le	28064 <printf_parse@@Base+0x8b84>
   2803c:	cmp	x23, x3
   28040:	b.le	280a4 <printf_parse@@Base+0x8bc4>
   28044:	ldr	x2, [x1, x4, lsl #3]
   28048:	add	x19, x19, #0x1
   2804c:	ldr	x5, [x6, x3, lsl #3]
   28050:	cmp	x2, x5
   28054:	b.le	28028 <printf_parse@@Base+0x8b48>
   28058:	add	x3, x3, #0x1
   2805c:	str	x5, [x7, x19, lsl #3]
   28060:	b	28034 <printf_parse@@Base+0x8b54>
   28064:	cmp	x23, x3
   28068:	b.gt	28088 <printf_parse@@Base+0x8ba8>
   2806c:	ldp	x21, x22, [sp, #32]
   28070:	mov	w0, #0x0                   	// #0
   28074:	ldr	x23, [sp, #48]
   28078:	str	x19, [x20, #8]
   2807c:	ldp	x19, x20, [sp, #16]
   28080:	ldp	x29, x30, [sp], #64
   28084:	ret
   28088:	sub	x2, x23, x3
   2808c:	add	x0, x0, x19, lsl #3
   28090:	add	x1, x6, x3, lsl #3
   28094:	add	x19, x19, x2
   28098:	lsl	x2, x2, #3
   2809c:	bl	a2c0 <memcpy@plt>
   280a0:	b	2806c <printf_parse@@Base+0x8b8c>
   280a4:	sub	x2, x22, x4
   280a8:	add	x1, x1, x4, lsl #3
   280ac:	add	x0, x0, x19, lsl #3
   280b0:	add	x19, x19, x2
   280b4:	lsl	x2, x2, #3
   280b8:	bl	a2c0 <memcpy@plt>
   280bc:	b	2806c <printf_parse@@Base+0x8b8c>
   280c0:	mov	w0, #0xc                   	// #12
   280c4:	stp	xzr, xzr, [x20]
   280c8:	ldp	x21, x22, [sp, #32]
   280cc:	b	27f60 <printf_parse@@Base+0x8a80>
   280d0:	mov	w0, #0xc                   	// #12
   280d4:	ldp	x21, x22, [sp, #32]
   280d8:	ldr	x23, [sp, #48]
   280dc:	b	27f60 <printf_parse@@Base+0x8a80>
   280e0:	stp	x29, x30, [sp, #-240]!
   280e4:	mov	x29, sp
   280e8:	stp	x19, x20, [sp, #16]
   280ec:	ldr	x20, [x0, #72]
   280f0:	stp	x25, x26, [sp, #64]
   280f4:	stp	x27, x28, [sp, #80]
   280f8:	mov	x28, x0
   280fc:	lsl	x0, x20, #3
   28100:	ldr	x26, [x1]
   28104:	stp	x23, x24, [sp, #48]
   28108:	stp	x2, x0, [sp, #144]
   2810c:	cmp	x26, #0x0
   28110:	str	x1, [sp, #192]
   28114:	ldr	x23, [x28, #152]
   28118:	b.le	281a8 <printf_parse@@Base+0x8cc8>
   2811c:	add	x0, sp, #0xd8
   28120:	stp	x21, x22, [sp, #32]
   28124:	mov	x22, #0x0                   	// #0
   28128:	str	x0, [sp, #168]
   2812c:	add	x0, sp, #0xd4
   28130:	str	x0, [sp, #176]
   28134:	nop
   28138:	ldr	x0, [sp, #144]
   2813c:	ldr	x1, [x0]
   28140:	ldr	x0, [x23]
   28144:	ldr	x19, [x1, x22, lsl #3]
   28148:	lsl	x21, x19, #4
   2814c:	add	x0, x0, x21
   28150:	ldrb	w1, [x0, #8]
   28154:	cmp	w1, #0x4
   28158:	b.ne	28198 <printf_parse@@Base+0x8cb8>  // b.any
   2815c:	ldr	w24, [x0, #8]
   28160:	tst	w24, #0x3ff00
   28164:	b.eq	281d0 <printf_parse@@Base+0x8cf0>  // b.none
   28168:	ldr	w2, [x28, #160]
   2816c:	mov	x1, x20
   28170:	mov	x0, x28
   28174:	bl	21a08 <printf_parse@@Base+0x2528>
   28178:	ubfx	x1, x24, #8, #10
   2817c:	tbz	w24, #10, 281c4 <printf_parse@@Base+0x8ce4>
   28180:	tbz	w0, #0, 28198 <printf_parse@@Base+0x8cb8>
   28184:	tbnz	w1, #3, 28198 <printf_parse@@Base+0x8cb8>
   28188:	tbz	w1, #5, 28190 <printf_parse@@Base+0x8cb0>
   2818c:	tbz	w0, #1, 28198 <printf_parse@@Base+0x8cb8>
   28190:	tbz	w1, #7, 281d0 <printf_parse@@Base+0x8cf0>
   28194:	tbnz	w0, #3, 281d0 <printf_parse@@Base+0x8cf0>
   28198:	add	x22, x22, #0x1
   2819c:	cmp	x22, x26
   281a0:	b.lt	28138 <printf_parse@@Base+0x8c58>  // b.tstop
   281a4:	ldp	x21, x22, [sp, #32]
   281a8:	mov	w0, #0x0                   	// #0
   281ac:	ldp	x19, x20, [sp, #16]
   281b0:	ldp	x23, x24, [sp, #48]
   281b4:	ldp	x25, x26, [sp, #64]
   281b8:	ldp	x27, x28, [sp, #80]
   281bc:	ldp	x29, x30, [sp], #240
   281c0:	ret
   281c4:	tbz	w1, #3, 28188 <printf_parse@@Base+0x8ca8>
   281c8:	tbz	w0, #0, 28188 <printf_parse@@Base+0x8ca8>
   281cc:	b	28198 <printf_parse@@Base+0x8cb8>
   281d0:	ldr	x27, [x28, #200]
   281d4:	mov	x1, #0x0                   	// #0
   281d8:	mov	x3, x27
   281dc:	b	28200 <printf_parse@@Base+0x8d20>
   281e0:	asr	x0, x0, #1
   281e4:	ldr	x4, [x28, #216]
   281e8:	add	x2, x0, x0, lsl #2
   281ec:	add	x2, x4, x2, lsl #3
   281f0:	ldr	x2, [x2, #8]
   281f4:	cmp	x20, x2
   281f8:	b.gt	28378 <printf_parse@@Base+0x8e98>
   281fc:	mov	x3, x0
   28200:	add	x0, x3, x1
   28204:	cmp	x3, x1
   28208:	b.gt	281e0 <printf_parse@@Base+0x8d00>
   2820c:	cmp	x27, x1
   28210:	b.le	28380 <printf_parse@@Base+0x8ea0>
   28214:	ldr	x0, [x28, #216]
   28218:	add	x1, x1, x1, lsl #2
   2821c:	add	x1, x0, x1, lsl #3
   28220:	ldr	x0, [x1, #8]
   28224:	cmp	x20, x0
   28228:	b.eq	28238 <printf_parse@@Base+0x8d58>  // b.none
   2822c:	b	28380 <printf_parse@@Base+0x8ea0>
   28230:	ldurb	w0, [x1, #-8]
   28234:	cbz	w0, 28380 <printf_parse@@Base+0x8ea0>
   28238:	ldr	x0, [x1]
   2823c:	add	x1, x1, #0x28
   28240:	cmp	x19, x0
   28244:	b.ne	28230 <printf_parse@@Base+0x8d50>  // b.any
   28248:	mov	x3, x27
   2824c:	str	wzr, [sp, #212]
   28250:	cmp	x27, x3
   28254:	b.ge	2836c <printf_parse@@Base+0x8e8c>  // b.tcont
   28258:	add	x0, x19, x19, lsl #1
   2825c:	lsl	x1, x19, #3
   28260:	lsl	x0, x0, #3
   28264:	stp	x1, x0, [sp, #112]
   28268:	add	x0, x27, x27, lsl #2
   2826c:	ldr	x1, [x28, #216]
   28270:	ldr	x2, [x1, x0, lsl #3]
   28274:	add	x0, x1, x0, lsl #3
   28278:	cmp	x19, x2
   2827c:	b.ne	28360 <printf_parse@@Base+0x8e80>  // b.any
   28280:	ldr	x1, [x0, #8]
   28284:	cmp	x20, x1
   28288:	b.ne	28360 <printf_parse@@Base+0x8e80>  // b.any
   2828c:	ldp	x21, x0, [x0, #16]
   28290:	ldr	x24, [x23, #48]
   28294:	subs	x25, x0, x21
   28298:	b.ne	285a4 <printf_parse@@Base+0x90c4>  // b.any
   2829c:	ldr	x1, [x23, #40]
   282a0:	ldr	x2, [sp, #120]
   282a4:	add	x1, x1, x2
   282a8:	ldr	x1, [x1, #16]
   282ac:	ldr	x1, [x1]
   282b0:	add	x1, x1, x1, lsl #1
   282b4:	add	x24, x24, x1, lsl #3
   282b8:	ldr	w2, [x28, #160]
   282bc:	add	x0, x20, x0
   282c0:	sub	x21, x0, x21
   282c4:	mov	x0, x28
   282c8:	sub	x1, x21, #0x1
   282cc:	mov	x26, #0x0                   	// #0
   282d0:	bl	21a08 <printf_parse@@Base+0x2528>
   282d4:	mov	w3, w0
   282d8:	ldr	x0, [sp, #152]
   282dc:	ldr	x4, [x28, #184]
   282e0:	ldr	x1, [x4, x0]
   282e4:	ldr	x0, [x4, x21, lsl #3]
   282e8:	cbz	x1, 282f0 <printf_parse@@Base+0x8e10>
   282ec:	ldr	x26, [x1, #16]
   282f0:	cbz	x0, 2853c <printf_parse@@Base+0x905c>
   282f4:	ldr	x1, [x0, #80]
   282f8:	mov	x2, x24
   282fc:	ldr	x0, [sp, #168]
   28300:	str	w3, [sp, #104]
   28304:	bl	27f08 <printf_parse@@Base+0x8a28>
   28308:	str	w0, [sp, #212]
   2830c:	ldr	w3, [sp, #104]
   28310:	cbnz	w0, 285bc <printf_parse@@Base+0x90dc>
   28314:	ldp	x2, x0, [sp, #168]
   28318:	mov	x1, x23
   2831c:	ldr	x4, [x28, #184]
   28320:	str	x4, [sp, #104]
   28324:	bl	263d8 <printf_parse@@Base+0x6ef8>
   28328:	ldr	x4, [sp, #104]
   2832c:	str	x0, [x4, x21, lsl #3]
   28330:	ldr	x0, [sp, #232]
   28334:	bl	aa50 <free@plt>
   28338:	ldr	x1, [x28, #184]
   2833c:	ldr	x0, [x1, x21, lsl #3]
   28340:	cbz	x0, 28564 <printf_parse@@Base+0x9084>
   28344:	cbnz	x25, 2835c <printf_parse@@Base+0x8e7c>
   28348:	ldr	x0, [sp, #152]
   2834c:	ldr	x0, [x1, x0]
   28350:	ldr	x0, [x0, #16]
   28354:	cmp	x0, x26
   28358:	b.gt	284fc <printf_parse@@Base+0x901c>
   2835c:	ldr	x3, [x28, #200]
   28360:	add	x27, x27, #0x1
   28364:	cmp	x27, x3
   28368:	b.lt	28268 <printf_parse@@Base+0x8d88>  // b.tstop
   2836c:	ldr	x0, [sp, #192]
   28370:	ldr	x26, [x0]
   28374:	b	28198 <printf_parse@@Base+0x8cb8>
   28378:	add	x1, x0, #0x1
   2837c:	b	28200 <printf_parse@@Base+0x8d20>
   28380:	ldr	x0, [x28, #152]
   28384:	str	x0, [sp, #184]
   28388:	ldr	x2, [x28, #232]
   2838c:	ldr	x1, [x0]
   28390:	cmp	x2, #0x0
   28394:	ldr	x0, [x1, x21]
   28398:	str	x0, [sp, #160]
   2839c:	b.le	28248 <printf_parse@@Base+0x8d68>
   283a0:	ldr	x7, [x28, #8]
   283a4:	str	xzr, [sp, #136]
   283a8:	ldr	x3, [sp, #136]
   283ac:	ldr	x0, [x28, #248]
   283b0:	ldr	x25, [x0, x3, lsl #3]
   283b4:	ldr	x0, [x25, #8]
   283b8:	lsl	x0, x0, #4
   283bc:	ldr	x0, [x1, x0]
   283c0:	ldr	x1, [sp, #160]
   283c4:	cmp	x1, x0
   283c8:	b.eq	283ec <printf_parse@@Base+0x8f0c>  // b.none
   283cc:	ldr	x0, [sp, #136]
   283d0:	add	x0, x0, #0x1
   283d4:	str	x0, [sp, #136]
   283d8:	cmp	x0, x2
   283dc:	b.ge	287b8 <printf_parse@@Base+0x92d8>  // b.tcont
   283e0:	ldr	x0, [sp, #184]
   283e4:	ldr	x1, [x0]
   283e8:	b	283a8 <printf_parse@@Base+0x8ec8>
   283ec:	ldr	x0, [x25]
   283f0:	str	x0, [sp, #104]
   283f4:	ldr	x2, [x25, #32]
   283f8:	cmp	x2, #0x0
   283fc:	b.le	287ec <printf_parse@@Base+0x930c>
   28400:	mov	x26, x20
   28404:	mov	x21, #0x0                   	// #0
   28408:	b	28418 <printf_parse@@Base+0x8f38>
   2840c:	ldr	x2, [x25, #32]
   28410:	cmp	x21, x2
   28414:	b.ge	2877c <printf_parse@@Base+0x929c>  // b.tcont
   28418:	ldr	x0, [x25, #40]
   2841c:	mov	x10, x26
   28420:	ldr	x24, [sp, #104]
   28424:	ldr	x4, [x0, x21, lsl #3]
   28428:	ldr	x0, [x4, #8]
   2842c:	str	x0, [sp, #104]
   28430:	sub	x3, x0, x24
   28434:	cmp	x3, #0x0
   28438:	add	x26, x26, x3
   2843c:	b.le	28470 <printf_parse@@Base+0x8f90>
   28440:	ldr	x0, [x28, #48]
   28444:	cmp	x0, x26
   28448:	b.lt	284b4 <printf_parse@@Base+0x8fd4>  // b.tstop
   2844c:	add	x1, x7, x24
   28450:	add	x0, x7, x10
   28454:	mov	x2, x3
   28458:	stp	x7, x10, [sp, #112]
   2845c:	str	x4, [sp, #128]
   28460:	bl	a970 <memcmp@plt>
   28464:	ldp	x7, x10, [sp, #112]
   28468:	ldr	x4, [sp, #128]
   2846c:	cbnz	w0, 285e4 <printf_parse@@Base+0x9104>
   28470:	mov	x2, x4
   28474:	mov	x3, x19
   28478:	mov	x4, x20
   2847c:	mov	x1, x25
   28480:	mov	x0, x28
   28484:	bl	26eb8 <printf_parse@@Base+0x79d8>
   28488:	add	x21, x21, #0x1
   2848c:	cmp	w0, #0x1
   28490:	ldr	x7, [x28, #8]
   28494:	b.ls	2840c <printf_parse@@Base+0x8f2c>  // b.plast
   28498:	ldp	x21, x22, [sp, #32]
   2849c:	ldp	x19, x20, [sp, #16]
   284a0:	ldp	x23, x24, [sp, #48]
   284a4:	ldp	x25, x26, [sp, #64]
   284a8:	ldp	x27, x28, [sp, #80]
   284ac:	ldp	x29, x30, [sp], #240
   284b0:	ret
   284b4:	ldr	x13, [x28, #88]
   284b8:	stp	x4, x3, [sp, #112]
   284bc:	add	w1, w26, #0x1
   284c0:	mov	x0, x28
   284c4:	cmp	x13, x26
   284c8:	b.lt	285e8 <printf_parse@@Base+0x9108>  // b.tstop
   284cc:	ldr	x2, [x28, #192]
   284d0:	str	x2, [sp, #128]
   284d4:	str	x10, [sp, #200]
   284d8:	bl	24dc0 <printf_parse@@Base+0x58e0>
   284dc:	cbnz	w0, 28498 <printf_parse@@Base+0x8fb8>
   284e0:	ldr	x2, [sp, #128]
   284e4:	ldp	x4, x3, [sp, #112]
   284e8:	cmp	x2, x26
   284ec:	ldr	x10, [sp, #200]
   284f0:	b.lt	28570 <printf_parse@@Base+0x9090>  // b.tstop
   284f4:	ldr	x7, [x28, #8]
   284f8:	b	2844c <printf_parse@@Base+0x8f6c>
   284fc:	add	x21, x24, #0x8
   28500:	add	x24, x24, #0x10
   28504:	mov	x2, x24
   28508:	mov	x1, x21
   2850c:	mov	x3, x20
   28510:	mov	x0, x28
   28514:	bl	21590 <printf_parse@@Base+0x20b0>
   28518:	str	w0, [sp, #212]
   2851c:	cbnz	w0, 28498 <printf_parse@@Base+0x8fb8>
   28520:	mov	x2, x24
   28524:	mov	x1, x21
   28528:	mov	x0, x28
   2852c:	bl	280e0 <printf_parse@@Base+0x8c00>
   28530:	str	w0, [sp, #212]
   28534:	cbz	w0, 2835c <printf_parse@@Base+0x8e7c>
   28538:	b	28498 <printf_parse@@Base+0x8fb8>
   2853c:	ldr	x0, [sp, #176]
   28540:	mov	x1, x23
   28544:	mov	x2, x24
   28548:	str	x4, [sp, #104]
   2854c:	bl	263d8 <printf_parse@@Base+0x6ef8>
   28550:	ldr	x4, [sp, #104]
   28554:	ldr	x1, [x28, #184]
   28558:	str	x0, [x4, x21, lsl #3]
   2855c:	ldr	x0, [x1, x21, lsl #3]
   28560:	cbnz	x0, 28344 <printf_parse@@Base+0x8e64>
   28564:	ldr	w0, [sp, #212]
   28568:	cbz	w0, 28344 <printf_parse@@Base+0x8e64>
   2856c:	b	28498 <printf_parse@@Base+0x8fb8>
   28570:	ldr	x0, [x28, #184]
   28574:	add	x11, x2, #0x1
   28578:	sub	x2, x26, x2
   2857c:	mov	w1, #0x0                   	// #0
   28580:	str	x10, [sp, #128]
   28584:	lsl	x2, x2, #3
   28588:	add	x0, x0, x11, lsl #3
   2858c:	bl	a6f0 <memset@plt>
   28590:	str	x26, [x28, #192]
   28594:	ldr	x7, [x28, #8]
   28598:	ldp	x4, x3, [sp, #112]
   2859c:	ldr	x10, [sp, #128]
   285a0:	b	2844c <printf_parse@@Base+0x8f6c>
   285a4:	ldr	x1, [x23, #24]
   285a8:	ldr	x2, [sp, #112]
   285ac:	ldr	x1, [x1, x2]
   285b0:	add	x1, x1, x1, lsl #1
   285b4:	add	x24, x24, x1, lsl #3
   285b8:	b	282b8 <printf_parse@@Base+0x8dd8>
   285bc:	ldr	x0, [sp, #232]
   285c0:	bl	aa50 <free@plt>
   285c4:	ldr	w0, [sp, #212]
   285c8:	ldp	x19, x20, [sp, #16]
   285cc:	ldp	x21, x22, [sp, #32]
   285d0:	ldp	x23, x24, [sp, #48]
   285d4:	ldp	x25, x26, [sp, #64]
   285d8:	ldp	x27, x28, [sp, #80]
   285dc:	ldp	x29, x30, [sp], #240
   285e0:	ret
   285e4:	ldr	x2, [x25, #32]
   285e8:	cmp	x21, x2
   285ec:	b.ge	285f8 <printf_parse@@Base+0x9118>  // b.tcont
   285f0:	ldr	x2, [x28, #232]
   285f4:	b	283cc <printf_parse@@Base+0x8eec>
   285f8:	cbnz	x21, 28774 <printf_parse@@Base+0x9294>
   285fc:	nop
   28600:	cmp	x20, x24
   28604:	b.lt	285f0 <printf_parse@@Base+0x9110>  // b.tstop
   28608:	ldr	x0, [x25]
   2860c:	sub	x0, x24, x0
   28610:	cmp	x0, #0x0
   28614:	b.le	2863c <printf_parse@@Base+0x915c>
   28618:	ldr	x0, [x28, #48]
   2861c:	cmp	x0, x10
   28620:	b.le	2878c <printf_parse@@Base+0x92ac>
   28624:	add	x0, x7, x24
   28628:	ldrb	w1, [x7, x10]
   2862c:	add	x10, x10, #0x1
   28630:	ldurb	w0, [x0, #-1]
   28634:	cmp	w1, w0
   28638:	b.ne	285f0 <printf_parse@@Base+0x9110>  // b.any
   2863c:	ldr	x0, [x28, #184]
   28640:	ldr	x1, [x0, x24, lsl #3]
   28644:	cbz	x1, 2873c <printf_parse@@Base+0x925c>
   28648:	ldr	x4, [x1, #16]
   2864c:	cmp	x4, #0x0
   28650:	b.le	2873c <printf_parse@@Base+0x925c>
   28654:	ldr	x0, [sp, #184]
   28658:	ldr	x6, [x1, #24]
   2865c:	ldr	x3, [x0]
   28660:	mov	x0, #0x0                   	// #0
   28664:	b	28670 <printf_parse@@Base+0x9190>
   28668:	cmp	x4, x0
   2866c:	b.eq	2873c <printf_parse@@Base+0x925c>  // b.none
   28670:	ldr	x21, [x6, x0, lsl #3]
   28674:	add	x0, x0, #0x1
   28678:	lsl	x1, x21, #4
   2867c:	add	x2, x3, x1
   28680:	ldrb	w2, [x2, #8]
   28684:	cmp	w2, #0x9
   28688:	b.ne	28668 <printf_parse@@Base+0x9188>  // b.any
   2868c:	ldr	x1, [x3, x1]
   28690:	ldr	x2, [sp, #160]
   28694:	cmp	x2, x1
   28698:	b.ne	28668 <printf_parse@@Base+0x9188>  // b.any
   2869c:	cmn	x21, #0x1
   286a0:	b.eq	2873c <printf_parse@@Base+0x925c>  // b.none
   286a4:	ldr	x1, [x25, #16]
   286a8:	ldr	x26, [x25]
   286ac:	cbz	x1, 28744 <printf_parse@@Base+0x9264>
   286b0:	ldr	x2, [x25, #8]
   286b4:	mov	x3, x26
   286b8:	mov	x5, x24
   286bc:	mov	x4, x21
   286c0:	mov	x0, x28
   286c4:	mov	w6, #0x9                   	// #9
   286c8:	stp	x7, x10, [sp, #104]
   286cc:	bl	26858 <printf_parse@@Base+0x7378>
   286d0:	cmp	w0, #0x1
   286d4:	ldp	x7, x10, [sp, #104]
   286d8:	b.eq	2873c <printf_parse@@Base+0x925c>  // b.none
   286dc:	cbnz	w0, 28498 <printf_parse@@Base+0x8fb8>
   286e0:	ldp	x0, x1, [x25, #24]
   286e4:	cmp	x1, x0
   286e8:	b.eq	287c0 <printf_parse@@Base+0x92e0>  // b.none
   286ec:	mov	x1, #0x28                  	// #40
   286f0:	mov	x0, #0x1                   	// #1
   286f4:	str	x10, [sp, #104]
   286f8:	bl	a770 <calloc@plt>
   286fc:	mov	x2, x0
   28700:	cbz	x0, 28768 <printf_parse@@Base+0x9288>
   28704:	ldp	x0, x1, [x25, #32]
   28708:	mov	x4, x20
   2870c:	mov	x3, x19
   28710:	str	x2, [x1, x0, lsl #3]
   28714:	add	x6, x0, #0x1
   28718:	stp	x21, x24, [x2]
   2871c:	mov	x1, x25
   28720:	mov	x0, x28
   28724:	str	x6, [x25, #32]
   28728:	bl	26eb8 <printf_parse@@Base+0x79d8>
   2872c:	cmp	w0, #0x1
   28730:	ldr	x7, [x28, #8]
   28734:	ldr	x10, [sp, #104]
   28738:	b.hi	28498 <printf_parse@@Base+0x8fb8>  // b.pmore
   2873c:	add	x24, x24, #0x1
   28740:	b	28600 <printf_parse@@Base+0x9120>
   28744:	sub	x1, x24, x26
   28748:	mov	x0, #0x18                  	// #24
   2874c:	add	x1, x1, #0x1
   28750:	stp	x7, x10, [sp, #104]
   28754:	bl	a770 <calloc@plt>
   28758:	str	x0, [x25, #16]
   2875c:	mov	x1, x0
   28760:	ldp	x7, x10, [sp, #104]
   28764:	cbnz	x0, 286b0 <printf_parse@@Base+0x91d0>
   28768:	mov	w0, #0xc                   	// #12
   2876c:	ldp	x21, x22, [sp, #32]
   28770:	b	2849c <printf_parse@@Base+0x8fbc>
   28774:	mov	x26, x10
   28778:	str	x24, [sp, #104]
   2877c:	ldr	x0, [sp, #104]
   28780:	mov	x10, x26
   28784:	add	x24, x0, #0x1
   28788:	b	28600 <printf_parse@@Base+0x9120>
   2878c:	ldr	x0, [x28, #88]
   28790:	cmp	x0, x10
   28794:	b.le	285f0 <printf_parse@@Base+0x9110>
   28798:	add	w1, w10, #0x1
   2879c:	mov	x0, x28
   287a0:	str	x10, [sp, #104]
   287a4:	bl	24dc0 <printf_parse@@Base+0x58e0>
   287a8:	cbnz	w0, 28498 <printf_parse@@Base+0x8fb8>
   287ac:	ldr	x7, [x28, #8]
   287b0:	ldr	x10, [sp, #104]
   287b4:	b	28624 <printf_parse@@Base+0x9144>
   287b8:	ldr	x3, [x28, #200]
   287bc:	b	2824c <printf_parse@@Base+0x8d6c>
   287c0:	ldr	x0, [x25, #40]
   287c4:	lsl	x1, x1, #1
   287c8:	add	x26, x1, #0x1
   287cc:	str	x10, [sp, #104]
   287d0:	lsl	x1, x26, #3
   287d4:	bl	a7e0 <realloc@plt>
   287d8:	cbz	x0, 28768 <printf_parse@@Base+0x9288>
   287dc:	str	x26, [x25, #24]
   287e0:	str	x0, [x25, #40]
   287e4:	ldr	x10, [sp, #104]
   287e8:	b	286ec <printf_parse@@Base+0x920c>
   287ec:	mov	x24, x0
   287f0:	mov	x10, x20
   287f4:	b	28600 <printf_parse@@Base+0x9120>
   287f8:	stp	x29, x30, [sp, #-112]!
   287fc:	mov	x29, sp
   28800:	stp	x21, x22, [sp, #32]
   28804:	mov	x21, x0
   28808:	stp	x23, x24, [sp, #48]
   2880c:	ldp	x24, x0, [x1, #184]
   28810:	stp	x19, x20, [sp, #16]
   28814:	mov	x19, x1
   28818:	ldr	x20, [x1, #72]
   2881c:	ldr	x23, [x1, #152]
   28820:	cmp	x0, x20
   28824:	b.ge	28854 <printf_parse@@Base+0x9374>  // b.tcont
   28828:	mov	x22, x2
   2882c:	str	x2, [x24, x20, lsl #3]
   28830:	str	x20, [x1, #192]
   28834:	ldr	x0, [x23, #152]
   28838:	cbnz	x0, 28920 <printf_parse@@Base+0x9440>
   2883c:	mov	x0, x22
   28840:	ldp	x19, x20, [sp, #16]
   28844:	ldp	x21, x22, [sp, #32]
   28848:	ldp	x23, x24, [sp, #48]
   2884c:	ldp	x29, x30, [sp], #112
   28850:	ret
   28854:	ldr	x0, [x24, x20, lsl #3]
   28858:	cbz	x0, 28914 <printf_parse@@Base+0x9434>
   2885c:	ldr	x0, [x0, #80]
   28860:	cbz	x2, 288d0 <printf_parse@@Base+0x93f0>
   28864:	ldr	x24, [x2, #80]
   28868:	add	x22, sp, #0x58
   2886c:	mov	x2, x0
   28870:	mov	x0, x22
   28874:	mov	x1, x24
   28878:	bl	27f08 <printf_parse@@Base+0x8a28>
   2887c:	str	w0, [x21]
   28880:	cbnz	w0, 28974 <printf_parse@@Base+0x9494>
   28884:	ldr	w2, [x19, #160]
   28888:	mov	x0, x19
   2888c:	ldr	x1, [x19, #72]
   28890:	str	x25, [sp, #64]
   28894:	sub	x1, x1, #0x1
   28898:	bl	21a08 <printf_parse@@Base+0x2528>
   2889c:	ldr	x25, [x19, #184]
   288a0:	mov	x2, x22
   288a4:	mov	w3, w0
   288a8:	mov	x1, x23
   288ac:	mov	x0, x21
   288b0:	bl	263d8 <printf_parse@@Base+0x6ef8>
   288b4:	str	x0, [x25, x20, lsl #3]
   288b8:	mov	x22, x0
   288bc:	cbz	x24, 2897c <printf_parse@@Base+0x949c>
   288c0:	ldr	x0, [sp, #104]
   288c4:	bl	aa50 <free@plt>
   288c8:	ldr	x25, [sp, #64]
   288cc:	b	28834 <printf_parse@@Base+0x9354>
   288d0:	ldp	x2, x3, [x0]
   288d4:	stp	x2, x3, [sp, #88]
   288d8:	ldr	w2, [x19, #160]
   288dc:	ldr	x3, [x0, #16]
   288e0:	add	x22, sp, #0x58
   288e4:	sub	x1, x20, #0x1
   288e8:	mov	x0, x19
   288ec:	str	x3, [sp, #104]
   288f0:	bl	21a08 <printf_parse@@Base+0x2528>
   288f4:	mov	w3, w0
   288f8:	mov	x2, x22
   288fc:	mov	x1, x23
   28900:	mov	x0, x21
   28904:	bl	263d8 <printf_parse@@Base+0x6ef8>
   28908:	mov	x22, x0
   2890c:	str	x0, [x24, x20, lsl #3]
   28910:	b	28834 <printf_parse@@Base+0x9354>
   28914:	mov	x22, x2
   28918:	str	x2, [x24, x20, lsl #3]
   2891c:	b	28834 <printf_parse@@Base+0x9354>
   28920:	cbz	x22, 28974 <printf_parse@@Base+0x9494>
   28924:	add	x23, x22, #0x10
   28928:	add	x24, x22, #0x18
   2892c:	mov	x1, x23
   28930:	mov	x2, x24
   28934:	mov	x3, x20
   28938:	mov	x0, x19
   2893c:	bl	21590 <printf_parse@@Base+0x20b0>
   28940:	str	w0, [x21]
   28944:	cbnz	w0, 28974 <printf_parse@@Base+0x9494>
   28948:	ldrb	w0, [x22, #104]
   2894c:	tbz	w0, #6, 2883c <printf_parse@@Base+0x935c>
   28950:	mov	x2, x24
   28954:	mov	x1, x23
   28958:	mov	x0, x19
   2895c:	bl	280e0 <printf_parse@@Base+0x8c00>
   28960:	str	w0, [x21]
   28964:	cbnz	w0, 28974 <printf_parse@@Base+0x9494>
   28968:	ldr	x0, [x19, #184]
   2896c:	ldr	x22, [x0, x20, lsl #3]
   28970:	b	2883c <printf_parse@@Base+0x935c>
   28974:	mov	x22, #0x0                   	// #0
   28978:	b	2883c <printf_parse@@Base+0x935c>
   2897c:	ldr	x25, [sp, #64]
   28980:	b	28834 <printf_parse@@Base+0x9354>
   28984:	nop
   28988:	stp	x29, x30, [sp, #-272]!
   2898c:	mov	x29, sp
   28990:	stp	x19, x20, [sp, #16]
   28994:	mov	x20, x0
   28998:	mov	x19, x2
   2899c:	ldr	x0, [x0, #184]
   289a0:	stp	x21, x22, [sp, #32]
   289a4:	lsl	x2, x2, #3
   289a8:	stp	x23, x24, [sp, #48]
   289ac:	mov	x21, x3
   289b0:	ldr	x22, [x0, x19, lsl #3]
   289b4:	stp	x25, x26, [sp, #64]
   289b8:	mov	x26, x1
   289bc:	str	x2, [sp, #104]
   289c0:	add	x1, x0, x2
   289c4:	str	wzr, [sp, #184]
   289c8:	ldr	x0, [x3, #8]
   289cc:	ldr	x23, [x20, #152]
   289d0:	cbz	x22, 28cdc <printf_parse@@Base+0x97fc>
   289d4:	cbnz	x0, 28a0c <printf_parse@@Base+0x952c>
   289d8:	ldr	x0, [x26]
   289dc:	mov	w4, #0x0                   	// #0
   289e0:	str	xzr, [x0, x19, lsl #3]
   289e4:	ldr	x0, [x1]
   289e8:	ldrb	w0, [x0, #104]
   289ec:	tbnz	w0, #6, 28b2c <printf_parse@@Base+0x964c>
   289f0:	mov	w0, w4
   289f4:	ldp	x19, x20, [sp, #16]
   289f8:	ldp	x21, x22, [sp, #32]
   289fc:	ldp	x23, x24, [sp, #48]
   28a00:	ldp	x25, x26, [sp, #64]
   28a04:	ldp	x29, x30, [sp], #272
   28a08:	ret
   28a0c:	mov	x2, x3
   28a10:	mov	x1, x23
   28a14:	add	x0, sp, #0xd8
   28a18:	str	wzr, [sp, #216]
   28a1c:	bl	25cc8 <printf_parse@@Base+0x67e8>
   28a20:	ldr	w4, [sp, #216]
   28a24:	cbnz	w4, 289f0 <printf_parse@@Base+0x9510>
   28a28:	mov	x25, x0
   28a2c:	stp	x27, x28, [sp, #80]
   28a30:	ldr	x24, [x25, #56]!
   28a34:	cbnz	x24, 28ac0 <printf_parse@@Base+0x95e0>
   28a38:	ldr	x1, [x21, #8]
   28a3c:	str	x1, [x0, #56]
   28a40:	str	xzr, [x25, #8]
   28a44:	lsl	x0, x1, #3
   28a48:	bl	a5f0 <malloc@plt>
   28a4c:	str	x0, [x25, #16]
   28a50:	cbz	x0, 28a9c <printf_parse@@Base+0x95bc>
   28a54:	ldr	x0, [x21, #8]
   28a58:	str	wzr, [sp, #216]
   28a5c:	cmp	x0, #0x0
   28a60:	b.gt	28a74 <printf_parse@@Base+0x9594>
   28a64:	b	28ac0 <printf_parse@@Base+0x95e0>
   28a68:	ldr	x0, [x21, #8]
   28a6c:	cmp	x24, x0
   28a70:	b.ge	28ac0 <printf_parse@@Base+0x95e0>  // b.tcont
   28a74:	ldr	x2, [x21, #16]
   28a78:	mov	x0, x25
   28a7c:	ldr	x1, [x23, #56]
   28a80:	ldr	x3, [x2, x24, lsl #3]
   28a84:	add	x24, x24, #0x1
   28a88:	add	x3, x3, x3, lsl #1
   28a8c:	add	x1, x1, x3, lsl #3
   28a90:	bl	216b0 <printf_parse@@Base+0x21d0>
   28a94:	str	w0, [sp, #216]
   28a98:	cbz	w0, 28a68 <printf_parse@@Base+0x9588>
   28a9c:	mov	w4, #0xc                   	// #12
   28aa0:	mov	w0, w4
   28aa4:	ldp	x19, x20, [sp, #16]
   28aa8:	ldp	x21, x22, [sp, #32]
   28aac:	ldp	x23, x24, [sp, #48]
   28ab0:	ldp	x25, x26, [sp, #64]
   28ab4:	ldp	x27, x28, [sp, #80]
   28ab8:	ldp	x29, x30, [sp], #272
   28abc:	ret
   28ac0:	add	x28, x22, #0x8
   28ac4:	mov	x2, x25
   28ac8:	mov	x1, x28
   28acc:	mov	x0, x21
   28ad0:	bl	21858 <printf_parse@@Base+0x2378>
   28ad4:	str	w0, [sp, #184]
   28ad8:	mov	w4, w0
   28adc:	cbnz	w0, 28fc0 <printf_parse@@Base+0x9ae0>
   28ae0:	ldr	x10, [x26, #40]
   28ae4:	cmp	x10, #0x0
   28ae8:	cbnz	x10, 28fe0 <printf_parse@@Base+0x9b00>
   28aec:	ldr	x24, [x26]
   28af0:	mov	x2, x21
   28af4:	mov	x1, x23
   28af8:	add	x0, sp, #0xb8
   28afc:	bl	25cc8 <printf_parse@@Base+0x67e8>
   28b00:	ldr	w4, [sp, #184]
   28b04:	str	x0, [x24, x19, lsl #3]
   28b08:	cbnz	w4, 28fc0 <printf_parse@@Base+0x9ae0>
   28b0c:	ldr	x0, [sp, #104]
   28b10:	mov	w4, #0x0                   	// #0
   28b14:	ldr	x1, [x20, #184]
   28b18:	ldp	x27, x28, [sp, #80]
   28b1c:	add	x1, x1, x0
   28b20:	ldr	x0, [x1]
   28b24:	ldrb	w0, [x0, #104]
   28b28:	tbz	w0, #6, 289f0 <printf_parse@@Base+0x9510>
   28b2c:	ldr	x4, [x20, #200]
   28b30:	mov	x24, #0x0                   	// #0
   28b34:	stp	x27, x28, [sp, #80]
   28b38:	mov	x2, x4
   28b3c:	b	28b60 <printf_parse@@Base+0x9680>
   28b40:	asr	x0, x0, #1
   28b44:	ldr	x3, [x20, #216]
   28b48:	add	x1, x0, x0, lsl #2
   28b4c:	add	x1, x3, x1, lsl #3
   28b50:	ldr	x1, [x1, #8]
   28b54:	cmp	x19, x1
   28b58:	b.gt	28f24 <printf_parse@@Base+0x9a44>
   28b5c:	mov	x2, x0
   28b60:	add	x0, x2, x24
   28b64:	cmp	x2, x24
   28b68:	b.gt	28b40 <printf_parse@@Base+0x9660>
   28b6c:	cmp	x4, x24
   28b70:	b.le	28d44 <printf_parse@@Base+0x9864>
   28b74:	add	x1, x24, x24, lsl #2
   28b78:	ldr	x0, [x20, #216]
   28b7c:	lsl	x1, x1, #3
   28b80:	str	x1, [sp, #168]
   28b84:	add	x0, x0, x1
   28b88:	ldr	x0, [x0, #8]
   28b8c:	cmp	x19, x0
   28b90:	b.ne	28d44 <printf_parse@@Base+0x9864>  // b.any
   28b94:	ldr	x2, [x22, #16]
   28b98:	add	x0, x22, #0x8
   28b9c:	str	x0, [sp, #120]
   28ba0:	str	xzr, [sp, #216]
   28ba4:	cmp	x2, #0x0
   28ba8:	ldr	x27, [x20, #152]
   28bac:	b.le	28d44 <printf_parse@@Base+0x9864>
   28bb0:	add	x0, sp, #0xbc
   28bb4:	add	x28, sp, #0xc0
   28bb8:	mov	x23, #0x0                   	// #0
   28bbc:	str	x0, [sp, #152]
   28bc0:	b	28bd8 <printf_parse@@Base+0x96f8>
   28bc4:	cmp	w0, #0x4
   28bc8:	b.eq	28c10 <printf_parse@@Base+0x9730>  // b.none
   28bcc:	add	x23, x23, #0x1
   28bd0:	cmp	x23, x2
   28bd4:	b.ge	28d3c <printf_parse@@Base+0x985c>  // b.tcont
   28bd8:	ldr	x0, [sp, #120]
   28bdc:	ldr	x1, [x0, #16]
   28be0:	ldr	x0, [x27]
   28be4:	ldr	x22, [x1, x23, lsl #3]
   28be8:	ldr	x1, [x26, #16]
   28bec:	add	x0, x0, x22, lsl #4
   28bf0:	cmp	x22, x1
   28bf4:	ldrb	w0, [x0, #8]
   28bf8:	b.ne	28bc4 <printf_parse@@Base+0x96e4>  // b.any
   28bfc:	ldr	x1, [x26, #24]
   28c00:	cmp	x19, x1
   28c04:	b.eq	28bcc <printf_parse@@Base+0x96ec>  // b.none
   28c08:	cmp	w0, #0x4
   28c0c:	b.ne	28bcc <printf_parse@@Base+0x96ec>  // b.any
   28c10:	add	x0, x22, x22, lsl #1
   28c14:	lsl	x1, x22, #3
   28c18:	ldr	x25, [x20, #216]
   28c1c:	lsl	x0, x0, #3
   28c20:	stp	x1, x0, [sp, #128]
   28c24:	mov	x21, x24
   28c28:	add	x0, sp, #0xd8
   28c2c:	ldr	x1, [sp, #168]
   28c30:	str	x0, [sp, #144]
   28c34:	add	x25, x25, x1
   28c38:	ldr	x0, [x25]
   28c3c:	cmp	x22, x0
   28c40:	b.ne	28cc0 <printf_parse@@Base+0x97e0>  // b.any
   28c44:	ldp	x1, x0, [x25, #16]
   28c48:	sub	x0, x0, x1
   28c4c:	add	x6, x19, x0
   28c50:	cbz	x0, 28d50 <printf_parse@@Base+0x9870>
   28c54:	ldr	x0, [x27, #24]
   28c58:	ldr	x1, [sp, #128]
   28c5c:	ldr	x5, [x0, x1]
   28c60:	ldr	x0, [x26, #24]
   28c64:	cmp	x6, x0
   28c68:	b.gt	28cc0 <printf_parse@@Base+0x97e0>
   28c6c:	ldr	x0, [x26]
   28c70:	ldr	x1, [x0, x6, lsl #3]
   28c74:	cbz	x1, 28cc0 <printf_parse@@Base+0x97e0>
   28c78:	ldr	x0, [x1, #16]
   28c7c:	cmp	x0, #0x0
   28c80:	b.le	28cc0 <printf_parse@@Base+0x97e0>
   28c84:	sub	x0, x0, #0x1
   28c88:	mov	x2, #0x0                   	// #0
   28c8c:	ldr	x4, [x1, #24]
   28c90:	b	28ca8 <printf_parse@@Base+0x97c8>
   28c94:	lsr	x1, x1, #1
   28c98:	ldr	x9, [x4, x1, lsl #3]
   28c9c:	cmp	x5, x9
   28ca0:	b.gt	28d68 <printf_parse@@Base+0x9888>
   28ca4:	mov	x0, x1
   28ca8:	add	x1, x0, x2
   28cac:	cmp	x0, x2
   28cb0:	b.hi	28c94 <printf_parse@@Base+0x97b4>  // b.pmore
   28cb4:	ldr	x0, [x4, x2, lsl #3]
   28cb8:	cmp	x5, x0
   28cbc:	b.eq	28d70 <printf_parse@@Base+0x9890>  // b.none
   28cc0:	ldrb	w0, [x25, #32]
   28cc4:	add	x21, x21, #0x1
   28cc8:	add	x25, x25, #0x28
   28ccc:	cbnz	w0, 28c38 <printf_parse@@Base+0x9758>
   28cd0:	ldr	x0, [sp, #120]
   28cd4:	ldr	x2, [x0, #8]
   28cd8:	b	28bcc <printf_parse@@Base+0x96ec>
   28cdc:	ldr	x20, [x26]
   28ce0:	cbnz	x0, 28d08 <printf_parse@@Base+0x9828>
   28ce4:	str	xzr, [x20, x19, lsl #3]
   28ce8:	mov	w4, #0x0                   	// #0
   28cec:	mov	w0, w4
   28cf0:	ldp	x19, x20, [sp, #16]
   28cf4:	ldp	x21, x22, [sp, #32]
   28cf8:	ldp	x23, x24, [sp, #48]
   28cfc:	ldp	x25, x26, [sp, #64]
   28d00:	ldp	x29, x30, [sp], #272
   28d04:	ret
   28d08:	mov	x1, x23
   28d0c:	mov	x2, x3
   28d10:	add	x0, sp, #0xb8
   28d14:	bl	25cc8 <printf_parse@@Base+0x67e8>
   28d18:	ldr	w4, [sp, #184]
   28d1c:	str	x0, [x20, x19, lsl #3]
   28d20:	mov	w0, w4
   28d24:	ldp	x19, x20, [sp, #16]
   28d28:	ldp	x21, x22, [sp, #32]
   28d2c:	ldp	x23, x24, [sp, #48]
   28d30:	ldp	x25, x26, [sp, #64]
   28d34:	ldp	x29, x30, [sp], #272
   28d38:	ret
   28d3c:	ldr	x0, [sp, #216]
   28d40:	cbnz	x0, 29284 <printf_parse@@Base+0x9da4>
   28d44:	mov	w4, #0x0                   	// #0
   28d48:	ldp	x27, x28, [sp, #80]
   28d4c:	b	289f0 <printf_parse@@Base+0x9510>
   28d50:	ldr	x0, [x27, #40]
   28d54:	ldr	x1, [sp, #136]
   28d58:	add	x0, x0, x1
   28d5c:	ldr	x0, [x0, #16]
   28d60:	ldr	x5, [x0]
   28d64:	b	28c60 <printf_parse@@Base+0x9780>
   28d68:	add	x2, x1, #0x1
   28d6c:	b	28ca8 <printf_parse@@Base+0x97c8>
   28d70:	mov	x4, x19
   28d74:	mov	x3, x22
   28d78:	add	x2, x26, #0x30
   28d7c:	add	x1, x26, #0x28
   28d80:	mov	x0, x20
   28d84:	bl	23b38 <printf_parse@@Base+0x4658>
   28d88:	tst	w0, #0xff
   28d8c:	b.ne	28cc0 <printf_parse@@Base+0x97e0>  // b.any
   28d90:	ldr	x0, [sp, #216]
   28d94:	cbz	x0, 28f2c <printf_parse@@Base+0x9a4c>
   28d98:	ldr	x25, [sp, #144]
   28d9c:	mov	x1, x21
   28da0:	stp	x22, x19, [sp, #232]
   28da4:	add	x0, x25, #0x20
   28da8:	bl	20538 <printf_parse@@Base+0x1058>
   28dac:	tst	w0, #0xff
   28db0:	b.eq	28f84 <printf_parse@@Base+0x9aa4>  // b.none
   28db4:	ldr	x3, [sp, #104]
   28db8:	mov	x1, x25
   28dbc:	ldr	x2, [sp, #216]
   28dc0:	mov	x0, x20
   28dc4:	ldr	x2, [x2, x3]
   28dc8:	str	x2, [sp, #160]
   28dcc:	bl	29290 <printf_parse@@Base+0x9db0>
   28dd0:	mov	w4, w0
   28dd4:	cbnz	w0, 28f88 <printf_parse@@Base+0x9aa8>
   28dd8:	ldr	x0, [x26, #8]
   28ddc:	str	x0, [sp, #96]
   28de0:	ldr	x1, [sp, #216]
   28de4:	str	x1, [sp, #112]
   28de8:	cbz	x0, 28e78 <printf_parse@@Base+0x9998>
   28dec:	tbnz	x19, #63, 28e78 <printf_parse@@Base+0x9998>
   28df0:	mov	x25, #0x0                   	// #0
   28df4:	b	28e50 <printf_parse@@Base+0x9970>
   28df8:	add	x2, x4, #0x8
   28dfc:	add	x1, x1, #0x8
   28e00:	mov	x0, x28
   28e04:	cbz	x4, 28e44 <printf_parse@@Base+0x9964>
   28e08:	bl	27f08 <printf_parse@@Base+0x8a28>
   28e0c:	mov	w4, w0
   28e10:	str	w4, [sp, #188]
   28e14:	mov	x2, x28
   28e18:	mov	x1, x27
   28e1c:	ldr	x0, [sp, #152]
   28e20:	cbnz	w4, 28f88 <printf_parse@@Base+0x9aa8>
   28e24:	bl	25cc8 <printf_parse@@Base+0x67e8>
   28e28:	mov	x1, x0
   28e2c:	ldr	x2, [sp, #96]
   28e30:	ldr	x0, [sp, #208]
   28e34:	str	x1, [x2, x25, lsl #3]
   28e38:	bl	aa50 <free@plt>
   28e3c:	ldr	w4, [sp, #188]
   28e40:	cbnz	w4, 28f88 <printf_parse@@Base+0x9aa8>
   28e44:	add	x25, x25, #0x1
   28e48:	cmp	x19, x25
   28e4c:	b.lt	28e70 <printf_parse@@Base+0x9990>  // b.tstop
   28e50:	ldr	x0, [sp, #96]
   28e54:	ldr	x1, [x0, x25, lsl #3]
   28e58:	ldr	x0, [sp, #112]
   28e5c:	ldr	x4, [x0, x25, lsl #3]
   28e60:	cbnz	x1, 28df8 <printf_parse@@Base+0x9918>
   28e64:	ldr	x0, [sp, #96]
   28e68:	str	x4, [x0, x25, lsl #3]
   28e6c:	b	28e44 <printf_parse@@Base+0x9964>
   28e70:	ldr	x0, [sp, #216]
   28e74:	str	x0, [sp, #112]
   28e78:	ldp	x1, x0, [sp, #104]
   28e7c:	ldr	x2, [sp, #160]
   28e80:	ldr	x6, [sp, #256]
   28e84:	str	x2, [x0, x1]
   28e88:	cmp	x6, #0x0
   28e8c:	b.le	28ed0 <printf_parse@@Base+0x99f0>
   28e90:	sub	x9, x6, #0x1
   28e94:	mov	x0, #0x0                   	// #0
   28e98:	mov	x2, x9
   28e9c:	ldr	x4, [sp, #264]
   28ea0:	b	28eb8 <printf_parse@@Base+0x99d8>
   28ea4:	lsr	x1, x1, #1
   28ea8:	ldr	x5, [x4, x1, lsl #3]
   28eac:	cmp	x21, x5
   28eb0:	b.gt	28f1c <printf_parse@@Base+0x9a3c>
   28eb4:	mov	x2, x1
   28eb8:	add	x1, x2, x0
   28ebc:	cmp	x2, x0
   28ec0:	b.hi	28ea4 <printf_parse@@Base+0x99c4>  // b.pmore
   28ec4:	ldr	x1, [x4, x0, lsl #3]
   28ec8:	cmp	x21, x1
   28ecc:	b.eq	28ee0 <printf_parse@@Base+0x9a00>  // b.none
   28ed0:	ldr	x0, [x20, #216]
   28ed4:	add	x25, x21, x21, lsl #2
   28ed8:	add	x25, x0, x25, lsl #3
   28edc:	b	28cc0 <printf_parse@@Base+0x97e0>
   28ee0:	cmp	x0, #0x0
   28ee4:	ccmp	x6, x0, #0x4, ge  // ge = tcont
   28ee8:	b.le	28ed0 <printf_parse@@Base+0x99f0>
   28eec:	str	x9, [sp, #256]
   28ef0:	cmp	x0, x9
   28ef4:	b.ge	28ed0 <printf_parse@@Base+0x99f0>  // b.tcont
   28ef8:	add	x2, x4, #0x8
   28efc:	nop
   28f00:	ldr	x1, [x2, x0, lsl #3]
   28f04:	str	x1, [x4, x0, lsl #3]
   28f08:	add	x0, x0, #0x1
   28f0c:	ldr	x1, [sp, #256]
   28f10:	cmp	x0, x1
   28f14:	b.lt	28f00 <printf_parse@@Base+0x9a20>  // b.tstop
   28f18:	b	28ed0 <printf_parse@@Base+0x99f0>
   28f1c:	add	x0, x1, #0x1
   28f20:	b	28eb8 <printf_parse@@Base+0x99d8>
   28f24:	add	x24, x0, #0x1
   28f28:	b	28b60 <printf_parse@@Base+0x9680>
   28f2c:	ldr	x2, [sp, #144]
   28f30:	ldp	x0, x1, [x26]
   28f34:	stp	x0, x1, [x2]
   28f38:	ldp	x0, x1, [x26, #40]
   28f3c:	str	x1, [x2, #48]
   28f40:	ldp	x4, x5, [x26, #16]
   28f44:	stp	x4, x5, [x2, #16]
   28f48:	ldp	x4, x5, [x26, #32]
   28f4c:	stp	x4, x5, [x2, #32]
   28f50:	cmp	x0, #0x0
   28f54:	b.le	29230 <printf_parse@@Base+0x9d50>
   28f58:	lsl	x2, x0, #3
   28f5c:	str	x2, [sp, #96]
   28f60:	str	x0, [sp, #248]
   28f64:	mov	x0, x2
   28f68:	bl	a5f0 <malloc@plt>
   28f6c:	str	x0, [sp, #264]
   28f70:	cbz	x0, 28f84 <printf_parse@@Base+0x9aa4>
   28f74:	ldr	x1, [x26, #48]
   28f78:	ldr	x2, [sp, #96]
   28f7c:	bl	a2c0 <memcpy@plt>
   28f80:	b	28d98 <printf_parse@@Base+0x98b8>
   28f84:	mov	w4, #0xc                   	// #12
   28f88:	ldr	x0, [sp, #216]
   28f8c:	cbz	x0, 28fc0 <printf_parse@@Base+0x9ae0>
   28f90:	ldr	x0, [sp, #264]
   28f94:	str	w4, [sp, #96]
   28f98:	bl	aa50 <free@plt>
   28f9c:	ldr	w4, [sp, #96]
   28fa0:	ldp	x19, x20, [sp, #16]
   28fa4:	mov	w0, w4
   28fa8:	ldp	x21, x22, [sp, #32]
   28fac:	ldp	x23, x24, [sp, #48]
   28fb0:	ldp	x25, x26, [sp, #64]
   28fb4:	ldp	x27, x28, [sp, #80]
   28fb8:	ldp	x29, x30, [sp], #272
   28fbc:	ret
   28fc0:	mov	w0, w4
   28fc4:	ldp	x19, x20, [sp, #16]
   28fc8:	ldp	x21, x22, [sp, #32]
   28fcc:	ldp	x23, x24, [sp, #48]
   28fd0:	ldp	x25, x26, [sp, #64]
   28fd4:	ldp	x27, x28, [sp, #80]
   28fd8:	ldp	x29, x30, [sp], #272
   28fdc:	ret
   28fe0:	ldr	x27, [x20, #216]
   28fe4:	b.le	290c8 <printf_parse@@Base+0x9be8>
   28fe8:	mov	x25, #0x0                   	// #0
   28fec:	nop
   28ff0:	ldr	x0, [x26, #48]
   28ff4:	ldr	x0, [x0, x25, lsl #3]
   28ff8:	add	x0, x0, x0, lsl #2
   28ffc:	add	x1, x27, x0, lsl #3
   29000:	ldr	x2, [x1, #16]
   29004:	cmp	x19, x2
   29008:	b.le	290bc <printf_parse@@Base+0x9bdc>
   2900c:	ldr	x2, [x1, #8]
   29010:	cmp	x19, x2
   29014:	b.gt	290bc <printf_parse@@Base+0x9bdc>
   29018:	ldr	x2, [x27, x0, lsl #3]
   2901c:	ldr	x0, [x23]
   29020:	lsl	x2, x2, #4
   29024:	ldr	x4, [x21, #8]
   29028:	ldr	x1, [x1, #24]
   2902c:	mov	x6, x4
   29030:	ldr	x5, [x0, x2]
   29034:	cmp	x19, x1
   29038:	b.eq	290d0 <printf_parse@@Base+0x9bf0>  // b.none
   2903c:	cmp	x4, #0x0
   29040:	mov	x24, #0x0                   	// #0
   29044:	b.gt	29058 <printf_parse@@Base+0x9b78>
   29048:	b	290bc <printf_parse@@Base+0x9bdc>
   2904c:	cmp	x24, x4
   29050:	b.ge	290b8 <printf_parse@@Base+0x9bd8>  // b.tcont
   29054:	ldr	x0, [x23]
   29058:	ldr	x1, [x21, #16]
   2905c:	ldr	x1, [x1, x24, lsl #3]
   29060:	add	x24, x24, #0x1
   29064:	lsl	x3, x1, #4
   29068:	add	x2, x0, x3
   2906c:	ldrb	w2, [x2, #8]
   29070:	sub	w2, w2, #0x8
   29074:	cmp	w2, #0x1
   29078:	b.hi	2904c <printf_parse@@Base+0x9b6c>  // b.pmore
   2907c:	ldr	x0, [x0, x3]
   29080:	cmp	x5, x0
   29084:	b.ne	2904c <printf_parse@@Base+0x9b6c>  // b.any
   29088:	mov	x3, x28
   2908c:	mov	x2, x21
   29090:	mov	x0, x23
   29094:	str	x5, [sp, #96]
   29098:	bl	25010 <printf_parse@@Base+0x5b30>
   2909c:	mov	w4, w0
   290a0:	cbnz	w0, 28fc0 <printf_parse@@Base+0x9ae0>
   290a4:	ldr	x4, [x21, #8]
   290a8:	ldr	x5, [sp, #96]
   290ac:	cmp	x24, x4
   290b0:	b.lt	29054 <printf_parse@@Base+0x9b74>  // b.tstop
   290b4:	nop
   290b8:	ldr	x10, [x26, #40]
   290bc:	add	x25, x25, #0x1
   290c0:	cmp	x25, x10
   290c4:	b.lt	28ff0 <printf_parse@@Base+0x9b10>  // b.tstop
   290c8:	str	wzr, [sp, #184]
   290cc:	b	28aec <printf_parse@@Base+0x960c>
   290d0:	cmp	x4, #0x0
   290d4:	b.le	290bc <printf_parse@@Base+0x9bdc>
   290d8:	ldr	x11, [x21, #16]
   290dc:	mov	x24, #0xffffffffffffffff    	// #-1
   290e0:	mov	x1, x24
   290e4:	mov	x2, x11
   290e8:	add	x12, x11, x4, lsl #3
   290ec:	b	29110 <printf_parse@@Base+0x9c30>
   290f0:	cmp	w3, #0x9
   290f4:	b.ne	29104 <printf_parse@@Base+0x9c24>  // b.any
   290f8:	ldr	x3, [x9]
   290fc:	cmp	x5, x3
   29100:	csel	x24, x24, x4, ne  // ne = any
   29104:	add	x2, x2, #0x8
   29108:	cmp	x12, x2
   2910c:	b.eq	29140 <printf_parse@@Base+0x9c60>  // b.none
   29110:	ldr	x4, [x2]
   29114:	lsl	x8, x4, #4
   29118:	add	x9, x0, x8
   2911c:	ldrb	w3, [x9, #8]
   29120:	cmp	w3, #0x8
   29124:	b.ne	290f0 <printf_parse@@Base+0x9c10>  // b.any
   29128:	ldr	x3, [x0, x8]
   2912c:	add	x2, x2, #0x8
   29130:	cmp	x5, x3
   29134:	csel	x1, x1, x4, ne  // ne = any
   29138:	cmp	x12, x2
   2913c:	b.ne	29110 <printf_parse@@Base+0x9c30>  // b.any
   29140:	tbz	x1, #63, 2923c <printf_parse@@Base+0x9d5c>
   29144:	tbnz	x24, #63, 290bc <printf_parse@@Base+0x9bdc>
   29148:	mov	x5, #0x0                   	// #0
   2914c:	nop
   29150:	ldr	x1, [x11, x5, lsl #3]
   29154:	ldr	x0, [x23, #56]
   29158:	add	x4, x1, x1, lsl #1
   2915c:	lsl	x4, x4, #3
   29160:	add	x0, x0, x4
   29164:	ldr	x2, [x0, #8]
   29168:	cmp	x2, #0x0
   2916c:	b.le	291ac <printf_parse@@Base+0x9ccc>
   29170:	sub	x2, x2, #0x1
   29174:	mov	x3, #0x0                   	// #0
   29178:	ldr	x8, [x0, #16]
   2917c:	b	29194 <printf_parse@@Base+0x9cb4>
   29180:	lsr	x0, x0, #1
   29184:	ldr	x9, [x8, x0, lsl #3]
   29188:	cmp	x24, x9
   2918c:	b.gt	2926c <printf_parse@@Base+0x9d8c>
   29190:	mov	x2, x0
   29194:	add	x0, x2, x3
   29198:	cmp	x2, x3
   2919c:	b.hi	29180 <printf_parse@@Base+0x9ca0>  // b.pmore
   291a0:	ldr	x0, [x8, x3, lsl #3]
   291a4:	cmp	x24, x0
   291a8:	b.eq	29274 <printf_parse@@Base+0x9d94>  // b.none
   291ac:	ldr	x0, [x23, #48]
   291b0:	add	x4, x0, x4
   291b4:	ldr	x2, [x4, #8]
   291b8:	cmp	x2, #0x0
   291bc:	b.le	291fc <printf_parse@@Base+0x9d1c>
   291c0:	sub	x2, x2, #0x1
   291c4:	mov	x3, #0x0                   	// #0
   291c8:	ldr	x8, [x4, #16]
   291cc:	b	291e4 <printf_parse@@Base+0x9d04>
   291d0:	lsr	x0, x0, #1
   291d4:	ldr	x4, [x8, x0, lsl #3]
   291d8:	cmp	x24, x4
   291dc:	b.gt	2927c <printf_parse@@Base+0x9d9c>
   291e0:	mov	x2, x0
   291e4:	add	x0, x2, x3
   291e8:	cmp	x2, x3
   291ec:	b.hi	291d0 <printf_parse@@Base+0x9cf0>  // b.pmore
   291f0:	ldr	x0, [x8, x3, lsl #3]
   291f4:	cmp	x24, x0
   291f8:	b.eq	29274 <printf_parse@@Base+0x9d94>  // b.none
   291fc:	mov	x3, x28
   29200:	mov	x2, x21
   29204:	mov	x0, x23
   29208:	str	x5, [sp, #96]
   2920c:	bl	25010 <printf_parse@@Base+0x5b30>
   29210:	mov	w4, w0
   29214:	cbnz	w0, 28fc0 <printf_parse@@Base+0x9ae0>
   29218:	ldr	x6, [x21, #8]
   2921c:	ldr	x5, [sp, #96]
   29220:	cmp	x6, x5
   29224:	b.le	290b8 <printf_parse@@Base+0x9bd8>
   29228:	ldr	x11, [x21, #16]
   2922c:	b	29150 <printf_parse@@Base+0x9c70>
   29230:	stp	xzr, xzr, [x2, #32]
   29234:	str	xzr, [x2, #48]
   29238:	b	28d98 <printf_parse@@Base+0x98b8>
   2923c:	mov	x3, x28
   29240:	mov	x2, x21
   29244:	mov	x0, x23
   29248:	bl	25010 <printf_parse@@Base+0x5b30>
   2924c:	mov	w4, w0
   29250:	cbnz	w0, 28fc0 <printf_parse@@Base+0x9ae0>
   29254:	tbnz	x24, #63, 290b8 <printf_parse@@Base+0x9bd8>
   29258:	ldr	x6, [x21, #8]
   2925c:	cmp	x6, #0x0
   29260:	b.le	290b8 <printf_parse@@Base+0x9bd8>
   29264:	ldr	x11, [x21, #16]
   29268:	b	29148 <printf_parse@@Base+0x9c68>
   2926c:	add	x3, x0, #0x1
   29270:	b	29194 <printf_parse@@Base+0x9cb4>
   29274:	add	x5, x5, #0x1
   29278:	b	29220 <printf_parse@@Base+0x9d40>
   2927c:	add	x3, x0, #0x1
   29280:	b	291e4 <printf_parse@@Base+0x9d04>
   29284:	mov	w4, #0x0                   	// #0
   29288:	b	28f90 <printf_parse@@Base+0x9ab0>
   2928c:	nop
   29290:	stp	x29, x30, [sp, #-176]!
   29294:	adrp	x2, 32000 <vasnprintf@@Base+0x1848>
   29298:	mov	x29, sp
   2929c:	ldr	q0, [x2, #1712]
   292a0:	stp	x19, x20, [sp, #16]
   292a4:	mov	x20, x0
   292a8:	mov	x0, #0x8                   	// #8
   292ac:	stp	x21, x22, [sp, #32]
   292b0:	mov	x21, x1
   292b4:	str	q0, [sp, #144]
   292b8:	ldp	x22, x19, [x1, #16]
   292bc:	bl	a5f0 <malloc@plt>
   292c0:	str	x0, [sp, #160]
   292c4:	cbz	x0, 29670 <printf_parse@@Base+0xa190>
   292c8:	mov	x4, x0
   292cc:	stp	x25, x26, [sp, #64]
   292d0:	add	x26, sp, #0x90
   292d4:	mov	x2, x19
   292d8:	mov	x3, x26
   292dc:	str	x22, [x4]
   292e0:	mov	x1, x21
   292e4:	mov	x0, x20
   292e8:	bl	28988 <printf_parse@@Base+0x94a8>
   292ec:	cbnz	w0, 29688 <printf_parse@@Base+0xa1a8>
   292f0:	add	x0, x21, #0x30
   292f4:	stp	x23, x24, [sp, #48]
   292f8:	mov	w24, #0x0                   	// #0
   292fc:	stp	x27, x28, [sp, #80]
   29300:	str	x0, [sp, #128]
   29304:	add	x0, x21, #0x28
   29308:	str	x0, [sp, #136]
   2930c:	cmp	x19, #0x0
   29310:	b.le	29628 <printf_parse@@Base+0xa148>
   29314:	ldr	x0, [x21]
   29318:	lsl	x25, x19, #3
   2931c:	ldr	w1, [x20, #224]
   29320:	ldr	x2, [x0, x19, lsl #3]
   29324:	cmp	x2, #0x0
   29328:	csinc	w24, wzr, w24, ne  // ne = any
   2932c:	cmp	w1, w24
   29330:	b.lt	29638 <printf_parse@@Base+0xa158>  // b.tstop
   29334:	ldr	x0, [x20, #184]
   29338:	sub	x19, x19, #0x1
   2933c:	add	x0, x0, x25
   29340:	ldur	x22, [x0, #-8]
   29344:	str	xzr, [sp, #152]
   29348:	cbz	x22, 29478 <printf_parse@@Base+0x9f98>
   2934c:	ldr	x0, [x22, #40]
   29350:	add	x22, x22, #0x20
   29354:	ldr	x27, [x20, #152]
   29358:	cmp	x0, #0x0
   2935c:	b.le	29478 <printf_parse@@Base+0x9f98>
   29360:	mov	x23, #0x0                   	// #0
   29364:	nop
   29368:	ldr	x1, [x22, #16]
   2936c:	ldr	x0, [x27]
   29370:	ldr	x28, [x1, x23, lsl #3]
   29374:	lsl	x6, x28, #4
   29378:	add	x0, x0, x6
   2937c:	ldrb	w1, [x0, #10]
   29380:	tbnz	w1, #4, 294ec <printf_parse@@Base+0xa00c>
   29384:	ldr	x1, [x20, #8]
   29388:	ldrb	w2, [x0, #8]
   2938c:	ldrb	w1, [x1, x19]
   29390:	cmp	w2, #0x5
   29394:	b.eq	294d0 <printf_parse@@Base+0x9ff0>  // b.none
   29398:	b.hi	294c4 <printf_parse@@Base+0x9fe4>  // b.pmore
   2939c:	cmp	w2, #0x1
   293a0:	b.eq	295ec <printf_parse@@Base+0xa10c>  // b.none
   293a4:	cmp	w2, #0x3
   293a8:	b.ne	29468 <printf_parse@@Base+0x9f88>  // b.any
   293ac:	ldr	x2, [x0]
   293b0:	ubfx	x3, x1, #6, #2
   293b4:	ldr	x2, [x2, x3, lsl #3]
   293b8:	lsr	x1, x2, x1
   293bc:	tbz	w1, #0, 29468 <printf_parse@@Base+0x9f88>
   293c0:	ldr	w3, [x0, #8]
   293c4:	str	w3, [sp, #104]
   293c8:	tst	w3, #0x3ff00
   293cc:	b.eq	29408 <printf_parse@@Base+0x9f28>  // b.none
   293d0:	ldr	w2, [x20, #160]
   293d4:	mov	x1, x19
   293d8:	mov	x0, x20
   293dc:	bl	21a08 <printf_parse@@Base+0x2528>
   293e0:	ldr	w3, [sp, #104]
   293e4:	ubfx	x1, x3, #8, #10
   293e8:	tbz	w3, #10, 29604 <printf_parse@@Base+0xa124>
   293ec:	tbz	w0, #0, 29468 <printf_parse@@Base+0x9f88>
   293f0:	tbnz	w1, #3, 29468 <printf_parse@@Base+0x9f88>
   293f4:	tbz	w1, #5, 293fc <printf_parse@@Base+0x9f1c>
   293f8:	tbz	w0, #1, 29468 <printf_parse@@Base+0x9f88>
   293fc:	tbz	w1, #7, 29408 <printf_parse@@Base+0x9f28>
   29400:	tbz	w0, #3, 29468 <printf_parse@@Base+0x9f88>
   29404:	nop
   29408:	ldr	x0, [x21]
   2940c:	ldr	x1, [x0, x25]
   29410:	cbz	x1, 29468 <printf_parse@@Base+0x9f88>
   29414:	ldr	x0, [x1, #16]
   29418:	cmp	x0, #0x0
   2941c:	b.le	29468 <printf_parse@@Base+0x9f88>
   29420:	ldr	x3, [x27, #24]
   29424:	sub	x0, x0, #0x1
   29428:	mov	x2, #0x0                   	// #0
   2942c:	ldr	x4, [x1, #24]
   29430:	ldr	x3, [x3, x28, lsl #3]
   29434:	b	2944c <printf_parse@@Base+0x9f6c>
   29438:	lsr	x1, x1, #1
   2943c:	ldr	x6, [x4, x1, lsl #3]
   29440:	cmp	x3, x6
   29444:	b.gt	294bc <printf_parse@@Base+0x9fdc>
   29448:	mov	x0, x1
   2944c:	add	x1, x0, x2
   29450:	cmp	x0, x2
   29454:	b.hi	29438 <printf_parse@@Base+0x9f58>  // b.pmore
   29458:	ldr	x0, [x4, x2, lsl #3]
   2945c:	cmp	x3, x0
   29460:	b.eq	2959c <printf_parse@@Base+0xa0bc>  // b.none
   29464:	nop
   29468:	ldr	x0, [x22, #8]
   2946c:	add	x23, x23, #0x1
   29470:	cmp	x23, x0
   29474:	b.lt	29368 <printf_parse@@Base+0x9e88>  // b.tstop
   29478:	mov	x3, x26
   2947c:	mov	x2, x19
   29480:	mov	x1, x21
   29484:	mov	x0, x20
   29488:	bl	28988 <printf_parse@@Base+0x94a8>
   2948c:	mov	w22, w0
   29490:	cbz	w0, 2930c <printf_parse@@Base+0x9e2c>
   29494:	ldp	x23, x24, [sp, #48]
   29498:	ldp	x27, x28, [sp, #80]
   2949c:	ldr	x0, [sp, #160]
   294a0:	bl	aa50 <free@plt>
   294a4:	mov	w0, w22
   294a8:	ldp	x19, x20, [sp, #16]
   294ac:	ldp	x21, x22, [sp, #32]
   294b0:	ldp	x25, x26, [sp, #64]
   294b4:	ldp	x29, x30, [sp], #176
   294b8:	ret
   294bc:	add	x2, x1, #0x1
   294c0:	b	2944c <printf_parse@@Base+0x9f6c>
   294c4:	cmp	w2, #0x7
   294c8:	b.ne	29468 <printf_parse@@Base+0x9f88>  // b.any
   294cc:	tbnz	w1, #7, 29468 <printf_parse@@Base+0x9f88>
   294d0:	cmp	w1, #0xa
   294d4:	b.eq	29610 <printf_parse@@Base+0xa130>  // b.none
   294d8:	cbnz	w1, 293c0 <printf_parse@@Base+0x9ee0>
   294dc:	ldr	x1, [x20, #152]
   294e0:	ldr	x1, [x1, #216]
   294e4:	tbz	w1, #7, 293c0 <printf_parse@@Base+0x9ee0>
   294e8:	b	29468 <printf_parse@@Base+0x9f88>
   294ec:	ldr	x9, [x20, #152]
   294f0:	mov	x4, x19
   294f4:	ldr	x8, [x21, #24]
   294f8:	mov	x1, x9
   294fc:	mov	x3, x20
   29500:	mov	x2, x28
   29504:	stp	x8, x6, [sp, #104]
   29508:	ldr	x0, [x1], #216
   2950c:	str	x9, [sp, #120]
   29510:	bl	23dc0 <printf_parse@@Base+0x48e0>
   29514:	cmp	w0, #0x0
   29518:	ldr	x6, [sp, #112]
   2951c:	b.le	295fc <printf_parse@@Base+0xa11c>
   29520:	ldr	x8, [sp, #104]
   29524:	add	x1, x19, w0, sxtw
   29528:	cmp	x8, x1
   2952c:	b.lt	295a0 <printf_parse@@Base+0xa0c0>  // b.tstop
   29530:	ldr	x2, [x21]
   29534:	ldr	x9, [sp, #120]
   29538:	ldr	x1, [x2, x1, lsl #3]
   2953c:	cbz	x1, 29590 <printf_parse@@Base+0xa0b0>
   29540:	ldr	x2, [x1, #16]
   29544:	cmp	x2, #0x0
   29548:	b.le	29590 <printf_parse@@Base+0xa0b0>
   2954c:	ldr	x4, [x9, #24]
   29550:	sub	x2, x2, #0x1
   29554:	mov	x3, #0x0                   	// #0
   29558:	ldr	x9, [x1, #24]
   2955c:	ldr	x8, [x4, x28, lsl #3]
   29560:	b	29578 <printf_parse@@Base+0xa098>
   29564:	lsr	x1, x1, #1
   29568:	ldr	x4, [x9, x1, lsl #3]
   2956c:	cmp	x8, x4
   29570:	b.gt	29620 <printf_parse@@Base+0xa140>
   29574:	mov	x2, x1
   29578:	add	x1, x2, x3
   2957c:	cmp	x2, x3
   29580:	b.hi	29564 <printf_parse@@Base+0xa084>  // b.pmore
   29584:	ldr	x1, [x9, x3, lsl #3]
   29588:	cmp	x8, x1
   2958c:	b.eq	295a0 <printf_parse@@Base+0xa0c0>  // b.none
   29590:	ldr	x0, [x27]
   29594:	add	x0, x0, x6
   29598:	b	29384 <printf_parse@@Base+0x9ea4>
   2959c:	mov	w0, #0x1                   	// #1
   295a0:	ldr	x1, [x21, #40]
   295a4:	cbz	x1, 295d0 <printf_parse@@Base+0xa0f0>
   295a8:	ldr	x3, [x27, #24]
   295ac:	add	x4, x19, w0, sxtw
   295b0:	ldp	x2, x1, [sp, #128]
   295b4:	mov	x6, x19
   295b8:	ldr	x3, [x3, x28, lsl #3]
   295bc:	mov	x5, x28
   295c0:	mov	x0, x20
   295c4:	bl	23b38 <printf_parse@@Base+0x4658>
   295c8:	tst	w0, #0xff
   295cc:	b.ne	29468 <printf_parse@@Base+0x9f88>  // b.any
   295d0:	mov	x1, x28
   295d4:	mov	x0, x26
   295d8:	bl	20538 <printf_parse@@Base+0x1058>
   295dc:	tst	w0, #0xff
   295e0:	b.ne	29468 <printf_parse@@Base+0x9f88>  // b.any
   295e4:	mov	w22, #0xc                   	// #12
   295e8:	b	29494 <printf_parse@@Base+0x9fb4>
   295ec:	ldrb	w2, [x0]
   295f0:	cmp	w2, w1
   295f4:	b.eq	293c0 <printf_parse@@Base+0x9ee0>  // b.none
   295f8:	b	29468 <printf_parse@@Base+0x9f88>
   295fc:	b.eq	29590 <printf_parse@@Base+0xa0b0>  // b.none
   29600:	b	295a0 <printf_parse@@Base+0xa0c0>
   29604:	tbz	w1, #3, 293f4 <printf_parse@@Base+0x9f14>
   29608:	tbz	w0, #0, 293f4 <printf_parse@@Base+0x9f14>
   2960c:	b	29468 <printf_parse@@Base+0x9f88>
   29610:	ldr	x1, [x20, #152]
   29614:	ldr	x1, [x1, #216]
   29618:	tbnz	w1, #6, 293c0 <printf_parse@@Base+0x9ee0>
   2961c:	b	29468 <printf_parse@@Base+0x9f88>
   29620:	add	x3, x1, #0x1
   29624:	b	29578 <printf_parse@@Base+0xa098>
   29628:	mov	w22, #0x0                   	// #0
   2962c:	ldp	x23, x24, [sp, #48]
   29630:	ldp	x27, x28, [sp, #80]
   29634:	b	2949c <printf_parse@@Base+0x9fbc>
   29638:	mov	x2, x25
   2963c:	mov	w1, #0x0                   	// #0
   29640:	bl	a6f0 <memset@plt>
   29644:	mov	w22, #0x0                   	// #0
   29648:	ldr	x0, [sp, #160]
   2964c:	bl	aa50 <free@plt>
   29650:	mov	w0, w22
   29654:	ldp	x19, x20, [sp, #16]
   29658:	ldp	x21, x22, [sp, #32]
   2965c:	ldp	x23, x24, [sp, #48]
   29660:	ldp	x25, x26, [sp, #64]
   29664:	ldp	x27, x28, [sp, #80]
   29668:	ldp	x29, x30, [sp], #176
   2966c:	ret
   29670:	mov	w22, #0xc                   	// #12
   29674:	mov	w0, w22
   29678:	ldp	x19, x20, [sp, #16]
   2967c:	ldp	x21, x22, [sp, #32]
   29680:	ldp	x29, x30, [sp], #176
   29684:	ret
   29688:	mov	w22, w0
   2968c:	b	2949c <printf_parse@@Base+0x9fbc>
   29690:	sub	sp, sp, #0x2a0
   29694:	stp	x29, x30, [sp]
   29698:	mov	x29, sp
   2969c:	stp	x19, x20, [sp, #16]
   296a0:	mov	x19, x3
   296a4:	ldr	w3, [sp, #672]
   296a8:	mov	x20, x0
   296ac:	stp	x27, x28, [sp, #80]
   296b0:	ldr	x27, [x0]
   296b4:	str	d8, [sp, #96]
   296b8:	fmov	d8, x5
   296bc:	stp	x25, x26, [sp, #64]
   296c0:	add	x25, sp, #0x1a0
   296c4:	stp	x21, x22, [sp, #32]
   296c8:	mov	x21, x4
   296cc:	stp	x0, x6, [sp, #136]
   296d0:	mov	x0, x25
   296d4:	str	w3, [sp, #192]
   296d8:	str	x2, [sp, #208]
   296dc:	mov	x2, #0x100                 	// #256
   296e0:	str	x1, [sp, #232]
   296e4:	mov	w1, #0x0                   	// #0
   296e8:	str	x7, [sp, #304]
   296ec:	bl	a6f0 <memset@plt>
   296f0:	ldr	x0, [x20, #32]
   296f4:	str	x0, [sp, #152]
   296f8:	str	x27, [sp, #568]
   296fc:	cbz	x0, 29714 <printf_parse@@Base+0xa234>
   29700:	ldrb	w0, [x20, #56]
   29704:	tst	x0, #0x8
   29708:	ccmp	x19, x21, #0x4, ne  // ne = any
   2970c:	b.ne	29b04 <printf_parse@@Base+0xa624>  // b.any
   29710:	str	xzr, [sp, #152]
   29714:	ldp	x0, x3, [sp, #136]
   29718:	str	xzr, [sp, #264]
   2971c:	ldr	x0, [x0, #48]
   29720:	cmp	x0, x3
   29724:	b.cs	29740 <printf_parse@@Base+0xa260>  // b.hs, b.nlast
   29728:	sub	x1, x3, #0x1
   2972c:	sub	x2, x0, x1
   29730:	sub	x0, x1, x0
   29734:	str	x0, [sp, #264]
   29738:	add	x0, x3, x2
   2973c:	str	x0, [sp, #144]
   29740:	ldr	x4, [sp, #136]
   29744:	ldr	x0, [x4, #16]
   29748:	cbz	x0, 2a2f4 <printf_parse@@Base+0xae14>
   2974c:	ldr	x0, [x27, #72]
   29750:	cbz	x0, 2a2f4 <printf_parse@@Base+0xae14>
   29754:	ldr	x1, [x27, #80]
   29758:	cbz	x1, 2a2f4 <printf_parse@@Base+0xae14>
   2975c:	ldr	x2, [x27, #88]
   29760:	cbz	x2, 2a2f4 <printf_parse@@Base+0xae14>
   29764:	ldr	x3, [x27, #96]
   29768:	cbz	x3, 2a2f4 <printf_parse@@Base+0xae14>
   2976c:	ldr	x0, [x0, #16]
   29770:	cbnz	x0, 297a0 <printf_parse@@Base+0xa2c0>
   29774:	ldr	x0, [x1, #16]
   29778:	cbnz	x0, 297a0 <printf_parse@@Base+0xa2c0>
   2977c:	ldr	x0, [x2, #16]
   29780:	cbz	x0, 2978c <printf_parse@@Base+0xa2ac>
   29784:	ldrsb	w0, [x4, #56]
   29788:	tbnz	w0, #31, 297a0 <printf_parse@@Base+0xa2c0>
   2978c:	cmp	x19, #0x0
   29790:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   29794:	b.ne	2a2f4 <printf_parse@@Base+0xae14>  // b.any
   29798:	mov	x21, #0x0                   	// #0
   2979c:	mov	x19, #0x0                   	// #0
   297a0:	ldr	x0, [sp, #144]
   297a4:	cbnz	x0, 29af4 <printf_parse@@Base+0xa614>
   297a8:	ldr	x0, [x27, #152]
   297ac:	cmp	x0, #0x0
   297b0:	cset	w0, ne  // ne = any
   297b4:	str	w0, [sp, #188]
   297b8:	str	w0, [sp, #220]
   297bc:	ldr	x5, [sp, #136]
   297c0:	ldr	w0, [x27, #180]
   297c4:	ldr	x1, [x27, #16]
   297c8:	str	w0, [sp, #560]
   297cc:	ldr	x6, [sp, #208]
   297d0:	sxtw	x4, w0
   297d4:	add	x1, x1, #0x1
   297d8:	fmov	d0, x6
   297dc:	ldr	x2, [x5, #24]
   297e0:	cmp	x1, x4
   297e4:	ldr	x5, [x5, #40]
   297e8:	csel	x1, x1, x4, ge  // ge = tcont
   297ec:	add	x20, x6, #0x1
   297f0:	and	x2, x2, #0x400000
   297f4:	cmp	x1, x20
   297f8:	ldrb	w3, [x27, #176]
   297fc:	dup	v0.2d, v0.d[0]
   29800:	csel	x20, x1, x20, le
   29804:	orr	x22, x2, x5
   29808:	cmp	x2, #0x0
   2980c:	cset	w2, ne  // ne = any
   29810:	cmp	x22, #0x0
   29814:	ldr	x7, [sp, #232]
   29818:	cset	w1, ne  // ne = any
   2981c:	str	x5, [sp, #256]
   29820:	cmp	w0, #0x1
   29824:	str	x7, [sp, #416]
   29828:	str	x5, [sp, #536]
   2982c:	strb	w2, [sp, #552]
   29830:	ubfx	x2, x3, #2, #1
   29834:	ubfx	x3, x3, #3, #1
   29838:	strb	w2, [sp, #553]
   2983c:	strb	w3, [sp, #554]
   29840:	strb	w1, [sp, #555]
   29844:	stp	q0, q0, [sp, #496]
   29848:	b.le	2a5a8 <printf_parse@@Base+0xb0c8>
   2984c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   29850:	cmp	x20, x0
   29854:	b.hi	2a7d8 <printf_parse@@Base+0xb2f8>  // b.pmore
   29858:	lsl	x0, x20, #2
   2985c:	bl	a5f0 <malloc@plt>
   29860:	cbz	x0, 2a7d8 <printf_parse@@Base+0xb2f8>
   29864:	stp	x23, x24, [sp, #48]
   29868:	str	x0, [sp, #432]
   2986c:	cbnz	x22, 2a5b0 <printf_parse@@Base+0xb0d0>
   29870:	ldrb	w0, [x27, #176]
   29874:	add	x1, x27, #0xb8
   29878:	str	x20, [sp, #480]
   2987c:	str	x1, [sp, #544]
   29880:	ubfx	x0, x0, #4, #1
   29884:	strb	w0, [sp, #558]
   29888:	ldr	x0, [sp, #232]
   2988c:	str	x0, [sp, #424]
   29890:	ldr	w0, [x27, #180]
   29894:	ldr	d0, [sp, #208]
   29898:	cmp	w0, #0x1
   2989c:	b.le	298a4 <printf_parse@@Base+0xa3c4>
   298a0:	fmov	d0, xzr
   298a4:	ldr	x0, [sp, #136]
   298a8:	mov	x1, #0xffffffffffffffff    	// #-1
   298ac:	dup	v0.2d, v0.d[0]
   298b0:	dup	v8.2d, v8.d[0]
   298b4:	ldrb	w0, [x0, #56]
   298b8:	ldr	x22, [x27, #152]
   298bc:	str	x1, [sp, #584]
   298c0:	ubfx	x0, x0, #7, #1
   298c4:	strb	w0, [sp, #557]
   298c8:	ldr	w0, [sp, #192]
   298cc:	str	w0, [sp, #576]
   298d0:	cmp	xzr, x22, lsl #1
   298d4:	str	q0, [sp, #464]
   298d8:	lsl	x23, x22, #1
   298dc:	str	q8, [sp, #512]
   298e0:	b.ge	29924 <printf_parse@@Base+0xa444>  // b.tcont
   298e4:	mov	x0, #0x6666666666666666    	// #7378697629483820646
   298e8:	movk	x0, #0x666, lsl #48
   298ec:	cmp	x23, x0
   298f0:	b.gt	2a718 <printf_parse@@Base+0xb238>
   298f4:	add	x0, x23, x22, lsl #3
   298f8:	lsl	x0, x0, #3
   298fc:	bl	a5f0 <malloc@plt>
   29900:	mov	x1, x0
   29904:	lsl	x0, x22, #4
   29908:	mov	x22, x1
   2990c:	str	x1, [sp, #632]
   29910:	bl	a5f0 <malloc@plt>
   29914:	str	x0, [sp, #664]
   29918:	cmp	x0, #0x0
   2991c:	ccmp	x22, #0x0, #0x4, ne  // ne = any
   29920:	b.eq	2a718 <printf_parse@@Base+0xb238>  // b.none
   29924:	mov	w0, #0x1                   	// #1
   29928:	str	w0, [sp, #640]
   2992c:	ldr	x0, [sp, #144]
   29930:	str	x23, [sp, #624]
   29934:	str	x23, [sp, #656]
   29938:	cmp	x0, #0x1
   2993c:	b.ls	2a6c0 <printf_parse@@Base+0xb1e0>  // b.plast
   29940:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
   29944:	cmp	x20, x0
   29948:	b.hi	2a718 <printf_parse@@Base+0xb238>  // b.pmore
   2994c:	add	x0, x20, #0x1
   29950:	lsl	x0, x0, #3
   29954:	bl	a5f0 <malloc@plt>
   29958:	str	x0, [sp, #600]
   2995c:	mov	x28, x0
   29960:	cbz	x0, 2a324 <printf_parse@@Base+0xae44>
   29964:	ldr	x0, [sp, #192]
   29968:	mov	w1, #0x6                   	// #6
   2996c:	mov	x2, #0x1                   	// #1
   29970:	str	x19, [sp, #328]
   29974:	tst	x0, #0x1
   29978:	mov	w0, #0x4                   	// #4
   2997c:	csel	w1, w0, w1, ne  // ne = any
   29980:	cmp	x19, x21
   29984:	cneg	x2, x2, gt
   29988:	str	x2, [sp, #248]
   2998c:	csel	x2, x19, x21, le
   29990:	str	w1, [sp, #528]
   29994:	csel	x1, x19, x21, ge  // ge = tcont
   29998:	str	x1, [sp, #160]
   2999c:	mov	w1, #0x8                   	// #8
   299a0:	str	x2, [sp, #224]
   299a4:	ldr	x2, [sp, #152]
   299a8:	str	w1, [sp, #216]
   299ac:	ldr	w1, [x27, #180]
   299b0:	str	w1, [sp, #292]
   299b4:	cbz	x2, 29a00 <printf_parse@@Base+0xa520>
   299b8:	cmp	w1, #0x1
   299bc:	b.eq	299e0 <printf_parse@@Base+0xa500>  // b.none
   299c0:	ldr	x0, [sp, #136]
   299c4:	ldr	x1, [sp, #256]
   299c8:	ldr	x0, [x0, #24]
   299cc:	and	x0, x0, #0x400000
   299d0:	orr	x0, x1, x0
   299d4:	cmp	x0, #0x0
   299d8:	cset	w0, eq  // eq = none
   299dc:	lsl	w0, w0, #2
   299e0:	ldr	x1, [sp, #256]
   299e4:	cmp	x19, x21
   299e8:	cset	w2, le
   299ec:	cmp	x1, #0x0
   299f0:	cset	w1, ne  // ne = any
   299f4:	orr	w0, w1, w0
   299f8:	orr	w0, w0, w2, lsl #1
   299fc:	str	w0, [sp, #216]
   29a00:	ldr	x0, [sp, #224]
   29a04:	cmp	x19, x0
   29a08:	ldr	x0, [sp, #160]
   29a0c:	cset	w1, lt  // lt = tstop
   29a10:	cmp	x19, x0
   29a14:	cset	w0, gt
   29a18:	orr	w0, w1, w0
   29a1c:	str	w0, [sp, #316]
   29a20:	cbnz	w0, 2a95c <printf_parse@@Base+0xb47c>
   29a24:	cmp	x19, x21
   29a28:	add	x0, sp, #0x148
   29a2c:	csel	x0, x0, xzr, le
   29a30:	str	x0, [sp, #296]
   29a34:	cmp	x0, #0x0
   29a38:	add	x0, sp, #0x144
   29a3c:	str	x0, [sp, #128]
   29a40:	cset	w0, ne  // ne = any
   29a44:	add	x1, sp, #0x150
   29a48:	str	x1, [sp, #200]
   29a4c:	str	x27, [sp, #240]
   29a50:	str	w0, [sp, #312]
   29a54:	ldr	w0, [sp, #216]
   29a58:	cmp	w0, #0x7
   29a5c:	b.eq	2a14c <printf_parse@@Base+0xac6c>  // b.none
   29a60:	cmp	w0, #0x8
   29a64:	b.eq	29c08 <printf_parse@@Base+0xa728>  // b.none
   29a68:	cmp	w0, #0x5
   29a6c:	b.gt	29b18 <printf_parse@@Base+0xa638>
   29a70:	cmp	w0, #0x3
   29a74:	b.gt	2a5f4 <printf_parse@@Base+0xb114>
   29a78:	ldp	x20, x23, [sp, #152]
   29a7c:	ldr	x21, [sp, #208]
   29a80:	ldr	x22, [sp, #224]
   29a84:	ldr	x24, [sp, #248]
   29a88:	ldr	x2, [sp, #456]
   29a8c:	b	29ac4 <printf_parse@@Base+0xa5e4>
   29a90:	cmp	x21, x19
   29a94:	mov	x0, x20
   29a98:	b.le	29aa8 <printf_parse@@Base+0xa5c8>
   29a9c:	ldr	x0, [sp, #424]
   29aa0:	ldrb	w0, [x0, x1]
   29aa4:	add	x0, x20, x0
   29aa8:	ldrb	w0, [x0]
   29aac:	cbnz	w0, 29c08 <printf_parse@@Base+0xa728>
   29ab0:	add	x19, x19, x24
   29ab4:	str	x19, [sp, #328]
   29ab8:	cmp	x19, x22
   29abc:	ccmp	x19, x23, #0x0, ge  // ge = tcont
   29ac0:	b.gt	29b90 <printf_parse@@Base+0xa6b0>
   29ac4:	ldr	x0, [sp, #472]
   29ac8:	sub	x1, x19, x2
   29acc:	cmp	x0, x1
   29ad0:	b.hi	29a90 <printf_parse@@Base+0xa5b0>  // b.pmore
   29ad4:	ldr	w2, [sp, #192]
   29ad8:	mov	x1, x19
   29adc:	mov	x0, x25
   29ae0:	bl	21b08 <printf_parse@@Base+0x2628>
   29ae4:	cbnz	w0, 2a8a4 <printf_parse@@Base+0xb3c4>
   29ae8:	ldr	x2, [sp, #456]
   29aec:	sub	x1, x19, x2
   29af0:	b	29a90 <printf_parse@@Base+0xa5b0>
   29af4:	mov	w0, #0x1                   	// #1
   29af8:	str	w0, [sp, #188]
   29afc:	str	w0, [sp, #220]
   29b00:	b	297bc <printf_parse@@Base+0xa2dc>
   29b04:	tst	x0, #0x1
   29b08:	ldr	x0, [sp, #152]
   29b0c:	csel	x0, x0, xzr, eq  // eq = none
   29b10:	str	x0, [sp, #152]
   29b14:	b	29714 <printf_parse@@Base+0xa234>
   29b18:	ldr	w0, [sp, #216]
   29b1c:	cmp	w0, #0x6
   29b20:	b.ne	29a78 <printf_parse@@Base+0xa598>  // b.any
   29b24:	ldr	x0, [sp, #160]
   29b28:	mov	w2, #0x0                   	// #0
   29b2c:	cmp	x19, x0
   29b30:	mov	x0, x19
   29b34:	b.ge	29bfc <printf_parse@@Base+0xa71c>  // b.tcont
   29b38:	ldp	x3, x5, [sp, #152]
   29b3c:	ldr	x4, [sp, #232]
   29b40:	ldrb	w1, [x4, x0]
   29b44:	ldrb	w1, [x3, x1]
   29b48:	cbnz	w1, 29bf0 <printf_parse@@Base+0xa710>
   29b4c:	add	x0, x0, #0x1
   29b50:	mov	w2, #0x1                   	// #1
   29b54:	cmp	x0, x5
   29b58:	b.ne	29b40 <printf_parse@@Base+0xa660>  // b.any
   29b5c:	ldr	x0, [sp, #160]
   29b60:	str	x0, [sp, #328]
   29b64:	mov	x19, x0
   29b68:	ldr	x0, [sp, #208]
   29b6c:	cmp	x19, x0
   29b70:	mov	x0, #0x0                   	// #0
   29b74:	b.lt	2a838 <printf_parse@@Base+0xb358>  // b.tstop
   29b78:	ldr	x1, [sp, #256]
   29b7c:	cbz	x1, 29b84 <printf_parse@@Base+0xa6a4>
   29b80:	ldrb	w0, [x1, x0]
   29b84:	ldr	x1, [sp, #152]
   29b88:	ldrb	w0, [x1, x0]
   29b8c:	cbnz	w0, 29c08 <printf_parse@@Base+0xa728>
   29b90:	ldr	x27, [sp, #240]
   29b94:	mov	w0, #0x1                   	// #1
   29b98:	ldr	x28, [sp, #600]
   29b9c:	str	w0, [sp, #184]
   29ba0:	ldp	x23, x24, [sp, #48]
   29ba4:	mov	x0, x28
   29ba8:	bl	aa50 <free@plt>
   29bac:	ldr	x0, [x27, #152]
   29bb0:	cbz	x0, 2a340 <printf_parse@@Base+0xae60>
   29bb4:	mov	x0, x25
   29bb8:	bl	214b8 <printf_parse@@Base+0x1fd8>
   29bbc:	ldr	x0, [sp, #664]
   29bc0:	bl	aa50 <free@plt>
   29bc4:	ldr	x0, [sp, #632]
   29bc8:	bl	aa50 <free@plt>
   29bcc:	ldr	x0, [sp, #432]
   29bd0:	bl	aa50 <free@plt>
   29bd4:	ldr	x0, [sp, #440]
   29bd8:	bl	aa50 <free@plt>
   29bdc:	ldrb	w0, [sp, #555]
   29be0:	cbz	w0, 2a2fc <printf_parse@@Base+0xae1c>
   29be4:	ldr	x0, [sp, #424]
   29be8:	bl	aa50 <free@plt>
   29bec:	b	2a2fc <printf_parse@@Base+0xae1c>
   29bf0:	cbz	w2, 29c08 <printf_parse@@Base+0xa728>
   29bf4:	mov	x19, x0
   29bf8:	str	x0, [sp, #328]
   29bfc:	ldr	x0, [sp, #160]
   29c00:	cmp	x0, x19
   29c04:	b.eq	29b68 <printf_parse@@Base+0xa688>  // b.none
   29c08:	ldr	w2, [sp, #192]
   29c0c:	mov	x1, x19
   29c10:	mov	x0, x25
   29c14:	bl	21b08 <printf_parse@@Base+0x2628>
   29c18:	str	w0, [sp, #184]
   29c1c:	cbnz	w0, 2a760 <printf_parse@@Base+0xb280>
   29c20:	ldr	w0, [sp, #292]
   29c24:	cmp	w0, #0x1
   29c28:	b.eq	29c44 <printf_parse@@Base+0xa764>  // b.none
   29c2c:	ldr	x0, [sp, #464]
   29c30:	cbz	x0, 29c44 <printf_parse@@Base+0xa764>
   29c34:	ldr	x0, [sp, #432]
   29c38:	ldr	w0, [x0]
   29c3c:	cmn	w0, #0x1
   29c40:	b.eq	2a120 <printf_parse@@Base+0xac40>  // b.none
   29c44:	ldr	x20, [sp, #568]
   29c48:	add	x0, sp, #0x260
   29c4c:	ldr	x19, [x20, #72]
   29c50:	stp	xzr, xzr, [x0]
   29c54:	ldr	x0, [sp, #488]
   29c58:	mov	x1, x0
   29c5c:	ldrsb	w0, [x19, #104]
   29c60:	str	x1, [sp, #112]
   29c64:	str	wzr, [sp, #324]
   29c68:	str	wzr, [sp, #640]
   29c6c:	tbz	w0, #31, 29ca0 <printf_parse@@Base+0xa7c0>
   29c70:	ldr	w2, [sp, #576]
   29c74:	sub	x1, x1, #0x1
   29c78:	mov	x0, x25
   29c7c:	bl	21a08 <printf_parse@@Base+0x2528>
   29c80:	tbnz	w0, #0, 2a6d4 <printf_parse@@Base+0xb1f4>
   29c84:	cbz	w0, 29ca0 <printf_parse@@Base+0xa7c0>
   29c88:	and	w1, w0, #0x6
   29c8c:	cmp	w1, #0x6
   29c90:	b.eq	2a89c <printf_parse@@Base+0xb3bc>  // b.none
   29c94:	tbnz	w0, #1, 2a7e8 <printf_parse@@Base+0xb308>
   29c98:	tbnz	w0, #2, 2a7fc <printf_parse@@Base+0xb31c>
   29c9c:	nop
   29ca0:	ldr	x0, [sp, #600]
   29ca4:	cbz	x0, 2a5e8 <printf_parse@@Base+0xb108>
   29ca8:	ldr	x2, [sp, #112]
   29cac:	ldr	x1, [x20, #152]
   29cb0:	str	x19, [x0, x2, lsl #3]
   29cb4:	cbnz	x1, 2a844 <printf_parse@@Base+0xb364>
   29cb8:	ldrb	w0, [x19, #104]
   29cbc:	ldr	w24, [sp, #312]
   29cc0:	str	xzr, [sp, #120]
   29cc4:	mov	x26, #0xffffffffffffffff    	// #-1
   29cc8:	tbnz	w0, #4, 2a7b0 <printf_parse@@Base+0xb2d0>
   29ccc:	ldr	x0, [sp, #296]
   29cd0:	str	x0, [sp, #168]
   29cd4:	ldr	x28, [sp, #488]
   29cd8:	ldr	x0, [sp, #520]
   29cdc:	cmp	x0, x28
   29ce0:	b.le	2a950 <printf_parse@@Base+0xb470>
   29ce4:	ldr	x0, [sp, #480]
   29ce8:	add	x21, x28, #0x1
   29cec:	add	x27, sp, #0x168
   29cf0:	cmp	x21, x0
   29cf4:	b.ge	29da8 <printf_parse@@Base+0xa8c8>  // b.tcont
   29cf8:	ldr	x0, [sp, #464]
   29cfc:	cmp	x21, x0
   29d00:	b.ge	2a2e4 <printf_parse@@Base+0xae04>  // b.tcont
   29d04:	ldrb	w0, [x19, #104]
   29d08:	tbnz	w0, #5, 29dd8 <printf_parse@@Base+0xa8f8>
   29d0c:	ldr	x0, [sp, #424]
   29d10:	add	x1, x28, #0x1
   29d14:	str	x1, [sp, #488]
   29d18:	ldrb	w20, [x0, x28]
   29d1c:	ldr	x0, [x19, #88]
   29d20:	cbz	x0, 2a2b4 <printf_parse@@Base+0xadd4>
   29d24:	ldr	x20, [x0, x20, lsl #3]
   29d28:	ldr	x0, [sp, #600]
   29d2c:	cbz	x0, 29d44 <printf_parse@@Base+0xa864>
   29d30:	ldr	x0, [sp, #128]
   29d34:	mov	x2, x20
   29d38:	mov	x1, x25
   29d3c:	bl	287f8 <printf_parse@@Base+0x9318>
   29d40:	mov	x20, x0
   29d44:	cbz	x20, 29f68 <printf_parse@@Base+0xaa88>
   29d48:	cmp	x20, x19
   29d4c:	ldrb	w0, [x20, #104]
   29d50:	ldr	x1, [sp, #112]
   29d54:	csel	w24, w24, wzr, eq  // eq = none
   29d58:	cmp	w24, #0x0
   29d5c:	csel	x1, x1, x21, eq  // eq = none
   29d60:	str	x1, [sp, #112]
   29d64:	ldr	x28, [sp, #488]
   29d68:	tbz	w0, #4, 29d88 <printf_parse@@Base+0xa8a8>
   29d6c:	tbnz	w0, #7, 2a1c8 <printf_parse@@Base+0xace8>
   29d70:	ldr	w0, [sp, #188]
   29d74:	mov	x26, x28
   29d78:	cbz	w0, 29fd8 <printf_parse@@Base+0xaaf8>
   29d7c:	mov	x0, #0x1                   	// #1
   29d80:	str	x0, [sp, #120]
   29d84:	str	xzr, [sp, #168]
   29d88:	ldr	x0, [sp, #520]
   29d8c:	cmp	x0, x28
   29d90:	b.le	29fc0 <printf_parse@@Base+0xaae0>
   29d94:	ldr	x0, [sp, #480]
   29d98:	add	x21, x28, #0x1
   29d9c:	mov	x19, x20
   29da0:	cmp	x21, x0
   29da4:	b.lt	29cf8 <printf_parse@@Base+0xa818>  // b.tstop
   29da8:	ldr	x1, [sp, #504]
   29dac:	cmp	x0, x1
   29db0:	b.ge	29cf8 <printf_parse@@Base+0xa818>  // b.tcont
   29db4:	add	w1, w21, #0x1
   29db8:	mov	x0, x25
   29dbc:	bl	24dc0 <printf_parse@@Base+0x58e0>
   29dc0:	str	w0, [sp, #324]
   29dc4:	cbnz	w0, 2a770 <printf_parse@@Base+0xb290>
   29dc8:	ldrb	w0, [x19, #104]
   29dcc:	ldr	x28, [sp, #488]
   29dd0:	tbz	w0, #5, 29d0c <printf_parse@@Base+0xa82c>
   29dd4:	nop
   29dd8:	ldr	x5, [x19, #16]
   29ddc:	ldr	x20, [sp, #568]
   29de0:	cmp	x5, #0x0
   29de4:	b.le	29f60 <printf_parse@@Base+0xaa80>
   29de8:	stp	x26, x21, [sp, #272]
   29dec:	mov	x21, x28
   29df0:	add	x0, x20, #0xd8
   29df4:	str	w24, [sp, #288]
   29df8:	mov	x24, x5
   29dfc:	mov	x22, #0x0                   	// #0
   29e00:	str	x0, [sp, #176]
   29e04:	nop
   29e08:	ldr	x0, [x19, #24]
   29e0c:	ldr	x26, [x20]
   29e10:	ldr	x23, [x0, x22, lsl #3]
   29e14:	add	x0, x26, x23, lsl #4
   29e18:	ldrb	w1, [x0, #10]
   29e1c:	tbz	w1, #4, 29f48 <printf_parse@@Base+0xaa68>
   29e20:	ldr	w28, [x0, #8]
   29e24:	tst	w28, #0x3ff00
   29e28:	b.eq	29e60 <printf_parse@@Base+0xa980>  // b.none
   29e2c:	ldr	w2, [sp, #576]
   29e30:	mov	x1, x21
   29e34:	mov	x0, x25
   29e38:	bl	21a08 <printf_parse@@Base+0x2528>
   29e3c:	ubfx	x2, x28, #8, #10
   29e40:	tbz	w28, #10, 2a1e4 <printf_parse@@Base+0xad04>
   29e44:	tbz	w0, #0, 29f48 <printf_parse@@Base+0xaa68>
   29e48:	tbnz	w2, #3, 29f48 <printf_parse@@Base+0xaa68>
   29e4c:	tbz	w2, #5, 29e54 <printf_parse@@Base+0xa974>
   29e50:	tbz	w0, #1, 29f48 <printf_parse@@Base+0xaa68>
   29e54:	tbz	w2, #7, 29e60 <printf_parse@@Base+0xa980>
   29e58:	tbz	w0, #3, 29f48 <printf_parse@@Base+0xaa68>
   29e5c:	nop
   29e60:	ldr	x1, [sp, #176]
   29e64:	mov	x4, x21
   29e68:	mov	x0, x26
   29e6c:	mov	x3, x25
   29e70:	mov	x2, x23
   29e74:	bl	23dc0 <printf_parse@@Base+0x48e0>
   29e78:	cbz	w0, 29f40 <printf_parse@@Base+0xaa60>
   29e7c:	ldp	x2, x4, [sp, #480]
   29e80:	ldr	w1, [sp, #640]
   29e84:	ldr	x26, [sp, #608]
   29e88:	cmp	w1, w0
   29e8c:	csel	w1, w1, w0, ge  // ge = tcont
   29e90:	str	w1, [sp, #640]
   29e94:	add	x21, x4, w0, sxtw
   29e98:	cmp	x21, x2
   29e9c:	b.lt	2a1f0 <printf_parse@@Base+0xad10>  // b.tstop
   29ea0:	ldr	x0, [sp, #504]
   29ea4:	cmp	x2, x0
   29ea8:	b.ge	2a1f0 <printf_parse@@Base+0xad10>  // b.tcont
   29eac:	add	w1, w21, #0x1
   29eb0:	mov	x0, x25
   29eb4:	bl	24dc0 <printf_parse@@Base+0x58e0>
   29eb8:	cbnz	w0, 2a218 <printf_parse@@Base+0xad38>
   29ebc:	cmp	x21, x26
   29ec0:	ldr	x24, [sp, #600]
   29ec4:	b.gt	2a28c <printf_parse@@Base+0xadac>
   29ec8:	str	wzr, [sp, #336]
   29ecc:	ldr	x0, [x20, #24]
   29ed0:	ldr	x1, [x24, x21, lsl #3]
   29ed4:	ldr	x0, [x0, x23, lsl #3]
   29ed8:	ldr	x3, [x20, #48]
   29edc:	add	x0, x0, x0, lsl #1
   29ee0:	add	x3, x3, x0, lsl #3
   29ee4:	cbz	x1, 2a234 <printf_parse@@Base+0xad54>
   29ee8:	ldr	x1, [x1, #80]
   29eec:	mov	x2, x3
   29ef0:	mov	x0, x27
   29ef4:	bl	27f08 <printf_parse@@Base+0x8a28>
   29ef8:	str	w0, [sp, #336]
   29efc:	cbnz	w0, 2a218 <printf_parse@@Base+0xad38>
   29f00:	ldr	w2, [sp, #576]
   29f04:	sub	x1, x21, #0x1
   29f08:	mov	x0, x25
   29f0c:	bl	21a08 <printf_parse@@Base+0x2528>
   29f10:	mov	w3, w0
   29f14:	ldr	x0, [sp, #200]
   29f18:	mov	x1, x20
   29f1c:	ldr	x23, [sp, #600]
   29f20:	mov	x2, x27
   29f24:	bl	263d8 <printf_parse@@Base+0x6ef8>
   29f28:	str	x0, [x23, x21, lsl #3]
   29f2c:	ldr	x0, [sp, #376]
   29f30:	bl	aa50 <free@plt>
   29f34:	ldr	x1, [sp, #600]
   29f38:	ldr	x0, [x1, x21, lsl #3]
   29f3c:	cbz	x0, 2a278 <printf_parse@@Base+0xad98>
   29f40:	ldr	x24, [x19, #16]
   29f44:	ldr	x21, [sp, #488]
   29f48:	add	x22, x22, #0x1
   29f4c:	cmp	x22, x24
   29f50:	b.lt	29e08 <printf_parse@@Base+0xa928>  // b.tstop
   29f54:	mov	x28, x21
   29f58:	ldr	w24, [sp, #288]
   29f5c:	ldp	x26, x21, [sp, #272]
   29f60:	str	wzr, [sp, #324]
   29f64:	b	29d0c <printf_parse@@Base+0xa82c>
   29f68:	ldr	w0, [sp, #324]
   29f6c:	ldr	x28, [sp, #600]
   29f70:	cbnz	w0, 2a320 <printf_parse@@Base+0xae40>
   29f74:	cbz	x28, 29fc0 <printf_parse@@Base+0xaae0>
   29f78:	ldr	w0, [sp, #220]
   29f7c:	ldr	w1, [sp, #120]
   29f80:	eor	w0, w0, #0x1
   29f84:	tst	w0, w1
   29f88:	b.ne	29fc0 <printf_parse@@Base+0xaae0>  // b.any
   29f8c:	mov	w1, #0x0                   	// #0
   29f90:	ldr	x0, [sp, #488]
   29f94:	ldr	x2, [sp, #608]
   29f98:	b	29fa8 <printf_parse@@Base+0xaac8>
   29f9c:	ldr	x3, [x28, x0, lsl #3]
   29fa0:	mov	w1, #0x1                   	// #1
   29fa4:	cbnz	x3, 2a194 <printf_parse@@Base+0xacb4>
   29fa8:	mov	x3, x0
   29fac:	add	x0, x0, #0x1
   29fb0:	cmp	x2, x0
   29fb4:	b.ge	29f9c <printf_parse@@Base+0xaabc>  // b.tcont
   29fb8:	cbz	w1, 29fc0 <printf_parse@@Base+0xaae0>
   29fbc:	str	x3, [sp, #488]
   29fc0:	ldr	x1, [sp, #168]
   29fc4:	cbz	x1, 29fd8 <printf_parse@@Base+0xaaf8>
   29fc8:	ldr	x0, [x1]
   29fcc:	ldr	x2, [sp, #112]
   29fd0:	add	x0, x0, x2
   29fd4:	str	x0, [x1]
   29fd8:	cmn	x26, #0x1
   29fdc:	b.eq	2a114 <printf_parse@@Base+0xac34>  // b.none
   29fe0:	cmn	x26, #0x2
   29fe4:	b.eq	2a714 <printf_parse@@Base+0xb234>  // b.none
   29fe8:	ldr	x0, [sp, #136]
   29fec:	str	x26, [sp, #584]
   29ff0:	ldrb	w0, [x0, #56]
   29ff4:	tbnz	w0, #4, 2a364 <printf_parse@@Base+0xae84>
   29ff8:	ldr	x1, [sp, #144]
   29ffc:	cmp	x1, #0x1
   2a000:	b.ls	2a660 <printf_parse@@Base+0xb180>  // b.plast
   2a004:	ldr	x28, [sp, #600]
   2a008:	mov	x3, x26
   2a00c:	mov	x0, x25
   2a010:	ldr	x1, [x28, x26, lsl #3]
   2a014:	add	x2, x1, #0x18
   2a018:	ldr	x1, [x1, #16]
   2a01c:	bl	22380 <printf_parse@@Base+0x2ea0>
   2a020:	mov	x20, x0
   2a024:	ldr	x1, [sp, #240]
   2a028:	ldrb	w1, [x1, #176]
   2a02c:	str	x0, [sp, #592]
   2a030:	tbnz	w1, #0, 2a044 <printf_parse@@Base+0xab64>
   2a034:	ldr	x0, [sp, #240]
   2a038:	ldr	x0, [x0, #152]
   2a03c:	cbz	x0, 2aa20 <printf_parse@@Base+0xb540>
   2a040:	ldr	x20, [sp, #592]
   2a044:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
   2a048:	cmp	x26, x0
   2a04c:	ldr	x23, [sp, #568]
   2a050:	b.hi	2a320 <printf_parse@@Base+0xae40>  // b.pmore
   2a054:	add	x21, x26, #0x1
   2a058:	lsl	x19, x21, #3
   2a05c:	mov	x0, x19
   2a060:	bl	a5f0 <malloc@plt>
   2a064:	mov	x24, x0
   2a068:	cbz	x0, 2a320 <printf_parse@@Base+0xae40>
   2a06c:	ldr	x0, [x23, #152]
   2a070:	cbz	x0, 2a40c <printf_parse@@Base+0xaf2c>
   2a074:	mov	x0, x19
   2a078:	bl	a5f0 <malloc@plt>
   2a07c:	mov	x22, x0
   2a080:	mov	x27, x0
   2a084:	cbz	x0, 2a8b8 <printf_parse@@Base+0xb3d8>
   2a088:	add	x28, sp, #0x168
   2a08c:	lsl	x2, x21, #3
   2a090:	mov	w1, #0x0                   	// #0
   2a094:	mov	x0, x22
   2a098:	bl	a6f0 <memset@plt>
   2a09c:	stp	x24, x22, [sp, #360]
   2a0a0:	mov	x1, x28
   2a0a4:	mov	x0, x25
   2a0a8:	stp	x20, x26, [sp, #376]
   2a0ac:	stp	xzr, xzr, [x28, #32]
   2a0b0:	str	xzr, [x28, #48]
   2a0b4:	bl	29290 <printf_parse@@Base+0x9db0>
   2a0b8:	mov	w19, w0
   2a0bc:	ldr	x0, [sp, #408]
   2a0c0:	bl	aa50 <free@plt>
   2a0c4:	cbnz	w19, 2a3b0 <printf_parse@@Base+0xaed0>
   2a0c8:	ldr	x0, [x24]
   2a0cc:	ldr	x1, [x22]
   2a0d0:	cbnz	x0, 2a8dc <printf_parse@@Base+0xb3fc>
   2a0d4:	cbnz	x1, 2a8dc <printf_parse@@Base+0xb3fc>
   2a0d8:	sub	x26, x26, #0x1
   2a0dc:	cmn	x26, #0x1
   2a0e0:	b.eq	2a104 <printf_parse@@Base+0xac24>  // b.none
   2a0e4:	ldr	x1, [sp, #600]
   2a0e8:	ldr	x2, [x1, x26, lsl #3]
   2a0ec:	cbz	x2, 2a0f8 <printf_parse@@Base+0xac18>
   2a0f0:	ldrb	w0, [x2, #104]
   2a0f4:	tbnz	w0, #4, 2a72c <printf_parse@@Base+0xb24c>
   2a0f8:	sub	x26, x26, #0x1
   2a0fc:	cmn	x26, #0x1
   2a100:	b.ne	2a0e8 <printf_parse@@Base+0xac08>  // b.any
   2a104:	mov	x0, x24
   2a108:	bl	aa50 <free@plt>
   2a10c:	mov	x0, x22
   2a110:	bl	aa50 <free@plt>
   2a114:	mov	x0, x25
   2a118:	bl	214b8 <printf_parse@@Base+0x1fd8>
   2a11c:	ldr	x19, [sp, #328]
   2a120:	ldr	x0, [sp, #248]
   2a124:	add	x19, x19, x0
   2a128:	str	x19, [sp, #328]
   2a12c:	ldr	x0, [sp, #224]
   2a130:	cmp	x19, x0
   2a134:	ldr	x0, [sp, #160]
   2a138:	ccmp	x19, x0, #0x0, ge  // ge = tcont
   2a13c:	b.gt	29b90 <printf_parse@@Base+0xa6b0>
   2a140:	ldr	w0, [sp, #216]
   2a144:	cmp	w0, #0x7
   2a148:	b.ne	29a60 <printf_parse@@Base+0xa580>  // b.any
   2a14c:	ldr	x0, [sp, #160]
   2a150:	mov	w2, #0x0                   	// #0
   2a154:	cmp	x19, x0
   2a158:	mov	x0, x19
   2a15c:	b.ge	29bfc <printf_parse@@Base+0xa71c>  // b.tcont
   2a160:	ldp	x3, x6, [sp, #152]
   2a164:	ldr	x5, [sp, #232]
   2a168:	ldr	x4, [sp, #256]
   2a16c:	nop
   2a170:	ldrb	w1, [x5, x0]
   2a174:	ldrb	w1, [x4, x1]
   2a178:	ldrb	w1, [x3, x1]
   2a17c:	cbnz	w1, 2a7a0 <printf_parse@@Base+0xb2c0>
   2a180:	add	x0, x0, #0x1
   2a184:	mov	w2, #0x1                   	// #1
   2a188:	cmp	x0, x6
   2a18c:	b.ne	2a170 <printf_parse@@Base+0xac90>  // b.any
   2a190:	b	29b5c <printf_parse@@Base+0xa67c>
   2a194:	str	x0, [sp, #488]
   2a198:	mov	x2, #0x0                   	// #0
   2a19c:	ldr	x0, [sp, #128]
   2a1a0:	mov	x1, x25
   2a1a4:	bl	287f8 <printf_parse@@Base+0x9318>
   2a1a8:	ldr	w2, [sp, #324]
   2a1ac:	cbnz	w2, 2a1bc <printf_parse@@Base+0xacdc>
   2a1b0:	cbnz	x0, 2a7d0 <printf_parse@@Base+0xb2f0>
   2a1b4:	ldr	x28, [sp, #600]
   2a1b8:	b	29f8c <printf_parse@@Base+0xaaac>
   2a1bc:	mov	x20, x0
   2a1c0:	cbnz	x0, 29d48 <printf_parse@@Base+0xa868>
   2a1c4:	b	29fc0 <printf_parse@@Base+0xaae0>
   2a1c8:	ldr	x1, [x20, #16]
   2a1cc:	mov	x3, x28
   2a1d0:	add	x2, x20, #0x18
   2a1d4:	mov	x0, x25
   2a1d8:	bl	22380 <printf_parse@@Base+0x2ea0>
   2a1dc:	cbz	x0, 29d88 <printf_parse@@Base+0xa8a8>
   2a1e0:	b	29d70 <printf_parse@@Base+0xa890>
   2a1e4:	tbz	w2, #3, 29e4c <printf_parse@@Base+0xa96c>
   2a1e8:	tbz	w0, #0, 29e4c <printf_parse@@Base+0xa96c>
   2a1ec:	b	29f48 <printf_parse@@Base+0xaa68>
   2a1f0:	ldr	x0, [sp, #464]
   2a1f4:	cmp	x21, x0
   2a1f8:	b.lt	29ebc <printf_parse@@Base+0xa9dc>  // b.tstop
   2a1fc:	ldr	x1, [sp, #504]
   2a200:	cmp	x0, x1
   2a204:	b.ge	29ebc <printf_parse@@Base+0xa9dc>  // b.tcont
   2a208:	add	w1, w21, #0x1
   2a20c:	mov	x0, x25
   2a210:	bl	24dc0 <printf_parse@@Base+0x58e0>
   2a214:	cbz	w0, 29ebc <printf_parse@@Base+0xa9dc>
   2a218:	ldp	x26, x21, [sp, #272]
   2a21c:	ldr	w24, [sp, #288]
   2a220:	ldr	x1, [sp, #600]
   2a224:	str	w0, [sp, #324]
   2a228:	cbz	x1, 2a400 <printf_parse@@Base+0xaf20>
   2a22c:	mov	x20, #0x0                   	// #0
   2a230:	b	29d30 <printf_parse@@Base+0xa850>
   2a234:	ldp	x6, x7, [x3]
   2a238:	stp	x6, x7, [x27]
   2a23c:	ldr	w2, [sp, #576]
   2a240:	ldr	x3, [x3, #16]
   2a244:	sub	x1, x21, #0x1
   2a248:	mov	x0, x25
   2a24c:	str	x3, [x27, #16]
   2a250:	bl	21a08 <printf_parse@@Base+0x2528>
   2a254:	mov	w3, w0
   2a258:	ldr	x0, [sp, #200]
   2a25c:	mov	x1, x20
   2a260:	mov	x2, x27
   2a264:	bl	263d8 <printf_parse@@Base+0x6ef8>
   2a268:	str	x0, [x24, x21, lsl #3]
   2a26c:	ldr	x1, [sp, #600]
   2a270:	ldr	x0, [x1, x21, lsl #3]
   2a274:	cbnz	x0, 29f40 <printf_parse@@Base+0xaa60>
   2a278:	ldr	w0, [sp, #336]
   2a27c:	cbz	w0, 29f40 <printf_parse@@Base+0xaa60>
   2a280:	ldr	w24, [sp, #288]
   2a284:	ldp	x26, x21, [sp, #272]
   2a288:	b	2a224 <printf_parse@@Base+0xad44>
   2a28c:	sub	x2, x21, x26
   2a290:	add	x0, x26, #0x1
   2a294:	mov	w1, #0x0                   	// #0
   2a298:	add	x0, x24, x0, lsl #3
   2a29c:	lsl	x2, x2, #3
   2a2a0:	bl	a6f0 <memset@plt>
   2a2a4:	str	wzr, [sp, #336]
   2a2a8:	str	x21, [sp, #608]
   2a2ac:	ldr	x24, [sp, #600]
   2a2b0:	b	29ecc <printf_parse@@Base+0xa9ec>
   2a2b4:	ldr	x22, [x19, #96]
   2a2b8:	cbz	x22, 2a3dc <printf_parse@@Base+0xaefc>
   2a2bc:	ldr	w2, [sp, #576]
   2a2c0:	mov	x0, x25
   2a2c4:	ldr	x1, [sp, #488]
   2a2c8:	sub	x1, x1, #0x1
   2a2cc:	bl	21a08 <printf_parse@@Base+0x2528>
   2a2d0:	and	x1, x20, #0xff
   2a2d4:	tbz	w0, #0, 2a35c <printf_parse@@Base+0xae7c>
   2a2d8:	add	x1, x1, #0x100
   2a2dc:	ldr	x20, [x22, x1, lsl #3]
   2a2e0:	b	29d28 <printf_parse@@Base+0xa848>
   2a2e4:	ldr	x1, [sp, #504]
   2a2e8:	cmp	x0, x1
   2a2ec:	b.ge	29d04 <printf_parse@@Base+0xa824>  // b.tcont
   2a2f0:	b	29db4 <printf_parse@@Base+0xa8d4>
   2a2f4:	mov	w0, #0x1                   	// #1
   2a2f8:	str	w0, [sp, #184]
   2a2fc:	ldr	w0, [sp, #184]
   2a300:	ldp	x29, x30, [sp]
   2a304:	ldp	x19, x20, [sp, #16]
   2a308:	ldp	x21, x22, [sp, #32]
   2a30c:	ldp	x25, x26, [sp, #64]
   2a310:	ldp	x27, x28, [sp, #80]
   2a314:	ldr	d8, [sp, #96]
   2a318:	add	sp, sp, #0x2a0
   2a31c:	ret
   2a320:	ldr	x27, [sp, #240]
   2a324:	mov	w0, #0xc                   	// #12
   2a328:	ldp	x23, x24, [sp, #48]
   2a32c:	str	w0, [sp, #184]
   2a330:	mov	x0, x28
   2a334:	bl	aa50 <free@plt>
   2a338:	ldr	x0, [x27, #152]
   2a33c:	cbnz	x0, 29bb4 <printf_parse@@Base+0xa6d4>
   2a340:	ldr	x0, [sp, #432]
   2a344:	bl	aa50 <free@plt>
   2a348:	ldr	x0, [sp, #440]
   2a34c:	bl	aa50 <free@plt>
   2a350:	ldrb	w0, [sp, #555]
   2a354:	cbz	w0, 2a2fc <printf_parse@@Base+0xae1c>
   2a358:	b	29be4 <printf_parse@@Base+0xa704>
   2a35c:	ldr	x20, [x22, x20, lsl #3]
   2a360:	b	29d28 <printf_parse@@Base+0xa848>
   2a364:	ldr	x0, [sp, #240]
   2a368:	ldr	x0, [x0, #152]
   2a36c:	cbnz	x0, 2a378 <printf_parse@@Base+0xae98>
   2a370:	ldr	x27, [sp, #240]
   2a374:	b	2a460 <printf_parse@@Base+0xaf80>
   2a378:	ldr	x28, [sp, #600]
   2a37c:	mov	x3, x26
   2a380:	mov	x0, x25
   2a384:	ldr	x1, [x28, x26, lsl #3]
   2a388:	add	x2, x1, #0x18
   2a38c:	ldr	x1, [x1, #16]
   2a390:	bl	22380 <printf_parse@@Base+0x2ea0>
   2a394:	str	x0, [sp, #592]
   2a398:	b	2a040 <printf_parse@@Base+0xab60>
   2a39c:	mov	x27, #0x0                   	// #0
   2a3a0:	mov	w19, w0
   2a3a4:	mov	x0, x22
   2a3a8:	bl	aa50 <free@plt>
   2a3ac:	nop
   2a3b0:	mov	x0, x24
   2a3b4:	bl	aa50 <free@plt>
   2a3b8:	mov	x0, x27
   2a3bc:	bl	aa50 <free@plt>
   2a3c0:	cmp	w19, #0x1
   2a3c4:	b.eq	2a114 <printf_parse@@Base+0xac34>  // b.none
   2a3c8:	str	w19, [sp, #184]
   2a3cc:	ldp	x23, x24, [sp, #48]
   2a3d0:	ldr	x27, [sp, #240]
   2a3d4:	ldr	x28, [sp, #600]
   2a3d8:	b	2a330 <printf_parse@@Base+0xae50>
   2a3dc:	ldr	x0, [sp, #568]
   2a3e0:	mov	x1, x19
   2a3e4:	bl	270c8 <printf_parse@@Base+0x7be8>
   2a3e8:	tst	w0, #0xff
   2a3ec:	b.ne	29d1c <printf_parse@@Base+0xa83c>  // b.any
   2a3f0:	ldr	x0, [sp, #600]
   2a3f4:	mov	w1, #0xc                   	// #12
   2a3f8:	str	w1, [sp, #324]
   2a3fc:	cbnz	x0, 2a22c <printf_parse@@Base+0xad4c>
   2a400:	mov	x28, #0x0                   	// #0
   2a404:	ldr	x27, [sp, #240]
   2a408:	b	2a324 <printf_parse@@Base+0xae44>
   2a40c:	add	x2, sp, #0x200
   2a410:	stp	x24, xzr, [sp, #360]
   2a414:	add	x28, sp, #0x168
   2a418:	stp	x20, x26, [sp, #376]
   2a41c:	mov	x1, x28
   2a420:	mov	x0, x25
   2a424:	stp	xzr, xzr, [x2, #-120]
   2a428:	str	xzr, [sp, #408]
   2a42c:	bl	29290 <printf_parse@@Base+0x9db0>
   2a430:	mov	w19, w0
   2a434:	ldr	x0, [sp, #408]
   2a438:	bl	aa50 <free@plt>
   2a43c:	cbnz	w19, 2a8d4 <printf_parse@@Base+0xb3f4>
   2a440:	ldr	x0, [x24]
   2a444:	cbz	x0, 2a7f0 <printf_parse@@Base+0xb310>
   2a448:	ldr	x27, [sp, #240]
   2a44c:	ldr	x0, [sp, #600]
   2a450:	bl	aa50 <free@plt>
   2a454:	str	x26, [sp, #584]
   2a458:	str	x20, [sp, #592]
   2a45c:	str	x24, [sp, #600]
   2a460:	ldr	x0, [sp, #144]
   2a464:	cbz	x0, 2a678 <printf_parse@@Base+0xb198>
   2a468:	cmp	x0, #0x1
   2a46c:	b.ls	2a494 <printf_parse@@Base+0xafb4>  // b.plast
   2a470:	ldr	x1, [sp, #304]
   2a474:	mov	x2, x0
   2a478:	mvni	v0.4s, #0x0
   2a47c:	add	x0, x1, #0x10
   2a480:	add	x1, x1, x2, lsl #4
   2a484:	nop
   2a488:	str	q0, [x0], #16
   2a48c:	cmp	x1, x0
   2a490:	b.ne	2a488 <printf_parse@@Base+0xafa8>  // b.any
   2a494:	ldr	x0, [sp, #136]
   2a498:	ldrb	w0, [x0, #56]
   2a49c:	ldr	x1, [sp, #304]
   2a4a0:	tst	x0, #0x10
   2a4a4:	ldr	x0, [sp, #144]
   2a4a8:	stp	xzr, x26, [x1]
   2a4ac:	mov	x1, #0x0                   	// #0
   2a4b0:	ccmp	x0, #0x1, #0x4, eq  // eq = none
   2a4b4:	b.ne	2a984 <printf_parse@@Base+0xb4a4>  // b.any
   2a4b8:	ldrb	w3, [sp, #556]
   2a4bc:	mov	x2, #0x0                   	// #0
   2a4c0:	ldr	x0, [sp, #304]
   2a4c4:	ldr	x4, [sp, #328]
   2a4c8:	ldr	x7, [sp, #440]
   2a4cc:	ldp	x5, x6, [sp, #464]
   2a4d0:	cbnz	w3, 2a9c0 <printf_parse@@Base+0xb4e0>
   2a4d4:	ldr	x5, [sp, #144]
   2a4d8:	b	2a4e0 <printf_parse@@Base+0xb000>
   2a4dc:	ldr	x1, [x0]
   2a4e0:	cmn	x1, #0x1
   2a4e4:	b.eq	2a4fc <printf_parse@@Base+0xb01c>  // b.none
   2a4e8:	ldr	x3, [x0, #8]
   2a4ec:	add	x1, x4, x1
   2a4f0:	str	x1, [x0]
   2a4f4:	add	x1, x4, x3
   2a4f8:	str	x1, [x0, #8]
   2a4fc:	add	x2, x2, #0x1
   2a500:	add	x0, x0, #0x10
   2a504:	cmp	x5, x2
   2a508:	b.ne	2a4dc <printf_parse@@Base+0xaffc>  // b.any
   2a50c:	ldr	x0, [sp, #264]
   2a510:	cmp	x0, #0x0
   2a514:	b.le	2a53c <printf_parse@@Base+0xb05c>
   2a518:	ldr	x0, [sp, #144]
   2a51c:	ldr	x1, [sp, #304]
   2a520:	mvni	v0.4s, #0x0
   2a524:	add	x0, x1, x0, lsl #4
   2a528:	ldr	x1, [sp, #264]
   2a52c:	add	x1, x0, x1, lsl #4
   2a530:	str	q0, [x0], #16
   2a534:	cmp	x1, x0
   2a538:	b.ne	2a530 <printf_parse@@Base+0xb050>  // b.any
   2a53c:	ldr	x3, [x27, #224]
   2a540:	ldr	x28, [sp, #600]
   2a544:	cbz	x3, 2a5a0 <printf_parse@@Base+0xb0c0>
   2a548:	ldr	x0, [sp, #144]
   2a54c:	cmp	x0, #0x1
   2a550:	b.ls	2a5a0 <printf_parse@@Base+0xb0c0>  // b.plast
   2a554:	ldr	x5, [sp, #304]
   2a558:	sub	x4, x0, #0x1
   2a55c:	mov	x0, #0x0                   	// #0
   2a560:	add	x2, x5, #0x10
   2a564:	nop
   2a568:	ldr	x1, [x3, x0, lsl #3]
   2a56c:	cmp	x1, x0
   2a570:	b.eq	2a590 <printf_parse@@Base+0xb0b0>  // b.none
   2a574:	add	x1, x5, x1, lsl #4
   2a578:	ldr	x1, [x1, #16]
   2a57c:	str	x1, [x2]
   2a580:	ldr	x1, [x3, x0, lsl #3]
   2a584:	add	x1, x5, x1, lsl #4
   2a588:	ldr	x1, [x1, #24]
   2a58c:	str	x1, [x2, #8]
   2a590:	add	x0, x0, #0x1
   2a594:	add	x2, x2, #0x10
   2a598:	cmp	x4, x0
   2a59c:	b.ne	2a568 <printf_parse@@Base+0xb088>  // b.any
   2a5a0:	ldp	x23, x24, [sp, #48]
   2a5a4:	b	2a330 <printf_parse@@Base+0xae50>
   2a5a8:	stp	x23, x24, [sp, #48]
   2a5ac:	cbz	x22, 29870 <printf_parse@@Base+0xa390>
   2a5b0:	ldr	x0, [sp, #424]
   2a5b4:	mov	x1, x20
   2a5b8:	bl	a7e0 <realloc@plt>
   2a5bc:	cbz	x0, 2a718 <printf_parse@@Base+0xb238>
   2a5c0:	ldrb	w1, [x27, #176]
   2a5c4:	add	x2, x27, #0xb8
   2a5c8:	ldrb	w3, [sp, #555]
   2a5cc:	str	x0, [sp, #424]
   2a5d0:	ubfx	x0, x1, #4, #1
   2a5d4:	str	x20, [sp, #480]
   2a5d8:	str	x2, [sp, #544]
   2a5dc:	strb	w0, [sp, #558]
   2a5e0:	cbnz	w3, 298a0 <printf_parse@@Base+0xa3c0>
   2a5e4:	b	29888 <printf_parse@@Base+0xa3a8>
   2a5e8:	ldrb	w0, [x19, #104]
   2a5ec:	ldr	w24, [sp, #312]
   2a5f0:	b	29cc0 <printf_parse@@Base+0xa7e0>
   2a5f4:	ldr	x0, [sp, #224]
   2a5f8:	cmp	x19, x0
   2a5fc:	b.lt	29b90 <printf_parse@@Base+0xa6b0>  // b.tstop
   2a600:	ldr	x1, [sp, #256]
   2a604:	mov	x0, x19
   2a608:	mov	w2, #0x0                   	// #0
   2a60c:	cbz	x1, 2a684 <printf_parse@@Base+0xb1a4>
   2a610:	mov	x4, x1
   2a614:	ldr	x3, [sp, #152]
   2a618:	ldr	x5, [sp, #208]
   2a61c:	ldp	x6, x7, [sp, #224]
   2a620:	b	2a634 <printf_parse@@Base+0xb154>
   2a624:	sub	x0, x0, #0x1
   2a628:	mov	w2, #0x1                   	// #1
   2a62c:	cmp	x0, x6
   2a630:	b.lt	2a74c <printf_parse@@Base+0xb26c>  // b.tstop
   2a634:	cmp	x5, x0
   2a638:	mov	x1, #0x0                   	// #0
   2a63c:	b.le	2a644 <printf_parse@@Base+0xb164>
   2a640:	ldrb	w1, [x7, x0]
   2a644:	ldrb	w1, [x4, x1]
   2a648:	ldrb	w1, [x3, x1]
   2a64c:	cbz	w1, 2a624 <printf_parse@@Base+0xb144>
   2a650:	cbz	w2, 29c08 <printf_parse@@Base+0xa728>
   2a654:	mov	x19, x0
   2a658:	str	x0, [sp, #328]
   2a65c:	b	29c08 <printf_parse@@Base+0xa728>
   2a660:	ldr	x27, [sp, #240]
   2a664:	ldr	x1, [x27, #152]
   2a668:	cbnz	x1, 2a378 <printf_parse@@Base+0xae98>
   2a66c:	ldr	x1, [sp, #144]
   2a670:	cbnz	x1, 2a49c <printf_parse@@Base+0xafbc>
   2a674:	nop
   2a678:	ldp	x23, x24, [sp, #48]
   2a67c:	ldr	x28, [sp, #600]
   2a680:	b	2a330 <printf_parse@@Base+0xae50>
   2a684:	ldr	x3, [sp, #152]
   2a688:	ldr	x4, [sp, #208]
   2a68c:	ldp	x5, x6, [sp, #224]
   2a690:	b	2a6a4 <printf_parse@@Base+0xb1c4>
   2a694:	sub	x0, x0, #0x1
   2a698:	mov	w2, #0x1                   	// #1
   2a69c:	cmp	x5, x0
   2a6a0:	b.gt	2a74c <printf_parse@@Base+0xb26c>
   2a6a4:	cmp	x4, x0
   2a6a8:	mov	x1, #0x0                   	// #0
   2a6ac:	b.le	2a6b4 <printf_parse@@Base+0xb1d4>
   2a6b0:	ldrb	w1, [x6, x0]
   2a6b4:	ldrb	w1, [x3, x1]
   2a6b8:	cbz	w1, 2a694 <printf_parse@@Base+0xb1b4>
   2a6bc:	b	2a650 <printf_parse@@Base+0xb170>
   2a6c0:	ldrb	w0, [x27, #176]
   2a6c4:	tbnz	w0, #1, 29940 <printf_parse@@Base+0xa460>
   2a6c8:	mov	x28, #0x0                   	// #0
   2a6cc:	str	xzr, [sp, #600]
   2a6d0:	b	29964 <printf_parse@@Base+0xa484>
   2a6d4:	ldr	x19, [x20, #80]
   2a6d8:	cbnz	x19, 29ca0 <printf_parse@@Base+0xa7c0>
   2a6dc:	ldr	w0, [sp, #324]
   2a6e0:	str	w0, [sp, #184]
   2a6e4:	cmp	w0, #0xc
   2a6e8:	ldr	x27, [sp, #240]
   2a6ec:	b.eq	2a678 <printf_parse@@Base+0xb198>  // b.none
   2a6f0:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   2a6f4:	add	x3, x3, #0x410
   2a6f8:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2a6fc:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   2a700:	add	x3, x3, #0x30
   2a704:	add	x1, x1, #0x138
   2a708:	add	x0, x0, #0x1b8
   2a70c:	mov	w2, #0x435                 	// #1077
   2a710:	bl	aea0 <__assert_fail@plt>
   2a714:	ldr	x27, [sp, #240]
   2a718:	mov	w0, #0xc                   	// #12
   2a71c:	str	w0, [sp, #184]
   2a720:	ldp	x23, x24, [sp, #48]
   2a724:	ldr	x28, [sp, #600]
   2a728:	b	2a330 <printf_parse@@Base+0xae50>
   2a72c:	ldr	x1, [x2, #16]
   2a730:	mov	x3, x26
   2a734:	mov	x0, x25
   2a738:	add	x2, x2, #0x18
   2a73c:	add	x21, x26, #0x1
   2a740:	bl	22380 <printf_parse@@Base+0x2ea0>
   2a744:	mov	x20, x0
   2a748:	b	2a08c <printf_parse@@Base+0xabac>
   2a74c:	mov	w1, #0x1                   	// #1
   2a750:	str	w1, [sp, #184]
   2a754:	str	x0, [sp, #328]
   2a758:	ldr	x27, [sp, #240]
   2a75c:	b	2a678 <printf_parse@@Base+0xb198>
   2a760:	ldp	x23, x24, [sp, #48]
   2a764:	ldr	x27, [sp, #240]
   2a768:	ldr	x28, [sp, #600]
   2a76c:	b	2a330 <printf_parse@@Base+0xae50>
   2a770:	cmp	w0, #0xc
   2a774:	ldr	x27, [sp, #240]
   2a778:	b.eq	2a71c <printf_parse@@Base+0xb23c>  // b.none
   2a77c:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   2a780:	add	x3, x3, #0x410
   2a784:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2a788:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   2a78c:	add	x3, x3, #0x30
   2a790:	add	x1, x1, #0x138
   2a794:	add	x0, x0, #0x1b8
   2a798:	mov	w2, #0x46c                 	// #1132
   2a79c:	bl	aea0 <__assert_fail@plt>
   2a7a0:	cbz	w2, 29c08 <printf_parse@@Base+0xa728>
   2a7a4:	mov	x19, x0
   2a7a8:	str	x0, [sp, #328]
   2a7ac:	b	29bfc <printf_parse@@Base+0xa71c>
   2a7b0:	ldrsb	w0, [x19, #104]
   2a7b4:	tbnz	w0, #31, 2a818 <printf_parse@@Base+0xb338>
   2a7b8:	mov	x0, #0x1                   	// #1
   2a7bc:	str	x0, [sp, #120]
   2a7c0:	ldr	w0, [sp, #188]
   2a7c4:	ldr	x26, [sp, #112]
   2a7c8:	cbnz	w0, 29ccc <printf_parse@@Base+0xa7ec>
   2a7cc:	b	29fd8 <printf_parse@@Base+0xaaf8>
   2a7d0:	mov	x20, x0
   2a7d4:	b	29d48 <printf_parse@@Base+0xa868>
   2a7d8:	mov	w0, #0xc                   	// #12
   2a7dc:	mov	x28, #0x0                   	// #0
   2a7e0:	str	w0, [sp, #184]
   2a7e4:	b	2a330 <printf_parse@@Base+0xae50>
   2a7e8:	ldr	x19, [x20, #88]
   2a7ec:	b	2a6d8 <printf_parse@@Base+0xb1f8>
   2a7f0:	mov	x0, x24
   2a7f4:	bl	aa50 <free@plt>
   2a7f8:	b	2a114 <printf_parse@@Base+0xac34>
   2a7fc:	mov	w3, w0
   2a800:	mov	x1, x20
   2a804:	ldr	x2, [x19, #80]
   2a808:	ldr	x0, [sp, #128]
   2a80c:	bl	263d8 <printf_parse@@Base+0x6ef8>
   2a810:	mov	x19, x0
   2a814:	b	2a6d8 <printf_parse@@Base+0xb1f8>
   2a818:	ldr	x1, [x19, #16]
   2a81c:	add	x2, x19, #0x18
   2a820:	ldr	x3, [sp, #112]
   2a824:	mov	x0, x25
   2a828:	bl	22380 <printf_parse@@Base+0x2ea0>
   2a82c:	str	x0, [sp, #120]
   2a830:	cbz	x0, 29ccc <printf_parse@@Base+0xa7ec>
   2a834:	b	2a7b8 <printf_parse@@Base+0xb2d8>
   2a838:	ldr	x0, [sp, #232]
   2a83c:	ldrb	w0, [x0, x19]
   2a840:	b	29b78 <printf_parse@@Base+0xa698>
   2a844:	add	x20, x19, #0x10
   2a848:	add	x21, x19, #0x18
   2a84c:	mov	x1, x20
   2a850:	mov	x2, x21
   2a854:	mov	x0, x25
   2a858:	mov	x3, #0x0                   	// #0
   2a85c:	bl	21590 <printf_parse@@Base+0x20b0>
   2a860:	str	w0, [sp, #324]
   2a864:	cbnz	w0, 2a96c <printf_parse@@Base+0xb48c>
   2a868:	ldrb	w0, [x19, #104]
   2a86c:	tbnz	w0, #6, 2a878 <printf_parse@@Base+0xb398>
   2a870:	mov	w24, #0x0                   	// #0
   2a874:	b	29cc0 <printf_parse@@Base+0xa7e0>
   2a878:	mov	x2, x21
   2a87c:	mov	x1, x20
   2a880:	mov	x0, x25
   2a884:	bl	280e0 <printf_parse@@Base+0x8c00>
   2a888:	str	w0, [sp, #324]
   2a88c:	cbnz	w0, 2a96c <printf_parse@@Base+0xb48c>
   2a890:	ldrb	w0, [x19, #104]
   2a894:	mov	w24, #0x0                   	// #0
   2a898:	b	29cc0 <printf_parse@@Base+0xa7e0>
   2a89c:	ldr	x19, [x20, #96]
   2a8a0:	b	2a6d8 <printf_parse@@Base+0xb1f8>
   2a8a4:	str	w0, [sp, #184]
   2a8a8:	ldp	x23, x24, [sp, #48]
   2a8ac:	ldr	x27, [sp, #240]
   2a8b0:	ldr	x28, [sp, #600]
   2a8b4:	b	2a330 <printf_parse@@Base+0xae50>
   2a8b8:	mov	w1, #0xc                   	// #12
   2a8bc:	mov	x0, x24
   2a8c0:	str	w1, [sp, #184]
   2a8c4:	ldr	x27, [sp, #240]
   2a8c8:	bl	aa50 <free@plt>
   2a8cc:	ldp	x23, x24, [sp, #48]
   2a8d0:	b	2a330 <printf_parse@@Base+0xae50>
   2a8d4:	mov	x27, #0x0                   	// #0
   2a8d8:	b	2a3b0 <printf_parse@@Base+0xaed0>
   2a8dc:	mov	x27, #0x0                   	// #0
   2a8e0:	ldr	x28, [sp, #128]
   2a8e4:	ldr	x19, [sp, #200]
   2a8e8:	b	2a93c <printf_parse@@Base+0xb45c>
   2a8ec:	ldr	x2, [x22, x27, lsl #3]
   2a8f0:	cbz	x2, 2a930 <printf_parse@@Base+0xb450>
   2a8f4:	add	x2, x2, #0x8
   2a8f8:	add	x1, x1, #0x8
   2a8fc:	mov	x0, x19
   2a900:	bl	27f08 <printf_parse@@Base+0x8a28>
   2a904:	str	w0, [sp, #324]
   2a908:	cbnz	w0, 2a39c <printf_parse@@Base+0xaebc>
   2a90c:	mov	x2, x19
   2a910:	mov	x1, x23
   2a914:	mov	x0, x28
   2a918:	bl	25cc8 <printf_parse@@Base+0x67e8>
   2a91c:	str	x0, [x24, x27, lsl #3]
   2a920:	ldr	x0, [sp, #352]
   2a924:	bl	aa50 <free@plt>
   2a928:	ldr	w0, [sp, #324]
   2a92c:	cbnz	w0, 2a39c <printf_parse@@Base+0xaebc>
   2a930:	add	x27, x27, #0x1
   2a934:	cmp	x27, x21
   2a938:	b.eq	2a974 <printf_parse@@Base+0xb494>  // b.none
   2a93c:	ldr	x1, [x24, x27, lsl #3]
   2a940:	cbnz	x1, 2a8ec <printf_parse@@Base+0xb40c>
   2a944:	ldr	x0, [x22, x27, lsl #3]
   2a948:	str	x0, [x24, x27, lsl #3]
   2a94c:	b	2a930 <printf_parse@@Base+0xb450>
   2a950:	ldr	x0, [sp, #296]
   2a954:	str	x0, [sp, #168]
   2a958:	b	29fc0 <printf_parse@@Base+0xaae0>
   2a95c:	mov	w0, #0x1                   	// #1
   2a960:	str	w0, [sp, #184]
   2a964:	ldp	x23, x24, [sp, #48]
   2a968:	b	2a330 <printf_parse@@Base+0xae50>
   2a96c:	sxtw	x26, w0
   2a970:	b	29fd8 <printf_parse@@Base+0xaaf8>
   2a974:	mov	x0, x22
   2a978:	ldr	x27, [sp, #240]
   2a97c:	bl	aa50 <free@plt>
   2a980:	b	2a44c <printf_parse@@Base+0xaf6c>
   2a984:	ldrb	w0, [x27, #176]
   2a988:	tbz	w0, #0, 2a99c <printf_parse@@Base+0xb4bc>
   2a98c:	ldr	x0, [x27, #152]
   2a990:	cmp	x0, #0x0
   2a994:	cset	w0, gt
   2a998:	str	w0, [sp, #316]
   2a99c:	ldp	x0, x2, [sp, #136]
   2a9a0:	mov	x1, x25
   2a9a4:	ldrb	w4, [sp, #316]
   2a9a8:	ldr	x19, [sp, #304]
   2a9ac:	mov	x3, x19
   2a9b0:	bl	25358 <printf_parse@@Base+0x5e78>
   2a9b4:	cbnz	w0, 2a71c <printf_parse@@Base+0xb23c>
   2a9b8:	ldr	x1, [x19]
   2a9bc:	b	2a4b8 <printf_parse@@Base+0xafd8>
   2a9c0:	ldr	x9, [sp, #144]
   2a9c4:	b	2a9cc <printf_parse@@Base+0xb4ec>
   2a9c8:	ldr	x1, [x0]
   2a9cc:	cmn	x1, #0x1
   2a9d0:	b.eq	2aa04 <printf_parse@@Base+0xb524>  // b.none
   2a9d4:	cmp	x5, x1
   2a9d8:	mov	x3, x6
   2a9dc:	ldr	x8, [x0, #8]
   2a9e0:	b.eq	2a9e8 <printf_parse@@Base+0xb508>  // b.none
   2a9e4:	ldr	x3, [x7, x1, lsl #3]
   2a9e8:	str	x3, [x0]
   2a9ec:	cmp	x5, x8
   2a9f0:	b.eq	2aa18 <printf_parse@@Base+0xb538>  // b.none
   2a9f4:	ldr	x1, [x7, x8, lsl #3]
   2a9f8:	add	x3, x4, x3
   2a9fc:	add	x1, x4, x1
   2aa00:	stp	x3, x1, [x0]
   2aa04:	add	x2, x2, #0x1
   2aa08:	add	x0, x0, #0x10
   2aa0c:	cmp	x2, x9
   2aa10:	b.ne	2a9c8 <printf_parse@@Base+0xb4e8>  // b.any
   2aa14:	b	2a50c <printf_parse@@Base+0xb02c>
   2aa18:	mov	x1, x6
   2aa1c:	b	2a9f8 <printf_parse@@Base+0xb518>
   2aa20:	ldr	x0, [sp, #144]
   2aa24:	ldr	x27, [sp, #240]
   2aa28:	b	2a468 <printf_parse@@Base+0xaf88>
   2aa2c:	nop
   2aa30:	stp	x29, x30, [sp, #-112]!
   2aa34:	mov	x29, sp
   2aa38:	stp	x19, x20, [sp, #16]
   2aa3c:	mov	x20, x3
   2aa40:	stp	x21, x22, [sp, #32]
   2aa44:	mov	x22, x5
   2aa48:	stp	x23, x24, [sp, #48]
   2aa4c:	mov	x24, x0
   2aa50:	and	w23, w4, #0xff
   2aa54:	mov	x0, #0x20                  	// #32
   2aa58:	stp	x25, x26, [sp, #64]
   2aa5c:	mov	x25, x1
   2aa60:	mov	x26, x2
   2aa64:	mov	x1, #0x1                   	// #1
   2aa68:	str	xzr, [sp, #104]
   2aa6c:	bl	a770 <calloc@plt>
   2aa70:	mov	x19, x0
   2aa74:	cbz	x0, 2ad20 <printf_parse@@Base+0xb840>
   2aa78:	mov	x1, #0x1                   	// #1
   2aa7c:	mov	x0, #0x50                  	// #80
   2aa80:	bl	a770 <calloc@plt>
   2aa84:	mov	x21, x0
   2aa88:	cbz	x0, 2ad14 <printf_parse@@Base+0xb834>
   2aa8c:	ldrb	w7, [x0, #32]
   2aa90:	mov	x5, x26
   2aa94:	mov	x0, x25
   2aa98:	add	x4, sp, #0x68
   2aa9c:	add	x3, x21, #0x48
   2aaa0:	add	x2, x21, #0x18
   2aaa4:	bfxil	w7, w23, #0, #1
   2aaa8:	mov	x1, x19
   2aaac:	mov	x6, #0x0                   	// #0
   2aab0:	strb	w7, [x21, #32]
   2aab4:	bl	22638 <printf_parse@@Base+0x3158>
   2aab8:	mov	w25, w0
   2aabc:	cbnz	w0, 2ade0 <printf_parse@@Base+0xb900>
   2aac0:	ldrb	w1, [x20]
   2aac4:	mov	x0, #0x1                   	// #1
   2aac8:	cbz	w1, 2aaec <printf_parse@@Base+0xb60c>
   2aacc:	nop
   2aad0:	ubfx	x4, x1, #6, #2
   2aad4:	lsl	x3, x0, x1
   2aad8:	ldrb	w1, [x20, #1]!
   2aadc:	ldr	x2, [x19, x4, lsl #3]
   2aae0:	orr	x2, x2, x3
   2aae4:	str	x2, [x19, x4, lsl #3]
   2aae8:	cbnz	w1, 2aad0 <printf_parse@@Base+0xb5f0>
   2aaec:	cbz	w23, 2ab00 <printf_parse@@Base+0xb620>
   2aaf0:	ldp	q1, q0, [x19]
   2aaf4:	mvn	v1.16b, v1.16b
   2aaf8:	mvn	v0.16b, v0.16b
   2aafc:	stp	q1, q0, [x19]
   2ab00:	ldr	w25, [x24, #180]
   2ab04:	cmp	w25, #0x1
   2ab08:	b.le	2ab3c <printf_parse@@Base+0xb65c>
   2ab0c:	ldr	x0, [x24, #120]
   2ab10:	add	x1, x0, #0xf
   2ab14:	sub	x1, x1, x19
   2ab18:	cmp	x1, #0x1e
   2ab1c:	b.ls	2ada0 <printf_parse@@Base+0xb8c0>  // b.plast
   2ab20:	ldp	q1, q0, [x19]
   2ab24:	ldr	q2, [x0]
   2ab28:	and	v1.16b, v1.16b, v2.16b
   2ab2c:	str	q1, [x19]
   2ab30:	ldr	q1, [x0, #16]
   2ab34:	and	v0.16b, v0.16b, v1.16b
   2ab38:	str	q0, [x19, #16]
   2ab3c:	ldr	w26, [x24, #128]
   2ab40:	cmp	w26, #0xf
   2ab44:	b.eq	2ae1c <printf_parse@@Base+0xb93c>  // b.none
   2ab48:	ldr	x23, [x24, #112]
   2ab4c:	sbfiz	x1, x26, #6, #32
   2ab50:	movi	v0.4s, #0x0
   2ab54:	add	x3, x1, #0x30
   2ab58:	add	x2, x23, x1
   2ab5c:	add	w0, w26, #0x1
   2ab60:	str	w0, [x24, #128]
   2ab64:	add	x6, x23, x3
   2ab68:	add	x0, x1, #0x20
   2ab6c:	mov	w7, #0x3                   	// #3
   2ab70:	stur	q0, [x2, #8]
   2ab74:	add	x0, x23, x0
   2ab78:	add	x1, x1, #0x8
   2ab7c:	str	xzr, [x2, #24]
   2ab80:	adds	x20, x23, x1
   2ab84:	str	x19, [x23, x3]
   2ab88:	mov	x4, #0xffffffffffffffff    	// #-1
   2ab8c:	strb	w7, [x6, #8]
   2ab90:	ldrb	w1, [x0, #26]
   2ab94:	and	w1, w1, #0xfffffff3
   2ab98:	strb	w1, [x0, #26]
   2ab9c:	str	x4, [x2, #64]
   2aba0:	str	q0, [x2, #32]
   2aba4:	b.eq	2ad48 <printf_parse@@Base+0xb868>  // b.none
   2aba8:	cmp	w25, #0x1
   2abac:	b.le	2accc <printf_parse@@Base+0xb7ec>
   2abb0:	ldrb	w1, [x24, #176]
   2abb4:	ldr	w0, [x24, #128]
   2abb8:	str	x27, [sp, #80]
   2abbc:	orr	w1, w1, #0x2
   2abc0:	strb	w1, [x24, #176]
   2abc4:	cmp	w0, #0xf
   2abc8:	b.eq	2ae7c <printf_parse@@Base+0xb99c>  // b.none
   2abcc:	sbfiz	x1, x0, #6, #32
   2abd0:	sxtw	x27, w0
   2abd4:	add	x4, x1, #0x30
   2abd8:	add	x2, x1, #0x8
   2abdc:	mov	x25, x23
   2abe0:	add	w1, w0, #0x1
   2abe4:	lsl	x0, x27, #6
   2abe8:	str	w1, [x24, #128]
   2abec:	movi	v0.4s, #0x0
   2abf0:	add	x3, x25, x0
   2abf4:	add	x6, x25, x4
   2abf8:	add	x1, x0, #0x20
   2abfc:	add	x1, x25, x1
   2ac00:	mov	w7, #0x6                   	// #6
   2ac04:	str	xzr, [x3, #24]
   2ac08:	add	x22, x25, x2
   2ac0c:	stur	q0, [x3, #8]
   2ac10:	mov	x5, #0xffffffffffffffff    	// #-1
   2ac14:	str	x21, [x25, x4]
   2ac18:	strb	w7, [x6, #8]
   2ac1c:	ldrb	w2, [x1, #26]
   2ac20:	and	w2, w2, #0xfffffff3
   2ac24:	strb	w2, [x1, #26]
   2ac28:	str	x5, [x3, #64]
   2ac2c:	str	q0, [x3, #32]
   2ac30:	ldr	w0, [x24, #128]
   2ac34:	cmp	w0, #0xf
   2ac38:	b.eq	2aea8 <printf_parse@@Base+0xb9c8>  // b.none
   2ac3c:	sbfiz	x19, x0, #6, #32
   2ac40:	sxtw	x1, w0
   2ac44:	add	x5, x19, #0x30
   2ac48:	add	x4, x19, #0x8
   2ac4c:	add	w0, w0, #0x1
   2ac50:	mov	x19, x25
   2ac54:	lsl	x1, x1, #6
   2ac58:	add	x5, x19, x5
   2ac5c:	add	x2, x19, x1
   2ac60:	add	x25, x25, x27, lsl #6
   2ac64:	add	x3, x1, #0x20
   2ac68:	sbfiz	x26, x26, #6, #32
   2ac6c:	ldr	x27, [sp, #80]
   2ac70:	str	w0, [x24, #128]
   2ac74:	add	x3, x19, x3
   2ac78:	stp	xzr, x20, [x2, #8]
   2ac7c:	mov	w0, #0xa                   	// #10
   2ac80:	str	x22, [x2, #24]
   2ac84:	add	x19, x19, x4
   2ac88:	strb	w0, [x5, #8]
   2ac8c:	add	x23, x23, x26
   2ac90:	mov	x0, #0xffffffffffffffff    	// #-1
   2ac94:	ldrb	w4, [x3, #26]
   2ac98:	and	w4, w4, #0xfffffff3
   2ac9c:	strb	w4, [x3, #26]
   2aca0:	stp	xzr, xzr, [x2, #32]
   2aca4:	str	x0, [x2, #64]
   2aca8:	str	x19, [x23, #8]
   2acac:	str	x19, [x25, #8]
   2acb0:	mov	x0, x19
   2acb4:	ldp	x19, x20, [sp, #16]
   2acb8:	ldp	x21, x22, [sp, #32]
   2acbc:	ldp	x23, x24, [sp, #48]
   2acc0:	ldp	x25, x26, [sp, #64]
   2acc4:	ldp	x29, x30, [sp], #112
   2acc8:	ret
   2accc:	ldr	x0, [x21]
   2acd0:	mov	x19, x20
   2acd4:	bl	aa50 <free@plt>
   2acd8:	ldr	x0, [x21, #8]
   2acdc:	bl	aa50 <free@plt>
   2ace0:	ldr	x0, [x21, #16]
   2ace4:	bl	aa50 <free@plt>
   2ace8:	ldr	x0, [x21, #24]
   2acec:	bl	aa50 <free@plt>
   2acf0:	mov	x0, x21
   2acf4:	bl	aa50 <free@plt>
   2acf8:	mov	x0, x19
   2acfc:	ldp	x19, x20, [sp, #16]
   2ad00:	ldp	x21, x22, [sp, #32]
   2ad04:	ldp	x23, x24, [sp, #48]
   2ad08:	ldp	x25, x26, [sp, #64]
   2ad0c:	ldp	x29, x30, [sp], #112
   2ad10:	ret
   2ad14:	mov	x0, x19
   2ad18:	mov	x19, #0x0                   	// #0
   2ad1c:	bl	aa50 <free@plt>
   2ad20:	mov	w0, #0xc                   	// #12
   2ad24:	str	w0, [x22]
   2ad28:	mov	x0, x19
   2ad2c:	ldp	x19, x20, [sp, #16]
   2ad30:	ldp	x21, x22, [sp, #32]
   2ad34:	ldp	x23, x24, [sp, #48]
   2ad38:	ldp	x25, x26, [sp, #64]
   2ad3c:	ldp	x29, x30, [sp], #112
   2ad40:	ret
   2ad44:	ldr	x27, [sp, #80]
   2ad48:	mov	x0, x19
   2ad4c:	bl	aa50 <free@plt>
   2ad50:	mov	x19, #0x0                   	// #0
   2ad54:	ldr	x0, [x21]
   2ad58:	bl	aa50 <free@plt>
   2ad5c:	ldr	x0, [x21, #8]
   2ad60:	bl	aa50 <free@plt>
   2ad64:	ldr	x0, [x21, #16]
   2ad68:	bl	aa50 <free@plt>
   2ad6c:	ldr	x0, [x21, #24]
   2ad70:	bl	aa50 <free@plt>
   2ad74:	mov	x0, x21
   2ad78:	bl	aa50 <free@plt>
   2ad7c:	mov	w0, #0xc                   	// #12
   2ad80:	str	w0, [x22]
   2ad84:	mov	x0, x19
   2ad88:	ldp	x19, x20, [sp, #16]
   2ad8c:	ldp	x21, x22, [sp, #32]
   2ad90:	ldp	x23, x24, [sp, #48]
   2ad94:	ldp	x25, x26, [sp, #64]
   2ad98:	ldp	x29, x30, [sp], #112
   2ad9c:	ret
   2ada0:	ldp	x1, x3, [x19]
   2ada4:	ldr	x2, [x0]
   2ada8:	and	x1, x1, x2
   2adac:	str	x1, [x19]
   2adb0:	ldr	x2, [x19, #16]
   2adb4:	ldr	x4, [x0, #8]
   2adb8:	ldr	x1, [x19, #24]
   2adbc:	and	x3, x3, x4
   2adc0:	str	x3, [x19, #8]
   2adc4:	ldr	x3, [x0, #16]
   2adc8:	and	x2, x2, x3
   2adcc:	str	x2, [x19, #16]
   2add0:	ldr	x0, [x0, #24]
   2add4:	and	x0, x1, x0
   2add8:	str	x0, [x19, #24]
   2addc:	b	2ab3c <printf_parse@@Base+0xb65c>
   2ade0:	mov	x0, x19
   2ade4:	bl	aa50 <free@plt>
   2ade8:	ldr	x0, [x21]
   2adec:	mov	x19, #0x0                   	// #0
   2adf0:	bl	aa50 <free@plt>
   2adf4:	ldr	x0, [x21, #8]
   2adf8:	bl	aa50 <free@plt>
   2adfc:	ldr	x0, [x21, #16]
   2ae00:	bl	aa50 <free@plt>
   2ae04:	ldr	x0, [x21, #24]
   2ae08:	bl	aa50 <free@plt>
   2ae0c:	mov	x0, x21
   2ae10:	bl	aa50 <free@plt>
   2ae14:	str	w25, [x22]
   2ae18:	b	2acb0 <printf_parse@@Base+0xb7d0>
   2ae1c:	mov	x0, #0x3c8                 	// #968
   2ae20:	bl	a5f0 <malloc@plt>
   2ae24:	mov	x23, x0
   2ae28:	cbz	x0, 2ad48 <printf_parse@@Base+0xb868>
   2ae2c:	movi	v0.4s, #0x0
   2ae30:	add	x20, x0, #0x8
   2ae34:	ldr	w0, [x0, #56]
   2ae38:	mov	w1, #0x1                   	// #1
   2ae3c:	ldr	x3, [x24, #112]
   2ae40:	and	w0, w0, #0xffffff00
   2ae44:	and	w0, w0, #0xfff3ffff
   2ae48:	mov	x2, #0xffffffffffffffff    	// #-1
   2ae4c:	orr	w0, w0, #0x3
   2ae50:	mov	w26, #0x0                   	// #0
   2ae54:	str	x3, [x23]
   2ae58:	stur	q0, [x23, #8]
   2ae5c:	str	xzr, [x23, #24]
   2ae60:	str	q0, [x23, #32]
   2ae64:	str	x19, [x23, #48]
   2ae68:	str	w0, [x23, #56]
   2ae6c:	str	x2, [x23, #64]
   2ae70:	str	x23, [x24, #112]
   2ae74:	str	w1, [x24, #128]
   2ae78:	b	2aba8 <printf_parse@@Base+0xb6c8>
   2ae7c:	mov	x0, #0x3c8                 	// #968
   2ae80:	bl	a5f0 <malloc@plt>
   2ae84:	mov	x25, x0
   2ae88:	cbz	x0, 2ad44 <printf_parse@@Base+0xb864>
   2ae8c:	mov	x2, #0x8                   	// #8
   2ae90:	mov	w1, #0x1                   	// #1
   2ae94:	mov	x4, #0x30                  	// #48
   2ae98:	mov	x27, #0x0                   	// #0
   2ae9c:	str	x23, [x0]
   2aea0:	str	x0, [x24, #112]
   2aea4:	b	2abe4 <printf_parse@@Base+0xb704>
   2aea8:	mov	x0, #0x3c8                 	// #968
   2aeac:	bl	a5f0 <malloc@plt>
   2aeb0:	mov	x19, x0
   2aeb4:	cbz	x0, 2aed4 <printf_parse@@Base+0xb9f4>
   2aeb8:	mov	w0, #0x1                   	// #1
   2aebc:	mov	x4, #0x8                   	// #8
   2aec0:	mov	x5, #0x30                  	// #48
   2aec4:	mov	x1, #0x0                   	// #0
   2aec8:	str	x25, [x19]
   2aecc:	str	x19, [x24, #112]
   2aed0:	b	2ac54 <printf_parse@@Base+0xb774>
   2aed4:	mov	x19, #0x0                   	// #0
   2aed8:	ldr	x27, [sp, #80]
   2aedc:	b	2acb0 <printf_parse@@Base+0xb7d0>
   2aee0:	stp	x29, x30, [sp, #-320]!
   2aee4:	mov	x29, sp
   2aee8:	stp	x19, x20, [sp, #16]
   2aeec:	mov	x20, x2
   2aef0:	ldrb	w19, [x2, #8]
   2aef4:	stp	x21, x22, [sp, #32]
   2aef8:	mov	x21, x1
   2aefc:	mov	x22, x3
   2af00:	stp	x25, x26, [sp, #64]
   2af04:	cmp	w19, #0x13
   2af08:	mov	x25, x0
   2af0c:	stp	x27, x28, [sp, #80]
   2af10:	str	x5, [sp, #144]
   2af14:	ldr	x27, [x1]
   2af18:	b.hi	2b12c <printf_parse@@Base+0xbc4c>  // b.pmore
   2af1c:	cmp	w19, #0x11
   2af20:	b.hi	2c2e8 <printf_parse@@Base+0xce08>  // b.pmore
   2af24:	cmp	w19, #0x8
   2af28:	b.eq	2c35c <printf_parse@@Base+0xce7c>  // b.none
   2af2c:	b.ls	2b430 <printf_parse@@Base+0xbf50>  // b.plast
   2af30:	cmp	w19, #0xb
   2af34:	b.eq	2c2e8 <printf_parse@@Base+0xce08>  // b.none
   2af38:	cmp	w19, #0xc
   2af3c:	b.ne	2b410 <printf_parse@@Base+0xbf30>  // b.any
   2af40:	stp	x23, x24, [sp, #48]
   2af44:	mov	w0, #0x30f                 	// #783
   2af48:	ldr	w23, [x2]
   2af4c:	tst	w23, w0
   2af50:	b.eq	2af84 <printf_parse@@Base+0xbaa4>  // b.none
   2af54:	ldrb	w0, [x27, #176]
   2af58:	tbnz	w0, #4, 2af84 <printf_parse@@Base+0xbaa4>
   2af5c:	orr	w0, w0, #0x10
   2af60:	strb	w0, [x27, #176]
   2af64:	mov	w1, w0
   2af68:	tbnz	w0, #3, 2d06c <printf_parse@@Base+0xdb8c>
   2af6c:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   2af70:	ldr	q0, [x0, #1808]
   2af74:	stur	q0, [x27, #184]
   2af78:	tbz	w1, #2, 2cff8 <printf_parse@@Base+0xdb18>
   2af7c:	stp	xzr, xzr, [x27, #200]
   2af80:	ldr	w23, [x2]
   2af84:	sub	w0, w23, #0x100
   2af88:	tst	w0, #0xfffffeff
   2af8c:	b.ne	2c570 <printf_parse@@Base+0xd090>  // b.any
   2af90:	cmp	w23, #0x100
   2af94:	b.eq	2c890 <printf_parse@@Base+0xd3b0>  // b.none
   2af98:	mov	w0, #0x5                   	// #5
   2af9c:	str	w0, [x20]
   2afa0:	ldr	w0, [x27, #128]
   2afa4:	cmp	w0, #0xf
   2afa8:	b.eq	2ce6c <printf_parse@@Base+0xd98c>  // b.none
   2afac:	mov	x23, #0x8                   	// #8
   2afb0:	mov	w2, #0x40                  	// #64
   2afb4:	add	w3, w0, #0x1
   2afb8:	smaddl	x2, w0, w2, x23
   2afbc:	ldr	x23, [x27, #112]
   2afc0:	sbfiz	x0, x0, #6, #32
   2afc4:	add	x1, x23, x0
   2afc8:	str	w3, [x27, #128]
   2afcc:	movi	v0.4s, #0x0
   2afd0:	add	x4, x0, #0x20
   2afd4:	add	x4, x23, x4
   2afd8:	add	x23, x23, x2
   2afdc:	str	xzr, [x1, #24]
   2afe0:	mov	x5, #0xffffffffffffffff    	// #-1
   2afe4:	stur	q0, [x1, #8]
   2afe8:	ldp	x2, x3, [x20]
   2afec:	stp	x2, x3, [x1, #48]
   2aff0:	ldrb	w2, [x4, #26]
   2aff4:	and	w2, w2, #0xfffffff3
   2aff8:	strb	w2, [x4, #26]
   2affc:	str	x5, [x1, #64]
   2b000:	str	q0, [x1, #32]
   2b004:	mov	w0, #0xa                   	// #10
   2b008:	str	w0, [x20]
   2b00c:	ldr	w0, [x27, #128]
   2b010:	cmp	w0, #0xf
   2b014:	b.eq	2cc08 <printf_parse@@Base+0xd728>  // b.none
   2b018:	mov	x1, #0x8                   	// #8
   2b01c:	mov	w19, #0x40                  	// #64
   2b020:	add	w2, w0, #0x1
   2b024:	smaddl	x19, w0, w19, x1
   2b028:	ldr	x1, [x27, #112]
   2b02c:	sbfiz	x0, x0, #6, #32
   2b030:	add	x4, x1, x0
   2b034:	str	w2, [x27, #128]
   2b038:	movi	v0.4s, #0x0
   2b03c:	add	x5, x0, #0x20
   2b040:	add	x5, x1, x5
   2b044:	add	x19, x1, x19
   2b048:	str	xzr, [x4, #24]
   2b04c:	mov	x6, #0xffffffffffffffff    	// #-1
   2b050:	stur	q0, [x4, #8]
   2b054:	ldp	x2, x3, [x20]
   2b058:	stp	x2, x3, [x4, #48]
   2b05c:	ldrb	w1, [x5, #26]
   2b060:	and	w1, w1, #0xfffffff3
   2b064:	strb	w1, [x5, #26]
   2b068:	str	x6, [x4, #64]
   2b06c:	str	q0, [x4, #32]
   2b070:	ldr	w2, [x27, #128]
   2b074:	cmp	w2, #0xf
   2b078:	b.eq	2cbd8 <printf_parse@@Base+0xd6f8>  // b.none
   2b07c:	sbfiz	x1, x2, #6, #32
   2b080:	sxtw	x0, w2
   2b084:	ldr	x21, [x27, #112]
   2b088:	add	x6, x1, #0x8
   2b08c:	add	w2, w2, #0x1
   2b090:	add	x1, x1, #0x30
   2b094:	lsl	x0, x0, #6
   2b098:	add	x1, x21, x1
   2b09c:	add	x3, x21, x0
   2b0a0:	add	x4, x0, #0x20
   2b0a4:	str	w2, [x27, #128]
   2b0a8:	add	x2, x21, x4
   2b0ac:	mov	w5, #0xa                   	// #10
   2b0b0:	add	x6, x21, x6
   2b0b4:	stp	xzr, x23, [x3, #8]
   2b0b8:	mov	x4, #0xffffffffffffffff    	// #-1
   2b0bc:	str	x19, [x3, #24]
   2b0c0:	strb	w5, [x1, #8]
   2b0c4:	str	x6, [sp, #112]
   2b0c8:	ldrb	w1, [x2, #26]
   2b0cc:	and	w1, w1, #0xfffffff3
   2b0d0:	strb	w1, [x2, #26]
   2b0d4:	stp	xzr, xzr, [x3, #32]
   2b0d8:	str	x4, [x3, #64]
   2b0dc:	cbz	x23, 2c908 <printf_parse@@Base+0xd428>
   2b0e0:	str	x6, [x23]
   2b0e4:	cbz	x19, 2b814 <printf_parse@@Base+0xc334>
   2b0e8:	str	x6, [x19]
   2b0ec:	cbz	x6, 2b814 <printf_parse@@Base+0xc334>
   2b0f0:	mov	x1, x25
   2b0f4:	mov	x2, x22
   2b0f8:	mov	x0, x20
   2b0fc:	bl	23260 <printf_parse@@Base+0x3d80>
   2b100:	ldr	x1, [x25, #72]
   2b104:	ldp	x23, x24, [sp, #48]
   2b108:	add	x0, x1, w0, sxtw
   2b10c:	str	x0, [x25, #72]
   2b110:	ldp	x19, x20, [sp, #16]
   2b114:	ldp	x21, x22, [sp, #32]
   2b118:	ldp	x25, x26, [sp, #64]
   2b11c:	ldp	x27, x28, [sp, #80]
   2b120:	ldr	x0, [sp, #112]
   2b124:	ldp	x29, x30, [sp], #320
   2b128:	ret
   2b12c:	cmp	w19, #0x21
   2b130:	b.hi	2b608 <printf_parse@@Base+0xc128>  // b.pmore
   2b134:	cmp	w19, #0x1f
   2b138:	b.hi	2c33c <printf_parse@@Base+0xce5c>  // b.pmore
   2b13c:	cmp	w19, #0x17
   2b140:	b.eq	2c2e4 <printf_parse@@Base+0xce04>  // b.none
   2b144:	cmp	w19, #0x18
   2b148:	b.ne	2b4c4 <printf_parse@@Base+0xbfe4>  // b.any
   2b14c:	mov	w0, #0x1                   	// #1
   2b150:	strb	w0, [x20, #8]
   2b154:	ldr	w0, [x27, #128]
   2b158:	cmp	w0, #0xf
   2b15c:	b.eq	2c5e0 <printf_parse@@Base+0xd100>  // b.none
   2b160:	ldr	x21, [x27, #112]
   2b164:	sbfiz	x1, x0, #6, #32
   2b168:	movi	v0.4s, #0x0
   2b16c:	add	w2, w0, #0x1
   2b170:	add	x4, x21, x1
   2b174:	str	w2, [x27, #128]
   2b178:	mov	w2, #0x40                  	// #64
   2b17c:	add	x5, x1, #0x20
   2b180:	add	x5, x21, x5
   2b184:	mov	x6, #0xffffffffffffffff    	// #-1
   2b188:	str	xzr, [x4, #24]
   2b18c:	smaddl	x0, w0, w2, x21
   2b190:	stur	q0, [x4, #8]
   2b194:	adds	x0, x0, #0x8
   2b198:	ldp	x2, x3, [x20]
   2b19c:	stp	x2, x3, [x4, #48]
   2b1a0:	str	x0, [sp, #112]
   2b1a4:	ldrb	w0, [x5, #26]
   2b1a8:	and	w0, w0, #0xfffffff3
   2b1ac:	strb	w0, [x5, #26]
   2b1b0:	str	x6, [x4, #64]
   2b1b4:	str	q0, [x4, #32]
   2b1b8:	b.eq	2b818 <printf_parse@@Base+0xc338>  // b.none
   2b1bc:	mov	x2, x22
   2b1c0:	mov	x1, x25
   2b1c4:	mov	x0, x20
   2b1c8:	bl	23260 <printf_parse@@Base+0x3d80>
   2b1cc:	ldr	x3, [x25, #72]
   2b1d0:	ldrb	w1, [x20, #8]
   2b1d4:	cmp	w1, #0x12
   2b1d8:	sub	w2, w1, #0x12
   2b1dc:	cset	w28, eq  // eq = none
   2b1e0:	add	x26, x3, w0, sxtw
   2b1e4:	cmp	w1, #0xb
   2b1e8:	str	x26, [x25, #72]
   2b1ec:	and	w2, w2, #0xff
   2b1f0:	ccmp	w1, #0x17, #0x4, ne  // ne = any
   2b1f4:	ccmp	w2, #0x1, #0x0, ne  // ne = any
   2b1f8:	b.hi	2b110 <printf_parse@@Base+0xbc30>  // b.pmore
   2b1fc:	and	x0, x22, #0x200000
   2b200:	str	x0, [sp, #152]
   2b204:	and	x0, x22, #0x1000000
   2b208:	stp	x23, x24, [sp, #48]
   2b20c:	str	x0, [sp, #136]
   2b210:	add	x0, sp, #0x120
   2b214:	str	x0, [sp, #128]
   2b218:	ldp	x2, x3, [x20]
   2b21c:	stp	x2, x3, [sp, #96]
   2b220:	cmp	w1, #0x17
   2b224:	b.eq	2ba10 <printf_parse@@Base+0xc530>  // b.none
   2b228:	cmp	w1, #0x13
   2b22c:	mov	x2, x22
   2b230:	mov	x1, x25
   2b234:	mov	x0, x20
   2b238:	mov	x19, #0xffffffffffffffff    	// #-1
   2b23c:	cneg	x19, x19, eq  // eq = none
   2b240:	bl	23260 <printf_parse@@Base+0x3d80>
   2b244:	ldr	x1, [x25, #72]
   2b248:	add	x0, x1, w0, sxtw
   2b24c:	str	x0, [x25, #72]
   2b250:	ldr	x0, [sp, #112]
   2b254:	cbz	x0, 2bbc4 <printf_parse@@Base+0xc6e4>
   2b258:	mov	x26, x0
   2b25c:	cbnz	w28, 2c078 <printf_parse@@Base+0xcb98>
   2b260:	mov	x5, #0x0                   	// #0
   2b264:	mov	x24, #0x0                   	// #0
   2b268:	ldrb	w0, [x26, #48]
   2b26c:	cmp	w0, #0x11
   2b270:	b.eq	2ba9c <printf_parse@@Base+0xc5bc>  // b.none
   2b274:	cmn	x19, #0x1
   2b278:	ldr	w2, [x27, #128]
   2b27c:	cset	w9, eq  // eq = none
   2b280:	add	w9, w9, #0xa
   2b284:	cmp	w2, #0xf
   2b288:	b.eq	2bc24 <printf_parse@@Base+0xc744>  // b.none
   2b28c:	sbfiz	x1, x2, #6, #32
   2b290:	sxtw	x0, w2
   2b294:	ldr	x28, [x27, #112]
   2b298:	add	x10, x1, #0x30
   2b29c:	add	w2, w2, #0x1
   2b2a0:	add	x1, x1, #0x8
   2b2a4:	lsl	x0, x0, #6
   2b2a8:	add	x10, x28, x10
   2b2ac:	add	x3, x28, x0
   2b2b0:	add	x6, x0, #0x20
   2b2b4:	str	w2, [x27, #128]
   2b2b8:	add	x2, x28, x6
   2b2bc:	movi	v0.4s, #0x0
   2b2c0:	mov	x11, #0xffffffffffffffff    	// #-1
   2b2c4:	stp	xzr, x26, [x3, #8]
   2b2c8:	add	x23, x28, x1
   2b2cc:	str	xzr, [x3, #24]
   2b2d0:	strb	w9, [x10, #8]
   2b2d4:	ldrb	w6, [x2, #26]
   2b2d8:	and	w6, w6, #0xfffffff3
   2b2dc:	strb	w6, [x2, #26]
   2b2e0:	str	x11, [x3, #64]
   2b2e4:	str	q0, [x3, #32]
   2b2e8:	str	x23, [x26]
   2b2ec:	cbz	x23, 2b978 <printf_parse@@Base+0xc498>
   2b2f0:	add	x21, x5, #0x2
   2b2f4:	mov	x6, x23
   2b2f8:	cmp	x19, x21
   2b2fc:	b.lt	2bb04 <printf_parse@@Base+0xc624>  // b.tstop
   2b300:	mov	x28, x26
   2b304:	ldr	w26, [x27, #128]
   2b308:	mov	x10, #0xffffffffffffffff    	// #-1
   2b30c:	cmp	w26, #0xf
   2b310:	ldr	x9, [sp, #128]
   2b314:	b.eq	2b3a4 <printf_parse@@Base+0xbec4>  // b.none
   2b318:	ldr	x0, [x27, #112]
   2b31c:	sbfiz	x2, x26, #6, #32
   2b320:	add	w3, w26, #0x1
   2b324:	str	w3, [x27, #128]
   2b328:	add	x12, x0, x2
   2b32c:	add	x13, x2, #0x20
   2b330:	mov	w2, #0x40                  	// #64
   2b334:	add	x13, x0, x13
   2b338:	sxtw	x11, w26
   2b33c:	str	xzr, [x12, #24]
   2b340:	smaddl	x26, w26, w2, x0
   2b344:	stur	q0, [x12, #8]
   2b348:	add	x26, x26, #0x8
   2b34c:	ldp	x2, x3, [x28, #40]
   2b350:	stp	x2, x3, [x12, #48]
   2b354:	ldrb	w2, [x13, #26]
   2b358:	and	w2, w2, #0xfffffff3
   2b35c:	strb	w2, [x13, #26]
   2b360:	str	x10, [x12, #64]
   2b364:	str	q0, [x12, #32]
   2b368:	str	x26, [x9]
   2b36c:	cbz	x26, 2b86c <printf_parse@@Base+0xc38c>
   2b370:	add	x0, x0, x11, lsl #6
   2b374:	str	x23, [x0, #8]
   2b378:	ldr	x23, [x9]
   2b37c:	ldrb	w0, [x23, #50]
   2b380:	orr	w0, w0, #0x4
   2b384:	strb	w0, [x23, #50]
   2b388:	ldr	x0, [x28, #8]
   2b38c:	cbz	x0, 2b848 <printf_parse@@Base+0xc368>
   2b390:	add	x9, x23, #0x8
   2b394:	mov	x28, x0
   2b398:	ldr	w26, [x27, #128]
   2b39c:	cmp	w26, #0xf
   2b3a0:	b.ne	2b318 <printf_parse@@Base+0xbe38>  // b.any
   2b3a4:	mov	x0, #0x3c8                 	// #968
   2b3a8:	str	x6, [sp, #96]
   2b3ac:	str	x9, [sp, #120]
   2b3b0:	bl	a5f0 <malloc@plt>
   2b3b4:	movi	v0.4s, #0x0
   2b3b8:	mov	x10, #0xffffffffffffffff    	// #-1
   2b3bc:	ldr	x6, [sp, #96]
   2b3c0:	ldr	x9, [sp, #120]
   2b3c4:	cbz	x0, 2cae4 <printf_parse@@Base+0xd604>
   2b3c8:	ldr	x2, [x27, #112]
   2b3cc:	str	x2, [x0]
   2b3d0:	mov	w1, #0x1                   	// #1
   2b3d4:	str	x0, [x27, #112]
   2b3d8:	str	w1, [x27, #128]
   2b3dc:	add	x12, x0, #0x8
   2b3e0:	str	xzr, [x0, #24]
   2b3e4:	mov	x11, #0x0                   	// #0
   2b3e8:	stur	q0, [x0, #8]
   2b3ec:	ldp	x2, x3, [x28, #40]
   2b3f0:	stp	x2, x3, [x0, #48]
   2b3f4:	ldrb	w2, [x0, #58]
   2b3f8:	str	q0, [x0, #32]
   2b3fc:	and	w2, w2, #0xfffffff3
   2b400:	strb	w2, [x0, #58]
   2b404:	str	x10, [x0, #64]
   2b408:	str	x12, [x9]
   2b40c:	b	2b370 <printf_parse@@Base+0xbe90>
   2b410:	cmp	w19, #0x9
   2b414:	b.ne	2b648 <printf_parse@@Base+0xc168>  // b.any
   2b418:	tbnz	w22, #17, 2b14c <printf_parse@@Base+0xbc6c>
   2b41c:	ldr	x1, [sp, #144]
   2b420:	mov	w0, #0x10                  	// #16
   2b424:	str	xzr, [sp, #112]
   2b428:	str	w0, [x1]
   2b42c:	b	2b110 <printf_parse@@Base+0xbc30>
   2b430:	cmp	w19, #0x4
   2b434:	b.eq	2c430 <printf_parse@@Base+0xcf50>  // b.none
   2b438:	cmp	w19, #0x5
   2b43c:	b.ne	2b668 <printf_parse@@Base+0xc188>  // b.any
   2b440:	ldr	w0, [x27, #128]
   2b444:	cmp	w0, #0xf
   2b448:	b.eq	2c6a0 <printf_parse@@Base+0xd1c0>  // b.none
   2b44c:	ldr	x21, [x27, #112]
   2b450:	sbfiz	x1, x0, #6, #32
   2b454:	movi	v0.4s, #0x0
   2b458:	add	w2, w0, #0x1
   2b45c:	add	x4, x21, x1
   2b460:	str	w2, [x27, #128]
   2b464:	mov	w2, #0x40                  	// #64
   2b468:	add	x5, x1, #0x20
   2b46c:	add	x5, x21, x5
   2b470:	mov	x6, #0xffffffffffffffff    	// #-1
   2b474:	str	xzr, [x4, #24]
   2b478:	smaddl	x0, w0, w2, x21
   2b47c:	stur	q0, [x4, #8]
   2b480:	adds	x0, x0, #0x8
   2b484:	ldp	x2, x3, [x20]
   2b488:	stp	x2, x3, [x4, #48]
   2b48c:	str	x0, [sp, #112]
   2b490:	ldrb	w0, [x5, #26]
   2b494:	and	w0, w0, #0xfffffff3
   2b498:	strb	w0, [x5, #26]
   2b49c:	str	x6, [x4, #64]
   2b4a0:	str	q0, [x4, #32]
   2b4a4:	b.eq	2b818 <printf_parse@@Base+0xc338>  // b.none
   2b4a8:	ldr	w0, [x27, #180]
   2b4ac:	cmp	w0, #0x1
   2b4b0:	b.le	2b1bc <printf_parse@@Base+0xbcdc>
   2b4b4:	ldrb	w0, [x27, #176]
   2b4b8:	orr	w0, w0, #0x2
   2b4bc:	strb	w0, [x27, #176]
   2b4c0:	b	2b1bc <printf_parse@@Base+0xbcdc>
   2b4c4:	cmp	w19, #0x14
   2b4c8:	b.ne	2b648 <printf_parse@@Base+0xc168>  // b.any
   2b4cc:	mov	x1, #0x1                   	// #1
   2b4d0:	mov	x0, #0x20                  	// #32
   2b4d4:	stp	x23, x24, [sp, #48]
   2b4d8:	str	xzr, [sp, #200]
   2b4dc:	bl	a770 <calloc@plt>
   2b4e0:	mov	x1, #0x1                   	// #1
   2b4e4:	mov	x19, x0
   2b4e8:	mov	x0, #0x50                  	// #80
   2b4ec:	bl	a770 <calloc@plt>
   2b4f0:	cmp	x19, #0x0
   2b4f4:	mov	x23, x0
   2b4f8:	cset	w0, eq  // eq = none
   2b4fc:	cmp	x23, #0x0
   2b500:	csinc	w0, w0, wzr, ne  // ne = any
   2b504:	cbnz	w0, 2c74c <printf_parse@@Base+0xd26c>
   2b508:	mov	x1, x25
   2b50c:	mov	x2, x22
   2b510:	mov	x0, x20
   2b514:	bl	20070 <printf_parse@@Base+0xb90>
   2b518:	ldrb	w1, [x20, #8]
   2b51c:	mov	w28, w0
   2b520:	cmp	w1, #0x2
   2b524:	b.eq	2caf0 <printf_parse@@Base+0xd610>  // b.none
   2b528:	str	wzr, [sp, #128]
   2b52c:	cmp	w1, #0x19
   2b530:	b.eq	2c644 <printf_parse@@Base+0xd164>  // b.none
   2b534:	cmp	w1, #0x15
   2b538:	b.eq	2c638 <printf_parse@@Base+0xd158>  // b.none
   2b53c:	add	x0, sp, #0xc8
   2b540:	str	x0, [sp, #136]
   2b544:	add	x0, sp, #0xf0
   2b548:	add	x26, sp, #0x100
   2b54c:	add	x24, sp, #0xd0
   2b550:	str	x0, [sp, #160]
   2b554:	add	x0, sp, #0x120
   2b558:	mov	w5, #0x1                   	// #1
   2b55c:	mov	w21, #0x3                   	// #3
   2b560:	str	xzr, [sp, #96]
   2b564:	str	xzr, [sp, #120]
   2b568:	str	x0, [sp, #168]
   2b56c:	add	x0, sp, #0xe0
   2b570:	str	x0, [sp, #176]
   2b574:	mov	w3, w28
   2b578:	mov	x4, x22
   2b57c:	mov	x2, x20
   2b580:	mov	x1, x25
   2b584:	mov	x0, x24
   2b588:	str	w21, [sp, #208]
   2b58c:	str	x26, [sp, #216]
   2b590:	bl	238c8 <printf_parse@@Base+0x43e8>
   2b594:	cbnz	w0, 2c87c <printf_parse@@Base+0xd39c>
   2b598:	mov	x1, x25
   2b59c:	mov	x2, x22
   2b5a0:	mov	x0, x20
   2b5a4:	bl	20070 <printf_parse@@Base+0xb90>
   2b5a8:	ldr	w1, [sp, #208]
   2b5ac:	mov	w28, w0
   2b5b0:	sub	w0, w1, #0x2
   2b5b4:	tst	w0, #0xfffffffd
   2b5b8:	b.eq	2b5d0 <printf_parse@@Base+0xc0f0>  // b.none
   2b5bc:	ldrb	w0, [x20, #8]
   2b5c0:	cmp	w0, #0x2
   2b5c4:	b.eq	2c7c4 <printf_parse@@Base+0xd2e4>  // b.none
   2b5c8:	cmp	w0, #0x16
   2b5cc:	b.eq	2c918 <printf_parse@@Base+0xd438>  // b.none
   2b5d0:	cmp	w1, #0x2
   2b5d4:	b.eq	2c210 <printf_parse@@Base+0xcd30>  // b.none
   2b5d8:	b.hi	2c208 <printf_parse@@Base+0xcd28>  // b.pmore
   2b5dc:	cbz	w1, 2c7a4 <printf_parse@@Base+0xd2c4>
   2b5e0:	ldr	x1, [x23, #40]
   2b5e4:	ldr	x2, [sp, #96]
   2b5e8:	ldr	x0, [x23]
   2b5ec:	cmp	x1, x2
   2b5f0:	b.eq	2c774 <printf_parse@@Base+0xd294>  // b.none
   2b5f4:	add	x2, x1, #0x1
   2b5f8:	str	x2, [x23, #40]
   2b5fc:	ldr	w2, [sp, #216]
   2b600:	str	w2, [x0, x1, lsl #2]
   2b604:	b	2c24c <printf_parse@@Base+0xcd6c>
   2b608:	cmp	w19, #0x23
   2b60c:	b.hi	2b82c <printf_parse@@Base+0xc34c>  // b.pmore
   2b610:	ldr	x1, [x0, #120]
   2b614:	adrp	x3, 33000 <vasnprintf@@Base+0x2848>
   2b618:	adrp	x2, 34000 <vasnprintf@@Base+0x3848>
   2b61c:	add	x3, x3, #0xff0
   2b620:	add	x2, x2, #0x180
   2b624:	cset	w4, eq  // eq = none
   2b628:	mov	x0, x27
   2b62c:	bl	2aa30 <printf_parse@@Base+0xb550>
   2b630:	ldr	x1, [sp, #144]
   2b634:	str	x0, [sp, #112]
   2b638:	ldr	w1, [x1]
   2b63c:	cmp	w1, #0x0
   2b640:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   2b644:	b.ne	2b1bc <printf_parse@@Base+0xbcdc>  // b.any
   2b648:	str	xzr, [sp, #112]
   2b64c:	ldp	x19, x20, [sp, #16]
   2b650:	ldp	x21, x22, [sp, #32]
   2b654:	ldp	x25, x26, [sp, #64]
   2b658:	ldp	x27, x28, [sp, #80]
   2b65c:	ldr	x0, [sp, #112]
   2b660:	ldp	x29, x30, [sp], #320
   2b664:	ret
   2b668:	cmp	w19, #0x1
   2b66c:	b.ne	2b648 <printf_parse@@Base+0xc168>  // b.any
   2b670:	ldr	w0, [x27, #128]
   2b674:	cmp	w0, #0xf
   2b678:	b.eq	2c6f8 <printf_parse@@Base+0xd218>  // b.none
   2b67c:	ldr	x21, [x27, #112]
   2b680:	sbfiz	x1, x0, #6, #32
   2b684:	movi	v0.4s, #0x0
   2b688:	add	w2, w0, #0x1
   2b68c:	add	x4, x21, x1
   2b690:	str	w2, [x27, #128]
   2b694:	mov	w2, #0x40                  	// #64
   2b698:	add	x5, x1, #0x20
   2b69c:	add	x5, x21, x5
   2b6a0:	mov	x6, #0xffffffffffffffff    	// #-1
   2b6a4:	str	xzr, [x4, #24]
   2b6a8:	smaddl	x0, w0, w2, x21
   2b6ac:	stur	q0, [x4, #8]
   2b6b0:	adds	x0, x0, #0x8
   2b6b4:	ldp	x2, x3, [x20]
   2b6b8:	stp	x2, x3, [x4, #48]
   2b6bc:	str	x0, [sp, #112]
   2b6c0:	ldrb	w0, [x5, #26]
   2b6c4:	and	w0, w0, #0xfffffff3
   2b6c8:	strb	w0, [x5, #26]
   2b6cc:	str	x6, [x4, #64]
   2b6d0:	str	q0, [x4, #32]
   2b6d4:	b.eq	2b818 <printf_parse@@Base+0xc338>  // b.none
   2b6d8:	ldr	w0, [x27, #180]
   2b6dc:	cmp	w0, #0x1
   2b6e0:	b.le	2b1bc <printf_parse@@Base+0xbcdc>
   2b6e4:	mov	x19, #0xffffffffffffffff    	// #-1
   2b6e8:	stp	x23, x24, [sp, #48]
   2b6ec:	ldr	x24, [x25, #72]
   2b6f0:	b	2b700 <printf_parse@@Base+0xc220>
   2b6f4:	str	x0, [x23]
   2b6f8:	cbz	x0, 2b814 <printf_parse@@Base+0xc334>
   2b6fc:	str	x0, [sp, #112]
   2b700:	ldr	x0, [x25, #104]
   2b704:	cmp	x0, x24
   2b708:	b.le	2c888 <printf_parse@@Base+0xd3a8>
   2b70c:	ldr	x0, [x25, #48]
   2b710:	cmp	x0, x24
   2b714:	b.eq	2c888 <printf_parse@@Base+0xd3a8>  // b.none
   2b718:	ldr	x0, [x25, #16]
   2b71c:	ldr	w0, [x0, x24, lsl #2]
   2b720:	cmn	w0, #0x1
   2b724:	b.ne	2c888 <printf_parse@@Base+0xd3a8>  // b.any
   2b728:	mov	x2, x22
   2b72c:	mov	x1, x25
   2b730:	mov	x0, x20
   2b734:	bl	23260 <printf_parse@@Base+0x3d80>
   2b738:	ldr	x2, [x25, #72]
   2b73c:	movi	v0.4s, #0x0
   2b740:	ldr	w1, [x27, #128]
   2b744:	add	x24, x2, w0, sxtw
   2b748:	str	x24, [x25, #72]
   2b74c:	cmp	w1, #0xf
   2b750:	b.eq	2c84c <printf_parse@@Base+0xd36c>  // b.none
   2b754:	mov	x0, #0x8                   	// #8
   2b758:	mov	w23, #0x40                  	// #64
   2b75c:	add	w2, w1, #0x1
   2b760:	smaddl	x23, w1, w23, x0
   2b764:	ldr	x0, [x27, #112]
   2b768:	sbfiz	x1, x1, #6, #32
   2b76c:	add	x4, x0, x1
   2b770:	str	w2, [x27, #128]
   2b774:	add	x5, x1, #0x20
   2b778:	add	x23, x0, x23
   2b77c:	add	x5, x0, x5
   2b780:	str	xzr, [x4, #24]
   2b784:	stur	q0, [x4, #8]
   2b788:	ldp	x2, x3, [x20]
   2b78c:	stp	x2, x3, [x4, #48]
   2b790:	ldrb	w0, [x5, #26]
   2b794:	and	w0, w0, #0xfffffff3
   2b798:	strb	w0, [x5, #26]
   2b79c:	str	x19, [x4, #64]
   2b7a0:	str	q0, [x4, #32]
   2b7a4:	ldr	w3, [x27, #128]
   2b7a8:	cmp	w3, #0xf
   2b7ac:	b.eq	2c81c <printf_parse@@Base+0xd33c>  // b.none
   2b7b0:	sbfiz	x2, x3, #6, #32
   2b7b4:	sxtw	x1, w3
   2b7b8:	ldr	x0, [x27, #112]
   2b7bc:	add	x6, x2, #0x8
   2b7c0:	add	w3, w3, #0x1
   2b7c4:	add	x2, x2, #0x30
   2b7c8:	lsl	x1, x1, #6
   2b7cc:	add	x2, x0, x2
   2b7d0:	add	x4, x0, x1
   2b7d4:	add	x5, x1, #0x20
   2b7d8:	str	w3, [x27, #128]
   2b7dc:	add	x3, x0, x5
   2b7e0:	add	x0, x0, x6
   2b7e4:	mov	w5, #0x10                  	// #16
   2b7e8:	ldr	x6, [sp, #112]
   2b7ec:	stp	xzr, x6, [x4, #8]
   2b7f0:	str	x23, [x4, #24]
   2b7f4:	strb	w5, [x2, #8]
   2b7f8:	ldrb	w2, [x3, #26]
   2b7fc:	and	w2, w2, #0xfffffff3
   2b800:	strb	w2, [x3, #26]
   2b804:	str	x19, [x4, #64]
   2b808:	str	q0, [x4, #32]
   2b80c:	str	x0, [x6]
   2b810:	cbnz	x23, 2b6f4 <printf_parse@@Base+0xc214>
   2b814:	ldp	x23, x24, [sp, #48]
   2b818:	mov	w0, #0xc                   	// #12
   2b81c:	ldr	x1, [sp, #144]
   2b820:	str	xzr, [sp, #112]
   2b824:	str	w0, [x1]
   2b828:	b	2b110 <printf_parse@@Base+0xbc30>
   2b82c:	cmp	w19, #0x24
   2b830:	b.ne	2b648 <printf_parse@@Base+0xc168>  // b.any
   2b834:	mov	w0, #0x5                   	// #5
   2b838:	str	w0, [x5]
   2b83c:	str	xzr, [sp, #112]
   2b840:	b	2b110 <printf_parse@@Base+0xbc30>
   2b844:	mov	x28, x2
   2b848:	ldr	x2, [x28, #16]
   2b84c:	cmp	x2, #0x0
   2b850:	ccmp	x2, x0, #0x4, ne  // ne = any
   2b854:	b.ne	2b960 <printf_parse@@Base+0xc480>  // b.any
   2b858:	ldr	x2, [x28]
   2b85c:	mov	x0, x28
   2b860:	ldr	x23, [x23]
   2b864:	cbnz	x2, 2b844 <printf_parse@@Base+0xc364>
   2b868:	ldr	x26, [sp, #288]
   2b86c:	ldr	w3, [x27, #128]
   2b870:	cmp	w3, #0xf
   2b874:	b.eq	2b998 <printf_parse@@Base+0xc4b8>  // b.none
   2b878:	sbfiz	x2, x3, #6, #32
   2b87c:	sxtw	x0, w3
   2b880:	ldr	x28, [x27, #112]
   2b884:	add	x1, x2, #0x8
   2b888:	add	w3, w3, #0x1
   2b88c:	add	x2, x2, #0x30
   2b890:	lsl	x0, x0, #6
   2b894:	add	x2, x28, x2
   2b898:	add	x23, x28, x0
   2b89c:	add	x10, x0, #0x20
   2b8a0:	str	w3, [x27, #128]
   2b8a4:	add	x3, x28, x10
   2b8a8:	mov	w11, #0x10                  	// #16
   2b8ac:	mov	x10, #0xffffffffffffffff    	// #-1
   2b8b0:	stp	xzr, x6, [x23, #8]
   2b8b4:	add	x1, x28, x1
   2b8b8:	str	x26, [x23, #24]
   2b8bc:	strb	w11, [x2, #8]
   2b8c0:	ldrb	w2, [x3, #26]
   2b8c4:	and	w2, w2, #0xfffffff3
   2b8c8:	strb	w2, [x3, #26]
   2b8cc:	str	x10, [x23, #64]
   2b8d0:	str	q0, [x23, #32]
   2b8d4:	str	x1, [x6]
   2b8d8:	cbz	x26, 2b978 <printf_parse@@Base+0xc498>
   2b8dc:	str	x1, [x26]
   2b8e0:	cbz	x1, 2b978 <printf_parse@@Base+0xc498>
   2b8e4:	ldr	w3, [x27, #128]
   2b8e8:	cmp	w3, #0xf
   2b8ec:	b.eq	2b9d4 <printf_parse@@Base+0xc4f4>  // b.none
   2b8f0:	sbfiz	x2, x3, #6, #32
   2b8f4:	sxtw	x0, w3
   2b8f8:	add	x6, x2, #0x8
   2b8fc:	add	w3, w3, #0x1
   2b900:	add	x2, x2, #0x30
   2b904:	lsl	x0, x0, #6
   2b908:	add	x2, x28, x2
   2b90c:	add	x10, x28, x0
   2b910:	add	x11, x0, #0x20
   2b914:	str	w3, [x27, #128]
   2b918:	add	x3, x28, x11
   2b91c:	mov	w12, #0xa                   	// #10
   2b920:	mov	x11, #0xffffffffffffffff    	// #-1
   2b924:	stp	xzr, x1, [x10, #8]
   2b928:	add	x6, x28, x6
   2b92c:	add	x21, x21, #0x1
   2b930:	str	xzr, [x10, #24]
   2b934:	cmp	x19, x21
   2b938:	strb	w12, [x2, #8]
   2b93c:	ldrb	w1, [x3, #26]
   2b940:	and	w1, w1, #0xfffffff3
   2b944:	strb	w1, [x3, #26]
   2b948:	str	x11, [x10, #64]
   2b94c:	str	q0, [x10, #32]
   2b950:	str	x6, [x23, #8]
   2b954:	b.lt	2bb04 <printf_parse@@Base+0xc624>  // b.tstop
   2b958:	ldr	x23, [x26]
   2b95c:	b	2b300 <printf_parse@@Base+0xbe20>
   2b960:	mov	x0, x2
   2b964:	add	x9, x23, #0x10
   2b968:	mov	x28, x0
   2b96c:	b	2b398 <printf_parse@@Base+0xbeb8>
   2b970:	str	xzr, [x9]
   2b974:	nop
   2b978:	ldr	x1, [sp, #144]
   2b97c:	mov	w0, #0xc                   	// #12
   2b980:	str	w0, [x1]
   2b984:	ldr	x0, [sp, #112]
   2b988:	str	xzr, [sp, #112]
   2b98c:	bl	240f8 <printf_parse@@Base+0x4c18>
   2b990:	ldp	x23, x24, [sp, #48]
   2b994:	b	2b110 <printf_parse@@Base+0xbc30>
   2b998:	mov	x0, #0x3c8                 	// #968
   2b99c:	str	x6, [sp, #96]
   2b9a0:	bl	a5f0 <malloc@plt>
   2b9a4:	mov	x28, x0
   2b9a8:	cbz	x0, 2b978 <printf_parse@@Base+0xc498>
   2b9ac:	ldr	x0, [x27, #112]
   2b9b0:	str	x0, [x28]
   2b9b4:	movi	v0.4s, #0x0
   2b9b8:	mov	w3, #0x1                   	// #1
   2b9bc:	mov	x2, #0x30                  	// #48
   2b9c0:	mov	x1, #0x8                   	// #8
   2b9c4:	mov	x0, #0x0                   	// #0
   2b9c8:	str	x28, [x27, #112]
   2b9cc:	ldr	x6, [sp, #96]
   2b9d0:	b	2b890 <printf_parse@@Base+0xc3b0>
   2b9d4:	mov	x0, #0x3c8                 	// #968
   2b9d8:	str	x1, [sp, #96]
   2b9dc:	bl	a5f0 <malloc@plt>
   2b9e0:	mov	x10, x0
   2b9e4:	cbz	x0, 2b978 <printf_parse@@Base+0xc498>
   2b9e8:	str	x28, [x10]
   2b9ec:	mov	w3, #0x1                   	// #1
   2b9f0:	movi	v0.4s, #0x0
   2b9f4:	mov	x28, x10
   2b9f8:	mov	x2, #0x30                  	// #48
   2b9fc:	mov	x6, #0x8                   	// #8
   2ba00:	mov	x0, #0x0                   	// #0
   2ba04:	str	x10, [x27, #112]
   2ba08:	ldr	x1, [sp, #96]
   2ba0c:	b	2b904 <printf_parse@@Base+0xc424>
   2ba10:	mov	x19, #0xffffffffffffffff    	// #-1
   2ba14:	mov	x28, #0x8030                	// #32816
   2ba18:	mov	x2, x22
   2ba1c:	mov	x1, x25
   2ba20:	mov	x0, x20
   2ba24:	bl	23260 <printf_parse@@Base+0x3d80>
   2ba28:	ldr	x3, [x25, #72]
   2ba2c:	ldrb	w1, [x20, #8]
   2ba30:	ldrb	w2, [x20]
   2ba34:	add	x0, x3, w0, sxtw
   2ba38:	str	x0, [x25, #72]
   2ba3c:	cmp	w1, #0x2
   2ba40:	b.eq	2bbe8 <printf_parse@@Base+0xc708>  // b.none
   2ba44:	cmp	w1, #0x18
   2ba48:	b.eq	2bc70 <printf_parse@@Base+0xc790>  // b.none
   2ba4c:	cmp	w2, #0x2c
   2ba50:	b.eq	2bd14 <printf_parse@@Base+0xc834>  // b.none
   2ba54:	cmp	w1, #0x1
   2ba58:	b.eq	2ba64 <printf_parse@@Base+0xc584>  // b.none
   2ba5c:	mov	x19, #0xfffffffffffffffe    	// #-2
   2ba60:	b	2ba18 <printf_parse@@Base+0xc538>
   2ba64:	sub	w0, w2, #0x30
   2ba68:	and	w1, w0, #0xff
   2ba6c:	cmp	w1, #0x9
   2ba70:	ccmn	x19, #0x2, #0x4, ls  // ls = plast
   2ba74:	b.eq	2ba5c <printf_parse@@Base+0xc57c>  // b.none
   2ba78:	cmn	x19, #0x1
   2ba7c:	b.eq	2bd0c <printf_parse@@Base+0xc82c>  // b.none
   2ba80:	add	x19, x19, x19, lsl #2
   2ba84:	and	x2, x2, #0xff
   2ba88:	add	x2, x2, x19, lsl #1
   2ba8c:	cmp	x2, x28
   2ba90:	csel	x2, x2, x28, le
   2ba94:	sub	x19, x2, #0x30
   2ba98:	b	2ba18 <printf_parse@@Base+0xc538>
   2ba9c:	ldr	x3, [x26, #40]
   2baa0:	mov	x0, x26
   2baa4:	nop
   2baa8:	mov	x1, x0
   2baac:	ldr	x0, [x0, #8]
   2bab0:	cbnz	x0, 2baa8 <printf_parse@@Base+0xc5c8>
   2bab4:	ldr	x0, [x1, #16]
   2bab8:	cbnz	x0, 2baa8 <printf_parse@@Base+0xc5c8>
   2babc:	b	2badc <printf_parse@@Base+0xc5fc>
   2bac0:	ldr	x2, [x1]
   2bac4:	cbz	x2, 2b274 <printf_parse@@Base+0xbd94>
   2bac8:	ldr	x0, [x2, #16]
   2bacc:	cmp	x0, #0x0
   2bad0:	ccmp	x1, x0, #0x4, ne  // ne = any
   2bad4:	b.ne	2baa8 <printf_parse@@Base+0xc5c8>  // b.any
   2bad8:	mov	x1, x2
   2badc:	ldrb	w0, [x1, #48]
   2bae0:	cmp	w0, #0x11
   2bae4:	b.ne	2bac0 <printf_parse@@Base+0xc5e0>  // b.any
   2bae8:	ldr	x0, [x1, #40]
   2baec:	cmp	x3, x0
   2baf0:	b.ne	2bac0 <printf_parse@@Base+0xc5e0>  // b.any
   2baf4:	ldrb	w0, [x1, #50]
   2baf8:	orr	w0, w0, #0x8
   2bafc:	strb	w0, [x1, #50]
   2bb00:	b	2bac0 <printf_parse@@Base+0xc5e0>
   2bb04:	cbz	x24, 2bc68 <printf_parse@@Base+0xc788>
   2bb08:	ldr	w3, [x27, #128]
   2bb0c:	cmp	w3, #0xf
   2bb10:	b.eq	2c308 <printf_parse@@Base+0xce28>  // b.none
   2bb14:	sbfiz	x2, x3, #6, #32
   2bb18:	sxtw	x1, w3
   2bb1c:	add	x21, x2, #0x8
   2bb20:	add	w3, w3, #0x1
   2bb24:	add	x2, x2, #0x30
   2bb28:	lsl	x1, x1, #6
   2bb2c:	add	x2, x28, x2
   2bb30:	add	x5, x28, x1
   2bb34:	add	x9, x1, #0x20
   2bb38:	str	w3, [x27, #128]
   2bb3c:	add	x3, x28, x9
   2bb40:	mov	w10, #0x10                  	// #16
   2bb44:	mov	x9, #0xffffffffffffffff    	// #-1
   2bb48:	stp	xzr, x24, [x5, #8]
   2bb4c:	add	x4, x28, x21
   2bb50:	str	x6, [x5, #24]
   2bb54:	strb	w10, [x2, #8]
   2bb58:	str	x4, [sp, #112]
   2bb5c:	ldrb	w0, [x3, #26]
   2bb60:	and	w0, w0, #0xfffffff3
   2bb64:	strb	w0, [x3, #26]
   2bb68:	stp	xzr, xzr, [x5, #32]
   2bb6c:	str	x9, [x5, #64]
   2bb70:	str	x4, [x24]
   2bb74:	str	x4, [x6]
   2bb78:	ldrb	w1, [x20, #8]
   2bb7c:	ldr	x0, [sp, #136]
   2bb80:	cmp	w1, #0xb
   2bb84:	cset	w2, eq  // eq = none
   2bb88:	cmp	w1, #0x17
   2bb8c:	cset	w3, eq  // eq = none
   2bb90:	cbz	x0, 2bba0 <printf_parse@@Base+0xc6c0>
   2bb94:	cmp	w3, #0x0
   2bb98:	ccmp	w2, #0x0, #0x0, eq  // eq = none
   2bb9c:	b.ne	2bdfc <printf_parse@@Base+0xc91c>  // b.any
   2bba0:	subs	w0, w1, #0x12
   2bba4:	cset	w28, eq  // eq = none
   2bba8:	cmp	w3, #0x0
   2bbac:	ccmp	w2, #0x0, #0x0, eq  // eq = none
   2bbb0:	and	w0, w0, #0xff
   2bbb4:	ccmp	w0, #0x1, #0x0, eq  // eq = none
   2bbb8:	b.hi	2c1e8 <printf_parse@@Base+0xcd08>  // b.pmore
   2bbbc:	ldr	x26, [x25, #72]
   2bbc0:	b	2b218 <printf_parse@@Base+0xbd38>
   2bbc4:	ldr	x0, [sp, #144]
   2bbc8:	ldr	w0, [x0]
   2bbcc:	cbnz	w0, 2bc18 <printf_parse@@Base+0xc738>
   2bbd0:	str	xzr, [sp, #112]
   2bbd4:	b	2bb78 <printf_parse@@Base+0xc698>
   2bbd8:	cmn	x19, #0x2
   2bbdc:	b.eq	2bbe8 <printf_parse@@Base+0xc708>  // b.none
   2bbe0:	cmp	w1, #0x1
   2bbe4:	b.eq	2d150 <printf_parse@@Base+0xdc70>  // b.none
   2bbe8:	ldr	x0, [sp, #152]
   2bbec:	cbz	x0, 2bce4 <printf_parse@@Base+0xc804>
   2bbf0:	str	x26, [x25, #72]
   2bbf4:	mov	w0, #0x1                   	// #1
   2bbf8:	ldp	x2, x3, [sp, #96]
   2bbfc:	stp	x2, x3, [x20]
   2bc00:	strb	w0, [x20, #8]
   2bc04:	ldr	x0, [sp, #144]
   2bc08:	ldr	w0, [x0]
   2bc0c:	cbz	w0, 2bb78 <printf_parse@@Base+0xc698>
   2bc10:	ldr	x0, [sp, #112]
   2bc14:	cbnz	x0, 2bb78 <printf_parse@@Base+0xc698>
   2bc18:	ldp	x23, x24, [sp, #48]
   2bc1c:	str	xzr, [sp, #112]
   2bc20:	b	2b64c <printf_parse@@Base+0xc16c>
   2bc24:	mov	x0, #0x3c8                 	// #968
   2bc28:	str	x5, [sp, #96]
   2bc2c:	str	w9, [sp, #120]
   2bc30:	bl	a5f0 <malloc@plt>
   2bc34:	mov	x28, x0
   2bc38:	cbz	x0, 2b978 <printf_parse@@Base+0xc498>
   2bc3c:	ldr	x0, [x27, #112]
   2bc40:	str	x0, [x28]
   2bc44:	ldr	w9, [sp, #120]
   2bc48:	mov	x1, #0x8                   	// #8
   2bc4c:	mov	w2, #0x1                   	// #1
   2bc50:	mov	x10, #0x30                  	// #48
   2bc54:	mov	x0, #0x0                   	// #0
   2bc58:	str	x28, [x27, #112]
   2bc5c:	ldr	x5, [sp, #96]
   2bc60:	b	2b2a4 <printf_parse@@Base+0xbdc4>
   2bc64:	mov	x6, x24
   2bc68:	str	x6, [sp, #112]
   2bc6c:	b	2bb78 <printf_parse@@Base+0xc698>
   2bc70:	cmn	x19, #0x1
   2bc74:	b.eq	2bcf0 <printf_parse@@Base+0xc810>  // b.none
   2bc78:	cmn	x19, #0x2
   2bc7c:	mov	x5, x19
   2bc80:	b.eq	2c798 <printf_parse@@Base+0xd2b8>  // b.none
   2bc84:	mov	x0, #0x7fff                	// #32767
   2bc88:	cmp	x19, x0
   2bc8c:	cset	x0, gt
   2bc90:	cbnz	x0, 2bdec <printf_parse@@Base+0xc90c>
   2bc94:	mov	x1, x25
   2bc98:	mov	x2, x22
   2bc9c:	mov	x0, x20
   2bca0:	str	x5, [sp, #96]
   2bca4:	bl	23260 <printf_parse@@Base+0x3d80>
   2bca8:	ldr	x1, [x25, #72]
   2bcac:	add	x0, x1, w0, sxtw
   2bcb0:	str	x0, [x25, #72]
   2bcb4:	ldr	x1, [sp, #112]
   2bcb8:	cbz	x1, 2bbc4 <printf_parse@@Base+0xc6e4>
   2bcbc:	ldr	x5, [sp, #96]
   2bcc0:	orr	x0, x19, x5
   2bcc4:	cbnz	x0, 2be38 <printf_parse@@Base+0xc958>
   2bcc8:	mov	x0, x1
   2bccc:	bl	240f8 <printf_parse@@Base+0x4c18>
   2bcd0:	ldr	x0, [sp, #144]
   2bcd4:	ldr	w0, [x0]
   2bcd8:	cbnz	w0, 2b984 <printf_parse@@Base+0xc4a4>
   2bcdc:	str	xzr, [sp, #112]
   2bce0:	b	2bb78 <printf_parse@@Base+0xc698>
   2bce4:	cmp	w1, #0x2
   2bce8:	b.eq	2c4e4 <printf_parse@@Base+0xd004>  // b.none
   2bcec:	nop
   2bcf0:	ldr	x1, [sp, #144]
   2bcf4:	mov	w0, #0xa                   	// #10
   2bcf8:	str	w0, [x1]
   2bcfc:	ldr	x0, [sp, #112]
   2bd00:	cbnz	x0, 2b984 <printf_parse@@Base+0xc4a4>
   2bd04:	ldp	x23, x24, [sp, #48]
   2bd08:	b	2bc1c <printf_parse@@Base+0xc73c>
   2bd0c:	sxtw	x19, w0
   2bd10:	b	2ba18 <printf_parse@@Base+0xc538>
   2bd14:	cmn	x19, #0x1
   2bd18:	b.ne	2bbd8 <printf_parse@@Base+0xc6f8>  // b.any
   2bd1c:	cmp	w1, #0x1
   2bd20:	b.ne	2bcf0 <printf_parse@@Base+0xc810>  // b.any
   2bd24:	mov	x5, #0x0                   	// #0
   2bd28:	mov	x19, #0xffffffffffffffff    	// #-1
   2bd2c:	mov	x28, #0x8030                	// #32816
   2bd30:	mov	x2, x22
   2bd34:	mov	x1, x25
   2bd38:	mov	x0, x20
   2bd3c:	str	x5, [sp, #120]
   2bd40:	bl	23260 <printf_parse@@Base+0x3d80>
   2bd44:	ldr	x3, [x25, #72]
   2bd48:	ldrb	w1, [x20, #8]
   2bd4c:	ldrb	w2, [x20]
   2bd50:	add	x0, x3, w0, sxtw
   2bd54:	str	x0, [x25, #72]
   2bd58:	cmp	w1, #0x2
   2bd5c:	b.eq	2c4dc <printf_parse@@Base+0xcffc>  // b.none
   2bd60:	cmp	w2, #0x2c
   2bd64:	ccmp	w1, #0x18, #0x4, ne  // ne = any
   2bd68:	ldr	x5, [sp, #120]
   2bd6c:	b.eq	2bdb8 <printf_parse@@Base+0xc8d8>  // b.none
   2bd70:	cmp	w1, #0x1
   2bd74:	b.eq	2bd80 <printf_parse@@Base+0xc8a0>  // b.none
   2bd78:	mov	x19, #0xfffffffffffffffe    	// #-2
   2bd7c:	b	2bd30 <printf_parse@@Base+0xc850>
   2bd80:	sub	w0, w2, #0x30
   2bd84:	and	w1, w0, #0xff
   2bd88:	cmp	w1, #0x9
   2bd8c:	ccmn	x19, #0x2, #0x4, ls  // ls = plast
   2bd90:	b.eq	2bd78 <printf_parse@@Base+0xc898>  // b.none
   2bd94:	cmn	x19, #0x1
   2bd98:	b.eq	2c698 <printf_parse@@Base+0xd1b8>  // b.none
   2bd9c:	add	x19, x19, x19, lsl #2
   2bda0:	and	x2, x2, #0xff
   2bda4:	add	x2, x2, x19, lsl #1
   2bda8:	cmp	x2, x28
   2bdac:	csel	x2, x2, x28, le
   2bdb0:	sub	x19, x2, #0x30
   2bdb4:	b	2bd30 <printf_parse@@Base+0xc850>
   2bdb8:	cmn	x19, #0x2
   2bdbc:	b.eq	2c798 <printf_parse@@Base+0xd2b8>  // b.none
   2bdc0:	cmp	x19, x5
   2bdc4:	ccmn	x19, #0x1, #0x4, lt  // lt = tstop
   2bdc8:	b.ne	2bcf0 <printf_parse@@Base+0xc810>  // b.any
   2bdcc:	cmp	w1, #0x18
   2bdd0:	b.ne	2bcf0 <printf_parse@@Base+0xc810>  // b.any
   2bdd4:	cmn	x19, #0x1
   2bdd8:	b.ne	2bc84 <printf_parse@@Base+0xc7a4>  // b.any
   2bddc:	mov	x0, #0x7fff                	// #32767
   2bde0:	cmp	x5, x0
   2bde4:	cset	x0, gt
   2bde8:	cbz	x0, 2bc94 <printf_parse@@Base+0xc7b4>
   2bdec:	ldr	x1, [sp, #144]
   2bdf0:	mov	w0, #0xf                   	// #15
   2bdf4:	str	w0, [x1]
   2bdf8:	b	2bcfc <printf_parse@@Base+0xc81c>
   2bdfc:	ldr	x0, [sp, #112]
   2be00:	cbz	x0, 2c300 <printf_parse@@Base+0xce20>
   2be04:	bl	240f8 <printf_parse@@Base+0x4c18>
   2be08:	ldp	x23, x24, [sp, #48]
   2be0c:	mov	w0, #0xd                   	// #13
   2be10:	ldr	x1, [sp, #144]
   2be14:	str	xzr, [sp, #112]
   2be18:	ldp	x19, x20, [sp, #16]
   2be1c:	str	w0, [x1]
   2be20:	ldp	x21, x22, [sp, #32]
   2be24:	ldp	x25, x26, [sp, #64]
   2be28:	ldp	x27, x28, [sp, #80]
   2be2c:	ldr	x0, [sp, #112]
   2be30:	ldp	x29, x30, [sp], #320
   2be34:	ret
   2be38:	cmp	x5, #0x0
   2be3c:	b.le	2d1a4 <printf_parse@@Base+0xdcc4>
   2be40:	cmp	x5, #0x1
   2be44:	b.eq	2d108 <printf_parse@@Base+0xdc28>  // b.none
   2be48:	movi	v0.4s, #0x0
   2be4c:	mov	x23, x1
   2be50:	ldr	x24, [x1]
   2be54:	mov	x26, x1
   2be58:	mov	x21, #0x2                   	// #2
   2be5c:	nop
   2be60:	ldr	w1, [x27, #128]
   2be64:	mov	x6, #0xffffffffffffffff    	// #-1
   2be68:	ldr	x28, [sp, #128]
   2be6c:	cmp	w1, #0xf
   2be70:	b.eq	2bf04 <printf_parse@@Base+0xca24>  // b.none
   2be74:	nop
   2be78:	ldr	x0, [x27, #112]
   2be7c:	sbfiz	x2, x1, #6, #32
   2be80:	add	w3, w1, #0x1
   2be84:	str	w3, [x27, #128]
   2be88:	add	x11, x0, x2
   2be8c:	add	x13, x2, #0x20
   2be90:	mov	w2, #0x40                  	// #64
   2be94:	add	x13, x0, x13
   2be98:	sxtw	x12, w1
   2be9c:	str	xzr, [x11, #24]
   2bea0:	smaddl	x1, w1, w2, x0
   2bea4:	stur	q0, [x11, #8]
   2bea8:	add	x1, x1, #0x8
   2beac:	ldp	x2, x3, [x26, #40]
   2beb0:	stp	x2, x3, [x11, #48]
   2beb4:	ldrb	w2, [x13, #26]
   2beb8:	and	w2, w2, #0xfffffff3
   2bebc:	strb	w2, [x13, #26]
   2bec0:	str	x6, [x11, #64]
   2bec4:	str	q0, [x11, #32]
   2bec8:	str	x1, [x28]
   2becc:	cbz	x1, 2c01c <printf_parse@@Base+0xcb3c>
   2bed0:	add	x0, x0, x12, lsl #6
   2bed4:	str	x24, [x0, #8]
   2bed8:	ldr	x24, [x28]
   2bedc:	ldrb	w0, [x24, #50]
   2bee0:	orr	w0, w0, #0x4
   2bee4:	strb	w0, [x24, #50]
   2bee8:	ldr	x0, [x26, #8]
   2beec:	cbz	x0, 2bf6c <printf_parse@@Base+0xca8c>
   2bef0:	add	x28, x24, #0x8
   2bef4:	mov	x26, x0
   2bef8:	ldr	w1, [x27, #128]
   2befc:	cmp	w1, #0xf
   2bf00:	b.ne	2be78 <printf_parse@@Base+0xc998>  // b.any
   2bf04:	mov	x0, #0x3c8                 	// #968
   2bf08:	str	x5, [sp, #96]
   2bf0c:	bl	a5f0 <malloc@plt>
   2bf10:	movi	v0.4s, #0x0
   2bf14:	mov	x6, #0xffffffffffffffff    	// #-1
   2bf18:	ldr	x5, [sp, #96]
   2bf1c:	cbz	x0, 2cfb4 <printf_parse@@Base+0xdad4>
   2bf20:	ldr	x1, [x27, #112]
   2bf24:	str	x1, [x0]
   2bf28:	mov	w2, #0x1                   	// #1
   2bf2c:	str	x0, [x27, #112]
   2bf30:	str	w2, [x27, #128]
   2bf34:	add	x1, x0, #0x8
   2bf38:	str	xzr, [x0, #24]
   2bf3c:	mov	x12, #0x0                   	// #0
   2bf40:	stur	q0, [x0, #8]
   2bf44:	ldp	x2, x3, [x26, #40]
   2bf48:	stp	x2, x3, [x0, #48]
   2bf4c:	ldrb	w2, [x0, #58]
   2bf50:	str	q0, [x0, #32]
   2bf54:	and	w2, w2, #0xfffffff3
   2bf58:	strb	w2, [x0, #58]
   2bf5c:	str	x6, [x0, #64]
   2bf60:	str	x1, [x28]
   2bf64:	b	2bed0 <printf_parse@@Base+0xc9f0>
   2bf68:	mov	x26, x1
   2bf6c:	ldr	x1, [x26, #16]
   2bf70:	cmp	x1, #0x0
   2bf74:	ccmp	x1, x0, #0x4, ne  // ne = any
   2bf78:	b.ne	2c068 <printf_parse@@Base+0xcb88>  // b.any
   2bf7c:	ldr	x1, [x26]
   2bf80:	mov	x0, x26
   2bf84:	ldr	x24, [x24]
   2bf88:	cbnz	x1, 2bf68 <printf_parse@@Base+0xca88>
   2bf8c:	ldr	x26, [sp, #288]
   2bf90:	ldr	w2, [x27, #128]
   2bf94:	cmp	w2, #0xf
   2bf98:	b.eq	2c02c <printf_parse@@Base+0xcb4c>  // b.none
   2bf9c:	sbfiz	x0, x2, #6, #32
   2bfa0:	sxtw	x1, w2
   2bfa4:	ldr	x4, [x27, #112]
   2bfa8:	add	x11, x0, #0x30
   2bfac:	add	x6, x0, #0x8
   2bfb0:	add	w2, w2, #0x1
   2bfb4:	lsl	x1, x1, #6
   2bfb8:	add	x11, x4, x11
   2bfbc:	add	x0, x4, x1
   2bfc0:	add	x3, x1, #0x20
   2bfc4:	str	w2, [x27, #128]
   2bfc8:	add	x2, x4, x3
   2bfcc:	mov	w3, #0x10                  	// #16
   2bfd0:	mov	x12, #0xffffffffffffffff    	// #-1
   2bfd4:	stp	xzr, x23, [x0, #8]
   2bfd8:	add	x24, x4, x6
   2bfdc:	str	x26, [x0, #24]
   2bfe0:	strb	w3, [x11, #8]
   2bfe4:	ldrb	w3, [x2, #26]
   2bfe8:	and	w3, w3, #0xfffffff3
   2bfec:	strb	w3, [x2, #26]
   2bff0:	str	x12, [x0, #64]
   2bff4:	str	q0, [x0, #32]
   2bff8:	str	x24, [x23]
   2bffc:	cbz	x26, 2b978 <printf_parse@@Base+0xc498>
   2c000:	str	x24, [x26]
   2c004:	cbz	x24, 2b978 <printf_parse@@Base+0xc498>
   2c008:	add	x21, x21, #0x1
   2c00c:	cmp	x21, x5
   2c010:	b.gt	2c080 <printf_parse@@Base+0xcba0>
   2c014:	mov	x23, x24
   2c018:	b	2be60 <printf_parse@@Base+0xc980>
   2c01c:	ldr	w2, [x27, #128]
   2c020:	mov	x26, #0x0                   	// #0
   2c024:	cmp	w2, #0xf
   2c028:	b.ne	2bf9c <printf_parse@@Base+0xcabc>  // b.any
   2c02c:	mov	x0, #0x3c8                 	// #968
   2c030:	str	x5, [sp, #96]
   2c034:	bl	a5f0 <malloc@plt>
   2c038:	mov	x4, x0
   2c03c:	cbz	x0, 2b978 <printf_parse@@Base+0xc498>
   2c040:	ldr	x0, [x27, #112]
   2c044:	str	x0, [x4]
   2c048:	movi	v0.4s, #0x0
   2c04c:	mov	w2, #0x1                   	// #1
   2c050:	mov	x6, #0x8                   	// #8
   2c054:	mov	x11, #0x30                  	// #48
   2c058:	mov	x1, #0x0                   	// #0
   2c05c:	str	x4, [x27, #112]
   2c060:	ldr	x5, [sp, #96]
   2c064:	b	2bfb4 <printf_parse@@Base+0xcad4>
   2c068:	mov	x0, x1
   2c06c:	add	x28, x24, #0x10
   2c070:	mov	x26, x0
   2c074:	b	2bef8 <printf_parse@@Base+0xca18>
   2c078:	mov	x24, x26
   2c07c:	mov	x5, #0x1                   	// #1
   2c080:	cmp	x5, x19
   2c084:	b.eq	2bc64 <printf_parse@@Base+0xc784>  // b.none
   2c088:	movi	v0.4s, #0x0
   2c08c:	mov	x21, #0xffffffffffffffff    	// #-1
   2c090:	ldr	x28, [x26]
   2c094:	ldr	x9, [sp, #128]
   2c098:	b	2c0a4 <printf_parse@@Base+0xcbc4>
   2c09c:	mov	x26, x0
   2c0a0:	add	x9, x28, #0x8
   2c0a4:	ldr	w1, [x27, #128]
   2c0a8:	cmp	w1, #0xf
   2c0ac:	b.eq	2c150 <printf_parse@@Base+0xcc70>  // b.none
   2c0b0:	ldr	x0, [x27, #112]
   2c0b4:	sbfiz	x2, x1, #6, #32
   2c0b8:	add	w3, w1, #0x1
   2c0bc:	str	w3, [x27, #128]
   2c0c0:	add	x11, x0, x2
   2c0c4:	add	x12, x2, #0x20
   2c0c8:	mov	w2, #0x40                  	// #64
   2c0cc:	add	x12, x0, x12
   2c0d0:	sxtw	x13, w1
   2c0d4:	str	xzr, [x11, #24]
   2c0d8:	smaddl	x1, w1, w2, x0
   2c0dc:	stur	q0, [x11, #8]
   2c0e0:	add	x1, x1, #0x8
   2c0e4:	ldp	x2, x3, [x26, #40]
   2c0e8:	stp	x2, x3, [x11, #48]
   2c0ec:	ldrb	w2, [x12, #26]
   2c0f0:	and	w2, w2, #0xfffffff3
   2c0f4:	strb	w2, [x12, #26]
   2c0f8:	str	x21, [x11, #64]
   2c0fc:	str	q0, [x11, #32]
   2c100:	str	x1, [x9]
   2c104:	cbz	x1, 2b978 <printf_parse@@Base+0xc498>
   2c108:	add	x0, x0, x13, lsl #6
   2c10c:	str	x28, [x0, #8]
   2c110:	ldr	x28, [x9]
   2c114:	ldrb	w0, [x28, #50]
   2c118:	orr	w0, w0, #0x4
   2c11c:	strb	w0, [x28, #50]
   2c120:	ldr	x0, [x26, #8]
   2c124:	cbnz	x0, 2c09c <printf_parse@@Base+0xcbbc>
   2c128:	ldr	x1, [x26, #16]
   2c12c:	cmp	x1, #0x0
   2c130:	ccmp	x1, x0, #0x4, ne  // ne = any
   2c134:	b.eq	2c1cc <printf_parse@@Base+0xccec>  // b.none
   2c138:	mov	x26, x1
   2c13c:	ldr	w1, [x27, #128]
   2c140:	add	x9, x28, #0x10
   2c144:	cmp	w1, #0xf
   2c148:	b.ne	2c0b0 <printf_parse@@Base+0xcbd0>  // b.any
   2c14c:	nop
   2c150:	mov	x0, #0x3c8                 	// #968
   2c154:	str	x5, [sp, #96]
   2c158:	str	x9, [sp, #120]
   2c15c:	bl	a5f0 <malloc@plt>
   2c160:	movi	v0.4s, #0x0
   2c164:	ldr	x5, [sp, #96]
   2c168:	ldr	x9, [sp, #120]
   2c16c:	cbz	x0, 2b970 <printf_parse@@Base+0xc490>
   2c170:	ldr	x1, [x27, #112]
   2c174:	str	x1, [x0]
   2c178:	mov	w2, #0x1                   	// #1
   2c17c:	str	x0, [x27, #112]
   2c180:	str	w2, [x27, #128]
   2c184:	add	x1, x0, #0x8
   2c188:	str	xzr, [x0, #24]
   2c18c:	mov	x13, #0x0                   	// #0
   2c190:	stur	q0, [x0, #8]
   2c194:	ldp	x2, x3, [x26, #40]
   2c198:	stp	x2, x3, [x0, #48]
   2c19c:	ldrb	w2, [x0, #58]
   2c1a0:	str	q0, [x0, #32]
   2c1a4:	and	w2, w2, #0xfffffff3
   2c1a8:	strb	w2, [x0, #58]
   2c1ac:	str	x21, [x0, #64]
   2c1b0:	str	x1, [x9]
   2c1b4:	b	2c108 <printf_parse@@Base+0xcc28>
   2c1b8:	mov	x26, x1
   2c1bc:	ldr	x1, [x26, #16]
   2c1c0:	cmp	x1, #0x0
   2c1c4:	ccmp	x1, x0, #0x4, ne  // ne = any
   2c1c8:	b.ne	2c138 <printf_parse@@Base+0xcc58>  // b.any
   2c1cc:	ldr	x1, [x26]
   2c1d0:	mov	x0, x26
   2c1d4:	ldr	x28, [x28]
   2c1d8:	cbnz	x1, 2c1b8 <printf_parse@@Base+0xccd8>
   2c1dc:	ldr	x26, [sp, #288]
   2c1e0:	cbnz	x26, 2b268 <printf_parse@@Base+0xbd88>
   2c1e4:	b	2b978 <printf_parse@@Base+0xc498>
   2c1e8:	ldp	x19, x20, [sp, #16]
   2c1ec:	ldp	x21, x22, [sp, #32]
   2c1f0:	ldp	x23, x24, [sp, #48]
   2c1f4:	ldp	x25, x26, [sp, #64]
   2c1f8:	ldp	x27, x28, [sp, #80]
   2c1fc:	ldr	x0, [sp, #112]
   2c200:	ldp	x29, x30, [sp], #320
   2c204:	ret
   2c208:	cmp	w1, #0x3
   2c20c:	b.ne	2c268 <printf_parse@@Base+0xcd88>  // b.any
   2c210:	ldr	x1, [sp, #216]
   2c214:	str	x1, [sp, #112]
   2c218:	mov	x0, x1
   2c21c:	bl	a340 <strlen@plt>
   2c220:	cmp	x0, #0x1
   2c224:	b.ne	2cb38 <printf_parse@@Base+0xd658>  // b.any
   2c228:	ldr	x1, [sp, #112]
   2c22c:	ldr	x2, [sp, #144]
   2c230:	ldrb	w1, [x1]
   2c234:	str	wzr, [x2]
   2c238:	ubfx	x2, x1, #6, #2
   2c23c:	lsl	x0, x0, x1
   2c240:	ldr	x1, [x19, x2, lsl #3]
   2c244:	orr	x0, x1, x0
   2c248:	str	x0, [x19, x2, lsl #3]
   2c24c:	ldrb	w0, [x20, #8]
   2c250:	cmp	w0, #0x2
   2c254:	b.eq	2c7c4 <printf_parse@@Base+0xd2e4>  // b.none
   2c258:	cmp	w0, #0x15
   2c25c:	b.eq	2cc34 <printf_parse@@Base+0xd754>  // b.none
   2c260:	mov	w5, #0x0                   	// #0
   2c264:	b	2b574 <printf_parse@@Base+0xc094>
   2c268:	cmp	w1, #0x4
   2c26c:	b.ne	2d178 <printf_parse@@Base+0xdc98>  // b.any
   2c270:	ldr	x0, [x25, #120]
   2c274:	mov	x1, x19
   2c278:	ldr	x4, [sp, #136]
   2c27c:	mov	x6, x22
   2c280:	ldr	x5, [sp, #216]
   2c284:	add	x3, x23, #0x48
   2c288:	add	x2, x23, #0x18
   2c28c:	bl	22638 <printf_parse@@Base+0x3158>
   2c290:	ldr	x1, [sp, #144]
   2c294:	str	w0, [x1]
   2c298:	cbz	w0, 2c24c <printf_parse@@Base+0xcd6c>
   2c29c:	mov	x0, x19
   2c2a0:	bl	aa50 <free@plt>
   2c2a4:	ldr	x0, [x23]
   2c2a8:	bl	aa50 <free@plt>
   2c2ac:	ldr	x0, [x23, #8]
   2c2b0:	bl	aa50 <free@plt>
   2c2b4:	ldr	x0, [x23, #16]
   2c2b8:	bl	aa50 <free@plt>
   2c2bc:	ldr	x0, [x23, #24]
   2c2c0:	bl	aa50 <free@plt>
   2c2c4:	mov	x0, x23
   2c2c8:	bl	aa50 <free@plt>
   2c2cc:	ldr	x0, [sp, #144]
   2c2d0:	ldr	w0, [x0]
   2c2d4:	cbnz	w0, 2bc18 <printf_parse@@Base+0xc738>
   2c2d8:	str	xzr, [sp, #112]
   2c2dc:	ldp	x23, x24, [sp, #48]
   2c2e0:	b	2b1bc <printf_parse@@Base+0xbcdc>
   2c2e4:	tbnz	w3, #24, 2be0c <printf_parse@@Base+0xc92c>
   2c2e8:	tbnz	w22, #5, 2be0c <printf_parse@@Base+0xc92c>
   2c2ec:	tbnz	w22, #4, 2c7d4 <printf_parse@@Base+0xd2f4>
   2c2f0:	cmp	w19, #0x9
   2c2f4:	b.ne	2b14c <printf_parse@@Base+0xbc6c>  // b.any
   2c2f8:	tbnz	w22, #17, 2b14c <printf_parse@@Base+0xbc6c>
   2c2fc:	b	2b41c <printf_parse@@Base+0xbf3c>
   2c300:	ldp	x23, x24, [sp, #48]
   2c304:	b	2be0c <printf_parse@@Base+0xc92c>
   2c308:	mov	x0, #0x3c8                 	// #968
   2c30c:	str	x6, [sp, #96]
   2c310:	bl	a5f0 <malloc@plt>
   2c314:	ldr	x6, [sp, #96]
   2c318:	cbz	x0, 2d0cc <printf_parse@@Base+0xdbec>
   2c31c:	str	x28, [x0]
   2c320:	mov	x2, #0x30                  	// #48
   2c324:	mov	x28, x0
   2c328:	mov	w3, #0x1                   	// #1
   2c32c:	mov	x21, #0x8                   	// #8
   2c330:	mov	x1, #0x0                   	// #0
   2c334:	str	x0, [x27, #112]
   2c338:	b	2bb28 <printf_parse@@Base+0xc648>
   2c33c:	cmp	w19, #0x21
   2c340:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   2c344:	adrp	x2, 34000 <vasnprintf@@Base+0x3848>
   2c348:	cset	w4, eq  // eq = none
   2c34c:	add	x3, x3, #0x1e8
   2c350:	add	x2, x2, #0x170
   2c354:	ldr	x1, [x0, #120]
   2c358:	b	2b628 <printf_parse@@Base+0xc148>
   2c35c:	stp	x23, x24, [sp, #48]
   2c360:	orr	x2, x3, #0x800000
   2c364:	mov	x1, x0
   2c368:	ldr	x23, [x21, #48]
   2c36c:	mov	x0, x20
   2c370:	str	x4, [sp, #112]
   2c374:	mov	x19, #0x0                   	// #0
   2c378:	add	x3, x23, #0x1
   2c37c:	str	x3, [x21, #48]
   2c380:	bl	23260 <printf_parse@@Base+0x3d80>
   2c384:	ldr	x2, [x25, #72]
   2c388:	ldrb	w1, [x20, #8]
   2c38c:	add	x0, x2, w0, sxtw
   2c390:	str	x0, [x25, #72]
   2c394:	cmp	w1, #0x9
   2c398:	b.ne	2c4f4 <printf_parse@@Base+0xd014>  // b.any
   2c39c:	cmp	x23, #0x8
   2c3a0:	b.ls	2c554 <printf_parse@@Base+0xd074>  // b.plast
   2c3a4:	ldr	w0, [x27, #128]
   2c3a8:	cmp	w0, #0xf
   2c3ac:	b.eq	2cb58 <printf_parse@@Base+0xd678>  // b.none
   2c3b0:	sbfiz	x1, x0, #6, #32
   2c3b4:	sxtw	x3, w0
   2c3b8:	add	w2, w0, #0x1
   2c3bc:	add	x4, x1, #0x30
   2c3c0:	ldr	x0, [x27, #112]
   2c3c4:	add	x21, x1, #0x8
   2c3c8:	lsl	x1, x3, #6
   2c3cc:	add	x6, x0, x4
   2c3d0:	add	x4, x0, x1
   2c3d4:	add	x5, x1, #0x20
   2c3d8:	str	w2, [x27, #128]
   2c3dc:	add	x2, x0, x5
   2c3e0:	mov	w5, #0x11                  	// #17
   2c3e4:	add	x7, x0, x21
   2c3e8:	stp	xzr, x19, [x4, #8]
   2c3ec:	mov	x9, #0xffffffffffffffff    	// #-1
   2c3f0:	str	xzr, [x4, #24]
   2c3f4:	strb	w5, [x6, #8]
   2c3f8:	str	x7, [sp, #112]
   2c3fc:	ldrb	w5, [x2, #26]
   2c400:	and	w5, w5, #0xfffffff3
   2c404:	strb	w5, [x2, #26]
   2c408:	stp	xzr, xzr, [x4, #32]
   2c40c:	str	x9, [x4, #64]
   2c410:	cbz	x19, 2c418 <printf_parse@@Base+0xcf38>
   2c414:	str	x7, [x19]
   2c418:	ldr	x1, [sp, #112]
   2c41c:	cbz	x1, 2b814 <printf_parse@@Base+0xc334>
   2c420:	add	x0, x0, x3, lsl #6
   2c424:	str	x23, [x0, #48]
   2c428:	ldp	x23, x24, [sp, #48]
   2c42c:	b	2b1bc <printf_parse@@Base+0xbcdc>
   2c430:	ldr	x0, [x2]
   2c434:	mov	w19, #0x1                   	// #1
   2c438:	ldr	x1, [x27, #168]
   2c43c:	lsl	w0, w19, w0
   2c440:	sxtw	x0, w0
   2c444:	tst	x0, x1
   2c448:	b.eq	2cb48 <printf_parse@@Base+0xd668>  // b.none
   2c44c:	ldr	x2, [x27, #160]
   2c450:	ldr	w1, [x27, #128]
   2c454:	orr	x0, x2, x0
   2c458:	str	x0, [x27, #160]
   2c45c:	cmp	w1, #0xf
   2c460:	b.eq	2cb84 <printf_parse@@Base+0xd6a4>  // b.none
   2c464:	ldr	x21, [x27, #112]
   2c468:	sbfiz	x0, x1, #6, #32
   2c46c:	movi	v0.4s, #0x0
   2c470:	add	w2, w1, #0x1
   2c474:	add	x4, x21, x0
   2c478:	str	w2, [x27, #128]
   2c47c:	mov	w2, #0x40                  	// #64
   2c480:	add	x5, x0, #0x20
   2c484:	add	x5, x21, x5
   2c488:	mov	x6, #0xffffffffffffffff    	// #-1
   2c48c:	str	xzr, [x4, #24]
   2c490:	smaddl	x1, w1, w2, x21
   2c494:	stur	q0, [x4, #8]
   2c498:	adds	x1, x1, #0x8
   2c49c:	ldp	x2, x3, [x20]
   2c4a0:	stp	x2, x3, [x4, #48]
   2c4a4:	str	x1, [sp, #112]
   2c4a8:	ldrb	w1, [x5, #26]
   2c4ac:	and	w1, w1, #0xfffffff3
   2c4b0:	strb	w1, [x5, #26]
   2c4b4:	str	x6, [x4, #64]
   2c4b8:	str	q0, [x4, #32]
   2c4bc:	b.eq	2b818 <printf_parse@@Base+0xc338>  // b.none
   2c4c0:	ldr	x0, [x27, #152]
   2c4c4:	ldrb	w1, [x27, #176]
   2c4c8:	add	x0, x0, #0x1
   2c4cc:	str	x0, [x27, #152]
   2c4d0:	orr	w1, w1, #0x2
   2c4d4:	strb	w1, [x27, #176]
   2c4d8:	b	2b1bc <printf_parse@@Base+0xbcdc>
   2c4dc:	ldr	x0, [sp, #152]
   2c4e0:	cbnz	x0, 2bbf0 <printf_parse@@Base+0xc710>
   2c4e4:	ldr	x1, [sp, #144]
   2c4e8:	mov	w0, #0x9                   	// #9
   2c4ec:	str	w0, [x1]
   2c4f0:	b	2bcfc <printf_parse@@Base+0xc81c>
   2c4f4:	ldr	x4, [sp, #112]
   2c4f8:	mov	x1, x21
   2c4fc:	ldr	x19, [sp, #144]
   2c500:	mov	x3, x22
   2c504:	mov	x2, x20
   2c508:	mov	x0, x25
   2c50c:	mov	x5, x19
   2c510:	add	x4, x4, #0x1
   2c514:	bl	2d498 <printf_parse@@Base+0xdfb8>
   2c518:	mov	x1, x19
   2c51c:	mov	x19, x0
   2c520:	ldr	w1, [x1]
   2c524:	cbnz	w1, 2bc18 <printf_parse@@Base+0xc738>
   2c528:	ldrb	w1, [x20, #8]
   2c52c:	cmp	w1, #0x9
   2c530:	b.eq	2c39c <printf_parse@@Base+0xcebc>  // b.none
   2c534:	cbz	x0, 2c53c <printf_parse@@Base+0xd05c>
   2c538:	bl	240f8 <printf_parse@@Base+0x4c18>
   2c53c:	ldr	x1, [sp, #144]
   2c540:	mov	w0, #0x8                   	// #8
   2c544:	str	xzr, [sp, #112]
   2c548:	ldp	x23, x24, [sp, #48]
   2c54c:	str	w0, [x1]
   2c550:	b	2b64c <printf_parse@@Base+0xc16c>
   2c554:	mov	w0, #0x1                   	// #1
   2c558:	ldr	x1, [x27, #168]
   2c55c:	lsl	w0, w0, w23
   2c560:	sxtw	x0, w0
   2c564:	orr	x0, x1, x0
   2c568:	str	x0, [x27, #168]
   2c56c:	b	2c3a4 <printf_parse@@Base+0xcec4>
   2c570:	ldr	w0, [x27, #128]
   2c574:	cmp	w0, #0xf
   2c578:	b.eq	2ce14 <printf_parse@@Base+0xd934>  // b.none
   2c57c:	ldr	x21, [x27, #112]
   2c580:	sbfiz	x1, x0, #6, #32
   2c584:	movi	v0.4s, #0x0
   2c588:	add	w3, w0, #0x1
   2c58c:	add	x2, x21, x1
   2c590:	str	w3, [x27, #128]
   2c594:	mov	w4, #0x40                  	// #64
   2c598:	add	x3, x1, #0x20
   2c59c:	add	x3, x21, x3
   2c5a0:	mov	x6, #0xffffffffffffffff    	// #-1
   2c5a4:	str	xzr, [x2, #24]
   2c5a8:	smaddl	x0, w0, w4, x21
   2c5ac:	stur	q0, [x2, #8]
   2c5b0:	adds	x0, x0, #0x8
   2c5b4:	ldp	x4, x5, [x20]
   2c5b8:	stp	x4, x5, [x2, #48]
   2c5bc:	str	x0, [sp, #112]
   2c5c0:	ldrb	w0, [x3, #26]
   2c5c4:	and	w0, w0, #0xfffffff3
   2c5c8:	strb	w0, [x3, #26]
   2c5cc:	str	x6, [x2, #64]
   2c5d0:	str	q0, [x2, #32]
   2c5d4:	b.ne	2b0f0 <printf_parse@@Base+0xbc10>  // b.any
   2c5d8:	ldp	x23, x24, [sp, #48]
   2c5dc:	b	2b818 <printf_parse@@Base+0xc338>
   2c5e0:	mov	x0, #0x3c8                 	// #968
   2c5e4:	bl	a5f0 <malloc@plt>
   2c5e8:	cbz	x0, 2b818 <printf_parse@@Base+0xc338>
   2c5ec:	ldr	x1, [x27, #112]
   2c5f0:	str	x1, [x0]
   2c5f4:	mov	w1, #0x1                   	// #1
   2c5f8:	str	w1, [x27, #128]
   2c5fc:	str	x0, [x27, #112]
   2c600:	add	x1, x0, #0x8
   2c604:	ldp	x4, x5, [x20]
   2c608:	stp	x4, x5, [x0, #48]
   2c60c:	mov	x2, #0xffffffffffffffff    	// #-1
   2c610:	movi	v0.4s, #0x0
   2c614:	str	x1, [sp, #112]
   2c618:	ldrb	w1, [x0, #58]
   2c61c:	str	xzr, [x0, #24]
   2c620:	and	w1, w1, #0xfffffff3
   2c624:	strb	w1, [x0, #58]
   2c628:	stur	q0, [x0, #8]
   2c62c:	str	q0, [x0, #32]
   2c630:	str	x2, [x0, #64]
   2c634:	b	2b1bc <printf_parse@@Base+0xbcdc>
   2c638:	mov	w0, #0x1                   	// #1
   2c63c:	strb	w0, [x20, #8]
   2c640:	b	2b53c <printf_parse@@Base+0xc05c>
   2c644:	ldrb	w0, [x23, #32]
   2c648:	orr	w0, w0, #0x1
   2c64c:	strb	w0, [x23, #32]
   2c650:	tbz	w22, #8, 2c660 <printf_parse@@Base+0xd180>
   2c654:	ldr	x0, [x19]
   2c658:	orr	x0, x0, #0x400
   2c65c:	str	x0, [x19]
   2c660:	ldr	x3, [x25, #72]
   2c664:	mov	x1, x25
   2c668:	mov	x2, x22
   2c66c:	mov	x0, x20
   2c670:	add	x9, x3, w28, sxtw
   2c674:	str	x9, [x25, #72]
   2c678:	bl	20070 <printf_parse@@Base+0xb90>
   2c67c:	mov	w28, w0
   2c680:	ldrb	w1, [x20, #8]
   2c684:	cmp	w1, #0x2
   2c688:	b.eq	2caf0 <printf_parse@@Base+0xd610>  // b.none
   2c68c:	mov	w0, #0x1                   	// #1
   2c690:	str	w0, [sp, #128]
   2c694:	b	2b534 <printf_parse@@Base+0xc054>
   2c698:	sxtw	x19, w0
   2c69c:	b	2bd30 <printf_parse@@Base+0xc850>
   2c6a0:	mov	x0, #0x3c8                 	// #968
   2c6a4:	bl	a5f0 <malloc@plt>
   2c6a8:	cbz	x0, 2b818 <printf_parse@@Base+0xc338>
   2c6ac:	ldr	x1, [x27, #112]
   2c6b0:	str	x1, [x0]
   2c6b4:	mov	w1, #0x1                   	// #1
   2c6b8:	str	w1, [x27, #128]
   2c6bc:	str	x0, [x27, #112]
   2c6c0:	add	x1, x0, #0x8
   2c6c4:	ldp	x2, x3, [x20]
   2c6c8:	stp	x2, x3, [x0, #48]
   2c6cc:	movi	v0.4s, #0x0
   2c6d0:	str	x1, [sp, #112]
   2c6d4:	ldrb	w1, [x0, #58]
   2c6d8:	mov	x2, #0xffffffffffffffff    	// #-1
   2c6dc:	str	xzr, [x0, #24]
   2c6e0:	and	w1, w1, #0xfffffff3
   2c6e4:	strb	w1, [x0, #58]
   2c6e8:	stur	q0, [x0, #8]
   2c6ec:	str	q0, [x0, #32]
   2c6f0:	str	x2, [x0, #64]
   2c6f4:	b	2b4a8 <printf_parse@@Base+0xbfc8>
   2c6f8:	mov	x0, #0x3c8                 	// #968
   2c6fc:	bl	a5f0 <malloc@plt>
   2c700:	cbz	x0, 2b818 <printf_parse@@Base+0xc338>
   2c704:	ldr	x1, [x27, #112]
   2c708:	str	x1, [x0]
   2c70c:	str	w19, [x27, #128]
   2c710:	add	x1, x0, #0x8
   2c714:	str	x0, [x27, #112]
   2c718:	mov	x2, #0xffffffffffffffff    	// #-1
   2c71c:	ldp	x4, x5, [x20]
   2c720:	stp	x4, x5, [x0, #48]
   2c724:	movi	v0.4s, #0x0
   2c728:	str	x1, [sp, #112]
   2c72c:	ldrb	w1, [x0, #58]
   2c730:	str	xzr, [x0, #24]
   2c734:	and	w1, w1, #0xfffffff3
   2c738:	strb	w1, [x0, #58]
   2c73c:	stur	q0, [x0, #8]
   2c740:	str	q0, [x0, #32]
   2c744:	str	x2, [x0, #64]
   2c748:	b	2b6d8 <printf_parse@@Base+0xc1f8>
   2c74c:	mov	x0, x19
   2c750:	str	xzr, [sp, #112]
   2c754:	bl	aa50 <free@plt>
   2c758:	mov	x0, x23
   2c75c:	bl	aa50 <free@plt>
   2c760:	ldr	x1, [sp, #144]
   2c764:	mov	w0, #0xc                   	// #12
   2c768:	ldp	x23, x24, [sp, #48]
   2c76c:	str	w0, [x1]
   2c770:	b	2b110 <printf_parse@@Base+0xbc30>
   2c774:	lsl	x1, x2, #1
   2c778:	add	x1, x1, #0x1
   2c77c:	str	x1, [sp, #96]
   2c780:	lsl	x1, x1, #2
   2c784:	bl	a7e0 <realloc@plt>
   2c788:	cbz	x0, 2c878 <printf_parse@@Base+0xd398>
   2c78c:	str	x0, [x23]
   2c790:	ldr	x1, [x23, #40]
   2c794:	b	2b5f4 <printf_parse@@Base+0xc114>
   2c798:	ldr	x0, [sp, #152]
   2c79c:	cbnz	x0, 2bbf0 <printf_parse@@Base+0xc710>
   2c7a0:	b	2bcf0 <printf_parse@@Base+0xc810>
   2c7a4:	ldrb	w1, [sp, #216]
   2c7a8:	mov	x0, #0x1                   	// #1
   2c7ac:	ubfx	x2, x1, #6, #2
   2c7b0:	lsl	x1, x0, x1
   2c7b4:	ldr	x0, [x19, x2, lsl #3]
   2c7b8:	orr	x0, x0, x1
   2c7bc:	str	x0, [x19, x2, lsl #3]
   2c7c0:	b	2c24c <printf_parse@@Base+0xcd6c>
   2c7c4:	ldr	x1, [sp, #144]
   2c7c8:	mov	w0, #0x7                   	// #7
   2c7cc:	str	w0, [x1]
   2c7d0:	b	2c29c <printf_parse@@Base+0xcdbc>
   2c7d4:	mov	x2, x22
   2c7d8:	mov	x1, x25
   2c7dc:	mov	x0, x20
   2c7e0:	str	x4, [sp, #112]
   2c7e4:	bl	23260 <printf_parse@@Base+0x3d80>
   2c7e8:	mov	w6, w0
   2c7ec:	ldr	x7, [x25, #72]
   2c7f0:	mov	x3, x22
   2c7f4:	ldr	x4, [sp, #112]
   2c7f8:	mov	x2, x20
   2c7fc:	ldr	x5, [sp, #144]
   2c800:	add	x6, x7, w6, sxtw
   2c804:	str	x6, [x25, #72]
   2c808:	mov	x1, x21
   2c80c:	mov	x0, x25
   2c810:	bl	2aee0 <printf_parse@@Base+0xba00>
   2c814:	str	x0, [sp, #112]
   2c818:	b	2b110 <printf_parse@@Base+0xbc30>
   2c81c:	mov	x0, #0x3c8                 	// #968
   2c820:	bl	a5f0 <malloc@plt>
   2c824:	cbz	x0, 2b814 <printf_parse@@Base+0xc334>
   2c828:	ldr	x1, [x27, #112]
   2c82c:	str	x1, [x0]
   2c830:	movi	v0.4s, #0x0
   2c834:	mov	x2, #0x30                  	// #48
   2c838:	mov	w3, #0x1                   	// #1
   2c83c:	mov	x6, #0x8                   	// #8
   2c840:	mov	x1, #0x0                   	// #0
   2c844:	str	x0, [x27, #112]
   2c848:	b	2b7c8 <printf_parse@@Base+0xc2e8>
   2c84c:	mov	x0, #0x3c8                 	// #968
   2c850:	bl	a5f0 <malloc@plt>
   2c854:	movi	v0.4s, #0x0
   2c858:	cbz	x0, 2d0c4 <printf_parse@@Base+0xdbe4>
   2c85c:	ldr	x1, [x27, #112]
   2c860:	str	x1, [x0]
   2c864:	mov	w2, #0x1                   	// #1
   2c868:	mov	x23, #0x8                   	// #8
   2c86c:	mov	w1, #0x0                   	// #0
   2c870:	str	x0, [x27, #112]
   2c874:	b	2b768 <printf_parse@@Base+0xc288>
   2c878:	mov	w0, #0xc                   	// #12
   2c87c:	ldr	x1, [sp, #144]
   2c880:	str	w0, [x1]
   2c884:	b	2c29c <printf_parse@@Base+0xcdbc>
   2c888:	ldp	x23, x24, [sp, #48]
   2c88c:	b	2b1bc <printf_parse@@Base+0xbcdc>
   2c890:	mov	w0, #0x6                   	// #6
   2c894:	str	w0, [x20]
   2c898:	ldr	w0, [x27, #128]
   2c89c:	cmp	w0, #0xf
   2c8a0:	b.eq	2cfc0 <printf_parse@@Base+0xdae0>  // b.none
   2c8a4:	mov	x23, #0x8                   	// #8
   2c8a8:	mov	w2, #0x40                  	// #64
   2c8ac:	add	w3, w0, #0x1
   2c8b0:	smaddl	x2, w0, w2, x23
   2c8b4:	ldr	x23, [x27, #112]
   2c8b8:	sbfiz	x0, x0, #6, #32
   2c8bc:	add	x1, x23, x0
   2c8c0:	str	w3, [x27, #128]
   2c8c4:	movi	v0.4s, #0x0
   2c8c8:	add	x4, x0, #0x20
   2c8cc:	add	x4, x23, x4
   2c8d0:	add	x23, x23, x2
   2c8d4:	str	xzr, [x1, #24]
   2c8d8:	mov	x5, #0xffffffffffffffff    	// #-1
   2c8dc:	stur	q0, [x1, #8]
   2c8e0:	ldp	x2, x3, [x20]
   2c8e4:	stp	x2, x3, [x1, #48]
   2c8e8:	ldrb	w2, [x4, #26]
   2c8ec:	and	w2, w2, #0xfffffff3
   2c8f0:	strb	w2, [x4, #26]
   2c8f4:	str	x5, [x1, #64]
   2c8f8:	str	q0, [x1, #32]
   2c8fc:	mov	w0, #0x9                   	// #9
   2c900:	str	w0, [x20]
   2c904:	b	2b00c <printf_parse@@Base+0xbb2c>
   2c908:	cbz	x19, 2b814 <printf_parse@@Base+0xc334>
   2c90c:	ldp	x23, x24, [sp, #48]
   2c910:	str	x6, [x19]
   2c914:	b	2b818 <printf_parse@@Base+0xc338>
   2c918:	ldr	x3, [x25, #72]
   2c91c:	mov	x1, x25
   2c920:	ldr	x7, [sp, #160]
   2c924:	mov	x2, x22
   2c928:	add	x3, x3, w28, sxtw
   2c92c:	str	x3, [x25, #72]
   2c930:	mov	x0, x7
   2c934:	bl	20070 <printf_parse@@Base+0xb90>
   2c938:	mov	w3, w0
   2c93c:	ldrb	w1, [sp, #248]
   2c940:	cmp	w1, #0x2
   2c944:	b.eq	2c7c4 <printf_parse@@Base+0xd2e4>  // b.none
   2c948:	cmp	w1, #0x15
   2c94c:	b.eq	2cb00 <printf_parse@@Base+0xd620>  // b.none
   2c950:	ldp	x6, x0, [sp, #168]
   2c954:	mov	x4, x22
   2c958:	mov	x2, x7
   2c95c:	mov	x1, x25
   2c960:	mov	w5, #0x1                   	// #1
   2c964:	str	w21, [sp, #224]
   2c968:	str	x6, [sp, #232]
   2c96c:	bl	238c8 <printf_parse@@Base+0x43e8>
   2c970:	cbnz	w0, 2c87c <printf_parse@@Base+0xd39c>
   2c974:	mov	x2, x22
   2c978:	mov	x1, x25
   2c97c:	mov	x0, x20
   2c980:	bl	20070 <printf_parse@@Base+0xb90>
   2c984:	ldr	w1, [x27, #180]
   2c988:	mov	w28, w0
   2c98c:	ldr	w2, [sp, #208]
   2c990:	cmp	w1, #0x2
   2c994:	csel	x1, x23, xzr, ge  // ge = tcont
   2c998:	str	x1, [sp, #112]
   2c99c:	sub	w0, w2, #0x2
   2c9a0:	tst	w0, #0xfffffffd
   2c9a4:	b.eq	2cfa4 <printf_parse@@Base+0xdac4>  // b.none
   2c9a8:	ldr	w1, [sp, #224]
   2c9ac:	sub	w0, w1, #0x2
   2c9b0:	tst	w0, #0xfffffffd
   2c9b4:	b.eq	2cfa4 <printf_parse@@Base+0xdac4>  // b.none
   2c9b8:	cmp	w2, #0x3
   2c9bc:	cset	w0, eq  // eq = none
   2c9c0:	str	w0, [sp, #152]
   2c9c4:	b.eq	2d124 <printf_parse@@Base+0xdc44>  // b.none
   2c9c8:	cmp	w1, #0x3
   2c9cc:	b.eq	2d0e0 <printf_parse@@Base+0xdc00>  // b.none
   2c9d0:	cbnz	w2, 2cac8 <printf_parse@@Base+0xd5e8>
   2c9d4:	ldrb	w3, [sp, #216]
   2c9d8:	ldr	w0, [sp, #152]
   2c9dc:	cmp	w2, #0x0
   2c9e0:	csinc	w0, w0, wzr, ne  // ne = any
   2c9e4:	cbz	w1, 2cff0 <printf_parse@@Base+0xdb10>
   2c9e8:	cmp	w1, #0x3
   2c9ec:	b.ne	2cad4 <printf_parse@@Base+0xd5f4>  // b.any
   2c9f0:	ldr	x2, [sp, #232]
   2c9f4:	ldrb	w4, [x2]
   2c9f8:	cbz	w0, 2ce9c <printf_parse@@Base+0xd9bc>
   2c9fc:	ldr	x0, [sp, #112]
   2ca00:	cbz	x0, 2cf8c <printf_parse@@Base+0xdaac>
   2ca04:	mov	w0, w3
   2ca08:	str	w4, [sp, #152]
   2ca0c:	bl	a8d0 <btowc@plt>
   2ca10:	mov	w3, w0
   2ca14:	ldr	w1, [sp, #224]
   2ca18:	ldr	w4, [sp, #152]
   2ca1c:	cmp	w1, #0x0
   2ca20:	ccmp	w1, #0x3, #0x4, ne  // ne = any
   2ca24:	b.ne	2cadc <printf_parse@@Base+0xd5fc>  // b.any
   2ca28:	mov	w0, w4
   2ca2c:	str	w3, [sp, #152]
   2ca30:	bl	a8d0 <btowc@plt>
   2ca34:	mov	w4, w0
   2ca38:	ldr	w3, [sp, #152]
   2ca3c:	cmn	w3, #0x1
   2ca40:	ccmn	w4, #0x1, #0x4, ne  // ne = any
   2ca44:	b.eq	2cb38 <printf_parse@@Base+0xd658>  // b.none
   2ca48:	tst	x22, #0x10000
   2ca4c:	ccmp	w4, w3, #0x2, ne  // ne = any
   2ca50:	b.cc	2cfa4 <printf_parse@@Base+0xdac4>  // b.lo, b.ul, b.last
   2ca54:	ldr	x1, [sp, #112]
   2ca58:	cbz	x1, 2ca88 <printf_parse@@Base+0xd5a8>
   2ca5c:	ldr	x2, [x1, #8]
   2ca60:	ldr	x0, [x1, #64]
   2ca64:	ldr	x1, [sp, #120]
   2ca68:	cmp	x0, x1
   2ca6c:	b.eq	2d214 <printf_parse@@Base+0xdd34>  // b.none
   2ca70:	ldr	x5, [sp, #112]
   2ca74:	ldr	x1, [x5, #16]
   2ca78:	str	w3, [x2, x0, lsl #2]
   2ca7c:	add	x2, x0, #0x1
   2ca80:	str	x2, [x5, #64]
   2ca84:	str	w4, [x1, x0, lsl #2]
   2ca88:	mov	x1, #0x0                   	// #0
   2ca8c:	mov	x6, #0x1                   	// #1
   2ca90:	cmp	w3, w1
   2ca94:	ccmp	w4, w1, #0x0, ls  // ls = plast
   2ca98:	b.cc	2cab0 <printf_parse@@Base+0xd5d0>  // b.lo, b.ul, b.last
   2ca9c:	asr	x5, x1, #6
   2caa0:	lsl	x0, x6, x1
   2caa4:	ldr	x2, [x19, x5, lsl #3]
   2caa8:	orr	x0, x2, x0
   2caac:	str	x0, [x19, x5, lsl #3]
   2cab0:	add	x1, x1, #0x1
   2cab4:	cmp	x1, #0x100
   2cab8:	b.ne	2ca90 <printf_parse@@Base+0xd5b0>  // b.any
   2cabc:	ldr	x0, [sp, #144]
   2cac0:	str	wzr, [x0]
   2cac4:	b	2c24c <printf_parse@@Base+0xcd6c>
   2cac8:	ldrb	w0, [sp, #152]
   2cacc:	mov	w3, #0x0                   	// #0
   2cad0:	cbz	w1, 2cff0 <printf_parse@@Base+0xdb10>
   2cad4:	cbnz	w0, 2d114 <printf_parse@@Base+0xdc34>
   2cad8:	ldr	w3, [sp, #216]
   2cadc:	ldr	w4, [sp, #232]
   2cae0:	b	2ca3c <printf_parse@@Base+0xd55c>
   2cae4:	mov	x26, #0x0                   	// #0
   2cae8:	str	xzr, [x9]
   2caec:	b	2b86c <printf_parse@@Base+0xc38c>
   2caf0:	ldr	x1, [sp, #144]
   2caf4:	mov	w0, #0x2                   	// #2
   2caf8:	str	w0, [x1]
   2cafc:	b	2c29c <printf_parse@@Base+0xcdbc>
   2cb00:	ldr	x3, [x25, #72]
   2cb04:	neg	w0, w28
   2cb08:	mov	w2, #0x1                   	// #1
   2cb0c:	ldr	w1, [sp, #208]
   2cb10:	add	x0, x3, w0, sxtw
   2cb14:	str	x0, [x25, #72]
   2cb18:	strb	w2, [x20, #8]
   2cb1c:	b	2b5d0 <printf_parse@@Base+0xc0f0>
   2cb20:	ldr	x0, [sp, #232]
   2cb24:	stp	w2, w1, [sp, #184]
   2cb28:	bl	a340 <strlen@plt>
   2cb2c:	cmp	x0, #0x1
   2cb30:	ldp	w2, w1, [sp, #184]
   2cb34:	b.ls	2d144 <printf_parse@@Base+0xdc64>  // b.plast
   2cb38:	ldr	x1, [sp, #144]
   2cb3c:	mov	w0, #0x3                   	// #3
   2cb40:	str	w0, [x1]
   2cb44:	b	2c29c <printf_parse@@Base+0xcdbc>
   2cb48:	mov	w0, #0x6                   	// #6
   2cb4c:	str	w0, [x5]
   2cb50:	str	xzr, [sp, #112]
   2cb54:	b	2b110 <printf_parse@@Base+0xbc30>
   2cb58:	mov	x0, #0x3c8                 	// #968
   2cb5c:	bl	a5f0 <malloc@plt>
   2cb60:	cbz	x0, 2b814 <printf_parse@@Base+0xc334>
   2cb64:	ldr	x1, [x27, #112]
   2cb68:	str	x1, [x0]
   2cb6c:	mov	x21, #0x8                   	// #8
   2cb70:	mov	w2, #0x1                   	// #1
   2cb74:	mov	x4, #0x30                  	// #48
   2cb78:	mov	x3, #0x0                   	// #0
   2cb7c:	str	x0, [x27, #112]
   2cb80:	b	2c3c8 <printf_parse@@Base+0xcee8>
   2cb84:	mov	x0, #0x3c8                 	// #968
   2cb88:	bl	a5f0 <malloc@plt>
   2cb8c:	cbz	x0, 2b818 <printf_parse@@Base+0xc338>
   2cb90:	ldr	x1, [x27, #112]
   2cb94:	str	x1, [x0]
   2cb98:	str	w19, [x27, #128]
   2cb9c:	add	x1, x0, #0x8
   2cba0:	str	x0, [x27, #112]
   2cba4:	mov	x2, #0xffffffffffffffff    	// #-1
   2cba8:	ldp	x4, x5, [x20]
   2cbac:	stp	x4, x5, [x0, #48]
   2cbb0:	movi	v0.4s, #0x0
   2cbb4:	str	x1, [sp, #112]
   2cbb8:	ldrb	w1, [x0, #58]
   2cbbc:	str	xzr, [x0, #24]
   2cbc0:	and	w1, w1, #0xfffffff3
   2cbc4:	strb	w1, [x0, #58]
   2cbc8:	stur	q0, [x0, #8]
   2cbcc:	str	q0, [x0, #32]
   2cbd0:	str	x2, [x0, #64]
   2cbd4:	b	2c4c0 <printf_parse@@Base+0xcfe0>
   2cbd8:	mov	x0, #0x3c8                 	// #968
   2cbdc:	bl	a5f0 <malloc@plt>
   2cbe0:	mov	x21, x0
   2cbe4:	cbz	x0, 2b814 <printf_parse@@Base+0xc334>
   2cbe8:	ldr	x0, [x27, #112]
   2cbec:	str	x0, [x21]
   2cbf0:	mov	w2, #0x1                   	// #1
   2cbf4:	mov	x1, #0x30                  	// #48
   2cbf8:	mov	x6, #0x8                   	// #8
   2cbfc:	mov	x0, #0x0                   	// #0
   2cc00:	str	x21, [x27, #112]
   2cc04:	b	2b094 <printf_parse@@Base+0xbbb4>
   2cc08:	mov	x0, #0x3c8                 	// #968
   2cc0c:	bl	a5f0 <malloc@plt>
   2cc10:	mov	x1, x0
   2cc14:	cbz	x0, 2d19c <printf_parse@@Base+0xdcbc>
   2cc18:	ldr	x0, [x27, #112]
   2cc1c:	str	x0, [x1]
   2cc20:	mov	x19, #0x8                   	// #8
   2cc24:	mov	w2, #0x1                   	// #1
   2cc28:	mov	w0, #0x0                   	// #0
   2cc2c:	str	x1, [x27, #112]
   2cc30:	b	2b02c <printf_parse@@Base+0xbb4c>
   2cc34:	ldr	x0, [x25, #72]
   2cc38:	add	x9, x0, w28, sxtw
   2cc3c:	ldr	w0, [sp, #128]
   2cc40:	str	x9, [x25, #72]
   2cc44:	cbz	w0, 2cc58 <printf_parse@@Base+0xd778>
   2cc48:	ldp	q1, q0, [x19]
   2cc4c:	mvn	v1.16b, v1.16b
   2cc50:	mvn	v0.16b, v0.16b
   2cc54:	stp	q1, q0, [x19]
   2cc58:	ldr	w4, [x27, #180]
   2cc5c:	cmp	w4, #0x1
   2cc60:	b.le	2cc94 <printf_parse@@Base+0xd7b4>
   2cc64:	ldr	x0, [x27, #120]
   2cc68:	add	x1, x19, #0xf
   2cc6c:	sub	x1, x1, x0
   2cc70:	cmp	x1, #0x1e
   2cc74:	b.ls	2d1b0 <printf_parse@@Base+0xdcd0>  // b.plast
   2cc78:	ldp	q1, q0, [x19]
   2cc7c:	ldr	q2, [x0]
   2cc80:	and	v1.16b, v1.16b, v2.16b
   2cc84:	str	q1, [x19]
   2cc88:	ldr	q1, [x0, #16]
   2cc8c:	and	v0.16b, v0.16b, v1.16b
   2cc90:	str	q0, [x19, #16]
   2cc94:	ldr	x0, [x23, #40]
   2cc98:	cbnz	x0, 2cd68 <printf_parse@@Base+0xd888>
   2cc9c:	ldr	x0, [x23, #48]
   2cca0:	cbnz	x0, 2cd68 <printf_parse@@Base+0xd888>
   2cca4:	ldr	x0, [x23, #56]
   2cca8:	cbnz	x0, 2cd68 <printf_parse@@Base+0xd888>
   2ccac:	ldr	x0, [x23, #64]
   2ccb0:	cbnz	x0, 2cd68 <printf_parse@@Base+0xd888>
   2ccb4:	cmp	w4, #0x1
   2ccb8:	b.le	2cccc <printf_parse@@Base+0xd7ec>
   2ccbc:	ldr	x0, [x23, #72]
   2ccc0:	cbnz	x0, 2cd68 <printf_parse@@Base+0xd888>
   2ccc4:	ldrb	w0, [x23, #32]
   2ccc8:	tbnz	w0, #0, 2cd68 <printf_parse@@Base+0xd888>
   2cccc:	ldr	x0, [x23]
   2ccd0:	bl	aa50 <free@plt>
   2ccd4:	ldr	x0, [x23, #8]
   2ccd8:	bl	aa50 <free@plt>
   2ccdc:	ldr	x0, [x23, #16]
   2cce0:	bl	aa50 <free@plt>
   2cce4:	ldr	x0, [x23, #24]
   2cce8:	bl	aa50 <free@plt>
   2ccec:	mov	x0, x23
   2ccf0:	bl	aa50 <free@plt>
   2ccf4:	ldr	w1, [x27, #128]
   2ccf8:	cmp	w1, #0xf
   2ccfc:	b.eq	2d1f0 <printf_parse@@Base+0xdd10>  // b.none
   2cd00:	ldr	x21, [x27, #112]
   2cd04:	sbfiz	x0, x1, #6, #32
   2cd08:	movi	v0.4s, #0x0
   2cd0c:	add	x3, x0, #0x30
   2cd10:	add	x2, x21, x0
   2cd14:	add	w1, w1, #0x1
   2cd18:	ldp	x23, x24, [sp, #48]
   2cd1c:	str	w1, [x27, #128]
   2cd20:	add	x5, x21, x3
   2cd24:	add	x1, x0, #0x20
   2cd28:	stur	q0, [x2, #8]
   2cd2c:	add	x1, x21, x1
   2cd30:	add	x0, x0, #0x8
   2cd34:	str	xzr, [x2, #24]
   2cd38:	mov	w6, #0x3                   	// #3
   2cd3c:	str	x19, [x21, x3]
   2cd40:	add	x0, x21, x0
   2cd44:	strb	w6, [x5, #8]
   2cd48:	mov	x3, #0xffffffffffffffff    	// #-1
   2cd4c:	str	x0, [sp, #112]
   2cd50:	ldrb	w0, [x1, #26]
   2cd54:	and	w0, w0, #0xfffffff3
   2cd58:	strb	w0, [x1, #26]
   2cd5c:	str	x3, [x2, #64]
   2cd60:	str	q0, [x2, #32]
   2cd64:	b	2b1bc <printf_parse@@Base+0xbcdc>
   2cd68:	ldrb	w0, [x27, #176]
   2cd6c:	ldr	w26, [x27, #128]
   2cd70:	orr	w0, w0, #0x2
   2cd74:	strb	w0, [x27, #176]
   2cd78:	cmp	w26, #0xf
   2cd7c:	b.eq	2d158 <printf_parse@@Base+0xdc78>  // b.none
   2cd80:	ldr	x28, [x27, #112]
   2cd84:	sbfiz	x0, x26, #6, #32
   2cd88:	movi	v0.4s, #0x0
   2cd8c:	add	w1, w26, #0x1
   2cd90:	add	x2, x28, x0
   2cd94:	add	x3, x0, #0x30
   2cd98:	str	w1, [x27, #128]
   2cd9c:	add	x6, x28, x3
   2cda0:	add	x1, x0, #0x20
   2cda4:	mov	w9, #0x6                   	// #6
   2cda8:	stur	q0, [x2, #8]
   2cdac:	add	x1, x28, x1
   2cdb0:	add	x21, x0, #0x8
   2cdb4:	str	xzr, [x2, #24]
   2cdb8:	mov	x4, #0xffffffffffffffff    	// #-1
   2cdbc:	str	x23, [x28, x3]
   2cdc0:	sxtw	x26, w26
   2cdc4:	strb	w9, [x6, #8]
   2cdc8:	add	x21, x28, x21
   2cdcc:	ldrb	w0, [x1, #26]
   2cdd0:	and	w0, w0, #0xfffffff3
   2cdd4:	strb	w0, [x1, #26]
   2cdd8:	str	x4, [x2, #64]
   2cddc:	str	q0, [x2, #32]
   2cde0:	ldr	x0, [x19]
   2cde4:	cbnz	x0, 2ceac <printf_parse@@Base+0xd9cc>
   2cde8:	ldr	x0, [x19, #8]
   2cdec:	cbnz	x0, 2ceac <printf_parse@@Base+0xd9cc>
   2cdf0:	ldr	x0, [x19, #16]
   2cdf4:	cbnz	x0, 2ceac <printf_parse@@Base+0xd9cc>
   2cdf8:	ldr	x0, [x19, #24]
   2cdfc:	cbnz	x0, 2ceac <printf_parse@@Base+0xd9cc>
   2ce00:	mov	x0, x19
   2ce04:	str	x21, [sp, #112]
   2ce08:	bl	aa50 <free@plt>
   2ce0c:	ldp	x23, x24, [sp, #48]
   2ce10:	b	2b1bc <printf_parse@@Base+0xbcdc>
   2ce14:	mov	x0, #0x3c8                 	// #968
   2ce18:	bl	a5f0 <malloc@plt>
   2ce1c:	cbz	x0, 2b814 <printf_parse@@Base+0xc334>
   2ce20:	ldr	x1, [x27, #112]
   2ce24:	str	x1, [x0]
   2ce28:	mov	w1, #0x1                   	// #1
   2ce2c:	str	w1, [x27, #128]
   2ce30:	str	x0, [x27, #112]
   2ce34:	add	x1, x0, #0x8
   2ce38:	ldp	x2, x3, [x20]
   2ce3c:	stp	x2, x3, [x0, #48]
   2ce40:	movi	v0.4s, #0x0
   2ce44:	str	x1, [sp, #112]
   2ce48:	ldrb	w1, [x0, #58]
   2ce4c:	mov	x2, #0xffffffffffffffff    	// #-1
   2ce50:	str	xzr, [x0, #24]
   2ce54:	and	w1, w1, #0xfffffff3
   2ce58:	strb	w1, [x0, #58]
   2ce5c:	stur	q0, [x0, #8]
   2ce60:	str	q0, [x0, #32]
   2ce64:	str	x2, [x0, #64]
   2ce68:	b	2b0f0 <printf_parse@@Base+0xbc10>
   2ce6c:	mov	x0, #0x3c8                 	// #968
   2ce70:	bl	a5f0 <malloc@plt>
   2ce74:	mov	x1, x0
   2ce78:	mov	x23, x0
   2ce7c:	cbz	x0, 2b004 <printf_parse@@Base+0xbb24>
   2ce80:	ldr	x0, [x27, #112]
   2ce84:	str	x0, [x1]
   2ce88:	mov	x2, #0x8                   	// #8
   2ce8c:	mov	w3, #0x1                   	// #1
   2ce90:	mov	w0, #0x0                   	// #0
   2ce94:	str	x1, [x27, #112]
   2ce98:	b	2afc0 <printf_parse@@Base+0xbae0>
   2ce9c:	ldr	x0, [sp, #112]
   2cea0:	ldr	w3, [sp, #216]
   2cea4:	cbnz	x0, 2ca28 <printf_parse@@Base+0xd548>
   2cea8:	b	2ca3c <printf_parse@@Base+0xd55c>
   2ceac:	ldr	w0, [x27, #128]
   2ceb0:	cmp	w0, #0xf
   2ceb4:	b.eq	2d0a4 <printf_parse@@Base+0xdbc4>  // b.none
   2ceb8:	mov	x24, x28
   2cebc:	sbfiz	x1, x0, #6, #32
   2cec0:	add	w2, w0, #0x1
   2cec4:	movi	v0.4s, #0x0
   2cec8:	add	x3, x24, x1
   2cecc:	add	x4, x1, #0x30
   2ced0:	str	w2, [x27, #128]
   2ced4:	add	x9, x24, x4
   2ced8:	add	x2, x1, #0x20
   2cedc:	str	xzr, [x3, #24]
   2cee0:	add	x2, x24, x2
   2cee4:	stur	q0, [x3, #8]
   2cee8:	mov	w10, #0x3                   	// #3
   2ceec:	mov	x5, #0xffffffffffffffff    	// #-1
   2cef0:	str	x19, [x24, x4]
   2cef4:	add	x1, x1, #0x8
   2cef8:	strb	w10, [x9, #8]
   2cefc:	sxtw	x7, w0
   2cf00:	add	x1, x24, x1
   2cf04:	mov	x0, x24
   2cf08:	ldrb	w4, [x2, #26]
   2cf0c:	and	w4, w4, #0xfffffff3
   2cf10:	strb	w4, [x2, #26]
   2cf14:	str	x5, [x3, #64]
   2cf18:	str	q0, [x3, #32]
   2cf1c:	ldr	w3, [x27, #128]
   2cf20:	cmp	w3, #0xf
   2cf24:	b.eq	2d078 <printf_parse@@Base+0xdb98>  // b.none
   2cf28:	sbfiz	x2, x3, #6, #32
   2cf2c:	add	w3, w3, #0x1
   2cf30:	add	x4, x0, x2
   2cf34:	add	x5, x2, #0x20
   2cf38:	add	x5, x0, x5
   2cf3c:	str	w3, [x27, #128]
   2cf40:	mov	w6, #0xa                   	// #10
   2cf44:	add	x2, x2, #0x8
   2cf48:	stp	xzr, x1, [x4, #8]
   2cf4c:	add	x2, x0, x2
   2cf50:	add	x24, x24, x7, lsl #6
   2cf54:	str	x21, [x4, #24]
   2cf58:	add	x26, x28, x26, lsl #6
   2cf5c:	strb	w6, [x4, #56]
   2cf60:	mov	x1, #0xffffffffffffffff    	// #-1
   2cf64:	str	x2, [sp, #112]
   2cf68:	ldrb	w0, [x5, #26]
   2cf6c:	and	w0, w0, #0xfffffff3
   2cf70:	strb	w0, [x5, #26]
   2cf74:	stp	xzr, xzr, [x4, #32]
   2cf78:	str	x1, [x4, #64]
   2cf7c:	str	x2, [x24, #8]
   2cf80:	ldp	x23, x24, [sp, #48]
   2cf84:	str	x2, [x26, #8]
   2cf88:	b	2b1bc <printf_parse@@Base+0xbcdc>
   2cf8c:	cmp	w1, #0x0
   2cf90:	ccmp	w1, #0x3, #0x4, ne  // ne = any
   2cf94:	b.ne	2cadc <printf_parse@@Base+0xd5fc>  // b.any
   2cf98:	tst	x22, #0x10000
   2cf9c:	ccmp	w4, w3, #0x2, ne  // ne = any
   2cfa0:	b.cs	2ca88 <printf_parse@@Base+0xd5a8>  // b.hs, b.nlast
   2cfa4:	ldr	x1, [sp, #144]
   2cfa8:	mov	w0, #0xb                   	// #11
   2cfac:	str	w0, [x1]
   2cfb0:	b	2c29c <printf_parse@@Base+0xcdbc>
   2cfb4:	mov	x26, #0x0                   	// #0
   2cfb8:	str	xzr, [x28]
   2cfbc:	b	2bf90 <printf_parse@@Base+0xcab0>
   2cfc0:	mov	x0, #0x3c8                 	// #968
   2cfc4:	bl	a5f0 <malloc@plt>
   2cfc8:	mov	x1, x0
   2cfcc:	mov	x23, x0
   2cfd0:	cbz	x0, 2c8fc <printf_parse@@Base+0xd41c>
   2cfd4:	ldr	x0, [x27, #112]
   2cfd8:	str	x0, [x1]
   2cfdc:	mov	x2, #0x8                   	// #8
   2cfe0:	mov	w3, #0x1                   	// #1
   2cfe4:	mov	w0, #0x0                   	// #0
   2cfe8:	str	x1, [x27, #112]
   2cfec:	b	2c8b8 <printf_parse@@Base+0xd3d8>
   2cff0:	ldrb	w4, [sp, #232]
   2cff4:	b	2c9f8 <printf_parse@@Base+0xd518>
   2cff8:	mov	w21, #0x80                  	// #128
   2cffc:	mov	w19, #0x2                   	// #2
   2d000:	bl	a9d0 <__ctype_b_loc@plt>
   2d004:	ldr	x5, [x0]
   2d008:	sxtw	x3, w19
   2d00c:	add	x4, x27, #0xb8
   2d010:	mov	x6, #0x1                   	// #1
   2d014:	add	x5, x5, w21, sxtw #1
   2d018:	mov	x0, #0x0                   	// #0
   2d01c:	nop
   2d020:	ldrh	w1, [x5, x0, lsl #1]
   2d024:	add	w2, w21, w0
   2d028:	cmp	w2, #0x5f
   2d02c:	and	w1, w1, #0x8
   2d030:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   2d034:	b.eq	2d048 <printf_parse@@Base+0xdb68>  // b.none
   2d038:	ldr	x1, [x4, x3, lsl #3]
   2d03c:	lsl	x2, x6, x0
   2d040:	orr	x1, x1, x2
   2d044:	str	x1, [x4, x3, lsl #3]
   2d048:	add	x0, x0, #0x1
   2d04c:	cmp	x0, #0x40
   2d050:	b.ne	2d020 <printf_parse@@Base+0xdb40>  // b.any
   2d054:	add	x3, x3, #0x1
   2d058:	add	w21, w21, #0x40
   2d05c:	cmp	w3, #0x3
   2d060:	add	x5, x5, #0x80
   2d064:	b.le	2d018 <printf_parse@@Base+0xdb38>
   2d068:	b	2af84 <printf_parse@@Base+0xbaa4>
   2d06c:	mov	w21, #0x0                   	// #0
   2d070:	mov	w19, #0x0                   	// #0
   2d074:	b	2d000 <printf_parse@@Base+0xdb20>
   2d078:	mov	x0, #0x3c8                 	// #968
   2d07c:	str	x7, [sp, #96]
   2d080:	str	x1, [sp, #112]
   2d084:	bl	a5f0 <malloc@plt>
   2d088:	cbz	x0, 2c878 <printf_parse@@Base+0xd398>
   2d08c:	str	x24, [x0]
   2d090:	mov	w3, #0x0                   	// #0
   2d094:	str	x0, [x27, #112]
   2d098:	ldr	x7, [sp, #96]
   2d09c:	ldr	x1, [sp, #112]
   2d0a0:	b	2cf28 <printf_parse@@Base+0xda48>
   2d0a4:	mov	x0, #0x3c8                 	// #968
   2d0a8:	bl	a5f0 <malloc@plt>
   2d0ac:	mov	x24, x0
   2d0b0:	cbz	x0, 2c878 <printf_parse@@Base+0xd398>
   2d0b4:	str	x28, [x24]
   2d0b8:	mov	w0, #0x0                   	// #0
   2d0bc:	str	x24, [x27, #112]
   2d0c0:	b	2cebc <printf_parse@@Base+0xd9dc>
   2d0c4:	mov	x23, #0x0                   	// #0
   2d0c8:	b	2b7a4 <printf_parse@@Base+0xc2c4>
   2d0cc:	ldr	x0, [sp, #144]
   2d0d0:	ldr	w0, [x0]
   2d0d4:	cbnz	w0, 2b984 <printf_parse@@Base+0xc4a4>
   2d0d8:	str	xzr, [sp, #112]
   2d0dc:	b	2bb78 <printf_parse@@Base+0xc698>
   2d0e0:	ldr	x0, [sp, #232]
   2d0e4:	stp	w2, w1, [sp, #184]
   2d0e8:	bl	a340 <strlen@plt>
   2d0ec:	cmp	x0, #0x1
   2d0f0:	b.hi	2cb38 <printf_parse@@Base+0xd658>  // b.pmore
   2d0f4:	ldp	w2, w1, [sp, #184]
   2d0f8:	cbz	w2, 2c9d4 <printf_parse@@Base+0xd4f4>
   2d0fc:	ldrb	w0, [sp, #152]
   2d100:	mov	w3, #0x0                   	// #0
   2d104:	b	2c9f0 <printf_parse@@Base+0xd510>
   2d108:	ldr	x26, [sp, #112]
   2d10c:	mov	x24, x26
   2d110:	b	2c080 <printf_parse@@Base+0xcba0>
   2d114:	ldr	x0, [sp, #112]
   2d118:	cbz	x0, 2cadc <printf_parse@@Base+0xd5fc>
   2d11c:	mov	w4, #0x0                   	// #0
   2d120:	b	2ca04 <printf_parse@@Base+0xd524>
   2d124:	ldr	x0, [sp, #216]
   2d128:	stp	w2, w1, [sp, #184]
   2d12c:	bl	a340 <strlen@plt>
   2d130:	cmp	x0, #0x1
   2d134:	ldp	w2, w1, [sp, #184]
   2d138:	b.hi	2cb38 <printf_parse@@Base+0xd658>  // b.pmore
   2d13c:	cmp	w1, #0x3
   2d140:	b.eq	2cb20 <printf_parse@@Base+0xd640>  // b.none
   2d144:	ldr	x0, [sp, #216]
   2d148:	ldrb	w3, [x0]
   2d14c:	b	2c9d8 <printf_parse@@Base+0xd4f8>
   2d150:	mov	x5, x19
   2d154:	b	2bd28 <printf_parse@@Base+0xc848>
   2d158:	mov	x0, #0x3c8                 	// #968
   2d15c:	bl	a5f0 <malloc@plt>
   2d160:	cbz	x0, 2c878 <printf_parse@@Base+0xd398>
   2d164:	ldr	x1, [x27, #112]
   2d168:	str	x1, [x0]
   2d16c:	mov	w26, #0x0                   	// #0
   2d170:	str	x0, [x27, #112]
   2d174:	b	2cd80 <printf_parse@@Base+0xd8a0>
   2d178:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   2d17c:	add	x3, x3, #0x410
   2d180:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2d184:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   2d188:	add	x3, x3, #0x40
   2d18c:	add	x1, x1, #0x1d0
   2d190:	add	x0, x0, #0x1e0
   2d194:	mov	w2, #0xced                 	// #3309
   2d198:	bl	aea0 <__assert_fail@plt>
   2d19c:	mov	x19, #0x0                   	// #0
   2d1a0:	b	2b070 <printf_parse@@Base+0xbb90>
   2d1a4:	mov	x24, #0x0                   	// #0
   2d1a8:	ldr	x26, [sp, #112]
   2d1ac:	b	2b268 <printf_parse@@Base+0xbd88>
   2d1b0:	ldp	x1, x3, [x19]
   2d1b4:	ldr	x2, [x0]
   2d1b8:	and	x1, x1, x2
   2d1bc:	str	x1, [x19]
   2d1c0:	ldr	x2, [x19, #16]
   2d1c4:	ldr	x5, [x0, #8]
   2d1c8:	ldr	x1, [x19, #24]
   2d1cc:	and	x3, x3, x5
   2d1d0:	str	x3, [x19, #8]
   2d1d4:	ldr	x3, [x0, #16]
   2d1d8:	and	x2, x2, x3
   2d1dc:	str	x2, [x19, #16]
   2d1e0:	ldr	x0, [x0, #24]
   2d1e4:	and	x0, x1, x0
   2d1e8:	str	x0, [x19, #24]
   2d1ec:	b	2cc94 <printf_parse@@Base+0xd7b4>
   2d1f0:	mov	x0, #0x3c8                 	// #968
   2d1f4:	bl	a5f0 <malloc@plt>
   2d1f8:	cbz	x0, 2c878 <printf_parse@@Base+0xd398>
   2d1fc:	ldr	x1, [x27, #112]
   2d200:	str	x1, [x0]
   2d204:	mov	w1, #0x0                   	// #0
   2d208:	str	x0, [x27, #112]
   2d20c:	str	wzr, [x27, #128]
   2d210:	b	2cd00 <printf_parse@@Base+0xd820>
   2d214:	lsl	x1, x1, #1
   2d218:	mov	x0, x2
   2d21c:	add	x1, x1, #0x1
   2d220:	str	x1, [sp, #120]
   2d224:	stp	w4, w3, [sp, #184]
   2d228:	lsl	x1, x1, #2
   2d22c:	str	x1, [sp, #152]
   2d230:	bl	a7e0 <realloc@plt>
   2d234:	mov	x2, x0
   2d238:	ldr	x0, [sp, #112]
   2d23c:	ldr	x1, [sp, #152]
   2d240:	str	x2, [sp, #152]
   2d244:	ldr	x0, [x0, #16]
   2d248:	bl	a7e0 <realloc@plt>
   2d24c:	mov	x1, x0
   2d250:	ldr	x2, [sp, #152]
   2d254:	ldp	w4, w3, [sp, #184]
   2d258:	cmp	x2, #0x0
   2d25c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2d260:	b.eq	2d274 <printf_parse@@Base+0xdd94>  // b.none
   2d264:	ldr	x5, [sp, #112]
   2d268:	stp	x2, x1, [x5, #8]
   2d26c:	ldr	x0, [x5, #64]
   2d270:	b	2ca70 <printf_parse@@Base+0xd590>
   2d274:	mov	x0, x2
   2d278:	str	x1, [sp, #112]
   2d27c:	bl	aa50 <free@plt>
   2d280:	ldr	x1, [sp, #112]
   2d284:	mov	x0, x1
   2d288:	bl	aa50 <free@plt>
   2d28c:	ldr	x1, [sp, #144]
   2d290:	mov	w0, #0xc                   	// #12
   2d294:	str	w0, [x1]
   2d298:	b	2c29c <printf_parse@@Base+0xcdbc>
   2d29c:	nop
   2d2a0:	stp	x29, x30, [sp, #-96]!
   2d2a4:	mov	x29, sp
   2d2a8:	stp	x27, x28, [sp, #80]
   2d2ac:	mov	x27, x5
   2d2b0:	mov	x28, x2
   2d2b4:	stp	x19, x20, [sp, #16]
   2d2b8:	stp	x21, x22, [sp, #32]
   2d2bc:	mov	x21, x1
   2d2c0:	mov	x22, x4
   2d2c4:	stp	x23, x24, [sp, #48]
   2d2c8:	mov	x23, x0
   2d2cc:	mov	x24, x3
   2d2d0:	stp	x25, x26, [sp, #64]
   2d2d4:	ldr	x26, [x1]
   2d2d8:	bl	2aee0 <printf_parse@@Base+0xba00>
   2d2dc:	ldr	w1, [x27]
   2d2e0:	cmp	w1, #0x0
   2d2e4:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   2d2e8:	b.eq	2d490 <printf_parse@@Base+0xdfb0>  // b.none
   2d2ec:	mov	x20, x0
   2d2f0:	ldrb	w0, [x28, #8]
   2d2f4:	and	w1, w0, #0xfffffff7
   2d2f8:	cmp	w1, #0x2
   2d2fc:	b.eq	2d3f4 <printf_parse@@Base+0xdf14>  // b.none
   2d300:	cmp	x22, #0x0
   2d304:	cset	w25, eq  // eq = none
   2d308:	b	2d324 <printf_parse@@Base+0xde44>
   2d30c:	cmp	x20, #0x0
   2d310:	csel	x20, x20, x0, ne  // ne = any
   2d314:	ldrb	w0, [x28, #8]
   2d318:	and	w1, w0, #0xfffffff7
   2d31c:	cmp	w1, #0x2
   2d320:	b.eq	2d3f4 <printf_parse@@Base+0xdf14>  // b.none
   2d324:	cmp	w25, #0x0
   2d328:	ccmp	w0, #0x9, #0x0, eq  // eq = none
   2d32c:	b.eq	2d3f4 <printf_parse@@Base+0xdf14>  // b.none
   2d330:	mov	x1, x21
   2d334:	mov	x5, x27
   2d338:	mov	x4, x22
   2d33c:	mov	x3, x24
   2d340:	mov	x2, x28
   2d344:	mov	x0, x23
   2d348:	bl	2aee0 <printf_parse@@Base+0xba00>
   2d34c:	mov	x19, x0
   2d350:	ldr	w1, [x27]
   2d354:	cmp	w1, #0x0
   2d358:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   2d35c:	b.eq	2d440 <printf_parse@@Base+0xdf60>  // b.none
   2d360:	cmp	x20, #0x0
   2d364:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2d368:	b.eq	2d30c <printf_parse@@Base+0xde2c>  // b.none
   2d36c:	ldr	w3, [x26, #128]
   2d370:	cmp	w3, #0xf
   2d374:	b.eq	2d414 <printf_parse@@Base+0xdf34>  // b.none
   2d378:	sbfiz	x2, x3, #6, #32
   2d37c:	sxtw	x1, w3
   2d380:	ldr	x0, [x26, #112]
   2d384:	add	x8, x2, #0x8
   2d388:	add	w3, w3, #0x1
   2d38c:	add	x2, x2, #0x30
   2d390:	lsl	x1, x1, #6
   2d394:	add	x2, x0, x2
   2d398:	add	x4, x0, x1
   2d39c:	add	x5, x1, #0x20
   2d3a0:	str	w3, [x26, #128]
   2d3a4:	add	x3, x0, x5
   2d3a8:	mov	w5, #0x10                  	// #16
   2d3ac:	mov	x1, #0xffffffffffffffff    	// #-1
   2d3b0:	stp	xzr, x20, [x4, #8]
   2d3b4:	add	x0, x0, x8
   2d3b8:	str	x19, [x4, #24]
   2d3bc:	strb	w5, [x2, #8]
   2d3c0:	ldrb	w2, [x3, #26]
   2d3c4:	and	w2, w2, #0xfffffff3
   2d3c8:	strb	w2, [x3, #26]
   2d3cc:	stp	xzr, xzr, [x4, #32]
   2d3d0:	str	x1, [x4, #64]
   2d3d4:	str	x0, [x20]
   2d3d8:	str	x0, [x19]
   2d3dc:	cbz	x0, 2d454 <printf_parse@@Base+0xdf74>
   2d3e0:	mov	x20, x0
   2d3e4:	ldrb	w0, [x28, #8]
   2d3e8:	and	w1, w0, #0xfffffff7
   2d3ec:	cmp	w1, #0x2
   2d3f0:	b.ne	2d324 <printf_parse@@Base+0xde44>  // b.any
   2d3f4:	mov	x0, x20
   2d3f8:	ldp	x19, x20, [sp, #16]
   2d3fc:	ldp	x21, x22, [sp, #32]
   2d400:	ldp	x23, x24, [sp, #48]
   2d404:	ldp	x25, x26, [sp, #64]
   2d408:	ldp	x27, x28, [sp, #80]
   2d40c:	ldp	x29, x30, [sp], #96
   2d410:	ret
   2d414:	mov	x0, #0x3c8                 	// #968
   2d418:	bl	a5f0 <malloc@plt>
   2d41c:	cbz	x0, 2d454 <printf_parse@@Base+0xdf74>
   2d420:	ldr	x1, [x26, #112]
   2d424:	str	x1, [x0]
   2d428:	mov	w3, #0x1                   	// #1
   2d42c:	mov	x2, #0x30                  	// #48
   2d430:	mov	x8, #0x8                   	// #8
   2d434:	mov	x1, #0x0                   	// #0
   2d438:	str	x0, [x26, #112]
   2d43c:	b	2d390 <printf_parse@@Base+0xdeb0>
   2d440:	cbz	x20, 2d490 <printf_parse@@Base+0xdfb0>
   2d444:	mov	x0, x20
   2d448:	mov	x20, #0x0                   	// #0
   2d44c:	bl	240f8 <printf_parse@@Base+0x4c18>
   2d450:	b	2d3f4 <printf_parse@@Base+0xdf14>
   2d454:	mov	x0, x19
   2d458:	bl	240f8 <printf_parse@@Base+0x4c18>
   2d45c:	mov	x0, x20
   2d460:	bl	240f8 <printf_parse@@Base+0x4c18>
   2d464:	mov	w0, #0xc                   	// #12
   2d468:	str	w0, [x27]
   2d46c:	mov	x20, #0x0                   	// #0
   2d470:	mov	x0, x20
   2d474:	ldp	x19, x20, [sp, #16]
   2d478:	ldp	x21, x22, [sp, #32]
   2d47c:	ldp	x23, x24, [sp, #48]
   2d480:	ldp	x25, x26, [sp, #64]
   2d484:	ldp	x27, x28, [sp, #80]
   2d488:	ldp	x29, x30, [sp], #96
   2d48c:	ret
   2d490:	mov	x20, #0x0                   	// #0
   2d494:	b	2d3f4 <printf_parse@@Base+0xdf14>
   2d498:	stp	x29, x30, [sp, #-208]!
   2d49c:	mov	x29, sp
   2d4a0:	stp	x27, x28, [sp, #80]
   2d4a4:	ldr	x27, [x1]
   2d4a8:	stp	x19, x20, [sp, #16]
   2d4ac:	mov	x20, x5
   2d4b0:	mov	x19, x3
   2d4b4:	stp	x21, x22, [sp, #32]
   2d4b8:	mov	x22, x1
   2d4bc:	ldr	x6, [x27, #168]
   2d4c0:	mov	x21, x4
   2d4c4:	stp	x25, x26, [sp, #64]
   2d4c8:	mov	x25, x0
   2d4cc:	mov	x26, x2
   2d4d0:	str	x6, [sp, #96]
   2d4d4:	bl	2d2a0 <printf_parse@@Base+0xddc0>
   2d4d8:	ldr	w1, [x20]
   2d4dc:	cmp	w1, #0x0
   2d4e0:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   2d4e4:	b.eq	2dd60 <printf_parse@@Base+0xe880>  // b.none
   2d4e8:	mov	x28, x0
   2d4ec:	mov	x0, #0x8400                	// #33792
   2d4f0:	and	x0, x19, x0
   2d4f4:	str	x0, [sp, #144]
   2d4f8:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   2d4fc:	add	x0, x0, #0x360
   2d500:	str	x0, [sp, #136]
   2d504:	and	x0, x19, #0x2000
   2d508:	str	x0, [sp, #112]
   2d50c:	and	x0, x19, #0x8
   2d510:	str	x0, [sp, #160]
   2d514:	and	x0, x19, #0x800
   2d518:	str	x0, [sp, #168]
   2d51c:	and	x0, x19, #0x80000
   2d520:	str	x0, [sp, #152]
   2d524:	and	x0, x19, #0x4000
   2d528:	mov	x1, #0x1200                	// #4608
   2d52c:	and	x1, x19, x1
   2d530:	str	x0, [sp, #184]
   2d534:	add	x0, sp, #0xc0
   2d538:	stp	x23, x24, [sp, #48]
   2d53c:	str	x1, [sp, #128]
   2d540:	mov	x1, #0x402                 	// #1026
   2d544:	and	x1, x19, x1
   2d548:	str	x1, [sp, #120]
   2d54c:	str	x0, [sp, #176]
   2d550:	ldrb	w0, [x26, #8]
   2d554:	cmp	w0, #0xa
   2d558:	b.ne	2d700 <printf_parse@@Base+0xe220>  // b.any
   2d55c:	nop
   2d560:	ldr	x0, [x25, #72]
   2d564:	ldr	x1, [x25, #104]
   2d568:	cmp	x1, x0
   2d56c:	b.le	2d81c <printf_parse@@Base+0xe33c>
   2d570:	ldr	x4, [x25, #8]
   2d574:	add	x24, x0, #0x1
   2d578:	ldrb	w1, [x26, #10]
   2d57c:	ldr	w3, [x25, #144]
   2d580:	ldrb	w23, [x4, x0]
   2d584:	and	w1, w1, #0xffffff9f
   2d588:	strb	w23, [x26]
   2d58c:	cmp	w3, #0x1
   2d590:	strb	w1, [x26, #10]
   2d594:	b.le	2d870 <printf_parse@@Base+0xe390>
   2d598:	ldr	x1, [x25, #48]
   2d59c:	cmp	x0, x1
   2d5a0:	b.eq	2d5b4 <printf_parse@@Base+0xe0d4>  // b.none
   2d5a4:	ldr	x1, [x25, #16]
   2d5a8:	ldr	w1, [x1, x0, lsl #2]
   2d5ac:	cmn	w1, #0x1
   2d5b0:	b.eq	2d994 <printf_parse@@Base+0xe4b4>  // b.none
   2d5b4:	cmp	w23, #0x5c
   2d5b8:	b.eq	2d8d0 <printf_parse@@Base+0xe3f0>  // b.none
   2d5bc:	ldr	x1, [x25, #16]
   2d5c0:	mov	w3, #0x1                   	// #1
   2d5c4:	strb	w3, [x26, #8]
   2d5c8:	ldr	w1, [x1, x0, lsl #2]
   2d5cc:	str	w1, [sp, #104]
   2d5d0:	mov	w0, w1
   2d5d4:	bl	ad30 <iswalnum@plt>
   2d5d8:	ldr	w1, [sp, #104]
   2d5dc:	cmp	w1, #0x5f
   2d5e0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   2d5e4:	ldrb	w0, [x26, #10]
   2d5e8:	cset	w1, ne  // ne = any
   2d5ec:	cmp	w23, #0x2e
   2d5f0:	bfi	w0, w1, #6, #1
   2d5f4:	strb	w0, [x26, #10]
   2d5f8:	b.eq	2d8c0 <printf_parse@@Base+0xe3e0>  // b.none
   2d5fc:	b.hi	2d798 <printf_parse@@Base+0xe2b8>  // b.pmore
   2d600:	cmp	w23, #0x29
   2d604:	b.eq	2da8c <printf_parse@@Base+0xe5ac>  // b.none
   2d608:	b.hi	2d770 <printf_parse@@Base+0xe290>  // b.pmore
   2d60c:	cmp	w23, #0x24
   2d610:	b.eq	2da40 <printf_parse@@Base+0xe560>  // b.none
   2d614:	cmp	w23, #0x28
   2d618:	b.ne	2d750 <printf_parse@@Base+0xe270>  // b.any
   2d61c:	ldr	x0, [sp, #112]
   2d620:	cbnz	x0, 2d9f0 <printf_parse@@Base+0xe510>
   2d624:	nop
   2d628:	str	x24, [x25, #72]
   2d62c:	ldr	x0, [sp, #96]
   2d630:	mov	x4, x21
   2d634:	ldr	x23, [x27, #168]
   2d638:	str	x0, [x27, #168]
   2d63c:	mov	x1, x22
   2d640:	mov	x5, x20
   2d644:	mov	x3, x19
   2d648:	mov	x2, x26
   2d64c:	mov	x0, x25
   2d650:	bl	2d2a0 <printf_parse@@Base+0xddc0>
   2d654:	ldr	w1, [x20]
   2d658:	mov	x4, x0
   2d65c:	cmp	w1, #0x0
   2d660:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   2d664:	b.eq	2dd44 <printf_parse@@Base+0xe864>  // b.none
   2d668:	ldr	x0, [x27, #168]
   2d66c:	orr	x23, x0, x23
   2d670:	str	x23, [x27, #168]
   2d674:	ldr	w2, [x27, #128]
   2d678:	cmp	w2, #0xf
   2d67c:	b.eq	2d838 <printf_parse@@Base+0xe358>  // b.none
   2d680:	sbfiz	x1, x2, #6, #32
   2d684:	sxtw	x3, w2
   2d688:	add	x11, x1, #0x30
   2d68c:	add	x0, x1, #0x8
   2d690:	ldr	x1, [x27, #112]
   2d694:	add	w2, w2, #0x1
   2d698:	lsl	x3, x3, #6
   2d69c:	add	x11, x1, x11
   2d6a0:	add	x5, x1, x3
   2d6a4:	add	x10, x3, #0x20
   2d6a8:	str	w2, [x27, #128]
   2d6ac:	add	x2, x1, x10
   2d6b0:	mov	w12, #0xa                   	// #10
   2d6b4:	add	x1, x1, x0
   2d6b8:	stp	xzr, x28, [x5, #8]
   2d6bc:	mov	x10, #0xffffffffffffffff    	// #-1
   2d6c0:	str	x4, [x5, #24]
   2d6c4:	strb	w12, [x11, #8]
   2d6c8:	ldrb	w0, [x2, #26]
   2d6cc:	and	w0, w0, #0xfffffff3
   2d6d0:	strb	w0, [x2, #26]
   2d6d4:	stp	xzr, xzr, [x5, #32]
   2d6d8:	str	x10, [x5, #64]
   2d6dc:	cbz	x28, 2d6e4 <printf_parse@@Base+0xe204>
   2d6e0:	str	x1, [x28]
   2d6e4:	cbz	x4, 2d720 <printf_parse@@Base+0xe240>
   2d6e8:	str	x1, [x4]
   2d6ec:	cbz	x1, 2d724 <printf_parse@@Base+0xe244>
   2d6f0:	ldrb	w0, [x26, #8]
   2d6f4:	mov	x28, x1
   2d6f8:	cmp	w0, #0xa
   2d6fc:	b.eq	2d560 <printf_parse@@Base+0xe080>  // b.none
   2d700:	mov	x0, x28
   2d704:	ldp	x19, x20, [sp, #16]
   2d708:	ldp	x21, x22, [sp, #32]
   2d70c:	ldp	x23, x24, [sp, #48]
   2d710:	ldp	x25, x26, [sp, #64]
   2d714:	ldp	x27, x28, [sp, #80]
   2d718:	ldp	x29, x30, [sp], #208
   2d71c:	ret
   2d720:	cbnz	x1, 2d6f0 <printf_parse@@Base+0xe210>
   2d724:	mov	w0, #0xc                   	// #12
   2d728:	mov	x28, #0x0                   	// #0
   2d72c:	ldp	x23, x24, [sp, #48]
   2d730:	str	w0, [x20]
   2d734:	mov	x0, x28
   2d738:	ldp	x19, x20, [sp, #16]
   2d73c:	ldp	x21, x22, [sp, #32]
   2d740:	ldp	x25, x26, [sp, #64]
   2d744:	ldp	x27, x28, [sp, #80]
   2d748:	ldp	x29, x30, [sp], #208
   2d74c:	ret
   2d750:	cmp	w23, #0xa
   2d754:	b.ne	2d628 <printf_parse@@Base+0xe148>  // b.any
   2d758:	ldr	x0, [sp, #168]
   2d75c:	cbz	x0, 2d628 <printf_parse@@Base+0xe148>
   2d760:	strb	w23, [x26, #8]
   2d764:	mov	x4, #0x0                   	// #0
   2d768:	str	x24, [x25, #72]
   2d76c:	b	2d674 <printf_parse@@Base+0xe194>
   2d770:	cmp	w23, #0x2a
   2d774:	b.eq	2da00 <printf_parse@@Base+0xe520>  // b.none
   2d778:	cmp	w23, #0x2b
   2d77c:	b.ne	2d628 <printf_parse@@Base+0xe148>  // b.any
   2d780:	ldr	x0, [sp, #120]
   2d784:	cbnz	x0, 2d628 <printf_parse@@Base+0xe148>
   2d788:	mov	w0, #0x12                  	// #18
   2d78c:	strb	w0, [x26, #8]
   2d790:	str	x24, [x25, #72]
   2d794:	b	2d62c <printf_parse@@Base+0xe14c>
   2d798:	cmp	w23, #0x7b
   2d79c:	b.eq	2da10 <printf_parse@@Base+0xe530>  // b.none
   2d7a0:	b.hi	2d7cc <printf_parse@@Base+0xe2ec>  // b.pmore
   2d7a4:	cmp	w23, #0x5b
   2d7a8:	b.eq	2da30 <printf_parse@@Base+0xe550>  // b.none
   2d7ac:	cmp	w23, #0x5e
   2d7b0:	b.ne	2d7fc <printf_parse@@Base+0xe31c>  // b.any
   2d7b4:	mov	w0, #0xc                   	// #12
   2d7b8:	strb	w0, [x26, #8]
   2d7bc:	mov	w0, #0x10                  	// #16
   2d7c0:	str	w0, [x26]
   2d7c4:	str	x24, [x25, #72]
   2d7c8:	b	2d62c <printf_parse@@Base+0xe14c>
   2d7cc:	cmp	w23, #0x7c
   2d7d0:	b.eq	2da6c <printf_parse@@Base+0xe58c>  // b.none
   2d7d4:	cmp	w23, #0x7d
   2d7d8:	b.ne	2d628 <printf_parse@@Base+0xe148>  // b.any
   2d7dc:	ldr	x1, [sp, #128]
   2d7e0:	mov	x0, #0x1200                	// #4608
   2d7e4:	cmp	x1, x0
   2d7e8:	b.ne	2d628 <printf_parse@@Base+0xe148>  // b.any
   2d7ec:	mov	w0, #0x18                  	// #24
   2d7f0:	strb	w0, [x26, #8]
   2d7f4:	str	x24, [x25, #72]
   2d7f8:	b	2d62c <printf_parse@@Base+0xe14c>
   2d7fc:	cmp	w23, #0x3f
   2d800:	b.ne	2d628 <printf_parse@@Base+0xe148>  // b.any
   2d804:	ldr	x0, [sp, #120]
   2d808:	cbnz	x0, 2d628 <printf_parse@@Base+0xe148>
   2d80c:	mov	w0, #0x13                  	// #19
   2d810:	strb	w0, [x26, #8]
   2d814:	str	x24, [x25, #72]
   2d818:	b	2d62c <printf_parse@@Base+0xe14c>
   2d81c:	mov	w1, #0x2                   	// #2
   2d820:	strb	w1, [x26, #8]
   2d824:	str	x0, [x25, #72]
   2d828:	mov	x4, #0x0                   	// #0
   2d82c:	ldr	w2, [x27, #128]
   2d830:	cmp	w2, #0xf
   2d834:	b.ne	2d680 <printf_parse@@Base+0xe1a0>  // b.any
   2d838:	mov	x0, #0x3c8                 	// #968
   2d83c:	str	x4, [sp, #104]
   2d840:	bl	a5f0 <malloc@plt>
   2d844:	mov	x1, x0
   2d848:	cbz	x0, 2d724 <printf_parse@@Base+0xe244>
   2d84c:	ldr	x0, [x27, #112]
   2d850:	str	x0, [x1]
   2d854:	mov	w2, #0x1                   	// #1
   2d858:	mov	x11, #0x30                  	// #48
   2d85c:	mov	x3, #0x0                   	// #0
   2d860:	mov	x0, #0x8                   	// #8
   2d864:	str	x1, [x27, #112]
   2d868:	ldr	x4, [sp, #104]
   2d86c:	b	2d698 <printf_parse@@Base+0xe1b8>
   2d870:	cmp	w23, #0x5c
   2d874:	b.eq	2d8d0 <printf_parse@@Base+0xe3f0>  // b.none
   2d878:	bl	a9d0 <__ctype_b_loc@plt>
   2d87c:	ldr	x0, [x0]
   2d880:	ubfiz	x3, x23, #1, #8
   2d884:	cmp	w23, #0x5f
   2d888:	ldr	w1, [x26, #8]
   2d88c:	mov	w2, #0xff00                	// #65280
   2d890:	ldrh	w0, [x0, x3]
   2d894:	movk	w2, #0xffbf, lsl #16
   2d898:	and	w1, w1, w2
   2d89c:	and	w0, w0, #0x8
   2d8a0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   2d8a4:	cset	w0, ne  // ne = any
   2d8a8:	cmp	w23, #0x2e
   2d8ac:	lsl	w0, w0, #22
   2d8b0:	orr	w0, w0, #0x1
   2d8b4:	orr	w0, w0, w1
   2d8b8:	str	w0, [x26, #8]
   2d8bc:	b.ne	2d5fc <printf_parse@@Base+0xe11c>  // b.any
   2d8c0:	mov	w0, #0x5                   	// #5
   2d8c4:	strb	w0, [x26, #8]
   2d8c8:	str	x24, [x25, #72]
   2d8cc:	b	2d62c <printf_parse@@Base+0xe14c>
   2d8d0:	ldr	x1, [x25, #88]
   2d8d4:	cmp	x1, x24
   2d8d8:	b.gt	2d8ec <printf_parse@@Base+0xe40c>
   2d8dc:	mov	w0, #0x24                  	// #36
   2d8e0:	strb	w0, [x26, #8]
   2d8e4:	str	x24, [x25, #72]
   2d8e8:	b	2d62c <printf_parse@@Base+0xe14c>
   2d8ec:	ldrb	w1, [x25, #139]
   2d8f0:	add	x23, x0, #0x2
   2d8f4:	cbnz	w1, 2daa8 <printf_parse@@Base+0xe5c8>
   2d8f8:	ldrb	w1, [x4, x24]
   2d8fc:	mov	w0, #0x1                   	// #1
   2d900:	strb	w1, [x26]
   2d904:	strb	w0, [x26, #8]
   2d908:	cmp	w3, #0x1
   2d90c:	b.le	2d9b8 <printf_parse@@Base+0xe4d8>
   2d910:	ldr	x0, [x25, #16]
   2d914:	add	x0, x0, x24, lsl #2
   2d918:	ldr	w24, [x0]
   2d91c:	str	w1, [sp, #104]
   2d920:	mov	w0, w24
   2d924:	bl	ad30 <iswalnum@plt>
   2d928:	cmp	w24, #0x5f
   2d92c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   2d930:	ldrb	w0, [x26, #10]
   2d934:	cset	w2, ne  // ne = any
   2d938:	bfi	w0, w2, #6, #1
   2d93c:	strb	w0, [x26, #10]
   2d940:	ldr	w1, [sp, #104]
   2d944:	sub	w0, w1, #0x27
   2d948:	cmp	w0, #0x56
   2d94c:	b.hi	2d964 <printf_parse@@Base+0xe484>  // b.pmore
   2d950:	ldr	x2, [sp, #136]
   2d954:	ldrh	w0, [x2, w0, uxtw #1]
   2d958:	adr	x2, 2d964 <printf_parse@@Base+0xe484>
   2d95c:	add	x0, x2, w0, sxth #2
   2d960:	br	x0
   2d964:	ldrb	w0, [x26, #8]
   2d968:	mov	x4, #0x0                   	// #0
   2d96c:	str	x23, [x25, #72]
   2d970:	and	w1, w0, #0xfffffff7
   2d974:	and	w1, w1, #0xff
   2d978:	cmp	w1, #0x2
   2d97c:	b.eq	2d674 <printf_parse@@Base+0xe194>  // b.none
   2d980:	cmp	x21, #0x0
   2d984:	mov	x4, #0x0                   	// #0
   2d988:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   2d98c:	b.eq	2d674 <printf_parse@@Base+0xe194>  // b.none
   2d990:	b	2d62c <printf_parse@@Base+0xe14c>
   2d994:	ldr	w0, [x26, #8]
   2d998:	mov	w1, #0x1                   	// #1
   2d99c:	movk	w1, #0x20, lsl #16
   2d9a0:	and	w0, w0, #0xffffff00
   2d9a4:	and	w0, w0, #0xffdfffff
   2d9a8:	orr	w0, w0, w1
   2d9ac:	str	w0, [x26, #8]
   2d9b0:	str	x24, [x25, #72]
   2d9b4:	b	2d62c <printf_parse@@Base+0xe14c>
   2d9b8:	str	w1, [sp, #104]
   2d9bc:	bl	a9d0 <__ctype_b_loc@plt>
   2d9c0:	ldr	w1, [sp, #104]
   2d9c4:	ldr	x0, [x0]
   2d9c8:	cmp	w1, #0x5f
   2d9cc:	ubfiz	x2, x1, #1, #8
   2d9d0:	ldrb	w3, [x26, #10]
   2d9d4:	ldrh	w0, [x0, x2]
   2d9d8:	and	w0, w0, #0x8
   2d9dc:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   2d9e0:	cset	w0, ne  // ne = any
   2d9e4:	bfi	w3, w0, #6, #1
   2d9e8:	strb	w3, [x26, #10]
   2d9ec:	b	2d944 <printf_parse@@Base+0xe464>
   2d9f0:	mov	w0, #0x8                   	// #8
   2d9f4:	strb	w0, [x26, #8]
   2d9f8:	str	x24, [x25, #72]
   2d9fc:	b	2d62c <printf_parse@@Base+0xe14c>
   2da00:	mov	w0, #0xb                   	// #11
   2da04:	strb	w0, [x26, #8]
   2da08:	str	x24, [x25, #72]
   2da0c:	b	2d62c <printf_parse@@Base+0xe14c>
   2da10:	ldr	x1, [sp, #128]
   2da14:	mov	x0, #0x1200                	// #4608
   2da18:	cmp	x1, x0
   2da1c:	b.ne	2d628 <printf_parse@@Base+0xe148>  // b.any
   2da20:	mov	w0, #0x17                  	// #23
   2da24:	strb	w0, [x26, #8]
   2da28:	str	x24, [x25, #72]
   2da2c:	b	2d62c <printf_parse@@Base+0xe14c>
   2da30:	mov	w0, #0x14                  	// #20
   2da34:	strb	w0, [x26, #8]
   2da38:	str	x24, [x25, #72]
   2da3c:	b	2d62c <printf_parse@@Base+0xe14c>
   2da40:	ldr	x0, [sp, #160]
   2da44:	cbnz	x0, 2da54 <printf_parse@@Base+0xe574>
   2da48:	ldr	x0, [x25, #88]
   2da4c:	cmp	x0, x24
   2da50:	b.ne	2dd08 <printf_parse@@Base+0xe828>  // b.any
   2da54:	mov	w0, #0xc                   	// #12
   2da58:	strb	w0, [x26, #8]
   2da5c:	mov	w0, #0x20                  	// #32
   2da60:	str	w0, [x26]
   2da64:	str	x24, [x25, #72]
   2da68:	b	2d62c <printf_parse@@Base+0xe14c>
   2da6c:	ldr	x0, [sp, #144]
   2da70:	cmp	x0, #0x8, lsl #12
   2da74:	b.ne	2d628 <printf_parse@@Base+0xe148>  // b.any
   2da78:	mov	w0, #0xa                   	// #10
   2da7c:	strb	w0, [x26, #8]
   2da80:	mov	x4, #0x0                   	// #0
   2da84:	str	x24, [x25, #72]
   2da88:	b	2d674 <printf_parse@@Base+0xe194>
   2da8c:	ldr	x0, [sp, #112]
   2da90:	cbz	x0, 2d628 <printf_parse@@Base+0xe148>
   2da94:	mov	w0, #0x9                   	// #9
   2da98:	strb	w0, [x26, #8]
   2da9c:	mov	w0, #0x9                   	// #9
   2daa0:	str	x24, [x25, #72]
   2daa4:	b	2d980 <printf_parse@@Base+0xe4a0>
   2daa8:	cmp	w3, #0x1
   2daac:	b.le	2dadc <printf_parse@@Base+0xe5fc>
   2dab0:	ldr	x0, [x25, #16]
   2dab4:	ldr	w1, [x0, x24, lsl #2]
   2dab8:	add	x0, x0, x24, lsl #2
   2dabc:	cmn	w1, #0x1
   2dac0:	b.eq	2dd74 <printf_parse@@Base+0xe894>  // b.none
   2dac4:	ldr	x1, [x25, #48]
   2dac8:	cmp	x1, x23
   2dacc:	b.eq	2dadc <printf_parse@@Base+0xe5fc>  // b.none
   2dad0:	ldr	w1, [x0, #4]
   2dad4:	cmn	w1, #0x1
   2dad8:	b.eq	2dd74 <printf_parse@@Base+0xe894>  // b.none
   2dadc:	ldrb	w1, [x25, #140]
   2dae0:	ldr	x0, [x25]
   2dae4:	ldr	x5, [x25, #40]
   2dae8:	cbz	w1, 2dd68 <printf_parse@@Base+0xe888>
   2daec:	ldr	x1, [x25, #24]
   2daf0:	add	x0, x0, x5
   2daf4:	ldr	x1, [x1, x24, lsl #3]
   2daf8:	ldrb	w1, [x0, x1]
   2dafc:	tbz	w1, #7, 2d8fc <printf_parse@@Base+0xe41c>
   2db00:	b	2d8f8 <printf_parse@@Base+0xe418>
   2db04:	ldr	x0, [sp, #184]
   2db08:	cbnz	x0, 2d964 <printf_parse@@Base+0xe484>
   2db0c:	sub	w0, w1, #0x31
   2db10:	mov	w1, #0x4                   	// #4
   2db14:	strb	w1, [x26, #8]
   2db18:	sxtw	x0, w0
   2db1c:	str	x0, [x26]
   2db20:	str	x23, [x25, #72]
   2db24:	b	2d62c <printf_parse@@Base+0xe14c>
   2db28:	ldr	x0, [sp, #152]
   2db2c:	cbnz	x0, 2d964 <printf_parse@@Base+0xe484>
   2db30:	mov	w0, #0xc                   	// #12
   2db34:	strb	w0, [x26, #8]
   2db38:	mov	w0, #0x40                  	// #64
   2db3c:	str	w0, [x26]
   2db40:	str	x23, [x25, #72]
   2db44:	b	2d62c <printf_parse@@Base+0xe14c>
   2db48:	ldr	x0, [sp, #152]
   2db4c:	cbnz	x0, 2d964 <printf_parse@@Base+0xe484>
   2db50:	mov	w0, #0xc                   	// #12
   2db54:	strb	w0, [x26, #8]
   2db58:	mov	w0, #0x100                 	// #256
   2db5c:	str	w0, [x26]
   2db60:	str	x23, [x25, #72]
   2db64:	b	2d62c <printf_parse@@Base+0xe14c>
   2db68:	ldr	x0, [sp, #152]
   2db6c:	cbnz	x0, 2d964 <printf_parse@@Base+0xe484>
   2db70:	mov	w0, #0x22                  	// #34
   2db74:	strb	w0, [x26, #8]
   2db78:	str	x23, [x25, #72]
   2db7c:	b	2d62c <printf_parse@@Base+0xe14c>
   2db80:	ldr	x0, [sp, #152]
   2db84:	cbnz	x0, 2d964 <printf_parse@@Base+0xe484>
   2db88:	mov	w0, #0x20                  	// #32
   2db8c:	strb	w0, [x26, #8]
   2db90:	str	x23, [x25, #72]
   2db94:	b	2d62c <printf_parse@@Base+0xe14c>
   2db98:	ldr	x0, [sp, #128]
   2db9c:	cmp	x0, #0x200
   2dba0:	b.ne	2d964 <printf_parse@@Base+0xe484>  // b.any
   2dba4:	mov	w0, #0x17                  	// #23
   2dba8:	strb	w0, [x26, #8]
   2dbac:	str	x23, [x25, #72]
   2dbb0:	b	2d62c <printf_parse@@Base+0xe14c>
   2dbb4:	ldr	x0, [sp, #144]
   2dbb8:	cbnz	x0, 2d964 <printf_parse@@Base+0xe484>
   2dbbc:	mov	w0, #0xa                   	// #10
   2dbc0:	strb	w0, [x26, #8]
   2dbc4:	mov	x4, #0x0                   	// #0
   2dbc8:	str	x23, [x25, #72]
   2dbcc:	b	2d674 <printf_parse@@Base+0xe194>
   2dbd0:	ldr	x0, [sp, #128]
   2dbd4:	cmp	x0, #0x200
   2dbd8:	b.ne	2d964 <printf_parse@@Base+0xe484>  // b.any
   2dbdc:	mov	w0, #0x18                  	// #24
   2dbe0:	strb	w0, [x26, #8]
   2dbe4:	str	x23, [x25, #72]
   2dbe8:	b	2d62c <printf_parse@@Base+0xe14c>
   2dbec:	ldr	x0, [sp, #120]
   2dbf0:	cmp	x0, #0x2
   2dbf4:	b.ne	2d964 <printf_parse@@Base+0xe484>  // b.any
   2dbf8:	mov	w0, #0x13                  	// #19
   2dbfc:	strb	w0, [x26, #8]
   2dc00:	str	x23, [x25, #72]
   2dc04:	b	2d62c <printf_parse@@Base+0xe14c>
   2dc08:	ldr	x0, [sp, #152]
   2dc0c:	cbnz	x0, 2d964 <printf_parse@@Base+0xe484>
   2dc10:	mov	w0, #0xc                   	// #12
   2dc14:	strb	w0, [x26, #8]
   2dc18:	mov	w0, #0x200                 	// #512
   2dc1c:	str	w0, [x26]
   2dc20:	str	x23, [x25, #72]
   2dc24:	b	2d62c <printf_parse@@Base+0xe14c>
   2dc28:	ldr	x0, [sp, #152]
   2dc2c:	cbnz	x0, 2d964 <printf_parse@@Base+0xe484>
   2dc30:	mov	w0, #0x23                  	// #35
   2dc34:	strb	w0, [x26, #8]
   2dc38:	str	x23, [x25, #72]
   2dc3c:	b	2d62c <printf_parse@@Base+0xe14c>
   2dc40:	ldr	x0, [sp, #152]
   2dc44:	cbnz	x0, 2d964 <printf_parse@@Base+0xe484>
   2dc48:	mov	w0, #0x21                  	// #33
   2dc4c:	strb	w0, [x26, #8]
   2dc50:	str	x23, [x25, #72]
   2dc54:	b	2d62c <printf_parse@@Base+0xe14c>
   2dc58:	ldr	x0, [sp, #152]
   2dc5c:	cbnz	x0, 2d964 <printf_parse@@Base+0xe484>
   2dc60:	mov	w0, #0xc                   	// #12
   2dc64:	strb	w0, [x26, #8]
   2dc68:	mov	w0, #0x6                   	// #6
   2dc6c:	str	w0, [x26]
   2dc70:	str	x23, [x25, #72]
   2dc74:	b	2d62c <printf_parse@@Base+0xe14c>
   2dc78:	ldr	x0, [sp, #152]
   2dc7c:	cbnz	x0, 2d964 <printf_parse@@Base+0xe484>
   2dc80:	mov	w0, #0xc                   	// #12
   2dc84:	strb	w0, [x26, #8]
   2dc88:	mov	w0, #0x9                   	// #9
   2dc8c:	str	w0, [x26]
   2dc90:	str	x23, [x25, #72]
   2dc94:	b	2d62c <printf_parse@@Base+0xe14c>
   2dc98:	ldr	x0, [sp, #120]
   2dc9c:	cmp	x0, #0x2
   2dca0:	b.ne	2d964 <printf_parse@@Base+0xe484>  // b.any
   2dca4:	mov	w0, #0x12                  	// #18
   2dca8:	strb	w0, [x26, #8]
   2dcac:	str	x23, [x25, #72]
   2dcb0:	b	2d62c <printf_parse@@Base+0xe14c>
   2dcb4:	ldr	x0, [sp, #152]
   2dcb8:	cbnz	x0, 2d964 <printf_parse@@Base+0xe484>
   2dcbc:	mov	w0, #0xc                   	// #12
   2dcc0:	strb	w0, [x26, #8]
   2dcc4:	mov	w0, #0x80                  	// #128
   2dcc8:	str	w0, [x26]
   2dccc:	str	x23, [x25, #72]
   2dcd0:	b	2d62c <printf_parse@@Base+0xe14c>
   2dcd4:	ldr	x0, [sp, #112]
   2dcd8:	cbnz	x0, 2d964 <printf_parse@@Base+0xe484>
   2dcdc:	mov	w0, #0x8                   	// #8
   2dce0:	strb	w0, [x26, #8]
   2dce4:	str	x23, [x25, #72]
   2dce8:	b	2d62c <printf_parse@@Base+0xe14c>
   2dcec:	ldr	x0, [sp, #112]
   2dcf0:	cbnz	x0, 2d964 <printf_parse@@Base+0xe484>
   2dcf4:	mov	w0, #0x9                   	// #9
   2dcf8:	strb	w0, [x26, #8]
   2dcfc:	mov	w0, #0x9                   	// #9
   2dd00:	str	x23, [x25, #72]
   2dd04:	b	2d980 <printf_parse@@Base+0xe4a0>
   2dd08:	ldr	x0, [sp, #176]
   2dd0c:	str	x24, [x25, #72]
   2dd10:	mov	x1, x25
   2dd14:	orr	x2, x19, #0x800000
   2dd18:	bl	23260 <printf_parse@@Base+0x3d80>
   2dd1c:	ldr	x23, [x25, #72]
   2dd20:	ldrb	w0, [sp, #200]
   2dd24:	sub	x1, x23, #0x1
   2dd28:	str	x1, [x25, #72]
   2dd2c:	sub	w0, w0, #0x9
   2dd30:	and	w0, w0, #0xff
   2dd34:	cmp	w0, #0x1
   2dd38:	b.hi	2d964 <printf_parse@@Base+0xe484>  // b.pmore
   2dd3c:	mov	x24, x23
   2dd40:	b	2da54 <printf_parse@@Base+0xe574>
   2dd44:	cbz	x28, 2dd5c <printf_parse@@Base+0xe87c>
   2dd48:	mov	x0, x28
   2dd4c:	mov	x28, #0x0                   	// #0
   2dd50:	bl	240f8 <printf_parse@@Base+0x4c18>
   2dd54:	ldp	x23, x24, [sp, #48]
   2dd58:	b	2d734 <printf_parse@@Base+0xe254>
   2dd5c:	ldp	x23, x24, [sp, #48]
   2dd60:	mov	x28, #0x0                   	// #0
   2dd64:	b	2d734 <printf_parse@@Base+0xe254>
   2dd68:	add	x0, x0, x24
   2dd6c:	ldrb	w1, [x0, x5]
   2dd70:	b	2d8fc <printf_parse@@Base+0xe41c>
   2dd74:	ldrb	w1, [x4, x24]
   2dd78:	mov	w2, #0x1                   	// #1
   2dd7c:	strb	w1, [x26]
   2dd80:	strb	w2, [x26, #8]
   2dd84:	b	2d918 <printf_parse@@Base+0xe438>
   2dd88:	stp	x29, x30, [sp, #-304]!
   2dd8c:	mov	x29, sp
   2dd90:	stp	x21, x22, [sp, #32]
   2dd94:	mov	x21, x0
   2dd98:	mov	x22, x1
   2dd9c:	stp	x19, x20, [sp, #16]
   2dda0:	mov	x20, x2
   2dda4:	ldrb	w0, [x0, #56]
   2dda8:	ldp	x19, x1, [x21]
   2ddac:	stp	x25, x26, [sp, #64]
   2ddb0:	mov	x26, x3
   2ddb4:	mov	w3, #0xffffff90            	// #-112
   2ddb8:	and	w0, w0, w3
   2ddbc:	stp	xzr, x26, [x21, #16]
   2ddc0:	str	xzr, [x21, #48]
   2ddc4:	cmp	x1, #0x117
   2ddc8:	strb	w0, [x21, #56]
   2ddcc:	str	wzr, [sp, #112]
   2ddd0:	b.ls	2f05c <printf_parse@@Base+0xfb7c>  // b.plast
   2ddd4:	mov	x2, #0x118                 	// #280
   2ddd8:	str	x2, [x21, #16]
   2dddc:	mov	x0, x19
   2dde0:	mov	w1, #0x0                   	// #0
   2dde4:	bl	a6f0 <memset@plt>
   2dde8:	mov	w0, #0xf                   	// #15
   2ddec:	str	w0, [x19, #128]
   2ddf0:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   2ddf4:	movk	x0, #0x555, lsl #48
   2ddf8:	cmp	x20, x0
   2ddfc:	b.cs	2e500 <printf_parse@@Base+0xf020>  // b.hs, b.nlast
   2de00:	stp	x23, x24, [sp, #48]
   2de04:	add	x23, x20, #0x1
   2de08:	str	x23, [x19, #8]
   2de0c:	lsl	x0, x23, #4
   2de10:	bl	a5f0 <malloc@plt>
   2de14:	str	x0, [x19]
   2de18:	cbz	x20, 2f07c <printf_parse@@Base+0xfb9c>
   2de1c:	mov	x1, #0x1                   	// #1
   2de20:	lsl	x1, x1, #1
   2de24:	cmp	x20, x1
   2de28:	b.cs	2de20 <printf_parse@@Base+0xe940>  // b.hs, b.nlast
   2de2c:	sub	x24, x1, #0x1
   2de30:	mov	x0, #0x18                  	// #24
   2de34:	bl	a770 <calloc@plt>
   2de38:	str	x0, [x19, #64]
   2de3c:	str	x24, [x19, #136]
   2de40:	bl	aa80 <__ctype_get_mb_cur_max@plt>
   2de44:	str	w0, [x19, #180]
   2de48:	mov	w0, #0xe                   	// #14
   2de4c:	bl	a5c0 <nl_langinfo@plt>
   2de50:	ldrb	w1, [x0]
   2de54:	and	w1, w1, #0xffffffdf
   2de58:	and	w1, w1, #0xff
   2de5c:	cmp	w1, #0x55
   2de60:	b.ne	2dec0 <printf_parse@@Base+0xe9e0>  // b.any
   2de64:	ldrb	w1, [x0, #1]
   2de68:	and	w1, w1, #0xffffffdf
   2de6c:	and	w1, w1, #0xff
   2de70:	cmp	w1, #0x54
   2de74:	b.ne	2dec0 <printf_parse@@Base+0xe9e0>  // b.any
   2de78:	ldrb	w1, [x0, #2]
   2de7c:	and	w1, w1, #0xffffffdf
   2de80:	and	w1, w1, #0xff
   2de84:	cmp	w1, #0x46
   2de88:	b.ne	2dec0 <printf_parse@@Base+0xe9e0>  // b.any
   2de8c:	ldrb	w1, [x0, #3]
   2de90:	cmp	w1, #0x2d
   2de94:	cset	x1, eq  // eq = none
   2de98:	add	x1, x1, #0x3
   2de9c:	add	x2, x0, x1
   2dea0:	ldrb	w0, [x0, x1]
   2dea4:	cmp	w0, #0x38
   2dea8:	b.ne	2dec0 <printf_parse@@Base+0xe9e0>  // b.any
   2deac:	ldrb	w0, [x2, #1]
   2deb0:	cbnz	w0, 2dec0 <printf_parse@@Base+0xe9e0>
   2deb4:	ldrb	w0, [x19, #176]
   2deb8:	orr	w0, w0, #0x4
   2debc:	strb	w0, [x19, #176]
   2dec0:	ldrb	w0, [x19, #176]
   2dec4:	ldr	w1, [x19, #180]
   2dec8:	and	w2, w0, #0xfffffff7
   2decc:	strb	w2, [x19, #176]
   2ded0:	cmp	w1, #0x1
   2ded4:	b.le	2deec <printf_parse@@Base+0xea0c>
   2ded8:	tbz	w0, #2, 2e51c <printf_parse@@Base+0xf03c>
   2dedc:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   2dee0:	add	x0, x0, #0x410
   2dee4:	add	x0, x0, #0x10
   2dee8:	str	x0, [x19, #120]
   2deec:	ldr	x0, [x19]
   2def0:	cbz	x0, 2ee34 <printf_parse@@Base+0xf954>
   2def4:	ldr	x0, [x19, #64]
   2def8:	cbz	x0, 2ee34 <printf_parse@@Base+0xf954>
   2defc:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   2df00:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   2df04:	stp	x27, x28, [sp, #80]
   2df08:	ldr	x0, [x0, #3944]
   2df0c:	str	wzr, [sp, #112]
   2df10:	ldr	x1, [x1, #4040]
   2df14:	cmp	x0, #0x0
   2df18:	cset	w0, ne  // ne = any
   2df1c:	cmp	x1, #0x0
   2df20:	cset	w1, ne  // ne = any
   2df24:	orr	w0, w0, w1
   2df28:	and	w25, w0, #0xff
   2df2c:	tbz	w0, #0, 2df48 <printf_parse@@Base+0xea68>
   2df30:	add	x0, x19, #0xe8
   2df34:	mov	x1, #0x0                   	// #0
   2df38:	bl	a840 <pthread_mutex_init@plt>
   2df3c:	cbnz	w0, 2e4f4 <printf_parse@@Base+0xf014>
   2df40:	ldr	w0, [sp, #112]
   2df44:	cbnz	w0, 2f290 <printf_parse@@Base+0xfdb0>
   2df48:	add	x27, sp, #0x90
   2df4c:	stp	xzr, xzr, [x27, #40]
   2df50:	ands	x24, x26, #0x400000
   2df54:	stp	xzr, xzr, [x27, #56]
   2df58:	cset	w6, ne  // ne = any
   2df5c:	dup	v0.2d, x20
   2df60:	stp	xzr, xzr, [x27, #72]
   2df64:	mov	x7, #0x0                   	// #0
   2df68:	stp	xzr, xzr, [x27, #88]
   2df6c:	stp	xzr, xzr, [x27, #104]
   2df70:	stp	xzr, xzr, [x27, #120]
   2df74:	stp	xzr, xzr, [x27, #136]
   2df78:	ldr	x3, [x21, #40]
   2df7c:	stp	xzr, xzr, [sp, #152]
   2df80:	ldrb	w1, [x19, #176]
   2df84:	orr	x28, x3, x24
   2df88:	ldr	w2, [x19, #180]
   2df8c:	cmp	x28, #0x0
   2df90:	str	x3, [sp, #264]
   2df94:	ubfx	x5, x1, #2, #1
   2df98:	cset	w4, ne  // ne = any
   2df9c:	ubfx	x1, x1, #3, #1
   2dfa0:	strb	w6, [sp, #280]
   2dfa4:	strb	w5, [sp, #281]
   2dfa8:	strb	w1, [sp, #282]
   2dfac:	strb	w4, [sp, #283]
   2dfb0:	str	w2, [sp, #288]
   2dfb4:	stp	xzr, xzr, [x27, #24]
   2dfb8:	str	x22, [sp, #144]
   2dfbc:	stp	q0, q0, [sp, #224]
   2dfc0:	cbnz	x20, 2e4c0 <printf_parse@@Base+0xefe0>
   2dfc4:	ldr	x0, [sp, #152]
   2dfc8:	cmp	w4, #0x0
   2dfcc:	csel	x22, x0, x22, ne  // ne = any
   2dfd0:	str	x22, [sp, #152]
   2dfd4:	cmp	w2, #0x1
   2dfd8:	cbz	x24, 2e06c <printf_parse@@Base+0xeb8c>
   2dfdc:	b.le	2efc0 <printf_parse@@Base+0xfae0>
   2dfe0:	mov	x22, #0x1fffffffffffffff    	// #2305843009213693951
   2dfe4:	mov	x0, x27
   2dfe8:	bl	209d0 <printf_parse@@Base+0x14f0>
   2dfec:	cbnz	w0, 2e438 <printf_parse@@Base+0xef58>
   2dff0:	ldr	x0, [sp, #200]
   2dff4:	cmp	x20, x0
   2dff8:	b.le	2f0f4 <printf_parse@@Base+0xfc14>
   2dffc:	ldr	x1, [sp, #192]
   2e000:	ldrsw	x0, [x19, #180]
   2e004:	ldr	x23, [sp, #208]
   2e008:	add	x0, x0, x1
   2e00c:	cmp	x23, x0
   2e010:	b.gt	2f0f4 <printf_parse@@Base+0xfc14>
   2e014:	ldr	w0, [sp, #288]
   2e018:	lsl	x28, x23, #1
   2e01c:	cmp	w0, #0x1
   2e020:	b.le	2e05c <printf_parse@@Base+0xeb7c>
   2e024:	cmp	x28, x22
   2e028:	b.hi	2e434 <printf_parse@@Base+0xef54>  // b.pmore
   2e02c:	ldr	x0, [sp, #160]
   2e030:	lsl	x1, x23, #3
   2e034:	bl	a7e0 <realloc@plt>
   2e038:	mov	x1, x0
   2e03c:	cbz	x0, 2e434 <printf_parse@@Base+0xef54>
   2e040:	ldr	x0, [sp, #168]
   2e044:	str	x1, [sp, #160]
   2e048:	cbz	x0, 2e05c <printf_parse@@Base+0xeb7c>
   2e04c:	lsl	x1, x23, #4
   2e050:	bl	a7e0 <realloc@plt>
   2e054:	cbz	x0, 2e434 <printf_parse@@Base+0xef54>
   2e058:	str	x0, [sp, #168]
   2e05c:	ldrb	w0, [sp, #283]
   2e060:	cbnz	w0, 2e418 <printf_parse@@Base+0xef38>
   2e064:	str	x28, [sp, #208]
   2e068:	b	2dfe4 <printf_parse@@Base+0xeb04>
   2e06c:	b.gt	2ee3c <printf_parse@@Base+0xf95c>
   2e070:	cbz	x28, 2e670 <printf_parse@@Base+0xf190>
   2e074:	ldr	x2, [sp, #232]
   2e078:	ldr	x1, [sp, #192]
   2e07c:	cmp	x2, x7
   2e080:	csel	x2, x2, x7, le
   2e084:	cmp	x2, x1
   2e088:	b.le	2f1e8 <printf_parse@@Base+0xfd08>
   2e08c:	ldr	x3, [sp, #144]
   2e090:	add	x0, x1, #0x1
   2e094:	ldr	x5, [sp, #184]
   2e098:	add	x3, x3, x1
   2e09c:	ldr	x4, [sp, #264]
   2e0a0:	cmp	x2, x0
   2e0a4:	ldrb	w3, [x3, x5]
   2e0a8:	ldrb	w3, [x4, x3]
   2e0ac:	strb	w3, [x22, x1]
   2e0b0:	b.le	2e0e4 <printf_parse@@Base+0xec04>
   2e0b4:	nop
   2e0b8:	ldr	x1, [sp, #144]
   2e0bc:	ldr	x3, [sp, #184]
   2e0c0:	add	x1, x1, x0
   2e0c4:	ldr	x4, [sp, #264]
   2e0c8:	ldrb	w3, [x1, x3]
   2e0cc:	ldr	x1, [sp, #152]
   2e0d0:	ldrb	w3, [x4, x3]
   2e0d4:	strb	w3, [x1, x0]
   2e0d8:	add	x0, x0, #0x1
   2e0dc:	cmp	x2, x0
   2e0e0:	b.ne	2e0b8 <printf_parse@@Base+0xebd8>  // b.any
   2e0e4:	dup	v0.2d, x2
   2e0e8:	str	wzr, [sp, #112]
   2e0ec:	str	q0, [sp, #192]
   2e0f0:	add	x23, sp, #0x78
   2e0f4:	ldr	x28, [x21]
   2e0f8:	str	xzr, [x21, #48]
   2e0fc:	orr	x2, x26, #0x800000
   2e100:	mov	x1, x27
   2e104:	mov	x0, x23
   2e108:	str	x26, [x28, #216]
   2e10c:	bl	23260 <printf_parse@@Base+0x3d80>
   2e110:	mov	w6, w0
   2e114:	ldr	x1, [sp, #216]
   2e118:	mov	x3, x26
   2e11c:	mov	x0, x27
   2e120:	mov	x2, x23
   2e124:	add	x5, sp, #0x70
   2e128:	mov	x4, #0x0                   	// #0
   2e12c:	add	x6, x1, w6, sxtw
   2e130:	mov	x1, x21
   2e134:	str	x6, [sp, #216]
   2e138:	bl	2d498 <printf_parse@@Base+0xdfb8>
   2e13c:	mov	x26, x0
   2e140:	ldr	w1, [sp, #112]
   2e144:	cmp	w1, #0x0
   2e148:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   2e14c:	b.eq	2f1f0 <printf_parse@@Base+0xfd10>  // b.none
   2e150:	ldr	w3, [x28, #128]
   2e154:	ldr	x20, [x21]
   2e158:	cmp	w3, #0xf
   2e15c:	b.eq	2f0ac <printf_parse@@Base+0xfbcc>  // b.none
   2e160:	sbfiz	x2, x3, #6, #32
   2e164:	sxtw	x1, w3
   2e168:	ldr	x22, [x28, #112]
   2e16c:	add	x0, x2, #0x8
   2e170:	add	w3, w3, #0x1
   2e174:	add	x2, x2, #0x30
   2e178:	movi	v0.4s, #0x0
   2e17c:	lsl	x1, x1, #6
   2e180:	add	x4, x22, x1
   2e184:	add	x2, x22, x2
   2e188:	str	w3, [x28, #128]
   2e18c:	add	x3, x1, #0x20
   2e190:	add	x3, x22, x3
   2e194:	mov	w6, #0x2                   	// #2
   2e198:	stur	q0, [x4, #8]
   2e19c:	add	x22, x22, x0
   2e1a0:	mov	x5, #0xffffffffffffffff    	// #-1
   2e1a4:	str	xzr, [x4, #24]
   2e1a8:	strb	w6, [x2, #8]
   2e1ac:	mov	x2, x22
   2e1b0:	ldrb	w0, [x3, #26]
   2e1b4:	and	w0, w0, #0xfffffff3
   2e1b8:	strb	w0, [x3, #26]
   2e1bc:	str	x5, [x4, #64]
   2e1c0:	str	q0, [x4, #32]
   2e1c4:	cbz	x26, 2e244 <printf_parse@@Base+0xed64>
   2e1c8:	ldr	w3, [x28, #128]
   2e1cc:	cmp	w3, #0xf
   2e1d0:	b.eq	2f188 <printf_parse@@Base+0xfca8>  // b.none
   2e1d4:	sbfiz	x2, x3, #6, #32
   2e1d8:	sxtw	x1, w3
   2e1dc:	ldr	x0, [x28, #112]
   2e1e0:	add	x7, x2, #0x8
   2e1e4:	add	w3, w3, #0x1
   2e1e8:	add	x2, x2, #0x30
   2e1ec:	lsl	x1, x1, #6
   2e1f0:	add	x2, x0, x2
   2e1f4:	add	x4, x0, x1
   2e1f8:	add	x5, x1, #0x20
   2e1fc:	str	w3, [x28, #128]
   2e200:	add	x3, x0, x5
   2e204:	mov	w6, #0x10                  	// #16
   2e208:	mov	x5, #0xffffffffffffffff    	// #-1
   2e20c:	stp	xzr, x26, [x4, #8]
   2e210:	add	x0, x0, x7
   2e214:	str	x22, [x4, #24]
   2e218:	strb	w6, [x2, #8]
   2e21c:	ldrb	w2, [x3, #26]
   2e220:	and	w2, w2, #0xfffffff3
   2e224:	strb	w2, [x3, #26]
   2e228:	stp	xzr, xzr, [x4, #32]
   2e22c:	str	x5, [x4, #64]
   2e230:	str	x0, [x26]
   2e234:	cbz	x22, 2e23c <printf_parse@@Base+0xed5c>
   2e238:	str	x0, [x22]
   2e23c:	mov	x2, x22
   2e240:	mov	x22, x0
   2e244:	cmp	x2, #0x0
   2e248:	cset	w0, eq  // eq = none
   2e24c:	cmp	x22, #0x0
   2e250:	csinc	w0, w0, wzr, ne  // ne = any
   2e254:	cbnz	w0, 2f0dc <printf_parse@@Base+0xfbfc>
   2e258:	ldr	x26, [x20, #8]
   2e25c:	str	x22, [x19, #104]
   2e260:	lsl	x27, x26, #3
   2e264:	add	x26, x26, x26, lsl #1
   2e268:	mov	x0, x27
   2e26c:	bl	a5f0 <malloc@plt>
   2e270:	mov	x22, x0
   2e274:	str	x22, [x20, #24]
   2e278:	mov	x0, x27
   2e27c:	lsl	x26, x26, #3
   2e280:	bl	a5f0 <malloc@plt>
   2e284:	mov	x27, x0
   2e288:	str	x27, [x20, #32]
   2e28c:	mov	x0, x26
   2e290:	bl	a5f0 <malloc@plt>
   2e294:	mov	x1, x0
   2e298:	str	x1, [x20, #40]
   2e29c:	mov	x0, x26
   2e2a0:	mov	x26, x1
   2e2a4:	bl	a5f0 <malloc@plt>
   2e2a8:	str	x0, [x20, #48]
   2e2ac:	cbz	x22, 2ee1c <printf_parse@@Base+0xf93c>
   2e2b0:	cbz	x27, 2ee1c <printf_parse@@Base+0xf93c>
   2e2b4:	cbz	x26, 2ee1c <printf_parse@@Base+0xf93c>
   2e2b8:	cbz	x0, 2ee1c <printf_parse@@Base+0xf93c>
   2e2bc:	ldr	x22, [x21, #48]
   2e2c0:	lsl	x0, x22, #3
   2e2c4:	bl	a5f0 <malloc@plt>
   2e2c8:	str	x0, [x20, #224]
   2e2cc:	ldr	x1, [x20, #104]
   2e2d0:	cbz	x0, 2e3b0 <printf_parse@@Base+0xeed0>
   2e2d4:	mov	x2, #0x0                   	// #0
   2e2d8:	cbz	x22, 2e2f0 <printf_parse@@Base+0xee10>
   2e2dc:	nop
   2e2e0:	str	x2, [x0, x2, lsl #3]
   2e2e4:	add	x2, x2, #0x1
   2e2e8:	cmp	x2, x22
   2e2ec:	b.ne	2e2e0 <printf_parse@@Base+0xee00>  // b.any
   2e2f0:	ldrb	w4, [x1, #48]
   2e2f4:	mov	x7, #0x1                   	// #1
   2e2f8:	mov	x3, x1
   2e2fc:	mov	w6, w7
   2e300:	cmp	w4, #0x4
   2e304:	ldr	x2, [x1, #8]
   2e308:	b.eq	2e334 <printf_parse@@Base+0xee54>  // b.none
   2e30c:	nop
   2e310:	cmp	w4, #0x11
   2e314:	b.eq	2e614 <printf_parse@@Base+0xf134>  // b.none
   2e318:	cbz	x2, 2e358 <printf_parse@@Base+0xee78>
   2e31c:	ldrb	w4, [x2, #48]
   2e320:	ldr	x5, [x2, #8]
   2e324:	mov	x3, x2
   2e328:	cmp	w4, #0x4
   2e32c:	mov	x2, x5
   2e330:	b.ne	2e310 <printf_parse@@Base+0xee30>  // b.any
   2e334:	ldrsw	x4, [x3, #40]
   2e338:	ldr	x5, [x20, #160]
   2e33c:	ldr	x4, [x0, x4, lsl #3]
   2e340:	str	x4, [x3, #40]
   2e344:	lsl	w4, w6, w4
   2e348:	sxtw	x4, w4
   2e34c:	orr	x4, x5, x4
   2e350:	str	x4, [x20, #160]
   2e354:	cbnz	x2, 2e31c <printf_parse@@Base+0xee3c>
   2e358:	mov	x4, #0x0                   	// #0
   2e35c:	b	2e364 <printf_parse@@Base+0xee84>
   2e360:	mov	x3, x2
   2e364:	ldr	x2, [x3, #16]
   2e368:	cmp	x2, #0x0
   2e36c:	ccmp	x2, x4, #0x4, ne  // ne = any
   2e370:	b.ne	2e31c <printf_parse@@Base+0xee3c>  // b.any
   2e374:	ldr	x2, [x3]
   2e378:	mov	x4, x3
   2e37c:	cbnz	x2, 2e360 <printf_parse@@Base+0xee80>
   2e380:	cbz	x22, 2e3a0 <printf_parse@@Base+0xeec0>
   2e384:	nop
   2e388:	ldr	x3, [x0, x2, lsl #3]
   2e38c:	cmp	x2, x3
   2e390:	b.ne	2e3b0 <printf_parse@@Base+0xeed0>  // b.any
   2e394:	add	x2, x2, #0x1
   2e398:	cmp	x2, x22
   2e39c:	b.ne	2e388 <printf_parse@@Base+0xeea8>  // b.any
   2e3a0:	bl	aa50 <free@plt>
   2e3a4:	str	xzr, [x20, #224]
   2e3a8:	ldr	x1, [x20, #104]
   2e3ac:	nop
   2e3b0:	mov	x22, x1
   2e3b4:	ldr	x1, [x1, #8]
   2e3b8:	cbnz	x1, 2e3b0 <printf_parse@@Base+0xeed0>
   2e3bc:	ldr	x1, [x22, #16]
   2e3c0:	cbnz	x1, 2e3b0 <printf_parse@@Base+0xeed0>
   2e3c4:	mov	x2, #0x0                   	// #0
   2e3c8:	str	wzr, [sp, #120]
   2e3cc:	cbz	x1, 2e3dc <printf_parse@@Base+0xeefc>
   2e3d0:	ldrb	w0, [x1, #48]
   2e3d4:	cmp	w0, #0x11
   2e3d8:	b.eq	2e5c4 <printf_parse@@Base+0xf0e4>  // b.none
   2e3dc:	cbz	x2, 2e3f4 <printf_parse@@Base+0xef14>
   2e3e0:	ldrb	w0, [x2, #48]
   2e3e4:	cmp	w0, #0x11
   2e3e8:	b.eq	2e5f8 <printf_parse@@Base+0xf118>  // b.none
   2e3ec:	ldr	w0, [sp, #120]
   2e3f0:	cbnz	w0, 2e438 <printf_parse@@Base+0xef58>
   2e3f4:	ldr	x0, [x22]
   2e3f8:	cbz	x0, 2e680 <printf_parse@@Base+0xf1a0>
   2e3fc:	ldr	x2, [x0, #16]
   2e400:	cmp	x2, #0x0
   2e404:	ccmp	x22, x2, #0x4, ne  // ne = any
   2e408:	b.ne	2f0ec <printf_parse@@Base+0xfc0c>  // b.any
   2e40c:	mov	x22, x0
   2e410:	ldr	x1, [x0, #8]
   2e414:	b	2e3c8 <printf_parse@@Base+0xeee8>
   2e418:	ldr	x0, [sp, #152]
   2e41c:	mov	x1, x28
   2e420:	bl	a7e0 <realloc@plt>
   2e424:	cbz	x0, 2e434 <printf_parse@@Base+0xef54>
   2e428:	str	x0, [sp, #152]
   2e42c:	str	x28, [sp, #208]
   2e430:	b	2dfe4 <printf_parse@@Base+0xeb04>
   2e434:	mov	w0, #0xc                   	// #12
   2e438:	ldr	x20, [x21]
   2e43c:	str	w0, [sp, #112]
   2e440:	ldr	x22, [x20, #112]
   2e444:	cbz	x22, 2e458 <printf_parse@@Base+0xef78>
   2e448:	mov	x0, x22
   2e44c:	ldr	x22, [x22]
   2e450:	bl	aa50 <free@plt>
   2e454:	cbnz	x22, 2e448 <printf_parse@@Base+0xef68>
   2e458:	ldr	x0, [x20, #32]
   2e45c:	mov	w1, #0xf                   	// #15
   2e460:	stp	xzr, xzr, [x20, #104]
   2e464:	str	w1, [x20, #128]
   2e468:	bl	aa50 <free@plt>
   2e46c:	str	xzr, [x20, #32]
   2e470:	ldr	x0, [sp, #160]
   2e474:	bl	aa50 <free@plt>
   2e478:	ldr	x0, [sp, #168]
   2e47c:	bl	aa50 <free@plt>
   2e480:	ldrb	w0, [sp, #283]
   2e484:	cbnz	w0, 2e664 <printf_parse@@Base+0xf184>
   2e488:	cbz	w25, 2e494 <printf_parse@@Base+0xefb4>
   2e48c:	add	x0, x19, #0xe8
   2e490:	bl	ac30 <pthread_mutex_destroy@plt>
   2e494:	mov	x0, x19
   2e498:	bl	24248 <printf_parse@@Base+0x4d68>
   2e49c:	ldr	w0, [sp, #112]
   2e4a0:	ldp	x23, x24, [sp, #48]
   2e4a4:	ldp	x27, x28, [sp, #80]
   2e4a8:	stp	xzr, xzr, [x21]
   2e4ac:	ldp	x19, x20, [sp, #16]
   2e4b0:	ldp	x21, x22, [sp, #32]
   2e4b4:	ldp	x25, x26, [sp, #64]
   2e4b8:	ldp	x29, x30, [sp], #304
   2e4bc:	ret
   2e4c0:	cmp	w2, #0x1
   2e4c4:	mov	x7, x23
   2e4c8:	b.le	2e4e4 <printf_parse@@Base+0xf004>
   2e4cc:	lsl	x0, x23, #2
   2e4d0:	str	x23, [sp, #96]
   2e4d4:	bl	a5f0 <malloc@plt>
   2e4d8:	cbz	x0, 2f108 <printf_parse@@Base+0xfc28>
   2e4dc:	ldr	x7, [sp, #96]
   2e4e0:	str	x0, [sp, #160]
   2e4e4:	cbnz	x28, 2f030 <printf_parse@@Base+0xfb50>
   2e4e8:	ldr	w2, [x19, #180]
   2e4ec:	str	x23, [sp, #208]
   2e4f0:	b	2dfd0 <printf_parse@@Base+0xeaf0>
   2e4f4:	ldp	x23, x24, [sp, #48]
   2e4f8:	ldp	x27, x28, [sp, #80]
   2e4fc:	nop
   2e500:	mov	w0, #0xc                   	// #12
   2e504:	str	w0, [sp, #112]
   2e508:	mov	x0, x19
   2e50c:	bl	24248 <printf_parse@@Base+0x4d68>
   2e510:	ldr	w0, [sp, #112]
   2e514:	stp	xzr, xzr, [x21]
   2e518:	b	2e4ac <printf_parse@@Base+0xefcc>
   2e51c:	mov	x1, #0x1                   	// #1
   2e520:	mov	x0, #0x20                  	// #32
   2e524:	bl	a770 <calloc@plt>
   2e528:	str	x0, [x19, #120]
   2e52c:	cbz	x0, 2ee34 <printf_parse@@Base+0xf954>
   2e530:	mov	x25, #0x1                   	// #1
   2e534:	stp	x27, x28, [sp, #80]
   2e538:	mov	x27, #0x0                   	// #0
   2e53c:	lsl	w24, w27, #3
   2e540:	mov	w28, #0x0                   	// #0
   2e544:	b	2e568 <printf_parse@@Base+0xf088>
   2e548:	cbnz	w3, 2e558 <printf_parse@@Base+0xf078>
   2e54c:	ldrb	w0, [x19, #176]
   2e550:	orr	w0, w0, #0x8
   2e554:	strb	w0, [x19, #176]
   2e558:	add	w28, w28, #0x1
   2e55c:	add	w24, w24, #0x1
   2e560:	cmp	w28, #0x40
   2e564:	b.eq	2e5b0 <printf_parse@@Base+0xf0d0>  // b.none
   2e568:	mov	w0, w24
   2e56c:	bl	a8d0 <btowc@plt>
   2e570:	and	w3, w24, #0xffffff80
   2e574:	cmn	w0, #0x1
   2e578:	b.eq	2e548 <printf_parse@@Base+0xf068>  // b.none
   2e57c:	ldr	x4, [x19, #120]
   2e580:	lsl	x1, x25, x28
   2e584:	ldr	x2, [x4, x27]
   2e588:	orr	x1, x2, x1
   2e58c:	str	x1, [x4, x27]
   2e590:	cbnz	w3, 2e558 <printf_parse@@Base+0xf078>
   2e594:	cmp	w0, w24
   2e598:	b.ne	2e54c <printf_parse@@Base+0xf06c>  // b.any
   2e59c:	add	w28, w28, #0x1
   2e5a0:	add	w24, w24, #0x1
   2e5a4:	cmp	w28, #0x40
   2e5a8:	b.ne	2e568 <printf_parse@@Base+0xf088>  // b.any
   2e5ac:	nop
   2e5b0:	add	x27, x27, #0x8
   2e5b4:	cmp	x27, #0x20
   2e5b8:	b.ne	2e53c <printf_parse@@Base+0xf05c>  // b.any
   2e5bc:	ldp	x27, x28, [sp, #80]
   2e5c0:	b	2deec <printf_parse@@Base+0xea0c>
   2e5c4:	mov	x2, x1
   2e5c8:	mov	x0, x23
   2e5cc:	mov	x1, x21
   2e5d0:	bl	27b70 <printf_parse@@Base+0x8690>
   2e5d4:	str	x0, [x22, #8]
   2e5d8:	cbz	x0, 2e5e0 <printf_parse@@Base+0xf100>
   2e5dc:	str	x22, [x0]
   2e5e0:	ldr	x2, [x22, #16]
   2e5e4:	cbz	x2, 2e3ec <printf_parse@@Base+0xef0c>
   2e5e8:	ldrb	w0, [x2, #48]
   2e5ec:	cmp	w0, #0x11
   2e5f0:	b.ne	2e3ec <printf_parse@@Base+0xef0c>  // b.any
   2e5f4:	nop
   2e5f8:	mov	x1, x21
   2e5fc:	mov	x0, x23
   2e600:	bl	27b70 <printf_parse@@Base+0x8690>
   2e604:	str	x0, [x22, #16]
   2e608:	cbz	x0, 2e3ec <printf_parse@@Base+0xef0c>
   2e60c:	str	x22, [x0]
   2e610:	b	2e3ec <printf_parse@@Base+0xef0c>
   2e614:	cbz	x2, 2e358 <printf_parse@@Base+0xee78>
   2e618:	ldrb	w4, [x2, #48]
   2e61c:	ldr	x5, [x2, #8]
   2e620:	cmp	w4, #0x11
   2e624:	b.ne	2e324 <printf_parse@@Base+0xee44>  // b.any
   2e628:	ldr	x4, [x2, #40]
   2e62c:	str	x5, [x3, #8]
   2e630:	cbz	x5, 2e638 <printf_parse@@Base+0xf158>
   2e634:	str	x3, [x5]
   2e638:	ldr	x8, [x3, #40]
   2e63c:	mov	x2, x5
   2e640:	cmp	x4, #0x3f
   2e644:	ldr	x5, [x0, x8, lsl #3]
   2e648:	str	x5, [x0, x4, lsl #3]
   2e64c:	b.gt	2e318 <printf_parse@@Base+0xee38>
   2e650:	ldr	x5, [x20, #160]
   2e654:	lsl	x4, x7, x4
   2e658:	bic	x4, x5, x4
   2e65c:	str	x4, [x20, #160]
   2e660:	b	2e318 <printf_parse@@Base+0xee38>
   2e664:	ldr	x0, [sp, #152]
   2e668:	bl	aa50 <free@plt>
   2e66c:	b	2e488 <printf_parse@@Base+0xefa8>
   2e670:	dup	v0.2d, x7
   2e674:	str	wzr, [sp, #112]
   2e678:	str	q0, [sp, #192]
   2e67c:	b	2e0f0 <printf_parse@@Base+0xec10>
   2e680:	ldr	x0, [x20, #104]
   2e684:	nop
   2e688:	mov	x22, x0
   2e68c:	ldr	x0, [x0, #8]
   2e690:	cbnz	x0, 2e688 <printf_parse@@Base+0xf1a8>
   2e694:	ldr	x0, [x22, #16]
   2e698:	cbnz	x0, 2e688 <printf_parse@@Base+0xf1a8>
   2e69c:	b	2e6d0 <printf_parse@@Base+0xf1f0>
   2e6a0:	ldr	x0, [x22, #8]
   2e6a4:	ldr	x1, [x0, #24]
   2e6a8:	ldr	x0, [x0, #56]
   2e6ac:	str	x1, [x22, #24]
   2e6b0:	str	x0, [x22, #56]
   2e6b4:	ldr	x1, [x22]
   2e6b8:	cbz	x1, 2e730 <printf_parse@@Base+0xf250>
   2e6bc:	ldr	x0, [x1, #16]
   2e6c0:	cmp	x0, #0x0
   2e6c4:	ccmp	x22, x0, #0x4, ne  // ne = any
   2e6c8:	b.ne	2e688 <printf_parse@@Base+0xf1a8>  // b.any
   2e6cc:	mov	x22, x1
   2e6d0:	ldrb	w0, [x22, #48]
   2e6d4:	cmp	w0, #0x10
   2e6d8:	b.eq	2e6a0 <printf_parse@@Base+0xf1c0>  // b.none
   2e6dc:	ldp	x2, x3, [x22, #40]
   2e6e0:	str	x22, [x22, #24]
   2e6e4:	mov	x0, x20
   2e6e8:	mov	x1, x2
   2e6ec:	mov	x2, x3
   2e6f0:	bl	212f8 <printf_parse@@Base+0x1e18>
   2e6f4:	str	x0, [x22, #56]
   2e6f8:	cmn	x0, #0x1
   2e6fc:	b.eq	2e434 <printf_parse@@Base+0xef54>  // b.none
   2e700:	ldrb	w1, [x22, #48]
   2e704:	cmp	w1, #0xc
   2e708:	b.ne	2e6b4 <printf_parse@@Base+0xf1d4>  // b.any
   2e70c:	ldr	x1, [x20]
   2e710:	ldr	w2, [x22, #40]
   2e714:	add	x0, x1, x0, lsl #4
   2e718:	ldr	w1, [x0, #8]
   2e71c:	bfi	w1, w2, #8, #10
   2e720:	str	w1, [x0, #8]
   2e724:	ldr	x1, [x22]
   2e728:	cbnz	x1, 2e6bc <printf_parse@@Base+0xf1dc>
   2e72c:	nop
   2e730:	ldr	x22, [x20, #104]
   2e734:	mov	x0, x22
   2e738:	ldrb	w2, [x0, #48]
   2e73c:	ldr	x1, [x0, #8]
   2e740:	cmp	w2, #0xb
   2e744:	b.eq	2e784 <printf_parse@@Base+0xf2a4>  // b.none
   2e748:	cmp	w2, #0x10
   2e74c:	b.eq	2e964 <printf_parse@@Base+0xf484>  // b.none
   2e750:	cbz	x1, 2e75c <printf_parse@@Base+0xf27c>
   2e754:	ldr	x2, [x0, #32]
   2e758:	str	x2, [x1, #32]
   2e75c:	ldr	x2, [x0, #16]
   2e760:	cbz	x2, 2e76c <printf_parse@@Base+0xf28c>
   2e764:	ldr	x3, [x0, #32]
   2e768:	str	x3, [x2, #32]
   2e76c:	cbz	x1, 2e79c <printf_parse@@Base+0xf2bc>
   2e770:	mov	x0, x1
   2e774:	ldrb	w2, [x0, #48]
   2e778:	ldr	x1, [x0, #8]
   2e77c:	cmp	w2, #0xb
   2e780:	b.ne	2e748 <printf_parse@@Base+0xf268>  // b.any
   2e784:	str	x0, [x1, #32]
   2e788:	mov	x0, x1
   2e78c:	b	2e774 <printf_parse@@Base+0xf294>
   2e790:	ldr	x2, [x3, #16]
   2e794:	mov	x1, x0
   2e798:	mov	x0, x3
   2e79c:	cmp	x2, #0x0
   2e7a0:	ccmp	x1, x2, #0x4, ne  // ne = any
   2e7a4:	b.ne	2ef70 <printf_parse@@Base+0xfa90>  // b.any
   2e7a8:	ldr	x3, [x0]
   2e7ac:	cbnz	x3, 2e790 <printf_parse@@Base+0xf2b0>
   2e7b0:	ldrb	w0, [x22, #48]
   2e7b4:	mov	x26, #0x2                   	// #2
   2e7b8:	ldr	x2, [x22, #56]
   2e7bc:	cmp	w0, #0xb
   2e7c0:	b.hi	2e844 <printf_parse@@Base+0xf364>  // b.pmore
   2e7c4:	nop
   2e7c8:	cmp	w0, #0x9
   2e7cc:	b.hi	2ea14 <printf_parse@@Base+0xf534>  // b.pmore
   2e7d0:	cmp	w0, #0x4
   2e7d4:	b.eq	2e9b8 <printf_parse@@Base+0xf4d8>  // b.none
   2e7d8:	b.ls	2e930 <printf_parse@@Base+0xf450>  // b.plast
   2e7dc:	sub	w1, w0, #0x8
   2e7e0:	and	w1, w1, #0xff
   2e7e4:	cmp	w1, #0x1
   2e7e8:	b.hi	2e854 <printf_parse@@Base+0xf374>  // b.pmore
   2e7ec:	adrp	x3, 32000 <vasnprintf@@Base+0x1848>
   2e7f0:	add	x2, x2, x2, lsl #1
   2e7f4:	ldr	x1, [x20, #40]
   2e7f8:	lsl	x2, x2, #3
   2e7fc:	ldr	q0, [x3, #1712]
   2e800:	add	x28, x1, x2
   2e804:	ldr	x4, [x22, #32]
   2e808:	mov	x0, #0x8                   	// #8
   2e80c:	ldr	x27, [x4, #56]
   2e810:	str	q0, [x1, x2]
   2e814:	bl	a5f0 <malloc@plt>
   2e818:	str	x0, [x28, #16]
   2e81c:	cbz	x0, 2f0fc <printf_parse@@Base+0xfc1c>
   2e820:	str	x27, [x0]
   2e824:	nop
   2e828:	ldr	x28, [x22, #8]
   2e82c:	cbz	x28, 2e880 <printf_parse@@Base+0xf3a0>
   2e830:	mov	x22, x28
   2e834:	ldrb	w0, [x22, #48]
   2e838:	ldr	x2, [x22, #56]
   2e83c:	cmp	w0, #0xb
   2e840:	b.ls	2e7c8 <printf_parse@@Base+0xf2e8>  // b.plast
   2e844:	cmp	w0, #0xc
   2e848:	b.eq	2e7ec <printf_parse@@Base+0xf30c>  // b.none
   2e84c:	cmp	w0, #0x10
   2e850:	b.eq	2e828 <printf_parse@@Base+0xf348>  // b.none
   2e854:	tbz	w0, #3, 2ea90 <printf_parse@@Base+0xf5b0>
   2e858:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   2e85c:	add	x3, x3, #0x410
   2e860:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2e864:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   2e868:	add	x3, x3, #0x58
   2e86c:	add	x1, x1, #0x1d0
   2e870:	add	x0, x0, #0x228
   2e874:	mov	w2, #0x5c2                 	// #1474
   2e878:	bl	aea0 <__assert_fail@plt>
   2e87c:	mov	x22, x0
   2e880:	ldr	x0, [x22, #16]
   2e884:	cmp	x0, #0x0
   2e888:	cset	w27, eq  // eq = none
   2e88c:	cmp	x0, x28
   2e890:	csinc	w27, w27, wzr, ne  // ne = any
   2e894:	cbz	w27, 2ef7c <printf_parse@@Base+0xfa9c>
   2e898:	ldr	x0, [x22]
   2e89c:	mov	x28, x22
   2e8a0:	cbnz	x0, 2e87c <printf_parse@@Base+0xf39c>
   2e8a4:	ldr	x1, [x20, #16]
   2e8a8:	mov	w28, #0x0                   	// #0
   2e8ac:	mov	x22, #0x0                   	// #0
   2e8b0:	cmp	x22, x1
   2e8b4:	b.eq	2e908 <printf_parse@@Base+0xf428>  // b.none
   2e8b8:	add	x26, x22, x22, lsl #1
   2e8bc:	ldr	x0, [x20, #48]
   2e8c0:	lsl	x26, x26, #3
   2e8c4:	add	x0, x0, x26
   2e8c8:	ldr	x0, [x0, #8]
   2e8cc:	cbnz	x0, 2e928 <printf_parse@@Base+0xf448>
   2e8d0:	mov	x2, x22
   2e8d4:	mov	x1, x20
   2e8d8:	mov	x0, x23
   2e8dc:	mov	w3, #0x1                   	// #1
   2e8e0:	bl	24898 <printf_parse@@Base+0x53b8>
   2e8e4:	cbnz	w0, 2e438 <printf_parse@@Base+0xef58>
   2e8e8:	ldr	x0, [x20, #48]
   2e8ec:	add	x22, x22, #0x1
   2e8f0:	add	x26, x0, x26
   2e8f4:	ldr	x0, [x26, #8]
   2e8f8:	cbz	x0, 2e980 <printf_parse@@Base+0xf4a0>
   2e8fc:	ldr	x1, [x20, #16]
   2e900:	cmp	x22, x1
   2e904:	b.ne	2e8b8 <printf_parse@@Base+0xf3d8>  // b.any
   2e908:	cbz	w28, 2eaac <printf_parse@@Base+0xf5cc>
   2e90c:	ldr	x0, [x20, #48]
   2e910:	mov	x26, #0x0                   	// #0
   2e914:	mov	w28, #0x0                   	// #0
   2e918:	mov	x22, #0x0                   	// #0
   2e91c:	add	x0, x0, x26
   2e920:	ldr	x0, [x0, #8]
   2e924:	cbz	x0, 2e8d0 <printf_parse@@Base+0xf3f0>
   2e928:	add	x22, x22, #0x1
   2e92c:	b	2e8b0 <printf_parse@@Base+0xf3d0>
   2e930:	cmp	w0, #0x2
   2e934:	b.ne	2ea90 <printf_parse@@Base+0xf5b0>  // b.any
   2e938:	ldr	x0, [x22, #32]
   2e93c:	cbz	x0, 2e828 <printf_parse@@Base+0xf348>
   2e940:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   2e944:	add	x3, x3, #0x410
   2e948:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2e94c:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   2e950:	add	x3, x3, #0x58
   2e954:	add	x1, x1, #0x1d0
   2e958:	add	x0, x0, #0x1f0
   2e95c:	mov	w2, #0x59f                 	// #1439
   2e960:	bl	aea0 <__assert_fail@plt>
   2e964:	ldr	x2, [x0, #16]
   2e968:	ldr	x3, [x2, #24]
   2e96c:	str	x3, [x1, #32]
   2e970:	ldr	x0, [x0, #32]
   2e974:	str	x0, [x2, #32]
   2e978:	mov	x0, x1
   2e97c:	b	2e774 <printf_parse@@Base+0xf294>
   2e980:	ldr	x0, [sp, #136]
   2e984:	bl	aa50 <free@plt>
   2e988:	ldr	x1, [x20, #16]
   2e98c:	cmp	x1, x22
   2e990:	b.eq	2ee04 <printf_parse@@Base+0xf924>  // b.none
   2e994:	add	x26, x22, x22, lsl #1
   2e998:	mov	w28, w27
   2e99c:	ldr	x0, [x20, #48]
   2e9a0:	lsl	x26, x26, #3
   2e9a4:	add	x0, x0, x26
   2e9a8:	ldr	x0, [x0, #8]
   2e9ac:	cbz	x0, 2e8d0 <printf_parse@@Base+0xf3f0>
   2e9b0:	add	x22, x22, #0x1
   2e9b4:	b	2e8b0 <printf_parse@@Base+0xf3d0>
   2e9b8:	ldr	x1, [x22, #32]
   2e9bc:	ldr	x0, [x20, #24]
   2e9c0:	ldr	x27, [x1, #56]
   2e9c4:	str	x27, [x0, x2, lsl #3]
   2e9c8:	ldrb	w0, [x22, #48]
   2e9cc:	cmp	w0, #0x4
   2e9d0:	b.ne	2e828 <printf_parse@@Base+0xf348>  // b.any
   2e9d4:	add	x2, x2, x2, lsl #1
   2e9d8:	mov	x0, #0x8                   	// #8
   2e9dc:	ldr	x1, [x20, #40]
   2e9e0:	lsl	x2, x2, #3
   2e9e4:	add	x3, x1, x2
   2e9e8:	str	x3, [sp, #96]
   2e9ec:	adrp	x3, 32000 <vasnprintf@@Base+0x1848>
   2e9f0:	ldr	q0, [x3, #1712]
   2e9f4:	str	q0, [x1, x2]
   2e9f8:	bl	a5f0 <malloc@plt>
   2e9fc:	ldr	x3, [sp, #96]
   2ea00:	str	x0, [x3, #16]
   2ea04:	cbnz	x0, 2e820 <printf_parse@@Base+0xf340>
   2ea08:	mov	w0, #0xc                   	// #12
   2ea0c:	stp	xzr, xzr, [x3]
   2ea10:	b	2e438 <printf_parse@@Base+0xef58>
   2ea14:	ldrb	w0, [x20, #176]
   2ea18:	orr	w0, w0, #0x1
   2ea1c:	strb	w0, [x20, #176]
   2ea20:	ldr	x28, [x22, #8]
   2ea24:	cbz	x28, 2efa8 <printf_parse@@Base+0xfac8>
   2ea28:	ldr	x0, [x28, #24]
   2ea2c:	ldr	x27, [x0, #56]
   2ea30:	ldr	x0, [x22, #16]
   2ea34:	cbz	x0, 2ef9c <printf_parse@@Base+0xfabc>
   2ea38:	ldr	x0, [x0, #24]
   2ea3c:	ldr	x3, [x0, #56]
   2ea40:	tbnz	x27, #63, 2f250 <printf_parse@@Base+0xfd70>
   2ea44:	tbnz	x3, #63, 2f22c <printf_parse@@Base+0xfd4c>
   2ea48:	ldr	x4, [x20, #40]
   2ea4c:	add	x2, x2, x2, lsl #1
   2ea50:	mov	x0, #0x10                  	// #16
   2ea54:	add	x5, x4, x2, lsl #3
   2ea58:	str	x26, [x4, x2, lsl #3]
   2ea5c:	stp	x5, x3, [sp, #96]
   2ea60:	bl	a5f0 <malloc@plt>
   2ea64:	ldr	x5, [sp, #96]
   2ea68:	str	x0, [x5, #16]
   2ea6c:	cbz	x0, 2e434 <printf_parse@@Base+0xef54>
   2ea70:	ldr	x3, [sp, #104]
   2ea74:	cmp	x27, x3
   2ea78:	b.eq	2ef88 <printf_parse@@Base+0xfaa8>  // b.none
   2ea7c:	str	x26, [x5, #8]
   2ea80:	b.ge	2efb4 <printf_parse@@Base+0xfad4>  // b.tcont
   2ea84:	stp	x27, x3, [x0]
   2ea88:	cbnz	x28, 2e830 <printf_parse@@Base+0xf350>
   2ea8c:	b	2e880 <printf_parse@@Base+0xf3a0>
   2ea90:	ldr	x3, [x22, #32]
   2ea94:	ldr	x0, [x20, #24]
   2ea98:	ldr	x28, [x22, #8]
   2ea9c:	ldr	x3, [x3, #56]
   2eaa0:	str	x3, [x0, x2, lsl #3]
   2eaa4:	cbnz	x28, 2e830 <printf_parse@@Base+0xf350>
   2eaa8:	b	2e880 <printf_parse@@Base+0xf3a0>
   2eaac:	ldrb	w0, [x21, #56]
   2eab0:	tbnz	w0, #4, 2eac8 <printf_parse@@Base+0xf5e8>
   2eab4:	ldr	x0, [x21, #48]
   2eab8:	cbz	x0, 2eac8 <printf_parse@@Base+0xf5e8>
   2eabc:	ldrb	w0, [x20, #176]
   2eac0:	tbnz	w0, #0, 2ead0 <printf_parse@@Base+0xf5f0>
   2eac4:	nop
   2eac8:	ldr	x0, [x20, #152]
   2eacc:	cbz	x0, 2ebc8 <printf_parse@@Base+0xf6e8>
   2ead0:	add	x0, x22, x22, lsl #1
   2ead4:	lsl	x0, x0, #3
   2ead8:	bl	a5f0 <malloc@plt>
   2eadc:	str	x0, [x20, #56]
   2eae0:	cbz	x0, 2f108 <printf_parse@@Base+0xfc28>
   2eae4:	mov	x2, #0x0                   	// #0
   2eae8:	mov	x1, #0x0                   	// #0
   2eaec:	cbnz	x22, 2eaf8 <printf_parse@@Base+0xf618>
   2eaf0:	b	2ebc8 <printf_parse@@Base+0xf6e8>
   2eaf4:	ldr	x0, [x20, #56]
   2eaf8:	add	x0, x0, x2
   2eafc:	add	x1, x1, #0x1
   2eb00:	add	x2, x2, #0x18
   2eb04:	stp	xzr, xzr, [x0]
   2eb08:	str	xzr, [x0, #16]
   2eb0c:	ldr	x0, [x20, #16]
   2eb10:	cmp	x0, x1
   2eb14:	b.hi	2eaf4 <printf_parse@@Base+0xf614>  // b.pmore
   2eb18:	cbz	x0, 2ebc8 <printf_parse@@Base+0xf6e8>
   2eb1c:	ldr	x8, [x20, #48]
   2eb20:	mov	x27, #0x0                   	// #0
   2eb24:	add	x7, x27, x27, lsl #1
   2eb28:	lsl	x7, x7, #3
   2eb2c:	add	x5, x8, x7
   2eb30:	ldp	x1, x6, [x5, #8]
   2eb34:	cmp	x1, #0x0
   2eb38:	b.le	2ebb8 <printf_parse@@Base+0xf6d8>
   2eb3c:	mov	x26, #0x0                   	// #0
   2eb40:	b	2eb60 <printf_parse@@Base+0xf680>
   2eb44:	add	x2, x1, #0x1
   2eb48:	str	x2, [x22, #8]
   2eb4c:	str	x27, [x0, x1, lsl #3]
   2eb50:	add	x26, x26, #0x1
   2eb54:	ldr	x0, [x5, #8]
   2eb58:	cmp	x26, x0
   2eb5c:	b.ge	2ebb4 <printf_parse@@Base+0xf6d4>  // b.tcont
   2eb60:	ldr	x2, [x6, x26, lsl #3]
   2eb64:	ldr	x3, [x20, #56]
   2eb68:	add	x2, x2, x2, lsl #1
   2eb6c:	add	x22, x3, x2, lsl #3
   2eb70:	ldr	x4, [x3, x2, lsl #3]
   2eb74:	ldp	x1, x0, [x22, #8]
   2eb78:	cmp	x4, x1
   2eb7c:	b.ne	2eb44 <printf_parse@@Base+0xf664>  // b.any
   2eb80:	add	x1, x1, #0x1
   2eb84:	stp	x6, x7, [sp, #96]
   2eb88:	lsl	x4, x1, #1
   2eb8c:	str	x4, [x3, x2, lsl #3]
   2eb90:	lsl	x1, x1, #4
   2eb94:	bl	a7e0 <realloc@plt>
   2eb98:	cbz	x0, 2e434 <printf_parse@@Base+0xef54>
   2eb9c:	ldp	x6, x7, [sp, #96]
   2eba0:	ldr	x8, [x20, #48]
   2eba4:	str	x0, [x22, #16]
   2eba8:	ldr	x1, [x22, #8]
   2ebac:	add	x5, x8, x7
   2ebb0:	b	2eb44 <printf_parse@@Base+0xf664>
   2ebb4:	ldr	x0, [x20, #16]
   2ebb8:	add	x27, x27, #0x1
   2ebbc:	cmp	x0, x27
   2ebc0:	b.hi	2eb24 <printf_parse@@Base+0xf644>  // b.pmore
   2ebc4:	nop
   2ebc8:	ldrb	w0, [x19, #176]
   2ebcc:	cmp	x24, #0x0
   2ebd0:	str	wzr, [sp, #112]
   2ebd4:	cset	w1, eq  // eq = none
   2ebd8:	ands	w1, w1, w0, lsr #2
   2ebdc:	b.ne	2ee4c <printf_parse@@Base+0xf96c>  // b.any
   2ebe0:	ldr	x0, [x19, #104]
   2ebe4:	ldr	x24, [x19, #48]
   2ebe8:	ldr	x0, [x0, #24]
   2ebec:	ldr	x0, [x0, #56]
   2ebf0:	str	x0, [x19, #144]
   2ebf4:	add	x0, x0, x0, lsl #1
   2ebf8:	add	x24, x24, x0, lsl #3
   2ebfc:	ldr	x22, [x24, #8]
   2ec00:	str	x22, [sp, #128]
   2ec04:	cmp	x22, #0x0
   2ec08:	b.le	2edf4 <printf_parse@@Base+0xf914>
   2ec0c:	lsl	x26, x22, #3
   2ec10:	str	x22, [sp, #120]
   2ec14:	mov	x0, x26
   2ec18:	bl	a5f0 <malloc@plt>
   2ec1c:	str	x0, [sp, #136]
   2ec20:	mov	x20, x0
   2ec24:	cbz	x0, 2f1b4 <printf_parse@@Base+0xfcd4>
   2ec28:	ldr	x1, [x24, #16]
   2ec2c:	mov	x2, x26
   2ec30:	bl	a2c0 <memcpy@plt>
   2ec34:	str	wzr, [sp, #116]
   2ec38:	ldr	x0, [x19, #152]
   2ec3c:	mov	x2, #0x0                   	// #0
   2ec40:	cmp	x0, #0x0
   2ec44:	b.le	2ed38 <printf_parse@@Base+0xf858>
   2ec48:	ldr	x1, [x20, x2, lsl #3]
   2ec4c:	ldr	x4, [x19]
   2ec50:	add	x5, x4, x1, lsl #4
   2ec54:	ldrb	w0, [x5, #8]
   2ec58:	cmp	w0, #0x4
   2ec5c:	b.eq	2ec88 <printf_parse@@Base+0xf7a8>  // b.none
   2ec60:	add	x2, x2, #0x1
   2ec64:	cmp	x22, x2
   2ec68:	b.le	2ed38 <printf_parse@@Base+0xf858>
   2ec6c:	ldr	x20, [sp, #136]
   2ec70:	ldr	x4, [x19]
   2ec74:	ldr	x1, [x20, x2, lsl #3]
   2ec78:	add	x5, x4, x1, lsl #4
   2ec7c:	ldrb	w0, [x5, #8]
   2ec80:	cmp	w0, #0x4
   2ec84:	b.ne	2ec60 <printf_parse@@Base+0xf780>  // b.any
   2ec88:	mov	x0, #0x0                   	// #0
   2ec8c:	b	2ec9c <printf_parse@@Base+0xf7bc>
   2ec90:	add	x0, x0, #0x1
   2ec94:	cmp	x0, x22
   2ec98:	b.eq	2ec60 <printf_parse@@Base+0xf780>  // b.none
   2ec9c:	ldr	x3, [x20, x0, lsl #3]
   2eca0:	lsl	x3, x3, #4
   2eca4:	add	x6, x4, x3
   2eca8:	ldrb	w6, [x6, #8]
   2ecac:	cmp	w6, #0x9
   2ecb0:	b.ne	2ec90 <printf_parse@@Base+0xf7b0>  // b.any
   2ecb4:	ldr	x6, [x4, x3]
   2ecb8:	ldr	x3, [x5]
   2ecbc:	cmp	x6, x3
   2ecc0:	b.ne	2ec90 <printf_parse@@Base+0xf7b0>  // b.any
   2ecc4:	ldr	x0, [x19, #40]
   2ecc8:	add	x1, x1, x1, lsl #1
   2eccc:	sub	x5, x22, #0x1
   2ecd0:	mov	x4, #0x0                   	// #0
   2ecd4:	add	x1, x0, x1, lsl #3
   2ecd8:	ldr	x0, [x1, #16]
   2ecdc:	ldr	x3, [x0]
   2ece0:	b	2ecfc <printf_parse@@Base+0xf81c>
   2ece4:	add	x0, x5, x4
   2ece8:	lsr	x0, x0, #1
   2ecec:	ldr	x1, [x20, x0, lsl #3]
   2ecf0:	cmp	x1, x3
   2ecf4:	b.lt	2edec <printf_parse@@Base+0xf90c>  // b.tstop
   2ecf8:	mov	x5, x0
   2ecfc:	cmp	x5, x4
   2ed00:	b.hi	2ece4 <printf_parse@@Base+0xf804>  // b.pmore
   2ed04:	ldr	x0, [x20, x4, lsl #3]
   2ed08:	cmp	x0, x3
   2ed0c:	b.eq	2ec60 <printf_parse@@Base+0xf780>  // b.none
   2ed10:	ldr	x1, [x19, #48]
   2ed14:	add	x3, x3, x3, lsl #1
   2ed18:	mov	x0, x23
   2ed1c:	add	x1, x1, x3, lsl #3
   2ed20:	bl	216b0 <printf_parse@@Base+0x21d0>
   2ed24:	cbnz	w0, 2ed78 <printf_parse@@Base+0xf898>
   2ed28:	ldr	x22, [sp, #128]
   2ed2c:	mov	x2, #0x1                   	// #1
   2ed30:	cmp	x22, x2
   2ed34:	b.gt	2ec6c <printf_parse@@Base+0xf78c>
   2ed38:	add	x20, sp, #0x74
   2ed3c:	mov	x2, x23
   2ed40:	mov	x0, x20
   2ed44:	mov	x1, x19
   2ed48:	mov	w3, #0x0                   	// #0
   2ed4c:	bl	263d8 <printf_parse@@Base+0x6ef8>
   2ed50:	str	x0, [x19, #72]
   2ed54:	cbz	x0, 2ef5c <printf_parse@@Base+0xfa7c>
   2ed58:	ldrsb	w1, [x0, #104]
   2ed5c:	tbnz	w1, #31, 2eefc <printf_parse@@Base+0xfa1c>
   2ed60:	dup	v0.2d, x0
   2ed64:	str	x0, [x19, #96]
   2ed68:	str	q0, [x19, #80]
   2ed6c:	ldr	x0, [sp, #136]
   2ed70:	bl	aa50 <free@plt>
   2ed74:	mov	w0, #0x0                   	// #0
   2ed78:	ldr	x22, [x21]
   2ed7c:	str	w0, [sp, #112]
   2ed80:	ldr	x20, [x22, #112]
   2ed84:	cbz	x20, 2ed98 <printf_parse@@Base+0xf8b8>
   2ed88:	mov	x0, x20
   2ed8c:	ldr	x20, [x20]
   2ed90:	bl	aa50 <free@plt>
   2ed94:	cbnz	x20, 2ed88 <printf_parse@@Base+0xf8a8>
   2ed98:	ldr	x0, [x22, #32]
   2ed9c:	mov	w1, #0xf                   	// #15
   2eda0:	stp	xzr, xzr, [x22, #104]
   2eda4:	str	w1, [x22, #128]
   2eda8:	bl	aa50 <free@plt>
   2edac:	str	xzr, [x22, #32]
   2edb0:	ldr	x0, [sp, #160]
   2edb4:	bl	aa50 <free@plt>
   2edb8:	ldr	x0, [sp, #168]
   2edbc:	bl	aa50 <free@plt>
   2edc0:	ldrb	w0, [sp, #283]
   2edc4:	cbnz	w0, 2ee28 <printf_parse@@Base+0xf948>
   2edc8:	ldr	w0, [sp, #112]
   2edcc:	cbnz	w0, 2e488 <printf_parse@@Base+0xefa8>
   2edd0:	ldp	x19, x20, [sp, #16]
   2edd4:	ldp	x21, x22, [sp, #32]
   2edd8:	ldp	x23, x24, [sp, #48]
   2eddc:	ldp	x25, x26, [sp, #64]
   2ede0:	ldp	x27, x28, [sp, #80]
   2ede4:	ldp	x29, x30, [sp], #304
   2ede8:	ret
   2edec:	add	x4, x0, #0x1
   2edf0:	b	2ecfc <printf_parse@@Base+0xf81c>
   2edf4:	str	wzr, [sp, #116]
   2edf8:	stp	xzr, xzr, [sp, #120]
   2edfc:	str	xzr, [sp, #136]
   2ee00:	b	2ed38 <printf_parse@@Base+0xf858>
   2ee04:	ldr	x0, [x20, #48]
   2ee08:	mov	w28, #0x0                   	// #0
   2ee0c:	ldr	x22, [x0, #8]
   2ee10:	cbnz	x22, 2ef64 <printf_parse@@Base+0xfa84>
   2ee14:	mov	x26, #0x0                   	// #0
   2ee18:	b	2e8d0 <printf_parse@@Base+0xf3f0>
   2ee1c:	mov	w0, #0xc                   	// #12
   2ee20:	str	w0, [sp, #112]
   2ee24:	b	2e440 <printf_parse@@Base+0xef60>
   2ee28:	ldr	x0, [sp, #152]
   2ee2c:	bl	aa50 <free@plt>
   2ee30:	b	2edc8 <printf_parse@@Base+0xf8e8>
   2ee34:	ldp	x23, x24, [sp, #48]
   2ee38:	b	2e500 <printf_parse@@Base+0xf020>
   2ee3c:	mov	x0, x27
   2ee40:	bl	207c8 <printf_parse@@Base+0x12e8>
   2ee44:	str	wzr, [sp, #112]
   2ee48:	b	2e0f0 <printf_parse@@Base+0xec10>
   2ee4c:	ldr	x0, [x21, #40]
   2ee50:	cbnz	x0, 2ebe0 <printf_parse@@Base+0xf700>
   2ee54:	ldr	x6, [x19, #16]
   2ee58:	cbz	x6, 2f1fc <printf_parse@@Base+0xfd1c>
   2ee5c:	ldr	x7, [x19]
   2ee60:	mov	w2, #0x10001               	// #65537
   2ee64:	mov	w8, #0x0                   	// #0
   2ee68:	mov	x5, #0x0                   	// #0
   2ee6c:	mov	x4, x7
   2ee70:	mov	x3, #0x1                   	// #1
   2ee74:	movk	x2, #0x1, lsl #48
   2ee78:	ldrb	w0, [x4, #8]
   2ee7c:	cmp	w0, #0x5
   2ee80:	b.eq	2f1d4 <printf_parse@@Base+0xfcf4>  // b.none
   2ee84:	b.hi	2f130 <printf_parse@@Base+0xfc50>  // b.pmore
   2ee88:	cmp	w0, #0x3
   2ee8c:	b.eq	2f1bc <printf_parse@@Base+0xfcdc>  // b.none
   2ee90:	cmp	w0, #0x4
   2ee94:	b.ne	2f118 <printf_parse@@Base+0xfc38>  // b.any
   2ee98:	add	x5, x5, #0x1
   2ee9c:	add	x4, x4, #0x10
   2eea0:	cmp	x5, x6
   2eea4:	b.ne	2ee78 <printf_parse@@Base+0xf998>  // b.any
   2eea8:	orr	w28, w28, w8
   2eeac:	add	x5, x7, x5, lsl #4
   2eeb0:	tst	w28, #0xff
   2eeb4:	mov	w1, #0x7                   	// #7
   2eeb8:	b.ne	2eed8 <printf_parse@@Base+0xf9f8>  // b.any
   2eebc:	b	2f1fc <printf_parse@@Base+0xfd1c>
   2eec0:	cmp	w0, #0x5
   2eec4:	b.ne	2eecc <printf_parse@@Base+0xf9ec>  // b.any
   2eec8:	strb	w1, [x7, #8]
   2eecc:	add	x7, x7, #0x10
   2eed0:	cmp	x7, x5
   2eed4:	b.eq	2f200 <printf_parse@@Base+0xfd20>  // b.none
   2eed8:	ldrb	w0, [x7, #8]
   2eedc:	cmp	w0, #0x1
   2eee0:	b.ne	2eec0 <printf_parse@@Base+0xf9e0>  // b.any
   2eee4:	ldrsb	w0, [x7]
   2eee8:	tbz	w0, #31, 2eecc <printf_parse@@Base+0xf9ec>
   2eeec:	ldrb	w0, [x7, #10]
   2eef0:	and	w0, w0, #0xffffffdf
   2eef4:	strb	w0, [x7, #10]
   2eef8:	b	2eecc <printf_parse@@Base+0xf9ec>
   2eefc:	mov	x2, x23
   2ef00:	mov	x1, x19
   2ef04:	mov	w3, #0x1                   	// #1
   2ef08:	mov	x0, x20
   2ef0c:	bl	263d8 <printf_parse@@Base+0x6ef8>
   2ef10:	str	x0, [x19, #80]
   2ef14:	mov	x2, x23
   2ef18:	mov	x1, x19
   2ef1c:	mov	w3, #0x2                   	// #2
   2ef20:	mov	x0, x20
   2ef24:	bl	263d8 <printf_parse@@Base+0x6ef8>
   2ef28:	str	x0, [x19, #88]
   2ef2c:	mov	x1, x19
   2ef30:	mov	x2, x23
   2ef34:	mov	x0, x20
   2ef38:	mov	w3, #0x6                   	// #6
   2ef3c:	bl	263d8 <printf_parse@@Base+0x6ef8>
   2ef40:	str	x0, [x19, #96]
   2ef44:	ldr	x1, [x19, #80]
   2ef48:	cbz	x1, 2ef5c <printf_parse@@Base+0xfa7c>
   2ef4c:	ldr	x1, [x19, #88]
   2ef50:	cmp	x1, #0x0
   2ef54:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2ef58:	b.ne	2ed6c <printf_parse@@Base+0xf88c>  // b.any
   2ef5c:	ldr	w0, [sp, #116]
   2ef60:	b	2ed78 <printf_parse@@Base+0xf898>
   2ef64:	mov	x22, #0x0                   	// #0
   2ef68:	add	x22, x22, #0x1
   2ef6c:	b	2e8b0 <printf_parse@@Base+0xf3d0>
   2ef70:	mov	x1, x2
   2ef74:	mov	x0, x1
   2ef78:	b	2e774 <printf_parse@@Base+0xf294>
   2ef7c:	mov	x28, x0
   2ef80:	mov	x22, x28
   2ef84:	b	2e834 <printf_parse@@Base+0xf354>
   2ef88:	mov	x1, #0x1                   	// #1
   2ef8c:	str	x1, [x5, #8]
   2ef90:	str	x27, [x0]
   2ef94:	cbnz	x28, 2e830 <printf_parse@@Base+0xf350>
   2ef98:	b	2e880 <printf_parse@@Base+0xf3a0>
   2ef9c:	ldr	x0, [x22, #32]
   2efa0:	ldr	x3, [x0, #56]
   2efa4:	b	2ea40 <printf_parse@@Base+0xf560>
   2efa8:	ldr	x0, [x22, #32]
   2efac:	ldr	x27, [x0, #56]
   2efb0:	b	2ea30 <printf_parse@@Base+0xf550>
   2efb4:	stp	x3, x27, [x0]
   2efb8:	cbnz	x28, 2e830 <printf_parse@@Base+0xf350>
   2efbc:	b	2e880 <printf_parse@@Base+0xf3a0>
   2efc0:	ldr	x23, [sp, #232]
   2efc4:	ldr	x20, [sp, #192]
   2efc8:	cmp	x23, x7
   2efcc:	csel	x23, x23, x7, le
   2efd0:	cmp	x23, x20
   2efd4:	b.le	2f01c <printf_parse@@Base+0xfb3c>
   2efd8:	bl	a7f0 <__ctype_toupper_loc@plt>
   2efdc:	nop
   2efe0:	ldr	x1, [sp, #144]
   2efe4:	ldr	x3, [sp, #184]
   2efe8:	add	x1, x1, x20
   2efec:	ldr	x2, [sp, #264]
   2eff0:	ldrb	w1, [x1, x3]
   2eff4:	and	x3, x1, #0xff
   2eff8:	cbnz	x2, 2f088 <printf_parse@@Base+0xfba8>
   2effc:	ldr	x2, [x0]
   2f000:	ldr	w1, [x2, x1, lsl #2]
   2f004:	strb	w1, [x22, x20]
   2f008:	add	x20, x20, #0x1
   2f00c:	cmp	x23, x20
   2f010:	b.eq	2f020 <printf_parse@@Base+0xfb40>  // b.none
   2f014:	ldr	x22, [sp, #152]
   2f018:	b	2efe0 <printf_parse@@Base+0xfb00>
   2f01c:	mov	x23, x20
   2f020:	dup	v0.2d, x23
   2f024:	str	wzr, [sp, #112]
   2f028:	str	q0, [sp, #192]
   2f02c:	b	2e0f0 <printf_parse@@Base+0xec10>
   2f030:	ldr	x0, [sp, #152]
   2f034:	mov	x1, x23
   2f038:	str	x7, [sp, #96]
   2f03c:	bl	a7e0 <realloc@plt>
   2f040:	cbz	x0, 2f108 <printf_parse@@Base+0xfc28>
   2f044:	ldrb	w4, [sp, #283]
   2f048:	ldr	w2, [x19, #180]
   2f04c:	str	x0, [sp, #152]
   2f050:	str	x23, [sp, #208]
   2f054:	ldr	x7, [sp, #96]
   2f058:	b	2dfc4 <printf_parse@@Base+0xeae4>
   2f05c:	mov	x0, x19
   2f060:	mov	x1, #0x118                 	// #280
   2f064:	bl	a7e0 <realloc@plt>
   2f068:	mov	x19, x0
   2f06c:	cbz	x0, 2f288 <printf_parse@@Base+0xfda8>
   2f070:	mov	x0, #0x118                 	// #280
   2f074:	stp	x19, x0, [x21]
   2f078:	b	2ddd4 <printf_parse@@Base+0xe8f4>
   2f07c:	mov	x24, #0x0                   	// #0
   2f080:	mov	x1, #0x1                   	// #1
   2f084:	b	2de30 <printf_parse@@Base+0xe950>
   2f088:	ldrb	w2, [x2, x3]
   2f08c:	ldr	x1, [x0]
   2f090:	ldr	w1, [x1, x2, lsl #2]
   2f094:	strb	w1, [x22, x20]
   2f098:	add	x20, x20, #0x1
   2f09c:	cmp	x23, x20
   2f0a0:	b.eq	2f020 <printf_parse@@Base+0xfb40>  // b.none
   2f0a4:	ldr	x22, [sp, #152]
   2f0a8:	b	2efe0 <printf_parse@@Base+0xfb00>
   2f0ac:	mov	x0, #0x3c8                 	// #968
   2f0b0:	bl	a5f0 <malloc@plt>
   2f0b4:	mov	x22, x0
   2f0b8:	cbz	x0, 2f274 <printf_parse@@Base+0xfd94>
   2f0bc:	ldr	x0, [x28, #112]
   2f0c0:	str	x0, [x22]
   2f0c4:	mov	x2, #0x30                  	// #48
   2f0c8:	mov	w3, #0x1                   	// #1
   2f0cc:	mov	x1, #0x0                   	// #0
   2f0d0:	mov	x0, #0x8                   	// #8
   2f0d4:	str	x22, [x28, #112]
   2f0d8:	b	2e178 <printf_parse@@Base+0xec98>
   2f0dc:	mov	w0, #0xc                   	// #12
   2f0e0:	str	xzr, [x19, #104]
   2f0e4:	str	w0, [sp, #112]
   2f0e8:	b	2e440 <printf_parse@@Base+0xef60>
   2f0ec:	mov	x1, x2
   2f0f0:	b	2e3b0 <printf_parse@@Base+0xeed0>
   2f0f4:	str	wzr, [sp, #112]
   2f0f8:	b	2e0f0 <printf_parse@@Base+0xec10>
   2f0fc:	mov	w0, #0xc                   	// #12
   2f100:	stp	xzr, xzr, [x28]
   2f104:	b	2e438 <printf_parse@@Base+0xef58>
   2f108:	mov	w0, #0xc                   	// #12
   2f10c:	ldr	x20, [x21]
   2f110:	str	w0, [sp, #112]
   2f114:	b	2e440 <printf_parse@@Base+0xef60>
   2f118:	cmp	w0, #0x1
   2f11c:	b.ne	2f14c <printf_parse@@Base+0xfc6c>  // b.any
   2f120:	ldrsb	w0, [x4]
   2f124:	cmp	w0, #0x0
   2f128:	csel	w28, w28, w1, ge  // ge = tcont
   2f12c:	b	2ee98 <printf_parse@@Base+0xf9b8>
   2f130:	cmp	w0, #0xb
   2f134:	b.hi	2f158 <printf_parse@@Base+0xfc78>  // b.pmore
   2f138:	cmp	w0, #0x7
   2f13c:	b.hi	2ee98 <printf_parse@@Base+0xf9b8>  // b.pmore
   2f140:	cmp	w0, #0x6
   2f144:	b.eq	2ebe0 <printf_parse@@Base+0xf700>  // b.none
   2f148:	bl	a900 <abort@plt>
   2f14c:	cmp	w0, #0x2
   2f150:	b.eq	2ee98 <printf_parse@@Base+0xf9b8>  // b.none
   2f154:	bl	a900 <abort@plt>
   2f158:	cmp	w0, #0xc
   2f15c:	b.ne	2f148 <printf_parse@@Base+0xfc68>  // b.any
   2f160:	ldr	w0, [x4]
   2f164:	cmp	w0, #0x40
   2f168:	b.hi	2f1dc <printf_parse@@Base+0xfcfc>  // b.pmore
   2f16c:	cmp	w0, #0xf
   2f170:	b.ls	2ebe0 <printf_parse@@Base+0xf700>  // b.plast
   2f174:	sub	w0, w0, #0x10
   2f178:	lsl	x0, x3, x0
   2f17c:	tst	x0, x2
   2f180:	b.eq	2ebe0 <printf_parse@@Base+0xf700>  // b.none
   2f184:	b	2ee98 <printf_parse@@Base+0xf9b8>
   2f188:	mov	x0, #0x3c8                 	// #968
   2f18c:	bl	a5f0 <malloc@plt>
   2f190:	cbz	x0, 2f280 <printf_parse@@Base+0xfda0>
   2f194:	ldr	x1, [x28, #112]
   2f198:	str	x1, [x0]
   2f19c:	mov	w3, #0x1                   	// #1
   2f1a0:	mov	x2, #0x30                  	// #48
   2f1a4:	mov	x7, #0x8                   	// #8
   2f1a8:	mov	x1, #0x0                   	// #0
   2f1ac:	str	x0, [x28, #112]
   2f1b0:	b	2e1ec <printf_parse@@Base+0xed0c>
   2f1b4:	mov	w0, #0xc                   	// #12
   2f1b8:	b	2ed78 <printf_parse@@Base+0xf898>
   2f1bc:	ldr	x0, [x4]
   2f1c0:	ldr	x9, [x0, #16]
   2f1c4:	cbnz	x9, 2ebe0 <printf_parse@@Base+0xf700>
   2f1c8:	ldr	x0, [x0, #24]
   2f1cc:	cbz	x0, 2ee98 <printf_parse@@Base+0xf9b8>
   2f1d0:	b	2ebe0 <printf_parse@@Base+0xf700>
   2f1d4:	mov	w8, w1
   2f1d8:	b	2ee98 <printf_parse@@Base+0xf9b8>
   2f1dc:	cmp	w0, #0x80
   2f1e0:	b.eq	2ee98 <printf_parse@@Base+0xf9b8>  // b.none
   2f1e4:	b	2ebe0 <printf_parse@@Base+0xf700>
   2f1e8:	mov	x2, x1
   2f1ec:	b	2e0e4 <printf_parse@@Base+0xec04>
   2f1f0:	ldr	x20, [x21]
   2f1f4:	str	xzr, [x19, #104]
   2f1f8:	b	2e440 <printf_parse@@Base+0xef60>
   2f1fc:	mov	w8, #0x0                   	// #0
   2f200:	ldr	x2, [x19, #152]
   2f204:	mov	w1, #0x1                   	// #1
   2f208:	ldrb	w0, [x19, #176]
   2f20c:	cmp	x2, #0x0
   2f210:	str	w1, [x19, #180]
   2f214:	ccmp	w8, #0x0, #0x0, le
   2f218:	and	w1, w0, #0xfffffff9
   2f21c:	cset	w0, ne  // ne = any
   2f220:	orr	w0, w1, w0, lsl #1
   2f224:	strb	w0, [x19, #176]
   2f228:	b	2ebe0 <printf_parse@@Base+0xf700>
   2f22c:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   2f230:	add	x3, x3, #0x410
   2f234:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2f238:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   2f23c:	add	x3, x3, #0x58
   2f240:	add	x1, x1, #0x1d0
   2f244:	add	x0, x0, #0x218
   2f248:	mov	w2, #0x5b0                 	// #1456
   2f24c:	bl	aea0 <__assert_fail@plt>
   2f250:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   2f254:	add	x3, x3, #0x410
   2f258:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2f25c:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   2f260:	add	x3, x3, #0x58
   2f264:	add	x1, x1, #0x1d0
   2f268:	add	x0, x0, #0x208
   2f26c:	mov	w2, #0x5af                 	// #1455
   2f270:	bl	aea0 <__assert_fail@plt>
   2f274:	cbz	x26, 2f0dc <printf_parse@@Base+0xfbfc>
   2f278:	mov	x22, #0x0                   	// #0
   2f27c:	b	2e1c8 <printf_parse@@Base+0xece8>
   2f280:	mov	x0, #0x0                   	// #0
   2f284:	b	2e23c <printf_parse@@Base+0xed5c>
   2f288:	mov	w0, #0xc                   	// #12
   2f28c:	b	2e4ac <printf_parse@@Base+0xefcc>
   2f290:	ldp	x23, x24, [sp, #48]
   2f294:	ldp	x27, x28, [sp, #80]
   2f298:	b	2e508 <printf_parse@@Base+0xf028>
   2f29c:	nop

000000000002f2a0 <rpl_re_compile_pattern@@Base>:
   2f2a0:	stp	x29, x30, [sp, #-16]!
   2f2a4:	adrp	x3, 4c000 <vasnprintf@@Base+0x1b848>
   2f2a8:	mov	w6, #0x6f                  	// #111
   2f2ac:	mov	x29, sp
   2f2b0:	ldr	x3, [x3, #3920]
   2f2b4:	mov	x5, x2
   2f2b8:	ldrb	w4, [x2, #56]
   2f2bc:	mov	x2, x1
   2f2c0:	mov	x1, x0
   2f2c4:	mov	x0, x5
   2f2c8:	ldr	x3, [x3]
   2f2cc:	and	w6, w4, w6
   2f2d0:	ubfx	w4, w3, #25, #1
   2f2d4:	ubfiz	w4, w4, #4, #4
   2f2d8:	orr	w4, w4, #0xffffff80
   2f2dc:	orr	w4, w4, w6
   2f2e0:	strb	w4, [x5, #56]
   2f2e4:	bl	2dd88 <printf_parse@@Base+0xe8a8>
   2f2e8:	cbz	w0, 2f318 <rpl_re_compile_pattern@@Base+0x78>
   2f2ec:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2f2f0:	add	x1, x1, #0x410
   2f2f4:	add	x4, x1, #0x1f0
   2f2f8:	mov	w3, w0
   2f2fc:	ldp	x29, x30, [sp], #16
   2f300:	add	x1, x1, #0x70
   2f304:	ldr	x3, [x4, w3, sxtw #3]
   2f308:	mov	w2, #0x5                   	// #5
   2f30c:	mov	x0, #0x0                   	// #0
   2f310:	add	x1, x1, x3
   2f314:	b	ada0 <dcgettext@plt>
   2f318:	mov	x0, #0x0                   	// #0
   2f31c:	ldp	x29, x30, [sp], #16
   2f320:	ret
   2f324:	nop

000000000002f328 <rpl_re_set_syntax@@Base>:
   2f328:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   2f32c:	mov	x2, x0
   2f330:	ldr	x1, [x1, #3920]
   2f334:	ldr	x0, [x1]
   2f338:	str	x2, [x1]
   2f33c:	ret

000000000002f340 <rpl_re_compile_fastmap@@Base>:
   2f340:	stp	x29, x30, [sp, #-48]!
   2f344:	mov	x2, #0x100                 	// #256
   2f348:	mov	w1, #0x0                   	// #0
   2f34c:	mov	x29, sp
   2f350:	stp	x19, x20, [sp, #16]
   2f354:	mov	x19, x0
   2f358:	ldr	x20, [x0]
   2f35c:	str	x21, [sp, #32]
   2f360:	ldr	x21, [x0, #32]
   2f364:	mov	x0, x21
   2f368:	bl	a6f0 <memset@plt>
   2f36c:	ldr	x1, [x20, #72]
   2f370:	mov	x0, x19
   2f374:	mov	x3, x21
   2f378:	add	x2, x1, #0x18
   2f37c:	add	x1, x1, #0x10
   2f380:	bl	22dc0 <printf_parse@@Base+0x38e0>
   2f384:	ldp	x1, x0, [x20, #72]
   2f388:	cmp	x1, x0
   2f38c:	b.eq	2f3a8 <rpl_re_compile_fastmap@@Base+0x68>  // b.none
   2f390:	add	x2, x0, #0x18
   2f394:	add	x1, x0, #0x10
   2f398:	mov	x3, x21
   2f39c:	mov	x0, x19
   2f3a0:	bl	22dc0 <printf_parse@@Base+0x38e0>
   2f3a4:	ldr	x0, [x20, #72]
   2f3a8:	ldr	x1, [x20, #88]
   2f3ac:	cmp	x1, x0
   2f3b0:	b.eq	2f3cc <rpl_re_compile_fastmap@@Base+0x8c>  // b.none
   2f3b4:	add	x2, x1, #0x18
   2f3b8:	mov	x0, x19
   2f3bc:	mov	x3, x21
   2f3c0:	add	x1, x1, #0x10
   2f3c4:	bl	22dc0 <printf_parse@@Base+0x38e0>
   2f3c8:	ldr	x0, [x20, #72]
   2f3cc:	ldr	x1, [x20, #96]
   2f3d0:	cmp	x1, x0
   2f3d4:	b.eq	2f3ec <rpl_re_compile_fastmap@@Base+0xac>  // b.none
   2f3d8:	add	x2, x1, #0x18
   2f3dc:	mov	x3, x21
   2f3e0:	add	x1, x1, #0x10
   2f3e4:	mov	x0, x19
   2f3e8:	bl	22dc0 <printf_parse@@Base+0x38e0>
   2f3ec:	ldrb	w1, [x19, #56]
   2f3f0:	mov	w0, #0x0                   	// #0
   2f3f4:	ldr	x21, [sp, #32]
   2f3f8:	orr	w1, w1, #0x8
   2f3fc:	strb	w1, [x19, #56]
   2f400:	ldp	x19, x20, [sp, #16]
   2f404:	ldp	x29, x30, [sp], #48
   2f408:	ret
   2f40c:	nop
   2f410:	sub	sp, sp, #0x90
   2f414:	cmp	x3, #0x0
   2f418:	ccmp	x3, x2, #0x0, ge  // ge = tcont
   2f41c:	stp	x29, x30, [sp, #16]
   2f420:	add	x29, sp, #0x10
   2f424:	stp	x23, x24, [sp, #64]
   2f428:	mov	x23, x1
   2f42c:	and	w1, w7, #0xff
   2f430:	str	w1, [sp, #132]
   2f434:	ldr	x1, [x0]
   2f438:	stp	x21, x22, [sp, #48]
   2f43c:	mov	x21, x0
   2f440:	stp	x27, x28, [sp, #96]
   2f444:	add	x28, x3, x4
   2f448:	str	x1, [sp, #120]
   2f44c:	b.gt	2f7b8 <rpl_re_compile_fastmap@@Base+0x478>
   2f450:	stp	x19, x20, [sp, #32]
   2f454:	mov	x27, x2
   2f458:	mov	x19, x3
   2f45c:	stp	x25, x26, [sp, #80]
   2f460:	mov	x24, x5
   2f464:	mov	x22, x6
   2f468:	cmp	x28, x2
   2f46c:	b.gt	2f748 <rpl_re_compile_fastmap@@Base+0x408>
   2f470:	cmp	x4, #0x0
   2f474:	ccmp	x3, x28, #0x4, ge  // ge = tcont
   2f478:	b.gt	2f748 <rpl_re_compile_fastmap@@Base+0x408>
   2f47c:	tbnz	x28, #63, 2f750 <rpl_re_compile_fastmap@@Base+0x410>
   2f480:	cmp	x4, #0x0
   2f484:	ccmp	x3, x28, #0x0, lt  // lt = tstop
   2f488:	b.le	2f750 <rpl_re_compile_fastmap@@Base+0x410>
   2f48c:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   2f490:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   2f494:	ldr	x0, [x0, #4040]
   2f498:	ldr	x1, [x1, #3944]
   2f49c:	cmp	x0, #0x0
   2f4a0:	cset	w0, ne  // ne = any
   2f4a4:	cmp	x1, #0x0
   2f4a8:	cset	w1, ne  // ne = any
   2f4ac:	orr	w0, w0, w1
   2f4b0:	and	w1, w0, #0xff
   2f4b4:	str	w1, [sp, #128]
   2f4b8:	tbz	w0, #0, 2f4d0 <rpl_re_compile_fastmap@@Base+0x190>
   2f4bc:	mov	w0, #0x1                   	// #1
   2f4c0:	str	w0, [sp, #128]
   2f4c4:	ldr	x0, [sp, #120]
   2f4c8:	add	x0, x0, #0xe8
   2f4cc:	bl	af00 <pthread_mutex_lock@plt>
   2f4d0:	ldrb	w0, [x21, #56]
   2f4d4:	cmp	x19, x28
   2f4d8:	ubfx	x1, x0, #5, #2
   2f4dc:	str	x1, [sp, #136]
   2f4e0:	b.ge	2f4f0 <rpl_re_compile_fastmap@@Base+0x1b0>  // b.tcont
   2f4e4:	ldr	x1, [x21, #32]
   2f4e8:	cbz	x1, 2f4f0 <rpl_re_compile_fastmap@@Base+0x1b0>
   2f4ec:	tbz	w0, #3, 2f704 <rpl_re_compile_fastmap@@Base+0x3c4>
   2f4f0:	ldrb	w1, [x21, #56]
   2f4f4:	cmp	x22, #0x0
   2f4f8:	cset	w0, eq  // eq = none
   2f4fc:	ubfx	x3, x1, #4, #1
   2f500:	orr	w0, w0, w3
   2f504:	tbnz	w0, #0, 2f6f0 <rpl_re_compile_fastmap@@Base+0x3b0>
   2f508:	and	w1, w1, #0x6
   2f50c:	cmp	w1, #0x4
   2f510:	ldr	x0, [x21, #48]
   2f514:	b.eq	2f7e0 <rpl_re_compile_fastmap@@Base+0x4a0>  // b.none
   2f518:	add	x25, x0, #0x1
   2f51c:	mov	x26, x25
   2f520:	lsl	x0, x25, #4
   2f524:	bl	a5f0 <malloc@plt>
   2f528:	mov	x20, x0
   2f52c:	cbz	x0, 2f7d8 <rpl_re_compile_fastmap@@Base+0x498>
   2f530:	mov	x7, x0
   2f534:	ldr	w0, [sp, #136]
   2f538:	str	w0, [sp]
   2f53c:	mov	x5, x24
   2f540:	mov	x4, x28
   2f544:	mov	x2, x27
   2f548:	mov	x1, x23
   2f54c:	mov	x6, x25
   2f550:	mov	x3, x19
   2f554:	mov	x0, x21
   2f558:	bl	29690 <printf_parse@@Base+0xa1b0>
   2f55c:	cbnz	w0, 2f6a0 <rpl_re_compile_fastmap@@Base+0x360>
   2f560:	cbz	x22, 2f680 <rpl_re_compile_fastmap@@Base+0x340>
   2f564:	ldrb	w23, [x21, #56]
   2f568:	add	x27, x26, #0x1
   2f56c:	ubfx	x23, x23, #1, #2
   2f570:	cbz	w23, 2f710 <rpl_re_compile_fastmap@@Base+0x3d0>
   2f574:	cmp	w23, #0x1
   2f578:	b.eq	2f80c <rpl_re_compile_fastmap@@Base+0x4cc>  // b.none
   2f57c:	cmp	w23, #0x2
   2f580:	b.ne	2f8d4 <rpl_re_compile_fastmap@@Base+0x594>  // b.any
   2f584:	ldr	x24, [x22]
   2f588:	cmp	x24, x25
   2f58c:	b.cc	2f8f8 <rpl_re_compile_fastmap@@Base+0x5b8>  // b.lo, b.ul, b.last
   2f590:	cmp	x26, #0x0
   2f594:	b.le	2f87c <rpl_re_compile_fastmap@@Base+0x53c>
   2f598:	ldp	x2, x3, [x22, #8]
   2f59c:	lsl	x0, x26, #3
   2f5a0:	add	x4, x20, x26, lsl #4
   2f5a4:	add	x1, x3, x0
   2f5a8:	add	x0, x2, x0
   2f5ac:	cmp	x20, x1
   2f5b0:	add	x5, x2, #0xf
   2f5b4:	ccmp	x3, x4, #0x2, cc  // cc = lo, ul, last
   2f5b8:	sub	x5, x5, x3
   2f5bc:	cset	w1, cs  // cs = hs, nlast
   2f5c0:	cmp	x20, x0
   2f5c4:	ccmp	x2, x4, #0x2, cc  // cc = lo, ul, last
   2f5c8:	sub	x4, x26, #0x1
   2f5cc:	cset	w0, cs  // cs = hs, nlast
   2f5d0:	cmp	x5, #0x1e
   2f5d4:	ccmp	x4, #0x5, #0x0, hi  // hi = pmore
   2f5d8:	and	w0, w1, w0
   2f5dc:	cset	w4, hi  // hi = pmore
   2f5e0:	mov	x1, x26
   2f5e4:	tst	w4, w0
   2f5e8:	b.eq	2f850 <rpl_re_compile_fastmap@@Base+0x510>  // b.none
   2f5ec:	lsr	x5, x26, #1
   2f5f0:	mov	x4, x20
   2f5f4:	mov	x0, #0x0                   	// #0
   2f5f8:	lsl	x5, x5, #4
   2f5fc:	nop
   2f600:	ld2	{v0.2d, v1.2d}, [x4], #32
   2f604:	str	q0, [x2, x0]
   2f608:	str	q1, [x3, x0]
   2f60c:	add	x0, x0, #0x10
   2f610:	cmp	x0, x5
   2f614:	b.ne	2f600 <rpl_re_compile_fastmap@@Base+0x2c0>  // b.any
   2f618:	and	x0, x26, #0xfffffffffffffffe
   2f61c:	tbz	w26, #0, 2f638 <rpl_re_compile_fastmap@@Base+0x2f8>
   2f620:	lsl	x4, x0, #4
   2f624:	add	x5, x20, x4
   2f628:	ldr	x4, [x20, x4]
   2f62c:	str	x4, [x2, x0, lsl #3]
   2f630:	ldr	x2, [x5, #8]
   2f634:	str	x2, [x3, x0, lsl #3]
   2f638:	ldr	x24, [x22]
   2f63c:	cmp	x1, x24
   2f640:	b.cs	2f66c <rpl_re_compile_fastmap@@Base+0x32c>  // b.hs, b.nlast
   2f644:	ldp	x4, x3, [x22, #8]
   2f648:	mov	x0, #0xffffffffffffffff    	// #-1
   2f64c:	nop
   2f650:	str	x0, [x3, x1, lsl #3]
   2f654:	add	x26, x26, #0x1
   2f658:	str	x0, [x4, x1, lsl #3]
   2f65c:	mov	x1, x26
   2f660:	ldr	x2, [x22]
   2f664:	cmp	x26, x2
   2f668:	b.cc	2f650 <rpl_re_compile_fastmap@@Base+0x310>  // b.lo, b.ul, b.last
   2f66c:	ldrb	w0, [x21, #56]
   2f670:	bfi	w0, w23, #1, #2
   2f674:	strb	w0, [x21, #56]
   2f678:	tst	w0, #0x6
   2f67c:	b.eq	2f6ac <rpl_re_compile_fastmap@@Base+0x36c>  // b.none
   2f680:	ldr	w0, [sp, #132]
   2f684:	ldr	x21, [x20]
   2f688:	cbz	w0, 2f6b0 <rpl_re_compile_fastmap@@Base+0x370>
   2f68c:	cmp	x19, x21
   2f690:	b.ne	2f8b0 <rpl_re_compile_fastmap@@Base+0x570>  // b.any
   2f694:	ldr	x0, [x20, #8]
   2f698:	sub	x21, x0, x21
   2f69c:	b	2f6b0 <rpl_re_compile_fastmap@@Base+0x370>
   2f6a0:	cmp	w0, #0x1
   2f6a4:	mov	x21, #0xffffffffffffffff    	// #-1
   2f6a8:	b.eq	2f6b0 <rpl_re_compile_fastmap@@Base+0x370>  // b.none
   2f6ac:	mov	x21, #0xfffffffffffffffe    	// #-2
   2f6b0:	mov	x0, x20
   2f6b4:	bl	aa50 <free@plt>
   2f6b8:	ldr	w0, [sp, #128]
   2f6bc:	cbz	w0, 2f794 <rpl_re_compile_fastmap@@Base+0x454>
   2f6c0:	ldr	x0, [sp, #120]
   2f6c4:	add	x0, x0, #0xe8
   2f6c8:	bl	af40 <pthread_mutex_unlock@plt>
   2f6cc:	mov	x0, x21
   2f6d0:	ldp	x29, x30, [sp, #16]
   2f6d4:	ldp	x19, x20, [sp, #32]
   2f6d8:	ldp	x21, x22, [sp, #48]
   2f6dc:	ldp	x23, x24, [sp, #64]
   2f6e0:	ldp	x25, x26, [sp, #80]
   2f6e4:	ldp	x27, x28, [sp, #96]
   2f6e8:	add	sp, sp, #0x90
   2f6ec:	ret
   2f6f0:	mov	x25, #0x1                   	// #1
   2f6f4:	mov	x0, #0x10                  	// #16
   2f6f8:	mov	x26, x25
   2f6fc:	mov	x22, #0x0                   	// #0
   2f700:	b	2f524 <rpl_re_compile_fastmap@@Base+0x1e4>
   2f704:	mov	x0, x21
   2f708:	bl	af90 <rpl_re_compile_fastmap@plt>
   2f70c:	b	2f4f0 <rpl_re_compile_fastmap@@Base+0x1b0>
   2f710:	lsl	x25, x27, #3
   2f714:	mov	x24, x27
   2f718:	mov	x0, x25
   2f71c:	bl	a5f0 <malloc@plt>
   2f720:	str	x0, [x22, #8]
   2f724:	mov	x23, x0
   2f728:	cbz	x0, 2f888 <rpl_re_compile_fastmap@@Base+0x548>
   2f72c:	mov	x0, x25
   2f730:	bl	a5f0 <malloc@plt>
   2f734:	str	x0, [x22, #16]
   2f738:	cbz	x0, 2f890 <rpl_re_compile_fastmap@@Base+0x550>
   2f73c:	mov	w23, #0x1                   	// #1
   2f740:	str	x27, [x22]
   2f744:	b	2f590 <rpl_re_compile_fastmap@@Base+0x250>
   2f748:	mov	x28, x27
   2f74c:	b	2f48c <rpl_re_compile_fastmap@@Base+0x14c>
   2f750:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   2f754:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   2f758:	mov	x28, #0x0                   	// #0
   2f75c:	ldr	x0, [x0, #4040]
   2f760:	ldr	x1, [x1, #3944]
   2f764:	cmp	x0, #0x0
   2f768:	cset	w0, ne  // ne = any
   2f76c:	cmp	x1, #0x0
   2f770:	cset	w1, ne  // ne = any
   2f774:	orr	w0, w0, w1
   2f778:	and	w1, w0, #0xff
   2f77c:	str	w1, [sp, #128]
   2f780:	tbnz	w0, #0, 2f4bc <rpl_re_compile_fastmap@@Base+0x17c>
   2f784:	ldrb	w0, [x21, #56]
   2f788:	ubfx	x0, x0, #5, #2
   2f78c:	str	x0, [sp, #136]
   2f790:	b	2f4f0 <rpl_re_compile_fastmap@@Base+0x1b0>
   2f794:	mov	x0, x21
   2f798:	ldp	x29, x30, [sp, #16]
   2f79c:	ldp	x19, x20, [sp, #32]
   2f7a0:	ldp	x21, x22, [sp, #48]
   2f7a4:	ldp	x23, x24, [sp, #64]
   2f7a8:	ldp	x25, x26, [sp, #80]
   2f7ac:	ldp	x27, x28, [sp, #96]
   2f7b0:	add	sp, sp, #0x90
   2f7b4:	ret
   2f7b8:	mov	x21, #0xffffffffffffffff    	// #-1
   2f7bc:	mov	x0, x21
   2f7c0:	ldp	x29, x30, [sp, #16]
   2f7c4:	ldp	x21, x22, [sp, #48]
   2f7c8:	ldp	x23, x24, [sp, #64]
   2f7cc:	ldp	x27, x28, [sp, #96]
   2f7d0:	add	sp, sp, #0x90
   2f7d4:	ret
   2f7d8:	mov	x21, #0xfffffffffffffffe    	// #-2
   2f7dc:	b	2f6b8 <rpl_re_compile_fastmap@@Base+0x378>
   2f7e0:	ldr	x25, [x22]
   2f7e4:	cmp	x25, x0
   2f7e8:	b.hi	2f518 <rpl_re_compile_fastmap@@Base+0x1d8>  // b.pmore
   2f7ec:	cmp	x25, #0x0
   2f7f0:	mov	x26, x25
   2f7f4:	b.gt	2f520 <rpl_re_compile_fastmap@@Base+0x1e0>
   2f7f8:	mov	x25, #0x1                   	// #1
   2f7fc:	mov	x0, #0x10                  	// #16
   2f800:	mov	x26, x25
   2f804:	mov	x22, #0x0                   	// #0
   2f808:	b	2f524 <rpl_re_compile_fastmap@@Base+0x1e4>
   2f80c:	ldr	x24, [x22]
   2f810:	cmp	x24, x27
   2f814:	b.cs	2f590 <rpl_re_compile_fastmap@@Base+0x250>  // b.hs, b.nlast
   2f818:	ldr	x0, [x22, #8]
   2f81c:	lsl	x24, x27, #3
   2f820:	mov	x1, x24
   2f824:	bl	a7e0 <realloc@plt>
   2f828:	mov	x25, x0
   2f82c:	cbz	x0, 2f888 <rpl_re_compile_fastmap@@Base+0x548>
   2f830:	ldr	x0, [x22, #16]
   2f834:	mov	x1, x24
   2f838:	bl	a7e0 <realloc@plt>
   2f83c:	cbz	x0, 2f8a0 <rpl_re_compile_fastmap@@Base+0x560>
   2f840:	mov	x24, x27
   2f844:	stp	x27, x25, [x22]
   2f848:	str	x0, [x22, #16]
   2f84c:	b	2f590 <rpl_re_compile_fastmap@@Base+0x250>
   2f850:	mov	x4, x20
   2f854:	mov	x0, #0x0                   	// #0
   2f858:	ldr	x5, [x4]
   2f85c:	str	x5, [x2, x0, lsl #3]
   2f860:	add	x4, x4, #0x10
   2f864:	ldur	x5, [x4, #-8]
   2f868:	str	x5, [x3, x0, lsl #3]
   2f86c:	add	x0, x0, #0x1
   2f870:	cmp	x0, x26
   2f874:	b.ne	2f858 <rpl_re_compile_fastmap@@Base+0x518>  // b.any
   2f878:	b	2f638 <rpl_re_compile_fastmap@@Base+0x2f8>
   2f87c:	mov	x1, #0x0                   	// #0
   2f880:	mov	x26, #0x0                   	// #0
   2f884:	b	2f63c <rpl_re_compile_fastmap@@Base+0x2fc>
   2f888:	mov	w23, #0x0                   	// #0
   2f88c:	b	2f66c <rpl_re_compile_fastmap@@Base+0x32c>
   2f890:	mov	x0, x23
   2f894:	mov	w23, #0x0                   	// #0
   2f898:	bl	aa50 <free@plt>
   2f89c:	b	2f66c <rpl_re_compile_fastmap@@Base+0x32c>
   2f8a0:	mov	x0, x25
   2f8a4:	mov	w23, #0x0                   	// #0
   2f8a8:	bl	aa50 <free@plt>
   2f8ac:	b	2f66c <rpl_re_compile_fastmap@@Base+0x32c>
   2f8b0:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   2f8b4:	add	x3, x3, #0x410
   2f8b8:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2f8bc:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   2f8c0:	add	x3, x3, #0x288
   2f8c4:	add	x1, x1, #0x138
   2f8c8:	add	x0, x0, #0x288
   2f8cc:	mov	w2, #0x1be                 	// #446
   2f8d0:	bl	aea0 <__assert_fail@plt>
   2f8d4:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   2f8d8:	add	x3, x3, #0x410
   2f8dc:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2f8e0:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   2f8e4:	add	x3, x3, #0x278
   2f8e8:	add	x1, x1, #0x138
   2f8ec:	add	x0, x0, #0x250
   2f8f0:	mov	w2, #0x1f9                 	// #505
   2f8f4:	bl	aea0 <__assert_fail@plt>
   2f8f8:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   2f8fc:	add	x3, x3, #0x410
   2f900:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2f904:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   2f908:	add	x3, x3, #0x278
   2f90c:	add	x1, x1, #0x138
   2f910:	add	x0, x0, #0x270
   2f914:	mov	w2, #0x1fb                 	// #507
   2f918:	bl	aea0 <__assert_fail@plt>
   2f91c:	nop

000000000002f920 <rpl_regcomp@@Base>:
   2f920:	stp	x29, x30, [sp, #-64]!
   2f924:	mov	x29, sp
   2f928:	stp	x19, x20, [sp, #16]
   2f92c:	mov	w19, w2
   2f930:	mov	x20, x0
   2f934:	tst	x19, #0x1
   2f938:	stp	x21, x22, [sp, #32]
   2f93c:	mov	x21, #0xb2fc                	// #45820
   2f940:	str	x23, [sp, #48]
   2f944:	mov	x23, #0x2c6                 	// #710
   2f948:	str	xzr, [x0]
   2f94c:	mov	x22, x1
   2f950:	stp	xzr, xzr, [x0, #8]
   2f954:	movk	x21, #0x3, lsl #16
   2f958:	movk	x23, #0x101, lsl #16
   2f95c:	mov	x0, #0x100                 	// #256
   2f960:	csel	x23, x21, x23, ne  // ne = any
   2f964:	bl	a5f0 <malloc@plt>
   2f968:	str	x0, [x20, #32]
   2f96c:	cbz	x0, 2fa18 <rpl_regcomp@@Base+0xf8>
   2f970:	sbfiz	x21, x19, #21, #32
   2f974:	mov	w0, #0x0                   	// #0
   2f978:	and	x21, x21, #0x400000
   2f97c:	orr	x21, x21, x23
   2f980:	tbnz	w19, #2, 2f9f4 <rpl_regcomp@@Base+0xd4>
   2f984:	ldrb	w1, [x20, #56]
   2f988:	ubfx	x19, x19, #3, #1
   2f98c:	ubfiz	w0, w0, #7, #1
   2f990:	mov	w2, #0x6f                  	// #111
   2f994:	orr	w19, w0, w19, lsl #4
   2f998:	and	w0, w1, w2
   2f99c:	orr	w19, w19, w0
   2f9a0:	str	xzr, [x20, #40]
   2f9a4:	strb	w19, [x20, #56]
   2f9a8:	mov	x0, x22
   2f9ac:	bl	a340 <strlen@plt>
   2f9b0:	mov	x2, x0
   2f9b4:	mov	x3, x21
   2f9b8:	mov	x1, x22
   2f9bc:	mov	x0, x20
   2f9c0:	bl	2dd88 <printf_parse@@Base+0xe8a8>
   2f9c4:	mov	w19, w0
   2f9c8:	cmp	w0, #0x10
   2f9cc:	b.eq	2fa04 <rpl_regcomp@@Base+0xe4>  // b.none
   2f9d0:	cbnz	w0, 2fa08 <rpl_regcomp@@Base+0xe8>
   2f9d4:	mov	x0, x20
   2f9d8:	bl	af90 <rpl_re_compile_fastmap@plt>
   2f9dc:	mov	w0, w19
   2f9e0:	ldp	x19, x20, [sp, #16]
   2f9e4:	ldp	x21, x22, [sp, #32]
   2f9e8:	ldr	x23, [sp, #48]
   2f9ec:	ldp	x29, x30, [sp], #64
   2f9f0:	ret
   2f9f4:	and	x21, x21, #0xffffffffffffffbf
   2f9f8:	mov	w0, #0x1                   	// #1
   2f9fc:	orr	x21, x21, #0x100
   2fa00:	b	2f984 <rpl_regcomp@@Base+0x64>
   2fa04:	mov	w19, #0x8                   	// #8
   2fa08:	ldr	x0, [x20, #32]
   2fa0c:	bl	aa50 <free@plt>
   2fa10:	str	xzr, [x20, #32]
   2fa14:	b	2f9dc <rpl_regcomp@@Base+0xbc>
   2fa18:	mov	w19, #0xc                   	// #12
   2fa1c:	mov	w0, w19
   2fa20:	ldp	x19, x20, [sp, #16]
   2fa24:	ldp	x21, x22, [sp, #32]
   2fa28:	ldr	x23, [sp, #48]
   2fa2c:	ldp	x29, x30, [sp], #64
   2fa30:	ret
   2fa34:	nop

000000000002fa38 <rpl_regerror@@Base>:
   2fa38:	stp	x29, x30, [sp, #-48]!
   2fa3c:	cmp	w0, #0x10
   2fa40:	mov	x29, sp
   2fa44:	stp	x19, x20, [sp, #16]
   2fa48:	stp	x21, x22, [sp, #32]
   2fa4c:	b.hi	2fac8 <rpl_regerror@@Base+0x90>  // b.pmore
   2fa50:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   2fa54:	add	x1, x1, #0x410
   2fa58:	mov	w4, w0
   2fa5c:	mov	x20, x3
   2fa60:	add	x3, x1, #0x1f0
   2fa64:	add	x1, x1, #0x70
   2fa68:	mov	x21, x2
   2fa6c:	mov	w2, #0x5                   	// #5
   2fa70:	mov	x0, #0x0                   	// #0
   2fa74:	ldr	x3, [x3, w4, sxtw #3]
   2fa78:	add	x1, x1, x3
   2fa7c:	bl	ada0 <dcgettext@plt>
   2fa80:	mov	x22, x0
   2fa84:	bl	a340 <strlen@plt>
   2fa88:	add	x19, x0, #0x1
   2fa8c:	cbz	x20, 2faa8 <rpl_regerror@@Base+0x70>
   2fa90:	cmp	x19, x20
   2fa94:	mov	x2, x19
   2fa98:	b.hi	2fabc <rpl_regerror@@Base+0x84>  // b.pmore
   2fa9c:	mov	x1, x22
   2faa0:	mov	x0, x21
   2faa4:	bl	a2c0 <memcpy@plt>
   2faa8:	mov	x0, x19
   2faac:	ldp	x19, x20, [sp, #16]
   2fab0:	ldp	x21, x22, [sp, #32]
   2fab4:	ldp	x29, x30, [sp], #48
   2fab8:	ret
   2fabc:	sub	x2, x20, #0x1
   2fac0:	strb	wzr, [x21, x2]
   2fac4:	b	2fa9c <rpl_regerror@@Base+0x64>
   2fac8:	bl	a900 <abort@plt>
   2facc:	nop

000000000002fad0 <rpl_regfree@@Base>:
   2fad0:	stp	x29, x30, [sp, #-32]!
   2fad4:	mov	x29, sp
   2fad8:	stp	x19, x20, [sp, #16]
   2fadc:	mov	x19, x0
   2fae0:	ldr	x20, [x0]
   2fae4:	cbz	x20, 2fb14 <rpl_regfree@@Base+0x44>
   2fae8:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   2faec:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   2faf0:	ldr	x1, [x1, #3944]
   2faf4:	ldr	x0, [x0, #4040]
   2faf8:	cmp	x1, #0x0
   2fafc:	ccmp	x0, #0x0, #0x0, eq  // eq = none
   2fb00:	b.eq	2fb0c <rpl_regfree@@Base+0x3c>  // b.none
   2fb04:	add	x0, x20, #0xe8
   2fb08:	bl	ac30 <pthread_mutex_destroy@plt>
   2fb0c:	mov	x0, x20
   2fb10:	bl	24248 <printf_parse@@Base+0x4d68>
   2fb14:	ldr	x0, [x19, #32]
   2fb18:	stp	xzr, xzr, [x19]
   2fb1c:	bl	aa50 <free@plt>
   2fb20:	str	xzr, [x19, #32]
   2fb24:	ldr	x0, [x19, #40]
   2fb28:	bl	aa50 <free@plt>
   2fb2c:	str	xzr, [x19, #40]
   2fb30:	ldp	x19, x20, [sp, #16]
   2fb34:	ldp	x29, x30, [sp], #32
   2fb38:	ret
   2fb3c:	nop

000000000002fb40 <rpl_regexec@@Base>:
   2fb40:	tst	w4, #0xfffffff8
   2fb44:	b.ne	2fc50 <rpl_regexec@@Base+0x110>  // b.any
   2fb48:	sub	sp, sp, #0x70
   2fb4c:	stp	x29, x30, [sp, #16]
   2fb50:	add	x29, sp, #0x10
   2fb54:	stp	x19, x20, [sp, #32]
   2fb58:	mov	w19, w4
   2fb5c:	mov	x20, x0
   2fb60:	stp	x21, x22, [sp, #48]
   2fb64:	mov	x21, x1
   2fb68:	mov	x22, x3
   2fb6c:	stp	x23, x24, [sp, #64]
   2fb70:	mov	x23, x2
   2fb74:	stp	x25, x26, [sp, #80]
   2fb78:	str	x27, [sp, #96]
   2fb7c:	tbnz	w19, #2, 2fc30 <rpl_regexec@@Base+0xf0>
   2fb80:	mov	x0, x1
   2fb84:	bl	a340 <strlen@plt>
   2fb88:	mov	x26, x0
   2fb8c:	mov	x27, #0x0                   	// #0
   2fb90:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   2fb94:	adrp	x2, 4c000 <vasnprintf@@Base+0x1b848>
   2fb98:	ldr	x24, [x20]
   2fb9c:	ldr	x1, [x1, #4040]
   2fba0:	ldr	x2, [x2, #3944]
   2fba4:	cmp	x1, #0x0
   2fba8:	cset	w1, ne  // ne = any
   2fbac:	cmp	x2, #0x0
   2fbb0:	cset	w0, ne  // ne = any
   2fbb4:	orr	w1, w1, w0
   2fbb8:	and	w25, w1, #0xff
   2fbbc:	tbz	w1, #0, 2fbc8 <rpl_regexec@@Base+0x88>
   2fbc0:	add	x0, x24, #0xe8
   2fbc4:	bl	af00 <pthread_mutex_lock@plt>
   2fbc8:	ldrb	w0, [x20, #56]
   2fbcc:	str	w19, [sp]
   2fbd0:	tbz	w0, #4, 2fc38 <rpl_regexec@@Base+0xf8>
   2fbd4:	mov	x3, x27
   2fbd8:	mov	x1, x21
   2fbdc:	mov	x0, x20
   2fbe0:	mov	x7, #0x0                   	// #0
   2fbe4:	mov	x6, #0x0                   	// #0
   2fbe8:	mov	x5, x26
   2fbec:	mov	x4, x26
   2fbf0:	mov	x2, x26
   2fbf4:	bl	29690 <printf_parse@@Base+0xa1b0>
   2fbf8:	mov	w19, w0
   2fbfc:	cbz	w25, 2fc08 <rpl_regexec@@Base+0xc8>
   2fc00:	add	x0, x24, #0xe8
   2fc04:	bl	af40 <pthread_mutex_unlock@plt>
   2fc08:	cmp	w19, #0x0
   2fc0c:	cset	w0, ne  // ne = any
   2fc10:	ldp	x29, x30, [sp, #16]
   2fc14:	ldp	x19, x20, [sp, #32]
   2fc18:	ldp	x21, x22, [sp, #48]
   2fc1c:	ldp	x23, x24, [sp, #64]
   2fc20:	ldp	x25, x26, [sp, #80]
   2fc24:	ldr	x27, [sp, #96]
   2fc28:	add	sp, sp, #0x70
   2fc2c:	ret
   2fc30:	ldp	x27, x26, [x3]
   2fc34:	b	2fb90 <rpl_regexec@@Base+0x50>
   2fc38:	mov	x7, x22
   2fc3c:	mov	x6, x23
   2fc40:	mov	x3, x27
   2fc44:	mov	x1, x21
   2fc48:	mov	x0, x20
   2fc4c:	b	2fbe8 <rpl_regexec@@Base+0xa8>
   2fc50:	mov	w0, #0x2                   	// #2
   2fc54:	ret

000000000002fc58 <rpl_re_match@@Base>:
   2fc58:	sub	sp, sp, #0x80
   2fc5c:	cmp	x3, #0x0
   2fc60:	ccmp	x2, x3, #0x1, ge  // ge = tcont
   2fc64:	stp	x29, x30, [sp, #16]
   2fc68:	add	x29, sp, #0x10
   2fc6c:	stp	x19, x20, [sp, #32]
   2fc70:	stp	x25, x26, [sp, #80]
   2fc74:	ldr	x26, [x0]
   2fc78:	b.lt	2ff34 <rpl_re_match@@Base+0x2dc>  // b.tstop
   2fc7c:	stp	x21, x22, [sp, #48]
   2fc80:	mov	x22, x0
   2fc84:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   2fc88:	mov	x25, x1
   2fc8c:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   2fc90:	ldr	x0, [x0, #3944]
   2fc94:	stp	x23, x24, [sp, #64]
   2fc98:	mov	x20, x3
   2fc9c:	ldr	x1, [x1, #4040]
   2fca0:	cmp	x0, #0x0
   2fca4:	cset	w0, ne  // ne = any
   2fca8:	stp	x27, x28, [sp, #96]
   2fcac:	cmp	x1, #0x0
   2fcb0:	cset	w1, ne  // ne = any
   2fcb4:	mov	x24, x2
   2fcb8:	orr	w0, w0, w1
   2fcbc:	mov	x21, x4
   2fcc0:	and	w1, w0, #0xff
   2fcc4:	str	w1, [sp, #124]
   2fcc8:	tbz	w0, #0, 2fcd4 <rpl_re_match@@Base+0x7c>
   2fccc:	add	x0, x26, #0xe8
   2fcd0:	bl	af00 <pthread_mutex_lock@plt>
   2fcd4:	ldrb	w0, [x22, #56]
   2fcd8:	cmp	x21, #0x0
   2fcdc:	cset	w1, eq  // eq = none
   2fce0:	ubfx	x2, x0, #4, #1
   2fce4:	ubfx	x28, x0, #5, #2
   2fce8:	orr	w1, w1, w2
   2fcec:	tbnz	w1, #0, 2fec4 <rpl_re_match@@Base+0x26c>
   2fcf0:	and	w0, w0, #0x6
   2fcf4:	cmp	w0, #0x4
   2fcf8:	ldr	x0, [x22, #48]
   2fcfc:	b.eq	2ff58 <rpl_re_match@@Base+0x300>  // b.none
   2fd00:	add	x27, x0, #0x1
   2fd04:	mov	x23, x27
   2fd08:	lsl	x0, x27, #4
   2fd0c:	bl	a5f0 <malloc@plt>
   2fd10:	mov	x19, x0
   2fd14:	cbz	x0, 2ff50 <rpl_re_match@@Base+0x2f8>
   2fd18:	str	w28, [sp]
   2fd1c:	mov	x7, x0
   2fd20:	mov	x1, x25
   2fd24:	mov	x6, x27
   2fd28:	mov	x5, x24
   2fd2c:	mov	x2, x24
   2fd30:	mov	x4, x20
   2fd34:	mov	x3, x20
   2fd38:	mov	x0, x22
   2fd3c:	bl	29690 <printf_parse@@Base+0xa1b0>
   2fd40:	cbnz	w0, 2fe78 <rpl_re_match@@Base+0x220>
   2fd44:	cbz	x21, 2fe60 <rpl_re_match@@Base+0x208>
   2fd48:	ldrb	w24, [x22, #56]
   2fd4c:	add	x28, x23, #0x1
   2fd50:	ubfx	x24, x24, #1, #2
   2fd54:	cbz	w24, 2fed8 <rpl_re_match@@Base+0x280>
   2fd58:	cmp	w24, #0x1
   2fd5c:	b.eq	2ff84 <rpl_re_match@@Base+0x32c>  // b.none
   2fd60:	cmp	w24, #0x2
   2fd64:	b.ne	30070 <rpl_re_match@@Base+0x418>  // b.any
   2fd68:	ldr	x25, [x21]
   2fd6c:	cmp	x27, x25
   2fd70:	b.hi	3004c <rpl_re_match@@Base+0x3f4>  // b.pmore
   2fd74:	cmp	x23, #0x0
   2fd78:	b.le	2fff4 <rpl_re_match@@Base+0x39c>
   2fd7c:	ldp	x2, x3, [x21, #8]
   2fd80:	lsl	x0, x23, #3
   2fd84:	add	x4, x19, x23, lsl #4
   2fd88:	add	x1, x3, x0
   2fd8c:	add	x0, x2, x0
   2fd90:	cmp	x19, x1
   2fd94:	add	x5, x2, #0xf
   2fd98:	ccmp	x3, x4, #0x2, cc  // cc = lo, ul, last
   2fd9c:	sub	x5, x5, x3
   2fda0:	cset	w1, cs  // cs = hs, nlast
   2fda4:	cmp	x19, x0
   2fda8:	ccmp	x2, x4, #0x2, cc  // cc = lo, ul, last
   2fdac:	sub	x4, x23, #0x1
   2fdb0:	cset	w0, cs  // cs = hs, nlast
   2fdb4:	cmp	x5, #0x1e
   2fdb8:	ccmp	x4, #0x5, #0x0, hi  // hi = pmore
   2fdbc:	and	w0, w1, w0
   2fdc0:	cset	w4, hi  // hi = pmore
   2fdc4:	mov	x1, x23
   2fdc8:	tst	w4, w0
   2fdcc:	b.eq	2ffc8 <rpl_re_match@@Base+0x370>  // b.none
   2fdd0:	lsr	x5, x23, #1
   2fdd4:	mov	x4, x19
   2fdd8:	mov	x0, #0x0                   	// #0
   2fddc:	lsl	x5, x5, #4
   2fde0:	ld2	{v0.2d, v1.2d}, [x4], #32
   2fde4:	str	q0, [x2, x0]
   2fde8:	str	q1, [x3, x0]
   2fdec:	add	x0, x0, #0x10
   2fdf0:	cmp	x0, x5
   2fdf4:	b.ne	2fde0 <rpl_re_match@@Base+0x188>  // b.any
   2fdf8:	and	x0, x23, #0xfffffffffffffffe
   2fdfc:	tbz	w23, #0, 2fe18 <rpl_re_match@@Base+0x1c0>
   2fe00:	lsl	x4, x0, #4
   2fe04:	add	x5, x19, x4
   2fe08:	ldr	x4, [x19, x4]
   2fe0c:	str	x4, [x2, x0, lsl #3]
   2fe10:	ldr	x2, [x5, #8]
   2fe14:	str	x2, [x3, x0, lsl #3]
   2fe18:	ldr	x25, [x21]
   2fe1c:	cmp	x25, x1
   2fe20:	b.ls	2fe4c <rpl_re_match@@Base+0x1f4>  // b.plast
   2fe24:	ldp	x4, x3, [x21, #8]
   2fe28:	mov	x0, #0xffffffffffffffff    	// #-1
   2fe2c:	nop
   2fe30:	str	x0, [x3, x1, lsl #3]
   2fe34:	add	x23, x23, #0x1
   2fe38:	str	x0, [x4, x1, lsl #3]
   2fe3c:	mov	x1, x23
   2fe40:	ldr	x2, [x21]
   2fe44:	cmp	x23, x2
   2fe48:	b.cc	2fe30 <rpl_re_match@@Base+0x1d8>  // b.lo, b.ul, b.last
   2fe4c:	ldrb	w0, [x22, #56]
   2fe50:	bfi	w0, w24, #1, #2
   2fe54:	strb	w0, [x22, #56]
   2fe58:	tst	w0, #0x6
   2fe5c:	b.eq	2fe84 <rpl_re_match@@Base+0x22c>  // b.none
   2fe60:	ldr	x0, [x19]
   2fe64:	cmp	x20, x0
   2fe68:	b.ne	30028 <rpl_re_match@@Base+0x3d0>  // b.any
   2fe6c:	ldr	x3, [x19, #8]
   2fe70:	sub	x20, x3, x20
   2fe74:	b	2fe88 <rpl_re_match@@Base+0x230>
   2fe78:	cmp	w0, #0x1
   2fe7c:	mov	x20, #0xffffffffffffffff    	// #-1
   2fe80:	b.eq	2fe88 <rpl_re_match@@Base+0x230>  // b.none
   2fe84:	mov	x20, #0xfffffffffffffffe    	// #-2
   2fe88:	mov	x0, x19
   2fe8c:	bl	aa50 <free@plt>
   2fe90:	ldr	w0, [sp, #124]
   2fe94:	cbz	w0, 2ff10 <rpl_re_match@@Base+0x2b8>
   2fe98:	add	x0, x26, #0xe8
   2fe9c:	bl	af40 <pthread_mutex_unlock@plt>
   2fea0:	mov	x0, x20
   2fea4:	ldp	x29, x30, [sp, #16]
   2fea8:	ldp	x19, x20, [sp, #32]
   2feac:	ldp	x21, x22, [sp, #48]
   2feb0:	ldp	x23, x24, [sp, #64]
   2feb4:	ldp	x25, x26, [sp, #80]
   2feb8:	ldp	x27, x28, [sp, #96]
   2febc:	add	sp, sp, #0x80
   2fec0:	ret
   2fec4:	mov	x27, #0x1                   	// #1
   2fec8:	mov	x0, #0x10                  	// #16
   2fecc:	mov	x23, x27
   2fed0:	mov	x21, #0x0                   	// #0
   2fed4:	b	2fd0c <rpl_re_match@@Base+0xb4>
   2fed8:	lsl	x27, x28, #3
   2fedc:	mov	x25, x28
   2fee0:	mov	x0, x27
   2fee4:	bl	a5f0 <malloc@plt>
   2fee8:	str	x0, [x21, #8]
   2feec:	mov	x24, x0
   2fef0:	cbz	x0, 30000 <rpl_re_match@@Base+0x3a8>
   2fef4:	mov	x0, x27
   2fef8:	bl	a5f0 <malloc@plt>
   2fefc:	str	x0, [x21, #16]
   2ff00:	cbz	x0, 30008 <rpl_re_match@@Base+0x3b0>
   2ff04:	mov	w24, #0x1                   	// #1
   2ff08:	str	x28, [x21]
   2ff0c:	b	2fd74 <rpl_re_match@@Base+0x11c>
   2ff10:	mov	x0, x20
   2ff14:	ldp	x29, x30, [sp, #16]
   2ff18:	ldp	x19, x20, [sp, #32]
   2ff1c:	ldp	x21, x22, [sp, #48]
   2ff20:	ldp	x23, x24, [sp, #64]
   2ff24:	ldp	x25, x26, [sp, #80]
   2ff28:	ldp	x27, x28, [sp, #96]
   2ff2c:	add	sp, sp, #0x80
   2ff30:	ret
   2ff34:	mov	x20, #0xffffffffffffffff    	// #-1
   2ff38:	mov	x0, x20
   2ff3c:	ldp	x29, x30, [sp, #16]
   2ff40:	ldp	x19, x20, [sp, #32]
   2ff44:	ldp	x25, x26, [sp, #80]
   2ff48:	add	sp, sp, #0x80
   2ff4c:	ret
   2ff50:	mov	x20, #0xfffffffffffffffe    	// #-2
   2ff54:	b	2fe90 <rpl_re_match@@Base+0x238>
   2ff58:	ldr	x27, [x21]
   2ff5c:	cmp	x0, x27
   2ff60:	b.cc	2fd00 <rpl_re_match@@Base+0xa8>  // b.lo, b.ul, b.last
   2ff64:	cmp	x27, #0x0
   2ff68:	mov	x23, x27
   2ff6c:	b.gt	2fd08 <rpl_re_match@@Base+0xb0>
   2ff70:	mov	x27, #0x1                   	// #1
   2ff74:	mov	x0, #0x10                  	// #16
   2ff78:	mov	x23, x27
   2ff7c:	mov	x21, #0x0                   	// #0
   2ff80:	b	2fd0c <rpl_re_match@@Base+0xb4>
   2ff84:	ldr	x25, [x21]
   2ff88:	cmp	x25, x28
   2ff8c:	b.cs	2fd74 <rpl_re_match@@Base+0x11c>  // b.hs, b.nlast
   2ff90:	ldr	x0, [x21, #8]
   2ff94:	lsl	x25, x28, #3
   2ff98:	mov	x1, x25
   2ff9c:	bl	a7e0 <realloc@plt>
   2ffa0:	mov	x27, x0
   2ffa4:	cbz	x0, 30000 <rpl_re_match@@Base+0x3a8>
   2ffa8:	ldr	x0, [x21, #16]
   2ffac:	mov	x1, x25
   2ffb0:	bl	a7e0 <realloc@plt>
   2ffb4:	cbz	x0, 30018 <rpl_re_match@@Base+0x3c0>
   2ffb8:	mov	x25, x28
   2ffbc:	stp	x28, x27, [x21]
   2ffc0:	str	x0, [x21, #16]
   2ffc4:	b	2fd74 <rpl_re_match@@Base+0x11c>
   2ffc8:	mov	x4, x19
   2ffcc:	mov	x0, #0x0                   	// #0
   2ffd0:	ldr	x5, [x4]
   2ffd4:	str	x5, [x2, x0, lsl #3]
   2ffd8:	add	x4, x4, #0x10
   2ffdc:	ldur	x5, [x4, #-8]
   2ffe0:	str	x5, [x3, x0, lsl #3]
   2ffe4:	add	x0, x0, #0x1
   2ffe8:	cmp	x23, x0
   2ffec:	b.ne	2ffd0 <rpl_re_match@@Base+0x378>  // b.any
   2fff0:	b	2fe18 <rpl_re_match@@Base+0x1c0>
   2fff4:	mov	x1, #0x0                   	// #0
   2fff8:	mov	x23, #0x0                   	// #0
   2fffc:	b	2fe1c <rpl_re_match@@Base+0x1c4>
   30000:	mov	w24, #0x0                   	// #0
   30004:	b	2fe4c <rpl_re_match@@Base+0x1f4>
   30008:	mov	x0, x24
   3000c:	mov	w24, #0x0                   	// #0
   30010:	bl	aa50 <free@plt>
   30014:	b	2fe4c <rpl_re_match@@Base+0x1f4>
   30018:	mov	x0, x27
   3001c:	mov	w24, #0x0                   	// #0
   30020:	bl	aa50 <free@plt>
   30024:	b	2fe4c <rpl_re_match@@Base+0x1f4>
   30028:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   3002c:	add	x3, x3, #0x410
   30030:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   30034:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   30038:	add	x3, x3, #0x288
   3003c:	add	x1, x1, #0x138
   30040:	add	x0, x0, #0x288
   30044:	mov	w2, #0x1be                 	// #446
   30048:	bl	aea0 <__assert_fail@plt>
   3004c:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   30050:	add	x3, x3, #0x410
   30054:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   30058:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   3005c:	add	x3, x3, #0x278
   30060:	add	x1, x1, #0x138
   30064:	add	x0, x0, #0x270
   30068:	mov	w2, #0x1fb                 	// #507
   3006c:	bl	aea0 <__assert_fail@plt>
   30070:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   30074:	add	x3, x3, #0x410
   30078:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   3007c:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   30080:	add	x3, x3, #0x278
   30084:	add	x1, x1, #0x138
   30088:	add	x0, x0, #0x250
   3008c:	mov	w2, #0x1f9                 	// #505
   30090:	bl	aea0 <__assert_fail@plt>
   30094:	nop

0000000000030098 <rpl_re_search@@Base>:
   30098:	sub	sp, sp, #0x80
   3009c:	cmp	x3, #0x0
   300a0:	ccmp	x2, x3, #0x1, ge  // ge = tcont
   300a4:	stp	x29, x30, [sp, #16]
   300a8:	add	x29, sp, #0x10
   300ac:	stp	x21, x22, [sp, #48]
   300b0:	mov	x21, x0
   300b4:	ldr	x0, [x0]
   300b8:	stp	x19, x20, [sp, #32]
   300bc:	stp	x23, x24, [sp, #64]
   300c0:	add	x24, x3, x4
   300c4:	str	x0, [sp, #112]
   300c8:	b.lt	30410 <rpl_re_search@@Base+0x378>  // b.tstop
   300cc:	stp	x25, x26, [sp, #80]
   300d0:	mov	x19, x3
   300d4:	mov	x25, x1
   300d8:	stp	x27, x28, [sp, #96]
   300dc:	mov	x22, x5
   300e0:	mov	x28, x2
   300e4:	cmp	x2, x24
   300e8:	b.lt	303c8 <rpl_re_search@@Base+0x330>  // b.tstop
   300ec:	cmp	x4, #0x0
   300f0:	ccmp	x3, x24, #0x4, ge  // ge = tcont
   300f4:	b.gt	303c8 <rpl_re_search@@Base+0x330>
   300f8:	tbnz	x24, #63, 303d0 <rpl_re_search@@Base+0x338>
   300fc:	cmp	x4, #0x0
   30100:	ccmp	x3, x24, #0x0, lt  // lt = tstop
   30104:	b.le	303d0 <rpl_re_search@@Base+0x338>
   30108:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   3010c:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   30110:	ldr	x0, [x0, #4040]
   30114:	ldr	x1, [x1, #3944]
   30118:	cmp	x0, #0x0
   3011c:	cset	w0, ne  // ne = any
   30120:	cmp	x1, #0x0
   30124:	cset	w1, ne  // ne = any
   30128:	orr	w0, w0, w1
   3012c:	and	w26, w0, #0xff
   30130:	tbz	w0, #0, 30144 <rpl_re_search@@Base+0xac>
   30134:	ldr	x0, [sp, #112]
   30138:	mov	w26, #0x1                   	// #1
   3013c:	add	x0, x0, #0xe8
   30140:	bl	af00 <pthread_mutex_lock@plt>
   30144:	ldrb	w0, [x21, #56]
   30148:	cmp	x19, x24
   3014c:	ubfx	x1, x0, #5, #2
   30150:	str	x1, [sp, #120]
   30154:	b.ge	30164 <rpl_re_search@@Base+0xcc>  // b.tcont
   30158:	ldr	x1, [x21, #32]
   3015c:	cbz	x1, 30164 <rpl_re_search@@Base+0xcc>
   30160:	tbz	w0, #3, 30384 <rpl_re_search@@Base+0x2ec>
   30164:	ldrb	w1, [x21, #56]
   30168:	cmp	x22, #0x0
   3016c:	cset	w0, eq  // eq = none
   30170:	ubfx	x3, x1, #4, #1
   30174:	orr	w0, w0, w3
   30178:	tbnz	w0, #0, 30370 <rpl_re_search@@Base+0x2d8>
   3017c:	and	w1, w1, #0x6
   30180:	cmp	w1, #0x4
   30184:	ldr	x0, [x21, #48]
   30188:	b.eq	30438 <rpl_re_search@@Base+0x3a0>  // b.none
   3018c:	add	x27, x0, #0x1
   30190:	mov	x23, x27
   30194:	lsl	x0, x27, #4
   30198:	bl	a5f0 <malloc@plt>
   3019c:	mov	x20, x0
   301a0:	cbz	x0, 30430 <rpl_re_search@@Base+0x398>
   301a4:	mov	x7, x0
   301a8:	ldr	w0, [sp, #120]
   301ac:	str	w0, [sp]
   301b0:	mov	x4, x24
   301b4:	mov	x3, x19
   301b8:	mov	x1, x25
   301bc:	mov	x6, x27
   301c0:	mov	x5, x28
   301c4:	mov	x2, x28
   301c8:	mov	x0, x21
   301cc:	bl	29690 <printf_parse@@Base+0xa1b0>
   301d0:	cbnz	w0, 30330 <rpl_re_search@@Base+0x298>
   301d4:	cbz	x22, 302f0 <rpl_re_search@@Base+0x258>
   301d8:	ldrb	w19, [x21, #56]
   301dc:	add	x25, x23, #0x1
   301e0:	ubfx	x19, x19, #1, #2
   301e4:	cbz	w19, 30390 <rpl_re_search@@Base+0x2f8>
   301e8:	cmp	w19, #0x1
   301ec:	b.eq	30464 <rpl_re_search@@Base+0x3cc>  // b.none
   301f0:	cmp	w19, #0x2
   301f4:	b.ne	3052c <rpl_re_search@@Base+0x494>  // b.any
   301f8:	ldr	x24, [x22]
   301fc:	cmp	x24, x27
   30200:	b.cc	30508 <rpl_re_search@@Base+0x470>  // b.lo, b.ul, b.last
   30204:	cmp	x23, #0x0
   30208:	b.le	304d4 <rpl_re_search@@Base+0x43c>
   3020c:	ldp	x2, x3, [x22, #8]
   30210:	lsl	x0, x23, #3
   30214:	add	x4, x20, x23, lsl #4
   30218:	add	x1, x3, x0
   3021c:	add	x0, x2, x0
   30220:	cmp	x20, x1
   30224:	add	x5, x2, #0xf
   30228:	ccmp	x3, x4, #0x2, cc  // cc = lo, ul, last
   3022c:	sub	x5, x5, x3
   30230:	cset	w1, cs  // cs = hs, nlast
   30234:	cmp	x20, x0
   30238:	ccmp	x2, x4, #0x2, cc  // cc = lo, ul, last
   3023c:	sub	x4, x23, #0x1
   30240:	cset	w0, cs  // cs = hs, nlast
   30244:	cmp	x5, #0x1e
   30248:	ccmp	x4, #0x5, #0x0, hi  // hi = pmore
   3024c:	and	w0, w1, w0
   30250:	cset	w4, hi  // hi = pmore
   30254:	mov	x1, x23
   30258:	tst	w4, w0
   3025c:	b.eq	304a8 <rpl_re_search@@Base+0x410>  // b.none
   30260:	lsr	x5, x23, #1
   30264:	mov	x4, x20
   30268:	mov	x0, #0x0                   	// #0
   3026c:	lsl	x5, x5, #4
   30270:	ld2	{v0.2d, v1.2d}, [x4], #32
   30274:	str	q0, [x2, x0]
   30278:	str	q1, [x3, x0]
   3027c:	add	x0, x0, #0x10
   30280:	cmp	x0, x5
   30284:	b.ne	30270 <rpl_re_search@@Base+0x1d8>  // b.any
   30288:	and	x0, x23, #0xfffffffffffffffe
   3028c:	tbz	w23, #0, 302a8 <rpl_re_search@@Base+0x210>
   30290:	lsl	x4, x0, #4
   30294:	add	x5, x20, x4
   30298:	ldr	x4, [x20, x4]
   3029c:	str	x4, [x2, x0, lsl #3]
   302a0:	ldr	x2, [x5, #8]
   302a4:	str	x2, [x3, x0, lsl #3]
   302a8:	ldr	x24, [x22]
   302ac:	cmp	x1, x24
   302b0:	b.cs	302dc <rpl_re_search@@Base+0x244>  // b.hs, b.nlast
   302b4:	ldp	x4, x3, [x22, #8]
   302b8:	mov	x0, #0xffffffffffffffff    	// #-1
   302bc:	nop
   302c0:	str	x0, [x3, x1, lsl #3]
   302c4:	add	x23, x23, #0x1
   302c8:	str	x0, [x4, x1, lsl #3]
   302cc:	mov	x1, x23
   302d0:	ldr	x2, [x22]
   302d4:	cmp	x23, x2
   302d8:	b.cc	302c0 <rpl_re_search@@Base+0x228>  // b.lo, b.ul, b.last
   302dc:	ldrb	w0, [x21, #56]
   302e0:	bfi	w0, w19, #1, #2
   302e4:	strb	w0, [x21, #56]
   302e8:	tst	w0, #0x6
   302ec:	b.eq	3033c <rpl_re_search@@Base+0x2a4>  // b.none
   302f0:	mov	x0, x20
   302f4:	ldr	x19, [x20]
   302f8:	bl	aa50 <free@plt>
   302fc:	cbz	w26, 3034c <rpl_re_search@@Base+0x2b4>
   30300:	ldr	x0, [sp, #112]
   30304:	add	x0, x0, #0xe8
   30308:	bl	af40 <pthread_mutex_unlock@plt>
   3030c:	mov	x0, x19
   30310:	ldp	x29, x30, [sp, #16]
   30314:	ldp	x19, x20, [sp, #32]
   30318:	ldp	x21, x22, [sp, #48]
   3031c:	ldp	x23, x24, [sp, #64]
   30320:	ldp	x25, x26, [sp, #80]
   30324:	ldp	x27, x28, [sp, #96]
   30328:	add	sp, sp, #0x80
   3032c:	ret
   30330:	cmp	w0, #0x1
   30334:	mov	x19, #0xffffffffffffffff    	// #-1
   30338:	b.eq	30340 <rpl_re_search@@Base+0x2a8>  // b.none
   3033c:	mov	x19, #0xfffffffffffffffe    	// #-2
   30340:	mov	x0, x20
   30344:	bl	aa50 <free@plt>
   30348:	cbnz	w26, 30300 <rpl_re_search@@Base+0x268>
   3034c:	mov	x0, x19
   30350:	ldp	x29, x30, [sp, #16]
   30354:	ldp	x19, x20, [sp, #32]
   30358:	ldp	x21, x22, [sp, #48]
   3035c:	ldp	x23, x24, [sp, #64]
   30360:	ldp	x25, x26, [sp, #80]
   30364:	ldp	x27, x28, [sp, #96]
   30368:	add	sp, sp, #0x80
   3036c:	ret
   30370:	mov	x27, #0x1                   	// #1
   30374:	mov	x0, #0x10                  	// #16
   30378:	mov	x23, x27
   3037c:	mov	x22, #0x0                   	// #0
   30380:	b	30198 <rpl_re_search@@Base+0x100>
   30384:	mov	x0, x21
   30388:	bl	af90 <rpl_re_compile_fastmap@plt>
   3038c:	b	30164 <rpl_re_search@@Base+0xcc>
   30390:	lsl	x28, x25, #3
   30394:	mov	x24, x25
   30398:	mov	x0, x28
   3039c:	bl	a5f0 <malloc@plt>
   303a0:	str	x0, [x22, #8]
   303a4:	mov	x19, x0
   303a8:	cbz	x0, 304e0 <rpl_re_search@@Base+0x448>
   303ac:	mov	x0, x28
   303b0:	bl	a5f0 <malloc@plt>
   303b4:	str	x0, [x22, #16]
   303b8:	cbz	x0, 304e8 <rpl_re_search@@Base+0x450>
   303bc:	mov	w19, #0x1                   	// #1
   303c0:	str	x25, [x22]
   303c4:	b	30204 <rpl_re_search@@Base+0x16c>
   303c8:	mov	x24, x28
   303cc:	b	30108 <rpl_re_search@@Base+0x70>
   303d0:	adrp	x0, 4c000 <vasnprintf@@Base+0x1b848>
   303d4:	adrp	x1, 4c000 <vasnprintf@@Base+0x1b848>
   303d8:	mov	x24, #0x0                   	// #0
   303dc:	ldr	x0, [x0, #4040]
   303e0:	ldr	x1, [x1, #3944]
   303e4:	cmp	x0, #0x0
   303e8:	cset	w0, ne  // ne = any
   303ec:	cmp	x1, #0x0
   303f0:	cset	w1, ne  // ne = any
   303f4:	orr	w0, w0, w1
   303f8:	and	w26, w0, #0xff
   303fc:	tbnz	w0, #0, 30134 <rpl_re_search@@Base+0x9c>
   30400:	ldrb	w0, [x21, #56]
   30404:	ubfx	x0, x0, #5, #2
   30408:	str	x0, [sp, #120]
   3040c:	b	30164 <rpl_re_search@@Base+0xcc>
   30410:	mov	x19, #0xffffffffffffffff    	// #-1
   30414:	mov	x0, x19
   30418:	ldp	x29, x30, [sp, #16]
   3041c:	ldp	x19, x20, [sp, #32]
   30420:	ldp	x21, x22, [sp, #48]
   30424:	ldp	x23, x24, [sp, #64]
   30428:	add	sp, sp, #0x80
   3042c:	ret
   30430:	mov	x19, #0xfffffffffffffffe    	// #-2
   30434:	b	302fc <rpl_re_search@@Base+0x264>
   30438:	ldr	x27, [x22]
   3043c:	cmp	x0, x27
   30440:	b.cc	3018c <rpl_re_search@@Base+0xf4>  // b.lo, b.ul, b.last
   30444:	cmp	x27, #0x0
   30448:	mov	x23, x27
   3044c:	b.gt	30194 <rpl_re_search@@Base+0xfc>
   30450:	mov	x27, #0x1                   	// #1
   30454:	mov	x0, #0x10                  	// #16
   30458:	mov	x23, x27
   3045c:	mov	x22, #0x0                   	// #0
   30460:	b	30198 <rpl_re_search@@Base+0x100>
   30464:	ldr	x24, [x22]
   30468:	cmp	x24, x25
   3046c:	b.cs	30204 <rpl_re_search@@Base+0x16c>  // b.hs, b.nlast
   30470:	ldr	x0, [x22, #8]
   30474:	lsl	x24, x25, #3
   30478:	mov	x1, x24
   3047c:	bl	a7e0 <realloc@plt>
   30480:	mov	x28, x0
   30484:	cbz	x0, 304e0 <rpl_re_search@@Base+0x448>
   30488:	ldr	x0, [x22, #16]
   3048c:	mov	x1, x24
   30490:	bl	a7e0 <realloc@plt>
   30494:	cbz	x0, 304f8 <rpl_re_search@@Base+0x460>
   30498:	mov	x24, x25
   3049c:	stp	x25, x28, [x22]
   304a0:	str	x0, [x22, #16]
   304a4:	b	30204 <rpl_re_search@@Base+0x16c>
   304a8:	mov	x4, x20
   304ac:	mov	x0, #0x0                   	// #0
   304b0:	ldr	x5, [x4]
   304b4:	str	x5, [x2, x0, lsl #3]
   304b8:	add	x4, x4, #0x10
   304bc:	ldur	x5, [x4, #-8]
   304c0:	str	x5, [x3, x0, lsl #3]
   304c4:	add	x0, x0, #0x1
   304c8:	cmp	x0, x23
   304cc:	b.ne	304b0 <rpl_re_search@@Base+0x418>  // b.any
   304d0:	b	302a8 <rpl_re_search@@Base+0x210>
   304d4:	mov	x1, #0x0                   	// #0
   304d8:	mov	x23, #0x0                   	// #0
   304dc:	b	302ac <rpl_re_search@@Base+0x214>
   304e0:	mov	w19, #0x0                   	// #0
   304e4:	b	302dc <rpl_re_search@@Base+0x244>
   304e8:	mov	x0, x19
   304ec:	mov	w19, #0x0                   	// #0
   304f0:	bl	aa50 <free@plt>
   304f4:	b	302dc <rpl_re_search@@Base+0x244>
   304f8:	mov	x0, x28
   304fc:	mov	w19, #0x0                   	// #0
   30500:	bl	aa50 <free@plt>
   30504:	b	302dc <rpl_re_search@@Base+0x244>
   30508:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   3050c:	add	x3, x3, #0x410
   30510:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   30514:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   30518:	add	x3, x3, #0x278
   3051c:	add	x1, x1, #0x138
   30520:	add	x0, x0, #0x270
   30524:	mov	w2, #0x1fb                 	// #507
   30528:	bl	aea0 <__assert_fail@plt>
   3052c:	adrp	x3, 34000 <vasnprintf@@Base+0x3848>
   30530:	add	x3, x3, #0x410
   30534:	adrp	x1, 34000 <vasnprintf@@Base+0x3848>
   30538:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   3053c:	add	x3, x3, #0x278
   30540:	add	x1, x1, #0x138
   30544:	add	x0, x0, #0x250
   30548:	mov	w2, #0x1f9                 	// #505
   3054c:	bl	aea0 <__assert_fail@plt>

0000000000030550 <rpl_re_match_2@@Base>:
   30550:	stp	x29, x30, [sp, #-96]!
   30554:	cmp	x4, #0x0
   30558:	ccmp	x7, #0x0, #0x1, ge  // ge = tcont
   3055c:	mov	x29, sp
   30560:	stp	x19, x20, [sp, #16]
   30564:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
   30568:	b.lt	30644 <rpl_re_match_2@@Base+0xf4>  // b.tstop
   3056c:	stp	x27, x28, [sp, #80]
   30570:	mov	x19, x4
   30574:	mov	x20, x2
   30578:	adds	x27, x2, x4
   3057c:	b.vs	30640 <rpl_re_match_2@@Base+0xf0>
   30580:	stp	x21, x22, [sp, #32]
   30584:	mov	x28, x1
   30588:	mov	x21, x7
   3058c:	stp	x23, x24, [sp, #48]
   30590:	mov	x23, x0
   30594:	mov	x24, x5
   30598:	stp	x25, x26, [sp, #64]
   3059c:	mov	x25, x6
   305a0:	cbz	x4, 30658 <rpl_re_match_2@@Base+0x108>
   305a4:	mov	x22, x3
   305a8:	mov	x26, #0x0                   	// #0
   305ac:	cbnz	x2, 30600 <rpl_re_match_2@@Base+0xb0>
   305b0:	mov	x6, x25
   305b4:	mov	x5, x21
   305b8:	mov	x3, x24
   305bc:	mov	x2, x27
   305c0:	mov	x1, x22
   305c4:	mov	w7, #0x1                   	// #1
   305c8:	mov	x4, #0x0                   	// #0
   305cc:	mov	x0, x23
   305d0:	bl	2f410 <rpl_re_compile_fastmap@@Base+0xd0>
   305d4:	mov	x19, x0
   305d8:	mov	x0, x26
   305dc:	bl	aa50 <free@plt>
   305e0:	mov	x0, x19
   305e4:	ldp	x19, x20, [sp, #16]
   305e8:	ldp	x21, x22, [sp, #32]
   305ec:	ldp	x23, x24, [sp, #48]
   305f0:	ldp	x25, x26, [sp, #64]
   305f4:	ldp	x27, x28, [sp, #80]
   305f8:	ldp	x29, x30, [sp], #96
   305fc:	ret
   30600:	mov	x0, x27
   30604:	bl	a5f0 <malloc@plt>
   30608:	mov	x26, x0
   3060c:	cbz	x0, 30634 <rpl_re_match_2@@Base+0xe4>
   30610:	mov	x1, x28
   30614:	mov	x2, x20
   30618:	bl	a2c0 <memcpy@plt>
   3061c:	mov	x1, x22
   30620:	mov	x2, x19
   30624:	add	x0, x26, x20
   30628:	mov	x22, x26
   3062c:	bl	a2c0 <memcpy@plt>
   30630:	b	305b0 <rpl_re_match_2@@Base+0x60>
   30634:	ldp	x21, x22, [sp, #32]
   30638:	ldp	x23, x24, [sp, #48]
   3063c:	ldp	x25, x26, [sp, #64]
   30640:	ldp	x27, x28, [sp, #80]
   30644:	mov	x19, #0xfffffffffffffffe    	// #-2
   30648:	mov	x0, x19
   3064c:	ldp	x19, x20, [sp, #16]
   30650:	ldp	x29, x30, [sp], #96
   30654:	ret
   30658:	mov	x22, x1
   3065c:	mov	x26, #0x0                   	// #0
   30660:	b	305b0 <rpl_re_match_2@@Base+0x60>
   30664:	nop

0000000000030668 <rpl_re_search_2@@Base>:
   30668:	stp	x29, x30, [sp, #-112]!
   3066c:	cmp	x4, #0x0
   30670:	mov	x29, sp
   30674:	stp	x27, x28, [sp, #80]
   30678:	ldr	x27, [sp, #112]
   3067c:	stp	x19, x20, [sp, #16]
   30680:	ccmp	x27, #0x0, #0x1, ge  // ge = tcont
   30684:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
   30688:	b.lt	3075c <rpl_re_search_2@@Base+0xf4>  // b.tstop
   3068c:	mov	x19, x4
   30690:	mov	x20, x2
   30694:	adds	x28, x2, x4
   30698:	b.vs	3075c <rpl_re_search_2@@Base+0xf4>
   3069c:	stp	x21, x22, [sp, #32]
   306a0:	mov	x22, x0
   306a4:	stp	x23, x24, [sp, #48]
   306a8:	mov	x23, x5
   306ac:	mov	x24, x6
   306b0:	stp	x25, x26, [sp, #64]
   306b4:	mov	x25, x7
   306b8:	cbz	x4, 30774 <rpl_re_search_2@@Base+0x10c>
   306bc:	str	x1, [sp, #104]
   306c0:	mov	x21, x3
   306c4:	mov	x26, #0x0                   	// #0
   306c8:	cbnz	x2, 3071c <rpl_re_search_2@@Base+0xb4>
   306cc:	mov	x6, x25
   306d0:	mov	x5, x27
   306d4:	mov	x4, x24
   306d8:	mov	x3, x23
   306dc:	mov	x2, x28
   306e0:	mov	x1, x21
   306e4:	mov	w7, #0x0                   	// #0
   306e8:	mov	x0, x22
   306ec:	bl	2f410 <rpl_re_compile_fastmap@@Base+0xd0>
   306f0:	mov	x19, x0
   306f4:	mov	x0, x26
   306f8:	bl	aa50 <free@plt>
   306fc:	mov	x0, x19
   30700:	ldp	x19, x20, [sp, #16]
   30704:	ldp	x21, x22, [sp, #32]
   30708:	ldp	x23, x24, [sp, #48]
   3070c:	ldp	x25, x26, [sp, #64]
   30710:	ldp	x27, x28, [sp, #80]
   30714:	ldp	x29, x30, [sp], #112
   30718:	ret
   3071c:	mov	x0, x28
   30720:	bl	a5f0 <malloc@plt>
   30724:	mov	x26, x0
   30728:	cbz	x0, 30750 <rpl_re_search_2@@Base+0xe8>
   3072c:	ldr	x1, [sp, #104]
   30730:	mov	x2, x20
   30734:	bl	a2c0 <memcpy@plt>
   30738:	mov	x1, x21
   3073c:	mov	x2, x19
   30740:	add	x0, x26, x20
   30744:	mov	x21, x26
   30748:	bl	a2c0 <memcpy@plt>
   3074c:	b	306cc <rpl_re_search_2@@Base+0x64>
   30750:	ldp	x21, x22, [sp, #32]
   30754:	ldp	x23, x24, [sp, #48]
   30758:	ldp	x25, x26, [sp, #64]
   3075c:	mov	x19, #0xfffffffffffffffe    	// #-2
   30760:	mov	x0, x19
   30764:	ldp	x19, x20, [sp, #16]
   30768:	ldp	x27, x28, [sp, #80]
   3076c:	ldp	x29, x30, [sp], #112
   30770:	ret
   30774:	mov	x21, x1
   30778:	mov	x26, #0x0                   	// #0
   3077c:	b	306cc <rpl_re_search_2@@Base+0x64>

0000000000030780 <rpl_re_set_registers@@Base>:
   30780:	cbz	x2, 307a0 <rpl_re_set_registers@@Base+0x20>
   30784:	ldrb	w5, [x0, #56]
   30788:	mov	w6, #0x1                   	// #1
   3078c:	bfi	w5, w6, #1, #2
   30790:	strb	w5, [x0, #56]
   30794:	stp	x2, x3, [x1]
   30798:	str	x4, [x1, #16]
   3079c:	ret
   307a0:	ldrb	w2, [x0, #56]
   307a4:	and	w2, w2, #0xfffffff9
   307a8:	strb	w2, [x0, #56]
   307ac:	str	xzr, [x1]
   307b0:	stp	xzr, xzr, [x1, #8]
   307b4:	ret

00000000000307b8 <vasnprintf@@Base>:
   307b8:	sub	sp, sp, #0x460
   307bc:	stp	x29, x30, [sp]
   307c0:	mov	x29, sp
   307c4:	add	x4, x29, #0x1d8
   307c8:	stp	x23, x24, [sp, #48]
   307cc:	mov	x23, x2
   307d0:	add	x2, x29, #0xe0
   307d4:	stp	x19, x20, [sp, #16]
   307d8:	mov	x20, x2
   307dc:	mov	x19, x3
   307e0:	stp	x21, x22, [sp, #32]
   307e4:	stp	x25, x26, [sp, #64]
   307e8:	stp	x27, x28, [sp, #80]
   307ec:	stp	x1, x4, [x29, #112]
   307f0:	mov	x1, x4
   307f4:	str	x2, [x29, #128]
   307f8:	str	x0, [x29, #152]
   307fc:	mov	x0, x23
   30800:	bl	af20 <printf_parse@plt>
   30804:	tbnz	w0, #31, 30d78 <vasnprintf@@Base+0x5c0>
   30808:	ldp	x4, x5, [x19]
   3080c:	mov	x1, x20
   30810:	ldp	x2, x3, [x19, #16]
   30814:	add	x0, x29, #0xb0
   30818:	stp	x4, x5, [x29, #176]
   3081c:	stp	x2, x3, [x29, #192]
   30820:	bl	aae0 <printf_fetchargs@plt>
   30824:	tbnz	w0, #31, 312b8 <vasnprintf@@Base+0xb00>
   30828:	ldp	x0, x1, [x29, #488]
   3082c:	adds	x0, x0, #0x7
   30830:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   30834:	adds	x1, x1, x0
   30838:	b.cs	30d58 <vasnprintf@@Base+0x5a0>  // b.hs, b.nlast
   3083c:	adds	x0, x1, #0x6
   30840:	cset	x20, cs  // cs = hs, nlast
   30844:	b.cs	30d58 <vasnprintf@@Base+0x5a0>  // b.hs, b.nlast
   30848:	cmp	x0, #0xf9f
   3084c:	b.ls	30b60 <vasnprintf@@Base+0x3a8>  // b.plast
   30850:	cmn	x0, #0x1
   30854:	b.eq	30d58 <vasnprintf@@Base+0x5a0>  // b.none
   30858:	bl	a5f0 <malloc@plt>
   3085c:	mov	x25, x0
   30860:	cbz	x0, 30d58 <vasnprintf@@Base+0x5a0>
   30864:	str	x0, [x29, #104]
   30868:	ldr	x0, [x29, #152]
   3086c:	mov	x28, #0x0                   	// #0
   30870:	cbz	x0, 3087c <vasnprintf@@Base+0xc4>
   30874:	ldr	x0, [x29, #112]
   30878:	ldr	x28, [x0]
   3087c:	adrp	x0, 34000 <vasnprintf@@Base+0x3848>
   30880:	ldr	x21, [x29, #480]
   30884:	add	x0, x0, #0x720
   30888:	stp	xzr, x0, [x29, #136]
   3088c:	add	x27, x29, #0xd4
   30890:	mov	x26, x27
   30894:	ldr	x22, [x21]
   30898:	mov	x27, x25
   3089c:	ldr	x24, [x29, #152]
   308a0:	cmp	x22, x23
   308a4:	b.eq	30c50 <vasnprintf@@Base+0x498>  // b.none
   308a8:	sub	x22, x22, x23
   308ac:	adds	x19, x20, x22
   308b0:	csinv	x19, x19, xzr, cc  // cc = lo, ul, last
   308b4:	cmp	x28, x19
   308b8:	b.cs	3091c <vasnprintf@@Base+0x164>  // b.hs, b.nlast
   308bc:	cmp	x28, #0x0
   308c0:	cbz	x28, 30cec <vasnprintf@@Base+0x534>
   308c4:	b.lt	30c60 <vasnprintf@@Base+0x4a8>  // b.tstop
   308c8:	lsl	x7, x28, #1
   308cc:	cmp	x7, x19
   308d0:	csel	x28, x7, x19, cs  // cs = hs, nlast
   308d4:	cmn	x28, #0x1
   308d8:	b.eq	30c60 <vasnprintf@@Base+0x4a8>  // b.none
   308dc:	ldr	x0, [x29, #152]
   308e0:	cmp	x24, x0
   308e4:	cset	w25, eq  // eq = none
   308e8:	cmp	x24, #0x0
   308ec:	ccmp	w25, #0x0, #0x0, ne  // ne = any
   308f0:	b.eq	30cf4 <vasnprintf@@Base+0x53c>  // b.none
   308f4:	mov	x0, x28
   308f8:	bl	a5f0 <malloc@plt>
   308fc:	cbz	x0, 30c60 <vasnprintf@@Base+0x4a8>
   30900:	cmp	x20, #0x0
   30904:	ccmp	w25, #0x0, #0x4, ne  // ne = any
   30908:	b.eq	312b0 <vasnprintf@@Base+0xaf8>  // b.none
   3090c:	mov	x1, x24
   30910:	mov	x2, x20
   30914:	mov	x24, x0
   30918:	bl	a2c0 <memcpy@plt>
   3091c:	mov	x2, x22
   30920:	mov	x1, x23
   30924:	add	x0, x24, x20
   30928:	bl	a2c0 <memcpy@plt>
   3092c:	ldr	x1, [x29, #136]
   30930:	ldr	x0, [x29, #472]
   30934:	cmp	x0, x1
   30938:	b.eq	3132c <vasnprintf@@Base+0xb74>  // b.none
   3093c:	ldrb	w1, [x21, #72]
   30940:	ldr	x0, [x21, #80]
   30944:	cmp	w1, #0x25
   30948:	b.eq	30bb4 <vasnprintf@@Base+0x3fc>  // b.none
   3094c:	cmn	x0, #0x1
   30950:	b.eq	30b5c <vasnprintf@@Base+0x3a4>  // b.none
   30954:	ldr	x25, [x29, #232]
   30958:	lsl	x20, x0, #5
   3095c:	cmp	w1, #0x6e
   30960:	add	x0, x25, x20
   30964:	ldr	w22, [x25, x20]
   30968:	b.eq	30d0c <vasnprintf@@Base+0x554>  // b.none
   3096c:	ldr	w0, [x21, #16]
   30970:	mov	w1, #0x25                  	// #37
   30974:	strb	w1, [x27]
   30978:	add	x20, x27, #0x1
   3097c:	tbz	w0, #0, 3098c <vasnprintf@@Base+0x1d4>
   30980:	add	x20, x27, #0x2
   30984:	mov	w1, #0x27                  	// #39
   30988:	strb	w1, [x27, #1]
   3098c:	tbz	w0, #1, 30998 <vasnprintf@@Base+0x1e0>
   30990:	mov	w1, #0x2d                  	// #45
   30994:	strb	w1, [x20], #1
   30998:	tbz	w0, #2, 309a4 <vasnprintf@@Base+0x1ec>
   3099c:	mov	w1, #0x2b                  	// #43
   309a0:	strb	w1, [x20], #1
   309a4:	tbz	w0, #3, 309b0 <vasnprintf@@Base+0x1f8>
   309a8:	mov	w1, #0x20                  	// #32
   309ac:	strb	w1, [x20], #1
   309b0:	tbz	w0, #4, 309bc <vasnprintf@@Base+0x204>
   309b4:	mov	w1, #0x23                  	// #35
   309b8:	strb	w1, [x20], #1
   309bc:	tbz	w0, #6, 309c8 <vasnprintf@@Base+0x210>
   309c0:	mov	w1, #0x49                  	// #73
   309c4:	strb	w1, [x20], #1
   309c8:	tbz	w0, #5, 309d4 <vasnprintf@@Base+0x21c>
   309cc:	mov	w0, #0x30                  	// #48
   309d0:	strb	w0, [x20], #1
   309d4:	ldp	x1, x2, [x21, #24]
   309d8:	cmp	x1, x2
   309dc:	b.eq	309f0 <vasnprintf@@Base+0x238>  // b.none
   309e0:	sub	x2, x2, x1
   309e4:	mov	x0, x20
   309e8:	add	x20, x20, x2
   309ec:	bl	a2c0 <memcpy@plt>
   309f0:	ldp	x1, x2, [x21, #48]
   309f4:	cmp	x1, x2
   309f8:	b.eq	30a0c <vasnprintf@@Base+0x254>  // b.none
   309fc:	sub	x2, x2, x1
   30a00:	mov	x0, x20
   30a04:	add	x20, x20, x2
   30a08:	bl	a2c0 <memcpy@plt>
   30a0c:	cmp	w22, #0xc
   30a10:	b.eq	31134 <vasnprintf@@Base+0x97c>  // b.none
   30a14:	b.hi	30ba4 <vasnprintf@@Base+0x3ec>  // b.pmore
   30a18:	cmp	w22, #0x8
   30a1c:	b.ls	30b78 <vasnprintf@@Base+0x3c0>  // b.plast
   30a20:	cmp	w22, #0xb
   30a24:	b.eq	30a38 <vasnprintf@@Base+0x280>  // b.none
   30a28:	mov	w0, #0x6c                  	// #108
   30a2c:	strb	w0, [x20], #1
   30a30:	mov	w0, #0x6c                  	// #108
   30a34:	strb	w0, [x20], #1
   30a38:	ldrb	w0, [x21, #72]
   30a3c:	strb	w0, [x20]
   30a40:	strb	wzr, [x20, #1]
   30a44:	ldr	x0, [x21, #40]
   30a48:	cmn	x0, #0x1
   30a4c:	b.eq	30b98 <vasnprintf@@Base+0x3e0>  // b.none
   30a50:	lsl	x0, x0, #5
   30a54:	add	x1, x25, x0
   30a58:	ldr	w0, [x25, x0]
   30a5c:	cmp	w0, #0x5
   30a60:	b.ne	30b5c <vasnprintf@@Base+0x3a4>  // b.any
   30a64:	ldr	w0, [x1, #16]
   30a68:	mov	w23, #0x1                   	// #1
   30a6c:	mov	w1, #0x2                   	// #2
   30a70:	str	w0, [x29, #216]
   30a74:	ldr	x0, [x21, #64]
   30a78:	cmn	x0, #0x1
   30a7c:	b.eq	30aa4 <vasnprintf@@Base+0x2ec>  // b.none
   30a80:	lsl	x0, x0, #5
   30a84:	add	x2, x25, x0
   30a88:	ldr	w0, [x25, x0]
   30a8c:	cmp	w0, #0x5
   30a90:	b.ne	30b5c <vasnprintf@@Base+0x3a4>  // b.any
   30a94:	add	x0, x29, #0xd8
   30a98:	ldr	w2, [x2, #16]
   30a9c:	str	w2, [x0, w23, uxtw #2]
   30aa0:	mov	w23, w1
   30aa4:	adds	x0, x19, #0x2
   30aa8:	b.cs	30c58 <vasnprintf@@Base+0x4a0>  // b.hs, b.nlast
   30aac:	cmp	x28, x0
   30ab0:	b.cs	3112c <vasnprintf@@Base+0x974>  // b.hs, b.nlast
   30ab4:	cmp	x28, #0x0
   30ab8:	cbnz	x28, 31040 <vasnprintf@@Base+0x888>
   30abc:	cmp	x0, #0xc
   30ac0:	b.hi	31050 <vasnprintf@@Base+0x898>  // b.pmore
   30ac4:	mov	x28, #0xc                   	// #12
   30ac8:	ldr	x0, [x29, #152]
   30acc:	cmp	x24, x0
   30ad0:	cset	w1, eq  // eq = none
   30ad4:	str	w1, [x29, #168]
   30ad8:	cmp	x24, #0x0
   30adc:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   30ae0:	b.eq	31078 <vasnprintf@@Base+0x8c0>  // b.none
   30ae4:	mov	x0, x28
   30ae8:	bl	a5f0 <malloc@plt>
   30aec:	ldr	w1, [x29, #168]
   30af0:	mov	x25, x0
   30af4:	cbz	x0, 30c60 <vasnprintf@@Base+0x4a8>
   30af8:	cmp	x19, #0x0
   30afc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   30b00:	b.eq	30b10 <vasnprintf@@Base+0x358>  // b.none
   30b04:	mov	x1, x24
   30b08:	mov	x2, x19
   30b0c:	bl	a2c0 <memcpy@plt>
   30b10:	sub	w0, w22, #0x1
   30b14:	strb	wzr, [x25, x19]
   30b18:	sub	x22, x28, x19
   30b1c:	str	w0, [x29, #164]
   30b20:	mov	x24, #0x7fffffff            	// #2147483647
   30b24:	bl	aeb0 <__errno_location@plt>
   30b28:	str	x0, [x29, #168]
   30b2c:	ldr	w0, [x0]
   30b30:	str	w0, [x29, #160]
   30b34:	nop
   30b38:	mov	w0, #0xffffffff            	// #-1
   30b3c:	str	w0, [x29, #212]
   30b40:	ldr	x0, [x29, #168]
   30b44:	cmp	x22, x24
   30b48:	csel	x1, x22, x24, ls  // ls = plast
   30b4c:	str	wzr, [x0]
   30b50:	ldr	w0, [x29, #164]
   30b54:	cmp	w0, #0x10
   30b58:	b.ls	30d90 <vasnprintf@@Base+0x5d8>  // b.plast
   30b5c:	bl	a900 <abort@plt>
   30b60:	add	x0, x1, #0x15
   30b64:	str	xzr, [x29, #104]
   30b68:	and	x0, x0, #0xfffffffffffffff0
   30b6c:	sub	sp, sp, x0
   30b70:	mov	x25, sp
   30b74:	b	30868 <vasnprintf@@Base+0xb0>
   30b78:	cmp	w22, #0x6
   30b7c:	b.hi	30a30 <vasnprintf@@Base+0x278>  // b.pmore
   30b80:	ldrb	w0, [x21, #72]
   30b84:	strb	w0, [x20]
   30b88:	strb	wzr, [x20, #1]
   30b8c:	ldr	x0, [x21, #40]
   30b90:	cmn	x0, #0x1
   30b94:	b.ne	30a50 <vasnprintf@@Base+0x298>  // b.any
   30b98:	mov	w1, #0x1                   	// #1
   30b9c:	mov	w23, #0x0                   	// #0
   30ba0:	b	30a74 <vasnprintf@@Base+0x2bc>
   30ba4:	sub	w0, w22, #0xe
   30ba8:	tst	w0, #0xfffffffd
   30bac:	b.ne	30a38 <vasnprintf@@Base+0x280>  // b.any
   30bb0:	b	30a30 <vasnprintf@@Base+0x278>
   30bb4:	cmn	x0, #0x1
   30bb8:	b.ne	30b5c <vasnprintf@@Base+0x3a4>  // b.any
   30bbc:	adds	x2, x19, #0x1
   30bc0:	csel	x20, x2, x0, cc  // cc = lo, ul, last
   30bc4:	cmp	x28, x20
   30bc8:	b.cs	30c28 <vasnprintf@@Base+0x470>  // b.hs, b.nlast
   30bcc:	cmp	x28, #0x0
   30bd0:	cbnz	x28, 31090 <vasnprintf@@Base+0x8d8>
   30bd4:	mov	x7, #0xc                   	// #12
   30bd8:	cmp	x7, x20
   30bdc:	csel	x28, x7, x20, cs  // cs = hs, nlast
   30be0:	cmn	x28, #0x1
   30be4:	b.eq	30c60 <vasnprintf@@Base+0x4a8>  // b.none
   30be8:	ldr	x0, [x29, #152]
   30bec:	cmp	x24, x0
   30bf0:	cset	w22, eq  // eq = none
   30bf4:	cmp	x24, #0x0
   30bf8:	ccmp	w22, #0x0, #0x0, ne  // ne = any
   30bfc:	b.eq	31298 <vasnprintf@@Base+0xae0>  // b.none
   30c00:	mov	x0, x28
   30c04:	bl	a5f0 <malloc@plt>
   30c08:	cbz	x0, 30c60 <vasnprintf@@Base+0x4a8>
   30c0c:	cmp	x19, #0x0
   30c10:	ccmp	w22, #0x0, #0x4, ne  // ne = any
   30c14:	b.eq	31324 <vasnprintf@@Base+0xb6c>  // b.none
   30c18:	mov	x1, x24
   30c1c:	mov	x2, x19
   30c20:	mov	x24, x0
   30c24:	bl	a2c0 <memcpy@plt>
   30c28:	mov	w0, #0x25                  	// #37
   30c2c:	strb	w0, [x24, x19]
   30c30:	add	x21, x21, #0x58
   30c34:	ldur	x23, [x21, #-80]
   30c38:	ldr	x0, [x29, #136]
   30c3c:	ldr	x22, [x21]
   30c40:	add	x0, x0, #0x1
   30c44:	str	x0, [x29, #136]
   30c48:	cmp	x22, x23
   30c4c:	b.ne	308a8 <vasnprintf@@Base+0xf0>  // b.any
   30c50:	mov	x19, x20
   30c54:	b	3092c <vasnprintf@@Base+0x174>
   30c58:	cmn	x28, #0x1
   30c5c:	b.eq	3112c <vasnprintf@@Base+0x974>  // b.none
   30c60:	bl	aeb0 <__errno_location@plt>
   30c64:	str	x0, [x29, #168]
   30c68:	ldr	x0, [x29, #152]
   30c6c:	cmp	x24, #0x0
   30c70:	ccmp	x24, x0, #0x4, ne  // ne = any
   30c74:	b.ne	310a4 <vasnprintf@@Base+0x8ec>  // b.any
   30c78:	ldr	x0, [x29, #104]
   30c7c:	cbz	x0, 30c84 <vasnprintf@@Base+0x4cc>
   30c80:	bl	aa50 <free@plt>
   30c84:	ldr	x1, [x29, #120]
   30c88:	ldr	x0, [x29, #480]
   30c8c:	add	x1, x1, #0x20
   30c90:	cmp	x0, x1
   30c94:	b.eq	30c9c <vasnprintf@@Base+0x4e4>  // b.none
   30c98:	bl	aa50 <free@plt>
   30c9c:	ldr	x1, [x29, #128]
   30ca0:	ldr	x0, [x29, #232]
   30ca4:	add	x1, x1, #0x10
   30ca8:	cmp	x0, x1
   30cac:	b.eq	30cb4 <vasnprintf@@Base+0x4fc>  // b.none
   30cb0:	bl	aa50 <free@plt>
   30cb4:	ldr	x1, [x29, #168]
   30cb8:	mov	w0, #0xc                   	// #12
   30cbc:	mov	x24, #0x0                   	// #0
   30cc0:	str	w0, [x1]
   30cc4:	mov	sp, x29
   30cc8:	mov	x0, x24
   30ccc:	ldp	x29, x30, [sp]
   30cd0:	ldp	x19, x20, [sp, #16]
   30cd4:	ldp	x21, x22, [sp, #32]
   30cd8:	ldp	x23, x24, [sp, #48]
   30cdc:	ldp	x25, x26, [sp, #64]
   30ce0:	ldp	x27, x28, [sp, #80]
   30ce4:	add	sp, sp, #0x460
   30ce8:	ret
   30cec:	mov	x7, #0xc                   	// #12
   30cf0:	b	308cc <vasnprintf@@Base+0x114>
   30cf4:	mov	x1, x28
   30cf8:	mov	x0, x24
   30cfc:	bl	a7e0 <realloc@plt>
   30d00:	cbz	x0, 3109c <vasnprintf@@Base+0x8e4>
   30d04:	mov	x24, x0
   30d08:	b	3091c <vasnprintf@@Base+0x164>
   30d0c:	cmp	w22, #0x14
   30d10:	b.eq	312fc <vasnprintf@@Base+0xb44>  // b.none
   30d14:	b.ls	30d38 <vasnprintf@@Base+0x580>  // b.plast
   30d18:	cmp	w22, #0x15
   30d1c:	b.eq	30d28 <vasnprintf@@Base+0x570>  // b.none
   30d20:	cmp	w22, #0x16
   30d24:	b.ne	30b5c <vasnprintf@@Base+0x3a4>  // b.any
   30d28:	ldr	x0, [x0, #16]
   30d2c:	mov	x20, x19
   30d30:	str	x19, [x0]
   30d34:	b	30c30 <vasnprintf@@Base+0x478>
   30d38:	cmp	w22, #0x12
   30d3c:	b.eq	30d80 <vasnprintf@@Base+0x5c8>  // b.none
   30d40:	cmp	w22, #0x13
   30d44:	b.ne	30b5c <vasnprintf@@Base+0x3a4>  // b.any
   30d48:	ldr	x0, [x0, #16]
   30d4c:	mov	x20, x19
   30d50:	strh	w19, [x0]
   30d54:	b	30c30 <vasnprintf@@Base+0x478>
   30d58:	bl	aeb0 <__errno_location@plt>
   30d5c:	str	x0, [x29, #168]
   30d60:	ldr	x1, [x29, #120]
   30d64:	ldr	x0, [x29, #480]
   30d68:	add	x1, x1, #0x20
   30d6c:	cmp	x0, x1
   30d70:	b.ne	30c98 <vasnprintf@@Base+0x4e0>  // b.any
   30d74:	b	30c9c <vasnprintf@@Base+0x4e4>
   30d78:	mov	x24, #0x0                   	// #0
   30d7c:	b	30cc4 <vasnprintf@@Base+0x50c>
   30d80:	ldr	x0, [x0, #16]
   30d84:	mov	x20, x19
   30d88:	strb	w19, [x0]
   30d8c:	b	30c30 <vasnprintf@@Base+0x478>
   30d90:	ldr	x2, [x29, #144]
   30d94:	ldr	x3, [x29, #232]
   30d98:	ldrh	w0, [x2, w0, uxtw #1]
   30d9c:	adr	x2, 30da8 <vasnprintf@@Base+0x5f0>
   30da0:	add	x0, x2, w0, sxth #2
   30da4:	br	x0
   30da8:	ldr	x2, [x21, #80]
   30dac:	cmp	w23, #0x1
   30db0:	add	x0, x25, x19
   30db4:	add	x2, x3, x2, lsl #5
   30db8:	ldr	x4, [x2, #16]
   30dbc:	b.eq	310fc <vasnprintf@@Base+0x944>  // b.none
   30dc0:	cmp	w23, #0x2
   30dc4:	b.eq	310dc <vasnprintf@@Base+0x924>  // b.none
   30dc8:	mov	x3, x4
   30dcc:	mov	x2, x27
   30dd0:	mov	x4, x26
   30dd4:	str	x1, [x29, #96]
   30dd8:	bl	a540 <snprintf@plt>
   30ddc:	ldr	x1, [x29, #96]
   30de0:	ldr	w2, [x29, #212]
   30de4:	tbnz	w2, #31, 30ee8 <vasnprintf@@Base+0x730>
   30de8:	cmp	x1, w2, sxtw
   30dec:	sxtw	x3, w2
   30df0:	b.ls	30e00 <vasnprintf@@Base+0x648>  // b.plast
   30df4:	add	x3, x25, x3
   30df8:	ldrb	w3, [x3, x19]
   30dfc:	cbnz	w3, 30b5c <vasnprintf@@Base+0x3a4>
   30e00:	cmp	w2, w0
   30e04:	b.ge	30e10 <vasnprintf@@Base+0x658>  // b.tcont
   30e08:	mov	w2, w0
   30e0c:	str	w0, [x29, #212]
   30e10:	add	w0, w2, #0x1
   30e14:	cmp	x0, x1
   30e18:	b.cc	30f08 <vasnprintf@@Base+0x750>  // b.lo, b.ul, b.last
   30e1c:	mov	x0, #0x7ffffffe            	// #2147483646
   30e20:	cmp	x22, x0
   30e24:	b.hi	31238 <vasnprintf@@Base+0xa80>  // b.pmore
   30e28:	add	w2, w2, #0x2
   30e2c:	adds	x2, x2, x19
   30e30:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
   30e34:	tbnz	x28, #63, 310b0 <vasnprintf@@Base+0x8f8>
   30e38:	lsl	x0, x28, #1
   30e3c:	cmp	x0, x2
   30e40:	csel	x2, x0, x2, cs  // cs = hs, nlast
   30e44:	cmp	x28, x2
   30e48:	b.cs	30b38 <vasnprintf@@Base+0x380>  // b.hs, b.nlast
   30e4c:	cmp	x0, x2
   30e50:	csel	x28, x0, x2, cs  // cs = hs, nlast
   30e54:	cmn	x28, #0x1
   30e58:	b.eq	310b8 <vasnprintf@@Base+0x900>  // b.none
   30e5c:	ldr	x0, [x29, #152]
   30e60:	cmp	x25, x0
   30e64:	cset	w22, eq  // eq = none
   30e68:	cmp	x25, #0x0
   30e6c:	ccmp	w22, #0x0, #0x0, ne  // ne = any
   30e70:	b.eq	310c0 <vasnprintf@@Base+0x908>  // b.none
   30e74:	mov	x0, x28
   30e78:	bl	a5f0 <malloc@plt>
   30e7c:	cbz	x0, 310b8 <vasnprintf@@Base+0x900>
   30e80:	cmp	x19, #0x0
   30e84:	ccmp	w22, #0x0, #0x4, ne  // ne = any
   30e88:	b.eq	31120 <vasnprintf@@Base+0x968>  // b.none
   30e8c:	mov	x1, x25
   30e90:	mov	x2, x19
   30e94:	mov	x25, x0
   30e98:	sub	x22, x28, x19
   30e9c:	bl	a2c0 <memcpy@plt>
   30ea0:	b	30b38 <vasnprintf@@Base+0x380>
   30ea4:	ldr	x2, [x21, #80]
   30ea8:	cmp	w23, #0x1
   30eac:	add	x0, x25, x19
   30eb0:	add	x2, x3, x2, lsl #5
   30eb4:	ldr	w4, [x2, #16]
   30eb8:	b.eq	30f70 <vasnprintf@@Base+0x7b8>  // b.none
   30ebc:	cmp	w23, #0x2
   30ec0:	b.eq	30fb0 <vasnprintf@@Base+0x7f8>  // b.none
   30ec4:	mov	w3, w4
   30ec8:	mov	x2, x27
   30ecc:	mov	x4, x26
   30ed0:	str	x1, [x29, #96]
   30ed4:	bl	a540 <snprintf@plt>
   30ed8:	ldr	w2, [x29, #212]
   30edc:	ldr	x1, [x29, #96]
   30ee0:	tbz	w2, #31, 30de8 <vasnprintf@@Base+0x630>
   30ee4:	nop
   30ee8:	ldrb	w2, [x20, #1]
   30eec:	cbnz	w2, 31118 <vasnprintf@@Base+0x960>
   30ef0:	tbnz	w0, #31, 311b0 <vasnprintf@@Base+0x9f8>
   30ef4:	mov	w2, w0
   30ef8:	str	w0, [x29, #212]
   30efc:	add	w0, w2, #0x1
   30f00:	cmp	x0, x1
   30f04:	b.cs	30e1c <vasnprintf@@Base+0x664>  // b.hs, b.nlast
   30f08:	ldr	x0, [x29, #168]
   30f0c:	add	x20, x19, w2, sxtw
   30f10:	ldr	w1, [x29, #160]
   30f14:	mov	x24, x25
   30f18:	str	w1, [x0]
   30f1c:	b	30c30 <vasnprintf@@Base+0x478>
   30f20:	ldr	x2, [x21, #80]
   30f24:	cmp	w23, #0x1
   30f28:	add	x0, x25, x19
   30f2c:	add	x2, x3, x2, lsl #5
   30f30:	ldr	q0, [x2, #16]
   30f34:	b.eq	3115c <vasnprintf@@Base+0x9a4>  // b.none
   30f38:	cmp	w23, #0x2
   30f3c:	b.eq	31140 <vasnprintf@@Base+0x988>  // b.none
   30f40:	mov	x3, x26
   30f44:	mov	x2, x27
   30f48:	str	x1, [x29, #96]
   30f4c:	bl	a540 <snprintf@plt>
   30f50:	ldr	x1, [x29, #96]
   30f54:	b	30de0 <vasnprintf@@Base+0x628>
   30f58:	ldr	x2, [x21, #80]
   30f5c:	cmp	w23, #0x1
   30f60:	add	x0, x25, x19
   30f64:	add	x2, x3, x2, lsl #5
   30f68:	ldrh	w4, [x2, #16]
   30f6c:	b.ne	30ebc <vasnprintf@@Base+0x704>  // b.any
   30f70:	ldr	w3, [x29, #216]
   30f74:	mov	x5, x26
   30f78:	mov	x2, x27
   30f7c:	str	x1, [x29, #96]
   30f80:	bl	a540 <snprintf@plt>
   30f84:	ldr	x1, [x29, #96]
   30f88:	b	30de0 <vasnprintf@@Base+0x628>
   30f8c:	ldr	x2, [x21, #80]
   30f90:	cmp	w23, #0x1
   30f94:	add	x0, x25, x19
   30f98:	add	x2, x3, x2, lsl #5
   30f9c:	ldrsh	w4, [x2, #16]
   30fa0:	b.eq	30f70 <vasnprintf@@Base+0x7b8>  // b.none
   30fa4:	cmp	w23, #0x2
   30fa8:	b.ne	30ec4 <vasnprintf@@Base+0x70c>  // b.any
   30fac:	nop
   30fb0:	mov	w5, w4
   30fb4:	mov	x6, x26
   30fb8:	ldp	w3, w4, [x29, #216]
   30fbc:	mov	x2, x27
   30fc0:	str	x1, [x29, #96]
   30fc4:	bl	a540 <snprintf@plt>
   30fc8:	ldr	x1, [x29, #96]
   30fcc:	b	30de0 <vasnprintf@@Base+0x628>
   30fd0:	ldr	x2, [x21, #80]
   30fd4:	cmp	w23, #0x1
   30fd8:	add	x0, x25, x19
   30fdc:	add	x2, x3, x2, lsl #5
   30fe0:	ldr	d0, [x2, #16]
   30fe4:	b.eq	31194 <vasnprintf@@Base+0x9dc>  // b.none
   30fe8:	cmp	w23, #0x2
   30fec:	b.eq	31178 <vasnprintf@@Base+0x9c0>  // b.none
   30ff0:	mov	x3, x26
   30ff4:	mov	x2, x27
   30ff8:	str	x1, [x29, #96]
   30ffc:	bl	a540 <snprintf@plt>
   31000:	ldr	x1, [x29, #96]
   31004:	b	30de0 <vasnprintf@@Base+0x628>
   31008:	ldr	x2, [x21, #80]
   3100c:	cmp	w23, #0x1
   31010:	add	x0, x25, x19
   31014:	add	x2, x3, x2, lsl #5
   31018:	ldrb	w4, [x2, #16]
   3101c:	b.ne	30ebc <vasnprintf@@Base+0x704>  // b.any
   31020:	b	30f70 <vasnprintf@@Base+0x7b8>
   31024:	ldr	x2, [x21, #80]
   31028:	cmp	w23, #0x1
   3102c:	add	x0, x25, x19
   31030:	add	x2, x3, x2, lsl #5
   31034:	ldrsb	w4, [x2, #16]
   31038:	b.ne	30ebc <vasnprintf@@Base+0x704>  // b.any
   3103c:	b	30f70 <vasnprintf@@Base+0x7b8>
   31040:	b.lt	30c60 <vasnprintf@@Base+0x4a8>  // b.tstop
   31044:	lsl	x28, x28, #1
   31048:	cmp	x28, x0
   3104c:	b.cs	30ac8 <vasnprintf@@Base+0x310>  // b.hs, b.nlast
   31050:	cmn	x0, #0x1
   31054:	b.eq	30c60 <vasnprintf@@Base+0x4a8>  // b.none
   31058:	mov	x28, x0
   3105c:	ldr	x0, [x29, #152]
   31060:	cmp	x24, x0
   31064:	cset	w1, eq  // eq = none
   31068:	str	w1, [x29, #168]
   3106c:	cmp	x24, #0x0
   31070:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   31074:	b.ne	30ae4 <vasnprintf@@Base+0x32c>  // b.any
   31078:	mov	x1, x28
   3107c:	mov	x0, x24
   31080:	bl	a7e0 <realloc@plt>
   31084:	mov	x25, x0
   31088:	cbnz	x0, 30b10 <vasnprintf@@Base+0x358>
   3108c:	b	30c60 <vasnprintf@@Base+0x4a8>
   31090:	b.lt	30c60 <vasnprintf@@Base+0x4a8>  // b.tstop
   31094:	lsl	x7, x28, #1
   31098:	b	30bd8 <vasnprintf@@Base+0x420>
   3109c:	bl	aeb0 <__errno_location@plt>
   310a0:	str	x0, [x29, #168]
   310a4:	mov	x0, x24
   310a8:	bl	aa50 <free@plt>
   310ac:	b	30c78 <vasnprintf@@Base+0x4c0>
   310b0:	cmn	x28, #0x1
   310b4:	b.eq	30b38 <vasnprintf@@Base+0x380>  // b.none
   310b8:	mov	x24, x25
   310bc:	b	30c68 <vasnprintf@@Base+0x4b0>
   310c0:	mov	x1, x28
   310c4:	mov	x0, x25
   310c8:	bl	a7e0 <realloc@plt>
   310cc:	cbz	x0, 310b8 <vasnprintf@@Base+0x900>
   310d0:	mov	x25, x0
   310d4:	sub	x22, x28, x19
   310d8:	b	30b38 <vasnprintf@@Base+0x380>
   310dc:	mov	x5, x4
   310e0:	mov	x6, x26
   310e4:	ldp	w3, w4, [x29, #216]
   310e8:	mov	x2, x27
   310ec:	str	x1, [x29, #96]
   310f0:	bl	a540 <snprintf@plt>
   310f4:	ldr	x1, [x29, #96]
   310f8:	b	30de0 <vasnprintf@@Base+0x628>
   310fc:	ldr	w3, [x29, #216]
   31100:	mov	x5, x26
   31104:	mov	x2, x27
   31108:	str	x1, [x29, #96]
   3110c:	bl	a540 <snprintf@plt>
   31110:	ldr	x1, [x29, #96]
   31114:	b	30de0 <vasnprintf@@Base+0x628>
   31118:	strb	wzr, [x20, #1]
   3111c:	b	30b38 <vasnprintf@@Base+0x380>
   31120:	mov	x25, x0
   31124:	sub	x22, x28, x19
   31128:	b	30b38 <vasnprintf@@Base+0x380>
   3112c:	mov	x25, x24
   31130:	b	30b10 <vasnprintf@@Base+0x358>
   31134:	mov	w0, #0x4c                  	// #76
   31138:	strb	w0, [x20], #1
   3113c:	b	30a38 <vasnprintf@@Base+0x280>
   31140:	ldp	w3, w4, [x29, #216]
   31144:	mov	x5, x26
   31148:	mov	x2, x27
   3114c:	str	x1, [x29, #96]
   31150:	bl	a540 <snprintf@plt>
   31154:	ldr	x1, [x29, #96]
   31158:	b	30de0 <vasnprintf@@Base+0x628>
   3115c:	ldr	w3, [x29, #216]
   31160:	mov	x4, x26
   31164:	mov	x2, x27
   31168:	str	x1, [x29, #96]
   3116c:	bl	a540 <snprintf@plt>
   31170:	ldr	x1, [x29, #96]
   31174:	b	30de0 <vasnprintf@@Base+0x628>
   31178:	ldp	w3, w4, [x29, #216]
   3117c:	mov	x5, x26
   31180:	mov	x2, x27
   31184:	str	x1, [x29, #96]
   31188:	bl	a540 <snprintf@plt>
   3118c:	ldr	x1, [x29, #96]
   31190:	b	30de0 <vasnprintf@@Base+0x628>
   31194:	ldr	w3, [x29, #216]
   31198:	mov	x4, x26
   3119c:	mov	x2, x27
   311a0:	str	x1, [x29, #96]
   311a4:	bl	a540 <snprintf@plt>
   311a8:	ldr	x1, [x29, #96]
   311ac:	b	30de0 <vasnprintf@@Base+0x628>
   311b0:	ldr	x0, [x29, #168]
   311b4:	mov	x26, x25
   311b8:	ldr	w19, [x0]
   311bc:	cbnz	w19, 311dc <vasnprintf@@Base+0xa24>
   311c0:	ldrb	w0, [x21, #72]
   311c4:	mov	w19, #0x54                  	// #84
   311c8:	mov	w1, #0x16                  	// #22
   311cc:	and	w0, w0, #0xffffffef
   311d0:	and	w0, w0, #0xff
   311d4:	cmp	w0, #0x63
   311d8:	csel	w19, w19, w1, eq  // eq = none
   311dc:	ldr	x0, [x29, #152]
   311e0:	cmp	x26, #0x0
   311e4:	ccmp	x26, x0, #0x4, ne  // ne = any
   311e8:	b.ne	3130c <vasnprintf@@Base+0xb54>  // b.any
   311ec:	ldr	x0, [x29, #104]
   311f0:	cbz	x0, 311f8 <vasnprintf@@Base+0xa40>
   311f4:	bl	aa50 <free@plt>
   311f8:	ldr	x1, [x29, #120]
   311fc:	ldr	x0, [x29, #480]
   31200:	add	x1, x1, #0x20
   31204:	cmp	x0, x1
   31208:	b.eq	31210 <vasnprintf@@Base+0xa58>  // b.none
   3120c:	bl	aa50 <free@plt>
   31210:	ldr	x1, [x29, #128]
   31214:	ldr	x0, [x29, #232]
   31218:	add	x1, x1, #0x10
   3121c:	cmp	x0, x1
   31220:	b.eq	31228 <vasnprintf@@Base+0xa70>  // b.none
   31224:	bl	aa50 <free@plt>
   31228:	ldr	x0, [x29, #168]
   3122c:	mov	x24, #0x0                   	// #0
   31230:	str	w19, [x0]
   31234:	b	30cc4 <vasnprintf@@Base+0x50c>
   31238:	ldr	x0, [x29, #152]
   3123c:	cmp	x25, #0x0
   31240:	ccmp	x25, x0, #0x4, ne  // ne = any
   31244:	b.ne	31318 <vasnprintf@@Base+0xb60>  // b.any
   31248:	ldr	x0, [x29, #104]
   3124c:	cbz	x0, 31254 <vasnprintf@@Base+0xa9c>
   31250:	bl	aa50 <free@plt>
   31254:	ldr	x1, [x29, #120]
   31258:	ldr	x0, [x29, #480]
   3125c:	add	x1, x1, #0x20
   31260:	cmp	x0, x1
   31264:	b.eq	3126c <vasnprintf@@Base+0xab4>  // b.none
   31268:	bl	aa50 <free@plt>
   3126c:	ldr	x1, [x29, #128]
   31270:	ldr	x0, [x29, #232]
   31274:	add	x1, x1, #0x10
   31278:	cmp	x0, x1
   3127c:	b.eq	31284 <vasnprintf@@Base+0xacc>  // b.none
   31280:	bl	aa50 <free@plt>
   31284:	ldr	x1, [x29, #168]
   31288:	mov	w0, #0x4b                  	// #75
   3128c:	mov	x24, #0x0                   	// #0
   31290:	str	w0, [x1]
   31294:	b	30cc4 <vasnprintf@@Base+0x50c>
   31298:	mov	x1, x28
   3129c:	mov	x0, x24
   312a0:	bl	a7e0 <realloc@plt>
   312a4:	cbz	x0, 3109c <vasnprintf@@Base+0x8e4>
   312a8:	mov	x24, x0
   312ac:	b	30c28 <vasnprintf@@Base+0x470>
   312b0:	mov	x24, x0
   312b4:	b	3091c <vasnprintf@@Base+0x164>
   312b8:	ldr	x1, [x29, #120]
   312bc:	ldr	x0, [x29, #480]
   312c0:	add	x1, x1, #0x20
   312c4:	cmp	x0, x1
   312c8:	b.eq	312d0 <vasnprintf@@Base+0xb18>  // b.none
   312cc:	bl	aa50 <free@plt>
   312d0:	ldr	x1, [x29, #128]
   312d4:	ldr	x0, [x29, #232]
   312d8:	add	x1, x1, #0x10
   312dc:	cmp	x0, x1
   312e0:	b.eq	312e8 <vasnprintf@@Base+0xb30>  // b.none
   312e4:	bl	aa50 <free@plt>
   312e8:	bl	aeb0 <__errno_location@plt>
   312ec:	mov	x24, #0x0                   	// #0
   312f0:	mov	w1, #0x16                  	// #22
   312f4:	str	w1, [x0]
   312f8:	b	30cc4 <vasnprintf@@Base+0x50c>
   312fc:	ldr	x0, [x0, #16]
   31300:	mov	x20, x19
   31304:	str	w19, [x0]
   31308:	b	30c30 <vasnprintf@@Base+0x478>
   3130c:	mov	x0, x26
   31310:	bl	aa50 <free@plt>
   31314:	b	311ec <vasnprintf@@Base+0xa34>
   31318:	mov	x0, x25
   3131c:	bl	aa50 <free@plt>
   31320:	b	31248 <vasnprintf@@Base+0xa90>
   31324:	mov	x24, x0
   31328:	b	30c28 <vasnprintf@@Base+0x470>
   3132c:	adds	x20, x19, #0x1
   31330:	b.cs	31444 <vasnprintf@@Base+0xc8c>  // b.hs, b.nlast
   31334:	cmp	x28, x20
   31338:	b.cs	31390 <vasnprintf@@Base+0xbd8>  // b.hs, b.nlast
   3133c:	cmp	x28, #0x0
   31340:	cbnz	x28, 3141c <vasnprintf@@Base+0xc64>
   31344:	cmp	x20, #0xc
   31348:	b.hi	3142c <vasnprintf@@Base+0xc74>  // b.pmore
   3134c:	mov	x28, #0xc                   	// #12
   31350:	ldr	x0, [x29, #152]
   31354:	cmp	x24, x0
   31358:	cset	w21, eq  // eq = none
   3135c:	cmp	x24, #0x0
   31360:	ccmp	w21, #0x0, #0x0, ne  // ne = any
   31364:	b.eq	31404 <vasnprintf@@Base+0xc4c>  // b.none
   31368:	mov	x0, x28
   3136c:	bl	a5f0 <malloc@plt>
   31370:	cbz	x0, 30c60 <vasnprintf@@Base+0x4a8>
   31374:	cmp	x19, #0x0
   31378:	ccmp	w21, #0x0, #0x4, ne  // ne = any
   3137c:	b.eq	3143c <vasnprintf@@Base+0xc84>  // b.none
   31380:	mov	x1, x24
   31384:	mov	x2, x19
   31388:	mov	x24, x0
   3138c:	bl	a2c0 <memcpy@plt>
   31390:	ldr	x0, [x29, #152]
   31394:	strb	wzr, [x24, x19]
   31398:	cmp	x24, x0
   3139c:	ccmp	x28, x20, #0x0, ne  // ne = any
   313a0:	b.hi	313ec <vasnprintf@@Base+0xc34>  // b.pmore
   313a4:	ldr	x0, [x29, #104]
   313a8:	cbz	x0, 313b0 <vasnprintf@@Base+0xbf8>
   313ac:	bl	aa50 <free@plt>
   313b0:	ldr	x1, [x29, #120]
   313b4:	ldr	x0, [x29, #480]
   313b8:	add	x1, x1, #0x20
   313bc:	cmp	x0, x1
   313c0:	b.eq	313c8 <vasnprintf@@Base+0xc10>  // b.none
   313c4:	bl	aa50 <free@plt>
   313c8:	ldr	x1, [x29, #128]
   313cc:	ldr	x0, [x29, #232]
   313d0:	add	x1, x1, #0x10
   313d4:	cmp	x0, x1
   313d8:	b.eq	313e0 <vasnprintf@@Base+0xc28>  // b.none
   313dc:	bl	aa50 <free@plt>
   313e0:	ldr	x0, [x29, #112]
   313e4:	str	x19, [x0]
   313e8:	b	30cc4 <vasnprintf@@Base+0x50c>
   313ec:	mov	x0, x24
   313f0:	mov	x1, x20
   313f4:	bl	a7e0 <realloc@plt>
   313f8:	cmp	x0, #0x0
   313fc:	csel	x24, x24, x0, eq  // eq = none
   31400:	b	313a4 <vasnprintf@@Base+0xbec>
   31404:	mov	x1, x28
   31408:	mov	x0, x24
   3140c:	bl	a7e0 <realloc@plt>
   31410:	cbz	x0, 3109c <vasnprintf@@Base+0x8e4>
   31414:	mov	x24, x0
   31418:	b	31390 <vasnprintf@@Base+0xbd8>
   3141c:	b.lt	30c60 <vasnprintf@@Base+0x4a8>  // b.tstop
   31420:	lsl	x28, x28, #1
   31424:	cmp	x28, x20
   31428:	b.cs	31350 <vasnprintf@@Base+0xb98>  // b.hs, b.nlast
   3142c:	cmn	x20, #0x1
   31430:	mov	x28, x20
   31434:	b.ne	31350 <vasnprintf@@Base+0xb98>  // b.any
   31438:	b	30c60 <vasnprintf@@Base+0x4a8>
   3143c:	mov	x24, x0
   31440:	b	31390 <vasnprintf@@Base+0xbd8>
   31444:	cmn	x28, #0x1
   31448:	b.eq	31390 <vasnprintf@@Base+0xbd8>  // b.none
   3144c:	b	30c60 <vasnprintf@@Base+0x4a8>
   31450:	adrp	x2, 4d000 <base_len@@Base+0x38058>
   31454:	mov	x1, #0x0                   	// #0
   31458:	ldr	x2, [x2, #1728]
   3145c:	b	a4d0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000031460 <.fini>:
   31460:	stp	x29, x30, [sp, #-16]!
   31464:	mov	x29, sp
   31468:	ldp	x29, x30, [sp], #16
   3146c:	ret
