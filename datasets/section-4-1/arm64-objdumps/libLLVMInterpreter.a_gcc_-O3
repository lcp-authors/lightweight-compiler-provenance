In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMInterpreter.a_gcc_-O3:

Execution.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
       8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
       c:	mov	x29, sp
      10:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      14:	add	x3, x3, #0x0
      18:	add	x1, x1, #0x0
      1c:	add	x0, x0, #0x0
      20:	mov	w2, #0x7d                  	// #125
      24:	bl	0 <__assert_fail>

0000000000000028 <_ZN4llvm3isaINS_11InstructionEPKNS_5ValueEEEbRKT0_.isra.0.part.0>:
      28:	stp	x29, x30, [sp, #-16]!
      2c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      30:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      34:	mov	x29, sp
      38:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      3c:	add	x3, x3, #0x0
      40:	add	x1, x1, #0x0
      44:	add	x0, x0, #0x0
      48:	mov	w2, #0x69                  	// #105
      4c:	bl	0 <__assert_fail>

0000000000000050 <_ZN4llvm3isaINS_8ConstantEPNS_5ValueEEEbRKT0_.isra.0.part.0>:
      50:	stp	x29, x30, [sp, #-16]!
      54:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      58:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      5c:	mov	x29, sp
      60:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      64:	add	x3, x3, #0x0
      68:	add	x1, x1, #0x0
      6c:	add	x0, x0, #0x0
      70:	mov	w2, #0x69                  	// #105
      74:	bl	0 <__assert_fail>

0000000000000078 <_ZN4llvm3isaINS_8FunctionEPNS_5ValueEEEbRKT0_.isra.0.part.0>:
      78:	stp	x29, x30, [sp, #-16]!
      7c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      80:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      84:	mov	x29, sp
      88:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      8c:	add	x3, x3, #0x0
      90:	add	x1, x1, #0x0
      94:	add	x0, x0, #0x0
      98:	mov	w2, #0x69                  	// #105
      9c:	bl	0 <__assert_fail>

00000000000000a0 <_ZN4llvm3isaINS_10BasicBlockEPNS_5ValueEEEbRKT0_.isra.0.part.0>:
      a0:	stp	x29, x30, [sp, #-16]!
      a4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      a8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      ac:	mov	x29, sp
      b0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      b4:	add	x3, x3, #0x0
      b8:	add	x1, x1, #0x0
      bc:	add	x0, x0, #0x0
      c0:	mov	w2, #0x69                  	// #105
      c4:	bl	0 <__assert_fail>

00000000000000c8 <_ZN4llvm13isa_impl_wrapINS_12ConstantExprEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>:
      c8:	stp	x29, x30, [sp, #-16]!
      cc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      d0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      d4:	mov	x29, sp
      d8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      dc:	add	x3, x3, #0x0
      e0:	add	x1, x1, #0x0
      e4:	add	x0, x0, #0x0
      e8:	mov	w2, #0x69                  	// #105
      ec:	bl	0 <__assert_fail>

00000000000000f0 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>:
      f0:	stp	x29, x30, [sp, #-16]!
      f4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      f8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
      fc:	mov	x29, sp
     100:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     104:	add	x3, x3, #0x0
     108:	add	x1, x1, #0x0
     10c:	add	x0, x0, #0x0
     110:	mov	w2, #0x69                  	// #105
     114:	bl	0 <__assert_fail>

0000000000000118 <_ZN4llvm3isaINS_10InvokeInstEPNS_11InstructionEEEbRKT0_.isra.0.part.0>:
     118:	stp	x29, x30, [sp, #-16]!
     11c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     120:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     124:	mov	x29, sp
     128:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     12c:	add	x3, x3, #0x0
     130:	add	x1, x1, #0x0
     134:	add	x0, x0, #0x0
     138:	mov	w2, #0x69                  	// #105
     13c:	bl	0 <__assert_fail>

0000000000000140 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>:
     140:	stp	x29, x30, [sp, #-32]!
     144:	mov	x29, sp
     148:	stp	x19, x20, [sp, #16]
     14c:	mov	x20, x0
     150:	bl	0 <_ZN4llvm4dbgsEv>
     154:	ldp	x1, x2, [x0, #16]
     158:	sub	x1, x1, x2
     15c:	cmp	x1, #0x24
     160:	b.ls	1dc <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x9c>  // b.plast
     164:	mov	x19, x0
     168:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     16c:	add	x0, x0, #0x0
     170:	ldp	x4, x5, [x0, #16]
     174:	stp	x4, x5, [x2, #16]
     178:	ldp	x4, x5, [x0]
     17c:	stp	x4, x5, [x2]
     180:	ldur	x0, [x0, #29]
     184:	stur	x0, [x2, #29]
     188:	ldr	x0, [x19, #24]
     18c:	add	x0, x0, #0x25
     190:	str	x0, [x19, #24]
     194:	mov	x0, x20
     198:	mov	x1, x19
     19c:	mov	w3, #0x0                   	// #0
     1a0:	mov	w2, #0x0                   	// #0
     1a4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     1a8:	ldp	x1, x0, [x19, #16]
     1ac:	cmp	x1, x0
     1b0:	b.eq	1f4 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0xb4>  // b.none
     1b4:	mov	w1, #0xa                   	// #10
     1b8:	strb	w1, [x0]
     1bc:	ldr	x0, [x19, #24]
     1c0:	add	x0, x0, #0x1
     1c4:	str	x0, [x19, #24]
     1c8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     1cc:	mov	w2, #0x89                  	// #137
     1d0:	add	x1, x1, #0x0
     1d4:	mov	x0, #0x0                   	// #0
     1d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     1dc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     1e0:	mov	x2, #0x25                  	// #37
     1e4:	add	x1, x1, #0x0
     1e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     1ec:	mov	x19, x0
     1f0:	b	194 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x54>
     1f4:	mov	x0, x19
     1f8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     1fc:	mov	x2, #0x1                   	// #1
     200:	add	x1, x1, #0x0
     204:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     208:	b	1c8 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x88>
     20c:	nop

0000000000000210 <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>:
     210:	stp	x29, x30, [sp, #-32]!
     214:	mov	x29, sp
     218:	stp	x19, x20, [sp, #16]
     21c:	mov	x20, x0
     220:	bl	0 <_ZN4llvm4dbgsEv>
     224:	ldp	x1, x2, [x0, #16]
     228:	sub	x1, x1, x2
     22c:	cmp	x1, #0x24
     230:	b.ls	2ac <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x9c>  // b.plast
     234:	mov	x19, x0
     238:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     23c:	add	x0, x0, #0x0
     240:	ldp	x4, x5, [x0, #16]
     244:	stp	x4, x5, [x2, #16]
     248:	ldp	x4, x5, [x0]
     24c:	stp	x4, x5, [x2]
     250:	ldur	x0, [x0, #29]
     254:	stur	x0, [x2, #29]
     258:	ldr	x0, [x19, #24]
     25c:	add	x0, x0, #0x25
     260:	str	x0, [x19, #24]
     264:	mov	x0, x20
     268:	mov	x1, x19
     26c:	mov	w3, #0x0                   	// #0
     270:	mov	w2, #0x0                   	// #0
     274:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     278:	ldp	x1, x0, [x19, #16]
     27c:	cmp	x1, x0
     280:	b.eq	2c4 <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0xb4>  // b.none
     284:	mov	w1, #0xa                   	// #10
     288:	strb	w1, [x0]
     28c:	ldr	x0, [x19, #24]
     290:	add	x0, x0, #0x1
     294:	str	x0, [x19, #24]
     298:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     29c:	mov	w2, #0x94                  	// #148
     2a0:	add	x1, x1, #0x0
     2a4:	mov	x0, #0x0                   	// #0
     2a8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     2ac:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     2b0:	mov	x2, #0x25                  	// #37
     2b4:	add	x1, x1, #0x0
     2b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2bc:	mov	x19, x0
     2c0:	b	264 <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x54>
     2c4:	mov	x0, x19
     2c8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     2cc:	mov	x2, #0x1                   	// #1
     2d0:	add	x1, x1, #0x0
     2d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2d8:	b	298 <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x88>
     2dc:	nop

00000000000002e0 <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>:
     2e0:	stp	x29, x30, [sp, #-32]!
     2e4:	mov	x29, sp
     2e8:	stp	x19, x20, [sp, #16]
     2ec:	mov	x20, x0
     2f0:	bl	0 <_ZN4llvm4dbgsEv>
     2f4:	ldp	x1, x2, [x0, #16]
     2f8:	sub	x1, x1, x2
     2fc:	cmp	x1, #0x24
     300:	b.ls	37c <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x9c>  // b.plast
     304:	mov	x19, x0
     308:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     30c:	add	x0, x0, #0x0
     310:	ldp	x4, x5, [x0, #16]
     314:	stp	x4, x5, [x2, #16]
     318:	ldp	x4, x5, [x0]
     31c:	stp	x4, x5, [x2]
     320:	ldur	x0, [x0, #29]
     324:	stur	x0, [x2, #29]
     328:	ldr	x0, [x19, #24]
     32c:	add	x0, x0, #0x25
     330:	str	x0, [x19, #24]
     334:	mov	x0, x20
     338:	mov	x1, x19
     33c:	mov	w3, #0x0                   	// #0
     340:	mov	w2, #0x0                   	// #0
     344:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     348:	ldp	x1, x0, [x19, #16]
     34c:	cmp	x1, x0
     350:	b.eq	394 <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0xb4>  // b.none
     354:	mov	w1, #0xa                   	// #10
     358:	strb	w1, [x0]
     35c:	ldr	x0, [x19, #24]
     360:	add	x0, x0, #0x1
     364:	str	x0, [x19, #24]
     368:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     36c:	mov	w2, #0x7e                  	// #126
     370:	add	x1, x1, #0x0
     374:	mov	x0, #0x0                   	// #0
     378:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     37c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     380:	mov	x2, #0x25                  	// #37
     384:	add	x1, x1, #0x0
     388:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     38c:	mov	x19, x0
     390:	b	334 <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x54>
     394:	mov	x0, x19
     398:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     39c:	mov	x2, #0x1                   	// #1
     3a0:	add	x1, x1, #0x0
     3a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     3a8:	b	368 <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x88>
     3ac:	nop

00000000000003b0 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>:
     3b0:	stp	x29, x30, [sp, #-32]!
     3b4:	mov	x29, sp
     3b8:	stp	x19, x20, [sp, #16]
     3bc:	mov	x20, x0
     3c0:	bl	0 <_ZN4llvm4dbgsEv>
     3c4:	ldp	x1, x2, [x0, #16]
     3c8:	sub	x1, x1, x2
     3cc:	cmp	x1, #0x23
     3d0:	b.ls	44c <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x9c>  // b.plast
     3d4:	mov	x19, x0
     3d8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     3dc:	add	x0, x0, #0x0
     3e0:	ldp	x4, x5, [x0]
     3e4:	stp	x4, x5, [x2]
     3e8:	ldr	w1, [x0, #32]
     3ec:	ldp	x4, x5, [x0, #16]
     3f0:	stp	x4, x5, [x2, #16]
     3f4:	str	w1, [x2, #32]
     3f8:	ldr	x0, [x19, #24]
     3fc:	add	x0, x0, #0x24
     400:	str	x0, [x19, #24]
     404:	mov	x0, x20
     408:	mov	x1, x19
     40c:	mov	w3, #0x0                   	// #0
     410:	mov	w2, #0x0                   	// #0
     414:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     418:	ldp	x1, x0, [x19, #16]
     41c:	cmp	x1, x0
     420:	b.eq	464 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0xb4>  // b.none
     424:	mov	w1, #0xa                   	// #10
     428:	strb	w1, [x0]
     42c:	ldr	x0, [x19, #24]
     430:	add	x0, x0, #0x1
     434:	str	x0, [x19, #24]
     438:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     43c:	mov	w2, #0xa3                  	// #163
     440:	add	x1, x1, #0x0
     444:	mov	x0, #0x0                   	// #0
     448:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     44c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     450:	mov	x2, #0x24                  	// #36
     454:	add	x1, x1, #0x0
     458:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     45c:	mov	x19, x0
     460:	b	404 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x54>
     464:	mov	x0, x19
     468:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     46c:	mov	x2, #0x1                   	// #1
     470:	add	x1, x1, #0x0
     474:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     478:	b	438 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x88>
     47c:	nop

0000000000000480 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>:
     480:	stp	x29, x30, [sp, #-32]!
     484:	mov	x29, sp
     488:	stp	x19, x20, [sp, #16]
     48c:	mov	x20, x0
     490:	bl	0 <_ZN4llvm4dbgsEv>
     494:	ldp	x1, x2, [x0, #16]
     498:	sub	x1, x1, x2
     49c:	cmp	x1, #0x24
     4a0:	b.ls	51c <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x9c>  // b.plast
     4a4:	mov	x19, x0
     4a8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     4ac:	add	x0, x0, #0x0
     4b0:	ldp	x4, x5, [x0, #16]
     4b4:	stp	x4, x5, [x2, #16]
     4b8:	ldp	x4, x5, [x0]
     4bc:	stp	x4, x5, [x2]
     4c0:	ldur	x0, [x0, #29]
     4c4:	stur	x0, [x2, #29]
     4c8:	ldr	x0, [x19, #24]
     4cc:	add	x0, x0, #0x25
     4d0:	str	x0, [x19, #24]
     4d4:	mov	x0, x20
     4d8:	mov	x1, x19
     4dc:	mov	w3, #0x0                   	// #0
     4e0:	mov	w2, #0x0                   	// #0
     4e4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     4e8:	ldp	x1, x0, [x19, #16]
     4ec:	cmp	x1, x0
     4f0:	b.eq	534 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0xb4>  // b.none
     4f4:	mov	w1, #0xa                   	// #10
     4f8:	strb	w1, [x0]
     4fc:	ldr	x0, [x19, #24]
     500:	add	x0, x0, #0x1
     504:	str	x0, [x19, #24]
     508:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     50c:	mov	w2, #0x73                  	// #115
     510:	add	x1, x1, #0x0
     514:	mov	x0, #0x0                   	// #0
     518:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     51c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     520:	mov	x2, #0x25                  	// #37
     524:	add	x1, x1, #0x0
     528:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     52c:	mov	x19, x0
     530:	b	4d4 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x54>
     534:	mov	x0, x19
     538:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     53c:	mov	x2, #0x1                   	// #1
     540:	add	x1, x1, #0x0
     544:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     548:	b	508 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0+0x88>
     54c:	nop

0000000000000550 <_ZN4llvm11Interpreter16visitInstructionERNS_11InstructionE.isra.0>:
     550:	stp	x29, x30, [sp, #-32]!
     554:	mov	x29, sp
     558:	stp	x19, x20, [sp, #16]
     55c:	mov	x20, x0
     560:	bl	0 <_ZN4llvm4errsEv>
     564:	mov	w2, #0x0                   	// #0
     568:	mov	x19, x0
     56c:	mov	x1, x19
     570:	mov	x0, x20
     574:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
     578:	mov	x0, x19
     57c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     580:	add	x1, x1, #0x0
     584:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     588:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     58c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     590:	add	x1, x1, #0x0
     594:	add	x0, x0, #0x0
     598:	mov	w2, #0xac                  	// #172
     59c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000005a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>:
     5a0:	stp	x29, x30, [sp, #-64]!
     5a4:	mov	x29, sp
     5a8:	ldr	q0, [x1]
     5ac:	stp	x21, x22, [sp, #32]
     5b0:	ldr	x22, [x0]
     5b4:	str	x23, [sp, #48]
     5b8:	ldr	x23, [x0, #8]
     5bc:	str	q0, [x0]
     5c0:	ldr	x2, [x1, #16]
     5c4:	str	x2, [x0, #16]
     5c8:	stp	xzr, xzr, [x1]
     5cc:	cmp	x22, x23
     5d0:	str	xzr, [x1, #16]
     5d4:	b.eq	63c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0x9c>  // b.none
     5d8:	stp	x19, x20, [sp, #16]
     5dc:	mov	x19, x22
     5e0:	ldp	x21, x20, [x19, #24]
     5e4:	cmp	x21, x20
     5e8:	b.eq	608 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0x68>  // b.none
     5ec:	nop
     5f0:	mov	x0, x21
     5f4:	add	x21, x21, #0x30
     5f8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     5fc:	cmp	x20, x21
     600:	b.ne	5f0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0x50>  // b.any
     604:	ldr	x20, [x19, #24]
     608:	cbz	x20, 614 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0x74>
     60c:	mov	x0, x20
     610:	bl	0 <_ZdlPv>
     614:	ldr	w0, [x19, #16]
     618:	cmp	w0, #0x40
     61c:	b.ls	62c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0x8c>  // b.plast
     620:	ldr	x0, [x19, #8]
     624:	cbz	x0, 62c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0x8c>
     628:	bl	0 <_ZdaPv>
     62c:	add	x19, x19, #0x30
     630:	cmp	x23, x19
     634:	b.ne	5e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0x40>  // b.any
     638:	ldp	x19, x20, [sp, #16]
     63c:	cbz	x22, 654 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0+0xb4>
     640:	mov	x0, x22
     644:	ldp	x21, x22, [sp, #32]
     648:	ldr	x23, [sp, #48]
     64c:	ldp	x29, x30, [sp], #64
     650:	b	0 <_ZdlPv>
     654:	ldp	x21, x22, [sp, #32]
     658:	ldr	x23, [sp, #48]
     65c:	ldp	x29, x30, [sp], #64
     660:	ret
     664:	nop

0000000000000668 <_ZN4llvm11Interpreter20visitUnreachableInstERNS_15UnreachableInstE>:
     668:	stp	x29, x30, [sp, #-16]!
     66c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     670:	mov	w1, #0x1                   	// #1
     674:	mov	x29, sp
     678:	add	x0, x0, #0x0
     67c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

0000000000000680 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE>:
     680:	stp	x29, x30, [sp, #-112]!
     684:	mov	x29, sp
     688:	stp	x21, x22, [sp, #32]
     68c:	stp	x25, x26, [sp, #64]
     690:	ldr	x25, [x0, #696]
     694:	stp	x19, x20, [sp, #16]
     698:	ldr	x22, [x0, #704]
     69c:	stp	x23, x24, [sp, #48]
     6a0:	mov	x23, x0
     6a4:	stp	x27, x28, [sp, #80]
     6a8:	mov	x24, x1
     6ac:	cmp	x25, x22
     6b0:	b.eq	7b8 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x138>  // b.none
     6b4:	mov	x19, x25
     6b8:	ldp	x20, x21, [x19, #104]
     6bc:	cmp	x20, x21
     6c0:	b.eq	6dc <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x5c>  // b.none
     6c4:	nop
     6c8:	ldr	x0, [x20], #8
     6cc:	bl	0 <free>
     6d0:	cmp	x21, x20
     6d4:	b.ne	6c8 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x48>  // b.any
     6d8:	ldr	x21, [x19, #104]
     6dc:	cbz	x21, 6e8 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x68>
     6e0:	mov	x0, x21
     6e4:	bl	0 <_ZdlPv>
     6e8:	ldp	x20, x21, [x19, #80]
     6ec:	cmp	x20, x21
     6f0:	b.eq	728 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0xa8>  // b.none
     6f4:	nop
     6f8:	add	x0, x20, #0x18
     6fc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     700:	ldr	w0, [x20, #16]
     704:	cmp	w0, #0x40
     708:	b.ls	718 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x98>  // b.plast
     70c:	ldr	x0, [x20, #8]
     710:	cbz	x0, 718 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x98>
     714:	bl	0 <_ZdaPv>
     718:	add	x20, x20, #0x30
     71c:	cmp	x21, x20
     720:	b.ne	6f8 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x78>  // b.any
     724:	ldr	x21, [x19, #80]
     728:	cbz	x21, 734 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0xb4>
     72c:	mov	x0, x21
     730:	bl	0 <_ZdlPv>
     734:	ldr	x21, [x19, #48]
     738:	add	x28, x19, #0x20
     73c:	cbz	x21, 7a8 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x128>
     740:	ldr	x1, [x21, #24]
     744:	mov	x0, x28
     748:	mov	x20, x21
     74c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     750:	ldp	x27, x26, [x21, #64]
     754:	ldr	x21, [x21, #16]
     758:	cmp	x27, x26
     75c:	b.eq	778 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0xf8>  // b.none
     760:	mov	x0, x27
     764:	add	x27, x27, #0x30
     768:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     76c:	cmp	x26, x27
     770:	b.ne	760 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0xe0>  // b.any
     774:	ldr	x26, [x20, #64]
     778:	cbz	x26, 784 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x104>
     77c:	mov	x0, x26
     780:	bl	0 <_ZdlPv>
     784:	ldr	w0, [x20, #56]
     788:	cmp	w0, #0x40
     78c:	b.ls	79c <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x11c>  // b.plast
     790:	ldr	x0, [x20, #48]
     794:	cbz	x0, 79c <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x11c>
     798:	bl	0 <_ZdaPv>
     79c:	mov	x0, x20
     7a0:	bl	0 <_ZdlPv>
     7a4:	cbnz	x21, 740 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0xc0>
     7a8:	add	x19, x19, #0x80
     7ac:	cmp	x22, x19
     7b0:	b.ne	6b8 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x38>  // b.any
     7b4:	str	x25, [x23, #704]
     7b8:	mov	x0, x23
     7bc:	add	x20, sp, #0x60
     7c0:	bl	0 <_ZN4llvm11Interpreter17runAtExitHandlersEv>
     7c4:	add	x0, x24, #0x8
     7c8:	mov	x8, x20
     7cc:	mov	w1, #0x20                  	// #32
     7d0:	bl	0 <_ZNK4llvm5APInt11zextOrTruncEj>
     7d4:	ldr	w19, [sp, #104]
     7d8:	cmp	w19, #0x40
     7dc:	b.ls	800 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x180>  // b.plast
     7e0:	mov	x0, x20
     7e4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     7e8:	sub	w19, w19, w0
     7ec:	cmp	w19, #0x40
     7f0:	b.hi	808 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x188>  // b.pmore
     7f4:	ldr	x0, [sp, #96]
     7f8:	ldr	x0, [x0]
     7fc:	bl	0 <exit>
     800:	ldr	x0, [sp, #96]
     804:	bl	0 <exit>
     808:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     80c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     810:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     814:	add	x3, x3, #0x0
     818:	add	x1, x1, #0x0
     81c:	add	x0, x0, #0x0
     820:	mov	w2, #0x657                 	// #1623
     824:	bl	0 <__assert_fail>

0000000000000828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>:
     828:	stp	x29, x30, [sp, #-64]!
     82c:	mov	x29, sp
     830:	ldr	x3, [x2, #48]
     834:	stp	x19, x20, [sp, #16]
     838:	mov	x20, x1
     83c:	str	x0, [sp, #40]
     840:	add	x1, x2, #0x28
     844:	mov	x19, x1
     848:	cbz	x3, 8c0 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x98>
     84c:	nop
     850:	ldr	x4, [x3, #32]
     854:	cmp	x4, x0
     858:	b.cc	8ec <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0xc4>  // b.lo, b.ul, b.last
     85c:	mov	x19, x3
     860:	ldr	x3, [x3, #16]
     864:	cbnz	x3, 850 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x28>
     868:	cmp	x1, x19
     86c:	b.eq	8c0 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x98>  // b.none
     870:	ldr	x1, [x19, #32]
     874:	cmp	x1, x0
     878:	b.hi	8c0 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x98>  // b.pmore
     87c:	mov	x1, x20
     880:	ldr	w2, [x19, #56]
     884:	add	x0, x19, #0x30
     888:	cmp	w2, #0x40
     88c:	ldr	x2, [x1], #8
     890:	str	x2, [x19, #40]
     894:	b.hi	8a4 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x7c>  // b.pmore
     898:	ldr	w2, [x20, #16]
     89c:	cmp	w2, #0x40
     8a0:	b.ls	8f8 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0xd0>  // b.plast
     8a4:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
     8a8:	add	x1, x20, #0x18
     8ac:	add	x0, x19, #0x40
     8b0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     8b4:	ldp	x19, x20, [sp, #16]
     8b8:	ldp	x29, x30, [sp], #64
     8bc:	ret
     8c0:	add	x5, sp, #0x28
     8c4:	mov	x1, x19
     8c8:	add	x0, x2, #0x20
     8cc:	add	x4, sp, #0x30
     8d0:	add	x3, sp, #0x38
     8d4:	adrp	x2, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     8d8:	add	x2, x2, #0x0
     8dc:	str	x5, [sp, #56]
     8e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     8e4:	mov	x19, x0
     8e8:	b	87c <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x54>
     8ec:	ldr	x3, [x3, #24]
     8f0:	cbnz	x3, 850 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x28>
     8f4:	b	868 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x40>
     8f8:	ldr	x3, [x20, #8]
     8fc:	neg	w4, w2
     900:	mov	x1, #0xffffffffffffffff    	// #-1
     904:	str	w2, [x0, #8]
     908:	lsr	x1, x1, x4
     90c:	and	x1, x1, x3
     910:	str	x1, [x0]
     914:	add	x1, x20, #0x18
     918:	add	x0, x19, #0x40
     91c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     920:	ldp	x19, x20, [sp, #16]
     924:	ldp	x29, x30, [sp], #64
     928:	ret
     92c:	nop

0000000000000930 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>:
     930:	stp	x29, x30, [sp, #-96]!
     934:	mov	x3, x8
     938:	mov	x29, sp
     93c:	stp	x19, x20, [sp, #16]
     940:	mov	x19, x2
     944:	mov	x2, x8
     948:	stp	x23, x24, [sp, #48]
     94c:	mov	x24, x0
     950:	mov	w20, #0x1                   	// #1
     954:	stp	x25, x26, [sp, #64]
     958:	mov	x25, x8
     95c:	mov	x26, x1
     960:	stp	xzr, xzr, [x3, #24]!
     964:	str	xzr, [x3, #16]
     968:	str	xzr, [x2], #8
     96c:	ldrb	w0, [x19, #8]
     970:	str	xzr, [x8, #8]
     974:	str	w20, [x2, #8]
     978:	cmp	w0, #0xf
     97c:	b.eq	9e4 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
     980:	cmp	w0, #0x10
     984:	b.eq	a58 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x128>  // b.none
     988:	cmp	w0, #0xb
     98c:	b.eq	a10 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
     990:	stp	x21, x22, [sp, #32]
     994:	str	x27, [sp, #80]
     998:	bl	0 <_ZN4llvm4dbgsEv>
     99c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     9a0:	add	x1, x1, #0x0
     9a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     9a8:	mov	x20, x0
     9ac:	mov	w2, #0x0                   	// #0
     9b0:	mov	w3, #0x0                   	// #0
     9b4:	mov	x0, x19
     9b8:	mov	x1, x20
     9bc:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     9c0:	mov	x0, x20
     9c4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     9c8:	add	x1, x1, #0x0
     9cc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     9d0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     9d4:	mov	w2, #0xc8                  	// #200
     9d8:	add	x1, x1, #0x0
     9dc:	mov	x0, #0x0                   	// #0
     9e0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     9e4:	ldr	x0, [x26]
     9e8:	ldr	x1, [x24]
     9ec:	cmp	x1, x0
     9f0:	cset	x0, eq  // eq = none
     9f4:	str	x0, [x8, #8]
     9f8:	mov	x0, x25
     9fc:	ldp	x19, x20, [sp, #16]
     a00:	ldp	x23, x24, [sp, #48]
     a04:	ldp	x25, x26, [sp, #64]
     a08:	ldp	x29, x30, [sp], #96
     a0c:	ret
     a10:	ldr	w2, [x24, #16]
     a14:	add	x0, x24, #0x8
     a18:	ldr	w3, [x1, #16]
     a1c:	add	x1, x1, #0x8
     a20:	cmp	w2, w3
     a24:	b.ne	b84 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x254>  // b.any
     a28:	cmp	w2, #0x40
     a2c:	b.ls	b68 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x238>  // b.plast
     a30:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
     a34:	and	w0, w0, #0xff
     a38:	and	x0, x0, #0xff
     a3c:	str	x0, [x25, #8]
     a40:	mov	x0, x25
     a44:	ldp	x19, x20, [sp, #16]
     a48:	ldp	x23, x24, [sp, #48]
     a4c:	ldp	x25, x26, [sp, #64]
     a50:	ldp	x29, x30, [sp], #96
     a54:	ret
     a58:	ldp	x1, x0, [x24, #24]
     a5c:	stp	x21, x22, [sp, #32]
     a60:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     a64:	ldp	x4, x2, [x26, #24]
     a68:	movk	x21, #0xaaab
     a6c:	sub	x0, x0, x1
     a70:	asr	x1, x0, #4
     a74:	sub	x2, x2, x4
     a78:	cmp	x2, x0
     a7c:	mul	x1, x1, x21
     a80:	b.ne	bac <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x27c>  // b.any
     a84:	mov	x0, x3
     a88:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     a8c:	ldp	x4, x0, [x24, #24]
     a90:	cmp	x0, x4
     a94:	b.eq	b7c <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x24c>  // b.none
     a98:	mov	w23, #0x0                   	// #0
     a9c:	mov	x2, #0x0                   	// #0
     aa0:	str	x27, [sp, #80]
     aa4:	b	af8 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x1c8>
     aa8:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
     aac:	and	w22, w0, #0xff
     ab0:	ldr	w0, [x19, #16]
     ab4:	and	x22, x22, #0xff
     ab8:	add	x27, x19, #0x8
     abc:	cmp	w0, #0x40
     ac0:	b.ls	ad0 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x1a0>  // b.plast
     ac4:	ldr	x0, [x19, #8]
     ac8:	cbz	x0, ad0 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x1a0>
     acc:	bl	0 <_ZdaPv>
     ad0:	str	x22, [x19, #8]
     ad4:	add	w2, w23, #0x1
     ad8:	mov	x23, x2
     adc:	ldp	x4, x3, [x24, #24]
     ae0:	str	w20, [x27, #8]
     ae4:	sub	x3, x3, x4
     ae8:	asr	x3, x3, #4
     aec:	mul	x3, x3, x21
     af0:	cmp	x3, w2, uxtw
     af4:	b.ls	b48 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x218>  // b.plast
     af8:	add	x2, x2, x2, lsl #1
     afc:	ldr	x3, [x26, #24]
     b00:	lsl	x2, x2, #4
     b04:	add	x4, x4, x2
     b08:	add	x3, x3, x2
     b0c:	add	x0, x4, #0x8
     b10:	ldr	x19, [x25, #24]
     b14:	add	x1, x3, #0x8
     b18:	ldr	w5, [x0, #8]
     b1c:	ldr	w6, [x1, #8]
     b20:	add	x19, x19, x2
     b24:	cmp	w5, w6
     b28:	b.ne	b8c <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x25c>  // b.any
     b2c:	cmp	w5, #0x40
     b30:	b.hi	aa8 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x178>  // b.pmore
     b34:	ldr	x0, [x3, #8]
     b38:	ldr	x1, [x4, #8]
     b3c:	cmp	x1, x0
     b40:	cset	w22, eq  // eq = none
     b44:	b	ab0 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x180>
     b48:	mov	x0, x25
     b4c:	ldp	x19, x20, [sp, #16]
     b50:	ldp	x21, x22, [sp, #32]
     b54:	ldp	x23, x24, [sp, #48]
     b58:	ldp	x25, x26, [sp, #64]
     b5c:	ldr	x27, [sp, #80]
     b60:	ldp	x29, x30, [sp], #96
     b64:	ret
     b68:	ldr	x0, [x26, #8]
     b6c:	ldr	x1, [x24, #8]
     b70:	cmp	x1, x0
     b74:	cset	w0, eq  // eq = none
     b78:	b	a38 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x108>
     b7c:	ldp	x21, x22, [sp, #32]
     b80:	b	9f8 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
     b84:	stp	x21, x22, [sp, #32]
     b88:	str	x27, [sp, #80]
     b8c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     b90:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     b94:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     b98:	add	x3, x3, #0x0
     b9c:	add	x1, x1, #0x0
     ba0:	add	x0, x0, #0x0
     ba4:	mov	w2, #0x47f                 	// #1151
     ba8:	bl	0 <__assert_fail>
     bac:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     bb0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     bb4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     bb8:	add	x3, x3, #0x0
     bbc:	add	x1, x1, #0x0
     bc0:	add	x0, x0, #0x0
     bc4:	mov	w2, #0xc4                  	// #196
     bc8:	str	x27, [sp, #80]
     bcc:	bl	0 <__assert_fail>

0000000000000bd0 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE>:
     bd0:	stp	x29, x30, [sp, #-96]!
     bd4:	mov	x3, x8
     bd8:	mov	x29, sp
     bdc:	stp	x19, x20, [sp, #16]
     be0:	mov	x19, x2
     be4:	mov	x2, x8
     be8:	stp	x23, x24, [sp, #48]
     bec:	mov	x24, x0
     bf0:	mov	w20, #0x1                   	// #1
     bf4:	stp	x25, x26, [sp, #64]
     bf8:	mov	x25, x8
     bfc:	mov	x26, x1
     c00:	stp	xzr, xzr, [x3, #24]!
     c04:	str	xzr, [x3, #16]
     c08:	str	xzr, [x2], #8
     c0c:	ldrb	w0, [x19, #8]
     c10:	str	xzr, [x8, #8]
     c14:	str	w20, [x2, #8]
     c18:	cmp	w0, #0xf
     c1c:	b.eq	c84 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
     c20:	cmp	w0, #0x10
     c24:	b.eq	cfc <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x12c>  // b.none
     c28:	cmp	w0, #0xb
     c2c:	b.eq	cb0 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
     c30:	stp	x21, x22, [sp, #32]
     c34:	str	x27, [sp, #80]
     c38:	bl	0 <_ZN4llvm4dbgsEv>
     c3c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     c40:	add	x1, x1, #0x0
     c44:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     c48:	mov	x20, x0
     c4c:	mov	w2, #0x0                   	// #0
     c50:	mov	w3, #0x0                   	// #0
     c54:	mov	x0, x19
     c58:	mov	x1, x20
     c5c:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     c60:	mov	x0, x20
     c64:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     c68:	add	x1, x1, #0x0
     c6c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     c70:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     c74:	mov	w2, #0xd6                  	// #214
     c78:	add	x1, x1, #0x0
     c7c:	mov	x0, #0x0                   	// #0
     c80:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     c84:	ldr	x0, [x26]
     c88:	ldr	x1, [x24]
     c8c:	cmp	x1, x0
     c90:	cset	x0, ne  // ne = any
     c94:	str	x0, [x8, #8]
     c98:	mov	x0, x25
     c9c:	ldp	x19, x20, [sp, #16]
     ca0:	ldp	x23, x24, [sp, #48]
     ca4:	ldp	x25, x26, [sp, #64]
     ca8:	ldp	x29, x30, [sp], #96
     cac:	ret
     cb0:	ldr	w2, [x24, #16]
     cb4:	add	x0, x24, #0x8
     cb8:	ldr	w3, [x1, #16]
     cbc:	add	x1, x1, #0x8
     cc0:	cmp	w2, w3
     cc4:	b.ne	e2c <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x25c>  // b.any
     cc8:	cmp	w2, #0x40
     ccc:	b.ls	e10 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x240>  // b.plast
     cd0:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
     cd4:	and	w0, w0, #0xff
     cd8:	eor	w0, w0, #0x1
     cdc:	and	x0, x0, #0xff
     ce0:	str	x0, [x25, #8]
     ce4:	mov	x0, x25
     ce8:	ldp	x19, x20, [sp, #16]
     cec:	ldp	x23, x24, [sp, #48]
     cf0:	ldp	x25, x26, [sp, #64]
     cf4:	ldp	x29, x30, [sp], #96
     cf8:	ret
     cfc:	ldp	x1, x0, [x24, #24]
     d00:	stp	x21, x22, [sp, #32]
     d04:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     d08:	ldp	x4, x2, [x26, #24]
     d0c:	movk	x21, #0xaaab
     d10:	sub	x0, x0, x1
     d14:	asr	x1, x0, #4
     d18:	sub	x2, x2, x4
     d1c:	cmp	x2, x0
     d20:	mul	x1, x1, x21
     d24:	b.ne	e54 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x284>  // b.any
     d28:	mov	x0, x3
     d2c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     d30:	ldp	x4, x0, [x24, #24]
     d34:	cmp	x0, x4
     d38:	b.eq	e24 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x254>  // b.none
     d3c:	mov	w23, #0x0                   	// #0
     d40:	mov	x2, #0x0                   	// #0
     d44:	str	x27, [sp, #80]
     d48:	b	da0 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x1d0>
     d4c:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
     d50:	and	w19, w0, #0xff
     d54:	ldr	w0, [x22, #16]
     d58:	eor	w19, w19, #0x1
     d5c:	and	x19, x19, #0xff
     d60:	add	x27, x22, #0x8
     d64:	cmp	w0, #0x40
     d68:	b.ls	d78 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x1a8>  // b.plast
     d6c:	ldr	x0, [x22, #8]
     d70:	cbz	x0, d78 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x1a8>
     d74:	bl	0 <_ZdaPv>
     d78:	str	x19, [x22, #8]
     d7c:	add	w2, w23, #0x1
     d80:	mov	x23, x2
     d84:	ldp	x4, x3, [x24, #24]
     d88:	str	w20, [x27, #8]
     d8c:	sub	x3, x3, x4
     d90:	asr	x3, x3, #4
     d94:	mul	x3, x3, x21
     d98:	cmp	x3, w2, uxtw
     d9c:	b.ls	df0 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.plast
     da0:	add	x2, x2, x2, lsl #1
     da4:	ldr	x3, [x26, #24]
     da8:	lsl	x2, x2, #4
     dac:	add	x4, x4, x2
     db0:	add	x3, x3, x2
     db4:	add	x0, x4, #0x8
     db8:	ldr	x22, [x25, #24]
     dbc:	add	x1, x3, #0x8
     dc0:	ldr	w5, [x0, #8]
     dc4:	ldr	w6, [x1, #8]
     dc8:	add	x22, x22, x2
     dcc:	cmp	w5, w6
     dd0:	b.ne	e34 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.any
     dd4:	cmp	w5, #0x40
     dd8:	b.hi	d4c <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x17c>  // b.pmore
     ddc:	ldr	x0, [x3, #8]
     de0:	ldr	x1, [x4, #8]
     de4:	cmp	x1, x0
     de8:	cset	w19, eq  // eq = none
     dec:	b	d54 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x184>
     df0:	mov	x0, x25
     df4:	ldp	x19, x20, [sp, #16]
     df8:	ldp	x21, x22, [sp, #32]
     dfc:	ldp	x23, x24, [sp, #48]
     e00:	ldp	x25, x26, [sp, #64]
     e04:	ldr	x27, [sp, #80]
     e08:	ldp	x29, x30, [sp], #96
     e0c:	ret
     e10:	ldr	x0, [x26, #8]
     e14:	ldr	x1, [x24, #8]
     e18:	cmp	x1, x0
     e1c:	cset	w0, eq  // eq = none
     e20:	b	cd8 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x108>
     e24:	ldp	x21, x22, [sp, #32]
     e28:	b	c98 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
     e2c:	stp	x21, x22, [sp, #32]
     e30:	str	x27, [sp, #80]
     e34:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     e38:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     e3c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     e40:	add	x3, x3, #0x0
     e44:	add	x1, x1, #0x0
     e48:	add	x0, x0, #0x0
     e4c:	mov	w2, #0x47f                 	// #1151
     e50:	bl	0 <__assert_fail>
     e54:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     e58:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     e5c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     e60:	add	x3, x3, #0x0
     e64:	add	x1, x1, #0x0
     e68:	add	x0, x0, #0x0
     e6c:	mov	w2, #0xd2                  	// #210
     e70:	str	x27, [sp, #80]
     e74:	bl	0 <__assert_fail>

0000000000000e78 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>:
     e78:	stp	x29, x30, [sp, #-112]!
     e7c:	mov	x3, x8
     e80:	mov	x29, sp
     e84:	stp	x19, x20, [sp, #16]
     e88:	mov	x19, x0
     e8c:	mov	w20, #0x1                   	// #1
     e90:	stp	x21, x22, [sp, #32]
     e94:	mov	x21, x2
     e98:	mov	x2, x8
     e9c:	stp	x27, x28, [sp, #80]
     ea0:	mov	x27, x8
     ea4:	mov	x28, x1
     ea8:	stp	xzr, xzr, [x3, #24]!
     eac:	str	xzr, [x3, #16]
     eb0:	str	xzr, [x2], #8
     eb4:	ldrb	w0, [x21, #8]
     eb8:	str	xzr, [x8, #8]
     ebc:	str	w20, [x2, #8]
     ec0:	cmp	w0, #0xf
     ec4:	b.eq	f2c <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
     ec8:	cmp	w0, #0x10
     ecc:	b.eq	f84 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x10c>  // b.none
     ed0:	cmp	w0, #0xb
     ed4:	b.eq	f58 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
     ed8:	stp	x23, x24, [sp, #48]
     edc:	stp	x25, x26, [sp, #64]
     ee0:	bl	0 <_ZN4llvm4dbgsEv>
     ee4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     ee8:	add	x1, x1, #0x0
     eec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     ef0:	mov	w2, #0x0                   	// #0
     ef4:	mov	x19, x0
     ef8:	mov	w3, #0x0                   	// #0
     efc:	mov	x0, x21
     f00:	mov	x1, x19
     f04:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     f08:	mov	x0, x19
     f0c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     f10:	add	x1, x1, #0x0
     f14:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     f18:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     f1c:	mov	w2, #0xe4                  	// #228
     f20:	add	x1, x1, #0x0
     f24:	mov	x0, #0x0                   	// #0
     f28:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     f2c:	ldr	x0, [x28]
     f30:	ldr	x1, [x19]
     f34:	cmp	x1, x0
     f38:	cset	x0, cc  // cc = lo, ul, last
     f3c:	str	x0, [x8, #8]
     f40:	mov	x0, x27
     f44:	ldp	x19, x20, [sp, #16]
     f48:	ldp	x21, x22, [sp, #32]
     f4c:	ldp	x27, x28, [sp, #80]
     f50:	ldp	x29, x30, [sp], #112
     f54:	ret
     f58:	add	x1, x1, #0x8
     f5c:	add	x0, x19, #0x8
     f60:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
     f64:	lsr	w0, w0, #31
     f68:	str	x0, [x27, #8]
     f6c:	mov	x0, x27
     f70:	ldp	x19, x20, [sp, #16]
     f74:	ldp	x21, x22, [sp, #32]
     f78:	ldp	x27, x28, [sp, #80]
     f7c:	ldp	x29, x30, [sp], #112
     f80:	ret
     f84:	ldp	x1, x0, [x19, #24]
     f88:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     f8c:	ldp	x4, x2, [x28, #24]
     f90:	movk	x22, #0xaaab
     f94:	sub	x0, x0, x1
     f98:	asr	x1, x0, #4
     f9c:	sub	x2, x2, x4
     fa0:	cmp	x2, x0
     fa4:	mul	x1, x1, x22
     fa8:	b.ne	1070 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x1f8>  // b.any
     fac:	mov	x0, x3
     fb0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
     fb4:	ldp	x21, x0, [x19, #24]
     fb8:	str	x0, [sp, #104]
     fbc:	cmp	x0, x21
     fc0:	b.eq	f40 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
     fc4:	mov	x2, #0x0                   	// #0
     fc8:	stp	x23, x24, [sp, #48]
     fcc:	stp	x25, x26, [sp, #64]
     fd0:	mov	w25, #0x0                   	// #0
     fd4:	nop
     fd8:	add	x2, x2, x2, lsl #1
     fdc:	ldr	x3, [x28, #24]
     fe0:	lsl	x2, x2, #4
     fe4:	ldr	x23, [x27, #24]
     fe8:	add	x0, x21, x2
     fec:	add	x0, x0, #0x8
     ff0:	add	x23, x23, x2
     ff4:	add	x2, x3, x2
     ff8:	add	x1, x2, #0x8
     ffc:	add	x24, x23, #0x8
    1000:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    1004:	lsr	w26, w0, #31
    1008:	ldr	w1, [x23, #16]
    100c:	cmp	w1, #0x40
    1010:	b.ls	1028 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x1b0>  // b.plast
    1014:	ldr	x0, [x23, #8]
    1018:	cbz	x0, 1028 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x1b0>
    101c:	bl	0 <_ZdaPv>
    1020:	ldp	x21, x0, [x19, #24]
    1024:	str	x0, [sp, #104]
    1028:	ldr	x0, [sp, #104]
    102c:	str	x26, [x23, #8]
    1030:	add	w2, w25, #0x1
    1034:	str	w20, [x24, #8]
    1038:	sub	x3, x0, x21
    103c:	mov	x25, x2
    1040:	asr	x3, x3, #4
    1044:	mul	x3, x3, x22
    1048:	cmp	x3, w2, uxtw
    104c:	b.hi	fd8 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.pmore
    1050:	mov	x0, x27
    1054:	ldp	x19, x20, [sp, #16]
    1058:	ldp	x21, x22, [sp, #32]
    105c:	ldp	x23, x24, [sp, #48]
    1060:	ldp	x25, x26, [sp, #64]
    1064:	ldp	x27, x28, [sp, #80]
    1068:	ldp	x29, x30, [sp], #112
    106c:	ret
    1070:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1074:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1078:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    107c:	add	x3, x3, #0x0
    1080:	add	x1, x1, #0x0
    1084:	add	x0, x0, #0x0
    1088:	mov	w2, #0xe0                  	// #224
    108c:	stp	x23, x24, [sp, #48]
    1090:	stp	x25, x26, [sp, #64]
    1094:	bl	0 <__assert_fail>

0000000000001098 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE>:
    1098:	stp	x29, x30, [sp, #-112]!
    109c:	mov	x3, x8
    10a0:	mov	x29, sp
    10a4:	stp	x19, x20, [sp, #16]
    10a8:	mov	x19, x0
    10ac:	mov	w20, #0x1                   	// #1
    10b0:	stp	x21, x22, [sp, #32]
    10b4:	mov	x21, x2
    10b8:	mov	x2, x8
    10bc:	stp	x27, x28, [sp, #80]
    10c0:	mov	x27, x8
    10c4:	mov	x28, x1
    10c8:	stp	xzr, xzr, [x3, #24]!
    10cc:	str	xzr, [x3, #16]
    10d0:	str	xzr, [x2], #8
    10d4:	ldrb	w0, [x21, #8]
    10d8:	str	xzr, [x8, #8]
    10dc:	str	w20, [x2, #8]
    10e0:	cmp	w0, #0xf
    10e4:	b.eq	114c <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    10e8:	cmp	w0, #0x10
    10ec:	b.eq	11a4 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x10c>  // b.none
    10f0:	cmp	w0, #0xb
    10f4:	b.eq	1178 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
    10f8:	stp	x23, x24, [sp, #48]
    10fc:	stp	x25, x26, [sp, #64]
    1100:	bl	0 <_ZN4llvm4dbgsEv>
    1104:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1108:	add	x1, x1, #0x0
    110c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1110:	mov	w2, #0x0                   	// #0
    1114:	mov	x19, x0
    1118:	mov	w3, #0x0                   	// #0
    111c:	mov	x0, x21
    1120:	mov	x1, x19
    1124:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    1128:	mov	x0, x19
    112c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1130:	add	x1, x1, #0x0
    1134:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1138:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    113c:	mov	w2, #0xf2                  	// #242
    1140:	add	x1, x1, #0x0
    1144:	mov	x0, #0x0                   	// #0
    1148:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    114c:	ldr	x0, [x28]
    1150:	ldr	x1, [x19]
    1154:	cmp	x1, x0
    1158:	cset	x0, cc  // cc = lo, ul, last
    115c:	str	x0, [x8, #8]
    1160:	mov	x0, x27
    1164:	ldp	x19, x20, [sp, #16]
    1168:	ldp	x21, x22, [sp, #32]
    116c:	ldp	x27, x28, [sp, #80]
    1170:	ldp	x29, x30, [sp], #112
    1174:	ret
    1178:	add	x1, x1, #0x8
    117c:	add	x0, x19, #0x8
    1180:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1184:	lsr	w0, w0, #31
    1188:	str	x0, [x27, #8]
    118c:	mov	x0, x27
    1190:	ldp	x19, x20, [sp, #16]
    1194:	ldp	x21, x22, [sp, #32]
    1198:	ldp	x27, x28, [sp, #80]
    119c:	ldp	x29, x30, [sp], #112
    11a0:	ret
    11a4:	ldp	x1, x0, [x19, #24]
    11a8:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    11ac:	ldp	x4, x2, [x28, #24]
    11b0:	movk	x22, #0xaaab
    11b4:	sub	x0, x0, x1
    11b8:	asr	x1, x0, #4
    11bc:	sub	x2, x2, x4
    11c0:	cmp	x2, x0
    11c4:	mul	x1, x1, x22
    11c8:	b.ne	1290 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x1f8>  // b.any
    11cc:	mov	x0, x3
    11d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    11d4:	ldp	x21, x0, [x19, #24]
    11d8:	str	x0, [sp, #104]
    11dc:	cmp	x0, x21
    11e0:	b.eq	1160 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    11e4:	mov	x2, #0x0                   	// #0
    11e8:	stp	x23, x24, [sp, #48]
    11ec:	stp	x25, x26, [sp, #64]
    11f0:	mov	w25, #0x0                   	// #0
    11f4:	nop
    11f8:	add	x2, x2, x2, lsl #1
    11fc:	ldr	x3, [x28, #24]
    1200:	lsl	x2, x2, #4
    1204:	ldr	x23, [x27, #24]
    1208:	add	x0, x21, x2
    120c:	add	x0, x0, #0x8
    1210:	add	x23, x23, x2
    1214:	add	x2, x3, x2
    1218:	add	x1, x2, #0x8
    121c:	add	x24, x23, #0x8
    1220:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1224:	lsr	w26, w0, #31
    1228:	ldr	w1, [x23, #16]
    122c:	cmp	w1, #0x40
    1230:	b.ls	1248 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x1b0>  // b.plast
    1234:	ldr	x0, [x23, #8]
    1238:	cbz	x0, 1248 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x1b0>
    123c:	bl	0 <_ZdaPv>
    1240:	ldp	x21, x0, [x19, #24]
    1244:	str	x0, [sp, #104]
    1248:	ldr	x0, [sp, #104]
    124c:	str	x26, [x23, #8]
    1250:	add	w2, w25, #0x1
    1254:	str	w20, [x24, #8]
    1258:	sub	x3, x0, x21
    125c:	mov	x25, x2
    1260:	asr	x3, x3, #4
    1264:	mul	x3, x3, x22
    1268:	cmp	x3, w2, uxtw
    126c:	b.hi	11f8 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.pmore
    1270:	mov	x0, x27
    1274:	ldp	x19, x20, [sp, #16]
    1278:	ldp	x21, x22, [sp, #32]
    127c:	ldp	x23, x24, [sp, #48]
    1280:	ldp	x25, x26, [sp, #64]
    1284:	ldp	x27, x28, [sp, #80]
    1288:	ldp	x29, x30, [sp], #112
    128c:	ret
    1290:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1294:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1298:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    129c:	add	x3, x3, #0x0
    12a0:	add	x1, x1, #0x0
    12a4:	add	x0, x0, #0x0
    12a8:	mov	w2, #0xee                  	// #238
    12ac:	stp	x23, x24, [sp, #48]
    12b0:	stp	x25, x26, [sp, #64]
    12b4:	bl	0 <__assert_fail>

00000000000012b8 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>:
    12b8:	stp	x29, x30, [sp, #-112]!
    12bc:	mov	x3, x8
    12c0:	mov	x29, sp
    12c4:	stp	x19, x20, [sp, #16]
    12c8:	mov	x19, x0
    12cc:	mov	w20, #0x1                   	// #1
    12d0:	stp	x21, x22, [sp, #32]
    12d4:	mov	x21, x2
    12d8:	mov	x2, x8
    12dc:	stp	x25, x26, [sp, #64]
    12e0:	mov	x26, x8
    12e4:	stp	x27, x28, [sp, #80]
    12e8:	mov	x27, x1
    12ec:	stp	xzr, xzr, [x3, #24]!
    12f0:	str	xzr, [x3, #16]
    12f4:	str	xzr, [x2], #8
    12f8:	ldrb	w0, [x21, #8]
    12fc:	str	xzr, [x8, #8]
    1300:	str	w20, [x2, #8]
    1304:	cmp	w0, #0xf
    1308:	b.eq	136c <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    130c:	cmp	w0, #0x10
    1310:	b.eq	13d0 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.none
    1314:	cmp	w0, #0xb
    1318:	b.eq	139c <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xe4>  // b.none
    131c:	stp	x23, x24, [sp, #48]
    1320:	bl	0 <_ZN4llvm4dbgsEv>
    1324:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1328:	add	x1, x1, #0x0
    132c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1330:	mov	w2, #0x0                   	// #0
    1334:	mov	x19, x0
    1338:	mov	w3, #0x0                   	// #0
    133c:	mov	x0, x21
    1340:	mov	x1, x19
    1344:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    1348:	mov	x0, x19
    134c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1350:	add	x1, x1, #0x0
    1354:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1358:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    135c:	mov	w2, #0x100                 	// #256
    1360:	add	x1, x1, #0x0
    1364:	mov	x0, #0x0                   	// #0
    1368:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    136c:	ldr	x0, [x27]
    1370:	ldr	x1, [x19]
    1374:	cmp	x1, x0
    1378:	cset	x0, hi  // hi = pmore
    137c:	str	x0, [x8, #8]
    1380:	mov	x0, x26
    1384:	ldp	x19, x20, [sp, #16]
    1388:	ldp	x21, x22, [sp, #32]
    138c:	ldp	x25, x26, [sp, #64]
    1390:	ldp	x27, x28, [sp, #80]
    1394:	ldp	x29, x30, [sp], #112
    1398:	ret
    139c:	add	x1, x1, #0x8
    13a0:	add	x0, x19, #0x8
    13a4:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    13a8:	cmp	w0, #0x0
    13ac:	cset	x0, gt
    13b0:	str	x0, [x26, #8]
    13b4:	mov	x0, x26
    13b8:	ldp	x19, x20, [sp, #16]
    13bc:	ldp	x21, x22, [sp, #32]
    13c0:	ldp	x25, x26, [sp, #64]
    13c4:	ldp	x27, x28, [sp, #80]
    13c8:	ldp	x29, x30, [sp], #112
    13cc:	ret
    13d0:	ldp	x1, x0, [x19, #24]
    13d4:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    13d8:	ldp	x4, x2, [x27, #24]
    13dc:	movk	x22, #0xaaab
    13e0:	sub	x0, x0, x1
    13e4:	asr	x1, x0, #4
    13e8:	sub	x2, x2, x4
    13ec:	cmp	x2, x0
    13f0:	mul	x1, x1, x22
    13f4:	b.ne	14b4 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.any
    13f8:	mov	x0, x3
    13fc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1400:	ldp	x28, x21, [x19, #24]
    1404:	cmp	x21, x28
    1408:	b.eq	1380 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    140c:	mov	w25, #0x0                   	// #0
    1410:	mov	x2, #0x0                   	// #0
    1414:	stp	x23, x24, [sp, #48]
    1418:	add	x2, x2, x2, lsl #1
    141c:	ldr	x3, [x27, #24]
    1420:	lsl	x2, x2, #4
    1424:	ldr	x23, [x26, #24]
    1428:	add	x0, x28, x2
    142c:	add	x0, x0, #0x8
    1430:	add	x23, x23, x2
    1434:	add	x2, x3, x2
    1438:	add	x1, x2, #0x8
    143c:	add	x24, x23, #0x8
    1440:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    1444:	cmp	w0, #0x0
    1448:	ldr	w1, [x23, #16]
    144c:	cset	x2, gt
    1450:	cmp	w1, #0x40
    1454:	b.ls	1470 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>  // b.plast
    1458:	ldr	x0, [x23, #8]
    145c:	cbz	x0, 1470 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>
    1460:	str	x2, [sp, #104]
    1464:	bl	0 <_ZdaPv>
    1468:	ldp	x28, x21, [x19, #24]
    146c:	ldr	x2, [sp, #104]
    1470:	sub	x3, x21, x28
    1474:	str	x2, [x23, #8]
    1478:	add	w2, w25, #0x1
    147c:	asr	x3, x3, #4
    1480:	str	w20, [x24, #8]
    1484:	mov	x25, x2
    1488:	mul	x3, x3, x22
    148c:	cmp	x3, w2, uxtw
    1490:	b.hi	1418 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.pmore
    1494:	mov	x0, x26
    1498:	ldp	x19, x20, [sp, #16]
    149c:	ldp	x21, x22, [sp, #32]
    14a0:	ldp	x23, x24, [sp, #48]
    14a4:	ldp	x25, x26, [sp, #64]
    14a8:	ldp	x27, x28, [sp, #80]
    14ac:	ldp	x29, x30, [sp], #112
    14b0:	ret
    14b4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    14b8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    14bc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    14c0:	add	x3, x3, #0x0
    14c4:	add	x1, x1, #0x0
    14c8:	add	x0, x0, #0x0
    14cc:	mov	w2, #0xfc                  	// #252
    14d0:	stp	x23, x24, [sp, #48]
    14d4:	bl	0 <__assert_fail>

00000000000014d8 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE>:
    14d8:	stp	x29, x30, [sp, #-112]!
    14dc:	mov	x3, x8
    14e0:	mov	x29, sp
    14e4:	stp	x19, x20, [sp, #16]
    14e8:	mov	x19, x0
    14ec:	mov	w20, #0x1                   	// #1
    14f0:	stp	x21, x22, [sp, #32]
    14f4:	mov	x21, x2
    14f8:	mov	x2, x8
    14fc:	stp	x25, x26, [sp, #64]
    1500:	mov	x26, x8
    1504:	stp	x27, x28, [sp, #80]
    1508:	mov	x27, x1
    150c:	stp	xzr, xzr, [x3, #24]!
    1510:	str	xzr, [x3, #16]
    1514:	str	xzr, [x2], #8
    1518:	ldrb	w0, [x21, #8]
    151c:	str	xzr, [x8, #8]
    1520:	str	w20, [x2, #8]
    1524:	cmp	w0, #0xf
    1528:	b.eq	158c <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    152c:	cmp	w0, #0x10
    1530:	b.eq	15f0 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.none
    1534:	cmp	w0, #0xb
    1538:	b.eq	15bc <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0xe4>  // b.none
    153c:	stp	x23, x24, [sp, #48]
    1540:	bl	0 <_ZN4llvm4dbgsEv>
    1544:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1548:	add	x1, x1, #0x0
    154c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1550:	mov	w2, #0x0                   	// #0
    1554:	mov	x19, x0
    1558:	mov	w3, #0x0                   	// #0
    155c:	mov	x0, x21
    1560:	mov	x1, x19
    1564:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    1568:	mov	x0, x19
    156c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1570:	add	x1, x1, #0x0
    1574:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1578:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    157c:	mov	w2, #0x10e                 	// #270
    1580:	add	x1, x1, #0x0
    1584:	mov	x0, #0x0                   	// #0
    1588:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    158c:	ldr	x0, [x27]
    1590:	ldr	x1, [x19]
    1594:	cmp	x1, x0
    1598:	cset	x0, hi  // hi = pmore
    159c:	str	x0, [x8, #8]
    15a0:	mov	x0, x26
    15a4:	ldp	x19, x20, [sp, #16]
    15a8:	ldp	x21, x22, [sp, #32]
    15ac:	ldp	x25, x26, [sp, #64]
    15b0:	ldp	x27, x28, [sp, #80]
    15b4:	ldp	x29, x30, [sp], #112
    15b8:	ret
    15bc:	add	x1, x1, #0x8
    15c0:	add	x0, x19, #0x8
    15c4:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    15c8:	cmp	w0, #0x0
    15cc:	cset	x0, gt
    15d0:	str	x0, [x26, #8]
    15d4:	mov	x0, x26
    15d8:	ldp	x19, x20, [sp, #16]
    15dc:	ldp	x21, x22, [sp, #32]
    15e0:	ldp	x25, x26, [sp, #64]
    15e4:	ldp	x27, x28, [sp, #80]
    15e8:	ldp	x29, x30, [sp], #112
    15ec:	ret
    15f0:	ldp	x1, x0, [x19, #24]
    15f4:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    15f8:	ldp	x4, x2, [x27, #24]
    15fc:	movk	x22, #0xaaab
    1600:	sub	x0, x0, x1
    1604:	asr	x1, x0, #4
    1608:	sub	x2, x2, x4
    160c:	cmp	x2, x0
    1610:	mul	x1, x1, x22
    1614:	b.ne	16d4 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.any
    1618:	mov	x0, x3
    161c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1620:	ldp	x28, x21, [x19, #24]
    1624:	cmp	x21, x28
    1628:	b.eq	15a0 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    162c:	mov	w25, #0x0                   	// #0
    1630:	mov	x2, #0x0                   	// #0
    1634:	stp	x23, x24, [sp, #48]
    1638:	add	x2, x2, x2, lsl #1
    163c:	ldr	x3, [x27, #24]
    1640:	lsl	x2, x2, #4
    1644:	ldr	x23, [x26, #24]
    1648:	add	x0, x28, x2
    164c:	add	x0, x0, #0x8
    1650:	add	x23, x23, x2
    1654:	add	x2, x3, x2
    1658:	add	x1, x2, #0x8
    165c:	add	x24, x23, #0x8
    1660:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1664:	cmp	w0, #0x0
    1668:	ldr	w1, [x23, #16]
    166c:	cset	x2, gt
    1670:	cmp	w1, #0x40
    1674:	b.ls	1690 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>  // b.plast
    1678:	ldr	x0, [x23, #8]
    167c:	cbz	x0, 1690 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>
    1680:	str	x2, [sp, #104]
    1684:	bl	0 <_ZdaPv>
    1688:	ldp	x28, x21, [x19, #24]
    168c:	ldr	x2, [sp, #104]
    1690:	sub	x3, x21, x28
    1694:	str	x2, [x23, #8]
    1698:	add	w2, w25, #0x1
    169c:	asr	x3, x3, #4
    16a0:	str	w20, [x24, #8]
    16a4:	mov	x25, x2
    16a8:	mul	x3, x3, x22
    16ac:	cmp	x3, w2, uxtw
    16b0:	b.hi	1638 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.pmore
    16b4:	mov	x0, x26
    16b8:	ldp	x19, x20, [sp, #16]
    16bc:	ldp	x21, x22, [sp, #32]
    16c0:	ldp	x23, x24, [sp, #48]
    16c4:	ldp	x25, x26, [sp, #64]
    16c8:	ldp	x27, x28, [sp, #80]
    16cc:	ldp	x29, x30, [sp], #112
    16d0:	ret
    16d4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    16d8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    16dc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    16e0:	add	x3, x3, #0x0
    16e4:	add	x1, x1, #0x0
    16e8:	add	x0, x0, #0x0
    16ec:	mov	w2, #0x10a                 	// #266
    16f0:	stp	x23, x24, [sp, #48]
    16f4:	bl	0 <__assert_fail>

00000000000016f8 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>:
    16f8:	stp	x29, x30, [sp, #-112]!
    16fc:	mov	x3, x8
    1700:	mov	x29, sp
    1704:	stp	x19, x20, [sp, #16]
    1708:	mov	x19, x0
    170c:	mov	w20, #0x1                   	// #1
    1710:	stp	x21, x22, [sp, #32]
    1714:	mov	x21, x2
    1718:	mov	x2, x8
    171c:	stp	x25, x26, [sp, #64]
    1720:	mov	x26, x8
    1724:	stp	x27, x28, [sp, #80]
    1728:	mov	x27, x1
    172c:	stp	xzr, xzr, [x3, #24]!
    1730:	str	xzr, [x3, #16]
    1734:	str	xzr, [x2], #8
    1738:	ldrb	w0, [x21, #8]
    173c:	str	xzr, [x8, #8]
    1740:	str	w20, [x2, #8]
    1744:	cmp	w0, #0xf
    1748:	b.eq	17ac <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    174c:	cmp	w0, #0x10
    1750:	b.eq	1810 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.none
    1754:	cmp	w0, #0xb
    1758:	b.eq	17dc <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xe4>  // b.none
    175c:	stp	x23, x24, [sp, #48]
    1760:	bl	0 <_ZN4llvm4dbgsEv>
    1764:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1768:	add	x1, x1, #0x0
    176c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1770:	mov	w2, #0x0                   	// #0
    1774:	mov	x19, x0
    1778:	mov	w3, #0x0                   	// #0
    177c:	mov	x0, x21
    1780:	mov	x1, x19
    1784:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    1788:	mov	x0, x19
    178c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1790:	add	x1, x1, #0x0
    1794:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1798:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    179c:	mov	w2, #0x11c                 	// #284
    17a0:	add	x1, x1, #0x0
    17a4:	mov	x0, #0x0                   	// #0
    17a8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    17ac:	ldr	x0, [x27]
    17b0:	ldr	x1, [x19]
    17b4:	cmp	x1, x0
    17b8:	cset	x0, ls  // ls = plast
    17bc:	str	x0, [x8, #8]
    17c0:	mov	x0, x26
    17c4:	ldp	x19, x20, [sp, #16]
    17c8:	ldp	x21, x22, [sp, #32]
    17cc:	ldp	x25, x26, [sp, #64]
    17d0:	ldp	x27, x28, [sp, #80]
    17d4:	ldp	x29, x30, [sp], #112
    17d8:	ret
    17dc:	add	x1, x1, #0x8
    17e0:	add	x0, x19, #0x8
    17e4:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    17e8:	cmp	w0, #0x0
    17ec:	cset	x0, le
    17f0:	str	x0, [x26, #8]
    17f4:	mov	x0, x26
    17f8:	ldp	x19, x20, [sp, #16]
    17fc:	ldp	x21, x22, [sp, #32]
    1800:	ldp	x25, x26, [sp, #64]
    1804:	ldp	x27, x28, [sp, #80]
    1808:	ldp	x29, x30, [sp], #112
    180c:	ret
    1810:	ldp	x1, x0, [x19, #24]
    1814:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1818:	ldp	x4, x2, [x27, #24]
    181c:	movk	x22, #0xaaab
    1820:	sub	x0, x0, x1
    1824:	asr	x1, x0, #4
    1828:	sub	x2, x2, x4
    182c:	cmp	x2, x0
    1830:	mul	x1, x1, x22
    1834:	b.ne	18f4 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.any
    1838:	mov	x0, x3
    183c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1840:	ldp	x28, x21, [x19, #24]
    1844:	cmp	x21, x28
    1848:	b.eq	17c0 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    184c:	mov	w25, #0x0                   	// #0
    1850:	mov	x2, #0x0                   	// #0
    1854:	stp	x23, x24, [sp, #48]
    1858:	add	x2, x2, x2, lsl #1
    185c:	ldr	x3, [x27, #24]
    1860:	lsl	x2, x2, #4
    1864:	ldr	x23, [x26, #24]
    1868:	add	x0, x28, x2
    186c:	add	x0, x0, #0x8
    1870:	add	x23, x23, x2
    1874:	add	x2, x3, x2
    1878:	add	x1, x2, #0x8
    187c:	add	x24, x23, #0x8
    1880:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    1884:	cmp	w0, #0x0
    1888:	ldr	w1, [x23, #16]
    188c:	cset	x2, le
    1890:	cmp	w1, #0x40
    1894:	b.ls	18b0 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>  // b.plast
    1898:	ldr	x0, [x23, #8]
    189c:	cbz	x0, 18b0 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>
    18a0:	str	x2, [sp, #104]
    18a4:	bl	0 <_ZdaPv>
    18a8:	ldp	x28, x21, [x19, #24]
    18ac:	ldr	x2, [sp, #104]
    18b0:	sub	x3, x21, x28
    18b4:	str	x2, [x23, #8]
    18b8:	add	w2, w25, #0x1
    18bc:	asr	x3, x3, #4
    18c0:	str	w20, [x24, #8]
    18c4:	mov	x25, x2
    18c8:	mul	x3, x3, x22
    18cc:	cmp	x3, w2, uxtw
    18d0:	b.hi	1858 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.pmore
    18d4:	mov	x0, x26
    18d8:	ldp	x19, x20, [sp, #16]
    18dc:	ldp	x21, x22, [sp, #32]
    18e0:	ldp	x23, x24, [sp, #48]
    18e4:	ldp	x25, x26, [sp, #64]
    18e8:	ldp	x27, x28, [sp, #80]
    18ec:	ldp	x29, x30, [sp], #112
    18f0:	ret
    18f4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    18f8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    18fc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1900:	add	x3, x3, #0x0
    1904:	add	x1, x1, #0x0
    1908:	add	x0, x0, #0x0
    190c:	mov	w2, #0x118                 	// #280
    1910:	stp	x23, x24, [sp, #48]
    1914:	bl	0 <__assert_fail>

0000000000001918 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE>:
    1918:	stp	x29, x30, [sp, #-112]!
    191c:	mov	x3, x8
    1920:	mov	x29, sp
    1924:	stp	x19, x20, [sp, #16]
    1928:	mov	x19, x0
    192c:	mov	w20, #0x1                   	// #1
    1930:	stp	x21, x22, [sp, #32]
    1934:	mov	x21, x2
    1938:	mov	x2, x8
    193c:	stp	x25, x26, [sp, #64]
    1940:	mov	x26, x8
    1944:	stp	x27, x28, [sp, #80]
    1948:	mov	x27, x1
    194c:	stp	xzr, xzr, [x3, #24]!
    1950:	str	xzr, [x3, #16]
    1954:	str	xzr, [x2], #8
    1958:	ldrb	w0, [x21, #8]
    195c:	str	xzr, [x8, #8]
    1960:	str	w20, [x2, #8]
    1964:	cmp	w0, #0xf
    1968:	b.eq	19cc <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    196c:	cmp	w0, #0x10
    1970:	b.eq	1a30 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x118>  // b.none
    1974:	cmp	w0, #0xb
    1978:	b.eq	19fc <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0xe4>  // b.none
    197c:	stp	x23, x24, [sp, #48]
    1980:	bl	0 <_ZN4llvm4dbgsEv>
    1984:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1988:	add	x1, x1, #0x0
    198c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1990:	mov	w2, #0x0                   	// #0
    1994:	mov	x19, x0
    1998:	mov	w3, #0x0                   	// #0
    199c:	mov	x0, x21
    19a0:	mov	x1, x19
    19a4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    19a8:	mov	x0, x19
    19ac:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    19b0:	add	x1, x1, #0x0
    19b4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    19b8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    19bc:	mov	w2, #0x12a                 	// #298
    19c0:	add	x1, x1, #0x0
    19c4:	mov	x0, #0x0                   	// #0
    19c8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    19cc:	ldr	x0, [x27]
    19d0:	ldr	x1, [x19]
    19d4:	cmp	x1, x0
    19d8:	cset	x0, ls  // ls = plast
    19dc:	str	x0, [x8, #8]
    19e0:	mov	x0, x26
    19e4:	ldp	x19, x20, [sp, #16]
    19e8:	ldp	x21, x22, [sp, #32]
    19ec:	ldp	x25, x26, [sp, #64]
    19f0:	ldp	x27, x28, [sp, #80]
    19f4:	ldp	x29, x30, [sp], #112
    19f8:	ret
    19fc:	add	x1, x1, #0x8
    1a00:	add	x0, x19, #0x8
    1a04:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1a08:	cmp	w0, #0x0
    1a0c:	cset	x0, le
    1a10:	str	x0, [x26, #8]
    1a14:	mov	x0, x26
    1a18:	ldp	x19, x20, [sp, #16]
    1a1c:	ldp	x21, x22, [sp, #32]
    1a20:	ldp	x25, x26, [sp, #64]
    1a24:	ldp	x27, x28, [sp, #80]
    1a28:	ldp	x29, x30, [sp], #112
    1a2c:	ret
    1a30:	ldp	x1, x0, [x19, #24]
    1a34:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1a38:	ldp	x4, x2, [x27, #24]
    1a3c:	movk	x22, #0xaaab
    1a40:	sub	x0, x0, x1
    1a44:	asr	x1, x0, #4
    1a48:	sub	x2, x2, x4
    1a4c:	cmp	x2, x0
    1a50:	mul	x1, x1, x22
    1a54:	b.ne	1b14 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.any
    1a58:	mov	x0, x3
    1a5c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1a60:	ldp	x28, x21, [x19, #24]
    1a64:	cmp	x21, x28
    1a68:	b.eq	19e0 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    1a6c:	mov	w25, #0x0                   	// #0
    1a70:	mov	x2, #0x0                   	// #0
    1a74:	stp	x23, x24, [sp, #48]
    1a78:	add	x2, x2, x2, lsl #1
    1a7c:	ldr	x3, [x27, #24]
    1a80:	lsl	x2, x2, #4
    1a84:	ldr	x23, [x26, #24]
    1a88:	add	x0, x28, x2
    1a8c:	add	x0, x0, #0x8
    1a90:	add	x23, x23, x2
    1a94:	add	x2, x3, x2
    1a98:	add	x1, x2, #0x8
    1a9c:	add	x24, x23, #0x8
    1aa0:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1aa4:	cmp	w0, #0x0
    1aa8:	ldr	w1, [x23, #16]
    1aac:	cset	x2, le
    1ab0:	cmp	w1, #0x40
    1ab4:	b.ls	1ad0 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>  // b.plast
    1ab8:	ldr	x0, [x23, #8]
    1abc:	cbz	x0, 1ad0 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x1b8>
    1ac0:	str	x2, [sp, #104]
    1ac4:	bl	0 <_ZdaPv>
    1ac8:	ldp	x28, x21, [x19, #24]
    1acc:	ldr	x2, [sp, #104]
    1ad0:	sub	x3, x21, x28
    1ad4:	str	x2, [x23, #8]
    1ad8:	add	w2, w25, #0x1
    1adc:	asr	x3, x3, #4
    1ae0:	str	w20, [x24, #8]
    1ae4:	mov	x25, x2
    1ae8:	mul	x3, x3, x22
    1aec:	cmp	x3, w2, uxtw
    1af0:	b.hi	1a78 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.pmore
    1af4:	mov	x0, x26
    1af8:	ldp	x19, x20, [sp, #16]
    1afc:	ldp	x21, x22, [sp, #32]
    1b00:	ldp	x23, x24, [sp, #48]
    1b04:	ldp	x25, x26, [sp, #64]
    1b08:	ldp	x27, x28, [sp, #80]
    1b0c:	ldp	x29, x30, [sp], #112
    1b10:	ret
    1b14:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1b18:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1b1c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1b20:	add	x3, x3, #0x0
    1b24:	add	x1, x1, #0x0
    1b28:	add	x0, x0, #0x0
    1b2c:	mov	w2, #0x126                 	// #294
    1b30:	stp	x23, x24, [sp, #48]
    1b34:	bl	0 <__assert_fail>

0000000000001b38 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>:
    1b38:	stp	x29, x30, [sp, #-112]!
    1b3c:	mov	x3, x8
    1b40:	mov	x29, sp
    1b44:	stp	x19, x20, [sp, #16]
    1b48:	mov	x19, x0
    1b4c:	mov	w20, #0x1                   	// #1
    1b50:	stp	x21, x22, [sp, #32]
    1b54:	mov	x21, x2
    1b58:	mov	x2, x8
    1b5c:	stp	x27, x28, [sp, #80]
    1b60:	mov	x27, x8
    1b64:	mov	x28, x1
    1b68:	stp	xzr, xzr, [x3, #24]!
    1b6c:	str	xzr, [x3, #16]
    1b70:	str	xzr, [x2], #8
    1b74:	ldrb	w0, [x21, #8]
    1b78:	str	xzr, [x8, #8]
    1b7c:	str	w20, [x2, #8]
    1b80:	cmp	w0, #0xf
    1b84:	b.eq	1bec <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    1b88:	cmp	w0, #0x10
    1b8c:	b.eq	1c48 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x110>  // b.none
    1b90:	cmp	w0, #0xb
    1b94:	b.eq	1c18 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
    1b98:	stp	x23, x24, [sp, #48]
    1b9c:	stp	x25, x26, [sp, #64]
    1ba0:	bl	0 <_ZN4llvm4dbgsEv>
    1ba4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1ba8:	add	x1, x1, #0x0
    1bac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1bb0:	mov	w2, #0x0                   	// #0
    1bb4:	mov	x19, x0
    1bb8:	mov	w3, #0x0                   	// #0
    1bbc:	mov	x0, x21
    1bc0:	mov	x1, x19
    1bc4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    1bc8:	mov	x0, x19
    1bcc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1bd0:	add	x1, x1, #0x0
    1bd4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1bd8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1bdc:	mov	w2, #0x138                 	// #312
    1be0:	add	x1, x1, #0x0
    1be4:	mov	x0, #0x0                   	// #0
    1be8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1bec:	ldr	x0, [x28]
    1bf0:	ldr	x1, [x19]
    1bf4:	cmp	x1, x0
    1bf8:	cset	x0, cs  // cs = hs, nlast
    1bfc:	str	x0, [x8, #8]
    1c00:	mov	x0, x27
    1c04:	ldp	x19, x20, [sp, #16]
    1c08:	ldp	x21, x22, [sp, #32]
    1c0c:	ldp	x27, x28, [sp, #80]
    1c10:	ldp	x29, x30, [sp], #112
    1c14:	ret
    1c18:	add	x1, x1, #0x8
    1c1c:	add	x0, x19, #0x8
    1c20:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    1c24:	eor	x0, x0, #0x80000000
    1c28:	lsr	w0, w0, #31
    1c2c:	str	x0, [x27, #8]
    1c30:	mov	x0, x27
    1c34:	ldp	x19, x20, [sp, #16]
    1c38:	ldp	x21, x22, [sp, #32]
    1c3c:	ldp	x27, x28, [sp, #80]
    1c40:	ldp	x29, x30, [sp], #112
    1c44:	ret
    1c48:	ldp	x1, x0, [x19, #24]
    1c4c:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1c50:	ldp	x4, x2, [x28, #24]
    1c54:	movk	x22, #0xaaab
    1c58:	sub	x0, x0, x1
    1c5c:	asr	x1, x0, #4
    1c60:	sub	x2, x2, x4
    1c64:	cmp	x2, x0
    1c68:	mul	x1, x1, x22
    1c6c:	b.ne	1d34 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.any
    1c70:	mov	x0, x3
    1c74:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1c78:	ldp	x21, x0, [x19, #24]
    1c7c:	str	x0, [sp, #104]
    1c80:	cmp	x0, x21
    1c84:	b.eq	1c00 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    1c88:	mov	x2, #0x0                   	// #0
    1c8c:	stp	x23, x24, [sp, #48]
    1c90:	stp	x25, x26, [sp, #64]
    1c94:	mov	w26, #0x0                   	// #0
    1c98:	add	x2, x2, x2, lsl #1
    1c9c:	ldr	x3, [x28, #24]
    1ca0:	lsl	x2, x2, #4
    1ca4:	ldr	x23, [x27, #24]
    1ca8:	add	x0, x21, x2
    1cac:	add	x0, x0, #0x8
    1cb0:	add	x23, x23, x2
    1cb4:	add	x2, x3, x2
    1cb8:	add	x1, x2, #0x8
    1cbc:	add	x24, x23, #0x8
    1cc0:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    1cc4:	eor	x0, x0, #0x80000000
    1cc8:	ldr	w1, [x23, #16]
    1ccc:	lsr	w25, w0, #31
    1cd0:	cmp	w1, #0x40
    1cd4:	b.ls	1cec <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x1b4>  // b.plast
    1cd8:	ldr	x0, [x23, #8]
    1cdc:	cbz	x0, 1cec <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x1b4>
    1ce0:	bl	0 <_ZdaPv>
    1ce4:	ldp	x21, x0, [x19, #24]
    1ce8:	str	x0, [sp, #104]
    1cec:	ldr	x0, [sp, #104]
    1cf0:	str	x25, [x23, #8]
    1cf4:	add	w2, w26, #0x1
    1cf8:	str	w20, [x24, #8]
    1cfc:	sub	x3, x0, x21
    1d00:	mov	x26, x2
    1d04:	asr	x3, x3, #4
    1d08:	mul	x3, x3, x22
    1d0c:	cmp	x3, w2, uxtw
    1d10:	b.hi	1c98 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.pmore
    1d14:	mov	x0, x27
    1d18:	ldp	x19, x20, [sp, #16]
    1d1c:	ldp	x21, x22, [sp, #32]
    1d20:	ldp	x23, x24, [sp, #48]
    1d24:	ldp	x25, x26, [sp, #64]
    1d28:	ldp	x27, x28, [sp, #80]
    1d2c:	ldp	x29, x30, [sp], #112
    1d30:	ret
    1d34:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1d38:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1d3c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1d40:	add	x3, x3, #0x0
    1d44:	add	x1, x1, #0x0
    1d48:	add	x0, x0, #0x0
    1d4c:	mov	w2, #0x134                 	// #308
    1d50:	stp	x23, x24, [sp, #48]
    1d54:	stp	x25, x26, [sp, #64]
    1d58:	bl	0 <__assert_fail>
    1d5c:	nop

0000000000001d60 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE>:
    1d60:	stp	x29, x30, [sp, #-112]!
    1d64:	mov	x3, x8
    1d68:	mov	x29, sp
    1d6c:	stp	x19, x20, [sp, #16]
    1d70:	mov	x19, x0
    1d74:	mov	w20, #0x1                   	// #1
    1d78:	stp	x21, x22, [sp, #32]
    1d7c:	mov	x21, x2
    1d80:	mov	x2, x8
    1d84:	stp	x27, x28, [sp, #80]
    1d88:	mov	x27, x8
    1d8c:	mov	x28, x1
    1d90:	stp	xzr, xzr, [x3, #24]!
    1d94:	str	xzr, [x3, #16]
    1d98:	str	xzr, [x2], #8
    1d9c:	ldrb	w0, [x21, #8]
    1da0:	str	xzr, [x8, #8]
    1da4:	str	w20, [x2, #8]
    1da8:	cmp	w0, #0xf
    1dac:	b.eq	1e14 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    1db0:	cmp	w0, #0x10
    1db4:	b.eq	1e70 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x110>  // b.none
    1db8:	cmp	w0, #0xb
    1dbc:	b.eq	1e40 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
    1dc0:	stp	x23, x24, [sp, #48]
    1dc4:	stp	x25, x26, [sp, #64]
    1dc8:	bl	0 <_ZN4llvm4dbgsEv>
    1dcc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1dd0:	add	x1, x1, #0x0
    1dd4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1dd8:	mov	w2, #0x0                   	// #0
    1ddc:	mov	x19, x0
    1de0:	mov	w3, #0x0                   	// #0
    1de4:	mov	x0, x21
    1de8:	mov	x1, x19
    1dec:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    1df0:	mov	x0, x19
    1df4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1df8:	add	x1, x1, #0x0
    1dfc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1e00:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1e04:	mov	w2, #0x146                 	// #326
    1e08:	add	x1, x1, #0x0
    1e0c:	mov	x0, #0x0                   	// #0
    1e10:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1e14:	ldr	x0, [x28]
    1e18:	ldr	x1, [x19]
    1e1c:	cmp	x1, x0
    1e20:	cset	x0, cs  // cs = hs, nlast
    1e24:	str	x0, [x8, #8]
    1e28:	mov	x0, x27
    1e2c:	ldp	x19, x20, [sp, #16]
    1e30:	ldp	x21, x22, [sp, #32]
    1e34:	ldp	x27, x28, [sp, #80]
    1e38:	ldp	x29, x30, [sp], #112
    1e3c:	ret
    1e40:	add	x1, x1, #0x8
    1e44:	add	x0, x19, #0x8
    1e48:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1e4c:	eor	x0, x0, #0x80000000
    1e50:	lsr	w0, w0, #31
    1e54:	str	x0, [x27, #8]
    1e58:	mov	x0, x27
    1e5c:	ldp	x19, x20, [sp, #16]
    1e60:	ldp	x21, x22, [sp, #32]
    1e64:	ldp	x27, x28, [sp, #80]
    1e68:	ldp	x29, x30, [sp], #112
    1e6c:	ret
    1e70:	ldp	x1, x0, [x19, #24]
    1e74:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1e78:	ldp	x4, x2, [x28, #24]
    1e7c:	movk	x22, #0xaaab
    1e80:	sub	x0, x0, x1
    1e84:	asr	x1, x0, #4
    1e88:	sub	x2, x2, x4
    1e8c:	cmp	x2, x0
    1e90:	mul	x1, x1, x22
    1e94:	b.ne	1f5c <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.any
    1e98:	mov	x0, x3
    1e9c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1ea0:	ldp	x21, x0, [x19, #24]
    1ea4:	str	x0, [sp, #104]
    1ea8:	cmp	x0, x21
    1eac:	b.eq	1e28 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    1eb0:	mov	x2, #0x0                   	// #0
    1eb4:	stp	x23, x24, [sp, #48]
    1eb8:	stp	x25, x26, [sp, #64]
    1ebc:	mov	w26, #0x0                   	// #0
    1ec0:	add	x2, x2, x2, lsl #1
    1ec4:	ldr	x3, [x28, #24]
    1ec8:	lsl	x2, x2, #4
    1ecc:	ldr	x23, [x27, #24]
    1ed0:	add	x0, x21, x2
    1ed4:	add	x0, x0, #0x8
    1ed8:	add	x23, x23, x2
    1edc:	add	x2, x3, x2
    1ee0:	add	x1, x2, #0x8
    1ee4:	add	x24, x23, #0x8
    1ee8:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1eec:	eor	x0, x0, #0x80000000
    1ef0:	ldr	w1, [x23, #16]
    1ef4:	lsr	w25, w0, #31
    1ef8:	cmp	w1, #0x40
    1efc:	b.ls	1f14 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x1b4>  // b.plast
    1f00:	ldr	x0, [x23, #8]
    1f04:	cbz	x0, 1f14 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x1b4>
    1f08:	bl	0 <_ZdaPv>
    1f0c:	ldp	x21, x0, [x19, #24]
    1f10:	str	x0, [sp, #104]
    1f14:	ldr	x0, [sp, #104]
    1f18:	str	x25, [x23, #8]
    1f1c:	add	w2, w26, #0x1
    1f20:	str	w20, [x24, #8]
    1f24:	sub	x3, x0, x21
    1f28:	mov	x26, x2
    1f2c:	asr	x3, x3, #4
    1f30:	mul	x3, x3, x22
    1f34:	cmp	x3, w2, uxtw
    1f38:	b.hi	1ec0 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.pmore
    1f3c:	mov	x0, x27
    1f40:	ldp	x19, x20, [sp, #16]
    1f44:	ldp	x21, x22, [sp, #32]
    1f48:	ldp	x23, x24, [sp, #48]
    1f4c:	ldp	x25, x26, [sp, #64]
    1f50:	ldp	x27, x28, [sp, #80]
    1f54:	ldp	x29, x30, [sp], #112
    1f58:	ret
    1f5c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1f60:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1f64:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    1f68:	add	x3, x3, #0x0
    1f6c:	add	x1, x1, #0x0
    1f70:	add	x0, x0, #0x0
    1f74:	mov	w2, #0x142                 	// #322
    1f78:	stp	x23, x24, [sp, #48]
    1f7c:	stp	x25, x26, [sp, #64]
    1f80:	bl	0 <__assert_fail>
    1f84:	nop

0000000000001f88 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE>:
    1f88:	stp	x29, x30, [sp, #-112]!
    1f8c:	mov	x3, x8
    1f90:	mov	x29, sp
    1f94:	stp	x21, x22, [sp, #32]
    1f98:	mov	x21, x2
    1f9c:	mov	x2, x8
    1fa0:	stp	x19, x20, [sp, #16]
    1fa4:	mov	x22, x0
    1fa8:	mov	x20, x8
    1fac:	stp	x23, x24, [sp, #48]
    1fb0:	mov	w24, #0x1                   	// #1
    1fb4:	mov	x23, x1
    1fb8:	stp	xzr, xzr, [x2, #24]!
    1fbc:	str	xzr, [x2, #16]
    1fc0:	str	xzr, [x3], #8
    1fc4:	ldrb	w0, [x21, #8]
    1fc8:	str	xzr, [x8, #8]
    1fcc:	str	w24, [x3, #8]
    1fd0:	cmp	w0, #0x10
    1fd4:	b.eq	2068 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
    1fd8:	cmp	w0, #0x2
    1fdc:	b.eq	2018 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x90>  // b.none
    1fe0:	ldr	d0, [x22]
    1fe4:	mov	x0, #0x0                   	// #0
    1fe8:	fcmp	d0, d0
    1fec:	b.ne	1ffc <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x74>  // b.any
    1ff0:	ldr	d0, [x1]
    1ff4:	fcmp	d0, d0
    1ff8:	cset	x0, eq  // eq = none
    1ffc:	str	x0, [x20, #8]
    2000:	mov	x0, x20
    2004:	ldp	x19, x20, [sp, #16]
    2008:	ldp	x21, x22, [sp, #32]
    200c:	ldp	x23, x24, [sp, #48]
    2010:	ldp	x29, x30, [sp], #112
    2014:	ret
    2018:	ldr	s0, [x22]
    201c:	mov	x2, #0x0                   	// #0
    2020:	fcmp	s0, s0
    2024:	b.ne	2034 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0xac>  // b.any
    2028:	ldr	s0, [x1]
    202c:	fcmp	s0, s0
    2030:	cset	x2, eq  // eq = none
    2034:	mov	x0, x3
    2038:	mov	w3, #0x1                   	// #1
    203c:	add	x1, sp, #0x60
    2040:	str	x2, [sp, #96]
    2044:	str	w3, [sp, #104]
    2048:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    204c:	ldr	w0, [sp, #104]
    2050:	cmp	w0, #0x40
    2054:	b.ls	2000 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x78>  // b.plast
    2058:	ldr	x0, [sp, #96]
    205c:	cbz	x0, 2000 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x78>
    2060:	bl	0 <_ZdaPv>
    2064:	b	2000 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x78>
    2068:	ldp	x1, x0, [x22, #24]
    206c:	stp	x25, x26, [sp, #64]
    2070:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2074:	ldp	x4, x3, [x23, #24]
    2078:	movk	x26, #0xaaab
    207c:	sub	x0, x0, x1
    2080:	asr	x1, x0, #4
    2084:	sub	x3, x3, x4
    2088:	cmp	x3, x0
    208c:	mul	x1, x1, x26
    2090:	b.ne	2220 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x298>  // b.any
    2094:	mov	x0, x2
    2098:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    209c:	ldrb	w0, [x21, #8]
    20a0:	cmp	w0, #0x10
    20a4:	b.ne	21fc <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x274>  // b.any
    20a8:	ldr	x0, [x21, #24]
    20ac:	ldp	x3, x1, [x22, #24]
    20b0:	ldrb	w0, [x0, #8]
    20b4:	cmp	w0, #0x2
    20b8:	b.eq	2160 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x1d8>  // b.none
    20bc:	cmp	x1, x3
    20c0:	b.eq	21f4 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x26c>  // b.none
    20c4:	mov	x21, #0x0                   	// #0
    20c8:	str	x27, [sp, #80]
    20cc:	nop
    20d0:	add	x2, x21, x21, lsl #1
    20d4:	mov	x25, #0x0                   	// #0
    20d8:	ldr	x19, [x20, #24]
    20dc:	lsl	x2, x2, #4
    20e0:	add	x19, x19, x2
    20e4:	ldr	d0, [x3, x2]
    20e8:	fcmp	d0, d0
    20ec:	b.ne	2100 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x178>  // b.any
    20f0:	ldr	x0, [x23, #24]
    20f4:	ldr	d0, [x0, x2]
    20f8:	fcmp	d0, d0
    20fc:	cset	x25, eq  // eq = none
    2100:	ldr	w0, [x19, #16]
    2104:	add	x27, x19, #0x8
    2108:	cmp	w0, #0x40
    210c:	b.ls	2120 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.plast
    2110:	ldr	x0, [x19, #8]
    2114:	cbz	x0, 2120 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x198>
    2118:	bl	0 <_ZdaPv>
    211c:	ldp	x3, x1, [x22, #24]
    2120:	sub	x2, x1, x3
    2124:	str	x25, [x19, #8]
    2128:	add	x21, x21, #0x1
    212c:	asr	x2, x2, #4
    2130:	str	w24, [x27, #8]
    2134:	mul	x2, x2, x26
    2138:	cmp	x21, x2
    213c:	b.cc	20d0 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x148>  // b.lo, b.ul, b.last
    2140:	ldp	x25, x26, [sp, #64]
    2144:	ldr	x27, [sp, #80]
    2148:	mov	x0, x20
    214c:	ldp	x19, x20, [sp, #16]
    2150:	ldp	x21, x22, [sp, #32]
    2154:	ldp	x23, x24, [sp, #48]
    2158:	ldp	x29, x30, [sp], #112
    215c:	ret
    2160:	mov	w21, w24
    2164:	cmp	x1, x3
    2168:	mov	x24, #0x0                   	// #0
    216c:	b.eq	21f4 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x26c>  // b.none
    2170:	str	x27, [sp, #80]
    2174:	nop
    2178:	add	x2, x24, x24, lsl #1
    217c:	mov	x25, #0x0                   	// #0
    2180:	ldr	x19, [x20, #24]
    2184:	lsl	x2, x2, #4
    2188:	add	x19, x19, x2
    218c:	ldr	s0, [x3, x2]
    2190:	fcmp	s0, s0
    2194:	b.ne	21a8 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.any
    2198:	ldr	x0, [x23, #24]
    219c:	ldr	s0, [x0, x2]
    21a0:	fcmp	s0, s0
    21a4:	cset	x25, eq  // eq = none
    21a8:	ldr	w0, [x19, #16]
    21ac:	add	x27, x19, #0x8
    21b0:	cmp	w0, #0x40
    21b4:	b.ls	21c8 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x240>  // b.plast
    21b8:	ldr	x0, [x19, #8]
    21bc:	cbz	x0, 21c8 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x240>
    21c0:	bl	0 <_ZdaPv>
    21c4:	ldp	x3, x1, [x22, #24]
    21c8:	sub	x2, x1, x3
    21cc:	str	x25, [x19, #8]
    21d0:	add	x24, x24, #0x1
    21d4:	asr	x2, x2, #4
    21d8:	str	w21, [x27, #8]
    21dc:	mul	x2, x2, x26
    21e0:	cmp	x24, x2
    21e4:	b.cc	2178 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x1f0>  // b.lo, b.ul, b.last
    21e8:	ldp	x25, x26, [sp, #64]
    21ec:	ldr	x27, [sp, #80]
    21f0:	b	2148 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x1c0>
    21f4:	ldp	x25, x26, [sp, #64]
    21f8:	b	2000 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x78>
    21fc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2200:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2204:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2208:	add	x3, x3, #0x0
    220c:	add	x1, x1, #0x0
    2210:	add	x0, x0, #0x0
    2214:	mov	w2, #0x108                 	// #264
    2218:	str	x27, [sp, #80]
    221c:	bl	0 <__assert_fail>
    2220:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2224:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2228:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    222c:	add	x3, x3, #0x0
    2230:	add	x1, x1, #0x0
    2234:	add	x0, x0, #0x0
    2238:	mov	w2, #0x24e                 	// #590
    223c:	str	x27, [sp, #80]
    2240:	bl	0 <__assert_fail>
    2244:	nop

0000000000002248 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE>:
    2248:	stp	x29, x30, [sp, #-112]!
    224c:	mov	x3, x8
    2250:	mov	x29, sp
    2254:	stp	x21, x22, [sp, #32]
    2258:	mov	x21, x2
    225c:	mov	x2, x8
    2260:	stp	x19, x20, [sp, #16]
    2264:	mov	x22, x0
    2268:	mov	x20, x8
    226c:	stp	x23, x24, [sp, #48]
    2270:	mov	w24, #0x1                   	// #1
    2274:	mov	x23, x1
    2278:	stp	xzr, xzr, [x2, #24]!
    227c:	str	xzr, [x2, #16]
    2280:	str	xzr, [x3], #8
    2284:	ldrb	w0, [x21, #8]
    2288:	str	xzr, [x8, #8]
    228c:	str	w24, [x3, #8]
    2290:	cmp	w0, #0x10
    2294:	b.eq	231c <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0xd4>  // b.none
    2298:	cmp	w0, #0x2
    229c:	b.eq	22d8 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x90>  // b.none
    22a0:	ldr	d0, [x22]
    22a4:	mov	x0, #0x1                   	// #1
    22a8:	fcmp	d0, d0
    22ac:	b.ne	22bc <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x74>  // b.any
    22b0:	ldr	d0, [x1]
    22b4:	fcmp	d0, d0
    22b8:	cset	x0, ne  // ne = any
    22bc:	str	x0, [x20, #8]
    22c0:	mov	x0, x20
    22c4:	ldp	x19, x20, [sp, #16]
    22c8:	ldp	x21, x22, [sp, #32]
    22cc:	ldp	x23, x24, [sp, #48]
    22d0:	ldp	x29, x30, [sp], #112
    22d4:	ret
    22d8:	ldr	s0, [x22]
    22dc:	mov	x2, #0x1                   	// #1
    22e0:	fcmp	s0, s0
    22e4:	b.eq	2410 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x1c8>  // b.none
    22e8:	mov	x0, x3
    22ec:	mov	w3, #0x1                   	// #1
    22f0:	add	x1, sp, #0x60
    22f4:	str	x2, [sp, #96]
    22f8:	str	w3, [sp, #104]
    22fc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2300:	ldr	w0, [sp, #104]
    2304:	cmp	w0, #0x40
    2308:	b.ls	22c0 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x78>  // b.plast
    230c:	ldr	x0, [sp, #96]
    2310:	cbz	x0, 22c0 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x78>
    2314:	bl	0 <_ZdaPv>
    2318:	b	22c0 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x78>
    231c:	ldp	x1, x0, [x22, #24]
    2320:	stp	x25, x26, [sp, #64]
    2324:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2328:	ldp	x4, x3, [x23, #24]
    232c:	movk	x26, #0xaaab
    2330:	sub	x0, x0, x1
    2334:	asr	x1, x0, #4
    2338:	sub	x3, x3, x4
    233c:	cmp	x3, x0
    2340:	mul	x1, x1, x26
    2344:	b.ne	24e0 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x298>  // b.any
    2348:	mov	x0, x2
    234c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2350:	ldrb	w0, [x21, #8]
    2354:	cmp	w0, #0x10
    2358:	b.ne	24bc <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x274>  // b.any
    235c:	ldr	x0, [x21, #24]
    2360:	ldp	x3, x1, [x22, #24]
    2364:	ldrb	w0, [x0, #8]
    2368:	cmp	w0, #0x2
    236c:	b.eq	2420 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x1d8>  // b.none
    2370:	cmp	x1, x3
    2374:	b.eq	24b4 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x26c>  // b.none
    2378:	mov	x21, #0x0                   	// #0
    237c:	str	x27, [sp, #80]
    2380:	add	x2, x21, x21, lsl #1
    2384:	mov	x25, #0x1                   	// #1
    2388:	ldr	x19, [x20, #24]
    238c:	lsl	x2, x2, #4
    2390:	add	x19, x19, x2
    2394:	ldr	d0, [x3, x2]
    2398:	fcmp	d0, d0
    239c:	b.ne	23b0 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.any
    23a0:	ldr	x0, [x23, #24]
    23a4:	ldr	d0, [x0, x2]
    23a8:	fcmp	d0, d0
    23ac:	cset	x25, ne  // ne = any
    23b0:	ldr	w0, [x19, #16]
    23b4:	add	x27, x19, #0x8
    23b8:	cmp	w0, #0x40
    23bc:	b.ls	23d0 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x188>  // b.plast
    23c0:	ldr	x0, [x19, #8]
    23c4:	cbz	x0, 23d0 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x188>
    23c8:	bl	0 <_ZdaPv>
    23cc:	ldp	x3, x1, [x22, #24]
    23d0:	sub	x2, x1, x3
    23d4:	str	x25, [x19, #8]
    23d8:	add	x21, x21, #0x1
    23dc:	asr	x2, x2, #4
    23e0:	str	w24, [x27, #8]
    23e4:	mul	x2, x2, x26
    23e8:	cmp	x21, x2
    23ec:	b.cc	2380 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x138>  // b.lo, b.ul, b.last
    23f0:	ldp	x25, x26, [sp, #64]
    23f4:	ldr	x27, [sp, #80]
    23f8:	mov	x0, x20
    23fc:	ldp	x19, x20, [sp, #16]
    2400:	ldp	x21, x22, [sp, #32]
    2404:	ldp	x23, x24, [sp, #48]
    2408:	ldp	x29, x30, [sp], #112
    240c:	ret
    2410:	ldr	s0, [x1]
    2414:	fcmp	s0, s0
    2418:	cset	x2, ne  // ne = any
    241c:	b	22e8 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0xa0>
    2420:	mov	w21, w24
    2424:	cmp	x1, x3
    2428:	mov	x24, #0x0                   	// #0
    242c:	b.eq	24b4 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x26c>  // b.none
    2430:	str	x27, [sp, #80]
    2434:	nop
    2438:	add	x2, x24, x24, lsl #1
    243c:	mov	x25, #0x1                   	// #1
    2440:	ldr	x19, [x20, #24]
    2444:	lsl	x2, x2, #4
    2448:	add	x19, x19, x2
    244c:	ldr	s0, [x3, x2]
    2450:	fcmp	s0, s0
    2454:	b.ne	2468 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.any
    2458:	ldr	x0, [x23, #24]
    245c:	ldr	s0, [x0, x2]
    2460:	fcmp	s0, s0
    2464:	cset	x25, ne  // ne = any
    2468:	ldr	w0, [x19, #16]
    246c:	add	x27, x19, #0x8
    2470:	cmp	w0, #0x40
    2474:	b.ls	2488 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x240>  // b.plast
    2478:	ldr	x0, [x19, #8]
    247c:	cbz	x0, 2488 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x240>
    2480:	bl	0 <_ZdaPv>
    2484:	ldp	x3, x1, [x22, #24]
    2488:	sub	x2, x1, x3
    248c:	str	x25, [x19, #8]
    2490:	add	x24, x24, #0x1
    2494:	asr	x2, x2, #4
    2498:	str	w21, [x27, #8]
    249c:	mul	x2, x2, x26
    24a0:	cmp	x24, x2
    24a4:	b.cc	2438 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x1f0>  // b.lo, b.ul, b.last
    24a8:	ldp	x25, x26, [sp, #64]
    24ac:	ldr	x27, [sp, #80]
    24b0:	b	23f8 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x1b0>
    24b4:	ldp	x25, x26, [sp, #64]
    24b8:	b	22c0 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x78>
    24bc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    24c0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    24c4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    24c8:	add	x3, x3, #0x0
    24cc:	add	x1, x1, #0x0
    24d0:	add	x0, x0, #0x0
    24d4:	mov	w2, #0x108                 	// #264
    24d8:	str	x27, [sp, #80]
    24dc:	bl	0 <__assert_fail>
    24e0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    24e4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    24e8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    24ec:	add	x3, x3, #0x0
    24f0:	add	x1, x1, #0x0
    24f4:	add	x0, x0, #0x0
    24f8:	mov	w2, #0x26d                 	// #621
    24fc:	str	x27, [sp, #80]
    2500:	bl	0 <__assert_fail>
    2504:	nop

0000000000002508 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>:
    2508:	stp	x29, x30, [sp, #-96]!
    250c:	mov	x3, x8
    2510:	mov	x29, sp
    2514:	stp	x21, x22, [sp, #32]
    2518:	mov	x21, x2
    251c:	mov	x2, x8
    2520:	stp	x19, x20, [sp, #16]
    2524:	mov	x22, x1
    2528:	mov	x20, x8
    252c:	stp	x23, x24, [sp, #48]
    2530:	mov	x23, x0
    2534:	mov	w24, #0x1                   	// #1
    2538:	stp	xzr, xzr, [x2, #24]!
    253c:	str	xzr, [x2, #16]
    2540:	str	xzr, [x3], #8
    2544:	ldrb	w0, [x21, #8]
    2548:	str	xzr, [x8, #8]
    254c:	str	w24, [x3, #8]
    2550:	cmp	w0, #0x3
    2554:	b.eq	25bc <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    2558:	cmp	w0, #0x10
    255c:	b.eq	2614 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x10c>  // b.none
    2560:	cmp	w0, #0x2
    2564:	b.eq	25e8 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
    2568:	stp	x25, x26, [sp, #64]
    256c:	str	x27, [sp, #80]
    2570:	bl	0 <_ZN4llvm4dbgsEv>
    2574:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2578:	add	x1, x1, #0x0
    257c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2580:	mov	x19, x0
    2584:	mov	w2, #0x0                   	// #0
    2588:	mov	w3, #0x0                   	// #0
    258c:	mov	x0, x21
    2590:	mov	x1, x19
    2594:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    2598:	mov	x0, x19
    259c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    25a0:	add	x1, x1, #0x0
    25a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    25a8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    25ac:	mov	w2, #0x183                 	// #387
    25b0:	add	x1, x1, #0x0
    25b4:	mov	x0, #0x0                   	// #0
    25b8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    25bc:	ldr	d0, [x1]
    25c0:	ldr	d1, [x23]
    25c4:	fcmp	d1, d0
    25c8:	cset	x0, eq  // eq = none
    25cc:	str	x0, [x8, #8]
    25d0:	mov	x0, x20
    25d4:	ldp	x19, x20, [sp, #16]
    25d8:	ldp	x21, x22, [sp, #32]
    25dc:	ldp	x23, x24, [sp, #48]
    25e0:	ldp	x29, x30, [sp], #96
    25e4:	ret
    25e8:	ldr	s1, [x23]
    25ec:	ldr	s0, [x1]
    25f0:	fcmp	s1, s0
    25f4:	cset	x0, eq  // eq = none
    25f8:	str	x0, [x8, #8]
    25fc:	mov	x0, x20
    2600:	ldp	x19, x20, [sp, #16]
    2604:	ldp	x21, x22, [sp, #32]
    2608:	ldp	x23, x24, [sp, #48]
    260c:	ldp	x29, x30, [sp], #96
    2610:	ret
    2614:	ldp	x5, x3, [x1, #24]
    2618:	stp	x25, x26, [sp, #64]
    261c:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2620:	ldp	x1, x0, [x23, #24]
    2624:	movk	x25, #0xaaab
    2628:	ldr	x4, [x21, #24]
    262c:	sub	x3, x3, x5
    2630:	sub	x0, x0, x1
    2634:	ldrb	w4, [x4, #8]
    2638:	asr	x1, x0, #4
    263c:	cmp	w4, #0x2
    2640:	mul	x1, x1, x25
    2644:	b.eq	26f8 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x1f0>  // b.none
    2648:	cmp	x3, x0
    264c:	b.ne	27a4 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    2650:	mov	x0, x2
    2654:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2658:	ldp	x1, x4, [x23, #24]
    265c:	cmp	x1, x4
    2660:	b.eq	279c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    2664:	mov	w21, #0x0                   	// #0
    2668:	mov	x2, #0x0                   	// #0
    266c:	str	x27, [sp, #80]
    2670:	add	x2, x2, x2, lsl #1
    2674:	ldr	x0, [x22, #24]
    2678:	lsl	x2, x2, #4
    267c:	ldr	x19, [x20, #24]
    2680:	ldr	d1, [x0, x2]
    2684:	ldr	d0, [x1, x2]
    2688:	add	x19, x19, x2
    268c:	add	x26, x19, #0x8
    2690:	fcmp	d1, d0
    2694:	ldr	w0, [x19, #16]
    2698:	cset	x27, eq  // eq = none
    269c:	cmp	w0, #0x40
    26a0:	b.ls	26b4 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>  // b.plast
    26a4:	ldr	x0, [x19, #8]
    26a8:	cbz	x0, 26b4 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    26ac:	bl	0 <_ZdaPv>
    26b0:	ldp	x1, x4, [x23, #24]
    26b4:	sub	x3, x4, x1
    26b8:	str	x27, [x19, #8]
    26bc:	add	w2, w21, #0x1
    26c0:	asr	x3, x3, #4
    26c4:	str	w24, [x26, #8]
    26c8:	mov	x21, x2
    26cc:	mul	x3, x3, x25
    26d0:	cmp	x3, w2, uxtw
    26d4:	b.hi	2670 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.pmore
    26d8:	ldp	x25, x26, [sp, #64]
    26dc:	ldr	x27, [sp, #80]
    26e0:	mov	x0, x20
    26e4:	ldp	x19, x20, [sp, #16]
    26e8:	ldp	x21, x22, [sp, #32]
    26ec:	ldp	x23, x24, [sp, #48]
    26f0:	ldp	x29, x30, [sp], #96
    26f4:	ret
    26f8:	cmp	x3, x0
    26fc:	b.ne	27a4 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    2700:	mov	x0, x2
    2704:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2708:	ldp	x1, x4, [x23, #24]
    270c:	cmp	x4, x1
    2710:	b.eq	279c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    2714:	mov	w21, w24
    2718:	mov	x2, #0x0                   	// #0
    271c:	mov	w24, #0x0                   	// #0
    2720:	str	x27, [sp, #80]
    2724:	nop
    2728:	add	x2, x2, x2, lsl #1
    272c:	ldr	x0, [x22, #24]
    2730:	lsl	x2, x2, #4
    2734:	ldr	x19, [x20, #24]
    2738:	ldr	s1, [x0, x2]
    273c:	ldr	s0, [x1, x2]
    2740:	add	x19, x19, x2
    2744:	add	x26, x19, #0x8
    2748:	fcmp	s1, s0
    274c:	ldr	w0, [x19, #16]
    2750:	cset	x27, eq  // eq = none
    2754:	cmp	w0, #0x40
    2758:	b.ls	276c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    275c:	ldr	x0, [x19, #8]
    2760:	cbz	x0, 276c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x264>
    2764:	bl	0 <_ZdaPv>
    2768:	ldp	x1, x4, [x23, #24]
    276c:	sub	x3, x4, x1
    2770:	str	x27, [x19, #8]
    2774:	add	w2, w24, #0x1
    2778:	asr	x3, x3, #4
    277c:	str	w21, [x26, #8]
    2780:	mov	x24, x2
    2784:	mul	x3, x3, x25
    2788:	cmp	x3, w2, uxtw
    278c:	b.hi	2728 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.pmore
    2790:	ldp	x25, x26, [sp, #64]
    2794:	ldr	x27, [sp, #80]
    2798:	b	26e0 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x1d8>
    279c:	ldp	x25, x26, [sp, #64]
    27a0:	b	25d0 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    27a4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    27a8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    27ac:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    27b0:	add	x3, x3, #0x0
    27b4:	add	x1, x1, #0x0
    27b8:	add	x0, x0, #0x0
    27bc:	mov	w2, #0x180                 	// #384
    27c0:	str	x27, [sp, #80]
    27c4:	bl	0 <__assert_fail>

00000000000027c8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE>:
    27c8:	stp	x29, x30, [sp, #-352]!
    27cc:	mov	x29, sp
    27d0:	stp	x19, x20, [sp, #16]
    27d4:	mov	x20, x2
    27d8:	ldrb	w2, [x2, #8]
    27dc:	stp	x21, x22, [sp, #32]
    27e0:	mov	x19, x8
    27e4:	mov	x21, x1
    27e8:	stp	x23, x24, [sp, #48]
    27ec:	mov	w24, #0x1                   	// #1
    27f0:	cmp	w2, #0x2
    27f4:	stp	x27, x28, [sp, #80]
    27f8:	mov	x28, x0
    27fc:	stp	xzr, xzr, [sp, #112]
    2800:	str	w24, [sp, #128]
    2804:	stp	xzr, xzr, [sp, #136]
    2808:	str	xzr, [sp, #152]
    280c:	b.eq	28d0 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x108>  // b.none
    2810:	ldr	d0, [x0]
    2814:	fcmp	d0, d0
    2818:	b.ne	287c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    281c:	ldr	d0, [x1]
    2820:	fcmp	d0, d0
    2824:	b.ne	287c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    2828:	cmp	w2, #0x10
    282c:	b.eq	2960 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.none
    2830:	add	x23, sp, #0x130
    2834:	add	x22, sp, #0x70
    2838:	add	x24, sp, #0x100
    283c:	mov	x1, x28
    2840:	mov	x0, x24
    2844:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2848:	mov	x1, x21
    284c:	mov	x0, x23
    2850:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2854:	mov	x8, x19
    2858:	mov	x2, x20
    285c:	mov	x1, x23
    2860:	mov	x0, x24
    2864:	bl	2508 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    2868:	mov	x0, x23
    286c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2870:	mov	x0, x24
    2874:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2878:	b	28ac <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    287c:	mov	x2, x19
    2880:	mov	x0, x19
    2884:	ldr	x3, [sp, #112]
    2888:	mov	x1, #0x1                   	// #1
    288c:	str	x3, [x2], #8
    2890:	add	x22, sp, #0x70
    2894:	str	x1, [sp, #120]
    2898:	str	w1, [x2, #8]
    289c:	str	x1, [x19, #8]
    28a0:	stp	xzr, xzr, [x0, #24]!
    28a4:	str	xzr, [x0, #16]
    28a8:	str	wzr, [sp, #128]
    28ac:	mov	x0, x22
    28b0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    28b4:	mov	x0, x19
    28b8:	ldp	x19, x20, [sp, #16]
    28bc:	ldp	x21, x22, [sp, #32]
    28c0:	ldp	x23, x24, [sp, #48]
    28c4:	ldp	x27, x28, [sp, #80]
    28c8:	ldp	x29, x30, [sp], #352
    28cc:	ret
    28d0:	ldr	s0, [x0]
    28d4:	fcmp	s0, s0
    28d8:	b.ne	28e8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x120>  // b.any
    28dc:	ldr	s0, [x1]
    28e0:	fcmp	s0, s0
    28e4:	b.eq	2830 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x68>  // b.none
    28e8:	mov	w2, #0x1                   	// #1
    28ec:	mov	x3, #0x1                   	// #1
    28f0:	add	x22, sp, #0x70
    28f4:	add	x1, sp, #0x130
    28f8:	add	x0, x22, #0x8
    28fc:	str	x3, [sp, #304]
    2900:	str	w2, [sp, #312]
    2904:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2908:	ldr	w0, [sp, #312]
    290c:	cmp	w0, #0x40
    2910:	b.ls	2920 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x158>  // b.plast
    2914:	ldr	x0, [sp, #304]
    2918:	cbz	x0, 2920 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x158>
    291c:	bl	0 <_ZdaPv>
    2920:	mov	x1, x19
    2924:	ldr	w2, [sp, #128]
    2928:	ldr	x3, [sp, #112]
    292c:	mov	x0, x19
    2930:	str	x3, [x1], #8
    2934:	ldur	q0, [sp, #136]
    2938:	str	w2, [x1, #8]
    293c:	ldr	x1, [sp, #120]
    2940:	str	x1, [x19, #8]
    2944:	ldr	x1, [sp, #152]
    2948:	str	q0, [x0, #24]!
    294c:	str	x1, [x0, #16]
    2950:	str	wzr, [sp, #128]
    2954:	stp	xzr, xzr, [sp, #136]
    2958:	str	xzr, [sp, #152]
    295c:	b	28ac <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    2960:	mov	x0, x20
    2964:	stp	x25, x26, [sp, #64]
    2968:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    296c:	ldp	x2, x1, [x28, #24]
    2970:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2974:	ldr	x4, [x0, #24]
    2978:	movk	x25, #0xaaab
    297c:	ldr	x5, [x21, #24]
    2980:	sub	x0, x1, x2
    2984:	ldrb	w4, [x4, #8]
    2988:	ldr	x2, [x21, #32]
    298c:	asr	x1, x0, #4
    2990:	cmp	w4, #0x2
    2994:	sub	x2, x2, x5
    2998:	mul	x1, x1, x25
    299c:	b.eq	2a58 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x290>  // b.none
    29a0:	cmp	x2, x0
    29a4:	b.ne	2cb0 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    29a8:	add	x22, sp, #0x70
    29ac:	add	x23, sp, #0x130
    29b0:	add	x0, x22, #0x18
    29b4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    29b8:	ldp	x2, x0, [x28, #24]
    29bc:	mov	w27, #0x0                   	// #0
    29c0:	mov	x1, #0x0                   	// #0
    29c4:	mov	x26, #0x1                   	// #1
    29c8:	cmp	x0, x2
    29cc:	b.ne	2a1c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x254>  // b.any
    29d0:	b	2b10 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x348>
    29d4:	mov	x1, x23
    29d8:	str	x26, [sp, #304]
    29dc:	str	w24, [sp, #312]
    29e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    29e4:	ldr	w0, [sp, #312]
    29e8:	cmp	w0, #0x40
    29ec:	b.ls	29fc <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x234>  // b.plast
    29f0:	ldr	x0, [sp, #304]
    29f4:	cbz	x0, 29fc <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x234>
    29f8:	bl	0 <_ZdaPv>
    29fc:	ldp	x2, x0, [x28, #24]
    2a00:	add	w1, w27, #0x1
    2a04:	mov	x27, x1
    2a08:	sub	x0, x0, x2
    2a0c:	asr	x0, x0, #4
    2a10:	mul	x0, x0, x25
    2a14:	cmp	x0, w1, uxtw
    2a18:	b.ls	2b10 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x348>  // b.plast
    2a1c:	add	x1, x1, x1, lsl #1
    2a20:	ldr	x0, [sp, #136]
    2a24:	lsl	x1, x1, #4
    2a28:	add	x0, x0, x1
    2a2c:	ldr	d0, [x2, x1]
    2a30:	add	x0, x0, #0x8
    2a34:	fcmp	d0, d0
    2a38:	b.ne	29d4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x20c>  // b.any
    2a3c:	ldr	x2, [x21, #24]
    2a40:	ldr	d0, [x2, x1]
    2a44:	fcmp	d0, d0
    2a48:	b.ne	29d4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x20c>  // b.any
    2a4c:	mov	x1, x23
    2a50:	str	xzr, [sp, #304]
    2a54:	b	29dc <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x214>
    2a58:	cmp	x2, x0
    2a5c:	b.ne	2cb0 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    2a60:	add	x22, sp, #0x70
    2a64:	add	x23, sp, #0x130
    2a68:	add	x0, x22, #0x18
    2a6c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2a70:	ldp	x2, x0, [x28, #24]
    2a74:	mov	w27, #0x0                   	// #0
    2a78:	mov	x1, #0x0                   	// #0
    2a7c:	mov	x26, #0x1                   	// #1
    2a80:	cmp	x2, x0
    2a84:	b.ne	2ad4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x30c>  // b.any
    2a88:	b	2b10 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x348>
    2a8c:	mov	x1, x23
    2a90:	str	x26, [sp, #304]
    2a94:	str	w24, [sp, #312]
    2a98:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2a9c:	ldr	w0, [sp, #312]
    2aa0:	cmp	w0, #0x40
    2aa4:	b.ls	2ab4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2ec>  // b.plast
    2aa8:	ldr	x0, [sp, #304]
    2aac:	cbz	x0, 2ab4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2ec>
    2ab0:	bl	0 <_ZdaPv>
    2ab4:	ldp	x2, x0, [x28, #24]
    2ab8:	add	w1, w27, #0x1
    2abc:	mov	x27, x1
    2ac0:	sub	x0, x0, x2
    2ac4:	asr	x0, x0, #4
    2ac8:	mul	x0, x0, x25
    2acc:	cmp	x0, w1, uxtw
    2ad0:	b.ls	2b10 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x348>  // b.plast
    2ad4:	add	x1, x1, x1, lsl #1
    2ad8:	ldr	x0, [sp, #136]
    2adc:	lsl	x1, x1, #4
    2ae0:	add	x0, x0, x1
    2ae4:	ldr	s0, [x2, x1]
    2ae8:	add	x0, x0, #0x8
    2aec:	fcmp	s0, s0
    2af0:	b.ne	2a8c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2c4>  // b.any
    2af4:	ldr	x2, [x21, #24]
    2af8:	ldr	s0, [x2, x1]
    2afc:	fcmp	s0, s0
    2b00:	b.ne	2a8c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2c4>  // b.any
    2b04:	mov	x1, x23
    2b08:	str	xzr, [sp, #304]
    2b0c:	b	2a94 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2cc>
    2b10:	ldrb	w0, [x20, #8]
    2b14:	cmp	w0, #0x10
    2b18:	b.ne	2cd0 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x508>  // b.any
    2b1c:	add	x24, sp, #0xd0
    2b20:	add	x0, sp, #0xa0
    2b24:	mov	x1, x22
    2b28:	str	x0, [sp, #104]
    2b2c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2b30:	add	x25, sp, #0x100
    2b34:	mov	x0, x24
    2b38:	mov	x1, x28
    2b3c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2b40:	mov	x0, x25
    2b44:	mov	x1, x21
    2b48:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2b4c:	mov	x8, x23
    2b50:	mov	x1, x25
    2b54:	mov	x0, x24
    2b58:	mov	x2, x20
    2b5c:	bl	2508 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    2b60:	ldr	x2, [sp, #304]
    2b64:	add	x1, x23, #0x8
    2b68:	add	x0, x22, #0x8
    2b6c:	str	x2, [sp, #112]
    2b70:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2b74:	add	x1, x23, #0x18
    2b78:	add	x0, x22, #0x18
    2b7c:	bl	5a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    2b80:	mov	x0, x23
    2b84:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2b88:	mov	x0, x25
    2b8c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2b90:	mov	x0, x24
    2b94:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2b98:	ldp	x25, x24, [x28, #24]
    2b9c:	ldr	x0, [sp, #136]
    2ba0:	str	x0, [sp, #96]
    2ba4:	cmp	x24, x25
    2ba8:	b.eq	2c60 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x498>  // b.none
    2bac:	mov	x20, #0x0                   	// #0
    2bb0:	mov	x21, #0x0                   	// #0
    2bb4:	b	2bdc <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x414>
    2bb8:	sub	x1, x24, x25
    2bbc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2bc0:	movk	x0, #0xaaab
    2bc4:	add	x21, x21, #0x1
    2bc8:	asr	x1, x1, #4
    2bcc:	add	x20, x20, #0x30
    2bd0:	mul	x1, x1, x0
    2bd4:	cmp	x21, x1
    2bd8:	b.cs	2c60 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x498>  // b.hs, b.nlast
    2bdc:	ldr	x0, [sp, #184]
    2be0:	add	x0, x0, x20
    2be4:	add	x26, x0, #0x8
    2be8:	ldr	w27, [x0, #16]
    2bec:	cmp	w27, #0x40
    2bf0:	b.ls	2c08 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x440>  // b.plast
    2bf4:	mov	x0, x26
    2bf8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    2bfc:	sub	w1, w27, w0
    2c00:	cmp	w1, #0x40
    2c04:	b.hi	2bb8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.pmore
    2c08:	mov	x0, x26
    2c0c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2c10:	mov	x2, x0
    2c14:	cmp	x0, #0x1
    2c18:	b.ne	2bb8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.any
    2c1c:	ldr	x0, [sp, #96]
    2c20:	mov	x1, x23
    2c24:	str	x2, [sp, #304]
    2c28:	add	x0, x0, x20
    2c2c:	str	w2, [sp, #312]
    2c30:	add	x0, x0, #0x8
    2c34:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2c38:	ldr	w0, [sp, #312]
    2c3c:	cmp	w0, #0x40
    2c40:	b.ls	2c50 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x488>  // b.plast
    2c44:	ldr	x0, [sp, #304]
    2c48:	cbz	x0, 2c50 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x488>
    2c4c:	bl	0 <_ZdaPv>
    2c50:	ldr	x0, [sp, #136]
    2c54:	str	x0, [sp, #96]
    2c58:	ldp	x25, x24, [x28, #24]
    2c5c:	b	2bb8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>
    2c60:	mov	x2, x19
    2c64:	ldr	w3, [sp, #128]
    2c68:	ldr	x0, [sp, #112]
    2c6c:	str	wzr, [sp, #128]
    2c70:	str	x0, [x2], #8
    2c74:	ldr	x0, [sp, #104]
    2c78:	str	w3, [x2, #8]
    2c7c:	ldr	x2, [sp, #120]
    2c80:	str	x2, [x19, #8]
    2c84:	ldr	x2, [sp, #96]
    2c88:	str	x2, [x19, #24]
    2c8c:	ldr	x2, [sp, #144]
    2c90:	str	x2, [x19, #32]
    2c94:	ldr	x2, [sp, #152]
    2c98:	str	x2, [x19, #40]
    2c9c:	stp	xzr, xzr, [sp, #136]
    2ca0:	str	xzr, [sp, #152]
    2ca4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2ca8:	ldp	x25, x26, [sp, #64]
    2cac:	b	28ac <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    2cb0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2cb4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2cb8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2cbc:	add	x3, x3, #0x0
    2cc0:	add	x1, x1, #0x0
    2cc4:	add	x0, x0, #0x0
    2cc8:	mov	w2, #0x217                 	// #535
    2ccc:	bl	0 <__assert_fail>
    2cd0:	ldp	x25, x26, [sp, #64]
    2cd4:	b	2838 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x70>

0000000000002cd8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>:
    2cd8:	stp	x29, x30, [sp, #-176]!
    2cdc:	mov	x29, sp
    2ce0:	stp	x27, x28, [sp, #80]
    2ce4:	mov	x27, x8
    2ce8:	add	x28, x8, #0x8
    2cec:	stp	x19, x20, [sp, #16]
    2cf0:	mov	x20, x0
    2cf4:	mov	x19, x8
    2cf8:	stp	x21, x22, [sp, #32]
    2cfc:	mov	x22, x2
    2d00:	mov	x21, x1
    2d04:	stp	x23, x24, [sp, #48]
    2d08:	mov	w24, #0x1                   	// #1
    2d0c:	stp	xzr, xzr, [x27, #24]!
    2d10:	str	xzr, [x27, #16]
    2d14:	stp	xzr, xzr, [x8]
    2d18:	ldrb	w0, [x2, #8]
    2d1c:	str	w24, [x28, #8]
    2d20:	cmp	w0, #0x2
    2d24:	b.eq	2e38 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x160>  // b.none
    2d28:	ldr	d0, [x20]
    2d2c:	fcmp	d0, d0
    2d30:	b.ne	2e50 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x178>  // b.any
    2d34:	ldr	d0, [x1]
    2d38:	fcmp	d0, d0
    2d3c:	b.ne	2e50 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x178>  // b.any
    2d40:	cmp	w0, #0x10
    2d44:	b.ne	2e9c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1c4>  // b.any
    2d48:	mov	x0, x2
    2d4c:	stp	x25, x26, [sp, #64]
    2d50:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2d54:	ldp	x2, x1, [x20, #24]
    2d58:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2d5c:	ldr	x3, [x0, #24]
    2d60:	movk	x25, #0xaaab
    2d64:	sub	x0, x1, x2
    2d68:	ldrb	w3, [x3, #8]
    2d6c:	ldp	x4, x2, [x21, #24]
    2d70:	asr	x1, x0, #4
    2d74:	cmp	w3, #0x2
    2d78:	mul	x1, x1, x25
    2d7c:	sub	x2, x2, x4
    2d80:	b.eq	316c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x494>  // b.none
    2d84:	cmp	x2, x0
    2d88:	b.ne	32f8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x620>  // b.any
    2d8c:	mov	x0, x27
    2d90:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2d94:	ldp	x3, x0, [x20, #24]
    2d98:	add	x23, sp, #0x80
    2d9c:	mov	w26, #0x0                   	// #0
    2da0:	mov	x1, #0x0                   	// #0
    2da4:	cmp	x3, x0
    2da8:	b.ne	2df8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x120>  // b.any
    2dac:	b	32c8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5f0>
    2db0:	mov	x1, x23
    2db4:	str	xzr, [sp, #128]
    2db8:	str	w24, [sp, #136]
    2dbc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2dc0:	ldr	w0, [sp, #136]
    2dc4:	cmp	w0, #0x40
    2dc8:	b.ls	2dd8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x100>  // b.plast
    2dcc:	ldr	x0, [sp, #128]
    2dd0:	cbz	x0, 2dd8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x100>
    2dd4:	bl	0 <_ZdaPv>
    2dd8:	ldp	x3, x0, [x20, #24]
    2ddc:	add	w1, w26, #0x1
    2de0:	mov	x26, x1
    2de4:	sub	x0, x0, x3
    2de8:	asr	x0, x0, #4
    2dec:	mul	x0, x0, x25
    2df0:	cmp	x0, w1, uxtw
    2df4:	b.ls	3164 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x48c>  // b.plast
    2df8:	add	x1, x1, x1, lsl #1
    2dfc:	ldr	x0, [x19, #24]
    2e00:	lsl	x1, x1, #4
    2e04:	add	x0, x0, x1
    2e08:	ldr	d0, [x3, x1]
    2e0c:	add	x0, x0, #0x8
    2e10:	fcmp	d0, d0
    2e14:	b.ne	2db0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0xd8>  // b.any
    2e18:	ldr	x3, [x21, #24]
    2e1c:	ldr	d0, [x3, x1]
    2e20:	fcmp	d0, d0
    2e24:	b.ne	2db0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0xd8>  // b.any
    2e28:	mov	x2, #0x1                   	// #1
    2e2c:	mov	x1, x23
    2e30:	str	x2, [sp, #128]
    2e34:	b	2db8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>
    2e38:	ldr	s0, [x20]
    2e3c:	fcmp	s0, s0
    2e40:	b.ne	2e50 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x178>  // b.any
    2e44:	ldr	s0, [x1]
    2e48:	fcmp	s0, s0
    2e4c:	b.eq	2e9c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1c4>  // b.none
    2e50:	mov	w2, #0x1                   	// #1
    2e54:	mov	x0, x28
    2e58:	add	x1, sp, #0x80
    2e5c:	str	xzr, [sp, #128]
    2e60:	str	w2, [sp, #136]
    2e64:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2e68:	ldr	w0, [sp, #136]
    2e6c:	cmp	w0, #0x40
    2e70:	b.ls	2e80 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1a8>  // b.plast
    2e74:	ldr	x0, [sp, #128]
    2e78:	cbz	x0, 2e80 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1a8>
    2e7c:	bl	0 <_ZdaPv>
    2e80:	mov	x0, x19
    2e84:	ldp	x19, x20, [sp, #16]
    2e88:	ldp	x21, x22, [sp, #32]
    2e8c:	ldp	x23, x24, [sp, #48]
    2e90:	ldp	x27, x28, [sp, #80]
    2e94:	ldp	x29, x30, [sp], #176
    2e98:	ret
    2e9c:	add	x23, sp, #0x80
    2ea0:	mov	x0, x23
    2ea4:	mov	x1, x19
    2ea8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2eac:	ldrb	w0, [x22, #8]
    2eb0:	cmp	w0, #0x3
    2eb4:	b.eq	3064 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x38c>  // b.none
    2eb8:	cmp	w0, #0x10
    2ebc:	b.eq	2f88 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x2b0>  // b.none
    2ec0:	cmp	w0, #0x2
    2ec4:	b.eq	2f18 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x240>  // b.none
    2ec8:	stp	x25, x26, [sp, #64]
    2ecc:	bl	0 <_ZN4llvm4dbgsEv>
    2ed0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2ed4:	add	x1, x1, #0x0
    2ed8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2edc:	mov	w2, #0x0                   	// #0
    2ee0:	mov	x19, x0
    2ee4:	mov	w3, #0x0                   	// #0
    2ee8:	mov	x0, x22
    2eec:	mov	x1, x19
    2ef0:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    2ef4:	mov	x0, x19
    2ef8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2efc:	add	x1, x1, #0x0
    2f00:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2f04:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2f08:	mov	w2, #0x1bb                 	// #443
    2f0c:	add	x1, x1, #0x0
    2f10:	mov	x0, #0x0                   	// #0
    2f14:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    2f18:	ldr	s1, [x20]
    2f1c:	mov	x0, x28
    2f20:	ldr	s0, [x21]
    2f24:	add	x1, sp, #0x70
    2f28:	mov	w2, #0x1                   	// #1
    2f2c:	str	w2, [sp, #120]
    2f30:	fcmp	s1, s0
    2f34:	cset	x2, ne  // ne = any
    2f38:	str	x2, [sp, #112]
    2f3c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2f40:	ldr	w0, [sp, #120]
    2f44:	cmp	w0, #0x40
    2f48:	b.ls	2f58 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x280>  // b.plast
    2f4c:	ldr	x0, [sp, #112]
    2f50:	cbz	x0, 2f58 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x280>
    2f54:	bl	0 <_ZdaPv>
    2f58:	ldrb	w0, [x22, #8]
    2f5c:	cmp	w0, #0x10
    2f60:	b.eq	3084 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>  // b.none
    2f64:	mov	x0, x23
    2f68:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2f6c:	mov	x0, x19
    2f70:	ldp	x19, x20, [sp, #16]
    2f74:	ldp	x21, x22, [sp, #32]
    2f78:	ldp	x23, x24, [sp, #48]
    2f7c:	ldp	x27, x28, [sp, #80]
    2f80:	ldp	x29, x30, [sp], #176
    2f84:	ret
    2f88:	mov	x0, x22
    2f8c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2f90:	ldp	x2, x1, [x20, #24]
    2f94:	mov	x28, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2f98:	ldr	x3, [x0, #24]
    2f9c:	movk	x28, #0xaaab
    2fa0:	sub	x0, x1, x2
    2fa4:	ldrb	w3, [x3, #8]
    2fa8:	ldp	x4, x2, [x21, #24]
    2fac:	asr	x1, x0, #4
    2fb0:	cmp	w3, #0x2
    2fb4:	mul	x1, x1, x28
    2fb8:	sub	x2, x2, x4
    2fbc:	b.eq	3220 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x548>  // b.none
    2fc0:	cmp	x2, x0
    2fc4:	b.ne	32d4 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5fc>  // b.any
    2fc8:	mov	x0, x27
    2fcc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    2fd0:	ldp	x2, x3, [x20, #24]
    2fd4:	cmp	x2, x3
    2fd8:	b.eq	2f64 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.none
    2fdc:	mov	x0, #0x0                   	// #0
    2fe0:	mov	w4, #0x1                   	// #1
    2fe4:	stp	x25, x26, [sp, #64]
    2fe8:	mov	w25, #0x0                   	// #0
    2fec:	nop
    2ff0:	add	x0, x0, x0, lsl #1
    2ff4:	ldr	x1, [x21, #24]
    2ff8:	lsl	x0, x0, #4
    2ffc:	ldr	x24, [x19, #24]
    3000:	ldr	d0, [x2, x0]
    3004:	ldr	d1, [x1, x0]
    3008:	add	x24, x24, x0
    300c:	add	x26, x24, #0x8
    3010:	fcmp	d1, d0
    3014:	ldr	w0, [x24, #16]
    3018:	cset	x27, ne  // ne = any
    301c:	cmp	w0, #0x40
    3020:	b.ls	3038 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x360>  // b.plast
    3024:	ldr	x0, [x24, #8]
    3028:	cbz	x0, 3038 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x360>
    302c:	bl	0 <_ZdaPv>
    3030:	ldp	x2, x3, [x20, #24]
    3034:	mov	w4, #0x1                   	// #1
    3038:	sub	x1, x3, x2
    303c:	str	x27, [x24, #8]
    3040:	add	w0, w25, #0x1
    3044:	str	w4, [x26, #8]
    3048:	asr	x1, x1, #4
    304c:	mov	x25, x0
    3050:	mul	x1, x1, x28
    3054:	cmp	x1, w0, uxtw
    3058:	b.hi	2ff0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x318>  // b.pmore
    305c:	ldp	x25, x26, [sp, #64]
    3060:	b	2f58 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x280>
    3064:	ldr	d1, [x20]
    3068:	mov	w2, #0x1                   	// #1
    306c:	ldr	d0, [x21]
    3070:	mov	x0, x28
    3074:	add	x1, sp, #0x70
    3078:	str	w2, [sp, #120]
    307c:	fcmp	d1, d0
    3080:	b	2f34 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x25c>
    3084:	stp	x25, x26, [sp, #64]
    3088:	ldp	x24, x25, [x20, #24]
    308c:	cmp	x24, x25
    3090:	b.eq	315c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x484>  // b.none
    3094:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3098:	add	x0, sp, #0x70
    309c:	mov	x21, #0x0                   	// #0
    30a0:	mov	x22, #0x0                   	// #0
    30a4:	movk	x26, #0xaaab
    30a8:	str	x0, [sp, #104]
    30ac:	b	30cc <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x3f4>
    30b0:	sub	x0, x25, x24
    30b4:	add	x22, x22, #0x1
    30b8:	add	x21, x21, #0x30
    30bc:	asr	x0, x0, #4
    30c0:	mul	x0, x0, x26
    30c4:	cmp	x22, x0
    30c8:	b.cs	315c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x484>  // b.hs, b.nlast
    30cc:	ldr	x0, [sp, #152]
    30d0:	add	x0, x0, x21
    30d4:	add	x27, x0, #0x8
    30d8:	ldr	w28, [x0, #16]
    30dc:	cmp	w28, #0x40
    30e0:	b.ls	30f8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x420>  // b.plast
    30e4:	mov	x0, x27
    30e8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    30ec:	sub	w1, w28, w0
    30f0:	cmp	w1, #0x40
    30f4:	b.hi	30b0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x3d8>  // b.pmore
    30f8:	mov	x0, x27
    30fc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3100:	cbnz	x0, 30b0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x3d8>
    3104:	ldr	x0, [x19, #24]
    3108:	mov	w2, #0x1                   	// #1
    310c:	ldr	x1, [sp, #104]
    3110:	add	x0, x0, x21
    3114:	add	x0, x0, #0x8
    3118:	str	xzr, [sp, #112]
    311c:	str	w2, [sp, #120]
    3120:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3124:	ldr	w0, [sp, #120]
    3128:	cmp	w0, #0x40
    312c:	b.ls	313c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x464>  // b.plast
    3130:	ldr	x0, [sp, #112]
    3134:	cbz	x0, 313c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x464>
    3138:	bl	0 <_ZdaPv>
    313c:	ldp	x24, x25, [x20, #24]
    3140:	add	x22, x22, #0x1
    3144:	add	x21, x21, #0x30
    3148:	sub	x0, x25, x24
    314c:	asr	x0, x0, #4
    3150:	mul	x0, x0, x26
    3154:	cmp	x22, x0
    3158:	b.cc	30cc <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x3f4>  // b.lo, b.ul, b.last
    315c:	ldp	x25, x26, [sp, #64]
    3160:	b	2f64 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x28c>
    3164:	ldp	x25, x26, [sp, #64]
    3168:	b	2ea0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1c8>
    316c:	cmp	x2, x0
    3170:	b.ne	32f8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x620>  // b.any
    3174:	mov	x0, x27
    3178:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    317c:	ldp	x3, x0, [x20, #24]
    3180:	add	x23, sp, #0x80
    3184:	mov	w26, #0x0                   	// #0
    3188:	mov	x1, #0x0                   	// #0
    318c:	cmp	x3, x0
    3190:	b.ne	31e0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x508>  // b.any
    3194:	b	32c8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5f0>
    3198:	mov	x1, x23
    319c:	str	xzr, [sp, #128]
    31a0:	str	w24, [sp, #136]
    31a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    31a8:	ldr	w0, [sp, #136]
    31ac:	cmp	w0, #0x40
    31b0:	b.ls	31c0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.plast
    31b4:	ldr	x0, [sp, #128]
    31b8:	cbz	x0, 31c0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>
    31bc:	bl	0 <_ZdaPv>
    31c0:	ldp	x3, x0, [x20, #24]
    31c4:	add	w1, w26, #0x1
    31c8:	mov	x26, x1
    31cc:	sub	x0, x0, x3
    31d0:	asr	x0, x0, #4
    31d4:	mul	x0, x0, x25
    31d8:	cmp	x0, w1, uxtw
    31dc:	b.ls	3164 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x48c>  // b.plast
    31e0:	add	x1, x1, x1, lsl #1
    31e4:	ldr	x0, [x19, #24]
    31e8:	lsl	x1, x1, #4
    31ec:	add	x0, x0, x1
    31f0:	ldr	s0, [x3, x1]
    31f4:	add	x0, x0, #0x8
    31f8:	fcmp	s0, s0
    31fc:	b.ne	3198 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x4c0>  // b.any
    3200:	ldr	x3, [x21, #24]
    3204:	ldr	s0, [x3, x1]
    3208:	fcmp	s0, s0
    320c:	b.ne	3198 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x4c0>  // b.any
    3210:	mov	x2, #0x1                   	// #1
    3214:	mov	x1, x23
    3218:	str	x2, [sp, #128]
    321c:	b	31a0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x4c8>
    3220:	cmp	x2, x0
    3224:	b.ne	32d4 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5fc>  // b.any
    3228:	mov	x0, x27
    322c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3230:	ldp	x3, x0, [x20, #24]
    3234:	cmp	x3, x0
    3238:	b.eq	2f64 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.none
    323c:	stp	x25, x26, [sp, #64]
    3240:	add	x26, sp, #0x70
    3244:	mov	w27, #0x0                   	// #0
    3248:	mov	x0, #0x0                   	// #0
    324c:	mov	w25, #0x1                   	// #1
    3250:	add	x0, x0, x0, lsl #1
    3254:	mov	x1, x26
    3258:	ldr	x4, [x21, #24]
    325c:	lsl	x0, x0, #4
    3260:	ldr	x2, [x19, #24]
    3264:	str	w25, [sp, #120]
    3268:	ldr	s0, [x3, x0]
    326c:	ldr	s1, [x4, x0]
    3270:	add	x0, x2, x0
    3274:	add	x0, x0, #0x8
    3278:	fcmp	s1, s0
    327c:	cset	x2, ne  // ne = any
    3280:	str	x2, [sp, #112]
    3284:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3288:	ldr	w0, [sp, #120]
    328c:	cmp	w0, #0x40
    3290:	b.ls	32a0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5c8>  // b.plast
    3294:	ldr	x0, [sp, #112]
    3298:	cbz	x0, 32a0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5c8>
    329c:	bl	0 <_ZdaPv>
    32a0:	ldp	x3, x1, [x20, #24]
    32a4:	add	w0, w27, #0x1
    32a8:	mov	x27, x0
    32ac:	sub	x1, x1, x3
    32b0:	asr	x1, x1, #4
    32b4:	mul	x1, x1, x28
    32b8:	cmp	x1, w0, uxtw
    32bc:	b.hi	3250 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x578>  // b.pmore
    32c0:	ldp	x25, x26, [sp, #64]
    32c4:	b	2f58 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x280>
    32c8:	add	x23, sp, #0x80
    32cc:	ldp	x25, x26, [sp, #64]
    32d0:	b	2ea0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1c8>
    32d4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    32d8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    32dc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    32e0:	add	x3, x3, #0x0
    32e4:	add	x1, x1, #0x0
    32e8:	add	x0, x0, #0x0
    32ec:	mov	w2, #0x1b8                 	// #440
    32f0:	stp	x25, x26, [sp, #64]
    32f4:	bl	0 <__assert_fail>
    32f8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    32fc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3300:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3304:	add	x3, x3, #0x0
    3308:	add	x1, x1, #0x0
    330c:	add	x0, x0, #0x0
    3310:	mov	w2, #0x1b3                 	// #435
    3314:	bl	0 <__assert_fail>

0000000000003318 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE>:
    3318:	stp	x29, x30, [sp, #-352]!
    331c:	mov	x29, sp
    3320:	stp	x19, x20, [sp, #16]
    3324:	mov	x20, x2
    3328:	ldrb	w2, [x2, #8]
    332c:	stp	x21, x22, [sp, #32]
    3330:	mov	x19, x8
    3334:	mov	x21, x1
    3338:	stp	x23, x24, [sp, #48]
    333c:	mov	w24, #0x1                   	// #1
    3340:	cmp	w2, #0x2
    3344:	stp	x27, x28, [sp, #80]
    3348:	mov	x28, x0
    334c:	stp	xzr, xzr, [sp, #112]
    3350:	str	w24, [sp, #128]
    3354:	stp	xzr, xzr, [sp, #136]
    3358:	str	xzr, [sp, #152]
    335c:	b.eq	3420 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x108>  // b.none
    3360:	ldr	d0, [x0]
    3364:	fcmp	d0, d0
    3368:	b.ne	33cc <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    336c:	ldr	d0, [x1]
    3370:	fcmp	d0, d0
    3374:	b.ne	33cc <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    3378:	cmp	w2, #0x10
    337c:	b.eq	34b0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.none
    3380:	add	x23, sp, #0x130
    3384:	add	x22, sp, #0x70
    3388:	add	x24, sp, #0x100
    338c:	mov	x1, x28
    3390:	mov	x0, x24
    3394:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3398:	mov	x1, x21
    339c:	mov	x0, x23
    33a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    33a4:	mov	x8, x19
    33a8:	mov	x2, x20
    33ac:	mov	x1, x23
    33b0:	mov	x0, x24
    33b4:	bl	2cd8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    33b8:	mov	x0, x23
    33bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    33c0:	mov	x0, x24
    33c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    33c8:	b	33fc <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    33cc:	mov	x2, x19
    33d0:	mov	x0, x19
    33d4:	ldr	x3, [sp, #112]
    33d8:	mov	x1, #0x1                   	// #1
    33dc:	str	x3, [x2], #8
    33e0:	add	x22, sp, #0x70
    33e4:	str	x1, [sp, #120]
    33e8:	str	w1, [x2, #8]
    33ec:	str	x1, [x19, #8]
    33f0:	stp	xzr, xzr, [x0, #24]!
    33f4:	str	xzr, [x0, #16]
    33f8:	str	wzr, [sp, #128]
    33fc:	mov	x0, x22
    3400:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3404:	mov	x0, x19
    3408:	ldp	x19, x20, [sp, #16]
    340c:	ldp	x21, x22, [sp, #32]
    3410:	ldp	x23, x24, [sp, #48]
    3414:	ldp	x27, x28, [sp, #80]
    3418:	ldp	x29, x30, [sp], #352
    341c:	ret
    3420:	ldr	s0, [x0]
    3424:	fcmp	s0, s0
    3428:	b.ne	3438 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x120>  // b.any
    342c:	ldr	s0, [x1]
    3430:	fcmp	s0, s0
    3434:	b.eq	3380 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x68>  // b.none
    3438:	mov	w2, #0x1                   	// #1
    343c:	mov	x3, #0x1                   	// #1
    3440:	add	x22, sp, #0x70
    3444:	add	x1, sp, #0x130
    3448:	add	x0, x22, #0x8
    344c:	str	x3, [sp, #304]
    3450:	str	w2, [sp, #312]
    3454:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3458:	ldr	w0, [sp, #312]
    345c:	cmp	w0, #0x40
    3460:	b.ls	3470 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x158>  // b.plast
    3464:	ldr	x0, [sp, #304]
    3468:	cbz	x0, 3470 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x158>
    346c:	bl	0 <_ZdaPv>
    3470:	mov	x1, x19
    3474:	ldr	w2, [sp, #128]
    3478:	ldr	x3, [sp, #112]
    347c:	mov	x0, x19
    3480:	str	x3, [x1], #8
    3484:	ldur	q0, [sp, #136]
    3488:	str	w2, [x1, #8]
    348c:	ldr	x1, [sp, #120]
    3490:	str	x1, [x19, #8]
    3494:	ldr	x1, [sp, #152]
    3498:	str	q0, [x0, #24]!
    349c:	str	x1, [x0, #16]
    34a0:	str	wzr, [sp, #128]
    34a4:	stp	xzr, xzr, [sp, #136]
    34a8:	str	xzr, [sp, #152]
    34ac:	b	33fc <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    34b0:	mov	x0, x20
    34b4:	stp	x25, x26, [sp, #64]
    34b8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    34bc:	ldp	x2, x1, [x28, #24]
    34c0:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    34c4:	ldr	x4, [x0, #24]
    34c8:	movk	x25, #0xaaab
    34cc:	ldr	x5, [x21, #24]
    34d0:	sub	x0, x1, x2
    34d4:	ldrb	w4, [x4, #8]
    34d8:	ldr	x2, [x21, #32]
    34dc:	asr	x1, x0, #4
    34e0:	cmp	w4, #0x2
    34e4:	sub	x2, x2, x5
    34e8:	mul	x1, x1, x25
    34ec:	b.eq	35a8 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x290>  // b.none
    34f0:	cmp	x2, x0
    34f4:	b.ne	3800 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    34f8:	add	x22, sp, #0x70
    34fc:	add	x23, sp, #0x130
    3500:	add	x0, x22, #0x18
    3504:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3508:	ldp	x2, x0, [x28, #24]
    350c:	mov	w27, #0x0                   	// #0
    3510:	mov	x1, #0x0                   	// #0
    3514:	mov	x26, #0x1                   	// #1
    3518:	cmp	x0, x2
    351c:	b.ne	356c <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x254>  // b.any
    3520:	b	3660 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x348>
    3524:	mov	x1, x23
    3528:	str	x26, [sp, #304]
    352c:	str	w24, [sp, #312]
    3530:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3534:	ldr	w0, [sp, #312]
    3538:	cmp	w0, #0x40
    353c:	b.ls	354c <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x234>  // b.plast
    3540:	ldr	x0, [sp, #304]
    3544:	cbz	x0, 354c <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x234>
    3548:	bl	0 <_ZdaPv>
    354c:	ldp	x2, x0, [x28, #24]
    3550:	add	w1, w27, #0x1
    3554:	mov	x27, x1
    3558:	sub	x0, x0, x2
    355c:	asr	x0, x0, #4
    3560:	mul	x0, x0, x25
    3564:	cmp	x0, w1, uxtw
    3568:	b.ls	3660 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x348>  // b.plast
    356c:	add	x1, x1, x1, lsl #1
    3570:	ldr	x0, [sp, #136]
    3574:	lsl	x1, x1, #4
    3578:	add	x0, x0, x1
    357c:	ldr	d0, [x2, x1]
    3580:	add	x0, x0, #0x8
    3584:	fcmp	d0, d0
    3588:	b.ne	3524 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x20c>  // b.any
    358c:	ldr	x2, [x21, #24]
    3590:	ldr	d0, [x2, x1]
    3594:	fcmp	d0, d0
    3598:	b.ne	3524 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x20c>  // b.any
    359c:	mov	x1, x23
    35a0:	str	xzr, [sp, #304]
    35a4:	b	352c <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x214>
    35a8:	cmp	x2, x0
    35ac:	b.ne	3800 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    35b0:	add	x22, sp, #0x70
    35b4:	add	x23, sp, #0x130
    35b8:	add	x0, x22, #0x18
    35bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    35c0:	ldp	x2, x0, [x28, #24]
    35c4:	mov	w27, #0x0                   	// #0
    35c8:	mov	x1, #0x0                   	// #0
    35cc:	mov	x26, #0x1                   	// #1
    35d0:	cmp	x2, x0
    35d4:	b.ne	3624 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x30c>  // b.any
    35d8:	b	3660 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x348>
    35dc:	mov	x1, x23
    35e0:	str	x26, [sp, #304]
    35e4:	str	w24, [sp, #312]
    35e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    35ec:	ldr	w0, [sp, #312]
    35f0:	cmp	w0, #0x40
    35f4:	b.ls	3604 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2ec>  // b.plast
    35f8:	ldr	x0, [sp, #304]
    35fc:	cbz	x0, 3604 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2ec>
    3600:	bl	0 <_ZdaPv>
    3604:	ldp	x2, x0, [x28, #24]
    3608:	add	w1, w27, #0x1
    360c:	mov	x27, x1
    3610:	sub	x0, x0, x2
    3614:	asr	x0, x0, #4
    3618:	mul	x0, x0, x25
    361c:	cmp	x0, w1, uxtw
    3620:	b.ls	3660 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x348>  // b.plast
    3624:	add	x1, x1, x1, lsl #1
    3628:	ldr	x0, [sp, #136]
    362c:	lsl	x1, x1, #4
    3630:	add	x0, x0, x1
    3634:	ldr	s0, [x2, x1]
    3638:	add	x0, x0, #0x8
    363c:	fcmp	s0, s0
    3640:	b.ne	35dc <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2c4>  // b.any
    3644:	ldr	x2, [x21, #24]
    3648:	ldr	s0, [x2, x1]
    364c:	fcmp	s0, s0
    3650:	b.ne	35dc <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2c4>  // b.any
    3654:	mov	x1, x23
    3658:	str	xzr, [sp, #304]
    365c:	b	35e4 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2cc>
    3660:	ldrb	w0, [x20, #8]
    3664:	cmp	w0, #0x10
    3668:	b.ne	3820 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x508>  // b.any
    366c:	add	x24, sp, #0xd0
    3670:	add	x0, sp, #0xa0
    3674:	mov	x1, x22
    3678:	str	x0, [sp, #104]
    367c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3680:	add	x25, sp, #0x100
    3684:	mov	x0, x24
    3688:	mov	x1, x28
    368c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3690:	mov	x0, x25
    3694:	mov	x1, x21
    3698:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    369c:	mov	x8, x23
    36a0:	mov	x1, x25
    36a4:	mov	x0, x24
    36a8:	mov	x2, x20
    36ac:	bl	2cd8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    36b0:	ldr	x2, [sp, #304]
    36b4:	add	x1, x23, #0x8
    36b8:	add	x0, x22, #0x8
    36bc:	str	x2, [sp, #112]
    36c0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    36c4:	add	x1, x23, #0x18
    36c8:	add	x0, x22, #0x18
    36cc:	bl	5a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    36d0:	mov	x0, x23
    36d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    36d8:	mov	x0, x25
    36dc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    36e0:	mov	x0, x24
    36e4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    36e8:	ldp	x25, x24, [x28, #24]
    36ec:	ldr	x0, [sp, #136]
    36f0:	str	x0, [sp, #96]
    36f4:	cmp	x24, x25
    36f8:	b.eq	37b0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x498>  // b.none
    36fc:	mov	x20, #0x0                   	// #0
    3700:	mov	x21, #0x0                   	// #0
    3704:	b	372c <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x414>
    3708:	sub	x1, x24, x25
    370c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3710:	movk	x0, #0xaaab
    3714:	add	x21, x21, #0x1
    3718:	asr	x1, x1, #4
    371c:	add	x20, x20, #0x30
    3720:	mul	x1, x1, x0
    3724:	cmp	x21, x1
    3728:	b.cs	37b0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x498>  // b.hs, b.nlast
    372c:	ldr	x0, [sp, #184]
    3730:	add	x0, x0, x20
    3734:	add	x26, x0, #0x8
    3738:	ldr	w27, [x0, #16]
    373c:	cmp	w27, #0x40
    3740:	b.ls	3758 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x440>  // b.plast
    3744:	mov	x0, x26
    3748:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    374c:	sub	w1, w27, w0
    3750:	cmp	w1, #0x40
    3754:	b.hi	3708 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.pmore
    3758:	mov	x0, x26
    375c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3760:	mov	x2, x0
    3764:	cmp	x0, #0x1
    3768:	b.ne	3708 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.any
    376c:	ldr	x0, [sp, #96]
    3770:	mov	x1, x23
    3774:	str	x2, [sp, #304]
    3778:	add	x0, x0, x20
    377c:	str	w2, [sp, #312]
    3780:	add	x0, x0, #0x8
    3784:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3788:	ldr	w0, [sp, #312]
    378c:	cmp	w0, #0x40
    3790:	b.ls	37a0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x488>  // b.plast
    3794:	ldr	x0, [sp, #304]
    3798:	cbz	x0, 37a0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x488>
    379c:	bl	0 <_ZdaPv>
    37a0:	ldr	x0, [sp, #136]
    37a4:	str	x0, [sp, #96]
    37a8:	ldp	x25, x24, [x28, #24]
    37ac:	b	3708 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>
    37b0:	mov	x2, x19
    37b4:	ldr	w3, [sp, #128]
    37b8:	ldr	x0, [sp, #112]
    37bc:	str	wzr, [sp, #128]
    37c0:	str	x0, [x2], #8
    37c4:	ldr	x0, [sp, #104]
    37c8:	str	w3, [x2, #8]
    37cc:	ldr	x2, [sp, #120]
    37d0:	str	x2, [x19, #8]
    37d4:	ldr	x2, [sp, #96]
    37d8:	str	x2, [x19, #24]
    37dc:	ldr	x2, [sp, #144]
    37e0:	str	x2, [x19, #32]
    37e4:	ldr	x2, [sp, #152]
    37e8:	str	x2, [x19, #40]
    37ec:	stp	xzr, xzr, [sp, #136]
    37f0:	str	xzr, [sp, #152]
    37f4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    37f8:	ldp	x25, x26, [sp, #64]
    37fc:	b	33fc <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    3800:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3804:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3808:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    380c:	add	x3, x3, #0x0
    3810:	add	x1, x1, #0x0
    3814:	add	x0, x0, #0x0
    3818:	mov	w2, #0x221                 	// #545
    381c:	bl	0 <__assert_fail>
    3820:	ldp	x25, x26, [sp, #64]
    3824:	b	3388 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x70>

0000000000003828 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>:
    3828:	stp	x29, x30, [sp, #-96]!
    382c:	mov	x3, x8
    3830:	mov	x29, sp
    3834:	stp	x21, x22, [sp, #32]
    3838:	mov	x21, x2
    383c:	mov	x2, x8
    3840:	stp	x19, x20, [sp, #16]
    3844:	mov	x22, x1
    3848:	mov	x20, x8
    384c:	stp	x23, x24, [sp, #48]
    3850:	mov	x23, x0
    3854:	mov	w24, #0x1                   	// #1
    3858:	stp	xzr, xzr, [x2, #24]!
    385c:	str	xzr, [x2, #16]
    3860:	str	xzr, [x3], #8
    3864:	ldrb	w0, [x21, #8]
    3868:	str	xzr, [x8, #8]
    386c:	str	w24, [x3, #8]
    3870:	cmp	w0, #0x3
    3874:	b.eq	38dc <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    3878:	cmp	w0, #0x10
    387c:	b.eq	3934 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x10c>  // b.none
    3880:	cmp	w0, #0x2
    3884:	b.eq	3908 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
    3888:	stp	x25, x26, [sp, #64]
    388c:	str	x27, [sp, #80]
    3890:	bl	0 <_ZN4llvm4dbgsEv>
    3894:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3898:	add	x1, x1, #0x0
    389c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    38a0:	mov	x19, x0
    38a4:	mov	w2, #0x0                   	// #0
    38a8:	mov	w3, #0x0                   	// #0
    38ac:	mov	x0, x21
    38b0:	mov	x1, x19
    38b4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    38b8:	mov	x0, x19
    38bc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    38c0:	add	x1, x1, #0x0
    38c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    38c8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    38cc:	mov	w2, #0x1eb                 	// #491
    38d0:	add	x1, x1, #0x0
    38d4:	mov	x0, #0x0                   	// #0
    38d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    38dc:	ldr	d0, [x1]
    38e0:	ldr	d1, [x23]
    38e4:	fcmpe	d1, d0
    38e8:	cset	x0, mi  // mi = first
    38ec:	str	x0, [x8, #8]
    38f0:	mov	x0, x20
    38f4:	ldp	x19, x20, [sp, #16]
    38f8:	ldp	x21, x22, [sp, #32]
    38fc:	ldp	x23, x24, [sp, #48]
    3900:	ldp	x29, x30, [sp], #96
    3904:	ret
    3908:	ldr	s1, [x23]
    390c:	ldr	s0, [x1]
    3910:	fcmpe	s1, s0
    3914:	cset	x0, mi  // mi = first
    3918:	str	x0, [x8, #8]
    391c:	mov	x0, x20
    3920:	ldp	x19, x20, [sp, #16]
    3924:	ldp	x21, x22, [sp, #32]
    3928:	ldp	x23, x24, [sp, #48]
    392c:	ldp	x29, x30, [sp], #96
    3930:	ret
    3934:	ldp	x5, x3, [x1, #24]
    3938:	stp	x25, x26, [sp, #64]
    393c:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3940:	ldp	x1, x0, [x23, #24]
    3944:	movk	x25, #0xaaab
    3948:	ldr	x4, [x21, #24]
    394c:	sub	x3, x3, x5
    3950:	sub	x0, x0, x1
    3954:	ldrb	w4, [x4, #8]
    3958:	asr	x1, x0, #4
    395c:	cmp	w4, #0x2
    3960:	mul	x1, x1, x25
    3964:	b.eq	3a18 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x1f0>  // b.none
    3968:	cmp	x3, x0
    396c:	b.ne	3ac4 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    3970:	mov	x0, x2
    3974:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3978:	ldp	x1, x4, [x23, #24]
    397c:	cmp	x1, x4
    3980:	b.eq	3abc <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    3984:	mov	w21, #0x0                   	// #0
    3988:	mov	x2, #0x0                   	// #0
    398c:	str	x27, [sp, #80]
    3990:	add	x2, x2, x2, lsl #1
    3994:	ldr	x0, [x22, #24]
    3998:	lsl	x2, x2, #4
    399c:	ldr	x19, [x20, #24]
    39a0:	ldr	d0, [x0, x2]
    39a4:	ldr	d1, [x1, x2]
    39a8:	add	x19, x19, x2
    39ac:	add	x26, x19, #0x8
    39b0:	fcmpe	d1, d0
    39b4:	ldr	w0, [x19, #16]
    39b8:	cset	x27, mi  // mi = first
    39bc:	cmp	w0, #0x40
    39c0:	b.ls	39d4 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>  // b.plast
    39c4:	ldr	x0, [x19, #8]
    39c8:	cbz	x0, 39d4 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    39cc:	bl	0 <_ZdaPv>
    39d0:	ldp	x1, x4, [x23, #24]
    39d4:	sub	x3, x4, x1
    39d8:	str	x27, [x19, #8]
    39dc:	add	w2, w21, #0x1
    39e0:	asr	x3, x3, #4
    39e4:	str	w24, [x26, #8]
    39e8:	mov	x21, x2
    39ec:	mul	x3, x3, x25
    39f0:	cmp	x3, w2, uxtw
    39f4:	b.hi	3990 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.pmore
    39f8:	ldp	x25, x26, [sp, #64]
    39fc:	ldr	x27, [sp, #80]
    3a00:	mov	x0, x20
    3a04:	ldp	x19, x20, [sp, #16]
    3a08:	ldp	x21, x22, [sp, #32]
    3a0c:	ldp	x23, x24, [sp, #48]
    3a10:	ldp	x29, x30, [sp], #96
    3a14:	ret
    3a18:	cmp	x3, x0
    3a1c:	b.ne	3ac4 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    3a20:	mov	x0, x2
    3a24:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3a28:	ldp	x1, x4, [x23, #24]
    3a2c:	cmp	x4, x1
    3a30:	b.eq	3abc <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    3a34:	mov	w21, w24
    3a38:	mov	x2, #0x0                   	// #0
    3a3c:	mov	w24, #0x0                   	// #0
    3a40:	str	x27, [sp, #80]
    3a44:	nop
    3a48:	add	x2, x2, x2, lsl #1
    3a4c:	ldr	x0, [x22, #24]
    3a50:	lsl	x2, x2, #4
    3a54:	ldr	x19, [x20, #24]
    3a58:	ldr	s0, [x0, x2]
    3a5c:	ldr	s1, [x1, x2]
    3a60:	add	x19, x19, x2
    3a64:	add	x26, x19, #0x8
    3a68:	fcmpe	s1, s0
    3a6c:	ldr	w0, [x19, #16]
    3a70:	cset	x27, mi  // mi = first
    3a74:	cmp	w0, #0x40
    3a78:	b.ls	3a8c <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    3a7c:	ldr	x0, [x19, #8]
    3a80:	cbz	x0, 3a8c <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x264>
    3a84:	bl	0 <_ZdaPv>
    3a88:	ldp	x1, x4, [x23, #24]
    3a8c:	sub	x3, x4, x1
    3a90:	str	x27, [x19, #8]
    3a94:	add	w2, w24, #0x1
    3a98:	asr	x3, x3, #4
    3a9c:	str	w21, [x26, #8]
    3aa0:	mov	x24, x2
    3aa4:	mul	x3, x3, x25
    3aa8:	cmp	x3, w2, uxtw
    3aac:	b.hi	3a48 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.pmore
    3ab0:	ldp	x25, x26, [sp, #64]
    3ab4:	ldr	x27, [sp, #80]
    3ab8:	b	3a00 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x1d8>
    3abc:	ldp	x25, x26, [sp, #64]
    3ac0:	b	38f0 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    3ac4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3ac8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3acc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3ad0:	add	x3, x3, #0x0
    3ad4:	add	x1, x1, #0x0
    3ad8:	add	x0, x0, #0x0
    3adc:	mov	w2, #0x1e8                 	// #488
    3ae0:	str	x27, [sp, #80]
    3ae4:	bl	0 <__assert_fail>

0000000000003ae8 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>:
    3ae8:	stp	x29, x30, [sp, #-352]!
    3aec:	mov	x29, sp
    3af0:	stp	x19, x20, [sp, #16]
    3af4:	mov	x20, x2
    3af8:	ldrb	w2, [x2, #8]
    3afc:	stp	x21, x22, [sp, #32]
    3b00:	mov	x19, x8
    3b04:	mov	x21, x1
    3b08:	stp	x23, x24, [sp, #48]
    3b0c:	mov	w24, #0x1                   	// #1
    3b10:	cmp	w2, #0x2
    3b14:	stp	x27, x28, [sp, #80]
    3b18:	mov	x28, x0
    3b1c:	stp	xzr, xzr, [sp, #112]
    3b20:	str	w24, [sp, #128]
    3b24:	stp	xzr, xzr, [sp, #136]
    3b28:	str	xzr, [sp, #152]
    3b2c:	b.eq	3bf0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x108>  // b.none
    3b30:	ldr	d0, [x0]
    3b34:	fcmp	d0, d0
    3b38:	b.ne	3b9c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    3b3c:	ldr	d0, [x1]
    3b40:	fcmp	d0, d0
    3b44:	b.ne	3b9c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    3b48:	cmp	w2, #0x10
    3b4c:	b.eq	3c80 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.none
    3b50:	add	x23, sp, #0x130
    3b54:	add	x22, sp, #0x70
    3b58:	add	x24, sp, #0x100
    3b5c:	mov	x1, x28
    3b60:	mov	x0, x24
    3b64:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3b68:	mov	x1, x21
    3b6c:	mov	x0, x23
    3b70:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3b74:	mov	x8, x19
    3b78:	mov	x2, x20
    3b7c:	mov	x1, x23
    3b80:	mov	x0, x24
    3b84:	bl	3828 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    3b88:	mov	x0, x23
    3b8c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3b90:	mov	x0, x24
    3b94:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3b98:	b	3bcc <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    3b9c:	mov	x2, x19
    3ba0:	mov	x0, x19
    3ba4:	ldr	x3, [sp, #112]
    3ba8:	mov	x1, #0x1                   	// #1
    3bac:	str	x3, [x2], #8
    3bb0:	add	x22, sp, #0x70
    3bb4:	str	x1, [sp, #120]
    3bb8:	str	w1, [x2, #8]
    3bbc:	str	x1, [x19, #8]
    3bc0:	stp	xzr, xzr, [x0, #24]!
    3bc4:	str	xzr, [x0, #16]
    3bc8:	str	wzr, [sp, #128]
    3bcc:	mov	x0, x22
    3bd0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3bd4:	mov	x0, x19
    3bd8:	ldp	x19, x20, [sp, #16]
    3bdc:	ldp	x21, x22, [sp, #32]
    3be0:	ldp	x23, x24, [sp, #48]
    3be4:	ldp	x27, x28, [sp, #80]
    3be8:	ldp	x29, x30, [sp], #352
    3bec:	ret
    3bf0:	ldr	s0, [x0]
    3bf4:	fcmp	s0, s0
    3bf8:	b.ne	3c08 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x120>  // b.any
    3bfc:	ldr	s0, [x1]
    3c00:	fcmp	s0, s0
    3c04:	b.eq	3b50 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x68>  // b.none
    3c08:	mov	w2, #0x1                   	// #1
    3c0c:	mov	x3, #0x1                   	// #1
    3c10:	add	x22, sp, #0x70
    3c14:	add	x1, sp, #0x130
    3c18:	add	x0, x22, #0x8
    3c1c:	str	x3, [sp, #304]
    3c20:	str	w2, [sp, #312]
    3c24:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3c28:	ldr	w0, [sp, #312]
    3c2c:	cmp	w0, #0x40
    3c30:	b.ls	3c40 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x158>  // b.plast
    3c34:	ldr	x0, [sp, #304]
    3c38:	cbz	x0, 3c40 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x158>
    3c3c:	bl	0 <_ZdaPv>
    3c40:	mov	x1, x19
    3c44:	ldr	w2, [sp, #128]
    3c48:	ldr	x3, [sp, #112]
    3c4c:	mov	x0, x19
    3c50:	str	x3, [x1], #8
    3c54:	ldur	q0, [sp, #136]
    3c58:	str	w2, [x1, #8]
    3c5c:	ldr	x1, [sp, #120]
    3c60:	str	x1, [x19, #8]
    3c64:	ldr	x1, [sp, #152]
    3c68:	str	q0, [x0, #24]!
    3c6c:	str	x1, [x0, #16]
    3c70:	str	wzr, [sp, #128]
    3c74:	stp	xzr, xzr, [sp, #136]
    3c78:	str	xzr, [sp, #152]
    3c7c:	b	3bcc <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    3c80:	mov	x0, x20
    3c84:	stp	x25, x26, [sp, #64]
    3c88:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3c8c:	ldp	x2, x1, [x28, #24]
    3c90:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3c94:	ldr	x4, [x0, #24]
    3c98:	movk	x25, #0xaaab
    3c9c:	ldr	x5, [x21, #24]
    3ca0:	sub	x0, x1, x2
    3ca4:	ldrb	w4, [x4, #8]
    3ca8:	ldr	x2, [x21, #32]
    3cac:	asr	x1, x0, #4
    3cb0:	cmp	w4, #0x2
    3cb4:	sub	x2, x2, x5
    3cb8:	mul	x1, x1, x25
    3cbc:	b.eq	3d78 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x290>  // b.none
    3cc0:	cmp	x2, x0
    3cc4:	b.ne	3fd0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    3cc8:	add	x22, sp, #0x70
    3ccc:	add	x23, sp, #0x130
    3cd0:	add	x0, x22, #0x18
    3cd4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3cd8:	ldp	x2, x0, [x28, #24]
    3cdc:	mov	w27, #0x0                   	// #0
    3ce0:	mov	x1, #0x0                   	// #0
    3ce4:	mov	x26, #0x1                   	// #1
    3ce8:	cmp	x0, x2
    3cec:	b.ne	3d3c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x254>  // b.any
    3cf0:	b	3e30 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x348>
    3cf4:	mov	x1, x23
    3cf8:	str	x26, [sp, #304]
    3cfc:	str	w24, [sp, #312]
    3d00:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3d04:	ldr	w0, [sp, #312]
    3d08:	cmp	w0, #0x40
    3d0c:	b.ls	3d1c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x234>  // b.plast
    3d10:	ldr	x0, [sp, #304]
    3d14:	cbz	x0, 3d1c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x234>
    3d18:	bl	0 <_ZdaPv>
    3d1c:	ldp	x2, x0, [x28, #24]
    3d20:	add	w1, w27, #0x1
    3d24:	mov	x27, x1
    3d28:	sub	x0, x0, x2
    3d2c:	asr	x0, x0, #4
    3d30:	mul	x0, x0, x25
    3d34:	cmp	x0, w1, uxtw
    3d38:	b.ls	3e30 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x348>  // b.plast
    3d3c:	add	x1, x1, x1, lsl #1
    3d40:	ldr	x0, [sp, #136]
    3d44:	lsl	x1, x1, #4
    3d48:	add	x0, x0, x1
    3d4c:	ldr	d0, [x2, x1]
    3d50:	add	x0, x0, #0x8
    3d54:	fcmp	d0, d0
    3d58:	b.ne	3cf4 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x20c>  // b.any
    3d5c:	ldr	x2, [x21, #24]
    3d60:	ldr	d0, [x2, x1]
    3d64:	fcmp	d0, d0
    3d68:	b.ne	3cf4 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x20c>  // b.any
    3d6c:	mov	x1, x23
    3d70:	str	xzr, [sp, #304]
    3d74:	b	3cfc <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x214>
    3d78:	cmp	x2, x0
    3d7c:	b.ne	3fd0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    3d80:	add	x22, sp, #0x70
    3d84:	add	x23, sp, #0x130
    3d88:	add	x0, x22, #0x18
    3d8c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3d90:	ldp	x2, x0, [x28, #24]
    3d94:	mov	w27, #0x0                   	// #0
    3d98:	mov	x1, #0x0                   	// #0
    3d9c:	mov	x26, #0x1                   	// #1
    3da0:	cmp	x2, x0
    3da4:	b.ne	3df4 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x30c>  // b.any
    3da8:	b	3e30 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x348>
    3dac:	mov	x1, x23
    3db0:	str	x26, [sp, #304]
    3db4:	str	w24, [sp, #312]
    3db8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3dbc:	ldr	w0, [sp, #312]
    3dc0:	cmp	w0, #0x40
    3dc4:	b.ls	3dd4 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2ec>  // b.plast
    3dc8:	ldr	x0, [sp, #304]
    3dcc:	cbz	x0, 3dd4 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2ec>
    3dd0:	bl	0 <_ZdaPv>
    3dd4:	ldp	x2, x0, [x28, #24]
    3dd8:	add	w1, w27, #0x1
    3ddc:	mov	x27, x1
    3de0:	sub	x0, x0, x2
    3de4:	asr	x0, x0, #4
    3de8:	mul	x0, x0, x25
    3dec:	cmp	x0, w1, uxtw
    3df0:	b.ls	3e30 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x348>  // b.plast
    3df4:	add	x1, x1, x1, lsl #1
    3df8:	ldr	x0, [sp, #136]
    3dfc:	lsl	x1, x1, #4
    3e00:	add	x0, x0, x1
    3e04:	ldr	s0, [x2, x1]
    3e08:	add	x0, x0, #0x8
    3e0c:	fcmp	s0, s0
    3e10:	b.ne	3dac <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2c4>  // b.any
    3e14:	ldr	x2, [x21, #24]
    3e18:	ldr	s0, [x2, x1]
    3e1c:	fcmp	s0, s0
    3e20:	b.ne	3dac <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2c4>  // b.any
    3e24:	mov	x1, x23
    3e28:	str	xzr, [sp, #304]
    3e2c:	b	3db4 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2cc>
    3e30:	ldrb	w0, [x20, #8]
    3e34:	cmp	w0, #0x10
    3e38:	b.ne	3ff0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x508>  // b.any
    3e3c:	add	x24, sp, #0xd0
    3e40:	add	x0, sp, #0xa0
    3e44:	mov	x1, x22
    3e48:	str	x0, [sp, #104]
    3e4c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3e50:	add	x25, sp, #0x100
    3e54:	mov	x0, x24
    3e58:	mov	x1, x28
    3e5c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3e60:	mov	x0, x25
    3e64:	mov	x1, x21
    3e68:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3e6c:	mov	x8, x23
    3e70:	mov	x1, x25
    3e74:	mov	x0, x24
    3e78:	mov	x2, x20
    3e7c:	bl	3828 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    3e80:	ldr	x2, [sp, #304]
    3e84:	add	x1, x23, #0x8
    3e88:	add	x0, x22, #0x8
    3e8c:	str	x2, [sp, #112]
    3e90:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3e94:	add	x1, x23, #0x18
    3e98:	add	x0, x22, #0x18
    3e9c:	bl	5a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    3ea0:	mov	x0, x23
    3ea4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3ea8:	mov	x0, x25
    3eac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3eb0:	mov	x0, x24
    3eb4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3eb8:	ldp	x25, x24, [x28, #24]
    3ebc:	ldr	x0, [sp, #136]
    3ec0:	str	x0, [sp, #96]
    3ec4:	cmp	x24, x25
    3ec8:	b.eq	3f80 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x498>  // b.none
    3ecc:	mov	x20, #0x0                   	// #0
    3ed0:	mov	x21, #0x0                   	// #0
    3ed4:	b	3efc <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x414>
    3ed8:	sub	x1, x24, x25
    3edc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3ee0:	movk	x0, #0xaaab
    3ee4:	add	x21, x21, #0x1
    3ee8:	asr	x1, x1, #4
    3eec:	add	x20, x20, #0x30
    3ef0:	mul	x1, x1, x0
    3ef4:	cmp	x21, x1
    3ef8:	b.cs	3f80 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x498>  // b.hs, b.nlast
    3efc:	ldr	x0, [sp, #184]
    3f00:	add	x0, x0, x20
    3f04:	add	x26, x0, #0x8
    3f08:	ldr	w27, [x0, #16]
    3f0c:	cmp	w27, #0x40
    3f10:	b.ls	3f28 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x440>  // b.plast
    3f14:	mov	x0, x26
    3f18:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    3f1c:	sub	w1, w27, w0
    3f20:	cmp	w1, #0x40
    3f24:	b.hi	3ed8 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.pmore
    3f28:	mov	x0, x26
    3f2c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3f30:	mov	x2, x0
    3f34:	cmp	x0, #0x1
    3f38:	b.ne	3ed8 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.any
    3f3c:	ldr	x0, [sp, #96]
    3f40:	mov	x1, x23
    3f44:	str	x2, [sp, #304]
    3f48:	add	x0, x0, x20
    3f4c:	str	w2, [sp, #312]
    3f50:	add	x0, x0, #0x8
    3f54:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3f58:	ldr	w0, [sp, #312]
    3f5c:	cmp	w0, #0x40
    3f60:	b.ls	3f70 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x488>  // b.plast
    3f64:	ldr	x0, [sp, #304]
    3f68:	cbz	x0, 3f70 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x488>
    3f6c:	bl	0 <_ZdaPv>
    3f70:	ldr	x0, [sp, #136]
    3f74:	str	x0, [sp, #96]
    3f78:	ldp	x25, x24, [x28, #24]
    3f7c:	b	3ed8 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>
    3f80:	mov	x2, x19
    3f84:	ldr	w3, [sp, #128]
    3f88:	ldr	x0, [sp, #112]
    3f8c:	str	wzr, [sp, #128]
    3f90:	str	x0, [x2], #8
    3f94:	ldr	x0, [sp, #104]
    3f98:	str	w3, [x2, #8]
    3f9c:	ldr	x2, [sp, #120]
    3fa0:	str	x2, [x19, #8]
    3fa4:	ldr	x2, [sp, #96]
    3fa8:	str	x2, [x19, #24]
    3fac:	ldr	x2, [sp, #144]
    3fb0:	str	x2, [x19, #32]
    3fb4:	ldr	x2, [sp, #152]
    3fb8:	str	x2, [x19, #40]
    3fbc:	stp	xzr, xzr, [sp, #136]
    3fc0:	str	xzr, [sp, #152]
    3fc4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3fc8:	ldp	x25, x26, [sp, #64]
    3fcc:	b	3bcc <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    3fd0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3fd4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3fd8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    3fdc:	add	x3, x3, #0x0
    3fe0:	add	x1, x1, #0x0
    3fe4:	add	x0, x0, #0x0
    3fe8:	mov	w2, #0x23c                 	// #572
    3fec:	bl	0 <__assert_fail>
    3ff0:	ldp	x25, x26, [sp, #64]
    3ff4:	b	3b58 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x70>

0000000000003ff8 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>:
    3ff8:	stp	x29, x30, [sp, #-96]!
    3ffc:	mov	x3, x8
    4000:	mov	x29, sp
    4004:	stp	x21, x22, [sp, #32]
    4008:	mov	x21, x2
    400c:	mov	x2, x8
    4010:	stp	x19, x20, [sp, #16]
    4014:	mov	x22, x1
    4018:	mov	x20, x8
    401c:	stp	x23, x24, [sp, #48]
    4020:	mov	x23, x0
    4024:	mov	w24, #0x1                   	// #1
    4028:	stp	xzr, xzr, [x2, #24]!
    402c:	str	xzr, [x2, #16]
    4030:	str	xzr, [x3], #8
    4034:	ldrb	w0, [x21, #8]
    4038:	str	xzr, [x8, #8]
    403c:	str	w24, [x3, #8]
    4040:	cmp	w0, #0x3
    4044:	b.eq	40ac <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    4048:	cmp	w0, #0x10
    404c:	b.eq	4104 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x10c>  // b.none
    4050:	cmp	w0, #0x2
    4054:	b.eq	40d8 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
    4058:	stp	x25, x26, [sp, #64]
    405c:	str	x27, [sp, #80]
    4060:	bl	0 <_ZN4llvm4dbgsEv>
    4064:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4068:	add	x1, x1, #0x0
    406c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4070:	mov	x19, x0
    4074:	mov	w2, #0x0                   	// #0
    4078:	mov	w3, #0x0                   	// #0
    407c:	mov	x0, x21
    4080:	mov	x1, x19
    4084:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    4088:	mov	x0, x19
    408c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4090:	add	x1, x1, #0x0
    4094:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4098:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    409c:	mov	w2, #0x1f9                 	// #505
    40a0:	add	x1, x1, #0x0
    40a4:	mov	x0, #0x0                   	// #0
    40a8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    40ac:	ldr	d0, [x1]
    40b0:	ldr	d1, [x23]
    40b4:	fcmpe	d1, d0
    40b8:	cset	x0, gt
    40bc:	str	x0, [x8, #8]
    40c0:	mov	x0, x20
    40c4:	ldp	x19, x20, [sp, #16]
    40c8:	ldp	x21, x22, [sp, #32]
    40cc:	ldp	x23, x24, [sp, #48]
    40d0:	ldp	x29, x30, [sp], #96
    40d4:	ret
    40d8:	ldr	s1, [x23]
    40dc:	ldr	s0, [x1]
    40e0:	fcmpe	s1, s0
    40e4:	cset	x0, gt
    40e8:	str	x0, [x8, #8]
    40ec:	mov	x0, x20
    40f0:	ldp	x19, x20, [sp, #16]
    40f4:	ldp	x21, x22, [sp, #32]
    40f8:	ldp	x23, x24, [sp, #48]
    40fc:	ldp	x29, x30, [sp], #96
    4100:	ret
    4104:	ldp	x5, x3, [x1, #24]
    4108:	stp	x25, x26, [sp, #64]
    410c:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4110:	ldp	x1, x0, [x23, #24]
    4114:	movk	x25, #0xaaab
    4118:	ldr	x4, [x21, #24]
    411c:	sub	x3, x3, x5
    4120:	sub	x0, x0, x1
    4124:	ldrb	w4, [x4, #8]
    4128:	asr	x1, x0, #4
    412c:	cmp	w4, #0x2
    4130:	mul	x1, x1, x25
    4134:	b.eq	41e8 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x1f0>  // b.none
    4138:	cmp	x3, x0
    413c:	b.ne	4294 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    4140:	mov	x0, x2
    4144:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4148:	ldp	x1, x4, [x23, #24]
    414c:	cmp	x1, x4
    4150:	b.eq	428c <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    4154:	mov	w21, #0x0                   	// #0
    4158:	mov	x2, #0x0                   	// #0
    415c:	str	x27, [sp, #80]
    4160:	add	x2, x2, x2, lsl #1
    4164:	ldr	x0, [x22, #24]
    4168:	lsl	x2, x2, #4
    416c:	ldr	x19, [x20, #24]
    4170:	ldr	d0, [x0, x2]
    4174:	ldr	d1, [x1, x2]
    4178:	add	x19, x19, x2
    417c:	add	x26, x19, #0x8
    4180:	fcmpe	d1, d0
    4184:	ldr	w0, [x19, #16]
    4188:	cset	x27, gt
    418c:	cmp	w0, #0x40
    4190:	b.ls	41a4 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>  // b.plast
    4194:	ldr	x0, [x19, #8]
    4198:	cbz	x0, 41a4 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    419c:	bl	0 <_ZdaPv>
    41a0:	ldp	x1, x4, [x23, #24]
    41a4:	sub	x3, x4, x1
    41a8:	str	x27, [x19, #8]
    41ac:	add	w2, w21, #0x1
    41b0:	asr	x3, x3, #4
    41b4:	str	w24, [x26, #8]
    41b8:	mov	x21, x2
    41bc:	mul	x3, x3, x25
    41c0:	cmp	x3, w2, uxtw
    41c4:	b.hi	4160 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.pmore
    41c8:	ldp	x25, x26, [sp, #64]
    41cc:	ldr	x27, [sp, #80]
    41d0:	mov	x0, x20
    41d4:	ldp	x19, x20, [sp, #16]
    41d8:	ldp	x21, x22, [sp, #32]
    41dc:	ldp	x23, x24, [sp, #48]
    41e0:	ldp	x29, x30, [sp], #96
    41e4:	ret
    41e8:	cmp	x3, x0
    41ec:	b.ne	4294 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    41f0:	mov	x0, x2
    41f4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    41f8:	ldp	x1, x4, [x23, #24]
    41fc:	cmp	x4, x1
    4200:	b.eq	428c <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    4204:	mov	w21, w24
    4208:	mov	x2, #0x0                   	// #0
    420c:	mov	w24, #0x0                   	// #0
    4210:	str	x27, [sp, #80]
    4214:	nop
    4218:	add	x2, x2, x2, lsl #1
    421c:	ldr	x0, [x22, #24]
    4220:	lsl	x2, x2, #4
    4224:	ldr	x19, [x20, #24]
    4228:	ldr	s0, [x0, x2]
    422c:	ldr	s1, [x1, x2]
    4230:	add	x19, x19, x2
    4234:	add	x26, x19, #0x8
    4238:	fcmpe	s1, s0
    423c:	ldr	w0, [x19, #16]
    4240:	cset	x27, gt
    4244:	cmp	w0, #0x40
    4248:	b.ls	425c <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    424c:	ldr	x0, [x19, #8]
    4250:	cbz	x0, 425c <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x264>
    4254:	bl	0 <_ZdaPv>
    4258:	ldp	x1, x4, [x23, #24]
    425c:	sub	x3, x4, x1
    4260:	str	x27, [x19, #8]
    4264:	add	w2, w24, #0x1
    4268:	asr	x3, x3, #4
    426c:	str	w21, [x26, #8]
    4270:	mov	x24, x2
    4274:	mul	x3, x3, x25
    4278:	cmp	x3, w2, uxtw
    427c:	b.hi	4218 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.pmore
    4280:	ldp	x25, x26, [sp, #64]
    4284:	ldr	x27, [sp, #80]
    4288:	b	41d0 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x1d8>
    428c:	ldp	x25, x26, [sp, #64]
    4290:	b	40c0 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    4294:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4298:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    429c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    42a0:	add	x3, x3, #0x0
    42a4:	add	x1, x1, #0x0
    42a8:	add	x0, x0, #0x0
    42ac:	mov	w2, #0x1f6                 	// #502
    42b0:	str	x27, [sp, #80]
    42b4:	bl	0 <__assert_fail>

00000000000042b8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>:
    42b8:	stp	x29, x30, [sp, #-352]!
    42bc:	mov	x29, sp
    42c0:	stp	x19, x20, [sp, #16]
    42c4:	mov	x20, x2
    42c8:	ldrb	w2, [x2, #8]
    42cc:	stp	x21, x22, [sp, #32]
    42d0:	mov	x19, x8
    42d4:	mov	x21, x1
    42d8:	stp	x23, x24, [sp, #48]
    42dc:	mov	w24, #0x1                   	// #1
    42e0:	cmp	w2, #0x2
    42e4:	stp	x27, x28, [sp, #80]
    42e8:	mov	x28, x0
    42ec:	stp	xzr, xzr, [sp, #112]
    42f0:	str	w24, [sp, #128]
    42f4:	stp	xzr, xzr, [sp, #136]
    42f8:	str	xzr, [sp, #152]
    42fc:	b.eq	43c0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x108>  // b.none
    4300:	ldr	d0, [x0]
    4304:	fcmp	d0, d0
    4308:	b.ne	436c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    430c:	ldr	d0, [x1]
    4310:	fcmp	d0, d0
    4314:	b.ne	436c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    4318:	cmp	w2, #0x10
    431c:	b.eq	4450 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.none
    4320:	add	x23, sp, #0x130
    4324:	add	x22, sp, #0x70
    4328:	add	x24, sp, #0x100
    432c:	mov	x1, x28
    4330:	mov	x0, x24
    4334:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4338:	mov	x1, x21
    433c:	mov	x0, x23
    4340:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4344:	mov	x8, x19
    4348:	mov	x2, x20
    434c:	mov	x1, x23
    4350:	mov	x0, x24
    4354:	bl	3ff8 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    4358:	mov	x0, x23
    435c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4360:	mov	x0, x24
    4364:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4368:	b	439c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    436c:	mov	x2, x19
    4370:	mov	x0, x19
    4374:	ldr	x3, [sp, #112]
    4378:	mov	x1, #0x1                   	// #1
    437c:	str	x3, [x2], #8
    4380:	add	x22, sp, #0x70
    4384:	str	x1, [sp, #120]
    4388:	str	w1, [x2, #8]
    438c:	str	x1, [x19, #8]
    4390:	stp	xzr, xzr, [x0, #24]!
    4394:	str	xzr, [x0, #16]
    4398:	str	wzr, [sp, #128]
    439c:	mov	x0, x22
    43a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    43a4:	mov	x0, x19
    43a8:	ldp	x19, x20, [sp, #16]
    43ac:	ldp	x21, x22, [sp, #32]
    43b0:	ldp	x23, x24, [sp, #48]
    43b4:	ldp	x27, x28, [sp, #80]
    43b8:	ldp	x29, x30, [sp], #352
    43bc:	ret
    43c0:	ldr	s0, [x0]
    43c4:	fcmp	s0, s0
    43c8:	b.ne	43d8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x120>  // b.any
    43cc:	ldr	s0, [x1]
    43d0:	fcmp	s0, s0
    43d4:	b.eq	4320 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x68>  // b.none
    43d8:	mov	w2, #0x1                   	// #1
    43dc:	mov	x3, #0x1                   	// #1
    43e0:	add	x22, sp, #0x70
    43e4:	add	x1, sp, #0x130
    43e8:	add	x0, x22, #0x8
    43ec:	str	x3, [sp, #304]
    43f0:	str	w2, [sp, #312]
    43f4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    43f8:	ldr	w0, [sp, #312]
    43fc:	cmp	w0, #0x40
    4400:	b.ls	4410 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x158>  // b.plast
    4404:	ldr	x0, [sp, #304]
    4408:	cbz	x0, 4410 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x158>
    440c:	bl	0 <_ZdaPv>
    4410:	mov	x1, x19
    4414:	ldr	w2, [sp, #128]
    4418:	ldr	x3, [sp, #112]
    441c:	mov	x0, x19
    4420:	str	x3, [x1], #8
    4424:	ldur	q0, [sp, #136]
    4428:	str	w2, [x1, #8]
    442c:	ldr	x1, [sp, #120]
    4430:	str	x1, [x19, #8]
    4434:	ldr	x1, [sp, #152]
    4438:	str	q0, [x0, #24]!
    443c:	str	x1, [x0, #16]
    4440:	str	wzr, [sp, #128]
    4444:	stp	xzr, xzr, [sp, #136]
    4448:	str	xzr, [sp, #152]
    444c:	b	439c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    4450:	mov	x0, x20
    4454:	stp	x25, x26, [sp, #64]
    4458:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    445c:	ldp	x2, x1, [x28, #24]
    4460:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4464:	ldr	x4, [x0, #24]
    4468:	movk	x25, #0xaaab
    446c:	ldr	x5, [x21, #24]
    4470:	sub	x0, x1, x2
    4474:	ldrb	w4, [x4, #8]
    4478:	ldr	x2, [x21, #32]
    447c:	asr	x1, x0, #4
    4480:	cmp	w4, #0x2
    4484:	sub	x2, x2, x5
    4488:	mul	x1, x1, x25
    448c:	b.eq	4548 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x290>  // b.none
    4490:	cmp	x2, x0
    4494:	b.ne	47a0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    4498:	add	x22, sp, #0x70
    449c:	add	x23, sp, #0x130
    44a0:	add	x0, x22, #0x18
    44a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    44a8:	ldp	x2, x0, [x28, #24]
    44ac:	mov	w27, #0x0                   	// #0
    44b0:	mov	x1, #0x0                   	// #0
    44b4:	mov	x26, #0x1                   	// #1
    44b8:	cmp	x0, x2
    44bc:	b.ne	450c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x254>  // b.any
    44c0:	b	4600 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x348>
    44c4:	mov	x1, x23
    44c8:	str	x26, [sp, #304]
    44cc:	str	w24, [sp, #312]
    44d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    44d4:	ldr	w0, [sp, #312]
    44d8:	cmp	w0, #0x40
    44dc:	b.ls	44ec <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x234>  // b.plast
    44e0:	ldr	x0, [sp, #304]
    44e4:	cbz	x0, 44ec <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x234>
    44e8:	bl	0 <_ZdaPv>
    44ec:	ldp	x2, x0, [x28, #24]
    44f0:	add	w1, w27, #0x1
    44f4:	mov	x27, x1
    44f8:	sub	x0, x0, x2
    44fc:	asr	x0, x0, #4
    4500:	mul	x0, x0, x25
    4504:	cmp	x0, w1, uxtw
    4508:	b.ls	4600 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x348>  // b.plast
    450c:	add	x1, x1, x1, lsl #1
    4510:	ldr	x0, [sp, #136]
    4514:	lsl	x1, x1, #4
    4518:	add	x0, x0, x1
    451c:	ldr	d0, [x2, x1]
    4520:	add	x0, x0, #0x8
    4524:	fcmp	d0, d0
    4528:	b.ne	44c4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x20c>  // b.any
    452c:	ldr	x2, [x21, #24]
    4530:	ldr	d0, [x2, x1]
    4534:	fcmp	d0, d0
    4538:	b.ne	44c4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x20c>  // b.any
    453c:	mov	x1, x23
    4540:	str	xzr, [sp, #304]
    4544:	b	44cc <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x214>
    4548:	cmp	x2, x0
    454c:	b.ne	47a0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    4550:	add	x22, sp, #0x70
    4554:	add	x23, sp, #0x130
    4558:	add	x0, x22, #0x18
    455c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4560:	ldp	x2, x0, [x28, #24]
    4564:	mov	w27, #0x0                   	// #0
    4568:	mov	x1, #0x0                   	// #0
    456c:	mov	x26, #0x1                   	// #1
    4570:	cmp	x2, x0
    4574:	b.ne	45c4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x30c>  // b.any
    4578:	b	4600 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x348>
    457c:	mov	x1, x23
    4580:	str	x26, [sp, #304]
    4584:	str	w24, [sp, #312]
    4588:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    458c:	ldr	w0, [sp, #312]
    4590:	cmp	w0, #0x40
    4594:	b.ls	45a4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x2ec>  // b.plast
    4598:	ldr	x0, [sp, #304]
    459c:	cbz	x0, 45a4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x2ec>
    45a0:	bl	0 <_ZdaPv>
    45a4:	ldp	x2, x0, [x28, #24]
    45a8:	add	w1, w27, #0x1
    45ac:	mov	x27, x1
    45b0:	sub	x0, x0, x2
    45b4:	asr	x0, x0, #4
    45b8:	mul	x0, x0, x25
    45bc:	cmp	x0, w1, uxtw
    45c0:	b.ls	4600 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x348>  // b.plast
    45c4:	add	x1, x1, x1, lsl #1
    45c8:	ldr	x0, [sp, #136]
    45cc:	lsl	x1, x1, #4
    45d0:	add	x0, x0, x1
    45d4:	ldr	s0, [x2, x1]
    45d8:	add	x0, x0, #0x8
    45dc:	fcmp	s0, s0
    45e0:	b.ne	457c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x2c4>  // b.any
    45e4:	ldr	x2, [x21, #24]
    45e8:	ldr	s0, [x2, x1]
    45ec:	fcmp	s0, s0
    45f0:	b.ne	457c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x2c4>  // b.any
    45f4:	mov	x1, x23
    45f8:	str	xzr, [sp, #304]
    45fc:	b	4584 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x2cc>
    4600:	ldrb	w0, [x20, #8]
    4604:	cmp	w0, #0x10
    4608:	b.ne	47c0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x508>  // b.any
    460c:	add	x24, sp, #0xd0
    4610:	add	x0, sp, #0xa0
    4614:	mov	x1, x22
    4618:	str	x0, [sp, #104]
    461c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4620:	add	x25, sp, #0x100
    4624:	mov	x0, x24
    4628:	mov	x1, x28
    462c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4630:	mov	x0, x25
    4634:	mov	x1, x21
    4638:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    463c:	mov	x8, x23
    4640:	mov	x1, x25
    4644:	mov	x0, x24
    4648:	mov	x2, x20
    464c:	bl	3ff8 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    4650:	ldr	x2, [sp, #304]
    4654:	add	x1, x23, #0x8
    4658:	add	x0, x22, #0x8
    465c:	str	x2, [sp, #112]
    4660:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4664:	add	x1, x23, #0x18
    4668:	add	x0, x22, #0x18
    466c:	bl	5a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    4670:	mov	x0, x23
    4674:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4678:	mov	x0, x25
    467c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4680:	mov	x0, x24
    4684:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4688:	ldp	x25, x24, [x28, #24]
    468c:	ldr	x0, [sp, #136]
    4690:	str	x0, [sp, #96]
    4694:	cmp	x24, x25
    4698:	b.eq	4750 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x498>  // b.none
    469c:	mov	x20, #0x0                   	// #0
    46a0:	mov	x21, #0x0                   	// #0
    46a4:	b	46cc <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x414>
    46a8:	sub	x1, x24, x25
    46ac:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    46b0:	movk	x0, #0xaaab
    46b4:	add	x21, x21, #0x1
    46b8:	asr	x1, x1, #4
    46bc:	add	x20, x20, #0x30
    46c0:	mul	x1, x1, x0
    46c4:	cmp	x21, x1
    46c8:	b.cs	4750 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x498>  // b.hs, b.nlast
    46cc:	ldr	x0, [sp, #184]
    46d0:	add	x0, x0, x20
    46d4:	add	x26, x0, #0x8
    46d8:	ldr	w27, [x0, #16]
    46dc:	cmp	w27, #0x40
    46e0:	b.ls	46f8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x440>  // b.plast
    46e4:	mov	x0, x26
    46e8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    46ec:	sub	w1, w27, w0
    46f0:	cmp	w1, #0x40
    46f4:	b.hi	46a8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.pmore
    46f8:	mov	x0, x26
    46fc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4700:	mov	x2, x0
    4704:	cmp	x0, #0x1
    4708:	b.ne	46a8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.any
    470c:	ldr	x0, [sp, #96]
    4710:	mov	x1, x23
    4714:	str	x2, [sp, #304]
    4718:	add	x0, x0, x20
    471c:	str	w2, [sp, #312]
    4720:	add	x0, x0, #0x8
    4724:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4728:	ldr	w0, [sp, #312]
    472c:	cmp	w0, #0x40
    4730:	b.ls	4740 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x488>  // b.plast
    4734:	ldr	x0, [sp, #304]
    4738:	cbz	x0, 4740 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x488>
    473c:	bl	0 <_ZdaPv>
    4740:	ldr	x0, [sp, #136]
    4744:	str	x0, [sp, #96]
    4748:	ldp	x25, x24, [x28, #24]
    474c:	b	46a8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>
    4750:	mov	x2, x19
    4754:	ldr	w3, [sp, #128]
    4758:	ldr	x0, [sp, #112]
    475c:	str	wzr, [sp, #128]
    4760:	str	x0, [x2], #8
    4764:	ldr	x0, [sp, #104]
    4768:	str	w3, [x2, #8]
    476c:	ldr	x2, [sp, #120]
    4770:	str	x2, [x19, #8]
    4774:	ldr	x2, [sp, #96]
    4778:	str	x2, [x19, #24]
    477c:	ldr	x2, [sp, #144]
    4780:	str	x2, [x19, #32]
    4784:	ldr	x2, [sp, #152]
    4788:	str	x2, [x19, #40]
    478c:	stp	xzr, xzr, [sp, #136]
    4790:	str	xzr, [sp, #152]
    4794:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4798:	ldp	x25, x26, [sp, #64]
    479c:	b	439c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    47a0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    47a4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    47a8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    47ac:	add	x3, x3, #0x0
    47b0:	add	x1, x1, #0x0
    47b4:	add	x0, x0, #0x0
    47b8:	mov	w2, #0x245                 	// #581
    47bc:	bl	0 <__assert_fail>
    47c0:	ldp	x25, x26, [sp, #64]
    47c4:	b	4328 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x70>

00000000000047c8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>:
    47c8:	stp	x29, x30, [sp, #-96]!
    47cc:	mov	x3, x8
    47d0:	mov	x29, sp
    47d4:	stp	x21, x22, [sp, #32]
    47d8:	mov	x21, x2
    47dc:	mov	x2, x8
    47e0:	stp	x19, x20, [sp, #16]
    47e4:	mov	x22, x1
    47e8:	mov	x20, x8
    47ec:	stp	x23, x24, [sp, #48]
    47f0:	mov	x23, x0
    47f4:	mov	w24, #0x1                   	// #1
    47f8:	stp	xzr, xzr, [x2, #24]!
    47fc:	str	xzr, [x2, #16]
    4800:	str	xzr, [x3], #8
    4804:	ldrb	w0, [x21, #8]
    4808:	str	xzr, [x8, #8]
    480c:	str	w24, [x3, #8]
    4810:	cmp	w0, #0x3
    4814:	b.eq	487c <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    4818:	cmp	w0, #0x10
    481c:	b.eq	48d4 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x10c>  // b.none
    4820:	cmp	w0, #0x2
    4824:	b.eq	48a8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
    4828:	stp	x25, x26, [sp, #64]
    482c:	str	x27, [sp, #80]
    4830:	bl	0 <_ZN4llvm4dbgsEv>
    4834:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4838:	add	x1, x1, #0x0
    483c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4840:	mov	x19, x0
    4844:	mov	w2, #0x0                   	// #0
    4848:	mov	w3, #0x0                   	// #0
    484c:	mov	x0, x21
    4850:	mov	x1, x19
    4854:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    4858:	mov	x0, x19
    485c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4860:	add	x1, x1, #0x0
    4864:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4868:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    486c:	mov	w2, #0x1cf                 	// #463
    4870:	add	x1, x1, #0x0
    4874:	mov	x0, #0x0                   	// #0
    4878:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    487c:	ldr	d0, [x1]
    4880:	ldr	d1, [x23]
    4884:	fcmpe	d1, d0
    4888:	cset	x0, ls  // ls = plast
    488c:	str	x0, [x8, #8]
    4890:	mov	x0, x20
    4894:	ldp	x19, x20, [sp, #16]
    4898:	ldp	x21, x22, [sp, #32]
    489c:	ldp	x23, x24, [sp, #48]
    48a0:	ldp	x29, x30, [sp], #96
    48a4:	ret
    48a8:	ldr	s1, [x23]
    48ac:	ldr	s0, [x1]
    48b0:	fcmpe	s1, s0
    48b4:	cset	x0, ls  // ls = plast
    48b8:	str	x0, [x8, #8]
    48bc:	mov	x0, x20
    48c0:	ldp	x19, x20, [sp, #16]
    48c4:	ldp	x21, x22, [sp, #32]
    48c8:	ldp	x23, x24, [sp, #48]
    48cc:	ldp	x29, x30, [sp], #96
    48d0:	ret
    48d4:	ldp	x5, x3, [x1, #24]
    48d8:	stp	x25, x26, [sp, #64]
    48dc:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    48e0:	ldp	x1, x0, [x23, #24]
    48e4:	movk	x25, #0xaaab
    48e8:	ldr	x4, [x21, #24]
    48ec:	sub	x3, x3, x5
    48f0:	sub	x0, x0, x1
    48f4:	ldrb	w4, [x4, #8]
    48f8:	asr	x1, x0, #4
    48fc:	cmp	w4, #0x2
    4900:	mul	x1, x1, x25
    4904:	b.eq	49b8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x1f0>  // b.none
    4908:	cmp	x3, x0
    490c:	b.ne	4a64 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    4910:	mov	x0, x2
    4914:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4918:	ldp	x1, x4, [x23, #24]
    491c:	cmp	x1, x4
    4920:	b.eq	4a5c <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    4924:	mov	w21, #0x0                   	// #0
    4928:	mov	x2, #0x0                   	// #0
    492c:	str	x27, [sp, #80]
    4930:	add	x2, x2, x2, lsl #1
    4934:	ldr	x0, [x22, #24]
    4938:	lsl	x2, x2, #4
    493c:	ldr	x19, [x20, #24]
    4940:	ldr	d0, [x0, x2]
    4944:	ldr	d1, [x1, x2]
    4948:	add	x19, x19, x2
    494c:	add	x26, x19, #0x8
    4950:	fcmpe	d1, d0
    4954:	ldr	w0, [x19, #16]
    4958:	cset	x27, ls  // ls = plast
    495c:	cmp	w0, #0x40
    4960:	b.ls	4974 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>  // b.plast
    4964:	ldr	x0, [x19, #8]
    4968:	cbz	x0, 4974 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    496c:	bl	0 <_ZdaPv>
    4970:	ldp	x1, x4, [x23, #24]
    4974:	sub	x3, x4, x1
    4978:	str	x27, [x19, #8]
    497c:	add	w2, w21, #0x1
    4980:	asr	x3, x3, #4
    4984:	str	w24, [x26, #8]
    4988:	mov	x21, x2
    498c:	mul	x3, x3, x25
    4990:	cmp	x3, w2, uxtw
    4994:	b.hi	4930 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.pmore
    4998:	ldp	x25, x26, [sp, #64]
    499c:	ldr	x27, [sp, #80]
    49a0:	mov	x0, x20
    49a4:	ldp	x19, x20, [sp, #16]
    49a8:	ldp	x21, x22, [sp, #32]
    49ac:	ldp	x23, x24, [sp, #48]
    49b0:	ldp	x29, x30, [sp], #96
    49b4:	ret
    49b8:	cmp	x3, x0
    49bc:	b.ne	4a64 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    49c0:	mov	x0, x2
    49c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    49c8:	ldp	x1, x4, [x23, #24]
    49cc:	cmp	x4, x1
    49d0:	b.eq	4a5c <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    49d4:	mov	w21, w24
    49d8:	mov	x2, #0x0                   	// #0
    49dc:	mov	w24, #0x0                   	// #0
    49e0:	str	x27, [sp, #80]
    49e4:	nop
    49e8:	add	x2, x2, x2, lsl #1
    49ec:	ldr	x0, [x22, #24]
    49f0:	lsl	x2, x2, #4
    49f4:	ldr	x19, [x20, #24]
    49f8:	ldr	s0, [x0, x2]
    49fc:	ldr	s1, [x1, x2]
    4a00:	add	x19, x19, x2
    4a04:	add	x26, x19, #0x8
    4a08:	fcmpe	s1, s0
    4a0c:	ldr	w0, [x19, #16]
    4a10:	cset	x27, ls  // ls = plast
    4a14:	cmp	w0, #0x40
    4a18:	b.ls	4a2c <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    4a1c:	ldr	x0, [x19, #8]
    4a20:	cbz	x0, 4a2c <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x264>
    4a24:	bl	0 <_ZdaPv>
    4a28:	ldp	x1, x4, [x23, #24]
    4a2c:	sub	x3, x4, x1
    4a30:	str	x27, [x19, #8]
    4a34:	add	w2, w24, #0x1
    4a38:	asr	x3, x3, #4
    4a3c:	str	w21, [x26, #8]
    4a40:	mov	x24, x2
    4a44:	mul	x3, x3, x25
    4a48:	cmp	x3, w2, uxtw
    4a4c:	b.hi	49e8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.pmore
    4a50:	ldp	x25, x26, [sp, #64]
    4a54:	ldr	x27, [sp, #80]
    4a58:	b	49a0 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x1d8>
    4a5c:	ldp	x25, x26, [sp, #64]
    4a60:	b	4890 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    4a64:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4a68:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4a6c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4a70:	add	x3, x3, #0x0
    4a74:	add	x1, x1, #0x0
    4a78:	add	x0, x0, #0x0
    4a7c:	mov	w2, #0x1cc                 	// #460
    4a80:	str	x27, [sp, #80]
    4a84:	bl	0 <__assert_fail>

0000000000004a88 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>:
    4a88:	stp	x29, x30, [sp, #-352]!
    4a8c:	mov	x29, sp
    4a90:	stp	x19, x20, [sp, #16]
    4a94:	mov	x20, x2
    4a98:	ldrb	w2, [x2, #8]
    4a9c:	stp	x21, x22, [sp, #32]
    4aa0:	mov	x19, x8
    4aa4:	mov	x21, x1
    4aa8:	stp	x23, x24, [sp, #48]
    4aac:	mov	w24, #0x1                   	// #1
    4ab0:	cmp	w2, #0x2
    4ab4:	stp	x27, x28, [sp, #80]
    4ab8:	mov	x28, x0
    4abc:	stp	xzr, xzr, [sp, #112]
    4ac0:	str	w24, [sp, #128]
    4ac4:	stp	xzr, xzr, [sp, #136]
    4ac8:	str	xzr, [sp, #152]
    4acc:	b.eq	4b90 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x108>  // b.none
    4ad0:	ldr	d0, [x0]
    4ad4:	fcmp	d0, d0
    4ad8:	b.ne	4b3c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    4adc:	ldr	d0, [x1]
    4ae0:	fcmp	d0, d0
    4ae4:	b.ne	4b3c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    4ae8:	cmp	w2, #0x10
    4aec:	b.eq	4c20 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.none
    4af0:	add	x23, sp, #0x130
    4af4:	add	x22, sp, #0x70
    4af8:	add	x24, sp, #0x100
    4afc:	mov	x1, x28
    4b00:	mov	x0, x24
    4b04:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4b08:	mov	x1, x21
    4b0c:	mov	x0, x23
    4b10:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4b14:	mov	x8, x19
    4b18:	mov	x2, x20
    4b1c:	mov	x1, x23
    4b20:	mov	x0, x24
    4b24:	bl	47c8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    4b28:	mov	x0, x23
    4b2c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4b30:	mov	x0, x24
    4b34:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4b38:	b	4b6c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    4b3c:	mov	x2, x19
    4b40:	mov	x0, x19
    4b44:	ldr	x3, [sp, #112]
    4b48:	mov	x1, #0x1                   	// #1
    4b4c:	str	x3, [x2], #8
    4b50:	add	x22, sp, #0x70
    4b54:	str	x1, [sp, #120]
    4b58:	str	w1, [x2, #8]
    4b5c:	str	x1, [x19, #8]
    4b60:	stp	xzr, xzr, [x0, #24]!
    4b64:	str	xzr, [x0, #16]
    4b68:	str	wzr, [sp, #128]
    4b6c:	mov	x0, x22
    4b70:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4b74:	mov	x0, x19
    4b78:	ldp	x19, x20, [sp, #16]
    4b7c:	ldp	x21, x22, [sp, #32]
    4b80:	ldp	x23, x24, [sp, #48]
    4b84:	ldp	x27, x28, [sp, #80]
    4b88:	ldp	x29, x30, [sp], #352
    4b8c:	ret
    4b90:	ldr	s0, [x0]
    4b94:	fcmp	s0, s0
    4b98:	b.ne	4ba8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x120>  // b.any
    4b9c:	ldr	s0, [x1]
    4ba0:	fcmp	s0, s0
    4ba4:	b.eq	4af0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x68>  // b.none
    4ba8:	mov	w2, #0x1                   	// #1
    4bac:	mov	x3, #0x1                   	// #1
    4bb0:	add	x22, sp, #0x70
    4bb4:	add	x1, sp, #0x130
    4bb8:	add	x0, x22, #0x8
    4bbc:	str	x3, [sp, #304]
    4bc0:	str	w2, [sp, #312]
    4bc4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4bc8:	ldr	w0, [sp, #312]
    4bcc:	cmp	w0, #0x40
    4bd0:	b.ls	4be0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x158>  // b.plast
    4bd4:	ldr	x0, [sp, #304]
    4bd8:	cbz	x0, 4be0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x158>
    4bdc:	bl	0 <_ZdaPv>
    4be0:	mov	x1, x19
    4be4:	ldr	w2, [sp, #128]
    4be8:	ldr	x3, [sp, #112]
    4bec:	mov	x0, x19
    4bf0:	str	x3, [x1], #8
    4bf4:	ldur	q0, [sp, #136]
    4bf8:	str	w2, [x1, #8]
    4bfc:	ldr	x1, [sp, #120]
    4c00:	str	x1, [x19, #8]
    4c04:	ldr	x1, [sp, #152]
    4c08:	str	q0, [x0, #24]!
    4c0c:	str	x1, [x0, #16]
    4c10:	str	wzr, [sp, #128]
    4c14:	stp	xzr, xzr, [sp, #136]
    4c18:	str	xzr, [sp, #152]
    4c1c:	b	4b6c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    4c20:	mov	x0, x20
    4c24:	stp	x25, x26, [sp, #64]
    4c28:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4c2c:	ldp	x2, x1, [x28, #24]
    4c30:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4c34:	ldr	x4, [x0, #24]
    4c38:	movk	x25, #0xaaab
    4c3c:	ldr	x5, [x21, #24]
    4c40:	sub	x0, x1, x2
    4c44:	ldrb	w4, [x4, #8]
    4c48:	ldr	x2, [x21, #32]
    4c4c:	asr	x1, x0, #4
    4c50:	cmp	w4, #0x2
    4c54:	sub	x2, x2, x5
    4c58:	mul	x1, x1, x25
    4c5c:	b.eq	4d18 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x290>  // b.none
    4c60:	cmp	x2, x0
    4c64:	b.ne	4f70 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    4c68:	add	x22, sp, #0x70
    4c6c:	add	x23, sp, #0x130
    4c70:	add	x0, x22, #0x18
    4c74:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4c78:	ldp	x2, x0, [x28, #24]
    4c7c:	mov	w27, #0x0                   	// #0
    4c80:	mov	x1, #0x0                   	// #0
    4c84:	mov	x26, #0x1                   	// #1
    4c88:	cmp	x0, x2
    4c8c:	b.ne	4cdc <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x254>  // b.any
    4c90:	b	4dd0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x348>
    4c94:	mov	x1, x23
    4c98:	str	x26, [sp, #304]
    4c9c:	str	w24, [sp, #312]
    4ca0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4ca4:	ldr	w0, [sp, #312]
    4ca8:	cmp	w0, #0x40
    4cac:	b.ls	4cbc <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x234>  // b.plast
    4cb0:	ldr	x0, [sp, #304]
    4cb4:	cbz	x0, 4cbc <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x234>
    4cb8:	bl	0 <_ZdaPv>
    4cbc:	ldp	x2, x0, [x28, #24]
    4cc0:	add	w1, w27, #0x1
    4cc4:	mov	x27, x1
    4cc8:	sub	x0, x0, x2
    4ccc:	asr	x0, x0, #4
    4cd0:	mul	x0, x0, x25
    4cd4:	cmp	x0, w1, uxtw
    4cd8:	b.ls	4dd0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x348>  // b.plast
    4cdc:	add	x1, x1, x1, lsl #1
    4ce0:	ldr	x0, [sp, #136]
    4ce4:	lsl	x1, x1, #4
    4ce8:	add	x0, x0, x1
    4cec:	ldr	d0, [x2, x1]
    4cf0:	add	x0, x0, #0x8
    4cf4:	fcmp	d0, d0
    4cf8:	b.ne	4c94 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x20c>  // b.any
    4cfc:	ldr	x2, [x21, #24]
    4d00:	ldr	d0, [x2, x1]
    4d04:	fcmp	d0, d0
    4d08:	b.ne	4c94 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x20c>  // b.any
    4d0c:	mov	x1, x23
    4d10:	str	xzr, [sp, #304]
    4d14:	b	4c9c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x214>
    4d18:	cmp	x2, x0
    4d1c:	b.ne	4f70 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    4d20:	add	x22, sp, #0x70
    4d24:	add	x23, sp, #0x130
    4d28:	add	x0, x22, #0x18
    4d2c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4d30:	ldp	x2, x0, [x28, #24]
    4d34:	mov	w27, #0x0                   	// #0
    4d38:	mov	x1, #0x0                   	// #0
    4d3c:	mov	x26, #0x1                   	// #1
    4d40:	cmp	x2, x0
    4d44:	b.ne	4d94 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x30c>  // b.any
    4d48:	b	4dd0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x348>
    4d4c:	mov	x1, x23
    4d50:	str	x26, [sp, #304]
    4d54:	str	w24, [sp, #312]
    4d58:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4d5c:	ldr	w0, [sp, #312]
    4d60:	cmp	w0, #0x40
    4d64:	b.ls	4d74 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2ec>  // b.plast
    4d68:	ldr	x0, [sp, #304]
    4d6c:	cbz	x0, 4d74 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2ec>
    4d70:	bl	0 <_ZdaPv>
    4d74:	ldp	x2, x0, [x28, #24]
    4d78:	add	w1, w27, #0x1
    4d7c:	mov	x27, x1
    4d80:	sub	x0, x0, x2
    4d84:	asr	x0, x0, #4
    4d88:	mul	x0, x0, x25
    4d8c:	cmp	x0, w1, uxtw
    4d90:	b.ls	4dd0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x348>  // b.plast
    4d94:	add	x1, x1, x1, lsl #1
    4d98:	ldr	x0, [sp, #136]
    4d9c:	lsl	x1, x1, #4
    4da0:	add	x0, x0, x1
    4da4:	ldr	s0, [x2, x1]
    4da8:	add	x0, x0, #0x8
    4dac:	fcmp	s0, s0
    4db0:	b.ne	4d4c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2c4>  // b.any
    4db4:	ldr	x2, [x21, #24]
    4db8:	ldr	s0, [x2, x1]
    4dbc:	fcmp	s0, s0
    4dc0:	b.ne	4d4c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2c4>  // b.any
    4dc4:	mov	x1, x23
    4dc8:	str	xzr, [sp, #304]
    4dcc:	b	4d54 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2cc>
    4dd0:	ldrb	w0, [x20, #8]
    4dd4:	cmp	w0, #0x10
    4dd8:	b.ne	4f90 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x508>  // b.any
    4ddc:	add	x24, sp, #0xd0
    4de0:	add	x0, sp, #0xa0
    4de4:	mov	x1, x22
    4de8:	str	x0, [sp, #104]
    4dec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4df0:	add	x25, sp, #0x100
    4df4:	mov	x0, x24
    4df8:	mov	x1, x28
    4dfc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4e00:	mov	x0, x25
    4e04:	mov	x1, x21
    4e08:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4e0c:	mov	x8, x23
    4e10:	mov	x1, x25
    4e14:	mov	x0, x24
    4e18:	mov	x2, x20
    4e1c:	bl	47c8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    4e20:	ldr	x2, [sp, #304]
    4e24:	add	x1, x23, #0x8
    4e28:	add	x0, x22, #0x8
    4e2c:	str	x2, [sp, #112]
    4e30:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4e34:	add	x1, x23, #0x18
    4e38:	add	x0, x22, #0x18
    4e3c:	bl	5a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    4e40:	mov	x0, x23
    4e44:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4e48:	mov	x0, x25
    4e4c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4e50:	mov	x0, x24
    4e54:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4e58:	ldp	x25, x24, [x28, #24]
    4e5c:	ldr	x0, [sp, #136]
    4e60:	str	x0, [sp, #96]
    4e64:	cmp	x24, x25
    4e68:	b.eq	4f20 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x498>  // b.none
    4e6c:	mov	x20, #0x0                   	// #0
    4e70:	mov	x21, #0x0                   	// #0
    4e74:	b	4e9c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x414>
    4e78:	sub	x1, x24, x25
    4e7c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4e80:	movk	x0, #0xaaab
    4e84:	add	x21, x21, #0x1
    4e88:	asr	x1, x1, #4
    4e8c:	add	x20, x20, #0x30
    4e90:	mul	x1, x1, x0
    4e94:	cmp	x21, x1
    4e98:	b.cs	4f20 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x498>  // b.hs, b.nlast
    4e9c:	ldr	x0, [sp, #184]
    4ea0:	add	x0, x0, x20
    4ea4:	add	x26, x0, #0x8
    4ea8:	ldr	w27, [x0, #16]
    4eac:	cmp	w27, #0x40
    4eb0:	b.ls	4ec8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x440>  // b.plast
    4eb4:	mov	x0, x26
    4eb8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    4ebc:	sub	w1, w27, w0
    4ec0:	cmp	w1, #0x40
    4ec4:	b.hi	4e78 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.pmore
    4ec8:	mov	x0, x26
    4ecc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4ed0:	mov	x2, x0
    4ed4:	cmp	x0, #0x1
    4ed8:	b.ne	4e78 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.any
    4edc:	ldr	x0, [sp, #96]
    4ee0:	mov	x1, x23
    4ee4:	str	x2, [sp, #304]
    4ee8:	add	x0, x0, x20
    4eec:	str	w2, [sp, #312]
    4ef0:	add	x0, x0, #0x8
    4ef4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4ef8:	ldr	w0, [sp, #312]
    4efc:	cmp	w0, #0x40
    4f00:	b.ls	4f10 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x488>  // b.plast
    4f04:	ldr	x0, [sp, #304]
    4f08:	cbz	x0, 4f10 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x488>
    4f0c:	bl	0 <_ZdaPv>
    4f10:	ldr	x0, [sp, #136]
    4f14:	str	x0, [sp, #96]
    4f18:	ldp	x25, x24, [x28, #24]
    4f1c:	b	4e78 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>
    4f20:	mov	x2, x19
    4f24:	ldr	w3, [sp, #128]
    4f28:	ldr	x0, [sp, #112]
    4f2c:	str	wzr, [sp, #128]
    4f30:	str	x0, [x2], #8
    4f34:	ldr	x0, [sp, #104]
    4f38:	str	w3, [x2, #8]
    4f3c:	ldr	x2, [sp, #120]
    4f40:	str	x2, [x19, #8]
    4f44:	ldr	x2, [sp, #96]
    4f48:	str	x2, [x19, #24]
    4f4c:	ldr	x2, [sp, #144]
    4f50:	str	x2, [x19, #32]
    4f54:	ldr	x2, [sp, #152]
    4f58:	str	x2, [x19, #40]
    4f5c:	stp	xzr, xzr, [sp, #136]
    4f60:	str	xzr, [sp, #152]
    4f64:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4f68:	ldp	x25, x26, [sp, #64]
    4f6c:	b	4b6c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    4f70:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4f74:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4f78:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    4f7c:	add	x3, x3, #0x0
    4f80:	add	x1, x1, #0x0
    4f84:	add	x0, x0, #0x0
    4f88:	mov	w2, #0x22a                 	// #554
    4f8c:	bl	0 <__assert_fail>
    4f90:	ldp	x25, x26, [sp, #64]
    4f94:	b	4af8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x70>

0000000000004f98 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>:
    4f98:	stp	x29, x30, [sp, #-96]!
    4f9c:	mov	x3, x8
    4fa0:	mov	x29, sp
    4fa4:	stp	x21, x22, [sp, #32]
    4fa8:	mov	x21, x2
    4fac:	mov	x2, x8
    4fb0:	stp	x19, x20, [sp, #16]
    4fb4:	mov	x22, x1
    4fb8:	mov	x20, x8
    4fbc:	stp	x23, x24, [sp, #48]
    4fc0:	mov	x23, x0
    4fc4:	mov	w24, #0x1                   	// #1
    4fc8:	stp	xzr, xzr, [x2, #24]!
    4fcc:	str	xzr, [x2, #16]
    4fd0:	str	xzr, [x3], #8
    4fd4:	ldrb	w0, [x21, #8]
    4fd8:	str	xzr, [x8, #8]
    4fdc:	str	w24, [x3, #8]
    4fe0:	cmp	w0, #0x3
    4fe4:	b.eq	504c <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.none
    4fe8:	cmp	w0, #0x10
    4fec:	b.eq	50a4 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x10c>  // b.none
    4ff0:	cmp	w0, #0x2
    4ff4:	b.eq	5078 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xe0>  // b.none
    4ff8:	stp	x25, x26, [sp, #64]
    4ffc:	str	x27, [sp, #80]
    5000:	bl	0 <_ZN4llvm4dbgsEv>
    5004:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5008:	add	x1, x1, #0x0
    500c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5010:	mov	x19, x0
    5014:	mov	w2, #0x0                   	// #0
    5018:	mov	w3, #0x0                   	// #0
    501c:	mov	x0, x21
    5020:	mov	x1, x19
    5024:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    5028:	mov	x0, x19
    502c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5030:	add	x1, x1, #0x0
    5034:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5038:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    503c:	mov	w2, #0x1dd                 	// #477
    5040:	add	x1, x1, #0x0
    5044:	mov	x0, #0x0                   	// #0
    5048:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    504c:	ldr	d0, [x1]
    5050:	ldr	d1, [x23]
    5054:	fcmpe	d1, d0
    5058:	cset	x0, ge  // ge = tcont
    505c:	str	x0, [x8, #8]
    5060:	mov	x0, x20
    5064:	ldp	x19, x20, [sp, #16]
    5068:	ldp	x21, x22, [sp, #32]
    506c:	ldp	x23, x24, [sp, #48]
    5070:	ldp	x29, x30, [sp], #96
    5074:	ret
    5078:	ldr	s1, [x23]
    507c:	ldr	s0, [x1]
    5080:	fcmpe	s1, s0
    5084:	cset	x0, ge  // ge = tcont
    5088:	str	x0, [x8, #8]
    508c:	mov	x0, x20
    5090:	ldp	x19, x20, [sp, #16]
    5094:	ldp	x21, x22, [sp, #32]
    5098:	ldp	x23, x24, [sp, #48]
    509c:	ldp	x29, x30, [sp], #96
    50a0:	ret
    50a4:	ldp	x5, x3, [x1, #24]
    50a8:	stp	x25, x26, [sp, #64]
    50ac:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    50b0:	ldp	x1, x0, [x23, #24]
    50b4:	movk	x25, #0xaaab
    50b8:	ldr	x4, [x21, #24]
    50bc:	sub	x3, x3, x5
    50c0:	sub	x0, x0, x1
    50c4:	ldrb	w4, [x4, #8]
    50c8:	asr	x1, x0, #4
    50cc:	cmp	w4, #0x2
    50d0:	mul	x1, x1, x25
    50d4:	b.eq	5188 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x1f0>  // b.none
    50d8:	cmp	x3, x0
    50dc:	b.ne	5234 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    50e0:	mov	x0, x2
    50e4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    50e8:	ldp	x1, x4, [x23, #24]
    50ec:	cmp	x1, x4
    50f0:	b.eq	522c <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    50f4:	mov	w21, #0x0                   	// #0
    50f8:	mov	x2, #0x0                   	// #0
    50fc:	str	x27, [sp, #80]
    5100:	add	x2, x2, x2, lsl #1
    5104:	ldr	x0, [x22, #24]
    5108:	lsl	x2, x2, #4
    510c:	ldr	x19, [x20, #24]
    5110:	ldr	d0, [x0, x2]
    5114:	ldr	d1, [x1, x2]
    5118:	add	x19, x19, x2
    511c:	add	x26, x19, #0x8
    5120:	fcmpe	d1, d0
    5124:	ldr	w0, [x19, #16]
    5128:	cset	x27, ge  // ge = tcont
    512c:	cmp	w0, #0x40
    5130:	b.ls	5144 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>  // b.plast
    5134:	ldr	x0, [x19, #8]
    5138:	cbz	x0, 5144 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x1ac>
    513c:	bl	0 <_ZdaPv>
    5140:	ldp	x1, x4, [x23, #24]
    5144:	sub	x3, x4, x1
    5148:	str	x27, [x19, #8]
    514c:	add	w2, w21, #0x1
    5150:	asr	x3, x3, #4
    5154:	str	w24, [x26, #8]
    5158:	mov	x21, x2
    515c:	mul	x3, x3, x25
    5160:	cmp	x3, w2, uxtw
    5164:	b.hi	5100 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.pmore
    5168:	ldp	x25, x26, [sp, #64]
    516c:	ldr	x27, [sp, #80]
    5170:	mov	x0, x20
    5174:	ldp	x19, x20, [sp, #16]
    5178:	ldp	x21, x22, [sp, #32]
    517c:	ldp	x23, x24, [sp, #48]
    5180:	ldp	x29, x30, [sp], #96
    5184:	ret
    5188:	cmp	x3, x0
    518c:	b.ne	5234 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x29c>  // b.any
    5190:	mov	x0, x2
    5194:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5198:	ldp	x1, x4, [x23, #24]
    519c:	cmp	x4, x1
    51a0:	b.eq	522c <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.none
    51a4:	mov	w21, w24
    51a8:	mov	x2, #0x0                   	// #0
    51ac:	mov	w24, #0x0                   	// #0
    51b0:	str	x27, [sp, #80]
    51b4:	nop
    51b8:	add	x2, x2, x2, lsl #1
    51bc:	ldr	x0, [x22, #24]
    51c0:	lsl	x2, x2, #4
    51c4:	ldr	x19, [x20, #24]
    51c8:	ldr	s0, [x0, x2]
    51cc:	ldr	s1, [x1, x2]
    51d0:	add	x19, x19, x2
    51d4:	add	x26, x19, #0x8
    51d8:	fcmpe	s1, s0
    51dc:	ldr	w0, [x19, #16]
    51e0:	cset	x27, ge  // ge = tcont
    51e4:	cmp	w0, #0x40
    51e8:	b.ls	51fc <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x264>  // b.plast
    51ec:	ldr	x0, [x19, #8]
    51f0:	cbz	x0, 51fc <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x264>
    51f4:	bl	0 <_ZdaPv>
    51f8:	ldp	x1, x4, [x23, #24]
    51fc:	sub	x3, x4, x1
    5200:	str	x27, [x19, #8]
    5204:	add	w2, w24, #0x1
    5208:	asr	x3, x3, #4
    520c:	str	w21, [x26, #8]
    5210:	mov	x24, x2
    5214:	mul	x3, x3, x25
    5218:	cmp	x3, w2, uxtw
    521c:	b.hi	51b8 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.pmore
    5220:	ldp	x25, x26, [sp, #64]
    5224:	ldr	x27, [sp, #80]
    5228:	b	5170 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x1d8>
    522c:	ldp	x25, x26, [sp, #64]
    5230:	b	5060 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    5234:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5238:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    523c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5240:	add	x3, x3, #0x0
    5244:	add	x1, x1, #0x0
    5248:	add	x0, x0, #0x0
    524c:	mov	w2, #0x1da                 	// #474
    5250:	str	x27, [sp, #80]
    5254:	bl	0 <__assert_fail>

0000000000005258 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>:
    5258:	stp	x29, x30, [sp, #-352]!
    525c:	mov	x29, sp
    5260:	stp	x19, x20, [sp, #16]
    5264:	mov	x20, x2
    5268:	ldrb	w2, [x2, #8]
    526c:	stp	x21, x22, [sp, #32]
    5270:	mov	x19, x8
    5274:	mov	x21, x1
    5278:	stp	x23, x24, [sp, #48]
    527c:	mov	w24, #0x1                   	// #1
    5280:	cmp	w2, #0x2
    5284:	stp	x27, x28, [sp, #80]
    5288:	mov	x28, x0
    528c:	stp	xzr, xzr, [sp, #112]
    5290:	str	w24, [sp, #128]
    5294:	stp	xzr, xzr, [sp, #136]
    5298:	str	xzr, [sp, #152]
    529c:	b.eq	5360 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x108>  // b.none
    52a0:	ldr	d0, [x0]
    52a4:	fcmp	d0, d0
    52a8:	b.ne	530c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    52ac:	ldr	d0, [x1]
    52b0:	fcmp	d0, d0
    52b4:	b.ne	530c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xb4>  // b.any
    52b8:	cmp	w2, #0x10
    52bc:	b.eq	53f0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x198>  // b.none
    52c0:	add	x23, sp, #0x130
    52c4:	add	x22, sp, #0x70
    52c8:	add	x24, sp, #0x100
    52cc:	mov	x1, x28
    52d0:	mov	x0, x24
    52d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    52d8:	mov	x1, x21
    52dc:	mov	x0, x23
    52e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    52e4:	mov	x8, x19
    52e8:	mov	x2, x20
    52ec:	mov	x1, x23
    52f0:	mov	x0, x24
    52f4:	bl	4f98 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    52f8:	mov	x0, x23
    52fc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5300:	mov	x0, x24
    5304:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5308:	b	533c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    530c:	mov	x2, x19
    5310:	mov	x0, x19
    5314:	ldr	x3, [sp, #112]
    5318:	mov	x1, #0x1                   	// #1
    531c:	str	x3, [x2], #8
    5320:	add	x22, sp, #0x70
    5324:	str	x1, [sp, #120]
    5328:	str	w1, [x2, #8]
    532c:	str	x1, [x19, #8]
    5330:	stp	xzr, xzr, [x0, #24]!
    5334:	str	xzr, [x0, #16]
    5338:	str	wzr, [sp, #128]
    533c:	mov	x0, x22
    5340:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5344:	mov	x0, x19
    5348:	ldp	x19, x20, [sp, #16]
    534c:	ldp	x21, x22, [sp, #32]
    5350:	ldp	x23, x24, [sp, #48]
    5354:	ldp	x27, x28, [sp, #80]
    5358:	ldp	x29, x30, [sp], #352
    535c:	ret
    5360:	ldr	s0, [x0]
    5364:	fcmp	s0, s0
    5368:	b.ne	5378 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x120>  // b.any
    536c:	ldr	s0, [x1]
    5370:	fcmp	s0, s0
    5374:	b.eq	52c0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x68>  // b.none
    5378:	mov	w2, #0x1                   	// #1
    537c:	mov	x3, #0x1                   	// #1
    5380:	add	x22, sp, #0x70
    5384:	add	x1, sp, #0x130
    5388:	add	x0, x22, #0x8
    538c:	str	x3, [sp, #304]
    5390:	str	w2, [sp, #312]
    5394:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5398:	ldr	w0, [sp, #312]
    539c:	cmp	w0, #0x40
    53a0:	b.ls	53b0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x158>  // b.plast
    53a4:	ldr	x0, [sp, #304]
    53a8:	cbz	x0, 53b0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x158>
    53ac:	bl	0 <_ZdaPv>
    53b0:	mov	x1, x19
    53b4:	ldr	w2, [sp, #128]
    53b8:	ldr	x3, [sp, #112]
    53bc:	mov	x0, x19
    53c0:	str	x3, [x1], #8
    53c4:	ldur	q0, [sp, #136]
    53c8:	str	w2, [x1, #8]
    53cc:	ldr	x1, [sp, #120]
    53d0:	str	x1, [x19, #8]
    53d4:	ldr	x1, [sp, #152]
    53d8:	str	q0, [x0, #24]!
    53dc:	str	x1, [x0, #16]
    53e0:	str	wzr, [sp, #128]
    53e4:	stp	xzr, xzr, [sp, #136]
    53e8:	str	xzr, [sp, #152]
    53ec:	b	533c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    53f0:	mov	x0, x20
    53f4:	stp	x25, x26, [sp, #64]
    53f8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    53fc:	ldp	x2, x1, [x28, #24]
    5400:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5404:	ldr	x4, [x0, #24]
    5408:	movk	x25, #0xaaab
    540c:	ldr	x5, [x21, #24]
    5410:	sub	x0, x1, x2
    5414:	ldrb	w4, [x4, #8]
    5418:	ldr	x2, [x21, #32]
    541c:	asr	x1, x0, #4
    5420:	cmp	w4, #0x2
    5424:	sub	x2, x2, x5
    5428:	mul	x1, x1, x25
    542c:	b.eq	54e8 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x290>  // b.none
    5430:	cmp	x2, x0
    5434:	b.ne	5740 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    5438:	add	x22, sp, #0x70
    543c:	add	x23, sp, #0x130
    5440:	add	x0, x22, #0x18
    5444:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5448:	ldp	x2, x0, [x28, #24]
    544c:	mov	w27, #0x0                   	// #0
    5450:	mov	x1, #0x0                   	// #0
    5454:	mov	x26, #0x1                   	// #1
    5458:	cmp	x0, x2
    545c:	b.ne	54ac <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x254>  // b.any
    5460:	b	55a0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x348>
    5464:	mov	x1, x23
    5468:	str	x26, [sp, #304]
    546c:	str	w24, [sp, #312]
    5470:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5474:	ldr	w0, [sp, #312]
    5478:	cmp	w0, #0x40
    547c:	b.ls	548c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x234>  // b.plast
    5480:	ldr	x0, [sp, #304]
    5484:	cbz	x0, 548c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x234>
    5488:	bl	0 <_ZdaPv>
    548c:	ldp	x2, x0, [x28, #24]
    5490:	add	w1, w27, #0x1
    5494:	mov	x27, x1
    5498:	sub	x0, x0, x2
    549c:	asr	x0, x0, #4
    54a0:	mul	x0, x0, x25
    54a4:	cmp	x0, w1, uxtw
    54a8:	b.ls	55a0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x348>  // b.plast
    54ac:	add	x1, x1, x1, lsl #1
    54b0:	ldr	x0, [sp, #136]
    54b4:	lsl	x1, x1, #4
    54b8:	add	x0, x0, x1
    54bc:	ldr	d0, [x2, x1]
    54c0:	add	x0, x0, #0x8
    54c4:	fcmp	d0, d0
    54c8:	b.ne	5464 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x20c>  // b.any
    54cc:	ldr	x2, [x21, #24]
    54d0:	ldr	d0, [x2, x1]
    54d4:	fcmp	d0, d0
    54d8:	b.ne	5464 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x20c>  // b.any
    54dc:	mov	x1, x23
    54e0:	str	xzr, [sp, #304]
    54e4:	b	546c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x214>
    54e8:	cmp	x2, x0
    54ec:	b.ne	5740 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x4e8>  // b.any
    54f0:	add	x22, sp, #0x70
    54f4:	add	x23, sp, #0x130
    54f8:	add	x0, x22, #0x18
    54fc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5500:	ldp	x2, x0, [x28, #24]
    5504:	mov	w27, #0x0                   	// #0
    5508:	mov	x1, #0x0                   	// #0
    550c:	mov	x26, #0x1                   	// #1
    5510:	cmp	x2, x0
    5514:	b.ne	5564 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x30c>  // b.any
    5518:	b	55a0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x348>
    551c:	mov	x1, x23
    5520:	str	x26, [sp, #304]
    5524:	str	w24, [sp, #312]
    5528:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    552c:	ldr	w0, [sp, #312]
    5530:	cmp	w0, #0x40
    5534:	b.ls	5544 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2ec>  // b.plast
    5538:	ldr	x0, [sp, #304]
    553c:	cbz	x0, 5544 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2ec>
    5540:	bl	0 <_ZdaPv>
    5544:	ldp	x2, x0, [x28, #24]
    5548:	add	w1, w27, #0x1
    554c:	mov	x27, x1
    5550:	sub	x0, x0, x2
    5554:	asr	x0, x0, #4
    5558:	mul	x0, x0, x25
    555c:	cmp	x0, w1, uxtw
    5560:	b.ls	55a0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x348>  // b.plast
    5564:	add	x1, x1, x1, lsl #1
    5568:	ldr	x0, [sp, #136]
    556c:	lsl	x1, x1, #4
    5570:	add	x0, x0, x1
    5574:	ldr	s0, [x2, x1]
    5578:	add	x0, x0, #0x8
    557c:	fcmp	s0, s0
    5580:	b.ne	551c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2c4>  // b.any
    5584:	ldr	x2, [x21, #24]
    5588:	ldr	s0, [x2, x1]
    558c:	fcmp	s0, s0
    5590:	b.ne	551c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2c4>  // b.any
    5594:	mov	x1, x23
    5598:	str	xzr, [sp, #304]
    559c:	b	5524 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2cc>
    55a0:	ldrb	w0, [x20, #8]
    55a4:	cmp	w0, #0x10
    55a8:	b.ne	5760 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x508>  // b.any
    55ac:	add	x24, sp, #0xd0
    55b0:	add	x0, sp, #0xa0
    55b4:	mov	x1, x22
    55b8:	str	x0, [sp, #104]
    55bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    55c0:	add	x25, sp, #0x100
    55c4:	mov	x0, x24
    55c8:	mov	x1, x28
    55cc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    55d0:	mov	x0, x25
    55d4:	mov	x1, x21
    55d8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    55dc:	mov	x8, x23
    55e0:	mov	x1, x25
    55e4:	mov	x0, x24
    55e8:	mov	x2, x20
    55ec:	bl	4f98 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    55f0:	ldr	x2, [sp, #304]
    55f4:	add	x1, x23, #0x8
    55f8:	add	x0, x22, #0x8
    55fc:	str	x2, [sp, #112]
    5600:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5604:	add	x1, x23, #0x18
    5608:	add	x0, x22, #0x18
    560c:	bl	5a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    5610:	mov	x0, x23
    5614:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5618:	mov	x0, x25
    561c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5620:	mov	x0, x24
    5624:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5628:	ldp	x25, x24, [x28, #24]
    562c:	ldr	x0, [sp, #136]
    5630:	str	x0, [sp, #96]
    5634:	cmp	x24, x25
    5638:	b.eq	56f0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x498>  // b.none
    563c:	mov	x20, #0x0                   	// #0
    5640:	mov	x21, #0x0                   	// #0
    5644:	b	566c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x414>
    5648:	sub	x1, x24, x25
    564c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5650:	movk	x0, #0xaaab
    5654:	add	x21, x21, #0x1
    5658:	asr	x1, x1, #4
    565c:	add	x20, x20, #0x30
    5660:	mul	x1, x1, x0
    5664:	cmp	x21, x1
    5668:	b.cs	56f0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x498>  // b.hs, b.nlast
    566c:	ldr	x0, [sp, #184]
    5670:	add	x0, x0, x20
    5674:	add	x26, x0, #0x8
    5678:	ldr	w27, [x0, #16]
    567c:	cmp	w27, #0x40
    5680:	b.ls	5698 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x440>  // b.plast
    5684:	mov	x0, x26
    5688:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    568c:	sub	w1, w27, w0
    5690:	cmp	w1, #0x40
    5694:	b.hi	5648 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.pmore
    5698:	mov	x0, x26
    569c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    56a0:	mov	x2, x0
    56a4:	cmp	x0, #0x1
    56a8:	b.ne	5648 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.any
    56ac:	ldr	x0, [sp, #96]
    56b0:	mov	x1, x23
    56b4:	str	x2, [sp, #304]
    56b8:	add	x0, x0, x20
    56bc:	str	w2, [sp, #312]
    56c0:	add	x0, x0, #0x8
    56c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    56c8:	ldr	w0, [sp, #312]
    56cc:	cmp	w0, #0x40
    56d0:	b.ls	56e0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x488>  // b.plast
    56d4:	ldr	x0, [sp, #304]
    56d8:	cbz	x0, 56e0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x488>
    56dc:	bl	0 <_ZdaPv>
    56e0:	ldr	x0, [sp, #136]
    56e4:	str	x0, [sp, #96]
    56e8:	ldp	x25, x24, [x28, #24]
    56ec:	b	5648 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>
    56f0:	mov	x2, x19
    56f4:	ldr	w3, [sp, #128]
    56f8:	ldr	x0, [sp, #112]
    56fc:	str	wzr, [sp, #128]
    5700:	str	x0, [x2], #8
    5704:	ldr	x0, [sp, #104]
    5708:	str	w3, [x2, #8]
    570c:	ldr	x2, [sp, #120]
    5710:	str	x2, [x19, #8]
    5714:	ldr	x2, [sp, #96]
    5718:	str	x2, [x19, #24]
    571c:	ldr	x2, [sp, #144]
    5720:	str	x2, [x19, #32]
    5724:	ldr	x2, [sp, #152]
    5728:	str	x2, [x19, #40]
    572c:	stp	xzr, xzr, [sp, #136]
    5730:	str	xzr, [sp, #152]
    5734:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5738:	ldp	x25, x26, [sp, #64]
    573c:	b	533c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xe4>
    5740:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5744:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5748:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    574c:	add	x3, x3, #0x0
    5750:	add	x1, x1, #0x0
    5754:	add	x0, x0, #0x0
    5758:	mov	w2, #0x233                 	// #563
    575c:	bl	0 <__assert_fail>
    5760:	ldp	x25, x26, [sp, #64]
    5764:	b	52c8 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x70>

0000000000005768 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>:
    5768:	stp	x29, x30, [sp, #-96]!
    576c:	mov	x4, x8
    5770:	mov	x5, x8
    5774:	mov	x29, sp
    5778:	stp	x21, x22, [sp, #32]
    577c:	mov	x22, x8
    5780:	stp	x23, x24, [sp, #48]
    5784:	and	w24, w3, #0xff
    5788:	stp	x25, x26, [sp, #64]
    578c:	mov	x25, x0
    5790:	mov	w26, #0x1                   	// #1
    5794:	stp	xzr, xzr, [x4, #24]!
    5798:	str	xzr, [x4, #16]
    579c:	str	xzr, [x5], #8
    57a0:	ldrb	w0, [x2, #8]
    57a4:	str	xzr, [x8, #8]
    57a8:	str	w26, [x5, #8]
    57ac:	cmp	w0, #0x10
    57b0:	b.ne	5894 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x12c>  // b.any
    57b4:	ldp	x2, x0, [x25, #24]
    57b8:	ldr	x3, [x1, #24]
    57bc:	sub	x0, x0, x2
    57c0:	ldr	x2, [x1, #32]
    57c4:	asr	x1, x0, #4
    57c8:	str	x27, [sp, #80]
    57cc:	mov	x27, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    57d0:	movk	x27, #0xaaab
    57d4:	sub	x2, x2, x3
    57d8:	cmp	x2, x0
    57dc:	mul	x1, x1, x27
    57e0:	b.ne	58b4 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x14c>  // b.any
    57e4:	cbnz	x1, 5804 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x9c>
    57e8:	mov	x0, x22
    57ec:	ldp	x21, x22, [sp, #32]
    57f0:	ldp	x23, x24, [sp, #48]
    57f4:	ldp	x25, x26, [sp, #64]
    57f8:	ldr	x27, [sp, #80]
    57fc:	ldp	x29, x30, [sp], #96
    5800:	ret
    5804:	mov	x0, x4
    5808:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    580c:	ldp	x2, x3, [x25, #24]
    5810:	cmp	x3, x2
    5814:	b.eq	57e8 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x80>  // b.none
    5818:	and	x24, x24, #0xff
    581c:	mov	x21, #0x0                   	// #0
    5820:	stp	x19, x20, [sp, #16]
    5824:	mov	x20, #0x0                   	// #0
    5828:	ldr	x19, [x22, #24]
    582c:	add	x19, x19, x20
    5830:	add	x23, x19, #0x8
    5834:	ldr	w1, [x19, #16]
    5838:	cmp	w1, #0x40
    583c:	b.ls	5850 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0xe8>  // b.plast
    5840:	ldr	x0, [x19, #8]
    5844:	cbz	x0, 5850 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0xe8>
    5848:	bl	0 <_ZdaPv>
    584c:	ldp	x2, x3, [x25, #24]
    5850:	sub	x1, x3, x2
    5854:	str	x24, [x19, #8]
    5858:	add	x21, x21, #0x1
    585c:	asr	x1, x1, #4
    5860:	str	w26, [x23, #8]
    5864:	add	x20, x20, #0x30
    5868:	mul	x1, x1, x27
    586c:	cmp	x21, x1
    5870:	b.cc	5828 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0xc0>  // b.lo, b.ul, b.last
    5874:	mov	x0, x22
    5878:	ldp	x19, x20, [sp, #16]
    587c:	ldp	x21, x22, [sp, #32]
    5880:	ldp	x23, x24, [sp, #48]
    5884:	ldp	x25, x26, [sp, #64]
    5888:	ldr	x27, [sp, #80]
    588c:	ldp	x29, x30, [sp], #96
    5890:	ret
    5894:	and	x24, x24, #0xff
    5898:	str	x24, [x8, #8]
    589c:	mov	x0, x22
    58a0:	ldp	x21, x22, [sp, #32]
    58a4:	ldp	x23, x24, [sp, #48]
    58a8:	ldp	x25, x26, [sp, #64]
    58ac:	ldp	x29, x30, [sp], #96
    58b0:	ret
    58b4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    58b8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    58bc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    58c0:	add	x3, x3, #0x0
    58c4:	add	x1, x1, #0x0
    58c8:	add	x0, x0, #0x0
    58cc:	mov	w2, #0x28c                 	// #652
    58d0:	stp	x19, x20, [sp, #16]
    58d4:	bl	0 <__assert_fail>

00000000000058d8 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE>:
    58d8:	stp	x29, x30, [sp, #-96]!
    58dc:	mov	w4, #0x1                   	// #1
    58e0:	mov	x29, sp
    58e4:	stp	x19, x20, [sp, #16]
    58e8:	mov	x20, x8
    58ec:	mov	x19, x0
    58f0:	stp	x21, x22, [sp, #32]
    58f4:	mov	x21, x8
    58f8:	mov	x22, x1
    58fc:	stp	x23, x24, [sp, #48]
    5900:	mov	x24, x8
    5904:	mov	x23, x2
    5908:	stp	xzr, xzr, [x20, #24]!
    590c:	str	xzr, [x20, #16]
    5910:	str	xzr, [x24], #8
    5914:	ldrb	w0, [x3, #8]
    5918:	str	xzr, [x8, #8]
    591c:	str	w4, [x24, #8]
    5920:	cmp	w0, #0x10
    5924:	b.ne	5a8c <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x1b4>  // b.any
    5928:	ldp	x1, x0, [x19, #24]
    592c:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5930:	ldp	x3, x2, [x22, #24]
    5934:	movk	x24, #0xaaab
    5938:	sub	x0, x0, x1
    593c:	asr	x1, x0, #4
    5940:	sub	x2, x2, x3
    5944:	cmp	x0, x2
    5948:	mul	x1, x1, x24
    594c:	b.ne	5b68 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x290>  // b.any
    5950:	ldp	x3, x2, [x23, #24]
    5954:	sub	x2, x2, x3
    5958:	cmp	x0, x2
    595c:	b.ne	5b40 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x268>  // b.any
    5960:	cbnz	x1, 597c <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0xa4>
    5964:	mov	x0, x21
    5968:	ldp	x19, x20, [sp, #16]
    596c:	ldp	x21, x22, [sp, #32]
    5970:	ldp	x23, x24, [sp, #48]
    5974:	ldp	x29, x30, [sp], #96
    5978:	ret
    597c:	mov	x0, x20
    5980:	stp	x25, x26, [sp, #64]
    5984:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5988:	ldp	x26, x0, [x19, #24]
    598c:	cmp	x0, x26
    5990:	b.eq	5b90 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x2b8>  // b.none
    5994:	mov	x25, #0x0                   	// #0
    5998:	mov	x20, #0x0                   	// #0
    599c:	stp	x27, x28, [sp, #80]
    59a0:	add	x26, x26, x25
    59a4:	ldr	x27, [x21, #24]
    59a8:	ldr	w28, [x26, #16]
    59ac:	add	x27, x27, x25
    59b0:	cmp	w28, #0x40
    59b4:	b.ls	5a84 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x1ac>  // b.plast
    59b8:	add	x0, x26, #0x8
    59bc:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    59c0:	sub	w28, w28, w0
    59c4:	cmp	w28, #0x40
    59c8:	b.hi	59d8 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x100>  // b.pmore
    59cc:	ldr	x0, [x26, #8]
    59d0:	ldr	x0, [x0]
    59d4:	cbz	x0, 5a78 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x1a0>
    59d8:	ldr	x26, [x22, #24]
    59dc:	add	x26, x26, x25
    59e0:	mov	x1, x26
    59e4:	mov	x0, x27
    59e8:	ldr	x2, [x1], #8
    59ec:	str	x2, [x0], #8
    59f0:	ldr	w2, [x27, #16]
    59f4:	cmp	w2, #0x40
    59f8:	b.hi	5a08 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x130>  // b.pmore
    59fc:	ldr	w2, [x26, #16]
    5a00:	cmp	w2, #0x40
    5a04:	b.ls	5a58 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x180>  // b.plast
    5a08:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    5a0c:	add	x1, x26, #0x18
    5a10:	add	x0, x27, #0x18
    5a14:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5a18:	add	x20, x20, #0x1
    5a1c:	ldp	x26, x3, [x19, #24]
    5a20:	add	x25, x25, #0x30
    5a24:	sub	x3, x3, x26
    5a28:	asr	x3, x3, #4
    5a2c:	mul	x3, x3, x24
    5a30:	cmp	x20, x3
    5a34:	b.cc	59a0 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0xc8>  // b.lo, b.ul, b.last
    5a38:	mov	x0, x21
    5a3c:	ldp	x19, x20, [sp, #16]
    5a40:	ldp	x21, x22, [sp, #32]
    5a44:	ldp	x23, x24, [sp, #48]
    5a48:	ldp	x25, x26, [sp, #64]
    5a4c:	ldp	x27, x28, [sp, #80]
    5a50:	ldp	x29, x30, [sp], #96
    5a54:	ret
    5a58:	ldr	x3, [x1]
    5a5c:	neg	w1, w2
    5a60:	str	w2, [x0, #8]
    5a64:	mov	x0, #0xffffffffffffffff    	// #-1
    5a68:	lsr	x1, x0, x1
    5a6c:	and	x1, x1, x3
    5a70:	str	x1, [x27, #8]
    5a74:	b	5a0c <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x134>
    5a78:	ldr	x26, [x23, #24]
    5a7c:	add	x26, x26, x25
    5a80:	b	59e0 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x108>
    5a84:	ldr	x0, [x26, #8]
    5a88:	b	59d4 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0xfc>
    5a8c:	stp	x25, x26, [sp, #64]
    5a90:	ldr	w25, [x19, #16]
    5a94:	cmp	w25, #0x40
    5a98:	b.ls	5b38 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x260>  // b.plast
    5a9c:	add	x0, x19, #0x8
    5aa0:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    5aa4:	sub	w25, w25, w0
    5aa8:	cmp	w25, #0x40
    5aac:	b.ls	5af8 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x220>  // b.plast
    5ab0:	mov	x1, x22
    5ab4:	ldr	x0, [x1], #8
    5ab8:	str	x0, [x21]
    5abc:	ldr	w0, [x22, #16]
    5ac0:	cmp	w0, #0x40
    5ac4:	b.ls	5b20 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x248>  // b.plast
    5ac8:	mov	x0, x24
    5acc:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    5ad0:	add	x1, x22, #0x18
    5ad4:	mov	x0, x20
    5ad8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5adc:	mov	x0, x21
    5ae0:	ldp	x19, x20, [sp, #16]
    5ae4:	ldp	x21, x22, [sp, #32]
    5ae8:	ldp	x23, x24, [sp, #48]
    5aec:	ldp	x25, x26, [sp, #64]
    5af0:	ldp	x29, x30, [sp], #96
    5af4:	ret
    5af8:	ldr	x0, [x19, #8]
    5afc:	ldr	x0, [x0]
    5b00:	cmp	x0, #0x0
    5b04:	csel	x22, x22, x23, ne  // ne = any
    5b08:	mov	x1, x22
    5b0c:	ldr	x0, [x1], #8
    5b10:	str	x0, [x21]
    5b14:	ldr	w0, [x22, #16]
    5b18:	cmp	w0, #0x40
    5b1c:	b.hi	5ac8 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x1f0>  // b.pmore
    5b20:	ldr	x1, [x22, #8]
    5b24:	str	x1, [x21, #8]
    5b28:	str	w0, [x24, #8]
    5b2c:	mov	x0, x24
    5b30:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5b34:	b	5ad0 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x1f8>
    5b38:	ldr	x0, [x19, #8]
    5b3c:	b	5b00 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x228>
    5b40:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5b44:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5b48:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5b4c:	add	x3, x3, #0x0
    5b50:	add	x1, x1, #0x0
    5b54:	add	x0, x0, #0x0
    5b58:	mov	w2, #0x350                 	// #848
    5b5c:	stp	x25, x26, [sp, #64]
    5b60:	stp	x27, x28, [sp, #80]
    5b64:	bl	0 <__assert_fail>
    5b68:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5b6c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5b70:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5b74:	add	x3, x3, #0x0
    5b78:	add	x1, x1, #0x0
    5b7c:	add	x0, x0, #0x0
    5b80:	mov	w2, #0x34f                 	// #847
    5b84:	stp	x25, x26, [sp, #64]
    5b88:	stp	x27, x28, [sp, #80]
    5b8c:	bl	0 <__assert_fail>
    5b90:	ldp	x25, x26, [sp, #64]
    5b94:	b	5964 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x8c>

0000000000005b98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    5b98:	stp	x29, x30, [sp, #-496]!
    5b9c:	add	x6, x8, #0x18
    5ba0:	add	x7, x8, #0x8
    5ba4:	mov	x29, sp
    5ba8:	stp	x19, x20, [sp, #16]
    5bac:	mov	w4, #0x1                   	// #1
    5bb0:	mov	x19, x0
    5bb4:	stp	x21, x22, [sp, #32]
    5bb8:	mov	x21, x2
    5bbc:	ldr	x20, [x1]
    5bc0:	stp	xzr, xzr, [x8, #24]
    5bc4:	str	xzr, [x6, #16]
    5bc8:	stp	xzr, xzr, [x8]
    5bcc:	str	w4, [x8, #16]
    5bd0:	str	x8, [sp, #152]
    5bd4:	add	x8, sp, #0x1c0
    5bd8:	str	x8, [sp, #160]
    5bdc:	str	x2, [sp, #168]
    5be0:	mov	x2, x3
    5be4:	stp	x7, x6, [sp, #184]
    5be8:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    5bec:	ldrb	w0, [x20, #8]
    5bf0:	cmp	w0, #0x10
    5bf4:	b.eq	5c3c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa4>  // b.none
    5bf8:	ldrb	w1, [x21, #8]
    5bfc:	cmp	w1, #0x10
    5c00:	b.eq	5c3c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa4>  // b.none
    5c04:	cmp	w1, #0xf
    5c08:	b.eq	62dc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x744>  // b.none
    5c0c:	cmp	w1, #0xb
    5c10:	b.eq	65cc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa34>  // b.none
    5c14:	cmp	w1, #0x2
    5c18:	b.eq	6330 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x798>  // b.none
    5c1c:	cmp	w1, #0x3
    5c20:	b.ne	68f0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd58>  // b.any
    5c24:	cmp	w0, #0xb
    5c28:	b.eq	66d4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb3c>  // b.none
    5c2c:	ldr	x0, [sp, #152]
    5c30:	ldr	d0, [sp, #448]
    5c34:	str	d0, [x0]
    5c38:	b	62ac <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x714>
    5c3c:	movi	v0.4s, #0x0
    5c40:	cmp	w0, #0x10
    5c44:	add	x0, sp, #0x200
    5c48:	stp	x23, x24, [sp, #48]
    5c4c:	mov	w22, #0x1                   	// #1
    5c50:	stp	x25, x26, [sp, #64]
    5c54:	ldrb	w19, [x19, #88]
    5c58:	stp	x27, x28, [sp, #80]
    5c5c:	stp	xzr, xzr, [sp, #256]
    5c60:	str	w22, [sp, #272]
    5c64:	stp	xzr, xzr, [sp, #296]
    5c68:	str	xzr, [sp, #312]
    5c6c:	str	w22, [sp, #320]
    5c70:	stp	xzr, xzr, [sp, #344]
    5c74:	str	xzr, [sp, #360]
    5c78:	str	w22, [sp, #368]
    5c7c:	str	xzr, [sp, #392]
    5c80:	stur	q0, [x0, #-232]
    5c84:	stur	q0, [x0, #-184]
    5c88:	stur	q0, [x0, #-136]
    5c8c:	b.eq	6664 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xacc>  // b.none
    5c90:	mov	x0, x20
    5c94:	bl	0 <_ZNK4llvm4Type22getPrimitiveSizeInBitsEv>
    5c98:	tst	w1, #0xff
    5c9c:	b.ne	6898 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd00>  // b.any
    5ca0:	ldr	x2, [sp, #160]
    5ca4:	add	x1, sp, #0x160
    5ca8:	mov	w21, w0
    5cac:	add	x0, sp, #0x178
    5cb0:	str	w22, [sp, #128]
    5cb4:	str	x1, [sp, #216]
    5cb8:	mov	x1, #0x0                   	// #0
    5cbc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5cc0:	ldr	x0, [sp, #168]
    5cc4:	ldrb	w0, [x0, #8]
    5cc8:	cmp	w0, #0x10
    5ccc:	b.eq	6530 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x998>  // b.none
    5cd0:	ldr	x22, [sp, #168]
    5cd4:	mov	x0, x22
    5cd8:	bl	0 <_ZNK4llvm4Type22getPrimitiveSizeInBitsEv>
    5cdc:	tst	w1, #0xff
    5ce0:	b.ne	6898 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd00>  // b.any
    5ce4:	ldr	w1, [sp, #128]
    5ce8:	mov	w27, w0
    5cec:	mov	w2, #0x1                   	// #1
    5cf0:	str	w2, [sp, #176]
    5cf4:	str	x22, [sp, #200]
    5cf8:	mul	w1, w21, w1
    5cfc:	cmp	w1, w0
    5d00:	b.ne	689c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd04>  // b.any
    5d04:	ldr	w1, [sp, #128]
    5d08:	add	x0, sp, #0x130
    5d0c:	str	x0, [sp, #208]
    5d10:	add	x0, sp, #0x148
    5d14:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    5d18:	ldrb	w0, [x20, #8]
    5d1c:	cmp	w0, #0x2
    5d20:	b.eq	6560 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9c8>  // b.none
    5d24:	cmp	w0, #0x3
    5d28:	b.eq	65f8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa60>  // b.none
    5d2c:	cmp	w0, #0xb
    5d30:	b.ne	68b4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd1c>  // b.any
    5d34:	ldr	w0, [sp, #128]
    5d38:	cbz	w0, 6238 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6a0>
    5d3c:	ldr	w0, [sp, #128]
    5d40:	mov	x22, #0x0                   	// #0
    5d44:	sub	w0, w0, #0x1
    5d48:	add	x0, x0, #0x1
    5d4c:	add	x0, x0, x0, lsl #1
    5d50:	lsl	x20, x0, #4
    5d54:	nop
    5d58:	ldr	x2, [sp, #328]
    5d5c:	ldr	x3, [sp, #376]
    5d60:	add	x2, x2, x22
    5d64:	add	x0, x2, #0x8
    5d68:	add	x3, x3, x22
    5d6c:	ldr	w4, [x2, #16]
    5d70:	add	x1, x3, #0x8
    5d74:	cmp	w4, #0x40
    5d78:	b.hi	5d88 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1f0>  // b.pmore
    5d7c:	ldr	w4, [x3, #16]
    5d80:	cmp	w4, #0x40
    5d84:	b.ls	62c8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x730>  // b.plast
    5d88:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    5d8c:	add	x22, x22, #0x30
    5d90:	cmp	x20, x22
    5d94:	b.ne	5d58 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1c0>  // b.any
    5d98:	ldr	w0, [sp, #128]
    5d9c:	ldr	w1, [sp, #176]
    5da0:	cmp	w0, w1
    5da4:	b.ls	5f7c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x3e4>  // b.plast
    5da8:	ldr	w1, [sp, #128]
    5dac:	ldr	w0, [sp, #176]
    5db0:	udiv	w1, w1, w0
    5db4:	str	w1, [sp, #100]
    5db8:	cbz	w0, 6238 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6a0>
    5dbc:	ldr	w0, [sp, #100]
    5dc0:	cmp	w19, #0x0
    5dc4:	add	x1, sp, #0x190
    5dc8:	add	x2, sp, #0x100
    5dcc:	sub	w0, w0, #0x1
    5dd0:	add	x23, sp, #0xf0
    5dd4:	add	x20, sp, #0xe0
    5dd8:	stp	x1, x2, [sp, #128]
    5ddc:	add	x1, sp, #0x198
    5de0:	mul	w0, w0, w21
    5de4:	mov	w28, #0x0                   	// #0
    5de8:	mov	w25, #0x1                   	// #1
    5dec:	str	x1, [sp, #112]
    5df0:	csel	w0, w0, wzr, ne  // ne = any
    5df4:	add	x1, sp, #0x118
    5df8:	stp	wzr, w0, [sp, #120]
    5dfc:	cneg	w0, w21, ne  // ne = any
    5e00:	str	w0, [sp, #104]
    5e04:	str	x1, [sp, #144]
    5e08:	add	x2, sp, #0x280
    5e0c:	stp	xzr, xzr, [sp, #400]
    5e10:	mov	x8, x23
    5e14:	ldr	x0, [sp, #112]
    5e18:	str	w25, [sp, #416]
    5e1c:	stp	xzr, xzr, [x2, #-216]
    5e20:	mov	w1, w27
    5e24:	str	xzr, [sp, #440]
    5e28:	bl	0 <_ZNK4llvm5APInt4zextEj>
    5e2c:	ldr	w0, [sp, #416]
    5e30:	cmp	w0, #0x40
    5e34:	b.ls	5e44 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2ac>  // b.plast
    5e38:	ldr	x0, [sp, #408]
    5e3c:	cbz	x0, 5e44 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2ac>
    5e40:	bl	0 <_ZdaPv>
    5e44:	ldr	w19, [sp, #124]
    5e48:	mov	w22, #0x0                   	// #0
    5e4c:	ldr	w0, [sp, #248]
    5e50:	mov	w26, #0x30                  	// #48
    5e54:	ldr	x1, [sp, #240]
    5e58:	str	x1, [sp, #408]
    5e5c:	str	w0, [sp, #416]
    5e60:	mov	x0, x20
    5e64:	mov	x8, x23
    5e68:	mov	w1, w21
    5e6c:	str	xzr, [sp, #224]
    5e70:	str	w25, [sp, #232]
    5e74:	bl	0 <_ZNK4llvm5APInt4zextEj>
    5e78:	ldr	w0, [sp, #232]
    5e7c:	cmp	w0, #0x40
    5e80:	b.ls	5e90 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f8>  // b.plast
    5e84:	ldr	x0, [sp, #224]
    5e88:	cbz	x0, 5e90 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f8>
    5e8c:	bl	0 <_ZdaPv>
    5e90:	ldr	x0, [sp, #328]
    5e94:	add	w24, w28, #0x1
    5e98:	ldr	w3, [sp, #248]
    5e9c:	ldr	x1, [sp, #240]
    5ea0:	umaddl	x0, w28, w26, x0
    5ea4:	str	x1, [sp, #224]
    5ea8:	cmp	w3, #0x40
    5eac:	str	w3, [sp, #232]
    5eb0:	add	x1, x0, #0x8
    5eb4:	b.hi	5ec4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x32c>  // b.pmore
    5eb8:	ldr	w2, [x0, #16]
    5ebc:	cmp	w2, #0x40
    5ec0:	b.ls	63dc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x844>  // b.plast
    5ec4:	mov	x0, x20
    5ec8:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    5ecc:	mov	x0, x20
    5ed0:	mov	x8, x23
    5ed4:	mov	w1, w27
    5ed8:	bl	0 <_ZNK4llvm5APInt4zextEj>
    5edc:	ldr	w0, [sp, #232]
    5ee0:	cmp	w0, #0x40
    5ee4:	b.ls	5ef4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x35c>  // b.plast
    5ee8:	ldr	x0, [sp, #224]
    5eec:	cbz	x0, 5ef4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x35c>
    5ef0:	bl	0 <_ZdaPv>
    5ef4:	ldr	w0, [sp, #248]
    5ef8:	ldr	x2, [sp, #240]
    5efc:	str	x2, [sp, #224]
    5f00:	str	w0, [sp, #232]
    5f04:	cmp	w0, w19
    5f08:	b.cc	6874 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcdc>  // b.lo, b.ul, b.last
    5f0c:	cmp	w0, #0x40
    5f10:	b.hi	63c8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x830>  // b.pmore
    5f14:	cmp	w0, w19
    5f18:	mov	x1, #0x0                   	// #0
    5f1c:	b.eq	5f34 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x39c>  // b.none
    5f20:	neg	w1, w0
    5f24:	mov	x3, #0xffffffffffffffff    	// #-1
    5f28:	lsl	x2, x2, x19
    5f2c:	lsr	x1, x3, x1
    5f30:	and	x1, x1, x2
    5f34:	str	x1, [sp, #224]
    5f38:	ldr	w2, [sp, #104]
    5f3c:	ldr	w1, [sp, #416]
    5f40:	add	w19, w19, w2
    5f44:	cmp	w0, w1
    5f48:	b.ne	6854 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcbc>  // b.any
    5f4c:	cmp	w0, #0x40
    5f50:	b.hi	6348 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7b0>  // b.pmore
    5f54:	ldr	x1, [sp, #224]
    5f58:	ldr	x0, [sp, #408]
    5f5c:	orr	x0, x0, x1
    5f60:	str	x0, [sp, #408]
    5f64:	ldr	w0, [sp, #100]
    5f68:	add	w22, w22, #0x1
    5f6c:	cmp	w0, w22
    5f70:	b.ls	637c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7e4>  // b.plast
    5f74:	mov	w28, w24
    5f78:	b	5e60 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2c8>
    5f7c:	ldr	w1, [sp, #128]
    5f80:	cmp	w19, #0x0
    5f84:	ldr	w0, [sp, #176]
    5f88:	str	w27, [sp, #100]
    5f8c:	str	xzr, [sp, #104]
    5f90:	str	wzr, [sp, #144]
    5f94:	udiv	w0, w0, w1
    5f98:	add	x1, sp, #0x118
    5f9c:	str	x1, [sp, #136]
    5fa0:	str	w0, [sp, #124]
    5fa4:	sub	w0, w0, #0x1
    5fa8:	mul	w0, w0, w27
    5fac:	csel	w0, w0, wzr, ne  // ne = any
    5fb0:	str	w0, [sp, #180]
    5fb4:	cneg	w0, w27, ne  // ne = any
    5fb8:	str	w0, [sp, #120]
    5fbc:	nop
    5fc0:	ldr	w0, [sp, #128]
    5fc4:	ldr	w1, [sp, #176]
    5fc8:	cmp	w0, w1
    5fcc:	b.hi	6214 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x67c>  // b.pmore
    5fd0:	ldr	w19, [sp, #180]
    5fd4:	add	x22, sp, #0x190
    5fd8:	add	x23, sp, #0xf0
    5fdc:	mov	w20, #0x0                   	// #0
    5fe0:	mov	w2, #0x1                   	// #1
    5fe4:	str	w2, [sp, #416]
    5fe8:	add	x2, sp, #0x280
    5fec:	stp	xzr, xzr, [sp, #400]
    5ff0:	add	x0, x22, #0x8
    5ff4:	mov	x8, x23
    5ff8:	mov	w1, w21
    5ffc:	stp	xzr, xzr, [x2, #-216]
    6000:	str	xzr, [sp, #440]
    6004:	bl	0 <_ZNK4llvm5APInt4zextEj>
    6008:	ldr	w0, [sp, #416]
    600c:	cmp	w0, #0x40
    6010:	b.ls	6020 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x488>  // b.plast
    6014:	ldr	x0, [sp, #408]
    6018:	cbz	x0, 6020 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x488>
    601c:	bl	0 <_ZdaPv>
    6020:	ldr	x1, [sp, #240]
    6024:	str	x1, [sp, #408]
    6028:	ldr	x1, [sp, #104]
    602c:	ldr	x0, [sp, #328]
    6030:	ldr	w2, [sp, #248]
    6034:	str	w2, [sp, #416]
    6038:	add	x0, x0, x1
    603c:	cmp	w2, #0x40
    6040:	add	x1, x0, #0x8
    6044:	b.hi	6054 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x4bc>  // b.pmore
    6048:	ldr	w2, [x0, #16]
    604c:	cmp	w2, #0x40
    6050:	b.ls	6474 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x8dc>  // b.plast
    6054:	add	x24, x22, #0x8
    6058:	mov	x0, x24
    605c:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    6060:	ldr	w2, [sp, #416]
    6064:	cmp	w19, w2
    6068:	b.hi	66fc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb64>  // b.pmore
    606c:	cmp	w2, #0x40
    6070:	b.ls	6498 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x900>  // b.plast
    6074:	mov	x0, x24
    6078:	mov	w1, w19
    607c:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
    6080:	ldr	w0, [sp, #100]
    6084:	cmp	w21, w0
    6088:	b.hi	64b8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x920>  // b.pmore
    608c:	ldr	w0, [sp, #120]
    6090:	add	w19, w19, w0
    6094:	ldp	x25, x0, [sp, #288]
    6098:	cmp	x25, x0
    609c:	b.eq	6504 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x96c>  // b.none
    60a0:	mov	x0, x25
    60a4:	ldr	x1, [sp, #400]
    60a8:	str	x1, [x0], #8
    60ac:	ldr	w1, [sp, #416]
    60b0:	str	w1, [x0, #8]
    60b4:	cmp	w1, #0x40
    60b8:	b.hi	651c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x984>  // b.pmore
    60bc:	ldr	x0, [sp, #408]
    60c0:	str	x0, [x25, #8]
    60c4:	ldp	x0, x1, [sp, #424]
    60c8:	mov	x28, x25
    60cc:	mov	x26, #0x0                   	// #0
    60d0:	stp	xzr, xzr, [x28, #24]!
    60d4:	sub	x24, x1, x0
    60d8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    60dc:	movk	x1, #0xaaab
    60e0:	str	xzr, [x28, #16]
    60e4:	asr	x0, x24, #4
    60e8:	mul	x0, x0, x1
    60ec:	cbz	x0, 610c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x574>
    60f0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    60f4:	movk	x1, #0x2aa, lsl #48
    60f8:	cmp	x0, x1
    60fc:	b.hi	6894 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcfc>  // b.pmore
    6100:	mov	x0, x24
    6104:	bl	0 <_Znwm>
    6108:	mov	x26, x0
    610c:	dup	v0.2d, x26
    6110:	add	x1, x26, x24
    6114:	stur	q0, [x25, #24]
    6118:	str	x1, [x28, #16]
    611c:	ldp	x27, x25, [sp, #424]
    6120:	cmp	x27, x25
    6124:	b.eq	61ac <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x614>  // b.none
    6128:	mov	x0, x22
    612c:	mov	x24, x27
    6130:	mov	w22, w20
    6134:	mov	x20, x25
    6138:	mov	x25, x0
    613c:	str	w19, [sp, #112]
    6140:	mov	x19, x26
    6144:	nop
    6148:	mov	x1, x24
    614c:	mov	x0, x19
    6150:	add	x24, x24, #0x30
    6154:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6158:	cmp	x20, x24
    615c:	add	x19, x19, #0x30
    6160:	b.ne	6148 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x5b0>  // b.any
    6164:	mov	x0, x25
    6168:	mov	x25, x20
    616c:	sub	x2, x25, #0x30
    6170:	mov	w20, w22
    6174:	sub	x1, x2, x27
    6178:	mov	x22, x0
    617c:	mov	x0, #0xaaab                	// #43691
    6180:	ldr	w19, [sp, #112]
    6184:	movk	x0, #0xaaaa, lsl #16
    6188:	lsr	x1, x1, #4
    618c:	movk	x0, #0xaaaa, lsl #32
    6190:	movk	x0, #0xaaa, lsl #48
    6194:	ldr	x25, [sp, #424]
    6198:	mul	x1, x1, x0
    619c:	and	x1, x1, #0xfffffffffffffff
    61a0:	add	x1, x1, #0x1
    61a4:	add	x1, x1, x1, lsl #1
    61a8:	add	x26, x26, x1, lsl #4
    61ac:	str	x26, [x28, #8]
    61b0:	ldr	x0, [sp, #288]
    61b4:	add	x0, x0, #0x30
    61b8:	str	x0, [sp, #288]
    61bc:	ldr	x28, [sp, #432]
    61c0:	cmp	x25, x28
    61c4:	b.eq	61e0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x648>  // b.none
    61c8:	mov	x0, x25
    61cc:	add	x25, x25, #0x30
    61d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    61d4:	cmp	x28, x25
    61d8:	b.ne	61c8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x630>  // b.any
    61dc:	ldr	x28, [sp, #424]
    61e0:	cbz	x28, 61ec <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x654>
    61e4:	mov	x0, x28
    61e8:	bl	0 <_ZdlPv>
    61ec:	ldr	w0, [sp, #416]
    61f0:	cmp	w0, #0x40
    61f4:	b.ls	6204 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x66c>  // b.plast
    61f8:	ldr	x0, [sp, #408]
    61fc:	cbz	x0, 6204 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x66c>
    6200:	bl	0 <_ZdaPv>
    6204:	ldr	w0, [sp, #124]
    6208:	add	w20, w20, #0x1
    620c:	cmp	w0, w20
    6210:	b.ne	5fe0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x448>  // b.any
    6214:	ldr	x1, [sp, #104]
    6218:	ldr	w0, [sp, #144]
    621c:	add	x1, x1, #0x30
    6220:	str	x1, [sp, #104]
    6224:	add	w0, w0, #0x1
    6228:	ldr	w1, [sp, #128]
    622c:	str	w0, [sp, #144]
    6230:	cmp	w1, w0
    6234:	b.hi	5fc0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x428>  // b.pmore
    6238:	add	x19, sp, #0x100
    623c:	ldr	x0, [sp, #168]
    6240:	ldrb	w1, [x0, #8]
    6244:	ldr	x0, [sp, #200]
    6248:	cmp	w1, #0x10
    624c:	ldrb	w0, [x0, #8]
    6250:	b.eq	643c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x8a4>  // b.none
    6254:	cmp	w0, #0x3
    6258:	ldr	x1, [sp, #280]
    625c:	b.eq	630c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x774>  // b.none
    6260:	cmp	w0, #0x2
    6264:	b.ne	66c4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb2c>  // b.any
    6268:	ldr	w2, [x1, #16]
    626c:	ldr	x0, [x1, #8]
    6270:	cmp	w2, #0x40
    6274:	b.ls	627c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6e4>  // b.plast
    6278:	ldr	x0, [x0]
    627c:	fmov	s0, w0
    6280:	ldr	x0, [sp, #152]
    6284:	str	s0, [x0]
    6288:	ldr	x0, [sp, #216]
    628c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6290:	ldr	x0, [sp, #208]
    6294:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6298:	mov	x0, x19
    629c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    62a0:	ldp	x23, x24, [sp, #48]
    62a4:	ldp	x25, x26, [sp, #64]
    62a8:	ldp	x27, x28, [sp, #80]
    62ac:	ldr	x0, [sp, #160]
    62b0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    62b4:	ldp	x19, x20, [sp, #16]
    62b8:	ldp	x21, x22, [sp, #32]
    62bc:	ldr	x0, [sp, #152]
    62c0:	ldp	x29, x30, [sp], #496
    62c4:	ret
    62c8:	ldr	x1, [x3, #8]
    62cc:	str	x1, [x2, #8]
    62d0:	str	w4, [x0, #8]
    62d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    62d8:	b	5d8c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1f4>
    62dc:	cmp	w0, #0xf
    62e0:	b.ne	6914 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd7c>  // b.any
    62e4:	ldr	x1, [sp, #152]
    62e8:	ldr	x0, [sp, #448]
    62ec:	str	x0, [x1]
    62f0:	ldr	x0, [sp, #160]
    62f4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    62f8:	ldp	x19, x20, [sp, #16]
    62fc:	ldp	x21, x22, [sp, #32]
    6300:	ldr	x0, [sp, #152]
    6304:	ldp	x29, x30, [sp], #496
    6308:	ret
    630c:	ldr	w2, [x1, #16]
    6310:	ldr	x0, [x1, #8]
    6314:	cmp	w2, #0x40
    6318:	b.ls	6320 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x788>  // b.plast
    631c:	ldr	x0, [x0]
    6320:	fmov	d0, x0
    6324:	ldr	x0, [sp, #152]
    6328:	str	d0, [x0]
    632c:	b	6288 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6f0>
    6330:	cmp	w0, #0xb
    6334:	b.eq	67e8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc50>  // b.none
    6338:	ldr	x0, [sp, #152]
    633c:	ldr	s0, [sp, #448]
    6340:	str	s0, [x0]
    6344:	b	62ac <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x714>
    6348:	ldr	x0, [sp, #112]
    634c:	mov	x1, x20
    6350:	bl	0 <_ZN4llvm5APInt16OrAssignSlowCaseERKS0_>
    6354:	ldr	w0, [sp, #232]
    6358:	cmp	w0, #0x40
    635c:	b.ls	5f64 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x3cc>  // b.plast
    6360:	ldr	x0, [sp, #224]
    6364:	cbz	x0, 5f64 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x3cc>
    6368:	bl	0 <_ZdaPv>
    636c:	add	w22, w22, #0x1
    6370:	ldr	w0, [sp, #100]
    6374:	cmp	w0, w22
    6378:	b.hi	5f74 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x3dc>  // b.pmore
    637c:	ldp	x0, x1, [sp, #288]
    6380:	cmp	x0, x1
    6384:	b.eq	63fc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x864>  // b.none
    6388:	ldr	x22, [sp, #128]
    638c:	mov	x1, x22
    6390:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6394:	ldr	x1, [sp, #288]
    6398:	ldr	w0, [sp, #120]
    639c:	add	x1, x1, #0x30
    63a0:	str	x1, [sp, #288]
    63a4:	add	w19, w0, #0x1
    63a8:	mov	x0, x22
    63ac:	str	w19, [sp, #120]
    63b0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    63b4:	ldr	w0, [sp, #176]
    63b8:	cmp	w0, w19
    63bc:	b.eq	6238 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6a0>  // b.none
    63c0:	mov	w28, w24
    63c4:	b	5e08 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x270>
    63c8:	mov	x0, x20
    63cc:	mov	w1, w19
    63d0:	bl	0 <_ZN4llvm5APInt11shlSlowCaseEj>
    63d4:	ldr	w0, [sp, #232]
    63d8:	b	5f38 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x3a0>
    63dc:	ldr	x1, [x0, #8]
    63e0:	neg	w0, w2
    63e4:	str	w2, [sp, #232]
    63e8:	mov	x2, #0xffffffffffffffff    	// #-1
    63ec:	lsr	x0, x2, x0
    63f0:	and	x0, x0, x1
    63f4:	str	x0, [sp, #224]
    63f8:	b	5ecc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x334>
    63fc:	mov	x1, x0
    6400:	ldr	w0, [sp, #120]
    6404:	ldr	x19, [sp, #128]
    6408:	add	w22, w0, #0x1
    640c:	ldr	x0, [sp, #144]
    6410:	mov	x2, x19
    6414:	str	w22, [sp, #120]
    6418:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    641c:	mov	x0, x19
    6420:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6424:	ldr	w0, [sp, #176]
    6428:	ldr	x19, [sp, #136]
    642c:	cmp	w0, w22
    6430:	b.eq	623c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6a4>  // b.none
    6434:	mov	w28, w24
    6438:	b	5e08 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x270>
    643c:	cmp	w0, #0x3
    6440:	b.eq	6780 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xbe8>  // b.none
    6444:	cmp	w0, #0x2
    6448:	b.eq	671c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb84>  // b.none
    644c:	ldr	x1, [sp, #152]
    6450:	ldr	x0, [sp, #256]
    6454:	str	x0, [x1]
    6458:	add	x1, x19, #0x8
    645c:	ldr	x0, [sp, #184]
    6460:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6464:	ldr	x0, [sp, #192]
    6468:	add	x1, x19, #0x18
    646c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6470:	b	6288 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6f0>
    6474:	ldr	x3, [x0, #8]
    6478:	neg	w0, w2
    647c:	mov	x1, #0xffffffffffffffff    	// #-1
    6480:	str	w2, [sp, #416]
    6484:	lsr	x0, x1, x0
    6488:	and	x0, x0, x3
    648c:	str	x0, [sp, #408]
    6490:	cmp	w19, w2
    6494:	b.hi	66fc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb64>  // b.pmore
    6498:	cmp	w2, w19
    649c:	b.eq	6528 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x990>  // b.none
    64a0:	ldr	x0, [sp, #408]
    64a4:	lsr	x0, x0, x19
    64a8:	str	x0, [sp, #408]
    64ac:	ldr	w0, [sp, #100]
    64b0:	cmp	w21, w0
    64b4:	b.ls	608c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x4f4>  // b.plast
    64b8:	mov	x1, x0
    64bc:	mov	x8, x23
    64c0:	add	x0, x22, #0x8
    64c4:	bl	0 <_ZNK4llvm5APInt5truncEj>
    64c8:	ldr	w0, [sp, #416]
    64cc:	cmp	w0, #0x40
    64d0:	b.ls	64e0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x948>  // b.plast
    64d4:	ldr	x0, [sp, #408]
    64d8:	cbz	x0, 64e0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x948>
    64dc:	bl	0 <_ZdaPv>
    64e0:	ldr	x0, [sp, #240]
    64e4:	str	x0, [sp, #408]
    64e8:	ldr	w0, [sp, #248]
    64ec:	str	w0, [sp, #416]
    64f0:	ldr	w0, [sp, #120]
    64f4:	add	w19, w19, w0
    64f8:	ldp	x25, x0, [sp, #288]
    64fc:	cmp	x25, x0
    6500:	b.ne	60a0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x508>  // b.any
    6504:	ldr	x0, [sp, #136]
    6508:	mov	x1, x25
    650c:	mov	x2, x22
    6510:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6514:	ldr	x25, [sp, #424]
    6518:	b	61bc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x624>
    651c:	add	x1, x22, #0x8
    6520:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    6524:	b	60c4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x52c>
    6528:	str	xzr, [sp, #408]
    652c:	b	6080 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x4e8>
    6530:	ldr	x0, [sp, #168]
    6534:	ldr	x1, [x0, #16]
    6538:	ldr	x1, [x1]
    653c:	str	x1, [sp, #200]
    6540:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    6544:	mov	w27, w0
    6548:	ldr	w1, [sp, #128]
    654c:	mul	w1, w21, w1
    6550:	udiv	w0, w1, w0
    6554:	str	w0, [sp, #176]
    6558:	mul	w0, w27, w0
    655c:	b	5cfc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x164>
    6560:	ldr	w0, [sp, #128]
    6564:	cbz	w0, 6238 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6a0>
    6568:	ldr	w0, [sp, #128]
    656c:	mov	x22, #0x0                   	// #0
    6570:	mov	w26, #0x20                  	// #32
    6574:	sub	w0, w0, #0x1
    6578:	add	x0, x0, #0x1
    657c:	add	x0, x0, x0, lsl #1
    6580:	lsl	x23, x0, #4
    6584:	nop
    6588:	ldr	x20, [sp, #328]
    658c:	ldr	x1, [sp, #376]
    6590:	add	x20, x20, x22
    6594:	add	x24, x20, #0x8
    6598:	ldr	w0, [x20, #16]
    659c:	ldr	w25, [x1, x22]
    65a0:	cmp	w0, #0x40
    65a4:	b.ls	65b4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa1c>  // b.plast
    65a8:	ldr	x0, [x20, #8]
    65ac:	cbz	x0, 65b4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa1c>
    65b0:	bl	0 <_ZdaPv>
    65b4:	str	x25, [x20, #8]
    65b8:	add	x22, x22, #0x30
    65bc:	str	w26, [x24, #8]
    65c0:	cmp	x23, x22
    65c4:	b.ne	6588 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9f0>  // b.any
    65c8:	b	5d98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x200>
    65cc:	cmp	w0, #0x2
    65d0:	b.eq	680c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc74>  // b.none
    65d4:	cmp	w0, #0x3
    65d8:	b.eq	6844 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcac>  // b.none
    65dc:	cmp	w0, #0xb
    65e0:	b.ne	68cc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd34>  // b.any
    65e4:	ldr	x0, [sp, #184]
    65e8:	ldr	x1, [sp, #160]
    65ec:	add	x1, x1, #0x8
    65f0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    65f4:	b	62ac <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x714>
    65f8:	ldr	w0, [sp, #128]
    65fc:	cbz	w0, 6238 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6a0>
    6600:	ldr	w0, [sp, #128]
    6604:	mov	x22, #0x0                   	// #0
    6608:	mov	w26, #0x40                  	// #64
    660c:	sub	w0, w0, #0x1
    6610:	add	x0, x0, #0x1
    6614:	add	x0, x0, x0, lsl #1
    6618:	lsl	x23, x0, #4
    661c:	nop
    6620:	ldr	x20, [sp, #328]
    6624:	ldr	x1, [sp, #376]
    6628:	add	x20, x20, x22
    662c:	add	x24, x20, #0x8
    6630:	ldr	w0, [x20, #16]
    6634:	ldr	x25, [x1, x22]
    6638:	cmp	w0, #0x40
    663c:	b.ls	664c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xab4>  // b.plast
    6640:	ldr	x0, [x20, #8]
    6644:	cbz	x0, 664c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xab4>
    6648:	bl	0 <_ZdaPv>
    664c:	str	x25, [x20, #8]
    6650:	add	x22, x22, #0x30
    6654:	str	w26, [x24, #8]
    6658:	cmp	x23, x22
    665c:	b.ne	6620 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa88>  // b.any
    6660:	b	5d98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x200>
    6664:	ldr	x1, [x20, #16]
    6668:	add	x22, sp, #0x160
    666c:	mov	x0, x20
    6670:	str	x22, [sp, #216]
    6674:	ldr	x20, [x1]
    6678:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    667c:	ldp	x1, x2, [sp, #472]
    6680:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6684:	movk	x3, #0xaaab
    6688:	mov	w21, w0
    668c:	ldr	x4, [sp, #448]
    6690:	add	x0, x22, #0x8
    6694:	ldr	x23, [sp, #160]
    6698:	sub	x2, x2, x1
    669c:	str	x4, [sp, #352]
    66a0:	asr	x2, x2, #4
    66a4:	add	x1, x23, #0x8
    66a8:	mul	w2, w2, w3
    66ac:	str	w2, [sp, #128]
    66b0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    66b4:	add	x0, x22, #0x18
    66b8:	add	x1, x23, #0x18
    66bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    66c0:	b	5cc0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x128>
    66c4:	ldr	x0, [sp, #184]
    66c8:	add	x1, x1, #0x8
    66cc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    66d0:	b	6288 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6f0>
    66d4:	ldr	w1, [sp, #464]
    66d8:	ldr	x0, [sp, #456]
    66dc:	cmp	w1, #0x40
    66e0:	b.hi	66f4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb5c>  // b.pmore
    66e4:	fmov	d0, x0
    66e8:	ldr	x0, [sp, #152]
    66ec:	str	d0, [x0]
    66f0:	b	62ac <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x714>
    66f4:	ldr	x0, [x0]
    66f8:	b	66e4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4c>
    66fc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6700:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6704:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6708:	add	x3, x3, #0x0
    670c:	add	x1, x1, #0x0
    6710:	add	x0, x0, #0x0
    6714:	mov	w2, #0x3e3                 	// #995
    6718:	bl	0 <__assert_fail>
    671c:	ldr	w20, [sp, #176]
    6720:	ldr	x0, [sp, #192]
    6724:	mov	w1, w20
    6728:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    672c:	cbz	w20, 6288 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6f0>
    6730:	sub	w0, w20, #0x1
    6734:	mov	x1, #0x0                   	// #0
    6738:	add	x0, x0, #0x1
    673c:	ldr	x5, [sp, #152]
    6740:	add	x0, x0, x0, lsl #1
    6744:	lsl	x4, x0, #4
    6748:	ldr	x0, [sp, #280]
    674c:	ldr	x2, [x5, #24]
    6750:	add	x0, x0, x1
    6754:	add	x2, x2, x1
    6758:	ldr	w3, [x0, #16]
    675c:	ldr	x0, [x0, #8]
    6760:	cmp	w3, #0x40
    6764:	b.ls	676c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xbd4>  // b.plast
    6768:	ldr	x0, [x0]
    676c:	str	w0, [x2]
    6770:	add	x1, x1, #0x30
    6774:	cmp	x4, x1
    6778:	b.ne	6748 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xbb0>  // b.any
    677c:	b	6288 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6f0>
    6780:	ldr	w20, [sp, #176]
    6784:	ldr	x0, [sp, #192]
    6788:	mov	w1, w20
    678c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6790:	cbz	w20, 6288 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6f0>
    6794:	sub	w0, w20, #0x1
    6798:	mov	x1, #0x0                   	// #0
    679c:	add	x0, x0, #0x1
    67a0:	ldr	x5, [sp, #152]
    67a4:	add	x0, x0, x0, lsl #1
    67a8:	lsl	x4, x0, #4
    67ac:	nop
    67b0:	ldr	x0, [sp, #280]
    67b4:	ldr	x2, [x5, #24]
    67b8:	add	x0, x0, x1
    67bc:	add	x2, x2, x1
    67c0:	ldr	w3, [x0, #16]
    67c4:	ldr	x0, [x0, #8]
    67c8:	cmp	w3, #0x40
    67cc:	b.ls	67d4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc3c>  // b.plast
    67d0:	ldr	x0, [x0]
    67d4:	str	x0, [x2]
    67d8:	add	x1, x1, #0x30
    67dc:	cmp	x4, x1
    67e0:	b.ne	67b0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc18>  // b.any
    67e4:	b	6288 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6f0>
    67e8:	ldr	w1, [sp, #464]
    67ec:	ldr	x0, [sp, #456]
    67f0:	cmp	w1, #0x40
    67f4:	b.ls	67fc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc64>  // b.plast
    67f8:	ldr	x0, [x0]
    67fc:	fmov	s0, w0
    6800:	ldr	x0, [sp, #152]
    6804:	str	s0, [x0]
    6808:	b	62ac <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x714>
    680c:	ldr	w3, [sp, #448]
    6810:	mov	w2, #0x20                  	// #32
    6814:	ldr	x0, [sp, #184]
    6818:	add	x1, sp, #0x190
    681c:	str	x3, [sp, #400]
    6820:	str	w2, [sp, #408]
    6824:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6828:	ldr	w0, [sp, #408]
    682c:	cmp	w0, #0x40
    6830:	b.ls	62ac <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x714>  // b.plast
    6834:	ldr	x0, [sp, #400]
    6838:	cbz	x0, 62ac <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x714>
    683c:	bl	0 <_ZdaPv>
    6840:	b	62ac <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x714>
    6844:	mov	w2, #0x40                  	// #64
    6848:	ldr	x0, [sp, #184]
    684c:	ldr	x3, [sp, #448]
    6850:	b	6818 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc80>
    6854:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6858:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    685c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6860:	add	x3, x3, #0x0
    6864:	add	x1, x1, #0x0
    6868:	add	x0, x0, #0x0
    686c:	mov	w2, #0x347                 	// #839
    6870:	bl	0 <__assert_fail>
    6874:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6878:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    687c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6880:	add	x3, x3, #0x0
    6884:	add	x1, x1, #0x0
    6888:	add	x0, x0, #0x0
    688c:	mov	w2, #0x39a                 	// #922
    6890:	bl	0 <__assert_fail>
    6894:	bl	0 <_ZSt17__throw_bad_allocv>
    6898:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    689c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    68a0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    68a4:	add	x1, x1, #0x0
    68a8:	add	x0, x0, #0x0
    68ac:	mov	w2, #0x631                 	// #1585
    68b0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    68b4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    68b8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    68bc:	add	x1, x1, #0x0
    68c0:	add	x0, x0, #0x0
    68c4:	mov	w2, #0x643                 	// #1603
    68c8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    68cc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    68d0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    68d4:	add	x1, x1, #0x0
    68d8:	add	x0, x0, #0x0
    68dc:	mov	w2, #0x695                 	// #1685
    68e0:	stp	x23, x24, [sp, #48]
    68e4:	stp	x25, x26, [sp, #64]
    68e8:	stp	x27, x28, [sp, #80]
    68ec:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    68f0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    68f4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    68f8:	add	x1, x1, #0x0
    68fc:	add	x0, x0, #0x0
    6900:	mov	w2, #0x6a4                 	// #1700
    6904:	stp	x23, x24, [sp, #48]
    6908:	stp	x25, x26, [sp, #64]
    690c:	stp	x27, x28, [sp, #80]
    6910:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    6914:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6918:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    691c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6920:	add	x3, x3, #0x0
    6924:	add	x1, x1, #0x0
    6928:	add	x0, x0, #0x0
    692c:	mov	w2, #0x68b                 	// #1675
    6930:	stp	x23, x24, [sp, #48]
    6934:	stp	x25, x26, [sp, #64]
    6938:	stp	x27, x28, [sp, #80]
    693c:	bl	0 <__assert_fail>

0000000000006940 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE>:
    6940:	stp	x29, x30, [sp, #-96]!
    6944:	mov	x29, sp
    6948:	stp	x19, x20, [sp, #16]
    694c:	mov	x19, x1
    6950:	ldr	x20, [x0, #704]
    6954:	ldur	x1, [x1, #-24]
    6958:	sub	x20, x20, #0x80
    695c:	ldr	x2, [x19]
    6960:	str	x21, [sp, #32]
    6964:	add	x21, sp, #0x30
    6968:	mov	x3, x20
    696c:	mov	x8, x21
    6970:	bl	5b98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    6974:	mov	x2, x20
    6978:	mov	x0, x19
    697c:	mov	x1, x21
    6980:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    6984:	ldp	x19, x20, [sp, #72]
    6988:	cmp	x19, x20
    698c:	b.eq	69a8 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE+0x68>  // b.none
    6990:	mov	x0, x19
    6994:	add	x19, x19, #0x30
    6998:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    699c:	cmp	x20, x19
    69a0:	b.ne	6990 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE+0x50>  // b.any
    69a4:	ldr	x20, [sp, #72]
    69a8:	cbz	x20, 69b4 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE+0x74>
    69ac:	mov	x0, x20
    69b0:	bl	0 <_ZdlPv>
    69b4:	ldr	w0, [sp, #64]
    69b8:	cmp	w0, #0x40
    69bc:	b.ls	69cc <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE+0x8c>  // b.plast
    69c0:	ldr	x0, [sp, #56]
    69c4:	cbz	x0, 69cc <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE+0x8c>
    69c8:	bl	0 <_ZdaPv>
    69cc:	ldp	x19, x20, [sp, #16]
    69d0:	ldr	x21, [sp, #32]
    69d4:	ldp	x29, x30, [sp], #96
    69d8:	ret
    69dc:	nop

00000000000069e0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE>:
    69e0:	stp	x29, x30, [sp, #-384]!
    69e4:	mov	x29, sp
    69e8:	ldrh	w5, [x1, #18]
    69ec:	stp	x19, x20, [sp, #16]
    69f0:	mov	x19, x1
    69f4:	mov	x20, x2
    69f8:	stp	x21, x22, [sp, #32]
    69fc:	cmp	w5, #0x2c
    6a00:	mov	x21, x8
    6a04:	mov	x22, x0
    6a08:	b.eq	6d6c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x38c>  // b.none
    6a0c:	b.hi	6a64 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x84>  // b.pmore
    6a10:	cmp	w5, #0x28
    6a14:	b.eq	6d94 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3b4>  // b.none
    6a18:	b.ls	6ae0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x100>  // b.plast
    6a1c:	cmp	w5, #0x2a
    6a20:	b.eq	6e90 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x4b0>  // b.none
    6a24:	cmp	w5, #0x2b
    6a28:	b.ne	6ab0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xd0>  // b.any
    6a2c:	mov	w1, #0x0                   	// #0
    6a30:	mov	x0, x19
    6a34:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6a38:	mov	x1, x0
    6a3c:	ldr	x2, [x19]
    6a40:	mov	x8, x21
    6a44:	mov	x3, x20
    6a48:	mov	x0, x22
    6a4c:	bl	f0a0 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    6a50:	mov	x0, x21
    6a54:	ldp	x19, x20, [sp, #16]
    6a58:	ldp	x21, x22, [sp, #32]
    6a5c:	ldp	x29, x30, [sp], #384
    6a60:	ret
    6a64:	cmp	w5, #0x30
    6a68:	b.eq	6ee0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x500>  // b.none
    6a6c:	b.ls	6be0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x200>  // b.plast
    6a70:	cmp	w5, #0x36
    6a74:	b.hi	6b18 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x138>  // b.pmore
    6a78:	cmp	w5, #0x34
    6a7c:	b.hi	6dbc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3dc>  // b.pmore
    6a80:	cmp	w5, #0x31
    6a84:	b.ne	6c9c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x2bc>  // b.any
    6a88:	mov	x0, x19
    6a8c:	mov	w1, #0x0                   	// #0
    6a90:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6a94:	mov	x1, x0
    6a98:	ldr	x2, [x19]
    6a9c:	mov	x8, x21
    6aa0:	mov	x3, x20
    6aa4:	mov	x0, x22
    6aa8:	bl	5b98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    6aac:	b	6a50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    6ab0:	cmp	w5, #0x29
    6ab4:	b.ne	6c9c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x2bc>  // b.any
    6ab8:	mov	x0, x19
    6abc:	mov	w1, #0x0                   	// #0
    6ac0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6ac4:	mov	x1, x0
    6ac8:	ldr	x2, [x19]
    6acc:	mov	x8, x21
    6ad0:	mov	x3, x20
    6ad4:	mov	x0, x22
    6ad8:	bl	e930 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    6adc:	b	6a50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    6ae0:	cmp	w5, #0x26
    6ae4:	b.eq	6eb8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x4d8>  // b.none
    6ae8:	cmp	w5, #0x27
    6aec:	b.ne	6c18 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x238>  // b.any
    6af0:	mov	x0, x19
    6af4:	mov	w1, #0x0                   	// #0
    6af8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6afc:	mov	x1, x0
    6b00:	ldr	x2, [x19]
    6b04:	mov	x8, x21
    6b08:	mov	x3, x20
    6b0c:	mov	x0, x22
    6b10:	bl	e118 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    6b14:	b	6a50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    6b18:	stp	x23, x24, [sp, #48]
    6b1c:	cmp	w5, #0x39
    6b20:	b.ne	6ca0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x2c0>  // b.any
    6b24:	add	x23, sp, #0xf0
    6b28:	mov	w1, #0x0                   	// #0
    6b2c:	mov	x0, x19
    6b30:	str	x25, [sp, #64]
    6b34:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6b38:	mov	x1, x0
    6b3c:	mov	x8, x23
    6b40:	mov	x2, x20
    6b44:	mov	x0, x22
    6b48:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6b4c:	add	x24, sp, #0x120
    6b50:	mov	w1, #0x1                   	// #1
    6b54:	mov	x0, x19
    6b58:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6b5c:	mov	x8, x24
    6b60:	mov	x2, x20
    6b64:	mov	x1, x0
    6b68:	mov	x0, x22
    6b6c:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6b70:	add	x25, sp, #0x150
    6b74:	mov	w1, #0x2                   	// #2
    6b78:	mov	x0, x19
    6b7c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6b80:	mov	x1, x0
    6b84:	mov	x8, x25
    6b88:	mov	x2, x20
    6b8c:	mov	x0, x22
    6b90:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6b94:	mov	w1, #0x0                   	// #0
    6b98:	mov	x0, x19
    6b9c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6ba0:	mov	x3, x0
    6ba4:	mov	x2, x25
    6ba8:	mov	x1, x24
    6bac:	mov	x8, x21
    6bb0:	mov	x0, x23
    6bb4:	ldr	x3, [x3]
    6bb8:	bl	58d8 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE>
    6bbc:	mov	x0, x25
    6bc0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6bc4:	mov	x0, x24
    6bc8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6bcc:	mov	x0, x23
    6bd0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6bd4:	ldp	x23, x24, [sp, #48]
    6bd8:	ldr	x25, [sp, #64]
    6bdc:	b	6a50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    6be0:	cmp	w5, #0x2e
    6be4:	b.eq	6e68 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x488>  // b.none
    6be8:	cmp	w5, #0x2f
    6bec:	b.ne	6c6c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x28c>  // b.any
    6bf0:	mov	x0, x19
    6bf4:	mov	w1, #0x0                   	// #0
    6bf8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6bfc:	mov	x1, x0
    6c00:	ldr	x2, [x19]
    6c04:	mov	x8, x21
    6c08:	mov	x3, x20
    6c0c:	mov	x0, x22
    6c10:	bl	f5e0 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    6c14:	b	6a50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    6c18:	stp	x23, x24, [sp, #48]
    6c1c:	cmp	w5, #0x22
    6c20:	b.ne	6ca0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x2c0>  // b.any
    6c24:	mov	w1, #0x0                   	// #0
    6c28:	mov	x0, x19
    6c2c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6c30:	mov	x23, x0
    6c34:	ldrb	w1, [x19, #16]
    6c38:	cmp	w1, #0x17
    6c3c:	b.hi	6f38 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x558>  // b.pmore
    6c40:	cmp	w1, #0x5
    6c44:	b.eq	6f40 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x560>  // b.none
    6c48:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6c4c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6c50:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6c54:	add	x3, x3, #0x0
    6c58:	add	x1, x1, #0x0
    6c5c:	add	x0, x0, #0x0
    6c60:	mov	w2, #0x108                 	// #264
    6c64:	str	x25, [sp, #64]
    6c68:	bl	0 <__assert_fail>
    6c6c:	cmp	w5, #0x2d
    6c70:	b.ne	6c9c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x2bc>  // b.any
    6c74:	mov	x0, x19
    6c78:	mov	w1, #0x0                   	// #0
    6c7c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6c80:	mov	x1, x0
    6c84:	ldr	x2, [x19]
    6c88:	mov	x8, x21
    6c8c:	mov	x3, x20
    6c90:	mov	x0, x22
    6c94:	bl	e490 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    6c98:	b	6a50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    6c9c:	stp	x23, x24, [sp, #48]
    6ca0:	mov	w1, #0x0                   	// #0
    6ca4:	mov	x0, x19
    6ca8:	add	x24, sp, #0xc0
    6cac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6cb0:	mov	x1, x0
    6cb4:	mov	x2, x20
    6cb8:	mov	x8, x24
    6cbc:	mov	x0, x22
    6cc0:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6cc4:	mov	w1, #0x1                   	// #1
    6cc8:	mov	x0, x19
    6ccc:	add	x23, sp, #0xf0
    6cd0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6cd4:	mov	x2, x20
    6cd8:	mov	x1, x0
    6cdc:	mov	x8, x23
    6ce0:	mov	x0, x22
    6ce4:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6ce8:	stp	xzr, xzr, [sp, #144]
    6cec:	mov	w2, #0x1                   	// #1
    6cf0:	mov	w1, #0x0                   	// #0
    6cf4:	mov	x0, x19
    6cf8:	str	w2, [sp, #160]
    6cfc:	stp	xzr, xzr, [sp, #168]
    6d00:	str	xzr, [sp, #184]
    6d04:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6d08:	ldrh	w1, [x19, #18]
    6d0c:	ldr	x20, [x0]
    6d10:	sub	w1, w1, #0xd
    6d14:	cmp	w1, #0x11
    6d18:	b.ls	6f20 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x540>  // b.plast
    6d1c:	str	x25, [sp, #64]
    6d20:	bl	0 <_ZN4llvm4dbgsEv>
    6d24:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6d28:	add	x1, x1, #0x0
    6d2c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6d30:	mov	x20, x0
    6d34:	mov	w2, #0x0                   	// #0
    6d38:	mov	x0, x19
    6d3c:	mov	x1, x20
    6d40:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    6d44:	mov	x0, x20
    6d48:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6d4c:	add	x1, x1, #0x0
    6d50:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6d54:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6d58:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6d5c:	add	x1, x1, #0x0
    6d60:	add	x0, x0, #0x0
    6d64:	mov	w2, #0x833                 	// #2099
    6d68:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    6d6c:	mov	x0, x19
    6d70:	mov	w1, #0x0                   	// #0
    6d74:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6d78:	mov	x1, x0
    6d7c:	ldr	x2, [x19]
    6d80:	mov	x8, x21
    6d84:	mov	x3, x20
    6d88:	mov	x0, x22
    6d8c:	bl	f340 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    6d90:	b	6a50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    6d94:	mov	x0, x19
    6d98:	mov	w1, #0x0                   	// #0
    6d9c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6da0:	mov	x1, x0
    6da4:	ldr	x2, [x19]
    6da8:	mov	x8, x21
    6dac:	mov	x3, x20
    6db0:	mov	x0, x22
    6db4:	bl	dda0 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    6db8:	b	6a50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    6dbc:	mov	x0, x1
    6dc0:	stp	x23, x24, [sp, #48]
    6dc4:	add	x24, sp, #0xc0
    6dc8:	str	x25, [sp, #64]
    6dcc:	bl	0 <_ZNK4llvm12ConstantExpr12getPredicateEv>
    6dd0:	mov	w1, #0x0                   	// #0
    6dd4:	mov	w25, w0
    6dd8:	mov	x0, x19
    6ddc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6de0:	mov	x8, x24
    6de4:	mov	x2, x20
    6de8:	mov	x1, x0
    6dec:	mov	x0, x22
    6df0:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6df4:	add	x23, sp, #0xf0
    6df8:	mov	x0, x19
    6dfc:	mov	w1, #0x1                   	// #1
    6e00:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6e04:	mov	x1, x0
    6e08:	mov	x2, x20
    6e0c:	mov	x8, x23
    6e10:	mov	x0, x22
    6e14:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6e18:	mov	x0, x19
    6e1c:	mov	w1, #0x0                   	// #0
    6e20:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6e24:	mov	w1, #0x1                   	// #1
    6e28:	cmp	w25, #0x29
    6e2c:	ldr	x19, [x0]
    6e30:	stp	xzr, xzr, [sp, #144]
    6e34:	str	w1, [sp, #160]
    6e38:	stp	xzr, xzr, [sp, #168]
    6e3c:	str	xzr, [sp, #184]
    6e40:	b.ls	6f08 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x528>  // b.plast
    6e44:	bl	0 <_ZN4llvm4dbgsEv>
    6e48:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6e4c:	add	x1, x1, #0x0
    6e50:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6e54:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6e58:	mov	w2, #0x2da                 	// #730
    6e5c:	add	x1, x1, #0x0
    6e60:	mov	x0, #0x0                   	// #0
    6e64:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    6e68:	mov	x0, x19
    6e6c:	mov	w1, #0x0                   	// #0
    6e70:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6e74:	mov	x1, x0
    6e78:	ldr	x2, [x19]
    6e7c:	mov	x8, x21
    6e80:	mov	x3, x20
    6e84:	mov	x0, x22
    6e88:	bl	e6e0 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    6e8c:	b	6a50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    6e90:	mov	x0, x19
    6e94:	mov	w1, #0x0                   	// #0
    6e98:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6e9c:	mov	x1, x0
    6ea0:	ldr	x2, [x19]
    6ea4:	mov	x8, x21
    6ea8:	mov	x3, x20
    6eac:	mov	x0, x22
    6eb0:	bl	ece8 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    6eb4:	b	6a50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    6eb8:	mov	x0, x19
    6ebc:	mov	w1, #0x0                   	// #0
    6ec0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6ec4:	mov	x1, x0
    6ec8:	ldr	x2, [x19]
    6ecc:	mov	x8, x21
    6ed0:	mov	x3, x20
    6ed4:	mov	x0, x22
    6ed8:	bl	da20 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    6edc:	b	6a50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    6ee0:	mov	x0, x19
    6ee4:	mov	w1, #0x0                   	// #0
    6ee8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6eec:	mov	x1, x0
    6ef0:	ldr	x2, [x19]
    6ef4:	mov	x8, x21
    6ef8:	mov	x3, x20
    6efc:	mov	x0, x22
    6f00:	bl	f818 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    6f04:	b	6a50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    6f08:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6f0c:	add	x0, x0, #0x0
    6f10:	ldrh	w0, [x0, w25, uxtw #1]
    6f14:	adr	x1, 6f20 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x540>
    6f18:	add	x0, x1, w0, sxth #2
    6f1c:	br	x0
    6f20:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6f24:	add	x0, x0, #0x0
    6f28:	ldrh	w0, [x0, w1, uxtw #1]
    6f2c:	adr	x1, 6f38 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x558>
    6f30:	add	x0, x1, w0, sxth #2
    6f34:	br	x0
    6f38:	cmp	w1, #0x3a
    6f3c:	b.ne	6c48 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x268>  // b.any
    6f40:	mov	x0, x19
    6f44:	bl	0 <_ZNK4llvm11GEPOperator20getSourceElementTypeEv>
    6f48:	ldrb	w1, [x19, #23]
    6f4c:	tbz	w1, #6, 7c88 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12a8>
    6f50:	ldur	x8, [x19, #-8]
    6f54:	mov	x5, #0xffffffffffffffff    	// #-1
    6f58:	str	x5, [sp, #304]
    6f5c:	tst	x0, #0x7
    6f60:	add	x1, x8, #0x18
    6f64:	b.ne	7fd8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x15f8>  // b.any
    6f68:	ldr	w3, [x19, #20]
    6f6c:	orr	x2, x0, #0x4
    6f70:	stp	x1, x2, [sp, #288]
    6f74:	mov	w9, #0x18                  	// #24
    6f78:	mov	x1, x23
    6f7c:	ubfx	x2, x3, #0, #28
    6f80:	stp	xzr, x5, [sp, #344]
    6f84:	mov	x4, x20
    6f88:	ldp	x6, x7, [sp, #288]
    6f8c:	umaddl	x2, w2, w9, x8
    6f90:	str	x2, [sp, #336]
    6f94:	mov	x0, x22
    6f98:	mov	x8, x21
    6f9c:	add	x3, sp, #0x50
    6fa0:	ldp	x10, x11, [sp, #336]
    6fa4:	add	x2, sp, #0x70
    6fa8:	stp	x10, x11, [sp, #80]
    6fac:	str	x5, [sp, #96]
    6fb0:	stp	x6, x7, [sp, #112]
    6fb4:	str	x5, [sp, #128]
    6fb8:	bl	bed8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE>
    6fbc:	ldp	x23, x24, [sp, #48]
    6fc0:	b	6a50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    6fc4:	add	x0, x23, #0x8
    6fc8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6fcc:	ldr	w1, [sp, #208]
    6fd0:	mov	x19, x0
    6fd4:	str	w1, [sp, #344]
    6fd8:	cmp	w1, #0x40
    6fdc:	b.hi	7e2c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x144c>  // b.pmore
    6fe0:	cmp	w0, w1
    6fe4:	ldr	x0, [sp, #200]
    6fe8:	str	x0, [sp, #336]
    6fec:	b.ls	7d30 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1350>  // b.plast
    6ff0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6ff4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6ff8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    6ffc:	add	x3, x3, #0x0
    7000:	add	x1, x1, #0x0
    7004:	add	x0, x0, #0x0
    7008:	mov	w2, #0x3cb                 	// #971
    700c:	str	x25, [sp, #64]
    7010:	bl	0 <__assert_fail>
    7014:	add	x0, x23, #0x8
    7018:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    701c:	ldr	w1, [sp, #208]
    7020:	mov	x19, x0
    7024:	str	w1, [sp, #344]
    7028:	cmp	w1, #0x40
    702c:	b.hi	7df8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1418>  // b.pmore
    7030:	cmp	w0, w1
    7034:	add	x22, sp, #0x150
    7038:	ldr	x0, [sp, #200]
    703c:	str	x0, [sp, #336]
    7040:	b.hi	7ef4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1514>  // b.pmore
    7044:	cmp	w19, w1
    7048:	b.eq	7f18 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1538>  // b.none
    704c:	ldr	x0, [sp, #336]
    7050:	lsr	x19, x0, x19
    7054:	str	x19, [sp, #336]
    7058:	add	x19, sp, #0x90
    705c:	mov	x1, x22
    7060:	add	x0, x19, #0x8
    7064:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7068:	ldr	w0, [sp, #344]
    706c:	cmp	w0, #0x40
    7070:	b.ls	7080 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x6a0>  // b.plast
    7074:	ldr	x0, [sp, #336]
    7078:	cbz	x0, 7080 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x6a0>
    707c:	bl	0 <_ZdaPv>
    7080:	mov	x2, x21
    7084:	ldr	w3, [sp, #160]
    7088:	ldr	x0, [sp, #144]
    708c:	mov	x1, x21
    7090:	str	x0, [x2], #8
    7094:	mov	x0, x19
    7098:	ldur	q0, [sp, #168]
    709c:	str	w3, [x2, #8]
    70a0:	ldr	x2, [sp, #152]
    70a4:	str	x2, [x21, #8]
    70a8:	ldr	x2, [sp, #184]
    70ac:	str	q0, [x1, #24]!
    70b0:	str	x2, [x1, #16]
    70b4:	str	wzr, [sp, #160]
    70b8:	stp	xzr, xzr, [sp, #168]
    70bc:	str	xzr, [sp, #184]
    70c0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    70c4:	mov	x0, x23
    70c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    70cc:	mov	x0, x24
    70d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    70d4:	ldp	x23, x24, [sp, #48]
    70d8:	b	6a50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    70dc:	add	x0, x23, #0x8
    70e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    70e4:	ldr	w1, [sp, #208]
    70e8:	mov	x19, x0
    70ec:	str	w1, [sp, #344]
    70f0:	cmp	w1, #0x40
    70f4:	b.hi	7dc4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x13e4>  // b.pmore
    70f8:	cmp	w0, w1
    70fc:	ldr	x0, [sp, #200]
    7100:	str	x0, [sp, #336]
    7104:	b.hi	7ffc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x161c>  // b.pmore
    7108:	add	x22, sp, #0x150
    710c:	cmp	w19, w1
    7110:	mov	x2, #0x0                   	// #0
    7114:	b.eq	7120 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x740>  // b.none
    7118:	ldr	x0, [sp, #336]
    711c:	lsl	x2, x0, x19
    7120:	neg	w1, w1
    7124:	mov	x0, #0xffffffffffffffff    	// #-1
    7128:	lsr	x1, x0, x1
    712c:	and	x0, x1, x2
    7130:	str	x0, [sp, #336]
    7134:	b	7058 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x678>
    7138:	str	x25, [sp, #64]
    713c:	add	x25, sp, #0x120
    7140:	mov	x1, x24
    7144:	mov	x0, x25
    7148:	add	x22, sp, #0x150
    714c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7150:	mov	x0, x22
    7154:	mov	x1, x23
    7158:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    715c:	ldrb	w0, [x20, #8]
    7160:	cmp	w0, #0x2
    7164:	b.ne	7cdc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12fc>  // b.any
    7168:	ldr	s0, [sp, #288]
    716c:	ldr	s1, [sp, #336]
    7170:	fcvt	d0, s0
    7174:	fcvt	d1, s1
    7178:	bl	0 <fmod>
    717c:	fcvt	s0, d0
    7180:	str	s0, [sp, #144]
    7184:	nop
    7188:	mov	x0, x22
    718c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7190:	mov	x0, x25
    7194:	add	x19, sp, #0x90
    7198:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    719c:	ldr	x25, [sp, #64]
    71a0:	b	7080 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x6a0>
    71a4:	add	x20, sp, #0x150
    71a8:	add	x1, x23, #0x8
    71ac:	mov	x8, x20
    71b0:	add	x0, x24, #0x8
    71b4:	bl	0 <_ZNK4llvm5APInt4sremERKS0_>
    71b8:	add	x19, sp, #0x90
    71bc:	mov	x1, x20
    71c0:	b	7060 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x680>
    71c4:	add	x20, sp, #0x150
    71c8:	add	x1, x23, #0x8
    71cc:	mov	x8, x20
    71d0:	add	x0, x24, #0x8
    71d4:	bl	0 <_ZNK4llvm5APInt4udivERKS0_>
    71d8:	add	x19, sp, #0x90
    71dc:	mov	x1, x20
    71e0:	b	7060 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x680>
    71e4:	str	x25, [sp, #64]
    71e8:	add	x25, sp, #0x120
    71ec:	mov	x1, x24
    71f0:	mov	x0, x25
    71f4:	add	x22, sp, #0x150
    71f8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    71fc:	mov	x0, x22
    7200:	mov	x1, x23
    7204:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7208:	ldrb	w0, [x20, #8]
    720c:	cmp	w0, #0x2
    7210:	b.ne	7cc0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12e0>  // b.any
    7214:	ldr	s0, [sp, #288]
    7218:	ldr	s1, [sp, #336]
    721c:	fmul	s0, s0, s1
    7220:	str	s0, [sp, #144]
    7224:	b	7188 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x7a8>
    7228:	add	x20, sp, #0x150
    722c:	add	x1, x23, #0x8
    7230:	mov	x8, x20
    7234:	add	x0, x24, #0x8
    7238:	bl	0 <_ZNK4llvm5APIntmlERKS0_>
    723c:	add	x19, sp, #0x90
    7240:	mov	x1, x20
    7244:	b	7060 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x680>
    7248:	str	x25, [sp, #64]
    724c:	add	x25, sp, #0x120
    7250:	mov	x1, x24
    7254:	mov	x0, x25
    7258:	add	x22, sp, #0x150
    725c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7260:	mov	x0, x22
    7264:	mov	x1, x23
    7268:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    726c:	ldrb	w0, [x20, #8]
    7270:	cmp	w0, #0x2
    7274:	b.ne	7ca4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12c4>  // b.any
    7278:	ldr	s0, [sp, #288]
    727c:	ldr	s1, [sp, #336]
    7280:	fsub	s0, s0, s1
    7284:	str	s0, [sp, #144]
    7288:	b	7188 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x7a8>
    728c:	str	x25, [sp, #64]
    7290:	add	x25, sp, #0x120
    7294:	mov	x1, x24
    7298:	mov	x0, x25
    729c:	add	x22, sp, #0x150
    72a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    72a4:	mov	x0, x22
    72a8:	mov	x1, x23
    72ac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    72b0:	ldrb	w0, [x20, #8]
    72b4:	cmp	w0, #0x2
    72b8:	b.ne	7cf8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1318>  // b.any
    72bc:	ldr	s0, [sp, #288]
    72c0:	ldr	s1, [sp, #336]
    72c4:	fdiv	s0, s0, s1
    72c8:	str	s0, [sp, #144]
    72cc:	b	7188 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x7a8>
    72d0:	add	x20, sp, #0x150
    72d4:	add	x1, x23, #0x8
    72d8:	mov	x8, x20
    72dc:	add	x0, x24, #0x8
    72e0:	bl	0 <_ZNK4llvm5APInt4uremERKS0_>
    72e4:	add	x19, sp, #0x90
    72e8:	mov	x1, x20
    72ec:	b	7060 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x680>
    72f0:	add	x20, sp, #0x150
    72f4:	add	x1, x23, #0x8
    72f8:	mov	x8, x20
    72fc:	add	x0, x24, #0x8
    7300:	bl	0 <_ZNK4llvm5APInt4sdivERKS0_>
    7304:	add	x19, sp, #0x90
    7308:	mov	x1, x20
    730c:	b	7060 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x680>
    7310:	ldr	w2, [sp, #208]
    7314:	str	w2, [sp, #296]
    7318:	cmp	w2, #0x40
    731c:	b.hi	7eb4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x14d4>  // b.pmore
    7320:	ldr	x0, [sp, #200]
    7324:	str	x0, [sp, #288]
    7328:	ldr	w0, [sp, #256]
    732c:	cmp	w0, w2
    7330:	b.ne	7fac <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x15cc>  // b.any
    7334:	ldr	x0, [sp, #248]
    7338:	ldr	x3, [sp, #288]
    733c:	orr	x3, x3, x0
    7340:	str	x3, [sp, #288]
    7344:	add	x19, sp, #0x90
    7348:	add	x1, sp, #0x150
    734c:	add	x0, x19, #0x8
    7350:	str	wzr, [sp, #296]
    7354:	str	x3, [sp, #336]
    7358:	str	w2, [sp, #344]
    735c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7360:	ldr	w0, [sp, #344]
    7364:	cmp	w0, #0x40
    7368:	b.ls	7378 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x998>  // b.plast
    736c:	ldr	x0, [sp, #336]
    7370:	cbz	x0, 7378 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x998>
    7374:	bl	0 <_ZdaPv>
    7378:	ldr	w0, [sp, #296]
    737c:	cmp	w0, #0x40
    7380:	b.ls	7080 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x6a0>  // b.plast
    7384:	ldr	x0, [sp, #288]
    7388:	cbnz	x0, 707c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x69c>
    738c:	b	7080 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x6a0>
    7390:	ldr	w2, [sp, #208]
    7394:	str	w2, [sp, #296]
    7398:	cmp	w2, #0x40
    739c:	b.hi	7e60 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1480>  // b.pmore
    73a0:	ldr	x0, [sp, #200]
    73a4:	str	x0, [sp, #288]
    73a8:	ldr	w0, [sp, #256]
    73ac:	cmp	w0, w2
    73b0:	b.ne	7f38 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1558>  // b.any
    73b4:	ldr	x0, [sp, #248]
    73b8:	ldr	x3, [sp, #288]
    73bc:	and	x3, x3, x0
    73c0:	str	x3, [sp, #288]
    73c4:	b	7344 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x964>
    73c8:	ldr	w0, [sp, #208]
    73cc:	str	x25, [sp, #64]
    73d0:	str	w0, [sp, #296]
    73d4:	cmp	w0, #0x40
    73d8:	b.hi	7db0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x13d0>  // b.pmore
    73dc:	add	x25, sp, #0x120
    73e0:	ldr	x0, [sp, #200]
    73e4:	str	x0, [sp, #288]
    73e8:	mov	x0, x25
    73ec:	add	x1, x23, #0x8
    73f0:	add	x19, sp, #0x90
    73f4:	bl	0 <_ZN4llvm5APIntmIERKS0_>
    73f8:	ldr	w2, [sp, #296]
    73fc:	add	x0, x19, #0x8
    7400:	ldr	x3, [sp, #288]
    7404:	add	x1, sp, #0x150
    7408:	str	wzr, [sp, #296]
    740c:	str	x3, [sp, #336]
    7410:	str	w2, [sp, #344]
    7414:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7418:	ldr	w0, [sp, #344]
    741c:	cmp	w0, #0x40
    7420:	b.ls	7430 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa50>  // b.plast
    7424:	ldr	x0, [sp, #336]
    7428:	cbz	x0, 7430 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa50>
    742c:	bl	0 <_ZdaPv>
    7430:	ldr	w0, [sp, #296]
    7434:	cmp	w0, #0x40
    7438:	b.ls	7c9c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12bc>  // b.plast
    743c:	ldr	x0, [sp, #288]
    7440:	cbz	x0, 7c9c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12bc>
    7444:	bl	0 <_ZdaPv>
    7448:	ldr	x25, [sp, #64]
    744c:	b	7080 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x6a0>
    7450:	str	x25, [sp, #64]
    7454:	add	x25, sp, #0x120
    7458:	mov	x1, x24
    745c:	mov	x0, x25
    7460:	add	x22, sp, #0x150
    7464:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7468:	mov	x0, x22
    746c:	mov	x1, x23
    7470:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7474:	ldrb	w0, [x20, #8]
    7478:	cmp	w0, #0x2
    747c:	b.ne	7d14 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1334>  // b.any
    7480:	ldr	s0, [sp, #288]
    7484:	ldr	s1, [sp, #336]
    7488:	fadd	s0, s0, s1
    748c:	str	s0, [sp, #144]
    7490:	b	7188 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x7a8>
    7494:	ldr	w0, [sp, #208]
    7498:	str	x25, [sp, #64]
    749c:	str	w0, [sp, #296]
    74a0:	cmp	w0, #0x40
    74a4:	b.hi	7ea0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x14c0>  // b.pmore
    74a8:	add	x25, sp, #0x120
    74ac:	ldr	x0, [sp, #200]
    74b0:	str	x0, [sp, #288]
    74b4:	mov	x0, x25
    74b8:	add	x1, x23, #0x8
    74bc:	add	x19, sp, #0x90
    74c0:	bl	0 <_ZN4llvm5APIntpLERKS0_>
    74c4:	b	73f8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa18>
    74c8:	ldr	w0, [sp, #208]
    74cc:	str	w0, [sp, #296]
    74d0:	cmp	w0, #0x40
    74d4:	b.hi	7d70 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1390>  // b.pmore
    74d8:	ldr	x1, [sp, #200]
    74dc:	str	x1, [sp, #288]
    74e0:	ldr	w3, [sp, #256]
    74e4:	cmp	w0, w3
    74e8:	b.ne	7f64 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1584>  // b.any
    74ec:	ldr	x0, [sp, #248]
    74f0:	ldr	x2, [sp, #288]
    74f4:	eor	x2, x2, x0
    74f8:	str	x2, [sp, #288]
    74fc:	add	x19, sp, #0x90
    7500:	add	x1, sp, #0x150
    7504:	add	x0, x19, #0x8
    7508:	str	wzr, [sp, #296]
    750c:	str	x2, [sp, #336]
    7510:	str	w3, [sp, #344]
    7514:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7518:	ldr	w0, [sp, #344]
    751c:	cmp	w0, #0x40
    7520:	b.ls	7378 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x998>  // b.plast
    7524:	b	736c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x98c>
    7528:	add	x20, sp, #0x150
    752c:	mov	x1, x24
    7530:	mov	x0, x20
    7534:	add	x22, sp, #0x120
    7538:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    753c:	mov	x1, x23
    7540:	mov	x0, x22
    7544:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7548:	mov	x8, x21
    754c:	mov	x2, x19
    7550:	mov	x1, x22
    7554:	mov	w3, #0x1                   	// #1
    7558:	mov	x0, x20
    755c:	bl	5768 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>
    7560:	mov	x0, x22
    7564:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7568:	mov	x0, x20
    756c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7570:	add	x0, sp, #0x90
    7574:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7578:	mov	x0, x23
    757c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7580:	mov	x0, x24
    7584:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7588:	ldp	x23, x24, [sp, #48]
    758c:	ldr	x25, [sp, #64]
    7590:	b	6a50 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x70>
    7594:	add	x20, sp, #0x150
    7598:	add	x22, sp, #0x120
    759c:	mov	x1, x24
    75a0:	mov	x0, x20
    75a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    75a8:	mov	x0, x22
    75ac:	mov	x1, x23
    75b0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    75b4:	mov	x8, x21
    75b8:	mov	x2, x19
    75bc:	mov	x1, x22
    75c0:	mov	x0, x20
    75c4:	bl	3318 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE>
    75c8:	mov	x0, x22
    75cc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    75d0:	mov	x0, x20
    75d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    75d8:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    75dc:	add	x20, sp, #0x150
    75e0:	add	x22, sp, #0x120
    75e4:	mov	x1, x24
    75e8:	mov	x0, x20
    75ec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    75f0:	mov	x0, x22
    75f4:	mov	x1, x23
    75f8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    75fc:	mov	x8, x21
    7600:	mov	x2, x19
    7604:	mov	x1, x22
    7608:	mov	x0, x20
    760c:	bl	1d60 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE>
    7610:	mov	x0, x22
    7614:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7618:	mov	x0, x20
    761c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7620:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    7624:	add	x20, sp, #0x150
    7628:	add	x22, sp, #0x120
    762c:	mov	x1, x24
    7630:	mov	x0, x20
    7634:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7638:	mov	x0, x22
    763c:	mov	x1, x23
    7640:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7644:	mov	x8, x21
    7648:	mov	x2, x19
    764c:	mov	x1, x22
    7650:	mov	x0, x20
    7654:	bl	14d8 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE>
    7658:	mov	x0, x22
    765c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7660:	mov	x0, x20
    7664:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7668:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    766c:	add	x20, sp, #0x150
    7670:	add	x22, sp, #0x120
    7674:	mov	x1, x24
    7678:	mov	x0, x20
    767c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7680:	mov	x0, x22
    7684:	mov	x1, x23
    7688:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    768c:	mov	x8, x21
    7690:	mov	x2, x19
    7694:	mov	x1, x22
    7698:	mov	x0, x20
    769c:	bl	16f8 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    76a0:	mov	x0, x22
    76a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    76a8:	mov	x0, x20
    76ac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    76b0:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    76b4:	add	x20, sp, #0x150
    76b8:	add	x22, sp, #0x120
    76bc:	mov	x1, x24
    76c0:	mov	x0, x20
    76c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    76c8:	mov	x0, x22
    76cc:	mov	x1, x23
    76d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    76d4:	mov	x8, x21
    76d8:	mov	x2, x19
    76dc:	mov	x1, x22
    76e0:	mov	x0, x20
    76e4:	bl	e78 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    76e8:	mov	x0, x22
    76ec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    76f0:	mov	x0, x20
    76f4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    76f8:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    76fc:	add	x20, sp, #0x150
    7700:	add	x22, sp, #0x120
    7704:	mov	x1, x24
    7708:	mov	x0, x20
    770c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7710:	mov	x0, x22
    7714:	mov	x1, x23
    7718:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    771c:	mov	x8, x21
    7720:	mov	x2, x19
    7724:	mov	x1, x22
    7728:	mov	x0, x20
    772c:	bl	1b38 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    7730:	mov	x0, x22
    7734:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7738:	mov	x0, x20
    773c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7740:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    7744:	add	x20, sp, #0x150
    7748:	add	x22, sp, #0x120
    774c:	mov	x1, x24
    7750:	mov	x0, x20
    7754:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7758:	mov	x0, x22
    775c:	mov	x1, x23
    7760:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7764:	mov	x8, x21
    7768:	mov	x2, x19
    776c:	mov	x1, x22
    7770:	mov	x0, x20
    7774:	bl	12b8 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    7778:	mov	x0, x22
    777c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7780:	mov	x0, x20
    7784:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7788:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    778c:	add	x20, sp, #0x150
    7790:	add	x22, sp, #0x120
    7794:	mov	x1, x24
    7798:	mov	x0, x20
    779c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    77a0:	mov	x0, x22
    77a4:	mov	x1, x23
    77a8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    77ac:	mov	x8, x21
    77b0:	mov	x2, x19
    77b4:	mov	x1, x22
    77b8:	mov	x0, x20
    77bc:	bl	bd0 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE>
    77c0:	mov	x0, x22
    77c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    77c8:	mov	x0, x20
    77cc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    77d0:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    77d4:	add	x20, sp, #0x150
    77d8:	add	x22, sp, #0x120
    77dc:	mov	x1, x24
    77e0:	mov	x0, x20
    77e4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    77e8:	mov	x0, x22
    77ec:	mov	x1, x23
    77f0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    77f4:	mov	x8, x21
    77f8:	mov	x2, x19
    77fc:	mov	x1, x22
    7800:	mov	x0, x20
    7804:	bl	930 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>
    7808:	mov	x0, x22
    780c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7810:	mov	x0, x20
    7814:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7818:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    781c:	add	x20, sp, #0x150
    7820:	add	x22, sp, #0x120
    7824:	mov	x1, x24
    7828:	mov	x0, x20
    782c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7830:	mov	x0, x22
    7834:	mov	x1, x23
    7838:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    783c:	mov	x8, x21
    7840:	mov	x2, x19
    7844:	mov	x1, x22
    7848:	mov	x0, x20
    784c:	bl	1918 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE>
    7850:	mov	x0, x22
    7854:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7858:	mov	x0, x20
    785c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7860:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    7864:	add	x20, sp, #0x150
    7868:	add	x22, sp, #0x120
    786c:	mov	x1, x24
    7870:	mov	x0, x20
    7874:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7878:	mov	x0, x22
    787c:	mov	x1, x23
    7880:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7884:	mov	x8, x21
    7888:	mov	x2, x19
    788c:	mov	x1, x22
    7890:	mov	x0, x20
    7894:	bl	1098 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE>
    7898:	mov	x0, x22
    789c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    78a0:	mov	x0, x20
    78a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    78a8:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    78ac:	add	x20, sp, #0x150
    78b0:	add	x22, sp, #0x120
    78b4:	mov	x1, x24
    78b8:	mov	x0, x20
    78bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    78c0:	mov	x0, x22
    78c4:	mov	x1, x23
    78c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    78cc:	mov	x8, x21
    78d0:	mov	x2, x19
    78d4:	mov	x1, x22
    78d8:	mov	x0, x20
    78dc:	bl	1f88 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE>
    78e0:	mov	x0, x22
    78e4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    78e8:	mov	x0, x20
    78ec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    78f0:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    78f4:	add	x20, sp, #0x150
    78f8:	add	x22, sp, #0x120
    78fc:	mov	x1, x24
    7900:	mov	x0, x20
    7904:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7908:	mov	x0, x22
    790c:	mov	x1, x23
    7910:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7914:	mov	x8, x21
    7918:	mov	x2, x19
    791c:	mov	x1, x22
    7920:	mov	x0, x20
    7924:	bl	2cd8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    7928:	mov	x0, x22
    792c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7930:	mov	x0, x20
    7934:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7938:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    793c:	add	x20, sp, #0x150
    7940:	add	x22, sp, #0x120
    7944:	mov	x1, x24
    7948:	mov	x0, x20
    794c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7950:	mov	x0, x22
    7954:	mov	x1, x23
    7958:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    795c:	mov	x8, x21
    7960:	mov	x2, x19
    7964:	mov	x1, x22
    7968:	mov	x0, x20
    796c:	bl	47c8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    7970:	mov	x0, x22
    7974:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7978:	mov	x0, x20
    797c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7980:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    7984:	add	x20, sp, #0x150
    7988:	add	x22, sp, #0x120
    798c:	mov	x1, x24
    7990:	mov	x0, x20
    7994:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7998:	mov	x0, x22
    799c:	mov	x1, x23
    79a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    79a4:	mov	x8, x21
    79a8:	mov	x2, x19
    79ac:	mov	x1, x22
    79b0:	mov	x0, x20
    79b4:	bl	3828 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    79b8:	mov	x0, x22
    79bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    79c0:	mov	x0, x20
    79c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    79c8:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    79cc:	add	x20, sp, #0x150
    79d0:	add	x22, sp, #0x120
    79d4:	mov	x1, x24
    79d8:	mov	x0, x20
    79dc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    79e0:	mov	x0, x22
    79e4:	mov	x1, x23
    79e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    79ec:	mov	x8, x21
    79f0:	mov	x2, x19
    79f4:	mov	x1, x22
    79f8:	mov	x0, x20
    79fc:	bl	4f98 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    7a00:	mov	x0, x22
    7a04:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7a08:	mov	x0, x20
    7a0c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7a10:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    7a14:	add	x20, sp, #0x150
    7a18:	add	x22, sp, #0x120
    7a1c:	mov	x1, x24
    7a20:	mov	x0, x20
    7a24:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7a28:	mov	x0, x22
    7a2c:	mov	x1, x23
    7a30:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7a34:	mov	x8, x21
    7a38:	mov	x2, x19
    7a3c:	mov	x1, x22
    7a40:	mov	x0, x20
    7a44:	bl	3ff8 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    7a48:	mov	x0, x22
    7a4c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7a50:	mov	x0, x20
    7a54:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7a58:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    7a5c:	add	x20, sp, #0x150
    7a60:	add	x22, sp, #0x120
    7a64:	mov	x1, x24
    7a68:	mov	x0, x20
    7a6c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7a70:	mov	x0, x22
    7a74:	mov	x1, x23
    7a78:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7a7c:	mov	x8, x21
    7a80:	mov	x2, x19
    7a84:	mov	x1, x22
    7a88:	mov	x0, x20
    7a8c:	bl	2508 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    7a90:	mov	x0, x22
    7a94:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7a98:	mov	x0, x20
    7a9c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7aa0:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    7aa4:	add	x20, sp, #0x150
    7aa8:	mov	x1, x24
    7aac:	mov	x0, x20
    7ab0:	add	x22, sp, #0x120
    7ab4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7ab8:	mov	x1, x23
    7abc:	mov	x0, x22
    7ac0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7ac4:	mov	x8, x21
    7ac8:	mov	x2, x19
    7acc:	mov	x1, x22
    7ad0:	mov	w3, #0x0                   	// #0
    7ad4:	b	7558 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb78>
    7ad8:	add	x20, sp, #0x150
    7adc:	add	x22, sp, #0x120
    7ae0:	mov	x1, x24
    7ae4:	mov	x0, x20
    7ae8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7aec:	mov	x0, x22
    7af0:	mov	x1, x23
    7af4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7af8:	mov	x8, x21
    7afc:	mov	x2, x19
    7b00:	mov	x1, x22
    7b04:	mov	x0, x20
    7b08:	bl	5258 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    7b0c:	mov	x0, x22
    7b10:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7b14:	mov	x0, x20
    7b18:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7b1c:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    7b20:	add	x20, sp, #0x150
    7b24:	add	x22, sp, #0x120
    7b28:	mov	x1, x24
    7b2c:	mov	x0, x20
    7b30:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7b34:	mov	x0, x22
    7b38:	mov	x1, x23
    7b3c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7b40:	mov	x8, x21
    7b44:	mov	x2, x19
    7b48:	mov	x1, x22
    7b4c:	mov	x0, x20
    7b50:	bl	42b8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    7b54:	mov	x0, x22
    7b58:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7b5c:	mov	x0, x20
    7b60:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7b64:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    7b68:	add	x20, sp, #0x150
    7b6c:	add	x22, sp, #0x120
    7b70:	mov	x1, x24
    7b74:	mov	x0, x20
    7b78:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7b7c:	mov	x0, x22
    7b80:	mov	x1, x23
    7b84:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7b88:	mov	x8, x21
    7b8c:	mov	x2, x19
    7b90:	mov	x1, x22
    7b94:	mov	x0, x20
    7b98:	bl	27c8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE>
    7b9c:	mov	x0, x22
    7ba0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7ba4:	mov	x0, x20
    7ba8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7bac:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    7bb0:	add	x20, sp, #0x150
    7bb4:	add	x22, sp, #0x120
    7bb8:	mov	x1, x24
    7bbc:	mov	x0, x20
    7bc0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7bc4:	mov	x0, x22
    7bc8:	mov	x1, x23
    7bcc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7bd0:	mov	x8, x21
    7bd4:	mov	x2, x19
    7bd8:	mov	x1, x22
    7bdc:	mov	x0, x20
    7be0:	bl	2248 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE>
    7be4:	mov	x0, x22
    7be8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7bec:	mov	x0, x20
    7bf0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7bf4:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    7bf8:	add	x20, sp, #0x150
    7bfc:	add	x22, sp, #0x120
    7c00:	mov	x1, x24
    7c04:	mov	x0, x20
    7c08:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7c0c:	mov	x0, x22
    7c10:	mov	x1, x23
    7c14:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7c18:	mov	x8, x21
    7c1c:	mov	x2, x19
    7c20:	mov	x1, x22
    7c24:	mov	x0, x20
    7c28:	bl	4a88 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    7c2c:	mov	x0, x22
    7c30:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7c34:	mov	x0, x20
    7c38:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7c3c:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    7c40:	add	x20, sp, #0x150
    7c44:	add	x22, sp, #0x120
    7c48:	mov	x1, x24
    7c4c:	mov	x0, x20
    7c50:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7c54:	mov	x0, x22
    7c58:	mov	x1, x23
    7c5c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7c60:	mov	x8, x21
    7c64:	mov	x2, x19
    7c68:	mov	x1, x22
    7c6c:	mov	x0, x20
    7c70:	bl	3ae8 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    7c74:	mov	x0, x22
    7c78:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7c7c:	mov	x0, x20
    7c80:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7c84:	b	7570 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb90>
    7c88:	ldr	w2, [x19, #20]
    7c8c:	mov	w8, #0x18                  	// #24
    7c90:	ubfx	x2, x2, #0, #28
    7c94:	umsubl	x8, w2, w8, x19
    7c98:	b	6f54 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x574>
    7c9c:	ldr	x25, [sp, #64]
    7ca0:	b	7080 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x6a0>
    7ca4:	cmp	w0, #0x3
    7ca8:	b.ne	7f20 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1540>  // b.any
    7cac:	ldr	d0, [sp, #288]
    7cb0:	ldr	d1, [sp, #336]
    7cb4:	fsub	d0, d0, d1
    7cb8:	str	d0, [sp, #144]
    7cbc:	b	7188 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x7a8>
    7cc0:	cmp	w0, #0x3
    7cc4:	b.ne	7f28 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1548>  // b.any
    7cc8:	ldr	d0, [sp, #288]
    7ccc:	ldr	d1, [sp, #336]
    7cd0:	fmul	d0, d0, d1
    7cd4:	str	d0, [sp, #144]
    7cd8:	b	7188 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x7a8>
    7cdc:	cmp	w0, #0x3
    7ce0:	b.ne	7f30 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1550>  // b.any
    7ce4:	ldr	d0, [sp, #288]
    7ce8:	ldr	d1, [sp, #336]
    7cec:	bl	0 <fmod>
    7cf0:	str	d0, [sp, #144]
    7cf4:	b	7188 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x7a8>
    7cf8:	cmp	w0, #0x3
    7cfc:	b.ne	7f5c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x157c>  // b.any
    7d00:	ldr	d0, [sp, #288]
    7d04:	ldr	d1, [sp, #336]
    7d08:	fdiv	d0, d0, d1
    7d0c:	str	d0, [sp, #144]
    7d10:	b	7188 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x7a8>
    7d14:	cmp	w0, #0x3
    7d18:	b.ne	7fd0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x15f0>  // b.any
    7d1c:	ldr	d0, [sp, #288]
    7d20:	ldr	d1, [sp, #336]
    7d24:	fadd	d0, d0, d1
    7d28:	str	d0, [sp, #144]
    7d2c:	b	7188 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x7a8>
    7d30:	ldr	x0, [sp, #336]
    7d34:	cbz	w1, 7f88 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x15a8>
    7d38:	mov	w2, #0x40                  	// #64
    7d3c:	sub	w2, w2, w1
    7d40:	cmp	w1, w19
    7d44:	mov	x1, #0xffffffffffffffff    	// #-1
    7d48:	lsl	x0, x0, x2
    7d4c:	add	x22, sp, #0x150
    7d50:	asr	x0, x0, x2
    7d54:	asr	x3, x0, #63
    7d58:	asr	x0, x0, x19
    7d5c:	csel	x0, x0, x3, ne  // ne = any
    7d60:	lsr	x1, x1, x2
    7d64:	and	x0, x1, x0
    7d68:	str	x0, [sp, #336]
    7d6c:	b	7058 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x678>
    7d70:	add	x19, sp, #0x120
    7d74:	add	x1, x24, #0x8
    7d78:	mov	x0, x19
    7d7c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    7d80:	ldr	w0, [sp, #256]
    7d84:	ldr	w3, [sp, #296]
    7d88:	cmp	w3, w0
    7d8c:	b.ne	7f64 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1584>  // b.any
    7d90:	cmp	w3, #0x40
    7d94:	b.ls	74ec <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb0c>  // b.plast
    7d98:	mov	x0, x19
    7d9c:	add	x1, x23, #0x8
    7da0:	bl	0 <_ZN4llvm5APInt17XorAssignSlowCaseERKS0_>
    7da4:	ldr	w3, [sp, #296]
    7da8:	ldr	x2, [sp, #288]
    7dac:	b	74fc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb1c>
    7db0:	add	x25, sp, #0x120
    7db4:	add	x1, x24, #0x8
    7db8:	mov	x0, x25
    7dbc:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    7dc0:	b	73e8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xa08>
    7dc4:	add	x22, sp, #0x150
    7dc8:	add	x1, x24, #0x8
    7dcc:	mov	x0, x22
    7dd0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    7dd4:	ldr	w1, [sp, #344]
    7dd8:	cmp	w19, w1
    7ddc:	b.hi	7ffc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x161c>  // b.pmore
    7de0:	cmp	w1, #0x40
    7de4:	b.ls	710c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x72c>  // b.plast
    7de8:	mov	w1, w19
    7dec:	mov	x0, x22
    7df0:	bl	0 <_ZN4llvm5APInt11shlSlowCaseEj>
    7df4:	b	7058 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x678>
    7df8:	add	x22, sp, #0x150
    7dfc:	add	x1, x24, #0x8
    7e00:	mov	x0, x22
    7e04:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    7e08:	ldr	w1, [sp, #344]
    7e0c:	cmp	w19, w1
    7e10:	b.hi	7ef4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1514>  // b.pmore
    7e14:	cmp	w1, #0x40
    7e18:	b.ls	7044 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x664>  // b.plast
    7e1c:	mov	w1, w19
    7e20:	mov	x0, x22
    7e24:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
    7e28:	b	7058 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x678>
    7e2c:	add	x22, sp, #0x150
    7e30:	add	x1, x24, #0x8
    7e34:	mov	x0, x22
    7e38:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    7e3c:	ldr	w1, [sp, #344]
    7e40:	cmp	w19, w1
    7e44:	b.hi	6ff0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x610>  // b.pmore
    7e48:	cmp	w1, #0x40
    7e4c:	b.ls	7d30 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1350>  // b.plast
    7e50:	mov	w1, w19
    7e54:	mov	x0, x22
    7e58:	bl	0 <_ZN4llvm5APInt12ashrSlowCaseEj>
    7e5c:	b	7058 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x678>
    7e60:	add	x19, sp, #0x120
    7e64:	add	x1, x24, #0x8
    7e68:	mov	x0, x19
    7e6c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    7e70:	ldr	w0, [sp, #256]
    7e74:	ldr	w2, [sp, #296]
    7e78:	cmp	w2, w0
    7e7c:	b.ne	7f38 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1558>  // b.any
    7e80:	cmp	w2, #0x40
    7e84:	b.ls	73b4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x9d4>  // b.plast
    7e88:	mov	x0, x19
    7e8c:	add	x1, x23, #0x8
    7e90:	bl	0 <_ZN4llvm5APInt17AndAssignSlowCaseERKS0_>
    7e94:	ldr	w2, [sp, #296]
    7e98:	ldr	x3, [sp, #288]
    7e9c:	b	7344 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x964>
    7ea0:	add	x25, sp, #0x120
    7ea4:	add	x1, x24, #0x8
    7ea8:	mov	x0, x25
    7eac:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    7eb0:	b	74b4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xad4>
    7eb4:	add	x19, sp, #0x120
    7eb8:	add	x1, x24, #0x8
    7ebc:	mov	x0, x19
    7ec0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    7ec4:	ldr	w0, [sp, #256]
    7ec8:	ldr	w2, [sp, #296]
    7ecc:	cmp	w2, w0
    7ed0:	b.ne	7fac <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x15cc>  // b.any
    7ed4:	cmp	w2, #0x40
    7ed8:	b.ls	7334 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x954>  // b.plast
    7edc:	mov	x0, x19
    7ee0:	add	x1, x23, #0x8
    7ee4:	bl	0 <_ZN4llvm5APInt16OrAssignSlowCaseERKS0_>
    7ee8:	ldr	w2, [sp, #296]
    7eec:	ldr	x3, [sp, #288]
    7ef0:	b	7344 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x964>
    7ef4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7ef8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7efc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7f00:	add	x3, x3, #0x0
    7f04:	add	x1, x1, #0x0
    7f08:	add	x0, x0, #0x0
    7f0c:	mov	w2, #0x3e3                 	// #995
    7f10:	str	x25, [sp, #64]
    7f14:	bl	0 <__assert_fail>
    7f18:	str	xzr, [sp, #336]
    7f1c:	b	7058 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x678>
    7f20:	mov	x0, x20
    7f24:	bl	2e0 <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    7f28:	mov	x0, x20
    7f2c:	bl	140 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    7f30:	mov	x0, x20
    7f34:	bl	3b0 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    7f38:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7f3c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7f40:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7f44:	add	x3, x3, #0x0
    7f48:	add	x1, x1, #0x0
    7f4c:	add	x0, x0, #0x0
    7f50:	mov	w2, #0x329                 	// #809
    7f54:	str	x25, [sp, #64]
    7f58:	bl	0 <__assert_fail>
    7f5c:	mov	x0, x20
    7f60:	bl	210 <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    7f64:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7f68:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7f6c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7f70:	add	x3, x3, #0x0
    7f74:	add	x1, x1, #0x0
    7f78:	add	x0, x0, #0x0
    7f7c:	mov	w2, #0x365                 	// #869
    7f80:	str	x25, [sp, #64]
    7f84:	bl	0 <__assert_fail>
    7f88:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7f8c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7f90:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7f94:	add	x3, x3, #0x0
    7f98:	add	x1, x1, #0x0
    7f9c:	add	x0, x0, #0x0
    7fa0:	mov	w2, #0x307                 	// #775
    7fa4:	str	x25, [sp, #64]
    7fa8:	bl	0 <__assert_fail>
    7fac:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7fb0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7fb4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7fb8:	add	x3, x3, #0x0
    7fbc:	add	x1, x1, #0x0
    7fc0:	add	x0, x0, #0x0
    7fc4:	mov	w2, #0x347                 	// #839
    7fc8:	str	x25, [sp, #64]
    7fcc:	bl	0 <__assert_fail>
    7fd0:	mov	x0, x20
    7fd4:	bl	480 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    7fd8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7fdc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7fe0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    7fe4:	add	x3, x3, #0x0
    7fe8:	add	x1, x1, #0x0
    7fec:	add	x0, x0, #0x0
    7ff0:	mov	w2, #0xb2                  	// #178
    7ff4:	str	x25, [sp, #64]
    7ff8:	bl	0 <__assert_fail>
    7ffc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8000:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8004:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8008:	add	x3, x3, #0x0
    800c:	add	x1, x1, #0x0
    8010:	add	x0, x0, #0x0
    8014:	mov	w2, #0x39a                 	// #922
    8018:	str	x25, [sp, #64]
    801c:	bl	0 <__assert_fail>

0000000000008020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>:
    8020:	stp	x29, x30, [sp, #-64]!
    8024:	mov	x29, sp
    8028:	str	x19, [sp, #16]
    802c:	str	x1, [sp, #40]
    8030:	cbz	x1, 80f8 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xd8>
    8034:	ldrb	w5, [x1, #16]
    8038:	mov	x19, x8
    803c:	mov	x3, x1
    8040:	cmp	w5, #0x5
    8044:	b.eq	80c8 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xa8>  // b.none
    8048:	cmp	w5, #0x10
    804c:	b.ls	80dc <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xbc>  // b.plast
    8050:	add	x0, x2, #0x28
    8054:	mov	x4, x2
    8058:	ldr	x2, [x2, #48]
    805c:	mov	x1, x0
    8060:	cbz	x2, 8094 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x74>
    8064:	nop
    8068:	ldr	x5, [x2, #32]
    806c:	cmp	x5, x3
    8070:	b.cc	80f0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xd0>  // b.lo, b.ul, b.last
    8074:	mov	x1, x2
    8078:	ldr	x2, [x2, #16]
    807c:	cbnz	x2, 8068 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x48>
    8080:	cmp	x0, x1
    8084:	b.eq	8094 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x74>  // b.none
    8088:	ldr	x0, [x1, #32]
    808c:	cmp	x0, x3
    8090:	b.ls	80b8 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x98>  // b.plast
    8094:	add	x5, sp, #0x28
    8098:	add	x0, x4, #0x20
    809c:	add	x3, sp, #0x38
    80a0:	add	x4, sp, #0x30
    80a4:	adrp	x2, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    80a8:	add	x2, x2, #0x0
    80ac:	str	x5, [sp, #56]
    80b0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    80b4:	mov	x1, x0
    80b8:	add	x1, x1, #0x28
    80bc:	mov	x0, x19
    80c0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    80c4:	b	80cc <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xac>
    80c8:	bl	69e0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE>
    80cc:	mov	x0, x19
    80d0:	ldr	x19, [sp, #16]
    80d4:	ldp	x29, x30, [sp], #64
    80d8:	ret
    80dc:	bl	0 <_ZN4llvm15ExecutionEngine16getConstantValueEPKNS_8ConstantE>
    80e0:	mov	x0, x19
    80e4:	ldr	x19, [sp, #16]
    80e8:	ldp	x29, x30, [sp], #64
    80ec:	ret
    80f0:	ldr	x2, [x2, #24]
    80f4:	b	807c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x5c>
    80f8:	bl	c8 <_ZN4llvm13isa_impl_wrapINS_12ConstantExprEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    80fc:	nop

0000000000008100 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE>:
    8100:	stp	x29, x30, [sp, #-208]!
    8104:	mov	x29, sp
    8108:	stp	x19, x20, [sp, #16]
    810c:	mov	x19, x1
    8110:	ldur	x1, [x1, #-24]
    8114:	stp	x21, x22, [sp, #32]
    8118:	ldr	x20, [x0, #704]
    811c:	ldr	x22, [x1]
    8120:	sub	x20, x20, #0x80
    8124:	str	x23, [sp, #48]
    8128:	add	x23, sp, #0x70
    812c:	mov	x2, x20
    8130:	mov	x8, x23
    8134:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8138:	ldrb	w0, [x22, #8]
    813c:	mov	w1, #0x1                   	// #1
    8140:	stp	xzr, xzr, [sp, #64]
    8144:	cmp	w0, #0x10
    8148:	str	w1, [sp, #80]
    814c:	stp	xzr, xzr, [sp, #88]
    8150:	str	xzr, [sp, #104]
    8154:	b.eq	82b8 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x1b8>  // b.none
    8158:	ldrb	w0, [x19, #16]
    815c:	cmp	w0, #0x24
    8160:	b.ne	83c0 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x2c0>  // b.any
    8164:	add	x21, sp, #0xa0
    8168:	mov	x1, x23
    816c:	mov	x0, x21
    8170:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8174:	ldrb	w0, [x22, #8]
    8178:	cmp	w0, #0x2
    817c:	b.eq	82a8 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x1a8>  // b.none
    8180:	cmp	w0, #0x3
    8184:	b.ne	83d8 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x2d8>  // b.any
    8188:	ldr	d0, [sp, #160]
    818c:	fneg	d0, d0
    8190:	str	d0, [sp, #64]
    8194:	add	x23, sp, #0x40
    8198:	mov	x0, x21
    819c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    81a0:	mov	x1, x23
    81a4:	mov	x0, x21
    81a8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    81ac:	mov	x2, x20
    81b0:	mov	x0, x19
    81b4:	mov	x1, x21
    81b8:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    81bc:	ldp	x19, x20, [sp, #184]
    81c0:	cmp	x19, x20
    81c4:	b.eq	81e0 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0xe0>  // b.none
    81c8:	mov	x0, x19
    81cc:	add	x19, x19, #0x30
    81d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    81d4:	cmp	x20, x19
    81d8:	b.ne	81c8 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0xc8>  // b.any
    81dc:	ldr	x20, [sp, #184]
    81e0:	cbz	x20, 81ec <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0xec>
    81e4:	mov	x0, x20
    81e8:	bl	0 <_ZdlPv>
    81ec:	ldr	w0, [sp, #176]
    81f0:	cmp	w0, #0x40
    81f4:	b.ls	8204 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x104>  // b.plast
    81f8:	ldr	x0, [sp, #168]
    81fc:	cbz	x0, 8204 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x104>
    8200:	bl	0 <_ZdaPv>
    8204:	ldp	x19, x20, [sp, #88]
    8208:	cmp	x19, x20
    820c:	b.eq	8228 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x128>  // b.none
    8210:	mov	x0, x19
    8214:	add	x19, x19, #0x30
    8218:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    821c:	cmp	x20, x19
    8220:	b.ne	8210 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x110>  // b.any
    8224:	ldr	x20, [sp, #88]
    8228:	cbz	x20, 8234 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x134>
    822c:	mov	x0, x20
    8230:	bl	0 <_ZdlPv>
    8234:	ldr	w0, [sp, #80]
    8238:	cmp	w0, #0x40
    823c:	b.ls	824c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x14c>  // b.plast
    8240:	ldr	x0, [sp, #72]
    8244:	cbz	x0, 824c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x14c>
    8248:	bl	0 <_ZdaPv>
    824c:	ldp	x19, x20, [sp, #136]
    8250:	cmp	x19, x20
    8254:	b.eq	8270 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x170>  // b.none
    8258:	mov	x0, x19
    825c:	add	x19, x19, #0x30
    8260:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8264:	cmp	x20, x19
    8268:	b.ne	8258 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x158>  // b.any
    826c:	ldr	x20, [sp, #136]
    8270:	cbz	x20, 827c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x17c>
    8274:	mov	x0, x20
    8278:	bl	0 <_ZdlPv>
    827c:	ldr	w0, [sp, #128]
    8280:	cmp	w0, #0x40
    8284:	b.ls	8294 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x194>  // b.plast
    8288:	ldr	x0, [sp, #120]
    828c:	cbz	x0, 8294 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x194>
    8290:	bl	0 <_ZdaPv>
    8294:	ldp	x19, x20, [sp, #16]
    8298:	ldp	x21, x22, [sp, #32]
    829c:	ldr	x23, [sp, #48]
    82a0:	ldp	x29, x30, [sp], #208
    82a4:	ret
    82a8:	ldr	s0, [sp, #160]
    82ac:	fneg	s0, s0
    82b0:	str	s0, [sp, #64]
    82b4:	b	8194 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x94>
    82b8:	ldp	x2, x1, [sp, #136]
    82bc:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    82c0:	movk	x21, #0xaaab
    82c4:	add	x23, sp, #0x40
    82c8:	add	x0, x23, #0x18
    82cc:	sub	x1, x1, x2
    82d0:	asr	x1, x1, #4
    82d4:	mul	x1, x1, x21
    82d8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    82dc:	ldrb	w0, [x19, #16]
    82e0:	cmp	w0, #0x24
    82e4:	b.ne	8410 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x310>  // b.any
    82e8:	ldrb	w0, [x22, #8]
    82ec:	cmp	w0, #0x10
    82f0:	b.ne	83f0 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x2f0>  // b.any
    82f4:	ldr	x0, [x22, #24]
    82f8:	ldrb	w0, [x0, #8]
    82fc:	cmp	w0, #0x2
    8300:	b.eq	8368 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x268>  // b.none
    8304:	cmp	w0, #0x3
    8308:	b.ne	8428 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x328>  // b.any
    830c:	ldp	x3, x0, [sp, #88]
    8310:	mov	x4, x21
    8314:	mov	w2, #0x0                   	// #0
    8318:	mov	x1, #0x0                   	// #0
    831c:	cmp	x0, x3
    8320:	b.eq	8360 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x260>  // b.none
    8324:	nop
    8328:	add	x1, x1, x1, lsl #1
    832c:	add	w2, w2, #0x1
    8330:	ldr	x5, [sp, #136]
    8334:	lsl	x0, x1, #4
    8338:	mov	w1, w2
    833c:	ldr	d0, [x5, x0]
    8340:	fneg	d0, d0
    8344:	str	d0, [x3, x0]
    8348:	ldp	x3, x0, [sp, #88]
    834c:	sub	x0, x0, x3
    8350:	asr	x0, x0, #4
    8354:	mul	x0, x0, x4
    8358:	cmp	x0, w2, uxtw
    835c:	b.hi	8328 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x228>  // b.pmore
    8360:	add	x21, sp, #0xa0
    8364:	b	81a0 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0xa0>
    8368:	ldp	x3, x0, [sp, #88]
    836c:	mov	x4, x21
    8370:	mov	w2, #0x0                   	// #0
    8374:	mov	x1, #0x0                   	// #0
    8378:	cmp	x0, x3
    837c:	b.eq	8360 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x260>  // b.none
    8380:	add	x1, x1, x1, lsl #1
    8384:	add	w2, w2, #0x1
    8388:	ldr	x5, [sp, #136]
    838c:	lsl	x0, x1, #4
    8390:	mov	w1, w2
    8394:	ldr	s0, [x5, x0]
    8398:	fneg	s0, s0
    839c:	str	s0, [x3, x0]
    83a0:	ldp	x3, x0, [sp, #88]
    83a4:	sub	x0, x0, x3
    83a8:	asr	x0, x0, #4
    83ac:	mul	x0, x0, x4
    83b0:	cmp	x0, w2, uxtw
    83b4:	b.hi	8380 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x280>  // b.pmore
    83b8:	add	x21, sp, #0xa0
    83bc:	b	81a0 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0xa0>
    83c0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    83c4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    83c8:	add	x1, x1, #0x0
    83cc:	add	x0, x0, #0x0
    83d0:	mov	w2, #0x5b                  	// #91
    83d4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    83d8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    83dc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    83e0:	add	x1, x1, #0x0
    83e4:	add	x0, x0, #0x0
    83e8:	mov	w2, #0x3a                  	// #58
    83ec:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    83f0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    83f4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    83f8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    83fc:	add	x3, x3, #0x0
    8400:	add	x1, x1, #0x0
    8404:	add	x0, x0, #0x0
    8408:	mov	w2, #0x108                 	// #264
    840c:	bl	0 <__assert_fail>
    8410:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8414:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8418:	add	x1, x1, #0x0
    841c:	add	x0, x0, #0x0
    8420:	mov	w2, #0x4a                  	// #74
    8424:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    8428:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    842c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8430:	add	x1, x1, #0x0
    8434:	add	x0, x0, #0x0
    8438:	mov	w2, #0x54                  	// #84
    843c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000008440 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE>:
    8440:	stp	x29, x30, [sp, #-384]!
    8444:	mov	x29, sp
    8448:	stp	x19, x20, [sp, #16]
    844c:	mov	x20, x1
    8450:	mov	x19, x0
    8454:	stp	x21, x22, [sp, #32]
    8458:	ldur	x1, [x1, #-48]
    845c:	stp	x23, x24, [sp, #48]
    8460:	add	x23, sp, #0x90
    8464:	ldr	x21, [x0, #704]
    8468:	mov	x8, x23
    846c:	stp	x25, x26, [sp, #64]
    8470:	add	x24, sp, #0xc0
    8474:	sub	x21, x21, #0x80
    8478:	mov	x2, x21
    847c:	ldr	x25, [x1]
    8480:	str	x27, [sp, #80]
    8484:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8488:	ldur	x1, [x20, #-24]
    848c:	mov	x0, x19
    8490:	mov	x2, x21
    8494:	mov	x8, x24
    8498:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    849c:	stp	xzr, xzr, [sp, #96]
    84a0:	ldrh	w0, [x20, #18]
    84a4:	mov	w1, #0x1                   	// #1
    84a8:	str	w1, [sp, #112]
    84ac:	stp	xzr, xzr, [sp, #120]
    84b0:	and	w0, w0, #0xffff7fff
    84b4:	cmp	w0, #0x25
    84b8:	str	xzr, [sp, #136]
    84bc:	b.eq	86a0 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x260>  // b.none
    84c0:	b.hi	85ac <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x16c>  // b.pmore
    84c4:	cmp	w0, #0x22
    84c8:	b.eq	86e0 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x2a0>  // b.none
    84cc:	b.ls	8600 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x1c0>  // b.plast
    84d0:	cmp	w0, #0x23
    84d4:	b.eq	8720 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x2e0>  // b.none
    84d8:	cmp	w0, #0x24
    84dc:	b.ne	8820 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x3e0>  // b.any
    84e0:	add	x26, sp, #0xf0
    84e4:	mov	x1, x23
    84e8:	mov	x0, x26
    84ec:	add	x27, sp, #0x120
    84f0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    84f4:	add	x19, sp, #0x150
    84f8:	mov	x0, x27
    84fc:	mov	x1, x24
    8500:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8504:	add	x22, sp, #0x60
    8508:	mov	x2, x25
    850c:	mov	x8, x19
    8510:	mov	x1, x27
    8514:	mov	x0, x26
    8518:	bl	e78 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    851c:	ldr	x2, [sp, #336]
    8520:	add	x1, x19, #0x8
    8524:	add	x0, x22, #0x8
    8528:	str	x2, [sp, #96]
    852c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8530:	add	x1, x19, #0x18
    8534:	add	x0, x22, #0x18
    8538:	bl	5a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    853c:	mov	x0, x19
    8540:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8544:	mov	x0, x27
    8548:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    854c:	mov	x0, x26
    8550:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8554:	mov	x1, x22
    8558:	mov	x0, x19
    855c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8560:	mov	x2, x21
    8564:	mov	x1, x19
    8568:	mov	x0, x20
    856c:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    8570:	mov	x0, x19
    8574:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8578:	mov	x0, x22
    857c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8580:	mov	x0, x24
    8584:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8588:	mov	x0, x23
    858c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8590:	ldp	x19, x20, [sp, #16]
    8594:	ldp	x21, x22, [sp, #32]
    8598:	ldp	x23, x24, [sp, #48]
    859c:	ldp	x25, x26, [sp, #64]
    85a0:	ldr	x27, [sp, #80]
    85a4:	ldp	x29, x30, [sp], #384
    85a8:	ret
    85ac:	cmp	w0, #0x28
    85b0:	b.eq	8760 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x320>  // b.none
    85b4:	b.ls	8650 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x210>  // b.plast
    85b8:	cmp	w0, #0x29
    85bc:	b.ne	8820 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x3e0>  // b.any
    85c0:	add	x26, sp, #0xf0
    85c4:	mov	x1, x23
    85c8:	mov	x0, x26
    85cc:	add	x27, sp, #0x120
    85d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    85d4:	add	x19, sp, #0x150
    85d8:	mov	x0, x27
    85dc:	mov	x1, x24
    85e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    85e4:	add	x22, sp, #0x60
    85e8:	mov	x2, x25
    85ec:	mov	x8, x19
    85f0:	mov	x1, x27
    85f4:	mov	x0, x26
    85f8:	bl	1918 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE>
    85fc:	b	851c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    8600:	cmp	w0, #0x20
    8604:	b.eq	87a0 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x360>  // b.none
    8608:	cmp	w0, #0x21
    860c:	b.ne	8820 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x3e0>  // b.any
    8610:	add	x26, sp, #0xf0
    8614:	mov	x1, x23
    8618:	mov	x0, x26
    861c:	add	x27, sp, #0x120
    8620:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8624:	add	x19, sp, #0x150
    8628:	mov	x0, x27
    862c:	mov	x1, x24
    8630:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8634:	add	x22, sp, #0x60
    8638:	mov	x2, x25
    863c:	mov	x8, x19
    8640:	mov	x1, x27
    8644:	mov	x0, x26
    8648:	bl	bd0 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE>
    864c:	b	851c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    8650:	cmp	w0, #0x26
    8654:	b.eq	87e0 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x3a0>  // b.none
    8658:	cmp	w0, #0x27
    865c:	b.ne	8820 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x3e0>  // b.any
    8660:	add	x26, sp, #0xf0
    8664:	mov	x1, x23
    8668:	mov	x0, x26
    866c:	add	x27, sp, #0x120
    8670:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8674:	add	x19, sp, #0x150
    8678:	mov	x0, x27
    867c:	mov	x1, x24
    8680:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8684:	add	x22, sp, #0x60
    8688:	mov	x2, x25
    868c:	mov	x8, x19
    8690:	mov	x1, x27
    8694:	mov	x0, x26
    8698:	bl	1d60 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE>
    869c:	b	851c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    86a0:	add	x26, sp, #0xf0
    86a4:	mov	x1, x23
    86a8:	mov	x0, x26
    86ac:	add	x27, sp, #0x120
    86b0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    86b4:	add	x19, sp, #0x150
    86b8:	mov	x0, x27
    86bc:	mov	x1, x24
    86c0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    86c4:	add	x22, sp, #0x60
    86c8:	mov	x2, x25
    86cc:	mov	x8, x19
    86d0:	mov	x1, x27
    86d4:	mov	x0, x26
    86d8:	bl	16f8 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    86dc:	b	851c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    86e0:	add	x26, sp, #0xf0
    86e4:	mov	x1, x23
    86e8:	mov	x0, x26
    86ec:	add	x27, sp, #0x120
    86f0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    86f4:	add	x19, sp, #0x150
    86f8:	mov	x0, x27
    86fc:	mov	x1, x24
    8700:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8704:	add	x22, sp, #0x60
    8708:	mov	x2, x25
    870c:	mov	x8, x19
    8710:	mov	x1, x27
    8714:	mov	x0, x26
    8718:	bl	12b8 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    871c:	b	851c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    8720:	add	x26, sp, #0xf0
    8724:	mov	x1, x23
    8728:	mov	x0, x26
    872c:	add	x27, sp, #0x120
    8730:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8734:	add	x19, sp, #0x150
    8738:	mov	x0, x27
    873c:	mov	x1, x24
    8740:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8744:	add	x22, sp, #0x60
    8748:	mov	x2, x25
    874c:	mov	x8, x19
    8750:	mov	x1, x27
    8754:	mov	x0, x26
    8758:	bl	1b38 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    875c:	b	851c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    8760:	add	x26, sp, #0xf0
    8764:	mov	x1, x23
    8768:	mov	x0, x26
    876c:	add	x27, sp, #0x120
    8770:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8774:	add	x19, sp, #0x150
    8778:	mov	x0, x27
    877c:	mov	x1, x24
    8780:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8784:	add	x22, sp, #0x60
    8788:	mov	x2, x25
    878c:	mov	x8, x19
    8790:	mov	x1, x27
    8794:	mov	x0, x26
    8798:	bl	1098 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE>
    879c:	b	851c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    87a0:	add	x26, sp, #0xf0
    87a4:	mov	x1, x23
    87a8:	mov	x0, x26
    87ac:	add	x27, sp, #0x120
    87b0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    87b4:	add	x19, sp, #0x150
    87b8:	mov	x0, x27
    87bc:	mov	x1, x24
    87c0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    87c4:	add	x22, sp, #0x60
    87c8:	mov	x2, x25
    87cc:	mov	x8, x19
    87d0:	mov	x1, x27
    87d4:	mov	x0, x26
    87d8:	bl	930 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>
    87dc:	b	851c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    87e0:	add	x26, sp, #0xf0
    87e4:	mov	x1, x23
    87e8:	mov	x0, x26
    87ec:	add	x27, sp, #0x120
    87f0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    87f4:	add	x19, sp, #0x150
    87f8:	mov	x0, x27
    87fc:	mov	x1, x24
    8800:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8804:	add	x22, sp, #0x60
    8808:	mov	x2, x25
    880c:	mov	x8, x19
    8810:	mov	x1, x27
    8814:	mov	x0, x26
    8818:	bl	14d8 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE>
    881c:	b	851c <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0xdc>
    8820:	bl	0 <_ZN4llvm4dbgsEv>
    8824:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8828:	add	x1, x1, #0x0
    882c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8830:	mov	x1, x0
    8834:	mov	w2, #0x0                   	// #0
    8838:	mov	x0, x20
    883c:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    8840:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8844:	mov	w2, #0x15f                 	// #351
    8848:	add	x1, x1, #0x0
    884c:	mov	x0, #0x0                   	// #0
    8850:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    8854:	nop

0000000000008858 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE>:
    8858:	stp	x29, x30, [sp, #-400]!
    885c:	mov	x29, sp
    8860:	stp	x19, x20, [sp, #16]
    8864:	mov	x20, x1
    8868:	mov	x19, x0
    886c:	stp	x21, x22, [sp, #32]
    8870:	ldur	x1, [x1, #-48]
    8874:	stp	x25, x26, [sp, #64]
    8878:	add	x26, sp, #0xa0
    887c:	ldr	x21, [x0, #704]
    8880:	mov	x8, x26
    8884:	stp	x23, x24, [sp, #48]
    8888:	add	x23, sp, #0xd0
    888c:	sub	x21, x21, #0x80
    8890:	mov	x2, x21
    8894:	mov	w24, #0x1                   	// #1
    8898:	ldr	x25, [x1]
    889c:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    88a0:	ldur	x1, [x20, #-24]
    88a4:	mov	x0, x19
    88a8:	mov	x2, x21
    88ac:	mov	x8, x23
    88b0:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    88b4:	stp	xzr, xzr, [sp, #112]
    88b8:	ldrh	w0, [x20, #18]
    88bc:	str	w24, [sp, #128]
    88c0:	stp	xzr, xzr, [sp, #136]
    88c4:	and	w0, w0, #0xffff7fff
    88c8:	cmp	w0, #0x8
    88cc:	str	xzr, [sp, #152]
    88d0:	b.eq	8c30 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x3d8>  // b.none
    88d4:	b.hi	89c8 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x170>  // b.pmore
    88d8:	cmp	w0, #0x4
    88dc:	b.eq	8c74 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x41c>  // b.none
    88e0:	b.hi	8ab4 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x25c>  // b.pmore
    88e4:	cmp	w0, #0x2
    88e8:	b.eq	8cb8 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x460>  // b.none
    88ec:	stp	x27, x28, [sp, #80]
    88f0:	b.ls	8a68 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x210>  // b.plast
    88f4:	cmp	w0, #0x3
    88f8:	b.ne	8e70 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x618>  // b.any
    88fc:	add	x24, sp, #0x100
    8900:	mov	x1, x26
    8904:	mov	x0, x24
    8908:	add	x27, sp, #0x130
    890c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8910:	add	x19, sp, #0x160
    8914:	mov	x0, x27
    8918:	mov	x1, x23
    891c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8920:	add	x22, sp, #0x70
    8924:	mov	x2, x25
    8928:	mov	x8, x19
    892c:	mov	x1, x27
    8930:	mov	x0, x24
    8934:	bl	4f98 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    8938:	ldr	x2, [sp, #352]
    893c:	add	x1, x19, #0x8
    8940:	add	x0, x22, #0x8
    8944:	str	x2, [sp, #112]
    8948:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    894c:	add	x1, x19, #0x18
    8950:	add	x0, x22, #0x18
    8954:	bl	5a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    8958:	mov	x0, x19
    895c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8960:	mov	x0, x27
    8964:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8968:	mov	x0, x24
    896c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8970:	ldp	x27, x28, [sp, #80]
    8974:	mov	x1, x22
    8978:	mov	x0, x19
    897c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8980:	mov	x2, x21
    8984:	mov	x1, x19
    8988:	mov	x0, x20
    898c:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    8990:	mov	x0, x19
    8994:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8998:	mov	x0, x22
    899c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    89a0:	mov	x0, x23
    89a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    89a8:	mov	x0, x26
    89ac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    89b0:	ldp	x19, x20, [sp, #16]
    89b4:	ldp	x21, x22, [sp, #32]
    89b8:	ldp	x23, x24, [sp, #48]
    89bc:	ldp	x25, x26, [sp, #64]
    89c0:	ldp	x29, x30, [sp], #400
    89c4:	ret
    89c8:	stp	x27, x28, [sp, #80]
    89cc:	cmp	w0, #0xc
    89d0:	b.eq	8d2c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x4d4>  // b.none
    89d4:	b.ls	8b50 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x2f8>  // b.plast
    89d8:	cmp	w0, #0xe
    89dc:	b.eq	8d6c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x514>  // b.none
    89e0:	cmp	w0, #0xf
    89e4:	b.ne	8b08 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x2b0>  // b.any
    89e8:	add	x27, sp, #0x100
    89ec:	add	x28, sp, #0x130
    89f0:	mov	x0, x27
    89f4:	mov	x1, x26
    89f8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    89fc:	add	x19, sp, #0x160
    8a00:	mov	x0, x28
    8a04:	mov	x1, x23
    8a08:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8a0c:	add	x22, sp, #0x70
    8a10:	mov	w3, w24
    8a14:	mov	x8, x19
    8a18:	mov	x1, x28
    8a1c:	mov	x0, x27
    8a20:	mov	x2, x25
    8a24:	bl	5768 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>
    8a28:	ldr	x2, [sp, #352]
    8a2c:	add	x1, x19, #0x8
    8a30:	add	x0, x22, #0x8
    8a34:	str	x2, [sp, #112]
    8a38:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8a3c:	add	x1, x19, #0x18
    8a40:	add	x0, x22, #0x18
    8a44:	bl	5a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    8a48:	mov	x0, x19
    8a4c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8a50:	mov	x0, x28
    8a54:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8a58:	mov	x0, x27
    8a5c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8a60:	ldp	x27, x28, [sp, #80]
    8a64:	b	8974 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x11c>
    8a68:	cbz	w0, 8dac <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x554>
    8a6c:	cmp	w0, w24
    8a70:	b.ne	8e70 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x618>  // b.any
    8a74:	add	x24, sp, #0x100
    8a78:	mov	x1, x26
    8a7c:	mov	x0, x24
    8a80:	add	x27, sp, #0x130
    8a84:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8a88:	add	x19, sp, #0x160
    8a8c:	mov	x0, x27
    8a90:	mov	x1, x23
    8a94:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8a98:	add	x22, sp, #0x70
    8a9c:	mov	x2, x25
    8aa0:	mov	x8, x19
    8aa4:	mov	x1, x27
    8aa8:	mov	x0, x24
    8aac:	bl	2508 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    8ab0:	b	8938 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    8ab4:	stp	x27, x28, [sp, #80]
    8ab8:	cmp	w0, #0x6
    8abc:	b.eq	8df0 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x598>  // b.none
    8ac0:	cmp	w0, #0x7
    8ac4:	b.ne	8ba0 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x348>  // b.any
    8ac8:	add	x24, sp, #0x100
    8acc:	mov	x1, x26
    8ad0:	mov	x0, x24
    8ad4:	add	x27, sp, #0x130
    8ad8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8adc:	add	x19, sp, #0x160
    8ae0:	mov	x0, x27
    8ae4:	mov	x1, x23
    8ae8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8aec:	add	x22, sp, #0x70
    8af0:	mov	x2, x25
    8af4:	mov	x8, x19
    8af8:	mov	x1, x27
    8afc:	mov	x0, x24
    8b00:	bl	1f88 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE>
    8b04:	b	8938 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    8b08:	cmp	w0, #0xd
    8b0c:	b.ne	8e70 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x618>  // b.any
    8b10:	add	x24, sp, #0x100
    8b14:	mov	x1, x26
    8b18:	mov	x0, x24
    8b1c:	add	x27, sp, #0x130
    8b20:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8b24:	add	x19, sp, #0x160
    8b28:	mov	x0, x27
    8b2c:	mov	x1, x23
    8b30:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8b34:	add	x22, sp, #0x70
    8b38:	mov	x2, x25
    8b3c:	mov	x8, x19
    8b40:	mov	x1, x27
    8b44:	mov	x0, x24
    8b48:	bl	4a88 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    8b4c:	b	8938 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    8b50:	cmp	w0, #0xa
    8b54:	b.eq	8e30 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x5d8>  // b.none
    8b58:	cmp	w0, #0xb
    8b5c:	b.ne	8be8 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x390>  // b.any
    8b60:	add	x24, sp, #0x100
    8b64:	mov	x1, x26
    8b68:	mov	x0, x24
    8b6c:	add	x27, sp, #0x130
    8b70:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8b74:	add	x19, sp, #0x160
    8b78:	mov	x0, x27
    8b7c:	mov	x1, x23
    8b80:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8b84:	add	x22, sp, #0x70
    8b88:	mov	x2, x25
    8b8c:	mov	x8, x19
    8b90:	mov	x1, x27
    8b94:	mov	x0, x24
    8b98:	bl	5258 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    8b9c:	b	8938 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    8ba0:	cmp	w0, #0x5
    8ba4:	b.ne	8e70 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x618>  // b.any
    8ba8:	add	x24, sp, #0x100
    8bac:	mov	x1, x26
    8bb0:	mov	x0, x24
    8bb4:	add	x27, sp, #0x130
    8bb8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8bbc:	add	x19, sp, #0x160
    8bc0:	mov	x0, x27
    8bc4:	mov	x1, x23
    8bc8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8bcc:	add	x22, sp, #0x70
    8bd0:	mov	x2, x25
    8bd4:	mov	x8, x19
    8bd8:	mov	x1, x27
    8bdc:	mov	x0, x24
    8be0:	bl	47c8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    8be4:	b	8938 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    8be8:	cmp	w0, #0x9
    8bec:	b.ne	8e70 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x618>  // b.any
    8bf0:	add	x24, sp, #0x100
    8bf4:	mov	x1, x26
    8bf8:	mov	x0, x24
    8bfc:	add	x27, sp, #0x130
    8c00:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8c04:	add	x19, sp, #0x160
    8c08:	mov	x0, x27
    8c0c:	mov	x1, x23
    8c10:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8c14:	add	x22, sp, #0x70
    8c18:	mov	x2, x25
    8c1c:	mov	x8, x19
    8c20:	mov	x1, x27
    8c24:	mov	x0, x24
    8c28:	bl	27c8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE>
    8c2c:	b	8938 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    8c30:	add	x24, sp, #0x100
    8c34:	mov	x1, x26
    8c38:	mov	x0, x24
    8c3c:	stp	x27, x28, [sp, #80]
    8c40:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8c44:	add	x27, sp, #0x130
    8c48:	mov	x1, x23
    8c4c:	mov	x0, x27
    8c50:	add	x19, sp, #0x160
    8c54:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8c58:	add	x22, sp, #0x70
    8c5c:	mov	x2, x25
    8c60:	mov	x8, x19
    8c64:	mov	x1, x27
    8c68:	mov	x0, x24
    8c6c:	bl	2248 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE>
    8c70:	b	8938 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    8c74:	add	x24, sp, #0x100
    8c78:	mov	x1, x26
    8c7c:	mov	x0, x24
    8c80:	stp	x27, x28, [sp, #80]
    8c84:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8c88:	add	x27, sp, #0x130
    8c8c:	mov	x1, x23
    8c90:	mov	x0, x27
    8c94:	add	x19, sp, #0x160
    8c98:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8c9c:	add	x22, sp, #0x70
    8ca0:	mov	x2, x25
    8ca4:	mov	x8, x19
    8ca8:	mov	x1, x27
    8cac:	mov	x0, x24
    8cb0:	bl	3828 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    8cb4:	b	8938 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    8cb8:	add	x0, sp, #0x100
    8cbc:	mov	x1, x26
    8cc0:	str	x0, [sp, #96]
    8cc4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8cc8:	add	x0, sp, #0x130
    8ccc:	mov	x1, x23
    8cd0:	str	x0, [sp, #104]
    8cd4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8cd8:	ldp	x0, x1, [sp, #96]
    8cdc:	add	x19, sp, #0x160
    8ce0:	mov	x8, x19
    8ce4:	mov	x2, x25
    8ce8:	add	x22, sp, #0x70
    8cec:	bl	3ff8 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    8cf0:	ldr	x2, [sp, #352]
    8cf4:	add	x1, x19, #0x8
    8cf8:	add	x0, x22, #0x8
    8cfc:	str	x2, [sp, #112]
    8d00:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8d04:	add	x1, x19, #0x18
    8d08:	add	x0, x22, #0x18
    8d0c:	bl	5a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE.isra.0>
    8d10:	mov	x0, x19
    8d14:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8d18:	ldr	x0, [sp, #104]
    8d1c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8d20:	ldr	x0, [sp, #96]
    8d24:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8d28:	b	8974 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x11c>
    8d2c:	add	x24, sp, #0x100
    8d30:	mov	x1, x26
    8d34:	mov	x0, x24
    8d38:	add	x27, sp, #0x130
    8d3c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8d40:	add	x19, sp, #0x160
    8d44:	mov	x0, x27
    8d48:	mov	x1, x23
    8d4c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8d50:	add	x22, sp, #0x70
    8d54:	mov	x2, x25
    8d58:	mov	x8, x19
    8d5c:	mov	x1, x27
    8d60:	mov	x0, x24
    8d64:	bl	3ae8 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    8d68:	b	8938 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    8d6c:	add	x24, sp, #0x100
    8d70:	mov	x1, x26
    8d74:	mov	x0, x24
    8d78:	add	x27, sp, #0x130
    8d7c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8d80:	add	x19, sp, #0x160
    8d84:	mov	x0, x27
    8d88:	mov	x1, x23
    8d8c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8d90:	add	x22, sp, #0x70
    8d94:	mov	x2, x25
    8d98:	mov	x8, x19
    8d9c:	mov	x1, x27
    8da0:	mov	x0, x24
    8da4:	bl	3318 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE>
    8da8:	b	8938 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    8dac:	add	x24, sp, #0x100
    8db0:	mov	x1, x26
    8db4:	mov	x0, x24
    8db8:	add	x27, sp, #0x130
    8dbc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8dc0:	add	x19, sp, #0x160
    8dc4:	mov	x0, x27
    8dc8:	mov	x1, x23
    8dcc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8dd0:	add	x22, sp, #0x70
    8dd4:	mov	x2, x25
    8dd8:	mov	x8, x19
    8ddc:	mov	x1, x27
    8de0:	mov	x0, x24
    8de4:	mov	w3, #0x0                   	// #0
    8de8:	bl	5768 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>
    8dec:	b	8938 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    8df0:	add	x24, sp, #0x100
    8df4:	mov	x1, x26
    8df8:	mov	x0, x24
    8dfc:	add	x27, sp, #0x130
    8e00:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8e04:	add	x19, sp, #0x160
    8e08:	mov	x0, x27
    8e0c:	mov	x1, x23
    8e10:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8e14:	add	x22, sp, #0x70
    8e18:	mov	x2, x25
    8e1c:	mov	x8, x19
    8e20:	mov	x1, x27
    8e24:	mov	x0, x24
    8e28:	bl	2cd8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    8e2c:	b	8938 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    8e30:	add	x24, sp, #0x100
    8e34:	mov	x1, x26
    8e38:	mov	x0, x24
    8e3c:	add	x27, sp, #0x130
    8e40:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8e44:	add	x19, sp, #0x160
    8e48:	mov	x0, x27
    8e4c:	mov	x1, x23
    8e50:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8e54:	add	x22, sp, #0x70
    8e58:	mov	x2, x25
    8e5c:	mov	x8, x19
    8e60:	mov	x1, x27
    8e64:	mov	x0, x24
    8e68:	bl	42b8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    8e6c:	b	8938 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0xe0>
    8e70:	bl	0 <_ZN4llvm4dbgsEv>
    8e74:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8e78:	add	x1, x1, #0x0
    8e7c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8e80:	mov	x1, x0
    8e84:	mov	w2, #0x0                   	// #0
    8e88:	mov	x0, x20
    8e8c:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    8e90:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8e94:	mov	w2, #0x2a1                 	// #673
    8e98:	add	x1, x1, #0x0
    8e9c:	mov	x0, #0x0                   	// #0
    8ea0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    8ea4:	nop

0000000000008ea8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>:
    8ea8:	stp	x29, x30, [sp, #-368]!
    8eac:	mov	x29, sp
    8eb0:	stp	x19, x20, [sp, #16]
    8eb4:	mov	x20, x1
    8eb8:	mov	x19, x0
    8ebc:	stp	x21, x22, [sp, #32]
    8ec0:	add	x22, sp, #0xe0
    8ec4:	ldur	x1, [x1, #-48]
    8ec8:	stp	x23, x24, [sp, #48]
    8ecc:	add	x23, sp, #0xb0
    8ed0:	ldr	x21, [x0, #704]
    8ed4:	mov	x8, x23
    8ed8:	stp	x25, x26, [sp, #64]
    8edc:	sub	x21, x21, #0x80
    8ee0:	mov	x2, x21
    8ee4:	ldr	x24, [x1]
    8ee8:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8eec:	ldur	x1, [x20, #-24]
    8ef0:	mov	x0, x19
    8ef4:	mov	x2, x21
    8ef8:	mov	x8, x22
    8efc:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8f00:	ldrb	w1, [x24, #8]
    8f04:	mov	w0, #0x1                   	// #1
    8f08:	stp	xzr, xzr, [sp, #128]
    8f0c:	cmp	w1, #0x10
    8f10:	str	w0, [sp, #144]
    8f14:	stp	xzr, xzr, [sp, #152]
    8f18:	str	xzr, [sp, #168]
    8f1c:	b.eq	91ec <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x344>  // b.none
    8f20:	ldrb	w0, [x20, #16]
    8f24:	sub	w0, w0, #0x18
    8f28:	cmp	w0, #0x14
    8f2c:	b.eq	9c3c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd94>  // b.none
    8f30:	b.hi	8fe0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x138>  // b.pmore
    8f34:	cmp	w0, #0x10
    8f38:	b.eq	9ca8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe00>  // b.none
    8f3c:	b.ls	9034 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x18c>  // b.plast
    8f40:	cmp	w0, #0x12
    8f44:	b.eq	99b4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb0c>  // b.none
    8f48:	cmp	w0, #0x13
    8f4c:	b.ne	9174 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x2cc>  // b.any
    8f50:	add	x19, sp, #0x140
    8f54:	add	x1, x22, #0x8
    8f58:	mov	x8, x19
    8f5c:	add	x0, x23, #0x8
    8f60:	add	x25, sp, #0x80
    8f64:	bl	0 <_ZNK4llvm5APInt4udivERKS0_>
    8f68:	mov	x1, x19
    8f6c:	add	x0, x25, #0x8
    8f70:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8f74:	ldr	w0, [sp, #328]
    8f78:	cmp	w0, #0x40
    8f7c:	b.ls	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>  // b.plast
    8f80:	ldr	x0, [sp, #320]
    8f84:	cbz	x0, 8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    8f88:	bl	0 <_ZdaPv>
    8f8c:	mov	x1, x25
    8f90:	mov	x0, x19
    8f94:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8f98:	mov	x2, x21
    8f9c:	mov	x1, x19
    8fa0:	mov	x0, x20
    8fa4:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    8fa8:	mov	x0, x19
    8fac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8fb0:	mov	x0, x25
    8fb4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8fb8:	mov	x0, x22
    8fbc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8fc0:	mov	x0, x23
    8fc4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    8fc8:	ldp	x19, x20, [sp, #16]
    8fcc:	ldp	x21, x22, [sp, #32]
    8fd0:	ldp	x23, x24, [sp, #48]
    8fd4:	ldp	x25, x26, [sp, #64]
    8fd8:	ldp	x29, x30, [sp], #368
    8fdc:	ret
    8fe0:	cmp	w0, #0x18
    8fe4:	b.eq	9c58 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xdb0>  // b.none
    8fe8:	b.ls	90d0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x228>  // b.plast
    8fec:	cmp	w0, #0x1d
    8ff0:	b.eq	99f8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb50>  // b.none
    8ff4:	cmp	w0, #0x1e
    8ff8:	b.ne	90fc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x254>  // b.any
    8ffc:	ldr	w2, [sp, #192]
    9000:	str	w2, [sp, #280]
    9004:	cmp	w2, #0x40
    9008:	b.hi	9b04 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc5c>  // b.pmore
    900c:	ldr	x0, [sp, #184]
    9010:	str	x0, [sp, #272]
    9014:	ldr	w0, [sp, #240]
    9018:	cmp	w0, w2
    901c:	b.ne	a3fc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1554>  // b.any
    9020:	ldr	x0, [sp, #232]
    9024:	ldr	x3, [sp, #272]
    9028:	eor	x3, x3, x0
    902c:	str	x3, [sp, #272]
    9030:	b	9a2c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb84>
    9034:	stp	x27, x28, [sp, #80]
    9038:	cmp	w0, #0xe
    903c:	b.eq	995c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xab4>  // b.none
    9040:	cmp	w0, #0xf
    9044:	b.ne	913c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x294>  // b.any
    9048:	ldr	w0, [sp, #192]
    904c:	str	w0, [sp, #280]
    9050:	cmp	w0, #0x40
    9054:	b.hi	9a94 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xbec>  // b.pmore
    9058:	add	x27, sp, #0x110
    905c:	ldr	x0, [sp, #184]
    9060:	str	x0, [sp, #272]
    9064:	mov	x0, x27
    9068:	add	x1, x22, #0x8
    906c:	add	x19, sp, #0x140
    9070:	bl	0 <_ZN4llvm5APIntmIERKS0_>
    9074:	ldr	w2, [sp, #280]
    9078:	add	x25, sp, #0x80
    907c:	ldr	x3, [sp, #272]
    9080:	mov	x1, x19
    9084:	add	x0, x25, #0x8
    9088:	str	wzr, [sp, #280]
    908c:	str	x3, [sp, #320]
    9090:	str	w2, [sp, #328]
    9094:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9098:	ldr	w0, [sp, #328]
    909c:	cmp	w0, #0x40
    90a0:	b.ls	90b0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x208>  // b.plast
    90a4:	ldr	x0, [sp, #320]
    90a8:	cbz	x0, 90b0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x208>
    90ac:	bl	0 <_ZdaPv>
    90b0:	ldr	w0, [sp, #280]
    90b4:	cmp	w0, #0x40
    90b8:	b.ls	92e0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>  // b.plast
    90bc:	ldr	x0, [sp, #272]
    90c0:	cbz	x0, 92e0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>
    90c4:	bl	0 <_ZdaPv>
    90c8:	ldp	x27, x28, [sp, #80]
    90cc:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    90d0:	cmp	w0, #0x16
    90d4:	b.eq	9940 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa98>  // b.none
    90d8:	cmp	w0, #0x17
    90dc:	b.ne	9198 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x2f0>  // b.any
    90e0:	add	x19, sp, #0x140
    90e4:	add	x1, x22, #0x8
    90e8:	mov	x8, x19
    90ec:	add	x0, x23, #0x8
    90f0:	add	x25, sp, #0x80
    90f4:	bl	0 <_ZNK4llvm5APInt4sremERKS0_>
    90f8:	b	8f68 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc0>
    90fc:	cmp	w0, #0x1c
    9100:	b.ne	a320 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1478>  // b.any
    9104:	ldr	w2, [sp, #192]
    9108:	str	w2, [sp, #280]
    910c:	cmp	w2, #0x40
    9110:	b.hi	9abc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc14>  // b.pmore
    9114:	ldr	x0, [sp, #184]
    9118:	str	x0, [sp, #272]
    911c:	ldr	w0, [sp, #240]
    9120:	cmp	w0, w2
    9124:	b.ne	a3d8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1530>  // b.any
    9128:	ldr	x0, [sp, #232]
    912c:	ldr	x3, [sp, #272]
    9130:	and	x3, x3, x0
    9134:	str	x3, [sp, #272]
    9138:	b	9a2c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb84>
    913c:	cmp	w0, #0xd
    9140:	b.ne	a324 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x147c>  // b.any
    9144:	ldr	w0, [sp, #192]
    9148:	str	w0, [sp, #280]
    914c:	cmp	w0, #0x40
    9150:	b.hi	9aa8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc00>  // b.pmore
    9154:	add	x27, sp, #0x110
    9158:	ldr	x0, [sp, #184]
    915c:	str	x0, [sp, #272]
    9160:	mov	x0, x27
    9164:	add	x1, x22, #0x8
    9168:	add	x19, sp, #0x140
    916c:	bl	0 <_ZN4llvm5APIntpLERKS0_>
    9170:	b	9074 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1cc>
    9174:	cmp	w0, #0x11
    9178:	b.ne	a320 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1478>  // b.any
    917c:	add	x19, sp, #0x140
    9180:	add	x1, x22, #0x8
    9184:	mov	x8, x19
    9188:	add	x0, x23, #0x8
    918c:	add	x25, sp, #0x80
    9190:	bl	0 <_ZNK4llvm5APIntmlERKS0_>
    9194:	b	8f68 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc0>
    9198:	stp	x27, x28, [sp, #80]
    919c:	cmp	w0, #0x15
    91a0:	b.ne	a324 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x147c>  // b.any
    91a4:	add	x27, sp, #0x110
    91a8:	mov	x1, x23
    91ac:	mov	x0, x27
    91b0:	add	x19, sp, #0x140
    91b4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    91b8:	mov	x0, x19
    91bc:	mov	x1, x22
    91c0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    91c4:	ldrb	w0, [x24, #8]
    91c8:	cmp	w0, #0x2
    91cc:	b.eq	9a80 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xbd8>  // b.none
    91d0:	cmp	w0, #0x3
    91d4:	b.ne	a420 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1578>  // b.any
    91d8:	ldr	d0, [sp, #272]
    91dc:	ldr	d1, [sp, #320]
    91e0:	fdiv	d0, d0, d1
    91e4:	str	d0, [sp, #128]
    91e8:	b	9998 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    91ec:	ldp	x1, x0, [sp, #200]
    91f0:	mov	x19, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    91f4:	ldp	x3, x2, [sp, #248]
    91f8:	movk	x19, #0xaaab
    91fc:	sub	x0, x0, x1
    9200:	asr	x1, x0, #4
    9204:	sub	x2, x2, x3
    9208:	cmp	x2, x0
    920c:	mul	x1, x1, x19
    9210:	b.ne	a3b4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x150c>  // b.any
    9214:	add	x25, sp, #0x80
    9218:	add	x0, x25, #0x18
    921c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9220:	ldrb	w0, [x20, #16]
    9224:	sub	w0, w0, #0x18
    9228:	cmp	w0, #0x14
    922c:	b.eq	9fb0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1108>  // b.none
    9230:	b.hi	92e8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x440>  // b.pmore
    9234:	cmp	w0, #0x10
    9238:	b.eq	a048 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x11a0>  // b.none
    923c:	b.ls	96b8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x810>  // b.plast
    9240:	cmp	w0, #0x12
    9244:	b.eq	a0c8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1220>  // b.none
    9248:	stp	x27, x28, [sp, #80]
    924c:	cmp	w0, #0x13
    9250:	b.ne	9618 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x770>  // b.any
    9254:	ldp	x27, x0, [sp, #152]
    9258:	cmp	x0, x27
    925c:	b.eq	9c30 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd88>  // b.none
    9260:	mov	x24, x19
    9264:	add	x19, sp, #0x140
    9268:	mov	w28, #0x0                   	// #0
    926c:	mov	x26, #0x0                   	// #0
    9270:	add	x26, x26, x26, lsl #1
    9274:	mov	x8, x19
    9278:	ldr	x0, [sp, #200]
    927c:	lsl	x26, x26, #4
    9280:	ldr	x1, [sp, #248]
    9284:	add	x0, x0, x26
    9288:	add	x0, x0, #0x8
    928c:	add	x1, x1, x26
    9290:	add	x1, x1, #0x8
    9294:	bl	0 <_ZNK4llvm5APInt4udivERKS0_>
    9298:	add	x0, x27, x26
    929c:	mov	x1, x19
    92a0:	add	x0, x0, #0x8
    92a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    92a8:	ldr	w0, [sp, #328]
    92ac:	cmp	w0, #0x40
    92b0:	b.ls	92c0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x418>  // b.plast
    92b4:	ldr	x0, [sp, #320]
    92b8:	cbz	x0, 92c0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x418>
    92bc:	bl	0 <_ZdaPv>
    92c0:	ldp	x27, x0, [sp, #152]
    92c4:	add	w26, w28, #0x1
    92c8:	mov	x28, x26
    92cc:	sub	x0, x0, x27
    92d0:	asr	x0, x0, #4
    92d4:	mul	x0, x0, x24
    92d8:	cmp	x0, w26, uxtw
    92dc:	b.hi	9270 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x3c8>  // b.pmore
    92e0:	ldp	x27, x28, [sp, #80]
    92e4:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    92e8:	cmp	w0, #0x18
    92ec:	b.eq	9bb0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd08>  // b.none
    92f0:	b.ls	956c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x6c4>  // b.plast
    92f4:	cmp	w0, #0x1d
    92f8:	b.eq	9e80 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xfd8>  // b.none
    92fc:	cmp	w0, #0x1e
    9300:	b.ne	9434 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x58c>  // b.any
    9304:	ldp	x0, x1, [sp, #152]
    9308:	cmp	x0, x1
    930c:	b.eq	9840 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    9310:	mov	w26, #0x0                   	// #0
    9314:	mov	x1, #0x0                   	// #0
    9318:	stp	x27, x28, [sp, #80]
    931c:	add	x28, sp, #0x70
    9320:	add	x27, sp, #0x140
    9324:	str	x19, [sp, #104]
    9328:	b	93c8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x520>
    932c:	ldr	x1, [sp, #248]
    9330:	ldr	x4, [x4, #8]
    9334:	add	x1, x1, x19
    9338:	add	x1, x1, #0x8
    933c:	ldr	w0, [x1, #8]
    9340:	str	x4, [sp, #112]
    9344:	cmp	w0, w3
    9348:	b.ne	a400 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1558>  // b.any
    934c:	ldr	x0, [x1]
    9350:	eor	x4, x4, x0
    9354:	str	x4, [sp, #112]
    9358:	mov	x0, x24
    935c:	mov	x1, x27
    9360:	str	wzr, [sp, #120]
    9364:	mov	x19, x27
    9368:	str	x4, [sp, #320]
    936c:	str	w3, [sp, #328]
    9370:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9374:	ldr	w0, [sp, #328]
    9378:	cmp	w0, #0x40
    937c:	b.ls	938c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4e4>  // b.plast
    9380:	ldr	x0, [sp, #320]
    9384:	cbz	x0, 938c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4e4>
    9388:	bl	0 <_ZdaPv>
    938c:	ldr	w0, [sp, #120]
    9390:	cmp	w0, #0x40
    9394:	b.ls	93a4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4fc>  // b.plast
    9398:	ldr	x0, [sp, #112]
    939c:	cbz	x0, 93a4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4fc>
    93a0:	bl	0 <_ZdaPv>
    93a4:	ldp	x0, x2, [sp, #152]
    93a8:	add	w1, w26, #0x1
    93ac:	ldr	x3, [sp, #104]
    93b0:	mov	x26, x1
    93b4:	sub	x2, x2, x0
    93b8:	asr	x2, x2, #4
    93bc:	mul	x2, x2, x3
    93c0:	cmp	x2, w1, uxtw
    93c4:	b.ls	92e0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>  // b.plast
    93c8:	add	x1, x1, x1, lsl #1
    93cc:	ldr	x4, [sp, #200]
    93d0:	lsl	x19, x1, #4
    93d4:	add	x0, x0, x19
    93d8:	add	x4, x4, x19
    93dc:	add	x24, x0, #0x8
    93e0:	add	x1, x4, #0x8
    93e4:	ldr	w3, [x1, #8]
    93e8:	str	w3, [sp, #120]
    93ec:	cmp	w3, #0x40
    93f0:	b.ls	932c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x484>  // b.plast
    93f4:	mov	x0, x28
    93f8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    93fc:	ldr	x1, [sp, #248]
    9400:	ldr	w3, [sp, #120]
    9404:	add	x1, x1, x19
    9408:	add	x1, x1, #0x8
    940c:	ldr	w0, [x1, #8]
    9410:	cmp	w3, w0
    9414:	b.ne	a400 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1558>  // b.any
    9418:	cmp	w3, #0x40
    941c:	b.ls	a490 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x15e8>  // b.plast
    9420:	mov	x0, x28
    9424:	bl	0 <_ZN4llvm5APInt17XorAssignSlowCaseERKS0_>
    9428:	ldr	w3, [sp, #120]
    942c:	ldr	x4, [sp, #112]
    9430:	b	9358 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4b0>
    9434:	cmp	w0, #0x1c
    9438:	b.ne	a358 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x14b0>  // b.any
    943c:	ldp	x0, x1, [sp, #152]
    9440:	cmp	x0, x1
    9444:	b.eq	9840 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    9448:	add	x26, sp, #0x140
    944c:	mov	w24, #0x0                   	// #0
    9450:	mov	x1, #0x0                   	// #0
    9454:	stp	x27, x28, [sp, #80]
    9458:	add	x28, sp, #0x70
    945c:	b	9500 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x658>
    9460:	ldr	x1, [sp, #248]
    9464:	ldr	x4, [x4, #8]
    9468:	add	x1, x1, x19
    946c:	add	x1, x1, #0x8
    9470:	ldr	w0, [x1, #8]
    9474:	str	x4, [sp, #112]
    9478:	cmp	w0, w3
    947c:	b.ne	a3dc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1534>  // b.any
    9480:	ldr	x0, [x1]
    9484:	and	x4, x4, x0
    9488:	str	x4, [sp, #112]
    948c:	mov	x0, x27
    9490:	mov	x1, x26
    9494:	str	wzr, [sp, #120]
    9498:	mov	x19, x26
    949c:	str	x4, [sp, #320]
    94a0:	str	w3, [sp, #328]
    94a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    94a8:	ldr	w0, [sp, #328]
    94ac:	cmp	w0, #0x40
    94b0:	b.ls	94c0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x618>  // b.plast
    94b4:	ldr	x0, [sp, #320]
    94b8:	cbz	x0, 94c0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x618>
    94bc:	bl	0 <_ZdaPv>
    94c0:	ldr	w0, [sp, #120]
    94c4:	cmp	w0, #0x40
    94c8:	b.ls	94d8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x630>  // b.plast
    94cc:	ldr	x0, [sp, #112]
    94d0:	cbz	x0, 94d8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x630>
    94d4:	bl	0 <_ZdaPv>
    94d8:	ldp	x0, x2, [sp, #152]
    94dc:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    94e0:	movk	x3, #0xaaab
    94e4:	add	w1, w24, #0x1
    94e8:	mov	x24, x1
    94ec:	sub	x2, x2, x0
    94f0:	asr	x2, x2, #4
    94f4:	mul	x2, x2, x3
    94f8:	cmp	x2, w1, uxtw
    94fc:	b.ls	92e0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>  // b.plast
    9500:	add	x1, x1, x1, lsl #1
    9504:	ldr	x4, [sp, #200]
    9508:	lsl	x19, x1, #4
    950c:	add	x0, x0, x19
    9510:	add	x4, x4, x19
    9514:	add	x27, x0, #0x8
    9518:	add	x1, x4, #0x8
    951c:	ldr	w3, [x1, #8]
    9520:	str	w3, [sp, #120]
    9524:	cmp	w3, #0x40
    9528:	b.ls	9460 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x5b8>  // b.plast
    952c:	mov	x0, x28
    9530:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9534:	ldr	x1, [sp, #248]
    9538:	ldr	w3, [sp, #120]
    953c:	add	x1, x1, x19
    9540:	add	x1, x1, #0x8
    9544:	ldr	w0, [x1, #8]
    9548:	cmp	w3, w0
    954c:	b.ne	a3dc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1534>  // b.any
    9550:	cmp	w3, #0x40
    9554:	b.ls	a488 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x15e0>  // b.plast
    9558:	mov	x0, x28
    955c:	bl	0 <_ZN4llvm5APInt17AndAssignSlowCaseERKS0_>
    9560:	ldr	w3, [sp, #120]
    9564:	ldr	x4, [sp, #112]
    9568:	b	948c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x5e4>
    956c:	cmp	w0, #0x16
    9570:	b.eq	9d5c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xeb4>  // b.none
    9574:	cmp	w0, #0x17
    9578:	b.ne	97b8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x910>  // b.any
    957c:	stp	x27, x28, [sp, #80]
    9580:	ldp	x27, x0, [sp, #152]
    9584:	cmp	x27, x0
    9588:	b.eq	9c30 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd88>  // b.none
    958c:	mov	x24, x19
    9590:	add	x19, sp, #0x140
    9594:	mov	w28, #0x0                   	// #0
    9598:	mov	x26, #0x0                   	// #0
    959c:	nop
    95a0:	add	x26, x26, x26, lsl #1
    95a4:	mov	x8, x19
    95a8:	ldr	x0, [sp, #200]
    95ac:	lsl	x26, x26, #4
    95b0:	ldr	x1, [sp, #248]
    95b4:	add	x0, x0, x26
    95b8:	add	x0, x0, #0x8
    95bc:	add	x1, x1, x26
    95c0:	add	x1, x1, #0x8
    95c4:	bl	0 <_ZNK4llvm5APInt4sremERKS0_>
    95c8:	add	x0, x27, x26
    95cc:	mov	x1, x19
    95d0:	add	x0, x0, #0x8
    95d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    95d8:	ldr	w0, [sp, #328]
    95dc:	cmp	w0, #0x40
    95e0:	b.ls	95f0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x748>  // b.plast
    95e4:	ldr	x0, [sp, #320]
    95e8:	cbz	x0, 95f0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x748>
    95ec:	bl	0 <_ZdaPv>
    95f0:	ldp	x27, x0, [sp, #152]
    95f4:	add	w26, w28, #0x1
    95f8:	mov	x28, x26
    95fc:	sub	x0, x0, x27
    9600:	asr	x0, x0, #4
    9604:	mul	x0, x0, x24
    9608:	cmp	x0, w26, uxtw
    960c:	b.hi	95a0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x6f8>  // b.pmore
    9610:	ldp	x27, x28, [sp, #80]
    9614:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    9618:	cmp	w0, #0x11
    961c:	b.ne	a35c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x14b4>  // b.any
    9620:	ldp	x27, x0, [sp, #152]
    9624:	add	x19, sp, #0x140
    9628:	cmp	x27, x0
    962c:	b.eq	92e0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>  // b.none
    9630:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    9634:	mov	w28, #0x0                   	// #0
    9638:	mov	x24, #0x0                   	// #0
    963c:	movk	x26, #0xaaab
    9640:	add	x24, x24, x24, lsl #1
    9644:	mov	x8, x19
    9648:	ldr	x0, [sp, #200]
    964c:	lsl	x24, x24, #4
    9650:	ldr	x1, [sp, #248]
    9654:	add	x0, x0, x24
    9658:	add	x0, x0, #0x8
    965c:	add	x1, x1, x24
    9660:	add	x1, x1, #0x8
    9664:	bl	0 <_ZNK4llvm5APIntmlERKS0_>
    9668:	add	x0, x27, x24
    966c:	mov	x1, x19
    9670:	add	x0, x0, #0x8
    9674:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9678:	ldr	w0, [sp, #328]
    967c:	cmp	w0, #0x40
    9680:	b.ls	9690 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x7e8>  // b.plast
    9684:	ldr	x0, [sp, #320]
    9688:	cbz	x0, 9690 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x7e8>
    968c:	bl	0 <_ZdaPv>
    9690:	ldp	x27, x0, [sp, #152]
    9694:	add	w24, w28, #0x1
    9698:	mov	x28, x24
    969c:	sub	x0, x0, x27
    96a0:	asr	x0, x0, #4
    96a4:	mul	x0, x0, x26
    96a8:	cmp	x0, w24, uxtw
    96ac:	b.hi	9640 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x798>  // b.pmore
    96b0:	ldp	x27, x28, [sp, #80]
    96b4:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    96b8:	cmp	w0, #0xe
    96bc:	b.eq	9df8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xf50>  // b.none
    96c0:	cmp	w0, #0xf
    96c4:	b.ne	9848 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x9a0>  // b.any
    96c8:	ldp	x0, x1, [sp, #152]
    96cc:	cmp	x1, x0
    96d0:	b.eq	9840 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    96d4:	mov	w24, #0x0                   	// #0
    96d8:	mov	x26, #0x0                   	// #0
    96dc:	stp	x27, x28, [sp, #80]
    96e0:	add	x27, sp, #0x110
    96e4:	str	x19, [sp, #104]
    96e8:	add	x19, sp, #0x140
    96ec:	b	9780 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x8d8>
    96f0:	ldr	x0, [x2, #8]
    96f4:	str	x0, [sp, #272]
    96f8:	ldr	x1, [sp, #248]
    96fc:	mov	x0, x27
    9700:	add	x1, x1, x26
    9704:	add	x1, x1, #0x8
    9708:	bl	0 <_ZN4llvm5APIntmIERKS0_>
    970c:	ldr	w2, [sp, #280]
    9710:	mov	x0, x28
    9714:	ldr	x4, [sp, #272]
    9718:	mov	x1, x19
    971c:	str	wzr, [sp, #280]
    9720:	str	x4, [sp, #320]
    9724:	str	w2, [sp, #328]
    9728:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    972c:	ldr	w0, [sp, #328]
    9730:	cmp	w0, #0x40
    9734:	b.ls	9744 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x89c>  // b.plast
    9738:	ldr	x0, [sp, #320]
    973c:	cbz	x0, 9744 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x89c>
    9740:	bl	0 <_ZdaPv>
    9744:	ldr	w0, [sp, #280]
    9748:	cmp	w0, #0x40
    974c:	b.ls	975c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x8b4>  // b.plast
    9750:	ldr	x0, [sp, #272]
    9754:	cbz	x0, 975c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x8b4>
    9758:	bl	0 <_ZdaPv>
    975c:	ldp	x0, x1, [sp, #152]
    9760:	add	w26, w24, #0x1
    9764:	ldr	x2, [sp, #104]
    9768:	mov	x24, x26
    976c:	sub	x1, x1, x0
    9770:	asr	x1, x1, #4
    9774:	mul	x1, x1, x2
    9778:	cmp	x1, w26, uxtw
    977c:	b.ls	92e0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>  // b.plast
    9780:	add	x26, x26, x26, lsl #1
    9784:	ldr	x2, [sp, #200]
    9788:	lsl	x26, x26, #4
    978c:	add	x0, x0, x26
    9790:	add	x2, x2, x26
    9794:	add	x28, x0, #0x8
    9798:	add	x1, x2, #0x8
    979c:	ldr	w0, [x1, #8]
    97a0:	str	w0, [sp, #280]
    97a4:	cmp	w0, #0x40
    97a8:	b.ls	96f0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x848>  // b.plast
    97ac:	mov	x0, x27
    97b0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    97b4:	b	96f8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x850>
    97b8:	cmp	w0, #0x15
    97bc:	b.ne	a358 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x14b0>  // b.any
    97c0:	mov	x0, x24
    97c4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    97c8:	ldr	x0, [x0, #24]
    97cc:	ldrb	w0, [x0, #8]
    97d0:	cmp	w0, #0x2
    97d4:	b.eq	9b4c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xca4>  // b.none
    97d8:	cmp	w0, #0x3
    97dc:	b.ne	a428 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1580>  // b.any
    97e0:	ldp	x3, x0, [sp, #152]
    97e4:	cmp	x3, x0
    97e8:	b.eq	9840 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    97ec:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    97f0:	mov	w2, #0x0                   	// #0
    97f4:	mov	x1, #0x0                   	// #0
    97f8:	movk	x6, #0xaaab
    97fc:	nop
    9800:	add	x1, x1, x1, lsl #1
    9804:	add	w2, w2, #0x1
    9808:	ldr	x5, [sp, #200]
    980c:	lsl	x0, x1, #4
    9810:	ldr	x4, [sp, #248]
    9814:	mov	w1, w2
    9818:	ldr	d0, [x5, x0]
    981c:	ldr	d1, [x4, x0]
    9820:	fdiv	d0, d0, d1
    9824:	str	d0, [x3, x0]
    9828:	ldp	x3, x0, [sp, #152]
    982c:	sub	x0, x0, x3
    9830:	asr	x0, x0, #4
    9834:	mul	x0, x0, x6
    9838:	cmp	x0, w2, uxtw
    983c:	b.hi	9800 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x958>  // b.pmore
    9840:	add	x19, sp, #0x140
    9844:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    9848:	cmp	w0, #0xd
    984c:	b.ne	a358 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x14b0>  // b.any
    9850:	ldp	x0, x1, [sp, #152]
    9854:	cmp	x0, x1
    9858:	b.eq	9840 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    985c:	add	x19, sp, #0x140
    9860:	mov	w26, #0x0                   	// #0
    9864:	mov	x24, #0x0                   	// #0
    9868:	stp	x27, x28, [sp, #80]
    986c:	add	x27, sp, #0x110
    9870:	b	9908 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa60>
    9874:	ldr	x0, [x2, #8]
    9878:	str	x0, [sp, #272]
    987c:	ldr	x1, [sp, #248]
    9880:	mov	x0, x27
    9884:	add	x1, x1, x24
    9888:	add	x1, x1, #0x8
    988c:	bl	0 <_ZN4llvm5APIntpLERKS0_>
    9890:	ldr	w2, [sp, #280]
    9894:	mov	x0, x28
    9898:	ldr	x4, [sp, #272]
    989c:	mov	x1, x19
    98a0:	str	wzr, [sp, #280]
    98a4:	str	x4, [sp, #320]
    98a8:	str	w2, [sp, #328]
    98ac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    98b0:	ldr	w0, [sp, #328]
    98b4:	cmp	w0, #0x40
    98b8:	b.ls	98c8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa20>  // b.plast
    98bc:	ldr	x0, [sp, #320]
    98c0:	cbz	x0, 98c8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa20>
    98c4:	bl	0 <_ZdaPv>
    98c8:	ldr	w0, [sp, #280]
    98cc:	cmp	w0, #0x40
    98d0:	b.ls	98e0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa38>  // b.plast
    98d4:	ldr	x0, [sp, #272]
    98d8:	cbz	x0, 98e0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa38>
    98dc:	bl	0 <_ZdaPv>
    98e0:	ldp	x0, x1, [sp, #152]
    98e4:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    98e8:	movk	x2, #0xaaab
    98ec:	add	w24, w26, #0x1
    98f0:	mov	x26, x24
    98f4:	sub	x1, x1, x0
    98f8:	asr	x1, x1, #4
    98fc:	mul	x1, x1, x2
    9900:	cmp	x1, w24, uxtw
    9904:	b.ls	92e0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>  // b.plast
    9908:	add	x24, x24, x24, lsl #1
    990c:	ldr	x2, [sp, #200]
    9910:	lsl	x24, x24, #4
    9914:	add	x0, x0, x24
    9918:	add	x2, x2, x24
    991c:	add	x28, x0, #0x8
    9920:	add	x1, x2, #0x8
    9924:	ldr	w0, [x1, #8]
    9928:	str	w0, [sp, #280]
    992c:	cmp	w0, #0x40
    9930:	b.ls	9874 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x9cc>  // b.plast
    9934:	mov	x0, x27
    9938:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    993c:	b	987c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x9d4>
    9940:	add	x19, sp, #0x140
    9944:	add	x1, x22, #0x8
    9948:	mov	x8, x19
    994c:	add	x0, x23, #0x8
    9950:	add	x25, sp, #0x80
    9954:	bl	0 <_ZNK4llvm5APInt4uremERKS0_>
    9958:	b	8f68 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc0>
    995c:	add	x27, sp, #0x110
    9960:	mov	x1, x23
    9964:	mov	x0, x27
    9968:	add	x19, sp, #0x140
    996c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9970:	mov	x0, x19
    9974:	mov	x1, x22
    9978:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    997c:	ldrb	w0, [x24, #8]
    9980:	cmp	w0, #0x2
    9984:	b.ne	9d24 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe7c>  // b.any
    9988:	ldr	s0, [sp, #272]
    998c:	ldr	s1, [sp, #320]
    9990:	fadd	s0, s0, s1
    9994:	str	s0, [sp, #128]
    9998:	mov	x0, x19
    999c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    99a0:	mov	x0, x27
    99a4:	add	x25, sp, #0x80
    99a8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    99ac:	ldp	x27, x28, [sp, #80]
    99b0:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    99b4:	stp	x27, x28, [sp, #80]
    99b8:	add	x27, sp, #0x110
    99bc:	mov	x1, x23
    99c0:	mov	x0, x27
    99c4:	add	x19, sp, #0x140
    99c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    99cc:	mov	x0, x19
    99d0:	mov	x1, x22
    99d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    99d8:	ldrb	w0, [x24, #8]
    99dc:	cmp	w0, #0x2
    99e0:	b.ne	9d40 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe98>  // b.any
    99e4:	ldr	s0, [sp, #272]
    99e8:	ldr	s1, [sp, #320]
    99ec:	fmul	s0, s0, s1
    99f0:	str	s0, [sp, #128]
    99f4:	b	9998 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    99f8:	ldr	w2, [sp, #192]
    99fc:	str	w2, [sp, #280]
    9a00:	cmp	w2, #0x40
    9a04:	b.hi	a150 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x12a8>  // b.pmore
    9a08:	ldr	x0, [sp, #184]
    9a0c:	str	x0, [sp, #272]
    9a10:	ldr	w0, [sp, #240]
    9a14:	cmp	w0, w2
    9a18:	b.ne	a390 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x14e8>  // b.any
    9a1c:	ldr	x0, [sp, #232]
    9a20:	ldr	x3, [sp, #272]
    9a24:	orr	x3, x3, x0
    9a28:	str	x3, [sp, #272]
    9a2c:	add	x19, sp, #0x140
    9a30:	add	x25, sp, #0x80
    9a34:	mov	x1, x19
    9a38:	add	x0, x25, #0x8
    9a3c:	str	wzr, [sp, #280]
    9a40:	str	x3, [sp, #320]
    9a44:	str	w2, [sp, #328]
    9a48:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9a4c:	ldr	w0, [sp, #328]
    9a50:	cmp	w0, #0x40
    9a54:	b.ls	9a64 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xbbc>  // b.plast
    9a58:	ldr	x0, [sp, #320]
    9a5c:	cbz	x0, 9a64 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xbbc>
    9a60:	bl	0 <_ZdaPv>
    9a64:	ldr	w0, [sp, #280]
    9a68:	cmp	w0, #0x40
    9a6c:	b.ls	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>  // b.plast
    9a70:	ldr	x0, [sp, #272]
    9a74:	cbz	x0, 8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    9a78:	bl	0 <_ZdaPv>
    9a7c:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    9a80:	ldr	s0, [sp, #272]
    9a84:	ldr	s1, [sp, #320]
    9a88:	fdiv	s0, s0, s1
    9a8c:	str	s0, [sp, #128]
    9a90:	b	9998 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    9a94:	add	x27, sp, #0x110
    9a98:	add	x1, x23, #0x8
    9a9c:	mov	x0, x27
    9aa0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9aa4:	b	9064 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1bc>
    9aa8:	add	x27, sp, #0x110
    9aac:	add	x1, x23, #0x8
    9ab0:	mov	x0, x27
    9ab4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9ab8:	b	9160 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x2b8>
    9abc:	stp	x27, x28, [sp, #80]
    9ac0:	add	x27, sp, #0x110
    9ac4:	mov	x0, x27
    9ac8:	add	x1, x23, #0x8
    9acc:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9ad0:	ldr	w0, [sp, #240]
    9ad4:	ldr	w2, [sp, #280]
    9ad8:	cmp	w2, w0
    9adc:	b.ne	a3dc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1534>  // b.any
    9ae0:	cmp	w2, #0x40
    9ae4:	b.ls	a478 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x15d0>  // b.plast
    9ae8:	mov	x0, x27
    9aec:	add	x1, x22, #0x8
    9af0:	bl	0 <_ZN4llvm5APInt17AndAssignSlowCaseERKS0_>
    9af4:	ldr	w2, [sp, #280]
    9af8:	ldp	x27, x28, [sp, #80]
    9afc:	ldr	x3, [sp, #272]
    9b00:	b	9a2c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb84>
    9b04:	stp	x27, x28, [sp, #80]
    9b08:	add	x27, sp, #0x110
    9b0c:	mov	x0, x27
    9b10:	add	x1, x23, #0x8
    9b14:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9b18:	ldr	w0, [sp, #240]
    9b1c:	ldr	w2, [sp, #280]
    9b20:	cmp	w2, w0
    9b24:	b.ne	a400 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1558>  // b.any
    9b28:	cmp	w2, #0x40
    9b2c:	b.ls	a480 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x15d8>  // b.plast
    9b30:	mov	x0, x27
    9b34:	add	x1, x22, #0x8
    9b38:	bl	0 <_ZN4llvm5APInt17XorAssignSlowCaseERKS0_>
    9b3c:	ldr	w2, [sp, #280]
    9b40:	ldp	x27, x28, [sp, #80]
    9b44:	ldr	x3, [sp, #272]
    9b48:	b	9a2c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb84>
    9b4c:	ldp	x3, x0, [sp, #152]
    9b50:	cmp	x3, x0
    9b54:	b.eq	9840 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    9b58:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    9b5c:	mov	w2, #0x0                   	// #0
    9b60:	mov	x1, #0x0                   	// #0
    9b64:	movk	x6, #0xaaab
    9b68:	add	x1, x1, x1, lsl #1
    9b6c:	add	w2, w2, #0x1
    9b70:	ldr	x5, [sp, #200]
    9b74:	lsl	x0, x1, #4
    9b78:	ldr	x4, [sp, #248]
    9b7c:	mov	w1, w2
    9b80:	ldr	s0, [x5, x0]
    9b84:	ldr	s1, [x4, x0]
    9b88:	fdiv	s0, s0, s1
    9b8c:	str	s0, [x3, x0]
    9b90:	ldp	x3, x0, [sp, #152]
    9b94:	sub	x0, x0, x3
    9b98:	asr	x0, x0, #4
    9b9c:	mul	x0, x0, x6
    9ba0:	cmp	x0, w2, uxtw
    9ba4:	b.hi	9b68 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xcc0>  // b.pmore
    9ba8:	add	x19, sp, #0x140
    9bac:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    9bb0:	mov	x0, x24
    9bb4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9bb8:	ldr	x0, [x0, #24]
    9bbc:	ldrb	w0, [x0, #8]
    9bc0:	cmp	w0, #0x2
    9bc4:	b.eq	a2b0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1408>  // b.none
    9bc8:	stp	x27, x28, [sp, #80]
    9bcc:	cmp	w0, #0x3
    9bd0:	b.ne	a5a0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x16f8>  // b.any
    9bd4:	ldp	x27, x0, [sp, #152]
    9bd8:	mov	x24, x19
    9bdc:	mov	x1, #0x0                   	// #0
    9be0:	mov	w19, #0x0                   	// #0
    9be4:	cmp	x27, x0
    9be8:	b.eq	9c30 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd88>  // b.none
    9bec:	nop
    9bf0:	add	x1, x1, x1, lsl #1
    9bf4:	add	w19, w19, #0x1
    9bf8:	ldr	x2, [sp, #200]
    9bfc:	lsl	x26, x1, #4
    9c00:	ldr	x0, [sp, #248]
    9c04:	ldr	d0, [x2, x26]
    9c08:	ldr	d1, [x0, x26]
    9c0c:	bl	0 <fmod>
    9c10:	str	d0, [x27, x26]
    9c14:	ldp	x27, x0, [sp, #152]
    9c18:	mov	w1, w19
    9c1c:	sub	x0, x0, x27
    9c20:	asr	x0, x0, #4
    9c24:	mul	x0, x0, x24
    9c28:	cmp	x0, w19, uxtw
    9c2c:	b.hi	9bf0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd48>  // b.pmore
    9c30:	add	x19, sp, #0x140
    9c34:	ldp	x27, x28, [sp, #80]
    9c38:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    9c3c:	add	x19, sp, #0x140
    9c40:	add	x1, x22, #0x8
    9c44:	mov	x8, x19
    9c48:	add	x0, x23, #0x8
    9c4c:	add	x25, sp, #0x80
    9c50:	bl	0 <_ZNK4llvm5APInt4sdivERKS0_>
    9c54:	b	8f68 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc0>
    9c58:	stp	x27, x28, [sp, #80]
    9c5c:	add	x27, sp, #0x110
    9c60:	mov	x1, x23
    9c64:	mov	x0, x27
    9c68:	add	x19, sp, #0x140
    9c6c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9c70:	mov	x0, x19
    9c74:	mov	x1, x22
    9c78:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9c7c:	ldrb	w0, [x24, #8]
    9c80:	cmp	w0, #0x2
    9c84:	b.ne	9cec <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe44>  // b.any
    9c88:	ldr	s0, [sp, #272]
    9c8c:	ldr	s1, [sp, #320]
    9c90:	fcvt	d0, s0
    9c94:	fcvt	d1, s1
    9c98:	bl	0 <fmod>
    9c9c:	fcvt	s0, d0
    9ca0:	str	s0, [sp, #128]
    9ca4:	b	9998 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    9ca8:	stp	x27, x28, [sp, #80]
    9cac:	add	x27, sp, #0x110
    9cb0:	mov	x1, x23
    9cb4:	mov	x0, x27
    9cb8:	add	x19, sp, #0x140
    9cbc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9cc0:	mov	x0, x19
    9cc4:	mov	x1, x22
    9cc8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9ccc:	ldrb	w0, [x24, #8]
    9cd0:	cmp	w0, #0x2
    9cd4:	b.ne	9d08 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe60>  // b.any
    9cd8:	ldr	s0, [sp, #272]
    9cdc:	ldr	s1, [sp, #320]
    9ce0:	fsub	s0, s0, s1
    9ce4:	str	s0, [sp, #128]
    9ce8:	b	9998 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    9cec:	cmp	w0, #0x3
    9cf0:	b.ne	a498 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x15f0>  // b.any
    9cf4:	ldr	d0, [sp, #272]
    9cf8:	ldr	d1, [sp, #320]
    9cfc:	bl	0 <fmod>
    9d00:	str	d0, [sp, #128]
    9d04:	b	9998 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    9d08:	cmp	w0, #0x3
    9d0c:	b.ne	a5ec <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1744>  // b.any
    9d10:	ldr	d0, [sp, #272]
    9d14:	ldr	d1, [sp, #320]
    9d18:	fsub	d0, d0, d1
    9d1c:	str	d0, [sp, #128]
    9d20:	b	9998 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    9d24:	cmp	w0, #0x3
    9d28:	b.ne	a5f4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x174c>  // b.any
    9d2c:	ldr	d0, [sp, #272]
    9d30:	ldr	d1, [sp, #320]
    9d34:	fadd	d0, d0, d1
    9d38:	str	d0, [sp, #128]
    9d3c:	b	9998 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    9d40:	cmp	w0, #0x3
    9d44:	b.ne	a4a0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x15f8>  // b.any
    9d48:	ldr	d0, [sp, #272]
    9d4c:	ldr	d1, [sp, #320]
    9d50:	fmul	d0, d0, d1
    9d54:	str	d0, [sp, #128]
    9d58:	b	9998 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xaf0>
    9d5c:	stp	x27, x28, [sp, #80]
    9d60:	ldp	x27, x0, [sp, #152]
    9d64:	cmp	x27, x0
    9d68:	b.eq	9c30 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd88>  // b.none
    9d6c:	mov	x24, x19
    9d70:	add	x19, sp, #0x140
    9d74:	mov	w28, #0x0                   	// #0
    9d78:	mov	x26, #0x0                   	// #0
    9d7c:	nop
    9d80:	add	x26, x26, x26, lsl #1
    9d84:	mov	x8, x19
    9d88:	ldr	x0, [sp, #200]
    9d8c:	lsl	x26, x26, #4
    9d90:	ldr	x1, [sp, #248]
    9d94:	add	x0, x0, x26
    9d98:	add	x0, x0, #0x8
    9d9c:	add	x1, x1, x26
    9da0:	add	x1, x1, #0x8
    9da4:	bl	0 <_ZNK4llvm5APInt4uremERKS0_>
    9da8:	add	x0, x27, x26
    9dac:	mov	x1, x19
    9db0:	add	x0, x0, #0x8
    9db4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9db8:	ldr	w0, [sp, #328]
    9dbc:	cmp	w0, #0x40
    9dc0:	b.ls	9dd0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xf28>  // b.plast
    9dc4:	ldr	x0, [sp, #320]
    9dc8:	cbz	x0, 9dd0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xf28>
    9dcc:	bl	0 <_ZdaPv>
    9dd0:	ldp	x27, x0, [sp, #152]
    9dd4:	add	w26, w28, #0x1
    9dd8:	mov	x28, x26
    9ddc:	sub	x0, x0, x27
    9de0:	asr	x0, x0, #4
    9de4:	mul	x0, x0, x24
    9de8:	cmp	x0, w26, uxtw
    9dec:	b.hi	9d80 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xed8>  // b.pmore
    9df0:	ldp	x27, x28, [sp, #80]
    9df4:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    9df8:	mov	x0, x24
    9dfc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9e00:	ldr	x0, [x0, #24]
    9e04:	ldrb	w0, [x0, #8]
    9e08:	cmp	w0, #0x2
    9e0c:	b.eq	a1f0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1348>  // b.none
    9e10:	cmp	w0, #0x3
    9e14:	b.ne	a500 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1658>  // b.any
    9e18:	ldp	x3, x0, [sp, #152]
    9e1c:	cmp	x0, x3
    9e20:	b.eq	9840 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    9e24:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    9e28:	mov	w2, #0x0                   	// #0
    9e2c:	mov	x1, #0x0                   	// #0
    9e30:	movk	x6, #0xaaab
    9e34:	nop
    9e38:	add	x1, x1, x1, lsl #1
    9e3c:	add	w2, w2, #0x1
    9e40:	ldr	x5, [sp, #200]
    9e44:	lsl	x0, x1, #4
    9e48:	ldr	x4, [sp, #248]
    9e4c:	mov	w1, w2
    9e50:	ldr	d0, [x5, x0]
    9e54:	ldr	d1, [x4, x0]
    9e58:	fadd	d0, d0, d1
    9e5c:	str	d0, [x3, x0]
    9e60:	ldp	x3, x0, [sp, #152]
    9e64:	sub	x0, x0, x3
    9e68:	asr	x0, x0, #4
    9e6c:	mul	x0, x0, x6
    9e70:	cmp	x0, w2, uxtw
    9e74:	b.hi	9e38 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xf90>  // b.pmore
    9e78:	add	x19, sp, #0x140
    9e7c:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    9e80:	ldp	x0, x1, [sp, #152]
    9e84:	cmp	x0, x1
    9e88:	b.eq	9840 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    9e8c:	mov	w26, #0x0                   	// #0
    9e90:	mov	x1, #0x0                   	// #0
    9e94:	stp	x27, x28, [sp, #80]
    9e98:	add	x28, sp, #0x70
    9e9c:	add	x27, sp, #0x140
    9ea0:	str	x19, [sp, #104]
    9ea4:	b	9f44 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x109c>
    9ea8:	ldr	x1, [sp, #248]
    9eac:	ldr	x4, [x4, #8]
    9eb0:	add	x1, x1, x19
    9eb4:	add	x1, x1, #0x8
    9eb8:	ldr	w0, [x1, #8]
    9ebc:	str	x4, [sp, #112]
    9ec0:	cmp	w0, w3
    9ec4:	b.ne	a394 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x14ec>  // b.any
    9ec8:	ldr	x0, [x1]
    9ecc:	orr	x4, x4, x0
    9ed0:	str	x4, [sp, #112]
    9ed4:	mov	x0, x24
    9ed8:	mov	x1, x27
    9edc:	str	wzr, [sp, #120]
    9ee0:	mov	x19, x27
    9ee4:	str	x4, [sp, #320]
    9ee8:	str	w3, [sp, #328]
    9eec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    9ef0:	ldr	w0, [sp, #328]
    9ef4:	cmp	w0, #0x40
    9ef8:	b.ls	9f08 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1060>  // b.plast
    9efc:	ldr	x0, [sp, #320]
    9f00:	cbz	x0, 9f08 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1060>
    9f04:	bl	0 <_ZdaPv>
    9f08:	ldr	w0, [sp, #120]
    9f0c:	cmp	w0, #0x40
    9f10:	b.ls	9f20 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1078>  // b.plast
    9f14:	ldr	x0, [sp, #112]
    9f18:	cbz	x0, 9f20 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1078>
    9f1c:	bl	0 <_ZdaPv>
    9f20:	ldp	x0, x2, [sp, #152]
    9f24:	add	w1, w26, #0x1
    9f28:	ldr	x3, [sp, #104]
    9f2c:	mov	x26, x1
    9f30:	sub	x2, x2, x0
    9f34:	asr	x2, x2, #4
    9f38:	mul	x2, x2, x3
    9f3c:	cmp	x2, w1, uxtw
    9f40:	b.ls	92e0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x438>  // b.plast
    9f44:	add	x1, x1, x1, lsl #1
    9f48:	ldr	x4, [sp, #200]
    9f4c:	lsl	x19, x1, #4
    9f50:	add	x0, x0, x19
    9f54:	add	x4, x4, x19
    9f58:	add	x24, x0, #0x8
    9f5c:	add	x1, x4, #0x8
    9f60:	ldr	w3, [x1, #8]
    9f64:	str	w3, [sp, #120]
    9f68:	cmp	w3, #0x40
    9f6c:	b.ls	9ea8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1000>  // b.plast
    9f70:	mov	x0, x28
    9f74:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9f78:	ldr	x1, [sp, #248]
    9f7c:	ldr	w3, [sp, #120]
    9f80:	add	x1, x1, x19
    9f84:	add	x1, x1, #0x8
    9f88:	ldr	w0, [x1, #8]
    9f8c:	cmp	w3, w0
    9f90:	b.ne	a394 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x14ec>  // b.any
    9f94:	cmp	w3, #0x40
    9f98:	b.ls	a4a8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1600>  // b.plast
    9f9c:	mov	x0, x28
    9fa0:	bl	0 <_ZN4llvm5APInt16OrAssignSlowCaseERKS0_>
    9fa4:	ldr	w3, [sp, #120]
    9fa8:	ldr	x4, [sp, #112]
    9fac:	b	9ed4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x102c>
    9fb0:	stp	x27, x28, [sp, #80]
    9fb4:	ldp	x27, x0, [sp, #152]
    9fb8:	cmp	x27, x0
    9fbc:	b.eq	9c30 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd88>  // b.none
    9fc0:	mov	x24, x19
    9fc4:	add	x19, sp, #0x140
    9fc8:	mov	w28, #0x0                   	// #0
    9fcc:	mov	x26, #0x0                   	// #0
    9fd0:	add	x26, x26, x26, lsl #1
    9fd4:	mov	x8, x19
    9fd8:	ldr	x0, [sp, #200]
    9fdc:	lsl	x26, x26, #4
    9fe0:	ldr	x1, [sp, #248]
    9fe4:	add	x0, x0, x26
    9fe8:	add	x0, x0, #0x8
    9fec:	add	x1, x1, x26
    9ff0:	add	x1, x1, #0x8
    9ff4:	bl	0 <_ZNK4llvm5APInt4sdivERKS0_>
    9ff8:	add	x0, x27, x26
    9ffc:	mov	x1, x19
    a000:	add	x0, x0, #0x8
    a004:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a008:	ldr	w0, [sp, #328]
    a00c:	cmp	w0, #0x40
    a010:	b.ls	a020 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1178>  // b.plast
    a014:	ldr	x0, [sp, #320]
    a018:	cbz	x0, a020 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1178>
    a01c:	bl	0 <_ZdaPv>
    a020:	ldp	x27, x0, [sp, #152]
    a024:	add	w26, w28, #0x1
    a028:	mov	x28, x26
    a02c:	sub	x0, x0, x27
    a030:	asr	x0, x0, #4
    a034:	mul	x0, x0, x24
    a038:	cmp	x0, w26, uxtw
    a03c:	b.hi	9fd0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1128>  // b.pmore
    a040:	ldp	x27, x28, [sp, #80]
    a044:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    a048:	mov	x0, x24
    a04c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a050:	ldr	x0, [x0, #24]
    a054:	ldrb	w0, [x0, #8]
    a058:	cmp	w0, #0x2
    a05c:	b.eq	a190 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x12e8>  // b.none
    a060:	cmp	w0, #0x3
    a064:	b.ne	a4b0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1608>  // b.any
    a068:	ldp	x3, x0, [sp, #152]
    a06c:	mov	x24, x19
    a070:	mov	w2, #0x0                   	// #0
    a074:	mov	x1, #0x0                   	// #0
    a078:	cmp	x3, x0
    a07c:	b.eq	9840 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    a080:	add	x1, x1, x1, lsl #1
    a084:	add	w2, w2, #0x1
    a088:	ldr	x5, [sp, #200]
    a08c:	lsl	x0, x1, #4
    a090:	ldr	x4, [sp, #248]
    a094:	mov	w1, w2
    a098:	ldr	d0, [x5, x0]
    a09c:	ldr	d1, [x4, x0]
    a0a0:	fsub	d0, d0, d1
    a0a4:	str	d0, [x3, x0]
    a0a8:	ldp	x3, x0, [sp, #152]
    a0ac:	sub	x0, x0, x3
    a0b0:	asr	x0, x0, #4
    a0b4:	mul	x0, x0, x24
    a0b8:	cmp	x0, w2, uxtw
    a0bc:	b.hi	a080 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x11d8>  // b.pmore
    a0c0:	add	x19, sp, #0x140
    a0c4:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    a0c8:	mov	x0, x24
    a0cc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a0d0:	ldr	x0, [x0, #24]
    a0d4:	ldrb	w0, [x0, #8]
    a0d8:	cmp	w0, #0x2
    a0dc:	b.eq	a250 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x13a8>  // b.none
    a0e0:	cmp	w0, #0x3
    a0e4:	b.ne	a550 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x16a8>  // b.any
    a0e8:	ldp	x3, x0, [sp, #152]
    a0ec:	cmp	x3, x0
    a0f0:	b.eq	9840 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    a0f4:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    a0f8:	mov	w2, #0x0                   	// #0
    a0fc:	mov	x1, #0x0                   	// #0
    a100:	movk	x6, #0xaaab
    a104:	nop
    a108:	add	x1, x1, x1, lsl #1
    a10c:	add	w2, w2, #0x1
    a110:	ldr	x5, [sp, #200]
    a114:	lsl	x0, x1, #4
    a118:	ldr	x4, [sp, #248]
    a11c:	mov	w1, w2
    a120:	ldr	d0, [x5, x0]
    a124:	ldr	d1, [x4, x0]
    a128:	fmul	d0, d0, d1
    a12c:	str	d0, [x3, x0]
    a130:	ldp	x3, x0, [sp, #152]
    a134:	sub	x0, x0, x3
    a138:	asr	x0, x0, #4
    a13c:	mul	x0, x0, x6
    a140:	cmp	x0, w2, uxtw
    a144:	b.hi	a108 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1260>  // b.pmore
    a148:	add	x19, sp, #0x140
    a14c:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    a150:	add	x19, sp, #0x110
    a154:	add	x1, x23, #0x8
    a158:	mov	x0, x19
    a15c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    a160:	ldr	w0, [sp, #240]
    a164:	ldr	w2, [sp, #280]
    a168:	cmp	w2, w0
    a16c:	b.ne	a390 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x14e8>  // b.any
    a170:	cmp	w2, #0x40
    a174:	b.ls	9a1c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb74>  // b.plast
    a178:	mov	x0, x19
    a17c:	add	x1, x22, #0x8
    a180:	bl	0 <_ZN4llvm5APInt16OrAssignSlowCaseERKS0_>
    a184:	ldr	w2, [sp, #280]
    a188:	ldr	x3, [sp, #272]
    a18c:	b	9a2c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb84>
    a190:	ldp	x3, x0, [sp, #152]
    a194:	mov	x24, x19
    a198:	mov	w2, #0x0                   	// #0
    a19c:	mov	x1, #0x0                   	// #0
    a1a0:	cmp	x3, x0
    a1a4:	b.eq	9840 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    a1a8:	add	x1, x1, x1, lsl #1
    a1ac:	add	w2, w2, #0x1
    a1b0:	ldr	x5, [sp, #200]
    a1b4:	lsl	x0, x1, #4
    a1b8:	ldr	x4, [sp, #248]
    a1bc:	mov	w1, w2
    a1c0:	ldr	s0, [x5, x0]
    a1c4:	ldr	s1, [x4, x0]
    a1c8:	fsub	s0, s0, s1
    a1cc:	str	s0, [x3, x0]
    a1d0:	ldp	x3, x0, [sp, #152]
    a1d4:	sub	x0, x0, x3
    a1d8:	asr	x0, x0, #4
    a1dc:	mul	x0, x0, x24
    a1e0:	cmp	x0, w2, uxtw
    a1e4:	b.hi	a1a8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1300>  // b.pmore
    a1e8:	add	x19, sp, #0x140
    a1ec:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    a1f0:	ldp	x3, x0, [sp, #152]
    a1f4:	mov	x24, x19
    a1f8:	mov	w2, #0x0                   	// #0
    a1fc:	mov	x1, #0x0                   	// #0
    a200:	cmp	x0, x3
    a204:	b.eq	9840 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    a208:	add	x1, x1, x1, lsl #1
    a20c:	add	w2, w2, #0x1
    a210:	ldr	x5, [sp, #200]
    a214:	lsl	x0, x1, #4
    a218:	ldr	x4, [sp, #248]
    a21c:	mov	w1, w2
    a220:	ldr	s0, [x5, x0]
    a224:	ldr	s1, [x4, x0]
    a228:	fadd	s0, s0, s1
    a22c:	str	s0, [x3, x0]
    a230:	ldp	x3, x0, [sp, #152]
    a234:	sub	x0, x0, x3
    a238:	asr	x0, x0, #4
    a23c:	mul	x0, x0, x24
    a240:	cmp	x0, w2, uxtw
    a244:	b.hi	a208 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1360>  // b.pmore
    a248:	add	x19, sp, #0x140
    a24c:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    a250:	ldp	x3, x0, [sp, #152]
    a254:	mov	x24, x19
    a258:	mov	w2, #0x0                   	// #0
    a25c:	mov	x1, #0x0                   	// #0
    a260:	cmp	x0, x3
    a264:	b.eq	9840 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    a268:	add	x1, x1, x1, lsl #1
    a26c:	add	w2, w2, #0x1
    a270:	ldr	x5, [sp, #200]
    a274:	lsl	x0, x1, #4
    a278:	ldr	x4, [sp, #248]
    a27c:	mov	w1, w2
    a280:	ldr	s0, [x5, x0]
    a284:	ldr	s1, [x4, x0]
    a288:	fmul	s0, s0, s1
    a28c:	str	s0, [x3, x0]
    a290:	ldp	x3, x0, [sp, #152]
    a294:	sub	x0, x0, x3
    a298:	asr	x0, x0, #4
    a29c:	mul	x0, x0, x24
    a2a0:	cmp	x0, w2, uxtw
    a2a4:	b.hi	a268 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x13c0>  // b.pmore
    a2a8:	add	x19, sp, #0x140
    a2ac:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    a2b0:	ldp	x1, x0, [sp, #152]
    a2b4:	cmp	x1, x0
    a2b8:	b.eq	9840 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x998>  // b.none
    a2bc:	mov	x24, x19
    a2c0:	mov	x1, #0x0                   	// #0
    a2c4:	mov	w19, #0x0                   	// #0
    a2c8:	add	x1, x1, x1, lsl #1
    a2cc:	add	w19, w19, #0x1
    a2d0:	ldr	x2, [sp, #200]
    a2d4:	lsl	x26, x1, #4
    a2d8:	ldr	x0, [sp, #248]
    a2dc:	ldr	s0, [x2, x26]
    a2e0:	ldr	s1, [x0, x26]
    a2e4:	fcvt	d0, s0
    a2e8:	fcvt	d1, s1
    a2ec:	bl	0 <fmod>
    a2f0:	fcvt	s0, d0
    a2f4:	ldr	x0, [sp, #152]
    a2f8:	mov	w1, w19
    a2fc:	str	s0, [x0, x26]
    a300:	ldp	x2, x0, [sp, #152]
    a304:	sub	x0, x0, x2
    a308:	asr	x0, x0, #4
    a30c:	mul	x0, x0, x24
    a310:	cmp	x0, w19, uxtw
    a314:	b.hi	a2c8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1420>  // b.pmore
    a318:	add	x19, sp, #0x140
    a31c:	b	8f8c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe4>
    a320:	stp	x27, x28, [sp, #80]
    a324:	bl	0 <_ZN4llvm4dbgsEv>
    a328:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a32c:	add	x1, x1, #0x0
    a330:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a334:	mov	x1, x0
    a338:	mov	w2, #0x0                   	// #0
    a33c:	mov	x0, x20
    a340:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    a344:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a348:	mov	w2, #0x335                 	// #821
    a34c:	add	x1, x1, #0x0
    a350:	mov	x0, #0x0                   	// #0
    a354:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a358:	stp	x27, x28, [sp, #80]
    a35c:	bl	0 <_ZN4llvm4dbgsEv>
    a360:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a364:	add	x1, x1, #0x0
    a368:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a36c:	mov	x1, x0
    a370:	mov	w2, #0x0                   	// #0
    a374:	mov	x0, x20
    a378:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    a37c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a380:	mov	w2, #0x310                 	// #784
    a384:	add	x1, x1, #0x0
    a388:	mov	x0, #0x0                   	// #0
    a38c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a390:	stp	x27, x28, [sp, #80]
    a394:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a398:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a39c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a3a0:	add	x3, x3, #0x0
    a3a4:	add	x1, x1, #0x0
    a3a8:	add	x0, x0, #0x0
    a3ac:	mov	w2, #0x347                 	// #839
    a3b0:	bl	0 <__assert_fail>
    a3b4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a3b8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a3bc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a3c0:	add	x3, x3, #0x0
    a3c4:	add	x1, x1, #0x0
    a3c8:	add	x0, x0, #0x0
    a3cc:	mov	w2, #0x2e7                 	// #743
    a3d0:	stp	x27, x28, [sp, #80]
    a3d4:	bl	0 <__assert_fail>
    a3d8:	stp	x27, x28, [sp, #80]
    a3dc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a3e0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a3e4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a3e8:	add	x3, x3, #0x0
    a3ec:	add	x1, x1, #0x0
    a3f0:	add	x0, x0, #0x0
    a3f4:	mov	w2, #0x329                 	// #809
    a3f8:	bl	0 <__assert_fail>
    a3fc:	stp	x27, x28, [sp, #80]
    a400:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a404:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a408:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a40c:	add	x3, x3, #0x0
    a410:	add	x1, x1, #0x0
    a414:	add	x0, x0, #0x0
    a418:	mov	w2, #0x365                 	// #869
    a41c:	bl	0 <__assert_fail>
    a420:	mov	x0, x24
    a424:	bl	210 <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    a428:	stp	x27, x28, [sp, #80]
    a42c:	bl	0 <_ZN4llvm4dbgsEv>
    a430:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a434:	add	x1, x1, #0x0
    a438:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a43c:	mov	w2, #0x0                   	// #0
    a440:	mov	x19, x0
    a444:	mov	w3, #0x0                   	// #0
    a448:	mov	x0, x24
    a44c:	mov	x1, x19
    a450:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    a454:	mov	x0, x19
    a458:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a45c:	add	x1, x1, #0x0
    a460:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a464:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a468:	mov	w2, #0x31f                 	// #799
    a46c:	add	x1, x1, #0x0
    a470:	mov	x0, #0x0                   	// #0
    a474:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a478:	ldp	x27, x28, [sp, #80]
    a47c:	b	9128 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x280>
    a480:	ldp	x27, x28, [sp, #80]
    a484:	b	9020 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x178>
    a488:	ldr	x4, [sp, #112]
    a48c:	b	9480 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x5d8>
    a490:	ldr	x4, [sp, #112]
    a494:	b	934c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4a4>
    a498:	mov	x0, x24
    a49c:	bl	3b0 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    a4a0:	mov	x0, x24
    a4a4:	bl	140 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    a4a8:	ldr	x4, [sp, #112]
    a4ac:	b	9ec8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1020>
    a4b0:	stp	x27, x28, [sp, #80]
    a4b4:	bl	0 <_ZN4llvm4dbgsEv>
    a4b8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a4bc:	add	x1, x1, #0x0
    a4c0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a4c4:	mov	w2, #0x0                   	// #0
    a4c8:	mov	x19, x0
    a4cc:	mov	w3, #0x0                   	// #0
    a4d0:	mov	x0, x24
    a4d4:	mov	x1, x19
    a4d8:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    a4dc:	mov	x0, x19
    a4e0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a4e4:	add	x1, x1, #0x0
    a4e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a4ec:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a4f0:	mov	w2, #0x31d                 	// #797
    a4f4:	add	x1, x1, #0x0
    a4f8:	mov	x0, #0x0                   	// #0
    a4fc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a500:	stp	x27, x28, [sp, #80]
    a504:	bl	0 <_ZN4llvm4dbgsEv>
    a508:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a50c:	add	x1, x1, #0x0
    a510:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a514:	mov	w2, #0x0                   	// #0
    a518:	mov	x19, x0
    a51c:	mov	w3, #0x0                   	// #0
    a520:	mov	x0, x24
    a524:	mov	x1, x19
    a528:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    a52c:	mov	x0, x19
    a530:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a534:	add	x1, x1, #0x0
    a538:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a53c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a540:	mov	w2, #0x31c                 	// #796
    a544:	add	x1, x1, #0x0
    a548:	mov	x0, #0x0                   	// #0
    a54c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a550:	stp	x27, x28, [sp, #80]
    a554:	bl	0 <_ZN4llvm4dbgsEv>
    a558:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a55c:	add	x1, x1, #0x0
    a560:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a564:	mov	w2, #0x0                   	// #0
    a568:	mov	x19, x0
    a56c:	mov	w3, #0x0                   	// #0
    a570:	mov	x0, x24
    a574:	mov	x1, x19
    a578:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    a57c:	mov	x0, x19
    a580:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a584:	add	x1, x1, #0x0
    a588:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a58c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a590:	mov	w2, #0x31e                 	// #798
    a594:	add	x1, x1, #0x0
    a598:	mov	x0, #0x0                   	// #0
    a59c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a5a0:	bl	0 <_ZN4llvm4dbgsEv>
    a5a4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a5a8:	add	x1, x1, #0x0
    a5ac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a5b0:	mov	x19, x0
    a5b4:	mov	w2, #0x0                   	// #0
    a5b8:	mov	w3, #0x0                   	// #0
    a5bc:	mov	x0, x24
    a5c0:	mov	x1, x19
    a5c4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    a5c8:	mov	x0, x19
    a5cc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a5d0:	add	x1, x1, #0x0
    a5d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a5d8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a5dc:	mov	w2, #0x32c                 	// #812
    a5e0:	add	x1, x1, #0x0
    a5e4:	mov	x0, #0x0                   	// #0
    a5e8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a5ec:	mov	x0, x24
    a5f0:	bl	2e0 <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    a5f4:	mov	x0, x24
    a5f8:	bl	480 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE.part.0>
    a5fc:	nop

000000000000a600 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE>:
    a600:	stp	x29, x30, [sp, #-448]!
    a604:	mov	x29, sp
    a608:	stp	x19, x20, [sp, #16]
    a60c:	mov	x19, x1
    a610:	ldur	x1, [x1, #-72]
    a614:	stp	x27, x28, [sp, #80]
    a618:	add	x28, sp, #0x70
    a61c:	ldr	x20, [x0, #704]
    a620:	mov	x8, x28
    a624:	ldr	x3, [x1]
    a628:	sub	x20, x20, #0x80
    a62c:	mov	x2, x20
    a630:	stp	x21, x22, [sp, #32]
    a634:	mov	x21, x0
    a638:	stp	x23, x24, [sp, #48]
    a63c:	add	x27, sp, #0xa0
    a640:	add	x22, sp, #0x130
    a644:	stp	x25, x26, [sp, #64]
    a648:	add	x26, sp, #0xd0
    a64c:	add	x25, sp, #0x160
    a650:	str	x3, [sp, #104]
    a654:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a658:	ldur	x1, [x19, #-48]
    a65c:	mov	x0, x21
    a660:	mov	x2, x20
    a664:	mov	x8, x27
    a668:	add	x23, sp, #0x190
    a66c:	add	x24, sp, #0x100
    a670:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a674:	ldur	x1, [x19, #-24]
    a678:	mov	x2, x20
    a67c:	mov	x8, x26
    a680:	mov	x0, x21
    a684:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a688:	mov	x0, x22
    a68c:	mov	x1, x28
    a690:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a694:	mov	x1, x27
    a698:	mov	x0, x25
    a69c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a6a0:	mov	x1, x26
    a6a4:	mov	x0, x23
    a6a8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a6ac:	ldr	x3, [sp, #104]
    a6b0:	mov	x0, x22
    a6b4:	mov	x1, x25
    a6b8:	mov	x2, x23
    a6bc:	mov	x8, x24
    a6c0:	bl	58d8 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE>
    a6c4:	ldp	x21, x22, [sp, #424]
    a6c8:	cmp	x21, x22
    a6cc:	b.eq	a6e8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0xe8>  // b.none
    a6d0:	mov	x0, x21
    a6d4:	add	x21, x21, #0x30
    a6d8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a6dc:	cmp	x22, x21
    a6e0:	b.ne	a6d0 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0xd0>  // b.any
    a6e4:	ldr	x22, [sp, #424]
    a6e8:	cbz	x22, a6f4 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0xf4>
    a6ec:	mov	x0, x22
    a6f0:	bl	0 <_ZdlPv>
    a6f4:	ldr	w0, [sp, #416]
    a6f8:	cmp	w0, #0x40
    a6fc:	b.ls	a70c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x10c>  // b.plast
    a700:	ldr	x0, [sp, #408]
    a704:	cbz	x0, a70c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x10c>
    a708:	bl	0 <_ZdaPv>
    a70c:	ldp	x21, x22, [sp, #376]
    a710:	cmp	x21, x22
    a714:	b.eq	a730 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x130>  // b.none
    a718:	mov	x0, x21
    a71c:	add	x21, x21, #0x30
    a720:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a724:	cmp	x22, x21
    a728:	b.ne	a718 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x118>  // b.any
    a72c:	ldr	x22, [sp, #376]
    a730:	cbz	x22, a73c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x13c>
    a734:	mov	x0, x22
    a738:	bl	0 <_ZdlPv>
    a73c:	ldr	w0, [sp, #368]
    a740:	cmp	w0, #0x40
    a744:	b.ls	a754 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x154>  // b.plast
    a748:	ldr	x0, [sp, #360]
    a74c:	cbz	x0, a754 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x154>
    a750:	bl	0 <_ZdaPv>
    a754:	ldp	x21, x22, [sp, #328]
    a758:	cmp	x21, x22
    a75c:	b.eq	a778 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x178>  // b.none
    a760:	mov	x0, x21
    a764:	add	x21, x21, #0x30
    a768:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a76c:	cmp	x22, x21
    a770:	b.ne	a760 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x160>  // b.any
    a774:	ldr	x22, [sp, #328]
    a778:	cbz	x22, a784 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x184>
    a77c:	mov	x0, x22
    a780:	bl	0 <_ZdlPv>
    a784:	ldr	w0, [sp, #320]
    a788:	cmp	w0, #0x40
    a78c:	b.ls	a79c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x19c>  // b.plast
    a790:	ldr	x0, [sp, #312]
    a794:	cbz	x0, a79c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x19c>
    a798:	bl	0 <_ZdaPv>
    a79c:	mov	x1, x24
    a7a0:	mov	x0, x23
    a7a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a7a8:	mov	x2, x20
    a7ac:	mov	x0, x19
    a7b0:	mov	x1, x23
    a7b4:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    a7b8:	ldp	x19, x20, [sp, #424]
    a7bc:	cmp	x19, x20
    a7c0:	b.eq	a7e0 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x1e0>  // b.none
    a7c4:	nop
    a7c8:	mov	x0, x19
    a7cc:	add	x19, x19, #0x30
    a7d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a7d4:	cmp	x20, x19
    a7d8:	b.ne	a7c8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x1c8>  // b.any
    a7dc:	ldr	x20, [sp, #424]
    a7e0:	cbz	x20, a7ec <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x1ec>
    a7e4:	mov	x0, x20
    a7e8:	bl	0 <_ZdlPv>
    a7ec:	ldr	w0, [sp, #416]
    a7f0:	cmp	w0, #0x40
    a7f4:	b.ls	a804 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x204>  // b.plast
    a7f8:	ldr	x0, [sp, #408]
    a7fc:	cbz	x0, a804 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x204>
    a800:	bl	0 <_ZdaPv>
    a804:	ldp	x19, x20, [sp, #280]
    a808:	cmp	x19, x20
    a80c:	b.eq	a828 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x228>  // b.none
    a810:	mov	x0, x19
    a814:	add	x19, x19, #0x30
    a818:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a81c:	cmp	x20, x19
    a820:	b.ne	a810 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x210>  // b.any
    a824:	ldr	x20, [sp, #280]
    a828:	cbz	x20, a834 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x234>
    a82c:	mov	x0, x20
    a830:	bl	0 <_ZdlPv>
    a834:	ldr	w0, [sp, #272]
    a838:	cmp	w0, #0x40
    a83c:	b.ls	a84c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x24c>  // b.plast
    a840:	ldr	x0, [sp, #264]
    a844:	cbz	x0, a84c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x24c>
    a848:	bl	0 <_ZdaPv>
    a84c:	ldp	x19, x20, [sp, #232]
    a850:	cmp	x19, x20
    a854:	b.eq	a870 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x270>  // b.none
    a858:	mov	x0, x19
    a85c:	add	x19, x19, #0x30
    a860:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a864:	cmp	x20, x19
    a868:	b.ne	a858 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x258>  // b.any
    a86c:	ldr	x20, [sp, #232]
    a870:	cbz	x20, a87c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x27c>
    a874:	mov	x0, x20
    a878:	bl	0 <_ZdlPv>
    a87c:	ldr	w0, [sp, #224]
    a880:	cmp	w0, #0x40
    a884:	b.ls	a894 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x294>  // b.plast
    a888:	ldr	x0, [sp, #216]
    a88c:	cbz	x0, a894 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x294>
    a890:	bl	0 <_ZdaPv>
    a894:	ldp	x19, x20, [sp, #184]
    a898:	cmp	x19, x20
    a89c:	b.eq	a8b8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2b8>  // b.none
    a8a0:	mov	x0, x19
    a8a4:	add	x19, x19, #0x30
    a8a8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a8ac:	cmp	x20, x19
    a8b0:	b.ne	a8a0 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2a0>  // b.any
    a8b4:	ldr	x20, [sp, #184]
    a8b8:	cbz	x20, a8c4 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2c4>
    a8bc:	mov	x0, x20
    a8c0:	bl	0 <_ZdlPv>
    a8c4:	ldr	w0, [sp, #176]
    a8c8:	cmp	w0, #0x40
    a8cc:	b.ls	a8dc <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2dc>  // b.plast
    a8d0:	ldr	x0, [sp, #168]
    a8d4:	cbz	x0, a8dc <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2dc>
    a8d8:	bl	0 <_ZdaPv>
    a8dc:	ldp	x19, x20, [sp, #136]
    a8e0:	cmp	x19, x20
    a8e4:	b.eq	a900 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x300>  // b.none
    a8e8:	mov	x0, x19
    a8ec:	add	x19, x19, #0x30
    a8f0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    a8f4:	cmp	x20, x19
    a8f8:	b.ne	a8e8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2e8>  // b.any
    a8fc:	ldr	x20, [sp, #136]
    a900:	cbz	x20, a90c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x30c>
    a904:	mov	x0, x20
    a908:	bl	0 <_ZdlPv>
    a90c:	ldr	w0, [sp, #128]
    a910:	cmp	w0, #0x40
    a914:	b.ls	a924 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x324>  // b.plast
    a918:	ldr	x0, [sp, #120]
    a91c:	cbz	x0, a924 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x324>
    a920:	bl	0 <_ZdaPv>
    a924:	ldp	x19, x20, [sp, #16]
    a928:	ldp	x21, x22, [sp, #32]
    a92c:	ldp	x23, x24, [sp, #48]
    a930:	ldp	x25, x26, [sp, #64]
    a934:	ldp	x27, x28, [sp, #80]
    a938:	ldp	x29, x30, [sp], #448
    a93c:	ret

000000000000a940 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>:
    a940:	stp	x29, x30, [sp, #-192]!
    a944:	mov	x29, sp
    a948:	stp	x23, x24, [sp, #48]
    a94c:	mov	x23, x0
    a950:	ldr	x0, [x1, #48]
    a954:	stp	x19, x20, [sp, #16]
    a958:	ldr	x19, [x2, #8]
    a95c:	stp	x1, x0, [x2, #8]
    a960:	ldr	x1, [x0]
    a964:	tst	w1, #0x4
    a968:	b.ne	ad88 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x448>  // b.any
    a96c:	ldurb	w1, [x0, #-8]
    a970:	cmp	w1, #0x4f
    a974:	b.ne	abf4 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x2b4>  // b.any
    a978:	add	x20, sp, #0x90
    a97c:	add	x24, sp, #0x70
    a980:	stp	x21, x22, [sp, #32]
    a984:	mov	x21, x2
    a988:	mov	w22, #0x18                  	// #24
    a98c:	stp	x25, x26, [sp, #64]
    a990:	stp	x27, x28, [sp, #80]
    a994:	stp	xzr, xzr, [sp, #112]
    a998:	str	xzr, [sp, #128]
    a99c:	nop
    a9a0:	ldurb	w1, [x0, #-8]
    a9a4:	cmp	w1, #0x4f
    a9a8:	b.eq	ac04 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x2c4>  // b.none
    a9ac:	ldr	x0, [x21, #8]
    a9b0:	ldr	x20, [x0, #48]
    a9b4:	str	x20, [x21, #16]
    a9b8:	ldr	x0, [x20]
    a9bc:	tst	w0, #0x4
    a9c0:	b.ne	ab50 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x210>  // b.any
    a9c4:	add	x23, sp, #0x90
    a9c8:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    a9cc:	add	x0, x23, #0x8
    a9d0:	mov	w22, #0x0                   	// #0
    a9d4:	movk	x24, #0xaaab
    a9d8:	str	x0, [sp, #104]
    a9dc:	nop
    a9e0:	ldurb	w0, [x20, #-8]
    a9e4:	ldr	x19, [sp, #112]
    a9e8:	cmp	w0, #0x4f
    a9ec:	b.ne	ab70 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x230>  // b.any
    a9f0:	mov	w0, #0x30                  	// #48
    a9f4:	sub	x20, x20, #0x18
    a9f8:	umull	x0, w22, w0
    a9fc:	add	x25, x19, x0
    aa00:	add	x1, x25, #0x8
    aa04:	ldr	x0, [x19, x0]
    aa08:	str	x0, [sp, #144]
    aa0c:	ldr	w0, [x1, #8]
    aa10:	str	w0, [sp, #160]
    aa14:	cmp	w0, #0x40
    aa18:	b.hi	ad1c <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3dc>  // b.pmore
    aa1c:	ldr	x0, [x25, #8]
    aa20:	str	x0, [sp, #152]
    aa24:	ldp	x0, x19, [x25, #24]
    aa28:	stp	xzr, xzr, [sp, #168]
    aa2c:	mov	x28, #0x0                   	// #0
    aa30:	str	xzr, [sp, #184]
    aa34:	sub	x19, x19, x0
    aa38:	asr	x0, x19, #4
    aa3c:	mul	x0, x0, x24
    aa40:	cbz	x0, aa60 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x120>
    aa44:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    aa48:	movk	x1, #0x2aa, lsl #48
    aa4c:	cmp	x0, x1
    aa50:	b.hi	ad84 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x444>  // b.pmore
    aa54:	mov	x0, x19
    aa58:	bl	0 <_Znwm>
    aa5c:	mov	x28, x0
    aa60:	dup	v0.2d, x28
    aa64:	add	x19, x28, x19
    aa68:	str	x19, [sp, #184]
    aa6c:	stur	q0, [sp, #168]
    aa70:	ldp	x27, x19, [x25, #24]
    aa74:	cmp	x27, x19
    aa78:	b.eq	aad4 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x194>  // b.none
    aa7c:	mov	x25, x27
    aa80:	mov	x26, x28
    aa84:	nop
    aa88:	mov	x1, x25
    aa8c:	mov	x0, x26
    aa90:	add	x25, x25, #0x30
    aa94:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    aa98:	cmp	x19, x25
    aa9c:	add	x26, x26, #0x30
    aaa0:	b.ne	aa88 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x148>  // b.any
    aaa4:	sub	x1, x19, #0x30
    aaa8:	mov	x0, #0xaaab                	// #43691
    aaac:	sub	x1, x1, x27
    aab0:	movk	x0, #0xaaaa, lsl #16
    aab4:	movk	x0, #0xaaaa, lsl #32
    aab8:	lsr	x1, x1, #4
    aabc:	movk	x0, #0xaaa, lsl #48
    aac0:	mul	x1, x1, x0
    aac4:	and	x1, x1, #0xfffffffffffffff
    aac8:	add	x1, x1, #0x1
    aacc:	add	x1, x1, x1, lsl #1
    aad0:	add	x28, x28, x1, lsl #4
    aad4:	mov	x0, x20
    aad8:	mov	x2, x21
    aadc:	mov	x1, x23
    aae0:	str	x28, [sp, #176]
    aae4:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    aae8:	ldp	x19, x20, [sp, #168]
    aaec:	cmp	x19, x20
    aaf0:	b.eq	ab10 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x1d0>  // b.none
    aaf4:	nop
    aaf8:	mov	x0, x19
    aafc:	add	x19, x19, #0x30
    ab00:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ab04:	cmp	x20, x19
    ab08:	b.ne	aaf8 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x1b8>  // b.any
    ab0c:	ldr	x20, [sp, #168]
    ab10:	cbz	x20, ab1c <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x1dc>
    ab14:	mov	x0, x20
    ab18:	bl	0 <_ZdlPv>
    ab1c:	ldr	w0, [sp, #160]
    ab20:	cmp	w0, #0x40
    ab24:	b.ls	ab34 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x1f4>  // b.plast
    ab28:	ldr	x0, [sp, #152]
    ab2c:	cbz	x0, ab34 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x1f4>
    ab30:	bl	0 <_ZdaPv>
    ab34:	ldr	x0, [x21, #16]
    ab38:	add	w22, w22, #0x1
    ab3c:	ldr	x20, [x0, #8]
    ab40:	ldr	x0, [x20]
    ab44:	str	x20, [x21, #16]
    ab48:	tst	w0, #0x4
    ab4c:	b.eq	a9e0 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0xa0>  // b.none
    ab50:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ab54:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ab58:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ab5c:	add	x3, x3, #0x0
    ab60:	add	x1, x1, #0x0
    ab64:	add	x0, x0, #0x0
    ab68:	mov	w2, #0x8b                  	// #139
    ab6c:	bl	0 <__assert_fail>
    ab70:	ldr	x22, [sp, #120]
    ab74:	cmp	x22, x19
    ab78:	b.eq	abdc <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x29c>  // b.none
    ab7c:	nop
    ab80:	ldp	x20, x21, [x19, #24]
    ab84:	cmp	x20, x21
    ab88:	b.eq	aba8 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x268>  // b.none
    ab8c:	nop
    ab90:	mov	x0, x20
    ab94:	add	x20, x20, #0x30
    ab98:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ab9c:	cmp	x21, x20
    aba0:	b.ne	ab90 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x250>  // b.any
    aba4:	ldr	x21, [x19, #24]
    aba8:	cbz	x21, abb4 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x274>
    abac:	mov	x0, x21
    abb0:	bl	0 <_ZdlPv>
    abb4:	ldr	w0, [x19, #16]
    abb8:	cmp	w0, #0x40
    abbc:	b.ls	abcc <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x28c>  // b.plast
    abc0:	ldr	x0, [x19, #8]
    abc4:	cbz	x0, abcc <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x28c>
    abc8:	bl	0 <_ZdaPv>
    abcc:	add	x19, x19, #0x30
    abd0:	cmp	x22, x19
    abd4:	b.ne	ab80 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x240>  // b.any
    abd8:	ldr	x19, [sp, #112]
    abdc:	cbz	x19, ad28 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3e8>
    abe0:	mov	x0, x19
    abe4:	bl	0 <_ZdlPv>
    abe8:	ldp	x21, x22, [sp, #32]
    abec:	ldp	x25, x26, [sp, #64]
    abf0:	ldp	x27, x28, [sp, #80]
    abf4:	ldp	x19, x20, [sp, #16]
    abf8:	ldp	x23, x24, [sp, #48]
    abfc:	ldp	x29, x30, [sp], #192
    ac00:	ret
    ac04:	ldur	w2, [x0, #-4]
    ac08:	sub	x1, x0, #0x18
    ac0c:	ubfx	x2, x2, #0, #28
    ac10:	cbz	w2, ad44 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x404>
    ac14:	umsubl	x3, w2, w22, x1
    ac18:	ldurb	w4, [x0, #-1]
    ac1c:	ldr	w1, [x0, #32]
    ac20:	umull	x1, w1, w22
    ac24:	tbnz	w4, #6, ace8 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3a8>
    ac28:	add	x0, x1, #0x8
    ac2c:	mov	x1, #0x0                   	// #0
    ac30:	add	x0, x3, x0
    ac34:	b	ac44 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x304>
    ac38:	add	x1, x1, #0x1
    ac3c:	cmp	w2, w1
    ac40:	b.eq	ad44 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x404>  // b.none
    ac44:	ldr	x5, [x0, x1, lsl #3]
    ac48:	mov	w4, w1
    ac4c:	cmp	x19, x5
    ac50:	b.ne	ac38 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x2f8>  // b.any
    ac54:	cmp	w2, w4
    ac58:	b.ls	ad64 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x424>  // b.plast
    ac5c:	add	x1, x1, x1, lsl #1
    ac60:	mov	x8, x20
    ac64:	mov	x2, x21
    ac68:	mov	x0, x23
    ac6c:	ldr	x1, [x3, x1, lsl #3]
    ac70:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ac74:	mov	x1, x20
    ac78:	mov	x0, x24
    ac7c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ac80:	ldp	x25, x26, [sp, #168]
    ac84:	cmp	x25, x26
    ac88:	b.eq	aca8 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x368>  // b.none
    ac8c:	nop
    ac90:	mov	x0, x25
    ac94:	add	x25, x25, #0x30
    ac98:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ac9c:	cmp	x26, x25
    aca0:	b.ne	ac90 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x350>  // b.any
    aca4:	ldr	x26, [sp, #168]
    aca8:	cbz	x26, acb4 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x374>
    acac:	mov	x0, x26
    acb0:	bl	0 <_ZdlPv>
    acb4:	ldr	w0, [sp, #160]
    acb8:	cmp	w0, #0x40
    acbc:	b.ls	accc <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x38c>  // b.plast
    acc0:	ldr	x0, [sp, #152]
    acc4:	cbz	x0, accc <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x38c>
    acc8:	bl	0 <_ZdaPv>
    accc:	ldr	x0, [x21, #16]
    acd0:	ldr	x0, [x0, #8]
    acd4:	ldr	x1, [x0]
    acd8:	str	x0, [x21, #16]
    acdc:	tst	w1, #0x4
    ace0:	b.eq	a9a0 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x60>  // b.none
    ace4:	b	ab50 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x210>
    ace8:	ldur	x3, [x0, #-32]
    acec:	add	x0, x1, #0x8
    acf0:	mov	x1, #0x0                   	// #0
    acf4:	add	x0, x3, x0
    acf8:	b	ad08 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3c8>
    acfc:	add	x1, x1, #0x1
    ad00:	cmp	w2, w1
    ad04:	b.eq	ad44 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x404>  // b.none
    ad08:	ldr	x5, [x0, x1, lsl #3]
    ad0c:	mov	w4, w1
    ad10:	cmp	x19, x5
    ad14:	b.ne	acfc <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3bc>  // b.any
    ad18:	b	ac54 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x314>
    ad1c:	ldr	x0, [sp, #104]
    ad20:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    ad24:	b	aa24 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0xe4>
    ad28:	ldp	x19, x20, [sp, #16]
    ad2c:	ldp	x21, x22, [sp, #32]
    ad30:	ldp	x23, x24, [sp, #48]
    ad34:	ldp	x25, x26, [sp, #64]
    ad38:	ldp	x27, x28, [sp, #80]
    ad3c:	ldp	x29, x30, [sp], #192
    ad40:	ret
    ad44:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ad48:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ad4c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ad50:	add	x3, x3, #0x0
    ad54:	add	x1, x1, #0x0
    ad58:	add	x0, x0, #0x0
    ad5c:	mov	w2, #0x3e4                 	// #996
    ad60:	bl	0 <__assert_fail>
    ad64:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ad68:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ad6c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ad70:	add	x3, x3, #0x0
    ad74:	add	x1, x1, #0x0
    ad78:	add	x0, x0, #0x0
    ad7c:	mov	w2, #0xadf                 	// #2783
    ad80:	bl	0 <__assert_fail>
    ad84:	bl	0 <_ZSt17__throw_bad_allocv>
    ad88:	stp	x21, x22, [sp, #32]
    ad8c:	stp	x25, x26, [sp, #64]
    ad90:	stp	x27, x28, [sp, #80]
    ad94:	b	ab50 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x210>

000000000000ad98 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE>:
    ad98:	stp	x29, x30, [sp, #-128]!
    ad9c:	mov	x29, sp
    ada0:	stp	x19, x20, [sp, #16]
    ada4:	stp	x21, x22, [sp, #32]
    ada8:	mov	x21, x0
    adac:	ldr	x19, [x0, #704]
    adb0:	stp	x23, x24, [sp, #48]
    adb4:	mov	x23, x1
    adb8:	stp	x25, x26, [sp, #64]
    adbc:	sub	x0, x19, #0x80
    adc0:	mov	x24, x2
    adc4:	str	x0, [x21, #704]
    adc8:	ldp	x20, x22, [x19, #-24]
    adcc:	cmp	x20, x22
    add0:	b.eq	adec <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x54>  // b.none
    add4:	nop
    add8:	ldr	x0, [x20], #8
    addc:	bl	0 <free>
    ade0:	cmp	x22, x20
    ade4:	b.ne	add8 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x40>  // b.any
    ade8:	ldur	x22, [x19, #-24]
    adec:	cbz	x22, adf8 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x60>
    adf0:	mov	x0, x22
    adf4:	bl	0 <_ZdlPv>
    adf8:	ldp	x20, x26, [x19, #-48]
    adfc:	cmp	x20, x26
    ae00:	b.eq	ae64 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xcc>  // b.none
    ae04:	nop
    ae08:	ldp	x25, x22, [x20, #24]
    ae0c:	cmp	x25, x22
    ae10:	b.eq	ae30 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x98>  // b.none
    ae14:	nop
    ae18:	mov	x0, x25
    ae1c:	add	x25, x25, #0x30
    ae20:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ae24:	cmp	x22, x25
    ae28:	b.ne	ae18 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x80>  // b.any
    ae2c:	ldr	x22, [x20, #24]
    ae30:	cbz	x22, ae3c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xa4>
    ae34:	mov	x0, x22
    ae38:	bl	0 <_ZdlPv>
    ae3c:	ldr	w0, [x20, #16]
    ae40:	cmp	w0, #0x40
    ae44:	b.ls	ae54 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xbc>  // b.plast
    ae48:	ldr	x0, [x20, #8]
    ae4c:	cbz	x0, ae54 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xbc>
    ae50:	bl	0 <_ZdaPv>
    ae54:	add	x20, x20, #0x30
    ae58:	cmp	x26, x20
    ae5c:	b.ne	ae08 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x70>  // b.any
    ae60:	ldur	x26, [x19, #-48]
    ae64:	cbz	x26, ae70 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xd8>
    ae68:	mov	x0, x26
    ae6c:	bl	0 <_ZdlPv>
    ae70:	ldur	x20, [x19, #-80]
    ae74:	sub	x19, x19, #0x60
    ae78:	cbz	x20, aee8 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x150>
    ae7c:	ldr	x1, [x20, #24]
    ae80:	mov	x22, x20
    ae84:	mov	x0, x19
    ae88:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ae8c:	ldp	x26, x25, [x22, #64]
    ae90:	ldr	x20, [x20, #16]
    ae94:	cmp	x26, x25
    ae98:	b.eq	aeb8 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x120>  // b.none
    ae9c:	nop
    aea0:	mov	x0, x26
    aea4:	add	x26, x26, #0x30
    aea8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    aeac:	cmp	x25, x26
    aeb0:	b.ne	aea0 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x108>  // b.any
    aeb4:	ldr	x25, [x22, #64]
    aeb8:	cbz	x25, aec4 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x12c>
    aebc:	mov	x0, x25
    aec0:	bl	0 <_ZdlPv>
    aec4:	ldr	w0, [x22, #56]
    aec8:	cmp	w0, #0x40
    aecc:	b.ls	aedc <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x144>  // b.plast
    aed0:	ldr	x0, [x22, #48]
    aed4:	cbz	x0, aedc <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x144>
    aed8:	bl	0 <_ZdaPv>
    aedc:	mov	x0, x22
    aee0:	bl	0 <_ZdlPv>
    aee4:	cbnz	x20, ae7c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xe4>
    aee8:	ldr	x0, [x21, #696]
    aeec:	ldr	x20, [x21, #704]
    aef0:	cmp	x20, x0
    aef4:	b.eq	af3c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x1a4>  // b.none
    aef8:	ldur	x0, [x20, #-104]
    aefc:	ands	x19, x0, #0xfffffffffffffff8
    af00:	b.eq	af24 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x18c>  // b.none
    af04:	ldr	x0, [x19]
    af08:	sub	x23, x20, #0x80
    af0c:	ldrb	w0, [x0, #8]
    af10:	cbnz	w0, afb0 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x218>
    af14:	ldrb	w0, [x19, #16]
    af18:	cmp	w0, #0x1d
    af1c:	b.eq	af64 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x1cc>  // b.none
    af20:	stur	xzr, [x20, #-104]
    af24:	ldp	x19, x20, [sp, #16]
    af28:	ldp	x21, x22, [sp, #32]
    af2c:	ldp	x23, x24, [sp, #48]
    af30:	ldp	x25, x26, [sp, #64]
    af34:	ldp	x29, x30, [sp], #128
    af38:	ret
    af3c:	cbz	x23, af48 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x1b0>
    af40:	ldrb	w0, [x23, #8]
    af44:	cbnz	w0, af8c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x1f4>
    af48:	str	xzr, [x21, #640]
    af4c:	ldp	x19, x20, [sp, #16]
    af50:	ldp	x21, x22, [sp, #32]
    af54:	ldp	x23, x24, [sp, #48]
    af58:	ldp	x25, x26, [sp, #64]
    af5c:	ldp	x29, x30, [sp], #128
    af60:	ret
    af64:	ldur	x1, [x19, #-72]
    af68:	cbz	x1, afdc <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x244>
    af6c:	ldrb	w0, [x1, #16]
    af70:	cmp	w0, #0x12
    af74:	b.ne	affc <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x264>  // b.any
    af78:	mov	x2, x23
    af7c:	mov	x0, x21
    af80:	bl	a940 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    af84:	stur	xzr, [x20, #-104]
    af88:	b	af24 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x18c>
    af8c:	mov	x1, x24
    af90:	add	x0, x21, #0x288
    af94:	ldr	x2, [x1], #8
    af98:	str	x2, [x21, #640]
    af9c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    afa0:	add	x1, x24, #0x18
    afa4:	add	x0, x21, #0x298
    afa8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    afac:	b	af24 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x18c>
    afb0:	add	x22, sp, #0x50
    afb4:	mov	x1, x24
    afb8:	mov	x0, x22
    afbc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    afc0:	mov	x2, x23
    afc4:	mov	x1, x22
    afc8:	mov	x0, x19
    afcc:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    afd0:	mov	x0, x22
    afd4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    afd8:	b	af14 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x17c>
    afdc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    afe0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    afe4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    afe8:	add	x3, x3, #0x0
    afec:	add	x1, x1, #0x0
    aff0:	add	x0, x0, #0x0
    aff4:	mov	w2, #0x5b                  	// #91
    aff8:	bl	0 <__assert_fail>
    affc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b000:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b004:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b008:	add	x3, x3, #0x0
    b00c:	add	x1, x1, #0x0
    b010:	add	x0, x0, #0x0
    b014:	mov	w2, #0xfa                  	// #250
    b018:	bl	0 <__assert_fail>
    b01c:	nop

000000000000b020 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE>:
    b020:	stp	x29, x30, [sp, #-176]!
    b024:	mov	x29, sp
    b028:	stp	x21, x22, [sp, #32]
    b02c:	mov	x22, x0
    b030:	mov	x0, x1
    b034:	stp	x19, x20, [sp, #16]
    b038:	mov	x19, x1
    b03c:	stp	x23, x24, [sp, #48]
    b040:	add	x24, sp, #0x80
    b044:	ldr	x20, [x22, #704]
    b048:	bl	0 <_ZNK4llvm5Value10getContextEv>
    b04c:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
    b050:	stp	xzr, xzr, [sp, #80]
    b054:	ldr	w2, [x19, #20]
    b058:	mov	w1, #0x1                   	// #1
    b05c:	str	w1, [sp, #96]
    b060:	stp	xzr, xzr, [sp, #104]
    b064:	mov	x23, x0
    b068:	ubfx	x1, x2, #0, #28
    b06c:	str	xzr, [sp, #120]
    b070:	cbnz	w1, b138 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x118>
    b074:	add	x1, sp, #0x50
    b078:	mov	x0, x24
    b07c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b080:	mov	x2, x24
    b084:	mov	x1, x23
    b088:	mov	x0, x22
    b08c:	bl	ad98 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE>
    b090:	ldp	x19, x20, [sp, #152]
    b094:	cmp	x19, x20
    b098:	b.eq	b0b8 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x98>  // b.none
    b09c:	nop
    b0a0:	mov	x0, x19
    b0a4:	add	x19, x19, #0x30
    b0a8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b0ac:	cmp	x20, x19
    b0b0:	b.ne	b0a0 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x80>  // b.any
    b0b4:	ldr	x20, [sp, #152]
    b0b8:	cbz	x20, b0c4 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xa4>
    b0bc:	mov	x0, x20
    b0c0:	bl	0 <_ZdlPv>
    b0c4:	ldr	w0, [sp, #144]
    b0c8:	cmp	w0, #0x40
    b0cc:	b.ls	b0dc <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xbc>  // b.plast
    b0d0:	ldr	x0, [sp, #136]
    b0d4:	cbz	x0, b0dc <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xbc>
    b0d8:	bl	0 <_ZdaPv>
    b0dc:	ldp	x19, x20, [sp, #104]
    b0e0:	cmp	x19, x20
    b0e4:	b.eq	b100 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xe0>  // b.none
    b0e8:	mov	x0, x19
    b0ec:	add	x19, x19, #0x30
    b0f0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b0f4:	cmp	x20, x19
    b0f8:	b.ne	b0e8 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xc8>  // b.any
    b0fc:	ldr	x20, [sp, #104]
    b100:	cbz	x20, b10c <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xec>
    b104:	mov	x0, x20
    b108:	bl	0 <_ZdlPv>
    b10c:	ldr	w0, [sp, #96]
    b110:	cmp	w0, #0x40
    b114:	b.ls	b124 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x104>  // b.plast
    b118:	ldr	x0, [sp, #88]
    b11c:	cbz	x0, b124 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x104>
    b120:	bl	0 <_ZdaPv>
    b124:	ldp	x19, x20, [sp, #16]
    b128:	ldp	x21, x22, [sp, #32]
    b12c:	ldp	x23, x24, [sp, #48]
    b130:	ldp	x29, x30, [sp], #176
    b134:	ret
    b138:	mov	w0, w1
    b13c:	ubfiz	x1, x1, #2, #28
    b140:	sub	x1, x0, x1
    b144:	sub	x2, x20, #0x80
    b148:	mov	x0, x22
    b14c:	mov	x8, x24
    b150:	stp	x25, x26, [sp, #64]
    b154:	ldr	x1, [x19, x1, lsl #3]
    b158:	ldr	x23, [x1]
    b15c:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    b160:	ldr	x0, [sp, #128]
    b164:	str	x0, [sp, #80]
    b168:	ldr	w0, [sp, #96]
    b16c:	cmp	w0, #0x40
    b170:	b.hi	b224 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x204>  // b.pmore
    b174:	ldp	x26, x25, [sp, #104]
    b178:	ldr	w0, [sp, #144]
    b17c:	ldur	q0, [sp, #152]
    b180:	str	w0, [sp, #96]
    b184:	ldr	x0, [sp, #136]
    b188:	str	x0, [sp, #88]
    b18c:	ldr	x0, [sp, #168]
    b190:	str	x0, [sp, #120]
    b194:	str	wzr, [sp, #144]
    b198:	cmp	x26, x25
    b19c:	stp	xzr, xzr, [sp, #152]
    b1a0:	mov	x19, x26
    b1a4:	str	xzr, [sp, #168]
    b1a8:	stur	q0, [sp, #104]
    b1ac:	b.eq	b208 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1e8>  // b.none
    b1b0:	ldp	x21, x20, [x19, #24]
    b1b4:	cmp	x21, x20
    b1b8:	b.eq	b1d8 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1b8>  // b.none
    b1bc:	nop
    b1c0:	mov	x0, x21
    b1c4:	add	x21, x21, #0x30
    b1c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b1cc:	cmp	x20, x21
    b1d0:	b.ne	b1c0 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1a0>  // b.any
    b1d4:	ldr	x20, [x19, #24]
    b1d8:	cbz	x20, b1e4 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1c4>
    b1dc:	mov	x0, x20
    b1e0:	bl	0 <_ZdlPv>
    b1e4:	ldr	w0, [x19, #16]
    b1e8:	cmp	w0, #0x40
    b1ec:	b.ls	b1fc <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1dc>  // b.plast
    b1f0:	ldr	x0, [x19, #8]
    b1f4:	cbz	x0, b1fc <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1dc>
    b1f8:	bl	0 <_ZdaPv>
    b1fc:	add	x19, x19, #0x30
    b200:	cmp	x25, x19
    b204:	b.ne	b1b0 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x190>  // b.any
    b208:	cbz	x26, b214 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1f4>
    b20c:	mov	x0, x26
    b210:	bl	0 <_ZdlPv>
    b214:	mov	x0, x24
    b218:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b21c:	ldp	x25, x26, [sp, #64]
    b220:	b	b074 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x54>
    b224:	ldr	x0, [sp, #88]
    b228:	cbz	x0, b174 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x154>
    b22c:	bl	0 <_ZdaPv>
    b230:	b	b174 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x154>
    b234:	nop

000000000000b238 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE>:
    b238:	stp	x29, x30, [sp, #-128]!
    b23c:	mov	x29, sp
    b240:	stp	x19, x20, [sp, #16]
    b244:	mov	x20, x0
    b248:	ldr	w0, [x1, #20]
    b24c:	stp	x23, x24, [sp, #48]
    b250:	mov	x19, x1
    b254:	ldur	x23, [x1, #-24]
    b258:	stp	x21, x22, [sp, #32]
    b25c:	ubfx	x0, x0, #0, #28
    b260:	ldr	x22, [x20, #704]
    b264:	sub	x22, x22, #0x80
    b268:	cbz	x23, b278 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x40>
    b26c:	ldrb	w1, [x23, #16]
    b270:	cmp	w1, #0x12
    b274:	b.ne	b3a0 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x168>  // b.any
    b278:	cmp	w0, #0x1
    b27c:	b.eq	b31c <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xe4>  // b.none
    b280:	str	x25, [sp, #64]
    b284:	cmp	w0, #0x3
    b288:	b.ne	b3a8 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x170>  // b.any
    b28c:	ldur	x1, [x19, #-72]
    b290:	add	x24, sp, #0x50
    b294:	mov	x8, x24
    b298:	mov	x2, x22
    b29c:	mov	x0, x20
    b2a0:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    b2a4:	ldr	w21, [sp, #96]
    b2a8:	cmp	w21, #0x40
    b2ac:	b.ls	b398 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x160>  // b.plast
    b2b0:	add	x0, x24, #0x8
    b2b4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    b2b8:	sub	w21, w21, w0
    b2bc:	mov	w25, #0x0                   	// #0
    b2c0:	cmp	w21, #0x40
    b2c4:	b.ls	b340 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x108>  // b.plast
    b2c8:	ldp	x21, x24, [sp, #104]
    b2cc:	cmp	x21, x24
    b2d0:	b.eq	b2f0 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xb8>  // b.none
    b2d4:	nop
    b2d8:	mov	x0, x21
    b2dc:	add	x21, x21, #0x30
    b2e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b2e4:	cmp	x24, x21
    b2e8:	b.ne	b2d8 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xa0>  // b.any
    b2ec:	ldr	x24, [sp, #104]
    b2f0:	cbz	x24, b2fc <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xc4>
    b2f4:	mov	x0, x24
    b2f8:	bl	0 <_ZdlPv>
    b2fc:	ldr	w0, [sp, #96]
    b300:	cmp	w0, #0x40
    b304:	b.ls	b314 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xdc>  // b.plast
    b308:	ldr	x0, [sp, #88]
    b30c:	cbz	x0, b314 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xdc>
    b310:	bl	0 <_ZdaPv>
    b314:	cbnz	w25, b354 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x11c>
    b318:	ldr	x25, [sp, #64]
    b31c:	mov	x2, x22
    b320:	mov	x1, x23
    b324:	mov	x0, x20
    b328:	bl	a940 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    b32c:	ldp	x19, x20, [sp, #16]
    b330:	ldp	x21, x22, [sp, #32]
    b334:	ldp	x23, x24, [sp, #48]
    b338:	ldp	x29, x30, [sp], #128
    b33c:	ret
    b340:	ldr	x0, [sp, #88]
    b344:	ldr	x0, [x0]
    b348:	cmp	x0, #0x0
    b34c:	cset	w25, eq  // eq = none
    b350:	b	b2c8 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x90>
    b354:	ldr	w0, [x19, #20]
    b358:	ubfx	x0, x0, #0, #28
    b35c:	cmp	w0, #0x3
    b360:	b.ne	b3c8 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x190>  // b.any
    b364:	ldur	x23, [x19, #-48]
    b368:	cbz	x23, b318 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xe0>
    b36c:	ldrb	w0, [x23, #16]
    b370:	cmp	w0, #0x12
    b374:	b.eq	b318 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xe0>  // b.none
    b378:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b37c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b380:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b384:	add	x3, x3, #0x0
    b388:	add	x1, x1, #0x0
    b38c:	add	x0, x0, #0x0
    b390:	mov	w2, #0x134                 	// #308
    b394:	bl	0 <__assert_fail>
    b398:	ldr	x0, [sp, #88]
    b39c:	b	b348 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x110>
    b3a0:	str	x25, [sp, #64]
    b3a4:	b	b378 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x140>
    b3a8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b3ac:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b3b0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b3b4:	add	x3, x3, #0x0
    b3b8:	add	x1, x1, #0x0
    b3bc:	add	x0, x0, #0x0
    b3c0:	mov	w2, #0xbf7                 	// #3063
    b3c4:	bl	0 <__assert_fail>
    b3c8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b3cc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b3d0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b3d4:	add	x3, x3, #0x0
    b3d8:	add	x1, x1, #0x0
    b3dc:	add	x0, x0, #0x0
    b3e0:	mov	w2, #0xc03                 	// #3075
    b3e4:	bl	0 <__assert_fail>

000000000000b3e8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE>:
    b3e8:	stp	x29, x30, [sp, #-416]!
    b3ec:	mov	x29, sp
    b3f0:	stp	x23, x24, [sp, #48]
    b3f4:	mov	x24, x0
    b3f8:	ldr	w0, [x1, #20]
    b3fc:	stp	x19, x20, [sp, #16]
    b400:	stp	x25, x26, [sp, #64]
    b404:	ubfx	x0, x0, #0, #28
    b408:	ldr	x25, [x24, #704]
    b40c:	cbz	w0, b9fc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x614>
    b410:	mov	x20, x1
    b414:	ldrb	w1, [x1, #23]
    b418:	sub	x25, x25, #0x80
    b41c:	tbnz	w1, #6, b870 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x488>
    b420:	mov	w1, #0x18                  	// #24
    b424:	umsubl	x0, w0, w1, x20
    b428:	ldr	x1, [x0]
    b42c:	add	x0, sp, #0x110
    b430:	mov	x2, x25
    b434:	mov	x8, x0
    b438:	str	x0, [sp, #152]
    b43c:	mov	x0, x24
    b440:	ldr	x3, [x1]
    b444:	str	x3, [sp, #120]
    b448:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    b44c:	ldr	w0, [x20, #20]
    b450:	ubfx	x1, x0, #1, #27
    b454:	ubfx	x0, x0, #0, #28
    b458:	sub	w2, w1, #0x1
    b45c:	str	x2, [sp, #144]
    b460:	cbz	x2, b820 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x438>
    b464:	add	x2, sp, #0x140
    b468:	str	x2, [sp, #112]
    b46c:	add	x2, sp, #0x148
    b470:	add	x3, sp, #0xb0
    b474:	mov	x19, #0x0                   	// #0
    b478:	stp	x21, x22, [sp, #32]
    b47c:	stp	x27, x28, [sp, #80]
    b480:	str	x3, [sp, #128]
    b484:	str	x2, [sp, #168]
    b488:	add	x2, sp, #0xb8
    b48c:	str	x2, [sp, #160]
    b490:	str	w19, [sp, #140]
    b494:	sub	w1, w1, #0x1
    b498:	cmp	w1, w19
    b49c:	b.ls	ba24 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x63c>  // b.plast
    b4a0:	add	x19, x19, #0x1
    b4a4:	mov	w22, w19
    b4a8:	lsl	w3, w19, #1
    b4ac:	cmp	w0, w3
    b4b0:	b.ls	ba04 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x61c>  // b.plast
    b4b4:	ldrb	w1, [x20, #23]
    b4b8:	tbz	w1, #6, b878 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x490>
    b4bc:	ldur	x1, [x20, #-8]
    b4c0:	mov	w4, #0x18                  	// #24
    b4c4:	ldr	x8, [sp, #112]
    b4c8:	umull	x3, w3, w4
    b4cc:	mov	x0, x24
    b4d0:	mov	x2, x25
    b4d4:	ldr	x1, [x1, x3]
    b4d8:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    b4dc:	ldr	w0, [sp, #288]
    b4e0:	ldr	x1, [sp, #272]
    b4e4:	str	x1, [sp, #176]
    b4e8:	str	w0, [sp, #192]
    b4ec:	cmp	w0, #0x40
    b4f0:	b.hi	b898 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x4b0>  // b.pmore
    b4f4:	ldr	x0, [sp, #280]
    b4f8:	str	x0, [sp, #184]
    b4fc:	ldp	x27, x21, [sp, #296]
    b500:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    b504:	movk	x2, #0xaaab
    b508:	stp	xzr, xzr, [sp, #200]
    b50c:	mov	x23, #0x0                   	// #0
    b510:	str	xzr, [sp, #216]
    b514:	sub	x26, x21, x27
    b518:	asr	x0, x26, #4
    b51c:	mul	x0, x0, x2
    b520:	cbz	x0, b544 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x15c>
    b524:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    b528:	movk	x2, #0x2aa, lsl #48
    b52c:	cmp	x0, x2
    b530:	b.hi	b9f8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x610>  // b.pmore
    b534:	mov	x0, x26
    b538:	bl	0 <_Znwm>
    b53c:	ldp	x27, x21, [sp, #296]
    b540:	mov	x23, x0
    b544:	dup	v0.2d, x23
    b548:	add	x1, x23, x26
    b54c:	str	x1, [sp, #216]
    b550:	cmp	x27, x21
    b554:	stur	q0, [sp, #200]
    b558:	b.eq	b5b4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x1cc>  // b.none
    b55c:	mov	x26, x27
    b560:	mov	x28, x23
    b564:	nop
    b568:	mov	x1, x26
    b56c:	mov	x0, x28
    b570:	add	x26, x26, #0x30
    b574:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b578:	cmp	x21, x26
    b57c:	add	x28, x28, #0x30
    b580:	b.ne	b568 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x180>  // b.any
    b584:	sub	x1, x21, #0x30
    b588:	mov	x0, #0xaaab                	// #43691
    b58c:	sub	x1, x1, x27
    b590:	movk	x0, #0xaaaa, lsl #16
    b594:	movk	x0, #0xaaaa, lsl #32
    b598:	lsr	x1, x1, #4
    b59c:	movk	x0, #0xaaa, lsl #48
    b5a0:	mul	x1, x1, x0
    b5a4:	and	x1, x1, #0xfffffffffffffff
    b5a8:	add	x1, x1, #0x1
    b5ac:	add	x1, x1, x1, lsl #1
    b5b0:	add	x23, x23, x1, lsl #4
    b5b4:	ldr	w0, [sp, #336]
    b5b8:	ldr	x1, [sp, #320]
    b5bc:	str	x23, [sp, #208]
    b5c0:	str	x1, [sp, #224]
    b5c4:	cmp	w0, #0x40
    b5c8:	str	w0, [sp, #240]
    b5cc:	b.hi	b8ac <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x4c4>  // b.pmore
    b5d0:	ldr	x0, [sp, #328]
    b5d4:	str	x0, [sp, #232]
    b5d8:	ldp	x23, x21, [sp, #344]
    b5dc:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    b5e0:	movk	x3, #0xaaab
    b5e4:	stp	xzr, xzr, [sp, #248]
    b5e8:	mov	x28, #0x0                   	// #0
    b5ec:	str	xzr, [sp, #264]
    b5f0:	sub	x27, x21, x23
    b5f4:	asr	x0, x27, #4
    b5f8:	mul	x0, x0, x3
    b5fc:	cbz	x0, b620 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x238>
    b600:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    b604:	movk	x2, #0x2aa, lsl #48
    b608:	cmp	x0, x2
    b60c:	b.hi	b9f8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x610>  // b.pmore
    b610:	mov	x0, x27
    b614:	bl	0 <_Znwm>
    b618:	ldp	x23, x21, [sp, #344]
    b61c:	mov	x28, x0
    b620:	dup	v0.2d, x28
    b624:	add	x1, x28, x27
    b628:	str	x1, [sp, #264]
    b62c:	cmp	x23, x21
    b630:	stur	q0, [sp, #248]
    b634:	b.eq	b690 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x2a8>  // b.none
    b638:	mov	x27, x23
    b63c:	mov	x0, x28
    b640:	mov	x1, x27
    b644:	str	x0, [sp, #104]
    b648:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b64c:	add	x27, x27, #0x30
    b650:	ldr	x0, [sp, #104]
    b654:	cmp	x21, x27
    b658:	add	x0, x0, #0x30
    b65c:	b.ne	b640 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x258>  // b.any
    b660:	sub	x1, x21, #0x30
    b664:	mov	x0, #0xaaab                	// #43691
    b668:	sub	x1, x1, x23
    b66c:	movk	x0, #0xaaaa, lsl #16
    b670:	movk	x0, #0xaaaa, lsl #32
    b674:	lsr	x1, x1, #4
    b678:	movk	x0, #0xaaa, lsl #48
    b67c:	mul	x1, x1, x0
    b680:	and	x1, x1, #0xfffffffffffffff
    b684:	add	x1, x1, #0x1
    b688:	add	x1, x1, x1, lsl #1
    b68c:	add	x28, x28, x1, lsl #4
    b690:	ldp	x2, x0, [sp, #120]
    b694:	add	x23, sp, #0x170
    b698:	mov	x8, x23
    b69c:	add	x1, sp, #0xe0
    b6a0:	str	x28, [sp, #256]
    b6a4:	bl	930 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>
    b6a8:	ldr	w21, [sp, #384]
    b6ac:	cmp	w21, #0x40
    b6b0:	b.ls	b8bc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x4d4>  // b.plast
    b6b4:	add	x0, x23, #0x8
    b6b8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    b6bc:	sub	w21, w21, w0
    b6c0:	cmp	w21, #0x40
    b6c4:	b.ls	b884 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x49c>  // b.plast
    b6c8:	mov	w21, #0x0                   	// #0
    b6cc:	ldp	x28, x23, [sp, #392]
    b6d0:	cmp	x28, x23
    b6d4:	b.eq	b6f0 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x308>  // b.none
    b6d8:	mov	x0, x28
    b6dc:	add	x28, x28, #0x30
    b6e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b6e4:	cmp	x23, x28
    b6e8:	b.ne	b6d8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x2f0>  // b.any
    b6ec:	ldr	x23, [sp, #392]
    b6f0:	cbz	x23, b6fc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x314>
    b6f4:	mov	x0, x23
    b6f8:	bl	0 <_ZdlPv>
    b6fc:	ldr	w0, [sp, #384]
    b700:	cmp	w0, #0x40
    b704:	b.ls	b714 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x32c>  // b.plast
    b708:	ldr	x0, [sp, #376]
    b70c:	cbz	x0, b714 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x32c>
    b710:	bl	0 <_ZdaPv>
    b714:	ldp	x28, x23, [sp, #248]
    b718:	cmp	x28, x23
    b71c:	b.eq	b738 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x350>  // b.none
    b720:	mov	x0, x28
    b724:	add	x28, x28, #0x30
    b728:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b72c:	cmp	x23, x28
    b730:	b.ne	b720 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x338>  // b.any
    b734:	ldr	x23, [sp, #248]
    b738:	cbz	x23, b744 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x35c>
    b73c:	mov	x0, x23
    b740:	bl	0 <_ZdlPv>
    b744:	ldr	w0, [sp, #240]
    b748:	cmp	w0, #0x40
    b74c:	b.ls	b75c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x374>  // b.plast
    b750:	ldr	x0, [sp, #232]
    b754:	cbz	x0, b75c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x374>
    b758:	bl	0 <_ZdaPv>
    b75c:	ldp	x23, x28, [sp, #200]
    b760:	cmp	x23, x28
    b764:	b.eq	b780 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x398>  // b.none
    b768:	mov	x0, x23
    b76c:	add	x23, x23, #0x30
    b770:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b774:	cmp	x28, x23
    b778:	b.ne	b768 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x380>  // b.any
    b77c:	ldr	x28, [sp, #200]
    b780:	cbz	x28, b78c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x3a4>
    b784:	mov	x0, x28
    b788:	bl	0 <_ZdlPv>
    b78c:	ldr	w0, [sp, #192]
    b790:	cmp	w0, #0x40
    b794:	b.ls	b7a4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x3bc>  // b.plast
    b798:	ldr	x0, [sp, #184]
    b79c:	cbz	x0, b7a4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x3bc>
    b7a0:	bl	0 <_ZdaPv>
    b7a4:	cbz	w21, b8c4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x4dc>
    b7a8:	ldp	x21, x28, [sp, #344]
    b7ac:	cmp	x21, x28
    b7b0:	b.eq	b7d0 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x3e8>  // b.none
    b7b4:	nop
    b7b8:	mov	x0, x21
    b7bc:	add	x21, x21, #0x30
    b7c0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b7c4:	cmp	x28, x21
    b7c8:	b.ne	b7b8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x3d0>  // b.any
    b7cc:	ldr	x28, [sp, #344]
    b7d0:	cbz	x28, b7dc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x3f4>
    b7d4:	mov	x0, x28
    b7d8:	bl	0 <_ZdlPv>
    b7dc:	ldr	w0, [sp, #336]
    b7e0:	cmp	w0, #0x40
    b7e4:	b.ls	b7f4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x40c>  // b.plast
    b7e8:	ldr	x0, [sp, #328]
    b7ec:	cbz	x0, b7f4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x40c>
    b7f0:	bl	0 <_ZdaPv>
    b7f4:	ldr	w0, [x20, #20]
    b7f8:	ubfx	x1, x0, #1, #27
    b7fc:	ubfx	x0, x0, #0, #28
    b800:	sub	w2, w1, #0x1
    b804:	cmp	w2, w22
    b808:	b.cc	b9d8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5f0>  // b.lo, b.ul, b.last
    b80c:	ldr	x2, [sp, #144]
    b810:	cmp	x2, x19
    b814:	b.ne	b490 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0xa8>  // b.any
    b818:	ldp	x21, x22, [sp, #32]
    b81c:	ldp	x27, x28, [sp, #80]
    b820:	cmp	w0, #0x1
    b824:	b.ls	b9fc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x614>  // b.plast
    b828:	ldrb	w1, [x20, #23]
    b82c:	tbz	w1, #6, b9cc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5e4>
    b830:	ldur	x0, [x20, #-8]
    b834:	ldr	x19, [x0, #24]
    b838:	cbz	x19, ba8c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x6a4>
    b83c:	ldrb	w0, [x19, #16]
    b840:	cmp	w0, #0x12
    b844:	b.eq	b93c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x554>  // b.none
    b848:	stp	x21, x22, [sp, #32]
    b84c:	stp	x27, x28, [sp, #80]
    b850:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b854:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b858:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b85c:	add	x3, x3, #0x0
    b860:	add	x1, x1, #0x0
    b864:	add	x0, x0, #0x0
    b868:	mov	w2, #0x108                 	// #264
    b86c:	bl	0 <__assert_fail>
    b870:	ldur	x0, [x20, #-8]
    b874:	b	b428 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x40>
    b878:	mov	w1, #0x18                  	// #24
    b87c:	umsubl	x1, w0, w1, x20
    b880:	b	b4c0 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0xd8>
    b884:	ldr	x0, [sp, #376]
    b888:	ldr	x0, [x0]
    b88c:	cmp	x0, #0x0
    b890:	cset	w21, eq  // eq = none
    b894:	b	b6cc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x2e4>
    b898:	ldr	x0, [sp, #152]
    b89c:	add	x1, x0, #0x8
    b8a0:	ldr	x0, [sp, #160]
    b8a4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    b8a8:	b	b4fc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x114>
    b8ac:	ldr	x1, [sp, #168]
    b8b0:	add	x0, sp, #0xe8
    b8b4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    b8b8:	b	b5d8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x1f0>
    b8bc:	ldr	x0, [sp, #376]
    b8c0:	b	b88c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x4a4>
    b8c4:	ldr	w0, [x20, #20]
    b8c8:	ldr	w3, [sp, #140]
    b8cc:	ubfx	x2, x0, #1, #27
    b8d0:	ubfx	x1, x0, #0, #28
    b8d4:	sub	w0, w2, #0x1
    b8d8:	cmp	w0, w3
    b8dc:	b.hi	b9b4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5cc>  // b.pmore
    b8e0:	cmn	w3, #0x2
    b8e4:	mov	w0, #0x0                   	// #0
    b8e8:	b.ne	ba4c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x664>  // b.any
    b8ec:	cmp	w2, w0
    b8f0:	b.ls	ba6c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x684>  // b.plast
    b8f4:	lsl	w0, w0, #1
    b8f8:	add	w0, w0, #0x1
    b8fc:	cmp	w1, w0
    b900:	b.ls	ba04 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x61c>  // b.plast
    b904:	ldrb	w2, [x20, #23]
    b908:	tbz	w2, #6, b9a8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5c0>
    b90c:	ldur	x1, [x20, #-8]
    b910:	mov	w2, #0x18                  	// #24
    b914:	umull	x0, w0, w2
    b918:	ldr	x19, [x1, x0]
    b91c:	cbz	x19, ba94 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x6ac>
    b920:	ldrb	w0, [x19, #16]
    b924:	cmp	w0, #0x12
    b928:	b.ne	b850 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x468>  // b.any
    b92c:	ldr	x0, [sp, #112]
    b930:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b934:	ldp	x21, x22, [sp, #32]
    b938:	ldp	x27, x28, [sp, #80]
    b93c:	mov	x1, x19
    b940:	mov	x2, x25
    b944:	mov	x0, x24
    b948:	bl	a940 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    b94c:	ldp	x19, x20, [sp, #296]
    b950:	cmp	x19, x20
    b954:	b.eq	b970 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x588>  // b.none
    b958:	mov	x0, x19
    b95c:	add	x19, x19, #0x30
    b960:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b964:	cmp	x20, x19
    b968:	b.ne	b958 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x570>  // b.any
    b96c:	ldr	x20, [sp, #296]
    b970:	cbz	x20, b97c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x594>
    b974:	mov	x0, x20
    b978:	bl	0 <_ZdlPv>
    b97c:	ldr	w0, [sp, #288]
    b980:	cmp	w0, #0x40
    b984:	b.ls	b994 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5ac>  // b.plast
    b988:	ldr	x0, [sp, #280]
    b98c:	cbz	x0, b994 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5ac>
    b990:	bl	0 <_ZdaPv>
    b994:	ldp	x19, x20, [sp, #16]
    b998:	ldp	x23, x24, [sp, #48]
    b99c:	ldp	x25, x26, [sp, #64]
    b9a0:	ldp	x29, x30, [sp], #416
    b9a4:	ret
    b9a8:	mov	w2, #0x18                  	// #24
    b9ac:	umsubl	x1, w1, w2, x20
    b9b0:	b	b910 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x528>
    b9b4:	ldr	w0, [sp, #140]
    b9b8:	cmn	w0, #0x2
    b9bc:	b.eq	ba44 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x65c>  // b.none
    b9c0:	ldr	w0, [sp, #140]
    b9c4:	add	w0, w0, #0x1
    b9c8:	b	b8ec <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x504>
    b9cc:	mov	w1, #0x18                  	// #24
    b9d0:	umsubl	x0, w0, w1, x20
    b9d4:	b	b834 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x44c>
    b9d8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b9dc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b9e0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    b9e4:	add	x3, x3, #0x0
    b9e8:	add	x1, x1, #0x0
    b9ec:	add	x0, x0, #0x0
    b9f0:	mov	w2, #0xcd2                 	// #3282
    b9f4:	bl	0 <__assert_fail>
    b9f8:	bl	0 <_ZSt17__throw_bad_allocv>
    b9fc:	stp	x21, x22, [sp, #32]
    ba00:	stp	x27, x28, [sp, #80]
    ba04:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ba08:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ba0c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ba10:	add	x3, x3, #0x0
    ba14:	add	x1, x1, #0x0
    ba18:	add	x0, x0, #0x0
    ba1c:	mov	w2, #0xdbe                 	// #3518
    ba20:	bl	0 <__assert_fail>
    ba24:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ba28:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ba2c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ba30:	add	x3, x3, #0x0
    ba34:	add	x1, x1, #0x0
    ba38:	add	x0, x0, #0x0
    ba3c:	mov	w2, #0xc78                 	// #3192
    ba40:	bl	0 <__assert_fail>
    ba44:	mov	w0, #0x0                   	// #0
    ba48:	b	b8ec <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x504>
    ba4c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ba50:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ba54:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ba58:	add	x3, x3, #0x0
    ba5c:	add	x1, x1, #0x0
    ba60:	add	x0, x0, #0x0
    ba64:	mov	w2, #0xc7f                 	// #3199
    ba68:	bl	0 <__assert_fail>
    ba6c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ba70:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ba74:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ba78:	add	x3, x3, #0x0
    ba7c:	add	x1, x1, #0x0
    ba80:	add	x0, x0, #0x0
    ba84:	mov	w2, #0xd7c                 	// #3452
    ba88:	bl	0 <__assert_fail>
    ba8c:	stp	x21, x22, [sp, #32]
    ba90:	stp	x27, x28, [sp, #80]
    ba94:	bl	a0 <_ZN4llvm3isaINS_10BasicBlockEPNS_5ValueEEEbRKT0_.isra.0.part.0>

000000000000ba98 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE>:
    ba98:	stp	x29, x30, [sp, #-112]!
    ba9c:	mov	x29, sp
    baa0:	ldr	w3, [x1, #20]
    baa4:	stp	x19, x20, [sp, #16]
    baa8:	stp	x21, x22, [sp, #32]
    baac:	ubfx	x3, x3, #0, #28
    bab0:	ldr	x22, [x0, #704]
    bab4:	str	x23, [sp, #48]
    bab8:	cbz	w3, bb60 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0xc8>
    babc:	mov	x19, x0
    bac0:	ldrb	w0, [x1, #23]
    bac4:	sub	x22, x22, #0x80
    bac8:	tbnz	w0, #6, bb58 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0xc0>
    bacc:	mov	w0, #0x18                  	// #24
    bad0:	umsubl	x3, w3, w0, x1
    bad4:	ldr	x1, [x3]
    bad8:	add	x8, sp, #0x40
    badc:	mov	x2, x22
    bae0:	mov	x0, x19
    bae4:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    bae8:	ldp	x20, x21, [sp, #88]
    baec:	ldr	x23, [sp, #64]
    baf0:	cmp	x20, x21
    baf4:	b.eq	bb10 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x78>  // b.none
    baf8:	mov	x0, x20
    bafc:	add	x20, x20, #0x30
    bb00:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bb04:	cmp	x21, x20
    bb08:	b.ne	baf8 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x60>  // b.any
    bb0c:	ldr	x21, [sp, #88]
    bb10:	cbz	x21, bb1c <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x84>
    bb14:	mov	x0, x21
    bb18:	bl	0 <_ZdlPv>
    bb1c:	ldr	w0, [sp, #80]
    bb20:	cmp	w0, #0x40
    bb24:	b.ls	bb34 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x9c>  // b.plast
    bb28:	ldr	x0, [sp, #72]
    bb2c:	cbz	x0, bb34 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x9c>
    bb30:	bl	0 <_ZdaPv>
    bb34:	mov	x2, x22
    bb38:	mov	x1, x23
    bb3c:	mov	x0, x19
    bb40:	bl	a940 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    bb44:	ldp	x19, x20, [sp, #16]
    bb48:	ldp	x21, x22, [sp, #32]
    bb4c:	ldr	x23, [sp, #48]
    bb50:	ldp	x29, x30, [sp], #112
    bb54:	ret
    bb58:	ldur	x3, [x1, #-8]
    bb5c:	b	bad4 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x3c>
    bb60:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bb64:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bb68:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bb6c:	add	x3, x3, #0x0
    bb70:	add	x1, x1, #0x0
    bb74:	add	x0, x0, #0x0
    bb78:	mov	w2, #0xe45                 	// #3653
    bb7c:	bl	0 <__assert_fail>

000000000000bb80 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE>:
    bb80:	stp	x29, x30, [sp, #-192]!
    bb84:	mov	x29, sp
    bb88:	ldr	x3, [x1]
    bb8c:	stp	x19, x20, [sp, #16]
    bb90:	stp	x21, x22, [sp, #32]
    bb94:	stp	x23, x24, [sp, #48]
    bb98:	stp	x25, x26, [sp, #64]
    bb9c:	stp	x27, x28, [sp, #80]
    bba0:	ldr	x24, [x0, #704]
    bba4:	cbz	x3, be1c <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x29c>
    bba8:	mov	x21, x1
    bbac:	ldrb	w1, [x3, #8]
    bbb0:	cmp	w1, #0xf
    bbb4:	b.ne	be60 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x2e0>  // b.any
    bbb8:	ldur	x1, [x21, #-24]
    bbbc:	sub	x24, x24, #0x80
    bbc0:	add	x22, sp, #0x90
    bbc4:	mov	x23, x0
    bbc8:	mov	x8, x22
    bbcc:	mov	x2, x24
    bbd0:	ldr	x25, [x3, #24]
    bbd4:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    bbd8:	ldr	w19, [sp, #160]
    bbdc:	cmp	w19, #0x40
    bbe0:	b.ls	bce4 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x164>  // b.plast
    bbe4:	add	x0, x22, #0x8
    bbe8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    bbec:	sub	w19, w19, w0
    bbf0:	cmp	w19, #0x40
    bbf4:	b.hi	beb4 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x334>  // b.pmore
    bbf8:	ldr	x0, [sp, #152]
    bbfc:	ldr	x26, [x0]
    bc00:	mov	x0, x22
    bc04:	add	x19, x23, #0x58
    bc08:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bc0c:	mov	x0, x19
    bc10:	mov	x1, x25
    bc14:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bc18:	add	x20, x0, #0x7
    bc1c:	and	w27, w1, #0xff
    bc20:	mov	x1, x25
    bc24:	mov	x0, x19
    bc28:	lsr	x20, x20, #3
    bc2c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    bc30:	mov	w1, w0
    bc34:	cbz	w0, be40 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x2c0>
    bc38:	sub	x19, x20, #0x1
    bc3c:	add	x19, x19, x1
    bc40:	udiv	x19, x19, x1
    bc44:	mul	x19, x19, x1
    bc48:	cbnz	w27, be3c <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x2bc>
    bc4c:	mul	w0, w26, w19
    bc50:	mov	w28, #0x1                   	// #1
    bc54:	cmp	w0, #0x0
    bc58:	csel	w20, w0, w28, ne  // ne = any
    bc5c:	mov	x0, x20
    bc60:	bl	0 <malloc>
    bc64:	mov	x27, x0
    bc68:	cbz	x0, be80 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x300>
    bc6c:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    bc70:	ldr	x0, [x0]
    bc74:	ldrb	w0, [x0]
    bc78:	cbnz	w0, bcec <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x16c>
    bc7c:	stp	x27, xzr, [sp, #96]
    bc80:	str	w28, [sp, #112]
    bc84:	stp	xzr, xzr, [sp, #120]
    bc88:	str	xzr, [sp, #136]
    bc8c:	add	x19, sp, #0x60
    bc90:	mov	x0, x22
    bc94:	mov	x1, x19
    bc98:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bc9c:	mov	x2, x24
    bca0:	mov	x1, x22
    bca4:	mov	x0, x21
    bca8:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    bcac:	mov	x0, x22
    bcb0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bcb4:	ldrb	w0, [x21, #16]
    bcb8:	cmp	w0, #0x37
    bcbc:	b.eq	bd38 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x1b8>  // b.none
    bcc0:	mov	x0, x19
    bcc4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bcc8:	ldp	x19, x20, [sp, #16]
    bccc:	ldp	x21, x22, [sp, #32]
    bcd0:	ldp	x23, x24, [sp, #48]
    bcd4:	ldp	x25, x26, [sp, #64]
    bcd8:	ldp	x27, x28, [sp, #80]
    bcdc:	ldp	x29, x30, [sp], #192
    bce0:	ret
    bce4:	ldr	x26, [sp, #152]
    bce8:	b	bc00 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x80>
    bcec:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bcf0:	add	x0, x0, #0x0
    bcf4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    bcf8:	tst	w0, #0xff
    bcfc:	b.ne	bd64 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x1e4>  // b.any
    bd00:	mov	w0, #0x1                   	// #1
    bd04:	stp	x27, xzr, [sp, #96]
    bd08:	str	w0, [sp, #112]
    bd0c:	stp	xzr, xzr, [sp, #120]
    bd10:	str	xzr, [sp, #136]
    bd14:	cbnz	x27, bc8c <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x10c>
    bd18:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bd1c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bd20:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bd24:	add	x3, x3, #0x0
    bd28:	add	x1, x1, #0x0
    bd2c:	add	x0, x0, #0x0
    bd30:	mov	w2, #0x40d                 	// #1037
    bd34:	bl	0 <__assert_fail>
    bd38:	ldr	x2, [x23, #704]
    bd3c:	str	x27, [sp, #144]
    bd40:	sub	x0, x2, #0x18
    bd44:	ldp	x1, x3, [x2, #-16]
    bd48:	cmp	x1, x3
    bd4c:	b.eq	be04 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x284>  // b.none
    bd50:	str	x27, [x1]
    bd54:	ldur	x0, [x2, #-16]
    bd58:	add	x0, x0, #0x8
    bd5c:	stur	x0, [x2, #-16]
    bd60:	b	bcc0 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x140>
    bd64:	bl	0 <_ZN4llvm4dbgsEv>
    bd68:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bd6c:	add	x1, x1, #0x0
    bd70:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bd74:	mov	x28, x0
    bd78:	mov	w3, #0x0                   	// #0
    bd7c:	mov	w2, #0x0                   	// #0
    bd80:	mov	x0, x25
    bd84:	mov	x1, x28
    bd88:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    bd8c:	mov	x0, x28
    bd90:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bd94:	add	x1, x1, #0x0
    bd98:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bd9c:	mov	w1, w19
    bda0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    bda4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bda8:	add	x1, x1, #0x0
    bdac:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bdb0:	mov	w1, w26
    bdb4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    bdb8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bdbc:	add	x1, x1, #0x0
    bdc0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bdc4:	mov	x1, x20
    bdc8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    bdcc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bdd0:	add	x1, x1, #0x0
    bdd4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bdd8:	mov	x1, x27
    bddc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    bde0:	ldp	x3, x2, [x0, #16]
    bde4:	mov	x1, x0
    bde8:	cmp	x2, x3
    bdec:	b.cs	be10 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x290>  // b.hs, b.nlast
    bdf0:	add	x0, x2, #0x1
    bdf4:	str	x0, [x1, #24]
    bdf8:	mov	w0, #0xa                   	// #10
    bdfc:	strb	w0, [x2]
    be00:	b	bd00 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x180>
    be04:	mov	x2, x22
    be08:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    be0c:	b	bcc0 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x140>
    be10:	mov	w1, #0xa                   	// #10
    be14:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    be18:	b	bd00 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x180>
    be1c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    be20:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    be24:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    be28:	add	x3, x3, #0x0
    be2c:	add	x1, x1, #0x0
    be30:	add	x0, x0, #0x0
    be34:	mov	w2, #0x69                  	// #105
    be38:	bl	0 <__assert_fail>
    be3c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    be40:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    be44:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    be48:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    be4c:	add	x3, x3, #0x0
    be50:	add	x1, x1, #0x0
    be54:	add	x0, x0, #0x0
    be58:	mov	w2, #0xc7                  	// #199
    be5c:	bl	0 <__assert_fail>
    be60:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    be64:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    be68:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    be6c:	add	x3, x3, #0x0
    be70:	add	x1, x1, #0x0
    be74:	add	x0, x0, #0x0
    be78:	mov	w2, #0x108                 	// #264
    be7c:	bl	0 <__assert_fail>
    be80:	mov	w1, w28
    be84:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    be88:	add	x0, x0, #0x0
    be8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    be90:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    be94:	ldr	x0, [x0]
    be98:	ldrb	w0, [x0]
    be9c:	cbnz	w0, bcec <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x16c>
    bea0:	stp	xzr, xzr, [sp, #96]
    bea4:	str	w28, [sp, #112]
    bea8:	stp	xzr, xzr, [sp, #120]
    beac:	str	xzr, [sp, #136]
    beb0:	b	bd18 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x198>
    beb4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    beb8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bebc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    bec0:	add	x3, x3, #0x0
    bec4:	add	x1, x1, #0x0
    bec8:	add	x0, x0, #0x0
    becc:	mov	w2, #0x657                 	// #1623
    bed0:	bl	0 <__assert_fail>
    bed4:	nop

000000000000bed8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE>:
    bed8:	stp	x29, x30, [sp, #-208]!
    bedc:	mov	x29, sp
    bee0:	stp	x8, x1, [sp, #144]
    bee4:	ldr	x1, [x1]
    bee8:	stp	x0, x4, [sp, #112]
    beec:	ldr	x0, [x3]
    bef0:	stp	x19, x20, [sp, #16]
    bef4:	stp	x27, x28, [sp, #80]
    bef8:	str	x0, [sp, #104]
    befc:	ldrb	w0, [x1, #8]
    bf00:	ldp	x19, x28, [x2]
    bf04:	stp	x21, x22, [sp, #32]
    bf08:	cmp	w0, #0xf
    bf0c:	b.ne	c3d8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x500>  // b.any
    bf10:	ldr	x0, [sp, #104]
    bf14:	cmp	x0, x19
    bf18:	b.eq	c2a0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x3c8>  // b.none
    bf1c:	add	x0, sp, #0xa0
    bf20:	str	x0, [sp, #128]
    bf24:	add	x0, sp, #0xa8
    bf28:	str	x0, [sp, #136]
    bf2c:	ldr	x0, [sp, #112]
    bf30:	mov	x22, #0x0                   	// #0
    bf34:	stp	x23, x24, [sp, #48]
    bf38:	add	x24, x0, #0x58
    bf3c:	stp	x25, x26, [sp, #64]
    bf40:	b	bf60 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x88>
    bf44:	cmp	w0, #0xd
    bf48:	mov	x28, #0x0                   	// #0
    bf4c:	b.eq	c248 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x370>  // b.none
    bf50:	ldr	x0, [sp, #104]
    bf54:	add	x19, x19, #0x18
    bf58:	cmp	x0, x19
    bf5c:	b.eq	c018 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x140>  // b.none
    bf60:	asr	x21, x28, #2
    bf64:	ubfx	x23, x28, #2, #1
    bf68:	tbnz	w28, #2, c090 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x1b8>
    bf6c:	ands	x4, x28, #0xfffffffffffffff8
    bf70:	b.eq	c090 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x1b8>  // b.none
    bf74:	mov	x27, x4
    bf78:	mov	x1, x4
    bf7c:	mov	x0, x24
    bf80:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
    bf84:	ldr	x20, [x19]
    bf88:	mov	x23, x0
    bf8c:	cbz	x20, c3c8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x4f0>
    bf90:	ldrb	w0, [x20, #16]
    bf94:	cmp	w0, #0xd
    bf98:	b.ne	c3b8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x4e0>  // b.any
    bf9c:	ldr	w25, [x20, #32]
    bfa0:	cmp	w25, #0x40
    bfa4:	b.ls	c210 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x338>  // b.plast
    bfa8:	add	x0, x20, #0x18
    bfac:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    bfb0:	sub	w25, w25, w0
    bfb4:	cmp	w25, #0x40
    bfb8:	b.hi	c308 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x430>  // b.pmore
    bfbc:	ldr	x0, [x20, #24]
    bfc0:	ldr	x1, [x0]
    bfc4:	ldr	w0, [x23, #12]
    bfc8:	ubfx	x0, x0, #0, #31
    bfcc:	cmp	w0, w1
    bfd0:	b.ls	c398 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x4c0>  // b.plast
    bfd4:	add	x1, x23, w1, uxtw #3
    bfd8:	ldr	x0, [x1, #16]
    bfdc:	add	x22, x22, x0
    bfe0:	tbz	w21, #0, c1b4 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2dc>
    bfe4:	ldrb	w0, [x27, #8]
    bfe8:	mov	w1, #0xfd                  	// #253
    bfec:	sub	w2, w0, #0xe
    bff0:	tst	w2, w1
    bff4:	b.ne	bf44 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x6c>  // b.any
    bff8:	ldr	x3, [x27, #24]
    bffc:	tst	x3, #0x7
    c000:	b.ne	c2c8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x3f0>  // b.any
    c004:	ldr	x0, [sp, #104]
    c008:	add	x19, x19, #0x18
    c00c:	orr	x28, x3, #0x4
    c010:	cmp	x0, x19
    c014:	b.ne	bf60 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x88>  // b.any
    c018:	ldp	x23, x24, [sp, #48]
    c01c:	ldp	x25, x26, [sp, #64]
    c020:	mov	w5, #0x1                   	// #1
    c024:	ldp	x20, x1, [sp, #144]
    c028:	add	x19, sp, #0xa0
    c02c:	ldp	x0, x2, [sp, #112]
    c030:	mov	x8, x19
    c034:	mov	x4, x20
    c038:	mov	x3, x20
    c03c:	stp	xzr, xzr, [x4, #24]!
    c040:	str	xzr, [x4, #16]
    c044:	str	xzr, [x3], #8
    c048:	str	xzr, [x20, #8]
    c04c:	str	w5, [x3, #8]
    c050:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    c054:	ldr	x1, [sp, #160]
    c058:	mov	x0, x19
    c05c:	add	x1, x1, x22
    c060:	str	x1, [x20]
    c064:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c068:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    c06c:	ldr	x0, [x0]
    c070:	ldrb	w0, [x0]
    c074:	cbnz	w0, c264 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x38c>
    c078:	ldp	x19, x20, [sp, #16]
    c07c:	ldp	x21, x22, [sp, #32]
    c080:	ldp	x27, x28, [sp, #80]
    c084:	ldr	x0, [sp, #144]
    c088:	ldp	x29, x30, [sp], #208
    c08c:	ret
    c090:	ldp	x0, x2, [sp, #112]
    c094:	ldr	x1, [x19]
    c098:	ldr	x8, [sp, #128]
    c09c:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    c0a0:	ldr	x26, [x19]
    c0a4:	ldr	x0, [x26]
    c0a8:	cbz	x0, c388 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x4b0>
    c0ac:	ldrb	w2, [x0, #8]
    c0b0:	cmp	w2, #0xb
    c0b4:	b.ne	c368 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x490>  // b.any
    c0b8:	ldr	w0, [x0, #8]
    c0bc:	lsr	w0, w0, #8
    c0c0:	cmp	w0, #0x20
    c0c4:	b.eq	c218 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x340>  // b.none
    c0c8:	cmp	w0, #0x40
    c0cc:	b.ne	c348 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x470>  // b.any
    c0d0:	ldr	w20, [sp, #176]
    c0d4:	cmp	w20, #0x40
    c0d8:	b.ls	c208 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x330>  // b.plast
    c0dc:	ldr	x0, [sp, #136]
    c0e0:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    c0e4:	sub	w20, w20, w0
    c0e8:	cmp	w20, #0x40
    c0ec:	b.hi	c308 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x430>  // b.pmore
    c0f0:	ldr	x0, [sp, #168]
    c0f4:	ldr	x20, [x0]
    c0f8:	and	w25, w21, #0x1
    c0fc:	tbz	w21, #0, c1e8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x310>
    c100:	ands	x21, x28, #0xfffffffffffffff8
    c104:	b.eq	c1e8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x310>  // b.none
    c108:	mov	x26, x21
    c10c:	mov	x27, x21
    c110:	mov	x1, x26
    c114:	mov	x0, x24
    c118:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c11c:	add	x2, x0, #0x7
    c120:	and	w28, w1, #0xff
    c124:	mov	x1, x26
    c128:	mov	x0, x24
    c12c:	lsr	x26, x2, #3
    c130:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    c134:	mov	w1, w0
    c138:	cbz	w0, c328 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x450>
    c13c:	sub	x2, x26, #0x1
    c140:	mul	x20, x20, x1
    c144:	add	x2, x2, x1
    c148:	udiv	x2, x2, x1
    c14c:	mul	x20, x2, x20
    c150:	cbnz	w28, c2e8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x410>
    c154:	add	x22, x22, x20
    c158:	ldp	x28, x20, [sp, #184]
    c15c:	cmp	x28, x20
    c160:	b.eq	c180 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2a8>  // b.none
    c164:	nop
    c168:	mov	x0, x28
    c16c:	add	x28, x28, #0x30
    c170:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c174:	cmp	x20, x28
    c178:	b.ne	c168 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x290>  // b.any
    c17c:	ldr	x20, [sp, #184]
    c180:	cbz	x20, c18c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2b4>
    c184:	mov	x0, x20
    c188:	bl	0 <_ZdlPv>
    c18c:	ldr	w0, [sp, #176]
    c190:	cmp	w0, #0x40
    c194:	b.ls	c1a4 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2cc>  // b.plast
    c198:	ldr	x0, [sp, #168]
    c19c:	cbz	x0, c1a4 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2cc>
    c1a0:	bl	0 <_ZdaPv>
    c1a4:	cbz	w25, c1ac <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2d4>
    c1a8:	cbnz	x21, bfe4 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x10c>
    c1ac:	cbnz	x23, c2a8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x3d0>
    c1b0:	ldr	x20, [x19]
    c1b4:	mov	x0, x27
    c1b8:	mov	x1, x20
    c1bc:	bl	0 <_ZNK4llvm13CompositeType14getTypeAtIndexEPKNS_5ValueE>
    c1c0:	mov	x27, x0
    c1c4:	cbnz	x0, bfe4 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x10c>
    c1c8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c1cc:	add	x3, x3, #0x0
    c1d0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c1d4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c1d8:	add	x1, x1, #0x0
    c1dc:	add	x0, x0, #0x0
    c1e0:	mov	w2, #0x69                  	// #105
    c1e4:	bl	0 <__assert_fail>
    c1e8:	cbnz	x23, c2a8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x3d0>
    c1ec:	and	x21, x28, #0xfffffffffffffff8
    c1f0:	mov	x1, x26
    c1f4:	mov	x0, x21
    c1f8:	mov	x27, x21
    c1fc:	bl	0 <_ZNK4llvm13CompositeType14getTypeAtIndexEPKNS_5ValueE>
    c200:	mov	x26, x0
    c204:	b	c110 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x238>
    c208:	ldr	x20, [sp, #168]
    c20c:	b	c0f8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x220>
    c210:	ldr	x1, [x20, #24]
    c214:	b	bfc4 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0xec>
    c218:	ldr	w20, [sp, #176]
    c21c:	cmp	w20, #0x40
    c220:	b.ls	c258 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x380>  // b.plast
    c224:	ldr	x0, [sp, #136]
    c228:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    c22c:	sub	w20, w20, w0
    c230:	cmp	w20, #0x40
    c234:	b.hi	c308 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x430>  // b.pmore
    c238:	ldr	x0, [sp, #168]
    c23c:	ldr	x20, [x0]
    c240:	sxtw	x20, w20
    c244:	b	c0f8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x220>
    c248:	tst	x27, #0x7
    c24c:	b.ne	c2c8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x3f0>  // b.any
    c250:	and	x28, x27, #0xfffffffffffffffb
    c254:	b	bf50 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x78>
    c258:	ldr	x20, [sp, #168]
    c25c:	sxtw	x20, w20
    c260:	b	c0f8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x220>
    c264:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c268:	add	x0, x0, #0x0
    c26c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    c270:	tst	w0, #0xff
    c274:	b.eq	c078 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x1a0>  // b.none
    c278:	bl	0 <_ZN4llvm4dbgsEv>
    c27c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c280:	add	x1, x1, #0x0
    c284:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c288:	mov	x1, x22
    c28c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    c290:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c294:	add	x1, x1, #0x0
    c298:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c29c:	b	c078 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x1a0>
    c2a0:	mov	x22, #0x0                   	// #0
    c2a4:	b	c020 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x148>
    c2a8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c2ac:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c2b0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c2b4:	add	x3, x3, #0x0
    c2b8:	add	x1, x1, #0x0
    c2bc:	add	x0, x0, #0x0
    c2c0:	mov	w2, #0xc3                  	// #195
    c2c4:	bl	0 <__assert_fail>
    c2c8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c2cc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c2d0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c2d4:	add	x3, x3, #0x0
    c2d8:	add	x1, x1, #0x0
    c2dc:	add	x0, x0, #0x0
    c2e0:	mov	w2, #0xb2                  	// #178
    c2e4:	bl	0 <__assert_fail>
    c2e8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c2ec:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c2f0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c2f4:	add	x3, x3, #0x0
    c2f8:	add	x1, x1, #0x0
    c2fc:	add	x0, x0, #0x0
    c300:	mov	w2, #0x7d                  	// #125
    c304:	bl	0 <__assert_fail>
    c308:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c30c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c310:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c314:	add	x3, x3, #0x0
    c318:	add	x1, x1, #0x0
    c31c:	add	x0, x0, #0x0
    c320:	mov	w2, #0x657                 	// #1623
    c324:	bl	0 <__assert_fail>
    c328:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c32c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c330:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c334:	add	x3, x3, #0x0
    c338:	add	x1, x1, #0x0
    c33c:	add	x0, x0, #0x0
    c340:	mov	w2, #0xc7                  	// #199
    c344:	bl	0 <__assert_fail>
    c348:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c34c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c350:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c354:	add	x3, x3, #0x0
    c358:	add	x1, x1, #0x0
    c35c:	add	x0, x0, #0x0
    c360:	mov	w2, #0x430                 	// #1072
    c364:	bl	0 <__assert_fail>
    c368:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c36c:	add	x3, x3, #0x0
    c370:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c374:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c378:	add	x1, x1, #0x0
    c37c:	add	x0, x0, #0x0
    c380:	mov	w2, #0x108                 	// #264
    c384:	bl	0 <__assert_fail>
    c388:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c38c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c390:	add	x3, x3, #0x0
    c394:	b	c1d4 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2fc>
    c398:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c39c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c3a0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c3a4:	add	x3, x3, #0x0
    c3a8:	add	x1, x1, #0x0
    c3ac:	add	x0, x0, #0x0
    c3b0:	mov	w2, #0x260                 	// #608
    c3b4:	bl	0 <__assert_fail>
    c3b8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c3bc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c3c0:	add	x3, x3, #0x0
    c3c4:	b	c374 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x49c>
    c3c8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c3cc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c3d0:	add	x3, x3, #0x0
    c3d4:	b	c1d4 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2fc>
    c3d8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c3dc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c3e0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c3e4:	add	x3, x3, #0x0
    c3e8:	add	x1, x1, #0x0
    c3ec:	add	x0, x0, #0x0
    c3f0:	mov	w2, #0x419                 	// #1049
    c3f4:	stp	x23, x24, [sp, #48]
    c3f8:	stp	x25, x26, [sp, #64]
    c3fc:	bl	0 <__assert_fail>

000000000000c400 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE>:
    c400:	stp	x29, x30, [sp, #-224]!
    c404:	mov	x29, sp
    c408:	stp	x19, x20, [sp, #16]
    c40c:	mov	x19, x1
    c410:	ldr	w1, [x1, #20]
    c414:	stp	x21, x22, [sp, #32]
    c418:	ldr	x21, [x0, #704]
    c41c:	str	x23, [sp, #48]
    c420:	ubfx	x1, x1, #0, #28
    c424:	cbz	w1, c584 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x184>
    c428:	mov	x20, x0
    c42c:	mov	w0, w1
    c430:	ubfiz	x1, x1, #2, #28
    c434:	sub	x21, x21, #0x80
    c438:	sub	x1, x0, x1
    c43c:	ldrb	w0, [x19, #16]
    c440:	cmp	w0, #0x17
    c444:	ldr	x23, [x19, x1, lsl #3]
    c448:	b.hi	c548 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x148>  // b.pmore
    c44c:	cmp	w0, #0x5
    c450:	b.ne	c550 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x150>  // b.any
    c454:	ldrh	w0, [x19, #18]
    c458:	cmp	w0, #0x22
    c45c:	b.ne	c550 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x150>  // b.any
    c460:	mov	x0, x19
    c464:	bl	0 <_ZNK4llvm11GEPOperator20getSourceElementTypeEv>
    c468:	ldrb	w1, [x19, #23]
    c46c:	tbz	w1, #6, c570 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x170>
    c470:	ldur	x6, [x19, #-8]
    c474:	tst	x0, #0x7
    c478:	add	x1, x6, #0x18
    c47c:	mov	x9, #0xffffffffffffffff    	// #-1
    c480:	b.ne	c5a4 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x1a4>  // b.any
    c484:	ldr	w3, [x19, #20]
    c488:	mov	w7, #0x18                  	// #24
    c48c:	orr	x2, x0, #0x4
    c490:	stp	x1, x2, [sp, #128]
    c494:	add	x22, sp, #0xb0
    c498:	ubfx	x5, x3, #0, #28
    c49c:	mov	x8, x22
    c4a0:	mov	x4, x21
    c4a4:	add	x3, sp, #0x40
    c4a8:	mov	x0, x20
    c4ac:	mov	x1, x23
    c4b0:	umaddl	x5, w5, w7, x6
    c4b4:	add	x2, sp, #0x60
    c4b8:	stp	x5, xzr, [sp, #152]
    c4bc:	ldp	x6, x7, [sp, #128]
    c4c0:	str	x9, [sp, #80]
    c4c4:	ldp	x10, x11, [sp, #152]
    c4c8:	stp	x10, x11, [sp, #64]
    c4cc:	stp	x6, x7, [sp, #96]
    c4d0:	str	x9, [sp, #112]
    c4d4:	bl	bed8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE>
    c4d8:	mov	x0, x19
    c4dc:	mov	x2, x21
    c4e0:	mov	x1, x22
    c4e4:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    c4e8:	ldp	x19, x20, [sp, #200]
    c4ec:	cmp	x19, x20
    c4f0:	b.eq	c510 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x110>  // b.none
    c4f4:	nop
    c4f8:	mov	x0, x19
    c4fc:	add	x19, x19, #0x30
    c500:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c504:	cmp	x20, x19
    c508:	b.ne	c4f8 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0xf8>  // b.any
    c50c:	ldr	x20, [sp, #200]
    c510:	cbz	x20, c51c <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x11c>
    c514:	mov	x0, x20
    c518:	bl	0 <_ZdlPv>
    c51c:	ldr	w0, [sp, #192]
    c520:	cmp	w0, #0x40
    c524:	b.ls	c534 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x134>  // b.plast
    c528:	ldr	x0, [sp, #184]
    c52c:	cbz	x0, c534 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x134>
    c530:	bl	0 <_ZdaPv>
    c534:	ldp	x19, x20, [sp, #16]
    c538:	ldp	x21, x22, [sp, #32]
    c53c:	ldr	x23, [sp, #48]
    c540:	ldp	x29, x30, [sp], #224
    c544:	ret
    c548:	cmp	w0, #0x3a
    c54c:	b.eq	c460 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x60>  // b.none
    c550:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c554:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c558:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c55c:	add	x3, x3, #0x0
    c560:	add	x1, x1, #0x0
    c564:	add	x0, x0, #0x0
    c568:	mov	w2, #0x101                 	// #257
    c56c:	bl	0 <__assert_fail>
    c570:	ldr	w5, [x19, #20]
    c574:	mov	w6, #0x18                  	// #24
    c578:	ubfx	x5, x5, #0, #28
    c57c:	umsubl	x6, w5, w6, x19
    c580:	b	c474 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x74>
    c584:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c588:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c58c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c590:	add	x3, x3, #0x0
    c594:	add	x1, x1, #0x0
    c598:	add	x0, x0, #0x0
    c59c:	mov	w2, #0x47c                 	// #1148
    c5a0:	bl	0 <__assert_fail>
    c5a4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c5a8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c5ac:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c5b0:	add	x3, x3, #0x0
    c5b4:	add	x1, x1, #0x0
    c5b8:	add	x0, x0, #0x0
    c5bc:	mov	w2, #0xb2                  	// #178
    c5c0:	bl	0 <__assert_fail>
    c5c4:	nop

000000000000c5c8 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE>:
    c5c8:	stp	x29, x30, [sp, #-208]!
    c5cc:	mov	x29, sp
    c5d0:	stp	x19, x20, [sp, #16]
    c5d4:	mov	x19, x1
    c5d8:	add	x8, sp, #0x70
    c5dc:	stp	x21, x22, [sp, #32]
    c5e0:	add	x22, sp, #0x40
    c5e4:	add	x20, sp, #0xa0
    c5e8:	ldur	x1, [x1, #-24]
    c5ec:	ldr	x21, [x0, #704]
    c5f0:	str	x23, [sp, #48]
    c5f4:	mov	x23, x0
    c5f8:	sub	x21, x21, #0x80
    c5fc:	mov	x2, x21
    c600:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    c604:	ldr	x3, [x19]
    c608:	mov	w4, #0x1                   	// #1
    c60c:	ldr	x2, [sp, #112]
    c610:	mov	x0, x23
    c614:	mov	x1, x22
    c618:	stp	xzr, xzr, [sp, #64]
    c61c:	str	w4, [sp, #80]
    c620:	stp	xzr, xzr, [sp, #88]
    c624:	str	xzr, [sp, #104]
    c628:	bl	0 <_ZN4llvm15ExecutionEngine19LoadValueFromMemoryERNS_12GenericValueEPS1_PNS_4TypeE>
    c62c:	mov	x0, x20
    c630:	mov	x1, x22
    c634:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c638:	mov	x2, x21
    c63c:	mov	x1, x20
    c640:	mov	x0, x19
    c644:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    c648:	ldp	x20, x21, [sp, #184]
    c64c:	cmp	x20, x21
    c650:	b.eq	c670 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xa8>  // b.none
    c654:	nop
    c658:	mov	x0, x20
    c65c:	add	x20, x20, #0x30
    c660:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c664:	cmp	x21, x20
    c668:	b.ne	c658 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x90>  // b.any
    c66c:	ldr	x21, [sp, #184]
    c670:	cbz	x21, c67c <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xb4>
    c674:	mov	x0, x21
    c678:	bl	0 <_ZdlPv>
    c67c:	ldr	w0, [sp, #176]
    c680:	cmp	w0, #0x40
    c684:	b.ls	c694 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xcc>  // b.plast
    c688:	ldr	x0, [sp, #168]
    c68c:	cbz	x0, c694 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xcc>
    c690:	bl	0 <_ZdaPv>
    c694:	ldrb	w0, [x19, #18]
    c698:	tbz	w0, #0, c6a8 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xe0>
    c69c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c6a0:	ldrb	w0, [x0]
    c6a4:	cbnz	w0, c750 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x188>
    c6a8:	ldp	x19, x20, [sp, #88]
    c6ac:	cmp	x19, x20
    c6b0:	b.eq	c6d0 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x108>  // b.none
    c6b4:	nop
    c6b8:	mov	x0, x19
    c6bc:	add	x19, x19, #0x30
    c6c0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c6c4:	cmp	x20, x19
    c6c8:	b.ne	c6b8 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xf0>  // b.any
    c6cc:	ldr	x20, [sp, #88]
    c6d0:	cbz	x20, c6dc <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x114>
    c6d4:	mov	x0, x20
    c6d8:	bl	0 <_ZdlPv>
    c6dc:	ldr	w0, [sp, #80]
    c6e0:	cmp	w0, #0x40
    c6e4:	b.ls	c6f4 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x12c>  // b.plast
    c6e8:	ldr	x0, [sp, #72]
    c6ec:	cbz	x0, c6f4 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x12c>
    c6f0:	bl	0 <_ZdaPv>
    c6f4:	ldp	x19, x20, [sp, #136]
    c6f8:	cmp	x19, x20
    c6fc:	b.eq	c718 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x150>  // b.none
    c700:	mov	x0, x19
    c704:	add	x19, x19, #0x30
    c708:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c70c:	cmp	x20, x19
    c710:	b.ne	c700 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x138>  // b.any
    c714:	ldr	x20, [sp, #136]
    c718:	cbz	x20, c724 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x15c>
    c71c:	mov	x0, x20
    c720:	bl	0 <_ZdlPv>
    c724:	ldr	w0, [sp, #128]
    c728:	cmp	w0, #0x40
    c72c:	b.ls	c73c <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x174>  // b.plast
    c730:	ldr	x0, [sp, #120]
    c734:	cbz	x0, c73c <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x174>
    c738:	bl	0 <_ZdaPv>
    c73c:	ldp	x19, x20, [sp, #16]
    c740:	ldp	x21, x22, [sp, #32]
    c744:	ldr	x23, [sp, #48]
    c748:	ldp	x29, x30, [sp], #208
    c74c:	ret
    c750:	bl	0 <_ZN4llvm4dbgsEv>
    c754:	mov	x1, x0
    c758:	ldp	x2, x3, [x0, #16]
    c75c:	sub	x2, x2, x3
    c760:	cmp	x2, #0xd
    c764:	b.ls	c79c <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x1d4>  // b.plast
    c768:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c76c:	add	x0, x0, #0x0
    c770:	ldr	x2, [x0]
    c774:	str	x2, [x3]
    c778:	ldur	x0, [x0, #6]
    c77c:	stur	x0, [x3, #6]
    c780:	ldr	x0, [x1, #24]
    c784:	add	x0, x0, #0xe
    c788:	str	x0, [x1, #24]
    c78c:	mov	x0, x19
    c790:	mov	w2, #0x0                   	// #0
    c794:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    c798:	b	c6a8 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xe0>
    c79c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c7a0:	add	x1, x1, #0x0
    c7a4:	mov	x2, #0xe                   	// #14
    c7a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c7ac:	mov	x1, x0
    c7b0:	b	c78c <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x1c4>
    c7b4:	nop

000000000000c7b8 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE>:
    c7b8:	stp	x29, x30, [sp, #-144]!
    c7bc:	mov	x29, sp
    c7c0:	stp	x19, x20, [sp, #16]
    c7c4:	mov	x19, x1
    c7c8:	mov	x20, x0
    c7cc:	stp	x21, x22, [sp, #32]
    c7d0:	add	x22, sp, #0x30
    c7d4:	mov	x8, x22
    c7d8:	ldur	x1, [x1, #-48]
    c7dc:	ldr	x21, [x0, #704]
    c7e0:	sub	x21, x21, #0x80
    c7e4:	mov	x2, x21
    c7e8:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    c7ec:	ldur	x1, [x19, #-24]
    c7f0:	mov	x2, x21
    c7f4:	mov	x0, x20
    c7f8:	add	x8, sp, #0x60
    c7fc:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    c800:	ldur	x3, [x19, #-48]
    c804:	mov	x0, x20
    c808:	ldr	x2, [sp, #96]
    c80c:	mov	x1, x22
    c810:	ldr	x3, [x3]
    c814:	bl	0 <_ZN4llvm15ExecutionEngine18StoreValueToMemoryERKNS_12GenericValueEPS1_PNS_4TypeE>
    c818:	ldrb	w0, [x19, #18]
    c81c:	tbz	w0, #0, c82c <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x74>
    c820:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c824:	ldrb	w0, [x0]
    c828:	cbnz	w0, c8cc <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x114>
    c82c:	ldp	x19, x20, [sp, #120]
    c830:	cmp	x19, x20
    c834:	b.eq	c850 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x98>  // b.none
    c838:	mov	x0, x19
    c83c:	add	x19, x19, #0x30
    c840:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c844:	cmp	x20, x19
    c848:	b.ne	c838 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x80>  // b.any
    c84c:	ldr	x20, [sp, #120]
    c850:	cbz	x20, c85c <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xa4>
    c854:	mov	x0, x20
    c858:	bl	0 <_ZdlPv>
    c85c:	ldr	w0, [sp, #112]
    c860:	cmp	w0, #0x40
    c864:	b.ls	c874 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xbc>  // b.plast
    c868:	ldr	x0, [sp, #104]
    c86c:	cbz	x0, c874 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xbc>
    c870:	bl	0 <_ZdaPv>
    c874:	ldp	x19, x20, [sp, #72]
    c878:	cmp	x19, x20
    c87c:	b.eq	c898 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xe0>  // b.none
    c880:	mov	x0, x19
    c884:	add	x19, x19, #0x30
    c888:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c88c:	cmp	x20, x19
    c890:	b.ne	c880 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xc8>  // b.any
    c894:	ldr	x20, [sp, #72]
    c898:	cbz	x20, c8a4 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xec>
    c89c:	mov	x0, x20
    c8a0:	bl	0 <_ZdlPv>
    c8a4:	ldr	w0, [sp, #64]
    c8a8:	cmp	w0, #0x40
    c8ac:	b.ls	c8bc <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x104>  // b.plast
    c8b0:	ldr	x0, [sp, #56]
    c8b4:	cbz	x0, c8bc <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x104>
    c8b8:	bl	0 <_ZdaPv>
    c8bc:	ldp	x19, x20, [sp, #16]
    c8c0:	ldp	x21, x22, [sp, #32]
    c8c4:	ldp	x29, x30, [sp], #144
    c8c8:	ret
    c8cc:	bl	0 <_ZN4llvm4dbgsEv>
    c8d0:	mov	x1, x0
    c8d4:	ldp	x2, x3, [x0, #16]
    c8d8:	sub	x2, x2, x3
    c8dc:	cmp	x2, #0xf
    c8e0:	b.ls	c910 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x158>  // b.plast
    c8e4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c8e8:	add	x0, x0, #0x0
    c8ec:	ldp	x4, x5, [x0]
    c8f0:	stp	x4, x5, [x3]
    c8f4:	ldr	x0, [x1, #24]
    c8f8:	add	x0, x0, #0x10
    c8fc:	str	x0, [x1, #24]
    c900:	mov	x0, x19
    c904:	mov	w2, #0x0                   	// #0
    c908:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    c90c:	b	c82c <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x74>
    c910:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    c914:	add	x1, x1, #0x0
    c918:	mov	x2, #0x10                  	// #16
    c91c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c920:	mov	x1, x0
    c924:	b	c900 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x148>

000000000000c928 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE>:
    c928:	stp	x29, x30, [sp, #-416]!
    c92c:	mov	x29, sp
    c930:	stp	x21, x22, [sp, #32]
    c934:	mov	x22, x1
    c938:	stp	x23, x24, [sp, #48]
    c93c:	ldur	x1, [x1, #-48]
    c940:	stp	x27, x28, [sp, #80]
    c944:	add	x27, sp, #0x110
    c948:	ldr	x23, [x0, #704]
    c94c:	mov	x8, x27
    c950:	stp	x19, x20, [sp, #16]
    c954:	mov	x19, x0
    c958:	sub	x23, x23, #0x80
    c95c:	mov	x2, x23
    c960:	stp	x25, x26, [sp, #64]
    c964:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    c968:	ldur	x1, [x22, #-24]
    c96c:	add	x25, sp, #0x140
    c970:	mov	x0, x19
    c974:	mov	x2, x23
    c978:	mov	x8, x25
    c97c:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    c980:	ldr	x0, [x22]
    c984:	mov	w1, #0x1                   	// #1
    c988:	ldrb	w0, [x0, #8]
    c98c:	stp	xzr, xzr, [sp, #224]
    c990:	cmp	w0, #0x10
    c994:	str	w1, [sp, #240]
    c998:	stp	xzr, xzr, [sp, #248]
    c99c:	str	xzr, [sp, #264]
    c9a0:	b.ne	cce4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x3bc>  // b.any
    c9a4:	ldp	x1, x0, [sp, #296]
    c9a8:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    c9ac:	ldr	x21, [sp, #344]
    c9b0:	movk	x2, #0xaaab
    c9b4:	sub	x0, x0, x1
    c9b8:	ldr	x1, [sp, #352]
    c9bc:	asr	x0, x0, #4
    c9c0:	sub	x1, x1, x21
    c9c4:	mul	x0, x0, x2
    c9c8:	asr	x1, x1, #4
    c9cc:	mul	x1, x1, x2
    c9d0:	cmp	x1, w0, uxtw
    c9d4:	b.ne	cea0 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x578>  // b.any
    c9d8:	cbz	w0, cbd4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2ac>
    c9dc:	sub	w0, w0, #0x1
    c9e0:	add	x24, sp, #0x80
    c9e4:	add	x20, x0, #0x1
    c9e8:	add	x0, sp, #0x90
    c9ec:	add	x26, sp, #0xa0
    c9f0:	str	x0, [sp, #112]
    c9f4:	add	x20, x20, x20, lsl #1
    c9f8:	add	x0, sp, #0xf8
    c9fc:	mov	x19, #0x0                   	// #0
    ca00:	str	x0, [sp, #120]
    ca04:	lsl	x0, x20, #4
    ca08:	str	x0, [sp, #104]
    ca0c:	nop
    ca10:	mov	w0, #0x1                   	// #1
    ca14:	str	w0, [sp, #384]
    ca18:	add	x0, sp, #0x220
    ca1c:	add	x21, x21, x19
    ca20:	stp	xzr, xzr, [sp, #368]
    ca24:	stp	xzr, xzr, [x0, #-152]
    ca28:	ldr	w20, [x21, #16]
    ca2c:	str	xzr, [sp, #408]
    ca30:	cmp	w20, #0x40
    ca34:	b.ls	cc34 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x30c>  // b.plast
    ca38:	add	x0, x21, #0x8
    ca3c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    ca40:	sub	w1, w20, w0
    ca44:	cmp	w1, #0x40
    ca48:	b.hi	ce80 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x558>  // b.pmore
    ca4c:	ldr	x2, [sp, #296]
    ca50:	ldr	x0, [x21, #8]
    ca54:	add	x2, x2, x19
    ca58:	add	x1, x2, #0x8
    ca5c:	ldr	x20, [x0]
    ca60:	ldr	w0, [x1, #8]
    ca64:	str	w0, [sp, #136]
    ca68:	cmp	w0, #0x40
    ca6c:	b.hi	cc54 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x32c>  // b.pmore
    ca70:	ldr	x1, [x2, #8]
    ca74:	str	x1, [sp, #128]
    ca78:	str	w0, [sp, #152]
    ca7c:	ldr	x1, [sp, #128]
    ca80:	str	x1, [sp, #144]
    ca84:	cmp	x20, w0, uxtw
    ca88:	mov	w21, w20
    ca8c:	mov	w1, w0
    ca90:	b.cc	ccdc <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x3b4>  // b.lo, b.ul, b.last
    ca94:	sub	w0, w0, #0x1
    ca98:	str	w1, [sp, #168]
    ca9c:	cmp	w1, #0x40
    caa0:	orr	x0, x0, x0, lsr #1
    caa4:	orr	x0, x0, x0, lsr #2
    caa8:	orr	x0, x0, x0, lsr #4
    caac:	orr	x0, x0, x0, lsr #8
    cab0:	orr	x0, x0, x0, lsr #16
    cab4:	and	w21, w21, w0
    cab8:	b.hi	cc98 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x370>  // b.pmore
    cabc:	ldr	x0, [sp, #128]
    cac0:	str	x0, [sp, #160]
    cac4:	cmp	w1, w21
    cac8:	b.cc	ce60 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x538>  // b.lo, b.ul, b.last
    cacc:	cmp	w21, w1
    cad0:	mov	x0, #0x0                   	// #0
    cad4:	b.eq	caf0 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1c8>  // b.none
    cad8:	ldr	x2, [sp, #160]
    cadc:	neg	w1, w1
    cae0:	mov	x0, #0xffffffffffffffff    	// #-1
    cae4:	lsr	x1, x0, x1
    cae8:	lsl	x21, x2, x21
    caec:	and	x0, x1, x21
    caf0:	str	x0, [sp, #160]
    caf4:	ldr	w0, [sp, #384]
    caf8:	cmp	w0, #0x40
    cafc:	b.ls	cb0c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1e4>  // b.plast
    cb00:	ldr	x0, [sp, #376]
    cb04:	cbz	x0, cb0c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1e4>
    cb08:	bl	0 <_ZdaPv>
    cb0c:	ldr	x0, [sp, #160]
    cb10:	str	x0, [sp, #376]
    cb14:	ldr	w0, [sp, #168]
    cb18:	str	w0, [sp, #384]
    cb1c:	ldr	w0, [sp, #152]
    cb20:	cmp	w0, #0x40
    cb24:	b.ls	cb34 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x20c>  // b.plast
    cb28:	ldr	x0, [sp, #144]
    cb2c:	cbz	x0, cb34 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x20c>
    cb30:	bl	0 <_ZdaPv>
    cb34:	ldp	x0, x1, [sp, #256]
    cb38:	add	x21, sp, #0x170
    cb3c:	cmp	x0, x1
    cb40:	b.eq	ccc8 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x3a0>  // b.none
    cb44:	mov	x1, x21
    cb48:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cb4c:	ldr	x0, [sp, #256]
    cb50:	add	x0, x0, #0x30
    cb54:	str	x0, [sp, #256]
    cb58:	ldr	w0, [sp, #136]
    cb5c:	cmp	w0, #0x40
    cb60:	b.ls	cb70 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x248>  // b.plast
    cb64:	ldr	x0, [sp, #128]
    cb68:	cbz	x0, cb70 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x248>
    cb6c:	bl	0 <_ZdaPv>
    cb70:	ldp	x20, x28, [sp, #392]
    cb74:	cmp	x20, x28
    cb78:	b.eq	cb98 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x270>  // b.none
    cb7c:	nop
    cb80:	mov	x0, x20
    cb84:	add	x20, x20, #0x30
    cb88:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cb8c:	cmp	x28, x20
    cb90:	b.ne	cb80 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x258>  // b.any
    cb94:	ldr	x28, [sp, #392]
    cb98:	cbz	x28, cba4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x27c>
    cb9c:	mov	x0, x28
    cba0:	bl	0 <_ZdlPv>
    cba4:	ldr	w0, [sp, #384]
    cba8:	cmp	w0, #0x40
    cbac:	b.ls	cbbc <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x294>  // b.plast
    cbb0:	ldr	x0, [sp, #376]
    cbb4:	cbz	x0, cbbc <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x294>
    cbb8:	bl	0 <_ZdaPv>
    cbbc:	ldr	x0, [sp, #104]
    cbc0:	add	x19, x19, #0x30
    cbc4:	cmp	x19, x0
    cbc8:	b.eq	cbd8 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2b0>  // b.none
    cbcc:	ldr	x21, [sp, #344]
    cbd0:	b	ca10 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0xe8>
    cbd4:	add	x21, sp, #0x170
    cbd8:	add	x19, sp, #0xe0
    cbdc:	mov	x0, x21
    cbe0:	mov	x1, x19
    cbe4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cbe8:	mov	x2, x23
    cbec:	mov	x1, x21
    cbf0:	mov	x0, x22
    cbf4:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    cbf8:	mov	x0, x21
    cbfc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cc00:	mov	x0, x19
    cc04:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cc08:	mov	x0, x25
    cc0c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cc10:	mov	x0, x27
    cc14:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cc18:	ldp	x19, x20, [sp, #16]
    cc1c:	ldp	x21, x22, [sp, #32]
    cc20:	ldp	x23, x24, [sp, #48]
    cc24:	ldp	x25, x26, [sp, #64]
    cc28:	ldp	x27, x28, [sp, #80]
    cc2c:	ldp	x29, x30, [sp], #416
    cc30:	ret
    cc34:	ldr	x2, [sp, #296]
    cc38:	ldr	x20, [x21, #8]
    cc3c:	add	x2, x2, x19
    cc40:	add	x1, x2, #0x8
    cc44:	ldr	w0, [x1, #8]
    cc48:	str	w0, [sp, #136]
    cc4c:	cmp	w0, #0x40
    cc50:	b.ls	ca70 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x148>  // b.plast
    cc54:	mov	x0, x24
    cc58:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    cc5c:	ldr	w0, [sp, #136]
    cc60:	str	w0, [sp, #152]
    cc64:	cmp	w0, #0x40
    cc68:	b.ls	ca7c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x154>  // b.plast
    cc6c:	ldr	x0, [sp, #112]
    cc70:	mov	x1, x24
    cc74:	mov	w21, w20
    cc78:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    cc7c:	ldr	w0, [sp, #152]
    cc80:	ldr	w1, [sp, #136]
    cc84:	cmp	x20, w0, uxtw
    cc88:	b.cs	ca94 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x16c>  // b.hs, b.nlast
    cc8c:	str	w1, [sp, #168]
    cc90:	cmp	w1, #0x40
    cc94:	b.ls	cabc <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x194>  // b.plast
    cc98:	mov	x1, x24
    cc9c:	mov	x0, x26
    cca0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    cca4:	ldr	w1, [sp, #168]
    cca8:	cmp	w21, w1
    ccac:	b.hi	ce60 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x538>  // b.pmore
    ccb0:	cmp	w1, #0x40
    ccb4:	b.ls	cacc <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1a4>  // b.plast
    ccb8:	mov	w1, w21
    ccbc:	mov	x0, x26
    ccc0:	bl	0 <_ZN4llvm5APInt11shlSlowCaseEj>
    ccc4:	b	caf4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1cc>
    ccc8:	mov	x1, x0
    cccc:	mov	x2, x21
    ccd0:	ldr	x0, [sp, #120]
    ccd4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ccd8:	b	cb58 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x230>
    ccdc:	str	w0, [sp, #168]
    cce0:	b	cabc <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x194>
    cce4:	add	x0, x25, #0x8
    cce8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ccec:	ldr	w1, [sp, #288]
    ccf0:	mov	x19, x0
    ccf4:	str	w1, [sp, #184]
    ccf8:	cmp	w1, #0x40
    ccfc:	b.hi	ce14 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x4ec>  // b.pmore
    cd00:	ldr	x0, [sp, #280]
    cd04:	str	x0, [sp, #176]
    cd08:	str	w1, [sp, #200]
    cd0c:	ldr	x0, [sp, #176]
    cd10:	str	x0, [sp, #192]
    cd14:	mov	w2, w1
    cd18:	cmp	x19, w1, uxtw
    cd1c:	mov	w20, w19
    cd20:	b.cc	ce58 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x530>  // b.lo, b.ul, b.last
    cd24:	sub	w0, w1, #0x1
    cd28:	orr	x0, x0, x0, lsr #1
    cd2c:	orr	x0, x0, x0, lsr #2
    cd30:	orr	x0, x0, x0, lsr #4
    cd34:	orr	x0, x0, x0, lsr #8
    cd38:	orr	x0, x0, x0, lsr #16
    cd3c:	and	w20, w20, w0
    cd40:	str	w2, [sp, #216]
    cd44:	cmp	w2, #0x40
    cd48:	b.hi	cde0 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x4b8>  // b.pmore
    cd4c:	ldr	x0, [sp, #176]
    cd50:	str	x0, [sp, #208]
    cd54:	cmp	w2, w20
    cd58:	b.cc	ce60 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x538>  // b.lo, b.ul, b.last
    cd5c:	add	x19, sp, #0xd0
    cd60:	cmp	w20, w2
    cd64:	mov	x1, #0x0                   	// #0
    cd68:	b.eq	cd74 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x44c>  // b.none
    cd6c:	ldr	x1, [sp, #208]
    cd70:	lsl	x1, x1, x20
    cd74:	mov	x0, x19
    cd78:	str	x1, [sp, #208]
    cd7c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cd80:	ldr	w0, [sp, #240]
    cd84:	cmp	w0, #0x40
    cd88:	b.ls	cd98 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x470>  // b.plast
    cd8c:	ldr	x0, [sp, #232]
    cd90:	cbz	x0, cd98 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x470>
    cd94:	bl	0 <_ZdaPv>
    cd98:	ldr	x0, [sp, #208]
    cd9c:	str	x0, [sp, #232]
    cda0:	ldr	w0, [sp, #216]
    cda4:	str	w0, [sp, #240]
    cda8:	ldr	w0, [sp, #200]
    cdac:	cmp	w0, #0x40
    cdb0:	b.ls	cdc0 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x498>  // b.plast
    cdb4:	ldr	x0, [sp, #192]
    cdb8:	cbz	x0, cdc0 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x498>
    cdbc:	bl	0 <_ZdaPv>
    cdc0:	ldr	w0, [sp, #184]
    cdc4:	cmp	w0, #0x40
    cdc8:	b.ls	cbd4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2ac>  // b.plast
    cdcc:	ldr	x0, [sp, #176]
    cdd0:	add	x21, sp, #0x170
    cdd4:	cbz	x0, cbd8 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2b0>
    cdd8:	bl	0 <_ZdaPv>
    cddc:	b	cbd8 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2b0>
    cde0:	add	x19, sp, #0xd0
    cde4:	add	x1, sp, #0xb0
    cde8:	mov	x0, x19
    cdec:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    cdf0:	ldr	w2, [sp, #216]
    cdf4:	cmp	w20, w2
    cdf8:	b.hi	ce60 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x538>  // b.pmore
    cdfc:	cmp	w2, #0x40
    ce00:	b.ls	cd60 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x438>  // b.plast
    ce04:	mov	w1, w20
    ce08:	mov	x0, x19
    ce0c:	bl	0 <_ZN4llvm5APInt11shlSlowCaseEj>
    ce10:	b	cd80 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x458>
    ce14:	add	x20, sp, #0xb0
    ce18:	add	x1, x27, #0x8
    ce1c:	mov	x0, x20
    ce20:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    ce24:	ldr	w1, [sp, #184]
    ce28:	str	w1, [sp, #200]
    ce2c:	cmp	w1, #0x40
    ce30:	b.ls	cd0c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x3e4>  // b.plast
    ce34:	mov	x1, x20
    ce38:	add	x0, sp, #0xc0
    ce3c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    ce40:	mov	w20, w19
    ce44:	ldr	w1, [sp, #200]
    ce48:	ldr	w2, [sp, #184]
    ce4c:	cmp	x19, w1, uxtw
    ce50:	b.cs	cd24 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x3fc>  // b.hs, b.nlast
    ce54:	b	cd40 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x418>
    ce58:	str	w1, [sp, #216]
    ce5c:	b	cd4c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x424>
    ce60:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ce64:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ce68:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ce6c:	add	x3, x3, #0x0
    ce70:	add	x1, x1, #0x0
    ce74:	add	x0, x0, #0x0
    ce78:	mov	w2, #0x39a                 	// #922
    ce7c:	bl	0 <__assert_fail>
    ce80:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ce84:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ce88:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ce8c:	add	x3, x3, #0x0
    ce90:	add	x1, x1, #0x0
    ce94:	add	x0, x0, #0x0
    ce98:	mov	w2, #0x657                 	// #1623
    ce9c:	bl	0 <__assert_fail>
    cea0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cea4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    cea8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ceac:	add	x3, x3, #0x0
    ceb0:	add	x1, x1, #0x0
    ceb4:	add	x0, x0, #0x0
    ceb8:	mov	w2, #0x4ae                 	// #1198
    cebc:	bl	0 <__assert_fail>

000000000000cec0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE>:
    cec0:	stp	x29, x30, [sp, #-416]!
    cec4:	mov	x29, sp
    cec8:	stp	x21, x22, [sp, #32]
    cecc:	mov	x22, x1
    ced0:	stp	x23, x24, [sp, #48]
    ced4:	ldur	x1, [x1, #-48]
    ced8:	stp	x27, x28, [sp, #80]
    cedc:	add	x27, sp, #0x110
    cee0:	ldr	x23, [x0, #704]
    cee4:	mov	x8, x27
    cee8:	stp	x19, x20, [sp, #16]
    ceec:	mov	x19, x0
    cef0:	sub	x23, x23, #0x80
    cef4:	mov	x2, x23
    cef8:	stp	x25, x26, [sp, #64]
    cefc:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    cf00:	ldur	x1, [x22, #-24]
    cf04:	add	x26, sp, #0x140
    cf08:	mov	x0, x19
    cf0c:	mov	x2, x23
    cf10:	mov	x8, x26
    cf14:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    cf18:	ldr	x0, [x22]
    cf1c:	mov	w1, #0x1                   	// #1
    cf20:	ldrb	w0, [x0, #8]
    cf24:	stp	xzr, xzr, [sp, #224]
    cf28:	cmp	w0, #0x10
    cf2c:	str	w1, [sp, #240]
    cf30:	stp	xzr, xzr, [sp, #248]
    cf34:	str	xzr, [sp, #264]
    cf38:	b.ne	d298 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x3d8>  // b.any
    cf3c:	ldp	x1, x0, [sp, #296]
    cf40:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    cf44:	ldr	x21, [sp, #344]
    cf48:	movk	x2, #0xaaab
    cf4c:	sub	x0, x0, x1
    cf50:	ldr	x1, [sp, #352]
    cf54:	asr	x0, x0, #4
    cf58:	sub	x1, x1, x21
    cf5c:	mul	x0, x0, x2
    cf60:	asr	x1, x1, #4
    cf64:	mul	x1, x1, x2
    cf68:	cmp	x1, w0, uxtw
    cf6c:	b.ne	d42c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x56c>  // b.any
    cf70:	cbz	w0, d154 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x294>
    cf74:	sub	w0, w0, #0x1
    cf78:	add	x24, sp, #0x80
    cf7c:	add	x20, x0, #0x1
    cf80:	add	x0, sp, #0x90
    cf84:	add	x25, sp, #0xa0
    cf88:	str	x0, [sp, #112]
    cf8c:	add	x20, x20, x20, lsl #1
    cf90:	add	x0, sp, #0xf8
    cf94:	mov	x19, #0x0                   	// #0
    cf98:	str	x0, [sp, #120]
    cf9c:	lsl	x0, x20, #4
    cfa0:	str	x0, [sp, #104]
    cfa4:	nop
    cfa8:	mov	w0, #0x1                   	// #1
    cfac:	str	w0, [sp, #384]
    cfb0:	add	x0, sp, #0x220
    cfb4:	add	x21, x21, x19
    cfb8:	stp	xzr, xzr, [sp, #368]
    cfbc:	stp	xzr, xzr, [x0, #-152]
    cfc0:	ldr	w20, [x21, #16]
    cfc4:	str	xzr, [sp, #408]
    cfc8:	cmp	w20, #0x40
    cfcc:	b.ls	d1b4 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x2f4>  // b.plast
    cfd0:	add	x0, x21, #0x8
    cfd4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    cfd8:	sub	w1, w20, w0
    cfdc:	cmp	w1, #0x40
    cfe0:	b.hi	d40c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x54c>  // b.pmore
    cfe4:	ldr	x2, [sp, #296]
    cfe8:	ldr	x0, [x21, #8]
    cfec:	add	x2, x2, x19
    cff0:	add	x1, x2, #0x8
    cff4:	ldr	x20, [x0]
    cff8:	ldr	w0, [x1, #8]
    cffc:	str	w0, [sp, #136]
    d000:	cmp	w0, #0x40
    d004:	b.hi	d1d4 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x314>  // b.pmore
    d008:	ldr	x1, [x2, #8]
    d00c:	str	x1, [sp, #128]
    d010:	str	w0, [sp, #152]
    d014:	ldr	x1, [sp, #128]
    d018:	str	x1, [sp, #144]
    d01c:	cmp	x20, w0, uxtw
    d020:	mov	w21, w20
    d024:	mov	w1, w0
    d028:	b.cc	d25c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x39c>  // b.lo, b.ul, b.last
    d02c:	sub	w0, w0, #0x1
    d030:	str	w1, [sp, #168]
    d034:	cmp	w1, #0x40
    d038:	orr	x0, x0, x0, lsr #1
    d03c:	orr	x0, x0, x0, lsr #2
    d040:	orr	x0, x0, x0, lsr #4
    d044:	orr	x0, x0, x0, lsr #8
    d048:	orr	x0, x0, x0, lsr #16
    d04c:	and	w21, w21, w0
    d050:	b.hi	d218 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x358>  // b.pmore
    d054:	ldr	x0, [sp, #128]
    d058:	str	x0, [sp, #160]
    d05c:	cmp	w1, w21
    d060:	b.cc	d270 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x3b0>  // b.lo, b.ul, b.last
    d064:	cmp	w21, w1
    d068:	b.eq	d290 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x3d0>  // b.none
    d06c:	ldr	x0, [sp, #160]
    d070:	lsr	x21, x0, x21
    d074:	str	x21, [sp, #160]
    d078:	ldr	w0, [sp, #384]
    d07c:	cmp	w0, #0x40
    d080:	b.ls	d090 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1d0>  // b.plast
    d084:	ldr	x0, [sp, #376]
    d088:	cbz	x0, d090 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1d0>
    d08c:	bl	0 <_ZdaPv>
    d090:	ldr	x0, [sp, #160]
    d094:	str	x0, [sp, #376]
    d098:	ldr	w0, [sp, #168]
    d09c:	str	w0, [sp, #384]
    d0a0:	ldr	w0, [sp, #152]
    d0a4:	cmp	w0, #0x40
    d0a8:	b.ls	d0b8 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1f8>  // b.plast
    d0ac:	ldr	x0, [sp, #144]
    d0b0:	cbz	x0, d0b8 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1f8>
    d0b4:	bl	0 <_ZdaPv>
    d0b8:	ldp	x0, x1, [sp, #256]
    d0bc:	add	x21, sp, #0x170
    d0c0:	cmp	x0, x1
    d0c4:	b.eq	d248 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x388>  // b.none
    d0c8:	mov	x1, x21
    d0cc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d0d0:	ldr	x0, [sp, #256]
    d0d4:	add	x0, x0, #0x30
    d0d8:	str	x0, [sp, #256]
    d0dc:	ldr	w0, [sp, #136]
    d0e0:	cmp	w0, #0x40
    d0e4:	b.ls	d0f4 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x234>  // b.plast
    d0e8:	ldr	x0, [sp, #128]
    d0ec:	cbz	x0, d0f4 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x234>
    d0f0:	bl	0 <_ZdaPv>
    d0f4:	ldp	x20, x28, [sp, #392]
    d0f8:	cmp	x20, x28
    d0fc:	b.eq	d118 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x258>  // b.none
    d100:	mov	x0, x20
    d104:	add	x20, x20, #0x30
    d108:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d10c:	cmp	x28, x20
    d110:	b.ne	d100 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x240>  // b.any
    d114:	ldr	x28, [sp, #392]
    d118:	cbz	x28, d124 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x264>
    d11c:	mov	x0, x28
    d120:	bl	0 <_ZdlPv>
    d124:	ldr	w0, [sp, #384]
    d128:	cmp	w0, #0x40
    d12c:	b.ls	d13c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x27c>  // b.plast
    d130:	ldr	x0, [sp, #376]
    d134:	cbz	x0, d13c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x27c>
    d138:	bl	0 <_ZdaPv>
    d13c:	ldr	x0, [sp, #104]
    d140:	add	x19, x19, #0x30
    d144:	cmp	x19, x0
    d148:	b.eq	d158 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x298>  // b.none
    d14c:	ldr	x21, [sp, #344]
    d150:	b	cfa8 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0xe8>
    d154:	add	x21, sp, #0x170
    d158:	add	x19, sp, #0xe0
    d15c:	mov	x0, x21
    d160:	mov	x1, x19
    d164:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d168:	mov	x2, x23
    d16c:	mov	x1, x21
    d170:	mov	x0, x22
    d174:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    d178:	mov	x0, x21
    d17c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d180:	mov	x0, x19
    d184:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d188:	mov	x0, x26
    d18c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d190:	mov	x0, x27
    d194:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d198:	ldp	x19, x20, [sp, #16]
    d19c:	ldp	x21, x22, [sp, #32]
    d1a0:	ldp	x23, x24, [sp, #48]
    d1a4:	ldp	x25, x26, [sp, #64]
    d1a8:	ldp	x27, x28, [sp, #80]
    d1ac:	ldp	x29, x30, [sp], #416
    d1b0:	ret
    d1b4:	ldr	x2, [sp, #296]
    d1b8:	ldr	x20, [x21, #8]
    d1bc:	add	x2, x2, x19
    d1c0:	add	x1, x2, #0x8
    d1c4:	ldr	w0, [x1, #8]
    d1c8:	str	w0, [sp, #136]
    d1cc:	cmp	w0, #0x40
    d1d0:	b.ls	d008 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x148>  // b.plast
    d1d4:	mov	x0, x24
    d1d8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d1dc:	ldr	w0, [sp, #136]
    d1e0:	str	w0, [sp, #152]
    d1e4:	cmp	w0, #0x40
    d1e8:	b.ls	d014 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x154>  // b.plast
    d1ec:	ldr	x0, [sp, #112]
    d1f0:	mov	x1, x24
    d1f4:	mov	w21, w20
    d1f8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d1fc:	ldr	w0, [sp, #152]
    d200:	ldr	w1, [sp, #136]
    d204:	cmp	x20, w0, uxtw
    d208:	b.cs	d02c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x16c>  // b.hs, b.nlast
    d20c:	str	w1, [sp, #168]
    d210:	cmp	w1, #0x40
    d214:	b.ls	d054 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x194>  // b.plast
    d218:	mov	x1, x24
    d21c:	mov	x0, x25
    d220:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d224:	ldr	w1, [sp, #168]
    d228:	cmp	w21, w1
    d22c:	b.hi	d270 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x3b0>  // b.pmore
    d230:	cmp	w1, #0x40
    d234:	b.ls	d064 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1a4>  // b.plast
    d238:	mov	w1, w21
    d23c:	mov	x0, x25
    d240:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
    d244:	b	d078 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1b8>
    d248:	mov	x1, x0
    d24c:	mov	x2, x21
    d250:	ldr	x0, [sp, #120]
    d254:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d258:	b	d0dc <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x21c>
    d25c:	str	w0, [sp, #168]
    d260:	cmp	w1, w21
    d264:	ldr	x0, [sp, #128]
    d268:	str	x0, [sp, #160]
    d26c:	b.cs	d064 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1a4>  // b.hs, b.nlast
    d270:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d274:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d278:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d27c:	add	x3, x3, #0x0
    d280:	add	x1, x1, #0x0
    d284:	add	x0, x0, #0x0
    d288:	mov	w2, #0x3e3                 	// #995
    d28c:	bl	0 <__assert_fail>
    d290:	str	xzr, [sp, #160]
    d294:	b	d078 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1b8>
    d298:	add	x0, x26, #0x8
    d29c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d2a0:	ldr	w1, [sp, #288]
    d2a4:	mov	x19, x0
    d2a8:	str	w1, [sp, #184]
    d2ac:	cmp	w1, #0x40
    d2b0:	b.hi	d3c0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x500>  // b.pmore
    d2b4:	ldr	x0, [sp, #280]
    d2b8:	str	x0, [sp, #176]
    d2bc:	str	w1, [sp, #200]
    d2c0:	ldr	x0, [sp, #176]
    d2c4:	str	x0, [sp, #192]
    d2c8:	mov	w2, w1
    d2cc:	cmp	x19, w1, uxtw
    d2d0:	mov	w20, w19
    d2d4:	b.cc	d404 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x544>  // b.lo, b.ul, b.last
    d2d8:	sub	w0, w1, #0x1
    d2dc:	orr	x0, x0, x0, lsr #1
    d2e0:	orr	x0, x0, x0, lsr #2
    d2e4:	orr	x0, x0, x0, lsr #4
    d2e8:	orr	x0, x0, x0, lsr #8
    d2ec:	orr	x0, x0, x0, lsr #16
    d2f0:	and	w20, w20, w0
    d2f4:	str	w2, [sp, #216]
    d2f8:	cmp	w2, #0x40
    d2fc:	b.hi	d38c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x4cc>  // b.pmore
    d300:	ldr	x0, [sp, #176]
    d304:	str	x0, [sp, #208]
    d308:	cmp	w20, w2
    d30c:	b.hi	d270 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x3b0>  // b.pmore
    d310:	cmp	w20, w2
    d314:	b.eq	d384 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x4c4>  // b.none
    d318:	ldr	x0, [sp, #208]
    d31c:	lsr	x20, x0, x20
    d320:	str	x20, [sp, #208]
    d324:	ldr	w0, [sp, #240]
    d328:	cmp	w0, #0x40
    d32c:	b.ls	d33c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x47c>  // b.plast
    d330:	ldr	x0, [sp, #232]
    d334:	cbz	x0, d33c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x47c>
    d338:	bl	0 <_ZdaPv>
    d33c:	ldr	x0, [sp, #208]
    d340:	str	x0, [sp, #232]
    d344:	ldr	w0, [sp, #216]
    d348:	str	w0, [sp, #240]
    d34c:	ldr	w0, [sp, #200]
    d350:	cmp	w0, #0x40
    d354:	b.ls	d364 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x4a4>  // b.plast
    d358:	ldr	x0, [sp, #192]
    d35c:	cbz	x0, d364 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x4a4>
    d360:	bl	0 <_ZdaPv>
    d364:	ldr	w0, [sp, #184]
    d368:	cmp	w0, #0x40
    d36c:	b.ls	d154 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x294>  // b.plast
    d370:	ldr	x0, [sp, #176]
    d374:	add	x21, sp, #0x170
    d378:	cbz	x0, d158 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x298>
    d37c:	bl	0 <_ZdaPv>
    d380:	b	d158 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x298>
    d384:	str	xzr, [sp, #208]
    d388:	b	d324 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x464>
    d38c:	add	x19, sp, #0xd0
    d390:	add	x1, sp, #0xb0
    d394:	mov	x0, x19
    d398:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d39c:	ldr	w2, [sp, #216]
    d3a0:	cmp	w20, w2
    d3a4:	b.hi	d270 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x3b0>  // b.pmore
    d3a8:	cmp	w2, #0x40
    d3ac:	b.ls	d310 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x450>  // b.plast
    d3b0:	mov	w1, w20
    d3b4:	mov	x0, x19
    d3b8:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
    d3bc:	b	d324 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x464>
    d3c0:	add	x20, sp, #0xb0
    d3c4:	add	x1, x27, #0x8
    d3c8:	mov	x0, x20
    d3cc:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d3d0:	ldr	w1, [sp, #184]
    d3d4:	str	w1, [sp, #200]
    d3d8:	cmp	w1, #0x40
    d3dc:	b.ls	d2c0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x400>  // b.plast
    d3e0:	mov	x1, x20
    d3e4:	add	x0, sp, #0xc0
    d3e8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d3ec:	mov	w20, w19
    d3f0:	ldr	w1, [sp, #200]
    d3f4:	ldr	w2, [sp, #184]
    d3f8:	cmp	x19, w1, uxtw
    d3fc:	b.cs	d2d8 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x418>  // b.hs, b.nlast
    d400:	b	d2f4 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x434>
    d404:	str	w1, [sp, #216]
    d408:	b	d300 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x440>
    d40c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d410:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d414:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d418:	add	x3, x3, #0x0
    d41c:	add	x1, x1, #0x0
    d420:	add	x0, x0, #0x0
    d424:	mov	w2, #0x657                 	// #1623
    d428:	bl	0 <__assert_fail>
    d42c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d430:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d434:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d438:	add	x3, x3, #0x0
    d43c:	add	x1, x1, #0x0
    d440:	add	x0, x0, #0x0
    d444:	mov	w2, #0x4c9                 	// #1225
    d448:	bl	0 <__assert_fail>
    d44c:	nop

000000000000d450 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE>:
    d450:	stp	x29, x30, [sp, #-416]!
    d454:	mov	x29, sp
    d458:	stp	x21, x22, [sp, #32]
    d45c:	mov	x21, x1
    d460:	add	x1, sp, #0x110
    d464:	mov	x8, x1
    d468:	stp	x23, x24, [sp, #48]
    d46c:	str	x1, [sp, #104]
    d470:	ldur	x1, [x21, #-48]
    d474:	stp	x19, x20, [sp, #16]
    d478:	mov	x19, x0
    d47c:	ldr	x23, [x0, #704]
    d480:	stp	x25, x26, [sp, #64]
    d484:	add	x26, sp, #0x140
    d488:	sub	x23, x23, #0x80
    d48c:	stp	x27, x28, [sp, #80]
    d490:	mov	x2, x23
    d494:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    d498:	ldur	x1, [x21, #-24]
    d49c:	mov	x0, x19
    d4a0:	mov	x2, x23
    d4a4:	mov	x8, x26
    d4a8:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    d4ac:	ldr	x0, [x21]
    d4b0:	mov	w1, #0x1                   	// #1
    d4b4:	ldrb	w0, [x0, #8]
    d4b8:	stp	xzr, xzr, [sp, #224]
    d4bc:	cmp	w0, #0x10
    d4c0:	str	w1, [sp, #240]
    d4c4:	stp	xzr, xzr, [sp, #248]
    d4c8:	str	xzr, [sp, #264]
    d4cc:	b.ne	d830 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x3e0>  // b.any
    d4d0:	ldp	x2, x0, [sp, #296]
    d4d4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    d4d8:	ldr	x1, [sp, #344]
    d4dc:	movk	x3, #0xaaab
    d4e0:	sub	x0, x0, x2
    d4e4:	ldr	x2, [sp, #352]
    d4e8:	asr	x22, x0, #4
    d4ec:	sub	x2, x2, x1
    d4f0:	mul	x22, x22, x3
    d4f4:	cmp	x2, x0
    d4f8:	b.ne	da00 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x5b0>  // b.any
    d4fc:	mov	w19, #0x0                   	// #0
    d500:	mov	x0, #0x0                   	// #0
    d504:	cbz	x22, d604 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1b4>
    d508:	add	x2, sp, #0x90
    d50c:	add	x25, sp, #0x80
    d510:	add	x24, sp, #0xa0
    d514:	str	x2, [sp, #112]
    d518:	add	x2, sp, #0xf8
    d51c:	str	x2, [sp, #120]
    d520:	add	x0, x0, x0, lsl #1
    d524:	mov	w2, #0x1                   	// #1
    d528:	stp	xzr, xzr, [sp, #368]
    d52c:	lsl	x20, x0, #4
    d530:	add	x0, sp, #0x220
    d534:	add	x27, x1, x20
    d538:	str	w2, [sp, #384]
    d53c:	stp	xzr, xzr, [x0, #-152]
    d540:	ldr	w28, [x27, #16]
    d544:	str	xzr, [sp, #408]
    d548:	cmp	w28, #0x40
    d54c:	b.ls	d664 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x214>  // b.plast
    d550:	add	x0, x27, #0x8
    d554:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    d558:	sub	w2, w28, w0
    d55c:	cmp	w2, #0x40
    d560:	b.hi	d9c0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x570>  // b.pmore
    d564:	ldr	x0, [x27, #8]
    d568:	ldr	x27, [x0]
    d56c:	ldr	x0, [sp, #296]
    d570:	add	x20, x0, x20
    d574:	add	x1, x20, #0x8
    d578:	ldr	w0, [x1, #8]
    d57c:	str	w0, [sp, #136]
    d580:	cmp	w0, #0x40
    d584:	b.hi	d684 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x234>  // b.pmore
    d588:	ldr	x1, [x20, #8]
    d58c:	str	x1, [sp, #128]
    d590:	str	w0, [sp, #152]
    d594:	ldr	x1, [sp, #128]
    d598:	str	x1, [sp, #144]
    d59c:	cmp	x27, w0, uxtw
    d5a0:	mov	w20, w27
    d5a4:	mov	w1, w0
    d5a8:	b.cc	d828 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x3d8>  // b.lo, b.ul, b.last
    d5ac:	sub	w0, w0, #0x1
    d5b0:	str	w1, [sp, #168]
    d5b4:	cmp	w1, #0x40
    d5b8:	orr	x0, x0, x0, lsr #1
    d5bc:	orr	x0, x0, x0, lsr #2
    d5c0:	orr	x0, x0, x0, lsr #4
    d5c4:	orr	x0, x0, x0, lsr #8
    d5c8:	orr	x0, x0, x0, lsr #16
    d5cc:	and	w20, w20, w0
    d5d0:	b.hi	d6c8 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x278>  // b.pmore
    d5d4:	ldr	x0, [sp, #128]
    d5d8:	str	x0, [sp, #160]
    d5dc:	cmp	w1, w20
    d5e0:	b.cs	d700 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x2b0>  // b.hs, b.nlast
    d5e4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d5e8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d5ec:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d5f0:	add	x3, x3, #0x0
    d5f4:	add	x1, x1, #0x0
    d5f8:	add	x0, x0, #0x0
    d5fc:	mov	w2, #0x3cb                 	// #971
    d600:	bl	0 <__assert_fail>
    d604:	add	x20, sp, #0x170
    d608:	add	x19, sp, #0xe0
    d60c:	mov	x0, x20
    d610:	mov	x1, x19
    d614:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d618:	mov	x2, x23
    d61c:	mov	x1, x20
    d620:	mov	x0, x21
    d624:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    d628:	mov	x0, x20
    d62c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d630:	mov	x0, x19
    d634:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d638:	mov	x0, x26
    d63c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d640:	ldr	x0, [sp, #104]
    d644:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d648:	ldp	x19, x20, [sp, #16]
    d64c:	ldp	x21, x22, [sp, #32]
    d650:	ldp	x23, x24, [sp, #48]
    d654:	ldp	x25, x26, [sp, #64]
    d658:	ldp	x27, x28, [sp, #80]
    d65c:	ldp	x29, x30, [sp], #416
    d660:	ret
    d664:	ldr	x0, [sp, #296]
    d668:	ldr	x27, [x27, #8]
    d66c:	add	x20, x0, x20
    d670:	add	x1, x20, #0x8
    d674:	ldr	w0, [x1, #8]
    d678:	str	w0, [sp, #136]
    d67c:	cmp	w0, #0x40
    d680:	b.ls	d588 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x138>  // b.plast
    d684:	mov	x0, x25
    d688:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d68c:	ldr	w0, [sp, #136]
    d690:	str	w0, [sp, #152]
    d694:	cmp	w0, #0x40
    d698:	b.ls	d594 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x144>  // b.plast
    d69c:	ldr	x0, [sp, #112]
    d6a0:	mov	x1, x25
    d6a4:	mov	w20, w27
    d6a8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d6ac:	ldr	w0, [sp, #152]
    d6b0:	ldr	w1, [sp, #136]
    d6b4:	cmp	x27, w0, uxtw
    d6b8:	b.cs	d5ac <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x15c>  // b.hs, b.nlast
    d6bc:	str	w1, [sp, #168]
    d6c0:	cmp	w1, #0x40
    d6c4:	b.ls	d5d4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x184>  // b.plast
    d6c8:	mov	x1, x25
    d6cc:	mov	x0, x24
    d6d0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d6d4:	ldr	w1, [sp, #168]
    d6d8:	cmp	w20, w1
    d6dc:	b.hi	d5e4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x194>  // b.pmore
    d6e0:	cmp	w1, #0x40
    d6e4:	b.ls	d6f8 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x2a8>  // b.plast
    d6e8:	mov	w1, w20
    d6ec:	mov	x0, x24
    d6f0:	bl	0 <_ZN4llvm5APInt12ashrSlowCaseEj>
    d6f4:	b	d734 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x2e4>
    d6f8:	ldr	x0, [sp, #160]
    d6fc:	nop
    d700:	cbz	w1, d9e0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x590>
    d704:	mov	w2, #0x40                  	// #64
    d708:	sub	w2, w2, w1
    d70c:	cmp	w20, w1
    d710:	mov	x1, #0xffffffffffffffff    	// #-1
    d714:	lsl	x0, x0, x2
    d718:	asr	x0, x0, x2
    d71c:	asr	x3, x0, #63
    d720:	asr	x0, x0, x20
    d724:	csel	x0, x0, x3, ne  // ne = any
    d728:	lsr	x1, x1, x2
    d72c:	and	x0, x1, x0
    d730:	str	x0, [sp, #160]
    d734:	ldr	w0, [sp, #384]
    d738:	cmp	w0, #0x40
    d73c:	b.ls	d74c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x2fc>  // b.plast
    d740:	ldr	x0, [sp, #376]
    d744:	cbz	x0, d74c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x2fc>
    d748:	bl	0 <_ZdaPv>
    d74c:	ldr	x0, [sp, #160]
    d750:	str	x0, [sp, #376]
    d754:	ldr	w0, [sp, #168]
    d758:	str	w0, [sp, #384]
    d75c:	ldr	w0, [sp, #152]
    d760:	cmp	w0, #0x40
    d764:	b.ls	d774 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x324>  // b.plast
    d768:	ldr	x0, [sp, #144]
    d76c:	cbz	x0, d774 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x324>
    d770:	bl	0 <_ZdaPv>
    d774:	ldp	x0, x1, [sp, #256]
    d778:	add	x20, sp, #0x170
    d77c:	cmp	x0, x1
    d780:	b.eq	d814 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x3c4>  // b.none
    d784:	mov	x1, x20
    d788:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d78c:	ldr	x0, [sp, #256]
    d790:	add	x0, x0, #0x30
    d794:	str	x0, [sp, #256]
    d798:	ldr	w0, [sp, #136]
    d79c:	cmp	w0, #0x40
    d7a0:	b.ls	d7b0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x360>  // b.plast
    d7a4:	ldr	x0, [sp, #128]
    d7a8:	cbz	x0, d7b0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x360>
    d7ac:	bl	0 <_ZdaPv>
    d7b0:	ldp	x27, x28, [sp, #392]
    d7b4:	cmp	x27, x28
    d7b8:	b.eq	d7d8 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x388>  // b.none
    d7bc:	nop
    d7c0:	mov	x0, x27
    d7c4:	add	x27, x27, #0x30
    d7c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d7cc:	cmp	x28, x27
    d7d0:	b.ne	d7c0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x370>  // b.any
    d7d4:	ldr	x28, [sp, #392]
    d7d8:	cbz	x28, d7e4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x394>
    d7dc:	mov	x0, x28
    d7e0:	bl	0 <_ZdlPv>
    d7e4:	ldr	w0, [sp, #384]
    d7e8:	cmp	w0, #0x40
    d7ec:	b.ls	d7fc <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x3ac>  // b.plast
    d7f0:	ldr	x0, [sp, #376]
    d7f4:	cbz	x0, d7fc <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x3ac>
    d7f8:	bl	0 <_ZdaPv>
    d7fc:	add	w0, w19, #0x1
    d800:	mov	x19, x0
    d804:	cmp	x22, w0, uxtw
    d808:	b.ls	d608 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1b8>  // b.plast
    d80c:	ldr	x1, [sp, #344]
    d810:	b	d520 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0xd0>
    d814:	mov	x1, x0
    d818:	mov	x2, x20
    d81c:	ldr	x0, [sp, #120]
    d820:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d824:	b	d798 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x348>
    d828:	str	w0, [sp, #168]
    d82c:	b	d5d4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x184>
    d830:	add	x0, x26, #0x8
    d834:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d838:	ldr	w1, [sp, #288]
    d83c:	mov	x19, x0
    d840:	str	w1, [sp, #184]
    d844:	cmp	w1, #0x40
    d848:	b.hi	d970 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x520>  // b.pmore
    d84c:	ldr	x0, [sp, #280]
    d850:	str	x0, [sp, #176]
    d854:	str	w1, [sp, #200]
    d858:	ldr	x0, [sp, #176]
    d85c:	str	x0, [sp, #192]
    d860:	mov	w2, w1
    d864:	cmp	x19, w1, uxtw
    d868:	mov	w20, w19
    d86c:	b.cc	d9b8 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x568>  // b.lo, b.ul, b.last
    d870:	sub	w0, w1, #0x1
    d874:	orr	x0, x0, x0, lsr #1
    d878:	orr	x0, x0, x0, lsr #2
    d87c:	orr	x0, x0, x0, lsr #4
    d880:	orr	x0, x0, x0, lsr #8
    d884:	orr	x0, x0, x0, lsr #16
    d888:	and	w20, w20, w0
    d88c:	str	w2, [sp, #216]
    d890:	cmp	w2, #0x40
    d894:	b.hi	d93c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x4ec>  // b.pmore
    d898:	ldr	x0, [sp, #176]
    d89c:	str	x0, [sp, #208]
    d8a0:	cmp	w2, w20
    d8a4:	b.cc	d5e4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x194>  // b.lo, b.ul, b.last
    d8a8:	ldr	x1, [sp, #208]
    d8ac:	cbz	w2, d9e0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x590>
    d8b0:	mov	w3, #0x40                  	// #64
    d8b4:	sub	w3, w3, w2
    d8b8:	cmp	w20, w2
    d8bc:	add	x0, sp, #0xd0
    d8c0:	lsl	x1, x1, x3
    d8c4:	asr	x1, x1, x3
    d8c8:	asr	x2, x1, #63
    d8cc:	asr	x1, x1, x20
    d8d0:	csel	x1, x1, x2, ne  // ne = any
    d8d4:	str	x1, [sp, #208]
    d8d8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d8dc:	ldr	w0, [sp, #240]
    d8e0:	cmp	w0, #0x40
    d8e4:	b.ls	d8f4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x4a4>  // b.plast
    d8e8:	ldr	x0, [sp, #232]
    d8ec:	cbz	x0, d8f4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x4a4>
    d8f0:	bl	0 <_ZdaPv>
    d8f4:	ldr	x0, [sp, #208]
    d8f8:	str	x0, [sp, #232]
    d8fc:	ldr	w0, [sp, #216]
    d900:	str	w0, [sp, #240]
    d904:	ldr	w0, [sp, #200]
    d908:	cmp	w0, #0x40
    d90c:	b.ls	d91c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x4cc>  // b.plast
    d910:	ldr	x0, [sp, #192]
    d914:	cbz	x0, d91c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x4cc>
    d918:	bl	0 <_ZdaPv>
    d91c:	ldr	w0, [sp, #184]
    d920:	cmp	w0, #0x40
    d924:	b.ls	d604 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1b4>  // b.plast
    d928:	ldr	x0, [sp, #176]
    d92c:	add	x20, sp, #0x170
    d930:	cbz	x0, d608 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1b8>
    d934:	bl	0 <_ZdaPv>
    d938:	b	d608 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1b8>
    d93c:	add	x19, sp, #0xd0
    d940:	add	x1, sp, #0xb0
    d944:	mov	x0, x19
    d948:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d94c:	ldr	w2, [sp, #216]
    d950:	cmp	w20, w2
    d954:	b.hi	d5e4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x194>  // b.pmore
    d958:	cmp	w2, #0x40
    d95c:	b.ls	d8a8 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x458>  // b.plast
    d960:	mov	w1, w20
    d964:	mov	x0, x19
    d968:	bl	0 <_ZN4llvm5APInt12ashrSlowCaseEj>
    d96c:	b	d8dc <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x48c>
    d970:	ldr	x0, [sp, #104]
    d974:	add	x20, sp, #0xb0
    d978:	add	x1, x0, #0x8
    d97c:	mov	x0, x20
    d980:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d984:	ldr	w1, [sp, #184]
    d988:	str	w1, [sp, #200]
    d98c:	cmp	w1, #0x40
    d990:	b.ls	d858 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x408>  // b.plast
    d994:	mov	x1, x20
    d998:	add	x0, sp, #0xc0
    d99c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d9a0:	mov	w20, w19
    d9a4:	ldr	w1, [sp, #200]
    d9a8:	ldr	w2, [sp, #184]
    d9ac:	cmp	x19, w1, uxtw
    d9b0:	b.cs	d870 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x420>  // b.hs, b.nlast
    d9b4:	b	d88c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x43c>
    d9b8:	str	w1, [sp, #216]
    d9bc:	b	d898 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x448>
    d9c0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d9c4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d9c8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d9cc:	add	x3, x3, #0x0
    d9d0:	add	x1, x1, #0x0
    d9d4:	add	x0, x0, #0x0
    d9d8:	mov	w2, #0x657                 	// #1623
    d9dc:	bl	0 <__assert_fail>
    d9e0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d9e4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d9e8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    d9ec:	add	x3, x3, #0x0
    d9f0:	add	x1, x1, #0x0
    d9f4:	add	x0, x0, #0x0
    d9f8:	mov	w2, #0x307                 	// #775
    d9fc:	bl	0 <__assert_fail>
    da00:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    da04:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    da08:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    da0c:	add	x3, x3, #0x0
    da10:	add	x1, x1, #0x0
    da14:	add	x0, x0, #0x0
    da18:	mov	w2, #0x4e4                 	// #1252
    da1c:	bl	0 <__assert_fail>

000000000000da20 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    da20:	stp	x29, x30, [sp, #-144]!
    da24:	mov	w4, #0x1                   	// #1
    da28:	mov	x29, sp
    da2c:	stp	x23, x24, [sp, #48]
    da30:	mov	x23, x8
    da34:	add	x24, sp, #0x60
    da38:	stp	x19, x20, [sp, #16]
    da3c:	mov	x19, x1
    da40:	mov	x20, x2
    da44:	stp	x21, x22, [sp, #32]
    da48:	mov	x22, x8
    da4c:	mov	x21, x8
    da50:	stp	xzr, xzr, [x23, #24]!
    da54:	mov	x2, x3
    da58:	mov	x8, x24
    da5c:	str	xzr, [x23, #16]
    da60:	str	xzr, [x22], #8
    da64:	str	xzr, [x21, #8]
    da68:	str	w4, [x22, #8]
    da6c:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    da70:	ldr	x0, [x19]
    da74:	ldrb	w0, [x0, #8]
    da78:	cmp	w0, #0x10
    da7c:	b.ne	dbbc <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x19c>  // b.any
    da80:	ldrb	w0, [x20, #8]
    da84:	stp	x25, x26, [sp, #64]
    da88:	cmp	w0, #0x10
    da8c:	b.eq	dc10 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1f0>  // b.none
    da90:	cmp	w0, #0xb
    da94:	b.ne	dcdc <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2bc>  // b.any
    da98:	ldp	x19, x22, [sp, #120]
    da9c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    daa0:	ldp	x26, x25, [x21, #24]
    daa4:	movk	x2, #0xaaab
    daa8:	ldr	w24, [x20, #8]
    daac:	sub	x22, x22, x19
    dab0:	lsr	w24, w24, #8
    dab4:	sub	x0, x25, x26
    dab8:	asr	x22, x22, #4
    dabc:	asr	x0, x0, #4
    dac0:	mul	x22, x22, x2
    dac4:	mul	x0, x0, x2
    dac8:	and	x1, x22, #0xffffffff
    dacc:	cmp	x1, x0
    dad0:	b.hi	dc9c <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x27c>  // b.pmore
    dad4:	b.cc	dc24 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x204>  // b.lo, b.ul, b.last
    dad8:	cbz	w22, db58 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x138>
    dadc:	sub	w22, w22, #0x1
    dae0:	add	x25, sp, #0x50
    dae4:	add	x22, x22, #0x1
    dae8:	mov	x20, #0x0                   	// #0
    daec:	add	x22, x22, x22, lsl #1
    daf0:	lsl	x22, x22, #4
    daf4:	nop
    daf8:	ldr	x1, [x21, #24]
    dafc:	add	x0, x19, x20
    db00:	add	x0, x0, #0x8
    db04:	mov	x8, x25
    db08:	add	x19, x1, x20
    db0c:	mov	w1, w24
    db10:	add	x23, x19, #0x8
    db14:	bl	0 <_ZNK4llvm5APInt5truncEj>
    db18:	cmp	x25, x23
    db1c:	b.eq	dcb0 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x290>  // b.none
    db20:	ldr	w0, [x19, #16]
    db24:	cmp	w0, #0x40
    db28:	b.ls	db38 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x118>  // b.plast
    db2c:	ldr	x0, [x19, #8]
    db30:	cbz	x0, db38 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x118>
    db34:	bl	0 <_ZdaPv>
    db38:	ldr	x0, [sp, #80]
    db3c:	str	x0, [x19, #8]
    db40:	add	x20, x20, #0x30
    db44:	ldr	w0, [sp, #88]
    db48:	cmp	x20, x22
    db4c:	ldr	x19, [sp, #120]
    db50:	str	w0, [x23, #8]
    db54:	b.ne	daf8 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd8>  // b.any
    db58:	ldp	x25, x26, [sp, #64]
    db5c:	ldr	x20, [sp, #128]
    db60:	cmp	x19, x20
    db64:	b.eq	db80 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x160>  // b.none
    db68:	mov	x0, x19
    db6c:	add	x19, x19, #0x30
    db70:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    db74:	cmp	x20, x19
    db78:	b.ne	db68 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x148>  // b.any
    db7c:	ldr	x20, [sp, #120]
    db80:	cbz	x20, db8c <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>
    db84:	mov	x0, x20
    db88:	bl	0 <_ZdlPv>
    db8c:	ldr	w0, [sp, #112]
    db90:	cmp	w0, #0x40
    db94:	b.ls	dba4 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x184>  // b.plast
    db98:	ldr	x0, [sp, #104]
    db9c:	cbz	x0, dba4 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x184>
    dba0:	bl	0 <_ZdaPv>
    dba4:	mov	x0, x21
    dba8:	ldp	x19, x20, [sp, #16]
    dbac:	ldp	x21, x22, [sp, #32]
    dbb0:	ldp	x23, x24, [sp, #48]
    dbb4:	ldp	x29, x30, [sp], #144
    dbb8:	ret
    dbbc:	cbz	x20, dcd0 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b0>
    dbc0:	ldrb	w0, [x20, #8]
    dbc4:	cmp	w0, #0xb
    dbc8:	b.ne	dcd8 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b8>  // b.any
    dbcc:	ldr	w1, [x20, #8]
    dbd0:	add	x0, x24, #0x8
    dbd4:	add	x8, sp, #0x50
    dbd8:	lsr	w1, w1, #8
    dbdc:	bl	0 <_ZNK4llvm5APInt5truncEj>
    dbe0:	ldr	w0, [x21, #16]
    dbe4:	cmp	w0, #0x40
    dbe8:	b.ls	dbf8 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d8>  // b.plast
    dbec:	ldr	x0, [x21, #8]
    dbf0:	cbz	x0, dbf8 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d8>
    dbf4:	bl	0 <_ZdaPv>
    dbf8:	ldr	x0, [sp, #80]
    dbfc:	str	x0, [x21, #8]
    dc00:	ldr	w0, [sp, #88]
    dc04:	str	w0, [x22, #8]
    dc08:	ldr	x19, [sp, #120]
    dc0c:	b	db5c <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x13c>
    dc10:	ldr	x0, [x20, #16]
    dc14:	ldr	x20, [x0]
    dc18:	cbz	x20, dcd4 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b4>
    dc1c:	ldrb	w0, [x20, #8]
    dc20:	b	da90 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x70>
    dc24:	add	x1, x1, x1, lsl #1
    dc28:	add	x26, x26, x1, lsl #4
    dc2c:	cmp	x25, x26
    dc30:	b.eq	dad8 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb8>  // b.none
    dc34:	mov	x23, x26
    dc38:	ldp	x19, x20, [x23, #24]
    dc3c:	cmp	x19, x20
    dc40:	b.eq	dc60 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x240>  // b.none
    dc44:	nop
    dc48:	mov	x0, x19
    dc4c:	add	x19, x19, #0x30
    dc50:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dc54:	cmp	x20, x19
    dc58:	b.ne	dc48 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x228>  // b.any
    dc5c:	ldr	x20, [x23, #24]
    dc60:	cbz	x20, dc6c <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x24c>
    dc64:	mov	x0, x20
    dc68:	bl	0 <_ZdlPv>
    dc6c:	ldr	w0, [x23, #16]
    dc70:	cmp	w0, #0x40
    dc74:	b.ls	dc84 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x264>  // b.plast
    dc78:	ldr	x0, [x23, #8]
    dc7c:	cbz	x0, dc84 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x264>
    dc80:	bl	0 <_ZdaPv>
    dc84:	add	x23, x23, #0x30
    dc88:	cmp	x25, x23
    dc8c:	b.ne	dc38 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x218>  // b.any
    dc90:	str	x26, [x21, #32]
    dc94:	ldr	x19, [sp, #120]
    dc98:	b	dad8 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb8>
    dc9c:	sub	x1, x1, x0
    dca0:	mov	x0, x23
    dca4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dca8:	ldr	x19, [sp, #120]
    dcac:	b	dad8 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb8>
    dcb0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dcb4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dcb8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dcbc:	add	x3, x3, #0x0
    dcc0:	add	x1, x1, #0x0
    dcc4:	add	x0, x0, #0x0
    dcc8:	mov	w2, #0x302                 	// #770
    dccc:	bl	0 <__assert_fail>
    dcd0:	stp	x25, x26, [sp, #64]
    dcd4:	bl	f0 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
    dcd8:	stp	x25, x26, [sp, #64]
    dcdc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dce0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dce4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dce8:	add	x3, x3, #0x0
    dcec:	add	x1, x1, #0x0
    dcf0:	add	x0, x0, #0x0
    dcf4:	mov	w2, #0x108                 	// #264
    dcf8:	bl	0 <__assert_fail>
    dcfc:	nop

000000000000dd00 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE>:
    dd00:	stp	x29, x30, [sp, #-96]!
    dd04:	mov	x29, sp
    dd08:	stp	x19, x20, [sp, #16]
    dd0c:	mov	x19, x1
    dd10:	ldr	x20, [x0, #704]
    dd14:	ldur	x1, [x1, #-24]
    dd18:	sub	x20, x20, #0x80
    dd1c:	ldr	x2, [x19]
    dd20:	str	x21, [sp, #32]
    dd24:	add	x21, sp, #0x30
    dd28:	mov	x3, x20
    dd2c:	mov	x8, x21
    dd30:	bl	da20 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    dd34:	mov	x2, x20
    dd38:	mov	x0, x19
    dd3c:	mov	x1, x21
    dd40:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    dd44:	ldp	x19, x20, [sp, #72]
    dd48:	cmp	x19, x20
    dd4c:	b.eq	dd68 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE+0x68>  // b.none
    dd50:	mov	x0, x19
    dd54:	add	x19, x19, #0x30
    dd58:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dd5c:	cmp	x20, x19
    dd60:	b.ne	dd50 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE+0x50>  // b.any
    dd64:	ldr	x20, [sp, #72]
    dd68:	cbz	x20, dd74 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE+0x74>
    dd6c:	mov	x0, x20
    dd70:	bl	0 <_ZdlPv>
    dd74:	ldr	w0, [sp, #64]
    dd78:	cmp	w0, #0x40
    dd7c:	b.ls	dd8c <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE+0x8c>  // b.plast
    dd80:	ldr	x0, [sp, #56]
    dd84:	cbz	x0, dd8c <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE+0x8c>
    dd88:	bl	0 <_ZdaPv>
    dd8c:	ldp	x19, x20, [sp, #16]
    dd90:	ldr	x21, [sp, #32]
    dd94:	ldp	x29, x30, [sp], #96
    dd98:	ret
    dd9c:	nop

000000000000dda0 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    dda0:	stp	x29, x30, [sp, #-144]!
    dda4:	mov	w4, #0x1                   	// #1
    dda8:	mov	x29, sp
    ddac:	stp	x23, x24, [sp, #48]
    ddb0:	mov	x23, x8
    ddb4:	stp	x19, x20, [sp, #16]
    ddb8:	add	x19, sp, #0x60
    ddbc:	mov	x20, x2
    ddc0:	stp	x21, x22, [sp, #32]
    ddc4:	mov	x22, x8
    ddc8:	mov	x21, x8
    ddcc:	ldr	x24, [x1]
    ddd0:	stp	xzr, xzr, [x23, #24]!
    ddd4:	mov	x2, x3
    ddd8:	str	xzr, [x23, #16]
    dddc:	mov	x8, x19
    dde0:	str	xzr, [x22], #8
    dde4:	str	xzr, [x21, #8]
    dde8:	str	w4, [x22, #8]
    ddec:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ddf0:	ldrb	w0, [x24, #8]
    ddf4:	cmp	w0, #0x10
    ddf8:	b.ne	df34 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x194>  // b.any
    ddfc:	ldrb	w0, [x20, #8]
    de00:	stp	x25, x26, [sp, #64]
    de04:	cmp	w0, #0x10
    de08:	b.eq	df88 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e8>  // b.none
    de0c:	cmp	w0, #0xb
    de10:	b.ne	e054 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b4>  // b.any
    de14:	ldp	x19, x22, [sp, #120]
    de18:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    de1c:	ldp	x26, x25, [x21, #24]
    de20:	movk	x2, #0xaaab
    de24:	ldr	w24, [x20, #8]
    de28:	sub	x22, x22, x19
    de2c:	lsr	w24, w24, #8
    de30:	sub	x0, x25, x26
    de34:	asr	x22, x22, #4
    de38:	asr	x0, x0, #4
    de3c:	mul	x22, x22, x2
    de40:	mul	x0, x0, x2
    de44:	and	x1, x22, #0xffffffff
    de48:	cmp	x1, x0
    de4c:	b.hi	e014 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x274>  // b.pmore
    de50:	b.cc	df9c <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1fc>  // b.lo, b.ul, b.last
    de54:	cbz	w22, ded0 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    de58:	sub	w22, w22, #0x1
    de5c:	add	x25, sp, #0x50
    de60:	add	x22, x22, #0x1
    de64:	mov	x20, #0x0                   	// #0
    de68:	add	x22, x22, x22, lsl #1
    de6c:	lsl	x22, x22, #4
    de70:	ldr	x1, [x21, #24]
    de74:	add	x0, x19, x20
    de78:	add	x0, x0, #0x8
    de7c:	mov	x8, x25
    de80:	add	x19, x1, x20
    de84:	mov	w1, w24
    de88:	add	x23, x19, #0x8
    de8c:	bl	0 <_ZNK4llvm5APInt4sextEj>
    de90:	cmp	x25, x23
    de94:	b.eq	e028 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x288>  // b.none
    de98:	ldr	w0, [x19, #16]
    de9c:	cmp	w0, #0x40
    dea0:	b.ls	deb0 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>  // b.plast
    dea4:	ldr	x0, [x19, #8]
    dea8:	cbz	x0, deb0 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>
    deac:	bl	0 <_ZdaPv>
    deb0:	ldr	x0, [sp, #80]
    deb4:	str	x0, [x19, #8]
    deb8:	add	x20, x20, #0x30
    debc:	ldr	w0, [sp, #88]
    dec0:	cmp	x20, x22
    dec4:	ldr	x19, [sp, #120]
    dec8:	str	w0, [x23, #8]
    decc:	b.ne	de70 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd0>  // b.any
    ded0:	ldp	x25, x26, [sp, #64]
    ded4:	ldr	x20, [sp, #128]
    ded8:	cmp	x19, x20
    dedc:	b.eq	def8 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x158>  // b.none
    dee0:	mov	x0, x19
    dee4:	add	x19, x19, #0x30
    dee8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    deec:	cmp	x20, x19
    def0:	b.ne	dee0 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x140>  // b.any
    def4:	ldr	x20, [sp, #120]
    def8:	cbz	x20, df04 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x164>
    defc:	mov	x0, x20
    df00:	bl	0 <_ZdlPv>
    df04:	ldr	w0, [sp, #112]
    df08:	cmp	w0, #0x40
    df0c:	b.ls	df1c <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x17c>  // b.plast
    df10:	ldr	x0, [sp, #104]
    df14:	cbz	x0, df1c <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x17c>
    df18:	bl	0 <_ZdaPv>
    df1c:	mov	x0, x21
    df20:	ldp	x19, x20, [sp, #16]
    df24:	ldp	x21, x22, [sp, #32]
    df28:	ldp	x23, x24, [sp, #48]
    df2c:	ldp	x29, x30, [sp], #144
    df30:	ret
    df34:	cbz	x20, e048 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2a8>
    df38:	ldrb	w0, [x20, #8]
    df3c:	cmp	w0, #0xb
    df40:	b.ne	e050 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b0>  // b.any
    df44:	ldr	w1, [x20, #8]
    df48:	add	x0, x19, #0x8
    df4c:	add	x8, sp, #0x50
    df50:	lsr	w1, w1, #8
    df54:	bl	0 <_ZNK4llvm5APInt4sextEj>
    df58:	ldr	w0, [x21, #16]
    df5c:	cmp	w0, #0x40
    df60:	b.ls	df70 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d0>  // b.plast
    df64:	ldr	x0, [x21, #8]
    df68:	cbz	x0, df70 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d0>
    df6c:	bl	0 <_ZdaPv>
    df70:	ldr	x0, [sp, #80]
    df74:	str	x0, [x21, #8]
    df78:	ldr	w0, [sp, #88]
    df7c:	str	w0, [x22, #8]
    df80:	ldr	x19, [sp, #120]
    df84:	b	ded4 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x134>
    df88:	ldr	x0, [x20, #16]
    df8c:	ldr	x20, [x0]
    df90:	cbz	x20, e04c <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2ac>
    df94:	ldrb	w0, [x20, #8]
    df98:	b	de0c <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6c>
    df9c:	add	x1, x1, x1, lsl #1
    dfa0:	add	x26, x26, x1, lsl #4
    dfa4:	cmp	x25, x26
    dfa8:	b.eq	de54 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>  // b.none
    dfac:	mov	x23, x26
    dfb0:	ldp	x19, x20, [x23, #24]
    dfb4:	cmp	x19, x20
    dfb8:	b.eq	dfd8 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x238>  // b.none
    dfbc:	nop
    dfc0:	mov	x0, x19
    dfc4:	add	x19, x19, #0x30
    dfc8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    dfcc:	cmp	x20, x19
    dfd0:	b.ne	dfc0 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x220>  // b.any
    dfd4:	ldr	x20, [x23, #24]
    dfd8:	cbz	x20, dfe4 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x244>
    dfdc:	mov	x0, x20
    dfe0:	bl	0 <_ZdlPv>
    dfe4:	ldr	w0, [x23, #16]
    dfe8:	cmp	w0, #0x40
    dfec:	b.ls	dffc <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x25c>  // b.plast
    dff0:	ldr	x0, [x23, #8]
    dff4:	cbz	x0, dffc <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x25c>
    dff8:	bl	0 <_ZdaPv>
    dffc:	add	x23, x23, #0x30
    e000:	cmp	x25, x23
    e004:	b.ne	dfb0 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x210>  // b.any
    e008:	str	x26, [x21, #32]
    e00c:	ldr	x19, [sp, #120]
    e010:	b	de54 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>
    e014:	sub	x1, x1, x0
    e018:	mov	x0, x23
    e01c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e020:	ldr	x19, [sp, #120]
    e024:	b	de54 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>
    e028:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e02c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e030:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e034:	add	x3, x3, #0x0
    e038:	add	x1, x1, #0x0
    e03c:	add	x0, x0, #0x0
    e040:	mov	w2, #0x302                 	// #770
    e044:	bl	0 <__assert_fail>
    e048:	stp	x25, x26, [sp, #64]
    e04c:	bl	f0 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
    e050:	stp	x25, x26, [sp, #64]
    e054:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e058:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e05c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e060:	add	x3, x3, #0x0
    e064:	add	x1, x1, #0x0
    e068:	add	x0, x0, #0x0
    e06c:	mov	w2, #0x108                 	// #264
    e070:	bl	0 <__assert_fail>
    e074:	nop

000000000000e078 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE>:
    e078:	stp	x29, x30, [sp, #-96]!
    e07c:	mov	x29, sp
    e080:	stp	x19, x20, [sp, #16]
    e084:	mov	x19, x1
    e088:	ldr	x20, [x0, #704]
    e08c:	ldur	x1, [x1, #-24]
    e090:	sub	x20, x20, #0x80
    e094:	ldr	x2, [x19]
    e098:	str	x21, [sp, #32]
    e09c:	add	x21, sp, #0x30
    e0a0:	mov	x3, x20
    e0a4:	mov	x8, x21
    e0a8:	bl	dda0 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    e0ac:	mov	x2, x20
    e0b0:	mov	x0, x19
    e0b4:	mov	x1, x21
    e0b8:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    e0bc:	ldp	x19, x20, [sp, #72]
    e0c0:	cmp	x19, x20
    e0c4:	b.eq	e0e0 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE+0x68>  // b.none
    e0c8:	mov	x0, x19
    e0cc:	add	x19, x19, #0x30
    e0d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e0d4:	cmp	x20, x19
    e0d8:	b.ne	e0c8 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE+0x50>  // b.any
    e0dc:	ldr	x20, [sp, #72]
    e0e0:	cbz	x20, e0ec <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE+0x74>
    e0e4:	mov	x0, x20
    e0e8:	bl	0 <_ZdlPv>
    e0ec:	ldr	w0, [sp, #64]
    e0f0:	cmp	w0, #0x40
    e0f4:	b.ls	e104 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE+0x8c>  // b.plast
    e0f8:	ldr	x0, [sp, #56]
    e0fc:	cbz	x0, e104 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE+0x8c>
    e100:	bl	0 <_ZdaPv>
    e104:	ldp	x19, x20, [sp, #16]
    e108:	ldr	x21, [sp, #32]
    e10c:	ldp	x29, x30, [sp], #96
    e110:	ret
    e114:	nop

000000000000e118 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    e118:	stp	x29, x30, [sp, #-144]!
    e11c:	mov	w4, #0x1                   	// #1
    e120:	mov	x29, sp
    e124:	stp	x23, x24, [sp, #48]
    e128:	mov	x23, x8
    e12c:	stp	x19, x20, [sp, #16]
    e130:	add	x19, sp, #0x60
    e134:	mov	x20, x2
    e138:	stp	x21, x22, [sp, #32]
    e13c:	mov	x22, x8
    e140:	mov	x21, x8
    e144:	ldr	x24, [x1]
    e148:	stp	xzr, xzr, [x23, #24]!
    e14c:	mov	x2, x3
    e150:	str	xzr, [x23, #16]
    e154:	mov	x8, x19
    e158:	str	xzr, [x22], #8
    e15c:	str	xzr, [x21, #8]
    e160:	str	w4, [x22, #8]
    e164:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    e168:	ldrb	w0, [x24, #8]
    e16c:	cmp	w0, #0x10
    e170:	b.ne	e2ac <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x194>  // b.any
    e174:	ldrb	w0, [x20, #8]
    e178:	stp	x25, x26, [sp, #64]
    e17c:	cmp	w0, #0x10
    e180:	b.eq	e300 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e8>  // b.none
    e184:	cmp	w0, #0xb
    e188:	b.ne	e3cc <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b4>  // b.any
    e18c:	ldp	x19, x22, [sp, #120]
    e190:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    e194:	ldp	x26, x25, [x21, #24]
    e198:	movk	x2, #0xaaab
    e19c:	ldr	w24, [x20, #8]
    e1a0:	sub	x22, x22, x19
    e1a4:	lsr	w24, w24, #8
    e1a8:	sub	x0, x25, x26
    e1ac:	asr	x22, x22, #4
    e1b0:	asr	x0, x0, #4
    e1b4:	mul	x22, x22, x2
    e1b8:	mul	x0, x0, x2
    e1bc:	and	x1, x22, #0xffffffff
    e1c0:	cmp	x1, x0
    e1c4:	b.hi	e38c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x274>  // b.pmore
    e1c8:	b.cc	e314 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1fc>  // b.lo, b.ul, b.last
    e1cc:	cbz	w22, e248 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    e1d0:	sub	w22, w22, #0x1
    e1d4:	add	x25, sp, #0x50
    e1d8:	add	x22, x22, #0x1
    e1dc:	mov	x20, #0x0                   	// #0
    e1e0:	add	x22, x22, x22, lsl #1
    e1e4:	lsl	x22, x22, #4
    e1e8:	ldr	x1, [x21, #24]
    e1ec:	add	x0, x19, x20
    e1f0:	add	x0, x0, #0x8
    e1f4:	mov	x8, x25
    e1f8:	add	x19, x1, x20
    e1fc:	mov	w1, w24
    e200:	add	x23, x19, #0x8
    e204:	bl	0 <_ZNK4llvm5APInt4zextEj>
    e208:	cmp	x25, x23
    e20c:	b.eq	e3a0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x288>  // b.none
    e210:	ldr	w0, [x19, #16]
    e214:	cmp	w0, #0x40
    e218:	b.ls	e228 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>  // b.plast
    e21c:	ldr	x0, [x19, #8]
    e220:	cbz	x0, e228 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>
    e224:	bl	0 <_ZdaPv>
    e228:	ldr	x0, [sp, #80]
    e22c:	str	x0, [x19, #8]
    e230:	add	x20, x20, #0x30
    e234:	ldr	w0, [sp, #88]
    e238:	cmp	x20, x22
    e23c:	ldr	x19, [sp, #120]
    e240:	str	w0, [x23, #8]
    e244:	b.ne	e1e8 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd0>  // b.any
    e248:	ldp	x25, x26, [sp, #64]
    e24c:	ldr	x20, [sp, #128]
    e250:	cmp	x19, x20
    e254:	b.eq	e270 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x158>  // b.none
    e258:	mov	x0, x19
    e25c:	add	x19, x19, #0x30
    e260:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e264:	cmp	x20, x19
    e268:	b.ne	e258 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x140>  // b.any
    e26c:	ldr	x20, [sp, #120]
    e270:	cbz	x20, e27c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x164>
    e274:	mov	x0, x20
    e278:	bl	0 <_ZdlPv>
    e27c:	ldr	w0, [sp, #112]
    e280:	cmp	w0, #0x40
    e284:	b.ls	e294 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x17c>  // b.plast
    e288:	ldr	x0, [sp, #104]
    e28c:	cbz	x0, e294 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x17c>
    e290:	bl	0 <_ZdaPv>
    e294:	mov	x0, x21
    e298:	ldp	x19, x20, [sp, #16]
    e29c:	ldp	x21, x22, [sp, #32]
    e2a0:	ldp	x23, x24, [sp, #48]
    e2a4:	ldp	x29, x30, [sp], #144
    e2a8:	ret
    e2ac:	cbz	x20, e3c0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2a8>
    e2b0:	ldrb	w0, [x20, #8]
    e2b4:	cmp	w0, #0xb
    e2b8:	b.ne	e3c8 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b0>  // b.any
    e2bc:	ldr	w1, [x20, #8]
    e2c0:	add	x0, x19, #0x8
    e2c4:	add	x8, sp, #0x50
    e2c8:	lsr	w1, w1, #8
    e2cc:	bl	0 <_ZNK4llvm5APInt4zextEj>
    e2d0:	ldr	w0, [x21, #16]
    e2d4:	cmp	w0, #0x40
    e2d8:	b.ls	e2e8 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d0>  // b.plast
    e2dc:	ldr	x0, [x21, #8]
    e2e0:	cbz	x0, e2e8 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d0>
    e2e4:	bl	0 <_ZdaPv>
    e2e8:	ldr	x0, [sp, #80]
    e2ec:	str	x0, [x21, #8]
    e2f0:	ldr	w0, [sp, #88]
    e2f4:	str	w0, [x22, #8]
    e2f8:	ldr	x19, [sp, #120]
    e2fc:	b	e24c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x134>
    e300:	ldr	x0, [x20, #16]
    e304:	ldr	x20, [x0]
    e308:	cbz	x20, e3c4 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2ac>
    e30c:	ldrb	w0, [x20, #8]
    e310:	b	e184 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6c>
    e314:	add	x1, x1, x1, lsl #1
    e318:	add	x26, x26, x1, lsl #4
    e31c:	cmp	x25, x26
    e320:	b.eq	e1cc <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>  // b.none
    e324:	mov	x23, x26
    e328:	ldp	x19, x20, [x23, #24]
    e32c:	cmp	x19, x20
    e330:	b.eq	e350 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x238>  // b.none
    e334:	nop
    e338:	mov	x0, x19
    e33c:	add	x19, x19, #0x30
    e340:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e344:	cmp	x20, x19
    e348:	b.ne	e338 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x220>  // b.any
    e34c:	ldr	x20, [x23, #24]
    e350:	cbz	x20, e35c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x244>
    e354:	mov	x0, x20
    e358:	bl	0 <_ZdlPv>
    e35c:	ldr	w0, [x23, #16]
    e360:	cmp	w0, #0x40
    e364:	b.ls	e374 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x25c>  // b.plast
    e368:	ldr	x0, [x23, #8]
    e36c:	cbz	x0, e374 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x25c>
    e370:	bl	0 <_ZdaPv>
    e374:	add	x23, x23, #0x30
    e378:	cmp	x25, x23
    e37c:	b.ne	e328 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x210>  // b.any
    e380:	str	x26, [x21, #32]
    e384:	ldr	x19, [sp, #120]
    e388:	b	e1cc <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>
    e38c:	sub	x1, x1, x0
    e390:	mov	x0, x23
    e394:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e398:	ldr	x19, [sp, #120]
    e39c:	b	e1cc <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>
    e3a0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e3a4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e3a8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e3ac:	add	x3, x3, #0x0
    e3b0:	add	x1, x1, #0x0
    e3b4:	add	x0, x0, #0x0
    e3b8:	mov	w2, #0x302                 	// #770
    e3bc:	bl	0 <__assert_fail>
    e3c0:	stp	x25, x26, [sp, #64]
    e3c4:	bl	f0 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
    e3c8:	stp	x25, x26, [sp, #64]
    e3cc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e3d0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e3d4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e3d8:	add	x3, x3, #0x0
    e3dc:	add	x1, x1, #0x0
    e3e0:	add	x0, x0, #0x0
    e3e4:	mov	w2, #0x108                 	// #264
    e3e8:	bl	0 <__assert_fail>
    e3ec:	nop

000000000000e3f0 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE>:
    e3f0:	stp	x29, x30, [sp, #-96]!
    e3f4:	mov	x29, sp
    e3f8:	stp	x19, x20, [sp, #16]
    e3fc:	mov	x19, x1
    e400:	ldr	x20, [x0, #704]
    e404:	ldur	x1, [x1, #-24]
    e408:	sub	x20, x20, #0x80
    e40c:	ldr	x2, [x19]
    e410:	str	x21, [sp, #32]
    e414:	add	x21, sp, #0x30
    e418:	mov	x3, x20
    e41c:	mov	x8, x21
    e420:	bl	e118 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    e424:	mov	x2, x20
    e428:	mov	x0, x19
    e42c:	mov	x1, x21
    e430:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    e434:	ldp	x19, x20, [sp, #72]
    e438:	cmp	x19, x20
    e43c:	b.eq	e458 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE+0x68>  // b.none
    e440:	mov	x0, x19
    e444:	add	x19, x19, #0x30
    e448:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e44c:	cmp	x20, x19
    e450:	b.ne	e440 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE+0x50>  // b.any
    e454:	ldr	x20, [sp, #72]
    e458:	cbz	x20, e464 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE+0x74>
    e45c:	mov	x0, x20
    e460:	bl	0 <_ZdlPv>
    e464:	ldr	w0, [sp, #64]
    e468:	cmp	w0, #0x40
    e46c:	b.ls	e47c <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE+0x8c>  // b.plast
    e470:	ldr	x0, [sp, #56]
    e474:	cbz	x0, e47c <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE+0x8c>
    e478:	bl	0 <_ZdaPv>
    e47c:	ldp	x19, x20, [sp, #16]
    e480:	ldr	x21, [sp, #32]
    e484:	ldp	x29, x30, [sp], #96
    e488:	ret
    e48c:	nop

000000000000e490 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    e490:	stp	x29, x30, [sp, #-96]!
    e494:	mov	x4, x8
    e498:	mov	w5, #0x1                   	// #1
    e49c:	mov	x29, sp
    e4a0:	stp	x21, x22, [sp, #32]
    e4a4:	mov	x21, x8
    e4a8:	mov	x22, x1
    e4ac:	stp	x19, x20, [sp, #16]
    e4b0:	mov	x20, x8
    e4b4:	mov	x19, x2
    e4b8:	stp	xzr, xzr, [x21, #24]!
    e4bc:	mov	x2, x3
    e4c0:	add	x8, sp, #0x30
    e4c4:	str	xzr, [x21, #16]
    e4c8:	str	xzr, [x4], #8
    e4cc:	str	xzr, [x20, #8]
    e4d0:	str	w5, [x4, #8]
    e4d4:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    e4d8:	ldr	x1, [x22]
    e4dc:	ldrb	w0, [x1, #8]
    e4e0:	cmp	w0, #0x10
    e4e4:	b.eq	e568 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd8>  // b.none
    e4e8:	cmp	w0, #0x3
    e4ec:	b.ne	e5fc <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>  // b.any
    e4f0:	ldrb	w0, [x19, #8]
    e4f4:	cmp	w0, #0x2
    e4f8:	b.ne	e5fc <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>  // b.any
    e4fc:	ldr	d0, [sp, #48]
    e500:	fcvt	s0, d0
    e504:	str	s0, [x20]
    e508:	ldp	x19, x21, [sp, #72]
    e50c:	cmp	x19, x21
    e510:	b.eq	e530 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa0>  // b.none
    e514:	nop
    e518:	mov	x0, x19
    e51c:	add	x19, x19, #0x30
    e520:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e524:	cmp	x21, x19
    e528:	b.ne	e518 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x88>  // b.any
    e52c:	ldr	x21, [sp, #72]
    e530:	cbz	x21, e53c <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xac>
    e534:	mov	x0, x21
    e538:	bl	0 <_ZdlPv>
    e53c:	ldr	w0, [sp, #64]
    e540:	cmp	w0, #0x40
    e544:	b.ls	e554 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc4>  // b.plast
    e548:	ldr	x0, [sp, #56]
    e54c:	cbz	x0, e554 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc4>
    e550:	bl	0 <_ZdaPv>
    e554:	mov	x0, x20
    e558:	ldp	x19, x20, [sp, #16]
    e55c:	ldp	x21, x22, [sp, #32]
    e560:	ldp	x29, x30, [sp], #96
    e564:	ret
    e568:	ldr	x0, [x1, #16]
    e56c:	ldr	x0, [x0]
    e570:	ldrb	w0, [x0, #8]
    e574:	cmp	w0, #0x3
    e578:	b.ne	e61c <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x18c>  // b.any
    e57c:	ldrb	w0, [x19, #8]
    e580:	cmp	w0, #0x10
    e584:	b.ne	e594 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x104>  // b.any
    e588:	ldr	x0, [x19, #16]
    e58c:	ldr	x0, [x0]
    e590:	ldrb	w0, [x0, #8]
    e594:	cmp	w0, #0x2
    e598:	b.ne	e61c <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x18c>  // b.any
    e59c:	ldp	x2, x19, [sp, #72]
    e5a0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    e5a4:	movk	x1, #0xaaab
    e5a8:	mov	x0, x21
    e5ac:	sub	x19, x19, x2
    e5b0:	asr	x19, x19, #4
    e5b4:	mul	x19, x19, x1
    e5b8:	mov	w1, w19
    e5bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e5c0:	cbz	w19, e508 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78>
    e5c4:	sub	w1, w19, #0x1
    e5c8:	mov	x0, #0x0                   	// #0
    e5cc:	add	x1, x1, #0x1
    e5d0:	add	x1, x1, x1, lsl #1
    e5d4:	lsl	x1, x1, #4
    e5d8:	ldr	x3, [sp, #72]
    e5dc:	ldr	x2, [x20, #24]
    e5e0:	ldr	d0, [x3, x0]
    e5e4:	fcvt	s0, d0
    e5e8:	str	s0, [x2, x0]
    e5ec:	add	x0, x0, #0x30
    e5f0:	cmp	x0, x1
    e5f4:	b.ne	e5d8 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x148>  // b.any
    e5f8:	b	e508 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78>
    e5fc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e600:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e604:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e608:	add	x3, x3, #0x0
    e60c:	add	x1, x1, #0x0
    e610:	add	x0, x0, #0x0
    e614:	mov	w2, #0x542                 	// #1346
    e618:	bl	0 <__assert_fail>
    e61c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e620:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e624:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e628:	add	x3, x3, #0x0
    e62c:	add	x1, x1, #0x0
    e630:	add	x0, x0, #0x0
    e634:	mov	w2, #0x538                 	// #1336
    e638:	bl	0 <__assert_fail>
    e63c:	nop

000000000000e640 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE>:
    e640:	stp	x29, x30, [sp, #-96]!
    e644:	mov	x29, sp
    e648:	stp	x19, x20, [sp, #16]
    e64c:	mov	x19, x1
    e650:	ldr	x20, [x0, #704]
    e654:	ldur	x1, [x1, #-24]
    e658:	sub	x20, x20, #0x80
    e65c:	ldr	x2, [x19]
    e660:	str	x21, [sp, #32]
    e664:	add	x21, sp, #0x30
    e668:	mov	x3, x20
    e66c:	mov	x8, x21
    e670:	bl	e490 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    e674:	mov	x2, x20
    e678:	mov	x0, x19
    e67c:	mov	x1, x21
    e680:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    e684:	ldp	x19, x20, [sp, #72]
    e688:	cmp	x19, x20
    e68c:	b.eq	e6a8 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE+0x68>  // b.none
    e690:	mov	x0, x19
    e694:	add	x19, x19, #0x30
    e698:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e69c:	cmp	x20, x19
    e6a0:	b.ne	e690 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE+0x50>  // b.any
    e6a4:	ldr	x20, [sp, #72]
    e6a8:	cbz	x20, e6b4 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE+0x74>
    e6ac:	mov	x0, x20
    e6b0:	bl	0 <_ZdlPv>
    e6b4:	ldr	w0, [sp, #64]
    e6b8:	cmp	w0, #0x40
    e6bc:	b.ls	e6cc <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE+0x8c>  // b.plast
    e6c0:	ldr	x0, [sp, #56]
    e6c4:	cbz	x0, e6cc <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE+0x8c>
    e6c8:	bl	0 <_ZdaPv>
    e6cc:	ldp	x19, x20, [sp, #16]
    e6d0:	ldr	x21, [sp, #32]
    e6d4:	ldp	x29, x30, [sp], #96
    e6d8:	ret
    e6dc:	nop

000000000000e6e0 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    e6e0:	stp	x29, x30, [sp, #-96]!
    e6e4:	mov	x4, x8
    e6e8:	mov	w5, #0x1                   	// #1
    e6ec:	mov	x29, sp
    e6f0:	stp	x21, x22, [sp, #32]
    e6f4:	mov	x21, x8
    e6f8:	mov	x22, x1
    e6fc:	stp	x19, x20, [sp, #16]
    e700:	mov	x20, x8
    e704:	mov	x19, x2
    e708:	stp	xzr, xzr, [x21, #24]!
    e70c:	mov	x2, x3
    e710:	add	x8, sp, #0x30
    e714:	str	xzr, [x21, #16]
    e718:	str	xzr, [x4], #8
    e71c:	str	xzr, [x20, #8]
    e720:	str	w5, [x4, #8]
    e724:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    e728:	ldr	x1, [x22]
    e72c:	ldrb	w0, [x1, #8]
    e730:	cmp	w0, #0x10
    e734:	b.eq	e7b8 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd8>  // b.none
    e738:	cmp	w0, #0x2
    e73c:	b.ne	e84c <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>  // b.any
    e740:	ldrb	w0, [x19, #8]
    e744:	cmp	w0, #0x3
    e748:	b.ne	e84c <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>  // b.any
    e74c:	ldr	s0, [sp, #48]
    e750:	fcvt	d0, s0
    e754:	str	d0, [x20]
    e758:	ldp	x19, x21, [sp, #72]
    e75c:	cmp	x19, x21
    e760:	b.eq	e780 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa0>  // b.none
    e764:	nop
    e768:	mov	x0, x19
    e76c:	add	x19, x19, #0x30
    e770:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e774:	cmp	x21, x19
    e778:	b.ne	e768 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x88>  // b.any
    e77c:	ldr	x21, [sp, #72]
    e780:	cbz	x21, e78c <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xac>
    e784:	mov	x0, x21
    e788:	bl	0 <_ZdlPv>
    e78c:	ldr	w0, [sp, #64]
    e790:	cmp	w0, #0x40
    e794:	b.ls	e7a4 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc4>  // b.plast
    e798:	ldr	x0, [sp, #56]
    e79c:	cbz	x0, e7a4 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc4>
    e7a0:	bl	0 <_ZdaPv>
    e7a4:	mov	x0, x20
    e7a8:	ldp	x19, x20, [sp, #16]
    e7ac:	ldp	x21, x22, [sp, #32]
    e7b0:	ldp	x29, x30, [sp], #96
    e7b4:	ret
    e7b8:	ldr	x0, [x1, #16]
    e7bc:	ldr	x0, [x0]
    e7c0:	ldrb	w0, [x0, #8]
    e7c4:	cmp	w0, #0x2
    e7c8:	b.ne	e86c <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x18c>  // b.any
    e7cc:	ldrb	w0, [x19, #8]
    e7d0:	cmp	w0, #0x10
    e7d4:	b.ne	e7e4 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x104>  // b.any
    e7d8:	ldr	x0, [x19, #16]
    e7dc:	ldr	x0, [x0]
    e7e0:	ldrb	w0, [x0, #8]
    e7e4:	cmp	w0, #0x3
    e7e8:	b.ne	e86c <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x18c>  // b.any
    e7ec:	ldp	x2, x19, [sp, #72]
    e7f0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    e7f4:	movk	x1, #0xaaab
    e7f8:	mov	x0, x21
    e7fc:	sub	x19, x19, x2
    e800:	asr	x19, x19, #4
    e804:	mul	x19, x19, x1
    e808:	mov	w1, w19
    e80c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e810:	cbz	w19, e758 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78>
    e814:	sub	w1, w19, #0x1
    e818:	mov	x0, #0x0                   	// #0
    e81c:	add	x1, x1, #0x1
    e820:	add	x1, x1, x1, lsl #1
    e824:	lsl	x1, x1, #4
    e828:	ldr	x3, [sp, #72]
    e82c:	ldr	x2, [x20, #24]
    e830:	ldr	s0, [x3, x0]
    e834:	fcvt	d0, s0
    e838:	str	d0, [x2, x0]
    e83c:	add	x0, x0, #0x30
    e840:	cmp	x0, x1
    e844:	b.ne	e828 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x148>  // b.any
    e848:	b	e758 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78>
    e84c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e850:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e854:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e858:	add	x3, x3, #0x0
    e85c:	add	x1, x1, #0x0
    e860:	add	x0, x0, #0x0
    e864:	mov	w2, #0x558                 	// #1368
    e868:	bl	0 <__assert_fail>
    e86c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e870:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e874:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e878:	add	x3, x3, #0x0
    e87c:	add	x1, x1, #0x0
    e880:	add	x0, x0, #0x0
    e884:	mov	w2, #0x54f                 	// #1359
    e888:	bl	0 <__assert_fail>
    e88c:	nop

000000000000e890 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE>:
    e890:	stp	x29, x30, [sp, #-96]!
    e894:	mov	x29, sp
    e898:	stp	x19, x20, [sp, #16]
    e89c:	mov	x19, x1
    e8a0:	ldr	x20, [x0, #704]
    e8a4:	ldur	x1, [x1, #-24]
    e8a8:	sub	x20, x20, #0x80
    e8ac:	ldr	x2, [x19]
    e8b0:	str	x21, [sp, #32]
    e8b4:	add	x21, sp, #0x30
    e8b8:	mov	x3, x20
    e8bc:	mov	x8, x21
    e8c0:	bl	e6e0 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    e8c4:	mov	x2, x20
    e8c8:	mov	x0, x19
    e8cc:	mov	x1, x21
    e8d0:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    e8d4:	ldp	x19, x20, [sp, #72]
    e8d8:	cmp	x19, x20
    e8dc:	b.eq	e8f8 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE+0x68>  // b.none
    e8e0:	mov	x0, x19
    e8e4:	add	x19, x19, #0x30
    e8e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e8ec:	cmp	x20, x19
    e8f0:	b.ne	e8e0 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE+0x50>  // b.any
    e8f4:	ldr	x20, [sp, #72]
    e8f8:	cbz	x20, e904 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE+0x74>
    e8fc:	mov	x0, x20
    e900:	bl	0 <_ZdlPv>
    e904:	ldr	w0, [sp, #64]
    e908:	cmp	w0, #0x40
    e90c:	b.ls	e91c <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE+0x8c>  // b.plast
    e910:	ldr	x0, [sp, #56]
    e914:	cbz	x0, e91c <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE+0x8c>
    e918:	bl	0 <_ZdaPv>
    e91c:	ldp	x19, x20, [sp, #16]
    e920:	ldr	x21, [sp, #32]
    e924:	ldp	x29, x30, [sp], #96
    e928:	ret
    e92c:	nop

000000000000e930 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    e930:	stp	x29, x30, [sp, #-160]!
    e934:	mov	w4, #0x1                   	// #1
    e938:	mov	x29, sp
    e93c:	stp	x21, x22, [sp, #32]
    e940:	mov	x21, x8
    e944:	mov	x22, x8
    e948:	stp	x19, x20, [sp, #16]
    e94c:	mov	x19, x8
    e950:	mov	x20, x2
    e954:	stp	x23, x24, [sp, #48]
    e958:	add	x24, sp, #0x70
    e95c:	mov	x2, x3
    e960:	ldr	x23, [x1]
    e964:	stp	xzr, xzr, [x21, #24]!
    e968:	mov	x8, x24
    e96c:	str	xzr, [x21, #16]
    e970:	str	xzr, [x19], #8
    e974:	str	xzr, [x22, #8]
    e978:	str	w4, [x19, #8]
    e97c:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    e980:	ldrb	w1, [x23, #8]
    e984:	cmp	w1, #0x10
    e988:	b.ne	ea80 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x150>  // b.any
    e98c:	ldr	x1, [x23, #16]
    e990:	stp	x25, x26, [sp, #64]
    e994:	ldrb	w0, [x20, #8]
    e998:	cmp	w0, #0x10
    e99c:	ldr	x25, [x1]
    e9a0:	b.eq	eb04 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d4>  // b.none
    e9a4:	cmp	w0, #0xb
    e9a8:	b.ne	ec28 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f8>  // b.any
    e9ac:	ldp	x2, x19, [sp, #136]
    e9b0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    e9b4:	movk	x1, #0xaaab
    e9b8:	ldr	w23, [x20, #8]
    e9bc:	mov	x0, x21
    e9c0:	lsr	w23, w23, #8
    e9c4:	sub	x19, x19, x2
    e9c8:	asr	x19, x19, #4
    e9cc:	mul	x19, x19, x1
    e9d0:	mov	w1, w19
    e9d4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    e9d8:	ldrb	w0, [x25, #8]
    e9dc:	cmp	w0, #0x2
    e9e0:	b.eq	eb18 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e8>  // b.none
    e9e4:	cbz	w19, ea5c <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x12c>
    e9e8:	sub	w19, w19, #0x1
    e9ec:	add	x26, sp, #0x60
    e9f0:	add	x21, x19, #0x1
    e9f4:	mov	x20, #0x0                   	// #0
    e9f8:	add	x21, x21, x21, lsl #1
    e9fc:	lsl	x21, x21, #4
    ea00:	ldr	x1, [sp, #136]
    ea04:	mov	x8, x26
    ea08:	ldr	x19, [x22, #24]
    ea0c:	mov	w0, w23
    ea10:	ldr	d0, [x1, x20]
    ea14:	add	x19, x19, x20
    ea18:	add	x25, x19, #0x8
    ea1c:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    ea20:	cmp	x26, x25
    ea24:	b.eq	ebfc <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2cc>  // b.none
    ea28:	ldr	w0, [x19, #16]
    ea2c:	cmp	w0, #0x40
    ea30:	b.ls	ea40 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>  // b.plast
    ea34:	ldr	x0, [x19, #8]
    ea38:	cbz	x0, ea40 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>
    ea3c:	bl	0 <_ZdaPv>
    ea40:	ldr	x0, [sp, #96]
    ea44:	str	x0, [x19, #8]
    ea48:	add	x20, x20, #0x30
    ea4c:	ldr	w0, [sp, #104]
    ea50:	cmp	x21, x20
    ea54:	str	w0, [x25, #8]
    ea58:	b.ne	ea00 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd0>  // b.any
    ea5c:	ldp	x25, x26, [sp, #64]
    ea60:	mov	x0, x24
    ea64:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ea68:	mov	x0, x22
    ea6c:	ldp	x19, x20, [sp, #16]
    ea70:	ldp	x21, x22, [sp, #32]
    ea74:	ldp	x23, x24, [sp, #48]
    ea78:	ldp	x29, x30, [sp], #160
    ea7c:	ret
    ea80:	cbz	x20, ec1c <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2ec>
    ea84:	ldrb	w0, [x20, #8]
    ea88:	cmp	w0, #0xb
    ea8c:	b.ne	ec24 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f4>  // b.any
    ea90:	ldr	w0, [x20, #8]
    ea94:	sub	w2, w1, #0x1
    ea98:	and	w2, w2, #0xff
    ea9c:	cmp	w2, #0x5
    eaa0:	lsr	w0, w0, #8
    eaa4:	b.hi	ebd8 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2a8>  // b.pmore
    eaa8:	cmp	w1, #0x2
    eaac:	b.eq	eb9c <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x26c>  // b.none
    eab0:	ldr	d0, [sp, #112]
    eab4:	add	x8, sp, #0x60
    eab8:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    eabc:	ldr	w0, [x22, #16]
    eac0:	cmp	w0, #0x40
    eac4:	b.ls	ead4 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1a4>  // b.plast
    eac8:	ldr	x0, [x22, #8]
    eacc:	cbz	x0, ead4 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1a4>
    ead0:	bl	0 <_ZdaPv>
    ead4:	ldr	x0, [sp, #96]
    ead8:	str	x0, [x22, #8]
    eadc:	ldr	w0, [sp, #104]
    eae0:	str	w0, [x19, #8]
    eae4:	mov	x0, x24
    eae8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    eaec:	mov	x0, x22
    eaf0:	ldp	x19, x20, [sp, #16]
    eaf4:	ldp	x21, x22, [sp, #32]
    eaf8:	ldp	x23, x24, [sp, #48]
    eafc:	ldp	x29, x30, [sp], #160
    eb00:	ret
    eb04:	ldr	x0, [x20, #16]
    eb08:	ldr	x20, [x0]
    eb0c:	cbz	x20, ec20 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f0>
    eb10:	ldrb	w0, [x20, #8]
    eb14:	b	e9a4 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x74>
    eb18:	cbz	w19, ea5c <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x12c>
    eb1c:	sub	w19, w19, #0x1
    eb20:	add	x26, sp, #0x50
    eb24:	add	x20, x19, #0x1
    eb28:	mov	x21, #0x0                   	// #0
    eb2c:	add	x20, x20, x20, lsl #1
    eb30:	lsl	x20, x20, #4
    eb34:	nop
    eb38:	ldr	x1, [sp, #136]
    eb3c:	mov	x8, x26
    eb40:	ldr	x19, [x22, #24]
    eb44:	mov	w0, w23
    eb48:	ldr	s0, [x1, x21]
    eb4c:	add	x19, x19, x21
    eb50:	add	x25, x19, #0x8
    eb54:	fcvt	d0, s0
    eb58:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    eb5c:	cmp	x26, x25
    eb60:	b.eq	ebfc <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2cc>  // b.none
    eb64:	ldr	w0, [x19, #16]
    eb68:	cmp	w0, #0x40
    eb6c:	b.ls	eb7c <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x24c>  // b.plast
    eb70:	ldr	x0, [x19, #8]
    eb74:	cbz	x0, eb7c <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x24c>
    eb78:	bl	0 <_ZdaPv>
    eb7c:	ldr	x0, [sp, #80]
    eb80:	str	x0, [x19, #8]
    eb84:	add	x21, x21, #0x30
    eb88:	ldr	w0, [sp, #88]
    eb8c:	cmp	x21, x20
    eb90:	str	w0, [x25, #8]
    eb94:	b.ne	eb38 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x208>  // b.any
    eb98:	b	ea5c <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x12c>
    eb9c:	ldr	s0, [sp, #112]
    eba0:	add	x20, sp, #0x60
    eba4:	mov	x8, x20
    eba8:	fcvt	d0, s0
    ebac:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    ebb0:	mov	x1, x20
    ebb4:	mov	x0, x19
    ebb8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ebbc:	ldr	w0, [sp, #104]
    ebc0:	cmp	w0, #0x40
    ebc4:	b.ls	ea60 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>  // b.plast
    ebc8:	ldr	x0, [sp, #96]
    ebcc:	cbz	x0, ea60 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    ebd0:	bl	0 <_ZdaPv>
    ebd4:	b	ea60 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    ebd8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ebdc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ebe0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ebe4:	add	x3, x3, #0x0
    ebe8:	add	x1, x1, #0x0
    ebec:	add	x0, x0, #0x0
    ebf0:	mov	w2, #0x57a                 	// #1402
    ebf4:	stp	x25, x26, [sp, #64]
    ebf8:	bl	0 <__assert_fail>
    ebfc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ec00:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ec04:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ec08:	add	x3, x3, #0x0
    ec0c:	add	x1, x1, #0x0
    ec10:	add	x0, x0, #0x0
    ec14:	mov	w2, #0x302                 	// #770
    ec18:	bl	0 <__assert_fail>
    ec1c:	stp	x25, x26, [sp, #64]
    ec20:	bl	f0 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
    ec24:	stp	x25, x26, [sp, #64]
    ec28:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ec2c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ec30:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ec34:	add	x3, x3, #0x0
    ec38:	add	x1, x1, #0x0
    ec3c:	add	x0, x0, #0x0
    ec40:	mov	w2, #0x108                 	// #264
    ec44:	bl	0 <__assert_fail>

000000000000ec48 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE>:
    ec48:	stp	x29, x30, [sp, #-96]!
    ec4c:	mov	x29, sp
    ec50:	stp	x19, x20, [sp, #16]
    ec54:	mov	x19, x1
    ec58:	ldr	x20, [x0, #704]
    ec5c:	ldur	x1, [x1, #-24]
    ec60:	sub	x20, x20, #0x80
    ec64:	ldr	x2, [x19]
    ec68:	str	x21, [sp, #32]
    ec6c:	add	x21, sp, #0x30
    ec70:	mov	x3, x20
    ec74:	mov	x8, x21
    ec78:	bl	e930 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    ec7c:	mov	x2, x20
    ec80:	mov	x0, x19
    ec84:	mov	x1, x21
    ec88:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    ec8c:	ldp	x19, x20, [sp, #72]
    ec90:	cmp	x19, x20
    ec94:	b.eq	ecb0 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE+0x68>  // b.none
    ec98:	mov	x0, x19
    ec9c:	add	x19, x19, #0x30
    eca0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    eca4:	cmp	x20, x19
    eca8:	b.ne	ec98 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE+0x50>  // b.any
    ecac:	ldr	x20, [sp, #72]
    ecb0:	cbz	x20, ecbc <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE+0x74>
    ecb4:	mov	x0, x20
    ecb8:	bl	0 <_ZdlPv>
    ecbc:	ldr	w0, [sp, #64]
    ecc0:	cmp	w0, #0x40
    ecc4:	b.ls	ecd4 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE+0x8c>  // b.plast
    ecc8:	ldr	x0, [sp, #56]
    eccc:	cbz	x0, ecd4 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE+0x8c>
    ecd0:	bl	0 <_ZdaPv>
    ecd4:	ldp	x19, x20, [sp, #16]
    ecd8:	ldr	x21, [sp, #32]
    ecdc:	ldp	x29, x30, [sp], #96
    ece0:	ret
    ece4:	nop

000000000000ece8 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    ece8:	stp	x29, x30, [sp, #-160]!
    ecec:	mov	w4, #0x1                   	// #1
    ecf0:	mov	x29, sp
    ecf4:	stp	x21, x22, [sp, #32]
    ecf8:	mov	x21, x8
    ecfc:	mov	x22, x8
    ed00:	stp	x19, x20, [sp, #16]
    ed04:	mov	x19, x8
    ed08:	mov	x20, x2
    ed0c:	stp	x23, x24, [sp, #48]
    ed10:	add	x24, sp, #0x70
    ed14:	mov	x2, x3
    ed18:	ldr	x23, [x1]
    ed1c:	stp	xzr, xzr, [x21, #24]!
    ed20:	mov	x8, x24
    ed24:	str	xzr, [x21, #16]
    ed28:	str	xzr, [x19], #8
    ed2c:	str	xzr, [x22, #8]
    ed30:	str	w4, [x19, #8]
    ed34:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ed38:	ldrb	w1, [x23, #8]
    ed3c:	cmp	w1, #0x10
    ed40:	b.ne	ee38 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x150>  // b.any
    ed44:	ldr	x1, [x23, #16]
    ed48:	stp	x25, x26, [sp, #64]
    ed4c:	ldrb	w0, [x20, #8]
    ed50:	cmp	w0, #0x10
    ed54:	ldr	x25, [x1]
    ed58:	b.eq	eebc <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d4>  // b.none
    ed5c:	cmp	w0, #0xb
    ed60:	b.ne	efe0 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f8>  // b.any
    ed64:	ldp	x2, x19, [sp, #136]
    ed68:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    ed6c:	movk	x1, #0xaaab
    ed70:	ldr	w23, [x20, #8]
    ed74:	mov	x0, x21
    ed78:	lsr	w23, w23, #8
    ed7c:	sub	x19, x19, x2
    ed80:	asr	x19, x19, #4
    ed84:	mul	x19, x19, x1
    ed88:	mov	w1, w19
    ed8c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ed90:	ldrb	w0, [x25, #8]
    ed94:	cmp	w0, #0x2
    ed98:	b.eq	eed0 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e8>  // b.none
    ed9c:	cbz	w19, ee14 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x12c>
    eda0:	sub	w19, w19, #0x1
    eda4:	add	x26, sp, #0x60
    eda8:	add	x21, x19, #0x1
    edac:	mov	x20, #0x0                   	// #0
    edb0:	add	x21, x21, x21, lsl #1
    edb4:	lsl	x21, x21, #4
    edb8:	ldr	x1, [sp, #136]
    edbc:	mov	x8, x26
    edc0:	ldr	x19, [x22, #24]
    edc4:	mov	w0, w23
    edc8:	ldr	d0, [x1, x20]
    edcc:	add	x19, x19, x20
    edd0:	add	x25, x19, #0x8
    edd4:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    edd8:	cmp	x26, x25
    eddc:	b.eq	efb4 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2cc>  // b.none
    ede0:	ldr	w0, [x19, #16]
    ede4:	cmp	w0, #0x40
    ede8:	b.ls	edf8 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>  // b.plast
    edec:	ldr	x0, [x19, #8]
    edf0:	cbz	x0, edf8 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>
    edf4:	bl	0 <_ZdaPv>
    edf8:	ldr	x0, [sp, #96]
    edfc:	str	x0, [x19, #8]
    ee00:	add	x20, x20, #0x30
    ee04:	ldr	w0, [sp, #104]
    ee08:	cmp	x21, x20
    ee0c:	str	w0, [x25, #8]
    ee10:	b.ne	edb8 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd0>  // b.any
    ee14:	ldp	x25, x26, [sp, #64]
    ee18:	mov	x0, x24
    ee1c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ee20:	mov	x0, x22
    ee24:	ldp	x19, x20, [sp, #16]
    ee28:	ldp	x21, x22, [sp, #32]
    ee2c:	ldp	x23, x24, [sp, #48]
    ee30:	ldp	x29, x30, [sp], #160
    ee34:	ret
    ee38:	cbz	x20, efd4 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2ec>
    ee3c:	ldrb	w0, [x20, #8]
    ee40:	cmp	w0, #0xb
    ee44:	b.ne	efdc <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f4>  // b.any
    ee48:	ldr	w0, [x20, #8]
    ee4c:	sub	w2, w1, #0x1
    ee50:	and	w2, w2, #0xff
    ee54:	cmp	w2, #0x5
    ee58:	lsr	w0, w0, #8
    ee5c:	b.hi	ef90 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2a8>  // b.pmore
    ee60:	cmp	w1, #0x2
    ee64:	b.eq	ef54 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x26c>  // b.none
    ee68:	ldr	d0, [sp, #112]
    ee6c:	add	x8, sp, #0x60
    ee70:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    ee74:	ldr	w0, [x22, #16]
    ee78:	cmp	w0, #0x40
    ee7c:	b.ls	ee8c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1a4>  // b.plast
    ee80:	ldr	x0, [x22, #8]
    ee84:	cbz	x0, ee8c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1a4>
    ee88:	bl	0 <_ZdaPv>
    ee8c:	ldr	x0, [sp, #96]
    ee90:	str	x0, [x22, #8]
    ee94:	ldr	w0, [sp, #104]
    ee98:	str	w0, [x19, #8]
    ee9c:	mov	x0, x24
    eea0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    eea4:	mov	x0, x22
    eea8:	ldp	x19, x20, [sp, #16]
    eeac:	ldp	x21, x22, [sp, #32]
    eeb0:	ldp	x23, x24, [sp, #48]
    eeb4:	ldp	x29, x30, [sp], #160
    eeb8:	ret
    eebc:	ldr	x0, [x20, #16]
    eec0:	ldr	x20, [x0]
    eec4:	cbz	x20, efd8 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f0>
    eec8:	ldrb	w0, [x20, #8]
    eecc:	b	ed5c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x74>
    eed0:	cbz	w19, ee14 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x12c>
    eed4:	sub	w19, w19, #0x1
    eed8:	add	x26, sp, #0x50
    eedc:	add	x20, x19, #0x1
    eee0:	mov	x21, #0x0                   	// #0
    eee4:	add	x20, x20, x20, lsl #1
    eee8:	lsl	x20, x20, #4
    eeec:	nop
    eef0:	ldr	x1, [sp, #136]
    eef4:	mov	x8, x26
    eef8:	ldr	x19, [x22, #24]
    eefc:	mov	w0, w23
    ef00:	ldr	s0, [x1, x21]
    ef04:	add	x19, x19, x21
    ef08:	add	x25, x19, #0x8
    ef0c:	fcvt	d0, s0
    ef10:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    ef14:	cmp	x26, x25
    ef18:	b.eq	efb4 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2cc>  // b.none
    ef1c:	ldr	w0, [x19, #16]
    ef20:	cmp	w0, #0x40
    ef24:	b.ls	ef34 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x24c>  // b.plast
    ef28:	ldr	x0, [x19, #8]
    ef2c:	cbz	x0, ef34 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x24c>
    ef30:	bl	0 <_ZdaPv>
    ef34:	ldr	x0, [sp, #80]
    ef38:	str	x0, [x19, #8]
    ef3c:	add	x21, x21, #0x30
    ef40:	ldr	w0, [sp, #88]
    ef44:	cmp	x21, x20
    ef48:	str	w0, [x25, #8]
    ef4c:	b.ne	eef0 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x208>  // b.any
    ef50:	b	ee14 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x12c>
    ef54:	ldr	s0, [sp, #112]
    ef58:	add	x20, sp, #0x60
    ef5c:	mov	x8, x20
    ef60:	fcvt	d0, s0
    ef64:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    ef68:	mov	x1, x20
    ef6c:	mov	x0, x19
    ef70:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ef74:	ldr	w0, [sp, #104]
    ef78:	cmp	w0, #0x40
    ef7c:	b.ls	ee18 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>  // b.plast
    ef80:	ldr	x0, [sp, #96]
    ef84:	cbz	x0, ee18 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    ef88:	bl	0 <_ZdaPv>
    ef8c:	b	ee18 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    ef90:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ef94:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ef98:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ef9c:	add	x3, x3, #0x0
    efa0:	add	x1, x1, #0x0
    efa4:	add	x0, x0, #0x0
    efa8:	mov	w2, #0x5a0                 	// #1440
    efac:	stp	x25, x26, [sp, #64]
    efb0:	bl	0 <__assert_fail>
    efb4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    efb8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    efbc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    efc0:	add	x3, x3, #0x0
    efc4:	add	x1, x1, #0x0
    efc8:	add	x0, x0, #0x0
    efcc:	mov	w2, #0x302                 	// #770
    efd0:	bl	0 <__assert_fail>
    efd4:	stp	x25, x26, [sp, #64]
    efd8:	bl	f0 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
    efdc:	stp	x25, x26, [sp, #64]
    efe0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    efe4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    efe8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    efec:	add	x3, x3, #0x0
    eff0:	add	x1, x1, #0x0
    eff4:	add	x0, x0, #0x0
    eff8:	mov	w2, #0x108                 	// #264
    effc:	bl	0 <__assert_fail>

000000000000f000 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE>:
    f000:	stp	x29, x30, [sp, #-96]!
    f004:	mov	x29, sp
    f008:	stp	x19, x20, [sp, #16]
    f00c:	mov	x19, x1
    f010:	ldr	x20, [x0, #704]
    f014:	ldur	x1, [x1, #-24]
    f018:	sub	x20, x20, #0x80
    f01c:	ldr	x2, [x19]
    f020:	str	x21, [sp, #32]
    f024:	add	x21, sp, #0x30
    f028:	mov	x3, x20
    f02c:	mov	x8, x21
    f030:	bl	ece8 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f034:	mov	x2, x20
    f038:	mov	x0, x19
    f03c:	mov	x1, x21
    f040:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f044:	ldp	x19, x20, [sp, #72]
    f048:	cmp	x19, x20
    f04c:	b.eq	f068 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE+0x68>  // b.none
    f050:	mov	x0, x19
    f054:	add	x19, x19, #0x30
    f058:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f05c:	cmp	x20, x19
    f060:	b.ne	f050 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE+0x50>  // b.any
    f064:	ldr	x20, [sp, #72]
    f068:	cbz	x20, f074 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE+0x74>
    f06c:	mov	x0, x20
    f070:	bl	0 <_ZdlPv>
    f074:	ldr	w0, [sp, #64]
    f078:	cmp	w0, #0x40
    f07c:	b.ls	f08c <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE+0x8c>  // b.plast
    f080:	ldr	x0, [sp, #56]
    f084:	cbz	x0, f08c <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE+0x8c>
    f088:	bl	0 <_ZdaPv>
    f08c:	ldp	x19, x20, [sp, #16]
    f090:	ldr	x21, [sp, #32]
    f094:	ldp	x29, x30, [sp], #96
    f098:	ret
    f09c:	nop

000000000000f0a0 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    f0a0:	stp	x29, x30, [sp, #-112]!
    f0a4:	mov	x4, x8
    f0a8:	mov	w5, #0x1                   	// #1
    f0ac:	mov	x29, sp
    f0b0:	stp	x21, x22, [sp, #32]
    f0b4:	mov	x22, x8
    f0b8:	mov	x21, x2
    f0bc:	stp	x19, x20, [sp, #16]
    f0c0:	mov	x19, x8
    f0c4:	mov	x20, x1
    f0c8:	str	x23, [sp, #48]
    f0cc:	add	x23, sp, #0x40
    f0d0:	stp	xzr, xzr, [x22, #24]!
    f0d4:	mov	x2, x3
    f0d8:	mov	x8, x23
    f0dc:	str	xzr, [x22, #16]
    f0e0:	str	xzr, [x4], #8
    f0e4:	str	xzr, [x19, #8]
    f0e8:	str	w5, [x4, #8]
    f0ec:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    f0f0:	ldr	x0, [x20]
    f0f4:	ldrb	w0, [x0, #8]
    f0f8:	cmp	w0, #0x10
    f0fc:	ldrb	w0, [x21, #8]
    f100:	b.eq	f1b0 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>  // b.none
    f104:	cmp	w0, #0x1
    f108:	b.eq	f19c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xfc>  // b.none
    f10c:	sub	w1, w0, #0x2
    f110:	and	w1, w1, #0xff
    f114:	cmp	w1, #0x4
    f118:	b.hi	f280 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e0>  // b.pmore
    f11c:	cmp	w0, #0x2
    f120:	b.ne	f19c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xfc>  // b.any
    f124:	add	x0, x23, #0x8
    f128:	mov	w1, #0x0                   	// #0
    f12c:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    f130:	fcvt	s0, d0
    f134:	str	s0, [x19]
    f138:	ldp	x20, x21, [sp, #88]
    f13c:	cmp	x20, x21
    f140:	b.eq	f160 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc0>  // b.none
    f144:	nop
    f148:	mov	x0, x20
    f14c:	add	x20, x20, #0x30
    f150:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f154:	cmp	x21, x20
    f158:	b.ne	f148 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa8>  // b.any
    f15c:	ldr	x21, [sp, #88]
    f160:	cbz	x21, f16c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcc>
    f164:	mov	x0, x21
    f168:	bl	0 <_ZdlPv>
    f16c:	ldr	w0, [sp, #80]
    f170:	cmp	w0, #0x40
    f174:	b.ls	f184 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe4>  // b.plast
    f178:	ldr	x0, [sp, #72]
    f17c:	cbz	x0, f184 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe4>
    f180:	bl	0 <_ZdaPv>
    f184:	mov	x0, x19
    f188:	ldp	x19, x20, [sp, #16]
    f18c:	ldp	x21, x22, [sp, #32]
    f190:	ldr	x23, [sp, #48]
    f194:	ldp	x29, x30, [sp], #112
    f198:	ret
    f19c:	add	x0, x23, #0x8
    f1a0:	mov	w1, #0x0                   	// #0
    f1a4:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    f1a8:	str	d0, [x19]
    f1ac:	b	f138 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    f1b0:	cmp	w0, #0x10
    f1b4:	b.ne	f1c0 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x120>  // b.any
    f1b8:	ldr	x0, [x21, #16]
    f1bc:	ldr	x21, [x0]
    f1c0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    f1c4:	ldp	x2, x20, [sp, #88]
    f1c8:	movk	x1, #0xaaab
    f1cc:	mov	x0, x22
    f1d0:	sub	x20, x20, x2
    f1d4:	asr	x20, x20, #4
    f1d8:	mul	x20, x20, x1
    f1dc:	mov	w1, w20
    f1e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f1e4:	ldrb	w0, [x21, #8]
    f1e8:	cmp	w0, #0x2
    f1ec:	b.eq	f234 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x194>  // b.none
    f1f0:	cbz	w20, f138 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    f1f4:	sub	w21, w20, #0x1
    f1f8:	mov	x20, #0x0                   	// #0
    f1fc:	add	x21, x21, #0x1
    f200:	add	x21, x21, x21, lsl #1
    f204:	lsl	x21, x21, #4
    f208:	ldr	x22, [x19, #24]
    f20c:	mov	w1, #0x0                   	// #0
    f210:	ldr	x0, [sp, #88]
    f214:	add	x0, x0, x20
    f218:	add	x0, x0, #0x8
    f21c:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    f220:	str	d0, [x22, x20]
    f224:	add	x20, x20, #0x30
    f228:	cmp	x21, x20
    f22c:	b.ne	f208 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x168>  // b.any
    f230:	b	f138 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    f234:	cbz	w20, f138 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    f238:	sub	w20, w20, #0x1
    f23c:	mov	x21, #0x0                   	// #0
    f240:	add	x20, x20, #0x1
    f244:	add	x20, x20, x20, lsl #1
    f248:	lsl	x20, x20, #4
    f24c:	nop
    f250:	ldr	x0, [sp, #88]
    f254:	mov	w1, #0x0                   	// #0
    f258:	ldr	x22, [x19, #24]
    f25c:	add	x0, x0, x21
    f260:	add	x0, x0, #0x8
    f264:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    f268:	fcvt	s0, d0
    f26c:	str	s0, [x22, x21]
    f270:	add	x21, x21, #0x30
    f274:	cmp	x21, x20
    f278:	b.ne	f250 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1b0>  // b.any
    f27c:	b	f138 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    f280:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f284:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f288:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f28c:	add	x3, x3, #0x0
    f290:	add	x1, x1, #0x0
    f294:	add	x0, x0, #0x0
    f298:	mov	w2, #0x5c1                 	// #1473
    f29c:	bl	0 <__assert_fail>

000000000000f2a0 <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE>:
    f2a0:	stp	x29, x30, [sp, #-96]!
    f2a4:	mov	x29, sp
    f2a8:	stp	x19, x20, [sp, #16]
    f2ac:	mov	x19, x1
    f2b0:	ldr	x20, [x0, #704]
    f2b4:	ldur	x1, [x1, #-24]
    f2b8:	sub	x20, x20, #0x80
    f2bc:	ldr	x2, [x19]
    f2c0:	str	x21, [sp, #32]
    f2c4:	add	x21, sp, #0x30
    f2c8:	mov	x3, x20
    f2cc:	mov	x8, x21
    f2d0:	bl	f0a0 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f2d4:	mov	x2, x20
    f2d8:	mov	x0, x19
    f2dc:	mov	x1, x21
    f2e0:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f2e4:	ldp	x19, x20, [sp, #72]
    f2e8:	cmp	x19, x20
    f2ec:	b.eq	f308 <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE+0x68>  // b.none
    f2f0:	mov	x0, x19
    f2f4:	add	x19, x19, #0x30
    f2f8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f2fc:	cmp	x20, x19
    f300:	b.ne	f2f0 <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE+0x50>  // b.any
    f304:	ldr	x20, [sp, #72]
    f308:	cbz	x20, f314 <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE+0x74>
    f30c:	mov	x0, x20
    f310:	bl	0 <_ZdlPv>
    f314:	ldr	w0, [sp, #64]
    f318:	cmp	w0, #0x40
    f31c:	b.ls	f32c <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE+0x8c>  // b.plast
    f320:	ldr	x0, [sp, #56]
    f324:	cbz	x0, f32c <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE+0x8c>
    f328:	bl	0 <_ZdaPv>
    f32c:	ldp	x19, x20, [sp, #16]
    f330:	ldr	x21, [sp, #32]
    f334:	ldp	x29, x30, [sp], #96
    f338:	ret
    f33c:	nop

000000000000f340 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    f340:	stp	x29, x30, [sp, #-112]!
    f344:	mov	x4, x8
    f348:	mov	x29, sp
    f34c:	stp	x21, x22, [sp, #32]
    f350:	mov	x22, x8
    f354:	mov	x21, x2
    f358:	stp	x19, x20, [sp, #16]
    f35c:	mov	x19, x8
    f360:	mov	x20, x1
    f364:	stp	x23, x24, [sp, #48]
    f368:	mov	w24, #0x1                   	// #1
    f36c:	add	x23, sp, #0x40
    f370:	stp	xzr, xzr, [x22, #24]!
    f374:	mov	x2, x3
    f378:	mov	x8, x23
    f37c:	str	xzr, [x22, #16]
    f380:	str	xzr, [x4], #8
    f384:	str	xzr, [x19, #8]
    f388:	str	w24, [x4, #8]
    f38c:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    f390:	ldr	x0, [x20]
    f394:	ldrb	w0, [x0, #8]
    f398:	cmp	w0, #0x10
    f39c:	ldrb	w0, [x21, #8]
    f3a0:	b.eq	f450 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>  // b.none
    f3a4:	cmp	w0, #0x1
    f3a8:	b.eq	f43c <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xfc>  // b.none
    f3ac:	sub	w1, w0, #0x2
    f3b0:	and	w1, w1, #0xff
    f3b4:	cmp	w1, #0x4
    f3b8:	b.hi	f520 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e0>  // b.pmore
    f3bc:	cmp	w0, #0x2
    f3c0:	b.ne	f43c <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xfc>  // b.any
    f3c4:	mov	w1, w24
    f3c8:	add	x0, x23, #0x8
    f3cc:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    f3d0:	fcvt	s0, d0
    f3d4:	str	s0, [x19]
    f3d8:	ldp	x20, x21, [sp, #88]
    f3dc:	cmp	x20, x21
    f3e0:	b.eq	f400 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc0>  // b.none
    f3e4:	nop
    f3e8:	mov	x0, x20
    f3ec:	add	x20, x20, #0x30
    f3f0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f3f4:	cmp	x21, x20
    f3f8:	b.ne	f3e8 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa8>  // b.any
    f3fc:	ldr	x21, [sp, #88]
    f400:	cbz	x21, f40c <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcc>
    f404:	mov	x0, x21
    f408:	bl	0 <_ZdlPv>
    f40c:	ldr	w0, [sp, #80]
    f410:	cmp	w0, #0x40
    f414:	b.ls	f424 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe4>  // b.plast
    f418:	ldr	x0, [sp, #72]
    f41c:	cbz	x0, f424 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe4>
    f420:	bl	0 <_ZdaPv>
    f424:	mov	x0, x19
    f428:	ldp	x19, x20, [sp, #16]
    f42c:	ldp	x21, x22, [sp, #32]
    f430:	ldp	x23, x24, [sp, #48]
    f434:	ldp	x29, x30, [sp], #112
    f438:	ret
    f43c:	add	x0, x23, #0x8
    f440:	mov	w1, #0x1                   	// #1
    f444:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    f448:	str	d0, [x19]
    f44c:	b	f3d8 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    f450:	cmp	w0, #0x10
    f454:	b.ne	f460 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x120>  // b.any
    f458:	ldr	x0, [x21, #16]
    f45c:	ldr	x21, [x0]
    f460:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    f464:	ldp	x2, x20, [sp, #88]
    f468:	movk	x1, #0xaaab
    f46c:	mov	x0, x22
    f470:	sub	x20, x20, x2
    f474:	asr	x20, x20, #4
    f478:	mul	x20, x20, x1
    f47c:	mov	w1, w20
    f480:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f484:	ldrb	w0, [x21, #8]
    f488:	cmp	w0, #0x2
    f48c:	b.eq	f4d4 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x194>  // b.none
    f490:	cbz	w20, f3d8 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    f494:	sub	w21, w20, #0x1
    f498:	mov	x20, #0x0                   	// #0
    f49c:	add	x21, x21, #0x1
    f4a0:	add	x21, x21, x21, lsl #1
    f4a4:	lsl	x21, x21, #4
    f4a8:	ldr	x22, [x19, #24]
    f4ac:	mov	w1, #0x1                   	// #1
    f4b0:	ldr	x0, [sp, #88]
    f4b4:	add	x0, x0, x20
    f4b8:	add	x0, x0, #0x8
    f4bc:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    f4c0:	str	d0, [x22, x20]
    f4c4:	add	x20, x20, #0x30
    f4c8:	cmp	x21, x20
    f4cc:	b.ne	f4a8 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x168>  // b.any
    f4d0:	b	f3d8 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    f4d4:	cbz	w20, f3d8 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    f4d8:	sub	w20, w20, #0x1
    f4dc:	mov	x21, #0x0                   	// #0
    f4e0:	add	x20, x20, #0x1
    f4e4:	add	x20, x20, x20, lsl #1
    f4e8:	lsl	x20, x20, #4
    f4ec:	nop
    f4f0:	ldr	x0, [sp, #88]
    f4f4:	mov	w1, #0x1                   	// #1
    f4f8:	ldr	x22, [x19, #24]
    f4fc:	add	x0, x0, x21
    f500:	add	x0, x0, #0x8
    f504:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    f508:	fcvt	s0, d0
    f50c:	str	s0, [x22, x21]
    f510:	add	x21, x21, #0x30
    f514:	cmp	x21, x20
    f518:	b.ne	f4f0 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1b0>  // b.any
    f51c:	b	f3d8 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    f520:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f524:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f528:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f52c:	add	x3, x3, #0x0
    f530:	add	x1, x1, #0x0
    f534:	add	x0, x0, #0x0
    f538:	mov	w2, #0x5e1                 	// #1505
    f53c:	bl	0 <__assert_fail>

000000000000f540 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE>:
    f540:	stp	x29, x30, [sp, #-96]!
    f544:	mov	x29, sp
    f548:	stp	x19, x20, [sp, #16]
    f54c:	mov	x19, x1
    f550:	ldr	x20, [x0, #704]
    f554:	ldur	x1, [x1, #-24]
    f558:	sub	x20, x20, #0x80
    f55c:	ldr	x2, [x19]
    f560:	str	x21, [sp, #32]
    f564:	add	x21, sp, #0x30
    f568:	mov	x3, x20
    f56c:	mov	x8, x21
    f570:	bl	f340 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f574:	mov	x2, x20
    f578:	mov	x0, x19
    f57c:	mov	x1, x21
    f580:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f584:	ldp	x19, x20, [sp, #72]
    f588:	cmp	x19, x20
    f58c:	b.eq	f5a8 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE+0x68>  // b.none
    f590:	mov	x0, x19
    f594:	add	x19, x19, #0x30
    f598:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f59c:	cmp	x20, x19
    f5a0:	b.ne	f590 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE+0x50>  // b.any
    f5a4:	ldr	x20, [sp, #72]
    f5a8:	cbz	x20, f5b4 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE+0x74>
    f5ac:	mov	x0, x20
    f5b0:	bl	0 <_ZdlPv>
    f5b4:	ldr	w0, [sp, #64]
    f5b8:	cmp	w0, #0x40
    f5bc:	b.ls	f5cc <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE+0x8c>  // b.plast
    f5c0:	ldr	x0, [sp, #56]
    f5c4:	cbz	x0, f5cc <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE+0x8c>
    f5c8:	bl	0 <_ZdaPv>
    f5cc:	ldp	x19, x20, [sp, #16]
    f5d0:	ldr	x21, [sp, #32]
    f5d4:	ldp	x29, x30, [sp], #96
    f5d8:	ret
    f5dc:	nop

000000000000f5e0 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    f5e0:	stp	x29, x30, [sp, #-112]!
    f5e4:	mov	x4, x2
    f5e8:	mov	x29, sp
    f5ec:	stp	x19, x20, [sp, #16]
    f5f0:	stp	x21, x22, [sp, #32]
    f5f4:	cbz	x2, f770 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x190>
    f5f8:	mov	x2, x3
    f5fc:	ldrb	w3, [x4, #8]
    f600:	cmp	w3, #0xb
    f604:	b.ne	f750 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x170>  // b.any
    f608:	mov	x3, x8
    f60c:	ldr	w20, [x4, #8]
    f610:	mov	x21, x8
    f614:	mov	x19, x8
    f618:	mov	x22, x1
    f61c:	mov	w4, #0x1                   	// #1
    f620:	stp	xzr, xzr, [x3, #24]!
    f624:	add	x8, sp, #0x40
    f628:	lsr	w20, w20, #8
    f62c:	str	xzr, [x3, #16]
    f630:	str	xzr, [x21], #8
    f634:	str	xzr, [x19, #8]
    f638:	str	w4, [x21, #8]
    f63c:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    f640:	ldr	x0, [x22]
    f644:	ldrb	w0, [x0, #8]
    f648:	cmp	w0, #0xf
    f64c:	b.ne	f730 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x150>  // b.any
    f650:	str	w20, [sp, #56]
    f654:	ldr	x1, [sp, #64]
    f658:	cbz	w20, f710 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    f65c:	cmp	w20, #0x40
    f660:	b.ls	f6f8 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x118>  // b.plast
    f664:	add	x0, sp, #0x30
    f668:	mov	w2, #0x0                   	// #0
    f66c:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    f670:	ldr	w0, [x19, #16]
    f674:	cmp	w0, #0x40
    f678:	b.ls	f688 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa8>  // b.plast
    f67c:	ldr	x0, [x19, #8]
    f680:	cbz	x0, f688 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa8>
    f684:	bl	0 <_ZdaPv>
    f688:	ldr	x0, [sp, #48]
    f68c:	str	x0, [x19, #8]
    f690:	ldr	w0, [sp, #56]
    f694:	str	w0, [x21, #8]
    f698:	ldr	x20, [sp, #88]
    f69c:	ldr	x21, [sp, #96]
    f6a0:	cmp	x20, x21
    f6a4:	b.eq	f6c0 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe0>  // b.none
    f6a8:	mov	x0, x20
    f6ac:	add	x20, x20, #0x30
    f6b0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f6b4:	cmp	x21, x20
    f6b8:	b.ne	f6a8 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc8>  // b.any
    f6bc:	ldr	x21, [sp, #88]
    f6c0:	cbz	x21, f6cc <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xec>
    f6c4:	mov	x0, x21
    f6c8:	bl	0 <_ZdlPv>
    f6cc:	ldr	w0, [sp, #80]
    f6d0:	cmp	w0, #0x40
    f6d4:	b.ls	f6e4 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x104>  // b.plast
    f6d8:	ldr	x0, [sp, #72]
    f6dc:	cbz	x0, f6e4 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x104>
    f6e0:	bl	0 <_ZdaPv>
    f6e4:	mov	x0, x19
    f6e8:	ldp	x19, x20, [sp, #16]
    f6ec:	ldp	x21, x22, [sp, #32]
    f6f0:	ldp	x29, x30, [sp], #112
    f6f4:	ret
    f6f8:	neg	w20, w20
    f6fc:	mov	x0, #0xffffffffffffffff    	// #-1
    f700:	lsr	x20, x0, x20
    f704:	and	x20, x20, x1
    f708:	str	x20, [sp, #48]
    f70c:	b	f670 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x90>
    f710:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f714:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f718:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f71c:	add	x3, x3, #0x0
    f720:	add	x1, x1, #0x0
    f724:	add	x0, x0, #0x0
    f728:	mov	w2, #0x117                 	// #279
    f72c:	bl	0 <__assert_fail>
    f730:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f734:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f738:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f73c:	add	x3, x3, #0x0
    f740:	add	x1, x1, #0x0
    f744:	add	x0, x0, #0x0
    f748:	mov	w2, #0x5f1                 	// #1521
    f74c:	bl	0 <__assert_fail>
    f750:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f754:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f758:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f75c:	add	x3, x3, #0x0
    f760:	add	x1, x1, #0x0
    f764:	add	x0, x0, #0x0
    f768:	mov	w2, #0x108                 	// #264
    f76c:	bl	0 <__assert_fail>
    f770:	bl	f0 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
    f774:	nop

000000000000f778 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE>:
    f778:	stp	x29, x30, [sp, #-96]!
    f77c:	mov	x29, sp
    f780:	stp	x19, x20, [sp, #16]
    f784:	mov	x19, x1
    f788:	ldr	x20, [x0, #704]
    f78c:	ldur	x1, [x1, #-24]
    f790:	sub	x20, x20, #0x80
    f794:	ldr	x2, [x19]
    f798:	str	x21, [sp, #32]
    f79c:	add	x21, sp, #0x30
    f7a0:	mov	x3, x20
    f7a4:	mov	x8, x21
    f7a8:	bl	f5e0 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f7ac:	mov	x2, x20
    f7b0:	mov	x0, x19
    f7b4:	mov	x1, x21
    f7b8:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f7bc:	ldp	x19, x20, [sp, #72]
    f7c0:	cmp	x19, x20
    f7c4:	b.eq	f7e0 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE+0x68>  // b.none
    f7c8:	mov	x0, x19
    f7cc:	add	x19, x19, #0x30
    f7d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f7d4:	cmp	x20, x19
    f7d8:	b.ne	f7c8 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE+0x50>  // b.any
    f7dc:	ldr	x20, [sp, #72]
    f7e0:	cbz	x20, f7ec <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE+0x74>
    f7e4:	mov	x0, x20
    f7e8:	bl	0 <_ZdlPv>
    f7ec:	ldr	w0, [sp, #64]
    f7f0:	cmp	w0, #0x40
    f7f4:	b.ls	f804 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE+0x8c>  // b.plast
    f7f8:	ldr	x0, [sp, #56]
    f7fc:	cbz	x0, f804 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE+0x8c>
    f800:	bl	0 <_ZdaPv>
    f804:	ldp	x19, x20, [sp, #16]
    f808:	ldr	x21, [sp, #32]
    f80c:	ldp	x29, x30, [sp], #96
    f810:	ret
    f814:	nop

000000000000f818 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    f818:	stp	x29, x30, [sp, #-112]!
    f81c:	mov	x5, x8
    f820:	mov	x4, x8
    f824:	mov	x29, sp
    f828:	stp	x19, x20, [sp, #16]
    f82c:	mov	x19, x8
    f830:	mov	x20, x2
    f834:	stp	x21, x22, [sp, #32]
    f838:	mov	w6, #0x1                   	// #1
    f83c:	add	x22, sp, #0x40
    f840:	stp	xzr, xzr, [x5, #24]!
    f844:	mov	x21, x0
    f848:	mov	x2, x3
    f84c:	str	xzr, [x5, #16]
    f850:	mov	x8, x22
    f854:	str	xzr, [x4], #8
    f858:	str	xzr, [x19, #8]
    f85c:	str	w6, [x4, #8]
    f860:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    f864:	ldrb	w0, [x20, #8]
    f868:	cmp	w0, #0xf
    f86c:	b.ne	f958 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x140>  // b.any
    f870:	mov	w1, #0x0                   	// #0
    f874:	add	x0, x21, #0x58
    f878:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
    f87c:	lsl	w20, w0, #3
    f880:	ldr	w1, [sp, #80]
    f884:	cmp	w1, w0, lsl #3
    f888:	b.ne	f910 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xf8>  // b.any
    f88c:	cmp	w20, #0x40
    f890:	b.ls	f950 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x138>  // b.plast
    f894:	add	x0, x22, #0x8
    f898:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    f89c:	sub	w20, w20, w0
    f8a0:	cmp	w20, #0x40
    f8a4:	b.hi	f978 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x160>  // b.pmore
    f8a8:	ldr	x0, [sp, #72]
    f8ac:	ldr	x0, [x0]
    f8b0:	str	x0, [x19]
    f8b4:	ldp	x20, x21, [sp, #88]
    f8b8:	cmp	x20, x21
    f8bc:	b.eq	f8d8 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc0>  // b.none
    f8c0:	mov	x0, x20
    f8c4:	add	x20, x20, #0x30
    f8c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f8cc:	cmp	x21, x20
    f8d0:	b.ne	f8c0 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa8>  // b.any
    f8d4:	ldr	x21, [sp, #88]
    f8d8:	cbz	x21, f8e4 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcc>
    f8dc:	mov	x0, x21
    f8e0:	bl	0 <_ZdlPv>
    f8e4:	ldr	w0, [sp, #80]
    f8e8:	cmp	w0, #0x40
    f8ec:	b.ls	f8fc <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe4>  // b.plast
    f8f0:	ldr	x0, [sp, #72]
    f8f4:	cbz	x0, f8fc <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe4>
    f8f8:	bl	0 <_ZdaPv>
    f8fc:	mov	x0, x19
    f900:	ldp	x19, x20, [sp, #16]
    f904:	ldp	x21, x22, [sp, #32]
    f908:	ldp	x29, x30, [sp], #112
    f90c:	ret
    f910:	add	x0, x22, #0x8
    f914:	mov	w1, w20
    f918:	add	x8, sp, #0x30
    f91c:	bl	0 <_ZNK4llvm5APInt11zextOrTruncEj>
    f920:	ldr	w0, [sp, #80]
    f924:	cmp	w0, #0x40
    f928:	b.ls	f938 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x120>  // b.plast
    f92c:	ldr	x0, [sp, #72]
    f930:	cbz	x0, f938 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x120>
    f934:	bl	0 <_ZdaPv>
    f938:	ldr	w20, [sp, #56]
    f93c:	ldr	x0, [sp, #48]
    f940:	str	x0, [sp, #72]
    f944:	str	w20, [sp, #80]
    f948:	cmp	w20, #0x40
    f94c:	b.hi	f894 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7c>  // b.pmore
    f950:	ldr	x0, [sp, #72]
    f954:	b	f8b0 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    f958:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f95c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f960:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f964:	add	x3, x3, #0x0
    f968:	add	x1, x1, #0x0
    f96c:	add	x0, x0, #0x0
    f970:	mov	w2, #0x5fa                 	// #1530
    f974:	bl	0 <__assert_fail>
    f978:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f97c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f980:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f984:	add	x3, x3, #0x0
    f988:	add	x1, x1, #0x0
    f98c:	add	x0, x0, #0x0
    f990:	mov	w2, #0x657                 	// #1623
    f994:	bl	0 <__assert_fail>

000000000000f998 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE>:
    f998:	stp	x29, x30, [sp, #-96]!
    f99c:	mov	x29, sp
    f9a0:	stp	x19, x20, [sp, #16]
    f9a4:	mov	x19, x1
    f9a8:	ldr	x20, [x0, #704]
    f9ac:	ldur	x1, [x1, #-24]
    f9b0:	sub	x20, x20, #0x80
    f9b4:	ldr	x2, [x19]
    f9b8:	str	x21, [sp, #32]
    f9bc:	add	x21, sp, #0x30
    f9c0:	mov	x3, x20
    f9c4:	mov	x8, x21
    f9c8:	bl	f818 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    f9cc:	mov	x2, x20
    f9d0:	mov	x0, x19
    f9d4:	mov	x1, x21
    f9d8:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f9dc:	ldp	x19, x20, [sp, #72]
    f9e0:	cmp	x19, x20
    f9e4:	b.eq	fa00 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE+0x68>  // b.none
    f9e8:	mov	x0, x19
    f9ec:	add	x19, x19, #0x30
    f9f0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    f9f4:	cmp	x20, x19
    f9f8:	b.ne	f9e8 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE+0x50>  // b.any
    f9fc:	ldr	x20, [sp, #72]
    fa00:	cbz	x20, fa0c <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE+0x74>
    fa04:	mov	x0, x20
    fa08:	bl	0 <_ZdlPv>
    fa0c:	ldr	w0, [sp, #64]
    fa10:	cmp	w0, #0x40
    fa14:	b.ls	fa24 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE+0x8c>  // b.plast
    fa18:	ldr	x0, [sp, #56]
    fa1c:	cbz	x0, fa24 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE+0x8c>
    fa20:	bl	0 <_ZdaPv>
    fa24:	ldp	x19, x20, [sp, #16]
    fa28:	ldr	x21, [sp, #32]
    fa2c:	ldp	x29, x30, [sp], #96
    fa30:	ret
    fa34:	nop

000000000000fa38 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE>:
    fa38:	stp	x29, x30, [sp, #-256]!
    fa3c:	mov	x29, sp
    fa40:	stp	x19, x20, [sp, #16]
    fa44:	mov	x19, x1
    fa48:	mov	x20, x0
    fa4c:	stp	x21, x22, [sp, #32]
    fa50:	add	x8, sp, #0x70
    fa54:	ldur	x1, [x1, #-24]
    fa58:	ldr	x21, [x0, #704]
    fa5c:	str	x23, [sp, #48]
    fa60:	add	x23, sp, #0xa0
    fa64:	sub	x21, x21, #0x80
    fa68:	mov	x2, x21
    fa6c:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    fa70:	ldp	w2, w3, [sp, #112]
    fa74:	mov	w1, #0x30                  	// #48
    fa78:	ldr	x5, [x20, #696]
    fa7c:	mov	w4, #0x1                   	// #1
    fa80:	mov	x0, x23
    fa84:	stp	xzr, xzr, [sp, #64]
    fa88:	add	x2, x5, x2, lsl #7
    fa8c:	str	w4, [sp, #80]
    fa90:	stp	xzr, xzr, [sp, #88]
    fa94:	ldr	x2, [x2, #80]
    fa98:	str	xzr, [sp, #104]
    fa9c:	umaddl	x1, w3, w1, x2
    faa0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    faa4:	ldr	x20, [x19]
    faa8:	ldrb	w0, [x20, #8]
    faac:	cmp	w0, #0xb
    fab0:	b.eq	fc60 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x228>  // b.none
    fab4:	b.hi	fc38 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x200>  // b.pmore
    fab8:	cmp	w0, #0x2
    fabc:	b.eq	fc50 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x218>  // b.none
    fac0:	cmp	w0, #0x3
    fac4:	b.ne	fca4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x26c>  // b.any
    fac8:	add	x22, sp, #0x40
    facc:	ldr	d0, [sp, #160]
    fad0:	str	d0, [sp, #64]
    fad4:	add	x20, sp, #0xd0
    fad8:	mov	x1, x22
    fadc:	mov	x0, x20
    fae0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fae4:	mov	x1, x20
    fae8:	mov	x0, x19
    faec:	mov	x2, x21
    faf0:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    faf4:	ldp	x19, x20, [sp, #232]
    faf8:	cmp	x19, x20
    fafc:	b.eq	fb18 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xe0>  // b.none
    fb00:	mov	x0, x19
    fb04:	add	x19, x19, #0x30
    fb08:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fb0c:	cmp	x20, x19
    fb10:	b.ne	fb00 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xc8>  // b.any
    fb14:	ldr	x20, [sp, #232]
    fb18:	cbz	x20, fb24 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xec>
    fb1c:	mov	x0, x20
    fb20:	bl	0 <_ZdlPv>
    fb24:	ldr	w0, [sp, #224]
    fb28:	cmp	w0, #0x40
    fb2c:	b.ls	fb3c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x104>  // b.plast
    fb30:	ldr	x0, [sp, #216]
    fb34:	cbz	x0, fb3c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x104>
    fb38:	bl	0 <_ZdaPv>
    fb3c:	ldp	x19, x20, [sp, #184]
    fb40:	ldr	w0, [sp, #116]
    fb44:	add	w0, w0, #0x1
    fb48:	str	w0, [sp, #116]
    fb4c:	cmp	x19, x20
    fb50:	b.eq	fb70 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x138>  // b.none
    fb54:	nop
    fb58:	mov	x0, x19
    fb5c:	add	x19, x19, #0x30
    fb60:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fb64:	cmp	x20, x19
    fb68:	b.ne	fb58 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x120>  // b.any
    fb6c:	ldr	x20, [sp, #184]
    fb70:	cbz	x20, fb7c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x144>
    fb74:	mov	x0, x20
    fb78:	bl	0 <_ZdlPv>
    fb7c:	ldr	w0, [sp, #176]
    fb80:	cmp	w0, #0x40
    fb84:	b.ls	fb94 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x15c>  // b.plast
    fb88:	ldr	x0, [sp, #168]
    fb8c:	cbz	x0, fb94 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x15c>
    fb90:	bl	0 <_ZdaPv>
    fb94:	ldp	x19, x20, [sp, #88]
    fb98:	cmp	x19, x20
    fb9c:	b.eq	fbb8 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x180>  // b.none
    fba0:	mov	x0, x19
    fba4:	add	x19, x19, #0x30
    fba8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fbac:	cmp	x20, x19
    fbb0:	b.ne	fba0 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x168>  // b.any
    fbb4:	ldr	x20, [sp, #88]
    fbb8:	cbz	x20, fbc4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x18c>
    fbbc:	mov	x0, x20
    fbc0:	bl	0 <_ZdlPv>
    fbc4:	ldr	w0, [sp, #80]
    fbc8:	cmp	w0, #0x40
    fbcc:	b.ls	fbdc <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1a4>  // b.plast
    fbd0:	ldr	x0, [sp, #72]
    fbd4:	cbz	x0, fbdc <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1a4>
    fbd8:	bl	0 <_ZdaPv>
    fbdc:	ldp	x19, x20, [sp, #136]
    fbe0:	cmp	x19, x20
    fbe4:	b.eq	fc00 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1c8>  // b.none
    fbe8:	mov	x0, x19
    fbec:	add	x19, x19, #0x30
    fbf0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fbf4:	cmp	x20, x19
    fbf8:	b.ne	fbe8 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1b0>  // b.any
    fbfc:	ldr	x20, [sp, #136]
    fc00:	cbz	x20, fc0c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1d4>
    fc04:	mov	x0, x20
    fc08:	bl	0 <_ZdlPv>
    fc0c:	ldr	w0, [sp, #128]
    fc10:	cmp	w0, #0x40
    fc14:	b.ls	fc24 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1ec>  // b.plast
    fc18:	ldr	x0, [sp, #120]
    fc1c:	cbz	x0, fc24 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1ec>
    fc20:	bl	0 <_ZdaPv>
    fc24:	ldp	x19, x20, [sp, #16]
    fc28:	ldp	x21, x22, [sp, #32]
    fc2c:	ldr	x23, [sp, #48]
    fc30:	ldp	x29, x30, [sp], #256
    fc34:	ret
    fc38:	cmp	w0, #0xf
    fc3c:	b.ne	fca4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x26c>  // b.any
    fc40:	ldr	x0, [sp, #160]
    fc44:	add	x22, sp, #0x40
    fc48:	str	x0, [sp, #64]
    fc4c:	b	fad4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x9c>
    fc50:	ldr	s0, [sp, #160]
    fc54:	add	x22, sp, #0x40
    fc58:	str	s0, [sp, #64]
    fc5c:	b	fad4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x9c>
    fc60:	ldr	w0, [sp, #80]
    fc64:	add	x22, sp, #0x40
    fc68:	cmp	w0, #0x40
    fc6c:	b.hi	fc7c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x244>  // b.pmore
    fc70:	ldr	w0, [sp, #176]
    fc74:	cmp	w0, #0x40
    fc78:	b.ls	fc8c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x254>  // b.plast
    fc7c:	add	x1, x23, #0x8
    fc80:	add	x0, x22, #0x8
    fc84:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    fc88:	b	fad4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x9c>
    fc8c:	ldr	x1, [sp, #168]
    fc90:	str	x1, [sp, #72]
    fc94:	str	w0, [sp, #80]
    fc98:	add	x0, x22, #0x8
    fc9c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fca0:	b	fad4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x9c>
    fca4:	bl	0 <_ZN4llvm4dbgsEv>
    fca8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fcac:	add	x1, x1, #0x0
    fcb0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fcb4:	mov	x19, x0
    fcb8:	mov	w2, #0x0                   	// #0
    fcbc:	mov	w3, #0x0                   	// #0
    fcc0:	mov	x0, x20
    fcc4:	mov	x1, x19
    fcc8:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    fccc:	mov	x0, x19
    fcd0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fcd4:	add	x1, x1, #0x0
    fcd8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fcdc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fce0:	mov	w2, #0x6fd                 	// #1789
    fce4:	add	x1, x1, #0x0
    fce8:	mov	x0, #0x0                   	// #0
    fcec:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000fcf0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE>:
    fcf0:	stp	x29, x30, [sp, #-240]!
    fcf4:	mov	x29, sp
    fcf8:	stp	x19, x20, [sp, #16]
    fcfc:	mov	x19, x1
    fd00:	add	x8, sp, #0x60
    fd04:	ldur	x1, [x1, #-48]
    fd08:	stp	x21, x22, [sp, #32]
    fd0c:	mov	x21, x0
    fd10:	ldr	x20, [x0, #704]
    fd14:	add	x22, sp, #0x90
    fd18:	sub	x20, x20, #0x80
    fd1c:	mov	x2, x20
    fd20:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    fd24:	ldur	x1, [x19, #-24]
    fd28:	mov	x0, x21
    fd2c:	mov	x2, x20
    fd30:	mov	x8, x22
    fd34:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    fd38:	ldr	w21, [sp, #160]
    fd3c:	mov	w0, #0x1                   	// #1
    fd40:	stp	xzr, xzr, [sp, #48]
    fd44:	cmp	w21, #0x40
    fd48:	str	w0, [sp, #64]
    fd4c:	stp	xzr, xzr, [sp, #72]
    fd50:	str	xzr, [sp, #88]
    fd54:	b.ls	ffac <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x2bc>  // b.plast
    fd58:	add	x0, x22, #0x8
    fd5c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    fd60:	sub	w21, w21, w0
    fd64:	cmp	w21, #0x40
    fd68:	b.hi	10044 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x354>  // b.pmore
    fd6c:	ldr	x0, [sp, #152]
    fd70:	ldr	x2, [x0]
    fd74:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    fd78:	ldp	x3, x0, [sp, #120]
    fd7c:	movk	x4, #0xaaab
    fd80:	and	x1, x2, #0xffffffff
    fd84:	sub	x0, x0, x3
    fd88:	asr	x0, x0, #4
    fd8c:	mul	x0, x0, x4
    fd90:	cmp	x0, w2, uxtw
    fd94:	b.ls	ffb4 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x2c4>  // b.plast
    fd98:	ldr	x21, [x19]
    fd9c:	ldrb	w2, [x21, #8]
    fda0:	cmp	w2, #0x3
    fda4:	b.eq	ff94 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x2a4>  // b.none
    fda8:	cmp	w2, #0xb
    fdac:	b.eq	ff6c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x27c>  // b.none
    fdb0:	cmp	w2, #0x2
    fdb4:	b.eq	fe04 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x114>  // b.none
    fdb8:	bl	0 <_ZN4llvm4dbgsEv>
    fdbc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fdc0:	add	x1, x1, #0x0
    fdc4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fdc8:	mov	x19, x0
    fdcc:	mov	w2, #0x0                   	// #0
    fdd0:	mov	w3, #0x0                   	// #0
    fdd4:	mov	x0, x21
    fdd8:	mov	x1, x19
    fddc:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    fde0:	mov	x0, x19
    fde4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fde8:	add	x1, x1, #0x0
    fdec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fdf0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fdf4:	mov	w2, #0x715                 	// #1813
    fdf8:	add	x1, x1, #0x0
    fdfc:	mov	x0, #0x0                   	// #0
    fe00:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    fe04:	add	x1, x1, x1, lsl #1
    fe08:	add	x22, sp, #0x30
    fe0c:	lsl	x1, x1, #4
    fe10:	ldr	s0, [x3, x1]
    fe14:	str	s0, [sp, #48]
    fe18:	add	x21, sp, #0xc0
    fe1c:	mov	x1, x22
    fe20:	mov	x0, x21
    fe24:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fe28:	mov	x2, x20
    fe2c:	mov	x0, x19
    fe30:	mov	x1, x21
    fe34:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    fe38:	ldp	x19, x20, [sp, #216]
    fe3c:	cmp	x19, x20
    fe40:	b.eq	fe60 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x170>  // b.none
    fe44:	nop
    fe48:	mov	x0, x19
    fe4c:	add	x19, x19, #0x30
    fe50:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fe54:	cmp	x20, x19
    fe58:	b.ne	fe48 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x158>  // b.any
    fe5c:	ldr	x20, [sp, #216]
    fe60:	cbz	x20, fe6c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x17c>
    fe64:	mov	x0, x20
    fe68:	bl	0 <_ZdlPv>
    fe6c:	ldr	w0, [sp, #208]
    fe70:	cmp	w0, #0x40
    fe74:	b.ls	fe84 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x194>  // b.plast
    fe78:	ldr	x0, [sp, #200]
    fe7c:	cbz	x0, fe84 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x194>
    fe80:	bl	0 <_ZdaPv>
    fe84:	ldp	x19, x20, [sp, #72]
    fe88:	cmp	x19, x20
    fe8c:	b.eq	fea8 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1b8>  // b.none
    fe90:	mov	x0, x19
    fe94:	add	x19, x19, #0x30
    fe98:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fe9c:	cmp	x20, x19
    fea0:	b.ne	fe90 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1a0>  // b.any
    fea4:	ldr	x20, [sp, #72]
    fea8:	cbz	x20, feb4 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1c4>
    feac:	mov	x0, x20
    feb0:	bl	0 <_ZdlPv>
    feb4:	ldr	w0, [sp, #64]
    feb8:	cmp	w0, #0x40
    febc:	b.ls	fecc <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1dc>  // b.plast
    fec0:	ldr	x0, [sp, #56]
    fec4:	cbz	x0, fecc <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1dc>
    fec8:	bl	0 <_ZdaPv>
    fecc:	ldp	x19, x20, [sp, #168]
    fed0:	cmp	x19, x20
    fed4:	b.eq	fef0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x200>  // b.none
    fed8:	mov	x0, x19
    fedc:	add	x19, x19, #0x30
    fee0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    fee4:	cmp	x20, x19
    fee8:	b.ne	fed8 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1e8>  // b.any
    feec:	ldr	x20, [sp, #168]
    fef0:	cbz	x20, fefc <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x20c>
    fef4:	mov	x0, x20
    fef8:	bl	0 <_ZdlPv>
    fefc:	ldr	w0, [sp, #160]
    ff00:	cmp	w0, #0x40
    ff04:	b.ls	ff14 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x224>  // b.plast
    ff08:	ldr	x0, [sp, #152]
    ff0c:	cbz	x0, ff14 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x224>
    ff10:	bl	0 <_ZdaPv>
    ff14:	ldp	x19, x20, [sp, #120]
    ff18:	cmp	x19, x20
    ff1c:	b.eq	ff38 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x248>  // b.none
    ff20:	mov	x0, x19
    ff24:	add	x19, x19, #0x30
    ff28:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ff2c:	cmp	x20, x19
    ff30:	b.ne	ff20 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x230>  // b.any
    ff34:	ldr	x20, [sp, #120]
    ff38:	cbz	x20, ff44 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x254>
    ff3c:	mov	x0, x20
    ff40:	bl	0 <_ZdlPv>
    ff44:	ldr	w0, [sp, #112]
    ff48:	cmp	w0, #0x40
    ff4c:	b.ls	ff5c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x26c>  // b.plast
    ff50:	ldr	x0, [sp, #104]
    ff54:	cbz	x0, ff5c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x26c>
    ff58:	bl	0 <_ZdaPv>
    ff5c:	ldp	x19, x20, [sp, #16]
    ff60:	ldp	x21, x22, [sp, #32]
    ff64:	ldp	x29, x30, [sp], #240
    ff68:	ret
    ff6c:	add	x1, x1, x1, lsl #1
    ff70:	add	x0, x3, x1, lsl #4
    ff74:	add	x1, x0, #0x8
    ff78:	ldr	w2, [x0, #16]
    ff7c:	cmp	w2, #0x40
    ff80:	b.ls	10020 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x330>  // b.plast
    ff84:	add	x22, sp, #0x30
    ff88:	add	x0, x22, #0x8
    ff8c:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    ff90:	b	fe18 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x128>
    ff94:	add	x1, x1, x1, lsl #1
    ff98:	add	x22, sp, #0x30
    ff9c:	lsl	x1, x1, #4
    ffa0:	ldr	d0, [x3, x1]
    ffa4:	str	d0, [sp, #48]
    ffa8:	b	fe18 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x128>
    ffac:	ldr	x2, [sp, #152]
    ffb0:	b	fd74 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x84>
    ffb4:	bl	0 <_ZN4llvm4dbgsEv>
    ffb8:	mov	x1, x0
    ffbc:	ldp	x2, x3, [x0, #16]
    ffc0:	sub	x2, x2, x3
    ffc4:	cmp	x2, #0x2b
    ffc8:	b.ls	10008 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x318>  // b.plast
    ffcc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
    ffd0:	add	x0, x0, #0x0
    ffd4:	add	x22, sp, #0x30
    ffd8:	ldp	x4, x5, [x0]
    ffdc:	stp	x4, x5, [x3]
    ffe0:	ldr	w2, [x0, #40]
    ffe4:	ldp	x4, x5, [x0, #16]
    ffe8:	stp	x4, x5, [x3, #16]
    ffec:	ldr	x0, [x0, #32]
    fff0:	str	x0, [x3, #32]
    fff4:	str	w2, [x3, #40]
    fff8:	ldr	x0, [x1, #24]
    fffc:	add	x0, x0, #0x2c
   10000:	str	x0, [x1, #24]
   10004:	b	fe18 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x128>
   10008:	add	x22, sp, #0x30
   1000c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10010:	mov	x2, #0x2c                  	// #44
   10014:	add	x1, x1, #0x0
   10018:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   1001c:	b	fe18 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x128>
   10020:	ldr	x1, [x0, #8]
   10024:	neg	w3, w2
   10028:	mov	x0, #0xffffffffffffffff    	// #-1
   1002c:	add	x22, sp, #0x30
   10030:	lsr	x0, x0, x3
   10034:	and	x0, x0, x1
   10038:	str	x0, [sp, #56]
   1003c:	str	w2, [sp, #64]
   10040:	b	fe18 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x128>
   10044:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10048:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1004c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10050:	add	x3, x3, #0x0
   10054:	add	x1, x1, #0x0
   10058:	add	x0, x0, #0x0
   1005c:	mov	w2, #0x657                 	// #1623
   10060:	bl	0 <__assert_fail>
   10064:	nop

0000000000010068 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE>:
   10068:	stp	x29, x30, [sp, #-320]!
   1006c:	mov	x29, sp
   10070:	stp	x23, x24, [sp, #48]
   10074:	ldr	x23, [x1]
   10078:	stp	x19, x20, [sp, #16]
   1007c:	stp	x21, x22, [sp, #32]
   10080:	ldr	x20, [x0, #704]
   10084:	str	x25, [sp, #64]
   10088:	cbz	x23, 103e4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x37c>
   1008c:	mov	x19, x1
   10090:	ldrb	w1, [x23, #8]
   10094:	cmp	w1, #0x10
   10098:	b.ne	103c4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x35c>  // b.any
   1009c:	ldur	x1, [x19, #-72]
   100a0:	sub	x20, x20, #0x80
   100a4:	add	x24, sp, #0x80
   100a8:	mov	x22, x0
   100ac:	mov	x8, x24
   100b0:	mov	x2, x20
   100b4:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   100b8:	add	x21, sp, #0xb0
   100bc:	ldur	x1, [x19, #-48]
   100c0:	mov	x0, x22
   100c4:	mov	x8, x21
   100c8:	mov	x2, x20
   100cc:	add	x25, sp, #0xe0
   100d0:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   100d4:	ldur	x1, [x19, #-24]
   100d8:	mov	x0, x22
   100dc:	mov	x8, x25
   100e0:	mov	x2, x20
   100e4:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   100e8:	ldr	w22, [sp, #240]
   100ec:	mov	w0, #0x1                   	// #1
   100f0:	stp	xzr, xzr, [sp, #80]
   100f4:	cmp	w22, #0x40
   100f8:	str	w0, [sp, #96]
   100fc:	stp	xzr, xzr, [sp, #104]
   10100:	ldr	x23, [x23, #24]
   10104:	str	xzr, [sp, #120]
   10108:	b.ls	10378 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x310>  // b.plast
   1010c:	add	x0, x25, #0x8
   10110:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   10114:	sub	w22, w22, w0
   10118:	cmp	w22, #0x40
   1011c:	b.hi	10404 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x39c>  // b.pmore
   10120:	ldr	x0, [sp, #232]
   10124:	ldr	x25, [x0]
   10128:	add	x22, sp, #0x50
   1012c:	add	x1, x24, #0x18
   10130:	add	x0, x22, #0x18
   10134:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10138:	ldp	x3, x0, [sp, #152]
   1013c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   10140:	movk	x2, #0xaaab
   10144:	and	x1, x25, #0xffffffff
   10148:	sub	x0, x0, x3
   1014c:	asr	x0, x0, #4
   10150:	mul	x0, x0, x2
   10154:	cmp	x0, w25, uxtw
   10158:	b.ls	103ac <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x344>  // b.plast
   1015c:	ldrb	w0, [x23, #8]
   10160:	cmp	w0, #0x3
   10164:	b.eq	10380 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x318>  // b.none
   10168:	cmp	w0, #0xb
   1016c:	b.eq	10344 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2dc>  // b.none
   10170:	cmp	w0, #0x2
   10174:	b.eq	10190 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x128>  // b.none
   10178:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1017c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10180:	add	x1, x1, #0x0
   10184:	add	x0, x0, #0x0
   10188:	mov	w2, #0x73a                 	// #1850
   1018c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   10190:	add	x1, x1, x1, lsl #1
   10194:	ldr	s0, [sp, #176]
   10198:	ldr	x0, [sp, #104]
   1019c:	lsl	x1, x1, #4
   101a0:	str	s0, [x0, x1]
   101a4:	add	x21, sp, #0x110
   101a8:	mov	x1, x22
   101ac:	mov	x0, x21
   101b0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   101b4:	mov	x2, x20
   101b8:	mov	x0, x19
   101bc:	mov	x1, x21
   101c0:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   101c4:	ldp	x19, x20, [sp, #296]
   101c8:	cmp	x19, x20
   101cc:	b.eq	101e8 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x180>  // b.none
   101d0:	mov	x0, x19
   101d4:	add	x19, x19, #0x30
   101d8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   101dc:	cmp	x20, x19
   101e0:	b.ne	101d0 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x168>  // b.any
   101e4:	ldr	x20, [sp, #296]
   101e8:	cbz	x20, 101f4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x18c>
   101ec:	mov	x0, x20
   101f0:	bl	0 <_ZdlPv>
   101f4:	ldr	w0, [sp, #288]
   101f8:	cmp	w0, #0x40
   101fc:	b.ls	1020c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1a4>  // b.plast
   10200:	ldr	x0, [sp, #280]
   10204:	cbz	x0, 1020c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1a4>
   10208:	bl	0 <_ZdaPv>
   1020c:	ldp	x19, x20, [sp, #104]
   10210:	cmp	x19, x20
   10214:	b.eq	10230 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1c8>  // b.none
   10218:	mov	x0, x19
   1021c:	add	x19, x19, #0x30
   10220:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10224:	cmp	x20, x19
   10228:	b.ne	10218 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1b0>  // b.any
   1022c:	ldr	x20, [sp, #104]
   10230:	cbz	x20, 1023c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1d4>
   10234:	mov	x0, x20
   10238:	bl	0 <_ZdlPv>
   1023c:	ldr	w0, [sp, #96]
   10240:	cmp	w0, #0x40
   10244:	b.ls	10254 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1ec>  // b.plast
   10248:	ldr	x0, [sp, #88]
   1024c:	cbz	x0, 10254 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1ec>
   10250:	bl	0 <_ZdaPv>
   10254:	ldp	x19, x20, [sp, #248]
   10258:	cmp	x19, x20
   1025c:	b.eq	10278 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x210>  // b.none
   10260:	mov	x0, x19
   10264:	add	x19, x19, #0x30
   10268:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1026c:	cmp	x20, x19
   10270:	b.ne	10260 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1f8>  // b.any
   10274:	ldr	x20, [sp, #248]
   10278:	cbz	x20, 10284 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x21c>
   1027c:	mov	x0, x20
   10280:	bl	0 <_ZdlPv>
   10284:	ldr	w0, [sp, #240]
   10288:	cmp	w0, #0x40
   1028c:	b.ls	1029c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x234>  // b.plast
   10290:	ldr	x0, [sp, #232]
   10294:	cbz	x0, 1029c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x234>
   10298:	bl	0 <_ZdaPv>
   1029c:	ldp	x19, x20, [sp, #200]
   102a0:	cmp	x19, x20
   102a4:	b.eq	102c0 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x258>  // b.none
   102a8:	mov	x0, x19
   102ac:	add	x19, x19, #0x30
   102b0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   102b4:	cmp	x20, x19
   102b8:	b.ne	102a8 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x240>  // b.any
   102bc:	ldr	x20, [sp, #200]
   102c0:	cbz	x20, 102cc <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x264>
   102c4:	mov	x0, x20
   102c8:	bl	0 <_ZdlPv>
   102cc:	ldr	w0, [sp, #192]
   102d0:	cmp	w0, #0x40
   102d4:	b.ls	102e4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x27c>  // b.plast
   102d8:	ldr	x0, [sp, #184]
   102dc:	cbz	x0, 102e4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x27c>
   102e0:	bl	0 <_ZdaPv>
   102e4:	ldp	x19, x20, [sp, #152]
   102e8:	cmp	x19, x20
   102ec:	b.eq	10308 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2a0>  // b.none
   102f0:	mov	x0, x19
   102f4:	add	x19, x19, #0x30
   102f8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   102fc:	cmp	x20, x19
   10300:	b.ne	102f0 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x288>  // b.any
   10304:	ldr	x20, [sp, #152]
   10308:	cbz	x20, 10314 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2ac>
   1030c:	mov	x0, x20
   10310:	bl	0 <_ZdlPv>
   10314:	ldr	w0, [sp, #144]
   10318:	cmp	w0, #0x40
   1031c:	b.ls	1032c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2c4>  // b.plast
   10320:	ldr	x0, [sp, #136]
   10324:	cbz	x0, 1032c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2c4>
   10328:	bl	0 <_ZdaPv>
   1032c:	ldp	x19, x20, [sp, #16]
   10330:	ldp	x21, x22, [sp, #32]
   10334:	ldp	x23, x24, [sp, #48]
   10338:	ldr	x25, [sp, #64]
   1033c:	ldp	x29, x30, [sp], #320
   10340:	ret
   10344:	ldr	x0, [sp, #104]
   10348:	add	x1, x1, x1, lsl #1
   1034c:	add	x1, x0, x1, lsl #4
   10350:	add	x0, x1, #0x8
   10354:	ldr	w2, [x1, #16]
   10358:	cmp	w2, #0x40
   1035c:	b.hi	1036c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x304>  // b.pmore
   10360:	ldr	w2, [sp, #192]
   10364:	cmp	w2, #0x40
   10368:	b.ls	10398 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x330>  // b.plast
   1036c:	add	x1, x21, #0x8
   10370:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
   10374:	b	101a4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x13c>
   10378:	ldr	x25, [sp, #232]
   1037c:	b	10128 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0xc0>
   10380:	add	x1, x1, x1, lsl #1
   10384:	ldr	d0, [sp, #176]
   10388:	ldr	x0, [sp, #104]
   1038c:	lsl	x1, x1, #4
   10390:	str	d0, [x0, x1]
   10394:	b	101a4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x13c>
   10398:	ldr	x3, [sp, #184]
   1039c:	str	x3, [x1, #8]
   103a0:	str	w2, [x0, #8]
   103a4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   103a8:	b	101a4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x13c>
   103ac:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   103b0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   103b4:	add	x1, x1, #0x0
   103b8:	add	x0, x0, #0x0
   103bc:	mov	w2, #0x737                 	// #1847
   103c0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   103c4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   103c8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   103cc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   103d0:	add	x3, x3, #0x0
   103d4:	add	x1, x1, #0x0
   103d8:	add	x0, x0, #0x0
   103dc:	mov	w2, #0x108                 	// #264
   103e0:	bl	0 <__assert_fail>
   103e4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   103e8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   103ec:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   103f0:	add	x3, x3, #0x0
   103f4:	add	x1, x1, #0x0
   103f8:	add	x0, x0, #0x0
   103fc:	mov	w2, #0x69                  	// #105
   10400:	bl	0 <__assert_fail>
   10404:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10408:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1040c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10410:	add	x3, x3, #0x0
   10414:	add	x1, x1, #0x0
   10418:	add	x0, x0, #0x0
   1041c:	mov	w2, #0x657                 	// #1623
   10420:	bl	0 <__assert_fail>
   10424:	nop

0000000000010428 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE>:
   10428:	stp	x29, x30, [sp, #-352]!
   1042c:	mov	x29, sp
   10430:	stp	x23, x24, [sp, #48]
   10434:	ldr	x24, [x1]
   10438:	stp	x19, x20, [sp, #16]
   1043c:	stp	x21, x22, [sp, #32]
   10440:	stp	x25, x26, [sp, #64]
   10444:	stp	x27, x28, [sp, #80]
   10448:	ldr	x23, [x0, #704]
   1044c:	cbz	x24, 108d4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x4ac>
   10450:	mov	x22, x1
   10454:	ldrb	w1, [x24, #8]
   10458:	cmp	w1, #0x10
   1045c:	b.ne	108b4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x48c>  // b.any
   10460:	ldur	x1, [x22, #-72]
   10464:	sub	x23, x23, #0x80
   10468:	add	x26, sp, #0xa0
   1046c:	mov	x19, x0
   10470:	mov	x8, x26
   10474:	mov	x2, x23
   10478:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   1047c:	add	x27, sp, #0xd0
   10480:	ldur	x1, [x22, #-48]
   10484:	mov	x0, x19
   10488:	mov	x8, x27
   1048c:	mov	x2, x23
   10490:	add	x25, sp, #0x100
   10494:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   10498:	ldur	x1, [x22, #-24]
   1049c:	mov	x0, x19
   104a0:	mov	x2, x23
   104a4:	mov	x8, x25
   104a8:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   104ac:	stp	xzr, xzr, [sp, #112]
   104b0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   104b4:	ldp	x2, x19, [sp, #280]
   104b8:	movk	x0, #0xaaab
   104bc:	ldp	x3, x20, [sp, #184]
   104c0:	mov	w1, #0x1                   	// #1
   104c4:	ldr	x21, [sp, #240]
   104c8:	str	w1, [sp, #128]
   104cc:	sub	x19, x19, x2
   104d0:	stp	xzr, xzr, [sp, #136]
   104d4:	ldr	x2, [sp, #232]
   104d8:	asr	x19, x19, #4
   104dc:	sub	x20, x20, x3
   104e0:	sub	x21, x21, x2
   104e4:	mul	x19, x19, x0
   104e8:	asr	x20, x20, #4
   104ec:	asr	x21, x21, #4
   104f0:	ldr	x24, [x24, #24]
   104f4:	str	xzr, [sp, #152]
   104f8:	mul	w20, w20, w0
   104fc:	and	x1, x19, #0xffffffff
   10500:	mul	w21, w21, w0
   10504:	cbnz	w19, 10840 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x418>
   10508:	ldrb	w0, [x24, #8]
   1050c:	cmp	w0, #0x3
   10510:	b.eq	10788 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x360>  // b.none
   10514:	cmp	w0, #0xb
   10518:	b.eq	1065c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x234>  // b.none
   1051c:	cmp	w0, #0x2
   10520:	b.eq	1053c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x114>  // b.none
   10524:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10528:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1052c:	add	x1, x1, #0x0
   10530:	add	x0, x0, #0x0
   10534:	mov	w2, #0x75f                 	// #1887
   10538:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1053c:	cbz	w19, 105f4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1cc>
   10540:	sub	w19, w19, #0x1
   10544:	add	w0, w20, w21
   10548:	add	x19, x19, #0x1
   1054c:	mov	x24, #0x0                   	// #0
   10550:	str	w0, [sp, #108]
   10554:	add	x19, x19, x19, lsl #1
   10558:	lsl	x19, x19, #4
   1055c:	b	10588 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x160>
   10560:	ubfiz	x2, x0, #1, #32
   10564:	add	x0, x2, w0, uxtw
   10568:	ldr	x3, [sp, #184]
   1056c:	lsl	x0, x0, #4
   10570:	ldr	x2, [sp, #136]
   10574:	ldr	s0, [x3, x0]
   10578:	str	s0, [x2, x24]
   1057c:	add	x24, x24, #0x30
   10580:	cmp	x24, x19
   10584:	b.eq	105f4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1cc>  // b.none
   10588:	ldr	x28, [sp, #280]
   1058c:	add	x28, x28, x24
   10590:	ldr	w21, [x28, #16]
   10594:	cmp	w21, #0x40
   10598:	b.ls	10780 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x358>  // b.plast
   1059c:	add	x0, x28, #0x8
   105a0:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   105a4:	sub	w2, w21, w0
   105a8:	cmp	w2, #0x40
   105ac:	b.hi	1084c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x424>  // b.pmore
   105b0:	ldr	x0, [x28, #8]
   105b4:	ldr	x0, [x0]
   105b8:	cmp	w20, w0
   105bc:	b.hi	10560 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x138>  // b.pmore
   105c0:	ldr	w1, [sp, #108]
   105c4:	cmp	w1, w0
   105c8:	b.ls	1089c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x474>  // b.plast
   105cc:	sub	w2, w0, w20
   105d0:	mov	w0, #0x30                  	// #48
   105d4:	ldr	x3, [sp, #232]
   105d8:	umull	x2, w2, w0
   105dc:	ldr	x0, [sp, #136]
   105e0:	ldr	s0, [x3, x2]
   105e4:	str	s0, [x0, x24]
   105e8:	add	x24, x24, #0x30
   105ec:	cmp	x24, x19
   105f0:	b.ne	10588 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x160>  // b.any
   105f4:	add	x19, sp, #0x130
   105f8:	add	x20, sp, #0x70
   105fc:	mov	x1, x20
   10600:	mov	x0, x19
   10604:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10608:	mov	x2, x23
   1060c:	mov	x1, x19
   10610:	mov	x0, x22
   10614:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   10618:	mov	x0, x19
   1061c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10620:	mov	x0, x20
   10624:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10628:	mov	x0, x25
   1062c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10630:	mov	x0, x27
   10634:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10638:	mov	x0, x26
   1063c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10640:	ldp	x19, x20, [sp, #16]
   10644:	ldp	x21, x22, [sp, #32]
   10648:	ldp	x23, x24, [sp, #48]
   1064c:	ldp	x25, x26, [sp, #64]
   10650:	ldp	x27, x28, [sp, #80]
   10654:	ldp	x29, x30, [sp], #352
   10658:	ret
   1065c:	cbz	w19, 105f4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1cc>
   10660:	ldr	x1, [sp, #280]
   10664:	sub	w19, w19, #0x1
   10668:	mov	x28, #0x0                   	// #0
   1066c:	add	x19, x19, #0x1
   10670:	add	x24, x1, x28
   10674:	add	w0, w20, w21
   10678:	add	x19, x19, x19, lsl #1
   1067c:	str	w0, [sp, #108]
   10680:	ldr	w21, [x24, #16]
   10684:	lsl	x19, x19, #4
   10688:	cmp	w21, #0x40
   1068c:	b.ls	1071c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2f4>  // b.plast
   10690:	add	x0, x24, #0x8
   10694:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   10698:	sub	w2, w21, w0
   1069c:	cmp	w2, #0x40
   106a0:	b.hi	1084c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x424>  // b.pmore
   106a4:	ldr	x0, [x24, #8]
   106a8:	ldr	x0, [x0]
   106ac:	cmp	w20, w0
   106b0:	b.hi	10728 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x300>  // b.pmore
   106b4:	ldr	w1, [sp, #108]
   106b8:	cmp	w1, w0
   106bc:	b.ls	1086c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x444>  // b.plast
   106c0:	ldr	x4, [sp, #136]
   106c4:	sub	w2, w0, w20
   106c8:	ldr	x1, [sp, #232]
   106cc:	add	x4, x4, x28
   106d0:	mov	w3, #0x30                  	// #48
   106d4:	add	x0, x4, #0x8
   106d8:	umaddl	x2, w2, w3, x1
   106dc:	ldr	w5, [x4, #16]
   106e0:	add	x1, x2, #0x8
   106e4:	cmp	w5, #0x40
   106e8:	b.hi	106f8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2d0>  // b.pmore
   106ec:	ldr	w5, [x2, #16]
   106f0:	cmp	w5, #0x40
   106f4:	b.ls	10760 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x338>  // b.plast
   106f8:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
   106fc:	add	x28, x28, #0x30
   10700:	cmp	x19, x28
   10704:	b.eq	105f4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1cc>  // b.none
   10708:	ldr	x1, [sp, #280]
   1070c:	add	x24, x1, x28
   10710:	ldr	w21, [x24, #16]
   10714:	cmp	w21, #0x40
   10718:	b.hi	10690 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x268>  // b.pmore
   1071c:	ldr	x0, [x24, #8]
   10720:	cmp	w20, w0
   10724:	b.ls	106b4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x28c>  // b.plast
   10728:	ldr	x4, [sp, #136]
   1072c:	ubfiz	x2, x0, #1, #32
   10730:	ldr	x1, [sp, #184]
   10734:	add	x4, x4, x28
   10738:	add	x2, x2, w0, uxtw
   1073c:	add	x0, x4, #0x8
   10740:	ldr	w5, [x4, #16]
   10744:	add	x2, x1, x2, lsl #4
   10748:	add	x1, x2, #0x8
   1074c:	cmp	w5, #0x40
   10750:	b.hi	106f8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2d0>  // b.pmore
   10754:	ldr	w5, [x2, #16]
   10758:	cmp	w5, #0x40
   1075c:	b.hi	106f8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2d0>  // b.pmore
   10760:	ldr	x2, [x2, #8]
   10764:	neg	w1, w5
   10768:	str	w5, [x0, #8]
   1076c:	mov	x0, #0xffffffffffffffff    	// #-1
   10770:	lsr	x1, x0, x1
   10774:	and	x1, x1, x2
   10778:	str	x1, [x4, #8]
   1077c:	b	106fc <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2d4>
   10780:	ldr	x0, [x28, #8]
   10784:	b	105b8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x190>
   10788:	cbz	w19, 105f4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1cc>
   1078c:	sub	w19, w19, #0x1
   10790:	add	w0, w20, w21
   10794:	add	x19, x19, #0x1
   10798:	mov	x24, #0x0                   	// #0
   1079c:	str	w0, [sp, #108]
   107a0:	add	x19, x19, x19, lsl #1
   107a4:	lsl	x19, x19, #4
   107a8:	b	107d4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x3ac>
   107ac:	ubfiz	x2, x0, #1, #32
   107b0:	add	x0, x2, w0, uxtw
   107b4:	ldr	x3, [sp, #184]
   107b8:	lsl	x0, x0, #4
   107bc:	ldr	x2, [sp, #136]
   107c0:	ldr	d0, [x3, x0]
   107c4:	str	d0, [x2, x24]
   107c8:	add	x24, x24, #0x30
   107cc:	cmp	x19, x24
   107d0:	b.eq	105f4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1cc>  // b.none
   107d4:	ldr	x28, [sp, #280]
   107d8:	add	x28, x28, x24
   107dc:	ldr	w21, [x28, #16]
   107e0:	cmp	w21, #0x40
   107e4:	b.ls	10838 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x410>  // b.plast
   107e8:	add	x0, x28, #0x8
   107ec:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   107f0:	sub	w2, w21, w0
   107f4:	cmp	w2, #0x40
   107f8:	b.hi	1084c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x424>  // b.pmore
   107fc:	ldr	x0, [x28, #8]
   10800:	ldr	x0, [x0]
   10804:	cmp	w20, w0
   10808:	b.hi	107ac <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x384>  // b.pmore
   1080c:	ldr	w1, [sp, #108]
   10810:	cmp	w1, w0
   10814:	b.ls	10884 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x45c>  // b.plast
   10818:	sub	w2, w0, w20
   1081c:	mov	w0, #0x30                  	// #48
   10820:	ldr	x3, [sp, #232]
   10824:	umull	x2, w2, w0
   10828:	ldr	x0, [sp, #136]
   1082c:	ldr	d0, [x3, x2]
   10830:	str	d0, [x0, x24]
   10834:	b	107c8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x3a0>
   10838:	ldr	x0, [x28, #8]
   1083c:	b	10804 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x3dc>
   10840:	add	x0, sp, #0x88
   10844:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10848:	b	10508 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0xe0>
   1084c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10850:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10854:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10858:	add	x3, x3, #0x0
   1085c:	add	x1, x1, #0x0
   10860:	add	x0, x0, #0x0
   10864:	mov	w2, #0x657                 	// #1623
   10868:	bl	0 <__assert_fail>
   1086c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10870:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10874:	add	x1, x1, #0x0
   10878:	add	x0, x0, #0x0
   1087c:	mov	w2, #0x76e                 	// #1902
   10880:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   10884:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10888:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1088c:	add	x1, x1, #0x0
   10890:	add	x0, x0, #0x0
   10894:	mov	w2, #0x785                 	// #1925
   10898:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1089c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   108a0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   108a4:	add	x1, x1, #0x0
   108a8:	add	x0, x0, #0x0
   108ac:	mov	w2, #0x779                 	// #1913
   108b0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   108b4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   108b8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   108bc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   108c0:	add	x3, x3, #0x0
   108c4:	add	x1, x1, #0x0
   108c8:	add	x0, x0, #0x0
   108cc:	mov	w2, #0x108                 	// #264
   108d0:	bl	0 <__assert_fail>
   108d4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   108d8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   108dc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   108e0:	add	x3, x3, #0x0
   108e4:	add	x1, x1, #0x0
   108e8:	add	x0, x0, #0x0
   108ec:	mov	w2, #0x69                  	// #105
   108f0:	bl	0 <__assert_fail>
   108f4:	nop

00000000000108f8 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE>:
   108f8:	stp	x29, x30, [sp, #-192]!
   108fc:	mov	w3, #0x1                   	// #1
   10900:	mov	x29, sp
   10904:	stp	x21, x22, [sp, #32]
   10908:	ldr	x21, [x0, #704]
   1090c:	stp	x19, x20, [sp, #16]
   10910:	mov	x20, x1
   10914:	ldur	x22, [x1, #-24]
   10918:	add	x19, sp, #0x60
   1091c:	sub	x21, x21, #0x80
   10920:	mov	x8, x19
   10924:	mov	x2, x21
   10928:	mov	x1, x22
   1092c:	stp	xzr, xzr, [sp, #48]
   10930:	str	w3, [sp, #64]
   10934:	stp	xzr, xzr, [sp, #72]
   10938:	str	xzr, [sp, #88]
   1093c:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   10940:	ldr	w2, [x20, #64]
   10944:	ldr	x1, [x20, #56]
   10948:	cbz	w2, 10974 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x7c>
   1094c:	sub	w4, w2, #0x1
   10950:	mov	x0, x1
   10954:	add	x4, x4, #0x1
   10958:	mov	w5, #0x30                  	// #48
   1095c:	add	x4, x1, x4, lsl #2
   10960:	ldr	w3, [x0], #4
   10964:	ldr	x19, [x19, #24]
   10968:	cmp	x0, x4
   1096c:	umaddl	x19, w3, w5, x19
   10970:	b.ne	10960 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x68>  // b.any
   10974:	ldr	x0, [x22]
   10978:	mov	w2, w2
   1097c:	bl	0 <_ZN4llvm16ExtractValueInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIjEE>
   10980:	ldrb	w0, [x0, #8]
   10984:	cmp	w0, #0xb
   10988:	b.eq	10b14 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x21c>  // b.none
   1098c:	b.hi	10ab4 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1bc>  // b.pmore
   10990:	cmp	w0, #0x2
   10994:	b.eq	10b40 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x248>  // b.none
   10998:	cmp	w0, #0x3
   1099c:	b.ne	10aec <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1f4>  // b.any
   109a0:	add	x22, sp, #0x30
   109a4:	ldr	d0, [x19]
   109a8:	str	d0, [sp, #48]
   109ac:	add	x19, sp, #0x90
   109b0:	mov	x1, x22
   109b4:	mov	x0, x19
   109b8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   109bc:	mov	x1, x19
   109c0:	mov	x0, x20
   109c4:	mov	x2, x21
   109c8:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   109cc:	ldp	x19, x20, [sp, #168]
   109d0:	cmp	x19, x20
   109d4:	b.eq	109f0 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xf8>  // b.none
   109d8:	mov	x0, x19
   109dc:	add	x19, x19, #0x30
   109e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   109e4:	cmp	x20, x19
   109e8:	b.ne	109d8 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xe0>  // b.any
   109ec:	ldr	x20, [sp, #168]
   109f0:	cbz	x20, 109fc <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x104>
   109f4:	mov	x0, x20
   109f8:	bl	0 <_ZdlPv>
   109fc:	ldr	w0, [sp, #160]
   10a00:	cmp	w0, #0x40
   10a04:	b.ls	10a14 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x11c>  // b.plast
   10a08:	ldr	x0, [sp, #152]
   10a0c:	cbz	x0, 10a14 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x11c>
   10a10:	bl	0 <_ZdaPv>
   10a14:	ldp	x19, x20, [sp, #120]
   10a18:	cmp	x19, x20
   10a1c:	b.eq	10a38 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x140>  // b.none
   10a20:	mov	x0, x19
   10a24:	add	x19, x19, #0x30
   10a28:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10a2c:	cmp	x20, x19
   10a30:	b.ne	10a20 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x128>  // b.any
   10a34:	ldr	x20, [sp, #120]
   10a38:	cbz	x20, 10a44 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x14c>
   10a3c:	mov	x0, x20
   10a40:	bl	0 <_ZdlPv>
   10a44:	ldr	w0, [sp, #112]
   10a48:	cmp	w0, #0x40
   10a4c:	b.ls	10a5c <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x164>  // b.plast
   10a50:	ldr	x0, [sp, #104]
   10a54:	cbz	x0, 10a5c <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x164>
   10a58:	bl	0 <_ZdaPv>
   10a5c:	ldp	x19, x20, [sp, #72]
   10a60:	cmp	x19, x20
   10a64:	b.eq	10a80 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x188>  // b.none
   10a68:	mov	x0, x19
   10a6c:	add	x19, x19, #0x30
   10a70:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10a74:	cmp	x20, x19
   10a78:	b.ne	10a68 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x170>  // b.any
   10a7c:	ldr	x20, [sp, #72]
   10a80:	cbz	x20, 10a8c <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x194>
   10a84:	mov	x0, x20
   10a88:	bl	0 <_ZdlPv>
   10a8c:	ldr	w0, [sp, #64]
   10a90:	cmp	w0, #0x40
   10a94:	b.ls	10aa4 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1ac>  // b.plast
   10a98:	ldr	x0, [sp, #56]
   10a9c:	cbz	x0, 10aa4 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1ac>
   10aa0:	bl	0 <_ZdaPv>
   10aa4:	ldp	x19, x20, [sp, #16]
   10aa8:	ldp	x21, x22, [sp, #32]
   10aac:	ldp	x29, x30, [sp], #192
   10ab0:	ret
   10ab4:	cmp	w0, #0xf
   10ab8:	b.eq	10b04 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x20c>  // b.none
   10abc:	b.ls	10adc <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1e4>  // b.plast
   10ac0:	cmp	w0, #0x10
   10ac4:	b.ne	10aec <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1f4>  // b.any
   10ac8:	add	x22, sp, #0x30
   10acc:	add	x1, x19, #0x18
   10ad0:	add	x0, x22, #0x18
   10ad4:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10ad8:	b	109ac <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xb4>
   10adc:	sub	w0, w0, #0xd
   10ae0:	and	w0, w0, #0xff
   10ae4:	cmp	w0, #0x1
   10ae8:	b.ls	10ac8 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1d0>  // b.plast
   10aec:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10af0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10af4:	add	x1, x1, #0x0
   10af8:	add	x0, x0, #0x0
   10afc:	mov	w2, #0x79e                 	// #1950
   10b00:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   10b04:	ldr	x0, [x19]
   10b08:	add	x22, sp, #0x30
   10b0c:	str	x0, [sp, #48]
   10b10:	b	109ac <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xb4>
   10b14:	ldr	w0, [sp, #64]
   10b18:	add	x1, x19, #0x8
   10b1c:	cmp	w0, #0x40
   10b20:	b.hi	10b30 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x238>  // b.pmore
   10b24:	ldr	w0, [x19, #16]
   10b28:	cmp	w0, #0x40
   10b2c:	b.ls	10b50 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x258>  // b.plast
   10b30:	add	x22, sp, #0x30
   10b34:	add	x0, x22, #0x8
   10b38:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
   10b3c:	b	109ac <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xb4>
   10b40:	ldr	s0, [x19]
   10b44:	add	x22, sp, #0x30
   10b48:	str	s0, [sp, #48]
   10b4c:	b	109ac <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xb4>
   10b50:	ldr	x2, [x1]
   10b54:	neg	w3, w0
   10b58:	mov	x1, #0xffffffffffffffff    	// #-1
   10b5c:	add	x22, sp, #0x30
   10b60:	lsr	x1, x1, x3
   10b64:	and	x1, x1, x2
   10b68:	str	x1, [sp, #56]
   10b6c:	str	w0, [sp, #64]
   10b70:	b	109ac <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xb4>
   10b74:	nop

0000000000010b78 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE>:
   10b78:	stp	x29, x30, [sp, #-272]!
   10b7c:	mov	x29, sp
   10b80:	stp	x21, x22, [sp, #32]
   10b84:	add	x22, sp, #0xb0
   10b88:	ldr	x21, [x0, #704]
   10b8c:	str	x25, [sp, #64]
   10b90:	ldur	x25, [x1, #-48]
   10b94:	stp	x19, x20, [sp, #16]
   10b98:	mov	x20, x1
   10b9c:	add	x19, sp, #0x50
   10ba0:	sub	x21, x21, #0x80
   10ba4:	mov	x8, x19
   10ba8:	mov	x2, x21
   10bac:	mov	x1, x25
   10bb0:	stp	x23, x24, [sp, #48]
   10bb4:	mov	x24, x0
   10bb8:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   10bbc:	add	x23, sp, #0x80
   10bc0:	ldur	x1, [x20, #-24]
   10bc4:	mov	x2, x21
   10bc8:	mov	x8, x23
   10bcc:	mov	x0, x24
   10bd0:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   10bd4:	mov	x1, x19
   10bd8:	mov	x0, x22
   10bdc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10be0:	ldr	w2, [x20, #64]
   10be4:	ldr	x1, [x20, #56]
   10be8:	cbz	w2, 10e38 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x2c0>
   10bec:	sub	w4, w2, #0x1
   10bf0:	mov	x0, x1
   10bf4:	add	x4, x4, #0x1
   10bf8:	mov	x19, x22
   10bfc:	mov	w5, #0x30                  	// #48
   10c00:	add	x4, x1, x4, lsl #2
   10c04:	nop
   10c08:	ldr	w3, [x0], #4
   10c0c:	ldr	x19, [x19, #24]
   10c10:	cmp	x0, x4
   10c14:	umaddl	x19, w3, w5, x19
   10c18:	b.ne	10c08 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x90>  // b.any
   10c1c:	ldr	x0, [x25]
   10c20:	mov	w2, w2
   10c24:	bl	0 <_ZN4llvm16ExtractValueInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIjEE>
   10c28:	ldrb	w0, [x0, #8]
   10c2c:	cmp	w0, #0xb
   10c30:	b.eq	10e04 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x28c>  // b.none
   10c34:	b.hi	10dac <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x234>  // b.pmore
   10c38:	cmp	w0, #0x2
   10c3c:	b.eq	10e2c <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x2b4>  // b.none
   10c40:	cmp	w0, #0x3
   10c44:	b.ne	10de0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x268>  // b.any
   10c48:	ldr	d0, [sp, #128]
   10c4c:	str	d0, [x19]
   10c50:	add	x19, sp, #0xe0
   10c54:	mov	x1, x22
   10c58:	mov	x0, x19
   10c5c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10c60:	mov	x1, x19
   10c64:	mov	x0, x20
   10c68:	mov	x2, x21
   10c6c:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   10c70:	ldp	x19, x20, [sp, #248]
   10c74:	cmp	x19, x20
   10c78:	b.eq	10c98 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x120>  // b.none
   10c7c:	nop
   10c80:	mov	x0, x19
   10c84:	add	x19, x19, #0x30
   10c88:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10c8c:	cmp	x20, x19
   10c90:	b.ne	10c80 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x108>  // b.any
   10c94:	ldr	x20, [sp, #248]
   10c98:	cbz	x20, 10ca4 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x12c>
   10c9c:	mov	x0, x20
   10ca0:	bl	0 <_ZdlPv>
   10ca4:	ldr	w0, [sp, #240]
   10ca8:	cmp	w0, #0x40
   10cac:	b.ls	10cbc <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x144>  // b.plast
   10cb0:	ldr	x0, [sp, #232]
   10cb4:	cbz	x0, 10cbc <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x144>
   10cb8:	bl	0 <_ZdaPv>
   10cbc:	ldp	x19, x20, [sp, #200]
   10cc0:	cmp	x19, x20
   10cc4:	b.eq	10ce0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x168>  // b.none
   10cc8:	mov	x0, x19
   10ccc:	add	x19, x19, #0x30
   10cd0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10cd4:	cmp	x20, x19
   10cd8:	b.ne	10cc8 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x150>  // b.any
   10cdc:	ldr	x20, [sp, #200]
   10ce0:	cbz	x20, 10cec <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x174>
   10ce4:	mov	x0, x20
   10ce8:	bl	0 <_ZdlPv>
   10cec:	ldr	w0, [sp, #192]
   10cf0:	cmp	w0, #0x40
   10cf4:	b.ls	10d04 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x18c>  // b.plast
   10cf8:	ldr	x0, [sp, #184]
   10cfc:	cbz	x0, 10d04 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x18c>
   10d00:	bl	0 <_ZdaPv>
   10d04:	ldp	x19, x20, [sp, #152]
   10d08:	cmp	x19, x20
   10d0c:	b.eq	10d28 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1b0>  // b.none
   10d10:	mov	x0, x19
   10d14:	add	x19, x19, #0x30
   10d18:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10d1c:	cmp	x20, x19
   10d20:	b.ne	10d10 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x198>  // b.any
   10d24:	ldr	x20, [sp, #152]
   10d28:	cbz	x20, 10d34 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1bc>
   10d2c:	mov	x0, x20
   10d30:	bl	0 <_ZdlPv>
   10d34:	ldr	w0, [sp, #144]
   10d38:	cmp	w0, #0x40
   10d3c:	b.ls	10d4c <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1d4>  // b.plast
   10d40:	ldr	x0, [sp, #136]
   10d44:	cbz	x0, 10d4c <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1d4>
   10d48:	bl	0 <_ZdaPv>
   10d4c:	ldp	x19, x20, [sp, #104]
   10d50:	cmp	x19, x20
   10d54:	b.eq	10d70 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1f8>  // b.none
   10d58:	mov	x0, x19
   10d5c:	add	x19, x19, #0x30
   10d60:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10d64:	cmp	x20, x19
   10d68:	b.ne	10d58 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1e0>  // b.any
   10d6c:	ldr	x20, [sp, #104]
   10d70:	cbz	x20, 10d7c <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x204>
   10d74:	mov	x0, x20
   10d78:	bl	0 <_ZdlPv>
   10d7c:	ldr	w0, [sp, #96]
   10d80:	cmp	w0, #0x40
   10d84:	b.ls	10d94 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x21c>  // b.plast
   10d88:	ldr	x0, [sp, #88]
   10d8c:	cbz	x0, 10d94 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x21c>
   10d90:	bl	0 <_ZdaPv>
   10d94:	ldp	x19, x20, [sp, #16]
   10d98:	ldp	x21, x22, [sp, #32]
   10d9c:	ldp	x23, x24, [sp, #48]
   10da0:	ldr	x25, [sp, #64]
   10da4:	ldp	x29, x30, [sp], #272
   10da8:	ret
   10dac:	cmp	w0, #0xf
   10db0:	b.eq	10df8 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x280>  // b.none
   10db4:	b.ls	10dd0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x258>  // b.plast
   10db8:	cmp	w0, #0x10
   10dbc:	b.ne	10de0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x268>  // b.any
   10dc0:	add	x1, x23, #0x18
   10dc4:	add	x0, x19, #0x18
   10dc8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10dcc:	b	10c50 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xd8>
   10dd0:	sub	w0, w0, #0xd
   10dd4:	and	w0, w0, #0xff
   10dd8:	cmp	w0, #0x1
   10ddc:	b.ls	10dc0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x248>  // b.plast
   10de0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10de4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   10de8:	add	x1, x1, #0x0
   10dec:	add	x0, x0, #0x0
   10df0:	mov	w2, #0x7cd                 	// #1997
   10df4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   10df8:	ldr	x0, [sp, #128]
   10dfc:	str	x0, [x19]
   10e00:	b	10c50 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xd8>
   10e04:	ldr	w1, [x19, #16]
   10e08:	add	x0, x19, #0x8
   10e0c:	cmp	w1, #0x40
   10e10:	b.hi	10e20 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x2a8>  // b.pmore
   10e14:	ldr	w1, [sp, #144]
   10e18:	cmp	w1, #0x40
   10e1c:	b.ls	10e40 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x2c8>  // b.plast
   10e20:	add	x1, x23, #0x8
   10e24:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
   10e28:	b	10c50 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xd8>
   10e2c:	ldr	s0, [sp, #128]
   10e30:	str	s0, [x19]
   10e34:	b	10c50 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xd8>
   10e38:	mov	x19, x22
   10e3c:	b	10c1c <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xa4>
   10e40:	ldr	x3, [sp, #136]
   10e44:	neg	w4, w1
   10e48:	mov	x2, #0xffffffffffffffff    	// #-1
   10e4c:	str	w1, [x0, #8]
   10e50:	lsr	x1, x2, x4
   10e54:	and	x1, x1, x3
   10e58:	str	x1, [x0]
   10e5c:	b	10c50 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xd8>

0000000000010e60 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>:
   10e60:	stp	x29, x30, [sp, #-224]!
   10e64:	mov	x29, sp
   10e68:	stp	x19, x20, [sp, #16]
   10e6c:	mov	x19, x0
   10e70:	mov	x20, x1
   10e74:	stp	x21, x22, [sp, #32]
   10e78:	mov	x21, x2
   10e7c:	ldr	x0, [x0, #696]
   10e80:	str	x3, [sp, #104]
   10e84:	ldr	x22, [x19, #704]
   10e88:	cmp	x22, x0
   10e8c:	b.eq	112bc <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x45c>  // b.none
   10e90:	ldur	x1, [x22, #-104]
   10e94:	add	x0, x19, #0x2b8
   10e98:	tst	x1, #0xfffffffffffffff8
   10e9c:	b.ne	11200 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3a0>  // b.any
   10ea0:	stp	x23, x24, [sp, #48]
   10ea4:	ldr	x1, [x0, #16]
   10ea8:	cmp	x1, x22
   10eac:	b.eq	1127c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x41c>  // b.none
   10eb0:	movi	v0.4s, #0x0
   10eb4:	add	x1, x22, #0x28
   10eb8:	stp	xzr, xzr, [x22, #16]
   10ebc:	add	x24, x22, #0x80
   10ec0:	str	wzr, [x22, #40]
   10ec4:	str	q0, [x22]
   10ec8:	str	xzr, [x22, #48]
   10ecc:	stp	x1, x1, [x1, #16]
   10ed0:	str	xzr, [x1, #32]
   10ed4:	stp	q0, q0, [x22, #80]
   10ed8:	str	q0, [x22, #112]
   10edc:	str	x24, [x0, #8]
   10ee0:	stur	x20, [x24, #-128]
   10ee4:	mov	x0, x20
   10ee8:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
   10eec:	tst	w0, #0xff
   10ef0:	b.ne	11184 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x324>  // b.any
   10ef4:	ldr	x0, [x20, #80]
   10ef8:	ldr	x1, [x0]
   10efc:	tst	w1, #0x4
   10f00:	b.ne	11410 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x5b0>  // b.any
   10f04:	sub	x1, x0, #0x18
   10f08:	ldr	x0, [x0, #24]
   10f0c:	str	x1, [x22, #8]
   10f10:	stur	x0, [x24, #-112]
   10f14:	ldr	x1, [sp, #104]
   10f18:	ldr	x0, [x20, #96]
   10f1c:	cmp	x1, x0
   10f20:	b.eq	10f48 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xe8>  // b.none
   10f24:	b.ls	113d0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x570>  // b.plast
   10f28:	ldr	x1, [x20, #24]
   10f2c:	cbz	x1, 113f8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x598>
   10f30:	ldrb	w2, [x1, #8]
   10f34:	cmp	w2, #0xc
   10f38:	b.ne	11364 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x504>  // b.any
   10f3c:	ldr	w1, [x1, #8]
   10f40:	cmp	wzr, w1, lsr #8
   10f44:	b.eq	113d0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x570>  // b.none
   10f48:	ldrb	w1, [x20, #18]
   10f4c:	tbnz	w1, #0, 11118 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2b8>
   10f50:	ldr	x19, [x20, #88]
   10f54:	mov	x24, x19
   10f58:	add	x0, x0, x0, lsl #2
   10f5c:	add	x0, x24, x0, lsl #3
   10f60:	str	x0, [sp, #112]
   10f64:	cmp	x0, x19
   10f68:	b.eq	112f4 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x494>  // b.none
   10f6c:	ldr	x0, [sp, #104]
   10f70:	stp	x25, x26, [sp, #64]
   10f74:	stp	x27, x28, [sp, #80]
   10f78:	cbz	x0, 110f8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x298>
   10f7c:	add	x25, sp, #0xb0
   10f80:	mov	w20, #0x0                   	// #0
   10f84:	add	x0, x25, #0x8
   10f88:	str	x0, [sp, #120]
   10f8c:	mov	x0, #0x0                   	// #0
   10f90:	add	x0, x0, x0, lsl #1
   10f94:	lsl	x0, x0, #4
   10f98:	add	x24, x21, x0
   10f9c:	add	x1, x24, #0x8
   10fa0:	ldr	x0, [x21, x0]
   10fa4:	str	x0, [sp, #176]
   10fa8:	ldr	w0, [x1, #8]
   10fac:	str	w0, [sp, #192]
   10fb0:	cmp	w0, #0x40
   10fb4:	b.hi	1113c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2dc>  // b.pmore
   10fb8:	ldr	x0, [x24, #8]
   10fbc:	str	x0, [sp, #184]
   10fc0:	ldp	x28, x26, [x24, #24]
   10fc4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   10fc8:	movk	x1, #0xaaab
   10fcc:	stp	xzr, xzr, [sp, #200]
   10fd0:	mov	x27, #0x0                   	// #0
   10fd4:	str	xzr, [sp, #216]
   10fd8:	sub	x23, x26, x28
   10fdc:	asr	x0, x23, #4
   10fe0:	mul	x0, x0, x1
   10fe4:	cbz	x0, 11008 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1a8>
   10fe8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   10fec:	movk	x1, #0x2aa, lsl #48
   10ff0:	cmp	x0, x1
   10ff4:	b.hi	112fc <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x49c>  // b.pmore
   10ff8:	mov	x0, x23
   10ffc:	bl	0 <_Znwm>
   11000:	ldp	x28, x26, [x24, #24]
   11004:	mov	x27, x0
   11008:	dup	v0.2d, x27
   1100c:	add	x1, x27, x23
   11010:	str	x1, [sp, #216]
   11014:	cmp	x28, x26
   11018:	stur	q0, [sp, #200]
   1101c:	b.eq	11074 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x214>  // b.none
   11020:	mov	x23, x28
   11024:	mov	x24, x27
   11028:	mov	x1, x23
   1102c:	mov	x0, x24
   11030:	add	x23, x23, #0x30
   11034:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11038:	cmp	x26, x23
   1103c:	add	x24, x24, #0x30
   11040:	b.ne	11028 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1c8>  // b.any
   11044:	sub	x1, x26, #0x30
   11048:	mov	x0, #0xaaab                	// #43691
   1104c:	sub	x1, x1, x28
   11050:	movk	x0, #0xaaaa, lsl #16
   11054:	movk	x0, #0xaaaa, lsl #32
   11058:	lsr	x1, x1, #4
   1105c:	movk	x0, #0xaaa, lsl #48
   11060:	mul	x1, x1, x0
   11064:	and	x1, x1, #0xfffffffffffffff
   11068:	add	x1, x1, #0x1
   1106c:	add	x1, x1, x1, lsl #1
   11070:	add	x27, x27, x1, lsl #4
   11074:	mov	x2, x22
   11078:	mov	x1, x25
   1107c:	mov	x0, x19
   11080:	str	x27, [sp, #208]
   11084:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   11088:	ldp	x27, x28, [sp, #200]
   1108c:	cmp	x27, x28
   11090:	b.eq	110b0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x250>  // b.none
   11094:	nop
   11098:	mov	x0, x27
   1109c:	add	x27, x27, #0x30
   110a0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   110a4:	cmp	x28, x27
   110a8:	b.ne	11098 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x238>  // b.any
   110ac:	ldr	x28, [sp, #200]
   110b0:	cbz	x28, 110bc <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x25c>
   110b4:	mov	x0, x28
   110b8:	bl	0 <_ZdlPv>
   110bc:	ldr	w0, [sp, #192]
   110c0:	cmp	w0, #0x40
   110c4:	b.ls	110d4 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x274>  // b.plast
   110c8:	ldr	x0, [sp, #184]
   110cc:	cbz	x0, 110d4 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x274>
   110d0:	bl	0 <_ZdaPv>
   110d4:	ldr	x0, [sp, #112]
   110d8:	add	x19, x19, #0x28
   110dc:	add	w20, w20, #0x1
   110e0:	cmp	x19, x0
   110e4:	mov	w0, w20
   110e8:	b.eq	11148 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2e8>  // b.none
   110ec:	ldr	x1, [sp, #104]
   110f0:	cmp	x1, x0
   110f4:	b.hi	10f90 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x130>  // b.pmore
   110f8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   110fc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11100:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11104:	add	x3, x3, #0x0
   11108:	add	x1, x1, #0x0
   1110c:	add	x0, x0, #0x0
   11110:	mov	w2, #0xfa                  	// #250
   11114:	bl	0 <__assert_fail>
   11118:	mov	x0, x20
   1111c:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
   11120:	ldrb	w0, [x20, #18]
   11124:	ldr	x19, [x20, #88]
   11128:	tbz	w0, #0, 113c4 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x564>
   1112c:	mov	x0, x20
   11130:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
   11134:	ldp	x24, x0, [x20, #88]
   11138:	b	10f58 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xf8>
   1113c:	ldr	x0, [sp, #120]
   11140:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   11144:	b	10fc0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x160>
   11148:	mov	w1, #0x30                  	// #48
   1114c:	ldp	x25, x26, [sp, #64]
   11150:	umaddl	x1, w20, w1, x21
   11154:	ldp	x27, x28, [sp, #80]
   11158:	mov	w3, #0x0                   	// #0
   1115c:	ldr	x0, [sp, #104]
   11160:	add	x23, x0, x0, lsl #1
   11164:	add	x0, x22, #0x50
   11168:	add	x2, x21, x23, lsl #4
   1116c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11170:	ldp	x19, x20, [sp, #16]
   11174:	ldp	x21, x22, [sp, #32]
   11178:	ldp	x23, x24, [sp, #48]
   1117c:	ldp	x29, x30, [sp], #224
   11180:	ret
   11184:	ldr	x3, [sp, #104]
   11188:	add	x22, sp, #0x80
   1118c:	mov	x0, x19
   11190:	mov	x2, x21
   11194:	mov	x8, x22
   11198:	mov	x1, x20
   1119c:	bl	0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
   111a0:	ldr	x0, [x20, #24]
   111a4:	cbz	x0, 113f8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x598>
   111a8:	ldrb	w1, [x0, #8]
   111ac:	cmp	w1, #0xc
   111b0:	b.ne	11364 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x504>  // b.any
   111b4:	ldr	x2, [x0, #16]
   111b8:	add	x20, sp, #0xb0
   111bc:	mov	x1, x22
   111c0:	mov	x0, x20
   111c4:	ldr	x21, [x2]
   111c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   111cc:	mov	x2, x20
   111d0:	mov	x0, x19
   111d4:	mov	x1, x21
   111d8:	bl	ad98 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE>
   111dc:	mov	x0, x20
   111e0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   111e4:	mov	x0, x22
   111e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   111ec:	ldp	x19, x20, [sp, #16]
   111f0:	ldp	x21, x22, [sp, #32]
   111f4:	ldp	x23, x24, [sp, #48]
   111f8:	ldp	x29, x30, [sp], #224
   111fc:	ret
   11200:	sub	x0, x22, #0x68
   11204:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11208:	ldur	x2, [x22, #-104]
   1120c:	and	x1, x2, #0xfffffffffffffff8
   11210:	ubfx	x2, x2, #1, #2
   11214:	cmp	x2, #0x1
   11218:	b.eq	112c8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x468>  // b.none
   1121c:	cmp	x2, #0x2
   11220:	b.eq	11290 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x430>  // b.none
   11224:	cbz	x1, 11354 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4f4>
   11228:	ldrb	w2, [x1, #16]
   1122c:	cmp	w2, #0x1d
   11230:	b.ne	11328 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4c8>  // b.any
   11234:	ldr	w2, [x1, #20]
   11238:	mov	w3, #0x18                  	// #24
   1123c:	stp	x23, x24, [sp, #48]
   11240:	ubfx	x2, x2, #0, #28
   11244:	umsubl	x1, w2, w3, x1
   11248:	sub	x0, x0, x1
   1124c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   11250:	movk	x1, #0xaaab
   11254:	asr	x0, x0, #3
   11258:	mul	w0, w0, w1
   1125c:	ldr	x1, [sp, #104]
   11260:	cmp	x0, x1
   11264:	b.ne	11300 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4a0>  // b.any
   11268:	ldr	x22, [x19, #704]
   1126c:	add	x0, x19, #0x2b8
   11270:	ldr	x1, [x0, #16]
   11274:	cmp	x1, x22
   11278:	b.ne	10eb0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x50>  // b.any
   1127c:	mov	x1, x22
   11280:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11284:	ldr	x24, [x19, #704]
   11288:	sub	x22, x24, #0x80
   1128c:	b	10ee0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x80>
   11290:	cbz	x1, 1137c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x51c>
   11294:	ldrb	w2, [x1, #16]
   11298:	cmp	w2, #0x23
   1129c:	b.eq	11234 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3d4>  // b.none
   112a0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   112a4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   112a8:	add	x3, x3, #0x0
   112ac:	stp	x23, x24, [sp, #48]
   112b0:	stp	x25, x26, [sp, #64]
   112b4:	stp	x27, x28, [sp, #80]
   112b8:	b	11340 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4e0>
   112bc:	add	x0, x19, #0x2b8
   112c0:	stp	x23, x24, [sp, #48]
   112c4:	b	10ea4 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x44>
   112c8:	cbz	x1, 113a8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x548>
   112cc:	ldrb	w2, [x1, #16]
   112d0:	cmp	w2, #0x50
   112d4:	b.eq	11234 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3d4>  // b.none
   112d8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   112dc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   112e0:	add	x3, x3, #0x0
   112e4:	stp	x23, x24, [sp, #48]
   112e8:	stp	x25, x26, [sp, #64]
   112ec:	stp	x27, x28, [sp, #80]
   112f0:	b	11340 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4e0>
   112f4:	mov	x1, x21
   112f8:	b	11158 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2f8>
   112fc:	bl	0 <_ZSt17__throw_bad_allocv>
   11300:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11304:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11308:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1130c:	add	x3, x3, #0x0
   11310:	add	x1, x1, #0x0
   11314:	add	x0, x0, #0x0
   11318:	mov	w2, #0x84c                 	// #2124
   1131c:	stp	x25, x26, [sp, #64]
   11320:	stp	x27, x28, [sp, #80]
   11324:	bl	0 <__assert_fail>
   11328:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1132c:	add	x3, x3, #0x0
   11330:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11334:	stp	x23, x24, [sp, #48]
   11338:	stp	x25, x26, [sp, #64]
   1133c:	stp	x27, x28, [sp, #80]
   11340:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11344:	add	x1, x1, #0x0
   11348:	add	x0, x0, #0x0
   1134c:	mov	w2, #0x108                 	// #264
   11350:	bl	0 <__assert_fail>
   11354:	stp	x23, x24, [sp, #48]
   11358:	stp	x25, x26, [sp, #64]
   1135c:	stp	x27, x28, [sp, #80]
   11360:	bl	118 <_ZN4llvm3isaINS_10InvokeInstEPNS_11InstructionEEEbRKT0_.isra.0.part.0>
   11364:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11368:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1136c:	add	x3, x3, #0x0
   11370:	stp	x25, x26, [sp, #64]
   11374:	stp	x27, x28, [sp, #80]
   11378:	b	11340 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4e0>
   1137c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11380:	add	x3, x3, #0x0
   11384:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11388:	stp	x23, x24, [sp, #48]
   1138c:	stp	x25, x26, [sp, #64]
   11390:	stp	x27, x28, [sp, #80]
   11394:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11398:	add	x1, x1, #0x0
   1139c:	add	x0, x0, #0x0
   113a0:	mov	w2, #0x69                  	// #105
   113a4:	bl	0 <__assert_fail>
   113a8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   113ac:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   113b0:	add	x3, x3, #0x0
   113b4:	stp	x23, x24, [sp, #48]
   113b8:	stp	x25, x26, [sp, #64]
   113bc:	stp	x27, x28, [sp, #80]
   113c0:	b	11394 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x534>
   113c4:	mov	x24, x19
   113c8:	ldr	x0, [x20, #96]
   113cc:	b	10f58 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xf8>
   113d0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   113d4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   113d8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   113dc:	add	x3, x3, #0x0
   113e0:	add	x1, x1, #0x0
   113e4:	add	x0, x0, #0x0
   113e8:	mov	w2, #0x861                 	// #2145
   113ec:	stp	x25, x26, [sp, #64]
   113f0:	stp	x27, x28, [sp, #80]
   113f4:	bl	0 <__assert_fail>
   113f8:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   113fc:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11400:	add	x3, x3, #0x0
   11404:	stp	x25, x26, [sp, #64]
   11408:	stp	x27, x28, [sp, #80]
   1140c:	b	11394 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x534>
   11410:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11414:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11418:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1141c:	add	x3, x3, #0x0
   11420:	add	x1, x1, #0x0
   11424:	add	x0, x0, #0x0
   11428:	mov	w2, #0x8b                  	// #139
   1142c:	stp	x25, x26, [sp, #64]
   11430:	stp	x27, x28, [sp, #80]
   11434:	bl	0 <__assert_fail>

0000000000011438 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>:
   11438:	stp	x29, x30, [sp, #-208]!
   1143c:	mov	x29, sp
   11440:	stp	x19, x20, [sp, #16]
   11444:	stp	x21, x22, [sp, #32]
   11448:	ands	x21, x1, #0xfffffffffffffff8
   1144c:	stp	x23, x24, [sp, #48]
   11450:	stp	x25, x26, [sp, #64]
   11454:	stp	x27, x28, [sp, #80]
   11458:	ldr	x24, [x0, #704]
   1145c:	b.eq	11a74 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x63c>  // b.none
   11460:	mov	x22, x0
   11464:	ldrb	w0, [x21, #16]
   11468:	mov	x19, x1
   1146c:	mov	w1, #0x23                  	// #35
   11470:	cmp	w0, #0x50
   11474:	ccmp	w0, #0x1d, #0x4, ne  // ne = any
   11478:	ccmp	w0, w1, #0x4, ne  // ne = any
   1147c:	b.ne	11754 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x31c>  // b.any
   11480:	ldur	x20, [x21, #-24]
   11484:	cbz	x20, 11a70 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x638>
   11488:	ldrb	w0, [x20, #16]
   1148c:	sub	x23, x24, #0x80
   11490:	cbnz	w0, 11524 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0xec>
   11494:	mov	x0, x20
   11498:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
   1149c:	tst	w0, #0xff
   114a0:	b.eq	11524 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0xec>  // b.none
   114a4:	ldr	w0, [x20, #36]
   114a8:	cmp	w0, #0x106
   114ac:	b.eq	11738 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x300>  // b.none
   114b0:	b.hi	11774 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x33c>  // b.pmore
   114b4:	cbz	w0, 11524 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0xec>
   114b8:	cmp	w0, #0x105
   114bc:	b.ne	119a8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x570>  // b.any
   114c0:	ubfx	x19, x19, #1, #2
   114c4:	ldrb	w0, [x21, #16]
   114c8:	cmp	x19, #0x1
   114cc:	b.eq	11a34 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5fc>  // b.none
   114d0:	cmp	x19, #0x2
   114d4:	b.eq	11a1c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5e4>  // b.none
   114d8:	cmp	w0, #0x1d
   114dc:	b.ne	11a94 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x65c>  // b.any
   114e0:	ldr	w0, [x21, #20]
   114e4:	mov	w1, #0x18                  	// #24
   114e8:	add	x19, sp, #0xa0
   114ec:	mov	x2, x23
   114f0:	mov	x8, x19
   114f4:	ubfx	x0, x0, #0, #28
   114f8:	umsubl	x0, w0, w1, x21
   114fc:	ldr	x1, [x0]
   11500:	mov	x0, x22
   11504:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   11508:	mov	x2, x23
   1150c:	mov	x1, x19
   11510:	mov	x0, x21
   11514:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   11518:	mov	x0, x19
   1151c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11520:	b	11738 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x300>
   11524:	stur	x19, [x24, #-104]
   11528:	add	x25, x23, #0x18
   1152c:	mov	x0, x25
   11530:	stp	xzr, xzr, [sp, #112]
   11534:	str	xzr, [sp, #128]
   11538:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1153c:	ldur	x1, [x24, #-104]
   11540:	and	x21, x1, #0xfffffffffffffff8
   11544:	ubfx	x1, x1, #1, #2
   11548:	cmp	x1, #0x1
   1154c:	b.eq	11948 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x510>  // b.none
   11550:	cmp	x1, #0x2
   11554:	b.eq	118d8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x4a0>  // b.none
   11558:	cbz	x21, 118d4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x49c>
   1155c:	ldrb	w1, [x21, #16]
   11560:	cmp	w1, #0x1d
   11564:	b.ne	11a94 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x65c>  // b.any
   11568:	ldr	w2, [x21, #20]
   1156c:	mov	w4, #0x18                  	// #24
   11570:	ldr	x19, [sp, #112]
   11574:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   11578:	ubfx	x2, x2, #0, #28
   1157c:	movk	x3, #0xaaab
   11580:	ldr	x1, [sp, #128]
   11584:	umsubl	x2, w2, w4, x21
   11588:	sub	x1, x1, x19
   1158c:	sub	x0, x0, x2
   11590:	asr	x1, x1, #4
   11594:	asr	x0, x0, #3
   11598:	mul	x1, x1, x3
   1159c:	mul	w0, w0, w3
   115a0:	cmp	x1, x0
   115a4:	b.cc	117e0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x3a8>  // b.lo, b.ul, b.last
   115a8:	ldrb	w0, [x21, #16]
   115ac:	cmp	w0, #0x1d
   115b0:	b.ne	11a94 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x65c>  // b.any
   115b4:	ldr	w0, [x21, #20]
   115b8:	mov	w1, #0x18                  	// #24
   115bc:	ubfx	x0, x0, #0, #28
   115c0:	umsubl	x21, w0, w1, x21
   115c4:	mov	x0, x25
   115c8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   115cc:	mov	x26, x0
   115d0:	cmp	x0, x21
   115d4:	b.eq	11658 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x220>  // b.none
   115d8:	add	x27, sp, #0x70
   115dc:	add	x25, sp, #0xa0
   115e0:	ldr	x1, [x21]
   115e4:	mov	x8, x25
   115e8:	mov	x2, x23
   115ec:	mov	x0, x22
   115f0:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   115f4:	mov	x1, x25
   115f8:	mov	x0, x27
   115fc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11600:	ldp	x19, x20, [sp, #184]
   11604:	cmp	x19, x20
   11608:	b.eq	11628 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x1f0>  // b.none
   1160c:	nop
   11610:	mov	x0, x19
   11614:	add	x19, x19, #0x30
   11618:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   1161c:	cmp	x20, x19
   11620:	b.ne	11610 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x1d8>  // b.any
   11624:	ldr	x20, [sp, #184]
   11628:	cbz	x20, 11634 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x1fc>
   1162c:	mov	x0, x20
   11630:	bl	0 <_ZdlPv>
   11634:	ldr	w1, [sp, #176]
   11638:	cmp	w1, #0x40
   1163c:	b.ls	1164c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x214>  // b.plast
   11640:	ldr	x0, [sp, #168]
   11644:	cbz	x0, 1164c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x214>
   11648:	bl	0 <_ZdaPv>
   1164c:	add	x21, x21, #0x18
   11650:	cmp	x26, x21
   11654:	b.ne	115e0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x1a8>  // b.any
   11658:	ldur	x0, [x24, #-104]
   1165c:	ands	x0, x0, #0xfffffffffffffff8
   11660:	b.eq	11a74 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x63c>  // b.none
   11664:	ldrb	w1, [x0, #16]
   11668:	mov	w2, #0x23                  	// #35
   1166c:	cmp	w1, #0x50
   11670:	ccmp	w1, #0x1d, #0x4, ne  // ne = any
   11674:	ccmp	w1, w2, #0x4, ne  // ne = any
   11678:	b.ne	11754 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x31c>  // b.any
   1167c:	ldur	x1, [x0, #-24]
   11680:	add	x19, sp, #0xa0
   11684:	mov	x8, x19
   11688:	mov	x0, x22
   1168c:	mov	x2, x23
   11690:	bl	8020 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   11694:	ldp	x2, x4, [sp, #112]
   11698:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1169c:	movk	x3, #0xaaab
   116a0:	mov	x0, x22
   116a4:	ldr	x1, [sp, #160]
   116a8:	sub	x4, x4, x2
   116ac:	asr	x4, x4, #4
   116b0:	mul	x3, x4, x3
   116b4:	bl	10e60 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
   116b8:	mov	x0, x19
   116bc:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   116c0:	ldp	x19, x22, [sp, #112]
   116c4:	cmp	x19, x22
   116c8:	b.eq	1172c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x2f4>  // b.none
   116cc:	nop
   116d0:	ldp	x20, x21, [x19, #24]
   116d4:	cmp	x20, x21
   116d8:	b.eq	116f8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x2c0>  // b.none
   116dc:	nop
   116e0:	mov	x0, x20
   116e4:	add	x20, x20, #0x30
   116e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   116ec:	cmp	x21, x20
   116f0:	b.ne	116e0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x2a8>  // b.any
   116f4:	ldr	x21, [x19, #24]
   116f8:	cbz	x21, 11704 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x2cc>
   116fc:	mov	x0, x21
   11700:	bl	0 <_ZdlPv>
   11704:	ldr	w0, [x19, #16]
   11708:	cmp	w0, #0x40
   1170c:	b.ls	1171c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x2e4>  // b.plast
   11710:	ldr	x0, [x19, #8]
   11714:	cbz	x0, 1171c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x2e4>
   11718:	bl	0 <_ZdaPv>
   1171c:	add	x19, x19, #0x30
   11720:	cmp	x22, x19
   11724:	b.ne	116d0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x298>  // b.any
   11728:	ldr	x22, [sp, #112]
   1172c:	cbz	x22, 11738 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x300>
   11730:	mov	x0, x22
   11734:	bl	0 <_ZdlPv>
   11738:	ldp	x19, x20, [sp, #16]
   1173c:	ldp	x21, x22, [sp, #32]
   11740:	ldp	x23, x24, [sp, #48]
   11744:	ldp	x25, x26, [sp, #64]
   11748:	ldp	x27, x28, [sp, #80]
   1174c:	ldp	x29, x30, [sp], #208
   11750:	ret
   11754:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11758:	add	x3, x3, #0x0
   1175c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11760:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11764:	add	x1, x1, #0x0
   11768:	add	x0, x0, #0x0
   1176c:	mov	w2, #0x108                 	// #264
   11770:	bl	0 <__assert_fail>
   11774:	cmp	w0, #0x107
   11778:	b.ne	119a8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x570>  // b.any
   1177c:	ldr	x3, [x22, #696]
   11780:	add	x19, sp, #0xa0
   11784:	ldr	x2, [x22, #704]
   11788:	add	x20, sp, #0x70
   1178c:	mov	x1, x20
   11790:	mov	x0, x19
   11794:	sub	x2, x2, x3
   11798:	mov	w3, #0x1                   	// #1
   1179c:	str	xzr, [sp, #120]
   117a0:	asr	x2, x2, #7
   117a4:	str	w3, [sp, #128]
   117a8:	sub	w2, w2, #0x1
   117ac:	stp	w2, wzr, [sp, #112]
   117b0:	stp	xzr, xzr, [sp, #136]
   117b4:	str	xzr, [sp, #152]
   117b8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   117bc:	mov	x2, x23
   117c0:	mov	x1, x19
   117c4:	mov	x0, x21
   117c8:	bl	828 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   117cc:	mov	x0, x19
   117d0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   117d4:	mov	x0, x20
   117d8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   117dc:	b	11738 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x300>
   117e0:	ldr	x21, [sp, #120]
   117e4:	add	x26, x0, x0, lsl #1
   117e8:	sub	x1, x21, x19
   117ec:	str	x1, [sp, #104]
   117f0:	lsl	x26, x26, #4
   117f4:	cbz	x0, 11938 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x500>
   117f8:	mov	x0, x26
   117fc:	bl	0 <_Znwm>
   11800:	cmp	x19, x21
   11804:	mov	x27, x0
   11808:	b.eq	1182c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x3f4>  // b.none
   1180c:	mov	x20, x27
   11810:	mov	x1, x19
   11814:	mov	x0, x20
   11818:	add	x19, x19, #0x30
   1181c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11820:	cmp	x21, x19
   11824:	add	x20, x20, #0x30
   11828:	b.ne	11810 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x3d8>  // b.any
   1182c:	ldp	x28, x21, [sp, #112]
   11830:	cmp	x28, x21
   11834:	b.eq	11894 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x45c>  // b.none
   11838:	ldp	x19, x20, [x28, #24]
   1183c:	cmp	x19, x20
   11840:	b.eq	11860 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x428>  // b.none
   11844:	nop
   11848:	mov	x0, x19
   1184c:	add	x19, x19, #0x30
   11850:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11854:	cmp	x20, x19
   11858:	b.ne	11848 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x410>  // b.any
   1185c:	ldr	x20, [x28, #24]
   11860:	cbz	x20, 1186c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x434>
   11864:	mov	x0, x20
   11868:	bl	0 <_ZdlPv>
   1186c:	ldr	w0, [x28, #16]
   11870:	cmp	w0, #0x40
   11874:	b.ls	11884 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x44c>  // b.plast
   11878:	ldr	x0, [x28, #8]
   1187c:	cbz	x0, 11884 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x44c>
   11880:	bl	0 <_ZdaPv>
   11884:	add	x28, x28, #0x30
   11888:	cmp	x21, x28
   1188c:	b.ne	11838 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x400>  // b.any
   11890:	ldr	x21, [sp, #112]
   11894:	cbz	x21, 118a0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x468>
   11898:	mov	x0, x21
   1189c:	bl	0 <_ZdlPv>
   118a0:	ldur	x0, [x24, #-104]
   118a4:	add	x26, x27, x26
   118a8:	ldr	x1, [sp, #104]
   118ac:	str	x26, [sp, #128]
   118b0:	and	x21, x0, #0xfffffffffffffff8
   118b4:	ubfx	x0, x0, #1, #2
   118b8:	add	x28, x27, x1
   118bc:	stp	x27, x28, [sp, #112]
   118c0:	cmp	x0, #0x1
   118c4:	b.eq	11a4c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x614>  // b.none
   118c8:	cmp	x0, #0x2
   118cc:	b.eq	119ec <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5b4>  // b.none
   118d0:	cbnz	x21, 115a8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x170>
   118d4:	bl	118 <_ZN4llvm3isaINS_10InvokeInstEPNS_11InstructionEEEbRKT0_.isra.0.part.0>
   118d8:	cbz	x21, 119f0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5b8>
   118dc:	ldrb	w1, [x21, #16]
   118e0:	cmp	w1, #0x23
   118e4:	b.ne	11a24 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5ec>  // b.any
   118e8:	ldr	w1, [x21, #20]
   118ec:	mov	w4, #0x18                  	// #24
   118f0:	ldr	x19, [sp, #112]
   118f4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   118f8:	ubfx	x1, x1, #0, #28
   118fc:	movk	x3, #0xaaab
   11900:	ldr	x2, [sp, #128]
   11904:	umsubl	x1, w1, w4, x21
   11908:	sub	x2, x2, x19
   1190c:	sub	x0, x0, x1
   11910:	asr	x1, x2, #4
   11914:	asr	x0, x0, #3
   11918:	mul	x1, x1, x3
   1191c:	mul	w0, w0, w3
   11920:	cmp	x1, x0
   11924:	b.cc	117e0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x3a8>  // b.lo, b.ul, b.last
   11928:	ldrb	w0, [x21, #16]
   1192c:	cmp	w0, #0x23
   11930:	b.eq	115b4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x17c>  // b.none
   11934:	b	11a24 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5ec>
   11938:	cmp	x19, x21
   1193c:	mov	x27, #0x0                   	// #0
   11940:	b.ne	1180c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x3d4>  // b.any
   11944:	b	11894 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x45c>
   11948:	cbz	x21, 11a50 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x618>
   1194c:	ldrb	w1, [x21, #16]
   11950:	cmp	w1, #0x50
   11954:	b.ne	11a3c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x604>  // b.any
   11958:	ldr	w1, [x21, #20]
   1195c:	mov	w4, #0x18                  	// #24
   11960:	ldr	x19, [sp, #112]
   11964:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   11968:	ubfx	x1, x1, #0, #28
   1196c:	movk	x3, #0xaaab
   11970:	ldr	x2, [sp, #128]
   11974:	umsubl	x1, w1, w4, x21
   11978:	sub	x2, x2, x19
   1197c:	sub	x0, x0, x1
   11980:	asr	x1, x2, #4
   11984:	asr	x0, x0, #3
   11988:	mul	x1, x1, x3
   1198c:	mul	w0, w0, w3
   11990:	cmp	x1, x0
   11994:	b.cc	117e0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x3a8>  // b.lo, b.ul, b.last
   11998:	ldrb	w0, [x21, #16]
   1199c:	cmp	w0, #0x50
   119a0:	b.eq	115b4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x17c>  // b.none
   119a4:	b	11a3c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x604>
   119a8:	ldr	x19, [x21, #40]
   119ac:	add	x1, x21, #0x18
   119b0:	ldrb	w2, [x21, #16]
   119b4:	ldr	x0, [x22, #688]
   119b8:	ldr	x3, [x19, #48]
   119bc:	cmp	x3, x1
   119c0:	b.eq	11a00 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5c8>  // b.none
   119c4:	ldr	x19, [x21, #24]
   119c8:	cmp	w2, #0x50
   119cc:	and	x19, x19, #0xfffffffffffffff8
   119d0:	b.ne	11a3c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x604>  // b.any
   119d4:	mov	x1, x21
   119d8:	bl	0 <_ZN4llvm17IntrinsicLowering18LowerIntrinsicCallEPNS_8CallInstE>
   119dc:	stur	x19, [x24, #-112]
   119e0:	ldr	x0, [x19, #8]
   119e4:	stur	x0, [x24, #-112]
   119e8:	b	11738 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x300>
   119ec:	cbnz	x21, 11928 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x4f0>
   119f0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   119f4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   119f8:	add	x3, x3, #0x0
   119fc:	b	11a5c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x624>
   11a00:	cmp	w2, #0x50
   11a04:	b.ne	11a3c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x604>  // b.any
   11a08:	mov	x1, x21
   11a0c:	bl	0 <_ZN4llvm17IntrinsicLowering18LowerIntrinsicCallEPNS_8CallInstE>
   11a10:	ldr	x0, [x19, #48]
   11a14:	stur	x0, [x24, #-112]
   11a18:	b	11738 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x300>
   11a1c:	cmp	w0, #0x23
   11a20:	b.eq	114e0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0xa8>  // b.none
   11a24:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11a28:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11a2c:	add	x3, x3, #0x0
   11a30:	b	11760 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x328>
   11a34:	cmp	w0, #0x50
   11a38:	b.eq	114e0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0xa8>  // b.none
   11a3c:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11a40:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11a44:	add	x3, x3, #0x0
   11a48:	b	11760 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x328>
   11a4c:	cbnz	x21, 11998 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x560>
   11a50:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11a54:	add	x3, x3, #0x0
   11a58:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11a5c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11a60:	add	x1, x1, #0x0
   11a64:	add	x0, x0, #0x0
   11a68:	mov	w2, #0x69                  	// #105
   11a6c:	bl	0 <__assert_fail>
   11a70:	bl	78 <_ZN4llvm3isaINS_8FunctionEPNS_5ValueEEEbRKT0_.isra.0.part.0>
   11a74:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11a78:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11a7c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11a80:	add	x3, x3, #0x0
   11a84:	add	x1, x1, #0x0
   11a88:	add	x0, x0, #0x0
   11a8c:	mov	w2, #0x69                  	// #105
   11a90:	bl	0 <__assert_fail>
   11a94:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11a98:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11a9c:	add	x3, x3, #0x0
   11aa0:	b	11760 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x328>
   11aa4:	nop

0000000000011aa8 <_ZN4llvm11Interpreter3runEv>:
   11aa8:	stp	x29, x30, [sp, #-64]!
   11aac:	mov	x29, sp
   11ab0:	stp	x19, x20, [sp, #16]
   11ab4:	mov	x20, x0
   11ab8:	ldr	x0, [x0, #696]
   11abc:	ldr	x2, [x20, #704]
   11ac0:	cmp	x0, x2
   11ac4:	b.eq	11c00 <_ZN4llvm11Interpreter3runEv+0x158>  // b.none
   11ac8:	stp	x21, x22, [sp, #32]
   11acc:	adrp	x22, 0 <_ZN4llvm9DebugFlagE>
   11ad0:	adrp	x21, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11ad4:	add	x21, x21, #0x0
   11ad8:	stp	x23, x24, [sp, #48]
   11adc:	add	x23, x21, #0xc8
   11ae0:	ldr	x22, [x22]
   11ae4:	b	11b0c <_ZN4llvm11Interpreter3runEv+0x64>
   11ae8:	ldrb	w0, [x22]
   11aec:	cbnz	w0, 11b58 <_ZN4llvm11Interpreter3runEv+0xb0>
   11af0:	mov	x0, x20
   11af4:	mov	x1, x19
   11af8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11afc:	ldr	x0, [x20, #696]
   11b00:	ldr	x2, [x20, #704]
   11b04:	cmp	x2, x0
   11b08:	b.eq	11bf8 <_ZN4llvm11Interpreter3runEv+0x150>  // b.none
   11b0c:	ldur	x1, [x2, #-112]
   11b10:	ldp	x0, x3, [x1]
   11b14:	stur	x3, [x2, #-112]
   11b18:	tst	w0, #0x4
   11b1c:	b.ne	11c54 <_ZN4llvm11Interpreter3runEv+0x1ac>  // b.any
   11b20:	sub	x19, x1, #0x18
   11b24:	add	x0, x21, #0xe0
   11b28:	ldxr	w1, [x0]
   11b2c:	add	w1, w1, #0x1
   11b30:	stxr	w2, w1, [x0]
   11b34:	cbnz	w2, 11b28 <_ZN4llvm11Interpreter3runEv+0x80>
   11b38:	add	x0, x21, #0xe4
   11b3c:	ldarb	w0, [x0]
   11b40:	tst	w0, #0xff
   11b44:	b.ne	11ae8 <_ZN4llvm11Interpreter3runEv+0x40>  // b.any
   11b48:	mov	x0, x23
   11b4c:	bl	0 <_ZN4llvm17TrackingStatistic17RegisterStatisticEv>
   11b50:	ldrb	w0, [x22]
   11b54:	cbz	w0, 11af0 <_ZN4llvm11Interpreter3runEv+0x48>
   11b58:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11b5c:	add	x0, x0, #0x0
   11b60:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   11b64:	tst	w0, #0xff
   11b68:	b.eq	11af0 <_ZN4llvm11Interpreter3runEv+0x48>  // b.none
   11b6c:	bl	0 <_ZN4llvm4dbgsEv>
   11b70:	mov	x24, x0
   11b74:	ldp	x1, x2, [x0, #16]
   11b78:	sub	x1, x1, x2
   11b7c:	cmp	x1, #0x13
   11b80:	b.ls	11c0c <_ZN4llvm11Interpreter3runEv+0x164>  // b.plast
   11b84:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11b88:	add	x3, x3, #0x0
   11b8c:	ldp	x0, x1, [x3]
   11b90:	stp	x0, x1, [x2]
   11b94:	ldr	w0, [x3, #16]
   11b98:	str	w0, [x2, #16]
   11b9c:	mov	x1, x24
   11ba0:	mov	w2, #0x0                   	// #0
   11ba4:	ldr	x0, [x24, #24]
   11ba8:	add	x0, x0, #0x14
   11bac:	str	x0, [x24, #24]
   11bb0:	mov	x0, x19
   11bb4:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
   11bb8:	ldp	x1, x0, [x24, #16]
   11bbc:	cmp	x1, x0
   11bc0:	b.eq	11c3c <_ZN4llvm11Interpreter3runEv+0x194>  // b.none
   11bc4:	mov	w1, #0xa                   	// #10
   11bc8:	strb	w1, [x0]
   11bcc:	mov	x1, x19
   11bd0:	ldr	x0, [x24, #24]
   11bd4:	add	x0, x0, #0x1
   11bd8:	str	x0, [x24, #24]
   11bdc:	mov	x0, x20
   11be0:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11be4:	ldr	x0, [x20, #696]
   11be8:	ldr	x2, [x20, #704]
   11bec:	cmp	x2, x0
   11bf0:	b.ne	11b0c <_ZN4llvm11Interpreter3runEv+0x64>  // b.any
   11bf4:	nop
   11bf8:	ldp	x21, x22, [sp, #32]
   11bfc:	ldp	x23, x24, [sp, #48]
   11c00:	ldp	x19, x20, [sp, #16]
   11c04:	ldp	x29, x30, [sp], #64
   11c08:	ret
   11c0c:	mov	x2, #0x14                  	// #20
   11c10:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11c14:	add	x1, x1, #0x0
   11c18:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11c1c:	mov	x24, x0
   11c20:	mov	w2, #0x0                   	// #0
   11c24:	mov	x1, x24
   11c28:	mov	x0, x19
   11c2c:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
   11c30:	ldp	x1, x0, [x24, #16]
   11c34:	cmp	x1, x0
   11c38:	b.ne	11bc4 <_ZN4llvm11Interpreter3runEv+0x11c>  // b.any
   11c3c:	mov	x0, x24
   11c40:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11c44:	mov	x2, #0x1                   	// #1
   11c48:	add	x1, x1, #0x0
   11c4c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11c50:	b	11af0 <_ZN4llvm11Interpreter3runEv+0x48>
   11c54:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11c58:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11c5c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   11c60:	add	x3, x3, #0x0
   11c64:	add	x1, x1, #0x0
   11c68:	add	x0, x0, #0x0
   11c6c:	mov	w2, #0x8b                  	// #139
   11c70:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEE8CallbackMUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEE8CallbackMUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.eq	10 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x10>  // b.none
   8:	mov	w0, #0x0                   	// #0
   c:	ret
  10:	str	x1, [x0]
  14:	mov	w0, #0x0                   	// #0
  18:	ret

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE>:
   0:	mov	x2, x0
   4:	ldrb	w0, [x1, #9]
   8:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
   c:	ldrb	w0, [x2, #9]
  10:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
  14:	ldrb	w0, [x1, #8]
  18:	ldrb	w2, [x2, #8]
  1c:	cmp	w2, w0
  20:	cset	w0, ne  // ne = any
  24:	ret

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x2, x2, #0x10
  20:	str	x2, [x1], #168
  24:	ldr	x3, [x1, #16]
  28:	cbz	x3, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x38>
  2c:	mov	x0, x1
  30:	mov	w2, #0x3                   	// #3
  34:	blr	x3
  38:	ldp	x1, x0, [x19, #96]
  3c:	cmp	x1, x0
  40:	b.eq	48 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	ldr	x0, [x19, #64]
  4c:	add	x19, x19, #0x50
  50:	cmp	x0, x19
  54:	b.eq	64 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x64>  // b.none
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <free>
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 58 <_ZN4llvm11raw_ostreamlsEPKc+0x58>
  14:	mov	x20, x1
  18:	mov	x0, x1
  1c:	str	x21, [sp, #32]
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x21, x1
  34:	b.hi	68 <_ZN4llvm11raw_ostreamlsEPKc+0x68>  // b.pmore
  38:	cbz	x21, 84 <_ZN4llvm11raw_ostreamlsEPKc+0x84>
  3c:	mov	x2, x21
  40:	mov	x1, x20
  44:	bl	0 <memcpy>
  48:	ldr	x0, [x19, #24]
  4c:	add	x0, x0, x21
  50:	ldr	x21, [sp, #32]
  54:	str	x0, [x19, #24]
  58:	mov	x0, x19
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret
  68:	mov	x2, x21
  6c:	mov	x1, x20
  70:	mov	x0, x19
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  84:	mov	x0, x19
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZN4llvm5APInt15clearUnusedBitsEv:

0000000000000000 <_ZN4llvm5APInt15clearUnusedBitsEv>:
   0:	ldr	w1, [x0, #8]
   4:	mov	x2, #0xffffffffffffffff    	// #-1
   8:	ldr	x3, [x0]
   c:	neg	w4, w1
  10:	cmp	w1, #0x40
  14:	lsr	x2, x2, x4
  18:	b.hi	28 <_ZN4llvm5APInt15clearUnusedBitsEv+0x28>  // b.pmore
  1c:	and	x2, x3, x2
  20:	str	x2, [x0]
  24:	ret
  28:	mov	w1, w1
  2c:	add	x1, x1, #0x3f
  30:	lsr	x1, x1, #6
  34:	sub	w1, w1, #0x1
  38:	ldr	x4, [x3, x1, lsl #3]
  3c:	and	x2, x4, x2
  40:	str	x2, [x3, x1, lsl #3]
  44:	ret

Disassembly of section .text._ZN4llvm5APIntaSERKS0_:

0000000000000000 <_ZN4llvm5APIntaSERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w0, [x0, #8]
  14:	cmp	w0, #0x40
  18:	b.hi	28 <_ZN4llvm5APIntaSERKS0_+0x28>  // b.pmore
  1c:	ldr	w0, [x1, #8]
  20:	cmp	w0, #0x40
  24:	b.ls	40 <_ZN4llvm5APIntaSERKS0_+0x40>  // b.plast
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	ldr	x2, [x1]
  44:	neg	w3, w0
  48:	mov	x1, #0xffffffffffffffff    	// #-1
  4c:	str	w0, [x19, #8]
  50:	lsr	x0, x1, x3
  54:	and	x0, x0, x2
  58:	str	x0, [x19]
  5c:	mov	x0, x19
  60:	ldr	x19, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	ret

Disassembly of section .text._ZN4llvm5APIntaSEOS0_:

0000000000000000 <_ZN4llvm5APIntaSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	b.eq	58 <_ZN4llvm5APIntaSEOS0_+0x58>  // b.none
  14:	mov	x19, x0
  18:	ldr	w0, [x0, #8]
  1c:	mov	x20, x1
  20:	cmp	w0, #0x40
  24:	b.ls	34 <_ZN4llvm5APIntaSEOS0_+0x34>  // b.plast
  28:	ldr	x0, [x19]
  2c:	cbz	x0, 34 <_ZN4llvm5APIntaSEOS0_+0x34>
  30:	bl	0 <_ZdaPv>
  34:	ldr	x0, [x20]
  38:	str	x0, [x19]
  3c:	mov	x0, x19
  40:	ldr	w1, [x20, #8]
  44:	str	w1, [x19, #8]
  48:	str	wzr, [x20, #8]
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	adrp	x3, 0 <_ZN4llvm5APIntaSEOS0_>
  5c:	adrp	x1, 0 <_ZN4llvm5APIntaSEOS0_>
  60:	adrp	x0, 0 <_ZN4llvm5APIntaSEOS0_>
  64:	add	x3, x3, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x0, x0, #0x0
  70:	mov	w2, #0x302                 	// #770
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt12getZExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getZExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w20, [x0, #8]
  14:	cmp	w20, #0x40
  18:	b.ls	40 <_ZNK4llvm5APInt12getZExtValueEv+0x40>  // b.plast
  1c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  20:	sub	w20, w20, w0
  24:	cmp	w20, #0x40
  28:	b.hi	50 <_ZNK4llvm5APInt12getZExtValueEv+0x50>  // b.pmore
  2c:	ldr	x0, [x19]
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ldr	x0, [x0]
  3c:	ret
  40:	ldr	x0, [x0]
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
  50:	adrp	x3, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  54:	adrp	x1, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  58:	adrp	x0, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  5c:	add	x3, x3, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x0, x0, #0x0
  68:	mov	w2, #0x657                 	// #1623
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	ldrb	w2, [x1, #8]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	sub	w1, w2, #0x1
  18:	and	w1, w1, #0xff
  1c:	stp	x21, x22, [sp, #32]
  20:	cmp	w1, #0x5
  24:	mov	x21, x0
  28:	ccmp	w2, #0xf, #0x4, hi  // hi = pmore
  2c:	and	w0, w2, #0xfffffffd
  30:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  34:	b.ne	1e4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1e4>  // b.any
  38:	cmp	w2, #0x9
  3c:	b.eq	94 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x94>  // b.none
  40:	b.hi	a0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xa0>  // b.pmore
  44:	cmp	w2, #0x4
  48:	b.eq	14c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x14c>  // b.none
  4c:	b.ls	84 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x84>  // b.plast
  50:	cmp	w2, #0x6
  54:	b.ls	134 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x134>  // b.plast
  58:	cmp	w2, #0x7
  5c:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  60:	mov	w1, #0x0                   	// #0
  64:	mov	x0, x21
  68:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
  6c:	lsl	w0, w0, #3
  70:	mov	x1, #0x0                   	// #0
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	cmp	w2, #0x2
  88:	b.eq	140 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x140>  // b.none
  8c:	cmp	w2, #0x3
  90:	b.ne	f4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xf4>  // b.any
  94:	mov	x0, #0x40                  	// #64
  98:	mov	x1, #0x0                   	// #0
  9c:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
  a0:	cmp	w2, #0xe
  a4:	b.eq	168 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x168>  // b.none
  a8:	b.ls	108 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x108>  // b.plast
  ac:	cmp	w2, #0xf
  b0:	b.eq	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>  // b.none
  b4:	cmp	w2, #0x10
  b8:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  bc:	ldr	x20, [x19, #32]
  c0:	mov	x0, #0xffffffff            	// #4294967295
  c4:	cmp	x20, x0
  c8:	b.hi	250 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x250>  // b.pmore
  cc:	ldr	x1, [x19, #24]
  d0:	mov	x0, x21
  d4:	ldrb	w19, [x19, #40]
  d8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  dc:	tst	w1, #0xff
  e0:	b.ne	294 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x294>  // b.any
  e4:	mov	x1, #0x0                   	// #0
  e8:	mul	x0, x20, x0
  ec:	bfxil	x1, x19, #0, #8
  f0:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
  f4:	cmp	w2, #0x1
  f8:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  fc:	mov	x0, #0x10                  	// #16
 100:	mov	x1, #0x0                   	// #0
 104:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 108:	cmp	w2, #0xb
 10c:	b.eq	158 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x158>  // b.none
 110:	cmp	w2, #0xd
 114:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
 118:	mov	x1, x19
 11c:	mov	x0, x21
 120:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 124:	ldr	x0, [x0]
 128:	mov	x1, #0x0                   	// #0
 12c:	lsl	x0, x0, #3
 130:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 134:	mov	x0, #0x80                  	// #128
 138:	mov	x1, #0x0                   	// #0
 13c:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 140:	mov	x0, #0x20                  	// #32
 144:	mov	x1, #0x0                   	// #0
 148:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 14c:	mov	x0, #0x50                  	// #80
 150:	mov	x1, #0x0                   	// #0
 154:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 158:	ldr	w0, [x19, #8]
 15c:	mov	x1, #0x0                   	// #0
 160:	lsr	w0, w0, #8
 164:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 168:	ldr	x22, [x19, #24]
 16c:	mov	x0, x21
 170:	str	x23, [sp, #48]
 174:	mov	x1, x22
 178:	ldr	x23, [x19, #32]
 17c:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 180:	add	x19, x0, #0x7
 184:	and	w20, w1, #0xff
 188:	mov	x0, x21
 18c:	mov	x1, x22
 190:	lsr	x19, x19, #3
 194:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 198:	mov	w2, w0
 19c:	cbz	w0, 274 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x274>
 1a0:	sub	x0, x19, #0x1
 1a4:	mov	x1, #0x0                   	// #0
 1a8:	add	x0, x0, x2
 1ac:	bfxil	x1, x20, #0, #8
 1b0:	udiv	x0, x0, x2
 1b4:	mul	x0, x0, x2
 1b8:	mul	x0, x0, x23
 1bc:	ldr	x23, [sp, #48]
 1c0:	lsl	x0, x0, #3
 1c4:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 1c8:	ldr	w1, [x19, #8]
 1cc:	mov	x0, x21
 1d0:	lsr	w1, w1, #8
 1d4:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 1d8:	mov	x1, #0x0                   	// #0
 1dc:	lsl	w0, w0, #3
 1e0:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 1e4:	sub	w0, w2, #0xd
 1e8:	cmp	w0, #0x1
 1ec:	ccmp	w2, #0x10, #0x4, hi  // hi = pmore
 1f0:	b.ne	210 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x210>  // b.any
 1f4:	mov	x0, x19
 1f8:	mov	x1, #0x0                   	// #0
 1fc:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 200:	tst	w0, #0xff
 204:	b.eq	210 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x210>  // b.none
 208:	ldrb	w2, [x19, #8]
 20c:	b	38 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x38>
 210:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 214:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 218:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 21c:	add	x3, x3, #0x0
 220:	add	x1, x1, #0x0
 224:	add	x0, x0, #0x0
 228:	mov	w2, #0x271                 	// #625
 22c:	str	x23, [sp, #48]
 230:	bl	0 <__assert_fail>
 234:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 238:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 23c:	add	x1, x1, #0x0
 240:	add	x0, x0, #0x0
 244:	mov	w2, #0x298                 	// #664
 248:	str	x23, [sp, #48]
 24c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 250:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 254:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 258:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 25c:	add	x3, x3, #0x0
 260:	add	x1, x1, #0x0
 264:	add	x0, x0, #0x0
 268:	mov	w2, #0x220                 	// #544
 26c:	str	x23, [sp, #48]
 270:	bl	0 <__assert_fail>
 274:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 278:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 27c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 280:	add	x3, x3, #0x0
 284:	add	x1, x1, #0x0
 288:	add	x0, x0, #0x0
 28c:	mov	w2, #0xc7                  	// #199
 290:	bl	0 <__assert_fail>
 294:	str	x23, [sp, #48]
 298:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>

Disassembly of section .text._ZN4llvm12GenericValueD2Ev:

0000000000000000 <_ZN4llvm12GenericValueD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x20, [x0, #24]
  14:	str	x21, [sp, #32]
  18:	ldr	x21, [x0, #32]
  1c:	cmp	x20, x21
  20:	b.eq	40 <_ZN4llvm12GenericValueD1Ev+0x40>  // b.none
  24:	nop
  28:	mov	x0, x20
  2c:	add	x20, x20, #0x30
  30:	bl	0 <_ZN4llvm12GenericValueD1Ev>
  34:	cmp	x21, x20
  38:	b.ne	28 <_ZN4llvm12GenericValueD1Ev+0x28>  // b.any
  3c:	ldr	x21, [x19, #24]
  40:	cbz	x21, 4c <_ZN4llvm12GenericValueD1Ev+0x4c>
  44:	mov	x0, x21
  48:	bl	0 <_ZdlPv>
  4c:	ldr	w0, [x19, #16]
  50:	cmp	w0, #0x40
  54:	b.ls	70 <_ZN4llvm12GenericValueD1Ev+0x70>  // b.plast
  58:	ldr	x0, [x19, #8]
  5c:	cbz	x0, 70 <_ZN4llvm12GenericValueD1Ev+0x70>
  60:	ldp	x19, x20, [sp, #16]
  64:	ldr	x21, [sp, #32]
  68:	ldp	x29, x30, [sp], #48
  6c:	b	0 <_ZdaPv>
  70:	ldp	x19, x20, [sp, #16]
  74:	ldr	x21, [sp, #32]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret

Disassembly of section .text._ZNK4llvm12ConstantExpr10getOperandEj:

0000000000000000 <_ZNK4llvm12ConstantExpr10getOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #20]
   c:	ubfx	x2, x2, #0, #28
  10:	cmp	w1, w2
  14:	b.cs	44 <_ZNK4llvm12ConstantExpr10getOperandEj+0x44>  // b.hs, b.nlast
  18:	mov	w1, w1
  1c:	mov	w2, w2
  20:	sub	x1, x1, x2
  24:	add	x1, x1, x1, lsl #1
  28:	ldr	x0, [x0, x1, lsl #3]
  2c:	cbz	x0, 3c <_ZNK4llvm12ConstantExpr10getOperandEj+0x3c>
  30:	ldrb	w1, [x0, #16]
  34:	cmp	w1, #0x10
  38:	b.hi	64 <_ZNK4llvm12ConstantExpr10getOperandEj+0x64>  // b.pmore
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  48:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  4c:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  50:	add	x3, x3, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x0, x0, #0x0
  5c:	mov	w2, #0x4fa                 	// #1274
  60:	bl	0 <__assert_fail>
  64:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  68:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  6c:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  70:	add	x3, x3, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x0, x0, #0x0
  7c:	mov	w2, #0x134                 	// #308
  80:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12GenericValueC2ERKS0_:

0000000000000000 <_ZN4llvm12GenericValueC1ERKS0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x22, x0
  18:	stp	x23, x24, [sp, #48]
  1c:	ldr	x2, [x1], #8
  20:	str	x2, [x0], #8
  24:	ldr	w2, [x1, #8]
  28:	str	w2, [x0, #8]
  2c:	cmp	w2, #0x40
  30:	b.hi	10c <_ZN4llvm12GenericValueC1ERKS0_+0x10c>  // b.pmore
  34:	ldr	x0, [x19, #8]
  38:	str	x0, [x22, #8]
  3c:	ldp	x0, x21, [x19, #24]
  40:	mov	x23, x22
  44:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  48:	mov	x20, #0x0                   	// #0
  4c:	movk	x1, #0xaaab
  50:	stp	xzr, xzr, [x23, #24]!
  54:	sub	x21, x21, x0
  58:	str	xzr, [x23, #16]
  5c:	asr	x0, x21, #4
  60:	mul	x0, x0, x1
  64:	cbz	x0, 84 <_ZN4llvm12GenericValueC1ERKS0_+0x84>
  68:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  6c:	movk	x1, #0x2aa, lsl #48
  70:	cmp	x0, x1
  74:	b.hi	114 <_ZN4llvm12GenericValueC1ERKS0_+0x114>  // b.pmore
  78:	mov	x0, x21
  7c:	bl	0 <_Znwm>
  80:	mov	x20, x0
  84:	dup	v0.2d, x20
  88:	add	x21, x20, x21
  8c:	stur	q0, [x22, #24]
  90:	str	x21, [x23, #16]
  94:	ldp	x24, x19, [x19, #24]
  98:	cmp	x24, x19
  9c:	b.eq	f4 <_ZN4llvm12GenericValueC1ERKS0_+0xf4>  // b.none
  a0:	mov	x21, x24
  a4:	mov	x22, x20
  a8:	mov	x1, x21
  ac:	mov	x0, x22
  b0:	add	x21, x21, #0x30
  b4:	bl	0 <_ZN4llvm12GenericValueC1ERKS0_>
  b8:	cmp	x19, x21
  bc:	add	x22, x22, #0x30
  c0:	b.ne	a8 <_ZN4llvm12GenericValueC1ERKS0_+0xa8>  // b.any
  c4:	sub	x1, x19, #0x30
  c8:	mov	x19, #0xaaab                	// #43691
  cc:	sub	x1, x1, x24
  d0:	movk	x19, #0xaaaa, lsl #16
  d4:	movk	x19, #0xaaaa, lsl #32
  d8:	lsr	x1, x1, #4
  dc:	movk	x19, #0xaaa, lsl #48
  e0:	mul	x1, x1, x19
  e4:	and	x1, x1, #0xfffffffffffffff
  e8:	add	x1, x1, #0x1
  ec:	add	x1, x1, x1, lsl #1
  f0:	add	x20, x20, x1, lsl #4
  f4:	ldp	x21, x22, [sp, #32]
  f8:	str	x20, [x23, #8]
  fc:	ldp	x19, x20, [sp, #16]
 100:	ldp	x23, x24, [sp, #48]
 104:	ldp	x29, x30, [sp], #64
 108:	ret
 10c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 110:	b	3c <_ZN4llvm12GenericValueC1ERKS0_+0x3c>
 114:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 20 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x20>
   c:	ldrb	w1, [x0, #8]
  10:	cmp	w1, #0x10
  14:	b.ne	40 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x40>  // b.any
  18:	ldp	x29, x30, [sp], #16
  1c:	ret
  20:	adrp	x3, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x1, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	adrp	x0, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x69                  	// #105
  3c:	bl	0 <__assert_fail>
  40:	adrp	x3, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  44:	adrp	x1, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  48:	adrp	x0, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  4c:	add	x3, x3, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x0, x0, #0x0
  58:	mov	w2, #0x108                 	// #264
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	ldp	x19, x22, [x0]
  14:	cmp	x19, x22
  18:	b.eq	88 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x88>  // b.none
  1c:	str	x23, [sp, #48]
  20:	mov	x23, x0
  24:	nop
  28:	ldp	x20, x21, [x19, #24]
  2c:	cmp	x20, x21
  30:	b.eq	50 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x50>  // b.none
  34:	nop
  38:	mov	x0, x20
  3c:	add	x20, x20, #0x30
  40:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>
  44:	cmp	x21, x20
  48:	b.ne	38 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x38>  // b.any
  4c:	ldr	x21, [x19, #24]
  50:	cbz	x21, 5c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x5c>
  54:	mov	x0, x21
  58:	bl	0 <_ZdlPv>
  5c:	ldr	w1, [x19, #16]
  60:	cmp	w1, #0x40
  64:	b.ls	74 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x74>  // b.plast
  68:	ldr	x0, [x19, #8]
  6c:	cbz	x0, 74 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x74>
  70:	bl	0 <_ZdaPv>
  74:	add	x19, x19, #0x30
  78:	cmp	x22, x19
  7c:	b.ne	28 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x28>  // b.any
  80:	ldr	x22, [x23]
  84:	ldr	x23, [sp, #48]
  88:	cbz	x22, a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0xa0>
  8c:	mov	x0, x22
  90:	ldp	x19, x20, [sp, #16]
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x29, x30, [sp], #64
  9c:	b	0 <_ZdlPv>
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x21, x22, [sp, #32]
  a8:	ldp	x29, x30, [sp], #64
  ac:	ret

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC2EPS7_:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	tst	x1, #0x7
   8:	mov	x29, sp
   c:	str	xzr, [x0]
  10:	b.ne	2c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_+0x2c>  // b.any
  14:	and	x2, x1, #0xfffffffffffffff9
  18:	orr	x2, x2, #0x2
  1c:	str	x2, [x0]
  20:	cbz	x1, 4c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_+0x4c>
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  30:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  34:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  38:	add	x3, x3, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x0, x0, #0x0
  44:	mov	w2, #0xb2                  	// #178
  48:	bl	0 <__assert_fail>
  4c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  50:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  54:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  58:	add	x3, x3, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x0, x0, #0x0
  64:	mov	w2, #0x3f                  	// #63
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA27_cNS0_12OptionHiddenENS0_4descEEEEDpRKT_:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC1IJA27_cNS0_12OptionHiddenENS0_4descEEEEDpRKT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x5, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
   8:	adrp	x4, 0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC1IJA27_cNS0_12OptionHiddenENS0_4descEEEEDpRKT_>
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	adrp	x0, 0 <_ZTVN4llvm2cl6parserIbEE>
  1c:	stp	x21, x22, [sp, #32]
  20:	adrp	x9, 0 <_ZN4llvm2cl15GeneralCategoryE>
  24:	adrp	x7, 0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC1IJA27_cNS0_12OptionHiddenENS0_4descEEEEDpRKT_>
  28:	ldr	x6, [x19, #8]
  2c:	adrp	x8, 0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC1IJA27_cNS0_12OptionHiddenENS0_4descEEEEDpRKT_>
  30:	ldr	x4, [x4]
  34:	and	x6, x6, #0x80000000
  38:	ldr	x0, [x0]
  3c:	stp	x6, xzr, [x19, #8]
  40:	add	x12, x19, #0x80
  44:	ldr	x6, [x5]
  48:	add	x14, x19, #0x50
  4c:	ldr	x9, [x9]
  50:	add	x5, x4, #0x10
  54:	ldr	x7, [x7]
  58:	add	x4, x0, #0x10
  5c:	ldr	x8, [x8]
  60:	add	x6, x6, #0x10
  64:	mov	x13, #0x1                   	// #1
  68:	mov	x10, #0x100000001           	// #4294967297
  6c:	str	x6, [x19]
  70:	mov	x22, x2
  74:	stp	xzr, xzr, [x19, #24]
  78:	mov	w2, #0x100                 	// #256
  7c:	mov	x20, x3
  80:	stp	xzr, xzr, [x19, #40]
  84:	mov	x21, x1
  88:	mov	x0, x1
  8c:	stp	xzr, x14, [x19, #56]
  90:	stp	x10, x9, [x19, #72]
  94:	stp	xzr, x12, [x19, #88]
  98:	stp	x12, x13, [x19, #104]
  9c:	str	wzr, [x19, #120]
  a0:	strb	wzr, [x19, #136]
  a4:	str	x5, [x19, #144]
  a8:	strh	w2, [x19, #152]
  ac:	str	x4, [x19, #160]
  b0:	stp	x8, x7, [x19, #184]
  b4:	bl	0 <strlen>
  b8:	mov	x2, x0
  bc:	mov	x1, x21
  c0:	mov	x0, x19
  c4:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
  c8:	ldrb	w1, [x19, #10]
  cc:	mov	x0, x19
  d0:	ldr	w3, [x22]
  d4:	ldr	x2, [x20]
  d8:	bfi	w1, w3, #5, #2
  dc:	strb	w1, [x19, #10]
  e0:	ldp	x21, x22, [sp, #32]
  e4:	str	x2, [x19, #32]
  e8:	ldr	x2, [x20, #8]
  ec:	str	x2, [x19, #40]
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x29, x30, [sp], #48
  f8:	b	0 <_ZN4llvm2cl6Option11addArgumentEv>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	cmp	x1, x0
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x0
  14:	b.eq	19c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x19c>  // b.none
  18:	stp	x25, x26, [sp, #64]
  1c:	mov	x25, x1
  20:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  24:	stp	x19, x20, [sp, #16]
  28:	movk	x1, #0xaaab
  2c:	stp	x23, x24, [sp, #48]
  30:	ldp	x19, x23, [x25]
  34:	ldr	x20, [x0]
  38:	ldr	x0, [x0, #16]
  3c:	sub	x22, x23, x19
  40:	sub	x0, x0, x20
  44:	asr	x26, x22, #4
  48:	asr	x0, x0, #4
  4c:	mul	x26, x26, x1
  50:	mul	x0, x0, x1
  54:	cmp	x0, x26
  58:	b.cc	1ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1ac>  // b.lo, b.ul, b.last
  5c:	stp	x27, x28, [sp, #80]
  60:	ldr	x28, [x21, #8]
  64:	sub	x0, x28, x20
  68:	asr	x24, x0, #4
  6c:	mul	x24, x24, x1
  70:	cmp	x26, x24
  74:	b.hi	354 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x354>  // b.pmore
  78:	cmp	x22, #0x0
  7c:	b.le	120 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x120>
  80:	add	x19, x19, #0x8
  84:	add	x23, x20, #0x8
  88:	mov	x24, #0xffffffffffffffff    	// #-1
  8c:	b	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xb8>
  90:	mov	x1, x19
  94:	mov	x0, x23
  98:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
  9c:	add	x1, x19, #0x10
  a0:	add	x0, x23, #0x10
  a4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
  a8:	add	x19, x19, #0x30
  ac:	add	x23, x23, #0x30
  b0:	subs	x26, x26, #0x1
  b4:	b.eq	10c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x10c>  // b.none
  b8:	ldur	x0, [x19, #-8]
  bc:	stur	x0, [x23, #-8]
  c0:	ldr	w0, [x23, #8]
  c4:	cmp	w0, #0x40
  c8:	b.hi	90 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x90>  // b.pmore
  cc:	ldr	w0, [x19, #8]
  d0:	cmp	w0, #0x40
  d4:	b.hi	90 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x90>  // b.pmore
  d8:	ldr	x2, [x19]
  dc:	neg	w1, w0
  e0:	str	w0, [x23, #8]
  e4:	lsr	x0, x24, x1
  e8:	and	x0, x0, x2
  ec:	str	x0, [x23]
  f0:	add	x1, x19, #0x10
  f4:	add	x0, x23, #0x10
  f8:	add	x19, x19, #0x30
  fc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 100:	add	x23, x23, #0x30
 104:	subs	x26, x26, #0x1
 108:	b.ne	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xb8>  // b.any
 10c:	cmp	x22, #0x0
 110:	mov	x0, #0x30                  	// #48
 114:	csel	x0, x22, x0, gt
 118:	ldr	x28, [x21, #8]
 11c:	add	x20, x20, x0
 120:	cmp	x20, x28
 124:	b.eq	180 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x180>  // b.none
 128:	ldp	x19, x23, [x20, #24]
 12c:	cmp	x19, x23
 130:	b.eq	150 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x150>  // b.none
 134:	nop
 138:	mov	x0, x19
 13c:	add	x19, x19, #0x30
 140:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 144:	cmp	x23, x19
 148:	b.ne	138 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x138>  // b.any
 14c:	ldr	x23, [x20, #24]
 150:	cbz	x23, 15c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x15c>
 154:	mov	x0, x23
 158:	bl	0 <_ZdlPv>
 15c:	ldr	w0, [x20, #16]
 160:	cmp	w0, #0x40
 164:	b.ls	174 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x174>  // b.plast
 168:	ldr	x0, [x20, #8]
 16c:	cbz	x0, 174 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x174>
 170:	bl	0 <_ZdaPv>
 174:	add	x20, x20, #0x30
 178:	cmp	x20, x28
 17c:	b.ne	128 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x128>  // b.any
 180:	ldr	x20, [x21]
 184:	add	x22, x20, x22
 188:	ldp	x27, x28, [sp, #80]
 18c:	ldp	x19, x20, [sp, #16]
 190:	ldp	x23, x24, [sp, #48]
 194:	ldp	x25, x26, [sp, #64]
 198:	str	x22, [x21, #8]
 19c:	mov	x0, x21
 1a0:	ldp	x21, x22, [sp, #32]
 1a4:	ldp	x29, x30, [sp], #112
 1a8:	ret
 1ac:	cbz	x26, 510 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x510>
 1b0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1b4:	movk	x0, #0x2aa, lsl #48
 1b8:	cmp	x26, x0
 1bc:	b.hi	528 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x528>  // b.pmore
 1c0:	mov	x0, x22
 1c4:	bl	0 <_Znwm>
 1c8:	str	x0, [sp, #104]
 1cc:	cmp	x19, x23
 1d0:	ldr	x26, [sp, #104]
 1d4:	b.eq	2cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2cc>  // b.none
 1d8:	stp	x27, x28, [sp, #80]
 1dc:	nop
 1e0:	ldr	x0, [x19]
 1e4:	str	x0, [x26]
 1e8:	ldr	w0, [x19, #16]
 1ec:	str	w0, [x26, #16]
 1f0:	cmp	w0, #0x40
 1f4:	b.hi	518 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x518>  // b.pmore
 1f8:	ldr	x0, [x19, #8]
 1fc:	str	x0, [x26, #8]
 200:	ldp	x0, x20, [x19, #24]
 204:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 208:	movk	x1, #0xaaab
 20c:	stp	xzr, xzr, [x26, #24]
 210:	mov	x28, #0x0                   	// #0
 214:	str	xzr, [x26, #40]
 218:	sub	x20, x20, x0
 21c:	asr	x0, x20, #4
 220:	mul	x0, x0, x1
 224:	cbz	x0, 244 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x244>
 228:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 22c:	movk	x1, #0x2aa, lsl #48
 230:	cmp	x0, x1
 234:	b.hi	52c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x52c>  // b.pmore
 238:	mov	x0, x20
 23c:	bl	0 <_Znwm>
 240:	mov	x28, x0
 244:	dup	v0.2d, x28
 248:	add	x20, x28, x20
 24c:	str	x20, [x26, #40]
 250:	stur	q0, [x26, #24]
 254:	ldp	x27, x20, [x19, #24]
 258:	cmp	x27, x20
 25c:	b.eq	2b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2b4>  // b.none
 260:	mov	x24, x27
 264:	mov	x25, x28
 268:	mov	x1, x24
 26c:	mov	x0, x25
 270:	add	x24, x24, #0x30
 274:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 278:	cmp	x20, x24
 27c:	add	x25, x25, #0x30
 280:	b.ne	268 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x268>  // b.any
 284:	sub	x1, x20, #0x30
 288:	mov	x0, #0xaaab                	// #43691
 28c:	sub	x1, x1, x27
 290:	movk	x0, #0xaaaa, lsl #16
 294:	movk	x0, #0xaaaa, lsl #32
 298:	lsr	x1, x1, #4
 29c:	movk	x0, #0xaaa, lsl #48
 2a0:	mul	x1, x1, x0
 2a4:	and	x1, x1, #0xfffffffffffffff
 2a8:	add	x1, x1, #0x1
 2ac:	add	x1, x1, x1, lsl #1
 2b0:	add	x28, x28, x1, lsl #4
 2b4:	str	x28, [x26, #32]
 2b8:	add	x19, x19, #0x30
 2bc:	cmp	x23, x19
 2c0:	add	x26, x26, #0x30
 2c4:	b.ne	1e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1e0>  // b.any
 2c8:	ldp	x27, x28, [sp, #80]
 2cc:	ldp	x19, x24, [x21]
 2d0:	cmp	x19, x24
 2d4:	b.eq	334 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x334>  // b.none
 2d8:	ldp	x20, x23, [x19, #24]
 2dc:	cmp	x20, x23
 2e0:	b.eq	300 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x300>  // b.none
 2e4:	nop
 2e8:	mov	x0, x20
 2ec:	add	x20, x20, #0x30
 2f0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 2f4:	cmp	x23, x20
 2f8:	b.ne	2e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2e8>  // b.any
 2fc:	ldr	x23, [x19, #24]
 300:	cbz	x23, 30c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x30c>
 304:	mov	x0, x23
 308:	bl	0 <_ZdlPv>
 30c:	ldr	w0, [x19, #16]
 310:	cmp	w0, #0x40
 314:	b.ls	324 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x324>  // b.plast
 318:	ldr	x0, [x19, #8]
 31c:	cbz	x0, 324 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x324>
 320:	bl	0 <_ZdaPv>
 324:	add	x19, x19, #0x30
 328:	cmp	x24, x19
 32c:	b.ne	2d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2d8>  // b.any
 330:	ldr	x24, [x21]
 334:	cbz	x24, 340 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x340>
 338:	mov	x0, x24
 33c:	bl	0 <_ZdlPv>
 340:	ldr	x0, [sp, #104]
 344:	str	x0, [x21]
 348:	add	x22, x0, x22
 34c:	str	x22, [x21, #16]
 350:	b	18c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x18c>
 354:	cmp	x0, #0x0
 358:	b.le	3f4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3f4>
 35c:	add	x20, x20, #0x8
 360:	add	x19, x19, #0x8
 364:	mov	x23, #0xffffffffffffffff    	// #-1
 368:	b	394 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x394>
 36c:	mov	x1, x19
 370:	mov	x0, x20
 374:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 378:	add	x1, x19, #0x10
 37c:	add	x0, x20, #0x10
 380:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 384:	add	x19, x19, #0x30
 388:	add	x20, x20, #0x30
 38c:	subs	x24, x24, #0x1
 390:	b.eq	3e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3e8>  // b.none
 394:	ldur	x0, [x19, #-8]
 398:	stur	x0, [x20, #-8]
 39c:	ldr	w0, [x20, #8]
 3a0:	cmp	w0, #0x40
 3a4:	b.hi	36c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x36c>  // b.pmore
 3a8:	ldr	w0, [x19, #8]
 3ac:	cmp	w0, #0x40
 3b0:	b.hi	36c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x36c>  // b.pmore
 3b4:	ldr	x2, [x19]
 3b8:	neg	w1, w0
 3bc:	str	w0, [x20, #8]
 3c0:	lsr	x0, x23, x1
 3c4:	and	x0, x0, x2
 3c8:	str	x0, [x20]
 3cc:	add	x1, x19, #0x10
 3d0:	add	x0, x20, #0x10
 3d4:	add	x19, x19, #0x30
 3d8:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 3dc:	add	x20, x20, #0x30
 3e0:	subs	x24, x24, #0x1
 3e4:	b.ne	394 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x394>  // b.any
 3e8:	ldp	x20, x28, [x21]
 3ec:	ldp	x19, x23, [x25]
 3f0:	sub	x0, x28, x20
 3f4:	add	x19, x19, x0
 3f8:	cmp	x19, x23
 3fc:	b.eq	184 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x184>  // b.none
 400:	ldr	x0, [x19]
 404:	str	x0, [x28]
 408:	ldr	w0, [x19, #16]
 40c:	str	w0, [x28, #16]
 410:	cmp	w0, #0x40
 414:	b.hi	500 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x500>  // b.pmore
 418:	ldr	x0, [x19, #8]
 41c:	str	x0, [x28, #8]
 420:	ldp	x0, x20, [x19, #24]
 424:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 428:	movk	x1, #0xaaab
 42c:	stp	xzr, xzr, [x28, #24]
 430:	mov	x27, #0x0                   	// #0
 434:	str	xzr, [x28, #40]
 438:	sub	x20, x20, x0
 43c:	asr	x0, x20, #4
 440:	mul	x0, x0, x1
 444:	cbz	x0, 464 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x464>
 448:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 44c:	movk	x1, #0x2aa, lsl #48
 450:	cmp	x0, x1
 454:	b.hi	52c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x52c>  // b.pmore
 458:	mov	x0, x20
 45c:	bl	0 <_Znwm>
 460:	mov	x27, x0
 464:	dup	v0.2d, x27
 468:	add	x20, x27, x20
 46c:	str	x20, [x28, #40]
 470:	stur	q0, [x28, #24]
 474:	ldp	x26, x20, [x19, #24]
 478:	cmp	x26, x20
 47c:	b.eq	4d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x4d4>  // b.none
 480:	mov	x24, x26
 484:	mov	x25, x27
 488:	mov	x1, x24
 48c:	mov	x0, x25
 490:	add	x24, x24, #0x30
 494:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 498:	cmp	x20, x24
 49c:	add	x25, x25, #0x30
 4a0:	b.ne	488 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x488>  // b.any
 4a4:	sub	x1, x20, #0x30
 4a8:	mov	x0, #0xaaab                	// #43691
 4ac:	sub	x1, x1, x26
 4b0:	movk	x0, #0xaaaa, lsl #16
 4b4:	movk	x0, #0xaaaa, lsl #32
 4b8:	lsr	x1, x1, #4
 4bc:	movk	x0, #0xaaa, lsl #48
 4c0:	mul	x1, x1, x0
 4c4:	and	x1, x1, #0xfffffffffffffff
 4c8:	add	x1, x1, #0x1
 4cc:	add	x1, x1, x1, lsl #1
 4d0:	add	x27, x27, x1, lsl #4
 4d4:	str	x27, [x28, #32]
 4d8:	add	x19, x19, #0x30
 4dc:	cmp	x19, x23
 4e0:	add	x28, x28, #0x30
 4e4:	b.eq	180 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x180>  // b.none
 4e8:	ldr	x0, [x19]
 4ec:	str	x0, [x28]
 4f0:	ldr	w0, [x19, #16]
 4f4:	str	w0, [x28, #16]
 4f8:	cmp	w0, #0x40
 4fc:	b.ls	418 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x418>  // b.plast
 500:	add	x1, x19, #0x8
 504:	add	x0, x28, #0x8
 508:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 50c:	b	420 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x420>
 510:	str	xzr, [sp, #104]
 514:	b	1cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1cc>
 518:	add	x1, x19, #0x8
 51c:	add	x0, x26, #0x8
 520:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 524:	b	200 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x200>
 528:	stp	x27, x28, [sp, #80]
 52c:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv:

0000000000000000 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	stp	x19, x20, [sp, #16]
  10:	and	x19, x0, #0xfffffffffffffff8
  14:	ubfx	x0, x0, #1, #2
  18:	cmp	x0, #0x1
  1c:	b.eq	1c0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x1c0>  // b.none
  20:	cmp	x0, #0x2
  24:	b.eq	c4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0xc4>  // b.none
  28:	cbz	x19, 414 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x414>
  2c:	ldrb	w0, [x19, #16]
  30:	cmp	w0, #0x1d
  34:	b.ne	41c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x41c>  // b.any
  38:	ldrsb	w0, [x19, #23]
  3c:	tbz	w0, #31, b0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0xb0>
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  48:	ldrsb	w1, [x19, #23]
  4c:	mov	x20, x0
  50:	tbz	w1, #31, a4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0xa4>
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  5c:	add	x0, x0, x1
  60:	sub	x0, x0, x20
  64:	asr	x0, x0, #4
  68:	cbz	w0, b0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0xb0>
  6c:	ldrsb	w0, [x19, #23]
  70:	stp	x21, x22, [sp, #32]
  74:	tbz	w0, #31, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldrsb	w1, [x19, #23]
  84:	mov	x20, x0
  88:	tbnz	w1, #31, 2e8 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x2e8>
  8c:	neg	x0, x20
  90:	asr	x0, x0, #4
  94:	cbz	w0, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
  98:	mov	x0, #0x0                   	// #0
  9c:	ldr	w0, [x0, #8]
  a0:	brk	#0x3e8
  a4:	neg	x0, x0
  a8:	asr	x0, x0, #4
  ac:	cbnz	w0, 380 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x380>
  b0:	mov	x0, #0xffffffffffffffb8    	// #-72
  b4:	add	x0, x19, x0
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	cbz	x19, 4ac <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x4ac>
  c8:	ldrb	w0, [x19, #16]
  cc:	cmp	w0, #0x23
  d0:	b.ne	474 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x474>  // b.any
  d4:	mov	x0, x19
  d8:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  dc:	ldrsb	w1, [x19, #23]
  e0:	mov	w2, #0x18                  	// #24
  e4:	mov	x20, #0xffffffffffffffe8    	// #-24
  e8:	umsubl	x20, w0, w2, x20
  ec:	tbz	w1, #31, 1b0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x1b0>
  f0:	mov	x0, x19
  f4:	stp	x21, x22, [sp, #32]
  f8:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  fc:	ldrsb	w1, [x19, #23]
 100:	mov	x21, x0
 104:	tbz	w1, #31, 388 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x388>
 108:	mov	x0, x19
 10c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 110:	add	x0, x0, x1
 114:	sub	x0, x0, x21
 118:	asr	x0, x0, #4
 11c:	cbz	w0, 394 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x394>
 120:	ldrsb	w0, [x19, #23]
 124:	tbz	w0, #31, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
 128:	mov	x0, x19
 12c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 130:	ldrsb	w1, [x19, #23]
 134:	mov	x21, x0
 138:	tbnz	w1, #31, 3a0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3a0>
 13c:	neg	x0, x0
 140:	asr	x0, x0, #4
 144:	cbnz	w0, 98 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x98>
 148:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 14c:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 150:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 154:	add	x3, x3, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x0, x0, #0x0
 160:	mov	w2, #0x6ed                 	// #1773
 164:	bl	0 <__assert_fail>
 168:	mov	x0, x19
 16c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 170:	add	x0, x0, x1
 174:	sub	x0, x0, x21
 178:	asr	x0, x0, #4
 17c:	cbz	w0, 3f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3f4>
 180:	ldrsb	w0, [x19, #23]
 184:	tbz	w0, #31, 278 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x278>
 188:	mov	x0, x19
 18c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 190:	add	x0, x0, x1
 194:	ldur	w0, [x0, #-4]
 198:	cmp	w0, w22
 19c:	b.cc	440 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x440>  // b.lo, b.ul, b.last
 1a0:	sub	w0, w0, w22
 1a4:	mov	w1, #0x18                  	// #24
 1a8:	ldp	x21, x22, [sp, #32]
 1ac:	umsubl	x20, w0, w1, x20
 1b0:	add	x0, x19, x20
 1b4:	ldp	x19, x20, [sp, #16]
 1b8:	ldp	x29, x30, [sp], #48
 1bc:	ret
 1c0:	cbz	x19, 488 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x488>
 1c4:	ldrb	w0, [x19, #16]
 1c8:	cmp	w0, #0x50
 1cc:	b.ne	460 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x460>  // b.any
 1d0:	ldrsb	w0, [x19, #23]
 1d4:	tbz	w0, #31, 290 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x290>
 1d8:	mov	x0, x19
 1dc:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 1e0:	ldrsb	w1, [x19, #23]
 1e4:	mov	x20, x0
 1e8:	tbz	w1, #31, 284 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x284>
 1ec:	mov	x0, x19
 1f0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 1f4:	add	x0, x0, x1
 1f8:	sub	x0, x0, x20
 1fc:	asr	x0, x0, #4
 200:	cbz	w0, 290 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x290>
 204:	ldrsb	w0, [x19, #23]
 208:	stp	x21, x22, [sp, #32]
 20c:	tbz	w0, #31, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
 210:	mov	x0, x19
 214:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 218:	ldrsb	w1, [x19, #23]
 21c:	mov	x20, x0
 220:	tbz	w1, #31, 8c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x8c>
 224:	mov	x0, x19
 228:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 22c:	add	x0, x0, x1
 230:	sub	x0, x0, x20
 234:	asr	x0, x0, #4
 238:	cbz	w0, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
 23c:	ldrsb	w0, [x19, #23]
 240:	tbz	w0, #31, 98 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x98>
 244:	mov	x0, x19
 248:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 24c:	ldrsb	w1, [x19, #23]
 250:	ldr	w21, [x0, #8]
 254:	tbz	w1, #31, 3f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3f4>
 258:	mov	x0, x19
 25c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 260:	ldrsb	w1, [x19, #23]
 264:	mov	x20, x0
 268:	tbnz	w1, #31, 298 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x298>
 26c:	neg	x0, x20
 270:	asr	x0, x0, #4
 274:	cbz	w0, 3f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3f4>
 278:	mov	x0, #0x0                   	// #0
 27c:	ldur	w0, [x0, #-4]
 280:	brk	#0x3e8
 284:	neg	x0, x0
 288:	asr	x0, x0, #4
 28c:	cbnz	w0, 380 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x380>
 290:	mov	x0, #0xffffffffffffffe8    	// #-24
 294:	b	b4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0xb4>
 298:	mov	x0, x19
 29c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 2a0:	add	x0, x0, x1
 2a4:	sub	x0, x0, x20
 2a8:	asr	x0, x0, #4
 2ac:	cbz	w0, 3f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3f4>
 2b0:	ldrsb	w0, [x19, #23]
 2b4:	tbz	w0, #31, 278 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x278>
 2b8:	mov	x0, x19
 2bc:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 2c0:	add	x0, x0, x1
 2c4:	ldur	w0, [x0, #-4]
 2c8:	cmp	w0, w21
 2cc:	b.cc	440 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x440>  // b.lo, b.ul, b.last
 2d0:	sub	w0, w0, w21
 2d4:	mov	w1, #0x18                  	// #24
 2d8:	mov	x2, #0xffffffffffffffe8    	// #-24
 2dc:	ldp	x21, x22, [sp, #32]
 2e0:	umsubl	x0, w0, w1, x2
 2e4:	b	b4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0xb4>
 2e8:	mov	x0, x19
 2ec:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 2f0:	add	x0, x0, x1
 2f4:	sub	x0, x0, x20
 2f8:	asr	x0, x0, #4
 2fc:	cbz	w0, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
 300:	ldrsb	w0, [x19, #23]
 304:	tbz	w0, #31, 98 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x98>
 308:	mov	x0, x19
 30c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 310:	ldrsb	w1, [x19, #23]
 314:	ldr	w21, [x0, #8]
 318:	tbz	w1, #31, 3f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3f4>
 31c:	mov	x0, x19
 320:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 324:	ldrsb	w1, [x19, #23]
 328:	mov	x20, x0
 32c:	tbz	w1, #31, 26c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x26c>
 330:	mov	x0, x19
 334:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 338:	add	x0, x0, x1
 33c:	sub	x0, x0, x20
 340:	asr	x0, x0, #4
 344:	cbz	w0, 3f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3f4>
 348:	ldrsb	w0, [x19, #23]
 34c:	tbz	w0, #31, 278 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x278>
 350:	mov	x0, x19
 354:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 358:	add	x0, x0, x1
 35c:	ldur	w0, [x0, #-4]
 360:	cmp	w0, w21
 364:	b.cc	440 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x440>  // b.lo, b.ul, b.last
 368:	sub	w0, w0, w21
 36c:	mov	w1, #0x18                  	// #24
 370:	mov	x2, #0xffffffffffffffb8    	// #-72
 374:	ldp	x21, x22, [sp, #32]
 378:	umsubl	x0, w0, w1, x2
 37c:	b	b4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0xb4>
 380:	stp	x21, x22, [sp, #32]
 384:	b	148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
 388:	neg	x0, x0
 38c:	asr	x0, x0, #4
 390:	cbnz	w0, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
 394:	add	x0, x19, x20
 398:	ldp	x21, x22, [sp, #32]
 39c:	b	1b4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x1b4>
 3a0:	mov	x0, x19
 3a4:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 3a8:	add	x0, x0, x1
 3ac:	sub	x0, x0, x21
 3b0:	asr	x0, x0, #4
 3b4:	cbz	w0, 148 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x148>
 3b8:	ldrsb	w0, [x19, #23]
 3bc:	tbz	w0, #31, 98 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x98>
 3c0:	mov	x0, x19
 3c4:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 3c8:	ldrsb	w1, [x19, #23]
 3cc:	ldr	w22, [x0, #8]
 3d0:	tbz	w1, #31, 3f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3f4>
 3d4:	mov	x0, x19
 3d8:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 3dc:	ldrsb	w1, [x19, #23]
 3e0:	mov	x21, x0
 3e4:	tbnz	w1, #31, 168 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x168>
 3e8:	neg	x0, x0
 3ec:	asr	x0, x0, #4
 3f0:	cbnz	w0, 278 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x278>
 3f4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 3f8:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 3fc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 400:	add	x3, x3, #0x0
 404:	add	x1, x1, #0x0
 408:	add	x0, x0, #0x0
 40c:	mov	w2, #0x6f3                 	// #1779
 410:	bl	0 <__assert_fail>
 414:	stp	x21, x22, [sp, #32]
 418:	bl	0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 41c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 420:	add	x3, x3, #0x0
 424:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 428:	stp	x21, x22, [sp, #32]
 42c:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 430:	add	x1, x1, #0x0
 434:	add	x0, x0, #0x0
 438:	mov	w2, #0x108                 	// #264
 43c:	bl	0 <__assert_fail>
 440:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 444:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 448:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 44c:	add	x3, x3, #0x0
 450:	add	x1, x1, #0x0
 454:	add	x0, x0, #0x0
 458:	mov	w2, #0x710                 	// #1808
 45c:	bl	0 <__assert_fail>
 460:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 464:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 468:	add	x3, x3, #0x0
 46c:	stp	x21, x22, [sp, #32]
 470:	b	42c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x42c>
 474:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 478:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 47c:	add	x3, x3, #0x0
 480:	stp	x21, x22, [sp, #32]
 484:	b	42c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x42c>
 488:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 48c:	add	x3, x3, #0x0
 490:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 494:	stp	x21, x22, [sp, #32]
 498:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 49c:	add	x1, x1, #0x0
 4a0:	add	x0, x0, #0x0
 4a4:	mov	w2, #0x69                  	// #105
 4a8:	bl	0 <__assert_fail>
 4ac:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 4b0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 4b4:	add	x3, x3, #0x0
 4b8:	stp	x21, x22, [sp, #32]
 4bc:	b	498 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x498>

Disassembly of section .text._ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	ldp	x24, x21, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x21, x24
  2c:	cmp	x3, x1, asr #3
  30:	b.eq	10c <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x10c>  // b.none
  34:	mov	x19, x0
  38:	mov	x22, x2
  3c:	asr	x0, x1, #3
  40:	sub	x26, x23, x24
  44:	cbz	x0, 104 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x104>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
  50:	lsl	x0, x0, #1
  54:	b.ls	dc <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xdc>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x20, x0
  64:	add	x25, x0, x25
  68:	ldr	x0, [x22]
  6c:	add	x22, x26, #0x8
  70:	str	x0, [x20, x26]
  74:	sub	x21, x21, x23
  78:	add	x22, x20, x22
  7c:	cmp	x26, #0x0
  80:	add	x27, x22, x21
  84:	b.gt	b8 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xb8>
  88:	cmp	x21, #0x0
  8c:	b.gt	ec <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xec>
  90:	cbnz	x24, d0 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xd0>
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x23, x24, [sp, #48]
  9c:	stp	x20, x27, [x19]
  a0:	str	x25, [x19, #16]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldr	x27, [sp, #80]
  b0:	ldp	x29, x30, [sp], #96
  b4:	ret
  b8:	mov	x2, x26
  bc:	mov	x1, x24
  c0:	mov	x0, x20
  c4:	bl	0 <memmove>
  c8:	cmp	x21, #0x0
  cc:	b.gt	ec <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xec>
  d0:	mov	x0, x24
  d4:	bl	0 <_ZdlPv>
  d8:	b	94 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x94>
  dc:	cbnz	x0, 118 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x118>
  e0:	mov	x25, #0x0                   	// #0
  e4:	mov	x20, #0x0                   	// #0
  e8:	b	68 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x68>
  ec:	mov	x2, x21
  f0:	mov	x1, x23
  f4:	mov	x0, x22
  f8:	bl	0 <memcpy>
  fc:	cbz	x24, 94 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x94>
 100:	b	d0 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xd0>
 104:	mov	x25, #0x8                   	// #8
 108:	b	58 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x58>
 10c:	adrp	x0, 0 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	cmp	x0, x3
 11c:	csel	x0, x0, x3, ls  // ls = plast
 120:	lsl	x25, x0, #3
 124:	b	58 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x58>

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>:
   0:	cbz	x1, 9c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x9c>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x1
  14:	str	x23, [sp, #48]
  18:	mov	x23, x0
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x0, x23
  24:	ldr	x1, [x21, #24]
  28:	mov	x20, x21
  2c:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  30:	ldp	x19, x22, [x21, #64]
  34:	ldr	x21, [x21, #16]
  38:	cmp	x19, x22
  3c:	b.eq	58 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x58>  // b.none
  40:	mov	x0, x19
  44:	add	x19, x19, #0x30
  48:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  4c:	cmp	x22, x19
  50:	b.ne	40 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x40>  // b.any
  54:	ldr	x22, [x20, #64]
  58:	cbz	x22, 64 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x64>
  5c:	mov	x0, x22
  60:	bl	0 <_ZdlPv>
  64:	ldr	w1, [x20, #56]
  68:	cmp	w1, #0x40
  6c:	b.ls	7c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x7c>  // b.plast
  70:	ldr	x0, [x20, #48]
  74:	cbz	x0, 7c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x7c>
  78:	bl	0 <_ZdaPv>
  7c:	mov	x0, x20
  80:	bl	0 <_ZdlPv>
  84:	cbnz	x21, 20 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x20>
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldp	x21, x22, [sp, #32]
  90:	ldr	x23, [sp, #48]
  94:	ldp	x29, x30, [sp], #64
  98:	ret
  9c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x3
  10:	stp	x21, x22, [sp, #32]
  14:	mov	w22, #0x1                   	// #1
  18:	stp	x23, x24, [sp, #48]
  1c:	mov	x23, x1
  20:	str	x25, [sp, #64]
  24:	mov	x25, x0
  28:	mov	x0, #0x58                  	// #88
  2c:	bl	0 <_Znwm>
  30:	ldr	x3, [x20]
  34:	mov	x1, x0
  38:	add	x24, x25, #0x8
  3c:	mov	x19, x0
  40:	cmp	x24, x23
  44:	ldr	x21, [x3]
  48:	str	x21, [x0, #32]
  4c:	stp	xzr, xzr, [x1, #64]!
  50:	str	xzr, [x1, #16]
  54:	stp	xzr, xzr, [x0, #40]
  58:	str	w22, [x0, #56]
  5c:	b.eq	160 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x160>  // b.none
  60:	mov	x20, x23
  64:	ldr	x23, [x23, #32]
  68:	cmp	x21, x23
  6c:	b.cs	e8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0xe8>  // b.hs, b.nlast
  70:	ldr	x22, [x25, #24]
  74:	mov	x0, x20
  78:	cmp	x22, x20
  7c:	b.eq	9c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x9c>  // b.none
  80:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  84:	ldr	x1, [x0, #32]
  88:	cmp	x1, x21
  8c:	b.cs	1dc <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x1dc>  // b.hs, b.nlast
  90:	ldr	x1, [x0, #24]
  94:	cbz	x1, 1b8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x1b8>
  98:	mov	x0, x20
  9c:	cmp	x0, #0x0
  a0:	cset	w1, ne  // ne = any
  a4:	cmp	x24, x20
  a8:	csinc	w0, w1, wzr, ne  // ne = any
  ac:	cbz	w0, 1cc <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x1cc>
  b0:	mov	x3, x24
  b4:	mov	x2, x20
  b8:	mov	x1, x19
  bc:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  c0:	ldr	x1, [x25, #40]
  c4:	mov	x0, x19
  c8:	ldp	x19, x20, [sp, #16]
  cc:	add	x1, x1, #0x1
  d0:	str	x1, [x25, #40]
  d4:	ldp	x21, x22, [sp, #32]
  d8:	ldp	x23, x24, [sp, #48]
  dc:	ldr	x25, [sp, #64]
  e0:	ldp	x29, x30, [sp], #80
  e4:	ret
  e8:	b.ls	134 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x134>  // b.plast
  ec:	ldr	x0, [x25, #32]
  f0:	cmp	x0, x20
  f4:	b.eq	244 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x244>  // b.none
  f8:	mov	x0, x20
  fc:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 100:	ldr	x1, [x0, #32]
 104:	cmp	x1, x21
 108:	b.ls	2b0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x2b0>  // b.plast
 10c:	ldr	x1, [x20, #24]
 110:	cbz	x1, 1d0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x1d0>
 114:	mov	x20, x0
 118:	mov	w0, w22
 11c:	b	b0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0xb0>
 120:	mov	x20, x22
 124:	cbnz	w0, 250 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x250>
 128:	cmp	x21, x2
 12c:	b.hi	240 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x240>  // b.pmore
 130:	mov	x20, x22
 134:	add	x0, x19, #0x28
 138:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_>
 13c:	mov	x0, x19
 140:	bl	0 <_ZdlPv>
 144:	mov	x0, x20
 148:	ldp	x19, x20, [sp, #16]
 14c:	ldp	x21, x22, [sp, #32]
 150:	ldp	x23, x24, [sp, #48]
 154:	ldr	x25, [sp, #64]
 158:	ldp	x29, x30, [sp], #80
 15c:	ret
 160:	ldr	x0, [x25, #40]
 164:	cbz	x0, 178 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x178>
 168:	ldr	x0, [x25, #32]
 16c:	ldr	x1, [x0, #32]
 170:	cmp	x1, x21
 174:	b.cc	1b8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x1b8>  // b.lo, b.ul, b.last
 178:	ldr	x22, [x25, #16]
 17c:	cbz	x22, 24c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x24c>
 180:	ldr	x2, [x22, #32]
 184:	mov	w0, #0x1                   	// #1
 188:	cmp	x2, x21
 18c:	b.ls	1ac <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x1ac>  // b.plast
 190:	ldr	x1, [x22, #16]
 194:	cbz	x1, 120 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x120>
 198:	mov	x22, x1
 19c:	mov	w0, #0x1                   	// #1
 1a0:	ldr	x2, [x22, #32]
 1a4:	cmp	x2, x21
 1a8:	b.hi	190 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x190>  // b.pmore
 1ac:	mov	w0, #0x0                   	// #0
 1b0:	ldr	x1, [x22, #24]
 1b4:	b	194 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x194>
 1b8:	mov	x20, x0
 1bc:	mov	w1, #0x0                   	// #0
 1c0:	cmp	x24, x20
 1c4:	csinc	w0, w1, wzr, ne  // ne = any
 1c8:	cbnz	w0, b0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0xb0>
 1cc:	ldr	x23, [x20, #32]
 1d0:	cmp	x23, x21
 1d4:	cset	w0, hi  // hi = pmore
 1d8:	b	b0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0xb0>
 1dc:	ldr	x20, [x25, #16]
 1e0:	cbz	x20, 28c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x28c>
 1e4:	ldr	x1, [x20, #32]
 1e8:	mov	w2, #0x1                   	// #1
 1ec:	cmp	x21, x1
 1f0:	b.cs	214 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x214>  // b.hs, b.nlast
 1f4:	nop
 1f8:	ldr	x0, [x20, #16]
 1fc:	cbz	x0, 274 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x274>
 200:	mov	x20, x0
 204:	mov	w2, #0x1                   	// #1
 208:	ldr	x1, [x20, #32]
 20c:	cmp	x21, x1
 210:	b.cc	1f8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x1f8>  // b.lo, b.ul, b.last
 214:	mov	w2, #0x0                   	// #0
 218:	ldr	x0, [x20, #24]
 21c:	b	1fc <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x1fc>
 220:	mov	x3, x20
 224:	cbz	w2, 27c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x27c>
 228:	ldr	x0, [x25, #24]
 22c:	cmp	x0, x20
 230:	b.ne	298 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x298>  // b.any
 234:	mov	x3, x20
 238:	mov	x20, x3
 23c:	nop
 240:	cbz	x20, 134 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x134>
 244:	mov	x0, #0x0                   	// #0
 248:	b	9c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x9c>
 24c:	mov	x22, x23
 250:	ldr	x0, [x25, #24]
 254:	cmp	x0, x22
 258:	b.eq	2f0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x2f0>  // b.none
 25c:	mov	x0, x22
 260:	mov	x20, x22
 264:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 268:	mov	x22, x0
 26c:	ldr	x2, [x0, #32]
 270:	b	128 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x128>
 274:	mov	x3, x20
 278:	cbnz	w2, 290 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x290>
 27c:	cmp	x21, x1
 280:	b.ls	134 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x134>  // b.plast
 284:	mov	x20, x3
 288:	b	240 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x240>
 28c:	mov	x20, x24
 290:	cmp	x22, x20
 294:	b.eq	2fc <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x2fc>  // b.none
 298:	mov	x0, x20
 29c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 2a0:	mov	x3, x20
 2a4:	mov	x20, x0
 2a8:	ldr	x1, [x0, #32]
 2ac:	b	27c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x27c>
 2b0:	ldr	x20, [x25, #16]
 2b4:	cbz	x20, 308 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x308>
 2b8:	ldr	x1, [x20, #32]
 2bc:	mov	w2, #0x1                   	// #1
 2c0:	cmp	x21, x1
 2c4:	b.cs	2e4 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x2e4>  // b.hs, b.nlast
 2c8:	ldr	x0, [x20, #16]
 2cc:	cbz	x0, 220 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x220>
 2d0:	mov	x20, x0
 2d4:	mov	w2, #0x1                   	// #1
 2d8:	ldr	x1, [x20, #32]
 2dc:	cmp	x21, x1
 2e0:	b.cc	2c8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x2c8>  // b.lo, b.ul, b.last
 2e4:	mov	w2, #0x0                   	// #0
 2e8:	ldr	x0, [x20, #24]
 2ec:	b	2cc <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x2cc>
 2f0:	mov	x20, x22
 2f4:	cbnz	x20, 244 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x244>
 2f8:	b	134 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x134>
 2fc:	mov	x3, x22
 300:	mov	x20, x3
 304:	b	240 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x240>
 308:	mov	x20, x24
 30c:	b	228 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x228>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>:
   0:	cbz	x1, 2e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2e0>
   4:	stp	x29, x30, [sp, #-128]!
   8:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   c:	movk	x4, #0xaaab
  10:	mov	x29, sp
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x0
  1c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  20:	ldp	x0, x3, [x0]
  24:	stp	x19, x20, [sp, #16]
  28:	mov	x20, x1
  2c:	ldr	x1, [x21, #16]
  30:	stp	x23, x24, [sp, #48]
  34:	movk	x2, #0x2aa, lsl #48
  38:	sub	x19, x3, x0
  3c:	sub	x0, x1, x3
  40:	asr	x24, x19, #4
  44:	asr	x0, x0, #4
  48:	mul	x1, x24, x4
  4c:	mul	x0, x0, x4
  50:	str	x1, [sp, #104]
  54:	sub	x1, x2, x1
  58:	cmp	x0, x20
  5c:	b.cs	280 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x280>  // b.hs, b.nlast
  60:	cmp	x1, x20
  64:	b.cc	2e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2e8>  // b.lo, b.ul, b.last
  68:	ldr	x0, [sp, #104]
  6c:	stp	x27, x28, [sp, #80]
  70:	cmp	x20, x0
  74:	csel	x23, x20, x0, cs  // cs = hs, nlast
  78:	add	x23, x0, x23
  7c:	cmp	x23, x2
  80:	csel	x23, x23, x2, ls  // ls = plast
  84:	add	x23, x23, x23, lsl #1
  88:	lsl	x0, x23, #4
  8c:	str	x0, [sp, #120]
  90:	bl	0 <_Znwm>
  94:	str	x0, [sp, #112]
  98:	movi	v0.4s, #0x0
  9c:	mov	x1, x20
  a0:	add	x0, x0, x19
  a4:	mov	w2, #0x1                   	// #1
  a8:	stp	wzr, wzr, [x0]
  ac:	subs	x1, x1, #0x1
  b0:	str	xzr, [x0, #8]
  b4:	add	x0, x0, #0x30
  b8:	stur	w2, [x0, #-32]
  bc:	stur	xzr, [x0, #-8]
  c0:	stur	q0, [x0, #-24]
  c4:	b.ne	a8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0xa8>  // b.any
  c8:	ldp	x27, x22, [x21]
  cc:	cmp	x27, x22
  d0:	b.eq	238 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x238>  // b.none
  d4:	ldr	x23, [sp, #112]
  d8:	stp	x25, x26, [sp, #64]
  dc:	nop
  e0:	ldr	x0, [x27]
  e4:	str	x0, [x23]
  e8:	ldr	w0, [x27, #16]
  ec:	str	w0, [x23, #16]
  f0:	cmp	w0, #0x40
  f4:	b.hi	2d0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2d0>  // b.pmore
  f8:	ldr	x0, [x27, #8]
  fc:	str	x0, [x23, #8]
 100:	ldp	x0, x19, [x27, #24]
 104:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 108:	movk	x1, #0xaaab
 10c:	stp	xzr, xzr, [x23, #24]
 110:	mov	x28, #0x0                   	// #0
 114:	str	xzr, [x23, #40]
 118:	sub	x19, x19, x0
 11c:	asr	x0, x19, #4
 120:	mul	x0, x0, x1
 124:	cbz	x0, 144 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x144>
 128:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 12c:	movk	x1, #0x2aa, lsl #48
 130:	cmp	x0, x1
 134:	b.hi	2e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2e4>  // b.pmore
 138:	mov	x0, x19
 13c:	bl	0 <_Znwm>
 140:	mov	x28, x0
 144:	dup	v0.2d, x28
 148:	add	x19, x28, x19
 14c:	str	x19, [x23, #40]
 150:	stur	q0, [x23, #24]
 154:	ldp	x24, x19, [x27, #24]
 158:	cmp	x24, x19
 15c:	b.eq	1b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x1b4>  // b.none
 160:	mov	x25, x24
 164:	mov	x26, x28
 168:	mov	x1, x25
 16c:	mov	x0, x26
 170:	add	x25, x25, #0x30
 174:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
 178:	cmp	x19, x25
 17c:	add	x26, x26, #0x30
 180:	b.ne	168 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x168>  // b.any
 184:	sub	x1, x19, #0x30
 188:	mov	x0, #0xaaab                	// #43691
 18c:	sub	x1, x1, x24
 190:	movk	x0, #0xaaaa, lsl #16
 194:	movk	x0, #0xaaaa, lsl #32
 198:	lsr	x1, x1, #4
 19c:	movk	x0, #0xaaa, lsl #48
 1a0:	mul	x1, x1, x0
 1a4:	and	x1, x1, #0xfffffffffffffff
 1a8:	add	x1, x1, #0x1
 1ac:	add	x1, x1, x1, lsl #1
 1b0:	add	x28, x28, x1, lsl #4
 1b4:	str	x28, [x23, #32]
 1b8:	add	x27, x27, #0x30
 1bc:	cmp	x22, x27
 1c0:	add	x23, x23, #0x30
 1c4:	b.ne	e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0xe0>  // b.any
 1c8:	ldp	x19, x22, [x21]
 1cc:	cmp	x19, x22
 1d0:	b.eq	2fc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2fc>  // b.none
 1d4:	nop
 1d8:	ldp	x25, x26, [x19, #24]
 1dc:	cmp	x25, x26
 1e0:	b.eq	200 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x200>  // b.none
 1e4:	nop
 1e8:	mov	x0, x25
 1ec:	add	x25, x25, #0x30
 1f0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
 1f4:	cmp	x26, x25
 1f8:	b.ne	1e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x1e8>  // b.any
 1fc:	ldr	x26, [x19, #24]
 200:	cbz	x26, 20c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x20c>
 204:	mov	x0, x26
 208:	bl	0 <_ZdlPv>
 20c:	ldr	w0, [x19, #16]
 210:	cmp	w0, #0x40
 214:	b.ls	224 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x224>  // b.plast
 218:	ldr	x0, [x19, #8]
 21c:	cbz	x0, 224 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x224>
 220:	bl	0 <_ZdaPv>
 224:	add	x19, x19, #0x30
 228:	cmp	x22, x19
 22c:	b.ne	1d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x1d8>  // b.any
 230:	ldp	x25, x26, [sp, #64]
 234:	ldr	x22, [x21]
 238:	cbz	x22, 244 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x244>
 23c:	mov	x0, x22
 240:	bl	0 <_ZdlPv>
 244:	ldr	x0, [sp, #104]
 248:	ldr	x1, [sp, #120]
 24c:	add	x20, x20, x0
 250:	ldr	x0, [sp, #112]
 254:	add	x20, x20, x20, lsl #1
 258:	add	x23, x0, x1
 25c:	str	x23, [x21, #16]
 260:	add	x27, x0, x20, lsl #4
 264:	stp	x0, x27, [x21]
 268:	ldp	x19, x20, [sp, #16]
 26c:	ldp	x21, x22, [sp, #32]
 270:	ldp	x23, x24, [sp, #48]
 274:	ldp	x27, x28, [sp, #80]
 278:	ldp	x29, x30, [sp], #128
 27c:	ret
 280:	movi	v0.4s, #0x0
 284:	mov	x0, x3
 288:	mov	x1, x20
 28c:	mov	w2, #0x1                   	// #1
 290:	stp	wzr, wzr, [x0]
 294:	subs	x1, x1, #0x1
 298:	str	xzr, [x0, #8]
 29c:	add	x0, x0, #0x30
 2a0:	stur	w2, [x0, #-32]
 2a4:	stur	xzr, [x0, #-8]
 2a8:	stur	q0, [x0, #-24]
 2ac:	b.ne	290 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x290>  // b.any
 2b0:	add	x20, x20, x20, lsl #1
 2b4:	ldp	x23, x24, [sp, #48]
 2b8:	add	x3, x3, x20, lsl #4
 2bc:	str	x3, [x21, #8]
 2c0:	ldp	x19, x20, [sp, #16]
 2c4:	ldp	x21, x22, [sp, #32]
 2c8:	ldp	x29, x30, [sp], #128
 2cc:	ret
 2d0:	add	x1, x27, #0x8
 2d4:	add	x0, x23, #0x8
 2d8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 2dc:	b	100 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x100>
 2e0:	ret
 2e4:	bl	0 <_ZSt17__throw_bad_allocv>
 2e8:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
 2ec:	add	x0, x0, #0x0
 2f0:	stp	x25, x26, [sp, #64]
 2f4:	stp	x27, x28, [sp, #80]
 2f8:	bl	0 <_ZSt20__throw_length_errorPKc>
 2fc:	ldp	x25, x26, [sp, #64]
 300:	cbnz	x22, 23c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x23c>
 304:	b	244 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x244>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   8:	movk	x3, #0xaaab
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	ldp	x22, x24, [x0]
  1c:	sub	x2, x24, x22
  20:	asr	x2, x2, #4
  24:	mul	x2, x2, x3
  28:	cmp	x1, x2
  2c:	b.hi	c0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0xc0>  // b.pmore
  30:	b.cs	b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0xb0>  // b.hs, b.nlast
  34:	add	x1, x1, x1, lsl #1
  38:	add	x22, x22, x1, lsl #4
  3c:	cmp	x22, x24
  40:	b.eq	b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0xb0>  // b.none
  44:	mov	x23, x0
  48:	stp	x19, x20, [sp, #16]
  4c:	mov	x19, x22
  50:	ldp	x20, x21, [x19, #24]
  54:	cmp	x20, x21
  58:	b.eq	78 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x78>  // b.none
  5c:	nop
  60:	mov	x0, x20
  64:	add	x20, x20, #0x30
  68:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm>
  6c:	cmp	x21, x20
  70:	b.ne	60 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x60>  // b.any
  74:	ldr	x21, [x19, #24]
  78:	cbz	x21, 84 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x84>
  7c:	mov	x0, x21
  80:	bl	0 <_ZdlPv>
  84:	ldr	w0, [x19, #16]
  88:	cmp	w0, #0x40
  8c:	b.ls	9c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x9c>  // b.plast
  90:	ldr	x0, [x19, #8]
  94:	cbz	x0, 9c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x9c>
  98:	bl	0 <_ZdaPv>
  9c:	add	x19, x19, #0x30
  a0:	cmp	x24, x19
  a4:	b.ne	50 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x50>  // b.any
  a8:	ldp	x19, x20, [sp, #16]
  ac:	str	x22, [x23, #8]
  b0:	ldp	x21, x22, [sp, #32]
  b4:	ldp	x23, x24, [sp, #48]
  b8:	ldp	x29, x30, [sp], #64
  bc:	ret
  c0:	ldp	x21, x22, [sp, #32]
  c4:	sub	x1, x1, x2
  c8:	ldp	x23, x24, [sp, #48]
  cc:	ldp	x29, x30, [sp], #64
  d0:	b	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	stp	x21, x22, [sp, #32]
  18:	ldp	x21, x0, [x0, #8]
  1c:	cmp	x21, x0
  20:	b.eq	80 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x80>  // b.none
  24:	mov	x2, x21
  28:	mov	x0, x1
  2c:	ldr	x4, [x1], #8
  30:	mov	x3, x21
  34:	str	x4, [x2], #8
  38:	ldr	w5, [x1, #8]
  3c:	str	w5, [x2, #8]
  40:	ldr	x4, [x19, #8]
  44:	str	x4, [x21, #8]
  48:	str	wzr, [x1, #8]
  4c:	ldr	q0, [x0, #24]!
  50:	ldp	x21, x22, [sp, #32]
  54:	ldr	x1, [x0, #16]
  58:	str	xzr, [x0, #16]
  5c:	stp	xzr, xzr, [x19, #24]
  60:	str	q0, [x3, #24]!
  64:	ldr	x0, [x20, #8]
  68:	str	x1, [x3, #16]
  6c:	add	x0, x0, #0x30
  70:	str	x0, [x20, #8]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x29, x30, [sp], #128
  7c:	ret
  80:	stp	x27, x28, [sp, #80]
  84:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  88:	movk	x1, #0xaaab
  8c:	ldr	x27, [x20]
  90:	stp	x23, x24, [sp, #48]
  94:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  98:	sub	x24, x21, x27
  9c:	movk	x0, #0x2aa, lsl #48
  a0:	asr	x22, x24, #4
  a4:	mul	x22, x22, x1
  a8:	cmp	x22, x0
  ac:	b.eq	32c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x32c>  // b.none
  b0:	cbz	x22, 314 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x314>
  b4:	lsl	x1, x22, #1
  b8:	str	x1, [sp, #120]
  bc:	cmp	x22, x22, lsl #1
  c0:	b.ls	2f0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2f0>  // b.plast
  c4:	mov	x0, #0x7fffffffffffffe0    	// #9223372036854775776
  c8:	str	x0, [sp, #120]
  cc:	bl	0 <_Znwm>
  d0:	str	x0, [sp, #112]
  d4:	mov	x1, x19
  d8:	mov	x0, x19
  dc:	ldr	x28, [sp, #112]
  e0:	cmp	x21, x27
  e4:	ldr	x4, [x1], #8
  e8:	add	x3, x28, x24
  ec:	ldr	q1, [x0, #24]!
  f0:	mov	x2, x3
  f4:	movi	v0.4s, #0x0
  f8:	str	x4, [x28, x24]
  fc:	ldr	w4, [x1, #8]
 100:	ldr	x5, [x19, #8]
 104:	str	x5, [x3, #8]
 108:	str	wzr, [x1, #8]
 10c:	str	w4, [x3, #16]
 110:	ldr	x1, [x0, #16]
 114:	str	xzr, [x0, #16]
 118:	str	q1, [x2, #24]!
 11c:	str	x1, [x2, #16]
 120:	stur	q0, [x19, #24]
 124:	b.eq	320 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x320>  // b.none
 128:	mov	x22, x27
 12c:	stp	x25, x26, [sp, #64]
 130:	str	q0, [sp, #96]
 134:	ldr	x0, [x22]
 138:	str	x0, [x28]
 13c:	ldr	w0, [x22, #16]
 140:	str	w0, [x28, #16]
 144:	cmp	w0, #0x40
 148:	b.hi	244 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x244>  // b.pmore
 14c:	nop
 150:	ldr	x0, [x22, #8]
 154:	str	x0, [x28, #8]
 158:	ldp	x0, x19, [x22, #24]
 15c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 160:	movk	x1, #0xaaab
 164:	str	xzr, [x28, #40]
 168:	ldr	q0, [sp, #96]
 16c:	mov	x23, #0x0                   	// #0
 170:	sub	x19, x19, x0
 174:	stur	q0, [x28, #24]
 178:	asr	x0, x19, #4
 17c:	mul	x0, x0, x1
 180:	cbz	x0, 1a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x1a0>
 184:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 188:	movk	x1, #0x2aa, lsl #48
 18c:	cmp	x0, x1
 190:	b.hi	328 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x328>  // b.pmore
 194:	mov	x0, x19
 198:	bl	0 <_Znwm>
 19c:	mov	x23, x0
 1a0:	dup	v0.2d, x23
 1a4:	add	x19, x23, x19
 1a8:	str	x19, [x28, #40]
 1ac:	stur	q0, [x28, #24]
 1b0:	ldp	x26, x19, [x22, #24]
 1b4:	cmp	x26, x19
 1b8:	b.eq	214 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x214>  // b.none
 1bc:	mov	x25, x26
 1c0:	mov	x24, x23
 1c4:	nop
 1c8:	mov	x1, x25
 1cc:	mov	x0, x24
 1d0:	add	x25, x25, #0x30
 1d4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
 1d8:	cmp	x19, x25
 1dc:	add	x24, x24, #0x30
 1e0:	b.ne	1c8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x1c8>  // b.any
 1e4:	sub	x1, x19, #0x30
 1e8:	mov	x0, #0xaaab                	// #43691
 1ec:	sub	x1, x1, x26
 1f0:	movk	x0, #0xaaaa, lsl #16
 1f4:	movk	x0, #0xaaaa, lsl #32
 1f8:	lsr	x1, x1, #4
 1fc:	movk	x0, #0xaaa, lsl #48
 200:	mul	x1, x1, x0
 204:	and	x1, x1, #0xfffffffffffffff
 208:	add	x1, x1, #0x1
 20c:	add	x1, x1, x1, lsl #1
 210:	add	x23, x23, x1, lsl #4
 214:	str	x23, [x28, #32]
 218:	add	x22, x22, #0x30
 21c:	cmp	x21, x22
 220:	add	x0, x28, #0x30
 224:	b.eq	254 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x254>  // b.none
 228:	mov	x28, x0
 22c:	ldr	x0, [x22]
 230:	str	x0, [x28]
 234:	ldr	w0, [x22, #16]
 238:	str	w0, [x28, #16]
 23c:	cmp	w0, #0x40
 240:	b.ls	150 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x150>  // b.plast
 244:	add	x1, x22, #0x8
 248:	add	x0, x28, #0x8
 24c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 250:	b	158 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x158>
 254:	add	x28, x28, #0x60
 258:	mov	x19, x27
 25c:	nop
 260:	ldp	x24, x25, [x19, #24]
 264:	cmp	x24, x25
 268:	b.eq	288 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x288>  // b.none
 26c:	nop
 270:	mov	x0, x24
 274:	add	x24, x24, #0x30
 278:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
 27c:	cmp	x25, x24
 280:	b.ne	270 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x270>  // b.any
 284:	ldr	x25, [x19, #24]
 288:	cbz	x25, 294 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x294>
 28c:	mov	x0, x25
 290:	bl	0 <_ZdlPv>
 294:	ldr	w0, [x19, #16]
 298:	cmp	w0, #0x40
 29c:	b.ls	2ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2ac>  // b.plast
 2a0:	ldr	x0, [x19, #8]
 2a4:	cbz	x0, 2ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2ac>
 2a8:	bl	0 <_ZdaPv>
 2ac:	add	x19, x19, #0x30
 2b0:	cmp	x21, x19
 2b4:	b.ne	260 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x260>  // b.any
 2b8:	ldp	x25, x26, [sp, #64]
 2bc:	cbz	x27, 2c8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2c8>
 2c0:	mov	x0, x27
 2c4:	bl	0 <_ZdlPv>
 2c8:	ldp	x0, x1, [sp, #112]
 2cc:	ldp	x23, x24, [sp, #48]
 2d0:	stp	x0, x28, [x20]
 2d4:	ldp	x27, x28, [sp, #80]
 2d8:	add	x22, x0, x1
 2dc:	str	x22, [x20, #16]
 2e0:	ldp	x19, x20, [sp, #16]
 2e4:	ldp	x21, x22, [sp, #32]
 2e8:	ldp	x29, x30, [sp], #128
 2ec:	ret
 2f0:	str	xzr, [sp, #112]
 2f4:	cbz	x1, d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0xd4>
 2f8:	cmp	x1, x0
 2fc:	mov	x2, x1
 300:	csel	x22, x2, x0, ls  // ls = plast
 304:	mov	x1, #0x30                  	// #48
 308:	mul	x0, x22, x1
 30c:	str	x0, [sp, #120]
 310:	b	cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0xcc>
 314:	mov	x0, #0x30                  	// #48
 318:	str	x0, [sp, #120]
 31c:	b	cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0xcc>
 320:	add	x28, x28, #0x30
 324:	b	2bc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2bc>
 328:	bl	0 <_ZSt17__throw_bad_allocv>
 32c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
 330:	add	x0, x0, #0x0
 334:	stp	x25, x26, [sp, #64]
 338:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   8:	movk	x4, #0xaaab
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x2
  18:	ldp	x2, x20, [x0]
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	x22, x1
  24:	stp	x23, x24, [sp, #48]
  28:	stp	x25, x26, [sp, #64]
  2c:	sub	x21, x20, x2
  30:	stp	x27, x28, [sp, #80]
  34:	asr	x21, x21, #4
  38:	str	x2, [sp, #96]
  3c:	str	x0, [sp, #120]
  40:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44:	mul	x21, x21, x4
  48:	movk	x0, #0x2aa, lsl #48
  4c:	cmp	x21, x0
  50:	b.eq	39c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x39c>  // b.none
  54:	mov	x27, x1
  58:	sub	x24, x1, x2
  5c:	cbz	x21, 370 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x370>
  60:	lsl	x1, x21, #1
  64:	str	x1, [sp, #112]
  68:	cmp	x21, x21, lsl #1
  6c:	b.ls	324 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x324>  // b.plast
  70:	mov	x0, #0x7fffffffffffffe0    	// #9223372036854775776
  74:	str	x0, [sp, #112]
  78:	bl	0 <_Znwm>
  7c:	str	x0, [sp, #104]
  80:	mov	x1, x19
  84:	ldr	x21, [sp, #104]
  88:	add	x0, x21, x24
  8c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  90:	ldr	x25, [sp, #96]
  94:	cmp	x22, x25
  98:	b.eq	348 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x348>  // b.none
  9c:	nop
  a0:	ldr	x0, [x25]
  a4:	str	x0, [x21]
  a8:	ldr	w0, [x25, #16]
  ac:	str	w0, [x21, #16]
  b0:	cmp	w0, #0x40
  b4:	b.hi	350 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x350>  // b.pmore
  b8:	ldr	x0, [x25, #8]
  bc:	str	x0, [x21, #8]
  c0:	ldp	x0, x19, [x25, #24]
  c4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c8:	movk	x1, #0xaaab
  cc:	stp	xzr, xzr, [x21, #24]
  d0:	mov	x28, #0x0                   	// #0
  d4:	str	xzr, [x21, #40]
  d8:	sub	x19, x19, x0
  dc:	asr	x0, x19, #4
  e0:	mul	x0, x0, x1
  e4:	cbz	x0, 104 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x104>
  e8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  ec:	movk	x1, #0x2aa, lsl #48
  f0:	cmp	x0, x1
  f4:	b.hi	37c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x37c>  // b.pmore
  f8:	mov	x0, x19
  fc:	bl	0 <_Znwm>
 100:	mov	x28, x0
 104:	dup	v0.2d, x28
 108:	add	x19, x28, x19
 10c:	str	x19, [x21, #40]
 110:	stur	q0, [x21, #24]
 114:	ldp	x26, x19, [x25, #24]
 118:	cmp	x26, x19
 11c:	b.eq	174 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x174>  // b.none
 120:	mov	x24, x26
 124:	mov	x23, x28
 128:	mov	x1, x24
 12c:	mov	x0, x23
 130:	add	x24, x24, #0x30
 134:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 138:	cmp	x19, x24
 13c:	add	x23, x23, #0x30
 140:	b.ne	128 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x128>  // b.any
 144:	sub	x1, x19, #0x30
 148:	mov	x0, #0xaaab                	// #43691
 14c:	sub	x1, x1, x26
 150:	movk	x0, #0xaaaa, lsl #16
 154:	movk	x0, #0xaaaa, lsl #32
 158:	lsr	x1, x1, #4
 15c:	movk	x0, #0xaaa, lsl #48
 160:	mul	x1, x1, x0
 164:	and	x1, x1, #0xfffffffffffffff
 168:	add	x1, x1, #0x1
 16c:	add	x1, x1, x1, lsl #1
 170:	add	x28, x28, x1, lsl #4
 174:	str	x28, [x21, #32]
 178:	add	x25, x25, #0x30
 17c:	cmp	x22, x25
 180:	add	x21, x21, #0x30
 184:	b.ne	a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xa0>  // b.any
 188:	add	x28, x21, #0x30
 18c:	cmp	x22, x20
 190:	b.eq	280 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x280>  // b.none
 194:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 198:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 19c:	movk	x22, #0xaaab
 1a0:	movk	x23, #0x2aa, lsl #48
 1a4:	nop
 1a8:	ldr	x0, [x27]
 1ac:	str	x0, [x28]
 1b0:	ldr	w0, [x27, #16]
 1b4:	str	w0, [x28, #16]
 1b8:	cmp	w0, #0x40
 1bc:	b.hi	360 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x360>  // b.pmore
 1c0:	ldr	x0, [x27, #8]
 1c4:	str	x0, [x28, #8]
 1c8:	ldp	x25, x19, [x27, #24]
 1cc:	stp	xzr, xzr, [x28, #24]
 1d0:	mov	x21, #0x0                   	// #0
 1d4:	str	xzr, [x28, #40]
 1d8:	sub	x24, x19, x25
 1dc:	asr	x0, x24, #4
 1e0:	mul	x0, x0, x22
 1e4:	cbz	x0, 200 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x200>
 1e8:	cmp	x0, x23
 1ec:	b.hi	37c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x37c>  // b.pmore
 1f0:	mov	x0, x24
 1f4:	bl	0 <_Znwm>
 1f8:	ldp	x25, x19, [x27, #24]
 1fc:	mov	x21, x0
 200:	dup	v0.2d, x21
 204:	add	x1, x21, x24
 208:	str	x1, [x28, #40]
 20c:	cmp	x25, x19
 210:	stur	q0, [x28, #24]
 214:	b.eq	26c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x26c>  // b.none
 218:	mov	x24, x25
 21c:	mov	x26, x21
 220:	mov	x1, x24
 224:	mov	x0, x26
 228:	add	x24, x24, #0x30
 22c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 230:	cmp	x19, x24
 234:	add	x26, x26, #0x30
 238:	b.ne	220 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x220>  // b.any
 23c:	sub	x1, x19, #0x30
 240:	mov	x0, #0xaaab                	// #43691
 244:	sub	x1, x1, x25
 248:	movk	x0, #0xaaaa, lsl #16
 24c:	movk	x0, #0xaaaa, lsl #32
 250:	lsr	x1, x1, #4
 254:	movk	x0, #0xaaa, lsl #48
 258:	mul	x1, x1, x0
 25c:	and	x1, x1, #0xfffffffffffffff
 260:	add	x1, x1, #0x1
 264:	add	x1, x1, x1, lsl #1
 268:	add	x21, x21, x1, lsl #4
 26c:	str	x21, [x28, #32]
 270:	add	x27, x27, #0x30
 274:	cmp	x27, x20
 278:	add	x28, x28, #0x30
 27c:	b.ne	1a8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1a8>  // b.any
 280:	ldr	x0, [sp, #96]
 284:	cmp	x0, x20
 288:	mov	x19, x0
 28c:	b.eq	2e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2e8>  // b.none
 290:	ldp	x22, x24, [x19, #24]
 294:	cmp	x22, x24
 298:	b.eq	2b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2b8>  // b.none
 29c:	nop
 2a0:	mov	x0, x22
 2a4:	add	x22, x22, #0x30
 2a8:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 2ac:	cmp	x24, x22
 2b0:	b.ne	2a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2a0>  // b.any
 2b4:	ldr	x24, [x19, #24]
 2b8:	cbz	x24, 2c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2c4>
 2bc:	mov	x0, x24
 2c0:	bl	0 <_ZdlPv>
 2c4:	ldr	w0, [x19, #16]
 2c8:	cmp	w0, #0x40
 2cc:	b.ls	2dc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2dc>  // b.plast
 2d0:	ldr	x0, [x19, #8]
 2d4:	cbz	x0, 2dc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2dc>
 2d8:	bl	0 <_ZdaPv>
 2dc:	add	x19, x19, #0x30
 2e0:	cmp	x19, x20
 2e4:	b.ne	290 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x290>  // b.any
 2e8:	ldr	x0, [sp, #96]
 2ec:	cbz	x0, 2f4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2f4>
 2f0:	bl	0 <_ZdlPv>
 2f4:	ldp	x1, x0, [sp, #104]
 2f8:	ldp	x19, x20, [sp, #16]
 2fc:	ldp	x23, x24, [sp, #48]
 300:	add	x21, x1, x0
 304:	ldr	x0, [sp, #120]
 308:	ldp	x25, x26, [sp, #64]
 30c:	stp	x1, x28, [x0]
 310:	str	x21, [x0, #16]
 314:	ldp	x21, x22, [sp, #32]
 318:	ldp	x27, x28, [sp, #80]
 31c:	ldp	x29, x30, [sp], #128
 320:	ret
 324:	cbnz	x1, 380 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x380>
 328:	str	xzr, [sp, #104]
 32c:	mov	x1, x19
 330:	ldr	x21, [sp, #104]
 334:	add	x0, x21, x24
 338:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 33c:	ldr	x25, [sp, #96]
 340:	cmp	x22, x25
 344:	b.ne	a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xa0>  // b.any
 348:	ldr	x21, [sp, #104]
 34c:	b	188 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x188>
 350:	add	x1, x25, #0x8
 354:	add	x0, x21, #0x8
 358:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 35c:	b	c0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xc0>
 360:	add	x1, x27, #0x8
 364:	add	x0, x28, #0x8
 368:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 36c:	b	1c8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1c8>
 370:	mov	x0, #0x30                  	// #48
 374:	str	x0, [sp, #112]
 378:	b	78 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x78>
 37c:	bl	0 <_ZSt17__throw_bad_allocv>
 380:	ldr	x2, [sp, #112]
 384:	mov	x1, #0x30                  	// #48
 388:	cmp	x2, x0
 38c:	csel	x21, x2, x0, ls  // ls = plast
 390:	mul	x0, x21, x1
 394:	str	x0, [sp, #112]
 398:	b	78 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x78>
 39c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 3a0:	add	x0, x0, #0x0
 3a4:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x3, #0xffffffffffffff      	// #72057594037927935
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	ldp	x24, x26, [x0]
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	x21, x1
  24:	str	x0, [sp, #120]
  28:	sub	x1, x26, x24
  2c:	cmp	x3, x1, asr #7
  30:	b.eq	2f0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2f0>  // b.none
  34:	asr	x0, x1, #7
  38:	sub	x20, x21, x24
  3c:	cbz	x0, 2d8 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2d8>
  40:	cmp	x0, x0, lsl #1
  44:	mov	x25, #0x7fffffffffffff80    	// #9223372036854775680
  48:	lsl	x0, x0, #1
  4c:	b.ls	2c8 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2c8>  // b.plast
  50:	mov	x0, x25
  54:	bl	0 <_Znwm>
  58:	add	x19, x0, #0x80
  5c:	add	x1, x0, x25
  60:	stp	x0, x1, [sp, #104]
  64:	cmp	x21, x24
  68:	ldr	x2, [sp, #104]
  6c:	movi	v0.4s, #0x0
  70:	add	x0, x2, x20
  74:	add	x1, x0, #0x28
  78:	str	q0, [x2, x20]
  7c:	stp	xzr, xzr, [x0, #16]
  80:	str	wzr, [x0, #40]
  84:	str	xzr, [x0, #48]
  88:	stp	x1, x1, [x1, #16]
  8c:	str	xzr, [x1, #32]
  90:	stp	q0, q0, [x0, #80]
  94:	str	q0, [x0, #112]
  98:	b.eq	1c4 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1c4>  // b.none
  9c:	mov	x20, x2
  a0:	mov	x19, x24
  a4:	stp	x27, x28, [sp, #80]
  a8:	add	x2, x20, #0x28
  ac:	ldr	q0, [x19]
  b0:	str	q0, [x20]
  b4:	ldr	x0, [x19, #16]
  b8:	ldr	x1, [x19, #48]
  bc:	str	x0, [x20, #16]
  c0:	ldr	x0, [x19, #24]
  c4:	str	x0, [x20, #24]
  c8:	cbz	x1, 2b8 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2b8>
  cc:	ldr	w3, [x19, #40]
  d0:	add	x0, x19, #0x28
  d4:	str	x1, [x20, #48]
  d8:	str	w3, [x20, #40]
  dc:	ldr	x3, [x19, #56]
  e0:	str	x3, [x20, #56]
  e4:	ldp	x4, x3, [x19, #64]
  e8:	str	x4, [x20, #64]
  ec:	str	x2, [x1, #8]
  f0:	str	x3, [x20, #72]
  f4:	stp	xzr, x0, [x19, #48]
  f8:	stp	x0, xzr, [x19, #64]
  fc:	add	x28, x19, #0x20
 100:	ldr	x0, [x19, #80]
 104:	str	x0, [x20, #80]
 108:	ldr	x0, [x19, #88]
 10c:	str	x0, [x20, #88]
 110:	ldr	x0, [x19, #96]
 114:	str	x0, [x20, #96]
 118:	ldr	x0, [x19, #104]
 11c:	str	x0, [x20, #104]
 120:	ldr	x0, [x19, #112]
 124:	str	x0, [x20, #112]
 128:	ldr	x0, [x19, #120]
 12c:	str	x0, [x20, #120]
 130:	ldr	x27, [x19, #48]
 134:	cbz	x27, 1a0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1a0>
 138:	ldr	x1, [x27, #24]
 13c:	mov	x0, x28
 140:	mov	x25, x27
 144:	bl	0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 148:	ldp	x22, x23, [x27, #64]
 14c:	ldr	x27, [x27, #16]
 150:	cmp	x22, x23
 154:	b.eq	170 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x170>  // b.none
 158:	mov	x0, x22
 15c:	add	x22, x22, #0x30
 160:	bl	0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 164:	cmp	x23, x22
 168:	b.ne	158 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x158>  // b.any
 16c:	ldr	x23, [x25, #64]
 170:	cbz	x23, 17c <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x17c>
 174:	mov	x0, x23
 178:	bl	0 <_ZdlPv>
 17c:	ldr	w0, [x25, #56]
 180:	cmp	w0, #0x40
 184:	b.ls	194 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x194>  // b.plast
 188:	ldr	x0, [x25, #48]
 18c:	cbz	x0, 194 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x194>
 190:	bl	0 <_ZdaPv>
 194:	mov	x0, x25
 198:	bl	0 <_ZdlPv>
 19c:	cbnz	x27, 138 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x138>
 1a0:	add	x19, x19, #0x80
 1a4:	add	x20, x20, #0x80
 1a8:	cmp	x21, x19
 1ac:	b.ne	a8 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xa8>  // b.any
 1b0:	ldp	x27, x28, [sp, #80]
 1b4:	sub	x19, x21, x24
 1b8:	ldr	x0, [sp, #104]
 1bc:	add	x19, x19, #0x80
 1c0:	add	x19, x0, x19
 1c4:	cmp	x21, x26
 1c8:	b.eq	280 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x280>  // b.none
 1cc:	mov	x2, x21
 1d0:	mov	x3, x19
 1d4:	b	228 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x228>
 1d8:	ldr	w5, [x2, #40]
 1dc:	add	x0, x2, #0x28
 1e0:	str	w5, [x3, #40]
 1e4:	ldr	x6, [x2, #56]
 1e8:	stp	x1, x6, [x3, #48]
 1ec:	ldr	x5, [x2, #64]
 1f0:	str	x5, [x3, #64]
 1f4:	str	x4, [x1, #8]
 1f8:	ldr	x1, [x2, #72]
 1fc:	stp	xzr, x0, [x2, #48]
 200:	ldp	q2, q1, [x2, #80]
 204:	stp	x0, xzr, [x2, #64]
 208:	add	x2, x2, #0x80
 20c:	ldur	q0, [x2, #-16]
 210:	str	x1, [x3, #72]
 214:	stp	q2, q1, [x3, #80]
 218:	cmp	x2, x26
 21c:	add	x3, x3, #0x80
 220:	stur	q0, [x3, #-16]
 224:	b.eq	278 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x278>  // b.none
 228:	ldr	q0, [x2]
 22c:	add	x4, x3, #0x28
 230:	ldr	x0, [x2, #16]
 234:	str	x0, [x3, #16]
 238:	ldr	x1, [x2, #48]
 23c:	str	q0, [x3]
 240:	ldr	x0, [x2, #24]
 244:	str	x0, [x3, #24]
 248:	cbnz	x1, 1d8 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1d8>
 24c:	ldp	q2, q1, [x2, #80]
 250:	str	wzr, [x3, #40]
 254:	ldr	q0, [x2, #112]
 258:	stp	xzr, x4, [x3, #48]
 25c:	add	x2, x2, #0x80
 260:	stp	x4, xzr, [x3, #64]
 264:	cmp	x2, x26
 268:	stp	q2, q1, [x3, #80]
 26c:	add	x3, x3, #0x80
 270:	stur	q0, [x3, #-16]
 274:	b.ne	228 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x228>  // b.any
 278:	sub	x2, x2, x21
 27c:	add	x19, x19, x2
 280:	cbz	x24, 28c <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x28c>
 284:	mov	x0, x24
 288:	bl	0 <_ZdlPv>
 28c:	ldr	x0, [sp, #120]
 290:	ldr	x1, [sp, #104]
 294:	ldp	x21, x22, [sp, #32]
 298:	ldp	x23, x24, [sp, #48]
 29c:	ldp	x25, x26, [sp, #64]
 2a0:	stp	x1, x19, [x0]
 2a4:	ldr	x1, [sp, #112]
 2a8:	ldp	x19, x20, [sp, #16]
 2ac:	str	x1, [x0, #16]
 2b0:	ldp	x29, x30, [sp], #128
 2b4:	ret
 2b8:	str	wzr, [x20, #40]
 2bc:	stp	xzr, x2, [x20, #48]
 2c0:	stp	x2, xzr, [x20, #64]
 2c4:	b	fc <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xfc>
 2c8:	cbnz	x0, 2e0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2e0>
 2cc:	mov	x19, #0x80                  	// #128
 2d0:	stp	xzr, xzr, [sp, #104]
 2d4:	b	64 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x64>
 2d8:	mov	x25, #0x80                  	// #128
 2dc:	b	50 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x50>
 2e0:	cmp	x0, x3
 2e4:	csel	x0, x0, x3, ls  // ls = plast
 2e8:	lsl	x25, x0, #7
 2ec:	b	50 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x50>
 2f0:	adrp	x0, 0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 2f4:	add	x0, x0, #0x0
 2f8:	stp	x27, x28, [sp, #80]
 2fc:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	sub	x0, x2, x1
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x20, x2
  1c:	stp	x23, x24, [sp, #48]
  20:	asr	x24, x0, #4
  24:	str	x0, [sp, #96]
  28:	ldr	x19, [x21]
  2c:	stp	x27, x28, [sp, #80]
  30:	mov	x27, x1
  34:	ldr	x0, [x21, #16]
  38:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  3c:	movk	x1, #0xaaab
  40:	sub	x0, x0, x19
  44:	mul	x24, x24, x1
  48:	asr	x0, x0, #4
  4c:	mul	x0, x0, x1
  50:	cmp	x24, x0
  54:	b.ls	218 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x218>  // b.plast
  58:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  5c:	movk	x0, #0x2aa, lsl #48
  60:	cmp	x24, x0
  64:	b.hi	544 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x544>  // b.pmore
  68:	str	xzr, [sp, #104]
  6c:	cbz	x24, 7c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x7c>
  70:	ldr	x0, [sp, #96]
  74:	bl	0 <_Znwm>
  78:	str	x0, [sp, #104]
  7c:	cmp	x27, x20
  80:	ldr	x28, [sp, #104]
  84:	b.eq	17c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x17c>  // b.none
  88:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  8c:	stp	x25, x26, [sp, #64]
  90:	movk	x23, #0xaaab
  94:	nop
  98:	ldr	x0, [x27]
  9c:	str	x0, [x28]
  a0:	ldr	w0, [x27, #16]
  a4:	str	w0, [x28, #16]
  a8:	cmp	w0, #0x40
  ac:	b.hi	3e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3e0>  // b.pmore
  b0:	ldr	x0, [x27, #8]
  b4:	str	x0, [x28, #8]
  b8:	ldp	x25, x19, [x27, #24]
  bc:	stp	xzr, xzr, [x28, #24]
  c0:	mov	x26, #0x0                   	// #0
  c4:	str	xzr, [x28, #40]
  c8:	sub	x22, x19, x25
  cc:	asr	x0, x22, #4
  d0:	mul	x0, x0, x23
  d4:	cbz	x0, f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xf8>
  d8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  dc:	movk	x1, #0x2aa, lsl #48
  e0:	cmp	x0, x1
  e4:	b.hi	540 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x540>  // b.pmore
  e8:	mov	x0, x22
  ec:	bl	0 <_Znwm>
  f0:	ldp	x25, x19, [x27, #24]
  f4:	mov	x26, x0
  f8:	dup	v0.2d, x26
  fc:	add	x1, x26, x22
 100:	str	x1, [x28, #40]
 104:	cmp	x19, x25
 108:	stur	q0, [x28, #24]
 10c:	b.eq	164 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x164>  // b.none
 110:	mov	x24, x25
 114:	mov	x22, x26
 118:	mov	x1, x24
 11c:	mov	x0, x22
 120:	add	x24, x24, #0x30
 124:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 128:	cmp	x19, x24
 12c:	add	x22, x22, #0x30
 130:	b.ne	118 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x118>  // b.any
 134:	sub	x3, x19, #0x30
 138:	mov	x0, #0xaaab                	// #43691
 13c:	sub	x3, x3, x25
 140:	movk	x0, #0xaaaa, lsl #16
 144:	movk	x0, #0xaaaa, lsl #32
 148:	lsr	x3, x3, #4
 14c:	movk	x0, #0xaaa, lsl #48
 150:	mul	x3, x3, x0
 154:	and	x3, x3, #0xfffffffffffffff
 158:	add	x3, x3, #0x1
 15c:	add	x3, x3, x3, lsl #1
 160:	add	x26, x26, x3, lsl #4
 164:	str	x26, [x28, #32]
 168:	add	x27, x27, #0x30
 16c:	cmp	x20, x27
 170:	add	x28, x28, #0x30
 174:	b.ne	98 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x98>  // b.any
 178:	ldp	x25, x26, [sp, #64]
 17c:	ldp	x19, x24, [x21]
 180:	cmp	x19, x24
 184:	b.eq	1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1e4>  // b.none
 188:	ldp	x20, x23, [x19, #24]
 18c:	cmp	x20, x23
 190:	b.eq	1b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1b0>  // b.none
 194:	nop
 198:	mov	x0, x20
 19c:	add	x20, x20, #0x30
 1a0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 1a4:	cmp	x23, x20
 1a8:	b.ne	198 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x198>  // b.any
 1ac:	ldr	x23, [x19, #24]
 1b0:	cbz	x23, 1bc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1bc>
 1b4:	mov	x0, x23
 1b8:	bl	0 <_ZdlPv>
 1bc:	ldr	w0, [x19, #16]
 1c0:	cmp	w0, #0x40
 1c4:	b.ls	1d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1d4>  // b.plast
 1c8:	ldr	x0, [x19, #8]
 1cc:	cbz	x0, 1d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1d4>
 1d0:	bl	0 <_ZdaPv>
 1d4:	add	x19, x19, #0x30
 1d8:	cmp	x24, x19
 1dc:	b.ne	188 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x188>  // b.any
 1e0:	ldr	x24, [x21]
 1e4:	cbz	x24, 1f0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1f0>
 1e8:	mov	x0, x24
 1ec:	bl	0 <_ZdlPv>
 1f0:	ldp	x1, x0, [sp, #96]
 1f4:	add	x22, x0, x1
 1f8:	stp	x0, x22, [x21]
 1fc:	str	x22, [x21, #16]
 200:	ldp	x19, x20, [sp, #16]
 204:	ldp	x21, x22, [sp, #32]
 208:	ldp	x23, x24, [sp, #48]
 20c:	ldp	x27, x28, [sp, #80]
 210:	ldp	x29, x30, [sp], #112
 214:	ret
 218:	stp	x25, x26, [sp, #64]
 21c:	ldr	x25, [x21, #8]
 220:	sub	x26, x25, x19
 224:	asr	x23, x26, #4
 228:	mul	x23, x23, x1
 22c:	cmp	x24, x23
 230:	b.ls	400 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x400>  // b.plast
 234:	cmp	x26, #0x0
 238:	add	x26, x27, x26
 23c:	b.le	2d0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x2d0>
 240:	add	x19, x19, #0x8
 244:	add	x27, x27, #0x8
 248:	mov	x22, #0xffffffffffffffff    	// #-1
 24c:	b	278 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x278>
 250:	mov	x1, x27
 254:	mov	x0, x19
 258:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 25c:	add	x1, x27, #0x10
 260:	add	x0, x19, #0x10
 264:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 268:	add	x27, x27, #0x30
 26c:	add	x19, x19, #0x30
 270:	subs	x23, x23, #0x1
 274:	b.eq	2cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x2cc>  // b.none
 278:	ldur	x0, [x27, #-8]
 27c:	stur	x0, [x19, #-8]
 280:	ldr	w0, [x19, #8]
 284:	cmp	w0, #0x40
 288:	b.hi	250 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x250>  // b.pmore
 28c:	ldr	w0, [x27, #8]
 290:	cmp	w0, #0x40
 294:	b.hi	250 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x250>  // b.pmore
 298:	ldr	x2, [x27]
 29c:	neg	w1, w0
 2a0:	str	w0, [x19, #8]
 2a4:	lsr	x0, x22, x1
 2a8:	and	x0, x0, x2
 2ac:	str	x0, [x19]
 2b0:	add	x1, x27, #0x10
 2b4:	add	x0, x19, #0x10
 2b8:	add	x27, x27, #0x30
 2bc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 2c0:	add	x19, x19, #0x30
 2c4:	subs	x23, x23, #0x1
 2c8:	b.ne	278 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x278>  // b.any
 2cc:	ldr	x25, [x21, #8]
 2d0:	cmp	x20, x26
 2d4:	b.eq	3c0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3c0>  // b.none
 2d8:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 2dc:	movk	x22, #0xaaab
 2e0:	ldr	x0, [x26]
 2e4:	str	x0, [x25]
 2e8:	ldr	w0, [x26, #16]
 2ec:	str	w0, [x25, #16]
 2f0:	cmp	w0, #0x40
 2f4:	b.hi	3f0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3f0>  // b.pmore
 2f8:	ldr	x0, [x26, #8]
 2fc:	str	x0, [x25, #8]
 300:	ldp	x0, x19, [x26, #24]
 304:	stp	xzr, xzr, [x25, #24]
 308:	mov	x27, #0x0                   	// #0
 30c:	str	xzr, [x25, #40]
 310:	sub	x19, x19, x0
 314:	asr	x0, x19, #4
 318:	mul	x0, x0, x22
 31c:	cbz	x0, 33c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x33c>
 320:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 324:	movk	x1, #0x2aa, lsl #48
 328:	cmp	x0, x1
 32c:	b.hi	540 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x540>  // b.pmore
 330:	mov	x0, x19
 334:	bl	0 <_Znwm>
 338:	mov	x27, x0
 33c:	dup	v0.2d, x27
 340:	add	x19, x27, x19
 344:	str	x19, [x25, #40]
 348:	stur	q0, [x25, #24]
 34c:	ldp	x24, x19, [x26, #24]
 350:	cmp	x24, x19
 354:	b.eq	3ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3ac>  // b.none
 358:	mov	x28, x24
 35c:	mov	x23, x27
 360:	mov	x1, x28
 364:	mov	x0, x23
 368:	add	x28, x28, #0x30
 36c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 370:	cmp	x19, x28
 374:	add	x23, x23, #0x30
 378:	b.ne	360 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x360>  // b.any
 37c:	sub	x1, x19, #0x30
 380:	mov	x0, #0xaaab                	// #43691
 384:	sub	x1, x1, x24
 388:	movk	x0, #0xaaaa, lsl #16
 38c:	movk	x0, #0xaaaa, lsl #32
 390:	lsr	x1, x1, #4
 394:	movk	x0, #0xaaa, lsl #48
 398:	mul	x1, x1, x0
 39c:	and	x1, x1, #0xfffffffffffffff
 3a0:	add	x1, x1, #0x1
 3a4:	add	x1, x1, x1, lsl #1
 3a8:	add	x27, x27, x1, lsl #4
 3ac:	str	x27, [x25, #32]
 3b0:	add	x26, x26, #0x30
 3b4:	cmp	x20, x26
 3b8:	add	x25, x25, #0x30
 3bc:	b.ne	2e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x2e0>  // b.any
 3c0:	str	x25, [x21, #8]
 3c4:	ldp	x19, x20, [sp, #16]
 3c8:	ldp	x21, x22, [sp, #32]
 3cc:	ldp	x23, x24, [sp, #48]
 3d0:	ldp	x25, x26, [sp, #64]
 3d4:	ldp	x27, x28, [sp, #80]
 3d8:	ldp	x29, x30, [sp], #112
 3dc:	ret
 3e0:	add	x1, x27, #0x8
 3e4:	add	x0, x28, #0x8
 3e8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 3ec:	b	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xb8>
 3f0:	add	x1, x26, #0x8
 3f4:	add	x0, x25, #0x8
 3f8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 3fc:	b	300 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x300>
 400:	ldr	x0, [sp, #96]
 404:	cmp	x0, #0x0
 408:	b.le	4b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x4b0>
 40c:	add	x27, x27, #0x8
 410:	add	x20, x19, #0x8
 414:	mov	x23, #0xffffffffffffffff    	// #-1
 418:	b	444 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x444>
 41c:	mov	x1, x27
 420:	mov	x0, x20
 424:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 428:	add	x1, x27, #0x10
 42c:	add	x0, x20, #0x10
 430:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 434:	add	x27, x27, #0x30
 438:	add	x20, x20, #0x30
 43c:	subs	x24, x24, #0x1
 440:	b.eq	498 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x498>  // b.none
 444:	ldur	x0, [x27, #-8]
 448:	stur	x0, [x20, #-8]
 44c:	ldr	w0, [x20, #8]
 450:	cmp	w0, #0x40
 454:	b.hi	41c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x41c>  // b.pmore
 458:	ldr	w0, [x27, #8]
 45c:	cmp	w0, #0x40
 460:	b.hi	41c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x41c>  // b.pmore
 464:	ldr	x2, [x27]
 468:	neg	w1, w0
 46c:	str	w0, [x20, #8]
 470:	lsr	x0, x23, x1
 474:	and	x0, x0, x2
 478:	str	x0, [x20]
 47c:	add	x1, x27, #0x10
 480:	add	x0, x20, #0x10
 484:	add	x27, x27, #0x30
 488:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 48c:	add	x20, x20, #0x30
 490:	subs	x24, x24, #0x1
 494:	b.ne	444 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x444>  // b.any
 498:	ldr	x1, [sp, #96]
 49c:	mov	x0, #0x30                  	// #48
 4a0:	ldr	x25, [x21, #8]
 4a4:	cmp	x1, #0x0
 4a8:	csel	x22, x1, x0, gt
 4ac:	add	x19, x19, x22
 4b0:	cmp	x19, x25
 4b4:	b.eq	538 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x538>  // b.none
 4b8:	mov	x23, x19
 4bc:	nop
 4c0:	ldp	x20, x22, [x23, #24]
 4c4:	cmp	x20, x22
 4c8:	b.eq	4e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x4e8>  // b.none
 4cc:	nop
 4d0:	mov	x0, x20
 4d4:	add	x20, x20, #0x30
 4d8:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 4dc:	cmp	x22, x20
 4e0:	b.ne	4d0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x4d0>  // b.any
 4e4:	ldr	x22, [x23, #24]
 4e8:	cbz	x22, 4f4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x4f4>
 4ec:	mov	x0, x22
 4f0:	bl	0 <_ZdlPv>
 4f4:	ldr	w0, [x23, #16]
 4f8:	cmp	w0, #0x40
 4fc:	b.ls	50c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x50c>  // b.plast
 500:	ldr	x0, [x23, #8]
 504:	cbz	x0, 50c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x50c>
 508:	bl	0 <_ZdaPv>
 50c:	add	x23, x23, #0x30
 510:	cmp	x23, x25
 514:	b.ne	4c0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x4c0>  // b.any
 518:	ldp	x25, x26, [sp, #64]
 51c:	str	x19, [x21, #8]
 520:	ldp	x19, x20, [sp, #16]
 524:	ldp	x21, x22, [sp, #32]
 528:	ldp	x23, x24, [sp, #48]
 52c:	ldp	x27, x28, [sp, #80]
 530:	ldp	x29, x30, [sp], #112
 534:	ret
 538:	ldp	x25, x26, [sp, #64]
 53c:	b	200 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x200>
 540:	bl	0 <_ZSt17__throw_bad_allocv>
 544:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 548:	add	x0, x0, #0x0
 54c:	stp	x25, x26, [sp, #64]
 550:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE:

0000000000000000 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x2, x1
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	ldur	x0, [x1, #-24]
  18:	cbz	x0, 74 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x74>
  1c:	ldrb	w3, [x0, #16]
  20:	cbnz	w3, 74 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x74>
  24:	ldr	w0, [x0, #36]
  28:	cmp	w0, #0xb0
  2c:	b.eq	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>  // b.none
  30:	b.hi	98 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x98>  // b.pmore
  34:	cmp	w0, #0x2b
  38:	b.eq	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>  // b.none
  3c:	b.ls	70 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x70>  // b.plast
  40:	cmp	w0, #0x2c
  44:	b.eq	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>  // b.none
  48:	cmp	w0, #0xae
  4c:	b.ne	ac <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xac>  // b.any
  50:	add	x0, sp, #0x28
  54:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  58:	ldr	x1, [sp, #40]
  5c:	mov	x0, x19
  60:	bl	11438 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	ret
  70:	cbnz	w0, cc <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xcc>
  74:	tst	x2, #0x7
  78:	b.ne	dc <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xdc>  // b.any
  7c:	and	x1, x2, #0xfffffffffffffff9
  80:	mov	x0, x19
  84:	orr	x1, x1, #0x2
  88:	bl	11438 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret
  98:	cmp	w0, #0x106
  9c:	b.eq	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>  // b.none
  a0:	b.ls	b4 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xb4>  // b.plast
  a4:	cmp	w0, #0x107
  a8:	b.eq	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>  // b.none
  ac:	mov	x1, x2
  b0:	b	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>
  b4:	cmp	w0, #0xb2
  b8:	b.eq	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>  // b.none
  bc:	cmp	w0, #0x105
  c0:	b.eq	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>  // b.none
  c4:	mov	x1, x2
  c8:	b	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>
  cc:	cmp	w0, #0x2a
  d0:	b.eq	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>  // b.none
  d4:	mov	x1, x2
  d8:	b	50 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x50>
  dc:	adrp	x3, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  e0:	adrp	x1, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  e4:	adrp	x0, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  e8:	add	x3, x3, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x0, x0, #0x0
  f4:	mov	w2, #0xb2                  	// #178
  f8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE:

0000000000000000 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w2, [x1, #16]
   c:	sub	w2, w2, #0x19
  10:	cmp	w2, #0x42
  14:	b.ls	30 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x30>  // b.plast
  18:	adrp	x1, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  1c:	adrp	x0, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x7a                  	// #122
  2c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  30:	adrp	x3, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  34:	add	x3, x3, #0x0
  38:	ldrb	w2, [x3, w2, uxtw]
  3c:	adr	x3, 48 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x48>
  40:	add	x2, x3, w2, sxtb #2
  44:	br	x2
  48:	ldp	x29, x30, [sp], #16
  4c:	b	8ea8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
  50:	mov	x0, x1
  54:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  58:	tst	x1, #0x7
  5c:	b.ne	1b4 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x1b4>  // b.any
  60:	ldp	x29, x30, [sp], #16
  64:	and	x1, x1, #0xfffffffffffffff9
  68:	orr	x1, x1, #0x4
  6c:	b	11438 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  70:	ldp	x29, x30, [sp], #16
  74:	b	668 <_ZN4llvm11Interpreter20visitUnreachableInstERNS_15UnreachableInstE>
  78:	tst	x1, #0x7
  7c:	b.ne	1b4 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x1b4>  // b.any
  80:	ldp	x29, x30, [sp], #16
  84:	and	x1, x1, #0xfffffffffffffff9
  88:	b	11438 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  8c:	ldp	x29, x30, [sp], #16
  90:	b	ba98 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE>
  94:	ldp	x29, x30, [sp], #16
  98:	b	108f8 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE>
  9c:	ldp	x29, x30, [sp], #16
  a0:	b	b3e8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE>
  a4:	ldp	x29, x30, [sp], #16
  a8:	b	8100 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE>
  ac:	ldp	x29, x30, [sp], #16
  b0:	b	fa38 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE>
  b4:	ldp	x29, x30, [sp], #16
  b8:	b	10068 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE>
  bc:	ldp	x29, x30, [sp], #16
  c0:	b	fcf0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE>
  c4:	ldp	x29, x30, [sp], #16
  c8:	b	b238 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE>
  cc:	ldp	x29, x30, [sp], #16
  d0:	b	b020 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE>
  d4:	ldp	x29, x30, [sp], #16
  d8:	b	10b78 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE>
  dc:	ldp	x29, x30, [sp], #16
  e0:	b	10428 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE>
  e4:	ldp	x29, x30, [sp], #16
  e8:	b	a600 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE>
  ec:	ldp	x29, x30, [sp], #16
  f0:	b	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  f4:	ldp	x29, x30, [sp], #16
  f8:	b	8858 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE>
  fc:	ldp	x29, x30, [sp], #16
 100:	b	8440 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE>
 104:	ldp	x29, x30, [sp], #16
 108:	b	6940 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE>
 10c:	ldp	x29, x30, [sp], #16
 110:	b	f998 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE>
 114:	ldp	x29, x30, [sp], #16
 118:	b	f778 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE>
 11c:	ldp	x29, x30, [sp], #16
 120:	b	e890 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE>
 124:	ldp	x29, x30, [sp], #16
 128:	b	e640 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE>
 12c:	ldp	x29, x30, [sp], #16
 130:	b	f540 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE>
 134:	ldp	x29, x30, [sp], #16
 138:	b	f2a0 <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE>
 13c:	ldp	x29, x30, [sp], #16
 140:	b	f000 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE>
 144:	ldp	x29, x30, [sp], #16
 148:	b	ec48 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE>
 14c:	ldp	x29, x30, [sp], #16
 150:	b	e078 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE>
 154:	ldp	x29, x30, [sp], #16
 158:	b	e3f0 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE>
 15c:	ldp	x29, x30, [sp], #16
 160:	b	dd00 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE>
 164:	ldp	x29, x30, [sp], #16
 168:	b	c400 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE>
 16c:	ldp	x29, x30, [sp], #16
 170:	b	c7b8 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE>
 174:	ldp	x29, x30, [sp], #16
 178:	b	c5c8 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE>
 17c:	ldp	x29, x30, [sp], #16
 180:	b	bb80 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE>
 184:	ldp	x29, x30, [sp], #16
 188:	b	d450 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE>
 18c:	ldp	x29, x30, [sp], #16
 190:	b	cec0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE>
 194:	ldp	x29, x30, [sp], #16
 198:	b	c928 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE>
 19c:	adrp	x1, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1a0:	adrp	x0, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1a4:	add	x1, x1, #0x0
 1a8:	add	x0, x0, #0x0
 1ac:	mov	w2, #0x88                  	// #136
 1b0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 1b4:	adrp	x3, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1b8:	adrp	x1, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1bc:	adrp	x0, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1c0:	add	x3, x3, #0x0
 1c4:	add	x1, x1, #0x0
 1c8:	add	x0, x0, #0x0
 1cc:	mov	w2, #0xb2                  	// #178
 1d0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x2, x2, #0x10
  20:	str	x2, [x1], #168
  24:	ldr	x3, [x1, #16]
  28:	cbz	x3, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev+0x38>
  2c:	mov	x0, x1
  30:	mov	w2, #0x3                   	// #3
  34:	blr	x3
  38:	ldp	x1, x0, [x19, #96]
  3c:	cmp	x1, x0
  40:	b.eq	48 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	ldr	x0, [x19, #64]
  4c:	add	x1, x19, #0x50
  50:	cmp	x0, x1
  54:	b.eq	5c <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev+0x5c>  // b.none
  58:	bl	0 <free>
  5c:	mov	x0, x19
  60:	mov	x1, #0xc8                  	// #200
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	b	0 <_ZdlPvm>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Execution.cpp>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	adrp	x5, 0 <_GLOBAL__sub_I_Execution.cpp>
   8:	adrp	x7, 0 <_GLOBAL__sub_I_Execution.cpp>
   c:	mov	x29, sp
  10:	add	x5, x5, #0x0
  14:	add	x7, x7, #0x0
  18:	adrp	x6, 0 <_GLOBAL__sub_I_Execution.cpp>
  1c:	adrp	x8, 0 <_GLOBAL__sub_I_Execution.cpp>
  20:	add	x6, x6, #0x0
  24:	add	x8, x8, #0x0
  28:	str	x19, [sp, #16]
  2c:	adrp	x19, 0 <_GLOBAL__sub_I_Execution.cpp>
  30:	add	x19, x19, #0x0
  34:	add	x3, sp, #0x30
  38:	mov	w10, #0x1                   	// #1
  3c:	mov	x9, #0x38                  	// #56
  40:	add	x2, sp, #0x2c
  44:	mov	x0, x19
  48:	adrp	x1, 0 <_GLOBAL__sub_I_Execution.cpp>
  4c:	add	x1, x1, #0x0
  50:	str	w10, [sp, #44]
  54:	stp	x8, x9, [sp, #48]
  58:	stp	x5, x7, [x19, #200]
  5c:	str	x6, [x19, #216]
  60:	str	wzr, [x19, #224]
  64:	strb	wzr, [x19, #228]
  68:	bl	0 <_GLOBAL__sub_I_Execution.cpp>
  6c:	mov	x1, x19
  70:	adrp	x2, 0 <__dso_handle>
  74:	adrp	x0, 0 <_GLOBAL__sub_I_Execution.cpp>
  78:	add	x2, x2, #0x0
  7c:	add	x0, x0, #0x0
  80:	bl	0 <__cxa_atexit>
  84:	ldr	x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #64
  8c:	ret

ExternalFunctions.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
       8:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
       c:	mov	x29, sp
      10:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
      14:	add	x3, x3, #0x0
      18:	add	x1, x1, #0x0
      1c:	add	x0, x0, #0x0
      20:	mov	w2, #0xfa                  	// #250
      24:	bl	0 <__assert_fail>

0000000000000028 <_ZL11lle_X_abortPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
      28:	stp	x29, x30, [sp, #-32]!
      2c:	mov	w0, #0x6                   	// #6
      30:	mov	x29, sp
      34:	str	x19, [sp, #16]
      38:	mov	x19, x8
      3c:	bl	0 <raise>
      40:	mov	x1, x19
      44:	mov	x2, x19
      48:	mov	x0, x19
      4c:	mov	w3, #0x1                   	// #1
      50:	stp	xzr, xzr, [x1, #24]!
      54:	str	xzr, [x1, #16]
      58:	str	xzr, [x2], #8
      5c:	str	xzr, [x19, #8]
      60:	ldr	x19, [sp, #16]
      64:	str	w3, [x2, #8]
      68:	ldp	x29, x30, [sp], #32
      6c:	ret

0000000000000070 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
      70:	sub	sp, sp, #0x90
      74:	cmp	x2, #0x9
      78:	stp	x29, x30, [sp, #16]
      7c:	add	x29, sp, #0x10
      80:	stp	x19, x20, [sp, #32]
      84:	str	x21, [sp, #48]
      88:	b.hi	1a4 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x134>  // b.pmore
      8c:	mov	x19, x8
      90:	cbz	x2, 11c <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>
      94:	ldr	x0, [x1]
      98:	str	x0, [sp, #64]
      9c:	cmp	x2, #0x1
      a0:	b.eq	11c <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.none
      a4:	ldr	x0, [x1, #48]
      a8:	str	x0, [sp, #72]
      ac:	cmp	x2, #0x2
      b0:	b.eq	11c <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.none
      b4:	ldr	x0, [x1, #96]
      b8:	str	x0, [sp, #80]
      bc:	cmp	x2, #0x3
      c0:	b.eq	11c <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.none
      c4:	ldr	x0, [x1, #144]
      c8:	str	x0, [sp, #88]
      cc:	cmp	x2, #0x4
      d0:	b.eq	11c <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.none
      d4:	ldr	x0, [x1, #192]
      d8:	str	x0, [sp, #96]
      dc:	cmp	x2, #0x5
      e0:	b.eq	11c <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.none
      e4:	ldr	x0, [x1, #240]
      e8:	str	x0, [sp, #104]
      ec:	cmp	x2, #0x6
      f0:	b.eq	11c <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.none
      f4:	ldr	x0, [x1, #288]
      f8:	str	x0, [sp, #112]
      fc:	cmp	x2, #0x7
     100:	b.eq	11c <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.none
     104:	ldr	x0, [x1, #336]
     108:	str	x0, [sp, #120]
     10c:	cmp	x2, #0x9
     110:	b.ne	11c <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.any
     114:	ldr	x0, [x1, #384]
     118:	str	x0, [sp, #128]
     11c:	mov	x2, x19
     120:	mov	x20, x19
     124:	ldp	x0, x1, [sp, #64]
     128:	mov	w3, #0x1                   	// #1
     12c:	stp	xzr, xzr, [x2, #24]!
     130:	str	xzr, [x2, #16]
     134:	str	xzr, [x20], #8
     138:	str	xzr, [x19, #8]
     13c:	ldp	x4, x5, [sp, #96]
     140:	str	w3, [x20, #8]
     144:	ldp	x6, x7, [sp, #112]
     148:	ldr	x8, [sp, #128]
     14c:	str	x8, [sp]
     150:	ldr	x2, [sp, #80]
     154:	ldr	x3, [sp, #88]
     158:	ldr	x8, [sp, #136]
     15c:	str	x8, [sp, #8]
     160:	bl	0 <__isoc99_sscanf>
     164:	mov	w21, w0
     168:	ldr	w1, [x19, #16]
     16c:	cmp	w1, #0x40
     170:	b.ls	180 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x110>  // b.plast
     174:	ldr	x0, [x19, #8]
     178:	cbz	x0, 180 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x110>
     17c:	bl	0 <_ZdaPv>
     180:	str	x21, [x19, #8]
     184:	mov	w1, #0x20                  	// #32
     188:	mov	x0, x19
     18c:	ldp	x29, x30, [sp, #16]
     190:	ldr	x21, [sp, #48]
     194:	str	w1, [x20, #8]
     198:	ldp	x19, x20, [sp, #32]
     19c:	add	sp, sp, #0x90
     1a0:	ret
     1a4:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     1a8:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     1ac:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     1b0:	add	x3, x3, #0x0
     1b4:	add	x1, x1, #0x0
     1b8:	add	x0, x0, #0x0
     1bc:	mov	w2, #0x1af                 	// #431
     1c0:	bl	0 <__assert_fail>
     1c4:	nop

00000000000001c8 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     1c8:	sub	sp, sp, #0x90
     1cc:	cmp	x2, #0x9
     1d0:	stp	x29, x30, [sp, #16]
     1d4:	add	x29, sp, #0x10
     1d8:	stp	x19, x20, [sp, #32]
     1dc:	str	x21, [sp, #48]
     1e0:	b.hi	2fc <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x134>  // b.pmore
     1e4:	mov	x19, x8
     1e8:	cbz	x2, 274 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>
     1ec:	ldr	x0, [x1]
     1f0:	str	x0, [sp, #64]
     1f4:	cmp	x2, #0x1
     1f8:	b.eq	274 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.none
     1fc:	ldr	x0, [x1, #48]
     200:	str	x0, [sp, #72]
     204:	cmp	x2, #0x2
     208:	b.eq	274 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.none
     20c:	ldr	x0, [x1, #96]
     210:	str	x0, [sp, #80]
     214:	cmp	x2, #0x3
     218:	b.eq	274 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.none
     21c:	ldr	x0, [x1, #144]
     220:	str	x0, [sp, #88]
     224:	cmp	x2, #0x4
     228:	b.eq	274 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.none
     22c:	ldr	x0, [x1, #192]
     230:	str	x0, [sp, #96]
     234:	cmp	x2, #0x5
     238:	b.eq	274 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.none
     23c:	ldr	x0, [x1, #240]
     240:	str	x0, [sp, #104]
     244:	cmp	x2, #0x6
     248:	b.eq	274 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.none
     24c:	ldr	x0, [x1, #288]
     250:	str	x0, [sp, #112]
     254:	cmp	x2, #0x7
     258:	b.eq	274 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.none
     25c:	ldr	x0, [x1, #336]
     260:	str	x0, [sp, #120]
     264:	cmp	x2, #0x9
     268:	b.ne	274 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.any
     26c:	ldr	x0, [x1, #384]
     270:	str	x0, [sp, #128]
     274:	mov	x2, x19
     278:	mov	x20, x19
     27c:	ldp	x0, x1, [sp, #64]
     280:	mov	w3, #0x1                   	// #1
     284:	stp	xzr, xzr, [x2, #24]!
     288:	str	xzr, [x2, #16]
     28c:	str	xzr, [x20], #8
     290:	str	xzr, [x19, #8]
     294:	ldp	x4, x5, [sp, #96]
     298:	str	w3, [x20, #8]
     29c:	ldp	x6, x7, [sp, #112]
     2a0:	ldr	x8, [sp, #128]
     2a4:	str	x8, [sp]
     2a8:	ldr	x2, [sp, #80]
     2ac:	ldr	x3, [sp, #88]
     2b0:	ldr	x8, [sp, #136]
     2b4:	str	x8, [sp, #8]
     2b8:	bl	0 <__isoc99_scanf>
     2bc:	mov	w21, w0
     2c0:	ldr	w1, [x19, #16]
     2c4:	cmp	w1, #0x40
     2c8:	b.ls	2d8 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x110>  // b.plast
     2cc:	ldr	x0, [x19, #8]
     2d0:	cbz	x0, 2d8 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x110>
     2d4:	bl	0 <_ZdaPv>
     2d8:	str	x21, [x19, #8]
     2dc:	mov	w1, #0x20                  	// #32
     2e0:	mov	x0, x19
     2e4:	ldp	x29, x30, [sp, #16]
     2e8:	ldr	x21, [sp, #48]
     2ec:	str	w1, [x20, #8]
     2f0:	ldp	x19, x20, [sp, #32]
     2f4:	add	sp, sp, #0x90
     2f8:	ret
     2fc:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     300:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     304:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     308:	add	x3, x3, #0x0
     30c:	add	x1, x1, #0x0
     310:	add	x0, x0, #0x0
     314:	mov	w2, #0x1bd                 	// #445
     318:	bl	0 <__assert_fail>
     31c:	nop

0000000000000320 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     320:	stp	x29, x30, [sp, #-64]!
     324:	cmp	x2, #0x1
     328:	mov	x29, sp
     32c:	stp	x19, x20, [sp, #16]
     330:	stp	x21, x22, [sp, #32]
     334:	str	x23, [sp, #48]
     338:	b.ls	430 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x110>  // b.plast
     33c:	mov	x19, x1
     340:	add	x0, x1, #0x38
     344:	ldr	w1, [x1, #64]
     348:	mov	x23, x2
     34c:	mov	x22, x8
     350:	cmp	w1, #0x40
     354:	ldr	x20, [x19, #56]
     358:	b.ls	404 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xe4>  // b.plast
     35c:	sub	w3, w1, #0x1
     360:	mov	x2, #0x1                   	// #1
     364:	add	w21, w1, #0x1
     368:	lsr	w4, w3, #6
     36c:	lsl	x1, x2, x3
     370:	ldr	x2, [x20, x4, lsl #3]
     374:	tst	x1, x2
     378:	b.eq	424 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x104>  // b.none
     37c:	bl	0 <_ZNK4llvm5APInt24countLeadingOnesSlowCaseEv>
     380:	sub	w1, w21, w0
     384:	cmp	w1, #0x40
     388:	b.hi	454 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x134>  // b.pmore
     38c:	ldr	x20, [x20]
     390:	cmp	x23, #0x2
     394:	b.eq	430 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x110>  // b.none
     398:	ldr	w21, [x19, #112]
     39c:	cmp	w21, #0x40
     3a0:	b.ls	41c <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xfc>  // b.plast
     3a4:	add	x0, x19, #0x68
     3a8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     3ac:	sub	w21, w21, w0
     3b0:	cmp	w21, #0x40
     3b4:	b.hi	434 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x114>  // b.pmore
     3b8:	ldr	x0, [x19, #104]
     3bc:	ldr	x2, [x0]
     3c0:	mov	w1, w20
     3c4:	ldr	x0, [x19]
     3c8:	bl	0 <memset>
     3cc:	mov	x1, x22
     3d0:	mov	x2, x22
     3d4:	mov	x0, x22
     3d8:	mov	w3, #0x1                   	// #1
     3dc:	stp	xzr, xzr, [x1, #24]!
     3e0:	str	xzr, [x1, #16]
     3e4:	str	xzr, [x2], #8
     3e8:	ldp	x19, x20, [sp, #16]
     3ec:	ldr	x23, [sp, #48]
     3f0:	str	xzr, [x22, #8]
     3f4:	ldp	x21, x22, [sp, #32]
     3f8:	str	w3, [x2, #8]
     3fc:	ldp	x29, x30, [sp], #64
     400:	ret
     404:	cbz	w1, 474 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x154>
     408:	mov	w0, #0x40                  	// #64
     40c:	sub	w1, w0, w1
     410:	lsl	x20, x20, x1
     414:	asr	x20, x20, x1
     418:	b	390 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x70>
     41c:	ldr	x2, [x19, #104]
     420:	b	3c0 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa0>
     424:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     428:	sub	w1, w21, w0
     42c:	b	384 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x64>
     430:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     434:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     438:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     43c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     440:	add	x3, x3, #0x0
     444:	add	x1, x1, #0x0
     448:	add	x0, x0, #0x0
     44c:	mov	w2, #0x657                 	// #1623
     450:	bl	0 <__assert_fail>
     454:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     458:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     45c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     460:	add	x3, x3, #0x0
     464:	add	x1, x1, #0x0
     468:	add	x0, x0, #0x0
     46c:	mov	w2, #0x663                 	// #1635
     470:	bl	0 <__assert_fail>
     474:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     478:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     47c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     480:	add	x3, x3, #0x0
     484:	add	x1, x1, #0x0
     488:	add	x0, x0, #0x0
     48c:	mov	w2, #0x307                 	// #775
     490:	bl	0 <__assert_fail>
     494:	nop

0000000000000498 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     498:	stp	x29, x30, [sp, #-64]!
     49c:	mov	x29, sp
     4a0:	stp	x19, x20, [sp, #16]
     4a4:	stp	x21, x22, [sp, #32]
     4a8:	str	x23, [sp, #48]
     4ac:	cbz	x2, 54c <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xb4>
     4b0:	mov	x19, x1
     4b4:	cmp	x2, #0x1
     4b8:	ldr	x22, [x1]
     4bc:	b.ls	54c <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xb4>  // b.plast
     4c0:	cmp	x2, #0x2
     4c4:	ldr	x23, [x1, #48]
     4c8:	b.eq	54c <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xb4>  // b.none
     4cc:	ldr	w21, [x1, #112]
     4d0:	mov	x20, x8
     4d4:	cmp	w21, #0x40
     4d8:	b.ls	544 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.plast
     4dc:	add	x0, x1, #0x68
     4e0:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     4e4:	sub	w21, w21, w0
     4e8:	mov	x2, #0xffffffffffffffff    	// #-1
     4ec:	cmp	w21, #0x40
     4f0:	b.ls	538 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa0>  // b.plast
     4f4:	mov	x1, x23
     4f8:	mov	x0, x22
     4fc:	bl	0 <memcpy>
     500:	mov	x1, x20
     504:	mov	x2, x20
     508:	mov	x0, x20
     50c:	mov	w3, #0x1                   	// #1
     510:	stp	xzr, xzr, [x1, #24]!
     514:	str	xzr, [x1, #16]
     518:	str	xzr, [x2], #8
     51c:	ldp	x21, x22, [sp, #32]
     520:	ldr	x23, [sp, #48]
     524:	str	xzr, [x20, #8]
     528:	ldp	x19, x20, [sp, #16]
     52c:	str	w3, [x2, #8]
     530:	ldp	x29, x30, [sp], #64
     534:	ret
     538:	ldr	x0, [x19, #104]
     53c:	ldr	x2, [x0]
     540:	b	4f4 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5c>
     544:	ldr	x2, [x1, #104]
     548:	b	4f4 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5c>
     54c:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>

0000000000000550 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     550:	sub	sp, sp, #0x4d0
     554:	stp	x29, x30, [sp]
     558:	mov	x29, sp
     55c:	stp	x19, x20, [sp, #16]
     560:	stp	x21, x22, [sp, #32]
     564:	stp	x23, x24, [sp, #48]
     568:	stp	x25, x26, [sp, #64]
     56c:	stp	x27, x28, [sp, #80]
     570:	cbz	x2, b50 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x600>
     574:	mov	x23, x1
     578:	mov	x22, x2
     57c:	cmp	x2, #0x1
     580:	ldr	x19, [x1]
     584:	b.ls	b50 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x600>  // b.plast
     588:	mov	x2, x8
     58c:	mov	x1, x8
     590:	ldr	x28, [x23, #48]
     594:	mov	w3, #0x1                   	// #1
     598:	stp	xzr, xzr, [x2, #24]!
     59c:	mov	x21, x8
     5a0:	mov	x0, x28
     5a4:	str	xzr, [x2, #16]
     5a8:	adrp	x26, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     5ac:	str	xzr, [x1], #8
     5b0:	mov	x20, #0x5                   	// #5
     5b4:	str	xzr, [x8, #8]
     5b8:	add	x27, sp, #0xf8
     5bc:	str	w3, [x1, #8]
     5c0:	add	x25, sp, #0xe8
     5c4:	str	x1, [sp, #96]
     5c8:	mov	w24, #0x2                   	// #2
     5cc:	bl	0 <strlen>
     5d0:	mov	w0, w0
     5d4:	add	x1, x26, #0x0
     5d8:	str	x1, [sp, #104]
     5dc:	ldr	x1, [sp, #96]
     5e0:	str	x0, [x21, #8]
     5e4:	movk	x20, #0x7, lsl #32
     5e8:	mov	w0, #0x20                  	// #32
     5ec:	str	w0, [x1, #8]
     5f0:	ldrb	w26, [x28]
     5f4:	cmp	w26, #0x25
     5f8:	b.eq	634 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xe4>  // b.none
     5fc:	cmp	w26, #0x5c
     600:	b.eq	924 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x3d4>  // b.none
     604:	cbz	w26, 900 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x3b0>
     608:	add	x3, x19, #0x1
     60c:	add	x28, x28, #0x1
     610:	mov	w2, w26
     614:	mov	x0, x19
     618:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     61c:	mov	x19, x3
     620:	add	x1, x1, #0x0
     624:	bl	0 <sprintf>
     628:	ldrb	w26, [x28]
     62c:	cmp	w26, #0x25
     630:	b.ne	5fc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>  // b.any
     634:	mov	w1, #0x0                   	// #0
     638:	mov	x0, x27
     63c:	mov	x2, #0x3d8                 	// #984
     640:	stp	xzr, xzr, [sp, #128]
     644:	stp	xzr, xzr, [sp, #144]
     648:	stp	xzr, xzr, [sp, #160]
     64c:	stp	xzr, xzr, [sp, #176]
     650:	stp	xzr, xzr, [sp, #192]
     654:	stp	xzr, xzr, [sp, #208]
     658:	str	wzr, [sp, #224]
     65c:	stp	xzr, xzr, [sp, #232]
     660:	bl	0 <memset>
     664:	ldrb	w3, [x28, #1]
     668:	ldrb	w1, [x28], #2
     66c:	sub	w0, w3, #0x63
     670:	strb	w1, [sp, #128]
     674:	strb	w3, [sp, #129]
     678:	cmp	w3, #0x69
     67c:	and	w0, w0, #0xff
     680:	ccmp	w0, #0x1, #0x0, ne  // ne = any
     684:	b.ls	b0c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5bc>  // b.plast
     688:	cmp	w3, #0x75
     68c:	mov	w8, #0x6f                  	// #111
     690:	ccmp	w3, w8, #0x4, ne  // ne = any
     694:	b.eq	b0c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5bc>  // b.none
     698:	and	w4, w3, #0xffffffdf
     69c:	add	x6, sp, #0x80
     6a0:	cmp	w4, #0x58
     6a4:	b.eq	b1c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5cc>  // b.none
     6a8:	mov	w5, w26
     6ac:	add	x7, x6, #0x2
     6b0:	mov	w2, #0x0                   	// #0
     6b4:	b	70c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1bc>
     6b8:	cmp	w3, #0x70
     6bc:	b.eq	a58 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x508>  // b.none
     6c0:	cmp	w3, #0x73
     6c4:	ccmp	w3, w5, #0x4, ne  // ne = any
     6c8:	b.eq	724 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1d4>  // b.none
     6cc:	ldrb	w3, [x28], #1
     6d0:	and	w4, w4, #0xff
     6d4:	cmp	w4, #0x4c
     6d8:	strb	w3, [x7], #1
     6dc:	sub	w0, w3, #0x63
     6e0:	cinc	w2, w2, eq  // eq = none
     6e4:	and	w0, w0, #0xff
     6e8:	cmp	w3, #0x69
     6ec:	ccmp	w0, #0x1, #0x0, ne  // ne = any
     6f0:	b.ls	724 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1d4>  // b.plast
     6f4:	cmp	w3, #0x75
     6f8:	ccmp	w3, w8, #0x4, ne  // ne = any
     6fc:	b.eq	724 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1d4>  // b.none
     700:	and	w4, w3, #0xffffffdf
     704:	cmp	w4, #0x58
     708:	b.eq	768 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x218>  // b.none
     70c:	and	w0, w3, #0xfffffffd
     710:	sub	w1, w3, #0x65
     714:	cmp	w0, #0x45
     718:	and	w1, w1, #0xff
     71c:	ccmp	w1, #0x2, #0x0, ne  // ne = any
     720:	b.hi	6b8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x168>  // b.pmore
     724:	strb	wzr, [x7]
     728:	cmp	w3, #0x67
     72c:	b.hi	778 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x228>  // b.pmore
     730:	cmp	w3, #0x44
     734:	b.hi	854 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x304>  // b.pmore
     738:	cmp	w3, #0x25
     73c:	b.ne	7a4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x254>  // b.any
     740:	strh	w3, [x25]
     744:	mov	x0, x25
     748:	bl	0 <strlen>
     74c:	mov	x3, x0
     750:	mov	x1, x25
     754:	mov	x0, x19
     758:	add	x2, x3, #0x1
     75c:	add	x19, x19, x3
     760:	bl	0 <memcpy>
     764:	b	5f0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa0>
     768:	strb	wzr, [x7]
     76c:	cmp	w3, #0x67
     770:	b.ls	854 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x304>  // b.plast
     774:	nop
     778:	sub	w3, w3, #0x69
     77c:	and	w1, w3, #0xff
     780:	cmp	w1, #0xf
     784:	b.hi	7a4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x254>  // b.pmore
     788:	mov	x3, #0x1                   	// #1
     78c:	mov	x0, #0x9041                	// #36929
     790:	lsl	x3, x3, x1
     794:	tst	x3, x0
     798:	b.ne	9e0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x490>  // b.any
     79c:	tbnz	w3, #10, 948 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x3f8>
     7a0:	tbnz	w3, #7, 948 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x3f8>
     7a4:	bl	0 <_ZN4llvm4errsEv>
     7a8:	mov	x2, x0
     7ac:	ldp	x1, x3, [x0, #16]
     7b0:	sub	x1, x1, x3
     7b4:	cmp	x1, #0x15
     7b8:	b.ls	ac0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x570>  // b.plast
     7bc:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     7c0:	add	x0, x0, #0x0
     7c4:	ldp	x4, x5, [x0]
     7c8:	stp	x4, x5, [x3]
     7cc:	ldur	x0, [x0, #14]
     7d0:	stur	x0, [x3, #14]
     7d4:	ldr	x0, [x2, #24]
     7d8:	add	x0, x0, #0x16
     7dc:	str	x0, [x2, #24]
     7e0:	ldr	x3, [x2, #16]
     7e4:	ldrb	w1, [x28]
     7e8:	cmp	x3, x0
     7ec:	b.ls	afc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5ac>  // b.plast
     7f0:	add	x3, x0, #0x1
     7f4:	str	x3, [x2, #24]
     7f8:	strb	w1, [x0]
     7fc:	ldp	x0, x1, [x2, #16]
     800:	sub	x0, x0, x1
     804:	cmp	x0, #0x2
     808:	b.ls	ae4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x594>  // b.plast
     80c:	ldr	x0, [sp, #104]
     810:	add	w24, w24, #0x1
     814:	ldrh	w3, [x0]
     818:	ldrb	w0, [x0, #2]
     81c:	strh	w3, [x1]
     820:	strb	w0, [x1, #2]
     824:	ldr	x0, [x2, #24]
     828:	add	x0, x0, #0x3
     82c:	str	x0, [x2, #24]
     830:	mov	x0, x25
     834:	bl	0 <strlen>
     838:	mov	x3, x0
     83c:	mov	x1, x25
     840:	mov	x0, x19
     844:	add	x2, x3, #0x1
     848:	add	x19, x19, x3
     84c:	bl	0 <memcpy>
     850:	b	5f0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa0>
     854:	sub	w3, w3, #0x45
     858:	mov	x1, #0x1                   	// #1
     85c:	lsl	x3, x1, x3
     860:	tst	x3, x20
     864:	b.ne	994 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x444>  // b.any
     868:	mov	x0, #0x80080000            	// #2148007936
     86c:	tst	x3, x0
     870:	b.ne	9e0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x490>  // b.any
     874:	tbz	w3, #30, 7a4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x254>
     878:	cmp	x22, w24, uxtw
     87c:	add	w3, w24, #0x1
     880:	b.ls	b50 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x600>  // b.plast
     884:	mov	w0, #0x30                  	// #48
     888:	umaddl	x24, w24, w0, x23
     88c:	ldr	w1, [x24, #16]
     890:	cmp	w1, #0x40
     894:	b.ls	a80 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x530>  // b.plast
     898:	add	x0, x24, #0x8
     89c:	str	w3, [sp, #96]
     8a0:	str	w1, [sp, #112]
     8a4:	str	x6, [sp, #120]
     8a8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     8ac:	ldr	w1, [sp, #112]
     8b0:	ldr	w3, [sp, #96]
     8b4:	sub	w1, w1, w0
     8b8:	cmp	w1, #0x40
     8bc:	ldr	x6, [sp, #120]
     8c0:	b.hi	b54 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x604>  // b.pmore
     8c4:	ldr	x0, [x24, #8]
     8c8:	ldr	x2, [x0]
     8cc:	mov	x1, x6
     8d0:	mov	w24, w3
     8d4:	mov	x0, x25
     8d8:	bl	0 <sprintf>
     8dc:	mov	x0, x25
     8e0:	bl	0 <strlen>
     8e4:	mov	x3, x0
     8e8:	mov	x1, x25
     8ec:	mov	x0, x19
     8f0:	add	x2, x3, #0x1
     8f4:	add	x19, x19, x3
     8f8:	bl	0 <memcpy>
     8fc:	b	5f0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa0>
     900:	mov	x0, x21
     904:	ldp	x29, x30, [sp]
     908:	ldp	x19, x20, [sp, #16]
     90c:	ldp	x21, x22, [sp, #32]
     910:	ldp	x23, x24, [sp, #48]
     914:	ldp	x25, x26, [sp, #64]
     918:	ldp	x27, x28, [sp, #80]
     91c:	add	sp, sp, #0x4d0
     920:	ret
     924:	ldrb	w3, [x28, #1]
     928:	mov	w2, w26
     92c:	add	x28, x28, #0x2
     930:	mov	x0, x19
     934:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     938:	add	x19, x19, #0x2
     93c:	add	x1, x1, #0x0
     940:	bl	0 <sprintf>
     944:	b	5f0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa0>
     948:	cmp	x22, w24, uxtw
     94c:	add	w3, w24, #0x1
     950:	b.ls	b50 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x600>  // b.plast
     954:	mov	w2, #0x30                  	// #48
     958:	mov	x1, x6
     95c:	mov	x0, x25
     960:	umull	x2, w24, w2
     964:	mov	w24, w3
     968:	ldr	x2, [x23, x2]
     96c:	bl	0 <sprintf>
     970:	mov	x0, x25
     974:	bl	0 <strlen>
     978:	mov	x3, x0
     97c:	mov	x1, x25
     980:	mov	x0, x19
     984:	add	x2, x3, #0x1
     988:	add	x19, x19, x3
     98c:	bl	0 <memcpy>
     990:	b	5f0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa0>
     994:	cmp	x22, w24, uxtw
     998:	add	w3, w24, #0x1
     99c:	b.ls	b50 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x600>  // b.plast
     9a0:	mov	w2, #0x30                  	// #48
     9a4:	mov	x1, x6
     9a8:	mov	x0, x25
     9ac:	umull	x2, w24, w2
     9b0:	mov	w24, w3
     9b4:	ldr	d0, [x23, x2]
     9b8:	bl	0 <sprintf>
     9bc:	mov	x0, x25
     9c0:	bl	0 <strlen>
     9c4:	mov	x3, x0
     9c8:	mov	x1, x25
     9cc:	mov	x0, x19
     9d0:	add	x2, x3, #0x1
     9d4:	add	x19, x19, x3
     9d8:	bl	0 <memcpy>
     9dc:	b	5f0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa0>
     9e0:	mov	w4, w24
     9e4:	add	w3, w24, #0x1
     9e8:	cbz	w2, a64 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x514>
     9ec:	cmp	w2, #0x1
     9f0:	b.eq	b28 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5d8>  // b.none
     9f4:	cmp	x22, x4
     9f8:	b.ls	b50 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x600>  // b.plast
     9fc:	mov	w0, #0x30                  	// #48
     a00:	umaddl	x24, w24, w0, x23
     a04:	ldr	w1, [x24, #16]
     a08:	cmp	w1, #0x40
     a0c:	b.ls	adc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x58c>  // b.plast
     a10:	add	x0, x24, #0x8
     a14:	str	w3, [sp, #96]
     a18:	str	w1, [sp, #112]
     a1c:	str	x6, [sp, #120]
     a20:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     a24:	ldr	w1, [sp, #112]
     a28:	sub	w1, w1, w0
     a2c:	cmp	w1, #0x40
     a30:	b.hi	b54 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x604>  // b.pmore
     a34:	ldr	x0, [x24, #8]
     a38:	ldr	w3, [sp, #96]
     a3c:	ldr	x6, [sp, #120]
     a40:	ldr	x2, [x0]
     a44:	mov	x1, x6
     a48:	mov	w24, w3
     a4c:	mov	x0, x25
     a50:	bl	0 <sprintf>
     a54:	b	744 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1f4>
     a58:	mov	w1, #0x7                   	// #7
     a5c:	strb	wzr, [x7]
     a60:	b	788 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x238>
     a64:	cmp	x22, x4
     a68:	b.ls	b50 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x600>  // b.plast
     a6c:	mov	w0, #0x30                  	// #48
     a70:	umaddl	x24, w24, w0, x23
     a74:	ldr	w1, [x24, #16]
     a78:	cmp	w1, #0x40
     a7c:	b.hi	a88 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x538>  // b.pmore
     a80:	ldr	x2, [x24, #8]
     a84:	b	8cc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x37c>
     a88:	add	x0, x24, #0x8
     a8c:	str	w3, [sp, #96]
     a90:	str	w1, [sp, #112]
     a94:	str	x6, [sp, #120]
     a98:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     a9c:	ldr	w1, [sp, #112]
     aa0:	sub	w1, w1, w0
     aa4:	cmp	w1, #0x40
     aa8:	b.hi	b54 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x604>  // b.pmore
     aac:	ldr	x0, [x24, #8]
     ab0:	ldr	w3, [sp, #96]
     ab4:	ldr	x6, [sp, #120]
     ab8:	ldr	x2, [x0]
     abc:	b	8cc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x37c>
     ac0:	mov	x2, #0x16                  	// #22
     ac4:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     ac8:	add	x1, x1, #0x0
     acc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ad0:	mov	x2, x0
     ad4:	ldr	x0, [x0, #24]
     ad8:	b	7e0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x290>
     adc:	ldr	x2, [x24, #8]
     ae0:	b	a44 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x4f4>
     ae4:	ldr	x1, [sp, #104]
     ae8:	mov	x0, x2
     aec:	add	w24, w24, #0x1
     af0:	mov	x2, #0x3                   	// #3
     af4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     af8:	b	830 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2e0>
     afc:	mov	x0, x2
     b00:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     b04:	mov	x2, x0
     b08:	b	7fc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2ac>
     b0c:	add	x6, sp, #0x80
     b10:	mov	w2, #0x0                   	// #0
     b14:	add	x7, x6, #0x2
     b18:	b	724 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1d4>
     b1c:	add	x7, x6, #0x2
     b20:	mov	w2, #0x0                   	// #0
     b24:	b	724 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1d4>
     b28:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     b2c:	mov	w1, #0x0                   	// #0
     b30:	str	w3, [sp, #96]
     b34:	ldr	x0, [x0]
     b38:	stp	x4, x6, [sp, #112]
     b3c:	add	x0, x0, #0x58
     b40:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
     b44:	ldr	w3, [sp, #96]
     b48:	ldp	x4, x6, [sp, #112]
     b4c:	b	9f4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x4a4>
     b50:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     b54:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     b58:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     b5c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     b60:	add	x3, x3, #0x0
     b64:	add	x1, x1, #0x0
     b68:	add	x0, x0, #0x0
     b6c:	mov	w2, #0x657                 	// #1623
     b70:	bl	0 <__assert_fail>
     b74:	nop

0000000000000b78 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     b78:	stp	x29, x30, [sp, #-128]!
     b7c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     b80:	mov	x29, sp
     b84:	stp	x19, x20, [sp, #16]
     b88:	stp	x21, x22, [sp, #32]
     b8c:	stp	x23, x24, [sp, #48]
     b90:	str	x25, [sp, #64]
     b94:	ldr	x21, [x0]
     b98:	cbz	x2, d34 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1bc>
     b9c:	mov	x22, x1
     ba0:	mov	x20, x8
     ba4:	ldr	x0, [x1], #8
     ba8:	str	x0, [sp, #80]
     bac:	ldr	w0, [x1, #8]
     bb0:	str	w0, [sp, #96]
     bb4:	cmp	w0, #0x40
     bb8:	b.hi	d28 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1b0>  // b.pmore
     bbc:	ldr	x0, [x22, #8]
     bc0:	str	x0, [sp, #88]
     bc4:	ldp	x25, x19, [x22, #24]
     bc8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     bcc:	movk	x1, #0xaaab
     bd0:	stp	xzr, xzr, [sp, #104]
     bd4:	mov	x23, #0x0                   	// #0
     bd8:	str	xzr, [sp, #120]
     bdc:	sub	x24, x19, x25
     be0:	asr	x0, x24, #4
     be4:	mul	x0, x0, x1
     be8:	cbz	x0, c0c <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x94>
     bec:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     bf0:	movk	x1, #0x2aa, lsl #48
     bf4:	cmp	x0, x1
     bf8:	b.hi	d38 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1c0>  // b.pmore
     bfc:	mov	x0, x24
     c00:	bl	0 <_Znwm>
     c04:	ldp	x25, x19, [x22, #24]
     c08:	mov	x23, x0
     c0c:	dup	v0.2d, x23
     c10:	add	x24, x23, x24
     c14:	str	x24, [sp, #120]
     c18:	cmp	x19, x25
     c1c:	stur	q0, [sp, #104]
     c20:	b.eq	c7c <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x104>  // b.none
     c24:	mov	x22, x25
     c28:	mov	x24, x23
     c2c:	nop
     c30:	mov	x1, x22
     c34:	mov	x0, x24
     c38:	add	x22, x22, #0x30
     c3c:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     c40:	cmp	x19, x22
     c44:	add	x24, x24, #0x30
     c48:	b.ne	c30 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xb8>  // b.any
     c4c:	sub	x1, x19, #0x30
     c50:	mov	x19, #0xaaab                	// #43691
     c54:	sub	x1, x1, x25
     c58:	movk	x19, #0xaaaa, lsl #16
     c5c:	movk	x19, #0xaaaa, lsl #32
     c60:	lsr	x1, x1, #4
     c64:	movk	x19, #0xaaa, lsl #48
     c68:	mul	x1, x1, x19
     c6c:	and	x1, x1, #0xfffffffffffffff
     c70:	add	x1, x1, #0x1
     c74:	add	x1, x1, x1, lsl #1
     c78:	add	x23, x23, x1, lsl #4
     c7c:	mov	x0, x21
     c80:	add	x1, sp, #0x50
     c84:	str	x23, [sp, #112]
     c88:	bl	0 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE>
     c8c:	ldp	x19, x21, [sp, #104]
     c90:	cmp	x19, x21
     c94:	b.eq	cc8 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x150>  // b.none
     c98:	add	x0, x19, #0x18
     c9c:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     ca0:	ldr	w0, [x19, #16]
     ca4:	cmp	w0, #0x40
     ca8:	b.ls	cb8 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x140>  // b.plast
     cac:	ldr	x0, [x19, #8]
     cb0:	cbz	x0, cb8 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x140>
     cb4:	bl	0 <_ZdaPv>
     cb8:	add	x19, x19, #0x30
     cbc:	cmp	x21, x19
     cc0:	b.ne	c98 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x120>  // b.any
     cc4:	ldr	x21, [sp, #104]
     cc8:	cbz	x21, cd4 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x15c>
     ccc:	mov	x0, x21
     cd0:	bl	0 <_ZdlPv>
     cd4:	ldr	w0, [sp, #96]
     cd8:	cmp	w0, #0x40
     cdc:	b.ls	cec <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x174>  // b.plast
     ce0:	ldr	x0, [sp, #88]
     ce4:	cbz	x0, cec <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x174>
     ce8:	bl	0 <_ZdaPv>
     cec:	mov	x1, x20
     cf0:	mov	x2, x20
     cf4:	mov	x0, x20
     cf8:	mov	w3, #0x1                   	// #1
     cfc:	stp	xzr, xzr, [x1, #24]!
     d00:	str	xzr, [x1, #16]
     d04:	str	xzr, [x2], #8
     d08:	ldp	x21, x22, [sp, #32]
     d0c:	ldp	x23, x24, [sp, #48]
     d10:	ldr	x25, [sp, #64]
     d14:	str	xzr, [x20, #8]
     d18:	ldp	x19, x20, [sp, #16]
     d1c:	str	w3, [x2, #8]
     d20:	ldp	x29, x30, [sp], #128
     d24:	ret
     d28:	add	x0, sp, #0x58
     d2c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
     d30:	b	bc4 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x4c>
     d34:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     d38:	bl	0 <_ZSt17__throw_bad_allocv>
     d3c:	nop

0000000000000d40 <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     d40:	stp	x29, x30, [sp, #-48]!
     d44:	cmp	x2, #0x1
     d48:	mov	x29, sp
     d4c:	str	x19, [sp, #16]
     d50:	b.ne	dc0 <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x80>  // b.any
     d54:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     d58:	mov	x19, x8
     d5c:	ldr	x2, [x1]
     d60:	str	x2, [sp, #40]
     d64:	ldr	x0, [x0]
     d68:	add	x0, x0, #0x2d0
     d6c:	ldr	x1, [x0, #8]
     d70:	ldr	x3, [x0, #16]
     d74:	cmp	x1, x3
     d78:	b.eq	db4 <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x74>  // b.none
     d7c:	str	x2, [x1], #8
     d80:	str	x1, [x0, #8]
     d84:	mov	x1, x19
     d88:	mov	x2, x19
     d8c:	mov	x0, x19
     d90:	mov	w3, #0x1                   	// #1
     d94:	stp	xzr, xzr, [x1, #24]!
     d98:	str	xzr, [x1, #16]
     d9c:	str	xzr, [x2], #8
     da0:	str	xzr, [x19, #8]
     da4:	ldr	x19, [sp, #16]
     da8:	str	w3, [x2, #8]
     dac:	ldp	x29, x30, [sp], #48
     db0:	ret
     db4:	add	x2, sp, #0x28
     db8:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     dbc:	b	d84 <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x44>
     dc0:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     dc4:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     dc8:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     dcc:	add	x3, x3, #0x0
     dd0:	add	x1, x1, #0x0
     dd4:	add	x0, x0, #0x0
     dd8:	mov	w2, #0x138                 	// #312
     ddc:	bl	0 <__assert_fail>

0000000000000de0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0>:
     de0:	stp	x29, x30, [sp, #-80]!
     de4:	mov	x29, sp
     de8:	stp	x21, x22, [sp, #32]
     dec:	mov	x22, x2
     df0:	mov	x21, x1
     df4:	stp	x19, x20, [sp, #16]
     df8:	mov	x20, x0
     dfc:	mov	x0, #0x48                  	// #72
     e00:	str	x23, [sp, #48]
     e04:	bl	0 <_Znwm>
     e08:	ldr	x3, [x22]
     e0c:	mov	x19, x0
     e10:	add	x23, x0, #0x30
     e14:	mov	x0, x3
     e18:	str	x23, [x19, #32]
     e1c:	ldr	x1, [x0], #16
     e20:	cmp	x1, x0
     e24:	b.eq	f30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0+0x150>  // b.none
     e28:	ldr	x2, [x3, #16]
     e2c:	str	x1, [x19, #32]
     e30:	str	x2, [x19, #48]
     e34:	add	x2, x19, #0x20
     e38:	ldr	x1, [x3, #8]
     e3c:	str	x1, [x19, #40]
     e40:	stp	x0, xzr, [x3]
     e44:	mov	x1, x21
     e48:	mov	x0, x20
     e4c:	strb	wzr, [x3, #16]
     e50:	str	xzr, [x2, #32]
     e54:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     e58:	mov	x22, x0
     e5c:	mov	x21, x1
     e60:	cbz	x1, f00 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0+0x120>
     e64:	add	x3, x20, #0x8
     e68:	mov	w0, #0x1                   	// #1
     e6c:	cbz	x22, ea0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0+0xc0>
     e70:	mov	x2, x21
     e74:	mov	x1, x19
     e78:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
     e7c:	ldr	x1, [x20, #40]
     e80:	mov	x0, x19
     e84:	ldp	x21, x22, [sp, #32]
     e88:	add	x1, x1, #0x1
     e8c:	str	x1, [x20, #40]
     e90:	ldp	x19, x20, [sp, #16]
     e94:	ldr	x23, [sp, #48]
     e98:	ldp	x29, x30, [sp], #80
     e9c:	ret
     ea0:	cmp	x1, x3
     ea4:	b.eq	e70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0+0x90>  // b.none
     ea8:	ldr	x23, [x19, #40]
     eac:	ldr	x22, [x1, #40]
     eb0:	cmp	x23, x22
     eb4:	csel	x2, x23, x22, ls  // ls = plast
     eb8:	cbz	x2, ed4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0+0xf4>
     ebc:	ldr	x0, [x19, #32]
     ec0:	str	x3, [sp, #72]
     ec4:	ldr	x1, [x1, #32]
     ec8:	bl	0 <memcmp>
     ecc:	ldr	x3, [sp, #72]
     ed0:	cbnz	w0, ef8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0+0x118>
     ed4:	sub	x1, x23, x22
     ed8:	mov	x2, #0x7fffffff            	// #2147483647
     edc:	mov	w0, #0x0                   	// #0
     ee0:	cmp	x1, x2
     ee4:	b.gt	e70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0+0x90>
     ee8:	mov	x0, #0xffffffff80000000    	// #-2147483648
     eec:	cmp	x1, x0
     ef0:	b.lt	f3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0+0x15c>  // b.tstop
     ef4:	mov	w0, w1
     ef8:	lsr	w0, w0, #31
     efc:	b	e70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0+0x90>
     f00:	ldr	x0, [x19, #32]
     f04:	cmp	x23, x0
     f08:	b.eq	f10 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0+0x130>  // b.none
     f0c:	bl	0 <_ZdlPv>
     f10:	mov	x0, x19
     f14:	bl	0 <_ZdlPv>
     f18:	mov	x0, x22
     f1c:	ldp	x19, x20, [sp, #16]
     f20:	ldp	x21, x22, [sp, #32]
     f24:	ldr	x23, [sp, #48]
     f28:	ldp	x29, x30, [sp], #80
     f2c:	ret
     f30:	ldp	x4, x5, [x3, #16]
     f34:	stp	x4, x5, [x19, #48]
     f38:	b	e34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0+0x54>
     f3c:	mov	w0, #0x1                   	// #1
     f40:	b	e70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0+0x90>
     f44:	nop

0000000000000f48 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>:
     f48:	stp	x29, x30, [sp, #-304]!
     f4c:	mov	x29, sp
     f50:	stp	x21, x22, [sp, #32]
     f54:	adrp	x21, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
     f58:	add	x4, x21, #0x0
     f5c:	mov	x22, x1
     f60:	add	x4, x4, #0x8
     f64:	str	x0, [x21]
     f68:	stp	x19, x20, [sp, #16]
     f6c:	mov	x19, x8
     f70:	stp	x23, x24, [sp, #48]
     f74:	stp	x2, x3, [sp, #112]
     f78:	ldar	x0, [x4]
     f7c:	cbz	x0, 1520 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x5d8>
     f80:	add	x0, x21, #0x0
     f84:	add	x0, x0, #0x8
     f88:	ldr	x23, [x0]
     f8c:	cbz	x23, 1bdc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc94>
     f90:	adrp	x20, 0 <__pthread_key_create>
     f94:	ldr	x0, [x20]
     f98:	cbz	x0, fa8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x60>
     f9c:	mov	x0, x23
     fa0:	bl	0 <pthread_mutex_lock>
     fa4:	cbnz	w0, 1bd0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc88>
     fa8:	add	x0, x21, #0x0
     fac:	stp	x25, x26, [sp, #64]
     fb0:	add	x0, x0, #0x20
     fb4:	ldar	x1, [x0]
     fb8:	cbz	x1, 1508 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x5c0>
     fbc:	add	x0, x21, #0x0
     fc0:	add	x0, x0, #0x20
     fc4:	ldr	x24, [x0]
     fc8:	ldr	x0, [x24, #16]
     fcc:	add	x24, x24, #0x8
     fd0:	cbz	x0, 1004 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xbc>
     fd4:	mov	x1, x24
     fd8:	ldr	x2, [x0, #32]
     fdc:	cmp	x2, x22
     fe0:	b.cc	1080 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x138>  // b.lo, b.ul, b.last
     fe4:	mov	x1, x0
     fe8:	ldr	x0, [x0, #16]
     fec:	cbnz	x0, fd8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x90>
     ff0:	cmp	x24, x1
     ff4:	b.eq	1004 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xbc>  // b.none
     ff8:	ldr	x0, [x1, #32]
     ffc:	cmp	x0, x22
    1000:	csel	x24, x24, x1, hi  // hi = pmore
    1004:	add	x0, x21, #0x0
    1008:	add	x0, x0, #0x20
    100c:	ldar	x1, [x0]
    1010:	cbz	x1, 10d8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x190>
    1014:	add	x0, x21, #0x0
    1018:	add	x0, x0, #0x20
    101c:	ldr	x0, [x0]
    1020:	add	x0, x0, #0x8
    1024:	cmp	x24, x0
    1028:	b.eq	1104 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1bc>  // b.none
    102c:	ldr	x25, [x24, #40]
    1030:	cbnz	x25, 108c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x144>
    1034:	mov	x0, x22
    1038:	bl	0 <_ZNK4llvm5Value7getNameEv>
    103c:	cmp	x1, #0x6
    1040:	b.eq	153c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x5f4>  // b.none
    1044:	mov	x0, x22
    1048:	stp	x27, x28, [sp, #80]
    104c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    1050:	add	x2, sp, #0xf0
    1054:	mov	x6, x0
    1058:	mov	x7, x1
    105c:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1060:	add	x3, x3, #0x0
    1064:	mov	w4, #0x503                 	// #1283
    1068:	add	x0, sp, #0x110
    106c:	mov	w1, #0x1                   	// #1
    1070:	stp	x6, x7, [sp, #240]
    1074:	stp	x3, x2, [sp, #272]
    1078:	strh	w4, [sp, #288]
    107c:	bl	0 <_ZN4llvm18report_fatal_errorERKNS_5TwineEb>
    1080:	ldr	x0, [x0, #24]
    1084:	cbnz	x0, fd8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x90>
    1088:	b	ff0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa8>
    108c:	ldr	x20, [x20]
    1090:	cbz	x20, 109c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x154>
    1094:	mov	x0, x23
    1098:	bl	0 <pthread_mutex_unlock>
    109c:	ldr	x0, [x22, #24]
    10a0:	cbz	x0, 1b98 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc50>
    10a4:	ldrb	w1, [x0, #8]
    10a8:	cmp	w1, #0xc
    10ac:	b.ne	1bac <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc64>  // b.any
    10b0:	ldp	x1, x2, [sp, #112]
    10b4:	mov	x8, x19
    10b8:	blr	x25
    10bc:	mov	x0, x19
    10c0:	ldp	x19, x20, [sp, #16]
    10c4:	ldp	x21, x22, [sp, #32]
    10c8:	ldp	x23, x24, [sp, #48]
    10cc:	ldp	x25, x26, [sp, #64]
    10d0:	ldp	x29, x30, [sp], #304
    10d4:	ret
    10d8:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    10dc:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    10e0:	add	x2, x2, #0x0
    10e4:	add	x1, x1, #0x0
    10e8:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    10ec:	add	x0, x21, #0x0
    10f0:	add	x0, x0, #0x20
    10f4:	ldr	x0, [x0]
    10f8:	add	x0, x0, #0x8
    10fc:	cmp	x24, x0
    1100:	b.ne	102c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xe4>  // b.any
    1104:	ldr	x2, [x22, #24]
    1108:	add	x24, sp, #0xf0
    110c:	mov	w0, #0x6c6c                	// #27756
    1110:	add	x3, x24, #0x10
    1114:	movk	w0, #0x5f65, lsl #16
    1118:	mov	x1, #0x4                   	// #4
    111c:	stp	x27, x28, [sp, #80]
    1120:	stp	x3, x1, [sp, #240]
    1124:	str	w0, [sp, #256]
    1128:	strb	wzr, [sp, #260]
    112c:	cbz	x2, 1b9c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc54>
    1130:	ldrb	w0, [x2, #8]
    1134:	cmp	w0, #0xc
    1138:	b.ne	1bb0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc68>  // b.any
    113c:	ldr	x0, [x2, #16]
    1140:	ldr	x3, [x0]
    1144:	ldrb	w1, [x3, #8]
    1148:	cmp	w1, #0xc
    114c:	b.eq	1a60 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xb18>  // b.none
    1150:	b.hi	1728 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x7e0>  // b.pmore
    1154:	cmp	w1, #0x3
    1158:	mov	w0, #0x44                  	// #68
    115c:	b.eq	117c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x234>  // b.none
    1160:	b.hi	1750 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x808>  // b.pmore
    1164:	mov	w0, #0x56                  	// #86
    1168:	cbz	w1, 117c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x234>
    116c:	cmp	w1, #0x2
    1170:	mov	w0, #0x55                  	// #85
    1174:	mov	w1, #0x46                  	// #70
    1178:	csel	w0, w0, w1, ne  // ne = any
    117c:	strb	w0, [sp, #260]
    1180:	mov	x28, #0x5                   	// #5
    1184:	strb	wzr, [sp, #261]
    1188:	ldr	x0, [x2, #16]
    118c:	ldr	w7, [x2, #12]
    1190:	str	x28, [sp, #248]
    1194:	add	x26, x0, #0x8
    1198:	add	x7, x0, x7, lsl #3
    119c:	cmp	x26, x7
    11a0:	b.eq	1298 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x350>  // b.none
    11a4:	ldr	x2, [x26]
    11a8:	add	x1, x24, #0x10
    11ac:	ldrb	w0, [x2, #8]
    11b0:	cmp	w0, #0xc
    11b4:	b.eq	1234 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2ec>  // b.none
    11b8:	b.hi	16c0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x778>  // b.pmore
    11bc:	cmp	w0, #0x3
    11c0:	mov	w25, #0x44                  	// #68
    11c4:	b.eq	11e4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x29c>  // b.none
    11c8:	b.hi	16e8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x7a0>  // b.pmore
    11cc:	mov	w25, #0x56                  	// #86
    11d0:	cbz	w0, 11e4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x29c>
    11d4:	cmp	w0, #0x2
    11d8:	mov	w25, #0x55                  	// #85
    11dc:	mov	w0, #0x46                  	// #70
    11e0:	csel	w25, w25, w0, ne  // ne = any
    11e4:	ldr	x0, [sp, #256]
    11e8:	add	x2, x24, #0x10
    11ec:	cmp	x1, x2
    11f0:	add	x27, x28, #0x1
    11f4:	mov	x2, #0xf                   	// #15
    11f8:	csel	x0, x0, x2, ne  // ne = any
    11fc:	cmp	x27, x0
    1200:	b.hi	1258 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x310>  // b.pmore
    1204:	strb	w25, [x1, x28]
    1208:	add	x26, x26, #0x8
    120c:	str	x27, [sp, #248]
    1210:	cmp	x7, x26
    1214:	ldr	x0, [sp, #240]
    1218:	strb	wzr, [x0, x27]
    121c:	b.eq	1298 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x350>  // b.none
    1220:	ldr	x2, [x26]
    1224:	ldp	x1, x28, [sp, #240]
    1228:	ldrb	w0, [x2, #8]
    122c:	cmp	w0, #0xc
    1230:	b.ne	11b8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x270>  // b.any
    1234:	ldr	x0, [sp, #256]
    1238:	add	x2, x24, #0x10
    123c:	cmp	x1, x2
    1240:	add	x27, x28, #0x1
    1244:	mov	x2, #0xf                   	// #15
    1248:	csel	x0, x0, x2, ne  // ne = any
    124c:	cmp	x27, x0
    1250:	mov	w25, #0x4d                  	// #77
    1254:	b.ls	1204 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2bc>  // b.plast
    1258:	mov	x0, x24
    125c:	mov	x1, x28
    1260:	mov	x4, #0x1                   	// #1
    1264:	mov	x3, #0x0                   	// #0
    1268:	mov	x2, #0x0                   	// #0
    126c:	str	x7, [sp, #104]
    1270:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    1274:	add	x26, x26, #0x8
    1278:	ldr	x0, [sp, #240]
    127c:	ldr	x7, [sp, #104]
    1280:	strb	w25, [x0, x28]
    1284:	str	x27, [sp, #248]
    1288:	cmp	x7, x26
    128c:	ldr	x0, [sp, #240]
    1290:	strb	wzr, [x0, x27]
    1294:	b.ne	1220 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2d8>  // b.any
    1298:	add	x26, sp, #0xd8
    129c:	mov	x0, x22
    12a0:	str	x26, [sp, #168]
    12a4:	bl	0 <_ZNK4llvm5Value7getNameEv>
    12a8:	add	x3, sp, #0xc8
    12ac:	mov	x10, x0
    12b0:	mov	x11, x1
    12b4:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    12b8:	add	x1, x1, #0x0
    12bc:	mov	w2, #0x503                 	// #1283
    12c0:	add	x25, sp, #0x110
    12c4:	mov	x0, x26
    12c8:	mov	x8, x25
    12cc:	str	x25, [sp, #136]
    12d0:	str	x3, [sp, #160]
    12d4:	stp	x10, x11, [sp, #200]
    12d8:	stp	x1, x3, [sp, #216]
    12dc:	strh	w2, [sp, #232]
    12e0:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    12e4:	ldp	x1, x2, [sp, #272]
    12e8:	mov	x0, x24
    12ec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    12f0:	ldr	x0, [sp, #272]
    12f4:	add	x1, x25, #0x10
    12f8:	cmp	x0, x1
    12fc:	b.eq	1304 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3bc>  // b.none
    1300:	bl	0 <_ZdlPv>
    1304:	add	x0, x21, #0x0
    1308:	add	x0, x0, #0x8
    130c:	ldar	x1, [x0]
    1310:	cbz	x1, 17b8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x870>
    1314:	add	x0, x21, #0x0
    1318:	add	x0, x0, #0x8
    131c:	ldr	x0, [x0]
    1320:	mov	x1, x0
    1324:	str	x1, [sp, #152]
    1328:	ldr	x0, [x20]
    132c:	cbz	x0, 133c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3f4>
    1330:	mov	x0, x1
    1334:	bl	0 <pthread_mutex_lock>
    1338:	cbnz	w0, 1bcc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc84>
    133c:	add	x0, x21, #0x0
    1340:	add	x0, x0, #0x38
    1344:	ldar	x1, [x0]
    1348:	cbz	x1, 17d0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x888>
    134c:	add	x0, x21, #0x0
    1350:	add	x0, x0, #0x38
    1354:	ldr	x0, [x0]
    1358:	ldr	x26, [x0, #16]
    135c:	str	x0, [sp, #144]
    1360:	add	x0, x0, #0x8
    1364:	str	x0, [sp, #128]
    1368:	mov	x25, x0
    136c:	cbz	x26, 13fc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4b4>
    1370:	ldp	x28, x27, [sp, #240]
    1374:	nop
    1378:	ldr	x4, [x26, #40]
    137c:	cmp	x4, x27
    1380:	csel	x2, x4, x27, ls  // ls = plast
    1384:	cbz	x2, 13a0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x458>
    1388:	ldr	x0, [x26, #32]
    138c:	mov	x1, x28
    1390:	str	x4, [sp, #104]
    1394:	bl	0 <memcmp>
    1398:	ldr	x4, [sp, #104]
    139c:	cbnz	w0, 13bc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x474>
    13a0:	sub	x0, x4, x27
    13a4:	mov	x1, #0x7fffffff            	// #2147483647
    13a8:	cmp	x0, x1
    13ac:	b.gt	13c0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x478>
    13b0:	mov	x1, #0xffffffff80000000    	// #-2147483648
    13b4:	cmp	x0, x1
    13b8:	b.lt	1698 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x750>  // b.tstop
    13bc:	tbnz	w0, #31, 1698 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x750>
    13c0:	mov	x25, x26
    13c4:	ldr	x26, [x26, #16]
    13c8:	cbnz	x26, 1378 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x430>
    13cc:	ldr	x0, [sp, #128]
    13d0:	cmp	x0, x25
    13d4:	b.eq	13fc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4b4>  // b.none
    13d8:	ldr	x26, [x25, #40]
    13dc:	cmp	x27, x26
    13e0:	csel	x2, x27, x26, ls  // ls = plast
    13e4:	cbz	x2, 16a0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x758>
    13e8:	ldr	x1, [x25, #32]
    13ec:	mov	x0, x28
    13f0:	bl	0 <memcmp>
    13f4:	cbz	w0, 16a0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x758>
    13f8:	tbz	w0, #31, 14ac <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x564>
    13fc:	mov	x0, #0x48                  	// #72
    1400:	bl	0 <_Znwm>
    1404:	ldp	x3, x27, [sp, #240]
    1408:	add	x26, x0, #0x30
    140c:	str	x26, [x0, #32]
    1410:	mov	x7, x25
    1414:	add	x4, x0, #0x20
    1418:	mov	x25, x0
    141c:	cmn	x3, x27
    1420:	ccmp	x3, #0x0, #0x0, ne  // ne = any
    1424:	b.eq	1bc0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc78>  // b.none
    1428:	str	x27, [sp, #272]
    142c:	cmp	x27, #0xf
    1430:	b.hi	1a00 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xab8>  // b.pmore
    1434:	cmp	x27, #0x1
    1438:	b.ne	17e8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x8a0>  // b.any
    143c:	ldrb	w1, [x3]
    1440:	mov	x0, x26
    1444:	strb	w1, [x25, #48]
    1448:	str	x27, [x25, #40]
    144c:	mov	x2, x4
    1450:	strb	wzr, [x0, x27]
    1454:	mov	x1, x7
    1458:	ldr	x0, [sp, #144]
    145c:	str	xzr, [x4, #32]
    1460:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1464:	mov	x2, x0
    1468:	mov	x27, x1
    146c:	cbz	x1, 1a30 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xae8>
    1470:	cmp	x0, #0x0
    1474:	ldr	x0, [sp, #128]
    1478:	cset	w26, ne  // ne = any
    147c:	cmp	x0, x1
    1480:	csinc	w26, w26, wzr, ne  // ne = any
    1484:	cbz	w26, 1acc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xb84>
    1488:	ldr	x3, [sp, #128]
    148c:	mov	w0, w26
    1490:	mov	x1, x25
    1494:	mov	x2, x27
    1498:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
    149c:	ldr	x1, [sp, #144]
    14a0:	ldr	x0, [x1, #40]
    14a4:	add	x0, x0, #0x1
    14a8:	str	x0, [x1, #40]
    14ac:	ldr	x25, [x25, #64]
    14b0:	cbz	x25, 1838 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x8f0>
    14b4:	add	x0, x21, #0x0
    14b8:	add	x0, x0, #0x20
    14bc:	ldar	x1, [x0]
    14c0:	cbz	x1, 1820 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x8d8>
    14c4:	add	x0, x21, #0x0
    14c8:	add	x0, x0, #0x20
    14cc:	ldr	x0, [x0]
    14d0:	ldr	x1, [sp, #136]
    14d4:	stp	x22, x25, [sp, #272]
    14d8:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    14dc:	ldr	x0, [x20]
    14e0:	cbz	x0, 14ec <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x5a4>
    14e4:	ldr	x0, [sp, #152]
    14e8:	bl	0 <pthread_mutex_unlock>
    14ec:	ldr	x0, [sp, #240]
    14f0:	add	x24, x24, #0x10
    14f4:	cmp	x0, x24
    14f8:	b.eq	17b0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x868>  // b.none
    14fc:	bl	0 <_ZdlPv>
    1500:	ldp	x27, x28, [sp, #80]
    1504:	b	1030 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xe8>
    1508:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    150c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1510:	add	x2, x2, #0x0
    1514:	add	x1, x1, #0x0
    1518:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    151c:	b	fbc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x74>
    1520:	mov	x0, x4
    1524:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1528:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    152c:	add	x2, x2, #0x0
    1530:	add	x1, x1, #0x0
    1534:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    1538:	b	f80 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x38>
    153c:	ldr	w2, [x0]
    1540:	mov	w1, #0x5f5f                	// #24415
    1544:	movk	w1, #0x616d, lsl #16
    1548:	cmp	w2, w1
    154c:	b.ne	1044 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xfc>  // b.any
    1550:	ldrh	w1, [x0, #4]
    1554:	mov	w0, #0x6e69                	// #28265
    1558:	cmp	w1, w0
    155c:	b.ne	1044 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xfc>  // b.any
    1560:	bl	0 <_ZN4llvm4errsEv>
    1564:	mov	x21, x0
    1568:	ldp	x2, x1, [x0, #16]
    156c:	sub	x2, x2, x1
    1570:	cmp	x2, #0x2e
    1574:	b.ls	1aa0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xb58>  // b.plast
    1578:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    157c:	add	x0, x0, #0x0
    1580:	ldr	x2, [x0, #32]
    1584:	str	x2, [x1, #32]
    1588:	ldp	x2, x3, [x0]
    158c:	stp	x2, x3, [x1]
    1590:	ldp	x2, x3, [x0, #16]
    1594:	stp	x2, x3, [x1, #16]
    1598:	ldur	x0, [x0, #39]
    159c:	stur	x0, [x1, #39]
    15a0:	ldr	x0, [x21, #24]
    15a4:	add	x0, x0, #0x2f
    15a8:	str	x0, [x21, #24]
    15ac:	ldr	x0, [x22]
    15b0:	cbz	x0, 1b74 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc2c>
    15b4:	ldrb	w1, [x0, #8]
    15b8:	cmp	w1, #0xf
    15bc:	b.ne	1b50 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc08>  // b.any
    15c0:	mov	x1, x21
    15c4:	mov	w3, #0x0                   	// #0
    15c8:	mov	w2, #0x0                   	// #0
    15cc:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    15d0:	ldp	x0, x1, [x21, #16]
    15d4:	sub	x0, x0, x1
    15d8:	cmp	x0, #0x7
    15dc:	b.ls	1a88 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xb40>  // b.plast
    15e0:	mov	x0, #0x5f20                	// #24352
    15e4:	movk	x0, #0x6d5f, lsl #16
    15e8:	movk	x0, #0x6961, lsl #32
    15ec:	movk	x0, #0xa6e, lsl #48
    15f0:	str	x0, [x1]
    15f4:	ldr	x0, [x21, #24]
    15f8:	add	x0, x0, #0x8
    15fc:	str	x0, [x21, #24]
    1600:	bl	0 <_ZN4llvm4errsEv>
    1604:	mov	x1, x0
    1608:	ldp	x2, x3, [x0, #16]
    160c:	sub	x2, x2, x3
    1610:	cmp	x2, #0x31
    1614:	b.ls	1ab8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xb70>  // b.plast
    1618:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    161c:	add	x0, x0, #0x0
    1620:	ldp	x4, x5, [x0]
    1624:	stp	x4, x5, [x3]
    1628:	ldrh	w2, [x0, #48]
    162c:	ldp	x4, x5, [x0, #16]
    1630:	stp	x4, x5, [x3, #16]
    1634:	ldp	x4, x5, [x0, #32]
    1638:	stp	x4, x5, [x3, #32]
    163c:	strh	w2, [x3, #48]
    1640:	ldr	x0, [x1, #24]
    1644:	add	x0, x0, #0x32
    1648:	str	x0, [x1, #24]
    164c:	mov	x1, x19
    1650:	mov	x0, x19
    1654:	ldr	x20, [x20]
    1658:	mov	w2, #0x1                   	// #1
    165c:	stp	xzr, xzr, [x1, #24]!
    1660:	str	xzr, [x1, #16]
    1664:	str	xzr, [x0], #8
    1668:	str	xzr, [x19, #8]
    166c:	str	w2, [x0, #8]
    1670:	cbz	x20, 10bc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x174>
    1674:	mov	x0, x23
    1678:	bl	0 <pthread_mutex_unlock>
    167c:	mov	x0, x19
    1680:	ldp	x19, x20, [sp, #16]
    1684:	ldp	x21, x22, [sp, #32]
    1688:	ldp	x23, x24, [sp, #48]
    168c:	ldp	x25, x26, [sp, #64]
    1690:	ldp	x29, x30, [sp], #304
    1694:	ret
    1698:	ldr	x26, [x26, #24]
    169c:	b	13c8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x480>
    16a0:	sub	x0, x27, x26
    16a4:	mov	x1, #0x7fffffff            	// #2147483647
    16a8:	cmp	x0, x1
    16ac:	b.gt	14ac <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x564>
    16b0:	mov	x1, #0xffffffff80000000    	// #-2147483648
    16b4:	cmp	x0, x1
    16b8:	b.ge	13f8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4b0>  // b.tcont
    16bc:	b	13fc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4b4>
    16c0:	cmp	w0, #0xe
    16c4:	mov	w25, #0x41                  	// #65
    16c8:	b.eq	11e4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x29c>  // b.none
    16cc:	cmp	w0, #0xf
    16d0:	mov	w25, #0x50                  	// #80
    16d4:	b.eq	11e4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x29c>  // b.none
    16d8:	cmp	w0, #0xd
    16dc:	cset	w25, ne  // ne = any
    16e0:	add	w25, w25, #0x54
    16e4:	b	11e4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x29c>
    16e8:	cmp	w0, #0xb
    16ec:	mov	w25, #0x55                  	// #85
    16f0:	b.ne	11e4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x29c>  // b.any
    16f4:	ldr	w0, [x2, #8]
    16f8:	lsr	w0, w0, #8
    16fc:	cmp	w0, #0x10
    1700:	b.eq	1a58 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xb10>  // b.none
    1704:	b.hi	1790 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x848>  // b.pmore
    1708:	cmp	w0, #0x1
    170c:	mov	w25, #0x6f                  	// #111
    1710:	b.eq	11e4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x29c>  // b.none
    1714:	cmp	w0, #0x8
    1718:	mov	w25, #0x4e                  	// #78
    171c:	mov	w0, #0x42                  	// #66
    1720:	csel	w25, w25, w0, ne  // ne = any
    1724:	b	11e4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x29c>
    1728:	cmp	w1, #0xe
    172c:	mov	w0, #0x41                  	// #65
    1730:	b.eq	117c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x234>  // b.none
    1734:	cmp	w1, #0xf
    1738:	mov	w0, #0x50                  	// #80
    173c:	b.eq	117c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x234>  // b.none
    1740:	cmp	w1, #0xd
    1744:	cset	w0, ne  // ne = any
    1748:	add	w0, w0, #0x54
    174c:	b	117c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x234>
    1750:	cmp	w1, #0xb
    1754:	mov	w0, #0x55                  	// #85
    1758:	b.ne	117c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x234>  // b.any
    175c:	ldr	w1, [x3, #8]
    1760:	lsr	w1, w1, #8
    1764:	cmp	w1, #0x10
    1768:	b.eq	1818 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x8d0>  // b.none
    176c:	b.hi	1a68 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xb20>  // b.pmore
    1770:	cmp	w1, #0x1
    1774:	mov	w0, #0x6f                  	// #111
    1778:	b.eq	117c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x234>  // b.none
    177c:	cmp	w1, #0x8
    1780:	mov	w0, #0x4e                  	// #78
    1784:	mov	w1, #0x42                  	// #66
    1788:	csel	w0, w0, w1, ne  // ne = any
    178c:	b	117c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x234>
    1790:	cmp	w0, #0x20
    1794:	mov	w25, #0x49                  	// #73
    1798:	b.eq	11e4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x29c>  // b.none
    179c:	cmp	w0, #0x40
    17a0:	mov	w25, #0x4e                  	// #78
    17a4:	mov	w0, #0x4c                  	// #76
    17a8:	csel	w25, w25, w0, ne  // ne = any
    17ac:	b	11e4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x29c>
    17b0:	ldp	x27, x28, [sp, #80]
    17b4:	b	1030 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xe8>
    17b8:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    17bc:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    17c0:	add	x2, x2, #0x0
    17c4:	add	x1, x1, #0x0
    17c8:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    17cc:	b	1314 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3cc>
    17d0:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    17d4:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    17d8:	add	x2, x2, #0x0
    17dc:	add	x1, x1, #0x0
    17e0:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    17e4:	b	134c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x404>
    17e8:	mov	x0, x26
    17ec:	cbz	x27, 1448 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x500>
    17f0:	mov	x2, x27
    17f4:	mov	x1, x3
    17f8:	str	x7, [sp, #104]
    17fc:	str	x4, [sp, #176]
    1800:	bl	0 <memcpy>
    1804:	ldr	x0, [x25, #32]
    1808:	ldr	x7, [sp, #104]
    180c:	ldr	x4, [sp, #176]
    1810:	ldr	x27, [sp, #272]
    1814:	b	1448 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x500>
    1818:	mov	w0, #0x53                  	// #83
    181c:	b	117c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x234>
    1820:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1824:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1828:	add	x2, x2, #0x0
    182c:	add	x1, x1, #0x0
    1830:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    1834:	b	14c4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x57c>
    1838:	add	x0, x21, #0x0
    183c:	add	x0, x0, #0x38
    1840:	ldar	x1, [x0]
    1844:	cbz	x1, 1b24 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xbdc>
    1848:	add	x0, x21, #0x0
    184c:	add	x0, x0, #0x38
    1850:	ldr	x25, [x0]
    1854:	mov	x0, x22
    1858:	str	x25, [sp, #144]
    185c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    1860:	mov	x10, x0
    1864:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1868:	add	x2, x0, #0x0
    186c:	str	x2, [sp, #216]
    1870:	mov	x11, x1
    1874:	ldr	x8, [sp, #136]
    1878:	mov	w1, #0x503                 	// #1283
    187c:	ldr	x2, [sp, #160]
    1880:	add	x26, x25, #0x8
    1884:	ldr	x0, [sp, #168]
    1888:	str	x26, [sp, #128]
    188c:	stp	x10, x11, [sp, #200]
    1890:	str	x2, [sp, #224]
    1894:	strh	w1, [sp, #232]
    1898:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    189c:	ldr	x25, [x25, #16]
    18a0:	cbz	x25, 1b3c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xbf4>
    18a4:	str	x26, [sp, #104]
    18a8:	ldr	x27, [sp, #272]
    18ac:	ldr	x26, [sp, #280]
    18b0:	ldr	x28, [x25, #40]
    18b4:	cmp	x28, x26
    18b8:	csel	x2, x28, x26, ls  // ls = plast
    18bc:	cbz	x2, 18d0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x988>
    18c0:	ldr	x0, [x25, #32]
    18c4:	mov	x1, x27
    18c8:	bl	0 <memcmp>
    18cc:	cbnz	w0, 18ec <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x9a4>
    18d0:	sub	x0, x28, x26
    18d4:	mov	x1, #0x7fffffff            	// #2147483647
    18d8:	cmp	x0, x1
    18dc:	b.gt	18f0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x9a8>
    18e0:	mov	x1, #0xffffffff80000000    	// #-2147483648
    18e4:	cmp	x0, x1
    18e8:	b.lt	19f8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xab0>  // b.tstop
    18ec:	tbnz	w0, #31, 19f8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xab0>
    18f0:	str	x25, [sp, #104]
    18f4:	ldr	x25, [x25, #16]
    18f8:	cbnz	x25, 18b0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x968>
    18fc:	ldr	x0, [sp, #104]
    1900:	ldr	x1, [sp, #128]
    1904:	cmp	x1, x0
    1908:	b.eq	194c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa04>  // b.none
    190c:	ldr	x25, [x0, #40]
    1910:	cmp	x26, x25
    1914:	csel	x2, x26, x25, ls  // ls = plast
    1918:	cbz	x2, 192c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x9e4>
    191c:	ldr	x1, [x0, #32]
    1920:	mov	x0, x27
    1924:	bl	0 <memcmp>
    1928:	cbnz	w0, 1948 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa00>
    192c:	sub	x0, x26, x25
    1930:	mov	x1, #0x7fffffff            	// #2147483647
    1934:	cmp	x0, x1
    1938:	b.gt	1968 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa20>
    193c:	mov	x1, #0xffffffff80000000    	// #-2147483648
    1940:	cmp	x0, x1
    1944:	b.lt	194c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa04>  // b.tstop
    1948:	tbz	w0, #31, 1968 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa20>
    194c:	ldp	x3, x0, [sp, #136]
    1950:	add	x2, sp, #0xc0
    1954:	ldr	x1, [sp, #104]
    1958:	str	x3, [sp, #192]
    195c:	bl	de0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0>
    1960:	str	x0, [sp, #104]
    1964:	ldr	x27, [sp, #272]
    1968:	ldr	x0, [sp, #136]
    196c:	add	x0, x0, #0x10
    1970:	cmp	x27, x0
    1974:	ldr	x0, [sp, #104]
    1978:	ldr	x25, [x0, #64]
    197c:	b.eq	1988 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa40>  // b.none
    1980:	mov	x0, x27
    1984:	bl	0 <_ZdlPv>
    1988:	cbnz	x25, 14b4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x56c>
    198c:	mov	x0, x22
    1990:	bl	0 <_ZNK4llvm5Value7getNameEv>
    1994:	mov	x10, x0
    1998:	mov	x11, x1
    199c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    19a0:	add	x1, x0, #0x0
    19a4:	str	x1, [sp, #216]
    19a8:	mov	w2, #0x503                 	// #1283
    19ac:	ldr	x1, [sp, #160]
    19b0:	stp	x10, x11, [sp, #200]
    19b4:	ldr	x0, [sp, #168]
    19b8:	str	x1, [sp, #224]
    19bc:	ldr	x25, [sp, #136]
    19c0:	strh	w2, [sp, #232]
    19c4:	mov	x8, x25
    19c8:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    19cc:	ldr	x0, [sp, #272]
    19d0:	bl	0 <_ZN4llvm3sys14DynamicLibrary24SearchForAddressOfSymbolEPKc>
    19d4:	ldr	x2, [sp, #272]
    19d8:	add	x1, x25, #0x10
    19dc:	mov	x25, x0
    19e0:	cmp	x2, x1
    19e4:	b.eq	19f0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xaa8>  // b.none
    19e8:	mov	x0, x2
    19ec:	bl	0 <_ZdlPv>
    19f0:	cbz	x25, 14dc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x594>
    19f4:	b	14b4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x56c>
    19f8:	ldr	x25, [x25, #24]
    19fc:	b	18f8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x9b0>
    1a00:	ldr	x1, [sp, #136]
    1a04:	mov	x0, x4
    1a08:	mov	x2, #0x0                   	// #0
    1a0c:	str	x4, [sp, #104]
    1a10:	stp	x3, x7, [sp, #176]
    1a14:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1a18:	ldr	x1, [sp, #272]
    1a1c:	str	x0, [x25, #32]
    1a20:	str	x1, [x25, #48]
    1a24:	ldr	x4, [sp, #104]
    1a28:	ldp	x3, x7, [sp, #176]
    1a2c:	b	17f0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x8a8>
    1a30:	ldr	x0, [x25, #32]
    1a34:	cmp	x26, x0
    1a38:	b.eq	1a48 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xb00>  // b.none
    1a3c:	str	x2, [sp, #104]
    1a40:	bl	0 <_ZdlPv>
    1a44:	ldr	x2, [sp, #104]
    1a48:	mov	x0, x25
    1a4c:	mov	x25, x2
    1a50:	bl	0 <_ZdlPv>
    1a54:	b	14ac <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x564>
    1a58:	mov	w25, #0x53                  	// #83
    1a5c:	b	11e4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x29c>
    1a60:	mov	w0, #0x4d                  	// #77
    1a64:	b	117c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x234>
    1a68:	cmp	w1, #0x20
    1a6c:	mov	w0, #0x49                  	// #73
    1a70:	b.eq	117c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x234>  // b.none
    1a74:	cmp	w1, #0x40
    1a78:	mov	w0, #0x4e                  	// #78
    1a7c:	mov	w1, #0x4c                  	// #76
    1a80:	csel	w0, w0, w1, ne  // ne = any
    1a84:	b	117c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x234>
    1a88:	mov	x0, x21
    1a8c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1a90:	mov	x2, #0x8                   	// #8
    1a94:	add	x1, x1, #0x0
    1a98:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1a9c:	b	1600 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x6b8>
    1aa0:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1aa4:	mov	x2, #0x2f                  	// #47
    1aa8:	add	x1, x1, #0x0
    1aac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ab0:	mov	x21, x0
    1ab4:	b	15ac <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x664>
    1ab8:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1abc:	mov	x2, #0x32                  	// #50
    1ac0:	add	x1, x1, #0x0
    1ac4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ac8:	b	164c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x704>
    1acc:	ldr	x4, [x25, #40]
    1ad0:	ldr	x3, [x1, #40]
    1ad4:	cmp	x4, x3
    1ad8:	csel	x2, x4, x3, ls  // ls = plast
    1adc:	cbz	x2, 1b00 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xbb8>
    1ae0:	ldr	x0, [x25, #32]
    1ae4:	str	x4, [sp, #104]
    1ae8:	ldr	x1, [x1, #32]
    1aec:	str	x3, [sp, #176]
    1af0:	bl	0 <memcmp>
    1af4:	ldr	x4, [sp, #104]
    1af8:	ldr	x3, [sp, #176]
    1afc:	cbnz	w0, 1b1c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xbd4>
    1b00:	sub	x0, x4, x3
    1b04:	mov	x1, #0x7fffffff            	// #2147483647
    1b08:	cmp	x0, x1
    1b0c:	b.gt	1488 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x540>
    1b10:	mov	x1, #0xffffffff80000000    	// #-2147483648
    1b14:	cmp	x0, x1
    1b18:	b.lt	1b48 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc00>  // b.tstop
    1b1c:	lsr	w26, w0, #31
    1b20:	b	1488 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x540>
    1b24:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1b28:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1b2c:	add	x2, x2, #0x0
    1b30:	add	x1, x1, #0x0
    1b34:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    1b38:	b	1848 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x900>
    1b3c:	ldr	x0, [sp, #128]
    1b40:	str	x0, [sp, #104]
    1b44:	b	194c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa04>
    1b48:	mov	w26, #0x1                   	// #1
    1b4c:	b	1488 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x540>
    1b50:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1b54:	add	x3, x3, #0x0
    1b58:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1b5c:	stp	x27, x28, [sp, #80]
    1b60:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1b64:	add	x1, x1, #0x0
    1b68:	add	x0, x0, #0x0
    1b6c:	mov	w2, #0x108                 	// #264
    1b70:	bl	0 <__assert_fail>
    1b74:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1b78:	add	x3, x3, #0x0
    1b7c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1b80:	stp	x27, x28, [sp, #80]
    1b84:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1b88:	add	x1, x1, #0x0
    1b8c:	add	x0, x0, #0x0
    1b90:	mov	w2, #0x69                  	// #105
    1b94:	bl	0 <__assert_fail>
    1b98:	stp	x27, x28, [sp, #80]
    1b9c:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1ba0:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1ba4:	add	x3, x3, #0x0
    1ba8:	b	1b84 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc3c>
    1bac:	stp	x27, x28, [sp, #80]
    1bb0:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1bb4:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1bb8:	add	x3, x3, #0x0
    1bbc:	b	1b60 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc18>
    1bc0:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1bc4:	add	x0, x0, #0x0
    1bc8:	bl	0 <_ZSt19__throw_logic_errorPKc>
    1bcc:	bl	0 <_ZSt20__throw_system_errori>
    1bd0:	stp	x25, x26, [sp, #64]
    1bd4:	stp	x27, x28, [sp, #80]
    1bd8:	bl	0 <_ZSt20__throw_system_errori>
    1bdc:	mov	w0, #0x1                   	// #1
    1be0:	stp	x25, x26, [sp, #64]
    1be4:	stp	x27, x28, [sp, #80]
    1be8:	bl	0 <_ZSt20__throw_system_errori>
    1bec:	nop

0000000000001bf0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv>:
    1bf0:	stp	x29, x30, [sp, #-144]!
    1bf4:	mov	x29, sp
    1bf8:	stp	x19, x20, [sp, #16]
    1bfc:	adrp	x20, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1c00:	add	x0, x20, #0x0
    1c04:	add	x0, x0, #0x8
    1c08:	stp	x21, x22, [sp, #32]
    1c0c:	stp	x23, x24, [sp, #48]
    1c10:	stp	x25, x26, [sp, #64]
    1c14:	stp	x27, x28, [sp, #80]
    1c18:	ldar	x1, [x0]
    1c1c:	cbz	x1, 2c3c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x104c>
    1c20:	add	x0, x20, #0x0
    1c24:	add	x0, x0, #0x8
    1c28:	ldr	x23, [x0]
    1c2c:	adrp	x21, 0 <__pthread_key_create>
    1c30:	ldr	x0, [x21]
    1c34:	cbz	x0, 1c44 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x54>
    1c38:	mov	x0, x23
    1c3c:	bl	0 <pthread_mutex_lock>
    1c40:	cbnz	w0, 2dd4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x11e4>
    1c44:	add	x0, x20, #0x0
    1c48:	add	x0, x0, #0x38
    1c4c:	ldar	x1, [x0]
    1c50:	cbz	x1, 2c54 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1064>
    1c54:	add	x0, x20, #0x0
    1c58:	add	x0, x0, #0x38
    1c5c:	ldr	x22, [x0]
    1c60:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1c64:	add	x0, x0, #0x0
    1c68:	add	x19, sp, #0x70
    1c6c:	strb	wzr, [sp, #140]
    1c70:	add	x1, x19, #0x10
    1c74:	str	x1, [sp, #112]
    1c78:	ldr	x3, [x0]
    1c7c:	str	x3, [sp, #128]
    1c80:	ldr	w0, [x0, #8]
    1c84:	mov	x2, #0xc                   	// #12
    1c88:	str	w0, [x19, #24]
    1c8c:	add	x24, x22, #0x8
    1c90:	ldr	x27, [x22, #16]
    1c94:	str	x2, [sp, #120]
    1c98:	cbz	x27, 1da4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1b4>
    1c9c:	mov	x28, x1
    1ca0:	mov	x26, x24
    1ca4:	nop
    1ca8:	ldp	x0, x25, [x27, #32]
    1cac:	cmp	x25, #0xc
    1cb0:	b.hi	1d6c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x17c>  // b.pmore
    1cb4:	mov	x2, #0xfffffffffffffff4    	// #-12
    1cb8:	cbnz	x25, 1d50 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x160>
    1cbc:	mov	w0, w2
    1cc0:	tbnz	w0, #31, 1d98 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1a8>
    1cc4:	mov	x26, x27
    1cc8:	ldr	x27, [x27, #16]
    1ccc:	cbnz	x27, 1ca8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb8>
    1cd0:	cmp	x24, x26
    1cd4:	b.eq	1da8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1b8>  // b.none
    1cd8:	ldp	x1, x24, [x26, #32]
    1cdc:	cmp	x24, #0xb
    1ce0:	b.ls	2d20 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1130>  // b.plast
    1ce4:	add	x0, x19, #0x10
    1ce8:	mov	x2, #0xc                   	// #12
    1cec:	bl	0 <memcmp>
    1cf0:	cbnz	w0, 1d18 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x128>
    1cf4:	mov	x25, #0xc                   	// #12
    1cf8:	sub	x25, x25, x24
    1cfc:	mov	x0, #0x7fffffff            	// #2147483647
    1d00:	cmp	x25, x0
    1d04:	b.gt	1d1c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x12c>
    1d08:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1d0c:	cmp	x25, x0
    1d10:	b.lt	1da8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1b8>  // b.tstop
    1d14:	mov	w0, w25
    1d18:	tbnz	w0, #31, 1da8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1b8>
    1d1c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1d20:	add	x0, x0, #0x0
    1d24:	str	x0, [x26, #64]
    1d28:	add	x0, x20, #0x0
    1d2c:	add	x0, x0, #0x38
    1d30:	ldar	x1, [x0]
    1d34:	cbnz	x1, 1df0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x200>
    1d38:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1d3c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1d40:	add	x2, x2, #0x0
    1d44:	add	x1, x1, #0x0
    1d48:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    1d4c:	b	1df0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x200>
    1d50:	mov	x2, x25
    1d54:	mov	x1, x28
    1d58:	bl	0 <memcmp>
    1d5c:	cbnz	w0, 1cc0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd0>
    1d60:	sub	x2, x25, #0xc
    1d64:	mov	w0, w2
    1d68:	b	1cc0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd0>
    1d6c:	mov	x1, x28
    1d70:	mov	x2, #0xc                   	// #12
    1d74:	bl	0 <memcmp>
    1d78:	cbnz	w0, 1cc0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd0>
    1d7c:	sub	x2, x25, #0xc
    1d80:	mov	x0, #0x7fffffff            	// #2147483647
    1d84:	cmp	x2, x0
    1d88:	b.gt	1cc4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd4>
    1d8c:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1d90:	cmp	x2, x0
    1d94:	b.ge	1cbc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xcc>  // b.tcont
    1d98:	ldr	x27, [x27, #24]
    1d9c:	cbnz	x27, 1ca8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb8>
    1da0:	b	1cd0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe0>
    1da4:	mov	x26, x24
    1da8:	add	x2, sp, #0x68
    1dac:	mov	x1, x26
    1db0:	mov	x0, x22
    1db4:	str	x19, [sp, #104]
    1db8:	bl	de0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0>
    1dbc:	mov	x2, x0
    1dc0:	ldr	x0, [sp, #112]
    1dc4:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1dc8:	add	x1, x1, #0x0
    1dcc:	str	x1, [x2, #64]
    1dd0:	add	x1, x19, #0x10
    1dd4:	cmp	x0, x1
    1dd8:	b.eq	1de0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1f0>  // b.none
    1ddc:	bl	0 <_ZdlPv>
    1de0:	add	x0, x20, #0x0
    1de4:	add	x0, x0, #0x38
    1de8:	ldar	x1, [x0]
    1dec:	cbz	x1, 1d38 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x148>
    1df0:	add	x0, x20, #0x0
    1df4:	add	x0, x0, #0x38
    1df8:	ldr	x22, [x0]
    1dfc:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1e00:	add	x0, x0, #0x0
    1e04:	add	x1, x19, #0x10
    1e08:	str	x1, [sp, #112]
    1e0c:	strb	wzr, [sp, #138]
    1e10:	mov	x2, #0xa                   	// #10
    1e14:	ldr	x3, [x0]
    1e18:	str	x3, [sp, #128]
    1e1c:	ldrh	w0, [x0, #8]
    1e20:	add	x24, x22, #0x8
    1e24:	strh	w0, [x19, #24]
    1e28:	ldr	x27, [x22, #16]
    1e2c:	str	x2, [sp, #120]
    1e30:	cbz	x27, 1f3c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x34c>
    1e34:	mov	x28, x1
    1e38:	mov	x26, x24
    1e3c:	nop
    1e40:	ldp	x0, x25, [x27, #32]
    1e44:	cmp	x25, #0xa
    1e48:	b.hi	1f04 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x314>  // b.pmore
    1e4c:	mov	x2, #0xfffffffffffffff6    	// #-10
    1e50:	cbnz	x25, 1ee8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2f8>
    1e54:	mov	w0, w2
    1e58:	tbnz	w0, #31, 1f30 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x340>
    1e5c:	mov	x26, x27
    1e60:	ldr	x27, [x27, #16]
    1e64:	cbnz	x27, 1e40 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x250>
    1e68:	cmp	x24, x26
    1e6c:	b.eq	1f40 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x350>  // b.none
    1e70:	ldp	x1, x24, [x26, #32]
    1e74:	cmp	x24, #0x9
    1e78:	b.ls	2d8c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x119c>  // b.plast
    1e7c:	add	x0, x19, #0x10
    1e80:	mov	x2, #0xa                   	// #10
    1e84:	bl	0 <memcmp>
    1e88:	cbnz	w0, 1eb0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2c0>
    1e8c:	mov	x25, #0xa                   	// #10
    1e90:	sub	x25, x25, x24
    1e94:	mov	x0, #0x7fffffff            	// #2147483647
    1e98:	cmp	x25, x0
    1e9c:	b.gt	1eb4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2c4>
    1ea0:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1ea4:	cmp	x25, x0
    1ea8:	b.lt	1f40 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x350>  // b.tstop
    1eac:	mov	w0, w25
    1eb0:	tbnz	w0, #31, 1f40 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x350>
    1eb4:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1eb8:	add	x0, x0, #0x0
    1ebc:	str	x0, [x26, #64]
    1ec0:	add	x0, x20, #0x0
    1ec4:	add	x0, x0, #0x38
    1ec8:	ldar	x1, [x0]
    1ecc:	cbnz	x1, 1f88 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x398>
    1ed0:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1ed4:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1ed8:	add	x2, x2, #0x0
    1edc:	add	x1, x1, #0x0
    1ee0:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    1ee4:	b	1f88 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x398>
    1ee8:	mov	x2, x25
    1eec:	mov	x1, x28
    1ef0:	bl	0 <memcmp>
    1ef4:	cbnz	w0, 1e58 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x268>
    1ef8:	sub	x2, x25, #0xa
    1efc:	mov	w0, w2
    1f00:	b	1e58 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x268>
    1f04:	mov	x1, x28
    1f08:	mov	x2, #0xa                   	// #10
    1f0c:	bl	0 <memcmp>
    1f10:	cbnz	w0, 1e58 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x268>
    1f14:	sub	x2, x25, #0xa
    1f18:	mov	x0, #0x7fffffff            	// #2147483647
    1f1c:	cmp	x2, x0
    1f20:	b.gt	1e5c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x26c>
    1f24:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1f28:	cmp	x2, x0
    1f2c:	b.ge	1e54 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x264>  // b.tcont
    1f30:	ldr	x27, [x27, #24]
    1f34:	cbnz	x27, 1e40 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x250>
    1f38:	b	1e68 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x278>
    1f3c:	mov	x26, x24
    1f40:	add	x2, sp, #0x68
    1f44:	mov	x1, x26
    1f48:	mov	x0, x22
    1f4c:	str	x19, [sp, #104]
    1f50:	bl	de0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0>
    1f54:	mov	x2, x0
    1f58:	ldr	x0, [sp, #112]
    1f5c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1f60:	add	x1, x1, #0x0
    1f64:	str	x1, [x2, #64]
    1f68:	add	x1, x19, #0x10
    1f6c:	cmp	x0, x1
    1f70:	b.eq	1f78 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x388>  // b.none
    1f74:	bl	0 <_ZdlPv>
    1f78:	add	x0, x20, #0x0
    1f7c:	add	x0, x0, #0x38
    1f80:	ldar	x1, [x0]
    1f84:	cbz	x1, 1ed0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2e0>
    1f88:	add	x0, x20, #0x0
    1f8c:	add	x0, x0, #0x38
    1f90:	ldr	x22, [x0]
    1f94:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    1f98:	add	x0, x0, #0x0
    1f9c:	add	x1, x19, #0x10
    1fa0:	str	x1, [sp, #112]
    1fa4:	strb	wzr, [sp, #139]
    1fa8:	mov	x2, #0xb                   	// #11
    1fac:	ldr	x3, [x0]
    1fb0:	str	x3, [sp, #128]
    1fb4:	ldur	w0, [x0, #7]
    1fb8:	add	x24, x22, #0x8
    1fbc:	stur	w0, [x19, #23]
    1fc0:	ldr	x27, [x22, #16]
    1fc4:	str	x2, [sp, #120]
    1fc8:	cbz	x27, 20d4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4e4>
    1fcc:	mov	x28, x1
    1fd0:	mov	x26, x24
    1fd4:	nop
    1fd8:	ldp	x0, x25, [x27, #32]
    1fdc:	cmp	x25, #0xb
    1fe0:	b.hi	209c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4ac>  // b.pmore
    1fe4:	mov	x2, #0xfffffffffffffff5    	// #-11
    1fe8:	cbnz	x25, 2080 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x490>
    1fec:	mov	w0, w2
    1ff0:	tbnz	w0, #31, 20c8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4d8>
    1ff4:	mov	x26, x27
    1ff8:	ldr	x27, [x27, #16]
    1ffc:	cbnz	x27, 1fd8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x3e8>
    2000:	cmp	x24, x26
    2004:	b.eq	20d8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4e8>  // b.none
    2008:	ldp	x1, x24, [x26, #32]
    200c:	cmp	x24, #0xa
    2010:	b.ls	2db0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x11c0>  // b.plast
    2014:	add	x0, x19, #0x10
    2018:	mov	x2, #0xb                   	// #11
    201c:	bl	0 <memcmp>
    2020:	cbnz	w0, 2048 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x458>
    2024:	mov	x25, #0xb                   	// #11
    2028:	sub	x25, x25, x24
    202c:	mov	x0, #0x7fffffff            	// #2147483647
    2030:	cmp	x25, x0
    2034:	b.gt	204c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x45c>
    2038:	mov	x0, #0xffffffff80000000    	// #-2147483648
    203c:	cmp	x25, x0
    2040:	b.lt	20d8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4e8>  // b.tstop
    2044:	mov	w0, w25
    2048:	tbnz	w0, #31, 20d8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4e8>
    204c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2050:	add	x0, x0, #0x0
    2054:	str	x0, [x26, #64]
    2058:	add	x0, x20, #0x0
    205c:	add	x0, x0, #0x38
    2060:	ldar	x1, [x0]
    2064:	cbnz	x1, 2120 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x530>
    2068:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    206c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2070:	add	x2, x2, #0x0
    2074:	add	x1, x1, #0x0
    2078:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    207c:	b	2120 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x530>
    2080:	mov	x2, x25
    2084:	mov	x1, x28
    2088:	bl	0 <memcmp>
    208c:	cbnz	w0, 1ff0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x400>
    2090:	sub	x2, x25, #0xb
    2094:	mov	w0, w2
    2098:	b	1ff0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x400>
    209c:	mov	x1, x28
    20a0:	mov	x2, #0xb                   	// #11
    20a4:	bl	0 <memcmp>
    20a8:	cbnz	w0, 1ff0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x400>
    20ac:	sub	x2, x25, #0xb
    20b0:	mov	x0, #0x7fffffff            	// #2147483647
    20b4:	cmp	x2, x0
    20b8:	b.gt	1ff4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x404>
    20bc:	mov	x0, #0xffffffff80000000    	// #-2147483648
    20c0:	cmp	x2, x0
    20c4:	b.ge	1fec <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x3fc>  // b.tcont
    20c8:	ldr	x27, [x27, #24]
    20cc:	cbnz	x27, 1fd8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x3e8>
    20d0:	b	2000 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x410>
    20d4:	mov	x26, x24
    20d8:	add	x2, sp, #0x68
    20dc:	mov	x1, x26
    20e0:	mov	x0, x22
    20e4:	str	x19, [sp, #104]
    20e8:	bl	de0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0>
    20ec:	mov	x2, x0
    20f0:	ldr	x0, [sp, #112]
    20f4:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    20f8:	add	x1, x1, #0x0
    20fc:	str	x1, [x2, #64]
    2100:	add	x1, x19, #0x10
    2104:	cmp	x0, x1
    2108:	b.eq	2110 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x520>  // b.none
    210c:	bl	0 <_ZdlPv>
    2110:	add	x0, x20, #0x0
    2114:	add	x0, x0, #0x38
    2118:	ldar	x1, [x0]
    211c:	cbz	x1, 2068 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x478>
    2120:	add	x0, x20, #0x0
    2124:	add	x0, x0, #0x38
    2128:	ldr	x22, [x0]
    212c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2130:	add	x0, x0, #0x0
    2134:	add	x1, x19, #0x10
    2138:	str	x1, [sp, #112]
    213c:	strb	wzr, [sp, #140]
    2140:	mov	x2, #0xc                   	// #12
    2144:	ldr	x3, [x0]
    2148:	str	x3, [sp, #128]
    214c:	ldr	w0, [x0, #8]
    2150:	add	x24, x22, #0x8
    2154:	str	w0, [x19, #24]
    2158:	ldr	x27, [x22, #16]
    215c:	str	x2, [sp, #120]
    2160:	cbz	x27, 226c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x67c>
    2164:	mov	x28, x1
    2168:	mov	x26, x24
    216c:	nop
    2170:	ldp	x0, x25, [x27, #32]
    2174:	cmp	x25, #0xc
    2178:	b.hi	2234 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x644>  // b.pmore
    217c:	mov	x2, #0xfffffffffffffff4    	// #-12
    2180:	cbnz	x25, 2218 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x628>
    2184:	mov	w0, w2
    2188:	tbnz	w0, #31, 2260 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x670>
    218c:	mov	x26, x27
    2190:	ldr	x27, [x27, #16]
    2194:	cbnz	x27, 2170 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x580>
    2198:	cmp	x24, x26
    219c:	b.eq	2270 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x680>  // b.none
    21a0:	ldp	x1, x24, [x26, #32]
    21a4:	cmp	x24, #0xb
    21a8:	b.ls	2c6c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x107c>  // b.plast
    21ac:	add	x0, x19, #0x10
    21b0:	mov	x2, #0xc                   	// #12
    21b4:	bl	0 <memcmp>
    21b8:	cbnz	w0, 21e0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x5f0>
    21bc:	mov	x25, #0xc                   	// #12
    21c0:	sub	x25, x25, x24
    21c4:	mov	x0, #0x7fffffff            	// #2147483647
    21c8:	cmp	x25, x0
    21cc:	b.gt	21e4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x5f4>
    21d0:	mov	x0, #0xffffffff80000000    	// #-2147483648
    21d4:	cmp	x25, x0
    21d8:	b.lt	2270 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x680>  // b.tstop
    21dc:	mov	w0, w25
    21e0:	tbnz	w0, #31, 2270 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x680>
    21e4:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    21e8:	add	x0, x0, #0x0
    21ec:	str	x0, [x26, #64]
    21f0:	add	x0, x20, #0x0
    21f4:	add	x0, x0, #0x38
    21f8:	ldar	x1, [x0]
    21fc:	cbnz	x1, 22b8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x6c8>
    2200:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2204:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2208:	add	x2, x2, #0x0
    220c:	add	x1, x1, #0x0
    2210:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2214:	b	22b8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x6c8>
    2218:	mov	x2, x25
    221c:	mov	x1, x28
    2220:	bl	0 <memcmp>
    2224:	cbnz	w0, 2188 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x598>
    2228:	sub	x2, x25, #0xc
    222c:	mov	w0, w2
    2230:	b	2188 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x598>
    2234:	mov	x1, x28
    2238:	mov	x2, #0xc                   	// #12
    223c:	bl	0 <memcmp>
    2240:	cbnz	w0, 2188 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x598>
    2244:	sub	x2, x25, #0xc
    2248:	mov	x0, #0x7fffffff            	// #2147483647
    224c:	cmp	x2, x0
    2250:	b.gt	218c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x59c>
    2254:	mov	x0, #0xffffffff80000000    	// #-2147483648
    2258:	cmp	x2, x0
    225c:	b.ge	2184 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x594>  // b.tcont
    2260:	ldr	x27, [x27, #24]
    2264:	cbnz	x27, 2170 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x580>
    2268:	b	2198 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x5a8>
    226c:	mov	x26, x24
    2270:	add	x2, sp, #0x68
    2274:	mov	x1, x26
    2278:	mov	x0, x22
    227c:	str	x19, [sp, #104]
    2280:	bl	de0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0>
    2284:	mov	x2, x0
    2288:	ldr	x0, [sp, #112]
    228c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2290:	add	x1, x1, #0x0
    2294:	str	x1, [x2, #64]
    2298:	add	x1, x19, #0x10
    229c:	cmp	x0, x1
    22a0:	b.eq	22a8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x6b8>  // b.none
    22a4:	bl	0 <_ZdlPv>
    22a8:	add	x0, x20, #0x0
    22ac:	add	x0, x0, #0x38
    22b0:	ldar	x1, [x0]
    22b4:	cbz	x1, 2200 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x610>
    22b8:	add	x0, x20, #0x0
    22bc:	add	x0, x0, #0x38
    22c0:	ldr	x22, [x0]
    22c4:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    22c8:	add	x0, x0, #0x0
    22cc:	add	x1, x19, #0x10
    22d0:	str	x1, [sp, #112]
    22d4:	strb	wzr, [sp, #141]
    22d8:	mov	x2, #0xd                   	// #13
    22dc:	ldr	x3, [x0]
    22e0:	str	x3, [sp, #128]
    22e4:	ldur	x0, [x0, #5]
    22e8:	stur	x0, [x19, #21]
    22ec:	add	x24, x22, #0x8
    22f0:	ldr	x27, [x22, #16]
    22f4:	str	x2, [sp, #120]
    22f8:	cbz	x27, 2404 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x814>
    22fc:	mov	x28, x1
    2300:	mov	x26, x24
    2304:	nop
    2308:	ldp	x0, x25, [x27, #32]
    230c:	cmp	x25, #0xd
    2310:	b.hi	23cc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x7dc>  // b.pmore
    2314:	mov	x2, #0xfffffffffffffff3    	// #-13
    2318:	cbnz	x25, 23b0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x7c0>
    231c:	mov	w0, w2
    2320:	tbnz	w0, #31, 23f8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x808>
    2324:	mov	x26, x27
    2328:	ldr	x27, [x27, #16]
    232c:	cbnz	x27, 2308 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x718>
    2330:	cmp	x24, x26
    2334:	b.eq	2408 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x818>  // b.none
    2338:	ldp	x1, x24, [x26, #32]
    233c:	cmp	x24, #0xc
    2340:	b.ls	2d44 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1154>  // b.plast
    2344:	add	x0, x19, #0x10
    2348:	mov	x2, #0xd                   	// #13
    234c:	bl	0 <memcmp>
    2350:	cbnz	w0, 2378 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x788>
    2354:	mov	x25, #0xd                   	// #13
    2358:	sub	x25, x25, x24
    235c:	mov	x0, #0x7fffffff            	// #2147483647
    2360:	cmp	x25, x0
    2364:	b.gt	237c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x78c>
    2368:	mov	x0, #0xffffffff80000000    	// #-2147483648
    236c:	cmp	x25, x0
    2370:	b.lt	2408 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x818>  // b.tstop
    2374:	mov	w0, w25
    2378:	tbnz	w0, #31, 2408 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x818>
    237c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2380:	add	x0, x0, #0x0
    2384:	str	x0, [x26, #64]
    2388:	add	x0, x20, #0x0
    238c:	add	x0, x0, #0x38
    2390:	ldar	x1, [x0]
    2394:	cbnz	x1, 2450 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x860>
    2398:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    239c:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    23a0:	add	x2, x2, #0x0
    23a4:	add	x1, x1, #0x0
    23a8:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    23ac:	b	2450 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x860>
    23b0:	mov	x2, x25
    23b4:	mov	x1, x28
    23b8:	bl	0 <memcmp>
    23bc:	cbnz	w0, 2320 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x730>
    23c0:	sub	x2, x25, #0xd
    23c4:	mov	w0, w2
    23c8:	b	2320 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x730>
    23cc:	mov	x1, x28
    23d0:	mov	x2, #0xd                   	// #13
    23d4:	bl	0 <memcmp>
    23d8:	cbnz	w0, 2320 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x730>
    23dc:	sub	x2, x25, #0xd
    23e0:	mov	x0, #0x7fffffff            	// #2147483647
    23e4:	cmp	x2, x0
    23e8:	b.gt	2324 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x734>
    23ec:	mov	x0, #0xffffffff80000000    	// #-2147483648
    23f0:	cmp	x2, x0
    23f4:	b.ge	231c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x72c>  // b.tcont
    23f8:	ldr	x27, [x27, #24]
    23fc:	cbnz	x27, 2308 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x718>
    2400:	b	2330 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x740>
    2404:	mov	x26, x24
    2408:	add	x2, sp, #0x68
    240c:	mov	x1, x26
    2410:	mov	x0, x22
    2414:	str	x19, [sp, #104]
    2418:	bl	de0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0>
    241c:	mov	x2, x0
    2420:	ldr	x0, [sp, #112]
    2424:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2428:	add	x1, x1, #0x0
    242c:	str	x1, [x2, #64]
    2430:	add	x1, x19, #0x10
    2434:	cmp	x0, x1
    2438:	b.eq	2440 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x850>  // b.none
    243c:	bl	0 <_ZdlPv>
    2440:	add	x0, x20, #0x0
    2444:	add	x0, x0, #0x38
    2448:	ldar	x1, [x0]
    244c:	cbz	x1, 2398 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x7a8>
    2450:	add	x0, x20, #0x0
    2454:	add	x0, x0, #0x38
    2458:	ldr	x22, [x0]
    245c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2460:	add	x0, x0, #0x0
    2464:	add	x1, x19, #0x10
    2468:	str	x1, [sp, #112]
    246c:	strb	wzr, [sp, #140]
    2470:	mov	x2, #0xc                   	// #12
    2474:	ldr	x3, [x0]
    2478:	str	x3, [sp, #128]
    247c:	ldr	w0, [x0, #8]
    2480:	add	x24, x22, #0x8
    2484:	str	w0, [x19, #24]
    2488:	ldr	x27, [x22, #16]
    248c:	str	x2, [sp, #120]
    2490:	cbz	x27, 259c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x9ac>
    2494:	mov	x28, x1
    2498:	mov	x26, x24
    249c:	nop
    24a0:	ldp	x0, x25, [x27, #32]
    24a4:	cmp	x25, #0xc
    24a8:	b.hi	2564 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x974>  // b.pmore
    24ac:	mov	x2, #0xfffffffffffffff4    	// #-12
    24b0:	cbnz	x25, 2548 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x958>
    24b4:	mov	w0, w2
    24b8:	tbnz	w0, #31, 2590 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x9a0>
    24bc:	mov	x26, x27
    24c0:	ldr	x27, [x27, #16]
    24c4:	cbnz	x27, 24a0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8b0>
    24c8:	cmp	x24, x26
    24cc:	b.eq	25a0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x9b0>  // b.none
    24d0:	ldp	x1, x24, [x26, #32]
    24d4:	cmp	x24, #0xb
    24d8:	b.ls	2cd8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x10e8>  // b.plast
    24dc:	add	x0, x19, #0x10
    24e0:	mov	x2, #0xc                   	// #12
    24e4:	bl	0 <memcmp>
    24e8:	cbnz	w0, 2510 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x920>
    24ec:	mov	x25, #0xc                   	// #12
    24f0:	sub	x25, x25, x24
    24f4:	mov	x0, #0x7fffffff            	// #2147483647
    24f8:	cmp	x25, x0
    24fc:	b.gt	2514 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x924>
    2500:	mov	x0, #0xffffffff80000000    	// #-2147483648
    2504:	cmp	x25, x0
    2508:	b.lt	25a0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x9b0>  // b.tstop
    250c:	mov	w0, w25
    2510:	tbnz	w0, #31, 25a0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x9b0>
    2514:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2518:	add	x0, x0, #0x0
    251c:	str	x0, [x26, #64]
    2520:	add	x0, x20, #0x0
    2524:	add	x0, x0, #0x38
    2528:	ldar	x1, [x0]
    252c:	cbnz	x1, 25e8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x9f8>
    2530:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2534:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2538:	add	x2, x2, #0x0
    253c:	add	x1, x1, #0x0
    2540:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2544:	b	25e8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x9f8>
    2548:	mov	x2, x25
    254c:	mov	x1, x28
    2550:	bl	0 <memcmp>
    2554:	cbnz	w0, 24b8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8c8>
    2558:	sub	x2, x25, #0xc
    255c:	mov	w0, w2
    2560:	b	24b8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8c8>
    2564:	mov	x1, x28
    2568:	mov	x2, #0xc                   	// #12
    256c:	bl	0 <memcmp>
    2570:	cbnz	w0, 24b8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8c8>
    2574:	sub	x2, x25, #0xc
    2578:	mov	x0, #0x7fffffff            	// #2147483647
    257c:	cmp	x2, x0
    2580:	b.gt	24bc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8cc>
    2584:	mov	x0, #0xffffffff80000000    	// #-2147483648
    2588:	cmp	x2, x0
    258c:	b.ge	24b4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8c4>  // b.tcont
    2590:	ldr	x27, [x27, #24]
    2594:	cbnz	x27, 24a0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8b0>
    2598:	b	24c8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8d8>
    259c:	mov	x26, x24
    25a0:	add	x2, sp, #0x68
    25a4:	mov	x1, x26
    25a8:	mov	x0, x22
    25ac:	str	x19, [sp, #104]
    25b0:	bl	de0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0>
    25b4:	mov	x2, x0
    25b8:	ldr	x0, [sp, #112]
    25bc:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    25c0:	add	x1, x1, #0x0
    25c4:	str	x1, [x2, #64]
    25c8:	add	x1, x19, #0x10
    25cc:	cmp	x0, x1
    25d0:	b.eq	25d8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x9e8>  // b.none
    25d4:	bl	0 <_ZdlPv>
    25d8:	add	x0, x20, #0x0
    25dc:	add	x0, x0, #0x38
    25e0:	ldar	x1, [x0]
    25e4:	cbz	x1, 2530 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x940>
    25e8:	add	x0, x20, #0x0
    25ec:	add	x0, x0, #0x38
    25f0:	ldr	x22, [x0]
    25f4:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    25f8:	add	x0, x0, #0x0
    25fc:	add	x1, x19, #0x10
    2600:	str	x1, [sp, #112]
    2604:	strb	wzr, [sp, #139]
    2608:	mov	x2, #0xb                   	// #11
    260c:	ldr	x3, [x0]
    2610:	str	x3, [sp, #128]
    2614:	ldur	w0, [x0, #7]
    2618:	add	x24, x22, #0x8
    261c:	stur	w0, [x19, #23]
    2620:	ldr	x27, [x22, #16]
    2624:	str	x2, [sp, #120]
    2628:	cbz	x27, 2734 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb44>
    262c:	mov	x28, x1
    2630:	mov	x26, x24
    2634:	nop
    2638:	ldp	x0, x25, [x27, #32]
    263c:	cmp	x25, #0xb
    2640:	b.hi	26fc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb0c>  // b.pmore
    2644:	mov	x2, #0xfffffffffffffff5    	// #-11
    2648:	cbnz	x25, 26e0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xaf0>
    264c:	mov	w0, w2
    2650:	tbnz	w0, #31, 2728 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb38>
    2654:	mov	x26, x27
    2658:	ldr	x27, [x27, #16]
    265c:	cbnz	x27, 2638 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa48>
    2660:	cmp	x24, x26
    2664:	b.eq	2738 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb48>  // b.none
    2668:	ldp	x1, x24, [x26, #32]
    266c:	cmp	x24, #0xa
    2670:	b.ls	2cfc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x110c>  // b.plast
    2674:	add	x0, x19, #0x10
    2678:	mov	x2, #0xb                   	// #11
    267c:	bl	0 <memcmp>
    2680:	cbnz	w0, 26a8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xab8>
    2684:	mov	x25, #0xb                   	// #11
    2688:	sub	x25, x25, x24
    268c:	mov	x0, #0x7fffffff            	// #2147483647
    2690:	cmp	x25, x0
    2694:	b.gt	26ac <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xabc>
    2698:	mov	x0, #0xffffffff80000000    	// #-2147483648
    269c:	cmp	x25, x0
    26a0:	b.lt	2738 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb48>  // b.tstop
    26a4:	mov	w0, w25
    26a8:	tbnz	w0, #31, 2738 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb48>
    26ac:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    26b0:	add	x0, x0, #0x0
    26b4:	str	x0, [x26, #64]
    26b8:	add	x0, x20, #0x0
    26bc:	add	x0, x0, #0x38
    26c0:	ldar	x1, [x0]
    26c4:	cbnz	x1, 2780 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb90>
    26c8:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    26cc:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    26d0:	add	x2, x2, #0x0
    26d4:	add	x1, x1, #0x0
    26d8:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    26dc:	b	2780 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb90>
    26e0:	mov	x2, x25
    26e4:	mov	x1, x28
    26e8:	bl	0 <memcmp>
    26ec:	cbnz	w0, 2650 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa60>
    26f0:	sub	x2, x25, #0xb
    26f4:	mov	w0, w2
    26f8:	b	2650 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa60>
    26fc:	mov	x1, x28
    2700:	mov	x2, #0xb                   	// #11
    2704:	bl	0 <memcmp>
    2708:	cbnz	w0, 2650 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa60>
    270c:	sub	x2, x25, #0xb
    2710:	mov	x0, #0x7fffffff            	// #2147483647
    2714:	cmp	x2, x0
    2718:	b.gt	2654 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa64>
    271c:	mov	x0, #0xffffffff80000000    	// #-2147483648
    2720:	cmp	x2, x0
    2724:	b.ge	264c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa5c>  // b.tcont
    2728:	ldr	x27, [x27, #24]
    272c:	cbnz	x27, 2638 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa48>
    2730:	b	2660 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa70>
    2734:	mov	x26, x24
    2738:	add	x2, sp, #0x68
    273c:	mov	x1, x26
    2740:	mov	x0, x22
    2744:	str	x19, [sp, #104]
    2748:	bl	de0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0>
    274c:	mov	x2, x0
    2750:	ldr	x0, [sp, #112]
    2754:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2758:	add	x1, x1, #0x0
    275c:	str	x1, [x2, #64]
    2760:	add	x1, x19, #0x10
    2764:	cmp	x0, x1
    2768:	b.eq	2770 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb80>  // b.none
    276c:	bl	0 <_ZdlPv>
    2770:	add	x0, x20, #0x0
    2774:	add	x0, x0, #0x38
    2778:	ldar	x1, [x0]
    277c:	cbz	x1, 26c8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xad8>
    2780:	add	x0, x20, #0x0
    2784:	add	x0, x0, #0x38
    2788:	ldr	x22, [x0]
    278c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2790:	add	x0, x0, #0x0
    2794:	add	x1, x19, #0x10
    2798:	str	x1, [sp, #112]
    279c:	strb	wzr, [sp, #141]
    27a0:	mov	x2, #0xd                   	// #13
    27a4:	ldr	x3, [x0]
    27a8:	str	x3, [sp, #128]
    27ac:	ldur	x0, [x0, #5]
    27b0:	stur	x0, [x19, #21]
    27b4:	add	x24, x22, #0x8
    27b8:	ldr	x27, [x22, #16]
    27bc:	str	x2, [sp, #120]
    27c0:	cbz	x27, 28cc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xcdc>
    27c4:	mov	x28, x1
    27c8:	mov	x26, x24
    27cc:	nop
    27d0:	ldp	x0, x25, [x27, #32]
    27d4:	cmp	x25, #0xd
    27d8:	b.hi	2894 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xca4>  // b.pmore
    27dc:	mov	x2, #0xfffffffffffffff3    	// #-13
    27e0:	cbnz	x25, 2878 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc88>
    27e4:	mov	w0, w2
    27e8:	tbnz	w0, #31, 28c0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xcd0>
    27ec:	mov	x26, x27
    27f0:	ldr	x27, [x27, #16]
    27f4:	cbnz	x27, 27d0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xbe0>
    27f8:	cmp	x26, x24
    27fc:	b.eq	28d0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xce0>  // b.none
    2800:	ldp	x1, x24, [x26, #32]
    2804:	cmp	x24, #0xc
    2808:	b.ls	2cb4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x10c4>  // b.plast
    280c:	add	x0, x19, #0x10
    2810:	mov	x2, #0xd                   	// #13
    2814:	bl	0 <memcmp>
    2818:	cbnz	w0, 2840 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc50>
    281c:	mov	x25, #0xd                   	// #13
    2820:	sub	x25, x25, x24
    2824:	mov	x0, #0x7fffffff            	// #2147483647
    2828:	cmp	x25, x0
    282c:	b.gt	2844 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc54>
    2830:	mov	x0, #0xffffffff80000000    	// #-2147483648
    2834:	cmp	x25, x0
    2838:	b.lt	28d0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xce0>  // b.tstop
    283c:	mov	w0, w25
    2840:	tbnz	w0, #31, 28d0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xce0>
    2844:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2848:	add	x0, x0, #0x0
    284c:	str	x0, [x26, #64]
    2850:	add	x0, x20, #0x0
    2854:	add	x0, x0, #0x38
    2858:	ldar	x1, [x0]
    285c:	cbnz	x1, 2918 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd28>
    2860:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2864:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2868:	add	x2, x2, #0x0
    286c:	add	x1, x1, #0x0
    2870:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2874:	b	2918 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd28>
    2878:	mov	x2, x25
    287c:	mov	x1, x28
    2880:	bl	0 <memcmp>
    2884:	cbnz	w0, 27e8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xbf8>
    2888:	sub	x2, x25, #0xd
    288c:	mov	w0, w2
    2890:	b	27e8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xbf8>
    2894:	mov	x1, x28
    2898:	mov	x2, #0xd                   	// #13
    289c:	bl	0 <memcmp>
    28a0:	cbnz	w0, 27e8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xbf8>
    28a4:	sub	x2, x25, #0xd
    28a8:	mov	x0, #0x7fffffff            	// #2147483647
    28ac:	cmp	x2, x0
    28b0:	b.gt	27ec <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xbfc>
    28b4:	mov	x0, #0xffffffff80000000    	// #-2147483648
    28b8:	cmp	x2, x0
    28bc:	b.ge	27e4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xbf4>  // b.tcont
    28c0:	ldr	x27, [x27, #24]
    28c4:	cbnz	x27, 27d0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xbe0>
    28c8:	b	27f8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc08>
    28cc:	mov	x26, x24
    28d0:	add	x2, sp, #0x68
    28d4:	mov	x1, x26
    28d8:	mov	x0, x22
    28dc:	str	x19, [sp, #104]
    28e0:	bl	de0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0>
    28e4:	mov	x2, x0
    28e8:	ldr	x0, [sp, #112]
    28ec:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    28f0:	add	x1, x1, #0x0
    28f4:	str	x1, [x2, #64]
    28f8:	add	x1, x19, #0x10
    28fc:	cmp	x0, x1
    2900:	b.eq	2908 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd18>  // b.none
    2904:	bl	0 <_ZdlPv>
    2908:	add	x0, x20, #0x0
    290c:	add	x0, x0, #0x38
    2910:	ldar	x1, [x0]
    2914:	cbz	x1, 2860 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc70>
    2918:	add	x0, x20, #0x0
    291c:	add	x0, x0, #0x38
    2920:	ldr	x22, [x0]
    2924:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2928:	add	x0, x0, #0x0
    292c:	add	x1, x19, #0x10
    2930:	str	x1, [sp, #112]
    2934:	strb	wzr, [sp, #140]
    2938:	mov	x2, #0xc                   	// #12
    293c:	ldr	x3, [x0]
    2940:	str	x3, [sp, #128]
    2944:	ldr	w0, [x0, #8]
    2948:	add	x24, x22, #0x8
    294c:	str	w0, [x19, #24]
    2950:	ldr	x27, [x22, #16]
    2954:	str	x2, [sp, #120]
    2958:	cbz	x27, 2a64 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe74>
    295c:	mov	x28, x1
    2960:	mov	x26, x24
    2964:	nop
    2968:	ldp	x0, x25, [x27, #32]
    296c:	cmp	x25, #0xc
    2970:	b.hi	2a2c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe3c>  // b.pmore
    2974:	mov	x2, #0xfffffffffffffff4    	// #-12
    2978:	cbnz	x25, 2a10 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe20>
    297c:	mov	w0, w2
    2980:	tbnz	w0, #31, 2a58 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe68>
    2984:	mov	x26, x27
    2988:	ldr	x27, [x27, #16]
    298c:	cbnz	x27, 2968 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd78>
    2990:	cmp	x26, x24
    2994:	b.eq	2a68 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe78>  // b.none
    2998:	ldp	x1, x24, [x26, #32]
    299c:	cmp	x24, #0xb
    29a0:	b.ls	2d68 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1178>  // b.plast
    29a4:	add	x0, x19, #0x10
    29a8:	mov	x2, #0xc                   	// #12
    29ac:	bl	0 <memcmp>
    29b0:	cbnz	w0, 29d8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xde8>
    29b4:	mov	x25, #0xc                   	// #12
    29b8:	sub	x25, x25, x24
    29bc:	mov	x0, #0x7fffffff            	// #2147483647
    29c0:	cmp	x25, x0
    29c4:	b.gt	29dc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xdec>
    29c8:	mov	x0, #0xffffffff80000000    	// #-2147483648
    29cc:	cmp	x25, x0
    29d0:	b.lt	2a68 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe78>  // b.tstop
    29d4:	mov	w0, w25
    29d8:	tbnz	w0, #31, 2a68 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe78>
    29dc:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    29e0:	add	x0, x0, #0x0
    29e4:	str	x0, [x26, #64]
    29e8:	add	x0, x20, #0x0
    29ec:	add	x0, x0, #0x38
    29f0:	ldar	x1, [x0]
    29f4:	cbnz	x1, 2ab0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xec0>
    29f8:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    29fc:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2a00:	add	x2, x2, #0x0
    2a04:	add	x1, x1, #0x0
    2a08:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2a0c:	b	2ab0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xec0>
    2a10:	mov	x2, x25
    2a14:	mov	x1, x28
    2a18:	bl	0 <memcmp>
    2a1c:	cbnz	w0, 2980 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd90>
    2a20:	sub	x2, x25, #0xc
    2a24:	mov	w0, w2
    2a28:	b	2980 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd90>
    2a2c:	mov	x1, x28
    2a30:	mov	x2, #0xc                   	// #12
    2a34:	bl	0 <memcmp>
    2a38:	cbnz	w0, 2980 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd90>
    2a3c:	sub	x2, x25, #0xc
    2a40:	mov	x0, #0x7fffffff            	// #2147483647
    2a44:	cmp	x2, x0
    2a48:	b.gt	2984 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd94>
    2a4c:	mov	x0, #0xffffffff80000000    	// #-2147483648
    2a50:	cmp	x2, x0
    2a54:	b.ge	297c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd8c>  // b.tcont
    2a58:	ldr	x27, [x27, #24]
    2a5c:	cbnz	x27, 2968 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xd78>
    2a60:	b	2990 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xda0>
    2a64:	mov	x26, x24
    2a68:	add	x2, sp, #0x68
    2a6c:	mov	x1, x26
    2a70:	mov	x0, x22
    2a74:	str	x19, [sp, #104]
    2a78:	bl	de0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0>
    2a7c:	mov	x2, x0
    2a80:	ldr	x0, [sp, #112]
    2a84:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2a88:	add	x1, x1, #0x0
    2a8c:	str	x1, [x2, #64]
    2a90:	add	x1, x19, #0x10
    2a94:	cmp	x0, x1
    2a98:	b.eq	2aa0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xeb0>  // b.none
    2a9c:	bl	0 <_ZdlPv>
    2aa0:	add	x0, x20, #0x0
    2aa4:	add	x0, x0, #0x38
    2aa8:	ldar	x1, [x0]
    2aac:	cbz	x1, 29f8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe08>
    2ab0:	add	x20, x20, #0x0
    2ab4:	add	x20, x20, #0x38
    2ab8:	ldr	x20, [x20]
    2abc:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2ac0:	add	x0, x0, #0x0
    2ac4:	add	x1, x19, #0x10
    2ac8:	str	x1, [sp, #112]
    2acc:	strb	wzr, [sp, #140]
    2ad0:	mov	x2, #0xc                   	// #12
    2ad4:	ldr	x3, [x0]
    2ad8:	str	x3, [sp, #128]
    2adc:	ldr	w0, [x0, #8]
    2ae0:	add	x22, x20, #0x8
    2ae4:	str	w0, [x19, #24]
    2ae8:	ldr	x26, [x20, #16]
    2aec:	str	x2, [sp, #120]
    2af0:	cbz	x26, 2bd4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xfe4>
    2af4:	mov	x27, x1
    2af8:	mov	x28, x22
    2afc:	mov	x24, #0x7fffffff            	// #2147483647
    2b00:	ldp	x0, x25, [x26, #32]
    2b04:	cmp	x25, #0xc
    2b08:	b.hi	2ba0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xfb0>  // b.pmore
    2b0c:	mov	x2, #0xfffffffffffffff4    	// #-12
    2b10:	cbnz	x25, 2b84 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf94>
    2b14:	mov	w0, w2
    2b18:	tbnz	w0, #31, 2bc8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xfd8>
    2b1c:	mov	x28, x26
    2b20:	ldr	x26, [x26, #16]
    2b24:	cbnz	x26, 2b00 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf10>
    2b28:	cmp	x28, x22
    2b2c:	b.eq	2bd8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xfe8>  // b.none
    2b30:	ldp	x1, x22, [x28, #32]
    2b34:	cmp	x22, #0xb
    2b38:	b.ls	2c90 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x10a0>  // b.plast
    2b3c:	add	x0, x19, #0x10
    2b40:	mov	x2, #0xc                   	// #12
    2b44:	bl	0 <memcmp>
    2b48:	cbnz	w0, 2b70 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf80>
    2b4c:	mov	x24, #0xc                   	// #12
    2b50:	sub	x24, x24, x22
    2b54:	mov	x0, #0x7fffffff            	// #2147483647
    2b58:	cmp	x24, x0
    2b5c:	b.gt	2b74 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf84>
    2b60:	mov	x0, #0xffffffff80000000    	// #-2147483648
    2b64:	cmp	x24, x0
    2b68:	b.lt	2bd8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xfe8>  // b.tstop
    2b6c:	mov	w0, w24
    2b70:	tbnz	w0, #31, 2bd8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xfe8>
    2b74:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2b78:	add	x0, x0, #0x0
    2b7c:	str	x0, [x28, #64]
    2b80:	b	2c10 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1020>
    2b84:	mov	x2, x25
    2b88:	mov	x1, x27
    2b8c:	bl	0 <memcmp>
    2b90:	cbnz	w0, 2b18 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf28>
    2b94:	sub	x2, x25, #0xc
    2b98:	mov	w0, w2
    2b9c:	b	2b18 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf28>
    2ba0:	mov	x1, x27
    2ba4:	mov	x2, #0xc                   	// #12
    2ba8:	bl	0 <memcmp>
    2bac:	cbnz	w0, 2b18 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf28>
    2bb0:	sub	x2, x25, #0xc
    2bb4:	cmp	x2, x24
    2bb8:	b.gt	2b1c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf2c>
    2bbc:	mov	x0, #0xffffffff80000000    	// #-2147483648
    2bc0:	cmp	x2, x0
    2bc4:	b.ge	2b14 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf24>  // b.tcont
    2bc8:	ldr	x26, [x26, #24]
    2bcc:	cbnz	x26, 2b00 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf10>
    2bd0:	b	2b28 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf38>
    2bd4:	mov	x28, x22
    2bd8:	add	x2, sp, #0x68
    2bdc:	mov	x1, x28
    2be0:	mov	x0, x20
    2be4:	str	x19, [sp, #104]
    2be8:	bl	de0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_.isra.0>
    2bec:	mov	x2, x0
    2bf0:	ldr	x0, [sp, #112]
    2bf4:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2bf8:	add	x1, x1, #0x0
    2bfc:	str	x1, [x2, #64]
    2c00:	add	x19, x19, #0x10
    2c04:	cmp	x0, x19
    2c08:	b.eq	2c10 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1020>  // b.none
    2c0c:	bl	0 <_ZdlPv>
    2c10:	ldr	x21, [x21]
    2c14:	cbz	x21, 2c20 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1030>
    2c18:	mov	x0, x23
    2c1c:	bl	0 <pthread_mutex_unlock>
    2c20:	ldp	x19, x20, [sp, #16]
    2c24:	ldp	x21, x22, [sp, #32]
    2c28:	ldp	x23, x24, [sp, #48]
    2c2c:	ldp	x25, x26, [sp, #64]
    2c30:	ldp	x27, x28, [sp, #80]
    2c34:	ldp	x29, x30, [sp], #144
    2c38:	ret
    2c3c:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2c40:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2c44:	add	x2, x2, #0x0
    2c48:	add	x1, x1, #0x0
    2c4c:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2c50:	b	1c20 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x30>
    2c54:	adrp	x2, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2c58:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2c5c:	add	x2, x2, #0x0
    2c60:	add	x1, x1, #0x0
    2c64:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2c68:	b	1c54 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x64>
    2c6c:	mov	x25, #0xc                   	// #12
    2c70:	cbz	x24, 21dc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x5ec>
    2c74:	mov	x2, x24
    2c78:	add	x0, x19, #0x10
    2c7c:	bl	0 <memcmp>
    2c80:	cbnz	w0, 21e0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x5f0>
    2c84:	sub	x25, x25, x24
    2c88:	mov	w0, w25
    2c8c:	b	21e0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x5f0>
    2c90:	mov	x24, #0xc                   	// #12
    2c94:	cbz	x22, 2b6c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf7c>
    2c98:	mov	x2, x22
    2c9c:	add	x0, x19, #0x10
    2ca0:	bl	0 <memcmp>
    2ca4:	cbnz	w0, 2b70 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf80>
    2ca8:	sub	x24, x24, x22
    2cac:	mov	w0, w24
    2cb0:	b	2b70 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xf80>
    2cb4:	mov	x25, #0xd                   	// #13
    2cb8:	cbz	x24, 283c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc4c>
    2cbc:	mov	x2, x24
    2cc0:	add	x0, x19, #0x10
    2cc4:	bl	0 <memcmp>
    2cc8:	cbnz	w0, 2840 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc50>
    2ccc:	sub	x25, x25, x24
    2cd0:	mov	w0, w25
    2cd4:	b	2840 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xc50>
    2cd8:	mov	x25, #0xc                   	// #12
    2cdc:	cbz	x24, 250c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x91c>
    2ce0:	mov	x2, x24
    2ce4:	add	x0, x19, #0x10
    2ce8:	bl	0 <memcmp>
    2cec:	cbnz	w0, 2510 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x920>
    2cf0:	sub	x25, x25, x24
    2cf4:	mov	w0, w25
    2cf8:	b	2510 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x920>
    2cfc:	mov	x25, #0xb                   	// #11
    2d00:	cbz	x24, 26a4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xab4>
    2d04:	mov	x2, x24
    2d08:	add	x0, x19, #0x10
    2d0c:	bl	0 <memcmp>
    2d10:	cbnz	w0, 26a8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xab8>
    2d14:	sub	x25, x25, x24
    2d18:	mov	w0, w25
    2d1c:	b	26a8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xab8>
    2d20:	mov	x25, #0xc                   	// #12
    2d24:	cbz	x24, 1d14 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x124>
    2d28:	mov	x2, x24
    2d2c:	add	x0, x19, #0x10
    2d30:	bl	0 <memcmp>
    2d34:	cbnz	w0, 1d18 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x128>
    2d38:	sub	x25, x25, x24
    2d3c:	mov	w0, w25
    2d40:	b	1d18 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x128>
    2d44:	mov	x25, #0xd                   	// #13
    2d48:	cbz	x24, 2374 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x784>
    2d4c:	mov	x2, x24
    2d50:	add	x0, x19, #0x10
    2d54:	bl	0 <memcmp>
    2d58:	cbnz	w0, 2378 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x788>
    2d5c:	sub	x25, x25, x24
    2d60:	mov	w0, w25
    2d64:	b	2378 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x788>
    2d68:	mov	x25, #0xc                   	// #12
    2d6c:	cbz	x24, 29d4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xde4>
    2d70:	mov	x2, x24
    2d74:	add	x0, x19, #0x10
    2d78:	bl	0 <memcmp>
    2d7c:	cbnz	w0, 29d8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xde8>
    2d80:	sub	x25, x25, x24
    2d84:	mov	w0, w25
    2d88:	b	29d8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xde8>
    2d8c:	mov	x25, #0xa                   	// #10
    2d90:	cbz	x24, 1eac <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2bc>
    2d94:	mov	x2, x24
    2d98:	add	x0, x19, #0x10
    2d9c:	bl	0 <memcmp>
    2da0:	cbnz	w0, 1eb0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2c0>
    2da4:	sub	x25, x25, x24
    2da8:	mov	w0, w25
    2dac:	b	1eb0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2c0>
    2db0:	mov	x25, #0xb                   	// #11
    2db4:	cbz	x24, 2044 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x454>
    2db8:	mov	x2, x24
    2dbc:	add	x0, x19, #0x10
    2dc0:	sub	x25, x25, x24
    2dc4:	bl	0 <memcmp>
    2dc8:	cbnz	w0, 2048 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x458>
    2dcc:	mov	w0, w25
    2dd0:	b	2048 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x458>
    2dd4:	bl	0 <_ZSt20__throw_system_errori>

0000000000002dd8 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
    2dd8:	mov	x12, #0x27b0                	// #10160
    2ddc:	sub	sp, sp, x12
    2de0:	cmp	x2, #0x1
    2de4:	stp	x29, x30, [sp]
    2de8:	mov	x29, sp
    2dec:	stp	x19, x20, [sp, #16]
    2df0:	stp	x21, x22, [sp, #32]
    2df4:	stp	x23, x24, [sp, #48]
    2df8:	stp	x25, x26, [sp, #64]
    2dfc:	b.ls	2f60 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x188>  // b.plast
    2e00:	movi	v0.4s, #0x0
    2e04:	mov	x20, x2
    2e08:	mov	w2, #0x1                   	// #1
    2e0c:	add	x26, sp, #0x50
    2e10:	mov	x22, x8
    2e14:	mov	x25, x0
    2e18:	mov	x21, x1
    2e1c:	mov	x0, x26
    2e20:	add	x24, sp, #0xa0
    2e24:	add	x1, sp, #0x70
    2e28:	str	q0, [sp, #80]
    2e2c:	str	xzr, [sp, #96]
    2e30:	stp	x24, xzr, [sp, #112]
    2e34:	str	w2, [sp, #128]
    2e38:	stur	q0, [sp, #136]
    2e3c:	str	xzr, [sp, #152]
    2e40:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2e44:	ldp	x19, x23, [sp, #136]
    2e48:	cmp	x19, x23
    2e4c:	b.eq	2e80 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa8>  // b.none
    2e50:	add	x0, x19, #0x18
    2e54:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2e58:	ldr	w0, [x19, #16]
    2e5c:	cmp	w0, #0x40
    2e60:	b.ls	2e70 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x98>  // b.plast
    2e64:	ldr	x0, [x19, #8]
    2e68:	cbz	x0, 2e70 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x98>
    2e6c:	bl	0 <_ZdaPv>
    2e70:	add	x19, x19, #0x30
    2e74:	cmp	x23, x19
    2e78:	b.ne	2e50 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x78>  // b.any
    2e7c:	ldr	x23, [sp, #136]
    2e80:	cbz	x23, 2e8c <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xb4>
    2e84:	mov	x0, x23
    2e88:	bl	0 <_ZdlPv>
    2e8c:	ldr	w0, [sp, #128]
    2e90:	cmp	w0, #0x40
    2e94:	b.hi	2f50 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x178>  // b.pmore
    2e98:	ldr	x1, [sp, #88]
    2e9c:	add	x20, x20, x20, lsl #1
    2ea0:	mov	w4, #0x0                   	// #0
    2ea4:	mov	x0, x26
    2ea8:	add	x3, x21, x20, lsl #4
    2eac:	add	x2, x21, #0x30
    2eb0:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2eb4:	ldp	x1, x3, [sp, #80]
    2eb8:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2ebc:	movk	x2, #0xaaab
    2ec0:	mov	x0, x25
    2ec4:	mov	x8, x22
    2ec8:	sub	x3, x3, x1
    2ecc:	asr	x3, x3, #4
    2ed0:	mul	x2, x3, x2
    2ed4:	bl	550 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>
    2ed8:	ldr	x1, [x21]
    2edc:	mov	x0, x24
    2ee0:	bl	0 <fputs>
    2ee4:	ldp	x19, x20, [sp, #80]
    2ee8:	cmp	x19, x20
    2eec:	b.eq	2f20 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x148>  // b.none
    2ef0:	add	x0, x19, #0x18
    2ef4:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2ef8:	ldr	w0, [x19, #16]
    2efc:	cmp	w0, #0x40
    2f00:	b.ls	2f10 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x138>  // b.plast
    2f04:	ldr	x0, [x19, #8]
    2f08:	cbz	x0, 2f10 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x138>
    2f0c:	bl	0 <_ZdaPv>
    2f10:	add	x19, x19, #0x30
    2f14:	cmp	x20, x19
    2f18:	b.ne	2ef0 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x118>  // b.any
    2f1c:	ldr	x20, [sp, #80]
    2f20:	cbz	x20, 2f2c <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x154>
    2f24:	mov	x0, x20
    2f28:	bl	0 <_ZdlPv>
    2f2c:	mov	x0, x22
    2f30:	mov	x12, #0x27b0                	// #10160
    2f34:	ldp	x29, x30, [sp]
    2f38:	ldp	x19, x20, [sp, #16]
    2f3c:	ldp	x21, x22, [sp, #32]
    2f40:	ldp	x23, x24, [sp, #48]
    2f44:	ldp	x25, x26, [sp, #64]
    2f48:	add	sp, sp, x12
    2f4c:	ret
    2f50:	ldr	x0, [sp, #120]
    2f54:	cbz	x0, 2e98 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xc0>
    2f58:	bl	0 <_ZdaPv>
    2f5c:	b	2e98 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xc0>
    2f60:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2f64:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2f68:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2f6c:	add	x3, x3, #0x0
    2f70:	add	x1, x1, #0x0
    2f74:	add	x0, x0, #0x0
    2f78:	mov	w2, #0x1cd                 	// #461
    2f7c:	bl	0 <__assert_fail>

0000000000002f80 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
    2f80:	movi	v0.4s, #0x0
    2f84:	mov	x12, #0x27b0                	// #10160
    2f88:	sub	sp, sp, x12
    2f8c:	stp	x29, x30, [sp]
    2f90:	mov	x29, sp
    2f94:	stp	x19, x20, [sp, #16]
    2f98:	mov	x20, x2
    2f9c:	mov	w2, #0x1                   	// #1
    2fa0:	stp	x25, x26, [sp, #64]
    2fa4:	add	x26, sp, #0x50
    2fa8:	mov	x25, x0
    2fac:	mov	x0, x26
    2fb0:	stp	x21, x22, [sp, #32]
    2fb4:	mov	x21, x8
    2fb8:	add	x22, sp, #0xa0
    2fbc:	stp	x23, x24, [sp, #48]
    2fc0:	mov	x24, x1
    2fc4:	add	x1, sp, #0x70
    2fc8:	str	q0, [sp, #80]
    2fcc:	str	xzr, [sp, #96]
    2fd0:	stp	x22, xzr, [sp, #112]
    2fd4:	str	w2, [sp, #128]
    2fd8:	stur	q0, [sp, #136]
    2fdc:	str	xzr, [sp, #152]
    2fe0:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2fe4:	ldp	x19, x23, [sp, #136]
    2fe8:	cmp	x19, x23
    2fec:	b.eq	3020 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa0>  // b.none
    2ff0:	add	x0, x19, #0x18
    2ff4:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    2ff8:	ldr	w0, [x19, #16]
    2ffc:	cmp	w0, #0x40
    3000:	b.ls	3010 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x90>  // b.plast
    3004:	ldr	x0, [x19, #8]
    3008:	cbz	x0, 3010 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x90>
    300c:	bl	0 <_ZdaPv>
    3010:	add	x19, x19, #0x30
    3014:	cmp	x23, x19
    3018:	b.ne	2ff0 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x70>  // b.any
    301c:	ldr	x23, [sp, #136]
    3020:	cbz	x23, 302c <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xac>
    3024:	mov	x0, x23
    3028:	bl	0 <_ZdlPv>
    302c:	ldr	w0, [sp, #128]
    3030:	cmp	w0, #0x40
    3034:	b.ls	3044 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xc4>  // b.plast
    3038:	ldr	x0, [sp, #120]
    303c:	cbz	x0, 3044 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xc4>
    3040:	bl	0 <_ZdaPv>
    3044:	ldr	x1, [sp, #88]
    3048:	add	x20, x20, x20, lsl #1
    304c:	mov	w4, #0x0                   	// #0
    3050:	mov	x2, x24
    3054:	add	x3, x24, x20, lsl #4
    3058:	mov	x0, x26
    305c:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    3060:	ldp	x1, x3, [sp, #80]
    3064:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3068:	movk	x2, #0xaaab
    306c:	mov	x8, x21
    3070:	mov	x0, x25
    3074:	sub	x3, x3, x1
    3078:	asr	x3, x3, #4
    307c:	mul	x2, x3, x2
    3080:	bl	550 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>
    3084:	bl	0 <_ZN4llvm4outsEv>
    3088:	mov	x19, x0
    308c:	mov	x0, x22
    3090:	bl	0 <strlen>
    3094:	mov	x20, x0
    3098:	ldp	x1, x0, [x19, #16]
    309c:	sub	x1, x1, x0
    30a0:	cmp	x20, x1
    30a4:	b.hi	3134 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1b4>  // b.pmore
    30a8:	cbnz	x20, 3118 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x198>
    30ac:	ldp	x19, x20, [sp, #80]
    30b0:	cmp	x19, x20
    30b4:	b.eq	30e8 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x168>  // b.none
    30b8:	add	x0, x19, #0x18
    30bc:	bl	0 <_ZNK4llvm8ArrayRefINS_12GenericValueEEixEm.isra.0.part.0>
    30c0:	ldr	w0, [x19, #16]
    30c4:	cmp	w0, #0x40
    30c8:	b.ls	30d8 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x158>  // b.plast
    30cc:	ldr	x0, [x19, #8]
    30d0:	cbz	x0, 30d8 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x158>
    30d4:	bl	0 <_ZdaPv>
    30d8:	add	x19, x19, #0x30
    30dc:	cmp	x20, x19
    30e0:	b.ne	30b8 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x138>  // b.any
    30e4:	ldr	x20, [sp, #80]
    30e8:	cbz	x20, 30f4 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x174>
    30ec:	mov	x0, x20
    30f0:	bl	0 <_ZdlPv>
    30f4:	mov	x0, x21
    30f8:	mov	x12, #0x27b0                	// #10160
    30fc:	ldp	x29, x30, [sp]
    3100:	ldp	x19, x20, [sp, #16]
    3104:	ldp	x21, x22, [sp, #32]
    3108:	ldp	x23, x24, [sp, #48]
    310c:	ldp	x25, x26, [sp, #64]
    3110:	add	sp, sp, x12
    3114:	ret
    3118:	mov	x1, x22
    311c:	mov	x2, x20
    3120:	bl	0 <memcpy>
    3124:	ldr	x0, [x19, #24]
    3128:	add	x0, x0, x20
    312c:	str	x0, [x19, #24]
    3130:	b	30ac <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x12c>
    3134:	mov	x2, x20
    3138:	mov	x1, x22
    313c:	mov	x0, x19
    3140:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3144:	b	30ac <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x12c>

Disassembly of section .text._ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv:

0000000000000000 <_ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv>:
   0:	cbz	x0, c <_ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv+0xc>
   4:	mov	x1, #0x38                  	// #56
   8:	b	0 <_ZdlPvm>
   c:	ret

Disassembly of section .text._ZN4llvm14object_creatorINS_3sys10SmartMutexILb0EEEE4callEv:

0000000000000000 <_ZN4llvm14object_creatorINS_3sys10SmartMutexILb0EEEE4callEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x0, #0x38                  	// #56
   8:	mov	x29, sp
   c:	bl	0 <_Znwm>
  10:	stp	xzr, xzr, [x0, #16]
  14:	mov	w2, #0x1                   	// #1
  18:	stp	xzr, xzr, [x0]
  1c:	str	w2, [x0, #16]
  20:	stp	xzr, xzr, [x0, #32]
  24:	str	xzr, [x0, #48]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZN4llvm14object_creatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEv:

0000000000000000 <_ZN4llvm14object_creatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x0, #0x30                  	// #48
   8:	mov	x29, sp
   c:	bl	0 <_Znwm>
  10:	add	x1, x0, #0x8
  14:	str	wzr, [x0, #8]
  18:	str	xzr, [x0, #16]
  1c:	stp	x1, x1, [x1, #16]
  20:	str	xzr, [x1, #32]
  24:	ldp	x29, x30, [sp], #16
  28:	ret

Disassembly of section .text._ZN4llvm14object_creatorISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEv:

0000000000000000 <_ZN4llvm14object_creatorISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x0, #0x30                  	// #48
   8:	mov	x29, sp
   c:	bl	0 <_Znwm>
  10:	add	x1, x0, #0x8
  14:	str	wzr, [x0, #8]
  18:	str	xzr, [x0, #16]
  1c:	stp	x1, x1, [x1, #16]
  20:	str	xzr, [x1, #32]
  24:	ldp	x29, x30, [sp], #16
  28:	ret

Disassembly of section .text._ZN4llvm12GenericValueC2ERKS0_:

0000000000000000 <_ZN4llvm12GenericValueC1ERKS0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x22, x0
  18:	stp	x23, x24, [sp, #48]
  1c:	ldr	x2, [x1], #8
  20:	str	x2, [x0], #8
  24:	ldr	w2, [x1, #8]
  28:	str	w2, [x0, #8]
  2c:	cmp	w2, #0x40
  30:	b.hi	10c <_ZN4llvm12GenericValueC1ERKS0_+0x10c>  // b.pmore
  34:	ldr	x0, [x19, #8]
  38:	str	x0, [x22, #8]
  3c:	ldp	x0, x21, [x19, #24]
  40:	mov	x23, x22
  44:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  48:	mov	x20, #0x0                   	// #0
  4c:	movk	x1, #0xaaab
  50:	stp	xzr, xzr, [x23, #24]!
  54:	sub	x21, x21, x0
  58:	str	xzr, [x23, #16]
  5c:	asr	x0, x21, #4
  60:	mul	x0, x0, x1
  64:	cbz	x0, 84 <_ZN4llvm12GenericValueC1ERKS0_+0x84>
  68:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  6c:	movk	x1, #0x2aa, lsl #48
  70:	cmp	x0, x1
  74:	b.hi	114 <_ZN4llvm12GenericValueC1ERKS0_+0x114>  // b.pmore
  78:	mov	x0, x21
  7c:	bl	0 <_Znwm>
  80:	mov	x20, x0
  84:	dup	v0.2d, x20
  88:	add	x21, x20, x21
  8c:	stur	q0, [x22, #24]
  90:	str	x21, [x23, #16]
  94:	ldp	x24, x19, [x19, #24]
  98:	cmp	x24, x19
  9c:	b.eq	f4 <_ZN4llvm12GenericValueC1ERKS0_+0xf4>  // b.none
  a0:	mov	x21, x24
  a4:	mov	x22, x20
  a8:	mov	x1, x21
  ac:	mov	x0, x22
  b0:	add	x21, x21, #0x30
  b4:	bl	0 <_ZN4llvm12GenericValueC1ERKS0_>
  b8:	cmp	x19, x21
  bc:	add	x22, x22, #0x30
  c0:	b.ne	a8 <_ZN4llvm12GenericValueC1ERKS0_+0xa8>  // b.any
  c4:	sub	x1, x19, #0x30
  c8:	mov	x19, #0xaaab                	// #43691
  cc:	sub	x1, x1, x24
  d0:	movk	x19, #0xaaaa, lsl #16
  d4:	movk	x19, #0xaaaa, lsl #32
  d8:	lsr	x1, x1, #4
  dc:	movk	x19, #0xaaa, lsl #48
  e0:	mul	x1, x1, x19
  e4:	and	x1, x1, #0xfffffffffffffff
  e8:	add	x1, x1, #0x1
  ec:	add	x1, x1, x1, lsl #1
  f0:	add	x20, x20, x1, lsl #4
  f4:	ldp	x21, x22, [sp, #32]
  f8:	str	x20, [x23, #8]
  fc:	ldp	x19, x20, [sp, #16]
 100:	ldp	x23, x24, [sp, #48]
 104:	ldp	x29, x30, [sp], #64
 108:	ret
 10c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 110:	b	3c <_ZN4llvm12GenericValueC1ERKS0_+0x3c>
 114:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldp	x19, x20, [x0]
  10:	cmp	x19, x20
  14:	b.eq	54 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x54>  // b.none
  18:	str	x21, [sp, #32]
  1c:	mov	x21, x0
  20:	add	x0, x19, #0x18
  24:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>
  28:	ldr	w1, [x19, #16]
  2c:	cmp	w1, #0x40
  30:	b.ls	40 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x40>  // b.plast
  34:	ldr	x0, [x19, #8]
  38:	cbz	x0, 40 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x40>
  3c:	bl	0 <_ZdaPv>
  40:	add	x19, x19, #0x30
  44:	cmp	x20, x19
  48:	b.ne	20 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x20>  // b.any
  4c:	ldr	x20, [x21]
  50:	ldr	x21, [sp, #32]
  54:	cbz	x20, 68 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x68>
  58:	mov	x0, x20
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	b	0 <_ZdlPv>
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	ldp	x24, x21, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x21, x24
  2c:	cmp	x3, x1, asr #3
  30:	b.eq	10c <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x10c>  // b.none
  34:	mov	x19, x0
  38:	mov	x22, x2
  3c:	asr	x0, x1, #3
  40:	sub	x26, x23, x24
  44:	cbz	x0, 104 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x104>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
  50:	lsl	x0, x0, #1
  54:	b.ls	dc <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xdc>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x20, x0
  64:	add	x25, x0, x25
  68:	ldr	x0, [x22]
  6c:	add	x22, x26, #0x8
  70:	str	x0, [x20, x26]
  74:	sub	x21, x21, x23
  78:	add	x22, x20, x22
  7c:	cmp	x26, #0x0
  80:	add	x27, x22, x21
  84:	b.gt	b8 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb8>
  88:	cmp	x21, #0x0
  8c:	b.gt	ec <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>
  90:	cbnz	x24, d0 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x23, x24, [sp, #48]
  9c:	stp	x20, x27, [x19]
  a0:	str	x25, [x19, #16]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldr	x27, [sp, #80]
  b0:	ldp	x29, x30, [sp], #96
  b4:	ret
  b8:	mov	x2, x26
  bc:	mov	x1, x24
  c0:	mov	x0, x20
  c4:	bl	0 <memmove>
  c8:	cmp	x21, #0x0
  cc:	b.gt	ec <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>
  d0:	mov	x0, x24
  d4:	bl	0 <_ZdlPv>
  d8:	b	94 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>
  dc:	cbnz	x0, 118 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x118>
  e0:	mov	x25, #0x0                   	// #0
  e4:	mov	x20, #0x0                   	// #0
  e8:	b	68 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>
  ec:	mov	x2, x21
  f0:	mov	x1, x23
  f4:	mov	x0, x22
  f8:	bl	0 <memcpy>
  fc:	cbz	x24, 94 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>
 100:	b	d0 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>
 104:	mov	x25, #0x8                   	// #8
 108:	b	58 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>
 10c:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	cmp	x0, x3
 11c:	csel	x0, x0, x3, ls  // ls = plast
 120:	lsl	x25, x0, #3
 124:	b	58 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	mov	x22, x1
  14:	mov	x0, #0x30                  	// #48
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x23, x24, [sp, #48]
  20:	bl	0 <_Znwm>
  24:	mov	x20, x0
  28:	ldr	x23, [x22]
  2c:	str	x23, [x0, #32]
  30:	ldr	x19, [x21, #16]
  34:	add	x24, x21, #0x8
  38:	ldr	x0, [x22, #8]
  3c:	str	x0, [x20, #40]
  40:	cbz	x19, 130 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x130>
  44:	ldr	x2, [x19, #32]
  48:	mov	w1, #0x1                   	// #1
  4c:	cmp	x2, x23
  50:	b.ls	74 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x74>  // b.plast
  54:	nop
  58:	ldr	x0, [x19, #16]
  5c:	cbz	x0, 80 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x80>
  60:	mov	x19, x0
  64:	mov	w1, #0x1                   	// #1
  68:	ldr	x2, [x19, #32]
  6c:	cmp	x2, x23
  70:	b.hi	58 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x58>  // b.pmore
  74:	ldr	x0, [x19, #24]
  78:	mov	w1, #0x0                   	// #0
  7c:	cbnz	x0, 60 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x60>
  80:	cbnz	w1, d8 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xd8>
  84:	cmp	x2, x23
  88:	b.cs	fc <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xfc>  // b.hs, b.nlast
  8c:	cmp	x24, x19
  90:	mov	w0, #0x1                   	// #1
  94:	b.ne	120 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x120>  // b.any
  98:	mov	x3, x24
  9c:	mov	x2, x19
  a0:	mov	x1, x20
  a4:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  a8:	ldr	x2, [x21, #40]
  ac:	mov	x3, #0x1                   	// #1
  b0:	mov	x1, #0x0                   	// #0
  b4:	mov	x0, x20
  b8:	add	x2, x2, x3
  bc:	str	x2, [x21, #40]
  c0:	bfxil	x1, x3, #0, #8
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x23, x24, [sp, #48]
  d0:	ldp	x29, x30, [sp], #64
  d4:	ret
  d8:	ldr	x0, [x21, #24]
  dc:	cmp	x0, x19
  e0:	b.eq	8c <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x8c>  // b.none
  e4:	mov	x0, x19
  e8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  ec:	ldr	x1, [x0, #32]
  f0:	cmp	x23, x1
  f4:	b.hi	8c <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x8c>  // b.pmore
  f8:	mov	x19, x0
  fc:	mov	x0, x20
 100:	bl	0 <_ZdlPv>
 104:	mov	x0, x19
 108:	mov	x1, #0x0                   	// #0
 10c:	ldp	x19, x20, [sp, #16]
 110:	ldp	x21, x22, [sp, #32]
 114:	ldp	x23, x24, [sp, #48]
 118:	ldp	x29, x30, [sp], #64
 11c:	ret
 120:	ldr	x0, [x19, #32]
 124:	cmp	x23, x0
 128:	cset	w0, cc  // cc = lo, ul, last
 12c:	b	98 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x98>
 130:	ldr	x0, [x21, #24]
 134:	mov	x19, x24
 138:	cmp	x24, x0
 13c:	b.ne	e4 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xe4>  // b.any
 140:	mov	w0, #0x1                   	// #1
 144:	b	98 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x98>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	stp	x21, x22, [sp, #32]
  18:	ldp	x21, x0, [x0, #8]
  1c:	cmp	x21, x0
  20:	b.eq	80 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x80>  // b.none
  24:	mov	x2, x21
  28:	mov	x0, x1
  2c:	ldr	x4, [x1], #8
  30:	mov	x3, x21
  34:	str	x4, [x2], #8
  38:	ldr	w5, [x1, #8]
  3c:	str	w5, [x2, #8]
  40:	ldr	x4, [x19, #8]
  44:	str	x4, [x21, #8]
  48:	str	wzr, [x1, #8]
  4c:	ldr	q0, [x0, #24]!
  50:	ldp	x21, x22, [sp, #32]
  54:	ldr	x1, [x0, #16]
  58:	str	xzr, [x0, #16]
  5c:	stp	xzr, xzr, [x19, #24]
  60:	str	q0, [x3, #24]!
  64:	ldr	x0, [x20, #8]
  68:	str	x1, [x3, #16]
  6c:	add	x0, x0, #0x30
  70:	str	x0, [x20, #8]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x29, x30, [sp], #128
  7c:	ret
  80:	stp	x27, x28, [sp, #80]
  84:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  88:	movk	x1, #0xaaab
  8c:	ldr	x27, [x20]
  90:	stp	x23, x24, [sp, #48]
  94:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  98:	sub	x24, x21, x27
  9c:	movk	x0, #0x2aa, lsl #48
  a0:	asr	x22, x24, #4
  a4:	mul	x22, x22, x1
  a8:	cmp	x22, x0
  ac:	b.eq	344 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x344>  // b.none
  b0:	cbz	x22, 32c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x32c>
  b4:	lsl	x1, x22, #1
  b8:	str	x1, [sp, #120]
  bc:	cmp	x22, x22, lsl #1
  c0:	b.ls	308 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x308>  // b.plast
  c4:	mov	x0, #0x7fffffffffffffe0    	// #9223372036854775776
  c8:	str	x0, [sp, #120]
  cc:	bl	0 <_Znwm>
  d0:	str	x0, [sp, #112]
  d4:	mov	x1, x19
  d8:	mov	x0, x19
  dc:	ldr	x28, [sp, #112]
  e0:	cmp	x21, x27
  e4:	ldr	x4, [x1], #8
  e8:	add	x3, x28, x24
  ec:	ldr	q1, [x0, #24]!
  f0:	mov	x2, x3
  f4:	movi	v0.4s, #0x0
  f8:	str	x4, [x28, x24]
  fc:	ldr	w4, [x1, #8]
 100:	ldr	x5, [x19, #8]
 104:	str	x5, [x3, #8]
 108:	str	wzr, [x1, #8]
 10c:	str	w4, [x3, #16]
 110:	ldr	x1, [x0, #16]
 114:	str	xzr, [x0, #16]
 118:	str	q1, [x2, #24]!
 11c:	str	x1, [x2, #16]
 120:	stur	q0, [x19, #24]
 124:	b.eq	338 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x338>  // b.none
 128:	mov	x22, x27
 12c:	stp	x25, x26, [sp, #64]
 130:	str	q0, [sp, #96]
 134:	ldr	x0, [x22]
 138:	str	x0, [x28]
 13c:	ldr	w0, [x22, #16]
 140:	str	w0, [x28, #16]
 144:	cmp	w0, #0x40
 148:	b.hi	244 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x244>  // b.pmore
 14c:	nop
 150:	ldr	x0, [x22, #8]
 154:	str	x0, [x28, #8]
 158:	ldp	x0, x19, [x22, #24]
 15c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 160:	movk	x1, #0xaaab
 164:	str	xzr, [x28, #40]
 168:	ldr	q0, [sp, #96]
 16c:	mov	x23, #0x0                   	// #0
 170:	sub	x19, x19, x0
 174:	stur	q0, [x28, #24]
 178:	asr	x0, x19, #4
 17c:	mul	x0, x0, x1
 180:	cbz	x0, 1a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x1a0>
 184:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 188:	movk	x1, #0x2aa, lsl #48
 18c:	cmp	x0, x1
 190:	b.hi	340 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x340>  // b.pmore
 194:	mov	x0, x19
 198:	bl	0 <_Znwm>
 19c:	mov	x23, x0
 1a0:	dup	v0.2d, x23
 1a4:	add	x19, x23, x19
 1a8:	str	x19, [x28, #40]
 1ac:	stur	q0, [x28, #24]
 1b0:	ldp	x26, x19, [x22, #24]
 1b4:	cmp	x26, x19
 1b8:	b.eq	214 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x214>  // b.none
 1bc:	mov	x25, x26
 1c0:	mov	x24, x23
 1c4:	nop
 1c8:	mov	x1, x25
 1cc:	mov	x0, x24
 1d0:	add	x25, x25, #0x30
 1d4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
 1d8:	cmp	x19, x25
 1dc:	add	x24, x24, #0x30
 1e0:	b.ne	1c8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x1c8>  // b.any
 1e4:	sub	x1, x19, #0x30
 1e8:	mov	x0, #0xaaab                	// #43691
 1ec:	sub	x1, x1, x26
 1f0:	movk	x0, #0xaaaa, lsl #16
 1f4:	movk	x0, #0xaaaa, lsl #32
 1f8:	lsr	x1, x1, #4
 1fc:	movk	x0, #0xaaa, lsl #48
 200:	mul	x1, x1, x0
 204:	and	x1, x1, #0xfffffffffffffff
 208:	add	x1, x1, #0x1
 20c:	add	x1, x1, x1, lsl #1
 210:	add	x23, x23, x1, lsl #4
 214:	str	x23, [x28, #32]
 218:	add	x22, x22, #0x30
 21c:	cmp	x21, x22
 220:	add	x0, x28, #0x30
 224:	b.eq	254 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x254>  // b.none
 228:	mov	x28, x0
 22c:	ldr	x0, [x22]
 230:	str	x0, [x28]
 234:	ldr	w0, [x22, #16]
 238:	str	w0, [x28, #16]
 23c:	cmp	w0, #0x40
 240:	b.ls	150 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x150>  // b.plast
 244:	add	x1, x22, #0x8
 248:	add	x0, x28, #0x8
 24c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 250:	b	158 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x158>
 254:	add	x28, x28, #0x60
 258:	mov	x24, x27
 25c:	nop
 260:	ldp	x19, x25, [x24, #24]
 264:	cmp	x19, x25
 268:	b.eq	2a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2a0>  // b.none
 26c:	nop
 270:	add	x0, x19, #0x18
 274:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
 278:	ldr	w0, [x19, #16]
 27c:	cmp	w0, #0x40
 280:	b.ls	290 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x290>  // b.plast
 284:	ldr	x0, [x19, #8]
 288:	cbz	x0, 290 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x290>
 28c:	bl	0 <_ZdaPv>
 290:	add	x19, x19, #0x30
 294:	cmp	x25, x19
 298:	b.ne	270 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x270>  // b.any
 29c:	ldr	x25, [x24, #24]
 2a0:	cbz	x25, 2ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2ac>
 2a4:	mov	x0, x25
 2a8:	bl	0 <_ZdlPv>
 2ac:	ldr	w0, [x24, #16]
 2b0:	cmp	w0, #0x40
 2b4:	b.ls	2c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2c4>  // b.plast
 2b8:	ldr	x0, [x24, #8]
 2bc:	cbz	x0, 2c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2c4>
 2c0:	bl	0 <_ZdaPv>
 2c4:	add	x24, x24, #0x30
 2c8:	cmp	x21, x24
 2cc:	b.ne	260 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x260>  // b.any
 2d0:	ldp	x25, x26, [sp, #64]
 2d4:	cbz	x27, 2e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2e0>
 2d8:	mov	x0, x27
 2dc:	bl	0 <_ZdlPv>
 2e0:	ldp	x0, x1, [sp, #112]
 2e4:	ldp	x23, x24, [sp, #48]
 2e8:	stp	x0, x28, [x20]
 2ec:	ldp	x27, x28, [sp, #80]
 2f0:	add	x22, x0, x1
 2f4:	str	x22, [x20, #16]
 2f8:	ldp	x19, x20, [sp, #16]
 2fc:	ldp	x21, x22, [sp, #32]
 300:	ldp	x29, x30, [sp], #128
 304:	ret
 308:	str	xzr, [sp, #112]
 30c:	cbz	x1, d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0xd4>
 310:	cmp	x1, x0
 314:	mov	x2, x1
 318:	csel	x22, x2, x0, ls  // ls = plast
 31c:	mov	x1, #0x30                  	// #48
 320:	mul	x0, x22, x1
 324:	str	x0, [sp, #120]
 328:	b	cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0xcc>
 32c:	mov	x0, #0x30                  	// #48
 330:	str	x0, [sp, #120]
 334:	b	cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0xcc>
 338:	add	x28, x28, #0x30
 33c:	b	2d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x2d4>
 340:	bl	0 <_ZSt17__throw_bad_allocv>
 344:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
 348:	add	x0, x0, #0x0
 34c:	stp	x25, x26, [sp, #64]
 350:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>:
   0:	cbz	x1, 74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x74>
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	ldr	x1, [x19, #24]
  20:	mov	x0, x21
  24:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>
  28:	ldr	x2, [x19, #32]
  2c:	add	x1, x19, #0x30
  30:	mov	x0, x19
  34:	cmp	x2, x1
  38:	ldr	x20, [x19, #16]
  3c:	b.eq	5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x5c>  // b.none
  40:	mov	x0, x2
  44:	bl	0 <_ZdlPv>
  48:	mov	x0, x19
  4c:	bl	0 <_ZdlPv>
  50:	cbz	x20, 64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x64>
  54:	mov	x19, x20
  58:	b	1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x1c>
  5c:	bl	0 <_ZdlPv>
  60:	cbnz	x20, 54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x54>
  64:	ldp	x19, x20, [sp, #16]
  68:	ldr	x21, [sp, #32]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret
  74:	ret

Disassembly of section .text._ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv:

0000000000000000 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv>:
   0:	cbz	x0, 80 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv+0x80>
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	ldr	x19, [x0, #16]
  18:	cbz	x19, 6c <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv+0x6c>
  1c:	str	x21, [sp, #32]
  20:	ldr	x1, [x19, #24]
  24:	mov	x0, x20
  28:	bl	0 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv>
  2c:	ldr	x2, [x19, #32]
  30:	add	x1, x19, #0x30
  34:	mov	x0, x19
  38:	cmp	x2, x1
  3c:	ldr	x21, [x19, #16]
  40:	b.eq	60 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv+0x60>  // b.none
  44:	mov	x0, x2
  48:	bl	0 <_ZdlPv>
  4c:	mov	x0, x19
  50:	bl	0 <_ZdlPv>
  54:	cbz	x21, 68 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv+0x68>
  58:	mov	x19, x21
  5c:	b	20 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv+0x20>
  60:	bl	0 <_ZdlPv>
  64:	cbnz	x21, 58 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv+0x58>
  68:	ldr	x21, [sp, #32]
  6c:	mov	x0, x20
  70:	ldp	x19, x20, [sp, #16]
  74:	mov	x1, #0x30                  	// #48
  78:	ldp	x29, x30, [sp], #48
  7c:	b	0 <_ZdlPvm>
  80:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x19, [x0, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	mov	x23, x1
  1c:	stp	x25, x26, [sp, #64]
  20:	mov	x25, x0
  24:	stp	x27, x28, [sp, #80]
  28:	cbz	x19, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xfc>
  2c:	ldp	x28, x21, [x1]
  30:	mov	x22, #0x7fffffff            	// #2147483647
  34:	mov	x24, #0xffffffff80000000    	// #-2147483648
  38:	ldp	x27, x20, [x19, #32]
  3c:	mov	x0, x28
  40:	cmp	x21, x20
  44:	csel	x26, x21, x20, ls  // ls = plast
  48:	cbz	x26, 5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x5c>
  4c:	mov	x2, x26
  50:	mov	x1, x27
  54:	bl	0 <memcmp>
  58:	cbnz	w0, 74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x74>
  5c:	sub	x1, x21, x20
  60:	mov	w0, w1
  64:	cmp	x1, x22
  68:	b.gt	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x8c>
  6c:	cmp	x1, x24
  70:	b.lt	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x78>  // b.tstop
  74:	tbz	w0, #31, 8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x8c>
  78:	ldr	x3, [x19, #16]
  7c:	mov	w0, #0x1                   	// #1
  80:	cbz	x3, 98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x98>
  84:	mov	x19, x3
  88:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x38>
  8c:	ldr	x3, [x19, #24]
  90:	mov	w0, #0x0                   	// #0
  94:	cbnz	x3, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x84>
  98:	mov	x22, x19
  9c:	cbnz	w0, 100 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x100>
  a0:	cbz	x26, b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xb8>
  a4:	mov	x2, x26
  a8:	mov	x1, x28
  ac:	mov	x0, x27
  b0:	bl	0 <memcmp>
  b4:	cbnz	w0, d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xd4>
  b8:	sub	x0, x20, x21
  bc:	mov	x1, #0x7fffffff            	// #2147483647
  c0:	cmp	x0, x1
  c4:	b.gt	d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xd8>
  c8:	mov	x1, #0xffffffff80000000    	// #-2147483648
  cc:	cmp	x0, x1
  d0:	b.lt	130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x130>  // b.tstop
  d4:	tbnz	w0, #31, 130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x130>
  d8:	mov	x0, x19
  dc:	mov	x1, #0x0                   	// #0
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x23, x24, [sp, #48]
  ec:	ldp	x25, x26, [sp, #64]
  f0:	ldp	x27, x28, [sp, #80]
  f4:	ldp	x29, x30, [sp], #96
  f8:	ret
  fc:	add	x19, x0, #0x8
 100:	ldr	x0, [x25, #24]
 104:	cmp	x19, x0
 108:	b.eq	154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x154>  // b.none
 10c:	mov	x0, x19
 110:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 114:	ldp	x28, x21, [x23]
 118:	mov	x22, x19
 11c:	ldp	x27, x20, [x0, #32]
 120:	mov	x19, x0
 124:	cmp	x20, x21
 128:	csel	x26, x20, x21, ls  // ls = plast
 12c:	b	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xa0>
 130:	mov	x1, x22
 134:	mov	x0, #0x0                   	// #0
 138:	ldp	x19, x20, [sp, #16]
 13c:	ldp	x21, x22, [sp, #32]
 140:	ldp	x23, x24, [sp, #48]
 144:	ldp	x25, x26, [sp, #64]
 148:	ldp	x27, x28, [sp, #80]
 14c:	ldp	x29, x30, [sp], #96
 150:	ret
 154:	mov	x1, x19
 158:	mov	x0, #0x0                   	// #0
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x21, x22, [sp, #32]
 164:	ldp	x23, x24, [sp, #48]
 168:	ldp	x25, x26, [sp, #64]
 16c:	ldp	x27, x28, [sp, #80]
 170:	ldp	x29, x30, [sp], #96
 174:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	add	x3, x0, #0x8
   8:	cmp	x1, x3
   c:	mov	x29, sp
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x0
  18:	mov	x24, x2
  1c:	b.eq	170 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x170>  // b.none
  20:	stp	x19, x20, [sp, #16]
  24:	mov	x19, x1
  28:	stp	x21, x22, [sp, #32]
  2c:	stp	x25, x26, [sp, #64]
  30:	ldp	x25, x20, [x2]
  34:	ldp	x26, x21, [x1, #32]
  38:	cmp	x20, x21
  3c:	csel	x22, x20, x21, ls  // ls = plast
  40:	cbz	x22, d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xd8>
  44:	mov	x2, x22
  48:	mov	x1, x26
  4c:	mov	x0, x25
  50:	bl	0 <memcmp>
  54:	cmp	w0, #0x0
  58:	cbnz	w0, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xec>
  5c:	sub	x0, x20, x21
  60:	mov	x1, #0x7fffffff            	// #2147483647
  64:	cmp	x0, x1
  68:	b.gt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x80>
  6c:	mov	x1, #0xffffffff80000000    	// #-2147483648
  70:	cmp	x0, x1
  74:	b.lt	f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xf0>  // b.tstop
  78:	tbnz	w0, #31, f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xf0>
  7c:	cbz	x22, 98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x98>
  80:	mov	x1, x25
  84:	mov	x2, x22
  88:	mov	x0, x26
  8c:	bl	0 <memcmp>
  90:	mov	w1, w0
  94:	cbnz	w0, b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xb4>
  98:	sub	x1, x21, x20
  9c:	mov	x0, #0x7fffffff            	// #2147483647
  a0:	cmp	x1, x0
  a4:	b.gt	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xb8>
  a8:	mov	x0, #0xffffffff80000000    	// #-2147483648
  ac:	cmp	x1, x0
  b0:	b.lt	1f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1f0>  // b.tstop
  b4:	tbnz	w1, #31, 1f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1f0>
  b8:	ldp	x25, x26, [sp, #64]
  bc:	mov	x0, x19
  c0:	mov	x1, #0x0                   	// #0
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x23, x24, [sp, #48]
  d0:	ldp	x29, x30, [sp], #80
  d4:	ret
  d8:	sub	x0, x20, x21
  dc:	mov	x1, #0x7fffffff            	// #2147483647
  e0:	cmp	x0, x1
  e4:	b.le	6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x6c>
  e8:	b	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x98>
  ec:	b.ge	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x80>  // b.tcont
  f0:	ldr	x0, [x23, #24]
  f4:	cmp	x0, x19
  f8:	mov	x0, x19
  fc:	b.eq	280 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x280>  // b.none
 100:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 104:	mov	x21, x0
 108:	ldr	x22, [x0, #40]
 10c:	cmp	x20, x22
 110:	csel	x2, x20, x22, ls  // ls = plast
 114:	cbz	x2, 128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x128>
 118:	ldr	x0, [x0, #32]
 11c:	mov	x1, x25
 120:	bl	0 <memcmp>
 124:	cbnz	w0, 144 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x144>
 128:	sub	x0, x22, x20
 12c:	mov	x1, #0x7fffffff            	// #2147483647
 130:	cmp	x0, x1
 134:	b.gt	260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x260>
 138:	mov	x1, #0xffffffff80000000    	// #-2147483648
 13c:	cmp	x0, x1
 140:	b.lt	148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x148>  // b.tstop
 144:	tbz	w0, #31, 260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x260>
 148:	ldr	x1, [x21, #24]
 14c:	ldp	x23, x24, [sp, #48]
 150:	cmp	x1, #0x0
 154:	csel	x1, x21, x19, eq  // eq = none
 158:	csel	x0, x19, xzr, ne  // ne = any
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x21, x22, [sp, #32]
 164:	ldp	x25, x26, [sp, #64]
 168:	ldp	x29, x30, [sp], #80
 16c:	ret
 170:	ldr	x0, [x0, #40]
 174:	cbz	x0, 1dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1dc>
 178:	stp	x19, x20, [sp, #16]
 17c:	ldr	x19, [x23, #32]
 180:	stp	x21, x22, [sp, #32]
 184:	ldr	x20, [x2, #8]
 188:	ldr	x21, [x19, #40]
 18c:	cmp	x21, x20
 190:	csel	x2, x21, x20, ls  // ls = plast
 194:	cbz	x2, 1a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1a8>
 198:	ldr	x1, [x24]
 19c:	ldr	x0, [x19, #32]
 1a0:	bl	0 <memcmp>
 1a4:	cbnz	w0, 1c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1c4>
 1a8:	sub	x0, x21, x20
 1ac:	mov	x1, #0x7fffffff            	// #2147483647
 1b0:	cmp	x0, x1
 1b4:	b.gt	1d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1d4>
 1b8:	mov	x1, #0xffffffff80000000    	// #-2147483648
 1bc:	cmp	x0, x1
 1c0:	b.lt	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1c8>  // b.tstop
 1c4:	tbz	w0, #31, 1d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1d4>
 1c8:	mov	x1, x19
 1cc:	mov	x0, #0x0                   	// #0
 1d0:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xc4>
 1d4:	ldp	x19, x20, [sp, #16]
 1d8:	ldp	x21, x22, [sp, #32]
 1dc:	mov	x1, x24
 1e0:	mov	x0, x23
 1e4:	ldp	x23, x24, [sp, #48]
 1e8:	ldp	x29, x30, [sp], #80
 1ec:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>
 1f0:	ldr	x0, [x23, #32]
 1f4:	cmp	x0, x19
 1f8:	b.eq	28c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x28c>  // b.none
 1fc:	mov	x0, x19
 200:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 204:	ldr	x22, [x0, #40]
 208:	mov	x21, x0
 20c:	cmp	x20, x22
 210:	csel	x2, x20, x22, ls  // ls = plast
 214:	cbz	x2, 228 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x228>
 218:	ldr	x1, [x21, #32]
 21c:	mov	x0, x25
 220:	bl	0 <memcmp>
 224:	cbnz	w0, 244 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x244>
 228:	sub	x0, x20, x22
 22c:	mov	x1, #0x7fffffff            	// #2147483647
 230:	cmp	x0, x1
 234:	b.gt	260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x260>
 238:	mov	x1, #0xffffffff80000000    	// #-2147483648
 23c:	cmp	x0, x1
 240:	b.lt	248 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x248>  // b.tstop
 244:	tbz	w0, #31, 260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x260>
 248:	ldr	x1, [x19, #24]
 24c:	ldp	x25, x26, [sp, #64]
 250:	cmp	x1, #0x0
 254:	csel	x0, x21, xzr, ne  // ne = any
 258:	csel	x1, x21, x19, ne  // ne = any
 25c:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xc4>
 260:	mov	x1, x24
 264:	mov	x0, x23
 268:	ldp	x19, x20, [sp, #16]
 26c:	ldp	x21, x22, [sp, #32]
 270:	ldp	x23, x24, [sp, #48]
 274:	ldp	x25, x26, [sp, #64]
 278:	ldp	x29, x30, [sp], #80
 27c:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>
 280:	mov	x1, x19
 284:	ldp	x25, x26, [sp, #64]
 288:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xc4>
 28c:	mov	x1, x19
 290:	mov	x0, #0x0                   	// #0
 294:	ldp	x25, x26, [sp, #64]
 298:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xc4>

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E>:
   0:	cbz	x1, 40 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E+0x40>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	mov	x19, x1
  18:	ldr	x1, [x19, #24]
  1c:	mov	x0, x20
  20:	bl	0 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E>
  24:	mov	x0, x19
  28:	ldr	x19, [x19, #16]
  2c:	bl	0 <_ZdlPv>
  30:	cbnz	x19, 18 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E+0x18>
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	ret

Disassembly of section .text._ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv:

0000000000000000 <_ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv>:
   0:	cbz	x0, 4c <_ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv+0x4c>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	ldr	x20, [x0, #16]
  18:	cbz	x20, 38 <_ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv+0x38>
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv>
  28:	mov	x0, x20
  2c:	ldr	x20, [x20, #16]
  30:	bl	0 <_ZdlPv>
  34:	cbnz	x20, 1c <_ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv+0x1c>
  38:	mov	x0, x19
  3c:	mov	x1, #0x30                  	// #48
  40:	ldp	x19, x20, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	b	0 <_ZdlPvm>
  4c:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	cmp	x1, x0
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x0
  14:	b.eq	1b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1b4>  // b.none
  18:	stp	x25, x26, [sp, #64]
  1c:	mov	x25, x1
  20:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  24:	stp	x19, x20, [sp, #16]
  28:	movk	x1, #0xaaab
  2c:	stp	x23, x24, [sp, #48]
  30:	ldp	x19, x23, [x25]
  34:	ldr	x20, [x0]
  38:	ldr	x0, [x0, #16]
  3c:	sub	x22, x23, x19
  40:	sub	x0, x0, x20
  44:	asr	x26, x22, #4
  48:	asr	x0, x0, #4
  4c:	mul	x26, x26, x1
  50:	mul	x0, x0, x1
  54:	cmp	x0, x26
  58:	b.cc	1c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1c4>  // b.lo, b.ul, b.last
  5c:	stp	x27, x28, [sp, #80]
  60:	ldr	x28, [x21, #8]
  64:	sub	x0, x28, x20
  68:	asr	x24, x0, #4
  6c:	mul	x24, x24, x1
  70:	cmp	x26, x24
  74:	b.hi	384 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x384>  // b.pmore
  78:	cmp	x22, #0x0
  7c:	b.le	120 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x120>
  80:	add	x19, x19, #0x8
  84:	add	x23, x20, #0x8
  88:	mov	x24, #0xffffffffffffffff    	// #-1
  8c:	b	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xb8>
  90:	mov	x1, x19
  94:	mov	x0, x23
  98:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
  9c:	add	x1, x19, #0x10
  a0:	add	x0, x23, #0x10
  a4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
  a8:	add	x19, x19, #0x30
  ac:	add	x23, x23, #0x30
  b0:	subs	x26, x26, #0x1
  b4:	b.eq	10c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x10c>  // b.none
  b8:	ldur	x0, [x19, #-8]
  bc:	stur	x0, [x23, #-8]
  c0:	ldr	w0, [x23, #8]
  c4:	cmp	w0, #0x40
  c8:	b.hi	90 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x90>  // b.pmore
  cc:	ldr	w0, [x19, #8]
  d0:	cmp	w0, #0x40
  d4:	b.hi	90 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x90>  // b.pmore
  d8:	ldr	x2, [x19]
  dc:	neg	w1, w0
  e0:	str	w0, [x23, #8]
  e4:	lsr	x0, x24, x1
  e8:	and	x0, x0, x2
  ec:	str	x0, [x23]
  f0:	add	x1, x19, #0x10
  f4:	add	x0, x23, #0x10
  f8:	add	x19, x19, #0x30
  fc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 100:	add	x23, x23, #0x30
 104:	subs	x26, x26, #0x1
 108:	b.ne	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xb8>  // b.any
 10c:	cmp	x22, #0x0
 110:	mov	x0, #0x30                  	// #48
 114:	csel	x0, x22, x0, gt
 118:	ldr	x28, [x21, #8]
 11c:	add	x20, x20, x0
 120:	cmp	x20, x28
 124:	b.eq	198 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x198>  // b.none
 128:	ldp	x19, x23, [x20, #24]
 12c:	cmp	x19, x23
 130:	b.eq	168 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x168>  // b.none
 134:	nop
 138:	add	x0, x19, #0x18
 13c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 140:	ldr	w0, [x19, #16]
 144:	cmp	w0, #0x40
 148:	b.ls	158 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x158>  // b.plast
 14c:	ldr	x0, [x19, #8]
 150:	cbz	x0, 158 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x158>
 154:	bl	0 <_ZdaPv>
 158:	add	x19, x19, #0x30
 15c:	cmp	x23, x19
 160:	b.ne	138 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x138>  // b.any
 164:	ldr	x23, [x20, #24]
 168:	cbz	x23, 174 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x174>
 16c:	mov	x0, x23
 170:	bl	0 <_ZdlPv>
 174:	ldr	w0, [x20, #16]
 178:	cmp	w0, #0x40
 17c:	b.ls	18c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x18c>  // b.plast
 180:	ldr	x0, [x20, #8]
 184:	cbz	x0, 18c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x18c>
 188:	bl	0 <_ZdaPv>
 18c:	add	x20, x20, #0x30
 190:	cmp	x20, x28
 194:	b.ne	128 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x128>  // b.any
 198:	ldr	x20, [x21]
 19c:	add	x22, x20, x22
 1a0:	ldp	x27, x28, [sp, #80]
 1a4:	ldp	x19, x20, [sp, #16]
 1a8:	ldp	x23, x24, [sp, #48]
 1ac:	ldp	x25, x26, [sp, #64]
 1b0:	str	x22, [x21, #8]
 1b4:	mov	x0, x21
 1b8:	ldp	x21, x22, [sp, #32]
 1bc:	ldp	x29, x30, [sp], #112
 1c0:	ret
 1c4:	cbz	x26, 540 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x540>
 1c8:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1cc:	movk	x0, #0x2aa, lsl #48
 1d0:	cmp	x26, x0
 1d4:	b.hi	558 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x558>  // b.pmore
 1d8:	mov	x0, x22
 1dc:	bl	0 <_Znwm>
 1e0:	str	x0, [sp, #104]
 1e4:	cmp	x19, x23
 1e8:	ldr	x26, [sp, #104]
 1ec:	b.eq	2e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2e4>  // b.none
 1f0:	stp	x27, x28, [sp, #80]
 1f4:	nop
 1f8:	ldr	x0, [x19]
 1fc:	str	x0, [x26]
 200:	ldr	w0, [x19, #16]
 204:	str	w0, [x26, #16]
 208:	cmp	w0, #0x40
 20c:	b.hi	548 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x548>  // b.pmore
 210:	ldr	x0, [x19, #8]
 214:	str	x0, [x26, #8]
 218:	ldp	x0, x20, [x19, #24]
 21c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 220:	movk	x1, #0xaaab
 224:	stp	xzr, xzr, [x26, #24]
 228:	mov	x28, #0x0                   	// #0
 22c:	str	xzr, [x26, #40]
 230:	sub	x20, x20, x0
 234:	asr	x0, x20, #4
 238:	mul	x0, x0, x1
 23c:	cbz	x0, 25c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x25c>
 240:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 244:	movk	x1, #0x2aa, lsl #48
 248:	cmp	x0, x1
 24c:	b.hi	55c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x55c>  // b.pmore
 250:	mov	x0, x20
 254:	bl	0 <_Znwm>
 258:	mov	x28, x0
 25c:	dup	v0.2d, x28
 260:	add	x20, x28, x20
 264:	str	x20, [x26, #40]
 268:	stur	q0, [x26, #24]
 26c:	ldp	x27, x20, [x19, #24]
 270:	cmp	x27, x20
 274:	b.eq	2cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2cc>  // b.none
 278:	mov	x24, x27
 27c:	mov	x25, x28
 280:	mov	x1, x24
 284:	mov	x0, x25
 288:	add	x24, x24, #0x30
 28c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 290:	cmp	x20, x24
 294:	add	x25, x25, #0x30
 298:	b.ne	280 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x280>  // b.any
 29c:	sub	x1, x20, #0x30
 2a0:	mov	x0, #0xaaab                	// #43691
 2a4:	sub	x1, x1, x27
 2a8:	movk	x0, #0xaaaa, lsl #16
 2ac:	movk	x0, #0xaaaa, lsl #32
 2b0:	lsr	x1, x1, #4
 2b4:	movk	x0, #0xaaa, lsl #48
 2b8:	mul	x1, x1, x0
 2bc:	and	x1, x1, #0xfffffffffffffff
 2c0:	add	x1, x1, #0x1
 2c4:	add	x1, x1, x1, lsl #1
 2c8:	add	x28, x28, x1, lsl #4
 2cc:	str	x28, [x26, #32]
 2d0:	add	x19, x19, #0x30
 2d4:	cmp	x23, x19
 2d8:	add	x26, x26, #0x30
 2dc:	b.ne	1f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1f8>  // b.any
 2e0:	ldp	x27, x28, [sp, #80]
 2e4:	ldp	x20, x24, [x21]
 2e8:	cmp	x20, x24
 2ec:	b.eq	364 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x364>  // b.none
 2f0:	ldp	x19, x23, [x20, #24]
 2f4:	cmp	x19, x23
 2f8:	b.eq	330 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x330>  // b.none
 2fc:	nop
 300:	add	x0, x19, #0x18
 304:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 308:	ldr	w0, [x19, #16]
 30c:	cmp	w0, #0x40
 310:	b.ls	320 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x320>  // b.plast
 314:	ldr	x0, [x19, #8]
 318:	cbz	x0, 320 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x320>
 31c:	bl	0 <_ZdaPv>
 320:	add	x19, x19, #0x30
 324:	cmp	x23, x19
 328:	b.ne	300 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x300>  // b.any
 32c:	ldr	x23, [x20, #24]
 330:	cbz	x23, 33c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x33c>
 334:	mov	x0, x23
 338:	bl	0 <_ZdlPv>
 33c:	ldr	w0, [x20, #16]
 340:	cmp	w0, #0x40
 344:	b.ls	354 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x354>  // b.plast
 348:	ldr	x0, [x20, #8]
 34c:	cbz	x0, 354 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x354>
 350:	bl	0 <_ZdaPv>
 354:	add	x20, x20, #0x30
 358:	cmp	x24, x20
 35c:	b.ne	2f0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2f0>  // b.any
 360:	ldr	x24, [x21]
 364:	cbz	x24, 370 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x370>
 368:	mov	x0, x24
 36c:	bl	0 <_ZdlPv>
 370:	ldr	x0, [sp, #104]
 374:	str	x0, [x21]
 378:	add	x22, x0, x22
 37c:	str	x22, [x21, #16]
 380:	b	1a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1a4>
 384:	cmp	x0, #0x0
 388:	b.le	424 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x424>
 38c:	add	x20, x20, #0x8
 390:	add	x19, x19, #0x8
 394:	mov	x23, #0xffffffffffffffff    	// #-1
 398:	b	3c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3c4>
 39c:	mov	x1, x19
 3a0:	mov	x0, x20
 3a4:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 3a8:	add	x1, x19, #0x10
 3ac:	add	x0, x20, #0x10
 3b0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 3b4:	add	x19, x19, #0x30
 3b8:	add	x20, x20, #0x30
 3bc:	subs	x24, x24, #0x1
 3c0:	b.eq	418 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x418>  // b.none
 3c4:	ldur	x0, [x19, #-8]
 3c8:	stur	x0, [x20, #-8]
 3cc:	ldr	w0, [x20, #8]
 3d0:	cmp	w0, #0x40
 3d4:	b.hi	39c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x39c>  // b.pmore
 3d8:	ldr	w0, [x19, #8]
 3dc:	cmp	w0, #0x40
 3e0:	b.hi	39c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x39c>  // b.pmore
 3e4:	ldr	x2, [x19]
 3e8:	neg	w1, w0
 3ec:	str	w0, [x20, #8]
 3f0:	lsr	x0, x23, x1
 3f4:	and	x0, x0, x2
 3f8:	str	x0, [x20]
 3fc:	add	x1, x19, #0x10
 400:	add	x0, x20, #0x10
 404:	add	x19, x19, #0x30
 408:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 40c:	add	x20, x20, #0x30
 410:	subs	x24, x24, #0x1
 414:	b.ne	3c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3c4>  // b.any
 418:	ldp	x20, x28, [x21]
 41c:	ldp	x19, x23, [x25]
 420:	sub	x0, x28, x20
 424:	add	x19, x19, x0
 428:	cmp	x19, x23
 42c:	b.eq	19c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x19c>  // b.none
 430:	ldr	x0, [x19]
 434:	str	x0, [x28]
 438:	ldr	w0, [x19, #16]
 43c:	str	w0, [x28, #16]
 440:	cmp	w0, #0x40
 444:	b.hi	530 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x530>  // b.pmore
 448:	ldr	x0, [x19, #8]
 44c:	str	x0, [x28, #8]
 450:	ldp	x0, x20, [x19, #24]
 454:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 458:	movk	x1, #0xaaab
 45c:	stp	xzr, xzr, [x28, #24]
 460:	mov	x27, #0x0                   	// #0
 464:	str	xzr, [x28, #40]
 468:	sub	x20, x20, x0
 46c:	asr	x0, x20, #4
 470:	mul	x0, x0, x1
 474:	cbz	x0, 494 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x494>
 478:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 47c:	movk	x1, #0x2aa, lsl #48
 480:	cmp	x0, x1
 484:	b.hi	55c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x55c>  // b.pmore
 488:	mov	x0, x20
 48c:	bl	0 <_Znwm>
 490:	mov	x27, x0
 494:	dup	v0.2d, x27
 498:	add	x20, x27, x20
 49c:	str	x20, [x28, #40]
 4a0:	stur	q0, [x28, #24]
 4a4:	ldp	x26, x20, [x19, #24]
 4a8:	cmp	x26, x20
 4ac:	b.eq	504 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x504>  // b.none
 4b0:	mov	x24, x26
 4b4:	mov	x25, x27
 4b8:	mov	x1, x24
 4bc:	mov	x0, x25
 4c0:	add	x24, x24, #0x30
 4c4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 4c8:	cmp	x20, x24
 4cc:	add	x25, x25, #0x30
 4d0:	b.ne	4b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x4b8>  // b.any
 4d4:	sub	x1, x20, #0x30
 4d8:	mov	x0, #0xaaab                	// #43691
 4dc:	sub	x1, x1, x26
 4e0:	movk	x0, #0xaaaa, lsl #16
 4e4:	movk	x0, #0xaaaa, lsl #32
 4e8:	lsr	x1, x1, #4
 4ec:	movk	x0, #0xaaa, lsl #48
 4f0:	mul	x1, x1, x0
 4f4:	and	x1, x1, #0xfffffffffffffff
 4f8:	add	x1, x1, #0x1
 4fc:	add	x1, x1, x1, lsl #1
 500:	add	x27, x27, x1, lsl #4
 504:	str	x27, [x28, #32]
 508:	add	x19, x19, #0x30
 50c:	cmp	x19, x23
 510:	add	x28, x28, #0x30
 514:	b.eq	198 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x198>  // b.none
 518:	ldr	x0, [x19]
 51c:	str	x0, [x28]
 520:	ldr	w0, [x19, #16]
 524:	str	w0, [x28, #16]
 528:	cmp	w0, #0x40
 52c:	b.ls	448 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x448>  // b.plast
 530:	add	x1, x19, #0x8
 534:	add	x0, x28, #0x8
 538:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 53c:	b	450 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x450>
 540:	str	xzr, [sp, #104]
 544:	b	1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1e4>
 548:	add	x1, x19, #0x8
 54c:	add	x0, x26, #0x8
 550:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 554:	b	218 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x218>
 558:	stp	x27, x28, [sp, #80]
 55c:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-160]!
   4:	cmp	x2, x3
   8:	mov	x29, sp
   c:	str	x1, [sp, #120]
  10:	b.eq	2b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2b4>  // b.none
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x25, x26, [sp, #64]
  1c:	mov	x25, x0
  20:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  24:	ldp	x22, x0, [x0, #8]
  28:	stp	x27, x28, [sp, #80]
  2c:	sub	x27, x3, x2
  30:	stp	x19, x20, [sp, #16]
  34:	movk	x26, #0xaaab
  38:	asr	x20, x27, #4
  3c:	mov	x19, x2
  40:	stp	x23, x24, [sp, #48]
  44:	sub	x0, x0, x22
  48:	mul	x2, x20, x26
  4c:	mov	x24, x3
  50:	asr	x0, x0, #4
  54:	str	x2, [sp, #128]
  58:	mov	x23, x1
  5c:	mul	x0, x0, x26
  60:	cmp	x0, x2
  64:	b.cc	2bc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2bc>  // b.lo, b.ul, b.last
  68:	sub	x0, x22, x1
  6c:	str	x0, [sp, #152]
  70:	asr	x23, x0, #4
  74:	mul	x23, x23, x26
  78:	cmp	x2, x23
  7c:	b.cc	6f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6f8>  // b.lo, b.ul, b.last
  80:	add	x27, x19, x0
  84:	cmp	x3, x27
  88:	b.eq	8f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x8f8>  // b.none
  8c:	mov	x28, x22
  90:	str	x26, [sp, #144]
  94:	nop
  98:	ldr	x0, [x27]
  9c:	str	x0, [x28]
  a0:	ldr	w0, [x27, #16]
  a4:	str	w0, [x28, #16]
  a8:	cmp	w0, #0x40
  ac:	b.hi	6a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6a0>  // b.pmore
  b0:	ldr	x0, [x27, #8]
  b4:	str	x0, [x28, #8]
  b8:	ldp	x0, x1, [x27, #24]
  bc:	stp	xzr, xzr, [x28, #24]
  c0:	mov	x21, #0x0                   	// #0
  c4:	str	xzr, [x28, #40]
  c8:	sub	x20, x1, x0
  cc:	ldr	x1, [sp, #144]
  d0:	asr	x0, x20, #4
  d4:	mul	x0, x0, x1
  d8:	cbz	x0, f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0xf8>
  dc:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  e0:	movk	x1, #0x2aa, lsl #48
  e4:	cmp	x0, x1
  e8:	b.hi	900 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x900>  // b.pmore
  ec:	mov	x0, x20
  f0:	bl	0 <_Znwm>
  f4:	mov	x21, x0
  f8:	dup	v0.2d, x21
  fc:	add	x1, x21, x20
 100:	str	x1, [x28, #40]
 104:	stur	q0, [x28, #24]
 108:	ldp	x26, x20, [x27, #24]
 10c:	cmp	x26, x20
 110:	b.eq	174 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x174>  // b.none
 114:	mov	x6, x26
 118:	mov	x0, x21
 11c:	nop
 120:	mov	x1, x6
 124:	add	x6, x6, #0x30
 128:	stp	x6, x0, [sp, #104]
 12c:	str	x6, [sp, #136]
 130:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 134:	ldp	x6, x0, [sp, #104]
 138:	cmp	x20, x6
 13c:	add	x0, x0, #0x30
 140:	b.ne	120 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x120>  // b.any
 144:	sub	x1, x20, #0x30
 148:	mov	x0, #0xaaab                	// #43691
 14c:	sub	x1, x1, x26
 150:	movk	x0, #0xaaaa, lsl #16
 154:	movk	x0, #0xaaaa, lsl #32
 158:	lsr	x1, x1, #4
 15c:	movk	x0, #0xaaa, lsl #48
 160:	mul	x1, x1, x0
 164:	and	x1, x1, #0xfffffffffffffff
 168:	add	x1, x1, #0x1
 16c:	add	x1, x1, x1, lsl #1
 170:	add	x21, x21, x1, lsl #4
 174:	str	x21, [x28, #32]
 178:	add	x27, x27, #0x30
 17c:	cmp	x24, x27
 180:	add	x28, x28, #0x30
 184:	b.ne	98 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x98>  // b.any
 188:	ldr	x1, [x25, #8]
 18c:	ldr	x0, [sp, #128]
 190:	sub	x20, x0, x23
 194:	ldr	x0, [sp, #120]
 198:	add	x20, x20, x20, lsl #1
 19c:	add	x1, x1, x20, lsl #4
 1a0:	str	x1, [x25, #8]
 1a4:	cmp	x22, x0
 1a8:	b.eq	1f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x1f8>  // b.none
 1ac:	movi	v1.4s, #0x0
 1b0:	ldr	x2, [x0]
 1b4:	str	x2, [x1]
 1b8:	add	x0, x0, #0x30
 1bc:	add	x1, x1, #0x30
 1c0:	ldur	w2, [x0, #-32]
 1c4:	stur	w2, [x1, #-32]
 1c8:	ldur	x2, [x0, #-40]
 1cc:	stur	x2, [x1, #-40]
 1d0:	stur	wzr, [x0, #-32]
 1d4:	ldur	q0, [x0, #-24]
 1d8:	stur	q0, [x1, #-24]
 1dc:	ldur	x2, [x0, #-8]
 1e0:	stur	x2, [x1, #-8]
 1e4:	stur	xzr, [x0, #-8]
 1e8:	stur	q1, [x0, #-24]
 1ec:	cmp	x22, x0
 1f0:	b.ne	1b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x1b0>  // b.any
 1f4:	ldr	x1, [x25, #8]
 1f8:	ldr	x0, [sp, #152]
 1fc:	add	x1, x1, x0
 200:	str	x1, [x25, #8]
 204:	cmp	x0, #0x0
 208:	b.le	2a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2a0>
 20c:	ldr	x0, [sp, #120]
 210:	add	x19, x19, #0x8
 214:	mov	x20, #0xffffffffffffffff    	// #-1
 218:	add	x21, x0, #0x8
 21c:	b	248 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x248>
 220:	mov	x1, x19
 224:	mov	x0, x21
 228:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 22c:	add	x1, x19, #0x10
 230:	add	x0, x21, #0x10
 234:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 238:	add	x19, x19, #0x30
 23c:	add	x21, x21, #0x30
 240:	subs	x23, x23, #0x1
 244:	b.eq	2a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2a0>  // b.none
 248:	ldur	x0, [x19, #-8]
 24c:	stur	x0, [x21, #-8]
 250:	ldr	w0, [x21, #8]
 254:	cmp	w0, #0x40
 258:	b.hi	220 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x220>  // b.pmore
 25c:	ldr	w0, [x19, #8]
 260:	cmp	w0, #0x40
 264:	b.hi	220 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x220>  // b.pmore
 268:	ldr	x2, [x19]
 26c:	neg	w1, w0
 270:	str	w0, [x21, #8]
 274:	lsr	x0, x20, x1
 278:	and	x0, x0, x2
 27c:	str	x0, [x21]
 280:	add	x1, x19, #0x10
 284:	add	x0, x21, #0x10
 288:	add	x19, x19, #0x30
 28c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 290:	add	x21, x21, #0x30
 294:	subs	x23, x23, #0x1
 298:	b.ne	248 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x248>  // b.any
 29c:	nop
 2a0:	ldp	x19, x20, [sp, #16]
 2a4:	ldp	x21, x22, [sp, #32]
 2a8:	ldp	x23, x24, [sp, #48]
 2ac:	ldp	x25, x26, [sp, #64]
 2b0:	ldp	x27, x28, [sp, #80]
 2b4:	ldp	x29, x30, [sp], #160
 2b8:	ret
 2bc:	ldr	x27, [x25]
 2c0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 2c4:	movk	x0, #0x2aa, lsl #48
 2c8:	sub	x22, x22, x27
 2cc:	asr	x22, x22, #4
 2d0:	mul	x26, x22, x26
 2d4:	sub	x1, x0, x26
 2d8:	cmp	x2, x1
 2dc:	b.hi	904 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x904>  // b.pmore
 2e0:	cmp	x2, x26
 2e4:	csel	x20, x2, x26, cs  // cs = hs, nlast
 2e8:	adds	x20, x20, x26
 2ec:	str	x20, [sp, #128]
 2f0:	b.cs	6b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6b0>  // b.hs, b.nlast
 2f4:	str	xzr, [sp, #136]
 2f8:	cbnz	x20, 8e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x8e0>
 2fc:	ldr	x0, [sp, #120]
 300:	ldr	x20, [sp, #136]
 304:	cmp	x0, x27
 308:	b.eq	408 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x408>  // b.none
 30c:	nop
 310:	ldr	x0, [x27]
 314:	str	x0, [x20]
 318:	ldr	w0, [x27, #16]
 31c:	str	w0, [x20, #16]
 320:	cmp	w0, #0x40
 324:	b.hi	6c8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6c8>  // b.pmore
 328:	ldr	x0, [x27, #8]
 32c:	str	x0, [x20, #8]
 330:	ldp	x0, x1, [x27, #24]
 334:	stp	xzr, xzr, [x20, #24]
 338:	mov	x21, #0x0                   	// #0
 33c:	str	xzr, [x20, #40]
 340:	sub	x22, x1, x0
 344:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 348:	movk	x1, #0xaaab
 34c:	asr	x0, x22, #4
 350:	mul	x0, x0, x1
 354:	cbz	x0, 374 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x374>
 358:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 35c:	movk	x1, #0x2aa, lsl #48
 360:	cmp	x0, x1
 364:	b.hi	900 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x900>  // b.pmore
 368:	mov	x0, x22
 36c:	bl	0 <_Znwm>
 370:	mov	x21, x0
 374:	dup	v0.2d, x21
 378:	add	x1, x21, x22
 37c:	str	x1, [x20, #40]
 380:	stur	q0, [x20, #24]
 384:	ldp	x28, x26, [x27, #24]
 388:	cmp	x28, x26
 38c:	b.eq	3ec <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x3ec>  // b.none
 390:	mov	x6, x28
 394:	mov	x22, x21
 398:	mov	x1, x6
 39c:	add	x6, x6, #0x30
 3a0:	mov	x0, x22
 3a4:	stp	x6, x6, [sp, #104]
 3a8:	add	x22, x22, #0x30
 3ac:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 3b0:	ldr	x6, [sp, #104]
 3b4:	cmp	x26, x6
 3b8:	b.ne	398 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x398>  // b.any
 3bc:	sub	x1, x26, #0x30
 3c0:	mov	x0, #0xaaab                	// #43691
 3c4:	sub	x1, x1, x28
 3c8:	movk	x0, #0xaaaa, lsl #16
 3cc:	movk	x0, #0xaaaa, lsl #32
 3d0:	lsr	x1, x1, #4
 3d4:	movk	x0, #0xaaa, lsl #48
 3d8:	mul	x1, x1, x0
 3dc:	and	x1, x1, #0xfffffffffffffff
 3e0:	add	x1, x1, #0x1
 3e4:	add	x1, x1, x1, lsl #1
 3e8:	add	x21, x21, x1, lsl #4
 3ec:	ldr	x0, [sp, #120]
 3f0:	str	x21, [x20, #32]
 3f4:	add	x27, x27, #0x30
 3f8:	add	x20, x20, #0x30
 3fc:	cmp	x0, x27
 400:	b.ne	310 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x310>  // b.any
 404:	nop
 408:	ldr	x0, [x19]
 40c:	str	x0, [x20]
 410:	ldr	w0, [x19, #16]
 414:	str	w0, [x20, #16]
 418:	cmp	w0, #0x40
 41c:	b.hi	6d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6d8>  // b.pmore
 420:	ldr	x0, [x19, #8]
 424:	str	x0, [x20, #8]
 428:	ldp	x28, x26, [x19, #24]
 42c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 430:	movk	x1, #0xaaab
 434:	stp	xzr, xzr, [x20, #24]
 438:	mov	x27, #0x0                   	// #0
 43c:	str	xzr, [x20, #40]
 440:	sub	x21, x26, x28
 444:	asr	x0, x21, #4
 448:	mul	x0, x0, x1
 44c:	cbz	x0, 470 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x470>
 450:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 454:	movk	x1, #0x2aa, lsl #48
 458:	cmp	x0, x1
 45c:	b.hi	900 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x900>  // b.pmore
 460:	mov	x0, x21
 464:	bl	0 <_Znwm>
 468:	ldp	x28, x26, [x19, #24]
 46c:	mov	x27, x0
 470:	dup	v0.2d, x27
 474:	add	x1, x27, x21
 478:	str	x1, [x20, #40]
 47c:	cmp	x28, x26
 480:	stur	q0, [x20, #24]
 484:	b.eq	4dc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x4dc>  // b.none
 488:	mov	x21, x28
 48c:	mov	x22, x27
 490:	mov	x1, x21
 494:	mov	x0, x22
 498:	add	x21, x21, #0x30
 49c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 4a0:	cmp	x26, x21
 4a4:	add	x22, x22, #0x30
 4a8:	b.ne	490 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x490>  // b.any
 4ac:	sub	x1, x26, #0x30
 4b0:	mov	x0, #0xaaab                	// #43691
 4b4:	sub	x1, x1, x28
 4b8:	movk	x0, #0xaaaa, lsl #16
 4bc:	movk	x0, #0xaaaa, lsl #32
 4c0:	lsr	x1, x1, #4
 4c4:	movk	x0, #0xaaa, lsl #48
 4c8:	mul	x1, x1, x0
 4cc:	and	x1, x1, #0xfffffffffffffff
 4d0:	add	x1, x1, #0x1
 4d4:	add	x1, x1, x1, lsl #1
 4d8:	add	x27, x27, x1, lsl #4
 4dc:	str	x27, [x20, #32]
 4e0:	add	x19, x19, #0x30
 4e4:	cmp	x24, x19
 4e8:	add	x20, x20, #0x30
 4ec:	b.ne	408 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x408>  // b.any
 4f0:	ldr	x22, [x25, #8]
 4f4:	ldr	x0, [sp, #120]
 4f8:	cmp	x0, x22
 4fc:	b.eq	5ec <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x5ec>  // b.none
 500:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 504:	movk	x21, #0xaaab
 508:	ldr	x0, [x23]
 50c:	str	x0, [x20]
 510:	ldr	w0, [x23, #16]
 514:	str	w0, [x20, #16]
 518:	cmp	w0, #0x40
 51c:	b.hi	6e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6e8>  // b.pmore
 520:	ldr	x0, [x23, #8]
 524:	str	x0, [x20, #8]
 528:	ldp	x27, x19, [x23, #24]
 52c:	stp	xzr, xzr, [x20, #24]
 530:	mov	x28, #0x0                   	// #0
 534:	str	xzr, [x20, #40]
 538:	sub	x24, x19, x27
 53c:	asr	x0, x24, #4
 540:	mul	x0, x0, x21
 544:	cbz	x0, 568 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x568>
 548:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 54c:	movk	x1, #0x2aa, lsl #48
 550:	cmp	x0, x1
 554:	b.hi	900 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x900>  // b.pmore
 558:	mov	x0, x24
 55c:	bl	0 <_Znwm>
 560:	ldp	x27, x19, [x23, #24]
 564:	mov	x28, x0
 568:	dup	v0.2d, x28
 56c:	add	x1, x28, x24
 570:	str	x1, [x20, #40]
 574:	cmp	x19, x27
 578:	stur	q0, [x20, #24]
 57c:	b.eq	5d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x5d4>  // b.none
 580:	mov	x24, x27
 584:	mov	x26, x28
 588:	mov	x1, x24
 58c:	mov	x0, x26
 590:	add	x24, x24, #0x30
 594:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 598:	cmp	x19, x24
 59c:	add	x26, x26, #0x30
 5a0:	b.ne	588 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x588>  // b.any
 5a4:	sub	x1, x19, #0x30
 5a8:	mov	x0, #0xaaab                	// #43691
 5ac:	sub	x1, x1, x27
 5b0:	movk	x0, #0xaaaa, lsl #16
 5b4:	movk	x0, #0xaaaa, lsl #32
 5b8:	lsr	x1, x1, #4
 5bc:	movk	x0, #0xaaa, lsl #48
 5c0:	mul	x1, x1, x0
 5c4:	and	x1, x1, #0xfffffffffffffff
 5c8:	add	x1, x1, #0x1
 5cc:	add	x1, x1, x1, lsl #1
 5d0:	add	x28, x28, x1, lsl #4
 5d4:	str	x28, [x20, #32]
 5d8:	add	x23, x23, #0x30
 5dc:	cmp	x22, x23
 5e0:	add	x20, x20, #0x30
 5e4:	b.ne	508 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x508>  // b.any
 5e8:	ldr	x22, [x25, #8]
 5ec:	ldr	x21, [x25]
 5f0:	cmp	x21, x22
 5f4:	b.eq	66c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x66c>  // b.none
 5f8:	ldp	x19, x23, [x21, #24]
 5fc:	cmp	x19, x23
 600:	b.eq	638 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x638>  // b.none
 604:	nop
 608:	add	x0, x19, #0x18
 60c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 610:	ldr	w0, [x19, #16]
 614:	cmp	w0, #0x40
 618:	b.ls	628 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x628>  // b.plast
 61c:	ldr	x0, [x19, #8]
 620:	cbz	x0, 628 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x628>
 624:	bl	0 <_ZdaPv>
 628:	add	x19, x19, #0x30
 62c:	cmp	x23, x19
 630:	b.ne	608 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x608>  // b.any
 634:	ldr	x23, [x21, #24]
 638:	cbz	x23, 644 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x644>
 63c:	mov	x0, x23
 640:	bl	0 <_ZdlPv>
 644:	ldr	w0, [x21, #16]
 648:	cmp	w0, #0x40
 64c:	b.ls	65c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x65c>  // b.plast
 650:	ldr	x0, [x21, #8]
 654:	cbz	x0, 65c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x65c>
 658:	bl	0 <_ZdaPv>
 65c:	add	x21, x21, #0x30
 660:	cmp	x21, x22
 664:	b.ne	5f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x5f8>  // b.any
 668:	ldr	x22, [x25]
 66c:	cbz	x22, 678 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x678>
 670:	mov	x0, x22
 674:	bl	0 <_ZdlPv>
 678:	ldp	x0, x1, [sp, #128]
 67c:	stp	x1, x20, [x25]
 680:	ldp	x19, x20, [sp, #16]
 684:	ldp	x21, x22, [sp, #32]
 688:	add	x0, x1, x0
 68c:	str	x0, [x25, #16]
 690:	ldp	x23, x24, [sp, #48]
 694:	ldp	x25, x26, [sp, #64]
 698:	ldp	x27, x28, [sp, #80]
 69c:	b	2b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2b4>
 6a0:	add	x1, x27, #0x8
 6a4:	add	x0, x28, #0x8
 6a8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 6ac:	b	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0xb8>
 6b0:	mov	x0, #0x7fffffffffffffe0    	// #9223372036854775776
 6b4:	str	x0, [sp, #128]
 6b8:	bl	0 <_Znwm>
 6bc:	str	x0, [sp, #136]
 6c0:	ldr	x27, [x25]
 6c4:	b	2fc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2fc>
 6c8:	add	x1, x27, #0x8
 6cc:	add	x0, x20, #0x8
 6d0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 6d4:	b	330 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x330>
 6d8:	add	x1, x19, #0x8
 6dc:	add	x0, x20, #0x8
 6e0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 6e4:	b	428 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x428>
 6e8:	add	x1, x23, #0x8
 6ec:	add	x0, x20, #0x8
 6f0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 6f4:	b	528 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x528>
 6f8:	sub	x24, x22, x27
 6fc:	mov	x1, x22
 700:	movi	v1.4s, #0x0
 704:	mov	x0, x24
 708:	ldr	x2, [x0]
 70c:	str	x2, [x1]
 710:	add	x0, x0, #0x30
 714:	add	x1, x1, #0x30
 718:	ldur	w2, [x0, #-32]
 71c:	stur	w2, [x1, #-32]
 720:	ldur	x2, [x0, #-40]
 724:	stur	x2, [x1, #-40]
 728:	stur	wzr, [x0, #-32]
 72c:	ldur	q0, [x0, #-24]
 730:	stur	q0, [x1, #-24]
 734:	ldur	x2, [x0, #-8]
 738:	stur	x2, [x1, #-8]
 73c:	stur	xzr, [x0, #-8]
 740:	stur	q1, [x0, #-24]
 744:	cmp	x22, x0
 748:	b.ne	708 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x708>  // b.any
 74c:	ldr	x0, [sp, #120]
 750:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 754:	ldr	x1, [x25, #8]
 758:	sub	x0, x24, x0
 75c:	cmp	x0, #0x0
 760:	movk	x2, #0xaaab
 764:	asr	x3, x0, #4
 768:	add	x0, x1, x27
 76c:	str	x0, [x25, #8]
 770:	mul	x25, x3, x2
 774:	b.le	858 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x858>
 778:	ldur	x0, [x24, #-48]
 77c:	stur	x0, [x22, #-48]
 780:	sub	x24, x24, #0x30
 784:	sub	x22, x22, #0x30
 788:	cmp	x22, x24
 78c:	b.eq	838 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x838>  // b.none
 790:	ldr	w0, [x22, #16]
 794:	cmp	w0, #0x40
 798:	b.ls	7a8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x7a8>  // b.plast
 79c:	ldr	x0, [x22, #8]
 7a0:	cbz	x0, 7a8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x7a8>
 7a4:	bl	0 <_ZdaPv>
 7a8:	ldr	x0, [x24, #8]
 7ac:	str	x0, [x22, #8]
 7b0:	ldp	x26, x28, [x22, #24]
 7b4:	ldr	w0, [x24, #16]
 7b8:	ldur	q0, [x24, #24]
 7bc:	str	w0, [x22, #16]
 7c0:	str	wzr, [x24, #16]
 7c4:	mov	x23, x26
 7c8:	cmp	x26, x28
 7cc:	stur	q0, [x22, #24]
 7d0:	ldr	x0, [x24, #40]
 7d4:	str	x0, [x22, #40]
 7d8:	stp	xzr, xzr, [x24, #24]
 7dc:	str	xzr, [x24, #40]
 7e0:	b.eq	814 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x814>  // b.none
 7e4:	nop
 7e8:	add	x0, x23, #0x18
 7ec:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 7f0:	ldr	w0, [x23, #16]
 7f4:	cmp	w0, #0x40
 7f8:	b.ls	808 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x808>  // b.plast
 7fc:	ldr	x0, [x23, #8]
 800:	cbz	x0, 808 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x808>
 804:	bl	0 <_ZdaPv>
 808:	add	x23, x23, #0x30
 80c:	cmp	x28, x23
 810:	b.ne	7e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x7e8>  // b.any
 814:	cbz	x26, 820 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x820>
 818:	mov	x0, x26
 81c:	bl	0 <_ZdlPv>
 820:	subs	x25, x25, #0x1
 824:	b.eq	858 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x858>  // b.none
 828:	ldr	x0, [x24, #-48]!
 82c:	str	x0, [x22, #-48]!
 830:	cmp	x22, x24
 834:	b.ne	790 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x790>  // b.any
 838:	adrp	x3, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 83c:	adrp	x1, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 840:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 844:	add	x3, x3, #0x0
 848:	add	x1, x1, #0x0
 84c:	add	x0, x0, #0x0
 850:	mov	w2, #0x302                 	// #770
 854:	bl	0 <__assert_fail>
 858:	cmp	x27, #0x0
 85c:	b.le	2a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2a0>
 860:	ldr	x0, [sp, #120]
 864:	add	x19, x19, #0x8
 868:	mov	x22, #0xffffffffffffffff    	// #-1
 86c:	add	x21, x0, #0x8
 870:	b	8a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x8a4>
 874:	mov	x1, x19
 878:	mov	x0, x21
 87c:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 880:	add	x1, x19, #0x10
 884:	add	x0, x21, #0x10
 888:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 88c:	add	x19, x19, #0x30
 890:	ldr	x0, [sp, #128]
 894:	add	x21, x21, #0x30
 898:	subs	x0, x0, #0x1
 89c:	str	x0, [sp, #128]
 8a0:	b.eq	2a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2a0>  // b.none
 8a4:	ldur	x0, [x19, #-8]
 8a8:	stur	x0, [x21, #-8]
 8ac:	ldr	w0, [x21, #8]
 8b0:	cmp	w0, #0x40
 8b4:	b.hi	874 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x874>  // b.pmore
 8b8:	ldr	w0, [x19, #8]
 8bc:	cmp	w0, #0x40
 8c0:	b.hi	874 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x874>  // b.pmore
 8c4:	ldr	x2, [x19]
 8c8:	neg	w1, w0
 8cc:	str	w0, [x21, #8]
 8d0:	lsr	x0, x22, x1
 8d4:	and	x0, x0, x2
 8d8:	str	x0, [x21]
 8dc:	b	880 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x880>
 8e0:	cmp	x20, x0
 8e4:	csel	x20, x20, x0, ls  // ls = plast
 8e8:	add	x20, x20, x20, lsl #1
 8ec:	lsl	x0, x20, #4
 8f0:	str	x0, [sp, #128]
 8f4:	b	6b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6b8>
 8f8:	mov	x1, x22
 8fc:	b	18c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x18c>
 900:	bl	0 <_ZSt17__throw_bad_allocv>
 904:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 908:	add	x0, x0, #0x0
 90c:	bl	0 <_ZSt20__throw_length_errorPKc>

Interpreter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-208]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x8
  14:	ldr	x0, [x0]
  18:	stp	x21, x22, [sp, #32]
  1c:	adrp	x21, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  20:	mov	x22, x1
  24:	ldr	x2, [x0]
  28:	ldr	x21, [x21]
  2c:	ldr	x2, [x2, #48]
  30:	mov	x1, x21
  34:	blr	x2
  38:	tst	w0, #0xff
  3c:	b.ne	64 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x64>  // b.any
  40:	ldr	x0, [x19]
  44:	str	xzr, [x19]
  48:	ldp	x21, x22, [sp, #32]
  4c:	orr	x0, x0, #0x1
  50:	str	x0, [x20]
  54:	mov	x0, x20
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #208
  60:	ret
  64:	stp	x23, x24, [sp, #48]
  68:	mov	x1, x21
  6c:	ldr	x23, [x19]
  70:	mov	x0, x23
  74:	ldr	x2, [x23]
  78:	ldr	x2, [x2, #48]
  7c:	str	xzr, [x19]
  80:	blr	x2
  84:	tst	w0, #0xff
  88:	b.eq	2a4 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x2a4>  // b.none
  8c:	ldr	x1, [x23]
  90:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
  94:	add	x0, x0, #0x0
  98:	ldr	x22, [x22]
  9c:	ldr	x2, [x1, #24]
  a0:	cmp	x2, x0
  a4:	b.ne	27c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x27c>  // b.any
  a8:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
  ac:	strb	wzr, [sp, #144]
  b0:	add	x24, sp, #0x80
  b4:	mov	w3, #0x1                   	// #1
  b8:	ldr	x0, [x0]
  bc:	add	x4, x24, #0x10
  c0:	ldr	x2, [x1, #16]
  c4:	add	x0, x0, #0x10
  c8:	stp	x25, x26, [sp, #64]
  cc:	add	x26, sp, #0xa0
  d0:	mov	x1, x26
  d4:	stp	x4, xzr, [sp, #128]
  d8:	stp	x0, xzr, [sp, #160]
  dc:	mov	x0, x23
  e0:	stp	xzr, xzr, [sp, #176]
  e4:	str	w3, [sp, #192]
  e8:	str	x24, [sp, #200]
  ec:	blr	x2
  f0:	ldr	x0, [sp, #168]
  f4:	ldr	x1, [sp, #184]
  f8:	cmp	x1, x0
  fc:	b.eq	108 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x108>  // b.none
 100:	mov	x0, x26
 104:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 108:	ldr	x1, [sp, #200]
 10c:	add	x19, sp, #0x60
 110:	add	x0, x19, #0x10
 114:	str	x0, [sp, #96]
 118:	ldr	x25, [x1]
 11c:	ldr	x21, [x1, #8]
 120:	cmn	x25, x21
 124:	ccmp	x25, #0x0, #0x0, ne  // ne = any
 128:	b.eq	2c8 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x2c8>  // b.none
 12c:	str	x21, [sp, #88]
 130:	cmp	x21, #0xf
 134:	b.hi	1fc <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x1fc>  // b.pmore
 138:	cmp	x21, #0x1
 13c:	b.ne	25c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x25c>  // b.any
 140:	ldrb	w2, [x25]
 144:	mov	x1, x0
 148:	strb	w2, [sp, #112]
 14c:	str	x21, [sp, #104]
 150:	mov	x0, x26
 154:	strb	wzr, [x1, x21]
 158:	add	x24, x24, #0x10
 15c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 160:	ldr	x0, [sp, #128]
 164:	cmp	x0, x24
 168:	b.eq	22c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x22c>  // b.none
 16c:	bl	0 <_ZdlPv>
 170:	ldp	x25, x26, [sp, #64]
 174:	add	x0, x19, #0x10
 178:	ldp	x1, x2, [sp, #96]
 17c:	cmp	x1, x0
 180:	ldr	x0, [x22]
 184:	b.eq	234 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x234>  // b.none
 188:	stp	x1, x2, [x22]
 18c:	add	x3, x22, #0x10
 190:	cmp	x0, x3
 194:	b.eq	268 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x268>  // b.none
 198:	ldr	x2, [sp, #112]
 19c:	ldr	x1, [x22, #16]
 1a0:	str	x2, [x22, #16]
 1a4:	cbz	x0, 270 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x270>
 1a8:	str	x0, [sp, #96]
 1ac:	str	x1, [sp, #112]
 1b0:	str	xzr, [sp, #104]
 1b4:	add	x19, x19, #0x10
 1b8:	strb	wzr, [x0]
 1bc:	ldr	x0, [sp, #96]
 1c0:	cmp	x0, x19
 1c4:	b.eq	1cc <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x1cc>  // b.none
 1c8:	bl	0 <_ZdlPv>
 1cc:	ldr	x1, [x23]
 1d0:	mov	x0, #0x1                   	// #1
 1d4:	ldr	x1, [x1, #8]
 1d8:	str	x0, [x20]
 1dc:	mov	x0, x23
 1e0:	blr	x1
 1e4:	mov	x0, x20
 1e8:	ldp	x19, x20, [sp, #16]
 1ec:	ldp	x21, x22, [sp, #32]
 1f0:	ldp	x23, x24, [sp, #48]
 1f4:	ldp	x29, x30, [sp], #208
 1f8:	ret
 1fc:	add	x1, sp, #0x58
 200:	mov	x0, x19
 204:	mov	x2, #0x0                   	// #0
 208:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 20c:	ldr	x1, [sp, #88]
 210:	str	x0, [sp, #96]
 214:	str	x1, [sp, #112]
 218:	mov	x2, x21
 21c:	mov	x1, x25
 220:	bl	0 <memcpy>
 224:	ldp	x21, x1, [sp, #88]
 228:	b	14c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x14c>
 22c:	ldp	x25, x26, [sp, #64]
 230:	b	174 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x174>
 234:	cbz	x2, 24c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x24c>
 238:	cmp	x2, #0x1
 23c:	b.eq	290 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x290>  // b.none
 240:	bl	0 <memcpy>
 244:	ldr	x0, [x22]
 248:	ldr	x2, [sp, #104]
 24c:	str	x2, [x22, #8]
 250:	strb	wzr, [x0, x2]
 254:	ldr	x0, [sp, #96]
 258:	b	1b0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x1b0>
 25c:	mov	x1, x0
 260:	cbz	x21, 14c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x14c>
 264:	b	218 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x218>
 268:	ldr	x0, [sp, #112]
 26c:	str	x0, [x22, #16]
 270:	add	x0, x19, #0x10
 274:	str	x0, [sp, #96]
 278:	b	1b0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x1b0>
 27c:	add	x19, sp, #0x60
 280:	mov	x0, x23
 284:	mov	x8, x19
 288:	blr	x2
 28c:	b	174 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x174>
 290:	ldrb	w1, [sp, #112]
 294:	strb	w1, [x0]
 298:	ldr	x0, [x22]
 29c:	ldr	x2, [sp, #104]
 2a0:	b	24c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x24c>
 2a4:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 2a8:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 2ac:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 2b0:	add	x3, x3, #0x0
 2b4:	add	x1, x1, #0x0
 2b8:	add	x0, x0, #0x0
 2bc:	mov	w2, #0x329                 	// #809
 2c0:	stp	x25, x26, [sp, #64]
 2c4:	bl	0 <__assert_fail>
 2c8:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 2cc:	add	x0, x0, #0x0
 2d0:	bl	0 <_ZSt19__throw_logic_errorPKc>
 2d4:	nop

00000000000002d8 <LLVMLinkInInterpreter>:
 2d8:	ret
 2dc:	nop

00000000000002e0 <_ZN4llvm11InterpreterC1ESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>:
 2e0:	mov	x2, x1
 2e4:	stp	x29, x30, [sp, #-48]!
 2e8:	mov	x29, sp
 2ec:	ldr	x3, [x2]
 2f0:	stp	x19, x20, [sp, #16]
 2f4:	add	x1, sp, #0x28
 2f8:	str	xzr, [x2]
 2fc:	mov	x19, x0
 300:	str	x3, [sp, #40]
 304:	bl	0 <_ZN4llvm15ExecutionEngineC2ESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 308:	ldr	x20, [sp, #40]
 30c:	cbz	x20, 324 <_ZN4llvm11InterpreterC1ESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x44>
 310:	mov	x0, x20
 314:	bl	0 <_ZN4llvm6ModuleD1Ev>
 318:	mov	x0, x20
 31c:	mov	x1, #0x2c8                 	// #712
 320:	bl	0 <_ZdlPvm>
 324:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 328:	add	x2, x19, #0x200
 32c:	movi	v0.4s, #0x0
 330:	mov	w0, #0x1                   	// #1
 334:	ldr	x1, [x1]
 338:	str	xzr, [x19, #648]
 33c:	str	w0, [x19, #656]
 340:	mov	x0, x19
 344:	add	x1, x1, #0x10
 348:	str	x1, [x19]
 34c:	stur	q0, [x2, #152]
 350:	str	xzr, [x19, #680]
 354:	stur	q0, [x2, #184]
 358:	stur	q0, [x2, #200]
 35c:	stur	q0, [x2, #216]
 360:	str	xzr, [x19, #640]
 364:	bl	0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv>
 368:	mov	x0, x19
 36c:	bl	0 <_ZN4llvm15ExecutionEngine11emitGlobalsEv>
 370:	mov	x0, #0x10                  	// #16
 374:	bl	0 <_Znwm>
 378:	add	x1, x19, #0x58
 37c:	str	x1, [x0]
 380:	strb	wzr, [x0, #8]
 384:	str	x0, [x19, #688]
 388:	ldp	x19, x20, [sp, #16]
 38c:	ldp	x29, x30, [sp], #48
 390:	ret
 394:	nop

0000000000000398 <_ZN4llvm11Interpreter17runAtExitHandlersEv>:
 398:	stp	x29, x30, [sp, #-32]!
 39c:	mov	x29, sp
 3a0:	ldr	x1, [x0, #720]
 3a4:	str	x19, [sp, #16]
 3a8:	mov	x19, x0
 3ac:	ldr	x0, [x0, #728]
 3b0:	cmp	x1, x0
 3b4:	b.eq	3f0 <_ZN4llvm11Interpreter17runAtExitHandlersEv+0x58>  // b.none
 3b8:	ldur	x1, [x0, #-8]
 3bc:	mov	x2, #0x0                   	// #0
 3c0:	mov	x0, x19
 3c4:	mov	x3, #0x0                   	// #0
 3c8:	bl	0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
 3cc:	ldr	x1, [x19, #728]
 3d0:	mov	x0, x19
 3d4:	sub	x1, x1, #0x8
 3d8:	str	x1, [x19, #728]
 3dc:	bl	0 <_ZN4llvm11Interpreter3runEv>
 3e0:	ldr	x1, [x19, #720]
 3e4:	ldr	x0, [x19, #728]
 3e8:	cmp	x0, x1
 3ec:	b.ne	3b8 <_ZN4llvm11Interpreter17runAtExitHandlersEv+0x20>  // b.any
 3f0:	ldr	x19, [sp, #16]
 3f4:	ldp	x29, x30, [sp], #32
 3f8:	ret
 3fc:	nop

0000000000000400 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>:
 400:	stp	x29, x30, [sp, #-80]!
 404:	mov	x29, sp
 408:	stp	x19, x20, [sp, #16]
 40c:	stp	x21, x22, [sp, #32]
 410:	stp	x23, x24, [sp, #48]
 414:	str	x25, [sp, #64]
 418:	cbz	x1, 5f0 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1f0>
 41c:	ldr	x4, [x1, #24]
 420:	cbz	x4, 5d0 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1d0>
 424:	ldrb	w5, [x4, #8]
 428:	cmp	w5, #0xc
 42c:	b.ne	5b0 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1b0>  // b.any
 430:	ldr	w4, [x4, #12]
 434:	mov	x20, x0
 438:	mov	x21, x8
 43c:	sub	w4, w4, #0x1
 440:	cmp	x4, x3
 444:	csel	x3, x4, x3, ls  // ls = plast
 448:	bl	0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
 44c:	mov	x0, x20
 450:	bl	0 <_ZN4llvm11Interpreter3runEv>
 454:	mov	x0, x21
 458:	add	x1, x20, #0x288
 45c:	ldr	x2, [x20, #640]
 460:	str	x2, [x0], #8
 464:	ldr	w2, [x1, #8]
 468:	str	w2, [x0, #8]
 46c:	cmp	w2, #0x40
 470:	b.hi	5a8 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1a8>  // b.pmore
 474:	ldr	x0, [x20, #648]
 478:	str	x0, [x21, #8]
 47c:	ldr	x0, [x20, #664]
 480:	mov	x24, x21
 484:	ldr	x19, [x20, #672]
 488:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 48c:	movk	x1, #0xaaab
 490:	stp	xzr, xzr, [x24, #24]!
 494:	sub	x19, x19, x0
 498:	str	xzr, [x24, #16]
 49c:	mov	x23, #0x0                   	// #0
 4a0:	asr	x0, x19, #4
 4a4:	mul	x0, x0, x1
 4a8:	cbz	x0, 4c8 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc8>
 4ac:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 4b0:	movk	x1, #0x2aa, lsl #48
 4b4:	cmp	x0, x1
 4b8:	b.hi	610 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x210>  // b.pmore
 4bc:	mov	x0, x19
 4c0:	bl	0 <_Znwm>
 4c4:	mov	x23, x0
 4c8:	dup	v0.2d, x23
 4cc:	add	x19, x23, x19
 4d0:	stur	q0, [x21, #24]
 4d4:	str	x19, [x24, #16]
 4d8:	ldr	x25, [x20, #664]
 4dc:	ldr	x19, [x20, #672]
 4e0:	cmp	x25, x19
 4e4:	b.eq	588 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x188>  // b.none
 4e8:	mov	x20, x25
 4ec:	mov	x22, x23
 4f0:	b	518 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x118>
 4f4:	ldr	x0, [x20, #8]
 4f8:	str	x0, [x22, #8]
 4fc:	add	x1, x20, #0x18
 500:	add	x0, x22, #0x18
 504:	add	x20, x20, #0x30
 508:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 50c:	cmp	x19, x20
 510:	add	x22, x22, #0x30
 514:	b.eq	558 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x158>  // b.none
 518:	ldr	x0, [x20]
 51c:	str	x0, [x22]
 520:	ldr	w0, [x20, #16]
 524:	str	w0, [x22, #16]
 528:	cmp	w0, #0x40
 52c:	b.ls	4f4 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xf4>  // b.plast
 530:	add	x1, x20, #0x8
 534:	add	x0, x22, #0x8
 538:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 53c:	add	x1, x20, #0x18
 540:	add	x0, x22, #0x18
 544:	add	x20, x20, #0x30
 548:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 54c:	cmp	x19, x20
 550:	add	x22, x22, #0x30
 554:	b.ne	518 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x118>  // b.any
 558:	sub	x1, x19, #0x30
 55c:	mov	x19, #0xaaab                	// #43691
 560:	sub	x1, x1, x25
 564:	movk	x19, #0xaaaa, lsl #16
 568:	movk	x19, #0xaaaa, lsl #32
 56c:	lsr	x1, x1, #4
 570:	movk	x19, #0xaaa, lsl #48
 574:	mul	x1, x1, x19
 578:	and	x1, x1, #0xfffffffffffffff
 57c:	add	x1, x1, #0x1
 580:	add	x1, x1, x1, lsl #1
 584:	add	x23, x23, x1, lsl #4
 588:	mov	x0, x21
 58c:	ldp	x19, x20, [sp, #16]
 590:	ldp	x21, x22, [sp, #32]
 594:	ldr	x25, [sp, #64]
 598:	str	x23, [x24, #8]
 59c:	ldp	x23, x24, [sp, #48]
 5a0:	ldp	x29, x30, [sp], #80
 5a4:	ret
 5a8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 5ac:	b	47c <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x7c>
 5b0:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5b4:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5b8:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5bc:	add	x3, x3, #0x0
 5c0:	add	x1, x1, #0x0
 5c4:	add	x0, x0, #0x0
 5c8:	mov	w2, #0x108                 	// #264
 5cc:	bl	0 <__assert_fail>
 5d0:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5d4:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5d8:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5dc:	add	x3, x3, #0x0
 5e0:	add	x1, x1, #0x0
 5e4:	add	x0, x0, #0x0
 5e8:	mov	w2, #0x69                  	// #105
 5ec:	bl	0 <__assert_fail>
 5f0:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5f4:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5f8:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 5fc:	add	x3, x3, #0x0
 600:	add	x1, x1, #0x0
 604:	add	x0, x0, #0x0
 608:	mov	w2, #0x52                  	// #82
 60c:	bl	0 <__assert_fail>
 610:	bl	0 <_ZSt17__throw_bad_allocv>
 614:	nop

0000000000000618 <_ZN4llvm11InterpreterD1Ev>:
 618:	stp	x29, x30, [sp, #-64]!
 61c:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 620:	mov	x29, sp
 624:	ldr	x1, [x1]
 628:	stp	x19, x20, [sp, #16]
 62c:	mov	x20, x0
 630:	ldr	x0, [x0, #688]
 634:	stp	x21, x22, [sp, #32]
 638:	add	x1, x1, #0x10
 63c:	str	x1, [x20]
 640:	cbz	x0, 64c <_ZN4llvm11InterpreterD1Ev+0x34>
 644:	mov	x1, #0x10                  	// #16
 648:	bl	0 <_ZdlPvm>
 64c:	ldr	x0, [x20, #720]
 650:	cbz	x0, 658 <_ZN4llvm11InterpreterD1Ev+0x40>
 654:	bl	0 <_ZdlPv>
 658:	ldr	x19, [x20, #696]
 65c:	ldr	x22, [x20, #704]
 660:	cmp	x19, x22
 664:	b.eq	70c <_ZN4llvm11InterpreterD1Ev+0xf4>  // b.none
 668:	str	x23, [sp, #48]
 66c:	nop
 670:	ldp	x21, x23, [x19, #104]
 674:	cmp	x21, x23
 678:	b.eq	694 <_ZN4llvm11InterpreterD1Ev+0x7c>  // b.none
 67c:	nop
 680:	ldr	x0, [x21], #8
 684:	bl	0 <free>
 688:	cmp	x23, x21
 68c:	b.ne	680 <_ZN4llvm11InterpreterD1Ev+0x68>  // b.any
 690:	ldr	x23, [x19, #104]
 694:	cbz	x23, 6a0 <_ZN4llvm11InterpreterD1Ev+0x88>
 698:	mov	x0, x23
 69c:	bl	0 <_ZdlPv>
 6a0:	ldp	x21, x23, [x19, #80]
 6a4:	cmp	x21, x23
 6a8:	b.eq	6e0 <_ZN4llvm11InterpreterD1Ev+0xc8>  // b.none
 6ac:	nop
 6b0:	add	x0, x21, #0x18
 6b4:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 6b8:	ldr	w0, [x21, #16]
 6bc:	cmp	w0, #0x40
 6c0:	b.ls	6d0 <_ZN4llvm11InterpreterD1Ev+0xb8>  // b.plast
 6c4:	ldr	x0, [x21, #8]
 6c8:	cbz	x0, 6d0 <_ZN4llvm11InterpreterD1Ev+0xb8>
 6cc:	bl	0 <_ZdaPv>
 6d0:	add	x21, x21, #0x30
 6d4:	cmp	x23, x21
 6d8:	b.ne	6b0 <_ZN4llvm11InterpreterD1Ev+0x98>  // b.any
 6dc:	ldr	x23, [x19, #80]
 6e0:	cbz	x23, 6ec <_ZN4llvm11InterpreterD1Ev+0xd4>
 6e4:	mov	x0, x23
 6e8:	bl	0 <_ZdlPv>
 6ec:	ldr	x1, [x19, #48]
 6f0:	add	x0, x19, #0x20
 6f4:	add	x19, x19, #0x80
 6f8:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 6fc:	cmp	x22, x19
 700:	b.ne	670 <_ZN4llvm11InterpreterD1Ev+0x58>  // b.any
 704:	ldr	x23, [sp, #48]
 708:	ldr	x22, [x20, #696]
 70c:	cbz	x22, 718 <_ZN4llvm11InterpreterD1Ev+0x100>
 710:	mov	x0, x22
 714:	bl	0 <_ZdlPv>
 718:	ldr	x19, [x20, #664]
 71c:	ldr	x21, [x20, #672]
 720:	cmp	x19, x21
 724:	b.eq	758 <_ZN4llvm11InterpreterD1Ev+0x140>  // b.none
 728:	add	x0, x19, #0x18
 72c:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 730:	ldr	w0, [x19, #16]
 734:	cmp	w0, #0x40
 738:	b.ls	748 <_ZN4llvm11InterpreterD1Ev+0x130>  // b.plast
 73c:	ldr	x0, [x19, #8]
 740:	cbz	x0, 748 <_ZN4llvm11InterpreterD1Ev+0x130>
 744:	bl	0 <_ZdaPv>
 748:	add	x19, x19, #0x30
 74c:	cmp	x21, x19
 750:	b.ne	728 <_ZN4llvm11InterpreterD1Ev+0x110>  // b.any
 754:	ldr	x21, [x20, #664]
 758:	cbz	x21, 764 <_ZN4llvm11InterpreterD1Ev+0x14c>
 75c:	mov	x0, x21
 760:	bl	0 <_ZdlPv>
 764:	ldr	w0, [x20, #656]
 768:	cmp	w0, #0x40
 76c:	b.ls	77c <_ZN4llvm11InterpreterD1Ev+0x164>  // b.plast
 770:	ldr	x0, [x20, #648]
 774:	cbz	x0, 77c <_ZN4llvm11InterpreterD1Ev+0x164>
 778:	bl	0 <_ZdaPv>
 77c:	mov	x0, x20
 780:	ldp	x19, x20, [sp, #16]
 784:	ldp	x21, x22, [sp, #32]
 788:	ldp	x29, x30, [sp], #64
 78c:	b	0 <_ZN4llvm15ExecutionEngineD2Ev>

0000000000000790 <_ZN4llvm11InterpreterD0Ev>:
 790:	stp	x29, x30, [sp, #-32]!
 794:	mov	x29, sp
 798:	str	x19, [sp, #16]
 79c:	mov	x19, x0
 7a0:	bl	618 <_ZN4llvm11InterpreterD1Ev>
 7a4:	mov	x0, x19
 7a8:	mov	x1, #0x2e8                 	// #744
 7ac:	ldr	x19, [sp, #16]
 7b0:	ldp	x29, x30, [sp], #32
 7b4:	b	0 <_ZdlPvm>

00000000000007b8 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
 7b8:	stp	x29, x30, [sp, #-288]!
 7bc:	mov	x29, sp
 7c0:	stp	x19, x20, [sp, #16]
 7c4:	mov	x19, x0
 7c8:	ldr	x0, [x0]
 7cc:	stp	x21, x22, [sp, #32]
 7d0:	add	x22, sp, #0x78
 7d4:	mov	x21, x1
 7d8:	mov	x8, x22
 7dc:	bl	0 <_ZN4llvm6Module14materializeAllEv>
 7e0:	ldr	x0, [sp, #120]
 7e4:	ands	x20, x0, #0xfffffffffffffffe
 7e8:	b.eq	928 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x170>  // b.none
 7ec:	strb	wzr, [sp, #192]
 7f0:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 7f4:	add	x19, sp, #0xb0
 7f8:	ldr	x0, [x20]
 7fc:	add	x3, x19, #0x10
 800:	ldr	x1, [x1]
 804:	stp	xzr, x19, [sp, #120]
 808:	ldr	x2, [x0, #48]
 80c:	stp	xzr, xzr, [sp, #136]
 810:	mov	x0, x20
 814:	stp	x3, xzr, [sp, #176]
 818:	blr	x2
 81c:	tst	w0, #0xff
 820:	b.eq	978 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1c0>  // b.none
 824:	ldp	x2, x1, [x20, #8]
 828:	mov	x0, #0x1                   	// #1
 82c:	str	x1, [sp, #104]
 830:	str	x0, [sp, #152]
 834:	cmp	x2, x1
 838:	b.eq	910 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x158>  // b.none
 83c:	stp	x23, x24, [sp, #48]
 840:	add	x23, sp, #0xa8
 844:	add	x24, sp, #0xf0
 848:	stp	x25, x26, [sp, #64]
 84c:	mov	x25, x2
 850:	add	x26, sp, #0xd0
 854:	stp	x27, x28, [sp, #80]
 858:	add	x28, sp, #0x80
 85c:	add	x27, sp, #0xa0
 860:	orr	x0, x0, #0x1
 864:	str	xzr, [sp, #152]
 868:	str	x0, [sp, #208]
 86c:	mov	x8, x23
 870:	mov	x1, x28
 874:	mov	x0, x27
 878:	ldr	x3, [x25]
 87c:	str	xzr, [x25]
 880:	str	x3, [sp, #160]
 884:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 888:	mov	x1, x23
 88c:	mov	x8, x24
 890:	mov	x0, x26
 894:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 898:	ldr	x1, [sp, #152]
 89c:	tbnz	w1, #0, ae0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x328>
 8a0:	tst	x1, #0xfffffffffffffffe
 8a4:	b.ne	ae0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x328>  // b.any
 8a8:	ldr	x0, [sp, #240]
 8ac:	ldr	x3, [sp, #168]
 8b0:	orr	x0, x0, x1
 8b4:	orr	x0, x0, #0x1
 8b8:	str	x0, [sp, #152]
 8bc:	tbnz	w3, #0, b10 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x358>
 8c0:	tst	x3, #0xfffffffffffffffe
 8c4:	b.ne	b10 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x358>  // b.any
 8c8:	ldr	x0, [sp, #160]
 8cc:	cbz	x0, 8dc <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x124>
 8d0:	ldr	x1, [x0]
 8d4:	ldr	x1, [x1, #8]
 8d8:	blr	x1
 8dc:	ldr	x0, [sp, #208]
 8e0:	tbnz	w0, #0, b18 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x360>
 8e4:	tst	x0, #0xfffffffffffffffe
 8e8:	b.ne	b18 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x360>  // b.any
 8ec:	ldr	x0, [sp, #104]
 8f0:	add	x25, x25, #0x8
 8f4:	cmp	x0, x25
 8f8:	ldr	x0, [sp, #152]
 8fc:	b.ne	860 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa8>  // b.any
 900:	ldp	x23, x24, [sp, #48]
 904:	orr	x0, x0, #0x1
 908:	ldp	x25, x26, [sp, #64]
 90c:	ldp	x27, x28, [sp, #80]
 910:	ldr	x1, [x20]
 914:	ldr	x1, [x1, #8]
 918:	str	x0, [sp, #168]
 91c:	mov	x0, x20
 920:	blr	x1
 924:	b	9a0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1e8>
 928:	ldr	x1, [x19]
 92c:	str	xzr, [x19]
 930:	mov	x0, #0x2e8                 	// #744
 934:	str	x1, [sp, #240]
 938:	bl	0 <_Znwm>
 93c:	mov	x19, x0
 940:	add	x1, sp, #0xf0
 944:	bl	2e0 <_ZN4llvm11InterpreterC1ESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 948:	ldr	x20, [sp, #240]
 94c:	cbz	x20, 964 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1ac>
 950:	mov	x0, x20
 954:	bl	0 <_ZN4llvm6ModuleD1Ev>
 958:	mov	x0, x20
 95c:	mov	x1, #0x2c8                 	// #712
 960:	bl	0 <_ZdlPvm>
 964:	mov	x0, x19
 968:	ldp	x19, x20, [sp, #16]
 96c:	ldp	x21, x22, [sp, #32]
 970:	ldp	x29, x30, [sp], #288
 974:	ret
 978:	add	x0, sp, #0xf0
 97c:	add	x8, sp, #0xa8
 980:	add	x1, sp, #0x80
 984:	str	x20, [sp, #240]
 988:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 98c:	ldr	x0, [sp, #240]
 990:	cbz	x0, 9a0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1e8>
 994:	ldr	x1, [x0]
 998:	ldr	x1, [x1, #8]
 99c:	blr	x1
 9a0:	ldr	x0, [sp, #168]
 9a4:	ands	x0, x0, #0xfffffffffffffffe
 9a8:	b.eq	a74 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2bc>  // b.none
 9ac:	adrp	x4, 0 <_ZTVN4llvm18raw_string_ostreamE>
 9b0:	orr	x3, x0, #0x1
 9b4:	add	x5, sp, #0xd0
 9b8:	add	x7, sp, #0xe0
 9bc:	ldr	x4, [x4]
 9c0:	mov	w6, #0x1                   	// #1
 9c4:	mov	x2, #0x31                  	// #49
 9c8:	stp	x23, x24, [sp, #48]
 9cc:	add	x4, x4, #0x10
 9d0:	add	x24, sp, #0xf0
 9d4:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 9d8:	mov	x0, x24
 9dc:	add	x1, x1, #0x0
 9e0:	stp	x25, x26, [sp, #64]
 9e4:	stp	x27, x28, [sp, #80]
 9e8:	str	x3, [sp, #168]
 9ec:	stp	x7, xzr, [sp, #208]
 9f0:	strb	wzr, [sp, #224]
 9f4:	stp	x4, xzr, [sp, #240]
 9f8:	stp	xzr, xzr, [sp, #256]
 9fc:	str	w6, [sp, #272]
 a00:	str	x5, [sp, #280]
 a04:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 a08:	ldp	x3, x2, [x0, #16]
 a0c:	mov	x1, x0
 a10:	cmp	x3, x2
 a14:	b.eq	b20 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x368>  // b.none
 a18:	mov	w0, #0xa                   	// #10
 a1c:	strb	w0, [x2]
 a20:	ldr	x0, [x1, #24]
 a24:	add	x0, x0, #0x1
 a28:	str	x0, [x1, #24]
 a2c:	ldr	x0, [sp, #168]
 a30:	ands	x0, x0, #0xfffffffffffffffe
 a34:	b.eq	b38 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x380>  // b.none
 a38:	ldr	x2, [x0]
 a3c:	ldr	x2, [x2, #16]
 a40:	blr	x2
 a44:	ldr	x0, [sp, #248]
 a48:	ldr	x1, [sp, #264]
 a4c:	cmp	x1, x0
 a50:	b.eq	a5c <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2a4>  // b.none
 a54:	mov	x0, x24
 a58:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 a5c:	ldr	x0, [sp, #280]
 a60:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 a64:	mov	w2, #0x2c9                 	// #713
 a68:	add	x1, x1, #0x0
 a6c:	ldr	x0, [x0]
 a70:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 a74:	ldr	x0, [sp, #144]
 a78:	tbnz	w0, #0, ae8 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x330>
 a7c:	tst	x0, #0xfffffffffffffffe
 a80:	b.ne	ae8 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x330>  // b.any
 a84:	ldr	x0, [sp, #136]
 a88:	tbnz	w0, #0, afc <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x344>
 a8c:	tst	x0, #0xfffffffffffffffe
 a90:	b.ne	afc <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x344>  // b.any
 a94:	cbz	x21, aa4 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2ec>
 a98:	mov	x0, x21
 a9c:	mov	x1, x19
 aa0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 aa4:	ldr	x0, [sp, #176]
 aa8:	add	x19, x19, #0x10
 aac:	cmp	x0, x19
 ab0:	b.eq	ab8 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x300>  // b.none
 ab4:	bl	0 <_ZdlPv>
 ab8:	ldr	x0, [sp, #120]
 abc:	tbnz	w0, #0, acc <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x314>
 ac0:	tst	x0, #0xfffffffffffffffe
 ac4:	mov	x19, #0x0                   	// #0
 ac8:	b.eq	964 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1ac>  // b.none
 acc:	mov	x0, x22
 ad0:	stp	x23, x24, [sp, #48]
 ad4:	stp	x25, x26, [sp, #64]
 ad8:	stp	x27, x28, [sp, #80]
 adc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 ae0:	add	x0, sp, #0x98
 ae4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 ae8:	add	x0, sp, #0x90
 aec:	stp	x23, x24, [sp, #48]
 af0:	stp	x25, x26, [sp, #64]
 af4:	stp	x27, x28, [sp, #80]
 af8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 afc:	add	x0, sp, #0x88
 b00:	stp	x23, x24, [sp, #48]
 b04:	stp	x25, x26, [sp, #64]
 b08:	stp	x27, x28, [sp, #80]
 b0c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 b10:	mov	x0, x23
 b14:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 b18:	mov	x0, x26
 b1c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 b20:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 b24:	add	x1, x1, #0x0
 b28:	mov	x2, #0x1                   	// #1
 b2c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 b30:	mov	x1, x0
 b34:	b	a2c <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x274>
 b38:	ldp	x0, x2, [x1, #16]
 b3c:	sub	x0, x0, x2
 b40:	cmp	x0, #0x6
 b44:	b.ls	b70 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3b8>  // b.plast
 b48:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 b4c:	add	x0, x0, #0x0
 b50:	ldr	w3, [x0]
 b54:	ldur	w0, [x0, #3]
 b58:	str	w3, [x2]
 b5c:	stur	w0, [x2, #3]
 b60:	ldr	x0, [x1, #24]
 b64:	add	x0, x0, #0x7
 b68:	str	x0, [x1, #24]
 b6c:	b	a44 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x28c>
 b70:	mov	x0, x1
 b74:	mov	x2, #0x7                   	// #7
 b78:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 b7c:	add	x1, x1, #0x0
 b80:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 b84:	b	a44 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x28c>

Disassembly of section .text._ZN4llvm15ExecutionEngine21generateCodeForModuleEPNS_6ModuleE:

0000000000000000 <_ZN4llvm15ExecutionEngine21generateCodeForModuleEPNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine14finalizeObjectEv:

0000000000000000 <_ZN4llvm15ExecutionEngine14finalizeObjectEv>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine21getGlobalValueAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm15ExecutionEngine21getGlobalValueAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine18getFunctionAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm15ExecutionEngine18getFunctionAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine24RegisterJITEventListenerEPNS_16JITEventListenerE:

0000000000000000 <_ZN4llvm15ExecutionEngine24RegisterJITEventListenerEPNS_16JITEventListenerE>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine26UnregisterJITEventListenerEPNS_16JITEventListenerE:

0000000000000000 <_ZN4llvm15ExecutionEngine26UnregisterJITEventListenerEPNS_16JITEventListenerE>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine16getTargetMachineEv:

0000000000000000 <_ZN4llvm15ExecutionEngine16getTargetMachineEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm11Interpreter25getPointerToNamedFunctionENS_9StringRefEb:

0000000000000000 <_ZN4llvm11Interpreter25getPointerToNamedFunctionENS_9StringRefEb>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm11Interpreter20getPointerToFunctionEPNS_8FunctionE:

0000000000000000 <_ZN4llvm11Interpreter20getPointerToFunctionEPNS_8FunctionE>:
   0:	mov	x0, x1
   4:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine21setProcessAllSectionsEb:

0000000000000000 <_ZN4llvm15ExecutionEngine21setProcessAllSectionsEb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine21setProcessAllSectionsEb>
   8:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine21setProcessAllSectionsEb>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x1af                 	// #431
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE:

0000000000000000 <_ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE>
   8:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x1a0                 	// #416
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm:

0000000000000000 <_ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm>
   8:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0xfa                  	// #250
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15ExecutionEngine23getOrEmitGlobalVariableEPKNS_14GlobalVariableE:

0000000000000000 <_ZN4llvm15ExecutionEngine23getOrEmitGlobalVariableEPKNS_14GlobalVariableE>:
   0:	b	0 <_ZN4llvm15ExecutionEngine18getPointerToGlobalEPKNS_11GlobalValueE>

Disassembly of section .text._ZN4llvm15ExecutionEngine26getPointerToFunctionOrStubEPNS_8FunctionE:

0000000000000000 <_ZN4llvm15ExecutionEngine26getPointerToFunctionOrStubEPNS_8FunctionE>:
   0:	ldr	x4, [x0]
   4:	adrp	x2, 0 <_ZN4llvm15ExecutionEngine26getPointerToFunctionOrStubEPNS_8FunctionE>
   8:	add	x2, x2, #0x0
   c:	ldr	x4, [x4, #128]
  10:	cmp	x4, x2
  14:	b.ne	20 <_ZN4llvm15ExecutionEngine26getPointerToFunctionOrStubEPNS_8FunctionE+0x20>  // b.any
  18:	mov	x0, x1
  1c:	ret
  20:	mov	x16, x4
  24:	br	x16

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-160]!
   4:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
   8:	mov	w3, #0x1                   	// #1
   c:	mov	x29, sp
  10:	ldr	x2, [x0]
  14:	strb	wzr, [sp, #96]
  18:	ldr	x1, [x1]
  1c:	stp	x21, x22, [sp, #32]
  20:	add	x21, sp, #0x50
  24:	ldr	x2, [x2, #16]
  28:	add	x4, x21, #0x10
  2c:	add	x1, x1, #0x10
  30:	stp	x19, x20, [sp, #16]
  34:	mov	x19, x8
  38:	str	x23, [sp, #48]
  3c:	add	x23, sp, #0x70
  40:	stp	x4, xzr, [sp, #80]
  44:	stp	x1, xzr, [sp, #112]
  48:	mov	x1, x23
  4c:	stp	xzr, xzr, [sp, #128]
  50:	str	w3, [sp, #144]
  54:	str	x21, [sp, #152]
  58:	blr	x2
  5c:	ldr	x0, [sp, #120]
  60:	ldr	x1, [sp, #136]
  64:	cmp	x1, x0
  68:	b.eq	74 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x74>  // b.none
  6c:	mov	x0, x23
  70:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  74:	ldr	x1, [sp, #152]
  78:	add	x0, x19, #0x10
  7c:	ldr	x20, [x1, #8]
  80:	str	x0, [x19]
  84:	ldr	x22, [x1]
  88:	cmn	x22, x20
  8c:	ccmp	x22, #0x0, #0x0, ne  // ne = any
  90:	b.eq	128 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x128>  // b.none
  94:	str	x20, [sp, #72]
  98:	cmp	x20, #0xf
  9c:	b.hi	f4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xf4>  // b.pmore
  a0:	cmp	x20, #0x1
  a4:	b.ne	ec <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xec>  // b.any
  a8:	ldrb	w1, [x22]
  ac:	strb	w1, [x19, #16]
  b0:	str	x20, [x19, #8]
  b4:	add	x21, x21, #0x10
  b8:	strb	wzr, [x0, x20]
  bc:	mov	x0, x23
  c0:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  c4:	ldr	x0, [sp, #80]
  c8:	cmp	x0, x21
  cc:	b.eq	d4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xd4>  // b.none
  d0:	bl	0 <_ZdlPv>
  d4:	mov	x0, x19
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldr	x23, [sp, #48]
  e4:	ldp	x29, x30, [sp], #160
  e8:	ret
  ec:	cbz	x20, b0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb0>
  f0:	b	110 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x110>
  f4:	add	x1, sp, #0x48
  f8:	mov	x0, x19
  fc:	mov	x2, #0x0                   	// #0
 100:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 104:	ldr	x1, [sp, #72]
 108:	str	x0, [x19]
 10c:	str	x1, [x19, #16]
 110:	mov	x2, x20
 114:	mov	x1, x22
 118:	bl	0 <memcpy>
 11c:	ldr	x0, [x19]
 120:	ldr	x20, [sp, #72]
 124:	b	b0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb0>
 128:	adrp	x0, 0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>
 12c:	add	x0, x0, #0x0
 130:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE:

0000000000000000 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w20, [x0, #536]
  14:	ldr	w0, [x0, #540]
  18:	stp	x21, x22, [sp, #32]
  1c:	cmp	w20, w0
  20:	stp	x23, x24, [sp, #48]
  24:	mov	x24, x1
  28:	mov	w23, w0
  2c:	b.cs	6c <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x6c>  // b.hs, b.nlast
  30:	ldr	x21, [x19, #528]
  34:	mov	w1, w20
  38:	ldr	x0, [x24]
  3c:	str	xzr, [x24]
  40:	str	x0, [x21, x1, lsl #3]
  44:	add	x1, x1, #0x1
  48:	cmp	x1, x23
  4c:	b.hi	1e0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x1e0>  // b.pmore
  50:	add	w20, w20, #0x1
  54:	ldp	x21, x22, [sp, #32]
  58:	ldp	x23, x24, [sp, #48]
  5c:	str	w20, [x19, #536]
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #96
  68:	ret
  6c:	add	x1, x23, #0x2
  70:	stp	x25, x26, [sp, #64]
  74:	mov	x0, #0xffffffff            	// #4294967295
  78:	orr	x1, x1, x1, lsr #1
  7c:	orr	x1, x1, x1, lsr #2
  80:	orr	x1, x1, x1, lsr #4
  84:	orr	x1, x1, x1, lsr #8
  88:	orr	x1, x1, x1, lsr #16
  8c:	orr	x1, x1, x1, lsr #32
  90:	add	x1, x1, #0x1
  94:	cmp	x1, x0
  98:	b.hi	1a8 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x1a8>  // b.pmore
  9c:	lsl	x0, x1, #3
  a0:	mov	w25, w1
  a4:	mov	x23, x1
  a8:	str	x1, [sp, #88]
  ac:	bl	0 <malloc>
  b0:	mov	x21, x0
  b4:	cbz	x0, 204 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x204>
  b8:	ldr	x1, [x19, #528]
  bc:	ubfiz	x20, x20, #3, #32
  c0:	add	x22, x1, x20
  c4:	cmp	x1, x22
  c8:	b.eq	1d8 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x1d8>  // b.none
  cc:	sub	x2, x22, x1
  d0:	add	x3, x21, #0xf
  d4:	sub	x2, x2, #0x8
  d8:	sub	x3, x3, x1
  dc:	cmp	x2, #0x30
  e0:	mov	x0, x1
  e4:	lsr	x2, x2, #3
  e8:	ccmp	x3, #0x1e, #0x0, hi  // hi = pmore
  ec:	b.ls	1bc <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x1bc>  // b.plast
  f0:	add	x2, x2, #0x1
  f4:	mov	x0, #0x0                   	// #0
  f8:	movi	v1.4s, #0x0
  fc:	lsr	x3, x2, #1
 100:	lsl	x3, x3, #4
 104:	nop
 108:	ldr	q0, [x1, x0]
 10c:	str	q1, [x1, x0]
 110:	str	q0, [x21, x0]
 114:	add	x0, x0, #0x10
 118:	cmp	x3, x0
 11c:	b.ne	108 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x108>  // b.any
 120:	and	x0, x2, #0xfffffffffffffffe
 124:	tbz	w2, #0, 134 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x134>
 128:	ldr	x2, [x1, x0, lsl #3]
 12c:	str	xzr, [x1, x0, lsl #3]
 130:	str	x2, [x21, x0, lsl #3]
 134:	ldr	x26, [x19, #528]
 138:	add	x22, x26, x20
 13c:	cmp	x26, x22
 140:	b.eq	1d8 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x1d8>  // b.none
 144:	nop
 148:	ldr	x20, [x22, #-8]!
 14c:	cbz	x20, 19c <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x19c>
 150:	mov	x0, x20
 154:	bl	0 <_ZN4llvm6ModuleD1Ev>
 158:	mov	x0, x20
 15c:	mov	x1, #0x2c8                 	// #712
 160:	bl	0 <_ZdlPvm>
 164:	cmp	x26, x22
 168:	b.ne	148 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x148>  // b.any
 16c:	ldr	x22, [x19, #528]
 170:	add	x20, x19, #0x200
 174:	add	x0, x19, #0x220
 178:	cmp	x22, x0
 17c:	b.eq	188 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x188>  // b.none
 180:	mov	x0, x22
 184:	bl	0 <free>
 188:	str	w25, [x20, #28]
 18c:	str	x21, [x20, #16]
 190:	ldr	w20, [x19, #536]
 194:	ldp	x25, x26, [sp, #64]
 198:	b	34 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x34>
 19c:	cmp	x26, x22
 1a0:	b.ne	148 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x148>  // b.any
 1a4:	b	16c <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x16c>
 1a8:	mov	x23, x0
 1ac:	mov	x1, x0
 1b0:	mov	w25, #0xffffffff            	// #-1
 1b4:	mov	x0, #0x7fffffff8           	// #34359738360
 1b8:	b	a8 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0xa8>
 1bc:	mov	x1, x21
 1c0:	ldr	x2, [x0]
 1c4:	str	xzr, [x0], #8
 1c8:	str	x2, [x1], #8
 1cc:	cmp	x22, x0
 1d0:	b.ne	1c0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x1c0>  // b.any
 1d4:	b	134 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x134>
 1d8:	add	x20, x19, #0x200
 1dc:	b	174 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x174>
 1e0:	adrp	x3, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 1e4:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 1e8:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 1ec:	add	x3, x3, #0x0
 1f0:	add	x1, x1, #0x0
 1f4:	add	x0, x0, #0x0
 1f8:	mov	w2, #0x43                  	// #67
 1fc:	stp	x25, x26, [sp, #64]
 200:	bl	0 <__assert_fail>
 204:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 208:	mov	w1, #0x1                   	// #1
 20c:	add	x0, x0, #0x0
 210:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 214:	ldr	w20, [x19, #536]
 218:	b	b8 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0xb8>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldp	x19, x20, [x0]
  10:	cmp	x19, x20
  14:	b.eq	54 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x54>  // b.none
  18:	str	x21, [sp, #32]
  1c:	mov	x21, x0
  20:	add	x0, x19, #0x18
  24:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>
  28:	ldr	w1, [x19, #16]
  2c:	cmp	w1, #0x40
  30:	b.ls	40 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x40>  // b.plast
  34:	ldr	x0, [x19, #8]
  38:	cbz	x0, 40 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x40>
  3c:	bl	0 <_ZdaPv>
  40:	add	x19, x19, #0x30
  44:	cmp	x20, x19
  48:	b.ne	20 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x20>  // b.any
  4c:	ldr	x20, [x21]
  50:	ldr	x21, [sp, #32]
  54:	cbz	x20, 68 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x68>
  58:	mov	x0, x20
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	b	0 <_ZdlPv>
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC2ERKS3_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  14:	stp	x23, x24, [sp, #48]
  18:	mov	x23, x0
  1c:	movk	x1, #0xaaab
  20:	ldp	x0, x19, [x20]
  24:	stp	x21, x22, [sp, #32]
  28:	mov	x22, #0x0                   	// #0
  2c:	stp	xzr, xzr, [x23]
  30:	str	xzr, [x23, #16]
  34:	sub	x19, x19, x0
  38:	asr	x0, x19, #4
  3c:	mul	x0, x0, x1
  40:	cbz	x0, 60 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0x60>
  44:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  48:	movk	x1, #0x2aa, lsl #48
  4c:	cmp	x0, x1
  50:	b.hi	134 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0x134>  // b.pmore
  54:	mov	x0, x19
  58:	bl	0 <_Znwm>
  5c:	mov	x22, x0
  60:	dup	v0.2d, x22
  64:	add	x19, x22, x19
  68:	str	x19, [x23, #16]
  6c:	str	q0, [x23]
  70:	ldp	x24, x19, [x20]
  74:	cmp	x24, x19
  78:	b.eq	11c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0x11c>  // b.none
  7c:	mov	x20, x24
  80:	mov	x21, x22
  84:	b	ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0xac>
  88:	ldr	x0, [x20, #8]
  8c:	str	x0, [x21, #8]
  90:	add	x1, x20, #0x18
  94:	add	x0, x21, #0x18
  98:	add	x20, x20, #0x30
  9c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_>
  a0:	cmp	x19, x20
  a4:	add	x21, x21, #0x30
  a8:	b.eq	ec <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0xec>  // b.none
  ac:	ldr	x0, [x20]
  b0:	str	x0, [x21]
  b4:	ldr	w0, [x20, #16]
  b8:	str	w0, [x21, #16]
  bc:	cmp	w0, #0x40
  c0:	b.ls	88 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0x88>  // b.plast
  c4:	add	x1, x20, #0x8
  c8:	add	x0, x21, #0x8
  cc:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
  d0:	add	x1, x20, #0x18
  d4:	add	x0, x21, #0x18
  d8:	add	x20, x20, #0x30
  dc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_>
  e0:	cmp	x19, x20
  e4:	add	x21, x21, #0x30
  e8:	b.ne	ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0xac>  // b.any
  ec:	sub	x1, x19, #0x30
  f0:	mov	x19, #0xaaab                	// #43691
  f4:	sub	x1, x1, x24
  f8:	movk	x19, #0xaaaa, lsl #16
  fc:	movk	x19, #0xaaaa, lsl #32
 100:	lsr	x1, x1, #4
 104:	movk	x19, #0xaaa, lsl #48
 108:	mul	x1, x1, x19
 10c:	and	x1, x1, #0xfffffffffffffff
 110:	add	x1, x1, #0x1
 114:	add	x1, x1, x1, lsl #1
 118:	add	x22, x22, x1, lsl #4
 11c:	ldp	x19, x20, [sp, #16]
 120:	str	x22, [x23, #8]
 124:	ldp	x21, x22, [sp, #32]
 128:	ldp	x23, x24, [sp, #48]
 12c:	ldp	x29, x30, [sp], #64
 130:	ret
 134:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>:
   0:	cbz	x1, b4 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0xb4>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x1
  14:	str	x23, [sp, #48]
  18:	mov	x23, x0
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x0, x23
  24:	ldr	x1, [x21, #24]
  28:	mov	x20, x21
  2c:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  30:	ldp	x19, x22, [x21, #64]
  34:	ldr	x21, [x21, #16]
  38:	cmp	x19, x22
  3c:	b.eq	70 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x70>  // b.none
  40:	add	x0, x19, #0x18
  44:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  48:	ldr	w1, [x19, #16]
  4c:	cmp	w1, #0x40
  50:	b.ls	60 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x60>  // b.plast
  54:	ldr	x0, [x19, #8]
  58:	cbz	x0, 60 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x60>
  5c:	bl	0 <_ZdaPv>
  60:	add	x19, x19, #0x30
  64:	cmp	x22, x19
  68:	b.ne	40 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x40>  // b.any
  6c:	ldr	x22, [x20, #64]
  70:	cbz	x22, 7c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x7c>
  74:	mov	x0, x22
  78:	bl	0 <_ZdlPv>
  7c:	ldr	w1, [x20, #56]
  80:	cmp	w1, #0x40
  84:	b.ls	94 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x94>  // b.plast
  88:	ldr	x0, [x20, #48]
  8c:	cbz	x0, 94 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x94>
  90:	bl	0 <_ZdaPv>
  94:	mov	x0, x20
  98:	bl	0 <_ZdlPv>
  9c:	cbnz	x21, 20 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x20>
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x21, x22, [sp, #32]
  a8:	ldr	x23, [sp, #48]
  ac:	ldp	x29, x30, [sp], #64
  b0:	ret
  b4:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	ldp	x24, x26, [x0]
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	x21, x1
  24:	stp	x27, x28, [sp, #80]
  28:	mov	x27, x1
  2c:	sub	x1, x26, x24
  30:	cmp	x3, x1, asr #3
  34:	b.eq	1ac <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1ac>  // b.none
  38:	mov	x22, x0
  3c:	mov	x20, x2
  40:	asr	x0, x1, #3
  44:	sub	x28, x21, x24
  48:	cbz	x0, 18c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x18c>
  4c:	cmp	x0, x0, lsl #1
  50:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
  54:	lsl	x0, x0, #1
  58:	b.ls	178 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x178>  // b.plast
  5c:	mov	x0, x25
  60:	bl	0 <_Znwm>
  64:	mov	x23, x0
  68:	add	x25, x0, x25
  6c:	add	x19, x0, #0x8
  70:	ldr	x0, [x20]
  74:	str	x0, [x23, x28]
  78:	str	xzr, [x20]
  7c:	cmp	x21, x24
  80:	b.eq	cc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xcc>  // b.none
  84:	mov	x20, x23
  88:	mov	x19, x24
  8c:	nop
  90:	ldr	x1, [x19]
  94:	str	xzr, [x19]
  98:	str	x1, [x20]
  9c:	ldr	x0, [x19]
  a0:	cbz	x0, 164 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x164>
  a4:	ldr	x1, [x0]
  a8:	add	x19, x19, #0x8
  ac:	add	x20, x20, #0x8
  b0:	ldr	x1, [x1, #8]
  b4:	blr	x1
  b8:	cmp	x21, x19
  bc:	b.ne	90 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x90>  // b.any
  c0:	sub	x19, x21, x24
  c4:	add	x19, x19, #0x8
  c8:	add	x19, x23, x19
  cc:	cmp	x21, x26
  d0:	b.eq	134 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x134>  // b.none
  d4:	sub	x26, x26, x21
  d8:	sub	x26, x26, #0x8
  dc:	lsr	x1, x26, #3
  e0:	add	x1, x1, #0x1
  e4:	cbz	x26, 194 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x194>
  e8:	lsr	x0, x1, #1
  ec:	mov	x2, #0x0                   	// #0
  f0:	lsl	x0, x0, #4
  f4:	nop
  f8:	ldr	q0, [x21, x2]
  fc:	str	q0, [x19, x2]
 100:	add	x2, x2, #0x10
 104:	cmp	x0, x2
 108:	b.ne	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf8>  // b.any
 10c:	and	x0, x1, #0xfffffffffffffffe
 110:	cmp	x1, x0
 114:	lsl	x0, x0, #3
 118:	add	x27, x21, x0
 11c:	add	x0, x19, x0
 120:	b.eq	12c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x12c>  // b.none
 124:	ldr	x1, [x27]
 128:	str	x1, [x0]
 12c:	add	x26, x26, #0x8
 130:	add	x19, x19, x26
 134:	cbz	x24, 140 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x140>
 138:	mov	x0, x24
 13c:	bl	0 <_ZdlPv>
 140:	ldp	x27, x28, [sp, #80]
 144:	stp	x23, x19, [x22]
 148:	str	x25, [x22, #16]
 14c:	ldp	x19, x20, [sp, #16]
 150:	ldp	x21, x22, [sp, #32]
 154:	ldp	x23, x24, [sp, #48]
 158:	ldp	x25, x26, [sp, #64]
 15c:	ldp	x29, x30, [sp], #96
 160:	ret
 164:	add	x19, x19, #0x8
 168:	add	x20, x20, #0x8
 16c:	cmp	x21, x19
 170:	b.ne	90 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x90>  // b.any
 174:	b	c0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xc0>
 178:	cbnz	x0, 19c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x19c>
 17c:	mov	x19, #0x8                   	// #8
 180:	mov	x25, #0x0                   	// #0
 184:	mov	x23, #0x0                   	// #0
 188:	b	70 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x70>
 18c:	mov	x25, #0x8                   	// #8
 190:	b	5c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x5c>
 194:	mov	x0, x19
 198:	b	124 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x124>
 19c:	cmp	x0, x3
 1a0:	csel	x0, x0, x3, ls  // ls = plast
 1a4:	lsl	x25, x0, #3
 1a8:	b	5c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x5c>
 1ac:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 1b0:	add	x0, x0, #0x0
 1b4:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm9ErrorList4joinENS_5ErrorES1_:

0000000000000000 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldr	x0, [x0]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x8
  20:	ldr	x2, [x1]
  24:	ands	x0, x0, #0xfffffffffffffffe
  28:	and	x2, x2, #0xfffffffffffffffe
  2c:	b.ne	54 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x54>  // b.any
  30:	str	xzr, [x19]
  34:	orr	x2, x2, #0x1
  38:	str	xzr, [x1]
  3c:	str	x2, [x8]
  40:	mov	x0, x21
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x21, x22, [sp, #32]
  4c:	ldp	x29, x30, [sp], #80
  50:	ret
  54:	orr	x1, x0, #0x1
  58:	str	x1, [x19]
  5c:	cbz	x2, 190 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x190>
  60:	ldr	x1, [x0]
  64:	orr	x2, x2, #0x1
  68:	adrp	x22, 0 <_ZN4llvm9ErrorList2IDE>
  6c:	stp	x23, x24, [sp, #48]
  70:	str	x2, [x20]
  74:	ldr	x2, [x1, #48]
  78:	ldr	x23, [x22]
  7c:	mov	x1, x23
  80:	blr	x2
  84:	tst	w0, #0xff
  88:	b.ne	1b0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1b0>  // b.any
  8c:	ldr	x0, [x20]
  90:	mov	x2, #0x0                   	// #0
  94:	ands	x0, x0, #0xfffffffffffffffe
  98:	b.ne	24c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x24c>  // b.any
  9c:	ldr	x1, [x19]
  a0:	str	xzr, [x20]
  a4:	str	xzr, [x19]
  a8:	mov	x0, #0x20                  	// #32
  ac:	and	x1, x1, #0xfffffffffffffffe
  b0:	stp	x1, x2, [sp, #64]
  b4:	bl	0 <_Znwm>
  b8:	mov	x19, x0
  bc:	adrp	x1, 0 <_ZTVN4llvm9ErrorListE>
  c0:	mov	x20, x0
  c4:	ldr	x0, [sp, #64]
  c8:	ldr	x1, [x1]
  cc:	ldr	x22, [x22]
  d0:	add	x1, x1, #0x10
  d4:	str	x1, [x19], #8
  d8:	mov	x1, x22
  dc:	ldr	x2, [x0]
  e0:	ldr	x2, [x2, #48]
  e4:	str	xzr, [x20, #8]
  e8:	stp	xzr, xzr, [x19, #8]
  ec:	blr	x2
  f0:	tst	w0, #0xff
  f4:	b.ne	3f8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x3f8>  // b.any
  f8:	ldr	x0, [sp, #72]
  fc:	mov	x1, x22
 100:	ldr	x2, [x0]
 104:	ldr	x2, [x2, #48]
 108:	blr	x2
 10c:	tst	w0, #0xff
 110:	b.ne	3f8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x3f8>  // b.any
 114:	ldp	x2, x1, [x19, #8]
 118:	cmp	x2, x1
 11c:	b.eq	3d4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x3d4>  // b.none
 120:	ldr	x0, [sp, #64]
 124:	str	xzr, [sp, #64]
 128:	str	x0, [x2], #8
 12c:	str	x2, [x19, #8]
 130:	cmp	x1, x2
 134:	b.eq	3c4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x3c4>  // b.none
 138:	ldr	x0, [sp, #72]
 13c:	str	xzr, [sp, #72]
 140:	str	x0, [x2], #8
 144:	str	x2, [x19, #8]
 148:	ldr	x0, [sp, #72]
 14c:	orr	x20, x20, #0x1
 150:	str	x20, [x21]
 154:	cbz	x0, 164 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x164>
 158:	ldr	x1, [x0]
 15c:	ldr	x1, [x1, #8]
 160:	blr	x1
 164:	ldr	x0, [sp, #64]
 168:	cbz	x0, 3a0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x3a0>
 16c:	ldr	x1, [x0]
 170:	ldr	x1, [x1, #8]
 174:	blr	x1
 178:	mov	x0, x21
 17c:	ldp	x19, x20, [sp, #16]
 180:	ldp	x21, x22, [sp, #32]
 184:	ldp	x23, x24, [sp, #48]
 188:	ldp	x29, x30, [sp], #80
 18c:	ret
 190:	str	xzr, [x20]
 194:	mov	x0, x21
 198:	str	xzr, [x19]
 19c:	str	x1, [x8]
 1a0:	ldp	x19, x20, [sp, #16]
 1a4:	ldp	x21, x22, [sp, #32]
 1a8:	ldp	x29, x30, [sp], #80
 1ac:	ret
 1b0:	ldr	x0, [x19]
 1b4:	ldr	x1, [x20]
 1b8:	and	x22, x0, #0xfffffffffffffffe
 1bc:	ands	x0, x1, #0xfffffffffffffffe
 1c0:	b.ne	228 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x228>  // b.any
 1c4:	mov	x2, #0x0                   	// #0
 1c8:	add	x0, x22, #0x8
 1cc:	str	xzr, [x20]
 1d0:	str	x2, [sp, #72]
 1d4:	ldp	x1, x3, [x0, #8]
 1d8:	cmp	x1, x3
 1dc:	b.eq	3b8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x3b8>  // b.none
 1e0:	str	xzr, [sp, #72]
 1e4:	str	x2, [x1], #8
 1e8:	str	x1, [x0, #8]
 1ec:	ldr	x0, [sp, #72]
 1f0:	cbz	x0, 200 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x200>
 1f4:	ldr	x1, [x0]
 1f8:	ldr	x1, [x1, #8]
 1fc:	blr	x1
 200:	ldr	x0, [x19]
 204:	ldp	x23, x24, [sp, #48]
 208:	str	xzr, [x19]
 20c:	orr	x0, x0, #0x1
 210:	str	x0, [x21]
 214:	mov	x0, x21
 218:	ldp	x19, x20, [sp, #16]
 21c:	ldp	x21, x22, [sp, #32]
 220:	ldp	x29, x30, [sp], #80
 224:	ret
 228:	ldr	x2, [x0]
 22c:	mov	x1, x23
 230:	ldr	x2, [x2, #48]
 234:	blr	x2
 238:	tst	w0, #0xff
 23c:	b.ne	270 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x270>  // b.any
 240:	ldr	x2, [x20]
 244:	and	x2, x2, #0xfffffffffffffffe
 248:	b	1c8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1c8>
 24c:	ldr	x2, [x0]
 250:	mov	x1, x23
 254:	ldr	x2, [x2, #48]
 258:	blr	x2
 25c:	tst	w0, #0xff
 260:	b.ne	2dc <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2dc>  // b.any
 264:	ldr	x2, [x20]
 268:	and	x2, x2, #0xfffffffffffffffe
 26c:	b	9c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x9c>
 270:	ldr	x24, [x20]
 274:	and	x24, x24, #0xfffffffffffffffe
 278:	ldr	x23, [x24, #16]
 27c:	str	xzr, [x20]
 280:	add	x20, x22, #0x8
 284:	ldr	x22, [x24, #8]
 288:	cmp	x23, x22
 28c:	b.ne	2c0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2c0>  // b.any
 290:	ldr	x1, [x24]
 294:	mov	x0, x24
 298:	ldr	x1, [x1, #8]
 29c:	blr	x1
 2a0:	b	200 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x200>
 2a4:	ldr	x0, [x22]
 2a8:	str	xzr, [x22]
 2ac:	str	x0, [x1], #8
 2b0:	str	x1, [x20, #8]
 2b4:	add	x22, x22, #0x8
 2b8:	cmp	x23, x22
 2bc:	b.eq	290 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x290>  // b.none
 2c0:	ldp	x1, x0, [x20, #8]
 2c4:	cmp	x1, x0
 2c8:	b.ne	2a4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2a4>  // b.any
 2cc:	mov	x2, x22
 2d0:	mov	x0, x20
 2d4:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 2d8:	b	2b4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2b4>
 2dc:	ldr	x0, [x20]
 2e0:	ldr	x2, [x19]
 2e4:	and	x0, x0, #0xfffffffffffffffe
 2e8:	and	x2, x2, #0xfffffffffffffffe
 2ec:	str	x2, [sp, #72]
 2f0:	ldr	x23, [x0, #8]!
 2f4:	str	xzr, [x19]
 2f8:	ldp	x1, x3, [x0, #8]
 2fc:	cmp	x1, x3
 300:	b.eq	3a8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x3a8>  // b.none
 304:	cmp	x23, x1
 308:	add	x3, x1, #0x8
 30c:	b.eq	3e8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x3e8>  // b.none
 310:	ldur	x2, [x1, #-8]
 314:	sub	x19, x1, #0x8
 318:	stp	xzr, x2, [x1, #-8]
 31c:	sub	x22, x19, x23
 320:	cmp	x22, #0x0
 324:	str	x3, [x0, #8]
 328:	asr	x22, x22, #3
 32c:	b.le	354 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x354>
 330:	ldr	x1, [x19, #-8]!
 334:	ldr	x0, [x19, #8]
 338:	stp	xzr, x1, [x19]
 33c:	cbz	x0, 34c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x34c>
 340:	ldr	x1, [x0]
 344:	ldr	x1, [x1, #8]
 348:	blr	x1
 34c:	subs	x22, x22, #0x1
 350:	b.ne	330 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x330>  // b.any
 354:	ldr	x1, [sp, #72]
 358:	str	xzr, [sp, #72]
 35c:	ldr	x0, [x23]
 360:	str	x1, [x23]
 364:	cbz	x0, 374 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x374>
 368:	ldr	x1, [x0]
 36c:	ldr	x1, [x1, #8]
 370:	blr	x1
 374:	ldr	x0, [sp, #72]
 378:	cbz	x0, 388 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x388>
 37c:	ldr	x1, [x0]
 380:	ldr	x1, [x1, #8]
 384:	blr	x1
 388:	ldr	x0, [x20]
 38c:	ldp	x23, x24, [sp, #48]
 390:	str	xzr, [x20]
 394:	orr	x0, x0, #0x1
 398:	str	x0, [x21]
 39c:	b	40 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x40>
 3a0:	ldp	x23, x24, [sp, #48]
 3a4:	b	40 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x40>
 3a8:	mov	x1, x23
 3ac:	add	x2, sp, #0x48
 3b0:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 3b4:	b	374 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x374>
 3b8:	add	x2, sp, #0x48
 3bc:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 3c0:	b	1ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1ec>
 3c4:	mov	x0, x19
 3c8:	add	x2, sp, #0x48
 3cc:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 3d0:	b	148 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x148>
 3d4:	add	x2, sp, #0x40
 3d8:	mov	x0, x19
 3dc:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 3e0:	ldp	x2, x1, [x19, #8]
 3e4:	b	130 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x130>
 3e8:	str	xzr, [sp, #72]
 3ec:	str	x2, [x23]
 3f0:	str	x3, [x0, #8]
 3f4:	b	374 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x374>
 3f8:	adrp	x3, 0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 3fc:	adrp	x1, 0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 400:	adrp	x0, 0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 404:	add	x3, x3, #0x0
 408:	add	x1, x1, #0x0
 40c:	add	x0, x0, #0x0
 410:	mov	w2, #0x181                 	// #385
 414:	bl	0 <__assert_fail>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Interpreter.cpp>:
   0:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine10InterpCtorB5cxx11E>
   4:	adrp	x1, 7b8 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
   8:	ldr	x0, [x0]
   c:	ldr	x1, [x1]
  10:	str	x1, [x0]
  14:	ret
