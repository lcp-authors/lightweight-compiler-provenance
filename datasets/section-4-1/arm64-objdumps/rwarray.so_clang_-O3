
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//rwarray.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000800 <.init>:
 800:	stp	x29, x30, [sp, #-16]!
 804:	mov	x29, sp
 808:	bl	910 <fprintf@plt+0x10>
 80c:	ldp	x29, x30, [sp], #16
 810:	ret

Disassembly of section .plt:

0000000000000820 <memcpy@plt-0x20>:
 820:	stp	x16, x30, [sp, #-16]!
 824:	adrp	x16, 11000 <dl_load@@Base+0x1061c>
 828:	ldr	x17, [x16, #4088]
 82c:	add	x16, x16, #0xff8
 830:	br	x17
 834:	nop
 838:	nop
 83c:	nop

0000000000000840 <memcpy@plt>:
 840:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 844:	ldr	x17, [x16]
 848:	add	x16, x16, #0x0
 84c:	br	x17

0000000000000850 <fwrite_unlocked@plt>:
 850:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 854:	ldr	x17, [x16, #8]
 858:	add	x16, x16, #0x8
 85c:	br	x17

0000000000000860 <exit@plt>:
 860:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 864:	ldr	x17, [x16, #16]
 868:	add	x16, x16, #0x10
 86c:	br	x17

0000000000000870 <__cxa_finalize@plt>:
 870:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 874:	ldr	x17, [x16, #24]
 878:	add	x16, x16, #0x18
 87c:	br	x17

0000000000000880 <fclose@plt>:
 880:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 884:	ldr	x17, [x16, #32]
 888:	add	x16, x16, #0x20
 88c:	br	x17

0000000000000890 <fopen@plt>:
 890:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 894:	ldr	x17, [x16, #40]
 898:	add	x16, x16, #0x28
 89c:	br	x17

00000000000008a0 <__gmon_start__@plt>:
 8a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8a4:	ldr	x17, [x16, #48]
 8a8:	add	x16, x16, #0x30
 8ac:	br	x17

00000000000008b0 <fread@plt>:
 8b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8b4:	ldr	x17, [x16, #56]
 8b8:	add	x16, x16, #0x38
 8bc:	br	x17

00000000000008c0 <fwrite@plt>:
 8c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #64]
 8c8:	add	x16, x16, #0x40
 8cc:	br	x17

00000000000008d0 <dcgettext@plt>:
 8d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8d4:	ldr	x17, [x16, #72]
 8d8:	add	x16, x16, #0x48
 8dc:	br	x17

00000000000008e0 <__errno_location@plt>:
 8e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8e4:	ldr	x17, [x16, #80]
 8e8:	add	x16, x16, #0x50
 8ec:	br	x17

00000000000008f0 <unlink@plt>:
 8f0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8f4:	ldr	x17, [x16, #88]
 8f8:	add	x16, x16, #0x58
 8fc:	br	x17

0000000000000900 <fprintf@plt>:
 900:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 904:	ldr	x17, [x16, #96]
 908:	add	x16, x16, #0x60
 90c:	br	x17

Disassembly of section .text:

0000000000000910 <dl_load@@Base-0xd4>:
     910:	adrp	x0, 11000 <dl_load@@Base+0x1061c>
     914:	ldr	x0, [x0, #4056]
     918:	cbz	x0, 920 <fprintf@plt+0x20>
     91c:	b	8a0 <__gmon_start__@plt>
     920:	ret
     924:	nop
     928:	adrp	x0, 12000 <dl_load@@Base+0x1161c>
     92c:	add	x0, x0, #0xd0
     930:	adrp	x1, 12000 <dl_load@@Base+0x1161c>
     934:	add	x1, x1, #0xd0
     938:	cmp	x1, x0
     93c:	b.eq	954 <fprintf@plt+0x54>  // b.none
     940:	adrp	x1, 11000 <dl_load@@Base+0x1061c>
     944:	ldr	x1, [x1, #4032]
     948:	cbz	x1, 954 <fprintf@plt+0x54>
     94c:	mov	x16, x1
     950:	br	x16
     954:	ret
     958:	adrp	x0, 12000 <dl_load@@Base+0x1161c>
     95c:	add	x0, x0, #0xd0
     960:	adrp	x1, 12000 <dl_load@@Base+0x1161c>
     964:	add	x1, x1, #0xd0
     968:	sub	x1, x1, x0
     96c:	lsr	x2, x1, #63
     970:	add	x1, x2, x1, asr #3
     974:	cmp	xzr, x1, asr #1
     978:	asr	x1, x1, #1
     97c:	b.eq	994 <fprintf@plt+0x94>  // b.none
     980:	adrp	x2, 11000 <dl_load@@Base+0x1061c>
     984:	ldr	x2, [x2, #4064]
     988:	cbz	x2, 994 <fprintf@plt+0x94>
     98c:	mov	x16, x2
     990:	br	x16
     994:	ret
     998:	stp	x29, x30, [sp, #-32]!
     99c:	mov	x29, sp
     9a0:	str	x19, [sp, #16]
     9a4:	adrp	x19, 12000 <dl_load@@Base+0x1161c>
     9a8:	ldrb	w0, [x19, #208]
     9ac:	cbnz	w0, 9d4 <fprintf@plt+0xd4>
     9b0:	adrp	x0, 11000 <dl_load@@Base+0x1061c>
     9b4:	ldr	x0, [x0, #4040]
     9b8:	cbz	x0, 9c8 <fprintf@plt+0xc8>
     9bc:	adrp	x0, 12000 <dl_load@@Base+0x1161c>
     9c0:	ldr	x0, [x0, #104]
     9c4:	bl	870 <__cxa_finalize@plt>
     9c8:	bl	928 <fprintf@plt+0x28>
     9cc:	mov	w0, #0x1                   	// #1
     9d0:	strb	w0, [x19, #208]
     9d4:	ldr	x19, [sp, #16]
     9d8:	ldp	x29, x30, [sp], #32
     9dc:	ret
     9e0:	b	958 <fprintf@plt+0x58>

00000000000009e4 <dl_load@@Base>:
     9e4:	stp	x29, x30, [sp, #-48]!
     9e8:	stp	x20, x19, [sp, #32]
     9ec:	adrp	x19, 12000 <dl_load@@Base+0x1161c>
     9f0:	add	x19, x19, #0xe0
     9f4:	stp	x0, x1, [x19]
     9f8:	ldr	w8, [x0]
     9fc:	str	x21, [sp, #16]
     a00:	mov	x29, sp
     a04:	cmp	w8, #0x2
     a08:	b.ne	af0 <dl_load@@Base+0x10c>  // b.any
     a0c:	ldr	w8, [x0, #4]
     a10:	tbnz	w8, #31, af0 <dl_load@@Base+0x10c>
     a14:	adrp	x20, 12000 <dl_load@@Base+0x1161c>
     a18:	ldr	x8, [x20, #112]
     a1c:	cbz	x8, a58 <dl_load@@Base+0x74>
     a20:	ldr	x9, [x0, #48]
     a24:	adrp	x8, 1000 <dl_load@@Base+0x61c>
     a28:	add	x8, x8, #0x707
     a2c:	adrp	x2, 12000 <dl_load@@Base+0x1161c>
     a30:	add	x2, x2, #0x70
     a34:	mov	x0, x1
     a38:	mov	x1, x8
     a3c:	blr	x9
     a40:	cbz	w0, a60 <dl_load@@Base+0x7c>
     a44:	mov	w20, wzr
     a48:	adrp	x21, 12000 <dl_load@@Base+0x1161c>
     a4c:	ldr	x8, [x21, #160]
     a50:	cbnz	x8, a88 <dl_load@@Base+0xa4>
     a54:	b	ac4 <dl_load@@Base+0xe0>
     a58:	mov	w20, wzr
     a5c:	b	ac4 <dl_load@@Base+0xe0>
     a60:	ldp	x8, x0, [x19]
     a64:	ldr	x2, [x20, #112]
     a68:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     a6c:	add	x1, x1, #0x73b
     a70:	ldr	x8, [x8, #104]
     a74:	blr	x8
     a78:	mov	w20, #0x1                   	// #1
     a7c:	adrp	x21, 12000 <dl_load@@Base+0x1161c>
     a80:	ldr	x8, [x21, #160]
     a84:	cbz	x8, ac4 <dl_load@@Base+0xe0>
     a88:	ldp	x8, x0, [x19]
     a8c:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     a90:	adrp	x2, 12000 <dl_load@@Base+0x1161c>
     a94:	add	x1, x1, #0x707
     a98:	ldr	x8, [x8, #48]
     a9c:	add	x2, x2, #0xa0
     aa0:	blr	x8
     aa4:	cbnz	w0, ac4 <dl_load@@Base+0xe0>
     aa8:	ldp	x8, x0, [x19]
     aac:	ldr	x2, [x21, #160]
     ab0:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     ab4:	add	x1, x1, #0x73b
     ab8:	ldr	x8, [x8, #104]
     abc:	blr	x8
     ac0:	mov	w20, #0x1                   	// #1
     ac4:	ldp	x8, x0, [x19]
     ac8:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     acc:	add	x1, x1, #0x93a
     ad0:	ldr	x8, [x8, #88]
     ad4:	blr	x8
     ad8:	cmp	w20, #0x0
     adc:	ldp	x20, x19, [sp, #32]
     ae0:	ldr	x21, [sp, #16]
     ae4:	cset	w0, eq  // eq = none
     ae8:	ldp	x29, x30, [sp], #48
     aec:	ret
     af0:	adrp	x19, 11000 <dl_load@@Base+0x1061c>
     af4:	ldr	x19, [x19, #4048]
     af8:	adrp	x0, 1000 <dl_load@@Base+0x61c>
     afc:	add	x0, x0, #0x6e2
     b00:	mov	w1, #0x25                  	// #37
     b04:	ldr	x3, [x19]
     b08:	mov	w2, #0x1                   	// #1
     b0c:	bl	8c0 <fwrite@plt>
     b10:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
     b14:	ldr	x8, [x8, #224]
     b18:	ldr	x0, [x19]
     b1c:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     b20:	add	x1, x1, #0x708
     b24:	ldp	w4, w5, [x8]
     b28:	mov	w2, #0x2                   	// #2
     b2c:	mov	w3, wzr
     b30:	bl	900 <fprintf@plt>
     b34:	mov	w0, #0x1                   	// #1
     b38:	bl	860 <exit@plt>
     b3c:	sub	sp, sp, #0x80
     b40:	stp	x20, x19, [sp, #112]
     b44:	mov	x19, x1
     b48:	mov	w8, #0x3                   	// #3
     b4c:	mov	w9, #0x1                   	// #1
     b50:	cmp	w0, #0x2
     b54:	stp	x29, x30, [sp, #80]
     b58:	stp	x22, x21, [sp, #96]
     b5c:	add	x29, sp, #0x50
     b60:	stp	w9, w8, [sp, #8]
     b64:	str	w9, [x1]
     b68:	str	xzr, [x1, #8]
     b6c:	str	wzr, [x1, #16]
     b70:	b.lt	cd4 <dl_load@@Base+0x2f0>  // b.tstop
     b74:	adrp	x21, 12000 <dl_load@@Base+0x1161c>
     b78:	add	x21, x21, #0xe0
     b7c:	ldp	x8, x0, [x21]
     b80:	sub	x3, x29, #0x20
     b84:	mov	w2, #0x2                   	// #2
     b88:	mov	x1, xzr
     b8c:	ldr	x8, [x8, #152]
     b90:	blr	x8
     b94:	cbz	w0, c5c <dl_load@@Base+0x278>
     b98:	ldp	x8, x0, [x21]
     b9c:	add	x3, sp, #0x10
     ba0:	mov	w1, #0x1                   	// #1
     ba4:	mov	w2, #0x5                   	// #5
     ba8:	ldr	x8, [x8, #152]
     bac:	blr	x8
     bb0:	cbz	w0, c70 <dl_load@@Base+0x28c>
     bb4:	ldur	x0, [x29, #-24]
     bb8:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     bbc:	add	x1, x1, #0x7b0
     bc0:	bl	890 <fopen@plt>
     bc4:	mov	x20, x0
     bc8:	cbz	x0, cac <dl_load@@Base+0x2c8>
     bcc:	adrp	x0, 1000 <dl_load@@Base+0x61c>
     bd0:	add	x0, x0, #0x7b3
     bd4:	mov	w1, #0x1                   	// #1
     bd8:	mov	w2, #0x8                   	// #8
     bdc:	mov	x3, x20
     be0:	bl	850 <fwrite_unlocked@plt>
     be4:	cmp	x0, #0x8
     be8:	b.ne	cac <dl_load@@Base+0x2c8>  // b.any
     bec:	mov	w8, #0x3000000             	// #50331648
     bf0:	add	x0, sp, #0xc
     bf4:	mov	w1, #0x1                   	// #1
     bf8:	mov	w2, #0x4                   	// #4
     bfc:	mov	x3, x20
     c00:	str	w8, [sp, #12]
     c04:	bl	850 <fwrite_unlocked@plt>
     c08:	cmp	x0, #0x4
     c0c:	b.ne	cac <dl_load@@Base+0x2c8>  // b.any
     c10:	mov	w8, #0x1000000             	// #16777216
     c14:	add	x0, sp, #0x8
     c18:	mov	w1, #0x1                   	// #1
     c1c:	mov	w2, #0x4                   	// #4
     c20:	mov	x3, x20
     c24:	str	w8, [sp, #8]
     c28:	bl	850 <fwrite_unlocked@plt>
     c2c:	cmp	x0, #0x4
     c30:	b.ne	cac <dl_load@@Base+0x2c8>  // b.any
     c34:	ldr	x1, [sp, #24]
     c38:	mov	x0, x20
     c3c:	bl	f38 <dl_load@@Base+0x554>
     c40:	cbz	w0, cac <dl_load@@Base+0x2c8>
     c44:	mov	w8, #0x1                   	// #1
     c48:	mov	x9, #0x3ff0000000000000    	// #4607182418800017408
     c4c:	str	w8, [x19]
     c50:	str	x9, [x19, #8]
     c54:	str	wzr, [x19, #16]
     c58:	b	ccc <dl_load@@Base+0x2e8>
     c5c:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     c60:	ldr	x8, [x8, #4048]
     c64:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     c68:	add	x1, x1, #0x762
     c6c:	b	c80 <dl_load@@Base+0x29c>
     c70:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     c74:	ldr	x8, [x8, #4048]
     c78:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     c7c:	add	x1, x1, #0x789
     c80:	ldr	x20, [x8]
     c84:	mov	w2, #0x5                   	// #5
     c88:	mov	x0, xzr
     c8c:	bl	8d0 <dcgettext@plt>
     c90:	mov	x1, x0
     c94:	mov	x0, x20
     c98:	bl	900 <fprintf@plt>
     c9c:	bl	8e0 <__errno_location@plt>
     ca0:	mov	x20, xzr
     ca4:	mov	w8, #0x16                  	// #22
     ca8:	str	w8, [x0]
     cac:	ldp	x8, x21, [x21]
     cb0:	ldr	x22, [x8, #128]
     cb4:	bl	8e0 <__errno_location@plt>
     cb8:	ldr	w1, [x0]
     cbc:	mov	x0, x21
     cc0:	blr	x22
     cc4:	ldur	x0, [x29, #-24]
     cc8:	bl	8f0 <unlink@plt>
     ccc:	mov	x0, x20
     cd0:	bl	880 <fclose@plt>
     cd4:	mov	x0, x19
     cd8:	ldp	x20, x19, [sp, #112]
     cdc:	ldp	x22, x21, [sp, #96]
     ce0:	ldp	x29, x30, [sp, #80]
     ce4:	add	sp, sp, #0x80
     ce8:	ret
     cec:	sub	sp, sp, #0xa0
     cf0:	stp	x20, x19, [sp, #144]
     cf4:	mov	x19, x1
     cf8:	mov	w8, #0x1                   	// #1
     cfc:	cmp	w0, #0x2
     d00:	stp	x29, x30, [sp, #112]
     d04:	stp	x22, x21, [sp, #128]
     d08:	add	x29, sp, #0x70
     d0c:	str	xzr, [x1, #8]
     d10:	str	w8, [x1]
     d14:	str	wzr, [x1, #16]
     d18:	b.lt	e94 <dl_load@@Base+0x4b0>  // b.tstop
     d1c:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
     d20:	add	x22, x22, #0xe0
     d24:	ldp	x8, x0, [x22]
     d28:	sub	x3, x29, #0x20
     d2c:	mov	w2, #0x2                   	// #2
     d30:	mov	x1, xzr
     d34:	ldr	x8, [x8, #152]
     d38:	blr	x8
     d3c:	cbz	w0, eac <dl_load@@Base+0x4c8>
     d40:	ldp	x8, x0, [x22]
     d44:	add	x3, sp, #0x30
     d48:	mov	w1, #0x1                   	// #1
     d4c:	mov	w2, #0x5                   	// #5
     d50:	ldr	x8, [x8, #152]
     d54:	blr	x8
     d58:	cbz	w0, ec0 <dl_load@@Base+0x4dc>
     d5c:	ldur	x0, [x29, #-24]
     d60:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     d64:	add	x1, x1, #0x87e
     d68:	bl	890 <fopen@plt>
     d6c:	mov	x20, x0
     d70:	cbz	x0, e70 <dl_load@@Base+0x48c>
     d74:	add	x0, sp, #0x8
     d78:	mov	w1, #0x1                   	// #1
     d7c:	mov	w2, #0x8                   	// #8
     d80:	mov	x3, x20
     d84:	stp	xzr, xzr, [sp, #8]
     d88:	stur	xzr, [sp, #30]
     d8c:	str	xzr, [sp, #24]
     d90:	bl	8b0 <fread@plt>
     d94:	cmp	x0, #0x8
     d98:	b.ne	e64 <dl_load@@Base+0x480>  // b.any
     d9c:	ldr	x8, [sp, #8]
     da0:	mov	x10, #0x7761                	// #30561
     da4:	ldrb	w9, [sp, #16]
     da8:	movk	x10, #0x726b, lsl #16
     dac:	movk	x10, #0x6c75, lsl #32
     db0:	movk	x10, #0xa7a, lsl #48
     db4:	eor	x8, x8, x10
     db8:	orr	x8, x8, x9
     dbc:	cbnz	x8, e64 <dl_load@@Base+0x480>
     dc0:	add	x0, sp, #0x2c
     dc4:	mov	w1, #0x1                   	// #1
     dc8:	mov	w2, #0x4                   	// #4
     dcc:	mov	x3, x20
     dd0:	bl	8b0 <fread@plt>
     dd4:	cmp	x0, #0x4
     dd8:	b.ne	e64 <dl_load@@Base+0x480>  // b.any
     ddc:	ldr	w8, [sp, #44]
     de0:	mov	w9, #0x3000000             	// #50331648
     de4:	rev	w10, w8
     de8:	cmp	w8, w9
     dec:	str	w10, [sp, #44]
     df0:	b.ne	e64 <dl_load@@Base+0x480>  // b.any
     df4:	add	x0, sp, #0x28
     df8:	mov	w1, #0x1                   	// #1
     dfc:	mov	w2, #0x4                   	// #4
     e00:	mov	x3, x20
     e04:	bl	8b0 <fread@plt>
     e08:	cmp	x0, #0x4
     e0c:	b.ne	e70 <dl_load@@Base+0x48c>  // b.any
     e10:	ldr	w8, [sp, #40]
     e14:	mov	w9, #0x1000000             	// #16777216
     e18:	rev	w10, w8
     e1c:	cmp	w8, w9
     e20:	str	w10, [sp, #40]
     e24:	b.ne	e64 <dl_load@@Base+0x480>  // b.any
     e28:	ldp	x8, x0, [x22]
     e2c:	ldr	x1, [sp, #56]
     e30:	ldr	x8, [x8, #256]
     e34:	blr	x8
     e38:	cbz	w0, efc <dl_load@@Base+0x518>
     e3c:	ldr	x1, [sp, #56]
     e40:	mov	x0, x20
     e44:	bl	127c <dl_load@@Base+0x898>
     e48:	cbz	w0, e70 <dl_load@@Base+0x48c>
     e4c:	mov	w8, #0x1                   	// #1
     e50:	mov	x9, #0x3ff0000000000000    	// #4607182418800017408
     e54:	str	w8, [x19]
     e58:	str	x9, [x19, #8]
     e5c:	str	wzr, [x19, #16]
     e60:	b	e8c <dl_load@@Base+0x4a8>
     e64:	bl	8e0 <__errno_location@plt>
     e68:	mov	w8, #0x9                   	// #9
     e6c:	str	w8, [x0]
     e70:	ldp	x8, x21, [x22]
     e74:	ldr	x22, [x8, #128]
     e78:	bl	8e0 <__errno_location@plt>
     e7c:	ldr	w1, [x0]
     e80:	mov	x0, x21
     e84:	blr	x22
     e88:	cbz	x20, e94 <dl_load@@Base+0x4b0>
     e8c:	mov	x0, x20
     e90:	bl	880 <fclose@plt>
     e94:	mov	x0, x19
     e98:	ldp	x20, x19, [sp, #144]
     e9c:	ldp	x22, x21, [sp, #128]
     ea0:	ldp	x29, x30, [sp, #112]
     ea4:	add	sp, sp, #0xa0
     ea8:	ret
     eac:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     eb0:	ldr	x8, [x8, #4048]
     eb4:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     eb8:	add	x1, x1, #0x832
     ebc:	b	ed0 <dl_load@@Base+0x4ec>
     ec0:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     ec4:	ldr	x8, [x8, #4048]
     ec8:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     ecc:	add	x1, x1, #0x858
     ed0:	ldr	x20, [x8]
     ed4:	mov	w2, #0x5                   	// #5
     ed8:	mov	x0, xzr
     edc:	bl	8d0 <dcgettext@plt>
     ee0:	mov	x1, x0
     ee4:	mov	x0, x20
     ee8:	bl	900 <fprintf@plt>
     eec:	bl	8e0 <__errno_location@plt>
     ef0:	mov	x20, xzr
     ef4:	mov	w8, #0x16                  	// #22
     ef8:	b	e6c <dl_load@@Base+0x488>
     efc:	bl	8e0 <__errno_location@plt>
     f00:	mov	w8, #0xc                   	// #12
     f04:	str	w8, [x0]
     f08:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     f0c:	ldr	x8, [x8, #4048]
     f10:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     f14:	add	x1, x1, #0x881
     f18:	mov	w2, #0x5                   	// #5
     f1c:	ldr	x21, [x8]
     f20:	mov	x0, xzr
     f24:	bl	8d0 <dcgettext@plt>
     f28:	mov	x1, x0
     f2c:	mov	x0, x21
     f30:	bl	900 <fprintf@plt>
     f34:	b	e70 <dl_load@@Base+0x48c>
     f38:	sub	sp, sp, #0x60
     f3c:	stp	x22, x21, [sp, #64]
     f40:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
     f44:	add	x22, x22, #0xe0
     f48:	ldp	x9, x8, [x22]
     f4c:	stp	x29, x30, [sp, #16]
     f50:	stp	x26, x25, [sp, #32]
     f54:	stp	x24, x23, [sp, #48]
     f58:	stp	x20, x19, [sp, #80]
     f5c:	ldr	x9, [x9, #264]
     f60:	mov	x20, x0
     f64:	mov	x2, sp
     f68:	mov	w3, #0x2                   	// #2
     f6c:	mov	x0, x8
     f70:	mov	w4, wzr
     f74:	add	x29, sp, #0x10
     f78:	mov	x19, x1
     f7c:	blr	x9
     f80:	cbz	w0, 1080 <dl_load@@Base+0x69c>
     f84:	ldr	x8, [sp]
     f88:	add	x0, sp, #0x8
     f8c:	mov	w1, #0x1                   	// #1
     f90:	mov	w2, #0x4                   	// #4
     f94:	ldr	w8, [x8, #16]
     f98:	mov	x3, x20
     f9c:	rev	w8, w8
     fa0:	str	w8, [sp, #8]
     fa4:	bl	8c0 <fwrite@plt>
     fa8:	cmp	x0, #0x4
     fac:	b.ne	10c0 <dl_load@@Base+0x6dc>  // b.any
     fb0:	ldr	x21, [sp]
     fb4:	ldr	x8, [x21, #16]
     fb8:	cbz	x8, 1048 <dl_load@@Base+0x664>
     fbc:	mov	x25, xzr
     fc0:	mov	w23, #0x1                   	// #1
     fc4:	mov	w24, #0x50                  	// #80
     fc8:	madd	x26, x25, x24, x21
     fcc:	ldr	w8, [x26, #56]!
     fd0:	sub	x0, x29, #0x4
     fd4:	mov	w1, #0x1                   	// #1
     fd8:	mov	w2, #0x4                   	// #4
     fdc:	rev	w8, w8
     fe0:	mov	x3, x20
     fe4:	stur	w8, [x29, #-4]
     fe8:	bl	8c0 <fwrite@plt>
     fec:	cmp	x0, #0x4
     ff0:	b.ne	1068 <dl_load@@Base+0x684>  // b.any
     ff4:	ldr	x2, [x26]
     ff8:	cbz	x2, 101c <dl_load@@Base+0x638>
     ffc:	sub	x8, x26, #0x8
    1000:	ldr	x0, [x8]
    1004:	mov	w1, #0x1                   	// #1
    1008:	mov	x3, x20
    100c:	bl	8c0 <fwrite@plt>
    1010:	ldr	x8, [x26]
    1014:	cmp	x0, x8
    1018:	b.ne	1068 <dl_load@@Base+0x684>  // b.any
    101c:	madd	x8, x25, x24, x21
    1020:	add	x1, x8, #0x48
    1024:	mov	x0, x20
    1028:	bl	10e0 <dl_load@@Base+0x6fc>
    102c:	cbz	w0, 1068 <dl_load@@Base+0x684>
    1030:	ldr	x21, [sp]
    1034:	mov	w25, w23
    1038:	add	w23, w23, #0x1
    103c:	ldr	x8, [x21, #16]
    1040:	cmp	x8, x25
    1044:	b.hi	fc8 <dl_load@@Base+0x5e4>  // b.pmore
    1048:	ldp	x8, x0, [x22]
    104c:	mov	x1, x19
    1050:	mov	x2, x21
    1054:	ldr	x8, [x8, #272]
    1058:	blr	x8
    105c:	cbz	w0, 1094 <dl_load@@Base+0x6b0>
    1060:	mov	w0, #0x1                   	// #1
    1064:	b	10c4 <dl_load@@Base+0x6e0>
    1068:	ldp	x8, x0, [x22]
    106c:	ldr	x2, [sp]
    1070:	mov	x1, x19
    1074:	ldr	x8, [x8, #272]
    1078:	blr	x8
    107c:	b	10c0 <dl_load@@Base+0x6dc>
    1080:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
    1084:	ldr	x8, [x8, #4048]
    1088:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    108c:	add	x1, x1, #0x7bc
    1090:	b	10a4 <dl_load@@Base+0x6c0>
    1094:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
    1098:	ldr	x8, [x8, #4048]
    109c:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    10a0:	add	x1, x1, #0x7e2
    10a4:	ldr	x19, [x8]
    10a8:	mov	w2, #0x5                   	// #5
    10ac:	mov	x0, xzr
    10b0:	bl	8d0 <dcgettext@plt>
    10b4:	mov	x1, x0
    10b8:	mov	x0, x19
    10bc:	bl	900 <fprintf@plt>
    10c0:	mov	w0, wzr
    10c4:	ldp	x20, x19, [sp, #80]
    10c8:	ldp	x22, x21, [sp, #64]
    10cc:	ldp	x24, x23, [sp, #48]
    10d0:	ldp	x26, x25, [sp, #32]
    10d4:	ldp	x29, x30, [sp, #16]
    10d8:	add	sp, sp, #0x60
    10dc:	ret
    10e0:	sub	sp, sp, #0x40
    10e4:	stp	x29, x30, [sp, #16]
    10e8:	stp	x22, x21, [sp, #32]
    10ec:	stp	x20, x19, [sp, #48]
    10f0:	ldr	w8, [x1]
    10f4:	mov	x20, x1
    10f8:	mov	x19, x0
    10fc:	add	x29, sp, #0x10
    1100:	cmp	w8, #0x5
    1104:	b.hi	114c <dl_load@@Base+0x768>  // b.pmore
    1108:	adrp	x9, 1000 <dl_load@@Base+0x61c>
    110c:	add	x9, x9, #0x6dc
    1110:	adr	x10, 1120 <dl_load@@Base+0x73c>
    1114:	ldrb	w11, [x9, x8]
    1118:	add	x10, x10, x11, lsl #2
    111c:	br	x10
    1120:	mov	w8, #0x5000000             	// #83886080
    1124:	stur	w8, [x29, #-4]
    1128:	b	1184 <dl_load@@Base+0x7a0>
    112c:	stur	wzr, [x29, #-4]
    1130:	b	1184 <dl_load@@Base+0x7a0>
    1134:	mov	w8, #0x3000000             	// #50331648
    1138:	stur	w8, [x29, #-4]
    113c:	b	1184 <dl_load@@Base+0x7a0>
    1140:	mov	w8, #0x4000000             	// #67108864
    1144:	stur	w8, [x29, #-4]
    1148:	b	1184 <dl_load@@Base+0x7a0>
    114c:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    1150:	add	x8, x8, #0xe0
    1154:	ldp	x9, x21, [x8]
    1158:	stur	wzr, [x29, #-4]
    115c:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    1160:	add	x1, x1, #0x812
    1164:	ldr	x22, [x9, #104]
    1168:	mov	w2, #0x5                   	// #5
    116c:	mov	x0, xzr
    1170:	bl	8d0 <dcgettext@plt>
    1174:	ldr	w2, [x20]
    1178:	mov	x1, x0
    117c:	mov	x0, x21
    1180:	blr	x22
    1184:	sub	x0, x29, #0x4
    1188:	mov	w1, #0x1                   	// #1
    118c:	mov	w2, #0x4                   	// #4
    1190:	mov	x3, x19
    1194:	bl	8c0 <fwrite@plt>
    1198:	cmp	x0, #0x4
    119c:	b.ne	1264 <dl_load@@Base+0x880>  // b.any
    11a0:	ldr	w8, [x20, #16]
    11a4:	add	x0, sp, #0x8
    11a8:	mov	w1, #0x1                   	// #1
    11ac:	mov	w2, #0x4                   	// #4
    11b0:	rev	w8, w8
    11b4:	mov	x3, x19
    11b8:	str	w8, [sp, #8]
    11bc:	bl	8c0 <fwrite@plt>
    11c0:	cmp	x0, #0x4
    11c4:	b.ne	1264 <dl_load@@Base+0x880>  // b.any
    11c8:	ldp	x0, x2, [x20, #8]
    11cc:	mov	w1, #0x1                   	// #1
    11d0:	mov	x3, x19
    11d4:	bl	8c0 <fwrite@plt>
    11d8:	ldr	x8, [x20, #16]
    11dc:	cmp	x0, x8
    11e0:	b.eq	1228 <dl_load@@Base+0x844>  // b.none
    11e4:	b	1264 <dl_load@@Base+0x880>
    11e8:	mov	w8, #0x1000000             	// #16777216
    11ec:	sub	x0, x29, #0x4
    11f0:	mov	w1, #0x1                   	// #1
    11f4:	mov	w2, #0x4                   	// #4
    11f8:	mov	x3, x19
    11fc:	stur	w8, [x29, #-4]
    1200:	bl	8c0 <fwrite@plt>
    1204:	cmp	x0, #0x4
    1208:	b.ne	1264 <dl_load@@Base+0x880>  // b.any
    120c:	add	x0, x20, #0x8
    1210:	mov	w1, #0x1                   	// #1
    1214:	mov	w2, #0x8                   	// #8
    1218:	mov	x3, x19
    121c:	bl	8c0 <fwrite@plt>
    1220:	cmp	x0, #0x8
    1224:	b.ne	1264 <dl_load@@Base+0x880>  // b.any
    1228:	mov	w0, #0x1                   	// #1
    122c:	b	1268 <dl_load@@Base+0x884>
    1230:	mov	w8, #0x2000000             	// #33554432
    1234:	sub	x0, x29, #0x4
    1238:	mov	w1, #0x1                   	// #1
    123c:	mov	w2, #0x4                   	// #4
    1240:	mov	x3, x19
    1244:	stur	w8, [x29, #-4]
    1248:	bl	8c0 <fwrite@plt>
    124c:	cmp	x0, #0x4
    1250:	b.ne	1264 <dl_load@@Base+0x880>  // b.any
    1254:	ldr	x1, [x20, #8]
    1258:	mov	x0, x19
    125c:	bl	f38 <dl_load@@Base+0x554>
    1260:	b	1268 <dl_load@@Base+0x884>
    1264:	mov	w0, wzr
    1268:	ldp	x20, x19, [sp, #48]
    126c:	ldp	x22, x21, [sp, #32]
    1270:	ldp	x29, x30, [sp, #16]
    1274:	add	sp, sp, #0x40
    1278:	ret
    127c:	sub	sp, sp, #0xe0
    1280:	stp	x29, x30, [sp, #128]
    1284:	stp	x20, x19, [sp, #208]
    1288:	add	x29, sp, #0x80
    128c:	mov	x20, x0
    1290:	stp	x22, x21, [sp, #192]
    1294:	mov	x22, x1
    1298:	sub	x0, x29, #0x8
    129c:	mov	w1, #0x1                   	// #1
    12a0:	mov	w2, #0x4                   	// #4
    12a4:	mov	x3, x20
    12a8:	stp	x28, x27, [sp, #144]
    12ac:	stp	x26, x25, [sp, #160]
    12b0:	stp	x24, x23, [sp, #176]
    12b4:	bl	8b0 <fread@plt>
    12b8:	cmp	x0, #0x4
    12bc:	b.ne	14e8 <dl_load@@Base+0xb04>  // b.any
    12c0:	ldur	w8, [x29, #-8]
    12c4:	mov	w19, wzr
    12c8:	rev	w21, w8
    12cc:	stur	w21, [x29, #-8]
    12d0:	cbz	w8, 14b0 <dl_load@@Base+0xacc>
    12d4:	add	x8, sp, #0x20
    12d8:	adrp	x23, 12000 <dl_load@@Base+0x1161c>
    12dc:	add	x23, x23, #0xe0
    12e0:	add	x28, x8, #0x10
    12e4:	add	x24, x8, #0x30
    12e8:	stp	x24, x20, [sp, #8]
    12ec:	sub	x0, x29, #0x4
    12f0:	mov	w1, #0x1                   	// #1
    12f4:	mov	w2, #0x4                   	// #4
    12f8:	mov	x3, x20
    12fc:	bl	8b0 <fread@plt>
    1300:	cmp	x0, #0x4
    1304:	b.ne	14b0 <dl_load@@Base+0xacc>  // b.any
    1308:	ldur	w8, [x29, #-4]
    130c:	movi	v0.2d, #0x0
    1310:	stp	q0, q0, [sp, #32]
    1314:	stp	q0, q0, [sp, #64]
    1318:	rev	w27, w8
    131c:	stur	w27, [x29, #-4]
    1320:	str	q0, [sp, #96]
    1324:	cbz	w8, 1374 <dl_load@@Base+0x990>
    1328:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    132c:	ldr	x0, [x8, #240]
    1330:	cbz	x0, 138c <dl_load@@Base+0x9a8>
    1334:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    1338:	ldr	w8, [x8, #216]
    133c:	cmp	w8, w27
    1340:	b.cs	13d8 <dl_load@@Base+0x9f4>  // b.hs, b.nlast
    1344:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    1348:	ldr	x8, [x8, #224]
    134c:	mov	w26, w27
    1350:	mov	x1, x26
    1354:	ldr	x8, [x8, #296]
    1358:	blr	x8
    135c:	cbz	x0, 14b0 <dl_load@@Base+0xacc>
    1360:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    1364:	add	x8, x8, #0xd8
    1368:	str	x0, [x8, #24]
    136c:	str	w27, [x8]
    1370:	b	13dc <dl_load@@Base+0x9f8>
    1374:	stp	q0, q0, [x28]
    1378:	mov	x0, x20
    137c:	mov	x1, x24
    1380:	bl	150c <dl_load@@Base+0xb28>
    1384:	cbnz	w0, 1488 <dl_load@@Base+0xaa4>
    1388:	b	14b0 <dl_load@@Base+0xacc>
    138c:	ldr	x8, [x23]
    1390:	mov	w26, w27
    1394:	mov	x0, x26
    1398:	ldr	x8, [x8, #280]
    139c:	blr	x8
    13a0:	str	x0, [x23, #16]
    13a4:	cbnz	x0, 13cc <dl_load@@Base+0x9e8>
    13a8:	ldp	x8, x0, [x23]
    13ac:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    13b0:	adrp	x2, 1000 <dl_load@@Base+0x61c>
    13b4:	add	x1, x1, #0x8c5
    13b8:	ldr	x8, [x8, #96]
    13bc:	add	x2, x2, #0x8e3
    13c0:	mov	w3, w27
    13c4:	blr	x8
    13c8:	ldr	x0, [x23, #16]
    13cc:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    13d0:	str	w27, [x8, #216]
    13d4:	b	13dc <dl_load@@Base+0x9f8>
    13d8:	mov	w26, w27
    13dc:	mov	w1, #0x1                   	// #1
    13e0:	mov	x2, x26
    13e4:	mov	x3, x20
    13e8:	bl	8b0 <fread@plt>
    13ec:	cmp	x0, x26
    13f0:	b.ne	14b0 <dl_load@@Base+0xacc>  // b.any
    13f4:	ldp	x25, x8, [x23]
    13f8:	movi	v0.2d, #0x0
    13fc:	stp	q0, q0, [x28]
    1400:	str	x26, [sp, #64]
    1404:	str	x8, [sp, #24]
    1408:	mov	w8, #0x2                   	// #2
    140c:	str	w8, [sp, #48]
    1410:	ldr	x8, [x25, #280]
    1414:	ldr	x27, [x23, #16]
    1418:	mov	x20, x23
    141c:	add	x23, x26, #0x1
    1420:	mov	x0, x23
    1424:	mov	x24, x28
    1428:	blr	x8
    142c:	mov	x28, x0
    1430:	cbnz	x0, 1454 <dl_load@@Base+0xa70>
    1434:	ldr	x8, [x25, #96]
    1438:	ldr	x0, [sp, #24]
    143c:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    1440:	adrp	x2, 1000 <dl_load@@Base+0x61c>
    1444:	add	x1, x1, #0x8c5
    1448:	add	x2, x2, #0x8ed
    144c:	mov	x3, x23
    1450:	blr	x8
    1454:	mov	x0, x28
    1458:	mov	x1, x27
    145c:	mov	x2, x26
    1460:	bl	840 <memcpy@plt>
    1464:	strb	wzr, [x28, x26]
    1468:	str	x28, [sp, #56]
    146c:	mov	x23, x20
    1470:	mov	x28, x24
    1474:	ldp	x24, x20, [sp, #8]
    1478:	mov	x0, x20
    147c:	mov	x1, x24
    1480:	bl	150c <dl_load@@Base+0xb28>
    1484:	cbz	w0, 14b0 <dl_load@@Base+0xacc>
    1488:	ldp	x8, x0, [x23]
    148c:	mov	x1, x22
    1490:	mov	x2, x28
    1494:	mov	x3, x24
    1498:	ldr	x8, [x8, #232]
    149c:	blr	x8
    14a0:	cbz	w0, 14bc <dl_load@@Base+0xad8>
    14a4:	add	w19, w19, #0x1
    14a8:	cmp	w19, w21
    14ac:	b.cc	12ec <dl_load@@Base+0x908>  // b.lo, b.ul, b.last
    14b0:	cmp	w19, w21
    14b4:	cset	w0, eq  // eq = none
    14b8:	b	14ec <dl_load@@Base+0xb08>
    14bc:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
    14c0:	ldr	x8, [x8, #4048]
    14c4:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    14c8:	add	x1, x1, #0x89f
    14cc:	mov	w2, #0x5                   	// #5
    14d0:	ldr	x19, [x8]
    14d4:	mov	x0, xzr
    14d8:	bl	8d0 <dcgettext@plt>
    14dc:	mov	x1, x0
    14e0:	mov	x0, x19
    14e4:	bl	900 <fprintf@plt>
    14e8:	mov	w0, wzr
    14ec:	ldp	x20, x19, [sp, #208]
    14f0:	ldp	x22, x21, [sp, #192]
    14f4:	ldp	x24, x23, [sp, #176]
    14f8:	ldp	x26, x25, [sp, #160]
    14fc:	ldp	x28, x27, [sp, #144]
    1500:	ldp	x29, x30, [sp, #128]
    1504:	add	sp, sp, #0xe0
    1508:	ret
    150c:	sub	sp, sp, #0x50
    1510:	stp	x29, x30, [sp, #16]
    1514:	stp	x20, x19, [sp, #64]
    1518:	add	x29, sp, #0x10
    151c:	mov	x20, x0
    1520:	mov	x19, x1
    1524:	sub	x0, x29, #0x4
    1528:	mov	w1, #0x1                   	// #1
    152c:	mov	w2, #0x4                   	// #4
    1530:	mov	x3, x20
    1534:	stp	x24, x23, [sp, #32]
    1538:	stp	x22, x21, [sp, #48]
    153c:	bl	8b0 <fread@plt>
    1540:	cmp	x0, #0x4
    1544:	b.ne	16ac <dl_load@@Base+0xcc8>  // b.any
    1548:	ldur	w8, [x29, #-4]
    154c:	rev	w21, w8
    1550:	cmp	w21, #0x1
    1554:	stur	w21, [x29, #-4]
    1558:	b.eq	159c <dl_load@@Base+0xbb8>  // b.none
    155c:	cmp	w21, #0x2
    1560:	b.ne	15cc <dl_load@@Base+0xbe8>  // b.any
    1564:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    1568:	add	x8, x8, #0xe0
    156c:	ldp	x9, x0, [x8]
    1570:	ldr	x8, [x9, #248]
    1574:	blr	x8
    1578:	mov	x21, x0
    157c:	mov	x0, x20
    1580:	mov	x1, x21
    1584:	bl	127c <dl_load@@Base+0x898>
    1588:	cbz	w0, 16ac <dl_load@@Base+0xcc8>
    158c:	mov	w8, #0x5                   	// #5
    1590:	str	x21, [x19, #8]
    1594:	str	w8, [x19]
    1598:	b	1694 <dl_load@@Base+0xcb0>
    159c:	mov	x0, sp
    15a0:	mov	w1, #0x1                   	// #1
    15a4:	mov	w2, #0x8                   	// #8
    15a8:	mov	x3, x20
    15ac:	mov	w21, #0x1                   	// #1
    15b0:	bl	8b0 <fread@plt>
    15b4:	cmp	x0, #0x8
    15b8:	b.ne	16ac <dl_load@@Base+0xcc8>  // b.any
    15bc:	str	w21, [x19]
    15c0:	ldr	x8, [sp]
    15c4:	str	x8, [x19, #8]
    15c8:	b	16b0 <dl_load@@Base+0xccc>
    15cc:	mov	x0, sp
    15d0:	mov	w1, #0x1                   	// #1
    15d4:	mov	w2, #0x4                   	// #4
    15d8:	mov	x3, x20
    15dc:	bl	8b0 <fread@plt>
    15e0:	cmp	x0, #0x4
    15e4:	b.ne	16ac <dl_load@@Base+0xcc8>  // b.any
    15e8:	ldr	w8, [sp]
    15ec:	cmp	w21, #0x6
    15f0:	rev	w23, w8
    15f4:	str	w23, [sp]
    15f8:	b.cs	1608 <dl_load@@Base+0xc24>  // b.hs, b.nlast
    15fc:	mov	w8, #0x39                  	// #57
    1600:	lsr	w8, w8, w21
    1604:	tbnz	w8, #0, 1644 <dl_load@@Base+0xc60>
    1608:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    160c:	add	x8, x8, #0xe0
    1610:	ldp	x9, x22, [x8]
    1614:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    1618:	add	x1, x1, #0x8fb
    161c:	mov	w2, #0x5                   	// #5
    1620:	ldr	x24, [x9, #104]
    1624:	mov	x0, xzr
    1628:	bl	8d0 <dcgettext@plt>
    162c:	mov	x1, x0
    1630:	mov	x0, x22
    1634:	mov	w2, w21
    1638:	blr	x24
    163c:	mov	w8, #0x2                   	// #2
    1640:	b	1650 <dl_load@@Base+0xc6c>
    1644:	adrp	x8, 1000 <dl_load@@Base+0x61c>
    1648:	add	x8, x8, #0x95c
    164c:	ldr	w8, [x8, w21, sxtw #2]
    1650:	mov	w21, w23
    1654:	str	w8, [x19]
    1658:	str	x21, [x19, #16]
    165c:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
    1660:	ldr	x8, [x22, #224]
    1664:	add	w0, w23, #0x1
    1668:	ldr	x8, [x8, #280]
    166c:	blr	x8
    1670:	mov	w1, #0x1                   	// #1
    1674:	mov	x2, x21
    1678:	mov	x3, x20
    167c:	str	x0, [x19, #8]
    1680:	bl	8b0 <fread@plt>
    1684:	cmp	x0, x21
    1688:	b.ne	169c <dl_load@@Base+0xcb8>  // b.any
    168c:	ldr	x8, [x19, #8]
    1690:	strb	wzr, [x8, x21]
    1694:	mov	w21, #0x1                   	// #1
    1698:	b	16b0 <dl_load@@Base+0xccc>
    169c:	ldr	x8, [x22, #224]
    16a0:	ldr	x0, [x19, #8]
    16a4:	ldr	x8, [x8, #304]
    16a8:	blr	x8
    16ac:	mov	w21, wzr
    16b0:	mov	w0, w21
    16b4:	ldp	x20, x19, [sp, #64]
    16b8:	ldp	x22, x21, [sp, #48]
    16bc:	ldp	x24, x23, [sp, #32]
    16c0:	ldp	x29, x30, [sp, #16]
    16c4:	add	sp, sp, #0x50
    16c8:	ret

Disassembly of section .fini:

00000000000016cc <.fini>:
    16cc:	stp	x29, x30, [sp, #-16]!
    16d0:	mov	x29, sp
    16d4:	ldp	x29, x30, [sp], #16
    16d8:	ret
