
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_blowfish.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <do_encrypt>:
   0:	ldr	w6, [x0, #4096]
   4:	add	x4, x0, #0x400
   8:	ldr	w8, [x1]
   c:	add	x3, x0, #0x800
  10:	ldr	w9, [x2]
  14:	add	x5, x0, #0xc00
  18:	eor	w8, w8, w6
  1c:	ldr	w14, [x0, #4100]
  20:	and	x11, x8, #0xff
  24:	ldr	w10, [x0, #4104]
  28:	lsr	w12, w8, #24
  2c:	ubfx	x7, x8, #16, #8
  30:	ubfx	x6, x8, #8, #8
  34:	eor	w14, w9, w14
  38:	ldr	w11, [x5, x11, lsl #2]
  3c:	eor	w10, w8, w10
  40:	ldr	w7, [x4, x7, lsl #2]
  44:	ldr	w9, [x0, x12, lsl #2]
  48:	ldr	w6, [x3, x6, lsl #2]
  4c:	add	w9, w9, w7
  50:	ldr	w7, [x0, #4108]
  54:	eor	w9, w9, w6
  58:	ldr	w6, [x0, #4112]
  5c:	add	w9, w9, w11
  60:	ldr	w12, [x0, #4116]
  64:	eor	w9, w9, w14
  68:	eor	w13, w9, w7
  6c:	and	x14, x9, #0xff
  70:	ubfx	x11, x9, #16, #8
  74:	lsr	w8, w9, #24
  78:	ubfx	x9, x9, #8, #8
  7c:	ldr	w7, [x5, x14, lsl #2]
  80:	ldr	w11, [x4, x11, lsl #2]
  84:	ldr	w8, [x0, x8, lsl #2]
  88:	ldr	w9, [x3, x9, lsl #2]
  8c:	add	w8, w8, w11
  90:	eor	w8, w8, w9
  94:	add	w8, w8, w7
  98:	eor	w8, w8, w10
  9c:	eor	w11, w8, w6
  a0:	and	x10, x8, #0xff
  a4:	ubfx	x9, x8, #16, #8
  a8:	lsr	w7, w8, #24
  ac:	ubfx	x8, x8, #8, #8
  b0:	ldr	w6, [x5, x10, lsl #2]
  b4:	ldr	w9, [x4, x9, lsl #2]
  b8:	ldr	w7, [x0, x7, lsl #2]
  bc:	ldr	w8, [x3, x8, lsl #2]
  c0:	add	w7, w7, w9
  c4:	eor	w7, w7, w8
  c8:	add	w7, w7, w6
  cc:	eor	w7, w7, w13
  d0:	eor	w8, w7, w12
  d4:	and	x9, x7, #0xff
  d8:	ubfx	x10, x7, #16, #8
  dc:	lsr	w6, w7, #24
  e0:	ubfx	x7, x7, #8, #8
  e4:	ldr	w9, [x5, x9, lsl #2]
  e8:	ldr	w10, [x4, x10, lsl #2]
  ec:	ldr	w6, [x0, x6, lsl #2]
  f0:	ldr	w7, [x3, x7, lsl #2]
  f4:	add	w6, w6, w10
  f8:	eor	w6, w6, w7
  fc:	add	w6, w6, w9
 100:	eor	w6, w6, w11
 104:	and	x7, x6, #0xff
 108:	lsr	w11, w6, #24
 10c:	ubfx	x10, x6, #16, #8
 110:	ubfx	x9, x6, #8, #8
 114:	ldr	w7, [x5, x7, lsl #2]
 118:	ldr	w10, [x4, x10, lsl #2]
 11c:	ldr	w12, [x0, x11, lsl #2]
 120:	ldr	w9, [x3, x9, lsl #2]
 124:	add	w12, w12, w10
 128:	eor	w12, w12, w9
 12c:	add	w12, w12, w7
 130:	eor	w12, w12, w8
 134:	and	x9, x12, #0xff
 138:	lsr	w10, w12, #24
 13c:	ubfx	x8, x12, #16, #8
 140:	ubfx	x7, x12, #8, #8
 144:	ldr	w9, [x5, x9, lsl #2]
 148:	ldr	w11, [x0, x10, lsl #2]
 14c:	ldr	w8, [x4, x8, lsl #2]
 150:	ldr	w7, [x3, x7, lsl #2]
 154:	add	w11, w11, w8
 158:	ldr	w8, [x0, #4120]
 15c:	eor	w11, w11, w7
 160:	ldr	w7, [x0, #4124]
 164:	add	w11, w11, w9
 168:	eor	w6, w6, w8
 16c:	eor	w6, w11, w6
 170:	eor	w7, w12, w7
 174:	and	x9, x6, #0xff
 178:	ubfx	x10, x6, #16, #8
 17c:	lsr	w12, w6, #24
 180:	ubfx	x8, x6, #8, #8
 184:	ldr	w9, [x5, x9, lsl #2]
 188:	ldr	w10, [x4, x10, lsl #2]
 18c:	ldr	w12, [x0, x12, lsl #2]
 190:	ldr	w8, [x3, x8, lsl #2]
 194:	add	w12, w12, w10
 198:	eor	w12, w12, w8
 19c:	add	w12, w12, w9
 1a0:	eor	w12, w12, w7
 1a4:	add	x7, x0, #0xffc
 1a8:	and	x15, x12, #0xff
 1ac:	ubfx	x14, x12, #16, #8
 1b0:	ldp	w11, w10, [x7, #36]
 1b4:	ldr	w14, [x4, x14, lsl #2]
 1b8:	eor	w6, w6, w11
 1bc:	lsr	w11, w12, #24
 1c0:	eor	w13, w12, w10
 1c4:	ubfx	x12, x12, #8, #8
 1c8:	ldr	w10, [x5, x15, lsl #2]
 1cc:	ldr	w11, [x0, x11, lsl #2]
 1d0:	ldr	w12, [x3, x12, lsl #2]
 1d4:	add	w11, w11, w14
 1d8:	eor	w11, w11, w12
 1dc:	ldp	w8, w9, [x7, #44]
 1e0:	add	w11, w11, w10
 1e4:	eor	w11, w11, w6
 1e8:	ldr	w7, [x0, #4144]
 1ec:	eor	w12, w11, w8
 1f0:	and	x6, x11, #0xff
 1f4:	ubfx	x10, x11, #16, #8
 1f8:	lsr	w8, w11, #24
 1fc:	ubfx	x11, x11, #8, #8
 200:	ldr	w6, [x5, x6, lsl #2]
 204:	ldr	w14, [x4, x10, lsl #2]
 208:	ldr	w10, [x0, x8, lsl #2]
 20c:	ldr	w8, [x3, x11, lsl #2]
 210:	add	w10, w10, w14
 214:	eor	w10, w10, w8
 218:	add	w10, w10, w6
 21c:	eor	w10, w10, w13
 220:	and	x13, x10, #0xff
 224:	eor	w9, w10, w9
 228:	ubfx	x11, x10, #16, #8
 22c:	lsr	w8, w10, #24
 230:	ubfx	x10, x10, #8, #8
 234:	ldr	w6, [x5, x13, lsl #2]
 238:	ldr	w11, [x4, x11, lsl #2]
 23c:	ldr	w8, [x0, x8, lsl #2]
 240:	ldr	w10, [x3, x10, lsl #2]
 244:	add	w8, w8, w11
 248:	eor	w8, w8, w10
 24c:	add	w8, w8, w6
 250:	eor	w8, w8, w12
 254:	eor	w10, w8, w7
 258:	and	x12, x8, #0xff
 25c:	ubfx	x11, x8, #16, #8
 260:	lsr	w6, w8, #24
 264:	ubfx	x8, x8, #8, #8
 268:	ldr	w7, [x5, x12, lsl #2]
 26c:	ldr	w11, [x4, x11, lsl #2]
 270:	ldr	w6, [x0, x6, lsl #2]
 274:	ldr	w8, [x3, x8, lsl #2]
 278:	add	w6, w6, w11
 27c:	eor	w6, w6, w8
 280:	add	w6, w6, w7
 284:	eor	w6, w6, w9
 288:	and	x8, x6, #0xff
 28c:	ubfx	x11, x6, #16, #8
 290:	lsr	w7, w6, #24
 294:	ubfx	x9, x6, #8, #8
 298:	ldr	w8, [x5, x8, lsl #2]
 29c:	ldr	w11, [x4, x11, lsl #2]
 2a0:	ldr	w7, [x0, x7, lsl #2]
 2a4:	ldr	w9, [x3, x9, lsl #2]
 2a8:	add	w7, w7, w11
 2ac:	eor	w7, w7, w9
 2b0:	add	w7, w7, w8
 2b4:	eor	w7, w7, w10
 2b8:	and	x8, x7, #0xff
 2bc:	ubfx	x10, x7, #16, #8
 2c0:	lsr	w9, w7, #24
 2c4:	ubfx	x11, x7, #8, #8
 2c8:	ldr	w9, [x0, x9, lsl #2]
 2cc:	ldr	w10, [x4, x10, lsl #2]
 2d0:	ldr	w11, [x3, x11, lsl #2]
 2d4:	ldr	w8, [x5, x8, lsl #2]
 2d8:	add	w9, w9, w10
 2dc:	ldr	w10, [x0, #4148]
 2e0:	eor	w9, w9, w11
 2e4:	add	w9, w9, w8
 2e8:	ldr	w8, [x0, #4152]
 2ec:	eor	w6, w6, w10
 2f0:	ldr	w10, [x0, #4156]
 2f4:	eor	w9, w9, w6
 2f8:	eor	w8, w7, w8
 2fc:	eor	w10, w9, w10
 300:	and	x11, x9, #0xff
 304:	ubfx	x12, x9, #16, #8
 308:	lsr	w7, w9, #24
 30c:	ubfx	x9, x9, #8, #8
 310:	ldr	w6, [x0, #4160]
 314:	ldr	w11, [x5, x11, lsl #2]
 318:	ldr	w13, [x4, x12, lsl #2]
 31c:	ldr	w7, [x0, x7, lsl #2]
 320:	ldr	w12, [x3, x9, lsl #2]
 324:	add	w7, w7, w13
 328:	ldr	w9, [x0, #4164]
 32c:	eor	w7, w7, w12
 330:	add	w7, w7, w11
 334:	eor	w7, w7, w8
 338:	eor	w8, w7, w6
 33c:	and	x11, x7, #0xff
 340:	ubfx	x12, x7, #16, #8
 344:	lsr	w6, w7, #24
 348:	ubfx	x7, x7, #8, #8
 34c:	ldr	w11, [x5, x11, lsl #2]
 350:	ldr	w12, [x4, x12, lsl #2]
 354:	ldr	w6, [x0, x6, lsl #2]
 358:	ldr	w7, [x3, x7, lsl #2]
 35c:	add	w6, w6, w12
 360:	eor	w6, w6, w7
 364:	add	w6, w6, w11
 368:	eor	w6, w6, w10
 36c:	eor	w7, w9, w6
 370:	and	x11, x6, #0xff
 374:	ubfx	x10, x6, #16, #8
 378:	lsr	w9, w6, #24
 37c:	ubfx	x6, x6, #8, #8
 380:	ldr	w5, [x5, x11, lsl #2]
 384:	ldr	w4, [x4, x10, lsl #2]
 388:	ldr	w0, [x0, x9, lsl #2]
 38c:	ldr	w3, [x3, x6, lsl #2]
 390:	add	w0, w0, w4
 394:	str	w7, [x1]
 398:	eor	w0, w0, w3
 39c:	add	w0, w0, w5
 3a0:	eor	w0, w0, w8
 3a4:	str	w0, [x2]
 3a8:	ret
 3ac:	nop

00000000000003b0 <decrypt_block>:
 3b0:	mov	x3, x0
 3b4:	add	x5, x0, #0x400
 3b8:	ldp	w8, w9, [x2]
 3bc:	add	x4, x0, #0x800
 3c0:	ldr	w7, [x3, #4164]
 3c4:	add	x6, x0, #0xc00
 3c8:	rev	w8, w8
 3cc:	ldr	w2, [x3, #4160]
 3d0:	eor	w8, w8, w7
 3d4:	rev	w9, w9
 3d8:	and	x11, x8, #0xff
 3dc:	eor	w2, w9, w2
 3e0:	lsr	w12, w8, #24
 3e4:	ubfx	x10, x8, #16, #8
 3e8:	ubfx	x7, x8, #8, #8
 3ec:	add	x13, x3, #0xffc
 3f0:	ldr	w11, [x6, x11, lsl #2]
 3f4:	add	x16, x3, #0xffc
 3f8:	ldr	w10, [x5, x10, lsl #2]
 3fc:	mov	w0, #0x40                  	// #64
 400:	ldr	w9, [x3, x12, lsl #2]
 404:	ldr	w7, [x4, x7, lsl #2]
 408:	add	w9, w9, w10
 40c:	eor	w9, w9, w7
 410:	add	w9, w9, w11
 414:	ldp	w7, w10, [x13, #60]
 418:	eor	w9, w9, w2
 41c:	and	x14, x9, #0xff
 420:	eor	w10, w8, w10
 424:	ubfx	x11, x9, #16, #8
 428:	lsr	w8, w9, #24
 42c:	ldp	w12, w2, [x13, #52]
 430:	eor	w13, w9, w7
 434:	ubfx	x9, x9, #8, #8
 438:	ldr	w11, [x5, x11, lsl #2]
 43c:	ldr	w8, [x3, x8, lsl #2]
 440:	ldr	w7, [x6, x14, lsl #2]
 444:	ldr	w9, [x4, x9, lsl #2]
 448:	add	w8, w8, w11
 44c:	eor	w8, w8, w9
 450:	add	w8, w8, w7
 454:	eor	w8, w8, w10
 458:	eor	w11, w8, w2
 45c:	and	x10, x8, #0xff
 460:	ubfx	x9, x8, #16, #8
 464:	lsr	w7, w8, #24
 468:	ubfx	x8, x8, #8, #8
 46c:	ldr	w2, [x6, x10, lsl #2]
 470:	ldr	w9, [x5, x9, lsl #2]
 474:	ldr	w7, [x3, x7, lsl #2]
 478:	ldr	w8, [x4, x8, lsl #2]
 47c:	add	w7, w7, w9
 480:	eor	w7, w7, w8
 484:	add	w7, w7, w2
 488:	eor	w7, w7, w13
 48c:	eor	w8, w7, w12
 490:	and	x9, x7, #0xff
 494:	ubfx	x10, x7, #16, #8
 498:	lsr	w2, w7, #24
 49c:	ubfx	x7, x7, #8, #8
 4a0:	ldr	w9, [x6, x9, lsl #2]
 4a4:	ldr	w10, [x5, x10, lsl #2]
 4a8:	ldr	w2, [x3, x2, lsl #2]
 4ac:	ldr	w7, [x4, x7, lsl #2]
 4b0:	add	w2, w2, w10
 4b4:	eor	w2, w2, w7
 4b8:	add	w2, w2, w9
 4bc:	eor	w2, w2, w11
 4c0:	and	x7, x2, #0xff
 4c4:	lsr	w11, w2, #24
 4c8:	ubfx	x10, x2, #16, #8
 4cc:	ubfx	x9, x2, #8, #8
 4d0:	ldr	w7, [x6, x7, lsl #2]
 4d4:	ldr	w10, [x5, x10, lsl #2]
 4d8:	ldr	w12, [x3, x11, lsl #2]
 4dc:	ldr	w9, [x4, x9, lsl #2]
 4e0:	add	w12, w12, w10
 4e4:	eor	w12, w12, w9
 4e8:	add	w12, w12, w7
 4ec:	eor	w12, w12, w8
 4f0:	and	x9, x12, #0xff
 4f4:	lsr	w10, w12, #24
 4f8:	ubfx	x8, x12, #16, #8
 4fc:	ubfx	x7, x12, #8, #8
 500:	ldr	w9, [x6, x9, lsl #2]
 504:	ldr	w11, [x3, x10, lsl #2]
 508:	ldr	w8, [x5, x8, lsl #2]
 50c:	ldr	w7, [x4, x7, lsl #2]
 510:	add	w11, w11, w8
 514:	ldr	w8, [x3, #4140]
 518:	eor	w11, w11, w7
 51c:	ldr	w7, [x3, #4136]
 520:	add	w11, w11, w9
 524:	eor	w2, w2, w8
 528:	eor	w2, w11, w2
 52c:	eor	w7, w12, w7
 530:	and	x9, x2, #0xff
 534:	ldr	w11, [x3, #4132]
 538:	ubfx	x10, x2, #16, #8
 53c:	lsr	w12, w2, #24
 540:	ubfx	x8, x2, #8, #8
 544:	eor	w2, w2, w11
 548:	ldr	w9, [x6, x9, lsl #2]
 54c:	ldr	w10, [x5, x10, lsl #2]
 550:	ldr	w12, [x3, x12, lsl #2]
 554:	ldr	w8, [x4, x8, lsl #2]
 558:	add	w12, w12, w10
 55c:	eor	w12, w12, w8
 560:	add	w12, w12, w9
 564:	ldp	w8, w10, [x16, #32]
 568:	eor	w12, w12, w7
 56c:	and	x15, x12, #0xff
 570:	ubfx	x14, x12, #16, #8
 574:	lsr	w11, w12, #24
 578:	eor	w13, w12, w10
 57c:	ubfx	x12, x12, #8, #8
 580:	ldr	w10, [x6, x15, lsl #2]
 584:	ldr	w14, [x5, x14, lsl #2]
 588:	ldr	w11, [x3, x11, lsl #2]
 58c:	ldr	w12, [x4, x12, lsl #2]
 590:	add	w11, w11, w14
 594:	eor	w11, w11, w12
 598:	add	w11, w11, w10
 59c:	eor	w11, w11, w2
 5a0:	eor	w12, w11, w8
 5a4:	and	x2, x11, #0xff
 5a8:	ubfx	x10, x11, #16, #8
 5ac:	lsr	w8, w11, #24
 5b0:	ubfx	x11, x11, #8, #8
 5b4:	ldr	w2, [x6, x2, lsl #2]
 5b8:	ldr	w14, [x5, x10, lsl #2]
 5bc:	ldr	w10, [x3, x8, lsl #2]
 5c0:	ldr	w8, [x4, x11, lsl #2]
 5c4:	add	w10, w10, w14
 5c8:	eor	w10, w10, w8
 5cc:	add	w10, w10, w2
 5d0:	ldp	w7, w9, [x16, #24]
 5d4:	eor	w10, w10, w13
 5d8:	and	x13, x10, #0xff
 5dc:	ubfx	x11, x10, #16, #8
 5e0:	lsr	w8, w10, #24
 5e4:	eor	w9, w10, w9
 5e8:	ubfx	x10, x10, #8, #8
 5ec:	ldr	w2, [x6, x13, lsl #2]
 5f0:	ldr	w11, [x5, x11, lsl #2]
 5f4:	ldr	w8, [x3, x8, lsl #2]
 5f8:	ldr	w10, [x4, x10, lsl #2]
 5fc:	add	w8, w8, w11
 600:	eor	w8, w8, w10
 604:	add	w8, w8, w2
 608:	eor	w8, w8, w12
 60c:	eor	w10, w8, w7
 610:	and	x12, x8, #0xff
 614:	ubfx	x11, x8, #16, #8
 618:	lsr	w2, w8, #24
 61c:	ubfx	x8, x8, #8, #8
 620:	ldr	w7, [x6, x12, lsl #2]
 624:	ldr	w11, [x5, x11, lsl #2]
 628:	ldr	w2, [x3, x2, lsl #2]
 62c:	ldr	w8, [x4, x8, lsl #2]
 630:	add	w2, w2, w11
 634:	eor	w2, w2, w8
 638:	add	w2, w2, w7
 63c:	eor	w2, w2, w9
 640:	and	x8, x2, #0xff
 644:	ubfx	x11, x2, #16, #8
 648:	lsr	w7, w2, #24
 64c:	ubfx	x9, x2, #8, #8
 650:	ldr	w8, [x6, x8, lsl #2]
 654:	ldr	w11, [x5, x11, lsl #2]
 658:	ldr	w7, [x3, x7, lsl #2]
 65c:	ldr	w9, [x4, x9, lsl #2]
 660:	add	w7, w7, w11
 664:	eor	w7, w7, w9
 668:	add	w7, w7, w8
 66c:	eor	w7, w7, w10
 670:	and	x8, x7, #0xff
 674:	ubfx	x10, x7, #16, #8
 678:	lsr	w9, w7, #24
 67c:	ubfx	x11, x7, #8, #8
 680:	ldr	w9, [x3, x9, lsl #2]
 684:	ldr	w10, [x5, x10, lsl #2]
 688:	ldr	w11, [x4, x11, lsl #2]
 68c:	ldr	w8, [x6, x8, lsl #2]
 690:	add	w9, w9, w10
 694:	ldr	w10, [x3, #4112]
 698:	eor	w9, w9, w11
 69c:	add	w9, w9, w8
 6a0:	ldr	w8, [x3, #4108]
 6a4:	eor	w2, w2, w10
 6a8:	ldr	w10, [x3, #4104]
 6ac:	eor	w9, w9, w2
 6b0:	eor	w8, w7, w8
 6b4:	eor	w10, w9, w10
 6b8:	and	x11, x9, #0xff
 6bc:	ubfx	x12, x9, #16, #8
 6c0:	lsr	w7, w9, #24
 6c4:	ubfx	x9, x9, #8, #8
 6c8:	ldr	w2, [x3, #4100]
 6cc:	ldr	w11, [x6, x11, lsl #2]
 6d0:	ldr	w13, [x5, x12, lsl #2]
 6d4:	ldr	w7, [x3, x7, lsl #2]
 6d8:	ldr	w12, [x4, x9, lsl #2]
 6dc:	add	w7, w7, w13
 6e0:	ldr	w9, [x3, #4096]
 6e4:	eor	w7, w7, w12
 6e8:	add	w7, w7, w11
 6ec:	eor	w7, w7, w8
 6f0:	eor	w8, w7, w2
 6f4:	and	x11, x7, #0xff
 6f8:	ubfx	x12, x7, #16, #8
 6fc:	lsr	w2, w7, #24
 700:	ubfx	x7, x7, #8, #8
 704:	ldr	w11, [x6, x11, lsl #2]
 708:	ldr	w12, [x5, x12, lsl #2]
 70c:	ldr	w2, [x3, x2, lsl #2]
 710:	ldr	w7, [x4, x7, lsl #2]
 714:	add	w2, w2, w12
 718:	eor	w2, w2, w7
 71c:	add	w2, w2, w11
 720:	eor	w2, w2, w10
 724:	eor	w7, w2, w9
 728:	and	x11, x2, #0xff
 72c:	ubfx	x10, x2, #16, #8
 730:	lsr	w9, w2, #24
 734:	ubfx	x2, x2, #8, #8
 738:	rev	w7, w7
 73c:	ldr	w6, [x6, x11, lsl #2]
 740:	ldr	w5, [x5, x10, lsl #2]
 744:	ldr	w3, [x3, x9, lsl #2]
 748:	ldr	w4, [x4, x2, lsl #2]
 74c:	add	w2, w3, w5
 750:	eor	w2, w2, w4
 754:	add	w2, w2, w6
 758:	eor	w2, w2, w8
 75c:	rev	w2, w2
 760:	stp	w7, w2, [x1]
 764:	b	0 <_gcry_burn_stack>

0000000000000768 <encrypt_block>:
 768:	mov	x3, x2
 76c:	stp	x29, x30, [sp, #-32]!
 770:	mov	x18, x1
 774:	mov	x29, sp
 778:	ldp	w4, w3, [x3]
 77c:	add	x2, sp, #0x1c
 780:	add	x1, sp, #0x18
 784:	rev	w4, w4
 788:	rev	w3, w3
 78c:	stp	w4, w3, [sp, #24]
 790:	bl	0 <do_encrypt>
 794:	ldp	w2, w1, [sp, #24]
 798:	mov	w0, #0x40                  	// #64
 79c:	rev	w2, w2
 7a0:	rev	w1, w1
 7a4:	stp	w2, w1, [x18]
 7a8:	bl	0 <_gcry_burn_stack>
 7ac:	ldp	x29, x30, [sp], #32
 7b0:	ret
 7b4:	nop

00000000000007b8 <bf_setkey>:
 7b8:	stp	x29, x30, [sp, #-80]!
 7bc:	adrp	x3, 0 <do_encrypt>
 7c0:	mov	x18, x0
 7c4:	mov	x29, sp
 7c8:	ldr	x3, [x3]
 7cc:	stp	x19, x20, [sp, #16]
 7d0:	ldr	w0, [x3]
 7d4:	cbnz	w0, a8c <bf_setkey+0x2d4>
 7d8:	stp	x21, x22, [sp, #32]
 7dc:	mov	w0, #0x1                   	// #1
 7e0:	tst	x18, #0x7
 7e4:	stp	x23, x24, [sp, #48]
 7e8:	add	x21, x18, #0x1, lsl #12
 7ec:	str	w0, [x3]
 7f0:	adrp	x0, 0 <do_encrypt>
 7f4:	str	xzr, [x3, #8]
 7f8:	b.ne	ab0 <bf_setkey+0x2f8>  // b.any
 7fc:	ldr	x0, [x0]
 800:	ldr	x3, [x0]
 804:	str	x3, [x18, #4096]
 808:	ldr	x3, [x0, #8]
 80c:	str	x3, [x18, #4104]
 810:	ldr	x3, [x0, #16]
 814:	str	x3, [x18, #4112]
 818:	ldr	x3, [x0, #24]
 81c:	str	x3, [x18, #4120]
 820:	ldr	x3, [x0, #32]
 824:	str	x3, [x18, #4128]
 828:	ldr	x3, [x0, #40]
 82c:	str	x3, [x18, #4136]
 830:	ldr	x3, [x0, #48]
 834:	str	x3, [x18, #4144]
 838:	ldr	x3, [x0, #56]
 83c:	str	x3, [x18, #4152]
 840:	ldr	x3, [x0, #64]
 844:	str	x3, [x18, #4160]
 848:	add	x20, x18, #0x400
 84c:	add	x23, x18, #0x800
 850:	add	x22, x18, #0xc00
 854:	orr	x3, x23, x20
 858:	orr	x4, x22, x18
 85c:	orr	x3, x3, x4
 860:	mov	x4, x18
 864:	tst	x3, #0x7
 868:	b.ne	af4 <bf_setkey+0x33c>  // b.any
 86c:	add	x8, x0, #0x48
 870:	add	x7, x0, #0x448
 874:	add	x6, x0, #0x848
 878:	add	x0, x0, #0xc48
 87c:	mov	x3, #0x0                   	// #0
 880:	ldr	x5, [x3, x8]
 884:	str	x5, [x4]
 888:	ldr	x5, [x3, x7]
 88c:	str	x5, [x4, #1024]
 890:	ldr	x5, [x3, x6]
 894:	str	x5, [x4, #2048]
 898:	ldr	x5, [x3, x0]
 89c:	str	x5, [x4, #3072]
 8a0:	add	x3, x3, #0x8
 8a4:	add	x4, x4, #0x8
 8a8:	cmp	x3, #0x400
 8ac:	b.ne	880 <bf_setkey+0xc8>  // b.any
 8b0:	mov	x0, #0x1048                	// #4168
 8b4:	mov	x19, x21
 8b8:	mov	x3, x21
 8bc:	add	x24, x18, x0
 8c0:	mov	w0, #0x0                   	// #0
 8c4:	nop
 8c8:	add	w11, w0, #0x1
 8cc:	add	w10, w0, #0x2
 8d0:	add	w9, w0, #0x3
 8d4:	add	w8, w0, #0x4
 8d8:	ldrb	w0, [x1, w0, sxtw]
 8dc:	udiv	w7, w11, w2
 8e0:	strb	w0, [sp, #71]
 8e4:	ldr	w4, [x3]
 8e8:	udiv	w6, w10, w2
 8ec:	udiv	w5, w9, w2
 8f0:	msub	w7, w7, w2, w11
 8f4:	udiv	w0, w8, w2
 8f8:	msub	w6, w6, w2, w10
 8fc:	msub	w5, w5, w2, w9
 900:	ldrb	w7, [x1, w7, uxtw]
 904:	strb	w7, [sp, #70]
 908:	ldrb	w6, [x1, w6, uxtw]
 90c:	msub	w0, w0, w2, w8
 910:	strb	w6, [sp, #69]
 914:	ldrb	w5, [x1, w5, uxtw]
 918:	strb	w5, [sp, #68]
 91c:	ldr	w5, [sp, #68]
 920:	eor	w4, w4, w5
 924:	str	w4, [x3], #4
 928:	cmp	x3, x24
 92c:	b.ne	8c8 <bf_setkey+0x110>  // b.any
 930:	stp	wzr, wzr, [sp, #72]
 934:	nop
 938:	add	x1, sp, #0x48
 93c:	mov	x0, x18
 940:	add	x2, sp, #0x4c
 944:	bl	0 <do_encrypt>
 948:	ldp	w1, w0, [sp, #72]
 94c:	stp	w1, w0, [x19]
 950:	add	x19, x19, #0x8
 954:	cmp	x19, x24
 958:	b.ne	938 <bf_setkey+0x180>  // b.any
 95c:	mov	x19, x18
 960:	add	x1, sp, #0x48
 964:	mov	x0, x18
 968:	add	x2, sp, #0x4c
 96c:	bl	0 <do_encrypt>
 970:	ldp	w1, w0, [sp, #72]
 974:	stp	w1, w0, [x19]
 978:	add	x19, x19, #0x8
 97c:	cmp	x19, x20
 980:	b.ne	960 <bf_setkey+0x1a8>  // b.any
 984:	mov	x19, x20
 988:	add	x1, sp, #0x48
 98c:	mov	x0, x18
 990:	add	x2, sp, #0x4c
 994:	bl	0 <do_encrypt>
 998:	ldp	w1, w0, [sp, #72]
 99c:	stp	w1, w0, [x19]
 9a0:	add	x19, x19, #0x8
 9a4:	cmp	x19, x23
 9a8:	b.ne	988 <bf_setkey+0x1d0>  // b.any
 9ac:	nop
 9b0:	add	x1, sp, #0x48
 9b4:	mov	x0, x18
 9b8:	add	x2, sp, #0x4c
 9bc:	bl	0 <do_encrypt>
 9c0:	ldp	w1, w0, [sp, #72]
 9c4:	stp	w1, w0, [x19]
 9c8:	add	x19, x19, #0x8
 9cc:	cmp	x19, x22
 9d0:	b.ne	9b0 <bf_setkey+0x1f8>  // b.any
 9d4:	nop
 9d8:	add	x1, sp, #0x48
 9dc:	mov	x0, x18
 9e0:	add	x2, sp, #0x4c
 9e4:	bl	0 <do_encrypt>
 9e8:	ldp	w1, w0, [sp, #72]
 9ec:	stp	w1, w0, [x19]
 9f0:	add	x19, x19, #0x8
 9f4:	cmp	x19, x21
 9f8:	b.ne	9d8 <bf_setkey+0x220>  // b.any
 9fc:	add	x18, x18, #0x4
 a00:	mov	x4, #0x0                   	// #0
 a04:	ldur	w3, [x18, #-4]
 a08:	mov	x0, x18
 a0c:	nop
 a10:	ldr	w1, [x0]
 a14:	cmp	w3, w1
 a18:	b.eq	ad0 <bf_setkey+0x318>  // b.none
 a1c:	ldr	w1, [x0, #1024]
 a20:	ldr	w2, [x18, #1020]
 a24:	cmp	w2, w1
 a28:	b.eq	ad0 <bf_setkey+0x318>  // b.none
 a2c:	ldr	w1, [x0, #2048]
 a30:	ldr	w2, [x18, #2044]
 a34:	cmp	w2, w1
 a38:	b.eq	ad0 <bf_setkey+0x318>  // b.none
 a3c:	ldr	w1, [x0, #3072]
 a40:	add	x0, x0, #0x4
 a44:	ldr	w2, [x18, #3068]
 a48:	cmp	w2, w1
 a4c:	b.eq	ad0 <bf_setkey+0x318>  // b.none
 a50:	cmp	x20, x0
 a54:	b.ne	a10 <bf_setkey+0x258>  // b.any
 a58:	add	x4, x4, #0x1
 a5c:	add	x18, x18, #0x4
 a60:	cmp	x4, #0xff
 a64:	b.ne	a04 <bf_setkey+0x24c>  // b.any
 a68:	ldp	x21, x22, [sp, #32]
 a6c:	mov	w19, #0x0                   	// #0
 a70:	ldp	x23, x24, [sp, #48]
 a74:	mov	w0, #0x40                  	// #64
 a78:	bl	0 <_gcry_burn_stack>
 a7c:	mov	w0, w19
 a80:	ldp	x19, x20, [sp, #16]
 a84:	ldp	x29, x30, [sp], #80
 a88:	ret
 a8c:	ldr	x0, [x3, #8]
 a90:	mov	w19, #0x1c                  	// #28
 a94:	cbnz	x0, a74 <bf_setkey+0x2bc>
 a98:	stp	x21, x22, [sp, #32]
 a9c:	tst	x18, #0x7
 aa0:	add	x21, x18, #0x1, lsl #12
 aa4:	stp	x23, x24, [sp, #48]
 aa8:	adrp	x0, 0 <do_encrypt>
 aac:	b.eq	7fc <bf_setkey+0x44>  // b.none
 ab0:	ldr	x0, [x0]
 ab4:	mov	x3, #0x0                   	// #0
 ab8:	ldr	w4, [x0, x3]
 abc:	str	w4, [x21, x3]
 ac0:	add	x3, x3, #0x4
 ac4:	cmp	x3, #0x48
 ac8:	b.ne	ab8 <bf_setkey+0x300>  // b.any
 acc:	b	848 <bf_setkey+0x90>
 ad0:	mov	w19, #0x1f                  	// #31
 ad4:	mov	w0, #0x40                  	// #64
 ad8:	ldp	x21, x22, [sp, #32]
 adc:	ldp	x23, x24, [sp, #48]
 ae0:	bl	0 <_gcry_burn_stack>
 ae4:	mov	w0, w19
 ae8:	ldp	x19, x20, [sp, #16]
 aec:	ldp	x29, x30, [sp], #80
 af0:	ret
 af4:	add	x11, x0, #0x48
 af8:	add	x10, x0, #0x448
 afc:	add	x9, x0, #0x848
 b00:	add	x0, x0, #0xc48
 b04:	mov	x3, #0x0                   	// #0
 b08:	ldr	w8, [x3, x11]
 b0c:	add	x4, x4, #0x4
 b10:	ldr	w7, [x3, x10]
 b14:	ldr	w6, [x3, x9]
 b18:	ldr	w5, [x3, x0]
 b1c:	add	x3, x3, #0x4
 b20:	stur	w8, [x4, #-4]
 b24:	cmp	x3, #0x400
 b28:	str	w7, [x4, #1020]
 b2c:	str	w6, [x4, #2044]
 b30:	str	w5, [x4, #3068]
 b34:	b.ne	b08 <bf_setkey+0x350>  // b.any
 b38:	b	8b0 <bf_setkey+0xf8>
 b3c:	nop
	...

0000000000000b50 <grub_mod_init>:
 b50:	adrp	x0, 0 <do_encrypt>
 b54:	ldr	x0, [x0]
 b58:	b	0 <grub_cipher_register>
 b5c:	nop
	...

0000000000000b68 <grub_mod_fini>:
 b68:	adrp	x0, 0 <do_encrypt>
 b6c:	ldr	x0, [x0]
 b70:	b	0 <grub_cipher_unregister>
 b74:	nop
	...
