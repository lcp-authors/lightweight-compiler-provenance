
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//m4_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402500 <.init>:
  402500:	stp	x29, x30, [sp, #-16]!
  402504:	mov	x29, sp
  402508:	bl	402c60 <ferror@plt+0x60>
  40250c:	ldp	x29, x30, [sp], #16
  402510:	ret

Disassembly of section .plt:

0000000000402520 <mbrtowc@plt-0x20>:
  402520:	stp	x16, x30, [sp, #-16]!
  402524:	adrp	x16, 42a000 <_obstack_memory_used@@Base+0x1440c>
  402528:	ldr	x17, [x16, #4088]
  40252c:	add	x16, x16, #0xff8
  402530:	br	x17
  402534:	nop
  402538:	nop
  40253c:	nop

0000000000402540 <mbrtowc@plt>:
  402540:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16]
  402548:	add	x16, x16, #0x0
  40254c:	br	x17

0000000000402550 <memcpy@plt>:
  402550:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #8]
  402558:	add	x16, x16, #0x8
  40255c:	br	x17

0000000000402560 <sigaltstack@plt>:
  402560:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #16]
  402568:	add	x16, x16, #0x10
  40256c:	br	x17

0000000000402570 <_exit@plt>:
  402570:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #24]
  402578:	add	x16, x16, #0x18
  40257c:	br	x17

0000000000402580 <strlen@plt>:
  402580:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #32]
  402588:	add	x16, x16, #0x20
  40258c:	br	x17

0000000000402590 <fputs@plt>:
  402590:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #40]
  402598:	add	x16, x16, #0x28
  40259c:	br	x17

00000000004025a0 <__sprintf_chk@plt>:
  4025a0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #48]
  4025a8:	add	x16, x16, #0x30
  4025ac:	br	x17

00000000004025b0 <exit@plt>:
  4025b0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #56]
  4025b8:	add	x16, x16, #0x38
  4025bc:	br	x17

00000000004025c0 <raise@plt>:
  4025c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #64]
  4025c8:	add	x16, x16, #0x40
  4025cc:	br	x17

00000000004025d0 <error@plt>:
  4025d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #72]
  4025d8:	add	x16, x16, #0x48
  4025dc:	br	x17

00000000004025e0 <sigprocmask@plt>:
  4025e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #80]
  4025e8:	add	x16, x16, #0x50
  4025ec:	br	x17

00000000004025f0 <strtod@plt>:
  4025f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #88]
  4025f8:	add	x16, x16, #0x58
  4025fc:	br	x17

0000000000402600 <secure_getenv@plt>:
  402600:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #96]
  402608:	add	x16, x16, #0x60
  40260c:	br	x17

0000000000402610 <setbuf@plt>:
  402610:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #104]
  402618:	add	x16, x16, #0x68
  40261c:	br	x17

0000000000402620 <ferror_unlocked@plt>:
  402620:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #112]
  402628:	add	x16, x16, #0x70
  40262c:	br	x17

0000000000402630 <__cxa_finalize@plt>:
  402630:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #120]
  402638:	add	x16, x16, #0x78
  40263c:	br	x17

0000000000402640 <putc@plt>:
  402640:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #128]
  402648:	add	x16, x16, #0x80
  40264c:	br	x17

0000000000402650 <pipe@plt>:
  402650:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #136]
  402658:	add	x16, x16, #0x88
  40265c:	br	x17

0000000000402660 <__cxa_atexit@plt>:
  402660:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #144]
  402668:	add	x16, x16, #0x90
  40266c:	br	x17

0000000000402670 <fputc@plt>:
  402670:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #152]
  402678:	add	x16, x16, #0x98
  40267c:	br	x17

0000000000402680 <qsort@plt>:
  402680:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #160]
  402688:	add	x16, x16, #0xa0
  40268c:	br	x17

0000000000402690 <posix_spawn_file_actions_addopen@plt>:
  402690:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #168]
  402698:	add	x16, x16, #0xa8
  40269c:	br	x17

00000000004026a0 <kill@plt>:
  4026a0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #176]
  4026a8:	add	x16, x16, #0xb0
  4026ac:	br	x17

00000000004026b0 <lseek@plt>:
  4026b0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #184]
  4026b8:	add	x16, x16, #0xb8
  4026bc:	br	x17

00000000004026c0 <__fpending@plt>:
  4026c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #192]
  4026c8:	add	x16, x16, #0xc0
  4026cc:	br	x17

00000000004026d0 <fileno@plt>:
  4026d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #200]
  4026d8:	add	x16, x16, #0xc8
  4026dc:	br	x17

00000000004026e0 <posix_spawn_file_actions_adddup2@plt>:
  4026e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #208]
  4026e8:	add	x16, x16, #0xd0
  4026ec:	br	x17

00000000004026f0 <signal@plt>:
  4026f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #216]
  4026f8:	add	x16, x16, #0xd8
  4026fc:	br	x17

0000000000402700 <fclose@plt>:
  402700:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #224]
  402708:	add	x16, x16, #0xe0
  40270c:	br	x17

0000000000402710 <getpid@plt>:
  402710:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #232]
  402718:	add	x16, x16, #0xe8
  40271c:	br	x17

0000000000402720 <nl_langinfo@plt>:
  402720:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #240]
  402728:	add	x16, x16, #0xf0
  40272c:	br	x17

0000000000402730 <fopen@plt>:
  402730:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #248]
  402738:	add	x16, x16, #0xf8
  40273c:	br	x17

0000000000402740 <malloc@plt>:
  402740:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #256]
  402748:	add	x16, x16, #0x100
  40274c:	br	x17

0000000000402750 <open@plt>:
  402750:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #264]
  402758:	add	x16, x16, #0x108
  40275c:	br	x17

0000000000402760 <__vasprintf_chk@plt>:
  402760:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #272]
  402768:	add	x16, x16, #0x110
  40276c:	br	x17

0000000000402770 <__isoc99_fscanf@plt>:
  402770:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #280]
  402778:	add	x16, x16, #0x118
  40277c:	br	x17

0000000000402780 <sigemptyset@plt>:
  402780:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #288]
  402788:	add	x16, x16, #0x120
  40278c:	br	x17

0000000000402790 <posix_spawnattr_destroy@plt>:
  402790:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #296]
  402798:	add	x16, x16, #0x128
  40279c:	br	x17

00000000004027a0 <strncmp@plt>:
  4027a0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #304]
  4027a8:	add	x16, x16, #0x130
  4027ac:	br	x17

00000000004027b0 <__libc_start_main@plt>:
  4027b0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #312]
  4027b8:	add	x16, x16, #0x138
  4027bc:	br	x17

00000000004027c0 <strcat@plt>:
  4027c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #320]
  4027c8:	add	x16, x16, #0x140
  4027cc:	br	x17

00000000004027d0 <__printf_chk@plt>:
  4027d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #328]
  4027d8:	add	x16, x16, #0x148
  4027dc:	br	x17

00000000004027e0 <memset@plt>:
  4027e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #336]
  4027e8:	add	x16, x16, #0x150
  4027ec:	br	x17

00000000004027f0 <fdopen@plt>:
  4027f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #344]
  4027f8:	add	x16, x16, #0x158
  4027fc:	br	x17

0000000000402800 <re_set_registers@plt>:
  402800:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #352]
  402808:	add	x16, x16, #0x160
  40280c:	br	x17

0000000000402810 <__vfprintf_chk@plt>:
  402810:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #360]
  402818:	add	x16, x16, #0x168
  40281c:	br	x17

0000000000402820 <calloc@plt>:
  402820:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #368]
  402828:	add	x16, x16, #0x170
  40282c:	br	x17

0000000000402830 <bcmp@plt>:
  402830:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #376]
  402838:	add	x16, x16, #0x178
  40283c:	br	x17

0000000000402840 <__vprintf_chk@plt>:
  402840:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #384]
  402848:	add	x16, x16, #0x180
  40284c:	br	x17

0000000000402850 <posix_spawn_file_actions_destroy@plt>:
  402850:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #392]
  402858:	add	x16, x16, #0x188
  40285c:	br	x17

0000000000402860 <realloc@plt>:
  402860:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #400]
  402868:	add	x16, x16, #0x190
  40286c:	br	x17

0000000000402870 <re_search@plt>:
  402870:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #408]
  402878:	add	x16, x16, #0x198
  40287c:	br	x17

0000000000402880 <getc@plt>:
  402880:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #416]
  402888:	add	x16, x16, #0x1a0
  40288c:	br	x17

0000000000402890 <posix_spawn_file_actions_addclose@plt>:
  402890:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #424]
  402898:	add	x16, x16, #0x1a8
  40289c:	br	x17

00000000004028a0 <getc_unlocked@plt>:
  4028a0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #432]
  4028a8:	add	x16, x16, #0x1b0
  4028ac:	br	x17

00000000004028b0 <close@plt>:
  4028b0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #440]
  4028b8:	add	x16, x16, #0x1b8
  4028bc:	br	x17

00000000004028c0 <sigaction@plt>:
  4028c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #448]
  4028c8:	add	x16, x16, #0x1c0
  4028cc:	br	x17

00000000004028d0 <strrchr@plt>:
  4028d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #456]
  4028d8:	add	x16, x16, #0x1c8
  4028dc:	br	x17

00000000004028e0 <__gmon_start__@plt>:
  4028e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #464]
  4028e8:	add	x16, x16, #0x1d0
  4028ec:	br	x17

00000000004028f0 <write@plt>:
  4028f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #472]
  4028f8:	add	x16, x16, #0x1d8
  4028fc:	br	x17

0000000000402900 <mkdtemp@plt>:
  402900:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #480]
  402908:	add	x16, x16, #0x1e0
  40290c:	br	x17

0000000000402910 <posix_spawnattr_setflags@plt>:
  402910:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #488]
  402918:	add	x16, x16, #0x1e8
  40291c:	br	x17

0000000000402920 <abort@plt>:
  402920:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #496]
  402928:	add	x16, x16, #0x1f0
  40292c:	br	x17

0000000000402930 <re_compile_pattern@plt>:
  402930:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #504]
  402938:	add	x16, x16, #0x1f8
  40293c:	br	x17

0000000000402940 <mbsinit@plt>:
  402940:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #512]
  402948:	add	x16, x16, #0x200
  40294c:	br	x17

0000000000402950 <posix_spawnattr_setsigmask@plt>:
  402950:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #520]
  402958:	add	x16, x16, #0x208
  40295c:	br	x17

0000000000402960 <posix_spawn_file_actions_init@plt>:
  402960:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #528]
  402968:	add	x16, x16, #0x210
  40296c:	br	x17

0000000000402970 <getopt_long@plt>:
  402970:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #536]
  402978:	add	x16, x16, #0x218
  40297c:	br	x17

0000000000402980 <__fprintf_chk@plt>:
  402980:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #544]
  402988:	add	x16, x16, #0x220
  40298c:	br	x17

0000000000402990 <strcmp@plt>:
  402990:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #552]
  402998:	add	x16, x16, #0x228
  40299c:	br	x17

00000000004029a0 <__ctype_b_loc@plt>:
  4029a0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #560]
  4029a8:	add	x16, x16, #0x230
  4029ac:	br	x17

00000000004029b0 <rmdir@plt>:
  4029b0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #568]
  4029b8:	add	x16, x16, #0x238
  4029bc:	br	x17

00000000004029c0 <strtol@plt>:
  4029c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #576]
  4029c8:	add	x16, x16, #0x240
  4029cc:	br	x17

00000000004029d0 <fseeko@plt>:
  4029d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #584]
  4029d8:	add	x16, x16, #0x248
  4029dc:	br	x17

00000000004029e0 <fread@plt>:
  4029e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #592]
  4029e8:	add	x16, x16, #0x250
  4029ec:	br	x17

00000000004029f0 <free@plt>:
  4029f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #600]
  4029f8:	add	x16, x16, #0x258
  4029fc:	br	x17

0000000000402a00 <ungetc@plt>:
  402a00:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #608]
  402a08:	add	x16, x16, #0x260
  402a0c:	br	x17

0000000000402a10 <__ctype_get_mb_cur_max@plt>:
  402a10:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #616]
  402a18:	add	x16, x16, #0x268
  402a1c:	br	x17

0000000000402a20 <posix_spawnp@plt>:
  402a20:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #624]
  402a28:	add	x16, x16, #0x270
  402a2c:	br	x17

0000000000402a30 <__deregister_frame_info@plt>:
  402a30:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #632]
  402a38:	add	x16, x16, #0x278
  402a3c:	br	x17

0000000000402a40 <__register_frame_info@plt>:
  402a40:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #640]
  402a48:	add	x16, x16, #0x280
  402a4c:	br	x17

0000000000402a50 <strchr@plt>:
  402a50:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #648]
  402a58:	add	x16, x16, #0x288
  402a5c:	br	x17

0000000000402a60 <rename@plt>:
  402a60:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #656]
  402a68:	add	x16, x16, #0x290
  402a6c:	br	x17

0000000000402a70 <fwrite@plt>:
  402a70:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #664]
  402a78:	add	x16, x16, #0x298
  402a7c:	br	x17

0000000000402a80 <fcntl@plt>:
  402a80:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #672]
  402a88:	add	x16, x16, #0x2a0
  402a8c:	br	x17

0000000000402a90 <fflush@plt>:
  402a90:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #680]
  402a98:	add	x16, x16, #0x2a8
  402a9c:	br	x17

0000000000402aa0 <strcpy@plt>:
  402aa0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #688]
  402aa8:	add	x16, x16, #0x2b0
  402aac:	br	x17

0000000000402ab0 <posix_spawnattr_init@plt>:
  402ab0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #696]
  402ab8:	add	x16, x16, #0x2b8
  402abc:	br	x17

0000000000402ac0 <memchr@plt>:
  402ac0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #704]
  402ac8:	add	x16, x16, #0x2c0
  402acc:	br	x17

0000000000402ad0 <mkstemp@plt>:
  402ad0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #712]
  402ad8:	add	x16, x16, #0x2c8
  402adc:	br	x17

0000000000402ae0 <__mempcpy_chk@plt>:
  402ae0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #720]
  402ae8:	add	x16, x16, #0x2d0
  402aec:	br	x17

0000000000402af0 <__fxstat@plt>:
  402af0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #728]
  402af8:	add	x16, x16, #0x2d8
  402afc:	br	x17

0000000000402b00 <strstr@plt>:
  402b00:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #736]
  402b08:	add	x16, x16, #0x2e0
  402b0c:	br	x17

0000000000402b10 <fputs_unlocked@plt>:
  402b10:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #744]
  402b18:	add	x16, x16, #0x2e8
  402b1c:	br	x17

0000000000402b20 <__freading@plt>:
  402b20:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #752]
  402b28:	add	x16, x16, #0x2f0
  402b2c:	br	x17

0000000000402b30 <regfree@plt>:
  402b30:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #760]
  402b38:	add	x16, x16, #0x2f8
  402b3c:	br	x17

0000000000402b40 <strsignal@plt>:
  402b40:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #768]
  402b48:	add	x16, x16, #0x300
  402b4c:	br	x17

0000000000402b50 <sigaddset@plt>:
  402b50:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #776]
  402b58:	add	x16, x16, #0x308
  402b5c:	br	x17

0000000000402b60 <iswprint@plt>:
  402b60:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #784]
  402b68:	add	x16, x16, #0x310
  402b6c:	br	x17

0000000000402b70 <__assert_fail@plt>:
  402b70:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #792]
  402b78:	add	x16, x16, #0x318
  402b7c:	br	x17

0000000000402b80 <__errno_location@plt>:
  402b80:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #800]
  402b88:	add	x16, x16, #0x320
  402b8c:	br	x17

0000000000402b90 <getenv@plt>:
  402b90:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #808]
  402b98:	add	x16, x16, #0x328
  402b9c:	br	x17

0000000000402ba0 <putchar@plt>:
  402ba0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #816]
  402ba8:	add	x16, x16, #0x330
  402bac:	br	x17

0000000000402bb0 <__xstat@plt>:
  402bb0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #824]
  402bb8:	add	x16, x16, #0x338
  402bbc:	br	x17

0000000000402bc0 <waitpid@plt>:
  402bc0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #832]
  402bc8:	add	x16, x16, #0x340
  402bcc:	br	x17

0000000000402bd0 <unlink@plt>:
  402bd0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #840]
  402bd8:	add	x16, x16, #0x348
  402bdc:	br	x17

0000000000402be0 <error_at_line@plt>:
  402be0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #848]
  402be8:	add	x16, x16, #0x350
  402bec:	br	x17

0000000000402bf0 <setlocale@plt>:
  402bf0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #856]
  402bf8:	add	x16, x16, #0x358
  402bfc:	br	x17

0000000000402c00 <ferror@plt>:
  402c00:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #864]
  402c08:	add	x16, x16, #0x360
  402c0c:	br	x17

Disassembly of section .text:

0000000000402c10 <_obstack_begin@@Base-0x12ccc>:
  402c10:	mov	x29, #0x0                   	// #0
  402c14:	mov	x30, #0x0                   	// #0
  402c18:	mov	x5, x0
  402c1c:	ldr	x1, [sp]
  402c20:	add	x2, sp, #0x8
  402c24:	mov	x6, sp
  402c28:	movz	x0, #0x0, lsl #48
  402c2c:	movk	x0, #0x0, lsl #32
  402c30:	movk	x0, #0x40, lsl #16
  402c34:	movk	x0, #0x2e44
  402c38:	movz	x3, #0x0, lsl #48
  402c3c:	movk	x3, #0x0, lsl #32
  402c40:	movk	x3, #0x41, lsl #16
  402c44:	movk	x3, #0x6438
  402c48:	movz	x4, #0x0, lsl #48
  402c4c:	movk	x4, #0x0, lsl #32
  402c50:	movk	x4, #0x41, lsl #16
  402c54:	movk	x4, #0x64b8
  402c58:	bl	4027b0 <__libc_start_main@plt>
  402c5c:	bl	402920 <abort@plt>
  402c60:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x1440c>
  402c64:	ldr	x0, [x0, #4048]
  402c68:	cbz	x0, 402c70 <ferror@plt+0x70>
  402c6c:	b	4028e0 <__gmon_start__@plt>
  402c70:	ret
  402c74:	stp	x29, x30, [sp, #-16]!
  402c78:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  402c7c:	ldrb	w9, [x8, #1136]
  402c80:	mov	x29, sp
  402c84:	tbnz	w9, #0, 402cb0 <ferror@plt+0xb0>
  402c88:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x1440c>
  402c8c:	ldr	x10, [x10, #4064]
  402c90:	mov	w9, #0x1                   	// #1
  402c94:	strb	w9, [x8, #1136]
  402c98:	cbz	x10, 402cb0 <ferror@plt+0xb0>
  402c9c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x340c>
  402ca0:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x1540c>
  402ca4:	add	x0, x0, #0xdd0
  402ca8:	add	x1, x1, #0x478
  402cac:	bl	402a40 <__register_frame_info@plt>
  402cb0:	ldp	x29, x30, [sp], #16
  402cb4:	ret
  402cb8:	stp	x29, x30, [sp, #-16]!
  402cbc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  402cc0:	ldrb	w9, [x8, #1208]
  402cc4:	mov	x29, sp
  402cc8:	tbnz	w9, #0, 402d04 <ferror@plt+0x104>
  402ccc:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x1440c>
  402cd0:	ldr	x10, [x10, #4040]
  402cd4:	mov	w9, #0x1                   	// #1
  402cd8:	strb	w9, [x8, #1208]
  402cdc:	cbz	x10, 402cec <ferror@plt+0xec>
  402ce0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  402ce4:	ldr	x0, [x8, #880]
  402ce8:	bl	402630 <__cxa_finalize@plt>
  402cec:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x1440c>
  402cf0:	ldr	x8, [x8, #4056]
  402cf4:	cbz	x8, 402d04 <ferror@plt+0x104>
  402cf8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x340c>
  402cfc:	add	x0, x0, #0xdd0
  402d00:	bl	402a30 <__deregister_frame_info@plt>
  402d04:	ldp	x29, x30, [sp], #16
  402d08:	ret
  402d0c:	sub	sp, sp, #0x100
  402d10:	stp	x29, x30, [sp, #240]
  402d14:	add	x29, sp, #0xf0
  402d18:	mov	x9, #0xffffffffffffffd8    	// #-40
  402d1c:	mov	x10, sp
  402d20:	sub	x11, x29, #0x68
  402d24:	adrp	x13, 436000 <__progname@@GLIBC_2.17+0xab98>
  402d28:	stp	x3, x4, [x29, #-104]
  402d2c:	movk	x9, #0xff80, lsl #32
  402d30:	add	x12, x29, #0x10
  402d34:	adrp	x14, 436000 <__progname@@GLIBC_2.17+0xab98>
  402d38:	add	x10, x10, #0x80
  402d3c:	add	x11, x11, #0x28
  402d40:	ldr	w3, [x13, #3520]
  402d44:	ldr	x13, [x14, #3544]
  402d48:	stp	x10, x9, [x29, #-16]
  402d4c:	stp	x12, x11, [x29, #-32]
  402d50:	stp	x5, x6, [x29, #-88]
  402d54:	stur	x7, [x29, #-72]
  402d58:	stp	q1, q2, [sp, #16]
  402d5c:	str	q0, [sp]
  402d60:	ldp	q0, q1, [x29, #-32]
  402d64:	mov	x8, x2
  402d68:	cmp	w3, #0x0
  402d6c:	csel	x2, xzr, x13, eq  // eq = none
  402d70:	sub	x5, x29, #0x40
  402d74:	mov	x4, x8
  402d78:	stp	q3, q4, [sp, #48]
  402d7c:	stp	q5, q6, [sp, #80]
  402d80:	str	q7, [sp, #112]
  402d84:	stp	q0, q1, [x29, #-64]
  402d88:	bl	4145e4 <ferror@plt+0x119e4>
  402d8c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  402d90:	ldr	w9, [x8, #3512]
  402d94:	cbnz	w9, 402dac <ferror@plt+0x1ac>
  402d98:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  402d9c:	ldrb	w9, [x9, #1244]
  402da0:	cbz	w9, 402dac <ferror@plt+0x1ac>
  402da4:	mov	w9, #0x1                   	// #1
  402da8:	str	w9, [x8, #3512]
  402dac:	ldp	x29, x30, [sp, #240]
  402db0:	add	sp, sp, #0x100
  402db4:	ret
  402db8:	sub	sp, sp, #0xf0
  402dbc:	stp	x29, x30, [sp, #224]
  402dc0:	add	x29, sp, #0xe0
  402dc4:	mov	x8, #0xffffffffffffffe8    	// #-24
  402dc8:	mov	x9, sp
  402dcc:	sub	x10, x29, #0x58
  402dd0:	movk	x8, #0xff80, lsl #32
  402dd4:	add	x11, x29, #0x10
  402dd8:	add	x9, x9, #0x80
  402ddc:	add	x10, x10, #0x18
  402de0:	stp	x9, x8, [x29, #-16]
  402de4:	stp	x11, x10, [x29, #-32]
  402de8:	stp	x5, x6, [x29, #-88]
  402dec:	stur	x7, [x29, #-72]
  402df0:	stp	q0, q1, [sp]
  402df4:	ldp	q0, q1, [x29, #-32]
  402df8:	cmp	w3, #0x0
  402dfc:	csel	x2, xzr, x2, eq  // eq = none
  402e00:	sub	x5, x29, #0x40
  402e04:	stp	q2, q3, [sp, #32]
  402e08:	stp	q4, q5, [sp, #64]
  402e0c:	stp	q6, q7, [sp, #96]
  402e10:	stp	q0, q1, [x29, #-64]
  402e14:	bl	4145e4 <ferror@plt+0x119e4>
  402e18:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  402e1c:	ldr	w9, [x8, #3512]
  402e20:	cbnz	w9, 402e38 <ferror@plt+0x238>
  402e24:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  402e28:	ldrb	w9, [x9, #1244]
  402e2c:	cbz	w9, 402e38 <ferror@plt+0x238>
  402e30:	mov	w9, #0x1                   	// #1
  402e34:	str	w9, [x8, #3512]
  402e38:	ldp	x29, x30, [sp, #224]
  402e3c:	add	sp, sp, #0xf0
  402e40:	ret
  402e44:	sub	sp, sp, #0x120
  402e48:	stp	x29, x30, [sp, #192]
  402e4c:	stp	x28, x27, [sp, #208]
  402e50:	stp	x26, x25, [sp, #224]
  402e54:	stp	x24, x23, [sp, #240]
  402e58:	stp	x22, x21, [sp, #256]
  402e5c:	stp	x20, x19, [sp, #272]
  402e60:	ldr	x8, [x1]
  402e64:	mov	w20, w0
  402e68:	add	x29, sp, #0xc0
  402e6c:	mov	x19, x1
  402e70:	mov	x0, x8
  402e74:	bl	4127bc <ferror@plt+0xfbbc>
  402e78:	adrp	x0, 410000 <ferror@plt+0xd400>
  402e7c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  402e80:	add	x0, x0, #0x998
  402e84:	str	wzr, [x8, #3512]
  402e88:	bl	4164c0 <_obstack_memory_used@@Base+0x8cc>
  402e8c:	bl	40ea20 <ferror@plt+0xbe20>
  402e90:	bl	407c08 <ferror@plt+0x5008>
  402e94:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x40c>
  402e98:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x40c>
  402e9c:	add	x0, x0, #0x898
  402ea0:	add	x1, x1, #0x8d0
  402ea4:	bl	41547c <ferror@plt+0x1287c>
  402ea8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  402eac:	str	x0, [x8, #1248]
  402eb0:	mov	w0, #0xb                   	// #11
  402eb4:	bl	402b40 <strsignal@plt>
  402eb8:	bl	415068 <ferror@plt+0x12468>
  402ebc:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  402ec0:	add	x21, x21, #0x508
  402ec4:	str	x0, [x21, #56]
  402ec8:	mov	w0, #0x6                   	// #6
  402ecc:	bl	402b40 <strsignal@plt>
  402ed0:	bl	415068 <ferror@plt+0x12468>
  402ed4:	str	x0, [x21, #16]
  402ed8:	mov	w0, #0x4                   	// #4
  402edc:	bl	402b40 <strsignal@plt>
  402ee0:	bl	415068 <ferror@plt+0x12468>
  402ee4:	str	x0, [x21]
  402ee8:	mov	w0, #0x8                   	// #8
  402eec:	bl	402b40 <strsignal@plt>
  402ef0:	bl	415068 <ferror@plt+0x12468>
  402ef4:	str	x0, [x21, #32]
  402ef8:	mov	w0, #0x7                   	// #7
  402efc:	bl	402b40 <strsignal@plt>
  402f00:	bl	415068 <ferror@plt+0x12468>
  402f04:	add	x8, sp, #0x20
  402f08:	str	x0, [x21, #24]
  402f0c:	add	x0, x8, #0x8
  402f10:	bl	402780 <sigemptyset@plt>
  402f14:	adrp	x21, 403000 <ferror@plt+0x400>
  402f18:	mov	w8, #0xc0000000            	// #-1073741824
  402f1c:	add	x21, x21, #0x4fc
  402f20:	add	x1, sp, #0x20
  402f24:	mov	w0, #0xb                   	// #11
  402f28:	mov	x2, xzr
  402f2c:	str	w8, [sp, #168]
  402f30:	str	x21, [sp, #32]
  402f34:	bl	4028c0 <sigaction@plt>
  402f38:	add	x1, sp, #0x20
  402f3c:	mov	w0, #0x6                   	// #6
  402f40:	mov	x2, xzr
  402f44:	bl	4028c0 <sigaction@plt>
  402f48:	add	x1, sp, #0x20
  402f4c:	mov	w0, #0x4                   	// #4
  402f50:	mov	x2, xzr
  402f54:	bl	4028c0 <sigaction@plt>
  402f58:	add	x1, sp, #0x20
  402f5c:	mov	w0, #0x8                   	// #8
  402f60:	mov	x2, xzr
  402f64:	bl	4028c0 <sigaction@plt>
  402f68:	add	x1, sp, #0x20
  402f6c:	mov	w0, #0x7                   	// #7
  402f70:	mov	x2, xzr
  402f74:	bl	4028c0 <sigaction@plt>
  402f78:	mov	x0, x21
  402f7c:	bl	40fa3c <ferror@plt+0xce3c>
  402f80:	cbnz	w0, 402f8c <ferror@plt+0x38c>
  402f84:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  402f88:	str	wzr, [x8, #896]
  402f8c:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x140c>
  402f90:	adrp	x26, 416000 <_obstack_memory_used@@Base+0x40c>
  402f94:	adrp	x27, 416000 <_obstack_memory_used@@Base+0x40c>
  402f98:	adrp	x25, 416000 <_obstack_memory_used@@Base+0x40c>
  402f9c:	mov	w9, wzr
  402fa0:	mov	x0, xzr
  402fa4:	mov	x10, xzr
  402fa8:	add	x8, x8, #0xe97
  402fac:	add	x26, x26, #0x8df
  402fb0:	add	x27, x27, #0x578
  402fb4:	add	x25, x25, #0x508
  402fb8:	adrp	x28, 42b000 <_obstack_memory_used@@Base+0x1540c>
  402fbc:	stp	xzr, xzr, [sp, #16]
  402fc0:	stp	xzr, x8, [sp]
  402fc4:	mov	x23, x0
  402fc8:	mov	w0, w20
  402fcc:	mov	x1, x19
  402fd0:	mov	x2, x26
  402fd4:	mov	x3, x27
  402fd8:	mov	x4, xzr
  402fdc:	mov	x22, x10
  402fe0:	mov	w24, w9
  402fe4:	bl	402970 <getopt_long@plt>
  402fe8:	mov	w21, w0
  402fec:	cmp	w0, #0xff
  402ff0:	b.gt	403054 <ferror@plt+0x454>
  402ff4:	sub	w8, w21, #0x42
  402ff8:	cmp	w8, #0x32
  402ffc:	b.hi	4030c4 <ferror@plt+0x4c4>  // b.pmore
  403000:	adr	x11, 402fc4 <ferror@plt+0x3c4>
  403004:	ldrh	w9, [x25, x8, lsl #1]
  403008:	add	x11, x11, x9, lsl #2
  40300c:	mov	w9, #0x1                   	// #1
  403010:	mov	x0, x23
  403014:	mov	x10, x22
  403018:	br	x11
  40301c:	mov	w0, #0x18                  	// #24
  403020:	bl	414de0 <ferror@plt+0x121e0>
  403024:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403028:	ldr	x8, [x8, #1088]
  40302c:	mov	w9, w24
  403030:	mov	x10, x0
  403034:	str	w21, [x0, #8]
  403038:	str	x8, [x0, #16]
  40303c:	str	xzr, [x0]
  403040:	cbz	x22, 402fc4 <ferror@plt+0x3c4>
  403044:	str	x0, [x23]
  403048:	mov	w9, w24
  40304c:	mov	x10, x22
  403050:	b	402fc4 <ferror@plt+0x3c4>
  403054:	sub	w8, w21, #0x100
  403058:	cmp	w8, #0x4
  40305c:	b.hi	4034f4 <ferror@plt+0x8f4>  // b.pmore
  403060:	adrp	x11, 416000 <_obstack_memory_used@@Base+0x40c>
  403064:	add	x11, x11, #0x56e
  403068:	adr	x9, 40301c <ferror@plt+0x41c>
  40306c:	ldrh	w10, [x11, x8, lsl #1]
  403070:	add	x9, x9, x10, lsl #2
  403074:	br	x9
  403078:	adrp	x8, 416000 <_obstack_memory_used@@Base+0x40c>
  40307c:	adrp	x9, 416000 <_obstack_memory_used@@Base+0x40c>
  403080:	cmp	w21, #0x4e
  403084:	add	x8, x8, #0x95f
  403088:	add	x9, x9, #0x95c
  40308c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x40c>
  403090:	csel	x3, x9, x8, eq  // eq = none
  403094:	mov	w0, wzr
  403098:	mov	w1, wzr
  40309c:	add	x2, x2, #0x93d
  4030a0:	bl	4025d0 <error@plt>
  4030a4:	b	403260 <ferror@plt+0x660>
  4030a8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x40c>
  4030ac:	mov	w0, wzr
  4030b0:	mov	w1, wzr
  4030b4:	add	x2, x2, #0x908
  4030b8:	mov	w3, w21
  4030bc:	bl	4025d0 <error@plt>
  4030c0:	b	403260 <ferror@plt+0x660>
  4030c4:	cmn	w21, #0x1
  4030c8:	b.eq	403270 <ferror@plt+0x670>  // b.none
  4030cc:	cmp	w21, #0x1
  4030d0:	b.eq	40301c <ferror@plt+0x41c>  // b.none
  4030d4:	b	4034f4 <ferror@plt+0x8f4>
  4030d8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4030dc:	ldr	x8, [x8, #1088]
  4030e0:	str	x8, [sp, #8]
  4030e4:	b	403260 <ferror@plt+0x660>
  4030e8:	mov	w8, #0x1                   	// #1
  4030ec:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4030f0:	str	w8, [x9, #1236]
  4030f4:	b	403260 <ferror@plt+0x660>
  4030f8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4030fc:	ldr	x0, [x8, #1088]
  403100:	bl	407d80 <ferror@plt+0x5180>
  403104:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403108:	mov	w8, w0
  40310c:	str	w0, [x9, #1220]
  403110:	mov	w9, w24
  403114:	mov	x0, x23
  403118:	mov	x10, x22
  40311c:	tbz	w8, #31, 402fc4 <ferror@plt+0x3c4>
  403120:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403124:	ldr	x3, [x8, #1088]
  403128:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  40312c:	mov	w0, wzr
  403130:	mov	w1, wzr
  403134:	add	x2, x2, #0xd00
  403138:	bl	4025d0 <error@plt>
  40313c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403140:	str	wzr, [x8, #1220]
  403144:	b	403260 <ferror@plt+0x660>
  403148:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40314c:	ldr	x8, [x8, #1088]
  403150:	str	x8, [sp]
  403154:	b	403260 <ferror@plt+0x660>
  403158:	mov	w8, #0x1                   	// #1
  40315c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403160:	str	w8, [x9, #1224]
  403164:	b	403260 <ferror@plt+0x660>
  403168:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40316c:	ldr	x0, [x8, #1088]
  403170:	bl	40ead8 <ferror@plt+0xbed8>
  403174:	b	403260 <ferror@plt+0x660>
  403178:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x40c>
  40317c:	mov	w0, wzr
  403180:	mov	w1, wzr
  403184:	add	x2, x2, #0x96c
  403188:	bl	4025d0 <error@plt>
  40318c:	mov	w9, #0x1                   	// #1
  403190:	b	403264 <ferror@plt+0x664>
  403194:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403198:	ldr	x0, [x8, #1088]
  40319c:	mov	w2, #0xa                   	// #10
  4031a0:	mov	x1, xzr
  4031a4:	bl	4029c0 <strtol@plt>
  4031a8:	bic	w8, w0, w0, asr #31
  4031ac:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4031b0:	str	w8, [x9, #1232]
  4031b4:	b	403260 <ferror@plt+0x660>
  4031b8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4031bc:	ldr	x8, [x8, #1088]
  4031c0:	str	x8, [sp, #24]
  4031c4:	b	403260 <ferror@plt+0x660>
  4031c8:	mov	w8, #0x1                   	// #1
  4031cc:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4031d0:	str	w8, [x9, #1228]
  4031d4:	b	403260 <ferror@plt+0x660>
  4031d8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4031dc:	ldr	x8, [x8, #1088]
  4031e0:	str	x8, [sp, #16]
  4031e4:	b	403260 <ferror@plt+0x660>
  4031e8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4031ec:	str	wzr, [x8, #1224]
  4031f0:	b	403260 <ferror@plt+0x660>
  4031f4:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4031f8:	ldrb	w8, [x9, #1244]
  4031fc:	tbz	w8, #0, 403258 <ferror@plt+0x658>
  403200:	mov	w8, #0x1                   	// #1
  403204:	str	w8, [x28, #1240]
  403208:	b	403260 <ferror@plt+0x660>
  40320c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403210:	ldr	x0, [x8, #1088]
  403214:	mov	w2, #0xa                   	// #10
  403218:	mov	x1, xzr
  40321c:	bl	4029c0 <strtol@plt>
  403220:	cmp	x0, #0x0
  403224:	mov	w8, #0x1fd                 	// #509
  403228:	csel	x8, x8, x0, eq  // eq = none
  40322c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403230:	str	x8, [x9, #888]
  403234:	b	403260 <ferror@plt+0x660>
  403238:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40323c:	ldr	x0, [x8, #1088]
  403240:	mov	w2, #0xa                   	// #10
  403244:	mov	x1, xzr
  403248:	bl	4029c0 <strtol@plt>
  40324c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403250:	str	w0, [x8, #896]
  403254:	b	403260 <ferror@plt+0x660>
  403258:	mov	w8, #0x1                   	// #1
  40325c:	strb	w8, [x9, #1244]
  403260:	mov	w9, w24
  403264:	mov	x0, x23
  403268:	mov	x10, x22
  40326c:	b	402fc4 <ferror@plt+0x3c4>
  403270:	ldr	x23, [sp, #24]
  403274:	cbz	x23, 4032a4 <ferror@plt+0x6a4>
  403278:	mov	x0, x23
  40327c:	bl	407f58 <ferror@plt+0x5358>
  403280:	tbnz	w0, #0, 4032a4 <ferror@plt+0x6a4>
  403284:	ldr	w21, [x28, #1240]
  403288:	bl	402b80 <__errno_location@plt>
  40328c:	ldr	w1, [x0]
  403290:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x40c>
  403294:	add	x2, x2, #0x9b5
  403298:	mov	w0, w21
  40329c:	mov	x3, x23
  4032a0:	bl	402d0c <ferror@plt+0x10c>
  4032a4:	bl	40b554 <ferror@plt+0x8954>
  4032a8:	bl	40ce8c <ferror@plt+0xa28c>
  4032ac:	bl	40ed68 <ferror@plt+0xc168>
  4032b0:	ldr	x0, [sp, #8]
  4032b4:	bl	4038a4 <ferror@plt+0xca4>
  4032b8:	bl	40ea3c <ferror@plt+0xbe3c>
  4032bc:	ldr	x0, [sp, #16]
  4032c0:	cbz	x0, 403428 <ferror@plt+0x828>
  4032c4:	bl	40a31c <ferror@plt+0x771c>
  4032c8:	tbz	w24, #0, 4032e8 <ferror@plt+0x6e8>
  4032cc:	mov	w0, #0x2                   	// #2
  4032d0:	mov	w1, #0x1                   	// #1
  4032d4:	bl	4026f0 <signal@plt>
  4032d8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4032dc:	ldr	x0, [x8, #1104]
  4032e0:	mov	x1, xzr
  4032e4:	bl	402610 <setbuf@plt>
  4032e8:	mov	w25, wzr
  4032ec:	cbz	x22, 403404 <ferror@plt+0x804>
  4032f0:	adrp	x8, 416000 <_obstack_memory_used@@Base+0x40c>
  4032f4:	add	x8, x8, #0x9d0
  4032f8:	cmp	x23, #0x0
  4032fc:	adrp	x24, 416000 <_obstack_memory_used@@Base+0x40c>
  403300:	mov	w26, #0x1                   	// #1
  403304:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403308:	csel	x23, x23, x8, ne  // ne = any
  40330c:	add	x24, x24, #0x9b5
  403310:	ldr	w8, [x22, #8]
  403314:	cmp	w8, #0x72
  403318:	b.gt	403364 <ferror@plt+0x764>
  40331c:	cmp	w8, #0x1
  403320:	b.eq	403390 <ferror@plt+0x790>  // b.none
  403324:	cmp	w8, #0x44
  403328:	b.ne	4033a8 <ferror@plt+0x7a8>  // b.any
  40332c:	ldr	x0, [x22, #16]
  403330:	bl	415068 <ferror@plt+0x12468>
  403334:	mov	w1, #0x3d                  	// #61
  403338:	mov	x21, x0
  40333c:	bl	402a50 <strchr@plt>
  403340:	mov	x1, x0
  403344:	cbz	x0, 40334c <ferror@plt+0x74c>
  403348:	strb	wzr, [x1], #1
  40334c:	mov	w2, #0x1                   	// #1
  403350:	mov	x0, x21
  403354:	bl	40397c <ferror@plt+0xd7c>
  403358:	mov	x0, x21
  40335c:	bl	4029f0 <free@plt>
  403360:	b	4033f0 <ferror@plt+0x7f0>
  403364:	cmp	w8, #0x73
  403368:	b.eq	4033a0 <ferror@plt+0x7a0>  // b.none
  40336c:	cmp	w8, #0x74
  403370:	b.ne	4033c0 <ferror@plt+0x7c0>  // b.any
  403374:	ldr	x0, [x22, #16]
  403378:	mov	w1, #0x1                   	// #1
  40337c:	bl	40ee5c <ferror@plt+0xc25c>
  403380:	ldrb	w8, [x0, #8]
  403384:	orr	w8, w8, #0x1
  403388:	strb	w8, [x0, #8]
  40338c:	b	4033f0 <ferror@plt+0x7f0>
  403390:	ldr	x0, [x22, #16]
  403394:	bl	4036dc <ferror@plt+0xadc>
  403398:	mov	w25, #0x1                   	// #1
  40339c:	b	4033f0 <ferror@plt+0x7f0>
  4033a0:	str	w26, [x27, #1216]
  4033a4:	b	4033f0 <ferror@plt+0x7f0>
  4033a8:	cmp	w8, #0x55
  4033ac:	b.ne	40349c <ferror@plt+0x89c>  // b.any
  4033b0:	ldr	x0, [x22, #16]
  4033b4:	mov	w1, #0x2                   	// #2
  4033b8:	bl	40ee5c <ferror@plt+0xc25c>
  4033bc:	b	4033f0 <ferror@plt+0x7f0>
  4033c0:	cmp	w8, #0x100
  4033c4:	b.ne	40349c <ferror@plt+0x89c>  // b.any
  4033c8:	ldr	x0, [x22, #16]
  4033cc:	bl	407f58 <ferror@plt+0x5358>
  4033d0:	tbnz	w0, #0, 4033f0 <ferror@plt+0x7f0>
  4033d4:	ldr	w21, [x28, #1240]
  4033d8:	bl	402b80 <__errno_location@plt>
  4033dc:	ldr	w1, [x0]
  4033e0:	mov	w0, w21
  4033e4:	mov	x2, x24
  4033e8:	mov	x3, x23
  4033ec:	bl	402d0c <ferror@plt+0x10c>
  4033f0:	ldr	x21, [x22]
  4033f4:	mov	x0, x22
  4033f8:	bl	4029f0 <free@plt>
  4033fc:	mov	x22, x21
  403400:	cbnz	x21, 403310 <ferror@plt+0x710>
  403404:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403408:	ldr	w8, [x21, #1096]
  40340c:	tbnz	w25, #0, 403434 <ferror@plt+0x834>
  403410:	cmp	w8, w20
  403414:	b.ne	403434 <ferror@plt+0x834>  // b.any
  403418:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40341c:	add	x0, x0, #0xc9e
  403420:	bl	4036dc <ferror@plt+0xadc>
  403424:	b	403460 <ferror@plt+0x860>
  403428:	bl	403b14 <ferror@plt+0xf14>
  40342c:	tbnz	w24, #0, 4032cc <ferror@plt+0x6cc>
  403430:	b	4032e8 <ferror@plt+0x6e8>
  403434:	cmp	w8, w20
  403438:	b.ge	403460 <ferror@plt+0x860>  // b.tcont
  40343c:	ldr	x0, [x19, w8, sxtw #3]
  403440:	bl	4036dc <ferror@plt+0xadc>
  403444:	ldr	w8, [x21, #1096]
  403448:	add	w8, w8, #0x1
  40344c:	cmp	w8, w20
  403450:	str	w8, [x21, #1096]
  403454:	b.lt	40343c <ferror@plt+0x83c>  // b.tstop
  403458:	b	403460 <ferror@plt+0x860>
  40345c:	bl	40c6a0 <ferror@plt+0x9aa0>
  403460:	bl	40b280 <ferror@plt+0x8680>
  403464:	tbnz	w0, #0, 40345c <ferror@plt+0x85c>
  403468:	mov	x0, xzr
  40346c:	bl	407f58 <ferror@plt+0x5358>
  403470:	ldr	x0, [sp]
  403474:	cbnz	x0, 403484 <ferror@plt+0x884>
  403478:	bl	40dcc0 <ferror@plt+0xb0c0>
  40347c:	bl	40e568 <ferror@plt+0xb968>
  403480:	b	403488 <ferror@plt+0x888>
  403484:	bl	409f9c <ferror@plt+0x739c>
  403488:	bl	40cf20 <ferror@plt+0xa320>
  40348c:	bl	40393c <ferror@plt+0xd3c>
  403490:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  403494:	ldr	w0, [x8, #3512]
  403498:	bl	4025b0 <exit@plt>
  40349c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x40c>
  4034a0:	add	x2, x2, #0x9d7
  4034a4:	mov	w0, wzr
  4034a8:	mov	w1, wzr
  4034ac:	bl	402d0c <ferror@plt+0x10c>
  4034b0:	bl	402920 <abort@plt>
  4034b4:	mov	w0, wzr
  4034b8:	bl	4035cc <ferror@plt+0x9cc>
  4034bc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4034c0:	ldr	x0, [x8, #1104]
  4034c4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x40c>
  4034c8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x40c>
  4034cc:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x240c>
  4034d0:	adrp	x4, 416000 <_obstack_memory_used@@Base+0x40c>
  4034d4:	add	x1, x1, #0x99d
  4034d8:	add	x2, x2, #0x9a0
  4034dc:	add	x3, x3, #0x637
  4034e0:	add	x4, x4, #0x9a7
  4034e4:	mov	x5, xzr
  4034e8:	bl	414990 <ferror@plt+0x11d90>
  4034ec:	mov	w0, wzr
  4034f0:	bl	4025b0 <exit@plt>
  4034f4:	mov	w0, #0x1                   	// #1
  4034f8:	bl	4035cc <ferror@plt+0x9cc>
  4034fc:	cbnz	w0, 403504 <ferror@plt+0x904>
  403500:	ret
  403504:	stp	x29, x30, [sp, #-48]!
  403508:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40350c:	stp	x20, x19, [sp, #32]
  403510:	ldr	x19, [x8, #2912]
  403514:	str	x21, [sp, #16]
  403518:	mov	x21, x0
  40351c:	mov	x29, sp
  403520:	mov	x0, x19
  403524:	bl	402580 <strlen@plt>
  403528:	mov	x2, x0
  40352c:	mov	w0, #0x2                   	// #2
  403530:	mov	x1, x19
  403534:	bl	4028f0 <write@plt>
  403538:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40353c:	add	x1, x1, #0x2ed
  403540:	mov	w0, #0x2                   	// #2
  403544:	mov	w2, #0x2                   	// #2
  403548:	bl	4028f0 <write@plt>
  40354c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403550:	ldr	x19, [x8, #1248]
  403554:	ldr	x0, [x8, #1248]
  403558:	bl	402580 <strlen@plt>
  40355c:	mov	x2, x0
  403560:	mov	w0, #0x2                   	// #2
  403564:	mov	x1, x19
  403568:	bl	4028f0 <write@plt>
  40356c:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403570:	add	x20, x20, #0x4e8
  403574:	ldr	x9, [x20, w21, sxtw #3]
  403578:	cbz	x9, 4035b0 <ferror@plt+0x9b0>
  40357c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  403580:	add	x1, x1, #0x2ed
  403584:	mov	w0, #0x2                   	// #2
  403588:	mov	w2, #0x2                   	// #2
  40358c:	sxtw	x21, w21
  403590:	bl	4028f0 <write@plt>
  403594:	ldr	x19, [x20, x21, lsl #3]
  403598:	ldr	x0, [x20, x21, lsl #3]
  40359c:	bl	402580 <strlen@plt>
  4035a0:	mov	x2, x0
  4035a4:	mov	w0, #0x2                   	// #2
  4035a8:	mov	x1, x19
  4035ac:	bl	4028f0 <write@plt>
  4035b0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x340c>
  4035b4:	add	x1, x1, #0xac1
  4035b8:	mov	w0, #0x2                   	// #2
  4035bc:	mov	w2, #0x1                   	// #1
  4035c0:	bl	4028f0 <write@plt>
  4035c4:	mov	w0, #0x2                   	// #2
  4035c8:	bl	402570 <_exit@plt>
  4035cc:	stp	x29, x30, [sp, #-32]!
  4035d0:	stp	x20, x19, [sp, #16]
  4035d4:	mov	w19, w0
  4035d8:	mov	x29, sp
  4035dc:	cbnz	w0, 4036b8 <ferror@plt+0xab8>
  4035e0:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  4035e4:	ldr	x1, [x8, #2912]
  4035e8:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x40c>
  4035ec:	add	x0, x0, #0xaff
  4035f0:	bl	4150f8 <ferror@plt+0x124f8>
  4035f4:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4035f8:	ldr	x1, [x20, #1104]
  4035fc:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x40c>
  403600:	add	x0, x0, #0xb20
  403604:	bl	402590 <fputs@plt>
  403608:	ldr	x1, [x20, #1104]
  40360c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x40c>
  403610:	add	x0, x0, #0xb71
  403614:	bl	402590 <fputs@plt>
  403618:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x40c>
  40361c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x40c>
  403620:	add	x0, x0, #0xc63
  403624:	add	x1, x1, #0xe49
  403628:	bl	4150f8 <ferror@plt+0x124f8>
  40362c:	ldr	x1, [x20, #1104]
  403630:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x40c>
  403634:	add	x0, x0, #0xe64
  403638:	bl	402590 <fputs@plt>
  40363c:	mov	w0, #0xa                   	// #10
  403640:	bl	402ba0 <putchar@plt>
  403644:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403648:	ldr	w1, [x8, #896]
  40364c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x40c>
  403650:	add	x0, x0, #0xf70
  403654:	bl	4150f8 <ferror@plt+0x124f8>
  403658:	mov	w0, #0xa                   	// #10
  40365c:	bl	402ba0 <putchar@plt>
  403660:	ldr	x1, [x20, #1104]
  403664:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  403668:	add	x0, x0, #0x94
  40366c:	bl	402590 <fputs@plt>
  403670:	ldr	x1, [x20, #1104]
  403674:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  403678:	add	x0, x0, #0x136
  40367c:	bl	402590 <fputs@plt>
  403680:	ldr	x1, [x20, #1104]
  403684:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  403688:	add	x0, x0, #0x295
  40368c:	bl	402590 <fputs@plt>
  403690:	ldr	x1, [x20, #1104]
  403694:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  403698:	add	x0, x0, #0x464
  40369c:	bl	402590 <fputs@plt>
  4036a0:	ldr	x1, [x20, #1104]
  4036a4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  4036a8:	add	x0, x0, #0x4e3
  4036ac:	bl	402590 <fputs@plt>
  4036b0:	bl	4149f4 <ferror@plt+0x11df4>
  4036b4:	b	4036d4 <ferror@plt+0xad4>
  4036b8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4036bc:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  4036c0:	ldr	x0, [x8, #1080]
  4036c4:	ldr	x2, [x9, #2912]
  4036c8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x40c>
  4036cc:	add	x1, x1, #0xad8
  4036d0:	bl	4151e4 <ferror@plt+0x125e4>
  4036d4:	mov	w0, w19
  4036d8:	bl	4025b0 <exit@plt>
  4036dc:	stp	x29, x30, [sp, #-32]!
  4036e0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  4036e4:	add	x1, x1, #0xc9e
  4036e8:	str	x19, [sp, #16]
  4036ec:	mov	x29, sp
  4036f0:	mov	x19, x0
  4036f4:	bl	402990 <strcmp@plt>
  4036f8:	cbz	w0, 403724 <ferror@plt+0xb24>
  4036fc:	add	x1, x29, #0x18
  403700:	mov	x0, x19
  403704:	bl	40eb78 <ferror@plt+0xbf78>
  403708:	cbz	x0, 403744 <ferror@plt+0xb44>
  40370c:	ldr	x1, [x29, #24]
  403710:	mov	w2, #0x1                   	// #1
  403714:	bl	40abb4 <ferror@plt+0x7fb4>
  403718:	ldr	x0, [x29, #24]
  40371c:	bl	4029f0 <free@plt>
  403720:	b	40373c <ferror@plt+0xb3c>
  403724:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403728:	ldr	x0, [x8, #1112]
  40372c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  403730:	add	x1, x1, #0x569
  403734:	mov	w2, wzr
  403738:	bl	40abb4 <ferror@plt+0x7fb4>
  40373c:	bl	40c6a0 <ferror@plt+0x9aa0>
  403740:	b	40376c <ferror@plt+0xb6c>
  403744:	bl	402b80 <__errno_location@plt>
  403748:	ldr	w1, [x0]
  40374c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  403750:	add	x2, x2, #0x56f
  403754:	mov	w0, wzr
  403758:	mov	x3, x19
  40375c:	bl	4025d0 <error@plt>
  403760:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  403764:	mov	w9, #0x1                   	// #1
  403768:	str	w9, [x8, #3512]
  40376c:	ldr	x19, [sp, #16]
  403770:	ldp	x29, x30, [sp], #32
  403774:	ret
  403778:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x140c>
  40377c:	add	x8, x8, #0x580
  403780:	ldr	x9, [x8, #16]
  403784:	cmp	x9, x0
  403788:	b.eq	4037b0 <ferror@plt+0xbb0>  // b.none
  40378c:	ldr	x9, [x8, #24]!
  403790:	cbnz	x9, 403780 <ferror@plt+0xb80>
  403794:	adrp	x8, 403000 <ferror@plt+0x400>
  403798:	add	x8, x8, #0x7b8
  40379c:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x140c>
  4037a0:	add	x9, x9, #0x9b8
  4037a4:	cmp	x0, x8
  4037a8:	csel	x0, x9, xzr, eq  // eq = none
  4037ac:	ret
  4037b0:	mov	x0, x8
  4037b4:	ret
  4037b8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4037bc:	ldr	w0, [x8, #1240]
  4037c0:	cmp	w1, #0x1
  4037c4:	b.lt	4037d4 <ferror@plt+0xbd4>  // b.tstop
  4037c8:	ldr	x8, [x2]
  4037cc:	ldr	x3, [x8, #8]
  4037d0:	b	4037dc <ferror@plt+0xbdc>
  4037d4:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x140c>
  4037d8:	add	x3, x3, #0xe97
  4037dc:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  4037e0:	add	x2, x2, #0xafb
  4037e4:	mov	w1, wzr
  4037e8:	b	402d0c <ferror@plt+0x10c>
  4037ec:	stp	x29, x30, [sp, #-48]!
  4037f0:	str	x21, [sp, #16]
  4037f4:	stp	x20, x19, [sp, #32]
  4037f8:	mov	x20, x0
  4037fc:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x140c>
  403800:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  403804:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x140c>
  403808:	add	x19, x19, #0x580
  40380c:	add	x0, x0, #0xb34
  403810:	add	x21, x21, #0x9b8
  403814:	mov	x29, sp
  403818:	mov	x1, x20
  40381c:	bl	402990 <strcmp@plt>
  403820:	cbz	w0, 403830 <ferror@plt+0xc30>
  403824:	ldr	x0, [x19, #24]!
  403828:	cbnz	x0, 403818 <ferror@plt+0xc18>
  40382c:	mov	x19, x21
  403830:	mov	x0, x19
  403834:	ldp	x20, x19, [sp, #32]
  403838:	ldr	x21, [sp, #16]
  40383c:	ldp	x29, x30, [sp], #48
  403840:	ret
  403844:	stp	x29, x30, [sp, #-32]!
  403848:	str	x19, [sp, #16]
  40384c:	mov	x19, x1
  403850:	mov	w1, w2
  403854:	mov	x29, sp
  403858:	bl	40ee5c <ferror@plt+0xc25c>
  40385c:	mov	w8, #0x2                   	// #2
  403860:	str	w8, [x0, #24]
  403864:	ldrb	w8, [x19, #8]
  403868:	ldrb	w9, [x0, #8]
  40386c:	lsr	w8, w8, #1
  403870:	bfi	w9, w8, #2, #1
  403874:	strb	w9, [x0, #8]
  403878:	ldrb	w8, [x19, #8]
  40387c:	and	w9, w9, #0xfffffff7
  403880:	lsl	w8, w8, #1
  403884:	and	w8, w8, #0x8
  403888:	orr	w8, w8, w9
  40388c:	strb	w8, [x0, #8]
  403890:	ldr	x8, [x19, #16]
  403894:	ldr	x19, [sp, #16]
  403898:	str	x8, [x0, #32]
  40389c:	ldp	x29, x30, [sp], #32
  4038a0:	ret
  4038a4:	stp	x29, x30, [sp, #-32]!
  4038a8:	str	x19, [sp, #16]
  4038ac:	mov	x29, sp
  4038b0:	cbz	x0, 4038c4 <ferror@plt+0xcc4>
  4038b4:	ldrb	w8, [x0]
  4038b8:	mov	x19, x0
  4038bc:	cbnz	w8, 4038cc <ferror@plt+0xccc>
  4038c0:	b	403928 <ferror@plt+0xd28>
  4038c4:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x40c>
  4038c8:	add	x19, x19, #0xe49
  4038cc:	mov	x0, x19
  4038d0:	bl	402580 <strlen@plt>
  4038d4:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4038d8:	mov	x1, x0
  4038dc:	add	x2, x2, #0x6f8
  4038e0:	mov	x0, x19
  4038e4:	bl	402930 <re_compile_pattern@plt>
  4038e8:	cbz	x0, 403908 <ferror@plt+0xd08>
  4038ec:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  4038f0:	mov	x4, x0
  4038f4:	add	x2, x2, #0xa38
  4038f8:	mov	w0, #0x1                   	// #1
  4038fc:	mov	w1, wzr
  403900:	mov	x3, x19
  403904:	bl	402d0c <ferror@plt+0x10c>
  403908:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40390c:	add	x1, x1, #0x738
  403910:	ldr	w2, [x1]
  403914:	ldp	x3, x4, [x1, #8]
  403918:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40391c:	add	x0, x0, #0x6f8
  403920:	bl	402800 <re_set_registers@plt>
  403924:	mov	w8, #0x1                   	// #1
  403928:	ldr	x19, [sp, #16]
  40392c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403930:	strb	w8, [x9, #1776]
  403934:	ldp	x29, x30, [sp], #32
  403938:	ret
  40393c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403940:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403944:	add	x0, x0, #0x6f8
  403948:	add	x1, x1, #0x738
  40394c:	b	403950 <ferror@plt+0xd50>
  403950:	stp	x29, x30, [sp, #-32]!
  403954:	str	x19, [sp, #16]
  403958:	mov	x29, sp
  40395c:	mov	x19, x1
  403960:	bl	402b30 <regfree@plt>
  403964:	ldr	x0, [x19, #8]
  403968:	bl	4029f0 <free@plt>
  40396c:	ldr	x0, [x19, #16]
  403970:	ldr	x19, [sp, #16]
  403974:	ldp	x29, x30, [sp], #32
  403978:	b	4029f0 <free@plt>
  40397c:	stp	x29, x30, [sp, #-96]!
  403980:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x140c>
  403984:	add	x8, x8, #0xe97
  403988:	cmp	x1, #0x0
  40398c:	stp	x20, x19, [sp, #80]
  403990:	mov	x19, x0
  403994:	csel	x0, x1, x8, ne  // ne = any
  403998:	stp	x28, x27, [sp, #16]
  40399c:	stp	x26, x25, [sp, #32]
  4039a0:	stp	x24, x23, [sp, #48]
  4039a4:	stp	x22, x21, [sp, #64]
  4039a8:	mov	x29, sp
  4039ac:	mov	w22, w2
  4039b0:	mov	x21, x1
  4039b4:	bl	415068 <ferror@plt+0x12468>
  4039b8:	mov	x20, x0
  4039bc:	mov	x0, x19
  4039c0:	mov	w1, w22
  4039c4:	bl	40ee5c <ferror@plt+0xc25c>
  4039c8:	ldr	w8, [x0, #24]
  4039cc:	mov	x22, x0
  4039d0:	cmp	w8, #0x1
  4039d4:	b.ne	4039e0 <ferror@plt+0xde0>  // b.any
  4039d8:	ldr	x0, [x22, #32]
  4039dc:	bl	4029f0 <free@plt>
  4039e0:	mov	w8, #0x1                   	// #1
  4039e4:	str	w8, [x22, #24]
  4039e8:	str	x20, [x22, #32]
  4039ec:	cbz	x21, 403af8 <ferror@plt+0xef8>
  4039f0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4039f4:	ldrb	w8, [x8, #1776]
  4039f8:	cbz	w8, 403af8 <ferror@plt+0xef8>
  4039fc:	mov	x0, x20
  403a00:	bl	402580 <strlen@plt>
  403a04:	mov	x21, x0
  403a08:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403a0c:	adrp	x5, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403a10:	add	x0, x0, #0x6f8
  403a14:	add	x5, x5, #0x738
  403a18:	mov	x1, x20
  403a1c:	mov	w2, w21
  403a20:	mov	w3, wzr
  403a24:	mov	w4, w21
  403a28:	bl	402870 <re_search@plt>
  403a2c:	tbnz	w0, #31, 403abc <ferror@plt+0xebc>
  403a30:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403a34:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403a38:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403a3c:	adrp	x24, 417000 <_obstack_memory_used@@Base+0x140c>
  403a40:	add	x27, x27, #0x740
  403a44:	add	x22, x22, #0x6f8
  403a48:	add	x23, x23, #0x738
  403a4c:	add	x24, x24, #0xa6f
  403a50:	ldp	x8, x9, [x27]
  403a54:	ldr	w10, [x8]
  403a58:	ldr	w25, [x9]
  403a5c:	cmp	w10, w25
  403a60:	b.ne	403a6c <ferror@plt+0xe6c>  // b.any
  403a64:	add	w25, w0, #0x1
  403a68:	b	403a9c <ferror@plt+0xe9c>
  403a6c:	sxtw	x28, w25
  403a70:	ldrb	w26, [x20, x28]
  403a74:	strb	wzr, [x20, x28]
  403a78:	ldrsw	x8, [x8]
  403a7c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403a80:	ldr	w0, [x9, #1240]
  403a84:	mov	w1, wzr
  403a88:	add	x4, x20, x8
  403a8c:	mov	x2, x24
  403a90:	mov	x3, x19
  403a94:	bl	402d0c <ferror@plt+0x10c>
  403a98:	strb	w26, [x20, x28]
  403a9c:	sub	w4, w21, w25
  403aa0:	mov	x0, x22
  403aa4:	mov	x1, x20
  403aa8:	mov	w2, w21
  403aac:	mov	w3, w25
  403ab0:	mov	x5, x23
  403ab4:	bl	402870 <re_search@plt>
  403ab8:	tbz	w0, #31, 403a50 <ferror@plt+0xe50>
  403abc:	cmn	w0, #0x2
  403ac0:	b.ne	403af8 <ferror@plt+0xef8>  // b.any
  403ac4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403ac8:	ldr	w0, [x8, #1240]
  403acc:	mov	x3, x19
  403ad0:	ldp	x20, x19, [sp, #80]
  403ad4:	ldp	x22, x21, [sp, #64]
  403ad8:	ldp	x24, x23, [sp, #48]
  403adc:	ldp	x26, x25, [sp, #32]
  403ae0:	ldp	x28, x27, [sp, #16]
  403ae4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  403ae8:	add	x2, x2, #0xaa2
  403aec:	mov	w1, wzr
  403af0:	ldp	x29, x30, [sp], #96
  403af4:	b	402d0c <ferror@plt+0x10c>
  403af8:	ldp	x20, x19, [sp, #80]
  403afc:	ldp	x22, x21, [sp, #64]
  403b00:	ldp	x24, x23, [sp, #48]
  403b04:	ldp	x26, x25, [sp, #32]
  403b08:	ldp	x28, x27, [sp, #16]
  403b0c:	ldp	x29, x30, [sp], #96
  403b10:	ret
  403b14:	stp	x29, x30, [sp, #-64]!
  403b18:	str	x23, [sp, #16]
  403b1c:	stp	x20, x19, [sp, #48]
  403b20:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x140c>
  403b24:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  403b28:	mov	w23, #0x346d                	// #13421
  403b2c:	stp	x22, x21, [sp, #32]
  403b30:	add	x19, x19, #0x580
  403b34:	add	x0, x0, #0xb34
  403b38:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403b3c:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403b40:	movk	w23, #0x5f, lsl #16
  403b44:	mov	x29, sp
  403b48:	ldr	w8, [x21, #1224]
  403b4c:	cbz	w8, 403b58 <ferror@plt+0xf58>
  403b50:	ldrb	w8, [x19, #8]
  403b54:	tbnz	w8, #0, 403ba0 <ferror@plt+0xfa0>
  403b58:	ldr	w8, [x22, #1228]
  403b5c:	cbz	w8, 403b94 <ferror@plt+0xf94>
  403b60:	bl	402580 <strlen@plt>
  403b64:	add	x0, x0, #0x4
  403b68:	bl	414de0 <ferror@plt+0x121e0>
  403b6c:	ldr	x1, [x19]
  403b70:	mov	x20, x0
  403b74:	str	w23, [x0]
  403b78:	bl	4027c0 <strcat@plt>
  403b7c:	mov	w2, #0x1                   	// #1
  403b80:	mov	x1, x19
  403b84:	bl	403844 <ferror@plt+0xc44>
  403b88:	mov	x0, x20
  403b8c:	bl	4029f0 <free@plt>
  403b90:	b	403ba0 <ferror@plt+0xfa0>
  403b94:	mov	w2, #0x1                   	// #1
  403b98:	mov	x1, x19
  403b9c:	bl	403844 <ferror@plt+0xc44>
  403ba0:	ldr	x0, [x19, #24]!
  403ba4:	cbnz	x0, 403b48 <ferror@plt+0xf48>
  403ba8:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x140c>
  403bac:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  403bb0:	add	x19, x19, #0x9d0
  403bb4:	add	x1, x1, #0xe97
  403bb8:	ldr	w8, [x21, #1224]
  403bbc:	cbz	w8, 403be0 <ferror@plt+0xfe0>
  403bc0:	ldr	x0, [x19]
  403bc4:	cbz	x0, 403bd0 <ferror@plt+0xfd0>
  403bc8:	mov	w2, #0x1                   	// #1
  403bcc:	bl	40397c <ferror@plt+0xd7c>
  403bd0:	ldr	x1, [x19, #40]
  403bd4:	add	x19, x19, #0x18
  403bd8:	cbnz	x1, 403bb8 <ferror@plt+0xfb8>
  403bdc:	b	403bec <ferror@plt+0xfec>
  403be0:	ldr	x0, [x19, #8]
  403be4:	cbnz	x0, 403bc8 <ferror@plt+0xfc8>
  403be8:	b	403bd0 <ferror@plt+0xfd0>
  403bec:	ldp	x20, x19, [sp, #48]
  403bf0:	ldp	x22, x21, [sp, #32]
  403bf4:	ldr	x23, [sp, #16]
  403bf8:	ldp	x29, x30, [sp], #64
  403bfc:	ret
  403c00:	mov	w8, w0
  403c04:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403c08:	cmp	w8, #0x0
  403c0c:	adrp	x10, 417000 <_obstack_memory_used@@Base+0x140c>
  403c10:	add	x0, x0, #0x84e
  403c14:	cneg	w9, w8, mi  // mi = first
  403c18:	add	x10, x10, #0xad6
  403c1c:	strb	wzr, [x0, #1]
  403c20:	udiv	w11, w9, w1
  403c24:	msub	w12, w11, w1, w9
  403c28:	ldrb	w12, [x10, w12, uxtw]
  403c2c:	cmp	w9, w1
  403c30:	mov	w9, w11
  403c34:	strb	w12, [x0], #-1
  403c38:	b.cs	403c20 <ferror@plt+0x1020>  // b.hs, b.nlast
  403c3c:	tbnz	w8, #31, 403c48 <ferror@plt+0x1048>
  403c40:	add	x0, x0, #0x1
  403c44:	ret
  403c48:	mov	w8, #0x2d                  	// #45
  403c4c:	strb	w8, [x0]
  403c50:	ret
  403c54:	stp	xzr, xzr, [x0]
  403c58:	stp	xzr, xzr, [x0, #32]
  403c5c:	cbz	x1, 403c64 <ferror@plt+0x1064>
  403c60:	stp	xzr, xzr, [x1, #8]
  403c64:	ret
  403c68:	sub	sp, sp, #0x70
  403c6c:	stp	x29, x30, [sp, #16]
  403c70:	stp	x28, x27, [sp, #32]
  403c74:	stp	x26, x25, [sp, #48]
  403c78:	stp	x24, x23, [sp, #64]
  403c7c:	stp	x22, x21, [sp, #80]
  403c80:	stp	x20, x19, [sp, #96]
  403c84:	ldr	x20, [x1, #32]
  403c88:	mov	x19, x0
  403c8c:	mov	w1, #0x24                  	// #36
  403c90:	add	x29, sp, #0x10
  403c94:	mov	x0, x20
  403c98:	mov	x21, x3
  403c9c:	mov	w22, w2
  403ca0:	bl	402a50 <strchr@plt>
  403ca4:	cbz	x0, 403e48 <ferror@plt+0x1248>
  403ca8:	mov	x26, x0
  403cac:	sub	w8, w22, #0x1
  403cb0:	adrp	x28, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403cb4:	mov	w24, #0xa                   	// #10
  403cb8:	stur	w8, [x29, #-4]
  403cbc:	ldp	x0, x8, [x19, #24]
  403cc0:	sub	x25, x26, x20
  403cc4:	sub	x8, x8, x0
  403cc8:	cmp	x8, x25
  403ccc:	b.cs	403ce0 <ferror@plt+0x10e0>  // b.hs, b.nlast
  403cd0:	mov	x0, x19
  403cd4:	mov	x1, x25
  403cd8:	bl	4159e4 <_obstack_newchunk@@Base>
  403cdc:	ldr	x0, [x19, #24]
  403ce0:	mov	x1, x20
  403ce4:	mov	x2, x25
  403ce8:	bl	402550 <memcpy@plt>
  403cec:	ldr	x8, [x19, #24]
  403cf0:	mov	x20, x26
  403cf4:	add	x25, x8, x25
  403cf8:	str	x25, [x19, #24]
  403cfc:	ldrb	w27, [x20, #1]!
  403d00:	sub	w23, w27, #0x30
  403d04:	cmp	w23, #0xa
  403d08:	b.cs	403d1c <ferror@plt+0x111c>  // b.hs, b.nlast
  403d0c:	ldr	w8, [x28, #1224]
  403d10:	cbz	w8, 403d58 <ferror@plt+0x1158>
  403d14:	add	x20, x26, #0x2
  403d18:	b	403d8c <ferror@plt+0x118c>
  403d1c:	cmp	w27, #0x23
  403d20:	b.eq	403df4 <ferror@plt+0x11f4>  // b.none
  403d24:	cmp	w27, #0x2a
  403d28:	b.eq	403d34 <ferror@plt+0x1134>  // b.none
  403d2c:	cmp	w27, #0x40
  403d30:	b.ne	403e08 <ferror@plt+0x1208>  // b.any
  403d34:	cmp	w27, #0x40
  403d38:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x140c>
  403d3c:	cset	w4, eq  // eq = none
  403d40:	mov	x0, x19
  403d44:	mov	w1, w22
  403d48:	mov	x2, x21
  403d4c:	add	x3, x3, #0xb32
  403d50:	bl	403f70 <ferror@plt+0x1370>
  403d54:	b	403e00 <ferror@plt+0x1200>
  403d58:	bl	4029a0 <__ctype_b_loc@plt>
  403d5c:	ldr	x8, [x0]
  403d60:	ldrh	w9, [x8, x27, lsl #1]
  403d64:	tbnz	w9, #11, 403d70 <ferror@plt+0x1170>
  403d68:	mov	w23, wzr
  403d6c:	b	403d8c <ferror@plt+0x118c>
  403d70:	mov	w23, wzr
  403d74:	mul	w9, w23, w24
  403d78:	add	w9, w9, w27, uxtb
  403d7c:	ldrb	w27, [x20, #1]!
  403d80:	sub	w23, w9, #0x30
  403d84:	ldrh	w10, [x8, x27, lsl #1]
  403d88:	tbnz	w10, #11, 403d74 <ferror@plt+0x1174>
  403d8c:	cmp	w23, w22
  403d90:	b.ge	403e34 <ferror@plt+0x1234>  // b.tcont
  403d94:	ldr	x8, [x21, w23, sxtw #3]
  403d98:	ldr	x27, [x8, #8]
  403d9c:	mov	x0, x27
  403da0:	bl	402580 <strlen@plt>
  403da4:	ldr	x8, [x19, #32]
  403da8:	mov	x26, x0
  403dac:	sub	x8, x8, x25
  403db0:	cmp	x8, x0
  403db4:	b.cs	403dd4 <ferror@plt+0x11d4>  // b.hs, b.nlast
  403db8:	mov	x0, x19
  403dbc:	mov	x1, x26
  403dc0:	sxtw	x23, w23
  403dc4:	bl	4159e4 <_obstack_newchunk@@Base>
  403dc8:	ldr	x8, [x21, x23, lsl #3]
  403dcc:	ldr	x25, [x19, #24]
  403dd0:	ldr	x27, [x8, #8]
  403dd4:	mov	x0, x25
  403dd8:	mov	x1, x27
  403ddc:	mov	x2, x26
  403de0:	bl	402550 <memcpy@plt>
  403de4:	ldr	x8, [x19, #24]
  403de8:	add	x8, x8, x26
  403dec:	str	x8, [x19, #24]
  403df0:	b	403e34 <ferror@plt+0x1234>
  403df4:	ldur	w1, [x29, #-4]
  403df8:	mov	x0, x19
  403dfc:	bl	403eac <ferror@plt+0x12ac>
  403e00:	add	x20, x26, #0x2
  403e04:	b	403e34 <ferror@plt+0x1234>
  403e08:	ldr	x8, [x19, #32]
  403e0c:	cmp	x8, x25
  403e10:	b.ne	403e24 <ferror@plt+0x1224>  // b.any
  403e14:	mov	w1, #0x1                   	// #1
  403e18:	mov	x0, x19
  403e1c:	bl	4159e4 <_obstack_newchunk@@Base>
  403e20:	ldr	x25, [x19, #24]
  403e24:	add	x8, x25, #0x1
  403e28:	str	x8, [x19, #24]
  403e2c:	mov	w8, #0x24                  	// #36
  403e30:	strb	w8, [x25]
  403e34:	mov	w1, #0x24                  	// #36
  403e38:	mov	x0, x20
  403e3c:	bl	402a50 <strchr@plt>
  403e40:	mov	x26, x0
  403e44:	cbnz	x0, 403cbc <ferror@plt+0x10bc>
  403e48:	mov	x0, x20
  403e4c:	bl	402580 <strlen@plt>
  403e50:	mov	x21, x0
  403e54:	ldp	x0, x8, [x19, #24]
  403e58:	sub	x8, x8, x0
  403e5c:	cmp	x8, x21
  403e60:	b.cs	403e74 <ferror@plt+0x1274>  // b.hs, b.nlast
  403e64:	mov	x0, x19
  403e68:	mov	x1, x21
  403e6c:	bl	4159e4 <_obstack_newchunk@@Base>
  403e70:	ldr	x0, [x19, #24]
  403e74:	mov	x1, x20
  403e78:	mov	x2, x21
  403e7c:	bl	402550 <memcpy@plt>
  403e80:	ldr	x8, [x19, #24]
  403e84:	add	x8, x8, x21
  403e88:	str	x8, [x19, #24]
  403e8c:	ldp	x20, x19, [sp, #96]
  403e90:	ldp	x22, x21, [sp, #80]
  403e94:	ldp	x24, x23, [sp, #64]
  403e98:	ldp	x26, x25, [sp, #48]
  403e9c:	ldp	x28, x27, [sp, #32]
  403ea0:	ldp	x29, x30, [sp, #16]
  403ea4:	add	sp, sp, #0x70
  403ea8:	ret
  403eac:	stp	x29, x30, [sp, #-48]!
  403eb0:	stp	x20, x19, [sp, #32]
  403eb4:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  403eb8:	cmp	w1, #0x0
  403ebc:	mov	w8, #0xcccd                	// #52429
  403ec0:	adrp	x10, 417000 <_obstack_memory_used@@Base+0x140c>
  403ec4:	mov	x19, x0
  403ec8:	add	x20, x20, #0x84e
  403ecc:	movk	w8, #0xcccc, lsl #16
  403ed0:	mov	w9, #0xa                   	// #10
  403ed4:	cneg	w11, w1, mi  // mi = first
  403ed8:	add	x10, x10, #0xad6
  403edc:	str	x21, [sp, #16]
  403ee0:	mov	x29, sp
  403ee4:	strb	wzr, [x20, #1]
  403ee8:	umull	x12, w11, w8
  403eec:	lsr	x12, x12, #35
  403ef0:	msub	w13, w12, w9, w11
  403ef4:	ldrb	w13, [x10, w13, uxtw]
  403ef8:	cmp	w11, #0x9
  403efc:	mov	w11, w12
  403f00:	strb	w13, [x20], #-1
  403f04:	b.hi	403ee8 <ferror@plt+0x12e8>  // b.pmore
  403f08:	tbnz	w1, #31, 403f14 <ferror@plt+0x1314>
  403f0c:	add	x20, x20, #0x1
  403f10:	b	403f1c <ferror@plt+0x131c>
  403f14:	mov	w8, #0x2d                  	// #45
  403f18:	strb	w8, [x20]
  403f1c:	mov	x0, x20
  403f20:	bl	402580 <strlen@plt>
  403f24:	mov	x21, x0
  403f28:	ldp	x0, x8, [x19, #24]
  403f2c:	sub	x8, x8, x0
  403f30:	cmp	x8, x21
  403f34:	b.cs	403f48 <ferror@plt+0x1348>  // b.hs, b.nlast
  403f38:	mov	x0, x19
  403f3c:	mov	x1, x21
  403f40:	bl	4159e4 <_obstack_newchunk@@Base>
  403f44:	ldr	x0, [x19, #24]
  403f48:	mov	x1, x20
  403f4c:	mov	x2, x21
  403f50:	bl	402550 <memcpy@plt>
  403f54:	ldr	x8, [x19, #24]
  403f58:	add	x8, x8, x21
  403f5c:	str	x8, [x19, #24]
  403f60:	ldp	x20, x19, [sp, #32]
  403f64:	ldr	x21, [sp, #16]
  403f68:	ldp	x29, x30, [sp], #48
  403f6c:	ret
  403f70:	stp	x29, x30, [sp, #-96]!
  403f74:	stp	x22, x21, [sp, #64]
  403f78:	mov	x22, x0
  403f7c:	mov	x0, x3
  403f80:	stp	x28, x27, [sp, #16]
  403f84:	stp	x26, x25, [sp, #32]
  403f88:	stp	x24, x23, [sp, #48]
  403f8c:	stp	x20, x19, [sp, #80]
  403f90:	mov	x29, sp
  403f94:	mov	w19, w4
  403f98:	mov	x20, x3
  403f9c:	mov	x21, x2
  403fa0:	mov	w24, w1
  403fa4:	bl	402580 <strlen@plt>
  403fa8:	cmp	w24, #0x2
  403fac:	b.lt	4040f8 <ferror@plt+0x14f8>  // b.tstop
  403fb0:	mov	x23, x0
  403fb4:	mov	w27, w24
  403fb8:	mov	w28, #0x1                   	// #1
  403fbc:	cmp	x28, #0x2
  403fc0:	b.cc	403ffc <ferror@plt+0x13fc>  // b.lo, b.ul, b.last
  403fc4:	ldp	x0, x8, [x22, #24]
  403fc8:	sub	x8, x8, x0
  403fcc:	cmp	x8, x23
  403fd0:	b.cs	403fe4 <ferror@plt+0x13e4>  // b.hs, b.nlast
  403fd4:	mov	x0, x22
  403fd8:	mov	x1, x23
  403fdc:	bl	4159e4 <_obstack_newchunk@@Base>
  403fe0:	ldr	x0, [x22, #24]
  403fe4:	mov	x1, x20
  403fe8:	mov	x2, x23
  403fec:	bl	402550 <memcpy@plt>
  403ff0:	ldr	x8, [x22, #24]
  403ff4:	add	x8, x8, x23
  403ff8:	str	x8, [x22, #24]
  403ffc:	tbz	w19, #0, 404048 <ferror@plt+0x1448>
  404000:	ldp	x0, x8, [x22, #24]
  404004:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  404008:	ldr	x24, [x9, #3536]
  40400c:	sub	x8, x8, x0
  404010:	cmp	x8, x24
  404014:	b.cs	404028 <ferror@plt+0x1428>  // b.hs, b.nlast
  404018:	mov	x0, x22
  40401c:	mov	x1, x24
  404020:	bl	4159e4 <_obstack_newchunk@@Base>
  404024:	ldr	x0, [x22, #24]
  404028:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40402c:	ldr	x1, [x8, #3528]
  404030:	mov	x2, x24
  404034:	bl	402550 <memcpy@plt>
  404038:	ldr	x8, [x22, #24]
  40403c:	add	x24, x8, x24
  404040:	str	x24, [x22, #24]
  404044:	b	40404c <ferror@plt+0x144c>
  404048:	ldr	x24, [x22, #24]
  40404c:	ldr	x8, [x21, x28, lsl #3]
  404050:	ldr	x26, [x8, #8]
  404054:	mov	x0, x26
  404058:	bl	402580 <strlen@plt>
  40405c:	ldr	x8, [x22, #32]
  404060:	mov	x25, x0
  404064:	sub	x8, x8, x24
  404068:	cmp	x8, x0
  40406c:	b.cs	404088 <ferror@plt+0x1488>  // b.hs, b.nlast
  404070:	mov	x0, x22
  404074:	mov	x1, x25
  404078:	bl	4159e4 <_obstack_newchunk@@Base>
  40407c:	ldr	x8, [x21, x28, lsl #3]
  404080:	ldr	x24, [x22, #24]
  404084:	ldr	x26, [x8, #8]
  404088:	mov	x0, x24
  40408c:	mov	x1, x26
  404090:	mov	x2, x25
  404094:	bl	402550 <memcpy@plt>
  404098:	ldr	x8, [x22, #24]
  40409c:	add	x0, x8, x25
  4040a0:	str	x0, [x22, #24]
  4040a4:	tbz	w19, #0, 4040ec <ferror@plt+0x14ec>
  4040a8:	ldr	x8, [x22, #32]
  4040ac:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  4040b0:	ldr	x24, [x9, #3592]
  4040b4:	sub	x8, x8, x0
  4040b8:	cmp	x8, x24
  4040bc:	b.cs	4040d0 <ferror@plt+0x14d0>  // b.hs, b.nlast
  4040c0:	mov	x0, x22
  4040c4:	mov	x1, x24
  4040c8:	bl	4159e4 <_obstack_newchunk@@Base>
  4040cc:	ldr	x0, [x22, #24]
  4040d0:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  4040d4:	ldr	x1, [x8, #3584]
  4040d8:	mov	x2, x24
  4040dc:	bl	402550 <memcpy@plt>
  4040e0:	ldr	x8, [x22, #24]
  4040e4:	add	x8, x8, x24
  4040e8:	str	x8, [x22, #24]
  4040ec:	add	x28, x28, #0x1
  4040f0:	cmp	x27, x28
  4040f4:	b.ne	403fbc <ferror@plt+0x13bc>  // b.any
  4040f8:	ldp	x20, x19, [sp, #80]
  4040fc:	ldp	x22, x21, [sp, #64]
  404100:	ldp	x24, x23, [sp, #48]
  404104:	ldp	x26, x25, [sp, #32]
  404108:	ldp	x28, x27, [sp, #16]
  40410c:	ldp	x29, x30, [sp], #96
  404110:	ret
  404114:	stp	x29, x30, [sp, #-64]!
  404118:	stp	x22, x21, [sp, #32]
  40411c:	stp	x20, x19, [sp, #48]
  404120:	ldr	x8, [x2]
  404124:	mov	x19, x0
  404128:	mov	w2, #0x1                   	// #1
  40412c:	mov	w3, #0x1                   	// #1
  404130:	mov	x0, x8
  404134:	str	x23, [sp, #16]
  404138:	mov	x29, sp
  40413c:	bl	407100 <ferror@plt+0x4500>
  404140:	tbnz	w0, #0, 40421c <ferror@plt+0x161c>
  404144:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  404148:	ldp	x0, x9, [x19, #24]
  40414c:	ldr	x20, [x8, #3536]
  404150:	sub	x8, x9, x0
  404154:	cmp	x8, x20
  404158:	b.cs	40416c <ferror@plt+0x156c>  // b.hs, b.nlast
  40415c:	mov	x0, x19
  404160:	mov	x1, x20
  404164:	bl	4159e4 <_obstack_newchunk@@Base>
  404168:	ldr	x0, [x19, #24]
  40416c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  404170:	ldr	x1, [x8, #3528]
  404174:	mov	x2, x20
  404178:	bl	402550 <memcpy@plt>
  40417c:	ldr	x8, [x19, #24]
  404180:	adrp	x23, 436000 <__progname@@GLIBC_2.17+0xab98>
  404184:	add	x21, x8, x20
  404188:	str	x21, [x19, #24]
  40418c:	ldr	x22, [x23, #3544]
  404190:	mov	x0, x22
  404194:	bl	402580 <strlen@plt>
  404198:	ldr	x8, [x19, #32]
  40419c:	mov	x20, x0
  4041a0:	sub	x8, x8, x21
  4041a4:	cmp	x8, x0
  4041a8:	b.cs	4041c0 <ferror@plt+0x15c0>  // b.hs, b.nlast
  4041ac:	mov	x0, x19
  4041b0:	mov	x1, x20
  4041b4:	bl	4159e4 <_obstack_newchunk@@Base>
  4041b8:	ldr	x21, [x19, #24]
  4041bc:	ldr	x22, [x23, #3544]
  4041c0:	mov	x0, x21
  4041c4:	mov	x1, x22
  4041c8:	mov	x2, x20
  4041cc:	bl	402550 <memcpy@plt>
  4041d0:	ldp	x8, x9, [x19, #24]
  4041d4:	add	x0, x8, x20
  4041d8:	str	x0, [x19, #24]
  4041dc:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  4041e0:	ldr	x20, [x8, #3592]
  4041e4:	sub	x8, x9, x0
  4041e8:	cmp	x8, x20
  4041ec:	b.cs	404200 <ferror@plt+0x1600>  // b.hs, b.nlast
  4041f0:	mov	x0, x19
  4041f4:	mov	x1, x20
  4041f8:	bl	4159e4 <_obstack_newchunk@@Base>
  4041fc:	ldr	x0, [x19, #24]
  404200:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  404204:	ldr	x1, [x8, #3584]
  404208:	mov	x2, x20
  40420c:	bl	402550 <memcpy@plt>
  404210:	ldr	x8, [x19, #24]
  404214:	add	x8, x8, x20
  404218:	str	x8, [x19, #24]
  40421c:	ldp	x20, x19, [sp, #48]
  404220:	ldp	x22, x21, [sp, #32]
  404224:	ldr	x23, [sp, #16]
  404228:	ldp	x29, x30, [sp], #64
  40422c:	ret
  404230:	stp	x29, x30, [sp, #-32]!
  404234:	ldr	x8, [x2]
  404238:	str	x19, [sp, #16]
  40423c:	mov	x19, x0
  404240:	mov	w2, #0x1                   	// #1
  404244:	mov	w3, #0x1                   	// #1
  404248:	mov	x0, x8
  40424c:	mov	x29, sp
  404250:	bl	407100 <ferror@plt+0x4500>
  404254:	tbz	w0, #0, 404264 <ferror@plt+0x1664>
  404258:	ldr	x19, [sp, #16]
  40425c:	ldp	x29, x30, [sp], #32
  404260:	ret
  404264:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  404268:	ldr	w1, [x8, #3520]
  40426c:	mov	x0, x19
  404270:	ldr	x19, [sp, #16]
  404274:	ldp	x29, x30, [sp], #32
  404278:	b	403eac <ferror@plt+0x12ac>
  40427c:	stp	x29, x30, [sp, #-64]!
  404280:	stp	x22, x21, [sp, #32]
  404284:	stp	x20, x19, [sp, #48]
  404288:	ldr	x8, [x2]
  40428c:	mov	x19, x0
  404290:	mov	w2, #0x1                   	// #1
  404294:	mov	w3, #0x1                   	// #1
  404298:	mov	x0, x8
  40429c:	str	x23, [sp, #16]
  4042a0:	mov	x29, sp
  4042a4:	bl	407100 <ferror@plt+0x4500>
  4042a8:	tbnz	w0, #0, 404384 <ferror@plt+0x1784>
  4042ac:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  4042b0:	ldp	x0, x9, [x19, #24]
  4042b4:	ldr	x20, [x8, #3536]
  4042b8:	sub	x8, x9, x0
  4042bc:	cmp	x8, x20
  4042c0:	b.cs	4042d4 <ferror@plt+0x16d4>  // b.hs, b.nlast
  4042c4:	mov	x0, x19
  4042c8:	mov	x1, x20
  4042cc:	bl	4159e4 <_obstack_newchunk@@Base>
  4042d0:	ldr	x0, [x19, #24]
  4042d4:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  4042d8:	ldr	x1, [x8, #3528]
  4042dc:	mov	x2, x20
  4042e0:	bl	402550 <memcpy@plt>
  4042e4:	ldr	x8, [x19, #24]
  4042e8:	adrp	x23, 436000 <__progname@@GLIBC_2.17+0xab98>
  4042ec:	add	x21, x8, x20
  4042f0:	str	x21, [x19, #24]
  4042f4:	ldr	x22, [x23, #2912]
  4042f8:	mov	x0, x22
  4042fc:	bl	402580 <strlen@plt>
  404300:	ldr	x8, [x19, #32]
  404304:	mov	x20, x0
  404308:	sub	x8, x8, x21
  40430c:	cmp	x8, x0
  404310:	b.cs	404328 <ferror@plt+0x1728>  // b.hs, b.nlast
  404314:	mov	x0, x19
  404318:	mov	x1, x20
  40431c:	bl	4159e4 <_obstack_newchunk@@Base>
  404320:	ldr	x21, [x19, #24]
  404324:	ldr	x22, [x23, #2912]
  404328:	mov	x0, x21
  40432c:	mov	x1, x22
  404330:	mov	x2, x20
  404334:	bl	402550 <memcpy@plt>
  404338:	ldp	x8, x9, [x19, #24]
  40433c:	add	x0, x8, x20
  404340:	str	x0, [x19, #24]
  404344:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  404348:	ldr	x20, [x8, #3592]
  40434c:	sub	x8, x9, x0
  404350:	cmp	x8, x20
  404354:	b.cs	404368 <ferror@plt+0x1768>  // b.hs, b.nlast
  404358:	mov	x0, x19
  40435c:	mov	x1, x20
  404360:	bl	4159e4 <_obstack_newchunk@@Base>
  404364:	ldr	x0, [x19, #24]
  404368:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40436c:	ldr	x1, [x8, #3584]
  404370:	mov	x2, x20
  404374:	bl	402550 <memcpy@plt>
  404378:	ldr	x8, [x19, #24]
  40437c:	add	x8, x8, x20
  404380:	str	x8, [x19, #24]
  404384:	ldp	x20, x19, [sp, #48]
  404388:	ldp	x22, x21, [sp, #32]
  40438c:	ldr	x23, [sp, #16]
  404390:	ldp	x29, x30, [sp], #64
  404394:	ret
  404398:	stp	x29, x30, [sp, #-80]!
  40439c:	stp	x26, x25, [sp, #16]
  4043a0:	stp	x24, x23, [sp, #32]
  4043a4:	stp	x22, x21, [sp, #48]
  4043a8:	stp	x20, x19, [sp, #64]
  4043ac:	ldr	x8, [x2]
  4043b0:	subs	w19, w1, #0x1
  4043b4:	mov	x29, sp
  4043b8:	b.gt	4043e0 <ferror@plt+0x17e0>
  4043bc:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4043c0:	ldr	w9, [x9, #1236]
  4043c4:	cbz	w9, 4044d4 <ferror@plt+0x18d4>
  4043c8:	ldp	x20, x19, [sp, #64]
  4043cc:	ldp	x22, x21, [sp, #48]
  4043d0:	ldp	x24, x23, [sp, #32]
  4043d4:	ldp	x26, x25, [sp, #16]
  4043d8:	ldp	x29, x30, [sp], #80
  4043dc:	ret
  4043e0:	mov	x21, x2
  4043e4:	ldr	x9, [x21, #8]!
  4043e8:	mov	x22, x2
  4043ec:	ldr	w10, [x9]
  4043f0:	cmp	w10, #0x1
  4043f4:	b.ne	4044bc <ferror@plt+0x18bc>  // b.any
  4043f8:	ldr	x24, [x9, #8]
  4043fc:	mov	x20, x0
  404400:	adrp	x25, 417000 <_obstack_memory_used@@Base+0x140c>
  404404:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  404408:	adrp	x26, 417000 <_obstack_memory_used@@Base+0x140c>
  40440c:	mov	w23, w1
  404410:	add	x25, x25, #0x580
  404414:	add	x0, x0, #0xb34
  404418:	add	x26, x26, #0x9b8
  40441c:	mov	x1, x24
  404420:	bl	402990 <strcmp@plt>
  404424:	cbz	w0, 404434 <ferror@plt+0x1834>
  404428:	ldr	x0, [x25, #24]!
  40442c:	cbnz	x0, 40441c <ferror@plt+0x181c>
  404430:	mov	x25, x26
  404434:	ldr	x3, [x25, #16]
  404438:	adrp	x8, 403000 <ferror@plt+0x400>
  40443c:	add	x8, x8, #0x7b8
  404440:	cmp	x3, x8
  404444:	b.eq	404504 <ferror@plt+0x1904>  // b.none
  404448:	ldrb	w8, [x25, #8]
  40444c:	tbnz	w8, #1, 404498 <ferror@plt+0x1898>
  404450:	cmp	w23, #0x3
  404454:	b.lt	404498 <ferror@plt+0x1898>  // b.tstop
  404458:	mov	w10, w23
  40445c:	adrp	x11, 417000 <_obstack_memory_used@@Base+0x140c>
  404460:	add	x8, x22, #0x10
  404464:	mov	w9, #0x1                   	// #1
  404468:	sub	x10, x10, #0x2
  40446c:	add	x11, x11, #0xe97
  404470:	ldr	x12, [x8]
  404474:	ldr	w13, [x12]
  404478:	cmp	w13, #0x1
  40447c:	b.eq	404488 <ferror@plt+0x1888>  // b.none
  404480:	str	w9, [x12]
  404484:	str	x11, [x12, #8]
  404488:	subs	x10, x10, #0x1
  40448c:	add	x8, x8, #0x8
  404490:	b.ne	404470 <ferror@plt+0x1870>  // b.any
  404494:	ldr	x3, [x25, #16]
  404498:	mov	x0, x20
  40449c:	mov	w1, w19
  4044a0:	mov	x2, x21
  4044a4:	ldp	x20, x19, [sp, #64]
  4044a8:	ldp	x22, x21, [sp, #48]
  4044ac:	ldp	x24, x23, [sp, #32]
  4044b0:	ldp	x26, x25, [sp, #16]
  4044b4:	ldp	x29, x30, [sp], #80
  4044b8:	br	x3
  4044bc:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4044c0:	ldr	w0, [x9, #1240]
  4044c4:	ldr	x3, [x8, #8]
  4044c8:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  4044cc:	add	x2, x2, #0xcb6
  4044d0:	b	4044e8 <ferror@plt+0x18e8>
  4044d4:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4044d8:	ldr	w0, [x9, #1240]
  4044dc:	ldr	x3, [x8, #8]
  4044e0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  4044e4:	add	x2, x2, #0xc59
  4044e8:	mov	w1, wzr
  4044ec:	ldp	x20, x19, [sp, #64]
  4044f0:	ldp	x22, x21, [sp, #48]
  4044f4:	ldp	x24, x23, [sp, #32]
  4044f8:	ldp	x26, x25, [sp, #16]
  4044fc:	ldp	x29, x30, [sp], #80
  404500:	b	402d0c <ferror@plt+0x10c>
  404504:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404508:	ldr	w0, [x8, #1240]
  40450c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  404510:	add	x2, x2, #0xcde
  404514:	mov	w1, wzr
  404518:	mov	x3, x24
  40451c:	b	4044ec <ferror@plt+0x18ec>
  404520:	stp	x29, x30, [sp, #-32]!
  404524:	stp	x20, x19, [sp, #16]
  404528:	ldr	x0, [x2]
  40452c:	mov	x19, x2
  404530:	mov	w2, #0x1                   	// #1
  404534:	mov	w3, #0x3                   	// #3
  404538:	mov	x29, sp
  40453c:	mov	w20, w1
  404540:	bl	407100 <ferror@plt+0x4500>
  404544:	tbz	w0, #0, 404554 <ferror@plt+0x1954>
  404548:	ldp	x20, x19, [sp, #16]
  40454c:	ldp	x29, x30, [sp], #32
  404550:	ret
  404554:	cmp	w20, #0x2
  404558:	b.lt	404578 <ferror@plt+0x1978>  // b.tstop
  40455c:	ldr	x8, [x19, #8]
  404560:	cmp	w20, #0x2
  404564:	ldr	x0, [x8, #8]
  404568:	b.eq	40457c <ferror@plt+0x197c>  // b.none
  40456c:	ldr	x8, [x19, #16]
  404570:	ldr	x1, [x8, #8]
  404574:	b	404580 <ferror@plt+0x1980>
  404578:	mov	x0, xzr
  40457c:	mov	x1, xzr
  404580:	ldp	x20, x19, [sp, #16]
  404584:	ldp	x29, x30, [sp], #32
  404588:	b	40b7e8 <ferror@plt+0x8be8>
  40458c:	stp	x29, x30, [sp, #-32]!
  404590:	stp	x20, x19, [sp, #16]
  404594:	ldr	x0, [x2]
  404598:	mov	x19, x2
  40459c:	mov	w2, #0x1                   	// #1
  4045a0:	mov	w3, #0x3                   	// #3
  4045a4:	mov	x29, sp
  4045a8:	mov	w20, w1
  4045ac:	bl	407100 <ferror@plt+0x4500>
  4045b0:	tbz	w0, #0, 4045c0 <ferror@plt+0x19c0>
  4045b4:	ldp	x20, x19, [sp, #16]
  4045b8:	ldp	x29, x30, [sp], #32
  4045bc:	ret
  4045c0:	cmp	w20, #0x2
  4045c4:	b.lt	4045e4 <ferror@plt+0x19e4>  // b.tstop
  4045c8:	ldr	x8, [x19, #8]
  4045cc:	cmp	w20, #0x2
  4045d0:	ldr	x0, [x8, #8]
  4045d4:	b.eq	4045e8 <ferror@plt+0x19e8>  // b.none
  4045d8:	ldr	x8, [x19, #16]
  4045dc:	ldr	x1, [x8, #8]
  4045e0:	b	4045ec <ferror@plt+0x19ec>
  4045e4:	mov	x0, xzr
  4045e8:	mov	x1, xzr
  4045ec:	ldp	x20, x19, [sp, #16]
  4045f0:	ldp	x29, x30, [sp], #32
  4045f4:	b	40b740 <ferror@plt+0x8b40>
  4045f8:	stp	x29, x30, [sp, #-48]!
  4045fc:	stp	x20, x19, [sp, #32]
  404600:	ldr	x0, [x2]
  404604:	mov	x19, x2
  404608:	mov	w2, #0x1                   	// #1
  40460c:	mov	w3, #0x2                   	// #2
  404610:	str	x21, [sp, #16]
  404614:	mov	x29, sp
  404618:	mov	w20, w1
  40461c:	bl	407100 <ferror@plt+0x4500>
  404620:	tbnz	w0, #0, 40470c <ferror@plt+0x1b0c>
  404624:	cmp	w20, #0x1
  404628:	b.ne	404638 <ferror@plt+0x1a38>  // b.any
  40462c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404630:	str	wzr, [x8, #1220]
  404634:	b	40470c <ferror@plt+0x1b0c>
  404638:	cmp	w20, #0x2
  40463c:	b.lt	40464c <ferror@plt+0x1a4c>  // b.tstop
  404640:	ldr	x8, [x19, #8]
  404644:	ldr	x8, [x8, #8]
  404648:	b	404654 <ferror@plt+0x1a54>
  40464c:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x140c>
  404650:	add	x8, x8, #0xe97
  404654:	ldrb	w8, [x8]
  404658:	cmp	w8, #0x2b
  40465c:	b.eq	404688 <ferror@plt+0x1a88>  // b.none
  404660:	cmp	w20, #0x2
  404664:	b.lt	404674 <ferror@plt+0x1a74>  // b.tstop
  404668:	ldr	x8, [x19, #8]
  40466c:	ldr	x8, [x8, #8]
  404670:	b	40467c <ferror@plt+0x1a7c>
  404674:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x140c>
  404678:	add	x8, x8, #0xe97
  40467c:	ldrb	w8, [x8]
  404680:	cmp	w8, #0x2d
  404684:	b.ne	4046d8 <ferror@plt+0x1ad8>  // b.any
  404688:	cmp	w20, #0x2
  40468c:	b.lt	4046a0 <ferror@plt+0x1aa0>  // b.tstop
  404690:	ldr	x8, [x19, #8]
  404694:	ldr	x8, [x8, #8]
  404698:	ldrb	w21, [x8]
  40469c:	b	4046ac <ferror@plt+0x1aac>
  4046a0:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x140c>
  4046a4:	mov	w21, wzr
  4046a8:	add	x8, x8, #0xe97
  4046ac:	add	x0, x8, #0x1
  4046b0:	bl	407d80 <ferror@plt+0x5180>
  4046b4:	tbnz	w0, #31, 404730 <ferror@plt+0x1b30>
  4046b8:	cmp	w21, #0x2d
  4046bc:	b.eq	4046fc <ferror@plt+0x1afc>  // b.none
  4046c0:	cmp	w21, #0x2b
  4046c4:	b.eq	4046ec <ferror@plt+0x1aec>  // b.none
  4046c8:	cbnz	w21, 404770 <ferror@plt+0x1b70>
  4046cc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4046d0:	str	w0, [x8, #1220]
  4046d4:	b	40470c <ferror@plt+0x1b0c>
  4046d8:	cmp	w20, #0x2
  4046dc:	b.lt	40471c <ferror@plt+0x1b1c>  // b.tstop
  4046e0:	ldr	x8, [x19, #8]
  4046e4:	ldr	x0, [x8, #8]
  4046e8:	b	404724 <ferror@plt+0x1b24>
  4046ec:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4046f0:	ldr	w9, [x8, #1220]
  4046f4:	orr	w9, w9, w0
  4046f8:	b	404708 <ferror@plt+0x1b08>
  4046fc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404700:	ldr	w9, [x8, #1220]
  404704:	bic	w9, w9, w0
  404708:	str	w9, [x8, #1220]
  40470c:	ldp	x20, x19, [sp, #32]
  404710:	ldr	x21, [sp, #16]
  404714:	ldp	x29, x30, [sp], #48
  404718:	ret
  40471c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  404720:	add	x0, x0, #0xe97
  404724:	bl	407d80 <ferror@plt+0x5180>
  404728:	mov	w21, wzr
  40472c:	tbz	w0, #31, 4046b8 <ferror@plt+0x1ab8>
  404730:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404734:	ldr	w0, [x8, #1240]
  404738:	cmp	w20, #0x2
  40473c:	b.lt	40474c <ferror@plt+0x1b4c>  // b.tstop
  404740:	ldr	x8, [x19, #8]
  404744:	ldr	x3, [x8, #8]
  404748:	b	404754 <ferror@plt+0x1b54>
  40474c:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x140c>
  404750:	add	x3, x3, #0xe97
  404754:	ldp	x20, x19, [sp, #32]
  404758:	ldr	x21, [sp, #16]
  40475c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  404760:	add	x2, x2, #0xcf5
  404764:	mov	w1, wzr
  404768:	ldp	x29, x30, [sp], #48
  40476c:	b	402d0c <ferror@plt+0x10c>
  404770:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404774:	ldr	w0, [x8, #1240]
  404778:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  40477c:	add	x2, x2, #0xd16
  404780:	mov	w1, wzr
  404784:	bl	402d0c <ferror@plt+0x10c>
  404788:	bl	402920 <abort@plt>
  40478c:	stp	x29, x30, [sp, #-48]!
  404790:	stp	x20, x19, [sp, #32]
  404794:	ldr	x0, [x2]
  404798:	mov	x19, x2
  40479c:	mov	w2, #0x1                   	// #1
  4047a0:	mov	w3, #0x2                   	// #2
  4047a4:	str	x21, [sp, #16]
  4047a8:	mov	x29, sp
  4047ac:	mov	w20, w1
  4047b0:	bl	407100 <ferror@plt+0x4500>
  4047b4:	tbnz	w0, #0, 4047f8 <ferror@plt+0x1bf8>
  4047b8:	cmp	w20, #0x1
  4047bc:	b.ne	4047d4 <ferror@plt+0x1bd4>  // b.any
  4047c0:	ldp	x20, x19, [sp, #32]
  4047c4:	ldr	x21, [sp, #16]
  4047c8:	mov	x0, xzr
  4047cc:	ldp	x29, x30, [sp], #48
  4047d0:	b	407f58 <ferror@plt+0x5358>
  4047d4:	cmp	w20, #0x2
  4047d8:	b.lt	4047e8 <ferror@plt+0x1be8>  // b.tstop
  4047dc:	ldr	x8, [x19, #8]
  4047e0:	ldr	x0, [x8, #8]
  4047e4:	b	4047f0 <ferror@plt+0x1bf0>
  4047e8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  4047ec:	add	x0, x0, #0xe97
  4047f0:	bl	407f58 <ferror@plt+0x5358>
  4047f4:	tbz	w0, #0, 404808 <ferror@plt+0x1c08>
  4047f8:	ldp	x20, x19, [sp, #32]
  4047fc:	ldr	x21, [sp, #16]
  404800:	ldp	x29, x30, [sp], #48
  404804:	ret
  404808:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40480c:	ldr	w21, [x8, #1240]
  404810:	bl	402b80 <__errno_location@plt>
  404814:	ldr	w1, [x0]
  404818:	cmp	w20, #0x2
  40481c:	b.lt	40482c <ferror@plt+0x1c2c>  // b.tstop
  404820:	ldr	x8, [x19, #8]
  404824:	ldr	x3, [x8, #8]
  404828:	b	404834 <ferror@plt+0x1c34>
  40482c:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x140c>
  404830:	add	x3, x3, #0xe97
  404834:	mov	w0, w21
  404838:	ldp	x20, x19, [sp, #32]
  40483c:	ldr	x21, [sp, #16]
  404840:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x40c>
  404844:	add	x2, x2, #0x9b5
  404848:	ldp	x29, x30, [sp], #48
  40484c:	b	402d0c <ferror@plt+0x10c>
  404850:	stp	x29, x30, [sp, #-48]!
  404854:	stp	x20, x19, [sp, #32]
  404858:	ldr	x8, [x2]
  40485c:	mov	x20, x2
  404860:	mov	x19, x0
  404864:	mov	w2, #0x2                   	// #2
  404868:	mov	w3, #0x2                   	// #2
  40486c:	mov	x0, x8
  404870:	str	x21, [sp, #16]
  404874:	mov	x29, sp
  404878:	mov	w21, w1
  40487c:	bl	407100 <ferror@plt+0x4500>
  404880:	tbnz	w0, #0, 4048c0 <ferror@plt+0x1cc0>
  404884:	ldr	x0, [x20]
  404888:	cmp	w21, #0x2
  40488c:	b.lt	40489c <ferror@plt+0x1c9c>  // b.tstop
  404890:	ldr	x8, [x20, #8]
  404894:	ldr	x1, [x8, #8]
  404898:	b	4048a4 <ferror@plt+0x1ca4>
  40489c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  4048a0:	add	x1, x1, #0xe97
  4048a4:	add	x2, x29, #0x1c
  4048a8:	bl	40719c <ferror@plt+0x459c>
  4048ac:	tbz	w0, #0, 4048c0 <ferror@plt+0x1cc0>
  4048b0:	ldr	w8, [x29, #28]
  4048b4:	mov	x0, x19
  4048b8:	sub	w1, w8, #0x1
  4048bc:	bl	403eac <ferror@plt+0x12ac>
  4048c0:	ldp	x20, x19, [sp, #32]
  4048c4:	ldr	x21, [sp, #16]
  4048c8:	ldp	x29, x30, [sp], #48
  4048cc:	ret
  4048d0:	mov	x8, x2
  4048d4:	mov	w2, #0x1                   	// #1
  4048d8:	mov	w0, w1
  4048dc:	mov	x1, x8
  4048e0:	b	40727c <ferror@plt+0x467c>
  4048e4:	stp	x29, x30, [sp, #-96]!
  4048e8:	stp	x20, x19, [sp, #80]
  4048ec:	mov	x19, x2
  4048f0:	cmp	w1, #0x2
  4048f4:	stp	x28, x27, [sp, #16]
  4048f8:	stp	x26, x25, [sp, #32]
  4048fc:	stp	x24, x23, [sp, #48]
  404900:	stp	x22, x21, [sp, #64]
  404904:	mov	x29, sp
  404908:	b.ge	404950 <ferror@plt+0x1d50>  // b.tcont
  40490c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404910:	ldr	w8, [x8, #1236]
  404914:	cbnz	w8, 404ae0 <ferror@plt+0x1ee0>
  404918:	ldr	x8, [x19]
  40491c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404920:	ldr	w0, [x9, #1240]
  404924:	ldp	x20, x19, [sp, #80]
  404928:	ldr	x3, [x8, #8]
  40492c:	ldp	x22, x21, [sp, #64]
  404930:	ldp	x24, x23, [sp, #48]
  404934:	ldp	x26, x25, [sp, #32]
  404938:	ldp	x28, x27, [sp, #16]
  40493c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  404940:	add	x2, x2, #0xc59
  404944:	mov	w1, wzr
  404948:	ldp	x29, x30, [sp], #96
  40494c:	b	402d0c <ferror@plt+0x10c>
  404950:	adrp	x23, 417000 <_obstack_memory_used@@Base+0x140c>
  404954:	mov	w20, w1
  404958:	mov	x21, x0
  40495c:	mov	w28, #0x1                   	// #1
  404960:	add	x23, x23, #0xe97
  404964:	adrp	x22, 436000 <__progname@@GLIBC_2.17+0xab98>
  404968:	cmp	w28, w20
  40496c:	mov	x25, x23
  404970:	b.ge	40497c <ferror@plt+0x1d7c>  // b.tcont
  404974:	ldr	x8, [x19, w28, sxtw #3]
  404978:	ldr	x25, [x8, #8]
  40497c:	mov	x0, x25
  404980:	mov	w1, wzr
  404984:	bl	40ee5c <ferror@plt+0xc25c>
  404988:	cbz	x0, 404ad4 <ferror@plt+0x1ed4>
  40498c:	ldr	w8, [x0, #24]
  404990:	mov	x24, x0
  404994:	cbz	w8, 404ad4 <ferror@plt+0x1ed4>
  404998:	cmp	w8, #0x2
  40499c:	b.eq	404a7c <ferror@plt+0x1e7c>  // b.none
  4049a0:	cmp	w8, #0x1
  4049a4:	b.ne	404afc <ferror@plt+0x1efc>  // b.any
  4049a8:	ldp	x0, x8, [x21, #24]
  4049ac:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  4049b0:	ldr	x25, [x9, #3536]
  4049b4:	sub	x8, x8, x0
  4049b8:	cmp	x8, x25
  4049bc:	b.cs	4049d0 <ferror@plt+0x1dd0>  // b.hs, b.nlast
  4049c0:	mov	x0, x21
  4049c4:	mov	x1, x25
  4049c8:	bl	4159e4 <_obstack_newchunk@@Base>
  4049cc:	ldr	x0, [x21, #24]
  4049d0:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  4049d4:	ldr	x1, [x8, #3528]
  4049d8:	mov	x2, x25
  4049dc:	bl	402550 <memcpy@plt>
  4049e0:	ldr	x8, [x21, #24]
  4049e4:	add	x26, x8, x25
  4049e8:	str	x26, [x21, #24]
  4049ec:	ldr	x27, [x24, #32]
  4049f0:	mov	x0, x27
  4049f4:	bl	402580 <strlen@plt>
  4049f8:	ldr	x8, [x21, #32]
  4049fc:	mov	x25, x0
  404a00:	sub	x8, x8, x26
  404a04:	cmp	x8, x0
  404a08:	b.cs	404a20 <ferror@plt+0x1e20>  // b.hs, b.nlast
  404a0c:	mov	x0, x21
  404a10:	mov	x1, x25
  404a14:	bl	4159e4 <_obstack_newchunk@@Base>
  404a18:	ldr	x26, [x21, #24]
  404a1c:	ldr	x27, [x24, #32]
  404a20:	mov	x0, x26
  404a24:	mov	x1, x27
  404a28:	mov	x2, x25
  404a2c:	bl	402550 <memcpy@plt>
  404a30:	ldp	x8, x9, [x21, #24]
  404a34:	add	x0, x8, x25
  404a38:	str	x0, [x21, #24]
  404a3c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  404a40:	ldr	x24, [x8, #3592]
  404a44:	sub	x8, x9, x0
  404a48:	cmp	x8, x24
  404a4c:	b.cs	404a60 <ferror@plt+0x1e60>  // b.hs, b.nlast
  404a50:	mov	x0, x21
  404a54:	mov	x1, x24
  404a58:	bl	4159e4 <_obstack_newchunk@@Base>
  404a5c:	ldr	x0, [x21, #24]
  404a60:	ldr	x1, [x22, #3584]
  404a64:	mov	x2, x24
  404a68:	bl	402550 <memcpy@plt>
  404a6c:	ldr	x8, [x21, #24]
  404a70:	add	x8, x8, x24
  404a74:	str	x8, [x21, #24]
  404a78:	b	404ad4 <ferror@plt+0x1ed4>
  404a7c:	ldr	x0, [x24, #32]
  404a80:	adrp	x8, 403000 <ferror@plt+0x400>
  404a84:	add	x8, x8, #0x7b8
  404a88:	cmp	x0, x8
  404a8c:	b.eq	404aa0 <ferror@plt+0x1ea0>  // b.none
  404a90:	cmp	w20, #0x2
  404a94:	b.ne	404ab8 <ferror@plt+0x1eb8>  // b.any
  404a98:	bl	40adec <ferror@plt+0x81ec>
  404a9c:	b	404ad4 <ferror@plt+0x1ed4>
  404aa0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404aa4:	ldr	w0, [x8, #1240]
  404aa8:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  404aac:	mov	w1, wzr
  404ab0:	add	x2, x2, #0xafb
  404ab4:	b	404acc <ferror@plt+0x1ecc>
  404ab8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404abc:	ldr	w0, [x8, #1240]
  404ac0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  404ac4:	mov	w1, wzr
  404ac8:	add	x2, x2, #0xe27
  404acc:	mov	x3, x25
  404ad0:	bl	402d0c <ferror@plt+0x10c>
  404ad4:	add	w28, w28, #0x1
  404ad8:	cmp	w20, w28
  404adc:	b.ne	404968 <ferror@plt+0x1d68>  // b.any
  404ae0:	ldp	x20, x19, [sp, #80]
  404ae4:	ldp	x22, x21, [sp, #64]
  404ae8:	ldp	x24, x23, [sp, #48]
  404aec:	ldp	x26, x25, [sp, #32]
  404af0:	ldp	x28, x27, [sp, #16]
  404af4:	ldp	x29, x30, [sp], #96
  404af8:	ret
  404afc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404b00:	ldr	w0, [x8, #1240]
  404b04:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  404b08:	add	x2, x2, #0xe50
  404b0c:	mov	w1, wzr
  404b10:	bl	402d0c <ferror@plt+0x10c>
  404b14:	bl	402920 <abort@plt>
  404b18:	sub	sp, sp, #0x30
  404b1c:	stp	x29, x30, [sp, #16]
  404b20:	add	x29, sp, #0x10
  404b24:	stp	x20, x19, [sp, #32]
  404b28:	stur	wzr, [x29, #-4]
  404b2c:	ldr	x0, [x2]
  404b30:	mov	x19, x2
  404b34:	mov	w2, #0x1                   	// #1
  404b38:	mov	w3, #0x2                   	// #2
  404b3c:	mov	w20, w1
  404b40:	bl	407100 <ferror@plt+0x4500>
  404b44:	tbnz	w0, #0, 404b74 <ferror@plt+0x1f74>
  404b48:	cmp	w20, #0x2
  404b4c:	b.lt	404b6c <ferror@plt+0x1f6c>  // b.tstop
  404b50:	ldp	x0, x8, [x19]
  404b54:	sub	x2, x29, #0x4
  404b58:	ldr	x1, [x8, #8]
  404b5c:	bl	40719c <ferror@plt+0x459c>
  404b60:	tbz	w0, #0, 404b74 <ferror@plt+0x1f74>
  404b64:	ldur	w0, [x29, #-4]
  404b68:	b	404b70 <ferror@plt+0x1f70>
  404b6c:	mov	w0, wzr
  404b70:	bl	40dcc0 <ferror@plt+0xb0c0>
  404b74:	ldp	x20, x19, [sp, #32]
  404b78:	ldp	x29, x30, [sp, #16]
  404b7c:	add	sp, sp, #0x30
  404b80:	ret
  404b84:	stp	x29, x30, [sp, #-32]!
  404b88:	ldr	x8, [x2]
  404b8c:	str	x19, [sp, #16]
  404b90:	mov	x19, x0
  404b94:	mov	w2, #0x1                   	// #1
  404b98:	mov	w3, #0x1                   	// #1
  404b9c:	mov	x0, x8
  404ba0:	mov	x29, sp
  404ba4:	bl	407100 <ferror@plt+0x4500>
  404ba8:	tbz	w0, #0, 404bb8 <ferror@plt+0x1fb8>
  404bac:	ldr	x19, [sp, #16]
  404bb0:	ldp	x29, x30, [sp], #32
  404bb4:	ret
  404bb8:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  404bbc:	ldr	w1, [x8, #3604]
  404bc0:	mov	x0, x19
  404bc4:	ldr	x19, [sp, #16]
  404bc8:	ldp	x29, x30, [sp], #32
  404bcc:	b	403eac <ferror@plt+0x12ac>
  404bd0:	stp	x29, x30, [sp, #-16]!
  404bd4:	ldr	x0, [x2]
  404bd8:	mov	w2, #0x1                   	// #1
  404bdc:	mov	w3, #0x1                   	// #1
  404be0:	mov	x29, sp
  404be4:	bl	407100 <ferror@plt+0x4500>
  404be8:	tbz	w0, #0, 404bf4 <ferror@plt+0x1ff4>
  404bec:	ldp	x29, x30, [sp], #16
  404bf0:	ret
  404bf4:	ldp	x29, x30, [sp], #16
  404bf8:	b	40b35c <ferror@plt+0x875c>
  404bfc:	sub	sp, sp, #0x80
  404c00:	stp	x29, x30, [sp, #32]
  404c04:	stp	x28, x27, [sp, #48]
  404c08:	stp	x26, x25, [sp, #64]
  404c0c:	stp	x24, x23, [sp, #80]
  404c10:	stp	x22, x21, [sp, #96]
  404c14:	stp	x20, x19, [sp, #112]
  404c18:	ldr	x8, [x0, #16]
  404c1c:	mov	x19, x0
  404c20:	cmp	w1, #0x1
  404c24:	add	x29, sp, #0x20
  404c28:	stp	x0, x8, [sp, #8]
  404c2c:	str	wzr, [sp, #24]
  404c30:	b.ne	404c48 <ferror@plt+0x2048>  // b.any
  404c34:	adrp	x0, 407000 <ferror@plt+0x4400>
  404c38:	add	x0, x0, #0x3f8
  404c3c:	add	x1, sp, #0x8
  404c40:	bl	40f148 <ferror@plt+0xc548>
  404c44:	b	404cb4 <ferror@plt+0x20b4>
  404c48:	cmp	w1, #0x2
  404c4c:	b.lt	404cb4 <ferror@plt+0x20b4>  // b.tstop
  404c50:	mov	w8, w1
  404c54:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x140c>
  404c58:	add	x21, x2, #0x8
  404c5c:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404c60:	sub	x23, x8, #0x1
  404c64:	add	x20, x20, #0xe7e
  404c68:	ldr	x8, [x21]
  404c6c:	mov	w1, wzr
  404c70:	ldr	x0, [x8, #8]
  404c74:	bl	40ee5c <ferror@plt+0xc25c>
  404c78:	cbz	x0, 404c90 <ferror@plt+0x2090>
  404c7c:	ldr	w8, [x0, #24]
  404c80:	cbz	w8, 404c90 <ferror@plt+0x2090>
  404c84:	add	x1, sp, #0x8
  404c88:	bl	4073f8 <ferror@plt+0x47f8>
  404c8c:	b	404ca8 <ferror@plt+0x20a8>
  404c90:	ldr	x8, [x21]
  404c94:	ldr	w0, [x22, #1240]
  404c98:	mov	w1, wzr
  404c9c:	mov	x2, x20
  404ca0:	ldr	x3, [x8, #8]
  404ca4:	bl	402d0c <ferror@plt+0x10c>
  404ca8:	subs	x23, x23, #0x1
  404cac:	add	x21, x21, #0x8
  404cb0:	b.ne	404c68 <ferror@plt+0x2068>  // b.any
  404cb4:	ldp	x9, x8, [x19, #16]
  404cb8:	cmp	x8, x9
  404cbc:	b.ne	404ccc <ferror@plt+0x20cc>  // b.any
  404cc0:	ldrb	w9, [x19, #80]
  404cc4:	orr	w9, w9, #0x2
  404cc8:	strb	w9, [x19, #80]
  404ccc:	ldr	x10, [x19, #48]
  404cd0:	ldr	x11, [x19, #8]
  404cd4:	ldr	x9, [x19, #32]
  404cd8:	add	x8, x10, x8
  404cdc:	bic	x8, x8, x10
  404ce0:	sub	x10, x8, x11
  404ce4:	sub	x11, x9, x11
  404ce8:	cmp	x10, x11
  404cec:	str	x8, [x19, #24]
  404cf0:	b.ls	404cfc <ferror@plt+0x20fc>  // b.plast
  404cf4:	mov	x8, x9
  404cf8:	str	x9, [x19, #24]
  404cfc:	str	x8, [x19, #16]
  404d00:	ldr	x0, [sp, #16]
  404d04:	ldrsw	x1, [sp, #24]
  404d08:	adrp	x3, 407000 <ferror@plt+0x4400>
  404d0c:	add	x3, x3, #0x47c
  404d10:	mov	w2, #0x8                   	// #8
  404d14:	bl	402680 <qsort@plt>
  404d18:	ldr	w8, [sp, #24]
  404d1c:	cmp	w8, #0x1
  404d20:	b.lt	404e34 <ferror@plt+0x2234>  // b.tstop
  404d24:	adrp	x24, 417000 <_obstack_memory_used@@Base+0x140c>
  404d28:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x340c>
  404d2c:	adrp	x25, 417000 <_obstack_memory_used@@Base+0x140c>
  404d30:	adrp	x26, 403000 <ferror@plt+0x400>
  404d34:	adrp	x20, 419000 <_obstack_memory_used@@Base+0x340c>
  404d38:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x140c>
  404d3c:	adrp	x22, 417000 <_obstack_memory_used@@Base+0x140c>
  404d40:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404d44:	add	x24, x24, #0x580
  404d48:	add	x19, x19, #0xc61
  404d4c:	add	x25, x25, #0x9b8
  404d50:	add	x26, x26, #0x7b8
  404d54:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404d58:	add	x20, x20, #0x9e9
  404d5c:	adrp	x28, 436000 <__progname@@GLIBC_2.17+0xab98>
  404d60:	add	x21, x21, #0xe98
  404d64:	add	x22, x22, #0xe93
  404d68:	ldr	x0, [x23, #2136]
  404d6c:	cbz	x0, 404d84 <ferror@plt+0x2184>
  404d70:	ldr	x8, [sp, #16]
  404d74:	mov	x1, x22
  404d78:	ldr	x8, [x8]
  404d7c:	ldr	x2, [x8, #16]
  404d80:	bl	4151e4 <ferror@plt+0x125e4>
  404d84:	ldr	x8, [sp, #16]
  404d88:	ldr	x8, [x8]
  404d8c:	ldr	w9, [x8, #24]
  404d90:	cmp	w9, #0x2
  404d94:	b.eq	404dbc <ferror@plt+0x21bc>  // b.none
  404d98:	cmp	w9, #0x1
  404d9c:	b.ne	404e54 <ferror@plt+0x2254>  // b.any
  404da0:	ldrb	w9, [x27, #1220]
  404da4:	ldr	x0, [x23, #2136]
  404da8:	tbnz	w9, #2, 404dfc <ferror@plt+0x21fc>
  404dac:	cbz	x0, 404e18 <ferror@plt+0x2218>
  404db0:	ldr	x2, [x8, #32]
  404db4:	mov	x1, x20
  404db8:	b	404df4 <ferror@plt+0x21f4>
  404dbc:	ldr	x9, [x8, #32]
  404dc0:	mov	x8, x24
  404dc4:	ldr	x10, [x8, #16]
  404dc8:	cmp	x10, x9
  404dcc:	b.eq	404de4 <ferror@plt+0x21e4>  // b.none
  404dd0:	ldr	x10, [x8, #24]!
  404dd4:	cbnz	x10, 404dc4 <ferror@plt+0x21c4>
  404dd8:	cmp	x9, x26
  404ddc:	mov	x8, x25
  404de0:	b.ne	404e68 <ferror@plt+0x2268>  // b.any
  404de4:	ldr	x0, [x23, #2136]
  404de8:	cbz	x0, 404e18 <ferror@plt+0x2218>
  404dec:	ldr	x2, [x8]
  404df0:	mov	x1, x19
  404df4:	bl	4151e4 <ferror@plt+0x125e4>
  404df8:	b	404e18 <ferror@plt+0x2218>
  404dfc:	cbz	x0, 404e18 <ferror@plt+0x2218>
  404e00:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  404e04:	ldr	x2, [x9, #3528]
  404e08:	ldr	x3, [x8, #32]
  404e0c:	ldr	x4, [x28, #3584]
  404e10:	mov	x1, x21
  404e14:	bl	4151e4 <ferror@plt+0x125e4>
  404e18:	ldr	w8, [sp, #24]
  404e1c:	ldr	x9, [sp, #16]
  404e20:	subs	w8, w8, #0x1
  404e24:	add	x9, x9, #0x8
  404e28:	str	w8, [sp, #24]
  404e2c:	str	x9, [sp, #16]
  404e30:	b.gt	404d68 <ferror@plt+0x2168>
  404e34:	ldp	x20, x19, [sp, #112]
  404e38:	ldp	x22, x21, [sp, #96]
  404e3c:	ldp	x24, x23, [sp, #80]
  404e40:	ldp	x26, x25, [sp, #64]
  404e44:	ldp	x28, x27, [sp, #48]
  404e48:	ldp	x29, x30, [sp, #32]
  404e4c:	add	sp, sp, #0x80
  404e50:	ret
  404e54:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404e58:	ldr	w0, [x8, #1240]
  404e5c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  404e60:	add	x2, x2, #0xed3
  404e64:	b	404e78 <ferror@plt+0x2278>
  404e68:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404e6c:	ldr	w0, [x8, #1240]
  404e70:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  404e74:	add	x2, x2, #0xea0
  404e78:	mov	w1, wzr
  404e7c:	bl	402d0c <ferror@plt+0x10c>
  404e80:	bl	402920 <abort@plt>
  404e84:	stp	x29, x30, [sp, #-32]!
  404e88:	cmp	w1, #0x1
  404e8c:	stp	x20, x19, [sp, #16]
  404e90:	mov	x29, sp
  404e94:	b.gt	404eb0 <ferror@plt+0x22b0>
  404e98:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404e9c:	ldr	w8, [x8, #1236]
  404ea0:	cbz	w8, 404f60 <ferror@plt+0x2360>
  404ea4:	ldp	x20, x19, [sp, #16]
  404ea8:	ldp	x29, x30, [sp], #32
  404eac:	ret
  404eb0:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x240c>
  404eb4:	add	x3, x3, #0x224
  404eb8:	mov	w4, wzr
  404ebc:	mov	x19, x0
  404ec0:	bl	403f70 <ferror@plt+0x1370>
  404ec4:	ldp	x8, x9, [x19, #24]
  404ec8:	cmp	x9, x8
  404ecc:	b.ne	404ee0 <ferror@plt+0x22e0>  // b.any
  404ed0:	mov	w1, #0x1                   	// #1
  404ed4:	mov	x0, x19
  404ed8:	bl	4159e4 <_obstack_newchunk@@Base>
  404edc:	ldr	x8, [x19, #24]
  404ee0:	add	x9, x8, #0x1
  404ee4:	str	x9, [x19, #24]
  404ee8:	strb	wzr, [x8]
  404eec:	bl	407ec4 <ferror@plt+0x52c4>
  404ef0:	ldp	x2, x8, [x19, #16]
  404ef4:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404ef8:	ldr	x0, [x20, #1080]
  404efc:	cmp	x8, x2
  404f00:	b.ne	404f10 <ferror@plt+0x2310>  // b.any
  404f04:	ldrb	w9, [x19, #80]
  404f08:	orr	w9, w9, #0x2
  404f0c:	strb	w9, [x19, #80]
  404f10:	ldr	x10, [x19, #48]
  404f14:	ldr	x11, [x19, #8]
  404f18:	ldr	x9, [x19, #32]
  404f1c:	add	x8, x10, x8
  404f20:	bic	x8, x8, x10
  404f24:	sub	x10, x8, x11
  404f28:	sub	x11, x9, x11
  404f2c:	cmp	x10, x11
  404f30:	str	x8, [x19, #24]
  404f34:	b.ls	404f40 <ferror@plt+0x2340>  // b.plast
  404f38:	mov	x8, x9
  404f3c:	str	x9, [x19, #24]
  404f40:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  404f44:	add	x1, x1, #0xf6
  404f48:	str	x8, [x19, #16]
  404f4c:	bl	4151e4 <ferror@plt+0x125e4>
  404f50:	ldr	x0, [x20, #1080]
  404f54:	ldp	x20, x19, [sp, #16]
  404f58:	ldp	x29, x30, [sp], #32
  404f5c:	b	415748 <ferror@plt+0x12b48>
  404f60:	ldr	x8, [x2]
  404f64:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  404f68:	ldr	w0, [x9, #1240]
  404f6c:	ldp	x20, x19, [sp, #16]
  404f70:	ldr	x3, [x8, #8]
  404f74:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  404f78:	add	x2, x2, #0xc59
  404f7c:	mov	w1, wzr
  404f80:	ldp	x29, x30, [sp], #32
  404f84:	b	402d0c <ferror@plt+0x10c>
  404f88:	sub	sp, sp, #0x80
  404f8c:	stp	x24, x23, [sp, #80]
  404f90:	stp	x22, x21, [sp, #96]
  404f94:	stp	x20, x19, [sp, #112]
  404f98:	mov	x20, x2
  404f9c:	mov	w21, w1
  404fa0:	cmp	w1, #0x2
  404fa4:	mov	x23, x0
  404fa8:	stp	x29, x30, [sp, #48]
  404fac:	stp	x26, x25, [sp, #64]
  404fb0:	add	x29, sp, #0x30
  404fb4:	b.lt	404fc4 <ferror@plt+0x23c4>  // b.tstop
  404fb8:	ldr	x8, [x20, #8]
  404fbc:	ldr	x19, [x8, #8]
  404fc0:	b	404fcc <ferror@plt+0x23cc>
  404fc4:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x140c>
  404fc8:	add	x19, x19, #0xe97
  404fcc:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x140c>
  404fd0:	add	x8, x8, #0xa18
  404fd4:	ldp	q0, q1, [x8]
  404fd8:	mov	w2, #0x2                   	// #2
  404fdc:	mov	w3, #0x2                   	// #2
  404fe0:	mov	w1, w21
  404fe4:	stp	q0, q1, [sp, #16]
  404fe8:	ldr	x0, [x20]
  404fec:	bl	407100 <ferror@plt+0x4500>
  404ff0:	tbnz	w0, #0, 405024 <ferror@plt+0x2424>
  404ff4:	ldrb	w8, [x19]
  404ff8:	cbz	w8, 405024 <ferror@plt+0x2424>
  404ffc:	bl	407ec4 <ferror@plt+0x52c4>
  405000:	str	x19, [sp, #32]
  405004:	bl	402b80 <__errno_location@plt>
  405008:	mov	x22, x0
  40500c:	cmp	w21, #0x1
  405010:	str	wzr, [x0]
  405014:	b.lt	405048 <ferror@plt+0x2448>  // b.tstop
  405018:	ldr	x8, [x20]
  40501c:	ldr	x0, [x8, #8]
  405020:	b	405050 <ferror@plt+0x2450>
  405024:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405028:	str	wzr, [x8, #2128]
  40502c:	ldp	x20, x19, [sp, #112]
  405030:	ldp	x22, x21, [sp, #96]
  405034:	ldp	x24, x23, [sp, #80]
  405038:	ldp	x26, x25, [sp, #64]
  40503c:	ldp	x29, x30, [sp, #48]
  405040:	add	sp, sp, #0x80
  405044:	ret
  405048:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  40504c:	add	x0, x0, #0xe97
  405050:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  405054:	add	x1, x1, #0xf0b
  405058:	add	x2, sp, #0x10
  40505c:	add	x7, sp, #0xc
  405060:	mov	w5, #0x1                   	// #1
  405064:	mov	x3, xzr
  405068:	mov	w4, wzr
  40506c:	mov	w6, wzr
  405070:	bl	41420c <ferror@plt+0x1160c>
  405074:	cmn	w0, #0x1
  405078:	b.eq	405148 <ferror@plt+0x2548>  // b.none
  40507c:	mov	w24, w0
  405080:	ldr	w0, [sp, #12]
  405084:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  405088:	add	x1, x1, #0x2b8
  40508c:	bl	4027f0 <fdopen@plt>
  405090:	cbz	x0, 405174 <ferror@plt+0x2574>
  405094:	mov	x25, x0
  405098:	ldp	x0, x8, [x23, #24]
  40509c:	subs	x2, x8, x0
  4050a0:	b.eq	4050c4 <ferror@plt+0x24c4>  // b.none
  4050a4:	mov	w1, #0x1                   	// #1
  4050a8:	mov	x3, x25
  4050ac:	bl	4029e0 <fread@plt>
  4050b0:	cbz	x0, 405104 <ferror@plt+0x2504>
  4050b4:	ldr	x8, [x23, #24]
  4050b8:	add	x8, x8, x0
  4050bc:	str	x8, [x23, #24]
  4050c0:	b	405098 <ferror@plt+0x2498>
  4050c4:	mov	x0, x25
  4050c8:	bl	402880 <getc@plt>
  4050cc:	cmn	w0, #0x1
  4050d0:	b.eq	405104 <ferror@plt+0x2504>  // b.none
  4050d4:	ldp	x8, x9, [x23, #24]
  4050d8:	mov	w26, w0
  4050dc:	cmp	x9, x8
  4050e0:	b.ne	4050f4 <ferror@plt+0x24f4>  // b.any
  4050e4:	mov	w1, #0x1                   	// #1
  4050e8:	mov	x0, x23
  4050ec:	bl	4159e4 <_obstack_newchunk@@Base>
  4050f0:	ldr	x8, [x23, #24]
  4050f4:	add	x9, x8, #0x1
  4050f8:	str	x9, [x23, #24]
  4050fc:	strb	w26, [x8]
  405100:	b	405098 <ferror@plt+0x2498>
  405104:	mov	x0, x25
  405108:	bl	402c00 <ferror@plt>
  40510c:	cbnz	w0, 40511c <ferror@plt+0x251c>
  405110:	mov	x0, x25
  405114:	bl	4154f0 <ferror@plt+0x128f0>
  405118:	cbz	w0, 405130 <ferror@plt+0x2530>
  40511c:	ldr	w1, [x22]
  405120:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  405124:	add	x2, x2, #0xf2b
  405128:	mov	w0, #0x1                   	// #1
  40512c:	bl	402d0c <ferror@plt+0x10c>
  405130:	cmp	w21, #0x1
  405134:	str	wzr, [x22]
  405138:	b.lt	4051a8 <ferror@plt+0x25a8>  // b.tstop
  40513c:	ldr	x8, [x20]
  405140:	ldr	x1, [x8, #8]
  405144:	b	4051b0 <ferror@plt+0x25b0>
  405148:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40514c:	ldr	w0, [x8, #1240]
  405150:	ldr	w1, [x22]
  405154:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  405158:	add	x2, x2, #0xf13
  40515c:	mov	x3, x19
  405160:	bl	402d0c <ferror@plt+0x10c>
  405164:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405168:	mov	w9, #0x7f                  	// #127
  40516c:	str	w9, [x8, #2128]
  405170:	b	40502c <ferror@plt+0x242c>
  405174:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405178:	ldr	w0, [x8, #1240]
  40517c:	ldr	w1, [x22]
  405180:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  405184:	add	x2, x2, #0xf13
  405188:	mov	x3, x19
  40518c:	bl	402d0c <ferror@plt+0x10c>
  405190:	ldr	w0, [sp, #12]
  405194:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405198:	mov	w9, #0x7f                  	// #127
  40519c:	str	w9, [x8, #2128]
  4051a0:	bl	4028b0 <close@plt>
  4051a4:	b	40502c <ferror@plt+0x242c>
  4051a8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  4051ac:	add	x1, x1, #0xe97
  4051b0:	add	x6, sp, #0x8
  4051b4:	mov	w3, #0x1                   	// #1
  4051b8:	mov	w4, #0x1                   	// #1
  4051bc:	mov	w0, w24
  4051c0:	mov	w2, wzr
  4051c4:	mov	w5, wzr
  4051c8:	bl	414be4 <ferror@plt+0x11fe4>
  4051cc:	ldr	w8, [sp, #8]
  4051d0:	cbz	w8, 4051e4 <ferror@plt+0x25e4>
  4051d4:	cmp	w0, #0x7f
  4051d8:	b.ne	40521c <ferror@plt+0x261c>  // b.any
  4051dc:	lsl	w0, w8, #8
  4051e0:	b	405210 <ferror@plt+0x2610>
  4051e4:	cmp	w0, #0x7f
  4051e8:	b.ne	405210 <ferror@plt+0x2610>  // b.any
  4051ec:	ldr	w1, [x22]
  4051f0:	cbz	w1, 40520c <ferror@plt+0x260c>
  4051f4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4051f8:	ldr	w0, [x8, #1240]
  4051fc:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  405200:	add	x2, x2, #0xf13
  405204:	mov	x3, x19
  405208:	bl	402d0c <ferror@plt+0x10c>
  40520c:	mov	w0, #0x7f                  	// #127
  405210:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405214:	str	w0, [x8, #2128]
  405218:	b	40502c <ferror@plt+0x242c>
  40521c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  405220:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  405224:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x140c>
  405228:	add	x0, x0, #0xf3c
  40522c:	add	x1, x1, #0xe1d
  405230:	add	x3, x3, #0xf4a
  405234:	mov	w2, #0x424                 	// #1060
  405238:	bl	402b70 <__assert_fail@plt>
  40523c:	sub	sp, sp, #0x50
  405240:	stp	x29, x30, [sp, #16]
  405244:	add	x29, sp, #0x10
  405248:	mov	w8, #0xa                   	// #10
  40524c:	mov	w9, #0x1                   	// #1
  405250:	stp	x22, x21, [sp, #48]
  405254:	stp	x20, x19, [sp, #64]
  405258:	stp	w8, wzr, [x29, #24]
  40525c:	stur	w9, [x29, #-4]
  405260:	ldr	x8, [x2]
  405264:	mov	x21, x2
  405268:	mov	x19, x0
  40526c:	mov	w2, #0x2                   	// #2
  405270:	mov	w3, #0x4                   	// #4
  405274:	mov	x0, x8
  405278:	str	x23, [sp, #32]
  40527c:	mov	w22, w1
  405280:	bl	407100 <ferror@plt+0x4500>
  405284:	tbnz	w0, #0, 40562c <ferror@plt+0x2a2c>
  405288:	cmp	w22, #0x3
  40528c:	b.lt	40529c <ferror@plt+0x269c>  // b.tstop
  405290:	ldr	x8, [x21, #16]
  405294:	ldr	x8, [x8, #8]
  405298:	b	4052a4 <ferror@plt+0x26a4>
  40529c:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x140c>
  4052a0:	add	x8, x8, #0xe97
  4052a4:	ldrb	w8, [x8]
  4052a8:	cbz	w8, 4052c4 <ferror@plt+0x26c4>
  4052ac:	ldr	x0, [x21]
  4052b0:	cmp	w22, #0x3
  4052b4:	b.lt	4052cc <ferror@plt+0x26cc>  // b.tstop
  4052b8:	ldr	x8, [x21, #16]
  4052bc:	ldr	x1, [x8, #8]
  4052c0:	b	4052d4 <ferror@plt+0x26d4>
  4052c4:	mov	w20, #0xa                   	// #10
  4052c8:	b	40530c <ferror@plt+0x270c>
  4052cc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  4052d0:	add	x1, x1, #0xe97
  4052d4:	add	x2, x29, #0x18
  4052d8:	bl	40719c <ferror@plt+0x459c>
  4052dc:	tbz	w0, #0, 40562c <ferror@plt+0x2a2c>
  4052e0:	ldr	w20, [x29, #24]
  4052e4:	sub	w8, w20, #0x1
  4052e8:	cmp	w8, #0x24
  4052ec:	b.cc	40530c <ferror@plt+0x270c>  // b.lo, b.ul, b.last
  4052f0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4052f4:	ldr	w0, [x8, #1240]
  4052f8:	cmp	w22, #0x1
  4052fc:	b.lt	4053cc <ferror@plt+0x27cc>  // b.tstop
  405300:	ldr	x8, [x21]
  405304:	ldr	x4, [x8, #8]
  405308:	b	4053d4 <ferror@plt+0x27d4>
  40530c:	cmp	w22, #0x4
  405310:	b.lt	405358 <ferror@plt+0x2758>  // b.tstop
  405314:	ldr	x8, [x21, #24]
  405318:	ldr	x0, [x21]
  40531c:	sub	x2, x29, #0x4
  405320:	ldr	x1, [x8, #8]
  405324:	bl	40719c <ferror@plt+0x459c>
  405328:	tbz	w0, #0, 40562c <ferror@plt+0x2a2c>
  40532c:	ldur	w23, [x29, #-4]
  405330:	tbz	w23, #31, 405364 <ferror@plt+0x2764>
  405334:	ldr	x8, [x21]
  405338:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40533c:	ldr	w0, [x9, #1240]
  405340:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  405344:	ldr	x3, [x8, #8]
  405348:	add	x2, x2, #0xfa6
  40534c:	mov	w1, wzr
  405350:	bl	402d0c <ferror@plt+0x10c>
  405354:	b	40562c <ferror@plt+0x2a2c>
  405358:	cmp	w22, #0x2
  40535c:	mov	w23, #0x1                   	// #1
  405360:	b.lt	405374 <ferror@plt+0x2774>  // b.tstop
  405364:	ldr	x8, [x21, #8]
  405368:	ldr	x9, [x8, #8]
  40536c:	mov	w8, #0x1                   	// #1
  405370:	b	405380 <ferror@plt+0x2780>
  405374:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x140c>
  405378:	mov	w8, wzr
  40537c:	add	x9, x9, #0xe97
  405380:	ldrb	w9, [x9]
  405384:	cbz	w9, 405398 <ferror@plt+0x2798>
  405388:	cbz	w8, 4053b4 <ferror@plt+0x27b4>
  40538c:	ldr	x8, [x21, #8]
  405390:	ldr	x0, [x8, #8]
  405394:	b	4053bc <ferror@plt+0x27bc>
  405398:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40539c:	ldr	w0, [x8, #1240]
  4053a0:	cmp	w22, #0x1
  4053a4:	b.lt	4053ec <ferror@plt+0x27ec>  // b.tstop
  4053a8:	ldr	x8, [x21]
  4053ac:	ldr	x3, [x8, #8]
  4053b0:	b	4053f4 <ferror@plt+0x27f4>
  4053b4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  4053b8:	add	x0, x0, #0xe97
  4053bc:	add	x1, x29, #0x1c
  4053c0:	bl	4086d8 <ferror@plt+0x5ad8>
  4053c4:	tbz	w0, #0, 405404 <ferror@plt+0x2804>
  4053c8:	b	40562c <ferror@plt+0x2a2c>
  4053cc:	adrp	x4, 417000 <_obstack_memory_used@@Base+0x140c>
  4053d0:	add	x4, x4, #0xe97
  4053d4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  4053d8:	add	x2, x2, #0xf80
  4053dc:	mov	w1, wzr
  4053e0:	mov	w3, w20
  4053e4:	bl	402d0c <ferror@plt+0x10c>
  4053e8:	b	40562c <ferror@plt+0x2a2c>
  4053ec:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x140c>
  4053f0:	add	x3, x3, #0xe97
  4053f4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  4053f8:	add	x2, x2, #0xd42
  4053fc:	mov	w1, wzr
  405400:	bl	402d0c <ferror@plt+0x10c>
  405404:	ldr	w8, [x29, #28]
  405408:	cmp	w20, #0x1
  40540c:	b.ne	405520 <ferror@plt+0x2920>  // b.any
  405410:	tbz	w8, #31, 405450 <ferror@plt+0x2850>
  405414:	ldp	x8, x9, [x19, #24]
  405418:	cmp	x9, x8
  40541c:	b.ne	405430 <ferror@plt+0x2830>  // b.any
  405420:	mov	w1, #0x1                   	// #1
  405424:	mov	x0, x19
  405428:	bl	4159e4 <_obstack_newchunk@@Base>
  40542c:	ldr	x8, [x19, #24]
  405430:	add	x9, x8, #0x1
  405434:	mov	w10, #0x2d                  	// #45
  405438:	str	x9, [x19, #24]
  40543c:	strb	w10, [x8]
  405440:	ldr	w8, [x29, #28]
  405444:	ldur	w23, [x29, #-4]
  405448:	neg	w8, w8
  40544c:	str	w8, [x29, #28]
  405450:	sub	w9, w23, #0x1
  405454:	cmp	w23, w8
  405458:	stur	w9, [x29, #-4]
  40545c:	b.le	4054a4 <ferror@plt+0x28a4>
  405460:	mov	w20, #0x30                  	// #48
  405464:	ldp	x8, x9, [x19, #24]
  405468:	cmp	x9, x8
  40546c:	b.ne	405480 <ferror@plt+0x2880>  // b.any
  405470:	mov	w1, #0x1                   	// #1
  405474:	mov	x0, x19
  405478:	bl	4159e4 <_obstack_newchunk@@Base>
  40547c:	ldr	x8, [x19, #24]
  405480:	add	x9, x8, #0x1
  405484:	str	x9, [x19, #24]
  405488:	strb	w20, [x8]
  40548c:	ldr	w8, [x29, #28]
  405490:	sub	w23, w23, #0x1
  405494:	cmp	w23, w8
  405498:	b.gt	405464 <ferror@plt+0x2864>
  40549c:	sub	w9, w23, #0x1
  4054a0:	stur	w9, [x29, #-4]
  4054a4:	sub	w9, w8, #0x1
  4054a8:	str	w9, [x29, #28]
  4054ac:	ldp	x9, x10, [x19, #24]
  4054b0:	cmp	x10, x9
  4054b4:	cset	w10, eq  // eq = none
  4054b8:	cbz	w8, 4054fc <ferror@plt+0x28fc>
  4054bc:	mov	w20, #0x31                  	// #49
  4054c0:	tbz	w10, #0, 4054d4 <ferror@plt+0x28d4>
  4054c4:	mov	w1, #0x1                   	// #1
  4054c8:	mov	x0, x19
  4054cc:	bl	4159e4 <_obstack_newchunk@@Base>
  4054d0:	ldr	x9, [x19, #24]
  4054d4:	add	x8, x9, #0x1
  4054d8:	str	x8, [x19, #24]
  4054dc:	strb	w20, [x9]
  4054e0:	ldr	w8, [x29, #28]
  4054e4:	sub	w9, w8, #0x1
  4054e8:	str	w9, [x29, #28]
  4054ec:	ldp	x9, x10, [x19, #24]
  4054f0:	cmp	x10, x9
  4054f4:	cset	w10, eq  // eq = none
  4054f8:	cbnz	w8, 4054c0 <ferror@plt+0x28c0>
  4054fc:	cbz	w10, 405510 <ferror@plt+0x2910>
  405500:	mov	w1, #0x1                   	// #1
  405504:	mov	x0, x19
  405508:	bl	4159e4 <_obstack_newchunk@@Base>
  40550c:	ldr	x9, [x19, #24]
  405510:	add	x8, x9, #0x1
  405514:	str	x8, [x19, #24]
  405518:	strb	wzr, [x9]
  40551c:	b	40562c <ferror@plt+0x2a2c>
  405520:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405524:	cmp	w8, #0x0
  405528:	adrp	x10, 417000 <_obstack_memory_used@@Base+0x140c>
  40552c:	add	x21, x21, #0x84f
  405530:	cneg	w9, w8, mi  // mi = first
  405534:	add	x10, x10, #0xad6
  405538:	strb	wzr, [x21]
  40553c:	udiv	w11, w9, w20
  405540:	msub	w12, w11, w20, w9
  405544:	ldrb	w12, [x10, w12, uxtw]
  405548:	cmp	w9, w20
  40554c:	mov	w9, w11
  405550:	strb	w12, [x21, #-1]!
  405554:	b.cs	40553c <ferror@plt+0x293c>  // b.hs, b.nlast
  405558:	tbz	w8, #31, 40558c <ferror@plt+0x298c>
  40555c:	mov	w20, #0x2d                  	// #45
  405560:	sturb	w20, [x21, #-1]
  405564:	ldp	x8, x9, [x19, #24]
  405568:	cmp	x9, x8
  40556c:	b.ne	405580 <ferror@plt+0x2980>  // b.any
  405570:	mov	w1, #0x1                   	// #1
  405574:	mov	x0, x19
  405578:	bl	4159e4 <_obstack_newchunk@@Base>
  40557c:	ldr	x8, [x19, #24]
  405580:	add	x9, x8, #0x1
  405584:	str	x9, [x19, #24]
  405588:	strb	w20, [x8]
  40558c:	mov	x0, x21
  405590:	bl	402580 <strlen@plt>
  405594:	ldur	w8, [x29, #-4]
  405598:	sub	w20, w8, w0
  40559c:	subs	w8, w20, #0x1
  4055a0:	stur	w8, [x29, #-4]
  4055a4:	b.lt	4055e8 <ferror@plt+0x29e8>  // b.tstop
  4055a8:	mov	w22, #0x30                  	// #48
  4055ac:	ldp	x8, x9, [x19, #24]
  4055b0:	cmp	x9, x8
  4055b4:	b.ne	4055c8 <ferror@plt+0x29c8>  // b.any
  4055b8:	mov	w1, #0x1                   	// #1
  4055bc:	mov	x0, x19
  4055c0:	bl	4159e4 <_obstack_newchunk@@Base>
  4055c4:	ldr	x8, [x19, #24]
  4055c8:	sub	w20, w20, #0x1
  4055cc:	add	x9, x8, #0x1
  4055d0:	cmp	w20, #0x0
  4055d4:	str	x9, [x19, #24]
  4055d8:	strb	w22, [x8]
  4055dc:	b.gt	4055ac <ferror@plt+0x29ac>
  4055e0:	sub	w8, w20, #0x1
  4055e4:	stur	w8, [x29, #-4]
  4055e8:	mov	x0, x21
  4055ec:	bl	402580 <strlen@plt>
  4055f0:	mov	x20, x0
  4055f4:	ldp	x0, x8, [x19, #24]
  4055f8:	sub	x8, x8, x0
  4055fc:	cmp	x8, x20
  405600:	b.cs	405614 <ferror@plt+0x2a14>  // b.hs, b.nlast
  405604:	mov	x0, x19
  405608:	mov	x1, x20
  40560c:	bl	4159e4 <_obstack_newchunk@@Base>
  405610:	ldr	x0, [x19, #24]
  405614:	mov	x1, x21
  405618:	mov	x2, x20
  40561c:	bl	402550 <memcpy@plt>
  405620:	ldr	x8, [x19, #24]
  405624:	add	x8, x8, x20
  405628:	str	x8, [x19, #24]
  40562c:	ldp	x20, x19, [sp, #64]
  405630:	ldp	x22, x21, [sp, #48]
  405634:	ldr	x23, [sp, #32]
  405638:	ldp	x29, x30, [sp, #16]
  40563c:	add	sp, sp, #0x50
  405640:	ret
  405644:	subs	w1, w1, #0x1
  405648:	b.gt	40565c <ferror@plt+0x2a5c>
  40564c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405650:	ldr	w8, [x8, #1236]
  405654:	cbz	w8, 405664 <ferror@plt+0x2a64>
  405658:	ret
  40565c:	add	x2, x2, #0x8
  405660:	b	409590 <ferror@plt+0x6990>
  405664:	ldr	x8, [x2]
  405668:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40566c:	ldr	w0, [x9, #1240]
  405670:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  405674:	ldr	x3, [x8, #8]
  405678:	add	x2, x2, #0xc59
  40567c:	mov	w1, wzr
  405680:	b	402d0c <ferror@plt+0x10c>
  405684:	stp	x29, x30, [sp, #-48]!
  405688:	stp	x20, x19, [sp, #32]
  40568c:	ldr	x8, [x2]
  405690:	mov	x20, x2
  405694:	mov	x19, x0
  405698:	mov	w2, #0x3                   	// #3
  40569c:	mov	w3, #0x4                   	// #4
  4056a0:	mov	x0, x8
  4056a4:	str	x21, [sp, #16]
  4056a8:	mov	x29, sp
  4056ac:	mov	w21, w1
  4056b0:	bl	407100 <ferror@plt+0x4500>
  4056b4:	tbnz	w0, #0, 405760 <ferror@plt+0x2b60>
  4056b8:	cmp	w21, #0x2
  4056bc:	b.lt	4056cc <ferror@plt+0x2acc>  // b.tstop
  4056c0:	ldr	x8, [x20, #8]
  4056c4:	ldr	x0, [x8, #8]
  4056c8:	b	4056d4 <ferror@plt+0x2ad4>
  4056cc:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  4056d0:	add	x0, x0, #0xe97
  4056d4:	mov	w1, wzr
  4056d8:	bl	40ee5c <ferror@plt+0xc25c>
  4056dc:	cbz	x0, 4056f8 <ferror@plt+0x2af8>
  4056e0:	ldr	w8, [x0, #24]
  4056e4:	cbz	w8, 4056f8 <ferror@plt+0x2af8>
  4056e8:	cmp	w21, #0x2
  4056ec:	b.le	405714 <ferror@plt+0x2b14>
  4056f0:	mov	w8, #0x2                   	// #2
  4056f4:	b	405704 <ferror@plt+0x2b04>
  4056f8:	cmp	w21, #0x4
  4056fc:	b.lt	405760 <ferror@plt+0x2b60>  // b.tstop
  405700:	mov	w8, #0x3                   	// #3
  405704:	ldr	x8, [x20, x8, lsl #3]
  405708:	ldr	x20, [x8, #8]
  40570c:	cbnz	x20, 40571c <ferror@plt+0x2b1c>
  405710:	b	405760 <ferror@plt+0x2b60>
  405714:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x140c>
  405718:	add	x20, x20, #0xe97
  40571c:	mov	x0, x20
  405720:	bl	402580 <strlen@plt>
  405724:	mov	x21, x0
  405728:	ldp	x0, x8, [x19, #24]
  40572c:	sub	x8, x8, x0
  405730:	cmp	x8, x21
  405734:	b.cs	405748 <ferror@plt+0x2b48>  // b.hs, b.nlast
  405738:	mov	x0, x19
  40573c:	mov	x1, x21
  405740:	bl	4159e4 <_obstack_newchunk@@Base>
  405744:	ldr	x0, [x19, #24]
  405748:	mov	x1, x20
  40574c:	mov	x2, x21
  405750:	bl	402550 <memcpy@plt>
  405754:	ldr	x8, [x19, #24]
  405758:	add	x8, x8, x21
  40575c:	str	x8, [x19, #24]
  405760:	ldp	x20, x19, [sp, #32]
  405764:	ldr	x21, [sp, #16]
  405768:	ldp	x29, x30, [sp], #48
  40576c:	ret
  405770:	stp	x29, x30, [sp, #-64]!
  405774:	cmp	w1, #0x2
  405778:	str	x23, [sp, #16]
  40577c:	stp	x22, x21, [sp, #32]
  405780:	stp	x20, x19, [sp, #48]
  405784:	mov	x29, sp
  405788:	b.eq	405908 <ferror@plt+0x2d08>  // b.none
  40578c:	ldr	x8, [x2]
  405790:	mov	x21, x2
  405794:	mov	w20, w1
  405798:	cmp	w1, #0x3
  40579c:	b.gt	4057d8 <ferror@plt+0x2bd8>
  4057a0:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4057a4:	ldr	w9, [x9, #1236]
  4057a8:	cbnz	w9, 405908 <ferror@plt+0x2d08>
  4057ac:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4057b0:	ldr	w0, [x9, #1240]
  4057b4:	ldr	x3, [x8, #8]
  4057b8:	ldp	x20, x19, [sp, #48]
  4057bc:	ldp	x22, x21, [sp, #32]
  4057c0:	ldr	x23, [sp, #16]
  4057c4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  4057c8:	add	x2, x2, #0xc59
  4057cc:	mov	w1, wzr
  4057d0:	ldp	x29, x30, [sp], #64
  4057d4:	b	402d0c <ferror@plt+0x10c>
  4057d8:	mov	w10, #0x5556                	// #21846
  4057dc:	add	w9, w20, #0x2
  4057e0:	movk	w10, #0x5555, lsl #16
  4057e4:	smull	x10, w9, w10
  4057e8:	lsr	x11, x10, #63
  4057ec:	lsr	x10, x10, #32
  4057f0:	add	w10, w10, w11
  4057f4:	add	w10, w10, w10, lsl #1
  4057f8:	sub	w9, w9, w10
  4057fc:	mov	x19, x0
  405800:	cmp	w9, #0x2
  405804:	b.lt	405830 <ferror@plt+0x2c30>  // b.tstop
  405808:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40580c:	ldr	w9, [x9, #1236]
  405810:	cbnz	w9, 405830 <ferror@plt+0x2c30>
  405814:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405818:	ldr	w0, [x9, #1240]
  40581c:	ldr	x3, [x8, #8]
  405820:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  405824:	add	x2, x2, #0xc84
  405828:	mov	w1, wzr
  40582c:	bl	402d0c <ferror@plt+0x10c>
  405830:	adrp	x22, 417000 <_obstack_memory_used@@Base+0x140c>
  405834:	add	x21, x21, #0x8
  405838:	sub	w23, w20, #0x1
  40583c:	add	x22, x22, #0xe97
  405840:	cmp	w23, #0x1
  405844:	b.lt	405864 <ferror@plt+0x2c64>  // b.tstop
  405848:	ldr	x8, [x21]
  40584c:	cmp	w23, #0x1
  405850:	ldr	x0, [x8, #8]
  405854:	b.eq	405868 <ferror@plt+0x2c68>  // b.none
  405858:	ldr	x8, [x21, #8]
  40585c:	ldr	x1, [x8, #8]
  405860:	b	40586c <ferror@plt+0x2c6c>
  405864:	mov	x0, x22
  405868:	mov	x1, x22
  40586c:	bl	402990 <strcmp@plt>
  405870:	cbz	w0, 405890 <ferror@plt+0x2c90>
  405874:	sub	w8, w23, #0x4
  405878:	cmp	w8, #0x2
  40587c:	b.cs	4058a8 <ferror@plt+0x2ca8>  // b.hs, b.nlast
  405880:	ldr	x8, [x21, #24]
  405884:	ldr	x20, [x8, #8]
  405888:	cbz	x20, 405840 <ferror@plt+0x2c40>
  40588c:	b	4058c4 <ferror@plt+0x2cc4>
  405890:	cmp	w23, #0x3
  405894:	b.lt	4058c0 <ferror@plt+0x2cc0>  // b.tstop
  405898:	ldr	x8, [x21, #16]
  40589c:	ldr	x20, [x8, #8]
  4058a0:	cbz	x20, 405840 <ferror@plt+0x2c40>
  4058a4:	b	4058c4 <ferror@plt+0x2cc4>
  4058a8:	subs	w23, w23, #0x3
  4058ac:	b.eq	405908 <ferror@plt+0x2d08>  // b.none
  4058b0:	mov	x20, xzr
  4058b4:	add	x21, x21, #0x18
  4058b8:	cbz	x20, 405840 <ferror@plt+0x2c40>
  4058bc:	b	4058c4 <ferror@plt+0x2cc4>
  4058c0:	mov	x20, x22
  4058c4:	mov	x0, x20
  4058c8:	bl	402580 <strlen@plt>
  4058cc:	mov	x21, x0
  4058d0:	ldp	x0, x8, [x19, #24]
  4058d4:	sub	x8, x8, x0
  4058d8:	cmp	x8, x21
  4058dc:	b.cs	4058f0 <ferror@plt+0x2cf0>  // b.hs, b.nlast
  4058e0:	mov	x0, x19
  4058e4:	mov	x1, x21
  4058e8:	bl	4159e4 <_obstack_newchunk@@Base>
  4058ec:	ldr	x0, [x19, #24]
  4058f0:	mov	x1, x20
  4058f4:	mov	x2, x21
  4058f8:	bl	402550 <memcpy@plt>
  4058fc:	ldr	x8, [x19, #24]
  405900:	add	x8, x8, x21
  405904:	str	x8, [x19, #24]
  405908:	ldp	x20, x19, [sp, #48]
  40590c:	ldp	x22, x21, [sp, #32]
  405910:	ldr	x23, [sp, #16]
  405914:	ldp	x29, x30, [sp], #64
  405918:	ret
  40591c:	mov	w0, w1
  405920:	mov	x1, x2
  405924:	mov	w2, wzr
  405928:	b	407490 <ferror@plt+0x4890>
  40592c:	stp	x29, x30, [sp, #-48]!
  405930:	stp	x20, x19, [sp, #32]
  405934:	ldr	x8, [x2]
  405938:	mov	x20, x2
  40593c:	mov	x19, x0
  405940:	mov	w2, #0x2                   	// #2
  405944:	mov	w3, #0x2                   	// #2
  405948:	mov	x0, x8
  40594c:	str	x21, [sp, #16]
  405950:	mov	x29, sp
  405954:	mov	w21, w1
  405958:	bl	407100 <ferror@plt+0x4500>
  40595c:	tbnz	w0, #0, 40599c <ferror@plt+0x2d9c>
  405960:	ldr	x0, [x20]
  405964:	cmp	w21, #0x2
  405968:	b.lt	405978 <ferror@plt+0x2d78>  // b.tstop
  40596c:	ldr	x8, [x20, #8]
  405970:	ldr	x1, [x8, #8]
  405974:	b	405980 <ferror@plt+0x2d80>
  405978:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  40597c:	add	x1, x1, #0xe97
  405980:	add	x2, x29, #0x1c
  405984:	bl	40719c <ferror@plt+0x459c>
  405988:	tbz	w0, #0, 40599c <ferror@plt+0x2d9c>
  40598c:	ldr	w8, [x29, #28]
  405990:	mov	x0, x19
  405994:	add	w1, w8, #0x1
  405998:	bl	403eac <ferror@plt+0x12ac>
  40599c:	ldp	x20, x19, [sp, #32]
  4059a0:	ldr	x21, [sp, #16]
  4059a4:	ldp	x29, x30, [sp], #48
  4059a8:	ret
  4059ac:	stp	x29, x30, [sp, #-48]!
  4059b0:	stp	x22, x21, [sp, #16]
  4059b4:	stp	x20, x19, [sp, #32]
  4059b8:	ldr	x8, [x2]
  4059bc:	mov	x21, x2
  4059c0:	mov	x19, x0
  4059c4:	mov	w2, #0x3                   	// #3
  4059c8:	mov	w3, #0x3                   	// #3
  4059cc:	mov	x0, x8
  4059d0:	mov	x29, sp
  4059d4:	mov	w22, w1
  4059d8:	bl	407100 <ferror@plt+0x4500>
  4059dc:	tbz	w0, #0, 4059f0 <ferror@plt+0x2df0>
  4059e0:	cmp	w22, #0x2
  4059e4:	b.ne	405a14 <ferror@plt+0x2e14>  // b.any
  4059e8:	mov	w1, wzr
  4059ec:	b	405a50 <ferror@plt+0x2e50>
  4059f0:	cmp	w22, #0x2
  4059f4:	b.lt	405a24 <ferror@plt+0x2e24>  // b.tstop
  4059f8:	ldr	x8, [x21, #8]
  4059fc:	cmp	w22, #0x2
  405a00:	ldr	x20, [x8, #8]
  405a04:	b.ne	405a34 <ferror@plt+0x2e34>  // b.any
  405a08:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  405a0c:	add	x1, x1, #0xe97
  405a10:	b	405a3c <ferror@plt+0x2e3c>
  405a14:	ldp	x20, x19, [sp, #32]
  405a18:	ldp	x22, x21, [sp, #16]
  405a1c:	ldp	x29, x30, [sp], #48
  405a20:	ret
  405a24:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x140c>
  405a28:	add	x20, x20, #0xe97
  405a2c:	mov	x1, x20
  405a30:	b	405a3c <ferror@plt+0x2e3c>
  405a34:	ldr	x8, [x21, #16]
  405a38:	ldr	x1, [x8, #8]
  405a3c:	mov	x0, x20
  405a40:	bl	402b00 <strstr@plt>
  405a44:	sub	w8, w0, w20
  405a48:	cmp	x0, #0x0
  405a4c:	csinv	w1, w8, wzr, ne  // ne = any
  405a50:	mov	x0, x19
  405a54:	ldp	x20, x19, [sp, #32]
  405a58:	ldp	x22, x21, [sp, #16]
  405a5c:	ldp	x29, x30, [sp], #48
  405a60:	b	403eac <ferror@plt+0x12ac>
  405a64:	stp	x29, x30, [sp, #-64]!
  405a68:	stp	x24, x23, [sp, #16]
  405a6c:	stp	x22, x21, [sp, #32]
  405a70:	stp	x20, x19, [sp, #48]
  405a74:	ldr	x8, [x2]
  405a78:	subs	w20, w1, #0x1
  405a7c:	mov	x29, sp
  405a80:	b.gt	405aa4 <ferror@plt+0x2ea4>
  405a84:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405a88:	ldr	w9, [x9, #1236]
  405a8c:	cbz	w9, 405b64 <ferror@plt+0x2f64>
  405a90:	ldp	x20, x19, [sp, #48]
  405a94:	ldp	x22, x21, [sp, #32]
  405a98:	ldp	x24, x23, [sp, #16]
  405a9c:	ldp	x29, x30, [sp], #64
  405aa0:	ret
  405aa4:	mov	x21, x2
  405aa8:	ldr	x9, [x21, #8]!
  405aac:	mov	x22, x2
  405ab0:	ldr	w10, [x9]
  405ab4:	cmp	w10, #0x1
  405ab8:	b.ne	405b4c <ferror@plt+0x2f4c>  // b.any
  405abc:	ldr	x24, [x9, #8]
  405ac0:	mov	w23, w1
  405ac4:	mov	x19, x0
  405ac8:	mov	w1, wzr
  405acc:	mov	x0, x24
  405ad0:	bl	40ee5c <ferror@plt+0xc25c>
  405ad4:	cbz	x0, 405b80 <ferror@plt+0x2f80>
  405ad8:	ldr	w8, [x0, #24]
  405adc:	cbz	w8, 405b80 <ferror@plt+0x2f80>
  405ae0:	ldrb	w8, [x0, #8]
  405ae4:	tbnz	w8, #2, 405b2c <ferror@plt+0x2f2c>
  405ae8:	cmp	w23, #0x3
  405aec:	b.lt	405b2c <ferror@plt+0x2f2c>  // b.tstop
  405af0:	mov	w10, w23
  405af4:	adrp	x11, 417000 <_obstack_memory_used@@Base+0x140c>
  405af8:	add	x8, x22, #0x10
  405afc:	mov	w9, #0x1                   	// #1
  405b00:	sub	x10, x10, #0x2
  405b04:	add	x11, x11, #0xe97
  405b08:	ldr	x12, [x8]
  405b0c:	ldr	w13, [x12]
  405b10:	cmp	w13, #0x1
  405b14:	b.eq	405b20 <ferror@plt+0x2f20>  // b.none
  405b18:	str	w9, [x12]
  405b1c:	str	x11, [x12, #8]
  405b20:	subs	x10, x10, #0x1
  405b24:	add	x8, x8, #0x8
  405b28:	b.ne	405b08 <ferror@plt+0x2f08>  // b.any
  405b2c:	mov	w1, w20
  405b30:	mov	x2, x21
  405b34:	mov	x3, x19
  405b38:	ldp	x20, x19, [sp, #48]
  405b3c:	ldp	x22, x21, [sp, #32]
  405b40:	ldp	x24, x23, [sp, #16]
  405b44:	ldp	x29, x30, [sp], #64
  405b48:	b	40ce1c <ferror@plt+0xa21c>
  405b4c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405b50:	ldr	w0, [x9, #1240]
  405b54:	ldr	x3, [x8, #8]
  405b58:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  405b5c:	add	x2, x2, #0xcb6
  405b60:	b	405b78 <ferror@plt+0x2f78>
  405b64:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405b68:	ldr	w0, [x9, #1240]
  405b6c:	ldr	x3, [x8, #8]
  405b70:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  405b74:	add	x2, x2, #0xc59
  405b78:	mov	w1, wzr
  405b7c:	b	405b98 <ferror@plt+0x2f98>
  405b80:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405b84:	ldr	w0, [x8, #1240]
  405b88:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  405b8c:	add	x2, x2, #0xe7e
  405b90:	mov	w1, wzr
  405b94:	mov	x3, x24
  405b98:	ldp	x20, x19, [sp, #48]
  405b9c:	ldp	x22, x21, [sp, #32]
  405ba0:	ldp	x24, x23, [sp, #16]
  405ba4:	ldp	x29, x30, [sp], #64
  405ba8:	b	402d0c <ferror@plt+0x10c>
  405bac:	stp	x29, x30, [sp, #-48]!
  405bb0:	stp	x20, x19, [sp, #32]
  405bb4:	ldr	x8, [x2]
  405bb8:	mov	x20, x2
  405bbc:	mov	x19, x0
  405bc0:	mov	w2, #0x2                   	// #2
  405bc4:	mov	w3, #0x2                   	// #2
  405bc8:	mov	x0, x8
  405bcc:	str	x21, [sp, #16]
  405bd0:	mov	x29, sp
  405bd4:	mov	w21, w1
  405bd8:	bl	407100 <ferror@plt+0x4500>
  405bdc:	tbz	w0, #0, 405bf0 <ferror@plt+0x2ff0>
  405be0:	ldp	x20, x19, [sp, #32]
  405be4:	ldr	x21, [sp, #16]
  405be8:	ldp	x29, x30, [sp], #48
  405bec:	ret
  405bf0:	cmp	w21, #0x2
  405bf4:	b.lt	405c04 <ferror@plt+0x3004>  // b.tstop
  405bf8:	ldr	x8, [x20, #8]
  405bfc:	ldr	x0, [x8, #8]
  405c00:	b	405c0c <ferror@plt+0x300c>
  405c04:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  405c08:	add	x0, x0, #0xe97
  405c0c:	bl	402580 <strlen@plt>
  405c10:	mov	x1, x0
  405c14:	mov	x0, x19
  405c18:	ldp	x20, x19, [sp, #32]
  405c1c:	ldr	x21, [sp, #16]
  405c20:	ldp	x29, x30, [sp], #48
  405c24:	b	403eac <ferror@plt+0x12ac>
  405c28:	sub	sp, sp, #0x30
  405c2c:	stp	x29, x30, [sp, #16]
  405c30:	add	x29, sp, #0x10
  405c34:	stp	x20, x19, [sp, #32]
  405c38:	stur	wzr, [x29, #-4]
  405c3c:	ldr	x0, [x2]
  405c40:	mov	x20, x2
  405c44:	mov	w2, #0x1                   	// #1
  405c48:	mov	w3, #0x2                   	// #2
  405c4c:	mov	w19, w1
  405c50:	bl	407100 <ferror@plt+0x4500>
  405c54:	cmp	w19, #0x2
  405c58:	mov	w19, wzr
  405c5c:	b.lt	405ca4 <ferror@plt+0x30a4>  // b.tstop
  405c60:	ldp	x0, x8, [x20]
  405c64:	sub	x2, x29, #0x4
  405c68:	ldr	x1, [x8, #8]
  405c6c:	bl	40719c <ferror@plt+0x459c>
  405c70:	tbz	w0, #0, 405c9c <ferror@plt+0x309c>
  405c74:	ldur	w19, [x29, #-4]
  405c78:	cmp	w19, #0x100
  405c7c:	b.cc	405ca4 <ferror@plt+0x30a4>  // b.lo, b.ul, b.last
  405c80:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405c84:	ldr	w0, [x8, #1240]
  405c88:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  405c8c:	add	x2, x2, #0xfc5
  405c90:	mov	w1, wzr
  405c94:	mov	w3, w19
  405c98:	bl	402d0c <ferror@plt+0x10c>
  405c9c:	mov	w19, #0x1                   	// #1
  405ca0:	stur	w19, [x29, #-4]
  405ca4:	mov	x0, xzr
  405ca8:	bl	407f58 <ferror@plt+0x5358>
  405cac:	bl	407ec4 <ferror@plt+0x52c4>
  405cb0:	cbnz	w19, 405ccc <ferror@plt+0x30cc>
  405cb4:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  405cb8:	ldr	w8, [x8, #3512]
  405cbc:	cbz	w8, 405ccc <ferror@plt+0x30cc>
  405cc0:	stur	w8, [x29, #-4]
  405cc4:	mov	w19, w8
  405cc8:	b	405cd0 <ferror@plt+0x30d0>
  405ccc:	cbz	w19, 405cd8 <ferror@plt+0x30d8>
  405cd0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405cd4:	str	w19, [x8, #900]
  405cd8:	mov	w0, w19
  405cdc:	bl	4025b0 <exit@plt>
  405ce0:	stp	x29, x30, [sp, #-48]!
  405ce4:	stp	x20, x19, [sp, #32]
  405ce8:	mov	x20, x2
  405cec:	cmp	w1, #0x1
  405cf0:	stp	x22, x21, [sp, #16]
  405cf4:	mov	x29, sp
  405cf8:	b.gt	405d18 <ferror@plt+0x3118>
  405cfc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405d00:	ldr	w8, [x8, #1236]
  405d04:	cbz	w8, 405d80 <ferror@plt+0x3180>
  405d08:	ldp	x20, x19, [sp, #32]
  405d0c:	ldp	x22, x21, [sp, #16]
  405d10:	ldp	x29, x30, [sp], #48
  405d14:	ret
  405d18:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405d1c:	ldr	w8, [x8, #1224]
  405d20:	mov	x19, x0
  405d24:	cbz	w8, 405dac <ferror@plt+0x31ac>
  405d28:	ldr	x8, [x20, #8]
  405d2c:	ldr	x22, [x8, #8]
  405d30:	mov	x0, x22
  405d34:	bl	402580 <strlen@plt>
  405d38:	mov	x21, x0
  405d3c:	ldp	x0, x8, [x19, #24]
  405d40:	sub	x8, x8, x0
  405d44:	cmp	x8, x21
  405d48:	b.cs	405d64 <ferror@plt+0x3164>  // b.hs, b.nlast
  405d4c:	mov	x0, x19
  405d50:	mov	x1, x21
  405d54:	bl	4159e4 <_obstack_newchunk@@Base>
  405d58:	ldr	x8, [x20, #8]
  405d5c:	ldr	x0, [x19, #24]
  405d60:	ldr	x22, [x8, #8]
  405d64:	mov	x1, x22
  405d68:	mov	x2, x21
  405d6c:	bl	402550 <memcpy@plt>
  405d70:	ldr	x8, [x19, #24]
  405d74:	add	x8, x8, x21
  405d78:	str	x8, [x19, #24]
  405d7c:	b	405dc8 <ferror@plt+0x31c8>
  405d80:	ldr	x8, [x20]
  405d84:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405d88:	ldr	w0, [x9, #1240]
  405d8c:	ldp	x20, x19, [sp, #32]
  405d90:	ldr	x3, [x8, #8]
  405d94:	ldp	x22, x21, [sp, #16]
  405d98:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  405d9c:	add	x2, x2, #0xc59
  405da0:	mov	w1, wzr
  405da4:	ldp	x29, x30, [sp], #48
  405da8:	b	402d0c <ferror@plt+0x10c>
  405dac:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x240c>
  405db0:	add	x3, x3, #0x224
  405db4:	mov	x0, x19
  405db8:	mov	x2, x20
  405dbc:	mov	w4, wzr
  405dc0:	bl	403f70 <ferror@plt+0x1370>
  405dc4:	ldr	x8, [x19, #24]
  405dc8:	ldr	x9, [x19, #32]
  405dcc:	cmp	x9, x8
  405dd0:	b.ne	405de4 <ferror@plt+0x31e4>  // b.any
  405dd4:	mov	w1, #0x1                   	// #1
  405dd8:	mov	x0, x19
  405ddc:	bl	4159e4 <_obstack_newchunk@@Base>
  405de0:	ldr	x8, [x19, #24]
  405de4:	add	x9, x8, #0x1
  405de8:	str	x9, [x19, #24]
  405dec:	strb	wzr, [x8]
  405df0:	ldp	x0, x8, [x19, #16]
  405df4:	cmp	x8, x0
  405df8:	b.ne	405e08 <ferror@plt+0x3208>  // b.any
  405dfc:	ldrb	w9, [x19, #80]
  405e00:	orr	w9, w9, #0x2
  405e04:	strb	w9, [x19, #80]
  405e08:	ldr	x10, [x19, #48]
  405e0c:	ldr	x11, [x19, #8]
  405e10:	ldr	x9, [x19, #32]
  405e14:	add	x8, x10, x8
  405e18:	bic	x8, x8, x10
  405e1c:	sub	x10, x8, x11
  405e20:	sub	x11, x9, x11
  405e24:	cmp	x10, x11
  405e28:	str	x8, [x19, #24]
  405e2c:	b.ls	405e38 <ferror@plt+0x3238>  // b.plast
  405e30:	mov	x8, x9
  405e34:	str	x9, [x19, #24]
  405e38:	str	x8, [x19, #16]
  405e3c:	ldp	x20, x19, [sp, #32]
  405e40:	ldp	x22, x21, [sp, #16]
  405e44:	ldp	x29, x30, [sp], #48
  405e48:	b	40b10c <ferror@plt+0x850c>
  405e4c:	stp	x29, x30, [sp, #-64]!
  405e50:	stp	x24, x23, [sp, #16]
  405e54:	stp	x22, x21, [sp, #32]
  405e58:	stp	x20, x19, [sp, #48]
  405e5c:	ldr	x8, [x2]
  405e60:	mov	x20, x2
  405e64:	mov	x19, x0
  405e68:	mov	w2, #0x2                   	// #2
  405e6c:	mov	w3, #0x2                   	// #2
  405e70:	mov	x0, x8
  405e74:	mov	x29, sp
  405e78:	mov	w21, w1
  405e7c:	bl	407100 <ferror@plt+0x4500>
  405e80:	tbnz	w0, #0, 4060b8 <ferror@plt+0x34b8>
  405e84:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405e88:	ldr	w8, [x8, #1224]
  405e8c:	cbz	w8, 405ea4 <ferror@plt+0x32a4>
  405e90:	cmp	w21, #0x2
  405e94:	b.lt	405ec8 <ferror@plt+0x32c8>  // b.tstop
  405e98:	ldr	x8, [x20, #8]
  405e9c:	ldr	x20, [x8, #8]
  405ea0:	b	405ed0 <ferror@plt+0x32d0>
  405ea4:	cmp	w21, #0x1
  405ea8:	b.lt	4060cc <ferror@plt+0x34cc>  // b.tstop
  405eac:	ldr	x8, [x20]
  405eb0:	cmp	w21, #0x1
  405eb4:	ldr	x22, [x8, #8]
  405eb8:	b.ne	4060dc <ferror@plt+0x34dc>  // b.any
  405ebc:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x140c>
  405ec0:	add	x20, x20, #0xe97
  405ec4:	b	4060e4 <ferror@plt+0x34e4>
  405ec8:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x140c>
  405ecc:	add	x20, x20, #0xe97
  405ed0:	mov	x0, x20
  405ed4:	bl	402580 <strlen@plt>
  405ed8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405edc:	ldr	w8, [x8, #1240]
  405ee0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  405ee4:	mov	x21, x0
  405ee8:	add	x2, x2, #0xfe4
  405eec:	mov	w0, w8
  405ef0:	mov	w1, wzr
  405ef4:	bl	402d0c <ferror@plt+0x10c>
  405ef8:	sxtw	x22, w21
  405efc:	mov	x11, xzr
  405f00:	add	x8, x20, w21, sxtw
  405f04:	lsl	x12, x22, #32
  405f08:	mov	x10, #0xffffffff00000000    	// #-4294967296
  405f0c:	add	x9, x22, x11
  405f10:	mov	x23, x11
  405f14:	cmp	x9, #0x2
  405f18:	mov	x9, x12
  405f1c:	b.lt	405f38 <ferror@plt+0x3338>  // b.tstop
  405f20:	add	x11, x8, x23
  405f24:	ldurb	w12, [x11, #-1]
  405f28:	sub	x11, x23, #0x1
  405f2c:	cmp	w12, #0x58
  405f30:	add	x12, x9, x10
  405f34:	b.eq	405f0c <ferror@plt+0x330c>  // b.none
  405f38:	ldp	x0, x8, [x19, #24]
  405f3c:	add	x24, x21, x23
  405f40:	asr	x21, x9, #32
  405f44:	sub	x8, x8, x0
  405f48:	cmp	x8, x9, asr #32
  405f4c:	b.cs	405f60 <ferror@plt+0x3360>  // b.hs, b.nlast
  405f50:	mov	x0, x19
  405f54:	mov	x1, x21
  405f58:	bl	4159e4 <_obstack_newchunk@@Base>
  405f5c:	ldr	x0, [x19, #24]
  405f60:	mov	x1, x20
  405f64:	mov	x2, x21
  405f68:	bl	402550 <memcpy@plt>
  405f6c:	ldr	x8, [x19, #24]
  405f70:	add	x8, x8, x21
  405f74:	str	x8, [x19, #24]
  405f78:	bl	402710 <getpid@plt>
  405f7c:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  405f80:	cmp	w0, #0x0
  405f84:	mov	w8, #0xcccd                	// #52429
  405f88:	adrp	x10, 417000 <_obstack_memory_used@@Base+0x140c>
  405f8c:	add	x20, x20, #0x84e
  405f90:	movk	w8, #0xcccc, lsl #16
  405f94:	mov	w9, #0xa                   	// #10
  405f98:	cneg	w11, w0, mi  // mi = first
  405f9c:	add	x10, x10, #0xad6
  405fa0:	strb	wzr, [x20, #1]
  405fa4:	umull	x12, w11, w8
  405fa8:	lsr	x12, x12, #35
  405fac:	msub	w13, w12, w9, w11
  405fb0:	ldrb	w13, [x10, w13, uxtw]
  405fb4:	cmp	w11, #0x9
  405fb8:	mov	w11, w12
  405fbc:	strb	w13, [x20], #-1
  405fc0:	b.hi	405fa4 <ferror@plt+0x33a4>  // b.pmore
  405fc4:	tbnz	w0, #31, 405fd0 <ferror@plt+0x33d0>
  405fc8:	add	x20, x20, #0x1
  405fcc:	b	405fd8 <ferror@plt+0x33d8>
  405fd0:	mov	w8, #0x2d                  	// #45
  405fd4:	strb	w8, [x20]
  405fd8:	mov	x0, x20
  405fdc:	bl	402580 <strlen@plt>
  405fe0:	mov	x21, x0
  405fe4:	neg	x8, x23
  405fe8:	cmp	w8, w21
  405fec:	b.ge	406030 <ferror@plt+0x3430>  // b.tcont
  405ff0:	ldp	x0, x9, [x19, #24]
  405ff4:	sxtw	x22, w8
  405ff8:	add	x1, x22, #0x1
  405ffc:	sub	x8, x9, x0
  406000:	cmp	x8, x1
  406004:	b.cs	406014 <ferror@plt+0x3414>  // b.hs, b.nlast
  406008:	mov	x0, x19
  40600c:	bl	4159e4 <_obstack_newchunk@@Base>
  406010:	ldr	x0, [x19, #24]
  406014:	add	x8, x20, w21, sxtw
  406018:	sub	x1, x8, x22
  40601c:	mov	x2, x22
  406020:	bl	402550 <memcpy@plt>
  406024:	ldr	x8, [x19, #24]
  406028:	add	x8, x8, x22
  40602c:	b	4060ac <ferror@plt+0x34ac>
  406030:	sub	w8, w22, w21
  406034:	cmp	w8, w24
  406038:	b.le	406074 <ferror@plt+0x3474>
  40603c:	add	w22, w21, w23
  406040:	mov	w23, #0x30                  	// #48
  406044:	ldp	x8, x9, [x19, #24]
  406048:	cmp	x9, x8
  40604c:	b.ne	406060 <ferror@plt+0x3460>  // b.any
  406050:	mov	w1, #0x1                   	// #1
  406054:	mov	x0, x19
  406058:	bl	4159e4 <_obstack_newchunk@@Base>
  40605c:	ldr	x8, [x19, #24]
  406060:	add	x9, x8, #0x1
  406064:	adds	w22, w22, #0x1
  406068:	str	x9, [x19, #24]
  40606c:	strb	w23, [x8]
  406070:	b.cc	406044 <ferror@plt+0x3444>  // b.lo, b.ul, b.last
  406074:	ldp	x0, x8, [x19, #24]
  406078:	sxtw	x21, w21
  40607c:	add	x1, x21, #0x1
  406080:	sub	x8, x8, x0
  406084:	cmp	x8, x1
  406088:	b.cs	406098 <ferror@plt+0x3498>  // b.hs, b.nlast
  40608c:	mov	x0, x19
  406090:	bl	4159e4 <_obstack_newchunk@@Base>
  406094:	ldr	x0, [x19, #24]
  406098:	mov	x1, x20
  40609c:	mov	x2, x21
  4060a0:	bl	402550 <memcpy@plt>
  4060a4:	ldr	x8, [x19, #24]
  4060a8:	add	x8, x8, x21
  4060ac:	add	x9, x8, #0x1
  4060b0:	str	x9, [x19, #24]
  4060b4:	strb	wzr, [x8]
  4060b8:	ldp	x20, x19, [sp, #48]
  4060bc:	ldp	x22, x21, [sp, #32]
  4060c0:	ldp	x24, x23, [sp, #16]
  4060c4:	ldp	x29, x30, [sp], #64
  4060c8:	ret
  4060cc:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x140c>
  4060d0:	add	x20, x20, #0xe97
  4060d4:	mov	x22, x20
  4060d8:	b	4060e4 <ferror@plt+0x34e4>
  4060dc:	ldr	x8, [x20, #8]
  4060e0:	ldr	x20, [x8, #8]
  4060e4:	mov	x0, x20
  4060e8:	bl	402580 <strlen@plt>
  4060ec:	mov	x3, x0
  4060f0:	mov	x0, x19
  4060f4:	mov	x1, x22
  4060f8:	mov	x2, x20
  4060fc:	ldp	x20, x19, [sp, #48]
  406100:	ldp	x22, x21, [sp, #32]
  406104:	ldp	x24, x23, [sp, #16]
  406108:	ldp	x29, x30, [sp], #64
  40610c:	b	407564 <ferror@plt+0x4964>
  406110:	stp	x29, x30, [sp, #-48]!
  406114:	stp	x22, x21, [sp, #16]
  406118:	stp	x20, x19, [sp, #32]
  40611c:	ldr	x8, [x2]
  406120:	mov	x21, x2
  406124:	mov	x19, x0
  406128:	mov	w2, #0x2                   	// #2
  40612c:	mov	w3, #0x2                   	// #2
  406130:	mov	x0, x8
  406134:	mov	x29, sp
  406138:	mov	w22, w1
  40613c:	bl	407100 <ferror@plt+0x4500>
  406140:	tbz	w0, #0, 406154 <ferror@plt+0x3554>
  406144:	ldp	x20, x19, [sp, #32]
  406148:	ldp	x22, x21, [sp, #16]
  40614c:	ldp	x29, x30, [sp], #48
  406150:	ret
  406154:	cmp	w22, #0x1
  406158:	b.lt	406178 <ferror@plt+0x3578>  // b.tstop
  40615c:	ldr	x8, [x21]
  406160:	cmp	w22, #0x1
  406164:	ldr	x20, [x8, #8]
  406168:	b.ne	406188 <ferror@plt+0x3588>  // b.any
  40616c:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x140c>
  406170:	add	x21, x21, #0xe97
  406174:	b	406190 <ferror@plt+0x3590>
  406178:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x140c>
  40617c:	add	x21, x21, #0xe97
  406180:	mov	x20, x21
  406184:	b	406190 <ferror@plt+0x3590>
  406188:	ldr	x8, [x21, #8]
  40618c:	ldr	x21, [x8, #8]
  406190:	mov	x0, x21
  406194:	bl	402580 <strlen@plt>
  406198:	mov	x3, x0
  40619c:	mov	x0, x19
  4061a0:	mov	x1, x20
  4061a4:	mov	x2, x21
  4061a8:	ldp	x20, x19, [sp, #32]
  4061ac:	ldp	x22, x21, [sp, #16]
  4061b0:	ldp	x29, x30, [sp], #48
  4061b4:	b	407564 <ferror@plt+0x4964>
  4061b8:	sub	sp, sp, #0xc0
  4061bc:	stp	x29, x30, [sp, #96]
  4061c0:	stp	x28, x27, [sp, #112]
  4061c4:	stp	x26, x25, [sp, #128]
  4061c8:	stp	x24, x23, [sp, #144]
  4061cc:	stp	x22, x21, [sp, #160]
  4061d0:	stp	x20, x19, [sp, #176]
  4061d4:	ldr	x8, [x2]
  4061d8:	mov	x20, x2
  4061dc:	mov	x19, x0
  4061e0:	mov	w2, #0x3                   	// #3
  4061e4:	mov	w3, #0x4                   	// #4
  4061e8:	mov	x0, x8
  4061ec:	add	x29, sp, #0x60
  4061f0:	mov	w22, w1
  4061f4:	bl	407100 <ferror@plt+0x4500>
  4061f8:	tbz	w0, #0, 40625c <ferror@plt+0x365c>
  4061fc:	cmp	w22, #0x2
  406200:	b.ne	40646c <ferror@plt+0x386c>  // b.any
  406204:	ldr	x8, [x20, #8]
  406208:	ldr	x22, [x8, #8]
  40620c:	mov	x0, x22
  406210:	bl	402580 <strlen@plt>
  406214:	mov	x21, x0
  406218:	ldp	x0, x8, [x19, #24]
  40621c:	sub	x8, x8, x0
  406220:	cmp	x8, x21
  406224:	b.cs	406240 <ferror@plt+0x3640>  // b.hs, b.nlast
  406228:	mov	x0, x19
  40622c:	mov	x1, x21
  406230:	bl	4159e4 <_obstack_newchunk@@Base>
  406234:	ldr	x8, [x20, #8]
  406238:	ldr	x0, [x19, #24]
  40623c:	ldr	x22, [x8, #8]
  406240:	mov	x1, x22
  406244:	mov	x2, x21
  406248:	bl	402550 <memcpy@plt>
  40624c:	ldr	x8, [x19, #24]
  406250:	add	x8, x8, x21
  406254:	str	x8, [x19, #24]
  406258:	b	40646c <ferror@plt+0x386c>
  40625c:	ldr	x8, [x20, #16]
  406260:	ldr	x21, [x8, #8]
  406264:	stp	xzr, xzr, [sp, #32]
  406268:	stp	xzr, xzr, [sp, #64]
  40626c:	stp	xzr, xzr, [sp, #16]
  406270:	mov	x0, x21
  406274:	bl	402580 <strlen@plt>
  406278:	mov	x1, x0
  40627c:	add	x2, sp, #0x20
  406280:	mov	x0, x21
  406284:	bl	402930 <re_compile_pattern@plt>
  406288:	cbz	x0, 4062b4 <ferror@plt+0x36b4>
  40628c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  406290:	mov	x4, x0
  406294:	ldr	w0, [x8, #1240]
  406298:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  40629c:	add	x2, x2, #0xa4f
  4062a0:	mov	w1, wzr
  4062a4:	mov	x3, x21
  4062a8:	bl	402d0c <ferror@plt+0x10c>
  4062ac:	ldr	x0, [sp, #32]
  4062b0:	b	406468 <ferror@plt+0x3868>
  4062b4:	ldr	x8, [x20, #8]
  4062b8:	ldr	x23, [x8, #8]
  4062bc:	mov	x0, x23
  4062c0:	bl	402580 <strlen@plt>
  4062c4:	mov	x24, x0
  4062c8:	tbnz	w24, #31, 40642c <ferror@plt+0x382c>
  4062cc:	mov	w25, wzr
  4062d0:	sxtw	x27, w24
  4062d4:	sub	x26, x27, w25, sxtw
  4062d8:	add	x0, sp, #0x20
  4062dc:	add	x5, sp, #0x8
  4062e0:	mov	x1, x23
  4062e4:	mov	w2, w24
  4062e8:	mov	w3, w25
  4062ec:	mov	w4, w26
  4062f0:	sxtw	x28, w25
  4062f4:	bl	402870 <re_search@plt>
  4062f8:	tbnz	w0, #31, 4063c4 <ferror@plt+0x37c4>
  4062fc:	cmp	w0, w28
  406300:	b.le	406348 <ferror@plt+0x3748>
  406304:	ldp	x8, x9, [x19, #24]
  406308:	sxtw	x10, w0
  40630c:	sub	x25, x10, x28
  406310:	sub	x9, x9, x8
  406314:	cmp	x9, x25
  406318:	b.cs	40632c <ferror@plt+0x372c>  // b.hs, b.nlast
  40631c:	mov	x0, x19
  406320:	mov	x1, x25
  406324:	bl	4159e4 <_obstack_newchunk@@Base>
  406328:	ldr	x8, [x19, #24]
  40632c:	add	x1, x23, x28
  406330:	mov	x0, x8
  406334:	mov	x2, x25
  406338:	bl	402550 <memcpy@plt>
  40633c:	ldr	x8, [x19, #24]
  406340:	add	x8, x8, x25
  406344:	str	x8, [x19, #24]
  406348:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  40634c:	cmp	w22, #0x4
  406350:	add	x2, x2, #0xe97
  406354:	b.lt	406360 <ferror@plt+0x3760>  // b.tstop
  406358:	ldr	x8, [x20, #24]
  40635c:	ldr	x2, [x8, #8]
  406360:	add	x3, sp, #0x8
  406364:	mov	x0, x19
  406368:	mov	x1, x23
  40636c:	bl	4077b0 <ferror@plt+0x4bb0>
  406370:	ldp	x9, x8, [sp, #16]
  406374:	ldr	w25, [x8]
  406378:	ldr	w8, [x9]
  40637c:	cmp	w8, w25
  406380:	b.ne	4063b8 <ferror@plt+0x37b8>  // b.any
  406384:	ldp	x8, x9, [x19, #24]
  406388:	sxtw	x26, w25
  40638c:	cmp	x9, x8
  406390:	b.ne	4063a4 <ferror@plt+0x37a4>  // b.any
  406394:	mov	w1, #0x1                   	// #1
  406398:	mov	x0, x19
  40639c:	bl	4159e4 <_obstack_newchunk@@Base>
  4063a0:	ldr	x8, [x19, #24]
  4063a4:	ldrb	w9, [x23, x26]
  4063a8:	add	w25, w25, #0x1
  4063ac:	add	x10, x8, #0x1
  4063b0:	str	x10, [x19, #24]
  4063b4:	strb	w9, [x8]
  4063b8:	cmp	w25, w24
  4063bc:	b.le	4062d4 <ferror@plt+0x36d4>
  4063c0:	b	40642c <ferror@plt+0x382c>
  4063c4:	cmn	w0, #0x2
  4063c8:	b.ne	4063ec <ferror@plt+0x37ec>  // b.any
  4063cc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4063d0:	ldr	w0, [x8, #1240]
  4063d4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  4063d8:	add	x2, x2, #0x24
  4063dc:	mov	w1, wzr
  4063e0:	mov	x3, x21
  4063e4:	bl	402d0c <ferror@plt+0x10c>
  4063e8:	b	40642c <ferror@plt+0x382c>
  4063ec:	cmp	w28, w24
  4063f0:	b.ge	40642c <ferror@plt+0x382c>  // b.tcont
  4063f4:	ldp	x0, x8, [x19, #24]
  4063f8:	sub	x8, x8, x0
  4063fc:	cmp	x8, x26
  406400:	b.cs	406414 <ferror@plt+0x3814>  // b.hs, b.nlast
  406404:	mov	x0, x19
  406408:	mov	x1, x26
  40640c:	bl	4159e4 <_obstack_newchunk@@Base>
  406410:	ldr	x0, [x19, #24]
  406414:	add	x1, x23, x28
  406418:	mov	x2, x26
  40641c:	bl	402550 <memcpy@plt>
  406420:	ldr	x8, [x19, #24]
  406424:	add	x8, x8, x26
  406428:	str	x8, [x19, #24]
  40642c:	ldp	x8, x9, [x19, #24]
  406430:	cmp	x9, x8
  406434:	b.ne	406448 <ferror@plt+0x3848>  // b.any
  406438:	mov	w1, #0x1                   	// #1
  40643c:	mov	x0, x19
  406440:	bl	4159e4 <_obstack_newchunk@@Base>
  406444:	ldr	x8, [x19, #24]
  406448:	add	x9, x8, #0x1
  40644c:	add	x0, sp, #0x20
  406450:	str	x9, [x19, #24]
  406454:	strb	wzr, [x8]
  406458:	bl	402b30 <regfree@plt>
  40645c:	ldr	x0, [sp, #16]
  406460:	bl	4029f0 <free@plt>
  406464:	ldr	x0, [sp, #24]
  406468:	bl	4029f0 <free@plt>
  40646c:	ldp	x20, x19, [sp, #176]
  406470:	ldp	x22, x21, [sp, #160]
  406474:	ldp	x24, x23, [sp, #144]
  406478:	ldp	x26, x25, [sp, #128]
  40647c:	ldp	x28, x27, [sp, #112]
  406480:	ldp	x29, x30, [sp, #96]
  406484:	add	sp, sp, #0xc0
  406488:	ret
  40648c:	stp	x29, x30, [sp, #-32]!
  406490:	cmp	w1, #0x2
  406494:	stp	x20, x19, [sp, #16]
  406498:	mov	x29, sp
  40649c:	b.ge	4064d4 <ferror@plt+0x38d4>  // b.tcont
  4064a0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4064a4:	ldr	w8, [x8, #1236]
  4064a8:	cbnz	w8, 4064f8 <ferror@plt+0x38f8>
  4064ac:	ldr	x8, [x2]
  4064b0:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4064b4:	ldr	w0, [x9, #1240]
  4064b8:	ldp	x20, x19, [sp, #16]
  4064bc:	ldr	x3, [x8, #8]
  4064c0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  4064c4:	add	x2, x2, #0xc59
  4064c8:	mov	w1, wzr
  4064cc:	ldp	x29, x30, [sp], #32
  4064d0:	b	402d0c <ferror@plt+0x10c>
  4064d4:	mov	w8, w1
  4064d8:	add	x19, x2, #0x8
  4064dc:	sub	x20, x8, #0x1
  4064e0:	ldr	x8, [x19], #8
  4064e4:	mov	w1, #0x4                   	// #4
  4064e8:	ldr	x0, [x8, #8]
  4064ec:	bl	40ee5c <ferror@plt+0xc25c>
  4064f0:	subs	x20, x20, #0x1
  4064f4:	b.ne	4064e0 <ferror@plt+0x38e0>  // b.any
  4064f8:	ldp	x20, x19, [sp, #16]
  4064fc:	ldp	x29, x30, [sp], #32
  406500:	ret
  406504:	mov	x8, x2
  406508:	mov	w2, #0x3                   	// #3
  40650c:	mov	w0, w1
  406510:	mov	x1, x8
  406514:	b	40727c <ferror@plt+0x467c>
  406518:	sub	sp, sp, #0xa0
  40651c:	stp	x29, x30, [sp, #96]
  406520:	stp	x22, x21, [sp, #128]
  406524:	stp	x20, x19, [sp, #144]
  406528:	ldr	x8, [x2]
  40652c:	mov	x20, x2
  406530:	mov	x19, x0
  406534:	mov	w2, #0x3                   	// #3
  406538:	mov	w3, #0x4                   	// #4
  40653c:	mov	x0, x8
  406540:	str	x23, [sp, #112]
  406544:	add	x29, sp, #0x60
  406548:	mov	w21, w1
  40654c:	bl	407100 <ferror@plt+0x4500>
  406550:	tbz	w0, #0, 40656c <ferror@plt+0x396c>
  406554:	cmp	w21, #0x2
  406558:	b.ne	406664 <ferror@plt+0x3a64>  // b.any
  40655c:	mov	x0, x19
  406560:	mov	w1, wzr
  406564:	bl	403eac <ferror@plt+0x12ac>
  406568:	b	406664 <ferror@plt+0x3a64>
  40656c:	ldp	x8, x9, [x20, #8]
  406570:	ldr	x22, [x9, #8]
  406574:	ldr	x23, [x8, #8]
  406578:	stp	xzr, xzr, [sp, #32]
  40657c:	stp	xzr, xzr, [sp, #64]
  406580:	mov	x0, x22
  406584:	stp	xzr, xzr, [sp, #16]
  406588:	bl	402580 <strlen@plt>
  40658c:	mov	x1, x0
  406590:	add	x2, sp, #0x20
  406594:	mov	x0, x22
  406598:	bl	402930 <re_compile_pattern@plt>
  40659c:	cbz	x0, 4065c4 <ferror@plt+0x39c4>
  4065a0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4065a4:	mov	x4, x0
  4065a8:	ldr	w0, [x8, #1240]
  4065ac:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  4065b0:	add	x2, x2, #0xd8
  4065b4:	mov	w1, wzr
  4065b8:	mov	x3, x22
  4065bc:	bl	402d0c <ferror@plt+0x10c>
  4065c0:	b	40664c <ferror@plt+0x3a4c>
  4065c4:	mov	x0, x23
  4065c8:	bl	402580 <strlen@plt>
  4065cc:	mov	x2, x0
  4065d0:	cmp	w21, #0x3
  4065d4:	add	x8, sp, #0x8
  4065d8:	csel	x5, xzr, x8, eq  // eq = none
  4065dc:	add	x0, sp, #0x20
  4065e0:	mov	x1, x23
  4065e4:	mov	w3, wzr
  4065e8:	mov	w4, w2
  4065ec:	bl	402870 <re_search@plt>
  4065f0:	cmn	w0, #0x2
  4065f4:	b.ne	406618 <ferror@plt+0x3a18>  // b.any
  4065f8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4065fc:	ldr	w0, [x8, #1240]
  406600:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  406604:	add	x2, x2, #0x24
  406608:	mov	w1, wzr
  40660c:	mov	x3, x22
  406610:	bl	402d0c <ferror@plt+0x10c>
  406614:	b	40664c <ferror@plt+0x3a4c>
  406618:	mov	w1, w0
  40661c:	cmp	w21, #0x3
  406620:	b.ne	406630 <ferror@plt+0x3a30>  // b.any
  406624:	mov	x0, x19
  406628:	bl	403eac <ferror@plt+0x12ac>
  40662c:	b	40664c <ferror@plt+0x3a4c>
  406630:	tbnz	w1, #31, 40664c <ferror@plt+0x3a4c>
  406634:	ldr	x8, [x20, #24]
  406638:	add	x3, sp, #0x8
  40663c:	mov	x0, x19
  406640:	mov	x1, x23
  406644:	ldr	x2, [x8, #8]
  406648:	bl	4077b0 <ferror@plt+0x4bb0>
  40664c:	add	x0, sp, #0x20
  406650:	bl	402b30 <regfree@plt>
  406654:	ldr	x0, [sp, #16]
  406658:	bl	4029f0 <free@plt>
  40665c:	ldr	x0, [sp, #24]
  406660:	bl	4029f0 <free@plt>
  406664:	ldp	x20, x19, [sp, #144]
  406668:	ldp	x22, x21, [sp, #128]
  40666c:	ldr	x23, [sp, #112]
  406670:	ldp	x29, x30, [sp, #96]
  406674:	add	sp, sp, #0xa0
  406678:	ret
  40667c:	subs	w1, w1, #0x1
  406680:	b.gt	406694 <ferror@plt+0x3a94>
  406684:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  406688:	ldr	w8, [x8, #1236]
  40668c:	cbz	w8, 4066a8 <ferror@plt+0x3aa8>
  406690:	ret
  406694:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x140c>
  406698:	add	x2, x2, #0x8
  40669c:	add	x3, x3, #0xb32
  4066a0:	mov	w4, #0x1                   	// #1
  4066a4:	b	403f70 <ferror@plt+0x1370>
  4066a8:	ldr	x8, [x2]
  4066ac:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4066b0:	ldr	w0, [x9, #1240]
  4066b4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  4066b8:	ldr	x3, [x8, #8]
  4066bc:	add	x2, x2, #0xc59
  4066c0:	mov	w1, wzr
  4066c4:	b	402d0c <ferror@plt+0x10c>
  4066c8:	mov	x8, x2
  4066cc:	mov	w2, #0x1                   	// #1
  4066d0:	mov	w0, w1
  4066d4:	mov	x1, x8
  4066d8:	b	407490 <ferror@plt+0x4890>
  4066dc:	stp	x29, x30, [sp, #-64]!
  4066e0:	mov	x29, sp
  4066e4:	stp	x22, x21, [sp, #32]
  4066e8:	stp	x20, x19, [sp, #48]
  4066ec:	str	wzr, [x29, #28]
  4066f0:	ldr	x8, [x2]
  4066f4:	mov	x20, x2
  4066f8:	mov	x19, x0
  4066fc:	mov	w2, #0x3                   	// #3
  406700:	mov	w3, #0x4                   	// #4
  406704:	mov	x0, x8
  406708:	str	x23, [sp, #16]
  40670c:	mov	w21, w1
  406710:	bl	407100 <ferror@plt+0x4500>
  406714:	tbz	w0, #0, 406774 <ferror@plt+0x3b74>
  406718:	cmp	w21, #0x2
  40671c:	b.ne	406874 <ferror@plt+0x3c74>  // b.any
  406720:	ldr	x8, [x20, #8]
  406724:	ldr	x22, [x8, #8]
  406728:	mov	x0, x22
  40672c:	bl	402580 <strlen@plt>
  406730:	mov	x21, x0
  406734:	ldp	x0, x8, [x19, #24]
  406738:	sub	x8, x8, x0
  40673c:	cmp	x8, x21
  406740:	b.cs	40675c <ferror@plt+0x3b5c>  // b.hs, b.nlast
  406744:	mov	x0, x19
  406748:	mov	x1, x21
  40674c:	bl	4159e4 <_obstack_newchunk@@Base>
  406750:	ldr	x8, [x20, #8]
  406754:	ldr	x0, [x19, #24]
  406758:	ldr	x22, [x8, #8]
  40675c:	mov	x1, x22
  406760:	mov	x2, x21
  406764:	bl	402550 <memcpy@plt>
  406768:	ldr	x8, [x19, #24]
  40676c:	add	x8, x8, x21
  406770:	b	406870 <ferror@plt+0x3c70>
  406774:	cmp	w21, #0x2
  406778:	b.lt	406788 <ferror@plt+0x3b88>  // b.tstop
  40677c:	ldr	x8, [x20, #8]
  406780:	ldr	x0, [x8, #8]
  406784:	b	406790 <ferror@plt+0x3b90>
  406788:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  40678c:	add	x0, x0, #0xe97
  406790:	bl	402580 <strlen@plt>
  406794:	mov	x22, x0
  406798:	str	w22, [x29, #24]
  40679c:	ldr	x0, [x20]
  4067a0:	cmp	w21, #0x2
  4067a4:	b.le	4067b4 <ferror@plt+0x3bb4>
  4067a8:	ldr	x8, [x20, #16]
  4067ac:	ldr	x1, [x8, #8]
  4067b0:	b	4067bc <ferror@plt+0x3bbc>
  4067b4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  4067b8:	add	x1, x1, #0xe97
  4067bc:	add	x2, x29, #0x1c
  4067c0:	bl	40719c <ferror@plt+0x459c>
  4067c4:	tbz	w0, #0, 406874 <ferror@plt+0x3c74>
  4067c8:	cmp	w21, #0x4
  4067cc:	mov	w8, w22
  4067d0:	b.lt	4067f0 <ferror@plt+0x3bf0>  // b.tstop
  4067d4:	ldr	x8, [x20, #24]
  4067d8:	ldr	x0, [x20]
  4067dc:	add	x2, x29, #0x18
  4067e0:	ldr	x1, [x8, #8]
  4067e4:	bl	40719c <ferror@plt+0x459c>
  4067e8:	tbz	w0, #0, 406874 <ferror@plt+0x3c74>
  4067ec:	ldr	w8, [x29, #24]
  4067f0:	ldr	w23, [x29, #28]
  4067f4:	cmp	w23, w22
  4067f8:	b.ge	406874 <ferror@plt+0x3c74>  // b.tcont
  4067fc:	tbnz	w23, #31, 406874 <ferror@plt+0x3c74>
  406800:	cmp	w8, #0x1
  406804:	b.lt	406874 <ferror@plt+0x3c74>  // b.tstop
  406808:	add	w9, w8, w23
  40680c:	cmp	w9, w22
  406810:	b.le	40681c <ferror@plt+0x3c1c>
  406814:	sub	w8, w22, w23
  406818:	str	w8, [x29, #24]
  40681c:	ldp	x0, x9, [x19, #24]
  406820:	sxtw	x22, w8
  406824:	sub	x9, x9, x0
  406828:	cmp	x9, w8, sxtw
  40682c:	b.cs	406840 <ferror@plt+0x3c40>  // b.hs, b.nlast
  406830:	mov	x0, x19
  406834:	mov	x1, x22
  406838:	bl	4159e4 <_obstack_newchunk@@Base>
  40683c:	ldr	x0, [x19, #24]
  406840:	cmp	w21, #0x2
  406844:	b.lt	406854 <ferror@plt+0x3c54>  // b.tstop
  406848:	ldr	x8, [x20, #8]
  40684c:	ldr	x8, [x8, #8]
  406850:	b	40685c <ferror@plt+0x3c5c>
  406854:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x140c>
  406858:	add	x8, x8, #0xe97
  40685c:	add	x1, x8, x23
  406860:	mov	x2, x22
  406864:	bl	402550 <memcpy@plt>
  406868:	ldr	x8, [x19, #24]
  40686c:	add	x8, x8, x22
  406870:	str	x8, [x19, #24]
  406874:	ldp	x20, x19, [sp, #48]
  406878:	ldp	x22, x21, [sp, #32]
  40687c:	ldr	x23, [sp, #16]
  406880:	ldp	x29, x30, [sp], #64
  406884:	ret
  406888:	sub	sp, sp, #0x70
  40688c:	stp	x22, x21, [sp, #80]
  406890:	mov	w22, w1
  406894:	cmp	w1, #0x2
  406898:	mov	x21, x2
  40689c:	stp	x29, x30, [sp, #64]
  4068a0:	stp	x20, x19, [sp, #96]
  4068a4:	add	x29, sp, #0x40
  4068a8:	b.lt	4068b8 <ferror@plt+0x3cb8>  // b.tstop
  4068ac:	ldr	x8, [x21, #8]
  4068b0:	ldr	x19, [x8, #8]
  4068b4:	b	4068c0 <ferror@plt+0x3cc0>
  4068b8:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x140c>
  4068bc:	add	x19, x19, #0xe97
  4068c0:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x140c>
  4068c4:	add	x8, x8, #0xa18
  4068c8:	ldp	q0, q1, [x8]
  4068cc:	mov	w2, #0x2                   	// #2
  4068d0:	mov	w3, #0x2                   	// #2
  4068d4:	mov	w1, w22
  4068d8:	stp	q0, q1, [sp, #16]
  4068dc:	ldr	x0, [x21]
  4068e0:	bl	407100 <ferror@plt+0x4500>
  4068e4:	tbnz	w0, #0, 406918 <ferror@plt+0x3d18>
  4068e8:	ldrb	w8, [x19]
  4068ec:	cbz	w8, 406918 <ferror@plt+0x3d18>
  4068f0:	bl	407ec4 <ferror@plt+0x52c4>
  4068f4:	str	x19, [sp, #32]
  4068f8:	bl	402b80 <__errno_location@plt>
  4068fc:	mov	x20, x0
  406900:	cmp	w22, #0x1
  406904:	str	wzr, [x0]
  406908:	b.lt	406920 <ferror@plt+0x3d20>  // b.tstop
  40690c:	ldr	x8, [x21]
  406910:	ldr	x0, [x8, #8]
  406914:	b	406928 <ferror@plt+0x3d28>
  406918:	mov	w0, wzr
  40691c:	b	40699c <ferror@plt+0x3d9c>
  406920:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  406924:	add	x0, x0, #0xe97
  406928:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  40692c:	sub	x8, x29, #0x4
  406930:	add	x1, x1, #0xf0b
  406934:	add	x2, sp, #0x10
  406938:	mov	w7, #0x1                   	// #1
  40693c:	mov	w3, wzr
  406940:	mov	w4, wzr
  406944:	mov	w5, wzr
  406948:	mov	w6, wzr
  40694c:	str	x8, [sp, #8]
  406950:	strb	wzr, [sp]
  406954:	bl	410b40 <ferror@plt+0xdf40>
  406958:	ldur	w8, [x29, #-4]
  40695c:	cbz	w8, 406970 <ferror@plt+0x3d70>
  406960:	cmp	w0, #0x7f
  406964:	b.ne	4069b8 <ferror@plt+0x3db8>  // b.any
  406968:	lsl	w0, w8, #8
  40696c:	b	40699c <ferror@plt+0x3d9c>
  406970:	cmp	w0, #0x7f
  406974:	b.ne	40699c <ferror@plt+0x3d9c>  // b.any
  406978:	ldr	w1, [x20]
  40697c:	cbz	w1, 406998 <ferror@plt+0x3d98>
  406980:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  406984:	ldr	w0, [x8, #1240]
  406988:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  40698c:	add	x2, x2, #0xf13
  406990:	mov	x3, x19
  406994:	bl	402d0c <ferror@plt+0x10c>
  406998:	mov	w0, #0x7f                  	// #127
  40699c:	ldp	x20, x19, [sp, #96]
  4069a0:	ldp	x22, x21, [sp, #80]
  4069a4:	ldp	x29, x30, [sp, #64]
  4069a8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4069ac:	str	w0, [x8, #2128]
  4069b0:	add	sp, sp, #0x70
  4069b4:	ret
  4069b8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  4069bc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  4069c0:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x240c>
  4069c4:	add	x0, x0, #0xf3c
  4069c8:	add	x1, x1, #0xe1d
  4069cc:	add	x3, x3, #0xf9
  4069d0:	mov	w2, #0x3cf                 	// #975
  4069d4:	bl	402b70 <__assert_fail@plt>
  4069d8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4069dc:	ldr	w1, [x8, #2128]
  4069e0:	b	403eac <ferror@plt+0x12ac>
  4069e4:	cmp	w1, #0x1
  4069e8:	b.ne	4069fc <ferror@plt+0x3dfc>  // b.any
  4069ec:	adrp	x0, 407000 <ferror@plt+0x4400>
  4069f0:	add	x0, x0, #0xa38
  4069f4:	mov	x1, xzr
  4069f8:	b	40f148 <ferror@plt+0xc548>
  4069fc:	stp	x29, x30, [sp, #-32]!
  406a00:	cmp	w1, #0x2
  406a04:	stp	x20, x19, [sp, #16]
  406a08:	mov	x29, sp
  406a0c:	b.lt	406a5c <ferror@plt+0x3e5c>  // b.tstop
  406a10:	mov	w8, w1
  406a14:	add	x19, x2, #0x8
  406a18:	sub	x20, x8, #0x1
  406a1c:	ldr	x8, [x19]
  406a20:	mov	w1, wzr
  406a24:	ldr	x0, [x8, #8]
  406a28:	bl	40ee5c <ferror@plt+0xc25c>
  406a2c:	cbz	x0, 406a50 <ferror@plt+0x3e50>
  406a30:	ldrb	w8, [x0, #8]
  406a34:	ldr	w9, [x0, #24]
  406a38:	and	w8, w8, #0xfe
  406a3c:	strb	w8, [x0, #8]
  406a40:	cbnz	w9, 406a50 <ferror@plt+0x3e50>
  406a44:	ldr	x0, [x0, #16]
  406a48:	mov	w1, #0x4                   	// #4
  406a4c:	bl	40ee5c <ferror@plt+0xc25c>
  406a50:	subs	x20, x20, #0x1
  406a54:	add	x19, x19, #0x8
  406a58:	b.ne	406a1c <ferror@plt+0x3e1c>  // b.any
  406a5c:	ldp	x20, x19, [sp, #16]
  406a60:	ldp	x29, x30, [sp], #32
  406a64:	ret
  406a68:	stp	x29, x30, [sp, #-48]!
  406a6c:	stp	x20, x19, [sp, #32]
  406a70:	cmp	w1, #0x1
  406a74:	mov	x19, x0
  406a78:	str	x21, [sp, #16]
  406a7c:	mov	x29, sp
  406a80:	b.ne	406aa0 <ferror@plt+0x3ea0>  // b.any
  406a84:	mov	x1, x19
  406a88:	ldp	x20, x19, [sp, #32]
  406a8c:	ldr	x21, [sp, #16]
  406a90:	adrp	x0, 407000 <ferror@plt+0x4400>
  406a94:	add	x0, x0, #0xa38
  406a98:	ldp	x29, x30, [sp], #48
  406a9c:	b	40f148 <ferror@plt+0xc548>
  406aa0:	cmp	w1, #0x2
  406aa4:	b.lt	406aec <ferror@plt+0x3eec>  // b.tstop
  406aa8:	mov	w8, w1
  406aac:	add	x20, x2, #0x8
  406ab0:	sub	x21, x8, #0x1
  406ab4:	ldr	x8, [x20]
  406ab8:	mov	w1, wzr
  406abc:	ldr	x0, [x8, #8]
  406ac0:	bl	40ee5c <ferror@plt+0xc25c>
  406ac4:	cbnz	x0, 406ad8 <ferror@plt+0x3ed8>
  406ac8:	ldr	x8, [x20]
  406acc:	mov	w1, #0x1                   	// #1
  406ad0:	ldr	x0, [x8, #8]
  406ad4:	bl	40ee5c <ferror@plt+0xc25c>
  406ad8:	mov	x1, x19
  406adc:	bl	407a38 <ferror@plt+0x4e38>
  406ae0:	subs	x21, x21, #0x1
  406ae4:	add	x20, x20, #0x8
  406ae8:	b.ne	406ab4 <ferror@plt+0x3eb4>  // b.any
  406aec:	ldp	x20, x19, [sp, #32]
  406af0:	ldr	x21, [sp, #16]
  406af4:	ldp	x29, x30, [sp], #48
  406af8:	ret
  406afc:	stp	x29, x30, [sp, #-80]!
  406b00:	stp	x28, x25, [sp, #16]
  406b04:	stp	x24, x23, [sp, #32]
  406b08:	stp	x22, x21, [sp, #48]
  406b0c:	stp	x20, x19, [sp, #64]
  406b10:	mov	x29, sp
  406b14:	sub	sp, sp, #0x200
  406b18:	mov	x23, x2
  406b1c:	mov	w24, w1
  406b20:	cmp	w1, #0x2
  406b24:	mov	x19, x0
  406b28:	b.lt	406b48 <ferror@plt+0x3f48>  // b.tstop
  406b2c:	ldr	x8, [x23, #8]
  406b30:	cmp	w24, #0x2
  406b34:	ldr	x22, [x8, #8]
  406b38:	b.ne	406b58 <ferror@plt+0x3f58>  // b.any
  406b3c:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x140c>
  406b40:	add	x20, x20, #0xe97
  406b44:	b	406b60 <ferror@plt+0x3f60>
  406b48:	adrp	x22, 417000 <_obstack_memory_used@@Base+0x140c>
  406b4c:	add	x22, x22, #0xe97
  406b50:	mov	x20, x22
  406b54:	b	406b60 <ferror@plt+0x3f60>
  406b58:	ldr	x8, [x23, #16]
  406b5c:	ldr	x20, [x8, #8]
  406b60:	ldr	x0, [x23]
  406b64:	mov	w2, #0x3                   	// #3
  406b68:	mov	w3, #0x4                   	// #4
  406b6c:	mov	w1, w24
  406b70:	bl	407100 <ferror@plt+0x4500>
  406b74:	tbnz	w0, #0, 406b9c <ferror@plt+0x3f9c>
  406b78:	ldrb	w8, [x22]
  406b7c:	cbz	w8, 406b9c <ferror@plt+0x3f9c>
  406b80:	ldrb	w8, [x20]
  406b84:	cbz	w8, 406b9c <ferror@plt+0x3f9c>
  406b88:	cmp	w24, #0x4
  406b8c:	b.lt	406c04 <ferror@plt+0x4004>  // b.tstop
  406b90:	ldr	x8, [x23, #24]
  406b94:	ldr	x21, [x8, #8]
  406b98:	b	406c0c <ferror@plt+0x400c>
  406b9c:	cmp	w24, #0x2
  406ba0:	b.lt	406be8 <ferror@plt+0x3fe8>  // b.tstop
  406ba4:	mov	x0, x22
  406ba8:	bl	402580 <strlen@plt>
  406bac:	mov	x20, x0
  406bb0:	ldp	x0, x8, [x19, #24]
  406bb4:	sub	x8, x8, x0
  406bb8:	cmp	x8, x20
  406bbc:	b.cs	406bd0 <ferror@plt+0x3fd0>  // b.hs, b.nlast
  406bc0:	mov	x0, x19
  406bc4:	mov	x1, x20
  406bc8:	bl	4159e4 <_obstack_newchunk@@Base>
  406bcc:	ldr	x0, [x19, #24]
  406bd0:	mov	x1, x22
  406bd4:	mov	x2, x20
  406bd8:	bl	402550 <memcpy@plt>
  406bdc:	ldr	x8, [x19, #24]
  406be0:	add	x8, x8, x20
  406be4:	str	x8, [x19, #24]
  406be8:	add	sp, sp, #0x200
  406bec:	ldp	x20, x19, [sp, #64]
  406bf0:	ldp	x22, x21, [sp, #48]
  406bf4:	ldp	x24, x23, [sp, #32]
  406bf8:	ldp	x28, x25, [sp, #16]
  406bfc:	ldp	x29, x30, [sp], #80
  406c00:	ret
  406c04:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x140c>
  406c08:	add	x21, x21, #0xe97
  406c0c:	mov	w1, #0x2d                  	// #45
  406c10:	mov	x0, x21
  406c14:	bl	402a50 <strchr@plt>
  406c18:	cbz	x0, 406c38 <ferror@plt+0x4038>
  406c1c:	mov	x0, x21
  406c20:	mov	x1, x19
  406c24:	bl	407a6c <ferror@plt+0x4e6c>
  406c28:	cbz	x0, 406eec <ferror@plt+0x42ec>
  406c2c:	ldrb	w8, [x0]
  406c30:	mov	x21, x0
  406c34:	cbz	w8, 406eec <ferror@plt+0x42ec>
  406c38:	ldrb	w25, [x20, #1]
  406c3c:	cbz	w25, 406c98 <ferror@plt+0x4098>
  406c40:	ldrb	w8, [x20, #2]
  406c44:	cbz	w8, 406c98 <ferror@plt+0x4098>
  406c48:	mov	w1, #0x2d                  	// #45
  406c4c:	mov	x0, x20
  406c50:	bl	402a50 <strchr@plt>
  406c54:	cbz	x0, 406de0 <ferror@plt+0x41e0>
  406c58:	mov	x0, x20
  406c5c:	mov	x1, x19
  406c60:	bl	407a6c <ferror@plt+0x4e6c>
  406c64:	cbz	x0, 406f0c <ferror@plt+0x430c>
  406c68:	ldrb	w22, [x0]
  406c6c:	mov	x20, x0
  406c70:	cbz	w22, 406f0c <ferror@plt+0x430c>
  406c74:	add	x0, sp, #0x100
  406c78:	mov	w2, #0x100                 	// #256
  406c7c:	mov	w1, wzr
  406c80:	bl	4027e0 <memset@plt>
  406c84:	mov	x0, sp
  406c88:	mov	w2, #0x100                 	// #256
  406c8c:	mov	w1, wzr
  406c90:	bl	4027e0 <memset@plt>
  406c94:	b	406e08 <ferror@plt+0x4208>
  406c98:	mov	x0, x22
  406c9c:	bl	402580 <strlen@plt>
  406ca0:	ldrb	w1, [x20]
  406ca4:	mov	x23, x0
  406ca8:	mov	x0, x22
  406cac:	mov	w2, w25
  406cb0:	mov	x3, x23
  406cb4:	bl	4126d8 <ferror@plt+0xfad8>
  406cb8:	cbz	x0, 406da8 <ferror@plt+0x41a8>
  406cbc:	mov	x24, x0
  406cc0:	ldp	x0, x8, [x19, #24]
  406cc4:	sub	x25, x24, x22
  406cc8:	sub	x8, x8, x0
  406ccc:	cmp	x8, x25
  406cd0:	b.cs	406ce4 <ferror@plt+0x40e4>  // b.hs, b.nlast
  406cd4:	mov	x0, x19
  406cd8:	mov	x1, x25
  406cdc:	bl	4159e4 <_obstack_newchunk@@Base>
  406ce0:	ldr	x0, [x19, #24]
  406ce4:	mov	x1, x22
  406ce8:	mov	x2, x25
  406cec:	bl	402550 <memcpy@plt>
  406cf0:	ldr	x8, [x19, #24]
  406cf4:	subs	x9, x23, x25
  406cf8:	add	x8, x8, x25
  406cfc:	str	x8, [x19, #24]
  406d00:	b.eq	406be8 <ferror@plt+0x3fe8>  // b.none
  406d04:	ldrb	w10, [x24], #1
  406d08:	ldrb	w11, [x20]
  406d0c:	sub	x23, x9, #0x1
  406d10:	mov	x22, x24
  406d14:	cmp	w10, w11
  406d18:	b.ne	406d44 <ferror@plt+0x4144>  // b.any
  406d1c:	ldrb	w9, [x21]
  406d20:	cbz	w9, 406d44 <ferror@plt+0x4144>
  406d24:	ldr	x10, [x19, #32]
  406d28:	cmp	x10, x8
  406d2c:	b.ne	406d80 <ferror@plt+0x4180>  // b.any
  406d30:	mov	w1, #0x1                   	// #1
  406d34:	mov	x0, x19
  406d38:	bl	4159e4 <_obstack_newchunk@@Base>
  406d3c:	ldrb	w9, [x21]
  406d40:	b	406d7c <ferror@plt+0x417c>
  406d44:	ldrb	w9, [x20, #1]
  406d48:	cmp	w10, w9
  406d4c:	b.ne	406d8c <ferror@plt+0x418c>  // b.any
  406d50:	ldrb	w9, [x21]
  406d54:	cbz	w9, 406d8c <ferror@plt+0x418c>
  406d58:	ldrb	w9, [x21, #1]
  406d5c:	cbz	w9, 406d8c <ferror@plt+0x418c>
  406d60:	ldr	x10, [x19, #32]
  406d64:	cmp	x10, x8
  406d68:	b.ne	406d80 <ferror@plt+0x4180>  // b.any
  406d6c:	mov	w1, #0x1                   	// #1
  406d70:	mov	x0, x19
  406d74:	bl	4159e4 <_obstack_newchunk@@Base>
  406d78:	ldrb	w9, [x21, #1]
  406d7c:	ldr	x8, [x19, #24]
  406d80:	add	x10, x8, #0x1
  406d84:	str	x10, [x19, #24]
  406d88:	strb	w9, [x8]
  406d8c:	ldrb	w1, [x20]
  406d90:	ldrb	w2, [x20, #1]
  406d94:	mov	x0, x22
  406d98:	mov	x3, x23
  406d9c:	bl	4126d8 <ferror@plt+0xfad8>
  406da0:	mov	x24, x0
  406da4:	cbnz	x0, 406cc0 <ferror@plt+0x40c0>
  406da8:	ldp	x0, x8, [x19, #24]
  406dac:	sub	x8, x8, x0
  406db0:	cmp	x8, x23
  406db4:	b.cs	406dc8 <ferror@plt+0x41c8>  // b.hs, b.nlast
  406db8:	mov	x0, x19
  406dbc:	mov	x1, x23
  406dc0:	bl	4159e4 <_obstack_newchunk@@Base>
  406dc4:	ldr	x0, [x19, #24]
  406dc8:	mov	x1, x22
  406dcc:	mov	x2, x23
  406dd0:	bl	402550 <memcpy@plt>
  406dd4:	ldr	x8, [x19, #24]
  406dd8:	add	x8, x8, x23
  406ddc:	b	406be4 <ferror@plt+0x3fe4>
  406de0:	ldrb	w22, [x20]
  406de4:	add	x0, sp, #0x100
  406de8:	mov	w2, #0x100                 	// #256
  406dec:	mov	w1, wzr
  406df0:	bl	4027e0 <memset@plt>
  406df4:	mov	x0, sp
  406df8:	mov	w2, #0x100                 	// #256
  406dfc:	mov	w1, wzr
  406e00:	bl	4027e0 <memset@plt>
  406e04:	cbz	w22, 406e48 <ferror@plt+0x4248>
  406e08:	add	x8, x20, #0x1
  406e0c:	mov	x9, sp
  406e10:	mov	w10, #0x1                   	// #1
  406e14:	add	x11, sp, #0x100
  406e18:	and	x12, x22, #0xff
  406e1c:	ldrb	w13, [x9, x12]
  406e20:	cbnz	w13, 406e30 <ferror@plt+0x4230>
  406e24:	strb	w10, [x9, x12]
  406e28:	ldrb	w13, [x21]
  406e2c:	strb	w13, [x11, x12]
  406e30:	mov	x12, x21
  406e34:	ldrb	w13, [x12], #1
  406e38:	ldrb	w22, [x8], #1
  406e3c:	cmp	w13, #0x0
  406e40:	csel	x21, x21, x12, eq  // eq = none
  406e44:	cbnz	w22, 406e18 <ferror@plt+0x4218>
  406e48:	cmp	w24, #0x2
  406e4c:	b.lt	406e5c <ferror@plt+0x425c>  // b.tstop
  406e50:	ldr	x8, [x23, #8]
  406e54:	ldr	x8, [x8, #8]
  406e58:	b	406e64 <ferror@plt+0x4264>
  406e5c:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x140c>
  406e60:	add	x8, x8, #0xe97
  406e64:	ldrb	w23, [x8]
  406e68:	cbz	w23, 406be8 <ferror@plt+0x3fe8>
  406e6c:	add	x20, x8, #0x1
  406e70:	mov	x21, sp
  406e74:	add	x22, sp, #0x100
  406e78:	and	x8, x23, #0xff
  406e7c:	ldrb	w9, [x21, x8]
  406e80:	cbz	w9, 406eb8 <ferror@plt+0x42b8>
  406e84:	ldrb	w23, [x22, x8]
  406e88:	cbz	w23, 406ee0 <ferror@plt+0x42e0>
  406e8c:	ldp	x8, x9, [x19, #24]
  406e90:	cmp	x9, x8
  406e94:	b.ne	406ea8 <ferror@plt+0x42a8>  // b.any
  406e98:	mov	w1, #0x1                   	// #1
  406e9c:	mov	x0, x19
  406ea0:	bl	4159e4 <_obstack_newchunk@@Base>
  406ea4:	ldr	x8, [x19, #24]
  406ea8:	add	x9, x8, #0x1
  406eac:	str	x9, [x19, #24]
  406eb0:	strb	w23, [x8]
  406eb4:	b	406ee0 <ferror@plt+0x42e0>
  406eb8:	ldp	x8, x9, [x19, #24]
  406ebc:	cmp	x9, x8
  406ec0:	b.ne	406ed4 <ferror@plt+0x42d4>  // b.any
  406ec4:	mov	w1, #0x1                   	// #1
  406ec8:	mov	x0, x19
  406ecc:	bl	4159e4 <_obstack_newchunk@@Base>
  406ed0:	ldr	x8, [x19, #24]
  406ed4:	add	x9, x8, #0x1
  406ed8:	str	x9, [x19, #24]
  406edc:	strb	w23, [x8]
  406ee0:	ldrb	w23, [x20], #1
  406ee4:	cbnz	w23, 406e78 <ferror@plt+0x4278>
  406ee8:	b	406be8 <ferror@plt+0x3fe8>
  406eec:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  406ef0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  406ef4:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x240c>
  406ef8:	add	x0, x0, #0x12e
  406efc:	add	x1, x1, #0xe1d
  406f00:	add	x3, x3, #0x138
  406f04:	mov	w2, #0x752                 	// #1874
  406f08:	bl	402b70 <__assert_fail@plt>
  406f0c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  406f10:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  406f14:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x240c>
  406f18:	add	x0, x0, #0x16f
  406f1c:	add	x1, x1, #0xe1d
  406f20:	add	x3, x3, #0x138
  406f24:	mov	w2, #0x770                 	// #1904
  406f28:	bl	402b70 <__assert_fail@plt>
  406f2c:	stp	x29, x30, [sp, #-32]!
  406f30:	cmp	w1, #0x2
  406f34:	stp	x20, x19, [sp, #16]
  406f38:	mov	x29, sp
  406f3c:	b.ge	406f74 <ferror@plt+0x4374>  // b.tcont
  406f40:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  406f44:	ldr	w8, [x8, #1236]
  406f48:	cbnz	w8, 406f98 <ferror@plt+0x4398>
  406f4c:	ldr	x8, [x2]
  406f50:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  406f54:	ldr	w0, [x9, #1240]
  406f58:	ldp	x20, x19, [sp, #16]
  406f5c:	ldr	x3, [x8, #8]
  406f60:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  406f64:	add	x2, x2, #0xc59
  406f68:	mov	w1, wzr
  406f6c:	ldp	x29, x30, [sp], #32
  406f70:	b	402d0c <ferror@plt+0x10c>
  406f74:	mov	w8, w1
  406f78:	add	x19, x2, #0x8
  406f7c:	sub	x20, x8, #0x1
  406f80:	ldr	x8, [x19], #8
  406f84:	mov	w1, #0x2                   	// #2
  406f88:	ldr	x0, [x8, #8]
  406f8c:	bl	40ee5c <ferror@plt+0xc25c>
  406f90:	subs	x20, x20, #0x1
  406f94:	b.ne	406f80 <ferror@plt+0x4380>  // b.any
  406f98:	ldp	x20, x19, [sp, #16]
  406f9c:	ldp	x29, x30, [sp], #32
  406fa0:	ret
  406fa4:	stp	x29, x30, [sp, #-96]!
  406fa8:	cmp	w1, #0x1
  406fac:	str	x27, [sp, #16]
  406fb0:	stp	x26, x25, [sp, #32]
  406fb4:	stp	x24, x23, [sp, #48]
  406fb8:	stp	x22, x21, [sp, #64]
  406fbc:	stp	x20, x19, [sp, #80]
  406fc0:	mov	x29, sp
  406fc4:	b.ne	406fd0 <ferror@plt+0x43d0>  // b.any
  406fc8:	bl	40e568 <ferror@plt+0xb968>
  406fcc:	b	4070e4 <ferror@plt+0x44e4>
  406fd0:	cmp	w1, #0x2
  406fd4:	b.lt	4070e4 <ferror@plt+0x44e4>  // b.tstop
  406fd8:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x240c>
  406fdc:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x240c>
  406fe0:	adrp	x22, 417000 <_obstack_memory_used@@Base+0x140c>
  406fe4:	mov	x19, x2
  406fe8:	mov	w24, w1
  406fec:	mov	w25, #0x1                   	// #1
  406ff0:	adrp	x26, 42b000 <_obstack_memory_used@@Base+0x1540c>
  406ff4:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x1540c>
  406ff8:	add	x20, x20, #0x194
  406ffc:	add	x21, x21, #0x17d
  407000:	add	x22, x22, #0xd6c
  407004:	ldr	x8, [x19, x25, lsl #3]
  407008:	add	x1, x29, #0x18
  40700c:	mov	w2, #0xa                   	// #10
  407010:	ldr	x0, [x8, #8]
  407014:	bl	4029c0 <strtol@plt>
  407018:	ldr	x8, [x29, #24]
  40701c:	ldrb	w8, [x8]
  407020:	cbnz	w8, 407050 <ferror@plt+0x4450>
  407024:	mov	x23, x0
  407028:	bl	4029a0 <__ctype_b_loc@plt>
  40702c:	ldr	x8, [x19, x25, lsl #3]
  407030:	ldr	x9, [x0]
  407034:	ldr	x8, [x8, #8]
  407038:	ldrb	w8, [x8]
  40703c:	ldrh	w8, [x9, x8, lsl #1]
  407040:	tbnz	w8, #13, 407050 <ferror@plt+0x4450>
  407044:	mov	w0, w23
  407048:	bl	40e218 <ferror@plt+0xb618>
  40704c:	b	407070 <ferror@plt+0x4470>
  407050:	ldr	w8, [x26, #1224]
  407054:	cbz	w8, 407080 <ferror@plt+0x4480>
  407058:	ldr	x8, [x19]
  40705c:	ldr	w0, [x27, #1240]
  407060:	mov	w1, wzr
  407064:	mov	x2, x22
  407068:	ldr	x3, [x8, #8]
  40706c:	bl	402d0c <ferror@plt+0x10c>
  407070:	add	x25, x25, #0x1
  407074:	cmp	x24, x25
  407078:	b.ne	407004 <ferror@plt+0x4404>  // b.any
  40707c:	b	4070e4 <ferror@plt+0x44e4>
  407080:	ldr	x8, [x19, x25, lsl #3]
  407084:	mov	x1, xzr
  407088:	ldr	x0, [x8, #8]
  40708c:	bl	40eb78 <ferror@plt+0xbf78>
  407090:	cbz	x0, 4070c8 <ferror@plt+0x44c8>
  407094:	mov	x23, x0
  407098:	bl	40e18c <ferror@plt+0xb58c>
  40709c:	mov	x0, x23
  4070a0:	bl	4154f0 <ferror@plt+0x128f0>
  4070a4:	cmn	w0, #0x1
  4070a8:	b.ne	407070 <ferror@plt+0x4470>  // b.any
  4070ac:	ldr	w23, [x27, #1240]
  4070b0:	bl	402b80 <__errno_location@plt>
  4070b4:	ldr	x8, [x19, x25, lsl #3]
  4070b8:	ldr	w1, [x0]
  4070bc:	mov	w0, w23
  4070c0:	mov	x2, x21
  4070c4:	b	407068 <ferror@plt+0x4468>
  4070c8:	ldr	w23, [x27, #1240]
  4070cc:	bl	402b80 <__errno_location@plt>
  4070d0:	ldr	x8, [x19, x25, lsl #3]
  4070d4:	ldr	w1, [x0]
  4070d8:	mov	w0, w23
  4070dc:	mov	x2, x20
  4070e0:	b	407068 <ferror@plt+0x4468>
  4070e4:	ldp	x20, x19, [sp, #80]
  4070e8:	ldp	x22, x21, [sp, #64]
  4070ec:	ldp	x24, x23, [sp, #48]
  4070f0:	ldp	x26, x25, [sp, #32]
  4070f4:	ldr	x27, [sp, #16]
  4070f8:	ldp	x29, x30, [sp], #96
  4070fc:	ret
  407100:	stp	x29, x30, [sp, #-16]!
  407104:	cmp	w2, #0x1
  407108:	mov	x29, sp
  40710c:	b.lt	40714c <ferror@plt+0x454c>  // b.tstop
  407110:	cmp	w1, w2
  407114:	b.ge	40714c <ferror@plt+0x454c>  // b.tcont
  407118:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40711c:	ldr	w8, [x8, #1236]
  407120:	cbnz	w8, 407144 <ferror@plt+0x4544>
  407124:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407128:	ldr	w8, [x8, #1240]
  40712c:	ldr	x3, [x0, #8]
  407130:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  407134:	add	x2, x2, #0xc59
  407138:	mov	w0, w8
  40713c:	mov	w1, wzr
  407140:	bl	402d0c <ferror@plt+0x10c>
  407144:	mov	w8, #0x1                   	// #1
  407148:	b	407190 <ferror@plt+0x4590>
  40714c:	cmp	w3, #0x1
  407150:	b.lt	40718c <ferror@plt+0x458c>  // b.tstop
  407154:	cmp	w1, w3
  407158:	mov	w8, wzr
  40715c:	b.le	407190 <ferror@plt+0x4590>
  407160:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407164:	ldr	w9, [x9, #1236]
  407168:	cbnz	w9, 407190 <ferror@plt+0x4590>
  40716c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407170:	ldr	w8, [x8, #1240]
  407174:	ldr	x3, [x0, #8]
  407178:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  40717c:	add	x2, x2, #0xc84
  407180:	mov	w0, w8
  407184:	mov	w1, wzr
  407188:	bl	402d0c <ferror@plt+0x10c>
  40718c:	mov	w8, wzr
  407190:	mov	w0, w8
  407194:	ldp	x29, x30, [sp], #16
  407198:	ret
  40719c:	sub	sp, sp, #0x40
  4071a0:	stp	x29, x30, [sp, #16]
  4071a4:	stp	x22, x21, [sp, #32]
  4071a8:	stp	x20, x19, [sp, #48]
  4071ac:	ldrb	w8, [x1]
  4071b0:	mov	x22, x2
  4071b4:	mov	x19, x0
  4071b8:	add	x29, sp, #0x10
  4071bc:	cbz	w8, 407200 <ferror@plt+0x4600>
  4071c0:	mov	x20, x1
  4071c4:	bl	402b80 <__errno_location@plt>
  4071c8:	mov	x21, x0
  4071cc:	str	wzr, [x0]
  4071d0:	add	x1, sp, #0x8
  4071d4:	mov	w2, #0xa                   	// #10
  4071d8:	mov	x0, x20
  4071dc:	bl	4029c0 <strtol@plt>
  4071e0:	str	w0, [x22]
  4071e4:	ldr	x8, [sp, #8]
  4071e8:	ldrb	w8, [x8]
  4071ec:	cbz	w8, 407214 <ferror@plt+0x4614>
  4071f0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  4071f4:	mov	w20, wzr
  4071f8:	add	x2, x2, #0xd6c
  4071fc:	b	407250 <ferror@plt+0x4650>
  407200:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  407204:	str	wzr, [x22]
  407208:	mov	w20, #0x1                   	// #1
  40720c:	add	x2, x2, #0xd42
  407210:	b	407250 <ferror@plt+0x4650>
  407214:	bl	4029a0 <__ctype_b_loc@plt>
  407218:	ldr	x8, [x0]
  40721c:	ldrb	w9, [x20]
  407220:	ldrh	w8, [x8, x9, lsl #1]
  407224:	tbnz	w8, #13, 407244 <ferror@plt+0x4644>
  407228:	ldr	w8, [x21]
  40722c:	mov	w20, #0x1                   	// #1
  407230:	cmp	w8, #0x22
  407234:	b.ne	407264 <ferror@plt+0x4664>  // b.any
  407238:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  40723c:	add	x2, x2, #0xdbc
  407240:	b	407250 <ferror@plt+0x4650>
  407244:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  407248:	mov	w20, #0x1                   	// #1
  40724c:	add	x2, x2, #0xd91
  407250:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407254:	ldr	w0, [x8, #1240]
  407258:	ldr	x3, [x19, #8]
  40725c:	mov	w1, wzr
  407260:	bl	402d0c <ferror@plt+0x10c>
  407264:	mov	w0, w20
  407268:	ldp	x20, x19, [sp, #48]
  40726c:	ldp	x22, x21, [sp, #32]
  407270:	ldp	x29, x30, [sp, #16]
  407274:	add	sp, sp, #0x40
  407278:	ret
  40727c:	stp	x29, x30, [sp, #-48]!
  407280:	stp	x20, x19, [sp, #32]
  407284:	ldr	x8, [x1]
  407288:	mov	w20, w0
  40728c:	str	x21, [sp, #16]
  407290:	mov	w19, w2
  407294:	mov	x21, x1
  407298:	mov	w2, #0x2                   	// #2
  40729c:	mov	w3, #0x3                   	// #3
  4072a0:	mov	x0, x8
  4072a4:	mov	w1, w20
  4072a8:	mov	x29, sp
  4072ac:	bl	407100 <ferror@plt+0x4500>
  4072b0:	tbz	w0, #0, 4072c4 <ferror@plt+0x46c4>
  4072b4:	ldp	x20, x19, [sp, #32]
  4072b8:	ldr	x21, [sp, #16]
  4072bc:	ldp	x29, x30, [sp], #48
  4072c0:	ret
  4072c4:	ldr	x8, [x21, #8]
  4072c8:	ldr	w9, [x8]
  4072cc:	cmp	w9, #0x1
  4072d0:	b.ne	4072fc <ferror@plt+0x46fc>  // b.any
  4072d4:	cmp	w20, #0x2
  4072d8:	b.ne	407318 <ferror@plt+0x4718>  // b.any
  4072dc:	ldr	x0, [x8, #8]
  4072e0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  4072e4:	add	x1, x1, #0xe97
  4072e8:	mov	w2, w19
  4072ec:	ldp	x20, x19, [sp, #32]
  4072f0:	ldr	x21, [sp, #16]
  4072f4:	ldp	x29, x30, [sp], #48
  4072f8:	b	40397c <ferror@plt+0xd7c>
  4072fc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407300:	ldr	w0, [x8, #1240]
  407304:	cmp	w20, #0x1
  407308:	b.lt	407344 <ferror@plt+0x4744>  // b.tstop
  40730c:	ldr	x8, [x21]
  407310:	ldr	x3, [x8, #8]
  407314:	b	40734c <ferror@plt+0x474c>
  407318:	ldr	x9, [x21, #16]
  40731c:	ldr	w10, [x9]
  407320:	cmp	w10, #0x2
  407324:	b.eq	407368 <ferror@plt+0x4768>  // b.none
  407328:	cmp	w10, #0x1
  40732c:	b.ne	4073dc <ferror@plt+0x47dc>  // b.any
  407330:	cmp	w20, #0x2
  407334:	b.lt	4073b0 <ferror@plt+0x47b0>  // b.tstop
  407338:	ldr	x0, [x8, #8]
  40733c:	ldr	x1, [x9, #8]
  407340:	b	4072e8 <ferror@plt+0x46e8>
  407344:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x140c>
  407348:	add	x3, x3, #0xe97
  40734c:	ldp	x20, x19, [sp, #32]
  407350:	ldr	x21, [sp, #16]
  407354:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  407358:	add	x2, x2, #0xcb6
  40735c:	mov	w1, wzr
  407360:	ldp	x29, x30, [sp], #48
  407364:	b	402d0c <ferror@plt+0x10c>
  407368:	ldr	x9, [x9, #8]
  40736c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  407370:	add	x1, x1, #0x580
  407374:	ldr	x10, [x1, #16]
  407378:	cmp	x10, x9
  40737c:	b.eq	4073a0 <ferror@plt+0x47a0>  // b.none
  407380:	ldr	x10, [x1, #24]!
  407384:	cbnz	x10, 407374 <ferror@plt+0x4774>
  407388:	adrp	x10, 403000 <ferror@plt+0x400>
  40738c:	add	x10, x10, #0x7b8
  407390:	cmp	x9, x10
  407394:	b.ne	4072b4 <ferror@plt+0x46b4>  // b.any
  407398:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  40739c:	add	x1, x1, #0x9b8
  4073a0:	cmp	w20, #0x2
  4073a4:	b.lt	4073c0 <ferror@plt+0x47c0>  // b.tstop
  4073a8:	ldr	x0, [x8, #8]
  4073ac:	b	4073c8 <ferror@plt+0x47c8>
  4073b0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  4073b4:	add	x0, x0, #0xe97
  4073b8:	mov	x1, x0
  4073bc:	b	4072e8 <ferror@plt+0x46e8>
  4073c0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  4073c4:	add	x0, x0, #0xe97
  4073c8:	mov	w2, w19
  4073cc:	ldp	x20, x19, [sp, #32]
  4073d0:	ldr	x21, [sp, #16]
  4073d4:	ldp	x29, x30, [sp], #48
  4073d8:	b	403844 <ferror@plt+0xc44>
  4073dc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4073e0:	ldr	w0, [x8, #1240]
  4073e4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  4073e8:	add	x2, x2, #0xde6
  4073ec:	mov	w1, wzr
  4073f0:	bl	402d0c <ferror@plt+0x10c>
  4073f4:	bl	402920 <abort@plt>
  4073f8:	stp	x29, x30, [sp, #-48]!
  4073fc:	stp	x20, x19, [sp, #32]
  407400:	ldrb	w8, [x0, #8]
  407404:	str	x21, [sp, #16]
  407408:	mov	x29, sp
  40740c:	tbnz	w8, #1, 40746c <ferror@plt+0x486c>
  407410:	ldr	w8, [x0, #24]
  407414:	mov	x19, x0
  407418:	cbz	w8, 40746c <ferror@plt+0x486c>
  40741c:	ldr	x21, [x1]
  407420:	mov	x20, x1
  407424:	ldp	x8, x9, [x21, #24]
  407428:	sub	x9, x9, x8
  40742c:	cmp	x9, #0x7
  407430:	mov	x9, x21
  407434:	b.hi	40744c <ferror@plt+0x484c>  // b.pmore
  407438:	mov	w1, #0x8                   	// #8
  40743c:	mov	x0, x21
  407440:	bl	4159e4 <_obstack_newchunk@@Base>
  407444:	ldr	x8, [x21, #24]
  407448:	ldr	x9, [x20]
  40744c:	add	x8, x8, #0x8
  407450:	str	x8, [x21, #24]
  407454:	ldr	x8, [x9, #16]
  407458:	ldrsw	x9, [x20, #16]
  40745c:	str	x8, [x20, #8]
  407460:	add	w10, w9, #0x1
  407464:	str	w10, [x20, #16]
  407468:	str	x19, [x8, x9, lsl #3]
  40746c:	ldp	x20, x19, [sp, #32]
  407470:	ldr	x21, [sp, #16]
  407474:	ldp	x29, x30, [sp], #48
  407478:	ret
  40747c:	ldr	x8, [x0]
  407480:	ldr	x9, [x1]
  407484:	ldr	x0, [x8, #16]
  407488:	ldr	x1, [x9, #16]
  40748c:	b	402990 <strcmp@plt>
  407490:	stp	x29, x30, [sp, #-48]!
  407494:	stp	x20, x19, [sp, #32]
  407498:	ldr	x8, [x1]
  40749c:	mov	w20, w0
  4074a0:	str	x21, [sp, #16]
  4074a4:	mov	w21, w2
  4074a8:	mov	x19, x1
  4074ac:	mov	w2, #0x2                   	// #2
  4074b0:	mov	w3, #0x2                   	// #2
  4074b4:	mov	x0, x8
  4074b8:	mov	w1, w20
  4074bc:	mov	x29, sp
  4074c0:	bl	407100 <ferror@plt+0x4500>
  4074c4:	tbnz	w0, #0, 407554 <ferror@plt+0x4954>
  4074c8:	cmp	w20, #0x2
  4074cc:	b.lt	4074dc <ferror@plt+0x48dc>  // b.tstop
  4074d0:	ldr	x8, [x19, #8]
  4074d4:	ldr	x0, [x8, #8]
  4074d8:	b	4074e4 <ferror@plt+0x48e4>
  4074dc:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  4074e0:	add	x0, x0, #0xe97
  4074e4:	add	x1, x29, #0x18
  4074e8:	bl	40eb78 <ferror@plt+0xbf78>
  4074ec:	cbz	x0, 407508 <ferror@plt+0x4908>
  4074f0:	ldr	x1, [x29, #24]
  4074f4:	mov	w2, #0x1                   	// #1
  4074f8:	bl	40abb4 <ferror@plt+0x7fb4>
  4074fc:	ldr	x0, [x29, #24]
  407500:	bl	4029f0 <free@plt>
  407504:	b	407554 <ferror@plt+0x4954>
  407508:	tbnz	w21, #0, 407554 <ferror@plt+0x4954>
  40750c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407510:	ldr	w21, [x8, #1240]
  407514:	bl	402b80 <__errno_location@plt>
  407518:	ldr	w1, [x0]
  40751c:	cmp	w20, #0x2
  407520:	b.lt	407530 <ferror@plt+0x4930>  // b.tstop
  407524:	ldr	x8, [x19, #8]
  407528:	ldr	x3, [x8, #8]
  40752c:	b	407538 <ferror@plt+0x4938>
  407530:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x140c>
  407534:	add	x3, x3, #0xe97
  407538:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  40753c:	add	x2, x2, #0x56f
  407540:	mov	w0, w21
  407544:	bl	402d0c <ferror@plt+0x10c>
  407548:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40754c:	mov	w9, #0x1                   	// #1
  407550:	str	w9, [x8, #3512]
  407554:	ldp	x20, x19, [sp, #32]
  407558:	ldr	x21, [sp, #16]
  40755c:	ldp	x29, x30, [sp], #48
  407560:	ret
  407564:	stp	x29, x30, [sp, #-64]!
  407568:	stp	x24, x23, [sp, #16]
  40756c:	stp	x22, x21, [sp, #32]
  407570:	stp	x20, x19, [sp, #48]
  407574:	mov	x19, x0
  407578:	adrp	x24, 436000 <__progname@@GLIBC_2.17+0xab98>
  40757c:	ldp	x0, x8, [x0, #24]
  407580:	ldr	x23, [x24, #3536]
  407584:	mov	x22, x3
  407588:	mov	x20, x2
  40758c:	sub	x8, x8, x0
  407590:	cmp	x8, x23
  407594:	mov	x21, x1
  407598:	mov	x29, sp
  40759c:	b.cs	4075b0 <ferror@plt+0x49b0>  // b.hs, b.nlast
  4075a0:	mov	x0, x19
  4075a4:	mov	x1, x23
  4075a8:	bl	4159e4 <_obstack_newchunk@@Base>
  4075ac:	ldr	x0, [x19, #24]
  4075b0:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  4075b4:	ldr	x1, [x8, #3528]
  4075b8:	mov	x2, x23
  4075bc:	bl	402550 <memcpy@plt>
  4075c0:	ldp	x8, x9, [x19, #24]
  4075c4:	add	x0, x8, x23
  4075c8:	sub	x8, x9, x0
  4075cc:	cmp	x8, x22
  4075d0:	str	x0, [x19, #24]
  4075d4:	b.cs	4075e8 <ferror@plt+0x49e8>  // b.hs, b.nlast
  4075d8:	mov	x0, x19
  4075dc:	mov	x1, x22
  4075e0:	bl	4159e4 <_obstack_newchunk@@Base>
  4075e4:	ldr	x0, [x19, #24]
  4075e8:	mov	x1, x20
  4075ec:	mov	x2, x22
  4075f0:	bl	402550 <memcpy@plt>
  4075f4:	ldr	x8, [x19, #24]
  4075f8:	add	x0, x8, x22
  4075fc:	str	x0, [x19, #24]
  407600:	cbz	x22, 407634 <ferror@plt+0x4a34>
  407604:	add	x8, x22, x20
  407608:	mov	x9, xzr
  40760c:	sub	x10, x8, #0x1
  407610:	ldrb	w8, [x10]
  407614:	cmp	w8, #0x58
  407618:	b.ne	40763c <ferror@plt+0x4a3c>  // b.any
  40761c:	add	x8, x9, #0x1
  407620:	cmp	x9, #0x5
  407624:	sub	x10, x10, #0x1
  407628:	mov	x9, x8
  40762c:	b.cc	407610 <ferror@plt+0x4a10>  // b.lo, b.ul, b.last
  407630:	b	407640 <ferror@plt+0x4a40>
  407634:	mov	x8, xzr
  407638:	b	407640 <ferror@plt+0x4a40>
  40763c:	mov	x8, x9
  407640:	ldr	x9, [x19, #32]
  407644:	mov	w11, #0x7                   	// #7
  407648:	mov	w10, #0x6                   	// #6
  40764c:	sub	x1, x11, x8
  407650:	sub	x9, x9, x0
  407654:	cmp	x9, x1
  407658:	sub	x22, x10, x8
  40765c:	b.cs	40766c <ferror@plt+0x4a6c>  // b.hs, b.nlast
  407660:	mov	x0, x19
  407664:	bl	4159e4 <_obstack_newchunk@@Base>
  407668:	ldr	x0, [x19, #24]
  40766c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x340c>
  407670:	add	x1, x1, #0x9b0
  407674:	mov	x2, x22
  407678:	bl	402550 <memcpy@plt>
  40767c:	ldr	x8, [x19, #24]
  407680:	add	x8, x8, x22
  407684:	add	x9, x8, #0x1
  407688:	str	x9, [x19, #24]
  40768c:	strb	wzr, [x8]
  407690:	ldr	x8, [x19, #16]
  407694:	ldr	x9, [x24, #3536]
  407698:	add	x23, x8, x9
  40769c:	bl	402b80 <__errno_location@plt>
  4076a0:	mov	x22, x0
  4076a4:	str	wzr, [x0]
  4076a8:	mov	x0, x23
  4076ac:	bl	414314 <ferror@plt+0x11714>
  4076b0:	tbnz	w0, #31, 407708 <ferror@plt+0x4b08>
  4076b4:	bl	4028b0 <close@plt>
  4076b8:	ldp	x8, x9, [x19, #24]
  4076bc:	sub	x0, x8, #0x1
  4076c0:	str	x0, [x19, #24]
  4076c4:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  4076c8:	ldr	x20, [x8, #3592]
  4076cc:	sub	x8, x9, x0
  4076d0:	cmp	x8, x20
  4076d4:	b.cs	4076e8 <ferror@plt+0x4ae8>  // b.hs, b.nlast
  4076d8:	mov	x0, x19
  4076dc:	mov	x1, x20
  4076e0:	bl	4159e4 <_obstack_newchunk@@Base>
  4076e4:	ldr	x0, [x19, #24]
  4076e8:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  4076ec:	ldr	x1, [x8, #3584]
  4076f0:	mov	x2, x20
  4076f4:	bl	402550 <memcpy@plt>
  4076f8:	ldr	x8, [x19, #24]
  4076fc:	add	x8, x8, x20
  407700:	str	x8, [x19, #24]
  407704:	b	407784 <ferror@plt+0x4b84>
  407708:	ldr	w1, [x22]
  40770c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  407710:	add	x2, x2, #0x4
  407714:	mov	w0, wzr
  407718:	mov	x3, x21
  40771c:	mov	x4, x20
  407720:	bl	402d0c <ferror@plt+0x10c>
  407724:	ldp	x1, x9, [x19, #16]
  407728:	cmp	x9, x1
  40772c:	b.ne	40773c <ferror@plt+0x4b3c>  // b.any
  407730:	ldrb	w8, [x19, #80]
  407734:	orr	w8, w8, #0x2
  407738:	strb	w8, [x19, #80]
  40773c:	ldr	x11, [x19, #48]
  407740:	ldr	x8, [x19, #8]
  407744:	ldr	x10, [x19, #32]
  407748:	add	x9, x11, x9
  40774c:	bic	x9, x9, x11
  407750:	sub	x11, x9, x8
  407754:	sub	x12, x10, x8
  407758:	cmp	x11, x12
  40775c:	str	x9, [x19, #24]
  407760:	b.ls	40776c <ferror@plt+0x4b6c>  // b.plast
  407764:	mov	x9, x10
  407768:	str	x10, [x19, #24]
  40776c:	cmp	x1, x10
  407770:	str	x9, [x19, #16]
  407774:	b.cs	407798 <ferror@plt+0x4b98>  // b.hs, b.nlast
  407778:	cmp	x1, x8
  40777c:	b.ls	407798 <ferror@plt+0x4b98>  // b.plast
  407780:	stp	x1, x1, [x19, #16]
  407784:	ldp	x20, x19, [sp, #48]
  407788:	ldp	x22, x21, [sp, #32]
  40778c:	ldp	x24, x23, [sp, #16]
  407790:	ldp	x29, x30, [sp], #64
  407794:	ret
  407798:	mov	x0, x19
  40779c:	ldp	x20, x19, [sp, #48]
  4077a0:	ldp	x22, x21, [sp, #32]
  4077a4:	ldp	x24, x23, [sp, #16]
  4077a8:	ldp	x29, x30, [sp], #64
  4077ac:	b	415b5c <_obstack_free@@Base>
  4077b0:	stp	x29, x30, [sp, #-96]!
  4077b4:	stp	x22, x21, [sp, #64]
  4077b8:	stp	x20, x19, [sp, #80]
  4077bc:	mov	x21, x1
  4077c0:	mov	x19, x0
  4077c4:	mov	w1, #0x5c                  	// #92
  4077c8:	mov	x0, x2
  4077cc:	stp	x28, x27, [sp, #16]
  4077d0:	stp	x26, x25, [sp, #32]
  4077d4:	stp	x24, x23, [sp, #48]
  4077d8:	mov	x29, sp
  4077dc:	mov	x20, x3
  4077e0:	mov	x25, x2
  4077e4:	bl	402a50 <strchr@plt>
  4077e8:	cbz	x0, 4079ac <ferror@plt+0x4dac>
  4077ec:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x240c>
  4077f0:	adrp	x24, 418000 <_obstack_memory_used@@Base+0x240c>
  4077f4:	mov	x23, x0
  4077f8:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4077fc:	add	x22, x22, #0x86
  407800:	adrp	x28, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407804:	add	x24, x24, #0x4b
  407808:	ldp	x0, x8, [x19, #24]
  40780c:	sub	x26, x23, x25
  407810:	sub	x8, x8, x0
  407814:	cmp	x8, x26
  407818:	b.cs	40782c <ferror@plt+0x4c2c>  // b.hs, b.nlast
  40781c:	mov	x0, x19
  407820:	mov	x1, x26
  407824:	bl	4159e4 <_obstack_newchunk@@Base>
  407828:	ldr	x0, [x19, #24]
  40782c:	mov	x1, x25
  407830:	mov	x2, x26
  407834:	bl	402550 <memcpy@plt>
  407838:	ldr	x8, [x19, #24]
  40783c:	add	x0, x8, x26
  407840:	str	x0, [x19, #24]
  407844:	ldrb	w25, [x23, #1]
  407848:	sub	w8, w25, #0x31
  40784c:	cmp	w8, #0x9
  407850:	b.cs	4078e0 <ferror@plt+0x4ce0>  // b.hs, b.nlast
  407854:	ldr	w8, [x20]
  407858:	sub	w25, w25, #0x30
  40785c:	sub	w8, w8, #0x1
  407860:	cmp	w8, w25
  407864:	b.ls	4078c8 <ferror@plt+0x4cc8>  // b.plast
  407868:	ldr	x8, [x20, #16]
  40786c:	ldr	w9, [x8, w25, uxtw #2]
  407870:	cmp	w9, #0x1
  407874:	b.lt	407994 <ferror@plt+0x4d94>  // b.tstop
  407878:	ldr	x8, [x20, #8]
  40787c:	ldr	x10, [x19, #32]
  407880:	ldr	w8, [x8, x25, lsl #2]
  407884:	sub	x10, x10, x0
  407888:	sub	w9, w9, w8
  40788c:	cmp	x10, w9, sxtw
  407890:	sxtw	x26, w9
  407894:	b.cs	4078b0 <ferror@plt+0x4cb0>  // b.hs, b.nlast
  407898:	mov	x0, x19
  40789c:	mov	x1, x26
  4078a0:	bl	4159e4 <_obstack_newchunk@@Base>
  4078a4:	ldr	x8, [x20, #8]
  4078a8:	ldr	x0, [x19, #24]
  4078ac:	ldr	w8, [x8, x25, lsl #2]
  4078b0:	add	x1, x21, w8, sxtw
  4078b4:	mov	x2, x26
  4078b8:	bl	402550 <memcpy@plt>
  4078bc:	ldr	x8, [x19, #24]
  4078c0:	add	x8, x8, x26
  4078c4:	b	407990 <ferror@plt+0x4d90>
  4078c8:	ldr	w0, [x27, #1240]
  4078cc:	mov	w1, wzr
  4078d0:	mov	x2, x22
  4078d4:	mov	w3, w25
  4078d8:	bl	402d0c <ferror@plt+0x10c>
  4078dc:	b	407994 <ferror@plt+0x4d94>
  4078e0:	cmp	w25, #0x26
  4078e4:	b.eq	407944 <ferror@plt+0x4d44>  // b.none
  4078e8:	cmp	w25, #0x30
  4078ec:	b.eq	407920 <ferror@plt+0x4d20>  // b.none
  4078f0:	cbz	w25, 407a0c <ferror@plt+0x4e0c>
  4078f4:	ldr	x8, [x19, #32]
  4078f8:	cmp	x8, x0
  4078fc:	b.ne	407910 <ferror@plt+0x4d10>  // b.any
  407900:	mov	w1, #0x1                   	// #1
  407904:	mov	x0, x19
  407908:	bl	4159e4 <_obstack_newchunk@@Base>
  40790c:	ldr	x0, [x19, #24]
  407910:	add	x8, x0, #0x1
  407914:	str	x8, [x19, #24]
  407918:	strb	w25, [x0]
  40791c:	b	407994 <ferror@plt+0x4d94>
  407920:	ldrb	w8, [x28, #2132]
  407924:	tbnz	w8, #0, 407944 <ferror@plt+0x4d44>
  407928:	ldr	w0, [x27, #1240]
  40792c:	mov	w1, wzr
  407930:	mov	x2, x24
  407934:	bl	402d0c <ferror@plt+0x10c>
  407938:	mov	w8, #0x1                   	// #1
  40793c:	strb	w8, [x28, #2132]
  407940:	ldr	x0, [x19, #24]
  407944:	ldp	x9, x8, [x20, #8]
  407948:	ldrsw	x10, [x8]
  40794c:	ldrsw	x8, [x9]
  407950:	ldr	x9, [x19, #32]
  407954:	sub	x25, x10, x8
  407958:	sub	x9, x9, x0
  40795c:	cmp	x9, x25
  407960:	b.cs	40797c <ferror@plt+0x4d7c>  // b.hs, b.nlast
  407964:	mov	x0, x19
  407968:	mov	x1, x25
  40796c:	bl	4159e4 <_obstack_newchunk@@Base>
  407970:	ldr	x8, [x20, #8]
  407974:	ldr	x0, [x19, #24]
  407978:	ldr	w8, [x8]
  40797c:	add	x1, x21, w8, sxtw
  407980:	mov	x2, x25
  407984:	bl	402550 <memcpy@plt>
  407988:	ldr	x8, [x19, #24]
  40798c:	add	x8, x8, x25
  407990:	str	x8, [x19, #24]
  407994:	add	x25, x23, #0x2
  407998:	mov	w1, #0x5c                  	// #92
  40799c:	mov	x0, x25
  4079a0:	bl	402a50 <strchr@plt>
  4079a4:	mov	x23, x0
  4079a8:	cbnz	x0, 407808 <ferror@plt+0x4c08>
  4079ac:	mov	x0, x25
  4079b0:	bl	402580 <strlen@plt>
  4079b4:	mov	x20, x0
  4079b8:	ldp	x0, x8, [x19, #24]
  4079bc:	sub	x8, x8, x0
  4079c0:	cmp	x8, x20
  4079c4:	b.cs	4079d8 <ferror@plt+0x4dd8>  // b.hs, b.nlast
  4079c8:	mov	x0, x19
  4079cc:	mov	x1, x20
  4079d0:	bl	4159e4 <_obstack_newchunk@@Base>
  4079d4:	ldr	x0, [x19, #24]
  4079d8:	mov	x1, x25
  4079dc:	mov	x2, x20
  4079e0:	bl	402550 <memcpy@plt>
  4079e4:	ldr	x8, [x19, #24]
  4079e8:	add	x8, x8, x20
  4079ec:	str	x8, [x19, #24]
  4079f0:	ldp	x20, x19, [sp, #80]
  4079f4:	ldp	x22, x21, [sp, #64]
  4079f8:	ldp	x24, x23, [sp, #48]
  4079fc:	ldp	x26, x25, [sp, #32]
  407a00:	ldp	x28, x27, [sp, #16]
  407a04:	ldp	x29, x30, [sp], #96
  407a08:	ret
  407a0c:	ldr	w0, [x27, #1240]
  407a10:	ldp	x20, x19, [sp, #80]
  407a14:	ldp	x22, x21, [sp, #64]
  407a18:	ldp	x24, x23, [sp, #48]
  407a1c:	ldp	x26, x25, [sp, #32]
  407a20:	ldp	x28, x27, [sp, #16]
  407a24:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  407a28:	add	x2, x2, #0xad
  407a2c:	mov	w1, wzr
  407a30:	ldp	x29, x30, [sp], #96
  407a34:	b	402d0c <ferror@plt+0x10c>
  407a38:	ldrb	w8, [x0, #8]
  407a3c:	cmp	x1, #0x0
  407a40:	cset	w9, ne  // ne = any
  407a44:	and	w8, w8, #0xfe
  407a48:	orr	w8, w8, w9
  407a4c:	strb	w8, [x0, #8]
  407a50:	cbnz	x1, 407a68 <ferror@plt+0x4e68>
  407a54:	ldr	w8, [x0, #24]
  407a58:	cbnz	w8, 407a68 <ferror@plt+0x4e68>
  407a5c:	ldr	x0, [x0, #16]
  407a60:	mov	w1, #0x4                   	// #4
  407a64:	b	40ee5c <ferror@plt+0xc25c>
  407a68:	ret
  407a6c:	stp	x29, x30, [sp, #-48]!
  407a70:	stp	x22, x21, [sp, #16]
  407a74:	stp	x20, x19, [sp, #32]
  407a78:	mov	x19, x1
  407a7c:	mov	x20, x0
  407a80:	mov	w22, wzr
  407a84:	mov	x29, sp
  407a88:	ldrb	w8, [x20]
  407a8c:	cmp	w8, #0x2d
  407a90:	b.eq	407a9c <ferror@plt+0x4e9c>  // b.none
  407a94:	cbnz	w8, 407b24 <ferror@plt+0x4f24>
  407a98:	b	407b84 <ferror@plt+0x4f84>
  407a9c:	tst	w22, #0xff
  407aa0:	b.eq	407b24 <ferror@plt+0x4f24>  // b.none
  407aa4:	ldrb	w21, [x20, #1]!
  407aa8:	cbz	w21, 407b58 <ferror@plt+0x4f58>
  407aac:	cmp	w21, w22, uxtb
  407ab0:	b.cs	407aec <ferror@plt+0x4eec>  // b.hs, b.nlast
  407ab4:	sub	w22, w22, #0x1
  407ab8:	cmp	w21, w22, uxtb
  407abc:	b.hi	407b50 <ferror@plt+0x4f50>  // b.pmore
  407ac0:	ldp	x8, x9, [x19, #24]
  407ac4:	cmp	x9, x8
  407ac8:	b.ne	407adc <ferror@plt+0x4edc>  // b.any
  407acc:	mov	w1, #0x1                   	// #1
  407ad0:	mov	x0, x19
  407ad4:	bl	4159e4 <_obstack_newchunk@@Base>
  407ad8:	ldr	x8, [x19, #24]
  407adc:	add	x9, x8, #0x1
  407ae0:	str	x9, [x19, #24]
  407ae4:	strb	w22, [x8]
  407ae8:	b	407ab4 <ferror@plt+0x4eb4>
  407aec:	b.ls	407b50 <ferror@plt+0x4f50>  // b.plast
  407af0:	ldp	x8, x9, [x19, #24]
  407af4:	add	w22, w22, #0x1
  407af8:	cmp	x9, x8
  407afc:	b.ne	407b10 <ferror@plt+0x4f10>  // b.any
  407b00:	mov	w1, #0x1                   	// #1
  407b04:	mov	x0, x19
  407b08:	bl	4159e4 <_obstack_newchunk@@Base>
  407b0c:	ldr	x8, [x19, #24]
  407b10:	add	x9, x8, #0x1
  407b14:	cmp	w21, w22, uxtb
  407b18:	str	x9, [x19, #24]
  407b1c:	strb	w22, [x8]
  407b20:	b	407aec <ferror@plt+0x4eec>
  407b24:	ldp	x9, x10, [x19, #24]
  407b28:	cmp	x10, x9
  407b2c:	b.ne	407b44 <ferror@plt+0x4f44>  // b.any
  407b30:	mov	w1, #0x1                   	// #1
  407b34:	mov	x0, x19
  407b38:	bl	4159e4 <_obstack_newchunk@@Base>
  407b3c:	ldrb	w8, [x20]
  407b40:	ldr	x9, [x19, #24]
  407b44:	add	x10, x9, #0x1
  407b48:	str	x10, [x19, #24]
  407b4c:	strb	w8, [x9]
  407b50:	ldrb	w22, [x20], #1
  407b54:	b	407a88 <ferror@plt+0x4e88>
  407b58:	ldp	x8, x9, [x19, #24]
  407b5c:	cmp	x9, x8
  407b60:	b.ne	407b74 <ferror@plt+0x4f74>  // b.any
  407b64:	mov	w1, #0x1                   	// #1
  407b68:	mov	x0, x19
  407b6c:	bl	4159e4 <_obstack_newchunk@@Base>
  407b70:	ldr	x8, [x19, #24]
  407b74:	add	x9, x8, #0x1
  407b78:	mov	w10, #0x2d                  	// #45
  407b7c:	str	x9, [x19, #24]
  407b80:	strb	w10, [x8]
  407b84:	ldp	x8, x9, [x19, #24]
  407b88:	cmp	x9, x8
  407b8c:	b.ne	407ba0 <ferror@plt+0x4fa0>  // b.any
  407b90:	mov	w1, #0x1                   	// #1
  407b94:	mov	x0, x19
  407b98:	bl	4159e4 <_obstack_newchunk@@Base>
  407b9c:	ldr	x8, [x19, #24]
  407ba0:	add	x9, x8, #0x1
  407ba4:	str	x9, [x19, #24]
  407ba8:	strb	wzr, [x8]
  407bac:	ldp	x0, x8, [x19, #16]
  407bb0:	cmp	x8, x0
  407bb4:	b.ne	407bc4 <ferror@plt+0x4fc4>  // b.any
  407bb8:	ldrb	w9, [x19, #80]
  407bbc:	orr	w9, w9, #0x2
  407bc0:	strb	w9, [x19, #80]
  407bc4:	ldr	x10, [x19, #48]
  407bc8:	ldr	x11, [x19, #8]
  407bcc:	ldr	x9, [x19, #32]
  407bd0:	add	x8, x10, x8
  407bd4:	bic	x8, x8, x10
  407bd8:	sub	x10, x8, x11
  407bdc:	sub	x11, x9, x11
  407be0:	cmp	x10, x11
  407be4:	str	x8, [x19, #24]
  407be8:	b.ls	407bf4 <ferror@plt+0x4ff4>  // b.plast
  407bec:	mov	x8, x9
  407bf0:	str	x9, [x19, #24]
  407bf4:	str	x8, [x19, #16]
  407bf8:	ldp	x20, x19, [sp, #32]
  407bfc:	ldp	x22, x21, [sp, #16]
  407c00:	ldp	x29, x30, [sp], #48
  407c04:	ret
  407c08:	stp	x29, x30, [sp, #-16]!
  407c0c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407c10:	ldr	x0, [x8, #1080]
  407c14:	mov	x29, sp
  407c18:	bl	407c44 <ferror@plt+0x5044>
  407c1c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407c20:	adrp	x3, 414000 <ferror@plt+0x11400>
  407c24:	adrp	x4, 402000 <mbrtowc@plt-0x540>
  407c28:	add	x0, x0, #0x860
  407c2c:	add	x3, x3, #0xde0
  407c30:	add	x4, x4, #0x9f0
  407c34:	mov	x1, xzr
  407c38:	mov	x2, xzr
  407c3c:	ldp	x29, x30, [sp], #16
  407c40:	b	4158dc <_obstack_begin@@Base>
  407c44:	sub	sp, sp, #0x140
  407c48:	stp	x22, x21, [sp, #288]
  407c4c:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407c50:	stp	x20, x19, [sp, #304]
  407c54:	mov	x19, x0
  407c58:	ldr	x0, [x21, #2136]
  407c5c:	stp	x28, x23, [sp, #272]
  407c60:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407c64:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407c68:	stp	x29, x30, [sp, #256]
  407c6c:	add	x29, sp, #0x100
  407c70:	cbz	x0, 407cc0 <ferror@plt+0x50c0>
  407c74:	ldr	x8, [x23, #1080]
  407c78:	cmp	x0, x8
  407c7c:	b.eq	407cc0 <ferror@plt+0x50c0>  // b.none
  407c80:	ldr	x8, [x22, #1104]
  407c84:	cmp	x0, x8
  407c88:	b.eq	407cc0 <ferror@plt+0x50c0>  // b.none
  407c8c:	bl	410910 <ferror@plt+0xdd10>
  407c90:	cbz	w0, 407cc0 <ferror@plt+0x50c0>
  407c94:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407c98:	ldr	w20, [x8, #1240]
  407c9c:	bl	402b80 <__errno_location@plt>
  407ca0:	ldr	w1, [x0]
  407ca4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  407ca8:	add	x2, x2, #0x2ba
  407cac:	mov	w0, w20
  407cb0:	bl	402d0c <ferror@plt+0x10c>
  407cb4:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  407cb8:	mov	w9, #0x1                   	// #1
  407cbc:	str	w9, [x8, #3512]
  407cc0:	str	x19, [x21, #2136]
  407cc4:	cbz	x19, 407d68 <ferror@plt+0x5168>
  407cc8:	ldr	x8, [x22, #1104]
  407ccc:	cmp	x8, x19
  407cd0:	b.eq	407d68 <ferror@plt+0x5168>  // b.none
  407cd4:	add	x1, sp, #0x80
  407cd8:	mov	w0, #0x1                   	// #1
  407cdc:	bl	4164e0 <_obstack_memory_used@@Base+0x8ec>
  407ce0:	tbnz	w0, #31, 407d68 <ferror@plt+0x5168>
  407ce4:	ldr	x0, [x21, #2136]
  407ce8:	bl	4026d0 <fileno@plt>
  407cec:	mov	x1, sp
  407cf0:	bl	4164e0 <_obstack_memory_used@@Base+0x8ec>
  407cf4:	tbnz	w0, #31, 407d68 <ferror@plt+0x5168>
  407cf8:	ldr	x8, [sp, #136]
  407cfc:	ldr	x9, [sp, #8]
  407d00:	cmp	x8, x9
  407d04:	b.ne	407d68 <ferror@plt+0x5168>  // b.any
  407d08:	cbz	x8, 407d68 <ferror@plt+0x5168>
  407d0c:	ldr	x8, [sp, #128]
  407d10:	ldr	x9, [sp]
  407d14:	cmp	x8, x9
  407d18:	b.ne	407d68 <ferror@plt+0x5168>  // b.any
  407d1c:	ldr	x0, [x21, #2136]
  407d20:	ldr	x8, [x23, #1080]
  407d24:	cmp	x0, x8
  407d28:	b.eq	407d60 <ferror@plt+0x5160>  // b.none
  407d2c:	bl	410910 <ferror@plt+0xdd10>
  407d30:	cbz	w0, 407d60 <ferror@plt+0x5160>
  407d34:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407d38:	ldr	w19, [x8, #1240]
  407d3c:	bl	402b80 <__errno_location@plt>
  407d40:	ldr	w1, [x0]
  407d44:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  407d48:	add	x2, x2, #0x2ba
  407d4c:	mov	w0, w19
  407d50:	bl	402d0c <ferror@plt+0x10c>
  407d54:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  407d58:	mov	w9, #0x1                   	// #1
  407d5c:	str	w9, [x8, #3512]
  407d60:	ldr	x8, [x22, #1104]
  407d64:	str	x8, [x21, #2136]
  407d68:	ldp	x20, x19, [sp, #304]
  407d6c:	ldp	x22, x21, [sp, #288]
  407d70:	ldp	x28, x23, [sp, #272]
  407d74:	ldp	x29, x30, [sp, #256]
  407d78:	add	sp, sp, #0x140
  407d7c:	ret
  407d80:	stp	x29, x30, [sp, #-32]!
  407d84:	str	x19, [sp, #16]
  407d88:	mov	x29, sp
  407d8c:	cbz	x0, 407e2c <ferror@plt+0x522c>
  407d90:	ldrb	w11, [x0]
  407d94:	cbz	w11, 407e2c <ferror@plt+0x522c>
  407d98:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x240c>
  407d9c:	mov	w19, wzr
  407da0:	add	x8, x0, #0x1
  407da4:	add	x9, x9, #0x1bf
  407da8:	and	w10, w11, #0xff
  407dac:	sub	w11, w10, #0x61
  407db0:	cmp	w11, #0x17
  407db4:	b.hi	407dd4 <ferror@plt+0x51d4>  // b.pmore
  407db8:	adr	x12, 407dcc <ferror@plt+0x51cc>
  407dbc:	ldrb	w10, [x9, x11]
  407dc0:	add	x12, x12, x10, lsl #2
  407dc4:	mov	w10, #0x1                   	// #1
  407dc8:	br	x12
  407dcc:	mov	w10, #0x80                  	// #128
  407dd0:	b	407e20 <ferror@plt+0x5220>
  407dd4:	cmp	w10, #0x56
  407dd8:	b.ne	407eac <ferror@plt+0x52ac>  // b.any
  407ddc:	mov	w10, #0x3ff                 	// #1023
  407de0:	b	407e20 <ferror@plt+0x5220>
  407de4:	mov	w10, #0x2                   	// #2
  407de8:	b	407e20 <ferror@plt+0x5220>
  407dec:	mov	w10, #0x20                  	// #32
  407df0:	b	407e20 <ferror@plt+0x5220>
  407df4:	mov	w10, #0x100                 	// #256
  407df8:	b	407e20 <ferror@plt+0x5220>
  407dfc:	mov	w10, #0x10                  	// #16
  407e00:	b	407e20 <ferror@plt+0x5220>
  407e04:	mov	w10, #0x40                  	// #64
  407e08:	b	407e20 <ferror@plt+0x5220>
  407e0c:	mov	w10, #0x4                   	// #4
  407e10:	b	407e20 <ferror@plt+0x5220>
  407e14:	mov	w10, #0x8                   	// #8
  407e18:	b	407e20 <ferror@plt+0x5220>
  407e1c:	mov	w10, #0x200                 	// #512
  407e20:	ldrb	w11, [x8], #1
  407e24:	orr	w19, w19, w10
  407e28:	b	407da8 <ferror@plt+0x51a8>
  407e2c:	mov	w19, #0x7                   	// #7
  407e30:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407e34:	add	x8, x8, #0x870
  407e38:	ldp	x1, x9, [x8]
  407e3c:	cmp	x9, x1
  407e40:	b.ne	407e54 <ferror@plt+0x5254>  // b.any
  407e44:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407e48:	ldrb	w11, [x10, #2224]
  407e4c:	orr	w11, w11, #0x2
  407e50:	strb	w11, [x10, #2224]
  407e54:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407e58:	add	x11, x11, #0x868
  407e5c:	ldr	x12, [x11, #40]
  407e60:	ldr	x10, [x11]
  407e64:	ldr	x13, [x11, #24]
  407e68:	add	x9, x12, x9
  407e6c:	bic	x9, x9, x12
  407e70:	sub	x14, x13, x10
  407e74:	sub	x12, x9, x10
  407e78:	cmp	x12, x14
  407e7c:	csel	x9, x13, x9, hi  // hi = pmore
  407e80:	cmp	x1, x13
  407e84:	stp	x9, x9, [x11, #8]
  407e88:	b.cs	407e9c <ferror@plt+0x529c>  // b.hs, b.nlast
  407e8c:	cmp	x1, x10
  407e90:	b.ls	407e9c <ferror@plt+0x529c>  // b.plast
  407e94:	stp	x1, x1, [x8]
  407e98:	b	407eb4 <ferror@plt+0x52b4>
  407e9c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407ea0:	add	x0, x0, #0x860
  407ea4:	bl	415b5c <_obstack_free@@Base>
  407ea8:	b	407eb4 <ferror@plt+0x52b4>
  407eac:	cbz	w10, 407e30 <ferror@plt+0x5230>
  407eb0:	mov	w19, #0xffffffff            	// #-1
  407eb4:	mov	w0, w19
  407eb8:	ldr	x19, [sp, #16]
  407ebc:	ldp	x29, x30, [sp], #32
  407ec0:	ret
  407ec4:	stp	x29, x30, [sp, #-32]!
  407ec8:	stp	x20, x19, [sp, #16]
  407ecc:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407ed0:	ldr	x0, [x19, #1104]
  407ed4:	mov	x29, sp
  407ed8:	bl	415748 <ferror@plt+0x12b48>
  407edc:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407ee0:	ldr	x0, [x20, #1080]
  407ee4:	bl	415748 <ferror@plt+0x12b48>
  407ee8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407eec:	ldr	x0, [x8, #2136]
  407ef0:	cbz	x0, 407f10 <ferror@plt+0x5310>
  407ef4:	ldr	x8, [x19, #1104]
  407ef8:	cmp	x0, x8
  407efc:	b.eq	407f10 <ferror@plt+0x5310>  // b.none
  407f00:	ldr	x8, [x20, #1080]
  407f04:	cmp	x0, x8
  407f08:	b.eq	407f10 <ferror@plt+0x5310>  // b.none
  407f0c:	bl	415748 <ferror@plt+0x12b48>
  407f10:	mov	w2, #0x1                   	// #1
  407f14:	mov	w0, wzr
  407f18:	mov	x1, xzr
  407f1c:	bl	4026b0 <lseek@plt>
  407f20:	tbnz	x0, #63, 407f34 <ferror@plt+0x5334>
  407f24:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407f28:	ldr	x0, [x19, #1112]
  407f2c:	bl	415748 <ferror@plt+0x12b48>
  407f30:	cbz	w0, 407f40 <ferror@plt+0x5340>
  407f34:	ldp	x20, x19, [sp, #16]
  407f38:	ldp	x29, x30, [sp], #32
  407f3c:	ret
  407f40:	ldr	x0, [x19, #1112]
  407f44:	ldp	x20, x19, [sp, #16]
  407f48:	mov	w2, #0x1                   	// #1
  407f4c:	mov	x1, xzr
  407f50:	ldp	x29, x30, [sp], #32
  407f54:	b	4157d0 <ferror@plt+0x12bd0>
  407f58:	stp	x29, x30, [sp, #-32]!
  407f5c:	stp	x20, x19, [sp, #16]
  407f60:	mov	x29, sp
  407f64:	cbz	x0, 407fbc <ferror@plt+0x53bc>
  407f68:	ldrb	w8, [x0]
  407f6c:	cbz	w8, 407fc8 <ferror@plt+0x53c8>
  407f70:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  407f74:	add	x1, x1, #0x1d7
  407f78:	bl	4111c8 <ferror@plt+0xe5c8>
  407f7c:	cbz	x0, 407fd4 <ferror@plt+0x53d4>
  407f80:	mov	x19, x0
  407f84:	bl	4026d0 <fileno@plt>
  407f88:	mov	w1, #0x1                   	// #1
  407f8c:	bl	410898 <ferror@plt+0xdc98>
  407f90:	cbz	w0, 407fb4 <ferror@plt+0x53b4>
  407f94:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407f98:	ldr	w20, [x8, #1240]
  407f9c:	bl	402b80 <__errno_location@plt>
  407fa0:	ldr	w1, [x0]
  407fa4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  407fa8:	add	x2, x2, #0x1d9
  407fac:	mov	w0, w20
  407fb0:	bl	402d0c <ferror@plt+0x10c>
  407fb4:	mov	x0, x19
  407fb8:	b	407fcc <ferror@plt+0x53cc>
  407fbc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407fc0:	ldr	x0, [x8, #1080]
  407fc4:	b	407fcc <ferror@plt+0x53cc>
  407fc8:	mov	x0, xzr
  407fcc:	bl	407c44 <ferror@plt+0x5044>
  407fd0:	mov	w0, #0x1                   	// #1
  407fd4:	ldp	x20, x19, [sp, #16]
  407fd8:	ldp	x29, x30, [sp], #32
  407fdc:	ret
  407fe0:	stp	x29, x30, [sp, #-48]!
  407fe4:	stp	x20, x19, [sp, #32]
  407fe8:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  407fec:	ldr	x0, [x19, #2136]
  407ff0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  407ff4:	add	x1, x1, #0x209
  407ff8:	str	x21, [sp, #16]
  407ffc:	mov	x29, sp
  408000:	bl	4151e4 <ferror@plt+0x125e4>
  408004:	adrp	x20, 436000 <__progname@@GLIBC_2.17+0xab98>
  408008:	ldr	w8, [x20, #3520]
  40800c:	cbz	w8, 408050 <ferror@plt+0x5450>
  408010:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408014:	ldr	w8, [x21, #1220]
  408018:	tbz	w8, #5, 408038 <ferror@plt+0x5438>
  40801c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  408020:	ldr	x0, [x19, #2136]
  408024:	ldr	x2, [x8, #3544]
  408028:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40802c:	add	x1, x1, #0x212
  408030:	bl	4151e4 <ferror@plt+0x125e4>
  408034:	ldr	w8, [x21, #1220]
  408038:	tbz	w8, #4, 408050 <ferror@plt+0x5450>
  40803c:	ldr	x0, [x19, #2136]
  408040:	ldr	w2, [x20, #3520]
  408044:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  408048:	add	x1, x1, #0x216
  40804c:	bl	4151e4 <ferror@plt+0x125e4>
  408050:	ldr	x1, [x19, #2136]
  408054:	ldp	x20, x19, [sp, #32]
  408058:	ldr	x21, [sp, #16]
  40805c:	mov	w0, #0x20                  	// #32
  408060:	ldp	x29, x30, [sp], #48
  408064:	b	402640 <putc@plt>
  408068:	stp	x29, x30, [sp, #-32]!
  40806c:	str	x19, [sp, #16]
  408070:	mov	x19, x0
  408074:	mov	w0, w1
  408078:	mov	x29, sp
  40807c:	bl	40809c <ferror@plt+0x549c>
  408080:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  408084:	add	x0, x0, #0x21a
  408088:	mov	x1, x19
  40808c:	bl	40814c <ferror@plt+0x554c>
  408090:	ldr	x19, [sp, #16]
  408094:	ldp	x29, x30, [sp], #32
  408098:	b	4083f8 <ferror@plt+0x57f8>
  40809c:	stp	x29, x30, [sp, #-48]!
  4080a0:	stp	x20, x19, [sp, #32]
  4080a4:	mov	w19, w0
  4080a8:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  4080ac:	add	x0, x0, #0x2d8
  4080b0:	str	x21, [sp, #16]
  4080b4:	mov	x29, sp
  4080b8:	bl	40814c <ferror@plt+0x554c>
  4080bc:	adrp	x20, 436000 <__progname@@GLIBC_2.17+0xab98>
  4080c0:	ldr	w8, [x20, #3520]
  4080c4:	cbz	w8, 408100 <ferror@plt+0x5500>
  4080c8:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4080cc:	ldr	w8, [x21, #1220]
  4080d0:	tbz	w8, #5, 4080ec <ferror@plt+0x54ec>
  4080d4:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  4080d8:	ldr	x1, [x8, #3544]
  4080dc:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  4080e0:	add	x0, x0, #0x212
  4080e4:	bl	40814c <ferror@plt+0x554c>
  4080e8:	ldr	w8, [x21, #1220]
  4080ec:	tbz	w8, #4, 408100 <ferror@plt+0x5500>
  4080f0:	ldr	w1, [x20, #3520]
  4080f4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  4080f8:	add	x0, x0, #0x216
  4080fc:	bl	40814c <ferror@plt+0x554c>
  408100:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408104:	ldr	w1, [x8, #2480]
  408108:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40810c:	add	x0, x0, #0x2e1
  408110:	bl	40814c <ferror@plt+0x554c>
  408114:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408118:	ldrb	w8, [x8, #1221]
  40811c:	tbnz	w8, #1, 408130 <ferror@plt+0x5530>
  408120:	ldp	x20, x19, [sp, #32]
  408124:	ldr	x21, [sp, #16]
  408128:	ldp	x29, x30, [sp], #48
  40812c:	ret
  408130:	mov	w1, w19
  408134:	ldp	x20, x19, [sp, #32]
  408138:	ldr	x21, [sp, #16]
  40813c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  408140:	add	x0, x0, #0x2e8
  408144:	ldp	x29, x30, [sp], #48
  408148:	b	40814c <ferror@plt+0x554c>
  40814c:	sub	sp, sp, #0x140
  408150:	stp	x29, x30, [sp, #224]
  408154:	add	x29, sp, #0xe0
  408158:	mov	x8, #0xffffffffffffffc8    	// #-56
  40815c:	mov	x9, sp
  408160:	stp	x26, x25, [sp, #256]
  408164:	stp	x24, x23, [sp, #272]
  408168:	stp	x20, x19, [sp, #304]
  40816c:	movk	x8, #0xff80, lsl #32
  408170:	sub	x10, x29, #0x60
  408174:	adrp	x23, 417000 <_obstack_memory_used@@Base+0x140c>
  408178:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40817c:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408180:	add	x9, x9, #0x80
  408184:	stp	x28, x27, [sp, #240]
  408188:	mov	x19, x0
  40818c:	add	x11, x29, #0x60
  408190:	add	x23, x23, #0xe97
  408194:	add	x25, x25, #0x878
  408198:	add	x20, x20, #0x860
  40819c:	adrp	x26, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4081a0:	mov	w27, #0x2e                  	// #46
  4081a4:	mov	w28, #0x2e2e                	// #11822
  4081a8:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4081ac:	stp	x9, x8, [x29, #-24]
  4081b0:	add	x8, x10, #0x38
  4081b4:	stp	x22, x21, [sp, #288]
  4081b8:	stp	x1, x2, [x29, #-96]
  4081bc:	stp	x3, x4, [x29, #-80]
  4081c0:	stp	x5, x6, [x29, #-64]
  4081c4:	stur	x7, [x29, #-48]
  4081c8:	stp	q0, q1, [sp]
  4081cc:	stp	q2, q3, [sp, #32]
  4081d0:	stp	q4, q5, [sp, #64]
  4081d4:	stp	q6, q7, [sp, #96]
  4081d8:	stp	x11, x8, [x29, #-40]
  4081dc:	mov	x21, x19
  4081e0:	ldrb	w22, [x21], #1
  4081e4:	cmp	w22, #0x25
  4081e8:	b.eq	408220 <ferror@plt+0x5620>  // b.none
  4081ec:	cbz	w22, 4083d8 <ferror@plt+0x57d8>
  4081f0:	ldp	x8, x9, [x25]
  4081f4:	cmp	x9, x8
  4081f8:	b.ne	40820c <ferror@plt+0x560c>  // b.any
  4081fc:	mov	w1, #0x1                   	// #1
  408200:	mov	x0, x20
  408204:	bl	4159e4 <_obstack_newchunk@@Base>
  408208:	ldr	x8, [x20, #24]
  40820c:	add	x9, x8, #0x1
  408210:	str	x9, [x26, #2168]
  408214:	strb	w22, [x8]
  408218:	mov	x19, x21
  40821c:	b	4081dc <ferror@plt+0x55dc>
  408220:	ldrb	w8, [x19, #1]
  408224:	mov	w22, wzr
  408228:	cmp	w8, #0x6b
  40822c:	b.le	408250 <ferror@plt+0x5650>
  408230:	cmp	w8, #0x6c
  408234:	b.eq	408288 <ferror@plt+0x5688>  // b.none
  408238:	cmp	w8, #0x72
  40823c:	b.eq	408298 <ferror@plt+0x5698>  // b.none
  408240:	cmp	w8, #0x73
  408244:	mov	x21, x23
  408248:	b.eq	4082bc <ferror@plt+0x56bc>  // b.none
  40824c:	b	408314 <ferror@plt+0x5714>
  408250:	cmp	w8, #0x53
  408254:	b.eq	4082b4 <ferror@plt+0x56b4>  // b.none
  408258:	cmp	w8, #0x64
  40825c:	mov	x21, x23
  408260:	b.ne	408314 <ferror@plt+0x5714>  // b.any
  408264:	ldursw	x8, [x29, #-16]
  408268:	tbz	w8, #31, 4082f4 <ferror@plt+0x56f4>
  40826c:	add	w9, w8, #0x8
  408270:	cmn	w8, #0x8
  408274:	stur	w9, [x29, #-16]
  408278:	b.gt	4082f4 <ferror@plt+0x56f4>
  40827c:	ldur	x9, [x29, #-32]
  408280:	add	x8, x9, x8
  408284:	b	408300 <ferror@plt+0x5700>
  408288:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  40828c:	ldrb	w8, [x24, #1220]
  408290:	ldr	x9, [x9, #3528]
  408294:	b	4082a4 <ferror@plt+0x56a4>
  408298:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  40829c:	ldrb	w8, [x24, #1220]
  4082a0:	ldr	x9, [x9, #3584]
  4082a4:	mov	w22, wzr
  4082a8:	tst	w8, #0x4
  4082ac:	csel	x21, x23, x9, eq  // eq = none
  4082b0:	b	408314 <ferror@plt+0x5714>
  4082b4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4082b8:	ldr	w22, [x8, #1232]
  4082bc:	ldursw	x8, [x29, #-16]
  4082c0:	tbz	w8, #31, 4082e0 <ferror@plt+0x56e0>
  4082c4:	add	w9, w8, #0x8
  4082c8:	cmn	w8, #0x8
  4082cc:	stur	w9, [x29, #-16]
  4082d0:	b.gt	4082e0 <ferror@plt+0x56e0>
  4082d4:	ldur	x9, [x29, #-32]
  4082d8:	add	x8, x9, x8
  4082dc:	b	4082ec <ferror@plt+0x56ec>
  4082e0:	ldur	x8, [x29, #-40]
  4082e4:	add	x9, x8, #0x8
  4082e8:	stur	x9, [x29, #-40]
  4082ec:	ldr	x21, [x8]
  4082f0:	b	408314 <ferror@plt+0x5714>
  4082f4:	ldur	x8, [x29, #-40]
  4082f8:	add	x9, x8, #0x8
  4082fc:	stur	x9, [x29, #-40]
  408300:	ldr	w0, [x8]
  408304:	mov	w1, #0xa                   	// #10
  408308:	bl	403c00 <ferror@plt+0x1000>
  40830c:	mov	x21, x0
  408310:	mov	w22, wzr
  408314:	mov	x0, x21
  408318:	add	x19, x19, #0x2
  40831c:	bl	402580 <strlen@plt>
  408320:	cbz	w22, 408394 <ferror@plt+0x5794>
  408324:	cmp	w22, w0
  408328:	b.gt	408394 <ferror@plt+0x5794>
  40832c:	ldp	x0, x8, [x25]
  408330:	sub	x8, x8, x0
  408334:	cmp	x8, w22, sxtw
  408338:	sxtw	x22, w22
  40833c:	b.cs	408350 <ferror@plt+0x5750>  // b.hs, b.nlast
  408340:	mov	x0, x20
  408344:	mov	x1, x22
  408348:	bl	4159e4 <_obstack_newchunk@@Base>
  40834c:	ldr	x0, [x20, #24]
  408350:	mov	x1, x21
  408354:	mov	x2, x22
  408358:	bl	402550 <memcpy@plt>
  40835c:	ldp	x8, x9, [x25]
  408360:	add	x8, x8, x22
  408364:	sub	x9, x9, x8
  408368:	cmp	x9, #0x2
  40836c:	str	x8, [x25]
  408370:	b.hi	408384 <ferror@plt+0x5784>  // b.pmore
  408374:	mov	w1, #0x3                   	// #3
  408378:	mov	x0, x20
  40837c:	bl	4159e4 <_obstack_newchunk@@Base>
  408380:	ldr	x8, [x20, #24]
  408384:	mov	w22, #0x3                   	// #3
  408388:	strb	w27, [x8, #2]
  40838c:	strh	w28, [x8]
  408390:	b	4083c8 <ferror@plt+0x57c8>
  408394:	ldp	x8, x9, [x25]
  408398:	sxtw	x22, w0
  40839c:	sub	x9, x9, x8
  4083a0:	cmp	x9, w0, sxtw
  4083a4:	b.cs	4083b8 <ferror@plt+0x57b8>  // b.hs, b.nlast
  4083a8:	mov	x0, x20
  4083ac:	mov	x1, x22
  4083b0:	bl	4159e4 <_obstack_newchunk@@Base>
  4083b4:	ldr	x8, [x20, #24]
  4083b8:	mov	x0, x8
  4083bc:	mov	x1, x21
  4083c0:	mov	x2, x22
  4083c4:	bl	402550 <memcpy@plt>
  4083c8:	ldr	x8, [x26, #2168]
  4083cc:	add	x8, x8, x22
  4083d0:	str	x8, [x26, #2168]
  4083d4:	b	4081dc <ferror@plt+0x55dc>
  4083d8:	ldp	x20, x19, [sp, #304]
  4083dc:	ldp	x22, x21, [sp, #288]
  4083e0:	ldp	x24, x23, [sp, #272]
  4083e4:	ldp	x26, x25, [sp, #256]
  4083e8:	ldp	x28, x27, [sp, #240]
  4083ec:	ldp	x29, x30, [sp, #224]
  4083f0:	add	sp, sp, #0x140
  4083f4:	ret
  4083f8:	stp	x29, x30, [sp, #-48]!
  4083fc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408400:	str	x21, [sp, #16]
  408404:	stp	x20, x19, [sp, #32]
  408408:	add	x8, x8, #0x878
  40840c:	ldp	x8, x9, [x8]
  408410:	mov	x29, sp
  408414:	cmp	x9, x8
  408418:	b.ne	408434 <ferror@plt+0x5834>  // b.any
  40841c:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408420:	add	x19, x19, #0x860
  408424:	mov	w1, #0x1                   	// #1
  408428:	mov	x0, x19
  40842c:	bl	4159e4 <_obstack_newchunk@@Base>
  408430:	ldr	x8, [x19, #24]
  408434:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408438:	add	x9, x8, #0x1
  40843c:	add	x20, x20, #0x870
  408440:	str	x9, [x20, #8]
  408444:	strb	wzr, [x8]
  408448:	ldp	x19, x10, [x20]
  40844c:	cmp	x10, x19
  408450:	b.ne	408464 <ferror@plt+0x5864>  // b.any
  408454:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408458:	ldrb	w9, [x8, #2224]
  40845c:	orr	w9, w9, #0x2
  408460:	strb	w9, [x8, #2224]
  408464:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408468:	add	x21, x21, #0x868
  40846c:	ldr	x11, [x21, #40]
  408470:	ldr	x9, [x21]
  408474:	ldr	x8, [x21, #24]
  408478:	adrp	x12, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40847c:	add	x10, x11, x10
  408480:	ldr	x0, [x12, #2136]
  408484:	bic	x10, x10, x11
  408488:	sub	x12, x8, x9
  40848c:	sub	x11, x10, x9
  408490:	cmp	x11, x12
  408494:	csel	x10, x8, x10, hi  // hi = pmore
  408498:	stp	x10, x10, [x21, #8]
  40849c:	cbz	x0, 4084b8 <ferror@plt+0x58b8>
  4084a0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x340c>
  4084a4:	add	x1, x1, #0x9e9
  4084a8:	mov	x2, x19
  4084ac:	bl	4151e4 <ferror@plt+0x125e4>
  4084b0:	ldr	x9, [x21]
  4084b4:	ldr	x8, [x21, #24]
  4084b8:	cmp	x19, x9
  4084bc:	b.ls	4084dc <ferror@plt+0x58dc>  // b.plast
  4084c0:	cmp	x19, x8
  4084c4:	b.cs	4084dc <ferror@plt+0x58dc>  // b.hs, b.nlast
  4084c8:	stp	x19, x19, [x20]
  4084cc:	ldp	x20, x19, [sp, #32]
  4084d0:	ldr	x21, [sp, #16]
  4084d4:	ldp	x29, x30, [sp], #48
  4084d8:	ret
  4084dc:	mov	x1, x19
  4084e0:	ldp	x20, x19, [sp, #32]
  4084e4:	ldr	x21, [sp, #16]
  4084e8:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4084ec:	add	x0, x0, #0x860
  4084f0:	ldp	x29, x30, [sp], #48
  4084f4:	b	415b5c <_obstack_free@@Base>
  4084f8:	stp	x29, x30, [sp, #-80]!
  4084fc:	stp	x22, x21, [sp, #48]
  408500:	mov	x21, x0
  408504:	mov	w0, w1
  408508:	str	x25, [sp, #16]
  40850c:	stp	x24, x23, [sp, #32]
  408510:	stp	x20, x19, [sp, #64]
  408514:	mov	x29, sp
  408518:	mov	x19, x3
  40851c:	mov	w20, w2
  408520:	bl	40809c <ferror@plt+0x549c>
  408524:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  408528:	add	x0, x0, #0xf6
  40852c:	mov	x1, x21
  408530:	bl	40814c <ferror@plt+0x554c>
  408534:	cmp	w20, #0x2
  408538:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40853c:	b.lt	4085e0 <ferror@plt+0x59e0>  // b.tstop
  408540:	ldrb	w8, [x21, #1220]
  408544:	tbz	w8, #0, 4085e0 <ferror@plt+0x59e0>
  408548:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40854c:	add	x0, x0, #0x221
  408550:	bl	40814c <ferror@plt+0x554c>
  408554:	mov	w8, w20
  408558:	add	x20, x19, #0x8
  40855c:	adrp	x23, 416000 <_obstack_memory_used@@Base+0x40c>
  408560:	adrp	x24, 418000 <_obstack_memory_used@@Base+0x240c>
  408564:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x240c>
  408568:	mov	x22, xzr
  40856c:	add	x23, x23, #0x8cb
  408570:	add	x24, x24, #0x2b3
  408574:	sub	x25, x8, #0x1
  408578:	add	x19, x19, #0x223
  40857c:	cbz	x22, 408588 <ferror@plt+0x5988>
  408580:	mov	x0, x19
  408584:	bl	40814c <ferror@plt+0x554c>
  408588:	ldr	x8, [x20, x22, lsl #3]
  40858c:	ldr	w9, [x8]
  408590:	cmp	w9, #0x2
  408594:	b.eq	4085ac <ferror@plt+0x59ac>  // b.none
  408598:	cmp	w9, #0x1
  40859c:	b.ne	408624 <ferror@plt+0x5a24>  // b.any
  4085a0:	add	x0, x8, #0x8
  4085a4:	mov	x2, x24
  4085a8:	b	4085bc <ferror@plt+0x59bc>
  4085ac:	ldr	x0, [x8, #8]
  4085b0:	bl	403778 <ferror@plt+0xb78>
  4085b4:	cbz	x0, 408638 <ferror@plt+0x5a38>
  4085b8:	mov	x2, x23
  4085bc:	ldr	x1, [x0]
  4085c0:	mov	x0, x2
  4085c4:	bl	40814c <ferror@plt+0x554c>
  4085c8:	add	x22, x22, #0x1
  4085cc:	cmp	x25, x22
  4085d0:	b.ne	40857c <ferror@plt+0x597c>  // b.any
  4085d4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  4085d8:	add	x0, x0, #0xd40
  4085dc:	bl	40814c <ferror@plt+0x554c>
  4085e0:	ldrb	w8, [x21, #1220]
  4085e4:	tbnz	w8, #7, 408600 <ferror@plt+0x5a00>
  4085e8:	ldp	x20, x19, [sp, #64]
  4085ec:	ldp	x22, x21, [sp, #48]
  4085f0:	ldp	x24, x23, [sp, #32]
  4085f4:	ldr	x25, [sp, #16]
  4085f8:	ldp	x29, x30, [sp], #80
  4085fc:	ret
  408600:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  408604:	add	x0, x0, #0x29c
  408608:	bl	40814c <ferror@plt+0x554c>
  40860c:	ldp	x20, x19, [sp, #64]
  408610:	ldp	x22, x21, [sp, #48]
  408614:	ldp	x24, x23, [sp, #32]
  408618:	ldr	x25, [sp, #16]
  40861c:	ldp	x29, x30, [sp], #80
  408620:	b	4083f8 <ferror@plt+0x57f8>
  408624:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408628:	ldr	w0, [x8, #1240]
  40862c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  408630:	add	x2, x2, #0x269
  408634:	b	408648 <ferror@plt+0x5a48>
  408638:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40863c:	ldr	w0, [x8, #1240]
  408640:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  408644:	add	x2, x2, #0x226
  408648:	mov	w1, wzr
  40864c:	bl	402d0c <ferror@plt+0x10c>
  408650:	bl	402920 <abort@plt>
  408654:	stp	x29, x30, [sp, #-48]!
  408658:	stp	x22, x21, [sp, #16]
  40865c:	stp	x20, x19, [sp, #32]
  408660:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408664:	ldrb	w8, [x22, #1220]
  408668:	mov	x19, x3
  40866c:	mov	x29, sp
  408670:	tbz	w8, #7, 4086ac <ferror@plt+0x5aac>
  408674:	mov	x20, x0
  408678:	mov	w0, w1
  40867c:	mov	w21, w2
  408680:	bl	40809c <ferror@plt+0x549c>
  408684:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x140c>
  408688:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x240c>
  40868c:	add	x8, x8, #0xe97
  408690:	add	x9, x9, #0x2a9
  408694:	cmp	w21, #0x1
  408698:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40869c:	csel	x2, x9, x8, gt
  4086a0:	add	x0, x0, #0x2a4
  4086a4:	mov	x1, x20
  4086a8:	bl	40814c <ferror@plt+0x554c>
  4086ac:	cbz	x19, 4086c8 <ferror@plt+0x5ac8>
  4086b0:	ldrb	w8, [x22, #1220]
  4086b4:	tbz	w8, #1, 4086c8 <ferror@plt+0x5ac8>
  4086b8:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  4086bc:	add	x0, x0, #0x2af
  4086c0:	mov	x1, x19
  4086c4:	bl	40814c <ferror@plt+0x554c>
  4086c8:	ldp	x20, x19, [sp, #32]
  4086cc:	ldp	x22, x21, [sp, #16]
  4086d0:	ldp	x29, x30, [sp], #48
  4086d4:	b	4083f8 <ferror@plt+0x57f8>
  4086d8:	stp	x29, x30, [sp, #-48]!
  4086dc:	str	x21, [sp, #16]
  4086e0:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4086e4:	stp	x20, x19, [sp, #32]
  4086e8:	mov	x19, x0
  4086ec:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4086f0:	str	x0, [x21, #2232]
  4086f4:	mov	x0, x1
  4086f8:	mov	x29, sp
  4086fc:	mov	x20, x1
  408700:	str	xzr, [x8, #2240]
  408704:	bl	408848 <ferror@plt+0x5c48>
  408708:	mov	x1, x20
  40870c:	bl	408c50 <ferror@plt+0x6050>
  408710:	cmp	w0, #0x8
  408714:	b.hi	40882c <ferror@plt+0x5c2c>  // b.pmore
  408718:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x240c>
  40871c:	mov	w8, w0
  408720:	add	x9, x9, #0x2f0
  408724:	adr	x10, 408734 <ferror@plt+0x5b34>
  408728:	ldrb	w11, [x9, x8]
  40872c:	add	x10, x10, x11, lsl #2
  408730:	br	x10
  408734:	ldr	x8, [x21, #2232]
  408738:	ldrb	w8, [x8]
  40873c:	cbz	w8, 408824 <ferror@plt+0x5c24>
  408740:	mov	x0, x20
  408744:	bl	408848 <ferror@plt+0x5c48>
  408748:	cmp	w0, #0x1
  40874c:	b.ne	40877c <ferror@plt+0x5b7c>  // b.any
  408750:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408754:	ldr	w0, [x8, #1240]
  408758:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40875c:	add	x2, x2, #0x3be
  408760:	mov	w1, wzr
  408764:	mov	x3, x19
  408768:	bl	402d0c <ferror@plt+0x10c>
  40876c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  408770:	mov	w0, #0x1                   	// #1
  408774:	str	w0, [x8, #3512]
  408778:	b	408814 <ferror@plt+0x5c14>
  40877c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408780:	ldr	w0, [x8, #1240]
  408784:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  408788:	add	x2, x2, #0x394
  40878c:	b	408804 <ferror@plt+0x5c04>
  408790:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408794:	ldr	w0, [x8, #1240]
  408798:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40879c:	add	x2, x2, #0x3f6
  4087a0:	b	408804 <ferror@plt+0x5c04>
  4087a4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4087a8:	ldr	w0, [x8, #1240]
  4087ac:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  4087b0:	add	x2, x2, #0x3db
  4087b4:	b	408804 <ferror@plt+0x5c04>
  4087b8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4087bc:	ldr	w0, [x8, #1240]
  4087c0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  4087c4:	add	x2, x2, #0x31b
  4087c8:	b	408804 <ferror@plt+0x5c04>
  4087cc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4087d0:	ldr	w0, [x8, #1240]
  4087d4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  4087d8:	add	x2, x2, #0x411
  4087dc:	b	408804 <ferror@plt+0x5c04>
  4087e0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4087e4:	ldr	w0, [x8, #1240]
  4087e8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  4087ec:	add	x2, x2, #0x352
  4087f0:	b	408804 <ferror@plt+0x5c04>
  4087f4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4087f8:	ldr	w0, [x8, #1240]
  4087fc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  408800:	add	x2, x2, #0x36d
  408804:	mov	w1, wzr
  408808:	mov	x3, x19
  40880c:	bl	402d0c <ferror@plt+0x10c>
  408810:	mov	w0, #0x1                   	// #1
  408814:	ldp	x20, x19, [sp, #32]
  408818:	ldr	x21, [sp, #16]
  40881c:	ldp	x29, x30, [sp], #48
  408820:	ret
  408824:	mov	w0, wzr
  408828:	b	408814 <ferror@plt+0x5c14>
  40882c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408830:	ldr	w0, [x8, #1240]
  408834:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  408838:	add	x2, x2, #0x42f
  40883c:	mov	w1, wzr
  408840:	bl	402d0c <ferror@plt+0x10c>
  408844:	bl	402920 <abort@plt>
  408848:	stp	x29, x30, [sp, #-32]!
  40884c:	str	x19, [sp, #16]
  408850:	mov	x29, sp
  408854:	mov	x19, x0
  408858:	bl	4029a0 <__ctype_b_loc@plt>
  40885c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408860:	ldr	x11, [x8, #2232]
  408864:	ldr	x9, [x0]
  408868:	ldrb	w10, [x11]
  40886c:	ldrh	w12, [x9, x10, lsl #1]
  408870:	tbz	w12, #13, 408884 <ferror@plt+0x5c84>
  408874:	ldrb	w10, [x11, #1]!
  408878:	ldrh	w12, [x9, x10, lsl #1]
  40887c:	tbnz	w12, #13, 408874 <ferror@plt+0x5c74>
  408880:	str	x11, [x8, #2232]
  408884:	adrp	x13, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408888:	str	x11, [x13, #2240]
  40888c:	cbz	w10, 4088e4 <ferror@plt+0x5ce4>
  408890:	tbnz	w12, #11, 4088ec <ferror@plt+0x5cec>
  408894:	add	x9, x11, #0x1
  408898:	cmp	w10, #0x5d
  40889c:	str	x9, [x8, #2232]
  4088a0:	b.gt	40895c <ferror@plt+0x5d5c>
  4088a4:	sub	w10, w10, #0x21
  4088a8:	cmp	w10, #0x1d
  4088ac:	b.hi	4089a0 <ferror@plt+0x5da0>  // b.pmore
  4088b0:	adrp	x12, 418000 <_obstack_memory_used@@Base+0x240c>
  4088b4:	add	x12, x12, #0x2f9
  4088b8:	adr	x13, 4088c8 <ferror@plt+0x5cc8>
  4088bc:	ldrb	w14, [x12, x10]
  4088c0:	add	x13, x13, x14, lsl #2
  4088c4:	br	x13
  4088c8:	ldrb	w9, [x9]
  4088cc:	cmp	w9, #0x3d
  4088d0:	b.ne	408bdc <ferror@plt+0x5fdc>  // b.any
  4088d4:	add	x9, x11, #0x2
  4088d8:	str	x9, [x8, #2232]
  4088dc:	mov	w0, #0xa                   	// #10
  4088e0:	b	408c34 <ferror@plt+0x6034>
  4088e4:	mov	w0, #0x1b                  	// #27
  4088e8:	b	408c34 <ferror@plt+0x6034>
  4088ec:	cmp	w10, #0x30
  4088f0:	b.ne	408950 <ferror@plt+0x5d50>  // b.any
  4088f4:	add	x12, x11, #0x1
  4088f8:	str	x12, [x8, #2232]
  4088fc:	ldrb	w10, [x11, #1]
  408900:	sub	w13, w10, #0x42
  408904:	cmp	w13, #0x36
  408908:	mov	w10, #0x8                   	// #8
  40890c:	b.hi	4089f8 <ferror@plt+0x5df8>  // b.pmore
  408910:	mov	w14, #0x1                   	// #1
  408914:	lsl	x14, x14, x13
  408918:	tst	x14, #0x100000001
  40891c:	b.ne	40897c <ferror@plt+0x5d7c>  // b.any
  408920:	mov	w14, #0x1                   	// #1
  408924:	lsl	x14, x14, x13
  408928:	tst	x14, #0x1000000010000
  40892c:	b.ne	40898c <ferror@plt+0x5d8c>  // b.any
  408930:	mov	w14, #0x1                   	// #1
  408934:	lsl	x13, x14, x13
  408938:	tst	x13, #0x40000000400000
  40893c:	b.eq	4089f8 <ferror@plt+0x5df8>  // b.none
  408940:	add	x12, x11, #0x2
  408944:	str	x12, [x8, #2232]
  408948:	mov	w10, #0x10                  	// #16
  40894c:	b	4089f8 <ferror@plt+0x5df8>
  408950:	mov	w10, #0xa                   	// #10
  408954:	mov	x12, x11
  408958:	b	4089f8 <ferror@plt+0x5df8>
  40895c:	cmp	w10, #0x5e
  408960:	b.eq	408ba0 <ferror@plt+0x5fa0>  // b.none
  408964:	cmp	w10, #0x7c
  408968:	b.eq	408bb0 <ferror@plt+0x5fb0>  // b.none
  40896c:	cmp	w10, #0x7e
  408970:	b.ne	4089a0 <ferror@plt+0x5da0>  // b.any
  408974:	mov	w0, #0x14                  	// #20
  408978:	b	408c34 <ferror@plt+0x6034>
  40897c:	add	x12, x11, #0x2
  408980:	str	x12, [x8, #2232]
  408984:	mov	w10, #0x2                   	// #2
  408988:	b	4089f8 <ferror@plt+0x5df8>
  40898c:	add	x10, x11, #0x2
  408990:	str	x10, [x8, #2232]
  408994:	ldrb	w13, [x11, #2]
  408998:	ldrh	w10, [x9, x13, lsl #1]
  40899c:	tbnz	w10, #11, 4089a8 <ferror@plt+0x5da8>
  4089a0:	mov	w0, wzr
  4089a4:	b	408c34 <ferror@plt+0x6034>
  4089a8:	mov	w10, wzr
  4089ac:	add	x12, x11, #0x3
  4089b0:	mov	w11, #0xa                   	// #10
  4089b4:	mul	w10, w10, w11
  4089b8:	add	w10, w10, w13, uxtb
  4089bc:	ldrb	w13, [x12], #1
  4089c0:	sub	w10, w10, #0x30
  4089c4:	cmp	w10, #0x24
  4089c8:	b.gt	4089d4 <ferror@plt+0x5dd4>
  4089cc:	ldrh	w14, [x9, x13, lsl #1]
  4089d0:	tbnz	w14, #11, 4089b4 <ferror@plt+0x5db4>
  4089d4:	mov	w0, wzr
  4089d8:	sub	x11, x12, #0x1
  4089dc:	str	x11, [x8, #2232]
  4089e0:	cbz	w10, 408c34 <ferror@plt+0x6034>
  4089e4:	cmp	w10, #0x24
  4089e8:	b.gt	408c34 <ferror@plt+0x6034>
  4089ec:	cmp	w13, #0x3a
  4089f0:	b.ne	408c34 <ferror@plt+0x6034>  // b.any
  4089f4:	str	x12, [x8, #2232]
  4089f8:	str	wzr, [x19]
  4089fc:	ldrb	w15, [x12]
  408a00:	cbz	w15, 408a84 <ferror@plt+0x5e84>
  408a04:	mov	w13, wzr
  408a08:	mov	w14, wzr
  408a0c:	add	x11, x12, #0x1
  408a10:	and	x12, x15, #0xff
  408a14:	ldrh	w12, [x9, x12, lsl #1]
  408a18:	tbnz	w12, #11, 408a2c <ferror@plt+0x5e2c>
  408a1c:	tbnz	w12, #9, 408a34 <ferror@plt+0x5e34>
  408a20:	tbz	w12, #8, 408a84 <ferror@plt+0x5e84>
  408a24:	mov	w12, #0xffffffc9            	// #-55
  408a28:	b	408a38 <ferror@plt+0x5e38>
  408a2c:	mov	w12, #0xffffffd0            	// #-48
  408a30:	b	408a38 <ferror@plt+0x5e38>
  408a34:	mov	w12, #0xffffffa9            	// #-87
  408a38:	and	w15, w15, #0xff
  408a3c:	cmp	w10, #0x1
  408a40:	add	w12, w12, w15
  408a44:	b.ne	408a5c <ferror@plt+0x5e5c>  // b.any
  408a48:	cbz	w12, 408a74 <ferror@plt+0x5e74>
  408a4c:	cmp	w12, #0x1
  408a50:	b.ne	408a84 <ferror@plt+0x5e84>  // b.any
  408a54:	add	w13, w13, #0x1
  408a58:	b	408a68 <ferror@plt+0x5e68>
  408a5c:	cmp	w12, w10
  408a60:	b.ge	408a84 <ferror@plt+0x5e84>  // b.tcont
  408a64:	madd	w13, w14, w10, w12
  408a68:	mov	w14, w13
  408a6c:	str	w13, [x19]
  408a70:	b	408a78 <ferror@plt+0x5e78>
  408a74:	cbnz	w14, 408a84 <ferror@plt+0x5e84>
  408a78:	str	x11, [x8, #2232]
  408a7c:	ldrb	w15, [x11], #1
  408a80:	cbnz	w15, 408a10 <ferror@plt+0x5e10>
  408a84:	mov	w0, #0x1a                  	// #26
  408a88:	b	408c34 <ferror@plt+0x6034>
  408a8c:	ldrb	w8, [x9]
  408a90:	cmp	w8, #0x3d
  408a94:	mov	w8, #0x7                   	// #7
  408a98:	b	408c30 <ferror@plt+0x6030>
  408a9c:	ldrb	w9, [x9]
  408aa0:	cmp	w9, #0x3d
  408aa4:	b.eq	408bd4 <ferror@plt+0x5fd4>  // b.none
  408aa8:	cmp	w9, #0x26
  408aac:	b.ne	408bec <ferror@plt+0x5fec>  // b.any
  408ab0:	add	x9, x11, #0x2
  408ab4:	str	x9, [x8, #2232]
  408ab8:	mov	w0, #0x12                  	// #18
  408abc:	b	408c34 <ferror@plt+0x6034>
  408ac0:	mov	w0, #0x18                  	// #24
  408ac4:	b	408c34 <ferror@plt+0x6034>
  408ac8:	mov	w0, #0x19                  	// #25
  408acc:	b	408c34 <ferror@plt+0x6034>
  408ad0:	ldrb	w9, [x9]
  408ad4:	cmp	w9, #0x3d
  408ad8:	b.eq	408bd4 <ferror@plt+0x5fd4>  // b.none
  408adc:	cmp	w9, #0x2a
  408ae0:	b.ne	408bf4 <ferror@plt+0x5ff4>  // b.any
  408ae4:	add	x9, x11, #0x2
  408ae8:	str	x9, [x8, #2232]
  408aec:	mov	w0, #0x4                   	// #4
  408af0:	b	408c34 <ferror@plt+0x6034>
  408af4:	ldrb	w8, [x9]
  408af8:	mov	w0, #0x1                   	// #1
  408afc:	cmp	w8, #0x2b
  408b00:	b.eq	408c34 <ferror@plt+0x6034>  // b.none
  408b04:	cmp	w8, #0x3d
  408b08:	b.eq	408c34 <ferror@plt+0x6034>  // b.none
  408b0c:	mov	w0, #0x2                   	// #2
  408b10:	b	408c34 <ferror@plt+0x6034>
  408b14:	ldrb	w8, [x9]
  408b18:	orr	w8, w8, #0x10
  408b1c:	cmp	w8, #0x3d
  408b20:	b.eq	408bd4 <ferror@plt+0x5fd4>  // b.none
  408b24:	mov	w0, #0x3                   	// #3
  408b28:	b	408c34 <ferror@plt+0x6034>
  408b2c:	ldrb	w8, [x9]
  408b30:	cmp	w8, #0x3d
  408b34:	mov	w8, #0x6                   	// #6
  408b38:	b	408c30 <ferror@plt+0x6030>
  408b3c:	ldrb	w9, [x9]
  408b40:	cmp	w9, #0x3c
  408b44:	b.eq	408bfc <ferror@plt+0x5ffc>  // b.none
  408b48:	cmp	w9, #0x3d
  408b4c:	b.ne	408c14 <ferror@plt+0x6014>  // b.any
  408b50:	add	x9, x11, #0x2
  408b54:	str	x9, [x8, #2232]
  408b58:	mov	w0, #0xe                   	// #14
  408b5c:	b	408c34 <ferror@plt+0x6034>
  408b60:	ldrb	w9, [x9]
  408b64:	cmp	w9, #0x3d
  408b68:	b.ne	408be4 <ferror@plt+0x5fe4>  // b.any
  408b6c:	add	x9, x11, #0x2
  408b70:	str	x9, [x8, #2232]
  408b74:	mov	w0, #0x9                   	// #9
  408b78:	b	408c34 <ferror@plt+0x6034>
  408b7c:	ldrb	w9, [x9]
  408b80:	cmp	w9, #0x3e
  408b84:	b.eq	408c1c <ferror@plt+0x601c>  // b.none
  408b88:	cmp	w9, #0x3d
  408b8c:	b.ne	408c40 <ferror@plt+0x6040>  // b.any
  408b90:	add	x9, x11, #0x2
  408b94:	str	x9, [x8, #2232]
  408b98:	mov	w0, #0xc                   	// #12
  408b9c:	b	408c34 <ferror@plt+0x6034>
  408ba0:	ldrb	w8, [x9]
  408ba4:	cmp	w8, #0x3d
  408ba8:	mov	w8, #0x17                  	// #23
  408bac:	b	408c30 <ferror@plt+0x6030>
  408bb0:	ldrb	w9, [x9]
  408bb4:	cmp	w9, #0x3d
  408bb8:	b.eq	408bd4 <ferror@plt+0x5fd4>  // b.none
  408bbc:	cmp	w9, #0x7c
  408bc0:	b.ne	408c48 <ferror@plt+0x6048>  // b.any
  408bc4:	add	x9, x11, #0x2
  408bc8:	str	x9, [x8, #2232]
  408bcc:	mov	w0, #0x13                  	// #19
  408bd0:	b	408c34 <ferror@plt+0x6034>
  408bd4:	mov	w0, #0x1                   	// #1
  408bd8:	b	408c34 <ferror@plt+0x6034>
  408bdc:	mov	w0, #0x11                  	// #17
  408be0:	b	408c34 <ferror@plt+0x6034>
  408be4:	mov	w0, #0x8                   	// #8
  408be8:	b	408c34 <ferror@plt+0x6034>
  408bec:	mov	w0, #0x15                  	// #21
  408bf0:	b	408c34 <ferror@plt+0x6034>
  408bf4:	mov	w0, #0x5                   	// #5
  408bf8:	b	408c34 <ferror@plt+0x6034>
  408bfc:	add	x9, x11, #0x2
  408c00:	str	x9, [x8, #2232]
  408c04:	ldrb	w8, [x11, #2]
  408c08:	cmp	w8, #0x3d
  408c0c:	mov	w8, #0xf                   	// #15
  408c10:	b	408c30 <ferror@plt+0x6030>
  408c14:	mov	w0, #0xd                   	// #13
  408c18:	b	408c34 <ferror@plt+0x6034>
  408c1c:	add	x9, x11, #0x2
  408c20:	str	x9, [x8, #2232]
  408c24:	ldrb	w8, [x11, #2]
  408c28:	cmp	w8, #0x3d
  408c2c:	mov	w8, #0x10                  	// #16
  408c30:	csinc	w0, w8, wzr, ne  // ne = any
  408c34:	ldr	x19, [sp, #16]
  408c38:	ldp	x29, x30, [sp], #32
  408c3c:	ret
  408c40:	mov	w0, #0xb                   	// #11
  408c44:	b	408c34 <ferror@plt+0x6034>
  408c48:	mov	w0, #0x16                  	// #22
  408c4c:	b	408c34 <ferror@plt+0x6034>
  408c50:	stp	x29, x30, [sp, #-32]!
  408c54:	str	x19, [sp, #16]
  408c58:	mov	x29, sp
  408c5c:	mov	x19, x1
  408c60:	bl	408cec <ferror@plt+0x60ec>
  408c64:	cbnz	w0, 408ce0 <ferror@plt+0x60e0>
  408c68:	b	408cb0 <ferror@plt+0x60b0>
  408c6c:	add	x0, x29, #0x1c
  408c70:	bl	408848 <ferror@plt+0x5c48>
  408c74:	cbz	w0, 408cc4 <ferror@plt+0x60c4>
  408c78:	add	x1, x29, #0x1c
  408c7c:	bl	408cec <ferror@plt+0x60ec>
  408c80:	ldr	w8, [x19]
  408c84:	cbz	w0, 408c9c <ferror@plt+0x609c>
  408c88:	cmp	w0, #0x3
  408c8c:	b.hi	408ce0 <ferror@plt+0x60e0>  // b.pmore
  408c90:	cbz	w8, 408ce0 <ferror@plt+0x60e0>
  408c94:	mov	w8, #0x1                   	// #1
  408c98:	b	408cac <ferror@plt+0x60ac>
  408c9c:	ldr	w9, [x29, #28]
  408ca0:	orr	w8, w9, w8
  408ca4:	cmp	w8, #0x0
  408ca8:	cset	w8, ne  // ne = any
  408cac:	str	w8, [x19]
  408cb0:	add	x0, x29, #0x1c
  408cb4:	bl	408848 <ferror@plt+0x5c48>
  408cb8:	cmp	w0, #0x13
  408cbc:	b.eq	408c6c <ferror@plt+0x606c>  // b.none
  408cc0:	cbnz	w0, 408ccc <ferror@plt+0x60cc>
  408cc4:	mov	w0, #0x6                   	// #6
  408cc8:	b	408ce0 <ferror@plt+0x60e0>
  408ccc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408cd0:	ldr	x8, [x8, #2240]
  408cd4:	mov	w0, wzr
  408cd8:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408cdc:	str	x8, [x9, #2232]
  408ce0:	ldr	x19, [sp, #16]
  408ce4:	ldp	x29, x30, [sp], #32
  408ce8:	ret
  408cec:	stp	x29, x30, [sp, #-32]!
  408cf0:	str	x19, [sp, #16]
  408cf4:	mov	x29, sp
  408cf8:	mov	x19, x1
  408cfc:	bl	408d8c <ferror@plt+0x618c>
  408d00:	cbnz	w0, 408d80 <ferror@plt+0x6180>
  408d04:	b	408d50 <ferror@plt+0x6150>
  408d08:	add	x0, x29, #0x1c
  408d0c:	bl	408848 <ferror@plt+0x5c48>
  408d10:	cbz	w0, 408d64 <ferror@plt+0x6164>
  408d14:	add	x1, x29, #0x1c
  408d18:	bl	408d8c <ferror@plt+0x618c>
  408d1c:	ldr	w8, [x19]
  408d20:	cbz	w0, 408d34 <ferror@plt+0x6134>
  408d24:	cmp	w0, #0x3
  408d28:	b.hi	408d80 <ferror@plt+0x6180>  // b.pmore
  408d2c:	cbz	w8, 408d50 <ferror@plt+0x6150>
  408d30:	b	408d80 <ferror@plt+0x6180>
  408d34:	ldr	w9, [x29, #28]
  408d38:	cmp	w8, #0x0
  408d3c:	cset	w8, ne  // ne = any
  408d40:	cmp	w9, #0x0
  408d44:	cset	w9, ne  // ne = any
  408d48:	and	w8, w8, w9
  408d4c:	str	w8, [x19]
  408d50:	add	x0, x29, #0x1c
  408d54:	bl	408848 <ferror@plt+0x5c48>
  408d58:	cmp	w0, #0x12
  408d5c:	b.eq	408d08 <ferror@plt+0x6108>  // b.none
  408d60:	cbnz	w0, 408d6c <ferror@plt+0x616c>
  408d64:	mov	w0, #0x6                   	// #6
  408d68:	b	408d80 <ferror@plt+0x6180>
  408d6c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408d70:	ldr	x8, [x8, #2240]
  408d74:	mov	w0, wzr
  408d78:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408d7c:	str	x8, [x9, #2232]
  408d80:	ldr	x19, [sp, #16]
  408d84:	ldp	x29, x30, [sp], #32
  408d88:	ret
  408d8c:	stp	x29, x30, [sp, #-32]!
  408d90:	str	x19, [sp, #16]
  408d94:	mov	x29, sp
  408d98:	mov	x19, x1
  408d9c:	bl	408e0c <ferror@plt+0x620c>
  408da0:	cbnz	w0, 408e00 <ferror@plt+0x6200>
  408da4:	b	408dd0 <ferror@plt+0x61d0>
  408da8:	add	x0, x29, #0x1c
  408dac:	bl	408848 <ferror@plt+0x5c48>
  408db0:	cbz	w0, 408de4 <ferror@plt+0x61e4>
  408db4:	add	x1, x29, #0x1c
  408db8:	bl	408e0c <ferror@plt+0x620c>
  408dbc:	cbnz	w0, 408e00 <ferror@plt+0x6200>
  408dc0:	ldr	w8, [x29, #28]
  408dc4:	ldr	w9, [x19]
  408dc8:	orr	w8, w9, w8
  408dcc:	str	w8, [x19]
  408dd0:	add	x0, x29, #0x1c
  408dd4:	bl	408848 <ferror@plt+0x5c48>
  408dd8:	cmp	w0, #0x16
  408ddc:	b.eq	408da8 <ferror@plt+0x61a8>  // b.none
  408de0:	cbnz	w0, 408dec <ferror@plt+0x61ec>
  408de4:	mov	w0, #0x6                   	// #6
  408de8:	b	408e00 <ferror@plt+0x6200>
  408dec:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408df0:	ldr	x8, [x8, #2240]
  408df4:	mov	w0, wzr
  408df8:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408dfc:	str	x8, [x9, #2232]
  408e00:	ldr	x19, [sp, #16]
  408e04:	ldp	x29, x30, [sp], #32
  408e08:	ret
  408e0c:	stp	x29, x30, [sp, #-32]!
  408e10:	str	x19, [sp, #16]
  408e14:	mov	x29, sp
  408e18:	mov	x19, x1
  408e1c:	bl	408e8c <ferror@plt+0x628c>
  408e20:	cbnz	w0, 408e80 <ferror@plt+0x6280>
  408e24:	b	408e50 <ferror@plt+0x6250>
  408e28:	add	x0, x29, #0x1c
  408e2c:	bl	408848 <ferror@plt+0x5c48>
  408e30:	cbz	w0, 408e64 <ferror@plt+0x6264>
  408e34:	add	x1, x29, #0x1c
  408e38:	bl	408e8c <ferror@plt+0x628c>
  408e3c:	cbnz	w0, 408e80 <ferror@plt+0x6280>
  408e40:	ldr	w8, [x29, #28]
  408e44:	ldr	w9, [x19]
  408e48:	eor	w8, w9, w8
  408e4c:	str	w8, [x19]
  408e50:	add	x0, x29, #0x1c
  408e54:	bl	408848 <ferror@plt+0x5c48>
  408e58:	cmp	w0, #0x17
  408e5c:	b.eq	408e28 <ferror@plt+0x6228>  // b.none
  408e60:	cbnz	w0, 408e6c <ferror@plt+0x626c>
  408e64:	mov	w0, #0x6                   	// #6
  408e68:	b	408e80 <ferror@plt+0x6280>
  408e6c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408e70:	ldr	x8, [x8, #2240]
  408e74:	mov	w0, wzr
  408e78:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408e7c:	str	x8, [x9, #2232]
  408e80:	ldr	x19, [sp, #16]
  408e84:	ldp	x29, x30, [sp], #32
  408e88:	ret
  408e8c:	stp	x29, x30, [sp, #-32]!
  408e90:	str	x19, [sp, #16]
  408e94:	mov	x29, sp
  408e98:	mov	x19, x1
  408e9c:	bl	408f0c <ferror@plt+0x630c>
  408ea0:	cbnz	w0, 408f00 <ferror@plt+0x6300>
  408ea4:	b	408ed0 <ferror@plt+0x62d0>
  408ea8:	add	x0, x29, #0x1c
  408eac:	bl	408848 <ferror@plt+0x5c48>
  408eb0:	cbz	w0, 408ee4 <ferror@plt+0x62e4>
  408eb4:	add	x1, x29, #0x1c
  408eb8:	bl	408f0c <ferror@plt+0x630c>
  408ebc:	cbnz	w0, 408f00 <ferror@plt+0x6300>
  408ec0:	ldr	w8, [x29, #28]
  408ec4:	ldr	w9, [x19]
  408ec8:	and	w8, w9, w8
  408ecc:	str	w8, [x19]
  408ed0:	add	x0, x29, #0x1c
  408ed4:	bl	408848 <ferror@plt+0x5c48>
  408ed8:	cmp	w0, #0x15
  408edc:	b.eq	408ea8 <ferror@plt+0x62a8>  // b.none
  408ee0:	cbnz	w0, 408eec <ferror@plt+0x62ec>
  408ee4:	mov	w0, #0x6                   	// #6
  408ee8:	b	408f00 <ferror@plt+0x6300>
  408eec:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408ef0:	ldr	x8, [x8, #2240]
  408ef4:	mov	w0, wzr
  408ef8:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408efc:	str	x8, [x9, #2232]
  408f00:	ldr	x19, [sp, #16]
  408f04:	ldp	x29, x30, [sp], #32
  408f08:	ret
  408f0c:	sub	sp, sp, #0x40
  408f10:	stp	x29, x30, [sp, #16]
  408f14:	stp	x22, x21, [sp, #32]
  408f18:	stp	x20, x19, [sp, #48]
  408f1c:	add	x29, sp, #0x10
  408f20:	mov	x19, x1
  408f24:	bl	408fdc <ferror@plt+0x63dc>
  408f28:	cbnz	w0, 408fc8 <ferror@plt+0x63c8>
  408f2c:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x240c>
  408f30:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408f34:	add	x20, x20, #0x45d
  408f38:	sub	x0, x29, #0x4
  408f3c:	bl	408848 <ferror@plt+0x5c48>
  408f40:	sub	w8, w0, #0x8
  408f44:	mov	w21, w0
  408f48:	cmp	w8, #0x3
  408f4c:	b.cs	408fa8 <ferror@plt+0x63a8>  // b.hs, b.nlast
  408f50:	sub	x0, x29, #0x4
  408f54:	bl	408848 <ferror@plt+0x5c48>
  408f58:	cbz	w0, 408fac <ferror@plt+0x63ac>
  408f5c:	sub	x1, x29, #0x4
  408f60:	bl	408fdc <ferror@plt+0x63dc>
  408f64:	cbnz	w0, 408fc8 <ferror@plt+0x63c8>
  408f68:	cmp	w21, #0x8
  408f6c:	b.ne	408f84 <ferror@plt+0x6384>  // b.any
  408f70:	ldr	w0, [x22, #1240]
  408f74:	mov	w1, wzr
  408f78:	mov	x2, x20
  408f7c:	bl	402d0c <ferror@plt+0x10c>
  408f80:	mov	w21, #0x9                   	// #9
  408f84:	ldr	w8, [x19]
  408f88:	ldur	w9, [x29, #-4]
  408f8c:	cmp	w21, #0x9
  408f90:	cset	w10, ne  // ne = any
  408f94:	cmp	w8, w9
  408f98:	cset	w8, eq  // eq = none
  408f9c:	eor	w8, w10, w8
  408fa0:	str	w8, [x19]
  408fa4:	b	408f38 <ferror@plt+0x6338>
  408fa8:	cbnz	w21, 408fb4 <ferror@plt+0x63b4>
  408fac:	mov	w0, #0x6                   	// #6
  408fb0:	b	408fc8 <ferror@plt+0x63c8>
  408fb4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408fb8:	ldr	x8, [x8, #2240]
  408fbc:	mov	w0, wzr
  408fc0:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  408fc4:	str	x8, [x9, #2232]
  408fc8:	ldp	x20, x19, [sp, #48]
  408fcc:	ldp	x22, x21, [sp, #32]
  408fd0:	ldp	x29, x30, [sp, #16]
  408fd4:	add	sp, sp, #0x40
  408fd8:	ret
  408fdc:	stp	x29, x30, [sp, #-48]!
  408fe0:	str	x21, [sp, #16]
  408fe4:	stp	x20, x19, [sp, #32]
  408fe8:	mov	x29, sp
  408fec:	mov	x19, x1
  408ff0:	bl	409100 <ferror@plt+0x6500>
  408ff4:	cbnz	w0, 4090d4 <ferror@plt+0x64d4>
  408ff8:	add	x0, x29, #0x1c
  408ffc:	bl	408848 <ferror@plt+0x5c48>
  409000:	sub	w8, w0, #0xb
  409004:	mov	w20, w0
  409008:	cmp	w8, #0x3
  40900c:	b.hi	4090b4 <ferror@plt+0x64b4>  // b.pmore
  409010:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x240c>
  409014:	add	x21, x21, #0x317
  409018:	add	x0, x29, #0x1c
  40901c:	bl	408848 <ferror@plt+0x5c48>
  409020:	cbz	w0, 4090d0 <ferror@plt+0x64d0>
  409024:	add	x1, x29, #0x1c
  409028:	bl	409100 <ferror@plt+0x6500>
  40902c:	cbnz	w0, 4090d4 <ferror@plt+0x64d4>
  409030:	sub	w8, w20, #0xb
  409034:	cmp	w8, #0x3
  409038:	b.hi	4090e4 <ferror@plt+0x64e4>  // b.pmore
  40903c:	adr	x9, 40904c <ferror@plt+0x644c>
  409040:	ldrb	w10, [x21, x8]
  409044:	add	x9, x9, x10, lsl #2
  409048:	br	x9
  40904c:	ldr	w8, [x19]
  409050:	ldr	w9, [x29, #28]
  409054:	cmp	w8, w9
  409058:	cset	w8, gt
  40905c:	b	409098 <ferror@plt+0x6498>
  409060:	ldr	w8, [x19]
  409064:	ldr	w9, [x29, #28]
  409068:	cmp	w8, w9
  40906c:	cset	w8, lt  // lt = tstop
  409070:	b	409098 <ferror@plt+0x6498>
  409074:	ldr	w8, [x19]
  409078:	ldr	w9, [x29, #28]
  40907c:	cmp	w8, w9
  409080:	cset	w8, le
  409084:	b	409098 <ferror@plt+0x6498>
  409088:	ldr	w8, [x19]
  40908c:	ldr	w9, [x29, #28]
  409090:	cmp	w8, w9
  409094:	cset	w8, ge  // ge = tcont
  409098:	add	x0, x29, #0x1c
  40909c:	str	w8, [x19]
  4090a0:	bl	408848 <ferror@plt+0x5c48>
  4090a4:	sub	w8, w0, #0xb
  4090a8:	mov	w20, w0
  4090ac:	cmp	w8, #0x4
  4090b0:	b.cc	409018 <ferror@plt+0x6418>  // b.lo, b.ul, b.last
  4090b4:	cbz	w20, 4090d0 <ferror@plt+0x64d0>
  4090b8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4090bc:	ldr	x8, [x8, #2240]
  4090c0:	mov	w0, wzr
  4090c4:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4090c8:	str	x8, [x9, #2232]
  4090cc:	b	4090d4 <ferror@plt+0x64d4>
  4090d0:	mov	w0, #0x6                   	// #6
  4090d4:	ldp	x20, x19, [sp, #32]
  4090d8:	ldr	x21, [sp, #16]
  4090dc:	ldp	x29, x30, [sp], #48
  4090e0:	ret
  4090e4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4090e8:	ldr	w0, [x8, #1240]
  4090ec:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  4090f0:	add	x2, x2, #0x491
  4090f4:	mov	w1, wzr
  4090f8:	bl	402d0c <ferror@plt+0x10c>
  4090fc:	bl	402920 <abort@plt>
  409100:	sub	sp, sp, #0x30
  409104:	stp	x29, x30, [sp, #16]
  409108:	stp	x20, x19, [sp, #32]
  40910c:	add	x29, sp, #0x10
  409110:	mov	x19, x1
  409114:	bl	4091e8 <ferror@plt+0x65e8>
  409118:	cbnz	w0, 4091bc <ferror@plt+0x65bc>
  40911c:	sub	x0, x29, #0x4
  409120:	bl	408848 <ferror@plt+0x5c48>
  409124:	sub	w8, w0, #0xf
  409128:	mov	w20, w0
  40912c:	cmp	w8, #0x1
  409130:	b.hi	40919c <ferror@plt+0x659c>  // b.pmore
  409134:	sub	x0, x29, #0x4
  409138:	bl	408848 <ferror@plt+0x5c48>
  40913c:	cbz	w0, 4091b8 <ferror@plt+0x65b8>
  409140:	sub	x1, x29, #0x4
  409144:	bl	4091e8 <ferror@plt+0x65e8>
  409148:	cbnz	w0, 4091bc <ferror@plt+0x65bc>
  40914c:	cmp	w20, #0x10
  409150:	b.eq	40916c <ferror@plt+0x656c>  // b.none
  409154:	cmp	w20, #0xf
  409158:	b.ne	4091cc <ferror@plt+0x65cc>  // b.any
  40915c:	ldr	w8, [x19]
  409160:	ldur	w9, [x29, #-4]
  409164:	lsl	w8, w8, w9
  409168:	b	409180 <ferror@plt+0x6580>
  40916c:	ldr	w8, [x19]
  409170:	ldur	w9, [x29, #-4]
  409174:	eor	w10, w8, w8, asr #31
  409178:	lsr	w9, w10, w9
  40917c:	eor	w8, w9, w8, asr #31
  409180:	sub	x0, x29, #0x4
  409184:	str	w8, [x19]
  409188:	bl	408848 <ferror@plt+0x5c48>
  40918c:	sub	w8, w0, #0xf
  409190:	mov	w20, w0
  409194:	cmp	w8, #0x2
  409198:	b.cc	409134 <ferror@plt+0x6534>  // b.lo, b.ul, b.last
  40919c:	cbz	w20, 4091b8 <ferror@plt+0x65b8>
  4091a0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4091a4:	ldr	x8, [x8, #2240]
  4091a8:	mov	w0, wzr
  4091ac:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4091b0:	str	x8, [x9, #2232]
  4091b4:	b	4091bc <ferror@plt+0x65bc>
  4091b8:	mov	w0, #0x6                   	// #6
  4091bc:	ldp	x20, x19, [sp, #32]
  4091c0:	ldp	x29, x30, [sp, #16]
  4091c4:	add	sp, sp, #0x30
  4091c8:	ret
  4091cc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4091d0:	ldr	w0, [x8, #1240]
  4091d4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  4091d8:	add	x2, x2, #0x4c8
  4091dc:	mov	w1, wzr
  4091e0:	bl	402d0c <ferror@plt+0x10c>
  4091e4:	bl	402920 <abort@plt>
  4091e8:	sub	sp, sp, #0x30
  4091ec:	stp	x29, x30, [sp, #16]
  4091f0:	stp	x20, x19, [sp, #32]
  4091f4:	add	x29, sp, #0x10
  4091f8:	mov	x19, x1
  4091fc:	bl	409280 <ferror@plt+0x6680>
  409200:	cbnz	w0, 409270 <ferror@plt+0x6670>
  409204:	b	409238 <ferror@plt+0x6638>
  409208:	sub	x0, x29, #0x4
  40920c:	bl	408848 <ferror@plt+0x5c48>
  409210:	cbz	w0, 40926c <ferror@plt+0x666c>
  409214:	sub	x1, x29, #0x4
  409218:	bl	409280 <ferror@plt+0x6680>
  40921c:	cbnz	w0, 409270 <ferror@plt+0x6670>
  409220:	ldur	w8, [x29, #-4]
  409224:	ldr	w9, [x19]
  409228:	cmp	w20, #0x2
  40922c:	cneg	w8, w8, ne  // ne = any
  409230:	add	w8, w8, w9
  409234:	str	w8, [x19]
  409238:	sub	x0, x29, #0x4
  40923c:	bl	408848 <ferror@plt+0x5c48>
  409240:	orr	w8, w0, #0x1
  409244:	mov	w20, w0
  409248:	cmp	w8, #0x3
  40924c:	b.eq	409208 <ferror@plt+0x6608>  // b.none
  409250:	cbz	w20, 40926c <ferror@plt+0x666c>
  409254:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409258:	ldr	x8, [x8, #2240]
  40925c:	mov	w0, wzr
  409260:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409264:	str	x8, [x9, #2232]
  409268:	b	409270 <ferror@plt+0x6670>
  40926c:	mov	w0, #0x6                   	// #6
  409270:	ldp	x20, x19, [sp, #32]
  409274:	ldp	x29, x30, [sp, #16]
  409278:	add	sp, sp, #0x30
  40927c:	ret
  409280:	sub	sp, sp, #0x30
  409284:	stp	x29, x30, [sp, #16]
  409288:	stp	x20, x19, [sp, #32]
  40928c:	add	x29, sp, #0x10
  409290:	mov	x19, x1
  409294:	bl	4093bc <ferror@plt+0x67bc>
  409298:	cbz	w0, 4092ac <ferror@plt+0x66ac>
  40929c:	ldp	x20, x19, [sp, #32]
  4092a0:	ldp	x29, x30, [sp, #16]
  4092a4:	add	sp, sp, #0x30
  4092a8:	ret
  4092ac:	sub	x0, x29, #0x4
  4092b0:	bl	408848 <ferror@plt+0x5c48>
  4092b4:	sub	w8, w0, #0x5
  4092b8:	mov	w20, w0
  4092bc:	cmp	w8, #0x2
  4092c0:	b.hi	40936c <ferror@plt+0x676c>  // b.pmore
  4092c4:	sub	x0, x29, #0x4
  4092c8:	bl	408848 <ferror@plt+0x5c48>
  4092cc:	cbz	w0, 409388 <ferror@plt+0x6788>
  4092d0:	sub	x1, x29, #0x4
  4092d4:	bl	4093bc <ferror@plt+0x67bc>
  4092d8:	cbnz	w0, 40929c <ferror@plt+0x669c>
  4092dc:	cmp	w20, #0x7
  4092e0:	b.eq	409320 <ferror@plt+0x6720>  // b.none
  4092e4:	cmp	w20, #0x6
  4092e8:	b.eq	409304 <ferror@plt+0x6704>  // b.none
  4092ec:	cmp	w20, #0x5
  4092f0:	b.ne	4093a0 <ferror@plt+0x67a0>  // b.any
  4092f4:	ldr	w8, [x19]
  4092f8:	ldur	w9, [x29, #-4]
  4092fc:	mul	w8, w9, w8
  409300:	b	409350 <ferror@plt+0x6750>
  409304:	ldur	w8, [x29, #-4]
  409308:	cmn	w8, #0x1
  40930c:	b.eq	409340 <ferror@plt+0x6740>  // b.none
  409310:	cbz	w8, 409390 <ferror@plt+0x6790>
  409314:	ldr	w9, [x19]
  409318:	sdiv	w8, w9, w8
  40931c:	b	409350 <ferror@plt+0x6750>
  409320:	ldur	w8, [x29, #-4]
  409324:	cmn	w8, #0x1
  409328:	b.eq	40934c <ferror@plt+0x674c>  // b.none
  40932c:	cbz	w8, 409398 <ferror@plt+0x6798>
  409330:	ldr	w9, [x19]
  409334:	sdiv	w10, w9, w8
  409338:	msub	w8, w10, w8, w9
  40933c:	b	409350 <ferror@plt+0x6750>
  409340:	ldr	w8, [x19]
  409344:	neg	w8, w8
  409348:	b	409350 <ferror@plt+0x6750>
  40934c:	mov	w8, wzr
  409350:	sub	x0, x29, #0x4
  409354:	str	w8, [x19]
  409358:	bl	408848 <ferror@plt+0x5c48>
  40935c:	sub	w8, w0, #0x5
  409360:	mov	w20, w0
  409364:	cmp	w8, #0x3
  409368:	b.cc	4092c4 <ferror@plt+0x66c4>  // b.lo, b.ul, b.last
  40936c:	cbz	w20, 409388 <ferror@plt+0x6788>
  409370:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409374:	ldr	x8, [x8, #2240]
  409378:	mov	w0, wzr
  40937c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409380:	str	x8, [x9, #2232]
  409384:	b	40929c <ferror@plt+0x669c>
  409388:	mov	w0, #0x6                   	// #6
  40938c:	b	40929c <ferror@plt+0x669c>
  409390:	mov	w0, #0x1                   	// #1
  409394:	b	40929c <ferror@plt+0x669c>
  409398:	mov	w0, #0x2                   	// #2
  40939c:	b	40929c <ferror@plt+0x669c>
  4093a0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4093a4:	ldr	w0, [x8, #1240]
  4093a8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  4093ac:	add	x2, x2, #0x4fc
  4093b0:	mov	w1, wzr
  4093b4:	bl	402d0c <ferror@plt+0x10c>
  4093b8:	bl	402920 <abort@plt>
  4093bc:	sub	sp, sp, #0x30
  4093c0:	stp	x29, x30, [sp, #16]
  4093c4:	stp	x20, x19, [sp, #32]
  4093c8:	add	x29, sp, #0x10
  4093cc:	mov	x19, x1
  4093d0:	bl	409488 <ferror@plt+0x6888>
  4093d4:	cbz	w0, 4093e8 <ferror@plt+0x67e8>
  4093d8:	ldp	x20, x19, [sp, #32]
  4093dc:	ldp	x29, x30, [sp, #16]
  4093e0:	add	sp, sp, #0x30
  4093e4:	ret
  4093e8:	mov	w20, #0xffffffff            	// #-1
  4093ec:	sub	x0, x29, #0x4
  4093f0:	bl	408848 <ferror@plt+0x5c48>
  4093f4:	cmp	w0, #0x4
  4093f8:	b.ne	409454 <ferror@plt+0x6854>  // b.any
  4093fc:	sub	x0, x29, #0x4
  409400:	bl	408848 <ferror@plt+0x5c48>
  409404:	cbz	w0, 409458 <ferror@plt+0x6858>
  409408:	sub	x1, x29, #0x4
  40940c:	bl	4093bc <ferror@plt+0x67bc>
  409410:	cbnz	w0, 4093d8 <ferror@plt+0x67d8>
  409414:	ldur	w8, [x29, #-4]
  409418:	tbnz	w8, #31, 409460 <ferror@plt+0x6860>
  40941c:	ldr	w9, [x19]
  409420:	orr	w10, w9, w8
  409424:	cbz	w10, 409468 <ferror@plt+0x6868>
  409428:	subs	w10, w8, #0x1
  40942c:	stur	w10, [x29, #-4]
  409430:	mov	w10, #0x1                   	// #1
  409434:	b.lt	40944c <ferror@plt+0x684c>  // b.tstop
  409438:	sub	w8, w8, #0x1
  40943c:	cmp	w8, #0x0
  409440:	mul	w10, w10, w9
  409444:	b.gt	409438 <ferror@plt+0x6838>
  409448:	stur	w20, [x29, #-4]
  40944c:	str	w10, [x19]
  409450:	b	4093ec <ferror@plt+0x67ec>
  409454:	cbnz	w0, 409470 <ferror@plt+0x6870>
  409458:	mov	w0, #0x6                   	// #6
  40945c:	b	4093d8 <ferror@plt+0x67d8>
  409460:	mov	w0, #0x3                   	// #3
  409464:	b	4093d8 <ferror@plt+0x67d8>
  409468:	mov	w0, #0x1                   	// #1
  40946c:	b	4093d8 <ferror@plt+0x67d8>
  409470:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409474:	ldr	x8, [x8, #2240]
  409478:	mov	w0, wzr
  40947c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409480:	str	x8, [x9, #2232]
  409484:	b	4093d8 <ferror@plt+0x67d8>
  409488:	sub	sp, sp, #0x30
  40948c:	stp	x20, x19, [sp, #32]
  409490:	mov	w20, w0
  409494:	cmp	w0, #0x14
  409498:	mov	x19, x1
  40949c:	stp	x29, x30, [sp, #16]
  4094a0:	add	x29, sp, #0x10
  4094a4:	b.hi	4094fc <ferror@plt+0x68fc>  // b.pmore
  4094a8:	mov	w8, #0x1                   	// #1
  4094ac:	mov	w9, #0xc                   	// #12
  4094b0:	lsl	w8, w8, w20
  4094b4:	movk	w9, #0x12, lsl #16
  4094b8:	tst	w8, w9
  4094bc:	b.eq	4094fc <ferror@plt+0x68fc>  // b.none
  4094c0:	mov	x0, x19
  4094c4:	bl	408848 <ferror@plt+0x5c48>
  4094c8:	cbz	w0, 409548 <ferror@plt+0x6948>
  4094cc:	mov	x1, x19
  4094d0:	bl	409488 <ferror@plt+0x6888>
  4094d4:	cbnz	w0, 409580 <ferror@plt+0x6980>
  4094d8:	cmp	w20, #0x14
  4094dc:	b.eq	409560 <ferror@plt+0x6960>  // b.none
  4094e0:	cmp	w20, #0x11
  4094e4:	b.eq	40956c <ferror@plt+0x696c>  // b.none
  4094e8:	cmp	w20, #0x3
  4094ec:	b.ne	40957c <ferror@plt+0x697c>  // b.any
  4094f0:	ldr	w8, [x19]
  4094f4:	neg	w8, w8
  4094f8:	b	409578 <ferror@plt+0x6978>
  4094fc:	cmp	w20, #0x1
  409500:	b.eq	409550 <ferror@plt+0x6950>  // b.none
  409504:	cmp	w20, #0x1a
  409508:	b.eq	40957c <ferror@plt+0x697c>  // b.none
  40950c:	cmp	w20, #0x18
  409510:	b.ne	409558 <ferror@plt+0x6958>  // b.any
  409514:	mov	x0, x19
  409518:	bl	408848 <ferror@plt+0x5c48>
  40951c:	cbz	w0, 409548 <ferror@plt+0x6948>
  409520:	mov	x1, x19
  409524:	bl	408c50 <ferror@plt+0x6050>
  409528:	cbnz	w0, 409580 <ferror@plt+0x6980>
  40952c:	sub	x0, x29, #0x4
  409530:	bl	408848 <ferror@plt+0x5c48>
  409534:	cbz	w0, 409548 <ferror@plt+0x6948>
  409538:	cmp	w0, #0x19
  40953c:	b.eq	40957c <ferror@plt+0x697c>  // b.none
  409540:	mov	w0, #0x5                   	// #5
  409544:	b	409580 <ferror@plt+0x6980>
  409548:	mov	w0, #0x6                   	// #6
  40954c:	b	409580 <ferror@plt+0x6980>
  409550:	mov	w0, #0x8                   	// #8
  409554:	b	409580 <ferror@plt+0x6980>
  409558:	mov	w0, #0x4                   	// #4
  40955c:	b	409580 <ferror@plt+0x6980>
  409560:	ldr	w8, [x19]
  409564:	mvn	w8, w8
  409568:	b	409578 <ferror@plt+0x6978>
  40956c:	ldr	w8, [x19]
  409570:	cmp	w8, #0x0
  409574:	cset	w8, eq  // eq = none
  409578:	str	w8, [x19]
  40957c:	mov	w0, wzr
  409580:	ldp	x20, x19, [sp, #32]
  409584:	ldp	x29, x30, [sp, #16]
  409588:	add	sp, sp, #0x30
  40958c:	ret
  409590:	sub	sp, sp, #0x160
  409594:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x240c>
  409598:	add	x8, x8, #0x564
  40959c:	ldr	x9, [x8]
  4095a0:	ldur	x8, [x8, #6]
  4095a4:	stp	x29, x30, [sp, #256]
  4095a8:	stp	x20, x19, [sp, #336]
  4095ac:	add	x29, sp, #0xf0
  4095b0:	mov	x20, x2
  4095b4:	mov	x19, x0
  4095b8:	str	d8, [sp, #240]
  4095bc:	stp	x28, x27, [sp, #272]
  4095c0:	stp	x26, x25, [sp, #288]
  4095c4:	stp	x24, x23, [sp, #304]
  4095c8:	stp	x22, x21, [sp, #320]
  4095cc:	stur	x9, [x29, #-24]
  4095d0:	stur	x8, [x29, #-18]
  4095d4:	cbz	w1, 4095ec <ferror@plt+0x69ec>
  4095d8:	ldr	x8, [x20], #8
  4095dc:	ldr	x28, [x8, #8]
  4095e0:	sub	w8, w1, #0x1
  4095e4:	str	w8, [sp, #76]
  4095e8:	b	4095f8 <ferror@plt+0x69f8>
  4095ec:	adrp	x28, 417000 <_obstack_memory_used@@Base+0x140c>
  4095f0:	str	wzr, [sp, #76]
  4095f4:	add	x28, x28, #0xe97
  4095f8:	movi	v0.2d, #0x0
  4095fc:	mov	w1, #0x25                  	// #37
  409600:	mov	x0, x28
  409604:	stp	q0, q0, [sp, #176]
  409608:	stp	q0, q0, [sp, #144]
  40960c:	stp	q0, q0, [sp, #112]
  409610:	stp	q0, q0, [sp, #80]
  409614:	bl	402a50 <strchr@plt>
  409618:	cbz	x0, 409e44 <ferror@plt+0x7244>
  40961c:	sub	x8, x29, #0x18
  409620:	add	x9, sp, #0x50
  409624:	orr	x10, x8, #0x1
  409628:	stp	x28, x10, [sp, #40]
  40962c:	add	x10, x9, #0x73
  409630:	str	x10, [sp, #24]
  409634:	add	x10, x9, #0x63
  409638:	orr	x8, x8, #0x2
  40963c:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x240c>
  409640:	mov	x24, x0
  409644:	str	x20, [sp, #64]
  409648:	mov	w21, #0x1                   	// #1
  40964c:	mov	w20, #0xa                   	// #10
  409650:	str	x10, [sp, #56]
  409654:	add	x10, x9, #0x41
  409658:	str	x8, [sp, #32]
  40965c:	add	x8, x9, #0x61
  409660:	add	x22, x22, #0x52a
  409664:	stp	x8, x10, [sp, #8]
  409668:	ldp	x0, x8, [x19, #24]
  40966c:	sub	x23, x24, x28
  409670:	sub	x8, x8, x0
  409674:	cmp	x8, x23
  409678:	b.cs	40968c <ferror@plt+0x6a8c>  // b.hs, b.nlast
  40967c:	mov	x0, x19
  409680:	mov	x1, x23
  409684:	bl	4159e4 <_obstack_newchunk@@Base>
  409688:	ldr	x0, [x19, #24]
  40968c:	mov	x1, x28
  409690:	mov	x2, x23
  409694:	bl	402550 <memcpy@plt>
  409698:	ldr	x8, [x19, #24]
  40969c:	add	x8, x8, x23
  4096a0:	str	x8, [x19, #24]
  4096a4:	ldrb	w9, [x24, #1]
  4096a8:	cmp	w9, #0x25
  4096ac:	b.ne	4096e4 <ferror@plt+0x6ae4>  // b.any
  4096b0:	ldr	x9, [x19, #32]
  4096b4:	cmp	x9, x8
  4096b8:	b.ne	4096cc <ferror@plt+0x6acc>  // b.any
  4096bc:	mov	w1, #0x1                   	// #1
  4096c0:	mov	x0, x19
  4096c4:	bl	4159e4 <_obstack_newchunk@@Base>
  4096c8:	ldr	x8, [x19, #24]
  4096cc:	add	x9, x8, #0x1
  4096d0:	str	x9, [x19, #24]
  4096d4:	mov	w9, #0x25                  	// #37
  4096d8:	strb	w9, [x8]
  4096dc:	add	x28, x24, #0x2
  4096e0:	b	409e30 <ferror@plt+0x7230>
  4096e4:	ldr	x11, [sp, #56]
  4096e8:	mov	w10, #0x101                 	// #257
  4096ec:	mov	w8, wzr
  4096f0:	sturh	w10, [sp, #149]
  4096f4:	mov	w10, #0x1010101             	// #16843009
  4096f8:	add	x24, x24, #0x2
  4096fc:	strb	w21, [sp, #168]
  409700:	strb	w21, [sp, #200]
  409704:	strb	w21, [sp, #197]
  409708:	strb	w21, [sp, #195]
  40970c:	strb	w21, [sp, #191]
  409710:	strb	w21, [sp, #185]
  409714:	strb	w21, [sp, #151]
  409718:	strb	w21, [sp, #145]
  40971c:	strb	w21, [sp, #177]
  409720:	strb	w10, [x11, #4]
  409724:	str	w10, [x11]
  409728:	and	w9, w9, #0xff
  40972c:	sub	w10, w9, #0x27
  409730:	cmp	w10, #0x9
  409734:	b.hi	409778 <ferror@plt+0x6b78>  // b.pmore
  409738:	adr	x11, 40974c <ferror@plt+0x6b4c>
  40973c:	ldrb	w9, [x22, x10]
  409740:	add	x11, x11, x9, lsl #2
  409744:	mov	w9, #0x4                   	// #4
  409748:	br	x11
  40974c:	strb	wzr, [sp, #168]
  409750:	strb	wzr, [sp, #200]
  409754:	strb	wzr, [sp, #195]
  409758:	strb	wzr, [sp, #191]
  40975c:	strb	wzr, [sp, #149]
  409760:	strb	wzr, [sp, #181]
  409764:	strb	wzr, [sp, #179]
  409768:	strb	wzr, [sp, #145]
  40976c:	strb	wzr, [sp, #177]
  409770:	mov	w9, #0x1                   	// #1
  409774:	b	4097f4 <ferror@plt+0x6bf4>
  409778:	cmp	w9, #0x20
  40977c:	b.eq	4097d8 <ferror@plt+0x6bd8>  // b.none
  409780:	cmp	w9, #0x23
  409784:	b.ne	4097a0 <ferror@plt+0x6ba0>  // b.any
  409788:	strb	wzr, [sp, #197]
  40978c:	strb	wzr, [sp, #195]
  409790:	strb	wzr, [sp, #185]
  409794:	sturh	wzr, [sp, #179]
  409798:	mov	w9, #0x20                  	// #32
  40979c:	b	4097f4 <ferror@plt+0x6bf4>
  4097a0:	mov	w9, #0x40                  	// #64
  4097a4:	b	4097f4 <ferror@plt+0x6bf4>
  4097a8:	strb	wzr, [sp, #195]
  4097ac:	strb	wzr, [sp, #179]
  4097b0:	mov	w9, #0x10                  	// #16
  4097b4:	b	4097f4 <ferror@plt+0x6bf4>
  4097b8:	strb	wzr, [sp, #168]
  4097bc:	strb	wzr, [sp, #200]
  4097c0:	strb	wzr, [sp, #197]
  4097c4:	strb	wzr, [sp, #195]
  4097c8:	strb	wzr, [sp, #191]
  4097cc:	strb	wzr, [sp, #179]
  4097d0:	mov	w9, #0x2                   	// #2
  4097d4:	b	4097f4 <ferror@plt+0x6bf4>
  4097d8:	strb	wzr, [sp, #168]
  4097dc:	strb	wzr, [sp, #200]
  4097e0:	strb	wzr, [sp, #197]
  4097e4:	strb	wzr, [sp, #195]
  4097e8:	strb	wzr, [sp, #191]
  4097ec:	strb	wzr, [sp, #179]
  4097f0:	mov	w9, #0x8                   	// #8
  4097f4:	orr	w8, w8, w9
  4097f8:	tbnz	w8, #6, 409804 <ferror@plt+0x6c04>
  4097fc:	ldrb	w9, [x24], #1
  409800:	b	409728 <ferror@plt+0x6b28>
  409804:	ldr	x23, [sp, #48]
  409808:	and	w8, w8, #0xff
  40980c:	tbnz	w8, #0, 409884 <ferror@plt+0x6c84>
  409810:	tbnz	w8, #1, 409894 <ferror@plt+0x6c94>
  409814:	tbnz	w8, #2, 4098a0 <ferror@plt+0x6ca0>
  409818:	tbz	w8, #3, 409824 <ferror@plt+0x6c24>
  40981c:	mov	w9, #0x20                  	// #32
  409820:	strb	w9, [x23], #1
  409824:	sub	x25, x24, #0x1
  409828:	tbz	w8, #4, 409834 <ferror@plt+0x6c34>
  40982c:	mov	w9, #0x30                  	// #48
  409830:	strb	w9, [x23], #1
  409834:	tbz	w8, #5, 409840 <ferror@plt+0x6c40>
  409838:	mov	w8, #0x23                  	// #35
  40983c:	strb	w8, [x23], #1
  409840:	mov	w8, #0x2a                  	// #42
  409844:	strb	w8, [x23]
  409848:	ldrb	w26, [x25]
  40984c:	cmp	x26, #0x2a
  409850:	b.ne	4098b0 <ferror@plt+0x6cb0>  // b.any
  409854:	ldr	w8, [sp, #76]
  409858:	cbz	w8, 4098e8 <ferror@plt+0x6ce8>
  40985c:	ldr	x9, [sp, #64]
  409860:	mov	w10, w8
  409864:	sub	w10, w10, #0x1
  409868:	ldr	x8, [x9], #8
  40986c:	str	w10, [sp, #76]
  409870:	ldr	x0, [x8, #8]
  409874:	str	x9, [sp, #64]
  409878:	bl	409eb0 <ferror@plt+0x72b0>
  40987c:	mov	w27, w0
  409880:	b	4098f0 <ferror@plt+0x6cf0>
  409884:	ldr	x23, [sp, #32]
  409888:	mov	w9, #0x27                  	// #39
  40988c:	sturb	w9, [x29, #-23]
  409890:	tbz	w8, #1, 409814 <ferror@plt+0x6c14>
  409894:	mov	w9, #0x2b                  	// #43
  409898:	strb	w9, [x23], #1
  40989c:	tbz	w8, #2, 409818 <ferror@plt+0x6c18>
  4098a0:	mov	w9, #0x2d                  	// #45
  4098a4:	strb	w9, [x23], #1
  4098a8:	tbnz	w8, #3, 40981c <ferror@plt+0x6c1c>
  4098ac:	b	409824 <ferror@plt+0x6c24>
  4098b0:	bl	4029a0 <__ctype_b_loc@plt>
  4098b4:	ldr	x8, [x0]
  4098b8:	ldrh	w9, [x8, x26, lsl #1]
  4098bc:	tbnz	w9, #11, 4098c8 <ferror@plt+0x6cc8>
  4098c0:	mov	w27, wzr
  4098c4:	b	4098f4 <ferror@plt+0x6cf4>
  4098c8:	mov	w27, wzr
  4098cc:	mul	w9, w27, w20
  4098d0:	add	w9, w9, w26, uxtb
  4098d4:	ldrb	w26, [x25, #1]!
  4098d8:	sub	w27, w9, #0x30
  4098dc:	ldrh	w10, [x8, x26, lsl #1]
  4098e0:	tbnz	w10, #11, 4098cc <ferror@plt+0x6ccc>
  4098e4:	b	4098f4 <ferror@plt+0x6cf4>
  4098e8:	mov	w27, wzr
  4098ec:	str	wzr, [sp, #76]
  4098f0:	mov	x25, x24
  4098f4:	mov	w8, #0x2a2e                	// #10798
  4098f8:	sturh	w8, [x23, #1]
  4098fc:	ldrb	w26, [x25]
  409900:	cmp	w26, #0x2e
  409904:	b.ne	40994c <ferror@plt+0x6d4c>  // b.any
  409908:	strb	wzr, [sp, #179]
  40990c:	mov	x28, x25
  409910:	ldrb	w26, [x28, #1]!
  409914:	cmp	x26, #0x2a
  409918:	b.ne	409954 <ferror@plt+0x6d54>  // b.any
  40991c:	ldr	w8, [sp, #76]
  409920:	cbz	w8, 409990 <ferror@plt+0x6d90>
  409924:	ldr	x9, [sp, #64]
  409928:	mov	w10, w8
  40992c:	sub	w10, w10, #0x1
  409930:	ldr	x8, [x9], #8
  409934:	str	w10, [sp, #76]
  409938:	ldr	x0, [x8, #8]
  40993c:	str	x9, [sp, #64]
  409940:	bl	409eb0 <ferror@plt+0x72b0>
  409944:	mov	w24, w0
  409948:	b	409998 <ferror@plt+0x6d98>
  40994c:	mov	w24, #0xffffffff            	// #-1
  409950:	b	40999c <ferror@plt+0x6d9c>
  409954:	bl	4029a0 <__ctype_b_loc@plt>
  409958:	ldr	x8, [x0]
  40995c:	ldrh	w9, [x8, x26, lsl #1]
  409960:	tbnz	w9, #11, 40996c <ferror@plt+0x6d6c>
  409964:	mov	w24, wzr
  409968:	b	409988 <ferror@plt+0x6d88>
  40996c:	mov	w24, wzr
  409970:	mul	w9, w24, w20
  409974:	add	w9, w9, w26, uxtb
  409978:	ldrb	w26, [x28, #1]!
  40997c:	sub	w24, w9, #0x30
  409980:	ldrh	w10, [x8, x26, lsl #1]
  409984:	tbnz	w10, #11, 409970 <ferror@plt+0x6d70>
  409988:	mov	x25, x28
  40998c:	b	40999c <ferror@plt+0x6d9c>
  409990:	str	wzr, [sp, #76]
  409994:	mov	w24, wzr
  409998:	ldrb	w26, [x25, #2]!
  40999c:	cmp	w26, #0x68
  4099a0:	b.eq	4099cc <ferror@plt+0x6dcc>  // b.none
  4099a4:	cmp	w26, #0x6c
  4099a8:	b.ne	4099f4 <ferror@plt+0x6df4>  // b.any
  4099ac:	ldr	x10, [sp, #24]
  4099b0:	ldr	x11, [sp, #56]
  4099b4:	mov	w9, #0x6c                  	// #108
  4099b8:	add	x8, x23, #0x4
  4099bc:	strb	w9, [x23, #3]
  4099c0:	add	x25, x25, #0x1
  4099c4:	mov	w9, #0x1                   	// #1
  4099c8:	b	409a28 <ferror@plt+0x6e28>
  4099cc:	mov	w10, #0x68                  	// #104
  4099d0:	strb	w10, [x23, #3]
  4099d4:	mov	x9, x25
  4099d8:	ldrb	w8, [x9, #1]!
  4099dc:	cmp	w8, #0x68
  4099e0:	b.ne	409a00 <ferror@plt+0x6e00>  // b.any
  4099e4:	add	x8, x23, #0x5
  4099e8:	add	x25, x25, #0x2
  4099ec:	strb	w10, [x23, #4]
  4099f0:	b	409a08 <ferror@plt+0x6e08>
  4099f4:	mov	w9, wzr
  4099f8:	add	x8, x23, #0x3
  4099fc:	b	409a30 <ferror@plt+0x6e30>
  409a00:	add	x8, x23, #0x4
  409a04:	mov	x25, x9
  409a08:	ldp	x11, x10, [sp, #8]
  409a0c:	mov	w9, wzr
  409a10:	strb	wzr, [sp, #195]
  409a14:	strb	wzr, [sp, #151]
  409a18:	strb	wzr, [sp, #183]
  409a1c:	sturh	wzr, [sp, #149]
  409a20:	sturh	wzr, [sp, #181]
  409a24:	strb	wzr, [sp, #179]
  409a28:	strb	wzr, [x10]
  409a2c:	strb	wzr, [x11]
  409a30:	mov	x28, x25
  409a34:	ldrsb	w23, [x28], #1
  409a38:	tbnz	w23, #31, 409b24 <ferror@plt+0x6f24>
  409a3c:	and	x10, x23, #0xff
  409a40:	add	x11, sp, #0x50
  409a44:	ldrb	w10, [x11, x10]
  409a48:	cbz	w10, 409b24 <ferror@plt+0x6f24>
  409a4c:	and	w10, w23, #0xff
  409a50:	cmp	w10, #0x60
  409a54:	b.le	409b4c <ferror@plt+0x6f4c>
  409a58:	sub	w10, w10, #0x61
  409a5c:	cmp	w10, #0x17
  409a60:	b.hi	409eac <ferror@plt+0x72ac>  // b.pmore
  409a64:	adrp	x13, 418000 <_obstack_memory_used@@Base+0x240c>
  409a68:	add	x13, x13, #0x534
  409a6c:	adr	x11, 409a7c <ferror@plt+0x6e7c>
  409a70:	ldrh	w12, [x13, x10, lsl #1]
  409a74:	add	x11, x11, x12, lsl #2
  409a78:	br	x11
  409a7c:	strb	w23, [x8]
  409a80:	strb	wzr, [x8, #1]
  409a84:	cbz	w9, 409c08 <ferror@plt+0x7008>
  409a88:	ldr	w8, [sp, #76]
  409a8c:	cbz	w8, 409c78 <ferror@plt+0x7078>
  409a90:	ldr	x9, [sp, #64]
  409a94:	mov	w10, w8
  409a98:	sub	w10, w10, #0x1
  409a9c:	ldr	x8, [x9], #8
  409aa0:	str	w10, [sp, #76]
  409aa4:	ldr	x26, [x8, #8]
  409aa8:	str	x9, [sp, #64]
  409aac:	mov	x0, x26
  409ab0:	bl	402580 <strlen@plt>
  409ab4:	mov	x25, x0
  409ab8:	cbz	x0, 409cf8 <ferror@plt+0x70f8>
  409abc:	bl	402b80 <__errno_location@plt>
  409ac0:	mov	x23, x0
  409ac4:	str	wzr, [x0]
  409ac8:	add	x1, x29, #0x8
  409acc:	mov	w2, #0xa                   	// #10
  409ad0:	mov	x0, x26
  409ad4:	bl	4029c0 <strtol@plt>
  409ad8:	ldr	x8, [x29, #8]
  409adc:	sub	x8, x8, x26
  409ae0:	cmp	x8, x25
  409ae4:	mov	x25, x0
  409ae8:	b.ne	409d5c <ferror@plt+0x715c>  // b.any
  409aec:	bl	4029a0 <__ctype_b_loc@plt>
  409af0:	ldr	x8, [x0]
  409af4:	ldrb	w9, [x26]
  409af8:	ldrh	w8, [x8, x9, lsl #1]
  409afc:	tbnz	w8, #13, 409db0 <ferror@plt+0x71b0>
  409b00:	ldr	w8, [x23]
  409b04:	cmp	w8, #0x22
  409b08:	b.ne	409dc8 <ferror@plt+0x71c8>  // b.any
  409b0c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409b10:	ldr	w0, [x8, #1240]
  409b14:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  409b18:	mov	w1, wzr
  409b1c:	add	x2, x2, #0x5e7
  409b20:	b	409dc4 <ferror@plt+0x71c4>
  409b24:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409b28:	ldr	w0, [x8, #1240]
  409b2c:	ldr	x3, [sp, #40]
  409b30:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  409b34:	mov	w1, wzr
  409b38:	add	x2, x2, #0x572
  409b3c:	bl	402d0c <ferror@plt+0x10c>
  409b40:	cmp	w23, #0x0
  409b44:	csel	x28, x25, x28, eq  // eq = none
  409b48:	b	409e30 <ferror@plt+0x7230>
  409b4c:	sub	w11, w10, #0x45
  409b50:	cmp	w11, #0x3
  409b54:	b.cc	409b60 <ferror@plt+0x6f60>  // b.lo, b.ul, b.last
  409b58:	cmp	w10, #0x41
  409b5c:	b.ne	409c84 <ferror@plt+0x7084>  // b.any
  409b60:	strb	w23, [x8]
  409b64:	strb	wzr, [x8, #1]
  409b68:	ldr	w8, [sp, #76]
  409b6c:	cbz	w8, 409c00 <ferror@plt+0x7000>
  409b70:	ldr	x9, [sp, #64]
  409b74:	mov	w10, w8
  409b78:	sub	w10, w10, #0x1
  409b7c:	ldr	x8, [x9], #8
  409b80:	str	w10, [sp, #76]
  409b84:	ldr	x25, [x8, #8]
  409b88:	str	x9, [sp, #64]
  409b8c:	mov	x0, x25
  409b90:	bl	402580 <strlen@plt>
  409b94:	cbz	x0, 409c38 <ferror@plt+0x7038>
  409b98:	mov	x26, x0
  409b9c:	bl	402b80 <__errno_location@plt>
  409ba0:	mov	x23, x0
  409ba4:	str	wzr, [x0]
  409ba8:	add	x1, x29, #0x8
  409bac:	mov	x0, x25
  409bb0:	bl	4025f0 <strtod@plt>
  409bb4:	ldr	x8, [x29, #8]
  409bb8:	mov	v8.16b, v0.16b
  409bbc:	sub	x8, x8, x25
  409bc0:	cmp	x8, x26
  409bc4:	b.ne	409c58 <ferror@plt+0x7058>  // b.any
  409bc8:	bl	4029a0 <__ctype_b_loc@plt>
  409bcc:	ldr	x8, [x0]
  409bd0:	ldrb	w9, [x25]
  409bd4:	ldrh	w8, [x8, x9, lsl #1]
  409bd8:	tbnz	w8, #13, 409d2c <ferror@plt+0x712c>
  409bdc:	ldr	w8, [x23]
  409be0:	cmp	w8, #0x22
  409be4:	b.ne	409d44 <ferror@plt+0x7144>  // b.any
  409be8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409bec:	ldr	w0, [x8, #1240]
  409bf0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  409bf4:	mov	w1, wzr
  409bf8:	add	x2, x2, #0x5e7
  409bfc:	b	409d40 <ferror@plt+0x7140>
  409c00:	str	wzr, [sp, #76]
  409c04:	b	409c50 <ferror@plt+0x7050>
  409c08:	ldr	w8, [sp, #76]
  409c0c:	cbz	w8, 409d10 <ferror@plt+0x7110>
  409c10:	ldr	x9, [sp, #64]
  409c14:	mov	w10, w8
  409c18:	sub	w10, w10, #0x1
  409c1c:	ldr	x8, [x9], #8
  409c20:	str	w10, [sp, #76]
  409c24:	ldr	x0, [x8, #8]
  409c28:	str	x9, [sp, #64]
  409c2c:	bl	409eb0 <ferror@plt+0x72b0>
  409c30:	mov	w3, w0
  409c34:	b	409d18 <ferror@plt+0x7118>
  409c38:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409c3c:	ldr	w0, [x8, #1240]
  409c40:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  409c44:	mov	w1, wzr
  409c48:	add	x2, x2, #0x59a
  409c4c:	bl	402d0c <ferror@plt+0x10c>
  409c50:	fmov	d8, xzr
  409c54:	b	409d44 <ferror@plt+0x7144>
  409c58:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409c5c:	ldr	w0, [x8, #1240]
  409c60:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  409c64:	mov	w1, wzr
  409c68:	add	x2, x2, #0x5b4
  409c6c:	mov	x3, x25
  409c70:	bl	402d0c <ferror@plt+0x10c>
  409c74:	b	409d44 <ferror@plt+0x7144>
  409c78:	str	wzr, [sp, #76]
  409c7c:	mov	x25, xzr
  409c80:	b	409dc8 <ferror@plt+0x71c8>
  409c84:	cmp	w10, #0x58
  409c88:	b.eq	409a7c <ferror@plt+0x6e7c>  // b.none
  409c8c:	b	409eac <ferror@plt+0x72ac>
  409c90:	mov	w9, #0x73                  	// #115
  409c94:	strh	w9, [x8]
  409c98:	ldr	w8, [sp, #76]
  409c9c:	cbz	w8, 409d7c <ferror@plt+0x717c>
  409ca0:	ldr	x9, [sp, #64]
  409ca4:	mov	w10, w8
  409ca8:	sub	w10, w10, #0x1
  409cac:	ldr	x8, [x9], #8
  409cb0:	str	w10, [sp, #76]
  409cb4:	ldr	x3, [x8, #8]
  409cb8:	str	x9, [sp, #64]
  409cbc:	b	409d88 <ferror@plt+0x7188>
  409cc0:	mov	w9, #0x63                  	// #99
  409cc4:	sturh	w9, [x8, #-2]
  409cc8:	ldr	w8, [sp, #76]
  409ccc:	cbz	w8, 409d98 <ferror@plt+0x7198>
  409cd0:	ldr	x9, [sp, #64]
  409cd4:	mov	w10, w8
  409cd8:	sub	w10, w10, #0x1
  409cdc:	ldr	x8, [x9], #8
  409ce0:	str	w10, [sp, #76]
  409ce4:	ldr	x0, [x8, #8]
  409ce8:	str	x9, [sp, #64]
  409cec:	bl	409eb0 <ferror@plt+0x72b0>
  409cf0:	mov	w2, w0
  409cf4:	b	409da0 <ferror@plt+0x71a0>
  409cf8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409cfc:	ldr	w0, [x8, #1240]
  409d00:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  409d04:	mov	w1, wzr
  409d08:	add	x2, x2, #0x59a
  409d0c:	b	409dc4 <ferror@plt+0x71c4>
  409d10:	str	wzr, [sp, #76]
  409d14:	mov	w3, wzr
  409d18:	sub	x0, x29, #0x18
  409d1c:	mov	w1, w27
  409d20:	mov	w2, w24
  409d24:	bl	41547c <ferror@plt+0x1287c>
  409d28:	b	409ddc <ferror@plt+0x71dc>
  409d2c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409d30:	ldr	w0, [x8, #1240]
  409d34:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  409d38:	mov	w1, wzr
  409d3c:	add	x2, x2, #0x5cc
  409d40:	bl	402d0c <ferror@plt+0x10c>
  409d44:	sub	x0, x29, #0x18
  409d48:	mov	w1, w27
  409d4c:	mov	w2, w24
  409d50:	mov	v0.16b, v8.16b
  409d54:	bl	41547c <ferror@plt+0x1287c>
  409d58:	b	409ddc <ferror@plt+0x71dc>
  409d5c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409d60:	ldr	w0, [x8, #1240]
  409d64:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  409d68:	mov	w1, wzr
  409d6c:	add	x2, x2, #0x5b4
  409d70:	mov	x3, x26
  409d74:	bl	402d0c <ferror@plt+0x10c>
  409d78:	b	409dc8 <ferror@plt+0x71c8>
  409d7c:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x140c>
  409d80:	str	wzr, [sp, #76]
  409d84:	add	x3, x3, #0xe97
  409d88:	sub	x0, x29, #0x18
  409d8c:	mov	w1, w27
  409d90:	mov	w2, w24
  409d94:	b	409dd8 <ferror@plt+0x71d8>
  409d98:	str	wzr, [sp, #76]
  409d9c:	mov	w2, wzr
  409da0:	sub	x0, x29, #0x18
  409da4:	mov	w1, w27
  409da8:	bl	41547c <ferror@plt+0x1287c>
  409dac:	b	409ddc <ferror@plt+0x71dc>
  409db0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409db4:	ldr	w0, [x8, #1240]
  409db8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  409dbc:	mov	w1, wzr
  409dc0:	add	x2, x2, #0x5cc
  409dc4:	bl	402d0c <ferror@plt+0x10c>
  409dc8:	sub	x0, x29, #0x18
  409dcc:	mov	w1, w27
  409dd0:	mov	w2, w24
  409dd4:	mov	x3, x25
  409dd8:	bl	41547c <ferror@plt+0x1287c>
  409ddc:	mov	x24, x0
  409de0:	cbz	x0, 409e30 <ferror@plt+0x7230>
  409de4:	mov	x0, x24
  409de8:	bl	402580 <strlen@plt>
  409dec:	mov	x23, x0
  409df0:	ldp	x0, x8, [x19, #24]
  409df4:	sub	x8, x8, x0
  409df8:	cmp	x8, x23
  409dfc:	b.cs	409e10 <ferror@plt+0x7210>  // b.hs, b.nlast
  409e00:	mov	x0, x19
  409e04:	mov	x1, x23
  409e08:	bl	4159e4 <_obstack_newchunk@@Base>
  409e0c:	ldr	x0, [x19, #24]
  409e10:	mov	x1, x24
  409e14:	mov	x2, x23
  409e18:	bl	402550 <memcpy@plt>
  409e1c:	ldr	x8, [x19, #24]
  409e20:	mov	x0, x24
  409e24:	add	x8, x8, x23
  409e28:	str	x8, [x19, #24]
  409e2c:	bl	4029f0 <free@plt>
  409e30:	mov	w1, #0x25                  	// #37
  409e34:	mov	x0, x28
  409e38:	bl	402a50 <strchr@plt>
  409e3c:	mov	x24, x0
  409e40:	cbnz	x0, 409668 <ferror@plt+0x6a68>
  409e44:	mov	x0, x28
  409e48:	bl	402580 <strlen@plt>
  409e4c:	mov	x20, x0
  409e50:	ldp	x0, x8, [x19, #24]
  409e54:	sub	x8, x8, x0
  409e58:	cmp	x8, x20
  409e5c:	b.cs	409e70 <ferror@plt+0x7270>  // b.hs, b.nlast
  409e60:	mov	x0, x19
  409e64:	mov	x1, x20
  409e68:	bl	4159e4 <_obstack_newchunk@@Base>
  409e6c:	ldr	x0, [x19, #24]
  409e70:	mov	x1, x28
  409e74:	mov	x2, x20
  409e78:	bl	402550 <memcpy@plt>
  409e7c:	ldr	x8, [x19, #24]
  409e80:	ldr	d8, [sp, #240]
  409e84:	add	x8, x8, x20
  409e88:	str	x8, [x19, #24]
  409e8c:	ldp	x20, x19, [sp, #336]
  409e90:	ldp	x22, x21, [sp, #320]
  409e94:	ldp	x24, x23, [sp, #304]
  409e98:	ldp	x26, x25, [sp, #288]
  409e9c:	ldp	x28, x27, [sp, #272]
  409ea0:	ldp	x29, x30, [sp, #256]
  409ea4:	add	sp, sp, #0x160
  409ea8:	ret
  409eac:	bl	402920 <abort@plt>
  409eb0:	stp	x29, x30, [sp, #-48]!
  409eb4:	str	x21, [sp, #16]
  409eb8:	stp	x20, x19, [sp, #32]
  409ebc:	mov	x29, sp
  409ec0:	mov	x20, x0
  409ec4:	bl	402580 <strlen@plt>
  409ec8:	mov	x19, x0
  409ecc:	cbz	x0, 409f3c <ferror@plt+0x733c>
  409ed0:	bl	402b80 <__errno_location@plt>
  409ed4:	mov	x21, x0
  409ed8:	str	wzr, [x0]
  409edc:	add	x1, x29, #0x18
  409ee0:	mov	w2, #0xa                   	// #10
  409ee4:	mov	x0, x20
  409ee8:	bl	4029c0 <strtol@plt>
  409eec:	ldr	x8, [x29, #24]
  409ef0:	sub	x8, x8, x20
  409ef4:	cmp	x8, x19
  409ef8:	mov	x19, x0
  409efc:	b.ne	409f50 <ferror@plt+0x7350>  // b.any
  409f00:	bl	4029a0 <__ctype_b_loc@plt>
  409f04:	ldr	x8, [x0]
  409f08:	ldrb	w9, [x20]
  409f0c:	ldrh	w8, [x8, x9, lsl #1]
  409f10:	tbnz	w8, #13, 409f70 <ferror@plt+0x7370>
  409f14:	cmp	x19, w19, sxtw
  409f18:	b.ne	409f28 <ferror@plt+0x7328>  // b.any
  409f1c:	ldr	w8, [x21]
  409f20:	cmp	w8, #0x22
  409f24:	b.ne	409f88 <ferror@plt+0x7388>  // b.any
  409f28:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409f2c:	ldr	w0, [x8, #1240]
  409f30:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  409f34:	add	x2, x2, #0x5e7
  409f38:	b	409f80 <ferror@plt+0x7380>
  409f3c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409f40:	ldr	w0, [x8, #1240]
  409f44:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  409f48:	add	x2, x2, #0x59a
  409f4c:	b	409f80 <ferror@plt+0x7380>
  409f50:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409f54:	ldr	w0, [x8, #1240]
  409f58:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  409f5c:	add	x2, x2, #0x5b4
  409f60:	mov	w1, wzr
  409f64:	mov	x3, x20
  409f68:	bl	402d0c <ferror@plt+0x10c>
  409f6c:	b	409f88 <ferror@plt+0x7388>
  409f70:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  409f74:	ldr	w0, [x8, #1240]
  409f78:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  409f7c:	add	x2, x2, #0x5cc
  409f80:	mov	w1, wzr
  409f84:	bl	402d0c <ferror@plt+0x10c>
  409f88:	mov	w0, w19
  409f8c:	ldp	x20, x19, [sp, #32]
  409f90:	ldr	x21, [sp, #16]
  409f94:	ldp	x29, x30, [sp], #48
  409f98:	ret
  409f9c:	stp	x29, x30, [sp, #-96]!
  409fa0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  409fa4:	add	x1, x1, #0xeb3
  409fa8:	stp	x28, x27, [sp, #16]
  409fac:	stp	x26, x25, [sp, #32]
  409fb0:	stp	x24, x23, [sp, #48]
  409fb4:	stp	x22, x21, [sp, #64]
  409fb8:	stp	x20, x19, [sp, #80]
  409fbc:	mov	x29, sp
  409fc0:	mov	x20, x0
  409fc4:	bl	4111c8 <ferror@plt+0xe5c8>
  409fc8:	cbz	x0, 40a29c <ferror@plt+0x769c>
  409fcc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  409fd0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  409fd4:	add	x1, x1, #0x601
  409fd8:	add	x2, x2, #0x630
  409fdc:	mov	x19, x0
  409fe0:	bl	4151e4 <ferror@plt+0x125e4>
  409fe4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  409fe8:	add	x1, x1, #0x63e
  409fec:	mov	x0, x19
  409ff0:	bl	4151e4 <ferror@plt+0x125e4>
  409ff4:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  409ff8:	ldr	x0, [x8, #3528]
  409ffc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40a000:	add	x1, x1, #0x642
  40a004:	bl	402990 <strcmp@plt>
  40a008:	cbnz	w0, 40a024 <ferror@plt+0x7424>
  40a00c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40a010:	ldr	x0, [x8, #3584]
  40a014:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x140c>
  40a018:	add	x1, x1, #0xfe2
  40a01c:	bl	402990 <strcmp@plt>
  40a020:	cbz	w0, 40a070 <ferror@plt+0x7470>
  40a024:	adrp	x20, 436000 <__progname@@GLIBC_2.17+0xab98>
  40a028:	adrp	x21, 436000 <__progname@@GLIBC_2.17+0xab98>
  40a02c:	add	x20, x20, #0xdc8
  40a030:	add	x21, x21, #0xe00
  40a034:	ldr	w2, [x20, #8]
  40a038:	ldr	w3, [x21, #8]
  40a03c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40a040:	add	x1, x1, #0x644
  40a044:	mov	x0, x19
  40a048:	bl	4151e4 <ferror@plt+0x125e4>
  40a04c:	ldr	x0, [x20]
  40a050:	mov	x1, x19
  40a054:	bl	402590 <fputs@plt>
  40a058:	ldr	x0, [x21]
  40a05c:	mov	x1, x19
  40a060:	bl	402590 <fputs@plt>
  40a064:	mov	w0, #0xa                   	// #10
  40a068:	mov	x1, x19
  40a06c:	bl	402670 <fputc@plt>
  40a070:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40a074:	ldr	x0, [x8, #3552]
  40a078:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40a07c:	add	x1, x1, #0x64c
  40a080:	bl	402990 <strcmp@plt>
  40a084:	cbnz	w0, 40a0a0 <ferror@plt+0x74a0>
  40a088:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40a08c:	ldr	x0, [x8, #3568]
  40a090:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x340c>
  40a094:	add	x1, x1, #0xac1
  40a098:	bl	402990 <strcmp@plt>
  40a09c:	cbz	w0, 40a0ec <ferror@plt+0x74ec>
  40a0a0:	adrp	x20, 436000 <__progname@@GLIBC_2.17+0xab98>
  40a0a4:	adrp	x21, 436000 <__progname@@GLIBC_2.17+0xab98>
  40a0a8:	add	x20, x20, #0xde0
  40a0ac:	add	x21, x21, #0xdf0
  40a0b0:	ldr	w2, [x20, #8]
  40a0b4:	ldr	w3, [x21, #8]
  40a0b8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40a0bc:	add	x1, x1, #0x64e
  40a0c0:	mov	x0, x19
  40a0c4:	bl	4151e4 <ferror@plt+0x125e4>
  40a0c8:	ldr	x0, [x20]
  40a0cc:	mov	x1, x19
  40a0d0:	bl	402590 <fputs@plt>
  40a0d4:	ldr	x0, [x21]
  40a0d8:	mov	x1, x19
  40a0dc:	bl	402590 <fputs@plt>
  40a0e0:	mov	w0, #0xa                   	// #10
  40a0e4:	mov	x1, x19
  40a0e8:	bl	402670 <fputc@plt>
  40a0ec:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40a0f0:	ldr	x8, [x24, #888]
  40a0f4:	cbz	x8, 40a248 <ferror@plt+0x7648>
  40a0f8:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x240c>
  40a0fc:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x240c>
  40a100:	mov	x25, xzr
  40a104:	adrp	x26, 436000 <__progname@@GLIBC_2.17+0xab98>
  40a108:	add	x20, x20, #0x692
  40a10c:	add	x21, x21, #0x656
  40a110:	ldr	x10, [x26, #3608]
  40a114:	ldr	x9, [x10, x25, lsl #3]
  40a118:	cbz	x9, 40a13c <ferror@plt+0x753c>
  40a11c:	mov	x8, xzr
  40a120:	mov	x10, x8
  40a124:	mov	x8, x9
  40a128:	ldr	x9, [x9]
  40a12c:	str	x10, [x8]
  40a130:	cbnz	x9, 40a120 <ferror@plt+0x7520>
  40a134:	ldr	x10, [x26, #3608]
  40a138:	b	40a140 <ferror@plt+0x7540>
  40a13c:	mov	x8, xzr
  40a140:	str	x8, [x10, x25, lsl #3]
  40a144:	ldr	x8, [x26, #3608]
  40a148:	ldr	x27, [x8, x25, lsl #3]
  40a14c:	cbz	x27, 40a230 <ferror@plt+0x7630>
  40a150:	ldr	w8, [x27, #24]
  40a154:	cbz	w8, 40a1fc <ferror@plt+0x75fc>
  40a158:	cmp	w8, #0x2
  40a15c:	b.eq	40a198 <ferror@plt+0x7598>  // b.none
  40a160:	cmp	w8, #0x1
  40a164:	b.ne	40a2ec <ferror@plt+0x76ec>  // b.any
  40a168:	mov	x28, x27
  40a16c:	ldr	x0, [x28, #16]!
  40a170:	bl	402580 <strlen@plt>
  40a174:	mov	x22, x27
  40a178:	ldr	x8, [x22, #32]!
  40a17c:	mov	x23, x0
  40a180:	mov	x0, x8
  40a184:	bl	402580 <strlen@plt>
  40a188:	mov	x3, x0
  40a18c:	mov	x0, x19
  40a190:	mov	x1, x21
  40a194:	b	40a1d0 <ferror@plt+0x75d0>
  40a198:	ldr	x0, [x27, #32]
  40a19c:	bl	403778 <ferror@plt+0xb78>
  40a1a0:	cbz	x0, 40a300 <ferror@plt+0x7700>
  40a1a4:	mov	x28, x27
  40a1a8:	mov	x22, x0
  40a1ac:	ldr	x0, [x28, #16]!
  40a1b0:	bl	402580 <strlen@plt>
  40a1b4:	ldr	x8, [x22]
  40a1b8:	mov	x23, x0
  40a1bc:	mov	x0, x8
  40a1c0:	bl	402580 <strlen@plt>
  40a1c4:	mov	x3, x0
  40a1c8:	mov	x0, x19
  40a1cc:	mov	x1, x20
  40a1d0:	mov	w2, w23
  40a1d4:	bl	4151e4 <ferror@plt+0x125e4>
  40a1d8:	ldr	x0, [x28]
  40a1dc:	mov	x1, x19
  40a1e0:	bl	402590 <fputs@plt>
  40a1e4:	ldr	x0, [x22]
  40a1e8:	mov	x1, x19
  40a1ec:	bl	402590 <fputs@plt>
  40a1f0:	mov	w0, #0xa                   	// #10
  40a1f4:	mov	x1, x19
  40a1f8:	bl	402670 <fputc@plt>
  40a1fc:	ldr	x27, [x27]
  40a200:	cbnz	x27, 40a150 <ferror@plt+0x7550>
  40a204:	ldr	x8, [x26, #3608]
  40a208:	ldr	x10, [x8, x25, lsl #3]
  40a20c:	cbz	x10, 40a230 <ferror@plt+0x7630>
  40a210:	mov	x9, xzr
  40a214:	mov	x8, x9
  40a218:	mov	x9, x10
  40a21c:	ldr	x10, [x10]
  40a220:	str	x8, [x9]
  40a224:	cbnz	x10, 40a214 <ferror@plt+0x7614>
  40a228:	ldr	x8, [x26, #3608]
  40a22c:	b	40a234 <ferror@plt+0x7634>
  40a230:	mov	x9, xzr
  40a234:	str	x9, [x8, x25, lsl #3]
  40a238:	ldr	x8, [x24, #888]
  40a23c:	add	x25, x25, #0x1
  40a240:	cmp	x25, x8
  40a244:	b.cc	40a110 <ferror@plt+0x7510>  // b.lo, b.ul, b.last
  40a248:	mov	x0, x19
  40a24c:	bl	40e5fc <ferror@plt+0xb9fc>
  40a250:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40a254:	add	x0, x0, #0x6d6
  40a258:	mov	x1, x19
  40a25c:	bl	402590 <fputs@plt>
  40a260:	mov	x0, x19
  40a264:	bl	410910 <ferror@plt+0xdd10>
  40a268:	cbz	w0, 40a2d0 <ferror@plt+0x76d0>
  40a26c:	bl	402b80 <__errno_location@plt>
  40a270:	ldr	w1, [x0]
  40a274:	ldp	x20, x19, [sp, #80]
  40a278:	ldp	x22, x21, [sp, #64]
  40a27c:	ldp	x24, x23, [sp, #48]
  40a280:	ldp	x26, x25, [sp, #32]
  40a284:	ldp	x28, x27, [sp, #16]
  40a288:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a28c:	add	x2, x2, #0x6f2
  40a290:	mov	w0, #0x1                   	// #1
  40a294:	ldp	x29, x30, [sp], #96
  40a298:	b	402d0c <ferror@plt+0x10c>
  40a29c:	bl	402b80 <__errno_location@plt>
  40a2a0:	ldr	w1, [x0]
  40a2a4:	mov	x3, x20
  40a2a8:	ldp	x20, x19, [sp, #80]
  40a2ac:	ldp	x22, x21, [sp, #64]
  40a2b0:	ldp	x24, x23, [sp, #48]
  40a2b4:	ldp	x26, x25, [sp, #32]
  40a2b8:	ldp	x28, x27, [sp, #16]
  40a2bc:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x140c>
  40a2c0:	add	x2, x2, #0x56f
  40a2c4:	mov	w0, #0x1                   	// #1
  40a2c8:	ldp	x29, x30, [sp], #96
  40a2cc:	b	402d0c <ferror@plt+0x10c>
  40a2d0:	ldp	x20, x19, [sp, #80]
  40a2d4:	ldp	x22, x21, [sp, #64]
  40a2d8:	ldp	x24, x23, [sp, #48]
  40a2dc:	ldp	x26, x25, [sp, #32]
  40a2e0:	ldp	x28, x27, [sp, #16]
  40a2e4:	ldp	x29, x30, [sp], #96
  40a2e8:	ret
  40a2ec:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40a2f0:	ldr	w0, [x8, #1240]
  40a2f4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a2f8:	add	x2, x2, #0x69a
  40a2fc:	b	40a310 <ferror@plt+0x7710>
  40a300:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40a304:	ldr	w0, [x8, #1240]
  40a308:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a30c:	add	x2, x2, #0x65e
  40a310:	mov	w1, wzr
  40a314:	bl	402d0c <ferror@plt+0x10c>
  40a318:	bl	402920 <abort@plt>
  40a31c:	sub	sp, sp, #0x80
  40a320:	mov	x1, xzr
  40a324:	stp	x29, x30, [sp, #32]
  40a328:	stp	x28, x27, [sp, #48]
  40a32c:	stp	x26, x25, [sp, #64]
  40a330:	stp	x24, x23, [sp, #80]
  40a334:	stp	x22, x21, [sp, #96]
  40a338:	stp	x20, x19, [sp, #112]
  40a33c:	add	x29, sp, #0x20
  40a340:	mov	x20, x0
  40a344:	bl	40eb78 <ferror@plt+0xbf78>
  40a348:	mov	x19, x0
  40a34c:	cbnz	x0, 40a36c <ferror@plt+0x776c>
  40a350:	bl	402b80 <__errno_location@plt>
  40a354:	ldr	w1, [x0]
  40a358:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a35c:	add	x2, x2, #0x710
  40a360:	mov	w0, #0x1                   	// #1
  40a364:	mov	x3, x20
  40a368:	bl	402d0c <ferror@plt+0x10c>
  40a36c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40a370:	mov	w0, #0x64                  	// #100
  40a374:	str	x20, [x8, #3544]
  40a378:	bl	414de0 <ferror@plt+0x121e0>
  40a37c:	stur	x0, [x29, #-8]
  40a380:	mov	w0, #0x64                  	// #100
  40a384:	bl	414de0 <ferror@plt+0x121e0>
  40a388:	mov	x25, x0
  40a38c:	adrp	x26, 436000 <__progname@@GLIBC_2.17+0xab98>
  40a390:	ldr	w8, [x26, #3520]
  40a394:	add	w8, w8, #0x1
  40a398:	str	w8, [x26, #3520]
  40a39c:	mov	x0, x19
  40a3a0:	bl	402880 <getc@plt>
  40a3a4:	cmp	w0, #0xa
  40a3a8:	cset	w20, eq  // eq = none
  40a3ac:	b.eq	40a3f4 <ferror@plt+0x77f4>  // b.none
  40a3b0:	mov	w22, w0
  40a3b4:	cmp	w0, #0x23
  40a3b8:	b.ne	40ab88 <ferror@plt+0x7f88>  // b.any
  40a3bc:	cmn	w22, #0x1
  40a3c0:	b.eq	40a404 <ferror@plt+0x7804>  // b.none
  40a3c4:	cmp	w22, #0xa
  40a3c8:	b.eq	40a3fc <ferror@plt+0x77fc>  // b.none
  40a3cc:	tbz	w20, #0, 40a3dc <ferror@plt+0x77dc>
  40a3d0:	ldr	w8, [x26, #3520]
  40a3d4:	add	w8, w8, #0x1
  40a3d8:	str	w8, [x26, #3520]
  40a3dc:	mov	x0, x19
  40a3e0:	bl	402880 <getc@plt>
  40a3e4:	cmp	w0, #0xa
  40a3e8:	mov	w22, w0
  40a3ec:	cset	w20, eq  // eq = none
  40a3f0:	b	40a3bc <ferror@plt+0x77bc>
  40a3f4:	b.ne	40a39c <ferror@plt+0x779c>  // b.any
  40a3f8:	b	40a390 <ferror@plt+0x7790>
  40a3fc:	tbz	w20, #0, 40a39c <ferror@plt+0x779c>
  40a400:	b	40a390 <ferror@plt+0x7790>
  40a404:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a408:	add	x2, x2, #0x7f9
  40a40c:	mov	w0, #0x1                   	// #1
  40a410:	mov	w1, wzr
  40a414:	bl	402d0c <ferror@plt+0x10c>
  40a418:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a41c:	add	x2, x2, #0x81c
  40a420:	mov	w0, #0x1                   	// #1
  40a424:	mov	w3, #0x56                  	// #86
  40a428:	mov	w1, wzr
  40a42c:	bl	402d0c <ferror@plt+0x10c>
  40a430:	tbz	w20, #0, 40a440 <ferror@plt+0x7840>
  40a434:	ldr	w8, [x26, #3520]
  40a438:	add	w8, w8, #0x1
  40a43c:	str	w8, [x26, #3520]
  40a440:	mov	w28, #0xcccd                	// #52429
  40a444:	mov	x0, x19
  40a448:	movk	w28, #0xccc, lsl #16
  40a44c:	bl	402880 <getc@plt>
  40a450:	cmp	w0, #0xa
  40a454:	mov	w23, w0
  40a458:	cset	w27, eq  // eq = none
  40a45c:	bl	4029a0 <__ctype_b_loc@plt>
  40a460:	ldr	x8, [x0]
  40a464:	mov	x22, x0
  40a468:	ldrh	w8, [x8, w23, sxtw #1]
  40a46c:	tbnz	w8, #11, 40a480 <ferror@plt+0x7880>
  40a470:	mov	w24, wzr
  40a474:	mov	w8, wzr
  40a478:	mov	x20, x25
  40a47c:	b	40a4d0 <ferror@plt+0x78d0>
  40a480:	mov	w24, wzr
  40a484:	mov	w21, #0xa                   	// #10
  40a488:	mov	x20, x25
  40a48c:	madd	w8, w24, w21, w23
  40a490:	sub	w24, w8, #0x30
  40a494:	tbz	w27, #0, 40a4a4 <ferror@plt+0x78a4>
  40a498:	ldr	w8, [x26, #3520]
  40a49c:	add	w8, w8, #0x1
  40a4a0:	str	w8, [x26, #3520]
  40a4a4:	mov	x0, x19
  40a4a8:	bl	402880 <getc@plt>
  40a4ac:	ldr	x8, [x22]
  40a4b0:	cmp	w0, #0xa
  40a4b4:	mov	w23, w0
  40a4b8:	cset	w27, eq  // eq = none
  40a4bc:	ldrh	w9, [x8, w0, sxtw #1]
  40a4c0:	cmp	w24, w28
  40a4c4:	ubfx	w8, w9, #11, #1
  40a4c8:	b.cs	40a4d0 <ferror@plt+0x78d0>  // b.hs, b.nlast
  40a4cc:	tbnz	w9, #11, 40a48c <ferror@plt+0x788c>
  40a4d0:	tbnz	w24, #31, 40a4d8 <ferror@plt+0x78d8>
  40a4d4:	cbz	w8, 40a4ec <ferror@plt+0x78ec>
  40a4d8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a4dc:	add	x2, x2, #0x71f
  40a4e0:	mov	w0, #0x1                   	// #1
  40a4e4:	mov	w1, wzr
  40a4e8:	bl	402d0c <ferror@plt+0x10c>
  40a4ec:	cmp	w24, #0x2
  40a4f0:	b.lt	40a510 <ferror@plt+0x7910>  // b.tstop
  40a4f4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a4f8:	add	x2, x2, #0x73f
  40a4fc:	mov	w0, #0x3f                  	// #63
  40a500:	mov	w1, wzr
  40a504:	mov	w3, w24
  40a508:	bl	402d0c <ferror@plt+0x10c>
  40a50c:	b	40a52c <ferror@plt+0x792c>
  40a510:	cmp	w24, #0x1
  40a514:	b.eq	40a52c <ferror@plt+0x792c>  // b.none
  40a518:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a51c:	add	x2, x2, #0x776
  40a520:	mov	w0, #0x1                   	// #1
  40a524:	mov	w1, wzr
  40a528:	bl	402d0c <ferror@plt+0x10c>
  40a52c:	mov	w24, #0xcccd                	// #52429
  40a530:	cmp	w23, #0xa
  40a534:	movk	w24, #0xccc, lsl #16
  40a538:	b.eq	40a550 <ferror@plt+0x7950>  // b.none
  40a53c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a540:	add	x2, x2, #0x7f9
  40a544:	mov	w0, #0x1                   	// #1
  40a548:	mov	w1, wzr
  40a54c:	bl	402d0c <ferror@plt+0x10c>
  40a550:	tbz	w27, #0, 40a560 <ferror@plt+0x7960>
  40a554:	ldr	w8, [x26, #3520]
  40a558:	add	w8, w8, #0x1
  40a55c:	str	w8, [x26, #3520]
  40a560:	mov	x0, x19
  40a564:	bl	402880 <getc@plt>
  40a568:	cmp	w0, #0xa
  40a56c:	mov	w28, w0
  40a570:	cset	w27, eq  // eq = none
  40a574:	cmp	w0, #0x23
  40a578:	b.ne	40a5b4 <ferror@plt+0x79b4>  // b.any
  40a57c:	cmn	w28, #0x1
  40a580:	b.eq	40a5c0 <ferror@plt+0x79c0>  // b.none
  40a584:	cmp	w28, #0xa
  40a588:	b.eq	40a5b4 <ferror@plt+0x79b4>  // b.none
  40a58c:	tbz	w27, #0, 40a59c <ferror@plt+0x799c>
  40a590:	ldr	w8, [x26, #3520]
  40a594:	add	w8, w8, #0x1
  40a598:	str	w8, [x26, #3520]
  40a59c:	mov	x0, x19
  40a5a0:	bl	402880 <getc@plt>
  40a5a4:	cmp	w0, #0xa
  40a5a8:	mov	w28, w0
  40a5ac:	cset	w27, eq  // eq = none
  40a5b0:	b	40a57c <ferror@plt+0x797c>
  40a5b4:	cmp	w28, #0xa
  40a5b8:	b.eq	40a550 <ferror@plt+0x7950>  // b.none
  40a5bc:	b	40a5d4 <ferror@plt+0x79d4>
  40a5c0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a5c4:	add	x2, x2, #0x7f9
  40a5c8:	mov	w0, #0x1                   	// #1
  40a5cc:	mov	w1, wzr
  40a5d0:	bl	402d0c <ferror@plt+0x10c>
  40a5d4:	mov	w8, #0x64                  	// #100
  40a5d8:	str	x8, [sp]
  40a5dc:	mov	w8, #0x64                  	// #100
  40a5e0:	str	x8, [sp, #16]
  40a5e4:	sub	w8, w28, #0x43
  40a5e8:	cmp	w8, #0x11
  40a5ec:	b.hi	40aa34 <ferror@plt+0x7e34>  // b.pmore
  40a5f0:	mov	w9, #0x1                   	// #1
  40a5f4:	lsl	w8, w9, w8
  40a5f8:	mov	w9, #0x400b                	// #16395
  40a5fc:	movk	w9, #0x2, lsl #16
  40a600:	tst	w8, w9
  40a604:	b.eq	40aa34 <ferror@plt+0x7e34>  // b.none
  40a608:	tbz	w27, #0, 40a618 <ferror@plt+0x7a18>
  40a60c:	ldr	w8, [x26, #3520]
  40a610:	add	w8, w8, #0x1
  40a614:	str	w8, [x26, #3520]
  40a618:	mov	x0, x19
  40a61c:	bl	402880 <getc@plt>
  40a620:	cmp	w0, #0xa
  40a624:	mov	w25, w0
  40a628:	cset	w21, eq  // eq = none
  40a62c:	cmp	w28, #0x44
  40a630:	b.ne	40a6dc <ferror@plt+0x7adc>  // b.any
  40a634:	cmp	w25, #0x2d
  40a638:	b.ne	40a6dc <ferror@plt+0x7adc>  // b.any
  40a63c:	mov	x0, x19
  40a640:	bl	402880 <getc@plt>
  40a644:	ldr	x8, [x22]
  40a648:	cmp	w0, #0xa
  40a64c:	mov	w25, w0
  40a650:	cset	w21, eq  // eq = none
  40a654:	ldrh	w8, [x8, w0, sxtw #1]
  40a658:	mov	w23, wzr
  40a65c:	tbnz	w8, #11, 40a668 <ferror@plt+0x7a68>
  40a660:	mov	w8, wzr
  40a664:	b	40a6b0 <ferror@plt+0x7ab0>
  40a668:	mov	w8, #0xa                   	// #10
  40a66c:	madd	w8, w23, w8, w25
  40a670:	sub	w23, w8, #0x30
  40a674:	tbz	w21, #0, 40a684 <ferror@plt+0x7a84>
  40a678:	ldr	w8, [x26, #3520]
  40a67c:	add	w8, w8, #0x1
  40a680:	str	w8, [x26, #3520]
  40a684:	mov	x0, x19
  40a688:	bl	402880 <getc@plt>
  40a68c:	ldr	x8, [x22]
  40a690:	cmp	w0, #0xa
  40a694:	mov	w25, w0
  40a698:	cset	w21, eq  // eq = none
  40a69c:	ldrh	w9, [x8, w0, sxtw #1]
  40a6a0:	cmp	w23, w24
  40a6a4:	ubfx	w8, w9, #11, #1
  40a6a8:	b.cs	40a6b0 <ferror@plt+0x7ab0>  // b.hs, b.nlast
  40a6ac:	tbnz	w9, #11, 40a668 <ferror@plt+0x7a68>
  40a6b0:	mov	w9, #0x80000000            	// #-2147483648
  40a6b4:	cmp	w23, w9
  40a6b8:	b.hi	40a6c0 <ferror@plt+0x7ac0>  // b.pmore
  40a6bc:	cbz	w8, 40a6d4 <ferror@plt+0x7ad4>
  40a6c0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a6c4:	mov	w0, #0x1                   	// #1
  40a6c8:	mov	w1, wzr
  40a6cc:	add	x2, x2, #0x71f
  40a6d0:	bl	402d0c <ferror@plt+0x10c>
  40a6d4:	neg	w23, w23
  40a6d8:	b	40a75c <ferror@plt+0x7b5c>
  40a6dc:	ldr	x8, [x22]
  40a6e0:	ldrh	w8, [x8, w25, sxtw #1]
  40a6e4:	tbnz	w8, #11, 40a6f4 <ferror@plt+0x7af4>
  40a6e8:	mov	w23, wzr
  40a6ec:	mov	w8, wzr
  40a6f0:	b	40a740 <ferror@plt+0x7b40>
  40a6f4:	mov	w23, wzr
  40a6f8:	mov	w8, #0xa                   	// #10
  40a6fc:	madd	w8, w23, w8, w25
  40a700:	sub	w23, w8, #0x30
  40a704:	tbz	w21, #0, 40a714 <ferror@plt+0x7b14>
  40a708:	ldr	w8, [x26, #3520]
  40a70c:	add	w8, w8, #0x1
  40a710:	str	w8, [x26, #3520]
  40a714:	mov	x0, x19
  40a718:	bl	402880 <getc@plt>
  40a71c:	ldr	x8, [x22]
  40a720:	cmp	w0, #0xa
  40a724:	mov	w25, w0
  40a728:	cset	w21, eq  // eq = none
  40a72c:	ldrh	w9, [x8, w0, sxtw #1]
  40a730:	cmp	w23, w24
  40a734:	ubfx	w8, w9, #11, #1
  40a738:	b.cs	40a740 <ferror@plt+0x7b40>  // b.hs, b.nlast
  40a73c:	tbnz	w9, #11, 40a6f8 <ferror@plt+0x7af8>
  40a740:	tbnz	w23, #31, 40a748 <ferror@plt+0x7b48>
  40a744:	cbz	w8, 40a75c <ferror@plt+0x7b5c>
  40a748:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a74c:	mov	w0, #0x1                   	// #1
  40a750:	mov	w1, wzr
  40a754:	add	x2, x2, #0x71f
  40a758:	bl	402d0c <ferror@plt+0x10c>
  40a75c:	cmp	w25, #0x2c
  40a760:	b.eq	40a77c <ferror@plt+0x7b7c>  // b.none
  40a764:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a768:	mov	w0, #0x1                   	// #1
  40a76c:	mov	w3, #0x2c                  	// #44
  40a770:	mov	w1, wzr
  40a774:	add	x2, x2, #0x81c
  40a778:	bl	402d0c <ferror@plt+0x10c>
  40a77c:	cbz	w21, 40a78c <ferror@plt+0x7b8c>
  40a780:	ldr	w8, [x26, #3520]
  40a784:	add	w8, w8, #0x1
  40a788:	str	w8, [x26, #3520]
  40a78c:	mov	x0, x19
  40a790:	bl	402880 <getc@plt>
  40a794:	ldr	x8, [x22]
  40a798:	cmp	w0, #0xa
  40a79c:	mov	w27, w0
  40a7a0:	cset	w21, eq  // eq = none
  40a7a4:	ldrh	w8, [x8, w0, sxtw #1]
  40a7a8:	mov	w25, wzr
  40a7ac:	tbnz	w8, #11, 40a7b8 <ferror@plt+0x7bb8>
  40a7b0:	mov	w8, wzr
  40a7b4:	b	40a800 <ferror@plt+0x7c00>
  40a7b8:	mov	w8, #0xa                   	// #10
  40a7bc:	madd	w8, w25, w8, w27
  40a7c0:	sub	w25, w8, #0x30
  40a7c4:	tbz	w21, #0, 40a7d4 <ferror@plt+0x7bd4>
  40a7c8:	ldr	w8, [x26, #3520]
  40a7cc:	add	w8, w8, #0x1
  40a7d0:	str	w8, [x26, #3520]
  40a7d4:	mov	x0, x19
  40a7d8:	bl	402880 <getc@plt>
  40a7dc:	ldr	x8, [x22]
  40a7e0:	cmp	w0, #0xa
  40a7e4:	mov	w27, w0
  40a7e8:	cset	w21, eq  // eq = none
  40a7ec:	ldrh	w9, [x8, w0, sxtw #1]
  40a7f0:	cmp	w25, w24
  40a7f4:	ubfx	w8, w9, #11, #1
  40a7f8:	b.cs	40a800 <ferror@plt+0x7c00>  // b.hs, b.nlast
  40a7fc:	tbnz	w9, #11, 40a7b8 <ferror@plt+0x7bb8>
  40a800:	tbnz	w25, #31, 40a808 <ferror@plt+0x7c08>
  40a804:	cbz	w8, 40a81c <ferror@plt+0x7c1c>
  40a808:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a80c:	mov	w0, #0x1                   	// #1
  40a810:	mov	w1, wzr
  40a814:	add	x2, x2, #0x71f
  40a818:	bl	402d0c <ferror@plt+0x10c>
  40a81c:	cmp	w27, #0xa
  40a820:	b.eq	40a838 <ferror@plt+0x7c38>  // b.none
  40a824:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a828:	mov	w0, #0x1                   	// #1
  40a82c:	mov	w1, wzr
  40a830:	add	x2, x2, #0x7f9
  40a834:	bl	402d0c <ferror@plt+0x10c>
  40a838:	cmp	w28, #0x44
  40a83c:	b.eq	40a8e4 <ferror@plt+0x7ce4>  // b.none
  40a840:	ldr	x8, [sp]
  40a844:	cmp	w23, w8
  40a848:	b.lt	40a868 <ferror@plt+0x7c68>  // b.tstop
  40a84c:	ldur	x0, [x29, #-8]
  40a850:	add	w24, w23, #0x1
  40a854:	bl	4029f0 <free@plt>
  40a858:	sxtw	x0, w24
  40a85c:	str	x24, [sp]
  40a860:	bl	414de0 <ferror@plt+0x121e0>
  40a864:	stur	x0, [x29, #-8]
  40a868:	cmp	w23, #0x1
  40a86c:	str	x20, [sp, #8]
  40a870:	b.lt	40a8a0 <ferror@plt+0x7ca0>  // b.tstop
  40a874:	ldur	x0, [x29, #-8]
  40a878:	mov	w1, w23
  40a87c:	mov	w2, #0x1                   	// #1
  40a880:	mov	x3, x19
  40a884:	bl	4029e0 <fread@plt>
  40a888:	cbnz	x0, 40a8a0 <ferror@plt+0x7ca0>
  40a88c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a890:	mov	w0, #0x1                   	// #1
  40a894:	mov	w1, wzr
  40a898:	add	x2, x2, #0x7c0
  40a89c:	bl	402d0c <ferror@plt+0x10c>
  40a8a0:	ldur	x0, [x29, #-8]
  40a8a4:	sxtw	x2, w23
  40a8a8:	mov	w1, #0xa                   	// #10
  40a8ac:	add	x27, x0, w23, sxtw
  40a8b0:	strb	wzr, [x27]
  40a8b4:	bl	402ac0 <memchr@plt>
  40a8b8:	cbz	x0, 40a8e0 <ferror@plt+0x7ce0>
  40a8bc:	ldr	w8, [x26, #3520]
  40a8c0:	add	w20, w8, #0x1
  40a8c4:	add	x0, x0, #0x1
  40a8c8:	sub	x2, x27, x0
  40a8cc:	mov	w1, #0xa                   	// #10
  40a8d0:	str	w20, [x26, #3520]
  40a8d4:	bl	402ac0 <memchr@plt>
  40a8d8:	add	w20, w20, #0x1
  40a8dc:	cbnz	x0, 40a8c4 <ferror@plt+0x7cc4>
  40a8e0:	ldr	x20, [sp, #8]
  40a8e4:	ldr	x8, [sp, #16]
  40a8e8:	cmp	w25, w8
  40a8ec:	b.lt	40a90c <ferror@plt+0x7d0c>  // b.tstop
  40a8f0:	mov	x0, x20
  40a8f4:	add	w24, w25, #0x1
  40a8f8:	bl	4029f0 <free@plt>
  40a8fc:	sxtw	x0, w24
  40a900:	str	x24, [sp, #16]
  40a904:	bl	414de0 <ferror@plt+0x121e0>
  40a908:	mov	x20, x0
  40a90c:	cmp	w25, #0x1
  40a910:	b.lt	40a940 <ferror@plt+0x7d40>  // b.tstop
  40a914:	mov	w1, w25
  40a918:	mov	w2, #0x1                   	// #1
  40a91c:	mov	x0, x20
  40a920:	mov	x3, x19
  40a924:	bl	4029e0 <fread@plt>
  40a928:	cbnz	x0, 40a940 <ferror@plt+0x7d40>
  40a92c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a930:	mov	w0, #0x1                   	// #1
  40a934:	mov	w1, wzr
  40a938:	add	x2, x2, #0x7c0
  40a93c:	bl	402d0c <ferror@plt+0x10c>
  40a940:	sxtw	x2, w25
  40a944:	add	x27, x20, w25, sxtw
  40a948:	mov	w1, #0xa                   	// #10
  40a94c:	mov	x0, x20
  40a950:	strb	wzr, [x27]
  40a954:	mov	x24, x20
  40a958:	bl	402ac0 <memchr@plt>
  40a95c:	cbz	x0, 40a984 <ferror@plt+0x7d84>
  40a960:	ldr	w8, [x26, #3520]
  40a964:	add	w20, w8, #0x1
  40a968:	add	x0, x0, #0x1
  40a96c:	sub	x2, x27, x0
  40a970:	mov	w1, #0xa                   	// #10
  40a974:	str	w20, [x26, #3520]
  40a978:	bl	402ac0 <memchr@plt>
  40a97c:	add	w20, w20, #0x1
  40a980:	cbnz	x0, 40a968 <ferror@plt+0x7d68>
  40a984:	cbz	w21, 40a994 <ferror@plt+0x7d94>
  40a988:	ldr	w8, [x26, #3520]
  40a98c:	add	w8, w8, #0x1
  40a990:	str	w8, [x26, #3520]
  40a994:	mov	x0, x19
  40a998:	bl	402880 <getc@plt>
  40a99c:	cmp	w0, #0xa
  40a9a0:	cset	w27, eq  // eq = none
  40a9a4:	b.eq	40a9bc <ferror@plt+0x7dbc>  // b.none
  40a9a8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40a9ac:	mov	w0, #0x1                   	// #1
  40a9b0:	mov	w1, wzr
  40a9b4:	add	x2, x2, #0x7f9
  40a9b8:	bl	402d0c <ferror@plt+0x10c>
  40a9bc:	cmp	w28, #0x45
  40a9c0:	mov	x20, x24
  40a9c4:	b.le	40a9fc <ferror@plt+0x7dfc>
  40a9c8:	cmp	w28, #0x46
  40a9cc:	b.eq	40aa58 <ferror@plt+0x7e58>  // b.none
  40a9d0:	mov	w24, #0xcccd                	// #52429
  40a9d4:	cmp	w28, #0x51
  40a9d8:	movk	w24, #0xccc, lsl #16
  40a9dc:	b.eq	40aa7c <ferror@plt+0x7e7c>  // b.none
  40a9e0:	cmp	w28, #0x54
  40a9e4:	b.ne	40aaa0 <ferror@plt+0x7ea0>  // b.any
  40a9e8:	ldur	x0, [x29, #-8]
  40a9ec:	mov	w2, #0x3                   	// #3
  40a9f0:	mov	x1, x20
  40a9f4:	bl	40397c <ferror@plt+0xd7c>
  40a9f8:	b	40aaa0 <ferror@plt+0x7ea0>
  40a9fc:	cmp	w28, #0x43
  40aa00:	b.eq	40aa8c <ferror@plt+0x7e8c>  // b.none
  40aa04:	mov	w24, #0xcccd                	// #52429
  40aa08:	cmp	w28, #0x44
  40aa0c:	movk	w24, #0xccc, lsl #16
  40aa10:	b.ne	40aaa0 <ferror@plt+0x7ea0>  // b.any
  40aa14:	mov	w0, w23
  40aa18:	bl	40dcc0 <ferror@plt+0xb0c0>
  40aa1c:	cmp	w25, #0x1
  40aa20:	b.lt	40aaa0 <ferror@plt+0x7ea0>  // b.tstop
  40aa24:	mov	x0, x20
  40aa28:	mov	w1, w25
  40aa2c:	bl	40d018 <ferror@plt+0xa418>
  40aa30:	b	40aaa0 <ferror@plt+0x7ea0>
  40aa34:	cmn	w28, #0x1
  40aa38:	b.eq	40ab28 <ferror@plt+0x7f28>  // b.none
  40aa3c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40aa40:	mov	w0, #0x1                   	// #1
  40aa44:	mov	w1, wzr
  40aa48:	add	x2, x2, #0x7a9
  40aa4c:	bl	402d0c <ferror@plt+0x10c>
  40aa50:	tbnz	w27, #0, 40a60c <ferror@plt+0x7a0c>
  40aa54:	b	40a618 <ferror@plt+0x7a18>
  40aa58:	mov	x0, x20
  40aa5c:	bl	4037ec <ferror@plt+0xbec>
  40aa60:	mov	x1, x0
  40aa64:	ldur	x0, [x29, #-8]
  40aa68:	mov	w2, #0x3                   	// #3
  40aa6c:	bl	403844 <ferror@plt+0xc44>
  40aa70:	mov	w24, #0xcccd                	// #52429
  40aa74:	movk	w24, #0xccc, lsl #16
  40aa78:	b	40aaa0 <ferror@plt+0x7ea0>
  40aa7c:	ldur	x0, [x29, #-8]
  40aa80:	mov	x1, x20
  40aa84:	bl	40b740 <ferror@plt+0x8b40>
  40aa88:	b	40aaa0 <ferror@plt+0x7ea0>
  40aa8c:	ldur	x0, [x29, #-8]
  40aa90:	mov	x1, x20
  40aa94:	bl	40b7e8 <ferror@plt+0x8be8>
  40aa98:	mov	w24, #0xcccd                	// #52429
  40aa9c:	movk	w24, #0xccc, lsl #16
  40aaa0:	tbz	w27, #0, 40aab0 <ferror@plt+0x7eb0>
  40aaa4:	ldr	w8, [x26, #3520]
  40aaa8:	add	w8, w8, #0x1
  40aaac:	str	w8, [x26, #3520]
  40aab0:	mov	x0, x19
  40aab4:	bl	402880 <getc@plt>
  40aab8:	cmp	w0, #0xa
  40aabc:	mov	w28, w0
  40aac0:	cset	w27, eq  // eq = none
  40aac4:	cmp	w0, #0x23
  40aac8:	b.ne	40ab04 <ferror@plt+0x7f04>  // b.any
  40aacc:	cmn	w28, #0x1
  40aad0:	b.eq	40ab10 <ferror@plt+0x7f10>  // b.none
  40aad4:	cmp	w28, #0xa
  40aad8:	b.eq	40ab04 <ferror@plt+0x7f04>  // b.none
  40aadc:	tbz	w27, #0, 40aaec <ferror@plt+0x7eec>
  40aae0:	ldr	w8, [x26, #3520]
  40aae4:	add	w8, w8, #0x1
  40aae8:	str	w8, [x26, #3520]
  40aaec:	mov	x0, x19
  40aaf0:	bl	402880 <getc@plt>
  40aaf4:	cmp	w0, #0xa
  40aaf8:	mov	w28, w0
  40aafc:	cset	w27, eq  // eq = none
  40ab00:	b	40aacc <ferror@plt+0x7ecc>
  40ab04:	cmp	w28, #0xa
  40ab08:	b.eq	40aaa0 <ferror@plt+0x7ea0>  // b.none
  40ab0c:	b	40a5e4 <ferror@plt+0x79e4>
  40ab10:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40ab14:	mov	w0, #0x1                   	// #1
  40ab18:	mov	w1, wzr
  40ab1c:	add	x2, x2, #0x7f9
  40ab20:	bl	402d0c <ferror@plt+0x10c>
  40ab24:	b	40a5e4 <ferror@plt+0x79e4>
  40ab28:	ldur	x0, [x29, #-8]
  40ab2c:	bl	4029f0 <free@plt>
  40ab30:	mov	x0, x20
  40ab34:	bl	4029f0 <free@plt>
  40ab38:	mov	x0, x19
  40ab3c:	bl	410910 <ferror@plt+0xdd10>
  40ab40:	cbz	w0, 40ab5c <ferror@plt+0x7f5c>
  40ab44:	bl	402b80 <__errno_location@plt>
  40ab48:	ldr	w1, [x0]
  40ab4c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40ab50:	add	x2, x2, #0x7dd
  40ab54:	mov	w0, #0x1                   	// #1
  40ab58:	bl	402d0c <ferror@plt+0x10c>
  40ab5c:	str	wzr, [x26, #3520]
  40ab60:	ldp	x20, x19, [sp, #112]
  40ab64:	ldp	x22, x21, [sp, #96]
  40ab68:	ldp	x24, x23, [sp, #80]
  40ab6c:	ldp	x26, x25, [sp, #64]
  40ab70:	ldp	x28, x27, [sp, #48]
  40ab74:	ldp	x29, x30, [sp, #32]
  40ab78:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40ab7c:	str	xzr, [x8, #3544]
  40ab80:	add	sp, sp, #0x80
  40ab84:	ret
  40ab88:	cmp	w22, #0x56
  40ab8c:	b.eq	40aba8 <ferror@plt+0x7fa8>  // b.none
  40ab90:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40ab94:	add	x2, x2, #0x81c
  40ab98:	mov	w0, #0x1                   	// #1
  40ab9c:	mov	w3, #0x56                  	// #86
  40aba0:	mov	w1, wzr
  40aba4:	bl	402d0c <ferror@plt+0x10c>
  40aba8:	cmp	w22, #0xa
  40abac:	b.eq	40a434 <ferror@plt+0x7834>  // b.none
  40abb0:	b	40a440 <ferror@plt+0x7840>
  40abb4:	stp	x29, x30, [sp, #-64]!
  40abb8:	stp	x24, x23, [sp, #16]
  40abbc:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40abc0:	stp	x22, x21, [sp, #32]
  40abc4:	mov	x21, x1
  40abc8:	ldr	x1, [x23, #2248]
  40abcc:	stp	x20, x19, [sp, #48]
  40abd0:	mov	w20, w2
  40abd4:	mov	x19, x0
  40abd8:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40abdc:	mov	x29, sp
  40abe0:	cbz	x1, 40ac10 <ferror@plt+0x8010>
  40abe4:	ldr	x0, [x22, #2256]
  40abe8:	ldr	x8, [x0, #8]
  40abec:	cmp	x8, x1
  40abf0:	b.cs	40ac08 <ferror@plt+0x8008>  // b.hs, b.nlast
  40abf4:	ldr	x8, [x0, #32]
  40abf8:	cmp	x8, x1
  40abfc:	b.ls	40ac08 <ferror@plt+0x8008>  // b.plast
  40ac00:	stp	x1, x1, [x0, #16]
  40ac04:	b	40ac0c <ferror@plt+0x800c>
  40ac08:	bl	415b5c <_obstack_free@@Base>
  40ac0c:	str	xzr, [x23, #2248]
  40ac10:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ac14:	ldrb	w8, [x8, #1221]
  40ac18:	tbz	w8, #0, 40ac4c <ferror@plt+0x804c>
  40ac1c:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ac20:	ldr	x8, [x23, #2136]
  40ac24:	cbz	x8, 40ac4c <ferror@plt+0x804c>
  40ac28:	bl	407fe0 <ferror@plt+0x53e0>
  40ac2c:	ldr	x0, [x23, #2136]
  40ac30:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40ac34:	add	x1, x1, #0x844
  40ac38:	mov	x2, x21
  40ac3c:	bl	4151e4 <ferror@plt+0x125e4>
  40ac40:	ldr	x1, [x23, #2136]
  40ac44:	mov	w0, #0xa                   	// #10
  40ac48:	bl	402640 <putc@plt>
  40ac4c:	ldr	x22, [x22, #2256]
  40ac50:	ldp	x8, x9, [x22, #24]
  40ac54:	sub	x9, x9, x8
  40ac58:	cmp	x9, #0x2f
  40ac5c:	b.hi	40ac70 <ferror@plt+0x8070>  // b.pmore
  40ac60:	mov	w1, #0x30                  	// #48
  40ac64:	mov	x0, x22
  40ac68:	bl	4159e4 <_obstack_newchunk@@Base>
  40ac6c:	ldr	x8, [x22, #24]
  40ac70:	ldr	x24, [x22, #16]
  40ac74:	add	x8, x8, #0x30
  40ac78:	str	x8, [x22, #24]
  40ac7c:	cmp	x8, x24
  40ac80:	b.ne	40ac90 <ferror@plt+0x8090>  // b.any
  40ac84:	ldrb	w9, [x22, #80]
  40ac88:	orr	w9, w9, #0x2
  40ac8c:	strb	w9, [x22, #80]
  40ac90:	ldr	x10, [x22, #48]
  40ac94:	ldr	x11, [x22, #8]
  40ac98:	ldr	x9, [x22, #32]
  40ac9c:	add	x8, x10, x8
  40aca0:	bic	x8, x8, x10
  40aca4:	sub	x10, x8, x11
  40aca8:	sub	x11, x9, x11
  40acac:	cmp	x10, x11
  40acb0:	str	x8, [x22, #24]
  40acb4:	b.ls	40acc0 <ferror@plt+0x80c0>  // b.plast
  40acb8:	mov	x8, x9
  40acbc:	str	x9, [x22, #24]
  40acc0:	str	x8, [x22, #16]
  40acc4:	mov	w8, #0x1                   	// #1
  40acc8:	mov	x0, x21
  40accc:	str	w8, [x24, #8]
  40acd0:	bl	402580 <strlen@plt>
  40acd4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40acd8:	add	x8, x8, #0x8f0
  40acdc:	mov	x22, x0
  40ace0:	ldp	x0, x9, [x8]
  40ace4:	add	x1, x22, #0x1
  40ace8:	sub	x8, x9, x0
  40acec:	cmp	x8, x1
  40acf0:	b.cs	40ad08 <ferror@plt+0x8108>  // b.hs, b.nlast
  40acf4:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40acf8:	add	x23, x23, #0x8d8
  40acfc:	mov	x0, x23
  40ad00:	bl	4159e4 <_obstack_newchunk@@Base>
  40ad04:	ldr	x0, [x23, #24]
  40ad08:	mov	x1, x21
  40ad0c:	mov	x2, x22
  40ad10:	bl	402550 <memcpy@plt>
  40ad14:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ad18:	add	x9, x9, #0x8e8
  40ad1c:	ldr	x8, [x9, #8]
  40ad20:	add	x8, x8, x22
  40ad24:	add	x10, x8, #0x1
  40ad28:	str	x10, [x9, #8]
  40ad2c:	strb	wzr, [x8]
  40ad30:	ldp	x8, x9, [x9]
  40ad34:	cmp	x9, x8
  40ad38:	b.ne	40ad4c <ferror@plt+0x814c>  // b.any
  40ad3c:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ad40:	ldrb	w11, [x10, #2344]
  40ad44:	orr	w11, w11, #0x2
  40ad48:	strb	w11, [x10, #2344]
  40ad4c:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ad50:	add	x10, x10, #0x8e0
  40ad54:	ldr	x11, [x10, #40]
  40ad58:	ldr	x12, [x10]
  40ad5c:	ldr	x13, [x10, #24]
  40ad60:	add	x9, x11, x9
  40ad64:	bic	x9, x9, x11
  40ad68:	sub	x11, x13, x12
  40ad6c:	sub	x12, x9, x12
  40ad70:	cmp	x12, x11
  40ad74:	mov	w11, #0x1                   	// #1
  40ad78:	adrp	x12, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ad7c:	csel	x9, x13, x9, hi  // hi = pmore
  40ad80:	stp	x9, x9, [x10, #8]
  40ad84:	str	x8, [x24, #16]
  40ad88:	str	w11, [x24, #24]
  40ad8c:	strb	w11, [x12, #2352]
  40ad90:	ldrb	w8, [x24, #40]
  40ad94:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ad98:	str	x19, [x24, #32]
  40ad9c:	ldrb	w9, [x9, #2356]
  40ada0:	mov	w13, #0x2                   	// #2
  40ada4:	tst	w20, #0x1
  40ada8:	csel	w11, w13, wzr, ne  // ne = any
  40adac:	and	w8, w8, #0xf8
  40adb0:	orr	w8, w8, w11
  40adb4:	orr	w8, w8, w9, lsl #2
  40adb8:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40adbc:	strb	w8, [x24, #40]
  40adc0:	ldr	x8, [x10, #2360]
  40adc4:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  40adc8:	mov	w11, #0xffffffff            	// #-1
  40adcc:	str	w11, [x9, #3600]
  40add0:	str	x8, [x24]
  40add4:	str	x24, [x10, #2360]
  40add8:	ldp	x20, x19, [sp, #48]
  40addc:	ldp	x22, x21, [sp, #32]
  40ade0:	ldp	x24, x23, [sp, #16]
  40ade4:	ldp	x29, x30, [sp], #64
  40ade8:	ret
  40adec:	stp	x29, x30, [sp, #-48]!
  40adf0:	stp	x20, x19, [sp, #32]
  40adf4:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40adf8:	ldr	x1, [x20, #2248]
  40adfc:	str	x21, [sp, #16]
  40ae00:	mov	x19, x0
  40ae04:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ae08:	mov	x29, sp
  40ae0c:	cbz	x1, 40ae3c <ferror@plt+0x823c>
  40ae10:	ldr	x0, [x21, #2256]
  40ae14:	ldr	x8, [x0, #8]
  40ae18:	cmp	x8, x1
  40ae1c:	b.cs	40ae34 <ferror@plt+0x8234>  // b.hs, b.nlast
  40ae20:	ldr	x8, [x0, #32]
  40ae24:	cmp	x8, x1
  40ae28:	b.ls	40ae34 <ferror@plt+0x8234>  // b.plast
  40ae2c:	stp	x1, x1, [x0, #16]
  40ae30:	b	40ae38 <ferror@plt+0x8238>
  40ae34:	bl	415b5c <_obstack_free@@Base>
  40ae38:	str	xzr, [x20, #2248]
  40ae3c:	ldr	x20, [x21, #2256]
  40ae40:	ldp	x9, x8, [x20, #24]
  40ae44:	sub	x8, x8, x9
  40ae48:	cmp	x8, #0x2f
  40ae4c:	b.hi	40ae60 <ferror@plt+0x8260>  // b.pmore
  40ae50:	mov	w1, #0x30                  	// #48
  40ae54:	mov	x0, x20
  40ae58:	bl	4159e4 <_obstack_newchunk@@Base>
  40ae5c:	ldr	x9, [x20, #24]
  40ae60:	ldr	x8, [x20, #16]
  40ae64:	add	x9, x9, #0x30
  40ae68:	str	x9, [x20, #24]
  40ae6c:	cmp	x9, x8
  40ae70:	b.ne	40ae80 <ferror@plt+0x8280>  // b.any
  40ae74:	ldrb	w10, [x20, #80]
  40ae78:	orr	w10, w10, #0x2
  40ae7c:	strb	w10, [x20, #80]
  40ae80:	ldr	x11, [x20, #48]
  40ae84:	ldr	x12, [x20, #8]
  40ae88:	ldr	x10, [x20, #32]
  40ae8c:	add	x9, x11, x9
  40ae90:	bic	x9, x9, x11
  40ae94:	sub	x11, x9, x12
  40ae98:	sub	x12, x10, x12
  40ae9c:	cmp	x11, x12
  40aea0:	str	x9, [x20, #24]
  40aea4:	b.ls	40aeb0 <ferror@plt+0x82b0>  // b.plast
  40aea8:	mov	x9, x10
  40aeac:	str	x10, [x20, #24]
  40aeb0:	str	x9, [x20, #16]
  40aeb4:	mov	w9, #0x2                   	// #2
  40aeb8:	adrp	x10, 436000 <__progname@@GLIBC_2.17+0xab98>
  40aebc:	str	w9, [x8, #8]
  40aec0:	ldr	x9, [x10, #3544]
  40aec4:	adrp	x10, 436000 <__progname@@GLIBC_2.17+0xab98>
  40aec8:	ldr	x21, [sp, #16]
  40aecc:	str	x9, [x8, #16]
  40aed0:	ldr	w9, [x10, #3520]
  40aed4:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40aed8:	str	w9, [x8, #24]
  40aedc:	mov	w9, #0x1                   	// #1
  40aee0:	strb	w9, [x10, #2352]
  40aee4:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40aee8:	str	x19, [x8, #32]
  40aeec:	ldr	x10, [x9, #2360]
  40aef0:	str	x10, [x8]
  40aef4:	ldp	x20, x19, [sp, #32]
  40aef8:	str	x8, [x9, #2360]
  40aefc:	ldp	x29, x30, [sp], #48
  40af00:	ret
  40af04:	stp	x29, x30, [sp, #-48]!
  40af08:	str	x21, [sp, #16]
  40af0c:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40af10:	ldr	x8, [x21, #2248]
  40af14:	stp	x20, x19, [sp, #32]
  40af18:	mov	x29, sp
  40af1c:	cbnz	x8, 40afd0 <ferror@plt+0x83d0>
  40af20:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40af24:	ldr	x19, [x20, #2256]
  40af28:	ldp	x9, x8, [x19, #24]
  40af2c:	sub	x8, x8, x9
  40af30:	cmp	x8, #0x2f
  40af34:	b.hi	40af48 <ferror@plt+0x8348>  // b.pmore
  40af38:	mov	w1, #0x30                  	// #48
  40af3c:	mov	x0, x19
  40af40:	bl	4159e4 <_obstack_newchunk@@Base>
  40af44:	ldr	x9, [x19, #24]
  40af48:	ldr	x8, [x19, #16]
  40af4c:	add	x9, x9, #0x30
  40af50:	str	x9, [x19, #24]
  40af54:	cmp	x9, x8
  40af58:	b.ne	40af68 <ferror@plt+0x8368>  // b.any
  40af5c:	ldrb	w10, [x19, #80]
  40af60:	orr	w10, w10, #0x2
  40af64:	strb	w10, [x19, #80]
  40af68:	ldr	x11, [x19, #48]
  40af6c:	ldr	x12, [x19, #8]
  40af70:	ldr	x10, [x19, #32]
  40af74:	add	x9, x11, x9
  40af78:	bic	x9, x9, x11
  40af7c:	sub	x11, x9, x12
  40af80:	sub	x12, x10, x12
  40af84:	cmp	x11, x12
  40af88:	str	x9, [x19, #24]
  40af8c:	b.ls	40af98 <ferror@plt+0x8398>  // b.plast
  40af90:	mov	x9, x10
  40af94:	str	x10, [x19, #24]
  40af98:	str	x9, [x19, #16]
  40af9c:	str	x8, [x21, #2248]
  40afa0:	str	wzr, [x8, #8]
  40afa4:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  40afa8:	ldr	x9, [x9, #3544]
  40afac:	ldr	x21, [sp, #16]
  40afb0:	str	x9, [x8, #16]
  40afb4:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  40afb8:	ldr	w9, [x9, #3520]
  40afbc:	str	w9, [x8, #24]
  40afc0:	ldr	x0, [x20, #2256]
  40afc4:	ldp	x20, x19, [sp, #32]
  40afc8:	ldp	x29, x30, [sp], #48
  40afcc:	ret
  40afd0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40afd4:	ldr	w0, [x8, #1240]
  40afd8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40afdc:	add	x2, x2, #0x857
  40afe0:	mov	w1, wzr
  40afe4:	bl	402d0c <ferror@plt+0x10c>
  40afe8:	bl	402920 <abort@plt>
  40afec:	stp	x29, x30, [sp, #-48]!
  40aff0:	stp	x20, x19, [sp, #32]
  40aff4:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40aff8:	ldr	x1, [x20, #2248]
  40affc:	stp	x22, x21, [sp, #16]
  40b000:	mov	x29, sp
  40b004:	cbz	x1, 40b0c0 <ferror@plt+0x84c0>
  40b008:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b00c:	ldr	x19, [x22, #2256]
  40b010:	ldp	x9, x8, [x19, #16]
  40b014:	subs	x21, x8, x9
  40b018:	b.eq	40b0c8 <ferror@plt+0x84c8>  // b.none
  40b01c:	ldr	x9, [x19, #32]
  40b020:	cmp	x9, x8
  40b024:	b.ne	40b038 <ferror@plt+0x8438>  // b.any
  40b028:	mov	w1, #0x1                   	// #1
  40b02c:	mov	x0, x19
  40b030:	bl	4159e4 <_obstack_newchunk@@Base>
  40b034:	ldr	x8, [x19, #24]
  40b038:	add	x9, x8, #0x1
  40b03c:	str	x9, [x19, #24]
  40b040:	strb	wzr, [x8]
  40b044:	ldr	x8, [x22, #2256]
  40b048:	ldp	x0, x9, [x8, #16]
  40b04c:	cmp	x9, x0
  40b050:	b.ne	40b060 <ferror@plt+0x8460>  // b.any
  40b054:	ldrb	w10, [x8, #80]
  40b058:	orr	w10, w10, #0x2
  40b05c:	strb	w10, [x8, #80]
  40b060:	ldr	x11, [x8, #48]
  40b064:	ldr	x12, [x8, #8]
  40b068:	ldr	x10, [x8, #32]
  40b06c:	add	x9, x11, x9
  40b070:	bic	x9, x9, x11
  40b074:	sub	x11, x9, x12
  40b078:	sub	x12, x10, x12
  40b07c:	cmp	x11, x12
  40b080:	str	x9, [x8, #24]
  40b084:	b.ls	40b090 <ferror@plt+0x8490>  // b.plast
  40b088:	mov	x9, x10
  40b08c:	str	x10, [x8, #24]
  40b090:	str	x9, [x8, #16]
  40b094:	ldr	x8, [x20, #2248]
  40b098:	add	x9, x0, x21
  40b09c:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b0a0:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b0a4:	stp	x0, x9, [x8, #32]
  40b0a8:	ldr	x9, [x10, #2360]
  40b0ac:	mov	w12, #0x1                   	// #1
  40b0b0:	str	x9, [x8]
  40b0b4:	str	x8, [x10, #2360]
  40b0b8:	strb	w12, [x11, #2352]
  40b0bc:	b	40b0f8 <ferror@plt+0x84f8>
  40b0c0:	mov	x0, xzr
  40b0c4:	b	40b0fc <ferror@plt+0x84fc>
  40b0c8:	ldr	x8, [x19, #8]
  40b0cc:	cmp	x8, x1
  40b0d0:	b.cs	40b0ec <ferror@plt+0x84ec>  // b.hs, b.nlast
  40b0d4:	ldr	x8, [x19, #32]
  40b0d8:	cmp	x8, x1
  40b0dc:	b.ls	40b0ec <ferror@plt+0x84ec>  // b.plast
  40b0e0:	mov	x0, xzr
  40b0e4:	stp	x1, x1, [x19, #16]
  40b0e8:	b	40b0f8 <ferror@plt+0x84f8>
  40b0ec:	mov	x0, x19
  40b0f0:	bl	415b5c <_obstack_free@@Base>
  40b0f4:	mov	x0, xzr
  40b0f8:	str	xzr, [x20, #2248]
  40b0fc:	ldp	x20, x19, [sp, #32]
  40b100:	ldp	x22, x21, [sp, #16]
  40b104:	ldp	x29, x30, [sp], #48
  40b108:	ret
  40b10c:	stp	x29, x30, [sp, #-64]!
  40b110:	stp	x24, x23, [sp, #16]
  40b114:	stp	x22, x21, [sp, #32]
  40b118:	stp	x20, x19, [sp, #48]
  40b11c:	mov	x29, sp
  40b120:	mov	x20, x0
  40b124:	bl	402580 <strlen@plt>
  40b128:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b12c:	ldr	x21, [x24, #2368]
  40b130:	mov	x19, x0
  40b134:	ldp	x8, x9, [x21, #24]
  40b138:	sub	x9, x9, x8
  40b13c:	cmp	x9, #0x2f
  40b140:	b.hi	40b154 <ferror@plt+0x8554>  // b.pmore
  40b144:	mov	w1, #0x30                  	// #48
  40b148:	mov	x0, x21
  40b14c:	bl	4159e4 <_obstack_newchunk@@Base>
  40b150:	ldr	x8, [x21, #24]
  40b154:	ldr	x22, [x21, #16]
  40b158:	add	x8, x8, #0x30
  40b15c:	str	x8, [x21, #24]
  40b160:	cmp	x8, x22
  40b164:	b.ne	40b174 <ferror@plt+0x8574>  // b.any
  40b168:	ldrb	w9, [x21, #80]
  40b16c:	orr	w9, w9, #0x2
  40b170:	strb	w9, [x21, #80]
  40b174:	ldr	x10, [x21, #48]
  40b178:	ldr	x11, [x21, #8]
  40b17c:	ldr	x9, [x21, #32]
  40b180:	add	x8, x10, x8
  40b184:	bic	x8, x8, x10
  40b188:	sub	x10, x8, x11
  40b18c:	sub	x11, x9, x11
  40b190:	cmp	x10, x11
  40b194:	str	x8, [x21, #24]
  40b198:	b.ls	40b1a4 <ferror@plt+0x85a4>  // b.plast
  40b19c:	mov	x8, x9
  40b1a0:	str	x9, [x21, #24]
  40b1a4:	str	x8, [x21, #16]
  40b1a8:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b1ac:	ldr	x8, [x23, #2376]
  40b1b0:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b1b4:	str	wzr, [x22, #8]
  40b1b8:	add	x1, x19, #0x1
  40b1bc:	str	x8, [x22]
  40b1c0:	ldr	x8, [x9, #3544]
  40b1c4:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b1c8:	str	x8, [x22, #16]
  40b1cc:	ldr	w8, [x9, #3520]
  40b1d0:	str	w8, [x22, #24]
  40b1d4:	ldr	x21, [x24, #2368]
  40b1d8:	ldp	x0, x8, [x21, #24]
  40b1dc:	sub	x8, x8, x0
  40b1e0:	cmp	x8, x1
  40b1e4:	b.cs	40b1f4 <ferror@plt+0x85f4>  // b.hs, b.nlast
  40b1e8:	mov	x0, x21
  40b1ec:	bl	4159e4 <_obstack_newchunk@@Base>
  40b1f0:	ldr	x0, [x21, #24]
  40b1f4:	mov	x1, x20
  40b1f8:	mov	x2, x19
  40b1fc:	bl	402550 <memcpy@plt>
  40b200:	ldr	x8, [x21, #24]
  40b204:	add	x8, x8, x19
  40b208:	add	x9, x8, #0x1
  40b20c:	str	x9, [x21, #24]
  40b210:	strb	wzr, [x8]
  40b214:	ldp	x8, x9, [x21, #16]
  40b218:	cmp	x9, x8
  40b21c:	b.ne	40b22c <ferror@plt+0x862c>  // b.any
  40b220:	ldrb	w10, [x21, #80]
  40b224:	orr	w10, w10, #0x2
  40b228:	strb	w10, [x21, #80]
  40b22c:	ldr	x11, [x21, #48]
  40b230:	ldr	x12, [x21, #8]
  40b234:	ldr	x10, [x21, #32]
  40b238:	add	x9, x11, x9
  40b23c:	bic	x9, x9, x11
  40b240:	sub	x11, x9, x12
  40b244:	sub	x12, x10, x12
  40b248:	cmp	x11, x12
  40b24c:	str	x9, [x21, #24]
  40b250:	b.ls	40b25c <ferror@plt+0x865c>  // b.plast
  40b254:	mov	x9, x10
  40b258:	str	x10, [x21, #24]
  40b25c:	str	x9, [x21, #16]
  40b260:	add	x9, x8, x19
  40b264:	stp	x8, x9, [x22, #32]
  40b268:	str	x22, [x23, #2376]
  40b26c:	ldp	x20, x19, [sp, #48]
  40b270:	ldp	x22, x21, [sp, #32]
  40b274:	ldp	x24, x23, [sp, #16]
  40b278:	ldp	x29, x30, [sp], #64
  40b27c:	ret
  40b280:	stp	x29, x30, [sp, #-48]!
  40b284:	stp	x20, x19, [sp, #32]
  40b288:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b28c:	ldr	x0, [x20, #2256]
  40b290:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b294:	mov	x1, xzr
  40b298:	str	x21, [sp, #16]
  40b29c:	mov	x29, sp
  40b2a0:	str	xzr, [x8, #2248]
  40b2a4:	bl	415b5c <_obstack_free@@Base>
  40b2a8:	ldr	x0, [x20, #2256]
  40b2ac:	bl	4029f0 <free@plt>
  40b2b0:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b2b4:	ldr	x8, [x19, #2376]
  40b2b8:	cbz	x8, 40b310 <ferror@plt+0x8710>
  40b2bc:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b2c0:	ldr	x8, [x21, #2368]
  40b2c4:	mov	w0, #0x58                  	// #88
  40b2c8:	str	x8, [x20, #2256]
  40b2cc:	bl	414de0 <ferror@plt+0x121e0>
  40b2d0:	adrp	x3, 414000 <ferror@plt+0x11400>
  40b2d4:	adrp	x4, 402000 <mbrtowc@plt-0x540>
  40b2d8:	add	x3, x3, #0xde0
  40b2dc:	add	x4, x4, #0x9f0
  40b2e0:	mov	x1, xzr
  40b2e4:	mov	x2, xzr
  40b2e8:	str	x0, [x21, #2368]
  40b2ec:	bl	4158dc <_obstack_begin@@Base>
  40b2f0:	ldr	x8, [x19, #2376]
  40b2f4:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b2f8:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b2fc:	mov	w0, #0x1                   	// #1
  40b300:	str	xzr, [x19, #2376]
  40b304:	str	x8, [x9, #2360]
  40b308:	strb	w0, [x10, #2352]
  40b30c:	b	40b34c <ferror@plt+0x874c>
  40b310:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b314:	add	x0, x0, #0x950
  40b318:	mov	x1, xzr
  40b31c:	bl	415b5c <_obstack_free@@Base>
  40b320:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b324:	add	x0, x0, #0x8d8
  40b328:	mov	x1, xzr
  40b32c:	bl	415b5c <_obstack_free@@Base>
  40b330:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b334:	ldr	x0, [x19, #2368]
  40b338:	mov	x1, xzr
  40b33c:	bl	415b5c <_obstack_free@@Base>
  40b340:	ldr	x0, [x19, #2368]
  40b344:	bl	4029f0 <free@plt>
  40b348:	mov	w0, wzr
  40b34c:	ldp	x20, x19, [sp, #32]
  40b350:	ldr	x21, [sp, #16]
  40b354:	ldp	x29, x30, [sp], #48
  40b358:	ret
  40b35c:	stp	x29, x30, [sp, #-64]!
  40b360:	stp	x24, x23, [sp, #16]
  40b364:	stp	x22, x21, [sp, #32]
  40b368:	adrp	x23, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b36c:	adrp	x22, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b370:	stp	x20, x19, [sp, #48]
  40b374:	ldr	x20, [x23, #3544]
  40b378:	ldr	w19, [x22, #3520]
  40b37c:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b380:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b384:	mov	x29, sp
  40b388:	ldr	x8, [x24, #2360]
  40b38c:	cbz	x8, 40b398 <ferror@plt+0x8798>
  40b390:	ldr	w9, [x8, #8]
  40b394:	cbz	w9, 40b3b0 <ferror@plt+0x87b0>
  40b398:	bl	40b428 <ferror@plt+0x8828>
  40b39c:	cmp	w0, #0xa
  40b3a0:	b.eq	40b3f4 <ferror@plt+0x87f4>  // b.none
  40b3a4:	cmp	w0, #0x100
  40b3a8:	b.ne	40b388 <ferror@plt+0x8788>  // b.any
  40b3ac:	b	40b3d4 <ferror@plt+0x87d4>
  40b3b0:	ldr	x9, [x8, #32]
  40b3b4:	ldrb	w10, [x9]
  40b3b8:	cbz	w10, 40b398 <ferror@plt+0x8798>
  40b3bc:	ldrb	w10, [x21, #2352]
  40b3c0:	tbnz	w10, #0, 40b398 <ferror@plt+0x8798>
  40b3c4:	add	x10, x9, #0x1
  40b3c8:	str	x10, [x8, #32]
  40b3cc:	ldrb	w0, [x9]
  40b3d0:	b	40b39c <ferror@plt+0x879c>
  40b3d4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b3d8:	ldr	w0, [x8, #1240]
  40b3dc:	adrp	x4, 418000 <_obstack_memory_used@@Base+0x240c>
  40b3e0:	add	x4, x4, #0x87e
  40b3e4:	mov	w1, wzr
  40b3e8:	mov	x2, x20
  40b3ec:	mov	w3, w19
  40b3f0:	bl	402db8 <ferror@plt+0x1b8>
  40b3f4:	ldr	x8, [x23, #3544]
  40b3f8:	cmp	x20, x8
  40b3fc:	b.ne	40b40c <ferror@plt+0x880c>  // b.any
  40b400:	ldr	w8, [x22, #3520]
  40b404:	cmp	w19, w8
  40b408:	b.eq	40b414 <ferror@plt+0x8814>  // b.none
  40b40c:	mov	w8, #0x1                   	// #1
  40b410:	strb	w8, [x21, #2352]
  40b414:	ldp	x20, x19, [sp, #48]
  40b418:	ldp	x22, x21, [sp, #32]
  40b41c:	ldp	x24, x23, [sp, #16]
  40b420:	ldp	x29, x30, [sp], #64
  40b424:	ret
  40b428:	stp	x29, x30, [sp, #-64]!
  40b42c:	stp	x20, x19, [sp, #48]
  40b430:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b434:	ldr	x8, [x19, #2360]
  40b438:	str	x23, [sp, #16]
  40b43c:	stp	x22, x21, [sp, #32]
  40b440:	mov	x29, sp
  40b444:	cbz	x8, 40b4e8 <ferror@plt+0x88e8>
  40b448:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b44c:	adrp	x22, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b450:	adrp	x23, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b454:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b458:	ldrb	w9, [x21, #2352]
  40b45c:	cmp	w9, #0x1
  40b460:	b.ne	40b478 <ferror@plt+0x8878>  // b.any
  40b464:	ldr	x9, [x8, #16]
  40b468:	str	x9, [x22, #3544]
  40b46c:	ldr	w9, [x8, #24]
  40b470:	strb	wzr, [x21, #2352]
  40b474:	str	w9, [x23, #3520]
  40b478:	ldr	w9, [x8, #8]
  40b47c:	cmp	w9, #0x2
  40b480:	b.eq	40b508 <ferror@plt+0x8908>  // b.none
  40b484:	cmp	w9, #0x1
  40b488:	b.eq	40b4a8 <ferror@plt+0x88a8>  // b.none
  40b48c:	cbnz	w9, 40b538 <ferror@plt+0x8938>
  40b490:	ldr	x9, [x8, #32]
  40b494:	add	x10, x9, #0x1
  40b498:	str	x10, [x8, #32]
  40b49c:	ldrb	w0, [x9]
  40b4a0:	cbz	w0, 40b4dc <ferror@plt+0x88dc>
  40b4a4:	b	40b510 <ferror@plt+0x8910>
  40b4a8:	ldrb	w9, [x20, #2356]
  40b4ac:	cbz	w9, 40b4c4 <ferror@plt+0x88c4>
  40b4b0:	strb	wzr, [x20, #2356]
  40b4b4:	ldr	w9, [x8, #24]
  40b4b8:	add	w9, w9, #0x1
  40b4bc:	str	w9, [x8, #24]
  40b4c0:	str	w9, [x23, #3520]
  40b4c4:	ldrb	w9, [x8, #40]
  40b4c8:	tbnz	w9, #0, 40b4dc <ferror@plt+0x88dc>
  40b4cc:	ldr	x0, [x8, #32]
  40b4d0:	bl	402880 <getc@plt>
  40b4d4:	cmn	w0, #0x1
  40b4d8:	b.ne	40b524 <ferror@plt+0x8924>  // b.any
  40b4dc:	bl	40c4f0 <ferror@plt+0x98f0>
  40b4e0:	ldr	x8, [x19, #2360]
  40b4e4:	cbnz	x8, 40b458 <ferror@plt+0x8858>
  40b4e8:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x140c>
  40b4ec:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b4f0:	add	x9, x9, #0xe97
  40b4f4:	adrp	x10, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b4f8:	str	x9, [x8, #3544]
  40b4fc:	str	wzr, [x10, #3520]
  40b500:	mov	w0, #0x100                 	// #256
  40b504:	b	40b510 <ferror@plt+0x8910>
  40b508:	bl	40c4f0 <ferror@plt+0x98f0>
  40b50c:	mov	w0, #0x101                 	// #257
  40b510:	ldp	x20, x19, [sp, #48]
  40b514:	ldp	x22, x21, [sp, #32]
  40b518:	ldr	x23, [sp, #16]
  40b51c:	ldp	x29, x30, [sp], #64
  40b520:	ret
  40b524:	cmp	w0, #0xa
  40b528:	b.ne	40b510 <ferror@plt+0x8910>  // b.any
  40b52c:	mov	w8, #0x1                   	// #1
  40b530:	strb	w8, [x20, #2356]
  40b534:	b	40b510 <ferror@plt+0x8910>
  40b538:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b53c:	ldr	w0, [x8, #1240]
  40b540:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40b544:	add	x2, x2, #0x921
  40b548:	mov	w1, wzr
  40b54c:	bl	402d0c <ferror@plt+0x10c>
  40b550:	bl	402920 <abort@plt>
  40b554:	stp	x29, x30, [sp, #-48]!
  40b558:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x140c>
  40b55c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b560:	add	x9, x9, #0xe97
  40b564:	adrp	x10, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b568:	mov	w0, #0x58                  	// #88
  40b56c:	str	x21, [sp, #16]
  40b570:	stp	x20, x19, [sp, #32]
  40b574:	mov	x29, sp
  40b578:	str	x9, [x8, #3544]
  40b57c:	str	wzr, [x10, #3520]
  40b580:	bl	414de0 <ferror@plt+0x121e0>
  40b584:	adrp	x20, 414000 <ferror@plt+0x11400>
  40b588:	adrp	x21, 402000 <mbrtowc@plt-0x540>
  40b58c:	add	x20, x20, #0xde0
  40b590:	add	x21, x21, #0x9f0
  40b594:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b598:	mov	x1, xzr
  40b59c:	mov	x2, xzr
  40b5a0:	mov	x3, x20
  40b5a4:	mov	x4, x21
  40b5a8:	str	x0, [x8, #2256]
  40b5ac:	bl	4158dc <_obstack_begin@@Base>
  40b5b0:	mov	w0, #0x58                  	// #88
  40b5b4:	bl	414de0 <ferror@plt+0x121e0>
  40b5b8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b5bc:	mov	x1, xzr
  40b5c0:	mov	x2, xzr
  40b5c4:	mov	x3, x20
  40b5c8:	mov	x4, x21
  40b5cc:	str	x0, [x8, #2368]
  40b5d0:	bl	4158dc <_obstack_begin@@Base>
  40b5d4:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b5d8:	add	x0, x0, #0x8d8
  40b5dc:	mov	x1, xzr
  40b5e0:	mov	x2, xzr
  40b5e4:	mov	x3, x20
  40b5e8:	mov	x4, x21
  40b5ec:	bl	4158dc <_obstack_begin@@Base>
  40b5f0:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b5f4:	add	x19, x19, #0x950
  40b5f8:	mov	x0, x19
  40b5fc:	mov	x1, xzr
  40b600:	mov	x2, xzr
  40b604:	mov	x3, x20
  40b608:	mov	x4, x21
  40b60c:	bl	4158dc <_obstack_begin@@Base>
  40b610:	ldp	x8, x9, [x19, #24]
  40b614:	cmp	x9, x8
  40b618:	b.ne	40b62c <ferror@plt+0x8a2c>  // b.any
  40b61c:	mov	w1, #0x1                   	// #1
  40b620:	mov	x0, x19
  40b624:	bl	4159e4 <_obstack_newchunk@@Base>
  40b628:	ldr	x8, [x19, #24]
  40b62c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b630:	add	x9, x9, #0x960
  40b634:	ldr	x10, [x9]
  40b638:	add	x8, x8, #0x1
  40b63c:	str	x8, [x9, #8]
  40b640:	cmp	x8, x10
  40b644:	b.ne	40b658 <ferror@plt+0x8a58>  // b.any
  40b648:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b64c:	ldrb	w10, [x9, #2464]
  40b650:	orr	w10, w10, #0x2
  40b654:	strb	w10, [x9, #2464]
  40b658:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b65c:	add	x9, x9, #0x958
  40b660:	ldr	x10, [x9, #40]
  40b664:	ldr	x11, [x9]
  40b668:	ldr	x12, [x9, #24]
  40b66c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40b670:	add	x8, x10, x8
  40b674:	bic	x8, x8, x10
  40b678:	sub	x10, x12, x11
  40b67c:	sub	x11, x8, x11
  40b680:	cmp	x11, x10
  40b684:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b688:	str	xzr, [x11, #2360]
  40b68c:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b690:	str	xzr, [x11, #2376]
  40b694:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b698:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b69c:	str	xzr, [x11, #2248]
  40b6a0:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b6a4:	csel	x8, x12, x8, hi  // hi = pmore
  40b6a8:	add	x0, x0, #0x642
  40b6ac:	stp	x8, x8, [x9, #8]
  40b6b0:	str	x8, [x10, #2472]
  40b6b4:	strb	wzr, [x11, #2356]
  40b6b8:	bl	415068 <ferror@plt+0x12468>
  40b6bc:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b6c0:	add	x19, x19, #0xdc8
  40b6c4:	str	x0, [x19]
  40b6c8:	bl	402580 <strlen@plt>
  40b6cc:	str	x0, [x19, #8]
  40b6d0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  40b6d4:	add	x0, x0, #0xfe2
  40b6d8:	bl	415068 <ferror@plt+0x12468>
  40b6dc:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b6e0:	add	x19, x19, #0xe00
  40b6e4:	str	x0, [x19]
  40b6e8:	bl	402580 <strlen@plt>
  40b6ec:	str	x0, [x19, #8]
  40b6f0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40b6f4:	add	x0, x0, #0x64c
  40b6f8:	bl	415068 <ferror@plt+0x12468>
  40b6fc:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b700:	add	x19, x19, #0xde0
  40b704:	str	x0, [x19]
  40b708:	bl	402580 <strlen@plt>
  40b70c:	str	x0, [x19, #8]
  40b710:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x340c>
  40b714:	add	x0, x0, #0xac1
  40b718:	bl	415068 <ferror@plt+0x12468>
  40b71c:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b720:	add	x19, x19, #0xdf0
  40b724:	str	x0, [x19]
  40b728:	bl	402580 <strlen@plt>
  40b72c:	str	x0, [x19, #8]
  40b730:	ldp	x20, x19, [sp, #32]
  40b734:	ldr	x21, [sp, #16]
  40b738:	ldp	x29, x30, [sp], #48
  40b73c:	ret
  40b740:	stp	x29, x30, [sp, #-32]!
  40b744:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b748:	ldr	x8, [x8, #3528]
  40b74c:	stp	x20, x19, [sp, #16]
  40b750:	mov	x20, x0
  40b754:	mov	x29, sp
  40b758:	mov	x0, x8
  40b75c:	mov	x19, x1
  40b760:	bl	4029f0 <free@plt>
  40b764:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b768:	ldr	x0, [x8, #3584]
  40b76c:	bl	4029f0 <free@plt>
  40b770:	cbz	x20, 40b794 <ferror@plt+0x8b94>
  40b774:	cbz	x19, 40b788 <ferror@plt+0x8b88>
  40b778:	ldrb	w8, [x20]
  40b77c:	cbz	w8, 40b7a4 <ferror@plt+0x8ba4>
  40b780:	ldrb	w8, [x19]
  40b784:	cbnz	w8, 40b7a4 <ferror@plt+0x8ba4>
  40b788:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x140c>
  40b78c:	add	x19, x19, #0xfe2
  40b790:	b	40b7a4 <ferror@plt+0x8ba4>
  40b794:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x140c>
  40b798:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x240c>
  40b79c:	add	x19, x19, #0xfe2
  40b7a0:	add	x20, x20, #0x642
  40b7a4:	mov	x0, x20
  40b7a8:	bl	415068 <ferror@plt+0x12468>
  40b7ac:	adrp	x20, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b7b0:	add	x20, x20, #0xdc8
  40b7b4:	str	x0, [x20]
  40b7b8:	bl	402580 <strlen@plt>
  40b7bc:	str	x0, [x20, #8]
  40b7c0:	mov	x0, x19
  40b7c4:	bl	415068 <ferror@plt+0x12468>
  40b7c8:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b7cc:	add	x19, x19, #0xe00
  40b7d0:	str	x0, [x19]
  40b7d4:	bl	402580 <strlen@plt>
  40b7d8:	str	x0, [x19, #8]
  40b7dc:	ldp	x20, x19, [sp, #16]
  40b7e0:	ldp	x29, x30, [sp], #32
  40b7e4:	ret
  40b7e8:	stp	x29, x30, [sp, #-32]!
  40b7ec:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b7f0:	ldr	x8, [x8, #3552]
  40b7f4:	stp	x20, x19, [sp, #16]
  40b7f8:	mov	x20, x0
  40b7fc:	mov	x29, sp
  40b800:	mov	x0, x8
  40b804:	mov	x19, x1
  40b808:	bl	4029f0 <free@plt>
  40b80c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b810:	ldr	x0, [x8, #3568]
  40b814:	bl	4029f0 <free@plt>
  40b818:	cbz	x20, 40b83c <ferror@plt+0x8c3c>
  40b81c:	cbz	x19, 40b830 <ferror@plt+0x8c30>
  40b820:	ldrb	w8, [x20]
  40b824:	cbz	w8, 40b848 <ferror@plt+0x8c48>
  40b828:	ldrb	w8, [x19]
  40b82c:	cbnz	w8, 40b848 <ferror@plt+0x8c48>
  40b830:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x340c>
  40b834:	add	x19, x19, #0xac1
  40b838:	b	40b848 <ferror@plt+0x8c48>
  40b83c:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x140c>
  40b840:	add	x20, x20, #0xe97
  40b844:	mov	x19, x20
  40b848:	mov	x0, x20
  40b84c:	bl	415068 <ferror@plt+0x12468>
  40b850:	adrp	x20, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b854:	add	x20, x20, #0xde0
  40b858:	str	x0, [x20]
  40b85c:	bl	402580 <strlen@plt>
  40b860:	str	x0, [x20, #8]
  40b864:	mov	x0, x19
  40b868:	bl	415068 <ferror@plt+0x12468>
  40b86c:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b870:	add	x19, x19, #0xdf0
  40b874:	str	x0, [x19]
  40b878:	bl	402580 <strlen@plt>
  40b87c:	str	x0, [x19, #8]
  40b880:	ldp	x20, x19, [sp, #16]
  40b884:	ldp	x29, x30, [sp], #32
  40b888:	ret
  40b88c:	sub	sp, sp, #0x90
  40b890:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b894:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b898:	add	x9, x9, #0x958
  40b89c:	stp	x20, x19, [sp, #128]
  40b8a0:	mov	x20, x1
  40b8a4:	ldr	x1, [x8, #2472]
  40b8a8:	ldr	x8, [x9]
  40b8ac:	stp	x24, x23, [sp, #96]
  40b8b0:	mov	x23, x0
  40b8b4:	stp	x29, x30, [sp, #48]
  40b8b8:	cmp	x1, x8
  40b8bc:	stp	x28, x27, [sp, #64]
  40b8c0:	stp	x26, x25, [sp, #80]
  40b8c4:	stp	x22, x21, [sp, #112]
  40b8c8:	add	x29, sp, #0x30
  40b8cc:	b.ls	40b8ec <ferror@plt+0x8cec>  // b.plast
  40b8d0:	ldr	x8, [x9, #24]
  40b8d4:	cmp	x1, x8
  40b8d8:	b.cs	40b8ec <ferror@plt+0x8cec>  // b.hs, b.nlast
  40b8dc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b8e0:	add	x8, x8, #0x960
  40b8e4:	stp	x1, x1, [x8]
  40b8e8:	b	40b8f8 <ferror@plt+0x8cf8>
  40b8ec:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b8f0:	add	x0, x0, #0x950
  40b8f4:	bl	415b5c <_obstack_free@@Base>
  40b8f8:	cmp	x20, #0x0
  40b8fc:	sub	x8, x29, #0x4
  40b900:	csel	x24, x8, x20, eq  // eq = none
  40b904:	bl	40c1cc <ferror@plt+0x95cc>
  40b908:	cmp	w0, #0x101
  40b90c:	adrp	x26, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b910:	b.eq	40b93c <ferror@plt+0x8d3c>  // b.none
  40b914:	mov	w21, w0
  40b918:	cmp	w0, #0x100
  40b91c:	b.ne	40b970 <ferror@plt+0x8d70>  // b.any
  40b920:	ldr	x8, [x26, #2360]
  40b924:	cbz	x8, 40b930 <ferror@plt+0x8d30>
  40b928:	ldr	w9, [x8, #8]
  40b92c:	cbz	w9, 40be88 <ferror@plt+0x9288>
  40b930:	bl	40b428 <ferror@plt+0x8828>
  40b934:	mov	w22, wzr
  40b938:	b	40c16c <ferror@plt+0x956c>
  40b93c:	ldr	x8, [x26, #2360]
  40b940:	ldr	w9, [x8, #8]
  40b944:	cmp	w9, #0x2
  40b948:	b.ne	40c190 <ferror@plt+0x9590>  // b.any
  40b94c:	str	w9, [x23]
  40b950:	ldr	x9, [x8, #32]
  40b954:	str	x9, [x23, #8]
  40b958:	cbz	x8, 40b964 <ferror@plt+0x8d64>
  40b95c:	ldr	w9, [x8, #8]
  40b960:	cbz	w9, 40beb0 <ferror@plt+0x92b0>
  40b964:	bl	40b428 <ferror@plt+0x8828>
  40b968:	mov	w22, #0x7                   	// #7
  40b96c:	b	40c16c <ferror@plt+0x956c>
  40b970:	ldr	x8, [x26, #2360]
  40b974:	cbz	x8, 40b980 <ferror@plt+0x8d80>
  40b978:	ldr	w9, [x8, #8]
  40b97c:	cbz	w9, 40bed4 <ferror@plt+0x92d4>
  40b980:	bl	40b428 <ferror@plt+0x8828>
  40b984:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b988:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b98c:	ldr	w8, [x8, #3520]
  40b990:	ldr	x27, [x9, #3544]
  40b994:	adrp	x28, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b998:	add	x28, x28, #0x968
  40b99c:	str	w8, [x24]
  40b9a0:	cbz	w21, 40bac8 <ferror@plt+0x8ec8>
  40b9a4:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b9a8:	ldr	x0, [x19, #3552]
  40b9ac:	ldrb	w8, [x0]
  40b9b0:	cmp	w21, w8
  40b9b4:	b.ne	40bac8 <ferror@plt+0x8ec8>  // b.any
  40b9b8:	ldrb	w8, [x0, #1]!
  40b9bc:	cbz	w8, 40b9cc <ferror@plt+0x8dcc>
  40b9c0:	mov	w1, #0x1                   	// #1
  40b9c4:	bl	40c278 <ferror@plt+0x9678>
  40b9c8:	tbz	w0, #0, 40bac8 <ferror@plt+0x8ec8>
  40b9cc:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40b9d0:	ldp	x0, x9, [x28]
  40b9d4:	ldr	x22, [x8, #3560]
  40b9d8:	mov	x25, x23
  40b9dc:	sub	x8, x9, x0
  40b9e0:	cmp	x8, x22
  40b9e4:	b.cs	40ba00 <ferror@plt+0x8e00>  // b.hs, b.nlast
  40b9e8:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40b9ec:	add	x21, x21, #0x950
  40b9f0:	mov	x0, x21
  40b9f4:	mov	x1, x22
  40b9f8:	bl	4159e4 <_obstack_newchunk@@Base>
  40b9fc:	ldr	x0, [x21, #24]
  40ba00:	ldr	x1, [x19, #3552]
  40ba04:	mov	x2, x22
  40ba08:	bl	402550 <memcpy@plt>
  40ba0c:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ba10:	ldr	x8, [x19, #2408]
  40ba14:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ba18:	adrp	x23, 436000 <__progname@@GLIBC_2.17+0xab98>
  40ba1c:	add	x21, x21, #0x950
  40ba20:	add	x8, x8, x22
  40ba24:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ba28:	str	x8, [x19, #2408]
  40ba2c:	ldr	x8, [x26, #2360]
  40ba30:	cbz	x8, 40ba3c <ferror@plt+0x8e3c>
  40ba34:	ldr	w9, [x8, #8]
  40ba38:	cbz	w9, 40baa0 <ferror@plt+0x8ea0>
  40ba3c:	bl	40b428 <ferror@plt+0x8828>
  40ba40:	mov	w22, w0
  40ba44:	cmp	w0, #0x100
  40ba48:	b.eq	40bf5c <ferror@plt+0x935c>  // b.none
  40ba4c:	cbz	w22, 40ba74 <ferror@plt+0x8e74>
  40ba50:	ldr	x0, [x23, #3568]
  40ba54:	ldrb	w8, [x0]
  40ba58:	cmp	w22, w8
  40ba5c:	b.ne	40ba74 <ferror@plt+0x8e74>  // b.any
  40ba60:	ldrb	w8, [x0, #1]!
  40ba64:	cbz	w8, 40bf14 <ferror@plt+0x9314>
  40ba68:	mov	w1, #0x1                   	// #1
  40ba6c:	bl	40c278 <ferror@plt+0x9678>
  40ba70:	tbnz	w0, #0, 40bf14 <ferror@plt+0x9314>
  40ba74:	ldp	x8, x9, [x28]
  40ba78:	cmp	x9, x8
  40ba7c:	b.ne	40ba90 <ferror@plt+0x8e90>  // b.any
  40ba80:	mov	w1, #0x1                   	// #1
  40ba84:	mov	x0, x21
  40ba88:	bl	4159e4 <_obstack_newchunk@@Base>
  40ba8c:	ldr	x8, [x21, #24]
  40ba90:	add	x9, x8, #0x1
  40ba94:	str	x9, [x19, #2408]
  40ba98:	strb	w22, [x8]
  40ba9c:	b	40ba2c <ferror@plt+0x8e2c>
  40baa0:	ldr	x9, [x8, #32]
  40baa4:	ldrb	w10, [x9]
  40baa8:	cbz	w10, 40ba3c <ferror@plt+0x8e3c>
  40baac:	ldrb	w10, [x20, #2352]
  40bab0:	tbnz	w10, #0, 40ba3c <ferror@plt+0x8e3c>
  40bab4:	add	x10, x9, #0x1
  40bab8:	str	x10, [x8, #32]
  40babc:	ldrb	w22, [x9]
  40bac0:	cbnz	w22, 40ba50 <ferror@plt+0x8e50>
  40bac4:	b	40ba74 <ferror@plt+0x8e74>
  40bac8:	bl	4029a0 <__ctype_b_loc@plt>
  40bacc:	cmp	w21, #0x5f
  40bad0:	mov	x22, x0
  40bad4:	b.eq	40be3c <ferror@plt+0x923c>  // b.none
  40bad8:	ldr	x8, [x22]
  40badc:	ldrh	w8, [x8, w21, sxtw #1]
  40bae0:	tbnz	w8, #10, 40be3c <ferror@plt+0x923c>
  40bae4:	cbz	w21, 40bef8 <ferror@plt+0x92f8>
  40bae8:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40baec:	ldr	x0, [x8, #3528]
  40baf0:	ldrb	w8, [x0]
  40baf4:	cmp	w21, w8
  40baf8:	b.ne	40bef8 <ferror@plt+0x92f8>  // b.any
  40bafc:	ldrb	w8, [x0, #1]!
  40bb00:	cbz	w8, 40bb10 <ferror@plt+0x8f10>
  40bb04:	mov	w1, #0x1                   	// #1
  40bb08:	bl	40c278 <ferror@plt+0x9678>
  40bb0c:	tbz	w0, #0, 40bef8 <ferror@plt+0x92f8>
  40bb10:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40bb14:	adrp	x22, 436000 <__progname@@GLIBC_2.17+0xab98>
  40bb18:	ldr	x8, [x8, #3536]
  40bb1c:	ldr	x9, [x22, #3592]
  40bb20:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40bb24:	mov	w20, #0x1                   	// #1
  40bb28:	cmp	x8, #0x1
  40bb2c:	cset	w8, eq  // eq = none
  40bb30:	cmp	x9, #0x1
  40bb34:	cset	w9, eq  // eq = none
  40bb38:	and	w8, w8, w9
  40bb3c:	add	x25, x25, #0x950
  40bb40:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40bb44:	eor	w21, w8, #0x1
  40bb48:	str	x23, [sp, #8]
  40bb4c:	str	w8, [sp, #20]
  40bb50:	str	x24, [sp, #24]
  40bb54:	ldr	x8, [x26, #2360]
  40bb58:	cbz	x8, 40bb64 <ferror@plt+0x8f64>
  40bb5c:	ldr	w9, [x8, #8]
  40bb60:	cbz	w9, 40bbbc <ferror@plt+0x8fbc>
  40bb64:	bl	40b428 <ferror@plt+0x8828>
  40bb68:	mov	w23, w0
  40bb6c:	cmp	w0, #0x100
  40bb70:	b.ne	40bc64 <ferror@plt+0x9064>  // b.any
  40bb74:	ldr	w3, [x24]
  40bb78:	adrp	x4, 418000 <_obstack_memory_used@@Base+0x240c>
  40bb7c:	mov	w0, #0x1                   	// #1
  40bb80:	mov	w1, wzr
  40bb84:	mov	x2, x27
  40bb88:	add	x4, x4, #0x904
  40bb8c:	bl	402db8 <ferror@plt+0x1b8>
  40bb90:	ldp	x8, x9, [x28]
  40bb94:	cmp	x9, x8
  40bb98:	b.ne	40bbac <ferror@plt+0x8fac>  // b.any
  40bb9c:	mov	w1, #0x1                   	// #1
  40bba0:	mov	x0, x25
  40bba4:	bl	4159e4 <_obstack_newchunk@@Base>
  40bba8:	ldr	x8, [x25, #24]
  40bbac:	add	x9, x8, #0x1
  40bbb0:	str	x9, [x19, #2408]
  40bbb4:	strb	w23, [x8]
  40bbb8:	b	40bb54 <ferror@plt+0x8f54>
  40bbbc:	ldr	x23, [x8, #32]
  40bbc0:	cbz	x23, 40bc40 <ferror@plt+0x9040>
  40bbc4:	ldrb	w9, [x23]
  40bbc8:	cbz	w9, 40bc40 <ferror@plt+0x9040>
  40bbcc:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  40bbd0:	adrp	x10, 436000 <__progname@@GLIBC_2.17+0xab98>
  40bbd4:	ldr	x9, [x9, #3528]
  40bbd8:	ldr	x10, [x10, #3584]
  40bbdc:	ldr	x22, [x8, #40]
  40bbe0:	mov	x25, x27
  40bbe4:	mov	x19, x26
  40bbe8:	ldrb	w26, [x9]
  40bbec:	ldrb	w27, [x10]
  40bbf0:	sub	x8, x22, x23
  40bbf4:	mov	x24, x23
  40bbf8:	stur	x8, [x29, #-16]
  40bbfc:	sub	x3, x22, x24
  40bc00:	mov	x0, x24
  40bc04:	mov	w1, w26
  40bc08:	mov	w2, w27
  40bc0c:	bl	4126d8 <ferror@plt+0xfad8>
  40bc10:	cmp	x0, #0x0
  40bc14:	cset	w8, eq  // eq = none
  40bc18:	mov	x24, x0
  40bc1c:	orr	w8, w8, w21
  40bc20:	tbnz	w8, #0, 40bcc8 <ferror@plt+0x90c8>
  40bc24:	ldrb	w8, [x24], #1
  40bc28:	cmp	w8, w27
  40bc2c:	mov	w8, #0xffffffff            	// #-1
  40bc30:	cneg	w8, w8, ne  // ne = any
  40bc34:	adds	w20, w8, w20
  40bc38:	b.ne	40bbfc <ferror@plt+0x8ffc>  // b.any
  40bc3c:	b	40bccc <ferror@plt+0x90cc>
  40bc40:	ldr	x9, [x8, #32]
  40bc44:	ldrb	w10, [x9]
  40bc48:	cbz	w10, 40bb64 <ferror@plt+0x8f64>
  40bc4c:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40bc50:	ldrb	w10, [x10, #2352]
  40bc54:	tbnz	w10, #0, 40bb64 <ferror@plt+0x8f64>
  40bc58:	add	x10, x9, #0x1
  40bc5c:	str	x10, [x8, #32]
  40bc60:	ldrb	w23, [x9]
  40bc64:	cbz	w23, 40bd58 <ferror@plt+0x9158>
  40bc68:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40bc6c:	ldr	x0, [x8, #3584]
  40bc70:	ldrb	w8, [x0]
  40bc74:	cmp	w23, w8
  40bc78:	b.ne	40bd58 <ferror@plt+0x9158>  // b.any
  40bc7c:	ldrb	w8, [x0, #1]!
  40bc80:	cbz	w8, 40bc90 <ferror@plt+0x9090>
  40bc84:	mov	w1, #0x1                   	// #1
  40bc88:	bl	40c278 <ferror@plt+0x9678>
  40bc8c:	tbz	w0, #0, 40bd58 <ferror@plt+0x9158>
  40bc90:	subs	w20, w20, #0x1
  40bc94:	b.eq	40c0d4 <ferror@plt+0x94d4>  // b.none
  40bc98:	ldp	x0, x8, [x28]
  40bc9c:	ldr	x23, [x22, #3592]
  40bca0:	sub	x8, x8, x0
  40bca4:	cmp	x8, x23
  40bca8:	b.cs	40bcbc <ferror@plt+0x90bc>  // b.hs, b.nlast
  40bcac:	mov	x0, x25
  40bcb0:	mov	x1, x23
  40bcb4:	bl	4159e4 <_obstack_newchunk@@Base>
  40bcb8:	ldr	x0, [x25, #24]
  40bcbc:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40bcc0:	ldr	x1, [x8, #3584]
  40bcc4:	b	40bdb8 <ferror@plt+0x91b8>
  40bcc8:	cbz	x24, 40bdd0 <ferror@plt+0x91d0>
  40bccc:	ldr	w8, [sp, #20]
  40bcd0:	mov	x26, x19
  40bcd4:	mov	x27, x25
  40bcd8:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40bcdc:	cbnz	w8, 40c074 <ferror@plt+0x9474>
  40bce0:	ldp	x0, x8, [x28]
  40bce4:	sub	x25, x24, x23
  40bce8:	sub	x8, x8, x0
  40bcec:	cmp	x8, x25
  40bcf0:	b.cs	40bd14 <ferror@plt+0x9114>  // b.hs, b.nlast
  40bcf4:	mov	x22, x27
  40bcf8:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40bcfc:	add	x27, x27, #0x950
  40bd00:	mov	x0, x27
  40bd04:	mov	x1, x25
  40bd08:	bl	4159e4 <_obstack_newchunk@@Base>
  40bd0c:	ldr	x0, [x27, #24]
  40bd10:	mov	x27, x22
  40bd14:	mov	x1, x23
  40bd18:	mov	x2, x25
  40bd1c:	bl	402550 <memcpy@plt>
  40bd20:	ldr	x8, [x19, #2408]
  40bd24:	ldr	x9, [x26, #2360]
  40bd28:	adrp	x22, 436000 <__progname@@GLIBC_2.17+0xab98>
  40bd2c:	add	x8, x8, x25
  40bd30:	str	x8, [x19, #2408]
  40bd34:	ldr	x8, [x9, #32]
  40bd38:	ldrb	w23, [x24]
  40bd3c:	ldr	x24, [sp, #24]
  40bd40:	add	x8, x25, x8
  40bd44:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40bd48:	add	x8, x8, #0x1
  40bd4c:	add	x25, x25, #0x950
  40bd50:	str	x8, [x9, #32]
  40bd54:	cbnz	w23, 40bc68 <ferror@plt+0x9068>
  40bd58:	cbz	w23, 40bb90 <ferror@plt+0x8f90>
  40bd5c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40bd60:	ldr	x0, [x8, #3528]
  40bd64:	ldrb	w8, [x0]
  40bd68:	cmp	w23, w8
  40bd6c:	b.ne	40bb90 <ferror@plt+0x8f90>  // b.any
  40bd70:	ldrb	w8, [x0, #1]!
  40bd74:	cbz	w8, 40bd84 <ferror@plt+0x9184>
  40bd78:	mov	w1, #0x1                   	// #1
  40bd7c:	bl	40c278 <ferror@plt+0x9678>
  40bd80:	tbz	w0, #0, 40bb90 <ferror@plt+0x8f90>
  40bd84:	ldp	x0, x8, [x28]
  40bd88:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  40bd8c:	ldr	x23, [x9, #3536]
  40bd90:	add	w20, w20, #0x1
  40bd94:	sub	x8, x8, x0
  40bd98:	cmp	x8, x23
  40bd9c:	b.cs	40bdb0 <ferror@plt+0x91b0>  // b.hs, b.nlast
  40bda0:	mov	x0, x25
  40bda4:	mov	x1, x23
  40bda8:	bl	4159e4 <_obstack_newchunk@@Base>
  40bdac:	ldr	x0, [x25, #24]
  40bdb0:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40bdb4:	ldr	x1, [x8, #3528]
  40bdb8:	mov	x2, x23
  40bdbc:	bl	402550 <memcpy@plt>
  40bdc0:	ldr	x8, [x19, #2408]
  40bdc4:	add	x8, x8, x23
  40bdc8:	str	x8, [x19, #2408]
  40bdcc:	b	40bb54 <ferror@plt+0x8f54>
  40bdd0:	ldp	x0, x8, [x28]
  40bdd4:	ldur	x22, [x29, #-16]
  40bdd8:	mov	x27, x25
  40bddc:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40bde0:	sub	x8, x8, x0
  40bde4:	cmp	x8, x22
  40bde8:	mov	x26, x19
  40bdec:	add	x25, x25, #0x950
  40bdf0:	b.cs	40be04 <ferror@plt+0x9204>  // b.hs, b.nlast
  40bdf4:	mov	x0, x25
  40bdf8:	mov	x1, x22
  40bdfc:	bl	4159e4 <_obstack_newchunk@@Base>
  40be00:	ldr	x0, [x25, #24]
  40be04:	mov	x1, x23
  40be08:	mov	x2, x22
  40be0c:	bl	402550 <memcpy@plt>
  40be10:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40be14:	ldr	x8, [x19, #2408]
  40be18:	ldr	x9, [x26, #2360]
  40be1c:	ldr	x24, [sp, #24]
  40be20:	add	x8, x8, x22
  40be24:	str	x8, [x19, #2408]
  40be28:	ldr	x8, [x9, #32]
  40be2c:	add	x8, x8, x22
  40be30:	str	x8, [x9, #32]
  40be34:	adrp	x22, 436000 <__progname@@GLIBC_2.17+0xab98>
  40be38:	b	40bb54 <ferror@plt+0x8f54>
  40be3c:	ldp	x8, x9, [x28]
  40be40:	cmp	x9, x8
  40be44:	b.ne	40be60 <ferror@plt+0x9260>  // b.any
  40be48:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40be4c:	add	x20, x20, #0x950
  40be50:	mov	w1, #0x1                   	// #1
  40be54:	mov	x0, x20
  40be58:	bl	4159e4 <_obstack_newchunk@@Base>
  40be5c:	ldr	x8, [x20, #24]
  40be60:	add	x9, x8, #0x1
  40be64:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40be68:	str	x9, [x19, #2408]
  40be6c:	strb	w21, [x8]
  40be70:	bl	40c1cc <ferror@plt+0x95cc>
  40be74:	cmp	w0, #0x100
  40be78:	b.ne	40bf88 <ferror@plt+0x9388>  // b.any
  40be7c:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40be80:	mov	w22, #0x2                   	// #2
  40be84:	b	40c0e0 <ferror@plt+0x94e0>
  40be88:	ldr	x9, [x8, #32]
  40be8c:	ldrb	w10, [x9]
  40be90:	cbz	w10, 40b930 <ferror@plt+0x8d30>
  40be94:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40be98:	ldrb	w10, [x10, #2352]
  40be9c:	tbnz	w10, #0, 40b930 <ferror@plt+0x8d30>
  40bea0:	add	x9, x9, #0x1
  40bea4:	mov	w22, wzr
  40bea8:	str	x9, [x8, #32]
  40beac:	b	40c16c <ferror@plt+0x956c>
  40beb0:	ldr	x9, [x8, #32]
  40beb4:	ldrb	w10, [x9]
  40beb8:	cbz	w10, 40b964 <ferror@plt+0x8d64>
  40bebc:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40bec0:	ldrb	w10, [x10, #2352]
  40bec4:	tbnz	w10, #0, 40b964 <ferror@plt+0x8d64>
  40bec8:	add	x9, x9, #0x1
  40becc:	str	x9, [x8, #32]
  40bed0:	b	40b968 <ferror@plt+0x8d68>
  40bed4:	ldr	x9, [x8, #32]
  40bed8:	ldrb	w10, [x9]
  40bedc:	cbz	w10, 40b980 <ferror@plt+0x8d80>
  40bee0:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40bee4:	ldrb	w10, [x10, #2352]
  40bee8:	tbnz	w10, #0, 40b980 <ferror@plt+0x8d80>
  40beec:	add	x9, x9, #0x1
  40bef0:	str	x9, [x8, #32]
  40bef4:	b	40b984 <ferror@plt+0x8d84>
  40bef8:	sub	w8, w21, #0x28
  40befc:	cmp	w8, #0x4
  40bf00:	b.hi	40c030 <ferror@plt+0x9430>  // b.pmore
  40bf04:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x240c>
  40bf08:	add	x9, x9, #0xa34
  40bf0c:	ldr	w22, [x9, w8, sxtw #2]
  40bf10:	b	40c034 <ferror@plt+0x9434>
  40bf14:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40bf18:	ldp	x0, x9, [x28]
  40bf1c:	ldr	x20, [x8, #3576]
  40bf20:	sub	x8, x9, x0
  40bf24:	cmp	x8, x20
  40bf28:	b.cs	40bf3c <ferror@plt+0x933c>  // b.hs, b.nlast
  40bf2c:	mov	x0, x21
  40bf30:	mov	x1, x20
  40bf34:	bl	4159e4 <_obstack_newchunk@@Base>
  40bf38:	ldr	x0, [x21, #24]
  40bf3c:	ldr	x1, [x23, #3568]
  40bf40:	mov	x2, x20
  40bf44:	bl	402550 <memcpy@plt>
  40bf48:	ldr	x8, [x19, #2408]
  40bf4c:	mov	w22, #0x1                   	// #1
  40bf50:	add	x8, x8, x20
  40bf54:	str	x8, [x19, #2408]
  40bf58:	b	40bf7c <ferror@plt+0x937c>
  40bf5c:	ldr	w3, [x24]
  40bf60:	adrp	x4, 418000 <_obstack_memory_used@@Base+0x240c>
  40bf64:	add	x4, x4, #0x8a6
  40bf68:	mov	w0, #0x1                   	// #1
  40bf6c:	mov	w1, wzr
  40bf70:	mov	x2, x27
  40bf74:	mov	w22, #0x1                   	// #1
  40bf78:	bl	402db8 <ferror@plt+0x1b8>
  40bf7c:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40bf80:	mov	x23, x25
  40bf84:	b	40c0e0 <ferror@plt+0x94e0>
  40bf88:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40bf8c:	mov	w21, w0
  40bf90:	mov	x24, x23
  40bf94:	add	x20, x20, #0x950
  40bf98:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40bf9c:	cmp	w21, #0x5f
  40bfa0:	b.eq	40bfb0 <ferror@plt+0x93b0>  // b.none
  40bfa4:	ldr	x8, [x22]
  40bfa8:	ldrh	w8, [x8, w21, sxtw #1]
  40bfac:	tbz	w8, #3, 40c020 <ferror@plt+0x9420>
  40bfb0:	ldp	x8, x9, [x28]
  40bfb4:	cmp	x9, x8
  40bfb8:	b.ne	40bfcc <ferror@plt+0x93cc>  // b.any
  40bfbc:	mov	w1, #0x1                   	// #1
  40bfc0:	mov	x0, x20
  40bfc4:	bl	4159e4 <_obstack_newchunk@@Base>
  40bfc8:	ldr	x8, [x20, #24]
  40bfcc:	add	x9, x8, #0x1
  40bfd0:	str	x9, [x19, #2408]
  40bfd4:	strb	w21, [x8]
  40bfd8:	ldr	x8, [x26, #2360]
  40bfdc:	cbz	x8, 40bfe8 <ferror@plt+0x93e8>
  40bfe0:	ldr	w9, [x8, #8]
  40bfe4:	cbz	w9, 40c000 <ferror@plt+0x9400>
  40bfe8:	bl	40b428 <ferror@plt+0x8828>
  40bfec:	bl	40c1cc <ferror@plt+0x95cc>
  40bff0:	mov	w21, w0
  40bff4:	cmp	w0, #0x100
  40bff8:	b.ne	40bf9c <ferror@plt+0x939c>  // b.any
  40bffc:	b	40c020 <ferror@plt+0x9420>
  40c000:	ldr	x9, [x8, #32]
  40c004:	ldrb	w10, [x9]
  40c008:	cbz	w10, 40bfe8 <ferror@plt+0x93e8>
  40c00c:	ldrb	w10, [x23, #2352]
  40c010:	tbnz	w10, #0, 40bfe8 <ferror@plt+0x93e8>
  40c014:	add	x9, x9, #0x1
  40c018:	str	x9, [x8, #32]
  40c01c:	b	40bfec <ferror@plt+0x93ec>
  40c020:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c024:	mov	w22, #0x2                   	// #2
  40c028:	mov	x23, x24
  40c02c:	b	40c0e0 <ferror@plt+0x94e0>
  40c030:	mov	w22, #0x6                   	// #6
  40c034:	ldp	x8, x9, [x28]
  40c038:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c03c:	add	x19, x19, #0x958
  40c040:	cmp	x9, x8
  40c044:	b.ne	40c060 <ferror@plt+0x9460>  // b.any
  40c048:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c04c:	add	x20, x20, #0x950
  40c050:	mov	w1, #0x1                   	// #1
  40c054:	mov	x0, x20
  40c058:	bl	4159e4 <_obstack_newchunk@@Base>
  40c05c:	ldr	x8, [x20, #24]
  40c060:	add	x9, x8, #0x1
  40c064:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c068:	str	x9, [x10, #2408]
  40c06c:	strb	w21, [x8]
  40c070:	b	40c0e4 <ferror@plt+0x94e4>
  40c074:	cbnz	w20, 40c1ac <ferror@plt+0x95ac>
  40c078:	ldp	x0, x8, [x28]
  40c07c:	sub	x19, x24, x23
  40c080:	sub	x20, x19, #0x1
  40c084:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c088:	sub	x8, x8, x0
  40c08c:	cmp	x8, x20
  40c090:	add	x21, x21, #0x950
  40c094:	b.cs	40c0a8 <ferror@plt+0x94a8>  // b.hs, b.nlast
  40c098:	mov	x0, x21
  40c09c:	mov	x1, x20
  40c0a0:	bl	4159e4 <_obstack_newchunk@@Base>
  40c0a4:	ldr	x0, [x21, #24]
  40c0a8:	mov	x1, x23
  40c0ac:	mov	x2, x20
  40c0b0:	bl	402550 <memcpy@plt>
  40c0b4:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c0b8:	ldr	x8, [x10, #2408]
  40c0bc:	ldr	x9, [x26, #2360]
  40c0c0:	add	x8, x8, x20
  40c0c4:	str	x8, [x10, #2408]
  40c0c8:	ldr	x8, [x9, #32]
  40c0cc:	add	x8, x8, x19
  40c0d0:	str	x8, [x9, #32]
  40c0d4:	ldr	x23, [sp, #8]
  40c0d8:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c0dc:	mov	w22, #0x1                   	// #1
  40c0e0:	add	x19, x19, #0x958
  40c0e4:	ldp	x8, x9, [x28]
  40c0e8:	cmp	x9, x8
  40c0ec:	b.ne	40c108 <ferror@plt+0x9508>  // b.any
  40c0f0:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c0f4:	add	x20, x20, #0x950
  40c0f8:	mov	w1, #0x1                   	// #1
  40c0fc:	mov	x0, x20
  40c100:	bl	4159e4 <_obstack_newchunk@@Base>
  40c104:	ldr	x8, [x20, #24]
  40c108:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c10c:	add	x9, x8, #0x1
  40c110:	add	x10, x10, #0x960
  40c114:	mov	w11, #0x1                   	// #1
  40c118:	str	x9, [x10, #8]
  40c11c:	strb	wzr, [x8]
  40c120:	str	w11, [x23]
  40c124:	ldp	x8, x9, [x10]
  40c128:	cmp	x9, x8
  40c12c:	b.ne	40c140 <ferror@plt+0x9540>  // b.any
  40c130:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c134:	ldrb	w11, [x10, #2464]
  40c138:	orr	w11, w11, #0x2
  40c13c:	strb	w11, [x10, #2464]
  40c140:	ldr	x10, [x19, #40]
  40c144:	ldr	x11, [x19]
  40c148:	ldr	x12, [x19, #24]
  40c14c:	add	x9, x10, x9
  40c150:	bic	x9, x9, x10
  40c154:	sub	x13, x12, x11
  40c158:	sub	x10, x9, x11
  40c15c:	cmp	x10, x13
  40c160:	csel	x9, x12, x9, hi  // hi = pmore
  40c164:	stp	x9, x9, [x19, #8]
  40c168:	str	x8, [x23, #8]
  40c16c:	mov	w0, w22
  40c170:	ldp	x20, x19, [sp, #128]
  40c174:	ldp	x22, x21, [sp, #112]
  40c178:	ldp	x24, x23, [sp, #96]
  40c17c:	ldp	x26, x25, [sp, #80]
  40c180:	ldp	x28, x27, [sp, #64]
  40c184:	ldp	x29, x30, [sp, #48]
  40c188:	add	sp, sp, #0x90
  40c18c:	ret
  40c190:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c194:	ldr	w0, [x8, #1240]
  40c198:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40c19c:	add	x2, x2, #0xa04
  40c1a0:	mov	w1, wzr
  40c1a4:	bl	402d0c <ferror@plt+0x10c>
  40c1a8:	bl	402920 <abort@plt>
  40c1ac:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40c1b0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40c1b4:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x240c>
  40c1b8:	add	x0, x0, #0x8c4
  40c1bc:	add	x1, x1, #0x8d1
  40c1c0:	add	x3, x3, #0x8d9
  40c1c4:	mov	w2, #0x3cd                 	// #973
  40c1c8:	bl	402b70 <__assert_fail@plt>
  40c1cc:	stp	x29, x30, [sp, #-32]!
  40c1d0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c1d4:	stp	x20, x19, [sp, #16]
  40c1d8:	ldr	x20, [x8, #2360]
  40c1dc:	mov	x29, sp
  40c1e0:	cbz	x20, 40c230 <ferror@plt+0x9630>
  40c1e4:	ldr	w8, [x20, #8]
  40c1e8:	cmp	w8, #0x2
  40c1ec:	b.eq	40c238 <ferror@plt+0x9638>  // b.none
  40c1f0:	cmp	w8, #0x1
  40c1f4:	b.eq	40c20c <ferror@plt+0x960c>  // b.none
  40c1f8:	cbnz	w8, 40c25c <ferror@plt+0x965c>
  40c1fc:	ldr	x8, [x20, #32]
  40c200:	ldrb	w19, [x8]
  40c204:	cbz	w19, 40c228 <ferror@plt+0x9628>
  40c208:	b	40c23c <ferror@plt+0x963c>
  40c20c:	ldr	x0, [x20, #32]
  40c210:	bl	402880 <getc@plt>
  40c214:	cmn	w0, #0x1
  40c218:	b.ne	40c24c <ferror@plt+0x964c>  // b.any
  40c21c:	ldrb	w8, [x20, #40]
  40c220:	orr	w8, w8, #0x1
  40c224:	strb	w8, [x20, #40]
  40c228:	ldr	x20, [x20]
  40c22c:	cbnz	x20, 40c1e4 <ferror@plt+0x95e4>
  40c230:	mov	w19, #0x100                 	// #256
  40c234:	b	40c23c <ferror@plt+0x963c>
  40c238:	mov	w19, #0x101                 	// #257
  40c23c:	mov	w0, w19
  40c240:	ldp	x20, x19, [sp, #16]
  40c244:	ldp	x29, x30, [sp], #32
  40c248:	ret
  40c24c:	ldr	x1, [x20, #32]
  40c250:	mov	w19, w0
  40c254:	bl	402a00 <ungetc@plt>
  40c258:	b	40c23c <ferror@plt+0x963c>
  40c25c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c260:	ldr	w0, [x8, #1240]
  40c264:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40c268:	add	x2, x2, #0x9d1
  40c26c:	mov	w1, wzr
  40c270:	bl	402d0c <ferror@plt+0x10c>
  40c274:	bl	402920 <abort@plt>
  40c278:	stp	x29, x30, [sp, #-64]!
  40c27c:	stp	x24, x23, [sp, #16]
  40c280:	stp	x22, x21, [sp, #32]
  40c284:	stp	x20, x19, [sp, #48]
  40c288:	mov	x29, sp
  40c28c:	mov	w20, w1
  40c290:	mov	x19, x0
  40c294:	bl	40c1cc <ferror@plt+0x95cc>
  40c298:	ldrb	w8, [x19]
  40c29c:	cmp	w0, w8
  40c2a0:	b.ne	40c324 <ferror@plt+0x9724>  // b.any
  40c2a4:	ldrb	w8, [x19, #1]
  40c2a8:	cbz	w8, 40c32c <ferror@plt+0x972c>
  40c2ac:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c2b0:	ldr	x8, [x21, #2360]
  40c2b4:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c2b8:	cbz	x8, 40c2c4 <ferror@plt+0x96c4>
  40c2bc:	ldr	w9, [x8, #8]
  40c2c0:	cbz	w9, 40c3cc <ferror@plt+0x97cc>
  40c2c4:	bl	40b428 <ferror@plt+0x8828>
  40c2c8:	mov	x23, xzr
  40c2cc:	add	x24, x19, x23
  40c2d0:	bl	40c1cc <ferror@plt+0x95cc>
  40c2d4:	ldrb	w8, [x24, #1]
  40c2d8:	cmp	w0, w8
  40c2dc:	b.ne	40c34c <ferror@plt+0x974c>  // b.any
  40c2e0:	ldr	x8, [x21, #2360]
  40c2e4:	cbz	x8, 40c2f0 <ferror@plt+0x96f0>
  40c2e8:	ldr	w9, [x8, #8]
  40c2ec:	cbz	w9, 40c304 <ferror@plt+0x9704>
  40c2f0:	bl	40b428 <ferror@plt+0x8828>
  40c2f4:	ldrb	w8, [x24, #2]
  40c2f8:	add	x23, x23, #0x1
  40c2fc:	cbnz	w8, 40c2cc <ferror@plt+0x96cc>
  40c300:	b	40c358 <ferror@plt+0x9758>
  40c304:	ldr	x9, [x8, #32]
  40c308:	ldrb	w10, [x9]
  40c30c:	cbz	w10, 40c2f0 <ferror@plt+0x96f0>
  40c310:	ldrb	w10, [x22, #2352]
  40c314:	tbnz	w10, #0, 40c2f0 <ferror@plt+0x96f0>
  40c318:	add	x9, x9, #0x1
  40c31c:	str	x9, [x8, #32]
  40c320:	b	40c2f4 <ferror@plt+0x96f4>
  40c324:	mov	w20, wzr
  40c328:	b	40c3b4 <ferror@plt+0x97b4>
  40c32c:	tbz	w20, #0, 40c35c <ferror@plt+0x975c>
  40c330:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c334:	ldr	x8, [x8, #2360]
  40c338:	cbz	x8, 40c344 <ferror@plt+0x9744>
  40c33c:	ldr	w9, [x8, #8]
  40c340:	cbz	w9, 40c3ec <ferror@plt+0x97ec>
  40c344:	bl	40b428 <ferror@plt+0x8828>
  40c348:	b	40c35c <ferror@plt+0x975c>
  40c34c:	mov	w20, wzr
  40c350:	add	w22, w23, #0x1
  40c354:	b	40c36c <ferror@plt+0x976c>
  40c358:	tbz	w20, #0, 40c364 <ferror@plt+0x9764>
  40c35c:	mov	w20, #0x1                   	// #1
  40c360:	b	40c3b4 <ferror@plt+0x97b4>
  40c364:	add	x22, x23, #0x1
  40c368:	mov	w20, #0x1                   	// #1
  40c36c:	bl	40af04 <ferror@plt+0x8304>
  40c370:	mov	x21, x0
  40c374:	ldp	x0, x8, [x0, #24]
  40c378:	sub	x8, x8, x0
  40c37c:	cmp	x8, w22, sxtw
  40c380:	sxtw	x22, w22
  40c384:	b.cs	40c398 <ferror@plt+0x9798>  // b.hs, b.nlast
  40c388:	mov	x0, x21
  40c38c:	mov	x1, x22
  40c390:	bl	4159e4 <_obstack_newchunk@@Base>
  40c394:	ldr	x0, [x21, #24]
  40c398:	mov	x1, x19
  40c39c:	mov	x2, x22
  40c3a0:	bl	402550 <memcpy@plt>
  40c3a4:	ldr	x8, [x21, #24]
  40c3a8:	add	x8, x8, x22
  40c3ac:	str	x8, [x21, #24]
  40c3b0:	bl	40afec <ferror@plt+0x83ec>
  40c3b4:	mov	w0, w20
  40c3b8:	ldp	x20, x19, [sp, #48]
  40c3bc:	ldp	x22, x21, [sp, #32]
  40c3c0:	ldp	x24, x23, [sp, #16]
  40c3c4:	ldp	x29, x30, [sp], #64
  40c3c8:	ret
  40c3cc:	ldr	x9, [x8, #32]
  40c3d0:	ldrb	w10, [x9]
  40c3d4:	cbz	w10, 40c2c4 <ferror@plt+0x96c4>
  40c3d8:	ldrb	w10, [x22, #2352]
  40c3dc:	tbnz	w10, #0, 40c2c4 <ferror@plt+0x96c4>
  40c3e0:	add	x9, x9, #0x1
  40c3e4:	str	x9, [x8, #32]
  40c3e8:	b	40c2c8 <ferror@plt+0x96c8>
  40c3ec:	ldr	x9, [x8, #32]
  40c3f0:	ldrb	w10, [x9]
  40c3f4:	cbz	w10, 40c344 <ferror@plt+0x9744>
  40c3f8:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c3fc:	ldrb	w10, [x10, #2352]
  40c400:	tbnz	w10, #0, 40c344 <ferror@plt+0x9744>
  40c404:	add	x9, x9, #0x1
  40c408:	str	x9, [x8, #32]
  40c40c:	b	40c35c <ferror@plt+0x975c>
  40c410:	stp	x29, x30, [sp, #-32]!
  40c414:	str	x19, [sp, #16]
  40c418:	mov	x29, sp
  40c41c:	bl	40c1cc <ferror@plt+0x95cc>
  40c420:	cmp	w0, #0x100
  40c424:	b.eq	40c43c <ferror@plt+0x983c>  // b.none
  40c428:	mov	w19, w0
  40c42c:	cmp	w0, #0x101
  40c430:	b.ne	40c444 <ferror@plt+0x9844>  // b.any
  40c434:	mov	w0, #0x7                   	// #7
  40c438:	b	40c4c0 <ferror@plt+0x98c0>
  40c43c:	mov	w0, wzr
  40c440:	b	40c4c0 <ferror@plt+0x98c0>
  40c444:	cbz	w19, 40c470 <ferror@plt+0x9870>
  40c448:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40c44c:	ldr	x0, [x8, #3552]
  40c450:	ldrb	w8, [x0]
  40c454:	cmp	w19, w8
  40c458:	b.ne	40c470 <ferror@plt+0x9870>  // b.any
  40c45c:	ldrb	w8, [x0, #1]
  40c460:	cbz	w8, 40c4bc <ferror@plt+0x98bc>
  40c464:	mov	w1, wzr
  40c468:	bl	40c278 <ferror@plt+0x9678>
  40c46c:	tbnz	w0, #0, 40c4bc <ferror@plt+0x98bc>
  40c470:	bl	4029a0 <__ctype_b_loc@plt>
  40c474:	mov	x8, x0
  40c478:	cmp	w19, #0x5f
  40c47c:	mov	w0, #0x2                   	// #2
  40c480:	b.eq	40c4c0 <ferror@plt+0x98c0>  // b.none
  40c484:	ldr	x8, [x8]
  40c488:	ldrh	w8, [x8, w19, sxtw #1]
  40c48c:	tbnz	w8, #10, 40c4c0 <ferror@plt+0x98c0>
  40c490:	cbz	w19, 40c4cc <ferror@plt+0x98cc>
  40c494:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40c498:	ldr	x0, [x8, #3528]
  40c49c:	ldrb	w8, [x0]
  40c4a0:	cmp	w19, w8
  40c4a4:	b.ne	40c4cc <ferror@plt+0x98cc>  // b.any
  40c4a8:	ldrb	w8, [x0, #1]
  40c4ac:	cbz	w8, 40c4bc <ferror@plt+0x98bc>
  40c4b0:	mov	w1, wzr
  40c4b4:	bl	40c278 <ferror@plt+0x9678>
  40c4b8:	tbz	w0, #0, 40c4cc <ferror@plt+0x98cc>
  40c4bc:	mov	w0, #0x1                   	// #1
  40c4c0:	ldr	x19, [sp, #16]
  40c4c4:	ldp	x29, x30, [sp], #32
  40c4c8:	ret
  40c4cc:	sub	w8, w19, #0x28
  40c4d0:	cmp	w8, #0x4
  40c4d4:	b.hi	40c4e8 <ferror@plt+0x98e8>  // b.pmore
  40c4d8:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x240c>
  40c4dc:	add	x9, x9, #0xa34
  40c4e0:	ldr	w0, [x9, w8, sxtw #2]
  40c4e4:	b	40c4c0 <ferror@plt+0x98c0>
  40c4e8:	mov	w0, #0x6                   	// #6
  40c4ec:	b	40c4c0 <ferror@plt+0x98c0>
  40c4f0:	stp	x29, x30, [sp, #-48]!
  40c4f4:	stp	x20, x19, [sp, #32]
  40c4f8:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c4fc:	ldr	x1, [x20, #2360]
  40c500:	stp	x22, x21, [sp, #16]
  40c504:	mov	x29, sp
  40c508:	ldr	w8, [x1, #8]
  40c50c:	ldr	x21, [x1]
  40c510:	cmp	w8, #0x0
  40c514:	ccmp	w8, #0x2, #0x4, ne  // ne = any
  40c518:	b.eq	40c60c <ferror@plt+0x9a0c>  // b.none
  40c51c:	cmp	w8, #0x1
  40c520:	b.ne	40c684 <ferror@plt+0x9a84>  // b.any
  40c524:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c528:	ldrb	w8, [x8, #1221]
  40c52c:	tbz	w8, #0, 40c584 <ferror@plt+0x9984>
  40c530:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c534:	ldr	x8, [x19, #2136]
  40c538:	cbz	x21, 40c560 <ferror@plt+0x9960>
  40c53c:	cbz	x8, 40c584 <ferror@plt+0x9984>
  40c540:	bl	407fe0 <ferror@plt+0x53e0>
  40c544:	ldr	x0, [x19, #2136]
  40c548:	ldr	x2, [x21, #16]
  40c54c:	ldr	w3, [x21, #24]
  40c550:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40c554:	add	x1, x1, #0x953
  40c558:	bl	4151e4 <ferror@plt+0x125e4>
  40c55c:	b	40c578 <ferror@plt+0x9978>
  40c560:	cbz	x8, 40c584 <ferror@plt+0x9984>
  40c564:	bl	407fe0 <ferror@plt+0x53e0>
  40c568:	ldr	x0, [x19, #2136]
  40c56c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40c570:	add	x1, x1, #0x971
  40c574:	bl	4151e4 <ferror@plt+0x125e4>
  40c578:	ldr	x1, [x19, #2136]
  40c57c:	mov	w0, #0xa                   	// #10
  40c580:	bl	402640 <putc@plt>
  40c584:	ldr	x22, [x20, #2360]
  40c588:	ldr	x19, [x22, #32]
  40c58c:	mov	x0, x19
  40c590:	bl	402c00 <ferror@plt>
  40c594:	cbz	w0, 40c5d4 <ferror@plt+0x99d4>
  40c598:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c59c:	ldr	w0, [x8, #1240]
  40c5a0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40c5a4:	add	x2, x2, #0x981
  40c5a8:	mov	w1, wzr
  40c5ac:	bl	402d0c <ferror@plt+0x10c>
  40c5b0:	ldr	x8, [x20, #2360]
  40c5b4:	ldrb	w9, [x8, #40]
  40c5b8:	tbz	w9, #1, 40c5c4 <ferror@plt+0x99c4>
  40c5bc:	ldr	x0, [x8, #32]
  40c5c0:	bl	4154f0 <ferror@plt+0x128f0>
  40c5c4:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40c5c8:	mov	w9, #0x1                   	// #1
  40c5cc:	str	w9, [x8, #3512]
  40c5d0:	b	40c5ec <ferror@plt+0x99ec>
  40c5d4:	ldrb	w8, [x22, #40]
  40c5d8:	tbz	w8, #1, 40c5ec <ferror@plt+0x99ec>
  40c5dc:	mov	x0, x19
  40c5e0:	bl	4154f0 <ferror@plt+0x128f0>
  40c5e4:	cmn	w0, #0x1
  40c5e8:	b.eq	40c660 <ferror@plt+0x9a60>  // b.none
  40c5ec:	ldr	x1, [x20, #2360]
  40c5f0:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c5f4:	adrp	x10, 436000 <__progname@@GLIBC_2.17+0xab98>
  40c5f8:	mov	w11, #0xffffffff            	// #-1
  40c5fc:	ldrb	w8, [x1, #40]
  40c600:	str	w11, [x10, #3600]
  40c604:	ubfx	w8, w8, #2, #1
  40c608:	strb	w8, [x9, #2356]
  40c60c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c610:	ldr	x0, [x8, #2256]
  40c614:	ldr	x8, [x0, #8]
  40c618:	cmp	x1, x8
  40c61c:	b.ls	40c634 <ferror@plt+0x9a34>  // b.plast
  40c620:	ldr	x8, [x0, #32]
  40c624:	cmp	x1, x8
  40c628:	b.cs	40c634 <ferror@plt+0x9a34>  // b.hs, b.nlast
  40c62c:	stp	x1, x1, [x0, #16]
  40c630:	b	40c638 <ferror@plt+0x9a38>
  40c634:	bl	415b5c <_obstack_free@@Base>
  40c638:	str	x21, [x20, #2360]
  40c63c:	ldp	x20, x19, [sp, #32]
  40c640:	ldp	x22, x21, [sp, #16]
  40c644:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c648:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c64c:	mov	w10, #0x1                   	// #1
  40c650:	str	xzr, [x8, #2248]
  40c654:	strb	w10, [x9, #2352]
  40c658:	ldp	x29, x30, [sp], #48
  40c65c:	ret
  40c660:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c664:	ldr	w19, [x8, #1240]
  40c668:	bl	402b80 <__errno_location@plt>
  40c66c:	ldr	w1, [x0]
  40c670:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40c674:	add	x2, x2, #0x98c
  40c678:	mov	w0, w19
  40c67c:	bl	402d0c <ferror@plt+0x10c>
  40c680:	b	40c5c4 <ferror@plt+0x99c4>
  40c684:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c688:	ldr	w0, [x8, #1240]
  40c68c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40c690:	add	x2, x2, #0x99f
  40c694:	mov	w1, wzr
  40c698:	bl	402d0c <ferror@plt+0x10c>
  40c69c:	bl	402920 <abort@plt>
  40c6a0:	sub	sp, sp, #0x40
  40c6a4:	stp	x20, x19, [sp, #48]
  40c6a8:	adrp	x19, 414000 <ferror@plt+0x11400>
  40c6ac:	adrp	x20, 402000 <mbrtowc@plt-0x540>
  40c6b0:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c6b4:	add	x19, x19, #0xde0
  40c6b8:	add	x20, x20, #0x9f0
  40c6bc:	add	x0, x0, #0x9b8
  40c6c0:	mov	x1, xzr
  40c6c4:	mov	x2, xzr
  40c6c8:	mov	x3, x19
  40c6cc:	mov	x4, x20
  40c6d0:	stp	x29, x30, [sp, #32]
  40c6d4:	add	x29, sp, #0x20
  40c6d8:	bl	4158dc <_obstack_begin@@Base>
  40c6dc:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c6e0:	add	x0, x0, #0xa10
  40c6e4:	mov	x1, xzr
  40c6e8:	mov	x2, xzr
  40c6ec:	mov	x3, x19
  40c6f0:	mov	x4, x20
  40c6f4:	bl	4158dc <_obstack_begin@@Base>
  40c6f8:	add	x0, sp, #0x10
  40c6fc:	add	x1, sp, #0xc
  40c700:	bl	40b88c <ferror@plt+0x8c8c>
  40c704:	cbz	w0, 40c730 <ferror@plt+0x9b30>
  40c708:	mov	w1, w0
  40c70c:	ldr	w3, [sp, #12]
  40c710:	add	x2, sp, #0x10
  40c714:	mov	x0, xzr
  40c718:	bl	40c760 <ferror@plt+0x9b60>
  40c71c:	add	x0, sp, #0x10
  40c720:	add	x1, sp, #0xc
  40c724:	bl	40b88c <ferror@plt+0x8c8c>
  40c728:	mov	w1, w0
  40c72c:	cbnz	w0, 40c70c <ferror@plt+0x9b0c>
  40c730:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c734:	add	x0, x0, #0x9b8
  40c738:	mov	x1, xzr
  40c73c:	bl	415b5c <_obstack_free@@Base>
  40c740:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c744:	add	x0, x0, #0xa10
  40c748:	mov	x1, xzr
  40c74c:	bl	415b5c <_obstack_free@@Base>
  40c750:	ldp	x20, x19, [sp, #48]
  40c754:	ldp	x29, x30, [sp, #32]
  40c758:	add	sp, sp, #0x40
  40c75c:	ret
  40c760:	sub	sp, sp, #0x120
  40c764:	cmp	w1, #0x7
  40c768:	stp	x29, x30, [sp, #192]
  40c76c:	stp	x28, x27, [sp, #208]
  40c770:	stp	x26, x25, [sp, #224]
  40c774:	stp	x24, x23, [sp, #240]
  40c778:	stp	x22, x21, [sp, #256]
  40c77c:	stp	x20, x19, [sp, #272]
  40c780:	add	x29, sp, #0xc0
  40c784:	b.hi	40ce08 <ferror@plt+0xa208>  // b.pmore
  40c788:	mov	w8, #0x1                   	// #1
  40c78c:	lsl	w8, w8, w1
  40c790:	mov	w9, #0x7a                  	// #122
  40c794:	mov	w20, w3
  40c798:	mov	x22, x2
  40c79c:	mov	x21, x0
  40c7a0:	tst	w8, w9
  40c7a4:	b.eq	40c7e4 <ferror@plt+0x9be4>  // b.none
  40c7a8:	ldr	x19, [x22, #8]
  40c7ac:	mov	x0, x19
  40c7b0:	bl	402580 <strlen@plt>
  40c7b4:	mov	x2, x0
  40c7b8:	mov	x0, x21
  40c7bc:	mov	x1, x19
  40c7c0:	mov	w3, w20
  40c7c4:	ldp	x20, x19, [sp, #272]
  40c7c8:	ldp	x22, x21, [sp, #256]
  40c7cc:	ldp	x24, x23, [sp, #240]
  40c7d0:	ldp	x26, x25, [sp, #224]
  40c7d4:	ldp	x28, x27, [sp, #208]
  40c7d8:	ldp	x29, x30, [sp, #192]
  40c7dc:	add	sp, sp, #0x120
  40c7e0:	b	40d418 <ferror@plt+0xa818>
  40c7e4:	mov	w9, #0x81                  	// #129
  40c7e8:	tst	w8, w9
  40c7ec:	b.eq	40c810 <ferror@plt+0x9c10>  // b.none
  40c7f0:	ldp	x20, x19, [sp, #272]
  40c7f4:	ldp	x22, x21, [sp, #256]
  40c7f8:	ldp	x24, x23, [sp, #240]
  40c7fc:	ldp	x26, x25, [sp, #224]
  40c800:	ldp	x28, x27, [sp, #208]
  40c804:	ldp	x29, x30, [sp, #192]
  40c808:	add	sp, sp, #0x120
  40c80c:	ret
  40c810:	ldr	x0, [x22, #8]
  40c814:	mov	w1, wzr
  40c818:	bl	40ee5c <ferror@plt+0xc25c>
  40c81c:	cbz	x0, 40c7a8 <ferror@plt+0x9ba8>
  40c820:	ldr	w8, [x0, #24]
  40c824:	mov	x24, x0
  40c828:	cbz	w8, 40c7a8 <ferror@plt+0x9ba8>
  40c82c:	cmp	w8, #0x2
  40c830:	b.ne	40c848 <ferror@plt+0x9c48>  // b.any
  40c834:	ldrb	w8, [x24, #8]
  40c838:	tbz	w8, #3, 40c848 <ferror@plt+0x9c48>
  40c83c:	bl	40c410 <ferror@plt+0x9810>
  40c840:	cmp	w0, #0x3
  40c844:	b.ne	40c7a8 <ferror@plt+0x9ba8>  // b.any
  40c848:	ldr	w8, [x24, #12]
  40c84c:	adrp	x10, 436000 <__progname@@GLIBC_2.17+0xab98>
  40c850:	adrp	x11, 436000 <__progname@@GLIBC_2.17+0xab98>
  40c854:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c858:	add	w8, w8, #0x1
  40c85c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c860:	ldr	x22, [x10, #3544]
  40c864:	ldr	w10, [x11, #3520]
  40c868:	str	w8, [x24, #12]
  40c86c:	ldr	w8, [x25, #2480]
  40c870:	ldr	w3, [x9, #896]
  40c874:	str	w10, [sp, #56]
  40c878:	add	w9, w8, #0x1
  40c87c:	cmp	w3, #0x1
  40c880:	str	w9, [x25, #2480]
  40c884:	b.lt	40c8a4 <ferror@plt+0x9ca4>  // b.tstop
  40c888:	cmp	w8, w3
  40c88c:	b.lt	40c8a4 <ferror@plt+0x9ca4>  // b.tstop
  40c890:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40c894:	add	x2, x2, #0xab3
  40c898:	mov	w0, #0x1                   	// #1
  40c89c:	mov	w1, wzr
  40c8a0:	bl	402d0c <ferror@plt+0x10c>
  40c8a4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c8a8:	ldr	w9, [x8, #2664]
  40c8ac:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c8b0:	ldrb	w10, [x19, #1220]
  40c8b4:	add	w27, w9, #0x1
  40c8b8:	str	w27, [x8, #2664]
  40c8bc:	tbnz	w10, #3, 40c8cc <ferror@plt+0x9ccc>
  40c8c0:	ldrb	w8, [x24, #8]
  40c8c4:	and	w20, w8, #0x1
  40c8c8:	b	40c8d0 <ferror@plt+0x9cd0>
  40c8cc:	mov	w20, #0x1                   	// #1
  40c8d0:	adrp	x26, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c8d4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c8d8:	add	x26, x26, #0x9c8
  40c8dc:	add	x8, x8, #0xa20
  40c8e0:	ldp	x10, x9, [x26]
  40c8e4:	ldp	x8, x23, [x8]
  40c8e8:	cmp	x9, x10
  40c8ec:	str	x8, [sp, #40]
  40c8f0:	b.ne	40c8fc <ferror@plt+0x9cfc>  // b.any
  40c8f4:	mov	w21, #0x1                   	// #1
  40c8f8:	b	40c920 <ferror@plt+0x9d20>
  40c8fc:	adrp	x3, 414000 <ferror@plt+0x11400>
  40c900:	adrp	x4, 402000 <mbrtowc@plt-0x540>
  40c904:	add	x3, x3, #0xde0
  40c908:	add	x4, x4, #0x9f0
  40c90c:	add	x0, sp, #0x40
  40c910:	mov	x1, xzr
  40c914:	mov	x2, xzr
  40c918:	bl	4158dc <_obstack_begin@@Base>
  40c91c:	mov	w21, wzr
  40c920:	cbz	w20, 40c938 <ferror@plt+0x9d38>
  40c924:	ldrb	w8, [x19, #1220]
  40c928:	tbz	w8, #7, 40c938 <ferror@plt+0x9d38>
  40c92c:	ldr	x0, [x24, #16]
  40c930:	mov	w1, w27
  40c934:	bl	408068 <ferror@plt+0x5468>
  40c938:	ldrb	w10, [x24, #8]
  40c93c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c940:	add	x8, x8, #0x9b8
  40c944:	cmp	w21, #0x0
  40c948:	add	x9, sp, #0x40
  40c94c:	str	w21, [sp, #48]
  40c950:	str	w10, [sp, #60]
  40c954:	csel	x21, x8, x9, ne  // ne = any
  40c958:	mov	w10, #0x1                   	// #1
  40c95c:	ldp	x8, x9, [x21, #24]
  40c960:	stur	w10, [x29, #-40]
  40c964:	ldr	x10, [x24, #16]
  40c968:	sub	x9, x9, x8
  40c96c:	cmp	x9, #0xf
  40c970:	stur	x10, [x29, #-32]
  40c974:	b.hi	40c988 <ferror@plt+0x9d88>  // b.pmore
  40c978:	mov	w1, #0x10                  	// #16
  40c97c:	mov	x0, x21
  40c980:	bl	4159e4 <_obstack_newchunk@@Base>
  40c984:	ldr	x8, [x21, #24]
  40c988:	ldur	q0, [x29, #-40]
  40c98c:	str	q0, [x8]
  40c990:	ldp	x19, x8, [x21, #16]
  40c994:	add	x8, x8, #0x10
  40c998:	cmp	x8, x19
  40c99c:	str	x8, [x21, #24]
  40c9a0:	b.ne	40c9b0 <ferror@plt+0x9db0>  // b.any
  40c9a4:	ldrb	w9, [x21, #80]
  40c9a8:	orr	w9, w9, #0x2
  40c9ac:	strb	w9, [x21, #80]
  40c9b0:	ldr	x9, [x21, #48]
  40c9b4:	ldr	x11, [x21, #8]
  40c9b8:	ldr	x10, [x21, #32]
  40c9bc:	str	w20, [sp, #52]
  40c9c0:	add	x8, x9, x8
  40c9c4:	bic	x9, x8, x9
  40c9c8:	sub	x8, x9, x11
  40c9cc:	sub	x11, x10, x11
  40c9d0:	cmp	x8, x11
  40c9d4:	str	x9, [x21, #24]
  40c9d8:	b.ls	40c9e4 <ferror@plt+0x9de4>  // b.plast
  40c9dc:	mov	x9, x10
  40c9e0:	str	x10, [x21, #24]
  40c9e4:	adrp	x28, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40c9e8:	add	x28, x28, #0xa28
  40c9ec:	ldp	x8, x10, [x28]
  40c9f0:	str	x9, [x21, #16]
  40c9f4:	sub	x9, x10, x8
  40c9f8:	cmp	x9, #0x7
  40c9fc:	b.hi	40ca18 <ferror@plt+0x9e18>  // b.pmore
  40ca00:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ca04:	add	x20, x20, #0xa10
  40ca08:	mov	w1, #0x8                   	// #8
  40ca0c:	mov	x0, x20
  40ca10:	bl	4159e4 <_obstack_newchunk@@Base>
  40ca14:	ldr	x8, [x20, #24]
  40ca18:	str	x19, [x8]
  40ca1c:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ca20:	ldr	x8, [x20, #2600]
  40ca24:	add	x8, x8, #0x8
  40ca28:	str	x8, [x20, #2600]
  40ca2c:	bl	40c410 <ferror@plt+0x9810>
  40ca30:	cmp	w0, #0x3
  40ca34:	b.ne	40ccc8 <ferror@plt+0xa0c8>  // b.any
  40ca38:	sub	x0, x29, #0x28
  40ca3c:	mov	x1, xzr
  40ca40:	stp	x23, x22, [sp, #8]
  40ca44:	str	w27, [sp, #28]
  40ca48:	str	x24, [sp, #32]
  40ca4c:	bl	40b88c <ferror@plt+0x8c8c>
  40ca50:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x240c>
  40ca54:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x240c>
  40ca58:	add	x22, x22, #0xa48
  40ca5c:	add	x23, x23, #0xaea
  40ca60:	mov	w27, #0x2                   	// #2
  40ca64:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40ca68:	ldr	x24, [x8, #3544]
  40ca6c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40ca70:	ldr	w25, [x8, #3520]
  40ca74:	stur	wzr, [x29, #-40]
  40ca78:	sub	x0, x29, #0x18
  40ca7c:	mov	x1, xzr
  40ca80:	bl	40b88c <ferror@plt+0x8c8c>
  40ca84:	mov	w26, w0
  40ca88:	cmp	w0, #0x6
  40ca8c:	b.ne	40caa8 <ferror@plt+0x9ea8>  // b.any
  40ca90:	bl	4029a0 <__ctype_b_loc@plt>
  40ca94:	ldur	x8, [x29, #-16]
  40ca98:	ldr	x9, [x0]
  40ca9c:	ldrb	w8, [x8]
  40caa0:	ldrh	w8, [x9, x8, lsl #1]
  40caa4:	tbnz	w8, #13, 40ca78 <ferror@plt+0x9e78>
  40caa8:	mov	w19, wzr
  40caac:	cmp	w26, #0x7
  40cab0:	b.hi	40cdec <ferror@plt+0xa1ec>  // b.pmore
  40cab4:	mov	w8, w26
  40cab8:	adr	x9, 40cac8 <ferror@plt+0x9ec8>
  40cabc:	ldrb	w10, [x22, x8]
  40cac0:	add	x9, x9, x10, lsl #2
  40cac4:	br	x9
  40cac8:	cbz	w19, 40cb50 <ferror@plt+0x9f50>
  40cacc:	ldur	x8, [x29, #-16]
  40cad0:	ldrb	w8, [x8]
  40cad4:	cmp	w8, #0x29
  40cad8:	b.eq	40caec <ferror@plt+0x9eec>  // b.none
  40cadc:	cmp	w8, #0x28
  40cae0:	b.ne	40caf0 <ferror@plt+0x9ef0>  // b.any
  40cae4:	add	w19, w19, #0x1
  40cae8:	b	40caf0 <ferror@plt+0x9ef0>
  40caec:	sub	w19, w19, #0x1
  40caf0:	sub	x2, x29, #0x18
  40caf4:	mov	x0, x21
  40caf8:	mov	w1, w26
  40cafc:	mov	w3, w25
  40cb00:	bl	40c760 <ferror@plt+0x9b60>
  40cb04:	sub	x0, x29, #0x18
  40cb08:	mov	x1, xzr
  40cb0c:	bl	40b88c <ferror@plt+0x8c8c>
  40cb10:	mov	w26, w0
  40cb14:	b	40caac <ferror@plt+0x9eac>
  40cb18:	mov	w0, #0x1                   	// #1
  40cb1c:	mov	w1, wzr
  40cb20:	mov	x2, x24
  40cb24:	mov	w3, w25
  40cb28:	mov	x4, x23
  40cb2c:	bl	402db8 <ferror@plt+0x1b8>
  40cb30:	b	40cb04 <ferror@plt+0x9f04>
  40cb34:	ldp	x9, x8, [x21, #16]
  40cb38:	cmp	x8, x9
  40cb3c:	b.ne	40cb04 <ferror@plt+0x9f04>  // b.any
  40cb40:	ldur	x8, [x29, #-16]
  40cb44:	stur	w27, [x29, #-40]
  40cb48:	stur	x8, [x29, #-32]
  40cb4c:	b	40cb04 <ferror@plt+0x9f04>
  40cb50:	ldp	x8, x9, [x21, #24]
  40cb54:	cmp	x9, x8
  40cb58:	b.ne	40cb6c <ferror@plt+0x9f6c>  // b.any
  40cb5c:	mov	w1, #0x1                   	// #1
  40cb60:	mov	x0, x21
  40cb64:	bl	4159e4 <_obstack_newchunk@@Base>
  40cb68:	ldr	x8, [x21, #24]
  40cb6c:	add	x9, x8, #0x1
  40cb70:	str	x9, [x21, #24]
  40cb74:	strb	wzr, [x8]
  40cb78:	ldp	x10, x8, [x21, #16]
  40cb7c:	cmp	x8, x10
  40cb80:	b.ne	40cb90 <ferror@plt+0x9f90>  // b.any
  40cb84:	ldrb	w9, [x21, #80]
  40cb88:	orr	w9, w9, #0x2
  40cb8c:	strb	w9, [x21, #80]
  40cb90:	ldr	x12, [x21, #48]
  40cb94:	ldr	x13, [x21, #8]
  40cb98:	ldr	x9, [x21, #32]
  40cb9c:	ldur	w11, [x29, #-40]
  40cba0:	add	x8, x12, x8
  40cba4:	bic	x8, x8, x12
  40cba8:	sub	x14, x9, x13
  40cbac:	sub	x12, x8, x13
  40cbb0:	cmp	x12, x14
  40cbb4:	csel	x8, x9, x8, hi  // hi = pmore
  40cbb8:	stp	x8, x8, [x21, #16]
  40cbbc:	cbz	w11, 40cbf0 <ferror@plt+0x9ff0>
  40cbc0:	ldr	w10, [sp, #60]
  40cbc4:	cmp	w26, #0x4
  40cbc8:	cset	w19, eq  // eq = none
  40cbcc:	tbnz	w10, #2, 40cc04 <ferror@plt+0xa004>
  40cbd0:	cmp	w11, #0x2
  40cbd4:	b.ne	40cc04 <ferror@plt+0xa004>  // b.any
  40cbd8:	mov	w10, #0x1                   	// #1
  40cbdc:	stur	w10, [x29, #-40]
  40cbe0:	adrp	x10, 417000 <_obstack_memory_used@@Base+0x140c>
  40cbe4:	add	x10, x10, #0xe97
  40cbe8:	stur	x10, [x29, #-32]
  40cbec:	b	40cc04 <ferror@plt+0xa004>
  40cbf0:	mov	w11, #0x1                   	// #1
  40cbf4:	cmp	w26, #0x4
  40cbf8:	stur	w11, [x29, #-40]
  40cbfc:	stur	x10, [x29, #-32]
  40cc00:	cset	w19, eq  // eq = none
  40cc04:	sub	x9, x9, x8
  40cc08:	cmp	x9, #0xf
  40cc0c:	b.hi	40cc20 <ferror@plt+0xa020>  // b.pmore
  40cc10:	mov	w1, #0x10                  	// #16
  40cc14:	mov	x0, x21
  40cc18:	bl	4159e4 <_obstack_newchunk@@Base>
  40cc1c:	ldr	x8, [x21, #24]
  40cc20:	ldur	q0, [x29, #-40]
  40cc24:	str	q0, [x8]
  40cc28:	ldp	x24, x8, [x21, #16]
  40cc2c:	add	x8, x8, #0x10
  40cc30:	cmp	x8, x24
  40cc34:	str	x8, [x21, #24]
  40cc38:	b.ne	40cc48 <ferror@plt+0xa048>  // b.any
  40cc3c:	ldrb	w9, [x21, #80]
  40cc40:	orr	w9, w9, #0x2
  40cc44:	strb	w9, [x21, #80]
  40cc48:	ldr	x10, [x21, #48]
  40cc4c:	ldr	x11, [x21, #8]
  40cc50:	ldr	x12, [x21, #32]
  40cc54:	ldp	x9, x13, [x28]
  40cc58:	add	x8, x10, x8
  40cc5c:	bic	x8, x8, x10
  40cc60:	sub	x14, x12, x11
  40cc64:	sub	x10, x8, x11
  40cc68:	sub	x13, x13, x9
  40cc6c:	cmp	x10, x14
  40cc70:	csel	x8, x12, x8, hi  // hi = pmore
  40cc74:	cmp	x13, #0x7
  40cc78:	stp	x8, x8, [x21, #16]
  40cc7c:	b.hi	40cc98 <ferror@plt+0xa098>  // b.pmore
  40cc80:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cc84:	add	x25, x25, #0xa10
  40cc88:	mov	w1, #0x8                   	// #8
  40cc8c:	mov	x0, x25
  40cc90:	bl	4159e4 <_obstack_newchunk@@Base>
  40cc94:	ldr	x9, [x25, #24]
  40cc98:	str	x24, [x9]
  40cc9c:	ldr	x8, [x20, #2600]
  40cca0:	add	x8, x8, #0x8
  40cca4:	str	x8, [x20, #2600]
  40cca8:	tbnz	w19, #0, 40ca64 <ferror@plt+0x9e64>
  40ccac:	ldr	x24, [sp, #32]
  40ccb0:	ldr	w27, [sp, #28]
  40ccb4:	ldp	x23, x22, [sp, #8]
  40ccb8:	adrp	x26, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ccbc:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ccc0:	add	x26, x26, #0x9c8
  40ccc4:	b	40cccc <ferror@plt+0xa0cc>
  40ccc8:	ldr	x8, [x20, #2600]
  40cccc:	ldr	x9, [sp, #40]
  40ccd0:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ccd4:	ldr	x10, [x10, #2592]
  40ccd8:	adrp	x11, 436000 <__progname@@GLIBC_2.17+0xab98>
  40ccdc:	sub	x9, x23, x9
  40cce0:	sub	x8, x8, w9, uxtw
  40cce4:	ldr	x19, [x11, #3544]
  40cce8:	adrp	x12, 436000 <__progname@@GLIBC_2.17+0xab98>
  40ccec:	str	x22, [x11, #3544]
  40ccf0:	sub	x8, x8, x10
  40ccf4:	ldr	w23, [x12, #3520]
  40ccf8:	lsr	x21, x8, #3
  40ccfc:	ldp	w28, w8, [sp, #52]
  40cd00:	add	x22, x10, w9, uxtw
  40cd04:	str	w8, [x12, #3520]
  40cd08:	cbz	w28, 40cd20 <ferror@plt+0xa120>
  40cd0c:	ldr	x0, [x24, #16]
  40cd10:	mov	w1, w27
  40cd14:	mov	w2, w21
  40cd18:	mov	x3, x22
  40cd1c:	bl	4084f8 <ferror@plt+0x58f8>
  40cd20:	bl	40af04 <ferror@plt+0x8304>
  40cd24:	mov	x3, x0
  40cd28:	mov	x0, x24
  40cd2c:	mov	w1, w21
  40cd30:	mov	x2, x22
  40cd34:	bl	40ce1c <ferror@plt+0xa21c>
  40cd38:	bl	40afec <ferror@plt+0x83ec>
  40cd3c:	cbz	w28, 40cd54 <ferror@plt+0xa154>
  40cd40:	mov	x3, x0
  40cd44:	ldr	x0, [x24, #16]
  40cd48:	mov	w1, w27
  40cd4c:	mov	w2, w21
  40cd50:	bl	408654 <ferror@plt+0x5a54>
  40cd54:	ldr	w8, [x25, #2480]
  40cd58:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  40cd5c:	str	x19, [x9, #3544]
  40cd60:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  40cd64:	sub	w8, w8, #0x1
  40cd68:	str	w23, [x9, #3520]
  40cd6c:	str	w8, [x25, #2480]
  40cd70:	ldr	w8, [x24, #12]
  40cd74:	ldrb	w9, [x24, #8]
  40cd78:	sub	w8, w8, #0x1
  40cd7c:	str	w8, [x24, #12]
  40cd80:	tbz	w9, #4, 40cd8c <ferror@plt+0xa18c>
  40cd84:	mov	x0, x24
  40cd88:	bl	40edfc <ferror@plt+0xc1fc>
  40cd8c:	ldr	w8, [sp, #48]
  40cd90:	cbz	w8, 40cdc0 <ferror@plt+0xa1c0>
  40cd94:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cd98:	add	x8, x8, #0x9c0
  40cd9c:	ldr	x1, [x22]
  40cda0:	ldr	x9, [x8]
  40cda4:	cmp	x1, x9
  40cda8:	b.ls	40cdcc <ferror@plt+0xa1cc>  // b.plast
  40cdac:	ldr	x8, [x8, #24]
  40cdb0:	cmp	x1, x8
  40cdb4:	b.cs	40cdcc <ferror@plt+0xa1cc>  // b.hs, b.nlast
  40cdb8:	stp	x1, x1, [x26]
  40cdbc:	b	40cdd8 <ferror@plt+0xa1d8>
  40cdc0:	add	x0, sp, #0x40
  40cdc4:	mov	x1, xzr
  40cdc8:	b	40cdd4 <ferror@plt+0xa1d4>
  40cdcc:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cdd0:	add	x0, x0, #0x9b8
  40cdd4:	bl	415b5c <_obstack_free@@Base>
  40cdd8:	ldr	x8, [x20, #2600]
  40cddc:	neg	x9, x21, lsl #32
  40cde0:	add	x8, x8, x9, asr #29
  40cde4:	str	x8, [x20, #2600]
  40cde8:	b	40c7f0 <ferror@plt+0x9bf0>
  40cdec:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cdf0:	ldr	w0, [x8, #1240]
  40cdf4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40cdf8:	add	x2, x2, #0xb0e
  40cdfc:	mov	w1, wzr
  40ce00:	bl	402d0c <ferror@plt+0x10c>
  40ce04:	bl	402920 <abort@plt>
  40ce08:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ce0c:	ldr	w0, [x8, #1240]
  40ce10:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40ce14:	add	x2, x2, #0xa81
  40ce18:	b	40cdfc <ferror@plt+0xa1fc>
  40ce1c:	stp	x29, x30, [sp, #-16]!
  40ce20:	ldr	w10, [x0, #24]
  40ce24:	mov	x8, x3
  40ce28:	mov	x3, x2
  40ce2c:	mov	x9, x0
  40ce30:	cmp	w10, #0x1
  40ce34:	mov	w2, w1
  40ce38:	mov	x29, sp
  40ce3c:	b.eq	40ce60 <ferror@plt+0xa260>  // b.none
  40ce40:	cmp	w10, #0x2
  40ce44:	b.ne	40ce70 <ferror@plt+0xa270>  // b.any
  40ce48:	ldr	x4, [x9, #32]
  40ce4c:	mov	x0, x8
  40ce50:	mov	w1, w2
  40ce54:	mov	x2, x3
  40ce58:	ldp	x29, x30, [sp], #16
  40ce5c:	br	x4
  40ce60:	mov	x0, x8
  40ce64:	mov	x1, x9
  40ce68:	ldp	x29, x30, [sp], #16
  40ce6c:	b	403c68 <ferror@plt+0x1068>
  40ce70:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ce74:	ldr	w0, [x8, #1240]
  40ce78:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40ce7c:	add	x2, x2, #0xa50
  40ce80:	mov	w1, wzr
  40ce84:	bl	402d0c <ferror@plt+0x10c>
  40ce88:	bl	402920 <abort@plt>
  40ce8c:	stp	x29, x30, [sp, #-16]!
  40ce90:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40ce94:	add	x0, x0, #0xe48
  40ce98:	ldr	x8, [x0]
  40ce9c:	adrp	x1, 40c000 <ferror@plt+0x9400>
  40cea0:	add	x1, x1, #0xf10
  40cea4:	mov	x2, xzr
  40cea8:	mov	x29, sp
  40ceac:	blr	x8
  40ceb0:	cbz	x0, 40cf0c <ferror@plt+0xa30c>
  40ceb4:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ceb8:	ldr	x9, [x9, #1104]
  40cebc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cec0:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cec4:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cec8:	add	x11, x11, #0xa78
  40cecc:	str	x0, [x8, #2672]
  40ced0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ced4:	adrp	x12, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ced8:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cedc:	adrp	x3, 414000 <ferror@plt+0x11400>
  40cee0:	adrp	x4, 402000 <mbrtowc@plt-0x540>
  40cee4:	str	x11, [x8, #2704]
  40cee8:	add	x0, x0, #0xaa0
  40ceec:	add	x3, x3, #0xde0
  40cef0:	str	x9, [x10, #2680]
  40cef4:	add	x4, x4, #0x9f0
  40cef8:	str	x9, [x12, #2712]
  40cefc:	mov	x1, xzr
  40cf00:	mov	x2, xzr
  40cf04:	ldp	x29, x30, [sp], #16
  40cf08:	b	4158dc <_obstack_begin@@Base>
  40cf0c:	bl	4150b0 <ferror@plt+0x124b0>
  40cf10:	ldr	w8, [x0, #8]
  40cf14:	ldr	w9, [x1, #8]
  40cf18:	sub	w0, w8, w9
  40cf1c:	ret
  40cf20:	stp	x29, x30, [sp, #-32]!
  40cf24:	stp	x20, x19, [sp, #16]
  40cf28:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cf2c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cf30:	ldr	w0, [x8, #2808]
  40cf34:	ldr	x19, [x20, #2672]
  40cf38:	mov	x29, sp
  40cf3c:	cbz	w0, 40cf44 <ferror@plt+0xa344>
  40cf40:	bl	40cf80 <ferror@plt+0xa380>
  40cf44:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cf48:	ldr	w0, [x8, #2812]
  40cf4c:	cbz	w0, 40cf54 <ferror@plt+0xa354>
  40cf50:	bl	40cf80 <ferror@plt+0xa380>
  40cf54:	str	xzr, [x20, #2672]
  40cf58:	ldr	x8, [x19]
  40cf5c:	mov	x0, x19
  40cf60:	ldr	x8, [x8, #48]
  40cf64:	blr	x8
  40cf68:	ldp	x20, x19, [sp, #16]
  40cf6c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cf70:	add	x0, x0, #0xaa0
  40cf74:	mov	x1, xzr
  40cf78:	ldp	x29, x30, [sp], #32
  40cf7c:	b	415b5c <_obstack_free@@Base>
  40cf80:	stp	x29, x30, [sp, #-32]!
  40cf84:	stp	x20, x19, [sp, #16]
  40cf88:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cf8c:	ldr	w8, [x8, #2808]
  40cf90:	mov	w19, w0
  40cf94:	mov	x29, sp
  40cf98:	cmp	w8, w0
  40cf9c:	b.ne	40cfbc <ferror@plt+0xa3bc>  // b.any
  40cfa0:	adrp	x8, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40cfa4:	ldr	x0, [x8, #2848]
  40cfa8:	bl	410698 <ferror@plt+0xda98>
  40cfac:	cbnz	w0, 40cfdc <ferror@plt+0xa3dc>
  40cfb0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cfb4:	add	x8, x8, #0xaf8
  40cfb8:	b	40cff0 <ferror@plt+0xa3f0>
  40cfbc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cfc0:	ldr	w8, [x8, #2812]
  40cfc4:	cmp	w8, w19
  40cfc8:	b.ne	40cff4 <ferror@plt+0xa3f4>  // b.any
  40cfcc:	adrp	x8, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40cfd0:	ldr	x0, [x8, #2856]
  40cfd4:	bl	410698 <ferror@plt+0xda98>
  40cfd8:	cbz	w0, 40cfe8 <ferror@plt+0xa3e8>
  40cfdc:	ldp	x20, x19, [sp, #16]
  40cfe0:	ldp	x29, x30, [sp], #32
  40cfe4:	ret
  40cfe8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40cfec:	add	x8, x8, #0xafc
  40cff0:	str	wzr, [x8]
  40cff4:	adrp	x8, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40cff8:	ldr	x20, [x8, #2864]
  40cffc:	mov	w0, w19
  40d000:	bl	40e7b8 <ferror@plt+0xbbb8>
  40d004:	mov	x1, x0
  40d008:	mov	x0, x20
  40d00c:	ldp	x20, x19, [sp, #16]
  40d010:	ldp	x29, x30, [sp], #32
  40d014:	b	4100ac <ferror@plt+0xd4ac>
  40d018:	stp	x29, x30, [sp, #-48]!
  40d01c:	stp	x22, x21, [sp, #16]
  40d020:	stp	x20, x19, [sp, #32]
  40d024:	mov	x29, sp
  40d028:	cbz	w1, 40d0d4 <ferror@plt+0xa4d4>
  40d02c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d030:	ldr	x8, [x8, #2704]
  40d034:	cbz	x8, 40d0d4 <ferror@plt+0xa4d4>
  40d038:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d03c:	ldr	x3, [x22, #2712]
  40d040:	mov	w19, w1
  40d044:	mov	x20, x0
  40d048:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d04c:	cbnz	x3, 40d068 <ferror@plt+0xa468>
  40d050:	ldr	w8, [x21, #2816]
  40d054:	cmp	w8, w19
  40d058:	b.ge	40d068 <ferror@plt+0xa468>  // b.tcont
  40d05c:	mov	w0, w19
  40d060:	bl	40d0e4 <ferror@plt+0xa4e4>
  40d064:	ldr	x3, [x22, #2712]
  40d068:	cbz	x3, 40d0a8 <ferror@plt+0xa4a8>
  40d06c:	sxtw	x1, w19
  40d070:	mov	w2, #0x1                   	// #1
  40d074:	mov	x0, x20
  40d078:	bl	402a70 <fwrite@plt>
  40d07c:	cmp	w0, #0x1
  40d080:	b.eq	40d0d4 <ferror@plt+0xa4d4>  // b.none
  40d084:	bl	402b80 <__errno_location@plt>
  40d088:	ldr	w1, [x0]
  40d08c:	ldp	x20, x19, [sp, #32]
  40d090:	ldp	x22, x21, [sp, #16]
  40d094:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40d098:	add	x2, x2, #0xb56
  40d09c:	mov	w0, #0x1                   	// #1
  40d0a0:	ldp	x29, x30, [sp], #48
  40d0a4:	b	402d0c <ferror@plt+0x10c>
  40d0a8:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d0ac:	ldr	x0, [x22, #2824]
  40d0b0:	sxtw	x2, w19
  40d0b4:	mov	x1, x20
  40d0b8:	bl	402550 <memcpy@plt>
  40d0bc:	ldr	x8, [x22, #2824]
  40d0c0:	ldr	w9, [x21, #2816]
  40d0c4:	add	x8, x8, w19, sxtw
  40d0c8:	sub	w9, w9, w19
  40d0cc:	str	x8, [x22, #2824]
  40d0d0:	str	w9, [x21, #2816]
  40d0d4:	ldp	x20, x19, [sp, #32]
  40d0d8:	ldp	x22, x21, [sp, #16]
  40d0dc:	ldp	x29, x30, [sp], #48
  40d0e0:	ret
  40d0e4:	sub	sp, sp, #0xe0
  40d0e8:	stp	x24, x23, [sp, #176]
  40d0ec:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d0f0:	stp	x20, x19, [sp, #208]
  40d0f4:	ldr	x19, [x23, #2704]
  40d0f8:	stp	x29, x30, [sp, #128]
  40d0fc:	stp	x26, x25, [sp, #160]
  40d100:	stp	x22, x21, [sp, #192]
  40d104:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d108:	ldr	w8, [x19, #12]
  40d10c:	ldr	w9, [x22, #2816]
  40d110:	str	x27, [sp, #144]
  40d114:	add	x29, sp, #0x80
  40d118:	sub	w9, w8, w9
  40d11c:	add	w20, w9, w0
  40d120:	cmp	w8, w20
  40d124:	str	w9, [x19, #16]
  40d128:	b.ge	40d14c <ferror@plt+0xa54c>  // b.tcont
  40d12c:	mov	w9, #0x200                 	// #512
  40d130:	mov	w24, w8
  40d134:	lsl	w10, w24, #1
  40d138:	cmp	w24, #0x0
  40d13c:	csel	w24, w9, w10, eq  // eq = none
  40d140:	cmp	w24, w20
  40d144:	b.lt	40d134 <ferror@plt+0xa534>  // b.tstop
  40d148:	b	40d150 <ferror@plt+0xa550>
  40d14c:	mov	w24, w8
  40d150:	adrp	x25, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40d154:	ldr	w9, [x25, #2888]
  40d158:	sub	w8, w24, w8
  40d15c:	add	w8, w8, w9
  40d160:	cmp	w8, #0x80, lsl #12
  40d164:	b.le	40d2c0 <ferror@plt+0xa6c0>
  40d168:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d16c:	ldr	x0, [x8, #2672]
  40d170:	ldr	x8, [x0]
  40d174:	ldr	x9, [x8, #56]
  40d178:	add	x8, sp, #0x8
  40d17c:	blr	x9
  40d180:	ldur	q0, [sp, #8]
  40d184:	ldur	q1, [sp, #24]
  40d188:	ldur	q2, [sp, #40]
  40d18c:	add	x0, sp, #0x40
  40d190:	add	x1, sp, #0x8
  40d194:	stp	q0, q1, [sp, #64]
  40d198:	ldp	x8, x9, [sp, #56]
  40d19c:	str	q2, [sp, #96]
  40d1a0:	str	x8, [sp, #112]
  40d1a4:	ldr	x8, [x9, #64]
  40d1a8:	blr	x8
  40d1ac:	mov	x26, x19
  40d1b0:	tbz	w0, #0, 40d1e0 <ferror@plt+0xa5e0>
  40d1b4:	ldr	x8, [sp, #8]
  40d1b8:	ldr	x9, [sp, #64]
  40d1bc:	add	x0, sp, #0x40
  40d1c0:	add	x1, sp, #0x8
  40d1c4:	ldr	w10, [x8, #16]
  40d1c8:	ldr	x9, [x9, #64]
  40d1cc:	cmp	w10, w20
  40d1d0:	csel	w20, w10, w20, gt
  40d1d4:	csel	x26, x8, x26, gt
  40d1d8:	blr	x9
  40d1dc:	tbnz	w0, #0, 40d1b4 <ferror@plt+0xa5b4>
  40d1e0:	ldr	x8, [sp, #64]
  40d1e4:	add	x0, sp, #0x40
  40d1e8:	ldr	x8, [x8, #72]
  40d1ec:	blr	x8
  40d1f0:	ldp	w20, w8, [x26, #8]
  40d1f4:	ldr	w9, [x25, #2888]
  40d1f8:	ldr	x19, [x26]
  40d1fc:	adrp	x27, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40d200:	sub	w8, w9, w8
  40d204:	str	w8, [x25, #2888]
  40d208:	str	wzr, [x26, #12]
  40d20c:	str	xzr, [x26]
  40d210:	ldr	x8, [x27, #2864]
  40d214:	cbnz	x8, 40d258 <ferror@plt+0xa658>
  40d218:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40d21c:	add	x0, x0, #0xc9c
  40d220:	mov	w2, #0x1                   	// #1
  40d224:	mov	x1, xzr
  40d228:	bl	40fb90 <ferror@plt+0xcf90>
  40d22c:	str	x0, [x27, #2864]
  40d230:	cbnz	x0, 40d24c <ferror@plt+0xa64c>
  40d234:	bl	402b80 <__errno_location@plt>
  40d238:	ldr	w1, [x0]
  40d23c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40d240:	add	x2, x2, #0xca0
  40d244:	mov	w0, #0x1                   	// #1
  40d248:	bl	402d0c <ferror@plt+0x10c>
  40d24c:	adrp	x0, 40e000 <ferror@plt+0xb400>
  40d250:	add	x0, x0, #0x930
  40d254:	bl	4164c0 <_obstack_memory_used@@Base+0x8cc>
  40d258:	mov	w0, w20
  40d25c:	bl	40e7b8 <ferror@plt+0xbbb8>
  40d260:	ldr	x8, [x27, #2864]
  40d264:	mov	x21, x0
  40d268:	mov	x1, x21
  40d26c:	mov	x0, x8
  40d270:	bl	40fe6c <ferror@plt+0xd26c>
  40d274:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40d278:	add	x1, x1, #0xccb
  40d27c:	mov	x0, x21
  40d280:	bl	410520 <ferror@plt+0xd920>
  40d284:	mov	x20, x0
  40d288:	cbz	x0, 40d2c8 <ferror@plt+0xa6c8>
  40d28c:	mov	x0, x20
  40d290:	bl	4026d0 <fileno@plt>
  40d294:	mov	w1, #0x1                   	// #1
  40d298:	bl	410898 <ferror@plt+0xdc98>
  40d29c:	cbz	w0, 40d2ec <ferror@plt+0xa6ec>
  40d2a0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d2a4:	ldr	w21, [x8, #1240]
  40d2a8:	bl	402b80 <__errno_location@plt>
  40d2ac:	ldr	w1, [x0]
  40d2b0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40d2b4:	add	x2, x2, #0xcce
  40d2b8:	mov	w0, w21
  40d2bc:	b	40d2e8 <ferror@plt+0xa6e8>
  40d2c0:	mov	x26, xzr
  40d2c4:	b	40d340 <ferror@plt+0xa740>
  40d2c8:	ldr	x0, [x27, #2864]
  40d2cc:	mov	x1, x21
  40d2d0:	bl	40fef0 <ferror@plt+0xd2f0>
  40d2d4:	bl	402b80 <__errno_location@plt>
  40d2d8:	ldr	w1, [x0]
  40d2dc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40d2e0:	add	x2, x2, #0xca0
  40d2e4:	mov	w0, #0x1                   	// #1
  40d2e8:	bl	402d0c <ferror@plt+0x10c>
  40d2ec:	ldr	w1, [x26, #16]
  40d2f0:	str	x20, [x26]
  40d2f4:	cmp	w1, #0x1
  40d2f8:	b.lt	40d32c <ferror@plt+0xa72c>  // b.tstop
  40d2fc:	mov	w2, #0x1                   	// #1
  40d300:	mov	x0, x19
  40d304:	mov	x3, x20
  40d308:	bl	402a70 <fwrite@plt>
  40d30c:	cmp	w0, #0x1
  40d310:	b.eq	40d32c <ferror@plt+0xa72c>  // b.none
  40d314:	bl	402b80 <__errno_location@plt>
  40d318:	ldr	w1, [x0]
  40d31c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40d320:	add	x2, x2, #0xc6c
  40d324:	mov	w0, #0x1                   	// #1
  40d328:	bl	402d0c <ferror@plt+0x10c>
  40d32c:	mov	x0, x19
  40d330:	bl	4029f0 <free@plt>
  40d334:	mov	w8, #0x1                   	// #1
  40d338:	str	w8, [x26, #16]
  40d33c:	ldr	x19, [x23, #2704]
  40d340:	cmp	x19, x26
  40d344:	b.eq	40d3dc <ferror@plt+0xa7dc>  // b.none
  40d348:	cbz	x26, 40d378 <ferror@plt+0xa778>
  40d34c:	ldr	x0, [x26]
  40d350:	ldr	w1, [x26, #8]
  40d354:	str	xzr, [x26]
  40d358:	bl	40df80 <ferror@plt+0xb380>
  40d35c:	cbz	w0, 40d378 <ferror@plt+0xa778>
  40d360:	bl	402b80 <__errno_location@plt>
  40d364:	ldr	w1, [x0]
  40d368:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40d36c:	add	x2, x2, #0xbb3
  40d370:	mov	w0, wzr
  40d374:	bl	402d0c <ferror@plt+0x10c>
  40d378:	ldr	x8, [x23, #2704]
  40d37c:	sxtw	x0, w24
  40d380:	ldr	x19, [x8]
  40d384:	bl	414de0 <ferror@plt+0x121e0>
  40d388:	ldr	x8, [x23, #2704]
  40d38c:	mov	x1, x19
  40d390:	ldrsw	x2, [x8, #16]
  40d394:	str	x0, [x8]
  40d398:	bl	402550 <memcpy@plt>
  40d39c:	mov	x0, x19
  40d3a0:	bl	4029f0 <free@plt>
  40d3a4:	ldr	x8, [x23, #2704]
  40d3a8:	ldr	w10, [x25, #2888]
  40d3ac:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d3b0:	ldr	w9, [x8, #12]
  40d3b4:	sub	w9, w24, w9
  40d3b8:	add	w9, w9, w10
  40d3bc:	str	w9, [x25, #2888]
  40d3c0:	ldr	x9, [x8]
  40d3c4:	ldrsw	x10, [x8, #16]
  40d3c8:	str	w24, [x8, #12]
  40d3cc:	add	x8, x9, x10
  40d3d0:	str	x8, [x11, #2824]
  40d3d4:	sub	w8, w24, w10
  40d3d8:	b	40d3f4 <ferror@plt+0xa7f4>
  40d3dc:	ldr	x9, [x19]
  40d3e0:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d3e4:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d3e8:	mov	w8, wzr
  40d3ec:	str	x9, [x10, #2712]
  40d3f0:	str	xzr, [x11, #2824]
  40d3f4:	str	w8, [x22, #2816]
  40d3f8:	ldp	x20, x19, [sp, #208]
  40d3fc:	ldp	x22, x21, [sp, #192]
  40d400:	ldp	x24, x23, [sp, #176]
  40d404:	ldp	x26, x25, [sp, #160]
  40d408:	ldr	x27, [sp, #144]
  40d40c:	ldp	x29, x30, [sp, #128]
  40d410:	add	sp, sp, #0xe0
  40d414:	ret
  40d418:	stp	x29, x30, [sp, #-96]!
  40d41c:	stp	x20, x19, [sp, #80]
  40d420:	mov	w20, w2
  40d424:	mov	x19, x1
  40d428:	str	x27, [sp, #16]
  40d42c:	stp	x26, x25, [sp, #32]
  40d430:	stp	x24, x23, [sp, #48]
  40d434:	stp	x22, x21, [sp, #64]
  40d438:	mov	x29, sp
  40d43c:	cbz	x0, 40d49c <ferror@plt+0xa89c>
  40d440:	mov	x22, x0
  40d444:	ldp	x0, x8, [x0, #24]
  40d448:	sub	x8, x8, x0
  40d44c:	cmp	x8, w20, sxtw
  40d450:	sxtw	x20, w20
  40d454:	b.cs	40d468 <ferror@plt+0xa868>  // b.hs, b.nlast
  40d458:	mov	x0, x22
  40d45c:	mov	x1, x20
  40d460:	bl	4159e4 <_obstack_newchunk@@Base>
  40d464:	ldr	x0, [x22, #24]
  40d468:	mov	x1, x19
  40d46c:	mov	x2, x20
  40d470:	bl	402550 <memcpy@plt>
  40d474:	ldr	x8, [x22, #24]
  40d478:	add	x8, x8, x20
  40d47c:	str	x8, [x22, #24]
  40d480:	ldp	x20, x19, [sp, #80]
  40d484:	ldp	x22, x21, [sp, #64]
  40d488:	ldp	x24, x23, [sp, #48]
  40d48c:	ldp	x26, x25, [sp, #32]
  40d490:	ldr	x27, [sp, #16]
  40d494:	ldp	x29, x30, [sp], #96
  40d498:	ret
  40d49c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d4a0:	ldr	x8, [x8, #2704]
  40d4a4:	cbz	x8, 40d480 <ferror@plt+0xa880>
  40d4a8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d4ac:	ldr	w8, [x8, #1216]
  40d4b0:	cbz	w8, 40d500 <ferror@plt+0xa900>
  40d4b4:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d4b8:	ldrb	w8, [x22, #2832]
  40d4bc:	adrp	x23, 436000 <__progname@@GLIBC_2.17+0xab98>
  40d4c0:	tbnz	w8, #0, 40d7dc <ferror@plt+0xabdc>
  40d4c4:	ldr	w8, [x23, #3600]
  40d4c8:	mov	w21, w3
  40d4cc:	mov	w9, #0x1                   	// #1
  40d4d0:	strb	w9, [x22, #2832]
  40d4d4:	add	w8, w8, #0x1
  40d4d8:	cmp	w8, w3
  40d4dc:	str	w8, [x23, #3600]
  40d4e0:	b.eq	40d7dc <ferror@plt+0xabdc>  // b.none
  40d4e4:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d4e8:	ldr	x1, [x25, #2712]
  40d4ec:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d4f0:	cbz	x1, 40d53c <ferror@plt+0xa93c>
  40d4f4:	mov	w0, #0x23                  	// #35
  40d4f8:	bl	402640 <putc@plt>
  40d4fc:	b	40d594 <ferror@plt+0xa994>
  40d500:	cmp	w20, #0x8
  40d504:	b.hi	40d568 <ferror@plt+0xa968>  // b.pmore
  40d508:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x240c>
  40d50c:	mov	w8, w20
  40d510:	add	x9, x9, #0xb44
  40d514:	adr	x10, 40d480 <ferror@plt+0xa880>
  40d518:	ldrh	w11, [x9, x8, lsl #1]
  40d51c:	add	x10, x10, x11, lsl #2
  40d520:	br	x10
  40d524:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d528:	ldr	x1, [x8, #2712]
  40d52c:	cbz	x1, 40d878 <ferror@plt+0xac78>
  40d530:	ldrb	w0, [x19]
  40d534:	bl	402640 <putc@plt>
  40d538:	b	40d8dc <ferror@plt+0xacdc>
  40d53c:	ldr	w8, [x24, #2816]
  40d540:	cbz	w8, 40d58c <ferror@plt+0xa98c>
  40d544:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d548:	ldr	x10, [x9, #2824]
  40d54c:	sub	w8, w8, #0x1
  40d550:	mov	w11, #0x23                  	// #35
  40d554:	str	w8, [x24, #2816]
  40d558:	add	x8, x10, #0x1
  40d55c:	str	x8, [x9, #2824]
  40d560:	strb	w11, [x10]
  40d564:	b	40d594 <ferror@plt+0xa994>
  40d568:	mov	x0, x19
  40d56c:	mov	w1, w20
  40d570:	ldp	x20, x19, [sp, #80]
  40d574:	ldp	x22, x21, [sp, #64]
  40d578:	ldp	x24, x23, [sp, #48]
  40d57c:	ldp	x26, x25, [sp, #32]
  40d580:	ldr	x27, [sp, #16]
  40d584:	ldp	x29, x30, [sp], #96
  40d588:	b	40d018 <ferror@plt+0xa418>
  40d58c:	mov	w0, #0x23                  	// #35
  40d590:	bl	40dc5c <ferror@plt+0xb05c>
  40d594:	ldr	x1, [x25, #2712]
  40d598:	cbz	x1, 40d5a8 <ferror@plt+0xa9a8>
  40d59c:	mov	w0, #0x6c                  	// #108
  40d5a0:	bl	402640 <putc@plt>
  40d5a4:	b	40d5dc <ferror@plt+0xa9dc>
  40d5a8:	ldr	w8, [x24, #2816]
  40d5ac:	cbz	w8, 40d5d4 <ferror@plt+0xa9d4>
  40d5b0:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d5b4:	ldr	x10, [x9, #2824]
  40d5b8:	sub	w8, w8, #0x1
  40d5bc:	mov	w11, #0x6c                  	// #108
  40d5c0:	str	w8, [x24, #2816]
  40d5c4:	add	x8, x10, #0x1
  40d5c8:	str	x8, [x9, #2824]
  40d5cc:	strb	w11, [x10]
  40d5d0:	b	40d5dc <ferror@plt+0xa9dc>
  40d5d4:	mov	w0, #0x6c                  	// #108
  40d5d8:	bl	40dc5c <ferror@plt+0xb05c>
  40d5dc:	ldr	x1, [x25, #2712]
  40d5e0:	cbz	x1, 40d5f0 <ferror@plt+0xa9f0>
  40d5e4:	mov	w0, #0x69                  	// #105
  40d5e8:	bl	402640 <putc@plt>
  40d5ec:	b	40d624 <ferror@plt+0xaa24>
  40d5f0:	ldr	w8, [x24, #2816]
  40d5f4:	cbz	w8, 40d61c <ferror@plt+0xaa1c>
  40d5f8:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d5fc:	ldr	x10, [x9, #2824]
  40d600:	sub	w8, w8, #0x1
  40d604:	mov	w11, #0x69                  	// #105
  40d608:	str	w8, [x24, #2816]
  40d60c:	add	x8, x10, #0x1
  40d610:	str	x8, [x9, #2824]
  40d614:	strb	w11, [x10]
  40d618:	b	40d624 <ferror@plt+0xaa24>
  40d61c:	mov	w0, #0x69                  	// #105
  40d620:	bl	40dc5c <ferror@plt+0xb05c>
  40d624:	ldr	x1, [x25, #2712]
  40d628:	cbz	x1, 40d638 <ferror@plt+0xaa38>
  40d62c:	mov	w0, #0x6e                  	// #110
  40d630:	bl	402640 <putc@plt>
  40d634:	b	40d66c <ferror@plt+0xaa6c>
  40d638:	ldr	w8, [x24, #2816]
  40d63c:	cbz	w8, 40d664 <ferror@plt+0xaa64>
  40d640:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d644:	ldr	x10, [x9, #2824]
  40d648:	sub	w8, w8, #0x1
  40d64c:	mov	w11, #0x6e                  	// #110
  40d650:	str	w8, [x24, #2816]
  40d654:	add	x8, x10, #0x1
  40d658:	str	x8, [x9, #2824]
  40d65c:	strb	w11, [x10]
  40d660:	b	40d66c <ferror@plt+0xaa6c>
  40d664:	mov	w0, #0x6e                  	// #110
  40d668:	bl	40dc5c <ferror@plt+0xb05c>
  40d66c:	ldr	x1, [x25, #2712]
  40d670:	cbz	x1, 40d680 <ferror@plt+0xaa80>
  40d674:	mov	w0, #0x65                  	// #101
  40d678:	bl	402640 <putc@plt>
  40d67c:	b	40d6b4 <ferror@plt+0xaab4>
  40d680:	ldr	w8, [x24, #2816]
  40d684:	cbz	w8, 40d6ac <ferror@plt+0xaaac>
  40d688:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d68c:	ldr	x10, [x9, #2824]
  40d690:	sub	w8, w8, #0x1
  40d694:	mov	w11, #0x65                  	// #101
  40d698:	str	w8, [x24, #2816]
  40d69c:	add	x8, x10, #0x1
  40d6a0:	str	x8, [x9, #2824]
  40d6a4:	strb	w11, [x10]
  40d6a8:	b	40d6b4 <ferror@plt+0xaab4>
  40d6ac:	mov	w0, #0x65                  	// #101
  40d6b0:	bl	40dc5c <ferror@plt+0xb05c>
  40d6b4:	ldr	x1, [x25, #2712]
  40d6b8:	cbz	x1, 40d6c8 <ferror@plt+0xaac8>
  40d6bc:	mov	w0, #0x20                  	// #32
  40d6c0:	bl	402640 <putc@plt>
  40d6c4:	b	40d6fc <ferror@plt+0xaafc>
  40d6c8:	ldr	w8, [x24, #2816]
  40d6cc:	cbz	w8, 40d6f4 <ferror@plt+0xaaf4>
  40d6d0:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d6d4:	ldr	x10, [x9, #2824]
  40d6d8:	sub	w8, w8, #0x1
  40d6dc:	mov	w11, #0x20                  	// #32
  40d6e0:	str	w8, [x24, #2816]
  40d6e4:	add	x8, x10, #0x1
  40d6e8:	str	x8, [x9, #2824]
  40d6ec:	strb	w11, [x10]
  40d6f0:	b	40d6fc <ferror@plt+0xaafc>
  40d6f4:	mov	w0, #0x20                  	// #32
  40d6f8:	bl	40dc5c <ferror@plt+0xb05c>
  40d6fc:	mov	w1, #0xa                   	// #10
  40d700:	mov	w0, w21
  40d704:	bl	403c00 <ferror@plt+0x1000>
  40d708:	ldrb	w8, [x0]
  40d70c:	cbz	w8, 40d760 <ferror@plt+0xab60>
  40d710:	add	x26, x0, #0x1
  40d714:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d718:	ldr	x1, [x25, #2712]
  40d71c:	cbz	x1, 40d72c <ferror@plt+0xab2c>
  40d720:	and	w0, w8, #0xff
  40d724:	bl	402640 <putc@plt>
  40d728:	b	40d758 <ferror@plt+0xab58>
  40d72c:	ldr	w9, [x24, #2816]
  40d730:	cbz	w9, 40d750 <ferror@plt+0xab50>
  40d734:	ldr	x10, [x27, #2824]
  40d738:	sub	w9, w9, #0x1
  40d73c:	str	w9, [x24, #2816]
  40d740:	add	x9, x10, #0x1
  40d744:	str	x9, [x27, #2824]
  40d748:	strb	w8, [x10]
  40d74c:	b	40d758 <ferror@plt+0xab58>
  40d750:	and	w0, w8, #0xff
  40d754:	bl	40dc5c <ferror@plt+0xb05c>
  40d758:	ldrb	w8, [x26], #1
  40d75c:	cbnz	w8, 40d718 <ferror@plt+0xab18>
  40d760:	ldr	w8, [x23, #3600]
  40d764:	cmp	w8, #0x0
  40d768:	b.le	40d780 <ferror@plt+0xab80>
  40d76c:	ldr	x1, [x25, #2712]
  40d770:	cbz	x1, 40d7a4 <ferror@plt+0xaba4>
  40d774:	mov	w0, #0xa                   	// #10
  40d778:	bl	402640 <putc@plt>
  40d77c:	b	40d7d8 <ferror@plt+0xabd8>
  40d780:	adrp	x26, 436000 <__progname@@GLIBC_2.17+0xab98>
  40d784:	ldr	x8, [x26, #3544]
  40d788:	ldrb	w8, [x8]
  40d78c:	cbz	w8, 40d76c <ferror@plt+0xab6c>
  40d790:	ldr	x1, [x25, #2712]
  40d794:	cbz	x1, 40d8a8 <ferror@plt+0xaca8>
  40d798:	mov	w0, #0x20                  	// #32
  40d79c:	bl	402640 <putc@plt>
  40d7a0:	b	40db5c <ferror@plt+0xaf5c>
  40d7a4:	ldr	w8, [x24, #2816]
  40d7a8:	cbz	w8, 40d7d0 <ferror@plt+0xabd0>
  40d7ac:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d7b0:	ldr	x10, [x9, #2824]
  40d7b4:	sub	w8, w8, #0x1
  40d7b8:	mov	w11, #0xa                   	// #10
  40d7bc:	str	w8, [x24, #2816]
  40d7c0:	add	x8, x10, #0x1
  40d7c4:	str	x8, [x9, #2824]
  40d7c8:	strb	w11, [x10]
  40d7cc:	b	40d7d8 <ferror@plt+0xabd8>
  40d7d0:	mov	w0, #0xa                   	// #10
  40d7d4:	bl	40dc5c <ferror@plt+0xb05c>
  40d7d8:	str	w21, [x23, #3600]
  40d7dc:	cmp	w20, #0x1
  40d7e0:	b.lt	40d480 <ferror@plt+0xa880>  // b.tstop
  40d7e4:	add	w20, w20, #0x1
  40d7e8:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d7ec:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d7f0:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d7f4:	mov	w26, #0x1                   	// #1
  40d7f8:	ldrb	w8, [x22, #2832]
  40d7fc:	tbnz	w8, #0, 40d810 <ferror@plt+0xac10>
  40d800:	ldr	w8, [x23, #3600]
  40d804:	strb	w26, [x22, #2832]
  40d808:	add	w8, w8, #0x1
  40d80c:	str	w8, [x23, #3600]
  40d810:	ldr	x1, [x21, #2712]
  40d814:	cbz	x1, 40d824 <ferror@plt+0xac24>
  40d818:	ldrb	w0, [x19]
  40d81c:	bl	402640 <putc@plt>
  40d820:	b	40d854 <ferror@plt+0xac54>
  40d824:	ldr	w8, [x24, #2816]
  40d828:	cbz	w8, 40d84c <ferror@plt+0xac4c>
  40d82c:	sub	w8, w8, #0x1
  40d830:	ldr	x9, [x25, #2824]
  40d834:	str	w8, [x24, #2816]
  40d838:	ldrb	w8, [x19]
  40d83c:	add	x10, x9, #0x1
  40d840:	str	x10, [x25, #2824]
  40d844:	strb	w8, [x9]
  40d848:	b	40d854 <ferror@plt+0xac54>
  40d84c:	ldrb	w0, [x19]
  40d850:	bl	40dc5c <ferror@plt+0xb05c>
  40d854:	ldrb	w8, [x19]
  40d858:	cmp	w8, #0xa
  40d85c:	b.ne	40d864 <ferror@plt+0xac64>  // b.any
  40d860:	strb	wzr, [x22, #2832]
  40d864:	sub	w20, w20, #0x1
  40d868:	cmp	w20, #0x1
  40d86c:	add	x19, x19, #0x1
  40d870:	b.gt	40d7f8 <ferror@plt+0xabf8>
  40d874:	b	40d480 <ferror@plt+0xa880>
  40d878:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d87c:	ldr	w9, [x8, #2816]
  40d880:	cbz	w9, 40d8d4 <ferror@plt+0xacd4>
  40d884:	sub	w9, w9, #0x1
  40d888:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d88c:	ldr	x11, [x10, #2824]
  40d890:	str	w9, [x8, #2816]
  40d894:	ldrb	w8, [x19]
  40d898:	add	x9, x11, #0x1
  40d89c:	str	x9, [x10, #2824]
  40d8a0:	strb	w8, [x11]
  40d8a4:	b	40d8dc <ferror@plt+0xacdc>
  40d8a8:	ldr	w8, [x24, #2816]
  40d8ac:	cbz	w8, 40db54 <ferror@plt+0xaf54>
  40d8b0:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d8b4:	ldr	x10, [x9, #2824]
  40d8b8:	sub	w8, w8, #0x1
  40d8bc:	mov	w11, #0x20                  	// #32
  40d8c0:	str	w8, [x24, #2816]
  40d8c4:	add	x8, x10, #0x1
  40d8c8:	str	x8, [x9, #2824]
  40d8cc:	strb	w11, [x10]
  40d8d0:	b	40db5c <ferror@plt+0xaf5c>
  40d8d4:	ldrb	w0, [x19]
  40d8d8:	bl	40dc5c <ferror@plt+0xb05c>
  40d8dc:	add	x19, x19, #0x1
  40d8e0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d8e4:	ldr	x1, [x8, #2712]
  40d8e8:	cbz	x1, 40d8f8 <ferror@plt+0xacf8>
  40d8ec:	ldrb	w0, [x19]
  40d8f0:	bl	402640 <putc@plt>
  40d8f4:	b	40d930 <ferror@plt+0xad30>
  40d8f8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d8fc:	ldr	w9, [x8, #2816]
  40d900:	cbz	w9, 40d928 <ferror@plt+0xad28>
  40d904:	sub	w9, w9, #0x1
  40d908:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d90c:	ldr	x11, [x10, #2824]
  40d910:	str	w9, [x8, #2816]
  40d914:	ldrb	w8, [x19]
  40d918:	add	x9, x11, #0x1
  40d91c:	str	x9, [x10, #2824]
  40d920:	strb	w8, [x11]
  40d924:	b	40d930 <ferror@plt+0xad30>
  40d928:	ldrb	w0, [x19]
  40d92c:	bl	40dc5c <ferror@plt+0xb05c>
  40d930:	add	x19, x19, #0x1
  40d934:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d938:	ldr	x1, [x8, #2712]
  40d93c:	cbz	x1, 40d94c <ferror@plt+0xad4c>
  40d940:	ldrb	w0, [x19]
  40d944:	bl	402640 <putc@plt>
  40d948:	b	40d984 <ferror@plt+0xad84>
  40d94c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d950:	ldr	w9, [x8, #2816]
  40d954:	cbz	w9, 40d97c <ferror@plt+0xad7c>
  40d958:	sub	w9, w9, #0x1
  40d95c:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d960:	ldr	x11, [x10, #2824]
  40d964:	str	w9, [x8, #2816]
  40d968:	ldrb	w8, [x19]
  40d96c:	add	x9, x11, #0x1
  40d970:	str	x9, [x10, #2824]
  40d974:	strb	w8, [x11]
  40d978:	b	40d984 <ferror@plt+0xad84>
  40d97c:	ldrb	w0, [x19]
  40d980:	bl	40dc5c <ferror@plt+0xb05c>
  40d984:	add	x19, x19, #0x1
  40d988:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d98c:	ldr	x1, [x8, #2712]
  40d990:	cbz	x1, 40d9a0 <ferror@plt+0xada0>
  40d994:	ldrb	w0, [x19]
  40d998:	bl	402640 <putc@plt>
  40d99c:	b	40d9d8 <ferror@plt+0xadd8>
  40d9a0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d9a4:	ldr	w9, [x8, #2816]
  40d9a8:	cbz	w9, 40d9d0 <ferror@plt+0xadd0>
  40d9ac:	sub	w9, w9, #0x1
  40d9b0:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d9b4:	ldr	x11, [x10, #2824]
  40d9b8:	str	w9, [x8, #2816]
  40d9bc:	ldrb	w8, [x19]
  40d9c0:	add	x9, x11, #0x1
  40d9c4:	str	x9, [x10, #2824]
  40d9c8:	strb	w8, [x11]
  40d9cc:	b	40d9d8 <ferror@plt+0xadd8>
  40d9d0:	ldrb	w0, [x19]
  40d9d4:	bl	40dc5c <ferror@plt+0xb05c>
  40d9d8:	add	x19, x19, #0x1
  40d9dc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d9e0:	ldr	x1, [x8, #2712]
  40d9e4:	cbz	x1, 40d9f4 <ferror@plt+0xadf4>
  40d9e8:	ldrb	w0, [x19]
  40d9ec:	bl	402640 <putc@plt>
  40d9f0:	b	40da2c <ferror@plt+0xae2c>
  40d9f4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40d9f8:	ldr	w9, [x8, #2816]
  40d9fc:	cbz	w9, 40da24 <ferror@plt+0xae24>
  40da00:	sub	w9, w9, #0x1
  40da04:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40da08:	ldr	x11, [x10, #2824]
  40da0c:	str	w9, [x8, #2816]
  40da10:	ldrb	w8, [x19]
  40da14:	add	x9, x11, #0x1
  40da18:	str	x9, [x10, #2824]
  40da1c:	strb	w8, [x11]
  40da20:	b	40da2c <ferror@plt+0xae2c>
  40da24:	ldrb	w0, [x19]
  40da28:	bl	40dc5c <ferror@plt+0xb05c>
  40da2c:	add	x19, x19, #0x1
  40da30:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40da34:	ldr	x1, [x8, #2712]
  40da38:	cbz	x1, 40da48 <ferror@plt+0xae48>
  40da3c:	ldrb	w0, [x19]
  40da40:	bl	402640 <putc@plt>
  40da44:	b	40da80 <ferror@plt+0xae80>
  40da48:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40da4c:	ldr	w9, [x8, #2816]
  40da50:	cbz	w9, 40da78 <ferror@plt+0xae78>
  40da54:	sub	w9, w9, #0x1
  40da58:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40da5c:	ldr	x11, [x10, #2824]
  40da60:	str	w9, [x8, #2816]
  40da64:	ldrb	w8, [x19]
  40da68:	add	x9, x11, #0x1
  40da6c:	str	x9, [x10, #2824]
  40da70:	strb	w8, [x11]
  40da74:	b	40da80 <ferror@plt+0xae80>
  40da78:	ldrb	w0, [x19]
  40da7c:	bl	40dc5c <ferror@plt+0xb05c>
  40da80:	add	x19, x19, #0x1
  40da84:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40da88:	ldr	x1, [x8, #2712]
  40da8c:	cbz	x1, 40da9c <ferror@plt+0xae9c>
  40da90:	ldrb	w0, [x19]
  40da94:	bl	402640 <putc@plt>
  40da98:	b	40dad4 <ferror@plt+0xaed4>
  40da9c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40daa0:	ldr	w9, [x8, #2816]
  40daa4:	cbz	w9, 40dacc <ferror@plt+0xaecc>
  40daa8:	sub	w9, w9, #0x1
  40daac:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dab0:	ldr	x11, [x10, #2824]
  40dab4:	str	w9, [x8, #2816]
  40dab8:	ldrb	w8, [x19]
  40dabc:	add	x9, x11, #0x1
  40dac0:	str	x9, [x10, #2824]
  40dac4:	strb	w8, [x11]
  40dac8:	b	40dad4 <ferror@plt+0xaed4>
  40dacc:	ldrb	w0, [x19]
  40dad0:	bl	40dc5c <ferror@plt+0xb05c>
  40dad4:	add	x19, x19, #0x1
  40dad8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dadc:	ldr	x1, [x8, #2712]
  40dae0:	cbz	x1, 40db04 <ferror@plt+0xaf04>
  40dae4:	ldrb	w0, [x19]
  40dae8:	ldp	x20, x19, [sp, #80]
  40daec:	ldp	x22, x21, [sp, #64]
  40daf0:	ldp	x24, x23, [sp, #48]
  40daf4:	ldp	x26, x25, [sp, #32]
  40daf8:	ldr	x27, [sp, #16]
  40dafc:	ldp	x29, x30, [sp], #96
  40db00:	b	402640 <putc@plt>
  40db04:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40db08:	ldr	w9, [x8, #2816]
  40db0c:	cbz	w9, 40db34 <ferror@plt+0xaf34>
  40db10:	sub	w9, w9, #0x1
  40db14:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40db18:	ldr	x11, [x10, #2824]
  40db1c:	str	w9, [x8, #2816]
  40db20:	ldrb	w8, [x19]
  40db24:	add	x9, x11, #0x1
  40db28:	str	x9, [x10, #2824]
  40db2c:	strb	w8, [x11]
  40db30:	b	40d480 <ferror@plt+0xa880>
  40db34:	ldrb	w0, [x19]
  40db38:	ldp	x20, x19, [sp, #80]
  40db3c:	ldp	x22, x21, [sp, #64]
  40db40:	ldp	x24, x23, [sp, #48]
  40db44:	ldp	x26, x25, [sp, #32]
  40db48:	ldr	x27, [sp, #16]
  40db4c:	ldp	x29, x30, [sp], #96
  40db50:	b	40dc5c <ferror@plt+0xb05c>
  40db54:	mov	w0, #0x20                  	// #32
  40db58:	bl	40dc5c <ferror@plt+0xb05c>
  40db5c:	ldr	x1, [x25, #2712]
  40db60:	cbz	x1, 40db70 <ferror@plt+0xaf70>
  40db64:	mov	w0, #0x22                  	// #34
  40db68:	bl	402640 <putc@plt>
  40db6c:	b	40dba4 <ferror@plt+0xafa4>
  40db70:	ldr	w8, [x24, #2816]
  40db74:	cbz	w8, 40db9c <ferror@plt+0xaf9c>
  40db78:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40db7c:	ldr	x10, [x9, #2824]
  40db80:	sub	w8, w8, #0x1
  40db84:	mov	w11, #0x22                  	// #34
  40db88:	str	w8, [x24, #2816]
  40db8c:	add	x8, x10, #0x1
  40db90:	str	x8, [x9, #2824]
  40db94:	strb	w11, [x10]
  40db98:	b	40dba4 <ferror@plt+0xafa4>
  40db9c:	mov	w0, #0x22                  	// #34
  40dba0:	bl	40dc5c <ferror@plt+0xb05c>
  40dba4:	ldr	x10, [x26, #3544]
  40dba8:	ldr	x1, [x25, #2712]
  40dbac:	ldrb	w8, [x10]
  40dbb0:	cmp	x1, #0x0
  40dbb4:	cset	w9, ne  // ne = any
  40dbb8:	cbz	w8, 40dc14 <ferror@plt+0xb014>
  40dbbc:	add	x26, x10, #0x1
  40dbc0:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dbc4:	tbz	w9, #0, 40dbd4 <ferror@plt+0xafd4>
  40dbc8:	and	w0, w8, #0xff
  40dbcc:	bl	402640 <putc@plt>
  40dbd0:	b	40dc00 <ferror@plt+0xb000>
  40dbd4:	ldr	w9, [x24, #2816]
  40dbd8:	cbz	w9, 40dbf8 <ferror@plt+0xaff8>
  40dbdc:	ldr	x10, [x27, #2824]
  40dbe0:	sub	w9, w9, #0x1
  40dbe4:	str	w9, [x24, #2816]
  40dbe8:	add	x9, x10, #0x1
  40dbec:	str	x9, [x27, #2824]
  40dbf0:	strb	w8, [x10]
  40dbf4:	b	40dc00 <ferror@plt+0xb000>
  40dbf8:	and	w0, w8, #0xff
  40dbfc:	bl	40dc5c <ferror@plt+0xb05c>
  40dc00:	ldrb	w8, [x26], #1
  40dc04:	ldr	x1, [x25, #2712]
  40dc08:	cmp	x1, #0x0
  40dc0c:	cset	w9, ne  // ne = any
  40dc10:	cbnz	w8, 40dbc4 <ferror@plt+0xafc4>
  40dc14:	cbz	w9, 40dc24 <ferror@plt+0xb024>
  40dc18:	mov	w0, #0x22                  	// #34
  40dc1c:	bl	402640 <putc@plt>
  40dc20:	b	40d76c <ferror@plt+0xab6c>
  40dc24:	ldr	w8, [x24, #2816]
  40dc28:	cbz	w8, 40dc50 <ferror@plt+0xb050>
  40dc2c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dc30:	ldr	x10, [x9, #2824]
  40dc34:	sub	w8, w8, #0x1
  40dc38:	mov	w11, #0x22                  	// #34
  40dc3c:	str	w8, [x24, #2816]
  40dc40:	add	x8, x10, #0x1
  40dc44:	str	x8, [x9, #2824]
  40dc48:	strb	w11, [x10]
  40dc4c:	b	40d76c <ferror@plt+0xab6c>
  40dc50:	mov	w0, #0x22                  	// #34
  40dc54:	bl	40dc5c <ferror@plt+0xb05c>
  40dc58:	b	40d76c <ferror@plt+0xab6c>
  40dc5c:	stp	x29, x30, [sp, #-32]!
  40dc60:	str	x19, [sp, #16]
  40dc64:	mov	w19, w0
  40dc68:	mov	w0, #0x1                   	// #1
  40dc6c:	mov	x29, sp
  40dc70:	bl	40d0e4 <ferror@plt+0xa4e4>
  40dc74:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dc78:	ldr	x1, [x8, #2712]
  40dc7c:	cbz	x1, 40dc90 <ferror@plt+0xb090>
  40dc80:	mov	w0, w19
  40dc84:	ldr	x19, [sp, #16]
  40dc88:	ldp	x29, x30, [sp], #32
  40dc8c:	b	402640 <putc@plt>
  40dc90:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dc94:	ldr	x9, [x8, #2824]
  40dc98:	add	x10, x9, #0x1
  40dc9c:	str	x10, [x8, #2824]
  40dca0:	strb	w19, [x9]
  40dca4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dca8:	ldr	w9, [x8, #2816]
  40dcac:	ldr	x19, [sp, #16]
  40dcb0:	sub	w9, w9, #0x1
  40dcb4:	str	w9, [x8, #2816]
  40dcb8:	ldp	x29, x30, [sp], #32
  40dcbc:	ret
  40dcc0:	sub	sp, sp, #0x50
  40dcc4:	str	x23, [sp, #32]
  40dcc8:	adrp	x23, 436000 <__progname@@GLIBC_2.17+0xab98>
  40dccc:	ldr	w8, [x23, #3604]
  40dcd0:	stp	x29, x30, [sp, #16]
  40dcd4:	add	x29, sp, #0x10
  40dcd8:	stp	x22, x21, [sp, #48]
  40dcdc:	cmp	w8, w0
  40dce0:	stp	x20, x19, [sp, #64]
  40dce4:	str	w0, [x29, #28]
  40dce8:	b.eq	40def0 <ferror@plt+0xb2f0>  // b.none
  40dcec:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dcf0:	ldr	x1, [x20, #2704]
  40dcf4:	mov	w19, w0
  40dcf8:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dcfc:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dd00:	cbz	x1, 40dd2c <ferror@plt+0xb12c>
  40dd04:	ldr	w8, [x1, #12]
  40dd08:	cbz	w8, 40dd90 <ferror@plt+0xb190>
  40dd0c:	ldr	w9, [x22, #2816]
  40dd10:	sub	w8, w8, w9
  40dd14:	str	w8, [x1, #16]
  40dd18:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dd1c:	str	xzr, [x20, #2704]
  40dd20:	str	xzr, [x21, #2824]
  40dd24:	str	xzr, [x8, #2712]
  40dd28:	str	wzr, [x22, #2816]
  40dd2c:	str	w19, [x23, #3604]
  40dd30:	tbnz	w19, #31, 40def0 <ferror@plt+0xb2f0>
  40dd34:	cbz	w19, 40ddd0 <ferror@plt+0xb1d0>
  40dd38:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dd3c:	ldr	x0, [x23, #2672]
  40dd40:	adrp	x1, 40e000 <ferror@plt+0xb400>
  40dd44:	add	x1, x1, #0x24
  40dd48:	add	x2, x29, #0x1c
  40dd4c:	ldr	x8, [x0]
  40dd50:	add	x3, sp, #0x8
  40dd54:	ldr	x8, [x8, #24]
  40dd58:	blr	x8
  40dd5c:	tbz	w0, #0, 40dd78 <ferror@plt+0xb178>
  40dd60:	ldr	x19, [sp, #8]
  40dd64:	ldr	w9, [x29, #28]
  40dd68:	ldr	w8, [x19, #8]
  40dd6c:	cmp	w8, w9
  40dd70:	b.ne	40dd78 <ferror@plt+0xb178>  // b.any
  40dd74:	cbnz	x19, 40de90 <ferror@plt+0xb290>
  40dd78:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dd7c:	ldr	x19, [x8, #2840]
  40dd80:	cbz	x19, 40dddc <ferror@plt+0xb1dc>
  40dd84:	ldr	x9, [x19]
  40dd88:	str	x9, [x8, #2840]
  40dd8c:	b	40de6c <ferror@plt+0xb26c>
  40dd90:	ldr	x0, [x1]
  40dd94:	ldr	w8, [x1, #16]
  40dd98:	cbz	x0, 40df08 <ferror@plt+0xb308>
  40dd9c:	cbz	w8, 40dd18 <ferror@plt+0xb118>
  40dda0:	ldr	w8, [x1, #8]
  40dda4:	str	xzr, [x1]
  40dda8:	mov	w1, w8
  40ddac:	bl	40df80 <ferror@plt+0xb380>
  40ddb0:	cbz	w0, 40dd18 <ferror@plt+0xb118>
  40ddb4:	bl	402b80 <__errno_location@plt>
  40ddb8:	ldr	w1, [x0]
  40ddbc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40ddc0:	add	x2, x2, #0xbb3
  40ddc4:	mov	w0, wzr
  40ddc8:	bl	402d0c <ferror@plt+0x10c>
  40ddcc:	b	40dd18 <ferror@plt+0xb118>
  40ddd0:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ddd4:	add	x19, x19, #0xa78
  40ddd8:	b	40de90 <ferror@plt+0xb290>
  40dddc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dde0:	add	x8, x8, #0xab8
  40dde4:	ldp	x8, x9, [x8]
  40dde8:	sub	x9, x9, x8
  40ddec:	cmp	x9, #0x17
  40ddf0:	b.hi	40de0c <ferror@plt+0xb20c>  // b.pmore
  40ddf4:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ddf8:	add	x19, x19, #0xaa0
  40ddfc:	mov	w1, #0x18                  	// #24
  40de00:	mov	x0, x19
  40de04:	bl	4159e4 <_obstack_newchunk@@Base>
  40de08:	ldr	x8, [x19, #24]
  40de0c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40de10:	add	x9, x9, #0xab0
  40de14:	ldr	x19, [x9]
  40de18:	add	x8, x8, #0x18
  40de1c:	str	x8, [x9, #8]
  40de20:	cmp	x8, x19
  40de24:	b.ne	40de38 <ferror@plt+0xb238>  // b.any
  40de28:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40de2c:	ldrb	w10, [x9, #2800]
  40de30:	orr	w10, w10, #0x2
  40de34:	strb	w10, [x9, #2800]
  40de38:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40de3c:	add	x9, x9, #0xaa8
  40de40:	ldr	x10, [x9, #40]
  40de44:	ldr	x11, [x9]
  40de48:	ldr	x12, [x9, #24]
  40de4c:	add	x8, x10, x8
  40de50:	bic	x8, x8, x10
  40de54:	sub	x13, x12, x11
  40de58:	sub	x10, x8, x11
  40de5c:	cmp	x10, x13
  40de60:	csel	x8, x12, x8, hi  // hi = pmore
  40de64:	stp	x8, x8, [x9, #8]
  40de68:	stp	wzr, wzr, [x19, #12]
  40de6c:	str	xzr, [x19]
  40de70:	ldr	w8, [x29, #28]
  40de74:	mov	x1, x19
  40de78:	str	w8, [x19, #8]
  40de7c:	ldr	x0, [x23, #2672]
  40de80:	ldr	x8, [x0]
  40de84:	ldr	x8, [x8, #32]
  40de88:	blr	x8
  40de8c:	tbnz	w0, #31, 40df3c <ferror@plt+0xb33c>
  40de90:	str	x19, [x20, #2704]
  40de94:	ldr	w8, [x19, #12]
  40de98:	cbz	w8, 40deb8 <ferror@plt+0xb2b8>
  40de9c:	ldr	x9, [x19]
  40dea0:	ldrsw	x10, [x19, #16]
  40dea4:	add	x9, x9, x10
  40dea8:	sub	w8, w8, w10
  40deac:	str	x9, [x21, #2824]
  40deb0:	str	w8, [x22, #2816]
  40deb4:	b	40dee4 <ferror@plt+0xb2e4>
  40deb8:	ldr	x0, [x19]
  40debc:	cbnz	x0, 40dedc <ferror@plt+0xb2dc>
  40dec0:	ldr	w8, [x19, #16]
  40dec4:	cbz	w8, 40dedc <ferror@plt+0xb2dc>
  40dec8:	ldr	w0, [x19, #8]
  40decc:	mov	w1, wzr
  40ded0:	bl	40e038 <ferror@plt+0xb438>
  40ded4:	ldr	x8, [x20, #2704]
  40ded8:	str	x0, [x8]
  40dedc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dee0:	str	x0, [x8, #2712]
  40dee4:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40dee8:	mov	w9, #0xffffffff            	// #-1
  40deec:	str	w9, [x8, #3600]
  40def0:	ldp	x20, x19, [sp, #64]
  40def4:	ldp	x22, x21, [sp, #48]
  40def8:	ldr	x23, [sp, #32]
  40defc:	ldp	x29, x30, [sp, #16]
  40df00:	add	sp, sp, #0x50
  40df04:	ret
  40df08:	cbnz	w8, 40df40 <ferror@plt+0xb340>
  40df0c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40df10:	ldr	x0, [x8, #2672]
  40df14:	ldr	x8, [x0]
  40df18:	ldr	x8, [x8, #40]
  40df1c:	blr	x8
  40df20:	tbz	w0, #0, 40df60 <ferror@plt+0xb360>
  40df24:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40df28:	ldr	x9, [x20, #2704]
  40df2c:	ldr	x10, [x8, #2840]
  40df30:	str	x10, [x9]
  40df34:	str	x9, [x8, #2840]
  40df38:	b	40dd18 <ferror@plt+0xb118>
  40df3c:	bl	4150b0 <ferror@plt+0x124b0>
  40df40:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40df44:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40df48:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x240c>
  40df4c:	add	x0, x0, #0xb73
  40df50:	add	x1, x1, #0xb8b
  40df54:	add	x3, x3, #0xb94
  40df58:	mov	w2, #0x2dd                 	// #733
  40df5c:	bl	402b70 <__assert_fail@plt>
  40df60:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40df64:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40df68:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x240c>
  40df6c:	add	x0, x0, #0xbad
  40df70:	add	x1, x1, #0xb8b
  40df74:	add	x3, x3, #0xb94
  40df78:	mov	w2, #0x2df                 	// #735
  40df7c:	bl	402b70 <__assert_fail@plt>
  40df80:	stp	x29, x30, [sp, #-48]!
  40df84:	stp	x22, x21, [sp, #16]
  40df88:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40df8c:	ldr	w8, [x21, #2808]
  40df90:	stp	x20, x19, [sp, #32]
  40df94:	mov	x29, sp
  40df98:	cmp	w8, w1
  40df9c:	b.eq	40dfb4 <ferror@plt+0xb3b4>  // b.none
  40dfa0:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40dfa4:	ldr	w9, [x22, #2812]
  40dfa8:	mov	w19, w1
  40dfac:	cmp	w9, w1
  40dfb0:	b.ne	40dfc8 <ferror@plt+0xb3c8>  // b.any
  40dfb4:	mov	w0, wzr
  40dfb8:	ldp	x20, x19, [sp, #32]
  40dfbc:	ldp	x22, x21, [sp, #16]
  40dfc0:	ldp	x29, x30, [sp], #48
  40dfc4:	ret
  40dfc8:	adrp	x10, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40dfcc:	ldrb	w10, [x10, #2892]
  40dfd0:	mov	x20, x0
  40dfd4:	cmp	w10, #0x1
  40dfd8:	b.ne	40dff0 <ferror@plt+0xb3f0>  // b.any
  40dfdc:	adrp	x22, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40dfe0:	cbz	w8, 40e004 <ferror@plt+0xb404>
  40dfe4:	ldr	x0, [x22, #2848]
  40dfe8:	bl	410698 <ferror@plt+0xda98>
  40dfec:	b	40e008 <ferror@plt+0xb408>
  40dff0:	adrp	x21, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40dff4:	cbz	w9, 40e014 <ferror@plt+0xb414>
  40dff8:	ldr	x0, [x21, #2856]
  40dffc:	bl	410698 <ferror@plt+0xda98>
  40e000:	b	40e018 <ferror@plt+0xb418>
  40e004:	mov	w0, wzr
  40e008:	str	x20, [x22, #2848]
  40e00c:	str	w19, [x21, #2808]
  40e010:	b	40dfb8 <ferror@plt+0xb3b8>
  40e014:	mov	w0, wzr
  40e018:	str	x20, [x21, #2856]
  40e01c:	str	w19, [x22, #2812]
  40e020:	b	40dfb8 <ferror@plt+0xb3b8>
  40e024:	ldr	w8, [x0, #8]
  40e028:	ldr	w9, [x1]
  40e02c:	cmp	w8, w9
  40e030:	cset	w0, ge  // ge = tcont
  40e034:	ret
  40e038:	stp	x29, x30, [sp, #-32]!
  40e03c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e040:	ldr	w8, [x8, #2808]
  40e044:	stp	x20, x19, [sp, #16]
  40e048:	mov	w20, w1
  40e04c:	mov	x29, sp
  40e050:	cmp	w8, w0
  40e054:	b.ne	40e09c <ferror@plt+0xb49c>  // b.any
  40e058:	adrp	x19, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40e05c:	tbz	w20, #0, 40e08c <ferror@plt+0xb48c>
  40e060:	ldr	x0, [x19, #2848]
  40e064:	mov	x1, xzr
  40e068:	mov	w2, wzr
  40e06c:	bl	4157d0 <ferror@plt+0x12bd0>
  40e070:	cbz	w0, 40e08c <ferror@plt+0xb48c>
  40e074:	bl	402b80 <__errno_location@plt>
  40e078:	ldr	w1, [x0]
  40e07c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40e080:	add	x2, x2, #0xd27
  40e084:	mov	w0, #0x1                   	// #1
  40e088:	bl	402d0c <ferror@plt+0x10c>
  40e08c:	ldr	x19, [x19, #2848]
  40e090:	adrp	x8, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40e094:	strb	wzr, [x8, #2892]
  40e098:	b	40e150 <ferror@plt+0xb550>
  40e09c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e0a0:	ldr	w8, [x8, #2812]
  40e0a4:	cmp	w8, w0
  40e0a8:	b.ne	40e0f4 <ferror@plt+0xb4f4>  // b.any
  40e0ac:	adrp	x19, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40e0b0:	tbz	w20, #0, 40e0e0 <ferror@plt+0xb4e0>
  40e0b4:	ldr	x0, [x19, #2856]
  40e0b8:	mov	x1, xzr
  40e0bc:	mov	w2, wzr
  40e0c0:	bl	4157d0 <ferror@plt+0x12bd0>
  40e0c4:	cbz	w0, 40e0e0 <ferror@plt+0xb4e0>
  40e0c8:	bl	402b80 <__errno_location@plt>
  40e0cc:	ldr	w1, [x0]
  40e0d0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40e0d4:	add	x2, x2, #0xd27
  40e0d8:	mov	w0, #0x1                   	// #1
  40e0dc:	bl	402d0c <ferror@plt+0x10c>
  40e0e0:	ldr	x19, [x19, #2856]
  40e0e4:	adrp	x8, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40e0e8:	mov	w9, #0x1                   	// #1
  40e0ec:	strb	w9, [x8, #2892]
  40e0f0:	b	40e150 <ferror@plt+0xb550>
  40e0f4:	bl	40e7b8 <ferror@plt+0xbbb8>
  40e0f8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40e0fc:	add	x1, x1, #0xd44
  40e100:	bl	410520 <ferror@plt+0xd920>
  40e104:	mov	x19, x0
  40e108:	cbz	x0, 40e138 <ferror@plt+0xb538>
  40e10c:	mov	x0, x19
  40e110:	bl	4026d0 <fileno@plt>
  40e114:	mov	w1, #0x1                   	// #1
  40e118:	bl	410898 <ferror@plt+0xdc98>
  40e11c:	cbz	w0, 40e160 <ferror@plt+0xb560>
  40e120:	bl	402b80 <__errno_location@plt>
  40e124:	ldr	w1, [x0]
  40e128:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40e12c:	add	x2, x2, #0xcd7
  40e130:	mov	w0, wzr
  40e134:	b	40e14c <ferror@plt+0xb54c>
  40e138:	bl	402b80 <__errno_location@plt>
  40e13c:	ldr	w1, [x0]
  40e140:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40e144:	add	x2, x2, #0xca0
  40e148:	mov	w0, #0x1                   	// #1
  40e14c:	bl	402d0c <ferror@plt+0x10c>
  40e150:	mov	x0, x19
  40e154:	ldp	x20, x19, [sp, #16]
  40e158:	ldp	x29, x30, [sp], #32
  40e15c:	ret
  40e160:	tbnz	w20, #0, 40e150 <ferror@plt+0xb550>
  40e164:	mov	w2, #0x2                   	// #2
  40e168:	mov	x0, x19
  40e16c:	mov	x1, xzr
  40e170:	bl	4157d0 <ferror@plt+0x12bd0>
  40e174:	cbz	w0, 40e150 <ferror@plt+0xb550>
  40e178:	bl	402b80 <__errno_location@plt>
  40e17c:	ldr	w1, [x0]
  40e180:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40e184:	add	x2, x2, #0xd27
  40e188:	b	40e148 <ferror@plt+0xb548>
  40e18c:	stp	x29, x30, [sp, #-48]!
  40e190:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e194:	ldr	x8, [x8, #2704]
  40e198:	stp	x22, x21, [sp, #16]
  40e19c:	stp	x20, x19, [sp, #32]
  40e1a0:	mov	x29, sp
  40e1a4:	cbz	x8, 40e208 <ferror@plt+0xb608>
  40e1a8:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e1ac:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x240c>
  40e1b0:	mov	x19, x0
  40e1b4:	add	x20, x20, #0xb20
  40e1b8:	add	x21, x21, #0xbdd
  40e1bc:	mov	w1, #0x1                   	// #1
  40e1c0:	mov	w2, #0x4000                	// #16384
  40e1c4:	mov	x0, x20
  40e1c8:	mov	x3, x19
  40e1cc:	bl	4029e0 <fread@plt>
  40e1d0:	mov	x22, x0
  40e1d4:	mov	x0, x19
  40e1d8:	bl	402c00 <ferror@plt>
  40e1dc:	cbz	w0, 40e1f4 <ferror@plt+0xb5f4>
  40e1e0:	bl	402b80 <__errno_location@plt>
  40e1e4:	ldr	w1, [x0]
  40e1e8:	mov	w0, #0x1                   	// #1
  40e1ec:	mov	x2, x21
  40e1f0:	bl	402d0c <ferror@plt+0x10c>
  40e1f4:	cbz	x22, 40e208 <ferror@plt+0xb608>
  40e1f8:	mov	x0, x20
  40e1fc:	mov	w1, w22
  40e200:	bl	40d018 <ferror@plt+0xa418>
  40e204:	b	40e1bc <ferror@plt+0xb5bc>
  40e208:	ldp	x20, x19, [sp, #32]
  40e20c:	ldp	x22, x21, [sp, #16]
  40e210:	ldp	x29, x30, [sp], #48
  40e214:	ret
  40e218:	sub	sp, sp, #0x20
  40e21c:	stp	x29, x30, [sp, #16]
  40e220:	add	x29, sp, #0x10
  40e224:	cmp	w0, #0x1
  40e228:	stur	w0, [x29, #-4]
  40e22c:	b.lt	40e280 <ferror@plt+0xb680>  // b.tstop
  40e230:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40e234:	ldr	w8, [x8, #3604]
  40e238:	cmp	w8, w0
  40e23c:	b.eq	40e280 <ferror@plt+0xb680>  // b.none
  40e240:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e244:	ldr	x0, [x8, #2672]
  40e248:	adrp	x1, 40e000 <ferror@plt+0xb400>
  40e24c:	add	x1, x1, #0x24
  40e250:	sub	x2, x29, #0x4
  40e254:	ldr	x8, [x0]
  40e258:	mov	x3, sp
  40e25c:	ldr	x8, [x8, #24]
  40e260:	blr	x8
  40e264:	tbz	w0, #0, 40e280 <ferror@plt+0xb680>
  40e268:	ldr	x0, [sp]
  40e26c:	ldur	w9, [x29, #-4]
  40e270:	ldr	w8, [x0, #8]
  40e274:	cmp	w8, w9
  40e278:	b.ne	40e280 <ferror@plt+0xb680>  // b.any
  40e27c:	bl	40e28c <ferror@plt+0xb68c>
  40e280:	ldp	x29, x30, [sp, #16]
  40e284:	add	sp, sp, #0x20
  40e288:	ret
  40e28c:	stp	x29, x30, [sp, #-80]!
  40e290:	stp	x24, x23, [sp, #32]
  40e294:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e298:	ldr	x8, [x24, #2704]
  40e29c:	stp	x20, x19, [sp, #64]
  40e2a0:	mov	x19, x0
  40e2a4:	stp	x26, x25, [sp, #16]
  40e2a8:	stp	x22, x21, [sp, #48]
  40e2ac:	mov	x29, sp
  40e2b0:	cbz	x8, 40e460 <ferror@plt+0xb860>
  40e2b4:	ldr	w9, [x19, #12]
  40e2b8:	ldr	x10, [x8]
  40e2bc:	cbz	w9, 40e2e4 <ferror@plt+0xb6e4>
  40e2c0:	cbz	x10, 40e308 <ferror@plt+0xb708>
  40e2c4:	adrp	x8, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40e2c8:	ldr	w10, [x8, #2888]
  40e2cc:	sub	w9, w10, w9
  40e2d0:	str	w9, [x8, #2888]
  40e2d4:	ldr	x0, [x19]
  40e2d8:	ldr	w1, [x19, #16]
  40e2dc:	bl	40d018 <ferror@plt+0xa418>
  40e2e0:	b	40e454 <ferror@plt+0xb854>
  40e2e4:	cbz	x10, 40e368 <ferror@plt+0xb768>
  40e2e8:	ldr	x0, [x19]
  40e2ec:	cbnz	x0, 40e300 <ferror@plt+0xb700>
  40e2f0:	ldr	w0, [x19, #8]
  40e2f4:	mov	w1, #0x1                   	// #1
  40e2f8:	bl	40e038 <ferror@plt+0xb438>
  40e2fc:	str	x0, [x19]
  40e300:	bl	40e18c <ferror@plt+0xb58c>
  40e304:	b	40e454 <ferror@plt+0xb854>
  40e308:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e30c:	add	x9, x9, #0xa78
  40e310:	cmp	x8, x9
  40e314:	b.eq	40e528 <ferror@plt+0xb928>  // b.none
  40e318:	ldr	w9, [x8, #16]
  40e31c:	cbnz	w9, 40e528 <ferror@plt+0xb928>
  40e320:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e324:	ldr	x9, [x9, #2712]
  40e328:	cbnz	x9, 40e528 <ferror@plt+0xb928>
  40e32c:	ldr	x9, [x19]
  40e330:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e334:	str	x9, [x8]
  40e338:	ldr	w9, [x19, #12]
  40e33c:	str	w9, [x8, #12]
  40e340:	ldr	x8, [x19]
  40e344:	ldrsw	x9, [x19, #16]
  40e348:	add	x8, x8, x9
  40e34c:	str	x8, [x10, #2824]
  40e350:	ldr	w8, [x19, #12]
  40e354:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e358:	sub	w8, w8, w9
  40e35c:	str	w8, [x10, #2816]
  40e360:	str	xzr, [x19]
  40e364:	b	40e454 <ferror@plt+0xb854>
  40e368:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e36c:	add	x9, x9, #0xa78
  40e370:	cmp	x8, x9
  40e374:	b.eq	40e548 <ferror@plt+0xb948>  // b.none
  40e378:	ldr	w9, [x8, #16]
  40e37c:	cbnz	w9, 40e548 <ferror@plt+0xb948>
  40e380:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e384:	ldr	x9, [x25, #2712]
  40e388:	cbnz	x9, 40e548 <ferror@plt+0xb948>
  40e38c:	ldr	w22, [x19, #8]
  40e390:	ldr	w20, [x8, #8]
  40e394:	mov	w0, w22
  40e398:	bl	40e7b8 <ferror@plt+0xbbb8>
  40e39c:	bl	415068 <ferror@plt+0x12468>
  40e3a0:	mov	x21, x0
  40e3a4:	mov	w0, w20
  40e3a8:	bl	40e7b8 <ferror@plt+0xbbb8>
  40e3ac:	adrp	x26, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40e3b0:	ldr	x8, [x26, #2864]
  40e3b4:	mov	x23, x0
  40e3b8:	mov	x1, x23
  40e3bc:	mov	x0, x8
  40e3c0:	bl	40fe6c <ferror@plt+0xd26c>
  40e3c4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e3c8:	add	x8, x8, #0xaf8
  40e3cc:	ldr	w9, [x8]
  40e3d0:	cmp	w9, w22
  40e3d4:	b.eq	40e3ec <ferror@plt+0xb7ec>  // b.none
  40e3d8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e3dc:	add	x8, x8, #0xafc
  40e3e0:	ldr	w9, [x8]
  40e3e4:	cmp	w9, w22
  40e3e8:	b.ne	40e3f0 <ferror@plt+0xb7f0>  // b.any
  40e3ec:	str	w20, [x8]
  40e3f0:	mov	x0, x21
  40e3f4:	mov	x1, x23
  40e3f8:	bl	402a60 <rename@plt>
  40e3fc:	cbz	w0, 40e418 <ferror@plt+0xb818>
  40e400:	bl	402b80 <__errno_location@plt>
  40e404:	ldr	w1, [x0]
  40e408:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40e40c:	add	x2, x2, #0xca0
  40e410:	mov	w0, #0x1                   	// #1
  40e414:	bl	402d0c <ferror@plt+0x10c>
  40e418:	ldr	x0, [x26, #2864]
  40e41c:	mov	x1, x21
  40e420:	bl	40fef0 <ferror@plt+0xd2f0>
  40e424:	mov	x0, x21
  40e428:	bl	4029f0 <free@plt>
  40e42c:	mov	w0, w20
  40e430:	mov	w1, wzr
  40e434:	bl	40e038 <ferror@plt+0xb438>
  40e438:	ldr	x8, [x24, #2704]
  40e43c:	mov	w9, #0x1                   	// #1
  40e440:	str	x0, [x8]
  40e444:	str	w9, [x8, #16]
  40e448:	str	x0, [x25, #2712]
  40e44c:	str	xzr, [x19]
  40e450:	str	w9, [x19, #12]
  40e454:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40e458:	mov	w9, #0xffffffff            	// #-1
  40e45c:	str	w9, [x8, #3600]
  40e460:	ldr	w8, [x19, #12]
  40e464:	cbz	w8, 40e490 <ferror@plt+0xb890>
  40e468:	ldr	x9, [x24, #2704]
  40e46c:	cbnz	x9, 40e480 <ferror@plt+0xb880>
  40e470:	adrp	x9, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40e474:	ldr	w10, [x9, #2888]
  40e478:	sub	w8, w10, w8
  40e47c:	str	w8, [x9, #2888]
  40e480:	ldr	x0, [x19]
  40e484:	bl	4029f0 <free@plt>
  40e488:	str	wzr, [x19, #12]
  40e48c:	b	40e4e4 <ferror@plt+0xb8e4>
  40e490:	ldr	x0, [x19]
  40e494:	cbz	x0, 40e4c0 <ferror@plt+0xb8c0>
  40e498:	ldr	w1, [x19, #8]
  40e49c:	str	xzr, [x19]
  40e4a0:	bl	40df80 <ferror@plt+0xb380>
  40e4a4:	cbz	w0, 40e4c0 <ferror@plt+0xb8c0>
  40e4a8:	bl	402b80 <__errno_location@plt>
  40e4ac:	ldr	w1, [x0]
  40e4b0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40e4b4:	add	x2, x2, #0xcfd
  40e4b8:	mov	w0, wzr
  40e4bc:	bl	402d0c <ferror@plt+0x10c>
  40e4c0:	ldr	w0, [x19, #8]
  40e4c4:	bl	40cf80 <ferror@plt+0xa380>
  40e4c8:	cbz	w0, 40e4e4 <ferror@plt+0xb8e4>
  40e4cc:	bl	402b80 <__errno_location@plt>
  40e4d0:	ldr	w1, [x0]
  40e4d4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40e4d8:	add	x2, x2, #0xcfd
  40e4dc:	mov	w0, wzr
  40e4e0:	bl	402d0c <ferror@plt+0x10c>
  40e4e4:	str	wzr, [x19, #16]
  40e4e8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e4ec:	ldr	x0, [x8, #2672]
  40e4f0:	mov	x1, x19
  40e4f4:	ldr	x8, [x0]
  40e4f8:	ldr	x8, [x8, #40]
  40e4fc:	blr	x8
  40e500:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e504:	ldr	x9, [x8, #2840]
  40e508:	str	x9, [x19]
  40e50c:	str	x19, [x8, #2840]
  40e510:	ldp	x20, x19, [sp, #64]
  40e514:	ldp	x22, x21, [sp, #48]
  40e518:	ldp	x24, x23, [sp, #32]
  40e51c:	ldp	x26, x25, [sp, #16]
  40e520:	ldp	x29, x30, [sp], #80
  40e524:	ret
  40e528:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40e52c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40e530:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x240c>
  40e534:	add	x0, x0, #0xd47
  40e538:	add	x1, x1, #0xb8b
  40e53c:	add	x3, x3, #0xd8c
  40e540:	mov	w2, #0x359                 	// #857
  40e544:	bl	402b70 <__assert_fail@plt>
  40e548:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40e54c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40e550:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x240c>
  40e554:	add	x0, x0, #0xd47
  40e558:	add	x1, x1, #0xb8b
  40e55c:	add	x3, x3, #0xd8c
  40e560:	mov	w2, #0x36e                 	// #878
  40e564:	bl	402b70 <__assert_fail@plt>
  40e568:	sub	sp, sp, #0x60
  40e56c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e570:	ldr	x0, [x8, #2672]
  40e574:	stp	x29, x30, [sp, #64]
  40e578:	str	x19, [sp, #80]
  40e57c:	add	x29, sp, #0x40
  40e580:	ldr	x8, [x0]
  40e584:	ldr	x9, [x8, #56]
  40e588:	add	x8, sp, #0x8
  40e58c:	blr	x9
  40e590:	ldr	x8, [sp, #8]
  40e594:	add	x0, sp, #0x8
  40e598:	add	x1, x29, #0x18
  40e59c:	ldr	x8, [x8, #64]
  40e5a0:	blr	x8
  40e5a4:	tbz	w0, #0, 40e5dc <ferror@plt+0xb9dc>
  40e5a8:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0xab98>
  40e5ac:	ldr	x0, [x29, #24]
  40e5b0:	ldr	w9, [x19, #3604]
  40e5b4:	ldr	w8, [x0, #8]
  40e5b8:	cmp	w8, w9
  40e5bc:	b.eq	40e5c4 <ferror@plt+0xb9c4>  // b.none
  40e5c0:	bl	40e28c <ferror@plt+0xb68c>
  40e5c4:	ldr	x8, [sp, #8]
  40e5c8:	add	x0, sp, #0x8
  40e5cc:	add	x1, x29, #0x18
  40e5d0:	ldr	x8, [x8, #64]
  40e5d4:	blr	x8
  40e5d8:	tbnz	w0, #0, 40e5ac <ferror@plt+0xb9ac>
  40e5dc:	ldr	x8, [sp, #8]
  40e5e0:	add	x0, sp, #0x8
  40e5e4:	ldr	x8, [x8, #72]
  40e5e8:	blr	x8
  40e5ec:	ldr	x19, [sp, #80]
  40e5f0:	ldp	x29, x30, [sp, #64]
  40e5f4:	add	sp, sp, #0x60
  40e5f8:	ret
  40e5fc:	sub	sp, sp, #0x130
  40e600:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  40e604:	stp	x20, x19, [sp, #288]
  40e608:	ldr	w20, [x8, #3604]
  40e60c:	stp	x29, x30, [sp, #208]
  40e610:	add	x29, sp, #0xd0
  40e614:	mov	x19, x0
  40e618:	mov	w0, wzr
  40e61c:	str	x28, [sp, #224]
  40e620:	stp	x26, x25, [sp, #240]
  40e624:	stp	x24, x23, [sp, #256]
  40e628:	stp	x22, x21, [sp, #272]
  40e62c:	sub	x21, x29, #0x40
  40e630:	bl	40dcc0 <ferror@plt+0xb0c0>
  40e634:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e638:	ldr	x0, [x8, #2672]
  40e63c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e640:	str	x19, [x8, #2712]
  40e644:	ldr	x8, [x0]
  40e648:	ldr	x9, [x8, #56]
  40e64c:	add	x8, sp, #0x8
  40e650:	blr	x9
  40e654:	ldur	q0, [sp, #8]
  40e658:	ldur	q1, [sp, #24]
  40e65c:	ldur	q2, [sp, #40]
  40e660:	ldr	x8, [sp, #56]
  40e664:	sub	x0, x29, #0x40
  40e668:	stp	q0, q1, [x21]
  40e66c:	str	q2, [x21, #32]
  40e670:	ldur	x9, [x29, #-64]
  40e674:	stur	x8, [x29, #-16]
  40e678:	sub	x1, x29, #0x48
  40e67c:	ldr	x8, [x9, #64]
  40e680:	blr	x8
  40e684:	mov	w26, wzr
  40e688:	tbz	w0, #0, 40e76c <ferror@plt+0xbb6c>
  40e68c:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x240c>
  40e690:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x240c>
  40e694:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x240c>
  40e698:	adrp	x24, 418000 <_obstack_memory_used@@Base+0x240c>
  40e69c:	mov	w26, wzr
  40e6a0:	add	x21, x21, #0xc01
  40e6a4:	add	x22, x22, #0xc17
  40e6a8:	add	x23, x23, #0xc2b
  40e6ac:	add	x24, x24, #0xbf9
  40e6b0:	ldur	x25, [x29, #-72]
  40e6b4:	ldr	w8, [x25, #12]
  40e6b8:	cbz	w8, 40e6d4 <ferror@plt+0xbad4>
  40e6bc:	ldr	w2, [x25, #8]
  40e6c0:	ldr	w3, [x25, #16]
  40e6c4:	mov	x0, x19
  40e6c8:	mov	x1, x24
  40e6cc:	bl	4151e4 <ferror@plt+0x125e4>
  40e6d0:	b	40e73c <ferror@plt+0xbb3c>
  40e6d4:	ldr	w8, [x25, #16]
  40e6d8:	cbz	w8, 40e754 <ferror@plt+0xbb54>
  40e6dc:	ldr	w0, [x25, #8]
  40e6e0:	mov	w1, #0x1                   	// #1
  40e6e4:	bl	40e038 <ferror@plt+0xb438>
  40e6e8:	str	x0, [x25]
  40e6ec:	bl	4026d0 <fileno@plt>
  40e6f0:	add	x1, sp, #0x8
  40e6f4:	bl	4164e0 <_obstack_memory_used@@Base+0x8ec>
  40e6f8:	tbz	w0, #31, 40e710 <ferror@plt+0xbb10>
  40e6fc:	bl	402b80 <__errno_location@plt>
  40e700:	ldr	w1, [x0]
  40e704:	mov	w0, #0x1                   	// #1
  40e708:	mov	x2, x21
  40e70c:	bl	402d0c <ferror@plt+0x10c>
  40e710:	ldr	x26, [sp, #56]
  40e714:	tbz	x26, #63, 40e728 <ferror@plt+0xbb28>
  40e718:	mov	w0, #0x1                   	// #1
  40e71c:	mov	w1, wzr
  40e720:	mov	x2, x22
  40e724:	bl	402d0c <ferror@plt+0x10c>
  40e728:	ldr	w2, [x25, #8]
  40e72c:	mov	x0, x19
  40e730:	mov	x1, x23
  40e734:	mov	x3, x26
  40e738:	bl	4151e4 <ferror@plt+0x125e4>
  40e73c:	mov	x0, x25
  40e740:	bl	40e28c <ferror@plt+0xb68c>
  40e744:	mov	w0, #0xa                   	// #10
  40e748:	mov	x1, x19
  40e74c:	bl	402640 <putc@plt>
  40e750:	ldr	w26, [x25, #8]
  40e754:	ldur	x8, [x29, #-64]
  40e758:	sub	x0, x29, #0x40
  40e75c:	sub	x1, x29, #0x48
  40e760:	ldr	x8, [x8, #64]
  40e764:	blr	x8
  40e768:	tbnz	w0, #0, 40e6b0 <ferror@plt+0xbab0>
  40e76c:	ldur	x8, [x29, #-64]
  40e770:	sub	x0, x29, #0x40
  40e774:	ldr	x8, [x8, #72]
  40e778:	blr	x8
  40e77c:	cmp	w20, w26
  40e780:	b.eq	40e798 <ferror@plt+0xbb98>  // b.none
  40e784:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40e788:	add	x1, x1, #0xc34
  40e78c:	mov	x0, x19
  40e790:	mov	w2, w20
  40e794:	bl	4151e4 <ferror@plt+0x125e4>
  40e798:	ldp	x20, x19, [sp, #288]
  40e79c:	ldp	x22, x21, [sp, #272]
  40e7a0:	ldp	x24, x23, [sp, #256]
  40e7a4:	ldp	x26, x25, [sp, #240]
  40e7a8:	ldr	x28, [sp, #224]
  40e7ac:	ldp	x29, x30, [sp, #208]
  40e7b0:	add	sp, sp, #0x130
  40e7b4:	ret
  40e7b8:	stp	x29, x30, [sp, #-64]!
  40e7bc:	stp	x22, x21, [sp, #32]
  40e7c0:	adrp	x22, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40e7c4:	ldr	x8, [x22, #2872]
  40e7c8:	str	x23, [sp, #16]
  40e7cc:	stp	x20, x19, [sp, #48]
  40e7d0:	mov	w19, w0
  40e7d4:	adrp	x23, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40e7d8:	mov	x29, sp
  40e7dc:	cbnz	x8, 40e8d4 <ferror@plt+0xbcd4>
  40e7e0:	adrp	x8, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40e7e4:	ldr	x8, [x8, #2864]
  40e7e8:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40e7ec:	add	x0, x0, #0xc3c
  40e7f0:	mov	w2, #0x7fffffff            	// #2147483647
  40e7f4:	ldr	x1, [x8]
  40e7f8:	bl	41547c <ferror@plt+0x1287c>
  40e7fc:	mov	x21, x0
  40e800:	str	x0, [x23, #2880]
  40e804:	bl	402580 <strlen@plt>
  40e808:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e80c:	add	x8, x8, #0xab8
  40e810:	mov	x20, x0
  40e814:	ldp	x0, x9, [x8]
  40e818:	add	x1, x20, #0x1
  40e81c:	sub	x8, x9, x0
  40e820:	cmp	x8, x1
  40e824:	b.cs	40e840 <ferror@plt+0xbc40>  // b.hs, b.nlast
  40e828:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e82c:	add	x21, x21, #0xaa0
  40e830:	mov	x0, x21
  40e834:	bl	4159e4 <_obstack_newchunk@@Base>
  40e838:	ldr	x0, [x21, #24]
  40e83c:	ldr	x21, [x23, #2880]
  40e840:	mov	x1, x21
  40e844:	mov	x2, x20
  40e848:	bl	402550 <memcpy@plt>
  40e84c:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e850:	add	x9, x9, #0xab0
  40e854:	ldr	x8, [x9, #8]
  40e858:	add	x8, x8, x20
  40e85c:	add	x10, x8, #0x1
  40e860:	str	x10, [x9, #8]
  40e864:	strb	wzr, [x8]
  40e868:	ldp	x8, x9, [x9]
  40e86c:	cmp	x9, x8
  40e870:	b.ne	40e884 <ferror@plt+0xbc84>  // b.any
  40e874:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e878:	ldrb	w11, [x10, #2800]
  40e87c:	orr	w11, w11, #0x2
  40e880:	strb	w11, [x10, #2800]
  40e884:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e888:	add	x10, x10, #0xaa8
  40e88c:	ldr	x11, [x10, #40]
  40e890:	ldr	x12, [x10]
  40e894:	ldr	x13, [x10, #24]
  40e898:	ldr	x0, [x23, #2880]
  40e89c:	add	x9, x11, x9
  40e8a0:	bic	x9, x9, x11
  40e8a4:	sub	x14, x13, x12
  40e8a8:	sub	x11, x9, x12
  40e8ac:	cmp	x11, x14
  40e8b0:	csel	x9, x13, x9, hi  // hi = pmore
  40e8b4:	stp	x9, x9, [x10, #8]
  40e8b8:	str	x8, [x22, #2872]
  40e8bc:	bl	4029f0 <free@plt>
  40e8c0:	ldr	x0, [x22, #2872]
  40e8c4:	mov	w1, #0x2d                  	// #45
  40e8c8:	bl	4028d0 <strrchr@plt>
  40e8cc:	add	x8, x0, #0x1
  40e8d0:	str	x8, [x23, #2880]
  40e8d4:	cmp	w19, #0x0
  40e8d8:	b.le	40e910 <ferror@plt+0xbd10>
  40e8dc:	ldr	x0, [x23, #2880]
  40e8e0:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x240c>
  40e8e4:	add	x3, x3, #0x96e
  40e8e8:	mov	w1, #0x1                   	// #1
  40e8ec:	mov	x2, #0xffffffffffffffff    	// #-1
  40e8f0:	mov	w4, w19
  40e8f4:	bl	4025a0 <__sprintf_chk@plt>
  40e8f8:	ldr	x0, [x22, #2872]
  40e8fc:	ldp	x20, x19, [sp, #48]
  40e900:	ldp	x22, x21, [sp, #32]
  40e904:	ldr	x23, [sp, #16]
  40e908:	ldp	x29, x30, [sp], #64
  40e90c:	ret
  40e910:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40e914:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40e918:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x240c>
  40e91c:	add	x0, x0, #0xc45
  40e920:	add	x1, x1, #0xb8b
  40e924:	add	x3, x3, #0xc50
  40e928:	mov	w2, #0xc8                  	// #200
  40e92c:	bl	402b70 <__assert_fail@plt>
  40e930:	sub	sp, sp, #0x60
  40e934:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40e938:	ldr	x0, [x8, #2672]
  40e93c:	stp	x29, x30, [sp, #64]
  40e940:	stp	x20, x19, [sp, #80]
  40e944:	add	x29, sp, #0x40
  40e948:	cbz	x0, 40e9ec <ferror@plt+0xbdec>
  40e94c:	ldr	x8, [x0]
  40e950:	ldr	x9, [x8, #56]
  40e954:	mov	x8, sp
  40e958:	blr	x9
  40e95c:	ldr	x8, [sp]
  40e960:	mov	x0, sp
  40e964:	sub	x1, x29, #0x8
  40e968:	ldr	x8, [x8, #64]
  40e96c:	blr	x8
  40e970:	mov	w20, wzr
  40e974:	tbz	w0, #0, 40e9d4 <ferror@plt+0xbdd4>
  40e978:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x240c>
  40e97c:	add	x19, x19, #0xcfd
  40e980:	ldur	x8, [x29, #-8]
  40e984:	ldr	w9, [x8, #12]
  40e988:	cbz	w9, 40e9a8 <ferror@plt+0xbda8>
  40e98c:	ldr	x8, [sp]
  40e990:	mov	x0, sp
  40e994:	sub	x1, x29, #0x8
  40e998:	ldr	x8, [x8, #64]
  40e99c:	blr	x8
  40e9a0:	tbnz	w0, #0, 40e980 <ferror@plt+0xbd80>
  40e9a4:	b	40e9d4 <ferror@plt+0xbdd4>
  40e9a8:	ldr	x0, [x8]
  40e9ac:	cbz	x0, 40e98c <ferror@plt+0xbd8c>
  40e9b0:	bl	410698 <ferror@plt+0xda98>
  40e9b4:	cbz	w0, 40e98c <ferror@plt+0xbd8c>
  40e9b8:	bl	402b80 <__errno_location@plt>
  40e9bc:	ldr	w1, [x0]
  40e9c0:	mov	w0, wzr
  40e9c4:	mov	x2, x19
  40e9c8:	bl	402d0c <ferror@plt+0x10c>
  40e9cc:	mov	w20, #0x1                   	// #1
  40e9d0:	b	40e98c <ferror@plt+0xbd8c>
  40e9d4:	ldr	x8, [sp]
  40e9d8:	mov	x0, sp
  40e9dc:	ldr	x8, [x8, #72]
  40e9e0:	blr	x8
  40e9e4:	and	w19, w20, #0x1
  40e9e8:	b	40e9f0 <ferror@plt+0xbdf0>
  40e9ec:	mov	w19, wzr
  40e9f0:	adrp	x8, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40e9f4:	ldr	x0, [x8, #2864]
  40e9f8:	bl	410370 <ferror@plt+0xd770>
  40e9fc:	tbnz	w19, #0, 40ea14 <ferror@plt+0xbe14>
  40ea00:	cbnz	w0, 40ea14 <ferror@plt+0xbe14>
  40ea04:	ldp	x20, x19, [sp, #80]
  40ea08:	ldp	x29, x30, [sp, #64]
  40ea0c:	add	sp, sp, #0x60
  40ea10:	ret
  40ea14:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ea18:	ldr	w0, [x8, #900]
  40ea1c:	bl	402570 <_exit@plt>
  40ea20:	adrp	x8, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40ea24:	adrp	x9, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40ea28:	adrp	x10, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40ea2c:	str	xzr, [x8, #2896]
  40ea30:	str	xzr, [x9, #2904]
  40ea34:	str	wzr, [x10, #2912]
  40ea38:	ret
  40ea3c:	stp	x29, x30, [sp, #-48]!
  40ea40:	stp	x20, x19, [sp, #32]
  40ea44:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ea48:	ldr	w8, [x8, #1224]
  40ea4c:	str	x21, [sp, #16]
  40ea50:	mov	x29, sp
  40ea54:	cbz	w8, 40ea68 <ferror@plt+0xbe68>
  40ea58:	ldp	x20, x19, [sp, #32]
  40ea5c:	ldr	x21, [sp, #16]
  40ea60:	ldp	x29, x30, [sp], #48
  40ea64:	ret
  40ea68:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40ea6c:	add	x0, x0, #0xdb9
  40ea70:	bl	402b90 <getenv@plt>
  40ea74:	cbz	x0, 40ea58 <ferror@plt+0xbe58>
  40ea78:	bl	415068 <ferror@plt+0x12468>
  40ea7c:	mov	w1, #0x3a                  	// #58
  40ea80:	mov	x19, x0
  40ea84:	bl	402a50 <strchr@plt>
  40ea88:	mov	x21, x19
  40ea8c:	cbz	x0, 40eabc <ferror@plt+0xbebc>
  40ea90:	mov	x20, x0
  40ea94:	mov	x21, x19
  40ea98:	mov	x0, x21
  40ea9c:	strb	wzr, [x20], #1
  40eaa0:	bl	40ead8 <ferror@plt+0xbed8>
  40eaa4:	mov	w1, #0x3a                  	// #58
  40eaa8:	mov	x0, x20
  40eaac:	mov	x21, x20
  40eab0:	bl	402a50 <strchr@plt>
  40eab4:	mov	x20, x0
  40eab8:	cbnz	x0, 40ea98 <ferror@plt+0xbe98>
  40eabc:	mov	x0, x21
  40eac0:	bl	40ead8 <ferror@plt+0xbed8>
  40eac4:	mov	x0, x19
  40eac8:	ldp	x20, x19, [sp, #32]
  40eacc:	ldr	x21, [sp, #16]
  40ead0:	ldp	x29, x30, [sp], #48
  40ead4:	b	4029f0 <free@plt>
  40ead8:	stp	x29, x30, [sp, #-48]!
  40eadc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40eae0:	ldr	w8, [x8, #1224]
  40eae4:	str	x21, [sp, #16]
  40eae8:	stp	x20, x19, [sp, #32]
  40eaec:	mov	x29, sp
  40eaf0:	cbnz	w8, 40eb68 <ferror@plt+0xbf68>
  40eaf4:	ldrb	w8, [x0]
  40eaf8:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x240c>
  40eafc:	add	x9, x9, #0x21f
  40eb00:	cmp	w8, #0x0
  40eb04:	csel	x21, x9, x0, eq  // eq = none
  40eb08:	mov	w0, #0x18                  	// #24
  40eb0c:	bl	414de0 <ferror@plt+0x121e0>
  40eb10:	mov	x19, x0
  40eb14:	str	xzr, [x0]
  40eb18:	mov	x0, x21
  40eb1c:	bl	402580 <strlen@plt>
  40eb20:	mov	x20, x0
  40eb24:	mov	x0, x21
  40eb28:	str	w20, [x19, #16]
  40eb2c:	bl	415068 <ferror@plt+0x12468>
  40eb30:	adrp	x8, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40eb34:	ldr	w9, [x8, #2912]
  40eb38:	str	x0, [x19, #8]
  40eb3c:	cmp	w9, w20
  40eb40:	b.ge	40eb48 <ferror@plt+0xbf48>  // b.tcont
  40eb44:	str	w20, [x8, #2912]
  40eb48:	adrp	x8, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40eb4c:	ldr	x9, [x8, #2904]
  40eb50:	adrp	x10, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40eb54:	add	x10, x10, #0xb50
  40eb58:	cmp	x9, #0x0
  40eb5c:	csel	x9, x10, x9, eq  // eq = none
  40eb60:	str	x19, [x9]
  40eb64:	str	x19, [x8, #2904]
  40eb68:	ldp	x20, x19, [sp, #32]
  40eb6c:	ldr	x21, [sp, #16]
  40eb70:	ldp	x29, x30, [sp], #48
  40eb74:	ret
  40eb78:	stp	x29, x30, [sp, #-80]!
  40eb7c:	stp	x20, x19, [sp, #64]
  40eb80:	mov	x19, x1
  40eb84:	mov	x20, x0
  40eb88:	str	x25, [sp, #16]
  40eb8c:	stp	x24, x23, [sp, #32]
  40eb90:	stp	x22, x21, [sp, #48]
  40eb94:	mov	x29, sp
  40eb98:	cbz	x1, 40eba0 <ferror@plt+0xbfa0>
  40eb9c:	str	xzr, [x19]
  40eba0:	ldrb	w8, [x20]
  40eba4:	cbz	w8, 40ebcc <ferror@plt+0xbfcc>
  40eba8:	mov	x0, x20
  40ebac:	bl	40ecbc <ferror@plt+0xc0bc>
  40ebb0:	mov	x21, x0
  40ebb4:	cbz	x0, 40ebf8 <ferror@plt+0xbff8>
  40ebb8:	cbz	x19, 40ebdc <ferror@plt+0xbfdc>
  40ebbc:	mov	x0, x20
  40ebc0:	bl	415068 <ferror@plt+0x12468>
  40ebc4:	str	x0, [x19]
  40ebc8:	b	40ebdc <ferror@plt+0xbfdc>
  40ebcc:	bl	402b80 <__errno_location@plt>
  40ebd0:	mov	w8, #0x2                   	// #2
  40ebd4:	mov	x21, xzr
  40ebd8:	str	w8, [x0]
  40ebdc:	mov	x0, x21
  40ebe0:	ldp	x20, x19, [sp, #64]
  40ebe4:	ldp	x22, x21, [sp, #48]
  40ebe8:	ldp	x24, x23, [sp, #32]
  40ebec:	ldr	x25, [sp, #16]
  40ebf0:	ldp	x29, x30, [sp], #80
  40ebf4:	ret
  40ebf8:	ldrb	w8, [x20]
  40ebfc:	cmp	w8, #0x2f
  40ec00:	b.eq	40ebdc <ferror@plt+0xbfdc>  // b.none
  40ec04:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ec08:	ldr	w8, [x8, #1224]
  40ec0c:	cbnz	w8, 40ebdc <ferror@plt+0xbfdc>
  40ec10:	bl	402b80 <__errno_location@plt>
  40ec14:	adrp	x8, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40ec18:	ldr	x25, [x8, #2896]
  40ec1c:	ldr	w24, [x0]
  40ec20:	mov	x23, x0
  40ec24:	cbz	x25, 40ec54 <ferror@plt+0xc054>
  40ec28:	ldr	x0, [x25, #8]
  40ec2c:	mov	x1, x20
  40ec30:	mov	x2, xzr
  40ec34:	bl	4110bc <ferror@plt+0xe4bc>
  40ec38:	mov	x22, x0
  40ec3c:	bl	40ecbc <ferror@plt+0xc0bc>
  40ec40:	cbnz	x0, 40ec60 <ferror@plt+0xc060>
  40ec44:	mov	x0, x22
  40ec48:	bl	4029f0 <free@plt>
  40ec4c:	ldr	x25, [x25]
  40ec50:	cbnz	x25, 40ec28 <ferror@plt+0xc028>
  40ec54:	mov	x21, xzr
  40ec58:	str	w24, [x23]
  40ec5c:	b	40ebdc <ferror@plt+0xbfdc>
  40ec60:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ec64:	ldrb	w8, [x8, #1220]
  40ec68:	mov	x21, x0
  40ec6c:	tbz	w8, #6, 40eca4 <ferror@plt+0xc0a4>
  40ec70:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ec74:	ldr	x8, [x23, #2136]
  40ec78:	cbz	x8, 40eca4 <ferror@plt+0xc0a4>
  40ec7c:	bl	407fe0 <ferror@plt+0x53e0>
  40ec80:	ldr	x0, [x23, #2136]
  40ec84:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40ec88:	add	x1, x1, #0xdc0
  40ec8c:	mov	x2, x20
  40ec90:	mov	x3, x22
  40ec94:	bl	4151e4 <ferror@plt+0x125e4>
  40ec98:	ldr	x1, [x23, #2136]
  40ec9c:	mov	w0, #0xa                   	// #10
  40eca0:	bl	402640 <putc@plt>
  40eca4:	cbz	x19, 40ecb0 <ferror@plt+0xc0b0>
  40eca8:	str	x22, [x19]
  40ecac:	b	40ebdc <ferror@plt+0xbfdc>
  40ecb0:	mov	x0, x22
  40ecb4:	bl	4029f0 <free@plt>
  40ecb8:	b	40ebdc <ferror@plt+0xbfdc>
  40ecbc:	sub	sp, sp, #0xa0
  40ecc0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40ecc4:	add	x1, x1, #0x2b8
  40ecc8:	stp	x29, x30, [sp, #128]
  40eccc:	stp	x20, x19, [sp, #144]
  40ecd0:	add	x29, sp, #0x80
  40ecd4:	bl	4111c8 <ferror@plt+0xe5c8>
  40ecd8:	mov	x19, x0
  40ecdc:	cbz	x0, 40ed54 <ferror@plt+0xc154>
  40ece0:	mov	x0, x19
  40ece4:	bl	4026d0 <fileno@plt>
  40ece8:	mov	x1, sp
  40ecec:	mov	w20, w0
  40ecf0:	bl	4164e0 <_obstack_memory_used@@Base+0x8ec>
  40ecf4:	cbnz	w0, 40ed24 <ferror@plt+0xc124>
  40ecf8:	ldr	w8, [sp, #16]
  40ecfc:	and	w8, w8, #0xf000
  40ed00:	cmp	w8, #0x4, lsl #12
  40ed04:	b.ne	40ed24 <ferror@plt+0xc124>  // b.any
  40ed08:	mov	x0, x19
  40ed0c:	bl	4154f0 <ferror@plt+0x128f0>
  40ed10:	bl	402b80 <__errno_location@plt>
  40ed14:	mov	w8, #0x15                  	// #21
  40ed18:	mov	x19, xzr
  40ed1c:	str	w8, [x0]
  40ed20:	b	40ed54 <ferror@plt+0xc154>
  40ed24:	mov	w1, #0x1                   	// #1
  40ed28:	mov	w0, w20
  40ed2c:	bl	410898 <ferror@plt+0xdc98>
  40ed30:	cbz	w0, 40ed54 <ferror@plt+0xc154>
  40ed34:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ed38:	ldr	w20, [x8, #1240]
  40ed3c:	bl	402b80 <__errno_location@plt>
  40ed40:	ldr	w1, [x0]
  40ed44:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40ed48:	add	x2, x2, #0xde0
  40ed4c:	mov	w0, w20
  40ed50:	bl	402d0c <ferror@plt+0x10c>
  40ed54:	mov	x0, x19
  40ed58:	ldp	x20, x19, [sp, #144]
  40ed5c:	ldp	x29, x30, [sp, #128]
  40ed60:	add	sp, sp, #0xa0
  40ed64:	ret
  40ed68:	sub	sp, sp, #0x30
  40ed6c:	stp	x20, x19, [sp, #32]
  40ed70:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ed74:	ldr	x19, [x20, #888]
  40ed78:	add	x4, sp, #0x8
  40ed7c:	mov	w2, #0x8                   	// #8
  40ed80:	mov	x1, xzr
  40ed84:	mov	x0, x19
  40ed88:	mov	x3, xzr
  40ed8c:	stp	x29, x30, [sp, #16]
  40ed90:	add	x29, sp, #0x10
  40ed94:	str	xzr, [sp, #8]
  40ed98:	bl	416030 <_obstack_memory_used@@Base+0x43c>
  40ed9c:	ldr	x8, [sp, #8]
  40eda0:	sbfx	x9, x1, #0, #1
  40eda4:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  40eda8:	eor	x9, x9, x1
  40edac:	cmn	x0, x10
  40edb0:	orr	x9, x9, x8
  40edb4:	adcs	x8, x1, xzr
  40edb8:	cbnz	x9, 40edf8 <ferror@plt+0xc1f8>
  40edbc:	sbfx	x8, x8, #0, #1
  40edc0:	tbnz	x8, #63, 40edf8 <ferror@plt+0xc1f8>
  40edc4:	lsl	x0, x19, #3
  40edc8:	bl	414de0 <ferror@plt+0x121e0>
  40edcc:	ldr	x8, [x20, #888]
  40edd0:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  40edd4:	str	x0, [x9, #3608]
  40edd8:	cbz	x8, 40ede8 <ferror@plt+0xc1e8>
  40eddc:	lsl	x2, x8, #3
  40ede0:	mov	w1, wzr
  40ede4:	bl	4027e0 <memset@plt>
  40ede8:	ldp	x20, x19, [sp, #32]
  40edec:	ldp	x29, x30, [sp, #16]
  40edf0:	add	sp, sp, #0x30
  40edf4:	ret
  40edf8:	bl	4150b0 <ferror@plt+0x124b0>
  40edfc:	stp	x29, x30, [sp, #-32]!
  40ee00:	ldr	w8, [x0, #12]
  40ee04:	str	x19, [sp, #16]
  40ee08:	mov	x19, x0
  40ee0c:	mov	x29, sp
  40ee10:	cmp	w8, #0x1
  40ee14:	b.lt	40ee30 <ferror@plt+0xc230>  // b.tstop
  40ee18:	ldrb	w8, [x19, #8]
  40ee1c:	orr	w8, w8, #0x10
  40ee20:	strb	w8, [x19, #8]
  40ee24:	ldr	x19, [sp, #16]
  40ee28:	ldp	x29, x30, [sp], #32
  40ee2c:	ret
  40ee30:	ldr	x0, [x19, #16]
  40ee34:	bl	4029f0 <free@plt>
  40ee38:	ldr	w8, [x19, #24]
  40ee3c:	cmp	w8, #0x1
  40ee40:	b.ne	40ee4c <ferror@plt+0xc24c>  // b.any
  40ee44:	ldr	x0, [x19, #32]
  40ee48:	bl	4029f0 <free@plt>
  40ee4c:	mov	x0, x19
  40ee50:	ldr	x19, [sp, #16]
  40ee54:	ldp	x29, x30, [sp], #32
  40ee58:	b	4029f0 <free@plt>
  40ee5c:	stp	x29, x30, [sp, #-64]!
  40ee60:	stp	x24, x23, [sp, #16]
  40ee64:	stp	x22, x21, [sp, #32]
  40ee68:	stp	x20, x19, [sp, #48]
  40ee6c:	ldrb	w9, [x0]
  40ee70:	mov	x19, x0
  40ee74:	mov	w20, w1
  40ee78:	mov	x8, xzr
  40ee7c:	mov	x29, sp
  40ee80:	cbz	w9, 40ee98 <ferror@plt+0xc298>
  40ee84:	add	x10, x19, #0x1
  40ee88:	ror	x8, x8, #57
  40ee8c:	add	x8, x8, w9, uxtb
  40ee90:	ldrb	w9, [x10], #1
  40ee94:	cbnz	w9, 40ee88 <ferror@plt+0xc288>
  40ee98:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40ee9c:	ldr	x9, [x9, #888]
  40eea0:	adrp	x10, 436000 <__progname@@GLIBC_2.17+0xab98>
  40eea4:	ldr	x10, [x10, #3608]
  40eea8:	udiv	x11, x8, x9
  40eeac:	msub	x8, x11, x9, x8
  40eeb0:	add	x23, x10, x8, lsl #3
  40eeb4:	ldr	x21, [x23]
  40eeb8:	cbz	x21, 40ef04 <ferror@plt+0xc304>
  40eebc:	ldr	x0, [x21, #16]
  40eec0:	mov	x1, x19
  40eec4:	bl	402990 <strcmp@plt>
  40eec8:	mov	w22, w0
  40eecc:	tbnz	w0, #31, 40eed8 <ferror@plt+0xc2d8>
  40eed0:	mov	x24, xzr
  40eed4:	b	40eef8 <ferror@plt+0xc2f8>
  40eed8:	mov	x24, x21
  40eedc:	ldr	x21, [x21]
  40eee0:	cbz	x21, 40ef88 <ferror@plt+0xc388>
  40eee4:	ldr	x0, [x21, #16]
  40eee8:	mov	x1, x19
  40eeec:	bl	402990 <strcmp@plt>
  40eef0:	mov	w22, w0
  40eef4:	tbnz	w0, #31, 40eed8 <ferror@plt+0xc2d8>
  40eef8:	mov	w8, #0x1                   	// #1
  40eefc:	cbnz	w20, 40ef14 <ferror@plt+0xc314>
  40ef00:	b	40ef90 <ferror@plt+0xc390>
  40ef04:	mov	x24, xzr
  40ef08:	mov	w8, wzr
  40ef0c:	mov	w22, #0x1                   	// #1
  40ef10:	cbz	w20, 40ef90 <ferror@plt+0xc390>
  40ef14:	cmp	x24, #0x0
  40ef18:	sub	w9, w20, #0x1
  40ef1c:	csel	x24, x23, x24, eq  // eq = none
  40ef20:	cmp	w9, #0x3
  40ef24:	b.hi	40f12c <ferror@plt+0xc52c>  // b.pmore
  40ef28:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x240c>
  40ef2c:	add	x10, x10, #0xe10
  40ef30:	adr	x11, 40ef40 <ferror@plt+0xc340>
  40ef34:	ldrb	w12, [x10, x9]
  40ef38:	add	x11, x11, x12, lsl #2
  40ef3c:	br	x11
  40ef40:	mov	x23, xzr
  40ef44:	cbz	x21, 40f114 <ferror@plt+0xc514>
  40ef48:	cbnz	w22, 40f114 <ferror@plt+0xc514>
  40ef4c:	ldr	x8, [x21]
  40ef50:	cbz	x8, 40f090 <ferror@plt+0xc490>
  40ef54:	cmp	w20, #0x4
  40ef58:	b.ne	40f090 <ferror@plt+0xc490>  // b.any
  40ef5c:	ldrb	w9, [x8, #8]
  40ef60:	tbz	w9, #1, 40f090 <ferror@plt+0xc490>
  40ef64:	and	w9, w9, #0xfffffffd
  40ef68:	strb	w9, [x8, #8]
  40ef6c:	ldr	x8, [x21]
  40ef70:	ldrb	w9, [x21, #8]
  40ef74:	mov	w22, wzr
  40ef78:	ldrb	w10, [x8, #8]
  40ef7c:	bfxil	w10, w9, #0, #1
  40ef80:	strb	w10, [x8, #8]
  40ef84:	b	40f098 <ferror@plt+0xc498>
  40ef88:	mov	w8, wzr
  40ef8c:	cbnz	w20, 40ef14 <ferror@plt+0xc314>
  40ef90:	cmp	w22, #0x0
  40ef94:	csel	x23, x21, xzr, eq  // eq = none
  40ef98:	b	40f114 <ferror@plt+0xc514>
  40ef9c:	cmp	w22, #0x0
  40efa0:	cset	w9, ne  // ne = any
  40efa4:	eor	w8, w8, #0x1
  40efa8:	orr	w8, w8, w9
  40efac:	tbnz	w8, #0, 40f018 <ferror@plt+0xc418>
  40efb0:	ldr	w8, [x21, #12]
  40efb4:	cmp	w8, #0x1
  40efb8:	b.lt	40f110 <ferror@plt+0xc510>  // b.tstop
  40efbc:	ldrb	w8, [x21, #8]
  40efc0:	mov	w0, #0x28                  	// #40
  40efc4:	orr	w8, w8, #0x10
  40efc8:	strb	w8, [x21, #8]
  40efcc:	bl	414de0 <ferror@plt+0x121e0>
  40efd0:	str	wzr, [x0, #24]
  40efd4:	ldrb	w8, [x21, #8]
  40efd8:	ldrb	w9, [x0, #8]
  40efdc:	mov	x23, x0
  40efe0:	bfxil	w9, w8, #0, #1
  40efe4:	strb	w9, [x0, #8]
  40efe8:	mov	x0, x19
  40efec:	bl	415068 <ferror@plt+0x12468>
  40eff0:	ldrb	w8, [x23, #8]
  40eff4:	str	x0, [x23, #16]
  40eff8:	str	wzr, [x23, #12]
  40effc:	and	w8, w8, #0xffffffe1
  40f000:	strb	w8, [x23, #8]
  40f004:	ldr	x8, [x21]
  40f008:	str	x8, [x23]
  40f00c:	str	xzr, [x21]
  40f010:	str	x23, [x24]
  40f014:	b	40f114 <ferror@plt+0xc514>
  40f018:	mov	w0, #0x28                  	// #40
  40f01c:	bl	414de0 <ferror@plt+0x121e0>
  40f020:	ldrb	w8, [x0, #8]
  40f024:	mov	x23, x0
  40f028:	str	wzr, [x0, #24]
  40f02c:	and	w8, w8, #0xfe
  40f030:	strb	w8, [x0, #8]
  40f034:	mov	x0, x19
  40f038:	bl	415068 <ferror@plt+0x12468>
  40f03c:	ldrb	w8, [x23, #8]
  40f040:	str	x0, [x23, #16]
  40f044:	str	wzr, [x23, #12]
  40f048:	cmp	w20, #0x3
  40f04c:	and	w8, w8, #0xffffffe1
  40f050:	strb	w8, [x23, #8]
  40f054:	ldr	x8, [x24]
  40f058:	str	x8, [x23]
  40f05c:	str	x23, [x24]
  40f060:	b.ne	40f114 <ferror@plt+0xc514>  // b.any
  40f064:	cbnz	w22, 40f114 <ferror@plt+0xc514>
  40f068:	ldr	x8, [x23]
  40f06c:	ldrb	w9, [x8, #8]
  40f070:	orr	w9, w9, #0x2
  40f074:	strb	w9, [x8, #8]
  40f078:	ldr	x8, [x23]
  40f07c:	ldrb	w9, [x23, #8]
  40f080:	ldrb	w8, [x8, #8]
  40f084:	bfxil	w9, w8, #0, #1
  40f088:	strb	w9, [x23, #8]
  40f08c:	b	40f114 <ferror@plt+0xc514>
  40f090:	ldrb	w8, [x21, #8]
  40f094:	and	w22, w8, #0x1
  40f098:	ldr	x8, [x21]
  40f09c:	mov	x0, x21
  40f0a0:	str	x8, [x24]
  40f0a4:	bl	40edfc <ferror@plt+0xc1fc>
  40f0a8:	ldr	x21, [x24]
  40f0ac:	cbz	x21, 40f0c0 <ferror@plt+0xc4c0>
  40f0b0:	cmp	w20, #0x2
  40f0b4:	b.ne	40f0c0 <ferror@plt+0xc4c0>  // b.any
  40f0b8:	ldrb	w8, [x21, #8]
  40f0bc:	tbnz	w8, #1, 40f098 <ferror@plt+0xc498>
  40f0c0:	cbz	w22, 40f108 <ferror@plt+0xc508>
  40f0c4:	mov	w0, #0x28                  	// #40
  40f0c8:	bl	414de0 <ferror@plt+0x121e0>
  40f0cc:	ldrb	w21, [x0, #8]
  40f0d0:	mov	x20, x0
  40f0d4:	str	wzr, [x0, #24]
  40f0d8:	mov	x0, x19
  40f0dc:	bl	415068 <ferror@plt+0x12468>
  40f0e0:	and	w8, w21, #0xe0
  40f0e4:	orr	w8, w8, #0x1
  40f0e8:	str	x0, [x20, #16]
  40f0ec:	str	wzr, [x20, #12]
  40f0f0:	strb	w8, [x20, #8]
  40f0f4:	ldr	x8, [x24]
  40f0f8:	mov	x23, xzr
  40f0fc:	str	x8, [x20]
  40f100:	str	x20, [x24]
  40f104:	b	40f114 <ferror@plt+0xc514>
  40f108:	mov	x23, xzr
  40f10c:	b	40f114 <ferror@plt+0xc514>
  40f110:	mov	x23, x21
  40f114:	mov	x0, x23
  40f118:	ldp	x20, x19, [sp, #48]
  40f11c:	ldp	x22, x21, [sp, #32]
  40f120:	ldp	x24, x23, [sp, #16]
  40f124:	ldp	x29, x30, [sp], #64
  40f128:	ret
  40f12c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40f130:	ldr	w0, [x8, #1240]
  40f134:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40f138:	add	x2, x2, #0xe14
  40f13c:	mov	w1, wzr
  40f140:	bl	402d0c <ferror@plt+0x10c>
  40f144:	bl	402920 <abort@plt>
  40f148:	stp	x29, x30, [sp, #-64]!
  40f14c:	stp	x22, x21, [sp, #32]
  40f150:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40f154:	ldr	x8, [x21, #888]
  40f158:	stp	x24, x23, [sp, #16]
  40f15c:	stp	x20, x19, [sp, #48]
  40f160:	mov	x29, sp
  40f164:	cbz	x8, 40f1a8 <ferror@plt+0xc5a8>
  40f168:	mov	x19, x1
  40f16c:	mov	x20, x0
  40f170:	mov	x22, xzr
  40f174:	adrp	x23, 436000 <__progname@@GLIBC_2.17+0xab98>
  40f178:	ldr	x9, [x23, #3608]
  40f17c:	ldr	x0, [x9, x22, lsl #3]
  40f180:	cbz	x0, 40f19c <ferror@plt+0xc59c>
  40f184:	ldr	x24, [x0]
  40f188:	mov	x1, x19
  40f18c:	blr	x20
  40f190:	mov	x0, x24
  40f194:	cbnz	x24, 40f184 <ferror@plt+0xc584>
  40f198:	ldr	x8, [x21, #888]
  40f19c:	add	x22, x22, #0x1
  40f1a0:	cmp	x22, x8
  40f1a4:	b.cc	40f178 <ferror@plt+0xc578>  // b.lo, b.ul, b.last
  40f1a8:	ldp	x20, x19, [sp, #48]
  40f1ac:	ldp	x22, x21, [sp, #32]
  40f1b0:	ldp	x24, x23, [sp, #16]
  40f1b4:	ldp	x29, x30, [sp], #64
  40f1b8:	ret
  40f1bc:	stp	x29, x30, [sp, #-32]!
  40f1c0:	mov	x29, sp
  40f1c4:	str	xzr, [x29, #24]
  40f1c8:	str	x19, [sp, #16]
  40f1cc:	mov	x19, x0
  40f1d0:	ldr	x0, [x0, #24]
  40f1d4:	cbz	x0, 40f1ec <ferror@plt+0xc5ec>
  40f1d8:	add	x2, x29, #0x18
  40f1dc:	mov	x1, xzr
  40f1e0:	bl	40f20c <ferror@plt+0xc60c>
  40f1e4:	ldr	x8, [x29, #24]
  40f1e8:	b	40f1f0 <ferror@plt+0xc5f0>
  40f1ec:	mov	x8, xzr
  40f1f0:	ldr	x9, [x19, #32]
  40f1f4:	cmp	x9, x8
  40f1f8:	b.ne	40f208 <ferror@plt+0xc608>  // b.any
  40f1fc:	ldr	x19, [sp, #16]
  40f200:	ldp	x29, x30, [sp], #32
  40f204:	ret
  40f208:	bl	402920 <abort@plt>
  40f20c:	stp	x29, x30, [sp, #-48]!
  40f210:	stp	x22, x21, [sp, #16]
  40f214:	stp	x20, x19, [sp, #32]
  40f218:	mov	x20, x0
  40f21c:	ldr	x0, [x0]
  40f220:	mov	x19, x2
  40f224:	mov	x22, x1
  40f228:	mov	x29, sp
  40f22c:	cbz	x0, 40f244 <ferror@plt+0xc644>
  40f230:	mov	x1, x20
  40f234:	mov	x2, x19
  40f238:	bl	40f20c <ferror@plt+0xc60c>
  40f23c:	mov	w21, w0
  40f240:	b	40f248 <ferror@plt+0xc648>
  40f244:	mov	w21, wzr
  40f248:	ldr	x0, [x20, #8]
  40f24c:	cbz	x0, 40f25c <ferror@plt+0xc65c>
  40f250:	mov	x1, x20
  40f254:	mov	x2, x19
  40f258:	bl	40f20c <ferror@plt+0xc60c>
  40f25c:	ldr	x8, [x20, #16]
  40f260:	cmp	x8, x22
  40f264:	b.ne	40f2ac <ferror@plt+0xc6ac>  // b.any
  40f268:	sub	w8, w0, w21
  40f26c:	add	w9, w8, #0x1
  40f270:	cmp	w9, #0x3
  40f274:	b.cs	40f2ac <ferror@plt+0xc6ac>  // b.hs, b.nlast
  40f278:	ldr	w9, [x20, #24]
  40f27c:	cmp	w9, w8
  40f280:	b.ne	40f2ac <ferror@plt+0xc6ac>  // b.any
  40f284:	ldr	x8, [x19]
  40f288:	cmp	w0, w21
  40f28c:	csel	w9, w21, w0, cc  // cc = lo, ul, last
  40f290:	add	w0, w9, #0x1
  40f294:	add	x8, x8, #0x1
  40f298:	str	x8, [x19]
  40f29c:	ldp	x20, x19, [sp, #32]
  40f2a0:	ldp	x22, x21, [sp, #16]
  40f2a4:	ldp	x29, x30, [sp], #48
  40f2a8:	ret
  40f2ac:	bl	402920 <abort@plt>
  40f2b0:	stp	x29, x30, [sp, #-48]!
  40f2b4:	str	x21, [sp, #16]
  40f2b8:	mov	x21, x0
  40f2bc:	mov	w0, #0x28                  	// #40
  40f2c0:	stp	x20, x19, [sp, #32]
  40f2c4:	mov	x29, sp
  40f2c8:	mov	x19, x2
  40f2cc:	mov	x20, x1
  40f2d0:	bl	402740 <malloc@plt>
  40f2d4:	cbz	x0, 40f2e4 <ferror@plt+0xc6e4>
  40f2d8:	stp	x21, x20, [x0]
  40f2dc:	stp	xzr, xzr, [x0, #24]
  40f2e0:	str	x19, [x0, #16]
  40f2e4:	ldp	x20, x19, [sp, #32]
  40f2e8:	ldr	x21, [sp, #16]
  40f2ec:	ldp	x29, x30, [sp], #48
  40f2f0:	ret
  40f2f4:	ldr	x0, [x0, #32]
  40f2f8:	ret
  40f2fc:	stp	x29, x30, [sp, #-48]!
  40f300:	stp	x20, x19, [sp, #32]
  40f304:	ldr	x20, [x0, #24]
  40f308:	str	x21, [sp, #16]
  40f30c:	mov	x29, sp
  40f310:	cbz	x20, 40f354 <ferror@plt+0xc754>
  40f314:	ldr	x21, [x0, #8]
  40f318:	mov	x19, x1
  40f31c:	ldr	x0, [x20, #32]
  40f320:	cbz	x21, 40f338 <ferror@plt+0xc738>
  40f324:	mov	x1, x19
  40f328:	blr	x21
  40f32c:	tbnz	w0, #31, 40f348 <ferror@plt+0xc748>
  40f330:	cbnz	w0, 40f34c <ferror@plt+0xc74c>
  40f334:	b	40f35c <ferror@plt+0xc75c>
  40f338:	cmp	x0, x19
  40f33c:	b.hi	40f34c <ferror@plt+0xc74c>  // b.pmore
  40f340:	csetm	w0, cc  // cc = lo, ul, last
  40f344:	tbz	w0, #31, 40f330 <ferror@plt+0xc730>
  40f348:	add	x20, x20, #0x8
  40f34c:	ldr	x20, [x20]
  40f350:	cbnz	x20, 40f31c <ferror@plt+0xc71c>
  40f354:	mov	w0, wzr
  40f358:	b	40f360 <ferror@plt+0xc760>
  40f35c:	mov	w0, #0x1                   	// #1
  40f360:	ldp	x20, x19, [sp, #32]
  40f364:	ldr	x21, [sp, #16]
  40f368:	ldp	x29, x30, [sp], #48
  40f36c:	ret
  40f370:	stp	x29, x30, [sp, #-64]!
  40f374:	stp	x24, x23, [sp, #16]
  40f378:	stp	x22, x21, [sp, #32]
  40f37c:	stp	x20, x19, [sp, #48]
  40f380:	ldr	x22, [x0, #24]
  40f384:	mov	x29, sp
  40f388:	cbz	x22, 40f3b0 <ferror@plt+0xc7b0>
  40f38c:	mov	x19, x3
  40f390:	mov	x20, x2
  40f394:	mov	x21, x1
  40f398:	ldr	x0, [x22, #32]
  40f39c:	mov	x1, x20
  40f3a0:	blr	x21
  40f3a4:	tbnz	w0, #0, 40f3b8 <ferror@plt+0xc7b8>
  40f3a8:	ldr	x22, [x22, #8]
  40f3ac:	cbnz	x22, 40f398 <ferror@plt+0xc798>
  40f3b0:	mov	w0, wzr
  40f3b4:	b	40f3f0 <ferror@plt+0xc7f0>
  40f3b8:	ldr	x23, [x22]
  40f3bc:	cbz	x23, 40f3e4 <ferror@plt+0xc7e4>
  40f3c0:	mov	w24, #0x8                   	// #8
  40f3c4:	ldr	x0, [x23, #32]
  40f3c8:	mov	x1, x20
  40f3cc:	blr	x21
  40f3d0:	tst	w0, #0x1
  40f3d4:	csel	x8, xzr, x24, ne  // ne = any
  40f3d8:	csel	x22, x23, x22, ne  // ne = any
  40f3dc:	ldr	x23, [x23, x8]
  40f3e0:	cbnz	x23, 40f3c4 <ferror@plt+0xc7c4>
  40f3e4:	ldr	x8, [x22, #32]
  40f3e8:	mov	w0, #0x1                   	// #1
  40f3ec:	str	x8, [x19]
  40f3f0:	ldp	x20, x19, [sp, #48]
  40f3f4:	ldp	x22, x21, [sp, #32]
  40f3f8:	ldp	x24, x23, [sp, #16]
  40f3fc:	ldp	x29, x30, [sp], #64
  40f400:	ret
  40f404:	stp	x29, x30, [sp, #-48]!
  40f408:	stp	x22, x21, [sp, #16]
  40f40c:	stp	x20, x19, [sp, #32]
  40f410:	ldr	x8, [x0, #24]
  40f414:	mov	x19, x0
  40f418:	mov	x21, x1
  40f41c:	mov	x29, sp
  40f420:	cbz	x8, 40f49c <ferror@plt+0xc89c>
  40f424:	ldr	x22, [x19, #8]
  40f428:	ldr	x0, [x8, #32]
  40f42c:	mov	x20, x8
  40f430:	cbz	x22, 40f448 <ferror@plt+0xc848>
  40f434:	mov	x1, x21
  40f438:	blr	x22
  40f43c:	tbnz	w0, #31, 40f464 <ferror@plt+0xc864>
  40f440:	cbnz	w0, 40f450 <ferror@plt+0xc850>
  40f444:	b	40f554 <ferror@plt+0xc954>
  40f448:	cmp	x0, x21
  40f44c:	b.ls	40f45c <ferror@plt+0xc85c>  // b.plast
  40f450:	ldr	x8, [x20]
  40f454:	cbnz	x8, 40f428 <ferror@plt+0xc828>
  40f458:	b	40f4c0 <ferror@plt+0xc8c0>
  40f45c:	csetm	w0, cc  // cc = lo, ul, last
  40f460:	tbz	w0, #31, 40f440 <ferror@plt+0xc840>
  40f464:	ldr	x8, [x20, #8]
  40f468:	cbnz	x8, 40f428 <ferror@plt+0xc828>
  40f46c:	mov	w0, #0x28                  	// #40
  40f470:	bl	402740 <malloc@plt>
  40f474:	cbz	x0, 40f504 <ferror@plt+0xc904>
  40f478:	str	wzr, [x0, #24]
  40f47c:	stp	xzr, xzr, [x0]
  40f480:	str	x21, [x0, #32]
  40f484:	ldr	x8, [x20, #8]
  40f488:	cbz	x8, 40f4ec <ferror@plt+0xc8ec>
  40f48c:	mov	x20, x8
  40f490:	ldr	x8, [x8]
  40f494:	cbnz	x8, 40f48c <ferror@plt+0xc88c>
  40f498:	b	40f50c <ferror@plt+0xc90c>
  40f49c:	mov	w0, #0x28                  	// #40
  40f4a0:	bl	402740 <malloc@plt>
  40f4a4:	cbz	x0, 40f504 <ferror@plt+0xc904>
  40f4a8:	str	wzr, [x0, #24]
  40f4ac:	stp	xzr, xzr, [x0]
  40f4b0:	str	x21, [x0, #32]
  40f4b4:	str	x0, [x19, #24]
  40f4b8:	str	xzr, [x0, #16]
  40f4bc:	b	40f544 <ferror@plt+0xc944>
  40f4c0:	mov	w0, #0x28                  	// #40
  40f4c4:	bl	402740 <malloc@plt>
  40f4c8:	cbz	x0, 40f504 <ferror@plt+0xc904>
  40f4cc:	str	wzr, [x0, #24]
  40f4d0:	stp	xzr, xzr, [x0]
  40f4d4:	str	x21, [x0, #32]
  40f4d8:	ldr	x8, [x20]
  40f4dc:	cbz	x8, 40f50c <ferror@plt+0xc90c>
  40f4e0:	mov	x20, x8
  40f4e4:	ldr	x8, [x8, #8]
  40f4e8:	cbnz	x8, 40f4e0 <ferror@plt+0xc8e0>
  40f4ec:	ldr	w8, [x20, #24]
  40f4f0:	str	x0, [x20, #8]
  40f4f4:	add	w8, w8, #0x1
  40f4f8:	str	w8, [x20, #24]
  40f4fc:	mov	x8, x20
  40f500:	b	40f520 <ferror@plt+0xc920>
  40f504:	mov	w0, #0xffffffff            	// #-1
  40f508:	b	40f554 <ferror@plt+0xc954>
  40f50c:	ldr	w8, [x20, #24]
  40f510:	str	x0, [x20]
  40f514:	sub	w8, w8, #0x1
  40f518:	str	w8, [x20, #24]
  40f51c:	add	x8, x20, #0x8
  40f520:	ldr	x8, [x8]
  40f524:	str	x20, [x0, #16]
  40f528:	cbnz	x8, 40f544 <ferror@plt+0xc944>
  40f52c:	ldr	x3, [x20, #16]
  40f530:	cbz	x3, 40f544 <ferror@plt+0xc944>
  40f534:	mov	w2, #0x1                   	// #1
  40f538:	mov	x0, x19
  40f53c:	mov	x1, x20
  40f540:	bl	40f840 <ferror@plt+0xcc40>
  40f544:	ldr	x8, [x19, #32]
  40f548:	mov	w0, #0x1                   	// #1
  40f54c:	add	x8, x8, #0x1
  40f550:	str	x8, [x19, #32]
  40f554:	ldp	x20, x19, [sp, #32]
  40f558:	ldp	x22, x21, [sp, #16]
  40f55c:	ldp	x29, x30, [sp], #48
  40f560:	ret
  40f564:	stp	x29, x30, [sp, #-64]!
  40f568:	str	x23, [sp, #16]
  40f56c:	stp	x22, x21, [sp, #32]
  40f570:	stp	x20, x19, [sp, #48]
  40f574:	mov	x22, x0
  40f578:	ldr	x19, [x22, #24]!
  40f57c:	mov	x29, sp
  40f580:	cbz	x19, 40f5c8 <ferror@plt+0xc9c8>
  40f584:	ldur	x23, [x22, #-16]
  40f588:	mov	x20, x0
  40f58c:	mov	x21, x1
  40f590:	ldr	x0, [x19, #32]
  40f594:	cbz	x23, 40f5ac <ferror@plt+0xc9ac>
  40f598:	mov	x1, x21
  40f59c:	blr	x23
  40f5a0:	tbnz	w0, #31, 40f5bc <ferror@plt+0xc9bc>
  40f5a4:	cbnz	w0, 40f5c0 <ferror@plt+0xc9c0>
  40f5a8:	b	40f5d0 <ferror@plt+0xc9d0>
  40f5ac:	cmp	x0, x21
  40f5b0:	b.hi	40f5c0 <ferror@plt+0xc9c0>  // b.pmore
  40f5b4:	csetm	w0, cc  // cc = lo, ul, last
  40f5b8:	tbz	w0, #31, 40f5a4 <ferror@plt+0xc9a4>
  40f5bc:	add	x19, x19, #0x8
  40f5c0:	ldr	x19, [x19]
  40f5c4:	cbnz	x19, 40f590 <ferror@plt+0xc990>
  40f5c8:	mov	w0, wzr
  40f5cc:	b	40f6d4 <ferror@plt+0xcad4>
  40f5d0:	ldp	x8, x3, [x19, #8]
  40f5d4:	ldr	x1, [x19]
  40f5d8:	cbz	x1, 40f65c <ferror@plt+0xca5c>
  40f5dc:	cbz	x8, 40f688 <ferror@plt+0xca88>
  40f5e0:	mov	x9, x1
  40f5e4:	mov	x10, x9
  40f5e8:	ldr	x9, [x9, #8]
  40f5ec:	cbnz	x9, 40f5e4 <ferror@plt+0xc9e4>
  40f5f0:	ldr	x11, [x10, #16]
  40f5f4:	ldr	x9, [x10]
  40f5f8:	cmp	x11, x19
  40f5fc:	b.eq	40f618 <ferror@plt+0xca18>  // b.none
  40f600:	cbz	x9, 40f608 <ferror@plt+0xca08>
  40f604:	str	x11, [x9, #16]
  40f608:	str	x9, [x11, #8]
  40f60c:	str	x1, [x10]
  40f610:	str	x10, [x1, #16]
  40f614:	ldr	x8, [x19, #8]
  40f618:	str	x8, [x10, #8]
  40f61c:	str	x10, [x8, #16]
  40f620:	ldr	w8, [x19, #24]
  40f624:	str	x3, [x10, #16]
  40f628:	str	w8, [x10, #24]
  40f62c:	cbz	x3, 40f640 <ferror@plt+0xca40>
  40f630:	mov	x8, x3
  40f634:	ldr	x12, [x8], #8
  40f638:	cmp	x12, x19
  40f63c:	csel	x22, x3, x8, eq  // eq = none
  40f640:	cmp	x11, x19
  40f644:	str	x10, [x22]
  40f648:	csel	x3, x11, x10, ne  // ne = any
  40f64c:	mov	w2, #0xffffffff            	// #-1
  40f650:	mov	x0, x20
  40f654:	mov	x1, x9
  40f658:	b	40f6a8 <ferror@plt+0xcaa8>
  40f65c:	cbz	x8, 40f664 <ferror@plt+0xca64>
  40f660:	str	x3, [x8, #16]
  40f664:	cbz	x3, 40f6e8 <ferror@plt+0xcae8>
  40f668:	ldr	x9, [x3]
  40f66c:	mov	w2, #0xffffffff            	// #-1
  40f670:	mov	x0, x20
  40f674:	mov	x1, x8
  40f678:	cmp	x9, x19
  40f67c:	cset	w9, ne  // ne = any
  40f680:	str	x8, [x3, w9, uxtw #3]
  40f684:	b	40f6a8 <ferror@plt+0xcaa8>
  40f688:	str	x3, [x1, #16]
  40f68c:	cbz	x3, 40f6f0 <ferror@plt+0xcaf0>
  40f690:	ldr	x8, [x3]
  40f694:	mov	w2, #0xffffffff            	// #-1
  40f698:	mov	x0, x20
  40f69c:	cmp	x8, x19
  40f6a0:	cset	w8, ne  // ne = any
  40f6a4:	str	x1, [x3, w8, uxtw #3]
  40f6a8:	bl	40f840 <ferror@plt+0xcc40>
  40f6ac:	ldr	x9, [x20, #32]
  40f6b0:	ldr	x8, [x20, #16]
  40f6b4:	sub	x9, x9, #0x1
  40f6b8:	str	x9, [x20, #32]
  40f6bc:	cbz	x8, 40f6c8 <ferror@plt+0xcac8>
  40f6c0:	ldr	x0, [x19, #32]
  40f6c4:	blr	x8
  40f6c8:	mov	x0, x19
  40f6cc:	bl	4029f0 <free@plt>
  40f6d0:	mov	w0, #0x1                   	// #1
  40f6d4:	ldp	x20, x19, [sp, #48]
  40f6d8:	ldp	x22, x21, [sp, #32]
  40f6dc:	ldr	x23, [sp, #16]
  40f6e0:	ldp	x29, x30, [sp], #64
  40f6e4:	ret
  40f6e8:	str	x8, [x22]
  40f6ec:	b	40f6ac <ferror@plt+0xcaac>
  40f6f0:	str	x1, [x22]
  40f6f4:	b	40f6ac <ferror@plt+0xcaac>
  40f6f8:	stp	x29, x30, [sp, #-80]!
  40f6fc:	stp	x28, x25, [sp, #16]
  40f700:	stp	x24, x23, [sp, #32]
  40f704:	stp	x22, x21, [sp, #48]
  40f708:	stp	x20, x19, [sp, #64]
  40f70c:	mov	x29, sp
  40f710:	sub	sp, sp, #0x530
  40f714:	ldr	x8, [x0, #24]
  40f718:	mov	x9, sp
  40f71c:	mov	x19, x0
  40f720:	mov	x21, xzr
  40f724:	add	x22, x9, #0x8
  40f728:	sub	x23, x9, #0x8
  40f72c:	mov	w24, #0x1                   	// #1
  40f730:	cbz	x8, 40f74c <ferror@plt+0xcb4c>
  40f734:	add	x9, x22, x21, lsl #4
  40f738:	stur	x8, [x9, #-8]
  40f73c:	strb	wzr, [x9], #16
  40f740:	ldr	x8, [x8]
  40f744:	add	x21, x21, #0x1
  40f748:	cbnz	x8, 40f738 <ferror@plt+0xcb38>
  40f74c:	cbz	x21, 40f798 <ferror@plt+0xcb98>
  40f750:	add	x25, x23, x21, lsl #4
  40f754:	ldrb	w8, [x25]
  40f758:	ldur	x20, [x25, #-8]
  40f75c:	cbz	w8, 40f788 <ferror@plt+0xcb88>
  40f760:	ldr	x8, [x19, #16]
  40f764:	sub	x21, x21, #0x1
  40f768:	cbz	x8, 40f774 <ferror@plt+0xcb74>
  40f76c:	ldr	x0, [x20, #32]
  40f770:	blr	x8
  40f774:	mov	x0, x20
  40f778:	bl	4029f0 <free@plt>
  40f77c:	sub	x25, x25, #0x10
  40f780:	cbnz	x21, 40f754 <ferror@plt+0xcb54>
  40f784:	b	40f798 <ferror@plt+0xcb98>
  40f788:	strb	w24, [x25]
  40f78c:	ldr	x8, [x20, #8]
  40f790:	cbnz	x8, 40f734 <ferror@plt+0xcb34>
  40f794:	b	40f74c <ferror@plt+0xcb4c>
  40f798:	mov	x0, x19
  40f79c:	add	sp, sp, #0x530
  40f7a0:	ldp	x20, x19, [sp, #64]
  40f7a4:	ldp	x22, x21, [sp, #48]
  40f7a8:	ldp	x24, x23, [sp, #32]
  40f7ac:	ldp	x28, x25, [sp, #16]
  40f7b0:	ldp	x29, x30, [sp], #80
  40f7b4:	b	4029f0 <free@plt>
  40f7b8:	ldr	x9, [x0]
  40f7bc:	stp	x9, x0, [x8]
  40f7c0:	ldr	x9, [x0, #24]
  40f7c4:	cbz	x9, 40f7d8 <ferror@plt+0xcbd8>
  40f7c8:	mov	x10, x9
  40f7cc:	ldr	x9, [x9]
  40f7d0:	cbnz	x9, 40f7c8 <ferror@plt+0xcbc8>
  40f7d4:	b	40f7dc <ferror@plt+0xcbdc>
  40f7d8:	mov	x10, xzr
  40f7dc:	stp	x10, xzr, [x8, #24]
  40f7e0:	ret
  40f7e4:	ldp	x8, x9, [x0, #24]
  40f7e8:	cmp	x8, x9
  40f7ec:	b.eq	40f834 <ferror@plt+0xcc34>  // b.none
  40f7f0:	ldr	x9, [x8, #32]
  40f7f4:	str	x9, [x1]
  40f7f8:	ldr	x10, [x8, #8]
  40f7fc:	cbz	x10, 40f810 <ferror@plt+0xcc10>
  40f800:	mov	x9, x10
  40f804:	ldr	x10, [x10]
  40f808:	cbnz	x10, 40f800 <ferror@plt+0xcc00>
  40f80c:	b	40f828 <ferror@plt+0xcc28>
  40f810:	ldr	x9, [x8, #16]
  40f814:	cbz	x9, 40f828 <ferror@plt+0xcc28>
  40f818:	ldr	x10, [x9, #8]
  40f81c:	cmp	x10, x8
  40f820:	mov	x8, x9
  40f824:	b.eq	40f810 <ferror@plt+0xcc10>  // b.none
  40f828:	str	x9, [x0, #24]
  40f82c:	mov	w0, #0x1                   	// #1
  40f830:	ret
  40f834:	mov	w0, wzr
  40f838:	ret
  40f83c:	ret
  40f840:	stp	x29, x30, [sp, #-16]!
  40f844:	add	x8, x0, #0x18
  40f848:	mov	w9, #0x1                   	// #1
  40f84c:	mov	x29, sp
  40f850:	mov	x10, x1
  40f854:	ldp	x1, x11, [x3]
  40f858:	ldr	w13, [x3, #24]
  40f85c:	cmp	x10, x11
  40f860:	orr	x12, x1, x11
  40f864:	cneg	w10, w2, ne  // ne = any
  40f868:	cmp	x12, #0x0
  40f86c:	csneg	w12, w10, w13, ne  // ne = any
  40f870:	add	w10, w12, w13
  40f874:	cmp	w12, w13
  40f878:	str	w10, [x3, #24]
  40f87c:	b.ne	40f8fc <ferror@plt+0xccfc>  // b.any
  40f880:	ldr	x12, [x3, #16]
  40f884:	mov	x10, x8
  40f888:	cbz	x12, 40f8a8 <ferror@plt+0xcca8>
  40f88c:	ldr	x10, [x12]
  40f890:	cmp	x10, x3
  40f894:	b.eq	40f928 <ferror@plt+0xcd28>  // b.none
  40f898:	mov	x10, x12
  40f89c:	ldr	x14, [x10, #8]!
  40f8a0:	cmp	x14, x3
  40f8a4:	b.ne	40fa38 <ferror@plt+0xce38>  // b.any
  40f8a8:	tbnz	w13, #31, 40f930 <ferror@plt+0xcd30>
  40f8ac:	ldr	w13, [x11, #24]
  40f8b0:	ldr	x1, [x11]
  40f8b4:	tbnz	w13, #31, 40f9a0 <ferror@plt+0xcda0>
  40f8b8:	str	x1, [x3, #8]
  40f8bc:	str	x3, [x11]
  40f8c0:	str	x12, [x11, #16]
  40f8c4:	str	x11, [x3, #16]
  40f8c8:	cbz	x1, 40f8d0 <ferror@plt+0xccd0>
  40f8cc:	str	x3, [x1, #16]
  40f8d0:	sub	w12, w13, #0x1
  40f8d4:	sub	w13, w9, w13
  40f8d8:	str	w12, [x11, #24]
  40f8dc:	str	w13, [x3, #24]
  40f8e0:	str	x11, [x10]
  40f8e4:	ldr	w10, [x11, #24]
  40f8e8:	cmp	w2, #0x0
  40f8ec:	mov	x1, x11
  40f8f0:	neg	w12, w10
  40f8f4:	csinv	w2, w12, w10, ge  // ge = tcont
  40f8f8:	b	40f918 <ferror@plt+0xcd18>
  40f8fc:	tbnz	w2, #31, 40f90c <ferror@plt+0xcd0c>
  40f900:	cmp	w10, #0x0
  40f904:	cset	w2, ne  // ne = any
  40f908:	b	40f914 <ferror@plt+0xcd14>
  40f90c:	cmp	w13, #0x0
  40f910:	csetm	w2, ne  // ne = any
  40f914:	mov	x1, x3
  40f918:	cbz	w2, 40fa30 <ferror@plt+0xce30>
  40f91c:	ldr	x3, [x1, #16]
  40f920:	cbnz	x3, 40f850 <ferror@plt+0xcc50>
  40f924:	b	40fa30 <ferror@plt+0xce30>
  40f928:	mov	x10, x12
  40f92c:	tbz	w13, #31, 40f8ac <ferror@plt+0xccac>
  40f930:	ldr	w13, [x1, #24]
  40f934:	ldr	x11, [x1, #8]
  40f938:	cmp	w13, #0x0
  40f93c:	b.le	40f9fc <ferror@plt+0xcdfc>
  40f940:	ldr	x14, [x11]
  40f944:	str	x14, [x1, #8]
  40f948:	ldr	x13, [x11, #8]
  40f94c:	str	x13, [x3]
  40f950:	stp	x1, x3, [x11]
  40f954:	str	x12, [x11, #16]
  40f958:	cbz	x14, 40f960 <ferror@plt+0xcd60>
  40f95c:	str	x1, [x14, #16]
  40f960:	cbz	x13, 40f968 <ferror@plt+0xcd68>
  40f964:	str	x3, [x13, #16]
  40f968:	str	x11, [x1, #16]
  40f96c:	str	x11, [x3, #16]
  40f970:	ldr	w12, [x11, #24]
  40f974:	asr	w2, w2, #31
  40f978:	cmp	w12, #0x0
  40f97c:	csetm	w12, gt
  40f980:	str	w12, [x1, #24]
  40f984:	ldr	w12, [x11, #24]
  40f988:	mov	x1, x11
  40f98c:	lsr	w12, w12, #31
  40f990:	str	w12, [x3, #24]
  40f994:	str	wzr, [x11, #24]
  40f998:	str	x11, [x10]
  40f99c:	b	40f918 <ferror@plt+0xcd18>
  40f9a0:	ldr	x14, [x1]
  40f9a4:	str	x14, [x3, #8]
  40f9a8:	ldr	x13, [x1, #8]
  40f9ac:	str	x13, [x11]
  40f9b0:	stp	x3, x11, [x1]
  40f9b4:	str	x12, [x1, #16]
  40f9b8:	cbz	x14, 40f9c0 <ferror@plt+0xcdc0>
  40f9bc:	str	x3, [x14, #16]
  40f9c0:	cbz	x13, 40f9c8 <ferror@plt+0xcdc8>
  40f9c4:	str	x11, [x13, #16]
  40f9c8:	str	x1, [x3, #16]
  40f9cc:	str	x1, [x11, #16]
  40f9d0:	ldr	w12, [x1, #24]
  40f9d4:	asr	w2, w2, #31
  40f9d8:	cmp	w12, #0x0
  40f9dc:	csetm	w12, gt
  40f9e0:	str	w12, [x3, #24]
  40f9e4:	ldr	w12, [x1, #24]
  40f9e8:	lsr	w12, w12, #31
  40f9ec:	str	w12, [x11, #24]
  40f9f0:	str	wzr, [x1, #24]
  40f9f4:	str	x1, [x10]
  40f9f8:	b	40f918 <ferror@plt+0xcd18>
  40f9fc:	str	x11, [x3]
  40fa00:	stp	x3, x12, [x1, #8]
  40fa04:	str	x1, [x3, #16]
  40fa08:	cbz	x11, 40fa10 <ferror@plt+0xce10>
  40fa0c:	str	x3, [x11, #16]
  40fa10:	add	w11, w13, #0x1
  40fa14:	mvn	w12, w13
  40fa18:	str	w11, [x1, #24]
  40fa1c:	str	w12, [x3, #24]
  40fa20:	str	x1, [x10]
  40fa24:	ldr	w10, [x1, #24]
  40fa28:	add	w2, w10, w2, asr #31
  40fa2c:	b	40f918 <ferror@plt+0xcd18>
  40fa30:	ldp	x29, x30, [sp], #16
  40fa34:	ret
  40fa38:	bl	402920 <abort@plt>
  40fa3c:	sub	sp, sp, #0xd0
  40fa40:	stp	x29, x30, [sp, #176]
  40fa44:	add	x29, sp, #0xb0
  40fa48:	adrp	x8, 42f000 <__progname@@GLIBC_2.17+0x3b98>
  40fa4c:	str	x19, [sp, #192]
  40fa50:	mov	x19, x0
  40fa54:	add	x8, x8, #0xb70
  40fa58:	mov	w9, #0x4000                	// #16384
  40fa5c:	sub	x0, x29, #0x18
  40fa60:	mov	x1, xzr
  40fa64:	stur	wzr, [x29, #-16]
  40fa68:	stur	x8, [x29, #-24]
  40fa6c:	stur	x9, [x29, #-8]
  40fa70:	bl	402560 <sigaltstack@plt>
  40fa74:	cbnz	w0, 40fae4 <ferror@plt+0xcee4>
  40fa78:	adrp	x8, 40f000 <ferror@plt+0xc400>
  40fa7c:	add	x8, x8, #0xaf4
  40fa80:	cmp	x19, #0x0
  40fa84:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x240c>
  40fa88:	adrp	x13, 418000 <_obstack_memory_used@@Base+0x240c>
  40fa8c:	mov	x14, sp
  40fa90:	adrp	x9, 433000 <__progname@@GLIBC_2.17+0x7b98>
  40fa94:	adrp	x10, 433000 <__progname@@GLIBC_2.17+0x7b98>
  40fa98:	add	x11, x11, #0xe98
  40fa9c:	adrp	x12, 433000 <__progname@@GLIBC_2.17+0x7b98>
  40faa0:	add	x13, x13, #0xea6
  40faa4:	csel	x8, x8, x19, eq  // eq = none
  40faa8:	add	x0, x14, #0x8
  40faac:	str	x8, [x9, #2928]
  40fab0:	str	x11, [x10, #2936]
  40fab4:	str	x13, [x12, #2944]
  40fab8:	bl	402780 <sigemptyset@plt>
  40fabc:	mov	w8, #0x4                   	// #4
  40fac0:	adrp	x9, 40f000 <ferror@plt+0xc400>
  40fac4:	movk	w8, #0xc800, lsl #16
  40fac8:	add	x9, x9, #0xaf8
  40facc:	mov	x1, sp
  40fad0:	mov	w0, #0xb                   	// #11
  40fad4:	mov	x2, xzr
  40fad8:	str	w8, [sp, #136]
  40fadc:	str	x9, [sp]
  40fae0:	bl	4028c0 <sigaction@plt>
  40fae4:	ldr	x19, [sp, #192]
  40fae8:	ldp	x29, x30, [sp, #176]
  40faec:	add	sp, sp, #0xd0
  40faf0:	ret
  40faf4:	ret
  40faf8:	stp	x29, x30, [sp, #-16]!
  40fafc:	mov	x29, sp
  40fb00:	bl	40fb04 <ferror@plt+0xcf04>
  40fb04:	stp	x29, x30, [sp, #-32]!
  40fb08:	stp	x20, x19, [sp, #16]
  40fb0c:	adrp	x8, 433000 <__progname@@GLIBC_2.17+0x7b98>
  40fb10:	ldr	x8, [x8, #2928]
  40fb14:	mov	w0, wzr
  40fb18:	mov	x29, sp
  40fb1c:	blr	x8
  40fb20:	adrp	x8, 433000 <__progname@@GLIBC_2.17+0x7b98>
  40fb24:	ldr	x19, [x8, #2944]
  40fb28:	bl	411274 <ferror@plt+0xe674>
  40fb2c:	mov	x20, x0
  40fb30:	bl	402580 <strlen@plt>
  40fb34:	mov	x2, x0
  40fb38:	mov	w0, #0x2                   	// #2
  40fb3c:	mov	x1, x20
  40fb40:	bl	4028f0 <write@plt>
  40fb44:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  40fb48:	add	x1, x1, #0x2ed
  40fb4c:	mov	w0, #0x2                   	// #2
  40fb50:	mov	w2, #0x2                   	// #2
  40fb54:	bl	4028f0 <write@plt>
  40fb58:	mov	x0, x19
  40fb5c:	bl	402580 <strlen@plt>
  40fb60:	mov	x2, x0
  40fb64:	mov	w0, #0x2                   	// #2
  40fb68:	mov	x1, x19
  40fb6c:	bl	4028f0 <write@plt>
  40fb70:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x340c>
  40fb74:	add	x1, x1, #0xac1
  40fb78:	mov	w0, #0x2                   	// #2
  40fb7c:	mov	w2, #0x1                   	// #1
  40fb80:	bl	4028f0 <write@plt>
  40fb84:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  40fb88:	ldr	w0, [x8, #900]
  40fb8c:	bl	402570 <_exit@plt>
  40fb90:	sub	sp, sp, #0x60
  40fb94:	stp	x29, x30, [sp, #16]
  40fb98:	stp	x26, x25, [sp, #32]
  40fb9c:	stp	x24, x23, [sp, #48]
  40fba0:	stp	x22, x21, [sp, #64]
  40fba4:	stp	x20, x19, [sp, #80]
  40fba8:	adrp	x9, 433000 <__progname@@GLIBC_2.17+0x7b98>
  40fbac:	ldr	x10, [x9, #2960]
  40fbb0:	mov	w21, w2
  40fbb4:	mov	x20, x1
  40fbb8:	mov	x19, x0
  40fbbc:	adrp	x8, 433000 <__progname@@GLIBC_2.17+0x7b98>
  40fbc0:	add	x29, sp, #0x10
  40fbc4:	cbz	x10, 40fbfc <ferror@plt+0xcffc>
  40fbc8:	mov	x10, xzr
  40fbcc:	ldr	x11, [x8, #2952]
  40fbd0:	ldr	x11, [x11, x10, lsl #3]
  40fbd4:	cbz	x11, 40fbec <ferror@plt+0xcfec>
  40fbd8:	ldr	x11, [x9, #2960]
  40fbdc:	add	x10, x10, #0x1
  40fbe0:	cmp	x10, x11
  40fbe4:	b.cc	40fbcc <ferror@plt+0xcfcc>  // b.lo, b.ul, b.last
  40fbe8:	b	40fbfc <ferror@plt+0xcffc>
  40fbec:	ldr	x9, [x8, #2952]
  40fbf0:	cbz	x9, 40fbfc <ferror@plt+0xcffc>
  40fbf4:	add	x23, x9, x10, lsl #3
  40fbf8:	b	40fcdc <ferror@plt+0xd0dc>
  40fbfc:	adrp	x9, 433000 <__progname@@GLIBC_2.17+0x7b98>
  40fc00:	add	x9, x9, #0xb90
  40fc04:	ldr	x26, [x9]
  40fc08:	ldr	x9, [x9, #8]
  40fc0c:	adrp	x25, 433000 <__progname@@GLIBC_2.17+0x7b98>
  40fc10:	add	x25, x25, #0xb88
  40fc14:	cmp	x26, x9
  40fc18:	b.ne	40fcc0 <ferror@plt+0xd0c0>  // b.any
  40fc1c:	ldr	x22, [x8, #2952]
  40fc20:	mov	w23, #0x1                   	// #1
  40fc24:	bfi	x23, x26, #1, #63
  40fc28:	add	x4, sp, #0x8
  40fc2c:	mov	w2, #0x8                   	// #8
  40fc30:	mov	x0, x23
  40fc34:	mov	x1, xzr
  40fc38:	mov	x3, xzr
  40fc3c:	str	xzr, [sp, #8]
  40fc40:	bl	416030 <_obstack_memory_used@@Base+0x43c>
  40fc44:	ldr	x8, [sp, #8]
  40fc48:	sbfx	x9, x1, #0, #1
  40fc4c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  40fc50:	eor	x9, x9, x1
  40fc54:	cmn	x0, x10
  40fc58:	orr	x9, x9, x8
  40fc5c:	adcs	x8, x1, xzr
  40fc60:	cbnz	x9, 40fe1c <ferror@plt+0xd21c>
  40fc64:	sbfx	x8, x8, #0, #1
  40fc68:	tbnz	x8, #63, 40fe1c <ferror@plt+0xd21c>
  40fc6c:	lsl	x0, x23, #3
  40fc70:	bl	414de0 <ferror@plt+0x121e0>
  40fc74:	mov	x24, x0
  40fc78:	cbz	x26, 40fca0 <ferror@plt+0xd0a0>
  40fc7c:	mov	x8, x22
  40fc80:	mov	x9, x24
  40fc84:	ldr	x10, [x8], #8
  40fc88:	subs	x26, x26, #0x1
  40fc8c:	str	x10, [x9], #8
  40fc90:	b.ne	40fc84 <ferror@plt+0xd084>  // b.any
  40fc94:	str	x24, [x25]
  40fc98:	str	x23, [x25, #16]
  40fc9c:	b	40fcb8 <ferror@plt+0xd0b8>
  40fca0:	adrp	x0, 410000 <ferror@plt+0xd400>
  40fca4:	add	x0, x0, #0x6ec
  40fca8:	bl	410d60 <ferror@plt+0xe160>
  40fcac:	str	x24, [x25]
  40fcb0:	str	x23, [x25, #16]
  40fcb4:	cbz	x22, 40fcc0 <ferror@plt+0xd0c0>
  40fcb8:	mov	x0, x22
  40fcbc:	bl	4029f0 <free@plt>
  40fcc0:	ldr	x8, [x25]
  40fcc4:	ldr	x9, [x25, #8]
  40fcc8:	add	x23, x8, x9, lsl #3
  40fccc:	str	xzr, [x23]
  40fcd0:	ldr	x8, [x25, #8]
  40fcd4:	add	x8, x8, #0x1
  40fcd8:	str	x8, [x25, #8]
  40fcdc:	mov	w0, #0x20                  	// #32
  40fce0:	and	w24, w21, #0x1
  40fce4:	bl	414de0 <ferror@plt+0x121e0>
  40fce8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x240c>
  40fcec:	add	x8, x8, #0xfb0
  40fcf0:	ldr	x22, [x8]
  40fcf4:	adrp	x1, 40f000 <ferror@plt+0xc400>
  40fcf8:	adrp	x2, 40f000 <ferror@plt+0xc400>
  40fcfc:	mov	x21, x0
  40fd00:	str	xzr, [x0]
  40fd04:	strb	w24, [x0, #8]
  40fd08:	add	x1, x1, #0xe20
  40fd0c:	add	x2, x2, #0xe3c
  40fd10:	mov	x0, x8
  40fd14:	mov	x3, xzr
  40fd18:	mov	w4, wzr
  40fd1c:	blr	x22
  40fd20:	cbz	x0, 40fe1c <ferror@plt+0xd21c>
  40fd24:	str	x0, [x21, #16]
  40fd28:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  40fd2c:	adrp	x1, 40f000 <ferror@plt+0xc400>
  40fd30:	adrp	x2, 40f000 <ferror@plt+0xc400>
  40fd34:	add	x0, x0, #0xfb0
  40fd38:	add	x1, x1, #0xe20
  40fd3c:	add	x2, x2, #0xe3c
  40fd40:	mov	x3, xzr
  40fd44:	mov	w4, wzr
  40fd48:	blr	x22
  40fd4c:	cbz	x0, 40fe1c <ferror@plt+0xd21c>
  40fd50:	str	x0, [x21, #24]
  40fd54:	mov	w0, #0x1000                	// #4096
  40fd58:	bl	4150dc <ferror@plt+0x124dc>
  40fd5c:	cmp	x20, #0x0
  40fd60:	cset	w4, eq  // eq = none
  40fd64:	mov	w1, #0x1000                	// #4096
  40fd68:	mov	x2, x20
  40fd6c:	mov	x3, x19
  40fd70:	mov	x22, x0
  40fd74:	bl	414328 <ferror@plt+0x11728>
  40fd78:	cbz	w0, 40fda4 <ferror@plt+0xd1a4>
  40fd7c:	bl	402b80 <__errno_location@plt>
  40fd80:	ldr	w1, [x0]
  40fd84:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40fd88:	add	x2, x2, #0xeb5
  40fd8c:	mov	w0, wzr
  40fd90:	bl	4025d0 <error@plt>
  40fd94:	mov	x0, x22
  40fd98:	bl	41266c <ferror@plt+0xfa6c>
  40fd9c:	mov	x21, xzr
  40fda0:	b	40fdd8 <ferror@plt+0xd1d8>
  40fda4:	bl	410f5c <ferror@plt+0xe35c>
  40fda8:	mov	x0, x22
  40fdac:	bl	402900 <mkdtemp@plt>
  40fdb0:	cbz	x0, 40fdf8 <ferror@plt+0xd1f8>
  40fdb4:	mov	x19, x0
  40fdb8:	str	x0, [x21]
  40fdbc:	str	x21, [x23]
  40fdc0:	bl	410ff0 <ferror@plt+0xe3f0>
  40fdc4:	mov	x0, x19
  40fdc8:	bl	415068 <ferror@plt+0x12468>
  40fdcc:	str	x0, [x21]
  40fdd0:	mov	x0, x22
  40fdd4:	bl	41266c <ferror@plt+0xfa6c>
  40fdd8:	mov	x0, x21
  40fddc:	ldp	x20, x19, [sp, #80]
  40fde0:	ldp	x22, x21, [sp, #64]
  40fde4:	ldp	x24, x23, [sp, #48]
  40fde8:	ldp	x26, x25, [sp, #32]
  40fdec:	ldp	x29, x30, [sp, #16]
  40fdf0:	add	sp, sp, #0x60
  40fdf4:	ret
  40fdf8:	bl	410ff0 <ferror@plt+0xe3f0>
  40fdfc:	bl	402b80 <__errno_location@plt>
  40fe00:	ldr	w1, [x0]
  40fe04:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  40fe08:	add	x2, x2, #0xeec
  40fe0c:	mov	w0, wzr
  40fe10:	mov	x3, x22
  40fe14:	bl	4025d0 <error@plt>
  40fe18:	b	40fd94 <ferror@plt+0xd194>
  40fe1c:	bl	4150b0 <ferror@plt+0x124b0>
  40fe20:	stp	x29, x30, [sp, #-16]!
  40fe24:	mov	x29, sp
  40fe28:	bl	402990 <strcmp@plt>
  40fe2c:	cmp	w0, #0x0
  40fe30:	cset	w0, eq  // eq = none
  40fe34:	ldp	x29, x30, [sp], #16
  40fe38:	ret
  40fe3c:	ldrb	w9, [x0]
  40fe40:	cbz	w9, 40fe64 <ferror@plt+0xd264>
  40fe44:	mov	x8, x0
  40fe48:	mov	x0, xzr
  40fe4c:	add	x8, x8, #0x1
  40fe50:	ror	x10, x0, #55
  40fe54:	add	x0, x10, w9, uxtb
  40fe58:	ldrb	w9, [x8], #1
  40fe5c:	cbnz	w9, 40fe50 <ferror@plt+0xd250>
  40fe60:	ret
  40fe64:	mov	x0, xzr
  40fe68:	ret
  40fe6c:	stp	x29, x30, [sp, #-48]!
  40fe70:	str	x21, [sp, #16]
  40fe74:	stp	x20, x19, [sp, #32]
  40fe78:	ldr	x21, [x0, #24]
  40fe7c:	mov	x19, x0
  40fe80:	mov	x29, sp
  40fe84:	mov	x20, x1
  40fe88:	ldr	x8, [x21]
  40fe8c:	mov	x0, x21
  40fe90:	ldr	x8, [x8, #16]
  40fe94:	blr	x8
  40fe98:	ldr	x8, [x21]
  40fe9c:	mov	x2, x0
  40fea0:	mov	x0, x21
  40fea4:	mov	x1, xzr
  40fea8:	ldr	x8, [x8, #72]
  40feac:	mov	x3, x20
  40feb0:	blr	x8
  40feb4:	cbnz	x0, 40fedc <ferror@plt+0xd2dc>
  40feb8:	ldr	x19, [x19, #24]
  40febc:	mov	x0, x20
  40fec0:	bl	415068 <ferror@plt+0x12468>
  40fec4:	ldr	x8, [x19]
  40fec8:	mov	x1, x0
  40fecc:	mov	x0, x19
  40fed0:	ldr	x8, [x8, #88]
  40fed4:	blr	x8
  40fed8:	cbz	x0, 40feec <ferror@plt+0xd2ec>
  40fedc:	ldp	x20, x19, [sp, #32]
  40fee0:	ldr	x21, [sp, #16]
  40fee4:	ldp	x29, x30, [sp], #48
  40fee8:	ret
  40feec:	bl	4150b0 <ferror@plt+0x124b0>
  40fef0:	stp	x29, x30, [sp, #-48]!
  40fef4:	str	x21, [sp, #16]
  40fef8:	stp	x20, x19, [sp, #32]
  40fefc:	ldr	x19, [x0, #24]
  40ff00:	mov	x29, sp
  40ff04:	mov	x20, x1
  40ff08:	ldr	x8, [x19]
  40ff0c:	mov	x0, x19
  40ff10:	ldr	x8, [x8, #16]
  40ff14:	blr	x8
  40ff18:	ldr	x8, [x19]
  40ff1c:	mov	x2, x0
  40ff20:	mov	x0, x19
  40ff24:	mov	x1, xzr
  40ff28:	ldr	x8, [x8, #72]
  40ff2c:	mov	x3, x20
  40ff30:	blr	x8
  40ff34:	cbz	x0, 40ff7c <ferror@plt+0xd37c>
  40ff38:	ldr	x8, [x19]
  40ff3c:	mov	x20, x0
  40ff40:	mov	x0, x19
  40ff44:	mov	x1, x20
  40ff48:	ldr	x8, [x8, #24]
  40ff4c:	blr	x8
  40ff50:	ldr	x8, [x19]
  40ff54:	mov	x21, x0
  40ff58:	mov	x0, x19
  40ff5c:	mov	x1, x20
  40ff60:	ldr	x8, [x8, #128]
  40ff64:	blr	x8
  40ff68:	mov	x0, x21
  40ff6c:	ldp	x20, x19, [sp, #32]
  40ff70:	ldr	x21, [sp, #16]
  40ff74:	ldp	x29, x30, [sp], #48
  40ff78:	b	4029f0 <free@plt>
  40ff7c:	ldp	x20, x19, [sp, #32]
  40ff80:	ldr	x21, [sp, #16]
  40ff84:	ldp	x29, x30, [sp], #48
  40ff88:	ret
  40ff8c:	stp	x29, x30, [sp, #-48]!
  40ff90:	str	x21, [sp, #16]
  40ff94:	stp	x20, x19, [sp, #32]
  40ff98:	ldr	x21, [x0, #16]
  40ff9c:	mov	x19, x0
  40ffa0:	mov	x29, sp
  40ffa4:	mov	x20, x1
  40ffa8:	ldr	x8, [x21]
  40ffac:	mov	x0, x21
  40ffb0:	ldr	x8, [x8, #16]
  40ffb4:	blr	x8
  40ffb8:	ldr	x8, [x21]
  40ffbc:	mov	x2, x0
  40ffc0:	mov	x0, x21
  40ffc4:	mov	x1, xzr
  40ffc8:	ldr	x8, [x8, #72]
  40ffcc:	mov	x3, x20
  40ffd0:	blr	x8
  40ffd4:	cbnz	x0, 40fffc <ferror@plt+0xd3fc>
  40ffd8:	ldr	x19, [x19, #16]
  40ffdc:	mov	x0, x20
  40ffe0:	bl	415068 <ferror@plt+0x12468>
  40ffe4:	ldr	x8, [x19]
  40ffe8:	mov	x1, x0
  40ffec:	mov	x0, x19
  40fff0:	ldr	x8, [x8, #88]
  40fff4:	blr	x8
  40fff8:	cbz	x0, 41000c <ferror@plt+0xd40c>
  40fffc:	ldp	x20, x19, [sp, #32]
  410000:	ldr	x21, [sp, #16]
  410004:	ldp	x29, x30, [sp], #48
  410008:	ret
  41000c:	bl	4150b0 <ferror@plt+0x124b0>
  410010:	stp	x29, x30, [sp, #-48]!
  410014:	str	x21, [sp, #16]
  410018:	stp	x20, x19, [sp, #32]
  41001c:	ldr	x19, [x0, #16]
  410020:	mov	x29, sp
  410024:	mov	x20, x1
  410028:	ldr	x8, [x19]
  41002c:	mov	x0, x19
  410030:	ldr	x8, [x8, #16]
  410034:	blr	x8
  410038:	ldr	x8, [x19]
  41003c:	mov	x2, x0
  410040:	mov	x0, x19
  410044:	mov	x1, xzr
  410048:	ldr	x8, [x8, #72]
  41004c:	mov	x3, x20
  410050:	blr	x8
  410054:	cbz	x0, 41009c <ferror@plt+0xd49c>
  410058:	ldr	x8, [x19]
  41005c:	mov	x20, x0
  410060:	mov	x0, x19
  410064:	mov	x1, x20
  410068:	ldr	x8, [x8, #24]
  41006c:	blr	x8
  410070:	ldr	x8, [x19]
  410074:	mov	x21, x0
  410078:	mov	x0, x19
  41007c:	mov	x1, x20
  410080:	ldr	x8, [x8, #128]
  410084:	blr	x8
  410088:	mov	x0, x21
  41008c:	ldp	x20, x19, [sp, #32]
  410090:	ldr	x21, [sp, #16]
  410094:	ldp	x29, x30, [sp], #48
  410098:	b	4029f0 <free@plt>
  41009c:	ldp	x20, x19, [sp, #32]
  4100a0:	ldr	x21, [sp, #16]
  4100a4:	ldp	x29, x30, [sp], #48
  4100a8:	ret
  4100ac:	stp	x29, x30, [sp, #-48]!
  4100b0:	str	x21, [sp, #16]
  4100b4:	stp	x20, x19, [sp, #32]
  4100b8:	mov	x29, sp
  4100bc:	mov	x19, x1
  4100c0:	mov	x20, x0
  4100c4:	bl	4100ec <ferror@plt+0xd4ec>
  4100c8:	mov	w21, w0
  4100cc:	mov	x0, x20
  4100d0:	mov	x1, x19
  4100d4:	bl	40fef0 <ferror@plt+0xd2f0>
  4100d8:	mov	w0, w21
  4100dc:	ldp	x20, x19, [sp, #32]
  4100e0:	ldr	x21, [sp, #16]
  4100e4:	ldp	x29, x30, [sp], #48
  4100e8:	ret
  4100ec:	stp	x29, x30, [sp, #-32]!
  4100f0:	stp	x20, x19, [sp, #16]
  4100f4:	mov	x20, x0
  4100f8:	mov	x0, x1
  4100fc:	mov	x29, sp
  410100:	mov	x19, x1
  410104:	bl	402bd0 <unlink@plt>
  410108:	tbnz	w0, #31, 41011c <ferror@plt+0xd51c>
  41010c:	mov	w0, wzr
  410110:	ldp	x20, x19, [sp, #16]
  410114:	ldp	x29, x30, [sp], #32
  410118:	ret
  41011c:	ldrb	w8, [x20, #8]
  410120:	cbz	w8, 41010c <ferror@plt+0xd50c>
  410124:	bl	402b80 <__errno_location@plt>
  410128:	ldr	w1, [x0]
  41012c:	cmp	w1, #0x2
  410130:	b.eq	41010c <ferror@plt+0xd50c>  // b.none
  410134:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  410138:	add	x2, x2, #0xf24
  41013c:	mov	w0, wzr
  410140:	mov	x3, x19
  410144:	bl	4025d0 <error@plt>
  410148:	mov	w0, #0xffffffff            	// #-1
  41014c:	b	410110 <ferror@plt+0xd510>
  410150:	stp	x29, x30, [sp, #-48]!
  410154:	str	x21, [sp, #16]
  410158:	stp	x20, x19, [sp, #32]
  41015c:	mov	x29, sp
  410160:	mov	x19, x1
  410164:	mov	x20, x0
  410168:	bl	410190 <ferror@plt+0xd590>
  41016c:	mov	w21, w0
  410170:	mov	x0, x20
  410174:	mov	x1, x19
  410178:	bl	410010 <ferror@plt+0xd410>
  41017c:	mov	w0, w21
  410180:	ldp	x20, x19, [sp, #32]
  410184:	ldr	x21, [sp, #16]
  410188:	ldp	x29, x30, [sp], #48
  41018c:	ret
  410190:	stp	x29, x30, [sp, #-32]!
  410194:	stp	x20, x19, [sp, #16]
  410198:	mov	x20, x0
  41019c:	mov	x0, x1
  4101a0:	mov	x29, sp
  4101a4:	mov	x19, x1
  4101a8:	bl	4029b0 <rmdir@plt>
  4101ac:	tbnz	w0, #31, 4101c0 <ferror@plt+0xd5c0>
  4101b0:	mov	w0, wzr
  4101b4:	ldp	x20, x19, [sp, #16]
  4101b8:	ldp	x29, x30, [sp], #32
  4101bc:	ret
  4101c0:	ldrb	w8, [x20, #8]
  4101c4:	cbz	w8, 4101b0 <ferror@plt+0xd5b0>
  4101c8:	bl	402b80 <__errno_location@plt>
  4101cc:	ldr	w1, [x0]
  4101d0:	cmp	w1, #0x2
  4101d4:	b.eq	4101b0 <ferror@plt+0xd5b0>  // b.none
  4101d8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  4101dc:	add	x2, x2, #0xf44
  4101e0:	mov	w0, wzr
  4101e4:	mov	x3, x19
  4101e8:	bl	4025d0 <error@plt>
  4101ec:	mov	w0, #0xffffffff            	// #-1
  4101f0:	b	4101b4 <ferror@plt+0xd5b4>
  4101f4:	sub	sp, sp, #0xc0
  4101f8:	stp	x29, x30, [sp, #144]
  4101fc:	stp	x22, x21, [sp, #160]
  410200:	stp	x20, x19, [sp, #176]
  410204:	ldr	x21, [x0, #24]
  410208:	mov	x19, x0
  41020c:	add	x29, sp, #0x90
  410210:	ldr	x8, [x21]
  410214:	mov	x0, x21
  410218:	ldr	x9, [x8, #160]
  41021c:	add	x8, sp, #0x8
  410220:	blr	x9
  410224:	ldur	q0, [sp, #8]
  410228:	ldur	q1, [sp, #24]
  41022c:	ldur	q2, [sp, #40]
  410230:	ldr	x8, [sp, #56]
  410234:	sub	x0, x29, #0x40
  410238:	stp	q0, q1, [x29, #-64]
  41023c:	ldur	x9, [x29, #-64]
  410240:	stur	q2, [x29, #-32]
  410244:	stur	x8, [x29, #-16]
  410248:	add	x1, sp, #0x48
  41024c:	ldr	x8, [x9, #176]
  410250:	add	x2, sp, #0x40
  410254:	blr	x8
  410258:	mov	w20, wzr
  41025c:	tbz	w0, #0, 4102ac <ferror@plt+0xd6ac>
  410260:	ldr	x22, [sp, #72]
  410264:	mov	x0, x19
  410268:	mov	x1, x22
  41026c:	bl	4100ec <ferror@plt+0xd4ec>
  410270:	ldr	x8, [x21]
  410274:	ldr	x1, [sp, #64]
  410278:	orr	w20, w0, w20
  41027c:	mov	x0, x21
  410280:	ldr	x8, [x8, #128]
  410284:	blr	x8
  410288:	mov	x0, x22
  41028c:	bl	4029f0 <free@plt>
  410290:	ldur	x8, [x29, #-64]
  410294:	sub	x0, x29, #0x40
  410298:	add	x1, sp, #0x48
  41029c:	add	x2, sp, #0x40
  4102a0:	ldr	x8, [x8, #176]
  4102a4:	blr	x8
  4102a8:	tbnz	w0, #0, 410260 <ferror@plt+0xd660>
  4102ac:	ldur	x8, [x29, #-64]
  4102b0:	sub	x0, x29, #0x40
  4102b4:	ldr	x8, [x8, #184]
  4102b8:	blr	x8
  4102bc:	ldr	x21, [x19, #16]
  4102c0:	ldr	x8, [x21]
  4102c4:	mov	x0, x21
  4102c8:	ldr	x9, [x8, #160]
  4102cc:	add	x8, sp, #0x8
  4102d0:	blr	x9
  4102d4:	ldur	q0, [sp, #8]
  4102d8:	ldur	q1, [sp, #24]
  4102dc:	ldur	q2, [sp, #40]
  4102e0:	ldr	x8, [sp, #56]
  4102e4:	stp	q0, q1, [x29, #-64]
  4102e8:	ldur	x9, [x29, #-64]
  4102ec:	stur	q2, [x29, #-32]
  4102f0:	stur	x8, [x29, #-16]
  4102f4:	ldr	x8, [x9, #176]
  4102f8:	sub	x0, x29, #0x40
  4102fc:	add	x1, sp, #0x48
  410300:	add	x2, sp, #0x40
  410304:	blr	x8
  410308:	tbz	w0, #0, 410348 <ferror@plt+0xd748>
  41030c:	ldr	x22, [sp, #72]
  410310:	mov	x0, x19
  410314:	mov	x1, x22
  410318:	bl	410190 <ferror@plt+0xd590>
  41031c:	ldr	x8, [x21]
  410320:	ldr	x1, [sp, #64]
  410324:	orr	w20, w0, w20
  410328:	mov	x0, x21
  41032c:	ldr	x8, [x8, #128]
  410330:	blr	x8
  410334:	mov	x0, x22
  410338:	bl	4029f0 <free@plt>
  41033c:	ldur	x8, [x29, #-64]
  410340:	ldr	x8, [x8, #176]
  410344:	b	4102f8 <ferror@plt+0xd6f8>
  410348:	ldur	x8, [x29, #-64]
  41034c:	sub	x0, x29, #0x40
  410350:	ldr	x8, [x8, #184]
  410354:	blr	x8
  410358:	mov	w0, w20
  41035c:	ldp	x20, x19, [sp, #176]
  410360:	ldp	x22, x21, [sp, #160]
  410364:	ldp	x29, x30, [sp, #144]
  410368:	add	sp, sp, #0xc0
  41036c:	ret
  410370:	stp	x29, x30, [sp, #-32]!
  410374:	stp	x20, x19, [sp, #16]
  410378:	mov	x29, sp
  41037c:	mov	x19, x0
  410380:	bl	4101f4 <ferror@plt+0xd5f4>
  410384:	ldr	x1, [x19]
  410388:	mov	w20, w0
  41038c:	mov	x0, x19
  410390:	bl	410190 <ferror@plt+0xd590>
  410394:	mov	x10, xzr
  410398:	orr	w20, w0, w20
  41039c:	adrp	x8, 433000 <__progname@@GLIBC_2.17+0x7b98>
  4103a0:	adrp	x9, 433000 <__progname@@GLIBC_2.17+0x7b98>
  4103a4:	ldr	x11, [x8, #2960]
  4103a8:	cmp	x10, x11
  4103ac:	b.cs	410448 <ferror@plt+0xd848>  // b.hs, b.nlast
  4103b0:	ldr	x11, [x9, #2952]
  4103b4:	ldr	x11, [x11, x10, lsl #3]
  4103b8:	add	x10, x10, #0x1
  4103bc:	cmp	x11, x19
  4103c0:	b.ne	4103a4 <ferror@plt+0xd7a4>  // b.any
  4103c4:	ldr	x11, [x8, #2960]
  4103c8:	cmp	x11, x10
  4103cc:	b.ne	4103fc <ferror@plt+0xd7fc>  // b.any
  4103d0:	sub	x11, x10, #0x2
  4103d4:	mov	x10, x11
  4103d8:	cmn	x11, #0x1
  4103dc:	b.eq	4103f0 <ferror@plt+0xd7f0>  // b.none
  4103e0:	ldr	x11, [x9, #2952]
  4103e4:	ldr	x12, [x11, x10, lsl #3]
  4103e8:	sub	x11, x10, #0x1
  4103ec:	cbz	x12, 4103d4 <ferror@plt+0xd7d4>
  4103f0:	add	x9, x10, #0x1
  4103f4:	str	x9, [x8, #2960]
  4103f8:	b	410408 <ferror@plt+0xd808>
  4103fc:	ldr	x8, [x9, #2952]
  410400:	add	x8, x8, x10, lsl #3
  410404:	stur	xzr, [x8, #-8]
  410408:	ldr	x0, [x19, #24]
  41040c:	ldr	x8, [x0]
  410410:	ldr	x8, [x8, #152]
  410414:	blr	x8
  410418:	ldr	x0, [x19, #16]
  41041c:	ldr	x8, [x0]
  410420:	ldr	x8, [x8, #152]
  410424:	blr	x8
  410428:	ldr	x0, [x19]
  41042c:	bl	4029f0 <free@plt>
  410430:	mov	x0, x19
  410434:	bl	4029f0 <free@plt>
  410438:	mov	w0, w20
  41043c:	ldp	x20, x19, [sp, #16]
  410440:	ldp	x29, x30, [sp], #32
  410444:	ret
  410448:	bl	402920 <abort@plt>
  41044c:	stp	x29, x30, [sp, #-48]!
  410450:	str	x21, [sp, #16]
  410454:	stp	x20, x19, [sp, #32]
  410458:	mov	x29, sp
  41045c:	mov	w19, w2
  410460:	mov	w20, w1
  410464:	mov	x21, x0
  410468:	bl	410f5c <ferror@plt+0xe35c>
  41046c:	mov	x0, x21
  410470:	mov	w1, w20
  410474:	mov	w2, w19
  410478:	bl	402750 <open@plt>
  41047c:	mov	w19, w0
  410480:	bl	402b80 <__errno_location@plt>
  410484:	ldr	w21, [x0]
  410488:	mov	x20, x0
  41048c:	tbnz	w19, #31, 410498 <ferror@plt+0xd898>
  410490:	mov	w0, w19
  410494:	bl	4104b4 <ferror@plt+0xd8b4>
  410498:	bl	410ff0 <ferror@plt+0xe3f0>
  41049c:	str	w21, [x20]
  4104a0:	mov	w0, w19
  4104a4:	ldp	x20, x19, [sp, #32]
  4104a8:	ldr	x21, [sp, #16]
  4104ac:	ldp	x29, x30, [sp], #48
  4104b0:	ret
  4104b4:	stp	x29, x30, [sp, #-32]!
  4104b8:	stp	x20, x19, [sp, #16]
  4104bc:	adrp	x20, 433000 <__progname@@GLIBC_2.17+0x7b98>
  4104c0:	ldr	x8, [x20, #2976]
  4104c4:	mov	w19, w0
  4104c8:	mov	x29, sp
  4104cc:	cbnz	x8, 4104f8 <ferror@plt+0xd8f8>
  4104d0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  4104d4:	add	x0, x0, #0xfb0
  4104d8:	ldr	x8, [x0]
  4104dc:	mov	x1, xzr
  4104e0:	mov	x2, xzr
  4104e4:	mov	x3, xzr
  4104e8:	mov	w4, wzr
  4104ec:	blr	x8
  4104f0:	cbz	x0, 41051c <ferror@plt+0xd91c>
  4104f4:	str	x0, [x20, #2976]
  4104f8:	ldr	x0, [x20, #2976]
  4104fc:	sxtw	x1, w19
  410500:	ldr	x8, [x0]
  410504:	ldr	x8, [x8, #88]
  410508:	blr	x8
  41050c:	cbz	x0, 41051c <ferror@plt+0xd91c>
  410510:	ldp	x20, x19, [sp, #16]
  410514:	ldp	x29, x30, [sp], #32
  410518:	ret
  41051c:	bl	4150b0 <ferror@plt+0x124b0>
  410520:	stp	x29, x30, [sp, #-48]!
  410524:	str	x21, [sp, #16]
  410528:	stp	x20, x19, [sp, #32]
  41052c:	mov	x29, sp
  410530:	mov	x19, x1
  410534:	mov	x20, x0
  410538:	bl	410f5c <ferror@plt+0xe35c>
  41053c:	mov	x0, x20
  410540:	mov	x1, x19
  410544:	bl	4111c8 <ferror@plt+0xe5c8>
  410548:	mov	x19, x0
  41054c:	bl	402b80 <__errno_location@plt>
  410550:	ldr	w21, [x0]
  410554:	mov	x20, x0
  410558:	cbz	x19, 41056c <ferror@plt+0xd96c>
  41055c:	mov	x0, x19
  410560:	bl	4026d0 <fileno@plt>
  410564:	tbnz	w0, #31, 410588 <ferror@plt+0xd988>
  410568:	bl	4104b4 <ferror@plt+0xd8b4>
  41056c:	bl	410ff0 <ferror@plt+0xe3f0>
  410570:	str	w21, [x20]
  410574:	mov	x0, x19
  410578:	ldp	x20, x19, [sp, #32]
  41057c:	ldr	x21, [sp, #16]
  410580:	ldp	x29, x30, [sp], #48
  410584:	ret
  410588:	bl	402920 <abort@plt>
  41058c:	stp	x29, x30, [sp, #-48]!
  410590:	stp	x22, x21, [sp, #16]
  410594:	stp	x20, x19, [sp, #32]
  410598:	mov	x29, sp
  41059c:	mov	w20, w0
  4105a0:	bl	4028b0 <close@plt>
  4105a4:	mov	w19, w0
  4105a8:	tbnz	w20, #31, 4105c4 <ferror@plt+0xd9c4>
  4105ac:	bl	402b80 <__errno_location@plt>
  4105b0:	ldr	w22, [x0]
  4105b4:	mov	x21, x0
  4105b8:	mov	w0, w20
  4105bc:	bl	4105d8 <ferror@plt+0xd9d8>
  4105c0:	str	w22, [x21]
  4105c4:	mov	w0, w19
  4105c8:	ldp	x20, x19, [sp, #32]
  4105cc:	ldp	x22, x21, [sp, #16]
  4105d0:	ldp	x29, x30, [sp], #48
  4105d4:	ret
  4105d8:	stp	x29, x30, [sp, #-32]!
  4105dc:	stp	x20, x19, [sp, #16]
  4105e0:	adrp	x8, 433000 <__progname@@GLIBC_2.17+0x7b98>
  4105e4:	ldr	x19, [x8, #2976]
  4105e8:	mov	x29, sp
  4105ec:	cbz	x19, 410640 <ferror@plt+0xda40>
  4105f0:	ldr	x8, [x19]
  4105f4:	sxtw	x20, w0
  4105f8:	mov	x0, x19
  4105fc:	ldr	x8, [x8, #16]
  410600:	blr	x8
  410604:	ldr	x8, [x19]
  410608:	mov	x2, x0
  41060c:	mov	x0, x19
  410610:	mov	x1, xzr
  410614:	ldr	x8, [x8, #72]
  410618:	mov	x3, x20
  41061c:	blr	x8
  410620:	cbz	x0, 410640 <ferror@plt+0xda40>
  410624:	ldr	x8, [x19]
  410628:	mov	x1, x0
  41062c:	mov	x0, x19
  410630:	ldp	x20, x19, [sp, #16]
  410634:	ldr	x2, [x8, #128]
  410638:	ldp	x29, x30, [sp], #32
  41063c:	br	x2
  410640:	bl	402920 <abort@plt>
  410644:	stp	x29, x30, [sp, #-48]!
  410648:	stp	x22, x21, [sp, #16]
  41064c:	stp	x20, x19, [sp, #32]
  410650:	mov	x29, sp
  410654:	mov	x19, x0
  410658:	bl	4026d0 <fileno@plt>
  41065c:	mov	w20, w0
  410660:	mov	x0, x19
  410664:	bl	4154f0 <ferror@plt+0x128f0>
  410668:	mov	w19, w0
  41066c:	bl	402b80 <__errno_location@plt>
  410670:	ldr	w22, [x0]
  410674:	mov	x21, x0
  410678:	mov	w0, w20
  41067c:	bl	4105d8 <ferror@plt+0xd9d8>
  410680:	str	w22, [x21]
  410684:	mov	w0, w19
  410688:	ldp	x20, x19, [sp, #32]
  41068c:	ldp	x22, x21, [sp, #16]
  410690:	ldp	x29, x30, [sp], #48
  410694:	ret
  410698:	stp	x29, x30, [sp, #-48]!
  41069c:	stp	x22, x21, [sp, #16]
  4106a0:	stp	x20, x19, [sp, #32]
  4106a4:	mov	x29, sp
  4106a8:	mov	x19, x0
  4106ac:	bl	4026d0 <fileno@plt>
  4106b0:	mov	w20, w0
  4106b4:	mov	x0, x19
  4106b8:	bl	410910 <ferror@plt+0xdd10>
  4106bc:	mov	w19, w0
  4106c0:	bl	402b80 <__errno_location@plt>
  4106c4:	ldr	w22, [x0]
  4106c8:	mov	x21, x0
  4106cc:	mov	w0, w20
  4106d0:	bl	4105d8 <ferror@plt+0xd9d8>
  4106d4:	str	w22, [x21]
  4106d8:	mov	w0, w19
  4106dc:	ldp	x20, x19, [sp, #32]
  4106e0:	ldp	x22, x21, [sp, #16]
  4106e4:	ldp	x29, x30, [sp], #48
  4106e8:	ret
  4106ec:	sub	sp, sp, #0xb0
  4106f0:	stp	x29, x30, [sp, #128]
  4106f4:	stp	x22, x21, [sp, #144]
  4106f8:	stp	x20, x19, [sp, #160]
  4106fc:	adrp	x8, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410700:	ldr	x0, [x8, #2976]
  410704:	add	x29, sp, #0x80
  410708:	cbz	x0, 410774 <ferror@plt+0xdb74>
  41070c:	ldr	x8, [x0]
  410710:	ldr	x9, [x8, #160]
  410714:	add	x8, sp, #0x8
  410718:	blr	x9
  41071c:	ldur	q0, [sp, #8]
  410720:	ldur	q1, [sp, #24]
  410724:	ldur	q2, [sp, #40]
  410728:	stp	q0, q1, [sp, #64]
  41072c:	ldp	x8, x9, [sp, #56]
  410730:	str	q2, [sp, #96]
  410734:	str	x8, [sp, #112]
  410738:	ldr	x8, [x9, #176]
  41073c:	add	x0, sp, #0x40
  410740:	add	x1, sp, #0x8
  410744:	mov	x2, xzr
  410748:	blr	x8
  41074c:	tbz	w0, #0, 410764 <ferror@plt+0xdb64>
  410750:	ldr	w0, [sp, #8]
  410754:	bl	4028b0 <close@plt>
  410758:	ldr	x8, [sp, #64]
  41075c:	ldr	x8, [x8, #176]
  410760:	b	41073c <ferror@plt+0xdb3c>
  410764:	ldr	x8, [sp, #64]
  410768:	add	x0, sp, #0x40
  41076c:	ldr	x8, [x8, #184]
  410770:	blr	x8
  410774:	adrp	x19, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410778:	ldr	x8, [x19, #2960]
  41077c:	cbz	x8, 410884 <ferror@plt+0xdc84>
  410780:	mov	x20, xzr
  410784:	adrp	x21, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410788:	ldr	x8, [x21, #2952]
  41078c:	ldr	x22, [x8, x20, lsl #3]
  410790:	cbz	x22, 410874 <ferror@plt+0xdc74>
  410794:	ldr	x0, [x22, #24]
  410798:	ldr	x8, [x0]
  41079c:	ldr	x9, [x8, #160]
  4107a0:	add	x8, sp, #0x8
  4107a4:	blr	x9
  4107a8:	ldur	q0, [sp, #8]
  4107ac:	ldur	q1, [sp, #24]
  4107b0:	ldur	q2, [sp, #40]
  4107b4:	stp	q0, q1, [sp, #64]
  4107b8:	ldp	x8, x9, [sp, #56]
  4107bc:	str	q2, [sp, #96]
  4107c0:	str	x8, [sp, #112]
  4107c4:	ldr	x8, [x9, #176]
  4107c8:	add	x0, sp, #0x40
  4107cc:	mov	x1, sp
  4107d0:	mov	x2, xzr
  4107d4:	blr	x8
  4107d8:	tbz	w0, #0, 4107f0 <ferror@plt+0xdbf0>
  4107dc:	ldr	x0, [sp]
  4107e0:	bl	402bd0 <unlink@plt>
  4107e4:	ldr	x8, [sp, #64]
  4107e8:	ldr	x8, [x8, #176]
  4107ec:	b	4107c8 <ferror@plt+0xdbc8>
  4107f0:	ldr	x8, [sp, #64]
  4107f4:	add	x0, sp, #0x40
  4107f8:	ldr	x8, [x8, #184]
  4107fc:	blr	x8
  410800:	ldr	x0, [x22, #16]
  410804:	ldr	x8, [x0]
  410808:	ldr	x9, [x8, #160]
  41080c:	add	x8, sp, #0x8
  410810:	blr	x9
  410814:	ldur	q0, [sp, #8]
  410818:	ldur	q1, [sp, #24]
  41081c:	ldur	q2, [sp, #40]
  410820:	stp	q0, q1, [sp, #64]
  410824:	ldp	x8, x9, [sp, #56]
  410828:	str	q2, [sp, #96]
  41082c:	str	x8, [sp, #112]
  410830:	ldr	x8, [x9, #176]
  410834:	add	x0, sp, #0x40
  410838:	mov	x1, sp
  41083c:	mov	x2, xzr
  410840:	blr	x8
  410844:	tbz	w0, #0, 41085c <ferror@plt+0xdc5c>
  410848:	ldr	x0, [sp]
  41084c:	bl	4029b0 <rmdir@plt>
  410850:	ldr	x8, [sp, #64]
  410854:	ldr	x8, [x8, #176]
  410858:	b	410834 <ferror@plt+0xdc34>
  41085c:	ldr	x8, [sp, #64]
  410860:	add	x0, sp, #0x40
  410864:	ldr	x8, [x8, #184]
  410868:	blr	x8
  41086c:	ldr	x0, [x22]
  410870:	bl	4029b0 <rmdir@plt>
  410874:	ldr	x8, [x19, #2960]
  410878:	add	x20, x20, #0x1
  41087c:	cmp	x20, x8
  410880:	b.cc	410788 <ferror@plt+0xdb88>  // b.lo, b.ul, b.last
  410884:	ldp	x20, x19, [sp, #160]
  410888:	ldp	x22, x21, [sp, #144]
  41088c:	ldp	x29, x30, [sp, #128]
  410890:	add	sp, sp, #0xb0
  410894:	ret
  410898:	stp	x29, x30, [sp, #-32]!
  41089c:	stp	x20, x19, [sp, #16]
  4108a0:	mov	w20, w1
  4108a4:	mov	w1, #0x1                   	// #1
  4108a8:	mov	w2, wzr
  4108ac:	mov	x29, sp
  4108b0:	mov	w19, w0
  4108b4:	bl	415584 <ferror@plt+0x12984>
  4108b8:	tbnz	w0, #31, 4108dc <ferror@plt+0xdcdc>
  4108bc:	orr	w8, w0, #0x1
  4108c0:	and	w9, w0, #0xfffffffe
  4108c4:	tst	w20, #0x1
  4108c8:	csel	w2, w8, w9, ne  // ne = any
  4108cc:	cmp	w0, w2
  4108d0:	b.ne	4108e4 <ferror@plt+0xdce4>  // b.any
  4108d4:	mov	w0, wzr
  4108d8:	b	4108f8 <ferror@plt+0xdcf8>
  4108dc:	mov	w0, #0xffffffff            	// #-1
  4108e0:	b	4108f8 <ferror@plt+0xdcf8>
  4108e4:	mov	w1, #0x2                   	// #2
  4108e8:	mov	w0, w19
  4108ec:	bl	415584 <ferror@plt+0x12984>
  4108f0:	cmn	w0, #0x1
  4108f4:	csetm	w0, eq  // eq = none
  4108f8:	ldp	x20, x19, [sp, #16]
  4108fc:	ldp	x29, x30, [sp], #32
  410900:	ret
  410904:	mov	w1, #0x406                 	// #1030
  410908:	mov	w2, wzr
  41090c:	b	415584 <ferror@plt+0x12984>
  410910:	stp	x29, x30, [sp, #-48]!
  410914:	str	x21, [sp, #16]
  410918:	stp	x20, x19, [sp, #32]
  41091c:	mov	x29, sp
  410920:	mov	x20, x0
  410924:	bl	4026c0 <__fpending@plt>
  410928:	mov	x19, x0
  41092c:	mov	x0, x20
  410930:	bl	402620 <ferror_unlocked@plt>
  410934:	mov	w21, w0
  410938:	mov	x0, x20
  41093c:	bl	4154f0 <ferror@plt+0x128f0>
  410940:	mov	w8, w0
  410944:	cbz	w21, 41095c <ferror@plt+0xdd5c>
  410948:	cbnz	w8, 410954 <ferror@plt+0xdd54>
  41094c:	bl	402b80 <__errno_location@plt>
  410950:	str	wzr, [x0]
  410954:	mov	w0, #0xffffffff            	// #-1
  410958:	b	41097c <ferror@plt+0xdd7c>
  41095c:	cmp	w8, #0x0
  410960:	csetm	w0, ne  // ne = any
  410964:	cbnz	x19, 41097c <ferror@plt+0xdd7c>
  410968:	cbz	w8, 41097c <ferror@plt+0xdd7c>
  41096c:	bl	402b80 <__errno_location@plt>
  410970:	ldr	w8, [x0]
  410974:	cmp	w8, #0x9
  410978:	csetm	w0, ne  // ne = any
  41097c:	ldp	x20, x19, [sp, #32]
  410980:	ldr	x21, [sp, #16]
  410984:	ldp	x29, x30, [sp], #48
  410988:	ret
  41098c:	adrp	x8, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410990:	str	x0, [x8, #2984]
  410994:	ret
  410998:	stp	x29, x30, [sp, #-32]!
  41099c:	stp	x20, x19, [sp, #16]
  4109a0:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4109a4:	ldr	x19, [x20, #1112]
  4109a8:	mov	x29, sp
  4109ac:	mov	x0, x19
  4109b0:	bl	415790 <ferror@plt+0x12b90>
  4109b4:	cbz	x0, 4109cc <ferror@plt+0xddcc>
  4109b8:	mov	w2, #0x1                   	// #1
  4109bc:	mov	x0, x19
  4109c0:	mov	x1, xzr
  4109c4:	bl	4157d0 <ferror@plt+0x12bd0>
  4109c8:	cbz	w0, 4109d4 <ferror@plt+0xddd4>
  4109cc:	mov	w19, wzr
  4109d0:	b	4109e4 <ferror@plt+0xdde4>
  4109d4:	ldr	x0, [x20, #1112]
  4109d8:	bl	415748 <ferror@plt+0x12b48>
  4109dc:	cmp	w0, #0x0
  4109e0:	cset	w19, ne  // ne = any
  4109e4:	ldr	x0, [x20, #1112]
  4109e8:	bl	410910 <ferror@plt+0xdd10>
  4109ec:	tbnz	w19, #0, 410a00 <ferror@plt+0xde00>
  4109f0:	cbnz	w0, 410a00 <ferror@plt+0xde00>
  4109f4:	ldp	x20, x19, [sp, #16]
  4109f8:	ldp	x29, x30, [sp], #32
  4109fc:	b	410a88 <ferror@plt+0xde88>
  410a00:	adrp	x8, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410a04:	ldr	x20, [x8, #2984]
  410a08:	bl	402b80 <__errno_location@plt>
  410a0c:	ldr	w19, [x0]
  410a10:	cbnz	x20, 410a34 <ferror@plt+0xde34>
  410a14:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  410a18:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x240c>
  410a1c:	add	x2, x2, #0xf6
  410a20:	add	x3, x3, #0xf69
  410a24:	mov	w0, wzr
  410a28:	mov	w1, w19
  410a2c:	bl	4025d0 <error@plt>
  410a30:	b	410a5c <ferror@plt+0xde5c>
  410a34:	mov	x0, x20
  410a38:	bl	413b38 <ferror@plt+0x10f38>
  410a3c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  410a40:	adrp	x4, 418000 <_obstack_memory_used@@Base+0x240c>
  410a44:	mov	x3, x0
  410a48:	add	x2, x2, #0xf7c
  410a4c:	add	x4, x4, #0xf69
  410a50:	mov	w0, wzr
  410a54:	mov	w1, w19
  410a58:	bl	4025d0 <error@plt>
  410a5c:	bl	410a88 <ferror@plt+0xde88>
  410a60:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  410a64:	ldr	w0, [x8, #900]
  410a68:	bl	402570 <_exit@plt>
  410a6c:	adrp	x8, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410a70:	str	x0, [x8, #2992]
  410a74:	ret
  410a78:	and	w8, w0, #0x1
  410a7c:	adrp	x9, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410a80:	strb	w8, [x9, #3000]
  410a84:	ret
  410a88:	stp	x29, x30, [sp, #-32]!
  410a8c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  410a90:	ldr	x0, [x8, #1104]
  410a94:	str	x19, [sp, #16]
  410a98:	mov	x29, sp
  410a9c:	bl	410910 <ferror@plt+0xdd10>
  410aa0:	cbz	w0, 410ac0 <ferror@plt+0xdec0>
  410aa4:	adrp	x8, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410aa8:	ldrb	w19, [x8, #3000]
  410aac:	bl	402b80 <__errno_location@plt>
  410ab0:	cbz	w19, 410adc <ferror@plt+0xdedc>
  410ab4:	ldr	w8, [x0]
  410ab8:	cmp	w8, #0x20
  410abc:	b.ne	410adc <ferror@plt+0xdedc>  // b.any
  410ac0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  410ac4:	ldr	x0, [x8, #1080]
  410ac8:	bl	410910 <ferror@plt+0xdd10>
  410acc:	cbnz	w0, 410b34 <ferror@plt+0xdf34>
  410ad0:	ldr	x19, [sp, #16]
  410ad4:	ldp	x29, x30, [sp], #32
  410ad8:	ret
  410adc:	adrp	x8, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410ae0:	ldr	x8, [x8, #2992]
  410ae4:	ldr	w19, [x0]
  410ae8:	cbnz	x8, 410b0c <ferror@plt+0xdf0c>
  410aec:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  410af0:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x240c>
  410af4:	add	x2, x2, #0xf6
  410af8:	add	x3, x3, #0xf83
  410afc:	mov	w0, wzr
  410b00:	mov	w1, w19
  410b04:	bl	4025d0 <error@plt>
  410b08:	b	410b34 <ferror@plt+0xdf34>
  410b0c:	mov	x0, x8
  410b10:	bl	413b38 <ferror@plt+0x10f38>
  410b14:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  410b18:	adrp	x4, 418000 <_obstack_memory_used@@Base+0x240c>
  410b1c:	mov	x3, x0
  410b20:	add	x2, x2, #0xf7c
  410b24:	add	x4, x4, #0xf83
  410b28:	mov	w0, wzr
  410b2c:	mov	w1, w19
  410b30:	bl	4025d0 <error@plt>
  410b34:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  410b38:	ldr	w0, [x8, #900]
  410b3c:	bl	402570 <_exit@plt>
  410b40:	stp	x29, x30, [sp, #-96]!
  410b44:	stp	x28, x27, [sp, #16]
  410b48:	stp	x26, x25, [sp, #32]
  410b4c:	stp	x24, x23, [sp, #48]
  410b50:	stp	x22, x21, [sp, #64]
  410b54:	stp	x20, x19, [sp, #80]
  410b58:	mov	x29, sp
  410b5c:	sub	sp, sp, #0x230
  410b60:	ldr	x21, [x29, #104]
  410b64:	mov	w22, w7
  410b68:	mov	w20, w6
  410b6c:	mov	w27, w5
  410b70:	mov	w28, w4
  410b74:	mov	x24, x2
  410b78:	mov	x25, x1
  410b7c:	mov	x19, x0
  410b80:	str	w3, [sp]
  410b84:	tbz	w7, #0, 410b9c <ferror@plt+0xdf9c>
  410b88:	sub	x2, x29, #0x88
  410b8c:	mov	w0, #0x2                   	// #2
  410b90:	mov	x1, xzr
  410b94:	bl	4025e0 <sigprocmask@plt>
  410b98:	bl	410f5c <ferror@plt+0xe35c>
  410b9c:	ldrb	w23, [x29, #96]
  410ba0:	sub	x0, x29, #0xd8
  410ba4:	bl	402960 <posix_spawn_file_actions_init@plt>
  410ba8:	mov	w26, w0
  410bac:	cbnz	w0, 410c44 <ferror@plt+0xe044>
  410bb0:	tbz	w28, #0, 410bd8 <ferror@plt+0xdfd8>
  410bb4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  410bb8:	add	x2, x2, #0xf8f
  410bbc:	sub	x0, x29, #0xd8
  410bc0:	mov	w1, wzr
  410bc4:	mov	w3, wzr
  410bc8:	mov	w4, wzr
  410bcc:	bl	402690 <posix_spawn_file_actions_addopen@plt>
  410bd0:	mov	w26, w0
  410bd4:	cbnz	w0, 410c3c <ferror@plt+0xe03c>
  410bd8:	tbz	w27, #0, 410c00 <ferror@plt+0xe000>
  410bdc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  410be0:	add	x2, x2, #0xf8f
  410be4:	sub	x0, x29, #0xd8
  410be8:	mov	w1, #0x1                   	// #1
  410bec:	mov	w3, #0x2                   	// #2
  410bf0:	mov	w4, wzr
  410bf4:	bl	402690 <posix_spawn_file_actions_addopen@plt>
  410bf8:	mov	w26, w0
  410bfc:	cbnz	w0, 410c3c <ferror@plt+0xe03c>
  410c00:	tbz	w20, #0, 410c28 <ferror@plt+0xe028>
  410c04:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  410c08:	add	x2, x2, #0xf8f
  410c0c:	sub	x0, x29, #0xd8
  410c10:	mov	w1, #0x2                   	// #2
  410c14:	mov	w3, #0x2                   	// #2
  410c18:	mov	w4, wzr
  410c1c:	bl	402690 <posix_spawn_file_actions_addopen@plt>
  410c20:	mov	w26, w0
  410c24:	cbnz	w0, 410c3c <ferror@plt+0xe03c>
  410c28:	tbz	w22, #0, 410c98 <ferror@plt+0xe098>
  410c2c:	add	x0, sp, #0x8
  410c30:	bl	402ab0 <posix_spawnattr_init@plt>
  410c34:	mov	w26, w0
  410c38:	cbz	w0, 410d18 <ferror@plt+0xe118>
  410c3c:	sub	x0, x29, #0xd8
  410c40:	bl	402850 <posix_spawn_file_actions_destroy@plt>
  410c44:	tbz	w22, #0, 410c4c <ferror@plt+0xe04c>
  410c48:	bl	410ff0 <ferror@plt+0xe3f0>
  410c4c:	cbz	x21, 410c54 <ferror@plt+0xe054>
  410c50:	str	wzr, [x21]
  410c54:	tbz	w20, #0, 410c5c <ferror@plt+0xe05c>
  410c58:	tbz	w23, #0, 410c74 <ferror@plt+0xe074>
  410c5c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  410c60:	and	w0, w23, #0x1
  410c64:	add	x2, x2, #0xf99
  410c68:	mov	w1, w26
  410c6c:	mov	x3, x19
  410c70:	bl	4025d0 <error@plt>
  410c74:	mov	w0, #0x7f                  	// #127
  410c78:	add	sp, sp, #0x230
  410c7c:	ldp	x20, x19, [sp, #80]
  410c80:	ldp	x22, x21, [sp, #64]
  410c84:	ldp	x24, x23, [sp, #48]
  410c88:	ldp	x26, x25, [sp, #32]
  410c8c:	ldp	x28, x27, [sp, #16]
  410c90:	ldp	x29, x30, [sp], #96
  410c94:	ret
  410c98:	mov	w28, wzr
  410c9c:	mov	x27, xzr
  410ca0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  410ca4:	ldr	x5, [x8, #1120]
  410ca8:	add	x0, sp, #0x4
  410cac:	sub	x2, x29, #0xd8
  410cb0:	mov	x1, x25
  410cb4:	mov	x3, x27
  410cb8:	mov	x4, x24
  410cbc:	bl	402a20 <posix_spawnp@plt>
  410cc0:	mov	w26, w0
  410cc4:	sub	x0, x29, #0xd8
  410cc8:	bl	402850 <posix_spawn_file_actions_destroy@plt>
  410ccc:	cbz	w26, 410cd8 <ferror@plt+0xe0d8>
  410cd0:	cbz	w28, 410c44 <ferror@plt+0xe044>
  410cd4:	b	410d4c <ferror@plt+0xe14c>
  410cd8:	cbz	w28, 410ce4 <ferror@plt+0xe0e4>
  410cdc:	add	x0, sp, #0x8
  410ce0:	bl	402790 <posix_spawnattr_destroy@plt>
  410ce4:	tbz	w22, #0, 410cf4 <ferror@plt+0xe0f4>
  410ce8:	ldr	w0, [sp, #4]
  410cec:	bl	414a4c <ferror@plt+0x11e4c>
  410cf0:	bl	410ff0 <ferror@plt+0xe3f0>
  410cf4:	ldp	w8, w0, [sp]
  410cf8:	and	w3, w20, #0x1
  410cfc:	and	w4, w22, #0x1
  410d00:	and	w5, w23, #0x1
  410d04:	and	w2, w8, #0x1
  410d08:	mov	x1, x19
  410d0c:	mov	x6, x21
  410d10:	bl	414be4 <ferror@plt+0x11fe4>
  410d14:	b	410c78 <ferror@plt+0xe078>
  410d18:	add	x0, sp, #0x8
  410d1c:	sub	x1, x29, #0x88
  410d20:	bl	402950 <posix_spawnattr_setsigmask@plt>
  410d24:	mov	w26, w0
  410d28:	cbnz	w0, 410d44 <ferror@plt+0xe144>
  410d2c:	add	x0, sp, #0x8
  410d30:	mov	w1, #0x8                   	// #8
  410d34:	add	x27, sp, #0x8
  410d38:	bl	402910 <posix_spawnattr_setflags@plt>
  410d3c:	mov	w26, w0
  410d40:	cbz	w0, 410d58 <ferror@plt+0xe158>
  410d44:	sub	x0, x29, #0xd8
  410d48:	bl	402850 <posix_spawn_file_actions_destroy@plt>
  410d4c:	add	x0, sp, #0x8
  410d50:	bl	402790 <posix_spawnattr_destroy@plt>
  410d54:	b	410c44 <ferror@plt+0xe044>
  410d58:	mov	w28, #0x1                   	// #1
  410d5c:	b	410ca0 <ferror@plt+0xe0a0>
  410d60:	sub	sp, sp, #0xf0
  410d64:	stp	x20, x19, [sp, #224]
  410d68:	adrp	x20, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410d6c:	ldrb	w8, [x20, #3008]
  410d70:	mov	x19, x0
  410d74:	stp	x29, x30, [sp, #160]
  410d78:	str	x25, [sp, #176]
  410d7c:	stp	x24, x23, [sp, #192]
  410d80:	stp	x22, x21, [sp, #208]
  410d84:	add	x29, sp, #0xa0
  410d88:	tbnz	w8, #0, 410df8 <ferror@plt+0xe1f8>
  410d8c:	bl	410ee0 <ferror@plt+0xe2e0>
  410d90:	adrp	x8, 411000 <ferror@plt+0xe400>
  410d94:	add	x10, sp, #0x8
  410d98:	add	x8, x8, #0x14
  410d9c:	mov	w9, #0x40000000            	// #1073741824
  410da0:	add	x0, x10, #0x8
  410da4:	str	x8, [sp, #8]
  410da8:	str	w9, [sp, #144]
  410dac:	bl	402780 <sigemptyset@plt>
  410db0:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  410db4:	adrp	x24, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410db8:	mov	x21, xzr
  410dbc:	add	x22, x22, #0x398
  410dc0:	mov	w23, #0x98                  	// #152
  410dc4:	add	x24, x24, #0xd50
  410dc8:	ldr	w0, [x22, x21]
  410dcc:	tbnz	w0, #31, 410de4 <ferror@plt+0xe1e4>
  410dd0:	cmp	w0, #0x40
  410dd4:	b.cs	410ed8 <ferror@plt+0xe2d8>  // b.hs, b.nlast
  410dd8:	madd	x2, x0, x23, x24
  410ddc:	add	x1, sp, #0x8
  410de0:	bl	4028c0 <sigaction@plt>
  410de4:	add	x21, x21, #0x4
  410de8:	cmp	x21, #0x18
  410dec:	b.ne	410dc8 <ferror@plt+0xe1c8>  // b.any
  410df0:	mov	w8, #0x1                   	// #1
  410df4:	strb	w8, [x20, #3008]
  410df8:	adrp	x22, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410dfc:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x1540c>
  410e00:	ldrsw	x25, [x22, #3012]
  410e04:	ldr	x8, [x24, #904]
  410e08:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x1540c>
  410e0c:	cmp	x8, x25
  410e10:	b.ne	410ea4 <ferror@plt+0xe2a4>  // b.any
  410e14:	ldr	x20, [x23, #912]
  410e18:	lsl	x21, x25, #1
  410e1c:	add	x4, x29, #0x18
  410e20:	mov	w2, #0x8                   	// #8
  410e24:	mov	x0, x21
  410e28:	mov	x1, xzr
  410e2c:	mov	x3, xzr
  410e30:	str	xzr, [x29, #24]
  410e34:	bl	416030 <_obstack_memory_used@@Base+0x43c>
  410e38:	ldr	x8, [x29, #24]
  410e3c:	sbfx	x9, x1, #0, #1
  410e40:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  410e44:	eor	x9, x9, x1
  410e48:	cmn	x0, x10
  410e4c:	orr	x9, x9, x8
  410e50:	adcs	x8, x1, xzr
  410e54:	cbnz	x9, 410edc <ferror@plt+0xe2dc>
  410e58:	sbfx	x8, x8, #0, #1
  410e5c:	tbnz	x8, #63, 410edc <ferror@plt+0xe2dc>
  410e60:	lsl	x0, x25, #4
  410e64:	bl	414de0 <ferror@plt+0x121e0>
  410e68:	cbz	w25, 410e84 <ferror@plt+0xe284>
  410e6c:	mov	x8, x0
  410e70:	mov	x9, x20
  410e74:	ldr	x10, [x9], #8
  410e78:	subs	x25, x25, #0x1
  410e7c:	str	x10, [x8], #8
  410e80:	b.ne	410e74 <ferror@plt+0xe274>  // b.any
  410e84:	adrp	x8, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410e88:	add	x8, x8, #0xbc8
  410e8c:	cmp	x20, x8
  410e90:	str	x0, [x23, #912]
  410e94:	str	x21, [x24, #904]
  410e98:	b.eq	410ea4 <ferror@plt+0xe2a4>  // b.none
  410e9c:	mov	x0, x20
  410ea0:	bl	4029f0 <free@plt>
  410ea4:	ldr	x8, [x23, #912]
  410ea8:	ldrsw	x9, [x22, #3012]
  410eac:	str	x19, [x8, x9, lsl #3]
  410eb0:	ldr	w8, [x22, #3012]
  410eb4:	add	w8, w8, #0x1
  410eb8:	str	w8, [x22, #3012]
  410ebc:	ldp	x20, x19, [sp, #224]
  410ec0:	ldp	x22, x21, [sp, #208]
  410ec4:	ldp	x24, x23, [sp, #192]
  410ec8:	ldr	x25, [sp, #176]
  410ecc:	ldp	x29, x30, [sp, #160]
  410ed0:	add	sp, sp, #0xf0
  410ed4:	ret
  410ed8:	bl	402920 <abort@plt>
  410edc:	bl	4150b0 <ferror@plt+0x124b0>
  410ee0:	sub	sp, sp, #0xd0
  410ee4:	stp	x20, x19, [sp, #192]
  410ee8:	adrp	x19, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410eec:	ldrb	w8, [x19, #3400]
  410ef0:	stp	x29, x30, [sp, #160]
  410ef4:	stp	x22, x21, [sp, #176]
  410ef8:	add	x29, sp, #0xa0
  410efc:	tbnz	w8, #0, 410f48 <ferror@plt+0xe348>
  410f00:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  410f04:	mov	x20, xzr
  410f08:	add	x21, x21, #0x398
  410f0c:	mov	w22, #0xffffffff            	// #-1
  410f10:	ldr	w0, [x21, x20]
  410f14:	add	x2, sp, #0x8
  410f18:	mov	x1, xzr
  410f1c:	bl	4028c0 <sigaction@plt>
  410f20:	tbnz	w0, #31, 410f34 <ferror@plt+0xe334>
  410f24:	ldr	x8, [sp, #8]
  410f28:	cmp	x8, #0x1
  410f2c:	b.ne	410f34 <ferror@plt+0xe334>  // b.any
  410f30:	str	w22, [x21, x20]
  410f34:	add	x20, x20, #0x4
  410f38:	cmp	x20, #0x18
  410f3c:	b.ne	410f10 <ferror@plt+0xe310>  // b.any
  410f40:	mov	w8, #0x1                   	// #1
  410f44:	strb	w8, [x19, #3400]
  410f48:	ldp	x20, x19, [sp, #192]
  410f4c:	ldp	x22, x21, [sp, #176]
  410f50:	ldp	x29, x30, [sp, #160]
  410f54:	add	sp, sp, #0xd0
  410f58:	ret
  410f5c:	stp	x29, x30, [sp, #-16]!
  410f60:	mov	x29, sp
  410f64:	bl	410f80 <ferror@plt+0xe380>
  410f68:	adrp	x1, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410f6c:	add	x1, x1, #0xcc8
  410f70:	mov	w0, wzr
  410f74:	mov	x2, xzr
  410f78:	ldp	x29, x30, [sp], #16
  410f7c:	b	4025e0 <sigprocmask@plt>
  410f80:	stp	x29, x30, [sp, #-48]!
  410f84:	stp	x20, x19, [sp, #32]
  410f88:	adrp	x20, 436000 <__progname@@GLIBC_2.17+0xab98>
  410f8c:	ldrb	w8, [x20, #848]
  410f90:	stp	x22, x21, [sp, #16]
  410f94:	mov	x29, sp
  410f98:	tbnz	w8, #0, 410fe0 <ferror@plt+0xe3e0>
  410f9c:	bl	410ee0 <ferror@plt+0xe2e0>
  410fa0:	adrp	x19, 433000 <__progname@@GLIBC_2.17+0x7b98>
  410fa4:	add	x19, x19, #0xcc8
  410fa8:	mov	x0, x19
  410fac:	bl	402780 <sigemptyset@plt>
  410fb0:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  410fb4:	mov	x21, xzr
  410fb8:	add	x22, x22, #0x398
  410fbc:	ldr	w1, [x22, x21]
  410fc0:	tbnz	w1, #31, 410fcc <ferror@plt+0xe3cc>
  410fc4:	mov	x0, x19
  410fc8:	bl	402b50 <sigaddset@plt>
  410fcc:	add	x21, x21, #0x4
  410fd0:	cmp	x21, #0x18
  410fd4:	b.ne	410fbc <ferror@plt+0xe3bc>  // b.any
  410fd8:	mov	w8, #0x1                   	// #1
  410fdc:	strb	w8, [x20, #848]
  410fe0:	ldp	x20, x19, [sp, #32]
  410fe4:	ldp	x22, x21, [sp, #16]
  410fe8:	ldp	x29, x30, [sp], #48
  410fec:	ret
  410ff0:	stp	x29, x30, [sp, #-16]!
  410ff4:	mov	x29, sp
  410ff8:	bl	410f80 <ferror@plt+0xe380>
  410ffc:	adrp	x1, 433000 <__progname@@GLIBC_2.17+0x7b98>
  411000:	add	x1, x1, #0xcc8
  411004:	mov	w0, #0x1                   	// #1
  411008:	mov	x2, xzr
  41100c:	ldp	x29, x30, [sp], #16
  411010:	b	4025e0 <sigprocmask@plt>
  411014:	stp	x29, x30, [sp, #-64]!
  411018:	str	x23, [sp, #16]
  41101c:	stp	x22, x21, [sp, #32]
  411020:	stp	x20, x19, [sp, #48]
  411024:	adrp	x20, 433000 <__progname@@GLIBC_2.17+0x7b98>
  411028:	ldr	w8, [x20, #3012]
  41102c:	mov	w19, w0
  411030:	mov	x29, sp
  411034:	cbz	w8, 41105c <ferror@plt+0xe45c>
  411038:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  41103c:	sxtw	x8, w8
  411040:	sub	x8, x8, #0x1
  411044:	str	w8, [x20, #3012]
  411048:	ldr	x9, [x21, #912]
  41104c:	ldr	x8, [x9, x8, lsl #3]
  411050:	blr	x8
  411054:	ldr	w8, [x20, #3012]
  411058:	cbnz	w8, 41103c <ferror@plt+0xe43c>
  41105c:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  411060:	adrp	x23, 433000 <__progname@@GLIBC_2.17+0x7b98>
  411064:	mov	x20, xzr
  411068:	add	x21, x21, #0x398
  41106c:	mov	w22, #0x98                  	// #152
  411070:	add	x23, x23, #0xd50
  411074:	ldr	w0, [x21, x20]
  411078:	tbnz	w0, #31, 411098 <ferror@plt+0xe498>
  41107c:	madd	x1, x0, x22, x23
  411080:	ldr	x8, [x1]
  411084:	cmp	x8, #0x1
  411088:	b.ne	411090 <ferror@plt+0xe490>  // b.any
  41108c:	str	xzr, [x1]
  411090:	mov	x2, xzr
  411094:	bl	4028c0 <sigaction@plt>
  411098:	add	x20, x20, #0x4
  41109c:	cmp	x20, #0x18
  4110a0:	b.ne	411074 <ferror@plt+0xe474>  // b.any
  4110a4:	mov	w0, w19
  4110a8:	ldp	x20, x19, [sp, #48]
  4110ac:	ldp	x22, x21, [sp, #32]
  4110b0:	ldr	x23, [sp, #16]
  4110b4:	ldp	x29, x30, [sp], #64
  4110b8:	b	4025c0 <raise@plt>
  4110bc:	stp	x29, x30, [sp, #-16]!
  4110c0:	mov	x29, sp
  4110c4:	bl	4110d8 <ferror@plt+0xe4d8>
  4110c8:	cbz	x0, 4110d4 <ferror@plt+0xe4d4>
  4110cc:	ldp	x29, x30, [sp], #16
  4110d0:	ret
  4110d4:	bl	4150b0 <ferror@plt+0x124b0>
  4110d8:	stp	x29, x30, [sp, #-80]!
  4110dc:	stp	x26, x25, [sp, #16]
  4110e0:	stp	x24, x23, [sp, #32]
  4110e4:	stp	x22, x21, [sp, #48]
  4110e8:	stp	x20, x19, [sp, #64]
  4110ec:	mov	x29, sp
  4110f0:	mov	x19, x2
  4110f4:	mov	x20, x1
  4110f8:	mov	x21, x0
  4110fc:	bl	415c50 <_obstack_memory_used@@Base+0x5c>
  411100:	mov	x22, x0
  411104:	bl	415c98 <_obstack_memory_used@@Base+0xa4>
  411108:	sub	x8, x22, x21
  41110c:	add	x23, x8, x0
  411110:	cbz	x0, 411128 <ferror@plt+0xe528>
  411114:	add	x8, x0, x22
  411118:	ldurb	w8, [x8, #-1]
  41111c:	cmp	w8, #0x2f
  411120:	cset	w26, ne  // ne = any
  411124:	b	41112c <ferror@plt+0xe52c>
  411128:	mov	x26, xzr
  41112c:	sub	x22, x20, #0x1
  411130:	ldrb	w8, [x22, #1]!
  411134:	cmp	w8, #0x2f
  411138:	b.eq	411130 <ferror@plt+0xe530>  // b.none
  41113c:	mov	x0, x22
  411140:	bl	402580 <strlen@plt>
  411144:	add	x8, x23, x26
  411148:	add	x8, x8, x0
  41114c:	mov	x24, x0
  411150:	add	x0, x8, #0x1
  411154:	bl	402740 <malloc@plt>
  411158:	mov	x25, x0
  41115c:	cbz	x0, 4111ac <ferror@plt+0xe5ac>
  411160:	mov	x3, #0xffffffffffffffff    	// #-1
  411164:	mov	x0, x25
  411168:	mov	x1, x21
  41116c:	mov	x2, x23
  411170:	bl	402ae0 <__mempcpy_chk@plt>
  411174:	mov	w8, #0x2f                  	// #47
  411178:	strb	w8, [x0]
  41117c:	add	x0, x0, x26
  411180:	cbz	x19, 411198 <ferror@plt+0xe598>
  411184:	ldrb	w8, [x20]
  411188:	cmp	w8, #0x2f
  41118c:	cset	w8, eq  // eq = none
  411190:	sub	x8, x0, x8
  411194:	str	x8, [x19]
  411198:	mov	x3, #0xffffffffffffffff    	// #-1
  41119c:	mov	x1, x22
  4111a0:	mov	x2, x24
  4111a4:	bl	402ae0 <__mempcpy_chk@plt>
  4111a8:	strb	wzr, [x0]
  4111ac:	mov	x0, x25
  4111b0:	ldp	x20, x19, [sp, #64]
  4111b4:	ldp	x22, x21, [sp, #48]
  4111b8:	ldp	x24, x23, [sp, #32]
  4111bc:	ldp	x26, x25, [sp, #16]
  4111c0:	ldp	x29, x30, [sp], #80
  4111c4:	ret
  4111c8:	stp	x29, x30, [sp, #-48]!
  4111cc:	stp	x22, x21, [sp, #16]
  4111d0:	stp	x20, x19, [sp, #32]
  4111d4:	mov	x29, sp
  4111d8:	mov	x20, x1
  4111dc:	bl	402730 <fopen@plt>
  4111e0:	mov	x19, x0
  4111e4:	cbz	x0, 411260 <ferror@plt+0xe660>
  4111e8:	mov	x0, x19
  4111ec:	bl	4026d0 <fileno@plt>
  4111f0:	cmp	w0, #0x2
  4111f4:	b.hi	411260 <ferror@plt+0xe660>  // b.pmore
  4111f8:	bl	4144cc <ferror@plt+0x118cc>
  4111fc:	tbnz	w0, #31, 411244 <ferror@plt+0xe644>
  411200:	mov	w21, w0
  411204:	mov	x0, x19
  411208:	bl	4154f0 <ferror@plt+0x128f0>
  41120c:	cbnz	w0, 411224 <ferror@plt+0xe624>
  411210:	mov	w0, w21
  411214:	mov	x1, x20
  411218:	bl	4027f0 <fdopen@plt>
  41121c:	mov	x19, x0
  411220:	cbnz	x0, 411260 <ferror@plt+0xe660>
  411224:	bl	402b80 <__errno_location@plt>
  411228:	ldr	w22, [x0]
  41122c:	mov	x20, x0
  411230:	mov	w0, w21
  411234:	bl	4028b0 <close@plt>
  411238:	mov	x19, xzr
  41123c:	str	w22, [x20]
  411240:	b	411260 <ferror@plt+0xe660>
  411244:	bl	402b80 <__errno_location@plt>
  411248:	ldr	w21, [x0]
  41124c:	mov	x20, x0
  411250:	mov	x0, x19
  411254:	bl	4154f0 <ferror@plt+0x128f0>
  411258:	mov	x19, xzr
  41125c:	str	w21, [x20]
  411260:	mov	x0, x19
  411264:	ldp	x20, x19, [sp, #32]
  411268:	ldp	x22, x21, [sp, #16]
  41126c:	ldp	x29, x30, [sp], #48
  411270:	ret
  411274:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  411278:	ldr	x0, [x8, #1128]
  41127c:	ret
  411280:	stp	x29, x30, [sp, #-64]!
  411284:	stp	x24, x23, [sp, #16]
  411288:	mov	x24, x0
  41128c:	mov	w0, #0x68                  	// #104
  411290:	stp	x22, x21, [sp, #32]
  411294:	stp	x20, x19, [sp, #48]
  411298:	mov	x29, sp
  41129c:	mov	w22, w4
  4112a0:	mov	x20, x3
  4112a4:	mov	x21, x2
  4112a8:	mov	x23, x1
  4112ac:	bl	402740 <malloc@plt>
  4112b0:	mov	x19, x0
  4112b4:	cbz	x0, 411300 <ferror@plt+0xe700>
  4112b8:	and	w8, w22, #0x1
  4112bc:	mov	w9, #0xb                   	// #11
  4112c0:	mov	w0, #0xb                   	// #11
  4112c4:	mov	w1, #0x8                   	// #8
  4112c8:	stp	x24, x23, [x19]
  4112cc:	stp	x21, x20, [x19, #16]
  4112d0:	strb	w8, [x19, #32]
  4112d4:	str	x9, [x19, #48]
  4112d8:	bl	402820 <calloc@plt>
  4112dc:	str	x0, [x19, #40]
  4112e0:	cbz	x0, 4112f4 <ferror@plt+0xe6f4>
  4112e4:	add	x8, x19, #0x38
  4112e8:	stp	x8, x8, [x19, #72]
  4112ec:	str	xzr, [x19, #96]
  4112f0:	b	411300 <ferror@plt+0xe700>
  4112f4:	mov	x0, x19
  4112f8:	bl	4029f0 <free@plt>
  4112fc:	mov	x19, xzr
  411300:	mov	x0, x19
  411304:	ldp	x20, x19, [sp, #48]
  411308:	ldp	x22, x21, [sp, #32]
  41130c:	ldp	x24, x23, [sp, #16]
  411310:	ldp	x29, x30, [sp], #64
  411314:	ret
  411318:	stp	x29, x30, [sp, #-80]!
  41131c:	stp	x26, x25, [sp, #16]
  411320:	mov	x26, x0
  411324:	mov	w0, #0x68                  	// #104
  411328:	stp	x24, x23, [sp, #32]
  41132c:	stp	x22, x21, [sp, #48]
  411330:	stp	x20, x19, [sp, #64]
  411334:	mov	x29, sp
  411338:	mov	x20, x6
  41133c:	mov	x21, x5
  411340:	mov	w24, w4
  411344:	mov	x22, x3
  411348:	mov	x23, x2
  41134c:	mov	x25, x1
  411350:	bl	402740 <malloc@plt>
  411354:	mov	x19, x0
  411358:	cbz	x0, 41147c <ferror@plt+0xe87c>
  41135c:	and	w9, w24, #0x1
  411360:	adds	x10, x21, x21, lsr #1
  411364:	strb	w9, [x19, #32]
  411368:	csinv	x9, x10, xzr, cc  // cc = lo, ul, last
  41136c:	mov	w11, #0xa                   	// #10
  411370:	cmp	x9, #0xa
  411374:	adrp	x10, 419000 <_obstack_memory_used@@Base+0x340c>
  411378:	mov	x8, xzr
  41137c:	stp	x26, x25, [x19]
  411380:	stp	x23, x22, [x19, #16]
  411384:	csel	x9, x9, x11, hi  // hi = pmore
  411388:	add	x10, x10, #0xa0
  41138c:	ldr	x22, [x10, x8, lsl #3]
  411390:	cmp	x22, x9
  411394:	b.cs	4113a8 <ferror@plt+0xe7a8>  // b.hs, b.nlast
  411398:	add	x8, x8, #0x1
  41139c:	cmp	x8, #0xe8
  4113a0:	b.ne	41138c <ferror@plt+0xe78c>  // b.any
  4113a4:	b	411470 <ferror@plt+0xe870>
  4113a8:	cmp	x8, #0xda
  4113ac:	str	x22, [x19, #48]
  4113b0:	b.hi	411470 <ferror@plt+0xe870>  // b.pmore
  4113b4:	mov	w1, #0x8                   	// #8
  4113b8:	mov	x0, x22
  4113bc:	bl	402820 <calloc@plt>
  4113c0:	str	x0, [x19, #40]
  4113c4:	cbz	x0, 411470 <ferror@plt+0xe870>
  4113c8:	add	x25, x19, #0x38
  4113cc:	str	x21, [x19, #96]
  4113d0:	cbz	x21, 411438 <ferror@plt+0xe838>
  4113d4:	mov	x23, x25
  4113d8:	mov	w0, #0x28                  	// #40
  4113dc:	bl	402740 <malloc@plt>
  4113e0:	cbz	x0, 411448 <ferror@plt+0xe848>
  4113e4:	mov	x24, x0
  4113e8:	ldr	x0, [x20]
  4113ec:	ldr	x8, [x19, #16]
  4113f0:	str	x0, [x24, #32]
  4113f4:	cbz	x8, 411400 <ferror@plt+0xe800>
  4113f8:	blr	x8
  4113fc:	ldr	x22, [x19, #48]
  411400:	ldr	x8, [x19, #40]
  411404:	udiv	x9, x0, x22
  411408:	str	x0, [x24, #8]
  41140c:	msub	x9, x9, x22, x0
  411410:	ldr	x10, [x8, x9, lsl #3]
  411414:	subs	x21, x21, #0x1
  411418:	add	x20, x20, #0x8
  41141c:	str	x10, [x24]
  411420:	str	x24, [x8, x9, lsl #3]
  411424:	str	x23, [x24, #24]
  411428:	str	x24, [x23, #16]
  41142c:	mov	x23, x24
  411430:	b.ne	4113d8 <ferror@plt+0xe7d8>  // b.any
  411434:	b	41143c <ferror@plt+0xe83c>
  411438:	mov	x24, x25
  41143c:	str	x25, [x24, #16]
  411440:	str	x24, [x19, #80]
  411444:	b	41147c <ferror@plt+0xe87c>
  411448:	cmp	x23, x25
  41144c:	b.eq	411468 <ferror@plt+0xe868>  // b.none
  411450:	ldr	x20, [x23, #24]
  411454:	mov	x0, x23
  411458:	bl	4029f0 <free@plt>
  41145c:	cmp	x20, x25
  411460:	mov	x23, x20
  411464:	b.ne	411450 <ferror@plt+0xe850>  // b.any
  411468:	ldr	x0, [x19, #40]
  41146c:	bl	4029f0 <free@plt>
  411470:	mov	x0, x19
  411474:	bl	4029f0 <free@plt>
  411478:	mov	x19, xzr
  41147c:	mov	x0, x19
  411480:	ldp	x20, x19, [sp, #64]
  411484:	ldp	x22, x21, [sp, #48]
  411488:	ldp	x24, x23, [sp, #32]
  41148c:	ldp	x26, x25, [sp, #16]
  411490:	ldp	x29, x30, [sp], #80
  411494:	ret
  411498:	ldr	x0, [x0, #96]
  41149c:	ret
  4114a0:	ldr	x0, [x1, #32]
  4114a4:	ret
  4114a8:	stp	x29, x30, [sp, #-48]!
  4114ac:	stp	x22, x21, [sp, #16]
  4114b0:	stp	x20, x19, [sp, #32]
  4114b4:	ldr	x8, [x1, #32]
  4114b8:	mov	x29, sp
  4114bc:	cmp	x8, x2
  4114c0:	b.eq	41152c <ferror@plt+0xe92c>  // b.none
  4114c4:	ldr	x8, [x0, #16]
  4114c8:	mov	x19, x1
  4114cc:	mov	x21, x2
  4114d0:	mov	x20, x0
  4114d4:	cbz	x8, 4114e8 <ferror@plt+0xe8e8>
  4114d8:	mov	x0, x21
  4114dc:	blr	x8
  4114e0:	mov	x22, x0
  4114e4:	b	4114ec <ferror@plt+0xe8ec>
  4114e8:	mov	x22, x21
  4114ec:	ldr	x8, [x19, #8]
  4114f0:	cmp	x22, x8
  4114f4:	b.ne	411500 <ferror@plt+0xe900>  // b.any
  4114f8:	str	x21, [x19, #32]
  4114fc:	b	41152c <ferror@plt+0xe92c>
  411500:	mov	x0, x20
  411504:	mov	x1, x19
  411508:	bl	4124e0 <ferror@plt+0xf8e0>
  41150c:	str	x21, [x19, #32]
  411510:	str	x22, [x19, #8]
  411514:	ldp	x9, x8, [x20, #40]
  411518:	udiv	x10, x22, x8
  41151c:	msub	x8, x10, x8, x22
  411520:	ldr	x10, [x9, x8, lsl #3]
  411524:	str	x10, [x19]
  411528:	str	x19, [x9, x8, lsl #3]
  41152c:	ldp	x20, x19, [sp, #32]
  411530:	ldp	x22, x21, [sp, #16]
  411534:	mov	w0, wzr
  411538:	ldp	x29, x30, [sp], #48
  41153c:	ret
  411540:	ldr	x8, [x1, #16]
  411544:	add	x9, x0, #0x38
  411548:	cmp	x8, x9
  41154c:	csel	x0, xzr, x8, eq  // eq = none
  411550:	ret
  411554:	ldr	x8, [x1, #24]
  411558:	add	x9, x0, #0x38
  41155c:	cmp	x8, x9
  411560:	csel	x0, xzr, x8, eq  // eq = none
  411564:	ret
  411568:	stp	x29, x30, [sp, #-16]!
  41156c:	ldr	x9, [x0, #96]
  411570:	mov	x29, sp
  411574:	cmp	x9, x1
  411578:	b.ls	4115cc <ferror@plt+0xe9cc>  // b.plast
  41157c:	sub	x10, x9, #0x1
  411580:	cmp	x1, x10, lsr #1
  411584:	b.ls	4115ac <ferror@plt+0xe9ac>  // b.plast
  411588:	ldr	x8, [x0, #80]
  41158c:	cmp	x10, x1
  411590:	b.eq	4115c0 <ferror@plt+0xe9c0>  // b.none
  411594:	sub	x9, x1, x9
  411598:	add	x9, x9, #0x1
  41159c:	ldr	x8, [x8, #24]
  4115a0:	adds	x9, x9, #0x1
  4115a4:	b.cc	41159c <ferror@plt+0xe99c>  // b.lo, b.ul, b.last
  4115a8:	b	4115c0 <ferror@plt+0xe9c0>
  4115ac:	ldr	x8, [x0, #72]
  4115b0:	cbz	x1, 4115c0 <ferror@plt+0xe9c0>
  4115b4:	ldr	x8, [x8, #16]
  4115b8:	subs	x1, x1, #0x1
  4115bc:	b.ne	4115b4 <ferror@plt+0xe9b4>  // b.any
  4115c0:	ldr	x0, [x8, #32]
  4115c4:	ldp	x29, x30, [sp], #16
  4115c8:	ret
  4115cc:	bl	402920 <abort@plt>
  4115d0:	stp	x29, x30, [sp, #-48]!
  4115d4:	stp	x22, x21, [sp, #16]
  4115d8:	stp	x20, x19, [sp, #32]
  4115dc:	ldr	x8, [x0, #96]
  4115e0:	mov	x29, sp
  4115e4:	cmp	x8, x1
  4115e8:	b.ls	4116b4 <ferror@plt+0xeab4>  // b.plast
  4115ec:	sub	x9, x8, #0x1
  4115f0:	mov	x19, x0
  4115f4:	mov	x21, x2
  4115f8:	cmp	x1, x9, lsr #1
  4115fc:	b.ls	411624 <ferror@plt+0xea24>  // b.plast
  411600:	ldr	x20, [x19, #80]
  411604:	cmp	x9, x1
  411608:	b.eq	411638 <ferror@plt+0xea38>  // b.none
  41160c:	sub	x8, x1, x8
  411610:	add	x8, x8, #0x1
  411614:	ldr	x20, [x20, #24]
  411618:	adds	x8, x8, #0x1
  41161c:	b.cc	411614 <ferror@plt+0xea14>  // b.lo, b.ul, b.last
  411620:	b	411638 <ferror@plt+0xea38>
  411624:	ldr	x20, [x19, #72]
  411628:	cbz	x1, 411638 <ferror@plt+0xea38>
  41162c:	ldr	x20, [x20, #16]
  411630:	subs	x1, x1, #0x1
  411634:	b.ne	41162c <ferror@plt+0xea2c>  // b.any
  411638:	ldr	x8, [x20, #32]
  41163c:	cmp	x8, x21
  411640:	b.eq	4116a0 <ferror@plt+0xeaa0>  // b.none
  411644:	ldr	x8, [x19, #16]
  411648:	cbz	x8, 41165c <ferror@plt+0xea5c>
  41164c:	mov	x0, x21
  411650:	blr	x8
  411654:	mov	x22, x0
  411658:	b	411660 <ferror@plt+0xea60>
  41165c:	mov	x22, x21
  411660:	ldr	x8, [x20, #8]
  411664:	cmp	x22, x8
  411668:	b.ne	411674 <ferror@plt+0xea74>  // b.any
  41166c:	str	x21, [x20, #32]
  411670:	b	4116a0 <ferror@plt+0xeaa0>
  411674:	mov	x0, x19
  411678:	mov	x1, x20
  41167c:	bl	4124e0 <ferror@plt+0xf8e0>
  411680:	str	x21, [x20, #32]
  411684:	str	x22, [x20, #8]
  411688:	ldp	x9, x8, [x19, #40]
  41168c:	udiv	x10, x22, x8
  411690:	msub	x8, x10, x8, x22
  411694:	ldr	x10, [x9, x8, lsl #3]
  411698:	str	x10, [x20]
  41169c:	str	x20, [x9, x8, lsl #3]
  4116a0:	mov	x0, x20
  4116a4:	ldp	x20, x19, [sp, #32]
  4116a8:	ldp	x22, x21, [sp, #16]
  4116ac:	ldp	x29, x30, [sp], #48
  4116b0:	ret
  4116b4:	bl	402920 <abort@plt>
  4116b8:	stp	x29, x30, [sp, #-96]!
  4116bc:	str	x27, [sp, #16]
  4116c0:	subs	x27, x2, x1
  4116c4:	stp	x26, x25, [sp, #32]
  4116c8:	stp	x24, x23, [sp, #48]
  4116cc:	stp	x22, x21, [sp, #64]
  4116d0:	stp	x20, x19, [sp, #80]
  4116d4:	mov	x29, sp
  4116d8:	b.cc	411900 <ferror@plt+0xed00>  // b.lo, b.ul, b.last
  4116dc:	ldr	x26, [x0, #96]
  4116e0:	mov	x19, x2
  4116e4:	mov	x21, x0
  4116e8:	cmp	x26, x2
  4116ec:	b.cc	411900 <ferror@plt+0xed00>  // b.lo, b.ul, b.last
  4116f0:	ldr	x8, [x21, #16]
  4116f4:	mov	x22, x3
  4116f8:	mov	x20, x1
  4116fc:	cbz	x8, 411710 <ferror@plt+0xeb10>
  411700:	mov	x0, x22
  411704:	blr	x8
  411708:	mov	x23, x0
  41170c:	b	411714 <ferror@plt+0xeb14>
  411710:	mov	x23, x22
  411714:	ldp	x9, x8, [x21, #40]
  411718:	ldr	x24, [x21, #8]
  41171c:	udiv	x10, x23, x8
  411720:	msub	x8, x10, x8, x23
  411724:	ldrb	w10, [x21, #32]
  411728:	ldr	x25, [x9, x8, lsl #3]
  41172c:	cbz	w10, 411784 <ferror@plt+0xeb84>
  411730:	cbz	x25, 4117dc <ferror@plt+0xebdc>
  411734:	mov	x26, xzr
  411738:	ldr	x8, [x25, #8]
  41173c:	cmp	x8, x23
  411740:	b.ne	41176c <ferror@plt+0xeb6c>  // b.any
  411744:	ldr	x1, [x25, #32]
  411748:	cbz	x24, 411764 <ferror@plt+0xeb64>
  41174c:	mov	x0, x22
  411750:	blr	x24
  411754:	tbz	w0, #0, 41176c <ferror@plt+0xeb6c>
  411758:	mov	x0, x25
  41175c:	cbz	x26, 411770 <ferror@plt+0xeb70>
  411760:	b	411878 <ferror@plt+0xec78>
  411764:	cmp	x1, x22
  411768:	b.eq	411758 <ferror@plt+0xeb58>  // b.none
  41176c:	mov	x0, x26
  411770:	ldr	x25, [x25]
  411774:	mov	x26, x0
  411778:	cbnz	x25, 411738 <ferror@plt+0xeb38>
  41177c:	cbnz	x20, 4117e4 <ferror@plt+0xebe4>
  411780:	b	41180c <ferror@plt+0xec0c>
  411784:	cbz	x25, 4117bc <ferror@plt+0xebbc>
  411788:	ldr	x8, [x25, #8]
  41178c:	cmp	x8, x23
  411790:	b.ne	4117b4 <ferror@plt+0xebb4>  // b.any
  411794:	ldr	x1, [x25, #32]
  411798:	cbz	x24, 4117ac <ferror@plt+0xebac>
  41179c:	mov	x0, x22
  4117a0:	blr	x24
  4117a4:	tbz	w0, #0, 4117b4 <ferror@plt+0xebb4>
  4117a8:	b	4117bc <ferror@plt+0xebbc>
  4117ac:	cmp	x1, x22
  4117b0:	b.eq	4117bc <ferror@plt+0xebbc>  // b.none
  4117b4:	ldr	x25, [x25]
  4117b8:	cbnz	x25, 411788 <ferror@plt+0xeb88>
  4117bc:	cbz	x20, 411840 <ferror@plt+0xec40>
  4117c0:	ldr	x8, [x21, #72]
  4117c4:	cmp	x8, x25
  4117c8:	b.eq	4118d8 <ferror@plt+0xecd8>  // b.none
  4117cc:	subs	x20, x20, #0x1
  4117d0:	b.eq	411840 <ferror@plt+0xec40>  // b.none
  4117d4:	ldr	x8, [x8, #16]
  4117d8:	b	4117c4 <ferror@plt+0xebc4>
  4117dc:	mov	x0, xzr
  4117e0:	cbz	x20, 41180c <ferror@plt+0xec0c>
  4117e4:	ldr	x8, [x21, #72]
  4117e8:	add	x9, x21, #0x38
  4117ec:	cmp	x8, x9
  4117f0:	b.eq	41180c <ferror@plt+0xec0c>  // b.none
  4117f4:	cmp	x8, x0
  4117f8:	b.eq	4118d8 <ferror@plt+0xecd8>  // b.none
  4117fc:	subs	x20, x20, #0x1
  411800:	b.eq	41180c <ferror@plt+0xec0c>  // b.none
  411804:	ldr	x8, [x8, #16]
  411808:	b	4117ec <ferror@plt+0xebec>
  41180c:	ldr	x9, [x21, #96]
  411810:	cmp	x9, x19
  411814:	b.ls	4118dc <ferror@plt+0xecdc>  // b.plast
  411818:	ldr	x8, [x21, #80]
  41181c:	cmp	x8, x0
  411820:	b.eq	4118d8 <ferror@plt+0xecd8>  // b.none
  411824:	sub	x9, x19, x9
  411828:	adds	x9, x9, #0x1
  41182c:	b.cs	4118dc <ferror@plt+0xecdc>  // b.hs, b.nlast
  411830:	ldr	x8, [x8, #24]
  411834:	cmp	x8, x0
  411838:	b.ne	411828 <ferror@plt+0xec28>  // b.any
  41183c:	b	4118d8 <ferror@plt+0xecd8>
  411840:	cmp	x26, x19
  411844:	b.ls	411870 <ferror@plt+0xec70>  // b.plast
  411848:	ldr	x8, [x21, #80]
  41184c:	cmp	x8, x25
  411850:	b.eq	4118d8 <ferror@plt+0xecd8>  // b.none
  411854:	sub	x9, x19, x26
  411858:	adds	x9, x9, #0x1
  41185c:	b.cs	411870 <ferror@plt+0xec70>  // b.hs, b.nlast
  411860:	ldr	x8, [x8, #24]
  411864:	cmp	x8, x25
  411868:	b.ne	411858 <ferror@plt+0xec58>  // b.any
  41186c:	b	4118d8 <ferror@plt+0xecd8>
  411870:	mov	x0, x25
  411874:	b	4118dc <ferror@plt+0xecdc>
  411878:	ldr	x21, [x21, #72]
  41187c:	cbz	x20, 411890 <ferror@plt+0xec90>
  411880:	mov	x8, x20
  411884:	ldr	x21, [x21, #16]
  411888:	subs	x8, x8, #0x1
  41188c:	b.ne	411884 <ferror@plt+0xec84>  // b.any
  411890:	cbz	x27, 4118d8 <ferror@plt+0xecd8>
  411894:	sub	x19, x20, x19
  411898:	ldr	x8, [x21, #8]
  41189c:	cmp	x8, x23
  4118a0:	b.ne	4118c4 <ferror@plt+0xecc4>  // b.any
  4118a4:	ldr	x1, [x21, #32]
  4118a8:	cbz	x24, 4118bc <ferror@plt+0xecbc>
  4118ac:	mov	x0, x22
  4118b0:	blr	x24
  4118b4:	tbz	w0, #0, 4118c4 <ferror@plt+0xecc4>
  4118b8:	b	4118f8 <ferror@plt+0xecf8>
  4118bc:	cmp	x1, x22
  4118c0:	b.eq	4118f8 <ferror@plt+0xecf8>  // b.none
  4118c4:	ldr	x21, [x21, #16]
  4118c8:	adds	x19, x19, #0x1
  4118cc:	mov	x0, xzr
  4118d0:	b.cc	411898 <ferror@plt+0xec98>  // b.lo, b.ul, b.last
  4118d4:	b	4118dc <ferror@plt+0xecdc>
  4118d8:	mov	x0, xzr
  4118dc:	ldp	x20, x19, [sp, #80]
  4118e0:	ldp	x22, x21, [sp, #64]
  4118e4:	ldp	x24, x23, [sp, #48]
  4118e8:	ldp	x26, x25, [sp, #32]
  4118ec:	ldr	x27, [sp, #16]
  4118f0:	ldp	x29, x30, [sp], #96
  4118f4:	ret
  4118f8:	mov	x0, x21
  4118fc:	b	4118dc <ferror@plt+0xecdc>
  411900:	bl	402920 <abort@plt>
  411904:	stp	x29, x30, [sp, #-80]!
  411908:	cmp	x1, x2
  41190c:	stp	x26, x25, [sp, #16]
  411910:	stp	x24, x23, [sp, #32]
  411914:	stp	x22, x21, [sp, #48]
  411918:	stp	x20, x19, [sp, #64]
  41191c:	mov	x29, sp
  411920:	b.hi	411ab4 <ferror@plt+0xeeb4>  // b.pmore
  411924:	ldr	x8, [x0, #96]
  411928:	mov	x20, x2
  41192c:	mov	x23, x0
  411930:	cmp	x8, x2
  411934:	b.cc	411ab4 <ferror@plt+0xeeb4>  // b.lo, b.ul, b.last
  411938:	ldr	x8, [x23, #16]
  41193c:	mov	x21, x3
  411940:	mov	x19, x1
  411944:	cbz	x8, 411958 <ferror@plt+0xed58>
  411948:	mov	x0, x21
  41194c:	blr	x8
  411950:	mov	x22, x0
  411954:	b	41195c <ferror@plt+0xed5c>
  411958:	mov	x22, x21
  41195c:	ldp	x9, x8, [x23, #40]
  411960:	ldr	x24, [x23, #8]
  411964:	udiv	x10, x22, x8
  411968:	msub	x8, x10, x8, x22
  41196c:	ldrb	w10, [x23, #32]
  411970:	ldr	x25, [x9, x8, lsl #3]
  411974:	cbz	w10, 4119fc <ferror@plt+0xedfc>
  411978:	cbz	x25, 411a00 <ferror@plt+0xee00>
  41197c:	mov	x8, xzr
  411980:	ldr	x9, [x25, #8]
  411984:	mov	x26, x8
  411988:	cmp	x9, x22
  41198c:	b.ne	4119b8 <ferror@plt+0xedb8>  // b.any
  411990:	ldr	x1, [x25, #32]
  411994:	cbz	x24, 4119b0 <ferror@plt+0xedb0>
  411998:	mov	x0, x21
  41199c:	blr	x24
  4119a0:	tbz	w0, #0, 4119b8 <ferror@plt+0xedb8>
  4119a4:	mov	x8, x25
  4119a8:	cbz	x26, 4119bc <ferror@plt+0xedbc>
  4119ac:	b	411a48 <ferror@plt+0xee48>
  4119b0:	cmp	x1, x21
  4119b4:	b.eq	4119a4 <ferror@plt+0xeda4>  // b.none
  4119b8:	mov	x8, x26
  4119bc:	ldr	x25, [x25]
  4119c0:	cbnz	x25, 411980 <ferror@plt+0xed80>
  4119c4:	cbnz	x8, 411a0c <ferror@plt+0xee0c>
  4119c8:	b	411a00 <ferror@plt+0xee00>
  4119cc:	ldr	x8, [x25, #8]
  4119d0:	cmp	x8, x22
  4119d4:	b.ne	4119f8 <ferror@plt+0xedf8>  // b.any
  4119d8:	ldr	x1, [x25, #32]
  4119dc:	cbz	x24, 4119f0 <ferror@plt+0xedf0>
  4119e0:	mov	x0, x21
  4119e4:	blr	x24
  4119e8:	tbz	w0, #0, 4119f8 <ferror@plt+0xedf8>
  4119ec:	b	411a08 <ferror@plt+0xee08>
  4119f0:	cmp	x1, x21
  4119f4:	b.eq	411a08 <ferror@plt+0xee08>  // b.none
  4119f8:	ldr	x25, [x25]
  4119fc:	cbnz	x25, 4119cc <ferror@plt+0xedcc>
  411a00:	mov	x0, #0xffffffffffffffff    	// #-1
  411a04:	b	411a30 <ferror@plt+0xee30>
  411a08:	mov	x8, x25
  411a0c:	add	x10, x23, #0x38
  411a10:	mov	x9, #0xffffffffffffffff    	// #-1
  411a14:	ldr	x8, [x8, #24]
  411a18:	add	x9, x9, #0x1
  411a1c:	cmp	x8, x10
  411a20:	b.ne	411a14 <ferror@plt+0xee14>  // b.any
  411a24:	cmp	x9, x20
  411a28:	ccmp	x9, x19, #0x0, cc  // cc = lo, ul, last
  411a2c:	csinv	x0, x9, xzr, cs  // cs = hs, nlast
  411a30:	ldp	x20, x19, [sp, #64]
  411a34:	ldp	x22, x21, [sp, #48]
  411a38:	ldp	x24, x23, [sp, #32]
  411a3c:	ldp	x26, x25, [sp, #16]
  411a40:	ldp	x29, x30, [sp], #80
  411a44:	ret
  411a48:	ldr	x23, [x23, #72]
  411a4c:	cbz	x19, 411a60 <ferror@plt+0xee60>
  411a50:	mov	x8, x19
  411a54:	ldr	x23, [x23, #16]
  411a58:	subs	x8, x8, #0x1
  411a5c:	b.ne	411a54 <ferror@plt+0xee54>  // b.any
  411a60:	cmp	x19, x20
  411a64:	b.cs	411a00 <ferror@plt+0xee00>  // b.hs, b.nlast
  411a68:	ldr	x8, [x23, #8]
  411a6c:	cmp	x8, x22
  411a70:	b.ne	411a94 <ferror@plt+0xee94>  // b.any
  411a74:	ldr	x1, [x23, #32]
  411a78:	cbz	x24, 411a8c <ferror@plt+0xee8c>
  411a7c:	mov	x0, x21
  411a80:	blr	x24
  411a84:	tbz	w0, #0, 411a94 <ferror@plt+0xee94>
  411a88:	b	411aac <ferror@plt+0xeeac>
  411a8c:	cmp	x1, x21
  411a90:	b.eq	411aac <ferror@plt+0xeeac>  // b.none
  411a94:	ldr	x23, [x23, #16]
  411a98:	add	x19, x19, #0x1
  411a9c:	cmp	x20, x19
  411aa0:	mov	x0, #0xffffffffffffffff    	// #-1
  411aa4:	b.ne	411a68 <ferror@plt+0xee68>  // b.any
  411aa8:	b	411a30 <ferror@plt+0xee30>
  411aac:	mov	x0, x19
  411ab0:	b	411a30 <ferror@plt+0xee30>
  411ab4:	bl	402920 <abort@plt>
  411ab8:	stp	x29, x30, [sp, #-48]!
  411abc:	stp	x20, x19, [sp, #32]
  411ac0:	mov	x20, x0
  411ac4:	mov	w0, #0x28                  	// #40
  411ac8:	str	x21, [sp, #16]
  411acc:	mov	x29, sp
  411ad0:	mov	x21, x1
  411ad4:	bl	402740 <malloc@plt>
  411ad8:	mov	x19, x0
  411adc:	cbz	x0, 411b40 <ferror@plt+0xef40>
  411ae0:	str	x21, [x19, #32]
  411ae4:	ldr	x8, [x20, #16]
  411ae8:	cbz	x8, 411af8 <ferror@plt+0xeef8>
  411aec:	mov	x0, x21
  411af0:	blr	x8
  411af4:	mov	x21, x0
  411af8:	str	x21, [x19, #8]
  411afc:	ldp	x9, x8, [x20, #40]
  411b00:	mov	x0, x20
  411b04:	udiv	x10, x21, x8
  411b08:	msub	x8, x10, x8, x21
  411b0c:	ldr	x10, [x9, x8, lsl #3]
  411b10:	str	x10, [x19]
  411b14:	add	x10, x20, #0x38
  411b18:	str	x19, [x9, x8, lsl #3]
  411b1c:	str	x10, [x19, #24]
  411b20:	ldr	x8, [x20, #72]
  411b24:	str	x8, [x19, #16]
  411b28:	str	x19, [x8, #24]
  411b2c:	str	x19, [x20, #72]
  411b30:	ldr	x8, [x20, #96]
  411b34:	add	x8, x8, #0x1
  411b38:	str	x8, [x20, #96]
  411b3c:	bl	412528 <ferror@plt+0xf928>
  411b40:	mov	x0, x19
  411b44:	ldp	x20, x19, [sp, #32]
  411b48:	ldr	x21, [sp, #16]
  411b4c:	ldp	x29, x30, [sp], #48
  411b50:	ret
  411b54:	stp	x29, x30, [sp, #-48]!
  411b58:	stp	x20, x19, [sp, #32]
  411b5c:	mov	x20, x0
  411b60:	mov	w0, #0x28                  	// #40
  411b64:	str	x21, [sp, #16]
  411b68:	mov	x29, sp
  411b6c:	mov	x21, x1
  411b70:	bl	402740 <malloc@plt>
  411b74:	mov	x19, x0
  411b78:	cbz	x0, 411bdc <ferror@plt+0xefdc>
  411b7c:	str	x21, [x19, #32]
  411b80:	ldr	x8, [x20, #16]
  411b84:	cbz	x8, 411b94 <ferror@plt+0xef94>
  411b88:	mov	x0, x21
  411b8c:	blr	x8
  411b90:	mov	x21, x0
  411b94:	str	x21, [x19, #8]
  411b98:	ldp	x9, x8, [x20, #40]
  411b9c:	mov	x0, x20
  411ba0:	udiv	x10, x21, x8
  411ba4:	msub	x8, x10, x8, x21
  411ba8:	ldr	x10, [x9, x8, lsl #3]
  411bac:	str	x10, [x19]
  411bb0:	add	x10, x20, #0x38
  411bb4:	str	x19, [x9, x8, lsl #3]
  411bb8:	str	x10, [x19, #16]
  411bbc:	ldr	x8, [x20, #80]
  411bc0:	str	x8, [x19, #24]
  411bc4:	str	x19, [x8, #16]
  411bc8:	ldr	x8, [x20, #96]
  411bcc:	str	x19, [x20, #80]
  411bd0:	add	x8, x8, #0x1
  411bd4:	str	x8, [x20, #96]
  411bd8:	bl	412528 <ferror@plt+0xf928>
  411bdc:	mov	x0, x19
  411be0:	ldp	x20, x19, [sp, #32]
  411be4:	ldr	x21, [sp, #16]
  411be8:	ldp	x29, x30, [sp], #48
  411bec:	ret
  411bf0:	stp	x29, x30, [sp, #-48]!
  411bf4:	stp	x20, x19, [sp, #32]
  411bf8:	mov	x20, x0
  411bfc:	mov	w0, #0x28                  	// #40
  411c00:	stp	x22, x21, [sp, #16]
  411c04:	mov	x29, sp
  411c08:	mov	x22, x2
  411c0c:	mov	x21, x1
  411c10:	bl	402740 <malloc@plt>
  411c14:	mov	x19, x0
  411c18:	cbz	x0, 411c78 <ferror@plt+0xf078>
  411c1c:	str	x22, [x19, #32]
  411c20:	ldr	x8, [x20, #16]
  411c24:	cbz	x8, 411c34 <ferror@plt+0xf034>
  411c28:	mov	x0, x22
  411c2c:	blr	x8
  411c30:	mov	x22, x0
  411c34:	str	x22, [x19, #8]
  411c38:	ldp	x9, x8, [x20, #40]
  411c3c:	mov	x0, x20
  411c40:	udiv	x10, x22, x8
  411c44:	msub	x8, x10, x8, x22
  411c48:	ldr	x10, [x9, x8, lsl #3]
  411c4c:	str	x10, [x19]
  411c50:	str	x19, [x9, x8, lsl #3]
  411c54:	str	x21, [x19, #16]
  411c58:	ldr	x8, [x21, #24]
  411c5c:	str	x8, [x19, #24]
  411c60:	str	x19, [x8, #16]
  411c64:	str	x19, [x21, #24]
  411c68:	ldr	x8, [x20, #96]
  411c6c:	add	x8, x8, #0x1
  411c70:	str	x8, [x20, #96]
  411c74:	bl	412528 <ferror@plt+0xf928>
  411c78:	mov	x0, x19
  411c7c:	ldp	x20, x19, [sp, #32]
  411c80:	ldp	x22, x21, [sp, #16]
  411c84:	ldp	x29, x30, [sp], #48
  411c88:	ret
  411c8c:	stp	x29, x30, [sp, #-48]!
  411c90:	stp	x20, x19, [sp, #32]
  411c94:	mov	x20, x0
  411c98:	mov	w0, #0x28                  	// #40
  411c9c:	stp	x22, x21, [sp, #16]
  411ca0:	mov	x29, sp
  411ca4:	mov	x22, x2
  411ca8:	mov	x21, x1
  411cac:	bl	402740 <malloc@plt>
  411cb0:	mov	x19, x0
  411cb4:	cbz	x0, 411d14 <ferror@plt+0xf114>
  411cb8:	str	x22, [x19, #32]
  411cbc:	ldr	x8, [x20, #16]
  411cc0:	cbz	x8, 411cd0 <ferror@plt+0xf0d0>
  411cc4:	mov	x0, x22
  411cc8:	blr	x8
  411ccc:	mov	x22, x0
  411cd0:	str	x22, [x19, #8]
  411cd4:	ldp	x9, x8, [x20, #40]
  411cd8:	mov	x0, x20
  411cdc:	udiv	x10, x22, x8
  411ce0:	msub	x8, x10, x8, x22
  411ce4:	ldr	x10, [x9, x8, lsl #3]
  411ce8:	str	x10, [x19]
  411cec:	str	x19, [x9, x8, lsl #3]
  411cf0:	str	x21, [x19, #24]
  411cf4:	ldr	x8, [x21, #16]
  411cf8:	str	x8, [x19, #16]
  411cfc:	str	x19, [x8, #24]
  411d00:	str	x19, [x21, #16]
  411d04:	ldr	x8, [x20, #96]
  411d08:	add	x8, x8, #0x1
  411d0c:	str	x8, [x20, #96]
  411d10:	bl	412528 <ferror@plt+0xf928>
  411d14:	mov	x0, x19
  411d18:	ldp	x20, x19, [sp, #32]
  411d1c:	ldp	x22, x21, [sp, #16]
  411d20:	ldp	x29, x30, [sp], #48
  411d24:	ret
  411d28:	stp	x29, x30, [sp, #-64]!
  411d2c:	stp	x22, x21, [sp, #32]
  411d30:	stp	x20, x19, [sp, #48]
  411d34:	str	x23, [sp, #16]
  411d38:	ldr	x23, [x0, #96]
  411d3c:	mov	x29, sp
  411d40:	cmp	x23, x1
  411d44:	b.cc	411e28 <ferror@plt+0xf228>  // b.lo, b.ul, b.last
  411d48:	mov	x19, x0
  411d4c:	mov	w0, #0x28                  	// #40
  411d50:	mov	x21, x1
  411d54:	mov	x22, x2
  411d58:	bl	402740 <malloc@plt>
  411d5c:	mov	x20, x0
  411d60:	cbz	x0, 411e10 <ferror@plt+0xf210>
  411d64:	str	x22, [x20, #32]
  411d68:	ldr	x8, [x19, #16]
  411d6c:	cbz	x8, 411d7c <ferror@plt+0xf17c>
  411d70:	mov	x0, x22
  411d74:	blr	x8
  411d78:	mov	x22, x0
  411d7c:	str	x22, [x20, #8]
  411d80:	ldp	x9, x8, [x19, #40]
  411d84:	cmp	x21, x23, lsr #1
  411d88:	udiv	x10, x22, x8
  411d8c:	msub	x8, x10, x8, x22
  411d90:	ldr	x10, [x9, x8, lsl #3]
  411d94:	str	x10, [x20]
  411d98:	str	x20, [x9, x8, lsl #3]
  411d9c:	b.ls	411dd4 <ferror@plt+0xf1d4>  // b.plast
  411da0:	cmp	x23, x21
  411da4:	add	x8, x19, #0x38
  411da8:	b.eq	411dbc <ferror@plt+0xf1bc>  // b.none
  411dac:	sub	x9, x21, x23
  411db0:	ldr	x8, [x8, #24]
  411db4:	adds	x9, x9, #0x1
  411db8:	b.cc	411db0 <ferror@plt+0xf1b0>  // b.lo, b.ul, b.last
  411dbc:	str	x8, [x20, #16]
  411dc0:	ldr	x9, [x8, #24]
  411dc4:	str	x9, [x20, #24]
  411dc8:	str	x20, [x9, #16]
  411dcc:	str	x20, [x8, #24]
  411dd0:	b	411dfc <ferror@plt+0xf1fc>
  411dd4:	add	x8, x19, #0x38
  411dd8:	cbz	x21, 411de8 <ferror@plt+0xf1e8>
  411ddc:	ldr	x8, [x8, #16]
  411de0:	subs	x21, x21, #0x1
  411de4:	b.ne	411ddc <ferror@plt+0xf1dc>  // b.any
  411de8:	str	x8, [x20, #24]
  411dec:	ldr	x9, [x8, #16]
  411df0:	str	x9, [x20, #16]
  411df4:	str	x20, [x9, #24]
  411df8:	str	x20, [x8, #16]
  411dfc:	ldr	x8, [x19, #96]
  411e00:	mov	x0, x19
  411e04:	add	x8, x8, #0x1
  411e08:	str	x8, [x19, #96]
  411e0c:	bl	412528 <ferror@plt+0xf928>
  411e10:	mov	x0, x20
  411e14:	ldp	x20, x19, [sp, #48]
  411e18:	ldp	x22, x21, [sp, #32]
  411e1c:	ldr	x23, [sp, #16]
  411e20:	ldp	x29, x30, [sp], #64
  411e24:	ret
  411e28:	bl	402920 <abort@plt>
  411e2c:	stp	x29, x30, [sp, #-32]!
  411e30:	stp	x20, x19, [sp, #16]
  411e34:	mov	x29, sp
  411e38:	mov	x19, x1
  411e3c:	mov	x20, x0
  411e40:	bl	4124e0 <ferror@plt+0xf8e0>
  411e44:	ldp	x9, x8, [x19, #16]
  411e48:	str	x9, [x8, #16]
  411e4c:	str	x8, [x9, #24]
  411e50:	ldr	x9, [x20, #96]
  411e54:	ldr	x8, [x20, #24]
  411e58:	sub	x9, x9, #0x1
  411e5c:	str	x9, [x20, #96]
  411e60:	cbz	x8, 411e6c <ferror@plt+0xf26c>
  411e64:	ldr	x0, [x19, #32]
  411e68:	blr	x8
  411e6c:	mov	x0, x19
  411e70:	bl	4029f0 <free@plt>
  411e74:	ldp	x20, x19, [sp, #16]
  411e78:	mov	w0, #0x1                   	// #1
  411e7c:	ldp	x29, x30, [sp], #32
  411e80:	ret
  411e84:	stp	x29, x30, [sp, #-32]!
  411e88:	stp	x20, x19, [sp, #16]
  411e8c:	ldr	x8, [x0, #96]
  411e90:	mov	x29, sp
  411e94:	cmp	x8, x1
  411e98:	b.ls	411f34 <ferror@plt+0xf334>  // b.plast
  411e9c:	sub	x9, x8, #0x1
  411ea0:	mov	x19, x0
  411ea4:	add	x20, x0, #0x38
  411ea8:	cmp	x1, x9, lsr #1
  411eac:	b.ls	411ed4 <ferror@plt+0xf2d4>  // b.plast
  411eb0:	sub	x8, x1, x8
  411eb4:	mov	x9, x20
  411eb8:	ldr	x20, [x20, #24]
  411ebc:	adds	x8, x8, #0x1
  411ec0:	b.cc	411eb4 <ferror@plt+0xf2b4>  // b.lo, b.ul, b.last
  411ec4:	ldr	x8, [x20, #24]
  411ec8:	str	x8, [x9, #24]
  411ecc:	str	x9, [x8, #16]
  411ed0:	b	411ef4 <ferror@plt+0xf2f4>
  411ed4:	add	x8, x1, #0x1
  411ed8:	mov	x9, x20
  411edc:	ldr	x20, [x20, #16]
  411ee0:	subs	x8, x8, #0x1
  411ee4:	b.ne	411ed8 <ferror@plt+0xf2d8>  // b.any
  411ee8:	ldr	x8, [x20, #16]
  411eec:	str	x8, [x9, #16]
  411ef0:	str	x9, [x8, #24]
  411ef4:	mov	x0, x19
  411ef8:	mov	x1, x20
  411efc:	bl	4124e0 <ferror@plt+0xf8e0>
  411f00:	ldr	x9, [x19, #96]
  411f04:	ldr	x8, [x19, #24]
  411f08:	sub	x9, x9, #0x1
  411f0c:	str	x9, [x19, #96]
  411f10:	cbz	x8, 411f1c <ferror@plt+0xf31c>
  411f14:	ldr	x0, [x20, #32]
  411f18:	blr	x8
  411f1c:	mov	x0, x20
  411f20:	bl	4029f0 <free@plt>
  411f24:	ldp	x20, x19, [sp, #16]
  411f28:	mov	w0, #0x1                   	// #1
  411f2c:	ldp	x29, x30, [sp], #32
  411f30:	ret
  411f34:	bl	402920 <abort@plt>
  411f38:	stp	x29, x30, [sp, #-32]!
  411f3c:	ldr	x2, [x0, #96]
  411f40:	mov	x3, x1
  411f44:	mov	x1, xzr
  411f48:	str	x19, [sp, #16]
  411f4c:	mov	x29, sp
  411f50:	mov	x19, x0
  411f54:	bl	4116b8 <ferror@plt+0xeab8>
  411f58:	cbz	x0, 411f6c <ferror@plt+0xf36c>
  411f5c:	mov	x1, x0
  411f60:	mov	x0, x19
  411f64:	bl	411e2c <ferror@plt+0xf22c>
  411f68:	mov	w0, #0x1                   	// #1
  411f6c:	ldr	x19, [sp, #16]
  411f70:	ldp	x29, x30, [sp], #32
  411f74:	ret
  411f78:	stp	x29, x30, [sp, #-64]!
  411f7c:	stp	x22, x21, [sp, #32]
  411f80:	stp	x20, x19, [sp, #48]
  411f84:	ldr	x20, [x0, #72]
  411f88:	add	x21, x0, #0x38
  411f8c:	mov	x19, x0
  411f90:	str	x23, [sp, #16]
  411f94:	cmp	x20, x21
  411f98:	mov	x29, sp
  411f9c:	b.eq	411fc8 <ferror@plt+0xf3c8>  // b.none
  411fa0:	ldr	x22, [x19, #24]
  411fa4:	ldr	x23, [x20, #16]
  411fa8:	cbz	x22, 411fb4 <ferror@plt+0xf3b4>
  411fac:	ldr	x0, [x20, #32]
  411fb0:	blr	x22
  411fb4:	mov	x0, x20
  411fb8:	bl	4029f0 <free@plt>
  411fbc:	cmp	x23, x21
  411fc0:	mov	x20, x23
  411fc4:	b.ne	411fa4 <ferror@plt+0xf3a4>  // b.any
  411fc8:	ldr	x0, [x19, #40]
  411fcc:	bl	4029f0 <free@plt>
  411fd0:	mov	x0, x19
  411fd4:	ldp	x20, x19, [sp, #48]
  411fd8:	ldp	x22, x21, [sp, #32]
  411fdc:	ldr	x23, [sp, #16]
  411fe0:	ldp	x29, x30, [sp], #64
  411fe4:	b	4029f0 <free@plt>
  411fe8:	ldr	x9, [x0]
  411fec:	add	x10, x0, #0x38
  411ff0:	stp	x9, x0, [x8]
  411ff4:	ldr	x9, [x0, #72]
  411ff8:	stp	x9, x10, [x8, #24]
  411ffc:	ret
  412000:	stp	x29, x30, [sp, #-16]!
  412004:	subs	x10, x2, x1
  412008:	mov	x29, sp
  41200c:	b.cc	4120e8 <ferror@plt+0xf4e8>  // b.lo, b.ul, b.last
  412010:	ldr	x11, [x0, #96]
  412014:	subs	x12, x11, x2
  412018:	b.cc	4120e8 <ferror@plt+0xf4e8>  // b.lo, b.ul, b.last
  41201c:	ldr	x9, [x0]
  412020:	cmp	x10, x1
  412024:	stp	x9, x0, [x8]
  412028:	b.cs	41206c <ferror@plt+0xf46c>  // b.hs, b.nlast
  41202c:	cmp	x12, x1
  412030:	b.cs	41206c <ferror@plt+0xf46c>  // b.hs, b.nlast
  412034:	add	x9, x0, #0x38
  412038:	cbz	x12, 41204c <ferror@plt+0xf44c>
  41203c:	sub	x11, x2, x11
  412040:	ldr	x9, [x9, #24]
  412044:	adds	x11, x11, #0x1
  412048:	b.cc	412040 <ferror@plt+0xf440>  // b.lo, b.ul, b.last
  41204c:	str	x9, [x8, #32]
  412050:	cbz	x10, 412064 <ferror@plt+0xf464>
  412054:	sub	x10, x1, x2
  412058:	ldr	x9, [x9, #24]
  41205c:	adds	x10, x10, #0x1
  412060:	b.cc	412058 <ferror@plt+0xf458>  // b.lo, b.ul, b.last
  412064:	add	x8, x8, #0x18
  412068:	b	4120dc <ferror@plt+0xf4dc>
  41206c:	cmp	x10, x12
  412070:	b.ls	4120a8 <ferror@plt+0xf4a8>  // b.plast
  412074:	ldr	x10, [x0, #72]
  412078:	add	x9, x0, #0x38
  41207c:	cbz	x1, 41208c <ferror@plt+0xf48c>
  412080:	ldr	x10, [x10, #16]
  412084:	subs	x1, x1, #0x1
  412088:	b.ne	412080 <ferror@plt+0xf480>  // b.any
  41208c:	str	x10, [x8, #24]
  412090:	cbz	x12, 4120d8 <ferror@plt+0xf4d8>
  412094:	sub	x10, x2, x11
  412098:	ldr	x9, [x9, #24]
  41209c:	adds	x10, x10, #0x1
  4120a0:	b.cc	412098 <ferror@plt+0xf498>  // b.lo, b.ul, b.last
  4120a4:	b	4120d8 <ferror@plt+0xf4d8>
  4120a8:	ldr	x9, [x0, #72]
  4120ac:	cbz	x1, 4120c0 <ferror@plt+0xf4c0>
  4120b0:	mov	x11, x1
  4120b4:	ldr	x9, [x9, #16]
  4120b8:	subs	x11, x11, #0x1
  4120bc:	b.ne	4120b4 <ferror@plt+0xf4b4>  // b.any
  4120c0:	str	x9, [x8, #24]
  4120c4:	cbz	x10, 4120d8 <ferror@plt+0xf4d8>
  4120c8:	sub	x10, x1, x2
  4120cc:	ldr	x9, [x9, #16]
  4120d0:	adds	x10, x10, #0x1
  4120d4:	b.cc	4120cc <ferror@plt+0xf4cc>  // b.lo, b.ul, b.last
  4120d8:	add	x8, x8, #0x20
  4120dc:	str	x9, [x8]
  4120e0:	ldp	x29, x30, [sp], #16
  4120e4:	ret
  4120e8:	bl	402920 <abort@plt>
  4120ec:	ldp	x8, x9, [x0, #24]
  4120f0:	cmp	x8, x9
  4120f4:	b.eq	412118 <ferror@plt+0xf518>  // b.none
  4120f8:	ldr	x9, [x8, #32]
  4120fc:	str	x9, [x1]
  412100:	cbz	x2, 412108 <ferror@plt+0xf508>
  412104:	str	x8, [x2]
  412108:	ldr	x8, [x8, #16]
  41210c:	str	x8, [x0, #24]
  412110:	mov	w0, #0x1                   	// #1
  412114:	ret
  412118:	mov	w0, wzr
  41211c:	ret
  412120:	ret
  412124:	stp	x29, x30, [sp, #-64]!
  412128:	stp	x24, x23, [sp, #16]
  41212c:	stp	x22, x21, [sp, #32]
  412130:	stp	x20, x19, [sp, #48]
  412134:	ldr	x22, [x0, #72]
  412138:	add	x23, x0, #0x38
  41213c:	mov	x29, sp
  412140:	cmp	x22, x23
  412144:	b.eq	412190 <ferror@plt+0xf590>  // b.none
  412148:	mov	x20, x2
  41214c:	mov	x21, x1
  412150:	mov	w24, #0x2                   	// #2
  412154:	ldr	x0, [x22, #32]
  412158:	mov	x1, x20
  41215c:	blr	x21
  412160:	cmp	w0, #0x0
  412164:	cset	w8, eq  // eq = none
  412168:	csel	x9, x22, x19, eq  // eq = none
  41216c:	csel	w8, w24, w8, gt
  412170:	csel	x19, x19, x9, gt
  412174:	cbnz	w8, 412188 <ferror@plt+0xf588>
  412178:	ldr	x22, [x22, #16]
  41217c:	cmp	x22, x23
  412180:	b.ne	412154 <ferror@plt+0xf554>  // b.any
  412184:	b	412190 <ferror@plt+0xf590>
  412188:	cmp	w8, #0x2
  41218c:	b.ne	412194 <ferror@plt+0xf594>  // b.any
  412190:	mov	x19, xzr
  412194:	mov	x0, x19
  412198:	ldp	x20, x19, [sp, #48]
  41219c:	ldp	x22, x21, [sp, #32]
  4121a0:	ldp	x24, x23, [sp, #16]
  4121a4:	ldp	x29, x30, [sp], #64
  4121a8:	ret
  4121ac:	stp	x29, x30, [sp, #-48]!
  4121b0:	cmp	x3, x2
  4121b4:	stp	x22, x21, [sp, #16]
  4121b8:	stp	x20, x19, [sp, #32]
  4121bc:	mov	x29, sp
  4121c0:	b.cc	412268 <ferror@plt+0xf668>  // b.lo, b.ul, b.last
  4121c4:	ldr	x8, [x0, #96]
  4121c8:	cmp	x8, x3
  4121cc:	b.cc	412268 <ferror@plt+0xf668>  // b.lo, b.ul, b.last
  4121d0:	cmp	x3, x2
  4121d4:	b.eq	412250 <ferror@plt+0xf650>  // b.none
  4121d8:	sub	x9, x8, #0x1
  4121dc:	mov	x19, x4
  4121e0:	mov	x20, x1
  4121e4:	cmp	x2, x9, lsr #1
  4121e8:	b.ls	412210 <ferror@plt+0xf610>  // b.plast
  4121ec:	ldr	x21, [x0, #80]
  4121f0:	cmp	x9, x2
  4121f4:	b.eq	412228 <ferror@plt+0xf628>  // b.none
  4121f8:	sub	x8, x2, x8
  4121fc:	add	x8, x8, #0x1
  412200:	ldr	x21, [x21, #24]
  412204:	adds	x8, x8, #0x1
  412208:	b.cc	412200 <ferror@plt+0xf600>  // b.lo, b.ul, b.last
  41220c:	b	412228 <ferror@plt+0xf628>
  412210:	ldr	x21, [x0, #72]
  412214:	cbz	x2, 412228 <ferror@plt+0xf628>
  412218:	mov	x8, x2
  41221c:	ldr	x21, [x21, #16]
  412220:	subs	x8, x8, #0x1
  412224:	b.ne	41221c <ferror@plt+0xf61c>  // b.any
  412228:	sub	x22, x2, x3
  41222c:	ldr	x0, [x21, #32]
  412230:	mov	x1, x19
  412234:	blr	x20
  412238:	cmp	w0, #0x0
  41223c:	b.gt	412250 <ferror@plt+0xf650>
  412240:	cbz	w0, 412254 <ferror@plt+0xf654>
  412244:	ldr	x21, [x21, #16]
  412248:	adds	x22, x22, #0x1
  41224c:	b.cc	41222c <ferror@plt+0xf62c>  // b.lo, b.ul, b.last
  412250:	mov	x21, xzr
  412254:	mov	x0, x21
  412258:	ldp	x20, x19, [sp, #32]
  41225c:	ldp	x22, x21, [sp, #16]
  412260:	ldp	x29, x30, [sp], #48
  412264:	ret
  412268:	bl	402920 <abort@plt>
  41226c:	stp	x29, x30, [sp, #-80]!
  412270:	stp	x24, x23, [sp, #32]
  412274:	stp	x22, x21, [sp, #48]
  412278:	stp	x20, x19, [sp, #64]
  41227c:	ldr	x22, [x0, #72]
  412280:	add	x23, x0, #0x38
  412284:	str	x25, [sp, #16]
  412288:	mov	x29, sp
  41228c:	cmp	x22, x23
  412290:	b.eq	4122e4 <ferror@plt+0xf6e4>  // b.none
  412294:	mov	x20, x2
  412298:	mov	x21, x1
  41229c:	mov	x24, xzr
  4122a0:	mov	w25, #0x2                   	// #2
  4122a4:	ldr	x0, [x22, #32]
  4122a8:	mov	x1, x20
  4122ac:	blr	x21
  4122b0:	cmp	w0, #0x0
  4122b4:	cset	w8, eq  // eq = none
  4122b8:	csel	x9, x24, x19, eq  // eq = none
  4122bc:	csel	w8, w25, w8, gt
  4122c0:	csel	x19, x19, x9, gt
  4122c4:	cbnz	w8, 4122dc <ferror@plt+0xf6dc>
  4122c8:	ldr	x22, [x22, #16]
  4122cc:	add	x24, x24, #0x1
  4122d0:	cmp	x22, x23
  4122d4:	b.ne	4122a4 <ferror@plt+0xf6a4>  // b.any
  4122d8:	b	4122e4 <ferror@plt+0xf6e4>
  4122dc:	cmp	w8, #0x2
  4122e0:	b.ne	4122e8 <ferror@plt+0xf6e8>  // b.any
  4122e4:	mov	x19, #0xffffffffffffffff    	// #-1
  4122e8:	mov	x0, x19
  4122ec:	ldp	x20, x19, [sp, #64]
  4122f0:	ldp	x22, x21, [sp, #48]
  4122f4:	ldp	x24, x23, [sp, #32]
  4122f8:	ldr	x25, [sp, #16]
  4122fc:	ldp	x29, x30, [sp], #80
  412300:	ret
  412304:	stp	x29, x30, [sp, #-64]!
  412308:	cmp	x3, x2
  41230c:	str	x23, [sp, #16]
  412310:	stp	x22, x21, [sp, #32]
  412314:	stp	x20, x19, [sp, #48]
  412318:	mov	x29, sp
  41231c:	b.cc	4123d4 <ferror@plt+0xf7d4>  // b.lo, b.ul, b.last
  412320:	ldr	x8, [x0, #96]
  412324:	mov	x21, x3
  412328:	cmp	x8, x3
  41232c:	b.cc	4123d4 <ferror@plt+0xf7d4>  // b.lo, b.ul, b.last
  412330:	mov	x19, x2
  412334:	cmp	x21, x2
  412338:	b.eq	4123b8 <ferror@plt+0xf7b8>  // b.none
  41233c:	sub	x9, x8, #0x1
  412340:	mov	x20, x4
  412344:	mov	x22, x1
  412348:	cmp	x19, x9, lsr #1
  41234c:	b.ls	412374 <ferror@plt+0xf774>  // b.plast
  412350:	ldr	x23, [x0, #80]
  412354:	cmp	x9, x19
  412358:	b.eq	4123a4 <ferror@plt+0xf7a4>  // b.none
  41235c:	sub	x8, x19, x8
  412360:	add	x8, x8, #0x1
  412364:	ldr	x23, [x23, #24]
  412368:	adds	x8, x8, #0x1
  41236c:	b.cc	412364 <ferror@plt+0xf764>  // b.lo, b.ul, b.last
  412370:	b	4123a4 <ferror@plt+0xf7a4>
  412374:	ldr	x23, [x0, #72]
  412378:	cbz	x19, 4123a4 <ferror@plt+0xf7a4>
  41237c:	mov	x8, x19
  412380:	ldr	x23, [x23, #16]
  412384:	subs	x8, x8, #0x1
  412388:	b.ne	412380 <ferror@plt+0xf780>  // b.any
  41238c:	b	4123a4 <ferror@plt+0xf7a4>
  412390:	cbz	w0, 4123bc <ferror@plt+0xf7bc>
  412394:	ldr	x23, [x23, #16]
  412398:	add	x19, x19, #0x1
  41239c:	cmp	x21, x19
  4123a0:	b.eq	4123b8 <ferror@plt+0xf7b8>  // b.none
  4123a4:	ldr	x0, [x23, #32]
  4123a8:	mov	x1, x20
  4123ac:	blr	x22
  4123b0:	cmp	w0, #0x0
  4123b4:	b.le	412390 <ferror@plt+0xf790>
  4123b8:	mov	x19, #0xffffffffffffffff    	// #-1
  4123bc:	mov	x0, x19
  4123c0:	ldp	x20, x19, [sp, #48]
  4123c4:	ldp	x22, x21, [sp, #32]
  4123c8:	ldr	x23, [sp, #16]
  4123cc:	ldp	x29, x30, [sp], #64
  4123d0:	ret
  4123d4:	bl	402920 <abort@plt>
  4123d8:	stp	x29, x30, [sp, #-64]!
  4123dc:	stp	x22, x21, [sp, #32]
  4123e0:	stp	x20, x19, [sp, #48]
  4123e4:	ldr	x21, [x0, #72]
  4123e8:	str	x23, [sp, #16]
  4123ec:	add	x23, x0, #0x38
  4123f0:	mov	x19, x2
  4123f4:	mov	x20, x0
  4123f8:	cmp	x21, x23
  4123fc:	mov	x29, sp
  412400:	b.eq	412424 <ferror@plt+0xf824>  // b.none
  412404:	mov	x22, x1
  412408:	ldr	x0, [x21, #32]
  41240c:	mov	x1, x19
  412410:	blr	x22
  412414:	tbz	w0, #31, 412440 <ferror@plt+0xf840>
  412418:	ldr	x21, [x21, #16]
  41241c:	cmp	x21, x23
  412420:	b.ne	412408 <ferror@plt+0xf808>  // b.any
  412424:	mov	x0, x20
  412428:	mov	x1, x19
  41242c:	ldp	x20, x19, [sp, #48]
  412430:	ldp	x22, x21, [sp, #32]
  412434:	ldr	x23, [sp, #16]
  412438:	ldp	x29, x30, [sp], #64
  41243c:	b	411b54 <ferror@plt+0xef54>
  412440:	mov	x0, x20
  412444:	mov	x1, x21
  412448:	mov	x2, x19
  41244c:	ldp	x20, x19, [sp, #48]
  412450:	ldp	x22, x21, [sp, #32]
  412454:	ldr	x23, [sp, #16]
  412458:	ldp	x29, x30, [sp], #64
  41245c:	b	411bf0 <ferror@plt+0xeff0>
  412460:	stp	x29, x30, [sp, #-64]!
  412464:	stp	x22, x21, [sp, #32]
  412468:	stp	x20, x19, [sp, #48]
  41246c:	ldr	x21, [x0, #72]
  412470:	str	x23, [sp, #16]
  412474:	add	x23, x0, #0x38
  412478:	mov	x29, sp
  41247c:	cmp	x21, x23
  412480:	b.eq	4124b4 <ferror@plt+0xf8b4>  // b.none
  412484:	mov	x20, x2
  412488:	mov	x19, x0
  41248c:	mov	x22, x1
  412490:	ldr	x0, [x21, #32]
  412494:	mov	x1, x20
  412498:	blr	x22
  41249c:	cmp	w0, #0x0
  4124a0:	b.gt	4124b4 <ferror@plt+0xf8b4>
  4124a4:	cbz	w0, 4124bc <ferror@plt+0xf8bc>
  4124a8:	ldr	x21, [x21, #16]
  4124ac:	cmp	x21, x23
  4124b0:	b.ne	412490 <ferror@plt+0xf890>  // b.any
  4124b4:	mov	w0, wzr
  4124b8:	b	4124cc <ferror@plt+0xf8cc>
  4124bc:	mov	x0, x19
  4124c0:	mov	x1, x21
  4124c4:	bl	411e2c <ferror@plt+0xf22c>
  4124c8:	mov	w0, #0x1                   	// #1
  4124cc:	ldp	x20, x19, [sp, #48]
  4124d0:	ldp	x22, x21, [sp, #32]
  4124d4:	ldr	x23, [sp, #16]
  4124d8:	ldp	x29, x30, [sp], #64
  4124dc:	ret
  4124e0:	stp	x29, x30, [sp, #-16]!
  4124e4:	ldr	x8, [x1, #8]
  4124e8:	ldp	x10, x9, [x0, #40]
  4124ec:	mov	x29, sp
  4124f0:	udiv	x11, x8, x9
  4124f4:	msub	x8, x11, x9, x8
  4124f8:	add	x8, x10, x8, lsl #3
  4124fc:	ldr	x9, [x8]
  412500:	cmp	x9, x1
  412504:	b.eq	412514 <ferror@plt+0xf914>  // b.none
  412508:	cbz	x9, 412524 <ferror@plt+0xf924>
  41250c:	mov	x8, x9
  412510:	b	4124fc <ferror@plt+0xf8fc>
  412514:	ldr	x9, [x1]
  412518:	str	x9, [x8]
  41251c:	ldp	x29, x30, [sp], #16
  412520:	ret
  412524:	bl	402920 <abort@plt>
  412528:	stp	x29, x30, [sp, #-48]!
  41252c:	stp	x22, x21, [sp, #16]
  412530:	stp	x20, x19, [sp, #32]
  412534:	ldr	x8, [x0, #96]
  412538:	ldr	x22, [x0, #48]
  41253c:	mov	x29, sp
  412540:	adds	x8, x8, x8, lsr #1
  412544:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
  412548:	cmp	x8, x22
  41254c:	b.ls	4125ec <ferror@plt+0xf9ec>  // b.plast
  412550:	adrp	x10, 419000 <_obstack_memory_used@@Base+0x340c>
  412554:	mov	x19, x0
  412558:	mov	x9, xzr
  41255c:	add	x10, x10, #0xa0
  412560:	ldr	x20, [x10, x9]
  412564:	cmp	x20, x8
  412568:	b.cs	41257c <ferror@plt+0xf97c>  // b.hs, b.nlast
  41256c:	add	x9, x9, #0x8
  412570:	cmp	x9, #0x740
  412574:	b.ne	412560 <ferror@plt+0xf960>  // b.any
  412578:	mov	x20, #0xffffffffffffffff    	// #-1
  41257c:	cmp	x20, x22
  412580:	b.ls	4125ec <ferror@plt+0xf9ec>  // b.plast
  412584:	lsr	x8, x20, #61
  412588:	cbnz	x8, 4125ec <ferror@plt+0xf9ec>
  41258c:	ldr	x21, [x19, #40]
  412590:	mov	w1, #0x8                   	// #8
  412594:	mov	x0, x20
  412598:	bl	402820 <calloc@plt>
  41259c:	cbz	x0, 4125ec <ferror@plt+0xf9ec>
  4125a0:	cbz	x22, 4125d4 <ferror@plt+0xf9d4>
  4125a4:	sub	x22, x22, #0x1
  4125a8:	ldr	x8, [x21, x22, lsl #3]
  4125ac:	cbz	x8, 4125d0 <ferror@plt+0xf9d0>
  4125b0:	ldp	x11, x9, [x8]
  4125b4:	udiv	x10, x9, x20
  4125b8:	msub	x9, x10, x20, x9
  4125bc:	ldr	x10, [x0, x9, lsl #3]
  4125c0:	str	x10, [x8]
  4125c4:	str	x8, [x0, x9, lsl #3]
  4125c8:	mov	x8, x11
  4125cc:	cbnz	x11, 4125b0 <ferror@plt+0xf9b0>
  4125d0:	cbnz	x22, 4125a4 <ferror@plt+0xf9a4>
  4125d4:	stp	x0, x20, [x19, #40]
  4125d8:	mov	x0, x21
  4125dc:	ldp	x20, x19, [sp, #32]
  4125e0:	ldp	x22, x21, [sp, #16]
  4125e4:	ldp	x29, x30, [sp], #48
  4125e8:	b	4029f0 <free@plt>
  4125ec:	ldp	x20, x19, [sp, #32]
  4125f0:	ldp	x22, x21, [sp, #16]
  4125f4:	ldp	x29, x30, [sp], #48
  4125f8:	ret
  4125fc:	stp	x29, x30, [sp, #-16]!
  412600:	cmn	x0, #0x11
  412604:	mov	x29, sp
  412608:	b.hi	412660 <ferror@plt+0xfa60>  // b.pmore
  41260c:	add	x0, x0, #0x10
  412610:	bl	402740 <malloc@plt>
  412614:	cbz	x0, 412664 <ferror@plt+0xfa64>
  412618:	mov	x9, #0xff00ff00ff00ff00    	// #-71777214294589696
  41261c:	mov	x8, x0
  412620:	add	x0, x0, #0x10
  412624:	movk	x9, #0xff01
  412628:	umulh	x9, x0, x9
  41262c:	lsr	x11, x9, #8
  412630:	lsl	x11, x11, #8
  412634:	adrp	x10, 436000 <__progname@@GLIBC_2.17+0xab98>
  412638:	add	x9, x11, x9, lsr #8
  41263c:	add	x10, x10, #0x358
  412640:	sub	x9, x0, x9
  412644:	ldr	x11, [x10, x9, lsl #3]
  412648:	mov	w12, #0xfb4a                	// #64330
  41264c:	movk	w12, #0x1415, lsl #16
  412650:	str	w12, [x8, #12]
  412654:	str	x11, [x8]
  412658:	str	x0, [x10, x9, lsl #3]
  41265c:	b	412664 <ferror@plt+0xfa64>
  412660:	mov	x0, xzr
  412664:	ldp	x29, x30, [sp], #16
  412668:	ret
  41266c:	cbz	x0, 4126c8 <ferror@plt+0xfac8>
  412670:	ldur	w8, [x0, #-4]
  412674:	mov	w9, #0xfb4a                	// #64330
  412678:	movk	w9, #0x1415, lsl #16
  41267c:	cmp	w8, w9
  412680:	b.ne	4126c8 <ferror@plt+0xfac8>  // b.any
  412684:	mov	x8, #0xff00ff00ff00ff00    	// #-71777214294589696
  412688:	movk	x8, #0xff01
  41268c:	umulh	x8, x0, x8
  412690:	lsr	x9, x8, #8
  412694:	lsl	x9, x9, #8
  412698:	add	x8, x9, x8, lsr #8
  41269c:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  4126a0:	sub	x8, x0, x8
  4126a4:	add	x9, x9, #0x358
  4126a8:	add	x8, x9, x8, lsl #3
  4126ac:	ldr	x9, [x8]
  4126b0:	cbz	x9, 4126c8 <ferror@plt+0xfac8>
  4126b4:	cmp	x9, x0
  4126b8:	b.eq	4126cc <ferror@plt+0xfacc>  // b.none
  4126bc:	mov	x8, x9
  4126c0:	ldr	x9, [x8, #-16]!
  4126c4:	cbnz	x9, 4126b4 <ferror@plt+0xfab4>
  4126c8:	ret
  4126cc:	ldr	x9, [x0, #-16]!
  4126d0:	str	x9, [x8]
  4126d4:	b	4029f0 <free@plt>
  4126d8:	and	w1, w1, #0xff
  4126dc:	cmp	w1, w2, uxtb
  4126e0:	b.ne	4126ec <ferror@plt+0xfaec>  // b.any
  4126e4:	mov	x2, x3
  4126e8:	b	402ac0 <memchr@plt>
  4126ec:	and	w8, w2, #0xff
  4126f0:	cbz	x3, 41271c <ferror@plt+0xfb1c>
  4126f4:	and	x9, x0, #0x7
  4126f8:	cbz	x9, 41271c <ferror@plt+0xfb1c>
  4126fc:	ldrb	w9, [x0]
  412700:	cmp	w1, w9
  412704:	b.eq	4127b8 <ferror@plt+0xfbb8>  // b.none
  412708:	cmp	w8, w9
  41270c:	b.eq	4127b8 <ferror@plt+0xfbb8>  // b.none
  412710:	subs	x3, x3, #0x1
  412714:	add	x0, x0, #0x1
  412718:	b.ne	4126f4 <ferror@plt+0xfaf4>  // b.any
  41271c:	mov	w12, w1
  412720:	mov	w13, w8
  412724:	bfi	w12, w12, #8, #8
  412728:	bfi	w13, w13, #8, #8
  41272c:	mov	x11, #0xfefefefefefefefe    	// #-72340172838076674
  412730:	bfi	x12, x12, #16, #16
  412734:	bfi	x13, x13, #16, #16
  412738:	movk	x11, #0xfeff
  41273c:	bfi	x12, x12, #32, #32
  412740:	bfi	x13, x13, #32, #32
  412744:	mov	x9, x3
  412748:	subs	x3, x3, #0x8
  41274c:	mov	x10, x0
  412750:	b.cc	412784 <ferror@plt+0xfb84>  // b.lo, b.ul, b.last
  412754:	mov	x0, x10
  412758:	ldr	x14, [x0], #8
  41275c:	eor	x15, x14, x12
  412760:	eor	x14, x14, x13
  412764:	add	x16, x15, x11
  412768:	add	x17, x14, x11
  41276c:	bic	x15, x16, x15
  412770:	bic	x14, x17, x14
  412774:	orr	x14, x15, x14
  412778:	and	x14, x14, #0x8080808080808080
  41277c:	cbz	x14, 412744 <ferror@plt+0xfb44>
  412780:	b	412788 <ferror@plt+0xfb88>
  412784:	cbz	x9, 4127ac <ferror@plt+0xfbac>
  412788:	mov	x11, xzr
  41278c:	ldrb	w12, [x10, x11]
  412790:	cmp	w1, w12
  412794:	b.eq	4127b4 <ferror@plt+0xfbb4>  // b.none
  412798:	cmp	w8, w12
  41279c:	b.eq	4127b4 <ferror@plt+0xfbb4>  // b.none
  4127a0:	add	x11, x11, #0x1
  4127a4:	cmp	x9, x11
  4127a8:	b.ne	41278c <ferror@plt+0xfb8c>  // b.any
  4127ac:	mov	x0, xzr
  4127b0:	ret
  4127b4:	add	x0, x10, x11
  4127b8:	ret
  4127bc:	stp	x29, x30, [sp, #-32]!
  4127c0:	stp	x20, x19, [sp, #16]
  4127c4:	mov	x29, sp
  4127c8:	cbz	x0, 412848 <ferror@plt+0xfc48>
  4127cc:	mov	w1, #0x2f                  	// #47
  4127d0:	mov	x19, x0
  4127d4:	bl	4028d0 <strrchr@plt>
  4127d8:	cmp	x0, #0x0
  4127dc:	csinc	x20, x19, x0, eq  // eq = none
  4127e0:	sub	x8, x20, x19
  4127e4:	cmp	x8, #0x7
  4127e8:	b.lt	41282c <ferror@plt+0xfc2c>  // b.tstop
  4127ec:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x340c>
  4127f0:	sub	x0, x20, #0x7
  4127f4:	add	x1, x1, #0x818
  4127f8:	mov	w2, #0x7                   	// #7
  4127fc:	bl	4027a0 <strncmp@plt>
  412800:	cbnz	w0, 41282c <ferror@plt+0xfc2c>
  412804:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x340c>
  412808:	add	x1, x1, #0x820
  41280c:	mov	w2, #0x3                   	// #3
  412810:	mov	x0, x20
  412814:	bl	4027a0 <strncmp@plt>
  412818:	mov	x19, x20
  41281c:	cbnz	w0, 41282c <ferror@plt+0xfc2c>
  412820:	add	x19, x20, #0x3
  412824:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  412828:	str	x19, [x8, #1128]
  41282c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  412830:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  412834:	str	x19, [x8, #2912]
  412838:	str	x19, [x9, #1072]
  41283c:	ldp	x20, x19, [sp, #16]
  412840:	ldp	x29, x30, [sp], #32
  412844:	ret
  412848:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  41284c:	ldr	x1, [x8, #1080]
  412850:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x340c>
  412854:	add	x0, x0, #0x7e0
  412858:	bl	402590 <fputs@plt>
  41285c:	bl	402920 <abort@plt>
  412860:	stp	x29, x30, [sp, #-48]!
  412864:	str	x21, [sp, #16]
  412868:	stp	x20, x19, [sp, #32]
  41286c:	mov	x29, sp
  412870:	mov	x19, x0
  412874:	bl	402b80 <__errno_location@plt>
  412878:	ldr	w21, [x0]
  41287c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  412880:	add	x8, x8, #0xb68
  412884:	cmp	x19, #0x0
  412888:	mov	x20, x0
  41288c:	csel	x0, x8, x19, eq  // eq = none
  412890:	mov	w1, #0x38                  	// #56
  412894:	bl	415024 <ferror@plt+0x12424>
  412898:	str	w21, [x20]
  41289c:	ldp	x20, x19, [sp, #32]
  4128a0:	ldr	x21, [sp, #16]
  4128a4:	ldp	x29, x30, [sp], #48
  4128a8:	ret
  4128ac:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  4128b0:	add	x8, x8, #0xb68
  4128b4:	cmp	x0, #0x0
  4128b8:	csel	x8, x8, x0, eq  // eq = none
  4128bc:	ldr	w0, [x8]
  4128c0:	ret
  4128c4:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  4128c8:	add	x8, x8, #0xb68
  4128cc:	cmp	x0, #0x0
  4128d0:	csel	x8, x8, x0, eq  // eq = none
  4128d4:	str	w1, [x8]
  4128d8:	ret
  4128dc:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  4128e0:	add	x8, x8, #0xb68
  4128e4:	cmp	x0, #0x0
  4128e8:	ubfx	w9, w1, #5, #3
  4128ec:	csel	x8, x8, x0, eq  // eq = none
  4128f0:	add	x8, x8, w9, uxtw #2
  4128f4:	ldr	w9, [x8, #8]
  4128f8:	lsr	w10, w9, w1
  4128fc:	and	w0, w10, #0x1
  412900:	and	w10, w2, #0x1
  412904:	eor	w10, w0, w10
  412908:	lsl	w10, w10, w1
  41290c:	eor	w9, w10, w9
  412910:	str	w9, [x8, #8]
  412914:	ret
  412918:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  41291c:	add	x8, x8, #0xb68
  412920:	cmp	x0, #0x0
  412924:	csel	x8, x8, x0, eq  // eq = none
  412928:	ldr	w0, [x8, #4]
  41292c:	str	w1, [x8, #4]
  412930:	ret
  412934:	stp	x29, x30, [sp, #-16]!
  412938:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  41293c:	add	x8, x8, #0xb68
  412940:	cmp	x0, #0x0
  412944:	csel	x8, x8, x0, eq  // eq = none
  412948:	mov	w9, #0xa                   	// #10
  41294c:	mov	x29, sp
  412950:	str	w9, [x8]
  412954:	cbz	x1, 412968 <ferror@plt+0xfd68>
  412958:	cbz	x2, 412968 <ferror@plt+0xfd68>
  41295c:	stp	x1, x2, [x8, #40]
  412960:	ldp	x29, x30, [sp], #16
  412964:	ret
  412968:	bl	402920 <abort@plt>
  41296c:	sub	sp, sp, #0x60
  412970:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  412974:	add	x8, x8, #0xb68
  412978:	cmp	x4, #0x0
  41297c:	stp	x29, x30, [sp, #16]
  412980:	str	x25, [sp, #32]
  412984:	stp	x24, x23, [sp, #48]
  412988:	stp	x22, x21, [sp, #64]
  41298c:	stp	x20, x19, [sp, #80]
  412990:	add	x29, sp, #0x10
  412994:	mov	x19, x3
  412998:	mov	x20, x2
  41299c:	mov	x21, x1
  4129a0:	mov	x22, x0
  4129a4:	csel	x24, x8, x4, eq  // eq = none
  4129a8:	bl	402b80 <__errno_location@plt>
  4129ac:	ldp	w4, w5, [x24]
  4129b0:	ldp	x7, x8, [x24, #40]
  4129b4:	ldr	w25, [x0]
  4129b8:	mov	x23, x0
  4129bc:	add	x6, x24, #0x8
  4129c0:	mov	x0, x22
  4129c4:	mov	x1, x21
  4129c8:	mov	x2, x20
  4129cc:	mov	x3, x19
  4129d0:	str	x8, [sp]
  4129d4:	bl	4129f8 <ferror@plt+0xfdf8>
  4129d8:	str	w25, [x23]
  4129dc:	ldp	x20, x19, [sp, #80]
  4129e0:	ldp	x22, x21, [sp, #64]
  4129e4:	ldp	x24, x23, [sp, #48]
  4129e8:	ldr	x25, [sp, #32]
  4129ec:	ldp	x29, x30, [sp, #16]
  4129f0:	add	sp, sp, #0x60
  4129f4:	ret
  4129f8:	sub	sp, sp, #0x120
  4129fc:	stp	x29, x30, [sp, #192]
  412a00:	add	x29, sp, #0xc0
  412a04:	ldr	x8, [x29, #96]
  412a08:	stp	x28, x27, [sp, #208]
  412a0c:	stp	x26, x25, [sp, #224]
  412a10:	stp	x24, x23, [sp, #240]
  412a14:	stp	x22, x21, [sp, #256]
  412a18:	stp	x20, x19, [sp, #272]
  412a1c:	str	x7, [sp, #88]
  412a20:	stur	x6, [x29, #-40]
  412a24:	mov	w19, w5
  412a28:	mov	w22, w4
  412a2c:	mov	x28, x3
  412a30:	mov	x20, x2
  412a34:	mov	x24, x1
  412a38:	stur	x8, [x29, #-88]
  412a3c:	mov	x21, x0
  412a40:	bl	402a10 <__ctype_get_mb_cur_max@plt>
  412a44:	mov	w4, w22
  412a48:	mov	w8, wzr
  412a4c:	mov	w14, wzr
  412a50:	str	w19, [sp, #80]
  412a54:	ubfx	w19, w19, #1, #1
  412a58:	add	x9, x20, #0x1
  412a5c:	mov	w25, #0x1                   	// #1
  412a60:	str	x0, [sp, #48]
  412a64:	str	xzr, [sp, #64]
  412a68:	stur	xzr, [x29, #-64]
  412a6c:	stur	xzr, [x29, #-32]
  412a70:	str	wzr, [sp, #72]
  412a74:	stur	x20, [x29, #-80]
  412a78:	str	x9, [sp, #96]
  412a7c:	cmp	w4, #0xa
  412a80:	b.hi	413618 <ferror@plt+0x10a18>  // b.pmore
  412a84:	adrp	x12, 419000 <_obstack_memory_used@@Base+0x340c>
  412a88:	mov	w9, w4
  412a8c:	add	x12, x12, #0x828
  412a90:	mov	x22, x24
  412a94:	adr	x10, 412ab4 <ferror@plt+0xfeb4>
  412a98:	ldrb	w11, [x12, x9]
  412a9c:	add	x10, x10, x11, lsl #2
  412aa0:	ldur	x24, [x29, #-80]
  412aa4:	mov	x20, xzr
  412aa8:	mov	w16, wzr
  412aac:	mov	w9, #0x1                   	// #1
  412ab0:	br	x10
  412ab4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  412ab8:	add	x0, x0, #0x642
  412abc:	mov	w1, w4
  412ac0:	mov	w20, w4
  412ac4:	mov	w23, w14
  412ac8:	bl	413d44 <ferror@plt+0x11144>
  412acc:	str	x0, [sp, #88]
  412ad0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x140c>
  412ad4:	add	x0, x0, #0xfe2
  412ad8:	mov	w1, w20
  412adc:	bl	413d44 <ferror@plt+0x11144>
  412ae0:	mov	w14, w23
  412ae4:	mov	w4, w20
  412ae8:	stur	x0, [x29, #-88]
  412aec:	tbnz	w19, #0, 412b2c <ferror@plt+0xff2c>
  412af0:	ldr	x8, [sp, #88]
  412af4:	ldrb	w9, [x8]
  412af8:	cbz	w9, 412b2c <ferror@plt+0xff2c>
  412afc:	mov	w27, w14
  412b00:	mov	w26, w4
  412b04:	mov	x10, xzr
  412b08:	add	x8, x8, #0x1
  412b0c:	cmp	x10, x22
  412b10:	b.cs	412b18 <ferror@plt+0xff18>  // b.hs, b.nlast
  412b14:	strb	w9, [x21, x10]
  412b18:	ldrb	w9, [x8, x10]
  412b1c:	add	x20, x10, #0x1
  412b20:	mov	x10, x20
  412b24:	cbnz	w9, 412b0c <ferror@plt+0xff0c>
  412b28:	b	412b38 <ferror@plt+0xff38>
  412b2c:	mov	w27, w14
  412b30:	mov	w26, w4
  412b34:	mov	x20, xzr
  412b38:	ldur	x23, [x29, #-88]
  412b3c:	mov	x0, x23
  412b40:	bl	402580 <strlen@plt>
  412b44:	stur	x0, [x29, #-32]
  412b48:	stur	x23, [x29, #-64]
  412b4c:	mov	w9, #0x1                   	// #1
  412b50:	mov	w16, w19
  412b54:	mov	w4, w26
  412b58:	mov	w14, w27
  412b5c:	b	412bd8 <ferror@plt+0xffd8>
  412b60:	mov	w8, #0x1                   	// #1
  412b64:	b	412bb4 <ferror@plt+0xffb4>
  412b68:	mov	w4, wzr
  412b6c:	mov	x20, xzr
  412b70:	mov	w16, wzr
  412b74:	mov	w9, w8
  412b78:	b	412bd8 <ferror@plt+0xffd8>
  412b7c:	tbnz	w19, #0, 412bb4 <ferror@plt+0xffb4>
  412b80:	mov	w9, w8
  412b84:	b	4134cc <ferror@plt+0x108cc>
  412b88:	tbz	w19, #0, 413494 <ferror@plt+0x10894>
  412b8c:	mov	w8, #0x1                   	// #1
  412b90:	stur	x8, [x29, #-32]
  412b94:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x240c>
  412b98:	add	x8, x8, #0xf22
  412b9c:	mov	x20, xzr
  412ba0:	mov	w4, #0x5                   	// #5
  412ba4:	stur	x8, [x29, #-64]
  412ba8:	mov	w9, #0x1                   	// #1
  412bac:	b	412bd4 <ferror@plt+0xffd4>
  412bb0:	tbz	w19, #0, 4134c8 <ferror@plt+0x108c8>
  412bb4:	mov	w9, #0x1                   	// #1
  412bb8:	stur	x9, [x29, #-32]
  412bbc:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x140c>
  412bc0:	add	x9, x9, #0xfe2
  412bc4:	mov	x20, xzr
  412bc8:	mov	w4, #0x2                   	// #2
  412bcc:	stur	x9, [x29, #-64]
  412bd0:	mov	w9, w8
  412bd4:	mov	w16, #0x1                   	// #1
  412bd8:	mov	w15, w9
  412bdc:	ldp	x8, x9, [x29, #-40]
  412be0:	eor	w17, w16, #0x1
  412be4:	stur	w17, [x29, #-68]
  412be8:	mov	x23, xzr
  412bec:	cmp	x8, #0x0
  412bf0:	cset	w8, eq  // eq = none
  412bf4:	cmp	x9, #0x0
  412bf8:	cset	w9, ne  // ne = any
  412bfc:	cmp	w4, #0x2
  412c00:	cset	w10, ne  // ne = any
  412c04:	and	w13, w10, w15
  412c08:	and	w12, w9, w16
  412c0c:	orr	w10, w10, w17
  412c10:	and	w17, w9, w13
  412c14:	orr	w9, w13, w16
  412c18:	eor	w9, w9, #0x1
  412c1c:	cset	w11, eq  // eq = none
  412c20:	orr	w8, w8, w9
  412c24:	and	w12, w15, w12
  412c28:	str	w10, [sp, #84]
  412c2c:	and	w10, w11, w16
  412c30:	stur	w8, [x29, #-24]
  412c34:	eor	w8, w15, #0x1
  412c38:	str	w12, [sp, #56]
  412c3c:	str	w10, [sp, #76]
  412c40:	stur	w15, [x29, #-72]
  412c44:	str	w8, [sp, #60]
  412c48:	stp	w16, w4, [x29, #-48]
  412c4c:	stur	w17, [x29, #-52]
  412c50:	cmn	x28, #0x1
  412c54:	b.eq	412c64 <ferror@plt+0x10064>  // b.none
  412c58:	cmp	x23, x28
  412c5c:	b.ne	412c6c <ferror@plt+0x1006c>  // b.any
  412c60:	b	413424 <ferror@plt+0x10824>
  412c64:	ldrb	w8, [x24, x23]
  412c68:	cbz	w8, 41342c <ferror@plt+0x1082c>
  412c6c:	cbz	w17, 412cac <ferror@plt+0x100ac>
  412c70:	ldur	x8, [x29, #-32]
  412c74:	cmp	x8, #0x2
  412c78:	add	x19, x23, x8
  412c7c:	b.cc	412ca4 <ferror@plt+0x100a4>  // b.lo, b.ul, b.last
  412c80:	cmn	x28, #0x1
  412c84:	b.ne	412ca4 <ferror@plt+0x100a4>  // b.any
  412c88:	mov	x0, x24
  412c8c:	mov	w26, w14
  412c90:	bl	402580 <strlen@plt>
  412c94:	ldp	w17, w16, [x29, #-52]
  412c98:	ldur	w4, [x29, #-44]
  412c9c:	mov	w14, w26
  412ca0:	mov	x28, x0
  412ca4:	cmp	x19, x28
  412ca8:	b.ls	412cb4 <ferror@plt+0x100b4>  // b.plast
  412cac:	mov	w27, wzr
  412cb0:	b	412cec <ferror@plt+0x100ec>
  412cb4:	ldur	x1, [x29, #-64]
  412cb8:	ldur	x2, [x29, #-32]
  412cbc:	add	x0, x24, x23
  412cc0:	mov	w19, w14
  412cc4:	bl	402830 <bcmp@plt>
  412cc8:	ldur	w9, [x29, #-68]
  412ccc:	cmp	w0, #0x0
  412cd0:	cset	w8, ne  // ne = any
  412cd4:	cset	w27, eq  // eq = none
  412cd8:	orr	w8, w8, w9
  412cdc:	tbz	w8, #0, 413524 <ferror@plt+0x10924>
  412ce0:	ldp	w16, w4, [x29, #-48]
  412ce4:	ldur	w17, [x29, #-52]
  412ce8:	mov	w14, w19
  412cec:	ldrb	w19, [x24, x23]
  412cf0:	cmp	w19, #0x7e
  412cf4:	b.hi	412f0c <ferror@plt+0x1030c>  // b.pmore
  412cf8:	adrp	x13, 419000 <_obstack_memory_used@@Base+0x340c>
  412cfc:	add	x13, x13, #0x833
  412d00:	adr	x12, 412d24 <ferror@plt+0x10124>
  412d04:	ldrb	w9, [x13, x19]
  412d08:	add	x12, x12, x9, lsl #2
  412d0c:	mov	w10, wzr
  412d10:	mov	w8, wzr
  412d14:	mov	w26, #0x1                   	// #1
  412d18:	mov	w11, #0x6e                  	// #110
  412d1c:	mov	w9, #0x61                  	// #97
  412d20:	br	x12
  412d24:	ldur	w9, [x29, #-24]
  412d28:	tbnz	w9, #0, 412d48 <ferror@plt+0x10148>
  412d2c:	ldur	x10, [x29, #-40]
  412d30:	lsr	w9, w19, #5
  412d34:	ldr	w9, [x10, w9, uxtw #2]
  412d38:	lsr	w9, w9, w19
  412d3c:	tbz	w9, #0, 412d48 <ferror@plt+0x10148>
  412d40:	mov	w9, w19
  412d44:	b	412d50 <ferror@plt+0x10150>
  412d48:	mov	w9, w19
  412d4c:	cbz	w27, 412f70 <ferror@plt+0x10370>
  412d50:	tbnz	w16, #0, 4134fc <ferror@plt+0x108fc>
  412d54:	cmp	w4, #0x2
  412d58:	cset	w8, ne  // ne = any
  412d5c:	orr	w8, w8, w14
  412d60:	tbnz	w8, #0, 412da4 <ferror@plt+0x101a4>
  412d64:	cmp	x20, x22
  412d68:	b.cs	412d74 <ferror@plt+0x10174>  // b.hs, b.nlast
  412d6c:	mov	w8, #0x27                  	// #39
  412d70:	strb	w8, [x21, x20]
  412d74:	add	x8, x20, #0x1
  412d78:	cmp	x8, x22
  412d7c:	b.cs	412d88 <ferror@plt+0x10188>  // b.hs, b.nlast
  412d80:	mov	w10, #0x24                  	// #36
  412d84:	strb	w10, [x21, x8]
  412d88:	add	x8, x20, #0x2
  412d8c:	cmp	x8, x22
  412d90:	b.cs	412d9c <ferror@plt+0x1019c>  // b.hs, b.nlast
  412d94:	mov	w10, #0x27                  	// #39
  412d98:	strb	w10, [x21, x8]
  412d9c:	add	x20, x20, #0x3
  412da0:	mov	w14, #0x1                   	// #1
  412da4:	cmp	x20, x22
  412da8:	b.cs	412db4 <ferror@plt+0x101b4>  // b.hs, b.nlast
  412dac:	mov	w8, #0x5c                  	// #92
  412db0:	strb	w8, [x21, x20]
  412db4:	add	x20, x20, #0x1
  412db8:	b	412fa8 <ferror@plt+0x103a8>
  412dbc:	cmp	x28, #0x1
  412dc0:	b.eq	412de4 <ferror@plt+0x101e4>  // b.none
  412dc4:	cmn	x28, #0x1
  412dc8:	b.ne	412de8 <ferror@plt+0x101e8>  // b.any
  412dcc:	ldrb	w8, [x24, #1]
  412dd0:	cbz	w8, 412de4 <ferror@plt+0x101e4>
  412dd4:	mov	w8, wzr
  412dd8:	mov	w26, wzr
  412ddc:	mov	x28, #0xffffffffffffffff    	// #-1
  412de0:	b	412d24 <ferror@plt+0x10124>
  412de4:	cbz	x23, 412df4 <ferror@plt+0x101f4>
  412de8:	mov	w8, wzr
  412dec:	mov	w26, wzr
  412df0:	b	412d24 <ferror@plt+0x10124>
  412df4:	mov	w10, #0x1                   	// #1
  412df8:	cmp	w4, #0x2
  412dfc:	b.ne	412e04 <ferror@plt+0x10204>  // b.any
  412e00:	tbnz	w16, #0, 4134fc <ferror@plt+0x108fc>
  412e04:	mov	w8, wzr
  412e08:	mov	w26, w10
  412e0c:	b	412d24 <ferror@plt+0x10124>
  412e10:	cmp	w4, #0x2
  412e14:	b.ne	412f58 <ferror@plt+0x10358>  // b.any
  412e18:	tbz	w16, #0, 412f64 <ferror@plt+0x10364>
  412e1c:	b	4134fc <ferror@plt+0x108fc>
  412e20:	mov	w9, #0x66                  	// #102
  412e24:	b	412fc4 <ferror@plt+0x103c4>
  412e28:	mov	w11, #0x74                  	// #116
  412e2c:	b	412e3c <ferror@plt+0x1023c>
  412e30:	mov	w9, #0x62                  	// #98
  412e34:	b	412fc4 <ferror@plt+0x103c4>
  412e38:	mov	w11, #0x72                  	// #114
  412e3c:	ldr	w8, [sp, #84]
  412e40:	mov	w9, w11
  412e44:	tbnz	w8, #0, 412fc4 <ferror@plt+0x103c4>
  412e48:	b	4134fc <ferror@plt+0x108fc>
  412e4c:	ldur	w8, [x29, #-72]
  412e50:	tbz	w8, #0, 412fd8 <ferror@plt+0x103d8>
  412e54:	cmp	w4, #0x2
  412e58:	tbnz	w16, #0, 41360c <ferror@plt+0x10a0c>
  412e5c:	cset	w8, ne  // ne = any
  412e60:	orr	w8, w8, w14
  412e64:	tbz	w8, #0, 41330c <ferror@plt+0x1070c>
  412e68:	mov	x8, x20
  412e6c:	b	41334c <ferror@plt+0x1074c>
  412e70:	cmp	w4, #0x5
  412e74:	b.eq	4130fc <ferror@plt+0x104fc>  // b.none
  412e78:	cmp	w4, #0x2
  412e7c:	b.ne	4131ac <ferror@plt+0x105ac>  // b.any
  412e80:	tbz	w16, #0, 4131ac <ferror@plt+0x105ac>
  412e84:	b	4134fc <ferror@plt+0x108fc>
  412e88:	mov	w9, #0x76                  	// #118
  412e8c:	b	412fc4 <ferror@plt+0x103c4>
  412e90:	cmp	w4, #0x2
  412e94:	b.ne	412fe8 <ferror@plt+0x103e8>  // b.any
  412e98:	tbnz	w16, #0, 4134fc <ferror@plt+0x108fc>
  412e9c:	ldr	x10, [sp, #64]
  412ea0:	cmp	x22, #0x0
  412ea4:	cset	w8, eq  // eq = none
  412ea8:	cmp	x10, #0x0
  412eac:	cset	w9, ne  // ne = any
  412eb0:	orr	w8, w9, w8
  412eb4:	cmp	w8, #0x0
  412eb8:	csel	x10, x10, x22, ne  // ne = any
  412ebc:	csel	x22, x22, xzr, ne  // ne = any
  412ec0:	cmp	x20, x22
  412ec4:	str	x10, [sp, #64]
  412ec8:	b.cs	412ed4 <ferror@plt+0x102d4>  // b.hs, b.nlast
  412ecc:	mov	w8, #0x27                  	// #39
  412ed0:	strb	w8, [x21, x20]
  412ed4:	add	x8, x20, #0x1
  412ed8:	cmp	x8, x22
  412edc:	b.cs	412ee8 <ferror@plt+0x102e8>  // b.hs, b.nlast
  412ee0:	mov	w9, #0x5c                  	// #92
  412ee4:	strb	w9, [x21, x8]
  412ee8:	add	x8, x20, #0x2
  412eec:	cmp	x8, x22
  412ef0:	b.cs	412efc <ferror@plt+0x102fc>  // b.hs, b.nlast
  412ef4:	mov	w9, #0x27                  	// #39
  412ef8:	strb	w9, [x21, x8]
  412efc:	mov	w14, wzr
  412f00:	mov	w8, wzr
  412f04:	add	x20, x20, #0x3
  412f08:	b	412fec <ferror@plt+0x103ec>
  412f0c:	ldr	x8, [sp, #48]
  412f10:	str	w14, [sp, #28]
  412f14:	cmp	x8, #0x1
  412f18:	b.ne	413000 <ferror@plt+0x10400>  // b.any
  412f1c:	bl	4029a0 <__ctype_b_loc@plt>
  412f20:	ldr	x8, [x0]
  412f24:	mov	w11, #0x1                   	// #1
  412f28:	ldrh	w8, [x8, x19, lsl #1]
  412f2c:	ubfx	w26, w8, #14, #1
  412f30:	ldr	w8, [sp, #60]
  412f34:	ldp	w16, w4, [x29, #-48]
  412f38:	ldr	w14, [sp, #28]
  412f3c:	ldur	w17, [x29, #-52]
  412f40:	cmp	x11, #0x1
  412f44:	orr	w8, w26, w8
  412f48:	b.hi	4131bc <ferror@plt+0x105bc>  // b.pmore
  412f4c:	tbz	w8, #0, 4131bc <ferror@plt+0x105bc>
  412f50:	mov	w8, wzr
  412f54:	b	412d24 <ferror@plt+0x10124>
  412f58:	ldr	w8, [sp, #56]
  412f5c:	mov	w9, #0x5c                  	// #92
  412f60:	tbz	w8, #0, 412fc4 <ferror@plt+0x103c4>
  412f64:	mov	w8, wzr
  412f68:	mov	w26, wzr
  412f6c:	mov	w19, #0x5c                  	// #92
  412f70:	tbnz	w8, #0, 412fa4 <ferror@plt+0x103a4>
  412f74:	tbz	w14, #0, 412fa4 <ferror@plt+0x103a4>
  412f78:	cmp	x20, x22
  412f7c:	b.cs	412f88 <ferror@plt+0x10388>  // b.hs, b.nlast
  412f80:	mov	w8, #0x27                  	// #39
  412f84:	strb	w8, [x21, x20]
  412f88:	add	x8, x20, #0x1
  412f8c:	cmp	x8, x22
  412f90:	b.cs	412f9c <ferror@plt+0x1039c>  // b.hs, b.nlast
  412f94:	mov	w9, #0x27                  	// #39
  412f98:	strb	w9, [x21, x8]
  412f9c:	mov	w14, wzr
  412fa0:	add	x20, x20, #0x2
  412fa4:	mov	w9, w19
  412fa8:	cmp	x20, x22
  412fac:	b.cs	412fb4 <ferror@plt+0x103b4>  // b.hs, b.nlast
  412fb0:	strb	w9, [x21, x20]
  412fb4:	add	x20, x20, #0x1
  412fb8:	and	w25, w25, w26
  412fbc:	add	x23, x23, #0x1
  412fc0:	b	412c50 <ferror@plt+0x10050>
  412fc4:	ldur	w10, [x29, #-72]
  412fc8:	mov	w8, wzr
  412fcc:	mov	w26, wzr
  412fd0:	tbz	w10, #0, 412d24 <ferror@plt+0x10124>
  412fd4:	b	412d50 <ferror@plt+0x10150>
  412fd8:	ldr	w8, [sp, #80]
  412fdc:	tbnz	w8, #0, 412fbc <ferror@plt+0x103bc>
  412fe0:	mov	w19, wzr
  412fe4:	b	412de8 <ferror@plt+0x101e8>
  412fe8:	mov	w8, wzr
  412fec:	mov	w9, #0x1                   	// #1
  412ff0:	mov	w19, #0x27                  	// #39
  412ff4:	str	w9, [sp, #72]
  412ff8:	mov	w26, #0x1                   	// #1
  412ffc:	b	412d24 <ferror@plt+0x10124>
  413000:	cmn	x28, #0x1
  413004:	stur	xzr, [x29, #-16]
  413008:	b.ne	413018 <ferror@plt+0x10418>  // b.any
  41300c:	mov	x0, x24
  413010:	bl	402580 <strlen@plt>
  413014:	mov	x28, x0
  413018:	ldr	x8, [sp, #96]
  41301c:	mov	x11, xzr
  413020:	mov	w26, #0x1                   	// #1
  413024:	str	x21, [sp, #32]
  413028:	add	x8, x8, x23
  41302c:	str	x8, [sp, #16]
  413030:	add	x21, x11, x23
  413034:	add	x1, x24, x21
  413038:	sub	x2, x28, x21
  41303c:	sub	x0, x29, #0x14
  413040:	sub	x3, x29, #0x10
  413044:	str	x11, [sp, #40]
  413048:	bl	41586c <ferror@plt+0x12c6c>
  41304c:	cbz	x0, 413404 <ferror@plt+0x10804>
  413050:	mov	x24, x0
  413054:	cmn	x0, #0x1
  413058:	b.eq	413400 <ferror@plt+0x10800>  // b.none
  41305c:	cmn	x24, #0x2
  413060:	b.eq	4133c4 <ferror@plt+0x107c4>  // b.none
  413064:	ldr	w9, [sp, #76]
  413068:	ldr	x21, [sp, #32]
  41306c:	cmp	x24, #0x2
  413070:	cset	w8, cc  // cc = lo, ul, last
  413074:	eor	w9, w9, #0x1
  413078:	mov	x12, #0x2b                  	// #43
  41307c:	orr	w8, w9, w8
  413080:	mov	w11, #0x1                   	// #1
  413084:	movk	x12, #0x2, lsl #32
  413088:	tbnz	w8, #0, 4130c4 <ferror@plt+0x104c4>
  41308c:	ldr	x9, [sp, #40]
  413090:	ldr	x10, [sp, #16]
  413094:	sub	x8, x24, #0x1
  413098:	add	x9, x10, x9
  41309c:	ldrb	w10, [x9]
  4130a0:	sub	w10, w10, #0x5b
  4130a4:	cmp	w10, #0x21
  4130a8:	b.hi	4130b8 <ferror@plt+0x104b8>  // b.pmore
  4130ac:	lsl	x10, x11, x10
  4130b0:	tst	x10, x12
  4130b4:	b.ne	413530 <ferror@plt+0x10930>  // b.any
  4130b8:	subs	x8, x8, #0x1
  4130bc:	add	x9, x9, #0x1
  4130c0:	b.ne	41309c <ferror@plt+0x1049c>  // b.any
  4130c4:	ldur	w0, [x29, #-20]
  4130c8:	bl	402b60 <iswprint@plt>
  4130cc:	ldr	x21, [sp, #40]
  4130d0:	cmp	w0, #0x0
  4130d4:	cset	w8, ne  // ne = any
  4130d8:	sub	x0, x29, #0x10
  4130dc:	and	w26, w26, w8
  4130e0:	add	x21, x24, x21
  4130e4:	bl	402940 <mbsinit@plt>
  4130e8:	mov	x11, x21
  4130ec:	ldr	x21, [sp, #32]
  4130f0:	ldur	x24, [x29, #-80]
  4130f4:	cbz	w0, 413030 <ferror@plt+0x10430>
  4130f8:	b	412f30 <ferror@plt+0x10330>
  4130fc:	ldr	w8, [sp, #80]
  413100:	tbz	w8, #2, 4131ac <ferror@plt+0x105ac>
  413104:	add	x9, x23, #0x2
  413108:	cmp	x9, x28
  41310c:	b.cs	4131ac <ferror@plt+0x105ac>  // b.hs, b.nlast
  413110:	add	x8, x23, x24
  413114:	ldrb	w8, [x8, #1]
  413118:	cmp	w8, #0x3f
  41311c:	b.ne	4131ac <ferror@plt+0x105ac>  // b.any
  413120:	ldrb	w19, [x24, x9]
  413124:	mov	w8, wzr
  413128:	cmp	w19, #0x3e
  41312c:	b.hi	413418 <ferror@plt+0x10818>  // b.pmore
  413130:	mov	w10, #0x1                   	// #1
  413134:	mov	x11, #0xa38200000000        	// #179778741075968
  413138:	lsl	x10, x10, x19
  41313c:	movk	x11, #0x7000, lsl #48
  413140:	tst	x10, x11
  413144:	b.eq	413418 <ferror@plt+0x10818>  // b.none
  413148:	tbnz	w16, #0, 4134fc <ferror@plt+0x108fc>
  41314c:	cmp	x20, x22
  413150:	b.cs	41315c <ferror@plt+0x1055c>  // b.hs, b.nlast
  413154:	mov	w8, #0x3f                  	// #63
  413158:	strb	w8, [x21, x20]
  41315c:	add	x8, x20, #0x1
  413160:	cmp	x8, x22
  413164:	b.cs	413170 <ferror@plt+0x10570>  // b.hs, b.nlast
  413168:	mov	w10, #0x22                  	// #34
  41316c:	strb	w10, [x21, x8]
  413170:	add	x8, x20, #0x2
  413174:	cmp	x8, x22
  413178:	b.cs	413184 <ferror@plt+0x10584>  // b.hs, b.nlast
  41317c:	mov	w10, #0x22                  	// #34
  413180:	strb	w10, [x21, x8]
  413184:	add	x8, x20, #0x3
  413188:	cmp	x8, x22
  41318c:	b.cs	413198 <ferror@plt+0x10598>  // b.hs, b.nlast
  413190:	mov	w10, #0x3f                  	// #63
  413194:	strb	w10, [x21, x8]
  413198:	mov	w8, wzr
  41319c:	mov	w26, wzr
  4131a0:	add	x20, x20, #0x4
  4131a4:	mov	x23, x9
  4131a8:	b	412d24 <ferror@plt+0x10124>
  4131ac:	mov	w8, wzr
  4131b0:	mov	w26, wzr
  4131b4:	mov	w19, #0x3f                  	// #63
  4131b8:	b	412d24 <ferror@plt+0x10124>
  4131bc:	mov	w10, wzr
  4131c0:	add	x9, x11, x23
  4131c4:	tbz	w8, #0, 413224 <ferror@plt+0x10624>
  4131c8:	b	4132d0 <ferror@plt+0x106d0>
  4131cc:	and	w12, w10, #0x1
  4131d0:	orn	w12, w12, w14
  4131d4:	tbnz	w12, #0, 413204 <ferror@plt+0x10604>
  4131d8:	cmp	x20, x22
  4131dc:	b.cs	4131e8 <ferror@plt+0x105e8>  // b.hs, b.nlast
  4131e0:	mov	w12, #0x27                  	// #39
  4131e4:	strb	w12, [x21, x20]
  4131e8:	add	x12, x20, #0x1
  4131ec:	cmp	x12, x22
  4131f0:	b.cs	4131fc <ferror@plt+0x105fc>  // b.hs, b.nlast
  4131f4:	mov	w13, #0x27                  	// #39
  4131f8:	strb	w13, [x21, x12]
  4131fc:	mov	w14, wzr
  413200:	add	x20, x20, #0x2
  413204:	cmp	x20, x22
  413208:	b.cs	413210 <ferror@plt+0x10610>  // b.hs, b.nlast
  41320c:	strb	w19, [x21, x20]
  413210:	ldr	x12, [sp, #96]
  413214:	add	x20, x20, #0x1
  413218:	ldrb	w19, [x12, x23]
  41321c:	mov	x23, x11
  413220:	tbnz	w8, #0, 4132d0 <ferror@plt+0x106d0>
  413224:	tbnz	w16, #0, 4134fc <ferror@plt+0x108fc>
  413228:	cmp	w4, #0x2
  41322c:	cset	w10, ne  // ne = any
  413230:	orr	w10, w10, w14
  413234:	tbnz	w10, #0, 413278 <ferror@plt+0x10678>
  413238:	cmp	x20, x22
  41323c:	b.cs	413248 <ferror@plt+0x10648>  // b.hs, b.nlast
  413240:	mov	w10, #0x27                  	// #39
  413244:	strb	w10, [x21, x20]
  413248:	add	x10, x20, #0x1
  41324c:	cmp	x10, x22
  413250:	b.cs	41325c <ferror@plt+0x1065c>  // b.hs, b.nlast
  413254:	mov	w11, #0x24                  	// #36
  413258:	strb	w11, [x21, x10]
  41325c:	add	x10, x20, #0x2
  413260:	cmp	x10, x22
  413264:	b.cs	413270 <ferror@plt+0x10670>  // b.hs, b.nlast
  413268:	mov	w11, #0x27                  	// #39
  41326c:	strb	w11, [x21, x10]
  413270:	add	x20, x20, #0x3
  413274:	mov	w14, #0x1                   	// #1
  413278:	cmp	x20, x22
  41327c:	b.cs	413288 <ferror@plt+0x10688>  // b.hs, b.nlast
  413280:	mov	w10, #0x5c                  	// #92
  413284:	strb	w10, [x21, x20]
  413288:	add	x10, x20, #0x1
  41328c:	cmp	x10, x22
  413290:	b.cs	4132a0 <ferror@plt+0x106a0>  // b.hs, b.nlast
  413294:	mov	w11, #0x30                  	// #48
  413298:	bfxil	w11, w19, #6, #2
  41329c:	strb	w11, [x21, x10]
  4132a0:	add	x10, x20, #0x2
  4132a4:	cmp	x10, x22
  4132a8:	b.cs	4132b8 <ferror@plt+0x106b8>  // b.hs, b.nlast
  4132ac:	mov	w11, #0x30                  	// #48
  4132b0:	bfxil	w11, w19, #3, #3
  4132b4:	strb	w11, [x21, x10]
  4132b8:	mov	w11, #0x30                  	// #48
  4132bc:	bfxil	w11, w19, #0, #3
  4132c0:	add	x20, x20, #0x3
  4132c4:	mov	w10, #0x1                   	// #1
  4132c8:	mov	w19, w11
  4132cc:	b	4132f4 <ferror@plt+0x106f4>
  4132d0:	tbz	w27, #0, 4132f0 <ferror@plt+0x106f0>
  4132d4:	cmp	x20, x22
  4132d8:	b.cs	4132e4 <ferror@plt+0x106e4>  // b.hs, b.nlast
  4132dc:	mov	w11, #0x5c                  	// #92
  4132e0:	strb	w11, [x21, x20]
  4132e4:	mov	w27, wzr
  4132e8:	add	x20, x20, #0x1
  4132ec:	b	4132f4 <ferror@plt+0x106f4>
  4132f0:	mov	w27, wzr
  4132f4:	add	x11, x23, #0x1
  4132f8:	cmp	x9, x11
  4132fc:	b.hi	4131cc <ferror@plt+0x105cc>  // b.pmore
  413300:	and	w8, w10, #0x1
  413304:	tbz	w8, #0, 412f74 <ferror@plt+0x10374>
  413308:	b	412fa4 <ferror@plt+0x103a4>
  41330c:	cmp	x20, x22
  413310:	b.cs	41331c <ferror@plt+0x1071c>  // b.hs, b.nlast
  413314:	mov	w8, #0x27                  	// #39
  413318:	strb	w8, [x21, x20]
  41331c:	add	x8, x20, #0x1
  413320:	cmp	x8, x22
  413324:	b.cs	413330 <ferror@plt+0x10730>  // b.hs, b.nlast
  413328:	mov	w9, #0x24                  	// #36
  41332c:	strb	w9, [x21, x8]
  413330:	add	x8, x20, #0x2
  413334:	cmp	x8, x22
  413338:	b.cs	413344 <ferror@plt+0x10744>  // b.hs, b.nlast
  41333c:	mov	w9, #0x27                  	// #39
  413340:	strb	w9, [x21, x8]
  413344:	add	x8, x20, #0x3
  413348:	mov	w14, #0x1                   	// #1
  41334c:	cmp	x8, x22
  413350:	b.cs	41335c <ferror@plt+0x1075c>  // b.hs, b.nlast
  413354:	mov	w9, #0x5c                  	// #92
  413358:	strb	w9, [x21, x8]
  41335c:	cmp	w4, #0x2
  413360:	add	x20, x8, #0x1
  413364:	b.eq	4133b4 <ferror@plt+0x107b4>  // b.none
  413368:	add	x9, x23, #0x1
  41336c:	cmp	x9, x28
  413370:	b.cs	4133b4 <ferror@plt+0x107b4>  // b.hs, b.nlast
  413374:	ldrb	w9, [x24, x9]
  413378:	sub	w9, w9, #0x30
  41337c:	cmp	w9, #0x9
  413380:	b.hi	4133b4 <ferror@plt+0x107b4>  // b.pmore
  413384:	cmp	x20, x22
  413388:	b.cs	413394 <ferror@plt+0x10794>  // b.hs, b.nlast
  41338c:	mov	w9, #0x30                  	// #48
  413390:	strb	w9, [x21, x20]
  413394:	add	x9, x8, #0x2
  413398:	cmp	x9, x22
  41339c:	b.cs	4133a8 <ferror@plt+0x107a8>  // b.hs, b.nlast
  4133a0:	mov	w10, #0x30                  	// #48
  4133a4:	strb	w10, [x21, x9]
  4133a8:	mov	w26, wzr
  4133ac:	add	x20, x8, #0x3
  4133b0:	b	4133b8 <ferror@plt+0x107b8>
  4133b4:	mov	w26, wzr
  4133b8:	mov	w8, #0x1                   	// #1
  4133bc:	mov	w19, #0x30                  	// #48
  4133c0:	b	412d24 <ferror@plt+0x10124>
  4133c4:	cmp	x28, x21
  4133c8:	b.ls	413400 <ferror@plt+0x10800>  // b.plast
  4133cc:	ldur	x24, [x29, #-80]
  4133d0:	ldp	x21, x11, [sp, #32]
  4133d4:	sub	x8, x28, x23
  4133d8:	add	x9, x24, x23
  4133dc:	ldrb	w10, [x9, x11]
  4133e0:	cbz	w10, 413410 <ferror@plt+0x10810>
  4133e4:	add	x11, x11, #0x1
  4133e8:	add	x10, x23, x11
  4133ec:	cmp	x10, x28
  4133f0:	b.cc	4133dc <ferror@plt+0x107dc>  // b.lo, b.ul, b.last
  4133f4:	mov	w26, wzr
  4133f8:	mov	x11, x8
  4133fc:	b	412f30 <ferror@plt+0x10330>
  413400:	mov	w26, wzr
  413404:	ldp	x21, x11, [sp, #32]
  413408:	ldur	x24, [x29, #-80]
  41340c:	b	412f30 <ferror@plt+0x10330>
  413410:	mov	w26, wzr
  413414:	b	412f30 <ferror@plt+0x10330>
  413418:	mov	w19, #0x3f                  	// #63
  41341c:	mov	w26, w8
  413420:	b	412d24 <ferror@plt+0x10124>
  413424:	mov	x28, x23
  413428:	b	413430 <ferror@plt+0x10830>
  41342c:	mov	x28, #0xffffffffffffffff    	// #-1
  413430:	cmp	w4, #0x2
  413434:	ldur	w10, [x29, #-72]
  413438:	cset	w8, eq  // eq = none
  41343c:	cmp	x20, #0x0
  413440:	cset	w9, eq  // eq = none
  413444:	and	w8, w8, w9
  413448:	and	w8, w16, w8
  41344c:	tbnz	w8, #0, 413500 <ferror@plt+0x10900>
  413450:	cmp	w4, #0x2
  413454:	cset	w8, ne  // ne = any
  413458:	orr	w8, w16, w8
  41345c:	tbnz	w8, #0, 4135cc <ferror@plt+0x109cc>
  413460:	ldr	w8, [sp, #72]
  413464:	eor	w8, w8, #0x1
  413468:	tbnz	w8, #0, 4135cc <ferror@plt+0x109cc>
  41346c:	tbnz	w25, #0, 41359c <ferror@plt+0x1099c>
  413470:	ldr	x24, [sp, #64]
  413474:	mov	w19, wzr
  413478:	cbz	x24, 4135c8 <ferror@plt+0x109c8>
  41347c:	mov	w4, #0x2                   	// #2
  413480:	mov	w8, w10
  413484:	mov	w25, w19
  413488:	mov	w16, w19
  41348c:	cbz	x22, 412a7c <ferror@plt+0xfe7c>
  413490:	b	4135cc <ferror@plt+0x109cc>
  413494:	mov	w16, wzr
  413498:	cbz	x22, 4134a4 <ferror@plt+0x108a4>
  41349c:	mov	w8, #0x22                  	// #34
  4134a0:	strb	w8, [x21]
  4134a4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x240c>
  4134a8:	add	x8, x8, #0xf22
  4134ac:	stur	x8, [x29, #-64]
  4134b0:	mov	w8, #0x1                   	// #1
  4134b4:	mov	w20, #0x1                   	// #1
  4134b8:	mov	w4, #0x5                   	// #5
  4134bc:	stur	x8, [x29, #-32]
  4134c0:	mov	w9, #0x1                   	// #1
  4134c4:	b	412bd8 <ferror@plt+0xffd8>
  4134c8:	mov	w9, #0x1                   	// #1
  4134cc:	mov	w16, wzr
  4134d0:	cbz	x22, 4134dc <ferror@plt+0x108dc>
  4134d4:	mov	w8, #0x27                  	// #39
  4134d8:	strb	w8, [x21]
  4134dc:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x140c>
  4134e0:	add	x8, x8, #0xfe2
  4134e4:	stur	x8, [x29, #-64]
  4134e8:	mov	w8, #0x1                   	// #1
  4134ec:	mov	w4, #0x2                   	// #2
  4134f0:	mov	w20, #0x1                   	// #1
  4134f4:	stur	x8, [x29, #-32]
  4134f8:	b	412bd8 <ferror@plt+0xffd8>
  4134fc:	ldur	w10, [x29, #-72]
  413500:	tst	w10, #0x1
  413504:	mov	w8, #0x2                   	// #2
  413508:	mov	w9, #0x4                   	// #4
  41350c:	csel	w8, w9, w8, ne  // ne = any
  413510:	cmp	w4, #0x2
  413514:	b.ne	41351c <ferror@plt+0x1091c>  // b.any
  413518:	mov	w4, w8
  41351c:	ldr	x7, [sp, #88]
  413520:	b	41354c <ferror@plt+0x1094c>
  413524:	ldr	x7, [sp, #88]
  413528:	ldur	w4, [x29, #-44]
  41352c:	b	41354c <ferror@plt+0x1094c>
  413530:	ldur	w8, [x29, #-72]
  413534:	ldr	x7, [sp, #88]
  413538:	ldur	x24, [x29, #-80]
  41353c:	mov	w9, #0x4                   	// #4
  413540:	tst	w8, #0x1
  413544:	mov	w8, #0x2                   	// #2
  413548:	csel	w4, w9, w8, ne  // ne = any
  41354c:	ldr	w8, [sp, #80]
  413550:	mov	x0, x21
  413554:	mov	x1, x22
  413558:	mov	x2, x24
  41355c:	and	w5, w8, #0xfffffffd
  413560:	ldur	x8, [x29, #-88]
  413564:	mov	x3, x28
  413568:	mov	x6, xzr
  41356c:	str	x8, [sp]
  413570:	bl	4129f8 <ferror@plt+0xfdf8>
  413574:	mov	x20, x0
  413578:	mov	x0, x20
  41357c:	ldp	x20, x19, [sp, #272]
  413580:	ldp	x22, x21, [sp, #256]
  413584:	ldp	x24, x23, [sp, #240]
  413588:	ldp	x26, x25, [sp, #224]
  41358c:	ldp	x28, x27, [sp, #208]
  413590:	ldp	x29, x30, [sp, #192]
  413594:	add	sp, sp, #0x120
  413598:	ret
  41359c:	ldur	x8, [x29, #-88]
  4135a0:	ldr	x1, [sp, #64]
  4135a4:	ldur	x2, [x29, #-80]
  4135a8:	ldr	w5, [sp, #80]
  4135ac:	ldur	x6, [x29, #-40]
  4135b0:	ldr	x7, [sp, #88]
  4135b4:	mov	w4, #0x5                   	// #5
  4135b8:	str	x8, [sp]
  4135bc:	mov	x0, x21
  4135c0:	mov	x3, x28
  4135c4:	b	413570 <ferror@plt+0x10970>
  4135c8:	mov	w16, w19
  4135cc:	ldur	x8, [x29, #-64]
  4135d0:	cbz	x8, 4135fc <ferror@plt+0x109fc>
  4135d4:	tbnz	w16, #0, 4135fc <ferror@plt+0x109fc>
  4135d8:	ldrb	w9, [x8]
  4135dc:	cbz	w9, 4135fc <ferror@plt+0x109fc>
  4135e0:	add	x8, x8, #0x1
  4135e4:	cmp	x20, x22
  4135e8:	b.cs	4135f0 <ferror@plt+0x109f0>  // b.hs, b.nlast
  4135ec:	strb	w9, [x21, x20]
  4135f0:	ldrb	w9, [x8], #1
  4135f4:	add	x20, x20, #0x1
  4135f8:	cbnz	w9, 4135e4 <ferror@plt+0x109e4>
  4135fc:	cmp	x20, x22
  413600:	b.cs	413578 <ferror@plt+0x10978>  // b.hs, b.nlast
  413604:	strb	wzr, [x21, x20]
  413608:	b	413578 <ferror@plt+0x10978>
  41360c:	b.ne	41351c <ferror@plt+0x1091c>  // b.any
  413610:	mov	w4, #0x4                   	// #4
  413614:	b	41351c <ferror@plt+0x1091c>
  413618:	bl	402920 <abort@plt>
  41361c:	mov	x3, x2
  413620:	mov	x2, xzr
  413624:	b	413628 <ferror@plt+0x10a28>
  413628:	sub	sp, sp, #0x70
  41362c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  413630:	add	x8, x8, #0xb68
  413634:	cmp	x3, #0x0
  413638:	stp	x29, x30, [sp, #16]
  41363c:	stp	x28, x27, [sp, #32]
  413640:	stp	x26, x25, [sp, #48]
  413644:	stp	x24, x23, [sp, #64]
  413648:	stp	x22, x21, [sp, #80]
  41364c:	stp	x20, x19, [sp, #96]
  413650:	add	x29, sp, #0x10
  413654:	mov	x19, x2
  413658:	mov	x22, x1
  41365c:	mov	x23, x0
  413660:	csel	x21, x8, x3, eq  // eq = none
  413664:	bl	402b80 <__errno_location@plt>
  413668:	ldp	w4, w8, [x21]
  41366c:	cmp	x19, #0x0
  413670:	ldp	x7, x9, [x21, #40]
  413674:	ldr	w28, [x0]
  413678:	cset	w10, eq  // eq = none
  41367c:	orr	w25, w8, w10
  413680:	add	x26, x21, #0x8
  413684:	mov	x24, x0
  413688:	mov	x0, xzr
  41368c:	mov	x1, xzr
  413690:	mov	x2, x23
  413694:	mov	x3, x22
  413698:	mov	w5, w25
  41369c:	mov	x6, x26
  4136a0:	str	x9, [sp]
  4136a4:	bl	4129f8 <ferror@plt+0xfdf8>
  4136a8:	add	x27, x0, #0x1
  4136ac:	mov	x20, x0
  4136b0:	mov	x0, x27
  4136b4:	bl	414de0 <ferror@plt+0x121e0>
  4136b8:	ldr	w4, [x21]
  4136bc:	ldp	x7, x8, [x21, #40]
  4136c0:	mov	x1, x27
  4136c4:	mov	x2, x23
  4136c8:	mov	x3, x22
  4136cc:	mov	w5, w25
  4136d0:	mov	x6, x26
  4136d4:	mov	x21, x0
  4136d8:	str	x8, [sp]
  4136dc:	bl	4129f8 <ferror@plt+0xfdf8>
  4136e0:	str	w28, [x24]
  4136e4:	cbz	x19, 4136ec <ferror@plt+0x10aec>
  4136e8:	str	x20, [x19]
  4136ec:	mov	x0, x21
  4136f0:	ldp	x20, x19, [sp, #96]
  4136f4:	ldp	x22, x21, [sp, #80]
  4136f8:	ldp	x24, x23, [sp, #64]
  4136fc:	ldp	x26, x25, [sp, #48]
  413700:	ldp	x28, x27, [sp, #32]
  413704:	ldp	x29, x30, [sp, #16]
  413708:	add	sp, sp, #0x70
  41370c:	ret
  413710:	stp	x29, x30, [sp, #-64]!
  413714:	stp	x20, x19, [sp, #48]
  413718:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  41371c:	stp	x22, x21, [sp, #32]
  413720:	ldr	w8, [x20, #960]
  413724:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1540c>
  413728:	ldr	x19, [x21, #952]
  41372c:	str	x23, [sp, #16]
  413730:	cmp	w8, #0x2
  413734:	mov	x29, sp
  413738:	b.lt	41375c <ferror@plt+0x10b5c>  // b.tstop
  41373c:	add	x22, x19, #0x18
  413740:	mov	w23, #0x1                   	// #1
  413744:	ldr	x0, [x22], #16
  413748:	bl	4029f0 <free@plt>
  41374c:	ldrsw	x8, [x20, #960]
  413750:	add	x23, x23, #0x1
  413754:	cmp	x23, x8
  413758:	b.lt	413744 <ferror@plt+0x10b44>  // b.tstop
  41375c:	ldr	x0, [x19, #8]
  413760:	adrp	x23, 436000 <__progname@@GLIBC_2.17+0xab98>
  413764:	add	x23, x23, #0xba0
  413768:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1540c>
  41376c:	cmp	x0, x23
  413770:	add	x22, x22, #0x3c8
  413774:	b.eq	413784 <ferror@plt+0x10b84>  // b.none
  413778:	bl	4029f0 <free@plt>
  41377c:	mov	w8, #0x100                 	// #256
  413780:	stp	x8, x23, [x22]
  413784:	cmp	x19, x22
  413788:	b.eq	413798 <ferror@plt+0x10b98>  // b.none
  41378c:	mov	x0, x19
  413790:	bl	4029f0 <free@plt>
  413794:	str	x22, [x21, #952]
  413798:	mov	w8, #0x1                   	// #1
  41379c:	str	w8, [x20, #960]
  4137a0:	ldp	x20, x19, [sp, #48]
  4137a4:	ldp	x22, x21, [sp, #32]
  4137a8:	ldr	x23, [sp, #16]
  4137ac:	ldp	x29, x30, [sp], #64
  4137b0:	ret
  4137b4:	adrp	x3, 436000 <__progname@@GLIBC_2.17+0xab98>
  4137b8:	add	x3, x3, #0xb68
  4137bc:	mov	x2, #0xffffffffffffffff    	// #-1
  4137c0:	b	4137c4 <ferror@plt+0x10bc4>
  4137c4:	sub	sp, sp, #0x80
  4137c8:	stp	x29, x30, [sp, #32]
  4137cc:	add	x29, sp, #0x20
  4137d0:	stp	x28, x27, [sp, #48]
  4137d4:	stp	x26, x25, [sp, #64]
  4137d8:	stp	x24, x23, [sp, #80]
  4137dc:	stp	x22, x21, [sp, #96]
  4137e0:	stp	x20, x19, [sp, #112]
  4137e4:	mov	x22, x3
  4137e8:	stur	x2, [x29, #-8]
  4137ec:	mov	x21, x1
  4137f0:	mov	w23, w0
  4137f4:	bl	402b80 <__errno_location@plt>
  4137f8:	tbnz	w23, #31, 413948 <ferror@plt+0x10d48>
  4137fc:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x1540c>
  413800:	ldr	w8, [x25, #960]
  413804:	adrp	x28, 42b000 <_obstack_memory_used@@Base+0x1540c>
  413808:	ldr	w20, [x0]
  41380c:	ldr	x27, [x28, #952]
  413810:	mov	x19, x0
  413814:	cmp	w8, w23
  413818:	b.gt	413884 <ferror@plt+0x10c84>
  41381c:	mov	w8, #0x7fffffff            	// #2147483647
  413820:	cmp	w23, w8
  413824:	stur	w20, [x29, #-12]
  413828:	b.cs	41394c <ferror@plt+0x10d4c>  // b.hs, b.nlast
  41382c:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  413830:	add	x20, x20, #0x3c8
  413834:	add	w26, w23, #0x1
  413838:	cmp	x27, x20
  41383c:	csel	x0, xzr, x27, eq  // eq = none
  413840:	sbfiz	x1, x26, #4, #32
  413844:	bl	414e84 <ferror@plt+0x12284>
  413848:	mov	x24, x0
  41384c:	cmp	x27, x20
  413850:	str	x0, [x28, #952]
  413854:	b.ne	413860 <ferror@plt+0x10c60>  // b.any
  413858:	ldr	q0, [x20]
  41385c:	str	q0, [x24]
  413860:	ldrsw	x8, [x25, #960]
  413864:	mov	w1, wzr
  413868:	add	x0, x24, x8, lsl #4
  41386c:	sub	w8, w26, w8
  413870:	sbfiz	x2, x8, #4, #32
  413874:	bl	4027e0 <memset@plt>
  413878:	ldur	w20, [x29, #-12]
  41387c:	mov	x27, x24
  413880:	str	w26, [x25, #960]
  413884:	add	x28, x27, w23, uxtw #4
  413888:	mov	x27, x28
  41388c:	ldr	x26, [x28]
  413890:	ldr	x23, [x27, #8]!
  413894:	ldp	w4, w8, [x22]
  413898:	ldp	x7, x9, [x22, #40]
  41389c:	ldur	x3, [x29, #-8]
  4138a0:	add	x24, x22, #0x8
  4138a4:	orr	w25, w8, #0x1
  4138a8:	mov	x0, x23
  4138ac:	mov	x1, x26
  4138b0:	mov	x2, x21
  4138b4:	mov	w5, w25
  4138b8:	mov	x6, x24
  4138bc:	str	x9, [sp]
  4138c0:	bl	4129f8 <ferror@plt+0xfdf8>
  4138c4:	cmp	x26, x0
  4138c8:	b.hi	413920 <ferror@plt+0x10d20>  // b.pmore
  4138cc:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  4138d0:	add	x8, x8, #0xba0
  4138d4:	add	x26, x0, #0x1
  4138d8:	cmp	x23, x8
  4138dc:	str	x26, [x28]
  4138e0:	b.eq	4138ec <ferror@plt+0x10cec>  // b.none
  4138e4:	mov	x0, x23
  4138e8:	bl	4029f0 <free@plt>
  4138ec:	mov	x0, x26
  4138f0:	bl	414de0 <ferror@plt+0x121e0>
  4138f4:	str	x0, [x27]
  4138f8:	ldr	w4, [x22]
  4138fc:	ldp	x7, x8, [x22, #40]
  413900:	ldur	x3, [x29, #-8]
  413904:	mov	x1, x26
  413908:	mov	x2, x21
  41390c:	mov	w5, w25
  413910:	mov	x6, x24
  413914:	mov	x23, x0
  413918:	str	x8, [sp]
  41391c:	bl	4129f8 <ferror@plt+0xfdf8>
  413920:	str	w20, [x19]
  413924:	mov	x0, x23
  413928:	ldp	x20, x19, [sp, #112]
  41392c:	ldp	x22, x21, [sp, #96]
  413930:	ldp	x24, x23, [sp, #80]
  413934:	ldp	x26, x25, [sp, #64]
  413938:	ldp	x28, x27, [sp, #48]
  41393c:	ldp	x29, x30, [sp, #32]
  413940:	add	sp, sp, #0x80
  413944:	ret
  413948:	bl	402920 <abort@plt>
  41394c:	bl	4150b0 <ferror@plt+0x124b0>
  413950:	adrp	x3, 436000 <__progname@@GLIBC_2.17+0xab98>
  413954:	add	x3, x3, #0xb68
  413958:	b	4137c4 <ferror@plt+0x10bc4>
  41395c:	adrp	x3, 436000 <__progname@@GLIBC_2.17+0xab98>
  413960:	add	x3, x3, #0xb68
  413964:	mov	x2, #0xffffffffffffffff    	// #-1
  413968:	mov	x1, x0
  41396c:	mov	w0, wzr
  413970:	b	4137c4 <ferror@plt+0x10bc4>
  413974:	adrp	x3, 436000 <__progname@@GLIBC_2.17+0xab98>
  413978:	mov	x2, x1
  41397c:	add	x3, x3, #0xb68
  413980:	mov	x1, x0
  413984:	mov	w0, wzr
  413988:	b	4137c4 <ferror@plt+0x10bc4>
  41398c:	sub	sp, sp, #0x50
  413990:	movi	v0.2d, #0x0
  413994:	cmp	w1, #0xa
  413998:	stp	x29, x30, [sp, #64]
  41399c:	add	x29, sp, #0x40
  4139a0:	str	xzr, [sp, #48]
  4139a4:	stp	q0, q0, [sp, #16]
  4139a8:	str	q0, [sp]
  4139ac:	b.eq	4139d4 <ferror@plt+0x10dd4>  // b.none
  4139b0:	mov	x8, x2
  4139b4:	str	w1, [sp]
  4139b8:	mov	x3, sp
  4139bc:	mov	x2, #0xffffffffffffffff    	// #-1
  4139c0:	mov	x1, x8
  4139c4:	bl	4137c4 <ferror@plt+0x10bc4>
  4139c8:	ldp	x29, x30, [sp, #64]
  4139cc:	add	sp, sp, #0x50
  4139d0:	ret
  4139d4:	bl	402920 <abort@plt>
  4139d8:	sub	sp, sp, #0x50
  4139dc:	movi	v0.2d, #0x0
  4139e0:	cmp	w1, #0xa
  4139e4:	stp	x29, x30, [sp, #64]
  4139e8:	add	x29, sp, #0x40
  4139ec:	str	xzr, [sp, #48]
  4139f0:	stp	q0, q0, [sp, #16]
  4139f4:	str	q0, [sp]
  4139f8:	b.eq	413a20 <ferror@plt+0x10e20>  // b.none
  4139fc:	mov	x8, x3
  413a00:	str	w1, [sp]
  413a04:	mov	x3, sp
  413a08:	mov	x1, x2
  413a0c:	mov	x2, x8
  413a10:	bl	4137c4 <ferror@plt+0x10bc4>
  413a14:	ldp	x29, x30, [sp, #64]
  413a18:	add	sp, sp, #0x50
  413a1c:	ret
  413a20:	bl	402920 <abort@plt>
  413a24:	mov	x2, x1
  413a28:	mov	w1, w0
  413a2c:	mov	w0, wzr
  413a30:	b	41398c <ferror@plt+0x10d8c>
  413a34:	mov	x3, x2
  413a38:	mov	x2, x1
  413a3c:	mov	w1, w0
  413a40:	mov	w0, wzr
  413a44:	b	4139d8 <ferror@plt+0x10dd8>
  413a48:	sub	sp, sp, #0x50
  413a4c:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  413a50:	add	x9, x9, #0xb68
  413a54:	ldp	q0, q1, [x9]
  413a58:	ubfx	w10, w2, #5, #3
  413a5c:	mov	x11, sp
  413a60:	mov	x8, x1
  413a64:	stp	q0, q1, [sp]
  413a68:	ldr	q0, [x9, #32]
  413a6c:	ldr	x9, [x9, #48]
  413a70:	mov	x1, x0
  413a74:	mov	x3, sp
  413a78:	str	q0, [sp, #32]
  413a7c:	str	x9, [sp, #48]
  413a80:	add	x9, x11, w10, uxtw #2
  413a84:	ldr	w10, [x9, #8]
  413a88:	mov	w0, wzr
  413a8c:	stp	x29, x30, [sp, #64]
  413a90:	add	x29, sp, #0x40
  413a94:	lsr	w11, w10, w2
  413a98:	mvn	w11, w11
  413a9c:	and	w11, w11, #0x1
  413aa0:	lsl	w11, w11, w2
  413aa4:	eor	w10, w11, w10
  413aa8:	mov	x2, x8
  413aac:	str	w10, [x9, #8]
  413ab0:	bl	4137c4 <ferror@plt+0x10bc4>
  413ab4:	ldp	x29, x30, [sp, #64]
  413ab8:	add	sp, sp, #0x50
  413abc:	ret
  413ac0:	sub	sp, sp, #0x50
  413ac4:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  413ac8:	add	x9, x9, #0xb68
  413acc:	ldp	q0, q1, [x9]
  413ad0:	ubfx	w10, w1, #5, #3
  413ad4:	mov	x11, sp
  413ad8:	mov	x8, x0
  413adc:	stp	q0, q1, [sp]
  413ae0:	ldr	q0, [x9, #32]
  413ae4:	ldr	x9, [x9, #48]
  413ae8:	mov	x3, sp
  413aec:	mov	x2, #0xffffffffffffffff    	// #-1
  413af0:	str	q0, [sp, #32]
  413af4:	str	x9, [sp, #48]
  413af8:	add	x9, x11, w10, uxtw #2
  413afc:	ldr	w10, [x9, #8]
  413b00:	mov	w0, wzr
  413b04:	stp	x29, x30, [sp, #64]
  413b08:	add	x29, sp, #0x40
  413b0c:	lsr	w11, w10, w1
  413b10:	mvn	w11, w11
  413b14:	and	w11, w11, #0x1
  413b18:	lsl	w11, w11, w1
  413b1c:	eor	w10, w11, w10
  413b20:	mov	x1, x8
  413b24:	str	w10, [x9, #8]
  413b28:	bl	4137c4 <ferror@plt+0x10bc4>
  413b2c:	ldp	x29, x30, [sp, #64]
  413b30:	add	sp, sp, #0x50
  413b34:	ret
  413b38:	sub	sp, sp, #0x50
  413b3c:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  413b40:	add	x8, x8, #0xb68
  413b44:	ldp	q0, q1, [x8]
  413b48:	ldr	q2, [x8, #32]
  413b4c:	ldr	x8, [x8, #48]
  413b50:	mov	x1, x0
  413b54:	stp	q0, q1, [sp]
  413b58:	ldr	w9, [sp, #12]
  413b5c:	str	x8, [sp, #48]
  413b60:	mov	x3, sp
  413b64:	mov	x2, #0xffffffffffffffff    	// #-1
  413b68:	orr	w8, w9, #0x4000000
  413b6c:	mov	w0, wzr
  413b70:	stp	x29, x30, [sp, #64]
  413b74:	add	x29, sp, #0x40
  413b78:	str	q2, [sp, #32]
  413b7c:	str	w8, [sp, #12]
  413b80:	bl	4137c4 <ferror@plt+0x10bc4>
  413b84:	ldp	x29, x30, [sp, #64]
  413b88:	add	sp, sp, #0x50
  413b8c:	ret
  413b90:	sub	sp, sp, #0x50
  413b94:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  413b98:	add	x8, x8, #0xb68
  413b9c:	ldp	q0, q1, [x8]
  413ba0:	ldr	q2, [x8, #32]
  413ba4:	ldr	x8, [x8, #48]
  413ba8:	mov	x2, x1
  413bac:	stp	q0, q1, [sp]
  413bb0:	ldr	w9, [sp, #12]
  413bb4:	mov	x1, x0
  413bb8:	str	x8, [sp, #48]
  413bbc:	mov	x3, sp
  413bc0:	orr	w8, w9, #0x4000000
  413bc4:	mov	w0, wzr
  413bc8:	stp	x29, x30, [sp, #64]
  413bcc:	add	x29, sp, #0x40
  413bd0:	str	q2, [sp, #32]
  413bd4:	str	w8, [sp, #12]
  413bd8:	bl	4137c4 <ferror@plt+0x10bc4>
  413bdc:	ldp	x29, x30, [sp, #64]
  413be0:	add	sp, sp, #0x50
  413be4:	ret
  413be8:	sub	sp, sp, #0x80
  413bec:	movi	v0.2d, #0x0
  413bf0:	cmp	w1, #0xa
  413bf4:	stp	x29, x30, [sp, #112]
  413bf8:	add	x29, sp, #0x70
  413bfc:	str	wzr, [sp, #48]
  413c00:	stp	q0, q0, [sp, #16]
  413c04:	str	q0, [sp]
  413c08:	b.eq	413c58 <ferror@plt+0x11058>  // b.none
  413c0c:	ldp	q0, q1, [sp]
  413c10:	ldr	w9, [sp, #48]
  413c14:	ldr	q2, [sp, #32]
  413c18:	mov	x8, x2
  413c1c:	stur	q0, [sp, #60]
  413c20:	ldr	w10, [sp, #68]
  413c24:	str	w1, [sp, #56]
  413c28:	str	w9, [sp, #108]
  413c2c:	add	x3, sp, #0x38
  413c30:	orr	w9, w10, #0x4000000
  413c34:	mov	x2, #0xffffffffffffffff    	// #-1
  413c38:	mov	x1, x8
  413c3c:	stur	q1, [sp, #76]
  413c40:	stur	q2, [sp, #92]
  413c44:	str	w9, [sp, #68]
  413c48:	bl	4137c4 <ferror@plt+0x10bc4>
  413c4c:	ldp	x29, x30, [sp, #112]
  413c50:	add	sp, sp, #0x80
  413c54:	ret
  413c58:	bl	402920 <abort@plt>
  413c5c:	mov	x4, #0xffffffffffffffff    	// #-1
  413c60:	b	413c64 <ferror@plt+0x11064>
  413c64:	sub	sp, sp, #0x50
  413c68:	adrp	x9, 436000 <__progname@@GLIBC_2.17+0xab98>
  413c6c:	add	x9, x9, #0xb68
  413c70:	ldp	q0, q1, [x9]
  413c74:	ldr	x10, [x9, #48]
  413c78:	stp	x29, x30, [sp, #64]
  413c7c:	add	x29, sp, #0x40
  413c80:	stp	q0, q1, [sp]
  413c84:	ldr	q0, [x9, #32]
  413c88:	mov	w9, #0xa                   	// #10
  413c8c:	str	x10, [sp, #48]
  413c90:	str	w9, [sp]
  413c94:	str	q0, [sp, #32]
  413c98:	cbz	x1, 413cc4 <ferror@plt+0x110c4>
  413c9c:	cbz	x2, 413cc4 <ferror@plt+0x110c4>
  413ca0:	mov	x8, x3
  413ca4:	stp	x1, x2, [sp, #40]
  413ca8:	mov	x3, sp
  413cac:	mov	x1, x8
  413cb0:	mov	x2, x4
  413cb4:	bl	4137c4 <ferror@plt+0x10bc4>
  413cb8:	ldp	x29, x30, [sp, #64]
  413cbc:	add	sp, sp, #0x50
  413cc0:	ret
  413cc4:	bl	402920 <abort@plt>
  413cc8:	mov	x3, x2
  413ccc:	mov	x2, x1
  413cd0:	mov	x4, #0xffffffffffffffff    	// #-1
  413cd4:	mov	x1, x0
  413cd8:	mov	w0, wzr
  413cdc:	b	413c64 <ferror@plt+0x11064>
  413ce0:	mov	x4, x3
  413ce4:	mov	x3, x2
  413ce8:	mov	x2, x1
  413cec:	mov	x1, x0
  413cf0:	mov	w0, wzr
  413cf4:	b	413c64 <ferror@plt+0x11064>
  413cf8:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x1540c>
  413cfc:	add	x3, x3, #0x3d8
  413d00:	b	4137c4 <ferror@plt+0x10bc4>
  413d04:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x1540c>
  413d08:	mov	x2, x1
  413d0c:	add	x3, x3, #0x3d8
  413d10:	mov	x1, x0
  413d14:	mov	w0, wzr
  413d18:	b	4137c4 <ferror@plt+0x10bc4>
  413d1c:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x1540c>
  413d20:	add	x3, x3, #0x3d8
  413d24:	mov	x2, #0xffffffffffffffff    	// #-1
  413d28:	b	4137c4 <ferror@plt+0x10bc4>
  413d2c:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x1540c>
  413d30:	add	x3, x3, #0x3d8
  413d34:	mov	x2, #0xffffffffffffffff    	// #-1
  413d38:	mov	x1, x0
  413d3c:	mov	w0, wzr
  413d40:	b	4137c4 <ferror@plt+0x10bc4>
  413d44:	stp	x29, x30, [sp, #-32]!
  413d48:	stp	x20, x19, [sp, #16]
  413d4c:	mov	x29, sp
  413d50:	mov	w19, w1
  413d54:	mov	x20, x0
  413d58:	bl	415d34 <_obstack_memory_used@@Base+0x140>
  413d5c:	ldrb	w8, [x0]
  413d60:	and	w8, w8, #0xffffffdf
  413d64:	cmp	w8, #0x47
  413d68:	b.eq	413dcc <ferror@plt+0x111cc>  // b.none
  413d6c:	cmp	w8, #0x55
  413d70:	b.ne	413e20 <ferror@plt+0x11220>  // b.any
  413d74:	ldrb	w8, [x0, #1]
  413d78:	and	w8, w8, #0xffffffdf
  413d7c:	cmp	w8, #0x54
  413d80:	b.ne	413e20 <ferror@plt+0x11220>  // b.any
  413d84:	ldrb	w8, [x0, #2]
  413d88:	and	w8, w8, #0xffffffdf
  413d8c:	cmp	w8, #0x46
  413d90:	b.ne	413e20 <ferror@plt+0x11220>  // b.any
  413d94:	ldrb	w8, [x0, #3]
  413d98:	cmp	w8, #0x2d
  413d9c:	b.ne	413e20 <ferror@plt+0x11220>  // b.any
  413da0:	ldrb	w8, [x0, #4]
  413da4:	cmp	w8, #0x38
  413da8:	b.ne	413e20 <ferror@plt+0x11220>  // b.any
  413dac:	ldrb	w8, [x0, #5]
  413db0:	cbnz	w8, 413e20 <ferror@plt+0x11220>
  413db4:	ldrb	w8, [x20]
  413db8:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x340c>
  413dbc:	adrp	x10, 419000 <_obstack_memory_used@@Base+0x340c>
  413dc0:	add	x9, x9, #0x988
  413dc4:	add	x10, x10, #0x984
  413dc8:	b	413e58 <ferror@plt+0x11258>
  413dcc:	ldrb	w8, [x0, #1]
  413dd0:	and	w8, w8, #0xffffffdf
  413dd4:	cmp	w8, #0x42
  413dd8:	b.ne	413e20 <ferror@plt+0x11220>  // b.any
  413ddc:	ldrb	w8, [x0, #2]
  413de0:	cmp	w8, #0x31
  413de4:	b.ne	413e20 <ferror@plt+0x11220>  // b.any
  413de8:	ldrb	w8, [x0, #3]
  413dec:	cmp	w8, #0x38
  413df0:	b.ne	413e20 <ferror@plt+0x11220>  // b.any
  413df4:	ldrb	w8, [x0, #4]
  413df8:	cmp	w8, #0x30
  413dfc:	b.ne	413e20 <ferror@plt+0x11220>  // b.any
  413e00:	ldrb	w8, [x0, #5]
  413e04:	cmp	w8, #0x33
  413e08:	b.ne	413e20 <ferror@plt+0x11220>  // b.any
  413e0c:	ldrb	w8, [x0, #6]
  413e10:	cmp	w8, #0x30
  413e14:	b.ne	413e20 <ferror@plt+0x11220>  // b.any
  413e18:	ldrb	w8, [x0, #7]
  413e1c:	cbz	w8, 413e44 <ferror@plt+0x11244>
  413e20:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x140c>
  413e24:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x240c>
  413e28:	add	x8, x8, #0xfe2
  413e2c:	add	x9, x9, #0xf22
  413e30:	cmp	w19, #0x9
  413e34:	csel	x0, x9, x8, eq  // eq = none
  413e38:	ldp	x20, x19, [sp, #16]
  413e3c:	ldp	x29, x30, [sp], #32
  413e40:	ret
  413e44:	ldrb	w8, [x20]
  413e48:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x340c>
  413e4c:	adrp	x10, 419000 <_obstack_memory_used@@Base+0x340c>
  413e50:	add	x9, x9, #0x990
  413e54:	add	x10, x10, #0x98c
  413e58:	cmp	w8, #0x60
  413e5c:	csel	x0, x10, x9, eq  // eq = none
  413e60:	b	413e38 <ferror@plt+0x11238>
  413e64:	sub	sp, sp, #0x30
  413e68:	str	x6, [sp, #16]
  413e6c:	and	w8, w5, #0x1
  413e70:	and	w9, w4, #0x1
  413e74:	and	w7, w3, #0x1
  413e78:	mov	w3, #0x1                   	// #1
  413e7c:	mov	w4, #0x1                   	// #1
  413e80:	mov	x5, xzr
  413e84:	mov	x6, xzr
  413e88:	stp	x29, x30, [sp, #32]
  413e8c:	add	x29, sp, #0x20
  413e90:	strb	w8, [sp, #8]
  413e94:	strb	w9, [sp]
  413e98:	bl	413ea8 <ferror@plt+0x112a8>
  413e9c:	ldp	x29, x30, [sp, #32]
  413ea0:	add	sp, sp, #0x30
  413ea4:	ret
  413ea8:	stp	x29, x30, [sp, #-96]!
  413eac:	stp	x28, x27, [sp, #16]
  413eb0:	stp	x26, x25, [sp, #32]
  413eb4:	stp	x24, x23, [sp, #48]
  413eb8:	stp	x22, x21, [sp, #64]
  413ebc:	stp	x20, x19, [sp, #80]
  413ec0:	mov	x29, sp
  413ec4:	sub	sp, sp, #0x240
  413ec8:	mov	w22, w7
  413ecc:	mov	x25, x6
  413ed0:	mov	x26, x5
  413ed4:	mov	w20, w4
  413ed8:	mov	w19, w3
  413edc:	mov	x23, x2
  413ee0:	mov	x24, x1
  413ee4:	mov	x21, x0
  413ee8:	tbz	w4, #0, 413f10 <ferror@plt+0x11310>
  413eec:	sub	x0, x29, #0x10
  413ef0:	bl	414534 <ferror@plt+0x11934>
  413ef4:	tbz	w0, #31, 413f10 <ferror@plt+0x11310>
  413ef8:	bl	402b80 <__errno_location@plt>
  413efc:	ldr	w1, [x0]
  413f00:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  413f04:	add	x2, x2, #0x993
  413f08:	mov	w0, #0x1                   	// #1
  413f0c:	bl	4025d0 <error@plt>
  413f10:	ldrb	w28, [x29, #96]
  413f14:	tbz	w19, #0, 413f24 <ferror@plt+0x11324>
  413f18:	sub	x0, x29, #0x18
  413f1c:	bl	414534 <ferror@plt+0x11934>
  413f20:	tbnz	w0, #31, 414104 <ferror@plt+0x11504>
  413f24:	tbz	w28, #0, 413f3c <ferror@plt+0x1133c>
  413f28:	sub	x2, x29, #0x98
  413f2c:	mov	w0, #0x2                   	// #2
  413f30:	mov	x1, xzr
  413f34:	bl	4025e0 <sigprocmask@plt>
  413f38:	bl	410f5c <ferror@plt+0xe35c>
  413f3c:	sub	x0, x29, #0xe8
  413f40:	bl	402960 <posix_spawn_file_actions_init@plt>
  413f44:	mov	w27, w0
  413f48:	cbnz	w0, 414078 <ferror@plt+0x11478>
  413f4c:	tbz	w19, #0, 413f68 <ferror@plt+0x11368>
  413f50:	ldur	w1, [x29, #-24]
  413f54:	sub	x0, x29, #0xe8
  413f58:	mov	w2, wzr
  413f5c:	bl	4026e0 <posix_spawn_file_actions_adddup2@plt>
  413f60:	mov	w27, w0
  413f64:	cbnz	w0, 414070 <ferror@plt+0x11470>
  413f68:	tbz	w20, #0, 413f84 <ferror@plt+0x11384>
  413f6c:	ldur	w1, [x29, #-12]
  413f70:	sub	x0, x29, #0xe8
  413f74:	mov	w2, #0x1                   	// #1
  413f78:	bl	4026e0 <posix_spawn_file_actions_adddup2@plt>
  413f7c:	mov	w27, w0
  413f80:	cbnz	w0, 414070 <ferror@plt+0x11470>
  413f84:	tbz	w19, #0, 413f9c <ferror@plt+0x1139c>
  413f88:	ldur	w1, [x29, #-24]
  413f8c:	sub	x0, x29, #0xe8
  413f90:	bl	402890 <posix_spawn_file_actions_addclose@plt>
  413f94:	mov	w27, w0
  413f98:	cbnz	w0, 414070 <ferror@plt+0x11470>
  413f9c:	tbz	w20, #0, 413fb4 <ferror@plt+0x113b4>
  413fa0:	ldur	w1, [x29, #-12]
  413fa4:	sub	x0, x29, #0xe8
  413fa8:	bl	402890 <posix_spawn_file_actions_addclose@plt>
  413fac:	mov	w27, w0
  413fb0:	cbnz	w0, 414070 <ferror@plt+0x11470>
  413fb4:	tbz	w19, #0, 413fcc <ferror@plt+0x113cc>
  413fb8:	ldur	w1, [x29, #-20]
  413fbc:	sub	x0, x29, #0xe8
  413fc0:	bl	402890 <posix_spawn_file_actions_addclose@plt>
  413fc4:	mov	w27, w0
  413fc8:	cbnz	w0, 414070 <ferror@plt+0x11470>
  413fcc:	tbz	w20, #0, 413fe4 <ferror@plt+0x113e4>
  413fd0:	ldur	w1, [x29, #-16]
  413fd4:	sub	x0, x29, #0xe8
  413fd8:	bl	402890 <posix_spawn_file_actions_addclose@plt>
  413fdc:	mov	w27, w0
  413fe0:	cbnz	w0, 414070 <ferror@plt+0x11470>
  413fe4:	tbz	w22, #0, 41400c <ferror@plt+0x1140c>
  413fe8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  413fec:	add	x2, x2, #0xf8f
  413ff0:	sub	x0, x29, #0xe8
  413ff4:	mov	w1, #0x2                   	// #2
  413ff8:	mov	w3, #0x2                   	// #2
  413ffc:	mov	w4, wzr
  414000:	bl	402690 <posix_spawn_file_actions_addopen@plt>
  414004:	mov	w27, w0
  414008:	cbnz	w0, 414070 <ferror@plt+0x11470>
  41400c:	cbz	x26, 414034 <ferror@plt+0x11434>
  414010:	tbnz	w19, #0, 414034 <ferror@plt+0x11434>
  414014:	sub	x0, x29, #0xe8
  414018:	mov	w1, wzr
  41401c:	mov	x2, x26
  414020:	mov	w3, wzr
  414024:	mov	w4, wzr
  414028:	bl	402690 <posix_spawn_file_actions_addopen@plt>
  41402c:	mov	w27, w0
  414030:	cbnz	w0, 414070 <ferror@plt+0x11470>
  414034:	cbz	x25, 41405c <ferror@plt+0x1145c>
  414038:	tbnz	w20, #0, 41405c <ferror@plt+0x1145c>
  41403c:	sub	x0, x29, #0xe8
  414040:	mov	w1, #0x1                   	// #1
  414044:	mov	w3, #0x1                   	// #1
  414048:	mov	x2, x25
  41404c:	mov	w4, wzr
  414050:	bl	402690 <posix_spawn_file_actions_addopen@plt>
  414054:	mov	w27, w0
  414058:	cbnz	w0, 414070 <ferror@plt+0x11470>
  41405c:	tbz	w28, #0, 414124 <ferror@plt+0x11524>
  414060:	add	x0, sp, #0x8
  414064:	bl	402ab0 <posix_spawnattr_init@plt>
  414068:	mov	w27, w0
  41406c:	cbz	w0, 4141a0 <ferror@plt+0x115a0>
  414070:	sub	x0, x29, #0xe8
  414074:	bl	402850 <posix_spawn_file_actions_destroy@plt>
  414078:	tbz	w28, #0, 414080 <ferror@plt+0x11480>
  41407c:	bl	410ff0 <ferror@plt+0xe3f0>
  414080:	ldrb	w8, [x29, #104]
  414084:	tbz	w22, #0, 4140d0 <ferror@plt+0x114d0>
  414088:	tbnz	w8, #0, 4140d0 <ferror@plt+0x114d0>
  41408c:	tbnz	w20, #0, 4140ec <ferror@plt+0x114ec>
  414090:	tbz	w19, #0, 4140a4 <ferror@plt+0x114a4>
  414094:	ldur	w0, [x29, #-24]
  414098:	bl	4142dc <ferror@plt+0x116dc>
  41409c:	ldur	w0, [x29, #-20]
  4140a0:	bl	4142dc <ferror@plt+0x116dc>
  4140a4:	bl	402b80 <__errno_location@plt>
  4140a8:	str	w27, [x0]
  4140ac:	mov	w0, #0xffffffff            	// #-1
  4140b0:	add	sp, sp, #0x240
  4140b4:	ldp	x20, x19, [sp, #80]
  4140b8:	ldp	x22, x21, [sp, #64]
  4140bc:	ldp	x24, x23, [sp, #48]
  4140c0:	ldp	x26, x25, [sp, #32]
  4140c4:	ldp	x28, x27, [sp, #16]
  4140c8:	ldp	x29, x30, [sp], #96
  4140cc:	ret
  4140d0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  4140d4:	and	w0, w8, #0x1
  4140d8:	add	x2, x2, #0xf99
  4140dc:	mov	w1, w27
  4140e0:	mov	x3, x21
  4140e4:	bl	4025d0 <error@plt>
  4140e8:	tbz	w20, #0, 414090 <ferror@plt+0x11490>
  4140ec:	ldur	w0, [x29, #-16]
  4140f0:	bl	4142dc <ferror@plt+0x116dc>
  4140f4:	ldur	w0, [x29, #-12]
  4140f8:	bl	4142dc <ferror@plt+0x116dc>
  4140fc:	tbnz	w19, #0, 414094 <ferror@plt+0x11494>
  414100:	b	4140a4 <ferror@plt+0x114a4>
  414104:	bl	402b80 <__errno_location@plt>
  414108:	ldr	w1, [x0]
  41410c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  414110:	add	x2, x2, #0x993
  414114:	mov	w0, #0x1                   	// #1
  414118:	bl	4025d0 <error@plt>
  41411c:	tbnz	w28, #0, 413f28 <ferror@plt+0x11328>
  414120:	b	413f3c <ferror@plt+0x1133c>
  414124:	mov	w26, wzr
  414128:	mov	x25, xzr
  41412c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  414130:	ldr	x5, [x8, #1120]
  414134:	add	x0, sp, #0x4
  414138:	sub	x2, x29, #0xe8
  41413c:	mov	x1, x24
  414140:	mov	x3, x25
  414144:	mov	x4, x23
  414148:	bl	402a20 <posix_spawnp@plt>
  41414c:	mov	w27, w0
  414150:	sub	x0, x29, #0xe8
  414154:	bl	402850 <posix_spawn_file_actions_destroy@plt>
  414158:	cbz	w27, 414164 <ferror@plt+0x11564>
  41415c:	cbz	w26, 414078 <ferror@plt+0x11478>
  414160:	b	4141d4 <ferror@plt+0x115d4>
  414164:	cbz	w26, 414170 <ferror@plt+0x11570>
  414168:	add	x0, sp, #0x8
  41416c:	bl	402790 <posix_spawnattr_destroy@plt>
  414170:	tbz	w28, #0, 414180 <ferror@plt+0x11580>
  414174:	ldr	w0, [sp, #4]
  414178:	bl	414a4c <ferror@plt+0x11e4c>
  41417c:	bl	410ff0 <ferror@plt+0xe3f0>
  414180:	ldr	x21, [x29, #112]
  414184:	tbnz	w19, #0, 4141e0 <ferror@plt+0x115e0>
  414188:	tbnz	w20, #0, 4141ec <ferror@plt+0x115ec>
  41418c:	tbz	w19, #0, 414198 <ferror@plt+0x11598>
  414190:	ldur	w8, [x29, #-20]
  414194:	str	w8, [x21, #4]
  414198:	ldr	w0, [sp, #4]
  41419c:	b	4140b0 <ferror@plt+0x114b0>
  4141a0:	add	x0, sp, #0x8
  4141a4:	sub	x1, x29, #0x98
  4141a8:	bl	402950 <posix_spawnattr_setsigmask@plt>
  4141ac:	mov	w27, w0
  4141b0:	cbnz	w0, 4141cc <ferror@plt+0x115cc>
  4141b4:	add	x0, sp, #0x8
  4141b8:	mov	w1, #0x8                   	// #8
  4141bc:	add	x25, sp, #0x8
  4141c0:	bl	402910 <posix_spawnattr_setflags@plt>
  4141c4:	mov	w27, w0
  4141c8:	cbz	w0, 414204 <ferror@plt+0x11604>
  4141cc:	sub	x0, x29, #0xe8
  4141d0:	bl	402850 <posix_spawn_file_actions_destroy@plt>
  4141d4:	add	x0, sp, #0x8
  4141d8:	bl	402790 <posix_spawnattr_destroy@plt>
  4141dc:	b	414078 <ferror@plt+0x11478>
  4141e0:	ldur	w0, [x29, #-24]
  4141e4:	bl	4142dc <ferror@plt+0x116dc>
  4141e8:	tbz	w20, #0, 41418c <ferror@plt+0x1158c>
  4141ec:	ldur	w0, [x29, #-12]
  4141f0:	bl	4142dc <ferror@plt+0x116dc>
  4141f4:	ldur	w8, [x29, #-16]
  4141f8:	str	w8, [x21]
  4141fc:	tbnz	w19, #0, 414190 <ferror@plt+0x11590>
  414200:	b	414198 <ferror@plt+0x11598>
  414204:	mov	w26, #0x1                   	// #1
  414208:	b	41412c <ferror@plt+0x1152c>
  41420c:	sub	sp, sp, #0x40
  414210:	stp	x29, x30, [sp, #32]
  414214:	add	x29, sp, #0x20
  414218:	mov	x8, x3
  41421c:	str	x19, [sp, #48]
  414220:	mov	x19, x7
  414224:	add	x9, x29, #0x18
  414228:	and	w10, w6, #0x1
  41422c:	and	w11, w5, #0x1
  414230:	and	w7, w4, #0x1
  414234:	mov	w4, #0x1                   	// #1
  414238:	mov	w3, wzr
  41423c:	mov	x5, x8
  414240:	mov	x6, xzr
  414244:	str	x9, [sp, #16]
  414248:	strb	w10, [sp, #8]
  41424c:	strb	w11, [sp]
  414250:	bl	413ea8 <ferror@plt+0x112a8>
  414254:	cmn	w0, #0x1
  414258:	b.eq	414264 <ferror@plt+0x11664>  // b.none
  41425c:	ldr	w8, [x29, #24]
  414260:	str	w8, [x19]
  414264:	ldr	x19, [sp, #48]
  414268:	ldp	x29, x30, [sp, #32]
  41426c:	add	sp, sp, #0x40
  414270:	ret
  414274:	sub	sp, sp, #0x40
  414278:	stp	x29, x30, [sp, #32]
  41427c:	add	x29, sp, #0x20
  414280:	mov	x8, x3
  414284:	str	x19, [sp, #48]
  414288:	mov	x19, x7
  41428c:	add	x9, x29, #0x18
  414290:	and	w10, w6, #0x1
  414294:	and	w11, w5, #0x1
  414298:	and	w7, w4, #0x1
  41429c:	mov	w3, #0x1                   	// #1
  4142a0:	mov	w4, wzr
  4142a4:	mov	x5, xzr
  4142a8:	mov	x6, x8
  4142ac:	str	x9, [sp, #16]
  4142b0:	strb	w10, [sp, #8]
  4142b4:	strb	w11, [sp]
  4142b8:	bl	413ea8 <ferror@plt+0x112a8>
  4142bc:	cmn	w0, #0x1
  4142c0:	b.eq	4142cc <ferror@plt+0x116cc>  // b.none
  4142c4:	ldr	w8, [x29, #28]
  4142c8:	str	w8, [x19]
  4142cc:	ldr	x19, [sp, #48]
  4142d0:	ldp	x29, x30, [sp, #32]
  4142d4:	add	sp, sp, #0x40
  4142d8:	ret
  4142dc:	stp	x29, x30, [sp, #-32]!
  4142e0:	str	x19, [sp, #16]
  4142e4:	mov	w19, w0
  4142e8:	mov	x29, sp
  4142ec:	mov	w0, w19
  4142f0:	bl	4028b0 <close@plt>
  4142f4:	tbz	w0, #31, 414308 <ferror@plt+0x11708>
  4142f8:	bl	402b80 <__errno_location@plt>
  4142fc:	ldr	w8, [x0]
  414300:	cmp	w8, #0x4
  414304:	b.eq	4142ec <ferror@plt+0x116ec>  // b.none
  414308:	ldr	x19, [sp, #16]
  41430c:	ldp	x29, x30, [sp], #32
  414310:	ret
  414314:	stp	x29, x30, [sp, #-16]!
  414318:	mov	x29, sp
  41431c:	bl	402ad0 <mkstemp@plt>
  414320:	ldp	x29, x30, [sp], #16
  414324:	b	4144d8 <ferror@plt+0x118d8>
  414328:	sub	sp, sp, #0xd0
  41432c:	stp	x24, x23, [sp, #160]
  414330:	stp	x22, x21, [sp, #176]
  414334:	stp	x20, x19, [sp, #192]
  414338:	mov	w24, w4
  41433c:	mov	x23, x2
  414340:	mov	x22, x1
  414344:	mov	x20, x0
  414348:	stp	x29, x30, [sp, #128]
  41434c:	str	x25, [sp, #144]
  414350:	add	x29, sp, #0x80
  414354:	cbz	x3, 414388 <ferror@plt+0x11788>
  414358:	ldrb	w8, [x3]
  41435c:	mov	x19, x3
  414360:	cbz	w8, 414388 <ferror@plt+0x11788>
  414364:	mov	x0, x19
  414368:	bl	402580 <strlen@plt>
  41436c:	cmp	x0, #0x5
  414370:	mov	w8, #0x5                   	// #5
  414374:	csel	x21, x0, x8, cc  // cc = lo, ul, last
  414378:	tbnz	w24, #0, 414398 <ferror@plt+0x11798>
  41437c:	mov	x24, x23
  414380:	cbnz	x23, 414418 <ferror@plt+0x11818>
  414384:	b	4143f0 <ferror@plt+0x117f0>
  414388:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x240c>
  41438c:	add	x19, x19, #0xbf4
  414390:	mov	w21, #0x4                   	// #4
  414394:	tbz	w24, #0, 41437c <ferror@plt+0x1177c>
  414398:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x240c>
  41439c:	add	x0, x0, #0xee5
  4143a0:	bl	402600 <secure_getenv@plt>
  4143a4:	cbz	x0, 4143c8 <ferror@plt+0x117c8>
  4143a8:	mov	x1, sp
  4143ac:	mov	x24, x0
  4143b0:	bl	4164d0 <_obstack_memory_used@@Base+0x8dc>
  4143b4:	cbnz	w0, 4143c8 <ferror@plt+0x117c8>
  4143b8:	ldr	w8, [sp, #16]
  4143bc:	and	w8, w8, #0xf000
  4143c0:	cmp	w8, #0x4, lsl #12
  4143c4:	b.eq	414418 <ferror@plt+0x11818>  // b.none
  4143c8:	cbz	x23, 4143f0 <ferror@plt+0x117f0>
  4143cc:	mov	x1, sp
  4143d0:	mov	x0, x23
  4143d4:	bl	4164d0 <_obstack_memory_used@@Base+0x8dc>
  4143d8:	cbnz	w0, 4143f0 <ferror@plt+0x117f0>
  4143dc:	ldr	w8, [sp, #16]
  4143e0:	mov	x24, x23
  4143e4:	and	w8, w8, #0xf000
  4143e8:	cmp	w8, #0x4, lsl #12
  4143ec:	b.eq	414418 <ferror@plt+0x11818>  // b.none
  4143f0:	adrp	x24, 419000 <_obstack_memory_used@@Base+0x340c>
  4143f4:	add	x24, x24, #0x9a6
  4143f8:	mov	x1, sp
  4143fc:	mov	x0, x24
  414400:	bl	4164d0 <_obstack_memory_used@@Base+0x8dc>
  414404:	cbnz	w0, 4144a0 <ferror@plt+0x118a0>
  414408:	ldr	w8, [sp, #16]
  41440c:	and	w8, w8, #0xf000
  414410:	cmp	w8, #0x4, lsl #12
  414414:	b.ne	4144a0 <ferror@plt+0x118a0>  // b.any
  414418:	mov	x0, x24
  41441c:	bl	402580 <strlen@plt>
  414420:	mov	x23, x0
  414424:	cbz	x0, 41443c <ferror@plt+0x1183c>
  414428:	add	x8, x23, x24
  41442c:	ldurb	w8, [x8, #-1]
  414430:	cmp	w8, #0x2f
  414434:	cset	w25, ne  // ne = any
  414438:	b	414440 <ferror@plt+0x11840>
  41443c:	mov	w25, wzr
  414440:	add	x8, x21, x23
  414444:	add	x8, x8, x25
  414448:	add	x8, x8, #0x7
  41444c:	cmp	x8, x22
  414450:	b.ls	414460 <ferror@plt+0x11860>  // b.plast
  414454:	bl	402b80 <__errno_location@plt>
  414458:	mov	w8, #0x16                  	// #22
  41445c:	b	4144a8 <ferror@plt+0x118a8>
  414460:	mov	x0, x20
  414464:	mov	x1, x24
  414468:	mov	x2, x23
  41446c:	bl	402550 <memcpy@plt>
  414470:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x340c>
  414474:	eor	w8, w25, #0x1
  414478:	add	x9, x9, #0x9ab
  41447c:	add	x0, x20, x23
  414480:	add	x3, x9, x8
  414484:	mov	w1, #0x1                   	// #1
  414488:	mov	x2, #0xffffffffffffffff    	// #-1
  41448c:	mov	w4, w21
  414490:	mov	x5, x19
  414494:	bl	4025a0 <__sprintf_chk@plt>
  414498:	mov	w0, wzr
  41449c:	b	4144b0 <ferror@plt+0x118b0>
  4144a0:	bl	402b80 <__errno_location@plt>
  4144a4:	mov	w8, #0x2                   	// #2
  4144a8:	str	w8, [x0]
  4144ac:	mov	w0, #0xffffffff            	// #-1
  4144b0:	ldp	x20, x19, [sp, #192]
  4144b4:	ldp	x22, x21, [sp, #176]
  4144b8:	ldp	x24, x23, [sp, #160]
  4144bc:	ldr	x25, [sp, #144]
  4144c0:	ldp	x29, x30, [sp, #128]
  4144c4:	add	sp, sp, #0xd0
  4144c8:	ret
  4144cc:	mov	w2, #0x3                   	// #3
  4144d0:	mov	w1, wzr
  4144d4:	b	415584 <ferror@plt+0x12984>
  4144d8:	stp	x29, x30, [sp, #-48]!
  4144dc:	stp	x20, x19, [sp, #32]
  4144e0:	mov	w19, w0
  4144e4:	cmp	w0, #0x2
  4144e8:	stp	x22, x21, [sp, #16]
  4144ec:	mov	x29, sp
  4144f0:	b.hi	414520 <ferror@plt+0x11920>  // b.pmore
  4144f4:	mov	w0, w19
  4144f8:	bl	4144cc <ferror@plt+0x118cc>
  4144fc:	mov	w20, w0
  414500:	bl	402b80 <__errno_location@plt>
  414504:	ldr	w22, [x0]
  414508:	mov	x21, x0
  41450c:	mov	w0, w19
  414510:	bl	4028b0 <close@plt>
  414514:	str	w22, [x21]
  414518:	mov	w0, w20
  41451c:	b	414524 <ferror@plt+0x11924>
  414520:	mov	w0, w19
  414524:	ldp	x20, x19, [sp, #32]
  414528:	ldp	x22, x21, [sp, #16]
  41452c:	ldp	x29, x30, [sp], #48
  414530:	ret
  414534:	stp	x29, x30, [sp, #-48]!
  414538:	stp	x22, x21, [sp, #16]
  41453c:	stp	x20, x19, [sp, #32]
  414540:	mov	x29, sp
  414544:	mov	x19, x0
  414548:	bl	402650 <pipe@plt>
  41454c:	cbnz	w0, 41459c <ferror@plt+0x1199c>
  414550:	mov	x8, xzr
  414554:	ldr	w0, [x19, x8, lsl #2]
  414558:	mov	x21, x8
  41455c:	bl	4144d8 <ferror@plt+0x118d8>
  414560:	str	w0, [x19, x21, lsl #2]
  414564:	tbnz	w0, #31, 414578 <ferror@plt+0x11978>
  414568:	mov	w8, #0x1                   	// #1
  41456c:	cbz	x21, 414554 <ferror@plt+0x11954>
  414570:	mov	w0, wzr
  414574:	b	4145a0 <ferror@plt+0x119a0>
  414578:	bl	402b80 <__errno_location@plt>
  41457c:	mov	x8, #0x100000000           	// #4294967296
  414580:	sub	x8, x8, x21, lsl #32
  414584:	lsr	x8, x8, #30
  414588:	mov	x20, x0
  41458c:	ldr	w22, [x0]
  414590:	ldr	w0, [x19, x8]
  414594:	bl	4028b0 <close@plt>
  414598:	str	w22, [x20]
  41459c:	mov	w0, #0xffffffff            	// #-1
  4145a0:	ldp	x20, x19, [sp, #32]
  4145a4:	ldp	x22, x21, [sp, #16]
  4145a8:	ldp	x29, x30, [sp], #48
  4145ac:	ret
  4145b0:	sub	sp, sp, #0x30
  4145b4:	stp	x29, x30, [sp, #32]
  4145b8:	ldp	q1, q0, [x3]
  4145bc:	mov	x4, x2
  4145c0:	mov	x5, sp
  4145c4:	mov	x2, xzr
  4145c8:	mov	w3, wzr
  4145cc:	add	x29, sp, #0x20
  4145d0:	stp	q1, q0, [sp]
  4145d4:	bl	4145e4 <ferror@plt+0x119e4>
  4145d8:	ldp	x29, x30, [sp, #32]
  4145dc:	add	sp, sp, #0x30
  4145e0:	ret
  4145e4:	sub	sp, sp, #0x60
  4145e8:	stp	x29, x30, [sp, #32]
  4145ec:	str	x23, [sp, #48]
  4145f0:	stp	x22, x21, [sp, #64]
  4145f4:	stp	x20, x19, [sp, #80]
  4145f8:	ldp	q1, q0, [x5]
  4145fc:	mov	w20, w1
  414600:	mov	w23, w0
  414604:	mov	x1, sp
  414608:	mov	x0, x4
  41460c:	add	x29, sp, #0x20
  414610:	mov	w21, w3
  414614:	mov	x22, x2
  414618:	stp	q1, q0, [sp]
  41461c:	bl	4152c8 <ferror@plt+0x126c8>
  414620:	cbz	x0, 414688 <ferror@plt+0x11a88>
  414624:	mov	x19, x0
  414628:	cbz	x22, 414650 <ferror@plt+0x11a50>
  41462c:	adrp	x4, 418000 <_obstack_memory_used@@Base+0x240c>
  414630:	add	x4, x4, #0xf6
  414634:	mov	w0, w23
  414638:	mov	w1, w20
  41463c:	mov	x2, x22
  414640:	mov	w3, w21
  414644:	mov	x5, x19
  414648:	bl	402be0 <error_at_line@plt>
  41464c:	b	414668 <ferror@plt+0x11a68>
  414650:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  414654:	add	x2, x2, #0xf6
  414658:	mov	w0, w23
  41465c:	mov	w1, w20
  414660:	mov	x3, x19
  414664:	bl	4025d0 <error@plt>
  414668:	mov	x0, x19
  41466c:	bl	4029f0 <free@plt>
  414670:	ldp	x20, x19, [sp, #80]
  414674:	ldp	x22, x21, [sp, #64]
  414678:	ldr	x23, [sp, #48]
  41467c:	ldp	x29, x30, [sp, #32]
  414680:	add	sp, sp, #0x60
  414684:	ret
  414688:	bl	402b80 <__errno_location@plt>
  41468c:	ldr	w1, [x0]
  414690:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  414694:	add	x2, x2, #0x9b7
  414698:	mov	w0, wzr
  41469c:	bl	4025d0 <error@plt>
  4146a0:	bl	402920 <abort@plt>
  4146a4:	sub	sp, sp, #0x50
  4146a8:	str	x21, [sp, #48]
  4146ac:	stp	x20, x19, [sp, #64]
  4146b0:	mov	x21, x5
  4146b4:	mov	x20, x4
  4146b8:	mov	x5, x3
  4146bc:	mov	x4, x2
  4146c0:	mov	x19, x0
  4146c4:	stp	x29, x30, [sp, #32]
  4146c8:	add	x29, sp, #0x20
  4146cc:	cbz	x1, 4146ec <ferror@plt+0x11aec>
  4146d0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  4146d4:	mov	x3, x1
  4146d8:	add	x2, x2, #0x9e1
  4146dc:	mov	w1, #0x1                   	// #1
  4146e0:	mov	x0, x19
  4146e4:	bl	402980 <__fprintf_chk@plt>
  4146e8:	b	414708 <ferror@plt+0x11b08>
  4146ec:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  4146f0:	add	x2, x2, #0x9ed
  4146f4:	mov	w1, #0x1                   	// #1
  4146f8:	mov	x0, x19
  4146fc:	mov	x3, x4
  414700:	mov	x4, x5
  414704:	bl	402980 <__fprintf_chk@plt>
  414708:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  41470c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x340c>
  414710:	add	x2, x2, #0xcc7
  414714:	add	x3, x3, #0x9f4
  414718:	mov	w1, #0x1                   	// #1
  41471c:	mov	w4, #0x7e0                 	// #2016
  414720:	mov	x0, x19
  414724:	bl	402980 <__fprintf_chk@plt>
  414728:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x340c>
  41472c:	add	x0, x0, #0x9f8
  414730:	mov	x1, x19
  414734:	bl	402b10 <fputs_unlocked@plt>
  414738:	cmp	x21, #0x9
  41473c:	b.hi	414780 <ferror@plt+0x11b80>  // b.pmore
  414740:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x340c>
  414744:	add	x8, x8, #0x9d7
  414748:	adr	x9, 414758 <ferror@plt+0x11b58>
  41474c:	ldrb	w10, [x8, x21]
  414750:	add	x9, x9, x10, lsl #2
  414754:	br	x9
  414758:	ldr	x3, [x20]
  41475c:	mov	x0, x19
  414760:	ldp	x20, x19, [sp, #64]
  414764:	ldr	x21, [sp, #48]
  414768:	ldp	x29, x30, [sp, #32]
  41476c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  414770:	add	x2, x2, #0xac3
  414774:	mov	w1, #0x1                   	// #1
  414778:	add	sp, sp, #0x50
  41477c:	b	402980 <__fprintf_chk@plt>
  414780:	ldp	x8, x9, [x20, #56]
  414784:	ldp	x3, x4, [x20]
  414788:	ldp	x5, x6, [x20, #16]
  41478c:	ldr	x7, [x20, #32]
  414790:	ldur	q0, [x20, #40]
  414794:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  414798:	stp	x8, x9, [sp, #16]
  41479c:	add	x2, x2, #0xc02
  4147a0:	b	4148d8 <ferror@plt+0x11cd8>
  4147a4:	ldp	x3, x4, [x20]
  4147a8:	ldr	x5, [x20, #16]
  4147ac:	mov	x0, x19
  4147b0:	ldp	x20, x19, [sp, #64]
  4147b4:	ldr	x21, [sp, #48]
  4147b8:	ldp	x29, x30, [sp, #32]
  4147bc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  4147c0:	add	x2, x2, #0xaea
  4147c4:	mov	w1, #0x1                   	// #1
  4147c8:	add	sp, sp, #0x50
  4147cc:	b	402980 <__fprintf_chk@plt>
  4147d0:	ldp	x3, x4, [x20]
  4147d4:	mov	x0, x19
  4147d8:	ldp	x20, x19, [sp, #64]
  4147dc:	ldr	x21, [sp, #48]
  4147e0:	ldp	x29, x30, [sp, #32]
  4147e4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  4147e8:	add	x2, x2, #0xad3
  4147ec:	mov	w1, #0x1                   	// #1
  4147f0:	add	sp, sp, #0x50
  4147f4:	b	402980 <__fprintf_chk@plt>
  4147f8:	ldp	x3, x4, [x20]
  4147fc:	ldp	x5, x6, [x20, #16]
  414800:	ldr	x7, [x20, #32]
  414804:	ldur	q0, [x20, #40]
  414808:	ldr	x8, [x20, #56]
  41480c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  414810:	add	x2, x2, #0xb9e
  414814:	str	x8, [sp, #16]
  414818:	b	4148d8 <ferror@plt+0x11cd8>
  41481c:	ldp	x3, x4, [x20]
  414820:	ldp	x5, x6, [x20, #16]
  414824:	mov	x0, x19
  414828:	ldp	x20, x19, [sp, #64]
  41482c:	ldr	x21, [sp, #48]
  414830:	ldp	x29, x30, [sp, #32]
  414834:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  414838:	add	x2, x2, #0xb06
  41483c:	mov	w1, #0x1                   	// #1
  414840:	add	sp, sp, #0x50
  414844:	b	402980 <__fprintf_chk@plt>
  414848:	ldp	x3, x4, [x20]
  41484c:	ldp	x5, x6, [x20, #16]
  414850:	ldr	x7, [x20, #32]
  414854:	mov	x0, x19
  414858:	ldp	x20, x19, [sp, #64]
  41485c:	ldr	x21, [sp, #48]
  414860:	ldp	x29, x30, [sp, #32]
  414864:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  414868:	add	x2, x2, #0xb26
  41486c:	mov	w1, #0x1                   	// #1
  414870:	add	sp, sp, #0x50
  414874:	b	402980 <__fprintf_chk@plt>
  414878:	ldp	x3, x4, [x20]
  41487c:	ldp	x5, x6, [x20, #16]
  414880:	ldp	x7, x8, [x20, #32]
  414884:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  414888:	add	x2, x2, #0xb4a
  41488c:	b	4148ac <ferror@plt+0x11cac>
  414890:	ldr	x9, [x20, #48]
  414894:	ldp	x3, x4, [x20]
  414898:	ldp	x5, x6, [x20, #16]
  41489c:	ldp	x7, x8, [x20, #32]
  4148a0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  4148a4:	add	x2, x2, #0xb72
  4148a8:	str	x9, [sp, #8]
  4148ac:	mov	w1, #0x1                   	// #1
  4148b0:	str	x8, [sp]
  4148b4:	b	4148e0 <ferror@plt+0x11ce0>
  4148b8:	ldp	x8, x9, [x20, #56]
  4148bc:	ldp	x3, x4, [x20]
  4148c0:	ldp	x5, x6, [x20, #16]
  4148c4:	ldr	x7, [x20, #32]
  4148c8:	ldur	q0, [x20, #40]
  4148cc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  4148d0:	stp	x8, x9, [sp, #16]
  4148d4:	add	x2, x2, #0xbce
  4148d8:	mov	w1, #0x1                   	// #1
  4148dc:	str	q0, [sp]
  4148e0:	mov	x0, x19
  4148e4:	bl	402980 <__fprintf_chk@plt>
  4148e8:	ldp	x20, x19, [sp, #64]
  4148ec:	ldr	x21, [sp, #48]
  4148f0:	ldp	x29, x30, [sp, #32]
  4148f4:	add	sp, sp, #0x50
  4148f8:	ret
  4148fc:	bl	402920 <abort@plt>
  414900:	mov	x8, xzr
  414904:	ldr	x9, [x4, x8, lsl #3]
  414908:	add	x8, x8, #0x1
  41490c:	cbnz	x9, 414904 <ferror@plt+0x11d04>
  414910:	sub	x5, x8, #0x1
  414914:	b	4146a4 <ferror@plt+0x11aa4>
  414918:	sub	sp, sp, #0x60
  41491c:	stp	x29, x30, [sp, #80]
  414920:	ldr	w8, [x4, #24]
  414924:	mov	x5, xzr
  414928:	mov	x9, sp
  41492c:	add	x29, sp, #0x50
  414930:	tbz	w8, #31, 414958 <ferror@plt+0x11d58>
  414934:	add	w11, w8, #0x8
  414938:	cmn	w8, #0x8
  41493c:	str	w11, [x4, #24]
  414940:	b.gt	414954 <ferror@plt+0x11d54>
  414944:	ldr	x10, [x4, #8]
  414948:	add	x10, x10, w8, sxtw
  41494c:	mov	w8, w11
  414950:	b	414964 <ferror@plt+0x11d64>
  414954:	mov	w8, w11
  414958:	ldr	x10, [x4]
  41495c:	add	x11, x10, #0x8
  414960:	str	x11, [x4]
  414964:	ldr	x10, [x10]
  414968:	str	x10, [x9, x5, lsl #3]
  41496c:	cbz	x10, 41497c <ferror@plt+0x11d7c>
  414970:	add	x5, x5, #0x1
  414974:	cmp	x5, #0xa
  414978:	b.ne	414930 <ferror@plt+0x11d30>  // b.any
  41497c:	mov	x4, sp
  414980:	bl	4146a4 <ferror@plt+0x11aa4>
  414984:	ldp	x29, x30, [sp, #80]
  414988:	add	sp, sp, #0x60
  41498c:	ret
  414990:	sub	sp, sp, #0xf0
  414994:	stp	x29, x30, [sp, #224]
  414998:	add	x29, sp, #0xe0
  41499c:	mov	x8, #0xffffffffffffffe0    	// #-32
  4149a0:	mov	x9, sp
  4149a4:	sub	x10, x29, #0x60
  4149a8:	movk	x8, #0xff80, lsl #32
  4149ac:	add	x11, x29, #0x10
  4149b0:	add	x9, x9, #0x80
  4149b4:	add	x10, x10, #0x20
  4149b8:	stp	x9, x8, [x29, #-16]
  4149bc:	stp	x11, x10, [x29, #-32]
  4149c0:	stp	x4, x5, [x29, #-96]
  4149c4:	stp	x6, x7, [x29, #-80]
  4149c8:	stp	q0, q1, [sp]
  4149cc:	ldp	q0, q1, [x29, #-32]
  4149d0:	sub	x4, x29, #0x40
  4149d4:	stp	q2, q3, [sp, #32]
  4149d8:	stp	q4, q5, [sp, #64]
  4149dc:	stp	q6, q7, [sp, #96]
  4149e0:	stp	q0, q1, [x29, #-64]
  4149e4:	bl	414918 <ferror@plt+0x11d18>
  4149e8:	ldp	x29, x30, [sp, #224]
  4149ec:	add	sp, sp, #0xf0
  4149f0:	ret
  4149f4:	stp	x29, x30, [sp, #-16]!
  4149f8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x340c>
  4149fc:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x40c>
  414a00:	add	x1, x1, #0xc3e
  414a04:	add	x2, x2, #0x8d0
  414a08:	mov	w0, #0x1                   	// #1
  414a0c:	mov	x29, sp
  414a10:	bl	4027d0 <__printf_chk@plt>
  414a14:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x340c>
  414a18:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x40c>
  414a1c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x340c>
  414a20:	add	x1, x1, #0xc53
  414a24:	add	x2, x2, #0x9a0
  414a28:	add	x3, x3, #0xc67
  414a2c:	mov	w0, #0x1                   	// #1
  414a30:	bl	4027d0 <__printf_chk@plt>
  414a34:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  414a38:	ldr	x1, [x8, #1104]
  414a3c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x340c>
  414a40:	add	x0, x0, #0xc87
  414a44:	ldp	x29, x30, [sp], #16
  414a48:	b	402b10 <fputs_unlocked@plt>
  414a4c:	stp	x29, x30, [sp, #-80]!
  414a50:	stp	x22, x21, [sp, #48]
  414a54:	adrp	x21, 436000 <__progname@@GLIBC_2.17+0xab98>
  414a58:	ldrb	w8, [x21, #3232]
  414a5c:	stp	x20, x19, [sp, #64]
  414a60:	mov	w19, w0
  414a64:	stp	x26, x25, [sp, #16]
  414a68:	stp	x24, x23, [sp, #32]
  414a6c:	mov	x29, sp
  414a70:	tbnz	w8, #0, 414a94 <ferror@plt+0x11e94>
  414a74:	adrp	x20, 414000 <ferror@plt+0x11400>
  414a78:	add	x20, x20, #0xb84
  414a7c:	mov	x0, x20
  414a80:	bl	4164c0 <_obstack_memory_used@@Base+0x8cc>
  414a84:	mov	x0, x20
  414a88:	bl	410d60 <ferror@plt+0xe160>
  414a8c:	mov	w8, #0x1                   	// #1
  414a90:	strb	w8, [x21, #3232]
  414a94:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x1540c>
  414a98:	adrp	x22, 436000 <__progname@@GLIBC_2.17+0xab98>
  414a9c:	ldr	x8, [x23, #1040]
  414aa0:	ldrsw	x9, [x22, #3236]
  414aa4:	cmp	w9, #0x1
  414aa8:	b.lt	414ac4 <ferror@plt+0x11ec4>  // b.tstop
  414aac:	add	x9, x8, x9, lsl #3
  414ab0:	ldr	w10, [x8]
  414ab4:	cbz	w10, 414b50 <ferror@plt+0x11f50>
  414ab8:	add	x8, x8, #0x8
  414abc:	cmp	x8, x9
  414ac0:	b.cc	414ab0 <ferror@plt+0x11eb0>  // b.lo, b.ul, b.last
  414ac4:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x1540c>
  414ac8:	ldrsw	x25, [x22, #3236]
  414acc:	ldr	x8, [x24, #1048]
  414ad0:	cmp	x8, x25
  414ad4:	b.ne	414b1c <ferror@plt+0x11f1c>  // b.any
  414ad8:	ldr	x20, [x23, #1040]
  414adc:	lsl	x0, x25, #4
  414ae0:	bl	402740 <malloc@plt>
  414ae4:	cbz	x0, 414b74 <ferror@plt+0x11f74>
  414ae8:	lsl	x2, x25, #3
  414aec:	mov	x1, x20
  414af0:	mov	x21, x0
  414af4:	lsl	x26, x25, #1
  414af8:	bl	402550 <memcpy@plt>
  414afc:	adrp	x8, 436000 <__progname@@GLIBC_2.17+0xab98>
  414b00:	add	x8, x8, #0xca8
  414b04:	cmp	x20, x8
  414b08:	str	x21, [x23, #1040]
  414b0c:	str	x26, [x24, #1048]
  414b10:	b.eq	414b1c <ferror@plt+0x11f1c>  // b.none
  414b14:	mov	x0, x20
  414b18:	bl	4029f0 <free@plt>
  414b1c:	ldr	x8, [x23, #1040]
  414b20:	ldrsw	x9, [x22, #3236]
  414b24:	mov	w10, #0x1                   	// #1
  414b28:	add	x8, x8, x9, lsl #3
  414b2c:	str	w19, [x8, #4]
  414b30:	ldr	x8, [x23, #1040]
  414b34:	ldrsw	x9, [x22, #3236]
  414b38:	lsl	x9, x9, #3
  414b3c:	str	w10, [x8, x9]
  414b40:	ldr	w8, [x22, #3236]
  414b44:	add	w8, w8, #0x1
  414b48:	str	w8, [x22, #3236]
  414b4c:	b	414b5c <ferror@plt+0x11f5c>
  414b50:	mov	w9, #0x1                   	// #1
  414b54:	str	w19, [x8, #4]
  414b58:	str	w9, [x8]
  414b5c:	ldp	x20, x19, [sp, #64]
  414b60:	ldp	x22, x21, [sp, #48]
  414b64:	ldp	x24, x23, [sp, #32]
  414b68:	ldp	x26, x25, [sp, #16]
  414b6c:	ldp	x29, x30, [sp], #80
  414b70:	ret
  414b74:	mov	w1, #0x1                   	// #1
  414b78:	mov	w0, w19
  414b7c:	bl	4026a0 <kill@plt>
  414b80:	bl	4150b0 <ferror@plt+0x124b0>
  414b84:	stp	x29, x30, [sp, #-32]!
  414b88:	stp	x20, x19, [sp, #16]
  414b8c:	adrp	x19, 436000 <__progname@@GLIBC_2.17+0xab98>
  414b90:	ldr	w8, [x19, #3236]
  414b94:	mov	x29, sp
  414b98:	cbz	w8, 414bd8 <ferror@plt+0x11fd8>
  414b9c:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1540c>
  414ba0:	sxtw	x8, w8
  414ba4:	sub	x8, x8, #0x1
  414ba8:	str	w8, [x19, #3236]
  414bac:	ldr	x9, [x20, #1040]
  414bb0:	lsl	x10, x8, #3
  414bb4:	ldr	w9, [x9, x10]
  414bb8:	cbz	w9, 414bd0 <ferror@plt+0x11fd0>
  414bbc:	ldr	x9, [x20, #1040]
  414bc0:	mov	w1, #0x1                   	// #1
  414bc4:	add	x8, x9, x8, lsl #3
  414bc8:	ldr	w0, [x8, #4]
  414bcc:	bl	4026a0 <kill@plt>
  414bd0:	ldr	w8, [x19, #3236]
  414bd4:	cbnz	w8, 414ba0 <ferror@plt+0x11fa0>
  414bd8:	ldp	x20, x19, [sp, #16]
  414bdc:	ldp	x29, x30, [sp], #32
  414be0:	ret
  414be4:	stp	x29, x30, [sp, #-80]!
  414be8:	str	x25, [sp, #16]
  414bec:	stp	x24, x23, [sp, #32]
  414bf0:	stp	x22, x21, [sp, #48]
  414bf4:	stp	x20, x19, [sp, #64]
  414bf8:	mov	x22, x6
  414bfc:	mov	w20, w5
  414c00:	mov	w25, w4
  414c04:	mov	w21, w3
  414c08:	mov	w23, w2
  414c0c:	mov	x19, x1
  414c10:	mov	w24, w0
  414c14:	mov	x29, sp
  414c18:	cbz	x6, 414c20 <ferror@plt+0x12020>
  414c1c:	str	wzr, [x22]
  414c20:	str	wzr, [x29, #28]
  414c24:	add	x1, x29, #0x1c
  414c28:	mov	w0, w24
  414c2c:	mov	w2, wzr
  414c30:	bl	402bc0 <waitpid@plt>
  414c34:	cmp	w0, w24
  414c38:	b.ne	414c50 <ferror@plt+0x12050>  // b.any
  414c3c:	ldr	w8, [x29, #28]
  414c40:	and	w9, w8, #0xff
  414c44:	cmp	w9, #0x7f
  414c48:	b.eq	414c24 <ferror@plt+0x12024>  // b.none
  414c4c:	b	414c80 <ferror@plt+0x12080>
  414c50:	bl	402b80 <__errno_location@plt>
  414c54:	ldr	w1, [x0]
  414c58:	cmp	w1, #0x4
  414c5c:	b.eq	414c24 <ferror@plt+0x12024>  // b.none
  414c60:	tbz	w21, #0, 414c68 <ferror@plt+0x12068>
  414c64:	tbz	w20, #0, 414d50 <ferror@plt+0x12150>
  414c68:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  414c6c:	and	w0, w20, #0x1
  414c70:	add	x2, x2, #0xcf6
  414c74:	mov	x3, x19
  414c78:	bl	4025d0 <error@plt>
  414c7c:	b	414d50 <ferror@plt+0x12150>
  414c80:	tbz	w25, #0, 414cc8 <ferror@plt+0x120c8>
  414c84:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x1540c>
  414c88:	adrp	x10, 436000 <__progname@@GLIBC_2.17+0xab98>
  414c8c:	ldr	x9, [x9, #1040]
  414c90:	ldrsw	x10, [x10, #3236]
  414c94:	cmp	w10, #0x1
  414c98:	b.lt	414cc8 <ferror@plt+0x120c8>  // b.tstop
  414c9c:	add	x8, x9, x10, lsl #3
  414ca0:	ldr	w10, [x9]
  414ca4:	cbz	w10, 414cb8 <ferror@plt+0x120b8>
  414ca8:	ldr	w10, [x9, #4]
  414cac:	cmp	w10, w24
  414cb0:	b.ne	414cb8 <ferror@plt+0x120b8>  // b.any
  414cb4:	str	wzr, [x9]
  414cb8:	add	x9, x9, #0x8
  414cbc:	cmp	x9, x8
  414cc0:	b.cc	414ca0 <ferror@plt+0x120a0>  // b.lo, b.ul, b.last
  414cc4:	ldr	w8, [x29, #28]
  414cc8:	and	w4, w8, #0x7f
  414ccc:	mov	w9, #0x1000000             	// #16777216
  414cd0:	add	w9, w9, w4, lsl #24
  414cd4:	mov	w10, #0x2000000             	// #33554432
  414cd8:	cmp	w9, w10
  414cdc:	b.lt	414cfc <ferror@plt+0x120fc>  // b.tstop
  414ce0:	cbz	x22, 414ce8 <ferror@plt+0x120e8>
  414ce4:	str	w4, [x22]
  414ce8:	cmp	w4, #0xd
  414cec:	b.ne	414d28 <ferror@plt+0x12128>  // b.any
  414cf0:	tbz	w23, #0, 414d28 <ferror@plt+0x12128>
  414cf4:	mov	w0, wzr
  414cf8:	b	414d54 <ferror@plt+0x12154>
  414cfc:	cbnz	w4, 414d6c <ferror@plt+0x1216c>
  414d00:	ubfx	w0, w8, #8, #8
  414d04:	cmp	w0, #0x7f
  414d08:	b.ne	414d54 <ferror@plt+0x12154>  // b.any
  414d0c:	tbz	w21, #0, 414d14 <ferror@plt+0x12114>
  414d10:	tbz	w20, #0, 414d50 <ferror@plt+0x12150>
  414d14:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  414d18:	and	w0, w20, #0x1
  414d1c:	add	x2, x2, #0xf99
  414d20:	mov	w1, wzr
  414d24:	b	414c74 <ferror@plt+0x12074>
  414d28:	tbnz	w20, #0, 414d38 <ferror@plt+0x12138>
  414d2c:	mov	w0, #0x7f                  	// #127
  414d30:	cbnz	x22, 414d54 <ferror@plt+0x12154>
  414d34:	tbnz	w21, #0, 414d54 <ferror@plt+0x12154>
  414d38:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  414d3c:	and	w0, w20, #0x1
  414d40:	add	x2, x2, #0xd04
  414d44:	mov	w1, wzr
  414d48:	mov	x3, x19
  414d4c:	bl	4025d0 <error@plt>
  414d50:	mov	w0, #0x7f                  	// #127
  414d54:	ldp	x20, x19, [sp, #64]
  414d58:	ldp	x22, x21, [sp, #48]
  414d5c:	ldp	x24, x23, [sp, #32]
  414d60:	ldr	x25, [sp, #16]
  414d64:	ldp	x29, x30, [sp], #80
  414d68:	ret
  414d6c:	bl	402920 <abort@plt>
  414d70:	sub	sp, sp, #0x30
  414d74:	stp	x20, x19, [sp, #32]
  414d78:	mov	x19, x1
  414d7c:	add	x4, sp, #0x8
  414d80:	mov	x1, xzr
  414d84:	mov	x2, x19
  414d88:	mov	x3, xzr
  414d8c:	stp	x29, x30, [sp, #16]
  414d90:	add	x29, sp, #0x10
  414d94:	mov	x20, x0
  414d98:	str	xzr, [sp, #8]
  414d9c:	bl	416030 <_obstack_memory_used@@Base+0x43c>
  414da0:	ldr	x8, [sp, #8]
  414da4:	sbfx	x9, x1, #0, #1
  414da8:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  414dac:	eor	x9, x9, x1
  414db0:	cmn	x0, x10
  414db4:	orr	x9, x9, x8
  414db8:	adcs	x8, x1, xzr
  414dbc:	cbnz	x9, 414ddc <ferror@plt+0x121dc>
  414dc0:	sbfx	x8, x8, #0, #1
  414dc4:	tbnz	x8, #63, 414ddc <ferror@plt+0x121dc>
  414dc8:	mul	x0, x19, x20
  414dcc:	ldp	x20, x19, [sp, #32]
  414dd0:	ldp	x29, x30, [sp, #16]
  414dd4:	add	sp, sp, #0x30
  414dd8:	b	414de0 <ferror@plt+0x121e0>
  414ddc:	bl	4150b0 <ferror@plt+0x124b0>
  414de0:	stp	x29, x30, [sp, #-32]!
  414de4:	str	x19, [sp, #16]
  414de8:	mov	x29, sp
  414dec:	mov	x19, x0
  414df0:	bl	402740 <malloc@plt>
  414df4:	cbz	x19, 414dfc <ferror@plt+0x121fc>
  414df8:	cbz	x0, 414e08 <ferror@plt+0x12208>
  414dfc:	ldr	x19, [sp, #16]
  414e00:	ldp	x29, x30, [sp], #32
  414e04:	ret
  414e08:	bl	4150b0 <ferror@plt+0x124b0>
  414e0c:	stp	x29, x30, [sp, #-48]!
  414e10:	mov	x29, sp
  414e14:	str	x21, [sp, #16]
  414e18:	stp	x20, x19, [sp, #32]
  414e1c:	mov	x21, x1
  414e20:	mov	x20, x0
  414e24:	add	x4, x29, #0x18
  414e28:	mov	x0, x1
  414e2c:	mov	x1, xzr
  414e30:	mov	x3, xzr
  414e34:	mov	x19, x2
  414e38:	str	xzr, [x29, #24]
  414e3c:	bl	416030 <_obstack_memory_used@@Base+0x43c>
  414e40:	ldr	x8, [x29, #24]
  414e44:	sbfx	x9, x1, #0, #1
  414e48:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  414e4c:	eor	x9, x9, x1
  414e50:	cmn	x0, x10
  414e54:	orr	x9, x9, x8
  414e58:	adcs	x8, x1, xzr
  414e5c:	cbnz	x9, 414e80 <ferror@plt+0x12280>
  414e60:	sbfx	x8, x8, #0, #1
  414e64:	tbnz	x8, #63, 414e80 <ferror@plt+0x12280>
  414e68:	mul	x1, x19, x21
  414e6c:	mov	x0, x20
  414e70:	ldp	x20, x19, [sp, #32]
  414e74:	ldr	x21, [sp, #16]
  414e78:	ldp	x29, x30, [sp], #48
  414e7c:	b	414e84 <ferror@plt+0x12284>
  414e80:	bl	4150b0 <ferror@plt+0x124b0>
  414e84:	stp	x29, x30, [sp, #-32]!
  414e88:	str	x19, [sp, #16]
  414e8c:	mov	x19, x1
  414e90:	mov	x29, sp
  414e94:	cbz	x0, 414ea8 <ferror@plt+0x122a8>
  414e98:	cbnz	x19, 414ea8 <ferror@plt+0x122a8>
  414e9c:	bl	4029f0 <free@plt>
  414ea0:	mov	x0, xzr
  414ea4:	b	414eb8 <ferror@plt+0x122b8>
  414ea8:	mov	x1, x19
  414eac:	bl	402860 <realloc@plt>
  414eb0:	cbz	x19, 414eb8 <ferror@plt+0x122b8>
  414eb4:	cbz	x0, 414ec4 <ferror@plt+0x122c4>
  414eb8:	ldr	x19, [sp, #16]
  414ebc:	ldp	x29, x30, [sp], #32
  414ec0:	ret
  414ec4:	bl	4150b0 <ferror@plt+0x124b0>
  414ec8:	stp	x29, x30, [sp, #-16]!
  414ecc:	ldr	x9, [x1]
  414ed0:	mov	x29, sp
  414ed4:	cbz	x0, 414ef8 <ferror@plt+0x122f8>
  414ed8:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  414edc:	movk	x8, #0x5554
  414ee0:	udiv	x8, x8, x2
  414ee4:	cmp	x8, x9
  414ee8:	b.ls	414f20 <ferror@plt+0x12320>  // b.plast
  414eec:	add	x8, x9, x9, lsr #1
  414ef0:	add	x9, x8, #0x1
  414ef4:	b	414f0c <ferror@plt+0x1230c>
  414ef8:	cbnz	x9, 414f0c <ferror@plt+0x1230c>
  414efc:	mov	w8, #0x80                  	// #128
  414f00:	udiv	x8, x8, x2
  414f04:	cmp	x2, #0x80
  414f08:	cinc	x9, x8, hi  // hi = pmore
  414f0c:	mul	x8, x9, x2
  414f10:	str	x9, [x1]
  414f14:	mov	x1, x8
  414f18:	ldp	x29, x30, [sp], #16
  414f1c:	b	414e84 <ferror@plt+0x12284>
  414f20:	bl	4150b0 <ferror@plt+0x124b0>
  414f24:	b	414de0 <ferror@plt+0x121e0>
  414f28:	stp	x29, x30, [sp, #-16]!
  414f2c:	ldr	x8, [x1]
  414f30:	mov	x29, sp
  414f34:	cbz	x0, 414f54 <ferror@plt+0x12354>
  414f38:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  414f3c:	movk	x9, #0x5554
  414f40:	cmp	x8, x9
  414f44:	b.cs	414f70 <ferror@plt+0x12370>  // b.hs, b.nlast
  414f48:	add	x8, x8, x8, lsr #1
  414f4c:	add	x8, x8, #0x1
  414f50:	b	414f60 <ferror@plt+0x12360>
  414f54:	cmp	x8, #0x0
  414f58:	mov	w9, #0x80                  	// #128
  414f5c:	csel	x8, x9, x8, eq  // eq = none
  414f60:	str	x8, [x1]
  414f64:	mov	x1, x8
  414f68:	ldp	x29, x30, [sp], #16
  414f6c:	b	414e84 <ferror@plt+0x12284>
  414f70:	bl	4150b0 <ferror@plt+0x124b0>
  414f74:	stp	x29, x30, [sp, #-32]!
  414f78:	stp	x20, x19, [sp, #16]
  414f7c:	mov	x29, sp
  414f80:	mov	x19, x0
  414f84:	bl	414de0 <ferror@plt+0x121e0>
  414f88:	mov	w1, wzr
  414f8c:	mov	x2, x19
  414f90:	mov	x20, x0
  414f94:	bl	4027e0 <memset@plt>
  414f98:	mov	x0, x20
  414f9c:	ldp	x20, x19, [sp, #16]
  414fa0:	ldp	x29, x30, [sp], #32
  414fa4:	ret
  414fa8:	sub	sp, sp, #0x30
  414fac:	stp	x20, x19, [sp, #32]
  414fb0:	mov	x19, x1
  414fb4:	add	x4, sp, #0x8
  414fb8:	mov	x1, xzr
  414fbc:	mov	x2, x19
  414fc0:	mov	x3, xzr
  414fc4:	stp	x29, x30, [sp, #16]
  414fc8:	add	x29, sp, #0x10
  414fcc:	mov	x20, x0
  414fd0:	str	xzr, [sp, #8]
  414fd4:	bl	416030 <_obstack_memory_used@@Base+0x43c>
  414fd8:	ldr	x8, [sp, #8]
  414fdc:	sbfx	x9, x1, #0, #1
  414fe0:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  414fe4:	eor	x9, x9, x1
  414fe8:	cmn	x0, x10
  414fec:	orr	x9, x9, x8
  414ff0:	adcs	x8, x1, xzr
  414ff4:	cbnz	x9, 415020 <ferror@plt+0x12420>
  414ff8:	sbfx	x8, x8, #0, #1
  414ffc:	tbnz	x8, #63, 415020 <ferror@plt+0x12420>
  415000:	mov	x0, x20
  415004:	mov	x1, x19
  415008:	bl	402820 <calloc@plt>
  41500c:	cbz	x0, 415020 <ferror@plt+0x12420>
  415010:	ldp	x20, x19, [sp, #32]
  415014:	ldp	x29, x30, [sp, #16]
  415018:	add	sp, sp, #0x30
  41501c:	ret
  415020:	bl	4150b0 <ferror@plt+0x124b0>
  415024:	stp	x29, x30, [sp, #-48]!
  415028:	stp	x20, x19, [sp, #32]
  41502c:	mov	x20, x0
  415030:	mov	x0, x1
  415034:	str	x21, [sp, #16]
  415038:	mov	x29, sp
  41503c:	mov	x19, x1
  415040:	bl	414de0 <ferror@plt+0x121e0>
  415044:	mov	x1, x20
  415048:	mov	x2, x19
  41504c:	mov	x21, x0
  415050:	bl	402550 <memcpy@plt>
  415054:	mov	x0, x21
  415058:	ldp	x20, x19, [sp, #32]
  41505c:	ldr	x21, [sp, #16]
  415060:	ldp	x29, x30, [sp], #48
  415064:	ret
  415068:	stp	x29, x30, [sp, #-48]!
  41506c:	str	x21, [sp, #16]
  415070:	stp	x20, x19, [sp, #32]
  415074:	mov	x29, sp
  415078:	mov	x19, x0
  41507c:	bl	402580 <strlen@plt>
  415080:	add	x20, x0, #0x1
  415084:	mov	x0, x20
  415088:	bl	414de0 <ferror@plt+0x121e0>
  41508c:	mov	x1, x19
  415090:	mov	x2, x20
  415094:	mov	x21, x0
  415098:	bl	402550 <memcpy@plt>
  41509c:	mov	x0, x21
  4150a0:	ldp	x20, x19, [sp, #32]
  4150a4:	ldr	x21, [sp, #16]
  4150a8:	ldp	x29, x30, [sp], #48
  4150ac:	ret
  4150b0:	stp	x29, x30, [sp, #-16]!
  4150b4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4150b8:	ldr	w0, [x8, #900]
  4150bc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x240c>
  4150c0:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x340c>
  4150c4:	add	x2, x2, #0xf6
  4150c8:	add	x3, x3, #0xd26
  4150cc:	mov	w1, wzr
  4150d0:	mov	x29, sp
  4150d4:	bl	4025d0 <error@plt>
  4150d8:	bl	402920 <abort@plt>
  4150dc:	stp	x29, x30, [sp, #-16]!
  4150e0:	mov	x29, sp
  4150e4:	bl	4125fc <ferror@plt+0xf9fc>
  4150e8:	cbz	x0, 4150f4 <ferror@plt+0x124f4>
  4150ec:	ldp	x29, x30, [sp], #16
  4150f0:	ret
  4150f4:	bl	4150b0 <ferror@plt+0x124b0>
  4150f8:	sub	sp, sp, #0x120
  4150fc:	stp	x29, x30, [sp, #256]
  415100:	add	x29, sp, #0x100
  415104:	mov	x8, #0xffffffffffffffc8    	// #-56
  415108:	mov	x9, sp
  41510c:	sub	x10, x29, #0x78
  415110:	movk	x8, #0xff80, lsl #32
  415114:	add	x11, x29, #0x20
  415118:	add	x9, x9, #0x80
  41511c:	add	x10, x10, #0x38
  415120:	stp	x9, x8, [x29, #-16]
  415124:	stp	x11, x10, [x29, #-32]
  415128:	stp	x1, x2, [x29, #-120]
  41512c:	stp	x3, x4, [x29, #-104]
  415130:	stp	x5, x6, [x29, #-88]
  415134:	stur	x7, [x29, #-72]
  415138:	stp	q0, q1, [sp]
  41513c:	ldp	q0, q1, [x29, #-32]
  415140:	sub	x1, x29, #0x40
  415144:	str	x28, [sp, #272]
  415148:	stp	q2, q3, [sp, #32]
  41514c:	stp	q4, q5, [sp, #64]
  415150:	stp	q6, q7, [sp, #96]
  415154:	stp	q0, q1, [x29, #-64]
  415158:	bl	41516c <ferror@plt+0x1256c>
  41515c:	ldr	x28, [sp, #272]
  415160:	ldp	x29, x30, [sp, #256]
  415164:	add	sp, sp, #0x120
  415168:	ret
  41516c:	sub	sp, sp, #0x40
  415170:	stp	x29, x30, [sp, #32]
  415174:	stp	x20, x19, [sp, #48]
  415178:	ldp	q1, q0, [x1]
  41517c:	mov	x8, x0
  415180:	mov	x2, sp
  415184:	mov	w0, #0x1                   	// #1
  415188:	mov	x1, x8
  41518c:	add	x29, sp, #0x20
  415190:	stp	q1, q0, [sp]
  415194:	bl	402840 <__vprintf_chk@plt>
  415198:	mov	w19, w0
  41519c:	tbz	w0, #31, 4151d0 <ferror@plt+0x125d0>
  4151a0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4151a4:	ldr	x0, [x8, #1104]
  4151a8:	bl	402c00 <ferror@plt>
  4151ac:	cbnz	w0, 4151d0 <ferror@plt+0x125d0>
  4151b0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4151b4:	ldr	w20, [x8, #900]
  4151b8:	bl	402b80 <__errno_location@plt>
  4151bc:	ldr	w1, [x0]
  4151c0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  4151c4:	add	x2, x2, #0xd37
  4151c8:	mov	w0, w20
  4151cc:	bl	4025d0 <error@plt>
  4151d0:	mov	w0, w19
  4151d4:	ldp	x20, x19, [sp, #48]
  4151d8:	ldp	x29, x30, [sp, #32]
  4151dc:	add	sp, sp, #0x40
  4151e0:	ret
  4151e4:	sub	sp, sp, #0x100
  4151e8:	stp	x29, x30, [sp, #240]
  4151ec:	add	x29, sp, #0xf0
  4151f0:	mov	x8, #0xffffffffffffffd0    	// #-48
  4151f4:	mov	x9, sp
  4151f8:	sub	x10, x29, #0x70
  4151fc:	movk	x8, #0xff80, lsl #32
  415200:	add	x11, x29, #0x10
  415204:	add	x9, x9, #0x80
  415208:	add	x10, x10, #0x30
  41520c:	stp	x9, x8, [x29, #-16]
  415210:	stp	x11, x10, [x29, #-32]
  415214:	stp	x2, x3, [x29, #-112]
  415218:	stp	x4, x5, [x29, #-96]
  41521c:	stp	x6, x7, [x29, #-80]
  415220:	stp	q1, q2, [sp, #16]
  415224:	str	q0, [sp]
  415228:	ldp	q0, q1, [x29, #-32]
  41522c:	sub	x2, x29, #0x40
  415230:	stp	q3, q4, [sp, #48]
  415234:	stp	q5, q6, [sp, #80]
  415238:	str	q7, [sp, #112]
  41523c:	stp	q0, q1, [x29, #-64]
  415240:	bl	415250 <ferror@plt+0x12650>
  415244:	ldp	x29, x30, [sp, #240]
  415248:	add	sp, sp, #0x100
  41524c:	ret
  415250:	sub	sp, sp, #0x40
  415254:	stp	x29, x30, [sp, #32]
  415258:	stp	x20, x19, [sp, #48]
  41525c:	ldp	q1, q0, [x2]
  415260:	mov	x8, x1
  415264:	mov	x3, sp
  415268:	mov	w1, #0x1                   	// #1
  41526c:	mov	x2, x8
  415270:	add	x29, sp, #0x20
  415274:	mov	x20, x0
  415278:	stp	q1, q0, [sp]
  41527c:	bl	402810 <__vfprintf_chk@plt>
  415280:	mov	w19, w0
  415284:	tbz	w0, #31, 4152b4 <ferror@plt+0x126b4>
  415288:	mov	x0, x20
  41528c:	bl	402c00 <ferror@plt>
  415290:	cbnz	w0, 4152b4 <ferror@plt+0x126b4>
  415294:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  415298:	ldr	w20, [x8, #900]
  41529c:	bl	402b80 <__errno_location@plt>
  4152a0:	ldr	w1, [x0]
  4152a4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  4152a8:	add	x2, x2, #0xd37
  4152ac:	mov	w0, w20
  4152b0:	bl	4025d0 <error@plt>
  4152b4:	mov	w0, w19
  4152b8:	ldp	x20, x19, [sp, #48]
  4152bc:	ldp	x29, x30, [sp, #32]
  4152c0:	add	sp, sp, #0x40
  4152c4:	ret
  4152c8:	sub	sp, sp, #0x80
  4152cc:	str	x23, [sp, #80]
  4152d0:	mov	x2, x0
  4152d4:	mov	x23, xzr
  4152d8:	mov	x8, x0
  4152dc:	stp	x29, x30, [sp, #64]
  4152e0:	stp	x22, x21, [sp, #96]
  4152e4:	stp	x20, x19, [sp, #112]
  4152e8:	add	x29, sp, #0x40
  4152ec:	ldrb	w9, [x8]
  4152f0:	cmp	w9, #0x25
  4152f4:	b.ne	415310 <ferror@plt+0x12710>  // b.any
  4152f8:	ldrb	w9, [x8, #1]
  4152fc:	cmp	w9, #0x73
  415300:	b.ne	41539c <ferror@plt+0x1279c>  // b.any
  415304:	sub	x23, x23, #0x1
  415308:	add	x8, x8, #0x2
  41530c:	b	4152ec <ferror@plt+0x126ec>
  415310:	cbnz	w9, 41539c <ferror@plt+0x1279c>
  415314:	ldp	q1, q0, [x1]
  415318:	stp	q1, q0, [sp]
  41531c:	stp	q1, q0, [sp, #32]
  415320:	cbz	x23, 4153d8 <ferror@plt+0x127d8>
  415324:	ldr	x20, [sp, #40]
  415328:	ldr	w8, [sp, #56]
  41532c:	mov	x19, xzr
  415330:	mov	x21, x23
  415334:	tbnz	w8, #31, 415340 <ferror@plt+0x12740>
  415338:	mov	w22, w8
  41533c:	b	415358 <ferror@plt+0x12758>
  415340:	add	w22, w8, #0x8
  415344:	cmn	w8, #0x8
  415348:	str	w22, [sp, #56]
  41534c:	b.gt	415358 <ferror@plt+0x12758>
  415350:	add	x8, x20, w8, sxtw
  415354:	b	415364 <ferror@plt+0x12764>
  415358:	ldr	x8, [sp, #32]
  41535c:	add	x9, x8, #0x8
  415360:	str	x9, [sp, #32]
  415364:	ldr	x0, [x8]
  415368:	bl	402580 <strlen@plt>
  41536c:	adds	x8, x19, x0
  415370:	csinv	x19, x8, xzr, cc  // cc = lo, ul, last
  415374:	adds	x21, x21, #0x1
  415378:	mov	w8, w22
  41537c:	b.cc	415334 <ferror@plt+0x12734>  // b.lo, b.ul, b.last
  415380:	lsr	x8, x19, #31
  415384:	cbz	x8, 4153ec <ferror@plt+0x127ec>
  415388:	bl	402b80 <__errno_location@plt>
  41538c:	mov	w8, #0x4b                  	// #75
  415390:	mov	x19, xzr
  415394:	str	w8, [x0]
  415398:	b	41545c <ferror@plt+0x1285c>
  41539c:	ldp	q1, q0, [x1]
  4153a0:	mov	x0, sp
  4153a4:	add	x3, sp, #0x20
  4153a8:	mov	w1, #0x1                   	// #1
  4153ac:	stp	q1, q0, [sp, #32]
  4153b0:	bl	402760 <__vasprintf_chk@plt>
  4153b4:	tbnz	w0, #31, 4153c0 <ferror@plt+0x127c0>
  4153b8:	ldr	x19, [sp]
  4153bc:	b	41545c <ferror@plt+0x1285c>
  4153c0:	bl	402b80 <__errno_location@plt>
  4153c4:	ldr	w8, [x0]
  4153c8:	cmp	w8, #0xc
  4153cc:	b.eq	415478 <ferror@plt+0x12878>  // b.none
  4153d0:	mov	x19, xzr
  4153d4:	b	41545c <ferror@plt+0x1285c>
  4153d8:	mov	w0, #0x1                   	// #1
  4153dc:	bl	414de0 <ferror@plt+0x121e0>
  4153e0:	mov	x19, x0
  4153e4:	mov	x20, x0
  4153e8:	b	415458 <ferror@plt+0x12858>
  4153ec:	add	x0, x19, #0x1
  4153f0:	bl	414de0 <ferror@plt+0x121e0>
  4153f4:	mov	x19, x0
  4153f8:	mov	x20, x0
  4153fc:	ldrsw	x8, [sp, #24]
  415400:	tbz	w8, #31, 415420 <ferror@plt+0x12820>
  415404:	add	w9, w8, #0x8
  415408:	cmn	w8, #0x8
  41540c:	str	w9, [sp, #24]
  415410:	b.gt	415420 <ferror@plt+0x12820>
  415414:	ldr	x9, [sp, #8]
  415418:	add	x8, x9, x8
  41541c:	b	41542c <ferror@plt+0x1282c>
  415420:	ldr	x8, [sp]
  415424:	add	x9, x8, #0x8
  415428:	str	x9, [sp]
  41542c:	ldr	x21, [x8]
  415430:	mov	x0, x21
  415434:	bl	402580 <strlen@plt>
  415438:	mov	x22, x0
  41543c:	mov	x0, x20
  415440:	mov	x1, x21
  415444:	mov	x2, x22
  415448:	bl	402550 <memcpy@plt>
  41544c:	adds	x23, x23, #0x1
  415450:	add	x20, x20, x22
  415454:	b.cc	4153fc <ferror@plt+0x127fc>  // b.lo, b.ul, b.last
  415458:	strb	wzr, [x20]
  41545c:	mov	x0, x19
  415460:	ldp	x20, x19, [sp, #112]
  415464:	ldp	x22, x21, [sp, #96]
  415468:	ldr	x23, [sp, #80]
  41546c:	ldp	x29, x30, [sp, #64]
  415470:	add	sp, sp, #0x80
  415474:	ret
  415478:	bl	4150b0 <ferror@plt+0x124b0>
  41547c:	sub	sp, sp, #0x120
  415480:	stp	x29, x30, [sp, #256]
  415484:	add	x29, sp, #0x100
  415488:	mov	x8, #0xffffffffffffffc8    	// #-56
  41548c:	mov	x9, sp
  415490:	sub	x10, x29, #0x78
  415494:	movk	x8, #0xff80, lsl #32
  415498:	add	x11, x29, #0x20
  41549c:	add	x9, x9, #0x80
  4154a0:	add	x10, x10, #0x38
  4154a4:	stp	x9, x8, [x29, #-16]
  4154a8:	stp	x11, x10, [x29, #-32]
  4154ac:	stp	x1, x2, [x29, #-120]
  4154b0:	stp	x3, x4, [x29, #-104]
  4154b4:	stp	x5, x6, [x29, #-88]
  4154b8:	stur	x7, [x29, #-72]
  4154bc:	stp	q0, q1, [sp]
  4154c0:	ldp	q0, q1, [x29, #-32]
  4154c4:	sub	x1, x29, #0x40
  4154c8:	str	x28, [sp, #272]
  4154cc:	stp	q2, q3, [sp, #32]
  4154d0:	stp	q4, q5, [sp, #64]
  4154d4:	stp	q6, q7, [sp, #96]
  4154d8:	stp	q0, q1, [x29, #-64]
  4154dc:	bl	4152c8 <ferror@plt+0x126c8>
  4154e0:	ldr	x28, [sp, #272]
  4154e4:	ldp	x29, x30, [sp, #256]
  4154e8:	add	sp, sp, #0x120
  4154ec:	ret
  4154f0:	stp	x29, x30, [sp, #-48]!
  4154f4:	str	x21, [sp, #16]
  4154f8:	stp	x20, x19, [sp, #32]
  4154fc:	mov	x29, sp
  415500:	mov	x19, x0
  415504:	bl	4026d0 <fileno@plt>
  415508:	tbnz	w0, #31, 415570 <ferror@plt+0x12970>
  41550c:	mov	x0, x19
  415510:	bl	402b20 <__freading@plt>
  415514:	cbz	w0, 415534 <ferror@plt+0x12934>
  415518:	mov	x0, x19
  41551c:	bl	4026d0 <fileno@plt>
  415520:	mov	w2, #0x1                   	// #1
  415524:	mov	x1, xzr
  415528:	bl	4026b0 <lseek@plt>
  41552c:	cmn	x0, #0x1
  415530:	b.eq	415570 <ferror@plt+0x12970>  // b.none
  415534:	mov	x0, x19
  415538:	bl	415748 <ferror@plt+0x12b48>
  41553c:	cbz	w0, 415570 <ferror@plt+0x12970>
  415540:	bl	402b80 <__errno_location@plt>
  415544:	ldr	w21, [x0]
  415548:	mov	x20, x0
  41554c:	mov	x0, x19
  415550:	bl	402700 <fclose@plt>
  415554:	cbz	w21, 415560 <ferror@plt+0x12960>
  415558:	mov	w0, #0xffffffff            	// #-1
  41555c:	str	w21, [x20]
  415560:	ldp	x20, x19, [sp, #32]
  415564:	ldr	x21, [sp, #16]
  415568:	ldp	x29, x30, [sp], #48
  41556c:	ret
  415570:	mov	x0, x19
  415574:	ldp	x20, x19, [sp, #32]
  415578:	ldr	x21, [sp, #16]
  41557c:	ldp	x29, x30, [sp], #48
  415580:	b	402700 <fclose@plt>
  415584:	sub	sp, sp, #0x100
  415588:	stp	x29, x30, [sp, #208]
  41558c:	add	x29, sp, #0xd0
  415590:	mov	x8, #0xffffffffffffffd0    	// #-48
  415594:	mov	x9, sp
  415598:	movk	x8, #0xff80, lsl #32
  41559c:	sub	x10, x29, #0x50
  4155a0:	add	x9, x9, #0x80
  4155a4:	stp	x20, x19, [sp, #240]
  4155a8:	mov	w19, w0
  4155ac:	add	x11, x29, #0x30
  4155b0:	cmp	w1, #0x406
  4155b4:	add	x10, x10, #0x30
  4155b8:	stp	x9, x8, [x29, #-16]
  4155bc:	mov	x8, #0xffffffffffffffd0    	// #-48
  4155c0:	stp	x22, x21, [sp, #224]
  4155c4:	stp	x2, x3, [x29, #-80]
  4155c8:	stp	x4, x5, [x29, #-64]
  4155cc:	stp	x6, x7, [x29, #-48]
  4155d0:	stp	q1, q2, [sp, #16]
  4155d4:	stp	q3, q4, [sp, #48]
  4155d8:	str	q0, [sp]
  4155dc:	stp	q5, q6, [sp, #80]
  4155e0:	str	q7, [sp, #112]
  4155e4:	stp	x11, x10, [x29, #-32]
  4155e8:	b.ne	41560c <ferror@plt+0x12a0c>  // b.any
  4155ec:	tbz	w8, #31, 41562c <ferror@plt+0x12a2c>
  4155f0:	add	w9, w8, #0x8
  4155f4:	cmn	w8, #0x8
  4155f8:	stur	w9, [x29, #-8]
  4155fc:	b.gt	41562c <ferror@plt+0x12a2c>
  415600:	ldur	x9, [x29, #-24]
  415604:	add	x8, x9, x8
  415608:	b	415638 <ferror@plt+0x12a38>
  41560c:	tbz	w8, #31, 415698 <ferror@plt+0x12a98>
  415610:	add	w9, w8, #0x8
  415614:	cmn	w8, #0x8
  415618:	stur	w9, [x29, #-8]
  41561c:	b.gt	415698 <ferror@plt+0x12a98>
  415620:	ldur	x9, [x29, #-24]
  415624:	add	x8, x9, x8
  415628:	b	4156a4 <ferror@plt+0x12aa4>
  41562c:	ldur	x8, [x29, #-32]
  415630:	add	x9, x8, #0x8
  415634:	stur	x9, [x29, #-32]
  415638:	adrp	x22, 436000 <__progname@@GLIBC_2.17+0xab98>
  41563c:	ldr	w9, [x22, #3496]
  415640:	ldr	w21, [x8]
  415644:	tbnz	w9, #31, 4156c4 <ferror@plt+0x12ac4>
  415648:	mov	w1, #0x406                 	// #1030
  41564c:	mov	w0, w19
  415650:	mov	w2, w21
  415654:	bl	402a80 <fcntl@plt>
  415658:	mov	w20, w0
  41565c:	tbz	w0, #31, 4156b8 <ferror@plt+0x12ab8>
  415660:	bl	402b80 <__errno_location@plt>
  415664:	ldr	w8, [x0]
  415668:	cmp	w8, #0x16
  41566c:	b.ne	4156b8 <ferror@plt+0x12ab8>  // b.any
  415670:	mov	w0, w19
  415674:	mov	w1, wzr
  415678:	mov	w2, w21
  41567c:	bl	415584 <ferror@plt+0x12984>
  415680:	mov	w20, w0
  415684:	tbnz	w0, #31, 415730 <ferror@plt+0x12b30>
  415688:	mov	w8, #0xffffffff            	// #-1
  41568c:	str	w8, [x22, #3496]
  415690:	mov	w8, #0x1                   	// #1
  415694:	b	4156e4 <ferror@plt+0x12ae4>
  415698:	ldur	x8, [x29, #-32]
  41569c:	add	x9, x8, #0x8
  4156a0:	stur	x9, [x29, #-32]
  4156a4:	ldr	x2, [x8]
  4156a8:	mov	w0, w19
  4156ac:	bl	402a80 <fcntl@plt>
  4156b0:	mov	w20, w0
  4156b4:	b	415730 <ferror@plt+0x12b30>
  4156b8:	mov	w8, #0x1                   	// #1
  4156bc:	str	w8, [x22, #3496]
  4156c0:	b	415730 <ferror@plt+0x12b30>
  4156c4:	mov	w0, w19
  4156c8:	mov	w1, wzr
  4156cc:	mov	w2, w21
  4156d0:	bl	415584 <ferror@plt+0x12984>
  4156d4:	ldr	w8, [x22, #3496]
  4156d8:	mov	w20, w0
  4156dc:	cmn	w8, #0x1
  4156e0:	cset	w8, eq  // eq = none
  4156e4:	tbnz	w20, #31, 415730 <ferror@plt+0x12b30>
  4156e8:	cbz	w8, 415730 <ferror@plt+0x12b30>
  4156ec:	mov	w1, #0x1                   	// #1
  4156f0:	mov	w0, w20
  4156f4:	bl	402a80 <fcntl@plt>
  4156f8:	tbnz	w0, #31, 415714 <ferror@plt+0x12b14>
  4156fc:	orr	w2, w0, #0x1
  415700:	mov	w1, #0x2                   	// #2
  415704:	mov	w0, w20
  415708:	bl	402a80 <fcntl@plt>
  41570c:	cmn	w0, #0x1
  415710:	b.ne	415730 <ferror@plt+0x12b30>  // b.any
  415714:	bl	402b80 <__errno_location@plt>
  415718:	ldr	w21, [x0]
  41571c:	mov	x19, x0
  415720:	mov	w0, w20
  415724:	bl	4028b0 <close@plt>
  415728:	str	w21, [x19]
  41572c:	mov	w20, #0xffffffff            	// #-1
  415730:	mov	w0, w20
  415734:	ldp	x20, x19, [sp, #240]
  415738:	ldp	x22, x21, [sp, #224]
  41573c:	ldp	x29, x30, [sp, #208]
  415740:	add	sp, sp, #0x100
  415744:	ret
  415748:	stp	x29, x30, [sp, #-32]!
  41574c:	str	x19, [sp, #16]
  415750:	mov	x19, x0
  415754:	mov	x29, sp
  415758:	cbz	x0, 415780 <ferror@plt+0x12b80>
  41575c:	mov	x0, x19
  415760:	bl	402b20 <__freading@plt>
  415764:	cbz	w0, 415780 <ferror@plt+0x12b80>
  415768:	ldrb	w8, [x19, #1]
  41576c:	tbz	w8, #0, 415780 <ferror@plt+0x12b80>
  415770:	mov	w2, #0x1                   	// #1
  415774:	mov	x0, x19
  415778:	mov	x1, xzr
  41577c:	bl	4157d0 <ferror@plt+0x12bd0>
  415780:	mov	x0, x19
  415784:	ldr	x19, [sp, #16]
  415788:	ldp	x29, x30, [sp], #32
  41578c:	b	402a90 <fflush@plt>
  415790:	ldp	x9, x8, [x0, #32]
  415794:	cmp	x8, x9
  415798:	b.ls	4157a4 <ferror@plt+0x12ba4>  // b.plast
  41579c:	mov	x0, xzr
  4157a0:	ret
  4157a4:	ldp	x9, x8, [x0, #8]
  4157a8:	ldrb	w10, [x0, #1]
  4157ac:	sub	x8, x8, x9
  4157b0:	tbnz	w10, #0, 4157bc <ferror@plt+0x12bbc>
  4157b4:	mov	x9, xzr
  4157b8:	b	4157c8 <ferror@plt+0x12bc8>
  4157bc:	ldr	x9, [x0, #88]
  4157c0:	ldr	x10, [x0, #72]
  4157c4:	sub	x9, x9, x10
  4157c8:	add	x0, x8, x9
  4157cc:	ret
  4157d0:	stp	x29, x30, [sp, #-48]!
  4157d4:	str	x21, [sp, #16]
  4157d8:	stp	x20, x19, [sp, #32]
  4157dc:	ldp	x9, x8, [x0, #8]
  4157e0:	mov	w20, w2
  4157e4:	mov	x19, x0
  4157e8:	mov	x21, x1
  4157ec:	cmp	x8, x9
  4157f0:	mov	x29, sp
  4157f4:	b.ne	41580c <ferror@plt+0x12c0c>  // b.any
  4157f8:	ldp	x9, x8, [x19, #32]
  4157fc:	cmp	x8, x9
  415800:	b.ne	41580c <ferror@plt+0x12c0c>  // b.any
  415804:	ldr	x8, [x19, #72]
  415808:	cbz	x8, 415828 <ferror@plt+0x12c28>
  41580c:	mov	x0, x19
  415810:	mov	x1, x21
  415814:	mov	w2, w20
  415818:	ldp	x20, x19, [sp, #32]
  41581c:	ldr	x21, [sp, #16]
  415820:	ldp	x29, x30, [sp], #48
  415824:	b	4029d0 <fseeko@plt>
  415828:	mov	x0, x19
  41582c:	bl	4026d0 <fileno@plt>
  415830:	mov	x1, x21
  415834:	mov	w2, w20
  415838:	bl	4026b0 <lseek@plt>
  41583c:	cmn	x0, #0x1
  415840:	b.eq	41585c <ferror@plt+0x12c5c>  // b.none
  415844:	ldr	w9, [x19]
  415848:	mov	x8, x0
  41584c:	mov	w0, wzr
  415850:	str	x8, [x19, #144]
  415854:	and	w9, w9, #0xffffffef
  415858:	str	w9, [x19]
  41585c:	ldp	x20, x19, [sp, #32]
  415860:	ldr	x21, [sp, #16]
  415864:	ldp	x29, x30, [sp], #48
  415868:	ret
  41586c:	sub	sp, sp, #0x40
  415870:	stp	x29, x30, [sp, #16]
  415874:	add	x29, sp, #0x10
  415878:	cmp	x0, #0x0
  41587c:	sub	x8, x29, #0x4
  415880:	stp	x20, x19, [sp, #48]
  415884:	csel	x20, x8, x0, eq  // eq = none
  415888:	mov	x0, x20
  41588c:	stp	x22, x21, [sp, #32]
  415890:	mov	x22, x2
  415894:	mov	x19, x1
  415898:	bl	402540 <mbrtowc@plt>
  41589c:	mov	x21, x0
  4158a0:	cbz	x22, 4158c4 <ferror@plt+0x12cc4>
  4158a4:	cmn	x21, #0x2
  4158a8:	b.cc	4158c4 <ferror@plt+0x12cc4>  // b.lo, b.ul, b.last
  4158ac:	mov	w0, wzr
  4158b0:	bl	415cdc <_obstack_memory_used@@Base+0xe8>
  4158b4:	tbnz	w0, #0, 4158c4 <ferror@plt+0x12cc4>
  4158b8:	ldrb	w8, [x19]
  4158bc:	mov	w21, #0x1                   	// #1
  4158c0:	str	w8, [x20]
  4158c4:	mov	x0, x21
  4158c8:	ldp	x20, x19, [sp, #48]
  4158cc:	ldp	x22, x21, [sp, #32]
  4158d0:	ldp	x29, x30, [sp, #16]
  4158d4:	add	sp, sp, #0x40
  4158d8:	ret

00000000004158dc <_obstack_begin@@Base>:
  4158dc:	stp	x29, x30, [sp, #-16]!
  4158e0:	ldrb	w8, [x0, #80]
  4158e4:	mov	x29, sp
  4158e8:	stp	x3, x4, [x0, #56]
  4158ec:	and	w8, w8, #0xfe
  4158f0:	strb	w8, [x0, #80]
  4158f4:	bl	415904 <_obstack_begin@@Base+0x28>
  4158f8:	mov	w0, #0x1                   	// #1
  4158fc:	ldp	x29, x30, [sp], #16
  415900:	ret
  415904:	stp	x29, x30, [sp, #-48]!
  415908:	stp	x20, x19, [sp, #32]
  41590c:	ldrb	w10, [x0, #80]
  415910:	cmp	x2, #0x0
  415914:	mov	w8, #0x10                  	// #16
  415918:	mov	w9, #0xfe0                 	// #4064
  41591c:	csel	x20, x8, x2, eq  // eq = none
  415920:	cmp	x1, #0x0
  415924:	str	x21, [sp, #16]
  415928:	mov	x19, x0
  41592c:	csel	x1, x9, x1, eq  // eq = none
  415930:	sub	x21, x20, #0x1
  415934:	mov	x29, sp
  415938:	str	x1, [x0]
  41593c:	str	x21, [x0, #48]
  415940:	tbnz	w10, #0, 415954 <_obstack_begin@@Base+0x78>
  415944:	ldr	x8, [x19, #56]
  415948:	mov	x0, x1
  41594c:	blr	x8
  415950:	b	415960 <_obstack_begin@@Base+0x84>
  415954:	ldr	x8, [x19, #56]
  415958:	ldr	x0, [x19, #72]
  41595c:	blr	x8
  415960:	str	x0, [x19, #8]
  415964:	cbz	x0, 4159ac <_obstack_begin@@Base+0xd0>
  415968:	ldr	x10, [x19]
  41596c:	add	x8, x0, x21
  415970:	neg	x9, x20
  415974:	add	x8, x8, #0x10
  415978:	and	x8, x8, x9
  41597c:	stp	x8, x8, [x19, #16]
  415980:	add	x8, x0, x10
  415984:	str	x8, [x0]
  415988:	str	x8, [x19, #32]
  41598c:	str	xzr, [x0, #8]
  415990:	ldrb	w8, [x19, #80]
  415994:	ldr	x21, [sp, #16]
  415998:	and	w8, w8, #0xfffffff9
  41599c:	strb	w8, [x19, #80]
  4159a0:	ldp	x20, x19, [sp, #32]
  4159a4:	ldp	x29, x30, [sp], #48
  4159a8:	ret
  4159ac:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4159b0:	ldr	x8, [x8, #1056]
  4159b4:	blr	x8

00000000004159b8 <_obstack_begin_1@@Base>:
  4159b8:	stp	x29, x30, [sp, #-16]!
  4159bc:	ldrb	w8, [x0, #80]
  4159c0:	mov	x29, sp
  4159c4:	stp	x3, x4, [x0, #56]
  4159c8:	str	x5, [x0, #72]
  4159cc:	orr	w8, w8, #0x1
  4159d0:	strb	w8, [x0, #80]
  4159d4:	bl	415904 <_obstack_begin@@Base+0x28>
  4159d8:	mov	w0, #0x1                   	// #1
  4159dc:	ldp	x29, x30, [sp], #16
  4159e0:	ret

00000000004159e4 <_obstack_newchunk@@Base>:
  4159e4:	stp	x29, x30, [sp, #-64]!
  4159e8:	str	x23, [sp, #16]
  4159ec:	stp	x22, x21, [sp, #32]
  4159f0:	stp	x20, x19, [sp, #48]
  4159f4:	ldp	x9, x8, [x0, #16]
  4159f8:	ldr	x10, [x0, #48]
  4159fc:	ldr	x11, [x0]
  415a00:	mov	x29, sp
  415a04:	sub	x20, x8, x9
  415a08:	adds	x8, x20, x1
  415a0c:	lsr	x9, x20, #3
  415a10:	cset	w12, cs  // cs = hs, nlast
  415a14:	adds	x10, x8, x10
  415a18:	add	x9, x9, #0x64
  415a1c:	cset	w8, cs  // cs = hs, nlast
  415a20:	adds	x9, x9, x10
  415a24:	csel	x9, x10, x9, cs  // cs = hs, nlast
  415a28:	cmp	x9, x11
  415a2c:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  415a30:	tbnz	w12, #0, 415b1c <_obstack_newchunk@@Base+0x138>
  415a34:	tbnz	w8, #0, 415b1c <_obstack_newchunk@@Base+0x138>
  415a38:	ldrb	w8, [x0, #80]
  415a3c:	ldr	x21, [x0, #8]
  415a40:	mov	x19, x0
  415a44:	tbnz	w8, #0, 415a58 <_obstack_newchunk@@Base+0x74>
  415a48:	ldr	x8, [x19, #56]
  415a4c:	mov	x0, x23
  415a50:	blr	x8
  415a54:	b	415a68 <_obstack_newchunk@@Base+0x84>
  415a58:	ldr	x8, [x19, #56]
  415a5c:	ldr	x0, [x19, #72]
  415a60:	mov	x1, x23
  415a64:	blr	x8
  415a68:	mov	x22, x0
  415a6c:	cbz	x0, 415b1c <_obstack_newchunk@@Base+0x138>
  415a70:	add	x8, x22, x23
  415a74:	str	x22, [x19, #8]
  415a78:	str	x21, [x22, #8]
  415a7c:	str	x8, [x19, #32]
  415a80:	str	x8, [x22]
  415a84:	ldr	x8, [x19, #48]
  415a88:	ldr	x1, [x19, #16]
  415a8c:	mov	x2, x20
  415a90:	add	x9, x22, x8
  415a94:	add	x9, x9, #0x10
  415a98:	bic	x23, x9, x8
  415a9c:	mov	x0, x23
  415aa0:	bl	402550 <memcpy@plt>
  415aa4:	ldrb	w8, [x19, #80]
  415aa8:	tbnz	w8, #1, 415af4 <_obstack_newchunk@@Base+0x110>
  415aac:	ldr	x8, [x19, #48]
  415ab0:	ldr	x9, [x19, #16]
  415ab4:	add	x10, x21, x8
  415ab8:	add	x10, x10, #0x10
  415abc:	bic	x8, x10, x8
  415ac0:	cmp	x9, x8
  415ac4:	b.ne	415af4 <_obstack_newchunk@@Base+0x110>  // b.any
  415ac8:	ldr	x8, [x21, #8]
  415acc:	str	x8, [x22, #8]
  415ad0:	ldrb	w8, [x19, #80]
  415ad4:	tbnz	w8, #0, 415ae8 <_obstack_newchunk@@Base+0x104>
  415ad8:	ldr	x8, [x19, #64]
  415adc:	mov	x0, x21
  415ae0:	blr	x8
  415ae4:	b	415af4 <_obstack_newchunk@@Base+0x110>
  415ae8:	ldp	x8, x0, [x19, #64]
  415aec:	mov	x1, x21
  415af0:	blr	x8
  415af4:	ldrb	w8, [x19, #80]
  415af8:	add	x9, x23, x20
  415afc:	stp	x23, x9, [x19, #16]
  415b00:	ldr	x23, [sp, #16]
  415b04:	and	w8, w8, #0xfffffffd
  415b08:	strb	w8, [x19, #80]
  415b0c:	ldp	x20, x19, [sp, #48]
  415b10:	ldp	x22, x21, [sp, #32]
  415b14:	ldp	x29, x30, [sp], #64
  415b18:	ret
  415b1c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  415b20:	ldr	x8, [x8, #1056]
  415b24:	blr	x8

0000000000415b28 <_obstack_allocated_p@@Base>:
  415b28:	ldr	x8, [x0, #8]
  415b2c:	cbz	x8, 415b4c <_obstack_allocated_p@@Base+0x24>
  415b30:	cmp	x8, x1
  415b34:	b.cs	415b44 <_obstack_allocated_p@@Base+0x1c>  // b.hs, b.nlast
  415b38:	ldr	x9, [x8]
  415b3c:	cmp	x9, x1
  415b40:	b.cs	415b54 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  415b44:	ldr	x8, [x8, #8]
  415b48:	cbnz	x8, 415b30 <_obstack_allocated_p@@Base+0x8>
  415b4c:	mov	w0, wzr
  415b50:	ret
  415b54:	mov	w0, #0x1                   	// #1
  415b58:	ret

0000000000415b5c <_obstack_free@@Base>:
  415b5c:	stp	x29, x30, [sp, #-48]!
  415b60:	stp	x20, x19, [sp, #32]
  415b64:	ldr	x8, [x0, #8]
  415b68:	mov	x20, x1
  415b6c:	str	x21, [sp, #16]
  415b70:	mov	x29, sp
  415b74:	cbz	x8, 415bcc <_obstack_free@@Base+0x70>
  415b78:	mov	x19, x0
  415b7c:	cmp	x8, x20
  415b80:	b.cs	415b90 <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  415b84:	ldr	x9, [x8]
  415b88:	cmp	x9, x20
  415b8c:	b.cs	415bd4 <_obstack_free@@Base+0x78>  // b.hs, b.nlast
  415b90:	ldrb	w9, [x19, #80]
  415b94:	ldr	x21, [x8, #8]
  415b98:	tbnz	w9, #0, 415bac <_obstack_free@@Base+0x50>
  415b9c:	ldr	x9, [x19, #64]
  415ba0:	mov	x0, x8
  415ba4:	blr	x9
  415ba8:	b	415bb8 <_obstack_free@@Base+0x5c>
  415bac:	ldp	x9, x0, [x19, #64]
  415bb0:	mov	x1, x8
  415bb4:	blr	x9
  415bb8:	ldrb	w8, [x19, #80]
  415bbc:	orr	w8, w8, #0x2
  415bc0:	strb	w8, [x19, #80]
  415bc4:	mov	x8, x21
  415bc8:	cbnz	x21, 415b7c <_obstack_free@@Base+0x20>
  415bcc:	cbz	x20, 415be4 <_obstack_free@@Base+0x88>
  415bd0:	bl	402920 <abort@plt>
  415bd4:	stp	x20, x20, [x19, #16]
  415bd8:	ldr	x9, [x8]
  415bdc:	str	x8, [x19, #8]
  415be0:	str	x9, [x19, #32]
  415be4:	ldp	x20, x19, [sp, #32]
  415be8:	ldr	x21, [sp, #16]
  415bec:	ldp	x29, x30, [sp], #48
  415bf0:	ret

0000000000415bf4 <_obstack_memory_used@@Base>:
  415bf4:	ldr	x8, [x0, #8]
  415bf8:	cbz	x8, 415c14 <_obstack_memory_used@@Base+0x20>
  415bfc:	mov	x0, xzr
  415c00:	sub	x10, x0, x8
  415c04:	ldp	x9, x8, [x8]
  415c08:	add	x0, x10, x9
  415c0c:	cbnz	x8, 415c00 <_obstack_memory_used@@Base+0xc>
  415c10:	ret
  415c14:	mov	x0, xzr
  415c18:	ret
  415c1c:	stp	x29, x30, [sp, #-16]!
  415c20:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  415c24:	ldr	x0, [x8, #1080]
  415c28:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x340c>
  415c2c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x340c>
  415c30:	add	x2, x2, #0x9e9
  415c34:	add	x3, x3, #0xd26
  415c38:	mov	w1, #0x1                   	// #1
  415c3c:	mov	x29, sp
  415c40:	bl	402980 <__fprintf_chk@plt>
  415c44:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1540c>
  415c48:	ldr	w0, [x8, #900]
  415c4c:	bl	4025b0 <exit@plt>
  415c50:	sub	x0, x0, #0x1
  415c54:	ldrb	w10, [x0, #1]!
  415c58:	cmp	w10, #0x2f
  415c5c:	b.eq	415c54 <_obstack_memory_used@@Base+0x60>  // b.none
  415c60:	mov	w8, wzr
  415c64:	mov	x9, x0
  415c68:	and	w10, w10, #0xff
  415c6c:	cmp	w10, #0x2f
  415c70:	b.eq	415c88 <_obstack_memory_used@@Base+0x94>  // b.none
  415c74:	cbz	w10, 415c94 <_obstack_memory_used@@Base+0xa0>
  415c78:	tst	w8, #0x1
  415c7c:	mov	w8, wzr
  415c80:	csel	x0, x9, x0, ne  // ne = any
  415c84:	b	415c8c <_obstack_memory_used@@Base+0x98>
  415c88:	mov	w8, #0x1                   	// #1
  415c8c:	ldrb	w10, [x9, #1]!
  415c90:	b	415c68 <_obstack_memory_used@@Base+0x74>
  415c94:	ret
  415c98:	stp	x29, x30, [sp, #-32]!
  415c9c:	str	x19, [sp, #16]
  415ca0:	mov	x29, sp
  415ca4:	mov	x19, x0
  415ca8:	bl	402580 <strlen@plt>
  415cac:	mov	x8, x0
  415cb0:	sub	x9, x19, #0x1
  415cb4:	mov	x0, x8
  415cb8:	cmp	x8, #0x2
  415cbc:	b.cc	415cd0 <_obstack_memory_used@@Base+0xdc>  // b.lo, b.ul, b.last
  415cc0:	ldrb	w8, [x9, x0]
  415cc4:	cmp	w8, #0x2f
  415cc8:	sub	x8, x0, #0x1
  415ccc:	b.eq	415cb4 <_obstack_memory_used@@Base+0xc0>  // b.none
  415cd0:	ldr	x19, [sp, #16]
  415cd4:	ldp	x29, x30, [sp], #32
  415cd8:	ret
  415cdc:	stp	x29, x30, [sp, #-32]!
  415ce0:	mov	x1, xzr
  415ce4:	str	x19, [sp, #16]
  415ce8:	mov	x29, sp
  415cec:	bl	402bf0 <setlocale@plt>
  415cf0:	cbz	x0, 415d1c <_obstack_memory_used@@Base+0x128>
  415cf4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x340c>
  415cf8:	add	x1, x1, #0xd57
  415cfc:	mov	x19, x0
  415d00:	bl	402990 <strcmp@plt>
  415d04:	cbz	w0, 415d24 <_obstack_memory_used@@Base+0x130>
  415d08:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x340c>
  415d0c:	add	x1, x1, #0xd59
  415d10:	mov	x0, x19
  415d14:	bl	402990 <strcmp@plt>
  415d18:	cbz	w0, 415d24 <_obstack_memory_used@@Base+0x130>
  415d1c:	mov	w0, #0x1                   	// #1
  415d20:	b	415d28 <_obstack_memory_used@@Base+0x134>
  415d24:	mov	w0, wzr
  415d28:	ldr	x19, [sp, #16]
  415d2c:	ldp	x29, x30, [sp], #32
  415d30:	ret
  415d34:	sub	sp, sp, #0xd0
  415d38:	mov	w0, #0xe                   	// #14
  415d3c:	stp	x29, x30, [sp, #112]
  415d40:	stp	x28, x27, [sp, #128]
  415d44:	stp	x26, x25, [sp, #144]
  415d48:	stp	x24, x23, [sp, #160]
  415d4c:	stp	x22, x21, [sp, #176]
  415d50:	stp	x20, x19, [sp, #192]
  415d54:	add	x29, sp, #0x70
  415d58:	bl	402720 <nl_langinfo@plt>
  415d5c:	adrp	x27, 436000 <__progname@@GLIBC_2.17+0xab98>
  415d60:	ldr	x21, [x27, #3504]
  415d64:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x140c>
  415d68:	add	x8, x8, #0xe97
  415d6c:	cmp	x0, #0x0
  415d70:	csel	x19, x8, x0, eq  // eq = none
  415d74:	cbnz	x21, 415f98 <_obstack_memory_used@@Base+0x3a4>
  415d78:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x340c>
  415d7c:	add	x0, x0, #0xd73
  415d80:	bl	402b90 <getenv@plt>
  415d84:	cbz	x0, 415d94 <_obstack_memory_used@@Base+0x1a0>
  415d88:	ldrb	w8, [x0]
  415d8c:	mov	x21, x0
  415d90:	cbnz	w8, 415d9c <_obstack_memory_used@@Base+0x1a8>
  415d94:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x340c>
  415d98:	add	x21, x21, #0xd83
  415d9c:	mov	x0, x21
  415da0:	bl	402580 <strlen@plt>
  415da4:	mov	x22, x0
  415da8:	cbz	x0, 415dc0 <_obstack_memory_used@@Base+0x1cc>
  415dac:	add	x8, x22, x21
  415db0:	ldurb	w8, [x8, #-1]
  415db4:	cmp	w8, #0x2f
  415db8:	cset	w23, ne  // ne = any
  415dbc:	b	415dc4 <_obstack_memory_used@@Base+0x1d0>
  415dc0:	mov	w23, wzr
  415dc4:	add	x8, x22, x23
  415dc8:	add	x0, x8, #0xe
  415dcc:	bl	402740 <malloc@plt>
  415dd0:	cbz	x0, 415f48 <_obstack_memory_used@@Base+0x354>
  415dd4:	mov	x1, x21
  415dd8:	mov	x2, x22
  415ddc:	mov	x20, x0
  415de0:	bl	402550 <memcpy@plt>
  415de4:	cbz	x23, 415df0 <_obstack_memory_used@@Base+0x1fc>
  415de8:	mov	w8, #0x2f                  	// #47
  415dec:	strb	w8, [x20, x22]
  415df0:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x340c>
  415df4:	add	x8, x8, #0xd65
  415df8:	ldur	x9, [x8, #6]
  415dfc:	ldr	x8, [x8]
  415e00:	add	x10, x20, x22
  415e04:	add	x10, x10, x23
  415e08:	mov	w1, #0x8000                	// #32768
  415e0c:	mov	x0, x20
  415e10:	stur	x9, [x10, #6]
  415e14:	str	x8, [x10]
  415e18:	bl	402750 <open@plt>
  415e1c:	tbnz	w0, #31, 415f84 <_obstack_memory_used@@Base+0x390>
  415e20:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x240c>
  415e24:	add	x1, x1, #0x2b8
  415e28:	mov	w21, w0
  415e2c:	bl	4027f0 <fdopen@plt>
  415e30:	cbz	x0, 415f54 <_obstack_memory_used@@Base+0x360>
  415e34:	mov	x22, x0
  415e38:	mov	x23, xzr
  415e3c:	mov	x21, xzr
  415e40:	mov	x0, x22
  415e44:	bl	4028a0 <getc_unlocked@plt>
  415e48:	cmp	w0, #0x1f
  415e4c:	b.gt	415e68 <_obstack_memory_used@@Base+0x274>
  415e50:	sub	w8, w0, #0x9
  415e54:	cmp	w8, #0x2
  415e58:	b.cc	415e90 <_obstack_memory_used@@Base+0x29c>  // b.lo, b.ul, b.last
  415e5c:	cmn	w0, #0x1
  415e60:	b.ne	415e98 <_obstack_memory_used@@Base+0x2a4>  // b.any
  415e64:	b	415f70 <_obstack_memory_used@@Base+0x37c>
  415e68:	cmp	w0, #0x20
  415e6c:	b.eq	415e90 <_obstack_memory_used@@Base+0x29c>  // b.none
  415e70:	cmp	w0, #0x23
  415e74:	b.ne	415e98 <_obstack_memory_used@@Base+0x2a4>  // b.any
  415e78:	mov	x0, x22
  415e7c:	bl	4028a0 <getc_unlocked@plt>
  415e80:	cmn	w0, #0x1
  415e84:	b.eq	415f70 <_obstack_memory_used@@Base+0x37c>  // b.none
  415e88:	cmp	w0, #0xa
  415e8c:	b.ne	415e78 <_obstack_memory_used@@Base+0x284>  // b.any
  415e90:	mov	x25, x21
  415e94:	b	415f40 <_obstack_memory_used@@Base+0x34c>
  415e98:	mov	x1, x22
  415e9c:	bl	402a00 <ungetc@plt>
  415ea0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x340c>
  415ea4:	sub	x2, x29, #0x34
  415ea8:	add	x3, sp, #0x8
  415eac:	mov	x0, x22
  415eb0:	add	x1, x1, #0xd8c
  415eb4:	bl	402770 <__isoc99_fscanf@plt>
  415eb8:	cmp	w0, #0x2
  415ebc:	b.lt	415f70 <_obstack_memory_used@@Base+0x37c>  // b.tstop
  415ec0:	sub	x0, x29, #0x34
  415ec4:	bl	402580 <strlen@plt>
  415ec8:	mov	x24, x0
  415ecc:	add	x0, sp, #0x8
  415ed0:	bl	402580 <strlen@plt>
  415ed4:	add	x8, x24, x0
  415ed8:	mov	x26, x0
  415edc:	add	x28, x8, #0x2
  415ee0:	cbz	x23, 415f00 <_obstack_memory_used@@Base+0x30c>
  415ee4:	add	x23, x28, x23
  415ee8:	add	x1, x23, #0x1
  415eec:	mov	x0, x21
  415ef0:	bl	402860 <realloc@plt>
  415ef4:	mov	x25, x0
  415ef8:	cbnz	x25, 415f18 <_obstack_memory_used@@Base+0x324>
  415efc:	b	415f60 <_obstack_memory_used@@Base+0x36c>
  415f00:	add	x8, x8, #0x1
  415f04:	add	x0, x8, #0x2
  415f08:	bl	402740 <malloc@plt>
  415f0c:	mov	x25, x0
  415f10:	mov	x23, x28
  415f14:	cbz	x25, 415f60 <_obstack_memory_used@@Base+0x36c>
  415f18:	add	x8, x25, x23
  415f1c:	mvn	x9, x26
  415f20:	add	x21, x8, x9
  415f24:	mvn	x8, x24
  415f28:	add	x0, x21, x8
  415f2c:	sub	x1, x29, #0x34
  415f30:	bl	402aa0 <strcpy@plt>
  415f34:	add	x1, sp, #0x8
  415f38:	mov	x0, x21
  415f3c:	bl	402aa0 <strcpy@plt>
  415f40:	mov	x21, x25
  415f44:	b	415e40 <_obstack_memory_used@@Base+0x24c>
  415f48:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x140c>
  415f4c:	add	x21, x21, #0xe97
  415f50:	b	415f94 <_obstack_memory_used@@Base+0x3a0>
  415f54:	mov	w0, w21
  415f58:	bl	4028b0 <close@plt>
  415f5c:	b	415f84 <_obstack_memory_used@@Base+0x390>
  415f60:	mov	x0, x21
  415f64:	bl	4029f0 <free@plt>
  415f68:	mov	x23, xzr
  415f6c:	mov	x21, xzr
  415f70:	mov	x0, x22
  415f74:	bl	4154f0 <ferror@plt+0x128f0>
  415f78:	cbz	x23, 415f84 <_obstack_memory_used@@Base+0x390>
  415f7c:	strb	wzr, [x21, x23]
  415f80:	b	415f8c <_obstack_memory_used@@Base+0x398>
  415f84:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x140c>
  415f88:	add	x21, x21, #0xe97
  415f8c:	mov	x0, x20
  415f90:	bl	4029f0 <free@plt>
  415f94:	str	x21, [x27, #3504]
  415f98:	ldrb	w20, [x21]
  415f9c:	cbz	w20, 415ffc <_obstack_memory_used@@Base+0x408>
  415fa0:	mov	x0, x19
  415fa4:	mov	x1, x21
  415fa8:	bl	402990 <strcmp@plt>
  415fac:	cbz	w0, 415fec <_obstack_memory_used@@Base+0x3f8>
  415fb0:	and	w8, w20, #0xff
  415fb4:	cmp	w8, #0x2a
  415fb8:	b.ne	415fc4 <_obstack_memory_used@@Base+0x3d0>  // b.any
  415fbc:	ldrb	w8, [x21, #1]
  415fc0:	cbz	w8, 415fec <_obstack_memory_used@@Base+0x3f8>
  415fc4:	mov	x0, x21
  415fc8:	bl	402580 <strlen@plt>
  415fcc:	add	x8, x0, x21
  415fd0:	add	x20, x8, #0x1
  415fd4:	mov	x0, x20
  415fd8:	bl	402580 <strlen@plt>
  415fdc:	add	x21, x0, x20
  415fe0:	ldrb	w20, [x21, #1]!
  415fe4:	cbnz	w20, 415fa0 <_obstack_memory_used@@Base+0x3ac>
  415fe8:	b	415ffc <_obstack_memory_used@@Base+0x408>
  415fec:	mov	x0, x21
  415ff0:	bl	402580 <strlen@plt>
  415ff4:	add	x8, x21, x0
  415ff8:	add	x19, x8, #0x1
  415ffc:	ldrb	w8, [x19]
  416000:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x340c>
  416004:	add	x9, x9, #0xd5f
  416008:	ldp	x22, x21, [sp, #176]
  41600c:	cmp	w8, #0x0
  416010:	csel	x0, x9, x19, eq  // eq = none
  416014:	ldp	x20, x19, [sp, #192]
  416018:	ldp	x24, x23, [sp, #160]
  41601c:	ldp	x26, x25, [sp, #144]
  416020:	ldp	x28, x27, [sp, #128]
  416024:	ldp	x29, x30, [sp, #112]
  416028:	add	sp, sp, #0xd0
  41602c:	ret
  416030:	stp	x29, x30, [sp, #-64]!
  416034:	str	x23, [sp, #16]
  416038:	stp	x22, x21, [sp, #32]
  41603c:	stp	x20, x19, [sp, #48]
  416040:	mov	x29, sp
  416044:	umulh	x8, x2, x0
  416048:	eor	x9, x1, #0x8000000000000000
  41604c:	madd	x8, x2, x1, x8
  416050:	mov	x19, x4
  416054:	orr	x9, x0, x9
  416058:	madd	x20, x3, x0, x8
  41605c:	mul	x21, x2, x0
  416060:	str	wzr, [x4]
  416064:	cbnz	x9, 416078 <_obstack_memory_used@@Base+0x484>
  416068:	cmp	x2, #0x2
  41606c:	cset	w8, cc  // cc = lo, ul, last
  416070:	cmp	x3, #0x0
  416074:	b	416090 <_obstack_memory_used@@Base+0x49c>
  416078:	eor	x8, x3, #0x8000000000000000
  41607c:	orr	x8, x2, x8
  416080:	cbnz	x8, 4160bc <_obstack_memory_used@@Base+0x4c8>
  416084:	cmp	x0, #0x2
  416088:	cset	w8, cc  // cc = lo, ul, last
  41608c:	cmp	x1, #0x0
  416090:	csel	w8, w8, wzr, eq  // eq = none
  416094:	tbnz	w8, #0, 4160a0 <_obstack_memory_used@@Base+0x4ac>
  416098:	mov	w8, #0x1                   	// #1
  41609c:	str	w8, [x19]
  4160a0:	mov	x0, x21
  4160a4:	mov	x1, x20
  4160a8:	ldp	x20, x19, [sp, #48]
  4160ac:	ldp	x22, x21, [sp, #32]
  4160b0:	ldr	x23, [sp, #16]
  4160b4:	ldp	x29, x30, [sp], #64
  4160b8:	ret
  4160bc:	eor	x10, x0, x1, asr #63
  4160c0:	asr	x8, x1, #63
  4160c4:	eor	x11, x1, x1, asr #63
  4160c8:	subs	x23, x10, x1, asr #63
  4160cc:	eor	x12, x2, x3, asr #63
  4160d0:	sbcs	x22, x11, x8
  4160d4:	asr	x9, x3, #63
  4160d8:	eor	x13, x3, x3, asr #63
  4160dc:	subs	x2, x12, x3, asr #63
  4160e0:	sbcs	x3, x13, x9
  4160e4:	cmp	x23, #0x2
  4160e8:	cset	w10, cc  // cc = lo, ul, last
  4160ec:	cmp	x22, #0x0
  4160f0:	cset	w11, lt  // lt = tstop
  4160f4:	csel	w10, w10, w11, eq  // eq = none
  4160f8:	tbnz	w10, #0, 4160a0 <_obstack_memory_used@@Base+0x4ac>
  4160fc:	cmp	x2, #0x2
  416100:	cset	w10, cc  // cc = lo, ul, last
  416104:	cmp	x3, #0x0
  416108:	cset	w11, lt  // lt = tstop
  41610c:	csel	w10, w10, w11, eq  // eq = none
  416110:	tbnz	w10, #0, 4160a0 <_obstack_memory_used@@Base+0x4ac>
  416114:	eor	x8, x8, x9
  416118:	orr	x8, x8, x8
  41611c:	cbnz	x8, 416130 <_obstack_memory_used@@Base+0x53c>
  416120:	mov	x0, #0xffffffffffffffff    	// #-1
  416124:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  416128:	bl	416160 <_obstack_memory_used@@Base+0x56c>
  41612c:	b	416144 <_obstack_memory_used@@Base+0x550>
  416130:	negs	x2, x2
  416134:	ngcs	x3, x3
  416138:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  41613c:	mov	x0, xzr
  416140:	bl	416168 <_obstack_memory_used@@Base+0x574>
  416144:	cmp	x23, x0
  416148:	cset	w8, ls  // ls = plast
  41614c:	cmp	x22, x1
  416150:	cset	w9, le
  416154:	csel	w8, w8, w9, eq  // eq = none
  416158:	tbz	w8, #0, 416098 <_obstack_memory_used@@Base+0x4a4>
  41615c:	b	4160a0 <_obstack_memory_used@@Base+0x4ac>
  416160:	mov	x4, xzr
  416164:	b	4161c8 <_obstack_memory_used@@Base+0x5d4>
  416168:	stp	x29, x30, [sp, #-32]!
  41616c:	str	x19, [sp, #16]
  416170:	mov	x29, sp
  416174:	eor	x10, x0, x1, asr #63
  416178:	asr	x8, x1, #63
  41617c:	eor	x11, x1, x1, asr #63
  416180:	subs	x0, x10, x1, asr #63
  416184:	eor	x12, x2, x3, asr #63
  416188:	sbcs	x8, x11, x8
  41618c:	asr	x9, x3, #63
  416190:	eor	x13, x3, x3, asr #63
  416194:	subs	x2, x12, x3, asr #63
  416198:	sbcs	x3, x13, x9
  41619c:	eor	x19, x9, x1, asr #63
  4161a0:	mov	x1, x8
  4161a4:	mov	x4, xzr
  4161a8:	bl	4161c8 <_obstack_memory_used@@Base+0x5d4>
  4161ac:	eor	x9, x0, x19
  4161b0:	eor	x8, x1, x19
  4161b4:	subs	x0, x9, x19
  4161b8:	sbcs	x1, x8, x19
  4161bc:	ldr	x19, [sp, #16]
  4161c0:	ldp	x29, x30, [sp], #32
  4161c4:	ret
  4161c8:	cbz	x1, 4161f4 <_obstack_memory_used@@Base+0x600>
  4161cc:	cbz	x2, 41620c <_obstack_memory_used@@Base+0x618>
  4161d0:	cbz	x3, 41623c <_obstack_memory_used@@Base+0x648>
  4161d4:	clz	x8, x3
  4161d8:	clz	x9, x1
  4161dc:	sub	w11, w8, w9
  4161e0:	cmp	w11, #0x40
  4161e4:	b.cc	416298 <_obstack_memory_used@@Base+0x6a4>  // b.lo, b.ul, b.last
  4161e8:	cbz	x4, 4162dc <_obstack_memory_used@@Base+0x6e8>
  4161ec:	stp	x0, x1, [x4]
  4161f0:	b	4162dc <_obstack_memory_used@@Base+0x6e8>
  4161f4:	cbz	x3, 41627c <_obstack_memory_used@@Base+0x688>
  4161f8:	cbz	x4, 4162dc <_obstack_memory_used@@Base+0x6e8>
  4161fc:	mov	x1, xzr
  416200:	stp	x0, xzr, [x4]
  416204:	mov	x0, xzr
  416208:	ret
  41620c:	cbz	x3, 4162c8 <_obstack_memory_used@@Base+0x6d4>
  416210:	cbz	x0, 416388 <_obstack_memory_used@@Base+0x794>
  416214:	sub	x8, x3, #0x1
  416218:	tst	x3, x8
  41621c:	b.ne	41639c <_obstack_memory_used@@Base+0x7a8>  // b.any
  416220:	cbz	x4, 41622c <_obstack_memory_used@@Base+0x638>
  416224:	and	x8, x8, x1
  416228:	stp	x0, x8, [x4]
  41622c:	rbit	x8, x3
  416230:	clz	x8, x8
  416234:	lsr	x0, x1, x8
  416238:	b	4162e0 <_obstack_memory_used@@Base+0x6ec>
  41623c:	sub	x8, x2, #0x1
  416240:	tst	x2, x8
  416244:	b.ne	4162e8 <_obstack_memory_used@@Base+0x6f4>  // b.any
  416248:	cbz	x4, 416254 <_obstack_memory_used@@Base+0x660>
  41624c:	and	x8, x8, x0
  416250:	stp	x8, xzr, [x4]
  416254:	cmp	x2, #0x1
  416258:	b.eq	416384 <_obstack_memory_used@@Base+0x790>  // b.none
  41625c:	rbit	x8, x2
  416260:	clz	x8, x8
  416264:	neg	x9, x8
  416268:	lsl	x9, x1, x9
  41626c:	lsr	x1, x1, x8
  416270:	lsr	x8, x0, x8
  416274:	orr	x0, x9, x8
  416278:	ret
  41627c:	udiv	x8, x0, x2
  416280:	cbz	x4, 41628c <_obstack_memory_used@@Base+0x698>
  416284:	msub	x9, x8, x2, x0
  416288:	stp	x9, xzr, [x4]
  41628c:	mov	x1, xzr
  416290:	mov	x0, x8
  416294:	ret
  416298:	add	w8, w11, #0x1
  41629c:	cmp	w8, #0x40
  4162a0:	b.eq	416300 <_obstack_memory_used@@Base+0x70c>  // b.none
  4162a4:	mov	w12, #0x3f                  	// #63
  4162a8:	sub	w11, w12, w11
  4162ac:	lsr	x13, x0, x8
  4162b0:	lsl	x12, x1, x11
  4162b4:	mov	x10, xzr
  4162b8:	lsr	x9, x1, x8
  4162bc:	orr	x1, x12, x13
  4162c0:	lsl	x0, x0, x11
  4162c4:	b	41630c <_obstack_memory_used@@Base+0x718>
  4162c8:	cbz	x4, 4162dc <_obstack_memory_used@@Base+0x6e8>
  4162cc:	mov	x0, xzr
  4162d0:	mov	x1, xzr
  4162d4:	stp	xzr, xzr, [x4]
  4162d8:	ret
  4162dc:	mov	x0, xzr
  4162e0:	mov	x1, xzr
  4162e4:	ret
  4162e8:	clz	x8, x2
  4162ec:	clz	x9, x1
  4162f0:	sub	w8, w8, w9
  4162f4:	add	w8, w8, #0x41
  4162f8:	cmp	w8, #0x40
  4162fc:	b.ne	4163d8 <_obstack_memory_used@@Base+0x7e4>  // b.any
  416300:	mov	x9, xzr
  416304:	mov	x10, xzr
  416308:	mov	w8, #0x40                  	// #64
  41630c:	mov	w12, wzr
  416310:	mov	x11, x0
  416314:	extr	x13, x1, x11, #63
  416318:	extr	x9, x9, x1, #63
  41631c:	mov	w12, w12
  416320:	mvn	x14, x13
  416324:	extr	x11, x11, x10, #63
  416328:	orr	x10, x12, x10, lsl #1
  41632c:	mvn	x12, x9
  416330:	cmn	x14, x2
  416334:	adcs	x12, x12, x3
  416338:	asr	x14, x12, #63
  41633c:	and	x15, x3, x12, asr #63
  416340:	and	x12, x2, x12, asr #63
  416344:	subs	x1, x13, x12
  416348:	sbcs	x9, x9, x15
  41634c:	subs	w8, w8, #0x1
  416350:	and	w12, w14, #0x1
  416354:	b.ne	416314 <_obstack_memory_used@@Base+0x720>  // b.any
  416358:	mov	x8, xzr
  41635c:	lsr	x13, x10, #63
  416360:	lsl	x10, x10, #1
  416364:	lsl	x11, x11, #1
  416368:	and	x13, x13, #0x1
  41636c:	cbz	x4, 416374 <_obstack_memory_used@@Base+0x780>
  416370:	stp	x1, x9, [x4]
  416374:	and	x9, x10, #0xfffffffffffffffe
  416378:	orr	x10, x13, x11
  41637c:	orr	x0, x9, x12
  416380:	orr	x1, x10, x8
  416384:	ret
  416388:	udiv	x0, x1, x3
  41638c:	cbz	x4, 4162e0 <_obstack_memory_used@@Base+0x6ec>
  416390:	msub	x8, x0, x3, x1
  416394:	stp	xzr, x8, [x4]
  416398:	b	4162e0 <_obstack_memory_used@@Base+0x6ec>
  41639c:	clz	x8, x3
  4163a0:	clz	x9, x1
  4163a4:	sub	w9, w8, w9
  4163a8:	cmp	w9, #0x3f
  4163ac:	b.cs	4161e8 <_obstack_memory_used@@Base+0x5f4>  // b.hs, b.nlast
  4163b0:	mov	w11, #0x3f                  	// #63
  4163b4:	add	w8, w9, #0x1
  4163b8:	sub	w11, w11, w9
  4163bc:	lsr	x12, x0, x8
  4163c0:	lsl	x0, x0, x11
  4163c4:	lsl	x11, x1, x11
  4163c8:	mov	x10, xzr
  4163cc:	lsr	x9, x1, x8
  4163d0:	orr	x1, x11, x12
  4163d4:	b	41630c <_obstack_memory_used@@Base+0x718>
  4163d8:	b.cs	416404 <_obstack_memory_used@@Base+0x810>  // b.hs, b.nlast
  4163dc:	neg	w10, w8
  4163e0:	lsl	x11, x0, x10
  4163e4:	lsl	x10, x1, x10
  4163e8:	lsr	x12, x0, x8
  4163ec:	lsr	x9, x1, x8
  4163f0:	orr	x1, x10, x12
  4163f4:	mov	x10, xzr
  4163f8:	cbz	w8, 416424 <_obstack_memory_used@@Base+0x830>
  4163fc:	mov	x0, x11
  416400:	b	41630c <_obstack_memory_used@@Base+0x718>
  416404:	neg	w11, w8
  416408:	lsr	x12, x0, x8
  41640c:	lsl	x10, x0, x11
  416410:	lsl	x11, x1, x11
  416414:	mov	x9, xzr
  416418:	orr	x0, x11, x12
  41641c:	lsr	x1, x1, x8
  416420:	b	41630c <_obstack_memory_used@@Base+0x718>
  416424:	mov	x13, xzr
  416428:	mov	x12, xzr
  41642c:	mov	x8, xzr
  416430:	b	416364 <_obstack_memory_used@@Base+0x770>
  416434:	nop
  416438:	stp	x29, x30, [sp, #-64]!
  41643c:	mov	x29, sp
  416440:	stp	x19, x20, [sp, #16]
  416444:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x1440c>
  416448:	add	x20, x20, #0xdd8
  41644c:	stp	x21, x22, [sp, #32]
  416450:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x1440c>
  416454:	add	x21, x21, #0xdd0
  416458:	sub	x20, x20, x21
  41645c:	mov	w22, w0
  416460:	stp	x23, x24, [sp, #48]
  416464:	mov	x23, x1
  416468:	mov	x24, x2
  41646c:	bl	402500 <mbrtowc@plt-0x40>
  416470:	cmp	xzr, x20, asr #3
  416474:	b.eq	4164a0 <_obstack_memory_used@@Base+0x8ac>  // b.none
  416478:	asr	x20, x20, #3
  41647c:	mov	x19, #0x0                   	// #0
  416480:	ldr	x3, [x21, x19, lsl #3]
  416484:	mov	x2, x24
  416488:	add	x19, x19, #0x1
  41648c:	mov	x1, x23
  416490:	mov	w0, w22
  416494:	blr	x3
  416498:	cmp	x20, x19
  41649c:	b.ne	416480 <_obstack_memory_used@@Base+0x88c>  // b.any
  4164a0:	ldp	x19, x20, [sp, #16]
  4164a4:	ldp	x21, x22, [sp, #32]
  4164a8:	ldp	x23, x24, [sp, #48]
  4164ac:	ldp	x29, x30, [sp], #64
  4164b0:	ret
  4164b4:	nop
  4164b8:	ret
  4164bc:	nop
  4164c0:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x1540c>
  4164c4:	mov	x1, #0x0                   	// #0
  4164c8:	ldr	x2, [x2, #880]
  4164cc:	b	402660 <__cxa_atexit@plt>
  4164d0:	mov	x2, x1
  4164d4:	mov	x1, x0
  4164d8:	mov	w0, #0x0                   	// #0
  4164dc:	b	402bb0 <__xstat@plt>
  4164e0:	mov	x2, x1
  4164e4:	mov	w1, w0
  4164e8:	mov	w0, #0x0                   	// #0
  4164ec:	b	402af0 <__fxstat@plt>

Disassembly of section .fini:

00000000004164f0 <.fini>:
  4164f0:	stp	x29, x30, [sp, #-16]!
  4164f4:	mov	x29, sp
  4164f8:	ldp	x29, x30, [sp], #16
  4164fc:	ret
