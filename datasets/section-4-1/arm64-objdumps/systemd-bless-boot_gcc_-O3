
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-bless-boot_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401620 <_init>:
  401620:	stp	x29, x30, [sp, #-16]!
  401624:	mov	x29, sp
  401628:	bl	401ca4 <call_weak_fn>
  40162c:	ldp	x29, x30, [sp], #16
  401630:	ret

Disassembly of section .plt:

0000000000401640 <.plt>:
  401640:	stp	x16, x30, [sp, #-16]!
  401644:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401648:	ldr	x17, [x16, #3640]
  40164c:	add	x16, x16, #0xe38
  401650:	br	x17
  401654:	nop
  401658:	nop
  40165c:	nop

0000000000401660 <__libc_start_main@plt>:
  401660:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401664:	ldr	x17, [x16, #3648]
  401668:	add	x16, x16, #0xe40
  40166c:	br	x17

0000000000401670 <safe_atollu@plt>:
  401670:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401674:	ldr	x17, [x16, #3656]
  401678:	add	x16, x16, #0xe48
  40167c:	br	x17

0000000000401680 <efi_get_variable_string@plt>:
  401680:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401684:	ldr	x17, [x16, #3664]
  401688:	add	x16, x16, #0xe50
  40168c:	br	x17

0000000000401690 <__gmon_start__@plt>:
  401690:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401694:	ldr	x17, [x16, #3672]
  401698:	add	x16, x16, #0xe58
  40169c:	br	x17

00000000004016a0 <polkit_agent_close@plt>:
  4016a0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4016a4:	ldr	x17, [x16, #3680]
  4016a8:	add	x16, x16, #0xe60
  4016ac:	br	x17

00000000004016b0 <log_parse_environment_realm@plt>:
  4016b0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4016b4:	ldr	x17, [x16, #3688]
  4016b8:	add	x16, x16, #0xe68
  4016bc:	br	x17

00000000004016c0 <strnlen@plt>:
  4016c0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4016c4:	ldr	x17, [x16, #3696]
  4016c8:	add	x16, x16, #0xe70
  4016cc:	br	x17

00000000004016d0 <dispatch_verb@plt>:
  4016d0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4016d4:	ldr	x17, [x16, #3704]
  4016d8:	add	x16, x16, #0xe78
  4016dc:	br	x17

00000000004016e0 <memcpy@plt>:
  4016e0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4016e4:	ldr	x17, [x16, #3712]
  4016e8:	add	x16, x16, #0xe80
  4016ec:	br	x17

00000000004016f0 <last_path_component@plt>:
  4016f0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4016f4:	ldr	x17, [x16, #3720]
  4016f8:	add	x16, x16, #0xe88
  4016fc:	br	x17

0000000000401700 <strjoin_real@plt>:
  401700:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401704:	ldr	x17, [x16, #3728]
  401708:	add	x16, x16, #0xe90
  40170c:	br	x17

0000000000401710 <safe_close@plt>:
  401710:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401714:	ldr	x17, [x16, #3736]
  401718:	add	x16, x16, #0xe98
  40171c:	br	x17

0000000000401720 <strrchr@plt>:
  401720:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401724:	ldr	x17, [x16, #3744]
  401728:	add	x16, x16, #0xea0
  40172c:	br	x17

0000000000401730 <log_assert_failed_realm@plt>:
  401730:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401734:	ldr	x17, [x16, #3752]
  401738:	add	x16, x16, #0xea8
  40173c:	br	x17

0000000000401740 <faccessat@plt>:
  401740:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401744:	ldr	x17, [x16, #3760]
  401748:	add	x16, x16, #0xeb0
  40174c:	br	x17

0000000000401750 <getopt_long@plt>:
  401750:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401754:	ldr	x17, [x16, #3768]
  401758:	add	x16, x16, #0xeb8
  40175c:	br	x17

0000000000401760 <dirname_malloc@plt>:
  401760:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401764:	ldr	x17, [x16, #3776]
  401768:	add	x16, x16, #0xec0
  40176c:	br	x17

0000000000401770 <log_assert_failed_unreachable_realm@plt>:
  401770:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401774:	ldr	x17, [x16, #3784]
  401778:	add	x16, x16, #0xec8
  40177c:	br	x17

0000000000401780 <path_is_absolute@plt>:
  401780:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401784:	ldr	x17, [x16, #3792]
  401788:	add	x16, x16, #0xed0
  40178c:	br	x17

0000000000401790 <rename_noreplace@plt>:
  401790:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401794:	ldr	x17, [x16, #3800]
  401798:	add	x16, x16, #0xed8
  40179c:	br	x17

00000000004017a0 <is_efi_boot@plt>:
  4017a0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4017a4:	ldr	x17, [x16, #3808]
  4017a8:	add	x16, x16, #0xee0
  4017ac:	br	x17

00000000004017b0 <path_is_normalized@plt>:
  4017b0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4017b4:	ldr	x17, [x16, #3816]
  4017b8:	add	x16, x16, #0xee8
  4017bc:	br	x17

00000000004017c0 <abort@plt>:
  4017c0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4017c4:	ldr	x17, [x16, #3824]
  4017c8:	add	x16, x16, #0xef0
  4017cc:	br	x17

00000000004017d0 <strv_new_internal@plt>:
  4017d0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4017d4:	ldr	x17, [x16, #3832]
  4017d8:	add	x16, x16, #0xef8
  4017dc:	br	x17

00000000004017e0 <strspn@plt>:
  4017e0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4017e4:	ldr	x17, [x16, #3840]
  4017e8:	add	x16, x16, #0xf00
  4017ec:	br	x17

00000000004017f0 <efi_tilt_backslashes@plt>:
  4017f0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4017f4:	ldr	x17, [x16, #3848]
  4017f8:	add	x16, x16, #0xf08
  4017fc:	br	x17

0000000000401800 <__errno_location@plt>:
  401800:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401804:	ldr	x17, [x16, #3856]
  401808:	add	x16, x16, #0xf10
  40180c:	br	x17

0000000000401810 <strv_free@plt>:
  401810:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401814:	ldr	x17, [x16, #3864]
  401818:	add	x16, x16, #0xf18
  40181c:	br	x17

0000000000401820 <find_xbootldr_and_warn@plt>:
  401820:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401824:	ldr	x17, [x16, #3872]
  401828:	add	x16, x16, #0xf20
  40182c:	br	x17

0000000000401830 <strv_extend@plt>:
  401830:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401834:	ldr	x17, [x16, #3880]
  401838:	add	x16, x16, #0xf28
  40183c:	br	x17

0000000000401840 <strndup@plt>:
  401840:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401844:	ldr	x17, [x16, #3888]
  401848:	add	x16, x16, #0xf30
  40184c:	br	x17

0000000000401850 <terminal_urlify_man@plt>:
  401850:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401854:	ldr	x17, [x16, #3896]
  401858:	add	x16, x16, #0xf38
  40185c:	br	x17

0000000000401860 <__stack_chk_fail@plt>:
  401860:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401864:	ldr	x17, [x16, #3904]
  401868:	add	x16, x16, #0xf40
  40186c:	br	x17

0000000000401870 <ask_password_agent_close@plt>:
  401870:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401874:	ldr	x17, [x16, #3912]
  401878:	add	x16, x16, #0xf48
  40187c:	br	x17

0000000000401880 <version@plt>:
  401880:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401884:	ldr	x17, [x16, #3920]
  401888:	add	x16, x16, #0xf50
  40188c:	br	x17

0000000000401890 <pager_close@plt>:
  401890:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401894:	ldr	x17, [x16, #3928]
  401898:	add	x16, x16, #0xf58
  40189c:	br	x17

00000000004018a0 <log_internal_realm@plt>:
  4018a0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4018a4:	ldr	x17, [x16, #3936]
  4018a8:	add	x16, x16, #0xf60
  4018ac:	br	x17

00000000004018b0 <strv_join_prefix@plt>:
  4018b0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4018b4:	ldr	x17, [x16, #3944]
  4018b8:	add	x16, x16, #0xf68
  4018bc:	br	x17

00000000004018c0 <detect_container@plt>:
  4018c0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4018c4:	ldr	x17, [x16, #3952]
  4018c8:	add	x16, x16, #0xf70
  4018cc:	br	x17

00000000004018d0 <strcmp@plt>:
  4018d0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4018d4:	ldr	x17, [x16, #3960]
  4018d8:	add	x16, x16, #0xf78
  4018dc:	br	x17

00000000004018e0 <strdup@plt>:
  4018e0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4018e4:	ldr	x17, [x16, #3968]
  4018e8:	add	x16, x16, #0xf80
  4018ec:	br	x17

00000000004018f0 <asprintf@plt>:
  4018f0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4018f4:	ldr	x17, [x16, #3976]
  4018f8:	add	x16, x16, #0xf88
  4018fc:	br	x17

0000000000401900 <colors_enabled@plt>:
  401900:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401904:	ldr	x17, [x16, #3984]
  401908:	add	x16, x16, #0xf90
  40190c:	br	x17

0000000000401910 <free@plt>:
  401910:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401914:	ldr	x17, [x16, #3992]
  401918:	add	x16, x16, #0xf98
  40191c:	br	x17

0000000000401920 <puts@plt>:
  401920:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401924:	ldr	x17, [x16, #4000]
  401928:	add	x16, x16, #0xfa0
  40192c:	br	x17

0000000000401930 <fsync_path_at@plt>:
  401930:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401934:	ldr	x17, [x16, #4008]
  401938:	add	x16, x16, #0xfa8
  40193c:	br	x17

0000000000401940 <mac_selinux_finish@plt>:
  401940:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401944:	ldr	x17, [x16, #4016]
  401948:	add	x16, x16, #0xfb0
  40194c:	br	x17

0000000000401950 <syncfs@plt>:
  401950:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401954:	ldr	x17, [x16, #4024]
  401958:	add	x16, x16, #0xfb8
  40195c:	br	x17

0000000000401960 <printf@plt>:
  401960:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401964:	ldr	x17, [x16, #4032]
  401968:	add	x16, x16, #0xfc0
  40196c:	br	x17

0000000000401970 <open64@plt>:
  401970:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401974:	ldr	x17, [x16, #4040]
  401978:	add	x16, x16, #0xfc8
  40197c:	br	x17

0000000000401980 <find_esp_and_warn@plt>:
  401980:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401984:	ldr	x17, [x16, #4048]
  401988:	add	x16, x16, #0xfd0
  40198c:	br	x17

0000000000401990 <log_open@plt>:
  401990:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  401994:	ldr	x17, [x16, #4056]
  401998:	add	x16, x16, #0xfd8
  40199c:	br	x17

00000000004019a0 <log_oom_internal@plt>:
  4019a0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4019a4:	ldr	x17, [x16, #4064]
  4019a8:	add	x16, x16, #0xfe0
  4019ac:	br	x17

00000000004019b0 <log_get_max_level_realm@plt>:
  4019b0:	adrp	x16, 414000 <__FRAME_END__+0xfae0>
  4019b4:	ldr	x17, [x16, #4072]
  4019b8:	add	x16, x16, #0xfe8
  4019bc:	br	x17

Disassembly of section .text:

00000000004019c0 <main>:
  4019c0:	stp	x29, x30, [sp, #-64]!
  4019c4:	adrp	x3, 415000 <saved_argv@@SD_SHARED>
  4019c8:	adrp	x2, 415000 <saved_argv@@SD_SHARED>
  4019cc:	mov	x29, sp
  4019d0:	stp	x19, x20, [sp, #16]
  4019d4:	mov	w19, w0
  4019d8:	mov	w0, #0x0                   	// #0
  4019dc:	mov	x20, x1
  4019e0:	str	w19, [x3, #16]
  4019e4:	str	x1, [x2]
  4019e8:	stp	x21, x22, [sp, #32]
  4019ec:	stp	x23, x24, [sp, #48]
  4019f0:	bl	4016b0 <log_parse_environment_realm@plt>
  4019f4:	bl	401990 <log_open@plt>
  4019f8:	tbnz	w19, #31, 401bc8 <main+0x208>
  4019fc:	cbz	x20, 401c0c <main+0x24c>
  401a00:	adrp	x22, 404000 <options.11221>
  401a04:	adrp	x21, 403000 <verb_status+0xa0>
  401a08:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401a0c:	add	x22, x22, #0x0
  401a10:	add	x21, x21, #0xe80
  401a14:	add	x23, x0, #0x28
  401a18:	adrp	x24, 415000 <saved_argv@@SD_SHARED>
  401a1c:	mov	x3, x22
  401a20:	mov	x2, x21
  401a24:	mov	x1, x20
  401a28:	mov	w0, w19
  401a2c:	mov	x4, #0x0                   	// #0
  401a30:	bl	401750 <getopt_long@plt>
  401a34:	tbnz	w0, #31, 401aec <main+0x12c>
  401a38:	cmp	w0, #0x100
  401a3c:	b.eq	401b10 <main+0x150>  // b.none
  401a40:	b.gt	401ad4 <main+0x114>
  401a44:	cmp	w0, #0x3f
  401a48:	b.ne	401ab4 <main+0xf4>  // b.any
  401a4c:	mov	w21, #0xffffffea            	// #-22
  401a50:	bl	401870 <ask_password_agent_close@plt>
  401a54:	bl	4016a0 <polkit_agent_close@plt>
  401a58:	bl	401890 <pager_close@plt>
  401a5c:	bl	401940 <mac_selinux_finish@plt>
  401a60:	adrp	x0, 403000 <verb_status+0xa0>
  401a64:	ldr	x19, [x0, #3848]
  401a68:	cbz	x19, 401a9c <main+0xdc>
  401a6c:	adrp	x0, 403000 <verb_status+0xa0>
  401a70:	add	x19, x19, #0x7
  401a74:	and	x19, x19, #0xfffffffffffffff8
  401a78:	ldr	x20, [x0, #3856]
  401a7c:	cmp	x19, x20
  401a80:	b.cs	401a9c <main+0xdc>  // b.hs, b.nlast
  401a84:	nop
  401a88:	ldp	x0, x1, [x19]
  401a8c:	add	x19, x19, #0x10
  401a90:	blr	x1
  401a94:	cmp	x19, x20
  401a98:	b.cc	401a88 <main+0xc8>  // b.lo, b.ul, b.last
  401a9c:	lsr	w0, w21, #31
  401aa0:	ldp	x19, x20, [sp, #16]
  401aa4:	ldp	x21, x22, [sp, #32]
  401aa8:	ldp	x23, x24, [sp, #48]
  401aac:	ldp	x29, x30, [sp], #64
  401ab0:	ret
  401ab4:	cmp	w0, #0x68
  401ab8:	b.ne	401c30 <main+0x270>  // b.any
  401abc:	mov	x2, #0x0                   	// #0
  401ac0:	mov	x1, #0x0                   	// #0
  401ac4:	mov	w21, #0x0                   	// #0
  401ac8:	mov	w0, #0x0                   	// #0
  401acc:	bl	401d70 <help>
  401ad0:	b	401a50 <main+0x90>
  401ad4:	cmp	w0, #0x101
  401ad8:	b.ne	401c30 <main+0x270>  // b.any
  401adc:	bl	401880 <version@plt>
  401ae0:	mov	w21, w0
  401ae4:	cmp	w21, #0x0
  401ae8:	b.le	401a50 <main+0x90>
  401aec:	bl	4018c0 <detect_container@plt>
  401af0:	cmp	w0, #0x0
  401af4:	b.le	401b78 <main+0x1b8>
  401af8:	mov	w0, #0x0                   	// #0
  401afc:	bl	4019b0 <log_get_max_level_realm@plt>
  401b00:	cmp	w0, #0x2
  401b04:	b.gt	401b44 <main+0x184>
  401b08:	mov	w21, #0xffffffa1            	// #-95
  401b0c:	b	401a50 <main+0x90>
  401b10:	ldr	x1, [x24, #24]
  401b14:	mov	x0, x23
  401b18:	bl	401830 <strv_extend@plt>
  401b1c:	tbz	w0, #31, 401a1c <main+0x5c>
  401b20:	adrp	x3, 403000 <verb_status+0xa0>
  401b24:	adrp	x1, 403000 <verb_status+0xa0>
  401b28:	add	x3, x3, #0xf90
  401b2c:	add	x1, x1, #0x583
  401b30:	mov	w2, #0x55                  	// #85
  401b34:	mov	w0, #0x0                   	// #0
  401b38:	bl	4019a0 <log_oom_internal@plt>
  401b3c:	mov	w21, w0
  401b40:	b	401ae4 <main+0x124>
  401b44:	mov	w1, #0x5f                  	// #95
  401b48:	adrp	x5, 403000 <verb_status+0xa0>
  401b4c:	movk	w1, #0x4000, lsl #16
  401b50:	add	x5, x5, #0xe88
  401b54:	adrp	x4, 403000 <verb_status+0xa0>
  401b58:	adrp	x2, 403000 <verb_status+0xa0>
  401b5c:	add	x4, x4, #0xff8
  401b60:	add	x2, x2, #0x583
  401b64:	mov	w3, #0x203                 	// #515
  401b68:	mov	w0, #0x3                   	// #3
  401b6c:	bl	4018a0 <log_internal_realm@plt>
  401b70:	mov	w21, w0
  401b74:	b	401a50 <main+0x90>
  401b78:	bl	4017a0 <is_efi_boot@plt>
  401b7c:	tst	w0, #0xff
  401b80:	b.ne	401bec <main+0x22c>  // b.any
  401b84:	mov	w0, #0x0                   	// #0
  401b88:	bl	4019b0 <log_get_max_level_realm@plt>
  401b8c:	cmp	w0, #0x2
  401b90:	b.le	401b08 <main+0x148>
  401b94:	mov	w1, #0x5f                  	// #95
  401b98:	adrp	x5, 403000 <verb_status+0xa0>
  401b9c:	movk	w1, #0x4000, lsl #16
  401ba0:	add	x5, x5, #0xeb8
  401ba4:	adrp	x4, 403000 <verb_status+0xa0>
  401ba8:	adrp	x2, 403000 <verb_status+0xa0>
  401bac:	add	x4, x4, #0xff8
  401bb0:	add	x2, x2, #0x583
  401bb4:	mov	w3, #0x207                 	// #519
  401bb8:	mov	w0, #0x3                   	// #3
  401bbc:	bl	4018a0 <log_internal_realm@plt>
  401bc0:	mov	w21, w0
  401bc4:	b	401a50 <main+0x90>
  401bc8:	adrp	x4, 403000 <verb_status+0xa0>
  401bcc:	adrp	x1, 403000 <verb_status+0xa0>
  401bd0:	adrp	x2, 403000 <verb_status+0xa0>
  401bd4:	add	x4, x4, #0xf28
  401bd8:	add	x1, x1, #0xe58
  401bdc:	add	x2, x2, #0x583
  401be0:	mov	w3, #0x45                  	// #69
  401be4:	mov	w0, #0x0                   	// #0
  401be8:	bl	401730 <log_assert_failed_realm@plt>
  401bec:	mov	x1, x20
  401bf0:	mov	w0, w19
  401bf4:	adrp	x2, 404000 <options.11221>
  401bf8:	mov	x3, #0x0                   	// #0
  401bfc:	add	x2, x2, #0x80
  401c00:	bl	4016d0 <dispatch_verb@plt>
  401c04:	mov	w21, w0
  401c08:	b	401a50 <main+0x90>
  401c0c:	adrp	x4, 403000 <verb_status+0xa0>
  401c10:	adrp	x1, 403000 <verb_status+0xa0>
  401c14:	adrp	x2, 403000 <verb_status+0xa0>
  401c18:	add	x4, x4, #0xf28
  401c1c:	add	x1, x1, #0xe68
  401c20:	add	x2, x2, #0x583
  401c24:	mov	w3, #0x46                  	// #70
  401c28:	mov	w0, #0x0                   	// #0
  401c2c:	bl	401730 <log_assert_failed_realm@plt>
  401c30:	adrp	x4, 403000 <verb_status+0xa0>
  401c34:	adrp	x1, 403000 <verb_status+0xa0>
  401c38:	adrp	x2, 403000 <verb_status+0xa0>
  401c3c:	add	x4, x4, #0xf28
  401c40:	add	x1, x1, #0xe70
  401c44:	add	x2, x2, #0x583
  401c48:	mov	w3, #0x5c                  	// #92
  401c4c:	mov	w0, #0x0                   	// #0
  401c50:	bl	401770 <log_assert_failed_unreachable_realm@plt>

0000000000401c54 <_start>:
  401c54:	mov	x29, #0x0                   	// #0
  401c58:	mov	x30, #0x0                   	// #0
  401c5c:	mov	x5, x0
  401c60:	ldr	x1, [sp]
  401c64:	add	x2, sp, #0x8
  401c68:	mov	x6, sp
  401c6c:	movz	x0, #0x0, lsl #48
  401c70:	movk	x0, #0x0, lsl #32
  401c74:	movk	x0, #0x40, lsl #16
  401c78:	movk	x0, #0x19c0
  401c7c:	movz	x3, #0x0, lsl #48
  401c80:	movk	x3, #0x0, lsl #32
  401c84:	movk	x3, #0x40, lsl #16
  401c88:	movk	x3, #0x3498
  401c8c:	movz	x4, #0x0, lsl #48
  401c90:	movk	x4, #0x0, lsl #32
  401c94:	movk	x4, #0x40, lsl #16
  401c98:	movk	x4, #0x3518
  401c9c:	bl	401660 <__libc_start_main@plt>
  401ca0:	bl	4017c0 <abort@plt>

0000000000401ca4 <call_weak_fn>:
  401ca4:	adrp	x0, 414000 <__FRAME_END__+0xfae0>
  401ca8:	ldr	x0, [x0, #4088]
  401cac:	cbz	x0, 401cb4 <call_weak_fn+0x10>
  401cb0:	b	401690 <__gmon_start__@plt>
  401cb4:	ret

0000000000401cb8 <deregister_tm_clones>:
  401cb8:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401cbc:	add	x0, x0, #0x0
  401cc0:	adrp	x1, 415000 <saved_argv@@SD_SHARED>
  401cc4:	add	x1, x1, #0x0
  401cc8:	cmp	x1, x0
  401ccc:	b.eq	401ce4 <deregister_tm_clones+0x2c>  // b.none
  401cd0:	adrp	x1, 403000 <verb_status+0xa0>
  401cd4:	ldr	x1, [x1, #1328]
  401cd8:	cbz	x1, 401ce4 <deregister_tm_clones+0x2c>
  401cdc:	mov	x16, x1
  401ce0:	br	x16
  401ce4:	ret

0000000000401ce8 <register_tm_clones>:
  401ce8:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401cec:	add	x0, x0, #0x0
  401cf0:	adrp	x1, 415000 <saved_argv@@SD_SHARED>
  401cf4:	add	x1, x1, #0x0
  401cf8:	sub	x1, x1, x0
  401cfc:	lsr	x2, x1, #63
  401d00:	add	x1, x2, x1, asr #3
  401d04:	cmp	xzr, x1, asr #1
  401d08:	asr	x1, x1, #1
  401d0c:	b.eq	401d24 <register_tm_clones+0x3c>  // b.none
  401d10:	adrp	x2, 403000 <verb_status+0xa0>
  401d14:	ldr	x2, [x2, #1336]
  401d18:	cbz	x2, 401d24 <register_tm_clones+0x3c>
  401d1c:	mov	x16, x2
  401d20:	br	x16
  401d24:	ret

0000000000401d28 <__do_global_dtors_aux>:
  401d28:	stp	x29, x30, [sp, #-32]!
  401d2c:	mov	x29, sp
  401d30:	str	x19, [sp, #16]
  401d34:	adrp	x19, 415000 <saved_argv@@SD_SHARED>
  401d38:	ldrb	w0, [x19, #32]
  401d3c:	cbnz	w0, 401d4c <__do_global_dtors_aux+0x24>
  401d40:	bl	401cb8 <deregister_tm_clones>
  401d44:	mov	w0, #0x1                   	// #1
  401d48:	strb	w0, [x19, #32]
  401d4c:	ldr	x19, [sp, #16]
  401d50:	ldp	x29, x30, [sp], #32
  401d54:	ret

0000000000401d58 <frame_dummy>:
  401d58:	b	401ce8 <register_tm_clones>
  401d5c:	nop

0000000000401d60 <__unique_prefix_static_destructor_wrapper0>:
  401d60:	ldr	x0, [x0]
  401d64:	cbz	x0, 401d6c <__unique_prefix_static_destructor_wrapper0+0xc>
  401d68:	b	401810 <strv_free@plt>
  401d6c:	ret

0000000000401d70 <help>:
  401d70:	stp	x29, x30, [sp, #-80]!
  401d74:	adrp	x1, 403000 <verb_status+0xa0>
  401d78:	add	x1, x1, #0x558
  401d7c:	mov	x29, sp
  401d80:	stp	x19, x20, [sp, #16]
  401d84:	adrp	x19, 414000 <__FRAME_END__+0xfae0>
  401d88:	add	x19, x19, #0xbf0
  401d8c:	ldr	x0, [x19]
  401d90:	str	x0, [sp, #72]
  401d94:	mov	x0, #0x0                   	// #0
  401d98:	add	x2, sp, #0x40
  401d9c:	adrp	x0, 403000 <verb_status+0xa0>
  401da0:	add	x0, x0, #0x560
  401da4:	stp	x21, x22, [sp, #32]
  401da8:	str	xzr, [sp, #64]
  401dac:	bl	401850 <terminal_urlify_man@plt>
  401db0:	tbnz	w0, #31, 401e3c <help+0xcc>
  401db4:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401db8:	str	x23, [sp, #48]
  401dbc:	adrp	x21, 403000 <verb_status+0xa0>
  401dc0:	adrp	x20, 403000 <verb_status+0xa0>
  401dc4:	ldr	x23, [x0, #8]
  401dc8:	bl	401900 <colors_enabled@plt>
  401dcc:	tst	w0, #0xff
  401dd0:	add	x21, x21, #0xe00
  401dd4:	add	x20, x20, #0x540
  401dd8:	mov	w22, #0x0                   	// #0
  401ddc:	csel	x20, x20, x21, ne  // ne = any
  401de0:	bl	401900 <colors_enabled@plt>
  401de4:	tst	w0, #0xff
  401de8:	ldr	x4, [sp, #64]
  401dec:	adrp	x3, 403000 <verb_status+0xa0>
  401df0:	add	x3, x3, #0x550
  401df4:	mov	x1, x23
  401df8:	mov	x2, x20
  401dfc:	csel	x3, x3, x21, ne  // ne = any
  401e00:	adrp	x0, 403000 <verb_status+0xa0>
  401e04:	add	x0, x0, #0x5a0
  401e08:	bl	401960 <printf@plt>
  401e0c:	ldr	x23, [sp, #48]
  401e10:	ldr	x0, [sp, #64]
  401e14:	bl	401910 <free@plt>
  401e18:	ldr	x1, [sp, #72]
  401e1c:	ldr	x0, [x19]
  401e20:	eor	x0, x1, x0
  401e24:	cbnz	x0, 401e60 <help+0xf0>
  401e28:	mov	w0, w22
  401e2c:	ldp	x19, x20, [sp, #16]
  401e30:	ldp	x21, x22, [sp, #32]
  401e34:	ldp	x29, x30, [sp], #80
  401e38:	ret
  401e3c:	adrp	x3, 403000 <verb_status+0xa0>
  401e40:	adrp	x1, 403000 <verb_status+0xa0>
  401e44:	add	x3, x3, #0xf88
  401e48:	add	x1, x1, #0x583
  401e4c:	mov	w2, #0x20                  	// #32
  401e50:	mov	w0, #0x0                   	// #0
  401e54:	bl	4019a0 <log_oom_internal@plt>
  401e58:	mov	w22, w0
  401e5c:	b	401e10 <help+0xa0>
  401e60:	str	x23, [sp, #48]
  401e64:	bl	401860 <__stack_chk_fail@plt>

0000000000401e68 <parse_counter>:
  401e68:	stp	x29, x30, [sp, #-128]!
  401e6c:	mov	x29, sp
  401e70:	stp	x19, x20, [sp, #16]
  401e74:	adrp	x20, 414000 <__FRAME_END__+0xfae0>
  401e78:	add	x20, x20, #0xbf0
  401e7c:	ldr	x4, [x20]
  401e80:	str	x4, [x29, #120]
  401e84:	mov	x4, #0x0                   	// #0
  401e88:	stp	x21, x22, [sp, #32]
  401e8c:	stp	x23, x24, [sp, #48]
  401e90:	stp	x25, x26, [sp, #64]
  401e94:	str	x27, [sp, #80]
  401e98:	cbz	x0, 402030 <parse_counter+0x1c8>
  401e9c:	ldr	x4, [x1]
  401ea0:	mov	x22, x1
  401ea4:	cbz	x4, 402074 <parse_counter+0x20c>
  401ea8:	mov	x21, x0
  401eac:	ldrb	w0, [x4]
  401eb0:	cmp	w0, #0x2b
  401eb4:	b.ne	402098 <parse_counter+0x230>  // b.any
  401eb8:	add	x19, x4, #0x1
  401ebc:	adrp	x26, 403000 <verb_status+0xa0>
  401ec0:	add	x26, x26, #0x758
  401ec4:	mov	x25, x2
  401ec8:	mov	x24, x3
  401ecc:	mov	x0, x19
  401ed0:	mov	x1, x26
  401ed4:	bl	4017e0 <strspn@plt>
  401ed8:	mov	x23, x0
  401edc:	cbnz	x0, 401f24 <parse_counter+0xbc>
  401ee0:	mov	w0, #0x0                   	// #0
  401ee4:	bl	4019b0 <log_get_max_level_realm@plt>
  401ee8:	cmp	w0, #0x2
  401eec:	b.gt	401fa0 <parse_counter+0x138>
  401ef0:	mov	w0, #0xffffffea            	// #-22
  401ef4:	ldr	x2, [x29, #120]
  401ef8:	ldr	x1, [x20]
  401efc:	eor	x1, x2, x1
  401f00:	cbnz	x1, 4021b4 <parse_counter+0x34c>
  401f04:	mov	sp, x29
  401f08:	ldp	x19, x20, [sp, #16]
  401f0c:	ldp	x21, x22, [sp, #32]
  401f10:	ldp	x23, x24, [sp, #48]
  401f14:	ldp	x25, x26, [sp, #64]
  401f18:	ldr	x27, [sp, #80]
  401f1c:	ldp	x29, x30, [sp], #128
  401f20:	ret
  401f24:	mov	x1, x0
  401f28:	mov	x0, x19
  401f2c:	bl	4016c0 <strnlen@plt>
  401f30:	mov	x2, x0
  401f34:	add	x0, x0, #0x10
  401f38:	mov	x1, x19
  401f3c:	and	x0, x0, #0xfffffffffffffff0
  401f40:	sub	sp, sp, x0
  401f44:	mov	x0, sp
  401f48:	strb	wzr, [x0, x2]
  401f4c:	bl	4016e0 <memcpy@plt>
  401f50:	add	x1, x29, #0x68
  401f54:	bl	401670 <safe_atollu@plt>
  401f58:	mov	w27, w0
  401f5c:	tbnz	w0, #31, 402054 <parse_counter+0x1ec>
  401f60:	ldrb	w0, [x19, x23]
  401f64:	add	x19, x19, x23
  401f68:	cmp	w0, #0x2d
  401f6c:	b.eq	401fd4 <parse_counter+0x16c>  // b.none
  401f70:	str	xzr, [x29, #112]
  401f74:	mov	w0, #0x0                   	// #0
  401f78:	bl	4019b0 <log_get_max_level_realm@plt>
  401f7c:	mov	x1, #0x0                   	// #0
  401f80:	cmp	w0, #0x3
  401f84:	b.gt	402108 <parse_counter+0x2a0>
  401f88:	str	x19, [x22]
  401f8c:	mov	w0, #0x0                   	// #0
  401f90:	ldr	x2, [x29, #104]
  401f94:	str	x2, [x25]
  401f98:	str	x1, [x24]
  401f9c:	b	401ef4 <parse_counter+0x8c>
  401fa0:	mov	w1, #0x16                  	// #22
  401fa4:	mov	x6, x21
  401fa8:	movk	w1, #0x4000, lsl #16
  401fac:	adrp	x5, 403000 <verb_status+0xa0>
  401fb0:	adrp	x4, 403000 <verb_status+0xa0>
  401fb4:	add	x5, x5, #0x768
  401fb8:	add	x4, x4, #0xfb0
  401fbc:	adrp	x2, 403000 <verb_status+0xa0>
  401fc0:	mov	w3, #0xa0                  	// #160
  401fc4:	add	x2, x2, #0x583
  401fc8:	mov	w0, #0x3                   	// #3
  401fcc:	bl	4018a0 <log_internal_realm@plt>
  401fd0:	b	401ef4 <parse_counter+0x8c>
  401fd4:	add	x19, x19, #0x1
  401fd8:	mov	x1, x26
  401fdc:	mov	x0, x19
  401fe0:	bl	4017e0 <strspn@plt>
  401fe4:	mov	x26, x0
  401fe8:	cbnz	x0, 4020bc <parse_counter+0x254>
  401fec:	mov	w0, #0x0                   	// #0
  401ff0:	bl	4019b0 <log_get_max_level_realm@plt>
  401ff4:	cmp	w0, #0x2
  401ff8:	b.le	401ef0 <parse_counter+0x88>
  401ffc:	mov	w1, #0x16                  	// #22
  402000:	mov	x6, x21
  402004:	movk	w1, #0x4000, lsl #16
  402008:	adrp	x5, 403000 <verb_status+0xa0>
  40200c:	adrp	x4, 403000 <verb_status+0xa0>
  402010:	add	x5, x5, #0x7f8
  402014:	add	x4, x4, #0xfb0
  402018:	adrp	x2, 403000 <verb_status+0xa0>
  40201c:	mov	w3, #0xb0                  	// #176
  402020:	add	x2, x2, #0x583
  402024:	mov	w0, #0x3                   	// #3
  402028:	bl	4018a0 <log_internal_realm@plt>
  40202c:	b	401ef4 <parse_counter+0x8c>
  402030:	adrp	x4, 403000 <verb_status+0xa0>
  402034:	adrp	x1, 403000 <verb_status+0xa0>
  402038:	adrp	x2, 403000 <verb_status+0xa0>
  40203c:	add	x4, x4, #0xf38
  402040:	add	x1, x1, #0x738
  402044:	add	x2, x2, #0x583
  402048:	mov	w3, #0x95                  	// #149
  40204c:	mov	w0, #0x0                   	// #0
  402050:	bl	401730 <log_assert_failed_realm@plt>
  402054:	mov	w0, #0x0                   	// #0
  402058:	bl	4019b0 <log_get_max_level_realm@plt>
  40205c:	cmp	w0, #0x2
  402060:	b.gt	402134 <parse_counter+0x2cc>
  402064:	neg	w0, w27
  402068:	and	w0, w0, #0xff
  40206c:	neg	w0, w0
  402070:	b	401ef4 <parse_counter+0x8c>
  402074:	adrp	x4, 403000 <verb_status+0xa0>
  402078:	adrp	x1, 403000 <verb_status+0xa0>
  40207c:	adrp	x2, 403000 <verb_status+0xa0>
  402080:	add	x4, x4, #0xf38
  402084:	add	x1, x1, #0x740
  402088:	add	x2, x2, #0x583
  40208c:	mov	w3, #0x99                  	// #153
  402090:	mov	w0, #0x0                   	// #0
  402094:	bl	401730 <log_assert_failed_realm@plt>
  402098:	adrp	x4, 403000 <verb_status+0xa0>
  40209c:	adrp	x1, 403000 <verb_status+0xa0>
  4020a0:	adrp	x2, 403000 <verb_status+0xa0>
  4020a4:	add	x4, x4, #0xf38
  4020a8:	add	x1, x1, #0x748
  4020ac:	add	x2, x2, #0x583
  4020b0:	mov	w3, #0x9a                  	// #154
  4020b4:	mov	w0, #0x0                   	// #0
  4020b8:	bl	401730 <log_assert_failed_realm@plt>
  4020bc:	mov	x1, x0
  4020c0:	mov	x0, x19
  4020c4:	bl	4016c0 <strnlen@plt>
  4020c8:	mov	x2, x0
  4020cc:	add	x0, x0, #0x10
  4020d0:	mov	x1, x19
  4020d4:	and	x0, x0, #0xfffffffffffffff0
  4020d8:	sub	sp, sp, x0
  4020dc:	mov	x0, sp
  4020e0:	strb	wzr, [x0, x2]
  4020e4:	bl	4016e0 <memcpy@plt>
  4020e8:	add	x1, x29, #0x70
  4020ec:	bl	401670 <safe_atollu@plt>
  4020f0:	mov	w23, w0
  4020f4:	tbnz	w0, #31, 402164 <parse_counter+0x2fc>
  4020f8:	ldr	x1, [x29, #112]
  4020fc:	add	x19, x19, x26
  402100:	cbnz	x1, 401f88 <parse_counter+0x120>
  402104:	b	401f74 <parse_counter+0x10c>
  402108:	adrp	x5, 403000 <verb_status+0xa0>
  40210c:	adrp	x4, 403000 <verb_status+0xa0>
  402110:	add	x5, x5, #0x888
  402114:	add	x4, x4, #0xfb0
  402118:	adrp	x2, 403000 <verb_status+0xa0>
  40211c:	mov	w3, #0xbe                  	// #190
  402120:	add	x2, x2, #0x583
  402124:	mov	w0, #0x4                   	// #4
  402128:	bl	4018a0 <log_internal_realm@plt>
  40212c:	ldr	x1, [x29, #112]
  402130:	b	401f88 <parse_counter+0x120>
  402134:	mov	x6, x21
  402138:	mov	w1, w27
  40213c:	adrp	x5, 403000 <verb_status+0xa0>
  402140:	adrp	x4, 403000 <verb_status+0xa0>
  402144:	add	x5, x5, #0x7b0
  402148:	add	x4, x4, #0xfb0
  40214c:	adrp	x2, 403000 <verb_status+0xa0>
  402150:	mov	w3, #0xa7                  	// #167
  402154:	add	x2, x2, #0x583
  402158:	mov	w0, #0x3                   	// #3
  40215c:	bl	4018a0 <log_internal_realm@plt>
  402160:	b	401ef4 <parse_counter+0x8c>
  402164:	mov	w0, #0x0                   	// #0
  402168:	bl	4019b0 <log_get_max_level_realm@plt>
  40216c:	cmp	w0, #0x2
  402170:	b.gt	402184 <parse_counter+0x31c>
  402174:	neg	w0, w23
  402178:	and	w0, w0, #0xff
  40217c:	neg	w0, w0
  402180:	b	401ef4 <parse_counter+0x8c>
  402184:	mov	x6, x21
  402188:	mov	w1, w23
  40218c:	adrp	x5, 403000 <verb_status+0xa0>
  402190:	adrp	x4, 403000 <verb_status+0xa0>
  402194:	add	x5, x5, #0x840
  402198:	add	x4, x4, #0xfb0
  40219c:	adrp	x2, 403000 <verb_status+0xa0>
  4021a0:	mov	w3, #0xb7                  	// #183
  4021a4:	add	x2, x2, #0x583
  4021a8:	mov	w0, #0x3                   	// #3
  4021ac:	bl	4018a0 <log_internal_realm@plt>
  4021b0:	b	401ef4 <parse_counter+0x8c>
  4021b4:	bl	401860 <__stack_chk_fail@plt>

00000000004021b8 <acquire_path>:
  4021b8:	stp	x29, x30, [sp, #-96]!
  4021bc:	mov	x29, sp
  4021c0:	stp	x21, x22, [sp, #32]
  4021c4:	adrp	x21, 415000 <saved_argv@@SD_SHARED>
  4021c8:	ldr	x0, [x21, #40]
  4021cc:	stp	x19, x20, [sp, #16]
  4021d0:	adrp	x20, 414000 <__FRAME_END__+0xfae0>
  4021d4:	add	x20, x20, #0xbf0
  4021d8:	stp	xzr, xzr, [sp, #72]
  4021dc:	ldr	x1, [x20]
  4021e0:	str	x1, [sp, #88]
  4021e4:	mov	x1, #0x0                   	// #0
  4021e8:	cbz	x0, 40222c <acquire_path+0x74>
  4021ec:	ldr	x0, [x0]
  4021f0:	cbz	x0, 40222c <acquire_path+0x74>
  4021f4:	mov	w19, #0x0                   	// #0
  4021f8:	mov	x0, x1
  4021fc:	bl	401910 <free@plt>
  402200:	ldr	x0, [sp, #72]
  402204:	bl	401910 <free@plt>
  402208:	ldr	x1, [sp, #88]
  40220c:	ldr	x0, [x20]
  402210:	eor	x0, x1, x0
  402214:	cbnz	x0, 4023bc <acquire_path+0x204>
  402218:	mov	w0, w19
  40221c:	ldp	x19, x20, [sp, #16]
  402220:	ldp	x21, x22, [sp, #32]
  402224:	ldp	x29, x30, [sp], #96
  402228:	ret
  40222c:	add	x2, sp, #0x48
  402230:	mov	x6, #0x0                   	// #0
  402234:	mov	x5, #0x0                   	// #0
  402238:	mov	x4, #0x0                   	// #0
  40223c:	mov	x3, #0x0                   	// #0
  402240:	mov	w1, #0x0                   	// #0
  402244:	mov	x0, #0x0                   	// #0
  402248:	bl	401980 <find_esp_and_warn@plt>
  40224c:	cmp	w0, #0x0
  402250:	mov	w22, #0xffffff82            	// #-126
  402254:	mov	w19, w0
  402258:	ccmp	w0, w22, #0x4, lt  // lt = tstop
  40225c:	b.ne	4022bc <acquire_path+0x104>  // b.any
  402260:	add	x2, sp, #0x50
  402264:	mov	x3, #0x0                   	// #0
  402268:	mov	w1, #0x0                   	// #0
  40226c:	mov	x0, #0x0                   	// #0
  402270:	bl	401820 <find_xbootldr_and_warn@plt>
  402274:	cmp	w0, #0x0
  402278:	mov	w19, w0
  40227c:	ccmp	w0, w22, #0x4, lt  // lt = tstop
  402280:	b.ne	4022bc <acquire_path+0x104>  // b.any
  402284:	ldp	x0, x1, [sp, #72]
  402288:	cbz	x0, 4022c4 <acquire_path+0x10c>
  40228c:	mov	x2, #0x0                   	// #0
  402290:	bl	4017d0 <strv_new_internal@plt>
  402294:	mov	x19, x0
  402298:	cbz	x19, 4022dc <acquire_path+0x124>
  40229c:	ldr	x0, [x21, #40]
  4022a0:	bl	401810 <strv_free@plt>
  4022a4:	str	x19, [x21, #40]
  4022a8:	mov	w0, #0x0                   	// #0
  4022ac:	bl	4019b0 <log_get_max_level_realm@plt>
  4022b0:	cmp	w0, #0x6
  4022b4:	b.gt	402304 <acquire_path+0x14c>
  4022b8:	mov	w19, #0x0                   	// #0
  4022bc:	ldr	x1, [sp, #80]
  4022c0:	b	4021f8 <acquire_path+0x40>
  4022c4:	cbz	x1, 40233c <acquire_path+0x184>
  4022c8:	mov	x0, x1
  4022cc:	mov	x1, #0x0                   	// #0
  4022d0:	bl	4017d0 <strv_new_internal@plt>
  4022d4:	mov	x19, x0
  4022d8:	b	402298 <acquire_path+0xe0>
  4022dc:	adrp	x3, 403000 <verb_status+0xa0>
  4022e0:	adrp	x1, 403000 <verb_status+0xa0>
  4022e4:	add	x3, x3, #0xfa0
  4022e8:	add	x1, x1, #0x583
  4022ec:	mov	w2, #0x7c                  	// #124
  4022f0:	mov	w0, #0x0                   	// #0
  4022f4:	bl	4019a0 <log_oom_internal@plt>
  4022f8:	mov	w19, w0
  4022fc:	ldr	x1, [sp, #80]
  402300:	b	4021f8 <acquire_path+0x40>
  402304:	adrp	x1, 403000 <verb_status+0xa0>
  402308:	add	x1, x1, #0x9b0
  40230c:	mov	x2, #0x0                   	// #0
  402310:	mov	x0, x19
  402314:	bl	4018b0 <strv_join_prefix@plt>
  402318:	mov	x19, x0
  40231c:	mov	w0, #0x0                   	// #0
  402320:	bl	4019b0 <log_get_max_level_realm@plt>
  402324:	cmp	w0, #0x6
  402328:	b.gt	40238c <acquire_path+0x1d4>
  40232c:	mov	x0, x19
  402330:	bl	401910 <free@plt>
  402334:	ldr	x1, [sp, #80]
  402338:	b	4021f4 <acquire_path+0x3c>
  40233c:	str	x1, [sp, #56]
  402340:	bl	4019b0 <log_get_max_level_realm@plt>
  402344:	mov	w19, #0xfffffffe            	// #-2
  402348:	cmp	w0, #0x2
  40234c:	ldr	x1, [sp, #56]
  402350:	b.le	4021f8 <acquire_path+0x40>
  402354:	mov	w1, #0x2                   	// #2
  402358:	adrp	x5, 403000 <verb_status+0xa0>
  40235c:	movk	w1, #0x4000, lsl #16
  402360:	add	x5, x5, #0x928
  402364:	adrp	x4, 403000 <verb_status+0xa0>
  402368:	adrp	x2, 403000 <verb_status+0xa0>
  40236c:	add	x4, x4, #0xfa0
  402370:	add	x2, x2, #0x583
  402374:	mov	w3, #0x73                  	// #115
  402378:	mov	w0, #0x3                   	// #3
  40237c:	bl	4018a0 <log_internal_realm@plt>
  402380:	mov	w19, w0
  402384:	ldr	x1, [sp, #80]
  402388:	b	4021f8 <acquire_path+0x40>
  40238c:	mov	x6, x19
  402390:	adrp	x5, 403000 <verb_status+0xa0>
  402394:	adrp	x4, 403000 <verb_status+0xa0>
  402398:	add	x5, x5, #0x9b8
  40239c:	add	x4, x4, #0xfa0
  4023a0:	adrp	x2, 403000 <verb_status+0xa0>
  4023a4:	mov	w3, #0x84                  	// #132
  4023a8:	add	x2, x2, #0x583
  4023ac:	mov	w1, #0x0                   	// #0
  4023b0:	mov	w0, #0x7                   	// #7
  4023b4:	bl	4018a0 <log_internal_realm@plt>
  4023b8:	b	40232c <acquire_path+0x174>
  4023bc:	bl	401860 <__stack_chk_fail@plt>

00000000004023c0 <make_bad>:
  4023c0:	stp	x29, x30, [sp, #-64]!
  4023c4:	mov	x29, sp
  4023c8:	stp	x19, x20, [sp, #16]
  4023cc:	adrp	x19, 414000 <__FRAME_END__+0xfae0>
  4023d0:	add	x19, x19, #0xbf0
  4023d4:	ldr	x4, [x19]
  4023d8:	str	x4, [sp, #56]
  4023dc:	mov	x4, #0x0                   	// #0
  4023e0:	str	x21, [sp, #32]
  4023e4:	str	xzr, [sp, #48]
  4023e8:	cbz	x0, 40246c <make_bad+0xac>
  4023ec:	mov	x4, x2
  4023f0:	cbz	x2, 402490 <make_bad+0xd0>
  4023f4:	mov	x20, x3
  4023f8:	cbz	x1, 402450 <make_bad+0x90>
  4023fc:	mov	x3, x1
  402400:	mov	x2, x0
  402404:	adrp	x1, 403000 <verb_status+0xa0>
  402408:	add	x0, sp, #0x30
  40240c:	add	x1, x1, #0xa00
  402410:	bl	4018f0 <asprintf@plt>
  402414:	tbnz	w0, #31, 4024b4 <make_bad+0xf4>
  402418:	ldr	x0, [sp, #48]
  40241c:	mov	w21, #0x0                   	// #0
  402420:	str	x0, [x20]
  402424:	mov	x0, #0x0                   	// #0
  402428:	bl	401910 <free@plt>
  40242c:	ldr	x1, [sp, #56]
  402430:	ldr	x0, [x19]
  402434:	eor	x0, x1, x0
  402438:	cbnz	x0, 4024c0 <make_bad+0x100>
  40243c:	mov	w0, w21
  402440:	ldp	x19, x20, [sp, #16]
  402444:	ldr	x21, [sp, #32]
  402448:	ldp	x29, x30, [sp], #64
  40244c:	ret
  402450:	adrp	x1, 403000 <verb_status+0xa0>
  402454:	mov	x3, #0x0                   	// #0
  402458:	add	x1, x1, #0x9f8
  40245c:	bl	401700 <strjoin_real@plt>
  402460:	cbnz	x0, 40241c <make_bad+0x5c>
  402464:	mov	w21, #0xfffffff4            	// #-12
  402468:	b	402428 <make_bad+0x68>
  40246c:	adrp	x4, 403000 <verb_status+0xa0>
  402470:	adrp	x1, 403000 <verb_status+0xa0>
  402474:	adrp	x2, 403000 <verb_status+0xa0>
  402478:	add	x4, x4, #0xf58
  40247c:	add	x1, x1, #0x9e8
  402480:	add	x2, x2, #0x583
  402484:	mov	w3, #0x124                 	// #292
  402488:	mov	w0, #0x0                   	// #0
  40248c:	bl	401730 <log_assert_failed_realm@plt>
  402490:	adrp	x4, 403000 <verb_status+0xa0>
  402494:	adrp	x1, 403000 <verb_status+0xa0>
  402498:	adrp	x2, 403000 <verb_status+0xa0>
  40249c:	add	x4, x4, #0xf58
  4024a0:	add	x1, x1, #0x9f0
  4024a4:	add	x2, x2, #0x583
  4024a8:	mov	w3, #0x125                 	// #293
  4024ac:	mov	w0, #0x0                   	// #0
  4024b0:	bl	401730 <log_assert_failed_realm@plt>
  4024b4:	mov	w21, #0xfffffff4            	// #-12
  4024b8:	ldr	x0, [sp, #48]
  4024bc:	b	402428 <make_bad+0x68>
  4024c0:	bl	401860 <__stack_chk_fail@plt>
  4024c4:	nop

00000000004024c8 <acquire_boot_count_path.constprop.0>:
  4024c8:	stp	x29, x30, [sp, #-144]!
  4024cc:	adrp	x5, 403000 <verb_status+0xa0>
  4024d0:	add	x5, x5, #0xf18
  4024d4:	mov	x29, sp
  4024d8:	stp	x21, x22, [sp, #32]
  4024dc:	mov	x22, x0
  4024e0:	mov	x21, x2
  4024e4:	stp	x23, x24, [sp, #48]
  4024e8:	mov	x23, x1
  4024ec:	mov	x24, x4
  4024f0:	ldp	x0, x1, [x5]
  4024f4:	stp	x19, x20, [sp, #16]
  4024f8:	adrp	x20, 414000 <__FRAME_END__+0xfae0>
  4024fc:	add	x20, x20, #0xbf0
  402500:	stp	x25, x26, [sp, #64]
  402504:	ldr	x2, [x20]
  402508:	str	x2, [sp, #136]
  40250c:	mov	x2, #0x0                   	// #0
  402510:	mov	x25, x3
  402514:	adrp	x2, 403000 <verb_status+0xa0>
  402518:	add	x3, sp, #0x68
  40251c:	add	x2, x2, #0xa10
  402520:	str	x27, [sp, #80]
  402524:	str	xzr, [sp, #104]
  402528:	bl	401680 <efi_get_variable_string@plt>
  40252c:	cmn	w0, #0x2
  402530:	b.eq	402768 <acquire_boot_count_path.constprop.0+0x2a0>  // b.none
  402534:	mov	w19, w0
  402538:	tbnz	w0, #31, 4025a8 <acquire_boot_count_path.constprop.0+0xe0>
  40253c:	ldr	x0, [sp, #104]
  402540:	bl	4017f0 <efi_tilt_backslashes@plt>
  402544:	ldr	x26, [sp, #104]
  402548:	mov	x0, x26
  40254c:	bl	4017b0 <path_is_normalized@plt>
  402550:	tst	w0, #0xff
  402554:	b.eq	40260c <acquire_boot_count_path.constprop.0+0x144>  // b.none
  402558:	mov	x0, x26
  40255c:	bl	401780 <path_is_absolute@plt>
  402560:	tst	w0, #0xff
  402564:	b.ne	402660 <acquire_boot_count_path.constprop.0+0x198>  // b.any
  402568:	mov	w0, #0x0                   	// #0
  40256c:	mov	x27, #0x0                   	// #0
  402570:	bl	4019b0 <log_get_max_level_realm@plt>
  402574:	mov	w19, #0xffffffea            	// #-22
  402578:	cmp	w0, #0x2
  40257c:	b.le	4025cc <acquire_boot_count_path.constprop.0+0x104>
  402580:	mov	w1, #0x16                  	// #22
  402584:	adrp	x5, 403000 <verb_status+0xa0>
  402588:	adrp	x4, 403000 <verb_status+0xa0>
  40258c:	mov	x6, x26
  402590:	add	x5, x5, #0xaa8
  402594:	add	x4, x4, #0xfc0
  402598:	movk	w1, #0x4000, lsl #16
  40259c:	adrp	x2, 403000 <verb_status+0xa0>
  4025a0:	mov	w3, #0xe5                  	// #229
  4025a4:	b	402648 <acquire_boot_count_path.constprop.0+0x180>
  4025a8:	mov	w0, #0x0                   	// #0
  4025ac:	bl	4019b0 <log_get_max_level_realm@plt>
  4025b0:	cmp	w0, #0x2
  4025b4:	b.gt	4026f0 <acquire_boot_count_path.constprop.0+0x228>
  4025b8:	neg	w19, w19
  4025bc:	mov	x27, #0x0                   	// #0
  4025c0:	and	w19, w19, #0xff
  4025c4:	ldr	x26, [sp, #104]
  4025c8:	neg	w19, w19
  4025cc:	mov	x0, x27
  4025d0:	bl	401910 <free@plt>
  4025d4:	mov	x0, x26
  4025d8:	bl	401910 <free@plt>
  4025dc:	ldr	x1, [sp, #136]
  4025e0:	ldr	x0, [x20]
  4025e4:	eor	x0, x1, x0
  4025e8:	cbnz	x0, 402778 <acquire_boot_count_path.constprop.0+0x2b0>
  4025ec:	mov	w0, w19
  4025f0:	ldp	x19, x20, [sp, #16]
  4025f4:	ldp	x21, x22, [sp, #32]
  4025f8:	ldp	x23, x24, [sp, #48]
  4025fc:	ldp	x25, x26, [sp, #64]
  402600:	ldr	x27, [sp, #80]
  402604:	ldp	x29, x30, [sp], #144
  402608:	ret
  40260c:	mov	w0, #0x0                   	// #0
  402610:	mov	x27, #0x0                   	// #0
  402614:	bl	4019b0 <log_get_max_level_realm@plt>
  402618:	mov	w19, #0xffffffea            	// #-22
  40261c:	cmp	w0, #0x2
  402620:	b.le	4025cc <acquire_boot_count_path.constprop.0+0x104>
  402624:	mov	w1, #0x16                  	// #22
  402628:	adrp	x5, 403000 <verb_status+0xa0>
  40262c:	adrp	x4, 403000 <verb_status+0xa0>
  402630:	mov	x6, x26
  402634:	add	x5, x5, #0xa60
  402638:	add	x4, x4, #0xfc0
  40263c:	movk	w1, #0x4000, lsl #16
  402640:	adrp	x2, 403000 <verb_status+0xa0>
  402644:	mov	w3, #0xe0                  	// #224
  402648:	add	x2, x2, #0x583
  40264c:	mov	w0, #0x3                   	// #3
  402650:	bl	4018a0 <log_internal_realm@plt>
  402654:	mov	w19, w0
  402658:	ldr	x26, [sp, #104]
  40265c:	b	4025cc <acquire_boot_count_path.constprop.0+0x104>
  402660:	mov	x0, x26
  402664:	bl	4016f0 <last_path_component@plt>
  402668:	mov	w1, #0x2b                  	// #43
  40266c:	bl	401720 <strrchr@plt>
  402670:	str	x0, [sp, #112]
  402674:	mov	x27, x0
  402678:	cbz	x0, 402728 <acquire_boot_count_path.constprop.0+0x260>
  40267c:	ldr	x19, [sp, #104]
  402680:	sub	x1, x0, x19
  402684:	mov	x0, x19
  402688:	bl	401840 <strndup@plt>
  40268c:	mov	x27, x0
  402690:	cbz	x0, 4027a0 <acquire_boot_count_path.constprop.0+0x2d8>
  402694:	mov	x0, x19
  402698:	add	x3, sp, #0x80
  40269c:	add	x2, sp, #0x78
  4026a0:	add	x1, sp, #0x70
  4026a4:	bl	401e68 <parse_counter>
  4026a8:	mov	w19, w0
  4026ac:	tbnz	w0, #31, 402658 <acquire_boot_count_path.constprop.0+0x190>
  4026b0:	ldr	x0, [sp, #112]
  4026b4:	bl	4018e0 <strdup@plt>
  4026b8:	cbz	x0, 40277c <acquire_boot_count_path.constprop.0+0x2b4>
  4026bc:	str	x0, [x24]
  4026c0:	ldr	x0, [sp, #104]
  4026c4:	str	x0, [x22]
  4026c8:	str	x27, [x23]
  4026cc:	cbz	x21, 4026d8 <acquire_boot_count_path.constprop.0+0x210>
  4026d0:	ldr	x0, [sp, #120]
  4026d4:	str	x0, [x21]
  4026d8:	ldr	x0, [sp, #128]
  4026dc:	mov	x26, #0x0                   	// #0
  4026e0:	mov	x27, #0x0                   	// #0
  4026e4:	mov	w19, #0x0                   	// #0
  4026e8:	str	x0, [x25]
  4026ec:	b	4025cc <acquire_boot_count_path.constprop.0+0x104>
  4026f0:	mov	w1, w19
  4026f4:	adrp	x5, 403000 <verb_status+0xa0>
  4026f8:	adrp	x4, 403000 <verb_status+0xa0>
  4026fc:	add	x5, x5, #0xa28
  402700:	add	x4, x4, #0xfc0
  402704:	adrp	x2, 403000 <verb_status+0xa0>
  402708:	mov	w3, #0xdb                  	// #219
  40270c:	add	x2, x2, #0x583
  402710:	mov	w0, #0x3                   	// #3
  402714:	mov	x27, #0x0                   	// #0
  402718:	bl	4018a0 <log_internal_realm@plt>
  40271c:	mov	w19, w0
  402720:	ldr	x26, [sp, #104]
  402724:	b	4025cc <acquire_boot_count_path.constprop.0+0x104>
  402728:	mov	w0, #0x0                   	// #0
  40272c:	mov	w19, #0xffffffea            	// #-22
  402730:	bl	4019b0 <log_get_max_level_realm@plt>
  402734:	cmp	w0, #0x2
  402738:	ldr	x26, [sp, #104]
  40273c:	b.le	4025cc <acquire_boot_count_path.constprop.0+0x104>
  402740:	mov	w1, #0x16                  	// #22
  402744:	adrp	x5, 403000 <verb_status+0xa0>
  402748:	adrp	x4, 403000 <verb_status+0xa0>
  40274c:	mov	x6, x26
  402750:	add	x5, x5, #0xaf0
  402754:	add	x4, x4, #0xfc0
  402758:	movk	w1, #0x4000, lsl #16
  40275c:	adrp	x2, 403000 <verb_status+0xa0>
  402760:	mov	w3, #0xec                  	// #236
  402764:	b	402648 <acquire_boot_count_path.constprop.0+0x180>
  402768:	mov	x27, #0x0                   	// #0
  40276c:	mov	w19, #0xffffffcf            	// #-49
  402770:	ldr	x26, [sp, #104]
  402774:	b	4025cc <acquire_boot_count_path.constprop.0+0x104>
  402778:	bl	401860 <__stack_chk_fail@plt>
  40277c:	adrp	x3, 403000 <verb_status+0xa0>
  402780:	adrp	x1, 403000 <verb_status+0xa0>
  402784:	add	x3, x3, #0xfc0
  402788:	add	x1, x1, #0x583
  40278c:	mov	w2, #0xfd                  	// #253
  402790:	bl	4019a0 <log_oom_internal@plt>
  402794:	mov	w19, w0
  402798:	ldr	x26, [sp, #104]
  40279c:	b	4025cc <acquire_boot_count_path.constprop.0+0x104>
  4027a0:	adrp	x3, 403000 <verb_status+0xa0>
  4027a4:	adrp	x1, 403000 <verb_status+0xa0>
  4027a8:	add	x3, x3, #0xfc0
  4027ac:	add	x1, x1, #0x583
  4027b0:	mov	w2, #0xf3                  	// #243
  4027b4:	mov	w0, #0x0                   	// #0
  4027b8:	bl	4019a0 <log_oom_internal@plt>
  4027bc:	mov	w19, w0
  4027c0:	ldr	x26, [sp, #104]
  4027c4:	b	4025cc <acquire_boot_count_path.constprop.0+0x104>

00000000004027c8 <verb_set>:
  4027c8:	stp	x29, x30, [sp, #-176]!
  4027cc:	mov	x2, #0x0                   	// #0
  4027d0:	mov	x29, sp
  4027d4:	stp	x19, x20, [sp, #16]
  4027d8:	adrp	x19, 414000 <__FRAME_END__+0xfae0>
  4027dc:	add	x19, x19, #0xbf0
  4027e0:	ldr	x0, [x19]
  4027e4:	str	x0, [sp, #168]
  4027e8:	mov	x0, #0x0                   	// #0
  4027ec:	mov	x20, x1
  4027f0:	add	x4, sp, #0x90
  4027f4:	add	x3, sp, #0xa0
  4027f8:	add	x1, sp, #0x88
  4027fc:	add	x0, sp, #0x80
  402800:	stp	x21, x22, [sp, #32]
  402804:	stp	x23, x24, [sp, #48]
  402808:	stp	x27, x28, [sp, #80]
  40280c:	stp	xzr, xzr, [sp, #128]
  402810:	stp	xzr, xzr, [sp, #144]
  402814:	bl	4024c8 <acquire_boot_count_path.constprop.0>
  402818:	mov	w24, w0
  40281c:	cmn	w0, #0x31
  402820:	b.eq	402a18 <verb_set+0x250>  // b.none
  402824:	tbnz	w0, #31, 4029b4 <verb_set+0x1ec>
  402828:	bl	4021b8 <acquire_path>
  40282c:	mov	w24, w0
  402830:	tbnz	w0, #31, 4029b4 <verb_set+0x1ec>
  402834:	ldp	x0, x1, [sp, #136]
  402838:	cbz	x0, 402bf0 <verb_set+0x428>
  40283c:	cbz	x1, 402ca8 <verb_set+0x4e0>
  402840:	mov	x2, #0x0                   	// #0
  402844:	bl	401700 <strjoin_real@plt>
  402848:	mov	x21, x0
  40284c:	cbz	x0, 402a60 <verb_set+0x298>
  402850:	ldp	x0, x2, [sp, #136]
  402854:	add	x3, sp, #0x98
  402858:	ldr	x1, [sp, #160]
  40285c:	bl	4023c0 <make_bad>
  402860:	tbnz	w0, #31, 402cd0 <verb_set+0x508>
  402864:	stp	x25, x26, [sp, #64]
  402868:	adrp	x1, 403000 <verb_status+0xa0>
  40286c:	add	x1, x1, #0xb70
  402870:	ldr	x22, [x20]
  402874:	mov	x0, x22
  402878:	bl	4018d0 <strcmp@plt>
  40287c:	cbnz	w0, 402a88 <verb_set+0x2c0>
  402880:	ldr	x24, [sp, #128]
  402884:	mov	x23, x21
  402888:	ldr	x0, [sp, #152]
  40288c:	str	x0, [sp, #112]
  402890:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402894:	mov	x28, #0x0                   	// #0
  402898:	ldr	x25, [x0, #40]
  40289c:	cbz	x25, 402998 <verb_set+0x1d0>
  4028a0:	adrp	x0, 403000 <verb_status+0xa0>
  4028a4:	add	x0, x0, #0xcd8
  4028a8:	str	x0, [sp, #120]
  4028ac:	mov	w27, #0x4000                	// #16384
  4028b0:	ldr	x0, [x25]
  4028b4:	adrp	x26, 403000 <verb_status+0xa0>
  4028b8:	movk	w27, #0x8, lsl #16
  4028bc:	add	x26, x26, #0xfe8
  4028c0:	cbz	x0, 402998 <verb_set+0x1d0>
  4028c4:	mov	w1, w27
  4028c8:	bl	401970 <open64@plt>
  4028cc:	mov	w22, w0
  4028d0:	tbnz	w0, #31, 402cf8 <verb_set+0x530>
  4028d4:	cbz	x24, 402af8 <verb_set+0x330>
  4028d8:	ldrb	w1, [x24]
  4028dc:	cmp	w1, #0x2f
  4028e0:	b.ne	402ad4 <verb_set+0x30c>  // b.any
  4028e4:	add	x1, x24, #0x1
  4028e8:	cbz	x23, 402af8 <verb_set+0x330>
  4028ec:	ldrb	w2, [x23]
  4028f0:	cmp	w2, #0x2f
  4028f4:	b.ne	402ad4 <verb_set+0x30c>  // b.any
  4028f8:	add	x3, x23, #0x1
  4028fc:	mov	w2, w0
  402900:	str	x3, [sp, #104]
  402904:	bl	401790 <rename_noreplace@plt>
  402908:	mov	w1, w0
  40290c:	cmn	w0, #0x11
  402910:	b.eq	402db8 <verb_set+0x5f0>  // b.none
  402914:	cmn	w0, #0x2
  402918:	ldr	x3, [sp, #104]
  40291c:	b.eq	402c14 <verb_set+0x44c>  // b.none
  402920:	mov	w0, #0x0                   	// #0
  402924:	str	w1, [sp, #104]
  402928:	bl	4019b0 <log_get_max_level_realm@plt>
  40292c:	ldr	w1, [sp, #104]
  402930:	tbnz	w1, #31, 402e38 <verb_set+0x670>
  402934:	cmp	w0, #0x6
  402938:	b.gt	402b94 <verb_set+0x3cc>
  40293c:	mov	x0, x23
  402940:	bl	401760 <dirname_malloc@plt>
  402944:	mov	x28, x0
  402948:	cbz	x0, 402e14 <verb_set+0x64c>
  40294c:	ldrb	w0, [x0]
  402950:	cmp	w0, #0x2f
  402954:	b.ne	402ad4 <verb_set+0x30c>  // b.any
  402958:	add	x1, x28, #0x1
  40295c:	mov	w0, w22
  402960:	bl	401930 <fsync_path_at@plt>
  402964:	tbnz	w0, #31, 402b58 <verb_set+0x390>
  402968:	mov	w0, w22
  40296c:	bl	401950 <syncfs@plt>
  402970:	tbnz	w0, #31, 402b1c <verb_set+0x354>
  402974:	mov	w0, #0x0                   	// #0
  402978:	bl	4019b0 <log_get_max_level_realm@plt>
  40297c:	cmp	w0, #0x5
  402980:	b.gt	402bc4 <verb_set+0x3fc>
  402984:	add	x25, x25, #0x8
  402988:	mov	w0, w22
  40298c:	bl	401710 <safe_close@plt>
  402990:	ldr	x0, [x25]
  402994:	cbnz	x0, 4028c4 <verb_set+0xfc>
  402998:	mov	w0, #0x0                   	// #0
  40299c:	mov	w24, #0x1                   	// #1
  4029a0:	bl	4019b0 <log_get_max_level_realm@plt>
  4029a4:	cmp	w0, #0x2
  4029a8:	b.gt	402ddc <verb_set+0x614>
  4029ac:	ldp	x25, x26, [sp, #64]
  4029b0:	b	4029bc <verb_set+0x1f4>
  4029b4:	mov	x21, #0x0                   	// #0
  4029b8:	mov	x28, #0x0                   	// #0
  4029bc:	mov	x0, x28
  4029c0:	bl	401910 <free@plt>
  4029c4:	ldr	x0, [sp, #152]
  4029c8:	bl	401910 <free@plt>
  4029cc:	mov	x0, x21
  4029d0:	bl	401910 <free@plt>
  4029d4:	ldr	x0, [sp, #144]
  4029d8:	bl	401910 <free@plt>
  4029dc:	ldr	x0, [sp, #136]
  4029e0:	bl	401910 <free@plt>
  4029e4:	ldr	x0, [sp, #128]
  4029e8:	bl	401910 <free@plt>
  4029ec:	ldr	x1, [sp, #168]
  4029f0:	ldr	x0, [x19]
  4029f4:	eor	x0, x1, x0
  4029f8:	cbnz	x0, 402f1c <verb_set+0x754>
  4029fc:	mov	w0, w24
  402a00:	ldp	x19, x20, [sp, #16]
  402a04:	ldp	x21, x22, [sp, #32]
  402a08:	ldp	x23, x24, [sp, #48]
  402a0c:	ldp	x27, x28, [sp, #80]
  402a10:	ldp	x29, x30, [sp], #176
  402a14:	ret
  402a18:	mov	w0, #0x0                   	// #0
  402a1c:	mov	x21, #0x0                   	// #0
  402a20:	bl	4019b0 <log_get_max_level_realm@plt>
  402a24:	mov	x28, #0x0                   	// #0
  402a28:	cmp	w0, #0x2
  402a2c:	b.le	4029bc <verb_set+0x1f4>
  402a30:	mov	w1, w24
  402a34:	adrp	x5, 403000 <verb_status+0xa0>
  402a38:	adrp	x4, 403000 <verb_status+0xa0>
  402a3c:	add	x5, x5, #0xb40
  402a40:	add	x4, x4, #0xfe8
  402a44:	adrp	x2, 403000 <verb_status+0xa0>
  402a48:	mov	w3, #0x194                 	// #404
  402a4c:	add	x2, x2, #0x583
  402a50:	mov	w0, #0x3                   	// #3
  402a54:	bl	4018a0 <log_internal_realm@plt>
  402a58:	mov	w24, w0
  402a5c:	b	4029bc <verb_set+0x1f4>
  402a60:	adrp	x3, 403000 <verb_status+0xa0>
  402a64:	adrp	x1, 403000 <verb_status+0xa0>
  402a68:	add	x3, x3, #0xfe8
  402a6c:	add	x1, x1, #0x583
  402a70:	mov	w2, #0x19e                 	// #414
  402a74:	mov	w0, #0x0                   	// #0
  402a78:	mov	x28, #0x0                   	// #0
  402a7c:	bl	4019a0 <log_oom_internal@plt>
  402a80:	mov	w24, w0
  402a84:	b	4029bc <verb_set+0x1f4>
  402a88:	adrp	x1, 403000 <verb_status+0xa0>
  402a8c:	mov	x0, x22
  402a90:	add	x1, x1, #0xb78
  402a94:	bl	4018d0 <strcmp@plt>
  402a98:	cbz	w0, 402ac4 <verb_set+0x2fc>
  402a9c:	adrp	x1, 403000 <verb_status+0xa0>
  402aa0:	mov	x0, x22
  402aa4:	add	x1, x1, #0xb80
  402aa8:	bl	4018d0 <strcmp@plt>
  402aac:	cbnz	w0, 402d34 <verb_set+0x56c>
  402ab0:	ldr	x0, [sp, #152]
  402ab4:	mov	x24, x21
  402ab8:	str	x0, [sp, #112]
  402abc:	ldr	x23, [sp, #128]
  402ac0:	b	402890 <verb_set+0xc8>
  402ac4:	str	x21, [sp, #112]
  402ac8:	ldr	x24, [sp, #128]
  402acc:	ldr	x23, [sp, #152]
  402ad0:	b	402890 <verb_set+0xc8>
  402ad4:	adrp	x4, 403000 <verb_status+0xa0>
  402ad8:	adrp	x1, 403000 <verb_status+0xa0>
  402adc:	adrp	x2, 403000 <verb_status+0xa0>
  402ae0:	add	x4, x4, #0xf68
  402ae4:	add	x1, x1, #0xbd8
  402ae8:	add	x2, x2, #0x583
  402aec:	mov	w3, #0x13a                 	// #314
  402af0:	mov	w0, #0x0                   	// #0
  402af4:	bl	401730 <log_assert_failed_realm@plt>
  402af8:	adrp	x4, 403000 <verb_status+0xa0>
  402afc:	adrp	x1, 403000 <verb_status+0xa0>
  402b00:	adrp	x2, 403000 <verb_status+0xa0>
  402b04:	add	x4, x4, #0xf68
  402b08:	add	x1, x1, #0x738
  402b0c:	add	x2, x2, #0x583
  402b10:	mov	w3, #0x139                 	// #313
  402b14:	mov	w0, #0x0                   	// #0
  402b18:	bl	401730 <log_assert_failed_realm@plt>
  402b1c:	mov	w0, #0x0                   	// #0
  402b20:	bl	4019b0 <log_get_max_level_realm@plt>
  402b24:	cmp	w0, #0x6
  402b28:	b.le	40297c <verb_set+0x1b4>
  402b2c:	bl	401800 <__errno_location@plt>
  402b30:	ldr	w1, [x0]
  402b34:	mov	x4, x26
  402b38:	adrp	x5, 403000 <verb_status+0xa0>
  402b3c:	adrp	x2, 403000 <verb_status+0xa0>
  402b40:	add	x5, x5, #0xca0
  402b44:	add	x2, x2, #0x583
  402b48:	mov	w3, #0x1e2                 	// #482
  402b4c:	mov	w0, #0x7                   	// #7
  402b50:	bl	4018a0 <log_internal_realm@plt>
  402b54:	b	402974 <verb_set+0x1ac>
  402b58:	mov	w0, #0x0                   	// #0
  402b5c:	bl	4019b0 <log_get_max_level_realm@plt>
  402b60:	cmp	w0, #0x6
  402b64:	b.le	402968 <verb_set+0x1a0>
  402b68:	bl	401800 <__errno_location@plt>
  402b6c:	ldr	w1, [x0]
  402b70:	mov	x4, x26
  402b74:	adrp	x5, 403000 <verb_status+0xa0>
  402b78:	adrp	x2, 403000 <verb_status+0xa0>
  402b7c:	add	x5, x5, #0xc68
  402b80:	add	x2, x2, #0x583
  402b84:	mov	w3, #0x1de                 	// #478
  402b88:	mov	w0, #0x7                   	// #7
  402b8c:	bl	4018a0 <log_internal_realm@plt>
  402b90:	b	402968 <verb_set+0x1a0>
  402b94:	mov	x7, x23
  402b98:	mov	x6, x24
  402b9c:	mov	x4, x26
  402ba0:	adrp	x5, 403000 <verb_status+0xa0>
  402ba4:	adrp	x2, 403000 <verb_status+0xa0>
  402ba8:	add	x5, x5, #0xc40
  402bac:	add	x2, x2, #0x583
  402bb0:	mov	w3, #0x1d5                 	// #469
  402bb4:	mov	w1, #0x0                   	// #0
  402bb8:	mov	w0, #0x7                   	// #7
  402bbc:	bl	4018a0 <log_internal_realm@plt>
  402bc0:	b	40293c <verb_set+0x174>
  402bc4:	ldr	x6, [x20]
  402bc8:	mov	x4, x26
  402bcc:	ldr	x5, [sp, #120]
  402bd0:	adrp	x2, 403000 <verb_status+0xa0>
  402bd4:	ldr	x7, [sp, #160]
  402bd8:	add	x2, x2, #0x583
  402bdc:	mov	w3, #0x1e4                 	// #484
  402be0:	mov	w1, #0x0                   	// #0
  402be4:	mov	w0, #0x6                   	// #6
  402be8:	bl	4018a0 <log_internal_realm@plt>
  402bec:	b	402984 <verb_set+0x1bc>
  402bf0:	adrp	x4, 403000 <verb_status+0xa0>
  402bf4:	adrp	x1, 403000 <verb_status+0xa0>
  402bf8:	adrp	x2, 403000 <verb_status+0xa0>
  402bfc:	add	x4, x4, #0xf48
  402c00:	add	x1, x1, #0x9e8
  402c04:	add	x2, x2, #0x583
  402c08:	mov	w3, #0x111                 	// #273
  402c0c:	stp	x25, x26, [sp, #64]
  402c10:	bl	401730 <log_assert_failed_realm@plt>
  402c14:	ldr	x1, [sp, #112]
  402c18:	cbz	x1, 402af8 <verb_set+0x330>
  402c1c:	ldrb	w0, [x1]
  402c20:	cmp	w0, #0x2f
  402c24:	b.ne	402ad4 <verb_set+0x30c>  // b.any
  402c28:	ldrb	w0, [x23]
  402c2c:	add	x1, x1, #0x1
  402c30:	cmp	w0, #0x2f
  402c34:	b.ne	402ad4 <verb_set+0x30c>  // b.any
  402c38:	mov	w2, w22
  402c3c:	mov	w0, w22
  402c40:	bl	401790 <rename_noreplace@plt>
  402c44:	mov	w1, w0
  402c48:	cmn	w0, #0x11
  402c4c:	b.eq	402db8 <verb_set+0x5f0>  // b.none
  402c50:	cmn	w0, #0x2
  402c54:	ldr	x3, [sp, #104]
  402c58:	b.eq	402d58 <verb_set+0x590>  // b.none
  402c5c:	mov	w0, #0x0                   	// #0
  402c60:	str	w1, [sp, #104]
  402c64:	bl	4019b0 <log_get_max_level_realm@plt>
  402c68:	ldr	w1, [sp, #104]
  402c6c:	tbnz	w1, #31, 402f24 <verb_set+0x75c>
  402c70:	cmp	w0, #0x6
  402c74:	b.le	40293c <verb_set+0x174>
  402c78:	ldr	x6, [sp, #112]
  402c7c:	mov	x7, x23
  402c80:	mov	x4, x26
  402c84:	adrp	x5, 403000 <verb_status+0xa0>
  402c88:	adrp	x2, 403000 <verb_status+0xa0>
  402c8c:	add	x5, x5, #0xc40
  402c90:	add	x2, x2, #0x583
  402c94:	mov	w3, #0x1d0                 	// #464
  402c98:	mov	w1, #0x0                   	// #0
  402c9c:	mov	w0, #0x7                   	// #7
  402ca0:	bl	4018a0 <log_internal_realm@plt>
  402ca4:	b	40293c <verb_set+0x174>
  402ca8:	adrp	x4, 403000 <verb_status+0xa0>
  402cac:	adrp	x1, 403000 <verb_status+0xa0>
  402cb0:	adrp	x2, 403000 <verb_status+0xa0>
  402cb4:	add	x4, x4, #0xf48
  402cb8:	add	x1, x1, #0x9f0
  402cbc:	add	x2, x2, #0x583
  402cc0:	mov	w3, #0x112                 	// #274
  402cc4:	mov	w0, #0x0                   	// #0
  402cc8:	stp	x25, x26, [sp, #64]
  402ccc:	bl	401730 <log_assert_failed_realm@plt>
  402cd0:	adrp	x3, 403000 <verb_status+0xa0>
  402cd4:	adrp	x1, 403000 <verb_status+0xa0>
  402cd8:	add	x3, x3, #0xfe8
  402cdc:	add	x1, x1, #0x583
  402ce0:	mov	w2, #0x1a2                 	// #418
  402ce4:	mov	w0, #0x0                   	// #0
  402ce8:	mov	x28, #0x0                   	// #0
  402cec:	bl	4019a0 <log_oom_internal@plt>
  402cf0:	mov	w24, w0
  402cf4:	b	4029bc <verb_set+0x1f4>
  402cf8:	bl	401800 <__errno_location@plt>
  402cfc:	mov	x1, x0
  402d00:	mov	w0, #0x0                   	// #0
  402d04:	ldr	w20, [x1]
  402d08:	bl	4019b0 <log_get_max_level_realm@plt>
  402d0c:	cmp	w0, #0x2
  402d10:	b.gt	402e50 <verb_set+0x688>
  402d14:	cmp	w20, #0x0
  402d18:	cneg	w20, w20, lt  // lt = tstop
  402d1c:	and	w24, w20, #0xff
  402d20:	neg	w24, w24
  402d24:	mov	w0, w22
  402d28:	bl	401710 <safe_close@plt>
  402d2c:	ldp	x25, x26, [sp, #64]
  402d30:	b	4029bc <verb_set+0x1f4>
  402d34:	adrp	x4, 403000 <verb_status+0xa0>
  402d38:	adrp	x1, 403000 <verb_status+0xa0>
  402d3c:	adrp	x2, 403000 <verb_status+0xa0>
  402d40:	add	x4, x4, #0xf78
  402d44:	add	x1, x1, #0xb90
  402d48:	add	x2, x2, #0x583
  402d4c:	mov	w3, #0x1ae                 	// #430
  402d50:	mov	w0, #0x0                   	// #0
  402d54:	bl	401730 <log_assert_failed_realm@plt>
  402d58:	ldrb	w0, [x23]
  402d5c:	cmp	w0, #0x2f
  402d60:	b.ne	402ad4 <verb_set+0x30c>  // b.any
  402d64:	mov	x1, x3
  402d68:	mov	w0, w22
  402d6c:	mov	w3, #0x0                   	// #0
  402d70:	mov	w2, #0x0                   	// #0
  402d74:	bl	401740 <faccessat@plt>
  402d78:	tbz	w0, #31, 402db8 <verb_set+0x5f0>
  402d7c:	bl	401800 <__errno_location@plt>
  402d80:	ldr	w1, [x0]
  402d84:	str	w1, [sp, #104]
  402d88:	cmp	w1, #0x2
  402d8c:	b.eq	402984 <verb_set+0x1bc>  // b.none
  402d90:	mov	w0, #0x0                   	// #0
  402d94:	bl	4019b0 <log_get_max_level_realm@plt>
  402d98:	ldr	w1, [sp, #104]
  402d9c:	cmp	w0, #0x2
  402da0:	b.gt	402eb8 <verb_set+0x6f0>
  402da4:	cmp	w1, #0x0
  402da8:	cneg	w1, w1, lt  // lt = tstop
  402dac:	and	w24, w1, #0xff
  402db0:	neg	w24, w24
  402db4:	b	402d24 <verb_set+0x55c>
  402db8:	mov	w0, w22
  402dbc:	bl	401710 <safe_close@plt>
  402dc0:	mov	w0, #0x0                   	// #0
  402dc4:	bl	4019b0 <log_get_max_level_realm@plt>
  402dc8:	cmp	w0, #0x6
  402dcc:	b.gt	402e84 <verb_set+0x6bc>
  402dd0:	mov	w24, #0x0                   	// #0
  402dd4:	ldp	x25, x26, [sp, #64]
  402dd8:	b	4029bc <verb_set+0x1f4>
  402ddc:	mov	w1, #0x10                  	// #16
  402de0:	mov	x6, x23
  402de4:	movk	w1, #0x4000, lsl #16
  402de8:	adrp	x5, 403000 <verb_status+0xa0>
  402dec:	adrp	x4, 403000 <verb_status+0xa0>
  402df0:	add	x5, x5, #0xd10
  402df4:	add	x4, x4, #0xfe8
  402df8:	adrp	x2, 403000 <verb_status+0xa0>
  402dfc:	mov	w3, #0x1e7                 	// #487
  402e00:	add	x2, x2, #0x583
  402e04:	mov	w0, #0x3                   	// #3
  402e08:	bl	4018a0 <log_internal_realm@plt>
  402e0c:	ldp	x25, x26, [sp, #64]
  402e10:	b	4029bc <verb_set+0x1f4>
  402e14:	adrp	x3, 403000 <verb_status+0xa0>
  402e18:	adrp	x1, 403000 <verb_status+0xa0>
  402e1c:	add	x3, x3, #0xfe8
  402e20:	add	x1, x1, #0x583
  402e24:	mov	w2, #0x1da                 	// #474
  402e28:	mov	w0, #0x0                   	// #0
  402e2c:	bl	4019a0 <log_oom_internal@plt>
  402e30:	mov	w24, w0
  402e34:	b	402d24 <verb_set+0x55c>
  402e38:	cmp	w0, #0x2
  402e3c:	b.gt	402ee8 <verb_set+0x720>
  402e40:	neg	w24, w1
  402e44:	and	w24, w24, #0xff
  402e48:	neg	w24, w24
  402e4c:	b	402d24 <verb_set+0x55c>
  402e50:	ldr	x6, [x25]
  402e54:	mov	w1, w20
  402e58:	adrp	x5, 403000 <verb_status+0xa0>
  402e5c:	adrp	x4, 403000 <verb_status+0xa0>
  402e60:	add	x5, x5, #0xbb0
  402e64:	add	x4, x4, #0xfe8
  402e68:	adrp	x2, 403000 <verb_status+0xa0>
  402e6c:	mov	w3, #0x1b9                 	// #441
  402e70:	add	x2, x2, #0x583
  402e74:	mov	w0, #0x3                   	// #3
  402e78:	bl	4018a0 <log_internal_realm@plt>
  402e7c:	mov	w24, w0
  402e80:	b	402d24 <verb_set+0x55c>
  402e84:	adrp	x5, 403000 <verb_status+0xa0>
  402e88:	adrp	x4, 403000 <verb_status+0xa0>
  402e8c:	add	x5, x5, #0xd48
  402e90:	add	x4, x4, #0xfe8
  402e94:	adrp	x2, 403000 <verb_status+0xa0>
  402e98:	mov	w3, #0x1eb                 	// #491
  402e9c:	add	x2, x2, #0x583
  402ea0:	mov	w1, #0x0                   	// #0
  402ea4:	mov	w0, #0x7                   	// #7
  402ea8:	mov	w24, #0x0                   	// #0
  402eac:	bl	4018a0 <log_internal_realm@plt>
  402eb0:	ldp	x25, x26, [sp, #64]
  402eb4:	b	4029bc <verb_set+0x1f4>
  402eb8:	mov	x6, x23
  402ebc:	adrp	x5, 403000 <verb_status+0xa0>
  402ec0:	adrp	x4, 403000 <verb_status+0xa0>
  402ec4:	add	x5, x5, #0xbe8
  402ec8:	add	x4, x4, #0xfe8
  402ecc:	adrp	x2, 403000 <verb_status+0xa0>
  402ed0:	mov	w3, #0x1c9                 	// #457
  402ed4:	add	x2, x2, #0x583
  402ed8:	mov	w0, #0x3                   	// #3
  402edc:	bl	4018a0 <log_internal_realm@plt>
  402ee0:	mov	w24, w0
  402ee4:	b	402d24 <verb_set+0x55c>
  402ee8:	mov	x6, x24
  402eec:	mov	x7, x23
  402ef0:	adrp	x5, 403000 <verb_status+0xa0>
  402ef4:	adrp	x4, 403000 <verb_status+0xa0>
  402ef8:	add	x5, x5, #0xc18
  402efc:	add	x4, x4, #0xfe8
  402f00:	adrp	x2, 403000 <verb_status+0xa0>
  402f04:	mov	w3, #0x1d3                 	// #467
  402f08:	add	x2, x2, #0x583
  402f0c:	mov	w0, #0x3                   	// #3
  402f10:	bl	4018a0 <log_internal_realm@plt>
  402f14:	mov	w24, w0
  402f18:	b	402d24 <verb_set+0x55c>
  402f1c:	stp	x25, x26, [sp, #64]
  402f20:	bl	401860 <__stack_chk_fail@plt>
  402f24:	cmp	w0, #0x2
  402f28:	b.le	402e40 <verb_set+0x678>
  402f2c:	ldr	x6, [sp, #112]
  402f30:	mov	x7, x23
  402f34:	adrp	x5, 403000 <verb_status+0xa0>
  402f38:	adrp	x4, 403000 <verb_status+0xa0>
  402f3c:	add	x5, x5, #0xc18
  402f40:	add	x4, x4, #0xfe8
  402f44:	adrp	x2, 403000 <verb_status+0xa0>
  402f48:	mov	w3, #0x1ce                 	// #462
  402f4c:	add	x2, x2, #0x583
  402f50:	mov	w0, #0x3                   	// #3
  402f54:	bl	4018a0 <log_internal_realm@plt>
  402f58:	mov	w24, w0
  402f5c:	b	402d24 <verb_set+0x55c>

0000000000402f60 <verb_status>:
  402f60:	sub	sp, sp, #0xa0
  402f64:	add	x4, sp, #0x78
  402f68:	add	x3, sp, #0x90
  402f6c:	add	x2, sp, #0x88
  402f70:	add	x1, sp, #0x70
  402f74:	stp	x29, x30, [sp, #16]
  402f78:	add	x29, sp, #0x10
  402f7c:	stp	x19, x20, [sp, #32]
  402f80:	adrp	x20, 414000 <__FRAME_END__+0xfae0>
  402f84:	add	x20, x20, #0xbf0
  402f88:	ldr	x0, [x20]
  402f8c:	str	x0, [sp, #152]
  402f90:	mov	x0, #0x0                   	// #0
  402f94:	stp	x21, x22, [sp, #48]
  402f98:	add	x0, sp, #0x68
  402f9c:	stp	xzr, xzr, [sp, #104]
  402fa0:	stp	xzr, xzr, [sp, #120]
  402fa4:	bl	4024c8 <acquire_boot_count_path.constprop.0>
  402fa8:	cmn	w0, #0x31
  402fac:	b.eq	4030d4 <verb_status+0x174>  // b.none
  402fb0:	mov	w19, w0
  402fb4:	tbnz	w0, #31, 403080 <verb_status+0x120>
  402fb8:	bl	4021b8 <acquire_path>
  402fbc:	mov	w19, w0
  402fc0:	tbnz	w0, #31, 403080 <verb_status+0x120>
  402fc4:	ldp	x0, x1, [sp, #112]
  402fc8:	cbz	x0, 4032c4 <verb_status+0x364>
  402fcc:	cbz	x1, 403320 <verb_status+0x3c0>
  402fd0:	mov	x2, #0x0                   	// #0
  402fd4:	bl	401700 <strjoin_real@plt>
  402fd8:	mov	x21, x0
  402fdc:	cbz	x0, 4031e4 <verb_status+0x284>
  402fe0:	ldp	x0, x2, [sp, #112]
  402fe4:	add	x3, sp, #0x80
  402fe8:	ldr	x1, [sp, #144]
  402fec:	bl	4023c0 <make_bad>
  402ff0:	tbnz	w0, #31, 403208 <verb_status+0x2a8>
  402ff4:	mov	w0, #0x0                   	// #0
  402ff8:	stp	x23, x24, [sp, #64]
  402ffc:	bl	4019b0 <log_get_max_level_realm@plt>
  403000:	cmp	w0, #0x6
  403004:	b.gt	403250 <verb_status+0x2f0>
  403008:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  40300c:	ldr	x23, [x0, #40]
  403010:	cbz	x23, 403374 <verb_status+0x414>
  403014:	mov	w24, #0x4000                	// #16384
  403018:	stp	x25, x26, [sp, #80]
  40301c:	add	x25, x21, #0x1
  403020:	movk	w24, #0x8, lsl #16
  403024:	ldr	x0, [x23]
  403028:	cbz	x0, 403370 <verb_status+0x410>
  40302c:	mov	w1, w24
  403030:	bl	401970 <open64@plt>
  403034:	mov	w22, w0
  403038:	tbz	w0, #31, 4030ec <verb_status+0x18c>
  40303c:	bl	401800 <__errno_location@plt>
  403040:	ldr	w19, [x0]
  403044:	cmp	w19, #0x2
  403048:	b.eq	4031d4 <verb_status+0x274>  // b.none
  40304c:	mov	w0, #0x0                   	// #0
  403050:	bl	4019b0 <log_get_max_level_realm@plt>
  403054:	cmp	w0, #0x2
  403058:	b.gt	4032ec <verb_status+0x38c>
  40305c:	cmp	w19, #0x0
  403060:	cneg	w19, w19, lt  // lt = tstop
  403064:	and	w19, w19, #0xff
  403068:	neg	w19, w19
  40306c:	mov	w0, w22
  403070:	bl	401710 <safe_close@plt>
  403074:	ldp	x23, x24, [sp, #64]
  403078:	ldp	x25, x26, [sp, #80]
  40307c:	b	403084 <verb_status+0x124>
  403080:	mov	x21, #0x0                   	// #0
  403084:	ldr	x0, [sp, #128]
  403088:	bl	401910 <free@plt>
  40308c:	mov	x0, x21
  403090:	bl	401910 <free@plt>
  403094:	ldr	x0, [sp, #120]
  403098:	bl	401910 <free@plt>
  40309c:	ldr	x0, [sp, #112]
  4030a0:	bl	401910 <free@plt>
  4030a4:	ldr	x0, [sp, #104]
  4030a8:	bl	401910 <free@plt>
  4030ac:	ldr	x1, [sp, #152]
  4030b0:	ldr	x0, [x20]
  4030b4:	eor	x0, x1, x0
  4030b8:	cbnz	x0, 403480 <verb_status+0x520>
  4030bc:	mov	w0, w19
  4030c0:	ldp	x29, x30, [sp, #16]
  4030c4:	ldp	x19, x20, [sp, #32]
  4030c8:	ldp	x21, x22, [sp, #48]
  4030cc:	add	sp, sp, #0xa0
  4030d0:	ret
  4030d4:	adrp	x0, 403000 <verb_status+0xa0>
  4030d8:	mov	x21, #0x0                   	// #0
  4030dc:	mov	w19, #0x0                   	// #0
  4030e0:	add	x0, x0, #0xd80
  4030e4:	bl	401920 <puts@plt>
  4030e8:	b	403084 <verb_status+0x124>
  4030ec:	ldr	x1, [sp, #104]
  4030f0:	cbz	x1, 40334c <verb_status+0x3ec>
  4030f4:	ldrb	w2, [x1]
  4030f8:	cmp	w2, #0x2f
  4030fc:	b.ne	40322c <verb_status+0x2cc>  // b.any
  403100:	add	x1, x1, #0x1
  403104:	mov	w3, #0x0                   	// #0
  403108:	mov	w2, #0x0                   	// #0
  40310c:	bl	401740 <faccessat@plt>
  403110:	tbz	w0, #31, 403400 <verb_status+0x4a0>
  403114:	bl	401800 <__errno_location@plt>
  403118:	ldr	w19, [x0]
  40311c:	mov	x26, x0
  403120:	cmp	w19, #0x2
  403124:	b.ne	4033bc <verb_status+0x45c>  // b.any
  403128:	ldrb	w0, [x21]
  40312c:	cmp	w0, #0x2f
  403130:	b.ne	40322c <verb_status+0x2cc>  // b.any
  403134:	mov	x1, x25
  403138:	mov	w0, w22
  40313c:	mov	w3, #0x0                   	// #0
  403140:	mov	w2, #0x0                   	// #0
  403144:	bl	401740 <faccessat@plt>
  403148:	tbz	w0, #31, 403414 <verb_status+0x4b4>
  40314c:	ldr	w19, [x26]
  403150:	cmp	w19, #0x2
  403154:	b.ne	403428 <verb_status+0x4c8>  // b.any
  403158:	ldr	x1, [sp, #128]
  40315c:	cbz	x1, 40334c <verb_status+0x3ec>
  403160:	ldrb	w0, [x1]
  403164:	cmp	w0, #0x2f
  403168:	b.ne	40322c <verb_status+0x2cc>  // b.any
  40316c:	add	x1, x1, #0x1
  403170:	mov	w0, w22
  403174:	mov	w3, #0x0                   	// #0
  403178:	mov	w2, #0x0                   	// #0
  40317c:	bl	401740 <faccessat@plt>
  403180:	tbz	w0, #31, 40346c <verb_status+0x50c>
  403184:	ldr	w19, [x26]
  403188:	cmp	w19, #0x2
  40318c:	b.eq	4031d4 <verb_status+0x274>  // b.none
  403190:	mov	w0, #0x0                   	// #0
  403194:	bl	4019b0 <log_get_max_level_realm@plt>
  403198:	cmp	w0, #0x2
  40319c:	b.le	40305c <verb_status+0xfc>
  4031a0:	ldr	x6, [sp, #128]
  4031a4:	mov	w1, w19
  4031a8:	adrp	x5, 403000 <verb_status+0xa0>
  4031ac:	adrp	x4, 403000 <verb_status+0xa0>
  4031b0:	add	x5, x5, #0xe08
  4031b4:	add	x4, x4, #0xfd8
  4031b8:	adrp	x2, 403000 <verb_status+0xa0>
  4031bc:	mov	w3, #0x183                 	// #387
  4031c0:	add	x2, x2, #0x583
  4031c4:	mov	w0, #0x3                   	// #3
  4031c8:	bl	4018a0 <log_internal_realm@plt>
  4031cc:	mov	w19, w0
  4031d0:	b	40306c <verb_status+0x10c>
  4031d4:	mov	w0, w22
  4031d8:	add	x23, x23, #0x8
  4031dc:	bl	401710 <safe_close@plt>
  4031e0:	b	403024 <verb_status+0xc4>
  4031e4:	adrp	x3, 403000 <verb_status+0xa0>
  4031e8:	adrp	x1, 403000 <verb_status+0xa0>
  4031ec:	add	x3, x3, #0xfd8
  4031f0:	add	x1, x1, #0x583
  4031f4:	mov	w2, #0x153                 	// #339
  4031f8:	mov	w0, #0x0                   	// #0
  4031fc:	bl	4019a0 <log_oom_internal@plt>
  403200:	mov	w19, w0
  403204:	b	403084 <verb_status+0x124>
  403208:	adrp	x3, 403000 <verb_status+0xa0>
  40320c:	adrp	x1, 403000 <verb_status+0xa0>
  403210:	add	x3, x3, #0xfd8
  403214:	add	x1, x1, #0x583
  403218:	mov	w2, #0x157                 	// #343
  40321c:	mov	w0, #0x0                   	// #0
  403220:	bl	4019a0 <log_oom_internal@plt>
  403224:	mov	w19, w0
  403228:	b	403084 <verb_status+0x124>
  40322c:	adrp	x4, 403000 <verb_status+0xa0>
  403230:	adrp	x1, 403000 <verb_status+0xa0>
  403234:	adrp	x2, 403000 <verb_status+0xa0>
  403238:	add	x4, x4, #0xf68
  40323c:	add	x1, x1, #0xbd8
  403240:	add	x2, x2, #0x583
  403244:	mov	w3, #0x13a                 	// #314
  403248:	mov	w0, #0x0                   	// #0
  40324c:	bl	401730 <log_assert_failed_realm@plt>
  403250:	ldr	x6, [sp, #104]
  403254:	adrp	x19, 403000 <verb_status+0xa0>
  403258:	add	x19, x19, #0xfd8
  40325c:	mov	x7, x21
  403260:	ldr	x0, [sp, #128]
  403264:	mov	x4, x19
  403268:	adrp	x5, 403000 <verb_status+0xa0>
  40326c:	adrp	x22, 403000 <verb_status+0xa0>
  403270:	add	x5, x5, #0xd88
  403274:	add	x2, x22, #0x583
  403278:	str	x0, [sp]
  40327c:	mov	w3, #0x159                 	// #345
  403280:	mov	w1, #0x0                   	// #0
  403284:	mov	w0, #0x7                   	// #7
  403288:	bl	4018a0 <log_internal_realm@plt>
  40328c:	mov	w0, #0x0                   	// #0
  403290:	bl	4019b0 <log_get_max_level_realm@plt>
  403294:	cmp	w0, #0x6
  403298:	b.le	403008 <verb_status+0xa8>
  40329c:	ldp	x6, x7, [sp, #136]
  4032a0:	mov	x4, x19
  4032a4:	add	x2, x22, #0x583
  4032a8:	adrp	x5, 403000 <verb_status+0xa0>
  4032ac:	mov	w3, #0x160                 	// #352
  4032b0:	add	x5, x5, #0xde0
  4032b4:	mov	w1, #0x0                   	// #0
  4032b8:	mov	w0, #0x7                   	// #7
  4032bc:	bl	4018a0 <log_internal_realm@plt>
  4032c0:	b	403008 <verb_status+0xa8>
  4032c4:	adrp	x4, 403000 <verb_status+0xa0>
  4032c8:	adrp	x1, 403000 <verb_status+0xa0>
  4032cc:	adrp	x2, 403000 <verb_status+0xa0>
  4032d0:	add	x4, x4, #0xf48
  4032d4:	add	x1, x1, #0x9e8
  4032d8:	add	x2, x2, #0x583
  4032dc:	mov	w3, #0x111                 	// #273
  4032e0:	stp	x23, x24, [sp, #64]
  4032e4:	stp	x25, x26, [sp, #80]
  4032e8:	bl	401730 <log_assert_failed_realm@plt>
  4032ec:	ldr	x6, [x23]
  4032f0:	mov	w1, w19
  4032f4:	adrp	x5, 403000 <verb_status+0xa0>
  4032f8:	adrp	x4, 403000 <verb_status+0xa0>
  4032fc:	add	x5, x5, #0xbb0
  403300:	add	x4, x4, #0xfd8
  403304:	adrp	x2, 403000 <verb_status+0xa0>
  403308:	mov	w3, #0x16c                 	// #364
  40330c:	add	x2, x2, #0x583
  403310:	mov	w0, #0x3                   	// #3
  403314:	bl	4018a0 <log_internal_realm@plt>
  403318:	mov	w19, w0
  40331c:	b	40306c <verb_status+0x10c>
  403320:	adrp	x4, 403000 <verb_status+0xa0>
  403324:	adrp	x1, 403000 <verb_status+0xa0>
  403328:	adrp	x2, 403000 <verb_status+0xa0>
  40332c:	add	x4, x4, #0xf48
  403330:	add	x1, x1, #0x9f0
  403334:	add	x2, x2, #0x583
  403338:	mov	w3, #0x112                 	// #274
  40333c:	mov	w0, #0x0                   	// #0
  403340:	stp	x23, x24, [sp, #64]
  403344:	stp	x25, x26, [sp, #80]
  403348:	bl	401730 <log_assert_failed_realm@plt>
  40334c:	adrp	x4, 403000 <verb_status+0xa0>
  403350:	adrp	x1, 403000 <verb_status+0xa0>
  403354:	adrp	x2, 403000 <verb_status+0xa0>
  403358:	add	x4, x4, #0xf68
  40335c:	add	x1, x1, #0x738
  403360:	add	x2, x2, #0x583
  403364:	mov	w3, #0x139                 	// #313
  403368:	mov	w0, #0x0                   	// #0
  40336c:	bl	401730 <log_assert_failed_realm@plt>
  403370:	ldp	x25, x26, [sp, #80]
  403374:	mov	w0, #0x0                   	// #0
  403378:	bl	4019b0 <log_get_max_level_realm@plt>
  40337c:	cmp	w0, #0x2
  403380:	b.le	40348c <verb_status+0x52c>
  403384:	mov	w1, #0x10                  	// #16
  403388:	adrp	x5, 403000 <verb_status+0xa0>
  40338c:	movk	w1, #0x4000, lsl #16
  403390:	add	x5, x5, #0xe30
  403394:	adrp	x4, 403000 <verb_status+0xa0>
  403398:	adrp	x2, 403000 <verb_status+0xa0>
  40339c:	add	x4, x4, #0xfd8
  4033a0:	add	x2, x2, #0x583
  4033a4:	mov	w3, #0x188                 	// #392
  4033a8:	mov	w0, #0x3                   	// #3
  4033ac:	bl	4018a0 <log_internal_realm@plt>
  4033b0:	mov	w19, w0
  4033b4:	ldp	x23, x24, [sp, #64]
  4033b8:	b	403084 <verb_status+0x124>
  4033bc:	mov	w0, #0x0                   	// #0
  4033c0:	bl	4019b0 <log_get_max_level_realm@plt>
  4033c4:	cmp	w0, #0x2
  4033c8:	b.le	40305c <verb_status+0xfc>
  4033cc:	ldr	x6, [sp, #104]
  4033d0:	mov	w1, w19
  4033d4:	adrp	x5, 403000 <verb_status+0xa0>
  4033d8:	adrp	x4, 403000 <verb_status+0xa0>
  4033dc:	add	x5, x5, #0xe08
  4033e0:	add	x4, x4, #0xfd8
  4033e4:	adrp	x2, 403000 <verb_status+0xa0>
  4033e8:	mov	w3, #0x174                 	// #372
  4033ec:	add	x2, x2, #0x583
  4033f0:	mov	w0, #0x3                   	// #3
  4033f4:	bl	4018a0 <log_internal_realm@plt>
  4033f8:	mov	w19, w0
  4033fc:	b	40306c <verb_status+0x10c>
  403400:	adrp	x0, 403000 <verb_status+0xa0>
  403404:	mov	w19, #0x0                   	// #0
  403408:	add	x0, x0, #0xb80
  40340c:	bl	401920 <puts@plt>
  403410:	b	40306c <verb_status+0x10c>
  403414:	adrp	x0, 403000 <verb_status+0xa0>
  403418:	mov	w19, #0x0                   	// #0
  40341c:	add	x0, x0, #0xb70
  403420:	bl	401920 <puts@plt>
  403424:	b	40306c <verb_status+0x10c>
  403428:	mov	w0, #0x0                   	// #0
  40342c:	bl	4019b0 <log_get_max_level_realm@plt>
  403430:	cmp	w0, #0x2
  403434:	b.le	40305c <verb_status+0xfc>
  403438:	mov	w1, w19
  40343c:	mov	x6, x21
  403440:	adrp	x5, 403000 <verb_status+0xa0>
  403444:	adrp	x4, 403000 <verb_status+0xa0>
  403448:	add	x5, x5, #0xe08
  40344c:	add	x4, x4, #0xfd8
  403450:	adrp	x2, 403000 <verb_status+0xa0>
  403454:	mov	w3, #0x17c                 	// #380
  403458:	add	x2, x2, #0x583
  40345c:	mov	w0, #0x3                   	// #3
  403460:	bl	4018a0 <log_internal_realm@plt>
  403464:	mov	w19, w0
  403468:	b	40306c <verb_status+0x10c>
  40346c:	adrp	x0, 403000 <verb_status+0xa0>
  403470:	mov	w19, #0x0                   	// #0
  403474:	add	x0, x0, #0xb78
  403478:	bl	401920 <puts@plt>
  40347c:	b	40306c <verb_status+0x10c>
  403480:	stp	x23, x24, [sp, #64]
  403484:	stp	x25, x26, [sp, #80]
  403488:	bl	401860 <__stack_chk_fail@plt>
  40348c:	mov	w19, #0xfffffff0            	// #-16
  403490:	ldp	x23, x24, [sp, #64]
  403494:	b	403084 <verb_status+0x124>

0000000000403498 <__libc_csu_init>:
  403498:	stp	x29, x30, [sp, #-64]!
  40349c:	mov	x29, sp
  4034a0:	stp	x19, x20, [sp, #16]
  4034a4:	adrp	x20, 414000 <__FRAME_END__+0xfae0>
  4034a8:	add	x20, x20, #0xbe8
  4034ac:	stp	x21, x22, [sp, #32]
  4034b0:	adrp	x21, 414000 <__FRAME_END__+0xfae0>
  4034b4:	add	x21, x21, #0xbe0
  4034b8:	sub	x20, x20, x21
  4034bc:	mov	w22, w0
  4034c0:	stp	x23, x24, [sp, #48]
  4034c4:	mov	x23, x1
  4034c8:	mov	x24, x2
  4034cc:	bl	401620 <_init>
  4034d0:	cmp	xzr, x20, asr #3
  4034d4:	b.eq	403500 <__libc_csu_init+0x68>  // b.none
  4034d8:	asr	x20, x20, #3
  4034dc:	mov	x19, #0x0                   	// #0
  4034e0:	ldr	x3, [x21, x19, lsl #3]
  4034e4:	mov	x2, x24
  4034e8:	add	x19, x19, #0x1
  4034ec:	mov	x1, x23
  4034f0:	mov	w0, w22
  4034f4:	blr	x3
  4034f8:	cmp	x20, x19
  4034fc:	b.ne	4034e0 <__libc_csu_init+0x48>  // b.any
  403500:	ldp	x19, x20, [sp, #16]
  403504:	ldp	x21, x22, [sp, #32]
  403508:	ldp	x23, x24, [sp, #48]
  40350c:	ldp	x29, x30, [sp], #64
  403510:	ret
  403514:	nop

0000000000403518 <__libc_csu_fini>:
  403518:	ret

Disassembly of section .fini:

000000000040351c <_fini>:
  40351c:	stp	x29, x30, [sp, #-16]!
  403520:	mov	x29, sp
  403524:	ldp	x29, x30, [sp], #16
  403528:	ret
