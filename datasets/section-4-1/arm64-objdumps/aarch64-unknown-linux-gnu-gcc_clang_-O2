
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//aarch64-unknown-linux-gnu-gcc_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402f20 <.init>:
  402f20:	stp	x29, x30, [sp, #-16]!
  402f24:	mov	x29, sp
  402f28:	bl	4043f8 <feof@plt+0xb58>
  402f2c:	ldp	x29, x30, [sp], #16
  402f30:	ret

Disassembly of section .plt:

0000000000402f40 <_Unwind_Backtrace@plt-0x20>:
  402f40:	stp	x16, x30, [sp, #-16]!
  402f44:	adrp	x16, 4f0000 <_obstack_memory_used@@Base+0x742fc>
  402f48:	ldr	x17, [x16, #4088]
  402f4c:	add	x16, x16, #0xff8
  402f50:	br	x17
  402f54:	nop
  402f58:	nop
  402f5c:	nop

0000000000402f60 <_Unwind_Backtrace@plt>:
  402f60:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  402f64:	ldr	x17, [x16]
  402f68:	add	x16, x16, #0x0
  402f6c:	br	x17

0000000000402f70 <_Znam@plt>:
  402f70:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  402f74:	ldr	x17, [x16, #8]
  402f78:	add	x16, x16, #0x8
  402f7c:	br	x17

0000000000402f80 <__fxstat@plt>:
  402f80:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  402f84:	ldr	x17, [x16, #16]
  402f88:	add	x16, x16, #0x10
  402f8c:	br	x17

0000000000402f90 <_Unwind_GetIPInfo@plt>:
  402f90:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  402f94:	ldr	x17, [x16, #24]
  402f98:	add	x16, x16, #0x18
  402f9c:	br	x17

0000000000402fa0 <fputs@plt>:
  402fa0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  402fa4:	ldr	x17, [x16, #32]
  402fa8:	add	x16, x16, #0x20
  402fac:	br	x17

0000000000402fb0 <iconv_close@plt>:
  402fb0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  402fb4:	ldr	x17, [x16, #40]
  402fb8:	add	x16, x16, #0x28
  402fbc:	br	x17

0000000000402fc0 <memcpy@plt>:
  402fc0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  402fc4:	ldr	x17, [x16, #48]
  402fc8:	add	x16, x16, #0x30
  402fcc:	br	x17

0000000000402fd0 <fread@plt>:
  402fd0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  402fd4:	ldr	x17, [x16, #56]
  402fd8:	add	x16, x16, #0x38
  402fdc:	br	x17

0000000000402fe0 <strstr@plt>:
  402fe0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  402fe4:	ldr	x17, [x16, #64]
  402fe8:	add	x16, x16, #0x40
  402fec:	br	x17

0000000000402ff0 <textdomain@plt>:
  402ff0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  402ff4:	ldr	x17, [x16, #72]
  402ff8:	add	x16, x16, #0x48
  402ffc:	br	x17

0000000000403000 <readlink@plt>:
  403000:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403004:	ldr	x17, [x16, #80]
  403008:	add	x16, x16, #0x50
  40300c:	br	x17

0000000000403010 <puts@plt>:
  403010:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403014:	ldr	x17, [x16, #88]
  403018:	add	x16, x16, #0x58
  40301c:	br	x17

0000000000403020 <execvp@plt>:
  403020:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403024:	ldr	x17, [x16, #96]
  403028:	add	x16, x16, #0x60
  40302c:	br	x17

0000000000403030 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_mm@plt>:
  403030:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403034:	ldr	x17, [x16, #104]
  403038:	add	x16, x16, #0x68
  40303c:	br	x17

0000000000403040 <bindtextdomain@plt>:
  403040:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403044:	ldr	x17, [x16, #112]
  403048:	add	x16, x16, #0x70
  40304c:	br	x17

0000000000403050 <calloc@plt>:
  403050:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403054:	ldr	x17, [x16, #120]
  403058:	add	x16, x16, #0x78
  40305c:	br	x17

0000000000403060 <fgetc_unlocked@plt>:
  403060:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403064:	ldr	x17, [x16, #128]
  403068:	add	x16, x16, #0x80
  40306c:	br	x17

0000000000403070 <ungetc@plt>:
  403070:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403074:	ldr	x17, [x16, #136]
  403078:	add	x16, x16, #0x88
  40307c:	br	x17

0000000000403080 <execv@plt>:
  403080:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403084:	ldr	x17, [x16, #144]
  403088:	add	x16, x16, #0x90
  40308c:	br	x17

0000000000403090 <pipe@plt>:
  403090:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403094:	ldr	x17, [x16, #152]
  403098:	add	x16, x16, #0x98
  40309c:	br	x17

00000000004030a0 <dup2@plt>:
  4030a0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4030a4:	ldr	x17, [x16, #160]
  4030a8:	add	x16, x16, #0xa0
  4030ac:	br	x17

00000000004030b0 <strlen@plt>:
  4030b0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4030b4:	ldr	x17, [x16, #168]
  4030b8:	add	x16, x16, #0xa8
  4030bc:	br	x17

00000000004030c0 <gmtime@plt>:
  4030c0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4030c4:	ldr	x17, [x16, #176]
  4030c8:	add	x16, x16, #0xb0
  4030cc:	br	x17

00000000004030d0 <fprintf@plt>:
  4030d0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4030d4:	ldr	x17, [x16, #184]
  4030d8:	add	x16, x16, #0xb8
  4030dc:	br	x17

00000000004030e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>:
  4030e0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4030e4:	ldr	x17, [x16, #192]
  4030e8:	add	x16, x16, #0xc0
  4030ec:	br	x17

00000000004030f0 <ftell@plt>:
  4030f0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4030f4:	ldr	x17, [x16, #200]
  4030f8:	add	x16, x16, #0xc8
  4030fc:	br	x17

0000000000403100 <waitpid@plt>:
  403100:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403104:	ldr	x17, [x16, #208]
  403108:	add	x16, x16, #0xd0
  40310c:	br	x17

0000000000403110 <ngettext@plt>:
  403110:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403114:	ldr	x17, [x16, #216]
  403118:	add	x16, x16, #0xd8
  40311c:	br	x17

0000000000403120 <putc@plt>:
  403120:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403124:	ldr	x17, [x16, #224]
  403128:	add	x16, x16, #0xe0
  40312c:	br	x17

0000000000403130 <open@plt>:
  403130:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403134:	ldr	x17, [x16, #232]
  403138:	add	x16, x16, #0xe8
  40313c:	br	x17

0000000000403140 <__overflow@plt>:
  403140:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403144:	ldr	x17, [x16, #240]
  403148:	add	x16, x16, #0xf0
  40314c:	br	x17

0000000000403150 <fclose@plt>:
  403150:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403154:	ldr	x17, [x16, #248]
  403158:	add	x16, x16, #0xf8
  40315c:	br	x17

0000000000403160 <sleep@plt>:
  403160:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403164:	ldr	x17, [x16, #256]
  403168:	add	x16, x16, #0x100
  40316c:	br	x17

0000000000403170 <pipe2@plt>:
  403170:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403174:	ldr	x17, [x16, #264]
  403178:	add	x16, x16, #0x108
  40317c:	br	x17

0000000000403180 <wait4@plt>:
  403180:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403184:	ldr	x17, [x16, #272]
  403188:	add	x16, x16, #0x110
  40318c:	br	x17

0000000000403190 <strtol@plt>:
  403190:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403194:	ldr	x17, [x16, #280]
  403198:	add	x16, x16, #0x118
  40319c:	br	x17

00000000004031a0 <_ZSt20__throw_length_errorPKc@plt>:
  4031a0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4031a4:	ldr	x17, [x16, #288]
  4031a8:	add	x16, x16, #0x120
  4031ac:	br	x17

00000000004031b0 <iconv_open@plt>:
  4031b0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4031b4:	ldr	x17, [x16, #296]
  4031b8:	add	x16, x16, #0x128
  4031bc:	br	x17

00000000004031c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>:
  4031c0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4031c4:	ldr	x17, [x16, #304]
  4031c8:	add	x16, x16, #0x130
  4031cc:	br	x17

00000000004031d0 <free@plt>:
  4031d0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4031d4:	ldr	x17, [x16, #312]
  4031d8:	add	x16, x16, #0x138
  4031dc:	br	x17

00000000004031e0 <fread_unlocked@plt>:
  4031e0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4031e4:	ldr	x17, [x16, #320]
  4031e8:	add	x16, x16, #0x140
  4031ec:	br	x17

00000000004031f0 <memset@plt>:
  4031f0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4031f4:	ldr	x17, [x16, #328]
  4031f8:	add	x16, x16, #0x148
  4031fc:	br	x17

0000000000403200 <fputs_unlocked@plt>:
  403200:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403204:	ldr	x17, [x16, #336]
  403208:	add	x16, x16, #0x150
  40320c:	br	x17

0000000000403210 <strchr@plt>:
  403210:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403214:	ldr	x17, [x16, #344]
  403218:	add	x16, x16, #0x158
  40321c:	br	x17

0000000000403220 <strdup@plt>:
  403220:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403224:	ldr	x17, [x16, #352]
  403228:	add	x16, x16, #0x160
  40322c:	br	x17

0000000000403230 <putenv@plt>:
  403230:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403234:	ldr	x17, [x16, #360]
  403238:	add	x16, x16, #0x168
  40323c:	br	x17

0000000000403240 <isatty@plt>:
  403240:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403244:	ldr	x17, [x16, #368]
  403248:	add	x16, x16, #0x170
  40324c:	br	x17

0000000000403250 <qsort@plt>:
  403250:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403254:	ldr	x17, [x16, #376]
  403258:	add	x16, x16, #0x178
  40325c:	br	x17

0000000000403260 <realloc@plt>:
  403260:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403264:	ldr	x17, [x16, #384]
  403268:	add	x16, x16, #0x180
  40326c:	br	x17

0000000000403270 <_exit@plt>:
  403270:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403274:	ldr	x17, [x16, #392]
  403278:	add	x16, x16, #0x188
  40327c:	br	x17

0000000000403280 <__cxa_guard_release@plt>:
  403280:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403284:	ldr	x17, [x16, #400]
  403288:	add	x16, x16, #0x190
  40328c:	br	x17

0000000000403290 <access@plt>:
  403290:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403294:	ldr	x17, [x16, #408]
  403298:	add	x16, x16, #0x198
  40329c:	br	x17

00000000004032a0 <freopen@plt>:
  4032a0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4032a4:	ldr	x17, [x16, #416]
  4032a8:	add	x16, x16, #0x1a0
  4032ac:	br	x17

00000000004032b0 <strverscmp@plt>:
  4032b0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4032b4:	ldr	x17, [x16, #424]
  4032b8:	add	x16, x16, #0x1a8
  4032bc:	br	x17

00000000004032c0 <read@plt>:
  4032c0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4032c4:	ldr	x17, [x16, #432]
  4032c8:	add	x16, x16, #0x1b0
  4032cc:	br	x17

00000000004032d0 <strerror@plt>:
  4032d0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4032d4:	ldr	x17, [x16, #440]
  4032d8:	add	x16, x16, #0x1b8
  4032dc:	br	x17

00000000004032e0 <mkstemps@plt>:
  4032e0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4032e4:	ldr	x17, [x16, #448]
  4032e8:	add	x16, x16, #0x1c0
  4032ec:	br	x17

00000000004032f0 <strcpy@plt>:
  4032f0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4032f4:	ldr	x17, [x16, #456]
  4032f8:	add	x16, x16, #0x1c8
  4032fc:	br	x17

0000000000403300 <_ZSt19__throw_logic_errorPKc@plt>:
  403300:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403304:	ldr	x17, [x16, #464]
  403308:	add	x16, x16, #0x1d0
  40330c:	br	x17

0000000000403310 <strtok@plt>:
  403310:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403314:	ldr	x17, [x16, #472]
  403318:	add	x16, x16, #0x1d8
  40331c:	br	x17

0000000000403320 <closedir@plt>:
  403320:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403324:	ldr	x17, [x16, #480]
  403328:	add	x16, x16, #0x1e0
  40332c:	br	x17

0000000000403330 <gettimeofday@plt>:
  403330:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403334:	ldr	x17, [x16, #488]
  403338:	add	x16, x16, #0x1e8
  40333c:	br	x17

0000000000403340 <sprintf@plt>:
  403340:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403344:	ldr	x17, [x16, #496]
  403348:	add	x16, x16, #0x1f0
  40334c:	br	x17

0000000000403350 <ioctl@plt>:
  403350:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403354:	ldr	x17, [x16, #504]
  403358:	add	x16, x16, #0x1f8
  40335c:	br	x17

0000000000403360 <strcspn@plt>:
  403360:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403364:	ldr	x17, [x16, #512]
  403368:	add	x16, x16, #0x200
  40336c:	br	x17

0000000000403370 <remove@plt>:
  403370:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403374:	ldr	x17, [x16, #520]
  403378:	add	x16, x16, #0x208
  40337c:	br	x17

0000000000403380 <unlink@plt>:
  403380:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403384:	ldr	x17, [x16, #528]
  403388:	add	x16, x16, #0x210
  40338c:	br	x17

0000000000403390 <localtime@plt>:
  403390:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403394:	ldr	x17, [x16, #536]
  403398:	add	x16, x16, #0x218
  40339c:	br	x17

00000000004033a0 <__libc_start_main@plt>:
  4033a0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4033a4:	ldr	x17, [x16, #544]
  4033a8:	add	x16, x16, #0x220
  4033ac:	br	x17

00000000004033b0 <dgettext@plt>:
  4033b0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4033b4:	ldr	x17, [x16, #552]
  4033b8:	add	x16, x16, #0x228
  4033bc:	br	x17

00000000004033c0 <unsetenv@plt>:
  4033c0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4033c4:	ldr	x17, [x16, #560]
  4033c8:	add	x16, x16, #0x230
  4033cc:	br	x17

00000000004033d0 <dl_iterate_phdr@plt>:
  4033d0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4033d4:	ldr	x17, [x16, #568]
  4033d8:	add	x16, x16, #0x238
  4033dc:	br	x17

00000000004033e0 <gettext@plt>:
  4033e0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4033e4:	ldr	x17, [x16, #576]
  4033e8:	add	x16, x16, #0x240
  4033ec:	br	x17

00000000004033f0 <memchr@plt>:
  4033f0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4033f4:	ldr	x17, [x16, #584]
  4033f8:	add	x16, x16, #0x248
  4033fc:	br	x17

0000000000403400 <getpid@plt>:
  403400:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403404:	ldr	x17, [x16, #592]
  403408:	add	x16, x16, #0x250
  40340c:	br	x17

0000000000403410 <_ZdlPv@plt>:
  403410:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403414:	ldr	x17, [x16, #600]
  403418:	add	x16, x16, #0x258
  40341c:	br	x17

0000000000403420 <setlocale@plt>:
  403420:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403424:	ldr	x17, [x16, #608]
  403428:	add	x16, x16, #0x260
  40342c:	br	x17

0000000000403430 <mmap@plt>:
  403430:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403434:	ldr	x17, [x16, #616]
  403438:	add	x16, x16, #0x268
  40343c:	br	x17

0000000000403440 <_Znwm@plt>:
  403440:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403444:	ldr	x17, [x16, #624]
  403448:	add	x16, x16, #0x270
  40344c:	br	x17

0000000000403450 <strncmp@plt>:
  403450:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403454:	ldr	x17, [x16, #632]
  403458:	add	x16, x16, #0x278
  40345c:	br	x17

0000000000403460 <readdir@plt>:
  403460:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403464:	ldr	x17, [x16, #640]
  403468:	add	x16, x16, #0x280
  40346c:	br	x17

0000000000403470 <strncpy@plt>:
  403470:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403474:	ldr	x17, [x16, #648]
  403478:	add	x16, x16, #0x288
  40347c:	br	x17

0000000000403480 <fputc@plt>:
  403480:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403484:	ldr	x17, [x16, #656]
  403488:	add	x16, x16, #0x290
  40348c:	br	x17

0000000000403490 <fgets_unlocked@plt>:
  403490:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403494:	ldr	x17, [x16, #664]
  403498:	add	x16, x16, #0x298
  40349c:	br	x17

00000000004034a0 <memmem@plt>:
  4034a0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4034a4:	ldr	x17, [x16, #672]
  4034a8:	add	x16, x16, #0x2a0
  4034ac:	br	x17

00000000004034b0 <munmap@plt>:
  4034b0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4034b4:	ldr	x17, [x16, #680]
  4034b8:	add	x16, x16, #0x2a8
  4034bc:	br	x17

00000000004034c0 <iconv@plt>:
  4034c0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4034c4:	ldr	x17, [x16, #688]
  4034c8:	add	x16, x16, #0x2b0
  4034cc:	br	x17

00000000004034d0 <fileno_unlocked@plt>:
  4034d0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4034d4:	ldr	x17, [x16, #696]
  4034d8:	add	x16, x16, #0x2b8
  4034dc:	br	x17

00000000004034e0 <opendir@plt>:
  4034e0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4034e4:	ldr	x17, [x16, #704]
  4034e8:	add	x16, x16, #0x2c0
  4034ec:	br	x17

00000000004034f0 <mbstowcs@plt>:
  4034f0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4034f4:	ldr	x17, [x16, #712]
  4034f8:	add	x16, x16, #0x2c8
  4034fc:	br	x17

0000000000403500 <__ctype_b_loc@plt>:
  403500:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403504:	ldr	x17, [x16, #720]
  403508:	add	x16, x16, #0x2d0
  40350c:	br	x17

0000000000403510 <__isoc99_sscanf@plt>:
  403510:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403514:	ldr	x17, [x16, #728]
  403518:	add	x16, x16, #0x2d8
  40351c:	br	x17

0000000000403520 <__cxa_atexit@plt>:
  403520:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403524:	ldr	x17, [x16, #736]
  403528:	add	x16, x16, #0x2e0
  40352c:	br	x17

0000000000403530 <snprintf@plt>:
  403530:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403534:	ldr	x17, [x16, #744]
  403538:	add	x16, x16, #0x2e8
  40353c:	br	x17

0000000000403540 <asctime@plt>:
  403540:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403544:	ldr	x17, [x16, #752]
  403548:	add	x16, x16, #0x2f0
  40354c:	br	x17

0000000000403550 <fflush@plt>:
  403550:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403554:	ldr	x17, [x16, #760]
  403558:	add	x16, x16, #0x2f8
  40355c:	br	x17

0000000000403560 <sbrk@plt>:
  403560:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403564:	ldr	x17, [x16, #768]
  403568:	add	x16, x16, #0x300
  40356c:	br	x17

0000000000403570 <kill@plt>:
  403570:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403574:	ldr	x17, [x16, #776]
  403578:	add	x16, x16, #0x308
  40357c:	br	x17

0000000000403580 <memmove@plt>:
  403580:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403584:	ldr	x17, [x16, #784]
  403588:	add	x16, x16, #0x310
  40358c:	br	x17

0000000000403590 <time@plt>:
  403590:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403594:	ldr	x17, [x16, #792]
  403598:	add	x16, x16, #0x318
  40359c:	br	x17

00000000004035a0 <strrchr@plt>:
  4035a0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4035a4:	ldr	x17, [x16, #800]
  4035a8:	add	x16, x16, #0x320
  4035ac:	br	x17

00000000004035b0 <_ZdaPv@plt>:
  4035b0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4035b4:	ldr	x17, [x16, #808]
  4035b8:	add	x16, x16, #0x328
  4035bc:	br	x17

00000000004035c0 <__errno_location@plt>:
  4035c0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4035c4:	ldr	x17, [x16, #816]
  4035c8:	add	x16, x16, #0x330
  4035cc:	br	x17

00000000004035d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>:
  4035d0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4035d4:	ldr	x17, [x16, #824]
  4035d8:	add	x16, x16, #0x338
  4035dc:	br	x17

00000000004035e0 <__uflow@plt>:
  4035e0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4035e4:	ldr	x17, [x16, #832]
  4035e8:	add	x16, x16, #0x340
  4035ec:	br	x17

00000000004035f0 <strtoul@plt>:
  4035f0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4035f4:	ldr	x17, [x16, #840]
  4035f8:	add	x16, x16, #0x348
  4035fc:	br	x17

0000000000403600 <__ctype_tolower_loc@plt>:
  403600:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403604:	ldr	x17, [x16, #848]
  403608:	add	x16, x16, #0x350
  40360c:	br	x17

0000000000403610 <__fsetlocking@plt>:
  403610:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403614:	ldr	x17, [x16, #856]
  403618:	add	x16, x16, #0x358
  40361c:	br	x17

0000000000403620 <fopen@plt>:
  403620:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403624:	ldr	x17, [x16, #864]
  403628:	add	x16, x16, #0x360
  40362c:	br	x17

0000000000403630 <close@plt>:
  403630:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403634:	ldr	x17, [x16, #872]
  403638:	add	x16, x16, #0x368
  40363c:	br	x17

0000000000403640 <strcmp@plt>:
  403640:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403644:	ldr	x17, [x16, #880]
  403648:	add	x16, x16, #0x370
  40364c:	br	x17

0000000000403650 <__xstat@plt>:
  403650:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403654:	ldr	x17, [x16, #888]
  403658:	add	x16, x16, #0x378
  40365c:	br	x17

0000000000403660 <_ZSt24__throw_out_of_range_fmtPKcz@plt>:
  403660:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403664:	ldr	x17, [x16, #896]
  403668:	add	x16, x16, #0x380
  40366c:	br	x17

0000000000403670 <write@plt>:
  403670:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403674:	ldr	x17, [x16, #904]
  403678:	add	x16, x16, #0x388
  40367c:	br	x17

0000000000403680 <setrlimit@plt>:
  403680:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403684:	ldr	x17, [x16, #912]
  403688:	add	x16, x16, #0x390
  40368c:	br	x17

0000000000403690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>:
  403690:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403694:	ldr	x17, [x16, #920]
  403698:	add	x16, x16, #0x398
  40369c:	br	x17

00000000004036a0 <setenv@plt>:
  4036a0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4036a4:	ldr	x17, [x16, #928]
  4036a8:	add	x16, x16, #0x3a0
  4036ac:	br	x17

00000000004036b0 <malloc@plt>:
  4036b0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4036b4:	ldr	x17, [x16, #936]
  4036b8:	add	x16, x16, #0x3a8
  4036bc:	br	x17

00000000004036c0 <vfork@plt>:
  4036c0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4036c4:	ldr	x17, [x16, #944]
  4036c8:	add	x16, x16, #0x3b0
  4036cc:	br	x17

00000000004036d0 <strtoull@plt>:
  4036d0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4036d4:	ldr	x17, [x16, #952]
  4036d8:	add	x16, x16, #0x3b8
  4036dc:	br	x17

00000000004036e0 <__lxstat@plt>:
  4036e0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4036e4:	ldr	x17, [x16, #960]
  4036e8:	add	x16, x16, #0x3c0
  4036ec:	br	x17

00000000004036f0 <abort@plt>:
  4036f0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4036f4:	ldr	x17, [x16, #968]
  4036f8:	add	x16, x16, #0x3c8
  4036fc:	br	x17

0000000000403700 <getenv@plt>:
  403700:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403704:	ldr	x17, [x16, #976]
  403708:	add	x16, x16, #0x3d0
  40370c:	br	x17

0000000000403710 <signal@plt>:
  403710:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403714:	ldr	x17, [x16, #984]
  403718:	add	x16, x16, #0x3d8
  40371c:	br	x17

0000000000403720 <strcasecmp@plt>:
  403720:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403724:	ldr	x17, [x16, #992]
  403728:	add	x16, x16, #0x3e0
  40372c:	br	x17

0000000000403730 <exit@plt>:
  403730:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403734:	ldr	x17, [x16, #1000]
  403738:	add	x16, x16, #0x3e8
  40373c:	br	x17

0000000000403740 <fwrite_unlocked@plt>:
  403740:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403744:	ldr	x17, [x16, #1008]
  403748:	add	x16, x16, #0x3f0
  40374c:	br	x17

0000000000403750 <wcswidth@plt>:
  403750:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403754:	ldr	x17, [x16, #1016]
  403758:	add	x16, x16, #0x3f8
  40375c:	br	x17

0000000000403760 <fwrite@plt>:
  403760:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403764:	ldr	x17, [x16, #1024]
  403768:	add	x16, x16, #0x400
  40376c:	br	x17

0000000000403770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
  403770:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403774:	ldr	x17, [x16, #1032]
  403778:	add	x16, x16, #0x408
  40377c:	br	x17

0000000000403780 <nl_langinfo@plt>:
  403780:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403784:	ldr	x17, [x16, #1040]
  403788:	add	x16, x16, #0x410
  40378c:	br	x17

0000000000403790 <getpagesize@plt>:
  403790:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403794:	ldr	x17, [x16, #1048]
  403798:	add	x16, x16, #0x418
  40379c:	br	x17

00000000004037a0 <__cxa_guard_acquire@plt>:
  4037a0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4037a4:	ldr	x17, [x16, #1056]
  4037a8:	add	x16, x16, #0x420
  4037ac:	br	x17

00000000004037b0 <vsprintf@plt>:
  4037b0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4037b4:	ldr	x17, [x16, #1064]
  4037b8:	add	x16, x16, #0x428
  4037bc:	br	x17

00000000004037c0 <ferror@plt>:
  4037c0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4037c4:	ldr	x17, [x16, #1072]
  4037c8:	add	x16, x16, #0x430
  4037cc:	br	x17

00000000004037d0 <fdopen@plt>:
  4037d0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4037d4:	ldr	x17, [x16, #1080]
  4037d8:	add	x16, x16, #0x438
  4037dc:	br	x17

00000000004037e0 <strnlen@plt>:
  4037e0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4037e4:	ldr	x17, [x16, #1088]
  4037e8:	add	x16, x16, #0x440
  4037ec:	br	x17

00000000004037f0 <realpath@plt>:
  4037f0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4037f4:	ldr	x17, [x16, #1096]
  4037f8:	add	x16, x16, #0x448
  4037fc:	br	x17

0000000000403800 <getrlimit@plt>:
  403800:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403804:	ldr	x17, [x16, #1104]
  403808:	add	x16, x16, #0x450
  40380c:	br	x17

0000000000403810 <strncasecmp@plt>:
  403810:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403814:	ldr	x17, [x16, #1112]
  403818:	add	x16, x16, #0x458
  40381c:	br	x17

0000000000403820 <fcntl@plt>:
  403820:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403824:	ldr	x17, [x16, #1120]
  403828:	add	x16, x16, #0x460
  40382c:	br	x17

0000000000403830 <__gmon_start__@plt>:
  403830:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403834:	ldr	x17, [x16, #1128]
  403838:	add	x16, x16, #0x468
  40383c:	br	x17

0000000000403840 <bcmp@plt>:
  403840:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403844:	ldr	x17, [x16, #1136]
  403848:	add	x16, x16, #0x470
  40384c:	br	x17

0000000000403850 <strcat@plt>:
  403850:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403854:	ldr	x17, [x16, #1144]
  403858:	add	x16, x16, #0x478
  40385c:	br	x17

0000000000403860 <strsignal@plt>:
  403860:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403864:	ldr	x17, [x16, #1152]
  403868:	add	x16, x16, #0x480
  40386c:	br	x17

0000000000403870 <fseek@plt>:
  403870:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403874:	ldr	x17, [x16, #1160]
  403878:	add	x16, x16, #0x488
  40387c:	br	x17

0000000000403880 <printf@plt>:
  403880:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403884:	ldr	x17, [x16, #1168]
  403888:	add	x16, x16, #0x490
  40388c:	br	x17

0000000000403890 <vfprintf@plt>:
  403890:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  403894:	ldr	x17, [x16, #1176]
  403898:	add	x16, x16, #0x498
  40389c:	br	x17

00000000004038a0 <feof@plt>:
  4038a0:	adrp	x16, 4f1000 <_Unwind_Backtrace@GCC_3.3>
  4038a4:	ldr	x17, [x16, #1184]
  4038a8:	add	x16, x16, #0x4a0
  4038ac:	br	x17

Disassembly of section .text:

00000000004038b0 <_obstack_begin@@Base-0x780dc>:
  4038b0:	stp	x29, x30, [sp, #-32]!
  4038b4:	stp	x20, x19, [sp, #16]
  4038b8:	mov	x29, sp
  4038bc:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4038c0:	mov	w19, #0x720                 	// #1824
  4038c4:	add	x20, x20, #0x8b0
  4038c8:	b	4038d4 <feof@plt+0x34>
  4038cc:	subs	x19, x19, #0x30
  4038d0:	b.eq	4038f0 <feof@plt+0x50>  // b.none
  4038d4:	add	x8, x20, x19
  4038d8:	ldur	x0, [x8, #-48]
  4038dc:	sub	x8, x8, #0x20
  4038e0:	cmp	x8, x0
  4038e4:	b.eq	4038cc <feof@plt+0x2c>  // b.none
  4038e8:	bl	403410 <_ZdlPv@plt>
  4038ec:	b	4038cc <feof@plt+0x2c>
  4038f0:	ldp	x20, x19, [sp, #16]
  4038f4:	ldp	x29, x30, [sp], #32
  4038f8:	ret
  4038fc:	stp	x29, x30, [sp, #-16]!
  403900:	mov	x29, sp
  403904:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  403908:	add	x8, x8, #0xf8
  40390c:	ldr	x0, [x8], #16
  403910:	cmp	x0, x8
  403914:	b.eq	40391c <feof@plt+0x7c>  // b.none
  403918:	bl	403410 <_ZdlPv@plt>
  40391c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  403920:	add	x8, x8, #0xc8
  403924:	ldr	x0, [x8], #16
  403928:	cmp	x0, x8
  40392c:	b.eq	403934 <feof@plt+0x94>  // b.none
  403930:	bl	403410 <_ZdlPv@plt>
  403934:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  403938:	add	x8, x8, #0x98
  40393c:	ldr	x0, [x8], #16
  403940:	cmp	x0, x8
  403944:	b.eq	40394c <feof@plt+0xac>  // b.none
  403948:	bl	403410 <_ZdlPv@plt>
  40394c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  403950:	add	x8, x8, #0x68
  403954:	ldr	x0, [x8], #16
  403958:	cmp	x0, x8
  40395c:	b.eq	403964 <feof@plt+0xc4>  // b.none
  403960:	bl	403410 <_ZdlPv@plt>
  403964:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  403968:	add	x8, x8, #0x38
  40396c:	ldr	x0, [x8], #16
  403970:	cmp	x0, x8
  403974:	b.eq	40397c <feof@plt+0xdc>  // b.none
  403978:	bl	403410 <_ZdlPv@plt>
  40397c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  403980:	add	x8, x8, #0x8
  403984:	ldr	x0, [x8], #16
  403988:	cmp	x0, x8
  40398c:	b.eq	403994 <feof@plt+0xf4>  // b.none
  403990:	bl	403410 <_ZdlPv@plt>
  403994:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  403998:	add	x8, x8, #0xfd8
  40399c:	ldr	x0, [x8], #16
  4039a0:	cmp	x0, x8
  4039a4:	b.eq	4039b0 <feof@plt+0x110>  // b.none
  4039a8:	ldp	x29, x30, [sp], #16
  4039ac:	b	403410 <_ZdlPv@plt>
  4039b0:	ldp	x29, x30, [sp], #16
  4039b4:	ret
  4039b8:	sub	sp, sp, #0x70
  4039bc:	stp	x29, x30, [sp, #16]
  4039c0:	stp	x28, x27, [sp, #32]
  4039c4:	stp	x26, x25, [sp, #48]
  4039c8:	stp	x24, x23, [sp, #64]
  4039cc:	stp	x22, x21, [sp, #80]
  4039d0:	stp	x20, x19, [sp, #96]
  4039d4:	add	x29, sp, #0x10
  4039d8:	adrp	x10, 483000 <_obstack_memory_used@@Base+0x72fc>
  4039dc:	add	x10, x10, #0xa21
  4039e0:	adrp	x11, 483000 <_obstack_memory_used@@Base+0x72fc>
  4039e4:	add	x11, x11, #0xa0b
  4039e8:	ldr	x21, [x10]
  4039ec:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4039f0:	ldr	x11, [x11]
  4039f4:	add	x19, x19, #0x8b0
  4039f8:	adrp	x17, 483000 <_obstack_memory_used@@Base+0x72fc>
  4039fc:	adrp	x14, 483000 <_obstack_memory_used@@Base+0x72fc>
  403a00:	adrp	x6, 484000 <_obstack_memory_used@@Base+0x82fc>
  403a04:	mov	w16, #0x3335                	// #13109
  403a08:	add	x17, x17, #0x8cf
  403a0c:	add	x14, x14, #0x8e5
  403a10:	ldr	q0, [x6, #1936]
  403a14:	mov	x6, x19
  403a18:	mov	w12, #0x3533                	// #13619
  403a1c:	mov	w8, #0xa                   	// #10
  403a20:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x72fc>
  403a24:	adrp	x4, 483000 <_obstack_memory_used@@Base+0x72fc>
  403a28:	str	x21, [x6, #16]!
  403a2c:	strh	w16, [x19, #72]
  403a30:	mov	x16, x19
  403a34:	ldr	x17, [x17]
  403a38:	ldr	x14, [x14]
  403a3c:	mov	w20, #0xb                   	// #11
  403a40:	add	x0, x0, #0x8da
  403a44:	add	x4, x4, #0x8f9
  403a48:	strh	w12, [x19, #24]
  403a4c:	strb	wzr, [x19, #26]
  403a50:	str	wzr, [x19, #32]
  403a54:	stp	x6, x8, [x19]
  403a58:	str	x11, [x16, #64]!
  403a5c:	stp	x20, x16, [x19, #40]
  403a60:	ldr	x16, [x0]
  403a64:	ldur	x0, [x4, #5]
  403a68:	add	x11, x19, #0x70
  403a6c:	mov	w13, #0x3735                	// #14133
  403a70:	adrp	x3, 483000 <_obstack_memory_used@@Base+0x72fc>
  403a74:	stp	x20, x11, [x19, #88]
  403a78:	str	x17, [x19, #112]
  403a7c:	strb	wzr, [x19, #74]
  403a80:	str	wzr, [x19, #80]
  403a84:	str	x8, [x19, #56]
  403a88:	str	x14, [x19, #208]!
  403a8c:	add	x3, x3, #0x907
  403a90:	sturh	w13, [x19, #-88]
  403a94:	mov	x13, x19
  403a98:	stur	x8, [x19, #-104]
  403a9c:	sturb	wzr, [x19, #-86]
  403aa0:	stur	wzr, [x19, #-80]
  403aa4:	stur	x20, [x19, #-72]
  403aa8:	str	x16, [x13, #-48]!
  403aac:	stur	x0, [x19, #101]
  403ab0:	ldr	x0, [x3]
  403ab4:	mov	w15, #0x3237                	// #12855
  403ab8:	mov	w2, #0x7478                	// #29816
  403abc:	adrp	x10, 483000 <_obstack_memory_used@@Base+0x72fc>
  403ac0:	adrp	x6, 483000 <_obstack_memory_used@@Base+0x72fc>
  403ac4:	movk	w2, #0x3838, lsl #16
  403ac8:	adrp	x7, 484000 <_obstack_memory_used@@Base+0x82fc>
  403acc:	add	x10, x10, #0x91c
  403ad0:	add	x6, x6, #0x927
  403ad4:	sturh	w15, [x19, #-40]
  403ad8:	ldr	x15, [x4]
  403adc:	adrp	x14, 483000 <_obstack_memory_used@@Base+0x72fc>
  403ae0:	stur	q0, [x19, #40]
  403ae4:	ldr	q0, [x7, #1952]
  403ae8:	stur	w2, [x19, #151]
  403aec:	ldr	x10, [x10]
  403af0:	ldr	x2, [x6]
  403af4:	mov	w18, #0x3337                	// #13111
  403af8:	mov	w9, #0xf                   	// #15
  403afc:	add	x14, x14, #0x932
  403b00:	str	x0, [x19, #144]
  403b04:	add	x0, x19, #0xc0
  403b08:	mov	w1, #0xd                   	// #13
  403b0c:	mov	w12, #0x3338                	// #13112
  403b10:	adrp	x17, 483000 <_obstack_memory_used@@Base+0x72fc>
  403b14:	strh	w18, [x19, #8]
  403b18:	add	x18, x19, #0x30
  403b1c:	stp	x9, x0, [x19, #168]
  403b20:	add	x0, x19, #0xf0
  403b24:	ldr	x14, [x14]
  403b28:	mov	w5, #0x3138                	// #12600
  403b2c:	add	x17, x17, #0x93e
  403b30:	stp	x20, x18, [x19, #24]
  403b34:	add	x18, x19, #0x60
  403b38:	stp	x1, x15, [x19, #88]
  403b3c:	add	x1, x19, #0x90
  403b40:	stp	x9, x0, [x19, #216]
  403b44:	add	x0, x19, #0x120
  403b48:	strh	w12, [x19, #296]
  403b4c:	add	x12, x19, #0x110
  403b50:	mov	w11, #0x7478                	// #29816
  403b54:	stp	x9, x18, [x19, #72]
  403b58:	stp	x9, x1, [x19, #120]
  403b5c:	strh	w5, [x19, #248]
  403b60:	stp	x9, x0, [x19, #264]
  403b64:	sturb	wzr, [x19, #-38]
  403b68:	stur	wzr, [x19, #-32]
  403b6c:	stp	x20, x19, [x19, #-24]
  403b70:	stur	x8, [x19, #-8]
  403b74:	strb	wzr, [x19, #10]
  403b78:	str	wzr, [x19, #16]
  403b7c:	strb	wzr, [x19, #56]
  403b80:	str	wzr, [x19, #64]
  403b84:	strb	wzr, [x19, #109]
  403b88:	str	wzr, [x19, #112]
  403b8c:	str	x20, [x19, #136]
  403b90:	strb	wzr, [x19, #155]
  403b94:	str	wzr, [x19, #160]
  403b98:	stur	q0, [x19, #184]
  403b9c:	strb	wzr, [x19, #200]
  403ba0:	str	wzr, [x19, #208]
  403ba4:	stp	x8, x10, [x19, #232]
  403ba8:	strb	wzr, [x19, #250]
  403bac:	str	wzr, [x19, #256]
  403bb0:	stp	x8, x2, [x19, #280]
  403bb4:	stp	x13, x8, [x19, #-64]
  403bb8:	strb	wzr, [x12, #26]
  403bbc:	add	x10, x19, #0x150
  403bc0:	ldr	x12, [x17]
  403bc4:	movk	w11, #0x3138, lsl #16
  403bc8:	stp	x9, x10, [x19, #312]
  403bcc:	add	x10, x19, #0x140
  403bd0:	mov	w16, #0x7478                	// #29816
  403bd4:	str	wzr, [x19, #304]
  403bd8:	stur	w11, [x10, #23]
  403bdc:	stp	x20, x14, [x19, #328]
  403be0:	strb	wzr, [x10, #27]
  403be4:	add	x10, x19, #0x180
  403be8:	movk	w16, #0x3338, lsl #16
  403bec:	mov	w18, #0x6d65                	// #28005
  403bf0:	stp	x9, x10, [x19, #360]
  403bf4:	add	x10, x19, #0x170
  403bf8:	movk	w18, #0x6761, lsl #16
  403bfc:	mov	w4, #0x4                   	// #4
  403c00:	mov	w15, #0x6778                	// #26488
  403c04:	mov	w11, #0x6166                	// #24934
  403c08:	str	wzr, [x19, #352]
  403c0c:	stur	w16, [x10, #23]
  403c10:	stp	x20, x12, [x19, #376]
  403c14:	strb	wzr, [x10, #27]
  403c18:	add	x10, x19, #0x1b0
  403c1c:	add	x12, x19, #0x1a0
  403c20:	movk	w15, #0x6e65, lsl #16
  403c24:	mov	w1, #0x3165                	// #12645
  403c28:	mov	w22, #0x6                   	// #6
  403c2c:	movk	w11, #0x6b6c, lsl #16
  403c30:	stp	x9, x10, [x19, #408]
  403c34:	str	w18, [x19, #432]
  403c38:	str	wzr, [x19, #400]
  403c3c:	str	x4, [x19, #424]
  403c40:	strb	wzr, [x12, #20]
  403c44:	add	x12, x19, #0x1e0
  403c48:	add	x14, x19, #0x1d0
  403c4c:	stp	x9, x12, [x19, #456]
  403c50:	str	w15, [x19, #480]
  403c54:	str	wzr, [x19, #448]
  403c58:	strh	w1, [x14, #20]
  403c5c:	str	x22, [x19, #472]
  403c60:	strb	wzr, [x14, #22]
  403c64:	str	w11, [x19, #528]
  403c68:	adrp	x11, 483000 <_obstack_memory_used@@Base+0x72fc>
  403c6c:	add	x11, x11, #0x965
  403c70:	mov	w23, #0x3                   	// #3
  403c74:	add	x14, x19, #0x210
  403c78:	ldr	x11, [x11]
  403c7c:	mov	w0, #0x726f                	// #29295
  403c80:	stp	x23, x14, [x19, #504]
  403c84:	add	x14, x19, #0x200
  403c88:	mov	w10, #0x3432                	// #13362
  403c8c:	mov	w12, #0x6471                	// #25713
  403c90:	str	wzr, [x19, #496]
  403c94:	strh	w0, [x14, #20]
  403c98:	str	x22, [x19, #520]
  403c9c:	strb	wzr, [x14, #22]
  403ca0:	add	x14, x19, #0x240
  403ca4:	mov	w13, #0x2f                  	// #47
  403ca8:	movk	w10, #0x7878, lsl #16
  403cac:	movk	w12, #0x3266, lsl #16
  403cb0:	mov	w25, #0x7                   	// #7
  403cb4:	str	x14, [x19, #560]
  403cb8:	add	x14, x19, #0x230
  403cbc:	mov	w15, #0x31                  	// #49
  403cc0:	str	wzr, [x19, #544]
  403cc4:	str	x13, [x19, #552]
  403cc8:	stur	w10, [x14, #19]
  403ccc:	mov	w24, #0x9                   	// #9
  403cd0:	str	w12, [x19, #576]
  403cd4:	str	x25, [x19, #568]
  403cd8:	strb	wzr, [x14, #23]
  403cdc:	str	x13, [x19, #600]
  403ce0:	add	x13, x19, #0x270
  403ce4:	str	x11, [x19, #624]
  403ce8:	add	x11, x19, #0x260
  403cec:	mov	w12, #0x6870                	// #26736
  403cf0:	str	x13, [x19, #608]
  403cf4:	adrp	x13, 483000 <_obstack_memory_used@@Base+0x72fc>
  403cf8:	strb	w15, [x19, #632]
  403cfc:	str	wzr, [x19, #592]
  403d00:	str	x24, [x19, #616]
  403d04:	strb	wzr, [x11, #25]
  403d08:	add	x11, x19, #0x2a0
  403d0c:	mov	w10, #0x6164                	// #24932
  403d10:	movk	w12, #0x6365, lsl #16
  403d14:	add	x13, x13, #0x976
  403d18:	str	x11, [x19, #656]
  403d1c:	add	x11, x19, #0x290
  403d20:	str	wzr, [x19, #640]
  403d24:	str	x9, [x19, #648]
  403d28:	strh	w10, [x11, #20]
  403d2c:	str	w12, [x19, #672]
  403d30:	str	x22, [x19, #664]
  403d34:	strb	wzr, [x11, #22]
  403d38:	ldr	x11, [x13]
  403d3c:	ldur	x12, [x13, #6]
  403d40:	str	x9, [x19, #696]
  403d44:	add	x9, x19, #0x2d0
  403d48:	mov	w14, #0xe                   	// #14
  403d4c:	str	x9, [x19, #704]
  403d50:	add	x9, x19, #0x2c0
  403d54:	str	wzr, [x19, #688]
  403d58:	stur	x12, [x9, #22]
  403d5c:	str	x11, [x19, #720]
  403d60:	str	x14, [x19, #712]
  403d64:	strb	wzr, [x9, #30]
  403d68:	add	x9, x19, #0x300
  403d6c:	mov	w26, #0x1                   	// #1
  403d70:	mov	w10, #0x7f                  	// #127
  403d74:	mov	w12, #0x6e61                	// #28257
  403d78:	str	x9, [x19, #752]
  403d7c:	add	x9, x19, #0x2f0
  403d80:	str	w26, [x19, #736]
  403d84:	str	x10, [x19, #744]
  403d88:	strh	w12, [x9, #20]
  403d8c:	adrp	x12, 483000 <_obstack_memory_used@@Base+0x72fc>
  403d90:	add	x12, x12, #0x991
  403d94:	mov	w11, #0x7576                	// #30070
  403d98:	mov	w13, #0x7432                	// #29746
  403d9c:	ldr	x12, [x12]
  403da0:	movk	w11, #0x636c, lsl #16
  403da4:	movk	w13, #0x3939, lsl #16
  403da8:	str	w11, [x19, #768]
  403dac:	mov	w11, #0xc                   	// #12
  403db0:	str	x22, [x19, #760]
  403db4:	strb	wzr, [x9, #22]
  403db8:	str	w13, [x19, #824]
  403dbc:	adrp	x13, 483000 <_obstack_memory_used@@Base+0x72fc>
  403dc0:	add	x9, x19, #0x330
  403dc4:	add	x13, x13, #0xa4d
  403dc8:	str	x11, [x19, #808]
  403dcc:	add	x11, x19, #0x320
  403dd0:	str	x9, [x19, #800]
  403dd4:	str	x12, [x19, #816]
  403dd8:	str	w26, [x19, #784]
  403ddc:	str	x10, [x19, #792]
  403de0:	strb	wzr, [x11, #28]
  403de4:	ldr	x11, [x13]
  403de8:	mov	w9, #0x3535                	// #13621
  403dec:	str	x10, [x19, #840]
  403df0:	add	x10, x19, #0x360
  403df4:	strh	w9, [x19, #872]
  403df8:	adrp	x9, 483000 <_obstack_memory_used@@Base+0x72fc>
  403dfc:	str	x10, [x19, #848]
  403e00:	mov	w10, #0x3537                	// #13623
  403e04:	add	x9, x9, #0x9a3
  403e08:	str	x11, [x19, #864]
  403e0c:	add	x11, x19, #0x350
  403e10:	str	w26, [x19, #832]
  403e14:	str	x8, [x19, #856]
  403e18:	strb	wzr, [x11, #26]
  403e1c:	ldr	x9, [x9]
  403e20:	strh	w10, [x19, #920]
  403e24:	adrp	x10, 483000 <_obstack_memory_used@@Base+0x72fc>
  403e28:	add	x10, x10, #0x9ae
  403e2c:	ldr	x10, [x10]
  403e30:	mov	w27, #0x2                   	// #2
  403e34:	mov	w28, #0x337b                	// #13179
  403e38:	add	x11, x19, #0x390
  403e3c:	str	x9, [x19, #912]
  403e40:	add	x9, x19, #0x380
  403e44:	str	x11, [x19, #896]
  403e48:	mov	w11, #0x3637                	// #13879
  403e4c:	str	w27, [x19, #880]
  403e50:	str	x28, [x19, #888]
  403e54:	str	x8, [x19, #904]
  403e58:	strb	wzr, [x9, #26]
  403e5c:	add	x9, x19, #0x3c0
  403e60:	str	x8, [x19, #952]
  403e64:	add	x8, x19, #0x3b0
  403e68:	str	x9, [x19, #944]
  403e6c:	strh	w11, [x19, #968]
  403e70:	str	x10, [x19, #960]
  403e74:	str	w27, [x19, #928]
  403e78:	str	x28, [x19, #936]
  403e7c:	strb	wzr, [x8, #26]
  403e80:	add	x8, x19, #0x3f0
  403e84:	str	x8, [x19, #992]
  403e88:	adrp	x8, 483000 <_obstack_memory_used@@Base+0x72fc>
  403e8c:	mov	w9, #0x7261                	// #29281
  403e90:	add	x8, x8, #0x9be
  403e94:	movk	w9, #0x7365, lsl #16
  403e98:	ldr	x8, [x8]
  403e9c:	str	w9, [x19, #1008]
  403ea0:	add	x9, x19, #0x3e0
  403ea4:	mov	w12, #0x4                   	// #4
  403ea8:	mov	w11, #0x337b                	// #13179
  403eac:	mov	w10, #0x2d65                	// #11621
  403eb0:	str	w27, [x19, #976]
  403eb4:	str	x28, [x19, #984]
  403eb8:	str	x12, [x19, #1000]
  403ebc:	strb	wzr, [x9, #20]
  403ec0:	add	x9, x19, #0x420
  403ec4:	movk	w11, #0x20, lsl #16
  403ec8:	movk	w10, #0x316e, lsl #16
  403ecc:	str	x9, [x19, #1040]
  403ed0:	add	x9, x19, #0x410
  403ed4:	str	w27, [x19, #1024]
  403ed8:	str	x11, [x19, #1032]
  403edc:	stur	w10, [x9, #23]
  403ee0:	str	x8, [x19, #1056]
  403ee4:	str	x20, [x19, #1048]
  403ee8:	strb	wzr, [x9, #27]
  403eec:	adrp	x9, 483000 <_obstack_memory_used@@Base+0x72fc>
  403ef0:	add	x9, x9, #0x9ca
  403ef4:	ldr	x9, [x9]
  403ef8:	mov	w8, #0x2d65                	// #11621
  403efc:	add	x10, x19, #0x450
  403f00:	movk	w8, #0x3165, lsl #16
  403f04:	str	x10, [x19, #1088]
  403f08:	add	x10, x19, #0x440
  403f0c:	str	x11, [x19, #1080]
  403f10:	str	w27, [x19, #1072]
  403f14:	stur	w8, [x10, #23]
  403f18:	mov	w8, #0x337b                	// #13179
  403f1c:	movk	w8, #0x400, lsl #16
  403f20:	str	x9, [x19, #1104]
  403f24:	mov	w9, #0x7374                	// #29556
  403f28:	movk	w9, #0x3176, lsl #16
  403f2c:	str	x20, [x19, #1096]
  403f30:	strb	wzr, [x10, #27]
  403f34:	str	x8, [x19, #1128]
  403f38:	add	x8, x19, #0x480
  403f3c:	mov	w10, #0x3031                	// #12337
  403f40:	str	x8, [x19, #1136]
  403f44:	mov	w8, #0xc37f                	// #50047
  403f48:	str	w9, [x19, #1152]
  403f4c:	add	x9, x19, #0x470
  403f50:	str	w27, [x19, #1120]
  403f54:	strh	w10, [x9, #20]
  403f58:	mov	w10, #0x6968                	// #26984
  403f5c:	str	x22, [x19, #1144]
  403f60:	strb	wzr, [x9, #22]
  403f64:	str	x8, [x19, #1176]
  403f68:	add	x8, x19, #0x4b0
  403f6c:	movk	w10, #0x6172, lsl #16
  403f70:	mov	w9, #0x6173                	// #24947
  403f74:	str	x8, [x19, #1184]
  403f78:	add	x8, x19, #0x4a0
  403f7c:	movk	w9, #0x6870, lsl #16
  403f80:	str	w27, [x19, #1168]
  403f84:	stur	w10, [x8, #19]
  403f88:	mov	w10, #0x397f                	// #14719
  403f8c:	movk	w10, #0x19, lsl #16
  403f90:	str	w9, [x19, #1200]
  403f94:	mov	w21, #0x15                  	// #21
  403f98:	str	x25, [x19, #1192]
  403f9c:	strb	wzr, [x8, #23]
  403fa0:	add	x8, x19, #0x4e0
  403fa4:	add	x0, x19, #0x4d0
  403fa8:	add	x1, sp, #0x8
  403fac:	mov	x2, xzr
  403fb0:	str	x10, [x19, #1224]
  403fb4:	str	w12, [x19, #1216]
  403fb8:	str	x8, [x19, #1232]
  403fbc:	str	x21, [sp, #8]
  403fc0:	bl	403770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
  403fc4:	adrp	x9, 483000 <_obstack_memory_used@@Base+0x72fc>
  403fc8:	add	x9, x9, #0x9ea
  403fcc:	ldr	x8, [sp, #8]
  403fd0:	ldur	x10, [x9, #13]
  403fd4:	ldr	q0, [x9]
  403fd8:	str	x0, [x19, #1232]
  403fdc:	str	x8, [x19, #1248]
  403fe0:	stur	x10, [x0, #13]
  403fe4:	str	q0, [x0]
  403fe8:	ldr	x9, [x19, #1232]
  403fec:	add	x10, x19, #0x510
  403ff0:	add	x0, x19, #0x500
  403ff4:	add	x1, sp, #0x8
  403ff8:	mov	x2, xzr
  403ffc:	str	x8, [x19, #1240]
  404000:	strb	wzr, [x9, x8]
  404004:	str	wzr, [x19, #1264]
  404008:	str	x20, [x19, #1272]
  40400c:	str	x10, [x19, #1280]
  404010:	str	x21, [sp, #8]
  404014:	bl	403770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
  404018:	adrp	x9, 483000 <_obstack_memory_used@@Base+0x72fc>
  40401c:	add	x9, x9, #0xa00
  404020:	ldr	x8, [sp, #8]
  404024:	ldur	x10, [x9, #13]
  404028:	ldr	q0, [x9]
  40402c:	str	x0, [x19, #1280]
  404030:	str	x8, [x19, #1296]
  404034:	stur	x10, [x0, #13]
  404038:	str	q0, [x0]
  40403c:	ldr	x9, [x19, #1280]
  404040:	add	x10, x19, #0x540
  404044:	add	x0, x19, #0x530
  404048:	add	x1, sp, #0x8
  40404c:	mov	x2, xzr
  404050:	str	x8, [x19, #1288]
  404054:	strb	wzr, [x9, x8]
  404058:	str	wzr, [x19, #1312]
  40405c:	str	x20, [x19, #1320]
  404060:	str	x10, [x19, #1328]
  404064:	str	x21, [sp, #8]
  404068:	bl	403770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
  40406c:	adrp	x9, 483000 <_obstack_memory_used@@Base+0x72fc>
  404070:	add	x9, x9, #0xa16
  404074:	ldr	x8, [sp, #8]
  404078:	ldur	x10, [x9, #13]
  40407c:	ldr	q0, [x9]
  404080:	str	x0, [x19, #1328]
  404084:	str	x8, [x19, #1344]
  404088:	stur	x10, [x0, #13]
  40408c:	str	q0, [x0]
  404090:	ldr	x9, [x19, #1328]
  404094:	add	x10, x19, #0x570
  404098:	add	x0, x19, #0x560
  40409c:	add	x1, sp, #0x8
  4040a0:	mov	x2, xzr
  4040a4:	str	x8, [x19, #1336]
  4040a8:	strb	wzr, [x9, x8]
  4040ac:	str	wzr, [x19, #1360]
  4040b0:	str	x20, [x19, #1368]
  4040b4:	str	x10, [x19, #1376]
  4040b8:	str	x21, [sp, #8]
  4040bc:	bl	403770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
  4040c0:	adrp	x9, 483000 <_obstack_memory_used@@Base+0x72fc>
  4040c4:	add	x9, x9, #0xa2c
  4040c8:	ldr	x8, [sp, #8]
  4040cc:	ldur	x10, [x9, #13]
  4040d0:	ldr	q0, [x9]
  4040d4:	str	x0, [x19, #1376]
  4040d8:	str	x8, [x19, #1392]
  4040dc:	stur	x10, [x0, #13]
  4040e0:	str	q0, [x0]
  4040e4:	ldr	x9, [x19, #1376]
  4040e8:	add	x10, x19, #0x5a0
  4040ec:	add	x0, x19, #0x590
  4040f0:	add	x1, sp, #0x8
  4040f4:	mov	x2, xzr
  4040f8:	str	x8, [x19, #1384]
  4040fc:	strb	wzr, [x9, x8]
  404100:	str	wzr, [x19, #1408]
  404104:	str	x20, [x19, #1416]
  404108:	str	x10, [x19, #1424]
  40410c:	str	x21, [sp, #8]
  404110:	bl	403770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
  404114:	adrp	x9, 483000 <_obstack_memory_used@@Base+0x72fc>
  404118:	add	x9, x9, #0xa42
  40411c:	ldr	x8, [sp, #8]
  404120:	ldur	x10, [x9, #13]
  404124:	ldr	q0, [x9]
  404128:	str	x0, [x19, #1424]
  40412c:	str	x8, [x19, #1440]
  404130:	stur	x10, [x0, #13]
  404134:	str	q0, [x0]
  404138:	ldr	x9, [x19, #1424]
  40413c:	add	x10, x19, #0x5d0
  404140:	add	x0, x19, #0x5c0
  404144:	add	x1, sp, #0x8
  404148:	mov	x2, xzr
  40414c:	str	x8, [x19, #1432]
  404150:	strb	wzr, [x9, x8]
  404154:	str	w27, [x19, #1456]
  404158:	str	x28, [x19, #1464]
  40415c:	str	x10, [x19, #1472]
  404160:	str	x21, [sp, #8]
  404164:	bl	403770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
  404168:	adrp	x9, 483000 <_obstack_memory_used@@Base+0x72fc>
  40416c:	add	x9, x9, #0xa58
  404170:	ldr	x8, [sp, #8]
  404174:	ldur	x10, [x9, #13]
  404178:	ldr	q0, [x9]
  40417c:	str	x0, [x19, #1472]
  404180:	str	x8, [x19, #1488]
  404184:	stur	x10, [x0, #13]
  404188:	str	q0, [x0]
  40418c:	ldr	x9, [x19, #1472]
  404190:	add	x10, x19, #0x600
  404194:	str	x8, [x19, #1480]
  404198:	mov	w11, #0x6567                	// #25959
  40419c:	strb	wzr, [x9, x8]
  4041a0:	mov	w9, #0x7265                	// #29285
  4041a4:	add	x8, x19, #0x5f0
  4041a8:	movk	w9, #0x6369, lsl #16
  4041ac:	movk	w11, #0x656e, lsl #16
  4041b0:	str	x10, [x19, #1520]
  4041b4:	add	x10, x19, #0x630
  4041b8:	str	x28, [x19, #1512]
  4041bc:	str	w27, [x19, #1504]
  4041c0:	stur	w9, [x8, #19]
  4041c4:	str	w11, [x19, #1536]
  4041c8:	str	x25, [x19, #1528]
  4041cc:	strb	wzr, [x8, #23]
  4041d0:	str	wzr, [x19, #1552]
  4041d4:	str	x23, [x19, #1560]
  4041d8:	str	x10, [x19, #1568]
  4041dc:	str	xzr, [x19, #1576]
  4041e0:	strb	wzr, [x19, #1584]
  4041e4:	str	w22, [x19, #1600]
  4041e8:	str	xzr, [x19, #1608]
  4041ec:	adrp	x19, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4041f0:	adrp	x0, 403000 <readlink@plt>
  4041f4:	add	x19, x19, #0x4b0
  4041f8:	add	x0, x0, #0x8b0
  4041fc:	mov	x1, xzr
  404200:	mov	x2, x19
  404204:	bl	403520 <__cxa_atexit@plt>
  404208:	adrp	x11, 483000 <_obstack_memory_used@@Base+0x72fc>
  40420c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404210:	add	x11, x11, #0xa76
  404214:	add	x8, x8, #0xfd0
  404218:	mov	w9, #0x7261                	// #29281
  40421c:	mov	w10, #0x3876                	// #14454
  404220:	ldr	x11, [x11]
  404224:	movk	w9, #0x766d, lsl #16
  404228:	movk	w10, #0x612d, lsl #16
  40422c:	mov	x13, x8
  404230:	str	wzr, [x8]
  404234:	str	w9, [x13, #24]!
  404238:	stur	w10, [x8, #27]
  40423c:	adrp	x10, 483000 <_obstack_memory_used@@Base+0x72fc>
  404240:	add	x10, x10, #0xa80
  404244:	adrp	x14, 483000 <_obstack_memory_used@@Base+0x72fc>
  404248:	stp	x13, x25, [x8, #8]
  40424c:	mov	x13, x8
  404250:	str	w26, [x8, #48]
  404254:	add	x14, x14, #0xa99
  404258:	strb	wzr, [x8, #31]
  40425c:	str	x23, [x8, #40]
  404260:	str	x11, [x13, #72]!
  404264:	ldr	x10, [x10]
  404268:	stp	x13, x24, [x8, #56]
  40426c:	ldr	x13, [x14]
  404270:	mov	w12, #0x61                  	// #97
  404274:	mov	w9, #0x7b                  	// #123
  404278:	mov	x15, x8
  40427c:	str	x9, [x8, #88]
  404280:	adrp	x9, 483000 <_obstack_memory_used@@Base+0x72fc>
  404284:	str	w27, [x8, #96]
  404288:	strh	w12, [x8, #80]
  40428c:	str	x10, [x15, #120]!
  404290:	mov	w11, #0x17b                 	// #379
  404294:	add	x9, x9, #0xa8f
  404298:	str	x15, [x8, #104]
  40429c:	strb	w12, [x8, #128]
  4042a0:	str	x13, [x8, #216]!
  4042a4:	stur	x11, [x8, #-80]
  4042a8:	adrp	x11, 483000 <_obstack_memory_used@@Base+0x72fc>
  4042ac:	ldr	x9, [x9]
  4042b0:	add	x11, x11, #0xaa8
  4042b4:	ldr	x11, [x11]
  4042b8:	mov	w10, #0x97b                 	// #2427
  4042bc:	mov	w14, #0x297b                	// #10619
  4042c0:	mov	x15, x8
  4042c4:	movk	w14, #0x19, lsl #16
  4042c8:	mov	w13, #0x5                   	// #5
  4042cc:	stur	x24, [x8, #-104]
  4042d0:	sturb	wzr, [x8, #-87]
  4042d4:	stur	w23, [x8, #-72]
  4042d8:	str	x9, [x15, #-48]!
  4042dc:	mov	w9, #0x297b                	// #10619
  4042e0:	stur	x10, [x8, #-32]
  4042e4:	mov	x10, x8
  4042e8:	mov	w16, #0x4                   	// #4
  4042ec:	adrp	x0, 403000 <readlink@plt>
  4042f0:	movk	w9, #0xe59, lsl #16
  4042f4:	sturh	w12, [x8, #-40]
  4042f8:	stur	w16, [x8, #-24]
  4042fc:	add	x16, x8, #0x30
  404300:	str	x14, [x8, #16]
  404304:	add	x14, x8, #0x60
  404308:	strh	w12, [x8, #8]
  40430c:	stp	x8, x24, [x8, #-16]
  404310:	stp	x15, x24, [x8, #-64]
  404314:	str	w13, [x10, #24]!
  404318:	add	x0, x0, #0x8fc
  40431c:	mov	x1, xzr
  404320:	mov	x2, x19
  404324:	strb	w12, [x8, #56]
  404328:	stp	x24, x11, [x8, #40]
  40432c:	str	x16, [x8, #32]
  404330:	strb	wzr, [x10, #33]
  404334:	str	x9, [x8, #64]
  404338:	str	w22, [x8, #72]
  40433c:	stp	x14, xzr, [x8, #80]
  404340:	strb	wzr, [x8, #96]
  404344:	str	xzr, [x8, #112]
  404348:	bl	403520 <__cxa_atexit@plt>
  40434c:	ldp	x20, x19, [sp, #96]
  404350:	ldp	x22, x21, [sp, #80]
  404354:	ldp	x24, x23, [sp, #64]
  404358:	ldp	x26, x25, [sp, #48]
  40435c:	ldp	x28, x27, [sp, #32]
  404360:	ldp	x29, x30, [sp, #16]
  404364:	add	sp, sp, #0x70
  404368:	ret
  40436c:	stp	x29, x30, [sp, #-32]!
  404370:	str	x19, [sp, #16]
  404374:	mov	x29, sp
  404378:	adrp	x19, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40437c:	add	x19, x19, #0xfb8
  404380:	mov	x0, x19
  404384:	bl	426028 <feof@plt+0x22788>
  404388:	mov	x1, x19
  40438c:	ldr	x19, [sp, #16]
  404390:	adrp	x0, 426000 <feof@plt+0x22760>
  404394:	adrp	x2, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  404398:	add	x0, x0, #0x24c
  40439c:	add	x2, x2, #0x4b0
  4043a0:	ldp	x29, x30, [sp], #32
  4043a4:	b	403520 <__cxa_atexit@plt>
  4043a8:	mov	x29, #0x0                   	// #0
  4043ac:	mov	x30, #0x0                   	// #0
  4043b0:	mov	x5, x0
  4043b4:	ldr	x1, [sp]
  4043b8:	add	x2, sp, #0x8
  4043bc:	mov	x6, sp
  4043c0:	movz	x0, #0x0, lsl #48
  4043c4:	movk	x0, #0x0, lsl #32
  4043c8:	movk	x0, #0x41, lsl #16
  4043cc:	movk	x0, #0x6104
  4043d0:	movz	x3, #0x0, lsl #48
  4043d4:	movk	x3, #0x0, lsl #32
  4043d8:	movk	x3, #0x47, lsl #16
  4043dc:	movk	x3, #0xd580
  4043e0:	movz	x4, #0x0, lsl #48
  4043e4:	movk	x4, #0x0, lsl #32
  4043e8:	movk	x4, #0x47, lsl #16
  4043ec:	movk	x4, #0xd600
  4043f0:	bl	4033a0 <__libc_start_main@plt>
  4043f4:	bl	4036f0 <abort@plt>
  4043f8:	adrp	x0, 4f0000 <_obstack_memory_used@@Base+0x742fc>
  4043fc:	ldr	x0, [x0, #4064]
  404400:	cbz	x0, 404408 <feof@plt+0xb68>
  404404:	b	403830 <__gmon_start__@plt>
  404408:	ret
  40440c:	nop
  404410:	adrp	x0, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404414:	add	x0, x0, #0x430
  404418:	adrp	x1, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40441c:	add	x1, x1, #0x430
  404420:	cmp	x1, x0
  404424:	b.eq	40443c <feof@plt+0xb9c>  // b.none
  404428:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x12fc>
  40442c:	ldr	x1, [x1, #1592]
  404430:	cbz	x1, 40443c <feof@plt+0xb9c>
  404434:	mov	x16, x1
  404438:	br	x16
  40443c:	ret
  404440:	adrp	x0, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404444:	add	x0, x0, #0x430
  404448:	adrp	x1, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40444c:	add	x1, x1, #0x430
  404450:	sub	x1, x1, x0
  404454:	lsr	x2, x1, #63
  404458:	add	x1, x2, x1, asr #3
  40445c:	cmp	xzr, x1, asr #1
  404460:	asr	x1, x1, #1
  404464:	b.eq	40447c <feof@plt+0xbdc>  // b.none
  404468:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x12fc>
  40446c:	ldr	x2, [x2, #1600]
  404470:	cbz	x2, 40447c <feof@plt+0xbdc>
  404474:	mov	x16, x2
  404478:	br	x16
  40447c:	ret
  404480:	stp	x29, x30, [sp, #-32]!
  404484:	mov	x29, sp
  404488:	str	x19, [sp, #16]
  40448c:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404490:	ldrb	w0, [x19, #1104]
  404494:	cbnz	w0, 4044a4 <feof@plt+0xc04>
  404498:	bl	404410 <feof@plt+0xb70>
  40449c:	mov	w0, #0x1                   	// #1
  4044a0:	strb	w0, [x19, #1104]
  4044a4:	ldr	x19, [sp, #16]
  4044a8:	ldp	x29, x30, [sp], #32
  4044ac:	ret
  4044b0:	b	404440 <feof@plt+0xba0>
  4044b4:	and	w8, w1, #0x1
  4044b8:	and	w9, w2, #0x1
  4044bc:	strb	w8, [x0]
  4044c0:	strb	w9, [x0, #1]
  4044c4:	ret
  4044c8:	stp	x29, x30, [sp, #-32]!
  4044cc:	stp	x20, x19, [sp, #16]
  4044d0:	mov	x29, sp
  4044d4:	mov	x20, x0
  4044d8:	mov	x0, x1
  4044dc:	mov	x19, x1
  4044e0:	bl	403700 <getenv@plt>
  4044e4:	ldrb	w8, [x20, #1]
  4044e8:	mov	x20, x0
  4044ec:	cbnz	w8, 404500 <feof@plt+0xc60>
  4044f0:	mov	x0, x20
  4044f4:	ldp	x20, x19, [sp, #16]
  4044f8:	ldp	x29, x30, [sp], #32
  4044fc:	ret
  404500:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404504:	ldr	x0, [x8, #1096]
  404508:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40450c:	add	x1, x1, #0x5b4
  404510:	mov	x2, x19
  404514:	mov	x3, x20
  404518:	bl	4030d0 <fprintf@plt>
  40451c:	b	4044f0 <feof@plt+0xc50>
  404520:	stp	x29, x30, [sp, #-96]!
  404524:	str	x27, [sp, #16]
  404528:	stp	x26, x25, [sp, #32]
  40452c:	stp	x24, x23, [sp, #48]
  404530:	stp	x22, x21, [sp, #64]
  404534:	stp	x20, x19, [sp, #80]
  404538:	mov	x29, sp
  40453c:	ldrb	w8, [x0, #1]
  404540:	mov	x20, x0
  404544:	mov	x19, x1
  404548:	cbnz	w8, 4046bc <feof@plt+0xe1c>
  40454c:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  404550:	ldr	w8, [x8, #120]
  404554:	cbz	w8, 404570 <feof@plt+0xcd0>
  404558:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40455c:	ldr	x0, [x8, #1096]
  404560:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  404564:	add	x1, x1, #0x467
  404568:	mov	x2, x19
  40456c:	bl	429778 <feof@plt+0x25ed8>
  404570:	ldrb	w8, [x20]
  404574:	cbz	w8, 40469c <feof@plt+0xdfc>
  404578:	mov	w1, #0x3d                  	// #61
  40457c:	mov	x0, x19
  404580:	bl	403210 <strchr@plt>
  404584:	cbz	x0, 404704 <feof@plt+0xe64>
  404588:	sub	x1, x0, x19
  40458c:	mov	x0, x19
  404590:	bl	47d234 <_obstack_memory_used@@Base+0x1530>
  404594:	mov	x21, x0
  404598:	bl	403700 <getenv@plt>
  40459c:	ldrb	w8, [x20, #1]
  4045a0:	mov	x22, x0
  4045a4:	cbnz	w8, 4046e4 <feof@plt+0xe44>
  4045a8:	cbz	x22, 4045b8 <feof@plt+0xd18>
  4045ac:	mov	x0, x22
  4045b0:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  4045b4:	mov	x22, x0
  4045b8:	ldr	x24, [x20, #8]
  4045bc:	cbz	x24, 404604 <feof@plt+0xd64>
  4045c0:	ldp	w8, w9, [x24]
  4045c4:	and	w0, w8, #0x7fffffff
  4045c8:	cmp	w0, w9
  4045cc:	b.ne	404684 <feof@plt+0xde4>  // b.any
  4045d0:	tbnz	w8, #31, 404614 <feof@plt+0xd74>
  4045d4:	add	w1, w0, #0x1
  4045d8:	bl	425fbc <feof@plt+0x2271c>
  4045dc:	mov	w23, w0
  4045e0:	ldr	x0, [x20, #8]
  4045e4:	mov	w8, w23
  4045e8:	mov	w1, #0x8                   	// #8
  4045ec:	bfi	x1, x8, #4, #32
  4045f0:	mov	w25, wzr
  4045f4:	cbz	x0, 4046d8 <feof@plt+0xe38>
  4045f8:	ldr	w27, [x0, #4]
  4045fc:	mov	w26, wzr
  404600:	b	404644 <feof@plt+0xda4>
  404604:	mov	w25, wzr
  404608:	mov	w26, wzr
  40460c:	mov	w23, #0x4                   	// #4
  404610:	b	404630 <feof@plt+0xd90>
  404614:	str	xzr, [x20, #8]
  404618:	ldr	w25, [x24, #4]
  40461c:	mov	w8, #0x4                   	// #4
  404620:	mov	w26, #0x1                   	// #1
  404624:	add	w9, w25, #0x1
  404628:	cmp	w9, #0x4
  40462c:	csinc	w23, w8, w25, ls  // ls = plast
  404630:	mov	w8, w23
  404634:	mov	w1, #0x8                   	// #8
  404638:	mov	x0, xzr
  40463c:	mov	w27, wzr
  404640:	bfi	x1, x8, #4, #32
  404644:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  404648:	and	w8, w23, #0x7fffffff
  40464c:	str	x0, [x20, #8]
  404650:	stp	w8, w27, [x0]
  404654:	cbz	w26, 404684 <feof@plt+0xde4>
  404658:	ldr	x9, [x20, #8]
  40465c:	cbz	w25, 404680 <feof@plt+0xde0>
  404660:	add	x8, x24, #0x8
  404664:	add	x9, x9, #0x8
  404668:	mov	w10, w25
  40466c:	ldr	q0, [x8], #16
  404670:	subs	w10, w10, #0x1
  404674:	str	q0, [x9], #16
  404678:	b.ne	40466c <feof@plt+0xdcc>  // b.any
  40467c:	ldr	x9, [x20, #8]
  404680:	str	w25, [x9, #4]
  404684:	ldr	x8, [x20, #8]
  404688:	ldr	w9, [x8, #4]
  40468c:	add	w10, w9, #0x1
  404690:	add	x9, x8, x9, lsl #4
  404694:	str	w10, [x8, #4]
  404698:	stp	x21, x22, [x9, #8]
  40469c:	mov	x0, x19
  4046a0:	ldp	x20, x19, [sp, #80]
  4046a4:	ldp	x22, x21, [sp, #64]
  4046a8:	ldp	x24, x23, [sp, #48]
  4046ac:	ldp	x26, x25, [sp, #32]
  4046b0:	ldr	x27, [sp, #16]
  4046b4:	ldp	x29, x30, [sp], #96
  4046b8:	b	403230 <putenv@plt>
  4046bc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4046c0:	ldr	x0, [x8, #1096]
  4046c4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4046c8:	add	x1, x1, #0x5d4
  4046cc:	mov	x2, x19
  4046d0:	bl	4030d0 <fprintf@plt>
  4046d4:	b	40454c <feof@plt+0xcac>
  4046d8:	mov	w26, wzr
  4046dc:	mov	w27, wzr
  4046e0:	b	404644 <feof@plt+0xda4>
  4046e4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4046e8:	ldr	x0, [x8, #1096]
  4046ec:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4046f0:	add	x1, x1, #0x601
  4046f4:	mov	x2, x22
  4046f8:	bl	4030d0 <fprintf@plt>
  4046fc:	cbnz	x22, 4045ac <feof@plt+0xd0c>
  404700:	b	4045b8 <feof@plt+0xd18>
  404704:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  404708:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40470c:	add	x0, x0, #0x5ec
  404710:	add	x2, x2, #0x5fc
  404714:	mov	w1, #0x7d                  	// #125
  404718:	bl	429434 <feof@plt+0x25b94>
  40471c:	stp	x29, x30, [sp, #-48]!
  404720:	stp	x22, x21, [sp, #16]
  404724:	stp	x20, x19, [sp, #32]
  404728:	mov	x29, sp
  40472c:	ldrb	w8, [x0]
  404730:	cbz	w8, 4047c8 <feof@plt+0xf28>
  404734:	ldr	x8, [x0, #8]
  404738:	mov	x19, x0
  40473c:	cbz	x8, 4047b8 <feof@plt+0xf18>
  404740:	ldr	w9, [x8, #4]
  404744:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x22fc>
  404748:	add	x20, x20, #0x61f
  40474c:	sub	w21, w9, #0x1
  404750:	b	404774 <feof@plt+0xed4>
  404754:	bl	4033c0 <unsetenv@plt>
  404758:	ldr	x0, [x22]
  40475c:	bl	4031d0 <free@plt>
  404760:	ldr	x0, [x22, #8]
  404764:	bl	4031d0 <free@plt>
  404768:	ldr	x8, [x19, #8]
  40476c:	sub	w21, w21, #0x1
  404770:	cbz	x8, 4047b8 <feof@plt+0xf18>
  404774:	ldr	w9, [x8, #4]
  404778:	add	x10, x8, w21, uxtw #4
  40477c:	add	x10, x10, #0x8
  404780:	cmp	w9, w21
  404784:	csel	x22, x10, xzr, hi  // hi = pmore
  404788:	b.ls	4047b4 <feof@plt+0xf14>  // b.plast
  40478c:	ldrb	w8, [x19, #1]
  404790:	cbz	w8, 4047a0 <feof@plt+0xf00>
  404794:	ldp	x1, x2, [x22]
  404798:	mov	x0, x20
  40479c:	bl	403880 <printf@plt>
  4047a0:	ldp	x0, x1, [x22]
  4047a4:	cbz	x1, 404754 <feof@plt+0xeb4>
  4047a8:	mov	w2, #0x1                   	// #1
  4047ac:	bl	4036a0 <setenv@plt>
  4047b0:	b	404758 <feof@plt+0xeb8>
  4047b4:	str	wzr, [x8, #4]
  4047b8:	ldp	x20, x19, [sp, #32]
  4047bc:	ldp	x22, x21, [sp, #16]
  4047c0:	ldp	x29, x30, [sp], #48
  4047c4:	ret
  4047c8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4047cc:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4047d0:	add	x0, x0, #0x5ec
  4047d4:	add	x2, x2, #0x617
  4047d8:	mov	w1, #0x95                  	// #149
  4047dc:	bl	429434 <feof@plt+0x25b94>
  4047e0:	stp	x29, x30, [sp, #-48]!
  4047e4:	stp	x22, x21, [sp, #16]
  4047e8:	stp	x20, x19, [sp, #32]
  4047ec:	mov	x29, sp
  4047f0:	mov	w20, w2
  4047f4:	mov	w21, w1
  4047f8:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  4047fc:	mov	x19, x0
  404800:	cbz	w21, 40483c <feof@plt+0xf9c>
  404804:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404808:	ldr	x22, [x21, #1128]
  40480c:	cbz	x22, 404828 <feof@plt+0xf88>
  404810:	ldr	x1, [x22]
  404814:	mov	x0, x19
  404818:	bl	479ca4 <feof@plt+0x76404>
  40481c:	cbz	w0, 404888 <feof@plt+0xfe8>
  404820:	ldr	x22, [x22, #8]
  404824:	cbnz	x22, 404810 <feof@plt+0xf70>
  404828:	mov	w0, #0x10                  	// #16
  40482c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  404830:	ldr	x8, [x21, #1128]
  404834:	str	x0, [x21, #1128]
  404838:	stp	x19, x8, [x0]
  40483c:	cbz	w20, 404878 <feof@plt+0xfd8>
  404840:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404844:	ldr	x21, [x20, #1136]
  404848:	cbz	x21, 404864 <feof@plt+0xfc4>
  40484c:	ldr	x1, [x21]
  404850:	mov	x0, x19
  404854:	bl	479ca4 <feof@plt+0x76404>
  404858:	cbz	w0, 404898 <feof@plt+0xff8>
  40485c:	ldr	x21, [x21, #8]
  404860:	cbnz	x21, 40484c <feof@plt+0xfac>
  404864:	mov	w0, #0x10                  	// #16
  404868:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40486c:	ldr	x8, [x20, #1136]
  404870:	str	x0, [x20, #1136]
  404874:	stp	x19, x8, [x0]
  404878:	ldp	x20, x19, [sp, #32]
  40487c:	ldp	x22, x21, [sp, #16]
  404880:	ldp	x29, x30, [sp], #48
  404884:	ret
  404888:	mov	x0, x19
  40488c:	bl	4031d0 <free@plt>
  404890:	cbnz	w20, 404840 <feof@plt+0xfa0>
  404894:	b	404878 <feof@plt+0xfd8>
  404898:	mov	x0, x19
  40489c:	ldp	x20, x19, [sp, #32]
  4048a0:	ldp	x22, x21, [sp, #16]
  4048a4:	ldp	x29, x30, [sp], #48
  4048a8:	b	4031d0 <free@plt>
  4048ac:	stp	x29, x30, [sp, #-48]!
  4048b0:	str	x21, [sp, #16]
  4048b4:	stp	x20, x19, [sp, #32]
  4048b8:	mov	x29, sp
  4048bc:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4048c0:	ldr	x8, [x20, #1184]
  4048c4:	cbz	x8, 4048cc <feof@plt+0x102c>
  4048c8:	str	wzr, [x8, #4]
  4048cc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4048d0:	ldr	x8, [x8, #2040]
  4048d4:	cbz	x8, 4048dc <feof@plt+0x103c>
  4048d8:	str	wzr, [x8, #4]
  4048dc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4048e0:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4048e4:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4048e8:	adrp	x11, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4048ec:	adrp	x12, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4048f0:	adrp	x13, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4048f4:	adrp	x14, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4048f8:	mov	w1, wzr
  4048fc:	mov	x2, xzr
  404900:	strb	wzr, [x8, #1988]
  404904:	str	wzr, [x9, #1992]
  404908:	strb	wzr, [x10, #1996]
  40490c:	strb	wzr, [x11, #2000]
  404910:	strb	wzr, [x12, #2004]
  404914:	strb	wzr, [x13, #2008]
  404918:	str	xzr, [x14, #2016]
  40491c:	bl	40c344 <feof@plt+0x8aa4>
  404920:	mov	w19, w0
  404924:	bl	4105cc <feof@plt+0xcd2c>
  404928:	cbnz	w19, 404984 <feof@plt+0x10e4>
  40492c:	ldr	x19, [x20, #1184]
  404930:	cbz	x19, 40495c <feof@plt+0x10bc>
  404934:	ldr	w8, [x19, #4]
  404938:	cbz	w8, 40495c <feof@plt+0x10bc>
  40493c:	sub	w21, w8, #0x1
  404940:	add	x8, x19, w21, uxtw #3
  404944:	ldr	x0, [x8, #8]
  404948:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40494c:	add	x1, x1, #0x56d
  404950:	bl	403640 <strcmp@plt>
  404954:	cbnz	w0, 40495c <feof@plt+0x10bc>
  404958:	str	w21, [x19, #4]
  40495c:	bl	404998 <feof@plt+0x10f8>
  404960:	ldr	x8, [x20, #1184]
  404964:	cbz	x8, 404980 <feof@plt+0x10e0>
  404968:	ldr	w8, [x8, #4]
  40496c:	cbz	w8, 404980 <feof@plt+0x10e0>
  404970:	ldp	x20, x19, [sp, #32]
  404974:	ldr	x21, [sp, #16]
  404978:	ldp	x29, x30, [sp], #48
  40497c:	b	404e30 <feof@plt+0x1590>
  404980:	mov	w19, wzr
  404984:	mov	w0, w19
  404988:	ldp	x20, x19, [sp, #32]
  40498c:	ldr	x21, [sp, #16]
  404990:	ldp	x29, x30, [sp], #48
  404994:	ret
  404998:	sub	sp, sp, #0x70
  40499c:	stp	x29, x30, [sp, #16]
  4049a0:	stp	x28, x27, [sp, #32]
  4049a4:	stp	x26, x25, [sp, #48]
  4049a8:	stp	x24, x23, [sp, #64]
  4049ac:	stp	x22, x21, [sp, #80]
  4049b0:	stp	x20, x19, [sp, #96]
  4049b4:	add	x29, sp, #0x10
  4049b8:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4049bc:	add	x24, x24, #0x670
  4049c0:	ldp	x8, x9, [x24]
  4049c4:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4049c8:	add	x19, x19, #0x658
  4049cc:	sub	x9, x9, x8
  4049d0:	cmp	x9, #0x13
  4049d4:	b.hi	4049e8 <feof@plt+0x1148>  // b.pmore
  4049d8:	mov	w1, #0x14                  	// #20
  4049dc:	mov	x0, x19
  4049e0:	bl	47bae8 <_obstack_newchunk@@Base>
  4049e4:	ldr	x8, [x19, #24]
  4049e8:	adrp	x10, 47f000 <_obstack_memory_used@@Base+0x32fc>
  4049ec:	add	x10, x10, #0x548
  4049f0:	ldr	q0, [x10]
  4049f4:	mov	w9, #0x4e4f                	// #20047
  4049f8:	movk	w9, #0x3d53, lsl #16
  4049fc:	adrp	x25, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404a00:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404a04:	str	w9, [x8, #16]
  404a08:	str	q0, [x8]
  404a0c:	ldr	x8, [x25, #1648]
  404a10:	ldr	w9, [x20, #1560]
  404a14:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404a18:	add	x8, x8, #0x14
  404a1c:	cmp	w9, #0x1
  404a20:	str	x8, [x25, #1648]
  404a24:	b.lt	404d8c <feof@plt+0x14ec>  // b.tstop
  404a28:	mov	w27, #0x5c27                	// #23591
  404a2c:	mov	x28, xzr
  404a30:	mov	w9, wzr
  404a34:	movk	w27, #0x2727, lsl #16
  404a38:	b	404a58 <feof@plt+0x11b8>
  404a3c:	ldr	x28, [sp, #8]
  404a40:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404a44:	ldrsw	x9, [x20, #1560]
  404a48:	add	x28, x28, #0x1
  404a4c:	cmp	x28, x9
  404a50:	mov	w9, #0x1                   	// #1
  404a54:	b.ge	404d8c <feof@plt+0x14ec>  // b.tcont
  404a58:	tbz	w9, #0, 404a8c <feof@plt+0x11ec>
  404a5c:	ldr	x9, [x26, #1656]
  404a60:	cmp	x9, x8
  404a64:	b.ne	404a78 <feof@plt+0x11d8>  // b.any
  404a68:	mov	w1, #0x1                   	// #1
  404a6c:	mov	x0, x19
  404a70:	bl	47bae8 <_obstack_newchunk@@Base>
  404a74:	ldr	x8, [x19, #24]
  404a78:	mov	w9, #0x20                  	// #32
  404a7c:	strb	w9, [x8]
  404a80:	ldr	x8, [x25, #1648]
  404a84:	add	x8, x8, #0x1
  404a88:	str	x8, [x25, #1648]
  404a8c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404a90:	ldr	x9, [x9, #1592]
  404a94:	mov	w10, #0x18                  	// #24
  404a98:	mov	w11, #0x14                  	// #20
  404a9c:	madd	x10, x28, x10, x9
  404aa0:	ldr	w10, [x10, #16]
  404aa4:	and	w10, w10, w11
  404aa8:	cmp	w10, #0x4
  404aac:	b.eq	404a44 <feof@plt+0x11a4>  // b.none
  404ab0:	ldr	x10, [x26, #1656]
  404ab4:	sub	x10, x10, x8
  404ab8:	cmp	x10, #0x1
  404abc:	b.hi	404ad8 <feof@plt+0x1238>  // b.pmore
  404ac0:	mov	w1, #0x2                   	// #2
  404ac4:	mov	x0, x19
  404ac8:	bl	47bae8 <_obstack_newchunk@@Base>
  404acc:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404ad0:	ldr	x8, [x19, #24]
  404ad4:	ldr	x9, [x9, #1592]
  404ad8:	mov	w10, #0x2d27                	// #11559
  404adc:	strh	w10, [x8]
  404ae0:	ldr	x8, [x25, #1648]
  404ae4:	mov	w1, #0x27                  	// #39
  404ae8:	add	x21, x8, #0x2
  404aec:	mov	w8, #0x18                  	// #24
  404af0:	str	x21, [x25, #1648]
  404af4:	mul	x8, x28, x8
  404af8:	ldr	x20, [x9, x8]
  404afc:	mov	x0, x20
  404b00:	bl	403210 <strchr@plt>
  404b04:	cbz	x0, 404b98 <feof@plt+0x12f8>
  404b08:	mov	x22, x0
  404b0c:	b	404b38 <feof@plt+0x1298>
  404b10:	str	w27, [x8]
  404b14:	ldr	x8, [x25, #1648]
  404b18:	add	x20, x22, #0x1
  404b1c:	mov	w1, #0x27                  	// #39
  404b20:	mov	x0, x20
  404b24:	add	x21, x8, #0x4
  404b28:	str	x21, [x25, #1648]
  404b2c:	bl	403210 <strchr@plt>
  404b30:	mov	x22, x0
  404b34:	cbz	x0, 404b98 <feof@plt+0x12f8>
  404b38:	ldr	x8, [x26, #1656]
  404b3c:	sub	x23, x22, x20
  404b40:	sub	x8, x8, x21
  404b44:	cmp	x8, x23
  404b48:	b.cs	404b5c <feof@plt+0x12bc>  // b.hs, b.nlast
  404b4c:	mov	x0, x19
  404b50:	mov	x1, x23
  404b54:	bl	47bae8 <_obstack_newchunk@@Base>
  404b58:	ldr	x21, [x19, #24]
  404b5c:	mov	x0, x21
  404b60:	mov	x1, x20
  404b64:	mov	x2, x23
  404b68:	bl	402fc0 <memcpy@plt>
  404b6c:	ldp	x8, x9, [x24]
  404b70:	add	x8, x8, x23
  404b74:	sub	x9, x9, x8
  404b78:	cmp	x9, #0x3
  404b7c:	str	x8, [x24]
  404b80:	b.hi	404b10 <feof@plt+0x1270>  // b.pmore
  404b84:	mov	w1, #0x4                   	// #4
  404b88:	mov	x0, x19
  404b8c:	bl	47bae8 <_obstack_newchunk@@Base>
  404b90:	ldr	x8, [x19, #24]
  404b94:	b	404b10 <feof@plt+0x1270>
  404b98:	mov	x0, x20
  404b9c:	bl	4030b0 <strlen@plt>
  404ba0:	ldr	x8, [x26, #1656]
  404ba4:	mov	x22, x0
  404ba8:	sub	x8, x8, x21
  404bac:	cmp	x8, x0
  404bb0:	b.cs	404bc4 <feof@plt+0x1324>  // b.hs, b.nlast
  404bb4:	mov	x0, x19
  404bb8:	mov	x1, x22
  404bbc:	bl	47bae8 <_obstack_newchunk@@Base>
  404bc0:	ldr	x21, [x19, #24]
  404bc4:	mov	x0, x21
  404bc8:	mov	x1, x20
  404bcc:	mov	x2, x22
  404bd0:	bl	402fc0 <memcpy@plt>
  404bd4:	ldp	x8, x9, [x24]
  404bd8:	add	x8, x8, x22
  404bdc:	cmp	x9, x8
  404be0:	str	x8, [x24]
  404be4:	b.ne	404bf8 <feof@plt+0x1358>  // b.any
  404be8:	mov	w1, #0x1                   	// #1
  404bec:	mov	x0, x19
  404bf0:	bl	47bae8 <_obstack_newchunk@@Base>
  404bf4:	ldr	x8, [x19, #24]
  404bf8:	mov	w9, #0x27                  	// #39
  404bfc:	strb	w9, [x8]
  404c00:	ldr	x8, [x25, #1648]
  404c04:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404c08:	ldr	x9, [x9, #1592]
  404c0c:	mov	w10, #0x18                  	// #24
  404c10:	add	x8, x8, #0x1
  404c14:	str	x8, [x25, #1648]
  404c18:	madd	x9, x28, x10, x9
  404c1c:	str	x28, [sp, #8]
  404c20:	ldr	x28, [x9, #8]
  404c24:	cbz	x28, 404a3c <feof@plt+0x119c>
  404c28:	ldr	x9, [x28]
  404c2c:	cbnz	x9, 404c50 <feof@plt+0x13b0>
  404c30:	b	404a3c <feof@plt+0x119c>
  404c34:	mov	w9, #0x27                  	// #39
  404c38:	strb	w9, [x8]
  404c3c:	ldr	x8, [x25, #1648]
  404c40:	add	x8, x8, #0x1
  404c44:	str	x8, [x25, #1648]
  404c48:	ldr	x9, [x28, #8]!
  404c4c:	cbz	x9, 404a3c <feof@plt+0x119c>
  404c50:	ldr	x9, [x26, #1656]
  404c54:	sub	x9, x9, x8
  404c58:	cmp	x9, #0x1
  404c5c:	b.hi	404c70 <feof@plt+0x13d0>  // b.pmore
  404c60:	mov	w1, #0x2                   	// #2
  404c64:	mov	x0, x19
  404c68:	bl	47bae8 <_obstack_newchunk@@Base>
  404c6c:	ldr	x8, [x19, #24]
  404c70:	mov	w9, #0x2720                	// #10016
  404c74:	strh	w9, [x8]
  404c78:	ldr	x8, [x25, #1648]
  404c7c:	mov	w1, #0x27                  	// #39
  404c80:	add	x21, x8, #0x2
  404c84:	str	x21, [x25, #1648]
  404c88:	ldr	x20, [x28]
  404c8c:	mov	x0, x20
  404c90:	bl	403210 <strchr@plt>
  404c94:	cbz	x0, 404d28 <feof@plt+0x1488>
  404c98:	mov	x22, x0
  404c9c:	b	404cc8 <feof@plt+0x1428>
  404ca0:	str	w27, [x8]
  404ca4:	ldr	x8, [x25, #1648]
  404ca8:	add	x20, x22, #0x1
  404cac:	mov	w1, #0x27                  	// #39
  404cb0:	mov	x0, x20
  404cb4:	add	x21, x8, #0x4
  404cb8:	str	x21, [x25, #1648]
  404cbc:	bl	403210 <strchr@plt>
  404cc0:	mov	x22, x0
  404cc4:	cbz	x0, 404d28 <feof@plt+0x1488>
  404cc8:	ldr	x8, [x26, #1656]
  404ccc:	sub	x23, x22, x20
  404cd0:	sub	x8, x8, x21
  404cd4:	cmp	x8, x23
  404cd8:	b.cs	404cec <feof@plt+0x144c>  // b.hs, b.nlast
  404cdc:	mov	x0, x19
  404ce0:	mov	x1, x23
  404ce4:	bl	47bae8 <_obstack_newchunk@@Base>
  404ce8:	ldr	x21, [x19, #24]
  404cec:	mov	x0, x21
  404cf0:	mov	x1, x20
  404cf4:	mov	x2, x23
  404cf8:	bl	402fc0 <memcpy@plt>
  404cfc:	ldp	x8, x9, [x24]
  404d00:	add	x8, x8, x23
  404d04:	sub	x9, x9, x8
  404d08:	cmp	x9, #0x3
  404d0c:	str	x8, [x24]
  404d10:	b.hi	404ca0 <feof@plt+0x1400>  // b.pmore
  404d14:	mov	w1, #0x4                   	// #4
  404d18:	mov	x0, x19
  404d1c:	bl	47bae8 <_obstack_newchunk@@Base>
  404d20:	ldr	x8, [x19, #24]
  404d24:	b	404ca0 <feof@plt+0x1400>
  404d28:	mov	x0, x20
  404d2c:	bl	4030b0 <strlen@plt>
  404d30:	ldr	x8, [x26, #1656]
  404d34:	mov	x22, x0
  404d38:	sub	x8, x8, x21
  404d3c:	cmp	x8, x0
  404d40:	b.cs	404d54 <feof@plt+0x14b4>  // b.hs, b.nlast
  404d44:	mov	x0, x19
  404d48:	mov	x1, x22
  404d4c:	bl	47bae8 <_obstack_newchunk@@Base>
  404d50:	ldr	x21, [x19, #24]
  404d54:	mov	x0, x21
  404d58:	mov	x1, x20
  404d5c:	mov	x2, x22
  404d60:	bl	402fc0 <memcpy@plt>
  404d64:	ldp	x8, x9, [x24]
  404d68:	add	x8, x8, x22
  404d6c:	cmp	x9, x8
  404d70:	str	x8, [x24]
  404d74:	b.ne	404c34 <feof@plt+0x1394>  // b.any
  404d78:	mov	w1, #0x1                   	// #1
  404d7c:	mov	x0, x19
  404d80:	bl	47bae8 <_obstack_newchunk@@Base>
  404d84:	ldr	x8, [x19, #24]
  404d88:	b	404c34 <feof@plt+0x1394>
  404d8c:	ldr	x9, [x26, #1656]
  404d90:	cmp	x9, x8
  404d94:	b.ne	404da8 <feof@plt+0x1508>  // b.any
  404d98:	mov	w1, #0x1                   	// #1
  404d9c:	mov	x0, x19
  404da0:	bl	47bae8 <_obstack_newchunk@@Base>
  404da4:	ldr	x8, [x19, #24]
  404da8:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404dac:	strb	wzr, [x8]
  404db0:	add	x9, x9, #0x668
  404db4:	ldp	x1, x8, [x9]
  404db8:	add	x8, x8, #0x1
  404dbc:	cmp	x8, x1
  404dc0:	str	x8, [x9, #8]
  404dc4:	b.ne	404dd8 <feof@plt+0x1538>  // b.any
  404dc8:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404dcc:	ldrb	w10, [x9, #1704]
  404dd0:	orr	w10, w10, #0x2
  404dd4:	strb	w10, [x9, #1704]
  404dd8:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404ddc:	add	x9, x9, #0x660
  404de0:	ldr	x10, [x9, #40]
  404de4:	ldr	x11, [x9]
  404de8:	ldr	x12, [x9, #24]
  404dec:	adrp	x0, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404df0:	add	x8, x10, x8
  404df4:	bic	x8, x8, x10
  404df8:	sub	x13, x12, x11
  404dfc:	sub	x10, x8, x11
  404e00:	cmp	x10, x13
  404e04:	csel	x8, x12, x8, hi  // hi = pmore
  404e08:	stp	x8, x8, [x9, #8]
  404e0c:	ldp	x20, x19, [sp, #96]
  404e10:	ldp	x22, x21, [sp, #80]
  404e14:	ldp	x24, x23, [sp, #64]
  404e18:	ldp	x26, x25, [sp, #48]
  404e1c:	ldp	x28, x27, [sp, #32]
  404e20:	ldp	x29, x30, [sp, #16]
  404e24:	add	x0, x0, #0x4d0
  404e28:	add	sp, sp, #0x70
  404e2c:	b	404520 <feof@plt+0xc80>
  404e30:	stp	d9, d8, [sp, #-112]!
  404e34:	stp	x29, x30, [sp, #16]
  404e38:	stp	x28, x27, [sp, #32]
  404e3c:	stp	x26, x25, [sp, #48]
  404e40:	stp	x24, x23, [sp, #64]
  404e44:	stp	x22, x21, [sp, #80]
  404e48:	stp	x20, x19, [sp, #96]
  404e4c:	mov	x29, sp
  404e50:	sub	sp, sp, #0x40
  404e54:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404e58:	ldr	w8, [x8, #1944]
  404e5c:	cbnz	w8, 405bd8 <feof@plt+0x2338>
  404e60:	adrp	x28, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  404e64:	ldr	x8, [x28, #136]
  404e68:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  404e6c:	cbz	x8, 405110 <feof@plt+0x1870>
  404e70:	ldr	x8, [x24, #1184]
  404e74:	ldr	x19, [x8, #8]
  404e78:	ldrb	w8, [x19]
  404e7c:	cmp	w8, #0x2f
  404e80:	b.ne	404ea4 <feof@plt+0x1604>  // b.any
  404e84:	mov	w1, #0x1                   	// #1
  404e88:	mov	x0, x19
  404e8c:	bl	403290 <access@plt>
  404e90:	cbnz	w0, 404ef4 <feof@plt+0x1654>
  404e94:	mov	x0, x19
  404e98:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  404e9c:	cbnz	x0, 404eec <feof@plt+0x164c>
  404ea0:	b	404ef4 <feof@plt+0x1654>
  404ea4:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  404ea8:	add	x8, x8, #0x23b
  404eac:	mov	x0, x19
  404eb0:	stp	x19, x8, [x29, #-32]
  404eb4:	bl	4030b0 <strlen@plt>
  404eb8:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  404ebc:	ldr	d0, [x8, #1608]
  404ec0:	stur	w0, [x29, #-16]
  404ec4:	sxtw	x2, w0
  404ec8:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  404ecc:	adrp	x3, 412000 <feof@plt+0xe760>
  404ed0:	add	x0, x0, #0x4e0
  404ed4:	add	x3, x3, #0xab8
  404ed8:	sub	x4, x29, #0x20
  404edc:	mov	w1, wzr
  404ee0:	stur	d0, [x29, #-12]
  404ee4:	bl	4126ac <feof@plt+0xee0c>
  404ee8:	cbz	x0, 404ef4 <feof@plt+0x1654>
  404eec:	ldr	x8, [x24, #1184]
  404ef0:	str	x0, [x8, #8]
  404ef4:	ldr	x0, [x28, #136]
  404ef8:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  404efc:	ldr	x26, [x24, #1184]
  404f00:	mov	x19, x0
  404f04:	cbz	x26, 404f10 <feof@plt+0x1670>
  404f08:	ldr	w22, [x26, #4]
  404f0c:	b	404f14 <feof@plt+0x1674>
  404f10:	mov	w22, wzr
  404f14:	mov	w23, wzr
  404f18:	mov	x0, x19
  404f1c:	mov	w20, w23
  404f20:	sub	x0, x0, #0x1
  404f24:	ldrb	w8, [x0, #1]!
  404f28:	cmp	w8, #0x2c
  404f2c:	b.eq	404f24 <feof@plt+0x1684>  // b.none
  404f30:	mov	w1, #0x2c                  	// #44
  404f34:	add	w23, w20, #0x1
  404f38:	bl	403210 <strchr@plt>
  404f3c:	cbnz	x0, 404f1c <feof@plt+0x167c>
  404f40:	add	w27, w23, w22
  404f44:	cbz	x26, 404f78 <feof@plt+0x16d8>
  404f48:	ldp	w9, w28, [x26]
  404f4c:	and	w10, w9, #0x7fffffff
  404f50:	sub	w8, w27, w28
  404f54:	sub	w10, w10, w28
  404f58:	cmp	w10, w8
  404f5c:	b.cs	405088 <feof@plt+0x17e8>  // b.hs, b.nlast
  404f60:	tbnz	w9, #31, 404f9c <feof@plt+0x16fc>
  404f64:	mov	w21, wzr
  404f68:	mov	w25, w27
  404f6c:	mov	x0, x26
  404f70:	stur	wzr, [x29, #-40]
  404f74:	b	404fb8 <feof@plt+0x1718>
  404f78:	cbz	w27, 404f94 <feof@plt+0x16f4>
  404f7c:	mov	w21, wzr
  404f80:	stur	wzr, [x29, #-40]
  404f84:	mov	x0, xzr
  404f88:	mov	w28, wzr
  404f8c:	mov	w25, w27
  404f90:	b	404fb8 <feof@plt+0x1718>
  404f94:	mov	x8, xzr
  404f98:	b	40509c <feof@plt+0x17fc>
  404f9c:	str	xzr, [x24, #1184]
  404fa0:	ldr	w9, [x26, #4]
  404fa4:	mov	x0, xzr
  404fa8:	mov	w28, wzr
  404fac:	mov	w21, #0x1                   	// #1
  404fb0:	stur	w9, [x29, #-40]
  404fb4:	add	w25, w9, w8
  404fb8:	mov	w8, w25
  404fbc:	lsl	x8, x8, #3
  404fc0:	add	x1, x8, #0x8
  404fc4:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  404fc8:	and	w8, w25, #0x7fffffff
  404fcc:	str	x0, [x24, #1184]
  404fd0:	stp	w8, w28, [x0]
  404fd4:	cbz	w21, 405088 <feof@plt+0x17e8>
  404fd8:	ldr	x8, [x24, #1184]
  404fdc:	ldur	w17, [x29, #-40]
  404fe0:	cbz	w17, 405084 <feof@plt+0x17e4>
  404fe4:	sub	w12, w17, #0x1
  404fe8:	add	x9, x26, #0x8
  404fec:	cmp	w12, #0x3
  404ff0:	add	x10, x8, #0x8
  404ff4:	b.cs	405000 <feof@plt+0x1760>  // b.hs, b.nlast
  404ff8:	mov	w11, w17
  404ffc:	b	405074 <feof@plt+0x17d4>
  405000:	lsl	x11, x12, #3
  405004:	add	x13, x26, x11
  405008:	add	x13, x13, #0x10
  40500c:	cmp	x10, x13
  405010:	b.cs	405028 <feof@plt+0x1788>  // b.hs, b.nlast
  405014:	add	x11, x8, x11
  405018:	add	x11, x11, #0x10
  40501c:	cmp	x9, x11
  405020:	mov	w11, w17
  405024:	b.cc	405074 <feof@plt+0x17d4>  // b.lo, b.ul, b.last
  405028:	add	x12, x12, #0x1
  40502c:	and	x13, x12, #0x1fffffffc
  405030:	lsl	x9, x13, #3
  405034:	add	x10, x26, x9
  405038:	add	x15, x8, x9
  40503c:	add	x14, x8, #0x18
  405040:	sub	w11, w17, w13
  405044:	add	x9, x10, #0x8
  405048:	add	x10, x15, #0x8
  40504c:	add	x15, x26, #0x18
  405050:	mov	x16, x13
  405054:	ldp	q0, q1, [x15, #-16]
  405058:	subs	x16, x16, #0x4
  40505c:	add	x15, x15, #0x20
  405060:	stp	q0, q1, [x14, #-16]
  405064:	add	x14, x14, #0x20
  405068:	b.ne	405054 <feof@plt+0x17b4>  // b.any
  40506c:	cmp	x12, x13
  405070:	b.eq	405084 <feof@plt+0x17e4>  // b.none
  405074:	ldr	x12, [x9], #8
  405078:	subs	w11, w11, #0x1
  40507c:	str	x12, [x10], #8
  405080:	b.ne	405074 <feof@plt+0x17d4>  // b.any
  405084:	str	w17, [x8, #4]
  405088:	ldr	x8, [x24, #1184]
  40508c:	adrp	x28, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  405090:	cbz	x8, 40509c <feof@plt+0x17fc>
  405094:	str	w27, [x8, #4]
  405098:	ldr	x8, [x24, #1184]
  40509c:	add	x9, x8, #0x8
  4050a0:	cmp	x8, #0x0
  4050a4:	mov	w8, w22
  4050a8:	csel	x1, xzr, x9, eq  // eq = none
  4050ac:	add	x0, x1, w23, uxtw #3
  4050b0:	lsl	x2, x8, #3
  4050b4:	bl	403580 <memmove@plt>
  4050b8:	mov	x22, xzr
  4050bc:	b	4050e4 <feof@plt+0x1844>
  4050c0:	ldr	x8, [x24, #1184]
  4050c4:	mov	w1, #0x2c                  	// #44
  4050c8:	mov	x0, x19
  4050cc:	add	x22, x21, #0x1
  4050d0:	add	x8, x8, x21, lsl #3
  4050d4:	str	x19, [x8, #8]
  4050d8:	bl	403210 <strchr@plt>
  4050dc:	mov	x19, x0
  4050e0:	cbz	x0, 405108 <feof@plt+0x1868>
  4050e4:	ldrb	w8, [x19]
  4050e8:	mov	x21, x22
  4050ec:	cmp	w8, #0x2c
  4050f0:	b.ne	4050c0 <feof@plt+0x1820>  // b.any
  4050f4:	strb	wzr, [x19]
  4050f8:	ldrb	w8, [x19, #1]!
  4050fc:	cmp	w8, #0x2c
  405100:	b.eq	4050f4 <feof@plt+0x1854>  // b.none
  405104:	b	4050c0 <feof@plt+0x1820>
  405108:	cmp	w20, w21
  40510c:	b.ne	405bf0 <feof@plt+0x2350>  // b.any
  405110:	ldr	x22, [x24, #1184]
  405114:	cbz	x22, 405158 <feof@plt+0x18b8>
  405118:	ldr	w19, [x22, #4]
  40511c:	cbz	w19, 405170 <feof@plt+0x18d0>
  405120:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405124:	mov	x23, xzr
  405128:	add	x25, x22, #0x8
  40512c:	mov	w21, #0x1                   	// #1
  405130:	add	x20, x20, #0x56d
  405134:	ldr	x0, [x25, x23, lsl #3]
  405138:	mov	x1, x20
  40513c:	bl	403640 <strcmp@plt>
  405140:	cmp	w0, #0x0
  405144:	add	x23, x23, #0x1
  405148:	cinc	w21, w21, eq  // eq = none
  40514c:	cmp	x23, x19
  405150:	b.cc	405134 <feof@plt+0x1894>  // b.lo, b.ul, b.last
  405154:	b	405174 <feof@plt+0x18d4>
  405158:	sub	x21, sp, #0x10
  40515c:	mov	sp, x21
  405160:	mov	w20, wzr
  405164:	mov	w23, wzr
  405168:	mov	w19, #0x4                   	// #4
  40516c:	b	4051e0 <feof@plt+0x1940>
  405170:	mov	w21, #0x1                   	// #1
  405174:	sub	x21, sp, w21, uxtw #4
  405178:	mov	sp, x21
  40517c:	ldr	w8, [x22]
  405180:	and	w9, w8, #0x7fffffff
  405184:	cmp	w9, w19
  405188:	b.ne	4052b8 <feof@plt+0x1a18>  // b.any
  40518c:	tbnz	w8, #31, 4051c4 <feof@plt+0x1924>
  405190:	add	w1, w19, #0x1
  405194:	mov	w0, w19
  405198:	bl	425fbc <feof@plt+0x2271c>
  40519c:	ldr	x8, [x24, #1184]
  4051a0:	mov	w9, w0
  4051a4:	lsl	x9, x9, #3
  4051a8:	mov	w19, w0
  4051ac:	add	x1, x9, #0x8
  4051b0:	mov	w20, wzr
  4051b4:	cbz	x8, 405934 <feof@plt+0x2094>
  4051b8:	ldr	w25, [x8, #4]
  4051bc:	mov	w23, wzr
  4051c0:	b	4051f4 <feof@plt+0x1954>
  4051c4:	str	xzr, [x24, #1184]
  4051c8:	ldr	w20, [x22, #4]
  4051cc:	mov	w8, #0x4                   	// #4
  4051d0:	mov	w23, #0x1                   	// #1
  4051d4:	add	w9, w20, #0x1
  4051d8:	cmp	w9, #0x4
  4051dc:	csinc	w19, w8, w20, ls  // ls = plast
  4051e0:	mov	w9, w19
  4051e4:	lsl	x9, x9, #3
  4051e8:	mov	x8, xzr
  4051ec:	mov	w25, wzr
  4051f0:	add	x1, x9, #0x8
  4051f4:	mov	x0, x8
  4051f8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4051fc:	and	w8, w19, #0x7fffffff
  405200:	str	x0, [x24, #1184]
  405204:	stp	w8, w25, [x0]
  405208:	cbz	w23, 4052b8 <feof@plt+0x1a18>
  40520c:	ldr	x8, [x24, #1184]
  405210:	cbz	w20, 4052b4 <feof@plt+0x1a14>
  405214:	sub	w12, w20, #0x1
  405218:	add	x9, x22, #0x8
  40521c:	cmp	w12, #0x3
  405220:	add	x10, x8, #0x8
  405224:	b.cs	405230 <feof@plt+0x1990>  // b.hs, b.nlast
  405228:	mov	w11, w20
  40522c:	b	4052a4 <feof@plt+0x1a04>
  405230:	lsl	x11, x12, #3
  405234:	add	x13, x22, x11
  405238:	add	x13, x13, #0x10
  40523c:	cmp	x10, x13
  405240:	b.cs	405258 <feof@plt+0x19b8>  // b.hs, b.nlast
  405244:	add	x11, x8, x11
  405248:	add	x11, x11, #0x10
  40524c:	cmp	x9, x11
  405250:	mov	w11, w20
  405254:	b.cc	4052a4 <feof@plt+0x1a04>  // b.lo, b.ul, b.last
  405258:	add	x12, x12, #0x1
  40525c:	and	x13, x12, #0x1fffffffc
  405260:	lsl	x9, x13, #3
  405264:	add	x10, x22, x9
  405268:	add	x15, x8, x9
  40526c:	add	x14, x8, #0x18
  405270:	sub	w11, w20, w13
  405274:	add	x9, x10, #0x8
  405278:	add	x10, x15, #0x8
  40527c:	add	x15, x22, #0x18
  405280:	mov	x16, x13
  405284:	ldp	q0, q1, [x15, #-16]
  405288:	subs	x16, x16, #0x4
  40528c:	add	x15, x15, #0x20
  405290:	stp	q0, q1, [x14, #-16]
  405294:	add	x14, x14, #0x20
  405298:	b.ne	405284 <feof@plt+0x19e4>  // b.any
  40529c:	cmp	x12, x13
  4052a0:	b.eq	4052b4 <feof@plt+0x1a14>  // b.none
  4052a4:	ldr	x12, [x9], #8
  4052a8:	subs	w11, w11, #0x1
  4052ac:	str	x12, [x10], #8
  4052b0:	b.ne	4052a4 <feof@plt+0x1a04>  // b.any
  4052b4:	str	w20, [x8, #4]
  4052b8:	ldr	x8, [x24, #1184]
  4052bc:	ldr	w9, [x8, #4]
  4052c0:	add	w10, w9, #0x1
  4052c4:	add	x9, x8, x9, lsl #3
  4052c8:	str	w10, [x8, #4]
  4052cc:	str	xzr, [x9, #8]
  4052d0:	ldr	x23, [x24, #1184]
  4052d4:	mov	x8, x23
  4052d8:	ldr	x19, [x8, #8]!
  4052dc:	ldr	x9, [x28, #136]
  4052e0:	cmp	x23, #0x0
  4052e4:	csel	x20, xzr, x8, eq  // eq = none
  4052e8:	stp	x19, x20, [x21]
  4052ec:	cbnz	x9, 405370 <feof@plt+0x1ad0>
  4052f0:	ldrb	w8, [x19]
  4052f4:	cmp	w8, #0x2f
  4052f8:	b.ne	40531c <feof@plt+0x1a7c>  // b.any
  4052fc:	mov	w1, #0x1                   	// #1
  405300:	mov	x0, x19
  405304:	bl	403290 <access@plt>
  405308:	cbnz	w0, 405364 <feof@plt+0x1ac4>
  40530c:	mov	x0, x19
  405310:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  405314:	cbnz	x0, 405368 <feof@plt+0x1ac8>
  405318:	b	405364 <feof@plt+0x1ac4>
  40531c:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  405320:	add	x8, x8, #0x23b
  405324:	mov	x0, x19
  405328:	stp	x19, x8, [x29, #-32]
  40532c:	bl	4030b0 <strlen@plt>
  405330:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  405334:	ldr	d0, [x8, #1608]
  405338:	stur	w0, [x29, #-16]
  40533c:	sxtw	x2, w0
  405340:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  405344:	adrp	x3, 412000 <feof@plt+0xe760>
  405348:	add	x0, x0, #0x4e0
  40534c:	add	x3, x3, #0xab8
  405350:	sub	x4, x29, #0x20
  405354:	mov	w1, wzr
  405358:	stur	d0, [x29, #-12]
  40535c:	bl	4126ac <feof@plt+0xee0c>
  405360:	cbnz	x0, 405368 <feof@plt+0x1ac8>
  405364:	ldr	x0, [x20]
  405368:	str	x0, [x20]
  40536c:	ldr	x23, [x24, #1184]
  405370:	mov	w19, #0x1                   	// #1
  405374:	stur	x21, [x29, #-40]
  405378:	cbz	x23, 405474 <feof@plt+0x1bd4>
  40537c:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  405380:	ldr	d8, [x8, #1608]
  405384:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405388:	adrp	x27, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40538c:	adrp	x21, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  405390:	adrp	x22, 412000 <feof@plt+0xe760>
  405394:	mov	w25, #0x2                   	// #2
  405398:	mov	w26, #0x8                   	// #8
  40539c:	add	x20, x20, #0x56d
  4053a0:	add	x27, x27, #0x23b
  4053a4:	add	x21, x21, #0x4e0
  4053a8:	add	x22, x22, #0xab8
  4053ac:	b	4053d4 <feof@plt+0x1b34>
  4053b0:	mov	w1, #0x1                   	// #1
  4053b4:	mov	x0, x23
  4053b8:	bl	403290 <access@plt>
  4053bc:	cbz	w0, 405460 <feof@plt+0x1bc0>
  4053c0:	ldr	x23, [x24, #1184]
  4053c4:	add	w19, w19, #0x1
  4053c8:	add	x25, x25, #0x1
  4053cc:	add	x26, x26, #0x8
  4053d0:	cbz	x23, 405474 <feof@plt+0x1bd4>
  4053d4:	ldr	w8, [x23, #4]
  4053d8:	sub	x9, x25, #0x2
  4053dc:	cmp	x9, x8
  4053e0:	b.cs	405474 <feof@plt+0x1bd4>  // b.hs, b.nlast
  4053e4:	ldr	x0, [x23, x26]
  4053e8:	cbz	x0, 4053c8 <feof@plt+0x1b28>
  4053ec:	mov	x1, x20
  4053f0:	bl	403640 <strcmp@plt>
  4053f4:	cbnz	w0, 4053c8 <feof@plt+0x1b28>
  4053f8:	str	xzr, [x23, x26]
  4053fc:	ldr	x8, [x24, #1184]
  405400:	ldur	x9, [x29, #-40]
  405404:	ldr	x23, [x8, x25, lsl #3]
  405408:	add	x10, x8, #0x8
  40540c:	cmp	x8, #0x0
  405410:	csel	x8, xzr, x10, eq  // eq = none
  405414:	add	x9, x9, w19, sxtw #4
  405418:	add	x28, x8, x26
  40541c:	stp	x23, x28, [x9]
  405420:	ldrb	w8, [x23]
  405424:	cmp	w8, #0x2f
  405428:	b.eq	4053b0 <feof@plt+0x1b10>  // b.none
  40542c:	mov	x0, x23
  405430:	stp	x23, x27, [x29, #-32]
  405434:	bl	4030b0 <strlen@plt>
  405438:	stur	w0, [x29, #-16]
  40543c:	sxtw	x2, w0
  405440:	sub	x4, x29, #0x20
  405444:	mov	x0, x21
  405448:	mov	w1, wzr
  40544c:	mov	x3, x22
  405450:	stur	d8, [x29, #-12]
  405454:	bl	4126ac <feof@plt+0xee0c>
  405458:	cbnz	x0, 40546c <feof@plt+0x1bcc>
  40545c:	b	4053c0 <feof@plt+0x1b20>
  405460:	mov	x0, x23
  405464:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  405468:	cbz	x0, 4053c0 <feof@plt+0x1b20>
  40546c:	str	x0, [x28]
  405470:	b	4053c0 <feof@plt+0x1b20>
  405474:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  405478:	ldr	w8, [x8, #120]
  40547c:	ldur	x27, [x29, #-40]
  405480:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405484:	cbz	w8, 4054cc <feof@plt+0x1c2c>
  405488:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40548c:	ldrb	w8, [x8, #1760]
  405490:	cmp	w8, #0x1
  405494:	b.eq	405940 <feof@plt+0x20a0>  // b.none
  405498:	cmp	w19, #0x1
  40549c:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4054a0:	b.ge	405950 <feof@plt+0x20b0>  // b.tcont
  4054a4:	ldr	x0, [x23, #1096]
  4054a8:	bl	403550 <fflush@plt>
  4054ac:	ldr	w8, [x24, #1872]
  4054b0:	cbz	w8, 4054cc <feof@plt+0x1c2c>
  4054b4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4054b8:	ldr	w9, [x8, #1828]
  4054bc:	mov	w0, wzr
  4054c0:	add	w9, w9, #0x1
  4054c4:	str	w9, [x8, #1828]
  4054c8:	b	405910 <feof@plt+0x2070>
  4054cc:	adrp	x9, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  4054d0:	adrp	x28, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4054d4:	ldr	w9, [x9, #112]
  4054d8:	ldr	x11, [x28, #1120]
  4054dc:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4054e0:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4054e4:	cmp	w9, #0x0
  4054e8:	ldr	x1, [x8, #48]
  4054ec:	cset	w8, ne  // ne = any
  4054f0:	cmp	x11, #0x0
  4054f4:	ldr	x2, [x10, #1960]
  4054f8:	cset	w9, ne  // ne = any
  4054fc:	orr	w8, w8, w9
  405500:	orr	w0, w8, #0x2
  405504:	bl	47cf2c <_obstack_memory_used@@Base+0x1228>
  405508:	cbz	x0, 405c08 <feof@plt+0x2368>
  40550c:	mov	x22, x0
  405510:	cmp	w19, #0x1
  405514:	b.lt	40558c <feof@plt+0x1cec>  // b.tstop
  405518:	mov	w8, w19
  40551c:	lsl	x24, x8, #4
  405520:	mov	x23, xzr
  405524:	sub	x25, x24, #0x10
  405528:	b	405538 <feof@plt+0x1c98>
  40552c:	add	x23, x23, #0x10
  405530:	cmp	x24, x23
  405534:	b.eq	40558c <feof@plt+0x1cec>  // b.none
  405538:	add	x8, x27, x23
  40553c:	ldp	x26, x3, [x8]
  405540:	sub	x6, x29, #0x20
  405544:	mov	x0, x22
  405548:	mov	x4, xzr
  40554c:	ldr	x20, [x3]
  405550:	mov	x5, xzr
  405554:	cmp	x20, x26
  405558:	cset	w8, eq  // eq = none
  40555c:	cmp	x25, x23
  405560:	cset	w1, eq  // eq = none
  405564:	bfi	w1, w8, #1, #1
  405568:	mov	x2, x20
  40556c:	bl	47c448 <_obstack_memory_used@@Base+0x744>
  405570:	cbnz	x0, 405b74 <feof@plt+0x22d4>
  405574:	cbz	x23, 40552c <feof@plt+0x1c8c>
  405578:	cmp	x20, x26
  40557c:	b.eq	40552c <feof@plt+0x1c8c>  // b.none
  405580:	mov	x0, x20
  405584:	bl	4031d0 <free@plt>
  405588:	b	40552c <feof@plt+0x1c8c>
  40558c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405590:	ldr	w9, [x8, #1828]
  405594:	sbfiz	x10, x19, #2, #32
  405598:	add	x10, x10, #0xf
  40559c:	add	w9, w9, #0x1
  4055a0:	str	w9, [x8, #1828]
  4055a4:	and	x8, x10, #0xfffffffffffffff0
  4055a8:	mov	x9, sp
  4055ac:	sub	x26, x9, x8
  4055b0:	mov	sp, x26
  4055b4:	mov	x0, x22
  4055b8:	mov	w1, w19
  4055bc:	mov	x2, x26
  4055c0:	bl	47c72c <_obstack_memory_used@@Base+0xa28>
  4055c4:	cbz	w0, 405c1c <feof@plt+0x237c>
  4055c8:	adrp	x23, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  4055cc:	ldr	w8, [x23, #112]
  4055d0:	cbnz	w8, 4055e4 <feof@plt+0x1d44>
  4055d4:	ldr	x8, [x28, #1120]
  4055d8:	cbnz	x8, 4055e4 <feof@plt+0x1d44>
  4055dc:	stur	xzr, [x29, #-56]
  4055e0:	b	405608 <feof@plt+0x1d68>
  4055e4:	sxtw	x8, w19
  4055e8:	mov	x9, sp
  4055ec:	sub	x2, x9, x8, lsl #5
  4055f0:	mov	sp, x2
  4055f4:	mov	x0, x22
  4055f8:	mov	w1, w19
  4055fc:	stur	x2, [x29, #-56]
  405600:	bl	47c7b8 <_obstack_memory_used@@Base+0xab4>
  405604:	cbz	w0, 405c30 <feof@plt+0x2390>
  405608:	mov	x0, x22
  40560c:	bl	47c854 <_obstack_memory_used@@Base+0xb50>
  405610:	cmp	w19, #0x1
  405614:	b.lt	4058f0 <feof@plt+0x2050>  // b.tstop
  405618:	adrp	x25, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  40561c:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405620:	mov	x21, #0x5                   	// #5
  405624:	mov	x22, xzr
  405628:	mov	w19, w19
  40562c:	mov	w10, #0x1000000             	// #16777216
  405630:	mov	w11, #0x2000000             	// #33554432
  405634:	adrp	x12, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405638:	add	x25, x25, #0x4a2
  40563c:	add	x24, x24, #0x565
  405640:	mov	w27, #0x1                   	// #1
  405644:	movk	x21, #0x400, lsl #48
  405648:	stur	wzr, [x29, #-44]
  40564c:	stur	x26, [x29, #-64]
  405650:	b	405680 <feof@plt+0x1de0>
  405654:	ldr	x1, [x28, #1120]
  405658:	mov	w0, #0xa                   	// #10
  40565c:	bl	403480 <fputc@plt>
  405660:	ldur	x26, [x29, #-64]
  405664:	adrp	x23, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  405668:	mov	w10, #0x1000000             	// #16777216
  40566c:	mov	w11, #0x2000000             	// #33554432
  405670:	adrp	x12, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405674:	add	x22, x22, #0x1
  405678:	cmp	x22, x19
  40567c:	b.eq	4058f4 <feof@plt+0x2054>  // b.none
  405680:	ldr	w8, [x26, x22, lsl #2]
  405684:	and	w0, w8, #0x7f
  405688:	add	w9, w10, w0, lsl #24
  40568c:	cmp	w9, w11
  405690:	b.lt	4056c8 <feof@plt+0x1e28>  // b.tstop
  405694:	cmp	w0, #0xd
  405698:	b.ne	405b28 <feof@plt+0x2288>  // b.any
  40569c:	ldr	w8, [x12, #1832]
  4056a0:	cbnz	w8, 4056b4 <feof@plt+0x1e14>
  4056a4:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4056a8:	ldr	w9, [x9, #1360]
  4056ac:	cmp	w9, #0x1
  4056b0:	b.lt	405bb4 <feof@plt+0x2314>  // b.tstop
  4056b4:	add	w8, w8, #0x1
  4056b8:	str	w8, [x12, #1832]
  4056bc:	mov	w8, #0xffffffff            	// #-1
  4056c0:	stur	w8, [x29, #-44]
  4056c4:	b	4056cc <feof@plt+0x1e2c>
  4056c8:	cbz	w0, 405858 <feof@plt+0x1fb8>
  4056cc:	ldr	w8, [x23, #112]
  4056d0:	ldr	x0, [x28, #1120]
  4056d4:	cbnz	w8, 4056dc <feof@plt+0x1e3c>
  4056d8:	cbz	x0, 405674 <feof@plt+0x1dd4>
  4056dc:	ldur	x9, [x29, #-56]
  4056e0:	add	x9, x9, x22, lsl #5
  4056e4:	ldp	d2, d0, [x9]
  4056e8:	ldp	d3, d1, [x9, #16]
  4056ec:	mov	x9, #0x848000000000        	// #145685290680320
  4056f0:	movk	x9, #0x412e, lsl #48
  4056f4:	fmov	d4, x9
  4056f8:	ucvtf	d0, d0
  4056fc:	ucvtf	d1, d1
  405700:	fdiv	d0, d0, d4
  405704:	fdiv	d1, d1, d4
  405708:	ucvtf	d2, d2
  40570c:	ucvtf	d3, d3
  405710:	fadd	d9, d0, d2
  405714:	fadd	d8, d1, d3
  405718:	fadd	d0, d9, d8
  40571c:	fcmp	d0, #0.0
  405720:	b.eq	405674 <feof@plt+0x1dd4>  // b.none
  405724:	cbz	w8, 405760 <feof@plt+0x1ec0>
  405728:	ldur	x9, [x29, #-40]
  40572c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405730:	ldr	x0, [x8, #1096]
  405734:	lsl	x8, x22, #4
  405738:	ldr	x2, [x9, x8]
  40573c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405740:	add	x1, x1, #0x617
  405744:	mov	v0.16b, v9.16b
  405748:	mov	v1.16b, v8.16b
  40574c:	bl	429778 <feof@plt+0x25ed8>
  405750:	ldr	x0, [x28, #1120]
  405754:	adrp	x12, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405758:	mov	w11, #0x2000000             	// #33554432
  40575c:	mov	w10, #0x1000000             	// #16777216
  405760:	cbz	x0, 405674 <feof@plt+0x1dd4>
  405764:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405768:	add	x1, x1, #0x627
  40576c:	mov	v0.16b, v9.16b
  405770:	mov	v1.16b, v8.16b
  405774:	bl	4030d0 <fprintf@plt>
  405778:	ldur	x8, [x29, #-40]
  40577c:	add	x20, x8, x22, lsl #4
  405780:	ldr	x2, [x20]
  405784:	cbz	x2, 405654 <feof@plt+0x1db4>
  405788:	mov	x23, xzr
  40578c:	add	x26, x20, #0x8
  405790:	b	4057b4 <feof@plt+0x1f14>
  405794:	ldr	x1, [x28, #1120]
  405798:	mov	w0, #0x22                  	// #34
  40579c:	bl	403480 <fputc@plt>
  4057a0:	ldr	x8, [x26]
  4057a4:	add	x23, x23, #0x1
  4057a8:	add	x20, x8, x23, lsl #3
  4057ac:	ldr	x2, [x20]
  4057b0:	cbz	x2, 405654 <feof@plt+0x1db4>
  4057b4:	mov	x9, x2
  4057b8:	ldrb	w8, [x9]
  4057bc:	sub	w10, w8, #0x22
  4057c0:	cmp	w10, #0x3a
  4057c4:	b.hi	4057d4 <feof@plt+0x1f34>  // b.pmore
  4057c8:	lsl	x10, x27, x10
  4057cc:	tst	x10, x21
  4057d0:	b.ne	4057e4 <feof@plt+0x1f44>  // b.any
  4057d4:	cbz	w8, 4057e4 <feof@plt+0x1f44>
  4057d8:	ldrh	w10, [x25, x8, lsl #1]
  4057dc:	add	x9, x9, #0x1
  4057e0:	tbz	w10, #6, 4057b8 <feof@plt+0x1f18>
  4057e4:	ldr	x3, [x28, #1120]
  4057e8:	cbz	w8, 405844 <feof@plt+0x1fa4>
  4057ec:	mov	w1, #0x2                   	// #2
  4057f0:	mov	w2, #0x1                   	// #1
  4057f4:	mov	x0, x24
  4057f8:	bl	403760 <fwrite@plt>
  4057fc:	ldr	x20, [x20]
  405800:	b	405814 <feof@plt+0x1f74>
  405804:	cbz	w0, 405794 <feof@plt+0x1ef4>
  405808:	ldr	x1, [x28, #1120]
  40580c:	bl	403480 <fputc@plt>
  405810:	add	x20, x20, #0x1
  405814:	ldrb	w0, [x20]
  405818:	sub	w8, w0, #0x22
  40581c:	cmp	w8, #0x3a
  405820:	b.hi	405804 <feof@plt+0x1f64>  // b.pmore
  405824:	lsl	x8, x27, x8
  405828:	tst	x8, x21
  40582c:	b.eq	405804 <feof@plt+0x1f64>  // b.none
  405830:	ldr	x1, [x28, #1120]
  405834:	mov	w0, #0x5c                  	// #92
  405838:	bl	403480 <fputc@plt>
  40583c:	ldrb	w0, [x20]
  405840:	b	405808 <feof@plt+0x1f68>
  405844:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  405848:	mov	x0, x3
  40584c:	add	x1, x1, #0x235
  405850:	bl	4030d0 <fprintf@plt>
  405854:	b	4057a0 <feof@plt+0x1f00>
  405858:	ubfx	w20, w8, #8, #8
  40585c:	cbz	w20, 4056cc <feof@plt+0x1e2c>
  405860:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  405864:	ldr	w8, [x8, #3280]
  405868:	cbz	w8, 4058d4 <feof@plt+0x2034>
  40586c:	cbnz	x22, 4058d4 <feof@plt+0x2034>
  405870:	cmp	w20, #0x4
  405874:	b.ne	4058d4 <feof@plt+0x2034>  // b.any
  405878:	ldur	x8, [x29, #-40]
  40587c:	mov	w1, #0x2f                  	// #47
  405880:	ldr	x26, [x8, #8]
  405884:	ldr	x0, [x26]
  405888:	bl	4035a0 <strrchr@plt>
  40588c:	adrp	x12, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405890:	mov	w11, #0x2000000             	// #33554432
  405894:	mov	w10, #0x1000000             	// #16777216
  405898:	cbz	x0, 4058d4 <feof@plt+0x2034>
  40589c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  4058a0:	add	x0, x0, #0x1
  4058a4:	mov	w2, #0x3                   	// #3
  4058a8:	add	x1, x1, #0x613
  4058ac:	bl	403450 <strncmp@plt>
  4058b0:	adrp	x12, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4058b4:	mov	w11, #0x2000000             	// #33554432
  4058b8:	mov	w10, #0x1000000             	// #16777216
  4058bc:	cbnz	w0, 4058d4 <feof@plt+0x2034>
  4058c0:	mov	x0, x26
  4058c4:	bl	40fe88 <feof@plt+0xc5e8>
  4058c8:	adrp	x12, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4058cc:	mov	w11, #0x2000000             	// #33554432
  4058d0:	mov	w10, #0x1000000             	// #16777216
  4058d4:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4058d8:	ldr	w8, [x9, #1360]
  4058dc:	cmp	w20, w8
  4058e0:	b.le	4058e8 <feof@plt+0x2048>
  4058e4:	str	w20, [x9, #1360]
  4058e8:	ldur	x26, [x29, #-64]
  4058ec:	b	4056bc <feof@plt+0x1e1c>
  4058f0:	stur	wzr, [x29, #-44]
  4058f4:	ldur	x9, [x29, #-40]
  4058f8:	ldp	x9, x8, [x9]
  4058fc:	ldr	x0, [x8]
  405900:	cmp	x0, x9
  405904:	b.eq	40590c <feof@plt+0x206c>  // b.none
  405908:	bl	4031d0 <free@plt>
  40590c:	ldur	w0, [x29, #-44]
  405910:	mov	sp, x29
  405914:	ldp	x20, x19, [sp, #96]
  405918:	ldp	x22, x21, [sp, #80]
  40591c:	ldp	x24, x23, [sp, #64]
  405920:	ldp	x26, x25, [sp, #48]
  405924:	ldp	x28, x27, [sp, #32]
  405928:	ldp	x29, x30, [sp, #16]
  40592c:	ldp	d9, d8, [sp], #112
  405930:	ret
  405934:	mov	w23, wzr
  405938:	mov	w25, wzr
  40593c:	b	4051f4 <feof@plt+0x1954>
  405940:	ldr	x1, [x23, #1096]
  405944:	mov	w0, #0xa                   	// #10
  405948:	bl	403480 <fputc@plt>
  40594c:	b	405498 <feof@plt+0x1bf8>
  405950:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405954:	adrp	x22, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405958:	mov	x25, xzr
  40595c:	mov	w26, w19
  405960:	add	x20, x20, #0x568
  405964:	add	x22, x22, #0x56c
  405968:	add	x8, x27, x25, lsl #4
  40596c:	ldr	x27, [x8, #8]
  405970:	ldr	w8, [x24, #1872]
  405974:	ldr	x2, [x27]
  405978:	cbnz	w8, 4059c0 <feof@plt+0x2120>
  40597c:	cbz	x2, 405aec <feof@plt+0x224c>
  405980:	add	x21, x27, #0x8
  405984:	ldrb	w8, [x2]
  405988:	ldr	x3, [x23, #1096]
  40598c:	cbnz	w8, 4059a4 <feof@plt+0x2104>
  405990:	mov	w1, #0x3                   	// #3
  405994:	mov	w2, #0x1                   	// #1
  405998:	mov	x0, x20
  40599c:	bl	403760 <fwrite@plt>
  4059a0:	b	4059b4 <feof@plt+0x2114>
  4059a4:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4059a8:	mov	x0, x3
  4059ac:	add	x1, x1, #0x235
  4059b0:	bl	4030d0 <fprintf@plt>
  4059b4:	ldr	x2, [x21], #8
  4059b8:	cbnz	x2, 405984 <feof@plt+0x20e4>
  4059bc:	b	405aec <feof@plt+0x224c>
  4059c0:	cbz	x2, 405aec <feof@plt+0x224c>
  4059c4:	ldrb	w8, [x2]
  4059c8:	cbnz	w8, 4059d8 <feof@plt+0x2138>
  4059cc:	ldr	x3, [x23, #1096]
  4059d0:	mov	x8, x23
  4059d4:	b	405a3c <feof@plt+0x219c>
  4059d8:	mov	w9, #0x1                   	// #1
  4059dc:	mov	w10, w8
  4059e0:	mov	x12, x23
  4059e4:	adrp	x13, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  4059e8:	and	x11, x10, #0xff
  4059ec:	add	x13, x13, #0x4a2
  4059f0:	ldrh	w11, [x13, x11, lsl #1]
  4059f4:	mov	w13, #0x8c                  	// #140
  4059f8:	tst	w11, w13
  4059fc:	b.ne	405a28 <feof@plt+0x2188>  // b.any
  405a00:	and	w10, w10, #0xff
  405a04:	sub	w10, w10, #0x2d
  405a08:	cmp	w10, #0x32
  405a0c:	b.hi	405a64 <feof@plt+0x21c4>  // b.pmore
  405a10:	mov	w11, #0x1                   	// #1
  405a14:	lsl	x10, x11, x10
  405a18:	mov	x11, #0x7                   	// #7
  405a1c:	movk	x11, #0x4, lsl #48
  405a20:	tst	x10, x11
  405a24:	b.eq	405a64 <feof@plt+0x21c4>  // b.none
  405a28:	ldrb	w10, [x2, x9]
  405a2c:	add	x9, x9, #0x1
  405a30:	cbnz	w10, 4059e4 <feof@plt+0x2144>
  405a34:	ldr	x3, [x12, #1096]
  405a38:	cbnz	w8, 405a50 <feof@plt+0x21b0>
  405a3c:	mov	w1, #0x3                   	// #3
  405a40:	mov	w2, #0x1                   	// #1
  405a44:	mov	x0, x20
  405a48:	bl	403760 <fwrite@plt>
  405a4c:	b	405ae4 <feof@plt+0x2244>
  405a50:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  405a54:	mov	x0, x3
  405a58:	add	x1, x1, #0x235
  405a5c:	bl	4030d0 <fprintf@plt>
  405a60:	b	405ae4 <feof@plt+0x2244>
  405a64:	ldr	x3, [x12, #1096]
  405a68:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405a6c:	mov	w1, #0x2                   	// #2
  405a70:	mov	w2, #0x1                   	// #1
  405a74:	add	x0, x0, #0x565
  405a78:	bl	403760 <fwrite@plt>
  405a7c:	ldr	x21, [x27]
  405a80:	ldrb	w0, [x21]
  405a84:	sub	w8, w0, #0x22
  405a88:	cmp	w8, #0x3a
  405a8c:	b.hi	405ac0 <feof@plt+0x2220>  // b.pmore
  405a90:	mov	w9, #0x1                   	// #1
  405a94:	lsl	x8, x9, x8
  405a98:	mov	x9, #0x5                   	// #5
  405a9c:	movk	x9, #0x400, lsl #48
  405aa0:	tst	x8, x9
  405aa4:	b.eq	405ac0 <feof@plt+0x2220>  // b.none
  405aa8:	ldr	x1, [x23, #1096]
  405aac:	mov	w0, #0x5c                  	// #92
  405ab0:	mov	x28, x23
  405ab4:	bl	403480 <fputc@plt>
  405ab8:	ldrb	w0, [x21]
  405abc:	b	405ac8 <feof@plt+0x2228>
  405ac0:	mov	x28, x23
  405ac4:	cbz	w0, 405ad8 <feof@plt+0x2238>
  405ac8:	ldr	x1, [x28, #1096]
  405acc:	bl	403480 <fputc@plt>
  405ad0:	add	x21, x21, #0x1
  405ad4:	b	405a80 <feof@plt+0x21e0>
  405ad8:	ldr	x1, [x28, #1096]
  405adc:	mov	w0, #0x22                  	// #34
  405ae0:	bl	403480 <fputc@plt>
  405ae4:	ldr	x2, [x27, #8]!
  405ae8:	cbnz	x2, 4059c4 <feof@plt+0x2124>
  405aec:	add	x25, x25, #0x1
  405af0:	cmp	x25, x26
  405af4:	b.eq	405b0c <feof@plt+0x226c>  // b.none
  405af8:	ldr	x3, [x23, #1096]
  405afc:	mov	w1, #0x2                   	// #2
  405b00:	mov	w2, #0x1                   	// #1
  405b04:	mov	x0, x22
  405b08:	bl	403760 <fwrite@plt>
  405b0c:	ldr	x1, [x23, #1096]
  405b10:	mov	w0, #0xa                   	// #10
  405b14:	bl	403480 <fputc@plt>
  405b18:	ldur	x27, [x29, #-40]
  405b1c:	cmp	x25, x26
  405b20:	b.eq	4054a4 <feof@plt+0x1c04>  // b.none
  405b24:	b	405968 <feof@plt+0x20c8>
  405b28:	cmp	w0, #0xf
  405b2c:	b.hi	405bb4 <feof@plt+0x2314>  // b.pmore
  405b30:	mov	w8, #0x1                   	// #1
  405b34:	lsl	w8, w8, w0
  405b38:	mov	w9, #0x820c                	// #33292
  405b3c:	tst	w8, w9
  405b40:	b.eq	405bb4 <feof@plt+0x2314>  // b.none
  405b44:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  405b48:	ldr	w19, [x8, #400]
  405b4c:	and	x20, x22, #0xffffffff
  405b50:	bl	403860 <strsignal@plt>
  405b54:	ldur	x9, [x29, #-40]
  405b58:	lsl	x8, x20, #4
  405b5c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405b60:	mov	x2, x0
  405b64:	ldr	x3, [x9, x8]
  405b68:	add	x1, x1, #0x5f3
  405b6c:	mov	w0, w19
  405b70:	bl	42c008 <feof@plt+0x28768>
  405b74:	ldur	w19, [x29, #-32]
  405b78:	mov	x21, x0
  405b7c:	bl	4035c0 <__errno_location@plt>
  405b80:	str	w19, [x0]
  405b84:	ldur	w9, [x29, #-32]
  405b88:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  405b8c:	ldr	w0, [x8, #400]
  405b90:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405b94:	adrp	x10, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405b98:	add	x8, x8, #0x583
  405b9c:	add	x10, x10, #0x59e
  405ba0:	cmp	w9, #0x0
  405ba4:	csel	x1, x10, x8, eq  // eq = none
  405ba8:	mov	x2, x20
  405bac:	mov	x3, x21
  405bb0:	bl	42c008 <feof@plt+0x28768>
  405bb4:	and	x19, x22, #0xffffffff
  405bb8:	bl	403860 <strsignal@plt>
  405bbc:	ldur	x9, [x29, #-40]
  405bc0:	lsl	x8, x19, #4
  405bc4:	mov	x1, x0
  405bc8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405bcc:	ldr	x2, [x9, x8]
  405bd0:	add	x0, x0, #0x5f3
  405bd4:	bl	42c174 <feof@plt+0x288d4>
  405bd8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  405bdc:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405be0:	add	x0, x0, #0x5ec
  405be4:	add	x2, x2, #0x55d
  405be8:	mov	w1, #0xbe0                 	// #3040
  405bec:	bl	429434 <feof@plt+0x25b94>
  405bf0:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  405bf4:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405bf8:	add	x0, x0, #0x5ec
  405bfc:	add	x2, x2, #0x62d
  405c00:	mov	w1, #0x1371                	// #4977
  405c04:	bl	429434 <feof@plt+0x25b94>
  405c08:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  405c0c:	ldr	w0, [x8, #400]
  405c10:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405c14:	add	x1, x1, #0x56f
  405c18:	bl	42c008 <feof@plt+0x28768>
  405c1c:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  405c20:	ldr	w0, [x8, #400]
  405c24:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405c28:	add	x1, x1, #0x5b5
  405c2c:	bl	42c008 <feof@plt+0x28768>
  405c30:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  405c34:	ldr	w0, [x8, #400]
  405c38:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  405c3c:	add	x1, x1, #0x5d3
  405c40:	bl	42c008 <feof@plt+0x28768>
  405c44:	stp	x29, x30, [sp, #-32]!
  405c48:	str	x19, [sp, #16]
  405c4c:	mov	x29, sp
  405c50:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405c54:	mov	x19, x0
  405c58:	str	x0, [x8, #1192]
  405c5c:	bl	4030b0 <strlen@plt>
  405c60:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405c64:	str	x0, [x8, #1176]
  405c68:	mov	x0, x19
  405c6c:	bl	47b0c8 <feof@plt+0x77828>
  405c70:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405c74:	mov	x19, x0
  405c78:	str	x0, [x8, #1200]
  405c7c:	bl	4030b0 <strlen@plt>
  405c80:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405c84:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405c88:	lsl	x10, x0, #32
  405c8c:	str	w0, [x8, #1208]
  405c90:	str	w0, [x9, #1212]
  405c94:	cbz	x10, 405cbc <feof@plt+0x241c>
  405c98:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  405c9c:	sxtw	x10, w0
  405ca0:	add	x9, x9, #0x23b
  405ca4:	ldrb	w11, [x19, x10]
  405ca8:	cmp	w11, #0x2e
  405cac:	b.eq	405cc8 <feof@plt+0x2428>  // b.none
  405cb0:	subs	x10, x10, #0x1
  405cb4:	b.ne	405ca4 <feof@plt+0x2404>  // b.any
  405cb8:	b	405cd8 <feof@plt+0x2438>
  405cbc:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  405cc0:	add	x9, x9, #0x23b
  405cc4:	b	405cd8 <feof@plt+0x2438>
  405cc8:	add	x9, x19, x10
  405ccc:	sub	w10, w9, w19
  405cd0:	add	x9, x9, #0x1
  405cd4:	str	w10, [x8, #1208]
  405cd8:	ldr	x19, [sp, #16]
  405cdc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405ce0:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405ce4:	str	x9, [x8, #1216]
  405ce8:	str	wzr, [x10, #1224]
  405cec:	ldp	x29, x30, [sp], #32
  405cf0:	ret
  405cf4:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405cf8:	and	w8, w1, #0x1
  405cfc:	and	w9, w2, #0x1
  405d00:	add	x10, x10, #0x4d0
  405d04:	str	xzr, [x0, #24]
  405d08:	stp	xzr, xzr, [x0]
  405d0c:	strb	w8, [x10]
  405d10:	strb	w9, [x10, #1]
  405d14:	ret
  405d18:	stp	x29, x30, [sp, #-32]!
  405d1c:	str	x19, [sp, #16]
  405d20:	mov	x29, sp
  405d24:	mov	x19, x0
  405d28:	ldr	x0, [x0]
  405d2c:	bl	4031d0 <free@plt>
  405d30:	ldr	x0, [x19, #8]
  405d34:	bl	4031d0 <free@plt>
  405d38:	add	x0, x19, #0x18
  405d3c:	ldr	x19, [sp, #16]
  405d40:	ldp	x29, x30, [sp], #32
  405d44:	b	428508 <feof@plt+0x24c68>
  405d48:	sub	sp, sp, #0x60
  405d4c:	stp	x29, x30, [sp, #16]
  405d50:	stp	x26, x25, [sp, #32]
  405d54:	stp	x24, x23, [sp, #48]
  405d58:	stp	x22, x21, [sp, #64]
  405d5c:	stp	x20, x19, [sp, #80]
  405d60:	add	x29, sp, #0x10
  405d64:	stur	w1, [x29, #-4]
  405d68:	str	x2, [sp]
  405d6c:	ldr	x21, [x2]
  405d70:	mov	x19, x0
  405d74:	mov	x20, x2
  405d78:	mov	x0, x21
  405d7c:	bl	4030b0 <strlen@plt>
  405d80:	cbz	x0, 405da0 <feof@plt+0x2500>
  405d84:	add	x8, x21, x0
  405d88:	ldurb	w8, [x8, #-1]
  405d8c:	sub	x0, x0, #0x1
  405d90:	cmp	w8, #0x2f
  405d94:	b.ne	405d80 <feof@plt+0x24e0>  // b.any
  405d98:	add	x8, x21, x0
  405d9c:	add	x21, x8, #0x1
  405da0:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  405da4:	mov	x0, x21
  405da8:	str	x21, [x8, #48]
  405dac:	bl	47cfe0 <_obstack_memory_used@@Base+0x12dc>
  405db0:	sub	x0, x29, #0x4
  405db4:	mov	x1, sp
  405db8:	bl	4793c0 <feof@plt+0x75b20>
  405dbc:	ldr	x21, [sp]
  405dc0:	cmp	x21, x20
  405dc4:	b.eq	405dd4 <feof@plt+0x2534>  // b.none
  405dc8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405dcc:	mov	w9, #0x1                   	// #1
  405dd0:	strb	w9, [x8, #1256]
  405dd4:	ldur	w20, [x29, #-4]
  405dd8:	bl	417ab4 <feof@plt+0x14214>
  405ddc:	bl	417b04 <feof@plt+0x14264>
  405de0:	bl	4183d0 <feof@plt+0x14b30>
  405de4:	adrp	x0, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  405de8:	adrp	x1, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  405dec:	add	x0, x0, #0x190
  405df0:	add	x1, x1, #0xa0
  405df4:	bl	4183f4 <feof@plt+0x14b54>
  405df8:	add	x3, x19, #0x8
  405dfc:	add	x4, x19, #0x10
  405e00:	mov	w2, #0x80000               	// #524288
  405e04:	mov	w0, w20
  405e08:	mov	x1, x21
  405e0c:	bl	41d2a0 <feof@plt+0x19a00>
  405e10:	bl	40604c <feof@plt+0x27ac>
  405e14:	bl	4061bc <feof@plt+0x291c>
  405e18:	mov	x0, x19
  405e1c:	bl	406558 <feof@plt+0x2cb8>
  405e20:	ldr	x8, [sp]
  405e24:	ldr	x1, [x8]
  405e28:	bl	407764 <feof@plt+0x3ec4>
  405e2c:	bl	4078a0 <feof@plt+0x4000>
  405e30:	bl	407afc <feof@plt+0x425c>
  405e34:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405e38:	ldr	w8, [x23, #1560]
  405e3c:	cmp	w8, #0x1
  405e40:	b.lt	405ebc <feof@plt+0x261c>  // b.tstop
  405e44:	adrp	x21, 47e000 <_obstack_memory_used@@Base+0x22fc>
  405e48:	adrp	x22, 47e000 <_obstack_memory_used@@Base+0x22fc>
  405e4c:	mov	w24, wzr
  405e50:	mov	x25, xzr
  405e54:	add	x20, x19, #0x18
  405e58:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405e5c:	add	x21, x21, #0x7ab
  405e60:	add	x22, x22, #0x76b
  405e64:	b	405e84 <feof@plt+0x25e4>
  405e68:	mov	x0, x21
  405e6c:	bl	42b940 <feof@plt+0x280a0>
  405e70:	ldr	w8, [x23, #1560]
  405e74:	add	w24, w24, #0x1
  405e78:	add	x25, x25, #0x18
  405e7c:	cmp	w8, w24
  405e80:	b.le	405ebc <feof@plt+0x261c>
  405e84:	ldr	x8, [x26, #1592]
  405e88:	add	x9, x8, x25
  405e8c:	ldrb	w9, [x9, #21]
  405e90:	cbnz	w9, 405e70 <feof@plt+0x25d0>
  405e94:	ldr	x1, [x8, x25]
  405e98:	mov	x0, x20
  405e9c:	bl	428580 <feof@plt+0x24ce0>
  405ea0:	ldr	x8, [x26, #1592]
  405ea4:	ldr	x1, [x8, x25]
  405ea8:	cbz	x0, 405e68 <feof@plt+0x25c8>
  405eac:	mov	x2, x0
  405eb0:	mov	x0, x22
  405eb4:	bl	42b940 <feof@plt+0x280a0>
  405eb8:	b	405e70 <feof@plt+0x25d0>
  405ebc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405ec0:	ldr	x1, [x8, #1248]
  405ec4:	cbz	x1, 405ef0 <feof@plt+0x2650>
  405ec8:	add	x0, x19, #0x18
  405ecc:	bl	428e20 <feof@plt+0x25580>
  405ed0:	mov	w0, wzr
  405ed4:	ldp	x20, x19, [sp, #80]
  405ed8:	ldp	x22, x21, [sp, #64]
  405edc:	ldp	x24, x23, [sp, #48]
  405ee0:	ldp	x26, x25, [sp, #32]
  405ee4:	ldp	x29, x30, [sp, #16]
  405ee8:	add	sp, sp, #0x60
  405eec:	ret
  405ef0:	bl	407d00 <feof@plt+0x4460>
  405ef4:	cbz	w0, 405ed4 <feof@plt+0x2634>
  405ef8:	mov	x0, x19
  405efc:	bl	4089ec <feof@plt+0x514c>
  405f00:	tbnz	w0, #0, 405f20 <feof@plt+0x2680>
  405f04:	mov	x0, x19
  405f08:	bl	408c38 <feof@plt+0x5398>
  405f0c:	ldr	x8, [sp]
  405f10:	mov	x0, x19
  405f14:	ldr	x1, [x8]
  405f18:	bl	409424 <feof@plt+0x5b84>
  405f1c:	bl	40985c <feof@plt+0x5fbc>
  405f20:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405f24:	ldr	w8, [x8, #1832]
  405f28:	cbz	w8, 405f34 <feof@plt+0x2694>
  405f2c:	mov	w0, #0x2                   	// #2
  405f30:	b	405ed4 <feof@plt+0x2634>
  405f34:	bl	42bfe0 <feof@plt+0x28740>
  405f38:	tbz	w0, #0, 405ed0 <feof@plt+0x2630>
  405f3c:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  405f40:	ldr	w8, [x8, #48]
  405f44:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  405f48:	ldr	w9, [x9, #1360]
  405f4c:	cmp	w8, #0x0
  405f50:	csinc	w0, w9, wzr, ne  // ne = any
  405f54:	b	405ed4 <feof@plt+0x2634>
  405f58:	stp	x29, x30, [sp, #-32]!
  405f5c:	str	x19, [sp, #16]
  405f60:	mov	x29, sp
  405f64:	mov	x0, x1
  405f68:	mov	x19, x1
  405f6c:	bl	4030b0 <strlen@plt>
  405f70:	cbz	x0, 405f90 <feof@plt+0x26f0>
  405f74:	add	x8, x19, x0
  405f78:	ldurb	w8, [x8, #-1]
  405f7c:	sub	x0, x0, #0x1
  405f80:	cmp	w8, #0x2f
  405f84:	b.ne	405f70 <feof@plt+0x26d0>  // b.any
  405f88:	add	x8, x19, x0
  405f8c:	add	x19, x8, #0x1
  405f90:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  405f94:	str	x19, [x8, #48]
  405f98:	mov	x0, x19
  405f9c:	ldr	x19, [sp, #16]
  405fa0:	ldp	x29, x30, [sp], #32
  405fa4:	b	47cfe0 <_obstack_memory_used@@Base+0x12dc>
  405fa8:	stp	x29, x30, [sp, #-32]!
  405fac:	stp	x20, x19, [sp, #16]
  405fb0:	mov	x29, sp
  405fb4:	ldr	x20, [x2]
  405fb8:	mov	x0, x1
  405fbc:	mov	x1, x2
  405fc0:	mov	x19, x2
  405fc4:	bl	4793c0 <feof@plt+0x75b20>
  405fc8:	ldr	x8, [x19]
  405fcc:	cmp	x8, x20
  405fd0:	b.eq	405fe0 <feof@plt+0x2740>  // b.none
  405fd4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  405fd8:	mov	w9, #0x1                   	// #1
  405fdc:	strb	w9, [x8, #1256]
  405fe0:	ldp	x20, x19, [sp, #16]
  405fe4:	ldp	x29, x30, [sp], #32
  405fe8:	ret
  405fec:	stp	x29, x30, [sp, #-48]!
  405ff0:	str	x21, [sp, #16]
  405ff4:	stp	x20, x19, [sp, #32]
  405ff8:	mov	x29, sp
  405ffc:	mov	x19, x2
  406000:	mov	w20, w1
  406004:	mov	x21, x0
  406008:	bl	417ab4 <feof@plt+0x14214>
  40600c:	bl	417b04 <feof@plt+0x14264>
  406010:	bl	4183d0 <feof@plt+0x14b30>
  406014:	adrp	x0, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  406018:	adrp	x1, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40601c:	add	x0, x0, #0x190
  406020:	add	x1, x1, #0xa0
  406024:	bl	4183f4 <feof@plt+0x14b54>
  406028:	add	x3, x21, #0x8
  40602c:	add	x4, x21, #0x10
  406030:	mov	w0, w20
  406034:	mov	x1, x19
  406038:	ldp	x20, x19, [sp, #32]
  40603c:	ldr	x21, [sp, #16]
  406040:	mov	w2, #0x80000               	// #524288
  406044:	ldp	x29, x30, [sp], #48
  406048:	b	41d2a0 <feof@plt+0x19a00>
  40604c:	str	d8, [sp, #-32]!
  406050:	stp	x29, x30, [sp, #8]
  406054:	str	x19, [sp, #24]
  406058:	mov	x29, sp
  40605c:	bl	479d74 <feof@plt+0x764d4>
  406060:	bl	437054 <feof@plt+0x337b4>
  406064:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406068:	ldr	x0, [x19, #632]
  40606c:	mov	w1, wzr
  406070:	bl	4290c0 <feof@plt+0x25820>
  406074:	ldr	x0, [x19, #632]
  406078:	mov	w1, #0xffffffff            	// #-1
  40607c:	bl	429314 <feof@plt+0x25a74>
  406080:	adrp	x0, 409000 <feof@plt+0x5760>
  406084:	add	x0, x0, #0x9a0
  406088:	bl	47d608 <_obstack_memory_used@@Base+0x1904>
  40608c:	cbnz	w0, 4061a8 <feof@plt+0x2908>
  406090:	mov	w0, #0x2                   	// #2
  406094:	mov	w1, #0x1                   	// #1
  406098:	bl	403710 <signal@plt>
  40609c:	cmp	x0, #0x1
  4060a0:	b.eq	4060b4 <feof@plt+0x2814>  // b.none
  4060a4:	adrp	x1, 409000 <feof@plt+0x5760>
  4060a8:	add	x1, x1, #0xa44
  4060ac:	mov	w0, #0x2                   	// #2
  4060b0:	bl	403710 <signal@plt>
  4060b4:	mov	w0, #0x1                   	// #1
  4060b8:	mov	w1, #0x1                   	// #1
  4060bc:	bl	403710 <signal@plt>
  4060c0:	cmp	x0, #0x1
  4060c4:	b.eq	4060d8 <feof@plt+0x2838>  // b.none
  4060c8:	adrp	x1, 409000 <feof@plt+0x5760>
  4060cc:	add	x1, x1, #0xa44
  4060d0:	mov	w0, #0x1                   	// #1
  4060d4:	bl	403710 <signal@plt>
  4060d8:	mov	w0, #0xf                   	// #15
  4060dc:	mov	w1, #0x1                   	// #1
  4060e0:	bl	403710 <signal@plt>
  4060e4:	cmp	x0, #0x1
  4060e8:	b.eq	4060fc <feof@plt+0x285c>  // b.none
  4060ec:	adrp	x1, 409000 <feof@plt+0x5760>
  4060f0:	add	x1, x1, #0xa44
  4060f4:	mov	w0, #0xf                   	// #15
  4060f8:	bl	403710 <signal@plt>
  4060fc:	mov	w0, #0xd                   	// #13
  406100:	mov	w1, #0x1                   	// #1
  406104:	bl	403710 <signal@plt>
  406108:	cmp	x0, #0x1
  40610c:	b.eq	406120 <feof@plt+0x2880>  // b.none
  406110:	adrp	x1, 409000 <feof@plt+0x5760>
  406114:	add	x1, x1, #0xa44
  406118:	mov	w0, #0xd                   	// #13
  40611c:	bl	403710 <signal@plt>
  406120:	mov	w0, #0x11                  	// #17
  406124:	mov	x1, xzr
  406128:	bl	403710 <signal@plt>
  40612c:	mov	w0, #0x4000000             	// #67108864
  406130:	bl	47cf38 <_obstack_memory_used@@Base+0x1234>
  406134:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406138:	mov	w1, #0x58                  	// #88
  40613c:	mov	x0, xzr
  406140:	str	xzr, [x19, #1184]
  406144:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  406148:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  40614c:	ldr	d8, [x8, #1616]
  406150:	str	x0, [x19, #1184]
  406154:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406158:	mov	w1, #0x58                  	// #88
  40615c:	str	d8, [x0]
  406160:	mov	x0, xzr
  406164:	str	xzr, [x19, #2040]
  406168:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  40616c:	str	x0, [x19, #2040]
  406170:	str	d8, [x0]
  406174:	ldr	x19, [sp, #24]
  406178:	ldp	x29, x30, [sp, #8]
  40617c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406180:	add	x8, x8, #0x4f0
  406184:	adrp	x3, 439000 <feof@plt+0x35760>
  406188:	adrp	x4, 439000 <feof@plt+0x35760>
  40618c:	add	x3, x3, #0xf08
  406190:	add	x4, x4, #0xf34
  406194:	mov	x0, x8
  406198:	mov	x1, xzr
  40619c:	mov	x2, xzr
  4061a0:	ldr	d8, [sp], #32
  4061a4:	b	47b98c <_obstack_begin@@Base>
  4061a8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4061ac:	ldr	w0, [x8, #400]
  4061b0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4061b4:	add	x1, x1, #0x642
  4061b8:	bl	42c008 <feof@plt+0x28768>
  4061bc:	stp	x29, x30, [sp, #-48]!
  4061c0:	stp	x22, x21, [sp, #16]
  4061c4:	stp	x20, x19, [sp, #32]
  4061c8:	mov	x29, sp
  4061cc:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4061d0:	add	x19, x19, #0x548
  4061d4:	adrp	x3, 439000 <feof@plt+0x35760>
  4061d8:	adrp	x4, 439000 <feof@plt+0x35760>
  4061dc:	add	x3, x3, #0xf08
  4061e0:	add	x4, x4, #0xf34
  4061e4:	mov	x0, x19
  4061e8:	mov	x1, xzr
  4061ec:	mov	x2, xzr
  4061f0:	bl	47b98c <_obstack_begin@@Base>
  4061f4:	ldp	x8, x9, [x19, #24]
  4061f8:	sub	x9, x9, x8
  4061fc:	cmp	x9, #0xc
  406200:	b.hi	406214 <feof@plt+0x2974>  // b.pmore
  406204:	mov	w1, #0xd                   	// #13
  406208:	mov	x0, x19
  40620c:	bl	47bae8 <_obstack_newchunk@@Base>
  406210:	ldr	x8, [x19, #24]
  406214:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x32fc>
  406218:	add	x9, x9, #0x771
  40621c:	ldur	x10, [x9, #5]
  406220:	ldr	x9, [x9]
  406224:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406228:	add	x20, x20, #0x560
  40622c:	stur	x10, [x8, #5]
  406230:	str	x9, [x8]
  406234:	ldp	x8, x9, [x20]
  406238:	add	x8, x8, #0xd
  40623c:	sub	x9, x9, x8
  406240:	cmp	x9, #0x13
  406244:	str	x8, [x20]
  406248:	b.cs	40625c <feof@plt+0x29bc>  // b.hs, b.nlast
  40624c:	mov	w1, #0x13                  	// #19
  406250:	mov	x0, x19
  406254:	bl	47bae8 <_obstack_newchunk@@Base>
  406258:	ldr	x8, [x19, #24]
  40625c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x32fc>
  406260:	add	x9, x9, #0x77f
  406264:	ldr	q0, [x9]
  406268:	mov	w9, #0x3670                	// #13936
  40626c:	movk	w9, #0x3b34, lsl #16
  406270:	stur	w9, [x8, #15]
  406274:	str	q0, [x8]
  406278:	ldp	x8, x9, [x20]
  40627c:	add	x8, x8, #0x13
  406280:	cmp	x9, x8
  406284:	str	x8, [x20]
  406288:	b.ne	40629c <feof@plt+0x29fc>  // b.any
  40628c:	mov	w1, #0x1                   	// #1
  406290:	mov	x0, x19
  406294:	bl	47bae8 <_obstack_newchunk@@Base>
  406298:	ldr	x8, [x19, #24]
  40629c:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4062a0:	add	x9, x8, #0x1
  4062a4:	add	x22, x22, #0x558
  4062a8:	str	x9, [x22, #8]
  4062ac:	strb	wzr, [x8]
  4062b0:	ldp	x8, x9, [x22]
  4062b4:	cmp	x9, x8
  4062b8:	b.ne	4062cc <feof@plt+0x2a2c>  // b.any
  4062bc:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4062c0:	ldrb	w11, [x10, #1432]
  4062c4:	orr	w11, w11, #0x2
  4062c8:	strb	w11, [x10, #1432]
  4062cc:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4062d0:	add	x21, x21, #0x550
  4062d4:	ldr	x10, [x21, #40]
  4062d8:	ldr	x11, [x21]
  4062dc:	ldr	x12, [x21, #24]
  4062e0:	add	x9, x10, x9
  4062e4:	bic	x9, x9, x10
  4062e8:	sub	x10, x12, x11
  4062ec:	sub	x11, x9, x11
  4062f0:	cmp	x11, x10
  4062f4:	csel	x9, x12, x9, hi  // hi = pmore
  4062f8:	sub	x11, x12, x9
  4062fc:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406300:	cmp	x11, #0x13
  406304:	stp	x9, x9, [x21, #8]
  406308:	str	x8, [x10, #1440]
  40630c:	b.hi	406320 <feof@plt+0x2a80>  // b.pmore
  406310:	mov	w1, #0x14                  	// #20
  406314:	mov	x0, x19
  406318:	bl	47bae8 <_obstack_newchunk@@Base>
  40631c:	ldr	x9, [x19, #24]
  406320:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x32fc>
  406324:	add	x8, x8, #0x793
  406328:	ldr	q0, [x8]
  40632c:	mov	w8, #0x3670                	// #13936
  406330:	movk	w8, #0x3b34, lsl #16
  406334:	str	w8, [x9, #16]
  406338:	str	q0, [x9]
  40633c:	ldp	x8, x9, [x20]
  406340:	add	x8, x8, #0x14
  406344:	cmp	x9, x8
  406348:	str	x8, [x20]
  40634c:	b.ne	406360 <feof@plt+0x2ac0>  // b.any
  406350:	mov	w1, #0x1                   	// #1
  406354:	mov	x0, x19
  406358:	bl	47bae8 <_obstack_newchunk@@Base>
  40635c:	ldr	x8, [x19, #24]
  406360:	add	x9, x8, #0x1
  406364:	str	x9, [x22, #8]
  406368:	strb	wzr, [x8]
  40636c:	ldp	x8, x9, [x22]
  406370:	cmp	x9, x8
  406374:	b.ne	406388 <feof@plt+0x2ae8>  // b.any
  406378:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40637c:	ldrb	w11, [x10, #1432]
  406380:	orr	w11, w11, #0x2
  406384:	strb	w11, [x10, #1432]
  406388:	ldr	x10, [x21, #40]
  40638c:	ldr	x11, [x21]
  406390:	ldr	x12, [x21, #24]
  406394:	adrp	x13, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406398:	add	x9, x10, x9
  40639c:	bic	x9, x9, x10
  4063a0:	sub	x14, x12, x11
  4063a4:	sub	x10, x9, x11
  4063a8:	cmp	x10, x14
  4063ac:	csel	x9, x12, x9, hi  // hi = pmore
  4063b0:	cmp	x12, x9
  4063b4:	stp	x9, x9, [x21, #8]
  4063b8:	str	x8, [x13, #1448]
  4063bc:	b.ne	4063d0 <feof@plt+0x2b30>  // b.any
  4063c0:	mov	w1, #0x1                   	// #1
  4063c4:	mov	x0, x19
  4063c8:	bl	47bae8 <_obstack_newchunk@@Base>
  4063cc:	ldr	x9, [x19, #24]
  4063d0:	add	x8, x9, #0x1
  4063d4:	str	x8, [x22, #8]
  4063d8:	strb	wzr, [x9]
  4063dc:	ldp	x8, x9, [x22]
  4063e0:	cmp	x9, x8
  4063e4:	b.ne	4063f8 <feof@plt+0x2b58>  // b.any
  4063e8:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4063ec:	ldrb	w11, [x10, #1432]
  4063f0:	orr	w11, w11, #0x2
  4063f4:	strb	w11, [x10, #1432]
  4063f8:	ldr	x10, [x21, #40]
  4063fc:	ldr	x11, [x21]
  406400:	ldr	x12, [x21, #24]
  406404:	adrp	x13, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406408:	add	x9, x10, x9
  40640c:	bic	x9, x9, x10
  406410:	sub	x14, x12, x11
  406414:	sub	x10, x9, x11
  406418:	cmp	x10, x14
  40641c:	csel	x9, x12, x9, hi  // hi = pmore
  406420:	cmp	x12, x9
  406424:	stp	x9, x9, [x21, #8]
  406428:	str	x8, [x13, #1456]
  40642c:	b.ne	406440 <feof@plt+0x2ba0>  // b.any
  406430:	mov	w1, #0x1                   	// #1
  406434:	mov	x0, x19
  406438:	bl	47bae8 <_obstack_newchunk@@Base>
  40643c:	ldr	x9, [x19, #24]
  406440:	add	x8, x9, #0x1
  406444:	str	x8, [x22, #8]
  406448:	strb	wzr, [x9]
  40644c:	ldp	x8, x9, [x22]
  406450:	cmp	x9, x8
  406454:	b.ne	406468 <feof@plt+0x2bc8>  // b.any
  406458:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40645c:	ldrb	w11, [x10, #1432]
  406460:	orr	w11, w11, #0x2
  406464:	strb	w11, [x10, #1432]
  406468:	ldr	x10, [x21, #40]
  40646c:	ldr	x11, [x21]
  406470:	ldr	x12, [x21, #24]
  406474:	adrp	x13, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406478:	add	x9, x10, x9
  40647c:	bic	x9, x9, x10
  406480:	sub	x14, x12, x11
  406484:	sub	x10, x9, x11
  406488:	cmp	x10, x14
  40648c:	csel	x9, x12, x9, hi  // hi = pmore
  406490:	sub	x10, x12, x9
  406494:	cmp	x10, #0x8
  406498:	stp	x9, x9, [x21, #8]
  40649c:	str	x8, [x13, #1464]
  4064a0:	b.hi	4064b4 <feof@plt+0x2c14>  // b.pmore
  4064a4:	mov	w1, #0x9                   	// #9
  4064a8:	mov	x0, x19
  4064ac:	bl	47bae8 <_obstack_newchunk@@Base>
  4064b0:	ldr	x9, [x19, #24]
  4064b4:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x32fc>
  4064b8:	add	x8, x8, #0x7a8
  4064bc:	ldr	x8, [x8]
  4064c0:	mov	w10, #0x34                  	// #52
  4064c4:	strb	w10, [x9, #8]
  4064c8:	str	x8, [x9]
  4064cc:	ldp	x8, x9, [x20]
  4064d0:	add	x8, x8, #0x9
  4064d4:	cmp	x9, x8
  4064d8:	str	x8, [x20]
  4064dc:	b.ne	4064f0 <feof@plt+0x2c50>  // b.any
  4064e0:	mov	w1, #0x1                   	// #1
  4064e4:	mov	x0, x19
  4064e8:	bl	47bae8 <_obstack_newchunk@@Base>
  4064ec:	ldr	x8, [x19, #24]
  4064f0:	add	x9, x8, #0x1
  4064f4:	str	x9, [x22, #8]
  4064f8:	strb	wzr, [x8]
  4064fc:	ldp	x8, x9, [x22]
  406500:	cmp	x9, x8
  406504:	b.ne	406518 <feof@plt+0x2c78>  // b.any
  406508:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40650c:	ldrb	w11, [x10, #1432]
  406510:	orr	w11, w11, #0x2
  406514:	strb	w11, [x10, #1432]
  406518:	ldr	x10, [x21, #40]
  40651c:	ldr	x11, [x21]
  406520:	ldr	x12, [x21, #24]
  406524:	ldp	x20, x19, [sp, #32]
  406528:	add	x9, x10, x9
  40652c:	bic	x9, x9, x10
  406530:	sub	x14, x12, x11
  406534:	sub	x10, x9, x11
  406538:	cmp	x10, x14
  40653c:	csel	x9, x12, x9, hi  // hi = pmore
  406540:	stp	x9, x9, [x21, #8]
  406544:	ldp	x22, x21, [sp, #16]
  406548:	adrp	x13, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40654c:	str	x8, [x13, #1472]
  406550:	ldp	x29, x30, [sp], #48
  406554:	ret
  406558:	str	d8, [sp, #-112]!
  40655c:	stp	x29, x30, [sp, #16]
  406560:	stp	x28, x27, [sp, #32]
  406564:	stp	x26, x25, [sp, #48]
  406568:	stp	x24, x23, [sp, #64]
  40656c:	stp	x22, x21, [sp, #80]
  406570:	stp	x20, x19, [sp, #96]
  406574:	mov	x29, sp
  406578:	sub	sp, sp, #0x40
  40657c:	ldr	w8, [x0, #16]
  406580:	ldr	x1, [x0, #8]
  406584:	mov	w0, w8
  406588:	bl	409b6c <feof@plt+0x62cc>
  40658c:	mov	w0, #0x8a0                 	// #2208
  406590:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  406594:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x12fc>
  406598:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40659c:	add	x1, x1, #0xb20
  4065a0:	mov	w2, #0x8a0                 	// #2208
  4065a4:	str	x0, [x26, #1480]
  4065a8:	bl	402fc0 <memcpy@plt>
  4065ac:	adrp	x19, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4065b0:	adrp	x20, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4065b4:	adrp	x21, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4065b8:	add	x19, x19, #0xb53
  4065bc:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4065c0:	add	x20, x20, #0x23b
  4065c4:	add	x21, x21, #0x3c0
  4065c8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4065cc:	mov	w9, #0x44                  	// #68
  4065d0:	add	x2, x2, #0x650
  4065d4:	mov	x0, x19
  4065d8:	mov	x1, x21
  4065dc:	mov	x3, x20
  4065e0:	mov	x4, x21
  4065e4:	mov	x5, xzr
  4065e8:	str	w9, [x8, #1488]
  4065ec:	bl	4799ac <feof@plt+0x7610c>
  4065f0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4065f4:	str	x0, [x8, #1496]
  4065f8:	mov	x0, x19
  4065fc:	mov	x1, x21
  406600:	mov	x2, xzr
  406604:	bl	4799ac <feof@plt+0x7610c>
  406608:	adrp	x8, 4b4000 <_obstack_memory_used@@Base+0x382fc>
  40660c:	adrp	x9, 47d000 <_obstack_memory_used@@Base+0x12fc>
  406610:	add	x8, x8, #0xa9
  406614:	ldr	d0, [x9, #1624]
  406618:	stp	x8, x20, [x29, #-32]
  40661c:	adrp	x20, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  406620:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406624:	add	x20, x20, #0x4b8
  406628:	adrp	x3, 412000 <feof@plt+0xe760>
  40662c:	mov	w10, #0x4                   	// #4
  406630:	str	x0, [x21, #1504]
  406634:	add	x3, x3, #0xab8
  406638:	sub	x4, x29, #0x20
  40663c:	mov	w1, #0x1                   	// #1
  406640:	mov	w2, #0x5                   	// #5
  406644:	mov	x0, x20
  406648:	stur	d0, [x29, #-16]
  40664c:	stur	w10, [x29, #-8]
  406650:	bl	4126ac <feof@plt+0xee0c>
  406654:	cbz	x0, 406680 <feof@plt+0x2de0>
  406658:	adrp	x1, 4b4000 <_obstack_memory_used@@Base+0x382fc>
  40665c:	add	x1, x1, #0xa9
  406660:	mov	x19, x0
  406664:	bl	403640 <strcmp@plt>
  406668:	cbz	w0, 406680 <feof@plt+0x2de0>
  40666c:	mov	w1, #0x1                   	// #1
  406670:	mov	x0, x19
  406674:	mov	w2, wzr
  406678:	bl	40b0a0 <feof@plt+0x7800>
  40667c:	b	406684 <feof@plt+0x2de4>
  406680:	bl	40b9f8 <feof@plt+0x8158>
  406684:	ldr	x21, [x21, #1504]
  406688:	mov	x0, x21
  40668c:	bl	4030b0 <strlen@plt>
  406690:	add	x9, x0, #0x22
  406694:	mov	x8, sp
  406698:	and	x9, x9, #0xfffffffffffffff0
  40669c:	sub	x19, x8, x9
  4066a0:	mov	sp, x19
  4066a4:	adrp	x9, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4066a8:	add	x9, x9, #0x656
  4066ac:	ldur	x8, [x9, #6]
  4066b0:	ldr	x9, [x9]
  4066b4:	mov	x0, x19
  4066b8:	mov	x1, x21
  4066bc:	stur	x8, [x19, #6]
  4066c0:	str	x9, [x19]
  4066c4:	bl	403850 <strcat@plt>
  4066c8:	bl	4030b0 <strlen@plt>
  4066cc:	mov	w9, #0x7073                	// #28787
  4066d0:	add	x8, x19, x0
  4066d4:	movk	w9, #0x6365, lsl #16
  4066d8:	mov	w10, #0x73                  	// #115
  4066dc:	mov	w1, #0x4                   	// #4
  4066e0:	mov	x0, x19
  4066e4:	str	w9, [x8]
  4066e8:	strh	w10, [x8, #4]
  4066ec:	bl	403290 <access@plt>
  4066f0:	cbnz	w0, 406704 <feof@plt+0x2e64>
  4066f4:	mov	w1, #0x1                   	// #1
  4066f8:	mov	x0, x19
  4066fc:	mov	w2, wzr
  406700:	bl	40b0a0 <feof@plt+0x7800>
  406704:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x42fc>
  406708:	add	x0, x0, #0x9b4
  40670c:	bl	40be78 <feof@plt+0x85d8>
  406710:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x42fc>
  406714:	add	x0, x0, #0x9f2
  406718:	bl	40be78 <feof@plt+0x85d8>
  40671c:	adrp	x19, 48f000 <_obstack_memory_used@@Base+0x132fc>
  406720:	add	x19, x19, #0x23b
  406724:	mov	x0, x19
  406728:	bl	40be78 <feof@plt+0x85d8>
  40672c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x42fc>
  406730:	add	x0, x0, #0xae1
  406734:	bl	40be78 <feof@plt+0x85d8>
  406738:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x42fc>
  40673c:	add	x0, x0, #0xb27
  406740:	bl	40be78 <feof@plt+0x85d8>
  406744:	adrp	x24, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  406748:	ldr	x8, [x24, #1232]
  40674c:	ldrb	w8, [x8]
  406750:	cmp	w8, #0x30
  406754:	b.ne	4067fc <feof@plt+0x2f5c>  // b.any
  406758:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40675c:	ldr	x0, [x8, #1240]
  406760:	ldrb	w8, [x0]
  406764:	cbz	w8, 4067fc <feof@plt+0x2f5c>
  406768:	adrp	x22, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40676c:	add	x22, x22, #0x4e0
  406770:	ldr	x8, [x22]
  406774:	cbz	x8, 4067ac <feof@plt+0x2f0c>
  406778:	ldr	w9, [x8, #20]
  40677c:	cmp	w9, #0x1
  406780:	b.le	406790 <feof@plt+0x2ef0>
  406784:	adrp	x22, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  406788:	add	x22, x22, #0x4e0
  40678c:	b	4067ac <feof@plt+0x2f0c>
  406790:	mov	x9, x8
  406794:	ldr	x8, [x8, #8]
  406798:	cbz	x8, 4067a8 <feof@plt+0x2f08>
  40679c:	ldr	w10, [x8, #20]
  4067a0:	cmp	w10, #0x2
  4067a4:	b.lt	406790 <feof@plt+0x2ef0>  // b.tstop
  4067a8:	add	x22, x9, #0x8
  4067ac:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4067b0:	add	x1, x1, #0x664
  4067b4:	bl	4175f0 <feof@plt+0x13d50>
  4067b8:	mov	x21, x0
  4067bc:	bl	4030b0 <strlen@plt>
  4067c0:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4067c4:	ldr	w9, [x8, #1256]
  4067c8:	cmp	w9, w0
  4067cc:	b.ge	4067d4 <feof@plt+0x2f34>  // b.tcont
  4067d0:	str	w0, [x8, #1256]
  4067d4:	mov	w0, #0x20                  	// #32
  4067d8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4067dc:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  4067e0:	ldr	d0, [x8, #1608]
  4067e4:	str	x21, [x0]
  4067e8:	str	wzr, [x0, #24]
  4067ec:	str	d0, [x0, #16]
  4067f0:	ldr	x8, [x22]
  4067f4:	str	x8, [x0, #8]
  4067f8:	str	x0, [x22]
  4067fc:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  406800:	ldr	x0, [x8, #1272]
  406804:	adrp	x23, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  406808:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40680c:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406810:	ldrb	w8, [x0]
  406814:	adrp	x28, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406818:	adrp	x25, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40681c:	cbz	w8, 406888 <feof@plt+0x2fe8>
  406820:	ldr	w8, [x23, #652]
  406824:	cbnz	w8, 406888 <feof@plt+0x2fe8>
  406828:	ldr	x8, [x22, #1184]
  40682c:	cbz	x8, 406834 <feof@plt+0x2f94>
  406830:	str	wzr, [x8, #4]
  406834:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406838:	ldr	x8, [x8, #2040]
  40683c:	cbz	x8, 406844 <feof@plt+0x2fa4>
  406840:	str	wzr, [x8, #4]
  406844:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406848:	strb	wzr, [x8, #1996]
  40684c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406850:	strb	wzr, [x8, #2000]
  406854:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406858:	strb	wzr, [x8, #2004]
  40685c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406860:	mov	w1, wzr
  406864:	mov	x2, xzr
  406868:	strb	wzr, [x27, #1988]
  40686c:	str	wzr, [x28, #1992]
  406870:	strb	wzr, [x8, #2008]
  406874:	str	xzr, [x25, #2016]
  406878:	bl	40c344 <feof@plt+0x8aa4>
  40687c:	mov	w21, w0
  406880:	bl	4105cc <feof@plt+0xcd2c>
  406884:	cbz	w21, 4074e8 <feof@plt+0x3c48>
  406888:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40688c:	ldr	x8, [x8, #1520]
  406890:	cbz	x8, 4069cc <feof@plt+0x312c>
  406894:	mov	x28, x27
  406898:	mov	x27, x26
  40689c:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4068a0:	add	x26, x26, #0x508
  4068a4:	ldp	x8, x9, [x26]
  4068a8:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4068ac:	mov	x25, x20
  4068b0:	add	x21, x21, #0x4f0
  4068b4:	sub	x9, x9, x8
  4068b8:	cmp	x9, #0xf
  4068bc:	b.hi	4068d0 <feof@plt+0x3030>  // b.pmore
  4068c0:	mov	w1, #0x10                  	// #16
  4068c4:	mov	x0, x21
  4068c8:	bl	47bae8 <_obstack_newchunk@@Base>
  4068cc:	ldr	x8, [x21, #24]
  4068d0:	adrp	x9, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4068d4:	add	x9, x9, #0x69f
  4068d8:	ldr	q0, [x9]
  4068dc:	adrp	x20, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4068e0:	str	q0, [x8]
  4068e4:	ldr	x8, [x26]
  4068e8:	ldr	x24, [x20, #1280]
  4068ec:	add	x23, x8, #0x10
  4068f0:	mov	x0, x24
  4068f4:	str	x23, [x26]
  4068f8:	bl	4030b0 <strlen@plt>
  4068fc:	ldr	x8, [x26, #8]
  406900:	add	x1, x0, #0x1
  406904:	mov	x22, x0
  406908:	sub	x8, x8, x23
  40690c:	cmp	x8, x1
  406910:	b.cs	406924 <feof@plt+0x3084>  // b.hs, b.nlast
  406914:	mov	x0, x21
  406918:	bl	47bae8 <_obstack_newchunk@@Base>
  40691c:	ldr	x23, [x21, #24]
  406920:	ldr	x24, [x20, #1280]
  406924:	mov	x0, x23
  406928:	mov	x1, x24
  40692c:	mov	x2, x22
  406930:	mov	x26, x27
  406934:	bl	402fc0 <memcpy@plt>
  406938:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40693c:	add	x8, x8, #0x500
  406940:	ldr	x9, [x8, #8]
  406944:	mov	x20, x25
  406948:	mov	x27, x28
  40694c:	add	x9, x9, x22
  406950:	add	x10, x9, #0x1
  406954:	str	x10, [x8, #8]
  406958:	strb	wzr, [x9]
  40695c:	ldp	x1, x8, [x8]
  406960:	cmp	x8, x1
  406964:	b.ne	406978 <feof@plt+0x30d8>  // b.any
  406968:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40696c:	ldrb	w10, [x9, #1344]
  406970:	orr	w10, w10, #0x2
  406974:	strb	w10, [x9, #1344]
  406978:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40697c:	add	x9, x9, #0x4f8
  406980:	ldr	x10, [x9, #40]
  406984:	ldr	x11, [x9]
  406988:	ldr	x12, [x9, #24]
  40698c:	adrp	x0, 4b3000 <_obstack_memory_used@@Base+0x372fc>
  406990:	add	x8, x10, x8
  406994:	bic	x8, x8, x10
  406998:	sub	x13, x12, x11
  40699c:	sub	x10, x8, x11
  4069a0:	cmp	x10, x13
  4069a4:	csel	x8, x12, x8, hi  // hi = pmore
  4069a8:	add	x0, x0, #0xb41
  4069ac:	mov	w2, wzr
  4069b0:	stp	x8, x8, [x9, #8]
  4069b4:	bl	40c1f8 <feof@plt+0x8958>
  4069b8:	adrp	x24, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4069bc:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4069c0:	adrp	x25, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4069c4:	adrp	x28, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4069c8:	adrp	x23, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4069cc:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4069d0:	ldr	x0, [x8, #1288]
  4069d4:	ldrb	w8, [x0]
  4069d8:	cbz	w8, 406a44 <feof@plt+0x31a4>
  4069dc:	ldr	w8, [x23, #652]
  4069e0:	cbnz	w8, 406a44 <feof@plt+0x31a4>
  4069e4:	ldr	x8, [x22, #1184]
  4069e8:	cbz	x8, 4069f0 <feof@plt+0x3150>
  4069ec:	str	wzr, [x8, #4]
  4069f0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4069f4:	ldr	x8, [x8, #2040]
  4069f8:	cbz	x8, 406a00 <feof@plt+0x3160>
  4069fc:	str	wzr, [x8, #4]
  406a00:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406a04:	strb	wzr, [x8, #1996]
  406a08:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406a0c:	strb	wzr, [x8, #2000]
  406a10:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406a14:	strb	wzr, [x8, #2004]
  406a18:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406a1c:	mov	w1, wzr
  406a20:	mov	x2, xzr
  406a24:	strb	wzr, [x27, #1988]
  406a28:	str	wzr, [x28, #1992]
  406a2c:	strb	wzr, [x8, #2008]
  406a30:	str	xzr, [x25, #2016]
  406a34:	bl	40c344 <feof@plt+0x8aa4>
  406a38:	mov	w21, w0
  406a3c:	bl	4105cc <feof@plt+0xcd2c>
  406a40:	cbz	w21, 40750c <feof@plt+0x3c6c>
  406a44:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  406a48:	ldr	x0, [x8, #1296]
  406a4c:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406a50:	ldrb	w8, [x0]
  406a54:	cbz	w8, 406ad0 <feof@plt+0x3230>
  406a58:	ldr	x8, [x22, #1184]
  406a5c:	cbz	x8, 406a64 <feof@plt+0x31c4>
  406a60:	str	wzr, [x8, #4]
  406a64:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406a68:	ldr	x8, [x8, #2040]
  406a6c:	cbz	x8, 406a74 <feof@plt+0x31d4>
  406a70:	str	wzr, [x8, #4]
  406a74:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406a78:	strb	wzr, [x8, #1996]
  406a7c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406a80:	strb	wzr, [x8, #2000]
  406a84:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406a88:	strb	wzr, [x8, #2004]
  406a8c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406a90:	mov	w1, wzr
  406a94:	mov	x2, xzr
  406a98:	strb	wzr, [x27, #1988]
  406a9c:	str	wzr, [x28, #1992]
  406aa0:	strb	wzr, [x8, #2008]
  406aa4:	str	xzr, [x25, #2016]
  406aa8:	bl	40c344 <feof@plt+0x8aa4>
  406aac:	mov	w21, w0
  406ab0:	bl	4105cc <feof@plt+0xcd2c>
  406ab4:	cbnz	w21, 406ad0 <feof@plt+0x3230>
  406ab8:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  406abc:	add	x0, x0, #0x9d0
  406ac0:	mov	w1, wzr
  406ac4:	mov	x2, xzr
  406ac8:	bl	40c344 <feof@plt+0x8aa4>
  406acc:	cbz	w0, 407564 <feof@plt+0x3cc4>
  406ad0:	ldr	x8, [x24, #1232]
  406ad4:	ldrb	w8, [x8]
  406ad8:	cmp	w8, #0x30
  406adc:	b.eq	406aec <feof@plt+0x324c>  // b.none
  406ae0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406ae4:	ldr	x8, [x8, #1520]
  406ae8:	cbz	x8, 406c14 <feof@plt+0x3374>
  406aec:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  406af0:	ldr	x0, [x8, #1304]
  406af4:	ldrb	w8, [x0]
  406af8:	cbz	w8, 406b08 <feof@plt+0x3268>
  406afc:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  406b00:	add	x1, x1, #0x664
  406b04:	bl	40ed30 <feof@plt+0xb490>
  406b08:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  406b0c:	ldr	x0, [x8, #1312]
  406b10:	ldrb	w8, [x0]
  406b14:	cbz	w8, 406b24 <feof@plt+0x3284>
  406b18:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  406b1c:	add	x1, x1, #0x664
  406b20:	bl	40ed30 <feof@plt+0xb490>
  406b24:	ldr	x8, [x24, #1232]
  406b28:	ldrb	w8, [x8]
  406b2c:	cmp	w8, #0x30
  406b30:	b.ne	406bec <feof@plt+0x334c>  // b.any
  406b34:	ldr	x8, [x23, #1536]
  406b38:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406b3c:	ldr	x1, [x9, #1496]
  406b40:	adrp	x9, 47e000 <_obstack_memory_used@@Base+0x22fc>
  406b44:	cmp	x8, #0x0
  406b48:	add	x9, x9, #0x656
  406b4c:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  406b50:	csel	x0, x9, x8, eq  // eq = none
  406b54:	add	x2, x2, #0x8aa
  406b58:	mov	x3, xzr
  406b5c:	bl	4799ac <feof@plt+0x7610c>
  406b60:	ldr	x8, [x20]
  406b64:	cbz	x8, 406b9c <feof@plt+0x32fc>
  406b68:	ldr	w9, [x8, #20]
  406b6c:	cmp	w9, #0x1
  406b70:	b.le	406b80 <feof@plt+0x32e0>
  406b74:	adrp	x20, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  406b78:	add	x20, x20, #0x4b8
  406b7c:	b	406b9c <feof@plt+0x32fc>
  406b80:	mov	x9, x8
  406b84:	ldr	x8, [x8, #8]
  406b88:	cbz	x8, 406b98 <feof@plt+0x32f8>
  406b8c:	ldr	w10, [x8, #20]
  406b90:	cmp	w10, #0x2
  406b94:	b.lt	406b80 <feof@plt+0x32e0>  // b.tstop
  406b98:	add	x20, x9, #0x8
  406b9c:	mov	x1, xzr
  406ba0:	bl	4175f0 <feof@plt+0x13d50>
  406ba4:	mov	x21, x0
  406ba8:	bl	4030b0 <strlen@plt>
  406bac:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  406bb0:	ldr	w9, [x8, #1216]
  406bb4:	cmp	w9, w0
  406bb8:	b.ge	406bc0 <feof@plt+0x3320>  // b.tcont
  406bbc:	str	w0, [x8, #1216]
  406bc0:	mov	w0, #0x20                  	// #32
  406bc4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  406bc8:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  406bcc:	ldr	d0, [x8, #1608]
  406bd0:	mov	w8, #0x1                   	// #1
  406bd4:	str	x21, [x0]
  406bd8:	str	w8, [x0, #24]
  406bdc:	str	d0, [x0, #16]
  406be0:	ldr	x8, [x20]
  406be4:	str	x8, [x0, #8]
  406be8:	str	x0, [x20]
  406bec:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x22fc>
  406bf0:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  406bf4:	add	x20, x20, #0x6ef
  406bf8:	add	x0, x0, #0x6fc
  406bfc:	mov	x1, x20
  406c00:	bl	40ed30 <feof@plt+0xb490>
  406c04:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  406c08:	add	x0, x0, #0x6f8
  406c0c:	mov	x1, x20
  406c10:	bl	40ed30 <feof@plt+0xb490>
  406c14:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406c18:	ldr	x24, [x8, #1544]
  406c1c:	cbz	x24, 406cb8 <feof@plt+0x3418>
  406c20:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  406c24:	ldr	d8, [x8, #1632]
  406c28:	adrp	x20, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  406c2c:	adrp	x21, 412000 <feof@plt+0xe760>
  406c30:	add	x20, x20, #0x4b8
  406c34:	add	x21, x21, #0xab8
  406c38:	b	406c64 <feof@plt+0x33c4>
  406c3c:	mov	w1, #0x4                   	// #4
  406c40:	mov	x0, x22
  406c44:	bl	403290 <access@plt>
  406c48:	cbz	w0, 406ca8 <feof@plt+0x3408>
  406c4c:	ldr	x0, [x24, #8]
  406c50:	mov	w2, #0x1                   	// #1
  406c54:	mov	w1, wzr
  406c58:	bl	40b0a0 <feof@plt+0x7800>
  406c5c:	ldr	x24, [x24]
  406c60:	cbz	x24, 406cb8 <feof@plt+0x3418>
  406c64:	ldr	x22, [x24, #8]
  406c68:	ldrb	w8, [x22]
  406c6c:	cmp	w8, #0x2f
  406c70:	b.eq	406c3c <feof@plt+0x339c>  // b.none
  406c74:	mov	x0, x22
  406c78:	stp	x22, x19, [x29, #-32]
  406c7c:	bl	4030b0 <strlen@plt>
  406c80:	stur	w0, [x29, #-16]
  406c84:	sxtw	x2, w0
  406c88:	sub	x4, x29, #0x20
  406c8c:	mov	w1, #0x1                   	// #1
  406c90:	mov	x0, x20
  406c94:	mov	x3, x21
  406c98:	stur	d8, [x29, #-12]
  406c9c:	bl	4126ac <feof@plt+0xee0c>
  406ca0:	cbnz	x0, 406c50 <feof@plt+0x33b0>
  406ca4:	b	406c4c <feof@plt+0x33ac>
  406ca8:	mov	x0, x22
  406cac:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  406cb0:	cbnz	x0, 406c50 <feof@plt+0x33b0>
  406cb4:	b	406c4c <feof@plt+0x33ac>
  406cb8:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406cbc:	ldr	x21, [x20, #1552]
  406cc0:	cbz	x21, 406d04 <feof@plt+0x3464>
  406cc4:	adrp	x19, 47e000 <_obstack_memory_used@@Base+0x22fc>
  406cc8:	add	x19, x19, #0x702
  406ccc:	b	406cd8 <feof@plt+0x3438>
  406cd0:	ldr	x21, [x21, #24]
  406cd4:	cbz	x21, 406d04 <feof@plt+0x3464>
  406cd8:	ldr	w8, [x21, #32]
  406cdc:	cmp	w8, #0x9
  406ce0:	b.ne	406cd0 <feof@plt+0x3430>  // b.any
  406ce4:	ldr	x0, [x21]
  406ce8:	mov	x1, x19
  406cec:	bl	403640 <strcmp@plt>
  406cf0:	cbnz	w0, 406cd0 <feof@plt+0x3430>
  406cf4:	ldr	x8, [x21, #16]
  406cf8:	ldr	x0, [x8]
  406cfc:	bl	40be78 <feof@plt+0x85d8>
  406d00:	b	406cd0 <feof@plt+0x3430>
  406d04:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406d08:	ldr	w8, [x19, #1144]
  406d0c:	cbz	w8, 406e38 <feof@plt+0x3598>
  406d10:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406d14:	ldr	w9, [x21, #1148]
  406d18:	cbnz	w9, 406db4 <feof@plt+0x3514>
  406d1c:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406d20:	adrp	x25, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406d24:	ldr	w8, [x22, #1560]
  406d28:	ldrsw	x9, [x25, #1576]
  406d2c:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406d30:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406d34:	add	x24, x24, #0x620
  406d38:	ldr	x0, [x27, #1592]
  406d3c:	str	w8, [x24, #4]
  406d40:	add	x8, x9, x9, lsl #1
  406d44:	mov	x23, x26
  406d48:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406d4c:	lsl	x1, x8, #3
  406d50:	add	x26, x26, #0x630
  406d54:	mov	x2, x1
  406d58:	str	w9, [x26, #4]
  406d5c:	bl	47d160 <_obstack_memory_used@@Base+0x145c>
  406d60:	adrp	x28, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406d64:	add	x28, x28, #0x640
  406d68:	str	x0, [x28, #8]
  406d6c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  406d70:	add	x0, x0, #0x70c
  406d74:	bl	40be78 <feof@plt+0x85d8>
  406d78:	ldr	w10, [x25, #1576]
  406d7c:	ldr	w9, [x22, #1560]
  406d80:	ldr	x11, [x27, #1592]
  406d84:	ldr	w12, [x24, #4]
  406d88:	ldr	w13, [x26, #4]
  406d8c:	ldr	x14, [x28, #8]
  406d90:	ldr	w8, [x19, #1144]
  406d94:	str	w10, [x26]
  406d98:	mov	x26, x23
  406d9c:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406da0:	str	w9, [x24]
  406da4:	str	x11, [x28]
  406da8:	str	w12, [x22, #1560]
  406dac:	str	w13, [x25, #1576]
  406db0:	str	x14, [x27, #1592]
  406db4:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406db8:	ldr	w24, [x22, #1616]
  406dbc:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  406dc0:	neg	w8, w8
  406dc4:	add	x0, x0, #0x70c
  406dc8:	str	wzr, [x22, #1616]
  406dcc:	str	w8, [x19, #1144]
  406dd0:	bl	40be78 <feof@plt+0x85d8>
  406dd4:	ldr	w8, [x21, #1148]
  406dd8:	str	w24, [x22, #1616]
  406ddc:	cbnz	w8, 406e38 <feof@plt+0x3598>
  406de0:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406de4:	ldr	w11, [x10, #1576]
  406de8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406dec:	adrp	x12, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406df0:	adrp	x13, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406df4:	ldr	w14, [x8, #1560]
  406df8:	str	w11, [x12, #1588]
  406dfc:	ldr	x11, [x13, #1592]
  406e00:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406e04:	add	x9, x9, #0x620
  406e08:	adrp	x12, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  406e0c:	add	x12, x12, #0x640
  406e10:	str	w14, [x9, #4]
  406e14:	ldr	w14, [x19, #1144]
  406e18:	str	x11, [x12, #8]
  406e1c:	ldr	w9, [x9]
  406e20:	ldr	x11, [x12]
  406e24:	neg	w12, w14
  406e28:	str	w12, [x19, #1144]
  406e2c:	str	w9, [x8, #1560]
  406e30:	str	w9, [x10, #1576]
  406e34:	str	x11, [x13, #1592]
  406e38:	ldr	x0, [x23, #1536]
  406e3c:	cbz	x0, 406e70 <feof@plt+0x35d0>
  406e40:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x22fc>
  406e44:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  406e48:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x22fc>
  406e4c:	adrp	x4, 48f000 <_obstack_memory_used@@Base+0x132fc>
  406e50:	add	x2, x2, #0x3c0
  406e54:	add	x1, x1, #0xb53
  406e58:	add	x3, x3, #0x650
  406e5c:	add	x4, x4, #0x23b
  406e60:	mov	x5, x2
  406e64:	mov	x6, xzr
  406e68:	bl	4799ac <feof@plt+0x7610c>
  406e6c:	str	x0, [x23, #1536]
  406e70:	ldr	x19, [x26, #1480]
  406e74:	ldr	x0, [x19, #8]
  406e78:	cbnz	x0, 406e88 <feof@plt+0x35e8>
  406e7c:	b	406efc <feof@plt+0x365c>
  406e80:	mov	x0, x8
  406e84:	cbz	w9, 406ef0 <feof@plt+0x3650>
  406e88:	mov	x8, x0
  406e8c:	ldrb	w9, [x8], #1
  406e90:	cmp	w9, #0x25
  406e94:	b.ne	406e80 <feof@plt+0x35e0>  // b.any
  406e98:	ldrb	w9, [x8]
  406e9c:	cmp	w9, #0x3c
  406ea0:	b.eq	406ee0 <feof@plt+0x3640>  // b.none
  406ea4:	cmp	w9, #0x7b
  406ea8:	b.eq	406ee0 <feof@plt+0x3640>  // b.none
  406eac:	cmp	w9, #0x57
  406eb0:	b.ne	406ec4 <feof@plt+0x3624>  // b.any
  406eb4:	ldrb	w9, [x0, #2]!
  406eb8:	cmp	w9, #0x7b
  406ebc:	mov	x8, x0
  406ec0:	b.eq	406ee0 <feof@plt+0x3640>  // b.none
  406ec4:	cmp	w9, #0x40
  406ec8:	mov	x0, x8
  406ecc:	b.ne	406e88 <feof@plt+0x35e8>  // b.any
  406ed0:	ldrb	w9, [x8, #1]!
  406ed4:	cmp	w9, #0x7b
  406ed8:	mov	x0, x8
  406edc:	b.ne	406e88 <feof@plt+0x35e8>  // b.any
  406ee0:	add	x0, x8, #0x1
  406ee4:	mov	w1, wzr
  406ee8:	bl	415e4c <feof@plt+0x125ac>
  406eec:	b	406e88 <feof@plt+0x35e8>
  406ef0:	ldr	x0, [x19, #40]
  406ef4:	add	x19, x19, #0x20
  406ef8:	cbnz	x0, 406e88 <feof@plt+0x35e8>
  406efc:	ldr	x19, [x20, #1552]
  406f00:	cbnz	x19, 406f88 <feof@plt+0x36e8>
  406f04:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  406f08:	ldr	x0, [x8, #1352]
  406f0c:	b	406f18 <feof@plt+0x3678>
  406f10:	mov	x0, x8
  406f14:	cbz	w9, 40700c <feof@plt+0x376c>
  406f18:	mov	x8, x0
  406f1c:	ldrb	w9, [x8], #1
  406f20:	cmp	w9, #0x25
  406f24:	b.ne	406f10 <feof@plt+0x3670>  // b.any
  406f28:	ldrb	w9, [x8]
  406f2c:	cmp	w9, #0x3c
  406f30:	b.eq	406f70 <feof@plt+0x36d0>  // b.none
  406f34:	cmp	w9, #0x7b
  406f38:	b.eq	406f70 <feof@plt+0x36d0>  // b.none
  406f3c:	cmp	w9, #0x57
  406f40:	b.ne	406f54 <feof@plt+0x36b4>  // b.any
  406f44:	ldrb	w9, [x0, #2]!
  406f48:	cmp	w9, #0x7b
  406f4c:	mov	x8, x0
  406f50:	b.eq	406f70 <feof@plt+0x36d0>  // b.none
  406f54:	cmp	w9, #0x40
  406f58:	mov	x0, x8
  406f5c:	b.ne	406f18 <feof@plt+0x3678>  // b.any
  406f60:	ldrb	w9, [x8, #1]!
  406f64:	cmp	w9, #0x7b
  406f68:	mov	x0, x8
  406f6c:	b.ne	406f18 <feof@plt+0x3678>  // b.any
  406f70:	add	x0, x8, #0x1
  406f74:	mov	w1, wzr
  406f78:	bl	415e4c <feof@plt+0x125ac>
  406f7c:	b	406f18 <feof@plt+0x3678>
  406f80:	ldr	x19, [x19, #24]
  406f84:	cbz	x19, 406f04 <feof@plt+0x3664>
  406f88:	ldr	x8, [x19, #16]
  406f8c:	ldrb	w20, [x19, #36]
  406f90:	ldr	x0, [x8]
  406f94:	b	406fa0 <feof@plt+0x3700>
  406f98:	mov	x0, x8
  406f9c:	cbz	w9, 406f80 <feof@plt+0x36e0>
  406fa0:	mov	x8, x0
  406fa4:	ldrb	w9, [x8], #1
  406fa8:	cmp	w9, #0x25
  406fac:	b.ne	406f98 <feof@plt+0x36f8>  // b.any
  406fb0:	ldrb	w9, [x8]
  406fb4:	cmp	w9, #0x3c
  406fb8:	b.eq	406ff8 <feof@plt+0x3758>  // b.none
  406fbc:	cmp	w9, #0x7b
  406fc0:	b.eq	406ff8 <feof@plt+0x3758>  // b.none
  406fc4:	cmp	w9, #0x57
  406fc8:	b.ne	406fdc <feof@plt+0x373c>  // b.any
  406fcc:	ldrb	w9, [x0, #2]!
  406fd0:	cmp	w9, #0x7b
  406fd4:	mov	x8, x0
  406fd8:	b.eq	406ff8 <feof@plt+0x3758>  // b.none
  406fdc:	cmp	w9, #0x40
  406fe0:	mov	x0, x8
  406fe4:	b.ne	406fa0 <feof@plt+0x3700>  // b.any
  406fe8:	ldrb	w9, [x8, #1]!
  406fec:	cmp	w9, #0x7b
  406ff0:	mov	x0, x8
  406ff4:	b.ne	406fa0 <feof@plt+0x3700>  // b.any
  406ff8:	cmp	w20, #0x0
  406ffc:	cset	w1, ne  // ne = any
  407000:	add	x0, x8, #0x1
  407004:	bl	415e4c <feof@plt+0x125ac>
  407008:	b	406fa0 <feof@plt+0x3700>
  40700c:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407010:	ldr	x8, [x19, #1472]
  407014:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407018:	str	wzr, [x9, #1856]
  40701c:	b	407024 <feof@plt+0x3784>
  407020:	add	x8, x8, #0x1
  407024:	ldrb	w9, [x8]
  407028:	cmp	w9, #0x9
  40702c:	b.eq	407020 <feof@plt+0x3780>  // b.none
  407030:	cmp	w9, #0x20
  407034:	b.eq	407020 <feof@plt+0x3780>  // b.none
  407038:	cbz	w9, 4071f8 <feof@plt+0x3958>
  40703c:	mov	x11, #0x201                 	// #513
  407040:	mov	w9, wzr
  407044:	mov	w10, #0x1                   	// #1
  407048:	movk	x11, #0x1, lsl #32
  40704c:	add	w9, w9, #0x1
  407050:	adrp	x12, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407054:	str	w9, [x12, #1856]
  407058:	b	407060 <feof@plt+0x37c0>
  40705c:	add	x8, x8, #0x1
  407060:	ldrb	w12, [x8]
  407064:	cmp	w12, #0x20
  407068:	b.hi	40705c <feof@plt+0x37bc>  // b.pmore
  40706c:	lsl	x13, x10, x12
  407070:	tst	x13, x11
  407074:	b.eq	40705c <feof@plt+0x37bc>  // b.none
  407078:	b	407080 <feof@plt+0x37e0>
  40707c:	ldrb	w12, [x8, #1]!
  407080:	and	w12, w12, #0xff
  407084:	cmp	w12, #0x9
  407088:	b.eq	40707c <feof@plt+0x37dc>  // b.none
  40708c:	cmp	w12, #0x20
  407090:	b.eq	40707c <feof@plt+0x37dc>  // b.none
  407094:	cbnz	w12, 40704c <feof@plt+0x37ac>
  407098:	mov	w8, w9
  40709c:	lsl	x0, x8, #4
  4070a0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4070a4:	ldr	x22, [x19, #1472]
  4070a8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4070ac:	str	x0, [x8, #1864]
  4070b0:	ldrb	w8, [x22]
  4070b4:	cbz	w8, 4071f8 <feof@plt+0x3958>
  4070b8:	mov	x26, #0x201                 	// #513
  4070bc:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4070c0:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4070c4:	adrp	x28, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4070c8:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4070cc:	mov	x23, xzr
  4070d0:	mov	w25, #0x1                   	// #1
  4070d4:	movk	x26, #0x1, lsl #32
  4070d8:	add	x27, x27, #0x560
  4070dc:	add	x19, x19, #0x548
  4070e0:	add	x28, x28, #0x558
  4070e4:	add	x24, x24, #0x550
  4070e8:	mov	x20, x22
  4070ec:	b	4070f4 <feof@plt+0x3854>
  4070f0:	ldrb	w8, [x20, #1]!
  4070f4:	and	w8, w8, #0xff
  4070f8:	add	x22, x22, #0x1
  4070fc:	cmp	w8, #0x9
  407100:	b.eq	4070f0 <feof@plt+0x3850>  // b.none
  407104:	cmp	w8, #0x20
  407108:	b.eq	4070f0 <feof@plt+0x3850>  // b.none
  40710c:	cbz	w8, 4071f8 <feof@plt+0x3958>
  407110:	ldrb	w8, [x22], #1
  407114:	cmp	w8, #0x20
  407118:	b.hi	407110 <feof@plt+0x3870>  // b.pmore
  40711c:	lsl	x8, x25, x8
  407120:	tst	x8, x26
  407124:	b.eq	407110 <feof@plt+0x3870>  // b.none
  407128:	ldp	x0, x8, [x27]
  40712c:	mvn	x9, x20
  407130:	add	x21, x9, x22
  407134:	sub	x8, x8, x0
  407138:	cmp	x8, x21
  40713c:	b.cs	407150 <feof@plt+0x38b0>  // b.hs, b.nlast
  407140:	mov	x0, x19
  407144:	mov	x1, x21
  407148:	bl	47bae8 <_obstack_newchunk@@Base>
  40714c:	ldr	x0, [x19, #24]
  407150:	mov	x1, x20
  407154:	mov	x2, x21
  407158:	bl	402fc0 <memcpy@plt>
  40715c:	ldp	x8, x9, [x27]
  407160:	add	x8, x8, x21
  407164:	cmp	x9, x8
  407168:	str	x8, [x27]
  40716c:	b.ne	407180 <feof@plt+0x38e0>  // b.any
  407170:	mov	w1, #0x1                   	// #1
  407174:	mov	x0, x19
  407178:	bl	47bae8 <_obstack_newchunk@@Base>
  40717c:	ldr	x8, [x19, #24]
  407180:	add	x9, x8, #0x1
  407184:	str	x9, [x28, #8]
  407188:	strb	wzr, [x8]
  40718c:	ldp	x8, x9, [x28]
  407190:	cmp	x9, x8
  407194:	b.ne	4071a8 <feof@plt+0x3908>  // b.any
  407198:	adrp	x11, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40719c:	ldrb	w10, [x11, #1432]
  4071a0:	orr	w10, w10, #0x2
  4071a4:	strb	w10, [x11, #1432]
  4071a8:	ldr	x10, [x24, #40]
  4071ac:	ldr	x11, [x24]
  4071b0:	ldr	x12, [x24, #24]
  4071b4:	adrp	x13, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4071b8:	ldr	x13, [x13, #1864]
  4071bc:	add	x9, x10, x9
  4071c0:	bic	x9, x9, x10
  4071c4:	sub	x10, x12, x11
  4071c8:	sub	x11, x9, x11
  4071cc:	cmp	x11, x10
  4071d0:	add	x10, x13, x23, lsl #4
  4071d4:	csel	x9, x12, x9, hi  // hi = pmore
  4071d8:	stp	x9, x9, [x24, #8]
  4071dc:	str	x8, [x10]
  4071e0:	str	w21, [x10, #8]
  4071e4:	ldurb	w8, [x22, #-1]
  4071e8:	cbz	w8, 4071f8 <feof@plt+0x3958>
  4071ec:	ldrb	w8, [x22]
  4071f0:	add	x23, x23, #0x1
  4071f4:	cbnz	w8, 4070e8 <feof@plt+0x3848>
  4071f8:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4071fc:	ldr	x8, [x20, #1456]
  407200:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407204:	add	x19, x19, #0x730
  407208:	b	407214 <feof@plt+0x3974>
  40720c:	cbnz	w10, 407704 <feof@plt+0x3e64>
  407210:	add	x8, x8, #0x1
  407214:	ldrb	w9, [x8]
  407218:	cmp	w9, #0xa
  40721c:	b.eq	407210 <feof@plt+0x3970>  // b.none
  407220:	cbz	w9, 4072ac <feof@plt+0x3a0c>
  407224:	mov	w10, #0x1                   	// #1
  407228:	and	w11, w9, #0xff
  40722c:	cmp	w11, #0x3b
  407230:	b.eq	40720c <feof@plt+0x396c>  // b.none
  407234:	cbz	w11, 407728 <feof@plt+0x3e88>
  407238:	cbz	w10, 4072a0 <feof@plt+0x3a00>
  40723c:	add	x21, x8, #0x1
  407240:	mov	w10, w9
  407244:	and	w10, w10, #0xff
  407248:	cmp	w10, #0x20
  40724c:	b.eq	407264 <feof@plt+0x39c4>  // b.none
  407250:	cmp	w10, #0x3b
  407254:	b.eq	407264 <feof@plt+0x39c4>  // b.none
  407258:	cbz	w10, 407728 <feof@plt+0x3e88>
  40725c:	ldrb	w10, [x21], #1
  407260:	b	407244 <feof@plt+0x39a4>
  407264:	and	w22, w9, #0xff
  407268:	cmp	w22, #0x21
  40726c:	cinc	x1, x8, eq  // eq = none
  407270:	sub	x23, x21, #0x1
  407274:	sub	w2, w23, w1
  407278:	mov	x0, x19
  40727c:	bl	40f458 <feof@plt+0xbbb8>
  407280:	ldurb	w8, [x21, #-1]
  407284:	cmp	w0, #0x0
  407288:	cset	w9, eq  // eq = none
  40728c:	cmp	w22, #0x21
  407290:	csel	w10, w9, w0, eq  // eq = none
  407294:	cmp	w8, #0x20
  407298:	csel	x8, x21, x23, eq  // eq = none
  40729c:	b	4072a4 <feof@plt+0x3a04>
  4072a0:	add	x8, x8, #0x1
  4072a4:	ldrb	w9, [x8]
  4072a8:	b	407228 <feof@plt+0x3988>
  4072ac:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4072b0:	ldr	x1, [x8, #1464]
  4072b4:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4072b8:	ldr	x19, [x9, #1440]
  4072bc:	ldrb	w8, [x1]
  4072c0:	cbz	w8, 4072d4 <feof@plt+0x3a34>
  4072c4:	mov	x0, x19
  4072c8:	mov	x2, xzr
  4072cc:	bl	4799ac <feof@plt+0x7610c>
  4072d0:	mov	x19, x0
  4072d4:	adrp	x0, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4072d8:	mov	w11, #0x1                   	// #1
  4072dc:	adrp	x13, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4072e0:	add	x0, x0, #0x730
  4072e4:	add	x20, x19, #0x1
  4072e8:	ldrb	w8, [x19]
  4072ec:	cmp	w8, #0xa
  4072f0:	b.ne	407300 <feof@plt+0x3a60>  // b.any
  4072f4:	add	x19, x19, #0x1
  4072f8:	add	x20, x20, #0x1
  4072fc:	b	4072e8 <feof@plt+0x3a48>
  407300:	mov	x23, x20
  407304:	cbz	w8, 4076c0 <feof@plt+0x3e20>
  407308:	and	w8, w8, #0xff
  40730c:	cmp	w8, #0x20
  407310:	b.eq	407320 <feof@plt+0x3a80>  // b.none
  407314:	cbz	w8, 407740 <feof@plt+0x3ea0>
  407318:	ldrb	w8, [x23], #1
  40731c:	b	407308 <feof@plt+0x3a68>
  407320:	sub	x26, x23, #0x1
  407324:	mov	w28, #0x1                   	// #1
  407328:	sub	x27, x26, x19
  40732c:	mov	w21, #0x1                   	// #1
  407330:	add	x24, x23, #0x1
  407334:	ldrb	w22, [x23]
  407338:	cmp	w22, #0x3b
  40733c:	b.eq	407438 <feof@plt+0x3b98>  // b.none
  407340:	cbz	w22, 407740 <feof@plt+0x3ea0>
  407344:	cbnz	w21, 407354 <feof@plt+0x3ab4>
  407348:	add	x23, x23, #0x1
  40734c:	add	x24, x24, #0x1
  407350:	b	407334 <feof@plt+0x3a94>
  407354:	mov	w8, w22
  407358:	and	w8, w8, #0xff
  40735c:	cmp	w8, #0x20
  407360:	b.eq	407378 <feof@plt+0x3ad8>  // b.none
  407364:	cmp	w8, #0x3b
  407368:	b.eq	407378 <feof@plt+0x3ad8>  // b.none
  40736c:	cbz	w8, 407740 <feof@plt+0x3ea0>
  407370:	ldrb	w8, [x24], #1
  407374:	b	407358 <feof@plt+0x3ab8>
  407378:	cmp	w22, #0x21
  40737c:	cinc	x1, x23, eq  // eq = none
  407380:	sub	x8, x24, #0x1
  407384:	sub	x25, x8, x1
  407388:	mov	w2, w25
  40738c:	str	w11, [x29, #12]
  407390:	stur	x8, [x29, #-56]
  407394:	stur	x1, [x29, #-40]
  407398:	bl	40f458 <feof@plt+0xbbb8>
  40739c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4073a0:	cmp	w0, #0x0
  4073a4:	ldr	w23, [x8, #1856]
  4073a8:	cset	w8, eq  // eq = none
  4073ac:	cmp	w22, #0x21
  4073b0:	csel	w21, w8, w0, eq  // eq = none
  4073b4:	cmp	w21, #0x0
  4073b8:	csel	w28, wzr, w28, eq  // eq = none
  4073bc:	cmp	w23, #0x1
  4073c0:	b.lt	407414 <feof@plt+0x3b74>  // b.tstop
  4073c4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4073c8:	ldr	x8, [x8, #1864]
  4073cc:	ldr	w11, [x29, #12]
  4073d0:	sxtw	x9, w25
  4073d4:	stur	x9, [x29, #-48]
  4073d8:	add	x22, x8, #0x8
  4073dc:	b	4073ec <feof@plt+0x3b4c>
  4073e0:	subs	x23, x23, #0x1
  4073e4:	add	x22, x22, #0x10
  4073e8:	b.eq	407418 <feof@plt+0x3b78>  // b.none
  4073ec:	ldr	w8, [x22]
  4073f0:	cmp	w8, w25
  4073f4:	b.ne	4073e0 <feof@plt+0x3b40>  // b.any
  4073f8:	ldur	x1, [x22, #-8]
  4073fc:	ldp	x2, x0, [x29, #-48]
  407400:	bl	403450 <strncmp@plt>
  407404:	ldr	w11, [x29, #12]
  407408:	cbnz	w0, 4073e0 <feof@plt+0x3b40>
  40740c:	mov	w21, #0x1                   	// #1
  407410:	b	407418 <feof@plt+0x3b78>
  407414:	ldr	w11, [x29, #12]
  407418:	ldurb	w8, [x24, #-1]
  40741c:	adrp	x0, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407420:	adrp	x13, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407424:	add	x0, x0, #0x730
  407428:	cmp	w8, #0x20
  40742c:	ldur	x8, [x29, #-56]
  407430:	csel	x23, x24, x8, eq  // eq = none
  407434:	b	407330 <feof@plt+0x3a90>
  407438:	cbz	w11, 4074b4 <feof@plt+0x3c14>
  40743c:	cbz	w21, 4074b4 <feof@plt+0x3c14>
  407440:	cmp	w27, #0x1
  407444:	b.ne	40745c <feof@plt+0x3bbc>  // b.any
  407448:	ldrb	w8, [x19]
  40744c:	cmp	w8, #0x2e
  407450:	b.ne	40745c <feof@plt+0x3bbc>  // b.any
  407454:	mov	w11, wzr
  407458:	b	4074b4 <feof@plt+0x3c14>
  40745c:	mov	w25, w28
  407460:	mov	x28, x26
  407464:	mov	x26, x0
  407468:	add	w0, w27, #0x1
  40746c:	mov	x24, x13
  407470:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  407474:	and	x22, x27, #0xffffffff
  407478:	mov	x1, x19
  40747c:	mov	x2, x22
  407480:	mov	x21, x0
  407484:	bl	403470 <strncpy@plt>
  407488:	mov	w1, #0x3a                  	// #58
  40748c:	strb	wzr, [x0, x22]
  407490:	bl	403210 <strchr@plt>
  407494:	cbz	x0, 40749c <feof@plt+0x3bfc>
  407498:	strb	wzr, [x0]
  40749c:	mov	w11, wzr
  4074a0:	mov	x13, x24
  4074a4:	mov	x0, x26
  4074a8:	mov	x26, x28
  4074ac:	mov	w28, w25
  4074b0:	str	x21, [x24, #1736]
  4074b4:	cbz	w28, 4074e0 <feof@plt+0x3c40>
  4074b8:	mov	x9, xzr
  4074bc:	add	x8, x19, w27, uxtw
  4074c0:	add	x10, x19, x9
  4074c4:	cmp	x10, x8
  4074c8:	b.cs	4074e0 <feof@plt+0x3c40>  // b.hs, b.nlast
  4074cc:	ldrb	w10, [x10]
  4074d0:	add	x9, x9, #0x1
  4074d4:	cmp	w10, #0x3a
  4074d8:	b.ne	4074c0 <feof@plt+0x3c20>  // b.any
  4074dc:	b	407530 <feof@plt+0x3c90>
  4074e0:	add	x19, x23, #0x1
  4074e4:	b	4072e4 <feof@plt+0x3a44>
  4074e8:	ldr	x8, [x22, #1184]
  4074ec:	cbz	x8, 406888 <feof@plt+0x2fe8>
  4074f0:	ldr	w9, [x8, #4]
  4074f4:	cmp	w9, #0x2
  4074f8:	b.cc	4075b4 <feof@plt+0x3d14>  // b.lo, b.ul, b.last
  4074fc:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  407500:	add	x0, x0, #0x668
  407504:	bl	42b940 <feof@plt+0x280a0>
  407508:	b	406888 <feof@plt+0x2fe8>
  40750c:	ldr	x8, [x22, #1184]
  407510:	cbz	x8, 406a44 <feof@plt+0x31a4>
  407514:	ldr	w9, [x8, #4]
  407518:	cmp	w9, #0x2
  40751c:	b.cc	4075d0 <feof@plt+0x3d30>  // b.lo, b.ul, b.last
  407520:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  407524:	add	x0, x0, #0x6b0
  407528:	bl	42b940 <feof@plt+0x280a0>
  40752c:	b	406a44 <feof@plt+0x31a4>
  407530:	sub	w10, w26, w19
  407534:	add	x22, x19, x10
  407538:	add	x19, x19, x9
  40753c:	cmp	x19, x22
  407540:	sub	x8, x19, #0x1
  407544:	b.cs	4075a4 <feof@plt+0x3d04>  // b.hs, b.nlast
  407548:	ldrb	w11, [x19]
  40754c:	cmp	w11, #0x3a
  407550:	b.ne	4075ec <feof@plt+0x3d4c>  // b.any
  407554:	mov	x25, x13
  407558:	mov	w24, #0x1                   	// #1
  40755c:	mov	x23, x19
  407560:	b	40762c <feof@plt+0x3d8c>
  407564:	ldr	x8, [x22, #1184]
  407568:	cbz	x8, 406c14 <feof@plt+0x3374>
  40756c:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x22fc>
  407570:	mov	x21, xzr
  407574:	add	x20, x20, #0x6ef
  407578:	ldr	w9, [x8, #4]
  40757c:	cmp	x21, x9
  407580:	b.cs	406c14 <feof@plt+0x3374>  // b.hs, b.nlast
  407584:	add	x8, x8, x21, lsl #3
  407588:	ldr	x0, [x8, #8]
  40758c:	mov	x1, x20
  407590:	bl	40ed30 <feof@plt+0xb490>
  407594:	ldr	x8, [x22, #1184]
  407598:	add	x21, x21, #0x1
  40759c:	cbnz	x8, 407578 <feof@plt+0x3cd8>
  4075a0:	b	406c14 <feof@plt+0x3374>
  4075a4:	mov	x25, x13
  4075a8:	mov	w24, wzr
  4075ac:	mov	x23, x19
  4075b0:	b	40762c <feof@plt+0x3d8c>
  4075b4:	cmp	w9, #0x1
  4075b8:	b.ne	406888 <feof@plt+0x2fe8>  // b.any
  4075bc:	ldr	x0, [x8, #8]
  4075c0:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  4075c4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4075c8:	str	x0, [x8, #1512]
  4075cc:	b	406888 <feof@plt+0x2fe8>
  4075d0:	cmp	w9, #0x1
  4075d4:	b.ne	406a44 <feof@plt+0x31a4>  // b.any
  4075d8:	ldr	x0, [x8, #8]
  4075dc:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  4075e0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4075e4:	str	x0, [x8, #1528]
  4075e8:	b	406a44 <feof@plt+0x31a4>
  4075ec:	mvn	x11, x9
  4075f0:	add	x10, x11, x10
  4075f4:	add	x11, x20, x9
  4075f8:	mov	x9, x11
  4075fc:	cbz	x10, 40761c <feof@plt+0x3d7c>
  407600:	mov	x11, x9
  407604:	ldrb	w12, [x11], #1
  407608:	sub	x10, x10, #0x1
  40760c:	cmp	w12, #0x3a
  407610:	b.ne	4075f8 <feof@plt+0x3d58>  // b.any
  407614:	sub	x23, x11, #0x1
  407618:	b	407620 <feof@plt+0x3d80>
  40761c:	mov	x23, x22
  407620:	cmp	x9, x22
  407624:	mov	x25, x13
  407628:	cset	w24, cc  // cc = lo, ul, last
  40762c:	ldrb	w9, [x23]
  407630:	cmp	w9, #0x3a
  407634:	csel	x9, x23, x22, eq  // eq = none
  407638:	sub	x0, x9, x8
  40763c:	subs	x20, x0, #0x1
  407640:	b.ne	407658 <feof@plt+0x3db8>  // b.any
  407644:	adrp	x0, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  407648:	add	x0, x0, #0x60
  40764c:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  407650:	mov	x21, x0
  407654:	b	407670 <feof@plt+0x3dd0>
  407658:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40765c:	mov	x1, x19
  407660:	mov	x2, x20
  407664:	mov	x21, x0
  407668:	bl	402fc0 <memcpy@plt>
  40766c:	strb	wzr, [x21, x20]
  407670:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407674:	mov	x13, x25
  407678:	str	x21, [x8, #1752]
  40767c:	cbz	w24, 4076c0 <feof@plt+0x3e20>
  407680:	ldrb	w8, [x23]
  407684:	cmp	w8, #0x3a
  407688:	b.ne	4076c0 <feof@plt+0x3e20>  // b.any
  40768c:	sub	x19, x22, x23
  407690:	mov	x0, x19
  407694:	mov	x21, x13
  407698:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40769c:	sub	x19, x19, #0x1
  4076a0:	add	x1, x23, #0x1
  4076a4:	mov	x2, x19
  4076a8:	mov	x20, x0
  4076ac:	bl	402fc0 <memcpy@plt>
  4076b0:	mov	x13, x21
  4076b4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4076b8:	strb	wzr, [x20, x19]
  4076bc:	str	x20, [x8, #1744]
  4076c0:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4076c4:	ldr	x8, [x13, #1736]
  4076c8:	ldr	x19, [x20, #1752]
  4076cc:	cbnz	x8, 4076f8 <feof@plt+0x3e58>
  4076d0:	cbz	x19, 4076f8 <feof@plt+0x3e58>
  4076d4:	adrp	x1, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  4076d8:	add	x1, x1, #0x60
  4076dc:	mov	x0, x19
  4076e0:	bl	403640 <strcmp@plt>
  4076e4:	cbnz	w0, 407704 <feof@plt+0x3e64>
  4076e8:	mov	x0, x19
  4076ec:	bl	4031d0 <free@plt>
  4076f0:	str	xzr, [x20, #1752]
  4076f4:	b	407704 <feof@plt+0x3e64>
  4076f8:	cbz	x8, 407704 <feof@plt+0x3e64>
  4076fc:	cbnz	x19, 407704 <feof@plt+0x3e64>
  407700:	str	x8, [x20, #1752]
  407704:	mov	sp, x29
  407708:	ldp	x20, x19, [sp, #96]
  40770c:	ldp	x22, x21, [sp, #80]
  407710:	ldp	x24, x23, [sp, #64]
  407714:	ldp	x26, x25, [sp, #48]
  407718:	ldp	x28, x27, [sp, #32]
  40771c:	ldp	x29, x30, [sp, #16]
  407720:	ldr	d8, [sp], #112
  407724:	ret
  407728:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40772c:	ldr	w0, [x8, #400]
  407730:	ldr	x2, [x20, #1456]
  407734:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x62fc>
  407738:	add	x1, x1, #0xc72
  40773c:	bl	42c008 <feof@plt+0x28768>
  407740:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  407744:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407748:	ldr	w0, [x8, #400]
  40774c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407750:	ldr	x2, [x9, #1440]
  407754:	ldr	x3, [x8, #1464]
  407758:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x62fc>
  40775c:	add	x1, x1, #0xc95
  407760:	bl	42c008 <feof@plt+0x28768>
  407764:	stp	x29, x30, [sp, #-48]!
  407768:	stp	x22, x21, [sp, #16]
  40776c:	stp	x20, x19, [sp, #32]
  407770:	mov	x29, sp
  407774:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407778:	add	x20, x20, #0x658
  40777c:	adrp	x3, 439000 <feof@plt+0x35760>
  407780:	adrp	x4, 439000 <feof@plt+0x35760>
  407784:	mov	x19, x1
  407788:	add	x3, x3, #0xf08
  40778c:	add	x4, x4, #0xf34
  407790:	mov	x0, x20
  407794:	mov	x1, xzr
  407798:	mov	x2, xzr
  40779c:	bl	47b98c <_obstack_begin@@Base>
  4077a0:	ldp	x8, x9, [x20, #24]
  4077a4:	sub	x9, x9, x8
  4077a8:	cmp	x9, #0xb
  4077ac:	b.hi	4077c0 <feof@plt+0x3f20>  // b.pmore
  4077b0:	mov	w1, #0xc                   	// #12
  4077b4:	mov	x0, x20
  4077b8:	bl	47bae8 <_obstack_newchunk@@Base>
  4077bc:	ldr	x8, [x20, #24]
  4077c0:	adrp	x9, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4077c4:	add	x9, x9, #0x727
  4077c8:	ldr	x9, [x9]
  4077cc:	mov	w10, #0x4347                	// #17223
  4077d0:	movk	w10, #0x3d43, lsl #16
  4077d4:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4077d8:	str	w10, [x8, #8]
  4077dc:	str	x9, [x8]
  4077e0:	add	x21, x21, #0x670
  4077e4:	ldr	x8, [x21]
  4077e8:	mov	x0, x19
  4077ec:	add	x22, x8, #0xc
  4077f0:	str	x22, [x21]
  4077f4:	bl	4030b0 <strlen@plt>
  4077f8:	ldr	x8, [x21, #8]
  4077fc:	add	x21, x0, #0x1
  407800:	sub	x8, x8, x22
  407804:	cmp	x8, x21
  407808:	b.cs	40781c <feof@plt+0x3f7c>  // b.hs, b.nlast
  40780c:	mov	x0, x20
  407810:	mov	x1, x21
  407814:	bl	47bae8 <_obstack_newchunk@@Base>
  407818:	ldr	x22, [x20, #24]
  40781c:	mov	x0, x22
  407820:	mov	x1, x19
  407824:	mov	x2, x21
  407828:	bl	402fc0 <memcpy@plt>
  40782c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407830:	add	x9, x9, #0x668
  407834:	ldp	x1, x8, [x9]
  407838:	add	x8, x8, x21
  40783c:	cmp	x8, x1
  407840:	str	x8, [x9, #8]
  407844:	b.ne	407858 <feof@plt+0x3fb8>  // b.any
  407848:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40784c:	ldrb	w10, [x9, #1704]
  407850:	orr	w10, w10, #0x2
  407854:	strb	w10, [x9, #1704]
  407858:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40785c:	add	x9, x9, #0x660
  407860:	ldr	x10, [x9, #40]
  407864:	ldr	x11, [x9]
  407868:	ldr	x12, [x9, #24]
  40786c:	adrp	x0, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407870:	add	x8, x10, x8
  407874:	bic	x8, x8, x10
  407878:	sub	x13, x12, x11
  40787c:	sub	x10, x8, x11
  407880:	cmp	x10, x13
  407884:	csel	x8, x12, x8, hi  // hi = pmore
  407888:	stp	x8, x8, [x9, #8]
  40788c:	ldp	x20, x19, [sp, #32]
  407890:	ldp	x22, x21, [sp, #16]
  407894:	add	x0, x0, #0x4d0
  407898:	ldp	x29, x30, [sp], #48
  40789c:	b	404520 <feof@plt+0xc80>
  4078a0:	sub	sp, sp, #0x60
  4078a4:	stp	x29, x30, [sp, #32]
  4078a8:	str	x23, [sp, #48]
  4078ac:	stp	x22, x21, [sp, #64]
  4078b0:	stp	x20, x19, [sp, #80]
  4078b4:	add	x29, sp, #0x20
  4078b8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4078bc:	ldrb	w8, [x8, #1712]
  4078c0:	tbnz	w8, #0, 407ae4 <feof@plt+0x4244>
  4078c4:	adrp	x10, 47d000 <_obstack_memory_used@@Base+0x12fc>
  4078c8:	ldr	d0, [x10, #1640]
  4078cc:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4078d0:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4078d4:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4078d8:	adrp	x3, 412000 <feof@plt+0xe760>
  4078dc:	add	x8, x8, #0x734
  4078e0:	add	x9, x9, #0x23b
  4078e4:	mov	w10, #0x1                   	// #1
  4078e8:	add	x0, x0, #0x4e0
  4078ec:	add	x3, x3, #0xab8
  4078f0:	mov	x4, sp
  4078f4:	mov	w2, #0xb                   	// #11
  4078f8:	mov	w1, wzr
  4078fc:	stp	x8, x9, [sp]
  407900:	str	d0, [sp, #16]
  407904:	str	w10, [sp, #24]
  407908:	bl	4126ac <feof@plt+0xee0c>
  40790c:	cbz	x0, 407ae4 <feof@plt+0x4244>
  407910:	mov	x19, x0
  407914:	mov	x8, xzr
  407918:	mov	w9, wzr
  40791c:	b	407928 <feof@plt+0x4088>
  407920:	add	w9, w9, #0x1
  407924:	add	x8, x8, #0x1
  407928:	ldrb	w10, [x19, x8]
  40792c:	cmp	w10, #0x9
  407930:	b.eq	407920 <feof@plt+0x4080>  // b.none
  407934:	cmp	w10, #0x20
  407938:	b.eq	407920 <feof@plt+0x4080>  // b.none
  40793c:	cbnz	w10, 407924 <feof@plt+0x4084>
  407940:	cbz	w9, 4079b4 <feof@plt+0x4114>
  407944:	add	x21, x8, #0x1
  407948:	add	w8, w9, w8
  40794c:	add	w8, w8, #0x1
  407950:	sxtw	x0, w8
  407954:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  407958:	mov	x20, x0
  40795c:	mov	x8, xzr
  407960:	mov	w9, wzr
  407964:	and	x10, x21, #0xffffffff
  407968:	mov	w11, #0x5c                  	// #92
  40796c:	b	407990 <feof@plt+0x40f0>
  407970:	add	w13, w9, #0x1
  407974:	strb	w11, [x20, w9, sxtw]
  407978:	mov	w9, w13
  40797c:	add	x8, x8, #0x1
  407980:	strb	w12, [x20, w9, sxtw]
  407984:	cmp	x10, x8
  407988:	add	w9, w9, #0x1
  40798c:	b.eq	4079a8 <feof@plt+0x4108>  // b.none
  407990:	ldrb	w12, [x19, x8]
  407994:	cmp	w12, #0x20
  407998:	b.eq	407970 <feof@plt+0x40d0>  // b.none
  40799c:	cmp	w12, #0x9
  4079a0:	b.eq	407970 <feof@plt+0x40d0>  // b.none
  4079a4:	b	40797c <feof@plt+0x40dc>
  4079a8:	mov	x0, x19
  4079ac:	bl	4031d0 <free@plt>
  4079b0:	b	4079b8 <feof@plt+0x4118>
  4079b4:	mov	x20, x19
  4079b8:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4079bc:	add	x19, x19, #0x658
  4079c0:	adrp	x3, 439000 <feof@plt+0x35760>
  4079c4:	adrp	x4, 439000 <feof@plt+0x35760>
  4079c8:	adrp	x23, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4079cc:	add	x3, x3, #0xf08
  4079d0:	add	x4, x4, #0xf34
  4079d4:	mov	x0, x19
  4079d8:	mov	x1, xzr
  4079dc:	mov	x2, xzr
  4079e0:	str	x20, [x23, #1320]
  4079e4:	bl	47b98c <_obstack_begin@@Base>
  4079e8:	ldp	x8, x9, [x19, #24]
  4079ec:	sub	x9, x9, x8
  4079f0:	cmp	x9, #0x13
  4079f4:	b.hi	407a08 <feof@plt+0x4168>  // b.pmore
  4079f8:	mov	w1, #0x14                  	// #20
  4079fc:	mov	x0, x19
  407a00:	bl	47bae8 <_obstack_newchunk@@Base>
  407a04:	ldr	x8, [x19, #24]
  407a08:	adrp	x9, 47e000 <_obstack_memory_used@@Base+0x22fc>
  407a0c:	add	x9, x9, #0x740
  407a10:	ldr	q0, [x9]
  407a14:	mov	w9, #0x4550                	// #17744
  407a18:	movk	w9, #0x3d52, lsl #16
  407a1c:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407a20:	str	w9, [x8, #16]
  407a24:	str	q0, [x8]
  407a28:	add	x20, x20, #0x670
  407a2c:	ldr	x8, [x20]
  407a30:	ldr	x22, [x23, #1320]
  407a34:	add	x21, x8, #0x14
  407a38:	mov	x0, x22
  407a3c:	str	x21, [x20]
  407a40:	bl	4030b0 <strlen@plt>
  407a44:	ldr	x8, [x20, #8]
  407a48:	add	x20, x0, #0x1
  407a4c:	sub	x8, x8, x21
  407a50:	cmp	x8, x20
  407a54:	b.cs	407a6c <feof@plt+0x41cc>  // b.hs, b.nlast
  407a58:	mov	x0, x19
  407a5c:	mov	x1, x20
  407a60:	bl	47bae8 <_obstack_newchunk@@Base>
  407a64:	ldr	x21, [x19, #24]
  407a68:	ldr	x22, [x23, #1320]
  407a6c:	mov	x0, x21
  407a70:	mov	x1, x22
  407a74:	mov	x2, x20
  407a78:	bl	402fc0 <memcpy@plt>
  407a7c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407a80:	add	x9, x9, #0x668
  407a84:	ldp	x1, x8, [x9]
  407a88:	add	x8, x8, x20
  407a8c:	cmp	x8, x1
  407a90:	str	x8, [x9, #8]
  407a94:	b.ne	407aa8 <feof@plt+0x4208>  // b.any
  407a98:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407a9c:	ldrb	w10, [x9, #1704]
  407aa0:	orr	w10, w10, #0x2
  407aa4:	strb	w10, [x9, #1704]
  407aa8:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407aac:	add	x9, x9, #0x660
  407ab0:	ldr	x10, [x9, #40]
  407ab4:	ldr	x11, [x9]
  407ab8:	ldr	x12, [x9, #24]
  407abc:	adrp	x0, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407ac0:	add	x8, x10, x8
  407ac4:	bic	x8, x8, x10
  407ac8:	sub	x13, x12, x11
  407acc:	sub	x10, x8, x11
  407ad0:	cmp	x10, x13
  407ad4:	csel	x8, x12, x8, hi  // hi = pmore
  407ad8:	add	x0, x0, #0x4d0
  407adc:	stp	x8, x8, [x9, #8]
  407ae0:	bl	404520 <feof@plt+0xc80>
  407ae4:	ldp	x20, x19, [sp, #80]
  407ae8:	ldp	x22, x21, [sp, #64]
  407aec:	ldr	x23, [sp, #48]
  407af0:	ldp	x29, x30, [sp, #32]
  407af4:	add	sp, sp, #0x60
  407af8:	ret
  407afc:	stp	x29, x30, [sp, #-48]!
  407b00:	stp	x22, x21, [sp, #16]
  407b04:	stp	x20, x19, [sp, #32]
  407b08:	mov	x29, sp
  407b0c:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407b10:	ldr	x19, [x22, #1720]
  407b14:	cbz	x19, 407c2c <feof@plt+0x438c>
  407b18:	ldrb	w8, [x19]
  407b1c:	cbz	w8, 407c2c <feof@plt+0x438c>
  407b20:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407b24:	add	x20, x20, #0x670
  407b28:	ldp	x8, x9, [x20]
  407b2c:	sub	x9, x9, x8
  407b30:	cmp	x9, #0x14
  407b34:	b.hi	407b54 <feof@plt+0x42b4>  // b.pmore
  407b38:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407b3c:	add	x19, x19, #0x658
  407b40:	mov	w1, #0x15                  	// #21
  407b44:	mov	x0, x19
  407b48:	bl	47bae8 <_obstack_newchunk@@Base>
  407b4c:	ldr	x8, [x19, #24]
  407b50:	ldr	x19, [x22, #1720]
  407b54:	adrp	x9, 47e000 <_obstack_memory_used@@Base+0x22fc>
  407b58:	add	x9, x9, #0x755
  407b5c:	ldur	x10, [x9, #13]
  407b60:	ldr	q0, [x9]
  407b64:	mov	x0, x19
  407b68:	stur	x10, [x8, #13]
  407b6c:	str	q0, [x8]
  407b70:	ldr	x8, [x20]
  407b74:	add	x21, x8, #0x15
  407b78:	str	x21, [x20]
  407b7c:	bl	4030b0 <strlen@plt>
  407b80:	ldr	x8, [x20, #8]
  407b84:	add	x20, x0, #0x1
  407b88:	sub	x8, x8, x21
  407b8c:	cmp	x8, x20
  407b90:	b.cs	407bb0 <feof@plt+0x4310>  // b.hs, b.nlast
  407b94:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407b98:	add	x19, x19, #0x658
  407b9c:	mov	x0, x19
  407ba0:	mov	x1, x20
  407ba4:	bl	47bae8 <_obstack_newchunk@@Base>
  407ba8:	ldr	x21, [x19, #24]
  407bac:	ldr	x19, [x22, #1720]
  407bb0:	mov	x0, x21
  407bb4:	mov	x1, x19
  407bb8:	mov	x2, x20
  407bbc:	bl	402fc0 <memcpy@plt>
  407bc0:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407bc4:	add	x9, x9, #0x668
  407bc8:	ldp	x1, x8, [x9]
  407bcc:	add	x8, x8, x20
  407bd0:	cmp	x8, x1
  407bd4:	str	x8, [x9, #8]
  407bd8:	b.ne	407bec <feof@plt+0x434c>  // b.any
  407bdc:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407be0:	ldrb	w10, [x9, #1704]
  407be4:	orr	w10, w10, #0x2
  407be8:	strb	w10, [x9, #1704]
  407bec:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407bf0:	add	x9, x9, #0x660
  407bf4:	ldr	x10, [x9, #40]
  407bf8:	ldr	x11, [x9]
  407bfc:	ldr	x12, [x9, #24]
  407c00:	adrp	x0, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407c04:	add	x8, x10, x8
  407c08:	bic	x8, x8, x10
  407c0c:	sub	x13, x12, x11
  407c10:	sub	x10, x8, x11
  407c14:	cmp	x10, x13
  407c18:	csel	x8, x12, x8, hi  // hi = pmore
  407c1c:	add	x0, x0, #0x4d0
  407c20:	stp	x8, x8, [x9, #8]
  407c24:	bl	404520 <feof@plt+0xc80>
  407c28:	ldr	x19, [x22, #1720]
  407c2c:	mov	x0, x19
  407c30:	bl	4031d0 <free@plt>
  407c34:	str	xzr, [x22, #1720]
  407c38:	ldp	x20, x19, [sp, #32]
  407c3c:	ldp	x22, x21, [sp, #16]
  407c40:	ldp	x29, x30, [sp], #48
  407c44:	ret
  407c48:	stp	x29, x30, [sp, #-80]!
  407c4c:	str	x25, [sp, #16]
  407c50:	stp	x24, x23, [sp, #32]
  407c54:	stp	x22, x21, [sp, #48]
  407c58:	stp	x20, x19, [sp, #64]
  407c5c:	mov	x29, sp
  407c60:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407c64:	ldr	w8, [x22, #1560]
  407c68:	cmp	w8, #0x1
  407c6c:	b.lt	407ce8 <feof@plt+0x4448>  // b.tstop
  407c70:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x22fc>
  407c74:	adrp	x21, 47e000 <_obstack_memory_used@@Base+0x22fc>
  407c78:	mov	x23, xzr
  407c7c:	mov	w24, wzr
  407c80:	add	x19, x0, #0x18
  407c84:	adrp	x25, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407c88:	add	x20, x20, #0x7ab
  407c8c:	add	x21, x21, #0x76b
  407c90:	b	407cb0 <feof@plt+0x4410>
  407c94:	mov	x0, x20
  407c98:	bl	42b940 <feof@plt+0x280a0>
  407c9c:	ldr	w8, [x22, #1560]
  407ca0:	add	w24, w24, #0x1
  407ca4:	add	x23, x23, #0x18
  407ca8:	cmp	w8, w24
  407cac:	b.le	407ce8 <feof@plt+0x4448>
  407cb0:	ldr	x8, [x25, #1592]
  407cb4:	add	x9, x8, x23
  407cb8:	ldrb	w9, [x9, #21]
  407cbc:	cbnz	w9, 407c9c <feof@plt+0x43fc>
  407cc0:	ldr	x1, [x8, x23]
  407cc4:	mov	x0, x19
  407cc8:	bl	428580 <feof@plt+0x24ce0>
  407ccc:	ldr	x8, [x25, #1592]
  407cd0:	ldr	x1, [x8, x23]
  407cd4:	cbz	x0, 407c94 <feof@plt+0x43f4>
  407cd8:	mov	x2, x0
  407cdc:	mov	x0, x21
  407ce0:	bl	42b940 <feof@plt+0x280a0>
  407ce4:	b	407c9c <feof@plt+0x43fc>
  407ce8:	ldp	x20, x19, [sp, #64]
  407cec:	ldp	x22, x21, [sp, #48]
  407cf0:	ldp	x24, x23, [sp, #32]
  407cf4:	ldr	x25, [sp, #16]
  407cf8:	ldp	x29, x30, [sp], #80
  407cfc:	ret
  407d00:	sub	sp, sp, #0xe0
  407d04:	stp	x29, x30, [sp, #128]
  407d08:	stp	x28, x27, [sp, #144]
  407d0c:	stp	x26, x25, [sp, #160]
  407d10:	stp	x24, x23, [sp, #176]
  407d14:	stp	x22, x21, [sp, #192]
  407d18:	stp	x20, x19, [sp, #208]
  407d1c:	add	x29, sp, #0x80
  407d20:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  407d24:	ldr	w8, [x8, #96]
  407d28:	cbz	w8, 407dd4 <feof@plt+0x4534>
  407d2c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  407d30:	add	x0, x0, #0x7d4
  407d34:	bl	4033e0 <gettext@plt>
  407d38:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407d3c:	ldr	x8, [x8, #1536]
  407d40:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407d44:	ldr	x10, [x10, #1496]
  407d48:	adrp	x9, 47e000 <_obstack_memory_used@@Base+0x22fc>
  407d4c:	adrp	x19, 48f000 <_obstack_memory_used@@Base+0x132fc>
  407d50:	add	x9, x9, #0x656
  407d54:	add	x19, x19, #0x23b
  407d58:	cmp	x8, #0x0
  407d5c:	csel	x1, x8, x9, ne  // ne = any
  407d60:	csel	x2, x19, x10, ne  // ne = any
  407d64:	bl	403880 <printf@plt>
  407d68:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  407d6c:	add	x0, x0, #0x7e3
  407d70:	bl	4033e0 <gettext@plt>
  407d74:	mov	x20, x0
  407d78:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  407d7c:	add	x0, x0, #0x4e0
  407d80:	mov	x1, x19
  407d84:	mov	w2, wzr
  407d88:	mov	w3, wzr
  407d8c:	bl	40ee88 <feof@plt+0xb5e8>
  407d90:	mov	x1, x0
  407d94:	mov	x0, x20
  407d98:	bl	403880 <printf@plt>
  407d9c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  407da0:	add	x0, x0, #0x7f1
  407da4:	bl	4033e0 <gettext@plt>
  407da8:	mov	x20, x0
  407dac:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  407db0:	add	x0, x0, #0x4b8
  407db4:	mov	w3, #0x1                   	// #1
  407db8:	mov	x1, x19
  407dbc:	mov	w2, wzr
  407dc0:	bl	40ee88 <feof@plt+0xb5e8>
  407dc4:	mov	x1, x0
  407dc8:	mov	x0, x20
  407dcc:	bl	403880 <printf@plt>
  407dd0:	b	408404 <feof@plt+0x4b64>
  407dd4:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  407dd8:	ldr	x19, [x8, #64]
  407ddc:	cbz	x19, 407e04 <feof@plt+0x4564>
  407de0:	ldrb	w8, [x19]
  407de4:	cmp	w8, #0x2f
  407de8:	b.ne	407e6c <feof@plt+0x45cc>  // b.any
  407dec:	mov	w1, #0x4                   	// #4
  407df0:	mov	x0, x19
  407df4:	bl	403290 <access@plt>
  407df8:	cbz	w0, 40836c <feof@plt+0x4acc>
  407dfc:	mov	x0, xzr
  407e00:	b	408374 <feof@plt+0x4ad4>
  407e04:	adrp	x21, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  407e08:	ldr	x19, [x21, #88]
  407e0c:	cbz	x19, 407eb4 <feof@plt+0x4614>
  407e10:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407e14:	ldr	x20, [x8, #1728]
  407e18:	cbz	x20, 407e48 <feof@plt+0x45a8>
  407e1c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  407e20:	add	x1, x1, #0x5d2
  407e24:	mov	x0, x19
  407e28:	bl	403640 <strcmp@plt>
  407e2c:	cbnz	w0, 407e48 <feof@plt+0x45a8>
  407e30:	mov	x0, x19
  407e34:	mov	x1, x20
  407e38:	mov	x2, xzr
  407e3c:	bl	4799ac <feof@plt+0x7610c>
  407e40:	mov	x19, x0
  407e44:	str	x0, [x21, #88]
  407e48:	ldrb	w8, [x19]
  407e4c:	cmp	w8, #0x2f
  407e50:	b.ne	408380 <feof@plt+0x4ae0>  // b.any
  407e54:	mov	w1, #0x1                   	// #1
  407e58:	mov	x0, x19
  407e5c:	bl	403290 <access@plt>
  407e60:	cbz	w0, 4083ec <feof@plt+0x4b4c>
  407e64:	mov	x0, xzr
  407e68:	b	4083f4 <feof@plt+0x4b54>
  407e6c:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  407e70:	add	x8, x8, #0x23b
  407e74:	mov	x0, x19
  407e78:	stp	x19, x8, [x29, #-32]
  407e7c:	bl	4030b0 <strlen@plt>
  407e80:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  407e84:	ldr	d0, [x8, #1632]
  407e88:	stur	w0, [x29, #-16]
  407e8c:	sxtw	x2, w0
  407e90:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  407e94:	adrp	x3, 412000 <feof@plt+0xe760>
  407e98:	add	x0, x0, #0x4b8
  407e9c:	add	x3, x3, #0xab8
  407ea0:	sub	x4, x29, #0x20
  407ea4:	mov	w1, #0x1                   	// #1
  407ea8:	stur	d0, [x29, #-12]
  407eac:	bl	4126ac <feof@plt+0xee0c>
  407eb0:	b	408374 <feof@plt+0x4ad4>
  407eb4:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  407eb8:	ldr	w8, [x8, #76]
  407ebc:	cbz	w8, 4083c8 <feof@plt+0x4b28>
  407ec0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407ec4:	ldr	x19, [x8, #1440]
  407ec8:	mov	w22, wzr
  407ecc:	str	xzr, [sp, #40]
  407ed0:	add	x24, x19, #0x1
  407ed4:	ldrb	w8, [x19]
  407ed8:	cmp	w8, #0xa
  407edc:	b.ne	407eec <feof@plt+0x464c>  // b.any
  407ee0:	add	x19, x19, #0x1
  407ee4:	add	x24, x24, #0x1
  407ee8:	b	407ed4 <feof@plt+0x4634>
  407eec:	cbz	w8, 408404 <feof@plt+0x4b64>
  407ef0:	mov	x10, xzr
  407ef4:	mov	w9, w8
  407ef8:	str	w22, [sp, #36]
  407efc:	and	w9, w9, #0xff
  407f00:	cmp	w9, #0x20
  407f04:	b.eq	407f18 <feof@plt+0x4678>  // b.none
  407f08:	cbz	w9, 4089a4 <feof@plt+0x5104>
  407f0c:	ldrb	w9, [x24], #1
  407f10:	add	x10, x10, #0x1
  407f14:	b	407efc <feof@plt+0x465c>
  407f18:	cmp	w8, #0x2e
  407f1c:	sub	x8, x24, #0x1
  407f20:	str	x8, [sp, #24]
  407f24:	b.ne	407f48 <feof@plt+0x46a8>  // b.any
  407f28:	ldrb	w8, [x19, #1]
  407f2c:	cmp	w8, #0x3a
  407f30:	b.ne	407f48 <feof@plt+0x46a8>  // b.any
  407f34:	ldrb	w8, [x19, #2]
  407f38:	cmp	w8, #0x3a
  407f3c:	cset	w8, ne  // ne = any
  407f40:	str	w8, [sp, #32]
  407f44:	b	407f4c <feof@plt+0x46ac>
  407f48:	str	wzr, [sp, #32]
  407f4c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407f50:	ldr	x22, [x8, #1456]
  407f54:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407f58:	ldr	x9, [x8, #1864]
  407f5c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  407f60:	ldr	w8, [x8, #1856]
  407f64:	str	x10, [sp, #8]
  407f68:	str	x9, [sp, #16]
  407f6c:	str	x22, [sp]
  407f70:	stur	x8, [x29, #-40]
  407f74:	add	x8, x9, #0x8
  407f78:	stur	x8, [x29, #-48]
  407f7c:	str	x24, [sp, #48]
  407f80:	b	407f8c <feof@plt+0x46ec>
  407f84:	cbnz	w9, 4080ec <feof@plt+0x484c>
  407f88:	add	x22, x22, #0x1
  407f8c:	ldrb	w28, [x22]
  407f90:	cmp	w28, #0xa
  407f94:	b.eq	407f88 <feof@plt+0x46e8>  // b.none
  407f98:	cbz	w28, 4080e4 <feof@plt+0x4844>
  407f9c:	mov	w9, #0x1                   	// #1
  407fa0:	and	w8, w28, #0xff
  407fa4:	cmp	w8, #0x3b
  407fa8:	b.eq	407f84 <feof@plt+0x46e4>  // b.none
  407fac:	cbz	w8, 4089c0 <feof@plt+0x5120>
  407fb0:	cbz	w9, 407ff0 <feof@plt+0x4750>
  407fb4:	add	x10, x22, #0x1
  407fb8:	and	w8, w28, #0xff
  407fbc:	cmp	w8, #0x20
  407fc0:	b.eq	407fd8 <feof@plt+0x4738>  // b.none
  407fc4:	cmp	w8, #0x3b
  407fc8:	b.eq	407fd8 <feof@plt+0x4738>  // b.none
  407fcc:	cbz	w8, 4089c0 <feof@plt+0x5120>
  407fd0:	ldrb	w28, [x10], #1
  407fd4:	b	407fb8 <feof@plt+0x4718>
  407fd8:	ldrb	w26, [x24]
  407fdc:	sub	x11, x10, #0x1
  407fe0:	cmp	w26, #0x3b
  407fe4:	b.ne	407ff8 <feof@plt+0x4758>  // b.any
  407fe8:	mov	w9, wzr
  407fec:	b	4080c4 <feof@plt+0x4824>
  407ff0:	add	x22, x22, #0x1
  407ff4:	b	4080d0 <feof@plt+0x4830>
  407ff8:	sub	x21, x11, x22
  407ffc:	sxtw	x23, w21
  408000:	mov	x0, x24
  408004:	stur	x10, [x29, #-56]
  408008:	str	w9, [sp, #60]
  40800c:	str	x11, [sp, #64]
  408010:	b	40802c <feof@plt+0x478c>
  408014:	and	w8, w26, #0xff
  408018:	cmp	w8, #0x20
  40801c:	csel	x0, x25, x20, eq  // eq = none
  408020:	ldrb	w26, [x0]
  408024:	cmp	w26, #0x3b
  408028:	b.eq	4080d8 <feof@plt+0x4838>  // b.none
  40802c:	tst	w26, #0xff
  408030:	b.eq	4089a4 <feof@plt+0x5104>  // b.none
  408034:	add	x25, x0, #0x1
  408038:	and	w8, w26, #0xff
  40803c:	cmp	w8, #0x20
  408040:	b.eq	408058 <feof@plt+0x47b8>  // b.none
  408044:	cmp	w8, #0x3b
  408048:	b.eq	408058 <feof@plt+0x47b8>  // b.none
  40804c:	cbz	w8, 4089a4 <feof@plt+0x5104>
  408050:	ldrb	w26, [x25], #1
  408054:	b	408038 <feof@plt+0x4798>
  408058:	sub	x20, x25, #0x1
  40805c:	sub	x8, x20, x0
  408060:	cmp	x23, x8
  408064:	csel	x2, x8, x23, lt  // lt = tstop
  408068:	mov	x1, x22
  40806c:	bl	403450 <strncmp@plt>
  408070:	cbz	w0, 4080b4 <feof@plt+0x4814>
  408074:	ldur	x8, [x29, #-40]
  408078:	cmp	w8, #0x1
  40807c:	b.lt	408014 <feof@plt+0x4774>  // b.tstop
  408080:	ldp	x24, x27, [x29, #-48]
  408084:	b	408094 <feof@plt+0x47f4>
  408088:	subs	x27, x27, #0x1
  40808c:	add	x24, x24, #0x10
  408090:	b.eq	408014 <feof@plt+0x4774>  // b.none
  408094:	ldr	w8, [x24]
  408098:	cmp	w8, w21
  40809c:	b.ne	408088 <feof@plt+0x47e8>  // b.any
  4080a0:	ldur	x1, [x24, #-8]
  4080a4:	mov	x0, x22
  4080a8:	mov	x2, x23
  4080ac:	bl	403450 <strncmp@plt>
  4080b0:	cbnz	w0, 408088 <feof@plt+0x47e8>
  4080b4:	ldr	x24, [sp, #48]
  4080b8:	ldr	w9, [sp, #60]
  4080bc:	ldur	x10, [x29, #-56]
  4080c0:	ldr	x11, [sp, #64]
  4080c4:	and	w8, w28, #0xff
  4080c8:	cmp	w8, #0x20
  4080cc:	csel	x22, x10, x11, eq  // eq = none
  4080d0:	ldrb	w28, [x22]
  4080d4:	b	407fa0 <feof@plt+0x4700>
  4080d8:	ldr	x24, [sp, #48]
  4080dc:	mov	w9, wzr
  4080e0:	b	4080bc <feof@plt+0x481c>
  4080e4:	ldr	w8, [sp, #32]
  4080e8:	cbz	w8, 408100 <feof@plt+0x4860>
  4080ec:	ldr	w22, [sp, #36]
  4080f0:	ldr	x19, [sp, #40]
  4080f4:	mov	w20, #0x1                   	// #1
  4080f8:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4080fc:	b	4082dc <feof@plt+0x4a3c>
  408100:	ldr	x8, [sp, #24]
  408104:	ldr	w21, [sp, #36]
  408108:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40810c:	sub	w22, w8, w19
  408110:	ldr	x8, [sp, #40]
  408114:	cbz	x8, 408154 <feof@plt+0x48b4>
  408118:	ldr	x8, [sp, #16]
  40811c:	cmp	w21, w22
  408120:	b.ne	408158 <feof@plt+0x48b8>  // b.any
  408124:	ldr	x0, [sp, #40]
  408128:	mov	w2, w21
  40812c:	mov	x1, x19
  408130:	bl	479ca8 <feof@plt+0x76408>
  408134:	cbz	w0, 408268 <feof@plt+0x49c8>
  408138:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40813c:	ldr	w8, [x8, #1856]
  408140:	mov	w22, w21
  408144:	stur	x8, [x29, #-40]
  408148:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40814c:	ldr	x8, [x8, #1864]
  408150:	b	408158 <feof@plt+0x48b8>
  408154:	ldr	x8, [sp, #16]
  408158:	add	x8, x8, #0x8
  40815c:	stur	x8, [x29, #-48]
  408160:	mov	x8, x24
  408164:	b	408178 <feof@plt+0x48d8>
  408168:	and	w8, w25, #0xff
  40816c:	cmp	w8, #0x20
  408170:	csel	x8, x26, x27, eq  // eq = none
  408174:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408178:	ldrb	w25, [x8]
  40817c:	cmp	w25, #0x21
  408180:	b.eq	408198 <feof@plt+0x48f8>  // b.none
  408184:	cmp	w25, #0x3b
  408188:	b.eq	40821c <feof@plt+0x497c>  // b.none
  40818c:	cbz	w25, 4089a4 <feof@plt+0x5104>
  408190:	mov	x20, x8
  408194:	b	40819c <feof@plt+0x48fc>
  408198:	mov	x20, xzr
  40819c:	add	x26, x8, #0x1
  4081a0:	and	w8, w25, #0xff
  4081a4:	cmp	w8, #0x20
  4081a8:	b.eq	4081c0 <feof@plt+0x4920>  // b.none
  4081ac:	cmp	w8, #0x3b
  4081b0:	b.eq	4081c0 <feof@plt+0x4920>  // b.none
  4081b4:	cbz	w8, 4089a4 <feof@plt+0x5104>
  4081b8:	ldrb	w25, [x26], #1
  4081bc:	b	4081a0 <feof@plt+0x4900>
  4081c0:	sub	x27, x26, #0x1
  4081c4:	cbz	x20, 408168 <feof@plt+0x48c8>
  4081c8:	ldur	x8, [x29, #-40]
  4081cc:	cmp	w8, #0x1
  4081d0:	b.lt	408168 <feof@plt+0x48c8>  // b.tstop
  4081d4:	ldp	x24, x23, [x29, #-48]
  4081d8:	sub	x28, x27, x20
  4081dc:	sxtw	x21, w28
  4081e0:	b	4081f0 <feof@plt+0x4950>
  4081e4:	subs	x23, x23, #0x1
  4081e8:	add	x24, x24, #0x10
  4081ec:	b.eq	408168 <feof@plt+0x48c8>  // b.none
  4081f0:	ldr	w8, [x24]
  4081f4:	cmp	w8, w28
  4081f8:	b.ne	4081e4 <feof@plt+0x4944>  // b.any
  4081fc:	ldur	x1, [x24, #-8]
  408200:	mov	x0, x20
  408204:	mov	x2, x21
  408208:	bl	403450 <strncmp@plt>
  40820c:	cbnz	w0, 4081e4 <feof@plt+0x4944>
  408210:	mov	w20, #0x1                   	// #1
  408214:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408218:	b	408260 <feof@plt+0x49c0>
  40821c:	ldr	x8, [sp, #24]
  408220:	ldr	x21, [sp, #8]
  408224:	cmp	x19, x8
  408228:	b.cs	408250 <feof@plt+0x49b0>  // b.hs, b.nlast
  40822c:	mov	x20, x19
  408230:	ldrb	w0, [x20]
  408234:	cmp	w0, #0x3a
  408238:	b.eq	408250 <feof@plt+0x49b0>  // b.none
  40823c:	ldr	x1, [x23, #1088]
  408240:	bl	403120 <putc@plt>
  408244:	subs	x21, x21, #0x1
  408248:	add	x20, x20, #0x1
  40824c:	b.ne	408230 <feof@plt+0x4990>  // b.any
  408250:	ldr	x1, [x23, #1088]
  408254:	mov	w0, #0x3b                  	// #59
  408258:	bl	403120 <putc@plt>
  40825c:	mov	w20, wzr
  408260:	ldr	x24, [sp, #48]
  408264:	b	4082dc <feof@plt+0x4a3c>
  408268:	mov	w20, #0x1                   	// #1
  40826c:	mov	w22, w21
  408270:	b	4082dc <feof@plt+0x4a3c>
  408274:	cbz	w21, 4089a4 <feof@plt+0x5104>
  408278:	cbz	w20, 408288 <feof@plt+0x49e8>
  40827c:	add	x24, x24, #0x1
  408280:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408284:	b	4082dc <feof@plt+0x4a3c>
  408288:	cmp	w21, #0x21
  40828c:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408290:	b.eq	4082a0 <feof@plt+0x4a00>  // b.none
  408294:	ldr	x1, [x23, #1088]
  408298:	mov	w0, #0x40                  	// #64
  40829c:	bl	403120 <putc@plt>
  4082a0:	ldrb	w0, [x24]
  4082a4:	cmp	w0, #0x20
  4082a8:	b.eq	4082d4 <feof@plt+0x4a34>  // b.none
  4082ac:	cmp	w0, #0x3b
  4082b0:	b.eq	4082d4 <feof@plt+0x4a34>  // b.none
  4082b4:	cbz	w0, 4089a4 <feof@plt+0x5104>
  4082b8:	cmp	w21, #0x21
  4082bc:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4082c0:	b.eq	4082cc <feof@plt+0x4a2c>  // b.none
  4082c4:	ldr	x1, [x23, #1088]
  4082c8:	bl	403120 <putc@plt>
  4082cc:	add	x24, x24, #0x1
  4082d0:	b	4082a0 <feof@plt+0x4a00>
  4082d4:	cmp	w0, #0x20
  4082d8:	cinc	x24, x24, eq  // eq = none
  4082dc:	ldrb	w21, [x24]
  4082e0:	cmp	w21, #0x3b
  4082e4:	b.ne	408274 <feof@plt+0x49d4>  // b.any
  4082e8:	tbnz	w20, #0, 40835c <feof@plt+0x4abc>
  4082ec:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4082f0:	ldr	x9, [x8, #3584]
  4082f4:	cbz	x9, 408350 <feof@plt+0x4ab0>
  4082f8:	ldrb	w8, [x9]
  4082fc:	cbz	w8, 408350 <feof@plt+0x4ab0>
  408300:	add	x20, x9, #0x1
  408304:	mov	w9, #0x1                   	// #1
  408308:	b	408314 <feof@plt+0x4a74>
  40830c:	ldrb	w8, [x20], #1
  408310:	mov	w9, #0x1                   	// #1
  408314:	and	w10, w8, #0xff
  408318:	cmp	w10, #0x20
  40831c:	b.eq	40830c <feof@plt+0x4a6c>  // b.none
  408320:	cbz	w10, 408350 <feof@plt+0x4ab0>
  408324:	cbz	w9, 408338 <feof@plt+0x4a98>
  408328:	ldr	x1, [x23, #1088]
  40832c:	mov	w0, #0x40                  	// #64
  408330:	bl	403120 <putc@plt>
  408334:	ldurb	w8, [x20, #-1]
  408338:	ldr	x1, [x23, #1088]
  40833c:	and	w0, w8, #0xff
  408340:	bl	403120 <putc@plt>
  408344:	ldrb	w8, [x20], #1
  408348:	mov	w9, wzr
  40834c:	b	408314 <feof@plt+0x4a74>
  408350:	ldr	x1, [x23, #1088]
  408354:	mov	w0, #0xa                   	// #10
  408358:	bl	403120 <putc@plt>
  40835c:	add	x8, x24, #0x1
  408360:	str	x19, [sp, #40]
  408364:	mov	x19, x8
  408368:	b	407ed0 <feof@plt+0x4630>
  40836c:	mov	x0, x19
  408370:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  408374:	cmp	x0, #0x0
  408378:	csel	x0, x19, x0, eq  // eq = none
  40837c:	b	408400 <feof@plt+0x4b60>
  408380:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  408384:	add	x8, x8, #0x23b
  408388:	mov	x0, x19
  40838c:	stp	x19, x8, [x29, #-32]
  408390:	bl	4030b0 <strlen@plt>
  408394:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  408398:	ldr	d0, [x8, #1608]
  40839c:	stur	w0, [x29, #-16]
  4083a0:	sxtw	x2, w0
  4083a4:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4083a8:	adrp	x3, 412000 <feof@plt+0xe760>
  4083ac:	add	x0, x0, #0x4e0
  4083b0:	add	x3, x3, #0xab8
  4083b4:	sub	x4, x29, #0x20
  4083b8:	mov	w1, wzr
  4083bc:	stur	d0, [x29, #-12]
  4083c0:	bl	4126ac <feof@plt+0xee0c>
  4083c4:	b	4083f4 <feof@plt+0x4b54>
  4083c8:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  4083cc:	ldr	w8, [x8, #72]
  4083d0:	cbz	w8, 408428 <feof@plt+0x4b88>
  4083d4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4083d8:	ldr	x0, [x8, #1736]
  4083dc:	cbnz	x0, 408400 <feof@plt+0x4b60>
  4083e0:	adrp	x0, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  4083e4:	add	x0, x0, #0x60
  4083e8:	b	408400 <feof@plt+0x4b60>
  4083ec:	mov	x0, x19
  4083f0:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  4083f4:	ldr	x8, [x21, #88]
  4083f8:	cmp	x0, #0x0
  4083fc:	csel	x0, x8, x0, eq  // eq = none
  408400:	bl	403010 <puts@plt>
  408404:	mov	w0, wzr
  408408:	ldp	x20, x19, [sp, #208]
  40840c:	ldp	x22, x21, [sp, #192]
  408410:	ldp	x24, x23, [sp, #176]
  408414:	ldp	x26, x25, [sp, #160]
  408418:	ldp	x28, x27, [sp, #144]
  40841c:	ldp	x29, x30, [sp, #128]
  408420:	add	sp, sp, #0xe0
  408424:	ret
  408428:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40842c:	ldr	w8, [x8, #84]
  408430:	cbz	w8, 408454 <feof@plt+0x4bb4>
  408434:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408438:	ldr	x0, [x8, #1744]
  40843c:	cbnz	x0, 408400 <feof@plt+0x4b60>
  408440:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408444:	ldr	x1, [x8, #1088]
  408448:	mov	w0, #0xa                   	// #10
  40844c:	bl	403120 <putc@plt>
  408450:	b	408404 <feof@plt+0x4b64>
  408454:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  408458:	ldr	w8, [x8, #100]
  40845c:	cbz	w8, 408488 <feof@plt+0x4be8>
  408460:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408464:	ldr	x1, [x8, #1520]
  408468:	cbz	x1, 408404 <feof@plt+0x4b64>
  40846c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408470:	ldr	x2, [x8, #1512]
  408474:	cbz	x2, 4084a4 <feof@plt+0x4c04>
  408478:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40847c:	add	x0, x0, #0x7dd
  408480:	bl	403880 <printf@plt>
  408484:	b	408404 <feof@plt+0x4b64>
  408488:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40848c:	ldr	w8, [x8, #80]
  408490:	cbz	w8, 4084ac <feof@plt+0x4c0c>
  408494:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408498:	ldr	x0, [x8, #1752]
  40849c:	cbnz	x0, 408400 <feof@plt+0x4b60>
  4084a0:	b	4083e0 <feof@plt+0x4b40>
  4084a4:	mov	x0, x1
  4084a8:	b	408400 <feof@plt+0x4b60>
  4084ac:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  4084b0:	ldr	w8, [x8, #104]
  4084b4:	cbz	w8, 4084e4 <feof@plt+0x4c44>
  4084b8:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4084bc:	ldr	x8, [x8, #1288]
  4084c0:	ldrb	w8, [x8]
  4084c4:	cbz	w8, 4089d8 <feof@plt+0x5138>
  4084c8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4084cc:	ldr	x8, [x8, #1528]
  4084d0:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4084d4:	add	x9, x9, #0x23b
  4084d8:	cmp	x8, #0x0
  4084dc:	csel	x0, x9, x8, eq  // eq = none
  4084e0:	b	408400 <feof@plt+0x4b60>
  4084e4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4084e8:	ldrb	w8, [x8, #1760]
  4084ec:	adrp	x19, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  4084f0:	cmp	w8, #0x1
  4084f4:	b.ne	4088d0 <feof@plt+0x5030>  // b.any
  4084f8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  4084fc:	add	x0, x0, #0xb8a
  408500:	bl	4033e0 <gettext@plt>
  408504:	adrp	x21, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  408508:	ldr	x1, [x21, #48]
  40850c:	bl	403880 <printf@plt>
  408510:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  408514:	add	x0, x0, #0xba7
  408518:	bl	4033e0 <gettext@plt>
  40851c:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408520:	ldr	x1, [x20, #1088]
  408524:	bl	402fa0 <fputs@plt>
  408528:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  40852c:	add	x0, x0, #0xbb1
  408530:	bl	4033e0 <gettext@plt>
  408534:	ldr	x1, [x20, #1088]
  408538:	bl	402fa0 <fputs@plt>
  40853c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  408540:	add	x0, x0, #0xbf8
  408544:	bl	4033e0 <gettext@plt>
  408548:	ldr	x1, [x20, #1088]
  40854c:	bl	402fa0 <fputs@plt>
  408550:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  408554:	add	x0, x0, #0xc2e
  408558:	bl	4033e0 <gettext@plt>
  40855c:	ldr	x1, [x20, #1088]
  408560:	bl	402fa0 <fputs@plt>
  408564:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  408568:	add	x0, x0, #0xc78
  40856c:	bl	4033e0 <gettext@plt>
  408570:	ldr	x1, [x20, #1088]
  408574:	bl	402fa0 <fputs@plt>
  408578:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  40857c:	add	x0, x0, #0xcd6
  408580:	bl	4033e0 <gettext@plt>
  408584:	ldr	x1, [x20, #1088]
  408588:	bl	402fa0 <fputs@plt>
  40858c:	ldr	w8, [x19, #120]
  408590:	cbnz	w8, 4085a8 <feof@plt+0x4d08>
  408594:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  408598:	add	x0, x0, #0xd22
  40859c:	bl	4033e0 <gettext@plt>
  4085a0:	ldr	x1, [x20, #1088]
  4085a4:	bl	402fa0 <fputs@plt>
  4085a8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  4085ac:	add	x0, x0, #0xd69
  4085b0:	bl	4033e0 <gettext@plt>
  4085b4:	ldr	x1, [x20, #1088]
  4085b8:	bl	402fa0 <fputs@plt>
  4085bc:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  4085c0:	add	x0, x0, #0xdab
  4085c4:	bl	4033e0 <gettext@plt>
  4085c8:	ldr	x1, [x20, #1088]
  4085cc:	bl	402fa0 <fputs@plt>
  4085d0:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  4085d4:	add	x0, x0, #0xdf1
  4085d8:	bl	4033e0 <gettext@plt>
  4085dc:	ldr	x1, [x20, #1088]
  4085e0:	bl	402fa0 <fputs@plt>
  4085e4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  4085e8:	add	x0, x0, #0xe32
  4085ec:	bl	4033e0 <gettext@plt>
  4085f0:	ldr	x1, [x20, #1088]
  4085f4:	bl	402fa0 <fputs@plt>
  4085f8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  4085fc:	add	x0, x0, #0xe77
  408600:	bl	4033e0 <gettext@plt>
  408604:	ldr	x1, [x20, #1088]
  408608:	bl	402fa0 <fputs@plt>
  40860c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  408610:	add	x0, x0, #0xeca
  408614:	bl	4033e0 <gettext@plt>
  408618:	ldr	x1, [x20, #1088]
  40861c:	bl	402fa0 <fputs@plt>
  408620:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  408624:	add	x0, x0, #0xf1c
  408628:	bl	4033e0 <gettext@plt>
  40862c:	ldr	x1, [x20, #1088]
  408630:	bl	402fa0 <fputs@plt>
  408634:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  408638:	add	x0, x0, #0xf60
  40863c:	bl	4033e0 <gettext@plt>
  408640:	ldr	x1, [x20, #1088]
  408644:	bl	402fa0 <fputs@plt>
  408648:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  40864c:	add	x0, x0, #0xfb0
  408650:	bl	4033e0 <gettext@plt>
  408654:	ldr	x1, [x20, #1088]
  408658:	bl	402fa0 <fputs@plt>
  40865c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  408660:	add	x0, x0, #0x3d
  408664:	bl	4033e0 <gettext@plt>
  408668:	ldr	x1, [x20, #1088]
  40866c:	bl	402fa0 <fputs@plt>
  408670:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  408674:	add	x0, x0, #0x8c
  408678:	bl	4033e0 <gettext@plt>
  40867c:	ldr	x1, [x20, #1088]
  408680:	bl	402fa0 <fputs@plt>
  408684:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  408688:	add	x0, x0, #0x11d
  40868c:	bl	4033e0 <gettext@plt>
  408690:	ldr	x1, [x20, #1088]
  408694:	bl	402fa0 <fputs@plt>
  408698:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  40869c:	add	x0, x0, #0x165
  4086a0:	bl	4033e0 <gettext@plt>
  4086a4:	ldr	x1, [x20, #1088]
  4086a8:	bl	402fa0 <fputs@plt>
  4086ac:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  4086b0:	add	x0, x0, #0x1a9
  4086b4:	bl	4033e0 <gettext@plt>
  4086b8:	ldr	x1, [x20, #1088]
  4086bc:	bl	402fa0 <fputs@plt>
  4086c0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  4086c4:	add	x0, x0, #0x1fb
  4086c8:	bl	4033e0 <gettext@plt>
  4086cc:	ldr	x1, [x20, #1088]
  4086d0:	bl	402fa0 <fputs@plt>
  4086d4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  4086d8:	add	x0, x0, #0x24b
  4086dc:	bl	4033e0 <gettext@plt>
  4086e0:	ldr	x1, [x20, #1088]
  4086e4:	bl	402fa0 <fputs@plt>
  4086e8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  4086ec:	add	x0, x0, #0x29e
  4086f0:	bl	4033e0 <gettext@plt>
  4086f4:	ldr	x1, [x20, #1088]
  4086f8:	bl	402fa0 <fputs@plt>
  4086fc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  408700:	add	x0, x0, #0x2eb
  408704:	bl	4033e0 <gettext@plt>
  408708:	ldr	x1, [x20, #1088]
  40870c:	bl	402fa0 <fputs@plt>
  408710:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  408714:	add	x0, x0, #0x327
  408718:	bl	4033e0 <gettext@plt>
  40871c:	ldr	x1, [x20, #1088]
  408720:	bl	402fa0 <fputs@plt>
  408724:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  408728:	add	x0, x0, #0x366
  40872c:	bl	4033e0 <gettext@plt>
  408730:	ldr	x1, [x20, #1088]
  408734:	bl	402fa0 <fputs@plt>
  408738:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  40873c:	add	x0, x0, #0x39f
  408740:	bl	4033e0 <gettext@plt>
  408744:	ldr	x1, [x20, #1088]
  408748:	bl	402fa0 <fputs@plt>
  40874c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  408750:	add	x0, x0, #0x3dd
  408754:	bl	4033e0 <gettext@plt>
  408758:	ldr	x1, [x20, #1088]
  40875c:	bl	402fa0 <fputs@plt>
  408760:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  408764:	add	x0, x0, #0x41b
  408768:	bl	4033e0 <gettext@plt>
  40876c:	ldr	x1, [x20, #1088]
  408770:	bl	402fa0 <fputs@plt>
  408774:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  408778:	add	x0, x0, #0x4a5
  40877c:	bl	4033e0 <gettext@plt>
  408780:	ldr	x1, [x20, #1088]
  408784:	bl	402fa0 <fputs@plt>
  408788:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  40878c:	add	x0, x0, #0x4eb
  408790:	bl	4033e0 <gettext@plt>
  408794:	ldr	x1, [x20, #1088]
  408798:	bl	402fa0 <fputs@plt>
  40879c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  4087a0:	add	x0, x0, #0x52e
  4087a4:	bl	4033e0 <gettext@plt>
  4087a8:	ldr	x1, [x20, #1088]
  4087ac:	bl	402fa0 <fputs@plt>
  4087b0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  4087b4:	add	x0, x0, #0x57f
  4087b8:	bl	4033e0 <gettext@plt>
  4087bc:	ldr	x1, [x20, #1088]
  4087c0:	bl	402fa0 <fputs@plt>
  4087c4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  4087c8:	add	x0, x0, #0x5cd
  4087cc:	bl	4033e0 <gettext@plt>
  4087d0:	ldr	x1, [x20, #1088]
  4087d4:	bl	402fa0 <fputs@plt>
  4087d8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  4087dc:	add	x0, x0, #0x645
  4087e0:	bl	4033e0 <gettext@plt>
  4087e4:	ldr	x1, [x20, #1088]
  4087e8:	bl	402fa0 <fputs@plt>
  4087ec:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  4087f0:	add	x0, x0, #0x691
  4087f4:	bl	4033e0 <gettext@plt>
  4087f8:	ldr	x1, [x20, #1088]
  4087fc:	bl	402fa0 <fputs@plt>
  408800:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  408804:	add	x0, x0, #0x6db
  408808:	bl	4033e0 <gettext@plt>
  40880c:	ldr	x1, [x20, #1088]
  408810:	bl	402fa0 <fputs@plt>
  408814:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  408818:	add	x0, x0, #0x72d
  40881c:	bl	4033e0 <gettext@plt>
  408820:	ldr	x1, [x20, #1088]
  408824:	bl	402fa0 <fputs@plt>
  408828:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  40882c:	add	x0, x0, #0x77c
  408830:	bl	4033e0 <gettext@plt>
  408834:	ldr	x1, [x20, #1088]
  408838:	bl	402fa0 <fputs@plt>
  40883c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  408840:	add	x0, x0, #0x7bf
  408844:	bl	4033e0 <gettext@plt>
  408848:	ldr	x1, [x20, #1088]
  40884c:	bl	402fa0 <fputs@plt>
  408850:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  408854:	add	x0, x0, #0x802
  408858:	bl	4033e0 <gettext@plt>
  40885c:	ldr	x1, [x20, #1088]
  408860:	bl	402fa0 <fputs@plt>
  408864:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  408868:	add	x0, x0, #0x83c
  40886c:	bl	4033e0 <gettext@plt>
  408870:	ldr	x1, [x20, #1088]
  408874:	bl	402fa0 <fputs@plt>
  408878:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  40887c:	add	x0, x0, #0x8b0
  408880:	bl	4033e0 <gettext@plt>
  408884:	ldr	x1, [x20, #1088]
  408888:	bl	402fa0 <fputs@plt>
  40888c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  408890:	add	x0, x0, #0x8e5
  408894:	bl	4033e0 <gettext@plt>
  408898:	ldr	x1, [x20, #1088]
  40889c:	bl	402fa0 <fputs@plt>
  4088a0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  4088a4:	add	x0, x0, #0xa1d
  4088a8:	bl	4033e0 <gettext@plt>
  4088ac:	ldr	x1, [x21, #48]
  4088b0:	bl	403880 <printf@plt>
  4088b4:	ldr	w8, [x19, #120]
  4088b8:	cbz	w8, 408980 <feof@plt+0x50e0>
  4088bc:	ldr	x1, [x20, #1088]
  4088c0:	mov	w0, #0xa                   	// #10
  4088c4:	bl	403480 <fputc@plt>
  4088c8:	ldr	x0, [x20, #1088]
  4088cc:	bl	403550 <fflush@plt>
  4088d0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4088d4:	ldrb	w8, [x8, #1764]
  4088d8:	cmp	w8, #0x1
  4088dc:	b.ne	408958 <feof@plt+0x50b8>  // b.any
  4088e0:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4088e4:	add	x0, x0, #0x85e
  4088e8:	bl	4033e0 <gettext@plt>
  4088ec:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4088f0:	ldr	x1, [x8, #48]
  4088f4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4088f8:	adrp	x3, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4088fc:	add	x2, x2, #0xf92
  408900:	add	x3, x3, #0xf8c
  408904:	bl	403880 <printf@plt>
  408908:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40890c:	add	x0, x0, #0x899
  408910:	bl	4033e0 <gettext@plt>
  408914:	mov	x1, x0
  408918:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40891c:	add	x0, x0, #0x867
  408920:	bl	403880 <printf@plt>
  408924:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  408928:	add	x0, x0, #0x89d
  40892c:	bl	4033e0 <gettext@plt>
  408930:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408934:	ldr	x1, [x20, #1088]
  408938:	bl	402fa0 <fputs@plt>
  40893c:	ldr	w8, [x19, #120]
  408940:	cbz	w8, 408404 <feof@plt+0x4b64>
  408944:	ldr	x1, [x20, #1088]
  408948:	mov	w0, #0xa                   	// #10
  40894c:	bl	403480 <fputc@plt>
  408950:	ldr	x0, [x20, #1088]
  408954:	bl	403550 <fflush@plt>
  408958:	ldr	w8, [x19, #120]
  40895c:	cbz	w8, 408978 <feof@plt+0x50d8>
  408960:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408964:	ldr	x0, [x8, #1096]
  408968:	bl	40efec <feof@plt+0xb74c>
  40896c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408970:	ldr	w8, [x8, #1160]
  408974:	cbz	w8, 408404 <feof@plt+0x4b64>
  408978:	mov	w0, #0x1                   	// #1
  40897c:	b	408408 <feof@plt+0x4b68>
  408980:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  408984:	add	x0, x0, #0x82b
  408988:	bl	4033e0 <gettext@plt>
  40898c:	bl	403880 <printf@plt>
  408990:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  408994:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  408998:	add	x0, x0, #0x859
  40899c:	add	x1, x1, #0xf70
  4089a0:	b	407dcc <feof@plt+0x452c>
  4089a4:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4089a8:	ldr	w0, [x8, #400]
  4089ac:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4089b0:	ldr	x2, [x8, #1440]
  4089b4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x62fc>
  4089b8:	add	x1, x1, #0xcb8
  4089bc:	bl	42c008 <feof@plt+0x28768>
  4089c0:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4089c4:	ldr	w0, [x8, #400]
  4089c8:	ldr	x2, [sp]
  4089cc:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x62fc>
  4089d0:	add	x1, x1, #0xcd7
  4089d4:	bl	42c008 <feof@plt+0x28768>
  4089d8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4089dc:	ldr	w0, [x8, #400]
  4089e0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4089e4:	add	x1, x1, #0x800
  4089e8:	bl	42c008 <feof@plt+0x28768>
  4089ec:	stp	x29, x30, [sp, #-96]!
  4089f0:	stp	x28, x27, [sp, #16]
  4089f4:	stp	x26, x25, [sp, #32]
  4089f8:	stp	x24, x23, [sp, #48]
  4089fc:	stp	x22, x21, [sp, #64]
  408a00:	stp	x20, x19, [sp, #80]
  408a04:	mov	x29, sp
  408a08:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408a0c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408a10:	ldr	w9, [x21, #1160]
  408a14:	ldr	w8, [x8, #1768]
  408a18:	cmp	w9, w8
  408a1c:	b.eq	408bd0 <feof@plt+0x5330>  // b.none
  408a20:	mov	x19, x0
  408a24:	bl	42bfe0 <feof@plt+0x28740>
  408a28:	tbz	w0, #0, 408a34 <feof@plt+0x5194>
  408a2c:	mov	w0, #0x1                   	// #1
  408a30:	b	408bb4 <feof@plt+0x5314>
  408a34:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408a38:	ldrsw	x8, [x21, #1160]
  408a3c:	ldrsw	x9, [x9, #2220]
  408a40:	mov	w1, #0x8                   	// #8
  408a44:	add	x0, x9, x8
  408a48:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  408a4c:	ldrsw	x8, [x21, #1160]
  408a50:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408a54:	str	x0, [x9, #1168]
  408a58:	mov	w1, #0x1                   	// #1
  408a5c:	mov	x0, x8
  408a60:	mov	w23, #0x1                   	// #1
  408a64:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  408a68:	str	x0, [x19]
  408a6c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  408a70:	ldr	x8, [x8, #3888]
  408a74:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408a78:	ldrb	w9, [x9, #1772]
  408a7c:	ldr	w10, [x21, #1160]
  408a80:	cmp	x8, #0x0
  408a84:	cset	w8, ne  // ne = any
  408a88:	orr	w8, w9, w8
  408a8c:	adrp	x11, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408a90:	and	w8, w8, #0x1
  408a94:	cmp	w10, #0x1
  408a98:	strb	w8, [x11, #1776]
  408a9c:	b.lt	408bb0 <feof@plt+0x5310>  // b.tstop
  408aa0:	adrp	x28, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408aa4:	ldr	x8, [x28, #1784]
  408aa8:	mov	x26, xzr
  408aac:	mov	x27, xzr
  408ab0:	mov	w25, wzr
  408ab4:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408ab8:	b	408ae8 <feof@plt+0x5248>
  408abc:	ldr	x8, [x19]
  408ac0:	strb	w23, [x8, x27]
  408ac4:	ldr	x8, [x28, #1784]
  408ac8:	add	x9, x8, x26
  408acc:	str	x0, [x9, #16]
  408ad0:	strh	wzr, [x9, #24]
  408ad4:	ldr	w9, [x21, #1160]
  408ad8:	add	x27, x27, #0x1
  408adc:	add	x26, x26, #0x20
  408ae0:	cmp	w9, w27
  408ae4:	b.le	408b6c <feof@plt+0x52cc>
  408ae8:	add	x24, x8, x26
  408aec:	ldr	x20, [x24]
  408af0:	mov	x0, x20
  408af4:	bl	4030b0 <strlen@plt>
  408af8:	ldr	x2, [x24, #8]
  408afc:	mov	x1, x0
  408b00:	mov	x0, x20
  408b04:	bl	40f0f0 <feof@plt+0xb850>
  408b08:	cbz	x0, 408b14 <feof@plt+0x5274>
  408b0c:	ldr	w8, [x0, #24]
  408b10:	cbz	w8, 408b48 <feof@plt+0x52a8>
  408b14:	cmp	w25, #0x1
  408b18:	b.lt	408b58 <feof@plt+0x52b8>  // b.tstop
  408b1c:	ldr	x8, [x22, #1792]
  408b20:	cmp	x0, x8
  408b24:	b.eq	408b58 <feof@plt+0x52b8>  // b.none
  408b28:	ldr	x8, [x28, #1784]
  408b2c:	add	x9, x8, x26
  408b30:	ldr	x9, [x9, #8]
  408b34:	cbz	x9, 408b58 <feof@plt+0x52b8>
  408b38:	ldrb	w9, [x9]
  408b3c:	cmp	w9, #0x2a
  408b40:	b.ne	408ac8 <feof@plt+0x5228>  // b.any
  408b44:	b	408b58 <feof@plt+0x52b8>
  408b48:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408b4c:	strb	wzr, [x8, #1776]
  408b50:	cmp	w25, #0x1
  408b54:	b.ge	408b1c <feof@plt+0x527c>  // b.tcont
  408b58:	cbz	x0, 408abc <feof@plt+0x521c>
  408b5c:	ldr	x8, [x28, #1784]
  408b60:	add	w25, w25, #0x1
  408b64:	str	x0, [x22, #1792]
  408b68:	b	408ac8 <feof@plt+0x5228>
  408b6c:	cmp	w25, #0x2
  408b70:	mov	w0, wzr
  408b74:	b.lt	408bb4 <feof@plt+0x5314>  // b.tstop
  408b78:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408b7c:	ldrb	w8, [x8, #1776]
  408b80:	cbnz	w8, 408bb4 <feof@plt+0x5314>
  408b84:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408b88:	ldrb	w8, [x8, #1712]
  408b8c:	cbz	w8, 408bb4 <feof@plt+0x5314>
  408b90:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408b94:	ldrb	w8, [x8, #1772]
  408b98:	cbz	w8, 408bb4 <feof@plt+0x5314>
  408b9c:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  408ba0:	ldr	w0, [x8, #400]
  408ba4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  408ba8:	add	x1, x1, #0x945
  408bac:	bl	42c008 <feof@plt+0x28768>
  408bb0:	mov	w0, wzr
  408bb4:	ldp	x20, x19, [sp, #80]
  408bb8:	ldp	x22, x21, [sp, #64]
  408bbc:	ldp	x24, x23, [sp, #48]
  408bc0:	ldp	x26, x25, [sp, #32]
  408bc4:	ldp	x28, x27, [sp, #16]
  408bc8:	ldp	x29, x30, [sp], #96
  408bcc:	ret
  408bd0:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  408bd4:	ldr	w0, [x8, #400]
  408bd8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  408bdc:	add	x1, x1, #0x936
  408be0:	bl	42c008 <feof@plt+0x28768>
  408be4:	stp	x29, x30, [sp, #-16]!
  408be8:	mov	x29, sp
  408bec:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408bf0:	ldr	w8, [x8, #1832]
  408bf4:	cbz	w8, 408c04 <feof@plt+0x5364>
  408bf8:	mov	w0, #0x2                   	// #2
  408bfc:	ldp	x29, x30, [sp], #16
  408c00:	ret
  408c04:	bl	42bfe0 <feof@plt+0x28740>
  408c08:	tbz	w0, #0, 408c2c <feof@plt+0x538c>
  408c0c:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  408c10:	ldr	w8, [x8, #48]
  408c14:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  408c18:	ldr	w9, [x9, #1360]
  408c1c:	cmp	w8, #0x0
  408c20:	csinc	w0, w9, wzr, ne  // ne = any
  408c24:	ldp	x29, x30, [sp], #16
  408c28:	ret
  408c2c:	mov	w0, wzr
  408c30:	ldp	x29, x30, [sp], #16
  408c34:	ret
  408c38:	sub	sp, sp, #0x110
  408c3c:	stp	x29, x30, [sp, #176]
  408c40:	stp	x28, x27, [sp, #192]
  408c44:	stp	x26, x25, [sp, #208]
  408c48:	stp	x24, x23, [sp, #224]
  408c4c:	stp	x22, x21, [sp, #240]
  408c50:	stp	x20, x19, [sp, #256]
  408c54:	add	x29, sp, #0xb0
  408c58:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408c5c:	ldr	w8, [x8, #1160]
  408c60:	str	x0, [sp, #32]
  408c64:	cmp	w8, #0x1
  408c68:	b.lt	4093b8 <feof@plt+0x5b18>  // b.tstop
  408c6c:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408c70:	adrp	x11, 4c8000 <_obstack_memory_used@@Base+0x4c2fc>
  408c74:	mov	x25, xzr
  408c78:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408c7c:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408c80:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408c84:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408c88:	adrp	x28, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  408c8c:	add	x24, x24, #0x718
  408c90:	add	x11, x11, #0x639
  408c94:	b	408cc8 <feof@plt+0x5428>
  408c98:	ldr	x8, [sp, #32]
  408c9c:	mov	w9, #0x1                   	// #1
  408ca0:	ldr	x8, [x8]
  408ca4:	strb	w9, [x8, x25]
  408ca8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408cac:	mov	x11, x19
  408cb0:	str	xzr, [x8, #1136]
  408cb4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408cb8:	ldr	w8, [x8, #1160]
  408cbc:	add	x25, x25, #0x1
  408cc0:	cmp	w8, w25
  408cc4:	b.le	4092ec <feof@plt+0x5a4c>
  408cc8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408ccc:	ldr	x8, [x8, #1784]
  408cd0:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408cd4:	str	w25, [x9, #1800]
  408cd8:	lsl	x9, x25, #5
  408cdc:	ldr	x22, [x8, x9]
  408ce0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408ce4:	mov	x19, x11
  408ce8:	mov	x26, x24
  408cec:	mov	x0, x22
  408cf0:	str	x22, [x8, #1192]
  408cf4:	bl	4030b0 <strlen@plt>
  408cf8:	str	x0, [x23, #1176]
  408cfc:	mov	x0, x22
  408d00:	bl	47b0c8 <feof@plt+0x77828>
  408d04:	mov	x24, x0
  408d08:	str	x0, [x21, #1200]
  408d0c:	bl	4030b0 <strlen@plt>
  408d10:	lsl	x8, x0, #32
  408d14:	str	w0, [x20, #1208]
  408d18:	str	w0, [x27, #1212]
  408d1c:	cbz	x8, 408d48 <feof@plt+0x54a8>
  408d20:	sxtw	x8, w0
  408d24:	mov	x11, x19
  408d28:	ldrb	w9, [x24, x8]
  408d2c:	cmp	w9, #0x2e
  408d30:	b.eq	408d58 <feof@plt+0x54b8>  // b.none
  408d34:	subs	x8, x8, #0x1
  408d38:	b.ne	408d28 <feof@plt+0x5488>  // b.any
  408d3c:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  408d40:	add	x8, x8, #0x23b
  408d44:	b	408d68 <feof@plt+0x54c8>
  408d48:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  408d4c:	add	x8, x8, #0x23b
  408d50:	mov	x11, x19
  408d54:	b	408d68 <feof@plt+0x54c8>
  408d58:	add	x8, x24, x8
  408d5c:	sub	w9, w8, w24
  408d60:	add	x8, x8, #0x1
  408d64:	str	w9, [x20, #1208]
  408d68:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408d6c:	ldr	x9, [x9, #1784]
  408d70:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408d74:	str	x8, [x10, #1216]
  408d78:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408d7c:	str	wzr, [x8, #1224]
  408d80:	add	x8, x9, x25, lsl #5
  408d84:	ldrb	w9, [x8, #24]
  408d88:	mov	x24, x26
  408d8c:	cbnz	w9, 408cb4 <feof@plt+0x5414>
  408d90:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408d94:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408d98:	ldr	x9, [x9, #1192]
  408d9c:	ldr	x10, [x10, #1168]
  408da0:	str	x9, [x10, x25, lsl #3]
  408da4:	ldr	x1, [x23, #1176]
  408da8:	ldp	x0, x2, [x8]
  408dac:	bl	40f0f0 <feof@plt+0xb850>
  408db0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408db4:	str	x0, [x8, #1792]
  408db8:	cbz	x0, 408c98 <feof@plt+0x53f8>
  408dbc:	ldr	x0, [x0, #8]
  408dc0:	ldrb	w8, [x0]
  408dc4:	cmp	w8, #0x23
  408dc8:	b.ne	408de8 <feof@plt+0x5548>  // b.any
  408dcc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408dd0:	ldr	x1, [x8, #1192]
  408dd4:	add	x2, x0, #0x1
  408dd8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  408ddc:	add	x0, x0, #0x98d
  408de0:	bl	42b940 <feof@plt+0x280a0>
  408de4:	b	4090f4 <feof@plt+0x5854>
  408de8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408dec:	ldr	w8, [x8, #1144]
  408df0:	cbz	w8, 408e20 <feof@plt+0x5580>
  408df4:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408df8:	add	x22, x22, #0x710
  408dfc:	ldr	x0, [x22]
  408e00:	bl	4031d0 <free@plt>
  408e04:	ldr	x0, [x22, #8]
  408e08:	str	xzr, [x22]
  408e0c:	bl	4031d0 <free@plt>
  408e10:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408e14:	ldr	x8, [x8, #1792]
  408e18:	str	xzr, [x22, #8]
  408e1c:	ldr	x0, [x8, #8]
  408e20:	bl	4048ac <feof@plt+0x100c>
  408e24:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408e28:	ldr	x8, [x8, #1784]
  408e2c:	mov	w22, #0x1                   	// #1
  408e30:	add	x8, x8, x25, lsl #5
  408e34:	strb	w22, [x8, #24]
  408e38:	tbnz	w0, #31, 4090ac <feof@plt+0x580c>
  408e3c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408e40:	ldr	w8, [x8, #1144]
  408e44:	mov	w22, wzr
  408e48:	cbz	w8, 4090b4 <feof@plt+0x5814>
  408e4c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408e50:	ldr	x9, [x9, #1808]
  408e54:	cbz	x9, 4090b4 <feof@plt+0x5814>
  408e58:	ldr	w9, [x28, #120]
  408e5c:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408e60:	cbz	w9, 408e78 <feof@plt+0x55d8>
  408e64:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  408e68:	mov	w0, wzr
  408e6c:	add	x1, x1, #0x9ba
  408e70:	bl	42ab7c <feof@plt+0x272dc>
  408e74:	ldr	w8, [x22, #1144]
  408e78:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408e7c:	adrp	x28, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408e80:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408e84:	add	x24, x24, #0x620
  408e88:	add	x28, x28, #0x630
  408e8c:	add	x23, x23, #0x640
  408e90:	ldr	w9, [x24, #4]
  408e94:	ldr	w10, [x28, #4]
  408e98:	ldr	x11, [x23, #8]
  408e9c:	adrp	x12, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408ea0:	ldr	x12, [x12, #1792]
  408ea4:	neg	w8, w8
  408ea8:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408eac:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408eb0:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408eb4:	str	w8, [x22, #1144]
  408eb8:	str	w9, [x27, #1560]
  408ebc:	str	w10, [x20, #1576]
  408ec0:	str	x11, [x21, #1592]
  408ec4:	ldr	x0, [x12, #8]
  408ec8:	bl	4048ac <feof@plt+0x100c>
  408ecc:	ldr	w8, [x22, #1144]
  408ed0:	ldr	w9, [x24]
  408ed4:	ldr	w10, [x28]
  408ed8:	ldr	x11, [x23]
  408edc:	mov	w12, wzr
  408ee0:	neg	w8, w8
  408ee4:	str	w9, [x27, #1560]
  408ee8:	str	w10, [x20, #1576]
  408eec:	str	w8, [x22, #1144]
  408ef0:	str	x11, [x21, #1592]
  408ef4:	tbz	w0, #31, 408f08 <feof@plt+0x5668>
  408ef8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  408efc:	add	x0, x0, #0x9df
  408f00:	bl	42b940 <feof@plt+0x280a0>
  408f04:	mov	w12, #0x1                   	// #1
  408f08:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408f0c:	ldr	x1, [x8, #1816]
  408f10:	adrp	x28, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  408f14:	str	w12, [sp, #28]
  408f18:	cbz	x1, 40940c <feof@plt+0x5b6c>
  408f1c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408f20:	ldr	x0, [x8, #1808]
  408f24:	mov	x24, x26
  408f28:	bl	479ca4 <feof@plt+0x76404>
  408f2c:	cbz	w0, 40940c <feof@plt+0x5b6c>
  408f30:	ldr	w8, [x28, #120]
  408f34:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408f38:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408f3c:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408f40:	cbz	w8, 408f54 <feof@plt+0x56b4>
  408f44:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  408f48:	mov	w0, wzr
  408f4c:	add	x1, x1, #0xa1b
  408f50:	bl	42ab7c <feof@plt+0x272dc>
  408f54:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408f58:	add	x22, x22, #0x710
  408f5c:	ldr	x1, [x22]
  408f60:	add	x2, sp, #0x28
  408f64:	mov	w0, wzr
  408f68:	bl	403650 <__xstat@plt>
  408f6c:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408f70:	tbnz	w0, #31, 409084 <feof@plt+0x57e4>
  408f74:	ldr	w8, [sp, #56]
  408f78:	and	w8, w8, #0xf000
  408f7c:	cmp	w8, #0x8, lsl #12
  408f80:	mov	x8, x22
  408f84:	b.ne	409090 <feof@plt+0x57f0>  // b.any
  408f88:	ldr	x1, [x24]
  408f8c:	ldr	x22, [sp, #88]
  408f90:	add	x2, sp, #0x28
  408f94:	mov	w0, wzr
  408f98:	bl	403650 <__xstat@plt>
  408f9c:	tbnz	w0, #31, 40908c <feof@plt+0x57ec>
  408fa0:	ldr	w8, [sp, #56]
  408fa4:	and	w8, w8, #0xf000
  408fa8:	cmp	w8, #0x8, lsl #12
  408fac:	mov	x8, x24
  408fb0:	b.ne	409090 <feof@plt+0x57f0>  // b.any
  408fb4:	ldr	x8, [sp, #88]
  408fb8:	cmp	x22, x8
  408fbc:	b.ne	409174 <feof@plt+0x58d4>  // b.any
  408fc0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  408fc4:	add	x8, x8, #0x710
  408fc8:	ldr	x0, [x8]
  408fcc:	mov	w1, wzr
  408fd0:	str	x22, [sp, #16]
  408fd4:	bl	403130 <open@plt>
  408fd8:	tbnz	w0, #31, 40918c <feof@plt+0x58ec>
  408fdc:	ldr	x1, [sp, #16]
  408fe0:	mov	w22, w0
  408fe4:	mov	w2, #0x1                   	// #1
  408fe8:	mov	w3, #0x2                   	// #2
  408fec:	mov	x0, xzr
  408ff0:	mov	w4, w22
  408ff4:	mov	x5, xzr
  408ff8:	bl	403430 <mmap@plt>
  408ffc:	str	x0, [sp, #8]
  409000:	mov	w0, w22
  409004:	bl	403630 <close@plt>
  409008:	ldr	x8, [sp, #8]
  40900c:	cmn	x8, #0x1
  409010:	b.eq	40919c <feof@plt+0x58fc>  // b.none
  409014:	ldr	x0, [x24]
  409018:	mov	w1, wzr
  40901c:	bl	403130 <open@plt>
  409020:	tbnz	w0, #31, 4091ac <feof@plt+0x590c>
  409024:	ldr	x1, [sp, #16]
  409028:	mov	w22, w0
  40902c:	mov	w2, #0x1                   	// #1
  409030:	mov	w3, #0x2                   	// #2
  409034:	mov	x0, xzr
  409038:	mov	w4, w22
  40903c:	mov	x5, xzr
  409040:	bl	403430 <mmap@plt>
  409044:	str	x0, [sp]
  409048:	mov	w0, w22
  40904c:	bl	403630 <close@plt>
  409050:	ldr	x1, [sp]
  409054:	cmn	x1, #0x1
  409058:	b.eq	4091d8 <feof@plt+0x5938>  // b.none
  40905c:	ldp	x0, x2, [sp, #8]
  409060:	bl	403840 <bcmp@plt>
  409064:	cbz	w0, 4091e8 <feof@plt+0x5948>
  409068:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40906c:	ldr	x1, [x8, #1192]
  409070:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  409074:	add	x0, x0, #0xbfb
  409078:	bl	42b940 <feof@plt+0x280a0>
  40907c:	mov	w22, #0x1                   	// #1
  409080:	b	4091ec <feof@plt+0x594c>
  409084:	mov	x8, x22
  409088:	b	409090 <feof@plt+0x57f0>
  40908c:	mov	x8, x24
  409090:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409094:	ldr	x1, [x9, #1192]
  409098:	ldr	x2, [x8]
  40909c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  4090a0:	add	x0, x0, #0xb71
  4090a4:	bl	42b940 <feof@plt+0x280a0>
  4090a8:	mov	w22, #0x1                   	// #1
  4090ac:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4090b0:	ldr	w8, [x8, #1144]
  4090b4:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4090b8:	add	x9, x9, #0x710
  4090bc:	cbz	w8, 4090f0 <feof@plt+0x5850>
  4090c0:	ldr	x0, [x9]
  4090c4:	bl	4031d0 <free@plt>
  4090c8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4090cc:	add	x8, x8, #0x710
  4090d0:	ldr	x0, [x8, #8]
  4090d4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4090d8:	add	x8, x8, #0x710
  4090dc:	str	xzr, [x8]
  4090e0:	bl	4031d0 <free@plt>
  4090e4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4090e8:	add	x8, x8, #0x710
  4090ec:	str	xzr, [x8, #8]
  4090f0:	cbz	w22, 408ca8 <feof@plt+0x5408>
  4090f4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4090f8:	ldr	x22, [x8, #1136]
  4090fc:	cbnz	x22, 409124 <feof@plt+0x5884>
  409100:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409104:	ldr	x8, [x8, #632]
  409108:	mov	x24, x26
  40910c:	ldr	w9, [x8, #24]
  409110:	add	w9, w9, #0x1
  409114:	str	w9, [x8, #24]
  409118:	b	408ca8 <feof@plt+0x5408>
  40911c:	ldr	x22, [x22, #8]
  409120:	cbz	x22, 409100 <feof@plt+0x5860>
  409124:	ldr	x24, [x22]
  409128:	add	x2, sp, #0x28
  40912c:	mov	w0, wzr
  409130:	mov	x1, x24
  409134:	bl	403650 <__xstat@plt>
  409138:	tbnz	w0, #31, 40911c <feof@plt+0x587c>
  40913c:	ldr	w8, [sp, #56]
  409140:	and	w8, w8, #0xf000
  409144:	cmp	w8, #0x8, lsl #12
  409148:	b.ne	40911c <feof@plt+0x587c>  // b.any
  40914c:	mov	x0, x24
  409150:	bl	403380 <unlink@plt>
  409154:	tbz	w0, #31, 40911c <feof@plt+0x587c>
  409158:	ldr	w8, [x28, #120]
  40915c:	cbz	w8, 40911c <feof@plt+0x587c>
  409160:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  409164:	add	x0, x0, #0x597
  409168:	mov	x1, x24
  40916c:	bl	42b940 <feof@plt+0x280a0>
  409170:	b	40911c <feof@plt+0x587c>
  409174:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409178:	ldr	x1, [x8, #1192]
  40917c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  409180:	add	x0, x0, #0xba9
  409184:	bl	42b940 <feof@plt+0x280a0>
  409188:	b	4090a8 <feof@plt+0x5808>
  40918c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409190:	str	xzr, [sp, #8]
  409194:	add	x8, x8, #0x710
  409198:	b	4091b0 <feof@plt+0x5910>
  40919c:	mov	x8, xzr
  4091a0:	mov	x0, #0xffffffffffffffff    	// #-1
  4091a4:	mov	w22, #0xffffffff            	// #-1
  4091a8:	b	4091f4 <feof@plt+0x5954>
  4091ac:	mov	x8, x24
  4091b0:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4091b4:	ldr	x1, [x9, #1192]
  4091b8:	ldr	x2, [x8]
  4091bc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  4091c0:	add	x0, x0, #0xbd2
  4091c4:	bl	42b940 <feof@plt+0x280a0>
  4091c8:	ldr	x0, [sp, #8]
  4091cc:	mov	x8, xzr
  4091d0:	mov	w22, #0x1                   	// #1
  4091d4:	b	4091f0 <feof@plt+0x5950>
  4091d8:	ldr	x0, [sp, #8]
  4091dc:	mov	w22, #0xffffffff            	// #-1
  4091e0:	mov	x8, #0xffffffffffffffff    	// #-1
  4091e4:	b	4091f0 <feof@plt+0x5950>
  4091e8:	mov	w22, wzr
  4091ec:	ldp	x8, x0, [sp]
  4091f0:	cbz	x0, 40920c <feof@plt+0x596c>
  4091f4:	ldr	x1, [sp, #16]
  4091f8:	str	w22, [sp, #8]
  4091fc:	mov	x22, x8
  409200:	bl	4034b0 <munmap@plt>
  409204:	mov	x8, x22
  409208:	ldr	w22, [sp, #8]
  40920c:	cbz	x8, 40921c <feof@plt+0x597c>
  409210:	ldr	x1, [sp, #16]
  409214:	mov	x0, x8
  409218:	bl	4034b0 <munmap@plt>
  40921c:	tbz	w22, #31, 4092dc <feof@plt+0x5a3c>
  409220:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409224:	add	x22, x22, #0x710
  409228:	ldr	x0, [x22]
  40922c:	mov	x1, x19
  409230:	mov	x22, x19
  409234:	bl	403620 <fopen@plt>
  409238:	str	x0, [sp, #16]
  40923c:	cbz	x0, 409280 <feof@plt+0x59e0>
  409240:	ldr	x0, [x24]
  409244:	mov	x1, x22
  409248:	bl	403620 <fopen@plt>
  40924c:	str	x0, [sp, #8]
  409250:	cbz	x0, 40928c <feof@plt+0x59ec>
  409254:	ldr	x0, [sp, #16]
  409258:	bl	403060 <fgetc_unlocked@plt>
  40925c:	mov	w22, w0
  409260:	ldr	x0, [sp, #8]
  409264:	bl	403060 <fgetc_unlocked@plt>
  409268:	cmp	w22, w0
  40926c:	b.ne	4092b0 <feof@plt+0x5a10>  // b.any
  409270:	cmn	w22, #0x1
  409274:	b.ne	409254 <feof@plt+0x59b4>  // b.any
  409278:	mov	w22, wzr
  40927c:	b	4092c8 <feof@plt+0x5a28>
  409280:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409284:	add	x8, x8, #0x710
  409288:	b	409290 <feof@plt+0x59f0>
  40928c:	mov	x8, x24
  409290:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409294:	ldr	x1, [x9, #1192]
  409298:	ldr	x2, [x8]
  40929c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  4092a0:	add	x0, x0, #0xbd2
  4092a4:	bl	42b940 <feof@plt+0x280a0>
  4092a8:	mov	w22, #0x1                   	// #1
  4092ac:	b	4092d0 <feof@plt+0x5a30>
  4092b0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4092b4:	ldr	x1, [x8, #1192]
  4092b8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  4092bc:	add	x0, x0, #0xbfb
  4092c0:	bl	42b940 <feof@plt+0x280a0>
  4092c4:	mov	w22, #0x1                   	// #1
  4092c8:	ldr	x0, [sp, #8]
  4092cc:	bl	403150 <fclose@plt>
  4092d0:	ldr	x0, [sp, #16]
  4092d4:	cbz	x0, 4092dc <feof@plt+0x5a3c>
  4092d8:	bl	403150 <fclose@plt>
  4092dc:	ldr	w8, [sp, #28]
  4092e0:	cmp	w22, #0x0
  4092e4:	csinc	w22, w8, wzr, eq  // eq = none
  4092e8:	b	4090ac <feof@plt+0x580c>
  4092ec:	cmp	w8, #0x1
  4092f0:	b.lt	4093b8 <feof@plt+0x5b18>  // b.tstop
  4092f4:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4092f8:	ldr	x9, [x9, #1784]
  4092fc:	add	x9, x9, #0x10
  409300:	b	409310 <feof@plt+0x5a70>
  409304:	subs	x8, x8, #0x1
  409308:	add	x9, x9, #0x20
  40930c:	b.eq	4093b8 <feof@plt+0x5b18>  // b.none
  409310:	ldr	x10, [x9]
  409314:	cbnz	x10, 40932c <feof@plt+0x5a8c>
  409318:	ldur	x10, [x9, #-8]
  40931c:	cbz	x10, 409304 <feof@plt+0x5a64>
  409320:	ldrb	w10, [x10]
  409324:	cmp	w10, #0x2a
  409328:	b.eq	409304 <feof@plt+0x5a64>  // b.none
  40932c:	ldur	x19, [x9, #-16]
  409330:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409334:	mov	x0, x19
  409338:	str	x19, [x8, #1192]
  40933c:	bl	4030b0 <strlen@plt>
  409340:	str	x0, [x23, #1176]
  409344:	mov	x0, x19
  409348:	bl	47b0c8 <feof@plt+0x77828>
  40934c:	mov	x19, x0
  409350:	str	x0, [x21, #1200]
  409354:	bl	4030b0 <strlen@plt>
  409358:	lsl	x8, x0, #32
  40935c:	str	w0, [x20, #1208]
  409360:	str	w0, [x27, #1212]
  409364:	cbz	x8, 40938c <feof@plt+0x5aec>
  409368:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40936c:	sxtw	x9, w0
  409370:	add	x8, x8, #0x23b
  409374:	ldrb	w10, [x19, x9]
  409378:	cmp	w10, #0x2e
  40937c:	b.eq	409398 <feof@plt+0x5af8>  // b.none
  409380:	subs	x9, x9, #0x1
  409384:	b.ne	409374 <feof@plt+0x5ad4>  // b.any
  409388:	b	4093a8 <feof@plt+0x5b08>
  40938c:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  409390:	add	x8, x8, #0x23b
  409394:	b	4093a8 <feof@plt+0x5b08>
  409398:	add	x8, x19, x9
  40939c:	sub	w9, w8, w19
  4093a0:	add	x8, x8, #0x1
  4093a4:	str	w9, [x20, #1208]
  4093a8:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4093ac:	str	x8, [x9, #1216]
  4093b0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4093b4:	str	wzr, [x8, #1224]
  4093b8:	bl	42bfe0 <feof@plt+0x28740>
  4093bc:	tbnz	w0, #0, 4093ec <feof@plt+0x5b4c>
  4093c0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4093c4:	ldr	w8, [x8, #1160]
  4093c8:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4093cc:	str	w8, [x9, #1800]
  4093d0:	bl	416358 <feof@plt+0x12ab8>
  4093d4:	cbz	w0, 4093ec <feof@plt+0x5b4c>
  4093d8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4093dc:	ldr	x8, [x8, #632]
  4093e0:	ldr	w9, [x8, #24]
  4093e4:	add	w9, w9, #0x1
  4093e8:	str	w9, [x8, #24]
  4093ec:	ldp	x20, x19, [sp, #256]
  4093f0:	ldp	x22, x21, [sp, #240]
  4093f4:	ldp	x24, x23, [sp, #224]
  4093f8:	ldp	x26, x25, [sp, #208]
  4093fc:	ldp	x28, x27, [sp, #192]
  409400:	ldp	x29, x30, [sp, #176]
  409404:	add	sp, sp, #0x110
  409408:	ret
  40940c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  409410:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x22fc>
  409414:	add	x0, x0, #0x5ec
  409418:	add	x2, x2, #0xa08
  40941c:	mov	w1, #0x1ff2                	// #8178
  409420:	bl	429434 <feof@plt+0x25b94>
  409424:	sub	sp, sp, #0x80
  409428:	stp	x29, x30, [sp, #32]
  40942c:	stp	x28, x27, [sp, #48]
  409430:	stp	x26, x25, [sp, #64]
  409434:	stp	x24, x23, [sp, #80]
  409438:	stp	x22, x21, [sp, #96]
  40943c:	stp	x20, x19, [sp, #112]
  409440:	add	x29, sp, #0x20
  409444:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409448:	ldr	w8, [x23, #1160]
  40944c:	mov	x19, x0
  409450:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409454:	cmp	w8, #0x1
  409458:	b.lt	4097a4 <feof@plt+0x5f04>  // b.tstop
  40945c:	ldr	x9, [x19]
  409460:	ldr	x10, [x24, #1168]
  409464:	mov	x20, x1
  409468:	cmp	w8, #0x1
  40946c:	b.ne	40947c <feof@plt+0x5bdc>  // b.any
  409470:	mov	x11, xzr
  409474:	mov	w12, wzr
  409478:	b	40962c <feof@plt+0x5d8c>
  40947c:	and	x11, x8, #0xfffffffe
  409480:	mov	w12, wzr
  409484:	mov	w13, wzr
  409488:	add	x14, x9, #0x1
  40948c:	add	x15, x10, #0x8
  409490:	mov	x16, x11
  409494:	b	4094d8 <feof@plt+0x5c38>
  409498:	cmp	w1, #0x0
  40949c:	cset	w1, ne  // ne = any
  4094a0:	cmp	w17, #0x0
  4094a4:	cset	w17, ne  // ne = any
  4094a8:	cmp	x18, #0x0
  4094ac:	cset	w18, ne  // ne = any
  4094b0:	cmp	x0, #0x0
  4094b4:	cset	w0, ne  // ne = any
  4094b8:	orr	w17, w18, w17
  4094bc:	add	w12, w12, w17
  4094c0:	orr	w17, w0, w1
  4094c4:	add	x14, x14, #0x2
  4094c8:	subs	x16, x16, #0x2
  4094cc:	add	w13, w13, w17
  4094d0:	add	x15, x15, #0x10
  4094d4:	b.eq	4094fc <feof@plt+0x5c5c>  // b.none
  4094d8:	ldurb	w17, [x14, #-1]
  4094dc:	ldrb	w1, [x14]
  4094e0:	cbz	w17, 4094ec <feof@plt+0x5c4c>
  4094e4:	cbnz	w1, 409498 <feof@plt+0x5bf8>
  4094e8:	b	4094f4 <feof@plt+0x5c54>
  4094ec:	ldur	x18, [x15, #-8]
  4094f0:	cbnz	w1, 409498 <feof@plt+0x5bf8>
  4094f4:	ldr	x0, [x15]
  4094f8:	b	409498 <feof@plt+0x5bf8>
  4094fc:	cmp	x11, x8
  409500:	add	w12, w13, w12
  409504:	b.ne	40962c <feof@plt+0x5d8c>  // b.any
  409508:	cmp	w12, #0x1
  40950c:	b.lt	4097a4 <feof@plt+0x5f04>  // b.tstop
  409510:	bl	42bfe0 <feof@plt+0x28740>
  409514:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409518:	ldr	w8, [x27, #1824]
  40951c:	cmp	w8, #0x1
  409520:	b.gt	4097a4 <feof@plt+0x5f04>
  409524:	tbnz	w0, #0, 4097a4 <feof@plt+0x5f04>
  409528:	adrp	x25, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40952c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409530:	ldrb	w8, [x8, #1712]
  409534:	ldr	w26, [x25, #1828]
  409538:	tbnz	w8, #0, 4096e8 <feof@plt+0x5e48>
  40953c:	adrp	x22, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  409540:	ldr	x0, [x22, #1328]
  409544:	adrp	x21, 47e000 <_obstack_memory_used@@Base+0x22fc>
  409548:	add	x21, x21, #0xa4d
  40954c:	mov	x1, x21
  409550:	bl	403640 <strcmp@plt>
  409554:	cbnz	w0, 4095a8 <feof@plt+0x5d08>
  409558:	adrp	x9, 47d000 <_obstack_memory_used@@Base+0x12fc>
  40955c:	ldr	d0, [x9, #1648]
  409560:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  409564:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  409568:	adrp	x3, 412000 <feof@plt+0xe760>
  40956c:	add	x8, x8, #0x23b
  409570:	mov	w9, #0x1                   	// #1
  409574:	add	x0, x0, #0x4e0
  409578:	add	x3, x3, #0xab8
  40957c:	mov	x4, sp
  409580:	mov	w2, #0x8                   	// #8
  409584:	mov	w1, wzr
  409588:	stp	x21, x8, [sp]
  40958c:	str	d0, [sp, #16]
  409590:	str	w9, [sp, #24]
  409594:	bl	4126ac <feof@plt+0xee0c>
  409598:	cbnz	x0, 4095a8 <feof@plt+0x5d08>
  40959c:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4095a0:	add	x8, x8, #0x5d2
  4095a4:	str	x8, [x22, #1328]
  4095a8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4095ac:	add	x0, x0, #0xa37
  4095b0:	add	x1, x0, #0x15
  4095b4:	mov	w2, wzr
  4095b8:	bl	40f2e4 <feof@plt+0xba44>
  4095bc:	tbnz	w0, #0, 4096e0 <feof@plt+0x5e40>
  4095c0:	adrp	x10, 47d000 <_obstack_memory_used@@Base+0x12fc>
  4095c4:	ldr	d0, [x10, #1656]
  4095c8:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4095cc:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4095d0:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4095d4:	adrp	x3, 412000 <feof@plt+0xe760>
  4095d8:	add	x8, x8, #0xa56
  4095dc:	add	x9, x9, #0x23b
  4095e0:	mov	w10, #0x4                   	// #4
  4095e4:	add	x0, x0, #0x4e0
  4095e8:	add	x3, x3, #0xab8
  4095ec:	mov	x4, sp
  4095f0:	mov	w2, #0x10                  	// #16
  4095f4:	mov	w1, wzr
  4095f8:	stp	x8, x9, [sp]
  4095fc:	str	d0, [sp, #16]
  409600:	str	w10, [sp, #24]
  409604:	bl	4126ac <feof@plt+0xee0c>
  409608:	cbz	x0, 409840 <feof@plt+0x5fa0>
  40960c:	mov	x21, x0
  409610:	mov	x8, xzr
  409614:	mov	w9, wzr
  409618:	b	409648 <feof@plt+0x5da8>
  40961c:	add	w12, w12, #0x1
  409620:	add	x11, x11, #0x1
  409624:	cmp	x11, x8
  409628:	b.cs	409508 <feof@plt+0x5c68>  // b.hs, b.nlast
  40962c:	ldrb	w13, [x9, x11]
  409630:	cbnz	w13, 40961c <feof@plt+0x5d7c>
  409634:	ldr	x13, [x10, x11, lsl #3]
  409638:	cbnz	x13, 40961c <feof@plt+0x5d7c>
  40963c:	b	409620 <feof@plt+0x5d80>
  409640:	add	w9, w9, #0x1
  409644:	add	x8, x8, #0x1
  409648:	ldrb	w10, [x21, x8]
  40964c:	cmp	w10, #0x9
  409650:	b.eq	409640 <feof@plt+0x5da0>  // b.none
  409654:	cmp	w10, #0x20
  409658:	b.eq	409640 <feof@plt+0x5da0>  // b.none
  40965c:	cbnz	w10, 409644 <feof@plt+0x5da4>
  409660:	cbz	w9, 4096d4 <feof@plt+0x5e34>
  409664:	add	x28, x8, #0x1
  409668:	add	w8, w9, w8
  40966c:	add	w8, w8, #0x1
  409670:	sxtw	x0, w8
  409674:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  409678:	mov	x22, x0
  40967c:	mov	x8, xzr
  409680:	mov	w9, wzr
  409684:	and	x10, x28, #0xffffffff
  409688:	mov	w11, #0x5c                  	// #92
  40968c:	b	4096b0 <feof@plt+0x5e10>
  409690:	add	w13, w9, #0x1
  409694:	strb	w11, [x22, w9, sxtw]
  409698:	mov	w9, w13
  40969c:	add	x8, x8, #0x1
  4096a0:	strb	w12, [x22, w9, sxtw]
  4096a4:	cmp	x10, x8
  4096a8:	add	w9, w9, #0x1
  4096ac:	b.eq	4096c8 <feof@plt+0x5e28>  // b.none
  4096b0:	ldrb	w12, [x21, x8]
  4096b4:	cmp	w12, #0x20
  4096b8:	b.eq	409690 <feof@plt+0x5df0>  // b.none
  4096bc:	cmp	w12, #0x9
  4096c0:	b.eq	409690 <feof@plt+0x5df0>  // b.none
  4096c4:	b	40969c <feof@plt+0x5dfc>
  4096c8:	mov	x0, x21
  4096cc:	bl	4031d0 <free@plt>
  4096d0:	b	4096d8 <feof@plt+0x5e38>
  4096d4:	mov	x22, x21
  4096d8:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4096dc:	str	x22, [x8, #1336]
  4096e0:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4096e4:	str	x20, [x8, #1344]
  4096e8:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4096ec:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4096f0:	add	x0, x0, #0x4e0
  4096f4:	add	x1, x1, #0xa91
  4096f8:	mov	w2, #0x1                   	// #1
  4096fc:	mov	w3, wzr
  409700:	bl	40ee88 <feof@plt+0xb5e8>
  409704:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409708:	add	x20, x20, #0x4d0
  40970c:	mov	x1, x0
  409710:	mov	x0, x20
  409714:	bl	404520 <feof@plt+0xc80>
  409718:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40971c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  409720:	add	x0, x0, #0x4b8
  409724:	add	x1, x1, #0xa9f
  409728:	mov	w2, #0x1                   	// #1
  40972c:	mov	w3, #0x1                   	// #1
  409730:	bl	40ee88 <feof@plt+0xb5e8>
  409734:	mov	x1, x0
  409738:	mov	x0, x20
  40973c:	bl	404520 <feof@plt+0xc80>
  409740:	ldr	w8, [x27, #1824]
  409744:	cmp	w8, #0x1
  409748:	b.ne	409778 <feof@plt+0x5ed8>  // b.any
  40974c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  409750:	add	x0, x0, #0xaac
  409754:	bl	4033e0 <gettext@plt>
  409758:	bl	403880 <printf@plt>
  40975c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  409760:	add	x0, x0, #0xacd
  409764:	bl	4033e0 <gettext@plt>
  409768:	bl	403880 <printf@plt>
  40976c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409770:	ldr	x0, [x8, #1088]
  409774:	bl	403550 <fflush@plt>
  409778:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40977c:	ldr	x0, [x8, #1352]
  409780:	bl	4048ac <feof@plt+0x100c>
  409784:	tbz	w0, #31, 409798 <feof@plt+0x5ef8>
  409788:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40978c:	ldr	x8, [x8, #632]
  409790:	mov	w9, #0x1                   	// #1
  409794:	str	w9, [x8, #24]
  409798:	ldr	w8, [x25, #1828]
  40979c:	cmp	w26, w8
  4097a0:	b.ne	409820 <feof@plt+0x5f80>  // b.any
  4097a4:	bl	42bfe0 <feof@plt+0x28740>
  4097a8:	ldr	w8, [x23, #1160]
  4097ac:	cmp	w8, #0x1
  4097b0:	b.lt	409820 <feof@plt+0x5f80>  // b.tstop
  4097b4:	tbnz	w0, #0, 409820 <feof@plt+0x5f80>
  4097b8:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4097bc:	mov	x21, xzr
  4097c0:	mov	w22, #0x8                   	// #8
  4097c4:	adrp	x25, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4097c8:	add	x20, x20, #0xb00
  4097cc:	b	4097f8 <feof@plt+0x5f58>
  4097d0:	ldr	x8, [x24, #1168]
  4097d4:	mov	w0, wzr
  4097d8:	mov	x1, x20
  4097dc:	ldr	x2, [x8, x21, lsl #3]
  4097e0:	bl	42aecc <feof@plt+0x2762c>
  4097e4:	ldr	w8, [x23, #1160]
  4097e8:	add	x21, x21, #0x1
  4097ec:	cmp	w8, w21
  4097f0:	add	x22, x22, #0x20
  4097f4:	b.le	409820 <feof@plt+0x5f80>
  4097f8:	ldr	x9, [x19]
  4097fc:	ldrb	w9, [x9, x21]
  409800:	cbz	w9, 4097e8 <feof@plt+0x5f48>
  409804:	ldr	x9, [x25, #1784]
  409808:	ldr	x9, [x9, x22]
  40980c:	cbz	x9, 4097d0 <feof@plt+0x5f30>
  409810:	ldrb	w9, [x9]
  409814:	cmp	w9, #0x2a
  409818:	b.ne	4097d0 <feof@plt+0x5f30>  // b.any
  40981c:	b	4097e8 <feof@plt+0x5f48>
  409820:	ldp	x20, x19, [sp, #112]
  409824:	ldp	x22, x21, [sp, #96]
  409828:	ldp	x24, x23, [sp, #80]
  40982c:	ldp	x26, x25, [sp, #64]
  409830:	ldp	x28, x27, [sp, #48]
  409834:	ldp	x29, x30, [sp, #32]
  409838:	add	sp, sp, #0x80
  40983c:	ret
  409840:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  409844:	ldr	w0, [x8, #400]
  409848:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40984c:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x22fc>
  409850:	add	x1, x1, #0xa67
  409854:	add	x2, x2, #0xa56
  409858:	bl	42c008 <feof@plt+0x28768>
  40985c:	sub	sp, sp, #0xc0
  409860:	stp	x29, x30, [sp, #128]
  409864:	str	x23, [sp, #144]
  409868:	stp	x22, x21, [sp, #160]
  40986c:	stp	x20, x19, [sp, #176]
  409870:	add	x29, sp, #0x80
  409874:	bl	42bfe0 <feof@plt+0x28740>
  409878:	tbz	w0, #0, 4098ec <feof@plt+0x604c>
  40987c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409880:	ldr	x21, [x8, #1136]
  409884:	cbz	x21, 4098ec <feof@plt+0x604c>
  409888:	adrp	x19, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40988c:	adrp	x22, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  409890:	add	x19, x19, #0x597
  409894:	b	4098a0 <feof@plt+0x6000>
  409898:	ldr	x21, [x21, #8]
  40989c:	cbz	x21, 4098ec <feof@plt+0x604c>
  4098a0:	ldr	x20, [x21]
  4098a4:	mov	x2, sp
  4098a8:	mov	w0, wzr
  4098ac:	mov	x1, x20
  4098b0:	bl	403650 <__xstat@plt>
  4098b4:	tbnz	w0, #31, 409898 <feof@plt+0x5ff8>
  4098b8:	ldr	w8, [sp, #16]
  4098bc:	and	w8, w8, #0xf000
  4098c0:	cmp	w8, #0x8, lsl #12
  4098c4:	b.ne	409898 <feof@plt+0x5ff8>  // b.any
  4098c8:	mov	x0, x20
  4098cc:	bl	403380 <unlink@plt>
  4098d0:	tbz	w0, #31, 409898 <feof@plt+0x5ff8>
  4098d4:	ldr	w8, [x22, #120]
  4098d8:	cbz	w8, 409898 <feof@plt+0x5ff8>
  4098dc:	mov	x0, x19
  4098e0:	mov	x1, x20
  4098e4:	bl	42b940 <feof@plt+0x280a0>
  4098e8:	b	409898 <feof@plt+0x5ff8>
  4098ec:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4098f0:	ldr	x22, [x21, #1128]
  4098f4:	cbz	x22, 40995c <feof@plt+0x60bc>
  4098f8:	adrp	x19, 47f000 <_obstack_memory_used@@Base+0x32fc>
  4098fc:	adrp	x23, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  409900:	add	x19, x19, #0x597
  409904:	b	409910 <feof@plt+0x6070>
  409908:	ldr	x22, [x22, #8]
  40990c:	cbz	x22, 40995c <feof@plt+0x60bc>
  409910:	ldr	x20, [x22]
  409914:	mov	x2, sp
  409918:	mov	w0, wzr
  40991c:	mov	x1, x20
  409920:	bl	403650 <__xstat@plt>
  409924:	tbnz	w0, #31, 409908 <feof@plt+0x6068>
  409928:	ldr	w8, [sp, #16]
  40992c:	and	w8, w8, #0xf000
  409930:	cmp	w8, #0x8, lsl #12
  409934:	b.ne	409908 <feof@plt+0x6068>  // b.any
  409938:	mov	x0, x20
  40993c:	bl	403380 <unlink@plt>
  409940:	tbz	w0, #31, 409908 <feof@plt+0x6068>
  409944:	ldr	w8, [x23, #120]
  409948:	cbz	w8, 409908 <feof@plt+0x6068>
  40994c:	mov	x0, x19
  409950:	mov	x1, x20
  409954:	bl	42b940 <feof@plt+0x280a0>
  409958:	b	409908 <feof@plt+0x6068>
  40995c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409960:	ldrb	w8, [x8, #1760]
  409964:	str	xzr, [x21, #1128]
  409968:	cmp	w8, #0x1
  40996c:	b.ne	409988 <feof@plt+0x60e8>  // b.any
  409970:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x72fc>
  409974:	add	x0, x0, #0x72b
  409978:	bl	403010 <puts@plt>
  40997c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  409980:	add	x0, x0, #0xf70
  409984:	bl	403010 <puts@plt>
  409988:	ldp	x20, x19, [sp, #176]
  40998c:	ldp	x22, x21, [sp, #160]
  409990:	ldr	x23, [sp, #144]
  409994:	ldp	x29, x30, [sp, #128]
  409998:	add	sp, sp, #0xc0
  40999c:	ret
  4099a0:	sub	sp, sp, #0xc0
  4099a4:	stp	x29, x30, [sp, #128]
  4099a8:	str	x23, [sp, #144]
  4099ac:	stp	x22, x21, [sp, #160]
  4099b0:	stp	x20, x19, [sp, #176]
  4099b4:	add	x29, sp, #0x80
  4099b8:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4099bc:	ldr	x22, [x21, #1128]
  4099c0:	cbz	x22, 409a28 <feof@plt+0x6188>
  4099c4:	adrp	x19, 47f000 <_obstack_memory_used@@Base+0x32fc>
  4099c8:	adrp	x23, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  4099cc:	add	x19, x19, #0x597
  4099d0:	b	4099dc <feof@plt+0x613c>
  4099d4:	ldr	x22, [x22, #8]
  4099d8:	cbz	x22, 409a28 <feof@plt+0x6188>
  4099dc:	ldr	x20, [x22]
  4099e0:	mov	x2, sp
  4099e4:	mov	w0, wzr
  4099e8:	mov	x1, x20
  4099ec:	bl	403650 <__xstat@plt>
  4099f0:	tbnz	w0, #31, 4099d4 <feof@plt+0x6134>
  4099f4:	ldr	w8, [sp, #16]
  4099f8:	and	w8, w8, #0xf000
  4099fc:	cmp	w8, #0x8, lsl #12
  409a00:	b.ne	4099d4 <feof@plt+0x6134>  // b.any
  409a04:	mov	x0, x20
  409a08:	bl	403380 <unlink@plt>
  409a0c:	tbz	w0, #31, 4099d4 <feof@plt+0x6134>
  409a10:	ldr	w8, [x23, #120]
  409a14:	cbz	w8, 4099d4 <feof@plt+0x6134>
  409a18:	mov	x0, x19
  409a1c:	mov	x1, x20
  409a20:	bl	42b940 <feof@plt+0x280a0>
  409a24:	b	4099d4 <feof@plt+0x6134>
  409a28:	str	xzr, [x21, #1128]
  409a2c:	ldp	x20, x19, [sp, #176]
  409a30:	ldp	x22, x21, [sp, #160]
  409a34:	ldr	x23, [sp, #144]
  409a38:	ldp	x29, x30, [sp, #128]
  409a3c:	add	sp, sp, #0xc0
  409a40:	ret
  409a44:	sub	sp, sp, #0xc0
  409a48:	stp	x29, x30, [sp, #128]
  409a4c:	stp	x24, x23, [sp, #144]
  409a50:	stp	x22, x21, [sp, #160]
  409a54:	stp	x20, x19, [sp, #176]
  409a58:	add	x29, sp, #0x80
  409a5c:	mov	x1, xzr
  409a60:	mov	w19, w0
  409a64:	bl	403710 <signal@plt>
  409a68:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409a6c:	ldr	x23, [x8, #1136]
  409a70:	adrp	x22, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  409a74:	cbz	x23, 409ad8 <feof@plt+0x6238>
  409a78:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x32fc>
  409a7c:	add	x20, x20, #0x597
  409a80:	b	409a8c <feof@plt+0x61ec>
  409a84:	ldr	x23, [x23, #8]
  409a88:	cbz	x23, 409ad8 <feof@plt+0x6238>
  409a8c:	ldr	x21, [x23]
  409a90:	mov	x2, sp
  409a94:	mov	w0, wzr
  409a98:	mov	x1, x21
  409a9c:	bl	403650 <__xstat@plt>
  409aa0:	tbnz	w0, #31, 409a84 <feof@plt+0x61e4>
  409aa4:	ldr	w8, [sp, #16]
  409aa8:	and	w8, w8, #0xf000
  409aac:	cmp	w8, #0x8, lsl #12
  409ab0:	b.ne	409a84 <feof@plt+0x61e4>  // b.any
  409ab4:	mov	x0, x21
  409ab8:	bl	403380 <unlink@plt>
  409abc:	tbz	w0, #31, 409a84 <feof@plt+0x61e4>
  409ac0:	ldr	w8, [x22, #120]
  409ac4:	cbz	w8, 409a84 <feof@plt+0x61e4>
  409ac8:	mov	x0, x20
  409acc:	mov	x1, x21
  409ad0:	bl	42b940 <feof@plt+0x280a0>
  409ad4:	b	409a84 <feof@plt+0x61e4>
  409ad8:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409adc:	ldr	x24, [x23, #1128]
  409ae0:	cbz	x24, 409b44 <feof@plt+0x62a4>
  409ae4:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x32fc>
  409ae8:	add	x20, x20, #0x597
  409aec:	b	409af8 <feof@plt+0x6258>
  409af0:	ldr	x24, [x24, #8]
  409af4:	cbz	x24, 409b44 <feof@plt+0x62a4>
  409af8:	ldr	x21, [x24]
  409afc:	mov	x2, sp
  409b00:	mov	w0, wzr
  409b04:	mov	x1, x21
  409b08:	bl	403650 <__xstat@plt>
  409b0c:	tbnz	w0, #31, 409af0 <feof@plt+0x6250>
  409b10:	ldr	w8, [sp, #16]
  409b14:	and	w8, w8, #0xf000
  409b18:	cmp	w8, #0x8, lsl #12
  409b1c:	b.ne	409af0 <feof@plt+0x6250>  // b.any
  409b20:	mov	x0, x21
  409b24:	bl	403380 <unlink@plt>
  409b28:	tbz	w0, #31, 409af0 <feof@plt+0x6250>
  409b2c:	ldr	w8, [x22, #120]
  409b30:	cbz	w8, 409af0 <feof@plt+0x6250>
  409b34:	mov	x0, x20
  409b38:	mov	x1, x21
  409b3c:	bl	42b940 <feof@plt+0x280a0>
  409b40:	b	409af0 <feof@plt+0x6250>
  409b44:	str	xzr, [x23, #1128]
  409b48:	bl	403400 <getpid@plt>
  409b4c:	mov	w1, w19
  409b50:	bl	403570 <kill@plt>
  409b54:	ldp	x20, x19, [sp, #176]
  409b58:	ldp	x22, x21, [sp, #160]
  409b5c:	ldp	x24, x23, [sp, #144]
  409b60:	ldp	x29, x30, [sp, #128]
  409b64:	add	sp, sp, #0xc0
  409b68:	ret
  409b6c:	str	d8, [sp, #-112]!
  409b70:	stp	x29, x30, [sp, #16]
  409b74:	stp	x28, x27, [sp, #32]
  409b78:	stp	x26, x25, [sp, #48]
  409b7c:	stp	x24, x23, [sp, #64]
  409b80:	stp	x22, x21, [sp, #80]
  409b84:	stp	x20, x19, [sp, #96]
  409b88:	mov	x29, sp
  409b8c:	sub	sp, sp, #0x60
  409b90:	mov	w19, w0
  409b94:	str	w0, [x29, #12]
  409b98:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  409b9c:	add	x0, x0, #0x7b2
  409ba0:	stur	x1, [x29, #-8]
  409ba4:	bl	403700 <getenv@plt>
  409ba8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409bac:	ldrb	w8, [x8, #1233]
  409bb0:	mov	x20, x0
  409bb4:	cbnz	w8, 40a0f8 <feof@plt+0x6858>
  409bb8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  409bbc:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409bc0:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409bc4:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409bc8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409bcc:	add	x0, x0, #0xf8c
  409bd0:	str	x20, [x23, #1536]
  409bd4:	str	wzr, [x10, #1560]
  409bd8:	str	wzr, [x9, #1160]
  409bdc:	str	wzr, [x8, #1768]
  409be0:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  409be4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409be8:	str	x0, [x8, #2048]
  409bec:	ldrb	w8, [x0]
  409bf0:	cbz	w8, 409c08 <feof@plt+0x6368>
  409bf4:	cmp	w8, #0x20
  409bf8:	b.eq	409c14 <feof@plt+0x6374>  // b.none
  409bfc:	add	x0, x0, #0x1
  409c00:	ldrb	w8, [x0]
  409c04:	cbnz	w8, 409bf4 <feof@plt+0x6354>
  409c08:	cmp	w19, #0x2
  409c0c:	b.cc	409c58 <feof@plt+0x63b8>  // b.lo, b.ul, b.last
  409c10:	b	409c24 <feof@plt+0x6384>
  409c14:	ldr	w19, [x29, #12]
  409c18:	strb	wzr, [x0]
  409c1c:	cmp	w19, #0x2
  409c20:	b.cc	409c58 <feof@plt+0x63b8>  // b.lo, b.ul, b.last
  409c24:	ldur	x8, [x29, #-8]
  409c28:	mov	w9, w19
  409c2c:	mov	w10, #0x1                   	// #1
  409c30:	add	x11, x8, #0x58
  409c34:	adrp	x8, 47b000 <feof@plt+0x77760>
  409c38:	add	x8, x8, #0x59c
  409c3c:	ldr	x12, [x11]
  409c40:	cmp	x12, #0x51a
  409c44:	b.eq	409c5c <feof@plt+0x63bc>  // b.none
  409c48:	add	x10, x10, #0x1
  409c4c:	cmp	x10, x9
  409c50:	add	x11, x11, #0x58
  409c54:	b.cc	409c3c <feof@plt+0x639c>  // b.lo, b.ul, b.last
  409c58:	mov	x8, xzr
  409c5c:	ldr	x0, [x23, #1536]
  409c60:	adrp	x9, 47b000 <feof@plt+0x77760>
  409c64:	add	x9, x9, #0x124
  409c68:	cmp	x8, #0x0
  409c6c:	adrp	x19, 47f000 <_obstack_memory_used@@Base+0x32fc>
  409c70:	csel	x22, x9, x8, eq  // eq = none
  409c74:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409c78:	add	x19, x19, #0x7c2
  409c7c:	str	x19, [x21, #1928]
  409c80:	cbz	x0, 409cc0 <feof@plt+0x6420>
  409c84:	adrp	x1, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  409c88:	add	x1, x1, #0xeef
  409c8c:	mov	x2, xzr
  409c90:	bl	4799ac <feof@plt+0x7610c>
  409c94:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  409c98:	add	x1, x1, #0x656
  409c9c:	mov	x2, x19
  409ca0:	mov	x20, x0
  409ca4:	blr	x22
  409ca8:	cmp	x0, #0x0
  409cac:	csel	x8, x19, x0, eq  // eq = none
  409cb0:	mov	x0, x20
  409cb4:	str	x8, [x21, #1928]
  409cb8:	bl	4031d0 <free@plt>
  409cbc:	b	409d24 <feof@plt+0x6484>
  409cc0:	ldur	x20, [x29, #-8]
  409cc4:	adrp	x19, 47f000 <_obstack_memory_used@@Base+0x32fc>
  409cc8:	add	x19, x19, #0x7d4
  409ccc:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x22fc>
  409cd0:	ldr	x0, [x20, #16]
  409cd4:	add	x2, x2, #0x656
  409cd8:	mov	x1, x19
  409cdc:	blr	x22
  409ce0:	str	x0, [x23, #1536]
  409ce4:	ldr	x0, [x20, #16]
  409ce8:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  409cec:	add	x2, x2, #0x7c2
  409cf0:	mov	x1, x19
  409cf4:	blr	x22
  409cf8:	ldr	x1, [x23, #1536]
  409cfc:	str	x0, [x21, #1928]
  409d00:	cbz	x1, 409d24 <feof@plt+0x6484>
  409d04:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  409d08:	add	x0, x0, #0x7de
  409d0c:	mov	x2, xzr
  409d10:	bl	4799ac <feof@plt+0x7610c>
  409d14:	mov	x1, x0
  409d18:	adrp	x0, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409d1c:	add	x0, x0, #0x4d0
  409d20:	bl	404520 <feof@plt+0xc80>
  409d24:	adrp	x2, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409d28:	add	x2, x2, #0x6e8
  409d2c:	sub	x0, x29, #0x8
  409d30:	add	x1, x29, #0xc
  409d34:	bl	4161c0 <feof@plt+0x12920>
  409d38:	ldr	x20, [x23, #1536]
  409d3c:	adrp	x28, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  409d40:	adrp	x27, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  409d44:	add	x28, x28, #0x4e0
  409d48:	add	x27, x27, #0x4b8
  409d4c:	cbz	x20, 409f08 <feof@plt+0x6668>
  409d50:	mov	x0, x20
  409d54:	bl	4030b0 <strlen@plt>
  409d58:	mov	x19, x0
  409d5c:	cmp	w19, #0xa
  409d60:	b.lt	409dd4 <feof@plt+0x6534>  // b.tstop
  409d64:	lsl	x22, x19, #32
  409d68:	mov	x8, #0xffffffff00000000    	// #-4294967296
  409d6c:	add	x8, x22, x8
  409d70:	asr	x8, x8, #32
  409d74:	ldrb	w8, [x20, x8]
  409d78:	cmp	w8, #0x2f
  409d7c:	b.ne	409dd4 <feof@plt+0x6534>  // b.any
  409d80:	add	x20, x20, x22, asr #32
  409d84:	ldrb	w8, [x20, #-9]!
  409d88:	cmp	w8, #0x2f
  409d8c:	b.ne	409dd4 <feof@plt+0x6534>  // b.any
  409d90:	adrp	x1, 4b3000 <_obstack_memory_used@@Base+0x372fc>
  409d94:	add	x0, x20, #0x1
  409d98:	add	x1, x1, #0xfee
  409d9c:	mov	w2, #0x3                   	// #3
  409da0:	bl	479ca8 <feof@plt+0x76408>
  409da4:	cbnz	w0, 409dd4 <feof@plt+0x6534>
  409da8:	ldrb	w8, [x20, #4]
  409dac:	cmp	w8, #0x2f
  409db0:	b.ne	409dd4 <feof@plt+0x6534>  // b.any
  409db4:	adrp	x1, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  409db8:	add	x0, x20, #0x5
  409dbc:	add	x1, x1, #0xeef
  409dc0:	mov	w2, #0x3                   	// #3
  409dc4:	bl	479ca8 <feof@plt+0x76408>
  409dc8:	cbnz	w0, 409dd4 <feof@plt+0x6534>
  409dcc:	lsr	x8, x22, #32
  409dd0:	sub	w19, w8, #0x9
  409dd4:	ldr	x0, [x23, #1536]
  409dd8:	mov	w1, w19
  409ddc:	bl	41790c <feof@plt+0x1406c>
  409de0:	ldr	x8, [x28]
  409de4:	ldr	x0, [x21, #1928]
  409de8:	cbz	x8, 409e24 <feof@plt+0x6584>
  409dec:	ldr	w9, [x8, #20]
  409df0:	cmp	w9, #0x1
  409df4:	b.le	409e04 <feof@plt+0x6564>
  409df8:	adrp	x20, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  409dfc:	add	x20, x20, #0x4e0
  409e00:	b	409e28 <feof@plt+0x6588>
  409e04:	mov	x9, x8
  409e08:	ldr	x8, [x8, #8]
  409e0c:	cbz	x8, 409e1c <feof@plt+0x657c>
  409e10:	ldr	w10, [x8, #20]
  409e14:	cmp	w10, #0x2
  409e18:	b.lt	409e04 <feof@plt+0x6564>  // b.tstop
  409e1c:	add	x20, x9, #0x8
  409e20:	b	409e28 <feof@plt+0x6588>
  409e24:	mov	x20, x28
  409e28:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  409e2c:	add	x1, x1, #0x664
  409e30:	bl	4175f0 <feof@plt+0x13d50>
  409e34:	mov	x19, x0
  409e38:	bl	4030b0 <strlen@plt>
  409e3c:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  409e40:	ldr	w8, [x9, #1256]
  409e44:	cmp	w8, w0
  409e48:	b.ge	409e50 <feof@plt+0x65b0>  // b.tcont
  409e4c:	str	w0, [x9, #1256]
  409e50:	mov	w0, #0x20                  	// #32
  409e54:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  409e58:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  409e5c:	ldr	d8, [x8, #1608]
  409e60:	str	x19, [x0]
  409e64:	str	wzr, [x0, #24]
  409e68:	str	d8, [x0, #16]
  409e6c:	ldr	x8, [x20]
  409e70:	str	x8, [x0, #8]
  409e74:	str	x0, [x20]
  409e78:	ldr	x8, [x27]
  409e7c:	ldr	x0, [x23, #1536]
  409e80:	cbz	x8, 409ebc <feof@plt+0x661c>
  409e84:	ldr	w9, [x8, #20]
  409e88:	cmp	w9, #0x1
  409e8c:	b.le	409e9c <feof@plt+0x65fc>
  409e90:	adrp	x20, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  409e94:	add	x20, x20, #0x4b8
  409e98:	b	409ec0 <feof@plt+0x6620>
  409e9c:	mov	x9, x8
  409ea0:	ldr	x8, [x8, #8]
  409ea4:	cbz	x8, 409eb4 <feof@plt+0x6614>
  409ea8:	ldr	w10, [x8, #20]
  409eac:	cmp	w10, #0x2
  409eb0:	b.lt	409e9c <feof@plt+0x65fc>  // b.tstop
  409eb4:	add	x20, x9, #0x8
  409eb8:	b	409ec0 <feof@plt+0x6620>
  409ebc:	mov	x20, x27
  409ec0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  409ec4:	add	x1, x1, #0x664
  409ec8:	bl	4175f0 <feof@plt+0x13d50>
  409ecc:	mov	x19, x0
  409ed0:	bl	4030b0 <strlen@plt>
  409ed4:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  409ed8:	ldr	w8, [x9, #1216]
  409edc:	cmp	w8, w0
  409ee0:	b.ge	409ee8 <feof@plt+0x6648>  // b.tcont
  409ee4:	str	w0, [x9, #1216]
  409ee8:	mov	w0, #0x20                  	// #32
  409eec:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  409ef0:	str	x19, [x0]
  409ef4:	str	d8, [x0, #16]
  409ef8:	str	wzr, [x0, #24]
  409efc:	ldr	x8, [x20]
  409f00:	str	x8, [x0, #8]
  409f04:	str	x0, [x20]
  409f08:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  409f0c:	add	x0, x0, #0xa91
  409f10:	bl	403700 <getenv@plt>
  409f14:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  409f18:	ldrb	w8, [x8, #1233]
  409f1c:	mov	x19, x0
  409f20:	cbnz	w8, 40a11c <feof@plt+0x687c>
  409f24:	cbz	x19, 40a140 <feof@plt+0x68a0>
  409f28:	mov	x0, x19
  409f2c:	bl	4030b0 <strlen@plt>
  409f30:	add	x9, x0, #0x12
  409f34:	mov	x8, sp
  409f38:	and	x9, x9, #0xfffffffffffffff0
  409f3c:	sub	x20, x8, x9
  409f40:	mov	sp, x20
  409f44:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  409f48:	ldr	d8, [x8, #1608]
  409f4c:	adrp	x22, 47e000 <_obstack_memory_used@@Base+0x22fc>
  409f50:	adrp	x21, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  409f54:	add	x22, x22, #0x3c0
  409f58:	add	x21, x21, #0x560
  409f5c:	adrp	x26, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  409f60:	mov	x23, xzr
  409f64:	ldrb	w8, [x19, x23]
  409f68:	cmp	w8, #0x3a
  409f6c:	b.eq	409f7c <feof@plt+0x66dc>  // b.none
  409f70:	cbz	w8, 409f7c <feof@plt+0x66dc>
  409f74:	add	x23, x23, #0x1
  409f78:	b	409f64 <feof@plt+0x66c4>
  409f7c:	mov	x0, x20
  409f80:	mov	x1, x19
  409f84:	mov	x2, x23
  409f88:	bl	403470 <strncpy@plt>
  409f8c:	cbz	x23, 409fb0 <feof@plt+0x6710>
  409f90:	add	x8, x19, x23
  409f94:	ldurb	w8, [x8, #-1]
  409f98:	cmp	w8, #0x2f
  409f9c:	b.ne	40a008 <feof@plt+0x6768>  // b.any
  409fa0:	strb	wzr, [x20, x23]
  409fa4:	ldr	x8, [x28]
  409fa8:	cbnz	x8, 409fd8 <feof@plt+0x6738>
  409fac:	b	40a018 <feof@plt+0x6778>
  409fb0:	adrp	x0, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  409fb4:	add	x0, x0, #0x60
  409fb8:	mov	x1, x22
  409fbc:	mov	x2, xzr
  409fc0:	bl	4799ac <feof@plt+0x7610c>
  409fc4:	mov	x1, x0
  409fc8:	mov	x0, x20
  409fcc:	bl	4032f0 <strcpy@plt>
  409fd0:	ldr	x8, [x28]
  409fd4:	cbz	x8, 40a018 <feof@plt+0x6778>
  409fd8:	ldr	w9, [x8, #20]
  409fdc:	mov	x25, x28
  409fe0:	cmp	w9, #0x1
  409fe4:	b.gt	40a01c <feof@plt+0x677c>
  409fe8:	mov	x9, x8
  409fec:	ldr	x8, [x8, #8]
  409ff0:	cbz	x8, 40a000 <feof@plt+0x6760>
  409ff4:	ldr	w10, [x8, #20]
  409ff8:	cmp	w10, #0x2
  409ffc:	b.lt	409fe8 <feof@plt+0x6748>  // b.tstop
  40a000:	add	x25, x9, #0x8
  40a004:	b	40a01c <feof@plt+0x677c>
  40a008:	mov	w8, #0x2f                  	// #47
  40a00c:	strh	w8, [x20, x23]
  40a010:	ldr	x8, [x28]
  40a014:	cbnz	x8, 409fd8 <feof@plt+0x6738>
  40a018:	mov	x25, x28
  40a01c:	mov	x0, x20
  40a020:	mov	x1, xzr
  40a024:	bl	4175f0 <feof@plt+0x13d50>
  40a028:	mov	x24, x0
  40a02c:	bl	4030b0 <strlen@plt>
  40a030:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40a034:	ldr	w8, [x9, #1256]
  40a038:	cmp	w8, w0
  40a03c:	b.ge	40a044 <feof@plt+0x67a4>  // b.tcont
  40a040:	str	w0, [x9, #1256]
  40a044:	mov	w0, #0x20                  	// #32
  40a048:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40a04c:	str	x24, [x0]
  40a050:	str	d8, [x0, #16]
  40a054:	str	wzr, [x0, #24]
  40a058:	ldr	x8, [x25]
  40a05c:	str	x8, [x0, #8]
  40a060:	str	x0, [x25]
  40a064:	ldr	x8, [x21]
  40a068:	cbz	x8, 40a09c <feof@plt+0x67fc>
  40a06c:	ldr	w9, [x8, #20]
  40a070:	mov	x25, x21
  40a074:	cmp	w9, #0x1
  40a078:	b.gt	40a0a0 <feof@plt+0x6800>
  40a07c:	mov	x9, x8
  40a080:	ldr	x8, [x8, #8]
  40a084:	cbz	x8, 40a094 <feof@plt+0x67f4>
  40a088:	ldr	w10, [x8, #20]
  40a08c:	cmp	w10, #0x2
  40a090:	b.lt	40a07c <feof@plt+0x67dc>  // b.tstop
  40a094:	add	x25, x9, #0x8
  40a098:	b	40a0a0 <feof@plt+0x6800>
  40a09c:	mov	x25, x21
  40a0a0:	mov	x0, x20
  40a0a4:	mov	x1, xzr
  40a0a8:	bl	4175f0 <feof@plt+0x13d50>
  40a0ac:	mov	x24, x0
  40a0b0:	bl	4030b0 <strlen@plt>
  40a0b4:	ldr	w8, [x26, #1384]
  40a0b8:	cmp	w8, w0
  40a0bc:	b.ge	40a0c4 <feof@plt+0x6824>  // b.tcont
  40a0c0:	str	w0, [x26, #1384]
  40a0c4:	mov	w0, #0x20                  	// #32
  40a0c8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40a0cc:	str	x24, [x0]
  40a0d0:	str	d8, [x0, #16]
  40a0d4:	str	wzr, [x0, #24]
  40a0d8:	ldr	x8, [x25]
  40a0dc:	str	x8, [x0, #8]
  40a0e0:	str	x0, [x25]
  40a0e4:	ldrb	w8, [x19, x23]
  40a0e8:	cbz	w8, 40a140 <feof@plt+0x68a0>
  40a0ec:	add	x8, x19, x23
  40a0f0:	add	x19, x8, #0x1
  40a0f4:	b	409f60 <feof@plt+0x66c0>
  40a0f8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a0fc:	ldr	x0, [x8, #1096]
  40a100:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40a104:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40a108:	add	x1, x1, #0x5b4
  40a10c:	add	x2, x2, #0x7b2
  40a110:	mov	x3, x20
  40a114:	bl	4030d0 <fprintf@plt>
  40a118:	b	409bb8 <feof@plt+0x6318>
  40a11c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a120:	ldr	x0, [x8, #1096]
  40a124:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40a128:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40a12c:	add	x1, x1, #0x5b4
  40a130:	add	x2, x2, #0xa91
  40a134:	mov	x3, x19
  40a138:	bl	4030d0 <fprintf@plt>
  40a13c:	cbnz	x19, 409f28 <feof@plt+0x6688>
  40a140:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40a144:	add	x0, x0, #0xa9f
  40a148:	bl	403700 <getenv@plt>
  40a14c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a150:	ldrb	w8, [x8, #1233]
  40a154:	mov	x19, x0
  40a158:	cbnz	w8, 40a2c0 <feof@plt+0x6a20>
  40a15c:	mov	x21, x27
  40a160:	cbz	x19, 40a2e8 <feof@plt+0x6a48>
  40a164:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40a168:	ldr	x8, [x8, #1232]
  40a16c:	ldrb	w8, [x8]
  40a170:	cmp	w8, #0x30
  40a174:	b.ne	40a2e8 <feof@plt+0x6a48>  // b.any
  40a178:	mov	x0, x19
  40a17c:	bl	4030b0 <strlen@plt>
  40a180:	add	x9, x0, #0x12
  40a184:	mov	x8, sp
  40a188:	and	x9, x9, #0xfffffffffffffff0
  40a18c:	sub	x20, x8, x9
  40a190:	mov	sp, x20
  40a194:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  40a198:	ldr	d8, [x8, #1608]
  40a19c:	adrp	x25, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  40a1a0:	adrp	x22, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40a1a4:	add	x25, x25, #0x60
  40a1a8:	add	x22, x22, #0x3c0
  40a1ac:	mov	w26, #0x1                   	// #1
  40a1b0:	mov	x23, xzr
  40a1b4:	ldrb	w8, [x19, x23]
  40a1b8:	cmp	w8, #0x3a
  40a1bc:	b.eq	40a1cc <feof@plt+0x692c>  // b.none
  40a1c0:	cbz	w8, 40a1cc <feof@plt+0x692c>
  40a1c4:	add	x23, x23, #0x1
  40a1c8:	b	40a1b4 <feof@plt+0x6914>
  40a1cc:	mov	x0, x20
  40a1d0:	mov	x1, x19
  40a1d4:	mov	x2, x23
  40a1d8:	bl	403470 <strncpy@plt>
  40a1dc:	cbz	x23, 40a200 <feof@plt+0x6960>
  40a1e0:	add	x8, x19, x23
  40a1e4:	ldurb	w8, [x8, #-1]
  40a1e8:	cmp	w8, #0x2f
  40a1ec:	b.ne	40a228 <feof@plt+0x6988>  // b.any
  40a1f0:	strb	wzr, [x20, x23]
  40a1f4:	ldr	x8, [x27]
  40a1f8:	cbnz	x8, 40a238 <feof@plt+0x6998>
  40a1fc:	b	40a260 <feof@plt+0x69c0>
  40a200:	mov	x0, x25
  40a204:	mov	x1, x22
  40a208:	mov	x2, xzr
  40a20c:	bl	4799ac <feof@plt+0x7610c>
  40a210:	mov	x1, x0
  40a214:	mov	x0, x20
  40a218:	bl	4032f0 <strcpy@plt>
  40a21c:	ldr	x8, [x27]
  40a220:	cbnz	x8, 40a238 <feof@plt+0x6998>
  40a224:	b	40a260 <feof@plt+0x69c0>
  40a228:	mov	w8, #0x2f                  	// #47
  40a22c:	strh	w8, [x20, x23]
  40a230:	ldr	x8, [x27]
  40a234:	cbz	x8, 40a260 <feof@plt+0x69c0>
  40a238:	ldr	w9, [x8, #20]
  40a23c:	cmp	w9, #0x1
  40a240:	b.gt	40a260 <feof@plt+0x69c0>
  40a244:	mov	x9, x8
  40a248:	ldr	x8, [x8, #8]
  40a24c:	cbz	x8, 40a25c <feof@plt+0x69bc>
  40a250:	ldr	w10, [x8, #20]
  40a254:	cmp	w10, #0x2
  40a258:	b.lt	40a244 <feof@plt+0x69a4>  // b.tstop
  40a25c:	add	x27, x9, #0x8
  40a260:	mov	x0, x20
  40a264:	mov	x1, xzr
  40a268:	bl	4175f0 <feof@plt+0x13d50>
  40a26c:	mov	x24, x0
  40a270:	bl	4030b0 <strlen@plt>
  40a274:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40a278:	ldr	w8, [x9, #1216]
  40a27c:	cmp	w8, w0
  40a280:	b.ge	40a288 <feof@plt+0x69e8>  // b.tcont
  40a284:	str	w0, [x9, #1216]
  40a288:	mov	w0, #0x20                  	// #32
  40a28c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40a290:	str	x24, [x0]
  40a294:	str	d8, [x0, #16]
  40a298:	str	w26, [x0, #24]
  40a29c:	ldr	x8, [x27]
  40a2a0:	str	x8, [x0, #8]
  40a2a4:	str	x0, [x27]
  40a2a8:	ldrb	w8, [x19, x23]
  40a2ac:	mov	x27, x21
  40a2b0:	cbz	w8, 40a2e8 <feof@plt+0x6a48>
  40a2b4:	add	x8, x19, x23
  40a2b8:	add	x19, x8, #0x1
  40a2bc:	b	40a1b0 <feof@plt+0x6910>
  40a2c0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a2c4:	ldr	x0, [x8, #1096]
  40a2c8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40a2cc:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40a2d0:	add	x1, x1, #0x5b4
  40a2d4:	add	x2, x2, #0xa9f
  40a2d8:	mov	x3, x19
  40a2dc:	bl	4030d0 <fprintf@plt>
  40a2e0:	mov	x21, x27
  40a2e4:	cbnz	x19, 40a164 <feof@plt+0x68c4>
  40a2e8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40a2ec:	add	x0, x0, #0x7ef
  40a2f0:	bl	403700 <getenv@plt>
  40a2f4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a2f8:	ldrb	w8, [x8, #1233]
  40a2fc:	mov	x19, x0
  40a300:	cbnz	w8, 40a464 <feof@plt+0x6bc4>
  40a304:	cbz	x19, 40a488 <feof@plt+0x6be8>
  40a308:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40a30c:	ldr	x8, [x8, #1232]
  40a310:	ldrb	w8, [x8]
  40a314:	cmp	w8, #0x30
  40a318:	b.ne	40a488 <feof@plt+0x6be8>  // b.any
  40a31c:	mov	x0, x19
  40a320:	bl	4030b0 <strlen@plt>
  40a324:	add	x9, x0, #0x12
  40a328:	mov	x8, sp
  40a32c:	and	x9, x9, #0xfffffffffffffff0
  40a330:	sub	x20, x8, x9
  40a334:	mov	sp, x20
  40a338:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  40a33c:	ldr	d8, [x8, #1608]
  40a340:	adrp	x26, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  40a344:	adrp	x22, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40a348:	add	x26, x26, #0x60
  40a34c:	add	x22, x22, #0x3c0
  40a350:	mov	w25, #0x1                   	// #1
  40a354:	mov	x23, xzr
  40a358:	ldrb	w8, [x19, x23]
  40a35c:	cmp	w8, #0x3a
  40a360:	b.eq	40a370 <feof@plt+0x6ad0>  // b.none
  40a364:	cbz	w8, 40a370 <feof@plt+0x6ad0>
  40a368:	add	x23, x23, #0x1
  40a36c:	b	40a358 <feof@plt+0x6ab8>
  40a370:	mov	x0, x20
  40a374:	mov	x1, x19
  40a378:	mov	x2, x23
  40a37c:	bl	403470 <strncpy@plt>
  40a380:	cbz	x23, 40a3a4 <feof@plt+0x6b04>
  40a384:	add	x8, x19, x23
  40a388:	ldurb	w8, [x8, #-1]
  40a38c:	cmp	w8, #0x2f
  40a390:	b.ne	40a3cc <feof@plt+0x6b2c>  // b.any
  40a394:	strb	wzr, [x20, x23]
  40a398:	ldr	x8, [x27]
  40a39c:	cbnz	x8, 40a3dc <feof@plt+0x6b3c>
  40a3a0:	b	40a404 <feof@plt+0x6b64>
  40a3a4:	mov	x0, x26
  40a3a8:	mov	x1, x22
  40a3ac:	mov	x2, xzr
  40a3b0:	bl	4799ac <feof@plt+0x7610c>
  40a3b4:	mov	x1, x0
  40a3b8:	mov	x0, x20
  40a3bc:	bl	4032f0 <strcpy@plt>
  40a3c0:	ldr	x8, [x27]
  40a3c4:	cbnz	x8, 40a3dc <feof@plt+0x6b3c>
  40a3c8:	b	40a404 <feof@plt+0x6b64>
  40a3cc:	mov	w8, #0x2f                  	// #47
  40a3d0:	strh	w8, [x20, x23]
  40a3d4:	ldr	x8, [x27]
  40a3d8:	cbz	x8, 40a404 <feof@plt+0x6b64>
  40a3dc:	ldr	w9, [x8, #20]
  40a3e0:	cmp	w9, #0x1
  40a3e4:	b.gt	40a404 <feof@plt+0x6b64>
  40a3e8:	mov	x9, x8
  40a3ec:	ldr	x8, [x8, #8]
  40a3f0:	cbz	x8, 40a400 <feof@plt+0x6b60>
  40a3f4:	ldr	w10, [x8, #20]
  40a3f8:	cmp	w10, #0x2
  40a3fc:	b.lt	40a3e8 <feof@plt+0x6b48>  // b.tstop
  40a400:	add	x27, x9, #0x8
  40a404:	mov	x0, x20
  40a408:	mov	x1, xzr
  40a40c:	bl	4175f0 <feof@plt+0x13d50>
  40a410:	mov	x24, x0
  40a414:	bl	4030b0 <strlen@plt>
  40a418:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40a41c:	ldr	w8, [x9, #1216]
  40a420:	cmp	w8, w0
  40a424:	b.ge	40a42c <feof@plt+0x6b8c>  // b.tcont
  40a428:	str	w0, [x9, #1216]
  40a42c:	mov	w0, #0x20                  	// #32
  40a430:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40a434:	str	x24, [x0]
  40a438:	str	d8, [x0, #16]
  40a43c:	str	w25, [x0, #24]
  40a440:	ldr	x8, [x27]
  40a444:	str	x8, [x0, #8]
  40a448:	str	x0, [x27]
  40a44c:	ldrb	w8, [x19, x23]
  40a450:	mov	x27, x21
  40a454:	cbz	w8, 40a488 <feof@plt+0x6be8>
  40a458:	add	x8, x19, x23
  40a45c:	add	x19, x8, #0x1
  40a460:	b	40a354 <feof@plt+0x6ab4>
  40a464:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a468:	ldr	x0, [x8, #1096]
  40a46c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40a470:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40a474:	add	x1, x1, #0x5b4
  40a478:	add	x2, x2, #0x7ef
  40a47c:	mov	x3, x19
  40a480:	bl	4030d0 <fprintf@plt>
  40a484:	cbnz	x19, 40a308 <feof@plt+0x6a68>
  40a488:	adrp	x13, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a48c:	mov	w8, #0xffffffff            	// #-1
  40a490:	str	w8, [x13, #1984]
  40a494:	mov	w8, #0x80000               	// #524288
  40a498:	adrp	x9, 411000 <feof@plt+0xd760>
  40a49c:	adrp	x10, 411000 <feof@plt+0xd760>
  40a4a0:	stur	w8, [x29, #-48]
  40a4a4:	ldr	w8, [x29, #12]
  40a4a8:	add	x9, x9, #0x14
  40a4ac:	add	x10, x10, #0xa4
  40a4b0:	adrp	x12, 411000 <feof@plt+0xd760>
  40a4b4:	mov	w11, #0x3                   	// #3
  40a4b8:	add	x12, x12, #0xf0
  40a4bc:	stp	x9, x10, [x29, #-88]
  40a4c0:	adrp	x9, 419000 <feof@plt+0x15760>
  40a4c4:	add	x9, x9, #0xbb0
  40a4c8:	stp	x11, x12, [x29, #-64]
  40a4cc:	adrp	x11, 418000 <feof@plt+0x14760>
  40a4d0:	mov	w10, #0x200000              	// #2097152
  40a4d4:	add	x11, x11, #0x370
  40a4d8:	stur	x9, [x29, #-40]
  40a4dc:	mov	w9, #0x100000              	// #1048576
  40a4e0:	cmp	w8, #0x2
  40a4e4:	stur	w10, [x29, #-32]
  40a4e8:	stur	x11, [x29, #-24]
  40a4ec:	stur	w9, [x29, #-16]
  40a4f0:	b.cc	40a74c <feof@plt+0x6eac>  // b.lo, b.ul, b.last
  40a4f4:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a4f8:	ldur	x10, [x29, #-8]
  40a4fc:	ldrb	w11, [x9, #1712]
  40a500:	mov	w12, #0x2                   	// #2
  40a504:	add	x10, x10, #0x58
  40a508:	eor	w11, w11, #0x1
  40a50c:	ldr	x13, [x10]
  40a510:	cmp	x13, #0x71
  40a514:	b.eq	40a54c <feof@plt+0x6cac>  // b.none
  40a518:	cmp	x13, #0x1e8
  40a51c:	b.eq	40a54c <feof@plt+0x6cac>  // b.none
  40a520:	cmp	x13, #0x8c
  40a524:	b.eq	40a54c <feof@plt+0x6cac>  // b.none
  40a528:	cmp	x12, x8
  40a52c:	cset	w13, cc  // cc = lo, ul, last
  40a530:	and	w13, w13, w11
  40a534:	add	x10, x10, #0x58
  40a538:	add	x12, x12, #0x1
  40a53c:	tbnz	w13, #0, 40a50c <feof@plt+0x6c6c>
  40a540:	cmp	w8, #0x2
  40a544:	b.cs	40a55c <feof@plt+0x6cbc>  // b.hs, b.nlast
  40a548:	b	40a74c <feof@plt+0x6eac>
  40a54c:	mov	w10, #0x1                   	// #1
  40a550:	strb	w10, [x9, #1712]
  40a554:	cmp	w8, #0x2
  40a558:	b.cc	40a74c <feof@plt+0x6eac>  // b.lo, b.ul, b.last
  40a55c:	adrp	x19, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40a560:	adrp	x22, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40a564:	mov	x20, xzr
  40a568:	mov	w21, #0x1                   	// #1
  40a56c:	add	x19, x19, #0x935
  40a570:	add	x22, x22, #0x7f5
  40a574:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a578:	b	40a5b4 <feof@plt+0x6d14>
  40a57c:	ldr	x6, [x23, #632]
  40a580:	adrp	x0, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  40a584:	adrp	x1, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40a588:	sub	x5, x29, #0x58
  40a58c:	mov	w4, #0x80000               	// #524288
  40a590:	add	x0, x0, #0x190
  40a594:	add	x1, x1, #0xa0
  40a598:	mov	w3, wzr
  40a59c:	bl	41e92c <feof@plt+0x1b08c>
  40a5a0:	ldr	w8, [x29, #12]
  40a5a4:	add	x21, x21, #0x1
  40a5a8:	add	x20, x20, #0x58
  40a5ac:	cmp	x21, x8
  40a5b0:	b.cs	40a74c <feof@plt+0x6eac>  // b.hs, b.nlast
  40a5b4:	ldur	x8, [x29, #-8]
  40a5b8:	add	x8, x8, x20
  40a5bc:	mov	x2, x8
  40a5c0:	ldr	x9, [x2, #88]!
  40a5c4:	cmp	x9, #0x59a
  40a5c8:	b.ne	40a57c <feof@plt+0x6cdc>  // b.any
  40a5cc:	ldr	x24, [x8, #104]
  40a5d0:	mov	w1, #0x40                  	// #64
  40a5d4:	mov	x0, x24
  40a5d8:	bl	4035a0 <strrchr@plt>
  40a5dc:	cbz	x0, 40a660 <feof@plt+0x6dc0>
  40a5e0:	mov	x25, x0
  40a5e4:	subs	x26, x0, x24
  40a5e8:	b.eq	40a660 <feof@plt+0x6dc0>  // b.none
  40a5ec:	sub	x2, x29, #0x60
  40a5f0:	add	x3, x29, #0x8
  40a5f4:	mov	x0, x25
  40a5f8:	mov	x1, x22
  40a5fc:	bl	403510 <__isoc99_sscanf@plt>
  40a600:	cmp	w0, #0x1
  40a604:	b.lt	40a660 <feof@plt+0x6dc0>  // b.tstop
  40a608:	mov	x0, x25
  40a60c:	bl	4030b0 <strlen@plt>
  40a610:	ldr	w8, [x29, #8]
  40a614:	cmp	x0, x8
  40a618:	b.ne	40a660 <feof@plt+0x6dc0>  // b.any
  40a61c:	add	x0, x26, #0x1
  40a620:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40a624:	mov	x1, x24
  40a628:	mov	x2, x26
  40a62c:	mov	x25, x0
  40a630:	bl	402fc0 <memcpy@plt>
  40a634:	mov	x0, x25
  40a638:	mov	x1, x19
  40a63c:	strb	wzr, [x25, x26]
  40a640:	bl	403640 <strcmp@plt>
  40a644:	cbz	w0, 40a658 <feof@plt+0x6db8>
  40a648:	mov	x0, x25
  40a64c:	mov	w1, wzr
  40a650:	bl	403290 <access@plt>
  40a654:	tbz	w0, #31, 40a66c <feof@plt+0x6dcc>
  40a658:	mov	x0, x25
  40a65c:	bl	4031d0 <free@plt>
  40a660:	mov	x0, x24
  40a664:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  40a668:	mov	x25, x0
  40a66c:	mov	x0, x25
  40a670:	mov	x1, x19
  40a674:	bl	403640 <strcmp@plt>
  40a678:	cbz	w0, 40a68c <feof@plt+0x6dec>
  40a67c:	mov	x0, x25
  40a680:	mov	w1, wzr
  40a684:	bl	403290 <access@plt>
  40a688:	tbnz	w0, #31, 40a70c <feof@plt+0x6e6c>
  40a68c:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a690:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a694:	ldrsw	x8, [x10, #1972]
  40a698:	ldr	x26, [x9, #1976]
  40a69c:	cbz	w8, 40a6cc <feof@plt+0x6e2c>
  40a6a0:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a6a4:	ldr	w9, [x9, #1160]
  40a6a8:	cmp	w8, w9
  40a6ac:	b.ne	40a6e8 <feof@plt+0x6e48>  // b.any
  40a6b0:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a6b4:	ldr	x0, [x9, #1784]
  40a6b8:	lsl	w9, w8, #1
  40a6bc:	lsl	x1, x8, #6
  40a6c0:	str	w9, [x10, #1972]
  40a6c4:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  40a6c8:	b	40a6dc <feof@plt+0x6e3c>
  40a6cc:	mov	w8, #0x10                  	// #16
  40a6d0:	mov	w0, #0x200                 	// #512
  40a6d4:	str	w8, [x10, #1972]
  40a6d8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40a6dc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a6e0:	str	x0, [x8, #1784]
  40a6e4:	b	40a6f0 <feof@plt+0x6e50>
  40a6e8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a6ec:	ldr	x0, [x8, #1784]
  40a6f0:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a6f4:	ldrsw	x8, [x10, #1160]
  40a6f8:	add	x9, x0, x8, lsl #5
  40a6fc:	add	w8, w8, #0x1
  40a700:	stp	x24, x26, [x9]
  40a704:	str	w8, [x10, #1160]
  40a708:	b	40a740 <feof@plt+0x6ea0>
  40a70c:	ldrb	w8, [x25]
  40a710:	cmp	w8, #0x40
  40a714:	b.ne	40a72c <feof@plt+0x6e8c>  // b.any
  40a718:	add	x0, x25, #0x1
  40a71c:	mov	w1, wzr
  40a720:	bl	403290 <access@plt>
  40a724:	lsr	w8, w0, #31
  40a728:	b	40a730 <feof@plt+0x6e90>
  40a72c:	mov	w8, wzr
  40a730:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40a734:	add	x1, x25, x8
  40a738:	add	x0, x0, #0x597
  40a73c:	bl	42b940 <feof@plt+0x280a0>
  40a740:	mov	x0, x25
  40a744:	bl	4031d0 <free@plt>
  40a748:	b	40a5a0 <feof@plt+0x6d00>
  40a74c:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a750:	ldr	x19, [x20, #2056]
  40a754:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a758:	cbz	x19, 40a7f4 <feof@plt+0x6f54>
  40a75c:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40a760:	add	x1, x1, #0x935
  40a764:	mov	x0, x19
  40a768:	bl	403640 <strcmp@plt>
  40a76c:	cbz	w0, 40a7ec <feof@plt+0x6f4c>
  40a770:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40a774:	add	x1, x1, #0x7fc
  40a778:	mov	x0, x19
  40a77c:	bl	403640 <strcmp@plt>
  40a780:	cbz	w0, 40a7ec <feof@plt+0x6f4c>
  40a784:	ldr	w8, [x23, #1160]
  40a788:	cmp	w8, #0x1
  40a78c:	b.lt	40a7ec <feof@plt+0x6f4c>  // b.tstop
  40a790:	mov	x19, xzr
  40a794:	mov	x21, xzr
  40a798:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a79c:	b	40a7c4 <feof@plt+0x6f24>
  40a7a0:	ldr	x0, [x9, x19]
  40a7a4:	ldr	x1, [x20, #2056]
  40a7a8:	bl	479d04 <feof@plt+0x76464>
  40a7ac:	cbnz	w0, 40b074 <feof@plt+0x77d4>
  40a7b0:	ldr	w8, [x23, #1160]
  40a7b4:	add	x21, x21, #0x1
  40a7b8:	cmp	x21, w8, sxtw
  40a7bc:	add	x19, x19, #0x20
  40a7c0:	b.ge	40a7e4 <feof@plt+0x6f44>  // b.tcont
  40a7c4:	ldr	x9, [x22, #1784]
  40a7c8:	add	x10, x9, x19
  40a7cc:	ldr	x10, [x10, #8]
  40a7d0:	cbz	x10, 40a7a0 <feof@plt+0x6f00>
  40a7d4:	ldrb	w10, [x10]
  40a7d8:	cmp	w10, #0x2a
  40a7dc:	b.ne	40a7a0 <feof@plt+0x6f00>  // b.any
  40a7e0:	b	40a7b4 <feof@plt+0x6f14>
  40a7e4:	ldr	x19, [x20, #2056]
  40a7e8:	cbz	x19, 40a7f4 <feof@plt+0x6f54>
  40a7ec:	ldrb	w8, [x19]
  40a7f0:	cbz	w8, 40b08c <feof@plt+0x77ec>
  40a7f4:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a7f8:	ldr	w8, [x20, #1616]
  40a7fc:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a800:	ldr	x19, [x21, #1880]
  40a804:	cmp	w8, #0x2
  40a808:	b.ne	40a854 <feof@plt+0x6fb4>  // b.any
  40a80c:	cbz	x19, 40a854 <feof@plt+0x6fb4>
  40a810:	mov	x0, x19
  40a814:	bl	4030b0 <strlen@plt>
  40a818:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a81c:	str	x0, [x22, #1888]
  40a820:	mov	x0, x19
  40a824:	bl	47b0c8 <feof@plt+0x77828>
  40a828:	mov	w1, #0x2e                  	// #46
  40a82c:	bl	4035a0 <strrchr@plt>
  40a830:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a834:	cbz	x0, 40a868 <feof@plt+0x6fc8>
  40a838:	bl	4030b0 <strlen@plt>
  40a83c:	ldr	x8, [x22, #1888]
  40a840:	ldr	x9, [x21, #1880]
  40a844:	sub	x8, x8, x0
  40a848:	str	x8, [x22, #1888]
  40a84c:	strb	wzr, [x9, x8]
  40a850:	b	40a868 <feof@plt+0x6fc8>
  40a854:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a858:	cbz	x19, 40a868 <feof@plt+0x6fc8>
  40a85c:	mov	x0, x19
  40a860:	bl	4031d0 <free@plt>
  40a864:	str	xzr, [x21, #1880]
  40a868:	ldr	w8, [x20, #1616]
  40a86c:	cbz	w8, 40a890 <feof@plt+0x6ff0>
  40a870:	adrp	x19, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40a874:	ldr	w8, [x19, #56]
  40a878:	cbz	w8, 40a890 <feof@plt+0x6ff0>
  40a87c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40a880:	add	x1, x1, #0x851
  40a884:	mov	w0, wzr
  40a888:	bl	42aecc <feof@plt+0x2762c>
  40a88c:	str	wzr, [x19, #56]
  40a890:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a894:	ldr	w8, [x22, #1144]
  40a898:	cbz	w8, 40a8c8 <feof@plt+0x7028>
  40a89c:	tbz	w8, #31, 40a938 <feof@plt+0x7098>
  40a8a0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a8a4:	ldr	x8, [x8, #1152]
  40a8a8:	str	wzr, [x22, #1144]
  40a8ac:	cbz	x8, 40a938 <feof@plt+0x7098>
  40a8b0:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40a8b4:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40a8b8:	add	x0, x0, #0x5ec
  40a8bc:	add	x2, x2, #0x897
  40a8c0:	mov	w1, #0x1244                	// #4676
  40a8c4:	bl	429434 <feof@plt+0x25b94>
  40a8c8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40a8cc:	add	x0, x0, #0x885
  40a8d0:	bl	403700 <getenv@plt>
  40a8d4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a8d8:	ldrb	w8, [x8, #1233]
  40a8dc:	mov	x19, x0
  40a8e0:	cbnz	w8, 40b04c <feof@plt+0x77ac>
  40a8e4:	cbz	x19, 40a938 <feof@plt+0x7098>
  40a8e8:	ldrb	w8, [x19]
  40a8ec:	cbz	w8, 40a938 <feof@plt+0x7098>
  40a8f0:	cmp	w8, #0x2d
  40a8f4:	b.ne	40a90c <feof@plt+0x706c>  // b.any
  40a8f8:	mov	w8, #0x2                   	// #2
  40a8fc:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a900:	str	w8, [x22, #1144]
  40a904:	str	x19, [x9, #1152]
  40a908:	b	40a938 <feof@plt+0x7098>
  40a90c:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  40a910:	add	x1, x1, #0x162
  40a914:	mov	x0, x19
  40a918:	bl	403640 <strcmp@plt>
  40a91c:	cbz	w0, 40a938 <feof@plt+0x7098>
  40a920:	adrp	x10, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40a924:	mov	w8, #0x3                   	// #3
  40a928:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40a92c:	add	x10, x10, #0x99d
  40a930:	str	w8, [x22, #1144]
  40a934:	str	x10, [x9, #1152]
  40a938:	ldr	x8, [x23, #1536]
  40a93c:	mov	x24, x23
  40a940:	adrp	x23, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40a944:	add	x23, x23, #0x656
  40a948:	cbnz	x8, 40abb0 <feof@plt+0x7310>
  40a94c:	ldr	x8, [x28]
  40a950:	cbz	x8, 40a98c <feof@plt+0x70ec>
  40a954:	ldr	w9, [x8, #20]
  40a958:	cmp	w9, #0x1
  40a95c:	b.le	40a96c <feof@plt+0x70cc>
  40a960:	adrp	x20, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40a964:	add	x20, x20, #0x4e0
  40a968:	b	40a990 <feof@plt+0x70f0>
  40a96c:	mov	x9, x8
  40a970:	ldr	x8, [x8, #8]
  40a974:	cbz	x8, 40a984 <feof@plt+0x70e4>
  40a978:	ldr	w10, [x8, #20]
  40a97c:	cmp	w10, #0x2
  40a980:	b.lt	40a96c <feof@plt+0x70cc>  // b.tstop
  40a984:	add	x20, x9, #0x8
  40a988:	b	40a990 <feof@plt+0x70f0>
  40a98c:	mov	x20, x28
  40a990:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40a994:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40a998:	add	x0, x0, #0x7c2
  40a99c:	add	x1, x1, #0x664
  40a9a0:	bl	4175f0 <feof@plt+0x13d50>
  40a9a4:	mov	x19, x0
  40a9a8:	bl	4030b0 <strlen@plt>
  40a9ac:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40a9b0:	ldr	w8, [x9, #1256]
  40a9b4:	cmp	w8, w0
  40a9b8:	b.ge	40a9c0 <feof@plt+0x7120>  // b.tcont
  40a9bc:	str	w0, [x9, #1256]
  40a9c0:	mov	w0, #0x20                  	// #32
  40a9c4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40a9c8:	movi	v0.2s, #0x1
  40a9cc:	str	x19, [x0]
  40a9d0:	str	wzr, [x0, #24]
  40a9d4:	str	d0, [x0, #16]
  40a9d8:	ldr	x8, [x20]
  40a9dc:	str	x8, [x0, #8]
  40a9e0:	str	x0, [x20]
  40a9e4:	ldr	x8, [x28]
  40a9e8:	cbz	x8, 40aa24 <feof@plt+0x7184>
  40a9ec:	ldr	w9, [x8, #20]
  40a9f0:	cmp	w9, #0x1
  40a9f4:	b.le	40aa04 <feof@plt+0x7164>
  40a9f8:	adrp	x20, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40a9fc:	add	x20, x20, #0x4e0
  40aa00:	b	40aa28 <feof@plt+0x7188>
  40aa04:	mov	x9, x8
  40aa08:	ldr	x8, [x8, #8]
  40aa0c:	cbz	x8, 40aa1c <feof@plt+0x717c>
  40aa10:	ldr	w10, [x8, #20]
  40aa14:	cmp	w10, #0x2
  40aa18:	b.lt	40aa04 <feof@plt+0x7164>  // b.tstop
  40aa1c:	add	x20, x9, #0x8
  40aa20:	b	40aa28 <feof@plt+0x7188>
  40aa24:	mov	x20, x28
  40aa28:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40aa2c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40aa30:	add	x0, x0, #0x7c2
  40aa34:	add	x1, x1, #0x6ef
  40aa38:	bl	4175f0 <feof@plt+0x13d50>
  40aa3c:	mov	x19, x0
  40aa40:	bl	4030b0 <strlen@plt>
  40aa44:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40aa48:	ldr	w8, [x9, #1256]
  40aa4c:	cmp	w8, w0
  40aa50:	b.ge	40aa58 <feof@plt+0x71b8>  // b.tcont
  40aa54:	str	w0, [x9, #1256]
  40aa58:	mov	w0, #0x20                  	// #32
  40aa5c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40aa60:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  40aa64:	ldr	d8, [x8, #1664]
  40aa68:	str	x19, [x0]
  40aa6c:	str	wzr, [x0, #24]
  40aa70:	str	d8, [x0, #16]
  40aa74:	ldr	x8, [x20]
  40aa78:	str	x8, [x0, #8]
  40aa7c:	str	x0, [x20]
  40aa80:	ldr	x8, [x28]
  40aa84:	cbz	x8, 40aac0 <feof@plt+0x7220>
  40aa88:	ldr	w9, [x8, #20]
  40aa8c:	cmp	w9, #0x1
  40aa90:	b.le	40aaa0 <feof@plt+0x7200>
  40aa94:	adrp	x20, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40aa98:	add	x20, x20, #0x4e0
  40aa9c:	b	40aac4 <feof@plt+0x7224>
  40aaa0:	mov	x9, x8
  40aaa4:	ldr	x8, [x8, #8]
  40aaa8:	cbz	x8, 40aab8 <feof@plt+0x7218>
  40aaac:	ldr	w10, [x8, #20]
  40aab0:	cmp	w10, #0x2
  40aab4:	b.lt	40aaa0 <feof@plt+0x7200>  // b.tstop
  40aab8:	add	x20, x9, #0x8
  40aabc:	b	40aac4 <feof@plt+0x7224>
  40aac0:	mov	x20, x28
  40aac4:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40aac8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40aacc:	add	x0, x0, #0x656
  40aad0:	add	x1, x1, #0x6ef
  40aad4:	bl	4175f0 <feof@plt+0x13d50>
  40aad8:	mov	x19, x0
  40aadc:	bl	4030b0 <strlen@plt>
  40aae0:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40aae4:	ldr	w8, [x9, #1256]
  40aae8:	cmp	w8, w0
  40aaec:	b.ge	40aaf4 <feof@plt+0x7254>  // b.tcont
  40aaf0:	str	w0, [x9, #1256]
  40aaf4:	mov	w0, #0x20                  	// #32
  40aaf8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40aafc:	str	x19, [x0]
  40ab00:	str	d8, [x0, #16]
  40ab04:	str	wzr, [x0, #24]
  40ab08:	ldr	x8, [x20]
  40ab0c:	str	x8, [x0, #8]
  40ab10:	str	x0, [x20]
  40ab14:	ldr	x8, [x27]
  40ab18:	cbz	x8, 40ab54 <feof@plt+0x72b4>
  40ab1c:	ldr	w9, [x8, #20]
  40ab20:	cmp	w9, #0x1
  40ab24:	b.le	40ab34 <feof@plt+0x7294>
  40ab28:	adrp	x20, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40ab2c:	add	x20, x20, #0x4b8
  40ab30:	b	40ab58 <feof@plt+0x72b8>
  40ab34:	mov	x9, x8
  40ab38:	ldr	x8, [x8, #8]
  40ab3c:	cbz	x8, 40ab4c <feof@plt+0x72ac>
  40ab40:	ldr	w10, [x8, #20]
  40ab44:	cmp	w10, #0x2
  40ab48:	b.lt	40ab34 <feof@plt+0x7294>  // b.tstop
  40ab4c:	add	x20, x9, #0x8
  40ab50:	b	40ab58 <feof@plt+0x72b8>
  40ab54:	mov	x20, x27
  40ab58:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40ab5c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40ab60:	add	x0, x0, #0x656
  40ab64:	add	x1, x1, #0x6ef
  40ab68:	bl	4175f0 <feof@plt+0x13d50>
  40ab6c:	mov	x19, x0
  40ab70:	bl	4030b0 <strlen@plt>
  40ab74:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40ab78:	ldr	w8, [x9, #1216]
  40ab7c:	cmp	w8, w0
  40ab80:	b.ge	40ab88 <feof@plt+0x72e8>  // b.tcont
  40ab84:	str	w0, [x9, #1216]
  40ab88:	mov	w0, #0x20                  	// #32
  40ab8c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40ab90:	movi	v0.2s, #0x1
  40ab94:	str	x19, [x0]
  40ab98:	str	wzr, [x0, #24]
  40ab9c:	str	d0, [x0, #16]
  40aba0:	ldr	x8, [x20]
  40aba4:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40aba8:	str	x8, [x0, #8]
  40abac:	str	x0, [x20]
  40abb0:	adrp	x19, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40abb4:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40abb8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40abbc:	add	x19, x19, #0xb53
  40abc0:	add	x20, x20, #0x3c0
  40abc4:	add	x0, x0, #0x8a7
  40abc8:	mov	x1, x19
  40abcc:	mov	x2, x20
  40abd0:	mov	x3, xzr
  40abd4:	bl	4799ac <feof@plt+0x7610c>
  40abd8:	ldr	x8, [x24, #1536]
  40abdc:	mov	x21, x0
  40abe0:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40abe4:	adrp	x4, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40abe8:	cmp	x8, #0x0
  40abec:	csel	x0, x23, x8, eq  // eq = none
  40abf0:	add	x3, x3, #0x650
  40abf4:	add	x4, x4, #0x23b
  40abf8:	mov	x1, x19
  40abfc:	mov	x2, x20
  40ac00:	mov	x5, x20
  40ac04:	mov	x6, x21
  40ac08:	mov	x7, xzr
  40ac0c:	bl	4799ac <feof@plt+0x7610c>
  40ac10:	mov	x19, x0
  40ac14:	mov	x0, x21
  40ac18:	bl	4031d0 <free@plt>
  40ac1c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40ac20:	add	x1, x1, #0x8b4
  40ac24:	mov	x0, x19
  40ac28:	mov	x2, x20
  40ac2c:	mov	x3, xzr
  40ac30:	bl	4799ac <feof@plt+0x7610c>
  40ac34:	ldr	x8, [x28]
  40ac38:	cbz	x8, 40ac7c <feof@plt+0x73dc>
  40ac3c:	ldr	w9, [x8, #20]
  40ac40:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ac44:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ac48:	cmp	w9, #0x1
  40ac4c:	b.le	40ac5c <feof@plt+0x73bc>
  40ac50:	adrp	x28, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40ac54:	add	x28, x28, #0x4e0
  40ac58:	b	40ac84 <feof@plt+0x73e4>
  40ac5c:	mov	x9, x8
  40ac60:	ldr	x8, [x8, #8]
  40ac64:	cbz	x8, 40ac74 <feof@plt+0x73d4>
  40ac68:	ldr	w10, [x8, #20]
  40ac6c:	cmp	w10, #0x2
  40ac70:	b.lt	40ac5c <feof@plt+0x73bc>  // b.tstop
  40ac74:	add	x28, x9, #0x8
  40ac78:	b	40ac84 <feof@plt+0x73e4>
  40ac7c:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ac80:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ac84:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40ac88:	add	x1, x1, #0x6ef
  40ac8c:	bl	4175f0 <feof@plt+0x13d50>
  40ac90:	mov	x20, x0
  40ac94:	bl	4030b0 <strlen@plt>
  40ac98:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40ac9c:	ldr	w8, [x9, #1256]
  40aca0:	cmp	w8, w0
  40aca4:	b.ge	40acac <feof@plt+0x740c>  // b.tcont
  40aca8:	str	w0, [x9, #1256]
  40acac:	mov	w0, #0x20                  	// #32
  40acb0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40acb4:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  40acb8:	ldr	d8, [x8, #1608]
  40acbc:	str	x20, [x0]
  40acc0:	str	wzr, [x0, #24]
  40acc4:	adrp	x1, 4b3000 <_obstack_memory_used@@Base+0x372fc>
  40acc8:	str	d8, [x0, #16]
  40accc:	ldr	x8, [x28]
  40acd0:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40acd4:	add	x1, x1, #0xfee
  40acd8:	add	x2, x2, #0x3c0
  40acdc:	str	x8, [x0, #8]
  40ace0:	str	x0, [x28]
  40ace4:	mov	x0, x19
  40ace8:	mov	x3, xzr
  40acec:	bl	4799ac <feof@plt+0x7610c>
  40acf0:	ldr	x8, [x27]
  40acf4:	cbz	x8, 40ad34 <feof@plt+0x7494>
  40acf8:	ldr	w9, [x8, #20]
  40acfc:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ad00:	cmp	w9, #0x1
  40ad04:	b.le	40ad14 <feof@plt+0x7474>
  40ad08:	adrp	x27, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40ad0c:	add	x27, x27, #0x4b8
  40ad10:	b	40ad38 <feof@plt+0x7498>
  40ad14:	mov	x9, x8
  40ad18:	ldr	x8, [x8, #8]
  40ad1c:	cbz	x8, 40ad2c <feof@plt+0x748c>
  40ad20:	ldr	w10, [x8, #20]
  40ad24:	cmp	w10, #0x2
  40ad28:	b.lt	40ad14 <feof@plt+0x7474>  // b.tstop
  40ad2c:	add	x27, x9, #0x8
  40ad30:	b	40ad38 <feof@plt+0x7498>
  40ad34:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ad38:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40ad3c:	add	x1, x1, #0x6ef
  40ad40:	bl	4175f0 <feof@plt+0x13d50>
  40ad44:	mov	x20, x0
  40ad48:	bl	4030b0 <strlen@plt>
  40ad4c:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40ad50:	ldr	w8, [x9, #1216]
  40ad54:	cmp	w8, w0
  40ad58:	b.ge	40ad60 <feof@plt+0x74c0>  // b.tcont
  40ad5c:	str	w0, [x9, #1216]
  40ad60:	mov	w0, #0x20                  	// #32
  40ad64:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40ad68:	mov	w8, #0x1                   	// #1
  40ad6c:	str	x20, [x0]
  40ad70:	str	d8, [x0, #16]
  40ad74:	str	w8, [x0, #24]
  40ad78:	ldr	x8, [x27]
  40ad7c:	str	x8, [x0, #8]
  40ad80:	str	x0, [x27]
  40ad84:	mov	x0, x19
  40ad88:	bl	4031d0 <free@plt>
  40ad8c:	ldr	w8, [x23, #1160]
  40ad90:	ldr	w9, [x21, #1984]
  40ad94:	cmp	w8, w9
  40ad98:	b.ne	40adb8 <feof@plt+0x7518>  // b.any
  40ad9c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ada0:	ldr	x2, [x8, #1976]
  40ada4:	cbz	x2, 40adb8 <feof@plt+0x7518>
  40ada8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40adac:	add	x1, x1, #0x8b8
  40adb0:	mov	w0, wzr
  40adb4:	bl	42aecc <feof@plt+0x2762c>
  40adb8:	ldr	w8, [x22, #1144]
  40adbc:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40adc0:	orr	w8, w8, #0x1
  40adc4:	cmp	w8, #0x3
  40adc8:	b.ne	40ae74 <feof@plt+0x75d4>  // b.any
  40adcc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40add0:	ldr	x1, [x8, #1152]
  40add4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40add8:	add	x0, x0, #0x8e6
  40addc:	mov	x2, xzr
  40ade0:	bl	4799ac <feof@plt+0x7610c>
  40ade4:	ldrsw	x8, [x20, #1576]
  40ade8:	mov	x19, x0
  40adec:	cbz	w8, 40ae20 <feof@plt+0x7580>
  40adf0:	ldr	w9, [x24, #1560]
  40adf4:	cmp	w8, w9
  40adf8:	b.ne	40ae3c <feof@plt+0x759c>  // b.any
  40adfc:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ae00:	ldr	x0, [x21, #1592]
  40ae04:	lsl	w9, w8, #1
  40ae08:	add	x8, x8, x8, lsl #1
  40ae0c:	lsl	x1, x8, #4
  40ae10:	str	w9, [x20, #1576]
  40ae14:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  40ae18:	str	x0, [x21, #1592]
  40ae1c:	b	40ae44 <feof@plt+0x75a4>
  40ae20:	mov	w8, #0x10                  	// #16
  40ae24:	mov	w0, #0x180                 	// #384
  40ae28:	str	w8, [x20, #1576]
  40ae2c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40ae30:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ae34:	str	x0, [x8, #1592]
  40ae38:	b	40ae44 <feof@plt+0x75a4>
  40ae3c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ae40:	ldr	x0, [x8, #1592]
  40ae44:	ldrsw	x8, [x24, #1560]
  40ae48:	mov	w10, #0x18                  	// #24
  40ae4c:	add	x9, x19, #0x1
  40ae50:	mov	w11, #0x1                   	// #1
  40ae54:	madd	x10, x8, x10, x0
  40ae58:	add	w8, w8, #0x1
  40ae5c:	stp	x9, xzr, [x10]
  40ae60:	str	wzr, [x10, #16]
  40ae64:	strh	w11, [x10, #20]
  40ae68:	strb	wzr, [x10, #22]
  40ae6c:	str	w8, [x24, #1560]
  40ae70:	str	w11, [x22, #1144]
  40ae74:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ae78:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ae7c:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ae80:	ldr	w10, [x8, #1824]
  40ae84:	ldrb	w9, [x19, #1760]
  40ae88:	ldrb	w8, [x21, #1764]
  40ae8c:	adrp	x15, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ae90:	cbnz	w10, 40ae9c <feof@plt+0x75fc>
  40ae94:	tbnz	w9, #0, 40ae9c <feof@plt+0x75fc>
  40ae98:	cbz	w8, 40af18 <feof@plt+0x7678>
  40ae9c:	ldr	w10, [x15, #1972]
  40aea0:	str	wzr, [x23, #1160]
  40aea4:	cbz	w10, 40aeb8 <feof@plt+0x7618>
  40aea8:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40aeac:	ldr	x0, [x10, #1784]
  40aeb0:	mov	w10, wzr
  40aeb4:	b	40aee0 <feof@plt+0x7640>
  40aeb8:	mov	w8, #0x10                  	// #16
  40aebc:	mov	w0, #0x200                 	// #512
  40aec0:	str	w8, [x15, #1972]
  40aec4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40aec8:	ldr	w10, [x23, #1160]
  40aecc:	ldrb	w8, [x21, #1764]
  40aed0:	ldrb	w9, [x19, #1760]
  40aed4:	adrp	x11, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40aed8:	adrp	x15, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40aedc:	str	x0, [x11, #1784]
  40aee0:	cmp	w8, #0x0
  40aee4:	mov	w14, #0x1                   	// #1
  40aee8:	sxtw	x11, w10
  40aeec:	adrp	x12, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40aef0:	adrp	x13, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40aef4:	cinc	w14, w14, ne  // ne = any
  40aef8:	cmp	w9, #0x0
  40aefc:	add	x12, x12, #0x8f7
  40af00:	add	w10, w10, #0x1
  40af04:	add	x13, x13, #0x4c7
  40af08:	add	x11, x0, x11, lsl #5
  40af0c:	csel	w8, w14, w8, ne  // ne = any
  40af10:	stp	x12, x13, [x11]
  40af14:	str	w10, [x23, #1160]
  40af18:	adrp	x9, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40af1c:	ldr	w11, [x9, #120]
  40af20:	ldr	w10, [x29, #12]
  40af24:	ldrsw	x9, [x20, #1576]
  40af28:	cmp	w11, #0x0
  40af2c:	sub	w12, w10, #0x1
  40af30:	cset	w11, ne  // ne = any
  40af34:	cmp	w10, #0x2
  40af38:	cset	w10, eq  // eq = none
  40af3c:	cmp	w8, w12
  40af40:	and	w8, w11, w10
  40af44:	cset	w10, eq  // eq = none
  40af48:	orr	w8, w8, w10
  40af4c:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40af50:	strb	w8, [x10, #2064]
  40af54:	cbz	w9, 40af8c <feof@plt+0x76ec>
  40af58:	ldr	w8, [x24, #1560]
  40af5c:	cmp	w9, w8
  40af60:	b.ne	40afac <feof@plt+0x770c>  // b.any
  40af64:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40af68:	ldr	x0, [x19, #1592]
  40af6c:	lsl	w8, w9, #1
  40af70:	str	w8, [x20, #1576]
  40af74:	add	x8, x9, x9, lsl #1
  40af78:	lsl	x1, x8, #4
  40af7c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  40af80:	adrp	x15, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40af84:	str	x0, [x19, #1592]
  40af88:	b	40afb4 <feof@plt+0x7714>
  40af8c:	mov	w8, #0x10                  	// #16
  40af90:	mov	w0, #0x180                 	// #384
  40af94:	str	w8, [x20, #1576]
  40af98:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40af9c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40afa0:	adrp	x15, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40afa4:	str	x0, [x8, #1592]
  40afa8:	b	40afb4 <feof@plt+0x7714>
  40afac:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40afb0:	ldr	x0, [x8, #1592]
  40afb4:	ldrsw	x8, [x24, #1560]
  40afb8:	mov	w9, #0x18                  	// #24
  40afbc:	mul	x8, x8, x9
  40afc0:	str	xzr, [x0, x8]
  40afc4:	ldrsw	x8, [x15, #1972]
  40afc8:	cbz	w8, 40aff8 <feof@plt+0x7758>
  40afcc:	ldr	w9, [x23, #1160]
  40afd0:	cmp	w8, w9
  40afd4:	b.ne	40b014 <feof@plt+0x7774>  // b.any
  40afd8:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40afdc:	ldr	x0, [x19, #1784]
  40afe0:	lsl	w9, w8, #1
  40afe4:	lsl	x1, x8, #6
  40afe8:	str	w9, [x15, #1972]
  40afec:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  40aff0:	str	x0, [x19, #1784]
  40aff4:	b	40b01c <feof@plt+0x777c>
  40aff8:	mov	w8, #0x10                  	// #16
  40affc:	mov	w0, #0x200                 	// #512
  40b000:	str	w8, [x15, #1972]
  40b004:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40b008:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40b00c:	str	x0, [x8, #1784]
  40b010:	b	40b01c <feof@plt+0x777c>
  40b014:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40b018:	ldr	x0, [x8, #1784]
  40b01c:	ldrsw	x8, [x23, #1160]
  40b020:	lsl	x8, x8, #5
  40b024:	str	xzr, [x0, x8]
  40b028:	mov	sp, x29
  40b02c:	ldp	x20, x19, [sp, #96]
  40b030:	ldp	x22, x21, [sp, #80]
  40b034:	ldp	x24, x23, [sp, #64]
  40b038:	ldp	x26, x25, [sp, #48]
  40b03c:	ldp	x28, x27, [sp, #32]
  40b040:	ldp	x29, x30, [sp, #16]
  40b044:	ldr	d8, [sp], #112
  40b048:	ret
  40b04c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40b050:	ldr	x0, [x8, #1096]
  40b054:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40b058:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40b05c:	add	x1, x1, #0x5b4
  40b060:	add	x2, x2, #0x885
  40b064:	mov	x3, x19
  40b068:	bl	4030d0 <fprintf@plt>
  40b06c:	cbnz	x19, 40a8e8 <feof@plt+0x7048>
  40b070:	b	40a938 <feof@plt+0x7098>
  40b074:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40b078:	ldr	w0, [x8, #400]
  40b07c:	ldr	x2, [x20, #2056]
  40b080:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40b084:	add	x1, x1, #0x806
  40b088:	bl	42c008 <feof@plt+0x28768>
  40b08c:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40b090:	ldr	w0, [x8, #400]
  40b094:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40b098:	add	x1, x1, #0x830
  40b09c:	bl	42c008 <feof@plt+0x28768>
  40b0a0:	sub	sp, sp, #0x100
  40b0a4:	str	d8, [sp, #144]
  40b0a8:	stp	x29, x30, [sp, #160]
  40b0ac:	stp	x28, x27, [sp, #176]
  40b0b0:	stp	x26, x25, [sp, #192]
  40b0b4:	stp	x24, x23, [sp, #208]
  40b0b8:	stp	x22, x21, [sp, #224]
  40b0bc:	stp	x20, x19, [sp, #240]
  40b0c0:	add	x29, sp, #0x90
  40b0c4:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40b0c8:	ldr	w8, [x8, #120]
  40b0cc:	mov	x19, x0
  40b0d0:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40b0d4:	stp	w2, w1, [x29, #8]
  40b0d8:	cbz	w8, 40b0f0 <feof@plt+0x7850>
  40b0dc:	ldr	x0, [x9, #1096]
  40b0e0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b0e4:	add	x1, x1, #0x7e9
  40b0e8:	mov	x2, x19
  40b0ec:	bl	429778 <feof@plt+0x25ed8>
  40b0f0:	mov	x0, x19
  40b0f4:	mov	w1, wzr
  40b0f8:	mov	w2, wzr
  40b0fc:	bl	403130 <open@plt>
  40b100:	tbnz	w0, #31, 40b964 <feof@plt+0x80c4>
  40b104:	mov	w23, w0
  40b108:	add	x2, sp, #0x10
  40b10c:	mov	w0, wzr
  40b110:	mov	x1, x19
  40b114:	bl	403650 <__xstat@plt>
  40b118:	tbnz	w0, #31, 40b964 <feof@plt+0x80c4>
  40b11c:	ldr	x8, [sp, #64]
  40b120:	add	x0, x8, #0x1
  40b124:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40b128:	ldr	w2, [sp, #64]
  40b12c:	mov	x22, x0
  40b130:	mov	w0, w23
  40b134:	mov	x1, x22
  40b138:	bl	4032c0 <read@plt>
  40b13c:	mov	x24, x0
  40b140:	tbnz	w24, #31, 40b964 <feof@plt+0x80c4>
  40b144:	mov	w0, w23
  40b148:	strb	wzr, [x22, w24, sxtw]
  40b14c:	bl	403630 <close@plt>
  40b150:	mov	x8, #0x100000000           	// #4294967296
  40b154:	add	x8, x8, x24, lsl #32
  40b158:	asr	x0, x8, #32
  40b15c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40b160:	mov	x28, x0
  40b164:	mov	x9, x22
  40b168:	mov	x8, x0
  40b16c:	b	40b17c <feof@plt+0x78dc>
  40b170:	cbz	w10, 40b1b0 <feof@plt+0x7910>
  40b174:	strb	w10, [x8], #1
  40b178:	add	x9, x9, #0x1
  40b17c:	ldrb	w10, [x9]
  40b180:	cmp	w10, #0xd
  40b184:	b.ne	40b170 <feof@plt+0x78d0>  // b.any
  40b188:	cmp	x9, x22
  40b18c:	b.ls	40b19c <feof@plt+0x78fc>  // b.plast
  40b190:	ldurb	w10, [x9, #-1]
  40b194:	cmp	w10, #0xa
  40b198:	b.eq	40b178 <feof@plt+0x78d8>  // b.none
  40b19c:	ldrb	w10, [x9, #1]
  40b1a0:	cmp	w10, #0xa
  40b1a4:	b.eq	40b178 <feof@plt+0x78d8>  // b.none
  40b1a8:	mov	w10, #0xa                   	// #10
  40b1ac:	b	40b174 <feof@plt+0x78d4>
  40b1b0:	mov	x0, x22
  40b1b4:	str	x19, [sp, #8]
  40b1b8:	strb	wzr, [x8]
  40b1bc:	bl	4031d0 <free@plt>
  40b1c0:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  40b1c4:	ldr	d8, [x8, #1632]
  40b1c8:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x12fc>
  40b1cc:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x12fc>
  40b1d0:	adrp	x21, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  40b1d4:	add	x20, x20, #0x6dc
  40b1d8:	add	x19, x19, #0x690
  40b1dc:	add	x21, x21, #0x4a2
  40b1e0:	mov	x25, x28
  40b1e4:	b	40b1ec <feof@plt+0x794c>
  40b1e8:	add	x25, x25, #0x1
  40b1ec:	ldrb	w8, [x25]
  40b1f0:	cmp	w8, #0x25
  40b1f4:	b.hi	40b24c <feof@plt+0x79ac>  // b.pmore
  40b1f8:	adr	x9, 40b1e8 <feof@plt+0x7948>
  40b1fc:	ldrh	w10, [x19, x8, lsl #1]
  40b200:	add	x9, x9, x10, lsl #2
  40b204:	br	x9
  40b208:	ldrb	w8, [x25, #1]
  40b20c:	cmp	w8, #0xa
  40b210:	b.ne	40b1e8 <feof@plt+0x7948>  // b.any
  40b214:	ldrb	w8, [x25, #2]
  40b218:	cmp	w8, #0xa
  40b21c:	b.ne	40b1e8 <feof@plt+0x7948>  // b.any
  40b220:	add	x25, x25, #0x1
  40b224:	mov	w8, #0xa                   	// #10
  40b228:	b	40b24c <feof@plt+0x79ac>
  40b22c:	add	x25, x25, #0x1
  40b230:	ldrb	w8, [x25], #1
  40b234:	cmp	w8, #0xa
  40b238:	b.ne	40b230 <feof@plt+0x7990>  // b.any
  40b23c:	b	40b1ec <feof@plt+0x794c>
  40b240:	ldr	w8, [x29, #12]
  40b244:	tbz	w8, #0, 40b32c <feof@plt+0x7a8c>
  40b248:	mov	w8, #0x25                  	// #37
  40b24c:	add	x22, x25, #0x1
  40b250:	and	w8, w8, #0xff
  40b254:	cmp	w8, #0x3a
  40b258:	b.eq	40b270 <feof@plt+0x79d0>  // b.none
  40b25c:	cbz	w8, 40b8d8 <feof@plt+0x8038>
  40b260:	cmp	w8, #0xa
  40b264:	b.eq	40b8d8 <feof@plt+0x8038>  // b.none
  40b268:	ldrb	w8, [x22], #1
  40b26c:	b	40b250 <feof@plt+0x79b0>
  40b270:	sub	x8, x22, #0x1
  40b274:	cmp	x8, x28
  40b278:	mov	x9, x8
  40b27c:	b.hi	40b290 <feof@plt+0x79f0>  // b.pmore
  40b280:	b	40b2ac <feof@plt+0x7a0c>
  40b284:	cmp	x9, x28
  40b288:	mov	x8, x9
  40b28c:	b.ls	40b2ac <feof@plt+0x7a0c>  // b.plast
  40b290:	mov	x9, x8
  40b294:	ldrb	w10, [x9, #-1]!
  40b298:	cmp	w10, #0x20
  40b29c:	b.eq	40b284 <feof@plt+0x79e4>  // b.none
  40b2a0:	cmp	w10, #0x9
  40b2a4:	b.eq	40b284 <feof@plt+0x79e4>  // b.none
  40b2a8:	mov	x9, x8
  40b2ac:	sub	x23, x9, x25
  40b2b0:	add	w8, w23, #0x1
  40b2b4:	sxtw	x0, w8
  40b2b8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40b2bc:	sxtw	x27, w23
  40b2c0:	mov	x1, x25
  40b2c4:	mov	x2, x27
  40b2c8:	mov	x26, x0
  40b2cc:	bl	402fc0 <memcpy@plt>
  40b2d0:	strb	wzr, [x26, x27]
  40b2d4:	b	40b2dc <feof@plt+0x7a3c>
  40b2d8:	add	x22, x22, #0x1
  40b2dc:	ldrb	w8, [x22]
  40b2e0:	sub	w9, w8, #0x9
  40b2e4:	cmp	w9, #0x1a
  40b2e8:	b.hi	40b558 <feof@plt+0x7cb8>  // b.pmore
  40b2ec:	adr	x10, 40b2d8 <feof@plt+0x7a38>
  40b2f0:	ldrb	w11, [x20, x9]
  40b2f4:	add	x10, x10, x11, lsl #2
  40b2f8:	br	x10
  40b2fc:	ldrb	w9, [x22, #1]
  40b300:	cmp	w9, #0xa
  40b304:	b.ne	40b2d8 <feof@plt+0x7a38>  // b.any
  40b308:	ldrb	w9, [x22, #2]
  40b30c:	cmp	w9, #0xa
  40b310:	b.ne	40b2d8 <feof@plt+0x7a38>  // b.any
  40b314:	b	40b554 <feof@plt+0x7cb4>
  40b318:	add	x22, x22, #0x1
  40b31c:	ldrb	w8, [x22], #1
  40b320:	cmp	w8, #0xa
  40b324:	b.ne	40b31c <feof@plt+0x7a7c>  // b.any
  40b328:	b	40b2dc <feof@plt+0x7a3c>
  40b32c:	add	x24, x25, #0x1
  40b330:	mov	w8, #0x25                  	// #37
  40b334:	and	w8, w8, #0xff
  40b338:	cmp	w8, #0xa
  40b33c:	b.eq	40b348 <feof@plt+0x7aa8>  // b.none
  40b340:	ldrb	w8, [x24], #1
  40b344:	cbnz	w8, 40b334 <feof@plt+0x7a94>
  40b348:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b34c:	mov	w2, #0x8                   	// #8
  40b350:	mov	x0, x25
  40b354:	add	x1, x1, #0x63d
  40b358:	sub	x27, x24, #0x1
  40b35c:	bl	403450 <strncmp@plt>
  40b360:	cbz	w0, 40b6c8 <feof@plt+0x7e28>
  40b364:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b368:	mov	w2, #0xe                   	// #14
  40b36c:	mov	x0, x25
  40b370:	add	x1, x1, #0x67c
  40b374:	bl	403450 <strncmp@plt>
  40b378:	cbz	w0, 40b704 <feof@plt+0x7e64>
  40b37c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b380:	mov	w2, #0x7                   	// #7
  40b384:	mov	x0, x25
  40b388:	add	x1, x1, #0x6a9
  40b38c:	bl	403450 <strncmp@plt>
  40b390:	cbnz	w0, 40b97c <feof@plt+0x80dc>
  40b394:	ldrb	w8, [x25, #7]
  40b398:	cmp	w8, #0x20
  40b39c:	b.eq	40b3a8 <feof@plt+0x7b08>  // b.none
  40b3a0:	cmp	w8, #0x9
  40b3a4:	b.ne	40b97c <feof@plt+0x80dc>  // b.any
  40b3a8:	add	x26, x25, #0x8
  40b3ac:	add	x9, x25, #0x9
  40b3b0:	mov	w12, #0x88                  	// #136
  40b3b4:	b	40b3c0 <feof@plt+0x7b20>
  40b3b8:	add	x26, x26, #0x1
  40b3bc:	add	x9, x9, #0x1
  40b3c0:	ldrb	w10, [x26]
  40b3c4:	cmp	w10, #0x20
  40b3c8:	b.eq	40b3b8 <feof@plt+0x7b18>  // b.none
  40b3cc:	cmp	w10, #0x9
  40b3d0:	b.eq	40b3b8 <feof@plt+0x7b18>  // b.none
  40b3d4:	ldrh	w11, [x21, x10, lsl #1]
  40b3d8:	tst	w11, w12
  40b3dc:	b.eq	40b994 <feof@plt+0x80f4>  // b.none
  40b3e0:	cbz	w10, 40b9ac <feof@plt+0x810c>
  40b3e4:	mov	x8, x26
  40b3e8:	tbnz	w11, #6, 40b404 <feof@plt+0x7b64>
  40b3ec:	ldrb	w10, [x9]
  40b3f0:	cbz	x10, 40b8f4 <feof@plt+0x8054>
  40b3f4:	ldrh	w8, [x21, x10, lsl #1]
  40b3f8:	add	x9, x9, #0x1
  40b3fc:	tbz	w8, #6, 40b3ec <feof@plt+0x7b4c>
  40b400:	sub	x8, x9, #0x1
  40b404:	cmp	w10, #0x9
  40b408:	b.eq	40b414 <feof@plt+0x7b74>  // b.none
  40b40c:	cmp	w10, #0x20
  40b410:	b.ne	40b8f8 <feof@plt+0x8058>  // b.any
  40b414:	sub	x25, x8, x26
  40b418:	add	x22, x8, #0x1
  40b41c:	strb	wzr, [x8], #2
  40b420:	b	40b42c <feof@plt+0x7b8c>
  40b424:	add	x22, x22, #0x1
  40b428:	add	x8, x8, #0x1
  40b42c:	ldrb	w10, [x22]
  40b430:	cmp	w10, #0x20
  40b434:	b.eq	40b424 <feof@plt+0x7b84>  // b.none
  40b438:	cmp	w10, #0x9
  40b43c:	b.eq	40b424 <feof@plt+0x7b84>  // b.none
  40b440:	ldrh	w11, [x21, x10, lsl #1]
  40b444:	tst	w11, w12
  40b448:	b.eq	40b9b4 <feof@plt+0x8114>  // b.none
  40b44c:	mov	x9, x22
  40b450:	cbz	w10, 40b474 <feof@plt+0x7bd4>
  40b454:	mov	x9, x22
  40b458:	tbnz	w11, #6, 40b474 <feof@plt+0x7bd4>
  40b45c:	mov	x9, x8
  40b460:	ldrb	w8, [x8]
  40b464:	cbz	x8, 40b474 <feof@plt+0x7bd4>
  40b468:	ldrh	w10, [x21, x8, lsl #1]
  40b46c:	add	x8, x9, #0x1
  40b470:	tbz	w10, #6, 40b45c <feof@plt+0x7bbc>
  40b474:	cmp	x9, x27
  40b478:	b.ne	40b9cc <feof@plt+0x812c>  // b.any
  40b47c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40b480:	ldr	x23, [x8, #1552]
  40b484:	sturb	wzr, [x24, #-1]
  40b488:	cbz	x23, 40b8c0 <feof@plt+0x8020>
  40b48c:	mov	x27, x23
  40b490:	b	40b49c <feof@plt+0x7bfc>
  40b494:	ldr	x27, [x27, #24]
  40b498:	cbz	x27, 40b8c0 <feof@plt+0x8020>
  40b49c:	ldr	w8, [x27, #32]
  40b4a0:	cmp	w8, w25
  40b4a4:	b.ne	40b494 <feof@plt+0x7bf4>  // b.any
  40b4a8:	ldr	x0, [x27]
  40b4ac:	mov	x1, x26
  40b4b0:	bl	403640 <strcmp@plt>
  40b4b4:	cbnz	w0, 40b494 <feof@plt+0x7bf4>
  40b4b8:	mov	x0, x26
  40b4bc:	mov	x1, x22
  40b4c0:	bl	403640 <strcmp@plt>
  40b4c4:	mov	x25, x24
  40b4c8:	cbz	w0, 40b1ec <feof@plt+0x794c>
  40b4cc:	ldr	x0, [x23]
  40b4d0:	mov	x1, x22
  40b4d4:	bl	403640 <strcmp@plt>
  40b4d8:	cbz	w0, 40b910 <feof@plt+0x8070>
  40b4dc:	ldr	x23, [x23, #24]
  40b4e0:	cbnz	x23, 40b4cc <feof@plt+0x7c2c>
  40b4e4:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40b4e8:	ldr	w8, [x8, #120]
  40b4ec:	cbz	w8, 40b50c <feof@plt+0x7c6c>
  40b4f0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40b4f4:	ldr	x0, [x8, #1096]
  40b4f8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b4fc:	add	x1, x1, #0x74b
  40b500:	mov	x2, x26
  40b504:	mov	x3, x22
  40b508:	bl	429778 <feof@plt+0x25ed8>
  40b50c:	ldr	x8, [x27, #16]
  40b510:	mov	x0, x22
  40b514:	ldr	x1, [x8]
  40b518:	ldr	w8, [x29, #8]
  40b51c:	and	w2, w8, #0x1
  40b520:	bl	40c1f8 <feof@plt+0x8958>
  40b524:	ldrb	w8, [x27, #37]
  40b528:	cbz	w8, 40b538 <feof@plt+0x7c98>
  40b52c:	ldr	x8, [x27, #16]
  40b530:	ldr	x0, [x8]
  40b534:	bl	4031d0 <free@plt>
  40b538:	ldr	x8, [x27, #16]
  40b53c:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40b540:	add	x9, x9, #0x23b
  40b544:	mov	x25, x24
  40b548:	str	x9, [x8]
  40b54c:	strb	wzr, [x27, #37]
  40b550:	b	40b1ec <feof@plt+0x794c>
  40b554:	add	x22, x22, #0x1
  40b558:	ldrb	w9, [x22, #1]
  40b55c:	mov	x25, x22
  40b560:	cbz	w9, 40b930 <feof@plt+0x8090>
  40b564:	and	w8, w8, #0xff
  40b568:	cmp	w8, #0xa
  40b56c:	b.eq	40b57c <feof@plt+0x7cdc>  // b.none
  40b570:	cbz	w8, 40b594 <feof@plt+0x7cf4>
  40b574:	ldrb	w8, [x25, #1]!
  40b578:	b	40b564 <feof@plt+0x7cc4>
  40b57c:	ldrb	w8, [x25, #1]
  40b580:	cbz	w8, 40b594 <feof@plt+0x7cf4>
  40b584:	cmp	w8, #0xa
  40b588:	b.eq	40b594 <feof@plt+0x7cf4>  // b.none
  40b58c:	add	x25, x25, #0x1
  40b590:	b	40b564 <feof@plt+0x7cc4>
  40b594:	sub	x23, x25, x22
  40b598:	add	w8, w23, #0x1
  40b59c:	sxtw	x0, w8
  40b5a0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40b5a4:	sxtw	x24, w23
  40b5a8:	mov	x1, x22
  40b5ac:	mov	x2, x24
  40b5b0:	mov	x27, x0
  40b5b4:	bl	402fc0 <memcpy@plt>
  40b5b8:	mov	x8, x27
  40b5bc:	mov	x9, x27
  40b5c0:	strb	wzr, [x27, x24]
  40b5c4:	ldrb	w10, [x9]
  40b5c8:	cmp	w10, #0x23
  40b5cc:	b.eq	40b5f0 <feof@plt+0x7d50>  // b.none
  40b5d0:	cmp	w10, #0x5c
  40b5d4:	b.ne	40b604 <feof@plt+0x7d64>  // b.any
  40b5d8:	ldrb	w11, [x9, #1]
  40b5dc:	cmp	w11, #0xa
  40b5e0:	b.ne	40b608 <feof@plt+0x7d68>  // b.any
  40b5e4:	add	x9, x9, #0x2
  40b5e8:	b	40b5c4 <feof@plt+0x7d24>
  40b5ec:	ldrb	w10, [x9, #1]!
  40b5f0:	ands	w10, w10, #0xff
  40b5f4:	b.eq	40b5c4 <feof@plt+0x7d24>  // b.none
  40b5f8:	cmp	w10, #0xa
  40b5fc:	b.ne	40b5ec <feof@plt+0x7d4c>  // b.any
  40b600:	b	40b5c4 <feof@plt+0x7d24>
  40b604:	cbz	w10, 40b614 <feof@plt+0x7d74>
  40b608:	add	x9, x9, #0x1
  40b60c:	strb	w10, [x8], #1
  40b610:	b	40b5c4 <feof@plt+0x7d24>
  40b614:	ldrb	w9, [x26]
  40b618:	strb	wzr, [x8]
  40b61c:	cmp	w9, #0x2a
  40b620:	b.ne	40b660 <feof@plt+0x7dc0>  // b.any
  40b624:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b628:	mov	x0, x26
  40b62c:	add	x1, x1, #0x7b9
  40b630:	bl	403640 <strcmp@plt>
  40b634:	cbz	w0, 40b6ac <feof@plt+0x7e0c>
  40b638:	ldr	w8, [x29, #8]
  40b63c:	add	x0, x26, #0x1
  40b640:	mov	x1, x27
  40b644:	and	w2, w8, #0x1
  40b648:	bl	40c1f8 <feof@plt+0x8958>
  40b64c:	mov	x0, x27
  40b650:	bl	4031d0 <free@plt>
  40b654:	ldrb	w8, [x26]
  40b658:	cbnz	w8, 40b1ec <feof@plt+0x794c>
  40b65c:	b	40b6bc <feof@plt+0x7e1c>
  40b660:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40b664:	ldrsw	x8, [x23, #1488]
  40b668:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40b66c:	ldr	x0, [x22, #1480]
  40b670:	lsl	x8, x8, #5
  40b674:	add	x1, x8, #0x40
  40b678:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  40b67c:	ldrsw	x8, [x23, #1488]
  40b680:	str	x0, [x22, #1480]
  40b684:	movi	v0.2d, #0x0
  40b688:	add	x9, x0, x8, lsl #5
  40b68c:	add	x8, x8, #0x1
  40b690:	stp	x26, x27, [x9]
  40b694:	str	w8, [x23, #1488]
  40b698:	add	x8, x0, x8, lsl #5
  40b69c:	stp	q0, q0, [x8]
  40b6a0:	ldrb	w8, [x26]
  40b6a4:	cbnz	w8, 40b1ec <feof@plt+0x794c>
  40b6a8:	b	40b6bc <feof@plt+0x7e1c>
  40b6ac:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40b6b0:	str	x27, [x8, #1352]
  40b6b4:	ldrb	w8, [x26]
  40b6b8:	cbnz	w8, 40b1ec <feof@plt+0x794c>
  40b6bc:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40b6c0:	str	x27, [x8, #1352]
  40b6c4:	b	40b1ec <feof@plt+0x794c>
  40b6c8:	ldrb	w8, [x25, #8]
  40b6cc:	cmp	w8, #0x20
  40b6d0:	b.eq	40b6dc <feof@plt+0x7e3c>  // b.none
  40b6d4:	cmp	w8, #0x9
  40b6d8:	b.ne	40b364 <feof@plt+0x7ac4>  // b.any
  40b6dc:	add	x22, x25, #0xa
  40b6e0:	ldurb	w8, [x22, #-1]
  40b6e4:	cmp	w8, #0x9
  40b6e8:	b.eq	40b6fc <feof@plt+0x7e5c>  // b.none
  40b6ec:	cmp	w8, #0x3c
  40b6f0:	b.eq	40b740 <feof@plt+0x7ea0>  // b.none
  40b6f4:	cmp	w8, #0x20
  40b6f8:	b.ne	40b948 <feof@plt+0x80a8>  // b.any
  40b6fc:	add	x22, x22, #0x1
  40b700:	b	40b6e0 <feof@plt+0x7e40>
  40b704:	ldrb	w8, [x25, #14]
  40b708:	cmp	w8, #0x20
  40b70c:	b.eq	40b718 <feof@plt+0x7e78>  // b.none
  40b710:	cmp	w8, #0x9
  40b714:	b.ne	40b37c <feof@plt+0x7adc>  // b.any
  40b718:	add	x22, x25, #0x10
  40b71c:	ldurb	w8, [x22, #-1]
  40b720:	cmp	w8, #0x9
  40b724:	b.eq	40b738 <feof@plt+0x7e98>  // b.none
  40b728:	cmp	w8, #0x3c
  40b72c:	b.eq	40b774 <feof@plt+0x7ed4>  // b.none
  40b730:	cmp	w8, #0x20
  40b734:	b.ne	40b948 <feof@plt+0x80a8>  // b.any
  40b738:	add	x22, x22, #0x1
  40b73c:	b	40b71c <feof@plt+0x7e7c>
  40b740:	ldurb	w8, [x27, #-1]
  40b744:	cmp	w8, #0x3e
  40b748:	b.ne	40b948 <feof@plt+0x80a8>  // b.any
  40b74c:	sturb	wzr, [x27, #-1]
  40b750:	ldrb	w8, [x22]
  40b754:	cmp	w8, #0x2f
  40b758:	b.ne	40b7b0 <feof@plt+0x7f10>  // b.any
  40b75c:	mov	w1, #0x4                   	// #4
  40b760:	mov	x0, x22
  40b764:	bl	403290 <access@plt>
  40b768:	cbz	w0, 40b860 <feof@plt+0x7fc0>
  40b76c:	mov	x0, xzr
  40b770:	b	40b868 <feof@plt+0x7fc8>
  40b774:	ldurb	w8, [x27, #-1]
  40b778:	cmp	w8, #0x3e
  40b77c:	b.ne	40b948 <feof@plt+0x80a8>  // b.any
  40b780:	sturb	wzr, [x27, #-1]
  40b784:	ldrb	w8, [x22]
  40b788:	cmp	w8, #0x2f
  40b78c:	b.ne	40b7f0 <feof@plt+0x7f50>  // b.any
  40b790:	mov	w1, #0x4                   	// #4
  40b794:	mov	x0, x22
  40b798:	bl	403290 <access@plt>
  40b79c:	cbnz	w0, 40b830 <feof@plt+0x7f90>
  40b7a0:	mov	x0, x22
  40b7a4:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  40b7a8:	cbnz	x0, 40b870 <feof@plt+0x7fd0>
  40b7ac:	b	40b830 <feof@plt+0x7f90>
  40b7b0:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40b7b4:	add	x8, x8, #0x23b
  40b7b8:	mov	x0, x22
  40b7bc:	stp	x22, x8, [sp, #16]
  40b7c0:	bl	4030b0 <strlen@plt>
  40b7c4:	str	w0, [sp, #32]
  40b7c8:	sxtw	x2, w0
  40b7cc:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40b7d0:	adrp	x3, 412000 <feof@plt+0xe760>
  40b7d4:	add	x4, sp, #0x10
  40b7d8:	mov	w1, #0x1                   	// #1
  40b7dc:	add	x0, x0, #0x4b8
  40b7e0:	add	x3, x3, #0xab8
  40b7e4:	stur	d8, [sp, #36]
  40b7e8:	bl	4126ac <feof@plt+0xee0c>
  40b7ec:	b	40b868 <feof@plt+0x7fc8>
  40b7f0:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40b7f4:	add	x8, x8, #0x23b
  40b7f8:	mov	x0, x22
  40b7fc:	stp	x22, x8, [sp, #16]
  40b800:	bl	4030b0 <strlen@plt>
  40b804:	str	w0, [sp, #32]
  40b808:	sxtw	x2, w0
  40b80c:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40b810:	adrp	x3, 412000 <feof@plt+0xe760>
  40b814:	add	x4, sp, #0x10
  40b818:	mov	w1, #0x1                   	// #1
  40b81c:	add	x0, x0, #0x4b8
  40b820:	add	x3, x3, #0xab8
  40b824:	stur	d8, [sp, #36]
  40b828:	bl	4126ac <feof@plt+0xee0c>
  40b82c:	cbnz	x0, 40b870 <feof@plt+0x7fd0>
  40b830:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40b834:	ldr	w8, [x8, #120]
  40b838:	mov	x25, x24
  40b83c:	cbz	w8, 40b1ec <feof@plt+0x794c>
  40b840:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40b844:	ldr	x0, [x8, #1096]
  40b848:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b84c:	add	x1, x1, #0x68b
  40b850:	mov	x2, x22
  40b854:	bl	429778 <feof@plt+0x25ed8>
  40b858:	mov	x25, x24
  40b85c:	b	40b1ec <feof@plt+0x794c>
  40b860:	mov	x0, x22
  40b864:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  40b868:	cmp	x0, #0x0
  40b86c:	csel	x0, x22, x0, eq  // eq = none
  40b870:	ldr	w8, [x29, #8]
  40b874:	mov	w1, wzr
  40b878:	and	w2, w8, #0x1
  40b87c:	bl	40b0a0 <feof@plt+0x7800>
  40b880:	mov	x25, x24
  40b884:	b	40b1ec <feof@plt+0x794c>
  40b888:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40b88c:	ldr	x8, [x8, #1352]
  40b890:	cbz	x8, 40b9e4 <feof@plt+0x8144>
  40b894:	mov	x0, x28
  40b898:	bl	4031d0 <free@plt>
  40b89c:	ldp	x20, x19, [sp, #240]
  40b8a0:	ldp	x22, x21, [sp, #224]
  40b8a4:	ldp	x24, x23, [sp, #208]
  40b8a8:	ldp	x26, x25, [sp, #192]
  40b8ac:	ldp	x28, x27, [sp, #176]
  40b8b0:	ldp	x29, x30, [sp, #160]
  40b8b4:	ldr	d8, [sp, #144]
  40b8b8:	add	sp, sp, #0x100
  40b8bc:	ret
  40b8c0:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40b8c4:	ldr	w0, [x8, #400]
  40b8c8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b8cc:	add	x1, x1, #0x6e6
  40b8d0:	mov	x2, x26
  40b8d4:	bl	42c008 <feof@plt+0x28768>
  40b8d8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40b8dc:	ldr	w0, [x8, #400]
  40b8e0:	mvn	x8, x28
  40b8e4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b8e8:	add	x2, x8, x22
  40b8ec:	add	x1, x1, #0x78f
  40b8f0:	bl	42c008 <feof@plt+0x28768>
  40b8f4:	mov	x8, x9
  40b8f8:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40b8fc:	ldr	w0, [x9, #400]
  40b900:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b904:	sub	x2, x8, x28
  40b908:	add	x1, x1, #0x6b1
  40b90c:	bl	42c008 <feof@plt+0x28768>
  40b910:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40b914:	ldr	w0, [x8, #400]
  40b918:	ldr	x2, [sp, #8]
  40b91c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b920:	add	x1, x1, #0x710
  40b924:	mov	x3, x26
  40b928:	mov	x4, x22
  40b92c:	bl	42c008 <feof@plt+0x28768>
  40b930:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40b934:	ldr	w0, [x8, #400]
  40b938:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b93c:	sub	x2, x22, x28
  40b940:	add	x1, x1, #0x78f
  40b944:	bl	42c008 <feof@plt+0x28768>
  40b948:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40b94c:	ldr	w0, [x8, #400]
  40b950:	sub	x8, x22, x28
  40b954:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b958:	add	x2, x8, #0x1
  40b95c:	add	x1, x1, #0x646
  40b960:	bl	42c008 <feof@plt+0x28768>
  40b964:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40b968:	ldr	w0, [x8, #400]
  40b96c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b970:	add	x1, x1, #0x800
  40b974:	mov	x2, x19
  40b978:	bl	42c008 <feof@plt+0x28768>
  40b97c:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40b980:	ldr	w0, [x8, #400]
  40b984:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b988:	sub	x2, x25, x28
  40b98c:	add	x1, x1, #0x761
  40b990:	bl	42c008 <feof@plt+0x28768>
  40b994:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40b998:	ldr	w0, [x8, #400]
  40b99c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b9a0:	sub	x2, x26, x28
  40b9a4:	add	x1, x1, #0x6b1
  40b9a8:	bl	42c008 <feof@plt+0x28768>
  40b9ac:	mov	x8, x26
  40b9b0:	b	40b8f8 <feof@plt+0x8058>
  40b9b4:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40b9b8:	ldr	w0, [x8, #400]
  40b9bc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b9c0:	sub	x2, x22, x28
  40b9c4:	add	x1, x1, #0x6b1
  40b9c8:	bl	42c008 <feof@plt+0x28768>
  40b9cc:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40b9d0:	ldr	w0, [x8, #400]
  40b9d4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b9d8:	sub	x2, x9, x28
  40b9dc:	add	x1, x1, #0x6b1
  40b9e0:	bl	42c008 <feof@plt+0x28768>
  40b9e4:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40b9e8:	ldr	w0, [x8, #400]
  40b9ec:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40b9f0:	add	x1, x1, #0x7c7
  40b9f4:	bl	42c008 <feof@plt+0x28768>
  40b9f8:	sub	sp, sp, #0x90
  40b9fc:	stp	x29, x30, [sp, #48]
  40ba00:	stp	x28, x27, [sp, #64]
  40ba04:	stp	x26, x25, [sp, #80]
  40ba08:	stp	x24, x23, [sp, #96]
  40ba0c:	stp	x22, x21, [sp, #112]
  40ba10:	stp	x20, x19, [sp, #128]
  40ba14:	add	x29, sp, #0x30
  40ba18:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ba1c:	ldr	x8, [x8, #1552]
  40ba20:	cbnz	x8, 40be58 <feof@plt+0x85b8>
  40ba24:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40ba28:	ldr	w8, [x8, #120]
  40ba2c:	cbz	w8, 40ba44 <feof@plt+0x81a4>
  40ba30:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ba34:	ldr	x0, [x8, #1096]
  40ba38:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40ba3c:	add	x1, x1, #0x81e
  40ba40:	bl	429778 <feof@plt+0x25ed8>
  40ba44:	mov	w0, #0x1                   	// #1
  40ba48:	mov	w1, #0x30                  	// #48
  40ba4c:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  40ba50:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x42fc>
  40ba54:	adrp	x11, 480000 <_obstack_memory_used@@Base+0x42fc>
  40ba58:	add	x10, x10, #0x88b
  40ba5c:	add	x11, x11, #0x898
  40ba60:	mov	x12, x0
  40ba64:	adrp	x24, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40ba68:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ba6c:	mov	w13, #0xc                   	// #12
  40ba70:	mov	w8, #0x840                 	// #2112
  40ba74:	str	x10, [x0]
  40ba78:	str	x11, [x12, #8]!
  40ba7c:	add	x24, x24, #0x578
  40ba80:	str	x0, [x9, #1936]
  40ba84:	str	w13, [x0, #32]
  40ba88:	str	x11, [x0, #40]
  40ba8c:	stp	x12, xzr, [x0, #16]
  40ba90:	add	x9, x24, x8
  40ba94:	sub	x10, x9, #0x30
  40ba98:	subs	x8, x8, #0x30
  40ba9c:	stur	x0, [x9, #-24]
  40baa0:	mov	x0, x10
  40baa4:	b.ne	40ba90 <feof@plt+0x81f0>  // b.any
  40baa8:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40baac:	ldr	x20, [x8, #3512]
  40bab0:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40bab4:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40bab8:	add	x26, x26, #0x508
  40babc:	ldrb	w23, [x20]
  40bac0:	add	x19, x19, #0x4f0
  40bac4:	cbz	w23, 40bce8 <feof@plt+0x8448>
  40bac8:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bacc:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bad0:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bad4:	mov	w8, #0x1                   	// #1
  40bad8:	add	x21, x21, #0x835
  40badc:	add	x22, x22, #0x83b
  40bae0:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40bae4:	add	x28, x28, #0x84c
  40bae8:	b	40bb14 <feof@plt+0x8274>
  40baec:	add	x9, x8, #0x1
  40baf0:	str	x9, [x27, #1288]
  40baf4:	strb	w23, [x8]
  40baf8:	ldrb	w8, [x20]
  40bafc:	mov	w9, #0x1                   	// #1
  40bb00:	cmp	w8, #0x20
  40bb04:	cset	w8, eq  // eq = none
  40bb08:	add	x20, x20, x9
  40bb0c:	ldrb	w23, [x20]
  40bb10:	cbz	w23, 40bce8 <feof@plt+0x8448>
  40bb14:	cbz	w8, 40bbec <feof@plt+0x834c>
  40bb18:	and	w9, w23, #0xff
  40bb1c:	cmp	w9, #0x2d
  40bb20:	b.ne	40bbec <feof@plt+0x834c>  // b.any
  40bb24:	mov	w2, #0x5                   	// #5
  40bb28:	mov	x0, x20
  40bb2c:	mov	x1, x21
  40bb30:	bl	403450 <strncmp@plt>
  40bb34:	cbnz	w0, 40bc10 <feof@plt+0x8370>
  40bb38:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40bb3c:	add	x8, x8, #0x542
  40bb40:	stp	x8, xzr, [sp, #32]
  40bb44:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bb48:	add	x8, x8, #0x95f
  40bb4c:	stp	x8, x21, [sp, #16]
  40bb50:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bb54:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bb58:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  40bb5c:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bb60:	adrp	x4, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bb64:	adrp	x6, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bb68:	add	x8, x8, #0x941
  40bb6c:	add	x0, x0, #0x8c7
  40bb70:	mov	x1, x21
  40bb74:	add	x2, x2, #0x9d0
  40bb78:	add	x3, x3, #0x843
  40bb7c:	add	x4, x4, #0x8ea
  40bb80:	mov	x5, x21
  40bb84:	add	x6, x6, #0x926
  40bb88:	mov	x7, x22
  40bb8c:	stp	x8, x22, [sp]
  40bb90:	bl	4799ac <feof@plt+0x7610c>
  40bb94:	mov	x25, x0
  40bb98:	bl	4030b0 <strlen@plt>
  40bb9c:	mov	x23, x0
  40bba0:	ldp	x0, x8, [x26]
  40bba4:	sub	x8, x8, x0
  40bba8:	cmp	x8, x23
  40bbac:	b.cs	40bbc0 <feof@plt+0x8320>  // b.hs, b.nlast
  40bbb0:	mov	x0, x19
  40bbb4:	mov	x1, x23
  40bbb8:	bl	47bae8 <_obstack_newchunk@@Base>
  40bbbc:	ldr	x0, [x19, #24]
  40bbc0:	mov	x1, x25
  40bbc4:	mov	x2, x23
  40bbc8:	bl	402fc0 <memcpy@plt>
  40bbcc:	ldr	x8, [x27, #1288]
  40bbd0:	mov	x0, x25
  40bbd4:	add	x8, x8, x23
  40bbd8:	str	x8, [x27, #1288]
  40bbdc:	bl	4031d0 <free@plt>
  40bbe0:	mov	w8, wzr
  40bbe4:	mov	w9, #0x5                   	// #5
  40bbe8:	b	40bb08 <feof@plt+0x8268>
  40bbec:	cbz	w8, 40bc10 <feof@plt+0x8370>
  40bbf0:	and	w8, w23, #0xff
  40bbf4:	cmp	w8, #0x6c
  40bbf8:	b.ne	40bc10 <feof@plt+0x8370>  // b.any
  40bbfc:	mov	w2, #0xa                   	// #10
  40bc00:	mov	x0, x20
  40bc04:	mov	x1, x28
  40bc08:	bl	403450 <strncmp@plt>
  40bc0c:	cbz	w0, 40bc34 <feof@plt+0x8394>
  40bc10:	ldp	x8, x9, [x26]
  40bc14:	cmp	x9, x8
  40bc18:	b.ne	40baec <feof@plt+0x824c>  // b.any
  40bc1c:	mov	w1, #0x1                   	// #1
  40bc20:	mov	x0, x19
  40bc24:	bl	47bae8 <_obstack_newchunk@@Base>
  40bc28:	ldrb	w23, [x20]
  40bc2c:	ldr	x8, [x19, #24]
  40bc30:	b	40baec <feof@plt+0x824c>
  40bc34:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40bc38:	add	x8, x8, #0x542
  40bc3c:	stp	x8, xzr, [sp, #32]
  40bc40:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bc44:	add	x8, x8, #0x95f
  40bc48:	stp	x8, x28, [sp, #16]
  40bc4c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bc50:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bc54:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  40bc58:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bc5c:	adrp	x4, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bc60:	adrp	x6, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bc64:	add	x8, x8, #0x941
  40bc68:	add	x0, x0, #0x8c7
  40bc6c:	mov	x1, x28
  40bc70:	add	x2, x2, #0x9d0
  40bc74:	add	x3, x3, #0x857
  40bc78:	add	x4, x4, #0x8ea
  40bc7c:	mov	x5, x28
  40bc80:	add	x6, x6, #0x926
  40bc84:	mov	x7, x22
  40bc88:	stp	x8, x22, [sp]
  40bc8c:	bl	4799ac <feof@plt+0x7610c>
  40bc90:	mov	x25, x0
  40bc94:	bl	4030b0 <strlen@plt>
  40bc98:	mov	x23, x0
  40bc9c:	ldp	x0, x8, [x26]
  40bca0:	sub	x8, x8, x0
  40bca4:	cmp	x8, x23
  40bca8:	b.cs	40bcbc <feof@plt+0x841c>  // b.hs, b.nlast
  40bcac:	mov	x0, x19
  40bcb0:	mov	x1, x23
  40bcb4:	bl	47bae8 <_obstack_newchunk@@Base>
  40bcb8:	ldr	x0, [x19, #24]
  40bcbc:	mov	x1, x25
  40bcc0:	mov	x2, x23
  40bcc4:	bl	402fc0 <memcpy@plt>
  40bcc8:	ldr	x8, [x27, #1288]
  40bccc:	mov	x0, x25
  40bcd0:	add	x8, x8, x23
  40bcd4:	str	x8, [x27, #1288]
  40bcd8:	bl	4031d0 <free@plt>
  40bcdc:	mov	w8, wzr
  40bce0:	mov	w9, #0xa                   	// #10
  40bce4:	b	40bb08 <feof@plt+0x8268>
  40bce8:	ldp	x8, x9, [x26]
  40bcec:	cmp	x9, x8
  40bcf0:	b.ne	40bd04 <feof@plt+0x8464>  // b.any
  40bcf4:	mov	w1, #0x1                   	// #1
  40bcf8:	mov	x0, x19
  40bcfc:	bl	47bae8 <_obstack_newchunk@@Base>
  40bd00:	ldr	x8, [x19, #24]
  40bd04:	adrp	x25, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40bd08:	add	x9, x8, #0x1
  40bd0c:	add	x25, x25, #0x500
  40bd10:	str	x9, [x25, #8]
  40bd14:	strb	wzr, [x8]
  40bd18:	ldp	x8, x9, [x25]
  40bd1c:	cmp	x9, x8
  40bd20:	b.ne	40bd34 <feof@plt+0x8494>  // b.any
  40bd24:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40bd28:	ldrb	w11, [x10, #1344]
  40bd2c:	orr	w11, w11, #0x2
  40bd30:	strb	w11, [x10, #1344]
  40bd34:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40bd38:	add	x23, x23, #0x4f8
  40bd3c:	ldr	x10, [x23, #40]
  40bd40:	ldr	x11, [x23]
  40bd44:	ldr	x12, [x23, #24]
  40bd48:	add	x9, x10, x9
  40bd4c:	bic	x9, x9, x10
  40bd50:	sub	x13, x12, x11
  40bd54:	sub	x10, x9, x11
  40bd58:	cmp	x10, x13
  40bd5c:	csel	x9, x12, x9, hi  // hi = pmore
  40bd60:	sub	x10, x12, x9
  40bd64:	cmp	x10, #0x24
  40bd68:	adrp	x10, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40bd6c:	stp	x9, x9, [x23, #8]
  40bd70:	str	x8, [x10, #3512]
  40bd74:	b.hi	40bd88 <feof@plt+0x84e8>  // b.pmore
  40bd78:	mov	w1, #0x25                  	// #37
  40bd7c:	mov	x0, x19
  40bd80:	bl	47bae8 <_obstack_newchunk@@Base>
  40bd84:	ldr	x9, [x19, #24]
  40bd88:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x42fc>
  40bd8c:	add	x8, x8, #0x865
  40bd90:	ldur	x10, [x8, #29]
  40bd94:	ldp	q1, q0, [x8]
  40bd98:	adrp	x27, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40bd9c:	stur	x10, [x9, #29]
  40bda0:	stp	q1, q0, [x9]
  40bda4:	ldr	x8, [x26]
  40bda8:	ldr	x22, [x27, #1280]
  40bdac:	add	x21, x8, #0x25
  40bdb0:	mov	x0, x22
  40bdb4:	str	x21, [x26]
  40bdb8:	bl	4030b0 <strlen@plt>
  40bdbc:	ldr	x8, [x26, #8]
  40bdc0:	add	x1, x0, #0x1
  40bdc4:	mov	x20, x0
  40bdc8:	sub	x8, x8, x21
  40bdcc:	cmp	x8, x1
  40bdd0:	b.cs	40bde4 <feof@plt+0x8544>  // b.hs, b.nlast
  40bdd4:	mov	x0, x19
  40bdd8:	bl	47bae8 <_obstack_newchunk@@Base>
  40bddc:	ldr	x21, [x19, #24]
  40bde0:	ldr	x22, [x27, #1280]
  40bde4:	mov	x0, x21
  40bde8:	mov	x1, x22
  40bdec:	mov	x2, x20
  40bdf0:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40bdf4:	bl	402fc0 <memcpy@plt>
  40bdf8:	ldr	x8, [x25, #8]
  40bdfc:	add	x8, x8, x20
  40be00:	add	x9, x8, #0x1
  40be04:	str	x9, [x25, #8]
  40be08:	strb	wzr, [x8]
  40be0c:	ldp	x8, x9, [x25]
  40be10:	cmp	x9, x8
  40be14:	b.ne	40be28 <feof@plt+0x8588>  // b.any
  40be18:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40be1c:	ldrb	w11, [x10, #1344]
  40be20:	orr	w11, w11, #0x2
  40be24:	strb	w11, [x10, #1344]
  40be28:	ldr	x10, [x23, #40]
  40be2c:	ldr	x11, [x23]
  40be30:	ldr	x12, [x23, #24]
  40be34:	str	x8, [x27, #1280]
  40be38:	add	x8, x10, x9
  40be3c:	bic	x8, x8, x10
  40be40:	sub	x9, x12, x11
  40be44:	sub	x10, x8, x11
  40be48:	cmp	x10, x9
  40be4c:	csel	x8, x12, x8, hi  // hi = pmore
  40be50:	stp	x8, x8, [x23, #8]
  40be54:	str	x24, [x19, #1552]
  40be58:	ldp	x20, x19, [sp, #128]
  40be5c:	ldp	x22, x21, [sp, #112]
  40be60:	ldp	x24, x23, [sp, #96]
  40be64:	ldp	x26, x25, [sp, #80]
  40be68:	ldp	x28, x27, [sp, #64]
  40be6c:	ldp	x29, x30, [sp, #48]
  40be70:	add	sp, sp, #0x90
  40be74:	ret
  40be78:	sub	sp, sp, #0xa0
  40be7c:	stp	x29, x30, [sp, #96]
  40be80:	stp	x24, x23, [sp, #112]
  40be84:	stp	x22, x21, [sp, #128]
  40be88:	stp	x20, x19, [sp, #144]
  40be8c:	add	x29, sp, #0x60
  40be90:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40be94:	ldr	x8, [x20, #1184]
  40be98:	cbz	x8, 40bea0 <feof@plt+0x8600>
  40be9c:	str	wzr, [x8, #4]
  40bea0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40bea4:	ldr	x8, [x8, #2040]
  40bea8:	cbz	x8, 40beb0 <feof@plt+0x8610>
  40beac:	str	wzr, [x8, #4]
  40beb0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40beb4:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40beb8:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40bebc:	adrp	x11, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40bec0:	adrp	x12, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40bec4:	adrp	x13, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40bec8:	adrp	x14, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40becc:	mov	w1, wzr
  40bed0:	mov	x2, xzr
  40bed4:	strb	wzr, [x8, #1988]
  40bed8:	str	wzr, [x9, #1992]
  40bedc:	strb	wzr, [x10, #1996]
  40bee0:	strb	wzr, [x11, #2000]
  40bee4:	strb	wzr, [x12, #2004]
  40bee8:	strb	wzr, [x13, #2008]
  40beec:	str	xzr, [x14, #2016]
  40bef0:	bl	40c344 <feof@plt+0x8aa4>
  40bef4:	bl	4105cc <feof@plt+0xcd2c>
  40bef8:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  40befc:	add	x0, x0, #0x9d0
  40bf00:	mov	w1, wzr
  40bf04:	mov	x2, xzr
  40bf08:	bl	40c344 <feof@plt+0x8aa4>
  40bf0c:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40bf10:	ldr	w8, [x21, #1560]
  40bf14:	cmp	w8, #0x1
  40bf18:	b.lt	40bf7c <feof@plt+0x86dc>  // b.tstop
  40bf1c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40bf20:	ldr	x10, [x9, #1592]
  40bf24:	cmp	w8, #0x3
  40bf28:	b.cs	40bf34 <feof@plt+0x8694>  // b.hs, b.nlast
  40bf2c:	mov	x9, xzr
  40bf30:	b	40bfd0 <feof@plt+0x8730>
  40bf34:	and	x9, x8, #0xfffffffe
  40bf38:	add	x11, x10, #0x28
  40bf3c:	mov	x12, x9
  40bf40:	b	40bf50 <feof@plt+0x86b0>
  40bf44:	subs	x12, x12, #0x2
  40bf48:	add	x11, x11, #0x30
  40bf4c:	b.eq	40bf74 <feof@plt+0x86d4>  // b.none
  40bf50:	ldur	w14, [x11, #-24]
  40bf54:	ldr	w13, [x11]
  40bf58:	tbz	w14, #2, 40bf64 <feof@plt+0x86c4>
  40bf5c:	orr	w14, w14, #0x8
  40bf60:	stur	w14, [x11, #-24]
  40bf64:	tbz	w13, #2, 40bf44 <feof@plt+0x86a4>
  40bf68:	orr	w13, w13, #0x8
  40bf6c:	str	w13, [x11]
  40bf70:	b	40bf44 <feof@plt+0x86a4>
  40bf74:	cmp	x9, x8
  40bf78:	b.ne	40bfd0 <feof@plt+0x8730>  // b.any
  40bf7c:	ldr	x8, [x20, #1184]
  40bf80:	cbz	x8, 40c198 <feof@plt+0x88f8>
  40bf84:	ldr	w8, [x8, #4]
  40bf88:	cbz	w8, 40c198 <feof@plt+0x88f8>
  40bf8c:	add	w8, w8, #0x1
  40bf90:	lsl	x0, x8, #3
  40bf94:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40bf98:	ldr	x20, [x20, #1184]
  40bf9c:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40bfa0:	mov	x19, x0
  40bfa4:	add	x8, x8, #0x23b
  40bfa8:	str	x8, [x0]
  40bfac:	cbz	x20, 40c004 <feof@plt+0x8764>
  40bfb0:	ldr	w8, [x20, #4]
  40bfb4:	add	x0, x19, #0x8
  40bfb8:	add	x1, x20, #0x8
  40bfbc:	lsl	x2, x8, #3
  40bfc0:	bl	402fc0 <memcpy@plt>
  40bfc4:	ldr	w8, [x20, #4]
  40bfc8:	add	w0, w8, #0x1
  40bfcc:	b	40c008 <feof@plt+0x8768>
  40bfd0:	mov	w11, #0x18                  	// #24
  40bfd4:	madd	x10, x9, x11, x10
  40bfd8:	add	x10, x10, #0x10
  40bfdc:	b	40bff0 <feof@plt+0x8750>
  40bfe0:	add	x9, x9, #0x1
  40bfe4:	cmp	x9, x8
  40bfe8:	add	x10, x10, #0x18
  40bfec:	b.cs	40bf7c <feof@plt+0x86dc>  // b.hs, b.nlast
  40bff0:	ldr	w11, [x10]
  40bff4:	tbz	w11, #2, 40bfe0 <feof@plt+0x8740>
  40bff8:	orr	w11, w11, #0x8
  40bffc:	str	w11, [x10]
  40c000:	b	40bfe0 <feof@plt+0x8740>
  40c004:	mov	w0, #0x1                   	// #1
  40c008:	sub	x3, x29, #0x8
  40c00c:	add	x4, sp, #0x4
  40c010:	mov	w2, #0x80000               	// #524288
  40c014:	mov	x1, x19
  40c018:	mov	w20, #0x80000               	// #524288
  40c01c:	bl	41d2a0 <feof@plt+0x19a00>
  40c020:	mov	x0, x19
  40c024:	bl	4031d0 <free@plt>
  40c028:	adrp	x8, 411000 <feof@plt+0xd760>
  40c02c:	adrp	x9, 411000 <feof@plt+0xd760>
  40c030:	add	x8, x8, #0x14
  40c034:	add	x9, x9, #0xa4
  40c038:	stp	x8, x9, [sp, #8]
  40c03c:	adrp	x8, 419000 <feof@plt+0x15760>
  40c040:	add	x8, x8, #0xbb0
  40c044:	str	x8, [sp, #56]
  40c048:	ldr	w8, [sp, #4]
  40c04c:	ldur	x0, [x29, #-8]
  40c050:	mov	w9, #0x200000              	// #2097152
  40c054:	adrp	x11, 411000 <feof@plt+0xd760>
  40c058:	str	w9, [sp, #64]
  40c05c:	adrp	x9, 418000 <feof@plt+0x14760>
  40c060:	mov	w10, #0x3                   	// #3
  40c064:	add	x11, x11, #0xf0
  40c068:	add	x9, x9, #0x370
  40c06c:	cmp	w8, #0x2
  40c070:	mov	w8, #0x100000              	// #1048576
  40c074:	str	w20, [sp, #48]
  40c078:	stp	x10, x11, [sp, #32]
  40c07c:	str	x9, [sp, #72]
  40c080:	str	w8, [sp, #80]
  40c084:	b.cc	40c124 <feof@plt+0x8884>  // b.lo, b.ul, b.last
  40c088:	adrp	x19, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  40c08c:	adrp	x20, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40c090:	mov	x22, xzr
  40c094:	mov	w23, #0x1                   	// #1
  40c098:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c09c:	add	x19, x19, #0x190
  40c0a0:	add	x20, x20, #0xa0
  40c0a4:	b	40c0dc <feof@plt+0x883c>
  40c0a8:	ldr	x9, [x8, #152]
  40c0ac:	ldr	x0, [x8, #120]
  40c0b0:	add	x2, x8, #0x80
  40c0b4:	mov	w4, #0x1                   	// #1
  40c0b8:	sub	x1, x9, #0x1
  40c0bc:	mov	w3, wzr
  40c0c0:	bl	410ed8 <feof@plt+0xd638>
  40c0c4:	ldr	w8, [sp, #4]
  40c0c8:	ldur	x0, [x29, #-8]
  40c0cc:	add	x23, x23, #0x1
  40c0d0:	add	x22, x22, #0x58
  40c0d4:	cmp	x23, x8
  40c0d8:	b.cs	40c124 <feof@plt+0x8884>  // b.hs, b.nlast
  40c0dc:	add	x8, x0, x22
  40c0e0:	mov	x2, x8
  40c0e4:	ldr	x9, [x2, #88]!
  40c0e8:	sub	x10, x9, #0x256
  40c0ec:	cmp	x10, #0x3
  40c0f0:	b.cc	40c0a8 <feof@plt+0x8808>  // b.lo, b.ul, b.last
  40c0f4:	cmp	x9, #0x525
  40c0f8:	b.eq	40c0a8 <feof@plt+0x8808>  // b.none
  40c0fc:	cmp	x9, #0x59a
  40c100:	b.eq	40c1b0 <feof@plt+0x8910>  // b.none
  40c104:	ldr	x6, [x24, #632]
  40c108:	add	x5, sp, #0x8
  40c10c:	mov	w4, #0x80000               	// #524288
  40c110:	mov	x0, x19
  40c114:	mov	x1, x20
  40c118:	mov	w3, wzr
  40c11c:	bl	41e92c <feof@plt+0x1b08c>
  40c120:	b	40c0c4 <feof@plt+0x8824>
  40c124:	bl	4031d0 <free@plt>
  40c128:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c12c:	ldrsw	x9, [x8, #1576]
  40c130:	cbz	w9, 40c164 <feof@plt+0x88c4>
  40c134:	ldr	w10, [x21, #1560]
  40c138:	cmp	w9, w10
  40c13c:	b.ne	40c180 <feof@plt+0x88e0>  // b.any
  40c140:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c144:	ldr	x0, [x19, #1592]
  40c148:	lsl	w10, w9, #1
  40c14c:	str	w10, [x8, #1576]
  40c150:	add	x8, x9, x9, lsl #1
  40c154:	lsl	x1, x8, #4
  40c158:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  40c15c:	str	x0, [x19, #1592]
  40c160:	b	40c188 <feof@plt+0x88e8>
  40c164:	mov	w9, #0x10                  	// #16
  40c168:	mov	w0, #0x180                 	// #384
  40c16c:	str	w9, [x8, #1576]
  40c170:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40c174:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c178:	str	x0, [x8, #1592]
  40c17c:	b	40c188 <feof@plt+0x88e8>
  40c180:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c184:	ldr	x0, [x8, #1592]
  40c188:	ldrsw	x8, [x21, #1560]
  40c18c:	mov	w9, #0x18                  	// #24
  40c190:	mul	x8, x8, x9
  40c194:	str	xzr, [x0, x8]
  40c198:	ldp	x20, x19, [sp, #144]
  40c19c:	ldp	x22, x21, [sp, #128]
  40c1a0:	ldp	x24, x23, [sp, #112]
  40c1a4:	ldp	x29, x30, [sp, #96]
  40c1a8:	add	sp, sp, #0xa0
  40c1ac:	ret
  40c1b0:	add	x8, x0, x22
  40c1b4:	ldr	x19, [x8, #104]
  40c1b8:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40c1bc:	add	x1, x1, #0x935
  40c1c0:	mov	x0, x19
  40c1c4:	bl	403640 <strcmp@plt>
  40c1c8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40c1cc:	ldr	w8, [x8, #400]
  40c1d0:	cbnz	w0, 40c1e4 <feof@plt+0x8944>
  40c1d4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40c1d8:	add	x1, x1, #0x990
  40c1dc:	mov	w0, w8
  40c1e0:	bl	42c008 <feof@plt+0x28768>
  40c1e4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40c1e8:	add	x1, x1, #0x96b
  40c1ec:	mov	w0, w8
  40c1f0:	mov	x2, x19
  40c1f4:	bl	42c008 <feof@plt+0x28768>
  40c1f8:	stp	x29, x30, [sp, #-64]!
  40c1fc:	stp	x24, x23, [sp, #16]
  40c200:	stp	x22, x21, [sp, #32]
  40c204:	stp	x20, x19, [sp, #48]
  40c208:	mov	x29, sp
  40c20c:	mov	x20, x1
  40c210:	mov	x21, x0
  40c214:	and	w23, w2, #0x1
  40c218:	bl	4030b0 <strlen@plt>
  40c21c:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c220:	ldr	x19, [x24, #1552]
  40c224:	mov	x22, x0
  40c228:	cbnz	x19, 40c264 <feof@plt+0x89c4>
  40c22c:	adrp	x19, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40c230:	mov	x9, xzr
  40c234:	mov	w8, #0x840                 	// #2112
  40c238:	add	x19, x19, #0x578
  40c23c:	add	x10, x19, x8
  40c240:	sub	x11, x10, #0x30
  40c244:	subs	x8, x8, #0x30
  40c248:	stur	x9, [x10, #-24]
  40c24c:	mov	x9, x11
  40c250:	b.ne	40c23c <feof@plt+0x899c>  // b.any
  40c254:	str	x19, [x24, #1552]
  40c258:	b	40c264 <feof@plt+0x89c4>
  40c25c:	ldr	x19, [x19, #24]
  40c260:	cbz	x19, 40c284 <feof@plt+0x89e4>
  40c264:	ldr	w8, [x19, #32]
  40c268:	cmp	w8, w22
  40c26c:	b.ne	40c25c <feof@plt+0x89bc>  // b.any
  40c270:	ldr	x0, [x19]
  40c274:	mov	x1, x21
  40c278:	bl	403640 <strcmp@plt>
  40c27c:	cbnz	w0, 40c25c <feof@plt+0x89bc>
  40c280:	b	40c2c4 <feof@plt+0x8a24>
  40c284:	mov	w0, #0x30                  	// #48
  40c288:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40c28c:	mov	x19, x0
  40c290:	mov	x0, x21
  40c294:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  40c298:	ldr	x10, [x24, #1552]
  40c29c:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40c2a0:	add	x8, x8, #0x23b
  40c2a4:	mov	x9, x19
  40c2a8:	str	x0, [x19]
  40c2ac:	str	w22, [x19, #32]
  40c2b0:	str	x8, [x9, #8]!
  40c2b4:	strb	wzr, [x19, #37]
  40c2b8:	str	xzr, [x19, #40]
  40c2bc:	stp	x9, x10, [x19, #16]
  40c2c0:	str	x19, [x24, #1552]
  40c2c4:	ldr	x8, [x19, #16]
  40c2c8:	ldrb	w9, [x20]
  40c2cc:	ldr	x21, [x8]
  40c2d0:	cmp	w9, #0x2b
  40c2d4:	b.ne	40c2f0 <feof@plt+0x8a50>  // b.any
  40c2d8:	mov	x1, x20
  40c2dc:	ldrb	w8, [x1, #1]!
  40c2e0:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  40c2e4:	add	x9, x9, #0x4a2
  40c2e8:	ldrh	w8, [x9, x8, lsl #1]
  40c2ec:	tbnz	w8, #6, 40c2fc <feof@plt+0x8a5c>
  40c2f0:	mov	x0, x20
  40c2f4:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  40c2f8:	b	40c308 <feof@plt+0x8a68>
  40c2fc:	mov	x0, x21
  40c300:	mov	x2, xzr
  40c304:	bl	4799ac <feof@plt+0x7610c>
  40c308:	ldr	x8, [x19, #16]
  40c30c:	str	x0, [x8]
  40c310:	cbz	x21, 40c324 <feof@plt+0x8a84>
  40c314:	ldrb	w8, [x19, #37]
  40c318:	cbz	w8, 40c324 <feof@plt+0x8a84>
  40c31c:	mov	x0, x21
  40c320:	bl	4031d0 <free@plt>
  40c324:	mov	w8, #0x1                   	// #1
  40c328:	strb	w23, [x19, #36]
  40c32c:	strb	w8, [x19, #37]
  40c330:	ldp	x20, x19, [sp, #48]
  40c334:	ldp	x22, x21, [sp, #32]
  40c338:	ldp	x24, x23, [sp, #16]
  40c33c:	ldp	x29, x30, [sp], #64
  40c340:	ret
  40c344:	stp	x29, x30, [sp, #-96]!
  40c348:	stp	x28, x27, [sp, #16]
  40c34c:	stp	x26, x25, [sp, #32]
  40c350:	stp	x24, x23, [sp, #48]
  40c354:	stp	x22, x21, [sp, #64]
  40c358:	stp	x20, x19, [sp, #80]
  40c35c:	mov	x29, sp
  40c360:	sub	sp, sp, #0xc0
  40c364:	stp	x0, x2, [x29, #-160]
  40c368:	ldrb	w20, [x0]
  40c36c:	mov	w23, w1
  40c370:	cbz	w1, 40c388 <feof@plt+0x8ae8>
  40c374:	cbnz	w20, 40c38c <feof@plt+0x8aec>
  40c378:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c37c:	mov	w9, #0x1                   	// #1
  40c380:	strb	w9, [x8, #1988]
  40c384:	b	40ec00 <feof@plt+0xb360>
  40c388:	cbz	w20, 40ec00 <feof@plt+0xb360>
  40c38c:	ldp	x24, x8, [x29, #-160]
  40c390:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c394:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c398:	mov	w28, #0x61                  	// #97
  40c39c:	add	x8, x8, #0x1
  40c3a0:	add	x19, x19, #0x508
  40c3a4:	add	x27, x27, #0x4f0
  40c3a8:	mov	w22, #0x1                   	// #1
  40c3ac:	stur	x8, [x29, #-168]
  40c3b0:	stur	w23, [x29, #-140]
  40c3b4:	cmp	w23, #0x0
  40c3b8:	csel	w8, w28, w20, ne  // ne = any
  40c3bc:	and	w8, w8, #0xff
  40c3c0:	sub	w9, w8, #0x9
  40c3c4:	cmp	w9, #0x1c
  40c3c8:	add	x26, x24, #0x1
  40c3cc:	b.hi	40c410 <feof@plt+0x8b70>  // b.pmore
  40c3d0:	adrp	x11, 47d000 <_obstack_memory_used@@Base+0x12fc>
  40c3d4:	add	x11, x11, #0x6f7
  40c3d8:	adr	x8, 40c3e8 <feof@plt+0x8b48>
  40c3dc:	ldrb	w10, [x11, x9]
  40c3e0:	add	x8, x8, x10, lsl #2
  40c3e4:	br	x8
  40c3e8:	bl	4105cc <feof@plt+0xcd2c>
  40c3ec:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c3f0:	str	wzr, [x8, #1992]
  40c3f4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c3f8:	strb	wzr, [x8, #1996]
  40c3fc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c400:	strb	wzr, [x8, #2000]
  40c404:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c408:	strb	wzr, [x8, #2004]
  40c40c:	b	40c5fc <feof@plt+0x8d5c>
  40c410:	cmp	w8, #0x5c
  40c414:	b.eq	40c5c0 <feof@plt+0x8d20>  // b.none
  40c418:	cmp	w8, #0x7c
  40c41c:	b.ne	40c5c8 <feof@plt+0x8d28>  // b.any
  40c420:	bl	4105cc <feof@plt+0xcd2c>
  40c424:	ldp	x8, x9, [x19]
  40c428:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c42c:	cmp	x9, x8
  40c430:	b.ne	40c444 <feof@plt+0x8ba4>  // b.any
  40c434:	mov	w1, #0x1                   	// #1
  40c438:	mov	x0, x27
  40c43c:	bl	47bae8 <_obstack_newchunk@@Base>
  40c440:	ldr	x8, [x27, #24]
  40c444:	add	x9, x8, #0x1
  40c448:	str	x9, [x21, #1288]
  40c44c:	b	40c5f0 <feof@plt+0x8d50>
  40c450:	ldrb	w27, [x24, #1]
  40c454:	add	x25, x24, #0x2
  40c458:	cmp	w27, #0x7c
  40c45c:	b.hi	40d874 <feof@plt+0x9fd4>  // b.pmore
  40c460:	adrp	x10, 47d000 <_obstack_memory_used@@Base+0x12fc>
  40c464:	add	x10, x10, #0x714
  40c468:	adr	x8, 40c484 <feof@plt+0x8be4>
  40c46c:	ldrh	w9, [x10, x27, lsl #1]
  40c470:	add	x8, x8, x9, lsl #2
  40c474:	adrp	x20, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  40c478:	mov	w28, #0x14                  	// #20
  40c47c:	add	x20, x20, #0x4a2
  40c480:	br	x8
  40c484:	add	x26, x24, #0x4
  40c488:	b	40c490 <feof@plt+0x8bf0>
  40c48c:	add	x26, x26, #0x1
  40c490:	ldurb	w9, [x26, #-2]
  40c494:	cmp	x9, #0x2e
  40c498:	b.eq	40c48c <feof@plt+0x8bec>  // b.none
  40c49c:	ldrh	w8, [x20, x9, lsl #1]
  40c4a0:	mov	w10, #0x8c                  	// #140
  40c4a4:	tst	w8, w10
  40c4a8:	b.ne	40c48c <feof@plt+0x8bec>  // b.any
  40c4ac:	sub	x8, x26, #0x2
  40c4b0:	cmp	w9, #0x25
  40c4b4:	sub	x28, x8, x25
  40c4b8:	b.ne	40c628 <feof@plt+0x8d88>  // b.any
  40c4bc:	ldurb	w9, [x26, #-1]
  40c4c0:	cmp	w9, #0x4f
  40c4c4:	b.ne	40c628 <feof@plt+0x8d88>  // b.any
  40c4c8:	ldrb	w3, [x26]
  40c4cc:	cmp	x3, #0x2e
  40c4d0:	b.eq	40ecbc <feof@plt+0xb41c>  // b.none
  40c4d4:	ldrh	w8, [x20, x3, lsl #1]
  40c4d8:	mov	w9, #0x8c                  	// #140
  40c4dc:	tst	w8, w9
  40c4e0:	b.ne	40ecbc <feof@plt+0xb41c>  // b.any
  40c4e4:	cbz	w28, 40dc24 <feof@plt+0xa384>
  40c4e8:	sxtw	x23, w28
  40c4ec:	add	x0, x23, #0x3
  40c4f0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40c4f4:	mov	x1, x25
  40c4f8:	mov	x2, x23
  40c4fc:	mov	x20, x0
  40c500:	bl	403470 <strncpy@plt>
  40c504:	add	x8, x0, x23
  40c508:	mov	w9, #0x6f2e                	// #28462
  40c50c:	strb	wzr, [x8, #2]
  40c510:	strh	w9, [x8]
  40c514:	b	40dc30 <feof@plt+0xa390>
  40c518:	bl	4105cc <feof@plt+0xcd2c>
  40c51c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c520:	ldr	x20, [x8, #1184]
  40c524:	cbz	x20, 40c54c <feof@plt+0x8cac>
  40c528:	ldr	w8, [x20, #4]
  40c52c:	cbz	w8, 40c54c <feof@plt+0x8cac>
  40c530:	sub	w21, w8, #0x1
  40c534:	add	x8, x20, w21, uxtw #3
  40c538:	ldr	x0, [x8, #8]
  40c53c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40c540:	add	x1, x1, #0x56d
  40c544:	bl	403640 <strcmp@plt>
  40c548:	cbz	w0, 40c610 <feof@plt+0x8d70>
  40c54c:	bl	404998 <feof@plt+0x10f8>
  40c550:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c554:	ldr	x8, [x8, #1184]
  40c558:	cbz	x8, 40c57c <feof@plt+0x8cdc>
  40c55c:	ldr	w9, [x8, #4]
  40c560:	cbz	w9, 40c578 <feof@plt+0x8cd8>
  40c564:	bl	404e30 <feof@plt+0x1590>
  40c568:	cbnz	w0, 40ec14 <feof@plt+0xb374>
  40c56c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c570:	ldr	x8, [x8, #1184]
  40c574:	cbz	x8, 40c57c <feof@plt+0x8cdc>
  40c578:	str	wzr, [x8, #4]
  40c57c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c580:	ldr	x8, [x8, #2040]
  40c584:	cbz	x8, 40c58c <feof@plt+0x8cec>
  40c588:	str	wzr, [x8, #4]
  40c58c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c590:	strb	wzr, [x8, #1988]
  40c594:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c598:	str	wzr, [x8, #1992]
  40c59c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c5a0:	strb	wzr, [x8, #1996]
  40c5a4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c5a8:	strb	wzr, [x8, #2000]
  40c5ac:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c5b0:	strb	wzr, [x8, #2004]
  40c5b4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c5b8:	strb	wzr, [x8, #2008]
  40c5bc:	b	40c5fc <feof@plt+0x8d5c>
  40c5c0:	ldrb	w20, [x24, #1]
  40c5c4:	add	x26, x24, #0x2
  40c5c8:	ldp	x8, x9, [x19]
  40c5cc:	cmp	x9, x8
  40c5d0:	b.ne	40c5e4 <feof@plt+0x8d44>  // b.any
  40c5d4:	mov	w1, #0x1                   	// #1
  40c5d8:	mov	x0, x27
  40c5dc:	bl	47bae8 <_obstack_newchunk@@Base>
  40c5e0:	ldr	x8, [x27, #24]
  40c5e4:	add	x9, x8, #0x1
  40c5e8:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c5ec:	str	x9, [x10, #1288]
  40c5f0:	strb	w20, [x8]
  40c5f4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c5f8:	strb	w22, [x8, #1988]
  40c5fc:	ldrb	w20, [x26]
  40c600:	mov	x25, x26
  40c604:	mov	x24, x25
  40c608:	cbnz	w20, 40c3b4 <feof@plt+0x8b14>
  40c60c:	b	40ec00 <feof@plt+0xb360>
  40c610:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40c614:	ldr	w8, [x8, #56]
  40c618:	cbz	w8, 40c634 <feof@plt+0x8d94>
  40c61c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c620:	strb	w22, [x8, #2008]
  40c624:	b	40c5fc <feof@plt+0x8d5c>
  40c628:	mov	x20, xzr
  40c62c:	mov	x26, x8
  40c630:	b	40dc34 <feof@plt+0xa394>
  40c634:	str	w21, [x20, #4]
  40c638:	b	40c54c <feof@plt+0x8cac>
  40c63c:	mov	x20, x25
  40c640:	ldrb	w8, [x20]
  40c644:	cbz	w8, 40c65c <feof@plt+0x8dbc>
  40c648:	cmp	w8, #0xa
  40c64c:	b.eq	40c65c <feof@plt+0x8dbc>  // b.none
  40c650:	add	x20, x20, #0x1
  40c654:	ldrb	w8, [x20]
  40c658:	cbnz	w8, 40c648 <feof@plt+0x8da8>
  40c65c:	sub	x23, x20, x25
  40c660:	add	x8, x23, #0x10
  40c664:	and	x8, x8, #0xfffffffffffffff0
  40c668:	mov	x9, sp
  40c66c:	sub	x0, x9, x8
  40c670:	mov	sp, x0
  40c674:	mov	x1, x25
  40c678:	mov	x2, x23
  40c67c:	bl	403470 <strncpy@plt>
  40c680:	strb	wzr, [x0, x23]
  40c684:	ldur	w23, [x29, #-140]
  40c688:	bl	4033e0 <gettext@plt>
  40c68c:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40c690:	mov	x2, x0
  40c694:	add	x1, x1, #0x236
  40c698:	mov	w0, wzr
  40c69c:	bl	42ab7c <feof@plt+0x272dc>
  40c6a0:	mov	x8, x20
  40c6a4:	ldrb	w9, [x8], #1
  40c6a8:	cmp	w9, #0x0
  40c6ac:	csel	x26, x20, x8, eq  // eq = none
  40c6b0:	b	40e0d8 <feof@plt+0xa838>
  40c6b4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c6b8:	ldr	w8, [x8, #1616]
  40c6bc:	cbnz	w8, 40c484 <feof@plt+0x8be4>
  40c6c0:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40c6c4:	add	x1, x1, #0x7fc
  40c6c8:	sub	x2, x29, #0x88
  40c6cc:	mov	w0, wzr
  40c6d0:	bl	403650 <__xstat@plt>
  40c6d4:	cbnz	w0, 40c484 <feof@plt+0x8be4>
  40c6d8:	ldur	w8, [x29, #-120]
  40c6dc:	and	w8, w8, #0xf000
  40c6e0:	cmp	w8, #0x4, lsl #12
  40c6e4:	b.eq	40c484 <feof@plt+0x8be4>  // b.none
  40c6e8:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40c6ec:	add	x23, x23, #0x7fc
  40c6f0:	mov	w1, #0x2                   	// #2
  40c6f4:	mov	x0, x23
  40c6f8:	bl	403290 <access@plt>
  40c6fc:	cbnz	w0, 40c484 <feof@plt+0x8be4>
  40c700:	ldp	x8, x9, [x19]
  40c704:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c708:	add	x27, x27, #0x4f0
  40c70c:	sub	x9, x9, x8
  40c710:	cmp	x9, #0x8
  40c714:	b.hi	40c728 <feof@plt+0x8e88>  // b.pmore
  40c718:	mov	w1, #0x9                   	// #9
  40c71c:	mov	x0, x27
  40c720:	bl	47bae8 <_obstack_newchunk@@Base>
  40c724:	ldr	x8, [x27, #24]
  40c728:	ldr	x9, [x23]
  40c72c:	mov	w10, #0x6c                  	// #108
  40c730:	strb	w10, [x8, #8]
  40c734:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c738:	str	x9, [x8]
  40c73c:	ldr	x8, [x10, #1288]
  40c740:	mov	w9, #0x1                   	// #1
  40c744:	adrp	x11, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c748:	str	wzr, [x11, #1992]
  40c74c:	add	x8, x8, #0x9
  40c750:	str	x8, [x10, #1288]
  40c754:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c758:	strb	w9, [x8, #1988]
  40c75c:	b	40e260 <feof@plt+0xa9c0>
  40c760:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40c764:	ldr	w8, [x8, #56]
  40c768:	cbnz	w8, 40c774 <feof@plt+0x8ed4>
  40c76c:	b	40c484 <feof@plt+0x8be4>
  40c770:	add	x25, x25, #0x1
  40c774:	ldrb	w8, [x25]
  40c778:	cmp	x8, #0x2e
  40c77c:	b.eq	40c770 <feof@plt+0x8ed0>  // b.none
  40c780:	ldrh	w9, [x20, x8, lsl #1]
  40c784:	mov	w10, #0x8c                  	// #140
  40c788:	tst	w9, w10
  40c78c:	b.ne	40c770 <feof@plt+0x8ed0>  // b.any
  40c790:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c794:	cmp	w8, #0x25
  40c798:	mov	w28, #0x61                  	// #97
  40c79c:	add	x27, x27, #0x4f0
  40c7a0:	b.ne	40eaf4 <feof@plt+0xb254>  // b.any
  40c7a4:	ldrb	w8, [x25, #1]
  40c7a8:	add	x9, x25, #0x2
  40c7ac:	b	40d15c <feof@plt+0x98bc>
  40c7b0:	mov	x0, x25
  40c7b4:	bl	4132a4 <feof@plt+0xfa04>
  40c7b8:	b	40cfd0 <feof@plt+0x9730>
  40c7bc:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40c7c0:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40c7c4:	adrp	x3, 412000 <feof@plt+0xe760>
  40c7c8:	add	x8, x8, #0x9a6
  40c7cc:	add	x0, x0, #0x4b8
  40c7d0:	add	x3, x3, #0xbb0
  40c7d4:	sub	x4, x29, #0x88
  40c7d8:	mov	w1, #0x1                   	// #1
  40c7dc:	mov	x2, xzr
  40c7e0:	stur	x8, [x29, #-136]
  40c7e4:	stur	xzr, [x29, #-120]
  40c7e8:	sturh	wzr, [x29, #-112]
  40c7ec:	bl	4126ac <feof@plt+0xee0c>
  40c7f0:	b	40e0d4 <feof@plt+0xa834>
  40c7f4:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c7f8:	ldr	x24, [x20, #1752]
  40c7fc:	cbz	x24, 40e078 <feof@plt+0xa7d8>
  40c800:	mov	x0, x24
  40c804:	bl	4030b0 <strlen@plt>
  40c808:	mov	x23, x0
  40c80c:	ldp	x0, x8, [x19]
  40c810:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c814:	add	x27, x27, #0x4f0
  40c818:	sub	x8, x8, x0
  40c81c:	cmp	x8, x23
  40c820:	b.cs	40c838 <feof@plt+0x8f98>  // b.hs, b.nlast
  40c824:	mov	x0, x27
  40c828:	mov	x1, x23
  40c82c:	bl	47bae8 <_obstack_newchunk@@Base>
  40c830:	ldr	x0, [x27, #24]
  40c834:	ldr	x24, [x20, #1752]
  40c838:	mov	x1, x24
  40c83c:	mov	x2, x23
  40c840:	bl	402fc0 <memcpy@plt>
  40c844:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c848:	ldr	x8, [x9, #1288]
  40c84c:	add	x8, x8, x23
  40c850:	str	x8, [x9, #1288]
  40c854:	b	40e260 <feof@plt+0xa9c0>
  40c858:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40c85c:	ldr	x0, [x8, #3576]
  40c860:	b	40d358 <feof@plt+0x9ab8>
  40c864:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40c868:	ldr	x0, [x8, #3544]
  40c86c:	b	40d358 <feof@plt+0x9ab8>
  40c870:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c874:	ldr	x20, [x8, #1904]
  40c878:	cbz	x20, 40e0d4 <feof@plt+0xa834>
  40c87c:	ldr	w8, [x20, #4]
  40c880:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c884:	mov	w28, #0x61                  	// #97
  40c888:	add	x27, x27, #0x4f0
  40c88c:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c890:	cbz	w8, 40eaf4 <feof@plt+0xb254>
  40c894:	mov	w23, wzr
  40c898:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c89c:	b	40c8c4 <feof@plt+0x9024>
  40c8a0:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  40c8a4:	add	x0, x0, #0x9d0
  40c8a8:	mov	w1, wzr
  40c8ac:	mov	x2, xzr
  40c8b0:	bl	40c344 <feof@plt+0x8aa4>
  40c8b4:	ldr	w8, [x20, #4]
  40c8b8:	add	w23, w23, #0x1
  40c8bc:	cmp	w8, w23
  40c8c0:	b.ls	40d6d4 <feof@plt+0x9e34>  // b.plast
  40c8c4:	add	x8, x20, w23, uxtw #3
  40c8c8:	ldr	x8, [x8, #8]
  40c8cc:	ldrb	w21, [x8]
  40c8d0:	cbz	w21, 40c918 <feof@plt+0x9078>
  40c8d4:	add	x22, x8, #0x1
  40c8d8:	b	40c8f8 <feof@plt+0x9058>
  40c8dc:	add	x9, x8, #0x1
  40c8e0:	mov	w10, #0x1                   	// #1
  40c8e4:	str	x9, [x24, #1288]
  40c8e8:	strb	w21, [x8]
  40c8ec:	strb	w10, [x26, #1988]
  40c8f0:	ldrb	w21, [x22], #1
  40c8f4:	cbz	w21, 40c920 <feof@plt+0x9080>
  40c8f8:	ldp	x8, x9, [x19]
  40c8fc:	cmp	x9, x8
  40c900:	b.ne	40c8dc <feof@plt+0x903c>  // b.any
  40c904:	mov	w1, #0x1                   	// #1
  40c908:	mov	x0, x27
  40c90c:	bl	47bae8 <_obstack_newchunk@@Base>
  40c910:	ldr	x8, [x27, #24]
  40c914:	b	40c8dc <feof@plt+0x903c>
  40c918:	mov	w8, #0x1                   	// #1
  40c91c:	strb	w8, [x26, #1988]
  40c920:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c924:	ldr	w8, [x8, #1944]
  40c928:	mov	w22, #0x1                   	// #1
  40c92c:	cbz	w8, 40c8a0 <feof@plt+0x9000>
  40c930:	bl	4105cc <feof@plt+0xcd2c>
  40c934:	b	40c8a0 <feof@plt+0x9000>
  40c938:	mov	w8, #0x2                   	// #2
  40c93c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c940:	str	w8, [x9, #1992]
  40c944:	b	40e0d4 <feof@plt+0xa834>
  40c948:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c94c:	ldrb	w8, [x8, #1256]
  40c950:	adrp	x17, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c954:	cmp	w8, #0x1
  40c958:	b.ne	40c970 <feof@plt+0x90d0>  // b.any
  40c95c:	ldrb	w9, [x17, #2032]
  40c960:	cmp	w9, #0x1
  40c964:	b.eq	40ecec <feof@plt+0xb44c>  // b.none
  40c968:	mov	w9, #0x1                   	// #1
  40c96c:	strb	w9, [x17, #2032]
  40c970:	adrp	x18, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c974:	adrp	x1, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c978:	ldr	w9, [x18, #1160]
  40c97c:	ldr	w10, [x1, #2220]
  40c980:	add	w9, w10, w9
  40c984:	cmp	w9, #0x1
  40c988:	b.lt	40e0b4 <feof@plt+0xa814>  // b.tstop
  40c98c:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c990:	mov	x28, xzr
  40c994:	add	x27, x27, #0x4f0
  40c998:	b	40c9e8 <feof@plt+0x9148>
  40c99c:	str	w23, [x8, #4]
  40c9a0:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c9a4:	add	x22, x22, #0x4a0
  40c9a8:	ldr	x8, [x22]
  40c9ac:	ldur	w23, [x29, #-140]
  40c9b0:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c9b4:	add	x27, x27, #0x4f0
  40c9b8:	ldr	w9, [x8, #4]
  40c9bc:	mov	w22, #0x1                   	// #1
  40c9c0:	add	w10, w9, #0x1
  40c9c4:	add	x9, x8, x9, lsl #3
  40c9c8:	str	w10, [x8, #4]
  40c9cc:	str	x20, [x9, #8]
  40c9d0:	ldrsw	x8, [x18, #1160]
  40c9d4:	ldrsw	x9, [x1, #2220]
  40c9d8:	add	x28, x28, #0x1
  40c9dc:	add	x8, x9, x8
  40c9e0:	cmp	x28, x8
  40c9e4:	b.ge	40d888 <feof@plt+0x9fe8>  // b.tcont
  40c9e8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40c9ec:	ldr	x8, [x8, #1168]
  40c9f0:	ldr	x20, [x8, x28, lsl #3]
  40c9f4:	cbz	x20, 40c9d0 <feof@plt+0x9130>
  40c9f8:	ldrb	w8, [x17, #2032]
  40c9fc:	cmp	w8, #0x1
  40ca00:	b.ne	40ca58 <feof@plt+0x91b8>  // b.any
  40ca04:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ca08:	ldr	x26, [x8, #2040]
  40ca0c:	cbz	x26, 40caac <feof@plt+0x920c>
  40ca10:	ldp	w8, w9, [x26]
  40ca14:	and	w0, w8, #0x7fffffff
  40ca18:	cmp	w0, w9
  40ca1c:	b.ne	40cacc <feof@plt+0x922c>  // b.any
  40ca20:	tbnz	w8, #31, 40cad8 <feof@plt+0x9238>
  40ca24:	add	w1, w0, #0x1
  40ca28:	bl	425fbc <feof@plt+0x2271c>
  40ca2c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ca30:	ldr	x8, [x8, #2040]
  40ca34:	mov	w9, w0
  40ca38:	lsl	x9, x9, #3
  40ca3c:	mov	w24, w0
  40ca40:	add	x1, x9, #0x8
  40ca44:	mov	w23, wzr
  40ca48:	cbz	x8, 40cd04 <feof@plt+0x9464>
  40ca4c:	ldr	w21, [x8, #4]
  40ca50:	mov	w27, wzr
  40ca54:	b	40cb0c <feof@plt+0x926c>
  40ca58:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ca5c:	ldr	x26, [x8, #1184]
  40ca60:	cbz	x26, 40cabc <feof@plt+0x921c>
  40ca64:	ldp	w8, w9, [x26]
  40ca68:	and	w0, w8, #0x7fffffff
  40ca6c:	cmp	w0, w9
  40ca70:	b.ne	40c9a0 <feof@plt+0x9100>  // b.any
  40ca74:	tbnz	w8, #31, 40cb60 <feof@plt+0x92c0>
  40ca78:	add	w1, w0, #0x1
  40ca7c:	bl	425fbc <feof@plt+0x2271c>
  40ca80:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ca84:	ldr	x8, [x8, #1184]
  40ca88:	mov	w9, w0
  40ca8c:	lsl	x9, x9, #3
  40ca90:	mov	w24, w0
  40ca94:	add	x1, x9, #0x8
  40ca98:	mov	w23, wzr
  40ca9c:	cbz	x8, 40cd10 <feof@plt+0x9470>
  40caa0:	ldr	w21, [x8, #4]
  40caa4:	mov	w27, wzr
  40caa8:	b	40cb94 <feof@plt+0x92f4>
  40caac:	mov	w23, wzr
  40cab0:	mov	w27, wzr
  40cab4:	mov	w24, #0x4                   	// #4
  40cab8:	b	40caf8 <feof@plt+0x9258>
  40cabc:	mov	w23, wzr
  40cac0:	mov	w27, wzr
  40cac4:	mov	w24, #0x4                   	// #4
  40cac8:	b	40cb80 <feof@plt+0x92e0>
  40cacc:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cad0:	add	x22, x22, #0x7f8
  40cad4:	b	40c9a8 <feof@plt+0x9108>
  40cad8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cadc:	str	xzr, [x8, #2040]
  40cae0:	ldr	w23, [x26, #4]
  40cae4:	mov	w8, #0x4                   	// #4
  40cae8:	mov	w27, #0x1                   	// #1
  40caec:	add	w9, w23, #0x1
  40caf0:	cmp	w9, #0x4
  40caf4:	csinc	w24, w8, w23, ls  // ls = plast
  40caf8:	mov	w9, w24
  40cafc:	lsl	x9, x9, #3
  40cb00:	mov	x8, xzr
  40cb04:	mov	w21, wzr
  40cb08:	add	x1, x9, #0x8
  40cb0c:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cb10:	mov	x0, x8
  40cb14:	add	x22, x22, #0x7f8
  40cb18:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  40cb1c:	and	w8, w24, #0x7fffffff
  40cb20:	adrp	x17, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cb24:	adrp	x18, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cb28:	adrp	x1, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cb2c:	str	x0, [x22]
  40cb30:	stp	w8, w21, [x0]
  40cb34:	cbz	w27, 40c9a8 <feof@plt+0x9108>
  40cb38:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cb3c:	ldr	x8, [x8, #2040]
  40cb40:	cbz	w23, 40cc6c <feof@plt+0x93cc>
  40cb44:	sub	w12, w23, #0x1
  40cb48:	add	x9, x26, #0x8
  40cb4c:	cmp	w12, #0x3
  40cb50:	add	x10, x8, #0x8
  40cb54:	b.cs	40cbe8 <feof@plt+0x9348>  // b.hs, b.nlast
  40cb58:	mov	w11, w23
  40cb5c:	b	40cc5c <feof@plt+0x93bc>
  40cb60:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cb64:	str	xzr, [x8, #1184]
  40cb68:	ldr	w23, [x26, #4]
  40cb6c:	mov	w8, #0x4                   	// #4
  40cb70:	mov	w27, #0x1                   	// #1
  40cb74:	add	w9, w23, #0x1
  40cb78:	cmp	w9, #0x4
  40cb7c:	csinc	w24, w8, w23, ls  // ls = plast
  40cb80:	mov	w9, w24
  40cb84:	lsl	x9, x9, #3
  40cb88:	mov	x8, xzr
  40cb8c:	mov	w21, wzr
  40cb90:	add	x1, x9, #0x8
  40cb94:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cb98:	mov	x0, x8
  40cb9c:	add	x22, x22, #0x4a0
  40cba0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  40cba4:	and	w8, w24, #0x7fffffff
  40cba8:	adrp	x17, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cbac:	adrp	x18, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cbb0:	adrp	x1, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cbb4:	str	x0, [x22]
  40cbb8:	stp	w8, w21, [x0]
  40cbbc:	cbz	w27, 40c9a8 <feof@plt+0x9108>
  40cbc0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cbc4:	ldr	x8, [x8, #1184]
  40cbc8:	cbz	w23, 40c99c <feof@plt+0x90fc>
  40cbcc:	sub	w12, w23, #0x1
  40cbd0:	add	x9, x26, #0x8
  40cbd4:	cmp	w12, #0x3
  40cbd8:	add	x10, x8, #0x8
  40cbdc:	b.cs	40cc7c <feof@plt+0x93dc>  // b.hs, b.nlast
  40cbe0:	mov	w11, w23
  40cbe4:	b	40ccf0 <feof@plt+0x9450>
  40cbe8:	lsl	x11, x12, #3
  40cbec:	add	x13, x26, x11
  40cbf0:	add	x13, x13, #0x10
  40cbf4:	cmp	x13, x10
  40cbf8:	b.ls	40cc10 <feof@plt+0x9370>  // b.plast
  40cbfc:	add	x11, x8, x11
  40cc00:	add	x11, x11, #0x10
  40cc04:	cmp	x11, x9
  40cc08:	mov	w11, w23
  40cc0c:	b.hi	40cc5c <feof@plt+0x93bc>  // b.pmore
  40cc10:	add	x12, x12, #0x1
  40cc14:	and	x13, x12, #0x1fffffffc
  40cc18:	lsl	x9, x13, #3
  40cc1c:	add	x10, x26, x9
  40cc20:	add	x15, x8, x9
  40cc24:	add	x14, x8, #0x18
  40cc28:	sub	w11, w23, w13
  40cc2c:	add	x9, x10, #0x8
  40cc30:	add	x10, x15, #0x8
  40cc34:	add	x15, x26, #0x18
  40cc38:	mov	x16, x13
  40cc3c:	ldp	q0, q1, [x15, #-16]
  40cc40:	subs	x16, x16, #0x4
  40cc44:	add	x15, x15, #0x20
  40cc48:	stp	q0, q1, [x14, #-16]
  40cc4c:	add	x14, x14, #0x20
  40cc50:	b.ne	40cc3c <feof@plt+0x939c>  // b.any
  40cc54:	cmp	x12, x13
  40cc58:	b.eq	40cc6c <feof@plt+0x93cc>  // b.none
  40cc5c:	ldr	x12, [x9], #8
  40cc60:	subs	w11, w11, #0x1
  40cc64:	str	x12, [x10], #8
  40cc68:	b.ne	40cc5c <feof@plt+0x93bc>  // b.any
  40cc6c:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cc70:	str	w23, [x8, #4]
  40cc74:	add	x22, x22, #0x7f8
  40cc78:	b	40c9a8 <feof@plt+0x9108>
  40cc7c:	lsl	x11, x12, #3
  40cc80:	add	x13, x26, x11
  40cc84:	add	x13, x13, #0x10
  40cc88:	cmp	x13, x10
  40cc8c:	b.ls	40cca4 <feof@plt+0x9404>  // b.plast
  40cc90:	add	x11, x8, x11
  40cc94:	add	x11, x11, #0x10
  40cc98:	cmp	x11, x9
  40cc9c:	mov	w11, w23
  40cca0:	b.hi	40ccf0 <feof@plt+0x9450>  // b.pmore
  40cca4:	add	x12, x12, #0x1
  40cca8:	and	x13, x12, #0x1fffffffc
  40ccac:	lsl	x9, x13, #3
  40ccb0:	add	x10, x26, x9
  40ccb4:	add	x15, x8, x9
  40ccb8:	add	x14, x8, #0x18
  40ccbc:	sub	w11, w23, w13
  40ccc0:	add	x9, x10, #0x8
  40ccc4:	add	x10, x15, #0x8
  40ccc8:	add	x15, x26, #0x18
  40cccc:	mov	x16, x13
  40ccd0:	ldp	q0, q1, [x15, #-16]
  40ccd4:	subs	x16, x16, #0x4
  40ccd8:	add	x15, x15, #0x20
  40ccdc:	stp	q0, q1, [x14, #-16]
  40cce0:	add	x14, x14, #0x20
  40cce4:	b.ne	40ccd0 <feof@plt+0x9430>  // b.any
  40cce8:	cmp	x12, x13
  40ccec:	b.eq	40c99c <feof@plt+0x90fc>  // b.none
  40ccf0:	ldr	x12, [x9], #8
  40ccf4:	subs	w11, w11, #0x1
  40ccf8:	str	x12, [x10], #8
  40ccfc:	b.ne	40ccf0 <feof@plt+0x9450>  // b.any
  40cd00:	b	40c99c <feof@plt+0x90fc>
  40cd04:	mov	w27, wzr
  40cd08:	mov	w21, wzr
  40cd0c:	b	40cb0c <feof@plt+0x926c>
  40cd10:	mov	w27, wzr
  40cd14:	mov	w21, wzr
  40cd18:	b	40cb94 <feof@plt+0x92f4>
  40cd1c:	ldur	x8, [x29, #-152]
  40cd20:	cbz	x8, 40e0c8 <feof@plt+0xa828>
  40cd24:	ldrb	w20, [x8]
  40cd28:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cd2c:	mov	w28, #0x61                  	// #97
  40cd30:	add	x27, x27, #0x4f0
  40cd34:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cd38:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cd3c:	cbz	w20, 40e02c <feof@plt+0xa78c>
  40cd40:	ldur	x21, [x29, #-168]
  40cd44:	b	40cd64 <feof@plt+0x94c4>
  40cd48:	add	x9, x8, #0x1
  40cd4c:	mov	w10, #0x1                   	// #1
  40cd50:	str	x9, [x24, #1288]
  40cd54:	strb	w20, [x8]
  40cd58:	strb	w10, [x26, #1988]
  40cd5c:	ldrb	w20, [x21], #1
  40cd60:	cbz	w20, 40e01c <feof@plt+0xa77c>
  40cd64:	ldp	x8, x9, [x19]
  40cd68:	cmp	x9, x8
  40cd6c:	b.ne	40cd48 <feof@plt+0x94a8>  // b.any
  40cd70:	mov	w1, #0x1                   	// #1
  40cd74:	mov	x0, x27
  40cd78:	bl	47bae8 <_obstack_newchunk@@Base>
  40cd7c:	ldr	x8, [x27, #24]
  40cd80:	b	40cd48 <feof@plt+0x94a8>
  40cd84:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40cd88:	ldr	x0, [x8, #3528]
  40cd8c:	b	40d358 <feof@plt+0x9ab8>
  40cd90:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cd94:	ldr	x24, [x8, #1888]
  40cd98:	cbnz	x24, 40d71c <feof@plt+0x9e7c>
  40cd9c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cda0:	ldp	x0, x9, [x19]
  40cda4:	ldrsw	x24, [x8, #1212]
  40cda8:	b	40e15c <feof@plt+0xa8bc>
  40cdac:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cdb0:	ldr	x8, [x8, #1792]
  40cdb4:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40cdb8:	ldr	x9, [x9, #3552]
  40cdbc:	ldr	x8, [x8, #16]
  40cdc0:	cmp	x8, #0x0
  40cdc4:	csel	x0, x9, x8, eq  // eq = none
  40cdc8:	b	40d358 <feof@plt+0x9ab8>
  40cdcc:	ldp	x8, x9, [x19]
  40cdd0:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cdd4:	add	x27, x27, #0x4f0
  40cdd8:	sub	x9, x9, x8
  40cddc:	cmp	x9, #0x1
  40cde0:	b.hi	40cdf4 <feof@plt+0x9554>  // b.pmore
  40cde4:	mov	w1, #0x2                   	// #2
  40cde8:	mov	x0, x27
  40cdec:	bl	47bae8 <_obstack_newchunk@@Base>
  40cdf0:	ldr	x8, [x27, #24]
  40cdf4:	mov	w9, #0x6f2e                	// #28462
  40cdf8:	strh	w9, [x8]
  40cdfc:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ce00:	ldr	x8, [x10, #1288]
  40ce04:	mov	w9, #0x1                   	// #1
  40ce08:	add	x8, x8, #0x2
  40ce0c:	str	x8, [x10, #1288]
  40ce10:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ce14:	strb	w9, [x8, #1988]
  40ce18:	b	40e264 <feof@plt+0xa9c4>
  40ce1c:	mov	w8, #0x1                   	// #1
  40ce20:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ce24:	strb	w8, [x9, #2004]
  40ce28:	b	40e0d4 <feof@plt+0xa834>
  40ce2c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ce30:	ldr	x20, [x8, #1912]
  40ce34:	cbz	x20, 40e0d4 <feof@plt+0xa834>
  40ce38:	ldr	w8, [x20, #4]
  40ce3c:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ce40:	mov	w28, #0x61                  	// #97
  40ce44:	add	x27, x27, #0x4f0
  40ce48:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ce4c:	cbz	w8, 40eaf4 <feof@plt+0xb254>
  40ce50:	mov	w23, wzr
  40ce54:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ce58:	b	40ce80 <feof@plt+0x95e0>
  40ce5c:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  40ce60:	add	x0, x0, #0x9d0
  40ce64:	mov	w1, wzr
  40ce68:	mov	x2, xzr
  40ce6c:	bl	40c344 <feof@plt+0x8aa4>
  40ce70:	ldr	w8, [x20, #4]
  40ce74:	add	w23, w23, #0x1
  40ce78:	cmp	w8, w23
  40ce7c:	b.ls	40d6d4 <feof@plt+0x9e34>  // b.plast
  40ce80:	add	x8, x20, w23, uxtw #3
  40ce84:	ldr	x8, [x8, #8]
  40ce88:	ldrb	w21, [x8]
  40ce8c:	cbz	w21, 40ced4 <feof@plt+0x9634>
  40ce90:	add	x22, x8, #0x1
  40ce94:	b	40ceb4 <feof@plt+0x9614>
  40ce98:	add	x9, x8, #0x1
  40ce9c:	mov	w10, #0x1                   	// #1
  40cea0:	str	x9, [x24, #1288]
  40cea4:	strb	w21, [x8]
  40cea8:	strb	w10, [x26, #1988]
  40ceac:	ldrb	w21, [x22], #1
  40ceb0:	cbz	w21, 40cedc <feof@plt+0x963c>
  40ceb4:	ldp	x8, x9, [x19]
  40ceb8:	cmp	x9, x8
  40cebc:	b.ne	40ce98 <feof@plt+0x95f8>  // b.any
  40cec0:	mov	w1, #0x1                   	// #1
  40cec4:	mov	x0, x27
  40cec8:	bl	47bae8 <_obstack_newchunk@@Base>
  40cecc:	ldr	x8, [x27, #24]
  40ced0:	b	40ce98 <feof@plt+0x95f8>
  40ced4:	mov	w8, #0x1                   	// #1
  40ced8:	strb	w8, [x26, #1988]
  40cedc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cee0:	ldr	w8, [x8, #1944]
  40cee4:	mov	w22, #0x1                   	// #1
  40cee8:	cbz	w8, 40ce5c <feof@plt+0x95bc>
  40ceec:	bl	4105cc <feof@plt+0xcd2c>
  40cef0:	b	40ce5c <feof@plt+0x95bc>
  40cef4:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40cef8:	ldr	x0, [x8, #3536]
  40cefc:	b	40d358 <feof@plt+0x9ab8>
  40cf00:	ldp	x8, x9, [x19]
  40cf04:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cf08:	add	x27, x27, #0x4f0
  40cf0c:	cmp	x9, x8
  40cf10:	b.ne	40cf24 <feof@plt+0x9684>  // b.any
  40cf14:	mov	w1, #0x1                   	// #1
  40cf18:	mov	x0, x27
  40cf1c:	bl	47bae8 <_obstack_newchunk@@Base>
  40cf20:	ldr	x8, [x27, #24]
  40cf24:	add	x9, x8, #0x1
  40cf28:	mov	w10, #0x25                  	// #37
  40cf2c:	b	40e0a4 <feof@plt+0xa804>
  40cf30:	mov	x20, x25
  40cf34:	ldrb	w21, [x20]
  40cf38:	cbz	w21, 40cf50 <feof@plt+0x96b0>
  40cf3c:	cmp	w21, #0x29
  40cf40:	b.eq	40cf50 <feof@plt+0x96b0>  // b.none
  40cf44:	add	x20, x20, #0x1
  40cf48:	ldrb	w21, [x20]
  40cf4c:	cbnz	w21, 40cf3c <feof@plt+0x969c>
  40cf50:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cf54:	ldr	x22, [x8, #1552]
  40cf58:	cbz	x22, 40e0e8 <feof@plt+0xa848>
  40cf5c:	sub	x24, x20, x25
  40cf60:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cf64:	sxtw	x23, w24
  40cf68:	mov	w28, #0x61                  	// #97
  40cf6c:	add	x27, x27, #0x4f0
  40cf70:	b	40cf7c <feof@plt+0x96dc>
  40cf74:	ldr	x22, [x22, #24]
  40cf78:	cbz	x22, 40e014 <feof@plt+0xa774>
  40cf7c:	ldr	w8, [x22, #32]
  40cf80:	cmp	w8, w24
  40cf84:	b.ne	40cf74 <feof@plt+0x96d4>  // b.any
  40cf88:	ldr	x0, [x22]
  40cf8c:	mov	x1, x25
  40cf90:	mov	x2, x23
  40cf94:	bl	403450 <strncmp@plt>
  40cf98:	cbnz	w0, 40cf74 <feof@plt+0x96d4>
  40cf9c:	ldr	x8, [x22, #16]
  40cfa0:	mov	w1, wzr
  40cfa4:	mov	x2, xzr
  40cfa8:	ldr	x0, [x8]
  40cfac:	bl	40c344 <feof@plt+0x8aa4>
  40cfb0:	ldur	w23, [x29, #-140]
  40cfb4:	cbnz	w0, 40ec14 <feof@plt+0xb374>
  40cfb8:	ldrb	w21, [x20]
  40cfbc:	b	40e0f4 <feof@plt+0xa854>
  40cfc0:	ldur	x2, [x29, #-152]
  40cfc4:	mov	x0, x25
  40cfc8:	mov	x1, xzr
  40cfcc:	bl	413b58 <feof@plt+0x102b8>
  40cfd0:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cfd4:	mov	x26, x0
  40cfd8:	mov	w28, #0x61                  	// #97
  40cfdc:	add	x27, x27, #0x4f0
  40cfe0:	cbnz	x0, 40c5fc <feof@plt+0x8d5c>
  40cfe4:	b	40ec90 <feof@plt+0xb3f0>
  40cfe8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cfec:	ldr	x20, [x8, #1920]
  40cff0:	cbz	x20, 40e0d4 <feof@plt+0xa834>
  40cff4:	ldr	w8, [x20, #4]
  40cff8:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40cffc:	mov	w28, #0x61                  	// #97
  40d000:	add	x27, x27, #0x4f0
  40d004:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d008:	cbz	w8, 40eaf4 <feof@plt+0xb254>
  40d00c:	mov	w23, wzr
  40d010:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d014:	b	40d03c <feof@plt+0x979c>
  40d018:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  40d01c:	add	x0, x0, #0x9d0
  40d020:	mov	w1, wzr
  40d024:	mov	x2, xzr
  40d028:	bl	40c344 <feof@plt+0x8aa4>
  40d02c:	ldr	w8, [x20, #4]
  40d030:	add	w23, w23, #0x1
  40d034:	cmp	w8, w23
  40d038:	b.ls	40d6d4 <feof@plt+0x9e34>  // b.plast
  40d03c:	add	x8, x20, w23, uxtw #3
  40d040:	ldr	x8, [x8, #8]
  40d044:	ldrb	w21, [x8]
  40d048:	cbz	w21, 40d090 <feof@plt+0x97f0>
  40d04c:	add	x22, x8, #0x1
  40d050:	b	40d070 <feof@plt+0x97d0>
  40d054:	add	x9, x8, #0x1
  40d058:	mov	w10, #0x1                   	// #1
  40d05c:	str	x9, [x24, #1288]
  40d060:	strb	w21, [x8]
  40d064:	strb	w10, [x26, #1988]
  40d068:	ldrb	w21, [x22], #1
  40d06c:	cbz	w21, 40d098 <feof@plt+0x97f8>
  40d070:	ldp	x8, x9, [x19]
  40d074:	cmp	x9, x8
  40d078:	b.ne	40d054 <feof@plt+0x97b4>  // b.any
  40d07c:	mov	w1, #0x1                   	// #1
  40d080:	mov	x0, x27
  40d084:	bl	47bae8 <_obstack_newchunk@@Base>
  40d088:	ldr	x8, [x27, #24]
  40d08c:	b	40d054 <feof@plt+0x97b4>
  40d090:	mov	w8, #0x1                   	// #1
  40d094:	strb	w8, [x26, #1988]
  40d098:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d09c:	ldr	w8, [x8, #1944]
  40d0a0:	mov	w22, #0x1                   	// #1
  40d0a4:	cbz	w8, 40d018 <feof@plt+0x9778>
  40d0a8:	bl	4105cc <feof@plt+0xcd2c>
  40d0ac:	b	40d018 <feof@plt+0x9778>
  40d0b0:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40d0b4:	ldr	x0, [x8, #1280]
  40d0b8:	b	40d358 <feof@plt+0x9ab8>
  40d0bc:	mov	w8, #0x1                   	// #1
  40d0c0:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d0c4:	strb	w8, [x9, #2000]
  40d0c8:	b	40e0d4 <feof@plt+0xa834>
  40d0cc:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40d0d0:	ldr	w8, [x8, #56]
  40d0d4:	cbz	w8, 40c484 <feof@plt+0x8be4>
  40d0d8:	ldp	x8, x9, [x19]
  40d0dc:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d0e0:	add	x27, x27, #0x4f0
  40d0e4:	cmp	x9, x8
  40d0e8:	b.ne	40d0fc <feof@plt+0x985c>  // b.any
  40d0ec:	mov	w1, #0x1                   	// #1
  40d0f0:	mov	x0, x27
  40d0f4:	bl	47bae8 <_obstack_newchunk@@Base>
  40d0f8:	ldr	x8, [x27, #24]
  40d0fc:	add	x9, x8, #0x1
  40d100:	mov	w10, #0x2d                  	// #45
  40d104:	adrp	x12, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d108:	str	x9, [x12, #1288]
  40d10c:	strb	w10, [x8]
  40d110:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d114:	mov	w11, #0x1                   	// #1
  40d118:	str	wzr, [x8, #1992]
  40d11c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d120:	strb	w11, [x8, #1988]
  40d124:	b	40d12c <feof@plt+0x988c>
  40d128:	add	x25, x25, #0x1
  40d12c:	ldrb	w8, [x25]
  40d130:	cmp	x8, #0x2e
  40d134:	b.eq	40d128 <feof@plt+0x9888>  // b.none
  40d138:	ldrh	w9, [x20, x8, lsl #1]
  40d13c:	mov	w10, #0x8c                  	// #140
  40d140:	tst	w9, w10
  40d144:	b.ne	40d128 <feof@plt+0x9888>  // b.any
  40d148:	cmp	w8, #0x25
  40d14c:	b.ne	40e264 <feof@plt+0xa9c4>  // b.any
  40d150:	ldrb	w8, [x25, #1]
  40d154:	add	x9, x25, #0x2
  40d158:	mov	w28, #0x61                  	// #97
  40d15c:	cmp	w8, #0x4f
  40d160:	csel	x26, x9, x25, eq  // eq = none
  40d164:	b	40c5fc <feof@plt+0x8d5c>
  40d168:	mov	w8, wzr
  40d16c:	b	40d174 <feof@plt+0x98d4>
  40d170:	add	w8, w8, #0x1
  40d174:	ldrb	w9, [x25, w8, uxtw]
  40d178:	cmp	w9, #0x25
  40d17c:	b.hi	40d170 <feof@plt+0x98d0>  // b.pmore
  40d180:	mov	w10, #0x1                   	// #1
  40d184:	lsl	x9, x10, x9
  40d188:	mov	x10, #0x1                   	// #1
  40d18c:	movk	x10, #0x21, lsl #32
  40d190:	tst	x9, x10
  40d194:	b.eq	40d170 <feof@plt+0x98d0>  // b.none
  40d198:	add	x21, x25, w8, uxtw
  40d19c:	add	w22, w8, #0x1
  40d1a0:	add	w8, w8, #0x2
  40d1a4:	sxtw	x0, w8
  40d1a8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40d1ac:	sxtw	x23, w22
  40d1b0:	mov	x1, x26
  40d1b4:	mov	x2, x23
  40d1b8:	mov	x20, x0
  40d1bc:	mov	w22, #0x1                   	// #1
  40d1c0:	bl	402fc0 <memcpy@plt>
  40d1c4:	strb	wzr, [x20, x23]
  40d1c8:	ldur	w23, [x29, #-140]
  40d1cc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d1d0:	str	x20, [x8, #2016]
  40d1d4:	mov	x26, x21
  40d1d8:	b	40e0d8 <feof@plt+0xa838>
  40d1dc:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40d1e0:	ldr	x0, [x8, #3520]
  40d1e4:	b	40d358 <feof@plt+0x9ab8>
  40d1e8:	mov	w28, #0x4                   	// #4
  40d1ec:	mov	w8, wzr
  40d1f0:	b	40d1f8 <feof@plt+0x9958>
  40d1f4:	add	w8, w8, #0x1
  40d1f8:	ldrb	w9, [x25, w8, uxtw]
  40d1fc:	cmp	w9, #0x20
  40d200:	b.hi	40d1f4 <feof@plt+0x9954>  // b.pmore
  40d204:	mov	w10, #0x1                   	// #1
  40d208:	lsl	x9, x10, x9
  40d20c:	mov	x10, #0x201                 	// #513
  40d210:	movk	x10, #0x1, lsl #32
  40d214:	tst	x9, x10
  40d218:	b.eq	40d1f4 <feof@plt+0x9954>  // b.none
  40d21c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d220:	ldr	w20, [x9, #1560]
  40d224:	mov	w9, w8
  40d228:	add	x26, x25, x9
  40d22c:	stur	x9, [x29, #-176]
  40d230:	cmp	w20, #0x1
  40d234:	b.lt	40e0d8 <feof@plt+0xa838>  // b.tstop
  40d238:	sub	w9, w8, #0x1
  40d23c:	ldrb	w21, [x25, w9, uxtw]
  40d240:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d244:	ldr	x9, [x9, #1592]
  40d248:	mov	x22, xzr
  40d24c:	cmp	w21, #0x2a
  40d250:	cset	w10, eq  // eq = none
  40d254:	sub	w24, w8, w10
  40d258:	add	x27, x9, #0x10
  40d25c:	b	40d27c <feof@plt+0x99dc>
  40d260:	ldur	x8, [x29, #-176]
  40d264:	ldrb	w8, [x23, x8]
  40d268:	cbz	w8, 40d29c <feof@plt+0x99fc>
  40d26c:	add	x22, x22, #0x1
  40d270:	cmp	x22, x20
  40d274:	add	x27, x27, #0x18
  40d278:	b.cs	40d2bc <feof@plt+0x9a1c>  // b.hs, b.nlast
  40d27c:	ldur	x23, [x27, #-16]
  40d280:	mov	x1, x25
  40d284:	mov	x2, x24
  40d288:	mov	x0, x23
  40d28c:	bl	403450 <strncmp@plt>
  40d290:	cbnz	w0, 40d26c <feof@plt+0x99cc>
  40d294:	cmp	w21, #0x2a
  40d298:	b.ne	40d260 <feof@plt+0x99c0>  // b.any
  40d29c:	ldr	w8, [x27]
  40d2a0:	ldrb	w9, [x27, #4]
  40d2a4:	orr	w8, w8, w28
  40d2a8:	str	w8, [x27]
  40d2ac:	cbz	w9, 40d26c <feof@plt+0x99cc>
  40d2b0:	mov	w8, #0x1                   	// #1
  40d2b4:	strb	w8, [x27, #5]
  40d2b8:	b	40d26c <feof@plt+0x99cc>
  40d2bc:	ldur	w23, [x29, #-140]
  40d2c0:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d2c4:	mov	w28, #0x61                  	// #97
  40d2c8:	add	x27, x27, #0x4f0
  40d2cc:	mov	w22, #0x1                   	// #1
  40d2d0:	b	40c5fc <feof@plt+0x8d5c>
  40d2d4:	ldrb	w3, [x25]
  40d2d8:	cmp	w3, #0x7b
  40d2dc:	b.ne	40ecd4 <feof@plt+0xb434>  // b.any
  40d2e0:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d2e4:	ldrb	w8, [x20, #1256]
  40d2e8:	cmp	w8, #0x1
  40d2ec:	b.ne	40d308 <feof@plt+0x9a68>  // b.any
  40d2f0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d2f4:	ldrb	w9, [x8, #2032]
  40d2f8:	cmp	w9, #0x1
  40d2fc:	b.eq	40ecec <feof@plt+0xb44c>  // b.none
  40d300:	mov	w9, #0x1                   	// #1
  40d304:	strb	w9, [x8, #2032]
  40d308:	add	x0, x24, #0x3
  40d30c:	bl	4132a4 <feof@plt+0xfa04>
  40d310:	ldrb	w8, [x20, #1256]
  40d314:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d318:	mov	x26, x0
  40d31c:	mov	w28, #0x61                  	// #97
  40d320:	cmp	w8, #0x1
  40d324:	add	x27, x27, #0x4f0
  40d328:	b.ne	40d330 <feof@plt+0x9a90>  // b.any
  40d32c:	bl	412da8 <feof@plt+0xf508>
  40d330:	cbnz	x26, 40c5fc <feof@plt+0x8d5c>
  40d334:	b	40ec90 <feof@plt+0xb3f0>
  40d338:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40d33c:	ldr	x0, [x8, #3560]
  40d340:	b	40d358 <feof@plt+0x9ab8>
  40d344:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40d348:	ldr	x0, [x8, #3512]
  40d34c:	b	40d358 <feof@plt+0x9ab8>
  40d350:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40d354:	ldr	x0, [x8, #3568]
  40d358:	mov	w1, wzr
  40d35c:	mov	x2, xzr
  40d360:	bl	40c344 <feof@plt+0x8aa4>
  40d364:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d368:	mov	x26, x25
  40d36c:	mov	w28, #0x61                  	// #97
  40d370:	add	x27, x27, #0x4f0
  40d374:	cbz	w0, 40c5fc <feof@plt+0x8d5c>
  40d378:	b	40ec14 <feof@plt+0xb374>
  40d37c:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d380:	ldr	x8, [x20, #1736]
  40d384:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d388:	add	x27, x27, #0x4f0
  40d38c:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d390:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d394:	cbz	x8, 40e304 <feof@plt+0xaa64>
  40d398:	ldp	x8, x9, [x19]
  40d39c:	cmp	x9, x8
  40d3a0:	b.ne	40d3b4 <feof@plt+0x9b14>  // b.any
  40d3a4:	mov	w1, #0x1                   	// #1
  40d3a8:	mov	x0, x27
  40d3ac:	bl	47bae8 <_obstack_newchunk@@Base>
  40d3b0:	ldr	x8, [x27, #24]
  40d3b4:	add	x9, x8, #0x1
  40d3b8:	mov	w10, #0x2d                  	// #45
  40d3bc:	str	x9, [x19]
  40d3c0:	strb	w10, [x8]
  40d3c4:	ldp	x8, x9, [x19]
  40d3c8:	mov	w21, #0x1                   	// #1
  40d3cc:	strb	w21, [x26, #1988]
  40d3d0:	cmp	x9, x8
  40d3d4:	b.ne	40d3e8 <feof@plt+0x9b48>  // b.any
  40d3d8:	mov	w1, #0x1                   	// #1
  40d3dc:	mov	x0, x27
  40d3e0:	bl	47bae8 <_obstack_newchunk@@Base>
  40d3e4:	ldr	x8, [x27, #24]
  40d3e8:	add	x9, x8, #0x1
  40d3ec:	mov	w10, #0x69                  	// #105
  40d3f0:	str	x9, [x19]
  40d3f4:	strb	w10, [x8]
  40d3f8:	ldp	x8, x9, [x19]
  40d3fc:	strb	w21, [x26, #1988]
  40d400:	cmp	x9, x8
  40d404:	b.ne	40d418 <feof@plt+0x9b78>  // b.any
  40d408:	mov	w1, #0x1                   	// #1
  40d40c:	mov	x0, x27
  40d410:	bl	47bae8 <_obstack_newchunk@@Base>
  40d414:	ldr	x8, [x27, #24]
  40d418:	add	x9, x8, #0x1
  40d41c:	mov	w10, #0x6d                  	// #109
  40d420:	str	x9, [x19]
  40d424:	strb	w10, [x8]
  40d428:	ldp	x8, x9, [x19]
  40d42c:	mov	w21, #0x1                   	// #1
  40d430:	strb	w21, [x26, #1988]
  40d434:	cmp	x9, x8
  40d438:	b.ne	40d44c <feof@plt+0x9bac>  // b.any
  40d43c:	mov	w1, #0x1                   	// #1
  40d440:	mov	x0, x27
  40d444:	bl	47bae8 <_obstack_newchunk@@Base>
  40d448:	ldr	x8, [x27, #24]
  40d44c:	add	x9, x8, #0x1
  40d450:	mov	w10, #0x75                  	// #117
  40d454:	str	x9, [x19]
  40d458:	strb	w10, [x8]
  40d45c:	ldp	x8, x9, [x19]
  40d460:	strb	w21, [x26, #1988]
  40d464:	cmp	x9, x8
  40d468:	b.ne	40d47c <feof@plt+0x9bdc>  // b.any
  40d46c:	mov	w1, #0x1                   	// #1
  40d470:	mov	x0, x27
  40d474:	bl	47bae8 <_obstack_newchunk@@Base>
  40d478:	ldr	x8, [x27, #24]
  40d47c:	add	x9, x8, #0x1
  40d480:	mov	w10, #0x6c                  	// #108
  40d484:	str	x9, [x19]
  40d488:	strb	w10, [x8]
  40d48c:	ldp	x8, x9, [x19]
  40d490:	mov	w21, #0x1                   	// #1
  40d494:	strb	w21, [x26, #1988]
  40d498:	cmp	x9, x8
  40d49c:	b.ne	40d4b0 <feof@plt+0x9c10>  // b.any
  40d4a0:	mov	w1, #0x1                   	// #1
  40d4a4:	mov	x0, x27
  40d4a8:	bl	47bae8 <_obstack_newchunk@@Base>
  40d4ac:	ldr	x8, [x27, #24]
  40d4b0:	add	x9, x8, #0x1
  40d4b4:	mov	w10, #0x74                  	// #116
  40d4b8:	str	x9, [x19]
  40d4bc:	strb	w10, [x8]
  40d4c0:	ldp	x8, x9, [x19]
  40d4c4:	strb	w21, [x26, #1988]
  40d4c8:	cmp	x9, x8
  40d4cc:	b.ne	40d4e0 <feof@plt+0x9c40>  // b.any
  40d4d0:	mov	w1, #0x1                   	// #1
  40d4d4:	mov	x0, x27
  40d4d8:	bl	47bae8 <_obstack_newchunk@@Base>
  40d4dc:	ldr	x8, [x27, #24]
  40d4e0:	add	x9, x8, #0x1
  40d4e4:	mov	w10, #0x69                  	// #105
  40d4e8:	str	x9, [x19]
  40d4ec:	strb	w10, [x8]
  40d4f0:	ldp	x8, x9, [x19]
  40d4f4:	mov	w21, #0x1                   	// #1
  40d4f8:	strb	w21, [x26, #1988]
  40d4fc:	cmp	x9, x8
  40d500:	b.ne	40d514 <feof@plt+0x9c74>  // b.any
  40d504:	mov	w1, #0x1                   	// #1
  40d508:	mov	x0, x27
  40d50c:	bl	47bae8 <_obstack_newchunk@@Base>
  40d510:	ldr	x8, [x27, #24]
  40d514:	add	x9, x8, #0x1
  40d518:	mov	w10, #0x6c                  	// #108
  40d51c:	str	x9, [x19]
  40d520:	strb	w10, [x8]
  40d524:	ldp	x8, x9, [x19]
  40d528:	strb	w21, [x26, #1988]
  40d52c:	cmp	x9, x8
  40d530:	b.ne	40d544 <feof@plt+0x9ca4>  // b.any
  40d534:	mov	w1, #0x1                   	// #1
  40d538:	mov	x0, x27
  40d53c:	bl	47bae8 <_obstack_newchunk@@Base>
  40d540:	ldr	x8, [x27, #24]
  40d544:	add	x9, x8, #0x1
  40d548:	mov	w10, #0x69                  	// #105
  40d54c:	str	x9, [x19]
  40d550:	strb	w10, [x8]
  40d554:	ldp	x8, x9, [x19]
  40d558:	mov	w21, #0x1                   	// #1
  40d55c:	strb	w21, [x26, #1988]
  40d560:	cmp	x9, x8
  40d564:	b.ne	40d578 <feof@plt+0x9cd8>  // b.any
  40d568:	mov	w1, #0x1                   	// #1
  40d56c:	mov	x0, x27
  40d570:	bl	47bae8 <_obstack_newchunk@@Base>
  40d574:	ldr	x8, [x27, #24]
  40d578:	add	x9, x8, #0x1
  40d57c:	mov	w10, #0x62                  	// #98
  40d580:	str	x9, [x24, #1288]
  40d584:	strb	w10, [x8]
  40d588:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d58c:	ldr	w8, [x8, #1944]
  40d590:	strb	w21, [x26, #1988]
  40d594:	cbz	w8, 40d59c <feof@plt+0x9cfc>
  40d598:	bl	4105cc <feof@plt+0xcd2c>
  40d59c:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  40d5a0:	add	x0, x0, #0x9d0
  40d5a4:	mov	w1, wzr
  40d5a8:	mov	x2, xzr
  40d5ac:	bl	40c344 <feof@plt+0x8aa4>
  40d5b0:	ldr	x8, [x20, #1736]
  40d5b4:	ldrb	w21, [x8]
  40d5b8:	cbz	w21, 40e2d4 <feof@plt+0xaa34>
  40d5bc:	add	x22, x8, #0x1
  40d5c0:	b	40d5e0 <feof@plt+0x9d40>
  40d5c4:	add	x9, x8, #0x1
  40d5c8:	mov	w10, #0x1                   	// #1
  40d5cc:	str	x9, [x24, #1288]
  40d5d0:	strb	w21, [x8]
  40d5d4:	strb	w10, [x26, #1988]
  40d5d8:	ldrb	w21, [x22], #1
  40d5dc:	cbz	w21, 40e2dc <feof@plt+0xaa3c>
  40d5e0:	ldp	x8, x9, [x19]
  40d5e4:	cmp	x9, x8
  40d5e8:	b.ne	40d5c4 <feof@plt+0x9d24>  // b.any
  40d5ec:	mov	w1, #0x1                   	// #1
  40d5f0:	mov	x0, x27
  40d5f4:	bl	47bae8 <_obstack_newchunk@@Base>
  40d5f8:	ldr	x8, [x27, #24]
  40d5fc:	b	40d5c4 <feof@plt+0x9d24>
  40d600:	mov	w8, #0x1                   	// #1
  40d604:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d608:	strb	w8, [x9, #1996]
  40d60c:	b	40e0d4 <feof@plt+0xa834>
  40d610:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d614:	ldr	x24, [x20, #1520]
  40d618:	cbz	x24, 40e0d4 <feof@plt+0xa834>
  40d61c:	mov	x0, x24
  40d620:	bl	4030b0 <strlen@plt>
  40d624:	mov	x23, x0
  40d628:	ldp	x0, x8, [x19]
  40d62c:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d630:	add	x27, x27, #0x4f0
  40d634:	sub	x8, x8, x0
  40d638:	cmp	x8, x23
  40d63c:	b.cs	40d654 <feof@plt+0x9db4>  // b.hs, b.nlast
  40d640:	mov	x0, x27
  40d644:	mov	x1, x23
  40d648:	bl	47bae8 <_obstack_newchunk@@Base>
  40d64c:	ldr	x0, [x27, #24]
  40d650:	ldr	x24, [x20, #1520]
  40d654:	mov	x1, x24
  40d658:	mov	x2, x23
  40d65c:	bl	402fc0 <memcpy@plt>
  40d660:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d664:	ldr	x8, [x9, #1288]
  40d668:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d66c:	ldr	x26, [x20, #1512]
  40d670:	mov	w28, #0x61                  	// #97
  40d674:	add	x24, x8, x23
  40d678:	str	x24, [x9, #1288]
  40d67c:	cbz	x26, 40d6d4 <feof@plt+0x9e34>
  40d680:	mov	x0, x26
  40d684:	bl	4030b0 <strlen@plt>
  40d688:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d68c:	ldr	x8, [x8, #1296]
  40d690:	mov	x23, x0
  40d694:	sub	x8, x8, x24
  40d698:	cmp	x8, x0
  40d69c:	b.cs	40d6b4 <feof@plt+0x9e14>  // b.hs, b.nlast
  40d6a0:	mov	x0, x27
  40d6a4:	mov	x1, x23
  40d6a8:	bl	47bae8 <_obstack_newchunk@@Base>
  40d6ac:	ldr	x24, [x27, #24]
  40d6b0:	ldr	x26, [x20, #1512]
  40d6b4:	mov	x0, x24
  40d6b8:	mov	x1, x26
  40d6bc:	mov	x2, x23
  40d6c0:	bl	402fc0 <memcpy@plt>
  40d6c4:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d6c8:	ldr	x8, [x9, #1288]
  40d6cc:	add	x8, x8, x23
  40d6d0:	str	x8, [x9, #1288]
  40d6d4:	ldur	w23, [x29, #-140]
  40d6d8:	mov	x26, x25
  40d6dc:	b	40c5fc <feof@plt+0x8d5c>
  40d6e0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d6e4:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d6e8:	ldr	x8, [x8, #1168]
  40d6ec:	ldrsw	x9, [x9, #1800]
  40d6f0:	mov	x26, x25
  40d6f4:	str	xzr, [x8, x9, lsl #3]
  40d6f8:	b	40e0d8 <feof@plt+0xa838>
  40d6fc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d700:	ldr	x8, [x8, #1184]
  40d704:	cbz	x8, 40e104 <feof@plt+0xa864>
  40d708:	ldr	w20, [x8, #4]
  40d70c:	b	40e108 <feof@plt+0xa868>
  40d710:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d714:	ldr	x24, [x8, #1888]
  40d718:	cbz	x24, 40e150 <feof@plt+0xa8b0>
  40d71c:	ldp	x0, x8, [x19]
  40d720:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d724:	add	x27, x27, #0x4f0
  40d728:	sub	x8, x8, x0
  40d72c:	cmp	x8, x24
  40d730:	b.cs	40d744 <feof@plt+0x9ea4>  // b.hs, b.nlast
  40d734:	mov	x0, x27
  40d738:	mov	x1, x24
  40d73c:	bl	47bae8 <_obstack_newchunk@@Base>
  40d740:	ldr	x0, [x27, #24]
  40d744:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d748:	ldr	x1, [x8, #1880]
  40d74c:	b	40e188 <feof@plt+0xa8e8>
  40d750:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d754:	ldrb	w8, [x8, #1776]
  40d758:	cbz	w8, 40e204 <feof@plt+0xa964>
  40d75c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d760:	ldrb	w8, [x8, #1256]
  40d764:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d768:	add	x27, x27, #0x4f0
  40d76c:	cmp	w8, #0x1
  40d770:	b.ne	40d78c <feof@plt+0x9eec>  // b.any
  40d774:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d778:	ldrb	w10, [x9, #2032]
  40d77c:	cmp	w10, #0x1
  40d780:	b.eq	40ecec <feof@plt+0xb44c>  // b.none
  40d784:	mov	w10, #0x1                   	// #1
  40d788:	strb	w10, [x9, #2032]
  40d78c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d790:	ldr	w9, [x9, #1160]
  40d794:	cmp	w9, #0x1
  40d798:	b.lt	40eaec <feof@plt+0xb24c>  // b.tstop
  40d79c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d7a0:	ldr	x8, [x8, #1784]
  40d7a4:	mov	x27, xzr
  40d7a8:	mov	w28, #0x61                  	// #97
  40d7ac:	b	40d8ec <feof@plt+0xa04c>
  40d7b0:	ldrb	w3, [x25]
  40d7b4:	cmp	w3, #0x7b
  40d7b8:	b.ne	40ed00 <feof@plt+0xb460>  // b.any
  40d7bc:	add	x23, x24, #0x3
  40d7c0:	mov	x26, x23
  40d7c4:	ldrb	w8, [x26], #1
  40d7c8:	cmp	w8, #0x7d
  40d7cc:	b.ne	40d7c4 <feof@plt+0x9f24>  // b.any
  40d7d0:	sub	w8, w26, w25
  40d7d4:	lsl	x20, x8, #32
  40d7d8:	mov	x8, #0xffffffff00000000    	// #-4294967296
  40d7dc:	add	x8, x20, x8
  40d7e0:	asr	x0, x8, #32
  40d7e4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40d7e8:	mov	x8, #0xfffffffe00000000    	// #-8589934592
  40d7ec:	add	x8, x20, x8
  40d7f0:	asr	x20, x8, #32
  40d7f4:	mov	x1, x23
  40d7f8:	mov	x2, x20
  40d7fc:	mov	x24, x0
  40d800:	bl	402fc0 <memcpy@plt>
  40d804:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d808:	ldr	x8, [x8, #1904]
  40d80c:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d810:	mov	w28, #0x61                  	// #97
  40d814:	add	x27, x27, #0x4f0
  40d818:	strb	wzr, [x24, x20]
  40d81c:	cbz	x8, 40d84c <feof@plt+0x9fac>
  40d820:	ldr	w20, [x8, #4]
  40d824:	cbz	w20, 40d84c <feof@plt+0x9fac>
  40d828:	mov	x21, xzr
  40d82c:	add	x22, x8, #0x8
  40d830:	ldr	x1, [x22, x21, lsl #3]
  40d834:	mov	x0, x24
  40d838:	bl	403640 <strcmp@plt>
  40d83c:	cbz	w0, 40ec98 <feof@plt+0xb3f8>
  40d840:	add	x21, x21, #0x1
  40d844:	cmp	x21, x20
  40d848:	b.cc	40d830 <feof@plt+0x9f90>  // b.lo, b.ul, b.last
  40d84c:	mov	x0, x24
  40d850:	bl	4030b0 <strlen@plt>
  40d854:	mov	x1, x0
  40d858:	mov	x0, x24
  40d85c:	bl	4123bc <feof@plt+0xeb1c>
  40d860:	mov	x0, x24
  40d864:	bl	4031d0 <free@plt>
  40d868:	ldur	w23, [x29, #-140]
  40d86c:	mov	w22, #0x1                   	// #1
  40d870:	b	40c5fc <feof@plt+0x8d5c>
  40d874:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x42fc>
  40d878:	add	x0, x0, #0xeaf
  40d87c:	mov	w1, w27
  40d880:	bl	42b940 <feof@plt+0x280a0>
  40d884:	b	40e0d4 <feof@plt+0xa834>
  40d888:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d88c:	ldrb	w8, [x8, #1256]
  40d890:	tbnz	w8, #0, 40e0c0 <feof@plt+0xa820>
  40d894:	b	40e264 <feof@plt+0xa9c4>
  40d898:	str	w20, [x8, #4]
  40d89c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d8a0:	add	x8, x8, #0x4a0
  40d8a4:	ldr	x8, [x8]
  40d8a8:	ldur	w23, [x29, #-140]
  40d8ac:	ldr	w9, [x8, #4]
  40d8b0:	add	w10, w9, #0x1
  40d8b4:	add	x9, x8, x9, lsl #3
  40d8b8:	str	w10, [x8, #4]
  40d8bc:	str	x28, [x9, #8]
  40d8c0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d8c4:	ldr	x8, [x8, #1784]
  40d8c8:	mov	w10, #0x1                   	// #1
  40d8cc:	mov	w28, #0x61                  	// #97
  40d8d0:	add	x9, x8, x27, lsl #5
  40d8d4:	strb	w10, [x9, #24]
  40d8d8:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d8dc:	ldr	w9, [x9, #1160]
  40d8e0:	add	x27, x27, #0x1
  40d8e4:	cmp	x27, w9, sxtw
  40d8e8:	b.ge	40e058 <feof@plt+0xa7b8>  // b.tcont
  40d8ec:	add	x10, x8, x27, lsl #5
  40d8f0:	ldr	x11, [x10, #8]
  40d8f4:	cbz	x11, 40d904 <feof@plt+0xa064>
  40d8f8:	ldrb	w11, [x11]
  40d8fc:	cmp	w11, #0x2a
  40d900:	b.eq	40d8e0 <feof@plt+0xa040>  // b.none
  40d904:	adrp	x11, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d908:	ldr	x10, [x10, #16]
  40d90c:	ldr	x11, [x11, #1792]
  40d910:	cmp	x10, x11
  40d914:	b.ne	40d8e0 <feof@plt+0xa040>  // b.any
  40d918:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d91c:	ldrb	w9, [x9, #2032]
  40d920:	lsl	x10, x27, #5
  40d924:	ldr	x28, [x8, x10]
  40d928:	cmp	w9, #0x1
  40d92c:	b.ne	40d984 <feof@plt+0xa0e4>  // b.any
  40d930:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d934:	ldr	x26, [x8, #2040]
  40d938:	cbz	x26, 40d9d8 <feof@plt+0xa138>
  40d93c:	ldp	w8, w9, [x26]
  40d940:	and	w0, w8, #0x7fffffff
  40d944:	cmp	w0, w9
  40d948:	b.ne	40db78 <feof@plt+0xa2d8>  // b.any
  40d94c:	tbnz	w8, #31, 40d9f8 <feof@plt+0xa158>
  40d950:	add	w1, w0, #0x1
  40d954:	bl	425fbc <feof@plt+0x2271c>
  40d958:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d95c:	ldr	x8, [x8, #2040]
  40d960:	mov	w9, w0
  40d964:	lsl	x9, x9, #3
  40d968:	mov	w24, w0
  40d96c:	add	x1, x9, #0x8
  40d970:	mov	w20, wzr
  40d974:	cbz	x8, 40dc0c <feof@plt+0xa36c>
  40d978:	ldr	w21, [x8, #4]
  40d97c:	mov	w23, wzr
  40d980:	b	40da2c <feof@plt+0xa18c>
  40d984:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d988:	ldr	x26, [x8, #1184]
  40d98c:	cbz	x26, 40d9e8 <feof@plt+0xa148>
  40d990:	ldp	w8, w9, [x26]
  40d994:	and	w0, w8, #0x7fffffff
  40d998:	cmp	w0, w9
  40d99c:	b.ne	40d89c <feof@plt+0x9ffc>  // b.any
  40d9a0:	tbnz	w8, #31, 40da74 <feof@plt+0xa1d4>
  40d9a4:	add	w1, w0, #0x1
  40d9a8:	bl	425fbc <feof@plt+0x2271c>
  40d9ac:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d9b0:	ldr	x8, [x8, #1184]
  40d9b4:	mov	w9, w0
  40d9b8:	lsl	x9, x9, #3
  40d9bc:	mov	w24, w0
  40d9c0:	add	x1, x9, #0x8
  40d9c4:	mov	w20, wzr
  40d9c8:	cbz	x8, 40dc18 <feof@plt+0xa378>
  40d9cc:	ldr	w21, [x8, #4]
  40d9d0:	mov	w23, wzr
  40d9d4:	b	40daa8 <feof@plt+0xa208>
  40d9d8:	mov	w20, wzr
  40d9dc:	mov	w23, wzr
  40d9e0:	mov	w24, #0x4                   	// #4
  40d9e4:	b	40da18 <feof@plt+0xa178>
  40d9e8:	mov	w20, wzr
  40d9ec:	mov	w23, wzr
  40d9f0:	mov	w24, #0x4                   	// #4
  40d9f4:	b	40da94 <feof@plt+0xa1f4>
  40d9f8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40d9fc:	str	xzr, [x8, #2040]
  40da00:	ldr	w20, [x26, #4]
  40da04:	mov	w8, #0x4                   	// #4
  40da08:	mov	w23, #0x1                   	// #1
  40da0c:	add	w9, w20, #0x1
  40da10:	cmp	w9, #0x4
  40da14:	csinc	w24, w8, w20, ls  // ls = plast
  40da18:	mov	w9, w24
  40da1c:	lsl	x9, x9, #3
  40da20:	mov	x8, xzr
  40da24:	mov	w21, wzr
  40da28:	add	x1, x9, #0x8
  40da2c:	mov	x0, x8
  40da30:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  40da34:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40da38:	add	x8, x8, #0x7f8
  40da3c:	and	w9, w24, #0x7fffffff
  40da40:	str	x0, [x8]
  40da44:	stp	w9, w21, [x0]
  40da48:	cbz	w23, 40d8a4 <feof@plt+0xa004>
  40da4c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40da50:	ldr	x8, [x8, #2040]
  40da54:	cbz	w20, 40db74 <feof@plt+0xa2d4>
  40da58:	sub	w12, w20, #0x1
  40da5c:	add	x9, x26, #0x8
  40da60:	cmp	w12, #0x3
  40da64:	add	x10, x8, #0x8
  40da68:	b.cs	40daf0 <feof@plt+0xa250>  // b.hs, b.nlast
  40da6c:	mov	w11, w20
  40da70:	b	40db64 <feof@plt+0xa2c4>
  40da74:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40da78:	str	xzr, [x8, #1184]
  40da7c:	ldr	w20, [x26, #4]
  40da80:	mov	w8, #0x4                   	// #4
  40da84:	mov	w23, #0x1                   	// #1
  40da88:	add	w9, w20, #0x1
  40da8c:	cmp	w9, #0x4
  40da90:	csinc	w24, w8, w20, ls  // ls = plast
  40da94:	mov	w9, w24
  40da98:	lsl	x9, x9, #3
  40da9c:	mov	x8, xzr
  40daa0:	mov	w21, wzr
  40daa4:	add	x1, x9, #0x8
  40daa8:	mov	x0, x8
  40daac:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  40dab0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dab4:	add	x8, x8, #0x4a0
  40dab8:	and	w9, w24, #0x7fffffff
  40dabc:	str	x0, [x8]
  40dac0:	stp	w9, w21, [x0]
  40dac4:	cbz	w23, 40d8a4 <feof@plt+0xa004>
  40dac8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dacc:	ldr	x8, [x8, #1184]
  40dad0:	cbz	w20, 40d898 <feof@plt+0x9ff8>
  40dad4:	sub	w12, w20, #0x1
  40dad8:	add	x9, x26, #0x8
  40dadc:	cmp	w12, #0x3
  40dae0:	add	x10, x8, #0x8
  40dae4:	b.cs	40db84 <feof@plt+0xa2e4>  // b.hs, b.nlast
  40dae8:	mov	w11, w20
  40daec:	b	40dbf8 <feof@plt+0xa358>
  40daf0:	lsl	x11, x12, #3
  40daf4:	add	x13, x26, x11
  40daf8:	add	x13, x13, #0x10
  40dafc:	cmp	x13, x10
  40db00:	b.ls	40db18 <feof@plt+0xa278>  // b.plast
  40db04:	add	x11, x8, x11
  40db08:	add	x11, x11, #0x10
  40db0c:	cmp	x11, x9
  40db10:	mov	w11, w20
  40db14:	b.hi	40db64 <feof@plt+0xa2c4>  // b.pmore
  40db18:	add	x12, x12, #0x1
  40db1c:	and	x13, x12, #0x1fffffffc
  40db20:	lsl	x9, x13, #3
  40db24:	add	x10, x26, x9
  40db28:	add	x15, x8, x9
  40db2c:	add	x14, x8, #0x18
  40db30:	sub	w11, w20, w13
  40db34:	add	x9, x10, #0x8
  40db38:	add	x10, x15, #0x8
  40db3c:	add	x15, x26, #0x18
  40db40:	mov	x16, x13
  40db44:	ldp	q0, q1, [x15, #-16]
  40db48:	subs	x16, x16, #0x4
  40db4c:	add	x15, x15, #0x20
  40db50:	stp	q0, q1, [x14, #-16]
  40db54:	add	x14, x14, #0x20
  40db58:	b.ne	40db44 <feof@plt+0xa2a4>  // b.any
  40db5c:	cmp	x12, x13
  40db60:	b.eq	40db74 <feof@plt+0xa2d4>  // b.none
  40db64:	ldr	x12, [x9], #8
  40db68:	subs	w11, w11, #0x1
  40db6c:	str	x12, [x10], #8
  40db70:	b.ne	40db64 <feof@plt+0xa2c4>  // b.any
  40db74:	str	w20, [x8, #4]
  40db78:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40db7c:	add	x8, x8, #0x7f8
  40db80:	b	40d8a4 <feof@plt+0xa004>
  40db84:	lsl	x11, x12, #3
  40db88:	add	x13, x26, x11
  40db8c:	add	x13, x13, #0x10
  40db90:	cmp	x13, x10
  40db94:	b.ls	40dbac <feof@plt+0xa30c>  // b.plast
  40db98:	add	x11, x8, x11
  40db9c:	add	x11, x11, #0x10
  40dba0:	cmp	x11, x9
  40dba4:	mov	w11, w20
  40dba8:	b.hi	40dbf8 <feof@plt+0xa358>  // b.pmore
  40dbac:	add	x12, x12, #0x1
  40dbb0:	and	x13, x12, #0x1fffffffc
  40dbb4:	lsl	x9, x13, #3
  40dbb8:	add	x10, x26, x9
  40dbbc:	add	x15, x8, x9
  40dbc0:	add	x14, x8, #0x18
  40dbc4:	sub	w11, w20, w13
  40dbc8:	add	x9, x10, #0x8
  40dbcc:	add	x10, x15, #0x8
  40dbd0:	add	x15, x26, #0x18
  40dbd4:	mov	x16, x13
  40dbd8:	ldp	q0, q1, [x15, #-16]
  40dbdc:	subs	x16, x16, #0x4
  40dbe0:	add	x15, x15, #0x20
  40dbe4:	stp	q0, q1, [x14, #-16]
  40dbe8:	add	x14, x14, #0x20
  40dbec:	b.ne	40dbd8 <feof@plt+0xa338>  // b.any
  40dbf0:	cmp	x12, x13
  40dbf4:	b.eq	40d898 <feof@plt+0x9ff8>  // b.none
  40dbf8:	ldr	x12, [x9], #8
  40dbfc:	subs	w11, w11, #0x1
  40dc00:	str	x12, [x10], #8
  40dc04:	b.ne	40dbf8 <feof@plt+0xa358>  // b.any
  40dc08:	b	40d898 <feof@plt+0x9ff8>
  40dc0c:	mov	w23, wzr
  40dc10:	mov	w21, wzr
  40dc14:	b	40da2c <feof@plt+0xa18c>
  40dc18:	mov	w23, wzr
  40dc1c:	mov	w21, wzr
  40dc20:	b	40daa8 <feof@plt+0xa208>
  40dc24:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x42fc>
  40dc28:	mov	x20, xzr
  40dc2c:	add	x25, x25, #0xdf8
  40dc30:	add	w28, w28, #0x2
  40dc34:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dc38:	ldr	w8, [x8, #1144]
  40dc3c:	tbz	w8, #31, 40dc5c <feof@plt+0xa3bc>
  40dc40:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  40dc44:	add	x0, x0, #0xa21
  40dc48:	mov	x1, x25
  40dc4c:	mov	x2, xzr
  40dc50:	bl	4799ac <feof@plt+0x7610c>
  40dc54:	mov	x25, x0
  40dc58:	add	w28, w28, #0x3
  40dc5c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dc60:	ldr	x23, [x8, #1888]
  40dc64:	cbz	x23, 40dd64 <feof@plt+0xa4c4>
  40dc68:	add	w20, w28, w23
  40dc6c:	add	w8, w20, #0x1
  40dc70:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dc74:	sxtw	x27, w8
  40dc78:	str	w8, [x21, #1968]
  40dc7c:	add	x8, x27, #0xf
  40dc80:	and	x8, x8, #0xfffffffffffffff0
  40dc84:	mov	x9, sp
  40dc88:	sxtw	x24, w28
  40dc8c:	sub	x28, x9, x8
  40dc90:	mov	sp, x28
  40dc94:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dc98:	ldr	x1, [x8, #1880]
  40dc9c:	mov	x0, x28
  40dca0:	mov	x2, x23
  40dca4:	bl	402fc0 <memcpy@plt>
  40dca8:	add	x0, x28, x23
  40dcac:	mov	x1, x25
  40dcb0:	mov	x2, x24
  40dcb4:	bl	402fc0 <memcpy@plt>
  40dcb8:	add	x8, x23, x24
  40dcbc:	mov	x0, x27
  40dcc0:	strb	wzr, [x28, x8]
  40dcc4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40dcc8:	sxtw	x25, w20
  40dccc:	mov	x1, x28
  40dcd0:	mov	x2, x25
  40dcd4:	mov	x24, x0
  40dcd8:	bl	402fc0 <memcpy@plt>
  40dcdc:	ldp	x0, x8, [x19]
  40dce0:	ldrsw	x23, [x21, #1968]
  40dce4:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dce8:	strb	wzr, [x24, x25]
  40dcec:	sub	x8, x8, x0
  40dcf0:	cmp	x8, x23
  40dcf4:	str	x24, [x20, #1960]
  40dcf8:	b.cs	40dd20 <feof@plt+0xa480>  // b.hs, b.nlast
  40dcfc:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dd00:	add	x27, x27, #0x4f0
  40dd04:	mov	x0, x27
  40dd08:	mov	x1, x23
  40dd0c:	bl	47bae8 <_obstack_newchunk@@Base>
  40dd10:	ldr	x0, [x27, #24]
  40dd14:	ldr	x24, [x20, #1960]
  40dd18:	mov	w28, #0x61                  	// #97
  40dd1c:	b	40dd2c <feof@plt+0xa48c>
  40dd20:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dd24:	mov	w28, #0x61                  	// #97
  40dd28:	add	x27, x27, #0x4f0
  40dd2c:	mov	x1, x24
  40dd30:	mov	x2, x23
  40dd34:	bl	402fc0 <memcpy@plt>
  40dd38:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dd3c:	ldr	x8, [x10, #1288]
  40dd40:	mov	w9, #0x1                   	// #1
  40dd44:	adrp	x11, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dd48:	strb	w9, [x11, #1988]
  40dd4c:	add	x8, x8, x23
  40dd50:	ldur	w23, [x29, #-140]
  40dd54:	str	x8, [x10, #1288]
  40dd58:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dd5c:	str	wzr, [x8, #1992]
  40dd60:	b	40c5fc <feof@plt+0x8d5c>
  40dd64:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dd68:	ldr	w8, [x8, #1616]
  40dd6c:	stur	x20, [x29, #-176]
  40dd70:	cbz	w8, 40de5c <feof@plt+0xa5bc>
  40dd74:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dd78:	ldrsw	x23, [x8, #1208]
  40dd7c:	sxtw	x24, w28
  40dd80:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dd84:	add	x22, x23, x24
  40dd88:	add	w8, w22, #0x1
  40dd8c:	add	x9, x22, #0x10
  40dd90:	str	w8, [x10, #1968]
  40dd94:	and	x8, x9, #0xfffffffffffffff0
  40dd98:	mov	x9, sp
  40dd9c:	sub	x20, x9, x8
  40dda0:	mov	sp, x20
  40dda4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dda8:	ldr	x1, [x8, #1200]
  40ddac:	mov	x0, x20
  40ddb0:	mov	x2, x23
  40ddb4:	bl	402fc0 <memcpy@plt>
  40ddb8:	add	x0, x20, x23
  40ddbc:	mov	x1, x25
  40ddc0:	mov	x2, x24
  40ddc4:	bl	402fc0 <memcpy@plt>
  40ddc8:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ddcc:	ldr	x1, [x21, #1192]
  40ddd0:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ddd4:	mov	x0, x20
  40ddd8:	strb	wzr, [x20, x22]
  40dddc:	mov	w22, #0x1                   	// #1
  40dde0:	str	x20, [x23, #1960]
  40dde4:	bl	479ca4 <feof@plt+0x76404>
  40dde8:	cbz	w0, 40de5c <feof@plt+0xa5bc>
  40ddec:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ddf0:	ldr	w8, [x20, #1224]
  40ddf4:	cbnz	w8, 40de18 <feof@plt+0xa578>
  40ddf8:	ldr	x1, [x21, #1192]
  40ddfc:	adrp	x2, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40de00:	add	x2, x2, #0x818
  40de04:	mov	w0, wzr
  40de08:	bl	403650 <__xstat@plt>
  40de0c:	cmp	w0, #0x0
  40de10:	csinc	w8, w0, wzr, lt  // lt = tstop
  40de14:	str	w8, [x20, #1224]
  40de18:	cmp	w8, #0x1
  40de1c:	b.ne	40dfe0 <feof@plt+0xa740>  // b.any
  40de20:	ldr	x1, [x23, #1960]
  40de24:	sub	x2, x29, #0x88
  40de28:	mov	w0, wzr
  40de2c:	bl	403650 <__xstat@plt>
  40de30:	tbnz	w0, #31, 40dfe0 <feof@plt+0xa740>
  40de34:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40de38:	ldr	x8, [x8, #2072]
  40de3c:	ldur	x9, [x29, #-136]
  40de40:	cmp	x8, x9
  40de44:	b.ne	40dfe0 <feof@plt+0xa740>  // b.any
  40de48:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40de4c:	ldr	x8, [x8, #2080]
  40de50:	ldur	x9, [x29, #-128]
  40de54:	cmp	x8, x9
  40de58:	b.ne	40dfe0 <feof@plt+0xa740>  // b.any
  40de5c:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40de60:	ldr	x24, [x20, #1952]
  40de64:	cbz	x24, 40dedc <feof@plt+0xa63c>
  40de68:	orr	w8, w27, #0x20
  40de6c:	cmp	w8, #0x75
  40de70:	cset	w8, eq  // eq = none
  40de74:	cmp	w27, #0x6a
  40de78:	cset	w9, eq  // eq = none
  40de7c:	sxtw	x23, w28
  40de80:	orr	w21, w9, w8
  40de84:	stur	w9, [x29, #-180]
  40de88:	b	40de94 <feof@plt+0xa5f4>
  40de8c:	ldr	x24, [x24, #32]
  40de90:	cbz	x24, 40dedc <feof@plt+0xa63c>
  40de94:	ldr	w8, [x24, #8]
  40de98:	cmp	w8, w28
  40de9c:	b.ne	40de8c <feof@plt+0xa5ec>  // b.any
  40dea0:	ldr	x0, [x24]
  40dea4:	mov	x1, x25
  40dea8:	mov	x2, x23
  40deac:	bl	403450 <strncmp@plt>
  40deb0:	cbnz	w0, 40de8c <feof@plt+0xa5ec>
  40deb4:	ldr	w8, [x24, #12]
  40deb8:	cmp	w8, w21
  40debc:	b.ne	40de8c <feof@plt+0xa5ec>  // b.any
  40dec0:	ldur	x21, [x29, #-176]
  40dec4:	cmp	w27, #0x6a
  40dec8:	b.eq	40ebf0 <feof@plt+0xb350>  // b.none
  40decc:	ldur	w23, [x29, #-180]
  40ded0:	cmp	w27, #0x75
  40ded4:	b.eq	40df00 <feof@plt+0xa660>  // b.none
  40ded8:	b	40df70 <feof@plt+0xa6d0>
  40dedc:	cmp	w27, #0x6a
  40dee0:	mov	w0, #0x28                  	// #40
  40dee4:	cset	w23, eq  // eq = none
  40dee8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40deec:	ldr	x8, [x20, #1952]
  40def0:	ldur	x21, [x29, #-176]
  40def4:	mov	x24, x0
  40def8:	str	x0, [x20, #1952]
  40defc:	str	x8, [x0, #32]
  40df00:	str	w28, [x24, #8]
  40df04:	cbnz	x21, 40df2c <feof@plt+0xa68c>
  40df08:	add	w8, w28, #0x1
  40df0c:	sxtw	x0, w8
  40df10:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40df14:	sxtw	x20, w28
  40df18:	mov	x1, x25
  40df1c:	mov	x2, x20
  40df20:	mov	x21, x0
  40df24:	bl	402fc0 <memcpy@plt>
  40df28:	strb	wzr, [x21, x20]
  40df2c:	orr	w8, w27, #0x20
  40df30:	cmp	w8, #0x75
  40df34:	cset	w8, eq  // eq = none
  40df38:	orr	w8, w8, w23
  40df3c:	mov	x0, x21
  40df40:	str	x21, [x24]
  40df44:	str	w8, [x24, #12]
  40df48:	bl	47b980 <feof@plt+0x780e0>
  40df4c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40df50:	mov	x20, x0
  40df54:	str	x0, [x8, #1960]
  40df58:	bl	4030b0 <strlen@plt>
  40df5c:	mov	x21, xzr
  40df60:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40df64:	str	w0, [x8, #1968]
  40df68:	str	x20, [x24, #16]
  40df6c:	str	w0, [x24, #24]
  40df70:	mov	x0, x21
  40df74:	bl	4031d0 <free@plt>
  40df78:	ldp	x0, x8, [x19]
  40df7c:	ldrsw	x23, [x24, #24]
  40df80:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40df84:	mov	w28, #0x61                  	// #97
  40df88:	sub	x8, x8, x0
  40df8c:	cmp	x8, x23
  40df90:	add	x27, x27, #0x4f0
  40df94:	b.cs	40dfa8 <feof@plt+0xa708>  // b.hs, b.nlast
  40df98:	mov	x0, x27
  40df9c:	mov	x1, x23
  40dfa0:	bl	47bae8 <_obstack_newchunk@@Base>
  40dfa4:	ldr	x0, [x27, #24]
  40dfa8:	ldr	x1, [x24, #16]
  40dfac:	mov	x2, x23
  40dfb0:	bl	402fc0 <memcpy@plt>
  40dfb4:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dfb8:	ldr	x8, [x10, #1288]
  40dfbc:	mov	w9, #0x1                   	// #1
  40dfc0:	adrp	x11, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dfc4:	str	w9, [x11, #1992]
  40dfc8:	add	x8, x8, x23
  40dfcc:	ldur	w23, [x29, #-140]
  40dfd0:	str	x8, [x10, #1288]
  40dfd4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dfd8:	strb	w9, [x8, #1988]
  40dfdc:	b	40c5fc <feof@plt+0x8d5c>
  40dfe0:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40dfe4:	ldrsw	x0, [x21, #1968]
  40dfe8:	ldr	x20, [x23, #1960]
  40dfec:	sub	x25, x0, #0x1
  40dff0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40dff4:	mov	x1, x20
  40dff8:	mov	x2, x25
  40dffc:	mov	x24, x0
  40e000:	bl	402fc0 <memcpy@plt>
  40e004:	ldp	x0, x8, [x19]
  40e008:	mov	x20, x23
  40e00c:	ldrsw	x23, [x21, #1968]
  40e010:	b	40dce8 <feof@plt+0xa448>
  40e014:	ldur	w23, [x29, #-140]
  40e018:	b	40e0f4 <feof@plt+0xa854>
  40e01c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e020:	ldr	w8, [x8, #1944]
  40e024:	cbz	w8, 40e02c <feof@plt+0xa78c>
  40e028:	bl	4105cc <feof@plt+0xcd2c>
  40e02c:	ldrb	w20, [x25]
  40e030:	cmp	w20, #0x7d
  40e034:	b.eq	40e03c <feof@plt+0xa79c>  // b.none
  40e038:	cbnz	w20, 40c604 <feof@plt+0x8d64>
  40e03c:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  40e040:	add	x0, x0, #0x9d0
  40e044:	mov	w1, wzr
  40e048:	mov	x2, xzr
  40e04c:	bl	40c344 <feof@plt+0x8aa4>
  40e050:	mov	x26, x25
  40e054:	b	40c5fc <feof@plt+0x8d5c>
  40e058:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e05c:	ldrb	w8, [x8, #1256]
  40e060:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e064:	add	x27, x27, #0x4f0
  40e068:	tbz	w8, #0, 40eaf4 <feof@plt+0xb254>
  40e06c:	bl	412da8 <feof@plt+0xf508>
  40e070:	mov	x26, x25
  40e074:	b	40c5fc <feof@plt+0x8d5c>
  40e078:	ldp	x8, x9, [x19]
  40e07c:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e080:	add	x27, x27, #0x4f0
  40e084:	cmp	x9, x8
  40e088:	b.ne	40e09c <feof@plt+0xa7fc>  // b.any
  40e08c:	mov	w1, #0x1                   	// #1
  40e090:	mov	x0, x27
  40e094:	bl	47bae8 <_obstack_newchunk@@Base>
  40e098:	ldr	x8, [x27, #24]
  40e09c:	add	x9, x8, #0x1
  40e0a0:	mov	w10, #0x2e                  	// #46
  40e0a4:	adrp	x11, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e0a8:	str	x9, [x11, #1288]
  40e0ac:	strb	w10, [x8]
  40e0b0:	b	40e264 <feof@plt+0xa9c4>
  40e0b4:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e0b8:	add	x27, x27, #0x4f0
  40e0bc:	cbz	w8, 40e264 <feof@plt+0xa9c4>
  40e0c0:	bl	412da8 <feof@plt+0xf508>
  40e0c4:	b	40e264 <feof@plt+0xa9c4>
  40e0c8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x42fc>
  40e0cc:	add	x0, x0, #0xe6f
  40e0d0:	bl	42b940 <feof@plt+0x280a0>
  40e0d4:	mov	x26, x25
  40e0d8:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e0dc:	mov	w28, #0x61                  	// #97
  40e0e0:	add	x27, x27, #0x4f0
  40e0e4:	b	40c5fc <feof@plt+0x8d5c>
  40e0e8:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e0ec:	mov	w28, #0x61                  	// #97
  40e0f0:	add	x27, x27, #0x4f0
  40e0f4:	cmp	w21, #0x0
  40e0f8:	cinc	x26, x20, ne  // ne = any
  40e0fc:	mov	w22, #0x1                   	// #1
  40e100:	b	40c5fc <feof@plt+0x8d5c>
  40e104:	mov	w20, wzr
  40e108:	ldrb	w3, [x25]
  40e10c:	cmp	w3, #0x7b
  40e110:	b.ne	40ed18 <feof@plt+0xb478>  // b.any
  40e114:	add	x0, x24, #0x3
  40e118:	bl	4132a4 <feof@plt+0xfa04>
  40e11c:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e120:	mov	w28, #0x61                  	// #97
  40e124:	add	x27, x27, #0x4f0
  40e128:	cbz	x0, 40ec90 <feof@plt+0xb3f0>
  40e12c:	mov	x26, x0
  40e130:	bl	4105cc <feof@plt+0xcd2c>
  40e134:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e138:	ldr	x8, [x8, #1184]
  40e13c:	cbz	x8, 40e270 <feof@plt+0xa9d0>
  40e140:	ldr	w9, [x8, #4]
  40e144:	cmp	w9, w20
  40e148:	b.eq	40c5fc <feof@plt+0x8d5c>  // b.none
  40e14c:	b	40e27c <feof@plt+0xa9dc>
  40e150:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e154:	ldp	x0, x9, [x19]
  40e158:	ldrsw	x24, [x8, #1208]
  40e15c:	sub	x8, x9, x0
  40e160:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e164:	cmp	x8, x24
  40e168:	add	x27, x27, #0x4f0
  40e16c:	b.cs	40e180 <feof@plt+0xa8e0>  // b.hs, b.nlast
  40e170:	mov	x0, x27
  40e174:	mov	x1, x24
  40e178:	bl	47bae8 <_obstack_newchunk@@Base>
  40e17c:	ldr	x0, [x27, #24]
  40e180:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e184:	ldr	x1, [x8, #1200]
  40e188:	mov	x2, x24
  40e18c:	bl	402fc0 <memcpy@plt>
  40e190:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e194:	ldr	x8, [x20, #1288]
  40e198:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e19c:	ldr	w9, [x9, #1144]
  40e1a0:	mov	w28, #0x61                  	// #97
  40e1a4:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e1a8:	add	x8, x8, x24
  40e1ac:	str	x8, [x20, #1288]
  40e1b0:	tbz	w9, #31, 40e1f4 <feof@plt+0xa954>
  40e1b4:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e1b8:	ldr	x9, [x9, #1296]
  40e1bc:	sub	x9, x9, x8
  40e1c0:	cmp	x9, #0x2
  40e1c4:	b.hi	40e1d8 <feof@plt+0xa938>  // b.pmore
  40e1c8:	mov	w1, #0x3                   	// #3
  40e1cc:	mov	x0, x27
  40e1d0:	bl	47bae8 <_obstack_newchunk@@Base>
  40e1d4:	ldr	x8, [x27, #24]
  40e1d8:	mov	w9, #0x6b                  	// #107
  40e1dc:	mov	w10, #0x672e                	// #26414
  40e1e0:	strb	w9, [x8, #2]
  40e1e4:	strh	w10, [x8]
  40e1e8:	ldr	x8, [x20, #1288]
  40e1ec:	add	x8, x8, #0x3
  40e1f0:	str	x8, [x20, #1288]
  40e1f4:	mov	w8, #0x1                   	// #1
  40e1f8:	strb	w8, [x21, #1988]
  40e1fc:	mov	x26, x25
  40e200:	b	40c5fc <feof@plt+0x8d5c>
  40e204:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e208:	ldp	x0, x9, [x19]
  40e20c:	ldr	x23, [x8, #1176]
  40e210:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e214:	add	x27, x27, #0x4f0
  40e218:	sub	x8, x9, x0
  40e21c:	cmp	x8, x23
  40e220:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e224:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e228:	b.cs	40e23c <feof@plt+0xa99c>  // b.hs, b.nlast
  40e22c:	mov	x0, x27
  40e230:	mov	x1, x23
  40e234:	bl	47bae8 <_obstack_newchunk@@Base>
  40e238:	ldr	x0, [x27, #24]
  40e23c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e240:	ldr	x1, [x8, #1192]
  40e244:	mov	x2, x23
  40e248:	bl	402fc0 <memcpy@plt>
  40e24c:	ldr	x8, [x20, #1288]
  40e250:	mov	w9, #0x1                   	// #1
  40e254:	strb	w9, [x21, #1988]
  40e258:	add	x8, x8, x23
  40e25c:	str	x8, [x20, #1288]
  40e260:	ldur	w23, [x29, #-140]
  40e264:	mov	x26, x25
  40e268:	mov	w28, #0x61                  	// #97
  40e26c:	b	40c5fc <feof@plt+0x8d5c>
  40e270:	mov	w9, wzr
  40e274:	cmp	w9, w20
  40e278:	b.eq	40c5fc <feof@plt+0x8d5c>  // b.none
  40e27c:	ldr	w9, [x8, #4]
  40e280:	sub	w9, w9, #0x1
  40e284:	add	x8, x8, w9, uxtw #3
  40e288:	ldr	x0, [x8, #8]
  40e28c:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  40e290:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e294:	ldr	x21, [x20, #1136]
  40e298:	mov	x23, x0
  40e29c:	cbz	x21, 40e2b8 <feof@plt+0xaa18>
  40e2a0:	ldr	x1, [x21]
  40e2a4:	mov	x0, x23
  40e2a8:	bl	479ca4 <feof@plt+0x76404>
  40e2ac:	cbz	w0, 40ebe0 <feof@plt+0xb340>
  40e2b0:	ldr	x21, [x21, #8]
  40e2b4:	cbnz	x21, 40e2a0 <feof@plt+0xaa00>
  40e2b8:	mov	w0, #0x10                  	// #16
  40e2bc:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40e2c0:	ldr	x8, [x20, #1136]
  40e2c4:	str	x0, [x20, #1136]
  40e2c8:	stp	x23, x8, [x0]
  40e2cc:	ldur	w23, [x29, #-140]
  40e2d0:	b	40c5fc <feof@plt+0x8d5c>
  40e2d4:	mov	w8, #0x1                   	// #1
  40e2d8:	strb	w8, [x26, #1988]
  40e2dc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e2e0:	ldr	w8, [x8, #1944]
  40e2e4:	cbz	w8, 40e2ec <feof@plt+0xaa4c>
  40e2e8:	bl	4105cc <feof@plt+0xcd2c>
  40e2ec:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  40e2f0:	add	x0, x0, #0x9d0
  40e2f4:	mov	w1, wzr
  40e2f8:	mov	x2, xzr
  40e2fc:	bl	40c344 <feof@plt+0x8aa4>
  40e300:	mov	w22, #0x1                   	// #1
  40e304:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e308:	ldr	x8, [x23, #1744]
  40e30c:	cbz	x8, 40e5dc <feof@plt+0xad3c>
  40e310:	ldp	x8, x9, [x19]
  40e314:	cmp	x9, x8
  40e318:	b.ne	40e32c <feof@plt+0xaa8c>  // b.any
  40e31c:	mov	w1, #0x1                   	// #1
  40e320:	mov	x0, x27
  40e324:	bl	47bae8 <_obstack_newchunk@@Base>
  40e328:	ldr	x8, [x27, #24]
  40e32c:	add	x9, x8, #0x1
  40e330:	mov	w10, #0x2d                  	// #45
  40e334:	str	x9, [x19]
  40e338:	strb	w10, [x8]
  40e33c:	ldp	x8, x9, [x19]
  40e340:	mov	w21, #0x1                   	// #1
  40e344:	strb	w21, [x26, #1988]
  40e348:	cmp	x9, x8
  40e34c:	b.ne	40e360 <feof@plt+0xaac0>  // b.any
  40e350:	mov	w1, #0x1                   	// #1
  40e354:	mov	x0, x27
  40e358:	bl	47bae8 <_obstack_newchunk@@Base>
  40e35c:	ldr	x8, [x27, #24]
  40e360:	add	x9, x8, #0x1
  40e364:	mov	w10, #0x69                  	// #105
  40e368:	str	x9, [x19]
  40e36c:	strb	w10, [x8]
  40e370:	ldp	x8, x9, [x19]
  40e374:	strb	w21, [x26, #1988]
  40e378:	cmp	x9, x8
  40e37c:	b.ne	40e390 <feof@plt+0xaaf0>  // b.any
  40e380:	mov	w1, #0x1                   	// #1
  40e384:	mov	x0, x27
  40e388:	bl	47bae8 <_obstack_newchunk@@Base>
  40e38c:	ldr	x8, [x27, #24]
  40e390:	add	x9, x8, #0x1
  40e394:	mov	w10, #0x6d                  	// #109
  40e398:	str	x9, [x19]
  40e39c:	strb	w10, [x8]
  40e3a0:	ldp	x8, x9, [x19]
  40e3a4:	mov	w21, #0x1                   	// #1
  40e3a8:	strb	w21, [x26, #1988]
  40e3ac:	cmp	x9, x8
  40e3b0:	b.ne	40e3c4 <feof@plt+0xab24>  // b.any
  40e3b4:	mov	w1, #0x1                   	// #1
  40e3b8:	mov	x0, x27
  40e3bc:	bl	47bae8 <_obstack_newchunk@@Base>
  40e3c0:	ldr	x8, [x27, #24]
  40e3c4:	add	x9, x8, #0x1
  40e3c8:	mov	w10, #0x75                  	// #117
  40e3cc:	str	x9, [x19]
  40e3d0:	strb	w10, [x8]
  40e3d4:	ldp	x8, x9, [x19]
  40e3d8:	strb	w21, [x26, #1988]
  40e3dc:	cmp	x9, x8
  40e3e0:	b.ne	40e3f4 <feof@plt+0xab54>  // b.any
  40e3e4:	mov	w1, #0x1                   	// #1
  40e3e8:	mov	x0, x27
  40e3ec:	bl	47bae8 <_obstack_newchunk@@Base>
  40e3f0:	ldr	x8, [x27, #24]
  40e3f4:	add	x9, x8, #0x1
  40e3f8:	mov	w10, #0x6c                  	// #108
  40e3fc:	str	x9, [x19]
  40e400:	strb	w10, [x8]
  40e404:	ldp	x8, x9, [x19]
  40e408:	mov	w21, #0x1                   	// #1
  40e40c:	strb	w21, [x26, #1988]
  40e410:	cmp	x9, x8
  40e414:	b.ne	40e428 <feof@plt+0xab88>  // b.any
  40e418:	mov	w1, #0x1                   	// #1
  40e41c:	mov	x0, x27
  40e420:	bl	47bae8 <_obstack_newchunk@@Base>
  40e424:	ldr	x8, [x27, #24]
  40e428:	add	x9, x8, #0x1
  40e42c:	mov	w10, #0x74                  	// #116
  40e430:	str	x9, [x19]
  40e434:	strb	w10, [x8]
  40e438:	ldp	x8, x9, [x19]
  40e43c:	strb	w21, [x26, #1988]
  40e440:	cmp	x9, x8
  40e444:	b.ne	40e458 <feof@plt+0xabb8>  // b.any
  40e448:	mov	w1, #0x1                   	// #1
  40e44c:	mov	x0, x27
  40e450:	bl	47bae8 <_obstack_newchunk@@Base>
  40e454:	ldr	x8, [x27, #24]
  40e458:	add	x9, x8, #0x1
  40e45c:	mov	w10, #0x69                  	// #105
  40e460:	str	x9, [x19]
  40e464:	strb	w10, [x8]
  40e468:	ldp	x8, x9, [x19]
  40e46c:	mov	w21, #0x1                   	// #1
  40e470:	strb	w21, [x26, #1988]
  40e474:	cmp	x9, x8
  40e478:	b.ne	40e48c <feof@plt+0xabec>  // b.any
  40e47c:	mov	w1, #0x1                   	// #1
  40e480:	mov	x0, x27
  40e484:	bl	47bae8 <_obstack_newchunk@@Base>
  40e488:	ldr	x8, [x27, #24]
  40e48c:	add	x9, x8, #0x1
  40e490:	mov	w10, #0x61                  	// #97
  40e494:	str	x9, [x19]
  40e498:	strb	w10, [x8]
  40e49c:	ldp	x8, x9, [x19]
  40e4a0:	strb	w21, [x26, #1988]
  40e4a4:	cmp	x9, x8
  40e4a8:	b.ne	40e4bc <feof@plt+0xac1c>  // b.any
  40e4ac:	mov	w1, #0x1                   	// #1
  40e4b0:	mov	x0, x27
  40e4b4:	bl	47bae8 <_obstack_newchunk@@Base>
  40e4b8:	ldr	x8, [x27, #24]
  40e4bc:	add	x9, x8, #0x1
  40e4c0:	mov	w10, #0x72                  	// #114
  40e4c4:	str	x9, [x19]
  40e4c8:	strb	w10, [x8]
  40e4cc:	ldp	x8, x9, [x19]
  40e4d0:	mov	w21, #0x1                   	// #1
  40e4d4:	strb	w21, [x26, #1988]
  40e4d8:	cmp	x9, x8
  40e4dc:	b.ne	40e4f0 <feof@plt+0xac50>  // b.any
  40e4e0:	mov	w1, #0x1                   	// #1
  40e4e4:	mov	x0, x27
  40e4e8:	bl	47bae8 <_obstack_newchunk@@Base>
  40e4ec:	ldr	x8, [x27, #24]
  40e4f0:	add	x9, x8, #0x1
  40e4f4:	mov	w10, #0x63                  	// #99
  40e4f8:	str	x9, [x19]
  40e4fc:	strb	w10, [x8]
  40e500:	ldp	x8, x9, [x19]
  40e504:	strb	w21, [x26, #1988]
  40e508:	cmp	x9, x8
  40e50c:	b.ne	40e520 <feof@plt+0xac80>  // b.any
  40e510:	mov	w1, #0x1                   	// #1
  40e514:	mov	x0, x27
  40e518:	bl	47bae8 <_obstack_newchunk@@Base>
  40e51c:	ldr	x8, [x27, #24]
  40e520:	add	x9, x8, #0x1
  40e524:	mov	w10, #0x68                  	// #104
  40e528:	str	x9, [x24, #1288]
  40e52c:	strb	w10, [x8]
  40e530:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e534:	ldr	w8, [x8, #1944]
  40e538:	mov	w9, #0x1                   	// #1
  40e53c:	strb	w9, [x26, #1988]
  40e540:	cbz	w8, 40e548 <feof@plt+0xaca8>
  40e544:	bl	4105cc <feof@plt+0xcd2c>
  40e548:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  40e54c:	add	x0, x0, #0x9d0
  40e550:	mov	w1, wzr
  40e554:	mov	x2, xzr
  40e558:	bl	40c344 <feof@plt+0x8aa4>
  40e55c:	ldr	x8, [x23, #1744]
  40e560:	ldrb	w21, [x8]
  40e564:	cbz	w21, 40e5ac <feof@plt+0xad0c>
  40e568:	add	x22, x8, #0x1
  40e56c:	b	40e58c <feof@plt+0xacec>
  40e570:	add	x9, x8, #0x1
  40e574:	mov	w10, #0x1                   	// #1
  40e578:	str	x9, [x24, #1288]
  40e57c:	strb	w21, [x8]
  40e580:	strb	w10, [x26, #1988]
  40e584:	ldrb	w21, [x22], #1
  40e588:	cbz	w21, 40e5b4 <feof@plt+0xad14>
  40e58c:	ldp	x8, x9, [x19]
  40e590:	cmp	x9, x8
  40e594:	b.ne	40e570 <feof@plt+0xacd0>  // b.any
  40e598:	mov	w1, #0x1                   	// #1
  40e59c:	mov	x0, x27
  40e5a0:	bl	47bae8 <_obstack_newchunk@@Base>
  40e5a4:	ldr	x8, [x27, #24]
  40e5a8:	b	40e570 <feof@plt+0xacd0>
  40e5ac:	mov	w8, #0x1                   	// #1
  40e5b0:	strb	w8, [x26, #1988]
  40e5b4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e5b8:	ldr	w8, [x8, #1944]
  40e5bc:	cbz	w8, 40e5c4 <feof@plt+0xad24>
  40e5c0:	bl	4105cc <feof@plt+0xcd2c>
  40e5c4:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  40e5c8:	add	x0, x0, #0x9d0
  40e5cc:	mov	w1, wzr
  40e5d0:	mov	x2, xzr
  40e5d4:	bl	40c344 <feof@plt+0x8aa4>
  40e5d8:	mov	w22, #0x1                   	// #1
  40e5dc:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e5e0:	ldr	x8, [x23, #1536]
  40e5e4:	mov	w28, #0x61                  	// #97
  40e5e8:	cbz	x8, 40e820 <feof@plt+0xaf80>
  40e5ec:	ldp	x8, x9, [x19]
  40e5f0:	cmp	x9, x8
  40e5f4:	b.ne	40e608 <feof@plt+0xad68>  // b.any
  40e5f8:	mov	w1, #0x1                   	// #1
  40e5fc:	mov	x0, x27
  40e600:	bl	47bae8 <_obstack_newchunk@@Base>
  40e604:	ldr	x8, [x27, #24]
  40e608:	add	x9, x8, #0x1
  40e60c:	mov	w10, #0x2d                  	// #45
  40e610:	str	x9, [x19]
  40e614:	strb	w10, [x8]
  40e618:	ldp	x8, x9, [x19]
  40e61c:	mov	w21, #0x1                   	// #1
  40e620:	strb	w21, [x26, #1988]
  40e624:	cmp	x9, x8
  40e628:	b.ne	40e63c <feof@plt+0xad9c>  // b.any
  40e62c:	mov	w1, #0x1                   	// #1
  40e630:	mov	x0, x27
  40e634:	bl	47bae8 <_obstack_newchunk@@Base>
  40e638:	ldr	x8, [x27, #24]
  40e63c:	add	x9, x8, #0x1
  40e640:	mov	w10, #0x69                  	// #105
  40e644:	str	x9, [x19]
  40e648:	strb	w10, [x8]
  40e64c:	ldp	x8, x9, [x19]
  40e650:	strb	w21, [x26, #1988]
  40e654:	cmp	x9, x8
  40e658:	b.ne	40e66c <feof@plt+0xadcc>  // b.any
  40e65c:	mov	w1, #0x1                   	// #1
  40e660:	mov	x0, x27
  40e664:	bl	47bae8 <_obstack_newchunk@@Base>
  40e668:	ldr	x8, [x27, #24]
  40e66c:	add	x9, x8, #0x1
  40e670:	mov	w10, #0x70                  	// #112
  40e674:	str	x9, [x19]
  40e678:	strb	w10, [x8]
  40e67c:	ldp	x8, x9, [x19]
  40e680:	mov	w21, #0x1                   	// #1
  40e684:	strb	w21, [x26, #1988]
  40e688:	cmp	x9, x8
  40e68c:	b.ne	40e6a0 <feof@plt+0xae00>  // b.any
  40e690:	mov	w1, #0x1                   	// #1
  40e694:	mov	x0, x27
  40e698:	bl	47bae8 <_obstack_newchunk@@Base>
  40e69c:	ldr	x8, [x27, #24]
  40e6a0:	add	x9, x8, #0x1
  40e6a4:	mov	w10, #0x72                  	// #114
  40e6a8:	str	x9, [x19]
  40e6ac:	strb	w10, [x8]
  40e6b0:	ldp	x8, x9, [x19]
  40e6b4:	strb	w21, [x26, #1988]
  40e6b8:	cmp	x9, x8
  40e6bc:	b.ne	40e6d0 <feof@plt+0xae30>  // b.any
  40e6c0:	mov	w1, #0x1                   	// #1
  40e6c4:	mov	x0, x27
  40e6c8:	bl	47bae8 <_obstack_newchunk@@Base>
  40e6cc:	ldr	x8, [x27, #24]
  40e6d0:	add	x9, x8, #0x1
  40e6d4:	mov	w10, #0x65                  	// #101
  40e6d8:	str	x9, [x19]
  40e6dc:	strb	w10, [x8]
  40e6e0:	ldp	x8, x9, [x19]
  40e6e4:	mov	w21, #0x1                   	// #1
  40e6e8:	strb	w21, [x26, #1988]
  40e6ec:	cmp	x9, x8
  40e6f0:	b.ne	40e704 <feof@plt+0xae64>  // b.any
  40e6f4:	mov	w1, #0x1                   	// #1
  40e6f8:	mov	x0, x27
  40e6fc:	bl	47bae8 <_obstack_newchunk@@Base>
  40e700:	ldr	x8, [x27, #24]
  40e704:	add	x9, x8, #0x1
  40e708:	mov	w10, #0x66                  	// #102
  40e70c:	str	x9, [x19]
  40e710:	strb	w10, [x8]
  40e714:	ldp	x8, x9, [x19]
  40e718:	strb	w21, [x26, #1988]
  40e71c:	cmp	x9, x8
  40e720:	b.ne	40e734 <feof@plt+0xae94>  // b.any
  40e724:	mov	w1, #0x1                   	// #1
  40e728:	mov	x0, x27
  40e72c:	bl	47bae8 <_obstack_newchunk@@Base>
  40e730:	ldr	x8, [x27, #24]
  40e734:	add	x9, x8, #0x1
  40e738:	mov	w10, #0x69                  	// #105
  40e73c:	str	x9, [x19]
  40e740:	strb	w10, [x8]
  40e744:	ldp	x8, x9, [x19]
  40e748:	mov	w21, #0x1                   	// #1
  40e74c:	strb	w21, [x26, #1988]
  40e750:	cmp	x9, x8
  40e754:	b.ne	40e768 <feof@plt+0xaec8>  // b.any
  40e758:	mov	w1, #0x1                   	// #1
  40e75c:	mov	x0, x27
  40e760:	bl	47bae8 <_obstack_newchunk@@Base>
  40e764:	ldr	x8, [x27, #24]
  40e768:	add	x9, x8, #0x1
  40e76c:	mov	w10, #0x78                  	// #120
  40e770:	str	x9, [x24, #1288]
  40e774:	strb	w10, [x8]
  40e778:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e77c:	ldr	w8, [x8, #1944]
  40e780:	strb	w21, [x26, #1988]
  40e784:	cbz	w8, 40e78c <feof@plt+0xaeec>
  40e788:	bl	4105cc <feof@plt+0xcd2c>
  40e78c:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  40e790:	add	x0, x0, #0x9d0
  40e794:	mov	w1, wzr
  40e798:	mov	x2, xzr
  40e79c:	bl	40c344 <feof@plt+0x8aa4>
  40e7a0:	ldr	x8, [x23, #1536]
  40e7a4:	ldrb	w21, [x8]
  40e7a8:	cbz	w21, 40e7f0 <feof@plt+0xaf50>
  40e7ac:	add	x22, x8, #0x1
  40e7b0:	b	40e7d0 <feof@plt+0xaf30>
  40e7b4:	add	x9, x8, #0x1
  40e7b8:	mov	w10, #0x1                   	// #1
  40e7bc:	str	x9, [x24, #1288]
  40e7c0:	strb	w21, [x8]
  40e7c4:	strb	w10, [x26, #1988]
  40e7c8:	ldrb	w21, [x22], #1
  40e7cc:	cbz	w21, 40e7f8 <feof@plt+0xaf58>
  40e7d0:	ldp	x8, x9, [x19]
  40e7d4:	cmp	x9, x8
  40e7d8:	b.ne	40e7b4 <feof@plt+0xaf14>  // b.any
  40e7dc:	mov	w1, #0x1                   	// #1
  40e7e0:	mov	x0, x27
  40e7e4:	bl	47bae8 <_obstack_newchunk@@Base>
  40e7e8:	ldr	x8, [x27, #24]
  40e7ec:	b	40e7b4 <feof@plt+0xaf14>
  40e7f0:	mov	w8, #0x1                   	// #1
  40e7f4:	strb	w8, [x26, #1988]
  40e7f8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e7fc:	ldr	w8, [x8, #1944]
  40e800:	cbz	w8, 40e808 <feof@plt+0xaf68>
  40e804:	bl	4105cc <feof@plt+0xcd2c>
  40e808:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  40e80c:	add	x0, x0, #0x9d0
  40e810:	mov	w1, wzr
  40e814:	mov	x2, xzr
  40e818:	bl	40c344 <feof@plt+0x8aa4>
  40e81c:	mov	w22, #0x1                   	// #1
  40e820:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e824:	ldrb	w8, [x8, #1876]
  40e828:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e82c:	tbnz	w8, #0, 40e844 <feof@plt+0xafa4>
  40e830:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40e834:	ldr	x8, [x8, #1520]
  40e838:	cbz	x8, 40eb2c <feof@plt+0xb28c>
  40e83c:	ldr	x8, [x23, #1528]
  40e840:	cbz	x8, 40eb2c <feof@plt+0xb28c>
  40e844:	ldp	x8, x9, [x19]
  40e848:	cmp	x9, x8
  40e84c:	b.ne	40e860 <feof@plt+0xafc0>  // b.any
  40e850:	mov	w1, #0x1                   	// #1
  40e854:	mov	x0, x27
  40e858:	bl	47bae8 <_obstack_newchunk@@Base>
  40e85c:	ldr	x8, [x27, #24]
  40e860:	add	x9, x8, #0x1
  40e864:	mov	w10, #0x2d                  	// #45
  40e868:	str	x9, [x19]
  40e86c:	strb	w10, [x8]
  40e870:	ldp	x8, x9, [x19]
  40e874:	mov	w21, #0x1                   	// #1
  40e878:	strb	w21, [x26, #1988]
  40e87c:	cmp	x9, x8
  40e880:	b.ne	40e894 <feof@plt+0xaff4>  // b.any
  40e884:	mov	w1, #0x1                   	// #1
  40e888:	mov	x0, x27
  40e88c:	bl	47bae8 <_obstack_newchunk@@Base>
  40e890:	ldr	x8, [x27, #24]
  40e894:	add	x9, x8, #0x1
  40e898:	mov	w10, #0x69                  	// #105
  40e89c:	str	x9, [x19]
  40e8a0:	strb	w10, [x8]
  40e8a4:	ldp	x8, x9, [x19]
  40e8a8:	strb	w21, [x26, #1988]
  40e8ac:	cmp	x9, x8
  40e8b0:	b.ne	40e8c4 <feof@plt+0xb024>  // b.any
  40e8b4:	mov	w1, #0x1                   	// #1
  40e8b8:	mov	x0, x27
  40e8bc:	bl	47bae8 <_obstack_newchunk@@Base>
  40e8c0:	ldr	x8, [x27, #24]
  40e8c4:	add	x9, x8, #0x1
  40e8c8:	mov	w10, #0x73                  	// #115
  40e8cc:	str	x9, [x19]
  40e8d0:	strb	w10, [x8]
  40e8d4:	ldp	x8, x9, [x19]
  40e8d8:	mov	w21, #0x1                   	// #1
  40e8dc:	strb	w21, [x26, #1988]
  40e8e0:	cmp	x9, x8
  40e8e4:	b.ne	40e8f8 <feof@plt+0xb058>  // b.any
  40e8e8:	mov	w1, #0x1                   	// #1
  40e8ec:	mov	x0, x27
  40e8f0:	bl	47bae8 <_obstack_newchunk@@Base>
  40e8f4:	ldr	x8, [x27, #24]
  40e8f8:	add	x9, x8, #0x1
  40e8fc:	mov	w10, #0x79                  	// #121
  40e900:	str	x9, [x19]
  40e904:	strb	w10, [x8]
  40e908:	ldp	x8, x9, [x19]
  40e90c:	strb	w21, [x26, #1988]
  40e910:	cmp	x9, x8
  40e914:	b.ne	40e928 <feof@plt+0xb088>  // b.any
  40e918:	mov	w1, #0x1                   	// #1
  40e91c:	mov	x0, x27
  40e920:	bl	47bae8 <_obstack_newchunk@@Base>
  40e924:	ldr	x8, [x27, #24]
  40e928:	add	x9, x8, #0x1
  40e92c:	mov	w10, #0x73                  	// #115
  40e930:	str	x9, [x19]
  40e934:	strb	w10, [x8]
  40e938:	ldp	x8, x9, [x19]
  40e93c:	mov	w21, #0x1                   	// #1
  40e940:	strb	w21, [x26, #1988]
  40e944:	cmp	x9, x8
  40e948:	b.ne	40e95c <feof@plt+0xb0bc>  // b.any
  40e94c:	mov	w1, #0x1                   	// #1
  40e950:	mov	x0, x27
  40e954:	bl	47bae8 <_obstack_newchunk@@Base>
  40e958:	ldr	x8, [x27, #24]
  40e95c:	add	x9, x8, #0x1
  40e960:	mov	w10, #0x72                  	// #114
  40e964:	str	x9, [x19]
  40e968:	strb	w10, [x8]
  40e96c:	ldp	x8, x9, [x19]
  40e970:	strb	w21, [x26, #1988]
  40e974:	cmp	x9, x8
  40e978:	b.ne	40e98c <feof@plt+0xb0ec>  // b.any
  40e97c:	mov	w1, #0x1                   	// #1
  40e980:	mov	x0, x27
  40e984:	bl	47bae8 <_obstack_newchunk@@Base>
  40e988:	ldr	x8, [x27, #24]
  40e98c:	add	x9, x8, #0x1
  40e990:	mov	w21, #0x6f                  	// #111
  40e994:	str	x9, [x19]
  40e998:	strb	w21, [x8]
  40e99c:	ldp	x8, x9, [x19]
  40e9a0:	mov	w22, #0x1                   	// #1
  40e9a4:	strb	w22, [x26, #1988]
  40e9a8:	cmp	x9, x8
  40e9ac:	b.ne	40e9c0 <feof@plt+0xb120>  // b.any
  40e9b0:	mov	w1, #0x1                   	// #1
  40e9b4:	mov	x0, x27
  40e9b8:	bl	47bae8 <_obstack_newchunk@@Base>
  40e9bc:	ldr	x8, [x27, #24]
  40e9c0:	add	x9, x8, #0x1
  40e9c4:	str	x9, [x19]
  40e9c8:	strb	w21, [x8]
  40e9cc:	ldp	x8, x9, [x19]
  40e9d0:	strb	w22, [x26, #1988]
  40e9d4:	cmp	x9, x8
  40e9d8:	b.ne	40e9ec <feof@plt+0xb14c>  // b.any
  40e9dc:	mov	w1, #0x1                   	// #1
  40e9e0:	mov	x0, x27
  40e9e4:	bl	47bae8 <_obstack_newchunk@@Base>
  40e9e8:	ldr	x8, [x27, #24]
  40e9ec:	add	x9, x8, #0x1
  40e9f0:	mov	w10, #0x74                  	// #116
  40e9f4:	str	x9, [x24, #1288]
  40e9f8:	strb	w10, [x8]
  40e9fc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ea00:	ldr	w8, [x8, #1944]
  40ea04:	mov	w9, #0x1                   	// #1
  40ea08:	strb	w9, [x26, #1988]
  40ea0c:	cbz	w8, 40ea14 <feof@plt+0xb174>
  40ea10:	bl	4105cc <feof@plt+0xcd2c>
  40ea14:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  40ea18:	add	x0, x0, #0x9d0
  40ea1c:	mov	w1, wzr
  40ea20:	mov	x2, xzr
  40ea24:	bl	40c344 <feof@plt+0x8aa4>
  40ea28:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ea2c:	ldr	x8, [x8, #1520]
  40ea30:	ldrb	w21, [x8]
  40ea34:	cbz	w21, 40ea7c <feof@plt+0xb1dc>
  40ea38:	add	x22, x8, #0x1
  40ea3c:	b	40ea5c <feof@plt+0xb1bc>
  40ea40:	add	x9, x8, #0x1
  40ea44:	mov	w10, #0x1                   	// #1
  40ea48:	str	x9, [x24, #1288]
  40ea4c:	strb	w21, [x8]
  40ea50:	strb	w10, [x26, #1988]
  40ea54:	ldrb	w21, [x22], #1
  40ea58:	cbz	w21, 40ea84 <feof@plt+0xb1e4>
  40ea5c:	ldp	x8, x9, [x19]
  40ea60:	cmp	x9, x8
  40ea64:	b.ne	40ea40 <feof@plt+0xb1a0>  // b.any
  40ea68:	mov	w1, #0x1                   	// #1
  40ea6c:	mov	x0, x27
  40ea70:	bl	47bae8 <_obstack_newchunk@@Base>
  40ea74:	ldr	x8, [x27, #24]
  40ea78:	b	40ea40 <feof@plt+0xb1a0>
  40ea7c:	mov	w8, #0x1                   	// #1
  40ea80:	strb	w8, [x26, #1988]
  40ea84:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ea88:	ldr	w8, [x8, #1944]
  40ea8c:	cbz	w8, 40ea94 <feof@plt+0xb1f4>
  40ea90:	bl	4105cc <feof@plt+0xcd2c>
  40ea94:	ldr	x8, [x23, #1528]
  40ea98:	mov	w22, #0x1                   	// #1
  40ea9c:	cbz	x8, 40eb18 <feof@plt+0xb278>
  40eaa0:	ldrb	w21, [x8]
  40eaa4:	cbz	w21, 40eafc <feof@plt+0xb25c>
  40eaa8:	add	x22, x8, #0x1
  40eaac:	b	40eacc <feof@plt+0xb22c>
  40eab0:	add	x9, x8, #0x1
  40eab4:	mov	w10, #0x1                   	// #1
  40eab8:	str	x9, [x24, #1288]
  40eabc:	strb	w21, [x8]
  40eac0:	strb	w10, [x26, #1988]
  40eac4:	ldrb	w21, [x22], #1
  40eac8:	cbz	w21, 40eb04 <feof@plt+0xb264>
  40eacc:	ldp	x8, x9, [x19]
  40ead0:	cmp	x9, x8
  40ead4:	b.ne	40eab0 <feof@plt+0xb210>  // b.any
  40ead8:	mov	w1, #0x1                   	// #1
  40eadc:	mov	x0, x27
  40eae0:	bl	47bae8 <_obstack_newchunk@@Base>
  40eae4:	ldr	x8, [x27, #24]
  40eae8:	b	40eab0 <feof@plt+0xb210>
  40eaec:	mov	w28, #0x61                  	// #97
  40eaf0:	cbnz	w8, 40e06c <feof@plt+0xa7cc>
  40eaf4:	mov	x26, x25
  40eaf8:	b	40c5fc <feof@plt+0x8d5c>
  40eafc:	mov	w8, #0x1                   	// #1
  40eb00:	strb	w8, [x26, #1988]
  40eb04:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40eb08:	ldr	w8, [x8, #1944]
  40eb0c:	mov	w22, #0x1                   	// #1
  40eb10:	cbz	w8, 40eb18 <feof@plt+0xb278>
  40eb14:	bl	4105cc <feof@plt+0xcd2c>
  40eb18:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  40eb1c:	add	x0, x0, #0x9d0
  40eb20:	mov	w1, wzr
  40eb24:	mov	x2, xzr
  40eb28:	bl	40c344 <feof@plt+0x8aa4>
  40eb2c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x42fc>
  40eb30:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x42fc>
  40eb34:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40eb38:	adrp	x3, 412000 <feof@plt+0xe760>
  40eb3c:	add	x8, x8, #0xdfb
  40eb40:	add	x9, x9, #0x63e
  40eb44:	mov	w10, #0x7                   	// #7
  40eb48:	mov	w11, #0x100                 	// #256
  40eb4c:	add	x0, x0, #0x560
  40eb50:	add	x3, x3, #0xbb0
  40eb54:	sub	x4, x29, #0x88
  40eb58:	mov	w2, #0x7                   	// #7
  40eb5c:	mov	w1, wzr
  40eb60:	stp	x8, x9, [x29, #-136]
  40eb64:	stur	x10, [x29, #-120]
  40eb68:	sturh	w11, [x29, #-112]
  40eb6c:	bl	4126ac <feof@plt+0xee0c>
  40eb70:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40eb74:	ldr	x8, [x8, #1288]
  40eb78:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x42fc>
  40eb7c:	add	x0, x0, #0xe04
  40eb80:	stur	x0, [x29, #-128]
  40eb84:	ldrb	w8, [x8]
  40eb88:	cbz	w8, 40ebac <feof@plt+0xb30c>
  40eb8c:	ldr	x2, [x20, #1736]
  40eb90:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x42fc>
  40eb94:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40eb98:	add	x0, x0, #0xe04
  40eb9c:	add	x1, x1, #0x3c0
  40eba0:	mov	x3, xzr
  40eba4:	bl	4799ac <feof@plt+0x7610c>
  40eba8:	stur	x0, [x29, #-128]
  40ebac:	ldur	w23, [x29, #-140]
  40ebb0:	bl	4030b0 <strlen@plt>
  40ebb4:	mov	x2, x0
  40ebb8:	stur	x0, [x29, #-120]
  40ebbc:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40ebc0:	adrp	x3, 412000 <feof@plt+0xe760>
  40ebc4:	add	x0, x0, #0x560
  40ebc8:	add	x3, x3, #0xbb0
  40ebcc:	sub	x4, x29, #0x88
  40ebd0:	mov	w1, wzr
  40ebd4:	bl	4126ac <feof@plt+0xee0c>
  40ebd8:	mov	x26, x25
  40ebdc:	b	40c5fc <feof@plt+0x8d5c>
  40ebe0:	mov	x0, x23
  40ebe4:	bl	4031d0 <free@plt>
  40ebe8:	ldur	w23, [x29, #-140]
  40ebec:	b	40c5fc <feof@plt+0x8d5c>
  40ebf0:	ldur	w23, [x29, #-180]
  40ebf4:	str	w28, [x24, #8]
  40ebf8:	cbnz	x21, 40df2c <feof@plt+0xa68c>
  40ebfc:	b	40df08 <feof@plt+0xa668>
  40ec00:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ec04:	ldr	w8, [x8, #1944]
  40ec08:	cbz	w8, 40ec10 <feof@plt+0xb370>
  40ec0c:	bl	4105cc <feof@plt+0xcd2c>
  40ec10:	mov	w0, wzr
  40ec14:	mov	sp, x29
  40ec18:	ldp	x20, x19, [sp, #80]
  40ec1c:	ldp	x22, x21, [sp, #64]
  40ec20:	ldp	x24, x23, [sp, #48]
  40ec24:	ldp	x26, x25, [sp, #32]
  40ec28:	ldp	x28, x27, [sp, #16]
  40ec2c:	ldp	x29, x30, [sp], #96
  40ec30:	ret
  40ec34:	mov	x8, x25
  40ec38:	ldrb	w9, [x8]
  40ec3c:	cbz	w9, 40ec54 <feof@plt+0xb3b4>
  40ec40:	cmp	w9, #0xa
  40ec44:	b.eq	40ec54 <feof@plt+0xb3b4>  // b.none
  40ec48:	add	x8, x8, #0x1
  40ec4c:	ldrb	w9, [x8]
  40ec50:	cbnz	w9, 40ec40 <feof@plt+0xb3a0>
  40ec54:	sub	x19, x8, x25
  40ec58:	add	x8, x19, #0x10
  40ec5c:	and	x8, x8, #0xfffffffffffffff0
  40ec60:	mov	x9, sp
  40ec64:	sub	x0, x9, x8
  40ec68:	mov	sp, x0
  40ec6c:	mov	x1, x25
  40ec70:	mov	x2, x19
  40ec74:	bl	403470 <strncpy@plt>
  40ec78:	strb	wzr, [x0, x19]
  40ec7c:	bl	4033e0 <gettext@plt>
  40ec80:	mov	x1, x0
  40ec84:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40ec88:	add	x0, x0, #0x236
  40ec8c:	bl	42b940 <feof@plt+0x280a0>
  40ec90:	mov	w0, #0xffffffff            	// #-1
  40ec94:	b	40ec14 <feof@plt+0xb374>
  40ec98:	mov	x0, x24
  40ec9c:	bl	4031d0 <free@plt>
  40eca0:	b	40ec10 <feof@plt+0xb370>
  40eca4:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40eca8:	ldr	w0, [x8, #400]
  40ecac:	ldur	x2, [x29, #-160]
  40ecb0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40ecb4:	add	x1, x1, #0xdc8
  40ecb8:	bl	42c008 <feof@plt+0x28768>
  40ecbc:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40ecc0:	ldr	w0, [x8, #400]
  40ecc4:	ldur	x2, [x29, #-160]
  40ecc8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40eccc:	add	x1, x1, #0xdd9
  40ecd0:	bl	42c008 <feof@plt+0x28768>
  40ecd4:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40ecd8:	ldr	w0, [x8, #400]
  40ecdc:	ldur	x2, [x29, #-160]
  40ece0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40ece4:	add	x1, x1, #0xe31
  40ece8:	bl	42c008 <feof@plt+0x28768>
  40ecec:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40ecf0:	ldr	w0, [x8, #400]
  40ecf4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40ecf8:	add	x1, x1, #0xeda
  40ecfc:	bl	42c008 <feof@plt+0x28768>
  40ed00:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40ed04:	ldr	w0, [x8, #400]
  40ed08:	ldur	x2, [x29, #-160]
  40ed0c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40ed10:	add	x1, x1, #0xe50
  40ed14:	bl	42c008 <feof@plt+0x28768>
  40ed18:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40ed1c:	ldr	w0, [x8, #400]
  40ed20:	ldur	x2, [x29, #-160]
  40ed24:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40ed28:	add	x1, x1, #0xe12
  40ed2c:	bl	42c008 <feof@plt+0x28768>
  40ed30:	stp	x29, x30, [sp, #-48]!
  40ed34:	str	x21, [sp, #16]
  40ed38:	stp	x20, x19, [sp, #32]
  40ed3c:	mov	x29, sp
  40ed40:	ldrb	w8, [x0]
  40ed44:	mov	x19, x0
  40ed48:	cmp	w8, #0x2f
  40ed4c:	b.ne	40ee70 <feof@plt+0xb5d0>  // b.any
  40ed50:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ed54:	ldr	x0, [x20, #1520]
  40ed58:	cbz	x0, 40edcc <feof@plt+0xb52c>
  40ed5c:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  40ed60:	ldr	x21, [x20, #1520]
  40ed64:	mov	x20, x0
  40ed68:	mov	x0, x21
  40ed6c:	bl	4030b0 <strlen@plt>
  40ed70:	cbz	x0, 40ed88 <feof@plt+0xb4e8>
  40ed74:	sub	x8, x0, #0x1
  40ed78:	ldrb	w9, [x21, x8]
  40ed7c:	cmp	w9, #0x2f
  40ed80:	b.ne	40ed88 <feof@plt+0xb4e8>  // b.any
  40ed84:	strb	wzr, [x20, x8]
  40ed88:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ed8c:	ldr	x1, [x8, #1512]
  40ed90:	cbz	x1, 40eda8 <feof@plt+0xb508>
  40ed94:	mov	x0, x20
  40ed98:	mov	x2, x19
  40ed9c:	mov	x3, xzr
  40eda0:	bl	4799ac <feof@plt+0x7610c>
  40eda4:	b	40edb8 <feof@plt+0xb518>
  40eda8:	mov	x0, x20
  40edac:	mov	x1, x19
  40edb0:	mov	x2, xzr
  40edb4:	bl	4799ac <feof@plt+0x7610c>
  40edb8:	mov	x19, x0
  40edbc:	mov	x0, x20
  40edc0:	bl	4031d0 <free@plt>
  40edc4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40edc8:	add	x1, x1, #0x664
  40edcc:	adrp	x20, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40edd0:	add	x20, x20, #0x4b8
  40edd4:	ldr	x8, [x20]
  40edd8:	cbz	x8, 40ee10 <feof@plt+0xb570>
  40eddc:	ldr	w9, [x8, #20]
  40ede0:	cmp	w9, #0x1
  40ede4:	b.le	40edf4 <feof@plt+0xb554>
  40ede8:	adrp	x20, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40edec:	add	x20, x20, #0x4b8
  40edf0:	b	40ee10 <feof@plt+0xb570>
  40edf4:	mov	x9, x8
  40edf8:	ldr	x8, [x8, #8]
  40edfc:	cbz	x8, 40ee0c <feof@plt+0xb56c>
  40ee00:	ldr	w10, [x8, #20]
  40ee04:	cmp	w10, #0x2
  40ee08:	b.lt	40edf4 <feof@plt+0xb554>  // b.tstop
  40ee0c:	add	x20, x9, #0x8
  40ee10:	mov	x0, x19
  40ee14:	bl	4175f0 <feof@plt+0x13d50>
  40ee18:	mov	x19, x0
  40ee1c:	bl	4030b0 <strlen@plt>
  40ee20:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40ee24:	ldr	w9, [x8, #1216]
  40ee28:	cmp	w9, w0
  40ee2c:	b.ge	40ee34 <feof@plt+0xb594>  // b.tcont
  40ee30:	str	w0, [x8, #1216]
  40ee34:	mov	w0, #0x20                  	// #32
  40ee38:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40ee3c:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  40ee40:	ldr	d0, [x8, #1608]
  40ee44:	mov	w8, #0x1                   	// #1
  40ee48:	str	x19, [x0]
  40ee4c:	str	w8, [x0, #24]
  40ee50:	str	d0, [x0, #16]
  40ee54:	ldr	x8, [x20]
  40ee58:	ldr	x21, [sp, #16]
  40ee5c:	str	x8, [x0, #8]
  40ee60:	str	x0, [x20]
  40ee64:	ldp	x20, x19, [sp, #32]
  40ee68:	ldp	x29, x30, [sp], #48
  40ee6c:	ret
  40ee70:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40ee74:	ldr	w0, [x8, #400]
  40ee78:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  40ee7c:	add	x1, x1, #0xb6a
  40ee80:	mov	x2, x19
  40ee84:	bl	42c008 <feof@plt+0x28768>
  40ee88:	sub	sp, sp, #0x50
  40ee8c:	stp	x29, x30, [sp, #16]
  40ee90:	str	x23, [sp, #32]
  40ee94:	stp	x22, x21, [sp, #48]
  40ee98:	stp	x20, x19, [sp, #64]
  40ee9c:	add	x29, sp, #0x10
  40eea0:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40eea4:	mov	x20, x0
  40eea8:	and	w8, w2, #0x1
  40eeac:	add	x19, x19, #0x658
  40eeb0:	mov	w9, #0x1                   	// #1
  40eeb4:	mov	x0, x1
  40eeb8:	mov	w21, w3
  40eebc:	mov	x22, x1
  40eec0:	str	x19, [sp]
  40eec4:	strb	w8, [sp, #8]
  40eec8:	strb	w9, [sp, #9]
  40eecc:	bl	4030b0 <strlen@plt>
  40eed0:	mov	x23, x0
  40eed4:	ldp	x0, x8, [x19, #24]
  40eed8:	sub	x8, x8, x0
  40eedc:	cmp	x8, x23
  40eee0:	b.cs	40eef4 <feof@plt+0xb654>  // b.hs, b.nlast
  40eee4:	mov	x0, x19
  40eee8:	mov	x1, x23
  40eeec:	bl	47bae8 <_obstack_newchunk@@Base>
  40eef0:	ldr	x0, [x19, #24]
  40eef4:	mov	x1, x22
  40eef8:	mov	x2, x23
  40eefc:	bl	402fc0 <memcpy@plt>
  40ef00:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ef04:	add	x22, x22, #0x670
  40ef08:	ldp	x8, x9, [x22]
  40ef0c:	add	x8, x8, x23
  40ef10:	cmp	x9, x8
  40ef14:	str	x8, [x22]
  40ef18:	b.ne	40ef2c <feof@plt+0xb68c>  // b.any
  40ef1c:	mov	w1, #0x1                   	// #1
  40ef20:	mov	x0, x19
  40ef24:	bl	47bae8 <_obstack_newchunk@@Base>
  40ef28:	ldr	x8, [x19, #24]
  40ef2c:	adrp	x3, 415000 <feof@plt+0x11760>
  40ef30:	add	x9, x8, #0x1
  40ef34:	mov	w10, #0x3d                  	// #61
  40ef38:	and	w1, w21, #0x1
  40ef3c:	add	x3, x3, #0xd84
  40ef40:	mov	x4, sp
  40ef44:	mov	x0, x20
  40ef48:	mov	x2, xzr
  40ef4c:	str	x9, [x22]
  40ef50:	strb	w10, [x8]
  40ef54:	bl	4126ac <feof@plt+0xee0c>
  40ef58:	ldp	x8, x9, [x22]
  40ef5c:	cmp	x9, x8
  40ef60:	b.ne	40ef74 <feof@plt+0xb6d4>  // b.any
  40ef64:	mov	w1, #0x1                   	// #1
  40ef68:	mov	x0, x19
  40ef6c:	bl	47bae8 <_obstack_newchunk@@Base>
  40ef70:	ldr	x8, [x19, #24]
  40ef74:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ef78:	add	x9, x8, #0x1
  40ef7c:	add	x10, x10, #0x668
  40ef80:	str	x9, [x10, #8]
  40ef84:	strb	wzr, [x8]
  40ef88:	ldp	x0, x8, [x10]
  40ef8c:	cmp	x8, x0
  40ef90:	b.ne	40efa4 <feof@plt+0xb704>  // b.any
  40ef94:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40ef98:	ldrb	w10, [x9, #1704]
  40ef9c:	orr	w10, w10, #0x2
  40efa0:	strb	w10, [x9, #1704]
  40efa4:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40efa8:	add	x9, x9, #0x660
  40efac:	ldr	x10, [x9, #40]
  40efb0:	ldr	x11, [x9]
  40efb4:	ldr	x12, [x9, #24]
  40efb8:	ldp	x20, x19, [sp, #64]
  40efbc:	add	x8, x10, x8
  40efc0:	bic	x8, x8, x10
  40efc4:	sub	x13, x12, x11
  40efc8:	sub	x10, x8, x11
  40efcc:	ldp	x22, x21, [sp, #48]
  40efd0:	ldr	x23, [sp, #32]
  40efd4:	ldp	x29, x30, [sp, #16]
  40efd8:	cmp	x10, x13
  40efdc:	csel	x8, x12, x8, hi  // hi = pmore
  40efe0:	stp	x8, x8, [x9, #8]
  40efe4:	add	sp, sp, #0x50
  40efe8:	ret
  40efec:	stp	x29, x30, [sp, #-48]!
  40eff0:	str	x21, [sp, #16]
  40eff4:	stp	x20, x19, [sp, #32]
  40eff8:	mov	x29, sp
  40effc:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x62fc>
  40f000:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40f004:	add	x1, x1, #0xaf9
  40f008:	add	x2, x2, #0xb53
  40f00c:	mov	x19, x0
  40f010:	bl	429778 <feof@plt+0x25ed8>
  40f014:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x62fc>
  40f018:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40f01c:	add	x1, x1, #0xb05
  40f020:	add	x2, x2, #0x540
  40f024:	mov	x0, x19
  40f028:	bl	429778 <feof@plt+0x25ed8>
  40f02c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x62fc>
  40f030:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40f034:	add	x1, x1, #0xb1a
  40f038:	add	x2, x2, #0x5ae
  40f03c:	mov	x0, x19
  40f040:	bl	429778 <feof@plt+0x25ed8>
  40f044:	adrp	x9, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  40f048:	mov	x8, xzr
  40f04c:	add	x9, x9, #0xf8c
  40f050:	ldrb	w10, [x9, x8]
  40f054:	orr	w10, w10, #0x20
  40f058:	cmp	w10, #0x20
  40f05c:	b.eq	40f068 <feof@plt+0xb7c8>  // b.none
  40f060:	add	x8, x8, #0x1
  40f064:	b	40f050 <feof@plt+0xb7b0>
  40f068:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f06c:	ldr	x20, [x9, #2048]
  40f070:	and	x21, x8, #0xffffffff
  40f074:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  40f078:	add	x0, x0, #0xf8c
  40f07c:	mov	x1, x20
  40f080:	mov	x2, x21
  40f084:	bl	403450 <strncmp@plt>
  40f088:	cbnz	w0, 40f094 <feof@plt+0xb7f4>
  40f08c:	ldrb	w8, [x20, x21]
  40f090:	cbz	w8, 40f0c4 <feof@plt+0xb824>
  40f094:	mov	x0, x19
  40f098:	mov	x4, x20
  40f09c:	ldp	x20, x19, [sp, #32]
  40f0a0:	ldr	x21, [sp, #16]
  40f0a4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x62fc>
  40f0a8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  40f0ac:	adrp	x3, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  40f0b0:	add	x1, x1, #0xb3f
  40f0b4:	add	x2, x2, #0xf8c
  40f0b8:	add	x3, x3, #0xf92
  40f0bc:	ldp	x29, x30, [sp], #48
  40f0c0:	b	429778 <feof@plt+0x25ed8>
  40f0c4:	mov	x0, x19
  40f0c8:	ldp	x20, x19, [sp, #32]
  40f0cc:	ldr	x21, [sp, #16]
  40f0d0:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x62fc>
  40f0d4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  40f0d8:	adrp	x3, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  40f0dc:	add	x1, x1, #0xb2c
  40f0e0:	add	x2, x2, #0xf8c
  40f0e4:	add	x3, x3, #0xf92
  40f0e8:	ldp	x29, x30, [sp], #48
  40f0ec:	b	429778 <feof@plt+0x25ed8>
  40f0f0:	stp	x29, x30, [sp, #-80]!
  40f0f4:	stp	x26, x25, [sp, #16]
  40f0f8:	stp	x24, x23, [sp, #32]
  40f0fc:	stp	x22, x21, [sp, #48]
  40f100:	stp	x20, x19, [sp, #64]
  40f104:	mov	x29, sp
  40f108:	mov	x20, x0
  40f10c:	cbz	x2, 40f1c8 <feof@plt+0xb928>
  40f110:	ldrb	w8, [x2]
  40f114:	mov	x22, x2
  40f118:	cmp	w8, #0x2a
  40f11c:	b.eq	40f2b4 <feof@plt+0xba14>  // b.none
  40f120:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f124:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f128:	ldr	x23, [x8, #1480]
  40f12c:	ldrsw	x8, [x9, #1488]
  40f130:	add	x8, x23, x8, lsl #5
  40f134:	sub	x19, x8, #0x20
  40f138:	b	40f140 <feof@plt+0xb8a0>
  40f13c:	sub	x19, x19, #0x20
  40f140:	cmp	x19, x23
  40f144:	b.cc	40f2a4 <feof@plt+0xba04>  // b.lo, b.ul, b.last
  40f148:	ldr	x21, [x19]
  40f14c:	ldrb	w8, [x21]
  40f150:	cmp	w8, #0x40
  40f154:	b.ne	40f13c <feof@plt+0xb89c>  // b.any
  40f158:	add	x0, x21, #0x1
  40f15c:	mov	x1, x22
  40f160:	bl	403640 <strcmp@plt>
  40f164:	cbnz	w0, 40f13c <feof@plt+0xb89c>
  40f168:	cbz	x20, 40f2b8 <feof@plt+0xba18>
  40f16c:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40f170:	add	x1, x1, #0x935
  40f174:	mov	x0, x20
  40f178:	bl	403640 <strcmp@plt>
  40f17c:	cbnz	w0, 40f2b8 <feof@plt+0xba18>
  40f180:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40f184:	add	x1, x1, #0xd97
  40f188:	mov	x0, x21
  40f18c:	bl	403640 <strcmp@plt>
  40f190:	cbz	w0, 40f1a8 <feof@plt+0xb908>
  40f194:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  40f198:	add	x1, x1, #0x1c6
  40f19c:	mov	x0, x21
  40f1a0:	bl	403640 <strcmp@plt>
  40f1a4:	cbnz	w0, 40f2b8 <feof@plt+0xba18>
  40f1a8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f1ac:	ldrb	w8, [x8, #2068]
  40f1b0:	tbnz	w8, #0, 40f2b8 <feof@plt+0xba18>
  40f1b4:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40f1b8:	ldr	w0, [x8, #400]
  40f1bc:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x62fc>
  40f1c0:	add	x1, x1, #0xc1b
  40f1c4:	bl	42c008 <feof@plt+0x28768>
  40f1c8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f1cc:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f1d0:	ldr	x24, [x8, #1480]
  40f1d4:	ldrsw	x8, [x9, #1488]
  40f1d8:	add	x8, x24, x8, lsl #5
  40f1dc:	sub	x25, x8, #0x20
  40f1e0:	cmp	x25, x24
  40f1e4:	b.cc	40f2b4 <feof@plt+0xba14>  // b.lo, b.ul, b.last
  40f1e8:	adrp	x22, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40f1ec:	mov	x21, x1
  40f1f0:	add	x26, x20, x1
  40f1f4:	add	x22, x22, #0x935
  40f1f8:	mov	x19, x25
  40f1fc:	b	40f20c <feof@plt+0xb96c>
  40f200:	sub	x19, x19, #0x20
  40f204:	cmp	x19, x24
  40f208:	b.cc	40f2b4 <feof@plt+0xba14>  // b.lo, b.ul, b.last
  40f20c:	ldr	x23, [x19]
  40f210:	mov	x1, x22
  40f214:	mov	x0, x23
  40f218:	bl	403640 <strcmp@plt>
  40f21c:	cbnz	w0, 40f230 <feof@plt+0xb990>
  40f220:	mov	x0, x20
  40f224:	mov	x1, x22
  40f228:	bl	403640 <strcmp@plt>
  40f22c:	cbz	w0, 40f250 <feof@plt+0xb9b0>
  40f230:	mov	x0, x23
  40f234:	bl	4030b0 <strlen@plt>
  40f238:	cmp	x0, x21
  40f23c:	b.cs	40f200 <feof@plt+0xb960>  // b.hs, b.nlast
  40f240:	sub	x1, x26, x0
  40f244:	mov	x0, x23
  40f248:	bl	403640 <strcmp@plt>
  40f24c:	cbnz	w0, 40f200 <feof@plt+0xb960>
  40f250:	ldr	x20, [x19, #8]
  40f254:	ldrb	w8, [x20]
  40f258:	cmp	w8, #0x40
  40f25c:	b.ne	40f2b8 <feof@plt+0xba18>  // b.any
  40f260:	ldrb	w8, [x20, #1]!
  40f264:	cmp	w8, #0x2a
  40f268:	b.ne	40f27c <feof@plt+0xb9dc>  // b.any
  40f26c:	b	40f2b4 <feof@plt+0xba14>
  40f270:	sub	x25, x25, #0x20
  40f274:	cmp	x25, x24
  40f278:	b.cc	40f2d4 <feof@plt+0xba34>  // b.lo, b.ul, b.last
  40f27c:	ldr	x8, [x25]
  40f280:	ldrb	w9, [x8]
  40f284:	cmp	w9, #0x40
  40f288:	b.ne	40f270 <feof@plt+0xb9d0>  // b.any
  40f28c:	add	x0, x8, #0x1
  40f290:	mov	x1, x20
  40f294:	bl	403640 <strcmp@plt>
  40f298:	cbnz	w0, 40f270 <feof@plt+0xb9d0>
  40f29c:	mov	x19, x25
  40f2a0:	b	40f2b8 <feof@plt+0xba18>
  40f2a4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  40f2a8:	add	x0, x0, #0xc57
  40f2ac:	mov	x1, x22
  40f2b0:	bl	42b940 <feof@plt+0x280a0>
  40f2b4:	mov	x19, xzr
  40f2b8:	mov	x0, x19
  40f2bc:	ldp	x20, x19, [sp, #64]
  40f2c0:	ldp	x22, x21, [sp, #48]
  40f2c4:	ldp	x24, x23, [sp, #32]
  40f2c8:	ldp	x26, x25, [sp, #16]
  40f2cc:	ldp	x29, x30, [sp], #80
  40f2d0:	ret
  40f2d4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x62fc>
  40f2d8:	add	x0, x0, #0xc57
  40f2dc:	mov	x1, x20
  40f2e0:	b	40f2b0 <feof@plt+0xba10>
  40f2e4:	sub	sp, sp, #0x80
  40f2e8:	stp	x29, x30, [sp, #32]
  40f2ec:	stp	x28, x27, [sp, #48]
  40f2f0:	stp	x26, x25, [sp, #64]
  40f2f4:	stp	x24, x23, [sp, #80]
  40f2f8:	stp	x22, x21, [sp, #96]
  40f2fc:	stp	x20, x19, [sp, #112]
  40f300:	add	x29, sp, #0x20
  40f304:	adrp	x28, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f308:	ldr	w9, [x28, #1560]
  40f30c:	sub	x8, x1, x0
  40f310:	cmp	w2, #0x0
  40f314:	csinv	w21, w8, wzr, ne  // ne = any
  40f318:	cmp	w9, #0x1
  40f31c:	b.lt	40f42c <feof@plt+0xbb8c>  // b.tstop
  40f320:	add	x9, x0, #0x1
  40f324:	str	x9, [sp, #16]
  40f328:	mov	x9, #0xffffffff00000000    	// #-4294967296
  40f32c:	sxtw	x23, w8
  40f330:	cmp	w2, #0x0
  40f334:	mov	w10, #0x1                   	// #1
  40f338:	add	x8, x9, x8, lsl #32
  40f33c:	mov	w19, w2
  40f340:	mov	x20, x0
  40f344:	mov	x25, xzr
  40f348:	mov	x22, xzr
  40f34c:	cneg	w9, w10, eq  // eq = none
  40f350:	asr	x8, x8, #32
  40f354:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f358:	str	w9, [sp, #12]
  40f35c:	stur	x8, [x29, #-8]
  40f360:	b	40f388 <feof@plt+0xbae8>
  40f364:	ldr	w1, [sp, #12]
  40f368:	mov	w0, w22
  40f36c:	bl	414258 <feof@plt+0x109b8>
  40f370:	cbnz	w0, 40f450 <feof@plt+0xbbb0>
  40f374:	ldrsw	x8, [x28, #1560]
  40f378:	add	x22, x22, #0x1
  40f37c:	add	x25, x25, #0x18
  40f380:	cmp	x22, x8
  40f384:	b.ge	40f42c <feof@plt+0xbb8c>  // b.tcont
  40f388:	ldr	x26, [x24, #1592]
  40f38c:	mov	x1, x20
  40f390:	mov	x2, x23
  40f394:	ldr	x27, [x26, x25]
  40f398:	mov	x0, x27
  40f39c:	bl	403450 <strncmp@plt>
  40f3a0:	cbnz	w0, 40f3c8 <feof@plt+0xbb28>
  40f3a4:	cbz	w19, 40f3c0 <feof@plt+0xbb20>
  40f3a8:	mov	w0, w22
  40f3ac:	mov	w1, w21
  40f3b0:	bl	414258 <feof@plt+0x109b8>
  40f3b4:	cbnz	w0, 40f450 <feof@plt+0xbbb0>
  40f3b8:	ldr	x26, [x24, #1592]
  40f3bc:	b	40f3c8 <feof@plt+0xbb28>
  40f3c0:	ldrb	w8, [x27, x23]
  40f3c4:	cbz	w8, 40f3a8 <feof@plt+0xbb08>
  40f3c8:	add	x8, x26, x25
  40f3cc:	ldr	x8, [x8, #8]
  40f3d0:	cbz	x8, 40f374 <feof@plt+0xbad4>
  40f3d4:	ldr	x26, [x26, x25]
  40f3d8:	ldrb	w9, [x26]
  40f3dc:	cmp	w9, #0x55
  40f3e0:	b.eq	40f3ec <feof@plt+0xbb4c>  // b.none
  40f3e4:	cmp	w9, #0x44
  40f3e8:	b.ne	40f374 <feof@plt+0xbad4>  // b.any
  40f3ec:	ldrb	w10, [x20]
  40f3f0:	cmp	w9, w10
  40f3f4:	b.ne	40f374 <feof@plt+0xbad4>  // b.any
  40f3f8:	ldr	x27, [x8]
  40f3fc:	ldr	x1, [sp, #16]
  40f400:	ldur	x2, [x29, #-8]
  40f404:	mov	x0, x27
  40f408:	bl	403450 <strncmp@plt>
  40f40c:	cbnz	w0, 40f374 <feof@plt+0xbad4>
  40f410:	cbnz	w19, 40f364 <feof@plt+0xbac4>
  40f414:	ldrb	w8, [x26, #1]
  40f418:	cbnz	w8, 40f374 <feof@plt+0xbad4>
  40f41c:	ldur	x8, [x29, #-8]
  40f420:	ldrb	w8, [x27, x8]
  40f424:	cbnz	w8, 40f374 <feof@plt+0xbad4>
  40f428:	b	40f364 <feof@plt+0xbac4>
  40f42c:	mov	w0, wzr
  40f430:	ldp	x20, x19, [sp, #112]
  40f434:	ldp	x22, x21, [sp, #96]
  40f438:	ldp	x24, x23, [sp, #80]
  40f43c:	ldp	x26, x25, [sp, #64]
  40f440:	ldp	x28, x27, [sp, #48]
  40f444:	ldp	x29, x30, [sp, #32]
  40f448:	add	sp, sp, #0x80
  40f44c:	ret
  40f450:	mov	w0, #0x1                   	// #1
  40f454:	b	40f430 <feof@plt+0xbb90>
  40f458:	stp	x29, x30, [sp, #-96]!
  40f45c:	stp	x28, x27, [sp, #16]
  40f460:	stp	x26, x25, [sp, #32]
  40f464:	stp	x24, x23, [sp, #48]
  40f468:	stp	x22, x21, [sp, #64]
  40f46c:	stp	x20, x19, [sp, #80]
  40f470:	mov	x29, sp
  40f474:	sub	sp, sp, #0x30
  40f478:	stp	x1, x2, [x29, #-32]
  40f47c:	ldr	x8, [x0]
  40f480:	mov	x21, x0
  40f484:	cbz	x8, 40f508 <feof@plt+0xbc68>
  40f488:	ldrsw	x19, [x21, #8]
  40f48c:	cmp	w19, #0x1
  40f490:	b.lt	40f4e4 <feof@plt+0xbc44>  // b.tstop
  40f494:	ldr	x8, [x21]
  40f498:	ldp	x24, x23, [x29, #-32]
  40f49c:	mov	x20, xzr
  40f4a0:	add	x22, x8, #0x10
  40f4a4:	sxtw	x21, w23
  40f4a8:	b	40f4bc <feof@plt+0xbc1c>
  40f4ac:	add	x20, x20, #0x1
  40f4b0:	cmp	x20, x19
  40f4b4:	add	x22, x22, #0x18
  40f4b8:	b.ge	40f4e4 <feof@plt+0xbc44>  // b.tcont
  40f4bc:	ldr	w8, [x22]
  40f4c0:	cmp	w8, w23
  40f4c4:	b.ne	40f4ac <feof@plt+0xbc0c>  // b.any
  40f4c8:	ldur	x1, [x22, #-16]
  40f4cc:	mov	x0, x24
  40f4d0:	mov	x2, x21
  40f4d4:	bl	403450 <strncmp@plt>
  40f4d8:	cbnz	w0, 40f4ac <feof@plt+0xbc0c>
  40f4dc:	mov	w0, #0x1                   	// #1
  40f4e0:	b	40f4e8 <feof@plt+0xbc48>
  40f4e4:	mov	w0, wzr
  40f4e8:	mov	sp, x29
  40f4ec:	ldp	x20, x19, [sp, #80]
  40f4f0:	ldp	x22, x21, [sp, #64]
  40f4f4:	ldp	x24, x23, [sp, #48]
  40f4f8:	ldp	x26, x25, [sp, #32]
  40f4fc:	ldp	x28, x27, [sp, #16]
  40f500:	ldp	x29, x30, [sp], #96
  40f504:	ret
  40f508:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f50c:	ldr	x2, [x8, #1448]
  40f510:	mov	w25, wzr
  40f514:	mov	x8, x2
  40f518:	b	40f524 <feof@plt+0xbc84>
  40f51c:	add	w25, w25, #0x1
  40f520:	add	x8, x8, #0x1
  40f524:	ldrb	w9, [x8]
  40f528:	cmp	w9, #0x3b
  40f52c:	b.eq	40f51c <feof@plt+0xbc7c>  // b.none
  40f530:	cbnz	w9, 40f520 <feof@plt+0xbc80>
  40f534:	mov	w8, #0x18                  	// #24
  40f538:	smull	x8, w25, w8
  40f53c:	add	x8, x8, #0xf
  40f540:	and	x8, x8, #0xfffffffffffffff0
  40f544:	mov	x9, sp
  40f548:	sub	x19, x9, x8
  40f54c:	mov	sp, x19
  40f550:	ldrb	w8, [x2]
  40f554:	cbz	w8, 40f5f4 <feof@plt+0xbd54>
  40f558:	mov	x8, xzr
  40f55c:	mov	w9, #0x18                  	// #24
  40f560:	mov	x10, x2
  40f564:	b	40f590 <feof@plt+0xbcf0>
  40f568:	sub	w11, w10, w11
  40f56c:	madd	x12, x8, x9, x19
  40f570:	str	w11, [x12, #20]
  40f574:	mov	x11, x10
  40f578:	ldrb	w12, [x11], #1
  40f57c:	add	x8, x8, #0x1
  40f580:	cmp	w12, #0x3b
  40f584:	csel	x10, x11, x10, eq  // eq = none
  40f588:	ldrb	w11, [x10]
  40f58c:	cbz	w11, 40f5f4 <feof@plt+0xbd54>
  40f590:	mul	x11, x8, x9
  40f594:	str	x10, [x19, x11]
  40f598:	mov	x11, x10
  40f59c:	ldrb	w12, [x11]
  40f5a0:	cmp	w12, #0x20
  40f5a4:	b.eq	40f5b4 <feof@plt+0xbd14>  // b.none
  40f5a8:	cbz	w12, 40f8dc <feof@plt+0xc03c>
  40f5ac:	add	x11, x11, #0x1
  40f5b0:	b	40f59c <feof@plt+0xbcfc>
  40f5b4:	sub	w10, w11, w10
  40f5b8:	madd	x12, x8, x9, x19
  40f5bc:	add	x11, x11, #0x1
  40f5c0:	str	w10, [x12, #16]
  40f5c4:	mov	x10, x11
  40f5c8:	str	x11, [x12, #8]
  40f5cc:	ldrb	w12, [x10]
  40f5d0:	cbz	w12, 40f568 <feof@plt+0xbcc8>
  40f5d4:	cmp	w12, #0x3b
  40f5d8:	b.eq	40f568 <feof@plt+0xbcc8>  // b.none
  40f5dc:	cmp	w12, #0x20
  40f5e0:	b.eq	40f8dc <feof@plt+0xc03c>  // b.none
  40f5e4:	add	x10, x10, #0x1
  40f5e8:	ldrb	w12, [x10]
  40f5ec:	cbnz	w12, 40f5d4 <feof@plt+0xbd34>
  40f5f0:	b	40f568 <feof@plt+0xbcc8>
  40f5f4:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f5f8:	ldr	w8, [x20, #1560]
  40f5fc:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f600:	ldrsw	x9, [x9, #1856]
  40f604:	cmp	w8, #0x0
  40f608:	csinc	w8, w8, wzr, ne  // ne = any
  40f60c:	add	x8, x9, w8, sxtw
  40f610:	add	x8, x8, x8, lsl #1
  40f614:	lsl	x0, x8, #3
  40f618:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  40f61c:	str	x0, [x21]
  40f620:	ldr	w20, [x20, #1560]
  40f624:	stur	x21, [x29, #-40]
  40f628:	cmp	w20, #0x1
  40f62c:	b.lt	40f71c <feof@plt+0xbe7c>  // b.tstop
  40f630:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f634:	ldr	x27, [x8, #1592]
  40f638:	mov	w8, w25
  40f63c:	mov	x26, xzr
  40f640:	stur	x8, [x29, #-8]
  40f644:	add	x8, x19, #0x10
  40f648:	mov	w28, #0x18                  	// #24
  40f64c:	stur	x8, [x29, #-16]
  40f650:	b	40f660 <feof@plt+0xbdc0>
  40f654:	add	x26, x26, #0x1
  40f658:	cmp	x26, x20
  40f65c:	b.cs	40f71c <feof@plt+0xbe7c>  // b.hs, b.nlast
  40f660:	madd	x8, x26, x28, x27
  40f664:	ldrb	w8, [x8, #16]
  40f668:	tbnz	w8, #2, 40f654 <feof@plt+0xbdb4>
  40f66c:	mul	x8, x26, x28
  40f670:	ldr	x22, [x27, x8]
  40f674:	mov	x0, x22
  40f678:	bl	4030b0 <strlen@plt>
  40f67c:	cmp	w25, #0x1
  40f680:	b.lt	40f654 <feof@plt+0xbdb4>  // b.tstop
  40f684:	ldp	x19, x21, [x29, #-16]
  40f688:	mov	x23, x0
  40f68c:	sxtw	x24, w0
  40f690:	b	40f6a0 <feof@plt+0xbe00>
  40f694:	subs	x21, x21, #0x1
  40f698:	add	x19, x19, #0x18
  40f69c:	b.eq	40f654 <feof@plt+0xbdb4>  // b.none
  40f6a0:	ldr	w8, [x19]
  40f6a4:	cmp	w8, w23
  40f6a8:	b.ne	40f694 <feof@plt+0xbdf4>  // b.any
  40f6ac:	ldur	x1, [x19, #-16]
  40f6b0:	mov	x0, x22
  40f6b4:	mov	x2, x24
  40f6b8:	bl	403450 <strncmp@plt>
  40f6bc:	cbnz	w0, 40f694 <feof@plt+0xbdf4>
  40f6c0:	ldur	x11, [x29, #-40]
  40f6c4:	ldur	x8, [x19, #-8]
  40f6c8:	ldrsw	x9, [x11, #8]
  40f6cc:	ldr	x10, [x11]
  40f6d0:	mul	x9, x9, x28
  40f6d4:	str	x8, [x10, x9]
  40f6d8:	ldr	x8, [x11]
  40f6dc:	ldrsw	x9, [x11, #8]
  40f6e0:	ldr	w10, [x19, #4]
  40f6e4:	madd	x8, x9, x28, x8
  40f6e8:	str	w10, [x8, #16]
  40f6ec:	ldr	x8, [x11]
  40f6f0:	ldrsw	x9, [x11, #8]
  40f6f4:	madd	x8, x9, x28, x8
  40f6f8:	str	xzr, [x8, #8]
  40f6fc:	ldr	x8, [x11]
  40f700:	ldrsw	x9, [x11, #8]
  40f704:	madd	x8, x9, x28, x8
  40f708:	str	wzr, [x8, #20]
  40f70c:	ldr	w8, [x11, #8]
  40f710:	add	w8, w8, #0x1
  40f714:	str	w8, [x11, #8]
  40f718:	b	40f654 <feof@plt+0xbdb4>
  40f71c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f720:	ldr	w8, [x8, #1856]
  40f724:	ldur	x21, [x29, #-40]
  40f728:	cmp	w8, #0x1
  40f72c:	b.lt	40f488 <feof@plt+0xbbe8>  // b.tstop
  40f730:	mov	x27, #0x1                   	// #1
  40f734:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f738:	mov	x28, xzr
  40f73c:	mov	w20, #0x1                   	// #1
  40f740:	movk	x27, #0x8001, lsl #32
  40f744:	add	x22, x22, #0x730
  40f748:	b	40f760 <feof@plt+0xbec0>
  40f74c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f750:	ldrsw	x8, [x8, #1856]
  40f754:	add	x28, x28, #0x1
  40f758:	cmp	x28, x8
  40f75c:	b.ge	40f488 <feof@plt+0xbbe8>  // b.tcont
  40f760:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40f764:	ldr	x23, [x8, #1368]
  40f768:	ldrb	w19, [x23]
  40f76c:	cbz	w19, 40f74c <feof@plt+0xbeac>
  40f770:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f774:	ldr	x8, [x8, #1864]
  40f778:	add	x8, x8, x28, lsl #4
  40f77c:	ldr	x24, [x8]
  40f780:	ldrsw	x25, [x8, #8]
  40f784:	and	w8, w19, #0xff
  40f788:	cmp	w8, #0x20
  40f78c:	b.ne	40f79c <feof@plt+0xbefc>  // b.any
  40f790:	ldrb	w19, [x23, #1]!
  40f794:	cmp	w19, #0x20
  40f798:	b.eq	40f790 <feof@plt+0xbef0>  // b.none
  40f79c:	mov	x26, x23
  40f7a0:	mov	x0, x26
  40f7a4:	mov	x1, x24
  40f7a8:	mov	x2, x25
  40f7ac:	bl	403450 <strncmp@plt>
  40f7b0:	cbnz	w0, 40f7cc <feof@plt+0xbf2c>
  40f7b4:	ldrb	w8, [x26, x25]
  40f7b8:	cmp	x8, #0x3f
  40f7bc:	b.hi	40f7cc <feof@plt+0xbf2c>  // b.pmore
  40f7c0:	lsl	x8, x20, x8
  40f7c4:	and	x8, x8, x27
  40f7c8:	cbnz	x8, 40f7ec <feof@plt+0xbf4c>
  40f7cc:	ldrb	w8, [x26]
  40f7d0:	cbz	w8, 40f7f0 <feof@plt+0xbf50>
  40f7d4:	cmp	w8, #0x20
  40f7d8:	b.eq	40f7f0 <feof@plt+0xbf50>  // b.none
  40f7dc:	add	x26, x26, #0x1
  40f7e0:	cmp	w8, #0x2f
  40f7e4:	b.ne	40f7cc <feof@plt+0xbf2c>  // b.any
  40f7e8:	b	40f7a0 <feof@plt+0xbf00>
  40f7ec:	ldrb	w8, [x26]
  40f7f0:	orr	w9, w8, #0x20
  40f7f4:	cmp	w9, #0x20
  40f7f8:	b.ne	40f818 <feof@plt+0xbf78>  // b.any
  40f7fc:	cmp	w8, #0x0
  40f800:	cinc	x23, x26, ne  // ne = any
  40f804:	ldrb	w19, [x23]
  40f808:	cbnz	w19, 40f784 <feof@plt+0xbee4>
  40f80c:	b	40f74c <feof@plt+0xbeac>
  40f810:	ldrb	w19, [x24]
  40f814:	mov	x23, x24
  40f818:	orr	w8, w19, #0x20
  40f81c:	and	w8, w8, #0xff
  40f820:	cmp	w8, #0x20
  40f824:	b.eq	40f74c <feof@plt+0xbeac>  // b.none
  40f828:	add	x24, x23, #0x1
  40f82c:	b	40f834 <feof@plt+0xbf94>
  40f830:	ldrb	w19, [x24], #1
  40f834:	and	w8, w19, #0xff
  40f838:	cmp	w8, #0x2f
  40f83c:	and	x8, x19, #0xff
  40f840:	b.hi	40f830 <feof@plt+0xbf90>  // b.pmore
  40f844:	lsl	x8, x20, x8
  40f848:	tst	x8, x27
  40f84c:	b.eq	40f830 <feof@plt+0xbf90>  // b.none
  40f850:	mvn	w8, w23
  40f854:	add	w2, w8, w24
  40f858:	mov	x0, x22
  40f85c:	mov	x1, x23
  40f860:	bl	40f458 <feof@plt+0xbbb8>
  40f864:	cbnz	w0, 40f74c <feof@plt+0xbeac>
  40f868:	ldurb	w8, [x24, #-1]
  40f86c:	cmp	w8, #0x2f
  40f870:	b.eq	40f810 <feof@plt+0xbf70>  // b.none
  40f874:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f878:	ldr	x8, [x8, #1864]
  40f87c:	ldrsw	x10, [x21, #8]
  40f880:	ldr	x9, [x21]
  40f884:	mov	w12, #0x18                  	// #24
  40f888:	add	x8, x8, x28, lsl #4
  40f88c:	ldr	x11, [x8]
  40f890:	mul	x10, x10, x12
  40f894:	str	x11, [x9, x10]
  40f898:	ldr	x9, [x21]
  40f89c:	ldrsw	x10, [x21, #8]
  40f8a0:	ldr	w8, [x8, #8]
  40f8a4:	madd	x9, x10, x12, x9
  40f8a8:	str	w8, [x9, #16]
  40f8ac:	ldr	x8, [x21]
  40f8b0:	ldrsw	x9, [x21, #8]
  40f8b4:	madd	x8, x9, x12, x8
  40f8b8:	str	xzr, [x8, #8]
  40f8bc:	ldr	x8, [x21]
  40f8c0:	ldrsw	x9, [x21, #8]
  40f8c4:	madd	x8, x9, x12, x8
  40f8c8:	str	wzr, [x8, #20]
  40f8cc:	ldr	w8, [x21, #8]
  40f8d0:	add	w8, w8, #0x1
  40f8d4:	str	w8, [x21, #8]
  40f8d8:	b	40f74c <feof@plt+0xbeac>
  40f8dc:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  40f8e0:	ldr	w0, [x8, #400]
  40f8e4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40f8e8:	add	x1, x1, #0xb36
  40f8ec:	bl	42c008 <feof@plt+0x28768>
  40f8f0:	stp	x29, x30, [sp, #-32]!
  40f8f4:	str	x19, [sp, #16]
  40f8f8:	mov	x29, sp
  40f8fc:	mov	x19, x0
  40f900:	ldr	x0, [x0]
  40f904:	bl	4031d0 <free@plt>
  40f908:	str	xzr, [x19]
  40f90c:	str	wzr, [x19, #8]
  40f910:	ldr	x19, [sp, #16]
  40f914:	ldp	x29, x30, [sp], #32
  40f918:	ret
  40f91c:	stp	x29, x30, [sp, #-48]!
  40f920:	stp	x22, x21, [sp, #16]
  40f924:	stp	x20, x19, [sp, #32]
  40f928:	mov	x29, sp
  40f92c:	adrp	x0, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f930:	add	x0, x0, #0x4d0
  40f934:	bl	40471c <feof@plt+0xe7c>
  40f938:	bl	417b14 <feof@plt+0x14274>
  40f93c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f940:	ldr	x0, [x8, #632]
  40f944:	bl	42934c <feof@plt+0x25aac>
  40f948:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f94c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f950:	str	wzr, [x8, #1112]
  40f954:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f958:	strb	wzr, [x9, #1256]
  40f95c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f960:	strb	wzr, [x8, #1760]
  40f964:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f968:	strb	wzr, [x9, #1764]
  40f96c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f970:	str	wzr, [x8, #1872]
  40f974:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f978:	str	wzr, [x9, #1824]
  40f97c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f980:	str	xzr, [x8, #1728]
  40f984:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f988:	str	xzr, [x9, #1120]
  40f98c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f990:	str	xzr, [x8, #1520]
  40f994:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f998:	strb	wzr, [x9, #1876]
  40f99c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f9a0:	str	xzr, [x8, #1512]
  40f9a4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f9a8:	str	xzr, [x9, #1528]
  40f9ac:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f9b0:	str	wzr, [x8, #1616]
  40f9b4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f9b8:	adrp	x0, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  40f9bc:	str	xzr, [x9, #1880]
  40f9c0:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40f9c4:	str	xzr, [x8, #1888]
  40f9c8:	mov	w8, #0x1                   	// #1
  40f9cc:	add	x0, x0, #0x190
  40f9d0:	str	w8, [x9, #1360]
  40f9d4:	bl	4184c4 <feof@plt+0x14c24>
  40f9d8:	adrp	x0, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  40f9dc:	add	x0, x0, #0xa0
  40f9e0:	bl	4184c4 <feof@plt+0x14c24>
  40f9e4:	adrp	x0, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40f9e8:	add	x0, x0, #0x4f0
  40f9ec:	mov	x1, xzr
  40f9f0:	bl	47bc70 <_obstack_free@@Base>
  40f9f4:	adrp	x0, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  40f9f8:	add	x0, x0, #0x138
  40f9fc:	mov	x1, xzr
  40fa00:	bl	47bc70 <_obstack_free@@Base>
  40fa04:	adrp	x0, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fa08:	add	x0, x0, #0x658
  40fa0c:	mov	x1, xzr
  40fa10:	bl	47bc70 <_obstack_free@@Base>
  40fa14:	adrp	x9, 47e000 <_obstack_memory_used@@Base+0x22fc>
  40fa18:	adrp	x0, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fa1c:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40fa20:	add	x9, x9, #0xb6d
  40fa24:	add	x0, x0, #0x548
  40fa28:	mov	x1, xzr
  40fa2c:	str	x9, [x8, #1352]
  40fa30:	bl	47bc70 <_obstack_free@@Base>
  40fa34:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fa38:	ldr	w9, [x19, #1488]
  40fa3c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fa40:	str	xzr, [x8, #1544]
  40fa44:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fa48:	cmp	w9, #0x45
  40fa4c:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fa50:	str	xzr, [x8, #1896]
  40fa54:	b.lt	40fa90 <feof@plt+0xc1f0>  // b.tstop
  40fa58:	mov	w21, #0x44                  	// #68
  40fa5c:	mov	w22, #0x880                 	// #2176
  40fa60:	ldr	x8, [x20, #1480]
  40fa64:	ldr	x0, [x8, x22]
  40fa68:	bl	4031d0 <free@plt>
  40fa6c:	ldr	x8, [x20, #1480]
  40fa70:	add	x8, x8, x22
  40fa74:	ldr	x0, [x8, #8]
  40fa78:	bl	4031d0 <free@plt>
  40fa7c:	ldrsw	x8, [x19, #1488]
  40fa80:	add	x21, x21, #0x1
  40fa84:	add	x22, x22, #0x20
  40fa88:	cmp	x21, x8
  40fa8c:	b.lt	40fa60 <feof@plt+0xc1c0>  // b.tstop
  40fa90:	ldr	x0, [x20, #1480]
  40fa94:	bl	4031d0 <free@plt>
  40fa98:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fa9c:	ldr	x8, [x8, #1904]
  40faa0:	str	xzr, [x20, #1480]
  40faa4:	str	wzr, [x19, #1488]
  40faa8:	cbz	x8, 40fab0 <feof@plt+0xc210>
  40faac:	str	wzr, [x8, #4]
  40fab0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fab4:	ldr	x8, [x8, #1912]
  40fab8:	cbz	x8, 40fac0 <feof@plt+0xc220>
  40fabc:	str	wzr, [x8, #4]
  40fac0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fac4:	ldr	x8, [x8, #1920]
  40fac8:	cbz	x8, 40fad0 <feof@plt+0xc230>
  40facc:	str	wzr, [x8, #4]
  40fad0:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40fad4:	ldr	x19, [x8, #1248]
  40fad8:	cbz	x19, 40faf4 <feof@plt+0xc254>
  40fadc:	ldp	x0, x20, [x19]
  40fae0:	bl	4031d0 <free@plt>
  40fae4:	mov	x0, x19
  40fae8:	bl	4031d0 <free@plt>
  40faec:	mov	x19, x20
  40faf0:	cbnz	x20, 40fadc <feof@plt+0xc23c>
  40faf4:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40faf8:	ldr	x19, [x8, #1208]
  40fafc:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40fb00:	add	x8, x8, #0x4e0
  40fb04:	str	xzr, [x8]
  40fb08:	str	wzr, [x8, #8]
  40fb0c:	cbz	x19, 40fb28 <feof@plt+0xc288>
  40fb10:	ldp	x0, x20, [x19]
  40fb14:	bl	4031d0 <free@plt>
  40fb18:	mov	x0, x19
  40fb1c:	bl	4031d0 <free@plt>
  40fb20:	mov	x19, x20
  40fb24:	cbnz	x20, 40fb10 <feof@plt+0xc270>
  40fb28:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40fb2c:	ldr	x19, [x8, #1376]
  40fb30:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40fb34:	add	x8, x8, #0x4b8
  40fb38:	str	xzr, [x8]
  40fb3c:	str	wzr, [x8, #8]
  40fb40:	cbz	x19, 40fb5c <feof@plt+0xc2bc>
  40fb44:	ldp	x0, x20, [x19]
  40fb48:	bl	4031d0 <free@plt>
  40fb4c:	mov	x0, x19
  40fb50:	bl	4031d0 <free@plt>
  40fb54:	mov	x19, x20
  40fb58:	cbnz	x20, 40fb44 <feof@plt+0xc2a4>
  40fb5c:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40fb60:	adrp	x10, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40fb64:	add	x8, x8, #0x560
  40fb68:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40fb6c:	add	x10, x10, #0x23b
  40fb70:	str	x10, [x9, #1240]
  40fb74:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40fb78:	str	xzr, [x8]
  40fb7c:	str	wzr, [x8, #8]
  40fb80:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fb84:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fb88:	str	x10, [x9, #1304]
  40fb8c:	adrp	x9, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40fb90:	str	xzr, [x8, #1536]
  40fb94:	ldr	x8, [x20, #1552]
  40fb98:	str	x10, [x9, #1312]
  40fb9c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fba0:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fba4:	str	xzr, [x9, #1496]
  40fba8:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fbac:	adrp	x19, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  40fbb0:	str	xzr, [x10, #1504]
  40fbb4:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fbb8:	adrp	x11, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fbbc:	str	xzr, [x9, #1928]
  40fbc0:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fbc4:	add	x19, x19, #0x578
  40fbc8:	str	xzr, [x10, #1736]
  40fbcc:	str	xzr, [x11, #1752]
  40fbd0:	str	xzr, [x9, #1744]
  40fbd4:	cbz	x8, 40fc08 <feof@plt+0xc368>
  40fbd8:	cmp	x8, x19
  40fbdc:	b.eq	40fc04 <feof@plt+0xc364>  // b.none
  40fbe0:	ldr	x0, [x8]
  40fbe4:	ldr	x21, [x8, #24]
  40fbe8:	bl	4031d0 <free@plt>
  40fbec:	ldr	x0, [x20, #1552]
  40fbf0:	bl	4031d0 <free@plt>
  40fbf4:	cmp	x21, x19
  40fbf8:	mov	x8, x21
  40fbfc:	str	x21, [x20, #1552]
  40fc00:	b.ne	40fbe0 <feof@plt+0xc340>  // b.any
  40fc04:	str	xzr, [x20, #1552]
  40fc08:	mov	x8, xzr
  40fc0c:	b	40fc28 <feof@plt+0xc388>
  40fc10:	ldr	x10, [x9, #40]
  40fc14:	ldr	x9, [x9, #16]
  40fc18:	add	x8, x8, #0x30
  40fc1c:	cmp	x8, #0x840
  40fc20:	str	x10, [x9]
  40fc24:	b.eq	40fc3c <feof@plt+0xc39c>  // b.none
  40fc28:	add	x9, x19, x8
  40fc2c:	ldrb	w10, [x9, #37]
  40fc30:	cbz	w10, 40fc10 <feof@plt+0xc370>
  40fc34:	strb	wzr, [x9, #37]
  40fc38:	b	40fc10 <feof@plt+0xc370>
  40fc3c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fc40:	ldr	x8, [x8, #1184]
  40fc44:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fc48:	str	wzr, [x9, #1944]
  40fc4c:	cbz	x8, 40fc54 <feof@plt+0xc3b4>
  40fc50:	str	wzr, [x8, #4]
  40fc54:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fc58:	ldr	x8, [x8, #2040]
  40fc5c:	cbz	x8, 40fc64 <feof@plt+0xc3c4>
  40fc60:	str	wzr, [x8, #4]
  40fc64:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fc68:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fc6c:	ldr	x0, [x19, #1592]
  40fc70:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fc74:	strb	wzr, [x8, #1712]
  40fc78:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fc7c:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fc80:	strb	wzr, [x9, #1772]
  40fc84:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fc88:	str	wzr, [x8, #1828]
  40fc8c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fc90:	str	xzr, [x10, #1952]
  40fc94:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fc98:	str	wzr, [x9, #1832]
  40fc9c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fca0:	str	wzr, [x8, #1968]
  40fca4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fca8:	str	xzr, [x10, #1960]
  40fcac:	str	xzr, [x9, #1128]
  40fcb0:	str	xzr, [x8, #1136]
  40fcb4:	bl	4031d0 <free@plt>
  40fcb8:	str	xzr, [x19, #1592]
  40fcbc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fcc0:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fcc4:	str	wzr, [x8, #1560]
  40fcc8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fccc:	ldr	x0, [x19, #1784]
  40fcd0:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fcd4:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fcd8:	str	wzr, [x8, #1148]
  40fcdc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fce0:	str	wzr, [x9, #1576]
  40fce4:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fce8:	str	wzr, [x10, #1144]
  40fcec:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fcf0:	str	xzr, [x8, #1568]
  40fcf4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fcf8:	add	x10, x10, #0x640
  40fcfc:	str	xzr, [x9, #1152]
  40fd00:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd04:	add	x8, x8, #0x710
  40fd08:	stp	xzr, xzr, [x10]
  40fd0c:	str	xzr, [x9, #1584]
  40fd10:	stp	xzr, xzr, [x8]
  40fd14:	bl	4031d0 <free@plt>
  40fd18:	str	xzr, [x19, #1784]
  40fd1c:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd20:	ldr	x0, [x19, #1168]
  40fd24:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd28:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd2c:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd30:	str	wzr, [x8, #1160]
  40fd34:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd38:	str	wzr, [x9, #1972]
  40fd3c:	strb	wzr, [x10, #1776]
  40fd40:	str	wzr, [x8, #1768]
  40fd44:	bl	4031d0 <free@plt>
  40fd48:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd4c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd50:	str	xzr, [x8, #1976]
  40fd54:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd58:	str	xzr, [x19, #1168]
  40fd5c:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd60:	str	wzr, [x9, #1984]
  40fd64:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd68:	str	wzr, [x8, #1800]
  40fd6c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd70:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd74:	str	xzr, [x10, #1192]
  40fd78:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd7c:	str	xzr, [x9, #1176]
  40fd80:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd84:	str	wzr, [x8, #1212]
  40fd88:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd8c:	add	x19, x19, #0x730
  40fd90:	str	wzr, [x10, #1208]
  40fd94:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fd98:	str	xzr, [x9, #1200]
  40fd9c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fda0:	str	wzr, [x8, #1224]
  40fda4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fda8:	ldr	x0, [x19]
  40fdac:	str	xzr, [x10, #1216]
  40fdb0:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fdb4:	str	xzr, [x9, #1792]
  40fdb8:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fdbc:	str	wzr, [x8, #1992]
  40fdc0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fdc4:	strb	wzr, [x10, #1988]
  40fdc8:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fdcc:	strb	wzr, [x9, #1996]
  40fdd0:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fdd4:	strb	wzr, [x8, #2004]
  40fdd8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fddc:	strb	wzr, [x10, #2000]
  40fde0:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fde4:	strb	wzr, [x9, #2008]
  40fde8:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fdec:	str	xzr, [x8, #1864]
  40fdf0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fdf4:	str	xzr, [x10, #2016]
  40fdf8:	str	wzr, [x9, #1856]
  40fdfc:	str	xzr, [x8, #2024]
  40fe00:	bl	4031d0 <free@plt>
  40fe04:	str	xzr, [x19]
  40fe08:	str	wzr, [x19, #8]
  40fe0c:	ldp	x20, x19, [sp, #32]
  40fe10:	ldp	x22, x21, [sp, #16]
  40fe14:	ldp	x29, x30, [sp], #48
  40fe18:	ret
  40fe1c:	stp	x29, x30, [sp, #-32]!
  40fe20:	stp	x20, x19, [sp, #16]
  40fe24:	mov	x29, sp
  40fe28:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fe2c:	add	x19, x19, #0x4f0
  40fe30:	adrp	x3, 439000 <feof@plt+0x35760>
  40fe34:	adrp	x4, 439000 <feof@plt+0x35760>
  40fe38:	add	x3, x3, #0xf08
  40fe3c:	add	x4, x4, #0xf34
  40fe40:	mov	x0, x19
  40fe44:	mov	x1, xzr
  40fe48:	mov	x2, xzr
  40fe4c:	bl	47b98c <_obstack_begin@@Base>
  40fe50:	bl	4183d0 <feof@plt+0x14b30>
  40fe54:	adrp	x0, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  40fe58:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40fe5c:	add	x0, x0, #0x138
  40fe60:	mov	x1, xzr
  40fe64:	str	wzr, [x20, #1560]
  40fe68:	bl	47bc70 <_obstack_free@@Base>
  40fe6c:	mov	x0, x19
  40fe70:	mov	x1, xzr
  40fe74:	bl	47bc70 <_obstack_free@@Base>
  40fe78:	str	wzr, [x20, #1560]
  40fe7c:	ldp	x20, x19, [sp, #16]
  40fe80:	ldp	x29, x30, [sp], #32
  40fe84:	ret
  40fe88:	stp	x29, x30, [sp, #-96]!
  40fe8c:	stp	x28, x27, [sp, #16]
  40fe90:	stp	x26, x25, [sp, #32]
  40fe94:	stp	x24, x23, [sp, #48]
  40fe98:	stp	x22, x21, [sp, #64]
  40fe9c:	stp	x20, x19, [sp, #80]
  40fea0:	mov	x29, sp
  40fea4:	sub	sp, sp, #0x130
  40fea8:	mov	x19, sp
  40feac:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  40feb0:	ldr	x8, [x8, #1192]
  40feb4:	cbz	x8, 41021c <feof@plt+0xc97c>
  40feb8:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40febc:	mov	x22, x0
  40fec0:	add	x1, x1, #0x935
  40fec4:	mov	x0, x8
  40fec8:	bl	403640 <strcmp@plt>
  40fecc:	cbz	w0, 41021c <feof@plt+0xc97c>
  40fed0:	ldr	x25, [x22]
  40fed4:	cbz	x25, 41021c <feof@plt+0xc97c>
  40fed8:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40fedc:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40fee0:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40fee4:	mov	x26, xzr
  40fee8:	mov	w27, wzr
  40feec:	add	x20, x22, #0x8
  40fef0:	mov	w28, #0xffffffff            	// #-1
  40fef4:	add	x21, x21, #0x63c
  40fef8:	add	x23, x23, #0x63f
  40fefc:	add	x24, x24, #0x646
  40ff00:	b	40ff14 <feof@plt+0xc674>
  40ff04:	mov	w27, #0x1                   	// #1
  40ff08:	ldr	x25, [x20, x26, lsl #3]
  40ff0c:	add	x26, x26, #0x1
  40ff10:	cbz	x25, 40ff70 <feof@plt+0xc6d0>
  40ff14:	mov	x0, x25
  40ff18:	mov	x1, x21
  40ff1c:	bl	403640 <strcmp@plt>
  40ff20:	cbz	w0, 41021c <feof@plt+0xc97c>
  40ff24:	ldrb	w8, [x25]
  40ff28:	cmp	w8, #0x2d
  40ff2c:	b.ne	40ff4c <feof@plt+0xc6ac>  // b.any
  40ff30:	ldrb	w8, [x25, #1]
  40ff34:	cmp	w8, #0x6f
  40ff38:	b.ne	40ff4c <feof@plt+0xc6ac>  // b.any
  40ff3c:	cmn	w28, #0x1
  40ff40:	b.ne	41021c <feof@plt+0xc97c>  // b.any
  40ff44:	mov	w28, w26
  40ff48:	b	40ff08 <feof@plt+0xc668>
  40ff4c:	mov	x0, x25
  40ff50:	mov	x1, x23
  40ff54:	bl	403640 <strcmp@plt>
  40ff58:	cbz	w0, 40ff04 <feof@plt+0xc664>
  40ff5c:	mov	x0, x25
  40ff60:	mov	x1, x24
  40ff64:	bl	403640 <strcmp@plt>
  40ff68:	cbnz	w0, 40ff08 <feof@plt+0xc668>
  40ff6c:	b	41021c <feof@plt+0xc97c>
  40ff70:	cbz	w27, 41021c <feof@plt+0xc97c>
  40ff74:	cmn	w28, #0x1
  40ff78:	b.eq	41021c <feof@plt+0xc97c>  // b.none
  40ff7c:	add	w8, w26, #0x4
  40ff80:	lsl	x8, x8, #3
  40ff84:	add	x8, x8, #0xf
  40ff88:	mov	x9, sp
  40ff8c:	and	x8, x8, #0xffffffff0
  40ff90:	sub	x27, x9, x8
  40ff94:	mov	sp, x27
  40ff98:	add	w8, w26, #0x1
  40ff9c:	lsl	x23, x8, #3
  40ffa0:	mov	x0, x27
  40ffa4:	mov	x1, x22
  40ffa8:	mov	x2, x23
  40ffac:	bl	402fc0 <memcpy@plt>
  40ffb0:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40ffb4:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40ffb8:	add	x8, x8, #0x654
  40ffbc:	add	w22, w26, #0x2
  40ffc0:	add	x9, x9, #0x664
  40ffc4:	str	x8, [x27, w26, uxtw #3]
  40ffc8:	str	x9, [x27, x23]
  40ffcc:	str	xzr, [x27, w22, uxtw #3]
  40ffd0:	ldr	x8, [x27, w28, sxtw #3]
  40ffd4:	ldrb	w9, [x8, #2]
  40ffd8:	sxtw	x8, w28
  40ffdc:	cbz	w9, 40fff0 <feof@plt+0xc750>
  40ffe0:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x32fc>
  40ffe4:	add	x9, x9, #0x672
  40ffe8:	str	x9, [x27, x8, lsl #3]
  40ffec:	b	410000 <feof@plt+0xc760>
  40fff0:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  40fff4:	add	x8, x27, x8, lsl #3
  40fff8:	add	x9, x9, #0x935
  40fffc:	str	x9, [x8, #8]
  410000:	adrp	x0, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  410004:	add	x0, x0, #0x291
  410008:	bl	47b980 <feof@plt+0x780e0>
  41000c:	mov	x23, x0
  410010:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  410014:	add	x0, x0, #0x676
  410018:	bl	47b980 <feof@plt+0x780e0>
  41001c:	mov	x20, x0
  410020:	mov	x0, x27
  410024:	mov	x1, x23
  410028:	mov	x2, x20
  41002c:	mov	w3, wzr
  410030:	mov	w4, wzr
  410034:	bl	410344 <feof@plt+0xcaa4>
  410038:	cmp	w0, #0x2
  41003c:	b.ne	410174 <feof@plt+0xc8d4>  // b.any
  410040:	adrp	x0, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  410044:	add	x0, x0, #0x291
  410048:	bl	47b980 <feof@plt+0x780e0>
  41004c:	mov	x28, x0
  410050:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  410054:	add	x0, x0, #0x676
  410058:	bl	47b980 <feof@plt+0x780e0>
  41005c:	mov	x24, x0
  410060:	mov	x0, x27
  410064:	mov	x1, x28
  410068:	mov	x2, x24
  41006c:	mov	w3, wzr
  410070:	mov	w4, wzr
  410074:	bl	410344 <feof@plt+0xcaa4>
  410078:	cmp	w0, #0x2
  41007c:	b.ne	410188 <feof@plt+0xc8e8>  // b.any
  410080:	adrp	x0, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  410084:	add	x0, x0, #0x291
  410088:	str	x22, [x19, #16]
  41008c:	bl	47b980 <feof@plt+0x780e0>
  410090:	mov	x22, x0
  410094:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  410098:	add	x0, x0, #0x676
  41009c:	bl	47b980 <feof@plt+0x780e0>
  4100a0:	mov	x25, x0
  4100a4:	mov	w3, #0x1                   	// #1
  4100a8:	mov	w4, #0x1                   	// #1
  4100ac:	mov	x0, x27
  4100b0:	mov	x1, x22
  4100b4:	mov	x2, x25
  4100b8:	bl	410344 <feof@plt+0xcaa4>
  4100bc:	cmp	w0, #0x2
  4100c0:	b.ne	410190 <feof@plt+0xc8f0>  // b.any
  4100c4:	mov	x0, x23
  4100c8:	mov	x1, x28
  4100cc:	bl	410484 <feof@plt+0xcbe4>
  4100d0:	tbz	w0, #0, 410190 <feof@plt+0xc8f0>
  4100d4:	mov	x0, x20
  4100d8:	mov	x1, x24
  4100dc:	bl	410484 <feof@plt+0xcbe4>
  4100e0:	tbz	w0, #0, 410190 <feof@plt+0xc8f0>
  4100e4:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  4100e8:	add	x1, x1, #0x6c3
  4100ec:	mov	x0, x25
  4100f0:	str	x28, [x19, #8]
  4100f4:	bl	403620 <fopen@plt>
  4100f8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  4100fc:	mov	x28, x0
  410100:	add	x1, x1, #0x6c6
  410104:	mov	x0, x22
  410108:	bl	403620 <fopen@plt>
  41010c:	stp	x28, x0, [x19, #24]
  410110:	add	x0, x19, #0x28
  410114:	mov	w1, #0x100                 	// #256
  410118:	mov	x2, x28
  41011c:	bl	403490 <fgets_unlocked@plt>
  410120:	cbz	x0, 41023c <feof@plt+0xc99c>
  410124:	ldr	x3, [x19, #32]
  410128:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  41012c:	mov	w1, #0x3                   	// #3
  410130:	mov	w2, #0x1                   	// #1
  410134:	add	x0, x0, #0x6c9
  410138:	bl	403740 <fwrite_unlocked@plt>
  41013c:	ldr	x1, [x19, #32]
  410140:	add	x0, x19, #0x28
  410144:	bl	402fa0 <fputs@plt>
  410148:	add	x0, x19, #0x28
  41014c:	mov	w1, #0xa                   	// #10
  410150:	bl	403210 <strchr@plt>
  410154:	ldr	x2, [x19, #24]
  410158:	mov	x28, x0
  41015c:	add	x0, x19, #0x28
  410160:	mov	w1, #0x100                 	// #256
  410164:	bl	403490 <fgets_unlocked@plt>
  410168:	cbz	x0, 41023c <feof@plt+0xc99c>
  41016c:	cbz	x28, 41013c <feof@plt+0xc89c>
  410170:	b	410124 <feof@plt+0xc884>
  410174:	mov	x25, xzr
  410178:	mov	x24, xzr
  41017c:	mov	x22, xzr
  410180:	mov	x28, xzr
  410184:	b	410190 <feof@plt+0xc8f0>
  410188:	mov	x25, xzr
  41018c:	mov	x22, xzr
  410190:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410194:	ldr	x0, [x8, #1096]
  410198:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  41019c:	add	x1, x1, #0x67b
  4101a0:	bl	429778 <feof@plt+0x25ed8>
  4101a4:	cbz	x23, 4101b8 <feof@plt+0xc918>
  4101a8:	mov	x0, x23
  4101ac:	bl	403380 <unlink@plt>
  4101b0:	mov	x0, x23
  4101b4:	bl	4031d0 <free@plt>
  4101b8:	cbz	x28, 4101cc <feof@plt+0xc92c>
  4101bc:	mov	x0, x28
  4101c0:	bl	403380 <unlink@plt>
  4101c4:	mov	x0, x28
  4101c8:	bl	4031d0 <free@plt>
  4101cc:	cbz	x22, 4101e0 <feof@plt+0xc940>
  4101d0:	mov	x0, x22
  4101d4:	bl	403380 <unlink@plt>
  4101d8:	mov	x0, x22
  4101dc:	bl	4031d0 <free@plt>
  4101e0:	cbz	x20, 4101f4 <feof@plt+0xc954>
  4101e4:	mov	x0, x20
  4101e8:	bl	403380 <unlink@plt>
  4101ec:	mov	x0, x20
  4101f0:	bl	4031d0 <free@plt>
  4101f4:	cbz	x24, 410208 <feof@plt+0xc968>
  4101f8:	mov	x0, x24
  4101fc:	bl	403380 <unlink@plt>
  410200:	mov	x0, x24
  410204:	bl	4031d0 <free@plt>
  410208:	cbz	x25, 41021c <feof@plt+0xc97c>
  41020c:	mov	x0, x25
  410210:	bl	403380 <unlink@plt>
  410214:	mov	x0, x25
  410218:	bl	4031d0 <free@plt>
  41021c:	mov	sp, x29
  410220:	ldp	x20, x19, [sp, #80]
  410224:	ldp	x22, x21, [sp, #64]
  410228:	ldp	x24, x23, [sp, #48]
  41022c:	ldp	x26, x25, [sp, #32]
  410230:	ldp	x28, x27, [sp, #16]
  410234:	ldp	x29, x30, [sp], #96
  410238:	ret
  41023c:	ldr	x0, [x19, #24]
  410240:	bl	403150 <fclose@plt>
  410244:	ldr	x0, [x19, #32]
  410248:	bl	403150 <fclose@plt>
  41024c:	mov	w1, #0x402                 	// #1026
  410250:	mov	x0, x22
  410254:	bl	403130 <open@plt>
  410258:	tbnz	w0, #31, 410338 <feof@plt+0xca98>
  41025c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  410260:	add	x1, x1, #0x6cd
  410264:	mov	w2, #0x3                   	// #3
  410268:	mov	w28, w0
  41026c:	str	x25, [x19]
  410270:	stp	x24, x20, [x19, #24]
  410274:	add	x24, x26, #0x2
  410278:	bl	403670 <write@plt>
  41027c:	mov	x20, xzr
  410280:	and	x25, x24, #0xffffffff
  410284:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  410288:	mov	w2, #0x1                   	// #1
  41028c:	mov	w0, w28
  410290:	add	x1, x1, #0x9d0
  410294:	bl	403670 <write@plt>
  410298:	ldr	x24, [x27, x20, lsl #3]
  41029c:	mov	x0, x24
  4102a0:	bl	4030b0 <strlen@plt>
  4102a4:	mov	x2, x0
  4102a8:	mov	w0, w28
  4102ac:	mov	x1, x24
  4102b0:	bl	403670 <write@plt>
  4102b4:	add	x20, x20, #0x1
  4102b8:	cmp	x25, x20
  4102bc:	b.ne	410284 <feof@plt+0xc9e4>  // b.any
  4102c0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4102c4:	add	x1, x1, #0x933
  4102c8:	mov	w2, #0x2                   	// #2
  4102cc:	mov	w0, w28
  4102d0:	bl	403670 <write@plt>
  4102d4:	mov	w0, w28
  4102d8:	bl	403630 <close@plt>
  4102dc:	ldr	x8, [x19, #16]
  4102e0:	ldr	x25, [x19]
  4102e4:	mov	w4, #0x1                   	// #1
  4102e8:	mov	x0, x27
  4102ec:	str	x21, [x27, x8, lsl #3]
  4102f0:	add	w8, w26, #0x3
  4102f4:	mov	x1, x22
  4102f8:	mov	x2, x25
  4102fc:	mov	w3, wzr
  410300:	str	xzr, [x27, w8, uxtw #3]
  410304:	bl	410344 <feof@plt+0xcaa4>
  410308:	ldp	x24, x20, [x19, #24]
  41030c:	cmp	w0, #0x1
  410310:	b.ne	410338 <feof@plt+0xca98>  // b.any
  410314:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410318:	ldr	x0, [x8, #1096]
  41031c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  410320:	add	x1, x1, #0x6d1
  410324:	mov	x2, x22
  410328:	bl	429778 <feof@plt+0x25ed8>
  41032c:	mov	x0, x22
  410330:	bl	4031d0 <free@plt>
  410334:	mov	x22, xzr
  410338:	ldr	x28, [x19, #8]
  41033c:	cbnz	x23, 4101a8 <feof@plt+0xc908>
  410340:	b	4101b8 <feof@plt+0xc918>
  410344:	stp	x29, x30, [sp, #-64]!
  410348:	str	x23, [sp, #16]
  41034c:	stp	x22, x21, [sp, #32]
  410350:	stp	x20, x19, [sp, #48]
  410354:	mov	x29, sp
  410358:	mov	w23, w4
  41035c:	mov	x20, x2
  410360:	mov	x21, x1
  410364:	mov	x19, x0
  410368:	cbz	w3, 410398 <feof@plt+0xcaf8>
  41036c:	adrp	x1, 483000 <_obstack_memory_used@@Base+0x72fc>
  410370:	add	x1, x1, #0xa7e
  410374:	mov	x0, x20
  410378:	bl	403620 <fopen@plt>
  41037c:	mov	x22, x0
  410380:	bl	40efec <feof@plt+0xb74c>
  410384:	mov	w0, #0xa                   	// #10
  410388:	mov	x1, x22
  41038c:	bl	403480 <fputc@plt>
  410390:	mov	x0, x22
  410394:	bl	403150 <fclose@plt>
  410398:	ldr	x1, [x19]
  41039c:	mov	w0, #0x2                   	// #2
  4103a0:	mov	x2, xzr
  4103a4:	bl	47cf2c <_obstack_memory_used@@Base+0x1228>
  4103a8:	cbz	x0, 410430 <feof@plt+0xcb90>
  4103ac:	mov	x3, x19
  4103b0:	ldr	x2, [x3], #8
  4103b4:	cmp	w23, #0x0
  4103b8:	mov	w8, #0x303                 	// #771
  4103bc:	mov	w9, #0x3                   	// #3
  4103c0:	csel	w1, w9, w8, eq  // eq = none
  4103c4:	add	x6, x29, #0x18
  4103c8:	mov	x4, x21
  4103cc:	mov	x5, x20
  4103d0:	mov	x22, x0
  4103d4:	bl	47c448 <_obstack_memory_used@@Base+0x744>
  4103d8:	cbnz	x0, 410444 <feof@plt+0xcba4>
  4103dc:	add	x2, x29, #0x1c
  4103e0:	mov	w1, #0x1                   	// #1
  4103e4:	mov	x0, x22
  4103e8:	bl	47c72c <_obstack_memory_used@@Base+0xa28>
  4103ec:	cbz	w0, 41040c <feof@plt+0xcb6c>
  4103f0:	ldrb	w8, [x29, #29]
  4103f4:	cmp	w8, #0x0
  4103f8:	cset	w9, eq  // eq = none
  4103fc:	cmp	w8, #0x4
  410400:	mov	w8, #0x2                   	// #2
  410404:	csel	w19, w8, w9, eq  // eq = none
  410408:	b	410410 <feof@plt+0xcb70>
  41040c:	mov	w19, wzr
  410410:	mov	x0, x22
  410414:	bl	47c854 <_obstack_memory_used@@Base+0xb50>
  410418:	mov	w0, w19
  41041c:	ldp	x20, x19, [sp, #48]
  410420:	ldp	x22, x21, [sp, #32]
  410424:	ldr	x23, [sp, #16]
  410428:	ldp	x29, x30, [sp], #64
  41042c:	ret
  410430:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  410434:	ldr	w0, [x8, #400]
  410438:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  41043c:	add	x1, x1, #0x56f
  410440:	bl	42c008 <feof@plt+0x28768>
  410444:	ldr	w21, [x29, #24]
  410448:	mov	x20, x0
  41044c:	bl	4035c0 <__errno_location@plt>
  410450:	str	w21, [x0]
  410454:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  410458:	ldr	w0, [x8, #400]
  41045c:	ldr	w8, [x29, #24]
  410460:	ldr	x2, [x19]
  410464:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x32fc>
  410468:	adrp	x10, 47f000 <_obstack_memory_used@@Base+0x32fc>
  41046c:	add	x9, x9, #0x583
  410470:	add	x10, x10, #0x59e
  410474:	cmp	w8, #0x0
  410478:	csel	x1, x10, x9, eq  // eq = none
  41047c:	mov	x3, x20
  410480:	bl	42c008 <feof@plt+0x28768>
  410484:	sub	sp, sp, #0x160
  410488:	stp	x29, x30, [sp, #256]
  41048c:	str	x28, [sp, #272]
  410490:	stp	x26, x25, [sp, #288]
  410494:	stp	x24, x23, [sp, #304]
  410498:	stp	x22, x21, [sp, #320]
  41049c:	stp	x20, x19, [sp, #336]
  4104a0:	add	x29, sp, #0x100
  4104a4:	mov	x20, x0
  4104a8:	mov	w0, #0x2000                	// #8192
  4104ac:	mov	x21, x1
  4104b0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4104b4:	mov	x19, x0
  4104b8:	mov	x0, x20
  4104bc:	mov	w1, wzr
  4104c0:	bl	403130 <open@plt>
  4104c4:	mov	w20, w0
  4104c8:	mov	x0, x21
  4104cc:	mov	w1, wzr
  4104d0:	bl	403130 <open@plt>
  4104d4:	mov	w21, w0
  4104d8:	orr	w8, w0, w20
  4104dc:	tbnz	w8, #31, 410584 <feof@plt+0xcce4>
  4104e0:	add	x2, sp, #0x80
  4104e4:	mov	w0, wzr
  4104e8:	mov	w1, w20
  4104ec:	bl	402f80 <__fxstat@plt>
  4104f0:	tbnz	w0, #31, 410584 <feof@plt+0xcce4>
  4104f4:	mov	x2, sp
  4104f8:	mov	w0, wzr
  4104fc:	mov	w1, w21
  410500:	bl	402f80 <__fxstat@plt>
  410504:	tbnz	w0, #31, 410584 <feof@plt+0xcce4>
  410508:	ldr	x25, [sp, #176]
  41050c:	ldr	x8, [sp, #48]
  410510:	cmp	x25, x8
  410514:	b.ne	410584 <feof@plt+0xcce4>  // b.any
  410518:	cbz	x25, 4105c4 <feof@plt+0xcd24>
  41051c:	add	x22, x19, #0x1, lsl #12
  410520:	mov	w26, #0x1000                	// #4096
  410524:	cmp	w25, #0x1, lsl #12
  410528:	csel	x23, x26, x25, gt
  41052c:	mov	w0, w20
  410530:	mov	x1, x19
  410534:	mov	x2, x23
  410538:	bl	4032c0 <read@plt>
  41053c:	cmp	x0, w23, sxtw
  410540:	b.ne	410584 <feof@plt+0xcce4>  // b.any
  410544:	mov	x24, x0
  410548:	mov	w0, w21
  41054c:	mov	x1, x22
  410550:	mov	x2, x23
  410554:	bl	4032c0 <read@plt>
  410558:	cmp	x0, x24
  41055c:	b.ne	410584 <feof@plt+0xcce4>  // b.any
  410560:	mov	x0, x19
  410564:	mov	x1, x22
  410568:	mov	x2, x23
  41056c:	bl	403840 <bcmp@plt>
  410570:	cbnz	w0, 410584 <feof@plt+0xcce4>
  410574:	sub	x25, x25, x23
  410578:	mov	w23, #0x1                   	// #1
  41057c:	cbnz	x25, 410524 <feof@plt+0xcc84>
  410580:	b	410588 <feof@plt+0xcce8>
  410584:	mov	w23, wzr
  410588:	mov	x0, x19
  41058c:	bl	4031d0 <free@plt>
  410590:	mov	w0, w20
  410594:	bl	403630 <close@plt>
  410598:	mov	w0, w21
  41059c:	bl	403630 <close@plt>
  4105a0:	mov	w0, w23
  4105a4:	ldp	x20, x19, [sp, #336]
  4105a8:	ldp	x22, x21, [sp, #320]
  4105ac:	ldp	x24, x23, [sp, #304]
  4105b0:	ldp	x26, x25, [sp, #288]
  4105b4:	ldr	x28, [sp, #272]
  4105b8:	ldp	x29, x30, [sp, #256]
  4105bc:	add	sp, sp, #0x160
  4105c0:	ret
  4105c4:	mov	w23, #0x1                   	// #1
  4105c8:	b	410588 <feof@plt+0xcce8>
  4105cc:	sub	sp, sp, #0x90
  4105d0:	stp	x29, x30, [sp, #48]
  4105d4:	stp	x28, x27, [sp, #64]
  4105d8:	stp	x26, x25, [sp, #80]
  4105dc:	stp	x24, x23, [sp, #96]
  4105e0:	stp	x22, x21, [sp, #112]
  4105e4:	stp	x20, x19, [sp, #128]
  4105e8:	add	x29, sp, #0x30
  4105ec:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4105f0:	ldrb	w8, [x27, #1988]
  4105f4:	cmp	w8, #0x1
  4105f8:	b.ne	410e80 <feof@plt+0xd5e0>  // b.any
  4105fc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410600:	add	x8, x8, #0x508
  410604:	ldp	x8, x9, [x8]
  410608:	cmp	x9, x8
  41060c:	b.ne	410628 <feof@plt+0xcd88>  // b.any
  410610:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410614:	add	x19, x19, #0x4f0
  410618:	mov	w1, #0x1                   	// #1
  41061c:	mov	x0, x19
  410620:	bl	47bae8 <_obstack_newchunk@@Base>
  410624:	ldr	x8, [x19, #24]
  410628:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41062c:	add	x9, x8, #0x1
  410630:	add	x10, x10, #0x500
  410634:	str	x9, [x10, #8]
  410638:	strb	wzr, [x8]
  41063c:	ldp	x20, x8, [x10]
  410640:	cmp	x8, x20
  410644:	b.ne	410658 <feof@plt+0xcdb8>  // b.any
  410648:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41064c:	ldrb	w10, [x9, #1344]
  410650:	orr	w10, w10, #0x2
  410654:	strb	w10, [x9, #1344]
  410658:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41065c:	add	x9, x9, #0x4f8
  410660:	ldr	x10, [x9, #40]
  410664:	ldr	x11, [x9]
  410668:	ldr	x12, [x9, #24]
  41066c:	adrp	x13, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410670:	ldrb	w13, [x13, #2000]
  410674:	add	x8, x10, x8
  410678:	bic	x8, x8, x10
  41067c:	sub	x14, x12, x11
  410680:	sub	x10, x8, x11
  410684:	cmp	x10, x14
  410688:	csel	x8, x12, x8, hi  // hi = pmore
  41068c:	cmp	w13, #0x1
  410690:	stp	x8, x8, [x9, #8]
  410694:	b.ne	410714 <feof@plt+0xce74>  // b.any
  410698:	ldrb	w8, [x20]
  41069c:	cmp	w8, #0x2f
  4106a0:	b.ne	4106bc <feof@plt+0xce1c>  // b.any
  4106a4:	mov	w1, #0x4                   	// #4
  4106a8:	mov	x0, x20
  4106ac:	bl	403290 <access@plt>
  4106b0:	cbz	w0, 410704 <feof@plt+0xce64>
  4106b4:	mov	x0, xzr
  4106b8:	b	41070c <feof@plt+0xce6c>
  4106bc:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4106c0:	add	x8, x8, #0x23b
  4106c4:	mov	x0, x20
  4106c8:	stp	x20, x8, [sp, #16]
  4106cc:	bl	4030b0 <strlen@plt>
  4106d0:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  4106d4:	ldr	d0, [x8, #1632]
  4106d8:	str	w0, [sp, #32]
  4106dc:	sxtw	x2, w0
  4106e0:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4106e4:	adrp	x3, 412000 <feof@plt+0xe760>
  4106e8:	add	x0, x0, #0x4b8
  4106ec:	add	x3, x3, #0xab8
  4106f0:	add	x4, sp, #0x10
  4106f4:	mov	w1, #0x1                   	// #1
  4106f8:	stur	d0, [sp, #36]
  4106fc:	bl	4126ac <feof@plt+0xee0c>
  410700:	b	41070c <feof@plt+0xce6c>
  410704:	mov	x0, x20
  410708:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  41070c:	cmp	x0, #0x0
  410710:	csel	x20, x20, x0, eq  // eq = none
  410714:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410718:	ldrb	w8, [x8, #2004]
  41071c:	cmp	w8, #0x1
  410720:	b.ne	410764 <feof@plt+0xcec4>  // b.any
  410724:	ldrb	w8, [x20]
  410728:	cmp	w8, #0x2f
  41072c:	b.ne	41076c <feof@plt+0xcecc>  // b.any
  410730:	mov	w1, #0x4                   	// #4
  410734:	mov	x0, x20
  410738:	bl	403290 <access@plt>
  41073c:	cbnz	w0, 410750 <feof@plt+0xceb0>
  410740:	mov	x0, x20
  410744:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  410748:	mov	x19, x0
  41074c:	cbnz	x0, 4107b8 <feof@plt+0xcf18>
  410750:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  410754:	add	x0, x0, #0x721
  410758:	mov	x1, x20
  41075c:	bl	42b940 <feof@plt+0x280a0>
  410760:	b	410e80 <feof@plt+0xd5e0>
  410764:	mov	x19, x20
  410768:	b	410ab4 <feof@plt+0xd214>
  41076c:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  410770:	add	x8, x8, #0x23b
  410774:	mov	x0, x20
  410778:	stp	x20, x8, [sp, #16]
  41077c:	bl	4030b0 <strlen@plt>
  410780:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  410784:	ldr	d0, [x8, #1632]
  410788:	str	w0, [sp, #32]
  41078c:	sxtw	x2, w0
  410790:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  410794:	adrp	x3, 412000 <feof@plt+0xe760>
  410798:	add	x0, x0, #0x4b8
  41079c:	add	x3, x3, #0xab8
  4107a0:	add	x4, sp, #0x10
  4107a4:	mov	w1, #0x1                   	// #1
  4107a8:	stur	d0, [sp, #36]
  4107ac:	bl	4126ac <feof@plt+0xee0c>
  4107b0:	mov	x19, x0
  4107b4:	cbz	x0, 410750 <feof@plt+0xceb0>
  4107b8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4107bc:	ldrb	w8, [x8, #2032]
  4107c0:	cmp	w8, #0x1
  4107c4:	b.ne	410818 <feof@plt+0xcf78>  // b.any
  4107c8:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4107cc:	ldr	x22, [x24, #2040]
  4107d0:	cbz	x22, 410868 <feof@plt+0xcfc8>
  4107d4:	ldp	w8, w9, [x22]
  4107d8:	and	w0, w8, #0x7fffffff
  4107dc:	cmp	w0, w9
  4107e0:	b.ne	4109f8 <feof@plt+0xd158>  // b.any
  4107e4:	tbnz	w8, #31, 410888 <feof@plt+0xcfe8>
  4107e8:	add	w1, w0, #0x1
  4107ec:	bl	425fbc <feof@plt+0x2271c>
  4107f0:	ldr	x8, [x24, #2040]
  4107f4:	mov	w9, w0
  4107f8:	lsl	x9, x9, #3
  4107fc:	mov	w20, w0
  410800:	add	x1, x9, #0x8
  410804:	mov	w21, wzr
  410808:	cbz	x8, 410ec0 <feof@plt+0xd620>
  41080c:	ldr	w26, [x8, #4]
  410810:	mov	w25, wzr
  410814:	b	4108b8 <feof@plt+0xd018>
  410818:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41081c:	ldr	x22, [x24, #1184]
  410820:	cbz	x22, 410878 <feof@plt+0xcfd8>
  410824:	ldp	w8, w9, [x22]
  410828:	and	w0, w8, #0x7fffffff
  41082c:	cmp	w0, w9
  410830:	b.ne	410a8c <feof@plt+0xd1ec>  // b.any
  410834:	tbnz	w8, #31, 4108fc <feof@plt+0xd05c>
  410838:	add	w1, w0, #0x1
  41083c:	bl	425fbc <feof@plt+0x2271c>
  410840:	ldr	x8, [x24, #1184]
  410844:	mov	w9, w0
  410848:	lsl	x9, x9, #3
  41084c:	mov	w20, w0
  410850:	add	x1, x9, #0x8
  410854:	mov	w21, wzr
  410858:	cbz	x8, 410ecc <feof@plt+0xd62c>
  41085c:	ldr	w26, [x8, #4]
  410860:	mov	w25, wzr
  410864:	b	41092c <feof@plt+0xd08c>
  410868:	mov	w21, wzr
  41086c:	mov	w25, wzr
  410870:	mov	w20, #0x4                   	// #4
  410874:	b	4108a4 <feof@plt+0xd004>
  410878:	mov	w21, wzr
  41087c:	mov	w25, wzr
  410880:	mov	w20, #0x4                   	// #4
  410884:	b	410918 <feof@plt+0xd078>
  410888:	str	xzr, [x24, #2040]
  41088c:	ldr	w21, [x22, #4]
  410890:	mov	w8, #0x4                   	// #4
  410894:	mov	w25, #0x1                   	// #1
  410898:	add	w9, w21, #0x1
  41089c:	cmp	w9, #0x4
  4108a0:	csinc	w20, w8, w21, ls  // ls = plast
  4108a4:	mov	w9, w20
  4108a8:	lsl	x9, x9, #3
  4108ac:	mov	x8, xzr
  4108b0:	mov	w26, wzr
  4108b4:	add	x1, x9, #0x8
  4108b8:	mov	x0, x8
  4108bc:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4108c0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4108c4:	add	x8, x8, #0x7f8
  4108c8:	and	w9, w20, #0x7fffffff
  4108cc:	str	x0, [x8]
  4108d0:	stp	w9, w26, [x0]
  4108d4:	cbz	w25, 410a94 <feof@plt+0xd1f4>
  4108d8:	ldr	x8, [x24, #2040]
  4108dc:	cbz	w21, 4109f4 <feof@plt+0xd154>
  4108e0:	sub	w12, w21, #0x1
  4108e4:	add	x9, x22, #0x8
  4108e8:	cmp	w12, #0x3
  4108ec:	add	x10, x8, #0x8
  4108f0:	b.cs	410970 <feof@plt+0xd0d0>  // b.hs, b.nlast
  4108f4:	mov	w11, w21
  4108f8:	b	4109e4 <feof@plt+0xd144>
  4108fc:	str	xzr, [x24, #1184]
  410900:	ldr	w21, [x22, #4]
  410904:	mov	w8, #0x4                   	// #4
  410908:	mov	w25, #0x1                   	// #1
  41090c:	add	w9, w21, #0x1
  410910:	cmp	w9, #0x4
  410914:	csinc	w20, w8, w21, ls  // ls = plast
  410918:	mov	w9, w20
  41091c:	lsl	x9, x9, #3
  410920:	mov	x8, xzr
  410924:	mov	w26, wzr
  410928:	add	x1, x9, #0x8
  41092c:	mov	x0, x8
  410930:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  410934:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410938:	add	x8, x8, #0x4a0
  41093c:	and	w9, w20, #0x7fffffff
  410940:	str	x0, [x8]
  410944:	stp	w9, w26, [x0]
  410948:	cbz	w25, 410a94 <feof@plt+0xd1f4>
  41094c:	ldr	x8, [x24, #1184]
  410950:	cbz	w21, 410a88 <feof@plt+0xd1e8>
  410954:	sub	w12, w21, #0x1
  410958:	add	x9, x22, #0x8
  41095c:	cmp	w12, #0x3
  410960:	add	x10, x8, #0x8
  410964:	b.cs	410a04 <feof@plt+0xd164>  // b.hs, b.nlast
  410968:	mov	w11, w21
  41096c:	b	410a78 <feof@plt+0xd1d8>
  410970:	lsl	x11, x12, #3
  410974:	add	x13, x22, x11
  410978:	add	x13, x13, #0x10
  41097c:	cmp	x10, x13
  410980:	b.cs	410998 <feof@plt+0xd0f8>  // b.hs, b.nlast
  410984:	add	x11, x8, x11
  410988:	add	x11, x11, #0x10
  41098c:	cmp	x9, x11
  410990:	mov	w11, w21
  410994:	b.cc	4109e4 <feof@plt+0xd144>  // b.lo, b.ul, b.last
  410998:	add	x12, x12, #0x1
  41099c:	and	x13, x12, #0x1fffffffc
  4109a0:	lsl	x9, x13, #3
  4109a4:	add	x10, x22, x9
  4109a8:	add	x15, x8, x9
  4109ac:	add	x14, x8, #0x18
  4109b0:	sub	w11, w21, w13
  4109b4:	add	x9, x10, #0x8
  4109b8:	add	x10, x15, #0x8
  4109bc:	add	x15, x22, #0x18
  4109c0:	mov	x16, x13
  4109c4:	ldp	q0, q1, [x15, #-16]
  4109c8:	subs	x16, x16, #0x4
  4109cc:	add	x15, x15, #0x20
  4109d0:	stp	q0, q1, [x14, #-16]
  4109d4:	add	x14, x14, #0x20
  4109d8:	b.ne	4109c4 <feof@plt+0xd124>  // b.any
  4109dc:	cmp	x12, x13
  4109e0:	b.eq	4109f4 <feof@plt+0xd154>  // b.none
  4109e4:	ldr	x12, [x9], #8
  4109e8:	subs	w11, w11, #0x1
  4109ec:	str	x12, [x10], #8
  4109f0:	b.ne	4109e4 <feof@plt+0xd144>  // b.any
  4109f4:	str	w21, [x8, #4]
  4109f8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4109fc:	add	x8, x8, #0x7f8
  410a00:	b	410a94 <feof@plt+0xd1f4>
  410a04:	lsl	x11, x12, #3
  410a08:	add	x13, x22, x11
  410a0c:	add	x13, x13, #0x10
  410a10:	cmp	x10, x13
  410a14:	b.cs	410a2c <feof@plt+0xd18c>  // b.hs, b.nlast
  410a18:	add	x11, x8, x11
  410a1c:	add	x11, x11, #0x10
  410a20:	cmp	x9, x11
  410a24:	mov	w11, w21
  410a28:	b.cc	410a78 <feof@plt+0xd1d8>  // b.lo, b.ul, b.last
  410a2c:	add	x12, x12, #0x1
  410a30:	and	x13, x12, #0x1fffffffc
  410a34:	lsl	x9, x13, #3
  410a38:	add	x10, x22, x9
  410a3c:	add	x15, x8, x9
  410a40:	add	x14, x8, #0x18
  410a44:	sub	w11, w21, w13
  410a48:	add	x9, x10, #0x8
  410a4c:	add	x10, x15, #0x8
  410a50:	add	x15, x22, #0x18
  410a54:	mov	x16, x13
  410a58:	ldp	q0, q1, [x15, #-16]
  410a5c:	subs	x16, x16, #0x4
  410a60:	add	x15, x15, #0x20
  410a64:	stp	q0, q1, [x14, #-16]
  410a68:	add	x14, x14, #0x20
  410a6c:	b.ne	410a58 <feof@plt+0xd1b8>  // b.any
  410a70:	cmp	x12, x13
  410a74:	b.eq	410a88 <feof@plt+0xd1e8>  // b.none
  410a78:	ldr	x12, [x9], #8
  410a7c:	subs	w11, w11, #0x1
  410a80:	str	x12, [x10], #8
  410a84:	b.ne	410a78 <feof@plt+0xd1d8>  // b.any
  410a88:	str	w21, [x8, #4]
  410a8c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410a90:	add	x8, x8, #0x4a0
  410a94:	ldr	x8, [x8]
  410a98:	adrp	x10, 47f000 <_obstack_memory_used@@Base+0x32fc>
  410a9c:	add	x10, x10, #0x768
  410aa0:	ldr	w9, [x8, #4]
  410aa4:	add	w11, w9, #0x1
  410aa8:	add	x9, x8, x9, lsl #3
  410aac:	str	w11, [x8, #4]
  410ab0:	str	x10, [x9, #8]
  410ab4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410ab8:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410abc:	ldr	w25, [x8, #1992]
  410ac0:	ldrb	w8, [x9, #2032]
  410ac4:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410ac8:	ldrb	w21, [x22, #1996]
  410acc:	cmp	w8, #0x1
  410ad0:	b.ne	410b30 <feof@plt+0xd290>  // b.any
  410ad4:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410ad8:	ldr	x26, [x24, #2040]
  410adc:	cbz	x26, 410b8c <feof@plt+0xd2ec>
  410ae0:	ldp	w8, w9, [x26]
  410ae4:	and	w0, w8, #0x7fffffff
  410ae8:	cmp	w0, w9
  410aec:	b.ne	410bc4 <feof@plt+0xd324>  // b.any
  410af0:	mov	w20, w21
  410af4:	mov	x21, x19
  410af8:	mov	x19, x22
  410afc:	tbnz	w8, #31, 410bd0 <feof@plt+0xd330>
  410b00:	add	w1, w0, #0x1
  410b04:	bl	425fbc <feof@plt+0x2271c>
  410b08:	ldr	x8, [x24, #2040]
  410b0c:	mov	w9, w0
  410b10:	lsl	x9, x9, #3
  410b14:	mov	w22, w0
  410b18:	add	x1, x9, #0x8
  410b1c:	cbz	x8, 410ea0 <feof@plt+0xd600>
  410b20:	ldr	w23, [x8, #4]
  410b24:	mov	w28, wzr
  410b28:	str	wzr, [sp, #12]
  410b2c:	b	410c04 <feof@plt+0xd364>
  410b30:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410b34:	ldr	x26, [x24, #1184]
  410b38:	cbz	x26, 410ba8 <feof@plt+0xd308>
  410b3c:	ldp	w8, w9, [x26]
  410b40:	and	w0, w8, #0x7fffffff
  410b44:	cmp	w0, w9
  410b48:	b.ne	410e04 <feof@plt+0xd564>  // b.any
  410b4c:	mov	w20, w25
  410b50:	mov	x25, x19
  410b54:	mov	x19, x22
  410b58:	tbnz	w8, #31, 410c5c <feof@plt+0xd3bc>
  410b5c:	add	w1, w0, #0x1
  410b60:	bl	425fbc <feof@plt+0x2271c>
  410b64:	ldr	x8, [x24, #1184]
  410b68:	mov	w9, w0
  410b6c:	lsl	x9, x9, #3
  410b70:	mov	w22, w0
  410b74:	add	x1, x9, #0x8
  410b78:	cbz	x8, 410eb0 <feof@plt+0xd610>
  410b7c:	ldr	w23, [x8, #4]
  410b80:	mov	w28, wzr
  410b84:	str	wzr, [sp, #12]
  410b88:	b	410c90 <feof@plt+0xd3f0>
  410b8c:	mov	w20, w21
  410b90:	mov	x21, x19
  410b94:	mov	x19, x22
  410b98:	str	wzr, [sp, #12]
  410b9c:	mov	w28, wzr
  410ba0:	mov	w22, #0x4                   	// #4
  410ba4:	b	410bf0 <feof@plt+0xd350>
  410ba8:	mov	w20, w25
  410bac:	mov	x25, x19
  410bb0:	mov	x19, x22
  410bb4:	str	wzr, [sp, #12]
  410bb8:	mov	w28, wzr
  410bbc:	mov	w22, #0x4                   	// #4
  410bc0:	b	410c7c <feof@plt+0xd3dc>
  410bc4:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410bc8:	add	x24, x24, #0x7f8
  410bcc:	b	410e0c <feof@plt+0xd56c>
  410bd0:	str	xzr, [x24, #2040]
  410bd4:	ldr	w10, [x26, #4]
  410bd8:	mov	w8, #0x4                   	// #4
  410bdc:	mov	w28, #0x1                   	// #1
  410be0:	add	w9, w10, #0x1
  410be4:	cmp	w9, #0x4
  410be8:	csinc	w22, w8, w10, ls  // ls = plast
  410bec:	str	w10, [sp, #12]
  410bf0:	mov	w9, w22
  410bf4:	lsl	x9, x9, #3
  410bf8:	mov	x8, xzr
  410bfc:	mov	w23, wzr
  410c00:	add	x1, x9, #0x8
  410c04:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410c08:	mov	x0, x8
  410c0c:	add	x24, x24, #0x7f8
  410c10:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  410c14:	and	w8, w22, #0x7fffffff
  410c18:	mov	x22, x19
  410c1c:	mov	x19, x21
  410c20:	mov	w21, w20
  410c24:	str	x0, [x24]
  410c28:	stp	w8, w23, [x0]
  410c2c:	cbz	w28, 410e0c <feof@plt+0xd56c>
  410c30:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410c34:	ldr	x8, [x8, #2040]
  410c38:	ldr	w17, [sp, #12]
  410c3c:	cbz	w17, 410d6c <feof@plt+0xd4cc>
  410c40:	sub	w12, w17, #0x1
  410c44:	add	x9, x26, #0x8
  410c48:	cmp	w12, #0x3
  410c4c:	add	x10, x8, #0x8
  410c50:	b.cs	410ce8 <feof@plt+0xd448>  // b.hs, b.nlast
  410c54:	mov	w11, w17
  410c58:	b	410d5c <feof@plt+0xd4bc>
  410c5c:	str	xzr, [x24, #1184]
  410c60:	ldr	w10, [x26, #4]
  410c64:	mov	w8, #0x4                   	// #4
  410c68:	mov	w28, #0x1                   	// #1
  410c6c:	add	w9, w10, #0x1
  410c70:	cmp	w9, #0x4
  410c74:	csinc	w22, w8, w10, ls  // ls = plast
  410c78:	str	w10, [sp, #12]
  410c7c:	mov	w9, w22
  410c80:	lsl	x9, x9, #3
  410c84:	mov	x8, xzr
  410c88:	mov	w23, wzr
  410c8c:	add	x1, x9, #0x8
  410c90:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410c94:	mov	x0, x8
  410c98:	add	x24, x24, #0x4a0
  410c9c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  410ca0:	and	w8, w22, #0x7fffffff
  410ca4:	mov	x22, x19
  410ca8:	mov	x19, x25
  410cac:	mov	w25, w20
  410cb0:	str	x0, [x24]
  410cb4:	stp	w8, w23, [x0]
  410cb8:	cbz	w28, 410e0c <feof@plt+0xd56c>
  410cbc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410cc0:	ldr	x8, [x8, #1184]
  410cc4:	ldr	w17, [sp, #12]
  410cc8:	cbz	w17, 410e00 <feof@plt+0xd560>
  410ccc:	sub	w12, w17, #0x1
  410cd0:	add	x9, x26, #0x8
  410cd4:	cmp	w12, #0x3
  410cd8:	add	x10, x8, #0x8
  410cdc:	b.cs	410d7c <feof@plt+0xd4dc>  // b.hs, b.nlast
  410ce0:	mov	w11, w17
  410ce4:	b	410df0 <feof@plt+0xd550>
  410ce8:	lsl	x11, x12, #3
  410cec:	add	x13, x26, x11
  410cf0:	add	x13, x13, #0x10
  410cf4:	cmp	x10, x13
  410cf8:	b.cs	410d10 <feof@plt+0xd470>  // b.hs, b.nlast
  410cfc:	add	x11, x8, x11
  410d00:	add	x11, x11, #0x10
  410d04:	cmp	x9, x11
  410d08:	mov	w11, w17
  410d0c:	b.cc	410d5c <feof@plt+0xd4bc>  // b.lo, b.ul, b.last
  410d10:	add	x12, x12, #0x1
  410d14:	and	x13, x12, #0x1fffffffc
  410d18:	lsl	x9, x13, #3
  410d1c:	add	x10, x26, x9
  410d20:	add	x15, x8, x9
  410d24:	add	x14, x8, #0x18
  410d28:	sub	w11, w17, w13
  410d2c:	add	x9, x10, #0x8
  410d30:	add	x10, x15, #0x8
  410d34:	add	x15, x26, #0x18
  410d38:	mov	x16, x13
  410d3c:	ldp	q0, q1, [x15, #-16]
  410d40:	subs	x16, x16, #0x4
  410d44:	add	x15, x15, #0x20
  410d48:	stp	q0, q1, [x14, #-16]
  410d4c:	add	x14, x14, #0x20
  410d50:	b.ne	410d3c <feof@plt+0xd49c>  // b.any
  410d54:	cmp	x12, x13
  410d58:	b.eq	410d6c <feof@plt+0xd4cc>  // b.none
  410d5c:	ldr	x12, [x9], #8
  410d60:	subs	w11, w11, #0x1
  410d64:	str	x12, [x10], #8
  410d68:	b.ne	410d5c <feof@plt+0xd4bc>  // b.any
  410d6c:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410d70:	str	w17, [x8, #4]
  410d74:	add	x24, x24, #0x7f8
  410d78:	b	410e0c <feof@plt+0xd56c>
  410d7c:	lsl	x11, x12, #3
  410d80:	add	x13, x26, x11
  410d84:	add	x13, x13, #0x10
  410d88:	cmp	x10, x13
  410d8c:	b.cs	410da4 <feof@plt+0xd504>  // b.hs, b.nlast
  410d90:	add	x11, x8, x11
  410d94:	add	x11, x11, #0x10
  410d98:	cmp	x9, x11
  410d9c:	mov	w11, w17
  410da0:	b.cc	410df0 <feof@plt+0xd550>  // b.lo, b.ul, b.last
  410da4:	add	x12, x12, #0x1
  410da8:	and	x13, x12, #0x1fffffffc
  410dac:	lsl	x9, x13, #3
  410db0:	add	x10, x26, x9
  410db4:	add	x15, x8, x9
  410db8:	add	x14, x8, #0x18
  410dbc:	sub	w11, w17, w13
  410dc0:	add	x9, x10, #0x8
  410dc4:	add	x10, x15, #0x8
  410dc8:	add	x15, x26, #0x18
  410dcc:	mov	x16, x13
  410dd0:	ldp	q0, q1, [x15, #-16]
  410dd4:	subs	x16, x16, #0x4
  410dd8:	add	x15, x15, #0x20
  410ddc:	stp	q0, q1, [x14, #-16]
  410de0:	add	x14, x14, #0x20
  410de4:	b.ne	410dd0 <feof@plt+0xd530>  // b.any
  410de8:	cmp	x12, x13
  410dec:	b.eq	410e00 <feof@plt+0xd560>  // b.none
  410df0:	ldr	x12, [x9], #8
  410df4:	subs	w11, w11, #0x1
  410df8:	str	x12, [x10], #8
  410dfc:	b.ne	410df0 <feof@plt+0xd550>  // b.any
  410e00:	str	w17, [x8, #4]
  410e04:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410e08:	add	x24, x24, #0x4a0
  410e0c:	ldr	x8, [x24]
  410e10:	orr	w10, w25, w21
  410e14:	ldr	w9, [x8, #4]
  410e18:	add	w11, w9, #0x1
  410e1c:	add	x9, x8, x9, lsl #3
  410e20:	str	w11, [x8, #4]
  410e24:	str	x19, [x9, #8]
  410e28:	cbz	w10, 410e5c <feof@plt+0xd5bc>
  410e2c:	ldrb	w8, [x19]
  410e30:	mov	x0, x19
  410e34:	cmp	w8, #0x2d
  410e38:	b.ne	410e50 <feof@plt+0xd5b0>  // b.any
  410e3c:	mov	w1, #0x3d                  	// #61
  410e40:	mov	x0, x19
  410e44:	bl	4035a0 <strrchr@plt>
  410e48:	cmp	x0, #0x0
  410e4c:	csinc	x0, x19, x0, eq  // eq = none
  410e50:	mov	w1, w25
  410e54:	mov	w2, w21
  410e58:	bl	4047e0 <feof@plt+0xf40>
  410e5c:	ldrb	w8, [x22, #1996]
  410e60:	cmp	w8, #0x1
  410e64:	b.ne	410e7c <feof@plt+0xd5dc>  // b.any
  410e68:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410e6c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410e70:	ldr	x8, [x8, #1168]
  410e74:	ldrsw	x9, [x9, #1800]
  410e78:	str	x19, [x8, x9, lsl #3]
  410e7c:	strb	wzr, [x27, #1988]
  410e80:	ldp	x20, x19, [sp, #128]
  410e84:	ldp	x22, x21, [sp, #112]
  410e88:	ldp	x24, x23, [sp, #96]
  410e8c:	ldp	x26, x25, [sp, #80]
  410e90:	ldp	x28, x27, [sp, #64]
  410e94:	ldp	x29, x30, [sp, #48]
  410e98:	add	sp, sp, #0x90
  410e9c:	ret
  410ea0:	str	wzr, [sp, #12]
  410ea4:	mov	w28, wzr
  410ea8:	mov	w23, wzr
  410eac:	b	410c04 <feof@plt+0xd364>
  410eb0:	str	wzr, [sp, #12]
  410eb4:	mov	w28, wzr
  410eb8:	mov	w23, wzr
  410ebc:	b	410c90 <feof@plt+0xd3f0>
  410ec0:	mov	w25, wzr
  410ec4:	mov	w26, wzr
  410ec8:	b	4108b8 <feof@plt+0xd018>
  410ecc:	mov	w25, wzr
  410ed0:	mov	w26, wzr
  410ed4:	b	41092c <feof@plt+0xd08c>
  410ed8:	stp	x29, x30, [sp, #-96]!
  410edc:	str	x27, [sp, #16]
  410ee0:	stp	x26, x25, [sp, #32]
  410ee4:	stp	x24, x23, [sp, #48]
  410ee8:	stp	x22, x21, [sp, #64]
  410eec:	stp	x20, x19, [sp, #80]
  410ef0:	mov	x29, sp
  410ef4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410ef8:	ldrsw	x9, [x8, #1576]
  410efc:	mov	x19, x2
  410f00:	mov	x21, x1
  410f04:	mov	x22, x0
  410f08:	and	w24, w3, #0x1
  410f0c:	and	w23, w4, #0x1
  410f10:	adrp	x25, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410f14:	cbz	w9, 410f4c <feof@plt+0xd6ac>
  410f18:	ldr	w10, [x25, #1560]
  410f1c:	cmp	w9, w10
  410f20:	b.ne	410f6c <feof@plt+0xd6cc>  // b.any
  410f24:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410f28:	ldr	x0, [x26, #1592]
  410f2c:	lsl	w10, w9, #1
  410f30:	str	w10, [x8, #1576]
  410f34:	add	x8, x9, x9, lsl #1
  410f38:	lsl	x1, x8, #4
  410f3c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  410f40:	mov	x20, x0
  410f44:	str	x0, [x26, #1592]
  410f48:	b	410f74 <feof@plt+0xd6d4>
  410f4c:	mov	w9, #0x10                  	// #16
  410f50:	mov	w0, #0x180                 	// #384
  410f54:	str	w9, [x8, #1576]
  410f58:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  410f5c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410f60:	mov	x20, x0
  410f64:	str	x0, [x8, #1592]
  410f68:	b	410f74 <feof@plt+0xd6d4>
  410f6c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410f70:	ldr	x20, [x8, #1592]
  410f74:	ldr	w26, [x25, #1560]
  410f78:	mov	w27, #0x18                  	// #24
  410f7c:	add	x8, x22, #0x1
  410f80:	smull	x9, w26, w27
  410f84:	str	x8, [x20, x9]
  410f88:	cbz	x21, 410fc8 <feof@plt+0xd728>
  410f8c:	lsl	x21, x21, #3
  410f90:	add	x0, x21, #0x8
  410f94:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  410f98:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  410f9c:	ldr	w26, [x25, #1560]
  410fa0:	ldr	x20, [x8, #1592]
  410fa4:	mov	x1, x19
  410fa8:	mov	x2, x21
  410fac:	sxtw	x22, w26
  410fb0:	smaddl	x27, w26, w27, x20
  410fb4:	str	x0, [x27, #8]
  410fb8:	bl	402fc0 <memcpy@plt>
  410fbc:	ldr	x8, [x27, #8]
  410fc0:	str	xzr, [x8, x21]
  410fc4:	b	410fd8 <feof@plt+0xd738>
  410fc8:	sxtw	x22, w26
  410fcc:	mov	w8, #0x18                  	// #24
  410fd0:	madd	x8, x22, x8, x20
  410fd4:	str	xzr, [x8, #8]
  410fd8:	mov	w8, #0x18                  	// #24
  410fdc:	madd	x8, x22, x8, x20
  410fe0:	add	w9, w26, #0x1
  410fe4:	str	wzr, [x8, #16]
  410fe8:	strb	w24, [x8, #21]
  410fec:	strb	w23, [x8, #20]
  410ff0:	strb	wzr, [x8, #22]
  410ff4:	str	w9, [x25, #1560]
  410ff8:	ldp	x20, x19, [sp, #80]
  410ffc:	ldp	x22, x21, [sp, #64]
  411000:	ldp	x24, x23, [sp, #48]
  411004:	ldp	x26, x25, [sp, #32]
  411008:	ldr	x27, [sp, #16]
  41100c:	ldp	x29, x30, [sp], #96
  411010:	ret
  411014:	stp	x29, x30, [sp, #-16]!
  411018:	mov	x29, sp
  41101c:	ldr	x8, [x0, #16]
  411020:	ldrb	w9, [x8, #1]
  411024:	cmp	w9, #0x57
  411028:	b.ne	411060 <feof@plt+0xd7c0>  // b.any
  41102c:	ldrb	w9, [x8, #2]
  411030:	cmp	w9, #0x6e
  411034:	b.ne	411060 <feof@plt+0xd7c0>  // b.any
  411038:	ldrb	w9, [x8, #3]
  41103c:	cmp	w9, #0x6f
  411040:	b.ne	411060 <feof@plt+0xd7c0>  // b.any
  411044:	ldrb	w8, [x8, #4]
  411048:	cmp	w8, #0x2d
  41104c:	b.ne	411060 <feof@plt+0xd7c0>  // b.any
  411050:	ldrb	w8, [x0, #80]
  411054:	tbnz	w8, #6, 411060 <feof@plt+0xd7c0>
  411058:	mov	w4, #0x1                   	// #1
  41105c:	b	411070 <feof@plt+0xd7d0>
  411060:	ldr	x8, [x0]
  411064:	cmp	x8, #0x596
  411068:	b.ne	411098 <feof@plt+0xd7f8>  // b.any
  41106c:	mov	w4, wzr
  411070:	ldr	x9, [x0, #64]
  411074:	ldr	x8, [x0, #32]
  411078:	add	x2, x0, #0x28
  41107c:	mov	w3, wzr
  411080:	sub	x1, x9, #0x1
  411084:	mov	x0, x8
  411088:	bl	410ed8 <feof@plt+0xd638>
  41108c:	mov	w0, wzr
  411090:	ldp	x29, x30, [sp], #16
  411094:	ret
  411098:	mov	w0, #0x1                   	// #1
  41109c:	ldp	x29, x30, [sp], #16
  4110a0:	ret
  4110a4:	ldr	x8, [x0]
  4110a8:	adrp	x10, 491000 <_obstack_memory_used@@Base+0x152fc>
  4110ac:	mov	w9, #0x60                  	// #96
  4110b0:	add	x10, x10, #0xcb0
  4110b4:	madd	x8, x8, x9, x10
  4110b8:	ldrb	w8, [x8, #64]
  4110bc:	tbnz	w8, #6, 4110e0 <feof@plt+0xd840>
  4110c0:	ldr	x9, [x0, #64]
  4110c4:	ldr	x8, [x0, #32]
  4110c8:	add	x2, x0, #0x28
  4110cc:	mov	w4, #0x1                   	// #1
  4110d0:	sub	x1, x9, #0x1
  4110d4:	mov	x0, x8
  4110d8:	mov	w3, wzr
  4110dc:	b	410ed8 <feof@plt+0xd638>
  4110e0:	ldr	x1, [x0, #24]
  4110e4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  4110e8:	add	x0, x0, #0x902
  4110ec:	b	42b940 <feof@plt+0x280a0>
  4110f0:	sub	sp, sp, #0x80
  4110f4:	stp	x29, x30, [sp, #32]
  4110f8:	stp	x28, x27, [sp, #48]
  4110fc:	stp	x26, x25, [sp, #64]
  411100:	stp	x24, x23, [sp, #80]
  411104:	stp	x22, x21, [sp, #96]
  411108:	stp	x20, x19, [sp, #112]
  41110c:	add	x29, sp, #0x20
  411110:	ldr	x20, [x2, #16]
  411114:	ldr	x8, [x2]
  411118:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41111c:	add	x9, x9, #0x190
  411120:	cmp	x0, x9
  411124:	str	x20, [sp]
  411128:	b.ne	411f3c <feof@plt+0xe69c>  // b.any
  41112c:	adrp	x9, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  411130:	add	x9, x9, #0xa0
  411134:	cmp	x1, x9
  411138:	b.ne	411f54 <feof@plt+0xe6b4>  // b.any
  41113c:	cbnz	w4, 411f6c <feof@plt+0xe6cc>
  411140:	cbnz	w5, 411f84 <feof@plt+0xe6e4>
  411144:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411148:	ldr	x9, [x9, #632]
  41114c:	cmp	x9, x7
  411150:	b.ne	411f9c <feof@plt+0xe6fc>  // b.any
  411154:	ldr	w1, [x2, #72]
  411158:	mov	x19, x2
  41115c:	cmp	x8, #0x28b
  411160:	mov	w3, wzr
  411164:	b.le	411194 <feof@plt+0xd8f4>
  411168:	sub	x9, x8, #0x4a0
  41116c:	cmp	x9, #0xf3
  411170:	b.hi	4112f0 <feof@plt+0xda50>  // b.pmore
  411174:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  411178:	add	x8, x8, #0x8ec
  41117c:	adr	x10, 41118c <feof@plt+0xd8ec>
  411180:	ldrh	w11, [x8, x9, lsl #1]
  411184:	add	x10, x10, x11, lsl #2
  411188:	br	x10
  41118c:	mov	w3, #0x1                   	// #1
  411190:	b	411db8 <feof@plt+0xe518>
  411194:	cmp	x8, #0x125
  411198:	b.gt	4111d8 <feof@plt+0xd938>
  41119c:	sub	x9, x8, #0x5e
  4111a0:	cmp	x9, #0x38
  4111a4:	b.hi	41121c <feof@plt+0xd97c>  // b.pmore
  4111a8:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  4111ac:	add	x8, x8, #0x84a
  4111b0:	adr	x10, 4111c0 <feof@plt+0xd920>
  4111b4:	ldrh	w11, [x8, x9, lsl #1]
  4111b8:	add	x10, x10, x11, lsl #2
  4111bc:	br	x10
  4111c0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4111c4:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4111c8:	mov	w10, #0x1                   	// #1
  4111cc:	str	x20, [x8, #1520]
  4111d0:	strb	w10, [x9, #1876]
  4111d4:	b	411dd0 <feof@plt+0xe530>
  4111d8:	cmp	x8, #0x255
  4111dc:	b.gt	41125c <feof@plt+0xd9bc>
  4111e0:	sub	x9, x8, #0x1de
  4111e4:	cmp	x9, #0x17
  4111e8:	b.hi	4112a8 <feof@plt+0xda08>  // b.pmore
  4111ec:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  4111f0:	add	x8, x8, #0x8bc
  4111f4:	adr	x10, 411204 <feof@plt+0xd964>
  4111f8:	ldrh	w11, [x8, x9, lsl #1]
  4111fc:	add	x10, x10, x11, lsl #2
  411200:	br	x10
  411204:	mov	x0, x20
  411208:	bl	4030b0 <strlen@plt>
  41120c:	mov	x1, x0
  411210:	mov	x0, x20
  411214:	bl	4121e8 <feof@plt+0xe948>
  411218:	b	411dd0 <feof@plt+0xe530>
  41121c:	cmp	x8, #0x1d
  411220:	b.hi	4114bc <feof@plt+0xdc1c>  // b.pmore
  411224:	adrp	x9, 47d000 <_obstack_memory_used@@Base+0x12fc>
  411228:	add	x9, x9, #0x80e
  41122c:	adr	x10, 41123c <feof@plt+0xd99c>
  411230:	ldrh	w11, [x9, x8, lsl #1]
  411234:	add	x10, x10, x11, lsl #2
  411238:	br	x10
  41123c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411240:	ldr	w9, [x8, #1872]
  411244:	adrp	x10, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  411248:	mov	w11, #0x1                   	// #1
  41124c:	str	w11, [x10, #120]
  411250:	add	w9, w9, #0x1
  411254:	str	w9, [x8, #1872]
  411258:	b	411dd0 <feof@plt+0xe530>
  41125c:	cmp	x8, #0x257
  411260:	b.gt	411288 <feof@plt+0xd9e8>
  411264:	cmp	x8, #0x256
  411268:	b.eq	4118d0 <feof@plt+0xe030>  // b.none
  41126c:	cmp	x8, #0x257
  411270:	b.ne	411db8 <feof@plt+0xe518>  // b.any
  411274:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411278:	mov	w9, #0x1                   	// #1
  41127c:	mov	w3, wzr
  411280:	str	w9, [x8, #1148]
  411284:	b	411db8 <feof@plt+0xe518>
  411288:	cmp	x8, #0x258
  41128c:	b.eq	4118f4 <feof@plt+0xe054>  // b.none
  411290:	cmp	x8, #0x28b
  411294:	b.ne	411db8 <feof@plt+0xe518>  // b.any
  411298:	mov	x0, x7
  41129c:	bl	429314 <feof@plt+0x25a74>
  4112a0:	mov	w3, wzr
  4112a4:	b	411db8 <feof@plt+0xe518>
  4112a8:	cmp	x8, #0x126
  4112ac:	b.eq	4118fc <feof@plt+0xe05c>  // b.none
  4112b0:	cmp	x8, #0x15b
  4112b4:	b.ne	411db8 <feof@plt+0xe518>  // b.any
  4112b8:	mov	w8, wzr
  4112bc:	mov	x19, xzr
  4112c0:	ldrb	w9, [x20, x19]
  4112c4:	cbz	w9, 4119f8 <feof@plt+0xe158>
  4112c8:	cmp	w9, #0x2c
  4112cc:	b.eq	4112d8 <feof@plt+0xda38>  // b.none
  4112d0:	add	x19, x19, #0x1
  4112d4:	b	4112c0 <feof@plt+0xda20>
  4112d8:	add	x0, x20, w8, sxtw
  4112dc:	sub	w1, w19, w8
  4112e0:	bl	412014 <feof@plt+0xe774>
  4112e4:	add	x8, x19, #0x1
  4112e8:	mov	x19, x8
  4112ec:	b	4112c0 <feof@plt+0xda20>
  4112f0:	cmp	x8, #0x28c
  4112f4:	b.eq	411bd0 <feof@plt+0xe330>  // b.none
  4112f8:	cmp	x8, #0x38f
  4112fc:	b.ne	411db8 <feof@plt+0xe518>  // b.any
  411300:	ldrb	w8, [x20]
  411304:	cmp	w8, #0x2d
  411308:	b.eq	411334 <feof@plt+0xda94>  // b.none
  41130c:	mov	w1, #0x3d                  	// #61
  411310:	mov	x0, x20
  411314:	bl	403210 <strchr@plt>
  411318:	mov	x21, x0
  41131c:	cbnz	x0, 41132c <feof@plt+0xda8c>
  411320:	mov	x0, x20
  411324:	bl	4030b0 <strlen@plt>
  411328:	add	x21, x20, x0
  41132c:	cmp	x21, x20
  411330:	b.hi	411398 <feof@plt+0xdaf8>  // b.pmore
  411334:	mov	w3, wzr
  411338:	b	411db8 <feof@plt+0xe518>
  41133c:	mov	x0, x26
  411340:	bl	4030b0 <strlen@plt>
  411344:	add	x27, x0, #0x1
  411348:	add	x8, x22, x27
  41134c:	sub	x8, x8, x20
  411350:	mov	x25, x0
  411354:	add	x1, x8, #0x1
  411358:	mov	x0, x26
  41135c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  411360:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411364:	str	x0, [x8, #1720]
  411368:	mov	w8, #0x3a                  	// #58
  41136c:	strb	w8, [x0, x25]
  411370:	add	x0, x0, x27
  411374:	mov	x1, x23
  411378:	mov	x2, x24
  41137c:	bl	402fc0 <memcpy@plt>
  411380:	mov	x0, x23
  411384:	add	x20, x22, #0x1
  411388:	bl	4031d0 <free@plt>
  41138c:	cmp	x20, x21
  411390:	mov	w3, wzr
  411394:	b.cs	411db8 <feof@plt+0xe518>  // b.hs, b.nlast
  411398:	mov	w1, #0x2c                  	// #44
  41139c:	mov	x0, x20
  4113a0:	bl	403210 <strchr@plt>
  4113a4:	cmp	x0, #0x0
  4113a8:	csel	x8, x21, x0, eq  // eq = none
  4113ac:	cmp	x8, x21
  4113b0:	csel	x22, x21, x8, hi  // hi = pmore
  4113b4:	sub	x25, x22, x20
  4113b8:	add	x24, x25, #0x1
  4113bc:	mov	x0, x24
  4113c0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4113c4:	mov	x1, x20
  4113c8:	mov	x2, x25
  4113cc:	mov	x23, x0
  4113d0:	bl	402fc0 <memcpy@plt>
  4113d4:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  4113d8:	mov	x0, x23
  4113dc:	add	x1, x1, #0x9f7
  4113e0:	strb	wzr, [x23, x25]
  4113e4:	bl	403640 <strcmp@plt>
  4113e8:	cbz	w0, 411e8c <feof@plt+0xe5ec>
  4113ec:	adrp	x26, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4113f0:	add	x26, x26, #0x23b
  4113f4:	b	411404 <feof@plt+0xdb64>
  4113f8:	ldrb	w8, [x27], #1
  4113fc:	mov	x26, x27
  411400:	cbz	w8, 411eb0 <feof@plt+0xe610>
  411404:	mov	w1, #0x2c                  	// #44
  411408:	mov	x0, x26
  41140c:	bl	403210 <strchr@plt>
  411410:	mov	x27, x0
  411414:	cbnz	x0, 411424 <feof@plt+0xdb84>
  411418:	mov	x0, x26
  41141c:	bl	4030b0 <strlen@plt>
  411420:	add	x27, x26, x0
  411424:	sub	x8, x27, x26
  411428:	cmp	x25, x8
  41142c:	b.ne	4113f8 <feof@plt+0xdb58>  // b.any
  411430:	mov	x0, x23
  411434:	mov	x1, x26
  411438:	mov	x2, x25
  41143c:	bl	403450 <strncmp@plt>
  411440:	cbnz	w0, 4113f8 <feof@plt+0xdb58>
  411444:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411448:	ldr	x26, [x8, #1720]
  41144c:	mov	x27, x26
  411450:	cbnz	x26, 411470 <feof@plt+0xdbd0>
  411454:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411458:	str	x23, [x8, #1720]
  41145c:	mov	x23, xzr
  411460:	b	411380 <feof@plt+0xdae0>
  411464:	ldrb	w8, [x28], #1
  411468:	mov	x27, x28
  41146c:	cbz	w8, 41133c <feof@plt+0xda9c>
  411470:	mov	w1, #0x3a                  	// #58
  411474:	mov	x0, x27
  411478:	bl	403210 <strchr@plt>
  41147c:	mov	x28, x0
  411480:	cbnz	x0, 411490 <feof@plt+0xdbf0>
  411484:	mov	x0, x27
  411488:	bl	4030b0 <strlen@plt>
  41148c:	add	x28, x27, x0
  411490:	sub	x8, x28, x27
  411494:	cmp	x25, x8
  411498:	b.ne	411464 <feof@plt+0xdbc4>  // b.any
  41149c:	mov	x0, x27
  4114a0:	mov	x1, x23
  4114a4:	mov	x2, x25
  4114a8:	bl	403450 <strncmp@plt>
  4114ac:	cbnz	w0, 411464 <feof@plt+0xdbc4>
  4114b0:	cmp	x27, x28
  4114b4:	b.hi	41133c <feof@plt+0xda9c>  // b.pmore
  4114b8:	b	411380 <feof@plt+0xdae0>
  4114bc:	cmp	x8, #0x38
  4114c0:	b.eq	411dd0 <feof@plt+0xe530>  // b.none
  4114c4:	b	411db8 <feof@plt+0xe518>
  4114c8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4114cc:	ldrsw	x9, [x8, #1972]
  4114d0:	cbz	w9, 411d74 <feof@plt+0xe4d4>
  4114d4:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4114d8:	ldr	w10, [x10, #1160]
  4114dc:	cmp	w9, w10
  4114e0:	b.ne	411e18 <feof@plt+0xe578>  // b.any
  4114e4:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4114e8:	ldr	x0, [x19, #1784]
  4114ec:	lsl	w10, w9, #1
  4114f0:	lsl	x1, x9, #6
  4114f4:	str	w10, [x8, #1972]
  4114f8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4114fc:	str	x0, [x19, #1784]
  411500:	b	411e20 <feof@plt+0xe580>
  411504:	mov	x0, x20
  411508:	bl	4030b0 <strlen@plt>
  41150c:	mov	x1, x0
  411510:	mov	x0, x20
  411514:	bl	412014 <feof@plt+0xe774>
  411518:	b	411dd0 <feof@plt+0xe530>
  41151c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411520:	mov	w9, #0x1                   	// #1
  411524:	mov	w3, wzr
  411528:	strb	w9, [x8, #2068]
  41152c:	b	411db8 <feof@plt+0xe518>
  411530:	mov	x0, x20
  411534:	bl	4030b0 <strlen@plt>
  411538:	add	x8, x0, x20
  41153c:	ldurb	w8, [x8, #-1]
  411540:	cmp	w8, #0x2f
  411544:	b.eq	41157c <feof@plt+0xdcdc>  // b.none
  411548:	mov	x21, x0
  41154c:	mov	x0, x20
  411550:	mov	w1, wzr
  411554:	bl	412590 <feof@plt+0xecf0>
  411558:	cbz	w0, 41157c <feof@plt+0xdcdc>
  41155c:	add	x0, x21, #0x2
  411560:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  411564:	mov	x1, x20
  411568:	bl	4032f0 <strcpy@plt>
  41156c:	mov	w8, #0x2f                  	// #47
  411570:	mov	x20, x0
  411574:	strh	w8, [x0, x21]
  411578:	str	x0, [sp]
  41157c:	adrp	x22, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  411580:	add	x22, x22, #0x4e0
  411584:	ldr	x8, [x22]
  411588:	cbz	x8, 4115c0 <feof@plt+0xdd20>
  41158c:	ldr	w9, [x8, #20]
  411590:	cmp	w9, #0x0
  411594:	b.le	4115b0 <feof@plt+0xdd10>
  411598:	adrp	x22, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  41159c:	add	x22, x22, #0x4e0
  4115a0:	b	4115c0 <feof@plt+0xdd20>
  4115a4:	ldr	w10, [x8, #20]
  4115a8:	cmp	w10, #0x1
  4115ac:	b.ge	4115bc <feof@plt+0xdd1c>  // b.tcont
  4115b0:	mov	x9, x8
  4115b4:	ldr	x8, [x8, #8]
  4115b8:	cbnz	x8, 4115a4 <feof@plt+0xdd04>
  4115bc:	add	x22, x9, #0x8
  4115c0:	mov	x0, x20
  4115c4:	mov	x1, xzr
  4115c8:	bl	4175f0 <feof@plt+0x13d50>
  4115cc:	mov	x21, x0
  4115d0:	bl	4030b0 <strlen@plt>
  4115d4:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4115d8:	ldr	w9, [x8, #1256]
  4115dc:	cmp	w9, w0
  4115e0:	b.ge	4115e8 <feof@plt+0xdd48>  // b.tcont
  4115e4:	str	w0, [x8, #1256]
  4115e8:	mov	w0, #0x20                  	// #32
  4115ec:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4115f0:	str	x21, [x0]
  4115f4:	str	xzr, [x0, #16]
  4115f8:	str	wzr, [x0, #24]
  4115fc:	ldr	x8, [x22]
  411600:	str	x8, [x0, #8]
  411604:	str	x0, [x22]
  411608:	adrp	x22, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  41160c:	add	x22, x22, #0x4b8
  411610:	ldr	x8, [x22]
  411614:	cbz	x8, 41164c <feof@plt+0xddac>
  411618:	ldr	w9, [x8, #20]
  41161c:	cmp	w9, #0x0
  411620:	b.le	41163c <feof@plt+0xdd9c>
  411624:	adrp	x22, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  411628:	add	x22, x22, #0x4b8
  41162c:	b	41164c <feof@plt+0xddac>
  411630:	ldr	w10, [x8, #20]
  411634:	cmp	w10, #0x1
  411638:	b.ge	411648 <feof@plt+0xdda8>  // b.tcont
  41163c:	mov	x9, x8
  411640:	ldr	x8, [x8, #8]
  411644:	cbnz	x8, 411630 <feof@plt+0xdd90>
  411648:	add	x22, x9, #0x8
  41164c:	mov	x0, x20
  411650:	mov	x1, xzr
  411654:	bl	4175f0 <feof@plt+0x13d50>
  411658:	mov	x21, x0
  41165c:	bl	4030b0 <strlen@plt>
  411660:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  411664:	ldr	w9, [x8, #1216]
  411668:	cmp	w9, w0
  41166c:	b.ge	411674 <feof@plt+0xddd4>  // b.tcont
  411670:	str	w0, [x8, #1216]
  411674:	mov	w0, #0x20                  	// #32
  411678:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  41167c:	str	x21, [x0]
  411680:	str	xzr, [x0, #16]
  411684:	str	wzr, [x0, #24]
  411688:	ldr	x8, [x22]
  41168c:	adrp	x21, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  411690:	add	x21, x21, #0x560
  411694:	str	x8, [x0, #8]
  411698:	str	x0, [x22]
  41169c:	ldr	x8, [x21]
  4116a0:	cbz	x8, 4116d8 <feof@plt+0xde38>
  4116a4:	ldr	w9, [x8, #20]
  4116a8:	cmp	w9, #0x0
  4116ac:	b.le	4116c8 <feof@plt+0xde28>
  4116b0:	adrp	x21, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4116b4:	add	x21, x21, #0x560
  4116b8:	b	4116d8 <feof@plt+0xde38>
  4116bc:	ldr	w10, [x8, #20]
  4116c0:	cmp	w10, #0x1
  4116c4:	b.ge	4116d4 <feof@plt+0xde34>  // b.tcont
  4116c8:	mov	x9, x8
  4116cc:	ldr	x8, [x8, #8]
  4116d0:	cbnz	x8, 4116bc <feof@plt+0xde1c>
  4116d4:	add	x21, x9, #0x8
  4116d8:	mov	x0, x20
  4116dc:	mov	x1, xzr
  4116e0:	bl	4175f0 <feof@plt+0x13d50>
  4116e4:	mov	x20, x0
  4116e8:	bl	4030b0 <strlen@plt>
  4116ec:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  4116f0:	ldr	w9, [x8, #1384]
  4116f4:	cmp	w9, w0
  4116f8:	b.ge	411700 <feof@plt+0xde60>  // b.tcont
  4116fc:	str	w0, [x8, #1384]
  411700:	mov	w0, #0x20                  	// #32
  411704:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  411708:	str	x20, [x0]
  41170c:	str	xzr, [x0, #16]
  411710:	str	wzr, [x0, #24]
  411714:	ldr	x8, [x21]
  411718:	mov	w3, #0x1                   	// #1
  41171c:	str	x8, [x0, #8]
  411720:	str	x0, [x21]
  411724:	b	411db8 <feof@plt+0xe518>
  411728:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  41172c:	add	x0, x0, #0x9a9
  411730:	b	41173c <feof@plt+0xde9c>
  411734:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411738:	add	x0, x0, #0x9a6
  41173c:	mov	x1, x20
  411740:	mov	x2, xzr
  411744:	bl	4799ac <feof@plt+0x7610c>
  411748:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41174c:	ldrsw	x9, [x8, #1576]
  411750:	mov	x19, x0
  411754:	cbz	w9, 411be0 <feof@plt+0xe340>
  411758:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41175c:	ldr	w10, [x10, #1560]
  411760:	cmp	w9, w10
  411764:	b.ne	411bfc <feof@plt+0xe35c>  // b.any
  411768:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41176c:	ldr	x0, [x20, #1592]
  411770:	lsl	w10, w9, #1
  411774:	str	w10, [x8, #1576]
  411778:	add	x8, x9, x9, lsl #1
  41177c:	lsl	x1, x8, #4
  411780:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  411784:	str	x0, [x20, #1592]
  411788:	b	411c04 <feof@plt+0xe364>
  41178c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411790:	ldr	w8, [x8, #1112]
  411794:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411798:	mov	w10, #0x1                   	// #1
  41179c:	str	w10, [x9, #1824]
  4117a0:	cbz	w8, 4117b4 <feof@plt+0xdf14>
  4117a4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  4117a8:	add	x0, x0, #0x96b
  4117ac:	mov	w1, #0xd                   	// #13
  4117b0:	bl	412014 <feof@plt+0xe774>
  4117b4:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x32fc>
  4117b8:	add	x20, x20, #0x96b
  4117bc:	mov	w1, #0xd                   	// #13
  4117c0:	mov	x0, x20
  4117c4:	bl	4121e8 <feof@plt+0xe948>
  4117c8:	mov	w1, #0xd                   	// #13
  4117cc:	b	4118ac <feof@plt+0xe00c>
  4117d0:	mov	w8, wzr
  4117d4:	mov	x19, xzr
  4117d8:	ldrb	w9, [x20, x19]
  4117dc:	cbz	w9, 411808 <feof@plt+0xdf68>
  4117e0:	cmp	w9, #0x2c
  4117e4:	b.eq	4117f0 <feof@plt+0xdf50>  // b.none
  4117e8:	add	x19, x19, #0x1
  4117ec:	b	4117d8 <feof@plt+0xdf38>
  4117f0:	add	x0, x20, w8, sxtw
  4117f4:	sub	w1, w19, w8
  4117f8:	bl	4121e8 <feof@plt+0xe948>
  4117fc:	add	x8, x19, #0x1
  411800:	mov	x19, x8
  411804:	b	4117d8 <feof@plt+0xdf38>
  411808:	add	x0, x20, w8, sxtw
  41180c:	sub	w1, w19, w8
  411810:	bl	4121e8 <feof@plt+0xe948>
  411814:	b	411dd0 <feof@plt+0xe530>
  411818:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41181c:	ldr	w8, [x8, #1112]
  411820:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411824:	mov	w10, #0x1                   	// #1
  411828:	strb	w10, [x9, #1764]
  41182c:	cbz	w8, 411840 <feof@plt+0xdfa0>
  411830:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411834:	add	x0, x0, #0x95a
  411838:	mov	w1, #0x9                   	// #9
  41183c:	bl	412014 <feof@plt+0xe774>
  411840:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411844:	add	x20, x20, #0x95a
  411848:	mov	w1, #0x9                   	// #9
  41184c:	mov	x0, x20
  411850:	bl	4121e8 <feof@plt+0xe948>
  411854:	mov	w1, #0x9                   	// #9
  411858:	b	4118ac <feof@plt+0xe00c>
  41185c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411860:	str	x20, [x8, #1248]
  411864:	mov	w3, #0x1                   	// #1
  411868:	b	411db8 <feof@plt+0xe518>
  41186c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411870:	ldr	w8, [x8, #1112]
  411874:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411878:	mov	w10, #0x1                   	// #1
  41187c:	strb	w10, [x9, #1760]
  411880:	cbz	w8, 411894 <feof@plt+0xdff4>
  411884:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411888:	add	x0, x0, #0x964
  41188c:	mov	w1, #0x6                   	// #6
  411890:	bl	412014 <feof@plt+0xe774>
  411894:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411898:	add	x20, x20, #0x964
  41189c:	mov	w1, #0x6                   	// #6
  4118a0:	mov	x0, x20
  4118a4:	bl	4121e8 <feof@plt+0xe948>
  4118a8:	mov	w1, #0x6                   	// #6
  4118ac:	mov	x0, x20
  4118b0:	bl	4123bc <feof@plt+0xeb1c>
  4118b4:	mov	w3, wzr
  4118b8:	b	411db8 <feof@plt+0xe518>
  4118bc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4118c0:	mov	w9, #0x2                   	// #2
  4118c4:	mov	w3, wzr
  4118c8:	str	w9, [x8, #1824]
  4118cc:	b	411db8 <feof@plt+0xe518>
  4118d0:	cmp	w1, #0x1
  4118d4:	b.eq	411c38 <feof@plt+0xe398>  // b.none
  4118d8:	cbnz	w1, 411fe4 <feof@plt+0xe744>
  4118dc:	adrp	x20, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4118e0:	add	x20, x20, #0x23b
  4118e4:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x32fc>
  4118e8:	str	x20, [sp]
  4118ec:	add	x21, x21, #0x8e6
  4118f0:	b	411c4c <feof@plt+0xe3ac>
  4118f4:	ldr	x21, [x19, #32]
  4118f8:	b	411c4c <feof@plt+0xe3ac>
  4118fc:	adrp	x24, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  411900:	mov	w8, wzr
  411904:	mov	x27, xzr
  411908:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41190c:	mov	w28, #0x10                  	// #16
  411910:	adrp	x25, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411914:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411918:	add	x24, x24, #0xcf2
  41191c:	ldrb	w9, [x20, x27]
  411920:	cbz	w9, 4119c8 <feof@plt+0xe128>
  411924:	cmp	w9, #0x2c
  411928:	b.eq	411934 <feof@plt+0xe094>  // b.none
  41192c:	add	x27, x27, #0x1
  411930:	b	41191c <feof@plt+0xe07c>
  411934:	add	x21, x20, w8, sxtw
  411938:	neg	w8, w8
  41193c:	add	x22, x8, x27
  411940:	add	w8, w22, #0x1
  411944:	sxtw	x0, w8
  411948:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  41194c:	sxtw	x22, w22
  411950:	mov	x1, x21
  411954:	mov	x2, x22
  411958:	mov	x19, x0
  41195c:	bl	402fc0 <memcpy@plt>
  411960:	ldrsw	x8, [x26, #1972]
  411964:	strb	wzr, [x19, x22]
  411968:	cbz	w8, 411990 <feof@plt+0xe0f0>
  41196c:	ldr	w9, [x23, #1160]
  411970:	cmp	w8, w9
  411974:	b.ne	4119a4 <feof@plt+0xe104>  // b.any
  411978:	ldr	x0, [x25, #1784]
  41197c:	lsl	w9, w8, #1
  411980:	lsl	x1, x8, #6
  411984:	str	w9, [x26, #1972]
  411988:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  41198c:	b	41199c <feof@plt+0xe0fc>
  411990:	mov	w0, #0x200                 	// #512
  411994:	str	w28, [x26, #1972]
  411998:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  41199c:	str	x0, [x25, #1784]
  4119a0:	b	4119a8 <feof@plt+0xe108>
  4119a4:	ldr	x0, [x25, #1784]
  4119a8:	ldrsw	x9, [x23, #1160]
  4119ac:	add	x8, x27, #0x1
  4119b0:	mov	x27, x8
  4119b4:	add	x10, x0, x9, lsl #5
  4119b8:	add	w9, w9, #0x1
  4119bc:	stp	x19, x24, [x10]
  4119c0:	str	w9, [x23, #1160]
  4119c4:	b	41191c <feof@plt+0xe07c>
  4119c8:	ldrsw	x9, [x26, #1972]
  4119cc:	add	x19, x20, w8, sxtw
  4119d0:	cbz	w9, 411d90 <feof@plt+0xe4f0>
  4119d4:	ldr	w8, [x23, #1160]
  4119d8:	cmp	w9, w8
  4119dc:	b.ne	411e40 <feof@plt+0xe5a0>  // b.any
  4119e0:	ldr	x0, [x25, #1784]
  4119e4:	lsl	w8, w9, #1
  4119e8:	lsl	x1, x9, #6
  4119ec:	str	w8, [x26, #1972]
  4119f0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4119f4:	b	411da0 <feof@plt+0xe500>
  4119f8:	add	x0, x20, w8, sxtw
  4119fc:	sub	w1, w19, w8
  411a00:	bl	412014 <feof@plt+0xe774>
  411a04:	b	411dd0 <feof@plt+0xe530>
  411a08:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411a0c:	add	x1, x1, #0x9ac
  411a10:	mov	x0, x20
  411a14:	bl	403640 <strcmp@plt>
  411a18:	cbz	w0, 411da8 <feof@plt+0xe508>
  411a1c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411a20:	add	x1, x1, #0x9b0
  411a24:	mov	x0, x20
  411a28:	bl	403640 <strcmp@plt>
  411a2c:	cbz	w0, 411a44 <feof@plt+0xe1a4>
  411a30:	adrp	x1, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  411a34:	add	x1, x1, #0x9c0
  411a38:	mov	x0, x20
  411a3c:	bl	403640 <strcmp@plt>
  411a40:	cbnz	w0, 411ffc <feof@plt+0xe75c>
  411a44:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411a48:	mov	w9, #0x2                   	// #2
  411a4c:	b	411db0 <feof@plt+0xe510>
  411a50:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411a54:	mov	w9, #0x1                   	// #1
  411a58:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411a5c:	mov	x0, x20
  411a60:	strb	w9, [x8, #1772]
  411a64:	str	x20, [x10, #2056]
  411a68:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  411a6c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411a70:	str	x0, [x8, #1880]
  411a74:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411a78:	add	x0, x0, #0x9dd
  411a7c:	mov	x2, sp
  411a80:	mov	w1, #0x1                   	// #1
  411a84:	mov	w4, #0x1                   	// #1
  411a88:	mov	w3, wzr
  411a8c:	b	411dcc <feof@plt+0xe52c>
  411a90:	mov	w0, #0x10                  	// #16
  411a94:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  411a98:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411a9c:	ldr	x9, [x8, #1896]
  411aa0:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411aa4:	add	x10, x10, #0x608
  411aa8:	stp	xzr, x20, [x0]
  411aac:	cmp	x9, #0x0
  411ab0:	csel	x9, x10, x9, eq  // eq = none
  411ab4:	str	x0, [x9]
  411ab8:	str	x0, [x8, #1896]
  411abc:	b	41118c <feof@plt+0xd8ec>
  411ac0:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411ac4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411ac8:	add	x9, x9, #0x987
  411acc:	b	411bc4 <feof@plt+0xe324>
  411ad0:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  411ad4:	add	x0, x0, #0xa49
  411ad8:	mov	x1, x20
  411adc:	mov	x2, xzr
  411ae0:	bl	4799ac <feof@plt+0x7610c>
  411ae4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411ae8:	ldrsw	x9, [x8, #1972]
  411aec:	mov	x19, x0
  411af0:	cbz	w9, 411df4 <feof@plt+0xe554>
  411af4:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411af8:	ldr	w10, [x10, #1160]
  411afc:	cmp	w9, w10
  411b00:	b.ne	411e5c <feof@plt+0xe5bc>  // b.any
  411b04:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411b08:	ldr	x0, [x20, #1784]
  411b0c:	lsl	w10, w9, #1
  411b10:	lsl	x1, x9, #6
  411b14:	str	w10, [x8, #1972]
  411b18:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  411b1c:	str	x0, [x20, #1784]
  411b20:	b	411e64 <feof@plt+0xe5c4>
  411b24:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411b28:	mov	w3, #0x1                   	// #1
  411b2c:	str	w3, [x8, #1616]
  411b30:	b	411db8 <feof@plt+0xe518>
  411b34:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  411b38:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  411b3c:	add	x9, x9, #0x23b
  411b40:	mov	w3, wzr
  411b44:	str	x9, [x8, #3888]
  411b48:	b	411db8 <feof@plt+0xe518>
  411b4c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411b50:	adrp	x8, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  411b54:	add	x9, x9, #0x979
  411b58:	str	x9, [x8, #64]
  411b5c:	b	411dd0 <feof@plt+0xe530>
  411b60:	adrp	x1, 4be000 <_obstack_memory_used@@Base+0x422fc>
  411b64:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411b68:	add	x1, x1, #0x507
  411b6c:	mov	x0, x20
  411b70:	str	x20, [x19, #1976]
  411b74:	bl	403640 <strcmp@plt>
  411b78:	cbz	w0, 411e10 <feof@plt+0xe570>
  411b7c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411b80:	ldr	w8, [x8, #1160]
  411b84:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411b88:	str	w8, [x9, #1984]
  411b8c:	b	411dd0 <feof@plt+0xe530>
  411b90:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411b94:	ldr	x0, [x19, #1120]
  411b98:	cbz	x0, 411ba0 <feof@plt+0xe300>
  411b9c:	bl	403150 <fclose@plt>
  411ba0:	adrp	x1, 483000 <_obstack_memory_used@@Base+0x72fc>
  411ba4:	add	x1, x1, #0xa7e
  411ba8:	mov	x0, x20
  411bac:	bl	403620 <fopen@plt>
  411bb0:	str	x0, [x19, #1120]
  411bb4:	b	411dd0 <feof@plt+0xe530>
  411bb8:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411bbc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411bc0:	add	x9, x9, #0x982
  411bc4:	mov	w3, wzr
  411bc8:	str	x9, [x8, #1728]
  411bcc:	b	411db8 <feof@plt+0xe518>
  411bd0:	mov	x0, x7
  411bd4:	bl	42fc58 <feof@plt+0x2c3b8>
  411bd8:	mov	w3, wzr
  411bdc:	b	411db8 <feof@plt+0xe518>
  411be0:	mov	w9, #0x10                  	// #16
  411be4:	mov	w0, #0x180                 	// #384
  411be8:	str	w9, [x8, #1576]
  411bec:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  411bf0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411bf4:	str	x0, [x8, #1592]
  411bf8:	b	411c04 <feof@plt+0xe364>
  411bfc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411c00:	ldr	x0, [x8, #1592]
  411c04:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411c08:	ldrsw	x9, [x8, #1560]
  411c0c:	mov	w11, #0x18                  	// #24
  411c10:	add	x10, x19, #0x1
  411c14:	mov	w12, #0x1                   	// #1
  411c18:	madd	x11, x9, x11, x0
  411c1c:	add	w9, w9, #0x1
  411c20:	stp	x10, xzr, [x11]
  411c24:	str	wzr, [x11, #16]
  411c28:	strh	w12, [x11, #20]
  411c2c:	strb	wzr, [x11, #22]
  411c30:	str	w9, [x8, #1560]
  411c34:	b	411dd0 <feof@plt+0xe530>
  411c38:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411c3c:	add	x20, x20, #0x99d
  411c40:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411c44:	str	x20, [sp]
  411c48:	add	x21, x21, #0x98d
  411c4c:	ldr	x8, [x19, #64]
  411c50:	cmp	x8, #0x1
  411c54:	b.ne	411fb4 <feof@plt+0xe714>  // b.any
  411c58:	cbz	x20, 411fcc <feof@plt+0xe72c>
  411c5c:	ldrb	w8, [x20]
  411c60:	mov	w9, #0xffffffff            	// #-1
  411c64:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411c68:	cmp	w8, #0x0
  411c6c:	cneg	w9, w9, ne  // ne = any
  411c70:	str	w9, [x10, #1144]
  411c74:	cbz	w8, 411c84 <feof@plt+0xe3e4>
  411c78:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411c7c:	str	x20, [x8, #1152]
  411c80:	b	411c8c <feof@plt+0xe3ec>
  411c84:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411c88:	str	xzr, [x8, #1152]
  411c8c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411c90:	ldrsw	x9, [x8, #1576]
  411c94:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411c98:	cbz	w9, 411ccc <feof@plt+0xe42c>
  411c9c:	ldr	w10, [x19, #1560]
  411ca0:	cmp	w9, w10
  411ca4:	b.ne	411ce8 <feof@plt+0xe448>  // b.any
  411ca8:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411cac:	ldr	x0, [x20, #1592]
  411cb0:	lsl	w10, w9, #1
  411cb4:	str	w10, [x8, #1576]
  411cb8:	add	x8, x9, x9, lsl #1
  411cbc:	lsl	x1, x8, #4
  411cc0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  411cc4:	str	x0, [x20, #1592]
  411cc8:	b	411cf0 <feof@plt+0xe450>
  411ccc:	mov	w9, #0x10                  	// #16
  411cd0:	mov	w0, #0x180                 	// #384
  411cd4:	str	w9, [x8, #1576]
  411cd8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  411cdc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411ce0:	str	x0, [x8, #1592]
  411ce4:	b	411cf0 <feof@plt+0xe450>
  411ce8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411cec:	ldr	x0, [x8, #1592]
  411cf0:	ldrsw	x8, [x19, #1560]
  411cf4:	mov	w10, #0x18                  	// #24
  411cf8:	add	x9, x21, #0x1
  411cfc:	mov	w11, #0x1                   	// #1
  411d00:	madd	x10, x8, x10, x0
  411d04:	add	w8, w8, #0x1
  411d08:	stp	x9, xzr, [x10]
  411d0c:	str	wzr, [x10, #16]
  411d10:	strh	w11, [x10, #20]
  411d14:	strb	wzr, [x10, #22]
  411d18:	str	w8, [x19, #1560]
  411d1c:	bl	4035c0 <__errno_location@plt>
  411d20:	mov	x19, x0
  411d24:	str	wzr, [x0]
  411d28:	mov	x0, xzr
  411d2c:	bl	403590 <time@plt>
  411d30:	tbnz	x0, #63, 411d3c <feof@plt+0xe49c>
  411d34:	ldr	w8, [x19]
  411d38:	cbz	w8, 411d44 <feof@plt+0xe4a4>
  411d3c:	mov	x3, xzr
  411d40:	b	411d48 <feof@plt+0xe4a8>
  411d44:	mov	x3, x0
  411d48:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411d4c:	add	x2, x2, #0x9e0
  411d50:	add	x0, sp, #0x8
  411d54:	mov	w1, #0x15                  	// #21
  411d58:	bl	403530 <snprintf@plt>
  411d5c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411d60:	add	x0, x0, #0x9e5
  411d64:	add	x1, sp, #0x8
  411d68:	mov	w2, wzr
  411d6c:	bl	4036a0 <setenv@plt>
  411d70:	b	411dd0 <feof@plt+0xe530>
  411d74:	mov	w9, #0x10                  	// #16
  411d78:	mov	w0, #0x200                 	// #512
  411d7c:	str	w9, [x8, #1972]
  411d80:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  411d84:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411d88:	str	x0, [x8, #1784]
  411d8c:	b	411e20 <feof@plt+0xe580>
  411d90:	mov	w8, #0x10                  	// #16
  411d94:	mov	w0, #0x200                 	// #512
  411d98:	str	w8, [x26, #1972]
  411d9c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  411da0:	str	x0, [x25, #1784]
  411da4:	b	411e44 <feof@plt+0xe5a4>
  411da8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411dac:	mov	w9, #0x1                   	// #1
  411db0:	mov	w3, wzr
  411db4:	str	w9, [x8, #1616]
  411db8:	ldr	x8, [x19, #64]
  411dbc:	ldr	x0, [x19, #32]
  411dc0:	add	x2, x19, #0x28
  411dc4:	mov	w4, #0x1                   	// #1
  411dc8:	sub	x1, x8, #0x1
  411dcc:	bl	410ed8 <feof@plt+0xd638>
  411dd0:	ldp	x20, x19, [sp, #112]
  411dd4:	ldp	x22, x21, [sp, #96]
  411dd8:	ldp	x24, x23, [sp, #80]
  411ddc:	ldp	x26, x25, [sp, #64]
  411de0:	ldp	x28, x27, [sp, #48]
  411de4:	ldp	x29, x30, [sp, #32]
  411de8:	mov	w0, #0x1                   	// #1
  411dec:	add	sp, sp, #0x80
  411df0:	ret
  411df4:	mov	w9, #0x10                  	// #16
  411df8:	mov	w0, #0x200                 	// #512
  411dfc:	str	w9, [x8, #1972]
  411e00:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  411e04:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411e08:	str	x0, [x8, #1784]
  411e0c:	b	411e64 <feof@plt+0xe5c4>
  411e10:	str	xzr, [x19, #1976]
  411e14:	b	411dd0 <feof@plt+0xe530>
  411e18:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411e1c:	ldr	x0, [x8, #1784]
  411e20:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411e24:	ldrsw	x9, [x8, #1160]
  411e28:	adrp	x10, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  411e2c:	add	x10, x10, #0xcf2
  411e30:	add	x11, x0, x9, lsl #5
  411e34:	add	w9, w9, #0x1
  411e38:	str	x20, [x11]
  411e3c:	b	411e80 <feof@plt+0xe5e0>
  411e40:	ldr	x0, [x25, #1784]
  411e44:	ldrsw	x8, [x23, #1160]
  411e48:	add	x9, x0, x8, lsl #5
  411e4c:	add	w8, w8, #0x1
  411e50:	stp	x19, x24, [x9]
  411e54:	str	w8, [x23, #1160]
  411e58:	b	411dd0 <feof@plt+0xe530>
  411e5c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411e60:	ldr	x0, [x8, #1784]
  411e64:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411e68:	ldrsw	x9, [x8, #1160]
  411e6c:	adrp	x10, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  411e70:	add	x10, x10, #0xcf2
  411e74:	add	x11, x0, x9, lsl #5
  411e78:	add	w9, w9, #0x1
  411e7c:	str	x19, [x11]
  411e80:	str	w9, [x8, #1160]
  411e84:	str	x10, [x11, #8]
  411e88:	b	411dd0 <feof@plt+0xe530>
  411e8c:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411e90:	ldr	x0, [x20, #1720]
  411e94:	bl	4031d0 <free@plt>
  411e98:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  411e9c:	add	x0, x0, #0x23b
  411ea0:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  411ea4:	mov	w3, wzr
  411ea8:	str	x0, [x20, #1720]
  411eac:	b	411db8 <feof@plt+0xe518>
  411eb0:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  411eb4:	ldr	w0, [x8, #400]
  411eb8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411ebc:	add	x1, x1, #0x9ff
  411ec0:	mov	x2, x23
  411ec4:	bl	42c008 <feof@plt+0x28768>
  411ec8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  411ecc:	add	x0, x0, #0x650
  411ed0:	b	411edc <feof@plt+0xe63c>
  411ed4:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  411ed8:	add	x0, x0, #0xb53
  411edc:	bl	403010 <puts@plt>
  411ee0:	mov	w0, wzr
  411ee4:	bl	403730 <exit@plt>
  411ee8:	bl	40b9f8 <feof@plt+0x8158>
  411eec:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  411ef0:	ldr	x20, [x8, #1552]
  411ef4:	cbz	x20, 411f1c <feof@plt+0xe67c>
  411ef8:	adrp	x19, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411efc:	add	x19, x19, #0x93c
  411f00:	ldr	x8, [x20, #16]
  411f04:	ldr	x1, [x20]
  411f08:	mov	x0, x19
  411f0c:	ldr	x2, [x8]
  411f10:	bl	403880 <printf@plt>
  411f14:	ldr	x20, [x20, #24]
  411f18:	cbnz	x20, 411f00 <feof@plt+0xe660>
  411f1c:	adrp	x8, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  411f20:	ldr	x1, [x8, #1352]
  411f24:	cbz	x1, 411f34 <feof@plt+0xe694>
  411f28:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411f2c:	add	x0, x0, #0x946
  411f30:	bl	403880 <printf@plt>
  411f34:	mov	w0, wzr
  411f38:	bl	403730 <exit@plt>
  411f3c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  411f40:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411f44:	add	x0, x0, #0x5ec
  411f48:	add	x2, x2, #0x927
  411f4c:	mov	w1, #0xf3b                 	// #3899
  411f50:	bl	429434 <feof@plt+0x25b94>
  411f54:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  411f58:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411f5c:	add	x0, x0, #0x5ec
  411f60:	add	x2, x2, #0x927
  411f64:	mov	w1, #0xf3c                 	// #3900
  411f68:	bl	429434 <feof@plt+0x25b94>
  411f6c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  411f70:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411f74:	add	x0, x0, #0x5ec
  411f78:	add	x2, x2, #0x927
  411f7c:	mov	w1, #0xf3d                 	// #3901
  411f80:	bl	429434 <feof@plt+0x25b94>
  411f84:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  411f88:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411f8c:	add	x0, x0, #0x5ec
  411f90:	add	x2, x2, #0x927
  411f94:	mov	w1, #0xf3e                 	// #3902
  411f98:	bl	429434 <feof@plt+0x25b94>
  411f9c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  411fa0:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411fa4:	add	x0, x0, #0x5ec
  411fa8:	add	x2, x2, #0x927
  411fac:	mov	w1, #0xf3f                 	// #3903
  411fb0:	bl	429434 <feof@plt+0x25b94>
  411fb4:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  411fb8:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411fbc:	add	x0, x0, #0x5ec
  411fc0:	add	x2, x2, #0x927
  411fc4:	mov	w1, #0xfba                 	// #4026
  411fc8:	bl	429434 <feof@plt+0x25b94>
  411fcc:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  411fd0:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411fd4:	add	x0, x0, #0x5ec
  411fd8:	add	x2, x2, #0x927
  411fdc:	mov	w1, #0xfbb                 	// #4027
  411fe0:	bl	429434 <feof@plt+0x25b94>
  411fe4:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  411fe8:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  411fec:	add	x0, x0, #0x5ec
  411ff0:	add	x2, x2, #0x927
  411ff4:	mov	w1, #0xfb3                 	// #4019
  411ff8:	bl	429434 <feof@plt+0x25b94>
  411ffc:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  412000:	ldr	w0, [x8, #400]
  412004:	ldr	x2, [x19, #24]
  412008:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  41200c:	add	x1, x1, #0x9b4
  412010:	bl	42c008 <feof@plt+0x28768>
  412014:	stp	x29, x30, [sp, #-80]!
  412018:	str	x25, [sp, #16]
  41201c:	stp	x24, x23, [sp, #32]
  412020:	stp	x22, x21, [sp, #48]
  412024:	stp	x20, x19, [sp, #64]
  412028:	mov	x29, sp
  41202c:	add	w8, w1, #0x1
  412030:	mov	x21, x0
  412034:	sxtw	x0, w8
  412038:	mov	w20, w1
  41203c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  412040:	sxtw	x20, w20
  412044:	mov	x1, x21
  412048:	mov	x2, x20
  41204c:	mov	x19, x0
  412050:	bl	402fc0 <memcpy@plt>
  412054:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  412058:	ldr	x23, [x21, #1920]
  41205c:	strb	wzr, [x19, x20]
  412060:	cbz	x23, 4120a8 <feof@plt+0xe808>
  412064:	ldp	w8, w9, [x23]
  412068:	and	w0, w8, #0x7fffffff
  41206c:	cmp	w0, w9
  412070:	b.ne	4121ac <feof@plt+0xe90c>  // b.any
  412074:	tbnz	w8, #31, 4120b8 <feof@plt+0xe818>
  412078:	add	w1, w0, #0x1
  41207c:	bl	425fbc <feof@plt+0x2271c>
  412080:	ldr	x8, [x21, #1920]
  412084:	mov	w9, w0
  412088:	lsl	x9, x9, #3
  41208c:	mov	w20, w0
  412090:	add	x1, x9, #0x8
  412094:	mov	w22, wzr
  412098:	cbz	x8, 4121dc <feof@plt+0xe93c>
  41209c:	ldr	w25, [x8, #4]
  4120a0:	mov	w24, wzr
  4120a4:	b	4120e8 <feof@plt+0xe848>
  4120a8:	mov	w22, wzr
  4120ac:	mov	w24, wzr
  4120b0:	mov	w20, #0x4                   	// #4
  4120b4:	b	4120d4 <feof@plt+0xe834>
  4120b8:	str	xzr, [x21, #1920]
  4120bc:	ldr	w22, [x23, #4]
  4120c0:	mov	w8, #0x4                   	// #4
  4120c4:	mov	w24, #0x1                   	// #1
  4120c8:	add	w9, w22, #0x1
  4120cc:	cmp	w9, #0x4
  4120d0:	csinc	w20, w8, w22, ls  // ls = plast
  4120d4:	mov	w9, w20
  4120d8:	lsl	x9, x9, #3
  4120dc:	mov	x8, xzr
  4120e0:	mov	w25, wzr
  4120e4:	add	x1, x9, #0x8
  4120e8:	mov	x0, x8
  4120ec:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4120f0:	and	w8, w20, #0x7fffffff
  4120f4:	str	x0, [x21, #1920]
  4120f8:	stp	w8, w25, [x0]
  4120fc:	cbz	w24, 4121ac <feof@plt+0xe90c>
  412100:	ldr	x8, [x21, #1920]
  412104:	cbz	w22, 4121a8 <feof@plt+0xe908>
  412108:	sub	w12, w22, #0x1
  41210c:	add	x9, x23, #0x8
  412110:	cmp	w12, #0x3
  412114:	add	x10, x8, #0x8
  412118:	b.cs	412124 <feof@plt+0xe884>  // b.hs, b.nlast
  41211c:	mov	w11, w22
  412120:	b	412198 <feof@plt+0xe8f8>
  412124:	lsl	x11, x12, #3
  412128:	add	x13, x23, x11
  41212c:	add	x13, x13, #0x10
  412130:	cmp	x10, x13
  412134:	b.cs	41214c <feof@plt+0xe8ac>  // b.hs, b.nlast
  412138:	add	x11, x8, x11
  41213c:	add	x11, x11, #0x10
  412140:	cmp	x9, x11
  412144:	mov	w11, w22
  412148:	b.cc	412198 <feof@plt+0xe8f8>  // b.lo, b.ul, b.last
  41214c:	add	x12, x12, #0x1
  412150:	and	x13, x12, #0x1fffffffc
  412154:	lsl	x9, x13, #3
  412158:	add	x10, x23, x9
  41215c:	add	x15, x8, x9
  412160:	add	x14, x8, #0x18
  412164:	sub	w11, w22, w13
  412168:	add	x9, x10, #0x8
  41216c:	add	x10, x15, #0x8
  412170:	add	x15, x23, #0x18
  412174:	mov	x16, x13
  412178:	ldp	q0, q1, [x15, #-16]
  41217c:	subs	x16, x16, #0x4
  412180:	add	x15, x15, #0x20
  412184:	stp	q0, q1, [x14, #-16]
  412188:	add	x14, x14, #0x20
  41218c:	b.ne	412178 <feof@plt+0xe8d8>  // b.any
  412190:	cmp	x12, x13
  412194:	b.eq	4121a8 <feof@plt+0xe908>  // b.none
  412198:	ldr	x12, [x9], #8
  41219c:	subs	w11, w11, #0x1
  4121a0:	str	x12, [x10], #8
  4121a4:	b.ne	412198 <feof@plt+0xe8f8>  // b.any
  4121a8:	str	w22, [x8, #4]
  4121ac:	ldr	x8, [x21, #1920]
  4121b0:	ldr	x25, [sp, #16]
  4121b4:	ldr	w9, [x8, #4]
  4121b8:	add	w10, w9, #0x1
  4121bc:	add	x9, x8, x9, lsl #3
  4121c0:	str	w10, [x8, #4]
  4121c4:	str	x19, [x9, #8]
  4121c8:	ldp	x20, x19, [sp, #64]
  4121cc:	ldp	x22, x21, [sp, #48]
  4121d0:	ldp	x24, x23, [sp, #32]
  4121d4:	ldp	x29, x30, [sp], #80
  4121d8:	ret
  4121dc:	mov	w24, wzr
  4121e0:	mov	w25, wzr
  4121e4:	b	4120e8 <feof@plt+0xe848>
  4121e8:	stp	x29, x30, [sp, #-80]!
  4121ec:	str	x25, [sp, #16]
  4121f0:	stp	x24, x23, [sp, #32]
  4121f4:	stp	x22, x21, [sp, #48]
  4121f8:	stp	x20, x19, [sp, #64]
  4121fc:	mov	x29, sp
  412200:	add	w8, w1, #0x1
  412204:	mov	x21, x0
  412208:	sxtw	x0, w8
  41220c:	mov	w20, w1
  412210:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  412214:	sxtw	x20, w20
  412218:	mov	x1, x21
  41221c:	mov	x2, x20
  412220:	mov	x19, x0
  412224:	bl	402fc0 <memcpy@plt>
  412228:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41222c:	ldr	x23, [x21, #1912]
  412230:	strb	wzr, [x19, x20]
  412234:	cbz	x23, 41227c <feof@plt+0xe9dc>
  412238:	ldp	w8, w9, [x23]
  41223c:	and	w0, w8, #0x7fffffff
  412240:	cmp	w0, w9
  412244:	b.ne	412380 <feof@plt+0xeae0>  // b.any
  412248:	tbnz	w8, #31, 41228c <feof@plt+0xe9ec>
  41224c:	add	w1, w0, #0x1
  412250:	bl	425fbc <feof@plt+0x2271c>
  412254:	ldr	x8, [x21, #1912]
  412258:	mov	w9, w0
  41225c:	lsl	x9, x9, #3
  412260:	mov	w20, w0
  412264:	add	x1, x9, #0x8
  412268:	mov	w22, wzr
  41226c:	cbz	x8, 4123b0 <feof@plt+0xeb10>
  412270:	ldr	w25, [x8, #4]
  412274:	mov	w24, wzr
  412278:	b	4122bc <feof@plt+0xea1c>
  41227c:	mov	w22, wzr
  412280:	mov	w24, wzr
  412284:	mov	w20, #0x4                   	// #4
  412288:	b	4122a8 <feof@plt+0xea08>
  41228c:	str	xzr, [x21, #1912]
  412290:	ldr	w22, [x23, #4]
  412294:	mov	w8, #0x4                   	// #4
  412298:	mov	w24, #0x1                   	// #1
  41229c:	add	w9, w22, #0x1
  4122a0:	cmp	w9, #0x4
  4122a4:	csinc	w20, w8, w22, ls  // ls = plast
  4122a8:	mov	w9, w20
  4122ac:	lsl	x9, x9, #3
  4122b0:	mov	x8, xzr
  4122b4:	mov	w25, wzr
  4122b8:	add	x1, x9, #0x8
  4122bc:	mov	x0, x8
  4122c0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4122c4:	and	w8, w20, #0x7fffffff
  4122c8:	str	x0, [x21, #1912]
  4122cc:	stp	w8, w25, [x0]
  4122d0:	cbz	w24, 412380 <feof@plt+0xeae0>
  4122d4:	ldr	x8, [x21, #1912]
  4122d8:	cbz	w22, 41237c <feof@plt+0xeadc>
  4122dc:	sub	w12, w22, #0x1
  4122e0:	add	x9, x23, #0x8
  4122e4:	cmp	w12, #0x3
  4122e8:	add	x10, x8, #0x8
  4122ec:	b.cs	4122f8 <feof@plt+0xea58>  // b.hs, b.nlast
  4122f0:	mov	w11, w22
  4122f4:	b	41236c <feof@plt+0xeacc>
  4122f8:	lsl	x11, x12, #3
  4122fc:	add	x13, x23, x11
  412300:	add	x13, x13, #0x10
  412304:	cmp	x10, x13
  412308:	b.cs	412320 <feof@plt+0xea80>  // b.hs, b.nlast
  41230c:	add	x11, x8, x11
  412310:	add	x11, x11, #0x10
  412314:	cmp	x9, x11
  412318:	mov	w11, w22
  41231c:	b.cc	41236c <feof@plt+0xeacc>  // b.lo, b.ul, b.last
  412320:	add	x12, x12, #0x1
  412324:	and	x13, x12, #0x1fffffffc
  412328:	lsl	x9, x13, #3
  41232c:	add	x10, x23, x9
  412330:	add	x15, x8, x9
  412334:	add	x14, x8, #0x18
  412338:	sub	w11, w22, w13
  41233c:	add	x9, x10, #0x8
  412340:	add	x10, x15, #0x8
  412344:	add	x15, x23, #0x18
  412348:	mov	x16, x13
  41234c:	ldp	q0, q1, [x15, #-16]
  412350:	subs	x16, x16, #0x4
  412354:	add	x15, x15, #0x20
  412358:	stp	q0, q1, [x14, #-16]
  41235c:	add	x14, x14, #0x20
  412360:	b.ne	41234c <feof@plt+0xeaac>  // b.any
  412364:	cmp	x12, x13
  412368:	b.eq	41237c <feof@plt+0xeadc>  // b.none
  41236c:	ldr	x12, [x9], #8
  412370:	subs	w11, w11, #0x1
  412374:	str	x12, [x10], #8
  412378:	b.ne	41236c <feof@plt+0xeacc>  // b.any
  41237c:	str	w22, [x8, #4]
  412380:	ldr	x8, [x21, #1912]
  412384:	ldr	x25, [sp, #16]
  412388:	ldr	w9, [x8, #4]
  41238c:	add	w10, w9, #0x1
  412390:	add	x9, x8, x9, lsl #3
  412394:	str	w10, [x8, #4]
  412398:	str	x19, [x9, #8]
  41239c:	ldp	x20, x19, [sp, #64]
  4123a0:	ldp	x22, x21, [sp, #48]
  4123a4:	ldp	x24, x23, [sp, #32]
  4123a8:	ldp	x29, x30, [sp], #80
  4123ac:	ret
  4123b0:	mov	w24, wzr
  4123b4:	mov	w25, wzr
  4123b8:	b	4122bc <feof@plt+0xea1c>
  4123bc:	stp	x29, x30, [sp, #-80]!
  4123c0:	str	x25, [sp, #16]
  4123c4:	stp	x24, x23, [sp, #32]
  4123c8:	stp	x22, x21, [sp, #48]
  4123cc:	stp	x20, x19, [sp, #64]
  4123d0:	mov	x29, sp
  4123d4:	add	w8, w1, #0x1
  4123d8:	mov	x21, x0
  4123dc:	sxtw	x0, w8
  4123e0:	mov	w20, w1
  4123e4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4123e8:	sxtw	x20, w20
  4123ec:	mov	x1, x21
  4123f0:	mov	x2, x20
  4123f4:	mov	x19, x0
  4123f8:	bl	402fc0 <memcpy@plt>
  4123fc:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  412400:	ldr	x23, [x21, #1904]
  412404:	strb	wzr, [x19, x20]
  412408:	cbz	x23, 412450 <feof@plt+0xebb0>
  41240c:	ldp	w8, w9, [x23]
  412410:	and	w0, w8, #0x7fffffff
  412414:	cmp	w0, w9
  412418:	b.ne	412554 <feof@plt+0xecb4>  // b.any
  41241c:	tbnz	w8, #31, 412460 <feof@plt+0xebc0>
  412420:	add	w1, w0, #0x1
  412424:	bl	425fbc <feof@plt+0x2271c>
  412428:	ldr	x8, [x21, #1904]
  41242c:	mov	w9, w0
  412430:	lsl	x9, x9, #3
  412434:	mov	w20, w0
  412438:	add	x1, x9, #0x8
  41243c:	mov	w22, wzr
  412440:	cbz	x8, 412584 <feof@plt+0xece4>
  412444:	ldr	w25, [x8, #4]
  412448:	mov	w24, wzr
  41244c:	b	412490 <feof@plt+0xebf0>
  412450:	mov	w22, wzr
  412454:	mov	w24, wzr
  412458:	mov	w20, #0x4                   	// #4
  41245c:	b	41247c <feof@plt+0xebdc>
  412460:	str	xzr, [x21, #1904]
  412464:	ldr	w22, [x23, #4]
  412468:	mov	w8, #0x4                   	// #4
  41246c:	mov	w24, #0x1                   	// #1
  412470:	add	w9, w22, #0x1
  412474:	cmp	w9, #0x4
  412478:	csinc	w20, w8, w22, ls  // ls = plast
  41247c:	mov	w9, w20
  412480:	lsl	x9, x9, #3
  412484:	mov	x8, xzr
  412488:	mov	w25, wzr
  41248c:	add	x1, x9, #0x8
  412490:	mov	x0, x8
  412494:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  412498:	and	w8, w20, #0x7fffffff
  41249c:	str	x0, [x21, #1904]
  4124a0:	stp	w8, w25, [x0]
  4124a4:	cbz	w24, 412554 <feof@plt+0xecb4>
  4124a8:	ldr	x8, [x21, #1904]
  4124ac:	cbz	w22, 412550 <feof@plt+0xecb0>
  4124b0:	sub	w12, w22, #0x1
  4124b4:	add	x9, x23, #0x8
  4124b8:	cmp	w12, #0x3
  4124bc:	add	x10, x8, #0x8
  4124c0:	b.cs	4124cc <feof@plt+0xec2c>  // b.hs, b.nlast
  4124c4:	mov	w11, w22
  4124c8:	b	412540 <feof@plt+0xeca0>
  4124cc:	lsl	x11, x12, #3
  4124d0:	add	x13, x23, x11
  4124d4:	add	x13, x13, #0x10
  4124d8:	cmp	x10, x13
  4124dc:	b.cs	4124f4 <feof@plt+0xec54>  // b.hs, b.nlast
  4124e0:	add	x11, x8, x11
  4124e4:	add	x11, x11, #0x10
  4124e8:	cmp	x9, x11
  4124ec:	mov	w11, w22
  4124f0:	b.cc	412540 <feof@plt+0xeca0>  // b.lo, b.ul, b.last
  4124f4:	add	x12, x12, #0x1
  4124f8:	and	x13, x12, #0x1fffffffc
  4124fc:	lsl	x9, x13, #3
  412500:	add	x10, x23, x9
  412504:	add	x15, x8, x9
  412508:	add	x14, x8, #0x18
  41250c:	sub	w11, w22, w13
  412510:	add	x9, x10, #0x8
  412514:	add	x10, x15, #0x8
  412518:	add	x15, x23, #0x18
  41251c:	mov	x16, x13
  412520:	ldp	q0, q1, [x15, #-16]
  412524:	subs	x16, x16, #0x4
  412528:	add	x15, x15, #0x20
  41252c:	stp	q0, q1, [x14, #-16]
  412530:	add	x14, x14, #0x20
  412534:	b.ne	412520 <feof@plt+0xec80>  // b.any
  412538:	cmp	x12, x13
  41253c:	b.eq	412550 <feof@plt+0xecb0>  // b.none
  412540:	ldr	x12, [x9], #8
  412544:	subs	w11, w11, #0x1
  412548:	str	x12, [x10], #8
  41254c:	b.ne	412540 <feof@plt+0xeca0>  // b.any
  412550:	str	w22, [x8, #4]
  412554:	ldr	x8, [x21, #1904]
  412558:	ldr	x25, [sp, #16]
  41255c:	ldr	w9, [x8, #4]
  412560:	add	w10, w9, #0x1
  412564:	add	x9, x8, x9, lsl #3
  412568:	str	w10, [x8, #4]
  41256c:	str	x19, [x9, #8]
  412570:	ldp	x20, x19, [sp, #64]
  412574:	ldp	x22, x21, [sp, #48]
  412578:	ldp	x24, x23, [sp, #32]
  41257c:	ldp	x29, x30, [sp], #80
  412580:	ret
  412584:	mov	w24, wzr
  412588:	mov	w25, wzr
  41258c:	b	412490 <feof@plt+0xebf0>
  412590:	stp	x29, x30, [sp, #-48]!
  412594:	stp	x22, x21, [sp, #16]
  412598:	stp	x20, x19, [sp, #32]
  41259c:	mov	x29, sp
  4125a0:	sub	sp, sp, #0x80
  4125a4:	mov	w20, w1
  4125a8:	mov	x21, x0
  4125ac:	bl	4030b0 <strlen@plt>
  4125b0:	add	w8, w0, #0x3
  4125b4:	sxtw	x8, w8
  4125b8:	add	x8, x8, #0xf
  4125bc:	and	x8, x8, #0xfffffffffffffff0
  4125c0:	mov	x9, sp
  4125c4:	sub	x19, x9, x8
  4125c8:	mov	sp, x19
  4125cc:	sxtw	x22, w0
  4125d0:	mov	x0, x19
  4125d4:	mov	x1, x21
  4125d8:	mov	x2, x22
  4125dc:	bl	402fc0 <memcpy@plt>
  4125e0:	add	x8, x19, x22
  4125e4:	ldurb	w9, [x8, #-1]
  4125e8:	cmp	w9, #0x2f
  4125ec:	b.eq	4125f8 <feof@plt+0xed58>  // b.none
  4125f0:	mov	w9, #0x2f                  	// #47
  4125f4:	strb	w9, [x8], #1
  4125f8:	mov	w9, #0x2e                  	// #46
  4125fc:	strh	w9, [x8], #1
  412600:	tbz	w20, #0, 41266c <feof@plt+0xedcc>
  412604:	ldrb	w9, [x19]
  412608:	cmp	w9, #0x2f
  41260c:	b.ne	41266c <feof@plt+0xedcc>  // b.any
  412610:	sub	x8, x8, x19
  412614:	cmp	x8, #0xa
  412618:	b.eq	412640 <feof@plt+0xeda0>  // b.none
  41261c:	cmp	x8, #0x6
  412620:	b.ne	41266c <feof@plt+0xedcc>  // b.any
  412624:	add	x0, x19, #0x1
  412628:	adrp	x1, 4b3000 <_obstack_memory_used@@Base+0x372fc>
  41262c:	add	x1, x1, #0xfee
  412630:	mov	w2, #0x3                   	// #3
  412634:	bl	479ca8 <feof@plt+0x76408>
  412638:	cbnz	w0, 41266c <feof@plt+0xedcc>
  41263c:	b	412698 <feof@plt+0xedf8>
  412640:	adrp	x1, 484000 <_obstack_memory_used@@Base+0x82fc>
  412644:	add	x0, x19, #0x1
  412648:	add	x1, x1, #0x91b
  41264c:	mov	w2, #0x3                   	// #3
  412650:	bl	479ca8 <feof@plt+0x76408>
  412654:	cbnz	w0, 41266c <feof@plt+0xedcc>
  412658:	ldrb	w8, [x19, #4]
  41265c:	cmp	w8, #0x2f
  412660:	b.ne	41266c <feof@plt+0xedcc>  // b.any
  412664:	add	x0, x19, #0x5
  412668:	b	412628 <feof@plt+0xed88>
  41266c:	sub	x2, x29, #0x80
  412670:	mov	w0, wzr
  412674:	mov	x1, x19
  412678:	bl	403650 <__xstat@plt>
  41267c:	ldur	w8, [x29, #-112]
  412680:	cmp	w0, #0x0
  412684:	cset	w9, ge  // ge = tcont
  412688:	and	w8, w8, #0xf000
  41268c:	cmp	w8, #0x4, lsl #12
  412690:	cset	w8, eq  // eq = none
  412694:	and	w0, w9, w8
  412698:	mov	sp, x29
  41269c:	ldp	x20, x19, [sp, #32]
  4126a0:	ldp	x22, x21, [sp, #16]
  4126a4:	ldp	x29, x30, [sp], #48
  4126a8:	ret
  4126ac:	sub	sp, sp, #0xc0
  4126b0:	stp	x29, x30, [sp, #96]
  4126b4:	stp	x28, x27, [sp, #112]
  4126b8:	stp	x26, x25, [sp, #128]
  4126bc:	stp	x24, x23, [sp, #144]
  4126c0:	stp	x22, x21, [sp, #160]
  4126c4:	stp	x20, x19, [sp, #176]
  4126c8:	add	x29, sp, #0x60
  4126cc:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4126d0:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4126d4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4126d8:	ldr	x9, [x9, #1496]
  4126dc:	ldr	x20, [x8, #1736]
  4126e0:	ldr	x8, [x10, #1504]
  4126e4:	mov	x21, x4
  4126e8:	mov	x22, x3
  4126ec:	mov	x24, x2
  4126f0:	mov	w19, w1
  4126f4:	mov	x25, x0
  4126f8:	mov	x27, xzr
  4126fc:	stp	x8, x9, [x29, #-16]
  412700:	cbz	x20, 412764 <feof@plt+0xeec4>
  412704:	tbz	w19, #0, 412764 <feof@plt+0xeec4>
  412708:	adrp	x1, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  41270c:	add	x1, x1, #0x60
  412710:	mov	x0, x20
  412714:	bl	403640 <strcmp@plt>
  412718:	cbz	w0, 412760 <feof@plt+0xeec0>
  41271c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  412720:	add	x1, x1, #0x3c0
  412724:	mov	x0, x20
  412728:	mov	x2, xzr
  41272c:	bl	4799ac <feof@plt+0x7610c>
  412730:	mov	x27, x0
  412734:	ldur	x0, [x29, #-8]
  412738:	mov	x1, x27
  41273c:	mov	x2, xzr
  412740:	bl	4799ac <feof@plt+0x7610c>
  412744:	stur	x0, [x29, #-8]
  412748:	ldur	x0, [x29, #-16]
  41274c:	mov	x1, x27
  412750:	mov	x2, xzr
  412754:	bl	4799ac <feof@plt+0x7610c>
  412758:	stur	x0, [x29, #-16]
  41275c:	b	412764 <feof@plt+0xeec4>
  412760:	mov	x27, xzr
  412764:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  412768:	ldr	x20, [x8, #1752]
  41276c:	mov	x28, xzr
  412770:	cbz	x20, 4127ac <feof@plt+0xef0c>
  412774:	tbz	w19, #0, 4127ac <feof@plt+0xef0c>
  412778:	adrp	x1, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  41277c:	add	x1, x1, #0x60
  412780:	mov	x0, x20
  412784:	bl	403640 <strcmp@plt>
  412788:	cbz	w0, 4127a8 <feof@plt+0xef08>
  41278c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  412790:	add	x1, x1, #0x3c0
  412794:	mov	x0, x20
  412798:	mov	x2, xzr
  41279c:	bl	4799ac <feof@plt+0x7610c>
  4127a0:	mov	x28, x0
  4127a4:	b	4127ac <feof@plt+0xef0c>
  4127a8:	mov	x28, xzr
  4127ac:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4127b0:	ldr	x0, [x8, #1744]
  4127b4:	cbz	x0, 4127d0 <feof@plt+0xef30>
  4127b8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4127bc:	add	x1, x1, #0x3c0
  4127c0:	mov	x2, xzr
  4127c4:	bl	4799ac <feof@plt+0x7610c>
  4127c8:	mov	x19, x0
  4127cc:	b	4127d4 <feof@plt+0xef34>
  4127d0:	mov	x19, xzr
  4127d4:	mov	x26, xzr
  4127d8:	mov	w23, wzr
  4127dc:	add	x8, x24, #0x1
  4127e0:	stur	wzr, [x29, #-20]
  4127e4:	str	x8, [sp, #8]
  4127e8:	stur	x19, [x29, #-32]
  4127ec:	str	x25, [sp, #16]
  4127f0:	cbz	x27, 412828 <feof@plt+0xef88>
  4127f4:	mov	x0, x27
  4127f8:	bl	4030b0 <strlen@plt>
  4127fc:	str	x0, [sp, #24]
  412800:	cbz	x28, 412830 <feof@plt+0xef90>
  412804:	mov	x0, x28
  412808:	bl	4030b0 <strlen@plt>
  41280c:	stur	x0, [x29, #-40]
  412810:	str	x27, [sp, #48]
  412814:	cbz	x19, 41283c <feof@plt+0xef9c>
  412818:	mov	x0, x19
  41281c:	bl	4030b0 <strlen@plt>
  412820:	mov	x20, x0
  412824:	b	412840 <feof@plt+0xefa0>
  412828:	str	xzr, [sp, #24]
  41282c:	cbnz	x28, 412804 <feof@plt+0xef64>
  412830:	stur	xzr, [x29, #-40]
  412834:	str	x27, [sp, #48]
  412838:	cbnz	x19, 412818 <feof@plt+0xef78>
  41283c:	mov	x20, xzr
  412840:	ldur	x0, [x29, #-8]
  412844:	str	x28, [sp, #40]
  412848:	bl	4030b0 <strlen@plt>
  41284c:	mov	x19, x0
  412850:	ldur	x0, [x29, #-16]
  412854:	bl	4030b0 <strlen@plt>
  412858:	mov	x24, x0
  41285c:	cbz	x26, 41286c <feof@plt+0xefcc>
  412860:	ldr	x28, [x25]
  412864:	cbnz	x28, 4128a0 <feof@plt+0xf000>
  412868:	b	4129c8 <feof@plt+0xf128>
  41286c:	ldur	x9, [x29, #-40]
  412870:	ldr	x10, [sp, #8]
  412874:	ldrsw	x8, [x25, #8]
  412878:	cmp	x19, x9
  41287c:	csel	x9, x19, x9, hi  // hi = pmore
  412880:	cmp	x9, x20
  412884:	csel	x9, x9, x20, hi  // hi = pmore
  412888:	add	x9, x10, x9
  41288c:	add	x0, x9, x8
  412890:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  412894:	mov	x26, x0
  412898:	ldr	x28, [x25]
  41289c:	cbz	x28, 4129c8 <feof@plt+0xf128>
  4128a0:	add	x19, x19, #0x1
  4128a4:	add	x8, x24, #0x1
  4128a8:	add	x27, x20, #0x1
  4128ac:	str	x8, [sp, #32]
  4128b0:	b	4128c4 <feof@plt+0xf024>
  4128b4:	ldr	w8, [x28, #16]
  4128b8:	cbz	w8, 412970 <feof@plt+0xf0d0>
  4128bc:	ldr	x28, [x28, #8]
  4128c0:	cbz	x28, 4129c8 <feof@plt+0xf128>
  4128c4:	ldr	x24, [x28]
  4128c8:	mov	x0, x24
  4128cc:	bl	4030b0 <strlen@plt>
  4128d0:	mov	x20, x0
  4128d4:	mov	x0, x26
  4128d8:	mov	x1, x24
  4128dc:	mov	x2, x20
  4128e0:	bl	402fc0 <memcpy@plt>
  4128e4:	tbnz	w23, #0, 4128b4 <feof@plt+0xf014>
  4128e8:	ldur	x1, [x29, #-8]
  4128ec:	add	x25, x26, x20
  4128f0:	mov	x0, x25
  4128f4:	mov	x2, x19
  4128f8:	bl	402fc0 <memcpy@plt>
  4128fc:	mov	x0, x26
  412900:	mov	x1, x21
  412904:	blr	x22
  412908:	cbnz	x0, 412a48 <feof@plt+0xf1a8>
  41290c:	ldr	w8, [x28, #16]
  412910:	cmp	w8, #0x2
  412914:	b.ne	41293c <feof@plt+0xf09c>  // b.any
  412918:	ldur	x1, [x29, #-16]
  41291c:	ldr	x2, [sp, #32]
  412920:	mov	x0, x25
  412924:	bl	402fc0 <memcpy@plt>
  412928:	mov	x0, x26
  41292c:	mov	x1, x21
  412930:	blr	x22
  412934:	cbnz	x0, 412a48 <feof@plt+0xf1a8>
  412938:	ldr	w8, [x28, #16]
  41293c:	cbnz	w8, 4128b4 <feof@plt+0xf014>
  412940:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  412944:	ldr	x8, [x8, #1744]
  412948:	cbz	x8, 4128b4 <feof@plt+0xf014>
  41294c:	ldur	x1, [x29, #-32]
  412950:	mov	x0, x25
  412954:	mov	x2, x27
  412958:	bl	402fc0 <memcpy@plt>
  41295c:	mov	x0, x26
  412960:	mov	x1, x21
  412964:	blr	x22
  412968:	cbz	x0, 4128b4 <feof@plt+0xf014>
  41296c:	b	412a48 <feof@plt+0xf1a8>
  412970:	ldr	w8, [x28, #24]
  412974:	ldur	w9, [x29, #-20]
  412978:	cmp	w8, #0x0
  41297c:	csel	w9, w9, w23, ne  // ne = any
  412980:	tbnz	w9, #0, 4128bc <feof@plt+0xf01c>
  412984:	ldr	x9, [sp, #24]
  412988:	ldur	x10, [x29, #-40]
  41298c:	add	x0, x26, x20
  412990:	csel	x9, x10, x9, ne  // ne = any
  412994:	cbz	x9, 4129b0 <feof@plt+0xf110>
  412998:	cmp	w8, #0x0
  41299c:	ldp	x10, x8, [sp, #40]
  4129a0:	add	x2, x9, #0x1
  4129a4:	csel	x1, x10, x8, ne  // ne = any
  4129a8:	bl	402fc0 <memcpy@plt>
  4129ac:	b	4129b4 <feof@plt+0xf114>
  4129b0:	strb	wzr, [x0]
  4129b4:	mov	x0, x26
  4129b8:	mov	x1, x21
  4129bc:	blr	x22
  4129c0:	cbz	x0, 4128bc <feof@plt+0xf01c>
  4129c4:	b	412a48 <feof@plt+0xf1a8>
  4129c8:	ldp	x19, x0, [sp, #40]
  4129cc:	orr	x8, x19, x0
  4129d0:	cbz	x8, 412aa8 <feof@plt+0xf208>
  4129d4:	cbz	x0, 412a24 <feof@plt+0xf184>
  4129d8:	bl	4031d0 <free@plt>
  4129dc:	ldur	x0, [x29, #-8]
  4129e0:	bl	4031d0 <free@plt>
  4129e4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4129e8:	ldr	x8, [x8, #1496]
  4129ec:	ldur	x0, [x29, #-16]
  4129f0:	stur	x8, [x29, #-8]
  4129f4:	bl	4031d0 <free@plt>
  4129f8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4129fc:	ldr	x8, [x8, #1504]
  412a00:	stur	x8, [x29, #-16]
  412a04:	ldr	x25, [sp, #16]
  412a08:	cbz	x19, 412a30 <feof@plt+0xf190>
  412a0c:	mov	x0, x19
  412a10:	bl	4031d0 <free@plt>
  412a14:	ldur	x19, [x29, #-32]
  412a18:	mov	x28, xzr
  412a1c:	mov	x27, xzr
  412a20:	b	4127f0 <feof@plt+0xef50>
  412a24:	mov	w23, #0x1                   	// #1
  412a28:	ldr	x25, [sp, #16]
  412a2c:	cbnz	x19, 412a0c <feof@plt+0xf16c>
  412a30:	ldur	x19, [x29, #-32]
  412a34:	mov	w8, #0x1                   	// #1
  412a38:	mov	x28, xzr
  412a3c:	mov	x27, xzr
  412a40:	stur	w8, [x29, #-20]
  412a44:	b	4127f0 <feof@plt+0xef50>
  412a48:	mov	x24, x0
  412a4c:	ldp	x19, x0, [sp, #40]
  412a50:	cbz	x0, 412a68 <feof@plt+0xf1c8>
  412a54:	bl	4031d0 <free@plt>
  412a58:	ldur	x0, [x29, #-8]
  412a5c:	bl	4031d0 <free@plt>
  412a60:	ldur	x0, [x29, #-16]
  412a64:	bl	4031d0 <free@plt>
  412a68:	cbz	x19, 412a74 <feof@plt+0xf1d4>
  412a6c:	mov	x0, x19
  412a70:	bl	4031d0 <free@plt>
  412a74:	cmp	x24, x26
  412a78:	b.eq	412a84 <feof@plt+0xf1e4>  // b.none
  412a7c:	mov	x0, x26
  412a80:	bl	4031d0 <free@plt>
  412a84:	mov	x0, x24
  412a88:	ldp	x20, x19, [sp, #176]
  412a8c:	ldp	x22, x21, [sp, #160]
  412a90:	ldp	x24, x23, [sp, #144]
  412a94:	ldp	x26, x25, [sp, #128]
  412a98:	ldp	x28, x27, [sp, #112]
  412a9c:	ldp	x29, x30, [sp, #96]
  412aa0:	add	sp, sp, #0xc0
  412aa4:	ret
  412aa8:	mov	x24, xzr
  412aac:	cmp	x24, x26
  412ab0:	b.ne	412a7c <feof@plt+0xf1dc>  // b.any
  412ab4:	b	412a84 <feof@plt+0xf1e4>
  412ab8:	sub	sp, sp, #0xb0
  412abc:	stp	x29, x30, [sp, #128]
  412ac0:	stp	x22, x21, [sp, #144]
  412ac4:	stp	x20, x19, [sp, #160]
  412ac8:	add	x29, sp, #0x80
  412acc:	mov	x20, x1
  412ad0:	mov	x19, x0
  412ad4:	bl	4030b0 <strlen@plt>
  412ad8:	ldr	x1, [x20]
  412adc:	ldrsw	x2, [x20, #16]
  412ae0:	mov	x21, x0
  412ae4:	add	x0, x19, x0
  412ae8:	bl	402fc0 <memcpy@plt>
  412aec:	ldpsw	x9, x8, [x20, #16]
  412af0:	add	x22, x21, x9
  412af4:	cbz	w8, 412b48 <feof@plt+0xf2a8>
  412af8:	ldr	x1, [x20, #8]
  412afc:	add	x0, x19, x22
  412b00:	add	x2, x8, #0x1
  412b04:	bl	402fc0 <memcpy@plt>
  412b08:	ldr	w21, [x20, #24]
  412b0c:	cmp	w21, #0x1
  412b10:	b.ne	412b38 <feof@plt+0xf298>  // b.any
  412b14:	mov	x2, sp
  412b18:	mov	w0, wzr
  412b1c:	mov	x1, x19
  412b20:	bl	403650 <__xstat@plt>
  412b24:	tbnz	w0, #31, 412b48 <feof@plt+0xf2a8>
  412b28:	ldr	w8, [sp, #16]
  412b2c:	and	w8, w8, #0xf000
  412b30:	cmp	w8, #0x4, lsl #12
  412b34:	b.eq	412b48 <feof@plt+0xf2a8>  // b.none
  412b38:	mov	x0, x19
  412b3c:	mov	w1, w21
  412b40:	bl	403290 <access@plt>
  412b44:	cbz	w0, 412b80 <feof@plt+0xf2e0>
  412b48:	strb	wzr, [x19, x22]
  412b4c:	ldr	w20, [x20, #24]
  412b50:	cmp	w20, #0x1
  412b54:	b.ne	412b88 <feof@plt+0xf2e8>  // b.any
  412b58:	mov	x2, sp
  412b5c:	mov	w0, wzr
  412b60:	mov	x1, x19
  412b64:	bl	403650 <__xstat@plt>
  412b68:	tbnz	w0, #31, 412b7c <feof@plt+0xf2dc>
  412b6c:	ldr	w8, [sp, #16]
  412b70:	and	w8, w8, #0xf000
  412b74:	cmp	w8, #0x4, lsl #12
  412b78:	b.ne	412b88 <feof@plt+0xf2e8>  // b.any
  412b7c:	mov	x19, xzr
  412b80:	mov	x0, x19
  412b84:	b	412b9c <feof@plt+0xf2fc>
  412b88:	mov	x0, x19
  412b8c:	mov	w1, w20
  412b90:	bl	403290 <access@plt>
  412b94:	cmp	w0, #0x0
  412b98:	csel	x0, x19, xzr, eq  // eq = none
  412b9c:	ldp	x20, x19, [sp, #160]
  412ba0:	ldp	x22, x21, [sp, #144]
  412ba4:	ldp	x29, x30, [sp, #128]
  412ba8:	add	sp, sp, #0xb0
  412bac:	ret
  412bb0:	sub	sp, sp, #0x70
  412bb4:	stp	x29, x30, [sp, #16]
  412bb8:	stp	x28, x27, [sp, #32]
  412bbc:	stp	x26, x25, [sp, #48]
  412bc0:	stp	x24, x23, [sp, #64]
  412bc4:	stp	x22, x21, [sp, #80]
  412bc8:	stp	x20, x19, [sp, #96]
  412bcc:	add	x29, sp, #0x10
  412bd0:	ldrb	w8, [x1, #24]
  412bd4:	mov	x20, x1
  412bd8:	mov	x19, x0
  412bdc:	cbz	w8, 412bec <feof@plt+0xf34c>
  412be0:	ldrb	w8, [x19]
  412be4:	cmp	w8, #0x2f
  412be8:	b.ne	412d84 <feof@plt+0xf4e4>  // b.any
  412bec:	ldr	x21, [x20, #16]
  412bf0:	cbz	x21, 412c14 <feof@plt+0xf374>
  412bf4:	mov	x0, x19
  412bf8:	bl	4030b0 <strlen@plt>
  412bfc:	ldr	x1, [x20, #8]
  412c00:	str	x0, [sp, #8]
  412c04:	add	x0, x19, x0
  412c08:	add	x2, x21, #0x1
  412c0c:	bl	402fc0 <memcpy@plt>
  412c10:	b	412c18 <feof@plt+0xf378>
  412c14:	str	xzr, [sp, #8]
  412c18:	mov	w1, #0x1                   	// #1
  412c1c:	mov	x0, x19
  412c20:	bl	412590 <feof@plt+0xecf0>
  412c24:	cbz	w0, 412d84 <feof@plt+0xf4e4>
  412c28:	ldr	x8, [x20]
  412c2c:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  412c30:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  412c34:	add	x23, x23, #0x508
  412c38:	ldrb	w26, [x8]
  412c3c:	add	x22, x22, #0x4f0
  412c40:	adrp	x25, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  412c44:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  412c48:	cbz	w26, 412c90 <feof@plt+0xf3f0>
  412c4c:	add	x27, x8, #0x1
  412c50:	mov	w28, #0x1                   	// #1
  412c54:	b	412c70 <feof@plt+0xf3d0>
  412c58:	add	x9, x8, #0x1
  412c5c:	str	x9, [x25, #1288]
  412c60:	strb	w26, [x8]
  412c64:	strb	w28, [x24, #1988]
  412c68:	ldrb	w26, [x27], #1
  412c6c:	cbz	w26, 412c98 <feof@plt+0xf3f8>
  412c70:	ldp	x8, x9, [x23]
  412c74:	cmp	x9, x8
  412c78:	b.ne	412c58 <feof@plt+0xf3b8>  // b.any
  412c7c:	mov	w1, #0x1                   	// #1
  412c80:	mov	x0, x22
  412c84:	bl	47bae8 <_obstack_newchunk@@Base>
  412c88:	ldr	x8, [x22, #24]
  412c8c:	b	412c58 <feof@plt+0xf3b8>
  412c90:	mov	w8, #0x1                   	// #1
  412c94:	strb	w8, [x24, #1988]
  412c98:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  412c9c:	ldr	w8, [x27, #1944]
  412ca0:	cbz	w8, 412ca8 <feof@plt+0xf408>
  412ca4:	bl	4105cc <feof@plt+0xcd2c>
  412ca8:	ldrb	w8, [x20, #25]
  412cac:	cbz	w8, 412cc4 <feof@plt+0xf424>
  412cb0:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  412cb4:	add	x0, x0, #0x9d0
  412cb8:	mov	w1, wzr
  412cbc:	mov	x2, xzr
  412cc0:	bl	40c344 <feof@plt+0x8aa4>
  412cc4:	ldr	x8, [x20, #16]
  412cc8:	cbz	x8, 412cd4 <feof@plt+0xf434>
  412ccc:	mov	w9, wzr
  412cd0:	b	412cf4 <feof@plt+0xf454>
  412cd4:	mov	x0, x19
  412cd8:	bl	4030b0 <strlen@plt>
  412cdc:	sub	x8, x0, #0x1
  412ce0:	ldrb	w9, [x19, x8]
  412ce4:	str	x0, [sp, #8]
  412ce8:	cmp	w9, #0x2f
  412cec:	b.ne	412cf4 <feof@plt+0xf454>  // b.any
  412cf0:	strb	wzr, [x19, x8]
  412cf4:	ldrb	w28, [x19]
  412cf8:	str	w9, [sp, #4]
  412cfc:	cbz	w28, 412d44 <feof@plt+0xf4a4>
  412d00:	add	x26, x19, #0x1
  412d04:	mov	w21, #0x1                   	// #1
  412d08:	b	412d24 <feof@plt+0xf484>
  412d0c:	add	x9, x8, #0x1
  412d10:	str	x9, [x25, #1288]
  412d14:	strb	w28, [x8]
  412d18:	strb	w21, [x24, #1988]
  412d1c:	ldrb	w28, [x26], #1
  412d20:	cbz	w28, 412d4c <feof@plt+0xf4ac>
  412d24:	ldp	x8, x9, [x23]
  412d28:	cmp	x9, x8
  412d2c:	b.ne	412d0c <feof@plt+0xf46c>  // b.any
  412d30:	mov	w1, #0x1                   	// #1
  412d34:	mov	x0, x22
  412d38:	bl	47bae8 <_obstack_newchunk@@Base>
  412d3c:	ldr	x8, [x22, #24]
  412d40:	b	412d0c <feof@plt+0xf46c>
  412d44:	mov	w8, #0x1                   	// #1
  412d48:	strb	w8, [x24, #1988]
  412d4c:	ldr	w8, [x27, #1944]
  412d50:	cbz	w8, 412d58 <feof@plt+0xf4b8>
  412d54:	bl	4105cc <feof@plt+0xcd2c>
  412d58:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  412d5c:	add	x0, x0, #0x9d0
  412d60:	mov	w1, wzr
  412d64:	mov	x2, xzr
  412d68:	bl	40c344 <feof@plt+0x8aa4>
  412d6c:	ldr	x8, [x20, #16]
  412d70:	cbnz	x8, 412d84 <feof@plt+0xf4e4>
  412d74:	ldr	x8, [sp, #8]
  412d78:	ldr	w9, [sp, #4]
  412d7c:	add	x8, x8, x19
  412d80:	sturb	w9, [x8, #-1]
  412d84:	ldp	x20, x19, [sp, #96]
  412d88:	ldp	x22, x21, [sp, #80]
  412d8c:	ldp	x24, x23, [sp, #64]
  412d90:	ldp	x26, x25, [sp, #48]
  412d94:	ldp	x28, x27, [sp, #32]
  412d98:	ldp	x29, x30, [sp, #16]
  412d9c:	mov	x0, xzr
  412da0:	add	sp, sp, #0x70
  412da4:	ret
  412da8:	stp	x29, x30, [sp, #-96]!
  412dac:	str	x27, [sp, #16]
  412db0:	stp	x26, x25, [sp, #32]
  412db4:	stp	x24, x23, [sp, #48]
  412db8:	stp	x22, x21, [sp, #64]
  412dbc:	stp	x20, x19, [sp, #80]
  412dc0:	mov	x29, sp
  412dc4:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  412dc8:	ldrb	w8, [x24, #2032]
  412dcc:	tbz	w8, #0, 413248 <feof@plt+0xf9a8>
  412dd0:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  412dd4:	ldr	x8, [x23, #2040]
  412dd8:	strb	wzr, [x24, #2032]
  412ddc:	cbz	x8, 413210 <feof@plt+0xf970>
  412de0:	ldr	w25, [x8, #4]
  412de4:	cbz	w25, 413210 <feof@plt+0xf970>
  412de8:	add	w8, w25, #0x1
  412dec:	lsl	x8, x8, #3
  412df0:	add	x8, x8, #0xf
  412df4:	mov	x9, sp
  412df8:	and	x8, x8, #0xffffffff0
  412dfc:	sub	x21, x9, x8
  412e00:	mov	sp, x21
  412e04:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  412e08:	add	x0, x0, #0x23b
  412e0c:	bl	47b980 <feof@plt+0x780e0>
  412e10:	mov	x19, x0
  412e14:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x42fc>
  412e18:	add	x0, x0, #0xf22
  412e1c:	mov	x1, x19
  412e20:	mov	x2, xzr
  412e24:	bl	4799ac <feof@plt+0x7610c>
  412e28:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  412e2c:	mov	x20, x0
  412e30:	add	x1, x1, #0x354
  412e34:	mov	x0, x19
  412e38:	bl	403620 <fopen@plt>
  412e3c:	ldr	x8, [x23, #2040]
  412e40:	mov	x22, x0
  412e44:	cmp	w25, #0x4
  412e48:	mov	x9, xzr
  412e4c:	b.cc	412eac <feof@plt+0xf60c>  // b.lo, b.ul, b.last
  412e50:	lsl	x9, x25, #3
  412e54:	add	x10, x9, x8
  412e58:	add	x10, x10, #0x8
  412e5c:	cmp	x10, x21
  412e60:	b.ls	412e7c <feof@plt+0xf5dc>  // b.plast
  412e64:	add	x9, x21, x9
  412e68:	add	x10, x8, #0x8
  412e6c:	cmp	x10, x9
  412e70:	b.cs	412e7c <feof@plt+0xf5dc>  // b.hs, b.nlast
  412e74:	mov	x9, xzr
  412e78:	b	412eac <feof@plt+0xf60c>
  412e7c:	and	x9, x25, #0xfffffffc
  412e80:	add	x10, x8, #0x18
  412e84:	add	x11, x21, #0x10
  412e88:	mov	x12, x9
  412e8c:	ldp	q0, q1, [x10, #-16]
  412e90:	add	x10, x10, #0x20
  412e94:	subs	x12, x12, #0x4
  412e98:	stp	q0, q1, [x11, #-16]
  412e9c:	add	x11, x11, #0x20
  412ea0:	b.ne	412e8c <feof@plt+0xf5ec>  // b.any
  412ea4:	cmp	x9, x25
  412ea8:	b.eq	412ed0 <feof@plt+0xf630>  // b.none
  412eac:	lsl	x10, x9, #3
  412eb0:	add	x11, x10, x8
  412eb4:	add	x10, x21, x10
  412eb8:	add	x11, x11, #0x8
  412ebc:	sub	x9, x25, x9
  412ec0:	ldr	x12, [x11], #8
  412ec4:	subs	x9, x9, #0x1
  412ec8:	str	x12, [x10], #8
  412ecc:	b.ne	412ec0 <feof@plt+0xf620>  // b.any
  412ed0:	str	xzr, [x21, x25, lsl #3]
  412ed4:	str	wzr, [x8, #4]
  412ed8:	cbz	x22, 41325c <feof@plt+0xf9bc>
  412edc:	mov	x0, x21
  412ee0:	mov	x1, x22
  412ee4:	bl	4792e4 <feof@plt+0x75a44>
  412ee8:	cbnz	w0, 413274 <feof@plt+0xf9d4>
  412eec:	mov	x0, x22
  412ef0:	bl	403150 <fclose@plt>
  412ef4:	cmn	w0, #0x1
  412ef8:	b.eq	41328c <feof@plt+0xf9ec>  // b.none
  412efc:	ldrb	w8, [x24, #2032]
  412f00:	cmp	w8, #0x1
  412f04:	b.ne	412f54 <feof@plt+0xf6b4>  // b.any
  412f08:	ldr	x24, [x23, #2040]
  412f0c:	cbz	x24, 412fa4 <feof@plt+0xf704>
  412f10:	ldp	w8, w9, [x24]
  412f14:	and	w0, w8, #0x7fffffff
  412f18:	cmp	w0, w9
  412f1c:	b.ne	412fc4 <feof@plt+0xf724>  // b.any
  412f20:	tbnz	w8, #31, 412fd0 <feof@plt+0xf730>
  412f24:	add	w1, w0, #0x1
  412f28:	bl	425fbc <feof@plt+0x2271c>
  412f2c:	ldr	x8, [x23, #2040]
  412f30:	mov	w9, w0
  412f34:	lsl	x9, x9, #3
  412f38:	mov	w21, w0
  412f3c:	add	x1, x9, #0x8
  412f40:	mov	w22, wzr
  412f44:	cbz	x8, 413230 <feof@plt+0xf990>
  412f48:	ldr	w26, [x8, #4]
  412f4c:	mov	w25, wzr
  412f50:	b	413000 <feof@plt+0xf760>
  412f54:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  412f58:	ldr	x23, [x24, #1184]
  412f5c:	cbz	x23, 412fb4 <feof@plt+0xf714>
  412f60:	ldp	w8, w9, [x23]
  412f64:	and	w0, w8, #0x7fffffff
  412f68:	cmp	w0, w9
  412f6c:	b.ne	4131d4 <feof@plt+0xf934>  // b.any
  412f70:	tbnz	w8, #31, 413044 <feof@plt+0xf7a4>
  412f74:	add	w1, w0, #0x1
  412f78:	bl	425fbc <feof@plt+0x2271c>
  412f7c:	ldr	x8, [x24, #1184]
  412f80:	mov	w9, w0
  412f84:	lsl	x9, x9, #3
  412f88:	mov	w21, w0
  412f8c:	add	x1, x9, #0x8
  412f90:	mov	w22, wzr
  412f94:	cbz	x8, 41323c <feof@plt+0xf99c>
  412f98:	ldr	w26, [x8, #4]
  412f9c:	mov	w25, wzr
  412fa0:	b	413074 <feof@plt+0xf7d4>
  412fa4:	mov	w22, wzr
  412fa8:	mov	w25, wzr
  412fac:	mov	w21, #0x4                   	// #4
  412fb0:	b	412fec <feof@plt+0xf74c>
  412fb4:	mov	w22, wzr
  412fb8:	mov	w25, wzr
  412fbc:	mov	w21, #0x4                   	// #4
  412fc0:	b	413060 <feof@plt+0xf7c0>
  412fc4:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  412fc8:	add	x27, x27, #0x7f8
  412fcc:	b	4131dc <feof@plt+0xf93c>
  412fd0:	str	xzr, [x23, #2040]
  412fd4:	ldr	w22, [x24, #4]
  412fd8:	mov	w8, #0x4                   	// #4
  412fdc:	mov	w25, #0x1                   	// #1
  412fe0:	add	w9, w22, #0x1
  412fe4:	cmp	w9, #0x4
  412fe8:	csinc	w21, w8, w22, ls  // ls = plast
  412fec:	mov	w9, w21
  412ff0:	lsl	x9, x9, #3
  412ff4:	mov	x8, xzr
  412ff8:	mov	w26, wzr
  412ffc:	add	x1, x9, #0x8
  413000:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413004:	mov	x0, x8
  413008:	add	x27, x27, #0x7f8
  41300c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  413010:	and	w8, w21, #0x7fffffff
  413014:	str	x0, [x27]
  413018:	stp	w8, w26, [x0]
  41301c:	cbz	w25, 4131dc <feof@plt+0xf93c>
  413020:	ldr	x8, [x23, #2040]
  413024:	cbz	w22, 41313c <feof@plt+0xf89c>
  413028:	sub	w12, w22, #0x1
  41302c:	add	x9, x24, #0x8
  413030:	cmp	w12, #0x3
  413034:	add	x10, x8, #0x8
  413038:	b.cs	4130b8 <feof@plt+0xf818>  // b.hs, b.nlast
  41303c:	mov	w11, w22
  413040:	b	41312c <feof@plt+0xf88c>
  413044:	str	xzr, [x24, #1184]
  413048:	ldr	w22, [x23, #4]
  41304c:	mov	w8, #0x4                   	// #4
  413050:	mov	w25, #0x1                   	// #1
  413054:	add	w9, w22, #0x1
  413058:	cmp	w9, #0x4
  41305c:	csinc	w21, w8, w22, ls  // ls = plast
  413060:	mov	w9, w21
  413064:	lsl	x9, x9, #3
  413068:	mov	x8, xzr
  41306c:	mov	w26, wzr
  413070:	add	x1, x9, #0x8
  413074:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413078:	mov	x0, x8
  41307c:	add	x27, x27, #0x4a0
  413080:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  413084:	and	w8, w21, #0x7fffffff
  413088:	str	x0, [x27]
  41308c:	stp	w8, w26, [x0]
  413090:	cbz	w25, 4131dc <feof@plt+0xf93c>
  413094:	ldr	x8, [x24, #1184]
  413098:	cbz	w22, 4131d0 <feof@plt+0xf930>
  41309c:	sub	w12, w22, #0x1
  4130a0:	add	x9, x23, #0x8
  4130a4:	cmp	w12, #0x3
  4130a8:	add	x10, x8, #0x8
  4130ac:	b.cs	41314c <feof@plt+0xf8ac>  // b.hs, b.nlast
  4130b0:	mov	w11, w22
  4130b4:	b	4131c0 <feof@plt+0xf920>
  4130b8:	lsl	x11, x12, #3
  4130bc:	add	x13, x24, x11
  4130c0:	add	x13, x13, #0x10
  4130c4:	cmp	x10, x13
  4130c8:	b.cs	4130e0 <feof@plt+0xf840>  // b.hs, b.nlast
  4130cc:	add	x11, x8, x11
  4130d0:	add	x11, x11, #0x10
  4130d4:	cmp	x9, x11
  4130d8:	mov	w11, w22
  4130dc:	b.cc	41312c <feof@plt+0xf88c>  // b.lo, b.ul, b.last
  4130e0:	add	x12, x12, #0x1
  4130e4:	and	x13, x12, #0x1fffffffc
  4130e8:	lsl	x9, x13, #3
  4130ec:	add	x10, x24, x9
  4130f0:	add	x15, x8, x9
  4130f4:	add	x14, x8, #0x18
  4130f8:	sub	w11, w22, w13
  4130fc:	add	x9, x10, #0x8
  413100:	add	x10, x15, #0x8
  413104:	add	x15, x24, #0x18
  413108:	mov	x16, x13
  41310c:	ldp	q0, q1, [x15, #-16]
  413110:	subs	x16, x16, #0x4
  413114:	add	x15, x15, #0x20
  413118:	stp	q0, q1, [x14, #-16]
  41311c:	add	x14, x14, #0x20
  413120:	b.ne	41310c <feof@plt+0xf86c>  // b.any
  413124:	cmp	x12, x13
  413128:	b.eq	41313c <feof@plt+0xf89c>  // b.none
  41312c:	ldr	x12, [x9], #8
  413130:	subs	w11, w11, #0x1
  413134:	str	x12, [x10], #8
  413138:	b.ne	41312c <feof@plt+0xf88c>  // b.any
  41313c:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413140:	str	w22, [x8, #4]
  413144:	add	x27, x27, #0x7f8
  413148:	b	4131dc <feof@plt+0xf93c>
  41314c:	lsl	x11, x12, #3
  413150:	add	x13, x23, x11
  413154:	add	x13, x13, #0x10
  413158:	cmp	x10, x13
  41315c:	b.cs	413174 <feof@plt+0xf8d4>  // b.hs, b.nlast
  413160:	add	x11, x8, x11
  413164:	add	x11, x11, #0x10
  413168:	cmp	x9, x11
  41316c:	mov	w11, w22
  413170:	b.cc	4131c0 <feof@plt+0xf920>  // b.lo, b.ul, b.last
  413174:	add	x12, x12, #0x1
  413178:	and	x13, x12, #0x1fffffffc
  41317c:	lsl	x9, x13, #3
  413180:	add	x10, x23, x9
  413184:	add	x15, x8, x9
  413188:	add	x14, x8, #0x18
  41318c:	sub	w11, w22, w13
  413190:	add	x9, x10, #0x8
  413194:	add	x10, x15, #0x8
  413198:	add	x15, x23, #0x18
  41319c:	mov	x16, x13
  4131a0:	ldp	q0, q1, [x15, #-16]
  4131a4:	subs	x16, x16, #0x4
  4131a8:	add	x15, x15, #0x20
  4131ac:	stp	q0, q1, [x14, #-16]
  4131b0:	add	x14, x14, #0x20
  4131b4:	b.ne	4131a0 <feof@plt+0xf900>  // b.any
  4131b8:	cmp	x12, x13
  4131bc:	b.eq	4131d0 <feof@plt+0xf930>  // b.none
  4131c0:	ldr	x12, [x9], #8
  4131c4:	subs	w11, w11, #0x1
  4131c8:	str	x12, [x10], #8
  4131cc:	b.ne	4131c0 <feof@plt+0xf920>  // b.any
  4131d0:	str	w22, [x8, #4]
  4131d4:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4131d8:	add	x27, x27, #0x4a0
  4131dc:	ldr	x8, [x27]
  4131e0:	mov	x0, x19
  4131e4:	ldr	w9, [x8, #4]
  4131e8:	add	w10, w9, #0x1
  4131ec:	add	x9, x8, x9, lsl #3
  4131f0:	str	w10, [x8, #4]
  4131f4:	str	x20, [x9, #8]
  4131f8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4131fc:	ldr	w8, [x8, #1616]
  413200:	cmp	w8, #0x0
  413204:	cset	w1, eq  // eq = none
  413208:	mov	w2, w1
  41320c:	bl	4047e0 <feof@plt+0xf40>
  413210:	mov	sp, x29
  413214:	ldp	x20, x19, [sp, #80]
  413218:	ldp	x22, x21, [sp, #64]
  41321c:	ldp	x24, x23, [sp, #48]
  413220:	ldp	x26, x25, [sp, #32]
  413224:	ldr	x27, [sp, #16]
  413228:	ldp	x29, x30, [sp], #96
  41322c:	ret
  413230:	mov	w25, wzr
  413234:	mov	w26, wzr
  413238:	b	413000 <feof@plt+0xf760>
  41323c:	mov	w25, wzr
  413240:	mov	w26, wzr
  413244:	b	413074 <feof@plt+0xf7d4>
  413248:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  41324c:	ldr	w0, [x8, #400]
  413250:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  413254:	add	x1, x1, #0xefb
  413258:	bl	42c008 <feof@plt+0x28768>
  41325c:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  413260:	ldr	w0, [x8, #400]
  413264:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  413268:	add	x1, x1, #0xf24
  41326c:	mov	x2, x19
  413270:	bl	42c008 <feof@plt+0x28768>
  413274:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  413278:	ldr	w0, [x8, #400]
  41327c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  413280:	add	x1, x1, #0xf4e
  413284:	mov	x2, x19
  413288:	bl	42c008 <feof@plt+0x28768>
  41328c:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  413290:	ldr	w0, [x8, #400]
  413294:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  413298:	add	x1, x1, #0xf7c
  41329c:	mov	x2, x19
  4132a0:	bl	42c008 <feof@plt+0x28768>
  4132a4:	sub	sp, sp, #0xb0
  4132a8:	stp	x29, x30, [sp, #80]
  4132ac:	stp	x28, x27, [sp, #96]
  4132b0:	stp	x26, x25, [sp, #112]
  4132b4:	stp	x24, x23, [sp, #128]
  4132b8:	stp	x22, x21, [sp, #144]
  4132bc:	stp	x20, x19, [sp, #160]
  4132c0:	add	x29, sp, #0x50
  4132c4:	adrp	x21, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  4132c8:	mov	w11, #0xf                   	// #15
  4132cc:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x12fc>
  4132d0:	mov	x23, x0
  4132d4:	mov	w28, wzr
  4132d8:	mov	w12, wzr
  4132dc:	mov	w13, wzr
  4132e0:	mov	w26, wzr
  4132e4:	mov	w25, #0x1                   	// #1
  4132e8:	add	x21, x21, #0x4a2
  4132ec:	mov	w22, #0x204                 	// #516
  4132f0:	movk	w11, #0x24, lsl #16
  4132f4:	add	x20, x20, #0xad4
  4132f8:	mov	w8, #0x1                   	// #1
  4132fc:	stur	xzr, [x29, #-24]
  413300:	stp	xzr, xzr, [sp, #8]
  413304:	str	xzr, [sp, #40]
  413308:	stur	wzr, [x29, #-28]
  41330c:	stur	wzr, [x29, #-12]
  413310:	str	x0, [sp]
  413314:	stur	w8, [x29, #-32]
  413318:	b	4133ac <feof@plt+0xfb0c>
  41331c:	mov	x0, x23
  413320:	mov	w1, wzr
  413324:	mov	x2, xzr
  413328:	bl	40c344 <feof@plt+0x8aa4>
  41332c:	tbnz	w0, #31, 413ab8 <feof@plt+0x10218>
  413330:	mov	x0, x23
  413334:	bl	4031d0 <free@plt>
  413338:	ldrb	w3, [x27]
  41333c:	ldur	w26, [x29, #-8]
  413340:	ldur	w11, [x29, #-28]
  413344:	ldur	x10, [x29, #-24]
  413348:	cmp	w3, #0x3b
  41334c:	cset	w8, eq  // eq = none
  413350:	cset	w9, ne  // ne = any
  413354:	csel	x10, xzr, x10, eq  // eq = none
  413358:	stur	x10, [x29, #-24]
  41335c:	ldr	x10, [sp, #16]
  413360:	and	w9, w11, w9
  413364:	mov	w12, wzr
  413368:	mov	w13, #0x1                   	// #1
  41336c:	csel	x10, xzr, x10, eq  // eq = none
  413370:	str	x10, [sp, #16]
  413374:	and	w10, w11, w8
  413378:	ldur	w11, [x29, #-32]
  41337c:	orr	w26, w26, w10
  413380:	orr	w11, w11, w8
  413384:	stp	w11, w9, [x29, #-32]
  413388:	ldur	w11, [x29, #-12]
  41338c:	orr	w11, w11, w8
  413390:	stur	w11, [x29, #-12]
  413394:	mov	w25, #0x1                   	// #1
  413398:	mov	w11, #0xf                   	// #15
  41339c:	cmp	w3, #0x7d
  4133a0:	add	x23, x27, #0x1
  4133a4:	movk	w11, #0x24, lsl #16
  4133a8:	b.eq	413ac4 <feof@plt+0x10224>  // b.none
  4133ac:	tbnz	w28, #0, 413b3c <feof@plt+0x1029c>
  4133b0:	sturb	wzr, [x29, #-4]
  4133b4:	b	4133bc <feof@plt+0xfb1c>
  4133b8:	add	x23, x23, #0x1
  4133bc:	ldrb	w8, [x23]
  4133c0:	cmp	w8, #0x9
  4133c4:	b.eq	4133b8 <feof@plt+0xfb18>  // b.none
  4133c8:	cmp	w8, #0x20
  4133cc:	b.eq	4133b8 <feof@plt+0xfb18>  // b.none
  4133d0:	cmp	w8, #0x21
  4133d4:	stur	w26, [x29, #-8]
  4133d8:	b.ne	4133e8 <feof@plt+0xfb48>  // b.any
  4133dc:	add	x23, x23, #0x1
  4133e0:	mov	w27, #0x1                   	// #1
  4133e4:	b	4133ec <feof@plt+0xfb4c>
  4133e8:	mov	w27, wzr
  4133ec:	add	x26, x23, #0x1
  4133f0:	ldurb	w8, [x26, #-1]
  4133f4:	sub	w8, w8, #0x9
  4133f8:	cmp	w8, #0x25
  4133fc:	b.hi	413418 <feof@plt+0xfb78>  // b.pmore
  413400:	adr	x9, 413410 <feof@plt+0xfb70>
  413404:	ldrb	w10, [x20, x8]
  413408:	add	x9, x9, x10, lsl #2
  41340c:	br	x9
  413410:	add	x26, x26, #0x1
  413414:	b	4133f0 <feof@plt+0xfb50>
  413418:	mov	w15, wzr
  41341c:	mov	w14, wzr
  413420:	sub	x26, x26, #0x1
  413424:	b	413498 <feof@plt+0xfbf8>
  413428:	mov	w14, wzr
  41342c:	mov	w15, #0x1                   	// #1
  413430:	b	413498 <feof@plt+0xfbf8>
  413434:	mov	w15, wzr
  413438:	mov	w14, #0x1                   	// #1
  41343c:	b	413498 <feof@plt+0xfbf8>
  413440:	mov	x8, x26
  413444:	ldrb	w9, [x8], #-1
  413448:	cmp	w9, #0x3a
  41344c:	b.ne	41348c <feof@plt+0xfbec>  // b.any
  413450:	add	x0, x26, #0x1
  413454:	sub	x1, x29, #0x4
  413458:	mov	x2, xzr
  41345c:	mov	w19, w12
  413460:	mov	w23, w13
  413464:	bl	413b58 <feof@plt+0x102b8>
  413468:	mov	w13, w23
  41346c:	mov	w12, w19
  413470:	mov	x23, x0
  413474:	mov	x24, xzr
  413478:	mov	x25, xzr
  41347c:	mov	w15, wzr
  413480:	mov	w14, wzr
  413484:	mov	w26, wzr
  413488:	b	413594 <feof@plt+0xfcf4>
  41348c:	mov	w15, wzr
  413490:	mov	w14, wzr
  413494:	mov	x26, x8
  413498:	mov	w24, wzr
  41349c:	mov	x23, x26
  4134a0:	b	4134a8 <feof@plt+0xfc08>
  4134a4:	add	x23, x23, #0x1
  4134a8:	ldrb	w8, [x23]
  4134ac:	ldrh	w9, [x21, x8, lsl #1]
  4134b0:	tst	w9, w22
  4134b4:	b.eq	4134d0 <feof@plt+0xfc30>  // b.none
  4134b8:	cmp	w8, #0x5c
  4134bc:	b.ne	4134a4 <feof@plt+0xfc04>  // b.any
  4134c0:	ldrb	w8, [x23, #1]!
  4134c4:	cbz	w8, 413b0c <feof@plt+0x1026c>
  4134c8:	add	w24, w24, #0x1
  4134cc:	b	4134a4 <feof@plt+0xfc04>
  4134d0:	sub	w9, w8, #0x2b
  4134d4:	cmp	w9, #0x31
  4134d8:	b.hi	4134f0 <feof@plt+0xfc50>  // b.pmore
  4134dc:	lsl	x10, x25, x9
  4134e0:	tst	x10, x11
  4134e4:	b.ne	4134a4 <feof@plt+0xfc04>  // b.any
  4134e8:	cmp	x9, #0x31
  4134ec:	b.eq	4134c0 <feof@plt+0xfc20>  // b.none
  4134f0:	cbz	w24, 413580 <feof@plt+0xfce0>
  4134f4:	ldr	x0, [sp, #40]
  4134f8:	mov	w19, w27
  4134fc:	mov	w28, w13
  413500:	mov	w27, w12
  413504:	stp	w15, w14, [sp, #28]
  413508:	cbz	x0, 41351c <feof@plt+0xfc7c>
  41350c:	ldr	x8, [sp, #8]
  413510:	cmp	x0, x8
  413514:	b.eq	41351c <feof@plt+0xfc7c>  // b.none
  413518:	bl	4031d0 <free@plt>
  41351c:	add	x8, x26, w24, sxtw
  413520:	sub	x8, x23, x8
  413524:	add	x0, x8, #0x1
  413528:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  41352c:	cmp	x26, x23
  413530:	mov	x24, x0
  413534:	mov	x25, x0
  413538:	b.eq	413560 <feof@plt+0xfcc0>  // b.none
  41353c:	mov	x25, x24
  413540:	mov	x8, x26
  413544:	ldrb	w9, [x8], #1
  413548:	cmp	w9, #0x5c
  41354c:	csel	x26, x8, x26, eq  // eq = none
  413550:	ldrb	w8, [x26], #1
  413554:	cmp	x26, x23
  413558:	strb	w8, [x25], #1
  41355c:	b.ne	413540 <feof@plt+0xfca0>  // b.any
  413560:	strb	wzr, [x25]
  413564:	ldrb	w8, [x23]
  413568:	ldp	w15, w14, [sp, #28]
  41356c:	mov	w12, w27
  413570:	mov	w13, w28
  413574:	mov	w27, w19
  413578:	str	x24, [sp, #40]
  41357c:	b	413588 <feof@plt+0xfce8>
  413580:	mov	x24, x26
  413584:	mov	x25, x23
  413588:	cmp	w8, #0x2a
  41358c:	cset	w26, eq  // eq = none
  413590:	cinc	x23, x23, eq  // eq = none
  413594:	ldrb	w3, [x23]
  413598:	cmp	w3, #0x39
  41359c:	b.gt	4135b8 <feof@plt+0xfd18>
  4135a0:	cmp	w3, #0x9
  4135a4:	b.eq	4135b0 <feof@plt+0xfd10>  // b.none
  4135a8:	cmp	w3, #0x20
  4135ac:	b.ne	41361c <feof@plt+0xfd7c>  // b.any
  4135b0:	add	x23, x23, #0x1
  4135b4:	b	413594 <feof@plt+0xfcf4>
  4135b8:	cmp	w3, #0x3a
  4135bc:	b.eq	4135c8 <feof@plt+0xfd28>  // b.none
  4135c0:	cmp	w3, #0x7c
  4135c4:	b.ne	413658 <feof@plt+0xfdb8>  // b.any
  4135c8:	tbnz	w12, #0, 413b40 <feof@plt+0x102a0>
  4135cc:	cbz	x24, 413628 <feof@plt+0xfd88>
  4135d0:	cmp	x24, x25
  4135d4:	b.ne	413628 <feof@plt+0xfd88>  // b.any
  4135d8:	ldur	w8, [x29, #-12]
  4135dc:	ldur	w9, [x29, #-28]
  4135e0:	orn	w8, w9, w8
  4135e4:	tbnz	w8, #0, 413b40 <feof@plt+0x102a0>
  4135e8:	cmp	w3, #0x7c
  4135ec:	cset	w8, eq  // eq = none
  4135f0:	orr	w8, w27, w8
  4135f4:	orr	w8, w15, w8
  4135f8:	orr	w8, w14, w8
  4135fc:	orr	w8, w26, w8
  413600:	mov	w25, #0x1                   	// #1
  413604:	tbnz	w8, #0, 413b40 <feof@plt+0x102a0>
  413608:	ldur	w26, [x29, #-8]
  41360c:	stur	wzr, [x29, #-32]
  413610:	mov	w28, #0x1                   	// #1
  413614:	eor	w8, w26, #0x1
  413618:	b	4138ec <feof@plt+0x1004c>
  41361c:	cmp	w3, #0x26
  413620:	b.eq	413660 <feof@plt+0xfdc0>  // b.none
  413624:	b	413b40 <feof@plt+0x102a0>
  413628:	orr	w8, w15, w14
  41362c:	and	w8, w8, w26
  413630:	tbnz	w8, #0, 413b40 <feof@plt+0x102a0>
  413634:	ldur	w8, [x29, #-32]
  413638:	and	w8, w8, w26
  41363c:	stur	w8, [x29, #-32]
  413640:	ldur	w8, [x29, #-28]
  413644:	tbz	w8, #0, 4137c0 <feof@plt+0xff20>
  413648:	ldur	w26, [x29, #-8]
  41364c:	mov	w28, wzr
  413650:	mov	w8, #0x1                   	// #1
  413654:	b	4138e8 <feof@plt+0x10048>
  413658:	cmp	w3, #0x7d
  41365c:	b.ne	413b40 <feof@plt+0x102a0>  // b.any
  413660:	cmp	x24, x25
  413664:	b.eq	413b40 <feof@plt+0x102a0>  // b.none
  413668:	ldur	w8, [x29, #-12]
  41366c:	orr	w8, w13, w8
  413670:	orr	w8, w8, w27
  413674:	orr	w8, w8, w15
  413678:	orr	w8, w8, w14
  41367c:	tbnz	w8, #0, 413b40 <feof@plt+0x102a0>
  413680:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413684:	ldr	w9, [x8, #1560]
  413688:	sub	x8, x25, x24
  41368c:	cmp	w26, #0x0
  413690:	csinv	w25, w8, wzr, ne  // ne = any
  413694:	cmp	w9, #0x1
  413698:	b.lt	41378c <feof@plt+0xfeec>  // b.tstop
  41369c:	str	x23, [sp, #32]
  4136a0:	mov	x23, xzr
  4136a4:	mov	x27, xzr
  4136a8:	sxtw	x28, w8
  4136ac:	b	4136d0 <feof@plt+0xfe30>
  4136b0:	ldrb	w8, [x19, x28]
  4136b4:	cbz	w8, 4136f4 <feof@plt+0xfe54>
  4136b8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4136bc:	ldrsw	x8, [x8, #1560]
  4136c0:	add	x27, x27, #0x1
  4136c4:	add	x23, x23, #0x18
  4136c8:	cmp	x27, x8
  4136cc:	b.ge	41371c <feof@plt+0xfe7c>  // b.tcont
  4136d0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4136d4:	ldr	x8, [x8, #1592]
  4136d8:	mov	x1, x24
  4136dc:	mov	x2, x28
  4136e0:	ldr	x19, [x8, x23]
  4136e4:	mov	x0, x19
  4136e8:	bl	403450 <strncmp@plt>
  4136ec:	cbnz	w0, 4136b8 <feof@plt+0xfe18>
  4136f0:	tbz	w26, #0, 4136b0 <feof@plt+0xfe10>
  4136f4:	mov	w0, w27
  4136f8:	mov	w1, w25
  4136fc:	bl	414258 <feof@plt+0x109b8>
  413700:	cbz	w0, 4136b8 <feof@plt+0xfe18>
  413704:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413708:	ldr	x8, [x8, #1592]
  41370c:	mov	w9, #0x1                   	// #1
  413710:	add	x8, x8, x23
  413714:	strb	w9, [x8, #22]
  413718:	b	4136b8 <feof@plt+0xfe18>
  41371c:	ldr	x27, [sp, #32]
  413720:	mov	w28, wzr
  413724:	mov	w12, #0x1                   	// #1
  413728:	ldrb	w3, [x27]
  41372c:	cmp	w3, #0x7d
  413730:	b.ne	4137d8 <feof@plt+0xff38>  // b.any
  413734:	ldur	w26, [x29, #-8]
  413738:	cmp	w8, #0x1
  41373c:	mov	w25, #0x1                   	// #1
  413740:	b.lt	4137e8 <feof@plt+0xff48>  // b.tstop
  413744:	mov	x24, xzr
  413748:	mov	w19, #0x16                  	// #22
  41374c:	b	413760 <feof@plt+0xfec0>
  413750:	add	x24, x24, #0x1
  413754:	cmp	x24, w8, sxtw
  413758:	add	x19, x19, #0x18
  41375c:	b.ge	4137a8 <feof@plt+0xff08>  // b.tcont
  413760:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413764:	ldr	x9, [x9, #1592]
  413768:	ldrb	w10, [x9, x19]
  41376c:	cbz	w10, 413750 <feof@plt+0xfeb0>
  413770:	mov	w0, w24
  413774:	mov	w1, wzr
  413778:	strb	wzr, [x9, x19]
  41377c:	bl	414470 <feof@plt+0x10bd0>
  413780:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413784:	ldr	w8, [x8, #1560]
  413788:	b	413750 <feof@plt+0xfeb0>
  41378c:	ldur	w26, [x29, #-8]
  413790:	mov	w28, wzr
  413794:	mov	w13, wzr
  413798:	stur	wzr, [x29, #-12]
  41379c:	mov	w12, #0x1                   	// #1
  4137a0:	mov	x27, x23
  4137a4:	b	413394 <feof@plt+0xfaf4>
  4137a8:	ldrb	w3, [x27]
  4137ac:	mov	w28, wzr
  4137b0:	mov	w13, wzr
  4137b4:	stur	wzr, [x29, #-12]
  4137b8:	mov	w12, #0x1                   	// #1
  4137bc:	b	413398 <feof@plt+0xfaf8>
  4137c0:	ldur	w8, [x29, #-8]
  4137c4:	tbz	w8, #0, 4137f4 <feof@plt+0xff54>
  4137c8:	ldur	w26, [x29, #-8]
  4137cc:	mov	w28, wzr
  4137d0:	mov	w8, wzr
  4137d4:	b	4138e8 <feof@plt+0x10048>
  4137d8:	ldur	w26, [x29, #-8]
  4137dc:	mov	w13, w28
  4137e0:	stur	w28, [x29, #-12]
  4137e4:	b	413394 <feof@plt+0xfaf4>
  4137e8:	mov	w13, w28
  4137ec:	stur	w28, [x29, #-12]
  4137f0:	b	413398 <feof@plt+0xfaf8>
  4137f4:	cbz	x24, 413828 <feof@plt+0xff88>
  4137f8:	cbz	w15, 413830 <feof@plt+0xff90>
  4137fc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413800:	ldr	x19, [x8, #1216]
  413804:	cbz	x19, 413820 <feof@plt+0xff80>
  413808:	sub	x26, x25, x24
  41380c:	mov	x0, x19
  413810:	mov	x1, x24
  413814:	mov	x2, x26
  413818:	bl	403450 <strncmp@plt>
  41381c:	cbz	w0, 413898 <feof@plt+0xfff8>
  413820:	mov	w8, wzr
  413824:	b	4138a4 <feof@plt+0x10004>
  413828:	ldurb	w8, [x29, #-4]
  41382c:	b	4138a8 <feof@plt+0x10008>
  413830:	cbz	w14, 413880 <feof@plt+0xffe0>
  413834:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413838:	ldr	x8, [x8, #1792]
  41383c:	cbz	x8, 413a98 <feof@plt+0x101f8>
  413840:	mov	x28, x23
  413844:	ldr	x23, [x8]
  413848:	ldur	w26, [x29, #-8]
  41384c:	cbz	x23, 413870 <feof@plt+0xffd0>
  413850:	ldrb	w8, [x23]
  413854:	cbz	w8, 413874 <feof@plt+0xffd4>
  413858:	sub	x19, x25, x24
  41385c:	add	x0, x23, #0x1
  413860:	mov	x1, x24
  413864:	mov	x2, x19
  413868:	bl	403450 <strncmp@plt>
  41386c:	cbz	w0, 413aa4 <feof@plt+0x10204>
  413870:	mov	w8, wzr
  413874:	mov	x23, x28
  413878:	sturb	w8, [x29, #-4]
  41387c:	b	4138ac <feof@plt+0x1000c>
  413880:	mov	x0, x24
  413884:	mov	x1, x25
  413888:	mov	w2, w26
  41388c:	bl	40f2e4 <feof@plt+0xba44>
  413890:	and	w8, w0, #0x1
  413894:	b	4138a4 <feof@plt+0x10004>
  413898:	ldrb	w8, [x19, x26]
  41389c:	cmp	w8, #0x0
  4138a0:	cset	w8, eq  // eq = none
  4138a4:	sturb	w8, [x29, #-4]
  4138a8:	ldur	w26, [x29, #-8]
  4138ac:	cmp	w8, w27
  4138b0:	ldur	x8, [x29, #-24]
  4138b4:	ldr	x9, [sp, #40]
  4138b8:	ldrb	w3, [x23]
  4138bc:	cset	w10, ne  // ne = any
  4138c0:	csel	x8, x8, x24, eq  // eq = none
  4138c4:	stur	x8, [x29, #-24]
  4138c8:	ldr	x8, [sp, #16]
  4138cc:	mov	w28, wzr
  4138d0:	csel	x8, x8, x25, eq  // eq = none
  4138d4:	str	x8, [sp, #16]
  4138d8:	ldr	x8, [sp, #8]
  4138dc:	csel	x8, x8, x9, eq  // eq = none
  4138e0:	str	x8, [sp, #8]
  4138e4:	mov	w8, w10
  4138e8:	mov	w25, #0x1                   	// #1
  4138ec:	cmp	w3, #0x3a
  4138f0:	stur	w8, [x29, #-28]
  4138f4:	b.ne	413980 <feof@plt+0x100e0>  // b.any
  4138f8:	add	x24, x23, #0x1
  4138fc:	mov	w25, wzr
  413900:	mov	w8, #0x1                   	// #1
  413904:	mov	x27, x24
  413908:	b	413914 <feof@plt+0x10074>
  41390c:	add	w8, w8, #0x1
  413910:	add	x27, x27, #0x1
  413914:	ldrb	w3, [x27]
  413918:	cmp	w3, #0x7d
  41391c:	b.eq	413948 <feof@plt+0x100a8>  // b.none
  413920:	cmp	w3, #0x7b
  413924:	b.eq	41390c <feof@plt+0x1006c>  // b.none
  413928:	cmp	w8, #0x1
  41392c:	b.ne	413938 <feof@plt+0x10098>  // b.any
  413930:	cmp	w3, #0x3b
  413934:	b.eq	413990 <feof@plt+0x100f0>  // b.none
  413938:	cmp	w3, #0x25
  41393c:	b.eq	413954 <feof@plt+0x100b4>  // b.none
  413940:	cbnz	w3, 413978 <feof@plt+0x100d8>
  413944:	b	413b24 <feof@plt+0x10284>
  413948:	subs	w8, w8, #0x1
  41394c:	b.ne	413978 <feof@plt+0x100d8>  // b.any
  413950:	b	413990 <feof@plt+0x100f0>
  413954:	ldrb	w9, [x27, #1]
  413958:	cmp	w8, #0x1
  41395c:	cset	w10, eq  // eq = none
  413960:	cmp	w9, #0x2a
  413964:	cset	w9, eq  // eq = none
  413968:	and	w11, w10, w9
  41396c:	tst	w10, w9
  413970:	csinc	w8, w8, wzr, eq  // eq = none
  413974:	orr	w25, w25, w11
  413978:	add	x27, x27, #0x1
  41397c:	b	413914 <feof@plt+0x10074>
  413980:	mov	w12, wzr
  413984:	mov	w13, #0x1                   	// #1
  413988:	mov	x27, x23
  41398c:	b	413398 <feof@plt+0xfaf8>
  413990:	mov	x9, x27
  413994:	mov	x8, x9
  413998:	ldrb	w10, [x9, #-1]!
  41399c:	cmp	w10, #0x9
  4139a0:	b.eq	413994 <feof@plt+0x100f4>  // b.none
  4139a4:	cmp	w10, #0x20
  4139a8:	b.eq	413994 <feof@plt+0x100f4>  // b.none
  4139ac:	ldur	w9, [x29, #-32]
  4139b0:	orn	w9, w9, w25
  4139b4:	tbz	w9, #0, 413b24 <feof@plt+0x10284>
  4139b8:	ldur	w11, [x29, #-28]
  4139bc:	orn	w9, w26, w11
  4139c0:	tbnz	w9, #0, 413344 <feof@plt+0xfaa4>
  4139c4:	sub	x19, x8, x24
  4139c8:	add	w8, w19, #0x1
  4139cc:	sxtw	x0, w8
  4139d0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4139d4:	sxtw	x19, w19
  4139d8:	mov	x1, x24
  4139dc:	mov	x2, x19
  4139e0:	mov	x23, x0
  4139e4:	bl	402fc0 <memcpy@plt>
  4139e8:	strb	wzr, [x23, x19]
  4139ec:	tbz	w25, #0, 41331c <feof@plt+0xfa7c>
  4139f0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4139f4:	ldr	w8, [x8, #1560]
  4139f8:	cmp	w8, #0x1
  4139fc:	b.lt	413330 <feof@plt+0xfa90>  // b.tstop
  413a00:	ldur	x8, [x29, #-24]
  413a04:	ldr	x9, [sp, #16]
  413a08:	mov	x19, xzr
  413a0c:	mov	x24, xzr
  413a10:	sub	x25, x9, x8
  413a14:	and	x26, x25, #0xffffffff
  413a18:	b	413a48 <feof@plt+0x101a8>
  413a1c:	mov	w1, #0x1                   	// #1
  413a20:	mov	w0, w24
  413a24:	bl	414470 <feof@plt+0x10bd0>
  413a28:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413a2c:	str	xzr, [x8, #2016]
  413a30:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413a34:	ldrsw	x8, [x8, #1560]
  413a38:	add	x24, x24, #0x1
  413a3c:	add	x19, x19, #0x18
  413a40:	cmp	x24, x8
  413a44:	b.ge	413330 <feof@plt+0xfa90>  // b.tcont
  413a48:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413a4c:	ldr	x8, [x8, #1592]
  413a50:	ldur	x1, [x29, #-24]
  413a54:	mov	x2, x26
  413a58:	ldr	x0, [x8, x19]
  413a5c:	bl	403450 <strncmp@plt>
  413a60:	cbnz	w0, 413a30 <feof@plt+0x10190>
  413a64:	mov	w0, w24
  413a68:	mov	w1, w25
  413a6c:	bl	414258 <feof@plt+0x109b8>
  413a70:	cbz	w0, 413a30 <feof@plt+0x10190>
  413a74:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413a78:	ldr	x8, [x8, #1592]
  413a7c:	mov	x0, x23
  413a80:	mov	w1, wzr
  413a84:	ldr	x8, [x8, x19]
  413a88:	add	x2, x8, x26
  413a8c:	bl	40c344 <feof@plt+0x8aa4>
  413a90:	tbz	w0, #31, 413a1c <feof@plt+0x1017c>
  413a94:	b	413ab8 <feof@plt+0x10218>
  413a98:	ldur	w26, [x29, #-8]
  413a9c:	sturb	w8, [x29, #-4]
  413aa0:	b	4138ac <feof@plt+0x1000c>
  413aa4:	add	x8, x19, x23
  413aa8:	ldrb	w8, [x8, #1]
  413aac:	cmp	w8, #0x0
  413ab0:	cset	w8, eq  // eq = none
  413ab4:	b	413874 <feof@plt+0xffd4>
  413ab8:	mov	x0, x23
  413abc:	bl	4031d0 <free@plt>
  413ac0:	mov	x23, xzr
  413ac4:	ldr	x0, [sp, #8]
  413ac8:	ldr	x19, [sp, #40]
  413acc:	cbz	x0, 413adc <feof@plt+0x1023c>
  413ad0:	cmp	x0, x19
  413ad4:	b.eq	413adc <feof@plt+0x1023c>  // b.none
  413ad8:	bl	4031d0 <free@plt>
  413adc:	cbz	x19, 413ae8 <feof@plt+0x10248>
  413ae0:	mov	x0, x19
  413ae4:	bl	4031d0 <free@plt>
  413ae8:	mov	x0, x23
  413aec:	ldp	x20, x19, [sp, #160]
  413af0:	ldp	x22, x21, [sp, #144]
  413af4:	ldp	x24, x23, [sp, #128]
  413af8:	ldp	x26, x25, [sp, #112]
  413afc:	ldp	x28, x27, [sp, #96]
  413b00:	ldp	x29, x30, [sp, #80]
  413b04:	add	sp, sp, #0xb0
  413b08:	ret
  413b0c:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  413b10:	ldr	w0, [x8, #400]
  413b14:	ldr	x2, [sp]
  413b18:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  413b1c:	add	x1, x1, #0xfa7
  413b20:	bl	42c008 <feof@plt+0x28768>
  413b24:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  413b28:	ldr	w0, [x8, #400]
  413b2c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  413b30:	add	x2, x23, #0x1
  413b34:	add	x1, x1, #0xfe8
  413b38:	bl	42c008 <feof@plt+0x28768>
  413b3c:	ldrb	w3, [x23]
  413b40:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  413b44:	ldr	w0, [x8, #400]
  413b48:	ldr	x2, [sp]
  413b4c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x42fc>
  413b50:	add	x1, x1, #0xfc6
  413b54:	bl	42c008 <feof@plt+0x28768>
  413b58:	sub	sp, sp, #0xa0
  413b5c:	str	d8, [sp, #48]
  413b60:	stp	x29, x30, [sp, #64]
  413b64:	stp	x28, x27, [sp, #80]
  413b68:	stp	x26, x25, [sp, #96]
  413b6c:	stp	x24, x23, [sp, #112]
  413b70:	stp	x22, x21, [sp, #128]
  413b74:	stp	x20, x19, [sp, #144]
  413b78:	add	x29, sp, #0x30
  413b7c:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413b80:	ldr	w9, [x10, #1944]
  413b84:	adrp	x8, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  413b88:	mov	x25, x2
  413b8c:	mov	x20, x1
  413b90:	add	w9, w9, #0x1
  413b94:	mov	x21, x0
  413b98:	add	x23, x0, #0x1
  413b9c:	add	x8, x8, #0x4a2
  413ba0:	str	w9, [x10, #1944]
  413ba4:	mov	w9, #0x8c                  	// #140
  413ba8:	ldurb	w10, [x23, #-1]
  413bac:	cmp	w10, #0x28
  413bb0:	b.eq	413bdc <feof@plt+0x1033c>  // b.none
  413bb4:	cbz	w10, 414200 <feof@plt+0x10960>
  413bb8:	ldrh	w11, [x8, x10, lsl #1]
  413bbc:	tst	w11, w9
  413bc0:	b.ne	413bd4 <feof@plt+0x10334>  // b.any
  413bc4:	cmp	w10, #0x2d
  413bc8:	b.eq	413bd4 <feof@plt+0x10334>  // b.none
  413bcc:	cmp	w10, #0x5f
  413bd0:	b.ne	414214 <feof@plt+0x10974>  // b.any
  413bd4:	add	x23, x23, #0x1
  413bd8:	b	413ba8 <feof@plt+0x10308>
  413bdc:	mvn	x8, x21
  413be0:	add	x19, x8, x23
  413be4:	add	w8, w19, #0x1
  413be8:	sxtw	x0, w8
  413bec:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  413bf0:	sxtw	x24, w19
  413bf4:	mov	x1, x21
  413bf8:	mov	x2, x24
  413bfc:	mov	x22, x0
  413c00:	bl	402fc0 <memcpy@plt>
  413c04:	mov	w8, wzr
  413c08:	mov	x27, x23
  413c0c:	strb	wzr, [x22, x24]
  413c10:	b	413c1c <feof@plt+0x1037c>
  413c14:	add	w8, w8, #0x1
  413c18:	add	x27, x27, #0x1
  413c1c:	ldrb	w9, [x27]
  413c20:	cmp	w9, #0x28
  413c24:	b.eq	413c14 <feof@plt+0x10374>  // b.none
  413c28:	cmp	w9, #0x29
  413c2c:	b.eq	413c38 <feof@plt+0x10398>  // b.none
  413c30:	cbnz	w9, 413c18 <feof@plt+0x10378>
  413c34:	b	4141ec <feof@plt+0x1094c>
  413c38:	cbz	w8, 413c48 <feof@plt+0x103a8>
  413c3c:	sub	w8, w8, #0x1
  413c40:	add	x27, x27, #0x1
  413c44:	b	413c1c <feof@plt+0x1037c>
  413c48:	sub	x19, x27, x23
  413c4c:	add	w8, w19, #0x1
  413c50:	sxtw	x0, w8
  413c54:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  413c58:	sxtw	x24, w19
  413c5c:	mov	x1, x23
  413c60:	mov	x2, x24
  413c64:	mov	x21, x0
  413c68:	bl	402fc0 <memcpy@plt>
  413c6c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413c70:	add	x0, x0, #0x4ff
  413c74:	mov	x1, x22
  413c78:	str	x21, [x29, #8]
  413c7c:	strb	wzr, [x21, x24]
  413c80:	bl	403640 <strcmp@plt>
  413c84:	stur	x20, [x29, #-16]
  413c88:	str	x25, [sp, #16]
  413c8c:	cbz	w0, 413e2c <feof@plt+0x1058c>
  413c90:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413c94:	add	x0, x0, #0x506
  413c98:	mov	x1, x22
  413c9c:	bl	403640 <strcmp@plt>
  413ca0:	cbz	w0, 413e38 <feof@plt+0x10598>
  413ca4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413ca8:	add	x0, x0, #0x510
  413cac:	mov	x1, x22
  413cb0:	bl	403640 <strcmp@plt>
  413cb4:	cbz	w0, 413e44 <feof@plt+0x105a4>
  413cb8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413cbc:	add	x0, x0, #0x51f
  413cc0:	mov	x1, x22
  413cc4:	bl	403640 <strcmp@plt>
  413cc8:	cbz	w0, 413e50 <feof@plt+0x105b0>
  413ccc:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413cd0:	add	x0, x0, #0x528
  413cd4:	mov	x1, x22
  413cd8:	bl	403640 <strcmp@plt>
  413cdc:	cbz	w0, 413e5c <feof@plt+0x105bc>
  413ce0:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413ce4:	add	x0, x0, #0x538
  413ce8:	mov	x1, x22
  413cec:	bl	403640 <strcmp@plt>
  413cf0:	cbz	w0, 413e68 <feof@plt+0x105c8>
  413cf4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413cf8:	add	x0, x0, #0x6b8
  413cfc:	mov	x1, x22
  413d00:	bl	403640 <strcmp@plt>
  413d04:	cbz	w0, 413e74 <feof@plt+0x105d4>
  413d08:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x42fc>
  413d0c:	add	x0, x0, #0x63e
  413d10:	mov	x1, x22
  413d14:	bl	403640 <strcmp@plt>
  413d18:	cbz	w0, 413e80 <feof@plt+0x105e0>
  413d1c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413d20:	add	x0, x0, #0x547
  413d24:	mov	x1, x22
  413d28:	bl	403640 <strcmp@plt>
  413d2c:	cbz	w0, 413e8c <feof@plt+0x105ec>
  413d30:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413d34:	add	x0, x0, #0x551
  413d38:	mov	x1, x22
  413d3c:	bl	403640 <strcmp@plt>
  413d40:	cbz	w0, 413e98 <feof@plt+0x105f8>
  413d44:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413d48:	add	x0, x0, #0x560
  413d4c:	mov	x1, x22
  413d50:	bl	403640 <strcmp@plt>
  413d54:	cbz	w0, 413ea4 <feof@plt+0x10604>
  413d58:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413d5c:	add	x0, x0, #0x7ee
  413d60:	mov	x1, x22
  413d64:	bl	403640 <strcmp@plt>
  413d68:	cbz	w0, 413eb0 <feof@plt+0x10610>
  413d6c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413d70:	add	x0, x0, #0x8cd
  413d74:	mov	x1, x22
  413d78:	bl	403640 <strcmp@plt>
  413d7c:	cbz	w0, 413ebc <feof@plt+0x1061c>
  413d80:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413d84:	add	x0, x0, #0x99b
  413d88:	mov	x1, x22
  413d8c:	bl	403640 <strcmp@plt>
  413d90:	cbz	w0, 413ec8 <feof@plt+0x10628>
  413d94:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413d98:	add	x0, x0, #0x571
  413d9c:	mov	x1, x22
  413da0:	bl	403640 <strcmp@plt>
  413da4:	cbz	w0, 413ed4 <feof@plt+0x10634>
  413da8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413dac:	add	x0, x0, #0xa7f
  413db0:	mov	x1, x22
  413db4:	bl	403640 <strcmp@plt>
  413db8:	cbz	w0, 413ee0 <feof@plt+0x10640>
  413dbc:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413dc0:	add	x0, x0, #0xabd
  413dc4:	mov	x1, x22
  413dc8:	bl	403640 <strcmp@plt>
  413dcc:	cbz	w0, 413eec <feof@plt+0x1064c>
  413dd0:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413dd4:	add	x0, x0, #0xab1
  413dd8:	mov	x1, x22
  413ddc:	bl	403640 <strcmp@plt>
  413de0:	cbz	w0, 413ef8 <feof@plt+0x10658>
  413de4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413de8:	add	x0, x0, #0x583
  413dec:	mov	x1, x22
  413df0:	bl	403640 <strcmp@plt>
  413df4:	cbz	w0, 413f04 <feof@plt+0x10664>
  413df8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  413dfc:	add	x0, x0, #0x59b
  413e00:	mov	x1, x22
  413e04:	bl	403640 <strcmp@plt>
  413e08:	cbz	w0, 413f10 <feof@plt+0x10670>
  413e0c:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  413e10:	add	x0, x0, #0x815
  413e14:	mov	x1, x22
  413e18:	bl	403640 <strcmp@plt>
  413e1c:	cbnz	w0, 414240 <feof@plt+0x109a0>
  413e20:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413e24:	add	x8, x8, #0x508
  413e28:	b	413f18 <feof@plt+0x10678>
  413e2c:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413e30:	add	x8, x8, #0x3c8
  413e34:	b	413f18 <feof@plt+0x10678>
  413e38:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413e3c:	add	x8, x8, #0x3d8
  413e40:	b	413f18 <feof@plt+0x10678>
  413e44:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413e48:	add	x8, x8, #0x3e8
  413e4c:	b	413f18 <feof@plt+0x10678>
  413e50:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413e54:	add	x8, x8, #0x3f8
  413e58:	b	413f18 <feof@plt+0x10678>
  413e5c:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413e60:	add	x8, x8, #0x408
  413e64:	b	413f18 <feof@plt+0x10678>
  413e68:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413e6c:	add	x8, x8, #0x418
  413e70:	b	413f18 <feof@plt+0x10678>
  413e74:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413e78:	add	x8, x8, #0x428
  413e7c:	b	413f18 <feof@plt+0x10678>
  413e80:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413e84:	add	x8, x8, #0x438
  413e88:	b	413f18 <feof@plt+0x10678>
  413e8c:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413e90:	add	x8, x8, #0x448
  413e94:	b	413f18 <feof@plt+0x10678>
  413e98:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413e9c:	add	x8, x8, #0x458
  413ea0:	b	413f18 <feof@plt+0x10678>
  413ea4:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413ea8:	add	x8, x8, #0x468
  413eac:	b	413f18 <feof@plt+0x10678>
  413eb0:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413eb4:	add	x8, x8, #0x478
  413eb8:	b	413f18 <feof@plt+0x10678>
  413ebc:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413ec0:	add	x8, x8, #0x488
  413ec4:	b	413f18 <feof@plt+0x10678>
  413ec8:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413ecc:	add	x8, x8, #0x498
  413ed0:	b	413f18 <feof@plt+0x10678>
  413ed4:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413ed8:	add	x8, x8, #0x4a8
  413edc:	b	413f18 <feof@plt+0x10678>
  413ee0:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413ee4:	add	x8, x8, #0x4b8
  413ee8:	b	413f18 <feof@plt+0x10678>
  413eec:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413ef0:	add	x8, x8, #0x4c8
  413ef4:	b	413f18 <feof@plt+0x10678>
  413ef8:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413efc:	add	x8, x8, #0x4d8
  413f00:	b	413f18 <feof@plt+0x10678>
  413f04:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413f08:	add	x8, x8, #0x4e8
  413f0c:	b	413f18 <feof@plt+0x10678>
  413f10:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  413f14:	add	x8, x8, #0x4f8
  413f18:	stur	x8, [x29, #-8]
  413f1c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413f20:	adrp	x12, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413f24:	ldrb	w24, [x8, #1988]
  413f28:	ldrb	w8, [x12, #2000]
  413f2c:	adrp	x13, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413f30:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413f34:	add	x9, x9, #0x500
  413f38:	str	w8, [sp]
  413f3c:	ldrb	w8, [x13, #2004]
  413f40:	adrp	x25, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413f44:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413f48:	adrp	x11, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413f4c:	str	w8, [sp, #4]
  413f50:	ldp	x23, x8, [x9]
  413f54:	adrp	x14, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413f58:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413f5c:	ldr	x21, [x25, #1184]
  413f60:	ldr	w19, [x10, #1992]
  413f64:	ldrb	w26, [x11, #1996]
  413f68:	ldrb	w28, [x14, #2008]
  413f6c:	ldr	x9, [x9, #2016]
  413f70:	sub	x20, x8, x23
  413f74:	cmp	w20, #0x1
  413f78:	str	x22, [sp, #24]
  413f7c:	str	x9, [sp, #8]
  413f80:	b.lt	413fd0 <feof@plt+0x10730>  // b.tstop
  413f84:	cmp	x8, x23
  413f88:	b.ne	413f9c <feof@plt+0x106fc>  // b.any
  413f8c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413f90:	ldrb	w10, [x9, #1344]
  413f94:	orr	w10, w10, #0x2
  413f98:	strb	w10, [x9, #1344]
  413f9c:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413fa0:	add	x9, x9, #0x4f8
  413fa4:	ldr	x10, [x9, #40]
  413fa8:	ldr	x11, [x9]
  413fac:	ldr	x12, [x9, #24]
  413fb0:	add	x8, x10, x8
  413fb4:	bic	x8, x8, x10
  413fb8:	sub	x13, x12, x11
  413fbc:	sub	x10, x8, x11
  413fc0:	cmp	x10, x13
  413fc4:	csel	x8, x12, x8, hi  // hi = pmore
  413fc8:	stp	x8, x8, [x9, #8]
  413fcc:	b	413fd4 <feof@plt+0x10734>
  413fd0:	mov	x23, xzr
  413fd4:	mov	w1, #0x58                  	// #88
  413fd8:	mov	x0, xzr
  413fdc:	str	xzr, [x25, #1184]
  413fe0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  413fe4:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  413fe8:	ldr	d8, [x8, #1616]
  413fec:	str	x0, [x25, #1184]
  413ff0:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  413ff4:	mov	w1, #0x58                  	// #88
  413ff8:	str	d8, [x0]
  413ffc:	mov	x0, xzr
  414000:	str	xzr, [x22, #2040]
  414004:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  414008:	str	x0, [x22, #2040]
  41400c:	str	d8, [x0]
  414010:	ldr	x8, [x25, #1184]
  414014:	cbz	x8, 41401c <feof@plt+0x1077c>
  414018:	str	wzr, [x8, #4]
  41401c:	ldr	x8, [x22, #2040]
  414020:	cbz	x8, 414028 <feof@plt+0x10788>
  414024:	str	wzr, [x8, #4]
  414028:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41402c:	strb	wzr, [x8, #1988]
  414030:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414034:	str	wzr, [x8, #1992]
  414038:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41403c:	strb	wzr, [x8, #1996]
  414040:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414044:	ldr	x0, [x29, #8]
  414048:	ldr	x2, [sp, #16]
  41404c:	strb	wzr, [x8, #2000]
  414050:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414054:	strb	wzr, [x8, #2004]
  414058:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41405c:	strb	wzr, [x8, #2008]
  414060:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414064:	mov	w1, wzr
  414068:	str	xzr, [x8, #2016]
  41406c:	bl	40c344 <feof@plt+0x8aa4>
  414070:	mov	w22, w0
  414074:	bl	4105cc <feof@plt+0xcd2c>
  414078:	tbnz	w22, #31, 414228 <feof@plt+0x10988>
  41407c:	ldur	x8, [x29, #-8]
  414080:	ldr	x9, [x25, #1184]
  414084:	ldr	x8, [x8, #8]
  414088:	cbz	x9, 414094 <feof@plt+0x107f4>
  41408c:	ldr	w0, [x9, #4]
  414090:	b	414098 <feof@plt+0x107f8>
  414094:	mov	w0, wzr
  414098:	add	x10, x9, #0x8
  41409c:	cmp	x9, #0x0
  4140a0:	csel	x1, xzr, x10, eq  // eq = none
  4140a4:	blr	x8
  4140a8:	ldr	x8, [x25, #1184]
  4140ac:	mov	x22, x0
  4140b0:	cbz	x8, 4140d0 <feof@plt+0x10830>
  4140b4:	ldr	w9, [x8]
  4140b8:	tbnz	w9, #31, 4140cc <feof@plt+0x1082c>
  4140bc:	mov	x0, x8
  4140c0:	bl	4031d0 <free@plt>
  4140c4:	str	xzr, [x25, #1184]
  4140c8:	b	4140d0 <feof@plt+0x10830>
  4140cc:	str	wzr, [x8, #4]
  4140d0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4140d4:	ldr	w9, [sp]
  4140d8:	strb	w24, [x8, #1988]
  4140dc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4140e0:	str	w19, [x8, #1992]
  4140e4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4140e8:	strb	w26, [x8, #1996]
  4140ec:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4140f0:	strb	w9, [x8, #2000]
  4140f4:	ldr	w9, [sp, #4]
  4140f8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4140fc:	cmp	w20, #0x1
  414100:	str	x21, [x25, #1184]
  414104:	strb	w9, [x8, #2004]
  414108:	ldr	x9, [sp, #8]
  41410c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414110:	strb	w28, [x8, #2008]
  414114:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414118:	str	x9, [x8, #2016]
  41411c:	b.lt	414170 <feof@plt+0x108d0>  // b.tstop
  414120:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414124:	add	x8, x8, #0x508
  414128:	ldp	x0, x9, [x8]
  41412c:	sxtw	x24, w20
  414130:	sub	x8, x9, x0
  414134:	cmp	x8, x24
  414138:	b.cs	414154 <feof@plt+0x108b4>  // b.hs, b.nlast
  41413c:	adrp	x25, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414140:	add	x25, x25, #0x4f0
  414144:	mov	x0, x25
  414148:	mov	x1, x24
  41414c:	bl	47bae8 <_obstack_newchunk@@Base>
  414150:	ldr	x0, [x25, #24]
  414154:	mov	x1, x23
  414158:	mov	x2, x24
  41415c:	bl	402fc0 <memcpy@plt>
  414160:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414164:	ldr	x9, [x8, #1288]
  414168:	add	x9, x9, x24
  41416c:	str	x9, [x8, #1288]
  414170:	add	x23, x27, #0x1
  414174:	cbz	x22, 414190 <feof@plt+0x108f0>
  414178:	mov	x0, x22
  41417c:	mov	w1, wzr
  414180:	mov	x2, xzr
  414184:	bl	40c344 <feof@plt+0x8aa4>
  414188:	cmp	w0, #0x0
  41418c:	csel	x23, xzr, x23, lt  // lt = tstop
  414190:	ldur	x9, [x29, #-16]
  414194:	cbz	x9, 4141a4 <feof@plt+0x10904>
  414198:	cmp	x22, #0x0
  41419c:	cset	w8, ne  // ne = any
  4141a0:	strb	w8, [x9]
  4141a4:	ldr	x0, [sp, #24]
  4141a8:	bl	4031d0 <free@plt>
  4141ac:	ldr	x0, [x29, #8]
  4141b0:	bl	4031d0 <free@plt>
  4141b4:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4141b8:	ldr	w8, [x9, #1944]
  4141bc:	mov	x0, x23
  4141c0:	ldp	x20, x19, [sp, #144]
  4141c4:	ldp	x22, x21, [sp, #128]
  4141c8:	ldp	x24, x23, [sp, #112]
  4141cc:	ldp	x26, x25, [sp, #96]
  4141d0:	ldp	x28, x27, [sp, #80]
  4141d4:	ldp	x29, x30, [sp, #64]
  4141d8:	ldr	d8, [sp, #48]
  4141dc:	sub	w8, w8, #0x1
  4141e0:	str	w8, [x9, #1944]
  4141e4:	add	sp, sp, #0xa0
  4141e8:	ret
  4141ec:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4141f0:	ldr	w0, [x8, #400]
  4141f4:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  4141f8:	add	x1, x1, #0x4a0
  4141fc:	bl	42c008 <feof@plt+0x28768>
  414200:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  414204:	ldr	w0, [x8, #400]
  414208:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  41420c:	add	x1, x1, #0x481
  414210:	bl	42c008 <feof@plt+0x28768>
  414214:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  414218:	ldr	w0, [x8, #400]
  41421c:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  414220:	add	x1, x1, #0x464
  414224:	bl	42c008 <feof@plt+0x28768>
  414228:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  41422c:	ldr	w0, [x8, #400]
  414230:	ldr	x2, [sp, #24]
  414234:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  414238:	add	x1, x1, #0x4dc
  41423c:	bl	42c008 <feof@plt+0x28768>
  414240:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  414244:	ldr	w0, [x8, #400]
  414248:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  41424c:	add	x1, x1, #0x4c2
  414250:	mov	x2, x22
  414254:	bl	42c008 <feof@plt+0x28768>
  414258:	stp	x29, x30, [sp, #-80]!
  41425c:	stp	x26, x25, [sp, #16]
  414260:	stp	x24, x23, [sp, #32]
  414264:	stp	x22, x21, [sp, #48]
  414268:	stp	x20, x19, [sp, #64]
  41426c:	mov	x29, sp
  414270:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414274:	ldr	x22, [x8, #1592]
  414278:	mov	w8, #0x18                  	// #24
  41427c:	smull	x9, w0, w8
  414280:	smaddl	x21, w0, w8, x22
  414284:	ldr	x26, [x22, x9]
  414288:	ldr	w8, [x21, #16]!
  41428c:	cbz	w8, 4142a8 <feof@plt+0x10a08>
  414290:	and	w9, w8, #0x3
  414294:	mov	w10, #0x1                   	// #1
  414298:	bic	w8, w10, w8, lsr #3
  41429c:	cmp	w9, #0x1
  4142a0:	csel	w0, w8, wzr, eq  // eq = none
  4142a4:	b	414458 <feof@plt+0x10bb8>
  4142a8:	cmp	w1, #0x2
  4142ac:	b.cs	4142b8 <feof@plt+0x10a18>  // b.hs, b.nlast
  4142b0:	mov	w0, #0x1                   	// #1
  4142b4:	b	414458 <feof@plt+0x10bb8>
  4142b8:	ldrb	w24, [x26]
  4142bc:	sub	w8, w24, #0x4f
  4142c0:	cmp	w8, #0x1e
  4142c4:	b.hi	414450 <feof@plt+0x10bb0>  // b.pmore
  4142c8:	mov	w9, #0x1                   	// #1
  4142cc:	mov	w10, #0x100                 	// #256
  4142d0:	mov	w20, w0
  4142d4:	lsl	w9, w9, w8
  4142d8:	movk	w10, #0x4180, lsl #16
  4142dc:	tst	w9, w10
  4142e0:	sxtw	x23, w20
  4142e4:	b.eq	414380 <feof@plt+0x10ae0>  // b.none
  4142e8:	add	x19, x26, #0x1
  4142ec:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4142f0:	add	x1, x1, #0x939
  4142f4:	mov	w2, #0x3                   	// #3
  4142f8:	mov	x0, x19
  4142fc:	bl	403450 <strncmp@plt>
  414300:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414304:	ldrsw	x25, [x8, #1560]
  414308:	add	w8, w20, #0x1
  41430c:	cmp	w8, w25
  414310:	cbz	w0, 4143d8 <feof@plt+0x10b38>
  414314:	b.ge	414450 <feof@plt+0x10bb0>  // b.tcont
  414318:	mov	w9, #0x18                  	// #24
  41431c:	sxtw	x20, w8
  414320:	smaddl	x26, w8, w9, x22
  414324:	b	414338 <feof@plt+0x10a98>
  414328:	add	x20, x20, #0x1
  41432c:	cmp	x20, x25
  414330:	add	x26, x26, #0x18
  414334:	b.ge	414450 <feof@plt+0x10bb0>  // b.tcont
  414338:	ldr	x8, [x26]
  41433c:	ldrb	w9, [x8]
  414340:	cmp	w9, w24
  414344:	b.ne	414328 <feof@plt+0x10a88>  // b.any
  414348:	ldrb	w9, [x8, #1]
  41434c:	cmp	w9, #0x6e
  414350:	b.ne	414328 <feof@plt+0x10a88>  // b.any
  414354:	ldrb	w9, [x8, #2]
  414358:	cmp	w9, #0x6f
  41435c:	b.ne	414328 <feof@plt+0x10a88>  // b.any
  414360:	ldrb	w9, [x8, #3]
  414364:	cmp	w9, #0x2d
  414368:	b.ne	414328 <feof@plt+0x10a88>  // b.any
  41436c:	add	x0, x8, #0x4
  414370:	mov	x1, x19
  414374:	bl	403640 <strcmp@plt>
  414378:	cbnz	w0, 414328 <feof@plt+0x10a88>
  41437c:	b	414420 <feof@plt+0x10b80>
  414380:	cbnz	w8, 414450 <feof@plt+0x10bb0>
  414384:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414388:	ldrsw	x8, [x8, #1560]
  41438c:	mov	w9, #0x18                  	// #24
  414390:	madd	x9, x23, x9, x22
  414394:	add	x9, x9, #0x18
  414398:	mov	x10, x23
  41439c:	add	x10, x10, #0x1
  4143a0:	cmp	x10, x8
  4143a4:	b.ge	414450 <feof@plt+0x10bb0>  // b.tcont
  4143a8:	ldr	x11, [x9], #24
  4143ac:	ldrb	w11, [x11]
  4143b0:	cmp	w11, #0x4f
  4143b4:	b.ne	41439c <feof@plt+0x10afc>  // b.any
  4143b8:	mov	w8, #0x18                  	// #24
  4143bc:	mov	w9, #0x1                   	// #1
  4143c0:	mov	w10, #0x2                   	// #2
  4143c4:	madd	x8, x23, x8, x22
  4143c8:	mov	w0, wzr
  4143cc:	strb	w9, [x8, #21]
  4143d0:	str	w10, [x21]
  4143d4:	b	414458 <feof@plt+0x10bb8>
  4143d8:	b.ge	414450 <feof@plt+0x10bb0>  // b.tcont
  4143dc:	mov	w9, #0x18                  	// #24
  4143e0:	add	x19, x26, #0x4
  4143e4:	sxtw	x20, w8
  4143e8:	smaddl	x26, w8, w9, x22
  4143ec:	b	414400 <feof@plt+0x10b60>
  4143f0:	add	x20, x20, #0x1
  4143f4:	cmp	x20, x25
  4143f8:	add	x26, x26, #0x18
  4143fc:	b.ge	414450 <feof@plt+0x10bb0>  // b.tcont
  414400:	ldr	x8, [x26]
  414404:	ldrb	w9, [x8]
  414408:	cmp	w9, w24
  41440c:	b.ne	4143f0 <feof@plt+0x10b50>  // b.any
  414410:	add	x0, x8, #0x1
  414414:	mov	x1, x19
  414418:	bl	403640 <strcmp@plt>
  41441c:	cbnz	w0, 4143f0 <feof@plt+0x10b50>
  414420:	mov	w8, #0x18                  	// #24
  414424:	madd	x8, x23, x8, x22
  414428:	ldrb	w8, [x8, #20]
  41442c:	cbz	w8, 414440 <feof@plt+0x10ba0>
  414430:	mov	w8, #0x18                  	// #24
  414434:	madd	x8, x23, x8, x22
  414438:	mov	w9, #0x1                   	// #1
  41443c:	strb	w9, [x8, #21]
  414440:	mov	w8, #0x2                   	// #2
  414444:	mov	w0, wzr
  414448:	str	w8, [x21]
  41444c:	b	414458 <feof@plt+0x10bb8>
  414450:	mov	w0, #0x1                   	// #1
  414454:	str	w0, [x21]
  414458:	ldp	x20, x19, [sp, #64]
  41445c:	ldp	x22, x21, [sp, #48]
  414460:	ldp	x24, x23, [sp, #32]
  414464:	ldp	x26, x25, [sp, #16]
  414468:	ldp	x29, x30, [sp], #80
  41446c:	ret
  414470:	sub	sp, sp, #0x70
  414474:	stp	x29, x30, [sp, #16]
  414478:	stp	x28, x27, [sp, #32]
  41447c:	stp	x26, x25, [sp, #48]
  414480:	stp	x24, x23, [sp, #64]
  414484:	stp	x22, x21, [sp, #80]
  414488:	stp	x20, x19, [sp, #96]
  41448c:	add	x29, sp, #0x10
  414490:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414494:	ldr	x8, [x26, #1592]
  414498:	mov	w9, #0x18                  	// #24
  41449c:	smaddl	x8, w0, w9, x8
  4144a0:	ldrb	w8, [x8, #16]
  4144a4:	tbnz	w8, #2, 414798 <feof@plt+0x10ef8>
  4144a8:	sxtw	x27, w0
  4144ac:	cbnz	w1, 414550 <feof@plt+0x10cb0>
  4144b0:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4144b4:	add	x0, x0, #0x935
  4144b8:	mov	x2, xzr
  4144bc:	bl	40c344 <feof@plt+0x8aa4>
  4144c0:	ldr	x8, [x26, #1592]
  4144c4:	mov	w9, #0x18                  	// #24
  4144c8:	mul	x9, x27, x9
  4144cc:	ldr	x8, [x8, x9]
  4144d0:	ldrb	w20, [x8]
  4144d4:	cbz	w20, 414534 <feof@plt+0x10c94>
  4144d8:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4144dc:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4144e0:	add	x21, x8, #0x1
  4144e4:	add	x22, x22, #0x508
  4144e8:	add	x19, x19, #0x4f0
  4144ec:	mov	w23, #0x1                   	// #1
  4144f0:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4144f4:	adrp	x25, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4144f8:	b	414514 <feof@plt+0x10c74>
  4144fc:	add	x9, x8, #0x1
  414500:	str	x9, [x24, #1288]
  414504:	strb	w20, [x8]
  414508:	strb	w23, [x25, #1988]
  41450c:	ldrb	w20, [x21], #1
  414510:	cbz	w20, 414540 <feof@plt+0x10ca0>
  414514:	ldp	x8, x9, [x22]
  414518:	cmp	x9, x8
  41451c:	b.ne	4144fc <feof@plt+0x10c5c>  // b.any
  414520:	mov	w1, #0x1                   	// #1
  414524:	mov	x0, x19
  414528:	bl	47bae8 <_obstack_newchunk@@Base>
  41452c:	ldr	x8, [x19, #24]
  414530:	b	4144fc <feof@plt+0x10c5c>
  414534:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414538:	mov	w9, #0x1                   	// #1
  41453c:	strb	w9, [x8, #1988]
  414540:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414544:	ldr	w8, [x8, #1944]
  414548:	cbz	w8, 414550 <feof@plt+0x10cb0>
  41454c:	bl	4105cc <feof@plt+0xcd2c>
  414550:	ldr	x8, [x26, #1592]
  414554:	mov	w9, #0x18                  	// #24
  414558:	str	x27, [sp, #8]
  41455c:	madd	x8, x27, x9, x8
  414560:	ldr	x24, [x8, #8]
  414564:	cbz	x24, 414768 <feof@plt+0x10ec8>
  414568:	ldr	x21, [x24]
  41456c:	cbz	x21, 414768 <feof@plt+0x10ec8>
  414570:	adrp	x25, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  414574:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414578:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41457c:	add	x25, x25, #0x9d0
  414580:	adrp	x28, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414584:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414588:	mov	w27, #0x1                   	// #1
  41458c:	add	x22, x22, #0x508
  414590:	add	x20, x20, #0x4f0
  414594:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414598:	b	4145a4 <feof@plt+0x10d04>
  41459c:	ldr	x21, [x24, #8]!
  4145a0:	cbz	x21, 414768 <feof@plt+0x10ec8>
  4145a4:	mov	x0, x25
  4145a8:	mov	w1, wzr
  4145ac:	mov	x2, xzr
  4145b0:	bl	40c344 <feof@plt+0x8aa4>
  4145b4:	ldr	x8, [x28, #2016]
  4145b8:	cbz	x8, 41467c <feof@plt+0x10ddc>
  4145bc:	mov	x0, x21
  4145c0:	bl	4030b0 <strlen@plt>
  4145c4:	and	x8, x0, #0xffffffff
  4145c8:	cbz	x8, 414634 <feof@plt+0x10d94>
  4145cc:	sub	w19, w8, #0x1
  4145d0:	ldrb	w9, [x21, x19]
  4145d4:	cmp	w9, #0x2f
  4145d8:	b.eq	414634 <feof@plt+0x10d94>  // b.none
  4145dc:	cmp	w9, #0x2e
  4145e0:	sub	x8, x8, #0x1
  4145e4:	b.ne	4145c8 <feof@plt+0x10d28>  // b.any
  4145e8:	strb	wzr, [x21, x19]
  4145ec:	ldrb	w25, [x21]
  4145f0:	cbz	w25, 4146dc <feof@plt+0x10e3c>
  4145f4:	add	x28, x21, #0x1
  4145f8:	b	414614 <feof@plt+0x10d74>
  4145fc:	add	x9, x8, #0x1
  414600:	str	x9, [x23, #1288]
  414604:	strb	w25, [x8]
  414608:	strb	w27, [x26, #1988]
  41460c:	ldrb	w25, [x28], #1
  414610:	cbz	w25, 4146e0 <feof@plt+0x10e40>
  414614:	ldp	x8, x9, [x22]
  414618:	cmp	x9, x8
  41461c:	b.ne	4145fc <feof@plt+0x10d5c>  // b.any
  414620:	mov	w1, #0x1                   	// #1
  414624:	mov	x0, x20
  414628:	bl	47bae8 <_obstack_newchunk@@Base>
  41462c:	ldr	x8, [x20, #24]
  414630:	b	4145fc <feof@plt+0x10d5c>
  414634:	ldrb	w19, [x21]
  414638:	cbz	w19, 4146c4 <feof@plt+0x10e24>
  41463c:	add	x21, x21, #0x1
  414640:	b	41465c <feof@plt+0x10dbc>
  414644:	add	x9, x8, #0x1
  414648:	str	x9, [x23, #1288]
  41464c:	strb	w19, [x8]
  414650:	strb	w27, [x26, #1988]
  414654:	ldrb	w19, [x21], #1
  414658:	cbz	w19, 4146c8 <feof@plt+0x10e28>
  41465c:	ldp	x8, x9, [x22]
  414660:	cmp	x9, x8
  414664:	b.ne	414644 <feof@plt+0x10da4>  // b.any
  414668:	mov	w1, #0x1                   	// #1
  41466c:	mov	x0, x20
  414670:	bl	47bae8 <_obstack_newchunk@@Base>
  414674:	ldr	x8, [x20, #24]
  414678:	b	414644 <feof@plt+0x10da4>
  41467c:	ldrb	w19, [x21]
  414680:	cbz	w19, 414750 <feof@plt+0x10eb0>
  414684:	add	x21, x21, #0x1
  414688:	b	4146a4 <feof@plt+0x10e04>
  41468c:	add	x9, x8, #0x1
  414690:	str	x9, [x23, #1288]
  414694:	strb	w19, [x8]
  414698:	strb	w27, [x26, #1988]
  41469c:	ldrb	w19, [x21], #1
  4146a0:	cbz	w19, 414754 <feof@plt+0x10eb4>
  4146a4:	ldp	x8, x9, [x22]
  4146a8:	cmp	x9, x8
  4146ac:	b.ne	41468c <feof@plt+0x10dec>  // b.any
  4146b0:	mov	w1, #0x1                   	// #1
  4146b4:	mov	x0, x20
  4146b8:	bl	47bae8 <_obstack_newchunk@@Base>
  4146bc:	ldr	x8, [x20, #24]
  4146c0:	b	41468c <feof@plt+0x10dec>
  4146c4:	strb	w27, [x26, #1988]
  4146c8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4146cc:	ldr	w8, [x8, #1944]
  4146d0:	cbz	w8, 414704 <feof@plt+0x10e64>
  4146d4:	bl	4105cc <feof@plt+0xcd2c>
  4146d8:	b	414704 <feof@plt+0x10e64>
  4146dc:	strb	w27, [x26, #1988]
  4146e0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4146e4:	ldr	w8, [x8, #1944]
  4146e8:	cbz	w8, 4146f0 <feof@plt+0x10e50>
  4146ec:	bl	4105cc <feof@plt+0xcd2c>
  4146f0:	mov	w8, #0x2e                  	// #46
  4146f4:	adrp	x25, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4146f8:	strb	w8, [x21, x19]
  4146fc:	add	x25, x25, #0x9d0
  414700:	adrp	x28, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414704:	ldr	x8, [x28, #2016]
  414708:	ldrb	w19, [x8]
  41470c:	cbz	w19, 414750 <feof@plt+0x10eb0>
  414710:	add	x21, x8, #0x1
  414714:	b	414730 <feof@plt+0x10e90>
  414718:	add	x9, x8, #0x1
  41471c:	str	x9, [x23, #1288]
  414720:	strb	w19, [x8]
  414724:	strb	w27, [x26, #1988]
  414728:	ldrb	w19, [x21], #1
  41472c:	cbz	w19, 414754 <feof@plt+0x10eb4>
  414730:	ldp	x8, x9, [x22]
  414734:	cmp	x9, x8
  414738:	b.ne	414718 <feof@plt+0x10e78>  // b.any
  41473c:	mov	w1, #0x1                   	// #1
  414740:	mov	x0, x20
  414744:	bl	47bae8 <_obstack_newchunk@@Base>
  414748:	ldr	x8, [x20, #24]
  41474c:	b	414718 <feof@plt+0x10e78>
  414750:	strb	w27, [x26, #1988]
  414754:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414758:	ldr	w8, [x8, #1944]
  41475c:	cbz	w8, 41459c <feof@plt+0x10cfc>
  414760:	bl	4105cc <feof@plt+0xcd2c>
  414764:	b	41459c <feof@plt+0x10cfc>
  414768:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  41476c:	add	x0, x0, #0x9d0
  414770:	mov	w1, wzr
  414774:	mov	x2, xzr
  414778:	bl	40c344 <feof@plt+0x8aa4>
  41477c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414780:	ldr	x8, [x8, #1592]
  414784:	ldr	x10, [sp, #8]
  414788:	mov	w9, #0x18                  	// #24
  41478c:	madd	x8, x10, x9, x8
  414790:	mov	w9, #0x1                   	// #1
  414794:	strb	w9, [x8, #21]
  414798:	ldp	x20, x19, [sp, #96]
  41479c:	ldp	x22, x21, [sp, #80]
  4147a0:	ldp	x24, x23, [sp, #64]
  4147a4:	ldp	x26, x25, [sp, #48]
  4147a8:	ldp	x28, x27, [sp, #32]
  4147ac:	ldp	x29, x30, [sp, #16]
  4147b0:	add	sp, sp, #0x70
  4147b4:	ret
  4147b8:	stp	x29, x30, [sp, #-48]!
  4147bc:	stp	x22, x21, [sp, #16]
  4147c0:	stp	x20, x19, [sp, #32]
  4147c4:	mov	x29, sp
  4147c8:	cmp	w0, #0x2
  4147cc:	b.ne	414828 <feof@plt+0x10f88>  // b.any
  4147d0:	ldr	x20, [x1]
  4147d4:	mov	x19, x1
  4147d8:	mov	x0, x20
  4147dc:	bl	403700 <getenv@plt>
  4147e0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4147e4:	ldrb	w8, [x8, #1233]
  4147e8:	mov	x21, x0
  4147ec:	cbnz	w8, 414830 <feof@plt+0x10f90>
  4147f0:	cbnz	x21, 414850 <feof@plt+0x10fb0>
  4147f4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4147f8:	ldrb	w8, [x8, #2064]
  4147fc:	cbz	w8, 414850 <feof@plt+0x10fb0>
  414800:	mov	x0, x20
  414804:	bl	4030b0 <strlen@plt>
  414808:	add	x0, x0, #0x2
  41480c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  414810:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  414814:	add	x1, x1, #0x5ac
  414818:	mov	x2, x20
  41481c:	mov	x22, x0
  414820:	bl	403340 <sprintf@plt>
  414824:	b	4148b4 <feof@plt+0x11014>
  414828:	mov	x22, xzr
  41482c:	b	4148b4 <feof@plt+0x11014>
  414830:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414834:	ldr	x0, [x8, #1096]
  414838:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  41483c:	add	x1, x1, #0x5b4
  414840:	mov	x2, x20
  414844:	mov	x3, x21
  414848:	bl	4030d0 <fprintf@plt>
  41484c:	cbz	x21, 4147f4 <feof@plt+0x10f54>
  414850:	cbz	x21, 4148c8 <feof@plt+0x11028>
  414854:	mov	x0, x21
  414858:	bl	4030b0 <strlen@plt>
  41485c:	ldr	x8, [x19, #8]
  414860:	mov	x20, x0
  414864:	mov	x0, x8
  414868:	bl	4030b0 <strlen@plt>
  41486c:	mov	w8, #0x1                   	// #1
  414870:	bfi	x8, x20, #1, #63
  414874:	add	x0, x8, x0
  414878:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  41487c:	ldrb	w8, [x21]
  414880:	mov	x22, x0
  414884:	cbz	w8, 4148ac <feof@plt+0x1100c>
  414888:	add	x8, x21, #0x1
  41488c:	mov	w9, #0x5c                  	// #92
  414890:	mov	x0, x22
  414894:	strb	w9, [x0]
  414898:	ldurb	w10, [x8, #-1]
  41489c:	strb	w10, [x0, #1]
  4148a0:	ldrb	w10, [x8], #1
  4148a4:	add	x0, x0, #0x2
  4148a8:	cbnz	w10, 414894 <feof@plt+0x10ff4>
  4148ac:	ldr	x1, [x19, #8]
  4148b0:	bl	4032f0 <strcpy@plt>
  4148b4:	mov	x0, x22
  4148b8:	ldp	x20, x19, [sp, #32]
  4148bc:	ldp	x22, x21, [sp, #16]
  4148c0:	ldp	x29, x30, [sp], #48
  4148c4:	ret
  4148c8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4148cc:	ldr	w0, [x8, #400]
  4148d0:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  4148d4:	add	x1, x1, #0x5b0
  4148d8:	mov	x2, x20
  4148dc:	bl	42c008 <feof@plt+0x28768>
  4148e0:	stp	x29, x30, [sp, #-32]!
  4148e4:	str	x19, [sp, #16]
  4148e8:	mov	x29, sp
  4148ec:	cmp	w0, #0x1
  4148f0:	b.ne	414914 <feof@plt+0x11074>  // b.any
  4148f4:	ldr	x0, [x1]
  4148f8:	mov	x19, x1
  4148fc:	ldrb	w8, [x0]
  414900:	cmp	w8, #0x2f
  414904:	b.ne	414914 <feof@plt+0x11074>  // b.any
  414908:	mov	w1, #0x4                   	// #4
  41490c:	bl	403290 <access@plt>
  414910:	cbz	w0, 414924 <feof@plt+0x11084>
  414914:	mov	x0, xzr
  414918:	ldr	x19, [sp, #16]
  41491c:	ldp	x29, x30, [sp], #32
  414920:	ret
  414924:	ldr	x0, [x19]
  414928:	b	414918 <feof@plt+0x11078>
  41492c:	cmp	w0, #0x2
  414930:	b.ne	414974 <feof@plt+0x110d4>  // b.any
  414934:	stp	x29, x30, [sp, #-32]!
  414938:	str	x19, [sp, #16]
  41493c:	mov	x29, sp
  414940:	ldr	x0, [x1]
  414944:	mov	x19, x1
  414948:	ldrb	w8, [x0]
  41494c:	cmp	w8, #0x2f
  414950:	b.ne	414960 <feof@plt+0x110c0>  // b.any
  414954:	mov	w1, #0x4                   	// #4
  414958:	bl	403290 <access@plt>
  41495c:	cbz	w0, 414964 <feof@plt+0x110c4>
  414960:	add	x19, x19, #0x8
  414964:	ldr	x0, [x19]
  414968:	ldr	x19, [sp, #16]
  41496c:	ldp	x29, x30, [sp], #32
  414970:	ret
  414974:	mov	x0, xzr
  414978:	ret
  41497c:	stp	x29, x30, [sp, #-32]!
  414980:	str	x19, [sp, #16]
  414984:	mov	x29, sp
  414988:	cmp	w0, #0x1
  41498c:	b.ne	4149f8 <feof@plt+0x11158>  // b.any
  414990:	ldr	x19, [x1]
  414994:	adrp	x1, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  414998:	add	x1, x1, #0x8e0
  41499c:	mov	x0, x19
  4149a0:	bl	403640 <strcmp@plt>
  4149a4:	cbz	w0, 414a00 <feof@plt+0x11160>
  4149a8:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  4149ac:	add	x1, x1, #0x5d5
  4149b0:	mov	x0, x19
  4149b4:	bl	403640 <strcmp@plt>
  4149b8:	cbz	w0, 414a1c <feof@plt+0x1117c>
  4149bc:	adrp	x1, 489000 <_obstack_memory_used@@Base+0xd2fc>
  4149c0:	add	x1, x1, #0xb3e
  4149c4:	mov	x0, x19
  4149c8:	bl	403640 <strcmp@plt>
  4149cc:	cbz	w0, 414a38 <feof@plt+0x11198>
  4149d0:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  4149d4:	add	x1, x1, #0x5e4
  4149d8:	mov	x0, x19
  4149dc:	bl	403640 <strcmp@plt>
  4149e0:	cbz	w0, 414a54 <feof@plt+0x111b4>
  4149e4:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  4149e8:	add	x1, x1, #0x5ee
  4149ec:	mov	x0, x19
  4149f0:	bl	403640 <strcmp@plt>
  4149f4:	cbz	w0, 414a7c <feof@plt+0x111dc>
  4149f8:	mov	x0, xzr
  4149fc:	b	414a9c <feof@plt+0x111fc>
  414a00:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  414a04:	ldrb	w8, [x8, #612]
  414a08:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  414a0c:	add	x9, x9, #0x23b
  414a10:	tst	w8, #0x2
  414a14:	csel	x0, xzr, x9, eq  // eq = none
  414a18:	b	414a9c <feof@plt+0x111fc>
  414a1c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  414a20:	ldrb	w8, [x8, #612]
  414a24:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  414a28:	add	x9, x9, #0x23b
  414a2c:	tst	w8, #0x4
  414a30:	csel	x0, xzr, x9, eq  // eq = none
  414a34:	b	414a9c <feof@plt+0x111fc>
  414a38:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  414a3c:	ldrb	w8, [x8, #612]
  414a40:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  414a44:	add	x9, x9, #0x23b
  414a48:	tst	w8, #0x8
  414a4c:	csel	x0, xzr, x9, eq  // eq = none
  414a50:	b	414a9c <feof@plt+0x111fc>
  414a54:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  414a58:	add	x8, x8, #0x264
  414a5c:	ldr	w9, [x8]
  414a60:	ldr	w8, [x8, #2696]
  414a64:	tst	w9, #0x3ffffe0
  414a68:	ccmp	w8, #0x0, #0x0, ne  // ne = any
  414a6c:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  414a70:	add	x8, x8, #0x23b
  414a74:	csel	x0, x8, xzr, eq  // eq = none
  414a78:	b	414a9c <feof@plt+0x111fc>
  414a7c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  414a80:	ldr	w8, [x8, #612]
  414a84:	mov	w9, #0x19                  	// #25
  414a88:	and	w8, w8, w9
  414a8c:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  414a90:	add	x9, x9, #0x23b
  414a94:	cmp	w8, #0x10
  414a98:	csel	x0, x9, xzr, eq  // eq = none
  414a9c:	ldr	x19, [sp, #16]
  414aa0:	ldp	x29, x30, [sp], #32
  414aa4:	ret
  414aa8:	stp	x29, x30, [sp, #-48]!
  414aac:	stp	x22, x21, [sp, #16]
  414ab0:	stp	x20, x19, [sp, #32]
  414ab4:	mov	x29, sp
  414ab8:	cmp	w0, #0x2
  414abc:	b.ne	414b30 <feof@plt+0x11290>  // b.any
  414ac0:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414ac4:	ldr	w8, [x20, #1160]
  414ac8:	cmp	w8, #0x1
  414acc:	b.lt	414b1c <feof@plt+0x1127c>  // b.tstop
  414ad0:	mov	x19, x1
  414ad4:	mov	x21, xzr
  414ad8:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414adc:	b	414af0 <feof@plt+0x11250>
  414ae0:	ldrsw	x8, [x20, #1160]
  414ae4:	add	x21, x21, #0x1
  414ae8:	cmp	x21, x8
  414aec:	b.ge	414b1c <feof@plt+0x1127c>  // b.tcont
  414af0:	ldr	x8, [x22, #1168]
  414af4:	ldr	x0, [x8, x21, lsl #3]
  414af8:	cbz	x0, 414ae0 <feof@plt+0x11240>
  414afc:	ldr	x1, [x19]
  414b00:	bl	479ca4 <feof@plt+0x76404>
  414b04:	cbnz	w0, 414ae0 <feof@plt+0x11240>
  414b08:	ldr	x0, [x19, #8]
  414b0c:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  414b10:	ldr	x8, [x22, #1168]
  414b14:	str	x0, [x8, x21, lsl #3]
  414b18:	b	414ae0 <feof@plt+0x11240>
  414b1c:	ldp	x20, x19, [sp, #32]
  414b20:	ldp	x22, x21, [sp, #16]
  414b24:	mov	x0, xzr
  414b28:	ldp	x29, x30, [sp], #48
  414b2c:	ret
  414b30:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  414b34:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  414b38:	add	x0, x0, #0x5ec
  414b3c:	add	x2, x2, #0x5f3
  414b40:	mov	w1, #0x24c6                	// #9414
  414b44:	bl	429434 <feof@plt+0x25b94>
  414b48:	stp	x29, x30, [sp, #-48]!
  414b4c:	stp	x22, x21, [sp, #16]
  414b50:	stp	x20, x19, [sp, #32]
  414b54:	mov	x29, sp
  414b58:	cmp	w0, #0x1
  414b5c:	b.ne	414bc8 <feof@plt+0x11328>  // b.any
  414b60:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414b64:	ldr	w8, [x20, #1160]
  414b68:	cmp	w8, #0x1
  414b6c:	b.lt	414bb4 <feof@plt+0x11314>  // b.tstop
  414b70:	mov	x19, x1
  414b74:	mov	x21, xzr
  414b78:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414b7c:	b	414b90 <feof@plt+0x112f0>
  414b80:	ldrsw	x8, [x20, #1160]
  414b84:	add	x21, x21, #0x1
  414b88:	cmp	x21, x8
  414b8c:	b.ge	414bb4 <feof@plt+0x11314>  // b.tcont
  414b90:	ldr	x8, [x22, #1168]
  414b94:	ldr	x0, [x8, x21, lsl #3]
  414b98:	cbz	x0, 414b80 <feof@plt+0x112e0>
  414b9c:	ldr	x1, [x19]
  414ba0:	bl	479ca4 <feof@plt+0x76404>
  414ba4:	cbnz	w0, 414b80 <feof@plt+0x112e0>
  414ba8:	ldr	x8, [x22, #1168]
  414bac:	str	xzr, [x8, x21, lsl #3]
  414bb0:	b	414b80 <feof@plt+0x112e0>
  414bb4:	ldp	x20, x19, [sp, #32]
  414bb8:	ldp	x22, x21, [sp, #16]
  414bbc:	mov	x0, xzr
  414bc0:	ldp	x29, x30, [sp], #48
  414bc4:	ret
  414bc8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  414bcc:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  414bd0:	add	x0, x0, #0x5ec
  414bd4:	add	x2, x2, #0x611
  414bd8:	mov	w1, #0x24db                	// #9435
  414bdc:	bl	429434 <feof@plt+0x25b94>
  414be0:	stp	x29, x30, [sp, #-96]!
  414be4:	stp	x28, x27, [sp, #16]
  414be8:	stp	x26, x25, [sp, #32]
  414bec:	stp	x24, x23, [sp, #48]
  414bf0:	stp	x22, x21, [sp, #64]
  414bf4:	stp	x20, x19, [sp, #80]
  414bf8:	mov	x29, sp
  414bfc:	cmp	w0, #0x2
  414c00:	b.le	414ddc <feof@plt+0x1153c>
  414c04:	ldr	x9, [x1]
  414c08:	mov	x19, x1
  414c0c:	ldrb	w8, [x9]
  414c10:	cbz	w8, 414df0 <feof@plt+0x11550>
  414c14:	ldrb	w9, [x9, #1]
  414c18:	mov	w24, #0x1                   	// #1
  414c1c:	orr	w9, w9, #0x2
  414c20:	cmp	w9, #0x3e
  414c24:	b.ne	414c30 <feof@plt+0x11390>  // b.any
  414c28:	cmp	w8, #0x21
  414c2c:	cinc	w24, w24, ne  // ne = any
  414c30:	add	w8, w24, #0x3
  414c34:	cmp	w8, w0
  414c38:	b.ne	414e08 <feof@plt+0x11568>  // b.any
  414c3c:	add	w25, w24, #0x1
  414c40:	ldr	x23, [x19, w25, uxtw #3]
  414c44:	mov	x0, x23
  414c48:	bl	4030b0 <strlen@plt>
  414c4c:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414c50:	ldr	w8, [x26, #1560]
  414c54:	cmp	w8, #0x1
  414c58:	b.lt	414cf0 <feof@plt+0x11450>  // b.tstop
  414c5c:	mov	x20, x0
  414c60:	mov	x27, xzr
  414c64:	mov	x22, xzr
  414c68:	mov	x21, xzr
  414c6c:	adrp	x28, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  414c70:	ldr	x8, [x28, #1592]
  414c74:	mov	x1, x23
  414c78:	mov	x2, x20
  414c7c:	ldr	x0, [x8, x27]
  414c80:	bl	403450 <strncmp@plt>
  414c84:	cbnz	w0, 414ca4 <feof@plt+0x11404>
  414c88:	mov	w0, w22
  414c8c:	mov	w1, w20
  414c90:	bl	414258 <feof@plt+0x109b8>
  414c94:	cbz	w0, 414ca4 <feof@plt+0x11404>
  414c98:	ldr	x8, [x28, #1592]
  414c9c:	ldr	x8, [x8, x27]
  414ca0:	add	x21, x8, x20
  414ca4:	ldrsw	x8, [x26, #1560]
  414ca8:	add	x22, x22, #0x1
  414cac:	cmp	x22, x8
  414cb0:	b.ge	414cc0 <feof@plt+0x11420>  // b.tcont
  414cb4:	ldr	x23, [x19, x25, lsl #3]
  414cb8:	add	x27, x27, #0x18
  414cbc:	b	414c70 <feof@plt+0x113d0>
  414cc0:	cbz	x21, 414cf0 <feof@plt+0x11450>
  414cc4:	ldr	x1, [x19, #8]
  414cc8:	mov	x0, x21
  414ccc:	bl	415c78 <feof@plt+0x123d8>
  414cd0:	cmp	w24, #0x2
  414cd4:	mov	w20, w0
  414cd8:	b.ne	414cfc <feof@plt+0x1145c>  // b.any
  414cdc:	ldr	x1, [x19, #16]
  414ce0:	mov	x0, x21
  414ce4:	bl	415c78 <feof@plt+0x123d8>
  414ce8:	mov	w8, wzr
  414cec:	b	414d04 <feof@plt+0x11464>
  414cf0:	mov	w20, #0xffffffff            	// #-1
  414cf4:	mov	w8, #0x1                   	// #1
  414cf8:	b	414d00 <feof@plt+0x11460>
  414cfc:	mov	w8, wzr
  414d00:	mov	w0, #0xffffffff            	// #-1
  414d04:	ldr	x2, [x19]
  414d08:	mov	w10, #0x3c3d                	// #15421
  414d0c:	ldrh	w9, [x2]
  414d10:	lsl	w9, w9, #16
  414d14:	rev	w9, w9
  414d18:	cmp	w9, w10
  414d1c:	b.gt	414d44 <feof@plt+0x114a4>
  414d20:	mov	w10, #0x213c                	// #8508
  414d24:	cmp	w9, w10
  414d28:	b.eq	414d6c <feof@plt+0x114cc>  // b.none
  414d2c:	mov	w10, #0x213e                	// #8510
  414d30:	cmp	w9, w10
  414d34:	b.ne	414d8c <feof@plt+0x114ec>  // b.any
  414d38:	cmp	w20, #0x0
  414d3c:	cset	w9, lt  // lt = tstop
  414d40:	b	414d74 <feof@plt+0x114d4>
  414d44:	mov	w8, #0x3c3e                	// #15422
  414d48:	cmp	w9, w8
  414d4c:	b.eq	414d80 <feof@plt+0x114e0>  // b.none
  414d50:	mov	w8, #0x3e3c                	// #15932
  414d54:	cmp	w9, w8
  414d58:	b.ne	414da4 <feof@plt+0x11504>  // b.any
  414d5c:	mov	x8, xzr
  414d60:	tbnz	w20, #31, 414dbc <feof@plt+0x1151c>
  414d64:	tbnz	w0, #31, 414db4 <feof@plt+0x11514>
  414d68:	b	414dbc <feof@plt+0x1151c>
  414d6c:	cmp	w20, #0x0
  414d70:	cset	w9, ge  // ge = tcont
  414d74:	orr	w8, w8, w9
  414d78:	tbz	w8, #0, 414d9c <feof@plt+0x114fc>
  414d7c:	b	414db4 <feof@plt+0x11514>
  414d80:	tbnz	w20, #31, 414db4 <feof@plt+0x11514>
  414d84:	tbnz	w0, #31, 414d9c <feof@plt+0x114fc>
  414d88:	b	414db4 <feof@plt+0x11514>
  414d8c:	mov	w8, #0x3c00                	// #15360
  414d90:	cmp	w9, w8
  414d94:	b.ne	414e1c <feof@plt+0x1157c>  // b.any
  414d98:	tbnz	w20, #31, 414db4 <feof@plt+0x11514>
  414d9c:	mov	x8, xzr
  414da0:	b	414dbc <feof@plt+0x1151c>
  414da4:	mov	w8, #0x3e3d                	// #15933
  414da8:	cmp	w9, w8
  414dac:	b.ne	414e1c <feof@plt+0x1157c>  // b.any
  414db0:	tbnz	w20, #31, 414d9c <feof@plt+0x114fc>
  414db4:	add	w8, w24, #0x2
  414db8:	ldr	x8, [x19, w8, uxtw #3]
  414dbc:	ldp	x20, x19, [sp, #80]
  414dc0:	ldp	x22, x21, [sp, #64]
  414dc4:	ldp	x24, x23, [sp, #48]
  414dc8:	ldp	x26, x25, [sp, #32]
  414dcc:	ldp	x28, x27, [sp, #16]
  414dd0:	mov	x0, x8
  414dd4:	ldp	x29, x30, [sp], #96
  414dd8:	ret
  414ddc:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  414de0:	ldr	w0, [x8, #400]
  414de4:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  414de8:	add	x1, x1, #0x62e
  414dec:	bl	42c008 <feof@plt+0x28768>
  414df0:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  414df4:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  414df8:	add	x0, x0, #0x5ec
  414dfc:	add	x2, x2, #0x656
  414e00:	mov	w1, #0x2526                	// #9510
  414e04:	bl	429434 <feof@plt+0x25b94>
  414e08:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  414e0c:	ldr	w0, [x8, #400]
  414e10:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  414e14:	add	x1, x1, #0x674
  414e18:	bl	42c008 <feof@plt+0x28768>
  414e1c:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  414e20:	ldr	w0, [x8, #400]
  414e24:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  414e28:	add	x1, x1, #0x69d
  414e2c:	bl	42c008 <feof@plt+0x28768>
  414e30:	sub	sp, sp, #0x40
  414e34:	stp	x29, x30, [sp, #32]
  414e38:	stp	x20, x19, [sp, #48]
  414e3c:	add	x29, sp, #0x20
  414e40:	cmp	w0, #0x1
  414e44:	b.ne	414ee8 <feof@plt+0x11648>  // b.any
  414e48:	ldr	x20, [x1]
  414e4c:	mov	x19, x1
  414e50:	ldrb	w8, [x20]
  414e54:	cmp	w8, #0x2f
  414e58:	b.ne	414e7c <feof@plt+0x115dc>  // b.any
  414e5c:	mov	w1, #0x4                   	// #4
  414e60:	mov	x0, x20
  414e64:	bl	403290 <access@plt>
  414e68:	cbnz	w0, 414ec4 <feof@plt+0x11624>
  414e6c:	mov	x0, x20
  414e70:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  414e74:	cbnz	x0, 414ec8 <feof@plt+0x11628>
  414e78:	b	414ec4 <feof@plt+0x11624>
  414e7c:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  414e80:	add	x8, x8, #0x23b
  414e84:	mov	x0, x20
  414e88:	stp	x20, x8, [sp]
  414e8c:	bl	4030b0 <strlen@plt>
  414e90:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  414e94:	ldr	d0, [x8, #1632]
  414e98:	str	w0, [sp, #16]
  414e9c:	sxtw	x2, w0
  414ea0:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  414ea4:	adrp	x3, 412000 <feof@plt+0xe760>
  414ea8:	add	x0, x0, #0x4b8
  414eac:	add	x3, x3, #0xab8
  414eb0:	mov	x4, sp
  414eb4:	mov	w1, #0x1                   	// #1
  414eb8:	stur	d0, [sp, #20]
  414ebc:	bl	4126ac <feof@plt+0xee0c>
  414ec0:	cbnz	x0, 414ec8 <feof@plt+0x11628>
  414ec4:	ldr	x0, [x19]
  414ec8:	mov	w1, wzr
  414ecc:	mov	w2, wzr
  414ed0:	bl	40b0a0 <feof@plt+0x7800>
  414ed4:	ldp	x20, x19, [sp, #48]
  414ed8:	ldp	x29, x30, [sp, #32]
  414edc:	mov	x0, xzr
  414ee0:	add	sp, sp, #0x40
  414ee4:	ret
  414ee8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  414eec:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  414ef0:	add	x0, x0, #0x5ec
  414ef4:	add	x2, x2, #0x721
  414ef8:	mov	w1, #0x2567                	// #9575
  414efc:	bl	429434 <feof@plt+0x25b94>
  414f00:	sub	sp, sp, #0x40
  414f04:	stp	x29, x30, [sp, #32]
  414f08:	str	x19, [sp, #48]
  414f0c:	add	x29, sp, #0x20
  414f10:	cmp	w0, #0x1
  414f14:	b.ne	414fa8 <feof@plt+0x11708>  // b.any
  414f18:	ldr	x19, [x1]
  414f1c:	ldrb	w8, [x19]
  414f20:	cmp	w8, #0x2f
  414f24:	b.ne	414f40 <feof@plt+0x116a0>  // b.any
  414f28:	mov	w1, #0x4                   	// #4
  414f2c:	mov	x0, x19
  414f30:	bl	403290 <access@plt>
  414f34:	cbz	w0, 414f88 <feof@plt+0x116e8>
  414f38:	mov	x0, xzr
  414f3c:	b	414f90 <feof@plt+0x116f0>
  414f40:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  414f44:	add	x8, x8, #0x23b
  414f48:	mov	x0, x19
  414f4c:	stp	x19, x8, [sp]
  414f50:	bl	4030b0 <strlen@plt>
  414f54:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  414f58:	ldr	d0, [x8, #1632]
  414f5c:	str	w0, [sp, #16]
  414f60:	sxtw	x2, w0
  414f64:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  414f68:	adrp	x3, 412000 <feof@plt+0xe760>
  414f6c:	add	x0, x0, #0x4b8
  414f70:	add	x3, x3, #0xab8
  414f74:	mov	x4, sp
  414f78:	mov	w1, #0x1                   	// #1
  414f7c:	stur	d0, [sp, #20]
  414f80:	bl	4126ac <feof@plt+0xee0c>
  414f84:	b	414f90 <feof@plt+0x116f0>
  414f88:	mov	x0, x19
  414f8c:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  414f90:	cmp	x0, #0x0
  414f94:	csel	x0, x19, x0, eq  // eq = none
  414f98:	ldr	x19, [sp, #48]
  414f9c:	ldp	x29, x30, [sp, #32]
  414fa0:	add	sp, sp, #0x40
  414fa4:	ret
  414fa8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  414fac:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  414fb0:	add	x0, x0, #0x5ec
  414fb4:	add	x2, x2, #0x737
  414fb8:	mov	w1, #0x2578                	// #9592
  414fbc:	bl	429434 <feof@plt+0x25b94>
  414fc0:	sub	sp, sp, #0x40
  414fc4:	stp	x29, x30, [sp, #32]
  414fc8:	str	x19, [sp, #48]
  414fcc:	add	x29, sp, #0x20
  414fd0:	cbnz	w0, 415044 <feof@plt+0x117a4>
  414fd4:	adrp	x9, 47d000 <_obstack_memory_used@@Base+0x12fc>
  414fd8:	ldr	d0, [x9, #1672]
  414fdc:	adrp	x19, 48e000 <_obstack_memory_used@@Base+0x122fc>
  414fe0:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  414fe4:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  414fe8:	adrp	x3, 412000 <feof@plt+0xe760>
  414fec:	add	x19, x19, #0x1a8
  414ff0:	add	x8, x8, #0x23b
  414ff4:	mov	w9, #0x4                   	// #4
  414ff8:	add	x0, x0, #0x4b8
  414ffc:	add	x3, x3, #0xab8
  415000:	mov	x4, sp
  415004:	mov	w1, #0x1                   	// #1
  415008:	mov	w2, #0x6                   	// #6
  41500c:	stp	x19, x8, [sp]
  415010:	str	d0, [sp, #16]
  415014:	str	w9, [sp, #24]
  415018:	bl	4126ac <feof@plt+0xee0c>
  41501c:	cmp	x0, #0x0
  415020:	csel	x1, x19, x0, eq  // eq = none
  415024:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  415028:	add	x0, x0, #0x76c
  41502c:	mov	x2, xzr
  415030:	bl	4799ac <feof@plt+0x7610c>
  415034:	ldr	x19, [sp, #48]
  415038:	ldp	x29, x30, [sp, #32]
  41503c:	add	sp, sp, #0x40
  415040:	ret
  415044:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  415048:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  41504c:	add	x0, x0, #0x5ec
  415050:	add	x2, x2, #0x74f
  415054:	mov	w1, #0x2588                	// #9608
  415058:	bl	429434 <feof@plt+0x25b94>
  41505c:	stp	x29, x30, [sp, #-16]!
  415060:	mov	x29, sp
  415064:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  415068:	add	x0, x0, #0x779
  41506c:	bl	4033e0 <gettext@plt>
  415070:	bl	403880 <printf@plt>
  415074:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  415078:	add	x0, x0, #0x79f
  41507c:	bl	4033e0 <gettext@plt>
  415080:	bl	403880 <printf@plt>
  415084:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415088:	ldr	x0, [x8, #1088]
  41508c:	bl	403550 <fflush@plt>
  415090:	mov	x0, xzr
  415094:	ldp	x29, x30, [sp], #16
  415098:	ret
  41509c:	sub	sp, sp, #0x80
  4150a0:	stp	x29, x30, [sp, #32]
  4150a4:	stp	x28, x27, [sp, #48]
  4150a8:	stp	x26, x25, [sp, #64]
  4150ac:	stp	x24, x23, [sp, #80]
  4150b0:	stp	x22, x21, [sp, #96]
  4150b4:	stp	x20, x19, [sp, #112]
  4150b8:	add	x29, sp, #0x20
  4150bc:	cbnz	w0, 415394 <feof@plt+0x11af4>
  4150c0:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4150c4:	ldr	x8, [x20, #1184]
  4150c8:	mov	x19, x1
  4150cc:	cbz	x8, 4150d4 <feof@plt+0x11834>
  4150d0:	str	wzr, [x8, #4]
  4150d4:	adrp	x28, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4150d8:	ldr	x8, [x28, #2040]
  4150dc:	cbz	x8, 4150e4 <feof@plt+0x11844>
  4150e0:	str	wzr, [x8, #4]
  4150e4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  4150e8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4150ec:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4150f0:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4150f4:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4150f8:	adrp	x25, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4150fc:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415100:	adrp	x27, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415104:	add	x0, x0, #0x805
  415108:	mov	w1, wzr
  41510c:	mov	x2, xzr
  415110:	strb	wzr, [x8, #1988]
  415114:	str	wzr, [x22, #1992]
  415118:	strb	wzr, [x23, #1996]
  41511c:	strb	wzr, [x24, #2000]
  415120:	strb	wzr, [x25, #2004]
  415124:	strb	wzr, [x26, #2008]
  415128:	str	xzr, [x27, #2016]
  41512c:	bl	40c344 <feof@plt+0x8aa4>
  415130:	bl	4105cc <feof@plt+0xcd2c>
  415134:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  415138:	add	x0, x0, #0x9d0
  41513c:	mov	w1, wzr
  415140:	mov	x2, xzr
  415144:	bl	40c344 <feof@plt+0x8aa4>
  415148:	ldr	x21, [x20, #1184]
  41514c:	cbz	x21, 415194 <feof@plt+0x118f4>
  415150:	ldr	w8, [x21, #4]
  415154:	cbz	w8, 415194 <feof@plt+0x118f4>
  415158:	sub	w8, w8, #0x1
  41515c:	ldr	x19, [x19, w8, uxtw #3]
  415160:	adrp	x1, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  415164:	add	x1, x1, #0x60
  415168:	mov	x0, x19
  41516c:	bl	403640 <strcmp@plt>
  415170:	cbz	w0, 4151d0 <feof@plt+0x11930>
  415174:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415178:	ldr	w8, [x8, #1144]
  41517c:	cbz	w8, 4151c8 <feof@plt+0x11928>
  415180:	mov	x0, x19
  415184:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  415188:	mov	x20, x0
  41518c:	mov	x19, xzr
  415190:	b	415278 <feof@plt+0x119d8>
  415194:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415198:	ldr	w8, [x8, #1144]
  41519c:	cbz	w8, 4151c8 <feof@plt+0x11928>
  4151a0:	cbz	x21, 4151a8 <feof@plt+0x11908>
  4151a4:	str	wzr, [x21, #4]
  4151a8:	ldr	x8, [x28, #2040]
  4151ac:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4151b0:	mov	x19, xzr
  4151b4:	cbz	x8, 4151bc <feof@plt+0x1191c>
  4151b8:	str	wzr, [x8, #4]
  4151bc:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  4151c0:	add	x0, x0, #0x841
  4151c4:	b	4151f4 <feof@plt+0x11954>
  4151c8:	mov	x19, xzr
  4151cc:	b	415370 <feof@plt+0x11ad0>
  4151d0:	str	wzr, [x21, #4]
  4151d4:	ldr	x8, [x28, #2040]
  4151d8:	cbz	x8, 4151e0 <feof@plt+0x11940>
  4151dc:	str	wzr, [x8, #4]
  4151e0:	adrp	x19, 481000 <_obstack_memory_used@@Base+0x52fc>
  4151e4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  4151e8:	add	x19, x19, #0x843
  4151ec:	add	x0, x0, #0x81f
  4151f0:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4151f4:	mov	w1, wzr
  4151f8:	mov	x2, xzr
  4151fc:	strb	wzr, [x9, #1988]
  415200:	str	wzr, [x22, #1992]
  415204:	strb	wzr, [x23, #1996]
  415208:	strb	wzr, [x24, #2000]
  41520c:	strb	wzr, [x25, #2004]
  415210:	strb	wzr, [x26, #2008]
  415214:	str	xzr, [x27, #2016]
  415218:	bl	40c344 <feof@plt+0x8aa4>
  41521c:	bl	4105cc <feof@plt+0xcd2c>
  415220:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  415224:	add	x0, x0, #0x9d0
  415228:	mov	w1, wzr
  41522c:	mov	x2, xzr
  415230:	bl	40c344 <feof@plt+0x8aa4>
  415234:	ldr	x8, [x20, #1184]
  415238:	cbz	x8, 4153a8 <feof@plt+0x11b08>
  41523c:	ldr	w9, [x8, #4]
  415240:	cbz	w9, 4153a8 <feof@plt+0x11b08>
  415244:	sub	w9, w9, #0x1
  415248:	add	x8, x8, w9, uxtw #3
  41524c:	ldr	x0, [x8, #8]
  415250:	mov	x1, x19
  415254:	mov	x2, xzr
  415258:	bl	4799ac <feof@plt+0x7610c>
  41525c:	mov	x20, x0
  415260:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  415264:	add	x0, x0, #0x86d
  415268:	mov	x1, x20
  41526c:	mov	x2, xzr
  415270:	bl	4799ac <feof@plt+0x7610c>
  415274:	mov	x19, x0
  415278:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41527c:	ldr	w21, [x8, #1144]
  415280:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415284:	add	x9, x9, #0x710
  415288:	lsr	x8, x21, #28
  41528c:	and	x8, x8, #0x8
  415290:	str	x20, [x9, x8]
  415294:	tbnz	w21, #31, 415328 <feof@plt+0x11a88>
  415298:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  41529c:	add	x0, x0, #0x8a7
  4152a0:	mov	w1, wzr
  4152a4:	stur	xzr, [x29, #-8]
  4152a8:	bl	403130 <open@plt>
  4152ac:	tbnz	w0, #31, 4152d0 <feof@plt+0x11a30>
  4152b0:	sub	x1, x29, #0x8
  4152b4:	mov	w2, #0x8                   	// #8
  4152b8:	mov	w20, w0
  4152bc:	bl	4032c0 <read@plt>
  4152c0:	mov	w0, w20
  4152c4:	bl	403630 <close@plt>
  4152c8:	ldur	x2, [x29, #-8]
  4152cc:	cbnz	x2, 415314 <feof@plt+0x11a74>
  4152d0:	add	x0, sp, #0x8
  4152d4:	mov	x1, xzr
  4152d8:	bl	403330 <gettimeofday@plt>
  4152dc:	ldp	x9, x8, [sp, #8]
  4152e0:	mov	x11, #0xf7cf                	// #63439
  4152e4:	movk	x11, #0xe353, lsl #16
  4152e8:	movk	x11, #0x9ba5, lsl #32
  4152ec:	movk	x11, #0x20c4, lsl #48
  4152f0:	smulh	x8, x8, x11
  4152f4:	asr	x11, x8, #7
  4152f8:	mov	w10, #0x3e8                 	// #1000
  4152fc:	add	x8, x11, x8, lsr #63
  415300:	madd	x20, x9, x10, x8
  415304:	stur	x20, [x29, #-8]
  415308:	bl	403400 <getpid@plt>
  41530c:	sxtw	x8, w0
  415310:	eor	x2, x20, x8
  415314:	adrp	x0, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415318:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  41531c:	add	x0, x0, #0x898
  415320:	add	x1, x1, #0x881
  415324:	bl	403340 <sprintf@plt>
  415328:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41532c:	ldrb	w8, [x22, #2200]
  415330:	cbz	w8, 415368 <feof@plt+0x11ac8>
  415334:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  415338:	adrp	x1, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41533c:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  415340:	add	x0, x0, #0x886
  415344:	add	x1, x1, #0x898
  415348:	add	x2, x2, #0x980
  41534c:	mov	x3, x19
  415350:	mov	x4, xzr
  415354:	bl	4799ac <feof@plt+0x7610c>
  415358:	mov	x20, x0
  41535c:	mov	x0, x19
  415360:	bl	4031d0 <free@plt>
  415364:	mov	x19, x20
  415368:	tbz	w21, #31, 415370 <feof@plt+0x11ad0>
  41536c:	strb	wzr, [x22, #2200]
  415370:	mov	x0, x19
  415374:	ldp	x20, x19, [sp, #112]
  415378:	ldp	x22, x21, [sp, #96]
  41537c:	ldp	x24, x23, [sp, #80]
  415380:	ldp	x26, x25, [sp, #64]
  415384:	ldp	x28, x27, [sp, #48]
  415388:	ldp	x29, x30, [sp, #32]
  41538c:	add	sp, sp, #0x80
  415390:	ret
  415394:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  415398:	ldr	w0, [x8, #400]
  41539c:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  4153a0:	add	x1, x1, #0x7d5
  4153a4:	bl	42c008 <feof@plt+0x28768>
  4153a8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  4153ac:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  4153b0:	add	x0, x0, #0x5ec
  4153b4:	add	x2, x2, #0x848
  4153b8:	mov	w1, #0x25ee                	// #9710
  4153bc:	bl	429434 <feof@plt+0x25b94>
  4153c0:	stp	x29, x30, [sp, #-32]!
  4153c4:	str	x19, [sp, #16]
  4153c8:	mov	x29, sp
  4153cc:	cbnz	w0, 4154d0 <feof@plt+0x11c30>
  4153d0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4153d4:	ldr	w8, [x8, #1144]
  4153d8:	tbnz	w8, #31, 4153ec <feof@plt+0x11b4c>
  4153dc:	ldr	x19, [sp, #16]
  4153e0:	mov	x0, xzr
  4153e4:	ldp	x29, x30, [sp], #32
  4153e8:	ret
  4153ec:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4153f0:	ldr	x8, [x19, #1184]
  4153f4:	cbz	x8, 4153fc <feof@plt+0x11b5c>
  4153f8:	str	wzr, [x8, #4]
  4153fc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415400:	ldr	x8, [x8, #2040]
  415404:	cbz	x8, 41540c <feof@plt+0x11b6c>
  415408:	str	wzr, [x8, #4]
  41540c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  415410:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415414:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415418:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41541c:	adrp	x11, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415420:	adrp	x12, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415424:	adrp	x13, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415428:	adrp	x14, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41542c:	add	x0, x0, #0x8e4
  415430:	mov	w1, wzr
  415434:	mov	x2, xzr
  415438:	strb	wzr, [x8, #1988]
  41543c:	str	wzr, [x9, #1992]
  415440:	strb	wzr, [x10, #1996]
  415444:	strb	wzr, [x11, #2000]
  415448:	strb	wzr, [x12, #2004]
  41544c:	strb	wzr, [x13, #2008]
  415450:	str	xzr, [x14, #2016]
  415454:	bl	40c344 <feof@plt+0x8aa4>
  415458:	bl	4105cc <feof@plt+0xcd2c>
  41545c:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  415460:	add	x0, x0, #0x9d0
  415464:	mov	w1, wzr
  415468:	mov	x2, xzr
  41546c:	bl	40c344 <feof@plt+0x8aa4>
  415470:	ldr	x8, [x19, #1184]
  415474:	cbz	x8, 4154a0 <feof@plt+0x11c00>
  415478:	ldr	w9, [x8, #4]
  41547c:	cbz	w9, 4154a0 <feof@plt+0x11c00>
  415480:	sub	w9, w9, #0x1
  415484:	add	x8, x8, w9, uxtw #3
  415488:	ldr	x1, [x8, #8]
  41548c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  415490:	add	x0, x0, #0x8f4
  415494:	mov	x2, xzr
  415498:	bl	4799ac <feof@plt+0x7610c>
  41549c:	b	4154a4 <feof@plt+0x11c04>
  4154a0:	mov	x0, xzr
  4154a4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4154a8:	ldr	x1, [x8, #1152]
  4154ac:	ldr	x19, [sp, #16]
  4154b0:	adrp	x8, 481000 <_obstack_memory_used@@Base+0x52fc>
  4154b4:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4154b8:	add	x8, x8, #0x904
  4154bc:	str	x0, [x9, #2024]
  4154c0:	mov	x0, x8
  4154c4:	mov	x2, xzr
  4154c8:	ldp	x29, x30, [sp], #32
  4154cc:	b	4799ac <feof@plt+0x7610c>
  4154d0:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4154d4:	ldr	w0, [x8, #400]
  4154d8:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  4154dc:	add	x1, x1, #0x8b4
  4154e0:	bl	42c008 <feof@plt+0x28768>
  4154e4:	stp	x29, x30, [sp, #-48]!
  4154e8:	str	x21, [sp, #16]
  4154ec:	stp	x20, x19, [sp, #32]
  4154f0:	mov	x29, sp
  4154f4:	cmp	w0, #0x1
  4154f8:	b.ne	4155b0 <feof@plt+0x11d10>  // b.any
  4154fc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415500:	ldr	w8, [x8, #1144]
  415504:	tbnz	w8, #31, 415510 <feof@plt+0x11c70>
  415508:	mov	x20, xzr
  41550c:	b	41559c <feof@plt+0x11cfc>
  415510:	ldr	x20, [x1]
  415514:	mov	x19, x1
  415518:	mov	x0, x20
  41551c:	bl	4030b0 <strlen@plt>
  415520:	mov	x21, x0
  415524:	cmp	w21, #0x3
  415528:	b.lt	4155d8 <feof@plt+0x11d38>  // b.tstop
  41552c:	add	x8, x20, w21, sxtw
  415530:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  415534:	sub	x0, x8, #0x3
  415538:	add	x1, x1, #0xa21
  41553c:	bl	403640 <strcmp@plt>
  415540:	cbnz	w0, 4155d8 <feof@plt+0x11d38>
  415544:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415548:	ldr	x20, [x8, #2024]
  41554c:	cbnz	x20, 41559c <feof@plt+0x11cfc>
  415550:	mov	x9, #0xfffd00000000        	// #281462091808768
  415554:	lsl	x8, x21, #32
  415558:	movk	x9, #0xffff, lsl #48
  41555c:	add	x8, x8, x9
  415560:	asr	x21, x8, #32
  415564:	add	x0, x21, #0xa
  415568:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  41556c:	adrp	x8, 481000 <_obstack_memory_used@@Base+0x52fc>
  415570:	add	x8, x8, #0xa25
  415574:	ldr	x8, [x8]
  415578:	mov	w9, #0x20                  	// #32
  41557c:	mov	x20, x0
  415580:	strb	w9, [x0, #8]
  415584:	str	x8, [x0], #9
  415588:	ldr	x1, [x19]
  41558c:	mov	x2, x21
  415590:	bl	402fc0 <memcpy@plt>
  415594:	add	x8, x21, x20
  415598:	strb	wzr, [x8, #9]
  41559c:	mov	x0, x20
  4155a0:	ldp	x20, x19, [sp, #32]
  4155a4:	ldr	x21, [sp, #16]
  4155a8:	ldp	x29, x30, [sp], #48
  4155ac:	ret
  4155b0:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4155b4:	cbnz	w0, 4155c8 <feof@plt+0x11d28>
  4155b8:	ldr	w0, [x8, #400]
  4155bc:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  4155c0:	add	x1, x1, #0x983
  4155c4:	bl	42c008 <feof@plt+0x28768>
  4155c8:	ldr	w0, [x8, #400]
  4155cc:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  4155d0:	add	x1, x1, #0x9b5
  4155d4:	bl	42c008 <feof@plt+0x28768>
  4155d8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4155dc:	ldr	w0, [x8, #400]
  4155e0:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  4155e4:	add	x1, x1, #0x9e8
  4155e8:	bl	42c008 <feof@plt+0x28768>
  4155ec:	stp	x29, x30, [sp, #-96]!
  4155f0:	str	x27, [sp, #16]
  4155f4:	stp	x26, x25, [sp, #32]
  4155f8:	stp	x24, x23, [sp, #48]
  4155fc:	stp	x22, x21, [sp, #64]
  415600:	stp	x20, x19, [sp, #80]
  415604:	mov	x29, sp
  415608:	mov	w20, w0
  41560c:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  415610:	add	x0, x0, #0x9d0
  415614:	mov	x19, x1
  415618:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  41561c:	cmp	w20, #0x1
  415620:	mov	x25, x0
  415624:	b.lt	4156f4 <feof@plt+0x11e54>  // b.tstop
  415628:	adrp	x21, 481000 <_obstack_memory_used@@Base+0x52fc>
  41562c:	adrp	x22, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  415630:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x32fc>
  415634:	adrp	x24, 481000 <_obstack_memory_used@@Base+0x52fc>
  415638:	mov	w27, wzr
  41563c:	add	x21, x21, #0xa2f
  415640:	add	x22, x22, #0x9d0
  415644:	add	x23, x23, #0x97f
  415648:	add	x24, x24, #0xa4c
  41564c:	b	415680 <feof@plt+0x11de0>
  415650:	mov	x0, x26
  415654:	bl	4030b0 <strlen@plt>
  415658:	add	x8, x26, x0
  41565c:	sub	x1, x8, #0x2
  415660:	mov	x0, x23
  415664:	bl	403640 <strcmp@plt>
  415668:	cbz	w0, 4156c4 <feof@plt+0x11e24>
  41566c:	mov	x26, x25
  415670:	add	w27, w27, #0x1
  415674:	cmp	w27, w20
  415678:	mov	x25, x26
  41567c:	b.ge	4156f8 <feof@plt+0x11e58>  // b.tcont
  415680:	ldr	x26, [x19, w27, sxtw #3]
  415684:	ldrb	w8, [x26]
  415688:	cmp	w8, #0x2d
  41568c:	b.ne	415650 <feof@plt+0x11db0>  // b.any
  415690:	ldrb	w8, [x26, #1]
  415694:	cmp	w8, #0x6c
  415698:	b.ne	415650 <feof@plt+0x11db0>  // b.any
  41569c:	ldrb	w8, [x26, #2]!
  4156a0:	cbnz	w8, 4156b8 <feof@plt+0x11e18>
  4156a4:	sxtw	x8, w27
  4156a8:	add	x27, x8, #0x1
  4156ac:	cmp	w27, w20
  4156b0:	b.ge	4156f4 <feof@plt+0x11e54>  // b.tcont
  4156b4:	ldr	x26, [x19, x27, lsl #3]
  4156b8:	mov	x0, x25
  4156bc:	mov	x1, x21
  4156c0:	b	4156cc <feof@plt+0x11e2c>
  4156c4:	mov	x0, x25
  4156c8:	mov	x1, x24
  4156cc:	mov	x2, x26
  4156d0:	mov	x3, x22
  4156d4:	mov	x4, xzr
  4156d8:	bl	4799ac <feof@plt+0x7610c>
  4156dc:	mov	x26, x0
  4156e0:	cmp	x0, x25
  4156e4:	b.eq	41566c <feof@plt+0x11dcc>  // b.none
  4156e8:	mov	x0, x25
  4156ec:	bl	4031d0 <free@plt>
  4156f0:	b	415670 <feof@plt+0x11dd0>
  4156f4:	mov	x26, x25
  4156f8:	mov	x0, x26
  4156fc:	ldp	x20, x19, [sp, #80]
  415700:	ldp	x22, x21, [sp, #64]
  415704:	ldp	x24, x23, [sp, #48]
  415708:	ldp	x26, x25, [sp, #32]
  41570c:	ldr	x27, [sp, #16]
  415710:	ldp	x29, x30, [sp], #96
  415714:	ret
  415718:	stp	x29, x30, [sp, #-32]!
  41571c:	stp	x20, x19, [sp, #16]
  415720:	mov	x29, sp
  415724:	cmp	w0, #0x2
  415728:	b.ne	4157a4 <feof@plt+0x11f04>  // b.any
  41572c:	ldr	x0, [x1]
  415730:	mov	x20, x1
  415734:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  415738:	mov	x19, x0
  41573c:	bl	4030b0 <strlen@plt>
  415740:	sub	w8, w0, #0x1
  415744:	sxtw	x9, w8
  415748:	mov	x8, x9
  41574c:	tbnz	w8, #31, 415760 <feof@plt+0x11ec0>
  415750:	ldrb	w9, [x19, w8, uxtw]
  415754:	cmp	w9, #0x2f
  415758:	sub	x9, x8, #0x1
  41575c:	b.ne	415748 <feof@plt+0x11ea8>  // b.any
  415760:	add	x8, x19, x8
  415764:	add	x0, x8, #0x1
  415768:	mov	w1, #0x2e                  	// #46
  41576c:	bl	4035a0 <strrchr@plt>
  415770:	cbz	x0, 415778 <feof@plt+0x11ed8>
  415774:	strb	wzr, [x0]
  415778:	ldr	x1, [x20, #8]
  41577c:	mov	x0, x19
  415780:	mov	x2, xzr
  415784:	bl	4799ac <feof@plt+0x7610c>
  415788:	mov	x20, x0
  41578c:	mov	x0, x19
  415790:	bl	4031d0 <free@plt>
  415794:	mov	x0, x20
  415798:	ldp	x20, x19, [sp, #16]
  41579c:	ldp	x29, x30, [sp], #32
  4157a0:	ret
  4157a4:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4157a8:	ldr	w0, [x8, #400]
  4157ac:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  4157b0:	add	x1, x1, #0xa67
  4157b4:	bl	42c008 <feof@plt+0x28768>
  4157b8:	stp	x29, x30, [sp, #-48]!
  4157bc:	str	x21, [sp, #16]
  4157c0:	stp	x20, x19, [sp, #32]
  4157c4:	mov	x29, sp
  4157c8:	cmp	w0, #0x1
  4157cc:	b.ne	4157d8 <feof@plt+0x11f38>  // b.any
  4157d0:	mov	x0, xzr
  4157d4:	b	415844 <feof@plt+0x11fa4>
  4157d8:	b.le	415854 <feof@plt+0x11fb4>
  4157dc:	add	x21, x1, w0, sxtw #3
  4157e0:	mov	w19, w0
  4157e4:	ldur	x0, [x21, #-16]
  4157e8:	mov	x20, x1
  4157ec:	add	x1, x29, #0x18
  4157f0:	mov	w2, #0xa                   	// #10
  4157f4:	bl	403190 <strtol@plt>
  4157f8:	ldr	x8, [x29, #24]
  4157fc:	ldur	x9, [x21, #-16]
  415800:	cmp	x8, x9
  415804:	b.eq	41586c <feof@plt+0x11fcc>  // b.none
  415808:	sxtw	x8, w19
  41580c:	add	x19, x20, x8, lsl #3
  415810:	mov	x21, x0
  415814:	ldur	x0, [x19, #-8]
  415818:	add	x1, x29, #0x18
  41581c:	mov	w2, #0xa                   	// #10
  415820:	bl	403190 <strtol@plt>
  415824:	ldr	x8, [x29, #24]
  415828:	ldur	x9, [x19, #-8]
  41582c:	cmp	x8, x9
  415830:	b.eq	415884 <feof@plt+0x11fe4>  // b.none
  415834:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  415838:	add	x8, x8, #0x23b
  41583c:	cmp	x21, x0
  415840:	csel	x0, x8, xzr, gt
  415844:	ldp	x20, x19, [sp, #32]
  415848:	ldr	x21, [sp, #16]
  41584c:	ldp	x29, x30, [sp], #48
  415850:	ret
  415854:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  415858:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  41585c:	add	x0, x0, #0x5ec
  415860:	add	x2, x2, #0xacc
  415864:	mov	w1, #0x26af                	// #9903
  415868:	bl	429434 <feof@plt+0x25b94>
  41586c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  415870:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  415874:	add	x0, x0, #0x5ec
  415878:	add	x2, x2, #0xacc
  41587c:	mov	w1, #0x26b2                	// #9906
  415880:	bl	429434 <feof@plt+0x25b94>
  415884:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  415888:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  41588c:	add	x0, x0, #0x5ec
  415890:	add	x2, x2, #0xacc
  415894:	mov	w1, #0x26b5                	// #9909
  415898:	bl	429434 <feof@plt+0x25b94>
  41589c:	stp	x29, x30, [sp, #-32]!
  4158a0:	str	x19, [sp, #16]
  4158a4:	mov	x29, sp
  4158a8:	cmp	w0, #0x1
  4158ac:	b.ne	4158f8 <feof@plt+0x12058>  // b.any
  4158b0:	ldr	x0, [x1]
  4158b4:	mov	x19, x1
  4158b8:	add	x1, x29, #0x18
  4158bc:	mov	w2, #0xa                   	// #10
  4158c0:	bl	403190 <strtol@plt>
  4158c4:	ldr	x8, [x29, #24]
  4158c8:	ldr	x9, [x19]
  4158cc:	cmp	x8, x9
  4158d0:	b.eq	41590c <feof@plt+0x1206c>  // b.none
  4158d4:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4158d8:	ldr	w8, [x8, #496]
  4158dc:	ldr	x19, [sp, #16]
  4158e0:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4158e4:	add	x9, x9, #0x23b
  4158e8:	cmp	x0, x8
  4158ec:	csel	x0, x9, xzr, lt  // lt = tstop
  4158f0:	ldp	x29, x30, [sp], #32
  4158f4:	ret
  4158f8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4158fc:	ldr	w0, [x8, #400]
  415900:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  415904:	add	x1, x1, #0xa91
  415908:	bl	42c008 <feof@plt+0x28768>
  41590c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  415910:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  415914:	add	x0, x0, #0x5ec
  415918:	add	x2, x2, #0xac0
  41591c:	mov	w1, #0x26ca                	// #9930
  415920:	bl	429434 <feof@plt+0x25b94>
  415924:	sub	sp, sp, #0x70
  415928:	stp	x29, x30, [sp, #64]
  41592c:	stp	x22, x21, [sp, #80]
  415930:	stp	x20, x19, [sp, #96]
  415934:	add	x29, sp, #0x40
  415938:	cmp	w0, #0x3
  41593c:	b.ne	415984 <feof@plt+0x120e4>  // b.any
  415940:	adrp	x8, 47e000 <_obstack_memory_used@@Base+0x22fc>
  415944:	add	x8, x8, #0x528
  415948:	ldr	q0, [x8]
  41594c:	ldr	x8, [x8, #16]
  415950:	mov	x19, x1
  415954:	str	q0, [sp]
  415958:	str	x8, [sp, #16]
  41595c:	ldr	x0, [x1, #16]
  415960:	mov	x1, xzr
  415964:	bl	4175f0 <feof@plt+0x13d50>
  415968:	mov	x21, x0
  41596c:	bl	4030b0 <strlen@plt>
  415970:	mov	x20, x0
  415974:	cmp	w20, #0x1
  415978:	b.lt	41598c <feof@plt+0x120ec>  // b.tstop
  41597c:	str	w20, [sp, #8]
  415980:	b	415990 <feof@plt+0x120f0>
  415984:	mov	x19, xzr
  415988:	b	415c60 <feof@plt+0x123c0>
  41598c:	mov	w20, wzr
  415990:	mov	w0, #0x20                  	// #32
  415994:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  415998:	stp	xzr, xzr, [x0, #8]
  41599c:	str	x21, [x0]
  4159a0:	str	wzr, [x0, #24]
  4159a4:	str	x0, [sp]
  4159a8:	cbz	x0, 4159cc <feof@plt+0x1212c>
  4159ac:	mov	x8, x0
  4159b0:	ldr	x0, [x0, #8]
  4159b4:	cbz	x0, 4159c4 <feof@plt+0x12124>
  4159b8:	ldr	w9, [x0, #20]
  4159bc:	cmp	w9, #0x1
  4159c0:	b.lt	4159ac <feof@plt+0x1210c>  // b.tstop
  4159c4:	add	x22, x8, #0x8
  4159c8:	b	4159d0 <feof@plt+0x12130>
  4159cc:	mov	x22, sp
  4159d0:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x52fc>
  4159d4:	add	x0, x0, #0xaee
  4159d8:	mov	x1, xzr
  4159dc:	bl	4175f0 <feof@plt+0x13d50>
  4159e0:	mov	x21, x0
  4159e4:	bl	4030b0 <strlen@plt>
  4159e8:	cmp	w20, w0
  4159ec:	b.ge	4159f8 <feof@plt+0x12158>  // b.tcont
  4159f0:	mov	w20, w0
  4159f4:	str	w0, [sp, #8]
  4159f8:	mov	w0, #0x20                  	// #32
  4159fc:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  415a00:	str	x21, [x0]
  415a04:	str	xzr, [x0, #16]
  415a08:	str	wzr, [x0, #24]
  415a0c:	ldr	x8, [x22]
  415a10:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415a14:	str	x8, [x0, #8]
  415a18:	str	x0, [x22]
  415a1c:	ldr	x0, [x21, #1520]
  415a20:	cbz	x0, 415a74 <feof@plt+0x121d4>
  415a24:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  415a28:	ldr	x21, [x21, #1520]
  415a2c:	mov	x22, x0
  415a30:	mov	x0, x21
  415a34:	bl	4030b0 <strlen@plt>
  415a38:	cbz	x0, 415a50 <feof@plt+0x121b0>
  415a3c:	sub	x8, x0, #0x1
  415a40:	ldrb	w9, [x21, x8]
  415a44:	cmp	w9, #0x2f
  415a48:	b.ne	415a50 <feof@plt+0x121b0>  // b.any
  415a4c:	strb	wzr, [x22, x8]
  415a50:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415a54:	ldr	x1, [x8, #1528]
  415a58:	cbz	x1, 415a8c <feof@plt+0x121ec>
  415a5c:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  415a60:	add	x2, x2, #0xb53
  415a64:	mov	x0, x22
  415a68:	mov	x3, xzr
  415a6c:	bl	4799ac <feof@plt+0x7610c>
  415a70:	b	415aa0 <feof@plt+0x12200>
  415a74:	adrp	x21, 481000 <_obstack_memory_used@@Base+0x52fc>
  415a78:	mov	x1, xzr
  415a7c:	add	x21, x21, #0xb53
  415a80:	ldr	x8, [sp]
  415a84:	cbnz	x8, 415abc <feof@plt+0x1221c>
  415a88:	b	415ac8 <feof@plt+0x12228>
  415a8c:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  415a90:	add	x1, x1, #0xb53
  415a94:	mov	x0, x22
  415a98:	mov	x2, xzr
  415a9c:	bl	4799ac <feof@plt+0x7610c>
  415aa0:	mov	x21, x0
  415aa4:	mov	x0, x22
  415aa8:	bl	4031d0 <free@plt>
  415aac:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  415ab0:	add	x1, x1, #0x664
  415ab4:	ldr	x8, [sp]
  415ab8:	cbz	x8, 415ac8 <feof@plt+0x12228>
  415abc:	ldr	w9, [x8, #20]
  415ac0:	cmp	w9, #0x0
  415ac4:	b.le	415ad0 <feof@plt+0x12230>
  415ac8:	mov	x22, sp
  415acc:	b	415aec <feof@plt+0x1224c>
  415ad0:	mov	x9, x8
  415ad4:	ldr	x8, [x8, #8]
  415ad8:	cbz	x8, 415ae8 <feof@plt+0x12248>
  415adc:	ldr	w10, [x8, #20]
  415ae0:	cmp	w10, #0x1
  415ae4:	b.lt	415ad0 <feof@plt+0x12230>  // b.tstop
  415ae8:	add	x22, x9, #0x8
  415aec:	mov	x0, x21
  415af0:	bl	4175f0 <feof@plt+0x13d50>
  415af4:	mov	x21, x0
  415af8:	bl	4030b0 <strlen@plt>
  415afc:	cmp	w20, w0
  415b00:	b.ge	415b08 <feof@plt+0x12268>  // b.tcont
  415b04:	str	w0, [sp, #8]
  415b08:	mov	w0, #0x20                  	// #32
  415b0c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  415b10:	str	x21, [x0]
  415b14:	str	xzr, [x0, #16]
  415b18:	str	wzr, [x0, #24]
  415b1c:	ldr	x8, [x22]
  415b20:	str	x8, [x0, #8]
  415b24:	str	x0, [x22]
  415b28:	ldr	x20, [x19, #8]
  415b2c:	ldrb	w8, [x20]
  415b30:	cmp	w8, #0x2f
  415b34:	b.ne	415b5c <feof@plt+0x122bc>  // b.any
  415b38:	mov	w1, #0x4                   	// #4
  415b3c:	mov	x0, x20
  415b40:	bl	403290 <access@plt>
  415b44:	cbnz	w0, 415ba8 <feof@plt+0x12308>
  415b48:	mov	x0, x20
  415b4c:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  415b50:	mov	x1, x0
  415b54:	cbnz	x0, 415c30 <feof@plt+0x12390>
  415b58:	b	415ba8 <feof@plt+0x12308>
  415b5c:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  415b60:	add	x8, x8, #0x23b
  415b64:	mov	x0, x20
  415b68:	stp	x20, x8, [sp, #32]
  415b6c:	bl	4030b0 <strlen@plt>
  415b70:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  415b74:	ldr	d0, [x8, #1632]
  415b78:	str	w0, [sp, #48]
  415b7c:	sxtw	x2, w0
  415b80:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  415b84:	adrp	x3, 412000 <feof@plt+0xe760>
  415b88:	add	x0, x0, #0x560
  415b8c:	add	x3, x3, #0xab8
  415b90:	add	x4, sp, #0x20
  415b94:	mov	w1, wzr
  415b98:	stur	d0, [sp, #52]
  415b9c:	bl	4126ac <feof@plt+0xee0c>
  415ba0:	mov	x1, x0
  415ba4:	cbnz	x0, 415c30 <feof@plt+0x12390>
  415ba8:	ldr	x20, [x19, #8]
  415bac:	ldrb	w8, [x20]
  415bb0:	cmp	w8, #0x2f
  415bb4:	b.ne	415be8 <feof@plt+0x12348>  // b.any
  415bb8:	mov	w1, #0x4                   	// #4
  415bbc:	mov	x0, x20
  415bc0:	bl	403290 <access@plt>
  415bc4:	cbnz	w0, 415bd8 <feof@plt+0x12338>
  415bc8:	mov	x0, x20
  415bcc:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  415bd0:	mov	x1, x0
  415bd4:	cbnz	x0, 415c30 <feof@plt+0x12390>
  415bd8:	mov	x19, xzr
  415bdc:	ldr	x20, [sp]
  415be0:	cbnz	x20, 415c48 <feof@plt+0x123a8>
  415be4:	b	415c60 <feof@plt+0x123c0>
  415be8:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  415bec:	add	x8, x8, #0x23b
  415bf0:	mov	x0, x20
  415bf4:	stp	x20, x8, [sp, #32]
  415bf8:	bl	4030b0 <strlen@plt>
  415bfc:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  415c00:	ldr	d0, [x8, #1632]
  415c04:	adrp	x3, 412000 <feof@plt+0xe760>
  415c08:	str	w0, [sp, #48]
  415c0c:	sxtw	x2, w0
  415c10:	add	x3, x3, #0xab8
  415c14:	mov	x0, sp
  415c18:	add	x4, sp, #0x20
  415c1c:	mov	w1, wzr
  415c20:	stur	d0, [sp, #52]
  415c24:	bl	4126ac <feof@plt+0xee0c>
  415c28:	mov	x1, x0
  415c2c:	cbz	x0, 415bd8 <feof@plt+0x12338>
  415c30:	ldr	x0, [x19]
  415c34:	mov	x2, xzr
  415c38:	bl	4799ac <feof@plt+0x7610c>
  415c3c:	mov	x19, x0
  415c40:	ldr	x20, [sp]
  415c44:	cbz	x20, 415c60 <feof@plt+0x123c0>
  415c48:	ldp	x0, x21, [x20]
  415c4c:	bl	4031d0 <free@plt>
  415c50:	mov	x0, x20
  415c54:	bl	4031d0 <free@plt>
  415c58:	mov	x20, x21
  415c5c:	cbnz	x21, 415c48 <feof@plt+0x123a8>
  415c60:	mov	x0, x19
  415c64:	ldp	x20, x19, [sp, #96]
  415c68:	ldp	x22, x21, [sp, #80]
  415c6c:	ldp	x29, x30, [sp, #64]
  415c70:	add	sp, sp, #0x70
  415c74:	ret
  415c78:	sub	sp, sp, #0x60
  415c7c:	stp	x29, x30, [sp, #64]
  415c80:	stp	x20, x19, [sp, #80]
  415c84:	add	x29, sp, #0x40
  415c88:	mov	x19, x1
  415c8c:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  415c90:	mov	x20, x0
  415c94:	add	x1, x1, #0x6c8
  415c98:	mov	x0, sp
  415c9c:	mov	w2, #0x9                   	// #9
  415ca0:	bl	469310 <feof@plt+0x65a70>
  415ca4:	cbnz	w0, 415d3c <feof@plt+0x1249c>
  415ca8:	mov	x0, sp
  415cac:	mov	x1, x20
  415cb0:	mov	x2, xzr
  415cb4:	mov	x3, xzr
  415cb8:	mov	w4, wzr
  415cbc:	bl	469474 <feof@plt+0x65bd4>
  415cc0:	cbnz	w0, 415cfc <feof@plt+0x1245c>
  415cc4:	mov	x0, sp
  415cc8:	mov	x1, x19
  415ccc:	mov	x2, xzr
  415cd0:	mov	x3, xzr
  415cd4:	mov	w4, wzr
  415cd8:	bl	469474 <feof@plt+0x65bd4>
  415cdc:	cbnz	w0, 415d1c <feof@plt+0x1247c>
  415ce0:	mov	x0, x20
  415ce4:	mov	x1, x19
  415ce8:	bl	4032b0 <strverscmp@plt>
  415cec:	ldp	x20, x19, [sp, #80]
  415cf0:	ldp	x29, x30, [sp, #64]
  415cf4:	add	sp, sp, #0x60
  415cf8:	ret
  415cfc:	cmp	w0, #0x1
  415d00:	b.ne	415d54 <feof@plt+0x124b4>  // b.any
  415d04:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  415d08:	ldr	w0, [x8, #400]
  415d0c:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  415d10:	add	x1, x1, #0x706
  415d14:	mov	x2, x20
  415d18:	bl	42c008 <feof@plt+0x28768>
  415d1c:	cmp	w0, #0x1
  415d20:	b.ne	415d6c <feof@plt+0x124cc>  // b.any
  415d24:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  415d28:	ldr	w0, [x8, #400]
  415d2c:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  415d30:	add	x1, x1, #0x706
  415d34:	mov	x2, x19
  415d38:	bl	42c008 <feof@plt+0x28768>
  415d3c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  415d40:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  415d44:	add	x0, x0, #0x5ec
  415d48:	add	x2, x2, #0x6ee
  415d4c:	mov	w1, #0x24f1                	// #9457
  415d50:	bl	429434 <feof@plt+0x25b94>
  415d54:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  415d58:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  415d5c:	add	x0, x0, #0x5ec
  415d60:	add	x2, x2, #0x6ee
  415d64:	mov	w1, #0x24f6                	// #9462
  415d68:	bl	429434 <feof@plt+0x25b94>
  415d6c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  415d70:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x52fc>
  415d74:	add	x0, x0, #0x5ec
  415d78:	add	x2, x2, #0x6ee
  415d7c:	mov	w1, #0x24fb                	// #9467
  415d80:	bl	429434 <feof@plt+0x25b94>
  415d84:	stp	x29, x30, [sp, #-48]!
  415d88:	stp	x22, x21, [sp, #16]
  415d8c:	stp	x20, x19, [sp, #32]
  415d90:	mov	x29, sp
  415d94:	ldrb	w8, [x1, #8]
  415d98:	mov	x19, x1
  415d9c:	mov	x20, x0
  415da0:	cbz	w8, 415db4 <feof@plt+0x12514>
  415da4:	mov	x0, x20
  415da8:	mov	w1, wzr
  415dac:	bl	412590 <feof@plt+0xecf0>
  415db0:	cbz	w0, 415e38 <feof@plt+0x12598>
  415db4:	ldrb	w8, [x19, #9]
  415db8:	cbnz	w8, 415dec <feof@plt+0x1254c>
  415dbc:	ldr	x21, [x19]
  415dc0:	ldp	x8, x9, [x21, #24]
  415dc4:	cmp	x9, x8
  415dc8:	b.ne	415ddc <feof@plt+0x1253c>  // b.any
  415dcc:	mov	w1, #0x1                   	// #1
  415dd0:	mov	x0, x21
  415dd4:	bl	47bae8 <_obstack_newchunk@@Base>
  415dd8:	ldr	x8, [x21, #24]
  415ddc:	add	x9, x8, #0x1
  415de0:	mov	w10, #0x3a                  	// #58
  415de4:	str	x9, [x21, #24]
  415de8:	strb	w10, [x8]
  415dec:	ldr	x21, [x19]
  415df0:	mov	x0, x20
  415df4:	bl	4030b0 <strlen@plt>
  415df8:	mov	x22, x0
  415dfc:	ldp	x0, x8, [x21, #24]
  415e00:	sub	x8, x8, x0
  415e04:	cmp	x8, x22
  415e08:	b.cs	415e1c <feof@plt+0x1257c>  // b.hs, b.nlast
  415e0c:	mov	x0, x21
  415e10:	mov	x1, x22
  415e14:	bl	47bae8 <_obstack_newchunk@@Base>
  415e18:	ldr	x0, [x21, #24]
  415e1c:	mov	x1, x20
  415e20:	mov	x2, x22
  415e24:	bl	402fc0 <memcpy@plt>
  415e28:	ldr	x8, [x21, #24]
  415e2c:	add	x8, x8, x22
  415e30:	str	x8, [x21, #24]
  415e34:	strb	wzr, [x19, #9]
  415e38:	ldp	x20, x19, [sp, #32]
  415e3c:	ldp	x22, x21, [sp, #16]
  415e40:	mov	x0, xzr
  415e44:	ldp	x29, x30, [sp], #48
  415e48:	ret
  415e4c:	sub	sp, sp, #0x70
  415e50:	stp	x29, x30, [sp, #16]
  415e54:	stp	x28, x27, [sp, #32]
  415e58:	stp	x26, x25, [sp, #48]
  415e5c:	stp	x24, x23, [sp, #64]
  415e60:	stp	x22, x21, [sp, #80]
  415e64:	stp	x20, x19, [sp, #96]
  415e68:	add	x29, sp, #0x10
  415e6c:	adrp	x25, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  415e70:	mov	w28, #0xf                   	// #15
  415e74:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x12fc>
  415e78:	mov	w21, w1
  415e7c:	mov	x20, x0
  415e80:	mov	w22, wzr
  415e84:	add	x25, x25, #0x4a2
  415e88:	mov	w26, #0x204                 	// #516
  415e8c:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415e90:	mov	w27, #0x1                   	// #1
  415e94:	movk	w28, #0x24, lsl #16
  415e98:	add	x19, x19, #0xafa
  415e9c:	stur	wzr, [x29, #-4]
  415ea0:	b	415ea8 <feof@plt+0x12608>
  415ea4:	add	x20, x20, #0x1
  415ea8:	ldrb	w8, [x20]
  415eac:	cmp	w8, #0x9
  415eb0:	b.eq	415ea4 <feof@plt+0x12604>  // b.none
  415eb4:	cmp	w8, #0x20
  415eb8:	b.eq	415ea4 <feof@plt+0x12604>  // b.none
  415ebc:	cmp	w8, #0x21
  415ec0:	b.ne	415ec8 <feof@plt+0x12628>  // b.any
  415ec4:	add	x20, x20, #0x1
  415ec8:	ldrb	w8, [x20]
  415ecc:	sub	w8, w8, #0x9
  415ed0:	cmp	w8, #0x25
  415ed4:	b.hi	415ef0 <feof@plt+0x12650>  // b.pmore
  415ed8:	adr	x9, 415ec4 <feof@plt+0x12624>
  415edc:	ldrb	w10, [x19, x8]
  415ee0:	add	x9, x9, x10, lsl #2
  415ee4:	br	x9
  415ee8:	add	x20, x20, #0x1
  415eec:	mov	w22, #0x1                   	// #1
  415ef0:	mov	x8, x20
  415ef4:	b	415efc <feof@plt+0x1265c>
  415ef8:	add	x8, x8, #0x1
  415efc:	ldrb	w9, [x8]
  415f00:	ldrh	w10, [x25, x9, lsl #1]
  415f04:	tst	w10, w26
  415f08:	b.ne	415ef8 <feof@plt+0x12658>  // b.any
  415f0c:	sub	w10, w9, #0x2b
  415f10:	cmp	w10, #0x15
  415f14:	b.hi	415f24 <feof@plt+0x12684>  // b.pmore
  415f18:	lsl	w10, w27, w10
  415f1c:	tst	w10, w28
  415f20:	b.ne	415ef8 <feof@plt+0x12658>  // b.any
  415f24:	cmp	w9, #0x2a
  415f28:	cinc	x19, x8, eq  // eq = none
  415f2c:	b	415f34 <feof@plt+0x12694>
  415f30:	add	x19, x19, #0x1
  415f34:	ldrb	w10, [x19]
  415f38:	cmp	w10, #0x20
  415f3c:	b.eq	415f30 <feof@plt+0x12690>  // b.none
  415f40:	cmp	w10, #0x9
  415f44:	b.eq	415f30 <feof@plt+0x12690>  // b.none
  415f48:	ldr	w23, [x24, #1560]
  415f4c:	ldur	w11, [x29, #-4]
  415f50:	cmp	w9, #0x2a
  415f54:	cset	w9, eq  // eq = none
  415f58:	cmp	w23, #0x1
  415f5c:	orr	w11, w11, w9
  415f60:	stur	w11, [x29, #-4]
  415f64:	b.lt	415ffc <feof@plt+0x1275c>  // b.tstop
  415f68:	eor	w9, w22, #0x1
  415f6c:	tbz	w9, #0, 415ffc <feof@plt+0x1275c>
  415f70:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415f74:	ldr	x9, [x9, #1592]
  415f78:	mov	w28, w21
  415f7c:	mov	x27, xzr
  415f80:	sub	x21, x8, x20
  415f84:	add	x24, x9, #0x15
  415f88:	str	w22, [sp, #8]
  415f8c:	b	415fa8 <feof@plt+0x12708>
  415f90:	mov	w8, #0x1                   	// #1
  415f94:	strb	w8, [x24]
  415f98:	add	x27, x27, #0x1
  415f9c:	cmp	x27, x23
  415fa0:	add	x24, x24, #0x18
  415fa4:	b.cs	415fe0 <feof@plt+0x12740>  // b.hs, b.nlast
  415fa8:	ldur	x22, [x24, #-21]
  415fac:	mov	x1, x20
  415fb0:	mov	x2, x21
  415fb4:	mov	x0, x22
  415fb8:	bl	403450 <strncmp@plt>
  415fbc:	cbnz	w0, 415f98 <feof@plt+0x126f8>
  415fc0:	ldur	w8, [x29, #-4]
  415fc4:	tbnz	w8, #0, 415fd0 <feof@plt+0x12730>
  415fc8:	ldrb	w8, [x22, x21]
  415fcc:	cbnz	w8, 415f98 <feof@plt+0x126f8>
  415fd0:	ldurb	w8, [x24, #-1]
  415fd4:	cbnz	w8, 415f90 <feof@plt+0x126f0>
  415fd8:	tbz	w28, #0, 415f98 <feof@plt+0x126f8>
  415fdc:	b	415f90 <feof@plt+0x126f0>
  415fe0:	ldrb	w10, [x19]
  415fe4:	ldr	w22, [sp, #8]
  415fe8:	mov	w21, w28
  415fec:	mov	w28, #0xf                   	// #15
  415ff0:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  415ff4:	mov	w27, #0x1                   	// #1
  415ff8:	movk	w28, #0x24, lsl #16
  415ffc:	cmp	w10, #0x0
  416000:	cinc	x20, x19, ne  // ne = any
  416004:	ldrb	w8, [x20]
  416008:	cbz	w8, 4160e0 <feof@plt+0x12840>
  41600c:	ldurb	w9, [x20, #-1]
  416010:	cmp	w9, #0x3a
  416014:	b.eq	416034 <feof@plt+0x12794>  // b.none
  416018:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x12fc>
  41601c:	cmp	w9, #0x26
  416020:	add	x19, x19, #0xafa
  416024:	b.eq	415ea8 <feof@plt+0x12608>  // b.none
  416028:	cmp	w9, #0x7c
  41602c:	b.eq	415ea8 <feof@plt+0x12608>  // b.none
  416030:	b	4160e0 <feof@plt+0x12840>
  416034:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x12fc>
  416038:	add	x19, x19, #0xafa
  41603c:	b	416054 <feof@plt+0x127b4>
  416040:	add	x0, x20, #0x2
  416044:	and	w1, w21, #0x1
  416048:	bl	415e4c <feof@plt+0x125ac>
  41604c:	ldrb	w8, [x0]
  416050:	mov	x20, x0
  416054:	ands	w9, w8, #0xff
  416058:	b.eq	4160c4 <feof@plt+0x12824>  // b.none
  41605c:	cmp	w9, #0x3b
  416060:	b.eq	4160c4 <feof@plt+0x12824>  // b.none
  416064:	cmp	w9, #0x7d
  416068:	b.eq	4160c4 <feof@plt+0x12824>  // b.none
  41606c:	and	w8, w8, #0xff
  416070:	cmp	w8, #0x25
  416074:	add	x0, x20, #0x1
  416078:	b.ne	41604c <feof@plt+0x127ac>  // b.any
  41607c:	ldrb	w8, [x0]
  416080:	cmp	w8, #0x56
  416084:	b.gt	41609c <feof@plt+0x127fc>
  416088:	cmp	w8, #0x3c
  41608c:	b.eq	416040 <feof@plt+0x127a0>  // b.none
  416090:	cmp	w8, #0x40
  416094:	b.eq	4160b0 <feof@plt+0x12810>  // b.none
  416098:	b	41604c <feof@plt+0x127ac>
  41609c:	cmp	w8, #0x57
  4160a0:	b.eq	4160b0 <feof@plt+0x12810>  // b.none
  4160a4:	cmp	w8, #0x7b
  4160a8:	b.eq	416040 <feof@plt+0x127a0>  // b.none
  4160ac:	b	41604c <feof@plt+0x127ac>
  4160b0:	ldrb	w8, [x20, #2]
  4160b4:	cmp	w8, #0x7b
  4160b8:	b.ne	41604c <feof@plt+0x127ac>  // b.any
  4160bc:	add	x0, x20, #0x3
  4160c0:	b	416044 <feof@plt+0x127a4>
  4160c4:	tst	w8, #0xff
  4160c8:	cinc	x20, x20, ne  // ne = any
  4160cc:	ldrb	w8, [x20]
  4160d0:	cbz	w8, 4160e0 <feof@plt+0x12840>
  4160d4:	ldurb	w8, [x20, #-1]
  4160d8:	cmp	w8, #0x3b
  4160dc:	b.eq	415ea8 <feof@plt+0x12608>  // b.none
  4160e0:	mov	x0, x20
  4160e4:	ldp	x20, x19, [sp, #96]
  4160e8:	ldp	x22, x21, [sp, #80]
  4160ec:	ldp	x24, x23, [sp, #64]
  4160f0:	ldp	x26, x25, [sp, #48]
  4160f4:	ldp	x28, x27, [sp, #32]
  4160f8:	ldp	x29, x30, [sp, #16]
  4160fc:	add	sp, sp, #0x70
  416100:	ret
  416104:	sub	sp, sp, #0x40
  416108:	stp	x29, x30, [sp, #32]
  41610c:	stp	x20, x19, [sp, #48]
  416110:	add	x29, sp, #0x20
  416114:	mov	x19, x1
  416118:	mov	w20, w0
  41611c:	mov	x0, sp
  416120:	mov	w1, wzr
  416124:	mov	w2, wzr
  416128:	bl	405cf4 <feof@plt+0x2454>
  41612c:	mov	x0, sp
  416130:	mov	w1, w20
  416134:	mov	x2, x19
  416138:	bl	405d48 <feof@plt+0x24a8>
  41613c:	mov	w19, w0
  416140:	mov	x0, sp
  416144:	bl	405d18 <feof@plt+0x2478>
  416148:	mov	w0, w19
  41614c:	ldp	x20, x19, [sp, #48]
  416150:	ldp	x29, x30, [sp, #32]
  416154:	add	sp, sp, #0x40
  416158:	ret
  41615c:	ret
  416160:	cbnz	x1, 416168 <feof@plt+0x128c8>
  416164:	b	47d098 <_obstack_memory_used@@Base+0x1394>
  416168:	stp	x29, x30, [sp, #-16]!
  41616c:	mov	x29, sp
  416170:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x72fc>
  416174:	adrp	x2, 483000 <_obstack_memory_used@@Base+0x72fc>
  416178:	add	x0, x0, #0x758
  41617c:	add	x2, x2, #0x76d
  416180:	mov	w1, #0x2f                  	// #47
  416184:	bl	429434 <feof@plt+0x25b94>
  416188:	cbnz	x1, 416194 <feof@plt+0x128f4>
  41618c:	mov	w1, #0x1                   	// #1
  416190:	b	47d0cc <_obstack_memory_used@@Base+0x13c8>
  416194:	stp	x29, x30, [sp, #-16]!
  416198:	mov	x29, sp
  41619c:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x72fc>
  4161a0:	adrp	x2, 483000 <_obstack_memory_used@@Base+0x72fc>
  4161a4:	add	x0, x0, #0x758
  4161a8:	add	x2, x2, #0x780
  4161ac:	mov	w1, #0x37                  	// #55
  4161b0:	bl	429434 <feof@plt+0x25b94>
  4161b4:	b	47d11c <_obstack_memory_used@@Base+0x1418>
  4161b8:	b	4031d0 <free@plt>
  4161bc:	ret
  4161c0:	stp	x29, x30, [sp, #-96]!
  4161c4:	stp	x28, x27, [sp, #16]
  4161c8:	stp	x26, x25, [sp, #32]
  4161cc:	stp	x24, x23, [sp, #48]
  4161d0:	stp	x22, x21, [sp, #64]
  4161d4:	stp	x20, x19, [sp, #80]
  4161d8:	mov	x29, sp
  4161dc:	ldr	w22, [x1]
  4161e0:	cmp	w22, #0x2
  4161e4:	b.cc	41633c <feof@plt+0x12a9c>  // b.lo, b.ul, b.last
  4161e8:	ldr	x23, [x0]
  4161ec:	mov	x19, x1
  4161f0:	mov	x20, x0
  4161f4:	mov	w24, wzr
  4161f8:	sub	x25, x22, #0x1
  4161fc:	mov	x26, #0xfffffffe00000000    	// #-8589934592
  416200:	mov	x27, #0xffffffff00000000    	// #-4294967296
  416204:	add	x28, x23, #0x68
  416208:	b	41621c <feof@plt+0x1297c>
  41620c:	mov	w24, #0x1                   	// #1
  416210:	subs	x25, x25, #0x1
  416214:	add	x28, x28, #0x58
  416218:	b.eq	4162c0 <feof@plt+0x12a20>  // b.none
  41621c:	ldur	x8, [x28, #-16]
  416220:	cmp	x8, #0x59a
  416224:	b.eq	41623c <feof@plt+0x1299c>  // b.none
  416228:	cmp	x8, #0x547
  41622c:	b.eq	41633c <feof@plt+0x12a9c>  // b.none
  416230:	cmp	x8, #0x549
  416234:	b.ne	416210 <feof@plt+0x12970>  // b.any
  416238:	b	41633c <feof@plt+0x12a9c>
  41623c:	ldr	x21, [x28]
  416240:	mov	x0, x21
  416244:	bl	4030b0 <strlen@plt>
  416248:	cmp	w0, #0x3
  41624c:	b.lt	416210 <feof@plt+0x12970>  // b.tstop
  416250:	lsl	x8, x0, #32
  416254:	add	x9, x8, x26
  416258:	asr	x9, x9, #32
  41625c:	ldrb	w9, [x21, x9]
  416260:	cmp	w9, #0x2e
  416264:	b.ne	41627c <feof@plt+0x129dc>  // b.any
  416268:	add	x10, x8, x27
  41626c:	asr	x10, x10, #32
  416270:	ldrb	w10, [x21, x10]
  416274:	cmp	w10, #0x6d
  416278:	b.eq	41620c <feof@plt+0x1296c>  // b.none
  41627c:	cmp	w0, #0x4
  416280:	b.lt	416210 <feof@plt+0x12970>  // b.tstop
  416284:	mov	x10, #0xfffd00000000        	// #281462091808768
  416288:	movk	x10, #0xffff, lsl #48
  41628c:	add	x10, x8, x10
  416290:	asr	x10, x10, #32
  416294:	ldrb	w10, [x21, x10]
  416298:	cmp	w10, #0x2e
  41629c:	b.ne	416210 <feof@plt+0x12970>  // b.any
  4162a0:	cmp	w9, #0x6d
  4162a4:	b.ne	416210 <feof@plt+0x12970>  // b.any
  4162a8:	add	x8, x8, x27
  4162ac:	asr	x8, x8, #32
  4162b0:	ldrb	w8, [x21, x8]
  4162b4:	cmp	w8, #0x69
  4162b8:	b.eq	41620c <feof@plt+0x1296c>  // b.none
  4162bc:	b	416210 <feof@plt+0x12970>
  4162c0:	cbz	w24, 41633c <feof@plt+0x12a9c>
  4162c4:	add	w8, w22, #0x1
  4162c8:	mov	w9, #0x58                  	// #88
  4162cc:	umull	x0, w8, w9
  4162d0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4162d4:	mov	x21, x0
  4162d8:	mov	x8, xzr
  4162dc:	mov	x9, xzr
  4162e0:	add	x10, x23, x8
  4162e4:	ldp	q1, q0, [x10]
  4162e8:	add	x11, x21, x8
  4162ec:	add	x9, x9, #0x1
  4162f0:	cmp	x9, x22
  4162f4:	stp	q1, q0, [x11]
  4162f8:	ldp	q0, q1, [x10, #32]
  4162fc:	ldr	x12, [x10, #80]
  416300:	ldr	q2, [x10, #64]
  416304:	add	x8, x8, #0x58
  416308:	str	q0, [x11, #32]
  41630c:	str	x12, [x11, #80]
  416310:	stp	q1, q2, [x11, #48]
  416314:	b.cc	4162e0 <feof@plt+0x12a40>  // b.lo, b.ul, b.last
  416318:	add	x4, x21, x8
  41631c:	mov	w0, #0x543                 	// #1347
  416320:	mov	w2, #0x1                   	// #1
  416324:	mov	w3, #0x80000               	// #524288
  416328:	mov	x1, xzr
  41632c:	add	w22, w9, #0x1
  416330:	bl	41e5a0 <feof@plt+0x1ad00>
  416334:	str	w22, [x19]
  416338:	str	x21, [x20]
  41633c:	ldp	x20, x19, [sp, #80]
  416340:	ldp	x22, x21, [sp, #64]
  416344:	ldp	x24, x23, [sp, #48]
  416348:	ldp	x26, x25, [sp, #32]
  41634c:	ldp	x28, x27, [sp, #16]
  416350:	ldp	x29, x30, [sp], #96
  416354:	ret
  416358:	mov	w0, wzr
  41635c:	ret
  416360:	sub	sp, sp, #0x140
  416364:	stp	x29, x30, [sp, #224]
  416368:	stp	x28, x27, [sp, #240]
  41636c:	stp	x26, x25, [sp, #256]
  416370:	stp	x24, x23, [sp, #272]
  416374:	stp	x22, x21, [sp, #288]
  416378:	stp	x20, x19, [sp, #304]
  41637c:	add	x29, sp, #0xe0
  416380:	mov	x8, #0xffffffffffffffff    	// #-1
  416384:	stp	x8, x8, [sp, #72]
  416388:	cbz	w0, 416920 <feof@plt+0x13080>
  41638c:	ldr	x19, [x1]
  416390:	cbz	x19, 4166cc <feof@plt+0x12e2c>
  416394:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x92fc>
  416398:	add	x1, x1, #0x270
  41639c:	mov	x0, x19
  4163a0:	bl	403640 <strcmp@plt>
  4163a4:	mov	w23, w0
  4163a8:	cbz	w0, 4163e4 <feof@plt+0x12b44>
  4163ac:	adrp	x20, 483000 <_obstack_memory_used@@Base+0x72fc>
  4163b0:	add	x20, x20, #0x7db
  4163b4:	mov	x0, x19
  4163b8:	mov	x1, x20
  4163bc:	bl	403640 <strcmp@plt>
  4163c0:	cbz	w0, 4163f4 <feof@plt+0x12b54>
  4163c4:	adrp	x20, 483000 <_obstack_memory_used@@Base+0x72fc>
  4163c8:	add	x20, x20, #0x7d7
  4163cc:	mov	x0, x19
  4163d0:	mov	x1, x20
  4163d4:	bl	403640 <strcmp@plt>
  4163d8:	cbnz	w0, 4166cc <feof@plt+0x12e2c>
  4163dc:	mov	w21, wzr
  4163e0:	b	4163f8 <feof@plt+0x12b58>
  4163e4:	adrp	x20, 483000 <_obstack_memory_used@@Base+0x72fc>
  4163e8:	mov	w21, wzr
  4163ec:	add	x20, x20, #0x7db
  4163f0:	b	4163f8 <feof@plt+0x12b58>
  4163f4:	mov	w21, #0x1                   	// #1
  4163f8:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x72fc>
  4163fc:	adrp	x1, 4c8000 <_obstack_memory_used@@Base+0x4c2fc>
  416400:	add	x0, x0, #0x7e0
  416404:	add	x1, x1, #0x639
  416408:	bl	403620 <fopen@plt>
  41640c:	mov	x22, x0
  416410:	cbz	x0, 4166d0 <feof@plt+0x12e30>
  416414:	add	x0, sp, #0x58
  416418:	mov	w1, #0x80                  	// #128
  41641c:	mov	x2, x22
  416420:	bl	403490 <fgets_unlocked@plt>
  416424:	cbz	x0, 4166c4 <feof@plt+0x12e24>
  416428:	str	w23, [sp, #20]
  41642c:	adrp	x23, 483000 <_obstack_memory_used@@Base+0x72fc>
  416430:	adrp	x24, 483000 <_obstack_memory_used@@Base+0x72fc>
  416434:	str	x20, [sp, #8]
  416438:	mov	x19, xzr
  41643c:	mov	w27, wzr
  416440:	mov	w20, #0xff                  	// #255
  416444:	add	x23, x23, #0x7ee
  416448:	mov	w25, #0x18                  	// #24
  41644c:	add	x24, x24, #0xab8
  416450:	stp	xzr, x22, [sp, #24]
  416454:	b	416480 <feof@plt+0x12be0>
  416458:	mov	x23, x21
  41645c:	mov	w21, w20
  416460:	mov	w20, w22
  416464:	ldr	x22, [sp, #32]
  416468:	mov	w27, #0x1                   	// #1
  41646c:	add	x0, sp, #0x58
  416470:	mov	w1, #0x80                  	// #128
  416474:	mov	x2, x22
  416478:	bl	403490 <fgets_unlocked@plt>
  41647c:	cbz	x0, 4166f4 <feof@plt+0x12e54>
  416480:	add	x0, sp, #0x58
  416484:	mov	x1, x23
  416488:	bl	402fe0 <strstr@plt>
  41648c:	cbz	x0, 4164e0 <feof@plt+0x12c40>
  416490:	add	x0, sp, #0x58
  416494:	mov	w1, #0x3a                  	// #58
  416498:	bl	403210 <strchr@plt>
  41649c:	add	x26, x0, #0x1
  4164a0:	add	x1, sp, #0x28
  4164a4:	mov	w2, #0x10                  	// #16
  4164a8:	mov	x0, x26
  4164ac:	bl	403190 <strtol@plt>
  4164b0:	ldr	x8, [sp, #40]
  4164b4:	cmp	x8, x26
  4164b8:	csinv	w8, w0, wzr, ne  // ne = any
  4164bc:	cmp	w8, #0xff
  4164c0:	b.eq	4166c4 <feof@plt+0x12e24>  // b.none
  4164c4:	mvn	w9, w20
  4164c8:	tst	w9, #0xff
  4164cc:	b.eq	4164dc <feof@plt+0x12c3c>  // b.none
  4164d0:	cmp	w8, w20, uxtb
  4164d4:	b.eq	4164e0 <feof@plt+0x12c40>  // b.none
  4164d8:	b	4166c4 <feof@plt+0x12e24>
  4164dc:	mov	w20, w8
  4164e0:	adrp	x1, 483000 <_obstack_memory_used@@Base+0x72fc>
  4164e4:	add	x0, sp, #0x58
  4164e8:	add	x1, x1, #0x7fa
  4164ec:	bl	402fe0 <strstr@plt>
  4164f0:	cbnz	x0, 4165d4 <feof@plt+0x12d34>
  4164f4:	adrp	x1, 483000 <_obstack_memory_used@@Base+0x72fc>
  4164f8:	add	x0, sp, #0x58
  4164fc:	add	x1, x1, #0x802
  416500:	bl	402fe0 <strstr@plt>
  416504:	cbnz	x0, 41664c <feof@plt+0x12dac>
  416508:	orr	w8, w21, w27
  41650c:	tbnz	w8, #0, 41646c <feof@plt+0x12bcc>
  416510:	adrp	x1, 483000 <_obstack_memory_used@@Base+0x72fc>
  416514:	add	x0, sp, #0x58
  416518:	add	x1, x1, #0x807
  41651c:	bl	402fe0 <strstr@plt>
  416520:	cbz	x0, 4165cc <feof@plt+0x12d2c>
  416524:	mov	w22, w20
  416528:	mov	w20, w21
  41652c:	mov	x21, x23
  416530:	mov	x23, xzr
  416534:	b	416564 <feof@plt+0x12cc4>
  416538:	mov	w8, wzr
  41653c:	madd	x9, x23, x25, x24
  416540:	ldr	w9, [x9, #8]
  416544:	cmp	w8, #0x0
  416548:	orr	x10, x19, x9
  41654c:	mvn	w9, w9
  416550:	and	x9, x19, x9
  416554:	csel	x19, x10, x9, ne  // ne = any
  416558:	add	x23, x23, #0x1
  41655c:	cmp	x23, #0x15
  416560:	b.eq	416458 <feof@plt+0x12bb8>  // b.none
  416564:	madd	x8, x23, x25, x24
  416568:	ldr	x26, [x8, #16]
  41656c:	ldrb	w8, [x26]
  416570:	cbz	w8, 416558 <feof@plt+0x12cb8>
  416574:	add	x0, sp, #0x58
  416578:	bl	4030b0 <strlen@plt>
  41657c:	mov	x27, x0
  416580:	mov	w1, #0x20                  	// #32
  416584:	mov	x0, x26
  416588:	bl	403210 <strchr@plt>
  41658c:	mov	x28, x0
  416590:	cbnz	x0, 4165a0 <feof@plt+0x12d00>
  416594:	mov	x0, x26
  416598:	bl	4030b0 <strlen@plt>
  41659c:	add	x28, x26, x0
  4165a0:	sub	x3, x28, x26
  4165a4:	add	x0, sp, #0x58
  4165a8:	mov	x1, x27
  4165ac:	mov	x2, x26
  4165b0:	bl	4034a0 <memmem@plt>
  4165b4:	cbz	x0, 416538 <feof@plt+0x12c98>
  4165b8:	ldrb	w8, [x28], #1
  4165bc:	mov	x26, x28
  4165c0:	cbnz	w8, 416580 <feof@plt+0x12ce0>
  4165c4:	mov	w8, #0x1                   	// #1
  4165c8:	b	41653c <feof@plt+0x12c9c>
  4165cc:	mov	w27, wzr
  4165d0:	b	41646c <feof@plt+0x12bcc>
  4165d4:	add	x0, sp, #0x58
  4165d8:	mov	w1, #0x3a                  	// #58
  4165dc:	bl	403210 <strchr@plt>
  4165e0:	add	x26, x0, #0x1
  4165e4:	add	x1, sp, #0x28
  4165e8:	mov	w2, #0x10                  	// #16
  4165ec:	mov	x0, x26
  4165f0:	bl	403190 <strtol@plt>
  4165f4:	ldr	x8, [sp, #40]
  4165f8:	ldr	w9, [sp, #72]
  4165fc:	cmp	x8, x26
  416600:	csinv	w8, w0, wzr, ne  // ne = any
  416604:	cmn	w9, #0x1
  416608:	b.eq	416628 <feof@plt+0x12d88>  // b.none
  41660c:	cmp	w9, w8
  416610:	b.eq	41646c <feof@plt+0x12bcc>  // b.none
  416614:	ldr	w9, [sp, #76]
  416618:	cmp	w9, w8
  41661c:	b.ne	416628 <feof@plt+0x12d88>  // b.any
  416620:	cmn	w9, #0x1
  416624:	b.ne	41646c <feof@plt+0x12bcc>  // b.any
  416628:	ldr	w9, [sp, #24]
  41662c:	cmp	w9, #0x2
  416630:	b.eq	4166c4 <feof@plt+0x12e24>  // b.none
  416634:	ldr	w10, [sp, #24]
  416638:	add	x11, sp, #0x48
  41663c:	add	w9, w10, #0x1
  416640:	str	w8, [x11, w10, uxtw #2]
  416644:	str	w9, [sp, #24]
  416648:	b	41646c <feof@plt+0x12bcc>
  41664c:	add	x0, sp, #0x58
  416650:	mov	w1, #0x3a                  	// #58
  416654:	bl	403210 <strchr@plt>
  416658:	add	x26, x0, #0x1
  41665c:	add	x1, sp, #0x28
  416660:	mov	w2, #0x10                  	// #16
  416664:	mov	x0, x26
  416668:	bl	403190 <strtol@plt>
  41666c:	ldr	x8, [sp, #40]
  416670:	ldr	w9, [sp, #80]
  416674:	cmp	x8, x26
  416678:	csinv	w8, w0, wzr, ne  // ne = any
  41667c:	cmn	w9, #0x1
  416680:	b.eq	4166a0 <feof@plt+0x12e00>  // b.none
  416684:	cmp	w9, w8
  416688:	b.eq	41646c <feof@plt+0x12bcc>  // b.none
  41668c:	ldr	w9, [sp, #84]
  416690:	cmp	w9, w8
  416694:	b.ne	4166a0 <feof@plt+0x12e00>  // b.any
  416698:	cmn	w9, #0x1
  41669c:	b.ne	41646c <feof@plt+0x12bcc>  // b.any
  4166a0:	ldr	w9, [sp, #28]
  4166a4:	cmp	w9, #0x2
  4166a8:	b.eq	4166c4 <feof@plt+0x12e24>  // b.none
  4166ac:	ldr	w10, [sp, #28]
  4166b0:	add	x11, sp, #0x50
  4166b4:	add	w9, w10, #0x1
  4166b8:	str	w8, [x11, w10, uxtw #2]
  4166bc:	str	w9, [sp, #28]
  4166c0:	b	41646c <feof@plt+0x12bcc>
  4166c4:	mov	x0, x22
  4166c8:	bl	403150 <fclose@plt>
  4166cc:	mov	x22, xzr
  4166d0:	mov	x0, x22
  4166d4:	ldp	x20, x19, [sp, #304]
  4166d8:	ldp	x22, x21, [sp, #288]
  4166dc:	ldp	x24, x23, [sp, #272]
  4166e0:	ldp	x26, x25, [sp, #256]
  4166e4:	ldp	x28, x27, [sp, #240]
  4166e8:	ldp	x29, x30, [sp, #224]
  4166ec:	add	sp, sp, #0x140
  4166f0:	ret
  4166f4:	mov	x0, x22
  4166f8:	bl	403150 <fclose@plt>
  4166fc:	ldr	w11, [sp, #28]
  416700:	sub	w8, w11, #0x1
  416704:	cmp	w8, #0x1
  416708:	b.hi	4166cc <feof@plt+0x12e2c>  // b.pmore
  41670c:	ldr	w9, [sp, #24]
  416710:	cmp	w11, #0x1
  416714:	mvn	w10, w20
  416718:	cset	w8, eq  // eq = none
  41671c:	cmp	w9, #0x1
  416720:	cset	w9, ne  // ne = any
  416724:	tst	w10, #0xff
  416728:	mov	x22, xzr
  41672c:	b.eq	4166d0 <feof@plt+0x12e30>  // b.none
  416730:	ldr	w15, [sp, #20]
  416734:	and	w8, w8, w9
  416738:	tbnz	w8, #0, 4166d0 <feof@plt+0x12e30>
  41673c:	ldr	w8, [sp, #80]
  416740:	cbz	w15, 4167dc <feof@plt+0x12f3c>
  416744:	cmp	w11, #0x1
  416748:	b.eq	4167dc <feof@plt+0x12f3c>  // b.none
  41674c:	ldr	w10, [sp, #84]
  416750:	and	w8, w8, #0xfff
  416754:	mov	x9, xzr
  416758:	and	w11, w10, #0xfff
  41675c:	mov	w10, w11
  416760:	bfi	w10, w8, #12, #12
  416764:	bfi	w8, w11, #12, #12
  416768:	adrp	x11, 483000 <_obstack_memory_used@@Base+0x72fc>
  41676c:	add	x11, x11, #0xcb0
  416770:	b	416784 <feof@plt+0x12ee4>
  416774:	add	x9, x9, #0x28
  416778:	cmp	x9, #0x5a0
  41677c:	mov	x22, xzr
  416780:	b.eq	4166d0 <feof@plt+0x12e30>  // b.none
  416784:	add	x12, x11, x9
  416788:	ldrb	w13, [x12, #16]
  41678c:	cmp	w13, w20, uxtb
  416790:	b.ne	416774 <feof@plt+0x12ed4>  // b.any
  416794:	ldr	w12, [x12, #20]
  416798:	cmp	w10, w12
  41679c:	b.eq	4167a8 <feof@plt+0x12f08>  // b.none
  4167a0:	cmp	w8, w12
  4167a4:	b.ne	416774 <feof@plt+0x12ed4>  // b.any
  4167a8:	add	x20, x11, x9
  4167ac:	ldr	x3, [x20]
  4167b0:	ldr	x1, [sp, #8]
  4167b4:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x72fc>
  4167b8:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  4167bc:	add	x0, x0, #0x818
  4167c0:	add	x2, x2, #0xcc5
  4167c4:	mov	x4, xzr
  4167c8:	bl	4799ac <feof@plt+0x7610c>
  4167cc:	mov	x22, x0
  4167d0:	cbz	x0, 4166d0 <feof@plt+0x12e30>
  4167d4:	ldr	x23, [x20, #32]
  4167d8:	b	4168d8 <feof@plt+0x13038>
  4167dc:	ldr	w12, [sp, #72]
  4167e0:	adrp	x11, 483000 <_obstack_memory_used@@Base+0x72fc>
  4167e4:	mov	w10, wzr
  4167e8:	mov	x9, xzr
  4167ec:	add	x11, x11, #0xcb0
  4167f0:	b	416818 <feof@plt+0x12f78>
  4167f4:	add	x13, x11, x9
  4167f8:	ldr	w13, [x13, #24]
  4167fc:	cmp	w12, w13
  416800:	b.eq	416844 <feof@plt+0x12fa4>  // b.none
  416804:	add	x9, x9, #0x28
  416808:	mov	x22, xzr
  41680c:	cmp	x9, #0x5a0
  416810:	add	w10, w10, #0x1
  416814:	b.eq	4166d0 <feof@plt+0x12e30>  // b.none
  416818:	add	x13, x11, x9
  41681c:	ldrb	w14, [x13, #16]
  416820:	cmp	w14, w20, uxtb
  416824:	b.ne	416804 <feof@plt+0x12f64>  // b.any
  416828:	ldr	w13, [x13, #20]
  41682c:	cmp	w8, w13
  416830:	b.ne	416804 <feof@plt+0x12f64>  // b.any
  416834:	cmp	w10, #0xd
  416838:	b.eq	4167f4 <feof@plt+0x12f54>  // b.none
  41683c:	cmp	w10, #0x6
  416840:	b.eq	4167f4 <feof@plt+0x12f54>  // b.none
  416844:	add	x8, x11, x9
  416848:	cbz	w15, 416874 <feof@plt+0x12fd4>
  41684c:	ldr	x3, [x8]
  416850:	ldr	x1, [sp, #8]
  416854:	ldr	x23, [x8, #32]
  416858:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x72fc>
  41685c:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  416860:	add	x0, x0, #0x818
  416864:	add	x2, x2, #0xcc5
  416868:	mov	x4, xzr
  41686c:	bl	4799ac <feof@plt+0x7610c>
  416870:	b	4168d4 <feof@plt+0x13034>
  416874:	ldr	x20, [x8, #8]
  416878:	adrp	x1, 483000 <_obstack_memory_used@@Base+0x72fc>
  41687c:	add	x1, x1, #0x8cc
  416880:	mov	x0, x20
  416884:	bl	403640 <strcmp@plt>
  416888:	adrp	x22, 484000 <_obstack_memory_used@@Base+0x82fc>
  41688c:	add	x22, x22, #0x278
  416890:	cbz	w0, 4168bc <feof@plt+0x1301c>
  416894:	mov	w23, #0x1                   	// #1
  416898:	mov	w24, #0x18                  	// #24
  41689c:	umaddl	x25, w23, w24, x22
  4168a0:	ldr	x1, [x25]
  4168a4:	cbz	x1, 4166cc <feof@plt+0x12e2c>
  4168a8:	mov	x0, x20
  4168ac:	bl	403640 <strcmp@plt>
  4168b0:	add	w23, w23, #0x1
  4168b4:	cbnz	w0, 41689c <feof@plt+0x12ffc>
  4168b8:	mov	x22, x25
  4168bc:	ldr	x1, [x22, #8]
  4168c0:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x72fc>
  4168c4:	add	x0, x0, #0x810
  4168c8:	mov	x2, xzr
  4168cc:	bl	4799ac <feof@plt+0x7610c>
  4168d0:	ldr	x23, [x22, #16]
  4168d4:	mov	x22, x0
  4168d8:	tbnz	w21, #0, 4166d0 <feof@plt+0x12e30>
  4168dc:	add	x8, sp, #0x28
  4168e0:	mov	x0, x19
  4168e4:	mov	x1, x23
  4168e8:	add	x20, sp, #0x28
  4168ec:	bl	416e58 <feof@plt+0x135b8>
  4168f0:	ldr	x1, [sp, #40]
  4168f4:	mov	x0, x22
  4168f8:	mov	x2, xzr
  4168fc:	bl	4799ac <feof@plt+0x7610c>
  416900:	ldr	x8, [sp, #40]
  416904:	add	x9, x20, #0x10
  416908:	mov	x22, x0
  41690c:	cmp	x8, x9
  416910:	b.eq	4166d0 <feof@plt+0x12e30>  // b.none
  416914:	mov	x0, x8
  416918:	bl	403410 <_ZdlPv@plt>
  41691c:	b	4166d0 <feof@plt+0x12e30>
  416920:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x72fc>
  416924:	adrp	x2, 483000 <_obstack_memory_used@@Base+0x72fc>
  416928:	add	x0, x0, #0x79b
  41692c:	add	x2, x2, #0x7c5
  416930:	mov	w1, #0xb9                  	// #185
  416934:	bl	429434 <feof@plt+0x25b94>
  416938:	ldr	x8, [x2]
  41693c:	sub	x10, x8, #0x4fb
  416940:	cmp	x10, #0x1b
  416944:	b.hi	4169c8 <feof@plt+0x13128>  // b.pmore
  416948:	ldr	x9, [x2, #16]
  41694c:	ldr	w8, [x2, #72]
  416950:	adrp	x11, 484000 <_obstack_memory_used@@Base+0x82fc>
  416954:	add	x11, x11, #0x320
  416958:	adr	x12, 416968 <feof@plt+0x130c8>
  41695c:	ldrb	w13, [x11, x10]
  416960:	add	x12, x12, x13, lsl #2
  416964:	br	x12
  416968:	str	x9, [x0, #3600]
  41696c:	mov	w0, #0x1                   	// #1
  416970:	ret
  416974:	str	x9, [x0, #3632]
  416978:	mov	w0, #0x1                   	// #1
  41697c:	ret
  416980:	str	w8, [x0, #3640]
  416984:	mov	w0, #0x1                   	// #1
  416988:	ret
  41698c:	ldr	w8, [x0, #208]
  416990:	orr	w8, w8, #0x2
  416994:	b	4169ac <feof@plt+0x1310c>
  416998:	ldr	w9, [x0, #208]
  41699c:	cmp	w8, #0x0
  4169a0:	and	w10, w9, #0xfffffffb
  4169a4:	orr	w9, w9, #0x4
  4169a8:	csel	w8, w10, w9, eq  // eq = none
  4169ac:	str	w8, [x0, #208]
  4169b0:	mov	w0, #0x1                   	// #1
  4169b4:	ret
  4169b8:	str	x9, [x0, #3720]
  4169bc:	mov	w0, #0x1                   	// #1
  4169c0:	ret
  4169c4:	str	w8, [x0, #3660]
  4169c8:	mov	w0, #0x1                   	// #1
  4169cc:	ret
  4169d0:	sub	sp, sp, #0x90
  4169d4:	stp	x29, x30, [sp, #48]
  4169d8:	stp	x28, x27, [sp, #64]
  4169dc:	stp	x26, x25, [sp, #80]
  4169e0:	stp	x24, x23, [sp, #96]
  4169e4:	stp	x22, x21, [sp, #112]
  4169e8:	stp	x20, x19, [sp, #128]
  4169ec:	add	x29, sp, #0x30
  4169f0:	adrp	x27, 483000 <_obstack_memory_used@@Base+0x72fc>
  4169f4:	adrp	x23, 484000 <_obstack_memory_used@@Base+0x82fc>
  4169f8:	mov	x19, x2
  4169fc:	mov	x21, x1
  416a00:	mov	x24, x0
  416a04:	mov	w26, #0xffffffff            	// #-1
  416a08:	add	x27, x27, #0x81b
  416a0c:	add	x23, x23, #0x358
  416a10:	cbz	x24, 416be8 <feof@plt+0x13348>
  416a14:	ldrb	w8, [x24]
  416a18:	cbz	w8, 416be8 <feof@plt+0x13348>
  416a1c:	add	x20, x24, #0x1
  416a20:	mov	w1, #0x2b                  	// #43
  416a24:	mov	x0, x20
  416a28:	bl	403210 <strchr@plt>
  416a2c:	mov	x25, x0
  416a30:	cbz	x0, 416a44 <feof@plt+0x131a4>
  416a34:	sub	x22, x25, x20
  416a38:	subs	x28, x22, #0x2
  416a3c:	b.cs	416a58 <feof@plt+0x131b8>  // b.hs, b.nlast
  416a40:	b	416a70 <feof@plt+0x131d0>
  416a44:	mov	x0, x20
  416a48:	bl	4030b0 <strlen@plt>
  416a4c:	mov	x22, x0
  416a50:	subs	x28, x22, #0x2
  416a54:	b.cc	416a70 <feof@plt+0x131d0>  // b.lo, b.ul, b.last
  416a58:	adrp	x1, 484000 <_obstack_memory_used@@Base+0x82fc>
  416a5c:	mov	w2, #0x2                   	// #2
  416a60:	mov	x0, x20
  416a64:	add	x1, x1, #0x7b9
  416a68:	bl	403450 <strncmp@plt>
  416a6c:	cbz	w0, 416ad4 <feof@plt+0x13234>
  416a70:	cmp	x22, #0x0
  416a74:	csinc	w26, w26, wzr, eq  // eq = none
  416a78:	cbz	x22, 416c48 <feof@plt+0x133a8>
  416a7c:	mov	x24, x25
  416a80:	mov	x28, x23
  416a84:	mov	x25, x27
  416a88:	b	416a98 <feof@plt+0x131f8>
  416a8c:	ldr	x25, [x28, #16]
  416a90:	add	x28, x28, #0x28
  416a94:	cbz	x25, 416b08 <feof@plt+0x13268>
  416a98:	mov	x0, x25
  416a9c:	bl	4030b0 <strlen@plt>
  416aa0:	cmp	x0, x22
  416aa4:	b.ne	416a8c <feof@plt+0x131ec>  // b.any
  416aa8:	mov	x0, x25
  416aac:	mov	x1, x20
  416ab0:	mov	x2, x22
  416ab4:	bl	403450 <strncmp@plt>
  416ab8:	cbnz	w0, 416a8c <feof@plt+0x131ec>
  416abc:	cbz	w26, 416ae8 <feof@plt+0x13248>
  416ac0:	ldp	x9, x8, [x28, #-16]
  416ac4:	ldr	x10, [x21]
  416ac8:	orr	x8, x9, x8
  416acc:	orr	x8, x8, x10
  416ad0:	b	416afc <feof@plt+0x1325c>
  416ad4:	mov	w26, wzr
  416ad8:	add	x20, x24, #0x3
  416adc:	mov	x22, x28
  416ae0:	cbnz	x22, 416a7c <feof@plt+0x131dc>
  416ae4:	b	416c48 <feof@plt+0x133a8>
  416ae8:	ldr	x8, [x28]
  416aec:	ldur	x9, [x28, #-16]
  416af0:	ldr	x10, [x21]
  416af4:	orr	x8, x9, x8
  416af8:	bic	x8, x10, x8
  416afc:	str	x8, [x21]
  416b00:	ldur	x8, [x28, #-24]
  416b04:	cbnz	x8, 416a10 <feof@plt+0x13170>
  416b08:	cbz	x19, 416c24 <feof@plt+0x13384>
  416b0c:	add	x8, sp, #0x8
  416b10:	add	x21, x8, #0x10
  416b14:	cmp	x22, #0x10
  416b18:	mov	x0, x21
  416b1c:	str	x21, [sp, #8]
  416b20:	stur	x22, [x29, #-8]
  416b24:	b.cc	416b44 <feof@plt+0x132a4>  // b.lo, b.ul, b.last
  416b28:	add	x0, sp, #0x8
  416b2c:	sub	x1, x29, #0x8
  416b30:	mov	x2, xzr
  416b34:	bl	403770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
  416b38:	ldur	x8, [x29, #-8]
  416b3c:	str	x0, [sp, #8]
  416b40:	str	x8, [sp, #24]
  416b44:	cbz	x22, 416b68 <feof@plt+0x132c8>
  416b48:	cmp	x22, #0x1
  416b4c:	b.ne	416b5c <feof@plt+0x132bc>  // b.any
  416b50:	ldrb	w8, [x20]
  416b54:	strb	w8, [x0]
  416b58:	b	416b68 <feof@plt+0x132c8>
  416b5c:	mov	x1, x20
  416b60:	mov	x2, x22
  416b64:	bl	402fc0 <memcpy@plt>
  416b68:	ldur	x8, [x29, #-8]
  416b6c:	ldr	x9, [sp, #8]
  416b70:	str	x8, [sp, #16]
  416b74:	strb	wzr, [x9, x8]
  416b78:	ldr	x9, [sp, #8]
  416b7c:	cmp	x9, x21
  416b80:	b.eq	416b9c <feof@plt+0x132fc>  // b.none
  416b84:	mov	x10, x19
  416b88:	ldr	x8, [x10], #16
  416b8c:	cmp	x8, x10
  416b90:	b.eq	416bbc <feof@plt+0x1331c>  // b.none
  416b94:	ldr	x10, [x19, #16]
  416b98:	b	416bc0 <feof@plt+0x13320>
  416b9c:	ldr	x2, [sp, #16]
  416ba0:	cbz	x2, 416bf8 <feof@plt+0x13358>
  416ba4:	ldr	x0, [x19]
  416ba8:	cmp	x2, #0x1
  416bac:	b.ne	416bf0 <feof@plt+0x13350>  // b.any
  416bb0:	ldrb	w8, [sp, #24]
  416bb4:	strb	w8, [x0]
  416bb8:	b	416bf8 <feof@plt+0x13358>
  416bbc:	mov	x8, xzr
  416bc0:	str	x9, [x19]
  416bc4:	ldur	q0, [sp, #16]
  416bc8:	stur	q0, [x19, #8]
  416bcc:	cbz	x8, 416bdc <feof@plt+0x1333c>
  416bd0:	str	x8, [sp, #8]
  416bd4:	str	x10, [sp, #24]
  416bd8:	b	416c0c <feof@plt+0x1336c>
  416bdc:	mov	x8, x21
  416be0:	str	x21, [sp, #8]
  416be4:	b	416c0c <feof@plt+0x1336c>
  416be8:	mov	w0, wzr
  416bec:	b	416c28 <feof@plt+0x13388>
  416bf0:	mov	x1, x21
  416bf4:	bl	402fc0 <memcpy@plt>
  416bf8:	ldr	x8, [sp, #16]
  416bfc:	ldr	x9, [x19]
  416c00:	str	x8, [x19, #8]
  416c04:	strb	wzr, [x9, x8]
  416c08:	ldr	x8, [sp, #8]
  416c0c:	str	xzr, [sp, #16]
  416c10:	strb	wzr, [x8]
  416c14:	ldr	x0, [sp, #8]
  416c18:	cmp	x0, x21
  416c1c:	b.eq	416c24 <feof@plt+0x13384>  // b.none
  416c20:	bl	403410 <_ZdlPv@plt>
  416c24:	mov	w0, #0x2                   	// #2
  416c28:	ldp	x20, x19, [sp, #128]
  416c2c:	ldp	x22, x21, [sp, #112]
  416c30:	ldp	x24, x23, [sp, #96]
  416c34:	ldp	x26, x25, [sp, #80]
  416c38:	ldp	x28, x27, [sp, #64]
  416c3c:	ldp	x29, x30, [sp, #48]
  416c40:	add	sp, sp, #0x90
  416c44:	ret
  416c48:	mov	w0, #0x1                   	// #1
  416c4c:	b	416c28 <feof@plt+0x13388>
  416c50:	stp	x29, x30, [sp, #-80]!
  416c54:	stp	x26, x25, [sp, #16]
  416c58:	stp	x24, x23, [sp, #32]
  416c5c:	stp	x22, x21, [sp, #48]
  416c60:	stp	x20, x19, [sp, #64]
  416c64:	mov	x29, sp
  416c68:	adrp	x21, 484000 <_obstack_memory_used@@Base+0x82fc>
  416c6c:	mov	x19, x0
  416c70:	add	x21, x21, #0x340
  416c74:	mov	w22, #0x4                   	// #4
  416c78:	b	416ca8 <feof@plt+0x13408>
  416c7c:	ldr	x11, [x19]
  416c80:	str	w23, [x11, #4]
  416c84:	ldr	x8, [x19]
  416c88:	ldr	w9, [x8, #4]
  416c8c:	add	w10, w9, #0x1
  416c90:	str	w10, [x8, #4]
  416c94:	ldr	x10, [x21]
  416c98:	add	x8, x8, x9, lsl #3
  416c9c:	str	x10, [x8, #8]
  416ca0:	ldr	x8, [x21, #40]!
  416ca4:	cbz	x8, 416e00 <feof@plt+0x13560>
  416ca8:	ldr	x24, [x19]
  416cac:	cbz	x24, 416cf4 <feof@plt+0x13454>
  416cb0:	ldp	w8, w9, [x24]
  416cb4:	and	w0, w8, #0x7fffffff
  416cb8:	cmp	w0, w9
  416cbc:	b.ne	416c84 <feof@plt+0x133e4>  // b.any
  416cc0:	tbnz	w8, #31, 416d04 <feof@plt+0x13464>
  416cc4:	add	w1, w0, #0x1
  416cc8:	bl	425fbc <feof@plt+0x2271c>
  416ccc:	ldr	x8, [x19]
  416cd0:	mov	w9, w0
  416cd4:	lsl	x9, x9, #3
  416cd8:	mov	w20, w0
  416cdc:	add	x1, x9, #0x8
  416ce0:	mov	w23, wzr
  416ce4:	cbz	x8, 416df4 <feof@plt+0x13554>
  416ce8:	ldr	w26, [x8, #4]
  416cec:	mov	w25, wzr
  416cf0:	b	416d30 <feof@plt+0x13490>
  416cf4:	mov	w23, wzr
  416cf8:	mov	w25, wzr
  416cfc:	mov	w20, #0x4                   	// #4
  416d00:	b	416d1c <feof@plt+0x1347c>
  416d04:	str	xzr, [x19]
  416d08:	ldr	w23, [x24, #4]
  416d0c:	mov	w25, #0x1                   	// #1
  416d10:	add	w8, w23, #0x1
  416d14:	cmp	w8, #0x4
  416d18:	csinc	w20, w22, w23, ls  // ls = plast
  416d1c:	mov	w9, w20
  416d20:	lsl	x9, x9, #3
  416d24:	mov	x8, xzr
  416d28:	mov	w26, wzr
  416d2c:	add	x1, x9, #0x8
  416d30:	mov	x0, x8
  416d34:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  416d38:	and	w8, w20, #0x7fffffff
  416d3c:	str	x0, [x19]
  416d40:	stp	w8, w26, [x0]
  416d44:	cbz	w25, 416c84 <feof@plt+0x133e4>
  416d48:	ldr	x11, [x19]
  416d4c:	cbz	w23, 416c80 <feof@plt+0x133e0>
  416d50:	sub	w12, w23, #0x1
  416d54:	add	x8, x24, #0x8
  416d58:	cmp	w12, #0x3
  416d5c:	add	x9, x11, #0x8
  416d60:	b.cs	416d6c <feof@plt+0x134cc>  // b.hs, b.nlast
  416d64:	mov	w10, w23
  416d68:	b	416de0 <feof@plt+0x13540>
  416d6c:	lsl	x10, x12, #3
  416d70:	add	x13, x24, x10
  416d74:	add	x13, x13, #0x10
  416d78:	cmp	x13, x9
  416d7c:	b.ls	416d94 <feof@plt+0x134f4>  // b.plast
  416d80:	add	x10, x11, x10
  416d84:	add	x10, x10, #0x10
  416d88:	cmp	x10, x8
  416d8c:	mov	w10, w23
  416d90:	b.hi	416de0 <feof@plt+0x13540>  // b.pmore
  416d94:	add	x12, x12, #0x1
  416d98:	and	x13, x12, #0x1fffffffc
  416d9c:	lsl	x8, x13, #3
  416da0:	add	x14, x11, #0x18
  416da4:	add	x9, x24, x8
  416da8:	add	x11, x11, x8
  416dac:	sub	w10, w23, w13
  416db0:	add	x8, x9, #0x8
  416db4:	add	x9, x11, #0x8
  416db8:	add	x11, x24, #0x18
  416dbc:	mov	x15, x13
  416dc0:	ldp	q0, q1, [x11, #-16]
  416dc4:	subs	x15, x15, #0x4
  416dc8:	add	x11, x11, #0x20
  416dcc:	stp	q0, q1, [x14, #-16]
  416dd0:	add	x14, x14, #0x20
  416dd4:	b.ne	416dc0 <feof@plt+0x13520>  // b.any
  416dd8:	cmp	x12, x13
  416ddc:	b.eq	416c7c <feof@plt+0x133dc>  // b.none
  416de0:	ldr	x11, [x8], #8
  416de4:	subs	w10, w10, #0x1
  416de8:	str	x11, [x9], #8
  416dec:	b.ne	416de0 <feof@plt+0x13540>  // b.any
  416df0:	b	416c7c <feof@plt+0x133dc>
  416df4:	mov	w25, wzr
  416df8:	mov	w26, wzr
  416dfc:	b	416d30 <feof@plt+0x13490>
  416e00:	ldp	x20, x19, [sp, #64]
  416e04:	ldp	x22, x21, [sp, #48]
  416e08:	ldp	x24, x23, [sp, #32]
  416e0c:	ldp	x26, x25, [sp, #16]
  416e10:	ldp	x29, x30, [sp], #80
  416e14:	ret
  416e18:	ldp	x8, x9, [x0, #8]
  416e1c:	ldp	x10, x11, [x1, #8]
  416e20:	and	x8, x9, x8
  416e24:	and	x9, x11, x10
  416e28:	fmov	d0, x8
  416e2c:	fmov	d1, x9
  416e30:	cnt	v0.8b, v0.8b
  416e34:	cnt	v1.8b, v1.8b
  416e38:	uaddlv	h0, v0.8b
  416e3c:	uaddlv	h1, v1.8b
  416e40:	sub	w8, w9, w8
  416e44:	fmov	w9, s0
  416e48:	fmov	w10, s1
  416e4c:	subs	w9, w10, w9
  416e50:	csel	w0, w8, w9, eq  // eq = none
  416e54:	ret
  416e58:	stp	x29, x30, [sp, #-96]!
  416e5c:	str	x27, [sp, #16]
  416e60:	stp	x26, x25, [sp, #32]
  416e64:	stp	x24, x23, [sp, #48]
  416e68:	stp	x22, x21, [sp, #64]
  416e6c:	stp	x20, x19, [sp, #80]
  416e70:	mov	x29, sp
  416e74:	adrp	x24, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  416e78:	mov	x19, x8
  416e7c:	ldr	x8, [x24, #3712]
  416e80:	mov	x9, x19
  416e84:	strb	wzr, [x9, #16]!
  416e88:	mov	x20, x0
  416e8c:	stp	x9, xzr, [x19]
  416e90:	mov	x9, x0
  416e94:	cbz	x8, 416ee4 <feof@plt+0x13644>
  416e98:	adrp	x10, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  416e9c:	add	x10, x10, #0xea8
  416ea0:	mov	x11, #0xffffffffffffffe8    	// #-24
  416ea4:	mov	x12, #0xffffffffffffffe0    	// #-32
  416ea8:	mov	x9, x20
  416eac:	b	416eb8 <feof@plt+0x13618>
  416eb0:	ldr	x13, [x10], #40
  416eb4:	cbz	x13, 416ee4 <feof@plt+0x13644>
  416eb8:	ldurb	w13, [x10, #-8]
  416ebc:	orr	x14, x9, x1
  416ec0:	cmp	w13, #0x0
  416ec4:	csel	x13, x12, x11, eq  // eq = none
  416ec8:	ldr	x13, [x10, x13]
  416ecc:	bics	xzr, x13, x14
  416ed0:	b.ne	416eb0 <feof@plt+0x13610>  // b.any
  416ed4:	ldp	x14, x13, [x10, #-32]
  416ed8:	bic	x9, x9, x13
  416edc:	orr	x9, x9, x14
  416ee0:	b	416eb0 <feof@plt+0x13610>
  416ee4:	adrp	x10, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  416ee8:	ldr	x10, [x10, #424]
  416eec:	and	x10, x10, #0x8
  416ef0:	tst	x10, x20
  416ef4:	csel	x10, xzr, x10, eq  // eq = none
  416ef8:	cbz	x8, 417018 <feof@plt+0x13778>
  416efc:	bic	x8, x9, x1
  416f00:	adrp	x25, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  416f04:	adrp	x21, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  416f08:	mvn	x23, x1
  416f0c:	add	x25, x25, #0xe80
  416f10:	mov	x26, #0x3fffffffffffffff    	// #4611686018427387903
  416f14:	orr	x27, x10, x8
  416f18:	add	x21, x21, #0x9da
  416f1c:	b	416f38 <feof@plt+0x13698>
  416f20:	mov	x2, x0
  416f24:	mov	x0, x19
  416f28:	mov	x1, x22
  416f2c:	bl	4030e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
  416f30:	ldr	x8, [x25, #40]!
  416f34:	cbz	x8, 416f80 <feof@plt+0x136e0>
  416f38:	ldr	x8, [x25, #8]
  416f3c:	tst	x8, x27
  416f40:	b.eq	416f30 <feof@plt+0x13690>  // b.none
  416f44:	ldr	x8, [x19, #8]
  416f48:	cmp	x8, x26
  416f4c:	b.eq	41700c <feof@plt+0x1376c>  // b.none
  416f50:	mov	w2, #0x1                   	// #1
  416f54:	mov	x0, x19
  416f58:	mov	x1, x21
  416f5c:	bl	4030e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
  416f60:	ldr	x22, [x25]
  416f64:	mov	x0, x22
  416f68:	bl	4030b0 <strlen@plt>
  416f6c:	ldr	x8, [x19, #8]
  416f70:	sub	x8, x26, x8
  416f74:	cmp	x8, x0
  416f78:	b.cs	416f20 <feof@plt+0x13680>  // b.hs, b.nlast
  416f7c:	b	41700c <feof@plt+0x1376c>
  416f80:	ldr	x8, [x24, #3712]
  416f84:	cbz	x8, 417018 <feof@plt+0x13778>
  416f88:	mvn	x22, x20
  416f8c:	adrp	x24, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  416f90:	adrp	x20, 484000 <_obstack_memory_used@@Base+0x82fc>
  416f94:	add	x24, x24, #0xe80
  416f98:	mov	x25, #0x3fffffffffffffff    	// #4611686018427387903
  416f9c:	add	x20, x20, #0x7b8
  416fa0:	b	416fbc <feof@plt+0x1371c>
  416fa4:	mov	x2, x0
  416fa8:	mov	x0, x19
  416fac:	mov	x1, x21
  416fb0:	bl	4030e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
  416fb4:	ldr	x8, [x24, #40]!
  416fb8:	cbz	x8, 417018 <feof@plt+0x13778>
  416fbc:	ldr	x8, [x24, #8]
  416fc0:	tst	x8, x22
  416fc4:	b.eq	416fb4 <feof@plt+0x13714>  // b.none
  416fc8:	and	x8, x8, x23
  416fcc:	cbnz	x8, 416fb4 <feof@plt+0x13714>
  416fd0:	ldr	x8, [x19, #8]
  416fd4:	sub	x8, x25, x8
  416fd8:	cmp	x8, #0x2
  416fdc:	b.ls	41700c <feof@plt+0x1376c>  // b.plast
  416fe0:	mov	w2, #0x3                   	// #3
  416fe4:	mov	x0, x19
  416fe8:	mov	x1, x20
  416fec:	bl	4030e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
  416ff0:	ldr	x21, [x24]
  416ff4:	mov	x0, x21
  416ff8:	bl	4030b0 <strlen@plt>
  416ffc:	ldr	x8, [x19, #8]
  417000:	sub	x8, x25, x8
  417004:	cmp	x8, x0
  417008:	b.cs	416fa4 <feof@plt+0x13704>  // b.hs, b.nlast
  41700c:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  417010:	add	x0, x0, #0x8b9
  417014:	bl	4031a0 <_ZSt20__throw_length_errorPKc@plt>
  417018:	ldp	x20, x19, [sp, #80]
  41701c:	ldp	x22, x21, [sp, #64]
  417020:	ldp	x24, x23, [sp, #48]
  417024:	ldp	x26, x25, [sp, #32]
  417028:	ldr	x27, [sp, #16]
  41702c:	ldp	x29, x30, [sp], #96
  417030:	ret
  417034:	sub	sp, sp, #0x100
  417038:	stp	x29, x30, [sp, #176]
  41703c:	stp	x26, x25, [sp, #192]
  417040:	stp	x24, x23, [sp, #208]
  417044:	stp	x22, x21, [sp, #224]
  417048:	stp	x20, x19, [sp, #240]
  41704c:	add	x29, sp, #0xb0
  417050:	sub	x8, x29, #0x20
  417054:	add	x24, x8, #0x10
  417058:	stur	x24, [x29, #-32]
  41705c:	cbz	x0, 41749c <feof@plt+0x13bfc>
  417060:	mov	x19, x0
  417064:	bl	4030b0 <strlen@plt>
  417068:	mov	x20, x0
  41706c:	cmp	x0, #0xf
  417070:	stur	x0, [x29, #-64]
  417074:	b.ls	41709c <feof@plt+0x137fc>  // b.plast
  417078:	sub	x0, x29, #0x20
  41707c:	sub	x1, x29, #0x40
  417080:	mov	x2, xzr
  417084:	bl	403770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
  417088:	ldur	x8, [x29, #-64]
  41708c:	stur	x0, [x29, #-32]
  417090:	stur	x8, [x29, #-16]
  417094:	cbnz	x20, 4170a4 <feof@plt+0x13804>
  417098:	b	4170c4 <feof@plt+0x13824>
  41709c:	mov	x0, x24
  4170a0:	cbz	x20, 4170c4 <feof@plt+0x13824>
  4170a4:	cmp	x20, #0x1
  4170a8:	b.ne	4170b8 <feof@plt+0x13818>  // b.any
  4170ac:	ldrb	w8, [x19]
  4170b0:	strb	w8, [x0]
  4170b4:	b	4170c4 <feof@plt+0x13824>
  4170b8:	mov	x1, x19
  4170bc:	mov	x2, x20
  4170c0:	bl	402fc0 <memcpy@plt>
  4170c4:	ldur	x8, [x29, #-64]
  4170c8:	ldur	x9, [x29, #-32]
  4170cc:	sub	x10, x29, #0x40
  4170d0:	add	x11, sp, #0x50
  4170d4:	add	x25, x10, #0x10
  4170d8:	add	x26, x11, #0x10
  4170dc:	sub	x0, x29, #0x20
  4170e0:	mov	w1, #0x2b                  	// #43
  4170e4:	mov	x2, xzr
  4170e8:	stur	x8, [x29, #-24]
  4170ec:	strb	wzr, [x9, x8]
  4170f0:	stp	x25, xzr, [x29, #-64]
  4170f4:	sturb	wzr, [x29, #-48]
  4170f8:	stp	x26, xzr, [sp, #80]
  4170fc:	strb	wzr, [sp, #96]
  417100:	bl	4035d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>
  417104:	cmn	x0, #0x1
  417108:	b.eq	417174 <feof@plt+0x138d4>  // b.none
  41710c:	ldp	x22, x9, [x29, #-32]
  417110:	add	x8, sp, #0x30
  417114:	mov	x20, x0
  417118:	add	x21, x8, #0x10
  41711c:	cmp	x9, x0
  417120:	csel	x23, x0, x9, hi  // hi = pmore
  417124:	str	x21, [sp, #48]
  417128:	cbnz	x22, 417130 <feof@plt+0x13890>
  41712c:	cbnz	x23, 41749c <feof@plt+0x13bfc>
  417130:	cmp	x23, #0x10
  417134:	mov	x0, x21
  417138:	str	x23, [sp, #8]
  41713c:	b.cc	41715c <feof@plt+0x138bc>  // b.lo, b.ul, b.last
  417140:	add	x0, sp, #0x30
  417144:	add	x1, sp, #0x8
  417148:	mov	x2, xzr
  41714c:	bl	403770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
  417150:	ldr	x8, [sp, #8]
  417154:	str	x0, [sp, #48]
  417158:	str	x8, [sp, #64]
  41715c:	cbz	x23, 417190 <feof@plt+0x138f0>
  417160:	cmp	x23, #0x1
  417164:	b.ne	417184 <feof@plt+0x138e4>  // b.any
  417168:	ldrb	w8, [x22]
  41716c:	strb	w8, [x0]
  417170:	b	417190 <feof@plt+0x138f0>
  417174:	add	x0, sp, #0x50
  417178:	sub	x1, x29, #0x20
  41717c:	bl	4031c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
  417180:	b	4172f4 <feof@plt+0x13a54>
  417184:	mov	x1, x22
  417188:	mov	x2, x23
  41718c:	bl	402fc0 <memcpy@plt>
  417190:	ldr	x8, [sp, #8]
  417194:	ldr	x9, [sp, #48]
  417198:	str	x8, [sp, #56]
  41719c:	strb	wzr, [x9, x8]
  4171a0:	ldr	x9, [sp, #48]
  4171a4:	cmp	x9, x21
  4171a8:	b.eq	4171d8 <feof@plt+0x13938>  // b.none
  4171ac:	ldr	x8, [sp, #80]
  4171b0:	ldr	x10, [sp, #96]
  4171b4:	ldur	q0, [sp, #56]
  4171b8:	str	x9, [sp, #80]
  4171bc:	cmp	x8, x26
  4171c0:	csel	x8, xzr, x8, eq  // eq = none
  4171c4:	stur	q0, [sp, #88]
  4171c8:	cbz	x8, 4171f8 <feof@plt+0x13958>
  4171cc:	str	x8, [sp, #48]
  4171d0:	str	x10, [sp, #64]
  4171d4:	b	417220 <feof@plt+0x13980>
  4171d8:	ldr	x2, [sp, #56]
  4171dc:	cbz	x2, 41720c <feof@plt+0x1396c>
  4171e0:	ldr	x0, [sp, #80]
  4171e4:	cmp	x2, #0x1
  4171e8:	b.ne	417204 <feof@plt+0x13964>  // b.any
  4171ec:	ldrb	w8, [sp, #64]
  4171f0:	strb	w8, [x0]
  4171f4:	b	41720c <feof@plt+0x1396c>
  4171f8:	mov	x8, x21
  4171fc:	str	x21, [sp, #48]
  417200:	b	417220 <feof@plt+0x13980>
  417204:	mov	x1, x21
  417208:	bl	402fc0 <memcpy@plt>
  41720c:	ldr	x8, [sp, #56]
  417210:	ldr	x9, [sp, #80]
  417214:	str	x8, [sp, #88]
  417218:	strb	wzr, [x9, x8]
  41721c:	ldr	x8, [sp, #48]
  417220:	str	xzr, [sp, #56]
  417224:	strb	wzr, [x8]
  417228:	ldr	x0, [sp, #48]
  41722c:	cmp	x0, x21
  417230:	b.eq	417238 <feof@plt+0x13998>  // b.none
  417234:	bl	403410 <_ZdlPv@plt>
  417238:	ldur	x3, [x29, #-24]
  41723c:	cmp	x3, x20
  417240:	b.cc	4174c0 <feof@plt+0x13c20>  // b.lo, b.ul, b.last
  417244:	add	x0, sp, #0x30
  417248:	sub	x1, x29, #0x20
  41724c:	mov	x3, #0xffffffffffffffff    	// #-1
  417250:	mov	x2, x20
  417254:	add	x21, sp, #0x30
  417258:	bl	403030 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_mm@plt>
  41725c:	ldr	x1, [sp, #48]
  417260:	add	x20, x21, #0x10
  417264:	cmp	x1, x20
  417268:	b.eq	417298 <feof@plt+0x139f8>  // b.none
  41726c:	ldur	x8, [x29, #-64]
  417270:	ldur	x9, [x29, #-48]
  417274:	ldur	q0, [sp, #56]
  417278:	stur	x1, [x29, #-64]
  41727c:	cmp	x8, x25
  417280:	csel	x8, xzr, x8, eq  // eq = none
  417284:	stur	q0, [x29, #-56]
  417288:	cbz	x8, 4172b8 <feof@plt+0x13a18>
  41728c:	str	x8, [sp, #48]
  417290:	str	x9, [sp, #64]
  417294:	b	4172dc <feof@plt+0x13a3c>
  417298:	ldr	x2, [sp, #56]
  41729c:	cbz	x2, 4172c8 <feof@plt+0x13a28>
  4172a0:	ldur	x0, [x29, #-64]
  4172a4:	cmp	x2, #0x1
  4172a8:	b.ne	4172c4 <feof@plt+0x13a24>  // b.any
  4172ac:	ldrb	w8, [x1]
  4172b0:	strb	w8, [x0]
  4172b4:	b	4172c8 <feof@plt+0x13a28>
  4172b8:	mov	x8, x20
  4172bc:	str	x20, [sp, #48]
  4172c0:	b	4172dc <feof@plt+0x13a3c>
  4172c4:	bl	402fc0 <memcpy@plt>
  4172c8:	ldr	x8, [sp, #56]
  4172cc:	ldur	x9, [x29, #-64]
  4172d0:	stur	x8, [x29, #-56]
  4172d4:	strb	wzr, [x9, x8]
  4172d8:	ldr	x8, [sp, #48]
  4172dc:	str	xzr, [sp, #56]
  4172e0:	strb	wzr, [x8]
  4172e4:	ldr	x0, [sp, #48]
  4172e8:	cmp	x0, x20
  4172ec:	b.eq	4172f4 <feof@plt+0x13a54>  // b.none
  4172f0:	bl	403410 <_ZdlPv@plt>
  4172f4:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4172f8:	add	x22, x22, #0x8b0
  4172fc:	ldr	w23, [x22, #32]
  417300:	cmp	w23, #0x6
  417304:	b.ne	417310 <feof@plt+0x13a70>  // b.any
  417308:	mov	w8, #0x1                   	// #1
  41730c:	b	417368 <feof@plt+0x13ac8>
  417310:	ldp	x21, x20, [sp, #80]
  417314:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  417318:	add	x22, x22, #0x8b0
  41731c:	b	417334 <feof@plt+0x13a94>
  417320:	ldr	w23, [x22, #80]
  417324:	add	x9, x22, #0x30
  417328:	mov	x22, x9
  41732c:	cmp	w23, #0x6
  417330:	b.eq	417360 <feof@plt+0x13ac0>  // b.none
  417334:	ldr	x8, [x22, #8]
  417338:	cmp	x8, x20
  41733c:	b.ne	417320 <feof@plt+0x13a80>  // b.any
  417340:	cbz	x20, 417358 <feof@plt+0x13ab8>
  417344:	ldr	x0, [x22]
  417348:	mov	x1, x21
  41734c:	mov	x2, x20
  417350:	bl	403840 <bcmp@plt>
  417354:	cbnz	w0, 417320 <feof@plt+0x13a80>
  417358:	mov	w8, wzr
  41735c:	b	417368 <feof@plt+0x13ac8>
  417360:	mov	w8, #0x1                   	// #1
  417364:	mov	x22, x9
  417368:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41736c:	add	x20, x20, #0xfd0
  417370:	ldr	w9, [x20], #48
  417374:	cmp	w9, #0x6
  417378:	b.eq	417384 <feof@plt+0x13ae4>  // b.none
  41737c:	cmp	w9, w23
  417380:	b.ne	417370 <feof@plt+0x13ad0>  // b.any
  417384:	cmp	w9, #0x6
  417388:	cset	w9, ne  // ne = any
  41738c:	bic	w8, w9, w8
  417390:	tbz	w8, #0, 4174a8 <feof@plt+0x13c08>
  417394:	ldr	x8, [x22, #40]
  417398:	ldur	x0, [x29, #-64]
  41739c:	add	x1, sp, #0x28
  4173a0:	mov	x2, xzr
  4173a4:	str	x8, [sp, #40]
  4173a8:	bl	4169d0 <feof@plt+0x13130>
  4173ac:	ldr	x0, [sp, #40]
  4173b0:	ldur	x1, [x20, #-8]
  4173b4:	add	x8, sp, #0x8
  4173b8:	bl	416e58 <feof@plt+0x135b8>
  4173bc:	ldp	x3, x4, [x20, #-40]
  4173c0:	add	x0, sp, #0x8
  4173c4:	mov	x1, xzr
  4173c8:	mov	x2, xzr
  4173cc:	bl	403690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
  4173d0:	add	x8, sp, #0x30
  4173d4:	add	x19, x8, #0x10
  4173d8:	str	x19, [sp, #48]
  4173dc:	mov	x8, x0
  4173e0:	ldr	x9, [x8], #16
  4173e4:	cmp	x9, x8
  4173e8:	b.eq	4173fc <feof@plt+0x13b5c>  // b.none
  4173ec:	str	x9, [sp, #48]
  4173f0:	ldr	x9, [x0, #16]
  4173f4:	str	x9, [sp, #64]
  4173f8:	b	417404 <feof@plt+0x13b64>
  4173fc:	ldr	q0, [x9]
  417400:	str	q0, [x19]
  417404:	ldr	x9, [x0, #8]
  417408:	str	x9, [sp, #56]
  41740c:	stp	x8, xzr, [x0]
  417410:	strb	wzr, [x0, #16]
  417414:	ldr	x0, [sp, #8]
  417418:	add	x8, sp, #0x8
  41741c:	add	x8, x8, #0x10
  417420:	cmp	x0, x8
  417424:	b.eq	41742c <feof@plt+0x13b8c>  // b.none
  417428:	bl	403410 <_ZdlPv@plt>
  41742c:	ldr	x0, [sp, #48]
  417430:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  417434:	ldr	x8, [sp, #48]
  417438:	cmp	x8, x19
  41743c:	mov	x19, x0
  417440:	b.eq	41744c <feof@plt+0x13bac>  // b.none
  417444:	mov	x0, x8
  417448:	bl	403410 <_ZdlPv@plt>
  41744c:	ldr	x0, [sp, #80]
  417450:	cmp	x0, x26
  417454:	b.eq	41745c <feof@plt+0x13bbc>  // b.none
  417458:	bl	403410 <_ZdlPv@plt>
  41745c:	ldur	x0, [x29, #-64]
  417460:	cmp	x0, x25
  417464:	b.eq	41746c <feof@plt+0x13bcc>  // b.none
  417468:	bl	403410 <_ZdlPv@plt>
  41746c:	ldur	x0, [x29, #-32]
  417470:	cmp	x0, x24
  417474:	b.eq	41747c <feof@plt+0x13bdc>  // b.none
  417478:	bl	403410 <_ZdlPv@plt>
  41747c:	mov	x0, x19
  417480:	ldp	x20, x19, [sp, #240]
  417484:	ldp	x22, x21, [sp, #224]
  417488:	ldp	x24, x23, [sp, #208]
  41748c:	ldp	x26, x25, [sp, #192]
  417490:	ldp	x29, x30, [sp, #176]
  417494:	add	sp, sp, #0x100
  417498:	ret
  41749c:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  4174a0:	add	x0, x0, #0x88f
  4174a4:	bl	403300 <_ZSt19__throw_logic_errorPKc@plt>
  4174a8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4174ac:	ldr	w0, [x8, #400]
  4174b0:	adrp	x1, 484000 <_obstack_memory_used@@Base+0x82fc>
  4174b4:	add	x1, x1, #0x7bc
  4174b8:	mov	x2, x19
  4174bc:	bl	42c008 <feof@plt+0x28768>
  4174c0:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  4174c4:	adrp	x1, 484000 <_obstack_memory_used@@Base+0x82fc>
  4174c8:	add	x0, x0, #0x8e3
  4174cc:	add	x1, x1, #0x8ce
  4174d0:	mov	x2, x20
  4174d4:	bl	403660 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
  4174d8:	stp	x29, x30, [sp, #-16]!
  4174dc:	mov	x29, sp
  4174e0:	cbz	w0, 4174f4 <feof@plt+0x13c54>
  4174e4:	sub	w8, w0, #0x1
  4174e8:	ldr	x0, [x1, w8, sxtw #3]
  4174ec:	ldp	x29, x30, [sp], #16
  4174f0:	b	417034 <feof@plt+0x13794>
  4174f4:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  4174f8:	adrp	x2, 484000 <_obstack_memory_used@@Base+0x82fc>
  4174fc:	add	x0, x0, #0x7dc
  417500:	add	x2, x2, #0x80d
  417504:	mov	w1, #0x234                 	// #564
  417508:	bl	429434 <feof@plt+0x25b94>
  41750c:	adrp	x0, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  417510:	adrp	x3, 416000 <feof@plt+0x12760>
  417514:	add	x0, x0, #0xe80
  417518:	add	x3, x3, #0xe18
  41751c:	mov	w1, #0x16                  	// #22
  417520:	mov	w2, #0x28                  	// #40
  417524:	b	439f5c <feof@plt+0x366bc>
  417528:	stp	x29, x30, [sp, #-32]!
  41752c:	str	x19, [sp, #16]
  417530:	mov	x29, sp
  417534:	mov	w0, #0x20                  	// #32
  417538:	mov	w1, #0x10                  	// #16
  41753c:	bl	417f48 <feof@plt+0x146a8>
  417540:	mov	w0, #0x20                  	// #32
  417544:	bl	417f94 <feof@plt+0x146f4>
  417548:	mov	w19, w0
  41754c:	mov	w0, #0x21                  	// #33
  417550:	mov	w1, w19
  417554:	bl	417f48 <feof@plt+0x146a8>
  417558:	cmp	w19, #0xc
  41755c:	b.eq	417568 <feof@plt+0x13cc8>  // b.none
  417560:	cmp	w19, #0x10
  417564:	b.ne	417574 <feof@plt+0x13cd4>  // b.any
  417568:	ldr	x19, [sp, #16]
  41756c:	ldp	x29, x30, [sp], #32
  417570:	ret
  417574:	mov	w8, #0x1                   	// #1
  417578:	lsl	x8, x8, x19
  41757c:	mov	w1, w19
  417580:	ldr	x19, [sp, #16]
  417584:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  417588:	lsr	x2, x8, #10
  41758c:	add	x0, x0, #0x822
  417590:	ldp	x29, x30, [sp], #32
  417594:	b	42b940 <feof@plt+0x280a0>
  417598:	cmp	w1, #0x20
  41759c:	b.ne	4175bc <feof@plt+0x13d1c>  // b.any
  4175a0:	mov	w1, w0
  4175a4:	cmp	w0, #0xc
  4175a8:	mov	w0, #0x1                   	// #1
  4175ac:	b.eq	4175b8 <feof@plt+0x13d18>  // b.none
  4175b0:	cmp	w1, #0x10
  4175b4:	b.ne	4175c4 <feof@plt+0x13d24>  // b.any
  4175b8:	ret
  4175bc:	mov	w0, #0x1                   	// #1
  4175c0:	ret
  4175c4:	stp	x29, x30, [sp, #-16]!
  4175c8:	mov	x29, sp
  4175cc:	mov	w8, #0x1                   	// #1
  4175d0:	lsl	x8, x8, x1
  4175d4:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  4175d8:	lsr	x2, x8, #10
  4175dc:	add	x0, x0, #0x822
  4175e0:	bl	42b940 <feof@plt+0x280a0>
  4175e4:	mov	w0, wzr
  4175e8:	ldp	x29, x30, [sp], #16
  4175ec:	ret
  4175f0:	stp	x29, x30, [sp, #-48]!
  4175f4:	stp	x22, x21, [sp, #16]
  4175f8:	stp	x20, x19, [sp, #32]
  4175fc:	mov	x29, sp
  417600:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  417604:	ldr	x22, [x8, #576]
  417608:	mov	x21, x0
  41760c:	mov	x19, x1
  417610:	mov	x0, x22
  417614:	bl	4030b0 <strlen@plt>
  417618:	sxtw	x20, w0
  41761c:	mov	x0, x21
  417620:	mov	x1, x22
  417624:	mov	x2, x20
  417628:	bl	479ca8 <feof@plt+0x76408>
  41762c:	cbz	w0, 417754 <feof@plt+0x13eb4>
  417630:	mov	x0, x21
  417634:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  417638:	mov	w1, #0x2e                  	// #46
  41763c:	mov	x19, x0
  417640:	bl	403210 <strchr@plt>
  417644:	cbz	x0, 4177d4 <feof@plt+0x13f34>
  417648:	mov	x20, x0
  41764c:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  417650:	b	417664 <feof@plt+0x13dc4>
  417654:	mov	w1, #0x2e                  	// #46
  417658:	bl	403210 <strchr@plt>
  41765c:	mov	x20, x0
  417660:	cbz	x0, 4177d4 <feof@plt+0x13f34>
  417664:	mov	x0, x20
  417668:	ldrb	w8, [x0, #1]!
  41766c:	cmp	w8, #0x2e
  417670:	b.ne	417654 <feof@plt+0x13db4>  // b.any
  417674:	cmp	x20, x19
  417678:	b.eq	417654 <feof@plt+0x13db4>  // b.none
  41767c:	ldrb	w8, [x20, #2]
  417680:	cmp	w8, #0x2f
  417684:	b.ne	417654 <feof@plt+0x13db4>  // b.any
  417688:	ldurb	w8, [x20, #-1]
  41768c:	cmp	w8, #0x2f
  417690:	b.ne	417654 <feof@plt+0x13db4>  // b.any
  417694:	strb	wzr, [x20]
  417698:	ldrb	w8, [x21, #570]
  41769c:	mov	x9, x20
  4176a0:	cbnz	w8, 4176b8 <feof@plt+0x13e18>
  4176a4:	mov	w1, #0x1                   	// #1
  4176a8:	mov	x0, x19
  4176ac:	bl	403290 <access@plt>
  4176b0:	mov	x9, x20
  4176b4:	cbz	w0, 4177cc <feof@plt+0x13f2c>
  4176b8:	sub	x9, x9, #0x1
  4176bc:	cmp	x9, x19
  4176c0:	mov	x8, x19
  4176c4:	b.eq	4176d8 <feof@plt+0x13e38>  // b.none
  4176c8:	ldrb	w8, [x9]
  4176cc:	cmp	w8, #0x2f
  4176d0:	mov	x8, x9
  4176d4:	b.eq	4176b8 <feof@plt+0x13e18>  // b.none
  4176d8:	cmp	x19, x8
  4176dc:	b.eq	417704 <feof@plt+0x13e64>  // b.none
  4176e0:	ldrb	w9, [x8, #-1]!
  4176e4:	cmp	w9, #0x2f
  4176e8:	b.ne	4176d8 <feof@plt+0x13e38>  // b.any
  4176ec:	mov	x9, x8
  4176f0:	ldrb	w10, [x9, #1]!
  4176f4:	cmp	w10, #0x2e
  4176f8:	b.eq	4176b8 <feof@plt+0x13e18>  // b.none
  4176fc:	add	x0, x8, #0x1
  417700:	b	41770c <feof@plt+0x13e6c>
  417704:	ldrb	w10, [x19]
  417708:	mov	x0, x19
  41770c:	and	w8, w10, #0xfe
  417710:	cmp	w8, #0x2e
  417714:	b.eq	4177d0 <feof@plt+0x13f30>  // b.none
  417718:	add	x9, x20, #0x2
  41771c:	add	x10, x20, #0x4
  417720:	ldrb	w11, [x9, #1]!
  417724:	mov	x8, x10
  417728:	add	x10, x10, #0x1
  41772c:	cmp	w11, #0x2f
  417730:	b.eq	417720 <feof@plt+0x13e80>  // b.none
  417734:	strb	w11, [x0]
  417738:	cbz	w11, 417654 <feof@plt+0x13db4>
  41773c:	mov	w9, #0x1                   	// #1
  417740:	ldrb	w10, [x8], #1
  417744:	strb	w10, [x0, x9]
  417748:	add	x9, x9, #0x1
  41774c:	cbnz	w10, 417740 <feof@plt+0x13ea0>
  417750:	b	417654 <feof@plt+0x13db4>
  417754:	add	x20, x21, x20
  417758:	ldrb	w8, [x20]
  41775c:	cmp	w8, #0x2f
  417760:	b.eq	417768 <feof@plt+0x13ec8>  // b.none
  417764:	cbnz	w8, 417630 <feof@plt+0x13d90>
  417768:	cbz	x19, 417630 <feof@plt+0x13d90>
  41776c:	ldrb	w8, [x19]
  417770:	cmp	w8, #0x24
  417774:	b.ne	417790 <feof@plt+0x13ef0>  // b.any
  417778:	mov	x0, x19
  41777c:	mov	x1, x20
  417780:	mov	x2, xzr
  417784:	bl	4799ac <feof@plt+0x7610c>
  417788:	mov	x19, x0
  41778c:	b	4177c0 <feof@plt+0x13f20>
  417790:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x42fc>
  417794:	add	x0, x0, #0xf22
  417798:	mov	x1, x19
  41779c:	mov	x2, xzr
  4177a0:	bl	4799ac <feof@plt+0x7610c>
  4177a4:	mov	x1, x20
  4177a8:	mov	x2, xzr
  4177ac:	mov	x21, x0
  4177b0:	bl	4799ac <feof@plt+0x7610c>
  4177b4:	mov	x19, x0
  4177b8:	mov	x0, x21
  4177bc:	bl	4031d0 <free@plt>
  4177c0:	mov	x0, x19
  4177c4:	bl	4177e8 <feof@plt+0x13f48>
  4177c8:	b	417638 <feof@plt+0x13d98>
  4177cc:	mov	w8, #0x2e                  	// #46
  4177d0:	strb	w8, [x20]
  4177d4:	mov	x0, x19
  4177d8:	ldp	x20, x19, [sp, #32]
  4177dc:	ldp	x22, x21, [sp, #16]
  4177e0:	ldp	x29, x30, [sp], #48
  4177e4:	ret
  4177e8:	stp	x29, x30, [sp, #-80]!
  4177ec:	stp	x26, x25, [sp, #16]
  4177f0:	stp	x24, x23, [sp, #32]
  4177f4:	stp	x22, x21, [sp, #48]
  4177f8:	stp	x20, x19, [sp, #64]
  4177fc:	mov	x29, sp
  417800:	adrp	x19, 484000 <_obstack_memory_used@@Base+0x82fc>
  417804:	adrp	x25, 484000 <_obstack_memory_used@@Base+0x82fc>
  417808:	mov	x20, x0
  41780c:	add	x19, x19, #0x91f
  417810:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  417814:	add	x25, x25, #0x91a
  417818:	b	417844 <feof@plt+0x13fa4>
  41781c:	bl	403700 <getenv@plt>
  417820:	cmp	x0, #0x0
  417824:	csel	x0, x25, x0, eq  // eq = none
  417828:	mov	x1, x21
  41782c:	mov	x2, xzr
  417830:	bl	4799ac <feof@plt+0x7610c>
  417834:	mov	x21, x0
  417838:	mov	x0, x20
  41783c:	bl	4031d0 <free@plt>
  417840:	mov	x20, x21
  417844:	ldrb	w26, [x20]
  417848:	cmp	w26, #0x40
  41784c:	b.eq	417858 <feof@plt+0x13fb8>  // b.none
  417850:	cmp	w26, #0x24
  417854:	b.ne	4178ec <feof@plt+0x1404c>  // b.any
  417858:	mov	x8, xzr
  41785c:	add	x9, x20, x8
  417860:	ldrb	w9, [x9, #1]
  417864:	add	x8, x8, #0x1
  417868:	cmp	w9, #0x2f
  41786c:	b.eq	417874 <feof@plt+0x13fd4>  // b.none
  417870:	cbnz	w9, 41785c <feof@plt+0x13fbc>
  417874:	and	x9, x8, #0xffffffff
  417878:	add	x21, x20, x9
  41787c:	add	x9, x9, #0xf
  417880:	mov	x10, sp
  417884:	and	x9, x9, #0x1fffffff0
  417888:	sub	x22, x10, x9
  41788c:	mov	sp, x22
  417890:	sub	w23, w8, #0x1
  417894:	add	x1, x20, #0x1
  417898:	mov	x0, x22
  41789c:	mov	x2, x23
  4178a0:	bl	402fc0 <memcpy@plt>
  4178a4:	cmp	w26, #0x40
  4178a8:	mov	x0, x22
  4178ac:	strb	wzr, [x22, x23]
  4178b0:	b.ne	41781c <feof@plt+0x13f7c>  // b.any
  4178b4:	mov	x1, x19
  4178b8:	mov	x2, xzr
  4178bc:	bl	4799ac <feof@plt+0x7610c>
  4178c0:	mov	x22, x0
  4178c4:	bl	403700 <getenv@plt>
  4178c8:	ldr	x8, [x24, #576]
  4178cc:	cmp	x0, #0x0
  4178d0:	csel	x23, x8, x0, eq  // eq = none
  4178d4:	mov	x0, x22
  4178d8:	bl	4031d0 <free@plt>
  4178dc:	ldr	x8, [x24, #576]
  4178e0:	cmp	x23, #0x0
  4178e4:	csel	x0, x8, x23, eq  // eq = none
  4178e8:	b	417820 <feof@plt+0x13f80>
  4178ec:	mov	x0, x20
  4178f0:	mov	sp, x29
  4178f4:	ldp	x20, x19, [sp, #64]
  4178f8:	ldp	x22, x21, [sp, #48]
  4178fc:	ldp	x24, x23, [sp, #32]
  417900:	ldp	x26, x25, [sp, #16]
  417904:	ldp	x29, x30, [sp], #80
  417908:	ret
  41790c:	stp	x29, x30, [sp, #-48]!
  417910:	str	x21, [sp, #16]
  417914:	stp	x20, x19, [sp, #32]
  417918:	mov	x29, sp
  41791c:	add	w8, w1, #0x1
  417920:	mov	x20, x0
  417924:	sxtw	x0, w8
  417928:	mov	w19, w1
  41792c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  417930:	sxtw	x19, w19
  417934:	mov	x1, x20
  417938:	mov	x2, x19
  41793c:	mov	x21, x0
  417940:	bl	402fc0 <memcpy@plt>
  417944:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  417948:	strb	wzr, [x21, x19]
  41794c:	str	x21, [x8, #576]
  417950:	ldp	x20, x19, [sp, #32]
  417954:	ldr	x21, [sp, #16]
  417958:	ldp	x29, x30, [sp], #48
  41795c:	ret
  417960:	stp	x29, x30, [sp, #-64]!
  417964:	stp	x24, x23, [sp, #16]
  417968:	stp	x22, x21, [sp, #32]
  41796c:	stp	x20, x19, [sp, #48]
  417970:	mov	x29, sp
  417974:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417978:	ldrb	w8, [x8, #296]
  41797c:	cmp	w8, #0x1
  417980:	b.eq	417a9c <feof@plt+0x141fc>  // b.none
  417984:	adrp	x21, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417988:	ldr	x8, [x21, #304]
  41798c:	adrp	x22, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417990:	mov	x20, x0
  417994:	ldr	x0, [x22, #288]
  417998:	add	x8, x8, x1
  41799c:	add	x8, x8, x8, lsl #2
  4179a0:	mov	x19, x1
  4179a4:	lsl	x1, x8, #3
  4179a8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4179ac:	ldr	x23, [x21, #304]
  4179b0:	mov	w8, #0x28                  	// #40
  4179b4:	add	x9, x19, x19, lsl #2
  4179b8:	str	x0, [x22, #288]
  4179bc:	madd	x0, x23, x8, x0
  4179c0:	lsl	x2, x9, #3
  4179c4:	mov	x1, x20
  4179c8:	bl	402fc0 <memcpy@plt>
  4179cc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4179d0:	ldr	x0, [x8, #632]
  4179d4:	add	x8, x23, x19
  4179d8:	str	x8, [x21, #304]
  4179dc:	ldr	x9, [x0]
  4179e0:	cbnz	x9, 4179f0 <feof@plt+0x14150>
  4179e4:	mov	w1, wzr
  4179e8:	bl	4290c0 <feof@plt+0x25820>
  4179ec:	ldr	x8, [x21, #304]
  4179f0:	sub	x9, x8, x19
  4179f4:	cmp	x9, x19
  4179f8:	b.cs	417a88 <feof@plt+0x141e8>  // b.hs, b.nlast
  4179fc:	sub	x22, x8, x19, lsl #1
  417a00:	sub	w19, w8, w19
  417a04:	mov	w8, #0x28                  	// #40
  417a08:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0xe2fc>
  417a0c:	madd	x8, x9, x8, x20
  417a10:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0xe2fc>
  417a14:	add	x21, x21, #0x24c
  417a18:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  417a1c:	add	x24, x8, #0x10
  417a20:	add	x20, x20, #0x227
  417a24:	b	417a44 <feof@plt+0x141a4>
  417a28:	ldr	x8, [x23, #528]
  417a2c:	mov	w1, w19
  417a30:	blr	x8
  417a34:	adds	x22, x22, #0x1
  417a38:	add	w19, w19, #0x1
  417a3c:	add	x24, x24, #0x28
  417a40:	b.cs	417a88 <feof@plt+0x141e8>  // b.hs, b.nlast
  417a44:	ldp	w0, w8, [x24, #-8]
  417a48:	ldur	x1, [x24, #-16]
  417a4c:	ldr	w2, [x24]
  417a50:	cmp	w8, w0
  417a54:	b.le	417a6c <feof@plt+0x141cc>
  417a58:	cbz	w8, 417a6c <feof@plt+0x141cc>
  417a5c:	mov	x0, x20
  417a60:	mov	w2, w8
  417a64:	bl	42b940 <feof@plt+0x280a0>
  417a68:	b	417a34 <feof@plt+0x14194>
  417a6c:	cmp	w2, w8
  417a70:	b.le	417a28 <feof@plt+0x14188>
  417a74:	cmp	w2, w0
  417a78:	b.ge	417a28 <feof@plt+0x14188>  // b.tcont
  417a7c:	mov	x0, x21
  417a80:	bl	42b940 <feof@plt+0x280a0>
  417a84:	b	417a34 <feof@plt+0x14194>
  417a88:	ldp	x20, x19, [sp, #48]
  417a8c:	ldp	x22, x21, [sp, #32]
  417a90:	ldp	x24, x23, [sp, #16]
  417a94:	ldp	x29, x30, [sp], #64
  417a98:	ret
  417a9c:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  417aa0:	adrp	x2, 484000 <_obstack_memory_used@@Base+0x82fc>
  417aa4:	add	x0, x0, #0x925
  417aa8:	add	x2, x2, #0x938
  417aac:	mov	w1, #0x47                  	// #71
  417ab0:	bl	429434 <feof@plt+0x25b94>
  417ab4:	stp	x29, x30, [sp, #-16]!
  417ab8:	mov	x29, sp
  417abc:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417ac0:	ldrb	w8, [x8, #296]
  417ac4:	cmp	w8, #0x1
  417ac8:	b.eq	417aec <feof@plt+0x1424c>  // b.none
  417acc:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0xe2fc>
  417ad0:	add	x0, x0, #0x2b8
  417ad4:	mov	w1, #0xdd                  	// #221
  417ad8:	bl	417960 <feof@plt+0x140c0>
  417adc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  417ae0:	ldr	x0, [x8, #520]
  417ae4:	ldp	x29, x30, [sp], #16
  417ae8:	br	x0
  417aec:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  417af0:	adrp	x2, 484000 <_obstack_memory_used@@Base+0x82fc>
  417af4:	add	x0, x0, #0x925
  417af8:	add	x2, x2, #0x943
  417afc:	mov	w1, #0x66                  	// #102
  417b00:	bl	429434 <feof@plt+0x25b94>
  417b04:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417b08:	mov	w9, #0x1                   	// #1
  417b0c:	strb	w9, [x8, #296]
  417b10:	ret
  417b14:	stp	x29, x30, [sp, #-32]!
  417b18:	str	x19, [sp, #16]
  417b1c:	mov	x29, sp
  417b20:	adrp	x19, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417b24:	ldr	x0, [x19, #288]
  417b28:	bl	4031d0 <free@plt>
  417b2c:	str	xzr, [x19, #288]
  417b30:	ldr	x19, [sp, #16]
  417b34:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417b38:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417b3c:	str	xzr, [x8, #304]
  417b40:	strb	wzr, [x9, #296]
  417b44:	ldp	x29, x30, [sp], #32
  417b48:	ret
  417b4c:	stp	x29, x30, [sp, #-64]!
  417b50:	str	x23, [sp, #16]
  417b54:	stp	x22, x21, [sp, #32]
  417b58:	stp	x20, x19, [sp, #48]
  417b5c:	mov	x29, sp
  417b60:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417b64:	ldr	x21, [x8, #304]
  417b68:	cbz	x21, 417ba0 <feof@plt+0x14300>
  417b6c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417b70:	ldr	x22, [x8, #288]
  417b74:	mov	x19, x1
  417b78:	mov	x20, x0
  417b7c:	mov	x23, xzr
  417b80:	ldr	x0, [x22]
  417b84:	mov	x1, x20
  417b88:	bl	403640 <strcmp@plt>
  417b8c:	cbz	w0, 417ba8 <feof@plt+0x14308>
  417b90:	add	x23, x23, #0x1
  417b94:	cmp	x23, x21
  417b98:	add	x22, x22, #0x28
  417b9c:	b.cc	417b80 <feof@plt+0x142e0>  // b.lo, b.ul, b.last
  417ba0:	mov	w0, wzr
  417ba4:	b	417bb0 <feof@plt+0x14310>
  417ba8:	mov	w0, #0x1                   	// #1
  417bac:	str	w23, [x19]
  417bb0:	ldp	x20, x19, [sp, #48]
  417bb4:	ldp	x22, x21, [sp, #32]
  417bb8:	ldr	x23, [sp, #16]
  417bbc:	ldp	x29, x30, [sp], #64
  417bc0:	ret
  417bc4:	sub	sp, sp, #0x70
  417bc8:	stp	x29, x30, [sp, #16]
  417bcc:	stp	x28, x27, [sp, #32]
  417bd0:	stp	x26, x25, [sp, #48]
  417bd4:	stp	x24, x23, [sp, #64]
  417bd8:	stp	x22, x21, [sp, #80]
  417bdc:	stp	x20, x19, [sp, #96]
  417be0:	add	x29, sp, #0x10
  417be4:	cbz	x0, 417cf4 <feof@plt+0x14454>
  417be8:	mov	x19, x0
  417bec:	bl	4030b0 <strlen@plt>
  417bf0:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417bf4:	ldr	x8, [x8, #304]
  417bf8:	cbz	x8, 417cb4 <feof@plt+0x14414>
  417bfc:	mov	x21, x0
  417c00:	str	x19, [sp, #8]
  417c04:	mov	x27, xzr
  417c08:	mov	x28, xzr
  417c0c:	mov	x19, xzr
  417c10:	mov	w25, #0xffffffff            	// #-1
  417c14:	adrp	x20, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417c18:	b	417c34 <feof@plt+0x14394>
  417c1c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417c20:	ldr	x8, [x8, #304]
  417c24:	add	x28, x28, #0x1
  417c28:	add	x27, x27, #0x28
  417c2c:	cmp	x28, x8
  417c30:	b.cs	417c98 <feof@plt+0x143f8>  // b.hs, b.nlast
  417c34:	ldr	x8, [x20, #288]
  417c38:	ldr	x23, [x8, x27]
  417c3c:	cbz	x23, 417cdc <feof@plt+0x1443c>
  417c40:	mov	x0, x23
  417c44:	bl	4030b0 <strlen@plt>
  417c48:	subs	x8, x0, x21
  417c4c:	cneg	x26, x8, mi  // mi = first
  417c50:	cmp	w25, w26
  417c54:	b.ls	417c1c <feof@plt+0x1437c>  // b.plast
  417c58:	mov	x24, x0
  417c5c:	mov	x0, x21
  417c60:	mov	x1, x24
  417c64:	bl	4284a8 <feof@plt+0x24c08>
  417c68:	cmp	w0, w26
  417c6c:	b.cc	417c1c <feof@plt+0x1437c>  // b.lo, b.ul, b.last
  417c70:	ldr	x0, [sp, #8]
  417c74:	mov	w1, w21
  417c78:	mov	x2, x23
  417c7c:	mov	w3, w24
  417c80:	bl	427fb8 <feof@plt+0x24718>
  417c84:	cmp	w0, w25
  417c88:	csel	x19, x23, x19, cc  // cc = lo, ul, last
  417c8c:	csel	w25, w0, w25, cc  // cc = lo, ul, last
  417c90:	csel	x22, x24, x22, cc  // cc = lo, ul, last
  417c94:	b	417c1c <feof@plt+0x1437c>
  417c98:	cbz	x19, 417cb8 <feof@plt+0x14418>
  417c9c:	mov	x0, x21
  417ca0:	mov	x1, x22
  417ca4:	bl	4284a8 <feof@plt+0x24c08>
  417ca8:	sub	w8, w25, #0x1
  417cac:	cmp	w8, w0
  417cb0:	b.cc	417cb8 <feof@plt+0x14418>  // b.lo, b.ul, b.last
  417cb4:	mov	x19, xzr
  417cb8:	mov	x0, x19
  417cbc:	ldp	x20, x19, [sp, #96]
  417cc0:	ldp	x22, x21, [sp, #80]
  417cc4:	ldp	x24, x23, [sp, #64]
  417cc8:	ldp	x26, x25, [sp, #48]
  417ccc:	ldp	x28, x27, [sp, #32]
  417cd0:	ldp	x29, x30, [sp, #16]
  417cd4:	add	sp, sp, #0x70
  417cd8:	ret
  417cdc:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0xe2fc>
  417ce0:	adrp	x2, 48a000 <_obstack_memory_used@@Base+0xe2fc>
  417ce4:	add	x0, x0, #0x28a
  417ce8:	add	x2, x2, #0x2ac
  417cec:	mov	w1, #0x3a                  	// #58
  417cf0:	bl	429434 <feof@plt+0x25b94>
  417cf4:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0xe2fc>
  417cf8:	adrp	x2, 48a000 <_obstack_memory_used@@Base+0xe2fc>
  417cfc:	add	x0, x0, #0x28a
  417d00:	add	x2, x2, #0x2a1
  417d04:	mov	w1, #0x40                  	// #64
  417d08:	bl	429434 <feof@plt+0x25b94>
  417d0c:	stp	x29, x30, [sp, #-48]!
  417d10:	stp	x22, x21, [sp, #16]
  417d14:	stp	x20, x19, [sp, #32]
  417d18:	mov	x29, sp
  417d1c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417d20:	ldr	x8, [x8, #288]
  417d24:	mov	w9, #0x28                  	// #40
  417d28:	smaddl	x8, w0, w9, x8
  417d2c:	ldr	x9, [x8, #32]!
  417d30:	cbz	x9, 417d74 <feof@plt+0x144d4>
  417d34:	mov	w9, #0xffffffff            	// #-1
  417d38:	str	w9, [x2]
  417d3c:	ldr	x8, [x8]
  417d40:	mov	x19, x2
  417d44:	ldr	x0, [x8]
  417d48:	cbz	x0, 417d80 <feof@plt+0x144e0>
  417d4c:	mov	x20, x1
  417d50:	mov	x21, xzr
  417d54:	add	x22, x8, #0x8
  417d58:	mov	x1, x20
  417d5c:	bl	403640 <strcmp@plt>
  417d60:	cbz	w0, 417d7c <feof@plt+0x144dc>
  417d64:	ldr	x0, [x22, x21, lsl #3]
  417d68:	add	x21, x21, #0x1
  417d6c:	cbnz	x0, 417d58 <feof@plt+0x144b8>
  417d70:	b	417d80 <feof@plt+0x144e0>
  417d74:	mov	w0, wzr
  417d78:	b	417d84 <feof@plt+0x144e4>
  417d7c:	str	w21, [x19]
  417d80:	mov	w0, #0x1                   	// #1
  417d84:	ldp	x20, x19, [sp, #32]
  417d88:	ldp	x22, x21, [sp, #16]
  417d8c:	ldp	x29, x30, [sp], #48
  417d90:	ret
  417d94:	stp	x29, x30, [sp, #-80]!
  417d98:	stp	x26, x25, [sp, #16]
  417d9c:	stp	x24, x23, [sp, #32]
  417da0:	stp	x22, x21, [sp, #48]
  417da4:	stp	x20, x19, [sp, #64]
  417da8:	mov	x29, sp
  417dac:	cmn	w1, #0x1
  417db0:	b.eq	417ed0 <feof@plt+0x14630>  // b.none
  417db4:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417db8:	ldr	x24, [x8, #304]
  417dbc:	mov	x23, x0
  417dc0:	cbz	x24, 417e00 <feof@plt+0x14560>
  417dc4:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417dc8:	ldr	x25, [x8, #288]
  417dcc:	mov	x19, x3
  417dd0:	mov	x20, x2
  417dd4:	mov	w21, w1
  417dd8:	mov	x22, xzr
  417ddc:	mov	x26, x25
  417de0:	ldr	x0, [x26]
  417de4:	mov	x1, x23
  417de8:	bl	403640 <strcmp@plt>
  417dec:	cbz	w0, 417e24 <feof@plt+0x14584>
  417df0:	add	x22, x22, #0x1
  417df4:	cmp	x24, x22
  417df8:	add	x26, x26, #0x28
  417dfc:	b.ne	417de0 <feof@plt+0x14540>  // b.any
  417e00:	mov	x1, x23
  417e04:	ldp	x20, x19, [sp, #64]
  417e08:	ldp	x22, x21, [sp, #48]
  417e0c:	ldp	x24, x23, [sp, #32]
  417e10:	ldp	x26, x25, [sp, #16]
  417e14:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  417e18:	add	x0, x0, #0x966
  417e1c:	ldp	x29, x30, [sp], #80
  417e20:	b	42b940 <feof@plt+0x280a0>
  417e24:	and	x23, x22, #0xffffffff
  417e28:	mov	w8, #0x28                  	// #40
  417e2c:	madd	x9, x23, x8, x25
  417e30:	ldp	w8, w2, [x9, #12]
  417e34:	ldr	x1, [x9]
  417e38:	cmp	w8, w21
  417e3c:	b.le	417e54 <feof@plt+0x145b4>
  417e40:	cbz	w8, 417e54 <feof@plt+0x145b4>
  417e44:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0xe2fc>
  417e48:	add	x0, x0, #0x227
  417e4c:	mov	w2, w8
  417e50:	b	417e6c <feof@plt+0x145cc>
  417e54:	cmp	w2, w8
  417e58:	b.le	417e84 <feof@plt+0x145e4>
  417e5c:	cmp	w2, w21
  417e60:	b.ge	417e84 <feof@plt+0x145e4>  // b.tcont
  417e64:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0xe2fc>
  417e68:	add	x0, x0, #0x24c
  417e6c:	ldp	x20, x19, [sp, #64]
  417e70:	ldp	x22, x21, [sp, #48]
  417e74:	ldp	x24, x23, [sp, #32]
  417e78:	ldp	x26, x25, [sp, #16]
  417e7c:	ldp	x29, x30, [sp], #80
  417e80:	b	42b940 <feof@plt+0x280a0>
  417e84:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  417e88:	ldr	x8, [x8, #528]
  417e8c:	mov	w0, w21
  417e90:	mov	w1, w22
  417e94:	blr	x8
  417e98:	tbz	w0, #0, 417eb8 <feof@plt+0x14618>
  417e9c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417ea0:	ldrb	w8, [x8, #296]
  417ea4:	tbz	w8, #0, 417ee8 <feof@plt+0x14648>
  417ea8:	lsl	x8, x23, #2
  417eac:	mov	w9, #0x1                   	// #1
  417eb0:	str	w21, [x20, x8]
  417eb4:	str	w9, [x19, x8]
  417eb8:	ldp	x20, x19, [sp, #64]
  417ebc:	ldp	x22, x21, [sp, #48]
  417ec0:	ldp	x24, x23, [sp, #32]
  417ec4:	ldp	x26, x25, [sp, #16]
  417ec8:	ldp	x29, x30, [sp], #80
  417ecc:	ret
  417ed0:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  417ed4:	adrp	x2, 484000 <_obstack_memory_used@@Base+0x82fc>
  417ed8:	add	x0, x0, #0x925
  417edc:	add	x2, x2, #0x956
  417ee0:	mov	w1, #0xea                  	// #234
  417ee4:	bl	429434 <feof@plt+0x25b94>
  417ee8:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  417eec:	adrp	x2, 48a000 <_obstack_memory_used@@Base+0xe2fc>
  417ef0:	add	x0, x0, #0x925
  417ef4:	add	x2, x2, #0x271
  417ef8:	mov	w1, #0x8c                  	// #140
  417efc:	bl	429434 <feof@plt+0x25b94>
  417f00:	stp	x29, x30, [sp, #-16]!
  417f04:	mov	x29, sp
  417f08:	ldr	w8, [x3, w0, sxtw #2]
  417f0c:	cbz	w8, 417f18 <feof@plt+0x14678>
  417f10:	ldp	x29, x30, [sp], #16
  417f14:	ret
  417f18:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417f1c:	ldrb	w8, [x8, #296]
  417f20:	tbz	w8, #0, 417f30 <feof@plt+0x14690>
  417f24:	str	w1, [x2, w0, uxtw #2]
  417f28:	ldp	x29, x30, [sp], #16
  417f2c:	ret
  417f30:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  417f34:	adrp	x2, 48a000 <_obstack_memory_used@@Base+0xe2fc>
  417f38:	add	x0, x0, #0x925
  417f3c:	add	x2, x2, #0x271
  417f40:	mov	w1, #0x8c                  	// #140
  417f44:	bl	429434 <feof@plt+0x25b94>
  417f48:	stp	x29, x30, [sp, #-16]!
  417f4c:	mov	x29, sp
  417f50:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417f54:	ldrb	w8, [x8, #296]
  417f58:	cmp	w8, #0x1
  417f5c:	b.eq	417f7c <feof@plt+0x146dc>  // b.none
  417f60:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417f64:	ldr	x8, [x8, #288]
  417f68:	mov	w9, #0x28                  	// #40
  417f6c:	smaddl	x8, w0, w9, x8
  417f70:	str	w1, [x8, #8]
  417f74:	ldp	x29, x30, [sp], #16
  417f78:	ret
  417f7c:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  417f80:	adrp	x2, 484000 <_obstack_memory_used@@Base+0x82fc>
  417f84:	add	x0, x0, #0x925
  417f88:	add	x2, x2, #0x97c
  417f8c:	mov	w1, #0x10c                 	// #268
  417f90:	bl	429434 <feof@plt+0x25b94>
  417f94:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417f98:	ldr	x8, [x8, #288]
  417f9c:	mov	w9, #0x28                  	// #40
  417fa0:	smaddl	x8, w0, w9, x8
  417fa4:	ldr	w0, [x8, #8]
  417fa8:	ret
  417fac:	stp	x29, x30, [sp, #-16]!
  417fb0:	mov	x29, sp
  417fb4:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417fb8:	ldrb	w8, [x8, #296]
  417fbc:	cmp	w8, #0x1
  417fc0:	b.ne	418000 <feof@plt+0x14760>  // b.any
  417fc4:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417fc8:	ldr	x8, [x8, #304]
  417fcc:	cbz	x8, 417ff8 <feof@plt+0x14758>
  417fd0:	mov	x9, xzr
  417fd4:	mov	w10, #0x8                   	// #8
  417fd8:	adrp	x11, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  417fdc:	ldr	x12, [x11, #288]
  417fe0:	ldr	w12, [x12, x10]
  417fe4:	add	x10, x10, #0x28
  417fe8:	str	w12, [x0, x9, lsl #2]
  417fec:	add	x9, x9, #0x1
  417ff0:	cmp	x9, x8
  417ff4:	b.cc	417fdc <feof@plt+0x1473c>  // b.lo, b.ul, b.last
  417ff8:	ldp	x29, x30, [sp], #16
  417ffc:	ret
  418000:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  418004:	adrp	x2, 484000 <_obstack_memory_used@@Base+0x82fc>
  418008:	add	x0, x0, #0x925
  41800c:	add	x2, x2, #0x994
  418010:	mov	w1, #0x121                 	// #289
  418014:	bl	429434 <feof@plt+0x25b94>
  418018:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41801c:	ldr	x0, [x8, #304]
  418020:	ret
  418024:	sub	sp, sp, #0x70
  418028:	stp	x29, x30, [sp, #16]
  41802c:	stp	x28, x27, [sp, #32]
  418030:	stp	x26, x25, [sp, #48]
  418034:	stp	x24, x23, [sp, #64]
  418038:	stp	x22, x21, [sp, #80]
  41803c:	stp	x20, x19, [sp, #96]
  418040:	add	x29, sp, #0x10
  418044:	adrp	x21, 48c000 <_obstack_memory_used@@Base+0x102fc>
  418048:	adrp	x22, 48c000 <_obstack_memory_used@@Base+0x102fc>
  41804c:	adrp	x23, 48c000 <_obstack_memory_used@@Base+0x102fc>
  418050:	mov	x25, x2
  418054:	mov	x20, x0
  418058:	add	x21, x21, #0xcd8
  41805c:	add	x22, x22, #0xce7
  418060:	add	x23, x23, #0xcaa
  418064:	stur	w1, [x29, #-4]
  418068:	mov	w2, #0x4                   	// #4
  41806c:	mov	x0, x21
  418070:	mov	x1, x25
  418074:	bl	403450 <strncmp@plt>
  418078:	add	x19, x25, #0x4
  41807c:	cmp	w0, #0x0
  418080:	csel	x25, x19, x25, eq  // eq = none
  418084:	cbz	w0, 4180d8 <feof@plt+0x14838>
  418088:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x102fc>
  41808c:	mov	w2, #0x4                   	// #4
  418090:	add	x0, x0, #0xcdd
  418094:	mov	x1, x25
  418098:	bl	403450 <strncmp@plt>
  41809c:	add	x19, x25, #0x4
  4180a0:	cmp	w0, #0x0
  4180a4:	csel	x25, x19, x25, eq  // eq = none
  4180a8:	cbz	w0, 4180e0 <feof@plt+0x14840>
  4180ac:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x102fc>
  4180b0:	mov	w2, #0x4                   	// #4
  4180b4:	add	x0, x0, #0xce2
  4180b8:	mov	x1, x25
  4180bc:	bl	403450 <strncmp@plt>
  4180c0:	add	x8, x25, #0x4
  4180c4:	cmp	w0, #0x0
  4180c8:	csel	x19, x8, x25, eq  // eq = none
  4180cc:	mov	w8, #0x2                   	// #2
  4180d0:	cinc	w26, w8, ne  // ne = any
  4180d4:	b	4180e4 <feof@plt+0x14844>
  4180d8:	mov	w26, wzr
  4180dc:	b	4180e4 <feof@plt+0x14844>
  4180e0:	mov	w26, #0x1                   	// #1
  4180e4:	mov	w2, #0x4                   	// #4
  4180e8:	mov	x0, x22
  4180ec:	mov	x1, x19
  4180f0:	bl	403450 <strncmp@plt>
  4180f4:	add	x25, x19, #0x4
  4180f8:	cmp	w0, #0x0
  4180fc:	csel	x19, x25, x19, eq  // eq = none
  418100:	cbz	w0, 418130 <feof@plt+0x14890>
  418104:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x102fc>
  418108:	mov	w2, #0x4                   	// #4
  41810c:	add	x0, x0, #0xcec
  418110:	mov	x1, x19
  418114:	bl	403450 <strncmp@plt>
  418118:	cmp	w0, #0x0
  41811c:	add	x8, x19, #0x4
  418120:	cset	w28, ne  // ne = any
  418124:	csel	x25, x8, x19, eq  // eq = none
  418128:	mov	w24, #0x1                   	// #1
  41812c:	b	418138 <feof@plt+0x14898>
  418130:	mov	w24, wzr
  418134:	mov	w28, #0x1                   	// #1
  418138:	mov	w2, #0x4                   	// #4
  41813c:	mov	x0, x23
  418140:	mov	x1, x25
  418144:	bl	403450 <strncmp@plt>
  418148:	add	x19, x25, #0x4
  41814c:	cmp	w0, #0x0
  418150:	csel	x25, x19, x25, eq  // eq = none
  418154:	cbz	w0, 4181e0 <feof@plt+0x14940>
  418158:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x102fc>
  41815c:	mov	w2, #0x3                   	// #3
  418160:	add	x0, x0, #0xcf1
  418164:	mov	x1, x25
  418168:	mov	w27, #0x3                   	// #3
  41816c:	bl	403450 <strncmp@plt>
  418170:	add	x8, x25, #0x3
  418174:	cmp	w0, #0x0
  418178:	csel	x19, x8, x25, eq  // eq = none
  41817c:	cbz	w0, 418208 <feof@plt+0x14968>
  418180:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x102fc>
  418184:	mov	w2, #0x3                   	// #3
  418188:	add	x0, x0, #0xcfa
  41818c:	mov	x1, x19
  418190:	bl	403450 <strncmp@plt>
  418194:	add	x8, x19, #0x3
  418198:	cmp	w0, #0x0
  41819c:	csel	x25, x8, x19, eq  // eq = none
  4181a0:	cbz	w0, 418204 <feof@plt+0x14964>
  4181a4:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x102fc>
  4181a8:	mov	w2, #0x4                   	// #4
  4181ac:	add	x0, x0, #0xcf5
  4181b0:	mov	x1, x25
  4181b4:	bl	403450 <strncmp@plt>
  4181b8:	cbz	w0, 418240 <feof@plt+0x149a0>
  4181bc:	ldur	w0, [x29, #-4]
  4181c0:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x112fc>
  4181c4:	add	x1, x1, #0xe08
  4181c8:	mov	x2, x25
  4181cc:	bl	42bb84 <feof@plt+0x282e4>
  4181d0:	mov	w27, #0x3                   	// #3
  4181d4:	cmp	w26, #0x3
  4181d8:	b.eq	418214 <feof@plt+0x14974>  // b.none
  4181dc:	b	4181ec <feof@plt+0x1494c>
  4181e0:	mov	w27, wzr
  4181e4:	cmp	w26, #0x3
  4181e8:	b.eq	418214 <feof@plt+0x14974>  // b.none
  4181ec:	add	x8, x20, w26, uxtw #2
  4181f0:	cbz	w28, 4181f8 <feof@plt+0x14958>
  4181f4:	str	w27, [x8, #116]
  4181f8:	cbz	w24, 41822c <feof@plt+0x1498c>
  4181fc:	str	w27, [x8, #104]
  418200:	b	41822c <feof@plt+0x1498c>
  418204:	mov	w27, #0x2                   	// #2
  418208:	mov	x19, x8
  41820c:	cmp	w26, #0x3
  418210:	b.ne	4181ec <feof@plt+0x1494c>  // b.any
  418214:	cbz	w28, 418220 <feof@plt+0x14980>
  418218:	stp	w27, w27, [x20, #116]
  41821c:	str	w27, [x20, #124]
  418220:	cbz	w24, 41822c <feof@plt+0x1498c>
  418224:	stp	w27, w27, [x20, #104]
  418228:	str	w27, [x20, #112]
  41822c:	ldrb	w8, [x19]
  418230:	cmp	w8, #0x2c
  418234:	b.ne	418254 <feof@plt+0x149b4>  // b.any
  418238:	add	x25, x19, #0x1
  41823c:	b	418068 <feof@plt+0x147c8>
  418240:	add	x19, x25, #0x4
  418244:	mov	w27, #0x1                   	// #1
  418248:	cmp	w26, #0x3
  41824c:	b.eq	418214 <feof@plt+0x14974>  // b.none
  418250:	b	4181ec <feof@plt+0x1494c>
  418254:	cbz	w8, 41826c <feof@plt+0x149cc>
  418258:	ldur	w0, [x29, #-4]
  41825c:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x112fc>
  418260:	add	x1, x1, #0xe48
  418264:	mov	x2, x19
  418268:	bl	42bb84 <feof@plt+0x282e4>
  41826c:	ldp	w8, w9, [x20, #120]
  418270:	cmp	w8, w9
  418274:	b.lt	418284 <feof@plt+0x149e4>  // b.tstop
  418278:	ldp	w8, w9, [x20, #108]
  41827c:	cmp	w8, w9
  418280:	b.ge	4182b0 <feof@plt+0x14a10>  // b.tcont
  418284:	ldur	w0, [x29, #-4]
  418288:	ldp	x20, x19, [sp, #96]
  41828c:	ldp	x22, x21, [sp, #80]
  418290:	ldp	x24, x23, [sp, #64]
  418294:	ldp	x26, x25, [sp, #48]
  418298:	ldp	x28, x27, [sp, #32]
  41829c:	ldp	x29, x30, [sp, #16]
  4182a0:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x112fc>
  4182a4:	add	x1, x1, #0xe81
  4182a8:	add	sp, sp, #0x70
  4182ac:	b	42bb84 <feof@plt+0x282e4>
  4182b0:	ldp	x20, x19, [sp, #96]
  4182b4:	ldp	x22, x21, [sp, #80]
  4182b8:	ldp	x24, x23, [sp, #64]
  4182bc:	ldp	x26, x25, [sp, #48]
  4182c0:	ldp	x28, x27, [sp, #32]
  4182c4:	ldp	x29, x30, [sp, #16]
  4182c8:	add	sp, sp, #0x70
  4182cc:	ret
  4182d0:	cmp	w1, #0x3
  4182d4:	b.lt	41830c <feof@plt+0x14a6c>  // b.tstop
  4182d8:	mov	w8, w1
  4182dc:	add	x9, x8, x0
  4182e0:	sub	x9, x9, #0x2
  4182e4:	mov	w10, #0x2                   	// #2
  4182e8:	ldrb	w11, [x9]
  4182ec:	cmp	w11, #0x2e
  4182f0:	b.eq	418310 <feof@plt+0x14a70>  // b.none
  4182f4:	cmp	x10, #0x3
  4182f8:	b.hi	41830c <feof@plt+0x14a6c>  // b.pmore
  4182fc:	add	x10, x10, #0x1
  418300:	cmp	x10, x8
  418304:	sub	x9, x9, #0x1
  418308:	b.cc	4182e8 <feof@plt+0x14a48>  // b.lo, b.ul, b.last
  41830c:	ret
  418310:	strb	wzr, [x9]
  418314:	ret
  418318:	mov	x9, xzr
  41831c:	mov	x8, x0
  418320:	b	41832c <feof@plt+0x14a8c>
  418324:	cbz	w10, 418358 <feof@plt+0x14ab8>
  418328:	add	x8, x8, #0x1
  41832c:	ldrb	w10, [x8]
  418330:	cmp	w10, #0x2e
  418334:	b.eq	418350 <feof@plt+0x14ab0>  // b.none
  418338:	cmp	w10, #0x2f
  41833c:	b.ne	418324 <feof@plt+0x14a84>  // b.any
  418340:	mov	x9, xzr
  418344:	add	x0, x8, #0x1
  418348:	add	x8, x8, #0x1
  41834c:	b	41832c <feof@plt+0x14a8c>
  418350:	mov	x9, x8
  418354:	b	418328 <feof@plt+0x14a88>
  418358:	cmp	x9, #0x0
  41835c:	csel	w8, w8, w9, eq  // eq = none
  418360:	sub	w8, w8, w0
  418364:	str	x0, [x1]
  418368:	mov	w0, w8
  41836c:	ret
  418370:	stp	x29, x30, [sp, #-16]!
  418374:	mov	x29, sp
  418378:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41837c:	ldr	x8, [x8, #632]
  418380:	cmp	x8, x7
  418384:	b.ne	4183a0 <feof@plt+0x14b00>  // b.any
  418388:	cbnz	w4, 4183b8 <feof@plt+0x14b18>
  41838c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  418390:	ldr	x4, [x8, #496]
  418394:	mov	w3, w5
  418398:	ldp	x29, x30, [sp], #16
  41839c:	br	x4
  4183a0:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  4183a4:	adrp	x2, 48d000 <_obstack_memory_used@@Base+0x112fc>
  4183a8:	add	x0, x0, #0xef2
  4183ac:	add	x2, x2, #0xf03
  4183b0:	mov	w1, #0xde                  	// #222
  4183b4:	bl	429434 <feof@plt+0x25b94>
  4183b8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  4183bc:	adrp	x2, 48d000 <_obstack_memory_used@@Base+0x112fc>
  4183c0:	add	x0, x0, #0xef2
  4183c4:	add	x2, x2, #0xf03
  4183c8:	mov	w1, #0xdf                  	// #223
  4183cc:	bl	429434 <feof@plt+0x25b94>
  4183d0:	adrp	x0, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4183d4:	adrp	x3, 439000 <feof@plt+0x35760>
  4183d8:	adrp	x4, 439000 <feof@plt+0x35760>
  4183dc:	add	x0, x0, #0x138
  4183e0:	add	x3, x3, #0xf08
  4183e4:	add	x4, x4, #0xf34
  4183e8:	mov	w1, #0x10000               	// #65536
  4183ec:	mov	x2, xzr
  4183f0:	b	47b98c <_obstack_begin@@Base>
  4183f4:	stp	x29, x30, [sp, #-48]!
  4183f8:	str	x21, [sp, #16]
  4183fc:	stp	x20, x19, [sp, #32]
  418400:	mov	x29, sp
  418404:	mov	x20, x1
  418408:	mov	x19, x0
  41840c:	bl	418018 <feof@plt+0x14778>
  418410:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  418414:	ldr	x8, [x8, #312]
  418418:	cbz	x8, 4184ac <feof@plt+0x14c0c>
  41841c:	adrp	x1, 490000 <_obstack_memory_used@@Base+0x142fc>
  418420:	mov	x21, x0
  418424:	add	x1, x1, #0xd30
  418428:	mov	w2, #0xf10                 	// #3856
  41842c:	mov	x0, x19
  418430:	bl	402fc0 <memcpy@plt>
  418434:	cbz	x20, 418448 <feof@plt+0x14ba8>
  418438:	mov	w2, #0xf10                 	// #3856
  41843c:	mov	x0, x20
  418440:	mov	w1, wzr
  418444:	bl	4031f0 <memset@plt>
  418448:	lsl	x0, x21, #2
  41844c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  418450:	str	x0, [x19, #144]
  418454:	cbz	x20, 41846c <feof@plt+0x14bcc>
  418458:	mov	w1, #0x4                   	// #4
  41845c:	mov	x0, x21
  418460:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  418464:	str	x0, [x20, #144]
  418468:	ldr	x0, [x19, #144]
  41846c:	bl	417fac <feof@plt+0x1470c>
  418470:	mov	w8, #0x2                   	// #2
  418474:	str	w8, [x19, #3028]
  418478:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41847c:	str	wzr, [x19, #3060]
  418480:	add	x8, x8, #0x1f8
  418484:	ldr	w9, [x8, #32]
  418488:	mov	x0, x19
  41848c:	ldr	x21, [sp, #16]
  418490:	str	w9, [x19, #208]
  418494:	ldrb	w9, [x8, #64]
  418498:	str	w9, [x19, #3396]
  41849c:	ldr	x1, [x8]
  4184a0:	ldp	x20, x19, [sp, #32]
  4184a4:	ldp	x29, x30, [sp], #48
  4184a8:	br	x1
  4184ac:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  4184b0:	adrp	x2, 48d000 <_obstack_memory_used@@Base+0x112fc>
  4184b4:	add	x0, x0, #0xef2
  4184b8:	add	x2, x2, #0xf18
  4184bc:	mov	w1, #0x11f                 	// #287
  4184c0:	bl	429434 <feof@plt+0x25b94>
  4184c4:	ldr	x0, [x0, #144]
  4184c8:	b	4031d0 <free@plt>
  4184cc:	sub	sp, sp, #0xc0
  4184d0:	stp	x29, x30, [sp, #96]
  4184d4:	stp	x28, x27, [sp, #112]
  4184d8:	stp	x26, x25, [sp, #128]
  4184dc:	stp	x24, x23, [sp, #144]
  4184e0:	stp	x22, x21, [sp, #160]
  4184e4:	stp	x20, x19, [sp, #176]
  4184e8:	add	x29, sp, #0x60
  4184ec:	mov	x21, x7
  4184f0:	mov	x20, x6
  4184f4:	mov	w19, w5
  4184f8:	mov	w23, w4
  4184fc:	mov	x22, x1
  418500:	cmp	w3, #0x2
  418504:	mov	x24, x0
  418508:	mov	w26, wzr
  41850c:	b.cc	418610 <feof@plt+0x14d70>  // b.lo, b.ul, b.last
  418510:	adrp	x9, 48c000 <_obstack_memory_used@@Base+0x102fc>
  418514:	ldr	q0, [x9, #1440]
  418518:	adrp	x10, 48c000 <_obstack_memory_used@@Base+0x102fc>
  41851c:	adrp	x11, 48c000 <_obstack_memory_used@@Base+0x102fc>
  418520:	adrp	x12, 48c000 <_obstack_memory_used@@Base+0x102fc>
  418524:	str	q0, [sp, #32]
  418528:	ldr	q0, [x10, #1408]
  41852c:	mov	w8, w3
  418530:	adrp	x25, 48c000 <_obstack_memory_used@@Base+0x102fc>
  418534:	add	x27, x2, #0x58
  418538:	stur	q0, [x29, #-16]
  41853c:	ldr	q0, [x11, #1392]
  418540:	sub	x28, x8, #0x1
  418544:	add	x25, x25, #0x5b0
  418548:	stur	q0, [x29, #-32]
  41854c:	ldr	q0, [x12, #1424]
  418550:	str	q0, [sp, #48]
  418554:	b	41856c <feof@plt+0x14ccc>
  418558:	ldur	q0, [x29, #-32]
  41855c:	stur	q0, [x24, #188]
  418560:	subs	x28, x28, #0x1
  418564:	add	x27, x27, #0x58
  418568:	b.eq	418610 <feof@plt+0x14d70>  // b.none
  41856c:	ldr	x8, [x27]
  418570:	sub	x9, x8, #0x83
  418574:	cmp	x9, #0x3
  418578:	b.hi	4185c8 <feof@plt+0x14d28>  // b.pmore
  41857c:	adr	x8, 418558 <feof@plt+0x14cb8>
  418580:	ldrb	w10, [x25, x9]
  418584:	add	x8, x8, x10, lsl #2
  418588:	br	x8
  41858c:	ldr	x0, [x27, #16]
  418590:	ldrb	w8, [x0]
  418594:	cbz	w8, 4185f4 <feof@plt+0x14d54>
  418598:	mov	x1, xzr
  41859c:	mov	w2, wzr
  4185a0:	bl	41c84c <feof@plt+0x18fac>
  4185a4:	cmn	w0, #0x1
  4185a8:	b.eq	4185fc <feof@plt+0x14d5c>  // b.none
  4185ac:	cmp	w0, #0xff
  4185b0:	mov	w8, #0xff                  	// #255
  4185b4:	csel	w8, w0, w8, cc  // cc = lo, ul, last
  4185b8:	str	wzr, [x24, #200]
  4185bc:	str	xzr, [x24, #192]
  4185c0:	str	w8, [x24, #188]
  4185c4:	b	418560 <feof@plt+0x14cc0>
  4185c8:	cmp	x8, #0x392
  4185cc:	b.ne	418560 <feof@plt+0x14cc0>  // b.any
  4185d0:	ldr	x8, [x27, #72]
  4185d4:	cmp	x8, #0x0
  4185d8:	cset	w8, ne  // ne = any
  4185dc:	orr	w26, w26, w8
  4185e0:	b	418560 <feof@plt+0x14cc0>
  4185e4:	ldur	q0, [x29, #-16]
  4185e8:	b	41855c <feof@plt+0x14cbc>
  4185ec:	ldr	q0, [sp, #48]
  4185f0:	b	41855c <feof@plt+0x14cbc>
  4185f4:	ldr	q0, [sp, #32]
  4185f8:	b	41855c <feof@plt+0x14cbc>
  4185fc:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x112fc>
  418600:	mov	w0, w23
  418604:	add	x1, x1, #0xf2c
  418608:	bl	42bb84 <feof@plt+0x282e4>
  41860c:	b	418560 <feof@plt+0x14cc0>
  418610:	ldp	w9, w8, [x24, #196]
  418614:	ldp	w3, w10, [x24, #188]
  418618:	adrp	x2, 48c000 <_obstack_memory_used@@Base+0x102fc>
  41861c:	add	x2, x2, #0xd00
  418620:	cmp	w8, #0x0
  418624:	cset	w4, ne  // ne = any
  418628:	cmp	w9, #0x0
  41862c:	cset	w5, ne  // ne = any
  418630:	cmp	w10, #0x0
  418634:	cset	w6, ne  // ne = any
  418638:	mov	x0, x24
  41863c:	mov	x1, x22
  418640:	mov	w7, w19
  418644:	str	x21, [sp, #16]
  418648:	str	w23, [sp, #8]
  41864c:	str	x20, [sp]
  418650:	bl	4187ec <feof@plt+0x14f4c>
  418654:	ldr	w25, [x24, #188]
  418658:	tbz	w26, #0, 418664 <feof@plt+0x14dc4>
  41865c:	ldr	w8, [x22, #2308]
  418660:	cbz	w8, 418674 <feof@plt+0x14dd4>
  418664:	cmp	w25, #0x1
  418668:	b.le	418684 <feof@plt+0x14de4>
  41866c:	mov	w1, #0x64                  	// #100
  418670:	b	418690 <feof@plt+0x14df0>
  418674:	mov	w8, #0x1                   	// #1
  418678:	str	w8, [x24, #2308]
  41867c:	cmp	w25, #0x1
  418680:	b.gt	41866c <feof@plt+0x14dcc>
  418684:	mov	w0, #0x78                  	// #120
  418688:	bl	417f94 <feof@plt+0x146f4>
  41868c:	mov	w1, w0
  418690:	ldr	x2, [x24, #144]
  418694:	ldr	x3, [x22, #144]
  418698:	mov	w0, #0x78                  	// #120
  41869c:	bl	417f00 <feof@plt+0x14660>
  4186a0:	mov	w0, #0x94                  	// #148
  4186a4:	bl	417f94 <feof@plt+0x146f4>
  4186a8:	mov	w26, #0x6667                	// #26215
  4186ac:	movk	w26, #0x6666, lsl #16
  4186b0:	ldr	x2, [x24, #144]
  4186b4:	ldr	x3, [x22, #144]
  4186b8:	smull	x8, w0, w26
  4186bc:	lsr	x9, x8, #63
  4186c0:	asr	x8, x8, #34
  4186c4:	add	w8, w8, w9
  4186c8:	cmp	w25, #0x1
  4186cc:	csel	w1, w0, w8, gt
  4186d0:	mov	w0, #0x94                  	// #148
  4186d4:	bl	417f00 <feof@plt+0x14660>
  4186d8:	mov	w0, #0x7a                  	// #122
  4186dc:	bl	417f94 <feof@plt+0x146f4>
  4186e0:	smull	x8, w0, w26
  4186e4:	ldr	x2, [x24, #144]
  4186e8:	ldr	x3, [x22, #144]
  4186ec:	lsr	x9, x8, #63
  4186f0:	asr	x8, x8, #34
  4186f4:	cmp	w25, #0x1
  4186f8:	add	w8, w8, w9
  4186fc:	csel	w1, w0, w8, gt
  418700:	mov	w0, #0x7a                  	// #122
  418704:	bl	417f00 <feof@plt+0x14660>
  418708:	ldr	w8, [x24, #196]
  41870c:	cbz	w8, 418718 <feof@plt+0x14e78>
  418710:	mov	w1, #0x1                   	// #1
  418714:	b	418724 <feof@plt+0x14e84>
  418718:	mov	w0, #0xb2                  	// #178
  41871c:	bl	417f94 <feof@plt+0x146f4>
  418720:	mov	w1, w0
  418724:	ldr	x2, [x24, #144]
  418728:	ldr	x3, [x22, #144]
  41872c:	mov	w0, #0xb2                  	// #178
  418730:	bl	417f00 <feof@plt+0x14660>
  418734:	ldr	w8, [x24, #200]
  418738:	cbz	w8, 418744 <feof@plt+0x14ea4>
  41873c:	mov	w1, #0x1                   	// #1
  418740:	b	418750 <feof@plt+0x14eb0>
  418744:	mov	w0, #0x4d                  	// #77
  418748:	bl	417f94 <feof@plt+0x146f4>
  41874c:	mov	w1, w0
  418750:	ldr	x2, [x24, #144]
  418754:	ldr	x3, [x22, #144]
  418758:	mov	w0, #0x4d                  	// #77
  41875c:	bl	417f00 <feof@plt+0x14660>
  418760:	ldr	w8, [x24, #192]
  418764:	cbz	w8, 41878c <feof@plt+0x14eec>
  418768:	ldr	x2, [x24, #144]
  41876c:	ldr	x3, [x22, #144]
  418770:	mov	w0, #0x73                  	// #115
  418774:	mov	w1, #0x2                   	// #2
  418778:	bl	417f00 <feof@plt+0x14660>
  41877c:	ldr	w8, [x24, #192]
  418780:	cmp	w8, #0x0
  418784:	cset	w6, ne  // ne = any
  418788:	b	418790 <feof@plt+0x14ef0>
  41878c:	mov	w6, wzr
  418790:	ldp	w10, w9, [x24, #196]
  418794:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  418798:	ldr	w3, [x24, #188]
  41879c:	ldr	x2, [x8, #512]
  4187a0:	cmp	w9, #0x0
  4187a4:	cset	w4, ne  // ne = any
  4187a8:	cmp	w10, #0x0
  4187ac:	cset	w5, ne  // ne = any
  4187b0:	mov	x0, x24
  4187b4:	mov	x1, x22
  4187b8:	mov	w7, w19
  4187bc:	str	x21, [sp, #16]
  4187c0:	str	w23, [sp, #8]
  4187c4:	str	x20, [sp]
  4187c8:	bl	4187ec <feof@plt+0x14f4c>
  4187cc:	ldp	x20, x19, [sp, #176]
  4187d0:	ldp	x22, x21, [sp, #160]
  4187d4:	ldp	x24, x23, [sp, #144]
  4187d8:	ldp	x26, x25, [sp, #128]
  4187dc:	ldp	x28, x27, [sp, #112]
  4187e0:	ldp	x29, x30, [sp, #96]
  4187e4:	add	sp, sp, #0xc0
  4187e8:	ret
  4187ec:	sub	sp, sp, #0x90
  4187f0:	stp	x29, x30, [sp, #48]
  4187f4:	stp	x28, x27, [sp, #64]
  4187f8:	stp	x26, x25, [sp, #80]
  4187fc:	stp	x24, x23, [sp, #96]
  418800:	stp	x22, x21, [sp, #112]
  418804:	stp	x20, x19, [sp, #128]
  418808:	add	x29, sp, #0x30
  41880c:	stp	w5, w4, [x29, #-8]
  418810:	ldr	w8, [x2]
  418814:	cbz	w8, 4189c4 <feof@plt+0x15124>
  418818:	ldur	w9, [x29, #-4]
  41881c:	cmp	w3, #0x1
  418820:	cset	w13, eq  // eq = none
  418824:	mov	w19, w7
  418828:	eor	w11, w9, #0x1
  41882c:	cset	w9, gt
  418830:	cmp	w3, #0x0
  418834:	cset	w10, gt
  418838:	cmp	w3, #0x2
  41883c:	mov	w22, w3
  418840:	mov	x23, x1
  418844:	mov	x24, x0
  418848:	cset	w12, gt
  41884c:	b.eq	418854 <feof@plt+0x14fb4>  // b.none
  418850:	tbz	w11, #0, 4189fc <feof@plt+0x1515c>
  418854:	cmp	w22, #0x3
  418858:	b.eq	418864 <feof@plt+0x14fc4>  // b.none
  41885c:	ldur	w14, [x29, #-8]
  418860:	tbnz	w14, #0, 418a14 <feof@plt+0x15174>
  418864:	eor	w14, w6, #0x1
  418868:	orr	w13, w13, w14
  41886c:	tbz	w13, #0, 418a2c <feof@plt+0x1518c>
  418870:	ldur	w13, [x29, #-4]
  418874:	ldr	x26, [x29, #112]
  418878:	ldr	w25, [x29, #104]
  41887c:	ldr	x27, [x29, #96]
  418880:	orr	w12, w12, w13
  418884:	and	w11, w11, w14
  418888:	stur	w12, [x29, #-12]
  41888c:	and	w12, w10, w14
  418890:	adrp	x20, 48c000 <_obstack_memory_used@@Base+0x102fc>
  418894:	and	w9, w9, w11
  418898:	add	x28, x2, #0x10
  41889c:	add	x20, x20, #0x5b4
  4188a0:	stp	w9, w12, [x29, #-20]
  4188a4:	and	w9, w10, w11
  4188a8:	mov	w21, #0x1                   	// #1
  4188ac:	str	w9, [sp, #24]
  4188b0:	b	4188cc <feof@plt+0x1502c>
  4188b4:	cbz	w22, 418994 <feof@plt+0x150f4>
  4188b8:	ldr	x8, [x28]
  4188bc:	cbz	x8, 4188f8 <feof@plt+0x15058>
  4188c0:	ldr	w8, [x28, #16]
  4188c4:	add	x28, x28, #0x20
  4188c8:	cbz	w8, 4189c4 <feof@plt+0x15124>
  4188cc:	sub	w8, w8, #0x1
  4188d0:	cmp	w8, #0xa
  4188d4:	b.hi	4189e4 <feof@plt+0x15144>  // b.pmore
  4188d8:	ldur	x2, [x28, #-8]
  4188dc:	adr	x9, 4188b4 <feof@plt+0x15014>
  4188e0:	ldrb	w10, [x20, x8]
  4188e4:	add	x9, x9, x10, lsl #2
  4188e8:	br	x9
  4188ec:	cmp	w22, #0x0
  4188f0:	b.gt	418994 <feof@plt+0x150f4>
  4188f4:	b	4188b8 <feof@plt+0x15018>
  4188f8:	adrp	x9, 491000 <_obstack_memory_used@@Base+0x152fc>
  4188fc:	mov	w8, #0x60                  	// #96
  418900:	add	x9, x9, #0xcb0
  418904:	madd	x8, x2, x8, x9
  418908:	ldrb	w8, [x8, #64]
  41890c:	tbnz	w8, #7, 4188c0 <feof@plt+0x15020>
  418910:	ldr	w8, [x28, #8]
  418914:	mov	x0, x24
  418918:	mov	x1, x23
  41891c:	mov	x3, xzr
  418920:	cmp	w8, #0x0
  418924:	cset	w4, eq  // eq = none
  418928:	str	x26, [sp, #16]
  41892c:	strb	w21, [sp, #8]
  418930:	str	x27, [sp]
  418934:	b	4189b0 <feof@plt+0x15110>
  418938:	ldur	w8, [x29, #-16]
  41893c:	tbz	w8, #0, 4188b8 <feof@plt+0x15018>
  418940:	b	418994 <feof@plt+0x150f4>
  418944:	ldur	w8, [x29, #-4]
  418948:	tbz	w8, #0, 4188b8 <feof@plt+0x15018>
  41894c:	b	418994 <feof@plt+0x150f4>
  418950:	ldr	w8, [sp, #24]
  418954:	tbz	w8, #0, 4188b8 <feof@plt+0x15018>
  418958:	b	418994 <feof@plt+0x150f4>
  41895c:	cmp	w22, #0x2
  418960:	b.le	4188b8 <feof@plt+0x15018>
  418964:	b	418994 <feof@plt+0x150f4>
  418968:	cmp	w22, #0x1
  41896c:	b.le	4188b8 <feof@plt+0x15018>
  418970:	b	418994 <feof@plt+0x150f4>
  418974:	ldur	w8, [x29, #-20]
  418978:	tbz	w8, #0, 4188b8 <feof@plt+0x15018>
  41897c:	b	418994 <feof@plt+0x150f4>
  418980:	ldur	w8, [x29, #-8]
  418984:	tbz	w8, #0, 4188b8 <feof@plt+0x15018>
  418988:	b	418994 <feof@plt+0x150f4>
  41898c:	ldur	w8, [x29, #-12]
  418990:	tbz	w8, #0, 4188b8 <feof@plt+0x15018>
  418994:	ldr	x3, [x28]
  418998:	ldrsw	x4, [x28, #8]
  41899c:	str	x26, [sp, #16]
  4189a0:	strb	w21, [sp, #8]
  4189a4:	str	x27, [sp]
  4189a8:	mov	x0, x24
  4189ac:	mov	x1, x23
  4189b0:	mov	w5, w19
  4189b4:	mov	w6, wzr
  4189b8:	mov	w7, w25
  4189bc:	bl	41e44c <feof@plt+0x1abac>
  4189c0:	b	4188c0 <feof@plt+0x15020>
  4189c4:	ldp	x20, x19, [sp, #128]
  4189c8:	ldp	x22, x21, [sp, #112]
  4189cc:	ldp	x24, x23, [sp, #96]
  4189d0:	ldp	x26, x25, [sp, #80]
  4189d4:	ldp	x28, x27, [sp, #64]
  4189d8:	ldp	x29, x30, [sp, #48]
  4189dc:	add	sp, sp, #0x90
  4189e0:	ret
  4189e4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  4189e8:	adrp	x2, 48e000 <_obstack_memory_used@@Base+0x122fc>
  4189ec:	add	x0, x0, #0xef2
  4189f0:	add	x2, x2, #0x9a3
  4189f4:	mov	w1, #0x18f                 	// #399
  4189f8:	bl	429434 <feof@plt+0x25b94>
  4189fc:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  418a00:	adrp	x2, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418a04:	add	x0, x0, #0xef2
  418a08:	add	x2, x2, #0x9a3
  418a0c:	mov	w1, #0x159                 	// #345
  418a10:	bl	429434 <feof@plt+0x25b94>
  418a14:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  418a18:	adrp	x2, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418a1c:	add	x0, x0, #0xef2
  418a20:	add	x2, x2, #0x9a3
  418a24:	mov	w1, #0x15b                 	// #347
  418a28:	bl	429434 <feof@plt+0x25b94>
  418a2c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  418a30:	adrp	x2, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418a34:	add	x0, x0, #0xef2
  418a38:	add	x2, x2, #0x9a3
  418a3c:	mov	w1, #0x15d                 	// #349
  418a40:	bl	429434 <feof@plt+0x25b94>
  418a44:	stp	x29, x30, [sp, #-80]!
  418a48:	str	x25, [sp, #16]
  418a4c:	stp	x24, x23, [sp, #32]
  418a50:	stp	x22, x21, [sp, #48]
  418a54:	stp	x20, x19, [sp, #64]
  418a58:	mov	x29, sp
  418a5c:	ldr	x22, [x0, #1448]
  418a60:	mov	w19, w2
  418a64:	mov	x20, x0
  418a68:	mov	x21, x1
  418a6c:	cbz	x22, 418a78 <feof@plt+0x151d8>
  418a70:	ldrb	w8, [x20, #48]
  418a74:	cbz	w8, 418ac8 <feof@plt+0x15228>
  418a78:	ldr	w8, [x20, #3376]
  418a7c:	cbnz	w8, 418b10 <feof@plt+0x15270>
  418a80:	ldr	w8, [x20, #2992]
  418a84:	cbz	w8, 418aa0 <feof@plt+0x15200>
  418a88:	ldr	w8, [x21, #2992]
  418a8c:	cbz	w8, 418aa0 <feof@plt+0x15200>
  418a90:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x112fc>
  418a94:	add	x1, x1, #0xf7a
  418a98:	mov	w0, w19
  418a9c:	bl	42bb84 <feof@plt+0x282e4>
  418aa0:	ldr	w8, [x20, #3208]
  418aa4:	str	wzr, [x20, #2992]
  418aa8:	cmp	w8, #0x1
  418aac:	b.ne	418ac0 <feof@plt+0x15220>  // b.any
  418ab0:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x112fc>
  418ab4:	add	x1, x1, #0xfbb
  418ab8:	mov	w0, w19
  418abc:	bl	42bb84 <feof@plt+0x282e4>
  418ac0:	str	wzr, [x20, #3208]
  418ac4:	b	418b10 <feof@plt+0x15270>
  418ac8:	mov	x8, x22
  418acc:	ldrb	w9, [x8]
  418ad0:	cbz	w9, 418ae8 <feof@plt+0x15248>
  418ad4:	cmp	w9, #0x2f
  418ad8:	b.eq	418b00 <feof@plt+0x15260>  // b.none
  418adc:	add	x8, x8, #0x1
  418ae0:	ldrb	w9, [x8]
  418ae4:	cbnz	w9, 418ad4 <feof@plt+0x15234>
  418ae8:	ldr	x0, [x20, #1456]
  418aec:	cbz	x0, 4193d4 <feof@plt+0x15b34>
  418af0:	mov	x1, x22
  418af4:	mov	x2, xzr
  418af8:	bl	41d0a0 <feof@plt+0x19800>
  418afc:	str	x0, [x20, #1448]
  418b00:	mov	w8, #0x1                   	// #1
  418b04:	strb	w8, [x20, #48]
  418b08:	ldr	w8, [x20, #3376]
  418b0c:	cbz	w8, 418a80 <feof@plt+0x151e0>
  418b10:	ldr	x8, [x20, #3016]
  418b14:	cbz	x8, 418b20 <feof@plt+0x15280>
  418b18:	mov	w8, #0x1                   	// #1
  418b1c:	str	w8, [x20, #3168]
  418b20:	ldr	w8, [x20, #2144]
  418b24:	cbz	w8, 418b3c <feof@plt+0x1529c>
  418b28:	ldr	w8, [x20, #2576]
  418b2c:	cbz	w8, 418b3c <feof@plt+0x1529c>
  418b30:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  418b34:	add	x0, x0, #0xffd
  418b38:	bl	42bdac <feof@plt+0x2850c>
  418b3c:	ldr	w9, [x20, #188]
  418b40:	ldr	w8, [x20, #3208]
  418b44:	cbnz	w9, 418b6c <feof@plt+0x152cc>
  418b48:	cmp	w8, #0x2
  418b4c:	b.ne	418b6c <feof@plt+0x152cc>  // b.any
  418b50:	ldr	w8, [x20, #2992]
  418b54:	cbz	w8, 418b60 <feof@plt+0x152c0>
  418b58:	ldr	w8, [x21, #2992]
  418b5c:	cbnz	w8, 418b94 <feof@plt+0x152f4>
  418b60:	str	wzr, [x20, #3208]
  418b64:	str	wzr, [x20, #2992]
  418b68:	b	418b70 <feof@plt+0x152d0>
  418b6c:	cbnz	w8, 418b94 <feof@plt+0x152f4>
  418b70:	ldr	w8, [x20, #2992]
  418b74:	cbz	w8, 418b90 <feof@plt+0x152f0>
  418b78:	ldr	w8, [x21, #2992]
  418b7c:	cbz	w8, 418b90 <feof@plt+0x152f0>
  418b80:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418b84:	add	x1, x1, #0x3c
  418b88:	mov	w0, w19
  418b8c:	bl	42bb84 <feof@plt+0x282e4>
  418b90:	str	wzr, [x20, #2992]
  418b94:	ldrb	w8, [x20, #52]
  418b98:	cbnz	w8, 418be8 <feof@plt+0x15348>
  418b9c:	ldr	w9, [x20, #1468]
  418ba0:	cmn	w9, #0x1
  418ba4:	b.eq	418bb8 <feof@plt+0x15318>  // b.none
  418ba8:	add	x8, x20, #0x5b8
  418bac:	cbz	w9, 418bc0 <feof@plt+0x15320>
  418bb0:	str	w9, [x8]
  418bb4:	b	418be0 <feof@plt+0x15340>
  418bb8:	str	wzr, [x20, #1468]
  418bbc:	add	x8, x20, #0x5b8
  418bc0:	ldr	w9, [x8]
  418bc4:	cbz	w9, 418be0 <feof@plt+0x15340>
  418bc8:	cmn	w9, #0x1
  418bcc:	b.ne	418bd8 <feof@plt+0x15338>  // b.any
  418bd0:	str	wzr, [x8]
  418bd4:	b	418be0 <feof@plt+0x15340>
  418bd8:	mov	w8, #0x1                   	// #1
  418bdc:	str	w8, [x20, #180]
  418be0:	mov	w8, #0x1                   	// #1
  418be4:	strb	w8, [x20, #52]
  418be8:	ldr	w8, [x20, #3120]
  418bec:	cmn	w8, #0x1
  418bf0:	b.eq	418d98 <feof@plt+0x154f8>  // b.none
  418bf4:	ldr	w8, [x20, #188]
  418bf8:	cbz	w8, 418da4 <feof@plt+0x15504>
  418bfc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  418c00:	ldr	x8, [x8, #544]
  418c04:	mov	x0, x20
  418c08:	blr	x8
  418c0c:	ldr	w8, [x20, #2036]
  418c10:	mov	w22, w0
  418c14:	cbz	w8, 418c54 <feof@plt+0x153b4>
  418c18:	ldr	w8, [x20, #2864]
  418c1c:	cbz	w8, 418c54 <feof@plt+0x153b4>
  418c20:	cmp	w22, #0x1
  418c24:	b.eq	418c30 <feof@plt+0x15390>  // b.none
  418c28:	cmp	w22, #0x3
  418c2c:	b.lt	418c54 <feof@plt+0x153b4>  // b.tstop
  418c30:	ldr	w8, [x21, #2864]
  418c34:	cbz	w8, 418c48 <feof@plt+0x153a8>
  418c38:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418c3c:	add	x1, x1, #0x7f
  418c40:	mov	w0, w19
  418c44:	bl	42ab7c <feof@plt+0x272dc>
  418c48:	mov	w8, #0x1                   	// #1
  418c4c:	str	wzr, [x20, #2864]
  418c50:	str	w8, [x20, #2856]
  418c54:	ldr	w10, [x20, #3396]
  418c58:	ldr	w9, [x20, #2864]
  418c5c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  418c60:	cbz	w10, 418c88 <feof@plt+0x153e8>
  418c64:	ldrb	w10, [x8, #568]
  418c68:	cbnz	w10, 418c88 <feof@plt+0x153e8>
  418c6c:	cbz	w9, 4190c4 <feof@plt+0x15824>
  418c70:	cmp	w22, #0x1
  418c74:	b.eq	4190a0 <feof@plt+0x15800>  // b.none
  418c78:	cmp	w22, #0x2
  418c7c:	b.gt	4190a0 <feof@plt+0x15800>
  418c80:	add	x23, x20, #0xb30
  418c84:	b	418c90 <feof@plt+0x153f0>
  418c88:	add	x23, x20, #0xb30
  418c8c:	cbz	w9, 418ce0 <feof@plt+0x15440>
  418c90:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  418c94:	ldrb	w9, [x9, #569]
  418c98:	cbz	w9, 418cbc <feof@plt+0x1541c>
  418c9c:	ldr	w9, [x20, #3396]
  418ca0:	cbz	w9, 418ce0 <feof@plt+0x15440>
  418ca4:	ldrb	w8, [x8, #568]
  418ca8:	cbz	w8, 418ce0 <feof@plt+0x15440>
  418cac:	cmp	w22, #0x1
  418cb0:	b.eq	418cbc <feof@plt+0x1541c>  // b.none
  418cb4:	cmp	w22, #0x3
  418cb8:	b.lt	418ce0 <feof@plt+0x15440>  // b.tstop
  418cbc:	ldr	w8, [x21, #2864]
  418cc0:	cbz	w8, 418cd4 <feof@plt+0x15434>
  418cc4:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418cc8:	add	x1, x1, #0x12a
  418ccc:	mov	w0, w19
  418cd0:	bl	42ab7c <feof@plt+0x272dc>
  418cd4:	mov	w8, #0x1                   	// #1
  418cd8:	str	wzr, [x20, #2864]
  418cdc:	str	w8, [x20, #2856]
  418ce0:	ldr	w8, [x20, #2996]
  418ce4:	cbz	w8, 4190d0 <feof@plt+0x15830>
  418ce8:	ldr	w8, [x20, #1752]
  418cec:	cbz	w8, 418d18 <feof@plt+0x15478>
  418cf0:	ldr	x2, [x20, #144]
  418cf4:	ldr	x3, [x21, #144]
  418cf8:	mov	w0, #0x1e                  	// #30
  418cfc:	mov	w1, #0x64                  	// #100
  418d00:	bl	417f00 <feof@plt+0x14660>
  418d04:	ldr	x2, [x20, #144]
  418d08:	ldr	x3, [x21, #144]
  418d0c:	mov	w0, #0x1f                  	// #31
  418d10:	mov	w1, #0x28                  	// #40
  418d14:	bl	417f00 <feof@plt+0x14660>
  418d18:	ldr	x8, [x20, #2480]
  418d1c:	cbz	x8, 418d50 <feof@plt+0x154b0>
  418d20:	ldr	w8, [x20, #2064]
  418d24:	mov	w9, #0x1                   	// #1
  418d28:	str	w9, [x20, #168]
  418d2c:	str	wzr, [x20, #3476]
  418d30:	cbz	w8, 418db4 <feof@plt+0x15514>
  418d34:	ldr	w8, [x20, #3552]
  418d38:	cbz	w8, 418d50 <feof@plt+0x154b0>
  418d3c:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418d40:	add	x1, x1, #0x1af
  418d44:	mov	w0, w19
  418d48:	bl	42ab7c <feof@plt+0x272dc>
  418d4c:	str	wzr, [x20, #3552]
  418d50:	ldr	w8, [x20, #3092]
  418d54:	cbz	w8, 418dfc <feof@plt+0x1555c>
  418d58:	cmn	w8, #0x1
  418d5c:	b.eq	418df8 <feof@plt+0x15558>  // b.none
  418d60:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  418d64:	ldr	x8, [x8, #552]
  418d68:	mov	w0, #0x1                   	// #1
  418d6c:	mov	x1, x20
  418d70:	blr	x8
  418d74:	tbz	w0, #0, 418de8 <feof@plt+0x15548>
  418d78:	ldr	w8, [x20, #3092]
  418d7c:	cbz	w8, 418dfc <feof@plt+0x1555c>
  418d80:	ldr	w8, [x23]
  418d84:	cbz	w8, 418e14 <feof@plt+0x15574>
  418d88:	ldr	w8, [x21, #2864]
  418d8c:	cbnz	w8, 418dfc <feof@plt+0x1555c>
  418d90:	str	wzr, [x23]
  418d94:	b	418e14 <feof@plt+0x15574>
  418d98:	str	wzr, [x20, #3120]
  418d9c:	ldr	w8, [x20, #188]
  418da0:	cbnz	w8, 418bfc <feof@plt+0x1535c>
  418da4:	mov	w8, #0x1                   	// #1
  418da8:	str	wzr, [x20, #732]
  418dac:	str	w8, [x20, #2244]
  418db0:	b	418bfc <feof@plt+0x1535c>
  418db4:	ldr	w8, [x21, #3408]
  418db8:	cbz	w8, 418d34 <feof@plt+0x15494>
  418dbc:	ldr	w8, [x20, #3408]
  418dc0:	cbnz	w8, 418d34 <feof@plt+0x15494>
  418dc4:	ldr	w8, [x21, #2064]
  418dc8:	cbz	w8, 418ddc <feof@plt+0x1553c>
  418dcc:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418dd0:	add	x1, x1, #0x170
  418dd4:	mov	w0, w19
  418dd8:	bl	42bb84 <feof@plt+0x282e4>
  418ddc:	mov	w8, #0x1                   	// #1
  418de0:	str	w8, [x20, #2064]
  418de4:	b	418d34 <feof@plt+0x15494>
  418de8:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418dec:	add	x1, x1, #0x1e6
  418df0:	mov	w0, w19
  418df4:	bl	42bb84 <feof@plt+0x282e4>
  418df8:	str	wzr, [x20, #3092]
  418dfc:	ldr	w8, [x23]
  418e00:	cbz	w8, 418e14 <feof@plt+0x15574>
  418e04:	ldr	w8, [x21, #2868]
  418e08:	cbnz	w8, 418e14 <feof@plt+0x15574>
  418e0c:	mov	w8, #0x1                   	// #1
  418e10:	str	w8, [x20, #2868]
  418e14:	ldr	w8, [x20, #3432]
  418e18:	cmp	w8, #0x1
  418e1c:	b.ne	418e5c <feof@plt+0x155bc>  // b.any
  418e20:	ldr	x2, [x20, #144]
  418e24:	ldr	x3, [x21, #144]
  418e28:	mov	w0, #0x5d                  	// #93
  418e2c:	mov	w1, #0x6                   	// #6
  418e30:	bl	417f00 <feof@plt+0x14660>
  418e34:	ldr	x2, [x20, #144]
  418e38:	ldr	x3, [x21, #144]
  418e3c:	mov	w0, #0x5c                  	// #92
  418e40:	mov	w1, wzr
  418e44:	bl	417f00 <feof@plt+0x14660>
  418e48:	ldr	x2, [x20, #144]
  418e4c:	ldr	x3, [x21, #144]
  418e50:	mov	w0, #0x5e                  	// #94
  418e54:	mov	w1, wzr
  418e58:	bl	417f00 <feof@plt+0x14660>
  418e5c:	ldr	w8, [x20, #3300]
  418e60:	cbnz	w8, 418e6c <feof@plt+0x155cc>
  418e64:	ldr	w8, [x20, #3340]
  418e68:	cbz	w8, 418e74 <feof@plt+0x155d4>
  418e6c:	ldr	w8, [x20, #3284]
  418e70:	cbnz	w8, 418e88 <feof@plt+0x155e8>
  418e74:	ldr	x2, [x20, #144]
  418e78:	ldr	x3, [x21, #144]
  418e7c:	mov	w0, #0xb0                  	// #176
  418e80:	mov	w1, wzr
  418e84:	bl	417f00 <feof@plt+0x14660>
  418e88:	ldr	w8, [x20, #3552]
  418e8c:	cbz	w8, 418e98 <feof@plt+0x155f8>
  418e90:	mov	w8, #0x2                   	// #2
  418e94:	str	w8, [x20, #3536]
  418e98:	ldr	w8, [x20, #212]
  418e9c:	tst	w8, #0x6
  418ea0:	b.ne	418ed4 <feof@plt+0x15634>  // b.any
  418ea4:	tbz	w8, #26, 418ebc <feof@plt+0x1561c>
  418ea8:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418eac:	add	x1, x1, #0x228
  418eb0:	mov	w0, w19
  418eb4:	bl	42bb84 <feof@plt+0x282e4>
  418eb8:	ldr	w8, [x20, #212]
  418ebc:	tbz	w8, #27, 418ed4 <feof@plt+0x15634>
  418ec0:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418ec4:	add	x1, x1, #0x295
  418ec8:	mov	w0, w19
  418ecc:	bl	42bb84 <feof@plt+0x282e4>
  418ed0:	ldr	w8, [x20, #212]
  418ed4:	mvn	w9, w8
  418ed8:	tst	w9, #0x6
  418edc:	b.ne	418ef4 <feof@plt+0x15654>  // b.any
  418ee0:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418ee4:	add	x1, x1, #0x303
  418ee8:	mov	w0, w19
  418eec:	bl	42bb84 <feof@plt+0x282e4>
  418ef0:	ldr	w8, [x20, #212]
  418ef4:	mov	w9, #0x9                   	// #9
  418ef8:	bics	wzr, w9, w8
  418efc:	b.ne	418f14 <feof@plt+0x15674>  // b.any
  418f00:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418f04:	add	x1, x1, #0x34d
  418f08:	mov	w0, w19
  418f0c:	bl	42bb84 <feof@plt+0x282e4>
  418f10:	ldr	w8, [x20, #212]
  418f14:	mvn	w8, w8
  418f18:	tst	w8, #0x18
  418f1c:	b.ne	418f30 <feof@plt+0x15690>  // b.any
  418f20:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418f24:	add	x1, x1, #0x3b2
  418f28:	mov	w0, w19
  418f2c:	bl	42bb84 <feof@plt+0x282e4>
  418f30:	adrp	x2, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  418f34:	adrp	x24, 48d000 <_obstack_memory_used@@Base+0x112fc>
  418f38:	mov	w25, #0xd7cf                	// #55247
  418f3c:	adrp	x22, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418f40:	mov	x23, xzr
  418f44:	add	x2, x2, #0x8e0
  418f48:	add	x24, x24, #0x900
  418f4c:	movk	w25, #0x3fff, lsl #16
  418f50:	add	x22, x22, #0x3f1
  418f54:	b	418f68 <feof@plt+0x156c8>
  418f58:	ldr	x2, [x24], #32
  418f5c:	add	x23, x23, #0x1
  418f60:	cmp	x23, #0x1e
  418f64:	b.eq	418f90 <feof@plt+0x156f0>  // b.none
  418f68:	ldr	w8, [x20, #220]
  418f6c:	ldur	w9, [x24, #-24]
  418f70:	tst	w9, w8
  418f74:	b.eq	418f58 <feof@plt+0x156b8>  // b.none
  418f78:	lsr	x8, x25, x23
  418f7c:	tbnz	w8, #0, 418f58 <feof@plt+0x156b8>
  418f80:	mov	w0, w19
  418f84:	mov	x1, x22
  418f88:	bl	42bb84 <feof@plt+0x282e4>
  418f8c:	b	418f58 <feof@plt+0x156b8>
  418f90:	ldr	w8, [x20, #212]
  418f94:	mov	w9, #0x400                 	// #1024
  418f98:	movk	w9, #0x18, lsl #16
  418f9c:	tst	w8, w9
  418fa0:	b.eq	418fa8 <feof@plt+0x15708>  // b.none
  418fa4:	str	wzr, [x20, #1880]
  418fa8:	mov	w9, #0xfffffeef            	// #-273
  418fac:	tst	w8, w9
  418fb0:	b.eq	418fb8 <feof@plt+0x15718>  // b.none
  418fb4:	str	wzr, [x20, #1500]
  418fb8:	and	w9, w8, #0x2
  418fbc:	tbz	w8, #1, 418fd0 <feof@plt+0x15730>
  418fc0:	ldr	w10, [x21, #2904]
  418fc4:	cbnz	w10, 418fd0 <feof@plt+0x15730>
  418fc8:	mov	w10, #0x1                   	// #1
  418fcc:	str	w10, [x20, #2904]
  418fd0:	ldr	w10, [x20, #2904]
  418fd4:	cbz	w10, 419004 <feof@plt+0x15764>
  418fd8:	ldr	w10, [x20, #3124]
  418fdc:	cbz	w10, 419000 <feof@plt+0x15760>
  418fe0:	ldr	w10, [x21, #3124]
  418fe4:	cbz	w10, 419000 <feof@plt+0x15760>
  418fe8:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  418fec:	add	x1, x1, #0x41c
  418ff0:	mov	w0, w19
  418ff4:	bl	42bb84 <feof@plt+0x282e4>
  418ff8:	ldr	w8, [x20, #212]
  418ffc:	and	w9, w8, #0x2
  419000:	str	wzr, [x20, #3124]
  419004:	cbz	w9, 419020 <feof@plt+0x15780>
  419008:	ldr	w9, [x20, #2144]
  41900c:	cbz	w9, 419020 <feof@plt+0x15780>
  419010:	adrp	x0, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419014:	add	x0, x0, #0x46a
  419018:	bl	42bdac <feof@plt+0x2850c>
  41901c:	ldr	w8, [x20, #212]
  419020:	tbz	w8, #2, 419038 <feof@plt+0x15798>
  419024:	ldr	w8, [x20, #2144]
  419028:	cbz	w8, 419038 <feof@plt+0x15798>
  41902c:	adrp	x0, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419030:	add	x0, x0, #0x4ac
  419034:	bl	42bdac <feof@plt+0x2850c>
  419038:	ldr	w8, [x20, #2428]
  41903c:	cbz	w8, 4193bc <feof@plt+0x15b1c>
  419040:	ldr	x9, [x20, #2480]
  419044:	cbz	x9, 41905c <feof@plt+0x157bc>
  419048:	adrp	x0, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41904c:	add	x0, x0, #0x4f5
  419050:	bl	42bdac <feof@plt+0x2850c>
  419054:	ldr	w8, [x20, #2428]
  419058:	cbz	w8, 4193bc <feof@plt+0x15b1c>
  41905c:	cmp	w8, #0x0
  419060:	b.le	4194e4 <feof@plt+0x15c44>
  419064:	cmp	w8, #0x2
  419068:	b.eq	419164 <feof@plt+0x158c4>  // b.none
  41906c:	cmp	w8, #0x1
  419070:	b.ne	4194fc <feof@plt+0x15c5c>  // b.any
  419074:	ldr	w8, [x21, #2288]
  419078:	cbz	w8, 4190e0 <feof@plt+0x15840>
  41907c:	ldr	w8, [x20, #2288]
  419080:	cbz	w8, 4190e0 <feof@plt+0x15840>
  419084:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419088:	add	x1, x1, #0x9da
  41908c:	mov	w0, w19
  419090:	bl	42bb84 <feof@plt+0x282e4>
  419094:	ldr	w8, [x21, #2328]
  419098:	cbnz	w8, 4190ec <feof@plt+0x1584c>
  41909c:	b	419110 <feof@plt+0x15870>
  4190a0:	ldr	w8, [x21, #2864]
  4190a4:	cbz	w8, 4190b8 <feof@plt+0x15818>
  4190a8:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  4190ac:	add	x1, x1, #0xd5
  4190b0:	mov	w0, w19
  4190b4:	bl	42ab7c <feof@plt+0x272dc>
  4190b8:	mov	w8, #0x1                   	// #1
  4190bc:	str	wzr, [x20, #2864]
  4190c0:	str	w8, [x20, #2856]
  4190c4:	add	x23, x20, #0xb30
  4190c8:	ldr	w8, [x20, #2996]
  4190cc:	cbnz	w8, 418ce8 <feof@plt+0x15448>
  4190d0:	str	wzr, [x20, #3000]
  4190d4:	ldr	w8, [x20, #1752]
  4190d8:	cbnz	w8, 418cf0 <feof@plt+0x15450>
  4190dc:	b	418d18 <feof@plt+0x15478>
  4190e0:	str	wzr, [x20, #2288]
  4190e4:	ldr	w8, [x21, #2328]
  4190e8:	cbz	w8, 419110 <feof@plt+0x15870>
  4190ec:	ldr	w8, [x20, #2328]
  4190f0:	cbz	w8, 419110 <feof@plt+0x15870>
  4190f4:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  4190f8:	add	x1, x1, #0xa29
  4190fc:	mov	w0, w19
  419100:	bl	42bb84 <feof@plt+0x282e4>
  419104:	ldr	w8, [x21, #2672]
  419108:	cbnz	w8, 41911c <feof@plt+0x1587c>
  41910c:	b	419140 <feof@plt+0x158a0>
  419110:	str	wzr, [x20, #2328]
  419114:	ldr	w8, [x21, #2672]
  419118:	cbz	w8, 419140 <feof@plt+0x158a0>
  41911c:	ldr	w8, [x20, #2672]
  419120:	cbz	w8, 419140 <feof@plt+0x158a0>
  419124:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419128:	add	x1, x1, #0xa73
  41912c:	mov	w0, w19
  419130:	bl	42bb84 <feof@plt+0x282e4>
  419134:	ldr	w8, [x21, #2284]
  419138:	cbnz	w8, 41914c <feof@plt+0x158ac>
  41913c:	b	419170 <feof@plt+0x158d0>
  419140:	str	wzr, [x20, #2672]
  419144:	ldr	w8, [x21, #2284]
  419148:	cbz	w8, 419170 <feof@plt+0x158d0>
  41914c:	ldr	w8, [x20, #2284]
  419150:	cbz	w8, 419170 <feof@plt+0x158d0>
  419154:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419158:	add	x1, x1, #0xac6
  41915c:	mov	w0, w19
  419160:	bl	42bb84 <feof@plt+0x282e4>
  419164:	ldr	w8, [x21, #3476]
  419168:	cbnz	w8, 41917c <feof@plt+0x158dc>
  41916c:	b	4191a0 <feof@plt+0x15900>
  419170:	str	wzr, [x20, #2284]
  419174:	ldr	w8, [x21, #3476]
  419178:	cbz	w8, 4191a0 <feof@plt+0x15900>
  41917c:	ldr	w8, [x20, #3476]
  419180:	cbz	w8, 4191a0 <feof@plt+0x15900>
  419184:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419188:	add	x1, x1, #0xb0f
  41918c:	mov	w0, w19
  419190:	bl	42bb84 <feof@plt+0x282e4>
  419194:	ldr	w8, [x21, #2308]
  419198:	cbnz	w8, 4191ac <feof@plt+0x1590c>
  41919c:	b	4191d0 <feof@plt+0x15930>
  4191a0:	str	wzr, [x20, #3476]
  4191a4:	ldr	w8, [x21, #2308]
  4191a8:	cbz	w8, 4191d0 <feof@plt+0x15930>
  4191ac:	ldr	w8, [x20, #2308]
  4191b0:	cbz	w8, 4191d0 <feof@plt+0x15930>
  4191b4:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  4191b8:	add	x1, x1, #0xb6c
  4191bc:	mov	w0, w19
  4191c0:	bl	42bb84 <feof@plt+0x282e4>
  4191c4:	ldr	w8, [x21, #2320]
  4191c8:	cbnz	w8, 4191dc <feof@plt+0x1593c>
  4191cc:	b	419200 <feof@plt+0x15960>
  4191d0:	str	wzr, [x20, #2308]
  4191d4:	ldr	w8, [x21, #2320]
  4191d8:	cbz	w8, 419200 <feof@plt+0x15960>
  4191dc:	ldr	w8, [x20, #2320]
  4191e0:	cbz	w8, 419200 <feof@plt+0x15960>
  4191e4:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  4191e8:	add	x1, x1, #0xbc3
  4191ec:	mov	w0, w19
  4191f0:	bl	42bb84 <feof@plt+0x282e4>
  4191f4:	ldr	w8, [x21, #2316]
  4191f8:	cbnz	w8, 41920c <feof@plt+0x1596c>
  4191fc:	b	419230 <feof@plt+0x15990>
  419200:	str	wzr, [x20, #2320]
  419204:	ldr	w8, [x21, #2316]
  419208:	cbz	w8, 419230 <feof@plt+0x15990>
  41920c:	ldr	w8, [x20, #2316]
  419210:	cbz	w8, 419230 <feof@plt+0x15990>
  419214:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419218:	add	x1, x1, #0xc20
  41921c:	mov	w0, w19
  419220:	bl	42bb84 <feof@plt+0x282e4>
  419224:	ldr	w8, [x21, #2292]
  419228:	cbnz	w8, 41923c <feof@plt+0x1599c>
  41922c:	b	419260 <feof@plt+0x159c0>
  419230:	str	wzr, [x20, #2316]
  419234:	ldr	w8, [x21, #2292]
  419238:	cbz	w8, 419260 <feof@plt+0x159c0>
  41923c:	ldr	w8, [x20, #2292]
  419240:	cbz	w8, 419260 <feof@plt+0x159c0>
  419244:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419248:	add	x1, x1, #0xc76
  41924c:	mov	w0, w19
  419250:	bl	42bb84 <feof@plt+0x282e4>
  419254:	ldr	w8, [x21, #2296]
  419258:	cbnz	w8, 41926c <feof@plt+0x159cc>
  41925c:	b	419290 <feof@plt+0x159f0>
  419260:	str	wzr, [x20, #2292]
  419264:	ldr	w8, [x21, #2296]
  419268:	cbz	w8, 419290 <feof@plt+0x159f0>
  41926c:	ldr	w8, [x20, #2296]
  419270:	cbz	w8, 419290 <feof@plt+0x159f0>
  419274:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419278:	add	x1, x1, #0xccd
  41927c:	mov	w0, w19
  419280:	bl	42bb84 <feof@plt+0x282e4>
  419284:	ldr	w8, [x21, #2300]
  419288:	cbnz	w8, 41929c <feof@plt+0x159fc>
  41928c:	b	4192c0 <feof@plt+0x15a20>
  419290:	str	wzr, [x20, #2296]
  419294:	ldr	w8, [x21, #2300]
  419298:	cbz	w8, 4192c0 <feof@plt+0x15a20>
  41929c:	ldr	w8, [x20, #2300]
  4192a0:	cbz	w8, 4192c0 <feof@plt+0x15a20>
  4192a4:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  4192a8:	add	x1, x1, #0xd2e
  4192ac:	mov	w0, w19
  4192b0:	bl	42bb84 <feof@plt+0x282e4>
  4192b4:	ldr	w8, [x21, #2280]
  4192b8:	cbnz	w8, 4192cc <feof@plt+0x15a2c>
  4192bc:	b	4192f0 <feof@plt+0x15a50>
  4192c0:	str	wzr, [x20, #2300]
  4192c4:	ldr	w8, [x21, #2280]
  4192c8:	cbz	w8, 4192f0 <feof@plt+0x15a50>
  4192cc:	ldr	w8, [x20, #2280]
  4192d0:	cbz	w8, 4192f0 <feof@plt+0x15a50>
  4192d4:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  4192d8:	add	x1, x1, #0xd8f
  4192dc:	mov	w0, w19
  4192e0:	bl	42bb84 <feof@plt+0x282e4>
  4192e4:	ldr	w8, [x21, #2336]
  4192e8:	cbnz	w8, 4192fc <feof@plt+0x15a5c>
  4192ec:	b	419320 <feof@plt+0x15a80>
  4192f0:	str	wzr, [x20, #2280]
  4192f4:	ldr	w8, [x21, #2336]
  4192f8:	cbz	w8, 419320 <feof@plt+0x15a80>
  4192fc:	ldr	w8, [x20, #2336]
  419300:	cbz	w8, 419320 <feof@plt+0x15a80>
  419304:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419308:	add	x1, x1, #0xde9
  41930c:	mov	w0, w19
  419310:	bl	42bb84 <feof@plt+0x282e4>
  419314:	ldr	w8, [x21, #2312]
  419318:	cbnz	w8, 41932c <feof@plt+0x15a8c>
  41931c:	b	419350 <feof@plt+0x15ab0>
  419320:	str	wzr, [x20, #2336]
  419324:	ldr	w8, [x21, #2312]
  419328:	cbz	w8, 419350 <feof@plt+0x15ab0>
  41932c:	ldr	w8, [x20, #2312]
  419330:	cbz	w8, 419350 <feof@plt+0x15ab0>
  419334:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419338:	add	x1, x1, #0xe40
  41933c:	mov	w0, w19
  419340:	bl	42bb84 <feof@plt+0x282e4>
  419344:	ldr	w8, [x21, #2324]
  419348:	cbnz	w8, 41935c <feof@plt+0x15abc>
  41934c:	b	419380 <feof@plt+0x15ae0>
  419350:	str	wzr, [x20, #2312]
  419354:	ldr	w8, [x21, #2324]
  419358:	cbz	w8, 419380 <feof@plt+0x15ae0>
  41935c:	ldr	w8, [x20, #2324]
  419360:	cbz	w8, 419380 <feof@plt+0x15ae0>
  419364:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419368:	add	x1, x1, #0xe9e
  41936c:	mov	w0, w19
  419370:	bl	42bb84 <feof@plt+0x282e4>
  419374:	ldr	w8, [x21, #2332]
  419378:	cbnz	w8, 41938c <feof@plt+0x15aec>
  41937c:	b	4193b8 <feof@plt+0x15b18>
  419380:	str	wzr, [x20, #2324]
  419384:	ldr	w8, [x21, #2332]
  419388:	cbz	w8, 4193b8 <feof@plt+0x15b18>
  41938c:	ldr	w8, [x20, #2332]
  419390:	cbz	w8, 4193b8 <feof@plt+0x15b18>
  419394:	mov	w0, w19
  419398:	ldp	x20, x19, [sp, #64]
  41939c:	ldp	x22, x21, [sp, #48]
  4193a0:	ldp	x24, x23, [sp, #32]
  4193a4:	ldr	x25, [sp, #16]
  4193a8:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  4193ac:	add	x1, x1, #0xf07
  4193b0:	ldp	x29, x30, [sp], #80
  4193b4:	b	42bb84 <feof@plt+0x282e4>
  4193b8:	str	wzr, [x20, #2332]
  4193bc:	ldp	x20, x19, [sp, #64]
  4193c0:	ldp	x22, x21, [sp, #48]
  4193c4:	ldp	x24, x23, [sp, #32]
  4193c8:	ldr	x25, [sp, #16]
  4193cc:	ldp	x29, x30, [sp], #80
  4193d0:	ret
  4193d4:	ldr	x23, [x20, #1440]
  4193d8:	cbz	x23, 418b00 <feof@plt+0x15260>
  4193dc:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  4193e0:	add	x1, x1, #0x7fc
  4193e4:	mov	x0, x23
  4193e8:	bl	403640 <strcmp@plt>
  4193ec:	cbz	w0, 418b00 <feof@plt+0x15260>
  4193f0:	add	x9, x23, #0x1
  4193f4:	mov	x8, x23
  4193f8:	b	419404 <feof@plt+0x15b64>
  4193fc:	mov	x8, x9
  419400:	add	x9, x9, #0x1
  419404:	ldurb	w10, [x9, #-1]
  419408:	cmp	w10, #0x2f
  41940c:	b.eq	4193fc <feof@plt+0x15b5c>  // b.none
  419410:	cbnz	w10, 419400 <feof@plt+0x15b60>
  419414:	cmp	x23, x8
  419418:	b.eq	418b00 <feof@plt+0x15260>  // b.none
  41941c:	mov	x0, x22
  419420:	sub	w23, w8, w23
  419424:	bl	4030b0 <strlen@plt>
  419428:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41942c:	add	x8, x8, #0x150
  419430:	ldp	x8, x9, [x8]
  419434:	sxtw	x22, w23
  419438:	add	x10, x22, x0
  41943c:	add	x24, x10, #0x1
  419440:	sub	x9, x9, x8
  419444:	cmp	x9, x24
  419448:	b.cs	419464 <feof@plt+0x15bc4>  // b.hs, b.nlast
  41944c:	adrp	x23, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  419450:	add	x23, x23, #0x138
  419454:	mov	x0, x23
  419458:	mov	x1, x24
  41945c:	bl	47bae8 <_obstack_newchunk@@Base>
  419460:	ldr	x8, [x23, #24]
  419464:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  419468:	add	x9, x9, #0x148
  41946c:	ldr	x23, [x9]
  419470:	add	x8, x8, x24
  419474:	str	x8, [x9, #8]
  419478:	cmp	x8, x23
  41947c:	b.ne	419490 <feof@plt+0x15bf0>  // b.any
  419480:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  419484:	ldrb	w10, [x9, #392]
  419488:	orr	w10, w10, #0x2
  41948c:	strb	w10, [x9, #392]
  419490:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  419494:	add	x9, x9, #0x140
  419498:	ldr	x10, [x9, #40]
  41949c:	ldr	x11, [x9]
  4194a0:	ldr	x12, [x9, #24]
  4194a4:	mov	x0, x23
  4194a8:	add	x8, x10, x8
  4194ac:	bic	x8, x8, x10
  4194b0:	sub	x13, x12, x11
  4194b4:	sub	x10, x8, x11
  4194b8:	cmp	x10, x13
  4194bc:	csel	x8, x12, x8, hi  // hi = pmore
  4194c0:	stp	x8, x8, [x9, #8]
  4194c4:	ldr	x1, [x20, #1440]
  4194c8:	mov	x2, x22
  4194cc:	bl	402fc0 <memcpy@plt>
  4194d0:	ldr	x1, [x20, #1448]
  4194d4:	add	x0, x23, x22
  4194d8:	bl	4032f0 <strcpy@plt>
  4194dc:	str	x23, [x20, #1448]
  4194e0:	b	418b00 <feof@plt+0x15260>
  4194e4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  4194e8:	adrp	x2, 48e000 <_obstack_memory_used@@Base+0x122fc>
  4194ec:	add	x0, x0, #0xef2
  4194f0:	add	x2, x2, #0x9b8
  4194f4:	mov	w1, #0x2d2                 	// #722
  4194f8:	bl	429434 <feof@plt+0x25b94>
  4194fc:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  419500:	adrp	x2, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419504:	add	x0, x0, #0xef2
  419508:	add	x2, x2, #0x9b8
  41950c:	mov	w1, #0x355                 	// #853
  419510:	bl	429434 <feof@plt+0x25b94>
  419514:	sub	sp, sp, #0xb0
  419518:	stp	x29, x30, [sp, #80]
  41951c:	stp	x28, x27, [sp, #96]
  419520:	stp	x26, x25, [sp, #112]
  419524:	stp	x24, x23, [sp, #128]
  419528:	stp	x22, x21, [sp, #144]
  41952c:	stp	x20, x19, [sp, #160]
  419530:	add	x29, sp, #0x50
  419534:	adrp	x8, 48d000 <_obstack_memory_used@@Base+0x112fc>
  419538:	adrp	x9, 48d000 <_obstack_memory_used@@Base+0x112fc>
  41953c:	adrp	x10, 48f000 <_obstack_memory_used@@Base+0x132fc>
  419540:	adrp	x11, 4b3000 <_obstack_memory_used@@Base+0x372fc>
  419544:	add	x8, x8, #0x8e0
  419548:	add	x9, x9, #0xcc0
  41954c:	cmp	w2, #0x3ef
  419550:	add	x10, x10, #0x23b
  419554:	add	x11, x11, #0xa5a
  419558:	adrp	x12, 4c3000 <_obstack_memory_used@@Base+0x472fc>
  41955c:	add	x12, x12, #0x559
  419560:	csel	x19, x9, x8, eq  // eq = none
  419564:	csel	x9, x11, x10, eq  // eq = none
  419568:	cmp	w2, #0x3f1
  41956c:	adrp	x13, 48f000 <_obstack_memory_used@@Base+0x132fc>
  419570:	csel	x9, x12, x9, eq  // eq = none
  419574:	add	x13, x13, #0x939
  419578:	mov	w14, #0x76e0                	// #30432
  41957c:	str	x9, [sp, #32]
  419580:	cmp	w4, #0x0
  419584:	add	x9, x19, #0x10
  419588:	movk	w14, #0x37e, lsl #16
  41958c:	mov	w8, #0x900                 	// #2304
  419590:	stur	x9, [x29, #-32]
  419594:	csel	x9, x13, x10, eq  // eq = none
  419598:	mov	w23, w5
  41959c:	mov	w20, w3
  4195a0:	mov	w22, w2
  4195a4:	mov	x26, x0
  4195a8:	str	x9, [sp, #24]
  4195ac:	add	x9, x19, #0x20
  4195b0:	orr	w8, w14, w8
  4195b4:	stur	w1, [x29, #-36]
  4195b8:	stur	w4, [x29, #-4]
  4195bc:	str	x9, [sp, #16]
  4195c0:	str	w8, [sp, #12]
  4195c4:	ldrb	w8, [x26]
  4195c8:	cbz	w8, 4197f0 <feof@plt+0x15f50>
  4195cc:	mov	w1, #0x2c                  	// #44
  4195d0:	mov	x0, x26
  4195d4:	bl	403210 <strchr@plt>
  4195d8:	mov	x25, x0
  4195dc:	cbz	x0, 4195ec <feof@plt+0x15d4c>
  4195e0:	sub	x24, x25, x26
  4195e4:	cbz	x24, 4195fc <feof@plt+0x15d5c>
  4195e8:	b	41960c <feof@plt+0x15d6c>
  4195ec:	mov	x0, x26
  4195f0:	bl	4030b0 <strlen@plt>
  4195f4:	mov	x24, x0
  4195f8:	cbnz	x24, 41960c <feof@plt+0x15d6c>
  4195fc:	ldrb	w8, [x25, #1]!
  419600:	mov	x26, x25
  419604:	cbnz	w8, 4195cc <feof@plt+0x15d2c>
  419608:	b	4197f0 <feof@plt+0x15f50>
  41960c:	ldr	x27, [x19]
  419610:	stur	x19, [x29, #-24]
  419614:	cbz	x27, 419688 <feof@plt+0x15de8>
  419618:	ldur	x19, [x29, #-32]
  41961c:	mov	x1, x27
  419620:	b	419630 <feof@plt+0x15d90>
  419624:	ldr	x1, [x19, #16]
  419628:	add	x19, x19, #0x20
  41962c:	cbz	x1, 419688 <feof@plt+0x15de8>
  419630:	ldr	x8, [x19]
  419634:	cmp	x24, x8
  419638:	b.ne	419624 <feof@plt+0x15d84>  // b.any
  41963c:	mov	x0, x26
  419640:	mov	x2, x24
  419644:	bl	403840 <bcmp@plt>
  419648:	cbnz	w0, 419624 <feof@plt+0x15d84>
  41964c:	ldur	w8, [x19, #-8]
  419650:	ldur	w9, [x29, #-4]
  419654:	cbz	w9, 4197b4 <feof@plt+0x15f14>
  419658:	ldur	x19, [x29, #-24]
  41965c:	cmn	w8, #0x1
  419660:	b.eq	4197bc <feof@plt+0x15f1c>  // b.none
  419664:	cmp	w22, #0x3f1
  419668:	b.ne	4197dc <feof@plt+0x15f3c>  // b.any
  41966c:	ldr	w9, [sp, #12]
  419670:	cmp	w8, w9
  419674:	b.ne	4197dc <feof@plt+0x15f3c>  // b.any
  419678:	mov	w8, #0x76e0                	// #30432
  41967c:	movk	w8, #0x37e, lsl #16
  419680:	orr	w20, w20, w8
  419684:	b	4197a8 <feof@plt+0x15f08>
  419688:	tbz	w23, #0, 4197a4 <feof@plt+0x15f04>
  41968c:	cbz	x27, 419788 <feof@plt+0x15ee8>
  419690:	stp	w23, w20, [sp, #4]
  419694:	ldr	x23, [sp, #16]
  419698:	mov	x21, xzr
  41969c:	mov	w19, #0xffffffff            	// #-1
  4196a0:	b	4196ac <feof@plt+0x15e0c>
  4196a4:	ldr	x27, [x23], #32
  4196a8:	cbz	x27, 419744 <feof@plt+0x15ea4>
  4196ac:	cmp	w22, #0x3f1
  4196b0:	b.eq	4196d4 <feof@plt+0x15e34>  // b.none
  4196b4:	cmp	w22, #0x3f4
  4196b8:	b.ne	4196e4 <feof@plt+0x15e44>  // b.any
  4196bc:	ldur	w8, [x29, #-4]
  4196c0:	cbz	w8, 4196e4 <feof@plt+0x15e44>
  4196c4:	ldur	w8, [x23, #-24]
  4196c8:	cmn	w8, #0x1
  4196cc:	b.eq	4196a4 <feof@plt+0x15e04>  // b.none
  4196d0:	b	4196e4 <feof@plt+0x15e44>
  4196d4:	ldur	w8, [x29, #-4]
  4196d8:	cbz	w8, 4196e4 <feof@plt+0x15e44>
  4196dc:	ldurb	w8, [x23, #-8]
  4196e0:	cbz	w8, 4196a4 <feof@plt+0x15e04>
  4196e4:	mov	x0, x27
  4196e8:	bl	4030b0 <strlen@plt>
  4196ec:	subs	x8, x0, x24
  4196f0:	cneg	x28, x8, mi  // mi = first
  4196f4:	cmp	w19, w28
  4196f8:	b.ls	4196a4 <feof@plt+0x15e04>  // b.plast
  4196fc:	mov	x20, x0
  419700:	mov	x0, x24
  419704:	mov	x1, x20
  419708:	bl	4284a8 <feof@plt+0x24c08>
  41970c:	cmp	w0, w28
  419710:	b.cc	4196a4 <feof@plt+0x15e04>  // b.lo, b.ul, b.last
  419714:	mov	x0, x26
  419718:	mov	w1, w24
  41971c:	mov	x2, x27
  419720:	mov	w3, w20
  419724:	bl	427fb8 <feof@plt+0x24718>
  419728:	ldur	x8, [x29, #-16]
  41972c:	cmp	w0, w19
  419730:	csel	x21, x27, x21, cc  // cc = lo, ul, last
  419734:	csel	w19, w0, w19, cc  // cc = lo, ul, last
  419738:	csel	x8, x20, x8, cc  // cc = lo, ul, last
  41973c:	stur	x8, [x29, #-16]
  419740:	b	4196a4 <feof@plt+0x15e04>
  419744:	ldp	w23, w20, [sp, #4]
  419748:	cbz	x21, 419788 <feof@plt+0x15ee8>
  41974c:	ldur	x1, [x29, #-16]
  419750:	mov	x0, x24
  419754:	bl	4284a8 <feof@plt+0x24c08>
  419758:	sub	w8, w19, #0x1
  41975c:	cmp	w8, w0
  419760:	b.cs	419788 <feof@plt+0x15ee8>  // b.hs, b.nlast
  419764:	ldur	w0, [x29, #-36]
  419768:	ldp	x2, x3, [sp, #24]
  41976c:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419770:	add	x1, x1, #0x615
  419774:	mov	w4, w24
  419778:	mov	x5, x26
  41977c:	mov	x6, x21
  419780:	bl	42bb84 <feof@plt+0x282e4>
  419784:	b	4197a4 <feof@plt+0x15f04>
  419788:	ldur	w0, [x29, #-36]
  41978c:	ldp	x2, x3, [sp, #24]
  419790:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419794:	add	x1, x1, #0x663
  419798:	mov	w4, w24
  41979c:	mov	x5, x26
  4197a0:	bl	42bb84 <feof@plt+0x282e4>
  4197a4:	ldur	x19, [x29, #-24]
  4197a8:	add	x26, x25, #0x1
  4197ac:	cbnz	x25, 4195c4 <feof@plt+0x15d24>
  4197b0:	b	4197f0 <feof@plt+0x15f50>
  4197b4:	bic	w20, w20, w8
  4197b8:	b	4197a4 <feof@plt+0x15f04>
  4197bc:	cmp	w22, #0x3f4
  4197c0:	b.ne	4197e4 <feof@plt+0x15f44>  // b.any
  4197c4:	tbz	w23, #0, 4197a8 <feof@plt+0x15f08>
  4197c8:	ldur	w0, [x29, #-36]
  4197cc:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  4197d0:	add	x1, x1, #0x5ee
  4197d4:	bl	42bb84 <feof@plt+0x282e4>
  4197d8:	b	4197a8 <feof@plt+0x15f08>
  4197dc:	orr	w20, w8, w20
  4197e0:	b	4197a8 <feof@plt+0x15f08>
  4197e4:	mov	w8, #0xfffff6e7            	// #-2329
  4197e8:	orr	w20, w20, w8
  4197ec:	b	4197a8 <feof@plt+0x15f08>
  4197f0:	mov	w0, w20
  4197f4:	ldp	x20, x19, [sp, #160]
  4197f8:	ldp	x22, x21, [sp, #144]
  4197fc:	ldp	x24, x23, [sp, #128]
  419800:	ldp	x26, x25, [sp, #112]
  419804:	ldp	x28, x27, [sp, #96]
  419808:	ldp	x29, x30, [sp, #80]
  41980c:	add	sp, sp, #0xb0
  419810:	ret
  419814:	stp	x29, x30, [sp, #-80]!
  419818:	str	x25, [sp, #16]
  41981c:	stp	x24, x23, [sp, #32]
  419820:	stp	x22, x21, [sp, #48]
  419824:	stp	x20, x19, [sp, #64]
  419828:	mov	x29, sp
  41982c:	adrp	x1, 4b4000 <_obstack_memory_used@@Base+0x382fc>
  419830:	add	x1, x1, #0x78d
  419834:	bl	403310 <strtok@plt>
  419838:	cbz	x0, 4198c8 <feof@plt+0x16028>
  41983c:	adrp	x23, 48d000 <_obstack_memory_used@@Base+0x112fc>
  419840:	mov	w24, #0x8000                	// #32768
  419844:	adrp	x20, 4b4000 <_obstack_memory_used@@Base+0x382fc>
  419848:	adrp	x21, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41984c:	mov	x22, x0
  419850:	mov	w19, wzr
  419854:	add	x23, x23, #0x8e0
  419858:	movk	w24, #0x81, lsl #16
  41985c:	add	x20, x20, #0x78d
  419860:	add	x21, x21, #0x69e
  419864:	b	419894 <feof@plt+0x15ff4>
  419868:	add	x8, x23, x25
  41986c:	ldr	w8, [x8, #8]
  419870:	cmp	w25, #0x140
  419874:	orr	w8, w8, w19
  419878:	orr	w9, w8, w24
  41987c:	csel	w19, w9, w8, eq  // eq = none
  419880:	mov	x0, xzr
  419884:	mov	x1, x20
  419888:	bl	403310 <strtok@plt>
  41988c:	mov	x22, x0
  419890:	cbz	x0, 4198cc <feof@plt+0x1602c>
  419894:	mov	x25, xzr
  419898:	ldr	x0, [x23, x25]
  41989c:	mov	x1, x22
  4198a0:	bl	403640 <strcmp@plt>
  4198a4:	cbz	w0, 419868 <feof@plt+0x15fc8>
  4198a8:	add	x25, x25, #0x20
  4198ac:	cmp	x25, #0x3c0
  4198b0:	b.ne	419898 <feof@plt+0x15ff8>  // b.any
  4198b4:	mov	w0, #0xb1                  	// #177
  4198b8:	mov	x1, x21
  4198bc:	mov	x2, x22
  4198c0:	bl	42aecc <feof@plt+0x2762c>
  4198c4:	b	419880 <feof@plt+0x15fe0>
  4198c8:	mov	w19, wzr
  4198cc:	mov	w0, w19
  4198d0:	ldp	x20, x19, [sp, #64]
  4198d4:	ldp	x22, x21, [sp, #48]
  4198d8:	ldp	x24, x23, [sp, #32]
  4198dc:	ldr	x25, [sp, #16]
  4198e0:	ldp	x29, x30, [sp], #80
  4198e4:	ret
  4198e8:	sub	sp, sp, #0x80
  4198ec:	stp	x29, x30, [sp, #32]
  4198f0:	stp	x28, x27, [sp, #48]
  4198f4:	stp	x26, x25, [sp, #64]
  4198f8:	stp	x24, x23, [sp, #80]
  4198fc:	stp	x22, x21, [sp, #96]
  419900:	stp	x20, x19, [sp, #112]
  419904:	add	x29, sp, #0x20
  419908:	str	w4, [sp, #4]
  41990c:	stur	w3, [x29, #-12]
  419910:	mov	x23, x2
  419914:	str	x1, [sp, #8]
  419918:	mov	x22, x0
  41991c:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  419920:	adrp	x1, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  419924:	add	x1, x1, #0xe31
  419928:	mov	x24, x0
  41992c:	bl	403310 <strtok@plt>
  419930:	cbz	x0, 419aec <feof@plt+0x1624c>
  419934:	adrp	x25, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  419938:	add	x25, x25, #0xe31
  41993c:	b	419970 <feof@plt+0x160d0>
  419940:	ldr	x11, [x23]
  419944:	str	w28, [x11, #4]
  419948:	ldr	x8, [x23]
  41994c:	mov	x0, xzr
  419950:	mov	x1, x25
  419954:	ldr	w9, [x8, #4]
  419958:	add	w10, w9, #0x1
  41995c:	add	x9, x8, x9, lsl #2
  419960:	str	w10, [x8, #4]
  419964:	str	w26, [x9, #8]
  419968:	bl	403310 <strtok@plt>
  41996c:	cbz	x0, 419aec <feof@plt+0x1624c>
  419970:	sub	x1, x29, #0x8
  419974:	mov	w2, #0xa                   	// #10
  419978:	bl	403190 <strtol@plt>
  41997c:	mov	x26, x0
  419980:	tbnz	w26, #31, 419b20 <feof@plt+0x16280>
  419984:	ldur	x8, [x29, #-8]
  419988:	ldrb	w8, [x8]
  41998c:	cbnz	w8, 419b20 <feof@plt+0x16280>
  419990:	ldr	x19, [x23]
  419994:	cbz	x19, 4199dc <feof@plt+0x1613c>
  419998:	ldp	w8, w9, [x19]
  41999c:	and	w0, w8, #0x7fffffff
  4199a0:	cmp	w0, w9
  4199a4:	b.ne	419948 <feof@plt+0x160a8>  // b.any
  4199a8:	tbnz	w8, #31, 4199ec <feof@plt+0x1614c>
  4199ac:	add	w1, w0, #0x1
  4199b0:	bl	425fbc <feof@plt+0x2271c>
  4199b4:	ldr	x8, [x23]
  4199b8:	mov	w9, w0
  4199bc:	lsl	x9, x9, #2
  4199c0:	mov	w27, w0
  4199c4:	add	x1, x9, #0x8
  4199c8:	mov	w28, wzr
  4199cc:	cbz	x8, 419ae0 <feof@plt+0x16240>
  4199d0:	ldr	w21, [x8, #4]
  4199d4:	mov	w20, wzr
  4199d8:	b	419a1c <feof@plt+0x1617c>
  4199dc:	mov	w28, wzr
  4199e0:	mov	w20, wzr
  4199e4:	mov	w27, #0x4                   	// #4
  4199e8:	b	419a08 <feof@plt+0x16168>
  4199ec:	str	xzr, [x23]
  4199f0:	ldr	w28, [x19, #4]
  4199f4:	mov	w20, #0x1                   	// #1
  4199f8:	add	w8, w28, #0x1
  4199fc:	cmp	w8, #0x4
  419a00:	mov	w8, #0x4                   	// #4
  419a04:	csinc	w27, w8, w28, ls  // ls = plast
  419a08:	mov	w9, w27
  419a0c:	lsl	x9, x9, #2
  419a10:	mov	x8, xzr
  419a14:	mov	w21, wzr
  419a18:	add	x1, x9, #0x8
  419a1c:	mov	x0, x8
  419a20:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  419a24:	and	w8, w27, #0x7fffffff
  419a28:	str	x0, [x23]
  419a2c:	stp	w8, w21, [x0]
  419a30:	cbz	w20, 419948 <feof@plt+0x160a8>
  419a34:	ldr	x11, [x23]
  419a38:	cbz	w28, 419944 <feof@plt+0x160a4>
  419a3c:	sub	w12, w28, #0x1
  419a40:	add	x8, x19, #0x8
  419a44:	cmp	w12, #0x7
  419a48:	add	x9, x11, #0x8
  419a4c:	b.cs	419a58 <feof@plt+0x161b8>  // b.hs, b.nlast
  419a50:	mov	w10, w28
  419a54:	b	419acc <feof@plt+0x1622c>
  419a58:	lsl	x10, x12, #2
  419a5c:	add	x13, x19, x10
  419a60:	add	x13, x13, #0xc
  419a64:	cmp	x13, x9
  419a68:	b.ls	419a80 <feof@plt+0x161e0>  // b.plast
  419a6c:	add	x10, x11, x10
  419a70:	add	x10, x10, #0xc
  419a74:	cmp	x10, x8
  419a78:	mov	w10, w28
  419a7c:	b.hi	419acc <feof@plt+0x1622c>  // b.pmore
  419a80:	add	x12, x12, #0x1
  419a84:	and	x13, x12, #0x1fffffff8
  419a88:	lsl	x8, x13, #2
  419a8c:	add	x14, x11, #0x18
  419a90:	add	x9, x19, x8
  419a94:	add	x11, x11, x8
  419a98:	sub	w10, w28, w13
  419a9c:	add	x8, x9, #0x8
  419aa0:	add	x9, x11, #0x8
  419aa4:	add	x11, x19, #0x18
  419aa8:	mov	x15, x13
  419aac:	ldp	q0, q1, [x11, #-16]
  419ab0:	subs	x15, x15, #0x8
  419ab4:	add	x11, x11, #0x20
  419ab8:	stp	q0, q1, [x14, #-16]
  419abc:	add	x14, x14, #0x20
  419ac0:	b.ne	419aac <feof@plt+0x1620c>  // b.any
  419ac4:	cmp	x12, x13
  419ac8:	b.eq	419940 <feof@plt+0x160a0>  // b.none
  419acc:	ldr	w11, [x8], #4
  419ad0:	subs	w10, w10, #0x1
  419ad4:	str	w11, [x9], #4
  419ad8:	b.ne	419acc <feof@plt+0x1622c>  // b.any
  419adc:	b	419940 <feof@plt+0x160a0>
  419ae0:	mov	w20, wzr
  419ae4:	mov	w21, wzr
  419ae8:	b	419a1c <feof@plt+0x1617c>
  419aec:	mov	x0, x24
  419af0:	bl	4031d0 <free@plt>
  419af4:	ldr	x10, [x23]
  419af8:	cbz	x10, 419b0c <feof@plt+0x1626c>
  419afc:	ldr	w8, [x10, #4]
  419b00:	sub	w9, w8, #0x1
  419b04:	cmp	w9, #0x3
  419b08:	b.ls	419b64 <feof@plt+0x162c4>  // b.plast
  419b0c:	ldur	w8, [x29, #-12]
  419b10:	tbz	w8, #0, 419b40 <feof@plt+0x162a0>
  419b14:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419b18:	add	x1, x1, #0x6f2
  419b1c:	b	419b30 <feof@plt+0x16290>
  419b20:	ldur	w8, [x29, #-12]
  419b24:	tbz	w8, #0, 419b40 <feof@plt+0x162a0>
  419b28:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419b2c:	add	x1, x1, #0x6c1
  419b30:	ldr	w0, [sp, #4]
  419b34:	ldr	x2, [sp, #8]
  419b38:	mov	x3, x22
  419b3c:	bl	42bb84 <feof@plt+0x282e4>
  419b40:	mov	w0, wzr
  419b44:	ldp	x20, x19, [sp, #112]
  419b48:	ldp	x22, x21, [sp, #96]
  419b4c:	ldp	x24, x23, [sp, #80]
  419b50:	ldp	x26, x25, [sp, #64]
  419b54:	ldp	x28, x27, [sp, #48]
  419b58:	ldp	x29, x30, [sp, #32]
  419b5c:	add	sp, sp, #0x80
  419b60:	ret
  419b64:	mov	x9, xzr
  419b68:	add	x10, x10, #0x8
  419b6c:	ldr	w11, [x10, x9, lsl #2]
  419b70:	cmp	w11, #0x10, lsl #12
  419b74:	b.hi	419b8c <feof@plt+0x162ec>  // b.pmore
  419b78:	add	x9, x9, #0x1
  419b7c:	cmp	x9, x8
  419b80:	b.cc	419b6c <feof@plt+0x162cc>  // b.lo, b.ul, b.last
  419b84:	mov	w0, #0x1                   	// #1
  419b88:	b	419b44 <feof@plt+0x162a4>
  419b8c:	ldur	w8, [x29, #-12]
  419b90:	tbz	w8, #0, 419b40 <feof@plt+0x162a0>
  419b94:	ldr	w0, [sp, #4]
  419b98:	ldr	x2, [sp, #8]
  419b9c:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419ba0:	add	x1, x1, #0x72d
  419ba4:	mov	w3, #0x10000               	// #65536
  419ba8:	bl	42bb84 <feof@plt+0x282e4>
  419bac:	b	419b40 <feof@plt+0x162a0>
  419bb0:	sub	sp, sp, #0xd0
  419bb4:	stp	x29, x30, [sp, #112]
  419bb8:	stp	x28, x27, [sp, #128]
  419bbc:	stp	x26, x25, [sp, #144]
  419bc0:	stp	x24, x23, [sp, #160]
  419bc4:	stp	x22, x21, [sp, #176]
  419bc8:	stp	x20, x19, [sp, #192]
  419bcc:	add	x29, sp, #0x70
  419bd0:	ldr	x8, [x2, #64]
  419bd4:	cmp	x8, #0x3
  419bd8:	b.cs	41b0c4 <feof@plt+0x17824>  // b.hs, b.nlast
  419bdc:	mov	x26, x0
  419be0:	ldr	w0, [x2]
  419be4:	ldr	x27, [x2, #16]
  419be8:	ldr	x28, [x2, #72]
  419bec:	mov	x23, x7
  419bf0:	mov	x19, x6
  419bf4:	mov	w21, w5
  419bf8:	mov	w12, w3
  419bfc:	mov	x24, x2
  419c00:	mov	x25, x1
  419c04:	cmp	w0, #0x190
  419c08:	b.le	419c3c <feof@plt+0x1639c>
  419c0c:	sub	w8, w0, #0x191
  419c10:	cmp	w8, #0x358
  419c14:	b.hi	419cf8 <feof@plt+0x16458>  // b.pmore
  419c18:	adrp	x9, 48c000 <_obstack_memory_used@@Base+0x102fc>
  419c1c:	add	x9, x9, #0x5c0
  419c20:	adr	x10, 419c30 <feof@plt+0x16390>
  419c24:	ldrh	w11, [x9, x8, lsl #1]
  419c28:	add	x10, x10, x11, lsl #2
  419c2c:	br	x10
  419c30:	cbz	x28, 41b03c <feof@plt+0x1779c>
  419c34:	mov	w0, wzr
  419c38:	b	41b060 <feof@plt+0x177c0>
  419c3c:	cmp	w0, #0x82
  419c40:	b.le	419c5c <feof@plt+0x163bc>
  419c44:	cmp	w0, #0xef
  419c48:	b.gt	419cac <feof@plt+0x1640c>
  419c4c:	sub	w8, w0, #0x83
  419c50:	cmp	w8, #0x4
  419c54:	b.cc	41b03c <feof@plt+0x1779c>  // b.lo, b.ul, b.last
  419c58:	b	419d88 <feof@plt+0x164e8>
  419c5c:	ldr	x8, [x29, #96]
  419c60:	cmp	w0, #0x3d
  419c64:	b.gt	419cd4 <feof@plt+0x16434>
  419c68:	cmp	w0, #0x9
  419c6c:	str	x8, [sp, #32]
  419c70:	b.eq	41b03c <feof@plt+0x1779c>  // b.none
  419c74:	cmp	w0, #0x1c
  419c78:	str	x23, [sp, #56]
  419c7c:	b.eq	41aaa4 <feof@plt+0x17204>  // b.none
  419c80:	cmp	w0, #0x1d
  419c84:	b.ne	419d88 <feof@plt+0x164e8>  // b.any
  419c88:	cmp	w12, #0x80, lsl #12
  419c8c:	stur	xzr, [x29, #-20]
  419c90:	b.eq	41b03c <feof@plt+0x1779c>  // b.none
  419c94:	adrp	x8, 491000 <_obstack_memory_used@@Base+0x152fc>
  419c98:	ldr	w20, [x8, #3244]
  419c9c:	str	x19, [sp, #40]
  419ca0:	stp	w4, w12, [x29, #-28]
  419ca4:	str	x20, [sp, #24]
  419ca8:	b	419df8 <feof@plt+0x16558>
  419cac:	cmp	w0, #0xf0
  419cb0:	b.eq	41a9e4 <feof@plt+0x17144>  // b.none
  419cb4:	cmp	w0, #0xf2
  419cb8:	b.eq	41aa4c <feof@plt+0x171ac>  // b.none
  419cbc:	cmp	w0, #0xf6
  419cc0:	b.ne	419d88 <feof@plt+0x164e8>  // b.any
  419cc4:	cmp	x28, #0x0
  419cc8:	cset	w8, ne  // ne = any
  419ccc:	strb	w8, [x23, #128]
  419cd0:	b	41b03c <feof@plt+0x1779c>
  419cd4:	cmp	w0, #0x3e
  419cd8:	b.eq	41a9f4 <feof@plt+0x17154>  // b.none
  419cdc:	cmp	w0, #0x5f
  419ce0:	b.eq	41abcc <feof@plt+0x1732c>  // b.none
  419ce4:	cmp	w0, #0x69
  419ce8:	b.ne	419d88 <feof@plt+0x164e8>  // b.any
  419cec:	cmp	w12, #0x80, lsl #12
  419cf0:	b.ne	41b034 <feof@plt+0x17794>  // b.any
  419cf4:	b	41b03c <feof@plt+0x1779c>
  419cf8:	cmp	w0, #0x529
  419cfc:	b.eq	41ac08 <feof@plt+0x17368>  // b.none
  419d00:	cmp	w0, #0x591
  419d04:	b.ne	419d88 <feof@plt+0x164e8>  // b.any
  419d08:	mov	w8, #0x1                   	// #1
  419d0c:	strb	w8, [x23, #129]
  419d10:	b	41b03c <feof@plt+0x1779c>
  419d14:	ldr	w8, [x26, #100]
  419d18:	mov	w9, #0x1                   	// #1
  419d1c:	strb	w9, [x26, #56]
  419d20:	cbnz	w8, 419d2c <feof@plt+0x1648c>
  419d24:	mov	w8, #0x2                   	// #2
  419d28:	str	w8, [x26, #100]
  419d2c:	ldrb	w8, [x27]
  419d30:	cbz	w8, 41a400 <feof@plt+0x16b60>
  419d34:	mov	x0, x27
  419d38:	mov	x1, xzr
  419d3c:	mov	w2, wzr
  419d40:	mov	w22, w12
  419d44:	mov	w20, w4
  419d48:	bl	41c84c <feof@plt+0x18fac>
  419d4c:	cmn	w0, #0x1
  419d50:	b.eq	41ad20 <feof@plt+0x17480>  // b.none
  419d54:	cmp	w0, #0x4
  419d58:	b.lt	41ad38 <feof@plt+0x17498>  // b.tstop
  419d5c:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  419d60:	add	x1, x1, #0x480
  419d64:	b	41ad28 <feof@plt+0x17488>
  419d68:	cmp	w0, #0x4e7
  419d6c:	cset	w1, eq  // eq = none
  419d70:	mov	w0, #0x3                   	// #3
  419d74:	b	41a0a0 <feof@plt+0x16800>
  419d78:	cmp	w0, #0x4df
  419d7c:	cset	w1, eq  // eq = none
  419d80:	mov	w0, #0x1                   	// #1
  419d84:	b	41a0a0 <feof@plt+0x16800>
  419d88:	mov	x1, x26
  419d8c:	mov	w20, w4
  419d90:	mov	w22, w21
  419d94:	mov	w21, w12
  419d98:	bl	41f148 <feof@plt+0x1b8a8>
  419d9c:	mov	w12, w21
  419da0:	mov	w21, w22
  419da4:	mov	w4, w20
  419da8:	cbnz	x0, 41b03c <feof@plt+0x1779c>
  419dac:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  419db0:	adrp	x2, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419db4:	add	x0, x0, #0xef2
  419db8:	add	x2, x2, #0x754
  419dbc:	mov	w1, #0xaed                 	// #2797
  419dc0:	bl	429434 <feof@plt+0x25b94>
  419dc4:	adrp	x2, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419dc8:	mov	w0, w21
  419dcc:	mov	w1, wzr
  419dd0:	add	x2, x2, #0x7a9
  419dd4:	ldr	x3, [sp, #48]
  419dd8:	mov	x4, x27
  419ddc:	bl	42aff4 <feof@plt+0x27754>
  419de0:	ldr	x19, [sp, #40]
  419de4:	ldp	w4, w12, [x29, #-28]
  419de8:	ldr	x23, [sp, #56]
  419dec:	ldur	x8, [x29, #-48]
  419df0:	cbz	x8, 41affc <feof@plt+0x1775c>
  419df4:	add	x27, x8, #0x1
  419df8:	ldrb	w8, [x27]
  419dfc:	cmp	w8, #0x5e
  419e00:	b.eq	419e24 <feof@plt+0x16584>  // b.none
  419e04:	cbz	w8, 41affc <feof@plt+0x1775c>
  419e08:	mov	x28, x19
  419e0c:	mov	x19, x25
  419e10:	mov	w25, w21
  419e14:	mov	w21, w12
  419e18:	mov	w22, w4
  419e1c:	sub	x8, x29, #0x10
  419e20:	b	419e44 <feof@plt+0x165a4>
  419e24:	ldrb	w8, [x27, #1]!
  419e28:	cbz	w8, 41afcc <feof@plt+0x1772c>
  419e2c:	mov	x28, x19
  419e30:	mov	x19, x25
  419e34:	mov	w25, w21
  419e38:	mov	w21, w12
  419e3c:	mov	w22, w4
  419e40:	sub	x8, x29, #0x14
  419e44:	mov	w1, #0x2c                  	// #44
  419e48:	mov	x0, x27
  419e4c:	stur	x8, [x29, #-40]
  419e50:	bl	403210 <strchr@plt>
  419e54:	mov	x8, x0
  419e58:	cbz	x0, 419e64 <feof@plt+0x165c4>
  419e5c:	sub	x0, x8, x27
  419e60:	b	419e88 <feof@plt+0x165e8>
  419e64:	mov	x0, x27
  419e68:	mov	x20, x26
  419e6c:	mov	x26, x23
  419e70:	mov	x23, x8
  419e74:	bl	4030b0 <strlen@plt>
  419e78:	mov	x8, x23
  419e7c:	mov	x23, x26
  419e80:	mov	x26, x20
  419e84:	ldr	x20, [sp, #24]
  419e88:	mov	w12, w21
  419e8c:	mov	w21, w25
  419e90:	mov	x25, x19
  419e94:	mov	x19, x28
  419e98:	adrp	x28, 491000 <_obstack_memory_used@@Base+0x152fc>
  419e9c:	mov	w4, w22
  419ea0:	add	x28, x28, #0xc40
  419ea4:	cbz	w0, 419df4 <feof@plt+0x16554>
  419ea8:	and	x22, x0, #0xffffffff
  419eac:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419eb0:	str	x0, [sp, #48]
  419eb4:	mov	x0, x27
  419eb8:	add	x1, x1, #0x769
  419ebc:	mov	x2, x22
  419ec0:	stur	x8, [x29, #-48]
  419ec4:	bl	403810 <strncasecmp@plt>
  419ec8:	cbz	w0, 419f80 <feof@plt+0x166e0>
  419ecc:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  419ed0:	mov	x0, x27
  419ed4:	add	x1, x1, #0xa2e
  419ed8:	mov	x2, x22
  419edc:	bl	403810 <strncasecmp@plt>
  419ee0:	cbz	w0, 419f88 <feof@plt+0x166e8>
  419ee4:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  419ee8:	mov	x0, x27
  419eec:	add	x1, x1, #0x56f
  419ef0:	mov	x2, x22
  419ef4:	bl	403810 <strncasecmp@plt>
  419ef8:	cbz	w0, 419f90 <feof@plt+0x166f0>
  419efc:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419f00:	mov	x0, x27
  419f04:	add	x1, x1, #0x774
  419f08:	mov	x2, x22
  419f0c:	bl	403810 <strncasecmp@plt>
  419f10:	cbz	w0, 419f98 <feof@plt+0x166f8>
  419f14:	adrp	x1, 488000 <_obstack_memory_used@@Base+0xc2fc>
  419f18:	mov	x0, x27
  419f1c:	add	x1, x1, #0x2db
  419f20:	mov	x2, x22
  419f24:	bl	403810 <strncasecmp@plt>
  419f28:	cbz	w0, 419fa0 <feof@plt+0x16700>
  419f2c:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  419f30:	mov	x0, x27
  419f34:	add	x1, x1, #0x781
  419f38:	mov	x2, x22
  419f3c:	bl	403810 <strncasecmp@plt>
  419f40:	cbz	w0, 419fa8 <feof@plt+0x16708>
  419f44:	adrp	x1, 4c4000 <_obstack_memory_used@@Base+0x482fc>
  419f48:	mov	x0, x27
  419f4c:	add	x1, x1, #0x20d
  419f50:	mov	x2, x22
  419f54:	bl	403810 <strncasecmp@plt>
  419f58:	cbz	w0, 419fb0 <feof@plt+0x16710>
  419f5c:	adrp	x1, 4bc000 <_obstack_memory_used@@Base+0x402fc>
  419f60:	mov	x0, x27
  419f64:	add	x1, x1, #0x1b9
  419f68:	mov	x2, x22
  419f6c:	bl	403810 <strncasecmp@plt>
  419f70:	cbz	w0, 419fb8 <feof@plt+0x16718>
  419f74:	ldp	w4, w12, [x29, #-28]
  419f78:	mov	w19, wzr
  419f7c:	b	419fd0 <feof@plt+0x16730>
  419f80:	mov	x8, xzr
  419f84:	b	419fbc <feof@plt+0x1671c>
  419f88:	mov	w8, #0x1                   	// #1
  419f8c:	b	419fbc <feof@plt+0x1671c>
  419f90:	mov	w8, #0x2                   	// #2
  419f94:	b	419fbc <feof@plt+0x1671c>
  419f98:	mov	w8, #0x3                   	// #3
  419f9c:	b	419fbc <feof@plt+0x1671c>
  419fa0:	mov	w8, #0x4                   	// #4
  419fa4:	b	419fbc <feof@plt+0x1671c>
  419fa8:	mov	w8, #0x5                   	// #5
  419fac:	b	419fbc <feof@plt+0x1671c>
  419fb0:	mov	w8, #0x6                   	// #6
  419fb4:	b	419fbc <feof@plt+0x1671c>
  419fb8:	mov	w8, #0x7                   	// #7
  419fbc:	adrp	x9, 48d000 <_obstack_memory_used@@Base+0x112fc>
  419fc0:	add	x9, x9, #0xd20
  419fc4:	add	x8, x9, x8, lsl #4
  419fc8:	ldp	w4, w12, [x29, #-28]
  419fcc:	ldr	w19, [x8, #8]
  419fd0:	cbz	w20, 41a000 <feof@plt+0x16760>
  419fd4:	mov	x23, xzr
  419fd8:	ldr	x1, [x28, x23, lsl #3]
  419fdc:	mov	x0, x27
  419fe0:	mov	x2, x22
  419fe4:	bl	403810 <strncasecmp@plt>
  419fe8:	cbz	w0, 41a008 <feof@plt+0x16768>
  419fec:	add	x23, x23, #0x1
  419ff0:	cmp	x20, x23
  419ff4:	b.ne	419fd8 <feof@plt+0x16738>  // b.any
  419ff8:	mov	w23, wzr
  419ffc:	b	41a010 <feof@plt+0x16770>
  41a000:	mov	w23, wzr
  41a004:	b	41a014 <feof@plt+0x16774>
  41a008:	mov	w8, #0x1                   	// #1
  41a00c:	lsl	w23, w8, w23
  41a010:	ldp	w4, w12, [x29, #-28]
  41a014:	cbz	w19, 41a048 <feof@plt+0x167a8>
  41a018:	cbz	w23, 41a05c <feof@plt+0x167bc>
  41a01c:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41a020:	mov	x0, x27
  41a024:	add	x1, x1, #0x4c7
  41a028:	mov	x2, x22
  41a02c:	bl	403810 <strncasecmp@plt>
  41a030:	cbnz	w0, 419dc4 <feof@plt+0x16524>
  41a034:	ldur	x9, [x29, #-40]
  41a038:	ldr	w8, [x9]
  41a03c:	orr	w8, w8, w23
  41a040:	str	w8, [x9]
  41a044:	b	419de0 <feof@plt+0x16540>
  41a048:	cbz	w23, 41a070 <feof@plt+0x167d0>
  41a04c:	ldur	x9, [x29, #-40]
  41a050:	ldr	w8, [x9]
  41a054:	orr	w8, w8, w23
  41a058:	b	41a068 <feof@plt+0x167c8>
  41a05c:	ldur	x9, [x29, #-40]
  41a060:	ldr	w8, [x9]
  41a064:	orr	w8, w8, w19
  41a068:	str	w8, [x9]
  41a06c:	b	41a090 <feof@plt+0x167f0>
  41a070:	adrp	x2, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41a074:	mov	w0, w21
  41a078:	mov	w1, wzr
  41a07c:	add	x2, x2, #0x7e5
  41a080:	ldr	x3, [sp, #48]
  41a084:	mov	x4, x27
  41a088:	bl	42aff4 <feof@plt+0x27754>
  41a08c:	ldp	w4, w12, [x29, #-28]
  41a090:	ldr	x19, [sp, #40]
  41a094:	b	419de8 <feof@plt+0x16548>
  41a098:	mov	w0, #0x4                   	// #4
  41a09c:	mov	w1, wzr
  41a0a0:	mov	w22, w21
  41a0a4:	mov	x2, x27
  41a0a8:	mov	x3, x26
  41a0ac:	mov	w20, w4
  41a0b0:	mov	x4, x25
  41a0b4:	mov	w5, w22
  41a0b8:	mov	w21, w12
  41a0bc:	bl	41c28c <feof@plt+0x189ec>
  41a0c0:	b	41aca8 <feof@plt+0x17408>
  41a0c4:	cbnz	x28, 41a348 <feof@plt+0x16aa8>
  41a0c8:	b	41b03c <feof@plt+0x1779c>
  41a0cc:	str	w28, [x26, #2964]
  41a0d0:	b	41b03c <feof@plt+0x1779c>
  41a0d4:	ldr	w8, [x26, #220]
  41a0d8:	cbz	x28, 41ad40 <feof@plt+0x174a0>
  41a0dc:	mov	w9, #0xf6e0                	// #63200
  41a0e0:	movk	w9, #0x3ff, lsl #16
  41a0e4:	orr	w8, w8, w9
  41a0e8:	str	w8, [x26, #220]
  41a0ec:	b	41b03c <feof@plt+0x1779c>
  41a0f0:	cbz	x28, 41b03c <feof@plt+0x1779c>
  41a0f4:	str	wzr, [x26, #3496]
  41a0f8:	b	41b03c <feof@plt+0x1779c>
  41a0fc:	mov	w8, #0x1                   	// #1
  41a100:	strb	w8, [x26, #50]
  41a104:	b	41a124 <feof@plt+0x16884>
  41a108:	adrp	x0, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41a10c:	add	x0, x0, #0x814
  41a110:	bl	42bdac <feof@plt+0x2850c>
  41a114:	add	x27, x22, #0x1
  41a118:	mov	w4, w20
  41a11c:	mov	w12, w28
  41a120:	cbz	x22, 41b03c <feof@plt+0x1779c>
  41a124:	ldrb	w8, [x27]
  41a128:	cbz	w8, 41b03c <feof@plt+0x1779c>
  41a12c:	mov	w1, #0x2c                  	// #44
  41a130:	mov	x0, x27
  41a134:	mov	w28, w12
  41a138:	mov	w20, w4
  41a13c:	bl	403210 <strchr@plt>
  41a140:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  41a144:	mov	x22, x0
  41a148:	mov	w2, #0x7                   	// #7
  41a14c:	mov	x0, x27
  41a150:	add	x1, x1, #0x9f7
  41a154:	bl	403450 <strncmp@plt>
  41a158:	cbnz	w0, 41a16c <feof@plt+0x168cc>
  41a15c:	ldrb	w8, [x27, #7]
  41a160:	cmp	w8, #0x2c
  41a164:	b.eq	41ae6c <feof@plt+0x175cc>  // b.none
  41a168:	cbz	w8, 41ae6c <feof@plt+0x175cc>
  41a16c:	adrp	x1, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  41a170:	mov	w2, #0x3                   	// #3
  41a174:	mov	x0, x27
  41a178:	add	x1, x1, #0xa78
  41a17c:	bl	403450 <strncmp@plt>
  41a180:	cbnz	w0, 41a114 <feof@plt+0x16874>
  41a184:	ldrb	w8, [x27, #3]
  41a188:	cmp	w8, #0x2c
  41a18c:	b.eq	41a108 <feof@plt+0x16868>  // b.none
  41a190:	cbz	w8, 41a108 <feof@plt+0x16868>
  41a194:	b	41a114 <feof@plt+0x16874>
  41a198:	cmp	x28, #0x1
  41a19c:	b.lt	41ac88 <feof@plt+0x173e8>  // b.tstop
  41a1a0:	cmp	x28, #0x10
  41a1a4:	b.gt	41ac88 <feof@plt+0x173e8>
  41a1a8:	fmov	d0, x28
  41a1ac:	cnt	v0.8b, v0.8b
  41a1b0:	uaddlv	h0, v0.8b
  41a1b4:	fmov	w8, s0
  41a1b8:	cmp	x8, #0x2
  41a1bc:	b.cs	41ac88 <feof@plt+0x173e8>  // b.hs, b.nlast
  41a1c0:	str	w28, [x26, #228]
  41a1c4:	b	41b03c <feof@plt+0x1779c>
  41a1c8:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41a1cc:	add	x1, x1, #0x842
  41a1d0:	mov	w0, w21
  41a1d4:	mov	w20, w4
  41a1d8:	mov	w22, w21
  41a1dc:	mov	w21, w12
  41a1e0:	bl	42bb84 <feof@plt+0x282e4>
  41a1e4:	b	41aca8 <feof@plt+0x17408>
  41a1e8:	cmp	x28, #0x0
  41a1ec:	cset	w8, ne  // ne = any
  41a1f0:	strb	w8, [x23, #222]
  41a1f4:	b	41b03c <feof@plt+0x1779c>
  41a1f8:	ldrb	w8, [x26, #3850]
  41a1fc:	cbnz	w8, 41a224 <feof@plt+0x16984>
  41a200:	ldrb	w8, [x26, #3849]
  41a204:	str	w28, [x26, #3388]
  41a208:	cbz	w8, 41aec0 <feof@plt+0x17620>
  41a20c:	ldrb	w8, [x26, #3848]
  41a210:	cbz	w8, 41aed4 <feof@plt+0x17634>
  41a214:	ldrb	w8, [x26, #3840]
  41a218:	cbz	w8, 41aee8 <feof@plt+0x17648>
  41a21c:	ldrb	w8, [x26, #3845]
  41a220:	cbz	w8, 41aef4 <feof@plt+0x17654>
  41a224:	ldrb	w8, [x26, #3843]
  41a228:	cbz	w8, 41af00 <feof@plt+0x17660>
  41a22c:	ldrb	w8, [x26, #3844]
  41a230:	cbz	w8, 41af0c <feof@plt+0x1766c>
  41a234:	cbnz	w28, 41af1c <feof@plt+0x1767c>
  41a238:	b	41b03c <feof@plt+0x1779c>
  41a23c:	mov	w8, w21
  41a240:	adrp	x1, 4c3000 <_obstack_memory_used@@Base+0x472fc>
  41a244:	mov	w20, w4
  41a248:	add	x1, x1, #0x3e8
  41a24c:	b	41a3ac <feof@plt+0x16b0c>
  41a250:	str	w28, [x23, #224]
  41a254:	b	41b03c <feof@plt+0x1779c>
  41a258:	cbz	x27, 41acb8 <feof@plt+0x17418>
  41a25c:	ldrb	w8, [x27]
  41a260:	cbz	w8, 41acb8 <feof@plt+0x17418>
  41a264:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41a268:	add	x1, x1, #0x917
  41a26c:	mov	w0, w21
  41a270:	mov	x2, x27
  41a274:	mov	x3, x27
  41a278:	mov	w20, w4
  41a27c:	mov	x4, x27
  41a280:	mov	w22, w21
  41a284:	mov	w21, w12
  41a288:	bl	42bb84 <feof@plt+0x282e4>
  41a28c:	b	41aca8 <feof@plt+0x17408>
  41a290:	mov	w8, w21
  41a294:	adrp	x1, 4c5000 <_obstack_memory_used@@Base+0x492fc>
  41a298:	mov	w20, w4
  41a29c:	add	x1, x1, #0x112
  41a2a0:	b	41a3ac <feof@plt+0x16b0c>
  41a2a4:	str	w28, [x26, #2296]
  41a2a8:	str	w28, [x26, #2300]
  41a2ac:	b	41b03c <feof@plt+0x1779c>
  41a2b0:	mov	x0, x23
  41a2b4:	mov	w1, w28
  41a2b8:	mov	w20, w4
  41a2bc:	mov	w22, w21
  41a2c0:	mov	w21, w12
  41a2c4:	bl	42fc58 <feof@plt+0x2c3b8>
  41a2c8:	b	41aca8 <feof@plt+0x17408>
  41a2cc:	cmp	w28, #0x0
  41a2d0:	csinv	w8, w28, wzr, ne  // ne = any
  41a2d4:	str	w8, [x26, #2960]
  41a2d8:	b	41b03c <feof@plt+0x1779c>
  41a2dc:	mov	w8, w21
  41a2e0:	adrp	x1, 4bb000 <_obstack_memory_used@@Base+0x3f2fc>
  41a2e4:	mov	w20, w4
  41a2e8:	add	x1, x1, #0x1ba
  41a2ec:	b	41a3ac <feof@plt+0x16b0c>
  41a2f0:	cmp	x28, #0x0
  41a2f4:	cset	w8, ne  // ne = any
  41a2f8:	lsl	w8, w8, #1
  41a2fc:	str	w8, [x26, #1160]
  41a300:	b	41b03c <feof@plt+0x1779c>
  41a304:	ldr	x8, [x23]
  41a308:	str	w28, [x8, #36]
  41a30c:	b	41b03c <feof@plt+0x1779c>
  41a310:	ldrb	w8, [x26, #3849]
  41a314:	cbz	w8, 41ad4c <feof@plt+0x174ac>
  41a318:	ldrb	w8, [x26, #3848]
  41a31c:	cbz	w8, 41ad60 <feof@plt+0x174c0>
  41a320:	ldrb	w8, [x26, #3840]
  41a324:	cbz	w8, 41ad74 <feof@plt+0x174d4>
  41a328:	ldrb	w8, [x26, #3845]
  41a32c:	cbnz	w8, 41b03c <feof@plt+0x1779c>
  41a330:	b	41ad80 <feof@plt+0x174e0>
  41a334:	cmp	x28, #0x0
  41a338:	cset	w8, eq  // eq = none
  41a33c:	str	w8, [x26, #3496]
  41a340:	str	w8, [x26, #3500]
  41a344:	cbnz	x28, 41b03c <feof@plt+0x1779c>
  41a348:	str	wzr, [x26, #3224]
  41a34c:	b	41b03c <feof@plt+0x1779c>
  41a350:	cmp	x28, #0x0
  41a354:	cset	w8, ne  // ne = any
  41a358:	strb	w8, [x23, #229]
  41a35c:	b	41b03c <feof@plt+0x1779c>
  41a360:	cmn	x28, #0x1
  41a364:	b	41a488 <feof@plt+0x16be8>
  41a368:	cmp	x28, #0x0
  41a36c:	cset	w8, ne  // ne = any
  41a370:	strb	w8, [x23, #119]
  41a374:	b	41b03c <feof@plt+0x1779c>
  41a378:	cmp	w28, #0x2
  41a37c:	b.cs	41b104 <feof@plt+0x17864>  // b.hs, b.nlast
  41a380:	cmp	w28, #0x0
  41a384:	mov	w8, #0x3                   	// #3
  41a388:	csel	w8, wzr, w8, eq  // eq = none
  41a38c:	str	w8, [x26, #1152]
  41a390:	b	41b03c <feof@plt+0x1779c>
  41a394:	str	w28, [x23, #132]
  41a398:	b	41b03c <feof@plt+0x1779c>
  41a39c:	mov	w8, w21
  41a3a0:	adrp	x1, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  41a3a4:	mov	w20, w4
  41a3a8:	add	x1, x1, #0x1f1
  41a3ac:	sub	x2, x29, #0x10
  41a3b0:	mov	w3, #0x1                   	// #1
  41a3b4:	mov	x0, x27
  41a3b8:	mov	w4, w8
  41a3bc:	mov	w21, w12
  41a3c0:	stur	xzr, [x29, #-16]
  41a3c4:	mov	w22, w8
  41a3c8:	bl	4198e8 <feof@plt+0x16048>
  41a3cc:	ldur	x0, [x29, #-16]
  41a3d0:	cbz	x0, 41ad10 <feof@plt+0x17470>
  41a3d4:	ldr	w8, [x0]
  41a3d8:	tbnz	w8, #31, 41ac00 <feof@plt+0x17360>
  41a3dc:	bl	4031d0 <free@plt>
  41a3e0:	stur	xzr, [x29, #-16]
  41a3e4:	b	41ad10 <feof@plt+0x17470>
  41a3e8:	ldr	w8, [x26, #100]
  41a3ec:	mov	w9, #0x1                   	// #1
  41a3f0:	strb	w9, [x26, #56]
  41a3f4:	cbnz	w8, 41a400 <feof@plt+0x16b60>
  41a3f8:	mov	w8, #0x2                   	// #2
  41a3fc:	str	w8, [x26, #100]
  41a400:	ldr	w8, [x26, #96]
  41a404:	cmp	w8, #0x1
  41a408:	b.gt	41b03c <feof@plt+0x1779c>
  41a40c:	mov	w8, #0x2                   	// #2
  41a410:	str	w8, [x26, #96]
  41a414:	b	41b03c <feof@plt+0x1779c>
  41a418:	ldr	x2, [x26, #144]
  41a41c:	ldr	x3, [x25, #144]
  41a420:	cmp	x28, #0x0
  41a424:	cinc	x8, x28, lt  // lt = tstop
  41a428:	lsr	x22, x8, #1
  41a42c:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  41a430:	add	x0, x0, #0xa74
  41a434:	mov	w1, w22
  41a438:	mov	w20, w4
  41a43c:	mov	x27, x19
  41a440:	mov	x19, x25
  41a444:	mov	w25, w21
  41a448:	mov	w21, w12
  41a44c:	bl	417d94 <feof@plt+0x144f4>
  41a450:	ldr	x2, [x26, #144]
  41a454:	ldr	x3, [x19, #144]
  41a458:	adrp	x0, 484000 <_obstack_memory_used@@Base+0x82fc>
  41a45c:	add	x0, x0, #0xadb
  41a460:	mov	w1, w22
  41a464:	bl	417d94 <feof@plt+0x144f4>
  41a468:	mov	w12, w21
  41a46c:	mov	w21, w25
  41a470:	mov	x25, x19
  41a474:	mov	x19, x27
  41a478:	mov	w4, w20
  41a47c:	b	41b03c <feof@plt+0x1779c>
  41a480:	str	w28, [x26, #3128]
  41a484:	cmp	x28, #0x0
  41a488:	cset	w8, ne  // ne = any
  41a48c:	strb	w8, [x26, #53]
  41a490:	b	41b03c <feof@plt+0x1779c>
  41a494:	mov	x0, x23
  41a498:	mov	w1, w28
  41a49c:	mov	w20, w4
  41a4a0:	mov	w22, w21
  41a4a4:	mov	w21, w12
  41a4a8:	bl	429314 <feof@plt+0x25a74>
  41a4ac:	b	41aca8 <feof@plt+0x17408>
  41a4b0:	add	x0, x26, #0xf0
  41a4b4:	b	41a6b0 <feof@plt+0x16e10>
  41a4b8:	cmp	x28, #0x0
  41a4bc:	cset	w8, ne  // ne = any
  41a4c0:	strb	w8, [x23, #108]
  41a4c4:	b	41b03c <feof@plt+0x1779c>
  41a4c8:	ldr	x0, [x23]
  41a4cc:	mov	w1, w28
  41a4d0:	mov	w20, w4
  41a4d4:	mov	w22, w21
  41a4d8:	mov	w21, w12
  41a4dc:	bl	435920 <feof@plt+0x32080>
  41a4e0:	mov	x0, x23
  41a4e4:	mov	w1, w28
  41a4e8:	bl	429014 <feof@plt+0x25774>
  41a4ec:	b	41aca8 <feof@plt+0x17408>
  41a4f0:	mov	x0, x27
  41a4f4:	mov	w20, w4
  41a4f8:	mov	w22, w21
  41a4fc:	mov	w21, w12
  41a500:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  41a504:	mov	w12, w21
  41a508:	mov	w21, w22
  41a50c:	mov	w4, w20
  41a510:	mov	w28, #0x1                   	// #1
  41a514:	str	x0, [x26, #2768]
  41a518:	ldr	w8, [x25, #2760]
  41a51c:	cbz	w8, 41ac50 <feof@plt+0x173b0>
  41a520:	ldr	w8, [x25, #2808]
  41a524:	cbz	w8, 41ac5c <feof@plt+0x173bc>
  41a528:	ldr	w8, [x25, #2252]
  41a52c:	cbz	w8, 41ac68 <feof@plt+0x173c8>
  41a530:	ldr	w8, [x25, #2280]
  41a534:	cbz	w8, 41ac74 <feof@plt+0x173d4>
  41a538:	ldr	w8, [x25, #2320]
  41a53c:	cbnz	w8, 41b03c <feof@plt+0x1779c>
  41a540:	b	41ac80 <feof@plt+0x173e0>
  41a544:	mov	x0, x27
  41a548:	mov	w28, w12
  41a54c:	mov	w20, w4
  41a550:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  41a554:	mov	x22, x0
  41a558:	bl	4030b0 <strlen@plt>
  41a55c:	cmp	w0, #0x3
  41a560:	b.lt	41ae20 <feof@plt+0x17580>  // b.tstop
  41a564:	and	x9, x0, #0xffffffff
  41a568:	add	x8, x9, x22
  41a56c:	sub	x8, x8, #0x2
  41a570:	mov	w10, #0x2                   	// #2
  41a574:	ldrb	w11, [x8]
  41a578:	cmp	w11, #0x2e
  41a57c:	b.eq	41ae1c <feof@plt+0x1757c>  // b.none
  41a580:	cmp	x10, #0x3
  41a584:	b.hi	41ae20 <feof@plt+0x17580>  // b.pmore
  41a588:	add	x10, x10, #0x1
  41a58c:	cmp	x10, x9
  41a590:	sub	x8, x8, #0x1
  41a594:	b.cc	41a574 <feof@plt+0x16cd4>  // b.lo, b.ul, b.last
  41a598:	b	41ae20 <feof@plt+0x17580>
  41a59c:	mov	w8, #0x1                   	// #1
  41a5a0:	str	w8, [x26, #164]
  41a5a4:	b	41b03c <feof@plt+0x1779c>
  41a5a8:	cmp	x28, #0x0
  41a5ac:	cset	w8, ne  // ne = any
  41a5b0:	strb	w8, [x23, #223]
  41a5b4:	b	41b03c <feof@plt+0x1779c>
  41a5b8:	ldr	w3, [x26, #216]
  41a5bc:	mov	w22, w21
  41a5c0:	mov	w2, #0x3ef                 	// #1007
  41a5c4:	mov	w5, #0x1                   	// #1
  41a5c8:	mov	x0, x27
  41a5cc:	mov	w1, w22
  41a5d0:	mov	w20, w4
  41a5d4:	mov	w4, w28
  41a5d8:	mov	w21, w12
  41a5dc:	bl	419514 <feof@plt+0x15c74>
  41a5e0:	mov	w12, w21
  41a5e4:	mov	w21, w22
  41a5e8:	mov	w4, w20
  41a5ec:	str	w0, [x26, #216]
  41a5f0:	b	41b03c <feof@plt+0x1779c>
  41a5f4:	ldr	w3, [x26, #220]
  41a5f8:	mov	w22, w21
  41a5fc:	mov	w2, #0x3f1                 	// #1009
  41a600:	mov	w5, #0x1                   	// #1
  41a604:	mov	x0, x27
  41a608:	mov	w1, w22
  41a60c:	mov	w20, w4
  41a610:	mov	w4, w28
  41a614:	mov	w21, w12
  41a618:	bl	419514 <feof@plt+0x15c74>
  41a61c:	mov	w12, w21
  41a620:	mov	w21, w22
  41a624:	mov	w4, w20
  41a628:	str	w0, [x26, #220]
  41a62c:	b	41b03c <feof@plt+0x1779c>
  41a630:	cmp	x28, #0x0
  41a634:	cset	w8, ne  // ne = any
  41a638:	strb	w8, [x23, #130]
  41a63c:	b	41b03c <feof@plt+0x1779c>
  41a640:	mov	x0, x27
  41a644:	mov	w20, w4
  41a648:	mov	w22, w21
  41a64c:	mov	w21, w12
  41a650:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  41a654:	mov	w12, w21
  41a658:	mov	w21, w22
  41a65c:	mov	w4, w20
  41a660:	mov	w28, #0x1                   	// #1
  41a664:	str	x0, [x26, #1624]
  41a668:	str	w28, [x26, #1616]
  41a66c:	mov	x0, x26
  41a670:	mov	x1, x25
  41a674:	mov	w2, w28
  41a678:	mov	w22, w21
  41a67c:	mov	w21, w12
  41a680:	mov	w20, w4
  41a684:	bl	41c0c8 <feof@plt+0x18828>
  41a688:	ldr	w8, [x25, #2764]
  41a68c:	cbnz	w8, 41a694 <feof@plt+0x16df4>
  41a690:	str	w28, [x26, #2764]
  41a694:	ldr	x2, [x26, #144]
  41a698:	ldr	x3, [x25, #144]
  41a69c:	mov	w0, #0xf                   	// #15
  41a6a0:	mov	w1, #0xa                   	// #10
  41a6a4:	bl	417f00 <feof@plt+0x14660>
  41a6a8:	b	41ad10 <feof@plt+0x17470>
  41a6ac:	add	x0, x26, #0xe8
  41a6b0:	mov	x1, x27
  41a6b4:	mov	w20, w4
  41a6b8:	mov	w22, w21
  41a6bc:	mov	w21, w12
  41a6c0:	bl	41bcdc <feof@plt+0x1843c>
  41a6c4:	b	41aca8 <feof@plt+0x17408>
  41a6c8:	ldrb	w8, [x27]
  41a6cc:	cbz	w8, 41b03c <feof@plt+0x1779c>
  41a6d0:	add	x20, x27, #0x1
  41a6d4:	mov	w27, #0x1                   	// #1
  41a6d8:	b	41a6e8 <feof@plt+0x16e48>
  41a6dc:	str	w27, [x26, #176]
  41a6e0:	ldrb	w8, [x20], #1
  41a6e4:	cbz	w8, 41b03c <feof@plt+0x1779c>
  41a6e8:	and	w3, w8, #0xff
  41a6ec:	sub	w8, w3, #0x41
  41a6f0:	cmp	w8, #0x37
  41a6f4:	b.hi	41a7a0 <feof@plt+0x16f00>  // b.pmore
  41a6f8:	adrp	x11, 48c000 <_obstack_memory_used@@Base+0x102fc>
  41a6fc:	add	x11, x11, #0xc72
  41a700:	adr	x9, 41a6dc <feof@plt+0x16e3c>
  41a704:	ldrb	w10, [x11, x8]
  41a708:	add	x9, x9, x10, lsl #2
  41a70c:	br	x9
  41a710:	str	w27, [x26, #156]
  41a714:	b	41a6e0 <feof@plt+0x16e40>
  41a718:	mov	w8, #0x1                   	// #1
  41a71c:	str	w8, [x26, #160]
  41a720:	mov	w27, #0x1                   	// #1
  41a724:	str	w8, [x26, #176]
  41a728:	b	41a6e0 <feof@plt+0x16e40>
  41a72c:	str	w27, [x26, #204]
  41a730:	b	41a6e0 <feof@plt+0x16e40>
  41a734:	strb	w27, [x26, #51]
  41a738:	b	41a6e0 <feof@plt+0x16e40>
  41a73c:	mov	w0, #0x6                   	// #6
  41a740:	mov	x1, xzr
  41a744:	mov	x28, x19
  41a748:	mov	x19, x25
  41a74c:	mov	w25, w21
  41a750:	mov	w21, w12
  41a754:	mov	w22, w4
  41a758:	bl	403710 <signal@plt>
  41a75c:	sub	x1, x29, #0x10
  41a760:	mov	w0, #0x4                   	// #4
  41a764:	bl	403800 <getrlimit@plt>
  41a768:	cbnz	w0, 41b0dc <feof@plt+0x1783c>
  41a76c:	ldur	x8, [x29, #-8]
  41a770:	sub	x1, x29, #0x10
  41a774:	mov	w0, #0x4                   	// #4
  41a778:	stur	x8, [x29, #-16]
  41a77c:	bl	403680 <setrlimit@plt>
  41a780:	cbnz	w0, 41b0f0 <feof@plt+0x17850>
  41a784:	strb	w27, [x23, #120]
  41a788:	mov	w4, w22
  41a78c:	mov	w12, w21
  41a790:	mov	w21, w25
  41a794:	mov	x25, x19
  41a798:	mov	x19, x28
  41a79c:	b	41a6e0 <feof@plt+0x16e40>
  41a7a0:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41a7a4:	mov	w0, w21
  41a7a8:	mov	w1, wzr
  41a7ac:	add	x2, x2, #0x4a3
  41a7b0:	mov	w22, w4
  41a7b4:	mov	x28, x19
  41a7b8:	mov	x19, x25
  41a7bc:	mov	w25, w21
  41a7c0:	mov	w21, w12
  41a7c4:	bl	42aff4 <feof@plt+0x27754>
  41a7c8:	mov	w12, w21
  41a7cc:	mov	w21, w25
  41a7d0:	mov	x25, x19
  41a7d4:	mov	x19, x28
  41a7d8:	mov	w4, w22
  41a7dc:	b	41a6e0 <feof@plt+0x16e40>
  41a7e0:	ldr	w3, [x26, #212]
  41a7e4:	mov	w2, #0x3f4                 	// #1012
  41a7e8:	mov	w5, #0x1                   	// #1
  41a7ec:	mov	x0, x27
  41a7f0:	mov	w1, w21
  41a7f4:	mov	w20, w4
  41a7f8:	mov	w4, w28
  41a7fc:	mov	w22, w12
  41a800:	bl	419514 <feof@plt+0x15c74>
  41a804:	mov	w12, w22
  41a808:	mov	w4, w20
  41a80c:	str	w0, [x26, #212]
  41a810:	tbz	w0, #2, 41b03c <feof@plt+0x1779c>
  41a814:	ldr	x2, [x26, #144]
  41a818:	ldr	x3, [x25, #144]
  41a81c:	mov	w0, #0xc2                  	// #194
  41a820:	mov	w1, wzr
  41a824:	bl	417f00 <feof@plt+0x14660>
  41a828:	ldr	x2, [x26, #144]
  41a82c:	ldr	x3, [x25, #144]
  41a830:	mov	w0, #0xbd                  	// #189
  41a834:	mov	w1, wzr
  41a838:	bl	417f00 <feof@plt+0x14660>
  41a83c:	ldr	x2, [x26, #144]
  41a840:	ldr	x3, [x25, #144]
  41a844:	mov	w0, #0xbb                  	// #187
  41a848:	mov	w1, wzr
  41a84c:	bl	417f00 <feof@plt+0x14660>
  41a850:	ldr	x2, [x26, #144]
  41a854:	ldr	x3, [x25, #144]
  41a858:	mov	w0, #0xbc                  	// #188
  41a85c:	mov	w1, wzr
  41a860:	bl	417f00 <feof@plt+0x14660>
  41a864:	ldr	x2, [x26, #144]
  41a868:	ldr	x3, [x25, #144]
  41a86c:	mov	w0, #0xc1                  	// #193
  41a870:	mov	w1, wzr
  41a874:	bl	417f00 <feof@plt+0x14660>
  41a878:	b	41ac44 <feof@plt+0x173a4>
  41a87c:	cmp	x28, #0x0
  41a880:	cset	w8, ne  // ne = any
  41a884:	strb	w8, [x23, #121]
  41a888:	b	41b03c <feof@plt+0x1779c>
  41a88c:	mov	x0, x27
  41a890:	stur	w12, [x29, #-24]
  41a894:	mov	w28, w4
  41a898:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  41a89c:	mov	w1, #0x2c                  	// #44
  41a8a0:	mov	x22, x0
  41a8a4:	bl	403210 <strchr@plt>
  41a8a8:	cbz	x0, 41ad88 <feof@plt+0x174e8>
  41a8ac:	mov	x27, x0
  41a8b0:	mov	x0, x22
  41a8b4:	mov	x1, xzr
  41a8b8:	mov	w2, wzr
  41a8bc:	strb	wzr, [x27], #1
  41a8c0:	bl	41c84c <feof@plt+0x18fac>
  41a8c4:	mov	x20, x19
  41a8c8:	adrp	x19, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41a8cc:	str	x0, [x19, #432]
  41a8d0:	mov	x0, x27
  41a8d4:	mov	x1, xzr
  41a8d8:	mov	w2, wzr
  41a8dc:	bl	41c84c <feof@plt+0x18fac>
  41a8e0:	ldr	x8, [x19, #432]
  41a8e4:	mov	x19, x20
  41a8e8:	b	41ada8 <feof@plt+0x17508>
  41a8ec:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41a8f0:	add	x8, x8, #0x23b
  41a8f4:	cmp	x28, #0x0
  41a8f8:	csel	x8, xzr, x8, eq  // eq = none
  41a8fc:	str	x8, [x26, #2480]
  41a900:	b	41b03c <feof@plt+0x1779c>
  41a904:	adrp	x1, 484000 <_obstack_memory_used@@Base+0x82fc>
  41a908:	add	x1, x1, #0x7b9
  41a90c:	mov	x0, x27
  41a910:	mov	w22, w12
  41a914:	mov	w20, w4
  41a918:	bl	403640 <strcmp@plt>
  41a91c:	cbz	w0, 41ade0 <feof@plt+0x17540>
  41a920:	adrp	x1, 484000 <_obstack_memory_used@@Base+0x82fc>
  41a924:	add	x1, x1, #0x7b0
  41a928:	mov	x0, x27
  41a92c:	bl	403640 <strcmp@plt>
  41a930:	cbz	w0, 41ae64 <feof@plt+0x175c4>
  41a934:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41a938:	add	x1, x1, #0x7dc
  41a93c:	mov	x0, x27
  41a940:	bl	403640 <strcmp@plt>
  41a944:	cbz	w0, 41aeac <feof@plt+0x1760c>
  41a948:	adrp	x2, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41a94c:	add	x2, x2, #0x8f5
  41a950:	mov	w0, w21
  41a954:	mov	w1, wzr
  41a958:	mov	x3, x27
  41a95c:	bl	42aff4 <feof@plt+0x27754>
  41a960:	b	41aeb4 <feof@plt+0x17614>
  41a964:	mov	x0, x27
  41a968:	mov	w20, w4
  41a96c:	mov	w22, w21
  41a970:	mov	w21, w12
  41a974:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  41a978:	mov	w12, w21
  41a97c:	mov	w21, w22
  41a980:	mov	w4, w20
  41a984:	mov	w28, #0x1                   	// #1
  41a988:	str	x0, [x26, #2768]
  41a98c:	str	w28, [x26, #2804]
  41a990:	mov	x0, x26
  41a994:	mov	x1, x25
  41a998:	mov	w2, w28
  41a99c:	mov	w22, w21
  41a9a0:	mov	w21, w12
  41a9a4:	mov	w20, w4
  41a9a8:	bl	41c0c8 <feof@plt+0x18828>
  41a9ac:	ldr	w8, [x25, #2792]
  41a9b0:	cbnz	w8, 41a9b8 <feof@plt+0x17118>
  41a9b4:	str	w28, [x26, #2792]
  41a9b8:	ldr	w8, [x25, #1892]
  41a9bc:	mov	w4, w20
  41a9c0:	mov	w12, w21
  41a9c4:	mov	w21, w22
  41a9c8:	cbnz	w8, 41b03c <feof@plt+0x1779c>
  41a9cc:	ldr	w8, [x26, #3452]
  41a9d0:	cbz	w8, 41b03c <feof@plt+0x1779c>
  41a9d4:	str	wzr, [x26, #1892]
  41a9d8:	b	41b03c <feof@plt+0x1779c>
  41a9dc:	str	w28, [x26, #2904]
  41a9e0:	b	41b03c <feof@plt+0x1779c>
  41a9e4:	cmp	x28, #0x0
  41a9e8:	cset	w8, ne  // ne = any
  41a9ec:	strb	w8, [x23, #64]
  41a9f0:	b	41b03c <feof@plt+0x1779c>
  41a9f4:	mov	x0, x27
  41a9f8:	mov	w28, w12
  41a9fc:	mov	w20, w4
  41aa00:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  41aa04:	mov	w1, #0x3d                  	// #61
  41aa08:	mov	x22, x0
  41aa0c:	bl	403210 <strchr@plt>
  41aa10:	cbz	x0, 41ade8 <feof@plt+0x17548>
  41aa14:	mov	x27, x0
  41aa18:	strb	wzr, [x0]
  41aa1c:	sub	x1, x29, #0x14
  41aa20:	mov	x0, x22
  41aa24:	bl	417b4c <feof@plt+0x142ac>
  41aa28:	tbz	w0, #0, 41adf4 <feof@plt+0x17554>
  41aa2c:	ldur	w0, [x29, #-20]
  41aa30:	add	x27, x27, #0x1
  41aa34:	sub	x2, x29, #0x10
  41aa38:	mov	x1, x27
  41aa3c:	bl	417d0c <feof@plt+0x1446c>
  41aa40:	tbz	w0, #0, 41ae78 <feof@plt+0x175d8>
  41aa44:	ldur	w1, [x29, #-16]
  41aa48:	b	41ae90 <feof@plt+0x175f0>
  41aa4c:	cmp	w12, #0x80, lsl #12
  41aa50:	b.eq	41b03c <feof@plt+0x1779c>  // b.none
  41aa54:	mov	x0, x27
  41aa58:	stur	w4, [x29, #-28]
  41aa5c:	mov	w20, w12
  41aa60:	bl	4030b0 <strlen@plt>
  41aa64:	add	x0, x0, #0x2
  41aa68:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  41aa6c:	mov	w8, #0x57                  	// #87
  41aa70:	mov	x22, x0
  41aa74:	strb	w8, [x0], #1
  41aa78:	mov	x1, x27
  41aa7c:	bl	4032f0 <strcpy@plt>
  41aa80:	mov	x0, x22
  41aa84:	mov	w1, w20
  41aa88:	stur	w20, [x29, #-24]
  41aa8c:	bl	41c618 <feof@plt+0x18d78>
  41aa90:	cmp	w0, #0x596
  41aa94:	b.ne	41ae30 <feof@plt+0x17590>  // b.any
  41aa98:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41aa9c:	add	x1, x1, #0x51e
  41aaa0:	b	41ae50 <feof@plt+0x175b0>
  41aaa4:	cmp	w12, #0x80, lsl #12
  41aaa8:	b.eq	41b03c <feof@plt+0x1779c>  // b.none
  41aaac:	adrp	x8, 491000 <_obstack_memory_used@@Base+0x152fc>
  41aab0:	ldr	w9, [x26, #3816]
  41aab4:	ldr	w10, [x26, #588]
  41aab8:	str	x19, [sp, #40]
  41aabc:	ldr	w19, [x8, #3244]
  41aac0:	mov	w8, #0xffffffff            	// #-1
  41aac4:	orr	w9, w10, w9
  41aac8:	cmp	w9, #0x0
  41aacc:	lsl	w8, w8, w19
  41aad0:	mvn	w27, w8
  41aad4:	cset	w8, eq  // eq = none
  41aad8:	lsl	w22, w8, #24
  41aadc:	ldr	x8, [sp, #32]
  41aae0:	stur	w4, [x29, #-28]
  41aae4:	mov	w28, w12
  41aae8:	blr	x8
  41aaec:	cbz	w19, 41ab20 <feof@plt+0x17280>
  41aaf0:	mov	w20, wzr
  41aaf4:	mov	w23, #0x1                   	// #1
  41aaf8:	lsl	w0, w23, w20
  41aafc:	bic	w8, w27, w0
  41ab00:	orr	w1, w8, w22
  41ab04:	mov	w2, wzr
  41ab08:	mov	x3, x26
  41ab0c:	mov	w4, w28
  41ab10:	bl	41b11c <feof@plt+0x1787c>
  41ab14:	add	w20, w20, #0x1
  41ab18:	cmp	w19, w20
  41ab1c:	b.ne	41aaf8 <feof@plt+0x17258>  // b.any
  41ab20:	mov	w0, wzr
  41ab24:	mov	w1, w22
  41ab28:	mov	w2, w27
  41ab2c:	mov	x3, x26
  41ab30:	mov	w4, w28
  41ab34:	bl	41b11c <feof@plt+0x1787c>
  41ab38:	mov	w0, #0x10000               	// #65536
  41ab3c:	mov	w1, w22
  41ab40:	mov	w2, wzr
  41ab44:	mov	x3, x26
  41ab48:	mov	w4, w28
  41ab4c:	bl	41b11c <feof@plt+0x1787c>
  41ab50:	mov	w0, #0x20000               	// #131072
  41ab54:	mov	w1, w22
  41ab58:	mov	w2, wzr
  41ab5c:	mov	x3, x26
  41ab60:	mov	w4, w28
  41ab64:	bl	41b11c <feof@plt+0x1787c>
  41ab68:	mov	w0, #0x40000               	// #262144
  41ab6c:	mov	w1, w22
  41ab70:	mov	w2, wzr
  41ab74:	mov	x3, x26
  41ab78:	mov	w4, w28
  41ab7c:	bl	41b11c <feof@plt+0x1787c>
  41ab80:	mov	w0, #0x100000              	// #1048576
  41ab84:	mov	w1, w22
  41ab88:	mov	w2, wzr
  41ab8c:	mov	x3, x26
  41ab90:	mov	w4, w28
  41ab94:	bl	41b11c <feof@plt+0x1787c>
  41ab98:	mov	w0, #0x200000              	// #2097152
  41ab9c:	mov	w1, w22
  41aba0:	mov	w2, wzr
  41aba4:	mov	x3, x26
  41aba8:	mov	w4, w28
  41abac:	bl	41b11c <feof@plt+0x1787c>
  41abb0:	ldr	x23, [sp, #56]
  41abb4:	ldr	x19, [sp, #40]
  41abb8:	ldur	w4, [x29, #-28]
  41abbc:	mov	w8, #0x1                   	// #1
  41abc0:	strb	w8, [x26, #49]
  41abc4:	mov	w12, w28
  41abc8:	b	41b03c <feof@plt+0x1779c>
  41abcc:	cmp	w12, #0x80, lsl #12
  41abd0:	b.eq	41b03c <feof@plt+0x1779c>  // b.none
  41abd4:	mov	w20, w4
  41abd8:	mov	w22, w12
  41abdc:	blr	x8
  41abe0:	mov	w0, #0x100000              	// #1048576
  41abe4:	mov	w1, #0x1000000             	// #16777216
  41abe8:	mov	w2, wzr
  41abec:	mov	x3, x26
  41abf0:	mov	w4, w22
  41abf4:	bl	41b11c <feof@plt+0x1787c>
  41abf8:	mov	w12, w22
  41abfc:	b	41b030 <feof@plt+0x17790>
  41ac00:	str	wzr, [x0, #4]
  41ac04:	b	41ad10 <feof@plt+0x17470>
  41ac08:	cmp	x28, #0x0
  41ac0c:	mov	w8, #0x1                   	// #1
  41ac10:	cset	w3, ne  // ne = any
  41ac14:	mov	w0, #0x161                 	// #353
  41ac18:	mov	w1, #0x4                   	// #4
  41ac1c:	mov	x2, xzr
  41ac20:	mov	w20, w4
  41ac24:	mov	w4, w21
  41ac28:	mov	w5, w12
  41ac2c:	mov	x6, x19
  41ac30:	mov	x7, x26
  41ac34:	strb	w8, [x23, #122]
  41ac38:	stp	x25, x23, [sp]
  41ac3c:	mov	w22, w12
  41ac40:	bl	41f3e8 <feof@plt+0x1bb48>
  41ac44:	mov	w12, w22
  41ac48:	mov	w4, w20
  41ac4c:	b	41b03c <feof@plt+0x1779c>
  41ac50:	str	w28, [x26, #2760]
  41ac54:	ldr	w8, [x25, #2808]
  41ac58:	cbnz	w8, 41a528 <feof@plt+0x16c88>
  41ac5c:	str	w28, [x26, #2808]
  41ac60:	ldr	w8, [x25, #2252]
  41ac64:	cbnz	w8, 41a530 <feof@plt+0x16c90>
  41ac68:	str	w28, [x26, #2252]
  41ac6c:	ldr	w8, [x25, #2280]
  41ac70:	cbnz	w8, 41a538 <feof@plt+0x16c98>
  41ac74:	str	w28, [x26, #2280]
  41ac78:	ldr	w8, [x25, #2320]
  41ac7c:	cbnz	w8, 41b03c <feof@plt+0x1779c>
  41ac80:	str	wzr, [x26, #2320]
  41ac84:	b	41b03c <feof@plt+0x1779c>
  41ac88:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41ac8c:	add	x1, x1, #0x886
  41ac90:	mov	w0, w21
  41ac94:	mov	x2, x28
  41ac98:	mov	w20, w4
  41ac9c:	mov	w22, w21
  41aca0:	mov	w21, w12
  41aca4:	bl	42bb84 <feof@plt+0x282e4>
  41aca8:	mov	w12, w21
  41acac:	mov	w21, w22
  41acb0:	mov	w4, w20
  41acb4:	b	41b03c <feof@plt+0x1779c>
  41acb8:	ldrsw	x28, [x26, #3528]
  41acbc:	sub	x8, x28, #0x2
  41acc0:	mov	w22, w21
  41acc4:	mov	w21, w12
  41acc8:	mov	w20, w4
  41accc:	cmp	x8, #0x4
  41acd0:	b.cc	41acec <feof@plt+0x1744c>  // b.lo, b.ul, b.last
  41acd4:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41acd8:	add	x1, x1, #0x980
  41acdc:	mov	w0, w22
  41ace0:	mov	x2, x28
  41ace4:	bl	42bb84 <feof@plt+0x282e4>
  41ace8:	b	41acf0 <feof@plt+0x17450>
  41acec:	str	w28, [x26, #3528]
  41acf0:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41acf4:	add	x2, x2, #0x23b
  41acf8:	mov	w0, #0x2                   	// #2
  41acfc:	mov	w1, wzr
  41ad00:	mov	x3, x26
  41ad04:	mov	x4, x25
  41ad08:	mov	w5, w22
  41ad0c:	bl	41c28c <feof@plt+0x189ec>
  41ad10:	mov	w4, w20
  41ad14:	mov	w12, w21
  41ad18:	mov	w21, w22
  41ad1c:	b	41b03c <feof@plt+0x1779c>
  41ad20:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ad24:	add	x1, x1, #0x45c
  41ad28:	mov	w0, w21
  41ad2c:	mov	x2, x27
  41ad30:	bl	42bb84 <feof@plt+0x282e4>
  41ad34:	b	41aeb4 <feof@plt+0x17614>
  41ad38:	str	w0, [x26, #96]
  41ad3c:	b	41aeb4 <feof@plt+0x17614>
  41ad40:	and	w8, w8, #0xfc00001f
  41ad44:	str	w8, [x26, #220]
  41ad48:	b	41b03c <feof@plt+0x1779c>
  41ad4c:	cmp	w28, #0x0
  41ad50:	cset	w8, eq  // eq = none
  41ad54:	str	w8, [x26, #3220]
  41ad58:	ldrb	w8, [x26, #3848]
  41ad5c:	cbnz	w8, 41a320 <feof@plt+0x16a80>
  41ad60:	cmp	w28, #0x0
  41ad64:	cset	w8, eq  // eq = none
  41ad68:	str	w8, [x26, #3064]
  41ad6c:	ldrb	w8, [x26, #3840]
  41ad70:	cbnz	w8, 41a328 <feof@plt+0x16a88>
  41ad74:	str	w28, [x26, #1600]
  41ad78:	ldrb	w8, [x26, #3845]
  41ad7c:	cbnz	w8, 41b03c <feof@plt+0x1779c>
  41ad80:	str	w28, [x26, #2832]
  41ad84:	b	41b03c <feof@plt+0x1779c>
  41ad88:	mov	x0, x22
  41ad8c:	mov	x1, xzr
  41ad90:	mov	w2, wzr
  41ad94:	bl	41c84c <feof@plt+0x18fac>
  41ad98:	mov	x8, x0
  41ad9c:	mov	x0, xzr
  41ada0:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41ada4:	str	x8, [x9, #432]
  41ada8:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41adac:	cmp	x8, x0
  41adb0:	str	x0, [x9, #440]
  41adb4:	b.lt	41adc0 <feof@plt+0x17520>  // b.tstop
  41adb8:	orr	x8, x8, x0
  41adbc:	tbz	x8, #63, 41adcc <feof@plt+0x1752c>
  41adc0:	adrp	x0, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41adc4:	add	x0, x0, #0x8c0
  41adc8:	bl	42b940 <feof@plt+0x280a0>
  41adcc:	mov	x0, x22
  41add0:	bl	4031d0 <free@plt>
  41add4:	ldur	w12, [x29, #-24]
  41add8:	mov	w4, w28
  41addc:	b	41b03c <feof@plt+0x1779c>
  41ade0:	str	wzr, [x26, #136]
  41ade4:	b	41aeb4 <feof@plt+0x17614>
  41ade8:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41adec:	add	x1, x1, #0x381
  41adf0:	b	41af98 <feof@plt+0x176f8>
  41adf4:	mov	x0, x22
  41adf8:	bl	417bc4 <feof@plt+0x14324>
  41adfc:	cbz	x0, 41af90 <feof@plt+0x176f0>
  41ae00:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ae04:	mov	x3, x0
  41ae08:	add	x1, x1, #0x3b8
  41ae0c:	mov	w0, w21
  41ae10:	mov	x2, x22
  41ae14:	bl	42bb84 <feof@plt+0x282e4>
  41ae18:	b	41afa4 <feof@plt+0x17704>
  41ae1c:	strb	wzr, [x8]
  41ae20:	ldrb	w8, [x22]
  41ae24:	cbz	w8, 41afa4 <feof@plt+0x17704>
  41ae28:	str	x22, [x26, #1440]
  41ae2c:	b	41afac <feof@plt+0x1770c>
  41ae30:	adrp	x8, 491000 <_obstack_memory_used@@Base+0x152fc>
  41ae34:	add	x8, x8, #0xcb0
  41ae38:	mov	w9, #0x60                  	// #96
  41ae3c:	smaddl	x9, w0, w9, x8
  41ae40:	ldr	w9, [x9, #60]
  41ae44:	tbnz	w9, #17, 41af74 <feof@plt+0x176d4>
  41ae48:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ae4c:	add	x1, x1, #0x53c
  41ae50:	mov	w0, w21
  41ae54:	mov	x2, x27
  41ae58:	mov	x3, x22
  41ae5c:	bl	42bb84 <feof@plt+0x282e4>
  41ae60:	b	41b0b4 <feof@plt+0x17814>
  41ae64:	mov	w8, #0x1                   	// #1
  41ae68:	b	41aeb0 <feof@plt+0x17610>
  41ae6c:	mov	w8, #0x1                   	// #1
  41ae70:	strb	w8, [x26, #50]
  41ae74:	b	41afac <feof@plt+0x1770c>
  41ae78:	mov	x0, x27
  41ae7c:	mov	x1, xzr
  41ae80:	mov	w2, wzr
  41ae84:	bl	41c84c <feof@plt+0x18fac>
  41ae88:	mov	x1, x0
  41ae8c:	stur	w1, [x29, #-16]
  41ae90:	cmn	w1, #0x1
  41ae94:	b.eq	41afb8 <feof@plt+0x17718>  // b.none
  41ae98:	ldr	x2, [x26, #144]
  41ae9c:	ldr	x3, [x25, #144]
  41aea0:	mov	x0, x22
  41aea4:	bl	417d94 <feof@plt+0x144f4>
  41aea8:	b	41afa4 <feof@plt+0x17704>
  41aeac:	mov	w8, #0x2                   	// #2
  41aeb0:	str	w8, [x26, #136]
  41aeb4:	mov	w4, w20
  41aeb8:	mov	w12, w22
  41aebc:	b	41b03c <feof@plt+0x1779c>
  41aec0:	cmp	w28, #0x0
  41aec4:	cset	w8, eq  // eq = none
  41aec8:	str	w8, [x26, #3220]
  41aecc:	ldrb	w8, [x26, #3848]
  41aed0:	cbnz	w8, 41a214 <feof@plt+0x16974>
  41aed4:	cmp	w28, #0x0
  41aed8:	cset	w8, eq  // eq = none
  41aedc:	str	w8, [x26, #3064]
  41aee0:	ldrb	w8, [x26, #3840]
  41aee4:	cbnz	w8, 41a21c <feof@plt+0x1697c>
  41aee8:	str	w28, [x26, #1600]
  41aeec:	ldrb	w8, [x26, #3845]
  41aef0:	cbnz	w8, 41a224 <feof@plt+0x16984>
  41aef4:	str	w28, [x26, #2832]
  41aef8:	ldrb	w8, [x26, #3843]
  41aefc:	cbnz	w8, 41a22c <feof@plt+0x1698c>
  41af00:	str	w28, [x26, #2068]
  41af04:	ldrb	w8, [x26, #3844]
  41af08:	cbnz	w8, 41a234 <feof@plt+0x16994>
  41af0c:	cmp	w28, #0x0
  41af10:	cset	w8, eq  // eq = none
  41af14:	str	w8, [x26, #2504]
  41af18:	cbz	w28, 41b03c <feof@plt+0x1779c>
  41af1c:	ldrb	w8, [x26, #3842]
  41af20:	cbz	w8, 41af40 <feof@plt+0x176a0>
  41af24:	ldrb	w8, [x26, #3847]
  41af28:	cbz	w8, 41af50 <feof@plt+0x176b0>
  41af2c:	ldrb	w8, [x26, #3846]
  41af30:	cbz	w8, 41af5c <feof@plt+0x176bc>
  41af34:	ldrb	w8, [x26, #3841]
  41af38:	cbnz	w8, 41b03c <feof@plt+0x1779c>
  41af3c:	b	41af68 <feof@plt+0x176c8>
  41af40:	mov	w8, #0x1                   	// #1
  41af44:	str	w8, [x26, #2040]
  41af48:	ldrb	w8, [x26, #3847]
  41af4c:	cbnz	w8, 41af2c <feof@plt+0x1768c>
  41af50:	str	wzr, [x26, #3052]
  41af54:	ldrb	w8, [x26, #3846]
  41af58:	cbnz	w8, 41af34 <feof@plt+0x17694>
  41af5c:	str	wzr, [x26, #2896]
  41af60:	ldrb	w8, [x26, #3841]
  41af64:	cbnz	w8, 41b03c <feof@plt+0x1779c>
  41af68:	mov	w8, #0x1                   	// #1
  41af6c:	str	w8, [x26, #1800]
  41af70:	b	41b03c <feof@plt+0x1779c>
  41af74:	cmp	w28, #0x0
  41af78:	mov	w10, #0x6                   	// #6
  41af7c:	mov	w11, #0x4                   	// #4
  41af80:	csel	w1, w11, w10, ne  // ne = any
  41af84:	tbnz	w9, #22, 41b080 <feof@plt+0x177e0>
  41af88:	mov	x2, xzr
  41af8c:	b	41b094 <feof@plt+0x177f4>
  41af90:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41af94:	add	x1, x1, #0x3e4
  41af98:	mov	w0, w21
  41af9c:	mov	x2, x22
  41afa0:	bl	42bb84 <feof@plt+0x282e4>
  41afa4:	mov	x0, x22
  41afa8:	bl	4031d0 <free@plt>
  41afac:	mov	w4, w20
  41afb0:	mov	w12, w28
  41afb4:	b	41b03c <feof@plt+0x1779c>
  41afb8:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41afbc:	add	x1, x1, #0x3fd
  41afc0:	mov	w0, w21
  41afc4:	mov	x2, x27
  41afc8:	b	41afa0 <feof@plt+0x17700>
  41afcc:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41afd0:	adrp	x2, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41afd4:	add	x1, x1, #0x788
  41afd8:	add	x2, x2, #0x7a0
  41afdc:	mov	w0, w21
  41afe0:	mov	w20, w4
  41afe4:	mov	w22, w21
  41afe8:	mov	w21, w12
  41afec:	bl	42bb84 <feof@plt+0x282e4>
  41aff0:	mov	w12, w21
  41aff4:	mov	w21, w22
  41aff8:	mov	w4, w20
  41affc:	ldur	w22, [x29, #-16]
  41b000:	cbz	w22, 41b034 <feof@plt+0x17794>
  41b004:	ldr	x8, [sp, #32]
  41b008:	mov	w20, w4
  41b00c:	mov	w27, w12
  41b010:	blr	x8
  41b014:	ldur	w1, [x29, #-20]
  41b018:	mov	w0, w22
  41b01c:	mov	w2, wzr
  41b020:	mov	x3, x26
  41b024:	mov	w4, w27
  41b028:	bl	41b11c <feof@plt+0x1787c>
  41b02c:	mov	w12, w27
  41b030:	mov	w4, w20
  41b034:	mov	w8, #0x1                   	// #1
  41b038:	strb	w8, [x26, #49]
  41b03c:	mov	x0, x26
  41b040:	mov	x1, x25
  41b044:	mov	x2, x24
  41b048:	mov	w3, w12
  41b04c:	mov	w5, w21
  41b050:	mov	x6, x19
  41b054:	mov	x7, x23
  41b058:	bl	41fc24 <feof@plt+0x1c384>
  41b05c:	mov	w0, #0x1                   	// #1
  41b060:	ldp	x20, x19, [sp, #192]
  41b064:	ldp	x22, x21, [sp, #176]
  41b068:	ldp	x24, x23, [sp, #160]
  41b06c:	ldp	x26, x25, [sp, #144]
  41b070:	ldp	x28, x27, [sp, #128]
  41b074:	ldp	x29, x30, [sp, #112]
  41b078:	add	sp, sp, #0xd0
  41b07c:	ret
  41b080:	sxtw	x9, w0
  41b084:	mov	w10, #0x60                  	// #96
  41b088:	madd	x8, x9, x10, x8
  41b08c:	ldrb	w8, [x8, #52]
  41b090:	add	x2, x22, x8
  41b094:	ldur	w5, [x29, #-24]
  41b098:	cmp	w28, #0x0
  41b09c:	cset	w3, ne  // ne = any
  41b0a0:	mov	w4, w21
  41b0a4:	mov	x6, x19
  41b0a8:	mov	x7, x26
  41b0ac:	stp	x25, x23, [sp]
  41b0b0:	bl	41f3e8 <feof@plt+0x1bb48>
  41b0b4:	mov	x0, x22
  41b0b8:	bl	4031d0 <free@plt>
  41b0bc:	ldp	w4, w12, [x29, #-28]
  41b0c0:	b	41b03c <feof@plt+0x1779c>
  41b0c4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  41b0c8:	adrp	x2, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41b0cc:	add	x0, x0, #0xef2
  41b0d0:	add	x2, x2, #0x754
  41b0d4:	mov	w1, #0x815                 	// #2069
  41b0d8:	bl	429434 <feof@plt+0x25b94>
  41b0dc:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  41b0e0:	ldr	w0, [x8, #400]
  41b0e4:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b0e8:	add	x1, x1, #0x4c9
  41b0ec:	bl	42c008 <feof@plt+0x28768>
  41b0f0:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  41b0f4:	ldr	w0, [x8, #400]
  41b0f8:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b0fc:	add	x1, x1, #0x4f2
  41b100:	bl	42c008 <feof@plt+0x28768>
  41b104:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  41b108:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b10c:	add	x0, x0, #0xef2
  41b110:	add	x2, x2, #0x417
  41b114:	mov	w1, #0xb2a                 	// #2858
  41b118:	bl	429434 <feof@plt+0x25b94>
  41b11c:	stp	x29, x30, [sp, #-96]!
  41b120:	stp	x28, x27, [sp, #16]
  41b124:	stp	x26, x25, [sp, #32]
  41b128:	stp	x24, x23, [sp, #48]
  41b12c:	stp	x22, x21, [sp, #64]
  41b130:	stp	x20, x19, [sp, #80]
  41b134:	mov	x29, sp
  41b138:	sub	sp, sp, #0x1c0
  41b13c:	adrp	x8, 491000 <_obstack_memory_used@@Base+0x152fc>
  41b140:	ldr	w24, [x8, #3244]
  41b144:	str	w4, [sp, #12]
  41b148:	cmp	w24, #0x11
  41b14c:	b.cs	41bcb4 <feof@plt+0x18414>  // b.hs, b.nlast
  41b150:	ldr	w8, [x3, #224]
  41b154:	mov	w9, #0xffffffff            	// #-1
  41b158:	lsl	w9, w9, w24
  41b15c:	mov	x19, x3
  41b160:	mov	w21, w1
  41b164:	mov	w23, w0
  41b168:	mvn	w20, w9
  41b16c:	str	w2, [sp, #36]
  41b170:	str	w9, [sp, #16]
  41b174:	cbnz	w8, 41b190 <feof@plt+0x178f0>
  41b178:	bl	428fac <feof@plt+0x2570c>
  41b17c:	mov	w8, #0x7fffffff            	// #2147483647
  41b180:	cmp	w0, w8
  41b184:	mov	w8, #0x50                  	// #80
  41b188:	csel	w8, w8, w0, eq  // eq = none
  41b18c:	str	w8, [x19, #224]
  41b190:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b194:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b198:	add	x8, x8, #0x74
  41b19c:	add	x9, x9, #0xad
  41b1a0:	str	w20, [sp, #52]
  41b1a4:	tst	w20, w21
  41b1a8:	adrp	x20, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b1ac:	adrp	x27, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41b1b0:	adrp	x22, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b1b4:	adrp	x25, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41b1b8:	str	x19, [sp, #40]
  41b1bc:	mov	x26, xzr
  41b1c0:	mov	x1, xzr
  41b1c4:	add	x20, x20, #0x23b
  41b1c8:	mov	w19, #0x1                   	// #1
  41b1cc:	add	x27, x27, #0xfdf
  41b1d0:	add	x22, x22, #0xb
  41b1d4:	csel	x28, x9, x8, eq  // eq = none
  41b1d8:	add	x25, x25, #0xf7d
  41b1dc:	b	41b1fc <feof@plt+0x1795c>
  41b1e0:	mov	x0, x22
  41b1e4:	bl	4033e0 <gettext@plt>
  41b1e8:	mov	x1, x0
  41b1ec:	add	x26, x26, #0x1
  41b1f0:	cmp	x26, #0x16
  41b1f4:	lsl	w19, w19, #1
  41b1f8:	b.eq	41b290 <feof@plt+0x179f0>  // b.none
  41b1fc:	and	w8, w19, w23
  41b200:	cmp	w8, #0x40, lsl #12
  41b204:	b.lt	41b224 <feof@plt+0x17984>  // b.tstop
  41b208:	cmp	w8, #0x100, lsl #12
  41b20c:	b.ge	41b244 <feof@plt+0x179a4>  // b.tcont
  41b210:	cmp	w8, #0x40, lsl #12
  41b214:	b.eq	41b27c <feof@plt+0x179dc>  // b.none
  41b218:	cmp	w8, #0x80, lsl #12
  41b21c:	b.eq	41b1ec <feof@plt+0x1794c>  // b.none
  41b220:	b	41b25c <feof@plt+0x179bc>
  41b224:	cbz	w8, 41b1ec <feof@plt+0x1794c>
  41b228:	cmp	w8, #0x10, lsl #12
  41b22c:	b.eq	41b284 <feof@plt+0x179e4>  // b.none
  41b230:	cmp	w8, #0x20, lsl #12
  41b234:	b.ne	41b25c <feof@plt+0x179bc>  // b.any
  41b238:	adrp	x0, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41b23c:	add	x0, x0, #0xfa7
  41b240:	b	41b1e4 <feof@plt+0x17944>
  41b244:	cmp	w8, #0x200, lsl #12
  41b248:	b.eq	41b1e0 <feof@plt+0x17940>  // b.none
  41b24c:	cmp	w8, #0x100, lsl #12
  41b250:	b.ne	41b25c <feof@plt+0x179bc>  // b.any
  41b254:	mov	x0, x25
  41b258:	b	41b1e4 <feof@plt+0x17944>
  41b25c:	cmp	x26, x24
  41b260:	b.cs	41b1ec <feof@plt+0x1794c>  // b.hs, b.nlast
  41b264:	mov	x0, x28
  41b268:	bl	4033e0 <gettext@plt>
  41b26c:	adrp	x8, 491000 <_obstack_memory_used@@Base+0x152fc>
  41b270:	add	x8, x8, #0xc40
  41b274:	ldr	x20, [x8, x26, lsl #3]
  41b278:	b	41b1e8 <feof@plt+0x17948>
  41b27c:	mov	x0, x27
  41b280:	b	41b1e4 <feof@plt+0x17944>
  41b284:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b288:	add	x0, x0, #0x3a
  41b28c:	b	41b1e4 <feof@plt+0x17944>
  41b290:	cbnz	x1, 41b2e8 <feof@plt+0x17a48>
  41b294:	ldr	w9, [sp, #36]
  41b298:	cbz	w9, 41b2b4 <feof@plt+0x17a14>
  41b29c:	ldr	w10, [sp, #52]
  41b2a0:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b2a4:	add	x8, x8, #0x1a3
  41b2a8:	tst	w10, w9
  41b2ac:	csel	x0, x22, x8, eq  // eq = none
  41b2b0:	b	41b2e0 <feof@plt+0x17a40>
  41b2b4:	tbnz	w23, #24, 41b2cc <feof@plt+0x17a2c>
  41b2b8:	tbnz	w23, #23, 41b2d8 <feof@plt+0x17a38>
  41b2bc:	tbz	w23, #22, 41bccc <feof@plt+0x1842c>
  41b2c0:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b2c4:	add	x0, x0, #0x139
  41b2c8:	b	41b2e0 <feof@plt+0x17a40>
  41b2cc:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b2d0:	add	x0, x0, #0xe2
  41b2d4:	b	41b2e0 <feof@plt+0x17a40>
  41b2d8:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b2dc:	add	x0, x0, #0x10b
  41b2e0:	bl	4033e0 <gettext@plt>
  41b2e4:	mov	x1, x0
  41b2e8:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b2ec:	add	x0, x0, #0x1ce
  41b2f0:	mov	x2, x20
  41b2f4:	bl	403880 <printf@plt>
  41b2f8:	ldr	x20, [sp, #40]
  41b2fc:	cmp	w23, #0x10, lsl #12
  41b300:	ldr	w8, [x20, #224]
  41b304:	str	w8, [sp, #52]
  41b308:	b.ne	41b3c4 <feof@plt+0x17b24>  // b.any
  41b30c:	adrp	x26, 48d000 <_obstack_memory_used@@Base+0x112fc>
  41b310:	adrp	x22, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b314:	mov	x19, #0xffffffffffffdd78    	// #-8840
  41b318:	adrp	x25, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41b31c:	add	x26, x26, #0xdb0
  41b320:	add	x22, x22, #0x1d5
  41b324:	b	41b350 <feof@plt+0x17ab0>
  41b328:	mov	x24, x0
  41b32c:	mov	x0, x23
  41b330:	bl	4030b0 <strlen@plt>
  41b334:	ldr	w3, [sp, #52]
  41b338:	mov	x2, x0
  41b33c:	mov	x0, x24
  41b340:	mov	x1, x23
  41b344:	bl	41c4bc <feof@plt+0x18c1c>
  41b348:	adds	x19, x19, #0x28
  41b34c:	b.eq	41b440 <feof@plt+0x17ba0>  // b.none
  41b350:	ldr	x8, [x25, #288]
  41b354:	add	x8, x8, x19
  41b358:	ldr	x9, [x8, #8864]
  41b35c:	ldr	x23, [x8, #8840]
  41b360:	cbz	x9, 41b37c <feof@plt+0x17adc>
  41b364:	ldrb	w8, [x9]
  41b368:	cmp	w8, #0x0
  41b36c:	csel	x0, x9, x26, ne  // ne = any
  41b370:	tbz	w21, #24, 41b384 <feof@plt+0x17ae4>
  41b374:	cbz	w8, 41b348 <feof@plt+0x17aa8>
  41b378:	b	41b384 <feof@plt+0x17ae4>
  41b37c:	mov	x0, x26
  41b380:	tbnz	w21, #24, 41b348 <feof@plt+0x17aa8>
  41b384:	bl	4033e0 <gettext@plt>
  41b388:	ldr	w8, [x20, #3804]
  41b38c:	cbnz	w8, 41b328 <feof@plt+0x17a88>
  41b390:	mov	x0, x22
  41b394:	add	x24, sp, #0xb8
  41b398:	bl	4033e0 <gettext@plt>
  41b39c:	ldr	x8, [x25, #288]
  41b3a0:	mov	x2, x0
  41b3a4:	add	x0, sp, #0xb8
  41b3a8:	mov	w1, #0x100                 	// #256
  41b3ac:	add	x8, x8, x19
  41b3b0:	ldr	w3, [x8, #8848]
  41b3b4:	ldr	w4, [x8, #8852]
  41b3b8:	ldr	w5, [x8, #8856]
  41b3bc:	bl	403530 <snprintf@plt>
  41b3c0:	b	41b32c <feof@plt+0x17a8c>
  41b3c4:	ldr	x8, [x20, #72]
  41b3c8:	adrp	x19, 491000 <_obstack_memory_used@@Base+0x152fc>
  41b3cc:	cbnz	x8, 41b3e0 <feof@plt+0x17b40>
  41b3d0:	ldr	w1, [x19, #3240]
  41b3d4:	mov	w0, #0x1                   	// #1
  41b3d8:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  41b3dc:	str	x0, [x20, #72]
  41b3e0:	ldr	x8, [x20, #64]
  41b3e4:	ldr	w22, [sp, #36]
  41b3e8:	adrp	x24, 490000 <_obstack_memory_used@@Base+0x142fc>
  41b3ec:	cbnz	x8, 41b400 <feof@plt+0x17b60>
  41b3f0:	ldr	w1, [x24, #3368]
  41b3f4:	mov	w0, #0x1                   	// #1
  41b3f8:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  41b3fc:	str	x0, [x20, #64]
  41b400:	ldr	w28, [x19, #3240]
  41b404:	adrp	x27, 491000 <_obstack_memory_used@@Base+0x152fc>
  41b408:	add	x27, x27, #0xcb0
  41b40c:	cbz	w28, 41ba08 <feof@plt+0x18168>
  41b410:	ldr	w10, [sp, #16]
  41b414:	adrp	x15, 48d000 <_obstack_memory_used@@Base+0x112fc>
  41b418:	mov	x26, xzr
  41b41c:	mov	w9, wzr
  41b420:	orr	w10, w10, #0x300000
  41b424:	mov	w8, wzr
  41b428:	mov	w14, #0x60                  	// #96
  41b42c:	add	x15, x15, #0xdb0
  41b430:	eor	w16, w10, #0xffcfffff
  41b434:	str	xzr, [sp, #24]
  41b438:	str	w16, [sp, #8]
  41b43c:	b	41b474 <feof@plt+0x17bd4>
  41b440:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41b444:	ldr	x1, [x8, #1088]
  41b448:	mov	w0, #0xa                   	// #10
  41b44c:	bl	403120 <putc@plt>
  41b450:	b	41bc94 <feof@plt+0x183f4>
  41b454:	mov	w8, #0x1                   	// #1
  41b458:	mov	w9, #0x1                   	// #1
  41b45c:	adrp	x15, 48d000 <_obstack_memory_used@@Base+0x112fc>
  41b460:	mov	w14, #0x60                  	// #96
  41b464:	add	x15, x15, #0xdb0
  41b468:	add	x26, x26, #0x1
  41b46c:	cmp	x26, x28
  41b470:	b.eq	41b9f0 <feof@plt+0x18150>  // b.none
  41b474:	madd	x25, x26, x14, x27
  41b478:	ldr	w10, [x25, #60]!
  41b47c:	cmp	w23, #0x0
  41b480:	cset	w11, eq  // eq = none
  41b484:	bics	wzr, w23, w10
  41b488:	cset	w12, ne  // ne = any
  41b48c:	tst	w10, w22
  41b490:	cset	w13, eq  // eq = none
  41b494:	tst	w10, w21
  41b498:	b.ne	41b468 <feof@plt+0x17bc8>  // b.any
  41b49c:	orr	w11, w11, w12
  41b4a0:	and	w11, w13, w11
  41b4a4:	cbnz	w11, 41b468 <feof@plt+0x17bc8>
  41b4a8:	tbz	w10, #19, 41b4b4 <feof@plt+0x17c14>
  41b4ac:	and	w10, w10, w16
  41b4b0:	cbz	w10, 41b468 <feof@plt+0x17bc8>
  41b4b4:	ldr	x10, [x20, #72]
  41b4b8:	mov	w9, #0x1                   	// #1
  41b4bc:	ldrb	w11, [x10, x26]
  41b4c0:	cbnz	w11, 41b468 <feof@plt+0x17bc8>
  41b4c4:	strb	w9, [x10, x26]
  41b4c8:	madd	x10, x26, x14, x27
  41b4cc:	ldr	x10, [x10, #8]
  41b4d0:	cmp	x10, #0x0
  41b4d4:	csel	x24, x10, x15, ne  // ne = any
  41b4d8:	tbz	w21, #24, 41b4e0 <feof@plt+0x17c40>
  41b4dc:	cbz	x10, 41b468 <feof@plt+0x17bc8>
  41b4e0:	madd	x19, x26, x14, x27
  41b4e4:	ldrh	w8, [x19, #48]!
  41b4e8:	cmp	x8, #0x594
  41b4ec:	b.hi	41b574 <feof@plt+0x17cd4>  // b.pmore
  41b4f0:	madd	x8, x8, x14, x27
  41b4f4:	ldr	x8, [x8, #8]
  41b4f8:	cbz	x8, 41b574 <feof@plt+0x17cd4>
  41b4fc:	cmp	x24, x15
  41b500:	b.eq	41b540 <feof@plt+0x17ca0>  // b.none
  41b504:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b508:	add	x0, x0, #0x222
  41b50c:	bl	4033e0 <gettext@plt>
  41b510:	ldrh	w8, [x19]
  41b514:	mov	w9, #0x60                  	// #96
  41b518:	mov	x2, x0
  41b51c:	add	x0, sp, #0xb8
  41b520:	mul	x8, x8, x9
  41b524:	ldr	x4, [x27, x8]
  41b528:	mov	w1, #0x100                 	// #256
  41b52c:	mov	x3, x24
  41b530:	bl	403530 <snprintf@plt>
  41b534:	mov	w14, #0x60                  	// #96
  41b538:	add	x24, sp, #0xb8
  41b53c:	b	41b574 <feof@plt+0x17cd4>
  41b540:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b544:	add	x0, x0, #0x1f6
  41b548:	add	x24, sp, #0xb8
  41b54c:	bl	4033e0 <gettext@plt>
  41b550:	ldrh	w8, [x19]
  41b554:	mov	w9, #0x60                  	// #96
  41b558:	mov	x2, x0
  41b55c:	add	x0, sp, #0xb8
  41b560:	mul	x8, x8, x9
  41b564:	ldr	x3, [x27, x8]
  41b568:	mov	w1, #0x100                 	// #256
  41b56c:	bl	403530 <snprintf@plt>
  41b570:	mov	w14, #0x60                  	// #96
  41b574:	madd	x8, x26, x14, x27
  41b578:	ldr	x8, [x8, #24]
  41b57c:	cbz	x8, 41b5c0 <feof@plt+0x17d20>
  41b580:	add	x8, sp, #0xb8
  41b584:	mov	w19, #0x60                  	// #96
  41b588:	cmp	x24, x8
  41b58c:	b.eq	41b5c8 <feof@plt+0x17d28>  // b.none
  41b590:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  41b594:	add	x0, x0, #0xdd1
  41b598:	bl	4033e0 <gettext@plt>
  41b59c:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b5a0:	mov	x4, x0
  41b5a4:	add	x0, sp, #0xb8
  41b5a8:	mov	w1, #0x100                 	// #256
  41b5ac:	add	x2, x2, #0x232
  41b5b0:	mov	x3, x24
  41b5b4:	bl	403530 <snprintf@plt>
  41b5b8:	add	x24, sp, #0xb8
  41b5bc:	b	41b608 <feof@plt+0x17d68>
  41b5c0:	mov	w19, #0x60                  	// #96
  41b5c4:	b	41b608 <feof@plt+0x17d68>
  41b5c8:	add	x0, sp, #0xb8
  41b5cc:	add	x24, sp, #0xb8
  41b5d0:	bl	4030b0 <strlen@plt>
  41b5d4:	add	x8, x24, x0
  41b5d8:	str	x8, [sp, #16]
  41b5dc:	mov	w8, #0x100                 	// #256
  41b5e0:	sub	x27, x8, x0
  41b5e4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  41b5e8:	add	x0, x0, #0xdd1
  41b5ec:	bl	4033e0 <gettext@plt>
  41b5f0:	mov	x3, x0
  41b5f4:	ldr	x0, [sp, #16]
  41b5f8:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b5fc:	mov	x1, x27
  41b600:	add	x2, x2, #0x234
  41b604:	bl	403530 <snprintf@plt>
  41b608:	mov	x0, x24
  41b60c:	bl	4033e0 <gettext@plt>
  41b610:	mov	w1, #0x9                   	// #9
  41b614:	mov	x24, x0
  41b618:	bl	403210 <strchr@plt>
  41b61c:	cbz	x0, 41b638 <feof@plt+0x17d98>
  41b620:	add	x8, x0, #0x1
  41b624:	sub	x2, x0, x24
  41b628:	str	x8, [sp, #16]
  41b62c:	ldr	w8, [x20, #3804]
  41b630:	cbnz	w8, 41b820 <feof@plt+0x17f80>
  41b634:	b	41b660 <feof@plt+0x17dc0>
  41b638:	adrp	x9, 491000 <_obstack_memory_used@@Base+0x152fc>
  41b63c:	mul	x8, x26, x19
  41b640:	add	x9, x9, #0xcb0
  41b644:	str	x24, [sp, #16]
  41b648:	ldr	x24, [x9, x8]
  41b64c:	mov	x0, x24
  41b650:	bl	4030b0 <strlen@plt>
  41b654:	mov	x2, x0
  41b658:	ldr	w8, [x20, #3804]
  41b65c:	cbnz	w8, 41b820 <feof@plt+0x17f80>
  41b660:	mov	w0, w26
  41b664:	mov	x1, x20
  41b668:	mov	x19, x2
  41b66c:	bl	41f148 <feof@plt+0x1b8a8>
  41b670:	mov	x2, x19
  41b674:	cmp	w2, #0x1c
  41b678:	mov	x27, x0
  41b67c:	b.hi	41b68c <feof@plt+0x17dec>  // b.pmore
  41b680:	strb	wzr, [sp, #186]
  41b684:	mov	w8, #0x909                 	// #2313
  41b688:	b	41b690 <feof@plt+0x17df0>
  41b68c:	mov	w8, #0x9                   	// #9
  41b690:	adrp	x10, 491000 <_obstack_memory_used@@Base+0x152fc>
  41b694:	add	x10, x10, #0xcb0
  41b698:	mov	w11, #0x60                  	// #96
  41b69c:	strh	w8, [sp, #184]
  41b6a0:	cbz	x27, 41b6b4 <feof@plt+0x17e14>
  41b6a4:	madd	x8, x26, x11, x10
  41b6a8:	ldr	w8, [x8, #72]
  41b6ac:	cmp	w8, #0x7
  41b6b0:	b.ne	41b6c0 <feof@plt+0x17e20>  // b.any
  41b6b4:	add	x8, sp, #0xb8
  41b6b8:	str	x8, [sp, #16]
  41b6bc:	b	41b820 <feof@plt+0x17f80>
  41b6c0:	ldrb	w9, [x25, #2]
  41b6c4:	tbnz	w9, #6, 41b708 <feof@plt+0x17e68>
  41b6c8:	add	x8, sp, #0xb8
  41b6cc:	mov	w0, w26
  41b6d0:	mov	x1, x20
  41b6d4:	str	x8, [sp, #16]
  41b6d8:	bl	41f170 <feof@plt+0x1b8d0>
  41b6dc:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b6e0:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b6e4:	cmp	w0, #0x0
  41b6e8:	add	x8, x8, #0x246
  41b6ec:	add	x9, x9, #0x250
  41b6f0:	csel	x0, x9, x8, eq  // eq = none
  41b6f4:	bl	4033e0 <gettext@plt>
  41b6f8:	mov	x1, x0
  41b6fc:	add	x0, sp, #0xb8
  41b700:	bl	403850 <strcat@plt>
  41b704:	b	41b81c <feof@plt+0x17f7c>
  41b708:	cmp	w8, #0x6
  41b70c:	b.eq	41b754 <feof@plt+0x17eb4>  // b.none
  41b710:	cmp	w8, #0x5
  41b714:	b.ne	41b7f4 <feof@plt+0x17f54>  // b.any
  41b718:	ldr	x27, [x27]
  41b71c:	add	x25, sp, #0xb8
  41b720:	str	x25, [sp, #16]
  41b724:	cbz	x27, 41b820 <feof@plt+0x17f80>
  41b728:	add	x0, sp, #0xb8
  41b72c:	bl	4030b0 <strlen@plt>
  41b730:	add	x8, x25, x0
  41b734:	mov	w9, #0x100                 	// #256
  41b738:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b73c:	sub	x1, x9, x0
  41b740:	mov	x0, x8
  41b744:	add	x2, x2, #0x236
  41b748:	mov	x3, x27
  41b74c:	bl	403530 <snprintf@plt>
  41b750:	b	41b81c <feof@plt+0x17f7c>
  41b754:	madd	x8, x26, x11, x10
  41b758:	ldrh	w8, [x8, #68]
  41b75c:	adrp	x9, 490000 <_obstack_memory_used@@Base+0x142fc>
  41b760:	add	x9, x9, #0x608
  41b764:	mov	w10, #0x30                  	// #48
  41b768:	mov	x25, x24
  41b76c:	madd	x24, x8, x10, x9
  41b770:	ldr	x8, [x24, #40]
  41b774:	mov	x0, x27
  41b778:	str	xzr, [sp, #56]
  41b77c:	blr	x8
  41b780:	ldr	x8, [x24, #16]
  41b784:	ldr	w3, [sp, #12]
  41b788:	mov	w2, w0
  41b78c:	add	x1, sp, #0x38
  41b790:	mov	x0, x8
  41b794:	bl	41cba0 <feof@plt+0x19300>
  41b798:	ldr	x27, [sp, #56]
  41b79c:	cbnz	x27, 41b7b4 <feof@plt+0x17f14>
  41b7a0:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b7a4:	add	x0, x0, #0x23c
  41b7a8:	bl	4033e0 <gettext@plt>
  41b7ac:	mov	x27, x0
  41b7b0:	str	x0, [sp, #56]
  41b7b4:	add	x0, sp, #0xb8
  41b7b8:	add	x24, sp, #0xb8
  41b7bc:	bl	4030b0 <strlen@plt>
  41b7c0:	add	x8, sp, #0xb8
  41b7c4:	str	x8, [sp, #16]
  41b7c8:	add	x8, x24, x0
  41b7cc:	mov	w9, #0x100                 	// #256
  41b7d0:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b7d4:	sub	x1, x9, x0
  41b7d8:	mov	x0, x8
  41b7dc:	add	x2, x2, #0x236
  41b7e0:	mov	x3, x27
  41b7e4:	bl	403530 <snprintf@plt>
  41b7e8:	mov	x2, x19
  41b7ec:	mov	x24, x25
  41b7f0:	b	41b820 <feof@plt+0x17f80>
  41b7f4:	add	x0, sp, #0xb8
  41b7f8:	add	x25, sp, #0xb8
  41b7fc:	bl	4030b0 <strlen@plt>
  41b800:	ldr	w2, [x27]
  41b804:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  41b808:	add	x8, sp, #0xb8
  41b80c:	add	x0, x25, x0
  41b810:	add	x1, x1, #0xadf
  41b814:	str	x8, [sp, #16]
  41b818:	bl	403340 <sprintf@plt>
  41b81c:	mov	x2, x19
  41b820:	adrp	x19, 491000 <_obstack_memory_used@@Base+0x152fc>
  41b824:	add	x19, x19, #0xcb0
  41b828:	mov	w9, #0x60                  	// #96
  41b82c:	madd	x8, x26, x9, x19
  41b830:	ldr	w4, [x8, #92]
  41b834:	cmn	w4, #0x1
  41b838:	b.eq	41b888 <feof@plt+0x17fe8>  // b.none
  41b83c:	madd	x8, x26, x9, x19
  41b840:	ldr	w3, [x8, #88]
  41b844:	mov	x27, x2
  41b848:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41b84c:	add	x0, sp, #0x38
  41b850:	mov	w1, #0x80                  	// #128
  41b854:	add	x2, x2, #0x25b
  41b858:	mov	w25, #0x60                  	// #96
  41b85c:	bl	403530 <snprintf@plt>
  41b860:	add	x1, sp, #0x38
  41b864:	mov	x0, x24
  41b868:	mov	x2, xzr
  41b86c:	bl	4799ac <feof@plt+0x7610c>
  41b870:	mov	x24, x0
  41b874:	add	x0, sp, #0x38
  41b878:	bl	4030b0 <strlen@plt>
  41b87c:	mov	x2, x27
  41b880:	add	w2, w0, w2
  41b884:	b	41b88c <feof@plt+0x17fec>
  41b888:	mov	w25, #0x60                  	// #96
  41b88c:	ldr	x0, [sp, #16]
  41b890:	ldr	w3, [sp, #52]
  41b894:	mov	x1, x24
  41b898:	bl	41c4bc <feof@plt+0x18c1c>
  41b89c:	madd	x8, x26, x25, x19
  41b8a0:	ldr	w8, [x8, #72]
  41b8a4:	mov	x27, x19
  41b8a8:	mov	w14, #0x60                  	// #96
  41b8ac:	cmp	w8, #0x6
  41b8b0:	b.ne	41b8cc <feof@plt+0x1802c>  // b.any
  41b8b4:	madd	x8, x26, x14, x27
  41b8b8:	ldr	x9, [x20, #64]
  41b8bc:	ldrh	w10, [x8, #68]
  41b8c0:	ldrb	w8, [x9, x10]
  41b8c4:	cmp	w8, #0x2
  41b8c8:	b.ne	41b934 <feof@plt+0x18094>  // b.any
  41b8cc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41b8d0:	ldr	x8, [x8, #560]
  41b8d4:	mov	w0, w26
  41b8d8:	mov	x1, xzr
  41b8dc:	blr	x8
  41b8e0:	ldr	w16, [sp, #8]
  41b8e4:	cbz	x0, 41b454 <feof@plt+0x17bb4>
  41b8e8:	ldr	w8, [x0, #4]
  41b8ec:	mov	x24, x0
  41b8f0:	cbz	w8, 41b454 <feof@plt+0x17bb4>
  41b8f4:	ldr	x0, [sp, #24]
  41b8f8:	cbz	x0, 41b94c <feof@plt+0x180ac>
  41b8fc:	ldp	w8, w9, [x0]
  41b900:	and	w25, w8, #0x7fffffff
  41b904:	cmp	w25, w9
  41b908:	b.ne	41b9c8 <feof@plt+0x18128>  // b.any
  41b90c:	add	w1, w25, #0x1
  41b910:	tbnz	w8, #31, 41b960 <feof@plt+0x180c0>
  41b914:	mov	w0, w25
  41b918:	bl	425fbc <feof@plt+0x2271c>
  41b91c:	mov	w27, w0
  41b920:	ldr	x0, [sp, #24]
  41b924:	mov	w25, wzr
  41b928:	mov	w20, wzr
  41b92c:	ldr	w19, [x0, #4]
  41b930:	b	41b978 <feof@plt+0x180d8>
  41b934:	ldr	w16, [sp, #8]
  41b938:	mov	w8, #0x1                   	// #1
  41b93c:	adrp	x15, 48d000 <_obstack_memory_used@@Base+0x112fc>
  41b940:	strb	w8, [x9, x10]
  41b944:	mov	w9, #0x1                   	// #1
  41b948:	b	41b464 <feof@plt+0x17bc4>
  41b94c:	mov	w25, wzr
  41b950:	mov	w20, wzr
  41b954:	mov	w19, wzr
  41b958:	mov	w27, #0x4                   	// #4
  41b95c:	b	41b978 <feof@plt+0x180d8>
  41b960:	cmp	w25, #0x4
  41b964:	mov	w8, #0x4                   	// #4
  41b968:	mov	x0, xzr
  41b96c:	mov	w19, wzr
  41b970:	csel	w27, w8, w1, cc  // cc = lo, ul, last
  41b974:	mov	w20, #0x1                   	// #1
  41b978:	mov	w8, w27
  41b97c:	mov	w1, #0x8                   	// #8
  41b980:	bfi	x1, x8, #4, #32
  41b984:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  41b988:	and	w8, w27, #0x7fffffff
  41b98c:	stp	w8, w19, [x0]
  41b990:	ldr	w16, [sp, #8]
  41b994:	adrp	x27, 491000 <_obstack_memory_used@@Base+0x152fc>
  41b998:	add	x27, x27, #0xcb0
  41b99c:	cbz	w20, 41b9c8 <feof@plt+0x18128>
  41b9a0:	cbz	w25, 41b9c4 <feof@plt+0x18124>
  41b9a4:	ldr	x8, [sp, #24]
  41b9a8:	add	x9, x0, #0x8
  41b9ac:	mov	w10, w25
  41b9b0:	add	x8, x8, #0x8
  41b9b4:	ldr	q0, [x8], #16
  41b9b8:	subs	w10, w10, #0x1
  41b9bc:	str	q0, [x9], #16
  41b9c0:	b.ne	41b9b4 <feof@plt+0x18114>  // b.any
  41b9c4:	str	w25, [x0, #4]
  41b9c8:	ldr	w9, [x0, #4]
  41b9cc:	ldr	x20, [sp, #40]
  41b9d0:	mov	w8, #0x1                   	// #1
  41b9d4:	str	x0, [sp, #24]
  41b9d8:	add	w10, w9, #0x1
  41b9dc:	add	x9, x0, x9, lsl #4
  41b9e0:	str	w10, [x0, #4]
  41b9e4:	str	w26, [x9, #8]
  41b9e8:	str	x24, [x9, #16]
  41b9ec:	b	41b458 <feof@plt+0x17bb8>
  41b9f0:	tbz	w9, #0, 41ba10 <feof@plt+0x18170>
  41b9f4:	adrp	x24, 490000 <_obstack_memory_used@@Base+0x142fc>
  41b9f8:	tbnz	w8, #0, 41ba80 <feof@plt+0x181e0>
  41b9fc:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ba00:	add	x0, x0, #0x2f2
  41ba04:	b	41ba78 <feof@plt+0x181d8>
  41ba08:	mov	x22, xzr
  41ba0c:	b	41ba18 <feof@plt+0x18178>
  41ba10:	ldr	x22, [sp, #24]
  41ba14:	adrp	x24, 490000 <_obstack_memory_used@@Base+0x142fc>
  41ba18:	ands	w19, w23, #0xfff
  41ba1c:	str	x22, [sp, #24]
  41ba20:	b.eq	41ba70 <feof@plt+0x181d0>  // b.none
  41ba24:	adrp	x21, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ba28:	adrp	x23, 491000 <_obstack_memory_used@@Base+0x152fc>
  41ba2c:	mov	x20, xzr
  41ba30:	add	x21, x21, #0x29c
  41ba34:	add	x23, x23, #0xc40
  41ba38:	b	41ba48 <feof@plt+0x181a8>
  41ba3c:	add	x20, x20, #0x1
  41ba40:	cmp	x20, #0xc
  41ba44:	b.eq	41ba68 <feof@plt+0x181c8>  // b.none
  41ba48:	lsr	w8, w19, w20
  41ba4c:	tbz	w8, #0, 41ba3c <feof@plt+0x1819c>
  41ba50:	mov	x0, x21
  41ba54:	bl	4033e0 <gettext@plt>
  41ba58:	ldr	x1, [x23, x20, lsl #3]
  41ba5c:	mov	x2, x1
  41ba60:	bl	403880 <printf@plt>
  41ba64:	b	41ba3c <feof@plt+0x1819c>
  41ba68:	ldr	x20, [sp, #40]
  41ba6c:	b	41ba80 <feof@plt+0x181e0>
  41ba70:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ba74:	add	x0, x0, #0x263
  41ba78:	bl	4033e0 <gettext@plt>
  41ba7c:	bl	403880 <printf@plt>
  41ba80:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  41ba84:	ldr	x1, [x8, #1088]
  41ba88:	adrp	x19, 490000 <_obstack_memory_used@@Base+0x142fc>
  41ba8c:	mov	w0, #0xa                   	// #10
  41ba90:	add	x19, x19, #0x608
  41ba94:	bl	403120 <putc@plt>
  41ba98:	ldr	w21, [x24, #3368]
  41ba9c:	cbz	w21, 41bbbc <feof@plt+0x1831c>
  41baa0:	adrp	x26, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41baa4:	mov	x23, xzr
  41baa8:	mov	w22, #0x30                  	// #48
  41baac:	add	x26, x26, #0x236
  41bab0:	b	41baf0 <feof@plt+0x18250>
  41bab4:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x22fc>
  41bab8:	add	x0, x0, #0x934
  41babc:	bl	403010 <puts@plt>
  41bac0:	ldr	x20, [sp, #40]
  41bac4:	adrp	x27, 491000 <_obstack_memory_used@@Base+0x152fc>
  41bac8:	adrp	x19, 490000 <_obstack_memory_used@@Base+0x142fc>
  41bacc:	mov	w9, #0x2                   	// #2
  41bad0:	ldr	x8, [x20, #64]
  41bad4:	add	x27, x27, #0xcb0
  41bad8:	add	x19, x19, #0x608
  41badc:	mov	w22, #0x30                  	// #48
  41bae0:	strb	w9, [x8, x23]
  41bae4:	add	x23, x23, #0x1
  41bae8:	cmp	x23, x21
  41baec:	b.eq	41bbbc <feof@plt+0x1831c>  // b.none
  41baf0:	ldr	x8, [x20, #64]
  41baf4:	ldrb	w8, [x8, x23]
  41baf8:	cmp	w8, #0x1
  41bafc:	b.ne	41bae4 <feof@plt+0x18244>  // b.any
  41bb00:	mul	x8, x23, x22
  41bb04:	ldr	x0, [x19, x8]
  41bb08:	cbz	x0, 41bae4 <feof@plt+0x18244>
  41bb0c:	bl	4033e0 <gettext@plt>
  41bb10:	mov	x1, x0
  41bb14:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41bb18:	add	x0, x0, #0x33d
  41bb1c:	bl	403880 <printf@plt>
  41bb20:	madd	x19, x23, x22, x19
  41bb24:	ldr	x25, [x19, #16]!
  41bb28:	ldr	x27, [x25]
  41bb2c:	cbz	x27, 41bab4 <feof@plt+0x18214>
  41bb30:	mov	x24, xzr
  41bb34:	mov	w22, #0x4                   	// #4
  41bb38:	mov	w20, #0x1                   	// #1
  41bb3c:	b	41bb80 <feof@plt+0x182e0>
  41bb40:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41bb44:	add	x0, x0, #0x341
  41bb48:	bl	403880 <printf@plt>
  41bb4c:	ldr	x25, [x19]
  41bb50:	mov	w22, #0x4                   	// #4
  41bb54:	lsl	x8, x24, #4
  41bb58:	ldr	x1, [x25, x8]
  41bb5c:	mov	x0, x26
  41bb60:	bl	403880 <printf@plt>
  41bb64:	add	w22, w22, w28
  41bb68:	ldr	x25, [x19]
  41bb6c:	mov	w24, w20
  41bb70:	lsl	x8, x24, #4
  41bb74:	add	w20, w20, #0x1
  41bb78:	ldr	x27, [x25, x8]
  41bb7c:	cbz	x27, 41bab4 <feof@plt+0x18214>
  41bb80:	mov	x0, x27
  41bb84:	bl	4030b0 <strlen@plt>
  41bb88:	cmp	w22, #0x5
  41bb8c:	mov	x28, x0
  41bb90:	b.cc	41bb54 <feof@plt+0x182b4>  // b.lo, b.ul, b.last
  41bb94:	add	w8, w22, w28
  41bb98:	add	w22, w8, #0x1
  41bb9c:	ldr	w8, [sp, #52]
  41bba0:	cmp	w22, w8
  41bba4:	b.hi	41bb40 <feof@plt+0x182a0>  // b.pmore
  41bba8:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41bbac:	add	x0, x0, #0x235
  41bbb0:	mov	x1, x27
  41bbb4:	bl	403880 <printf@plt>
  41bbb8:	b	41bb68 <feof@plt+0x182c8>
  41bbbc:	ldr	x26, [sp, #24]
  41bbc0:	adrp	x19, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41bbc4:	adrp	x20, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41bbc8:	adrp	x21, 47e000 <_obstack_memory_used@@Base+0x22fc>
  41bbcc:	mov	x23, xzr
  41bbd0:	add	x19, x19, #0x347
  41bbd4:	mov	w24, #0x60                  	// #96
  41bbd8:	add	x20, x20, #0x235
  41bbdc:	add	x21, x21, #0x934
  41bbe0:	b	41bbf0 <feof@plt+0x18350>
  41bbe4:	mov	x0, x21
  41bbe8:	bl	403010 <puts@plt>
  41bbec:	add	x23, x23, #0x1
  41bbf0:	cbz	x26, 41bc04 <feof@plt+0x18364>
  41bbf4:	ldr	w8, [x26, #4]
  41bbf8:	cmp	x23, w8, uxtw
  41bbfc:	b.cc	41bc10 <feof@plt+0x18370>  // b.lo, b.ul, b.last
  41bc00:	b	41bc78 <feof@plt+0x183d8>
  41bc04:	mov	w8, wzr
  41bc08:	cmp	x23, w8, uxtw
  41bc0c:	b.cs	41bc78 <feof@plt+0x183d8>  // b.hs, b.nlast
  41bc10:	add	x25, x26, x23, lsl #4
  41bc14:	ldrsw	x22, [x25, #8]
  41bc18:	mov	x0, x19
  41bc1c:	bl	4033e0 <gettext@plt>
  41bc20:	mul	x8, x22, x24
  41bc24:	ldr	x1, [x27, x8]
  41bc28:	bl	403880 <printf@plt>
  41bc2c:	mov	x22, xzr
  41bc30:	add	x25, x25, #0x10
  41bc34:	ldr	x8, [x25]
  41bc38:	cbz	x8, 41bc4c <feof@plt+0x183ac>
  41bc3c:	ldr	w9, [x8, #4]
  41bc40:	cmp	x22, w9, uxtw
  41bc44:	b.cc	41bc58 <feof@plt+0x183b8>  // b.lo, b.ul, b.last
  41bc48:	b	41bbe4 <feof@plt+0x18344>
  41bc4c:	mov	w9, wzr
  41bc50:	cmp	x22, w9, uxtw
  41bc54:	b.cs	41bbe4 <feof@plt+0x18344>  // b.hs, b.nlast
  41bc58:	add	x8, x8, x22, lsl #3
  41bc5c:	ldr	x1, [x8, #8]
  41bc60:	mov	x0, x20
  41bc64:	bl	403880 <printf@plt>
  41bc68:	add	x22, x22, #0x1
  41bc6c:	ldr	x8, [x25]
  41bc70:	cbnz	x8, 41bc3c <feof@plt+0x1839c>
  41bc74:	b	41bc4c <feof@plt+0x183ac>
  41bc78:	cbz	x26, 41bc94 <feof@plt+0x183f4>
  41bc7c:	ldr	w8, [x26]
  41bc80:	tbnz	w8, #31, 41bc90 <feof@plt+0x183f0>
  41bc84:	mov	x0, x26
  41bc88:	bl	4031d0 <free@plt>
  41bc8c:	b	41bc94 <feof@plt+0x183f4>
  41bc90:	str	wzr, [x26, #4]
  41bc94:	add	sp, sp, #0x1c0
  41bc98:	ldp	x20, x19, [sp, #80]
  41bc9c:	ldp	x22, x21, [sp, #64]
  41bca0:	ldp	x24, x23, [sp, #48]
  41bca4:	ldp	x26, x25, [sp, #32]
  41bca8:	ldp	x28, x27, [sp, #16]
  41bcac:	ldp	x29, x30, [sp], #96
  41bcb0:	ret
  41bcb4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x112fc>
  41bcb8:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41bcbc:	add	x0, x0, #0xef2
  41bcc0:	add	x2, x2, #0x18f
  41bcc4:	mov	w1, #0x649                 	// #1609
  41bcc8:	bl	429434 <feof@plt+0x25b94>
  41bccc:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41bcd0:	add	x0, x0, #0x165
  41bcd4:	mov	w1, w23
  41bcd8:	bl	42c0bc <feof@plt+0x2881c>
  41bcdc:	sub	sp, sp, #0x70
  41bce0:	stp	x29, x30, [sp, #16]
  41bce4:	stp	x28, x27, [sp, #32]
  41bce8:	stp	x26, x25, [sp, #48]
  41bcec:	stp	x24, x23, [sp, #64]
  41bcf0:	stp	x22, x21, [sp, #80]
  41bcf4:	stp	x20, x19, [sp, #96]
  41bcf8:	add	x29, sp, #0x10
  41bcfc:	ldr	x20, [x0]
  41bd00:	mov	x21, x1
  41bd04:	str	x0, [sp, #8]
  41bd08:	cbnz	x20, 41bd38 <feof@plt+0x18498>
  41bd0c:	mov	w0, #0x8                   	// #8
  41bd10:	bl	403440 <_Znwm@plt>
  41bd14:	mov	x20, x0
  41bd18:	str	xzr, [x0]
  41bd1c:	mov	w1, #0x10                  	// #16
  41bd20:	mov	x0, xzr
  41bd24:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  41bd28:	adrp	x8, 48d000 <_obstack_memory_used@@Base+0x112fc>
  41bd2c:	ldr	d0, [x8, #3576]
  41bd30:	str	x0, [x20]
  41bd34:	str	d0, [x0]
  41bd38:	mov	x0, x21
  41bd3c:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  41bd40:	mov	x21, x0
  41bd44:	mov	w24, #0x2c                  	// #44
  41bd48:	mov	x25, x0
  41bd4c:	mov	x26, x0
  41bd50:	b	41bd5c <feof@plt+0x184bc>
  41bd54:	add	x25, x25, #0x1
  41bd58:	strb	w8, [x26], #1
  41bd5c:	ldrb	w8, [x25]
  41bd60:	cmp	w8, #0x2c
  41bd64:	b.eq	41bd78 <feof@plt+0x184d8>  // b.none
  41bd68:	cbz	w8, 41bf20 <feof@plt+0x18680>
  41bd6c:	cmp	w8, #0x5c
  41bd70:	b.ne	41bd54 <feof@plt+0x184b4>  // b.any
  41bd74:	b	41befc <feof@plt+0x1865c>
  41bd78:	strb	wzr, [x26], #1
  41bd7c:	ldr	x28, [x20]
  41bd80:	add	x25, x25, #0x1
  41bd84:	cbz	x28, 41bdcc <feof@plt+0x1852c>
  41bd88:	ldp	w8, w9, [x28]
  41bd8c:	and	w0, w8, #0x7fffffff
  41bd90:	cmp	w0, w9
  41bd94:	b.ne	41bed4 <feof@plt+0x18634>  // b.any
  41bd98:	tbnz	w8, #31, 41bddc <feof@plt+0x1853c>
  41bd9c:	add	w1, w0, #0x1
  41bda0:	bl	425fbc <feof@plt+0x2271c>
  41bda4:	ldr	x8, [x20]
  41bda8:	mov	w9, w0
  41bdac:	lsl	x9, x9, #3
  41bdb0:	mov	w22, w0
  41bdb4:	add	x1, x9, #0x8
  41bdb8:	mov	w27, wzr
  41bdbc:	cbz	x8, 41bf14 <feof@plt+0x18674>
  41bdc0:	ldr	w19, [x8, #4]
  41bdc4:	mov	w23, wzr
  41bdc8:	b	41be0c <feof@plt+0x1856c>
  41bdcc:	mov	w27, wzr
  41bdd0:	mov	w23, wzr
  41bdd4:	mov	w22, #0x4                   	// #4
  41bdd8:	b	41bdf8 <feof@plt+0x18558>
  41bddc:	str	xzr, [x20]
  41bde0:	ldr	w27, [x28, #4]
  41bde4:	mov	w23, #0x1                   	// #1
  41bde8:	add	w8, w27, #0x1
  41bdec:	cmp	w8, #0x4
  41bdf0:	mov	w8, #0x4                   	// #4
  41bdf4:	csinc	w22, w8, w27, ls  // ls = plast
  41bdf8:	mov	w9, w22
  41bdfc:	lsl	x9, x9, #3
  41be00:	mov	x8, xzr
  41be04:	mov	w19, wzr
  41be08:	add	x1, x9, #0x8
  41be0c:	mov	x0, x8
  41be10:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  41be14:	and	w8, w22, #0x7fffffff
  41be18:	str	x0, [x20]
  41be1c:	stp	w8, w19, [x0]
  41be20:	cbz	w23, 41bed4 <feof@plt+0x18634>
  41be24:	ldr	x11, [x20]
  41be28:	cbz	w27, 41bed0 <feof@plt+0x18630>
  41be2c:	sub	w12, w27, #0x1
  41be30:	add	x8, x28, #0x8
  41be34:	cmp	w12, #0x3
  41be38:	add	x9, x11, #0x8
  41be3c:	b.cs	41be48 <feof@plt+0x185a8>  // b.hs, b.nlast
  41be40:	mov	w10, w27
  41be44:	b	41bebc <feof@plt+0x1861c>
  41be48:	lsl	x10, x12, #3
  41be4c:	add	x13, x28, x10
  41be50:	add	x13, x13, #0x10
  41be54:	cmp	x13, x9
  41be58:	b.ls	41be70 <feof@plt+0x185d0>  // b.plast
  41be5c:	add	x10, x11, x10
  41be60:	add	x10, x10, #0x10
  41be64:	cmp	x10, x8
  41be68:	mov	w10, w27
  41be6c:	b.hi	41bebc <feof@plt+0x1861c>  // b.pmore
  41be70:	add	x12, x12, #0x1
  41be74:	and	x13, x12, #0x1fffffffc
  41be78:	lsl	x8, x13, #3
  41be7c:	add	x14, x11, #0x18
  41be80:	add	x9, x28, x8
  41be84:	add	x11, x11, x8
  41be88:	sub	w10, w27, w13
  41be8c:	add	x8, x9, #0x8
  41be90:	add	x9, x11, #0x8
  41be94:	add	x11, x28, #0x18
  41be98:	mov	x15, x13
  41be9c:	ldp	q0, q1, [x11, #-16]
  41bea0:	subs	x15, x15, #0x4
  41bea4:	add	x11, x11, #0x20
  41bea8:	stp	q0, q1, [x14, #-16]
  41beac:	add	x14, x14, #0x20
  41beb0:	b.ne	41be9c <feof@plt+0x185fc>  // b.any
  41beb4:	cmp	x12, x13
  41beb8:	b.eq	41becc <feof@plt+0x1862c>  // b.none
  41bebc:	ldr	x11, [x8], #8
  41bec0:	subs	w10, w10, #0x1
  41bec4:	str	x11, [x9], #8
  41bec8:	b.ne	41bebc <feof@plt+0x1861c>  // b.any
  41becc:	ldr	x11, [x20]
  41bed0:	str	w27, [x11, #4]
  41bed4:	ldr	x8, [x20]
  41bed8:	ldr	w9, [x8, #4]
  41bedc:	add	w10, w9, #0x1
  41bee0:	add	x9, x8, x9, lsl #3
  41bee4:	str	w10, [x8, #4]
  41bee8:	str	x21, [x9, #8]
  41beec:	ldrb	w8, [x25]
  41bef0:	mov	x21, x26
  41bef4:	cmp	w8, #0x5c
  41bef8:	b.ne	41bd54 <feof@plt+0x184b4>  // b.any
  41befc:	ldrb	w9, [x25, #1]
  41bf00:	cmp	w9, #0x2c
  41bf04:	b.ne	41bd54 <feof@plt+0x184b4>  // b.any
  41bf08:	strb	w24, [x26], #1
  41bf0c:	add	x25, x25, #0x2
  41bf10:	b	41bd5c <feof@plt+0x184bc>
  41bf14:	mov	w23, wzr
  41bf18:	mov	w19, wzr
  41bf1c:	b	41be0c <feof@plt+0x1856c>
  41bf20:	ldrb	w8, [x21]
  41bf24:	cbz	w8, 41c094 <feof@plt+0x187f4>
  41bf28:	ldr	x24, [x20]
  41bf2c:	cbz	x24, 41bf74 <feof@plt+0x186d4>
  41bf30:	ldp	w8, w9, [x24]
  41bf34:	and	w0, w8, #0x7fffffff
  41bf38:	cmp	w0, w9
  41bf3c:	b.ne	41c07c <feof@plt+0x187dc>  // b.any
  41bf40:	tbnz	w8, #31, 41bf84 <feof@plt+0x186e4>
  41bf44:	add	w1, w0, #0x1
  41bf48:	bl	425fbc <feof@plt+0x2271c>
  41bf4c:	ldr	x8, [x20]
  41bf50:	mov	w9, w0
  41bf54:	lsl	x9, x9, #3
  41bf58:	mov	w22, w0
  41bf5c:	add	x1, x9, #0x8
  41bf60:	mov	w23, wzr
  41bf64:	cbz	x8, 41c0bc <feof@plt+0x1881c>
  41bf68:	ldr	w19, [x8, #4]
  41bf6c:	mov	w25, wzr
  41bf70:	b	41bfb4 <feof@plt+0x18714>
  41bf74:	mov	w23, wzr
  41bf78:	mov	w25, wzr
  41bf7c:	mov	w22, #0x4                   	// #4
  41bf80:	b	41bfa0 <feof@plt+0x18700>
  41bf84:	str	xzr, [x20]
  41bf88:	ldr	w23, [x24, #4]
  41bf8c:	mov	w8, #0x4                   	// #4
  41bf90:	mov	w25, #0x1                   	// #1
  41bf94:	add	w9, w23, #0x1
  41bf98:	cmp	w9, #0x4
  41bf9c:	csinc	w22, w8, w23, ls  // ls = plast
  41bfa0:	mov	w9, w22
  41bfa4:	lsl	x9, x9, #3
  41bfa8:	mov	x8, xzr
  41bfac:	mov	w19, wzr
  41bfb0:	add	x1, x9, #0x8
  41bfb4:	mov	x0, x8
  41bfb8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  41bfbc:	and	w8, w22, #0x7fffffff
  41bfc0:	str	x0, [x20]
  41bfc4:	stp	w8, w19, [x0]
  41bfc8:	cbz	w25, 41c07c <feof@plt+0x187dc>
  41bfcc:	ldr	x11, [x20]
  41bfd0:	cbz	w23, 41c078 <feof@plt+0x187d8>
  41bfd4:	sub	w12, w23, #0x1
  41bfd8:	add	x8, x24, #0x8
  41bfdc:	cmp	w12, #0x3
  41bfe0:	add	x9, x11, #0x8
  41bfe4:	b.cs	41bff0 <feof@plt+0x18750>  // b.hs, b.nlast
  41bfe8:	mov	w10, w23
  41bfec:	b	41c064 <feof@plt+0x187c4>
  41bff0:	lsl	x10, x12, #3
  41bff4:	add	x13, x24, x10
  41bff8:	add	x13, x13, #0x10
  41bffc:	cmp	x9, x13
  41c000:	b.cs	41c018 <feof@plt+0x18778>  // b.hs, b.nlast
  41c004:	add	x10, x11, x10
  41c008:	add	x10, x10, #0x10
  41c00c:	cmp	x8, x10
  41c010:	mov	w10, w23
  41c014:	b.cc	41c064 <feof@plt+0x187c4>  // b.lo, b.ul, b.last
  41c018:	add	x12, x12, #0x1
  41c01c:	and	x13, x12, #0x1fffffffc
  41c020:	lsl	x8, x13, #3
  41c024:	add	x14, x11, #0x18
  41c028:	add	x9, x24, x8
  41c02c:	add	x11, x11, x8
  41c030:	sub	w10, w23, w13
  41c034:	add	x8, x9, #0x8
  41c038:	add	x9, x11, #0x8
  41c03c:	add	x11, x24, #0x18
  41c040:	mov	x15, x13
  41c044:	ldp	q0, q1, [x11, #-16]
  41c048:	subs	x15, x15, #0x4
  41c04c:	add	x11, x11, #0x20
  41c050:	stp	q0, q1, [x14, #-16]
  41c054:	add	x14, x14, #0x20
  41c058:	b.ne	41c044 <feof@plt+0x187a4>  // b.any
  41c05c:	cmp	x12, x13
  41c060:	b.eq	41c074 <feof@plt+0x187d4>  // b.none
  41c064:	ldr	x11, [x8], #8
  41c068:	subs	w10, w10, #0x1
  41c06c:	str	x11, [x9], #8
  41c070:	b.ne	41c064 <feof@plt+0x187c4>  // b.any
  41c074:	ldr	x11, [x20]
  41c078:	str	w23, [x11, #4]
  41c07c:	ldr	x8, [x20]
  41c080:	ldr	w9, [x8, #4]
  41c084:	add	w10, w9, #0x1
  41c088:	add	x9, x8, x9, lsl #3
  41c08c:	str	w10, [x8, #4]
  41c090:	str	x21, [x9, #8]
  41c094:	ldr	x8, [sp, #8]
  41c098:	str	x20, [x8]
  41c09c:	ldp	x20, x19, [sp, #96]
  41c0a0:	ldp	x22, x21, [sp, #80]
  41c0a4:	ldp	x24, x23, [sp, #64]
  41c0a8:	ldp	x26, x25, [sp, #48]
  41c0ac:	ldp	x28, x27, [sp, #32]
  41c0b0:	ldp	x29, x30, [sp, #16]
  41c0b4:	add	sp, sp, #0x70
  41c0b8:	ret
  41c0bc:	mov	w25, wzr
  41c0c0:	mov	w19, wzr
  41c0c4:	b	41bfb4 <feof@plt+0x18714>
  41c0c8:	ldr	w8, [x1, #1656]
  41c0cc:	cbz	w8, 41c110 <feof@plt+0x18870>
  41c0d0:	ldr	w8, [x1, #2808]
  41c0d4:	cbz	w8, 41c11c <feof@plt+0x1887c>
  41c0d8:	ldr	w8, [x1, #3384]
  41c0dc:	cbz	w8, 41c128 <feof@plt+0x18888>
  41c0e0:	ldr	w8, [x1, #2680]
  41c0e4:	cbz	w8, 41c134 <feof@plt+0x18894>
  41c0e8:	ldr	w8, [x1, #3212]
  41c0ec:	cbz	w8, 41c140 <feof@plt+0x188a0>
  41c0f0:	ldr	w8, [x1, #3452]
  41c0f4:	cbz	w8, 41c14c <feof@plt+0x188ac>
  41c0f8:	ldr	w8, [x1, #2252]
  41c0fc:	cbz	w8, 41c158 <feof@plt+0x188b8>
  41c100:	ldr	w8, [x1, #2284]
  41c104:	cbz	w8, 41c164 <feof@plt+0x188c4>
  41c108:	cbnz	w2, 41c16c <feof@plt+0x188cc>
  41c10c:	b	41c180 <feof@plt+0x188e0>
  41c110:	str	w2, [x0, #1656]
  41c114:	ldr	w8, [x1, #2808]
  41c118:	cbnz	w8, 41c0d8 <feof@plt+0x18838>
  41c11c:	str	w2, [x0, #2808]
  41c120:	ldr	w8, [x1, #3384]
  41c124:	cbnz	w8, 41c0e0 <feof@plt+0x18840>
  41c128:	str	w2, [x0, #3384]
  41c12c:	ldr	w8, [x1, #2680]
  41c130:	cbnz	w8, 41c0e8 <feof@plt+0x18848>
  41c134:	str	w2, [x0, #2680]
  41c138:	ldr	w8, [x1, #3212]
  41c13c:	cbnz	w8, 41c0f0 <feof@plt+0x18850>
  41c140:	str	w2, [x0, #3212]
  41c144:	ldr	w8, [x1, #3452]
  41c148:	cbnz	w8, 41c0f8 <feof@plt+0x18858>
  41c14c:	str	w2, [x0, #3452]
  41c150:	ldr	w8, [x1, #2252]
  41c154:	cbnz	w8, 41c100 <feof@plt+0x18860>
  41c158:	str	w2, [x0, #2252]
  41c15c:	ldr	w8, [x1, #2284]
  41c160:	cbnz	w8, 41c108 <feof@plt+0x18868>
  41c164:	str	w2, [x0, #2284]
  41c168:	cbz	w2, 41c180 <feof@plt+0x188e0>
  41c16c:	ldr	w8, [x1, #2288]
  41c170:	cbnz	w8, 41c180 <feof@plt+0x188e0>
  41c174:	ldr	w8, [x0, #2284]
  41c178:	cbz	w8, 41c180 <feof@plt+0x188e0>
  41c17c:	str	w2, [x0, #2288]
  41c180:	cbz	w2, 41c198 <feof@plt+0x188f8>
  41c184:	ldr	w8, [x1, #2280]
  41c188:	cbnz	w8, 41c198 <feof@plt+0x188f8>
  41c18c:	ldr	w8, [x0, #2284]
  41c190:	cbz	w8, 41c198 <feof@plt+0x188f8>
  41c194:	str	w2, [x0, #2280]
  41c198:	ldr	w8, [x1, #2736]
  41c19c:	cbz	w8, 41c1fc <feof@plt+0x1895c>
  41c1a0:	ldr	w8, [x1, #3084]
  41c1a4:	cbz	w8, 41c208 <feof@plt+0x18968>
  41c1a8:	ldr	w8, [x1, #3392]
  41c1ac:	cbz	w8, 41c214 <feof@plt+0x18974>
  41c1b0:	ldr	w8, [x1, #2116]
  41c1b4:	cbz	w8, 41c220 <feof@plt+0x18980>
  41c1b8:	ldr	w8, [x1, #3300]
  41c1bc:	cbz	w8, 41c22c <feof@plt+0x1898c>
  41c1c0:	ldr	w8, [x1, #3340]
  41c1c4:	cbz	w8, 41c238 <feof@plt+0x18998>
  41c1c8:	ldr	w8, [x1, #3440]
  41c1cc:	cbz	w8, 41c244 <feof@plt+0x189a4>
  41c1d0:	ldr	w8, [x1, #3432]
  41c1d4:	cbz	w8, 41c250 <feof@plt+0x189b0>
  41c1d8:	ldr	w8, [x1, #3276]
  41c1dc:	cbz	w8, 41c260 <feof@plt+0x189c0>
  41c1e0:	ldr	w8, [x1, #2440]
  41c1e4:	cbz	w8, 41c26c <feof@plt+0x189cc>
  41c1e8:	ldr	w8, [x1, #2452]
  41c1ec:	cbz	w8, 41c278 <feof@plt+0x189d8>
  41c1f0:	ldr	w8, [x1, #3280]
  41c1f4:	cbz	w8, 41c284 <feof@plt+0x189e4>
  41c1f8:	ret
  41c1fc:	str	w2, [x0, #2736]
  41c200:	ldr	w8, [x1, #3084]
  41c204:	cbnz	w8, 41c1a8 <feof@plt+0x18908>
  41c208:	str	w2, [x0, #3084]
  41c20c:	ldr	w8, [x1, #3392]
  41c210:	cbnz	w8, 41c1b0 <feof@plt+0x18910>
  41c214:	str	w2, [x0, #3392]
  41c218:	ldr	w8, [x1, #2116]
  41c21c:	cbnz	w8, 41c1b8 <feof@plt+0x18918>
  41c220:	str	w2, [x0, #2116]
  41c224:	ldr	w8, [x1, #3300]
  41c228:	cbnz	w8, 41c1c0 <feof@plt+0x18920>
  41c22c:	str	w2, [x0, #3300]
  41c230:	ldr	w8, [x1, #3340]
  41c234:	cbnz	w8, 41c1c8 <feof@plt+0x18928>
  41c238:	str	w2, [x0, #3340]
  41c23c:	ldr	w8, [x1, #3440]
  41c240:	cbnz	w8, 41c1d0 <feof@plt+0x18930>
  41c244:	str	w2, [x0, #3440]
  41c248:	ldr	w8, [x1, #3432]
  41c24c:	cbnz	w8, 41c1d8 <feof@plt+0x18938>
  41c250:	mov	w8, #0x2                   	// #2
  41c254:	str	w8, [x0, #3432]
  41c258:	ldr	w8, [x1, #3276]
  41c25c:	cbnz	w8, 41c1e0 <feof@plt+0x18940>
  41c260:	str	w2, [x0, #3276]
  41c264:	ldr	w8, [x1, #2440]
  41c268:	cbnz	w8, 41c1e8 <feof@plt+0x18948>
  41c26c:	str	w2, [x0, #2440]
  41c270:	ldr	w8, [x1, #2452]
  41c274:	cbnz	w8, 41c1f0 <feof@plt+0x18950>
  41c278:	str	w2, [x0, #2452]
  41c27c:	ldr	w8, [x1, #3280]
  41c280:	cbnz	w8, 41c1f8 <feof@plt+0x18958>
  41c284:	str	w2, [x0, #3280]
  41c288:	ret
  41c28c:	stp	x29, x30, [sp, #-64]!
  41c290:	str	x23, [sp, #16]
  41c294:	stp	x22, x21, [sp, #32]
  41c298:	stp	x20, x19, [sp, #48]
  41c29c:	mov	x29, sp
  41c2a0:	cmp	w1, #0x0
  41c2a4:	mov	w21, w5
  41c2a8:	mov	x19, x3
  41c2ac:	mov	x20, x2
  41c2b0:	cset	w8, ne  // ne = any
  41c2b4:	strb	w8, [x3, #56]
  41c2b8:	cbz	w0, 41c30c <feof@plt+0x18a6c>
  41c2bc:	ldr	w8, [x4, #100]
  41c2c0:	mov	x22, x4
  41c2c4:	mov	w23, w0
  41c2c8:	cbz	w8, 41c2f8 <feof@plt+0x18a58>
  41c2cc:	ldr	w8, [x19, #100]
  41c2d0:	cbz	w8, 41c2f8 <feof@plt+0x18a58>
  41c2d4:	cmp	w8, w23
  41c2d8:	b.eq	41c2f8 <feof@plt+0x18a58>  // b.none
  41c2dc:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x102fc>
  41c2e0:	add	x8, x8, #0xcb0
  41c2e4:	ldr	x2, [x8, w23, uxtw #3]
  41c2e8:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c2ec:	add	x1, x1, #0x42c
  41c2f0:	mov	w0, w21
  41c2f4:	bl	42bb84 <feof@plt+0x282e4>
  41c2f8:	str	w23, [x19, #100]
  41c2fc:	str	w23, [x22, #100]
  41c300:	ldrb	w8, [x20]
  41c304:	cbnz	w8, 41c31c <feof@plt+0x18a7c>
  41c308:	b	41c384 <feof@plt+0x18ae4>
  41c30c:	ldr	w8, [x19, #100]
  41c310:	cbz	w8, 41c374 <feof@plt+0x18ad4>
  41c314:	ldrb	w8, [x20]
  41c318:	cbz	w8, 41c384 <feof@plt+0x18ae4>
  41c31c:	mov	x0, x20
  41c320:	mov	x1, xzr
  41c324:	mov	w2, wzr
  41c328:	bl	41c84c <feof@plt+0x18fac>
  41c32c:	cmn	w0, #0x1
  41c330:	b.eq	41c348 <feof@plt+0x18aa8>  // b.none
  41c334:	cmp	w0, #0x4
  41c338:	b.lt	41c36c <feof@plt+0x18acc>  // b.tstop
  41c33c:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c340:	add	x1, x1, #0x480
  41c344:	b	41c350 <feof@plt+0x18ab0>
  41c348:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c34c:	add	x1, x1, #0x45c
  41c350:	mov	w0, w21
  41c354:	mov	x2, x20
  41c358:	ldp	x20, x19, [sp, #48]
  41c35c:	ldp	x22, x21, [sp, #32]
  41c360:	ldr	x23, [sp, #16]
  41c364:	ldp	x29, x30, [sp], #64
  41c368:	b	42bb84 <feof@plt+0x282e4>
  41c36c:	str	w0, [x19, #96]
  41c370:	b	41c398 <feof@plt+0x18af8>
  41c374:	mov	w8, #0x2                   	// #2
  41c378:	str	w8, [x19, #100]
  41c37c:	ldrb	w8, [x20]
  41c380:	cbnz	w8, 41c31c <feof@plt+0x18a7c>
  41c384:	ldr	w8, [x19, #96]
  41c388:	cmp	w8, #0x1
  41c38c:	b.gt	41c398 <feof@plt+0x18af8>
  41c390:	mov	w8, #0x2                   	// #2
  41c394:	str	w8, [x19, #96]
  41c398:	ldp	x20, x19, [sp, #48]
  41c39c:	ldp	x22, x21, [sp, #32]
  41c3a0:	ldr	x23, [sp, #16]
  41c3a4:	ldp	x29, x30, [sp], #64
  41c3a8:	ret
  41c3ac:	ldr	w8, [x0, #3220]
  41c3b0:	cbz	w8, 41c3bc <feof@plt+0x18b1c>
  41c3b4:	mov	w0, wzr
  41c3b8:	ret
  41c3bc:	ldr	w8, [x0, #3388]
  41c3c0:	cbz	w8, 41c3b4 <feof@plt+0x18b14>
  41c3c4:	ldr	w8, [x0, #2068]
  41c3c8:	cbz	w8, 41c3b4 <feof@plt+0x18b14>
  41c3cc:	ldr	w8, [x0, #3064]
  41c3d0:	cbnz	w8, 41c3b4 <feof@plt+0x18b14>
  41c3d4:	ldr	w8, [x0, #2504]
  41c3d8:	cbnz	w8, 41c3b4 <feof@plt+0x18b14>
  41c3dc:	ldr	w8, [x0, #2040]
  41c3e0:	cmp	w8, #0x1
  41c3e4:	cset	w0, eq  // eq = none
  41c3e8:	ret
  41c3ec:	ldrb	w8, [x0, #243]
  41c3f0:	cbz	w8, 41c3fc <feof@plt+0x18b5c>
  41c3f4:	mov	w0, wzr
  41c3f8:	ret
  41c3fc:	ldrb	w8, [x0, #282]
  41c400:	cbz	w8, 41c3f4 <feof@plt+0x18b54>
  41c404:	ldrb	w8, [x0, #115]
  41c408:	cbz	w8, 41c3f4 <feof@plt+0x18b54>
  41c40c:	ldrb	w8, [x0, #225]
  41c410:	cbnz	w8, 41c3f4 <feof@plt+0x18b54>
  41c414:	ldrb	w8, [x0, #169]
  41c418:	cmp	w8, #0x0
  41c41c:	cset	w0, eq  // eq = none
  41c420:	ret
  41c424:	cbz	w1, 41c46c <feof@plt+0x18bcc>
  41c428:	cmp	w2, #0x6
  41c42c:	cset	w8, ne  // ne = any
  41c430:	cmp	w2, #0xa
  41c434:	cset	w9, ne  // ne = any
  41c438:	and	w8, w8, w9
  41c43c:	tbnz	w8, #0, 41c49c <feof@plt+0x18bfc>
  41c440:	cmp	w3, #0x4
  41c444:	b.ne	41c49c <feof@plt+0x18bfc>  // b.any
  41c448:	adrp	x8, 491000 <_obstack_memory_used@@Base+0x152fc>
  41c44c:	mov	w9, #0x60                  	// #96
  41c450:	add	x8, x8, #0xcb0
  41c454:	smull	x9, w1, w9
  41c458:	ldr	x9, [x8, x9]
  41c45c:	ldr	x0, [x8, #23232]
  41c460:	mov	x2, xzr
  41c464:	add	x1, x9, #0x2
  41c468:	b	4799ac <feof@plt+0x7610c>
  41c46c:	cmp	w3, #0x6
  41c470:	b.eq	41c484 <feof@plt+0x18be4>  // b.none
  41c474:	cmp	w2, #0xa
  41c478:	b.eq	41c484 <feof@plt+0x18be4>  // b.none
  41c47c:	cmp	w2, #0x6
  41c480:	b.ne	41c4b4 <feof@plt+0x18c14>  // b.any
  41c484:	ldrb	w8, [x0, #64]
  41c488:	cbz	w8, 41c4b4 <feof@plt+0x18c14>
  41c48c:	adrp	x8, 491000 <_obstack_memory_used@@Base+0x152fc>
  41c490:	add	x8, x8, #0xcb0
  41c494:	ldr	x0, [x8, #23040]
  41c498:	b	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  41c49c:	mov	w8, #0x60                  	// #96
  41c4a0:	adrp	x9, 491000 <_obstack_memory_used@@Base+0x152fc>
  41c4a4:	smull	x8, w1, w8
  41c4a8:	add	x9, x9, #0xcb0
  41c4ac:	ldr	x0, [x9, x8]
  41c4b0:	b	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  41c4b4:	mov	x0, xzr
  41c4b8:	ret
  41c4bc:	stp	x29, x30, [sp, #-96]!
  41c4c0:	stp	x28, x27, [sp, #16]
  41c4c4:	stp	x26, x25, [sp, #32]
  41c4c8:	stp	x24, x23, [sp, #48]
  41c4cc:	stp	x22, x21, [sp, #64]
  41c4d0:	stp	x20, x19, [sp, #80]
  41c4d4:	mov	x29, sp
  41c4d8:	mov	w19, w3
  41c4dc:	mov	w24, w2
  41c4e0:	mov	x20, x1
  41c4e4:	mov	x21, x0
  41c4e8:	bl	4030b0 <strlen@plt>
  41c4ec:	adrp	x28, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  41c4f0:	adrp	x23, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c4f4:	mov	x22, x0
  41c4f8:	sub	w26, w19, #0x3
  41c4fc:	add	x28, x28, #0x4a2
  41c500:	mov	w27, #0x88                  	// #136
  41c504:	add	x23, x23, #0x372
  41c508:	cmp	w24, #0x1b
  41c50c:	mov	w8, #0x1b                  	// #27
  41c510:	csel	w8, w24, w8, hi  // hi = pmore
  41c514:	sub	w8, w26, w8
  41c518:	cmp	w8, w19
  41c51c:	csel	w8, wzr, w8, hi  // hi = pmore
  41c520:	cmp	w8, w22
  41c524:	mov	w25, w22
  41c528:	b.cs	41c5bc <feof@plt+0x18d1c>  // b.hs, b.nlast
  41c52c:	ldrb	w11, [x21]
  41c530:	mov	w25, w22
  41c534:	cbz	w11, 41c5bc <feof@plt+0x18d1c>
  41c538:	mov	w9, wzr
  41c53c:	mov	w10, w22
  41c540:	b	41c558 <feof@plt+0x18cb8>
  41c544:	mov	w25, w10
  41c548:	add	w9, w9, #0x1
  41c54c:	ldrb	w11, [x21, w9, uxtw]
  41c550:	mov	w10, w25
  41c554:	cbz	w11, 41c5bc <feof@plt+0x18d1c>
  41c558:	cmp	w10, w22
  41c55c:	b.eq	41c568 <feof@plt+0x18cc8>  // b.none
  41c560:	cmp	w9, w8
  41c564:	b.cs	41c5b8 <feof@plt+0x18d18>  // b.hs, b.nlast
  41c568:	and	w11, w11, #0xff
  41c56c:	cmp	w11, #0x2f
  41c570:	b.eq	41c58c <feof@plt+0x18cec>  // b.none
  41c574:	cmp	w11, #0x2d
  41c578:	b.eq	41c58c <feof@plt+0x18cec>  // b.none
  41c57c:	cmp	w11, #0x20
  41c580:	mov	w25, w9
  41c584:	b.ne	41c544 <feof@plt+0x18ca4>  // b.any
  41c588:	b	41c548 <feof@plt+0x18ca8>
  41c58c:	cbz	w9, 41c544 <feof@plt+0x18ca4>
  41c590:	add	w11, w9, #0x1
  41c594:	ldrb	w12, [x21, w11, uxtw]
  41c598:	cmp	w12, #0x20
  41c59c:	b.eq	41c544 <feof@plt+0x18ca4>  // b.none
  41c5a0:	sub	w12, w9, #0x1
  41c5a4:	ldrb	w12, [x21, w12, uxtw]
  41c5a8:	ldrh	w12, [x28, x12, lsl #1]
  41c5ac:	tst	w12, w27
  41c5b0:	csel	w25, w10, w11, eq  // eq = none
  41c5b4:	b	41c548 <feof@plt+0x18ca8>
  41c5b8:	mov	w25, w10
  41c5bc:	mov	w1, #0x1b                  	// #27
  41c5c0:	mov	x0, x23
  41c5c4:	mov	w2, w24
  41c5c8:	mov	x3, x20
  41c5cc:	mov	w4, w25
  41c5d0:	mov	x5, x21
  41c5d4:	bl	403880 <printf@plt>
  41c5d8:	sub	w8, w25, #0x1
  41c5dc:	add	w8, w8, #0x1
  41c5e0:	ldrb	w9, [x21, w8, uxtw]
  41c5e4:	cmp	w9, #0x20
  41c5e8:	b.eq	41c5dc <feof@plt+0x18d3c>  // b.none
  41c5ec:	mov	w24, wzr
  41c5f0:	subs	w22, w22, w8
  41c5f4:	add	x21, x21, w8, uxtw
  41c5f8:	b.ne	41c508 <feof@plt+0x18c68>  // b.any
  41c5fc:	ldp	x20, x19, [sp, #80]
  41c600:	ldp	x22, x21, [sp, #64]
  41c604:	ldp	x24, x23, [sp, #48]
  41c608:	ldp	x26, x25, [sp, #32]
  41c60c:	ldp	x28, x27, [sp, #16]
  41c610:	ldp	x29, x30, [sp], #96
  41c614:	ret
  41c618:	sub	sp, sp, #0x80
  41c61c:	stp	x29, x30, [sp, #32]
  41c620:	stp	x28, x27, [sp, #48]
  41c624:	stp	x26, x25, [sp, #64]
  41c628:	stp	x24, x23, [sp, #80]
  41c62c:	stp	x22, x21, [sp, #96]
  41c630:	stp	x20, x19, [sp, #112]
  41c634:	add	x29, sp, #0x20
  41c638:	adrp	x8, 491000 <_obstack_memory_used@@Base+0x152fc>
  41c63c:	ldr	w23, [x8, #3240]
  41c640:	adrp	x24, 491000 <_obstack_memory_used@@Base+0x152fc>
  41c644:	mov	w27, w1
  41c648:	mov	x19, x0
  41c64c:	cmp	w23, #0x2
  41c650:	add	x24, x24, #0xcb0
  41c654:	mov	x21, xzr
  41c658:	b.cc	41c69c <feof@plt+0x18dfc>  // b.lo, b.ul, b.last
  41c65c:	mov	w20, #0x60                  	// #96
  41c660:	mov	x22, x23
  41c664:	add	x8, x21, x22
  41c668:	lsr	x25, x8, #1
  41c66c:	madd	x8, x25, x20, x24
  41c670:	ldr	x9, [x8]
  41c674:	ldrb	w2, [x8, #52]
  41c678:	mov	x0, x19
  41c67c:	add	x1, x9, #0x1
  41c680:	bl	403450 <strncmp@plt>
  41c684:	cmp	w0, #0x0
  41c688:	csel	x22, x25, x22, lt  // lt = tstop
  41c68c:	csel	x21, x21, x25, lt  // lt = tstop
  41c690:	sub	x8, x22, x21
  41c694:	cmp	x8, #0x1
  41c698:	b.hi	41c664 <feof@plt+0x18dc4>  // b.pmore
  41c69c:	mov	w26, #0x60                  	// #96
  41c6a0:	mov	w28, #0x1400000             	// #20971520
  41c6a4:	mov	w20, #0x596                 	// #1430
  41c6a8:	mov	x25, x21
  41c6ac:	b	41c6c0 <feof@plt+0x18e20>
  41c6b0:	madd	x8, x25, x26, x24
  41c6b4:	ldrh	w25, [x8, #50]
  41c6b8:	cmp	x25, x23
  41c6bc:	b.eq	41c71c <feof@plt+0x18e7c>  // b.none
  41c6c0:	madd	x8, x25, x26, x24
  41c6c4:	ldr	x9, [x8]
  41c6c8:	ldrb	w22, [x8, #52]
  41c6cc:	mov	x0, x19
  41c6d0:	add	x1, x9, #0x1
  41c6d4:	mov	x2, x22
  41c6d8:	bl	403450 <strncmp@plt>
  41c6dc:	cbnz	w0, 41c6b0 <feof@plt+0x18e10>
  41c6e0:	madd	x8, x25, x26, x24
  41c6e4:	ldrb	w9, [x19, x22]
  41c6e8:	ldr	w8, [x8, #60]
  41c6ec:	cbz	w9, 41c6f4 <feof@plt+0x18e54>
  41c6f0:	tbz	w8, #22, 41c6b0 <feof@plt+0x18e10>
  41c6f4:	tst	w8, w27
  41c6f8:	b.ne	41c814 <feof@plt+0x18f74>  // b.any
  41c6fc:	mov	w9, #0xfff                 	// #4095
  41c700:	movk	w9, #0x178, lsl #16
  41c704:	and	w8, w8, w9
  41c708:	cmp	w8, w28
  41c70c:	b.eq	41c81c <feof@plt+0x18f7c>  // b.none
  41c710:	cmp	x20, #0x596
  41c714:	csel	x20, x25, x20, eq  // eq = none
  41c718:	b	41c6b0 <feof@plt+0x18e10>
  41c71c:	cmp	x20, #0x596
  41c720:	b.ne	41c820 <feof@plt+0x18f80>  // b.any
  41c724:	ldrb	w8, [x19]
  41c728:	cmp	w8, #0x2d
  41c72c:	b.ne	41c81c <feof@plt+0x18f7c>  // b.any
  41c730:	mov	x0, x19
  41c734:	add	x25, x21, #0x1
  41c738:	bl	4030b0 <strlen@plt>
  41c73c:	cmp	x25, x23
  41c740:	stur	x0, [x29, #-8]
  41c744:	b.cs	41c81c <feof@plt+0x18f7c>  // b.hs, b.nlast
  41c748:	mov	w8, #0x60                  	// #96
  41c74c:	mov	w9, #0x60                  	// #96
  41c750:	madd	x8, x25, x8, x24
  41c754:	mvn	x10, x21
  41c758:	str	x8, [sp, #8]
  41c75c:	madd	x28, x25, x9, x24
  41c760:	madd	x8, x21, x9, x24
  41c764:	mov	x27, xzr
  41c768:	mov	w20, #0x596                 	// #1430
  41c76c:	add	x23, x10, x23
  41c770:	add	x9, x28, #0x34
  41c774:	add	x21, x8, #0xfc
  41c778:	add	x24, x8, #0xf4
  41c77c:	add	x8, x28, #0x3c
  41c780:	mov	w26, #0x596                 	// #1430
  41c784:	str	x9, [sp, #16]
  41c788:	str	x8, [sp]
  41c78c:	ldr	x8, [x28]
  41c790:	ldur	x2, [x29, #-8]
  41c794:	mov	x0, x19
  41c798:	add	x22, x8, #0x1
  41c79c:	mov	x1, x22
  41c7a0:	bl	403450 <strncmp@plt>
  41c7a4:	cbnz	w0, 41c844 <feof@plt+0x18fa4>
  41c7a8:	cbnz	x27, 41c7b8 <feof@plt+0x18f18>
  41c7ac:	ldr	x8, [sp]
  41c7b0:	ldrb	w8, [x8, #2]
  41c7b4:	tbz	w8, #6, 41c800 <feof@plt+0x18f60>
  41c7b8:	cmp	x26, x25
  41c7bc:	b.ne	41c820 <feof@plt+0x18f80>  // b.any
  41c7c0:	cmp	x27, #0x1
  41c7c4:	b.ne	41c820 <feof@plt+0x18f80>  // b.any
  41c7c8:	ldrb	w8, [x21, #2]
  41c7cc:	tbz	w8, #6, 41c820 <feof@plt+0x18f80>
  41c7d0:	ldr	x8, [sp, #16]
  41c7d4:	ldrb	w2, [x8]
  41c7d8:	ldrb	w8, [x24]
  41c7dc:	add	w9, w2, #0x1
  41c7e0:	cmp	w9, w8
  41c7e4:	b.ne	41c820 <feof@plt+0x18f80>  // b.any
  41c7e8:	ldr	x8, [sp, #8]
  41c7ec:	mov	x0, x22
  41c7f0:	ldr	x8, [x8]
  41c7f4:	add	x1, x8, #0x1
  41c7f8:	bl	403450 <strncmp@plt>
  41c7fc:	cbnz	w0, 41c820 <feof@plt+0x18f80>
  41c800:	add	x27, x27, #0x1
  41c804:	cmp	x23, x27
  41c808:	add	x28, x28, #0x60
  41c80c:	mov	x26, x25
  41c810:	b.ne	41c78c <feof@plt+0x18eec>  // b.any
  41c814:	mov	x20, x25
  41c818:	b	41c820 <feof@plt+0x18f80>
  41c81c:	mov	w20, #0x596                 	// #1430
  41c820:	mov	x0, x20
  41c824:	ldp	x20, x19, [sp, #112]
  41c828:	ldp	x22, x21, [sp, #96]
  41c82c:	ldp	x24, x23, [sp, #80]
  41c830:	ldp	x26, x25, [sp, #64]
  41c834:	ldp	x28, x27, [sp, #48]
  41c838:	ldp	x29, x30, [sp, #32]
  41c83c:	add	sp, sp, #0x80
  41c840:	ret
  41c844:	mov	x20, x26
  41c848:	b	41c820 <feof@plt+0x18f80>
  41c84c:	sub	sp, sp, #0x50
  41c850:	stp	x29, x30, [sp, #16]
  41c854:	stp	x24, x23, [sp, #32]
  41c858:	stp	x22, x21, [sp, #48]
  41c85c:	stp	x20, x19, [sp, #64]
  41c860:	add	x29, sp, #0x10
  41c864:	mov	w23, w2
  41c868:	mov	x20, x1
  41c86c:	mov	x22, x0
  41c870:	cbnz	x1, 41c87c <feof@plt+0x18fdc>
  41c874:	bl	4035c0 <__errno_location@plt>
  41c878:	mov	x20, x0
  41c87c:	ldrb	w8, [x22]
  41c880:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  41c884:	add	x9, x9, #0x4a2
  41c888:	ldrh	w8, [x9, x8, lsl #1]
  41c88c:	tbnz	w8, #2, 41c8a0 <feof@plt+0x19000>
  41c890:	mov	w8, #0x16                  	// #22
  41c894:	mov	x0, #0xffffffffffffffff    	// #-1
  41c898:	str	w8, [x20]
  41c89c:	b	41c9f8 <feof@plt+0x19158>
  41c8a0:	str	wzr, [x20]
  41c8a4:	bl	4035c0 <__errno_location@plt>
  41c8a8:	mov	x24, x0
  41c8ac:	str	wzr, [x0]
  41c8b0:	add	x1, sp, #0x8
  41c8b4:	mov	w2, #0xa                   	// #10
  41c8b8:	mov	x0, x22
  41c8bc:	str	xzr, [sp, #8]
  41c8c0:	bl	4036d0 <strtoull@plt>
  41c8c4:	ldr	x21, [sp, #8]
  41c8c8:	mov	x19, x0
  41c8cc:	cbz	x21, 41c9e8 <feof@plt+0x19148>
  41c8d0:	ldrb	w8, [x21]
  41c8d4:	cbz	w8, 41c9e8 <feof@plt+0x19148>
  41c8d8:	tbz	w23, #0, 41ca10 <feof@plt+0x19170>
  41c8dc:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c8e0:	add	x1, x1, #0x7d0
  41c8e4:	mov	x0, x21
  41c8e8:	bl	403640 <strcmp@plt>
  41c8ec:	cbz	w0, 41ca4c <feof@plt+0x191ac>
  41c8f0:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c8f4:	add	x1, x1, #0x7d3
  41c8f8:	mov	x0, x21
  41c8fc:	bl	403720 <strcasecmp@plt>
  41c900:	cbz	w0, 41ca44 <feof@plt+0x191a4>
  41c904:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c908:	add	x1, x1, #0x7d7
  41c90c:	mov	x0, x21
  41c910:	bl	403640 <strcmp@plt>
  41c914:	cbz	w0, 41ca44 <feof@plt+0x191a4>
  41c918:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c91c:	add	x1, x1, #0x7da
  41c920:	mov	x0, x21
  41c924:	bl	403640 <strcmp@plt>
  41c928:	cbz	w0, 41ca54 <feof@plt+0x191b4>
  41c92c:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c930:	add	x1, x1, #0x7dd
  41c934:	mov	x0, x21
  41c938:	bl	403720 <strcasecmp@plt>
  41c93c:	cbz	w0, 41ca60 <feof@plt+0x191c0>
  41c940:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c944:	add	x1, x1, #0x7e1
  41c948:	mov	x0, x21
  41c94c:	bl	403720 <strcasecmp@plt>
  41c950:	cbz	w0, 41ca68 <feof@plt+0x191c8>
  41c954:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c958:	add	x1, x1, #0x7e4
  41c95c:	mov	x0, x21
  41c960:	bl	403720 <strcasecmp@plt>
  41c964:	cbz	w0, 41ca74 <feof@plt+0x191d4>
  41c968:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c96c:	add	x1, x1, #0x7e8
  41c970:	mov	x0, x21
  41c974:	bl	403720 <strcasecmp@plt>
  41c978:	cbz	w0, 41ca7c <feof@plt+0x191dc>
  41c97c:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c980:	add	x1, x1, #0x7eb
  41c984:	mov	x0, x21
  41c988:	bl	403720 <strcasecmp@plt>
  41c98c:	cbz	w0, 41ca8c <feof@plt+0x191ec>
  41c990:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c994:	add	x1, x1, #0x7ef
  41c998:	mov	x0, x21
  41c99c:	bl	403720 <strcasecmp@plt>
  41c9a0:	cbz	w0, 41ca94 <feof@plt+0x191f4>
  41c9a4:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c9a8:	add	x1, x1, #0x7f2
  41c9ac:	mov	x0, x21
  41c9b0:	bl	403720 <strcasecmp@plt>
  41c9b4:	cbz	w0, 41caa4 <feof@plt+0x19204>
  41c9b8:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41c9bc:	add	x1, x1, #0x7f6
  41c9c0:	mov	x0, x21
  41c9c4:	bl	403720 <strcasecmp@plt>
  41c9c8:	cbz	w0, 41caac <feof@plt+0x1920c>
  41c9cc:	adrp	x1, 4b7000 <_obstack_memory_used@@Base+0x3b2fc>
  41c9d0:	add	x1, x1, #0xc0d
  41c9d4:	mov	x0, x21
  41c9d8:	bl	403720 <strcasecmp@plt>
  41c9dc:	cbnz	w0, 41c890 <feof@plt+0x18ff0>
  41c9e0:	mov	x8, #0x1000000000000000    	// #1152921504606846976
  41c9e4:	b	41c9ec <feof@plt+0x1914c>
  41c9e8:	mov	w8, #0x1                   	// #1
  41c9ec:	mul	x8, x8, x19
  41c9f0:	cmp	x8, x19
  41c9f4:	csinv	x0, x8, xzr, cs  // cs = hs, nlast
  41c9f8:	ldp	x20, x19, [sp, #64]
  41c9fc:	ldp	x22, x21, [sp, #48]
  41ca00:	ldp	x24, x23, [sp, #32]
  41ca04:	ldp	x29, x30, [sp, #16]
  41ca08:	add	sp, sp, #0x50
  41ca0c:	ret
  41ca10:	add	x1, sp, #0x8
  41ca14:	mov	x0, x22
  41ca18:	mov	w2, wzr
  41ca1c:	str	wzr, [x24]
  41ca20:	bl	4036d0 <strtoull@plt>
  41ca24:	ldr	x8, [sp, #8]
  41ca28:	ldrb	w8, [x8]
  41ca2c:	cbz	w8, 41c9f8 <feof@plt+0x19158>
  41ca30:	ldr	w8, [x24]
  41ca34:	mov	w9, #0x16                  	// #22
  41ca38:	cmp	w8, #0x0
  41ca3c:	csel	w8, w9, w8, eq  // eq = none
  41ca40:	b	41c894 <feof@plt+0x18ff4>
  41ca44:	mov	w8, #0x400                 	// #1024
  41ca48:	b	41c9ec <feof@plt+0x1914c>
  41ca4c:	mov	w8, #0x3e8                 	// #1000
  41ca50:	b	41c9ec <feof@plt+0x1914c>
  41ca54:	mov	w8, #0x4240                	// #16960
  41ca58:	movk	w8, #0xf, lsl #16
  41ca5c:	b	41c9ec <feof@plt+0x1914c>
  41ca60:	mov	w8, #0x100000              	// #1048576
  41ca64:	b	41c9ec <feof@plt+0x1914c>
  41ca68:	mov	w8, #0xca00                	// #51712
  41ca6c:	movk	w8, #0x3b9a, lsl #16
  41ca70:	b	41c9ec <feof@plt+0x1914c>
  41ca74:	mov	w8, #0x40000000            	// #1073741824
  41ca78:	b	41c9ec <feof@plt+0x1914c>
  41ca7c:	mov	x8, #0x1000                	// #4096
  41ca80:	movk	x8, #0xd4a5, lsl #16
  41ca84:	movk	x8, #0xe8, lsl #32
  41ca88:	b	41c9ec <feof@plt+0x1914c>
  41ca8c:	mov	x8, #0x10000000000         	// #1099511627776
  41ca90:	b	41c9ec <feof@plt+0x1914c>
  41ca94:	mov	x8, #0x3ffffffff8000       	// #1125899906809856
  41ca98:	movk	x8, #0xa4c6, lsl #16
  41ca9c:	movk	x8, #0x8d7e, lsl #32
  41caa0:	b	41c9ec <feof@plt+0x1914c>
  41caa4:	mov	x8, #0x4000000000000       	// #1125899906842624
  41caa8:	b	41c9ec <feof@plt+0x1914c>
  41caac:	mov	x8, #0xa7640000            	// #2808348672
  41cab0:	movk	x8, #0xb6b3, lsl #32
  41cab4:	movk	x8, #0xde0, lsl #48
  41cab8:	b	41c9ec <feof@plt+0x1914c>
  41cabc:	stp	x29, x30, [sp, #-64]!
  41cac0:	stp	x24, x23, [sp, #16]
  41cac4:	stp	x22, x21, [sp, #32]
  41cac8:	stp	x20, x19, [sp, #48]
  41cacc:	mov	x29, sp
  41cad0:	adrp	x8, 491000 <_obstack_memory_used@@Base+0x152fc>
  41cad4:	mov	w9, #0x60                  	// #96
  41cad8:	add	x8, x8, #0xcb0
  41cadc:	madd	x9, x0, x9, x8
  41cae0:	ldr	w9, [x9, #72]
  41cae4:	cmp	w9, #0x6
  41cae8:	b.ne	41cb88 <feof@plt+0x192e8>  // b.any
  41caec:	mov	w9, #0x60                  	// #96
  41caf0:	madd	x8, x0, x9, x8
  41caf4:	ldrh	w8, [x8, #68]
  41caf8:	adrp	x10, 490000 <_obstack_memory_used@@Base+0x142fc>
  41cafc:	mov	w9, #0x30                  	// #48
  41cb00:	add	x10, x10, #0x608
  41cb04:	madd	x8, x8, x9, x10
  41cb08:	ldr	x22, [x8, #16]
  41cb0c:	mov	x21, x1
  41cb10:	ldr	x1, [x22]
  41cb14:	cbz	x1, 41cb70 <feof@plt+0x192d0>
  41cb18:	mov	w20, w3
  41cb1c:	mov	x19, x2
  41cb20:	mov	x23, xzr
  41cb24:	mov	w24, #0x1                   	// #1
  41cb28:	b	41cb40 <feof@plt+0x192a0>
  41cb2c:	mov	w23, w24
  41cb30:	lsl	x8, x23, #4
  41cb34:	ldr	x1, [x22, x8]
  41cb38:	add	w24, w24, #0x1
  41cb3c:	cbz	x1, 41cb70 <feof@plt+0x192d0>
  41cb40:	mov	x0, x21
  41cb44:	bl	403640 <strcmp@plt>
  41cb48:	cbnz	w0, 41cb2c <feof@plt+0x1928c>
  41cb4c:	tbnz	w20, #19, 41cb5c <feof@plt+0x192bc>
  41cb50:	add	x8, x22, x23, lsl #4
  41cb54:	ldrb	w8, [x8, #12]
  41cb58:	tbnz	w8, #1, 41cb2c <feof@plt+0x1928c>
  41cb5c:	add	x8, x22, x23, lsl #4
  41cb60:	ldr	w8, [x8, #8]
  41cb64:	mov	w0, #0x1                   	// #1
  41cb68:	str	w8, [x19]
  41cb6c:	b	41cb74 <feof@plt+0x192d4>
  41cb70:	mov	w0, wzr
  41cb74:	ldp	x20, x19, [sp, #48]
  41cb78:	ldp	x22, x21, [sp, #32]
  41cb7c:	ldp	x24, x23, [sp, #16]
  41cb80:	ldp	x29, x30, [sp], #64
  41cb84:	ret
  41cb88:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41cb8c:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41cb90:	add	x0, x0, #0x7f9
  41cb94:	add	x2, x2, #0x811
  41cb98:	mov	w1, #0x144                 	// #324
  41cb9c:	bl	429434 <feof@plt+0x25b94>
  41cba0:	ldr	x8, [x0]
  41cba4:	cbz	x8, 41cc54 <feof@plt+0x193b4>
  41cba8:	mov	x11, xzr
  41cbac:	mov	w9, #0x1                   	// #1
  41cbb0:	mov	x10, x0
  41cbb4:	b	41cbcc <feof@plt+0x1932c>
  41cbb8:	add	x10, x0, w9, uxtw #4
  41cbbc:	ldr	x12, [x10]
  41cbc0:	mov	w11, w9
  41cbc4:	add	w9, w9, #0x1
  41cbc8:	cbz	x12, 41cbfc <feof@plt+0x1935c>
  41cbcc:	add	x11, x0, x11, lsl #4
  41cbd0:	ldr	w12, [x11, #8]
  41cbd4:	cmp	w12, w2
  41cbd8:	b.ne	41cbb8 <feof@plt+0x19318>  // b.any
  41cbdc:	ldr	w11, [x11, #12]
  41cbe0:	tbz	w11, #0, 41cbb8 <feof@plt+0x19318>
  41cbe4:	tbnz	w3, #19, 41cbec <feof@plt+0x1934c>
  41cbe8:	tbnz	w11, #1, 41cbb8 <feof@plt+0x19318>
  41cbec:	ldr	x8, [x10]
  41cbf0:	mov	w0, #0x1                   	// #1
  41cbf4:	str	x8, [x1]
  41cbf8:	ret
  41cbfc:	cbz	x8, 41cc54 <feof@plt+0x193b4>
  41cc00:	mov	x10, xzr
  41cc04:	mov	w8, #0x1                   	// #1
  41cc08:	mov	x9, x0
  41cc0c:	b	41cc24 <feof@plt+0x19384>
  41cc10:	add	x9, x0, w8, uxtw #4
  41cc14:	ldr	x11, [x9]
  41cc18:	mov	w10, w8
  41cc1c:	add	w8, w8, #0x1
  41cc20:	cbz	x11, 41cc54 <feof@plt+0x193b4>
  41cc24:	add	x11, x0, x10, lsl #4
  41cc28:	ldr	w11, [x11, #8]
  41cc2c:	cmp	w11, w2
  41cc30:	b.ne	41cc10 <feof@plt+0x19370>  // b.any
  41cc34:	tbnz	w3, #19, 41cc44 <feof@plt+0x193a4>
  41cc38:	add	x10, x0, x10, lsl #4
  41cc3c:	ldrb	w10, [x10, #12]
  41cc40:	tbnz	w10, #1, 41cc10 <feof@plt+0x19370>
  41cc44:	ldr	x8, [x9]
  41cc48:	mov	w0, wzr
  41cc4c:	str	x8, [x1]
  41cc50:	ret
  41cc54:	mov	w0, wzr
  41cc58:	str	xzr, [x1]
  41cc5c:	ret
  41cc60:	sub	sp, sp, #0x70
  41cc64:	stp	x29, x30, [sp, #16]
  41cc68:	stp	x28, x27, [sp, #32]
  41cc6c:	stp	x26, x25, [sp, #48]
  41cc70:	stp	x24, x23, [sp, #64]
  41cc74:	stp	x22, x21, [sp, #80]
  41cc78:	stp	x20, x19, [sp, #96]
  41cc7c:	add	x29, sp, #0x10
  41cc80:	cbz	x0, 41d058 <feof@plt+0x197b8>
  41cc84:	mov	x20, x1
  41cc88:	cbz	x1, 41d070 <feof@plt+0x197d0>
  41cc8c:	mov	x28, x2
  41cc90:	cbz	x2, 41d088 <feof@plt+0x197e8>
  41cc94:	ldr	w8, [x20, #60]
  41cc98:	mov	w9, #0xfff                 	// #4095
  41cc9c:	movk	w9, #0x178, lsl #16
  41cca0:	and	w8, w8, w9
  41cca4:	mov	w9, #0x1400000             	// #20971520
  41cca8:	cmp	w8, w9
  41ccac:	b.ne	41ccd0 <feof@plt+0x19430>  // b.any
  41ccb0:	ldp	x20, x19, [sp, #96]
  41ccb4:	ldp	x22, x21, [sp, #80]
  41ccb8:	ldp	x24, x23, [sp, #64]
  41ccbc:	ldp	x26, x25, [sp, #48]
  41ccc0:	ldp	x28, x27, [sp, #32]
  41ccc4:	ldp	x29, x30, [sp, #16]
  41ccc8:	add	sp, sp, #0x70
  41cccc:	ret
  41ccd0:	mov	x21, x0
  41ccd4:	add	x0, x28, #0x1
  41ccd8:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  41ccdc:	ldr	x25, [x21]
  41cce0:	mov	x22, x0
  41cce4:	cbz	x25, 41cd2c <feof@plt+0x1948c>
  41cce8:	ldp	w8, w9, [x25]
  41ccec:	and	w0, w8, #0x7fffffff
  41ccf0:	cmp	w0, w9
  41ccf4:	b.ne	41ce34 <feof@plt+0x19594>  // b.any
  41ccf8:	tbnz	w8, #31, 41cd3c <feof@plt+0x1949c>
  41ccfc:	add	w1, w0, #0x1
  41cd00:	bl	425fbc <feof@plt+0x2271c>
  41cd04:	ldr	x8, [x21]
  41cd08:	mov	w9, w0
  41cd0c:	lsl	x9, x9, #3
  41cd10:	mov	w23, w0
  41cd14:	add	x1, x9, #0x8
  41cd18:	mov	w24, wzr
  41cd1c:	cbz	x8, 41d04c <feof@plt+0x197ac>
  41cd20:	ldr	w27, [x8, #4]
  41cd24:	mov	w26, wzr
  41cd28:	b	41cd6c <feof@plt+0x194cc>
  41cd2c:	mov	w24, wzr
  41cd30:	mov	w26, wzr
  41cd34:	mov	w23, #0x4                   	// #4
  41cd38:	b	41cd58 <feof@plt+0x194b8>
  41cd3c:	str	xzr, [x21]
  41cd40:	ldr	w24, [x25, #4]
  41cd44:	mov	w8, #0x4                   	// #4
  41cd48:	mov	w26, #0x1                   	// #1
  41cd4c:	add	w9, w24, #0x1
  41cd50:	cmp	w9, #0x4
  41cd54:	csinc	w23, w8, w24, ls  // ls = plast
  41cd58:	mov	w9, w23
  41cd5c:	lsl	x9, x9, #3
  41cd60:	mov	x8, xzr
  41cd64:	mov	w27, wzr
  41cd68:	add	x1, x9, #0x8
  41cd6c:	mov	x0, x8
  41cd70:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  41cd74:	and	w8, w23, #0x7fffffff
  41cd78:	str	x0, [x21]
  41cd7c:	stp	w8, w27, [x0]
  41cd80:	cbz	w26, 41ce34 <feof@plt+0x19594>
  41cd84:	ldr	x11, [x21]
  41cd88:	cbz	w24, 41ce30 <feof@plt+0x19590>
  41cd8c:	sub	w12, w24, #0x1
  41cd90:	add	x8, x25, #0x8
  41cd94:	cmp	w12, #0x3
  41cd98:	add	x9, x11, #0x8
  41cd9c:	b.cs	41cda8 <feof@plt+0x19508>  // b.hs, b.nlast
  41cda0:	mov	w10, w24
  41cda4:	b	41ce1c <feof@plt+0x1957c>
  41cda8:	lsl	x10, x12, #3
  41cdac:	add	x13, x25, x10
  41cdb0:	add	x13, x13, #0x10
  41cdb4:	cmp	x9, x13
  41cdb8:	b.cs	41cdd0 <feof@plt+0x19530>  // b.hs, b.nlast
  41cdbc:	add	x10, x11, x10
  41cdc0:	add	x10, x10, #0x10
  41cdc4:	cmp	x8, x10
  41cdc8:	mov	w10, w24
  41cdcc:	b.cc	41ce1c <feof@plt+0x1957c>  // b.lo, b.ul, b.last
  41cdd0:	add	x12, x12, #0x1
  41cdd4:	and	x13, x12, #0x1fffffffc
  41cdd8:	lsl	x8, x13, #3
  41cddc:	add	x14, x11, #0x18
  41cde0:	add	x9, x25, x8
  41cde4:	add	x11, x11, x8
  41cde8:	sub	w10, w24, w13
  41cdec:	add	x8, x9, #0x8
  41cdf0:	add	x9, x11, #0x8
  41cdf4:	add	x11, x25, #0x18
  41cdf8:	mov	x15, x13
  41cdfc:	ldp	q0, q1, [x11, #-16]
  41ce00:	subs	x15, x15, #0x4
  41ce04:	add	x11, x11, #0x20
  41ce08:	stp	q0, q1, [x14, #-16]
  41ce0c:	add	x14, x14, #0x20
  41ce10:	b.ne	41cdfc <feof@plt+0x1955c>  // b.any
  41ce14:	cmp	x12, x13
  41ce18:	b.eq	41ce2c <feof@plt+0x1958c>  // b.none
  41ce1c:	ldr	x11, [x8], #8
  41ce20:	subs	w10, w10, #0x1
  41ce24:	str	x11, [x9], #8
  41ce28:	b.ne	41ce1c <feof@plt+0x1957c>  // b.any
  41ce2c:	ldr	x11, [x21]
  41ce30:	str	w24, [x11, #4]
  41ce34:	ldr	x8, [x21]
  41ce38:	adrp	x19, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ce3c:	mov	x24, xzr
  41ce40:	add	x19, x19, #0x590
  41ce44:	ldr	w9, [x8, #4]
  41ce48:	str	x20, [sp, #8]
  41ce4c:	add	w10, w9, #0x1
  41ce50:	add	x9, x8, x9, lsl #3
  41ce54:	str	w10, [x8, #4]
  41ce58:	str	x22, [x9, #8]
  41ce5c:	b	41ce94 <feof@plt+0x195f4>
  41ce60:	ldr	x11, [x21]
  41ce64:	str	w28, [x11, #4]
  41ce68:	ldr	x8, [x21]
  41ce6c:	mov	x28, x20
  41ce70:	ldr	x20, [sp, #8]
  41ce74:	ldr	w9, [x8, #4]
  41ce78:	add	w10, w9, #0x1
  41ce7c:	add	x9, x8, x9, lsl #3
  41ce80:	str	w10, [x8, #4]
  41ce84:	str	x22, [x9, #8]
  41ce88:	add	x24, x24, #0x1
  41ce8c:	cmp	x24, #0x12
  41ce90:	b.eq	41ccb0 <feof@plt+0x19410>  // b.none
  41ce94:	add	x25, x19, x24, lsl #5
  41ce98:	ldr	x23, [x25, #16]
  41ce9c:	mov	x0, x23
  41cea0:	bl	4030b0 <strlen@plt>
  41cea4:	ldrb	w8, [x20, #64]
  41cea8:	mov	x22, x0
  41ceac:	tbz	w8, #7, 41cec0 <feof@plt+0x19620>
  41ceb0:	mov	w8, #0x854f                	// #34127
  41ceb4:	movk	w8, #0x2, lsl #16
  41ceb8:	lsr	x8, x8, x24
  41cebc:	tbnz	w8, #0, 41ce88 <feof@plt+0x195e8>
  41cec0:	mov	x0, x28
  41cec4:	mov	x1, x23
  41cec8:	mov	x2, x22
  41cecc:	bl	403450 <strncmp@plt>
  41ced0:	cbnz	w0, 41ce88 <feof@plt+0x195e8>
  41ced4:	ldr	x8, [x25]
  41ced8:	add	x1, x28, x22
  41cedc:	mov	x2, xzr
  41cee0:	mov	x20, x28
  41cee4:	add	x0, x8, #0x1
  41cee8:	bl	4799ac <feof@plt+0x7610c>
  41ceec:	ldr	x26, [x21]
  41cef0:	mov	x22, x0
  41cef4:	cbz	x26, 41cf3c <feof@plt+0x1969c>
  41cef8:	ldp	w8, w9, [x26]
  41cefc:	and	w0, w8, #0x7fffffff
  41cf00:	cmp	w0, w9
  41cf04:	b.ne	41ce68 <feof@plt+0x195c8>  // b.any
  41cf08:	tbnz	w8, #31, 41cf4c <feof@plt+0x196ac>
  41cf0c:	add	w1, w0, #0x1
  41cf10:	bl	425fbc <feof@plt+0x2271c>
  41cf14:	ldr	x8, [x21]
  41cf18:	mov	w9, w0
  41cf1c:	lsl	x9, x9, #3
  41cf20:	mov	w23, w0
  41cf24:	add	x1, x9, #0x8
  41cf28:	mov	w28, wzr
  41cf2c:	cbz	x8, 41d040 <feof@plt+0x197a0>
  41cf30:	ldr	w25, [x8, #4]
  41cf34:	mov	w27, wzr
  41cf38:	b	41cf7c <feof@plt+0x196dc>
  41cf3c:	mov	w28, wzr
  41cf40:	mov	w27, wzr
  41cf44:	mov	w23, #0x4                   	// #4
  41cf48:	b	41cf68 <feof@plt+0x196c8>
  41cf4c:	str	xzr, [x21]
  41cf50:	ldr	w28, [x26, #4]
  41cf54:	mov	w27, #0x1                   	// #1
  41cf58:	add	w8, w28, #0x1
  41cf5c:	cmp	w8, #0x4
  41cf60:	mov	w8, #0x4                   	// #4
  41cf64:	csinc	w23, w8, w28, ls  // ls = plast
  41cf68:	mov	w9, w23
  41cf6c:	lsl	x9, x9, #3
  41cf70:	mov	x8, xzr
  41cf74:	mov	w25, wzr
  41cf78:	add	x1, x9, #0x8
  41cf7c:	mov	x0, x8
  41cf80:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  41cf84:	and	w8, w23, #0x7fffffff
  41cf88:	str	x0, [x21]
  41cf8c:	stp	w8, w25, [x0]
  41cf90:	cbz	w27, 41ce68 <feof@plt+0x195c8>
  41cf94:	ldr	x11, [x21]
  41cf98:	cbz	w28, 41ce64 <feof@plt+0x195c4>
  41cf9c:	sub	w12, w28, #0x1
  41cfa0:	add	x8, x26, #0x8
  41cfa4:	cmp	w12, #0x3
  41cfa8:	add	x9, x11, #0x8
  41cfac:	b.cs	41cfb8 <feof@plt+0x19718>  // b.hs, b.nlast
  41cfb0:	mov	w10, w28
  41cfb4:	b	41d02c <feof@plt+0x1978c>
  41cfb8:	lsl	x10, x12, #3
  41cfbc:	add	x13, x26, x10
  41cfc0:	add	x13, x13, #0x10
  41cfc4:	cmp	x13, x9
  41cfc8:	b.ls	41cfe0 <feof@plt+0x19740>  // b.plast
  41cfcc:	add	x10, x11, x10
  41cfd0:	add	x10, x10, #0x10
  41cfd4:	cmp	x10, x8
  41cfd8:	mov	w10, w28
  41cfdc:	b.hi	41d02c <feof@plt+0x1978c>  // b.pmore
  41cfe0:	add	x12, x12, #0x1
  41cfe4:	and	x13, x12, #0x1fffffffc
  41cfe8:	lsl	x8, x13, #3
  41cfec:	add	x14, x11, #0x18
  41cff0:	add	x9, x26, x8
  41cff4:	add	x11, x11, x8
  41cff8:	sub	w10, w28, w13
  41cffc:	add	x8, x9, #0x8
  41d000:	add	x9, x11, #0x8
  41d004:	add	x11, x26, #0x18
  41d008:	mov	x15, x13
  41d00c:	ldp	q0, q1, [x11, #-16]
  41d010:	subs	x15, x15, #0x4
  41d014:	add	x11, x11, #0x20
  41d018:	stp	q0, q1, [x14, #-16]
  41d01c:	add	x14, x14, #0x20
  41d020:	b.ne	41d00c <feof@plt+0x1976c>  // b.any
  41d024:	cmp	x12, x13
  41d028:	b.eq	41ce60 <feof@plt+0x195c0>  // b.none
  41d02c:	ldr	x11, [x8], #8
  41d030:	subs	w10, w10, #0x1
  41d034:	str	x11, [x9], #8
  41d038:	b.ne	41d02c <feof@plt+0x1978c>  // b.any
  41d03c:	b	41ce60 <feof@plt+0x195c0>
  41d040:	mov	w27, wzr
  41d044:	mov	w25, wzr
  41d048:	b	41cf7c <feof@plt+0x196dc>
  41d04c:	mov	w26, wzr
  41d050:	mov	w27, wzr
  41d054:	b	41cd6c <feof@plt+0x194cc>
  41d058:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41d05c:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41d060:	add	x0, x0, #0x7f9
  41d064:	add	x2, x2, #0x827
  41d068:	mov	w1, #0x1eb                 	// #491
  41d06c:	bl	429434 <feof@plt+0x25b94>
  41d070:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41d074:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41d078:	add	x0, x0, #0x7f9
  41d07c:	add	x2, x2, #0x827
  41d080:	mov	w1, #0x1ec                 	// #492
  41d084:	bl	429434 <feof@plt+0x25b94>
  41d088:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41d08c:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41d090:	add	x0, x0, #0x7f9
  41d094:	add	x2, x2, #0x827
  41d098:	mov	w1, #0x1ed                 	// #493
  41d09c:	bl	429434 <feof@plt+0x25b94>
  41d0a0:	sub	sp, sp, #0x120
  41d0a4:	stp	x29, x30, [sp, #224]
  41d0a8:	str	x28, [sp, #240]
  41d0ac:	stp	x22, x21, [sp, #256]
  41d0b0:	stp	x20, x19, [sp, #272]
  41d0b4:	add	x29, sp, #0xe0
  41d0b8:	mov	x8, #0xffffffffffffffc8    	// #-56
  41d0bc:	mov	x9, sp
  41d0c0:	sub	x10, x29, #0x58
  41d0c4:	mov	x19, x0
  41d0c8:	movk	x8, #0xff80, lsl #32
  41d0cc:	add	x11, x29, #0x40
  41d0d0:	add	x9, x9, #0x80
  41d0d4:	add	x10, x10, #0x38
  41d0d8:	stp	x1, x2, [x29, #-88]
  41d0dc:	stp	x3, x4, [x29, #-72]
  41d0e0:	stp	x5, x6, [x29, #-56]
  41d0e4:	stur	x7, [x29, #-40]
  41d0e8:	stp	q0, q1, [sp]
  41d0ec:	stp	q2, q3, [sp, #32]
  41d0f0:	stp	q4, q5, [sp, #64]
  41d0f4:	stp	q6, q7, [sp, #96]
  41d0f8:	stp	x9, x8, [x29, #-16]
  41d0fc:	stp	x11, x10, [x29, #-32]
  41d100:	cbz	x0, 41d160 <feof@plt+0x198c0>
  41d104:	ldur	x21, [x29, #-24]
  41d108:	ldur	w22, [x29, #-8]
  41d10c:	mov	x20, xzr
  41d110:	mov	x0, x19
  41d114:	b	41d134 <feof@plt+0x19894>
  41d118:	mov	w8, w22
  41d11c:	ldur	x9, [x29, #-32]
  41d120:	add	x10, x9, #0x8
  41d124:	stur	x10, [x29, #-32]
  41d128:	ldr	x0, [x9]
  41d12c:	mov	w22, w8
  41d130:	cbz	x0, 41d158 <feof@plt+0x198b8>
  41d134:	bl	4030b0 <strlen@plt>
  41d138:	add	x20, x0, x20
  41d13c:	tbz	w22, #31, 41d118 <feof@plt+0x19878>
  41d140:	add	w8, w22, #0x8
  41d144:	cmn	w22, #0x8
  41d148:	stur	w8, [x29, #-8]
  41d14c:	b.gt	41d11c <feof@plt+0x1987c>
  41d150:	add	x9, x21, w22, sxtw
  41d154:	b	41d128 <feof@plt+0x19888>
  41d158:	add	x21, x20, #0x1
  41d15c:	b	41d164 <feof@plt+0x198c4>
  41d160:	mov	w21, #0x1                   	// #1
  41d164:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41d168:	add	x8, x8, #0x150
  41d16c:	ldp	x8, x9, [x8]
  41d170:	sub	x9, x9, x8
  41d174:	cmp	x9, x21
  41d178:	b.cs	41d194 <feof@plt+0x198f4>  // b.hs, b.nlast
  41d17c:	adrp	x20, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41d180:	add	x20, x20, #0x138
  41d184:	mov	x0, x20
  41d188:	mov	x1, x21
  41d18c:	bl	47bae8 <_obstack_newchunk@@Base>
  41d190:	ldr	x8, [x20, #24]
  41d194:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41d198:	add	x9, x9, #0x148
  41d19c:	ldr	x20, [x9]
  41d1a0:	add	x8, x8, x21
  41d1a4:	str	x8, [x9, #8]
  41d1a8:	cmp	x8, x20
  41d1ac:	b.ne	41d1c0 <feof@plt+0x19920>  // b.any
  41d1b0:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41d1b4:	ldrb	w10, [x9, #392]
  41d1b8:	orr	w10, w10, #0x2
  41d1bc:	strb	w10, [x9, #392]
  41d1c0:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41d1c4:	add	x9, x9, #0x140
  41d1c8:	ldr	x10, [x9, #40]
  41d1cc:	ldr	x11, [x9]
  41d1d0:	ldr	x12, [x9, #24]
  41d1d4:	mov	x13, #0xffffffffffffffc8    	// #-56
  41d1d8:	add	x8, x10, x8
  41d1dc:	bic	x8, x8, x10
  41d1e0:	sub	x10, x12, x11
  41d1e4:	sub	x11, x8, x11
  41d1e8:	cmp	x11, x10
  41d1ec:	mov	x10, sp
  41d1f0:	movk	x13, #0xff80, lsl #32
  41d1f4:	sub	x11, x29, #0x58
  41d1f8:	add	x10, x10, #0x80
  41d1fc:	stp	x10, x13, [x29, #-16]
  41d200:	add	x10, x29, #0x40
  41d204:	add	x11, x11, #0x38
  41d208:	csel	x8, x12, x8, hi  // hi = pmore
  41d20c:	mov	x21, x20
  41d210:	stp	x8, x8, [x9, #8]
  41d214:	stp	x10, x11, [x29, #-32]
  41d218:	cbz	x19, 41d280 <feof@plt+0x199e0>
  41d21c:	mov	x21, x20
  41d220:	b	41d238 <feof@plt+0x19998>
  41d224:	ldur	x8, [x29, #-32]
  41d228:	add	x9, x8, #0x8
  41d22c:	stur	x9, [x29, #-32]
  41d230:	ldr	x19, [x8]
  41d234:	cbz	x19, 41d280 <feof@plt+0x199e0>
  41d238:	mov	x0, x19
  41d23c:	bl	4030b0 <strlen@plt>
  41d240:	mov	x22, x0
  41d244:	mov	x0, x21
  41d248:	mov	x1, x19
  41d24c:	mov	x2, x22
  41d250:	bl	402fc0 <memcpy@plt>
  41d254:	ldursw	x8, [x29, #-8]
  41d258:	add	x21, x21, x22
  41d25c:	tbz	w8, #31, 41d224 <feof@plt+0x19984>
  41d260:	add	w9, w8, #0x8
  41d264:	cmn	w8, #0x8
  41d268:	stur	w9, [x29, #-8]
  41d26c:	b.gt	41d224 <feof@plt+0x19984>
  41d270:	ldur	x9, [x29, #-24]
  41d274:	add	x8, x9, x8
  41d278:	ldr	x19, [x8]
  41d27c:	cbnz	x19, 41d238 <feof@plt+0x19998>
  41d280:	strb	wzr, [x21]
  41d284:	mov	x0, x20
  41d288:	ldp	x20, x19, [sp, #272]
  41d28c:	ldp	x22, x21, [sp, #256]
  41d290:	ldr	x28, [sp, #240]
  41d294:	ldp	x29, x30, [sp, #224]
  41d298:	add	sp, sp, #0x120
  41d29c:	ret
  41d2a0:	sub	sp, sp, #0xf0
  41d2a4:	stp	x29, x30, [sp, #144]
  41d2a8:	stp	x28, x27, [sp, #160]
  41d2ac:	stp	x26, x25, [sp, #176]
  41d2b0:	stp	x24, x23, [sp, #192]
  41d2b4:	stp	x22, x21, [sp, #208]
  41d2b8:	stp	x20, x19, [sp, #224]
  41d2bc:	add	x29, sp, #0x90
  41d2c0:	mov	w27, #0x58                  	// #88
  41d2c4:	mov	w26, w0
  41d2c8:	umull	x0, w0, w27
  41d2cc:	stp	x3, x4, [sp, #16]
  41d2d0:	mov	w23, w2
  41d2d4:	mov	x24, x1
  41d2d8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  41d2dc:	mov	w8, #0x599                 	// #1433
  41d2e0:	stp	x8, xzr, [x0]
  41d2e4:	ldr	x8, [x24]
  41d2e8:	mov	w21, #0x1                   	// #1
  41d2ec:	cmp	w26, #0x2
  41d2f0:	stp	xzr, xzr, [x0, #48]
  41d2f4:	stp	x21, x21, [x0, #64]
  41d2f8:	str	wzr, [x0, #80]
  41d2fc:	stp	x8, x8, [x0, #16]
  41d300:	stp	x8, xzr, [x0, #32]
  41d304:	b.cc	41e024 <feof@plt+0x1a784>  // b.lo, b.ul, b.last
  41d308:	add	x8, x24, #0x8
  41d30c:	str	x8, [sp, #8]
  41d310:	add	x8, x0, #0x28
  41d314:	str	x8, [sp]
  41d318:	mov	w21, #0x1                   	// #1
  41d31c:	mov	w10, #0x59a                 	// #1434
  41d320:	mov	w8, #0x1                   	// #1
  41d324:	stur	w23, [x29, #-44]
  41d328:	str	x24, [sp, #56]
  41d32c:	str	w26, [sp, #52]
  41d330:	stur	x0, [x29, #-40]
  41d334:	b	41d364 <feof@plt+0x19ac4>
  41d338:	mov	w28, #0x1                   	// #1
  41d33c:	stp	x10, xzr, [x19]
  41d340:	stp	x11, x11, [x19, #16]
  41d344:	stp	x11, xzr, [x19, #32]
  41d348:	stp	xzr, xzr, [x19, #48]
  41d34c:	stp	x28, x28, [x19, #64]
  41d350:	str	wzr, [x19, #80]
  41d354:	add	w8, w28, w20
  41d358:	cmp	w8, w26
  41d35c:	add	w21, w21, #0x1
  41d360:	b.cs	41e024 <feof@plt+0x1a784>  // b.hs, b.nlast
  41d364:	add	x9, x24, w8, uxtw #3
  41d368:	ldr	x11, [x9]
  41d36c:	stur	x9, [x29, #-16]
  41d370:	mov	w20, w8
  41d374:	umaddl	x19, w21, w27, x0
  41d378:	ldrb	w9, [x11]
  41d37c:	cmp	w9, #0x2d
  41d380:	b.ne	41d338 <feof@plt+0x19a98>  // b.any
  41d384:	mov	x9, x11
  41d388:	ldrb	w8, [x9, #1]!
  41d38c:	cbz	w8, 41d338 <feof@plt+0x19a98>
  41d390:	mov	x0, x9
  41d394:	mov	w1, w23
  41d398:	stp	x11, x9, [sp, #32]
  41d39c:	bl	41c618 <feof@plt+0x18d78>
  41d3a0:	cmp	x0, #0x596
  41d3a4:	stur	x21, [x29, #-64]
  41d3a8:	stp	x20, x19, [sp, #64]
  41d3ac:	b.ne	41d508 <feof@plt+0x19c68>  // b.any
  41d3b0:	adrp	x27, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41d3b4:	mov	x21, #0xffffffffffffffff    	// #-1
  41d3b8:	add	x27, x27, #0x5a0
  41d3bc:	stur	wzr, [x29, #-56]
  41d3c0:	ldp	x28, x19, [x27, #-16]
  41d3c4:	ldr	x20, [x27]
  41d3c8:	add	x26, x21, #0x1
  41d3cc:	mov	x0, x28
  41d3d0:	bl	4030b0 <strlen@plt>
  41d3d4:	mov	w8, #0xd9ff                	// #55807
  41d3d8:	movk	w8, #0x3, lsl #16
  41d3dc:	lsr	x24, x8, x26
  41d3e0:	mov	x23, x0
  41d3e4:	stur	x19, [x29, #-32]
  41d3e8:	tbz	w24, #0, 41d3f4 <feof@plt+0x19b54>
  41d3ec:	mov	x22, xzr
  41d3f0:	b	41d400 <feof@plt+0x19b60>
  41d3f4:	mov	x0, x19
  41d3f8:	bl	4030b0 <strlen@plt>
  41d3fc:	mov	x22, x0
  41d400:	tst	x24, #0x1
  41d404:	cset	w8, eq  // eq = none
  41d408:	mov	x0, x20
  41d40c:	stur	x8, [x29, #-24]
  41d410:	csel	x19, x23, x22, ne  // ne = any
  41d414:	bl	4030b0 <strlen@plt>
  41d418:	ldur	x8, [x29, #-16]
  41d41c:	mov	x25, x0
  41d420:	mov	x1, x28
  41d424:	mov	x2, x23
  41d428:	ldr	x8, [x8]
  41d42c:	mov	x0, x8
  41d430:	bl	403450 <strncmp@plt>
  41d434:	cbz	w0, 41d458 <feof@plt+0x19bb8>
  41d438:	mov	w25, #0x596                 	// #1430
  41d43c:	cmp	x26, #0x10
  41d440:	add	x21, x21, #0x1
  41d444:	b.hi	41d52c <feof@plt+0x19c8c>  // b.pmore
  41d448:	cmp	x25, #0x596
  41d44c:	add	x27, x27, #0x20
  41d450:	b.eq	41d3c0 <feof@plt+0x19b20>  // b.none
  41d454:	b	41d52c <feof@plt+0x19c8c>
  41d458:	mov	x23, x19
  41d45c:	tbz	w24, #0, 41d4e8 <feof@plt+0x19c48>
  41d460:	ldp	x9, x8, [x29, #-24]
  41d464:	mov	x24, x23
  41d468:	ldr	x0, [x8, w9, uxtw #3]
  41d46c:	mov	w8, #0x4020                	// #16416
  41d470:	movk	w8, #0x1, lsl #16
  41d474:	lsr	x8, x8, x26
  41d478:	tbz	w8, #0, 41d484 <feof@plt+0x19be4>
  41d47c:	ldrb	w8, [x0, x24]
  41d480:	cbz	w8, 41d438 <feof@plt+0x19b98>
  41d484:	bl	4030b0 <strlen@plt>
  41d488:	sub	w8, w24, w25
  41d48c:	stur	w8, [x29, #-56]
  41d490:	sub	x8, x0, w8, sxtw
  41d494:	mov	x22, x0
  41d498:	add	x0, x8, #0x1
  41d49c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  41d4a0:	mov	x1, x20
  41d4a4:	mov	x2, x25
  41d4a8:	mov	x23, x0
  41d4ac:	bl	402fc0 <memcpy@plt>
  41d4b0:	ldp	x9, x8, [x29, #-24]
  41d4b4:	add	x0, x23, x25
  41d4b8:	ldr	x8, [x8, x9, lsl #3]
  41d4bc:	sub	x9, x22, x24
  41d4c0:	add	x2, x9, #0x1
  41d4c4:	add	x1, x8, x24
  41d4c8:	bl	402fc0 <memcpy@plt>
  41d4cc:	ldur	w1, [x29, #-44]
  41d4d0:	add	x0, x23, #0x1
  41d4d4:	bl	41c618 <feof@plt+0x18d78>
  41d4d8:	mov	x25, x0
  41d4dc:	mov	x0, x23
  41d4e0:	bl	4031d0 <free@plt>
  41d4e4:	b	41d43c <feof@plt+0x19b9c>
  41d4e8:	ldur	x8, [x29, #-16]
  41d4ec:	ldr	x0, [x8, #8]
  41d4f0:	cbz	x0, 41d438 <feof@plt+0x19b98>
  41d4f4:	ldur	x1, [x29, #-32]
  41d4f8:	mov	x2, x22
  41d4fc:	bl	403450 <strncmp@plt>
  41d500:	cbnz	w0, 41d438 <feof@plt+0x19b98>
  41d504:	b	41d460 <feof@plt+0x19bc0>
  41d508:	adrp	x24, 491000 <_obstack_memory_used@@Base+0x152fc>
  41d50c:	mov	w21, #0x60                  	// #96
  41d510:	add	x24, x24, #0xcb0
  41d514:	mov	x25, x0
  41d518:	mov	w14, wzr
  41d51c:	stur	xzr, [x29, #-24]
  41d520:	madd	x16, x0, x21, x24
  41d524:	mov	w9, #0x1                   	// #1
  41d528:	b	41d590 <feof@plt+0x19cf0>
  41d52c:	cmp	x25, #0x596
  41d530:	mov	w27, #0x58                  	// #88
  41d534:	b.ne	41d55c <feof@plt+0x19cbc>  // b.any
  41d538:	ldur	x8, [x29, #-16]
  41d53c:	stp	xzr, xzr, [x29, #-32]
  41d540:	mov	x15, xzr
  41d544:	mov	w13, wzr
  41d548:	ldr	x23, [x8]
  41d54c:	mov	w0, #0x1                   	// #1
  41d550:	mov	w28, #0x1                   	// #1
  41d554:	mov	w20, #0x596                 	// #1430
  41d558:	b	41daf8 <feof@plt+0x1a258>
  41d55c:	mov	w8, #0x854f                	// #34127
  41d560:	movk	w8, #0x2, lsl #16
  41d564:	lsr	x8, x8, x21
  41d568:	adrp	x24, 491000 <_obstack_memory_used@@Base+0x152fc>
  41d56c:	mvn	w8, w8
  41d570:	add	x24, x24, #0xcb0
  41d574:	mov	w21, #0x60                  	// #96
  41d578:	and	x9, x8, #0x1
  41d57c:	madd	x16, x25, x21, x24
  41d580:	cbz	x9, 41d67c <feof@plt+0x19ddc>
  41d584:	ldur	w23, [x29, #-44]
  41d588:	ldr	x20, [sp, #64]
  41d58c:	ldur	w14, [x29, #-56]
  41d590:	madd	x8, x25, x21, x24
  41d594:	ldrh	w8, [x8, #64]
  41d598:	ldur	x10, [x29, #-24]
  41d59c:	madd	x11, x25, x21, x24
  41d5a0:	ldr	w12, [x11, #72]
  41d5a4:	ldr	x15, [x11, #24]
  41d5a8:	add	w28, w10, #0x1
  41d5ac:	ldr	w10, [x11, #60]
  41d5b0:	cmp	w12, #0x4
  41d5b4:	csel	x0, xzr, x9, eq  // eq = none
  41d5b8:	and	w9, w8, #0x1
  41d5bc:	tbz	w10, #23, 41d5c8 <feof@plt+0x19d28>
  41d5c0:	tbz	w23, #19, 41d620 <feof@plt+0x19d80>
  41d5c4:	tbz	w8, #5, 41d620 <feof@plt+0x19d80>
  41d5c8:	mov	w11, wzr
  41d5cc:	mov	w22, wzr
  41d5d0:	tbz	w10, #22, 41d630 <feof@plt+0x19d90>
  41d5d4:	ldp	x13, x12, [x29, #-24]
  41d5d8:	ldr	x12, [x12, w13, uxtw #3]
  41d5dc:	madd	x13, x25, x21, x24
  41d5e0:	ldrb	w13, [x13, #52]
  41d5e4:	add	x12, x12, x13
  41d5e8:	add	x19, x12, w14, sxtw
  41d5ec:	ldrb	w13, [x19, #1]!
  41d5f0:	mov	w12, wzr
  41d5f4:	tbnz	w8, #8, 41d6b8 <feof@plt+0x19e18>
  41d5f8:	cbnz	w13, 41d6b8 <feof@plt+0x19e18>
  41d5fc:	cbz	w11, 41d670 <feof@plt+0x19dd0>
  41d600:	ldur	x11, [x29, #-16]
  41d604:	ldr	x19, [x11, w28, uxtw #3]
  41d608:	ldur	x11, [x29, #-24]
  41d60c:	cmp	x19, #0x0
  41d610:	orr	w11, w11, #0x2
  41d614:	cset	w12, ne  // ne = any
  41d618:	csel	w28, w28, w11, eq  // eq = none
  41d61c:	b	41d6b4 <feof@plt+0x19e14>
  41d620:	ubfx	w11, w8, #1, #2
  41d624:	add	w22, w11, #0x1
  41d628:	mov	w11, #0x1                   	// #1
  41d62c:	tbnz	w10, #22, 41d5d4 <feof@plt+0x19d34>
  41d630:	cbz	w11, 41d670 <feof@plt+0x19dd0>
  41d634:	ldur	x11, [x29, #-16]
  41d638:	ldr	x19, [x11, w28, uxtw #3]
  41d63c:	cbz	w22, 41d69c <feof@plt+0x19dfc>
  41d640:	ldr	x13, [sp, #8]
  41d644:	add	x12, x28, x20
  41d648:	mov	x11, xzr
  41d64c:	add	x12, x13, x12, lsl #3
  41d650:	sub	x12, x12, #0x8
  41d654:	ldr	x13, [x12, x11, lsl #3]
  41d658:	cbz	x13, 41d6a4 <feof@plt+0x19e04>
  41d65c:	add	x11, x11, #0x1
  41d660:	cmp	x22, x11
  41d664:	b.ne	41d654 <feof@plt+0x19db4>  // b.any
  41d668:	mov	w11, w22
  41d66c:	b	41d6a8 <feof@plt+0x19e08>
  41d670:	mov	w12, wzr
  41d674:	mov	x19, xzr
  41d678:	b	41d6b8 <feof@plt+0x19e18>
  41d67c:	madd	x8, x25, x21, x24
  41d680:	ldrh	w8, [x8, #64]
  41d684:	ldur	w23, [x29, #-44]
  41d688:	ldur	w14, [x29, #-56]
  41d68c:	tbnz	w8, #7, 41de48 <feof@plt+0x1a5a8>
  41d690:	ldr	x20, [sp, #64]
  41d694:	mov	x9, xzr
  41d698:	b	41d598 <feof@plt+0x19cf8>
  41d69c:	mov	w11, wzr
  41d6a0:	b	41d6a8 <feof@plt+0x19e08>
  41d6a4:	orr	w9, w9, #0x2
  41d6a8:	cmp	x19, #0x0
  41d6ac:	add	w28, w11, w28
  41d6b0:	cset	w12, ne  // ne = any
  41d6b4:	mov	w11, #0x1                   	// #1
  41d6b8:	madd	x13, x25, x21, x24
  41d6bc:	ldrh	w20, [x13, #48]
  41d6c0:	and	w10, w10, #0x400000
  41d6c4:	cmp	x19, #0x0
  41d6c8:	cset	w14, eq  // eq = none
  41d6cc:	orr	w10, w11, w10, lsr #22
  41d6d0:	orr	w11, w9, #0x2
  41d6d4:	tst	w10, w14
  41d6d8:	csel	w13, w11, w9, ne  // ne = any
  41d6dc:	cmp	x20, #0x595
  41d6e0:	b.eq	41d720 <feof@plt+0x19e80>  // b.none
  41d6e4:	eor	w9, w12, #0x1
  41d6e8:	and	w9, w9, w8, lsr #3
  41d6ec:	tbnz	w9, #0, 41d720 <feof@plt+0x19e80>
  41d6f0:	sub	w9, w20, #0x597
  41d6f4:	and	w9, w9, #0xffff
  41d6f8:	cmp	w9, #0x1
  41d6fc:	b.hi	41d93c <feof@plt+0x1a09c>  // b.pmore
  41d700:	madd	x8, x25, x21, x24
  41d704:	ldr	x8, [x8, #32]
  41d708:	cbnz	x8, 41e2a8 <feof@plt+0x1aa08>
  41d70c:	madd	x8, x25, x21, x24
  41d710:	ldr	x8, [x8, #40]
  41d714:	cbnz	x8, 41e2c0 <feof@plt+0x1aa20>
  41d718:	mov	x19, xzr
  41d71c:	b	41d724 <feof@plt+0x19e84>
  41d720:	mov	x20, x25
  41d724:	ldr	w9, [x16, #60]
  41d728:	ands	w8, w9, w23
  41d72c:	b.eq	41d74c <feof@plt+0x19eac>  // b.none
  41d730:	mov	w10, #0xfff                 	// #4095
  41d734:	movk	w10, #0x8, lsl #16
  41d738:	tst	w9, w10
  41d73c:	b.eq	41d77c <feof@plt+0x19edc>  // b.none
  41d740:	tbz	w9, #20, 41d77c <feof@plt+0x19edc>
  41d744:	and	w8, w8, #0xffcfffff
  41d748:	cbnz	w8, 41d77c <feof@plt+0x19edc>
  41d74c:	adrp	x21, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  41d750:	orr	w13, w13, #0x4
  41d754:	add	x21, x21, #0x6a2
  41d758:	stur	x22, [x29, #-32]
  41d75c:	cbz	x19, 41d7e4 <feof@plt+0x19f44>
  41d760:	ldrh	w8, [x16, #64]
  41d764:	tbnz	w8, #11, 41d7ec <feof@plt+0x19f4c>
  41d768:	mov	w25, w23
  41d76c:	mov	x23, x19
  41d770:	tst	w8, #0x600
  41d774:	b.ne	41d8f0 <feof@plt+0x1a050>  // b.any
  41d778:	b	41d9a8 <feof@plt+0x1a108>
  41d77c:	stur	x20, [x29, #-56]
  41d780:	mov	x20, x0
  41d784:	ldr	x0, [x16]
  41d788:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41d78c:	add	x1, x1, #0x953
  41d790:	mov	w27, w23
  41d794:	mov	w25, w13
  41d798:	mov	x23, x15
  41d79c:	mov	x26, x16
  41d7a0:	bl	403640 <strcmp@plt>
  41d7a4:	cbnz	w0, 41d7b8 <feof@plt+0x19f18>
  41d7a8:	ldr	x0, [sp, #40]
  41d7ac:	mov	w1, #0x2c                  	// #44
  41d7b0:	bl	403210 <strchr@plt>
  41d7b4:	cbz	x0, 41df20 <feof@plt+0x1a680>
  41d7b8:	mov	x0, x20
  41d7bc:	ldur	x20, [x29, #-56]
  41d7c0:	adrp	x21, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  41d7c4:	add	x21, x21, #0x6a2
  41d7c8:	mov	x15, x23
  41d7cc:	mov	x16, x26
  41d7d0:	mov	w13, w25
  41d7d4:	mov	w23, w27
  41d7d8:	mov	w27, #0x58                  	// #88
  41d7dc:	stur	x22, [x29, #-32]
  41d7e0:	cbnz	x19, 41d760 <feof@plt+0x19ec0>
  41d7e4:	mov	x23, xzr
  41d7e8:	b	41daf8 <feof@plt+0x1a258>
  41d7ec:	stur	x20, [x29, #-56]
  41d7f0:	mov	x20, x0
  41d7f4:	mov	x0, x19
  41d7f8:	mov	w25, w23
  41d7fc:	str	w13, [sp, #40]
  41d800:	mov	x27, x16
  41d804:	mov	x24, x15
  41d808:	bl	4030b0 <strlen@plt>
  41d80c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41d810:	add	x8, x8, #0x150
  41d814:	ldp	x8, x9, [x8]
  41d818:	add	x22, x0, #0x1
  41d81c:	mov	x26, x0
  41d820:	sub	x9, x9, x8
  41d824:	cmp	x9, x22
  41d828:	b.cs	41d84c <feof@plt+0x19fac>  // b.hs, b.nlast
  41d82c:	adrp	x21, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41d830:	add	x21, x21, #0x138
  41d834:	mov	x0, x21
  41d838:	mov	x1, x22
  41d83c:	bl	47bae8 <_obstack_newchunk@@Base>
  41d840:	ldr	x8, [x21, #24]
  41d844:	adrp	x21, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  41d848:	add	x21, x21, #0x6a2
  41d84c:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41d850:	add	x9, x9, #0x148
  41d854:	ldr	x23, [x9]
  41d858:	add	x8, x8, x22
  41d85c:	str	x8, [x9, #8]
  41d860:	cmp	x8, x23
  41d864:	b.ne	41d878 <feof@plt+0x19fd8>  // b.any
  41d868:	adrp	x10, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41d86c:	ldrb	w9, [x10, #392]
  41d870:	orr	w9, w9, #0x2
  41d874:	strb	w9, [x10, #392]
  41d878:	adrp	x13, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41d87c:	add	x13, x13, #0x140
  41d880:	ldr	x9, [x13, #40]
  41d884:	ldr	x10, [x13]
  41d888:	ldr	x11, [x13, #24]
  41d88c:	mov	x0, x20
  41d890:	add	x8, x9, x8
  41d894:	bic	x8, x8, x9
  41d898:	sub	x12, x11, x10
  41d89c:	sub	x9, x8, x10
  41d8a0:	cmp	x9, x12
  41d8a4:	csel	x8, x11, x8, hi  // hi = pmore
  41d8a8:	mov	x15, x24
  41d8ac:	mov	x16, x27
  41d8b0:	stp	x8, x8, [x13, #8]
  41d8b4:	cbz	x26, 41d8d4 <feof@plt+0x1a034>
  41d8b8:	mov	x8, x23
  41d8bc:	mov	x9, x26
  41d8c0:	ldrb	w10, [x19], #1
  41d8c4:	subs	x9, x9, #0x1
  41d8c8:	ldrb	w10, [x21, x10]
  41d8cc:	strb	w10, [x8], #1
  41d8d0:	b.ne	41d8c0 <feof@plt+0x1a020>  // b.any
  41d8d4:	strb	wzr, [x23, x26]
  41d8d8:	ldrh	w8, [x16, #64]
  41d8dc:	ldur	x20, [x29, #-56]
  41d8e0:	ldr	w13, [sp, #40]
  41d8e4:	mov	w27, #0x58                  	// #88
  41d8e8:	tst	w8, #0x600
  41d8ec:	b.eq	41d9a8 <feof@plt+0x1a108>  // b.none
  41d8f0:	stur	wzr, [x29, #-4]
  41d8f4:	ldrb	w9, [x23]
  41d8f8:	cbz	w9, 41d934 <feof@plt+0x1a094>
  41d8fc:	ubfx	w2, w8, #13, #1
  41d900:	sub	x1, x29, #0x4
  41d904:	mov	x0, x23
  41d908:	mov	w22, w13
  41d90c:	mov	x21, x16
  41d910:	mov	x19, x15
  41d914:	bl	41c84c <feof@plt+0x18fac>
  41d918:	ldur	w8, [x29, #-4]
  41d91c:	cbz	w8, 41d97c <feof@plt+0x1a0dc>
  41d920:	mov	w13, w22
  41d924:	orr	w13, w22, #0x8
  41d928:	mov	x15, x19
  41d92c:	mov	x16, x21
  41d930:	b	41d988 <feof@plt+0x1a0e8>
  41d934:	mov	x0, xzr
  41d938:	b	41d988 <feof@plt+0x1a0e8>
  41d93c:	madd	x16, x20, x21, x24
  41d940:	ldrh	w9, [x16, #48]
  41d944:	cmp	w9, #0x595
  41d948:	b.eq	41d958 <feof@plt+0x1a0b8>  // b.none
  41d94c:	madd	x9, x20, x21, x24
  41d950:	ldrb	w9, [x9, #64]
  41d954:	tbz	w9, #3, 41e2d8 <feof@plt+0x1aa38>
  41d958:	madd	x9, x25, x21, x24
  41d95c:	ldp	x9, x10, [x9, #32]
  41d960:	cbz	x10, 41de68 <feof@plt+0x1a5c8>
  41d964:	cbz	x9, 41e2f0 <feof@plt+0x1aa50>
  41d968:	cbnz	x19, 41e308 <feof@plt+0x1aa68>
  41d96c:	tbnz	w8, #4, 41e320 <feof@plt+0x1aa80>
  41d970:	cmp	x0, #0x0
  41d974:	csel	x9, x10, x9, eq  // eq = none
  41d978:	b	41de78 <feof@plt+0x1a5d8>
  41d97c:	mov	x15, x19
  41d980:	mov	x16, x21
  41d984:	mov	w13, w22
  41d988:	ldrsw	x8, [x16, #92]
  41d98c:	cmn	w8, #0x1
  41d990:	b.eq	41d9a8 <feof@plt+0x1a108>  // b.none
  41d994:	ldrsw	x9, [x16, #88]
  41d998:	cmp	x0, x9
  41d99c:	ccmp	x0, x8, #0x0, ge  // ge = tcont
  41d9a0:	orr	w8, w13, #0x10
  41d9a4:	csel	w13, w8, w13, gt
  41d9a8:	ldr	w8, [x16, #72]
  41d9ac:	cmp	w8, #0x6
  41d9b0:	b.ne	41daf8 <feof@plt+0x1a258>  // b.any
  41d9b4:	cmp	x0, #0x1
  41d9b8:	b.ne	41e338 <feof@plt+0x1aa98>  // b.any
  41d9bc:	ldrh	w8, [x16, #68]
  41d9c0:	adrp	x10, 490000 <_obstack_memory_used@@Base+0x142fc>
  41d9c4:	mov	w9, #0x30                  	// #48
  41d9c8:	add	x10, x10, #0x608
  41d9cc:	madd	x8, x8, x9, x10
  41d9d0:	ldr	x19, [x8, #16]
  41d9d4:	mov	w27, w13
  41d9d8:	mov	x26, x20
  41d9dc:	mov	x20, x15
  41d9e0:	ldr	x21, [x19]
  41d9e4:	cbz	x21, 41da8c <feof@plt+0x1a1ec>
  41d9e8:	mov	x22, xzr
  41d9ec:	mov	w24, #0x1                   	// #1
  41d9f0:	mov	x1, x21
  41d9f4:	b	41da0c <feof@plt+0x1a16c>
  41d9f8:	mov	w22, w24
  41d9fc:	lsl	x8, x22, #4
  41da00:	ldr	x1, [x19, x8]
  41da04:	add	w24, w24, #0x1
  41da08:	cbz	x1, 41da8c <feof@plt+0x1a1ec>
  41da0c:	mov	x0, x23
  41da10:	bl	403640 <strcmp@plt>
  41da14:	cbnz	w0, 41d9f8 <feof@plt+0x1a158>
  41da18:	tbnz	w25, #19, 41da28 <feof@plt+0x1a188>
  41da1c:	add	x8, x19, x22, lsl #4
  41da20:	ldrb	w8, [x8, #12]
  41da24:	tbnz	w8, #1, 41d9f8 <feof@plt+0x1a158>
  41da28:	add	x8, x19, x22, lsl #4
  41da2c:	ldrsw	x0, [x8, #8]
  41da30:	mov	x10, xzr
  41da34:	mov	w9, #0x1                   	// #1
  41da38:	mov	x8, x21
  41da3c:	mov	x15, x20
  41da40:	mov	x20, x26
  41da44:	mov	w13, w27
  41da48:	mov	w27, #0x58                  	// #88
  41da4c:	b	41da64 <feof@plt+0x1a1c4>
  41da50:	mov	w10, w9
  41da54:	lsl	x8, x10, #4
  41da58:	ldr	x8, [x19, x8]
  41da5c:	add	w9, w9, #0x1
  41da60:	cbz	x8, 41daa8 <feof@plt+0x1a208>
  41da64:	add	x10, x19, x10, lsl #4
  41da68:	ldr	w11, [x10, #8]
  41da6c:	cmp	w11, w0
  41da70:	b.ne	41da50 <feof@plt+0x1a1b0>  // b.any
  41da74:	ldr	w10, [x10, #12]
  41da78:	tbz	w10, #0, 41da50 <feof@plt+0x1a1b0>
  41da7c:	mov	x1, x8
  41da80:	tbnz	w25, #19, 41daf0 <feof@plt+0x1a250>
  41da84:	tbnz	w10, #1, 41da50 <feof@plt+0x1a1b0>
  41da88:	b	41daf0 <feof@plt+0x1a250>
  41da8c:	mov	w13, w27
  41da90:	orr	w13, w27, #0x20
  41da94:	mov	w0, #0x1                   	// #1
  41da98:	mov	x15, x20
  41da9c:	mov	x20, x26
  41daa0:	mov	w27, #0x58                  	// #88
  41daa4:	b	41daf8 <feof@plt+0x1a258>
  41daa8:	mov	x9, xzr
  41daac:	mov	w8, #0x1                   	// #1
  41dab0:	b	41dac8 <feof@plt+0x1a228>
  41dab4:	mov	w9, w8
  41dab8:	lsl	x10, x9, #4
  41dabc:	ldr	x21, [x19, x10]
  41dac0:	add	w8, w8, #0x1
  41dac4:	cbz	x21, 41e260 <feof@plt+0x1a9c0>
  41dac8:	add	x10, x19, x9, lsl #4
  41dacc:	ldr	w10, [x10, #8]
  41dad0:	cmp	w10, w0
  41dad4:	b.ne	41dab4 <feof@plt+0x1a214>  // b.any
  41dad8:	tbnz	w25, #19, 41dae8 <feof@plt+0x1a248>
  41dadc:	add	x9, x19, x9, lsl #4
  41dae0:	ldrb	w9, [x9, #12]
  41dae4:	tbnz	w9, #1, 41dab4 <feof@plt+0x1a214>
  41dae8:	mov	x8, x21
  41daec:	mov	x1, x23
  41daf0:	mov	x23, x1
  41daf4:	cbz	x8, 41e260 <feof@plt+0x1a9c0>
  41daf8:	ldur	x8, [x29, #-64]
  41dafc:	ldur	x9, [x29, #-40]
  41db00:	cmp	w28, #0x1
  41db04:	mov	w22, w8
  41db08:	ldr	x8, [sp, #72]
  41db0c:	str	x20, [x8]
  41db10:	madd	x8, x22, x27, x9
  41db14:	str	x0, [x8, #72]
  41db18:	str	w13, [x8, #80]
  41db1c:	stp	x15, x23, [x8, #8]
  41db20:	b.eq	41db2c <feof@plt+0x1a28c>  // b.none
  41db24:	cmp	x20, #0x596
  41db28:	b.eq	41e278 <feof@plt+0x1a9d8>  // b.none
  41db2c:	cbz	w28, 41e248 <feof@plt+0x1a9a8>
  41db30:	cmp	w28, #0x5
  41db34:	b.cs	41e248 <feof@plt+0x1a9a8>  // b.hs, b.nlast
  41db38:	mov	w21, w28
  41db3c:	madd	x26, x22, x27, x9
  41db40:	mov	w8, #0x58                  	// #88
  41db44:	mov	x27, x20
  41db48:	subs	x20, x20, #0x596
  41db4c:	str	x21, [x26, #64]!
  41db50:	stur	x0, [x29, #-56]
  41db54:	b.ne	41db70 <feof@plt+0x1a2d0>  // b.any
  41db58:	ldur	x10, [x29, #-16]
  41db5c:	madd	x8, x22, x8, x9
  41db60:	mov	w24, #0x58                  	// #88
  41db64:	ldr	x0, [x10]
  41db68:	str	x0, [x8, #32]
  41db6c:	b	41db84 <feof@plt+0x1a2e4>
  41db70:	madd	x8, x22, x8, x9
  41db74:	str	xzr, [x8, #32]
  41db78:	ldur	x8, [x29, #-16]
  41db7c:	mov	w24, #0x58                  	// #88
  41db80:	ldr	x0, [x8]
  41db84:	bl	4030b0 <strlen@plt>
  41db88:	cmp	x0, #0x0
  41db8c:	mov	w8, #0x3                   	// #3
  41db90:	csinc	x19, x8, x0, eq  // eq = none
  41db94:	subs	w25, w28, #0x1
  41db98:	b.ls	41dbbc <feof@plt+0x1a31c>  // b.plast
  41db9c:	ldur	x8, [x29, #-40]
  41dba0:	cmp	x27, #0x596
  41dba4:	b.ne	41dbcc <feof@plt+0x1a32c>  // b.any
  41dba8:	ldur	x9, [x29, #-16]
  41dbac:	madd	x8, x22, x24, x8
  41dbb0:	ldr	x0, [x9, #8]
  41dbb4:	str	x0, [x8, #40]
  41dbb8:	b	41dbdc <feof@plt+0x1a33c>
  41dbbc:	ldur	x10, [x29, #-40]
  41dbc0:	madd	x8, x22, x24, x10
  41dbc4:	str	xzr, [x8, #40]
  41dbc8:	b	41dc18 <feof@plt+0x1a378>
  41dbcc:	madd	x8, x22, x24, x8
  41dbd0:	str	xzr, [x8, #40]
  41dbd4:	ldur	x8, [x29, #-16]
  41dbd8:	ldr	x0, [x8, #8]
  41dbdc:	bl	4030b0 <strlen@plt>
  41dbe0:	ldur	x10, [x29, #-40]
  41dbe4:	cmp	x0, #0x0
  41dbe8:	mov	w8, #0x3                   	// #3
  41dbec:	csinc	x8, x8, x0, eq  // eq = none
  41dbf0:	cmp	w28, #0x2
  41dbf4:	add	x19, x8, x19
  41dbf8:	b.ls	41dc18 <feof@plt+0x1a378>  // b.plast
  41dbfc:	cmp	x27, #0x596
  41dc00:	b.ne	41ddc4 <feof@plt+0x1a524>  // b.any
  41dc04:	ldur	x8, [x29, #-16]
  41dc08:	ldr	x0, [x8, #16]
  41dc0c:	madd	x8, x22, x24, x10
  41dc10:	str	x0, [x8, #48]
  41dc14:	b	41ddd4 <feof@plt+0x1a534>
  41dc18:	mov	w9, #0x58                  	// #88
  41dc1c:	madd	x8, x22, x9, x10
  41dc20:	str	xzr, [x8, #48]
  41dc24:	madd	x8, x22, x9, x10
  41dc28:	str	xzr, [x8, #56]
  41dc2c:	cmp	x20, #0x3
  41dc30:	b.cc	41dcac <feof@plt+0x1a40c>  // b.lo, b.ul, b.last
  41dc34:	ldur	x2, [x29, #-56]
  41dc38:	ldr	x3, [sp, #72]
  41dc3c:	mov	x0, x27
  41dc40:	mov	x1, x23
  41dc44:	bl	41e66c <feof@plt+0x1adcc>
  41dc48:	ldur	x8, [x29, #-32]
  41dc4c:	cmp	w8, #0x2
  41dc50:	b.cc	41dcac <feof@plt+0x1a40c>  // b.lo, b.ul, b.last
  41dc54:	ldur	x9, [x29, #-64]
  41dc58:	ldr	x10, [sp]
  41dc5c:	mov	w11, #0x58                  	// #88
  41dc60:	mov	x8, xzr
  41dc64:	umaddl	x9, w9, w11, x10
  41dc68:	ldr	x10, [sp, #64]
  41dc6c:	ldp	x13, x11, [x29, #-32]
  41dc70:	add	x10, x11, x10
  41dc74:	ldr	x11, [sp, #8]
  41dc78:	add	x10, x11, x10, lsl #3
  41dc7c:	ldr	x11, [x10, x8, lsl #3]
  41dc80:	cbz	x11, 41dc9c <feof@plt+0x1a3fc>
  41dc84:	add	x12, x8, #0x1
  41dc88:	cmp	x13, x12
  41dc8c:	str	x11, [x9, x8, lsl #3]
  41dc90:	mov	x8, x12
  41dc94:	b.ne	41dc7c <feof@plt+0x1a3dc>  // b.any
  41dc98:	mov	w8, w13
  41dc9c:	add	w8, w8, #0x1
  41dca0:	cmp	w28, w8
  41dca4:	b.ne	41e350 <feof@plt+0x1aab0>  // b.any
  41dca8:	str	x21, [x26]
  41dcac:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41dcb0:	add	x8, x8, #0x150
  41dcb4:	ldp	x8, x9, [x8]
  41dcb8:	sub	x9, x9, x8
  41dcbc:	cmp	x9, x19
  41dcc0:	b.cs	41dcdc <feof@plt+0x1a43c>  // b.hs, b.nlast
  41dcc4:	adrp	x20, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41dcc8:	add	x20, x20, #0x138
  41dccc:	mov	x0, x20
  41dcd0:	mov	x1, x19
  41dcd4:	bl	47bae8 <_obstack_newchunk@@Base>
  41dcd8:	ldr	x8, [x20, #24]
  41dcdc:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41dce0:	add	x9, x9, #0x148
  41dce4:	ldr	x20, [x9]
  41dce8:	ldr	x24, [sp, #56]
  41dcec:	ldr	w26, [sp, #52]
  41dcf0:	add	x8, x8, x19
  41dcf4:	cmp	x8, x20
  41dcf8:	mov	w27, #0x58                  	// #88
  41dcfc:	str	x8, [x9, #8]
  41dd00:	b.ne	41dd14 <feof@plt+0x1a474>  // b.any
  41dd04:	adrp	x10, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41dd08:	ldrb	w9, [x10, #392]
  41dd0c:	orr	w9, w9, #0x2
  41dd10:	strb	w9, [x10, #392]
  41dd14:	adrp	x14, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41dd18:	add	x14, x14, #0x140
  41dd1c:	ldr	x9, [x14, #40]
  41dd20:	ldr	x10, [x14]
  41dd24:	ldr	x11, [x14, #24]
  41dd28:	ldur	x12, [x29, #-40]
  41dd2c:	add	x8, x9, x8
  41dd30:	bic	x8, x8, x9
  41dd34:	sub	x13, x11, x10
  41dd38:	sub	x9, x8, x10
  41dd3c:	cmp	x9, x13
  41dd40:	mov	x23, xzr
  41dd44:	madd	x12, x22, x27, x12
  41dd48:	csel	x8, x11, x8, hi  // hi = pmore
  41dd4c:	stp	x8, x8, [x14, #8]
  41dd50:	str	x20, [x12, #24]
  41dd54:	b	41dd88 <feof@plt+0x1a4e8>
  41dd58:	mov	x0, x20
  41dd5c:	mov	x1, x22
  41dd60:	mov	x2, x19
  41dd64:	bl	402fc0 <memcpy@plt>
  41dd68:	cmp	x25, x23
  41dd6c:	cset	w8, ne  // ne = any
  41dd70:	add	x20, x20, x19
  41dd74:	add	x23, x23, #0x1
  41dd78:	lsl	w8, w8, #5
  41dd7c:	cmp	x23, x21
  41dd80:	strb	w8, [x20], #1
  41dd84:	b.cs	41ddac <feof@plt+0x1a50c>  // b.hs, b.nlast
  41dd88:	ldur	x8, [x29, #-16]
  41dd8c:	ldr	x22, [x8, x23, lsl #3]
  41dd90:	mov	x0, x22
  41dd94:	bl	4030b0 <strlen@plt>
  41dd98:	mov	x19, x0
  41dd9c:	cbnz	x0, 41dd58 <feof@plt+0x1a4b8>
  41dda0:	mov	w8, #0x2222                	// #8738
  41dda4:	strh	w8, [x20], #2
  41dda8:	b	41dd68 <feof@plt+0x1a4c8>
  41ddac:	ldur	w23, [x29, #-44]
  41ddb0:	ldur	x21, [x29, #-64]
  41ddb4:	ldur	x0, [x29, #-40]
  41ddb8:	ldr	x20, [sp, #64]
  41ddbc:	mov	w10, #0x59a                 	// #1434
  41ddc0:	b	41d354 <feof@plt+0x19ab4>
  41ddc4:	madd	x8, x22, x24, x10
  41ddc8:	str	xzr, [x8, #48]
  41ddcc:	ldur	x8, [x29, #-16]
  41ddd0:	ldr	x0, [x8, #16]
  41ddd4:	bl	4030b0 <strlen@plt>
  41ddd8:	ldur	x10, [x29, #-40]
  41dddc:	cmp	x0, #0x0
  41dde0:	mov	w8, #0x3                   	// #3
  41dde4:	csinc	x8, x8, x0, eq  // eq = none
  41dde8:	cmp	w28, #0x3
  41ddec:	add	x19, x8, x19
  41ddf0:	mov	w9, #0x58                  	// #88
  41ddf4:	b.ls	41dc24 <feof@plt+0x1a384>  // b.plast
  41ddf8:	mov	w8, #0x58                  	// #88
  41ddfc:	cmp	x27, #0x596
  41de00:	b.ne	41de18 <feof@plt+0x1a578>  // b.any
  41de04:	ldur	x9, [x29, #-16]
  41de08:	madd	x8, x22, x8, x10
  41de0c:	ldr	x0, [x9, #24]
  41de10:	str	x0, [x8, #56]
  41de14:	b	41de28 <feof@plt+0x1a588>
  41de18:	madd	x8, x22, x8, x10
  41de1c:	str	xzr, [x8, #56]
  41de20:	ldur	x8, [x29, #-16]
  41de24:	ldr	x0, [x8, #24]
  41de28:	bl	4030b0 <strlen@plt>
  41de2c:	cmp	x0, #0x0
  41de30:	mov	w8, #0x3                   	// #3
  41de34:	csinc	x8, x8, x0, eq  // eq = none
  41de38:	add	x19, x8, x19
  41de3c:	cmp	x20, #0x3
  41de40:	b.cc	41dcac <feof@plt+0x1a40c>  // b.lo, b.ul, b.last
  41de44:	b	41dc34 <feof@plt+0x1a394>
  41de48:	ldur	x8, [x29, #-16]
  41de4c:	mov	x0, xzr
  41de50:	mov	x15, xzr
  41de54:	mov	w28, #0x1                   	// #1
  41de58:	ldr	x23, [x8]
  41de5c:	mov	w13, #0x40                  	// #64
  41de60:	stur	xzr, [x29, #-32]
  41de64:	b	41d554 <feof@plt+0x19cb4>
  41de68:	cbz	x9, 41dfe8 <feof@plt+0x1a748>
  41de6c:	cbz	x0, 41e368 <feof@plt+0x1aac8>
  41de70:	cbnz	x19, 41e380 <feof@plt+0x1aae0>
  41de74:	tbnz	w8, #4, 41e398 <feof@plt+0x1aaf8>
  41de78:	mov	w0, #0x1                   	// #1
  41de7c:	mov	x19, x9
  41de80:	cbnz	x0, 41de90 <feof@plt+0x1a5f0>
  41de84:	madd	x8, x20, x21, x24
  41de88:	ldrb	w8, [x8, #64]
  41de8c:	tbnz	w8, #7, 41e3b0 <feof@plt+0x1ab10>
  41de90:	madd	x8, x20, x21, x24
  41de94:	ldr	w9, [x8, #60]
  41de98:	ldrh	w8, [x8, #64]
  41de9c:	tbnz	w9, #23, 41deb0 <feof@plt+0x1a610>
  41dea0:	mov	w10, wzr
  41dea4:	cmp	w22, #0x1
  41dea8:	b.ls	41decc <feof@plt+0x1a62c>  // b.plast
  41deac:	b	41ded4 <feof@plt+0x1a634>
  41deb0:	tst	w23, #0x80000
  41deb4:	cset	w10, eq  // eq = none
  41deb8:	tst	w8, #0x20
  41debc:	cset	w11, eq  // eq = none
  41dec0:	orr	w10, w10, w11
  41dec4:	cmp	w22, #0x1
  41dec8:	b.hi	41ded4 <feof@plt+0x1a634>  // b.pmore
  41decc:	and	w11, w8, #0x6
  41ded0:	cbz	w11, 41dee4 <feof@plt+0x1a644>
  41ded4:	ubfx	w11, w8, #1, #2
  41ded8:	add	w11, w11, #0x1
  41dedc:	cmp	w22, w11
  41dee0:	b.ne	41e3c8 <feof@plt+0x1ab28>  // b.any
  41dee4:	tbnz	w13, #1, 41df6c <feof@plt+0x1a6cc>
  41dee8:	tst	w9, #0x400000
  41deec:	cset	w9, eq  // eq = none
  41def0:	eor	w10, w10, #0x1
  41def4:	and	w9, w9, w10
  41def8:	tbnz	w9, #0, 41df68 <feof@plt+0x1a6c8>
  41defc:	cmp	x19, #0x0
  41df00:	and	w9, w8, #0x100
  41df04:	cset	w10, eq  // eq = none
  41df08:	tst	w10, w9, lsr #8
  41df0c:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41df10:	add	x9, x9, #0x23b
  41df14:	csel	x19, x9, x19, ne  // ne = any
  41df18:	cbnz	x19, 41df6c <feof@plt+0x1a6cc>
  41df1c:	b	41e3e0 <feof@plt+0x1ab40>
  41df20:	ldr	x8, [sp, #32]
  41df24:	add	x0, x8, #0x7
  41df28:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  41df2c:	mov	w8, #0x57                  	// #87
  41df30:	mov	w1, w27
  41df34:	strb	w8, [x0]
  41df38:	bl	41c618 <feof@plt+0x18d78>
  41df3c:	cmp	x0, #0x596
  41df40:	b.ne	41df94 <feof@plt+0x1a6f4>  // b.any
  41df44:	mov	x0, x20
  41df48:	mov	x15, x23
  41df4c:	ldur	x20, [x29, #-56]
  41df50:	ldur	w23, [x29, #-44]
  41df54:	adrp	x21, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  41df58:	add	x21, x21, #0x6a2
  41df5c:	mov	x16, x26
  41df60:	mov	w13, w25
  41df64:	b	41d7d8 <feof@plt+0x19f38>
  41df68:	cbnz	x19, 41e3f8 <feof@plt+0x1ab58>
  41df6c:	madd	x9, x20, x21, x24
  41df70:	ldr	x9, [x9, #24]
  41df74:	cbz	x9, 41df80 <feof@plt+0x1a6e0>
  41df78:	cbz	x15, 41df84 <feof@plt+0x1a6e4>
  41df7c:	b	41e410 <feof@plt+0x1ab70>
  41df80:	mov	x9, x15
  41df84:	and	w8, w8, #0x1
  41df88:	orr	w13, w13, w8
  41df8c:	mov	x15, x9
  41df90:	b	41d724 <feof@plt+0x19e84>
  41df94:	madd	x8, x0, x21, x24
  41df98:	ldr	w9, [x8, #60]
  41df9c:	ldur	w8, [x29, #-44]
  41dfa0:	mov	x0, x20
  41dfa4:	mov	x15, x23
  41dfa8:	mov	x16, x26
  41dfac:	ands	w8, w9, w8
  41dfb0:	mov	w13, w25
  41dfb4:	b.eq	41e010 <feof@plt+0x1a770>  // b.none
  41dfb8:	mov	w11, #0xfff                 	// #4095
  41dfbc:	movk	w11, #0x8, lsl #16
  41dfc0:	tst	w9, w11
  41dfc4:	and	w10, w9, #0x100000
  41dfc8:	cset	w9, ne  // ne = any
  41dfcc:	tst	w8, #0xffcfffff
  41dfd0:	and	w8, w9, w10, lsr #20
  41dfd4:	cset	w9, eq  // eq = none
  41dfd8:	orr	w10, w13, #0x4
  41dfdc:	tst	w8, w9
  41dfe0:	csel	w13, w10, w13, ne  // ne = any
  41dfe4:	b	41e014 <feof@plt+0x1a774>
  41dfe8:	cmp	x0, #0x0
  41dfec:	cset	w9, eq  // eq = none
  41dff0:	tbnz	w8, #4, 41e004 <feof@plt+0x1a764>
  41dff4:	mov	x9, x19
  41dff8:	mov	x19, x9
  41dffc:	cbnz	x0, 41de90 <feof@plt+0x1a5f0>
  41e000:	b	41de84 <feof@plt+0x1a5e4>
  41e004:	mov	x0, x9
  41e008:	cbnz	x0, 41de90 <feof@plt+0x1a5f0>
  41e00c:	b	41de84 <feof@plt+0x1a5e4>
  41e010:	orr	w13, w13, #0x4
  41e014:	ldur	x20, [x29, #-56]
  41e018:	adrp	x21, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  41e01c:	add	x21, x21, #0x6a2
  41e020:	b	41d7d4 <feof@plt+0x19f34>
  41e024:	ldp	x9, x8, [sp, #16]
  41e028:	str	x0, [x9]
  41e02c:	str	w21, [x8]
  41e030:	ldr	x19, [x9]
  41e034:	umull	x0, w21, w27
  41e038:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  41e03c:	mov	x20, x0
  41e040:	cbz	w21, 41e200 <feof@plt+0x1a960>
  41e044:	adrp	x10, 491000 <_obstack_memory_used@@Base+0x152fc>
  41e048:	ldr	w10, [x10, #3240]
  41e04c:	mov	x9, x21
  41e050:	adrp	x2, 491000 <_obstack_memory_used@@Base+0x152fc>
  41e054:	mov	x8, xzr
  41e058:	mov	w21, wzr
  41e05c:	mov	w22, wzr
  41e060:	mov	w9, w9
  41e064:	mov	w11, #0x1                   	// #1
  41e068:	mov	w12, #0x58                  	// #88
  41e06c:	mov	w13, #0x60                  	// #96
  41e070:	add	x2, x2, #0xcb0
  41e074:	madd	x14, x8, x12, x19
  41e078:	ldr	w15, [x14, #80]
  41e07c:	tst	w15, #0xfffffffb
  41e080:	b.ne	41e094 <feof@plt+0x1a7f4>  // b.any
  41e084:	ldr	x15, [x14]
  41e088:	sub	w16, w15, #0x596
  41e08c:	cmp	w16, #0x5
  41e090:	b.cs	41e0d0 <feof@plt+0x1a830>  // b.hs, b.nlast
  41e094:	ldp	q1, q0, [x14]
  41e098:	umaddl	x15, w21, w12, x20
  41e09c:	add	w21, w21, #0x1
  41e0a0:	stp	q1, q0, [x15]
  41e0a4:	ldr	x16, [x14, #80]
  41e0a8:	ldp	q1, q0, [x14, #48]
  41e0ac:	ldr	q2, [x14, #32]
  41e0b0:	str	x16, [x15, #80]
  41e0b4:	stp	q1, q0, [x15, #48]
  41e0b8:	str	q2, [x15, #32]
  41e0bc:	add	x8, x8, #0x1
  41e0c0:	cmp	x8, x9
  41e0c4:	add	x11, x11, #0x1
  41e0c8:	b.ne	41e074 <feof@plt+0x1a7d4>  // b.any
  41e0cc:	b	41e1b4 <feof@plt+0x1a914>
  41e0d0:	cmp	w15, #0x28b
  41e0d4:	b.ne	41e0e0 <feof@plt+0x1a840>  // b.any
  41e0d8:	mov	w22, w8
  41e0dc:	b	41e0bc <feof@plt+0x1a81c>
  41e0e0:	cmp	w10, w15
  41e0e4:	b.ls	41e290 <feof@plt+0x1a9f0>  // b.plast
  41e0e8:	and	x16, x15, #0xffffffff
  41e0ec:	madd	x17, x16, x13, x2
  41e0f0:	ldr	w17, [x17, #56]
  41e0f4:	tbnz	w17, #31, 41e094 <feof@plt+0x1a7f4>
  41e0f8:	madd	x18, x16, x13, x2
  41e0fc:	ldrb	w18, [x18, #62]
  41e100:	tbz	w18, #6, 41e118 <feof@plt+0x1a878>
  41e104:	cmp	w17, w15
  41e108:	b.ne	41e094 <feof@plt+0x1a7f4>  // b.any
  41e10c:	madd	x16, x16, x13, x2
  41e110:	ldrh	w16, [x16, #64]
  41e114:	tbz	w16, #7, 41e094 <feof@plt+0x1a7f4>
  41e118:	add	x16, x8, #0x1
  41e11c:	cmp	x16, x9
  41e120:	b.cs	41e1a8 <feof@plt+0x1a908>  // b.hs, b.nlast
  41e124:	mov	x16, x11
  41e128:	b	41e138 <feof@plt+0x1a898>
  41e12c:	add	x16, x16, #0x1
  41e130:	cmp	w9, w16
  41e134:	b.eq	41e094 <feof@plt+0x1a7f4>  // b.none
  41e138:	madd	x17, x16, x12, x19
  41e13c:	ldr	w17, [x17, #80]
  41e140:	tst	w17, #0xfffffffb
  41e144:	b.ne	41e12c <feof@plt+0x1a88c>  // b.any
  41e148:	mul	x17, x16, x12
  41e14c:	ldr	x17, [x19, x17]
  41e150:	cmp	w10, w17
  41e154:	b.ls	41e12c <feof@plt+0x1a88c>  // b.plast
  41e158:	and	x18, x17, #0xffffffff
  41e15c:	madd	x0, x18, x13, x2
  41e160:	ldr	w0, [x0, #56]
  41e164:	tbnz	w0, #31, 41e12c <feof@plt+0x1a88c>
  41e168:	madd	x1, x18, x13, x2
  41e16c:	ldrb	w1, [x1, #62]
  41e170:	tbz	w1, #6, 41e188 <feof@plt+0x1a8e8>
  41e174:	cmp	w0, w17
  41e178:	b.ne	41e12c <feof@plt+0x1a88c>  // b.any
  41e17c:	madd	x18, x18, x13, x2
  41e180:	ldrh	w18, [x18, #64]
  41e184:	tbz	w18, #7, 41e12c <feof@plt+0x1a88c>
  41e188:	mov	w18, w17
  41e18c:	smaddl	x18, w18, w13, x2
  41e190:	ldr	w18, [x18, #56]
  41e194:	cmp	w18, w15
  41e198:	b.eq	41e1a8 <feof@plt+0x1a908>  // b.none
  41e19c:	cmp	w18, w17
  41e1a0:	b.ne	41e18c <feof@plt+0x1a8ec>  // b.any
  41e1a4:	b	41e12c <feof@plt+0x1a88c>
  41e1a8:	cmp	w9, w16
  41e1ac:	b.eq	41e094 <feof@plt+0x1a7f4>  // b.none
  41e1b0:	b	41e0bc <feof@plt+0x1a81c>
  41e1b4:	cbz	w22, 41e200 <feof@plt+0x1a960>
  41e1b8:	sub	w8, w21, #0x1
  41e1bc:	mov	w23, #0x58                  	// #88
  41e1c0:	add	x0, x20, #0xb0
  41e1c4:	add	x1, x20, #0x58
  41e1c8:	umull	x2, w8, w23
  41e1cc:	bl	403580 <memmove@plt>
  41e1d0:	umaddl	x8, w22, w23, x19
  41e1d4:	ldp	q0, q1, [x8]
  41e1d8:	add	w21, w21, #0x1
  41e1dc:	stur	q0, [x20, #88]
  41e1e0:	stur	q1, [x20, #104]
  41e1e4:	ldp	q0, q2, [x8, #32]
  41e1e8:	ldr	x9, [x8, #80]
  41e1ec:	ldr	q1, [x8, #64]
  41e1f0:	stur	q0, [x20, #120]
  41e1f4:	str	x9, [x20, #168]
  41e1f8:	stur	q1, [x20, #152]
  41e1fc:	stur	q2, [x20, #136]
  41e200:	mov	x0, x19
  41e204:	bl	4031d0 <free@plt>
  41e208:	mov	w8, #0x58                  	// #88
  41e20c:	umull	x1, w21, w8
  41e210:	mov	x0, x20
  41e214:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  41e218:	ldr	x8, [sp, #16]
  41e21c:	str	x0, [x8]
  41e220:	ldr	x8, [sp, #24]
  41e224:	str	w21, [x8]
  41e228:	ldp	x20, x19, [sp, #224]
  41e22c:	ldp	x22, x21, [sp, #208]
  41e230:	ldp	x24, x23, [sp, #192]
  41e234:	ldp	x26, x25, [sp, #176]
  41e238:	ldp	x28, x27, [sp, #160]
  41e23c:	ldp	x29, x30, [sp, #144]
  41e240:	add	sp, sp, #0xf0
  41e244:	ret
  41e248:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e24c:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e250:	add	x0, x0, #0x7f9
  41e254:	add	x2, x2, #0x93d
  41e258:	mov	w1, #0x336                 	// #822
  41e25c:	bl	429434 <feof@plt+0x25b94>
  41e260:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e264:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e268:	add	x0, x0, #0x7f9
  41e26c:	add	x2, x2, #0x93d
  41e270:	mov	w1, #0x326                 	// #806
  41e274:	bl	429434 <feof@plt+0x25b94>
  41e278:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e27c:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e280:	add	x0, x0, #0x7f9
  41e284:	add	x2, x2, #0x93d
  41e288:	mov	w1, #0x334                 	// #820
  41e28c:	bl	429434 <feof@plt+0x25b94>
  41e290:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e294:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e298:	add	x0, x0, #0x7f9
  41e29c:	add	x2, x2, #0x95c
  41e2a0:	mov	w1, #0x408                 	// #1032
  41e2a4:	bl	429434 <feof@plt+0x25b94>
  41e2a8:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e2ac:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e2b0:	add	x0, x0, #0x7f9
  41e2b4:	add	x2, x2, #0x93d
  41e2b8:	mov	w1, #0x2a0                 	// #672
  41e2bc:	bl	429434 <feof@plt+0x25b94>
  41e2c0:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e2c4:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e2c8:	add	x0, x0, #0x7f9
  41e2cc:	add	x2, x2, #0x93d
  41e2d0:	mov	w1, #0x2a1                 	// #673
  41e2d4:	bl	429434 <feof@plt+0x25b94>
  41e2d8:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e2dc:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e2e0:	add	x0, x0, #0x7f9
  41e2e4:	add	x2, x2, #0x93d
  41e2e8:	mov	w1, #0x2ab                 	// #683
  41e2ec:	bl	429434 <feof@plt+0x25b94>
  41e2f0:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e2f4:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e2f8:	add	x0, x0, #0x7f9
  41e2fc:	add	x2, x2, #0x93d
  41e300:	mov	w1, #0x2af                 	// #687
  41e304:	bl	429434 <feof@plt+0x25b94>
  41e308:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e30c:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e310:	add	x0, x0, #0x7f9
  41e314:	add	x2, x2, #0x93d
  41e318:	mov	w1, #0x2b0                 	// #688
  41e31c:	bl	429434 <feof@plt+0x25b94>
  41e320:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e324:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e328:	add	x0, x0, #0x7f9
  41e32c:	add	x2, x2, #0x93d
  41e330:	mov	w1, #0x2b1                 	// #689
  41e334:	bl	429434 <feof@plt+0x25b94>
  41e338:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e33c:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e340:	add	x0, x0, #0x7f9
  41e344:	add	x2, x2, #0x93d
  41e348:	mov	w1, #0x31f                 	// #799
  41e34c:	bl	429434 <feof@plt+0x25b94>
  41e350:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e354:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e358:	add	x0, x0, #0x7f9
  41e35c:	add	x2, x2, #0x93d
  41e360:	mov	w1, #0x357                 	// #855
  41e364:	bl	429434 <feof@plt+0x25b94>
  41e368:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e36c:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e370:	add	x0, x0, #0x7f9
  41e374:	add	x2, x2, #0x93d
  41e378:	mov	w1, #0x2ba                 	// #698
  41e37c:	bl	429434 <feof@plt+0x25b94>
  41e380:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e384:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e388:	add	x0, x0, #0x7f9
  41e38c:	add	x2, x2, #0x93d
  41e390:	mov	w1, #0x2bb                 	// #699
  41e394:	bl	429434 <feof@plt+0x25b94>
  41e398:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e39c:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e3a0:	add	x0, x0, #0x7f9
  41e3a4:	add	x2, x2, #0x93d
  41e3a8:	mov	w1, #0x2bc                 	// #700
  41e3ac:	bl	429434 <feof@plt+0x25b94>
  41e3b0:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e3b4:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e3b8:	add	x0, x0, #0x7f9
  41e3bc:	add	x2, x2, #0x93d
  41e3c0:	mov	w1, #0x2c7                 	// #711
  41e3c4:	bl	429434 <feof@plt+0x25b94>
  41e3c8:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e3cc:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e3d0:	add	x0, x0, #0x7f9
  41e3d4:	add	x2, x2, #0x93d
  41e3d8:	mov	w1, #0x2d1                 	// #721
  41e3dc:	bl	429434 <feof@plt+0x25b94>
  41e3e0:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e3e4:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e3e8:	add	x0, x0, #0x7f9
  41e3ec:	add	x2, x2, #0x93d
  41e3f0:	mov	w1, #0x2d9                 	// #729
  41e3f4:	bl	429434 <feof@plt+0x25b94>
  41e3f8:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e3fc:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e400:	add	x0, x0, #0x7f9
  41e404:	add	x2, x2, #0x93d
  41e408:	mov	w1, #0x2dc                 	// #732
  41e40c:	bl	429434 <feof@plt+0x25b94>
  41e410:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e414:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e418:	add	x0, x0, #0x7f9
  41e41c:	add	x2, x2, #0x93d
  41e420:	mov	w1, #0x2e2                 	// #738
  41e424:	bl	429434 <feof@plt+0x25b94>
  41e428:	mov	w8, #0x59a                 	// #1434
  41e42c:	mov	w9, #0x1                   	// #1
  41e430:	stp	x0, x0, [x1, #16]
  41e434:	stp	x0, xzr, [x1, #32]
  41e438:	stp	xzr, xzr, [x1, #48]
  41e43c:	stp	x8, xzr, [x1]
  41e440:	stp	x9, x9, [x1, #64]
  41e444:	str	wzr, [x1, #80]
  41e448:	ret
  41e44c:	sub	sp, sp, #0xc0
  41e450:	stp	x29, x30, [sp, #96]
  41e454:	stp	x28, x27, [sp, #112]
  41e458:	stp	x26, x25, [sp, #128]
  41e45c:	stp	x24, x23, [sp, #144]
  41e460:	stp	x22, x21, [sp, #160]
  41e464:	stp	x20, x19, [sp, #176]
  41e468:	add	x29, sp, #0x60
  41e46c:	ldr	x23, [x29, #112]
  41e470:	ldr	x24, [x29, #96]
  41e474:	mov	x8, x4
  41e478:	mov	x22, x1
  41e47c:	mov	x25, x0
  41e480:	add	x4, sp, #0x8
  41e484:	mov	x0, x2
  41e488:	mov	x1, x3
  41e48c:	mov	x2, x8
  41e490:	mov	w3, w5
  41e494:	mov	w19, w7
  41e498:	mov	w20, w6
  41e49c:	mov	w21, w5
  41e4a0:	bl	41e5a0 <feof@plt+0x1ad00>
  41e4a4:	ldr	x26, [sp, #8]
  41e4a8:	adrp	x28, 491000 <_obstack_memory_used@@Base+0x152fc>
  41e4ac:	add	x28, x28, #0xcb0
  41e4b0:	cbz	x25, 41e4f8 <feof@plt+0x1ac58>
  41e4b4:	mov	w8, #0x60                  	// #96
  41e4b8:	smaddl	x8, w26, w8, x28
  41e4bc:	ldrh	w8, [x8, #66]
  41e4c0:	mov	w9, #0xffff                	// #65535
  41e4c4:	cmp	w8, w9
  41e4c8:	b.eq	41e4f8 <feof@plt+0x1ac58>  // b.none
  41e4cc:	ldrb	w8, [x29, #104]
  41e4d0:	ldr	x3, [sp, #80]
  41e4d4:	ldr	x4, [sp, #24]
  41e4d8:	mov	x0, x25
  41e4dc:	tst	w8, #0x1
  41e4e0:	csel	x1, xzr, x22, ne  // ne = any
  41e4e4:	mov	w2, w26
  41e4e8:	mov	w5, w20
  41e4ec:	mov	w6, w19
  41e4f0:	mov	x7, x23
  41e4f4:	bl	41ed80 <feof@plt+0x1b4e0>
  41e4f8:	ldr	x8, [x24, #24]
  41e4fc:	cbz	x8, 41e574 <feof@plt+0x1acd4>
  41e500:	mov	w9, #0x60                  	// #96
  41e504:	madd	x9, x26, x9, x28
  41e508:	mov	x27, xzr
  41e50c:	add	x26, x9, #0x3c
  41e510:	add	x28, x24, #0x28
  41e514:	b	41e528 <feof@plt+0x1ac88>
  41e518:	add	x27, x27, #0x1
  41e51c:	cmp	x27, x8
  41e520:	add	x28, x28, #0x10
  41e524:	b.cs	41e574 <feof@plt+0x1acd4>  // b.hs, b.nlast
  41e528:	ldr	w9, [x26]
  41e52c:	ldr	w10, [x28]
  41e530:	tst	w10, w9
  41e534:	b.eq	41e518 <feof@plt+0x1ac78>  // b.none
  41e538:	ldur	x8, [x28, #-8]
  41e53c:	ldr	x9, [x24, #16]
  41e540:	add	x2, sp, #0x8
  41e544:	mov	x0, x25
  41e548:	mov	x1, x22
  41e54c:	mov	w3, w21
  41e550:	mov	w4, w20
  41e554:	mov	w5, w19
  41e558:	mov	x6, x24
  41e55c:	mov	x7, x23
  41e560:	str	x9, [sp]
  41e564:	blr	x8
  41e568:	tbz	w0, #0, 41e57c <feof@plt+0x1acdc>
  41e56c:	ldr	x8, [x24, #24]
  41e570:	b	41e518 <feof@plt+0x1ac78>
  41e574:	mov	w0, #0x1                   	// #1
  41e578:	b	41e580 <feof@plt+0x1ace0>
  41e57c:	mov	w0, wzr
  41e580:	ldp	x20, x19, [sp, #176]
  41e584:	ldp	x22, x21, [sp, #160]
  41e588:	ldp	x24, x23, [sp, #144]
  41e58c:	ldp	x26, x25, [sp, #128]
  41e590:	ldp	x28, x27, [sp, #112]
  41e594:	ldp	x29, x30, [sp, #96]
  41e598:	add	sp, sp, #0xc0
  41e59c:	ret
  41e5a0:	stp	x29, x30, [sp, #-32]!
  41e5a4:	str	x19, [sp, #16]
  41e5a8:	mov	x29, sp
  41e5ac:	adrp	x9, 491000 <_obstack_memory_used@@Base+0x152fc>
  41e5b0:	mov	w8, #0x60                  	// #96
  41e5b4:	add	x9, x9, #0xcb0
  41e5b8:	stp	x0, xzr, [x4]
  41e5bc:	str	x1, [x4, #16]
  41e5c0:	str	x2, [x4, #72]
  41e5c4:	madd	x8, x0, x8, x9
  41e5c8:	ldr	w10, [x8, #60]
  41e5cc:	mov	x19, x4
  41e5d0:	mov	w8, #0x4                   	// #4
  41e5d4:	ands	w9, w10, w3
  41e5d8:	b.eq	41e604 <feof@plt+0x1ad64>  // b.none
  41e5dc:	mov	w12, #0xfff                 	// #4095
  41e5e0:	movk	w12, #0x8, lsl #16
  41e5e4:	tst	w10, w12
  41e5e8:	and	w11, w10, #0x100000
  41e5ec:	cset	w10, ne  // ne = any
  41e5f0:	tst	w9, #0xffcfffff
  41e5f4:	and	w9, w10, w11, lsr #20
  41e5f8:	cset	w10, eq  // eq = none
  41e5fc:	tst	w9, w10
  41e600:	csel	w8, w8, wzr, ne  // ne = any
  41e604:	mov	x3, x19
  41e608:	str	w8, [x19, #80]
  41e60c:	bl	41e66c <feof@plt+0x1adcc>
  41e610:	ldr	x8, [x19, #64]
  41e614:	cmp	x8, #0x2
  41e618:	b.eq	41e630 <feof@plt+0x1ad90>  // b.none
  41e61c:	cmp	x8, #0x1
  41e620:	b.ne	41e654 <feof@plt+0x1adb4>  // b.any
  41e624:	ldr	x8, [x19, #32]
  41e628:	str	x8, [x19, #24]
  41e62c:	b	41e648 <feof@plt+0x1ada8>
  41e630:	ldp	x0, x2, [x19, #32]
  41e634:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  41e638:	add	x1, x1, #0x9d0
  41e63c:	mov	x3, xzr
  41e640:	bl	41d0a0 <feof@plt+0x19800>
  41e644:	str	x0, [x19, #24]
  41e648:	ldr	x19, [sp, #16]
  41e64c:	ldp	x29, x30, [sp], #32
  41e650:	ret
  41e654:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e658:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e65c:	add	x0, x0, #0x7f9
  41e660:	add	x2, x2, #0x842
  41e664:	mov	w1, #0x4a2                 	// #1186
  41e668:	bl	429434 <feof@plt+0x25b94>
  41e66c:	stp	x29, x30, [sp, #-80]!
  41e670:	stp	x26, x25, [sp, #16]
  41e674:	stp	x24, x23, [sp, #32]
  41e678:	stp	x22, x21, [sp, #48]
  41e67c:	stp	x20, x19, [sp, #64]
  41e680:	mov	x29, sp
  41e684:	mov	w8, #0x60                  	// #96
  41e688:	adrp	x24, 491000 <_obstack_memory_used@@Base+0x152fc>
  41e68c:	mul	x8, x0, x8
  41e690:	add	x24, x24, #0xcb0
  41e694:	ldr	x25, [x24, x8]
  41e698:	mov	x19, x3
  41e69c:	mov	x21, x0
  41e6a0:	mov	x20, x1
  41e6a4:	cbnz	x2, 41e7b4 <feof@plt+0x1af14>
  41e6a8:	mov	w8, #0x60                  	// #96
  41e6ac:	madd	x8, x21, x8, x24
  41e6b0:	ldrb	w8, [x8, #64]
  41e6b4:	tbnz	w8, #7, 41e7b4 <feof@plt+0x1af14>
  41e6b8:	ldrb	w8, [x25, #1]
  41e6bc:	sub	w8, w8, #0x57
  41e6c0:	cmp	w8, #0x16
  41e6c4:	b.hi	41e7b4 <feof@plt+0x1af14>  // b.pmore
  41e6c8:	mov	w9, #0x1                   	// #1
  41e6cc:	lsl	w8, w9, w8
  41e6d0:	mov	w9, #0x8001                	// #32769
  41e6d4:	movk	w9, #0x41, lsl #16
  41e6d8:	tst	w8, w9
  41e6dc:	b.eq	41e7b4 <feof@plt+0x1af14>  // b.none
  41e6e0:	mov	w8, #0x60                  	// #96
  41e6e4:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41e6e8:	add	x9, x9, #0x150
  41e6ec:	madd	x26, x21, x8, x24
  41e6f0:	ldrb	w10, [x26, #52]!
  41e6f4:	ldp	x8, x11, [x9]
  41e6f8:	add	x23, x10, #0x5
  41e6fc:	sub	x9, x11, x8
  41e700:	cmp	x9, x23
  41e704:	b.cs	41e720 <feof@plt+0x1ae80>  // b.hs, b.nlast
  41e708:	adrp	x22, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41e70c:	add	x22, x22, #0x138
  41e710:	mov	x0, x22
  41e714:	mov	x1, x23
  41e718:	bl	47bae8 <_obstack_newchunk@@Base>
  41e71c:	ldr	x8, [x22, #24]
  41e720:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41e724:	add	x9, x9, #0x148
  41e728:	ldr	x22, [x9]
  41e72c:	add	x8, x8, x23
  41e730:	str	x8, [x9, #8]
  41e734:	cmp	x8, x22
  41e738:	b.ne	41e74c <feof@plt+0x1aeac>  // b.any
  41e73c:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41e740:	ldrb	w10, [x9, #392]
  41e744:	orr	w10, w10, #0x2
  41e748:	strb	w10, [x9, #392]
  41e74c:	adrp	x9, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  41e750:	add	x9, x9, #0x140
  41e754:	ldr	x10, [x9, #40]
  41e758:	ldr	x11, [x9]
  41e75c:	ldr	x12, [x9, #24]
  41e760:	add	x0, x22, #0x5
  41e764:	add	x8, x10, x8
  41e768:	bic	x8, x8, x10
  41e76c:	sub	x10, x12, x11
  41e770:	sub	x11, x8, x11
  41e774:	cmp	x11, x10
  41e778:	mov	w10, #0x2d                  	// #45
  41e77c:	csel	x8, x12, x8, hi  // hi = pmore
  41e780:	stp	x8, x8, [x9, #8]
  41e784:	strb	w10, [x22]
  41e788:	ldrb	w8, [x25, #1]
  41e78c:	mov	w9, #0x6f6e                	// #28526
  41e790:	strh	w9, [x22, #2]
  41e794:	strb	w10, [x22, #4]
  41e798:	strb	w8, [x22, #1]
  41e79c:	ldrb	w2, [x26]
  41e7a0:	add	x1, x25, #0x2
  41e7a4:	bl	402fc0 <memcpy@plt>
  41e7a8:	stp	xzr, xzr, [x19, #48]
  41e7ac:	cbnz	x20, 41e7c0 <feof@plt+0x1af20>
  41e7b0:	b	41e804 <feof@plt+0x1af64>
  41e7b4:	mov	x22, x25
  41e7b8:	stp	xzr, xzr, [x19, #48]
  41e7bc:	cbz	x20, 41e804 <feof@plt+0x1af64>
  41e7c0:	mov	w8, #0x60                  	// #96
  41e7c4:	madd	x8, x21, x8, x24
  41e7c8:	ldr	w8, [x8, #60]
  41e7cc:	tbz	w8, #23, 41e7e8 <feof@plt+0x1af48>
  41e7d0:	mov	w9, #0x60                  	// #96
  41e7d4:	madd	x9, x21, x9, x24
  41e7d8:	ldrb	w9, [x9, #64]
  41e7dc:	tbnz	w9, #3, 41e7e8 <feof@plt+0x1af48>
  41e7e0:	mov	w8, #0x2                   	// #2
  41e7e4:	b	41e808 <feof@plt+0x1af68>
  41e7e8:	tbz	w8, #22, 41e828 <feof@plt+0x1af88>
  41e7ec:	mov	x0, x22
  41e7f0:	mov	x1, x20
  41e7f4:	mov	x2, xzr
  41e7f8:	bl	41d0a0 <feof@plt+0x19800>
  41e7fc:	mov	x22, x0
  41e800:	mov	x20, xzr
  41e804:	mov	w8, #0x1                   	// #1
  41e808:	stp	x22, x20, [x19, #32]
  41e80c:	str	x8, [x19, #64]
  41e810:	ldp	x20, x19, [sp, #64]
  41e814:	ldp	x22, x21, [sp, #48]
  41e818:	ldp	x24, x23, [sp, #32]
  41e81c:	ldp	x26, x25, [sp, #16]
  41e820:	ldp	x29, x30, [sp], #80
  41e824:	ret
  41e828:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e82c:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e830:	add	x0, x0, #0x7f9
  41e834:	add	x2, x2, #0x96a
  41e838:	mov	w1, #0x19b                 	// #411
  41e83c:	bl	429434 <feof@plt+0x25b94>
  41e840:	stp	x29, x30, [sp, #-80]!
  41e844:	str	x25, [sp, #16]
  41e848:	stp	x24, x23, [sp, #32]
  41e84c:	stp	x22, x21, [sp, #48]
  41e850:	stp	x20, x19, [sp, #64]
  41e854:	mov	x29, sp
  41e858:	ldr	x8, [x2]
  41e85c:	mov	x19, x2
  41e860:	mov	x22, x1
  41e864:	mov	x20, x0
  41e868:	cbz	x8, 41e8a0 <feof@plt+0x1b000>
  41e86c:	ldr	w23, [x8, #4]
  41e870:	cbz	w23, 41e8a0 <feof@plt+0x1b000>
  41e874:	mov	x21, xzr
  41e878:	mov	x24, xzr
  41e87c:	add	x25, x8, #0x8
  41e880:	ldr	x0, [x25, x24, lsl #3]
  41e884:	bl	4030b0 <strlen@plt>
  41e888:	add	x8, x21, x0
  41e88c:	add	x24, x24, #0x1
  41e890:	cmp	x24, x23
  41e894:	add	x21, x8, #0x1
  41e898:	b.cc	41e880 <feof@plt+0x1afe0>  // b.lo, b.ul, b.last
  41e89c:	b	41e8a4 <feof@plt+0x1b004>
  41e8a0:	mov	x21, xzr
  41e8a4:	mov	x0, x21
  41e8a8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  41e8ac:	str	x0, [x22]
  41e8b0:	ldr	x8, [x19]
  41e8b4:	mov	x21, x0
  41e8b8:	cbz	x8, 41e908 <feof@plt+0x1b068>
  41e8bc:	mov	x24, xzr
  41e8c0:	mov	w25, #0x20                  	// #32
  41e8c4:	ldr	w9, [x8, #4]
  41e8c8:	cmp	x24, x9
  41e8cc:	b.cs	41e908 <feof@plt+0x1b068>  // b.hs, b.nlast
  41e8d0:	add	x8, x8, x24, lsl #3
  41e8d4:	ldr	x22, [x8, #8]
  41e8d8:	mov	x0, x22
  41e8dc:	bl	4030b0 <strlen@plt>
  41e8e0:	mov	x23, x0
  41e8e4:	mov	x0, x21
  41e8e8:	mov	x1, x22
  41e8ec:	mov	x2, x23
  41e8f0:	bl	402fc0 <memcpy@plt>
  41e8f4:	add	x21, x21, x23
  41e8f8:	strb	w25, [x21], #1
  41e8fc:	ldr	x8, [x19]
  41e900:	add	x24, x24, #0x1
  41e904:	cbnz	x8, 41e8c4 <feof@plt+0x1b024>
  41e908:	sturb	wzr, [x21, #-1]
  41e90c:	mov	x0, x20
  41e910:	mov	x1, x19
  41e914:	ldp	x20, x19, [sp, #64]
  41e918:	ldp	x22, x21, [sp, #48]
  41e91c:	ldp	x24, x23, [sp, #32]
  41e920:	ldr	x25, [sp, #16]
  41e924:	ldp	x29, x30, [sp], #80
  41e928:	b	428298 <feof@plt+0x249f8>
  41e92c:	sub	sp, sp, #0x70
  41e930:	stp	x29, x30, [sp, #16]
  41e934:	stp	x28, x27, [sp, #32]
  41e938:	stp	x26, x25, [sp, #48]
  41e93c:	stp	x24, x23, [sp, #64]
  41e940:	stp	x22, x21, [sp, #80]
  41e944:	stp	x20, x19, [sp, #96]
  41e948:	add	x29, sp, #0x10
  41e94c:	mov	x20, x2
  41e950:	ldr	x2, [x2, #8]
  41e954:	ldr	x21, [x20, #24]
  41e958:	mov	x24, x6
  41e95c:	mov	x22, x5
  41e960:	mov	w23, w4
  41e964:	mov	w19, w3
  41e968:	mov	x25, x1
  41e96c:	mov	x26, x0
  41e970:	cbz	x2, 41e984 <feof@plt+0x1b0e4>
  41e974:	mov	w0, w19
  41e978:	mov	w1, wzr
  41e97c:	mov	x3, x21
  41e980:	bl	42aff4 <feof@plt+0x27754>
  41e984:	ldr	x27, [x20]
  41e988:	str	x21, [sp, #8]
  41e98c:	cmp	x27, #0x598
  41e990:	b.eq	41e9bc <feof@plt+0x1b11c>  // b.none
  41e994:	cmp	x27, #0x597
  41e998:	b.eq	41eaf4 <feof@plt+0x1b254>  // b.none
  41e99c:	cmp	x27, #0x596
  41e9a0:	b.ne	41e9f8 <feof@plt+0x1b158>  // b.any
  41e9a4:	ldr	x8, [x22]
  41e9a8:	mov	x0, x20
  41e9ac:	blr	x8
  41e9b0:	tbz	w0, #0, 41eaf4 <feof@plt+0x1b254>
  41e9b4:	ldr	x2, [x20, #16]
  41e9b8:	b	41eb44 <feof@plt+0x1b2a4>
  41e9bc:	ldr	x8, [x20, #72]
  41e9c0:	cbz	x8, 41eaf4 <feof@plt+0x1b254>
  41e9c4:	mov	w0, w19
  41e9c8:	ldr	x3, [sp, #8]
  41e9cc:	ldp	x20, x19, [sp, #96]
  41e9d0:	ldp	x22, x21, [sp, #80]
  41e9d4:	ldp	x24, x23, [sp, #64]
  41e9d8:	ldp	x26, x25, [sp, #48]
  41e9dc:	ldp	x28, x27, [sp, #32]
  41e9e0:	ldp	x29, x30, [sp, #16]
  41e9e4:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41e9e8:	add	x2, x2, #0x852
  41e9ec:	mov	w1, wzr
  41e9f0:	add	sp, sp, #0x70
  41e9f4:	b	42aff4 <feof@plt+0x27754>
  41e9f8:	ldr	w4, [x20, #80]
  41e9fc:	adrp	x21, 491000 <_obstack_memory_used@@Base+0x152fc>
  41ea00:	add	x21, x21, #0xcb0
  41ea04:	cbz	w4, 41ea38 <feof@plt+0x1b198>
  41ea08:	ldr	x3, [x20, #16]
  41ea0c:	ldr	x2, [sp, #8]
  41ea10:	mov	w8, #0x60                  	// #96
  41ea14:	madd	x1, x27, x8, x21
  41ea18:	mov	w0, w19
  41ea1c:	mov	w5, w23
  41ea20:	bl	41eb88 <feof@plt+0x1b2e8>
  41ea24:	tbnz	w0, #0, 41eaf4 <feof@plt+0x1b254>
  41ea28:	ldr	w8, [x20, #80]
  41ea2c:	tbnz	w8, #2, 41eb14 <feof@plt+0x1b274>
  41ea30:	cbnz	w8, 41eb70 <feof@plt+0x1b2d0>
  41ea34:	ldr	x27, [x20]
  41ea38:	cbz	x26, 41ea78 <feof@plt+0x1b1d8>
  41ea3c:	mov	w8, #0x60                  	// #96
  41ea40:	smaddl	x8, w27, w8, x21
  41ea44:	ldrh	w8, [x8, #66]
  41ea48:	mov	w9, #0xffff                	// #65535
  41ea4c:	cmp	w8, w9
  41ea50:	b.eq	41ea78 <feof@plt+0x1b1d8>  // b.none
  41ea54:	ldr	x3, [x20, #72]
  41ea58:	ldr	x4, [x20, #16]
  41ea5c:	mov	x0, x26
  41ea60:	mov	x1, x25
  41ea64:	mov	w2, w27
  41ea68:	mov	w5, wzr
  41ea6c:	mov	w6, w19
  41ea70:	mov	x7, x24
  41ea74:	bl	41ed80 <feof@plt+0x1b4e0>
  41ea78:	ldr	x8, [x22, #24]
  41ea7c:	cbz	x8, 41eaf4 <feof@plt+0x1b254>
  41ea80:	mov	w9, #0x60                  	// #96
  41ea84:	madd	x9, x27, x9, x21
  41ea88:	mov	x28, xzr
  41ea8c:	add	x27, x9, #0x3c
  41ea90:	add	x21, x22, #0x28
  41ea94:	b	41eaa8 <feof@plt+0x1b208>
  41ea98:	add	x28, x28, #0x1
  41ea9c:	cmp	x28, x8
  41eaa0:	add	x21, x21, #0x10
  41eaa4:	b.cs	41eaf4 <feof@plt+0x1b254>  // b.hs, b.nlast
  41eaa8:	ldr	w9, [x27]
  41eaac:	ldr	w10, [x21]
  41eab0:	tst	w10, w9
  41eab4:	b.eq	41ea98 <feof@plt+0x1b1f8>  // b.none
  41eab8:	ldur	x8, [x21, #-8]
  41eabc:	ldr	x9, [x22, #16]
  41eac0:	mov	x0, x26
  41eac4:	mov	x1, x25
  41eac8:	mov	x2, x20
  41eacc:	mov	w3, w23
  41ead0:	mov	w4, wzr
  41ead4:	mov	w5, w19
  41ead8:	mov	x6, x22
  41eadc:	mov	x7, x24
  41eae0:	str	x9, [sp]
  41eae4:	blr	x8
  41eae8:	tbz	w0, #0, 41eb40 <feof@plt+0x1b2a0>
  41eaec:	ldr	x8, [x22, #24]
  41eaf0:	b	41ea98 <feof@plt+0x1b1f8>
  41eaf4:	ldp	x20, x19, [sp, #96]
  41eaf8:	ldp	x22, x21, [sp, #80]
  41eafc:	ldp	x24, x23, [sp, #64]
  41eb00:	ldp	x26, x25, [sp, #48]
  41eb04:	ldp	x28, x27, [sp, #32]
  41eb08:	ldp	x29, x30, [sp, #16]
  41eb0c:	add	sp, sp, #0x70
  41eb10:	ret
  41eb14:	ldr	x2, [x22, #8]
  41eb18:	mov	x0, x20
  41eb1c:	mov	w1, w23
  41eb20:	ldp	x20, x19, [sp, #96]
  41eb24:	ldp	x22, x21, [sp, #80]
  41eb28:	ldp	x24, x23, [sp, #64]
  41eb2c:	ldp	x26, x25, [sp, #48]
  41eb30:	ldp	x28, x27, [sp, #32]
  41eb34:	ldp	x29, x30, [sp, #16]
  41eb38:	add	sp, sp, #0x70
  41eb3c:	br	x2
  41eb40:	ldr	x2, [sp, #8]
  41eb44:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  41eb48:	add	x1, x1, #0x902
  41eb4c:	mov	w0, w19
  41eb50:	ldp	x20, x19, [sp, #96]
  41eb54:	ldp	x22, x21, [sp, #80]
  41eb58:	ldp	x24, x23, [sp, #64]
  41eb5c:	ldp	x26, x25, [sp, #48]
  41eb60:	ldp	x28, x27, [sp, #32]
  41eb64:	ldp	x29, x30, [sp, #16]
  41eb68:	add	sp, sp, #0x70
  41eb6c:	b	42bb84 <feof@plt+0x282e4>
  41eb70:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41eb74:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41eb78:	add	x0, x0, #0x7f9
  41eb7c:	add	x2, x2, #0x874
  41eb80:	mov	w1, #0x55c                 	// #1372
  41eb84:	bl	429434 <feof@plt+0x25b94>
  41eb88:	sub	sp, sp, #0x60
  41eb8c:	stp	x29, x30, [sp, #16]
  41eb90:	str	x25, [sp, #32]
  41eb94:	stp	x24, x23, [sp, #48]
  41eb98:	stp	x22, x21, [sp, #64]
  41eb9c:	stp	x20, x19, [sp, #80]
  41eba0:	add	x29, sp, #0x10
  41eba4:	mov	x23, x2
  41eba8:	mov	w19, w0
  41ebac:	tbnz	w4, #0, 41ebcc <feof@plt+0x1b32c>
  41ebb0:	mov	x20, x1
  41ebb4:	tbnz	w4, #1, 41ebd8 <feof@plt+0x1b338>
  41ebb8:	tbnz	w4, #3, 41ec14 <feof@plt+0x1b374>
  41ebbc:	tbnz	w4, #4, 41ec2c <feof@plt+0x1b38c>
  41ebc0:	tbnz	w4, #5, 41ec58 <feof@plt+0x1b3b8>
  41ebc4:	mov	w0, wzr
  41ebc8:	b	41ebf8 <feof@plt+0x1b358>
  41ebcc:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ebd0:	add	x1, x1, #0x984
  41ebd4:	b	41ebe8 <feof@plt+0x1b348>
  41ebd8:	ldr	x1, [x20, #16]
  41ebdc:	cbnz	x1, 41ebe8 <feof@plt+0x1b348>
  41ebe0:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41ebe4:	add	x1, x1, #0x788
  41ebe8:	mov	w0, w19
  41ebec:	mov	x2, x23
  41ebf0:	bl	42bb84 <feof@plt+0x282e4>
  41ebf4:	mov	w0, #0x1                   	// #1
  41ebf8:	ldp	x20, x19, [sp, #80]
  41ebfc:	ldp	x22, x21, [sp, #64]
  41ec00:	ldp	x24, x23, [sp, #48]
  41ec04:	ldr	x25, [sp, #32]
  41ec08:	ldp	x29, x30, [sp, #16]
  41ec0c:	add	sp, sp, #0x60
  41ec10:	ret
  41ec14:	ldrb	w8, [x20, #65]
  41ec18:	ldr	x2, [x20]
  41ec1c:	tbnz	w8, #5, 41ec48 <feof@plt+0x1b3a8>
  41ec20:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ec24:	add	x1, x1, #0xa17
  41ec28:	b	41ec50 <feof@plt+0x1b3b0>
  41ec2c:	ldr	x2, [x20]
  41ec30:	ldp	w3, w4, [x20, #88]
  41ec34:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ec38:	add	x1, x1, #0xa48
  41ec3c:	mov	w0, w19
  41ec40:	bl	42bb84 <feof@plt+0x282e4>
  41ec44:	b	41ebf4 <feof@plt+0x1b354>
  41ec48:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ec4c:	add	x1, x1, #0x9c3
  41ec50:	mov	w0, w19
  41ec54:	b	41ebf0 <feof@plt+0x1b350>
  41ec58:	ldrh	w24, [x20, #68]
  41ec5c:	add	x0, sp, #0x8
  41ec60:	mov	w22, w5
  41ec64:	mov	x21, x3
  41ec68:	bl	42c22c <feof@plt+0x2898c>
  41ec6c:	adrp	x25, 490000 <_obstack_memory_used@@Base+0x142fc>
  41ec70:	mov	w8, #0x30                  	// #48
  41ec74:	add	x25, x25, #0x608
  41ec78:	madd	x8, x24, x8, x25
  41ec7c:	ldr	x1, [x8, #8]
  41ec80:	cbz	x1, 41ec90 <feof@plt+0x1b3f0>
  41ec84:	mov	w0, w19
  41ec88:	mov	x2, x21
  41ec8c:	b	41eca0 <feof@plt+0x1b400>
  41ec90:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ec94:	add	x1, x1, #0xa71
  41ec98:	mov	w0, w19
  41ec9c:	mov	x2, x23
  41eca0:	bl	42bb84 <feof@plt+0x282e4>
  41eca4:	mov	w8, #0x30                  	// #48
  41eca8:	str	xzr, [sp]
  41ecac:	madd	x23, x24, x8, x25
  41ecb0:	ldr	x8, [x23, #16]!
  41ecb4:	ldr	x9, [x8]
  41ecb8:	cbz	x9, 41ed00 <feof@plt+0x1b460>
  41ecbc:	mov	x9, xzr
  41ecc0:	mov	w24, #0x1                   	// #1
  41ecc4:	b	41ecec <feof@plt+0x1b44c>
  41ecc8:	add	x1, x8, x9, lsl #4
  41eccc:	mov	x0, sp
  41ecd0:	bl	41f810 <feof@plt+0x1bf70>
  41ecd4:	ldr	x8, [x23]
  41ecd8:	mov	w9, w24
  41ecdc:	lsl	x10, x9, #4
  41ece0:	ldr	x10, [x8, x10]
  41ece4:	add	w24, w24, #0x1
  41ece8:	cbz	x10, 41ed00 <feof@plt+0x1b460>
  41ecec:	tbnz	w22, #19, 41ecc8 <feof@plt+0x1b428>
  41ecf0:	add	x10, x8, x9, lsl #4
  41ecf4:	ldrb	w10, [x10, #12]
  41ecf8:	tbz	w10, #1, 41ecc8 <feof@plt+0x1b428>
  41ecfc:	b	41ecd8 <feof@plt+0x1b438>
  41ed00:	add	x1, x29, #0x18
  41ed04:	mov	x2, sp
  41ed08:	mov	x0, x21
  41ed0c:	bl	41e840 <feof@plt+0x1afa0>
  41ed10:	ldr	x2, [x20]
  41ed14:	ldr	x20, [x29, #24]
  41ed18:	cbz	x0, 41ed38 <feof@plt+0x1b498>
  41ed1c:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ed20:	mov	x4, x0
  41ed24:	add	x1, x1, #0xa95
  41ed28:	mov	w0, w19
  41ed2c:	mov	x3, x20
  41ed30:	bl	42ab7c <feof@plt+0x272dc>
  41ed34:	b	41ed4c <feof@plt+0x1b4ac>
  41ed38:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ed3c:	add	x1, x1, #0xac7
  41ed40:	mov	w0, w19
  41ed44:	mov	x3, x20
  41ed48:	bl	42ab7c <feof@plt+0x272dc>
  41ed4c:	mov	x0, x20
  41ed50:	bl	4031d0 <free@plt>
  41ed54:	ldr	x0, [sp]
  41ed58:	cbz	x0, 41ed74 <feof@plt+0x1b4d4>
  41ed5c:	ldr	w8, [x0]
  41ed60:	tbnz	w8, #31, 41ed70 <feof@plt+0x1b4d0>
  41ed64:	bl	4031d0 <free@plt>
  41ed68:	str	xzr, [sp]
  41ed6c:	b	41ed74 <feof@plt+0x1b4d4>
  41ed70:	str	wzr, [x0, #4]
  41ed74:	add	x0, sp, #0x8
  41ed78:	bl	42c244 <feof@plt+0x289a4>
  41ed7c:	b	41ebf4 <feof@plt+0x1b354>
  41ed80:	sub	sp, sp, #0x70
  41ed84:	stp	x29, x30, [sp, #16]
  41ed88:	stp	x28, x27, [sp, #32]
  41ed8c:	stp	x26, x25, [sp, #48]
  41ed90:	stp	x24, x23, [sp, #64]
  41ed94:	stp	x22, x21, [sp, #80]
  41ed98:	stp	x20, x19, [sp, #96]
  41ed9c:	add	x29, sp, #0x10
  41eda0:	adrp	x24, 491000 <_obstack_memory_used@@Base+0x152fc>
  41eda4:	add	x24, x24, #0xcb0
  41eda8:	mov	w8, #0x60                  	// #96
  41edac:	smaddl	x27, w2, w8, x24
  41edb0:	ldrh	w26, [x27, #66]!
  41edb4:	cbz	x0, 41f118 <feof@plt+0x1b878>
  41edb8:	mov	w8, #0xffff                	// #65535
  41edbc:	cmp	w26, w8
  41edc0:	b.eq	41f118 <feof@plt+0x1b878>  // b.none
  41edc4:	mov	x22, x4
  41edc8:	mov	x20, x3
  41edcc:	mov	w23, w2
  41edd0:	mov	x19, x1
  41edd4:	mov	x21, x0
  41edd8:	cbz	w5, 41edf4 <feof@plt+0x1b554>
  41eddc:	cbz	x7, 41edf4 <feof@plt+0x1b554>
  41ede0:	mov	x0, x7
  41ede4:	mov	w1, w23
  41ede8:	mov	w2, w5
  41edec:	mov	w3, w6
  41edf0:	bl	429ddc <feof@plt+0x2653c>
  41edf4:	sxtw	x25, w23
  41edf8:	cbz	x19, 41ee10 <feof@plt+0x1b570>
  41edfc:	ldrh	w8, [x27]
  41ee00:	mov	w9, #0xffff                	// #65535
  41ee04:	add	x10, x19, x8
  41ee08:	cmp	w8, w9
  41ee0c:	csel	x19, xzr, x10, eq  // eq = none
  41ee10:	mov	w8, #0x60                  	// #96
  41ee14:	madd	x8, x25, x8, x24
  41ee18:	ldr	w9, [x8, #72]
  41ee1c:	cmp	w9, #0x7
  41ee20:	b.hi	41f118 <feof@plt+0x1b878>  // b.pmore
  41ee24:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ee28:	add	x8, x8, #0x578
  41ee2c:	adr	x10, 41ee40 <feof@plt+0x1b5a0>
  41ee30:	ldrb	w11, [x8, x9]
  41ee34:	add	x10, x10, x11, lsl #2
  41ee38:	add	x21, x21, x26
  41ee3c:	br	x10
  41ee40:	mov	w8, #0x60                  	// #96
  41ee44:	madd	x8, x25, x8, x24
  41ee48:	ldrh	w11, [x8, #64]!
  41ee4c:	cmp	x20, #0x0
  41ee50:	cset	w12, eq  // eq = none
  41ee54:	cmp	w9, #0x3
  41ee58:	mov	x9, x8
  41ee5c:	ldr	x10, [x9, #16]!
  41ee60:	cset	w13, eq  // eq = none
  41ee64:	cmp	w12, w13
  41ee68:	b.eq	41efcc <feof@plt+0x1b72c>  // b.none
  41ee6c:	tbz	w11, #10, 41efe4 <feof@plt+0x1b744>
  41ee70:	ldr	x11, [x21]
  41ee74:	orr	x10, x11, x10
  41ee78:	str	x10, [x21]
  41ee7c:	b	41f02c <feof@plt+0x1b78c>
  41ee80:	mov	w8, #0x60                  	// #96
  41ee84:	madd	x8, x25, x8, x24
  41ee88:	ldrb	w8, [x8, #65]
  41ee8c:	tbnz	w8, #2, 41eff0 <feof@plt+0x1b750>
  41ee90:	str	w20, [x21]
  41ee94:	cbnz	x19, 41eec8 <feof@plt+0x1b628>
  41ee98:	b	41f118 <feof@plt+0x1b878>
  41ee9c:	mov	w8, #0x60                  	// #96
  41eea0:	madd	x8, x25, x8, x24
  41eea4:	ldr	x9, [x8, #80]
  41eea8:	ldrb	w10, [x8, #65]
  41eeac:	cmp	x9, #0x0
  41eeb0:	cset	w8, eq  // eq = none
  41eeb4:	cmp	x20, #0x0
  41eeb8:	csel	x8, x8, x9, eq  // eq = none
  41eebc:	tbnz	w10, #2, 41effc <feof@plt+0x1b75c>
  41eec0:	str	w8, [x21]
  41eec4:	cbz	x19, 41f118 <feof@plt+0x1b878>
  41eec8:	mov	w8, #0x1                   	// #1
  41eecc:	str	w8, [x19]
  41eed0:	b	41f118 <feof@plt+0x1b878>
  41eed4:	mov	w8, #0x60                  	// #96
  41eed8:	madd	x8, x25, x8, x24
  41eedc:	ldrb	w8, [x8, #65]
  41eee0:	tbnz	w8, #2, 41f010 <feof@plt+0x1b770>
  41eee4:	str	w20, [x21]
  41eee8:	cbz	x19, 41f118 <feof@plt+0x1b878>
  41eeec:	str	w20, [x19]
  41eef0:	b	41f118 <feof@plt+0x1b878>
  41eef4:	str	x22, [x21]
  41eef8:	cbz	x19, 41f118 <feof@plt+0x1b878>
  41eefc:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41ef00:	add	x8, x8, #0x23b
  41ef04:	str	x8, [x19]
  41ef08:	b	41f118 <feof@plt+0x1b878>
  41ef0c:	mov	w8, #0x60                  	// #96
  41ef10:	madd	x8, x25, x8, x24
  41ef14:	ldrh	w8, [x8, #68]
  41ef18:	adrp	x10, 490000 <_obstack_memory_used@@Base+0x142fc>
  41ef1c:	mov	w9, #0x30                  	// #48
  41ef20:	add	x10, x10, #0x608
  41ef24:	madd	x22, x8, x9, x10
  41ef28:	ldr	x8, [x22, #32]!
  41ef2c:	mov	x0, x21
  41ef30:	mov	w1, w20
  41ef34:	blr	x8
  41ef38:	cbz	x19, 41f118 <feof@plt+0x1b878>
  41ef3c:	ldr	x2, [x22]
  41ef40:	mov	x0, x19
  41ef44:	ldp	x20, x19, [sp, #96]
  41ef48:	ldp	x22, x21, [sp, #80]
  41ef4c:	ldp	x24, x23, [sp, #64]
  41ef50:	ldp	x26, x25, [sp, #48]
  41ef54:	ldp	x28, x27, [sp, #32]
  41ef58:	ldp	x29, x30, [sp, #16]
  41ef5c:	mov	w1, #0x1                   	// #1
  41ef60:	add	sp, sp, #0x70
  41ef64:	br	x2
  41ef68:	ldr	x23, [x21]
  41ef6c:	cbnz	x23, 41ef80 <feof@plt+0x1b6e0>
  41ef70:	mov	w0, #0x1                   	// #1
  41ef74:	mov	w1, #0x8                   	// #8
  41ef78:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  41ef7c:	mov	x23, x0
  41ef80:	ldr	x26, [x23]
  41ef84:	cbz	x26, 41f05c <feof@plt+0x1b7bc>
  41ef88:	ldp	w8, w9, [x26]
  41ef8c:	and	w0, w8, #0x7fffffff
  41ef90:	cmp	w0, w9
  41ef94:	b.ne	41f0ec <feof@plt+0x1b84c>  // b.any
  41ef98:	tbnz	w8, #31, 41f06c <feof@plt+0x1b7cc>
  41ef9c:	add	w1, w0, #0x1
  41efa0:	bl	425fbc <feof@plt+0x2271c>
  41efa4:	mov	w24, w0
  41efa8:	ldr	x0, [x23]
  41efac:	mov	w8, #0x18                  	// #24
  41efb0:	umull	x8, w24, w8
  41efb4:	add	x1, x8, #0x8
  41efb8:	cbz	x0, 41f138 <feof@plt+0x1b898>
  41efbc:	ldr	w27, [x0, #4]
  41efc0:	mov	w28, wzr
  41efc4:	stur	wzr, [x29, #-4]
  41efc8:	b	41f0a0 <feof@plt+0x1b800>
  41efcc:	mvn	x10, x10
  41efd0:	tbz	w11, #10, 41f020 <feof@plt+0x1b780>
  41efd4:	ldr	x11, [x21]
  41efd8:	and	x10, x11, x10
  41efdc:	str	x10, [x21]
  41efe0:	b	41f02c <feof@plt+0x1b78c>
  41efe4:	ldr	w11, [x21]
  41efe8:	orr	w10, w11, w10
  41efec:	b	41f028 <feof@plt+0x1b788>
  41eff0:	str	x20, [x21]
  41eff4:	cbnz	x19, 41f004 <feof@plt+0x1b764>
  41eff8:	b	41f118 <feof@plt+0x1b878>
  41effc:	str	x8, [x21]
  41f000:	cbz	x19, 41f118 <feof@plt+0x1b878>
  41f004:	mov	w8, #0x1                   	// #1
  41f008:	str	x8, [x19]
  41f00c:	b	41f118 <feof@plt+0x1b878>
  41f010:	str	x20, [x21]
  41f014:	cbz	x19, 41f118 <feof@plt+0x1b878>
  41f018:	str	x20, [x19]
  41f01c:	b	41f118 <feof@plt+0x1b878>
  41f020:	ldr	w11, [x21]
  41f024:	and	w10, w11, w10
  41f028:	str	w10, [x21]
  41f02c:	cbz	x19, 41f118 <feof@plt+0x1b878>
  41f030:	ldrb	w10, [x8, #1]
  41f034:	ldr	x8, [x9]
  41f038:	tbnz	w10, #2, 41f04c <feof@plt+0x1b7ac>
  41f03c:	ldr	w9, [x19]
  41f040:	orr	w8, w9, w8
  41f044:	str	w8, [x19]
  41f048:	b	41f118 <feof@plt+0x1b878>
  41f04c:	ldr	x9, [x19]
  41f050:	orr	x8, x9, x8
  41f054:	str	x8, [x19]
  41f058:	b	41f118 <feof@plt+0x1b878>
  41f05c:	stur	wzr, [x29, #-4]
  41f060:	mov	w28, wzr
  41f064:	mov	w24, #0x4                   	// #4
  41f068:	b	41f08c <feof@plt+0x1b7ec>
  41f06c:	str	xzr, [x23]
  41f070:	ldr	w10, [x26, #4]
  41f074:	mov	w8, #0x4                   	// #4
  41f078:	mov	w28, #0x1                   	// #1
  41f07c:	add	w9, w10, #0x1
  41f080:	cmp	w9, #0x4
  41f084:	csinc	w24, w8, w10, ls  // ls = plast
  41f088:	stur	w10, [x29, #-4]
  41f08c:	mov	w8, #0x18                  	// #24
  41f090:	umull	x8, w24, w8
  41f094:	mov	x0, xzr
  41f098:	mov	w27, wzr
  41f09c:	add	x1, x8, #0x8
  41f0a0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  41f0a4:	and	w8, w24, #0x7fffffff
  41f0a8:	str	x0, [x23]
  41f0ac:	stp	w8, w27, [x0]
  41f0b0:	cbz	w28, 41f0ec <feof@plt+0x1b84c>
  41f0b4:	ldr	x9, [x23]
  41f0b8:	ldur	w12, [x29, #-4]
  41f0bc:	cbz	w12, 41f0e8 <feof@plt+0x1b848>
  41f0c0:	add	x8, x26, #0x8
  41f0c4:	add	x9, x9, #0x8
  41f0c8:	mov	w10, w12
  41f0cc:	ldr	x11, [x8, #16]
  41f0d0:	ldr	q0, [x8], #24
  41f0d4:	subs	w10, w10, #0x1
  41f0d8:	str	x11, [x9, #16]
  41f0dc:	str	q0, [x9], #24
  41f0e0:	b.ne	41f0cc <feof@plt+0x1b82c>  // b.any
  41f0e4:	ldr	x9, [x23]
  41f0e8:	str	w12, [x9, #4]
  41f0ec:	ldr	x8, [x23]
  41f0f0:	mov	w10, #0x18                  	// #24
  41f0f4:	ldr	w9, [x8, #4]
  41f0f8:	add	w11, w9, #0x1
  41f0fc:	madd	x9, x9, x10, x8
  41f100:	str	w11, [x8, #4]
  41f104:	stp	x25, x22, [x9, #8]
  41f108:	str	w20, [x9, #24]
  41f10c:	str	x23, [x21]
  41f110:	cbz	x19, 41f118 <feof@plt+0x1b878>
  41f114:	str	x23, [x19]
  41f118:	ldp	x20, x19, [sp, #96]
  41f11c:	ldp	x22, x21, [sp, #80]
  41f120:	ldp	x24, x23, [sp, #64]
  41f124:	ldp	x26, x25, [sp, #48]
  41f128:	ldp	x28, x27, [sp, #32]
  41f12c:	ldp	x29, x30, [sp, #16]
  41f130:	add	sp, sp, #0x70
  41f134:	ret
  41f138:	stur	wzr, [x29, #-4]
  41f13c:	mov	w28, wzr
  41f140:	mov	w27, wzr
  41f144:	b	41f0a0 <feof@plt+0x1b800>
  41f148:	adrp	x8, 491000 <_obstack_memory_used@@Base+0x152fc>
  41f14c:	add	x8, x8, #0xcb0
  41f150:	mov	w9, #0x60                  	// #96
  41f154:	smaddl	x8, w0, w9, x8
  41f158:	ldrh	w8, [x8, #66]
  41f15c:	mov	w9, #0xffff                	// #65535
  41f160:	add	x10, x1, x8
  41f164:	cmp	w8, w9
  41f168:	csel	x0, xzr, x10, eq  // eq = none
  41f16c:	ret
  41f170:	mov	w8, w0
  41f174:	mov	w0, #0xffffffff            	// #-1
  41f178:	cbz	x1, 41f2b4 <feof@plt+0x1ba14>
  41f17c:	adrp	x9, 491000 <_obstack_memory_used@@Base+0x152fc>
  41f180:	add	x9, x9, #0xcb0
  41f184:	mov	w10, #0x60                  	// #96
  41f188:	smaddl	x10, w8, w10, x9
  41f18c:	ldrh	w10, [x10, #66]
  41f190:	mov	w11, #0xffff                	// #65535
  41f194:	cmp	w10, w11
  41f198:	b.eq	41f2b4 <feof@plt+0x1ba14>  // b.none
  41f19c:	sxtw	x8, w8
  41f1a0:	mov	w11, #0x60                  	// #96
  41f1a4:	madd	x11, x8, x11, x9
  41f1a8:	ldr	w11, [x11, #72]
  41f1ac:	cmp	w11, #0x4
  41f1b0:	b.hi	41f234 <feof@plt+0x1b994>  // b.pmore
  41f1b4:	adrp	x12, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41f1b8:	add	x12, x12, #0x580
  41f1bc:	adr	x13, 41f1cc <feof@plt+0x1b92c>
  41f1c0:	ldrb	w14, [x12, x11]
  41f1c4:	add	x13, x13, x14, lsl #2
  41f1c8:	br	x13
  41f1cc:	mov	w11, #0x60                  	// #96
  41f1d0:	madd	x8, x8, x11, x9
  41f1d4:	ldrb	w8, [x8, #65]
  41f1d8:	tbnz	w8, #2, 41f268 <feof@plt+0x1b9c8>
  41f1dc:	ldr	w8, [x1, x10]
  41f1e0:	cmp	w8, #0x0
  41f1e4:	b	41f2b0 <feof@plt+0x1ba10>
  41f1e8:	mov	w11, #0x60                  	// #96
  41f1ec:	madd	x11, x8, x11, x9
  41f1f0:	ldrb	w11, [x11, #65]
  41f1f4:	tbnz	w11, #2, 41f274 <feof@plt+0x1b9d4>
  41f1f8:	ldrsw	x10, [x1, x10]
  41f1fc:	b	41f278 <feof@plt+0x1b9d8>
  41f200:	mov	w11, #0x60                  	// #96
  41f204:	madd	x11, x8, x11, x9
  41f208:	ldrb	w11, [x11, #65]
  41f20c:	tbnz	w11, #2, 41f290 <feof@plt+0x1b9f0>
  41f210:	ldrsw	x10, [x1, x10]
  41f214:	b	41f294 <feof@plt+0x1b9f4>
  41f218:	mov	w11, #0x60                  	// #96
  41f21c:	madd	x8, x8, x11, x9
  41f220:	ldrb	w8, [x8, #65]
  41f224:	tbnz	w8, #2, 41f2a8 <feof@plt+0x1ba08>
  41f228:	ldr	w8, [x1, x10]
  41f22c:	cmn	w8, #0x1
  41f230:	b	41f2b0 <feof@plt+0x1ba10>
  41f234:	mov	w0, #0xffffffff            	// #-1
  41f238:	ret
  41f23c:	mov	w11, #0x60                  	// #96
  41f240:	madd	x11, x8, x11, x9
  41f244:	ldrb	w11, [x11, #65]
  41f248:	tbnz	w11, #2, 41f2b8 <feof@plt+0x1ba18>
  41f24c:	mov	w11, #0x60                  	// #96
  41f250:	madd	x8, x8, x11, x9
  41f254:	ldrsw	x10, [x1, x10]
  41f258:	ldr	x8, [x8, #80]
  41f25c:	cmp	x8, x10
  41f260:	cset	w0, eq  // eq = none
  41f264:	ret
  41f268:	ldr	x8, [x1, x10]
  41f26c:	cmp	x8, #0x0
  41f270:	b	41f2b0 <feof@plt+0x1ba10>
  41f274:	ldr	x10, [x1, x10]
  41f278:	mov	w11, #0x60                  	// #96
  41f27c:	madd	x8, x8, x11, x9
  41f280:	ldr	x8, [x8, #80]
  41f284:	tst	x8, x10
  41f288:	cset	w0, eq  // eq = none
  41f28c:	ret
  41f290:	ldr	x10, [x1, x10]
  41f294:	mov	w11, #0x60                  	// #96
  41f298:	madd	x8, x8, x11, x9
  41f29c:	ldr	x8, [x8, #80]
  41f2a0:	tst	x8, x10
  41f2a4:	b	41f2b0 <feof@plt+0x1ba10>
  41f2a8:	ldr	x8, [x1, x10]
  41f2ac:	cmn	x8, #0x1
  41f2b0:	cset	w0, ne  // ne = any
  41f2b4:	ret
  41f2b8:	mov	w11, #0x60                  	// #96
  41f2bc:	madd	x8, x8, x11, x9
  41f2c0:	ldr	x10, [x1, x10]
  41f2c4:	ldr	x8, [x8, #80]
  41f2c8:	cmp	x10, x8
  41f2cc:	cset	w0, eq  // eq = none
  41f2d0:	ret
  41f2d4:	stp	x29, x30, [sp, #-32]!
  41f2d8:	str	x19, [sp, #16]
  41f2dc:	mov	x29, sp
  41f2e0:	mov	x8, x0
  41f2e4:	mov	w0, wzr
  41f2e8:	cbz	x8, 41f3dc <feof@plt+0x1bb3c>
  41f2ec:	adrp	x9, 491000 <_obstack_memory_used@@Base+0x152fc>
  41f2f0:	add	x9, x9, #0xcb0
  41f2f4:	mov	w10, #0x60                  	// #96
  41f2f8:	smaddl	x10, w1, w10, x9
  41f2fc:	ldrh	w11, [x10, #66]
  41f300:	mov	w10, #0xffff                	// #65535
  41f304:	cmp	w11, w10
  41f308:	b.eq	41f3dc <feof@plt+0x1bb3c>  // b.none
  41f30c:	sxtw	x10, w1
  41f310:	mov	w12, #0x60                  	// #96
  41f314:	madd	x12, x10, x12, x9
  41f318:	ldr	w12, [x12, #72]
  41f31c:	cmp	w12, #0x7
  41f320:	b.hi	41f3d8 <feof@plt+0x1bb38>  // b.pmore
  41f324:	adrp	x13, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41f328:	add	x13, x13, #0x585
  41f32c:	adr	x14, 41f348 <feof@plt+0x1baa8>
  41f330:	ldrb	w15, [x13, x12]
  41f334:	add	x14, x14, x15, lsl #2
  41f338:	mov	x19, x2
  41f33c:	mov	w0, wzr
  41f340:	add	x11, x8, x11
  41f344:	br	x14
  41f348:	mov	w8, #0x60                  	// #96
  41f34c:	str	x11, [x19]
  41f350:	madd	x8, x10, x8, x9
  41f354:	ldrb	w8, [x8, #65]
  41f358:	mov	w9, #0x8                   	// #8
  41f35c:	tst	w8, #0x4
  41f360:	mov	w8, #0x4                   	// #4
  41f364:	csel	x8, x8, x9, eq  // eq = none
  41f368:	b	41f3d4 <feof@plt+0x1bb34>
  41f36c:	mov	w0, w1
  41f370:	mov	x1, x8
  41f374:	bl	41f170 <feof@plt+0x1b8d0>
  41f378:	mov	x8, x19
  41f37c:	strb	w0, [x8, #16]!
  41f380:	str	x8, [x19]
  41f384:	mov	w8, #0x1                   	// #1
  41f388:	b	41f3d4 <feof@plt+0x1bb34>
  41f38c:	ldr	x8, [x11]
  41f390:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41f394:	add	x9, x9, #0x23b
  41f398:	cmp	x8, #0x0
  41f39c:	csel	x0, x9, x8, eq  // eq = none
  41f3a0:	str	x0, [x19]
  41f3a4:	bl	4030b0 <strlen@plt>
  41f3a8:	add	x8, x0, #0x1
  41f3ac:	b	41f3d4 <feof@plt+0x1bb34>
  41f3b0:	mov	w8, #0x60                  	// #96
  41f3b4:	str	x11, [x19]
  41f3b8:	madd	x8, x10, x8, x9
  41f3bc:	ldrh	w8, [x8, #68]
  41f3c0:	adrp	x10, 490000 <_obstack_memory_used@@Base+0x142fc>
  41f3c4:	mov	w9, #0x30                  	// #48
  41f3c8:	add	x10, x10, #0x608
  41f3cc:	madd	x8, x8, x9, x10
  41f3d0:	ldr	x8, [x8, #24]
  41f3d4:	str	x8, [x19, #8]
  41f3d8:	mov	w0, #0x1                   	// #1
  41f3dc:	ldr	x19, [sp, #16]
  41f3e0:	ldp	x29, x30, [sp], #32
  41f3e4:	ret
  41f3e8:	sub	sp, sp, #0xa0
  41f3ec:	stp	x29, x30, [sp, #64]
  41f3f0:	stp	x28, x27, [sp, #80]
  41f3f4:	stp	x26, x25, [sp, #96]
  41f3f8:	stp	x24, x23, [sp, #112]
  41f3fc:	stp	x22, x21, [sp, #128]
  41f400:	stp	x20, x19, [sp, #144]
  41f404:	add	x29, sp, #0x40
  41f408:	adrp	x11, 491000 <_obstack_memory_used@@Base+0x152fc>
  41f40c:	add	x11, x11, #0xcb0
  41f410:	mov	w8, #0x60                  	// #96
  41f414:	umaddl	x8, w0, w8, x11
  41f418:	ldrh	w8, [x8, #48]
  41f41c:	ldp	x12, x26, [x29, #96]
  41f420:	mov	w19, w4
  41f424:	mov	w27, w3
  41f428:	mov	x23, x2
  41f42c:	mov	w21, w0
  41f430:	cmp	w8, #0x595
  41f434:	mov	w13, w1
  41f438:	b.eq	41f46c <feof@plt+0x1bbcc>  // b.none
  41f43c:	mov	w9, w21
  41f440:	mov	w10, #0x60                  	// #96
  41f444:	madd	x10, x9, x10, x11
  41f448:	ldrb	w10, [x10, #64]
  41f44c:	tst	w10, #0x18
  41f450:	b.ne	41f7e0 <feof@plt+0x1bf40>  // b.any
  41f454:	mov	w10, #0x60                  	// #96
  41f458:	madd	x9, x9, x10, x11
  41f45c:	ldr	x9, [x9, #32]
  41f460:	mov	w21, w8
  41f464:	cmp	x9, #0x0
  41f468:	csel	x23, x23, x9, eq  // eq = none
  41f46c:	sub	w8, w21, #0x597
  41f470:	cmp	w8, #0x2
  41f474:	b.cc	41f7c0 <feof@plt+0x1bf20>  // b.lo, b.ul, b.last
  41f478:	cbz	x26, 41f4d0 <feof@plt+0x1bc30>
  41f47c:	mov	x0, x26
  41f480:	mov	w1, w21
  41f484:	mov	w2, w13
  41f488:	mov	w3, w19
  41f48c:	mov	x28, x6
  41f490:	mov	x25, x12
  41f494:	mov	x22, x26
  41f498:	mov	w26, w5
  41f49c:	mov	w24, w19
  41f4a0:	mov	x19, x7
  41f4a4:	mov	w20, w13
  41f4a8:	bl	429ddc <feof@plt+0x2653c>
  41f4ac:	adrp	x11, 491000 <_obstack_memory_used@@Base+0x152fc>
  41f4b0:	add	x11, x11, #0xcb0
  41f4b4:	mov	w13, w20
  41f4b8:	mov	x7, x19
  41f4bc:	mov	w19, w24
  41f4c0:	mov	w5, w26
  41f4c4:	mov	x26, x22
  41f4c8:	mov	x12, x25
  41f4cc:	mov	x6, x28
  41f4d0:	tbz	w27, #0, 41f7c0 <feof@plt+0x1bf20>
  41f4d4:	mov	w8, #0x60                  	// #96
  41f4d8:	umaddl	x27, w21, w8, x11
  41f4dc:	mov	x28, x27
  41f4e0:	ldr	w8, [x28, #72]!
  41f4e4:	cmp	w8, #0x6
  41f4e8:	b.hi	41f7c0 <feof@plt+0x1bf20>  // b.pmore
  41f4ec:	mov	w9, #0x1                   	// #1
  41f4f0:	lsl	w9, w9, w8
  41f4f4:	mov	w10, #0x51                  	// #81
  41f4f8:	tst	w9, w10
  41f4fc:	b.eq	41f7c0 <feof@plt+0x1bf20>  // b.none
  41f500:	mov	w2, w21
  41f504:	cbz	x23, 41f524 <feof@plt+0x1bc84>
  41f508:	ldrb	w9, [x23]
  41f50c:	cbnz	w9, 41f57c <feof@plt+0x1bcdc>
  41f510:	mov	w9, #0x60                  	// #96
  41f514:	madd	x9, x2, x9, x11
  41f518:	ldrb	w9, [x9, #65]
  41f51c:	tst	w9, #0x1
  41f520:	csel	x23, xzr, x23, eq  // eq = none
  41f524:	cbnz	x23, 41f578 <feof@plt+0x1bcd8>
  41f528:	mov	w9, #0x60                  	// #96
  41f52c:	madd	x9, x2, x9, x11
  41f530:	ldr	w9, [x9, #60]
  41f534:	tbz	w9, #22, 41f578 <feof@plt+0x1bcd8>
  41f538:	mov	w8, #0x60                  	// #96
  41f53c:	madd	x8, x2, x8, x11
  41f540:	ldr	x1, [x8, #16]
  41f544:	ldr	x2, [x27]
  41f548:	cbnz	x1, 41f554 <feof@plt+0x1bcb4>
  41f54c:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  41f550:	add	x1, x1, #0x788
  41f554:	mov	w0, w19
  41f558:	ldp	x20, x19, [sp, #144]
  41f55c:	ldp	x22, x21, [sp, #128]
  41f560:	ldp	x24, x23, [sp, #112]
  41f564:	ldp	x26, x25, [sp, #96]
  41f568:	ldp	x28, x27, [sp, #80]
  41f56c:	ldp	x29, x30, [sp, #64]
  41f570:	add	sp, sp, #0xa0
  41f574:	b	42bb84 <feof@plt+0x282e4>
  41f578:	cbz	x23, 41f614 <feof@plt+0x1bd74>
  41f57c:	mov	w9, #0x60                  	// #96
  41f580:	madd	x21, x2, x9, x11
  41f584:	ldrh	w9, [x21, #64]!
  41f588:	tst	w9, #0x600
  41f58c:	b.eq	41f5f4 <feof@plt+0x1bd54>  // b.none
  41f590:	stur	wzr, [x29, #-4]
  41f594:	ldrb	w10, [x23]
  41f598:	cbz	w10, 41f604 <feof@plt+0x1bd64>
  41f59c:	mov	x22, x2
  41f5a0:	ubfx	w2, w9, #13, #1
  41f5a4:	sub	x1, x29, #0x4
  41f5a8:	mov	x0, x23
  41f5ac:	mov	w20, w5
  41f5b0:	mov	w24, w13
  41f5b4:	mov	x25, x7
  41f5b8:	stp	x12, x6, [x29, #-24]
  41f5bc:	bl	41c84c <feof@plt+0x18fac>
  41f5c0:	ldur	w8, [x29, #-4]
  41f5c4:	cbz	w8, 41f61c <feof@plt+0x1bd7c>
  41f5c8:	ldrh	w8, [x21]
  41f5cc:	ldr	x2, [x27]
  41f5d0:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41f5d4:	adrp	x10, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41f5d8:	add	x9, x9, #0x9c3
  41f5dc:	add	x10, x10, #0xa17
  41f5e0:	tst	w8, #0x2000
  41f5e4:	csel	x1, x10, x9, eq  // eq = none
  41f5e8:	mov	w0, w19
  41f5ec:	bl	42bb84 <feof@plt+0x282e4>
  41f5f0:	b	41f7c0 <feof@plt+0x1bf20>
  41f5f4:	mov	w4, #0x1                   	// #1
  41f5f8:	cmp	w8, #0x6
  41f5fc:	b.eq	41f648 <feof@plt+0x1bda8>  // b.none
  41f600:	b	41f79c <feof@plt+0x1befc>
  41f604:	mov	x4, xzr
  41f608:	cmp	w8, #0x6
  41f60c:	b.eq	41f648 <feof@plt+0x1bda8>  // b.none
  41f610:	b	41f79c <feof@plt+0x1befc>
  41f614:	mov	w4, #0x1                   	// #1
  41f618:	b	41f79c <feof@plt+0x1befc>
  41f61c:	ldr	w8, [x28]
  41f620:	ldp	x12, x6, [x29, #-24]
  41f624:	adrp	x11, 491000 <_obstack_memory_used@@Base+0x152fc>
  41f628:	mov	x4, x0
  41f62c:	mov	x7, x25
  41f630:	mov	w13, w24
  41f634:	mov	w5, w20
  41f638:	mov	x2, x22
  41f63c:	add	x11, x11, #0xcb0
  41f640:	cmp	w8, #0x6
  41f644:	b.ne	41f79c <feof@plt+0x1befc>  // b.any
  41f648:	mov	w8, #0x60                  	// #96
  41f64c:	str	w13, [sp, #28]
  41f650:	stp	x12, x6, [x29, #-24]
  41f654:	madd	x8, x2, x8, x11
  41f658:	ldrh	w8, [x8, #68]
  41f65c:	adrp	x10, 490000 <_obstack_memory_used@@Base+0x142fc>
  41f660:	mov	w9, #0x30                  	// #48
  41f664:	add	x10, x10, #0x608
  41f668:	madd	x8, x8, x9, x10
  41f66c:	ldr	x21, [x8, #16]
  41f670:	mov	w20, w5
  41f674:	str	x7, [sp, #32]
  41f678:	ldr	x22, [x21]
  41f67c:	cbz	x22, 41f72c <feof@plt+0x1be8c>
  41f680:	mov	x24, x2
  41f684:	mov	x28, xzr
  41f688:	mov	w25, #0x1                   	// #1
  41f68c:	mov	x1, x22
  41f690:	b	41f6a8 <feof@plt+0x1be08>
  41f694:	mov	w28, w25
  41f698:	lsl	x8, x28, #4
  41f69c:	ldr	x1, [x21, x8]
  41f6a0:	add	w25, w25, #0x1
  41f6a4:	cbz	x1, 41f72c <feof@plt+0x1be8c>
  41f6a8:	mov	x0, x23
  41f6ac:	bl	403640 <strcmp@plt>
  41f6b0:	cbnz	w0, 41f694 <feof@plt+0x1bdf4>
  41f6b4:	tbnz	w20, #19, 41f6c4 <feof@plt+0x1be24>
  41f6b8:	add	x8, x21, x28, lsl #4
  41f6bc:	ldrb	w8, [x8, #12]
  41f6c0:	tbnz	w8, #1, 41f694 <feof@plt+0x1bdf4>
  41f6c4:	add	x8, x21, x28, lsl #4
  41f6c8:	ldrsw	x4, [x8, #8]
  41f6cc:	ldr	x7, [sp, #32]
  41f6d0:	ldp	x12, x6, [x29, #-24]
  41f6d4:	ldr	w13, [sp, #28]
  41f6d8:	mov	x10, xzr
  41f6dc:	mov	w9, #0x1                   	// #1
  41f6e0:	mov	x8, x22
  41f6e4:	mov	w5, w20
  41f6e8:	mov	x2, x24
  41f6ec:	b	41f704 <feof@plt+0x1be64>
  41f6f0:	mov	w10, w9
  41f6f4:	lsl	x8, x10, #4
  41f6f8:	ldr	x8, [x21, x8]
  41f6fc:	add	w9, w9, #0x1
  41f700:	cbz	x8, 41f74c <feof@plt+0x1beac>
  41f704:	add	x10, x21, x10, lsl #4
  41f708:	ldr	w11, [x10, #8]
  41f70c:	cmp	w11, w4
  41f710:	b.ne	41f6f0 <feof@plt+0x1be50>  // b.any
  41f714:	ldr	w10, [x10, #12]
  41f718:	tbz	w10, #0, 41f6f0 <feof@plt+0x1be50>
  41f71c:	mov	x0, x8
  41f720:	tbnz	w5, #19, 41f794 <feof@plt+0x1bef4>
  41f724:	tbnz	w10, #1, 41f6f0 <feof@plt+0x1be50>
  41f728:	b	41f794 <feof@plt+0x1bef4>
  41f72c:	ldr	x2, [x27]
  41f730:	mov	w4, #0x20                  	// #32
  41f734:	mov	w0, w19
  41f738:	mov	x1, x27
  41f73c:	mov	x3, x23
  41f740:	mov	w5, w20
  41f744:	bl	41eb88 <feof@plt+0x1b2e8>
  41f748:	b	41f7c0 <feof@plt+0x1bf20>
  41f74c:	mov	x9, xzr
  41f750:	mov	w8, #0x1                   	// #1
  41f754:	b	41f76c <feof@plt+0x1becc>
  41f758:	mov	w9, w8
  41f75c:	lsl	x10, x9, #4
  41f760:	ldr	x22, [x21, x10]
  41f764:	add	w8, w8, #0x1
  41f768:	cbz	x22, 41f7f8 <feof@plt+0x1bf58>
  41f76c:	add	x10, x21, x9, lsl #4
  41f770:	ldr	w10, [x10, #8]
  41f774:	cmp	w10, w4
  41f778:	b.ne	41f758 <feof@plt+0x1beb8>  // b.any
  41f77c:	tbnz	w5, #19, 41f78c <feof@plt+0x1beec>
  41f780:	add	x9, x21, x9, lsl #4
  41f784:	ldrb	w9, [x9, #12]
  41f788:	tbnz	w9, #1, 41f758 <feof@plt+0x1beb8>
  41f78c:	mov	x8, x22
  41f790:	mov	x0, x23
  41f794:	mov	x23, x0
  41f798:	cbz	x8, 41f7f8 <feof@plt+0x1bf58>
  41f79c:	str	x6, [sp]
  41f7a0:	mov	x0, x7
  41f7a4:	mov	x1, x12
  41f7a8:	mov	x3, x23
  41f7ac:	mov	w6, w13
  41f7b0:	mov	w7, w19
  41f7b4:	str	x26, [sp, #16]
  41f7b8:	strb	wzr, [sp, #8]
  41f7bc:	bl	41e44c <feof@plt+0x1abac>
  41f7c0:	ldp	x20, x19, [sp, #144]
  41f7c4:	ldp	x22, x21, [sp, #128]
  41f7c8:	ldp	x24, x23, [sp, #112]
  41f7cc:	ldp	x26, x25, [sp, #96]
  41f7d0:	ldp	x28, x27, [sp, #80]
  41f7d4:	ldp	x29, x30, [sp, #64]
  41f7d8:	add	sp, sp, #0xa0
  41f7dc:	ret
  41f7e0:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41f7e4:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41f7e8:	add	x0, x0, #0x7f9
  41f7ec:	add	x2, x2, #0x888
  41f7f0:	mov	w1, #0x66b                 	// #1643
  41f7f4:	bl	429434 <feof@plt+0x25b94>
  41f7f8:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41f7fc:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  41f800:	add	x0, x0, #0x7f9
  41f804:	add	x2, x2, #0x888
  41f808:	mov	w1, #0x6a2                 	// #1698
  41f80c:	bl	429434 <feof@plt+0x25b94>
  41f810:	stp	x29, x30, [sp, #-80]!
  41f814:	str	x25, [sp, #16]
  41f818:	stp	x24, x23, [sp, #32]
  41f81c:	stp	x22, x21, [sp, #48]
  41f820:	stp	x20, x19, [sp, #64]
  41f824:	mov	x29, sp
  41f828:	ldr	x23, [x0]
  41f82c:	mov	x20, x0
  41f830:	mov	x19, x1
  41f834:	cbz	x23, 41f87c <feof@plt+0x1bfdc>
  41f838:	ldp	w8, w9, [x23]
  41f83c:	and	w0, w8, #0x7fffffff
  41f840:	cmp	w0, w9
  41f844:	b.ne	41f984 <feof@plt+0x1c0e4>  // b.any
  41f848:	tbnz	w8, #31, 41f88c <feof@plt+0x1bfec>
  41f84c:	add	w1, w0, #0x1
  41f850:	bl	425fbc <feof@plt+0x2271c>
  41f854:	ldr	x8, [x20]
  41f858:	mov	w9, w0
  41f85c:	lsl	x9, x9, #3
  41f860:	mov	w21, w0
  41f864:	add	x1, x9, #0x8
  41f868:	mov	w22, wzr
  41f86c:	cbz	x8, 41f9b8 <feof@plt+0x1c118>
  41f870:	ldr	w25, [x8, #4]
  41f874:	mov	w24, wzr
  41f878:	b	41f8bc <feof@plt+0x1c01c>
  41f87c:	mov	w22, wzr
  41f880:	mov	w24, wzr
  41f884:	mov	w21, #0x4                   	// #4
  41f888:	b	41f8a8 <feof@plt+0x1c008>
  41f88c:	str	xzr, [x20]
  41f890:	ldr	w22, [x23, #4]
  41f894:	mov	w8, #0x4                   	// #4
  41f898:	mov	w24, #0x1                   	// #1
  41f89c:	add	w9, w22, #0x1
  41f8a0:	cmp	w9, #0x4
  41f8a4:	csinc	w21, w8, w22, ls  // ls = plast
  41f8a8:	mov	w9, w21
  41f8ac:	lsl	x9, x9, #3
  41f8b0:	mov	x8, xzr
  41f8b4:	mov	w25, wzr
  41f8b8:	add	x1, x9, #0x8
  41f8bc:	mov	x0, x8
  41f8c0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  41f8c4:	and	w8, w21, #0x7fffffff
  41f8c8:	str	x0, [x20]
  41f8cc:	stp	w8, w25, [x0]
  41f8d0:	cbz	w24, 41f984 <feof@plt+0x1c0e4>
  41f8d4:	ldr	x11, [x20]
  41f8d8:	cbz	w22, 41f980 <feof@plt+0x1c0e0>
  41f8dc:	sub	w12, w22, #0x1
  41f8e0:	add	x8, x23, #0x8
  41f8e4:	cmp	w12, #0x3
  41f8e8:	add	x9, x11, #0x8
  41f8ec:	b.cs	41f8f8 <feof@plt+0x1c058>  // b.hs, b.nlast
  41f8f0:	mov	w10, w22
  41f8f4:	b	41f96c <feof@plt+0x1c0cc>
  41f8f8:	lsl	x10, x12, #3
  41f8fc:	add	x13, x23, x10
  41f900:	add	x13, x13, #0x10
  41f904:	cmp	x9, x13
  41f908:	b.cs	41f920 <feof@plt+0x1c080>  // b.hs, b.nlast
  41f90c:	add	x10, x11, x10
  41f910:	add	x10, x10, #0x10
  41f914:	cmp	x8, x10
  41f918:	mov	w10, w22
  41f91c:	b.cc	41f96c <feof@plt+0x1c0cc>  // b.lo, b.ul, b.last
  41f920:	add	x12, x12, #0x1
  41f924:	and	x13, x12, #0x1fffffffc
  41f928:	lsl	x8, x13, #3
  41f92c:	add	x14, x11, #0x18
  41f930:	add	x9, x23, x8
  41f934:	add	x11, x11, x8
  41f938:	sub	w10, w22, w13
  41f93c:	add	x8, x9, #0x8
  41f940:	add	x9, x11, #0x8
  41f944:	add	x11, x23, #0x18
  41f948:	mov	x15, x13
  41f94c:	ldp	q0, q1, [x11, #-16]
  41f950:	subs	x15, x15, #0x4
  41f954:	add	x11, x11, #0x20
  41f958:	stp	q0, q1, [x14, #-16]
  41f95c:	add	x14, x14, #0x20
  41f960:	b.ne	41f94c <feof@plt+0x1c0ac>  // b.any
  41f964:	cmp	x12, x13
  41f968:	b.eq	41f97c <feof@plt+0x1c0dc>  // b.none
  41f96c:	ldr	x11, [x8], #8
  41f970:	subs	w10, w10, #0x1
  41f974:	str	x11, [x9], #8
  41f978:	b.ne	41f96c <feof@plt+0x1c0cc>  // b.any
  41f97c:	ldr	x11, [x20]
  41f980:	str	w22, [x11, #4]
  41f984:	ldr	x8, [x20]
  41f988:	ldr	x25, [sp, #16]
  41f98c:	ldr	w9, [x8, #4]
  41f990:	add	w10, w9, #0x1
  41f994:	str	w10, [x8, #4]
  41f998:	ldr	x10, [x19]
  41f99c:	add	x0, x8, x9, lsl #3
  41f9a0:	str	x10, [x0, #8]!
  41f9a4:	ldp	x20, x19, [sp, #64]
  41f9a8:	ldp	x22, x21, [sp, #48]
  41f9ac:	ldp	x24, x23, [sp, #32]
  41f9b0:	ldp	x29, x30, [sp], #80
  41f9b4:	ret
  41f9b8:	mov	w24, wzr
  41f9bc:	mov	w25, wzr
  41f9c0:	b	41f8bc <feof@plt+0x1c01c>
  41f9c4:	str	w1, [x0]
  41f9c8:	ret
  41f9cc:	ldr	w0, [x0]
  41f9d0:	ret
  41f9d4:	str	w1, [x0]
  41f9d8:	ret
  41f9dc:	ldr	w0, [x0]
  41f9e0:	ret
  41f9e4:	str	w1, [x0]
  41f9e8:	ret
  41f9ec:	ldr	w0, [x0]
  41f9f0:	ret
  41f9f4:	str	w1, [x0]
  41f9f8:	ret
  41f9fc:	ldr	w0, [x0]
  41fa00:	ret
  41fa04:	str	w1, [x0]
  41fa08:	ret
  41fa0c:	ldr	w0, [x0]
  41fa10:	ret
  41fa14:	str	w1, [x0]
  41fa18:	ret
  41fa1c:	ldr	w0, [x0]
  41fa20:	ret
  41fa24:	str	w1, [x0]
  41fa28:	ret
  41fa2c:	ldr	w0, [x0]
  41fa30:	ret
  41fa34:	str	w1, [x0]
  41fa38:	ret
  41fa3c:	ldr	w0, [x0]
  41fa40:	ret
  41fa44:	str	w1, [x0]
  41fa48:	ret
  41fa4c:	ldr	w0, [x0]
  41fa50:	ret
  41fa54:	str	w1, [x0]
  41fa58:	ret
  41fa5c:	ldr	w0, [x0]
  41fa60:	ret
  41fa64:	str	w1, [x0]
  41fa68:	ret
  41fa6c:	ldr	w0, [x0]
  41fa70:	ret
  41fa74:	str	w1, [x0]
  41fa78:	ret
  41fa7c:	ldr	w0, [x0]
  41fa80:	ret
  41fa84:	str	w1, [x0]
  41fa88:	ret
  41fa8c:	ldr	w0, [x0]
  41fa90:	ret
  41fa94:	str	w1, [x0]
  41fa98:	ret
  41fa9c:	ldr	w0, [x0]
  41faa0:	ret
  41faa4:	str	w1, [x0]
  41faa8:	ret
  41faac:	ldr	w0, [x0]
  41fab0:	ret
  41fab4:	str	w1, [x0]
  41fab8:	ret
  41fabc:	ldr	w0, [x0]
  41fac0:	ret
  41fac4:	str	w1, [x0]
  41fac8:	ret
  41facc:	ldr	w0, [x0]
  41fad0:	ret
  41fad4:	str	w1, [x0]
  41fad8:	ret
  41fadc:	ldr	w0, [x0]
  41fae0:	ret
  41fae4:	str	w1, [x0]
  41fae8:	ret
  41faec:	ldr	w0, [x0]
  41faf0:	ret
  41faf4:	str	w1, [x0]
  41faf8:	ret
  41fafc:	ldr	w0, [x0]
  41fb00:	ret
  41fb04:	str	w1, [x0]
  41fb08:	ret
  41fb0c:	ldr	w0, [x0]
  41fb10:	ret
  41fb14:	str	w1, [x0]
  41fb18:	ret
  41fb1c:	ldr	w0, [x0]
  41fb20:	ret
  41fb24:	str	w1, [x0]
  41fb28:	ret
  41fb2c:	ldr	w0, [x0]
  41fb30:	ret
  41fb34:	str	w1, [x0]
  41fb38:	ret
  41fb3c:	ldr	w0, [x0]
  41fb40:	ret
  41fb44:	str	w1, [x0]
  41fb48:	ret
  41fb4c:	ldr	w0, [x0]
  41fb50:	ret
  41fb54:	str	w1, [x0]
  41fb58:	ret
  41fb5c:	ldr	w0, [x0]
  41fb60:	ret
  41fb64:	str	w1, [x0]
  41fb68:	ret
  41fb6c:	ldr	w0, [x0]
  41fb70:	ret
  41fb74:	str	w1, [x0]
  41fb78:	ret
  41fb7c:	ldr	w0, [x0]
  41fb80:	ret
  41fb84:	str	w1, [x0]
  41fb88:	ret
  41fb8c:	ldr	w0, [x0]
  41fb90:	ret
  41fb94:	str	w1, [x0]
  41fb98:	ret
  41fb9c:	ldr	w0, [x0]
  41fba0:	ret
  41fba4:	str	w1, [x0]
  41fba8:	ret
  41fbac:	ldr	w0, [x0]
  41fbb0:	ret
  41fbb4:	str	w1, [x0]
  41fbb8:	ret
  41fbbc:	ldr	w0, [x0]
  41fbc0:	ret
  41fbc4:	str	w1, [x0]
  41fbc8:	ret
  41fbcc:	ldr	w0, [x0]
  41fbd0:	ret
  41fbd4:	str	w1, [x0]
  41fbd8:	ret
  41fbdc:	ldr	w0, [x0]
  41fbe0:	ret
  41fbe4:	str	w1, [x0]
  41fbe8:	ret
  41fbec:	ldr	w0, [x0]
  41fbf0:	ret
  41fbf4:	str	w1, [x0]
  41fbf8:	ret
  41fbfc:	ldr	w0, [x0]
  41fc00:	ret
  41fc04:	str	w1, [x0]
  41fc08:	ret
  41fc0c:	ldr	w0, [x0]
  41fc10:	ret
  41fc14:	str	w1, [x0]
  41fc18:	ret
  41fc1c:	ldr	w0, [x0]
  41fc20:	ret
  41fc24:	sub	sp, sp, #0x70
  41fc28:	stp	x29, x30, [sp, #32]
  41fc2c:	stp	x26, x25, [sp, #48]
  41fc30:	stp	x24, x23, [sp, #64]
  41fc34:	stp	x22, x21, [sp, #80]
  41fc38:	stp	x20, x19, [sp, #96]
  41fc3c:	add	x29, sp, #0x20
  41fc40:	ldr	x8, [x2, #64]
  41fc44:	cmp	x8, #0x3
  41fc48:	b.cs	420488 <feof@plt+0x1cbe8>  // b.hs, b.nlast
  41fc4c:	ldr	w8, [x2]
  41fc50:	ldr	x26, [x2, #72]
  41fc54:	mov	x25, x7
  41fc58:	mov	x23, x6
  41fc5c:	mov	w19, w5
  41fc60:	mov	w20, w4
  41fc64:	mov	w21, w3
  41fc68:	mov	x22, x1
  41fc6c:	mov	x24, x0
  41fc70:	cmp	w8, #0x181
  41fc74:	b.le	41fcac <feof@plt+0x1c40c>
  41fc78:	cmp	w8, #0x1c1
  41fc7c:	b.gt	41fd1c <feof@plt+0x1c47c>
  41fc80:	cmp	w8, #0x182
  41fc84:	b.eq	41fe08 <feof@plt+0x1c568>  // b.none
  41fc88:	cmp	w8, #0x1bd
  41fc8c:	b.ne	420468 <feof@plt+0x1cbc8>  // b.any
  41fc90:	ldr	w8, [x22, #812]
  41fc94:	cbnz	w8, 420468 <feof@plt+0x1cbc8>
  41fc98:	mov	w8, #0x1                   	// #1
  41fc9c:	str	x25, [sp, #16]
  41fca0:	strb	w8, [sp, #8]
  41fca4:	mov	w2, #0x130                 	// #304
  41fca8:	b	420444 <feof@plt+0x1cba4>
  41fcac:	cmp	w8, #0xf4
  41fcb0:	b.eq	41fd84 <feof@plt+0x1c4e4>  // b.none
  41fcb4:	cmp	w8, #0x161
  41fcb8:	b.eq	41fe68 <feof@plt+0x1c5c8>  // b.none
  41fcbc:	cmp	w8, #0x17c
  41fcc0:	b.ne	420468 <feof@plt+0x1cbc8>  // b.any
  41fcc4:	ldr	w8, [x22, #1080]
  41fcc8:	cbnz	w8, 41fd00 <feof@plt+0x1c460>
  41fccc:	mov	w8, #0x1                   	// #1
  41fcd0:	mov	w2, #0x17e                 	// #382
  41fcd4:	mov	x0, x24
  41fcd8:	mov	x1, x22
  41fcdc:	mov	x3, xzr
  41fce0:	mov	x4, x26
  41fce4:	mov	w5, w21
  41fce8:	mov	w6, w20
  41fcec:	mov	w7, w19
  41fcf0:	str	x25, [sp, #16]
  41fcf4:	strb	w8, [sp, #8]
  41fcf8:	str	x23, [sp]
  41fcfc:	bl	41e44c <feof@plt+0x1abac>
  41fd00:	ldr	w8, [x22, #1088]
  41fd04:	cbnz	w8, 420468 <feof@plt+0x1cbc8>
  41fd08:	mov	w8, #0x1                   	// #1
  41fd0c:	str	x25, [sp, #16]
  41fd10:	strb	w8, [sp, #8]
  41fd14:	mov	w2, #0x182                 	// #386
  41fd18:	b	420444 <feof@plt+0x1cba4>
  41fd1c:	cmp	w8, #0x1c2
  41fd20:	b.eq	41fe24 <feof@plt+0x1c584>  // b.none
  41fd24:	cmp	w8, #0x48f
  41fd28:	b.ne	420468 <feof@plt+0x1cbc8>  // b.any
  41fd2c:	ldr	w8, [x22, #3300]
  41fd30:	cbnz	w8, 41fd68 <feof@plt+0x1c4c8>
  41fd34:	mov	w8, #0x1                   	// #1
  41fd38:	mov	w2, #0x47b                 	// #1147
  41fd3c:	mov	x0, x24
  41fd40:	mov	x1, x22
  41fd44:	mov	x3, xzr
  41fd48:	mov	x4, x26
  41fd4c:	mov	w5, w21
  41fd50:	mov	w6, w20
  41fd54:	mov	w7, w19
  41fd58:	str	x25, [sp, #16]
  41fd5c:	strb	w8, [sp, #8]
  41fd60:	str	x23, [sp]
  41fd64:	bl	41e44c <feof@plt+0x1abac>
  41fd68:	ldr	w8, [x22, #3340]
  41fd6c:	cbnz	w8, 420468 <feof@plt+0x1cbc8>
  41fd70:	mov	w8, #0x1                   	// #1
  41fd74:	str	x25, [sp, #16]
  41fd78:	strb	w8, [sp, #8]
  41fd7c:	mov	w2, #0x486                 	// #1158
  41fd80:	b	420444 <feof@plt+0x1cba4>
  41fd84:	ldr	w8, [x22, #268]
  41fd88:	cbz	w8, 41fe84 <feof@plt+0x1c5e4>
  41fd8c:	ldr	w8, [x22, #420]
  41fd90:	cbz	w8, 41fec0 <feof@plt+0x1c620>
  41fd94:	ldr	w8, [x22, #452]
  41fd98:	cbz	w8, 41fefc <feof@plt+0x1c65c>
  41fd9c:	ldr	w8, [x22, #568]
  41fda0:	cbz	w8, 41ff38 <feof@plt+0x1c698>
  41fda4:	ldr	w8, [x22, #584]
  41fda8:	cbz	w8, 41ff74 <feof@plt+0x1c6d4>
  41fdac:	ldr	w8, [x22, #688]
  41fdb0:	cbz	w8, 41ffb0 <feof@plt+0x1c710>
  41fdb4:	ldr	w8, [x22, #840]
  41fdb8:	cbz	w8, 41ffec <feof@plt+0x1c74c>
  41fdbc:	ldr	w8, [x22, #848]
  41fdc0:	cbz	w8, 420028 <feof@plt+0x1c788>
  41fdc4:	ldr	w8, [x22, #924]
  41fdc8:	cbz	w8, 420064 <feof@plt+0x1c7c4>
  41fdcc:	ldr	w8, [x22, #948]
  41fdd0:	cbz	w8, 4200a0 <feof@plt+0x1c800>
  41fdd4:	ldr	w8, [x22, #1108]
  41fdd8:	cbz	w8, 4200dc <feof@plt+0x1c83c>
  41fddc:	ldr	w8, [x22, #1120]
  41fde0:	cbz	w8, 420118 <feof@plt+0x1c878>
  41fde4:	ldr	w8, [x22, #1292]
  41fde8:	cbz	w8, 420154 <feof@plt+0x1c8b4>
  41fdec:	ldr	w8, [x22, #1312]
  41fdf0:	cbz	w8, 420190 <feof@plt+0x1c8f0>
  41fdf4:	ldr	w8, [x22, #1328]
  41fdf8:	cbz	w8, 4201cc <feof@plt+0x1c92c>
  41fdfc:	ldr	w8, [x22, #1360]
  41fe00:	cbnz	w8, 420468 <feof@plt+0x1cbc8>
  41fe04:	b	420238 <feof@plt+0x1c998>
  41fe08:	ldr	w8, [x22, #1084]
  41fe0c:	cbnz	w8, 420468 <feof@plt+0x1cbc8>
  41fe10:	mov	w8, #0x1                   	// #1
  41fe14:	str	x25, [sp, #16]
  41fe18:	strb	w8, [sp, #8]
  41fe1c:	mov	w2, #0x180                 	// #384
  41fe20:	b	420444 <feof@plt+0x1cba4>
  41fe24:	ldr	w8, [x22, #1328]
  41fe28:	cbz	w8, 4201e4 <feof@plt+0x1c944>
  41fe2c:	ldr	w8, [x22, #1332]
  41fe30:	cbz	w8, 4202b4 <feof@plt+0x1ca14>
  41fe34:	ldr	w8, [x22, #1344]
  41fe38:	cbz	w8, 4202f0 <feof@plt+0x1ca50>
  41fe3c:	ldr	w8, [x22, #1348]
  41fe40:	cbz	w8, 42032c <feof@plt+0x1ca8c>
  41fe44:	ldr	w8, [x22, #1352]
  41fe48:	cbz	w8, 420368 <feof@plt+0x1cac8>
  41fe4c:	ldr	w8, [x22, #1360]
  41fe50:	cbz	w8, 4203a4 <feof@plt+0x1cb04>
  41fe54:	ldr	w8, [x22, #1368]
  41fe58:	cbz	w8, 4203f8 <feof@plt+0x1cb58>
  41fe5c:	ldr	w8, [x22, #1372]
  41fe60:	cbnz	w8, 420468 <feof@plt+0x1cbc8>
  41fe64:	b	420434 <feof@plt+0x1cb94>
  41fe68:	ldr	w8, [x22, #584]
  41fe6c:	cbnz	w8, 420468 <feof@plt+0x1cbc8>
  41fe70:	mov	w8, #0x1                   	// #1
  41fe74:	str	x25, [sp, #16]
  41fe78:	strb	w8, [sp, #8]
  41fe7c:	mov	w2, #0xf3                  	// #243
  41fe80:	b	420444 <feof@plt+0x1cba4>
  41fe84:	mov	w8, #0x1                   	// #1
  41fe88:	mov	w2, #0x9a                  	// #154
  41fe8c:	mov	x0, x24
  41fe90:	mov	x1, x22
  41fe94:	mov	x3, xzr
  41fe98:	mov	x4, x26
  41fe9c:	mov	w5, w21
  41fea0:	mov	w6, w20
  41fea4:	mov	w7, w19
  41fea8:	str	x25, [sp, #16]
  41feac:	strb	w8, [sp, #8]
  41feb0:	str	x23, [sp]
  41feb4:	bl	41e44c <feof@plt+0x1abac>
  41feb8:	ldr	w8, [x22, #420]
  41febc:	cbnz	w8, 41fd94 <feof@plt+0x1c4f4>
  41fec0:	mov	w8, #0x1                   	// #1
  41fec4:	mov	w2, #0xc4                  	// #196
  41fec8:	mov	x0, x24
  41fecc:	mov	x1, x22
  41fed0:	mov	x3, xzr
  41fed4:	mov	x4, x26
  41fed8:	mov	w5, w21
  41fedc:	mov	w6, w20
  41fee0:	mov	w7, w19
  41fee4:	str	x25, [sp, #16]
  41fee8:	strb	w8, [sp, #8]
  41feec:	str	x23, [sp]
  41fef0:	bl	41e44c <feof@plt+0x1abac>
  41fef4:	ldr	w8, [x22, #452]
  41fef8:	cbnz	w8, 41fd9c <feof@plt+0x1c4fc>
  41fefc:	mov	w8, #0x1                   	// #1
  41ff00:	mov	w2, #0xce                  	// #206
  41ff04:	mov	x0, x24
  41ff08:	mov	x1, x22
  41ff0c:	mov	x3, xzr
  41ff10:	mov	x4, x26
  41ff14:	mov	w5, w21
  41ff18:	mov	w6, w20
  41ff1c:	mov	w7, w19
  41ff20:	str	x25, [sp, #16]
  41ff24:	strb	w8, [sp, #8]
  41ff28:	str	x23, [sp]
  41ff2c:	bl	41e44c <feof@plt+0x1abac>
  41ff30:	ldr	w8, [x22, #568]
  41ff34:	cbnz	w8, 41fda4 <feof@plt+0x1c504>
  41ff38:	mov	w8, #0x1                   	// #1
  41ff3c:	mov	w2, #0xed                  	// #237
  41ff40:	mov	x0, x24
  41ff44:	mov	x1, x22
  41ff48:	mov	x3, xzr
  41ff4c:	mov	x4, x26
  41ff50:	mov	w5, w21
  41ff54:	mov	w6, w20
  41ff58:	mov	w7, w19
  41ff5c:	str	x25, [sp, #16]
  41ff60:	strb	w8, [sp, #8]
  41ff64:	str	x23, [sp]
  41ff68:	bl	41e44c <feof@plt+0x1abac>
  41ff6c:	ldr	w8, [x22, #584]
  41ff70:	cbnz	w8, 41fdac <feof@plt+0x1c50c>
  41ff74:	mov	w8, #0x1                   	// #1
  41ff78:	mov	w2, #0xf3                  	// #243
  41ff7c:	mov	x0, x24
  41ff80:	mov	x1, x22
  41ff84:	mov	x3, xzr
  41ff88:	mov	x4, x26
  41ff8c:	mov	w5, w21
  41ff90:	mov	w6, w20
  41ff94:	mov	w7, w19
  41ff98:	str	x25, [sp, #16]
  41ff9c:	strb	w8, [sp, #8]
  41ffa0:	str	x23, [sp]
  41ffa4:	bl	41e44c <feof@plt+0x1abac>
  41ffa8:	ldr	w8, [x22, #688]
  41ffac:	cbnz	w8, 41fdb4 <feof@plt+0x1c514>
  41ffb0:	mov	w8, #0x1                   	// #1
  41ffb4:	mov	w2, #0x10e                 	// #270
  41ffb8:	mov	x0, x24
  41ffbc:	mov	x1, x22
  41ffc0:	mov	x3, xzr
  41ffc4:	mov	x4, x26
  41ffc8:	mov	w5, w21
  41ffcc:	mov	w6, w20
  41ffd0:	mov	w7, w19
  41ffd4:	str	x25, [sp, #16]
  41ffd8:	strb	w8, [sp, #8]
  41ffdc:	str	x23, [sp]
  41ffe0:	bl	41e44c <feof@plt+0x1abac>
  41ffe4:	ldr	w8, [x22, #840]
  41ffe8:	cbnz	w8, 41fdbc <feof@plt+0x1c51c>
  41ffec:	mov	w8, #0x1                   	// #1
  41fff0:	mov	w2, #0x137                 	// #311
  41fff4:	mov	x0, x24
  41fff8:	mov	x1, x22
  41fffc:	mov	x3, xzr
  420000:	mov	x4, x26
  420004:	mov	w5, w21
  420008:	mov	w6, w20
  42000c:	mov	w7, w19
  420010:	str	x25, [sp, #16]
  420014:	strb	w8, [sp, #8]
  420018:	str	x23, [sp]
  42001c:	bl	41e44c <feof@plt+0x1abac>
  420020:	ldr	w8, [x22, #848]
  420024:	cbnz	w8, 41fdc4 <feof@plt+0x1c524>
  420028:	mov	w8, #0x1                   	// #1
  42002c:	mov	w2, #0x13b                 	// #315
  420030:	mov	x0, x24
  420034:	mov	x1, x22
  420038:	mov	x3, xzr
  42003c:	mov	x4, x26
  420040:	mov	w5, w21
  420044:	mov	w6, w20
  420048:	mov	w7, w19
  42004c:	str	x25, [sp, #16]
  420050:	strb	w8, [sp, #8]
  420054:	str	x23, [sp]
  420058:	bl	41e44c <feof@plt+0x1abac>
  42005c:	ldr	w8, [x22, #924]
  420060:	cbnz	w8, 41fdcc <feof@plt+0x1c52c>
  420064:	mov	w8, #0x1                   	// #1
  420068:	mov	w2, #0x153                 	// #339
  42006c:	mov	x0, x24
  420070:	mov	x1, x22
  420074:	mov	x3, xzr
  420078:	mov	x4, x26
  42007c:	mov	w5, w21
  420080:	mov	w6, w20
  420084:	mov	w7, w19
  420088:	str	x25, [sp, #16]
  42008c:	strb	w8, [sp, #8]
  420090:	str	x23, [sp]
  420094:	bl	41e44c <feof@plt+0x1abac>
  420098:	ldr	w8, [x22, #948]
  42009c:	cbnz	w8, 41fdd4 <feof@plt+0x1c534>
  4200a0:	mov	w8, #0x1                   	// #1
  4200a4:	mov	w2, #0x159                 	// #345
  4200a8:	mov	x0, x24
  4200ac:	mov	x1, x22
  4200b0:	mov	x3, xzr
  4200b4:	mov	x4, x26
  4200b8:	mov	w5, w21
  4200bc:	mov	w6, w20
  4200c0:	mov	w7, w19
  4200c4:	str	x25, [sp, #16]
  4200c8:	strb	w8, [sp, #8]
  4200cc:	str	x23, [sp]
  4200d0:	bl	41e44c <feof@plt+0x1abac>
  4200d4:	ldr	w8, [x22, #1108]
  4200d8:	cbnz	w8, 41fddc <feof@plt+0x1c53c>
  4200dc:	mov	w8, #0x1                   	// #1
  4200e0:	mov	w2, #0x188                 	// #392
  4200e4:	mov	x0, x24
  4200e8:	mov	x1, x22
  4200ec:	mov	x3, xzr
  4200f0:	mov	x4, x26
  4200f4:	mov	w5, w21
  4200f8:	mov	w6, w20
  4200fc:	mov	w7, w19
  420100:	str	x25, [sp, #16]
  420104:	strb	w8, [sp, #8]
  420108:	str	x23, [sp]
  42010c:	bl	41e44c <feof@plt+0x1abac>
  420110:	ldr	w8, [x22, #1120]
  420114:	cbnz	w8, 41fde4 <feof@plt+0x1c544>
  420118:	mov	w8, #0x1                   	// #1
  42011c:	mov	w2, #0x18b                 	// #395
  420120:	mov	x0, x24
  420124:	mov	x1, x22
  420128:	mov	x3, xzr
  42012c:	mov	x4, x26
  420130:	mov	w5, w21
  420134:	mov	w6, w20
  420138:	mov	w7, w19
  42013c:	str	x25, [sp, #16]
  420140:	strb	w8, [sp, #8]
  420144:	str	x23, [sp]
  420148:	bl	41e44c <feof@plt+0x1abac>
  42014c:	ldr	w8, [x22, #1292]
  420150:	cbnz	w8, 41fdec <feof@plt+0x1c54c>
  420154:	mov	w8, #0x1                   	// #1
  420158:	mov	w2, #0x1b8                 	// #440
  42015c:	mov	x0, x24
  420160:	mov	x1, x22
  420164:	mov	x3, xzr
  420168:	mov	x4, x26
  42016c:	mov	w5, w21
  420170:	mov	w6, w20
  420174:	mov	w7, w19
  420178:	str	x25, [sp, #16]
  42017c:	strb	w8, [sp, #8]
  420180:	str	x23, [sp]
  420184:	bl	41e44c <feof@plt+0x1abac>
  420188:	ldr	w8, [x22, #1312]
  42018c:	cbnz	w8, 41fdf4 <feof@plt+0x1c554>
  420190:	mov	w8, #0x1                   	// #1
  420194:	mov	w2, #0x1bd                 	// #445
  420198:	mov	x0, x24
  42019c:	mov	x1, x22
  4201a0:	mov	x3, xzr
  4201a4:	mov	x4, x26
  4201a8:	mov	w5, w21
  4201ac:	mov	w6, w20
  4201b0:	mov	w7, w19
  4201b4:	str	x25, [sp, #16]
  4201b8:	strb	w8, [sp, #8]
  4201bc:	str	x23, [sp]
  4201c0:	bl	41e44c <feof@plt+0x1abac>
  4201c4:	ldr	w8, [x22, #1328]
  4201c8:	cbnz	w8, 41fdfc <feof@plt+0x1c55c>
  4201cc:	ldr	w8, [x24, #1324]
  4201d0:	cbz	w8, 4201fc <feof@plt+0x1c95c>
  4201d4:	ldr	w8, [x24, #588]
  4201d8:	cmp	w8, #0x0
  4201dc:	cset	w4, ne  // ne = any
  4201e0:	b	420200 <feof@plt+0x1c960>
  4201e4:	ldr	w8, [x24, #1324]
  4201e8:	cbz	w8, 420278 <feof@plt+0x1c9d8>
  4201ec:	ldr	w8, [x24, #588]
  4201f0:	cmp	w8, #0x0
  4201f4:	cset	w4, ne  // ne = any
  4201f8:	b	42027c <feof@plt+0x1c9dc>
  4201fc:	mov	x4, xzr
  420200:	mov	w8, #0x1                   	// #1
  420204:	mov	w2, #0x1c3                 	// #451
  420208:	mov	x0, x24
  42020c:	mov	x1, x22
  420210:	mov	x3, xzr
  420214:	mov	w5, w21
  420218:	mov	w6, w20
  42021c:	mov	w7, w19
  420220:	str	x25, [sp, #16]
  420224:	strb	w8, [sp, #8]
  420228:	str	x23, [sp]
  42022c:	bl	41e44c <feof@plt+0x1abac>
  420230:	ldr	w8, [x22, #1360]
  420234:	cbnz	w8, 420468 <feof@plt+0x1cbc8>
  420238:	ldr	w8, [x24, #1324]
  42023c:	cbz	w8, 420250 <feof@plt+0x1c9b0>
  420240:	ldr	w8, [x24, #588]
  420244:	cmp	w8, #0x0
  420248:	cset	w4, ne  // ne = any
  42024c:	b	420254 <feof@plt+0x1c9b4>
  420250:	mov	x4, xzr
  420254:	mov	w8, #0x1                   	// #1
  420258:	str	x25, [sp, #16]
  42025c:	strb	w8, [sp, #8]
  420260:	mov	w2, #0x1cc                 	// #460
  420264:	str	x23, [sp]
  420268:	mov	x0, x24
  42026c:	mov	x1, x22
  420270:	mov	x3, xzr
  420274:	b	420458 <feof@plt+0x1cbb8>
  420278:	mov	x4, xzr
  42027c:	mov	w8, #0x1                   	// #1
  420280:	mov	w2, #0x1c3                 	// #451
  420284:	mov	x0, x24
  420288:	mov	x1, x22
  42028c:	mov	x3, xzr
  420290:	mov	w5, w21
  420294:	mov	w6, w20
  420298:	mov	w7, w19
  42029c:	str	x25, [sp, #16]
  4202a0:	strb	w8, [sp, #8]
  4202a4:	str	x23, [sp]
  4202a8:	bl	41e44c <feof@plt+0x1abac>
  4202ac:	ldr	w8, [x22, #1332]
  4202b0:	cbnz	w8, 41fe34 <feof@plt+0x1c594>
  4202b4:	mov	w8, #0x1                   	// #1
  4202b8:	mov	w2, #0x1c4                 	// #452
  4202bc:	mov	x0, x24
  4202c0:	mov	x1, x22
  4202c4:	mov	x3, xzr
  4202c8:	mov	x4, x26
  4202cc:	mov	w5, w21
  4202d0:	mov	w6, w20
  4202d4:	mov	w7, w19
  4202d8:	str	x25, [sp, #16]
  4202dc:	strb	w8, [sp, #8]
  4202e0:	str	x23, [sp]
  4202e4:	bl	41e44c <feof@plt+0x1abac>
  4202e8:	ldr	w8, [x22, #1344]
  4202ec:	cbnz	w8, 41fe3c <feof@plt+0x1c59c>
  4202f0:	mov	w8, #0x1                   	// #1
  4202f4:	mov	w2, #0x1c8                 	// #456
  4202f8:	mov	x0, x24
  4202fc:	mov	x1, x22
  420300:	mov	x3, xzr
  420304:	mov	x4, x26
  420308:	mov	w5, w21
  42030c:	mov	w6, w20
  420310:	mov	w7, w19
  420314:	str	x25, [sp, #16]
  420318:	strb	w8, [sp, #8]
  42031c:	str	x23, [sp]
  420320:	bl	41e44c <feof@plt+0x1abac>
  420324:	ldr	w8, [x22, #1348]
  420328:	cbnz	w8, 41fe44 <feof@plt+0x1c5a4>
  42032c:	mov	w8, #0x1                   	// #1
  420330:	mov	w2, #0x1c9                 	// #457
  420334:	mov	x0, x24
  420338:	mov	x1, x22
  42033c:	mov	x3, xzr
  420340:	mov	x4, x26
  420344:	mov	w5, w21
  420348:	mov	w6, w20
  42034c:	mov	w7, w19
  420350:	str	x25, [sp, #16]
  420354:	strb	w8, [sp, #8]
  420358:	str	x23, [sp]
  42035c:	bl	41e44c <feof@plt+0x1abac>
  420360:	ldr	w8, [x22, #1352]
  420364:	cbnz	w8, 41fe4c <feof@plt+0x1c5ac>
  420368:	mov	w8, #0x1                   	// #1
  42036c:	mov	w2, #0x1ca                 	// #458
  420370:	mov	x0, x24
  420374:	mov	x1, x22
  420378:	mov	x3, xzr
  42037c:	mov	x4, x26
  420380:	mov	w5, w21
  420384:	mov	w6, w20
  420388:	mov	w7, w19
  42038c:	str	x25, [sp, #16]
  420390:	strb	w8, [sp, #8]
  420394:	str	x23, [sp]
  420398:	bl	41e44c <feof@plt+0x1abac>
  42039c:	ldr	w8, [x22, #1360]
  4203a0:	cbnz	w8, 41fe54 <feof@plt+0x1c5b4>
  4203a4:	ldr	w8, [x24, #1324]
  4203a8:	cbz	w8, 4203bc <feof@plt+0x1cb1c>
  4203ac:	ldr	w8, [x24, #588]
  4203b0:	cmp	w8, #0x0
  4203b4:	cset	w4, ne  // ne = any
  4203b8:	b	4203c0 <feof@plt+0x1cb20>
  4203bc:	mov	x4, xzr
  4203c0:	mov	w8, #0x1                   	// #1
  4203c4:	mov	w2, #0x1cc                 	// #460
  4203c8:	mov	x0, x24
  4203cc:	mov	x1, x22
  4203d0:	mov	x3, xzr
  4203d4:	mov	w5, w21
  4203d8:	mov	w6, w20
  4203dc:	mov	w7, w19
  4203e0:	str	x25, [sp, #16]
  4203e4:	strb	w8, [sp, #8]
  4203e8:	str	x23, [sp]
  4203ec:	bl	41e44c <feof@plt+0x1abac>
  4203f0:	ldr	w8, [x22, #1368]
  4203f4:	cbnz	w8, 41fe5c <feof@plt+0x1c5bc>
  4203f8:	mov	w8, #0x1                   	// #1
  4203fc:	mov	w2, #0x1ce                 	// #462
  420400:	mov	x0, x24
  420404:	mov	x1, x22
  420408:	mov	x3, xzr
  42040c:	mov	x4, x26
  420410:	mov	w5, w21
  420414:	mov	w6, w20
  420418:	mov	w7, w19
  42041c:	str	x25, [sp, #16]
  420420:	strb	w8, [sp, #8]
  420424:	str	x23, [sp]
  420428:	bl	41e44c <feof@plt+0x1abac>
  42042c:	ldr	w8, [x22, #1372]
  420430:	cbnz	w8, 420468 <feof@plt+0x1cbc8>
  420434:	mov	w8, #0x1                   	// #1
  420438:	mov	w2, #0x1cf                 	// #463
  42043c:	str	x25, [sp, #16]
  420440:	strb	w8, [sp, #8]
  420444:	mov	x0, x24
  420448:	mov	x1, x22
  42044c:	mov	x3, xzr
  420450:	mov	x4, x26
  420454:	str	x23, [sp]
  420458:	mov	w5, w21
  42045c:	mov	w6, w20
  420460:	mov	w7, w19
  420464:	bl	41e44c <feof@plt+0x1abac>
  420468:	ldp	x20, x19, [sp, #96]
  42046c:	ldp	x22, x21, [sp, #80]
  420470:	ldp	x24, x23, [sp, #64]
  420474:	ldp	x26, x25, [sp, #48]
  420478:	ldp	x29, x30, [sp, #32]
  42047c:	mov	w0, #0x1                   	// #1
  420480:	add	sp, sp, #0x70
  420484:	ret
  420488:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42048c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  420490:	add	x0, x0, #0x36f
  420494:	add	x2, x2, #0x379
  420498:	mov	w1, #0x3a33                	// #14899
  42049c:	bl	429434 <feof@plt+0x25b94>
  4204a0:	mov	w0, #0x1                   	// #1
  4204a4:	ret
  4204a8:	mov	w0, #0x1                   	// #1
  4204ac:	ret
  4204b0:	mov	w0, #0x1                   	// #1
  4204b4:	ret
  4204b8:	mov	w0, #0x1                   	// #1
  4204bc:	ret
  4204c0:	sub	sp, sp, #0x70
  4204c4:	stp	x29, x30, [sp, #32]
  4204c8:	stp	x26, x25, [sp, #48]
  4204cc:	stp	x24, x23, [sp, #64]
  4204d0:	stp	x22, x21, [sp, #80]
  4204d4:	stp	x20, x19, [sp, #96]
  4204d8:	add	x29, sp, #0x20
  4204dc:	ldp	x25, x26, [x29, #80]
  4204e0:	mov	w19, w7
  4204e4:	mov	w20, w6
  4204e8:	mov	w21, w5
  4204ec:	mov	x24, x4
  4204f0:	mov	x22, x1
  4204f4:	cmp	w2, #0x104
  4204f8:	mov	x23, x0
  4204fc:	b.le	420524 <feof@plt+0x1cc84>
  420500:	cmp	w2, #0x160
  420504:	b.le	420560 <feof@plt+0x1ccc0>
  420508:	cmp	w2, #0x1c1
  42050c:	b.gt	4205d4 <feof@plt+0x1cd34>
  420510:	cmp	w2, #0x161
  420514:	b.eq	420608 <feof@plt+0x1cd68>  // b.none
  420518:	cmp	w2, #0x1b4
  42051c:	b.eq	420630 <feof@plt+0x1cd90>  // b.none
  420520:	b	421744 <feof@plt+0x1dea4>
  420524:	cmp	w2, #0xbe
  420528:	b.gt	420594 <feof@plt+0x1ccf4>
  42052c:	cmp	w2, #0x97
  420530:	b.eq	42064c <feof@plt+0x1cdac>  // b.none
  420534:	cmp	w2, #0xa3
  420538:	b.eq	420668 <feof@plt+0x1cdc8>  // b.none
  42053c:	cmp	w2, #0xb7
  420540:	b.ne	421744 <feof@plt+0x1dea4>  // b.any
  420544:	ldr	w8, [x22, #576]
  420548:	cbnz	w8, 421744 <feof@plt+0x1dea4>
  42054c:	mov	w8, #0x1                   	// #1
  420550:	str	x26, [sp, #16]
  420554:	strb	w8, [sp, #8]
  420558:	mov	w2, #0xef                  	// #239
  42055c:	b	421440 <feof@plt+0x1dba0>
  420560:	cmp	w2, #0x105
  420564:	b.eq	4207c4 <feof@plt+0x1cf24>  // b.none
  420568:	cmp	w2, #0x10f
  42056c:	b.eq	420810 <feof@plt+0x1cf70>  // b.none
  420570:	cmp	w2, #0x160
  420574:	b.ne	421744 <feof@plt+0x1dea4>  // b.any
  420578:	ldr	w8, [x22, #492]
  42057c:	cbnz	w8, 421744 <feof@plt+0x1dea4>
  420580:	mov	w8, #0x1                   	// #1
  420584:	str	x26, [sp, #16]
  420588:	strb	w8, [sp, #8]
  42058c:	mov	w2, #0xd9                  	// #217
  420590:	b	421440 <feof@plt+0x1dba0>
  420594:	cmp	w2, #0xbf
  420598:	b.eq	420868 <feof@plt+0x1cfc8>  // b.none
  42059c:	cmp	w2, #0xd3
  4205a0:	b.eq	420884 <feof@plt+0x1cfe4>  // b.none
  4205a4:	cmp	w2, #0xf4
  4205a8:	b.ne	421744 <feof@plt+0x1dea4>  // b.any
  4205ac:	ldr	w8, [x22, #696]
  4205b0:	cbnz	w8, 421744 <feof@plt+0x1dea4>
  4205b4:	cmp	x24, #0x0
  4205b8:	mov	w8, #0x3                   	// #3
  4205bc:	csel	x4, xzr, x8, eq  // eq = none
  4205c0:	mov	w8, #0x1                   	// #1
  4205c4:	str	x26, [sp, #16]
  4205c8:	strb	w8, [sp, #8]
  4205cc:	mov	w2, #0x111                 	// #273
  4205d0:	b	421724 <feof@plt+0x1de84>
  4205d4:	cmp	w2, #0x1c2
  4205d8:	b.eq	4208dc <feof@plt+0x1d03c>  // b.none
  4205dc:	cmp	w2, #0x1cf
  4205e0:	b.ne	421744 <feof@plt+0x1dea4>  // b.any
  4205e4:	ldr	w8, [x22, #1336]
  4205e8:	cbnz	w8, 421744 <feof@plt+0x1dea4>
  4205ec:	cmp	x24, #0x0
  4205f0:	cset	w4, ne  // ne = any
  4205f4:	mov	w8, #0x1                   	// #1
  4205f8:	mov	w2, #0x1c6                 	// #454
  4205fc:	str	x26, [sp, #16]
  420600:	strb	w8, [sp, #8]
  420604:	b	421724 <feof@plt+0x1de84>
  420608:	ldr	w8, [x22, #572]
  42060c:	cbz	w8, 4208f8 <feof@plt+0x1d058>
  420610:	ldr	w8, [x22, #808]
  420614:	cbz	w8, 420934 <feof@plt+0x1d094>
  420618:	ldr	w8, [x22, #940]
  42061c:	cbz	w8, 420978 <feof@plt+0x1d0d8>
  420620:	ldr	w8, [x22, #992]
  420624:	cbz	w8, 4209b4 <feof@plt+0x1d114>
  420628:	ldr	w8, [x22, #1000]
  42062c:	cbz	w8, 4209f0 <feof@plt+0x1d150>
  420630:	ldr	w8, [x22, #1388]
  420634:	cbnz	w8, 421744 <feof@plt+0x1dea4>
  420638:	mov	w8, #0x1                   	// #1
  42063c:	str	x26, [sp, #16]
  420640:	strb	w8, [sp, #8]
  420644:	mov	w2, #0x1d3                 	// #467
  420648:	b	421440 <feof@plt+0x1dba0>
  42064c:	ldr	w8, [x22, #1024]
  420650:	cbnz	w8, 421744 <feof@plt+0x1dea4>
  420654:	mov	w8, #0x1                   	// #1
  420658:	str	x26, [sp, #16]
  42065c:	strb	w8, [sp, #8]
  420660:	mov	w2, #0x16e                 	// #366
  420664:	b	421440 <feof@plt+0x1dba0>
  420668:	ldr	w8, [x22, #272]
  42066c:	cbz	w8, 420a30 <feof@plt+0x1d190>
  420670:	ldr	w8, [x22, #336]
  420674:	cbz	w8, 420a6c <feof@plt+0x1d1cc>
  420678:	ldr	w8, [x22, #364]
  42067c:	cbz	w8, 420aac <feof@plt+0x1d20c>
  420680:	ldr	w8, [x22, #368]
  420684:	cbz	w8, 420ae8 <feof@plt+0x1d248>
  420688:	ldr	w8, [x22, #436]
  42068c:	cbz	w8, 420b24 <feof@plt+0x1d284>
  420690:	ldr	w8, [x22, #456]
  420694:	cbz	w8, 420b60 <feof@plt+0x1d2c0>
  420698:	ldr	w8, [x22, #552]
  42069c:	cbz	w8, 420b9c <feof@plt+0x1d2fc>
  4206a0:	ldr	w8, [x22, #576]
  4206a4:	cbz	w8, 420bd8 <feof@plt+0x1d338>
  4206a8:	ldr	w8, [x22, #644]
  4206ac:	cbz	w8, 420c14 <feof@plt+0x1d374>
  4206b0:	ldr	w8, [x22, #648]
  4206b4:	cbz	w8, 420c54 <feof@plt+0x1d3b4>
  4206b8:	ldr	w8, [x22, #692]
  4206bc:	cbz	w8, 420c90 <feof@plt+0x1d3f0>
  4206c0:	ldr	w8, [x22, #740]
  4206c4:	cbz	w8, 420ccc <feof@plt+0x1d42c>
  4206c8:	ldr	w8, [x22, #792]
  4206cc:	cbz	w8, 420d08 <feof@plt+0x1d468>
  4206d0:	ldr	w8, [x22, #808]
  4206d4:	cbz	w8, 420d44 <feof@plt+0x1d4a4>
  4206d8:	ldr	w8, [x22, #812]
  4206dc:	cbz	w8, 420d88 <feof@plt+0x1d4e8>
  4206e0:	ldr	w8, [x22, #816]
  4206e4:	cbz	w8, 420dc4 <feof@plt+0x1d524>
  4206e8:	ldr	w8, [x22, #820]
  4206ec:	cbz	w8, 420e00 <feof@plt+0x1d560>
  4206f0:	ldr	w8, [x22, #824]
  4206f4:	cbz	w8, 420e3c <feof@plt+0x1d59c>
  4206f8:	ldr	w8, [x22, #828]
  4206fc:	cbz	w8, 420e78 <feof@plt+0x1d5d8>
  420700:	ldr	w8, [x22, #832]
  420704:	cbz	w8, 420eb4 <feof@plt+0x1d614>
  420708:	ldr	w8, [x22, #868]
  42070c:	cbz	w8, 420ef0 <feof@plt+0x1d650>
  420710:	ldr	w8, [x22, #900]
  420714:	cbz	w8, 420f2c <feof@plt+0x1d68c>
  420718:	ldr	w8, [x22, #904]
  42071c:	cbz	w8, 420f68 <feof@plt+0x1d6c8>
  420720:	ldr	w8, [x22, #932]
  420724:	cbz	w8, 420fa4 <feof@plt+0x1d704>
  420728:	ldr	w8, [x22, #964]
  42072c:	cbz	w8, 420fe0 <feof@plt+0x1d740>
  420730:	ldr	w8, [x22, #972]
  420734:	cbz	w8, 42101c <feof@plt+0x1d77c>
  420738:	ldr	w8, [x22, #1000]
  42073c:	cbz	w8, 421058 <feof@plt+0x1d7b8>
  420740:	ldr	w8, [x22, #1056]
  420744:	cbz	w8, 421094 <feof@plt+0x1d7f4>
  420748:	ldr	w8, [x22, #1064]
  42074c:	cbz	w8, 4210d0 <feof@plt+0x1d830>
  420750:	ldr	w8, [x22, #1072]
  420754:	cbz	w8, 42110c <feof@plt+0x1d86c>
  420758:	ldr	w8, [x22, #1128]
  42075c:	cbz	w8, 421148 <feof@plt+0x1d8a8>
  420760:	ldr	w8, [x22, #1132]
  420764:	cbz	w8, 421184 <feof@plt+0x1d8e4>
  420768:	ldr	w8, [x22, #1152]
  42076c:	cbz	w8, 4211c0 <feof@plt+0x1d920>
  420770:	ldr	w8, [x22, #1160]
  420774:	cbz	w8, 421204 <feof@plt+0x1d964>
  420778:	ldr	w8, [x22, #1172]
  42077c:	cbz	w8, 421244 <feof@plt+0x1d9a4>
  420780:	ldr	w8, [x22, #1176]
  420784:	cbz	w8, 421288 <feof@plt+0x1d9e8>
  420788:	ldr	w8, [x22, #1224]
  42078c:	cbz	w8, 4212c4 <feof@plt+0x1da24>
  420790:	ldr	w8, [x22, #1264]
  420794:	cbz	w8, 421300 <feof@plt+0x1da60>
  420798:	ldr	w8, [x22, #1288]
  42079c:	cbz	w8, 42133c <feof@plt+0x1da9c>
  4207a0:	ldr	w8, [x22, #1312]
  4207a4:	cbz	w8, 421378 <feof@plt+0x1dad8>
  4207a8:	ldr	w8, [x22, #1316]
  4207ac:	cbz	w8, 4213b4 <feof@plt+0x1db14>
  4207b0:	ldr	w8, [x22, #1324]
  4207b4:	cbz	w8, 4213f4 <feof@plt+0x1db54>
  4207b8:	ldr	w8, [x22, #1416]
  4207bc:	cbnz	w8, 421744 <feof@plt+0x1dea4>
  4207c0:	b	421430 <feof@plt+0x1db90>
  4207c4:	ldr	w8, [x22, #608]
  4207c8:	cbz	w8, 421458 <feof@plt+0x1dbb8>
  4207cc:	ldr	w8, [x22, #612]
  4207d0:	cbz	w8, 4214ac <feof@plt+0x1dc0c>
  4207d4:	ldr	w8, [x22, #616]
  4207d8:	cbz	w8, 421500 <feof@plt+0x1dc60>
  4207dc:	ldr	w8, [x22, #620]
  4207e0:	cbz	w8, 421554 <feof@plt+0x1dcb4>
  4207e4:	ldr	w8, [x22, #624]
  4207e8:	cbz	w8, 4215a8 <feof@plt+0x1dd08>
  4207ec:	ldr	w8, [x22, #632]
  4207f0:	cbz	w8, 4215fc <feof@plt+0x1dd5c>
  4207f4:	ldr	w8, [x22, #636]
  4207f8:	cbz	w8, 421650 <feof@plt+0x1ddb0>
  4207fc:	ldr	w8, [x22, #640]
  420800:	cbz	w8, 4216a4 <feof@plt+0x1de04>
  420804:	ldr	w8, [x22, #900]
  420808:	cbnz	w8, 421744 <feof@plt+0x1dea4>
  42080c:	b	4216f8 <feof@plt+0x1de58>
  420810:	ldr	w8, [x22, #700]
  420814:	cbnz	w8, 42084c <feof@plt+0x1cfac>
  420818:	mov	w8, #0x1                   	// #1
  42081c:	mov	w2, #0x112                 	// #274
  420820:	mov	x0, x23
  420824:	mov	x1, x22
  420828:	mov	x3, xzr
  42082c:	mov	x4, x24
  420830:	mov	w5, w21
  420834:	mov	w6, w20
  420838:	mov	w7, w19
  42083c:	str	x26, [sp, #16]
  420840:	strb	w8, [sp, #8]
  420844:	str	x25, [sp]
  420848:	bl	41e44c <feof@plt+0x1abac>
  42084c:	ldr	w8, [x22, #704]
  420850:	cbnz	w8, 421744 <feof@plt+0x1dea4>
  420854:	mov	w8, #0x1                   	// #1
  420858:	str	x26, [sp, #16]
  42085c:	strb	w8, [sp, #8]
  420860:	mov	w2, #0x113                 	// #275
  420864:	b	421440 <feof@plt+0x1dba0>
  420868:	ldr	w8, [x22, #800]
  42086c:	cbnz	w8, 421744 <feof@plt+0x1dea4>
  420870:	mov	w8, #0x1                   	// #1
  420874:	str	x26, [sp, #16]
  420878:	strb	w8, [sp, #8]
  42087c:	mov	w2, #0x12d                 	// #301
  420880:	b	421440 <feof@plt+0x1dba0>
  420884:	ldr	w8, [x22, #600]
  420888:	cbnz	w8, 4208c0 <feof@plt+0x1d020>
  42088c:	mov	w8, #0x1                   	// #1
  420890:	mov	w2, #0xf7                  	// #247
  420894:	mov	x0, x23
  420898:	mov	x1, x22
  42089c:	mov	x3, xzr
  4208a0:	mov	x4, x24
  4208a4:	mov	w5, w21
  4208a8:	mov	w6, w20
  4208ac:	mov	w7, w19
  4208b0:	str	x26, [sp, #16]
  4208b4:	strb	w8, [sp, #8]
  4208b8:	str	x25, [sp]
  4208bc:	bl	41e44c <feof@plt+0x1abac>
  4208c0:	ldr	w8, [x22, #1112]
  4208c4:	cbnz	w8, 421744 <feof@plt+0x1dea4>
  4208c8:	mov	w8, #0x1                   	// #1
  4208cc:	str	x26, [sp, #16]
  4208d0:	strb	w8, [sp, #8]
  4208d4:	mov	w2, #0x189                 	// #393
  4208d8:	b	421440 <feof@plt+0x1dba0>
  4208dc:	ldr	w8, [x22, #1372]
  4208e0:	cbnz	w8, 421744 <feof@plt+0x1dea4>
  4208e4:	mov	w8, #0x1                   	// #1
  4208e8:	mov	w2, #0x1cf                 	// #463
  4208ec:	str	x26, [sp, #16]
  4208f0:	strb	w8, [sp, #8]
  4208f4:	b	421440 <feof@plt+0x1dba0>
  4208f8:	mov	w8, #0x1                   	// #1
  4208fc:	mov	w2, #0xee                  	// #238
  420900:	mov	x0, x23
  420904:	mov	x1, x22
  420908:	mov	x3, xzr
  42090c:	mov	x4, x24
  420910:	mov	w5, w21
  420914:	mov	w6, w20
  420918:	mov	w7, w19
  42091c:	str	x26, [sp, #16]
  420920:	strb	w8, [sp, #8]
  420924:	str	x25, [sp]
  420928:	bl	41e44c <feof@plt+0x1abac>
  42092c:	ldr	w8, [x22, #808]
  420930:	cbnz	w8, 420618 <feof@plt+0x1cd78>
  420934:	cmp	x24, #0x0
  420938:	cset	w8, ne  // ne = any
  42093c:	lsl	x4, x8, #1
  420940:	mov	w8, #0x1                   	// #1
  420944:	mov	w2, #0x12f                 	// #303
  420948:	mov	x0, x23
  42094c:	mov	x1, x22
  420950:	mov	x3, xzr
  420954:	mov	w5, w21
  420958:	mov	w6, w20
  42095c:	mov	w7, w19
  420960:	str	x26, [sp, #16]
  420964:	strb	w8, [sp, #8]
  420968:	str	x25, [sp]
  42096c:	bl	41e44c <feof@plt+0x1abac>
  420970:	ldr	w8, [x22, #940]
  420974:	cbnz	w8, 420620 <feof@plt+0x1cd80>
  420978:	mov	w8, #0x1                   	// #1
  42097c:	mov	w2, #0x157                 	// #343
  420980:	mov	x0, x23
  420984:	mov	x1, x22
  420988:	mov	x3, xzr
  42098c:	mov	x4, x24
  420990:	mov	w5, w21
  420994:	mov	w6, w20
  420998:	mov	w7, w19
  42099c:	str	x26, [sp, #16]
  4209a0:	strb	w8, [sp, #8]
  4209a4:	str	x25, [sp]
  4209a8:	bl	41e44c <feof@plt+0x1abac>
  4209ac:	ldr	w8, [x22, #992]
  4209b0:	cbnz	w8, 420628 <feof@plt+0x1cd88>
  4209b4:	mov	w8, #0x1                   	// #1
  4209b8:	mov	w2, #0x166                 	// #358
  4209bc:	mov	x0, x23
  4209c0:	mov	x1, x22
  4209c4:	mov	x3, xzr
  4209c8:	mov	x4, x24
  4209cc:	mov	w5, w21
  4209d0:	mov	w6, w20
  4209d4:	mov	w7, w19
  4209d8:	str	x26, [sp, #16]
  4209dc:	strb	w8, [sp, #8]
  4209e0:	str	x25, [sp]
  4209e4:	bl	41e44c <feof@plt+0x1abac>
  4209e8:	ldr	w8, [x22, #1000]
  4209ec:	cbnz	w8, 420630 <feof@plt+0x1cd90>
  4209f0:	mov	w8, #0x1                   	// #1
  4209f4:	mov	w2, #0x168                 	// #360
  4209f8:	mov	x0, x23
  4209fc:	mov	x1, x22
  420a00:	mov	x3, xzr
  420a04:	mov	x4, x24
  420a08:	mov	w5, w21
  420a0c:	mov	w6, w20
  420a10:	mov	w7, w19
  420a14:	str	x26, [sp, #16]
  420a18:	strb	w8, [sp, #8]
  420a1c:	str	x25, [sp]
  420a20:	bl	41e44c <feof@plt+0x1abac>
  420a24:	ldr	w8, [x22, #1388]
  420a28:	cbnz	w8, 421744 <feof@plt+0x1dea4>
  420a2c:	b	420638 <feof@plt+0x1cd98>
  420a30:	mov	w8, #0x1                   	// #1
  420a34:	mov	w2, #0x9b                  	// #155
  420a38:	mov	x0, x23
  420a3c:	mov	x1, x22
  420a40:	mov	x3, xzr
  420a44:	mov	x4, x24
  420a48:	mov	w5, w21
  420a4c:	mov	w6, w20
  420a50:	mov	w7, w19
  420a54:	str	x26, [sp, #16]
  420a58:	strb	w8, [sp, #8]
  420a5c:	str	x25, [sp]
  420a60:	bl	41e44c <feof@plt+0x1abac>
  420a64:	ldr	w8, [x22, #336]
  420a68:	cbnz	w8, 420678 <feof@plt+0x1cdd8>
  420a6c:	cmp	x24, #0x0
  420a70:	cset	w4, ne  // ne = any
  420a74:	mov	w8, #0x1                   	// #1
  420a78:	mov	w2, #0xab                  	// #171
  420a7c:	mov	x0, x23
  420a80:	mov	x1, x22
  420a84:	mov	x3, xzr
  420a88:	mov	w5, w21
  420a8c:	mov	w6, w20
  420a90:	mov	w7, w19
  420a94:	str	x26, [sp, #16]
  420a98:	strb	w8, [sp, #8]
  420a9c:	str	x25, [sp]
  420aa0:	bl	41e44c <feof@plt+0x1abac>
  420aa4:	ldr	w8, [x22, #364]
  420aa8:	cbnz	w8, 420680 <feof@plt+0x1cde0>
  420aac:	mov	w8, #0x1                   	// #1
  420ab0:	mov	w2, #0xb3                  	// #179
  420ab4:	mov	x0, x23
  420ab8:	mov	x1, x22
  420abc:	mov	x3, xzr
  420ac0:	mov	x4, x24
  420ac4:	mov	w5, w21
  420ac8:	mov	w6, w20
  420acc:	mov	w7, w19
  420ad0:	str	x26, [sp, #16]
  420ad4:	strb	w8, [sp, #8]
  420ad8:	str	x25, [sp]
  420adc:	bl	41e44c <feof@plt+0x1abac>
  420ae0:	ldr	w8, [x22, #368]
  420ae4:	cbnz	w8, 420688 <feof@plt+0x1cde8>
  420ae8:	mov	w8, #0x1                   	// #1
  420aec:	mov	w2, #0xb4                  	// #180
  420af0:	mov	x0, x23
  420af4:	mov	x1, x22
  420af8:	mov	x3, xzr
  420afc:	mov	x4, x24
  420b00:	mov	w5, w21
  420b04:	mov	w6, w20
  420b08:	mov	w7, w19
  420b0c:	str	x26, [sp, #16]
  420b10:	strb	w8, [sp, #8]
  420b14:	str	x25, [sp]
  420b18:	bl	41e44c <feof@plt+0x1abac>
  420b1c:	ldr	w8, [x22, #436]
  420b20:	cbnz	w8, 420690 <feof@plt+0x1cdf0>
  420b24:	mov	w8, #0x1                   	// #1
  420b28:	mov	w2, #0xc9                  	// #201
  420b2c:	mov	x0, x23
  420b30:	mov	x1, x22
  420b34:	mov	x3, xzr
  420b38:	mov	x4, x24
  420b3c:	mov	w5, w21
  420b40:	mov	w6, w20
  420b44:	mov	w7, w19
  420b48:	str	x26, [sp, #16]
  420b4c:	strb	w8, [sp, #8]
  420b50:	str	x25, [sp]
  420b54:	bl	41e44c <feof@plt+0x1abac>
  420b58:	ldr	w8, [x22, #456]
  420b5c:	cbnz	w8, 420698 <feof@plt+0x1cdf8>
  420b60:	mov	w8, #0x1                   	// #1
  420b64:	mov	w2, #0xcf                  	// #207
  420b68:	mov	x0, x23
  420b6c:	mov	x1, x22
  420b70:	mov	x3, xzr
  420b74:	mov	x4, x24
  420b78:	mov	w5, w21
  420b7c:	mov	w6, w20
  420b80:	mov	w7, w19
  420b84:	str	x26, [sp, #16]
  420b88:	strb	w8, [sp, #8]
  420b8c:	str	x25, [sp]
  420b90:	bl	41e44c <feof@plt+0x1abac>
  420b94:	ldr	w8, [x22, #552]
  420b98:	cbnz	w8, 4206a0 <feof@plt+0x1ce00>
  420b9c:	mov	w8, #0x1                   	// #1
  420ba0:	mov	w2, #0xe9                  	// #233
  420ba4:	mov	x0, x23
  420ba8:	mov	x1, x22
  420bac:	mov	x3, xzr
  420bb0:	mov	x4, x24
  420bb4:	mov	w5, w21
  420bb8:	mov	w6, w20
  420bbc:	mov	w7, w19
  420bc0:	str	x26, [sp, #16]
  420bc4:	strb	w8, [sp, #8]
  420bc8:	str	x25, [sp]
  420bcc:	bl	41e44c <feof@plt+0x1abac>
  420bd0:	ldr	w8, [x22, #576]
  420bd4:	cbnz	w8, 4206a8 <feof@plt+0x1ce08>
  420bd8:	mov	w8, #0x1                   	// #1
  420bdc:	mov	w2, #0xef                  	// #239
  420be0:	mov	x0, x23
  420be4:	mov	x1, x22
  420be8:	mov	x3, xzr
  420bec:	mov	x4, x24
  420bf0:	mov	w5, w21
  420bf4:	mov	w6, w20
  420bf8:	mov	w7, w19
  420bfc:	str	x26, [sp, #16]
  420c00:	strb	w8, [sp, #8]
  420c04:	str	x25, [sp]
  420c08:	bl	41e44c <feof@plt+0x1abac>
  420c0c:	ldr	w8, [x22, #644]
  420c10:	cbnz	w8, 4206b0 <feof@plt+0x1ce10>
  420c14:	cmp	x24, #0x0
  420c18:	cset	w4, ne  // ne = any
  420c1c:	mov	w8, #0x1                   	// #1
  420c20:	mov	w2, #0x105                 	// #261
  420c24:	mov	x0, x23
  420c28:	mov	x1, x22
  420c2c:	mov	x3, xzr
  420c30:	mov	w5, w21
  420c34:	mov	w6, w20
  420c38:	mov	w7, w19
  420c3c:	str	x26, [sp, #16]
  420c40:	strb	w8, [sp, #8]
  420c44:	str	x25, [sp]
  420c48:	bl	41e44c <feof@plt+0x1abac>
  420c4c:	ldr	w8, [x22, #648]
  420c50:	cbnz	w8, 4206b8 <feof@plt+0x1ce18>
  420c54:	mov	w8, #0x1                   	// #1
  420c58:	mov	w2, #0x106                 	// #262
  420c5c:	mov	x0, x23
  420c60:	mov	x1, x22
  420c64:	mov	x3, xzr
  420c68:	mov	x4, x24
  420c6c:	mov	w5, w21
  420c70:	mov	w6, w20
  420c74:	mov	w7, w19
  420c78:	str	x26, [sp, #16]
  420c7c:	strb	w8, [sp, #8]
  420c80:	str	x25, [sp]
  420c84:	bl	41e44c <feof@plt+0x1abac>
  420c88:	ldr	w8, [x22, #692]
  420c8c:	cbnz	w8, 4206c0 <feof@plt+0x1ce20>
  420c90:	mov	w8, #0x1                   	// #1
  420c94:	mov	w2, #0x10f                 	// #271
  420c98:	mov	x0, x23
  420c9c:	mov	x1, x22
  420ca0:	mov	x3, xzr
  420ca4:	mov	x4, x24
  420ca8:	mov	w5, w21
  420cac:	mov	w6, w20
  420cb0:	mov	w7, w19
  420cb4:	str	x26, [sp, #16]
  420cb8:	strb	w8, [sp, #8]
  420cbc:	str	x25, [sp]
  420cc0:	bl	41e44c <feof@plt+0x1abac>
  420cc4:	ldr	w8, [x22, #740]
  420cc8:	cbnz	w8, 4206c8 <feof@plt+0x1ce28>
  420ccc:	mov	w8, #0x1                   	// #1
  420cd0:	mov	w2, #0x11d                 	// #285
  420cd4:	mov	x0, x23
  420cd8:	mov	x1, x22
  420cdc:	mov	x3, xzr
  420ce0:	mov	x4, x24
  420ce4:	mov	w5, w21
  420ce8:	mov	w6, w20
  420cec:	mov	w7, w19
  420cf0:	str	x26, [sp, #16]
  420cf4:	strb	w8, [sp, #8]
  420cf8:	str	x25, [sp]
  420cfc:	bl	41e44c <feof@plt+0x1abac>
  420d00:	ldr	w8, [x22, #792]
  420d04:	cbnz	w8, 4206d0 <feof@plt+0x1ce30>
  420d08:	mov	w8, #0x1                   	// #1
  420d0c:	mov	w2, #0x12b                 	// #299
  420d10:	mov	x0, x23
  420d14:	mov	x1, x22
  420d18:	mov	x3, xzr
  420d1c:	mov	x4, x24
  420d20:	mov	w5, w21
  420d24:	mov	w6, w20
  420d28:	mov	w7, w19
  420d2c:	str	x26, [sp, #16]
  420d30:	strb	w8, [sp, #8]
  420d34:	str	x25, [sp]
  420d38:	bl	41e44c <feof@plt+0x1abac>
  420d3c:	ldr	w8, [x22, #808]
  420d40:	cbnz	w8, 4206d8 <feof@plt+0x1ce38>
  420d44:	cmp	x24, #0x0
  420d48:	cset	w8, ne  // ne = any
  420d4c:	lsl	x4, x8, #1
  420d50:	mov	w8, #0x1                   	// #1
  420d54:	mov	w2, #0x12f                 	// #303
  420d58:	mov	x0, x23
  420d5c:	mov	x1, x22
  420d60:	mov	x3, xzr
  420d64:	mov	w5, w21
  420d68:	mov	w6, w20
  420d6c:	mov	w7, w19
  420d70:	str	x26, [sp, #16]
  420d74:	strb	w8, [sp, #8]
  420d78:	str	x25, [sp]
  420d7c:	bl	41e44c <feof@plt+0x1abac>
  420d80:	ldr	w8, [x22, #812]
  420d84:	cbnz	w8, 4206e0 <feof@plt+0x1ce40>
  420d88:	mov	w8, #0x1                   	// #1
  420d8c:	mov	w2, #0x130                 	// #304
  420d90:	mov	x0, x23
  420d94:	mov	x1, x22
  420d98:	mov	x3, xzr
  420d9c:	mov	x4, x24
  420da0:	mov	w5, w21
  420da4:	mov	w6, w20
  420da8:	mov	w7, w19
  420dac:	str	x26, [sp, #16]
  420db0:	strb	w8, [sp, #8]
  420db4:	str	x25, [sp]
  420db8:	bl	41e44c <feof@plt+0x1abac>
  420dbc:	ldr	w8, [x22, #816]
  420dc0:	cbnz	w8, 4206e8 <feof@plt+0x1ce48>
  420dc4:	mov	w8, #0x1                   	// #1
  420dc8:	mov	w2, #0x131                 	// #305
  420dcc:	mov	x0, x23
  420dd0:	mov	x1, x22
  420dd4:	mov	x3, xzr
  420dd8:	mov	x4, x24
  420ddc:	mov	w5, w21
  420de0:	mov	w6, w20
  420de4:	mov	w7, w19
  420de8:	str	x26, [sp, #16]
  420dec:	strb	w8, [sp, #8]
  420df0:	str	x25, [sp]
  420df4:	bl	41e44c <feof@plt+0x1abac>
  420df8:	ldr	w8, [x22, #820]
  420dfc:	cbnz	w8, 4206f0 <feof@plt+0x1ce50>
  420e00:	mov	w8, #0x1                   	// #1
  420e04:	mov	w2, #0x132                 	// #306
  420e08:	mov	x0, x23
  420e0c:	mov	x1, x22
  420e10:	mov	x3, xzr
  420e14:	mov	x4, x24
  420e18:	mov	w5, w21
  420e1c:	mov	w6, w20
  420e20:	mov	w7, w19
  420e24:	str	x26, [sp, #16]
  420e28:	strb	w8, [sp, #8]
  420e2c:	str	x25, [sp]
  420e30:	bl	41e44c <feof@plt+0x1abac>
  420e34:	ldr	w8, [x22, #824]
  420e38:	cbnz	w8, 4206f8 <feof@plt+0x1ce58>
  420e3c:	mov	w8, #0x1                   	// #1
  420e40:	mov	w2, #0x133                 	// #307
  420e44:	mov	x0, x23
  420e48:	mov	x1, x22
  420e4c:	mov	x3, xzr
  420e50:	mov	x4, x24
  420e54:	mov	w5, w21
  420e58:	mov	w6, w20
  420e5c:	mov	w7, w19
  420e60:	str	x26, [sp, #16]
  420e64:	strb	w8, [sp, #8]
  420e68:	str	x25, [sp]
  420e6c:	bl	41e44c <feof@plt+0x1abac>
  420e70:	ldr	w8, [x22, #828]
  420e74:	cbnz	w8, 420700 <feof@plt+0x1ce60>
  420e78:	mov	w8, #0x1                   	// #1
  420e7c:	mov	w2, #0x134                 	// #308
  420e80:	mov	x0, x23
  420e84:	mov	x1, x22
  420e88:	mov	x3, xzr
  420e8c:	mov	x4, x24
  420e90:	mov	w5, w21
  420e94:	mov	w6, w20
  420e98:	mov	w7, w19
  420e9c:	str	x26, [sp, #16]
  420ea0:	strb	w8, [sp, #8]
  420ea4:	str	x25, [sp]
  420ea8:	bl	41e44c <feof@plt+0x1abac>
  420eac:	ldr	w8, [x22, #832]
  420eb0:	cbnz	w8, 420708 <feof@plt+0x1ce68>
  420eb4:	mov	w8, #0x1                   	// #1
  420eb8:	mov	w2, #0x135                 	// #309
  420ebc:	mov	x0, x23
  420ec0:	mov	x1, x22
  420ec4:	mov	x3, xzr
  420ec8:	mov	x4, x24
  420ecc:	mov	w5, w21
  420ed0:	mov	w6, w20
  420ed4:	mov	w7, w19
  420ed8:	str	x26, [sp, #16]
  420edc:	strb	w8, [sp, #8]
  420ee0:	str	x25, [sp]
  420ee4:	bl	41e44c <feof@plt+0x1abac>
  420ee8:	ldr	w8, [x22, #868]
  420eec:	cbnz	w8, 420710 <feof@plt+0x1ce70>
  420ef0:	mov	w8, #0x1                   	// #1
  420ef4:	mov	w2, #0x141                 	// #321
  420ef8:	mov	x0, x23
  420efc:	mov	x1, x22
  420f00:	mov	x3, xzr
  420f04:	mov	x4, x24
  420f08:	mov	w5, w21
  420f0c:	mov	w6, w20
  420f10:	mov	w7, w19
  420f14:	str	x26, [sp, #16]
  420f18:	strb	w8, [sp, #8]
  420f1c:	str	x25, [sp]
  420f20:	bl	41e44c <feof@plt+0x1abac>
  420f24:	ldr	w8, [x22, #900]
  420f28:	cbnz	w8, 420718 <feof@plt+0x1ce78>
  420f2c:	mov	w8, #0x1                   	// #1
  420f30:	mov	w2, #0x14c                 	// #332
  420f34:	mov	x0, x23
  420f38:	mov	x1, x22
  420f3c:	mov	x3, xzr
  420f40:	mov	x4, x24
  420f44:	mov	w5, w21
  420f48:	mov	w6, w20
  420f4c:	mov	w7, w19
  420f50:	str	x26, [sp, #16]
  420f54:	strb	w8, [sp, #8]
  420f58:	str	x25, [sp]
  420f5c:	bl	41e44c <feof@plt+0x1abac>
  420f60:	ldr	w8, [x22, #904]
  420f64:	cbnz	w8, 420720 <feof@plt+0x1ce80>
  420f68:	mov	w8, #0x1                   	// #1
  420f6c:	mov	w2, #0x14d                 	// #333
  420f70:	mov	x0, x23
  420f74:	mov	x1, x22
  420f78:	mov	x3, xzr
  420f7c:	mov	x4, x24
  420f80:	mov	w5, w21
  420f84:	mov	w6, w20
  420f88:	mov	w7, w19
  420f8c:	str	x26, [sp, #16]
  420f90:	strb	w8, [sp, #8]
  420f94:	str	x25, [sp]
  420f98:	bl	41e44c <feof@plt+0x1abac>
  420f9c:	ldr	w8, [x22, #932]
  420fa0:	cbnz	w8, 420728 <feof@plt+0x1ce88>
  420fa4:	mov	w8, #0x1                   	// #1
  420fa8:	mov	w2, #0x155                 	// #341
  420fac:	mov	x0, x23
  420fb0:	mov	x1, x22
  420fb4:	mov	x3, xzr
  420fb8:	mov	x4, x24
  420fbc:	mov	w5, w21
  420fc0:	mov	w6, w20
  420fc4:	mov	w7, w19
  420fc8:	str	x26, [sp, #16]
  420fcc:	strb	w8, [sp, #8]
  420fd0:	str	x25, [sp]
  420fd4:	bl	41e44c <feof@plt+0x1abac>
  420fd8:	ldr	w8, [x22, #964]
  420fdc:	cbnz	w8, 420730 <feof@plt+0x1ce90>
  420fe0:	mov	w8, #0x1                   	// #1
  420fe4:	mov	w2, #0x15e                 	// #350
  420fe8:	mov	x0, x23
  420fec:	mov	x1, x22
  420ff0:	mov	x3, xzr
  420ff4:	mov	x4, x24
  420ff8:	mov	w5, w21
  420ffc:	mov	w6, w20
  421000:	mov	w7, w19
  421004:	str	x26, [sp, #16]
  421008:	strb	w8, [sp, #8]
  42100c:	str	x25, [sp]
  421010:	bl	41e44c <feof@plt+0x1abac>
  421014:	ldr	w8, [x22, #972]
  421018:	cbnz	w8, 420738 <feof@plt+0x1ce98>
  42101c:	mov	w8, #0x1                   	// #1
  421020:	mov	w2, #0x160                 	// #352
  421024:	mov	x0, x23
  421028:	mov	x1, x22
  42102c:	mov	x3, xzr
  421030:	mov	x4, x24
  421034:	mov	w5, w21
  421038:	mov	w6, w20
  42103c:	mov	w7, w19
  421040:	str	x26, [sp, #16]
  421044:	strb	w8, [sp, #8]
  421048:	str	x25, [sp]
  42104c:	bl	41e44c <feof@plt+0x1abac>
  421050:	ldr	w8, [x22, #1000]
  421054:	cbnz	w8, 420740 <feof@plt+0x1cea0>
  421058:	mov	w8, #0x1                   	// #1
  42105c:	mov	w2, #0x168                 	// #360
  421060:	mov	x0, x23
  421064:	mov	x1, x22
  421068:	mov	x3, xzr
  42106c:	mov	x4, x24
  421070:	mov	w5, w21
  421074:	mov	w6, w20
  421078:	mov	w7, w19
  42107c:	str	x26, [sp, #16]
  421080:	strb	w8, [sp, #8]
  421084:	str	x25, [sp]
  421088:	bl	41e44c <feof@plt+0x1abac>
  42108c:	ldr	w8, [x22, #1056]
  421090:	cbnz	w8, 420748 <feof@plt+0x1cea8>
  421094:	mov	w8, #0x1                   	// #1
  421098:	mov	w2, #0x176                 	// #374
  42109c:	mov	x0, x23
  4210a0:	mov	x1, x22
  4210a4:	mov	x3, xzr
  4210a8:	mov	x4, x24
  4210ac:	mov	w5, w21
  4210b0:	mov	w6, w20
  4210b4:	mov	w7, w19
  4210b8:	str	x26, [sp, #16]
  4210bc:	strb	w8, [sp, #8]
  4210c0:	str	x25, [sp]
  4210c4:	bl	41e44c <feof@plt+0x1abac>
  4210c8:	ldr	w8, [x22, #1064]
  4210cc:	cbnz	w8, 420750 <feof@plt+0x1ceb0>
  4210d0:	mov	w8, #0x1                   	// #1
  4210d4:	mov	w2, #0x178                 	// #376
  4210d8:	mov	x0, x23
  4210dc:	mov	x1, x22
  4210e0:	mov	x3, xzr
  4210e4:	mov	x4, x24
  4210e8:	mov	w5, w21
  4210ec:	mov	w6, w20
  4210f0:	mov	w7, w19
  4210f4:	str	x26, [sp, #16]
  4210f8:	strb	w8, [sp, #8]
  4210fc:	str	x25, [sp]
  421100:	bl	41e44c <feof@plt+0x1abac>
  421104:	ldr	w8, [x22, #1072]
  421108:	cbnz	w8, 420758 <feof@plt+0x1ceb8>
  42110c:	mov	w8, #0x1                   	// #1
  421110:	mov	w2, #0x17b                 	// #379
  421114:	mov	x0, x23
  421118:	mov	x1, x22
  42111c:	mov	x3, xzr
  421120:	mov	x4, x24
  421124:	mov	w5, w21
  421128:	mov	w6, w20
  42112c:	mov	w7, w19
  421130:	str	x26, [sp, #16]
  421134:	strb	w8, [sp, #8]
  421138:	str	x25, [sp]
  42113c:	bl	41e44c <feof@plt+0x1abac>
  421140:	ldr	w8, [x22, #1128]
  421144:	cbnz	w8, 420760 <feof@plt+0x1cec0>
  421148:	mov	w8, #0x1                   	// #1
  42114c:	mov	w2, #0x18d                 	// #397
  421150:	mov	x0, x23
  421154:	mov	x1, x22
  421158:	mov	x3, xzr
  42115c:	mov	x4, x24
  421160:	mov	w5, w21
  421164:	mov	w6, w20
  421168:	mov	w7, w19
  42116c:	str	x26, [sp, #16]
  421170:	strb	w8, [sp, #8]
  421174:	str	x25, [sp]
  421178:	bl	41e44c <feof@plt+0x1abac>
  42117c:	ldr	w8, [x22, #1132]
  421180:	cbnz	w8, 420768 <feof@plt+0x1cec8>
  421184:	mov	w8, #0x1                   	// #1
  421188:	mov	w2, #0x18e                 	// #398
  42118c:	mov	x0, x23
  421190:	mov	x1, x22
  421194:	mov	x3, xzr
  421198:	mov	x4, x24
  42119c:	mov	w5, w21
  4211a0:	mov	w6, w20
  4211a4:	mov	w7, w19
  4211a8:	str	x26, [sp, #16]
  4211ac:	strb	w8, [sp, #8]
  4211b0:	str	x25, [sp]
  4211b4:	bl	41e44c <feof@plt+0x1abac>
  4211b8:	ldr	w8, [x22, #1152]
  4211bc:	cbnz	w8, 420770 <feof@plt+0x1ced0>
  4211c0:	cmp	x24, #0x0
  4211c4:	mov	w8, #0x3                   	// #3
  4211c8:	csel	x4, xzr, x8, eq  // eq = none
  4211cc:	mov	w8, #0x1                   	// #1
  4211d0:	mov	w2, #0x193                 	// #403
  4211d4:	mov	x0, x23
  4211d8:	mov	x1, x22
  4211dc:	mov	x3, xzr
  4211e0:	mov	w5, w21
  4211e4:	mov	w6, w20
  4211e8:	mov	w7, w19
  4211ec:	str	x26, [sp, #16]
  4211f0:	strb	w8, [sp, #8]
  4211f4:	str	x25, [sp]
  4211f8:	bl	41e44c <feof@plt+0x1abac>
  4211fc:	ldr	w8, [x22, #1160]
  421200:	cbnz	w8, 420778 <feof@plt+0x1ced8>
  421204:	cmp	x24, #0x0
  421208:	cset	w4, ne  // ne = any
  42120c:	mov	w8, #0x1                   	// #1
  421210:	mov	w2, #0x196                 	// #406
  421214:	mov	x0, x23
  421218:	mov	x1, x22
  42121c:	mov	x3, xzr
  421220:	mov	w5, w21
  421224:	mov	w6, w20
  421228:	mov	w7, w19
  42122c:	str	x26, [sp, #16]
  421230:	strb	w8, [sp, #8]
  421234:	str	x25, [sp]
  421238:	bl	41e44c <feof@plt+0x1abac>
  42123c:	ldr	w8, [x22, #1172]
  421240:	cbnz	w8, 420780 <feof@plt+0x1cee0>
  421244:	cmp	x24, #0x0
  421248:	cset	w8, ne  // ne = any
  42124c:	lsl	x4, x8, #1
  421250:	mov	w8, #0x1                   	// #1
  421254:	mov	w2, #0x19a                 	// #410
  421258:	mov	x0, x23
  42125c:	mov	x1, x22
  421260:	mov	x3, xzr
  421264:	mov	w5, w21
  421268:	mov	w6, w20
  42126c:	mov	w7, w19
  421270:	str	x26, [sp, #16]
  421274:	strb	w8, [sp, #8]
  421278:	str	x25, [sp]
  42127c:	bl	41e44c <feof@plt+0x1abac>
  421280:	ldr	w8, [x22, #1176]
  421284:	cbnz	w8, 420788 <feof@plt+0x1cee8>
  421288:	mov	w8, #0x1                   	// #1
  42128c:	mov	w2, #0x19b                 	// #411
  421290:	mov	x0, x23
  421294:	mov	x1, x22
  421298:	mov	x3, xzr
  42129c:	mov	x4, x24
  4212a0:	mov	w5, w21
  4212a4:	mov	w6, w20
  4212a8:	mov	w7, w19
  4212ac:	str	x26, [sp, #16]
  4212b0:	strb	w8, [sp, #8]
  4212b4:	str	x25, [sp]
  4212b8:	bl	41e44c <feof@plt+0x1abac>
  4212bc:	ldr	w8, [x22, #1224]
  4212c0:	cbnz	w8, 420790 <feof@plt+0x1cef0>
  4212c4:	mov	w8, #0x1                   	// #1
  4212c8:	mov	w2, #0x1a7                 	// #423
  4212cc:	mov	x0, x23
  4212d0:	mov	x1, x22
  4212d4:	mov	x3, xzr
  4212d8:	mov	x4, x24
  4212dc:	mov	w5, w21
  4212e0:	mov	w6, w20
  4212e4:	mov	w7, w19
  4212e8:	str	x26, [sp, #16]
  4212ec:	strb	w8, [sp, #8]
  4212f0:	str	x25, [sp]
  4212f4:	bl	41e44c <feof@plt+0x1abac>
  4212f8:	ldr	w8, [x22, #1264]
  4212fc:	cbnz	w8, 420798 <feof@plt+0x1cef8>
  421300:	mov	w8, #0x1                   	// #1
  421304:	mov	w2, #0x1b1                 	// #433
  421308:	mov	x0, x23
  42130c:	mov	x1, x22
  421310:	mov	x3, xzr
  421314:	mov	x4, x24
  421318:	mov	w5, w21
  42131c:	mov	w6, w20
  421320:	mov	w7, w19
  421324:	str	x26, [sp, #16]
  421328:	strb	w8, [sp, #8]
  42132c:	str	x25, [sp]
  421330:	bl	41e44c <feof@plt+0x1abac>
  421334:	ldr	w8, [x22, #1288]
  421338:	cbnz	w8, 4207a0 <feof@plt+0x1cf00>
  42133c:	mov	w8, #0x1                   	// #1
  421340:	mov	w2, #0x1b7                 	// #439
  421344:	mov	x0, x23
  421348:	mov	x1, x22
  42134c:	mov	x3, xzr
  421350:	mov	x4, x24
  421354:	mov	w5, w21
  421358:	mov	w6, w20
  42135c:	mov	w7, w19
  421360:	str	x26, [sp, #16]
  421364:	strb	w8, [sp, #8]
  421368:	str	x25, [sp]
  42136c:	bl	41e44c <feof@plt+0x1abac>
  421370:	ldr	w8, [x22, #1312]
  421374:	cbnz	w8, 4207a8 <feof@plt+0x1cf08>
  421378:	mov	w8, #0x1                   	// #1
  42137c:	mov	w2, #0x1bd                 	// #445
  421380:	mov	x0, x23
  421384:	mov	x1, x22
  421388:	mov	x3, xzr
  42138c:	mov	x4, x24
  421390:	mov	w5, w21
  421394:	mov	w6, w20
  421398:	mov	w7, w19
  42139c:	str	x26, [sp, #16]
  4213a0:	strb	w8, [sp, #8]
  4213a4:	str	x25, [sp]
  4213a8:	bl	41e44c <feof@plt+0x1abac>
  4213ac:	ldr	w8, [x22, #1316]
  4213b0:	cbnz	w8, 4207b0 <feof@plt+0x1cf10>
  4213b4:	cmp	x24, #0x0
  4213b8:	cset	w4, ne  // ne = any
  4213bc:	mov	w8, #0x1                   	// #1
  4213c0:	mov	w2, #0x1be                 	// #446
  4213c4:	mov	x0, x23
  4213c8:	mov	x1, x22
  4213cc:	mov	x3, xzr
  4213d0:	mov	w5, w21
  4213d4:	mov	w6, w20
  4213d8:	mov	w7, w19
  4213dc:	str	x26, [sp, #16]
  4213e0:	strb	w8, [sp, #8]
  4213e4:	str	x25, [sp]
  4213e8:	bl	41e44c <feof@plt+0x1abac>
  4213ec:	ldr	w8, [x22, #1324]
  4213f0:	cbnz	w8, 4207b8 <feof@plt+0x1cf18>
  4213f4:	mov	w8, #0x1                   	// #1
  4213f8:	mov	w2, #0x1c2                 	// #450
  4213fc:	mov	x0, x23
  421400:	mov	x1, x22
  421404:	mov	x3, xzr
  421408:	mov	x4, x24
  42140c:	mov	w5, w21
  421410:	mov	w6, w20
  421414:	mov	w7, w19
  421418:	str	x26, [sp, #16]
  42141c:	strb	w8, [sp, #8]
  421420:	str	x25, [sp]
  421424:	bl	41e44c <feof@plt+0x1abac>
  421428:	ldr	w8, [x22, #1416]
  42142c:	cbnz	w8, 421744 <feof@plt+0x1dea4>
  421430:	mov	w8, #0x1                   	// #1
  421434:	str	x26, [sp, #16]
  421438:	strb	w8, [sp, #8]
  42143c:	mov	w2, #0x1d9                 	// #473
  421440:	mov	x0, x23
  421444:	mov	x1, x22
  421448:	mov	x3, xzr
  42144c:	mov	x4, x24
  421450:	str	x25, [sp]
  421454:	b	421734 <feof@plt+0x1de94>
  421458:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  42145c:	ldr	w8, [x8, #1044]
  421460:	cmp	x24, #0x0
  421464:	cset	w9, ne  // ne = any
  421468:	mov	w2, #0xfa                  	// #250
  42146c:	cmp	w8, #0x0
  421470:	cset	w8, gt
  421474:	and	w4, w9, w8
  421478:	mov	w8, #0x1                   	// #1
  42147c:	mov	x0, x23
  421480:	mov	x1, x22
  421484:	mov	x3, xzr
  421488:	mov	w5, w21
  42148c:	mov	w6, w20
  421490:	mov	w7, w19
  421494:	str	x26, [sp, #16]
  421498:	strb	w8, [sp, #8]
  42149c:	str	x25, [sp]
  4214a0:	bl	41e44c <feof@plt+0x1abac>
  4214a4:	ldr	w8, [x22, #612]
  4214a8:	cbnz	w8, 4207d4 <feof@plt+0x1cf34>
  4214ac:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4214b0:	ldr	w8, [x8, #1044]
  4214b4:	cmp	x24, #0x0
  4214b8:	cset	w9, ne  // ne = any
  4214bc:	mov	w2, #0xfb                  	// #251
  4214c0:	cmp	w8, #0x0
  4214c4:	cset	w8, gt
  4214c8:	and	w4, w9, w8
  4214cc:	mov	w8, #0x1                   	// #1
  4214d0:	mov	x0, x23
  4214d4:	mov	x1, x22
  4214d8:	mov	x3, xzr
  4214dc:	mov	w5, w21
  4214e0:	mov	w6, w20
  4214e4:	mov	w7, w19
  4214e8:	str	x26, [sp, #16]
  4214ec:	strb	w8, [sp, #8]
  4214f0:	str	x25, [sp]
  4214f4:	bl	41e44c <feof@plt+0x1abac>
  4214f8:	ldr	w8, [x22, #616]
  4214fc:	cbnz	w8, 4207dc <feof@plt+0x1cf3c>
  421500:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  421504:	ldr	w8, [x8, #1044]
  421508:	cmp	x24, #0x0
  42150c:	cset	w9, ne  // ne = any
  421510:	mov	w2, #0xfc                  	// #252
  421514:	cmp	w8, #0x1
  421518:	cset	w8, gt
  42151c:	and	w4, w9, w8
  421520:	mov	w8, #0x1                   	// #1
  421524:	mov	x0, x23
  421528:	mov	x1, x22
  42152c:	mov	x3, xzr
  421530:	mov	w5, w21
  421534:	mov	w6, w20
  421538:	mov	w7, w19
  42153c:	str	x26, [sp, #16]
  421540:	strb	w8, [sp, #8]
  421544:	str	x25, [sp]
  421548:	bl	41e44c <feof@plt+0x1abac>
  42154c:	ldr	w8, [x22, #620]
  421550:	cbnz	w8, 4207e4 <feof@plt+0x1cf44>
  421554:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  421558:	ldr	w8, [x8, #1044]
  42155c:	cmp	x24, #0x0
  421560:	cset	w9, ne  // ne = any
  421564:	mov	w2, #0xfe                  	// #254
  421568:	cmp	w8, #0x0
  42156c:	cset	w8, gt
  421570:	and	w4, w9, w8
  421574:	mov	w8, #0x1                   	// #1
  421578:	mov	x0, x23
  42157c:	mov	x1, x22
  421580:	mov	x3, xzr
  421584:	mov	w5, w21
  421588:	mov	w6, w20
  42158c:	mov	w7, w19
  421590:	str	x26, [sp, #16]
  421594:	strb	w8, [sp, #8]
  421598:	str	x25, [sp]
  42159c:	bl	41e44c <feof@plt+0x1abac>
  4215a0:	ldr	w8, [x22, #624]
  4215a4:	cbnz	w8, 4207ec <feof@plt+0x1cf4c>
  4215a8:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4215ac:	ldr	w8, [x8, #1044]
  4215b0:	cmp	x24, #0x0
  4215b4:	cset	w9, ne  // ne = any
  4215b8:	mov	w2, #0xff                  	// #255
  4215bc:	cmp	w8, #0x1
  4215c0:	cset	w8, gt
  4215c4:	and	w4, w9, w8
  4215c8:	mov	w8, #0x1                   	// #1
  4215cc:	mov	x0, x23
  4215d0:	mov	x1, x22
  4215d4:	mov	x3, xzr
  4215d8:	mov	w5, w21
  4215dc:	mov	w6, w20
  4215e0:	mov	w7, w19
  4215e4:	str	x26, [sp, #16]
  4215e8:	strb	w8, [sp, #8]
  4215ec:	str	x25, [sp]
  4215f0:	bl	41e44c <feof@plt+0x1abac>
  4215f4:	ldr	w8, [x22, #632]
  4215f8:	cbnz	w8, 4207f4 <feof@plt+0x1cf54>
  4215fc:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  421600:	ldr	w8, [x8, #1044]
  421604:	cmp	x24, #0x0
  421608:	cset	w9, ne  // ne = any
  42160c:	mov	w2, #0x102                 	// #258
  421610:	cmp	w8, #0x0
  421614:	cset	w8, gt
  421618:	and	w4, w9, w8
  42161c:	mov	w8, #0x1                   	// #1
  421620:	mov	x0, x23
  421624:	mov	x1, x22
  421628:	mov	x3, xzr
  42162c:	mov	w5, w21
  421630:	mov	w6, w20
  421634:	mov	w7, w19
  421638:	str	x26, [sp, #16]
  42163c:	strb	w8, [sp, #8]
  421640:	str	x25, [sp]
  421644:	bl	41e44c <feof@plt+0x1abac>
  421648:	ldr	w8, [x22, #636]
  42164c:	cbnz	w8, 4207fc <feof@plt+0x1cf5c>
  421650:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  421654:	ldr	w8, [x8, #1044]
  421658:	cmp	x24, #0x0
  42165c:	cset	w9, ne  // ne = any
  421660:	mov	w2, #0x103                 	// #259
  421664:	cmp	w8, #0x1
  421668:	cset	w8, gt
  42166c:	and	w4, w9, w8
  421670:	mov	w8, #0x1                   	// #1
  421674:	mov	x0, x23
  421678:	mov	x1, x22
  42167c:	mov	x3, xzr
  421680:	mov	w5, w21
  421684:	mov	w6, w20
  421688:	mov	w7, w19
  42168c:	str	x26, [sp, #16]
  421690:	strb	w8, [sp, #8]
  421694:	str	x25, [sp]
  421698:	bl	41e44c <feof@plt+0x1abac>
  42169c:	ldr	w8, [x22, #640]
  4216a0:	cbnz	w8, 420804 <feof@plt+0x1cf64>
  4216a4:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4216a8:	ldr	w8, [x8, #1044]
  4216ac:	cmp	x24, #0x0
  4216b0:	cset	w9, ne  // ne = any
  4216b4:	mov	w2, #0x104                 	// #260
  4216b8:	cmp	w8, #0x0
  4216bc:	cset	w8, gt
  4216c0:	and	w4, w9, w8
  4216c4:	mov	w8, #0x1                   	// #1
  4216c8:	mov	x0, x23
  4216cc:	mov	x1, x22
  4216d0:	mov	x3, xzr
  4216d4:	mov	w5, w21
  4216d8:	mov	w6, w20
  4216dc:	mov	w7, w19
  4216e0:	str	x26, [sp, #16]
  4216e4:	strb	w8, [sp, #8]
  4216e8:	str	x25, [sp]
  4216ec:	bl	41e44c <feof@plt+0x1abac>
  4216f0:	ldr	w8, [x22, #900]
  4216f4:	cbnz	w8, 421744 <feof@plt+0x1dea4>
  4216f8:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4216fc:	ldr	w8, [x8, #1044]
  421700:	cmp	x24, #0x0
  421704:	cset	w9, ne  // ne = any
  421708:	str	x26, [sp, #16]
  42170c:	cmp	w8, #0x0
  421710:	cset	w8, gt
  421714:	and	w4, w9, w8
  421718:	mov	w8, #0x1                   	// #1
  42171c:	strb	w8, [sp, #8]
  421720:	mov	w2, #0x14c                 	// #332
  421724:	str	x25, [sp]
  421728:	mov	x0, x23
  42172c:	mov	x1, x22
  421730:	mov	x3, xzr
  421734:	mov	w5, w21
  421738:	mov	w6, w20
  42173c:	mov	w7, w19
  421740:	bl	41e44c <feof@plt+0x1abac>
  421744:	ldp	x20, x19, [sp, #96]
  421748:	ldp	x22, x21, [sp, #80]
  42174c:	ldp	x24, x23, [sp, #64]
  421750:	ldp	x26, x25, [sp, #48]
  421754:	ldp	x29, x30, [sp, #32]
  421758:	mov	w0, #0x1                   	// #1
  42175c:	add	sp, sp, #0x70
  421760:	ret
  421764:	sub	sp, sp, #0x70
  421768:	stp	x29, x30, [sp, #32]
  42176c:	stp	x26, x25, [sp, #48]
  421770:	stp	x24, x23, [sp, #64]
  421774:	stp	x22, x21, [sp, #80]
  421778:	stp	x20, x19, [sp, #96]
  42177c:	add	x29, sp, #0x20
  421780:	ldp	x25, x26, [x29, #80]
  421784:	mov	w19, w7
  421788:	mov	w20, w6
  42178c:	mov	w21, w5
  421790:	mov	x23, x4
  421794:	mov	x22, x1
  421798:	cmp	w2, #0xf3
  42179c:	mov	x24, x0
  4217a0:	b.gt	421820 <feof@plt+0x1df80>
  4217a4:	sub	w8, w2, #0x97
  4217a8:	cmp	w8, #0x24
  4217ac:	b.hi	421890 <feof@plt+0x1dff0>  // b.pmore
  4217b0:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4217b4:	add	x9, x9, #0xae8
  4217b8:	adr	x10, 4217c8 <feof@plt+0x1df28>
  4217bc:	ldrh	w11, [x9, x8, lsl #1]
  4217c0:	add	x10, x10, x11, lsl #2
  4217c4:	br	x10
  4217c8:	ldr	w8, [x22, #888]
  4217cc:	cbnz	w8, 421804 <feof@plt+0x1df64>
  4217d0:	mov	w8, #0x1                   	// #1
  4217d4:	mov	w2, #0x149                 	// #329
  4217d8:	mov	x0, x24
  4217dc:	mov	x1, x22
  4217e0:	mov	x3, xzr
  4217e4:	mov	x4, x23
  4217e8:	mov	w5, w21
  4217ec:	mov	w6, w20
  4217f0:	mov	w7, w19
  4217f4:	str	x26, [sp, #16]
  4217f8:	strb	w8, [sp, #8]
  4217fc:	str	x25, [sp]
  421800:	bl	41e44c <feof@plt+0x1abac>
  421804:	ldr	w8, [x22, #1024]
  421808:	cbnz	w8, 4227ac <feof@plt+0x1ef0c>
  42180c:	mov	w8, #0x1                   	// #1
  421810:	str	x26, [sp, #16]
  421814:	strb	w8, [sp, #8]
  421818:	mov	w2, #0x16e                 	// #366
  42181c:	b	422788 <feof@plt+0x1eee8>
  421820:	cmp	w2, #0x160
  421824:	b.gt	42185c <feof@plt+0x1dfbc>
  421828:	cmp	w2, #0xf4
  42182c:	b.eq	421abc <feof@plt+0x1e21c>  // b.none
  421830:	cmp	w2, #0x105
  421834:	b.eq	421ad8 <feof@plt+0x1e238>  // b.none
  421838:	cmp	w2, #0x160
  42183c:	b.ne	4227ac <feof@plt+0x1ef0c>  // b.any
  421840:	ldr	w8, [x22, #492]
  421844:	cbnz	w8, 4227ac <feof@plt+0x1ef0c>
  421848:	mov	w8, #0x1                   	// #1
  42184c:	str	x26, [sp, #16]
  421850:	strb	w8, [sp, #8]
  421854:	mov	w2, #0xd9                  	// #217
  421858:	b	422788 <feof@plt+0x1eee8>
  42185c:	cmp	w2, #0x161
  421860:	b.eq	421b24 <feof@plt+0x1e284>  // b.none
  421864:	cmp	w2, #0x1b4
  421868:	b.eq	421b44 <feof@plt+0x1e2a4>  // b.none
  42186c:	cmp	w2, #0x1c2
  421870:	b.ne	4227ac <feof@plt+0x1ef0c>  // b.any
  421874:	ldr	w8, [x22, #1372]
  421878:	cbnz	w8, 4227ac <feof@plt+0x1ef0c>
  42187c:	mov	w8, #0x1                   	// #1
  421880:	str	x26, [sp, #16]
  421884:	strb	w8, [sp, #8]
  421888:	mov	w2, #0x1cf                 	// #463
  42188c:	b	422788 <feof@plt+0x1eee8>
  421890:	cmp	w2, #0xd3
  421894:	b.eq	421b60 <feof@plt+0x1e2c0>  // b.none
  421898:	cmp	w2, #0xec
  42189c:	b.ne	4227ac <feof@plt+0x1ef0c>  // b.any
  4218a0:	ldr	w8, [x22, #508]
  4218a4:	cbnz	w8, 4218dc <feof@plt+0x1e03c>
  4218a8:	mov	w8, #0x1                   	// #1
  4218ac:	mov	w2, #0xdd                  	// #221
  4218b0:	mov	x0, x24
  4218b4:	mov	x1, x22
  4218b8:	mov	x3, xzr
  4218bc:	mov	x4, x23
  4218c0:	mov	w5, w21
  4218c4:	mov	w6, w20
  4218c8:	mov	w7, w19
  4218cc:	str	x26, [sp, #16]
  4218d0:	strb	w8, [sp, #8]
  4218d4:	str	x25, [sp]
  4218d8:	bl	41e44c <feof@plt+0x1abac>
  4218dc:	ldr	w8, [x22, #896]
  4218e0:	cbnz	w8, 4227ac <feof@plt+0x1ef0c>
  4218e4:	mov	w8, #0x1                   	// #1
  4218e8:	str	x26, [sp, #16]
  4218ec:	strb	w8, [sp, #8]
  4218f0:	mov	w2, #0x14b                 	// #331
  4218f4:	b	422788 <feof@plt+0x1eee8>
  4218f8:	ldr	w8, [x22, #272]
  4218fc:	cbz	w8, 421b7c <feof@plt+0x1e2dc>
  421900:	ldr	w8, [x22, #296]
  421904:	cbz	w8, 421bb8 <feof@plt+0x1e318>
  421908:	ldr	w8, [x22, #336]
  42190c:	cbz	w8, 421bf8 <feof@plt+0x1e358>
  421910:	ldr	w8, [x22, #364]
  421914:	cbz	w8, 421c38 <feof@plt+0x1e398>
  421918:	ldr	w8, [x22, #368]
  42191c:	cbz	w8, 421c74 <feof@plt+0x1e3d4>
  421920:	ldr	w8, [x22, #384]
  421924:	cbz	w8, 421cb0 <feof@plt+0x1e410>
  421928:	ldr	w8, [x22, #388]
  42192c:	cbz	w8, 421cec <feof@plt+0x1e44c>
  421930:	ldr	w8, [x22, #392]
  421934:	cbz	w8, 421d28 <feof@plt+0x1e488>
  421938:	ldr	w8, [x22, #432]
  42193c:	cbz	w8, 421d64 <feof@plt+0x1e4c4>
  421940:	ldr	w8, [x22, #436]
  421944:	cbz	w8, 421da4 <feof@plt+0x1e504>
  421948:	ldr	w8, [x22, #448]
  42194c:	cbz	w8, 421de0 <feof@plt+0x1e540>
  421950:	ldr	w8, [x22, #456]
  421954:	cbz	w8, 421e1c <feof@plt+0x1e57c>
  421958:	ldr	w8, [x22, #508]
  42195c:	cbz	w8, 421e58 <feof@plt+0x1e5b8>
  421960:	ldr	w8, [x22, #644]
  421964:	cbz	w8, 421e94 <feof@plt+0x1e5f4>
  421968:	ldr	w8, [x22, #648]
  42196c:	cbz	w8, 421ed4 <feof@plt+0x1e634>
  421970:	ldr	w8, [x22, #728]
  421974:	cbz	w8, 421f10 <feof@plt+0x1e670>
  421978:	ldr	w8, [x22, #740]
  42197c:	cbz	w8, 421f4c <feof@plt+0x1e6ac>
  421980:	ldr	w8, [x22, #792]
  421984:	cbz	w8, 421f88 <feof@plt+0x1e6e8>
  421988:	ldr	w8, [x22, #812]
  42198c:	cbz	w8, 421fc4 <feof@plt+0x1e724>
  421990:	ldr	w8, [x22, #816]
  421994:	cbz	w8, 422000 <feof@plt+0x1e760>
  421998:	ldr	w8, [x22, #820]
  42199c:	cbz	w8, 42203c <feof@plt+0x1e79c>
  4219a0:	ldr	w8, [x22, #824]
  4219a4:	cbz	w8, 422078 <feof@plt+0x1e7d8>
  4219a8:	ldr	w8, [x22, #828]
  4219ac:	cbz	w8, 4220b4 <feof@plt+0x1e814>
  4219b0:	ldr	w8, [x22, #868]
  4219b4:	cbz	w8, 4220f0 <feof@plt+0x1e850>
  4219b8:	ldr	w8, [x22, #876]
  4219bc:	cbz	w8, 42212c <feof@plt+0x1e88c>
  4219c0:	ldr	w8, [x22, #900]
  4219c4:	cbz	w8, 422168 <feof@plt+0x1e8c8>
  4219c8:	ldr	w8, [x22, #904]
  4219cc:	cbz	w8, 4221a4 <feof@plt+0x1e904>
  4219d0:	ldr	w8, [x22, #932]
  4219d4:	cbz	w8, 4221e0 <feof@plt+0x1e940>
  4219d8:	ldr	w8, [x22, #964]
  4219dc:	cbz	w8, 42221c <feof@plt+0x1e97c>
  4219e0:	ldr	w8, [x22, #972]
  4219e4:	cbz	w8, 422258 <feof@plt+0x1e9b8>
  4219e8:	ldr	w8, [x22, #980]
  4219ec:	cbz	w8, 422294 <feof@plt+0x1e9f4>
  4219f0:	ldr	w8, [x22, #1052]
  4219f4:	cbz	w8, 4222d0 <feof@plt+0x1ea30>
  4219f8:	ldr	w8, [x22, #1056]
  4219fc:	cbz	w8, 42230c <feof@plt+0x1ea6c>
  421a00:	ldr	w8, [x22, #1064]
  421a04:	cbz	w8, 422348 <feof@plt+0x1eaa8>
  421a08:	ldr	w8, [x22, #1072]
  421a0c:	cbz	w8, 422384 <feof@plt+0x1eae4>
  421a10:	ldr	w8, [x22, #1108]
  421a14:	cbz	w8, 4223c0 <feof@plt+0x1eb20>
  421a18:	ldr	w8, [x22, #1128]
  421a1c:	cbz	w8, 4223fc <feof@plt+0x1eb5c>
  421a20:	ldr	w8, [x22, #1132]
  421a24:	cbz	w8, 422438 <feof@plt+0x1eb98>
  421a28:	ldr	w8, [x22, #1152]
  421a2c:	cbz	w8, 422474 <feof@plt+0x1ebd4>
  421a30:	ldr	w8, [x22, #1160]
  421a34:	cbz	w8, 4224b8 <feof@plt+0x1ec18>
  421a38:	ldr	w8, [x22, #1172]
  421a3c:	cbz	w8, 4224f8 <feof@plt+0x1ec58>
  421a40:	ldr	w8, [x22, #1176]
  421a44:	cbz	w8, 42253c <feof@plt+0x1ec9c>
  421a48:	ldr	w8, [x22, #1224]
  421a4c:	cbz	w8, 422578 <feof@plt+0x1ecd8>
  421a50:	ldr	w8, [x22, #1264]
  421a54:	cbz	w8, 4225b4 <feof@plt+0x1ed14>
  421a58:	ldr	w8, [x22, #1288]
  421a5c:	cbz	w8, 4225f0 <feof@plt+0x1ed50>
  421a60:	ldr	w8, [x22, #1312]
  421a64:	cbz	w8, 42262c <feof@plt+0x1ed8c>
  421a68:	ldr	w8, [x22, #1316]
  421a6c:	cbz	w8, 422668 <feof@plt+0x1edc8>
  421a70:	ldr	w8, [x22, #1324]
  421a74:	cbz	w8, 4226a8 <feof@plt+0x1ee08>
  421a78:	ldr	w8, [x22, #1416]
  421a7c:	cbnz	w8, 4227ac <feof@plt+0x1ef0c>
  421a80:	b	4226e4 <feof@plt+0x1ee44>
  421a84:	ldr	w8, [x22, #876]
  421a88:	cbnz	w8, 4227ac <feof@plt+0x1ef0c>
  421a8c:	mov	w8, #0x1                   	// #1
  421a90:	str	x26, [sp, #16]
  421a94:	strb	w8, [sp, #8]
  421a98:	mov	w2, #0x143                 	// #323
  421a9c:	b	422788 <feof@plt+0x1eee8>
  421aa0:	ldr	w8, [x22, #888]
  421aa4:	cbnz	w8, 4227ac <feof@plt+0x1ef0c>
  421aa8:	mov	w8, #0x1                   	// #1
  421aac:	mov	w2, #0x149                 	// #329
  421ab0:	str	x26, [sp, #16]
  421ab4:	strb	w8, [sp, #8]
  421ab8:	b	422788 <feof@plt+0x1eee8>
  421abc:	ldr	w8, [x22, #516]
  421ac0:	cbz	w8, 4226f8 <feof@plt+0x1ee58>
  421ac4:	ldr	w8, [x22, #696]
  421ac8:	cbz	w8, 422734 <feof@plt+0x1ee94>
  421acc:	ldr	w8, [x22, #1044]
  421ad0:	cbnz	w8, 4227ac <feof@plt+0x1ef0c>
  421ad4:	b	422778 <feof@plt+0x1eed8>
  421ad8:	ldr	w8, [x22, #608]
  421adc:	cbz	w8, 4227cc <feof@plt+0x1ef2c>
  421ae0:	ldr	w8, [x22, #612]
  421ae4:	cbz	w8, 422820 <feof@plt+0x1ef80>
  421ae8:	ldr	w8, [x22, #616]
  421aec:	cbz	w8, 422874 <feof@plt+0x1efd4>
  421af0:	ldr	w8, [x22, #620]
  421af4:	cbz	w8, 4228c8 <feof@plt+0x1f028>
  421af8:	ldr	w8, [x22, #624]
  421afc:	cbz	w8, 42291c <feof@plt+0x1f07c>
  421b00:	ldr	w8, [x22, #632]
  421b04:	cbz	w8, 422970 <feof@plt+0x1f0d0>
  421b08:	ldr	w8, [x22, #636]
  421b0c:	cbz	w8, 4229c4 <feof@plt+0x1f124>
  421b10:	ldr	w8, [x22, #640]
  421b14:	cbz	w8, 422a18 <feof@plt+0x1f178>
  421b18:	ldr	w8, [x22, #900]
  421b1c:	cbnz	w8, 4227ac <feof@plt+0x1ef0c>
  421b20:	b	422a6c <feof@plt+0x1f1cc>
  421b24:	ldr	w8, [x22, #572]
  421b28:	cbz	w8, 422aac <feof@plt+0x1f20c>
  421b2c:	ldr	w8, [x22, #808]
  421b30:	cbz	w8, 422ae8 <feof@plt+0x1f248>
  421b34:	ldr	w8, [x22, #940]
  421b38:	cbz	w8, 422b2c <feof@plt+0x1f28c>
  421b3c:	ldr	w8, [x22, #992]
  421b40:	cbz	w8, 422b68 <feof@plt+0x1f2c8>
  421b44:	ldr	w8, [x22, #1388]
  421b48:	cbnz	w8, 4227ac <feof@plt+0x1ef0c>
  421b4c:	mov	w8, #0x1                   	// #1
  421b50:	str	x26, [sp, #16]
  421b54:	strb	w8, [sp, #8]
  421b58:	mov	w2, #0x1d3                 	// #467
  421b5c:	b	422788 <feof@plt+0x1eee8>
  421b60:	ldr	w8, [x22, #600]
  421b64:	cbnz	w8, 4227ac <feof@plt+0x1ef0c>
  421b68:	mov	w8, #0x1                   	// #1
  421b6c:	str	x26, [sp, #16]
  421b70:	strb	w8, [sp, #8]
  421b74:	mov	w2, #0xf7                  	// #247
  421b78:	b	422788 <feof@plt+0x1eee8>
  421b7c:	mov	w8, #0x1                   	// #1
  421b80:	mov	w2, #0x9b                  	// #155
  421b84:	mov	x0, x24
  421b88:	mov	x1, x22
  421b8c:	mov	x3, xzr
  421b90:	mov	x4, x23
  421b94:	mov	w5, w21
  421b98:	mov	w6, w20
  421b9c:	mov	w7, w19
  421ba0:	str	x26, [sp, #16]
  421ba4:	strb	w8, [sp, #8]
  421ba8:	str	x25, [sp]
  421bac:	bl	41e44c <feof@plt+0x1abac>
  421bb0:	ldr	w8, [x22, #296]
  421bb4:	cbnz	w8, 421908 <feof@plt+0x1e068>
  421bb8:	cmp	x23, #0x0
  421bbc:	cset	w4, ne  // ne = any
  421bc0:	mov	w8, #0x1                   	// #1
  421bc4:	mov	w2, #0xa2                  	// #162
  421bc8:	mov	x0, x24
  421bcc:	mov	x1, x22
  421bd0:	mov	x3, xzr
  421bd4:	mov	w5, w21
  421bd8:	mov	w6, w20
  421bdc:	mov	w7, w19
  421be0:	str	x26, [sp, #16]
  421be4:	strb	w8, [sp, #8]
  421be8:	str	x25, [sp]
  421bec:	bl	41e44c <feof@plt+0x1abac>
  421bf0:	ldr	w8, [x22, #336]
  421bf4:	cbnz	w8, 421910 <feof@plt+0x1e070>
  421bf8:	cmp	x23, #0x0
  421bfc:	cset	w4, ne  // ne = any
  421c00:	mov	w8, #0x1                   	// #1
  421c04:	mov	w2, #0xab                  	// #171
  421c08:	mov	x0, x24
  421c0c:	mov	x1, x22
  421c10:	mov	x3, xzr
  421c14:	mov	w5, w21
  421c18:	mov	w6, w20
  421c1c:	mov	w7, w19
  421c20:	str	x26, [sp, #16]
  421c24:	strb	w8, [sp, #8]
  421c28:	str	x25, [sp]
  421c2c:	bl	41e44c <feof@plt+0x1abac>
  421c30:	ldr	w8, [x22, #364]
  421c34:	cbnz	w8, 421918 <feof@plt+0x1e078>
  421c38:	mov	w8, #0x1                   	// #1
  421c3c:	mov	w2, #0xb3                  	// #179
  421c40:	mov	x0, x24
  421c44:	mov	x1, x22
  421c48:	mov	x3, xzr
  421c4c:	mov	x4, x23
  421c50:	mov	w5, w21
  421c54:	mov	w6, w20
  421c58:	mov	w7, w19
  421c5c:	str	x26, [sp, #16]
  421c60:	strb	w8, [sp, #8]
  421c64:	str	x25, [sp]
  421c68:	bl	41e44c <feof@plt+0x1abac>
  421c6c:	ldr	w8, [x22, #368]
  421c70:	cbnz	w8, 421920 <feof@plt+0x1e080>
  421c74:	mov	w8, #0x1                   	// #1
  421c78:	mov	w2, #0xb4                  	// #180
  421c7c:	mov	x0, x24
  421c80:	mov	x1, x22
  421c84:	mov	x3, xzr
  421c88:	mov	x4, x23
  421c8c:	mov	w5, w21
  421c90:	mov	w6, w20
  421c94:	mov	w7, w19
  421c98:	str	x26, [sp, #16]
  421c9c:	strb	w8, [sp, #8]
  421ca0:	str	x25, [sp]
  421ca4:	bl	41e44c <feof@plt+0x1abac>
  421ca8:	ldr	w8, [x22, #384]
  421cac:	cbnz	w8, 421928 <feof@plt+0x1e088>
  421cb0:	mov	w8, #0x1                   	// #1
  421cb4:	mov	w2, #0xb9                  	// #185
  421cb8:	mov	x0, x24
  421cbc:	mov	x1, x22
  421cc0:	mov	x3, xzr
  421cc4:	mov	x4, x23
  421cc8:	mov	w5, w21
  421ccc:	mov	w6, w20
  421cd0:	mov	w7, w19
  421cd4:	str	x26, [sp, #16]
  421cd8:	strb	w8, [sp, #8]
  421cdc:	str	x25, [sp]
  421ce0:	bl	41e44c <feof@plt+0x1abac>
  421ce4:	ldr	w8, [x22, #388]
  421ce8:	cbnz	w8, 421930 <feof@plt+0x1e090>
  421cec:	mov	w8, #0x1                   	// #1
  421cf0:	mov	w2, #0xba                  	// #186
  421cf4:	mov	x0, x24
  421cf8:	mov	x1, x22
  421cfc:	mov	x3, xzr
  421d00:	mov	x4, x23
  421d04:	mov	w5, w21
  421d08:	mov	w6, w20
  421d0c:	mov	w7, w19
  421d10:	str	x26, [sp, #16]
  421d14:	strb	w8, [sp, #8]
  421d18:	str	x25, [sp]
  421d1c:	bl	41e44c <feof@plt+0x1abac>
  421d20:	ldr	w8, [x22, #392]
  421d24:	cbnz	w8, 421938 <feof@plt+0x1e098>
  421d28:	mov	w8, #0x1                   	// #1
  421d2c:	mov	w2, #0xbb                  	// #187
  421d30:	mov	x0, x24
  421d34:	mov	x1, x22
  421d38:	mov	x3, xzr
  421d3c:	mov	x4, x23
  421d40:	mov	w5, w21
  421d44:	mov	w6, w20
  421d48:	mov	w7, w19
  421d4c:	str	x26, [sp, #16]
  421d50:	strb	w8, [sp, #8]
  421d54:	str	x25, [sp]
  421d58:	bl	41e44c <feof@plt+0x1abac>
  421d5c:	ldr	w8, [x22, #432]
  421d60:	cbnz	w8, 421940 <feof@plt+0x1e0a0>
  421d64:	cmp	x23, #0x0
  421d68:	cset	w4, ne  // ne = any
  421d6c:	mov	w8, #0x1                   	// #1
  421d70:	mov	w2, #0xc8                  	// #200
  421d74:	mov	x0, x24
  421d78:	mov	x1, x22
  421d7c:	mov	x3, xzr
  421d80:	mov	w5, w21
  421d84:	mov	w6, w20
  421d88:	mov	w7, w19
  421d8c:	str	x26, [sp, #16]
  421d90:	strb	w8, [sp, #8]
  421d94:	str	x25, [sp]
  421d98:	bl	41e44c <feof@plt+0x1abac>
  421d9c:	ldr	w8, [x22, #436]
  421da0:	cbnz	w8, 421948 <feof@plt+0x1e0a8>
  421da4:	mov	w8, #0x1                   	// #1
  421da8:	mov	w2, #0xc9                  	// #201
  421dac:	mov	x0, x24
  421db0:	mov	x1, x22
  421db4:	mov	x3, xzr
  421db8:	mov	x4, x23
  421dbc:	mov	w5, w21
  421dc0:	mov	w6, w20
  421dc4:	mov	w7, w19
  421dc8:	str	x26, [sp, #16]
  421dcc:	strb	w8, [sp, #8]
  421dd0:	str	x25, [sp]
  421dd4:	bl	41e44c <feof@plt+0x1abac>
  421dd8:	ldr	w8, [x22, #448]
  421ddc:	cbnz	w8, 421950 <feof@plt+0x1e0b0>
  421de0:	mov	w8, #0x1                   	// #1
  421de4:	mov	w2, #0xcd                  	// #205
  421de8:	mov	x0, x24
  421dec:	mov	x1, x22
  421df0:	mov	x3, xzr
  421df4:	mov	x4, x23
  421df8:	mov	w5, w21
  421dfc:	mov	w6, w20
  421e00:	mov	w7, w19
  421e04:	str	x26, [sp, #16]
  421e08:	strb	w8, [sp, #8]
  421e0c:	str	x25, [sp]
  421e10:	bl	41e44c <feof@plt+0x1abac>
  421e14:	ldr	w8, [x22, #456]
  421e18:	cbnz	w8, 421958 <feof@plt+0x1e0b8>
  421e1c:	mov	w8, #0x1                   	// #1
  421e20:	mov	w2, #0xcf                  	// #207
  421e24:	mov	x0, x24
  421e28:	mov	x1, x22
  421e2c:	mov	x3, xzr
  421e30:	mov	x4, x23
  421e34:	mov	w5, w21
  421e38:	mov	w6, w20
  421e3c:	mov	w7, w19
  421e40:	str	x26, [sp, #16]
  421e44:	strb	w8, [sp, #8]
  421e48:	str	x25, [sp]
  421e4c:	bl	41e44c <feof@plt+0x1abac>
  421e50:	ldr	w8, [x22, #508]
  421e54:	cbnz	w8, 421960 <feof@plt+0x1e0c0>
  421e58:	mov	w8, #0x1                   	// #1
  421e5c:	mov	w2, #0xdd                  	// #221
  421e60:	mov	x0, x24
  421e64:	mov	x1, x22
  421e68:	mov	x3, xzr
  421e6c:	mov	x4, x23
  421e70:	mov	w5, w21
  421e74:	mov	w6, w20
  421e78:	mov	w7, w19
  421e7c:	str	x26, [sp, #16]
  421e80:	strb	w8, [sp, #8]
  421e84:	str	x25, [sp]
  421e88:	bl	41e44c <feof@plt+0x1abac>
  421e8c:	ldr	w8, [x22, #644]
  421e90:	cbnz	w8, 421968 <feof@plt+0x1e0c8>
  421e94:	cmp	x23, #0x0
  421e98:	cset	w4, ne  // ne = any
  421e9c:	mov	w8, #0x1                   	// #1
  421ea0:	mov	w2, #0x105                 	// #261
  421ea4:	mov	x0, x24
  421ea8:	mov	x1, x22
  421eac:	mov	x3, xzr
  421eb0:	mov	w5, w21
  421eb4:	mov	w6, w20
  421eb8:	mov	w7, w19
  421ebc:	str	x26, [sp, #16]
  421ec0:	strb	w8, [sp, #8]
  421ec4:	str	x25, [sp]
  421ec8:	bl	41e44c <feof@plt+0x1abac>
  421ecc:	ldr	w8, [x22, #648]
  421ed0:	cbnz	w8, 421970 <feof@plt+0x1e0d0>
  421ed4:	mov	w8, #0x1                   	// #1
  421ed8:	mov	w2, #0x106                 	// #262
  421edc:	mov	x0, x24
  421ee0:	mov	x1, x22
  421ee4:	mov	x3, xzr
  421ee8:	mov	x4, x23
  421eec:	mov	w5, w21
  421ef0:	mov	w6, w20
  421ef4:	mov	w7, w19
  421ef8:	str	x26, [sp, #16]
  421efc:	strb	w8, [sp, #8]
  421f00:	str	x25, [sp]
  421f04:	bl	41e44c <feof@plt+0x1abac>
  421f08:	ldr	w8, [x22, #728]
  421f0c:	cbnz	w8, 421978 <feof@plt+0x1e0d8>
  421f10:	mov	w8, #0x1                   	// #1
  421f14:	mov	w2, #0x11a                 	// #282
  421f18:	mov	x0, x24
  421f1c:	mov	x1, x22
  421f20:	mov	x3, xzr
  421f24:	mov	x4, x23
  421f28:	mov	w5, w21
  421f2c:	mov	w6, w20
  421f30:	mov	w7, w19
  421f34:	str	x26, [sp, #16]
  421f38:	strb	w8, [sp, #8]
  421f3c:	str	x25, [sp]
  421f40:	bl	41e44c <feof@plt+0x1abac>
  421f44:	ldr	w8, [x22, #740]
  421f48:	cbnz	w8, 421980 <feof@plt+0x1e0e0>
  421f4c:	mov	w8, #0x1                   	// #1
  421f50:	mov	w2, #0x11d                 	// #285
  421f54:	mov	x0, x24
  421f58:	mov	x1, x22
  421f5c:	mov	x3, xzr
  421f60:	mov	x4, x23
  421f64:	mov	w5, w21
  421f68:	mov	w6, w20
  421f6c:	mov	w7, w19
  421f70:	str	x26, [sp, #16]
  421f74:	strb	w8, [sp, #8]
  421f78:	str	x25, [sp]
  421f7c:	bl	41e44c <feof@plt+0x1abac>
  421f80:	ldr	w8, [x22, #792]
  421f84:	cbnz	w8, 421988 <feof@plt+0x1e0e8>
  421f88:	mov	w8, #0x1                   	// #1
  421f8c:	mov	w2, #0x12b                 	// #299
  421f90:	mov	x0, x24
  421f94:	mov	x1, x22
  421f98:	mov	x3, xzr
  421f9c:	mov	x4, x23
  421fa0:	mov	w5, w21
  421fa4:	mov	w6, w20
  421fa8:	mov	w7, w19
  421fac:	str	x26, [sp, #16]
  421fb0:	strb	w8, [sp, #8]
  421fb4:	str	x25, [sp]
  421fb8:	bl	41e44c <feof@plt+0x1abac>
  421fbc:	ldr	w8, [x22, #812]
  421fc0:	cbnz	w8, 421990 <feof@plt+0x1e0f0>
  421fc4:	mov	w8, #0x1                   	// #1
  421fc8:	mov	w2, #0x130                 	// #304
  421fcc:	mov	x0, x24
  421fd0:	mov	x1, x22
  421fd4:	mov	x3, xzr
  421fd8:	mov	x4, x23
  421fdc:	mov	w5, w21
  421fe0:	mov	w6, w20
  421fe4:	mov	w7, w19
  421fe8:	str	x26, [sp, #16]
  421fec:	strb	w8, [sp, #8]
  421ff0:	str	x25, [sp]
  421ff4:	bl	41e44c <feof@plt+0x1abac>
  421ff8:	ldr	w8, [x22, #816]
  421ffc:	cbnz	w8, 421998 <feof@plt+0x1e0f8>
  422000:	mov	w8, #0x1                   	// #1
  422004:	mov	w2, #0x131                 	// #305
  422008:	mov	x0, x24
  42200c:	mov	x1, x22
  422010:	mov	x3, xzr
  422014:	mov	x4, x23
  422018:	mov	w5, w21
  42201c:	mov	w6, w20
  422020:	mov	w7, w19
  422024:	str	x26, [sp, #16]
  422028:	strb	w8, [sp, #8]
  42202c:	str	x25, [sp]
  422030:	bl	41e44c <feof@plt+0x1abac>
  422034:	ldr	w8, [x22, #820]
  422038:	cbnz	w8, 4219a0 <feof@plt+0x1e100>
  42203c:	mov	w8, #0x1                   	// #1
  422040:	mov	w2, #0x132                 	// #306
  422044:	mov	x0, x24
  422048:	mov	x1, x22
  42204c:	mov	x3, xzr
  422050:	mov	x4, x23
  422054:	mov	w5, w21
  422058:	mov	w6, w20
  42205c:	mov	w7, w19
  422060:	str	x26, [sp, #16]
  422064:	strb	w8, [sp, #8]
  422068:	str	x25, [sp]
  42206c:	bl	41e44c <feof@plt+0x1abac>
  422070:	ldr	w8, [x22, #824]
  422074:	cbnz	w8, 4219a8 <feof@plt+0x1e108>
  422078:	mov	w8, #0x1                   	// #1
  42207c:	mov	w2, #0x133                 	// #307
  422080:	mov	x0, x24
  422084:	mov	x1, x22
  422088:	mov	x3, xzr
  42208c:	mov	x4, x23
  422090:	mov	w5, w21
  422094:	mov	w6, w20
  422098:	mov	w7, w19
  42209c:	str	x26, [sp, #16]
  4220a0:	strb	w8, [sp, #8]
  4220a4:	str	x25, [sp]
  4220a8:	bl	41e44c <feof@plt+0x1abac>
  4220ac:	ldr	w8, [x22, #828]
  4220b0:	cbnz	w8, 4219b0 <feof@plt+0x1e110>
  4220b4:	mov	w8, #0x1                   	// #1
  4220b8:	mov	w2, #0x134                 	// #308
  4220bc:	mov	x0, x24
  4220c0:	mov	x1, x22
  4220c4:	mov	x3, xzr
  4220c8:	mov	x4, x23
  4220cc:	mov	w5, w21
  4220d0:	mov	w6, w20
  4220d4:	mov	w7, w19
  4220d8:	str	x26, [sp, #16]
  4220dc:	strb	w8, [sp, #8]
  4220e0:	str	x25, [sp]
  4220e4:	bl	41e44c <feof@plt+0x1abac>
  4220e8:	ldr	w8, [x22, #868]
  4220ec:	cbnz	w8, 4219b8 <feof@plt+0x1e118>
  4220f0:	mov	w8, #0x1                   	// #1
  4220f4:	mov	w2, #0x141                 	// #321
  4220f8:	mov	x0, x24
  4220fc:	mov	x1, x22
  422100:	mov	x3, xzr
  422104:	mov	x4, x23
  422108:	mov	w5, w21
  42210c:	mov	w6, w20
  422110:	mov	w7, w19
  422114:	str	x26, [sp, #16]
  422118:	strb	w8, [sp, #8]
  42211c:	str	x25, [sp]
  422120:	bl	41e44c <feof@plt+0x1abac>
  422124:	ldr	w8, [x22, #876]
  422128:	cbnz	w8, 4219c0 <feof@plt+0x1e120>
  42212c:	mov	w8, #0x1                   	// #1
  422130:	mov	w2, #0x143                 	// #323
  422134:	mov	x0, x24
  422138:	mov	x1, x22
  42213c:	mov	x3, xzr
  422140:	mov	x4, x23
  422144:	mov	w5, w21
  422148:	mov	w6, w20
  42214c:	mov	w7, w19
  422150:	str	x26, [sp, #16]
  422154:	strb	w8, [sp, #8]
  422158:	str	x25, [sp]
  42215c:	bl	41e44c <feof@plt+0x1abac>
  422160:	ldr	w8, [x22, #900]
  422164:	cbnz	w8, 4219c8 <feof@plt+0x1e128>
  422168:	mov	w8, #0x1                   	// #1
  42216c:	mov	w2, #0x14c                 	// #332
  422170:	mov	x0, x24
  422174:	mov	x1, x22
  422178:	mov	x3, xzr
  42217c:	mov	x4, x23
  422180:	mov	w5, w21
  422184:	mov	w6, w20
  422188:	mov	w7, w19
  42218c:	str	x26, [sp, #16]
  422190:	strb	w8, [sp, #8]
  422194:	str	x25, [sp]
  422198:	bl	41e44c <feof@plt+0x1abac>
  42219c:	ldr	w8, [x22, #904]
  4221a0:	cbnz	w8, 4219d0 <feof@plt+0x1e130>
  4221a4:	mov	w8, #0x1                   	// #1
  4221a8:	mov	w2, #0x14d                 	// #333
  4221ac:	mov	x0, x24
  4221b0:	mov	x1, x22
  4221b4:	mov	x3, xzr
  4221b8:	mov	x4, x23
  4221bc:	mov	w5, w21
  4221c0:	mov	w6, w20
  4221c4:	mov	w7, w19
  4221c8:	str	x26, [sp, #16]
  4221cc:	strb	w8, [sp, #8]
  4221d0:	str	x25, [sp]
  4221d4:	bl	41e44c <feof@plt+0x1abac>
  4221d8:	ldr	w8, [x22, #932]
  4221dc:	cbnz	w8, 4219d8 <feof@plt+0x1e138>
  4221e0:	mov	w8, #0x1                   	// #1
  4221e4:	mov	w2, #0x155                 	// #341
  4221e8:	mov	x0, x24
  4221ec:	mov	x1, x22
  4221f0:	mov	x3, xzr
  4221f4:	mov	x4, x23
  4221f8:	mov	w5, w21
  4221fc:	mov	w6, w20
  422200:	mov	w7, w19
  422204:	str	x26, [sp, #16]
  422208:	strb	w8, [sp, #8]
  42220c:	str	x25, [sp]
  422210:	bl	41e44c <feof@plt+0x1abac>
  422214:	ldr	w8, [x22, #964]
  422218:	cbnz	w8, 4219e0 <feof@plt+0x1e140>
  42221c:	mov	w8, #0x1                   	// #1
  422220:	mov	w2, #0x15e                 	// #350
  422224:	mov	x0, x24
  422228:	mov	x1, x22
  42222c:	mov	x3, xzr
  422230:	mov	x4, x23
  422234:	mov	w5, w21
  422238:	mov	w6, w20
  42223c:	mov	w7, w19
  422240:	str	x26, [sp, #16]
  422244:	strb	w8, [sp, #8]
  422248:	str	x25, [sp]
  42224c:	bl	41e44c <feof@plt+0x1abac>
  422250:	ldr	w8, [x22, #972]
  422254:	cbnz	w8, 4219e8 <feof@plt+0x1e148>
  422258:	mov	w8, #0x1                   	// #1
  42225c:	mov	w2, #0x160                 	// #352
  422260:	mov	x0, x24
  422264:	mov	x1, x22
  422268:	mov	x3, xzr
  42226c:	mov	x4, x23
  422270:	mov	w5, w21
  422274:	mov	w6, w20
  422278:	mov	w7, w19
  42227c:	str	x26, [sp, #16]
  422280:	strb	w8, [sp, #8]
  422284:	str	x25, [sp]
  422288:	bl	41e44c <feof@plt+0x1abac>
  42228c:	ldr	w8, [x22, #980]
  422290:	cbnz	w8, 4219f0 <feof@plt+0x1e150>
  422294:	mov	w8, #0x1                   	// #1
  422298:	mov	w2, #0x162                 	// #354
  42229c:	mov	x0, x24
  4222a0:	mov	x1, x22
  4222a4:	mov	x3, xzr
  4222a8:	mov	x4, x23
  4222ac:	mov	w5, w21
  4222b0:	mov	w6, w20
  4222b4:	mov	w7, w19
  4222b8:	str	x26, [sp, #16]
  4222bc:	strb	w8, [sp, #8]
  4222c0:	str	x25, [sp]
  4222c4:	bl	41e44c <feof@plt+0x1abac>
  4222c8:	ldr	w8, [x22, #1052]
  4222cc:	cbnz	w8, 4219f8 <feof@plt+0x1e158>
  4222d0:	mov	w8, #0x1                   	// #1
  4222d4:	mov	w2, #0x175                 	// #373
  4222d8:	mov	x0, x24
  4222dc:	mov	x1, x22
  4222e0:	mov	x3, xzr
  4222e4:	mov	x4, x23
  4222e8:	mov	w5, w21
  4222ec:	mov	w6, w20
  4222f0:	mov	w7, w19
  4222f4:	str	x26, [sp, #16]
  4222f8:	strb	w8, [sp, #8]
  4222fc:	str	x25, [sp]
  422300:	bl	41e44c <feof@plt+0x1abac>
  422304:	ldr	w8, [x22, #1056]
  422308:	cbnz	w8, 421a00 <feof@plt+0x1e160>
  42230c:	mov	w8, #0x1                   	// #1
  422310:	mov	w2, #0x176                 	// #374
  422314:	mov	x0, x24
  422318:	mov	x1, x22
  42231c:	mov	x3, xzr
  422320:	mov	x4, x23
  422324:	mov	w5, w21
  422328:	mov	w6, w20
  42232c:	mov	w7, w19
  422330:	str	x26, [sp, #16]
  422334:	strb	w8, [sp, #8]
  422338:	str	x25, [sp]
  42233c:	bl	41e44c <feof@plt+0x1abac>
  422340:	ldr	w8, [x22, #1064]
  422344:	cbnz	w8, 421a08 <feof@plt+0x1e168>
  422348:	mov	w8, #0x1                   	// #1
  42234c:	mov	w2, #0x178                 	// #376
  422350:	mov	x0, x24
  422354:	mov	x1, x22
  422358:	mov	x3, xzr
  42235c:	mov	x4, x23
  422360:	mov	w5, w21
  422364:	mov	w6, w20
  422368:	mov	w7, w19
  42236c:	str	x26, [sp, #16]
  422370:	strb	w8, [sp, #8]
  422374:	str	x25, [sp]
  422378:	bl	41e44c <feof@plt+0x1abac>
  42237c:	ldr	w8, [x22, #1072]
  422380:	cbnz	w8, 421a10 <feof@plt+0x1e170>
  422384:	mov	w8, #0x1                   	// #1
  422388:	mov	w2, #0x17b                 	// #379
  42238c:	mov	x0, x24
  422390:	mov	x1, x22
  422394:	mov	x3, xzr
  422398:	mov	x4, x23
  42239c:	mov	w5, w21
  4223a0:	mov	w6, w20
  4223a4:	mov	w7, w19
  4223a8:	str	x26, [sp, #16]
  4223ac:	strb	w8, [sp, #8]
  4223b0:	str	x25, [sp]
  4223b4:	bl	41e44c <feof@plt+0x1abac>
  4223b8:	ldr	w8, [x22, #1108]
  4223bc:	cbnz	w8, 421a18 <feof@plt+0x1e178>
  4223c0:	mov	w8, #0x1                   	// #1
  4223c4:	mov	w2, #0x188                 	// #392
  4223c8:	mov	x0, x24
  4223cc:	mov	x1, x22
  4223d0:	mov	x3, xzr
  4223d4:	mov	x4, x23
  4223d8:	mov	w5, w21
  4223dc:	mov	w6, w20
  4223e0:	mov	w7, w19
  4223e4:	str	x26, [sp, #16]
  4223e8:	strb	w8, [sp, #8]
  4223ec:	str	x25, [sp]
  4223f0:	bl	41e44c <feof@plt+0x1abac>
  4223f4:	ldr	w8, [x22, #1128]
  4223f8:	cbnz	w8, 421a20 <feof@plt+0x1e180>
  4223fc:	mov	w8, #0x1                   	// #1
  422400:	mov	w2, #0x18d                 	// #397
  422404:	mov	x0, x24
  422408:	mov	x1, x22
  42240c:	mov	x3, xzr
  422410:	mov	x4, x23
  422414:	mov	w5, w21
  422418:	mov	w6, w20
  42241c:	mov	w7, w19
  422420:	str	x26, [sp, #16]
  422424:	strb	w8, [sp, #8]
  422428:	str	x25, [sp]
  42242c:	bl	41e44c <feof@plt+0x1abac>
  422430:	ldr	w8, [x22, #1132]
  422434:	cbnz	w8, 421a28 <feof@plt+0x1e188>
  422438:	mov	w8, #0x1                   	// #1
  42243c:	mov	w2, #0x18e                 	// #398
  422440:	mov	x0, x24
  422444:	mov	x1, x22
  422448:	mov	x3, xzr
  42244c:	mov	x4, x23
  422450:	mov	w5, w21
  422454:	mov	w6, w20
  422458:	mov	w7, w19
  42245c:	str	x26, [sp, #16]
  422460:	strb	w8, [sp, #8]
  422464:	str	x25, [sp]
  422468:	bl	41e44c <feof@plt+0x1abac>
  42246c:	ldr	w8, [x22, #1152]
  422470:	cbnz	w8, 421a30 <feof@plt+0x1e190>
  422474:	cmp	x23, #0x0
  422478:	mov	w8, #0x3                   	// #3
  42247c:	csel	x4, xzr, x8, eq  // eq = none
  422480:	mov	w8, #0x1                   	// #1
  422484:	mov	w2, #0x193                 	// #403
  422488:	mov	x0, x24
  42248c:	mov	x1, x22
  422490:	mov	x3, xzr
  422494:	mov	w5, w21
  422498:	mov	w6, w20
  42249c:	mov	w7, w19
  4224a0:	str	x26, [sp, #16]
  4224a4:	strb	w8, [sp, #8]
  4224a8:	str	x25, [sp]
  4224ac:	bl	41e44c <feof@plt+0x1abac>
  4224b0:	ldr	w8, [x22, #1160]
  4224b4:	cbnz	w8, 421a38 <feof@plt+0x1e198>
  4224b8:	cmp	x23, #0x0
  4224bc:	cset	w4, ne  // ne = any
  4224c0:	mov	w8, #0x1                   	// #1
  4224c4:	mov	w2, #0x196                 	// #406
  4224c8:	mov	x0, x24
  4224cc:	mov	x1, x22
  4224d0:	mov	x3, xzr
  4224d4:	mov	w5, w21
  4224d8:	mov	w6, w20
  4224dc:	mov	w7, w19
  4224e0:	str	x26, [sp, #16]
  4224e4:	strb	w8, [sp, #8]
  4224e8:	str	x25, [sp]
  4224ec:	bl	41e44c <feof@plt+0x1abac>
  4224f0:	ldr	w8, [x22, #1172]
  4224f4:	cbnz	w8, 421a40 <feof@plt+0x1e1a0>
  4224f8:	cmp	x23, #0x0
  4224fc:	cset	w8, ne  // ne = any
  422500:	lsl	x4, x8, #1
  422504:	mov	w8, #0x1                   	// #1
  422508:	mov	w2, #0x19a                 	// #410
  42250c:	mov	x0, x24
  422510:	mov	x1, x22
  422514:	mov	x3, xzr
  422518:	mov	w5, w21
  42251c:	mov	w6, w20
  422520:	mov	w7, w19
  422524:	str	x26, [sp, #16]
  422528:	strb	w8, [sp, #8]
  42252c:	str	x25, [sp]
  422530:	bl	41e44c <feof@plt+0x1abac>
  422534:	ldr	w8, [x22, #1176]
  422538:	cbnz	w8, 421a48 <feof@plt+0x1e1a8>
  42253c:	mov	w8, #0x1                   	// #1
  422540:	mov	w2, #0x19b                 	// #411
  422544:	mov	x0, x24
  422548:	mov	x1, x22
  42254c:	mov	x3, xzr
  422550:	mov	x4, x23
  422554:	mov	w5, w21
  422558:	mov	w6, w20
  42255c:	mov	w7, w19
  422560:	str	x26, [sp, #16]
  422564:	strb	w8, [sp, #8]
  422568:	str	x25, [sp]
  42256c:	bl	41e44c <feof@plt+0x1abac>
  422570:	ldr	w8, [x22, #1224]
  422574:	cbnz	w8, 421a50 <feof@plt+0x1e1b0>
  422578:	mov	w8, #0x1                   	// #1
  42257c:	mov	w2, #0x1a7                 	// #423
  422580:	mov	x0, x24
  422584:	mov	x1, x22
  422588:	mov	x3, xzr
  42258c:	mov	x4, x23
  422590:	mov	w5, w21
  422594:	mov	w6, w20
  422598:	mov	w7, w19
  42259c:	str	x26, [sp, #16]
  4225a0:	strb	w8, [sp, #8]
  4225a4:	str	x25, [sp]
  4225a8:	bl	41e44c <feof@plt+0x1abac>
  4225ac:	ldr	w8, [x22, #1264]
  4225b0:	cbnz	w8, 421a58 <feof@plt+0x1e1b8>
  4225b4:	mov	w8, #0x1                   	// #1
  4225b8:	mov	w2, #0x1b1                 	// #433
  4225bc:	mov	x0, x24
  4225c0:	mov	x1, x22
  4225c4:	mov	x3, xzr
  4225c8:	mov	x4, x23
  4225cc:	mov	w5, w21
  4225d0:	mov	w6, w20
  4225d4:	mov	w7, w19
  4225d8:	str	x26, [sp, #16]
  4225dc:	strb	w8, [sp, #8]
  4225e0:	str	x25, [sp]
  4225e4:	bl	41e44c <feof@plt+0x1abac>
  4225e8:	ldr	w8, [x22, #1288]
  4225ec:	cbnz	w8, 421a60 <feof@plt+0x1e1c0>
  4225f0:	mov	w8, #0x1                   	// #1
  4225f4:	mov	w2, #0x1b7                 	// #439
  4225f8:	mov	x0, x24
  4225fc:	mov	x1, x22
  422600:	mov	x3, xzr
  422604:	mov	x4, x23
  422608:	mov	w5, w21
  42260c:	mov	w6, w20
  422610:	mov	w7, w19
  422614:	str	x26, [sp, #16]
  422618:	strb	w8, [sp, #8]
  42261c:	str	x25, [sp]
  422620:	bl	41e44c <feof@plt+0x1abac>
  422624:	ldr	w8, [x22, #1312]
  422628:	cbnz	w8, 421a68 <feof@plt+0x1e1c8>
  42262c:	mov	w8, #0x1                   	// #1
  422630:	mov	w2, #0x1bd                 	// #445
  422634:	mov	x0, x24
  422638:	mov	x1, x22
  42263c:	mov	x3, xzr
  422640:	mov	x4, x23
  422644:	mov	w5, w21
  422648:	mov	w6, w20
  42264c:	mov	w7, w19
  422650:	str	x26, [sp, #16]
  422654:	strb	w8, [sp, #8]
  422658:	str	x25, [sp]
  42265c:	bl	41e44c <feof@plt+0x1abac>
  422660:	ldr	w8, [x22, #1316]
  422664:	cbnz	w8, 421a70 <feof@plt+0x1e1d0>
  422668:	cmp	x23, #0x0
  42266c:	cset	w4, ne  // ne = any
  422670:	mov	w8, #0x1                   	// #1
  422674:	mov	w2, #0x1be                 	// #446
  422678:	mov	x0, x24
  42267c:	mov	x1, x22
  422680:	mov	x3, xzr
  422684:	mov	w5, w21
  422688:	mov	w6, w20
  42268c:	mov	w7, w19
  422690:	str	x26, [sp, #16]
  422694:	strb	w8, [sp, #8]
  422698:	str	x25, [sp]
  42269c:	bl	41e44c <feof@plt+0x1abac>
  4226a0:	ldr	w8, [x22, #1324]
  4226a4:	cbnz	w8, 421a78 <feof@plt+0x1e1d8>
  4226a8:	mov	w8, #0x1                   	// #1
  4226ac:	mov	w2, #0x1c2                 	// #450
  4226b0:	mov	x0, x24
  4226b4:	mov	x1, x22
  4226b8:	mov	x3, xzr
  4226bc:	mov	x4, x23
  4226c0:	mov	w5, w21
  4226c4:	mov	w6, w20
  4226c8:	mov	w7, w19
  4226cc:	str	x26, [sp, #16]
  4226d0:	strb	w8, [sp, #8]
  4226d4:	str	x25, [sp]
  4226d8:	bl	41e44c <feof@plt+0x1abac>
  4226dc:	ldr	w8, [x22, #1416]
  4226e0:	cbnz	w8, 4227ac <feof@plt+0x1ef0c>
  4226e4:	mov	w8, #0x1                   	// #1
  4226e8:	str	x26, [sp, #16]
  4226ec:	strb	w8, [sp, #8]
  4226f0:	mov	w2, #0x1d9                 	// #473
  4226f4:	b	422788 <feof@plt+0x1eee8>
  4226f8:	mov	w8, #0x1                   	// #1
  4226fc:	mov	w2, #0xdf                  	// #223
  422700:	mov	x0, x24
  422704:	mov	x1, x22
  422708:	mov	x3, xzr
  42270c:	mov	x4, x23
  422710:	mov	w5, w21
  422714:	mov	w6, w20
  422718:	mov	w7, w19
  42271c:	str	x26, [sp, #16]
  422720:	strb	w8, [sp, #8]
  422724:	str	x25, [sp]
  422728:	bl	41e44c <feof@plt+0x1abac>
  42272c:	ldr	w8, [x22, #696]
  422730:	cbnz	w8, 421acc <feof@plt+0x1e22c>
  422734:	cmp	x23, #0x0
  422738:	mov	w8, #0x3                   	// #3
  42273c:	csel	x4, xzr, x8, eq  // eq = none
  422740:	mov	w8, #0x1                   	// #1
  422744:	mov	w2, #0x111                 	// #273
  422748:	mov	x0, x24
  42274c:	mov	x1, x22
  422750:	mov	x3, xzr
  422754:	mov	w5, w21
  422758:	mov	w6, w20
  42275c:	mov	w7, w19
  422760:	str	x26, [sp, #16]
  422764:	strb	w8, [sp, #8]
  422768:	str	x25, [sp]
  42276c:	bl	41e44c <feof@plt+0x1abac>
  422770:	ldr	w8, [x22, #1044]
  422774:	cbnz	w8, 4227ac <feof@plt+0x1ef0c>
  422778:	mov	w8, #0x1                   	// #1
  42277c:	str	x26, [sp, #16]
  422780:	strb	w8, [sp, #8]
  422784:	mov	w2, #0x173                 	// #371
  422788:	mov	x0, x24
  42278c:	mov	x1, x22
  422790:	mov	x3, xzr
  422794:	mov	x4, x23
  422798:	str	x25, [sp]
  42279c:	mov	w5, w21
  4227a0:	mov	w6, w20
  4227a4:	mov	w7, w19
  4227a8:	bl	41e44c <feof@plt+0x1abac>
  4227ac:	ldp	x20, x19, [sp, #96]
  4227b0:	ldp	x22, x21, [sp, #80]
  4227b4:	ldp	x24, x23, [sp, #64]
  4227b8:	ldp	x26, x25, [sp, #48]
  4227bc:	ldp	x29, x30, [sp, #32]
  4227c0:	mov	w0, #0x1                   	// #1
  4227c4:	add	sp, sp, #0x70
  4227c8:	ret
  4227cc:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4227d0:	ldr	w8, [x8, #1044]
  4227d4:	cmp	x23, #0x0
  4227d8:	cset	w9, ne  // ne = any
  4227dc:	mov	w2, #0xfa                  	// #250
  4227e0:	cmp	w8, #0x0
  4227e4:	cset	w8, gt
  4227e8:	and	w4, w9, w8
  4227ec:	mov	w8, #0x1                   	// #1
  4227f0:	mov	x0, x24
  4227f4:	mov	x1, x22
  4227f8:	mov	x3, xzr
  4227fc:	mov	w5, w21
  422800:	mov	w6, w20
  422804:	mov	w7, w19
  422808:	str	x26, [sp, #16]
  42280c:	strb	w8, [sp, #8]
  422810:	str	x25, [sp]
  422814:	bl	41e44c <feof@plt+0x1abac>
  422818:	ldr	w8, [x22, #612]
  42281c:	cbnz	w8, 421ae8 <feof@plt+0x1e248>
  422820:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  422824:	ldr	w8, [x8, #1044]
  422828:	cmp	x23, #0x0
  42282c:	cset	w9, ne  // ne = any
  422830:	mov	w2, #0xfb                  	// #251
  422834:	cmp	w8, #0x0
  422838:	cset	w8, gt
  42283c:	and	w4, w9, w8
  422840:	mov	w8, #0x1                   	// #1
  422844:	mov	x0, x24
  422848:	mov	x1, x22
  42284c:	mov	x3, xzr
  422850:	mov	w5, w21
  422854:	mov	w6, w20
  422858:	mov	w7, w19
  42285c:	str	x26, [sp, #16]
  422860:	strb	w8, [sp, #8]
  422864:	str	x25, [sp]
  422868:	bl	41e44c <feof@plt+0x1abac>
  42286c:	ldr	w8, [x22, #616]
  422870:	cbnz	w8, 421af0 <feof@plt+0x1e250>
  422874:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  422878:	ldr	w8, [x8, #1044]
  42287c:	cmp	x23, #0x0
  422880:	cset	w9, ne  // ne = any
  422884:	mov	w2, #0xfc                  	// #252
  422888:	cmp	w8, #0x1
  42288c:	cset	w8, gt
  422890:	and	w4, w9, w8
  422894:	mov	w8, #0x1                   	// #1
  422898:	mov	x0, x24
  42289c:	mov	x1, x22
  4228a0:	mov	x3, xzr
  4228a4:	mov	w5, w21
  4228a8:	mov	w6, w20
  4228ac:	mov	w7, w19
  4228b0:	str	x26, [sp, #16]
  4228b4:	strb	w8, [sp, #8]
  4228b8:	str	x25, [sp]
  4228bc:	bl	41e44c <feof@plt+0x1abac>
  4228c0:	ldr	w8, [x22, #620]
  4228c4:	cbnz	w8, 421af8 <feof@plt+0x1e258>
  4228c8:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4228cc:	ldr	w8, [x8, #1044]
  4228d0:	cmp	x23, #0x0
  4228d4:	cset	w9, ne  // ne = any
  4228d8:	mov	w2, #0xfe                  	// #254
  4228dc:	cmp	w8, #0x0
  4228e0:	cset	w8, gt
  4228e4:	and	w4, w9, w8
  4228e8:	mov	w8, #0x1                   	// #1
  4228ec:	mov	x0, x24
  4228f0:	mov	x1, x22
  4228f4:	mov	x3, xzr
  4228f8:	mov	w5, w21
  4228fc:	mov	w6, w20
  422900:	mov	w7, w19
  422904:	str	x26, [sp, #16]
  422908:	strb	w8, [sp, #8]
  42290c:	str	x25, [sp]
  422910:	bl	41e44c <feof@plt+0x1abac>
  422914:	ldr	w8, [x22, #624]
  422918:	cbnz	w8, 421b00 <feof@plt+0x1e260>
  42291c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  422920:	ldr	w8, [x8, #1044]
  422924:	cmp	x23, #0x0
  422928:	cset	w9, ne  // ne = any
  42292c:	mov	w2, #0xff                  	// #255
  422930:	cmp	w8, #0x1
  422934:	cset	w8, gt
  422938:	and	w4, w9, w8
  42293c:	mov	w8, #0x1                   	// #1
  422940:	mov	x0, x24
  422944:	mov	x1, x22
  422948:	mov	x3, xzr
  42294c:	mov	w5, w21
  422950:	mov	w6, w20
  422954:	mov	w7, w19
  422958:	str	x26, [sp, #16]
  42295c:	strb	w8, [sp, #8]
  422960:	str	x25, [sp]
  422964:	bl	41e44c <feof@plt+0x1abac>
  422968:	ldr	w8, [x22, #632]
  42296c:	cbnz	w8, 421b08 <feof@plt+0x1e268>
  422970:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  422974:	ldr	w8, [x8, #1044]
  422978:	cmp	x23, #0x0
  42297c:	cset	w9, ne  // ne = any
  422980:	mov	w2, #0x102                 	// #258
  422984:	cmp	w8, #0x0
  422988:	cset	w8, gt
  42298c:	and	w4, w9, w8
  422990:	mov	w8, #0x1                   	// #1
  422994:	mov	x0, x24
  422998:	mov	x1, x22
  42299c:	mov	x3, xzr
  4229a0:	mov	w5, w21
  4229a4:	mov	w6, w20
  4229a8:	mov	w7, w19
  4229ac:	str	x26, [sp, #16]
  4229b0:	strb	w8, [sp, #8]
  4229b4:	str	x25, [sp]
  4229b8:	bl	41e44c <feof@plt+0x1abac>
  4229bc:	ldr	w8, [x22, #636]
  4229c0:	cbnz	w8, 421b10 <feof@plt+0x1e270>
  4229c4:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4229c8:	ldr	w8, [x8, #1044]
  4229cc:	cmp	x23, #0x0
  4229d0:	cset	w9, ne  // ne = any
  4229d4:	mov	w2, #0x103                 	// #259
  4229d8:	cmp	w8, #0x1
  4229dc:	cset	w8, gt
  4229e0:	and	w4, w9, w8
  4229e4:	mov	w8, #0x1                   	// #1
  4229e8:	mov	x0, x24
  4229ec:	mov	x1, x22
  4229f0:	mov	x3, xzr
  4229f4:	mov	w5, w21
  4229f8:	mov	w6, w20
  4229fc:	mov	w7, w19
  422a00:	str	x26, [sp, #16]
  422a04:	strb	w8, [sp, #8]
  422a08:	str	x25, [sp]
  422a0c:	bl	41e44c <feof@plt+0x1abac>
  422a10:	ldr	w8, [x22, #640]
  422a14:	cbnz	w8, 421b18 <feof@plt+0x1e278>
  422a18:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  422a1c:	ldr	w8, [x8, #1044]
  422a20:	cmp	x23, #0x0
  422a24:	cset	w9, ne  // ne = any
  422a28:	mov	w2, #0x104                 	// #260
  422a2c:	cmp	w8, #0x0
  422a30:	cset	w8, gt
  422a34:	and	w4, w9, w8
  422a38:	mov	w8, #0x1                   	// #1
  422a3c:	mov	x0, x24
  422a40:	mov	x1, x22
  422a44:	mov	x3, xzr
  422a48:	mov	w5, w21
  422a4c:	mov	w6, w20
  422a50:	mov	w7, w19
  422a54:	str	x26, [sp, #16]
  422a58:	strb	w8, [sp, #8]
  422a5c:	str	x25, [sp]
  422a60:	bl	41e44c <feof@plt+0x1abac>
  422a64:	ldr	w8, [x22, #900]
  422a68:	cbnz	w8, 4227ac <feof@plt+0x1ef0c>
  422a6c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  422a70:	ldr	w8, [x8, #1044]
  422a74:	cmp	x23, #0x0
  422a78:	cset	w9, ne  // ne = any
  422a7c:	str	x26, [sp, #16]
  422a80:	cmp	w8, #0x0
  422a84:	cset	w8, gt
  422a88:	and	w4, w9, w8
  422a8c:	mov	w8, #0x1                   	// #1
  422a90:	strb	w8, [sp, #8]
  422a94:	mov	w2, #0x14c                 	// #332
  422a98:	str	x25, [sp]
  422a9c:	mov	x0, x24
  422aa0:	mov	x1, x22
  422aa4:	mov	x3, xzr
  422aa8:	b	42279c <feof@plt+0x1eefc>
  422aac:	mov	w8, #0x1                   	// #1
  422ab0:	mov	w2, #0xee                  	// #238
  422ab4:	mov	x0, x24
  422ab8:	mov	x1, x22
  422abc:	mov	x3, xzr
  422ac0:	mov	x4, x23
  422ac4:	mov	w5, w21
  422ac8:	mov	w6, w20
  422acc:	mov	w7, w19
  422ad0:	str	x26, [sp, #16]
  422ad4:	strb	w8, [sp, #8]
  422ad8:	str	x25, [sp]
  422adc:	bl	41e44c <feof@plt+0x1abac>
  422ae0:	ldr	w8, [x22, #808]
  422ae4:	cbnz	w8, 421b34 <feof@plt+0x1e294>
  422ae8:	cmp	x23, #0x0
  422aec:	cset	w8, ne  // ne = any
  422af0:	lsl	x4, x8, #1
  422af4:	mov	w8, #0x1                   	// #1
  422af8:	mov	w2, #0x12f                 	// #303
  422afc:	mov	x0, x24
  422b00:	mov	x1, x22
  422b04:	mov	x3, xzr
  422b08:	mov	w5, w21
  422b0c:	mov	w6, w20
  422b10:	mov	w7, w19
  422b14:	str	x26, [sp, #16]
  422b18:	strb	w8, [sp, #8]
  422b1c:	str	x25, [sp]
  422b20:	bl	41e44c <feof@plt+0x1abac>
  422b24:	ldr	w8, [x22, #940]
  422b28:	cbnz	w8, 421b3c <feof@plt+0x1e29c>
  422b2c:	mov	w8, #0x1                   	// #1
  422b30:	mov	w2, #0x157                 	// #343
  422b34:	mov	x0, x24
  422b38:	mov	x1, x22
  422b3c:	mov	x3, xzr
  422b40:	mov	x4, x23
  422b44:	mov	w5, w21
  422b48:	mov	w6, w20
  422b4c:	mov	w7, w19
  422b50:	str	x26, [sp, #16]
  422b54:	strb	w8, [sp, #8]
  422b58:	str	x25, [sp]
  422b5c:	bl	41e44c <feof@plt+0x1abac>
  422b60:	ldr	w8, [x22, #992]
  422b64:	cbnz	w8, 421b44 <feof@plt+0x1e2a4>
  422b68:	mov	w8, #0x1                   	// #1
  422b6c:	mov	w2, #0x166                 	// #358
  422b70:	mov	x0, x24
  422b74:	mov	x1, x22
  422b78:	mov	x3, xzr
  422b7c:	mov	x4, x23
  422b80:	mov	w5, w21
  422b84:	mov	w6, w20
  422b88:	mov	w7, w19
  422b8c:	str	x26, [sp, #16]
  422b90:	strb	w8, [sp, #8]
  422b94:	str	x25, [sp]
  422b98:	bl	41e44c <feof@plt+0x1abac>
  422b9c:	ldr	w8, [x22, #1388]
  422ba0:	cbnz	w8, 4227ac <feof@plt+0x1ef0c>
  422ba4:	b	421b4c <feof@plt+0x1e2ac>
  422ba8:	sub	sp, sp, #0x30
  422bac:	stp	x29, x30, [sp, #32]
  422bb0:	add	x29, sp, #0x20
  422bb4:	cmp	w2, #0xa3
  422bb8:	b.ne	422be4 <feof@plt+0x1f344>  // b.any
  422bbc:	ldr	w8, [x1, #1316]
  422bc0:	cbnz	w8, 422be4 <feof@plt+0x1f344>
  422bc4:	ldp	x9, x8, [x29, #16]
  422bc8:	mov	w2, #0x1be                 	// #446
  422bcc:	mov	x3, xzr
  422bd0:	str	x8, [sp, #16]
  422bd4:	mov	w8, #0x1                   	// #1
  422bd8:	strb	w8, [sp, #8]
  422bdc:	str	x9, [sp]
  422be0:	bl	41e44c <feof@plt+0x1abac>
  422be4:	ldp	x29, x30, [sp, #32]
  422be8:	mov	w0, #0x1                   	// #1
  422bec:	add	sp, sp, #0x30
  422bf0:	ret
  422bf4:	sub	sp, sp, #0x70
  422bf8:	stp	x29, x30, [sp, #32]
  422bfc:	stp	x26, x25, [sp, #48]
  422c00:	stp	x24, x23, [sp, #64]
  422c04:	stp	x22, x21, [sp, #80]
  422c08:	stp	x20, x19, [sp, #96]
  422c0c:	add	x29, sp, #0x20
  422c10:	ldp	x25, x26, [x29, #80]
  422c14:	mov	w19, w7
  422c18:	mov	w20, w6
  422c1c:	mov	w21, w5
  422c20:	mov	x22, x4
  422c24:	mov	x23, x1
  422c28:	cmp	w2, #0x160
  422c2c:	mov	x24, x0
  422c30:	b.gt	422c60 <feof@plt+0x1f3c0>
  422c34:	cmp	w2, #0xa3
  422c38:	b.eq	422c8c <feof@plt+0x1f3ec>  // b.none
  422c3c:	cmp	w2, #0xf4
  422c40:	b.ne	4232c8 <feof@plt+0x1fa28>  // b.any
  422c44:	ldr	w8, [x23, #460]
  422c48:	cbz	w8, 422d44 <feof@plt+0x1f4a4>
  422c4c:	ldr	w8, [x23, #544]
  422c50:	cbz	w8, 422d80 <feof@plt+0x1f4e0>
  422c54:	ldr	w8, [x23, #672]
  422c58:	cbnz	w8, 4232c8 <feof@plt+0x1fa28>
  422c5c:	b	422dbc <feof@plt+0x1f51c>
  422c60:	cmp	w2, #0x161
  422c64:	b.eq	422d30 <feof@plt+0x1f490>  // b.none
  422c68:	cmp	w2, #0x171
  422c6c:	b.ne	4232c8 <feof@plt+0x1fa28>  // b.any
  422c70:	ldr	w8, [x23, #1032]
  422c74:	cbnz	w8, 4232c8 <feof@plt+0x1fa28>
  422c78:	mov	w8, #0x1                   	// #1
  422c7c:	str	x26, [sp, #16]
  422c80:	strb	w8, [sp, #8]
  422c84:	mov	w2, #0x170                 	// #368
  422c88:	b	4232a4 <feof@plt+0x1fa04>
  422c8c:	ldr	w8, [x23, #288]
  422c90:	cbz	w8, 422dd0 <feof@plt+0x1f530>
  422c94:	ldr	w8, [x23, #328]
  422c98:	cbz	w8, 422e0c <feof@plt+0x1f56c>
  422c9c:	ldr	w8, [x23, #396]
  422ca0:	cbz	w8, 422e48 <feof@plt+0x1f5a8>
  422ca4:	ldr	w8, [x23, #440]
  422ca8:	cbz	w8, 422e84 <feof@plt+0x1f5e4>
  422cac:	ldr	w8, [x23, #468]
  422cb0:	cbz	w8, 422ec0 <feof@plt+0x1f620>
  422cb4:	ldr	w8, [x23, #748]
  422cb8:	cbz	w8, 422efc <feof@plt+0x1f65c>
  422cbc:	ldr	w8, [x23, #752]
  422cc0:	cbz	w8, 422f38 <feof@plt+0x1f698>
  422cc4:	ldr	w8, [x23, #756]
  422cc8:	cbz	w8, 422f74 <feof@plt+0x1f6d4>
  422ccc:	ldr	w8, [x23, #784]
  422cd0:	cbz	w8, 422fb0 <feof@plt+0x1f710>
  422cd4:	ldr	w8, [x23, #812]
  422cd8:	cbz	w8, 422fec <feof@plt+0x1f74c>
  422cdc:	ldr	w8, [x23, #1028]
  422ce0:	cbz	w8, 423028 <feof@plt+0x1f788>
  422ce4:	ldr	w8, [x23, #1064]
  422ce8:	cbz	w8, 423064 <feof@plt+0x1f7c4>
  422cec:	ldr	w8, [x23, #1220]
  422cf0:	cbz	w8, 4230a0 <feof@plt+0x1f800>
  422cf4:	ldr	w8, [x23, #1256]
  422cf8:	cbz	w8, 4230dc <feof@plt+0x1f83c>
  422cfc:	ldr	w8, [x23, #1260]
  422d00:	cbz	w8, 423118 <feof@plt+0x1f878>
  422d04:	ldr	w8, [x23, #1304]
  422d08:	cbz	w8, 423154 <feof@plt+0x1f8b4>
  422d0c:	ldr	w8, [x23, #1312]
  422d10:	cbz	w8, 423190 <feof@plt+0x1f8f0>
  422d14:	ldr	w8, [x23, #1324]
  422d18:	cbz	w8, 4231cc <feof@plt+0x1f92c>
  422d1c:	ldr	w8, [x23, #1340]
  422d20:	cbz	w8, 423208 <feof@plt+0x1f968>
  422d24:	ldr	w8, [x23, #1428]
  422d28:	cbnz	w8, 4232c8 <feof@plt+0x1fa28>
  422d2c:	b	423244 <feof@plt+0x1f9a4>
  422d30:	ldr	w8, [x23, #328]
  422d34:	cbz	w8, 423258 <feof@plt+0x1f9b8>
  422d38:	ldr	w8, [x23, #1256]
  422d3c:	cbnz	w8, 4232c8 <feof@plt+0x1fa28>
  422d40:	b	423294 <feof@plt+0x1f9f4>
  422d44:	mov	w8, #0x1                   	// #1
  422d48:	mov	w2, #0xd1                  	// #209
  422d4c:	mov	x0, x24
  422d50:	mov	x1, x23
  422d54:	mov	x3, xzr
  422d58:	mov	x4, x22
  422d5c:	mov	w5, w21
  422d60:	mov	w6, w20
  422d64:	mov	w7, w19
  422d68:	str	x26, [sp, #16]
  422d6c:	strb	w8, [sp, #8]
  422d70:	str	x25, [sp]
  422d74:	bl	41e44c <feof@plt+0x1abac>
  422d78:	ldr	w8, [x23, #544]
  422d7c:	cbnz	w8, 422c54 <feof@plt+0x1f3b4>
  422d80:	mov	w8, #0x1                   	// #1
  422d84:	mov	w2, #0xe7                  	// #231
  422d88:	mov	x0, x24
  422d8c:	mov	x1, x23
  422d90:	mov	x3, xzr
  422d94:	mov	x4, x22
  422d98:	mov	w5, w21
  422d9c:	mov	w6, w20
  422da0:	mov	w7, w19
  422da4:	str	x26, [sp, #16]
  422da8:	strb	w8, [sp, #8]
  422dac:	str	x25, [sp]
  422db0:	bl	41e44c <feof@plt+0x1abac>
  422db4:	ldr	w8, [x23, #672]
  422db8:	cbnz	w8, 4232c8 <feof@plt+0x1fa28>
  422dbc:	mov	w8, #0x1                   	// #1
  422dc0:	str	x26, [sp, #16]
  422dc4:	strb	w8, [sp, #8]
  422dc8:	mov	w2, #0x10a                 	// #266
  422dcc:	b	4232a4 <feof@plt+0x1fa04>
  422dd0:	mov	w8, #0x1                   	// #1
  422dd4:	mov	w2, #0x9f                  	// #159
  422dd8:	mov	x0, x24
  422ddc:	mov	x1, x23
  422de0:	mov	x3, xzr
  422de4:	mov	x4, x22
  422de8:	mov	w5, w21
  422dec:	mov	w6, w20
  422df0:	mov	w7, w19
  422df4:	str	x26, [sp, #16]
  422df8:	strb	w8, [sp, #8]
  422dfc:	str	x25, [sp]
  422e00:	bl	41e44c <feof@plt+0x1abac>
  422e04:	ldr	w8, [x23, #328]
  422e08:	cbnz	w8, 422c9c <feof@plt+0x1f3fc>
  422e0c:	mov	w8, #0x1                   	// #1
  422e10:	mov	w2, #0xa8                  	// #168
  422e14:	mov	x0, x24
  422e18:	mov	x1, x23
  422e1c:	mov	x3, xzr
  422e20:	mov	x4, x22
  422e24:	mov	w5, w21
  422e28:	mov	w6, w20
  422e2c:	mov	w7, w19
  422e30:	str	x26, [sp, #16]
  422e34:	strb	w8, [sp, #8]
  422e38:	str	x25, [sp]
  422e3c:	bl	41e44c <feof@plt+0x1abac>
  422e40:	ldr	w8, [x23, #396]
  422e44:	cbnz	w8, 422ca4 <feof@plt+0x1f404>
  422e48:	mov	w8, #0x1                   	// #1
  422e4c:	mov	w2, #0xbd                  	// #189
  422e50:	mov	x0, x24
  422e54:	mov	x1, x23
  422e58:	mov	x3, xzr
  422e5c:	mov	x4, x22
  422e60:	mov	w5, w21
  422e64:	mov	w6, w20
  422e68:	mov	w7, w19
  422e6c:	str	x26, [sp, #16]
  422e70:	strb	w8, [sp, #8]
  422e74:	str	x25, [sp]
  422e78:	bl	41e44c <feof@plt+0x1abac>
  422e7c:	ldr	w8, [x23, #440]
  422e80:	cbnz	w8, 422cac <feof@plt+0x1f40c>
  422e84:	mov	w8, #0x1                   	// #1
  422e88:	mov	w2, #0xca                  	// #202
  422e8c:	mov	x0, x24
  422e90:	mov	x1, x23
  422e94:	mov	x3, xzr
  422e98:	mov	x4, x22
  422e9c:	mov	w5, w21
  422ea0:	mov	w6, w20
  422ea4:	mov	w7, w19
  422ea8:	str	x26, [sp, #16]
  422eac:	strb	w8, [sp, #8]
  422eb0:	str	x25, [sp]
  422eb4:	bl	41e44c <feof@plt+0x1abac>
  422eb8:	ldr	w8, [x23, #468]
  422ebc:	cbnz	w8, 422cb4 <feof@plt+0x1f414>
  422ec0:	mov	w8, #0x1                   	// #1
  422ec4:	mov	w2, #0xd3                  	// #211
  422ec8:	mov	x0, x24
  422ecc:	mov	x1, x23
  422ed0:	mov	x3, xzr
  422ed4:	mov	x4, x22
  422ed8:	mov	w5, w21
  422edc:	mov	w6, w20
  422ee0:	mov	w7, w19
  422ee4:	str	x26, [sp, #16]
  422ee8:	strb	w8, [sp, #8]
  422eec:	str	x25, [sp]
  422ef0:	bl	41e44c <feof@plt+0x1abac>
  422ef4:	ldr	w8, [x23, #748]
  422ef8:	cbnz	w8, 422cbc <feof@plt+0x1f41c>
  422efc:	mov	w8, #0x1                   	// #1
  422f00:	mov	w2, #0x11f                 	// #287
  422f04:	mov	x0, x24
  422f08:	mov	x1, x23
  422f0c:	mov	x3, xzr
  422f10:	mov	x4, x22
  422f14:	mov	w5, w21
  422f18:	mov	w6, w20
  422f1c:	mov	w7, w19
  422f20:	str	x26, [sp, #16]
  422f24:	strb	w8, [sp, #8]
  422f28:	str	x25, [sp]
  422f2c:	bl	41e44c <feof@plt+0x1abac>
  422f30:	ldr	w8, [x23, #752]
  422f34:	cbnz	w8, 422cc4 <feof@plt+0x1f424>
  422f38:	mov	w8, #0x1                   	// #1
  422f3c:	mov	w2, #0x120                 	// #288
  422f40:	mov	x0, x24
  422f44:	mov	x1, x23
  422f48:	mov	x3, xzr
  422f4c:	mov	x4, x22
  422f50:	mov	w5, w21
  422f54:	mov	w6, w20
  422f58:	mov	w7, w19
  422f5c:	str	x26, [sp, #16]
  422f60:	strb	w8, [sp, #8]
  422f64:	str	x25, [sp]
  422f68:	bl	41e44c <feof@plt+0x1abac>
  422f6c:	ldr	w8, [x23, #756]
  422f70:	cbnz	w8, 422ccc <feof@plt+0x1f42c>
  422f74:	mov	w8, #0x1                   	// #1
  422f78:	mov	w2, #0x121                 	// #289
  422f7c:	mov	x0, x24
  422f80:	mov	x1, x23
  422f84:	mov	x3, xzr
  422f88:	mov	x4, x22
  422f8c:	mov	w5, w21
  422f90:	mov	w6, w20
  422f94:	mov	w7, w19
  422f98:	str	x26, [sp, #16]
  422f9c:	strb	w8, [sp, #8]
  422fa0:	str	x25, [sp]
  422fa4:	bl	41e44c <feof@plt+0x1abac>
  422fa8:	ldr	w8, [x23, #784]
  422fac:	cbnz	w8, 422cd4 <feof@plt+0x1f434>
  422fb0:	mov	w8, #0x1                   	// #1
  422fb4:	mov	w2, #0x129                 	// #297
  422fb8:	mov	x0, x24
  422fbc:	mov	x1, x23
  422fc0:	mov	x3, xzr
  422fc4:	mov	x4, x22
  422fc8:	mov	w5, w21
  422fcc:	mov	w6, w20
  422fd0:	mov	w7, w19
  422fd4:	str	x26, [sp, #16]
  422fd8:	strb	w8, [sp, #8]
  422fdc:	str	x25, [sp]
  422fe0:	bl	41e44c <feof@plt+0x1abac>
  422fe4:	ldr	w8, [x23, #812]
  422fe8:	cbnz	w8, 422cdc <feof@plt+0x1f43c>
  422fec:	mov	w8, #0x1                   	// #1
  422ff0:	mov	w2, #0x130                 	// #304
  422ff4:	mov	x0, x24
  422ff8:	mov	x1, x23
  422ffc:	mov	x3, xzr
  423000:	mov	x4, x22
  423004:	mov	w5, w21
  423008:	mov	w6, w20
  42300c:	mov	w7, w19
  423010:	str	x26, [sp, #16]
  423014:	strb	w8, [sp, #8]
  423018:	str	x25, [sp]
  42301c:	bl	41e44c <feof@plt+0x1abac>
  423020:	ldr	w8, [x23, #1028]
  423024:	cbnz	w8, 422ce4 <feof@plt+0x1f444>
  423028:	mov	w8, #0x1                   	// #1
  42302c:	mov	w2, #0x16f                 	// #367
  423030:	mov	x0, x24
  423034:	mov	x1, x23
  423038:	mov	x3, xzr
  42303c:	mov	x4, x22
  423040:	mov	w5, w21
  423044:	mov	w6, w20
  423048:	mov	w7, w19
  42304c:	str	x26, [sp, #16]
  423050:	strb	w8, [sp, #8]
  423054:	str	x25, [sp]
  423058:	bl	41e44c <feof@plt+0x1abac>
  42305c:	ldr	w8, [x23, #1064]
  423060:	cbnz	w8, 422cec <feof@plt+0x1f44c>
  423064:	mov	w8, #0x1                   	// #1
  423068:	mov	w2, #0x178                 	// #376
  42306c:	mov	x0, x24
  423070:	mov	x1, x23
  423074:	mov	x3, xzr
  423078:	mov	x4, x22
  42307c:	mov	w5, w21
  423080:	mov	w6, w20
  423084:	mov	w7, w19
  423088:	str	x26, [sp, #16]
  42308c:	strb	w8, [sp, #8]
  423090:	str	x25, [sp]
  423094:	bl	41e44c <feof@plt+0x1abac>
  423098:	ldr	w8, [x23, #1220]
  42309c:	cbnz	w8, 422cf4 <feof@plt+0x1f454>
  4230a0:	mov	w8, #0x1                   	// #1
  4230a4:	mov	w2, #0x1a6                 	// #422
  4230a8:	mov	x0, x24
  4230ac:	mov	x1, x23
  4230b0:	mov	x3, xzr
  4230b4:	mov	x4, x22
  4230b8:	mov	w5, w21
  4230bc:	mov	w6, w20
  4230c0:	mov	w7, w19
  4230c4:	str	x26, [sp, #16]
  4230c8:	strb	w8, [sp, #8]
  4230cc:	str	x25, [sp]
  4230d0:	bl	41e44c <feof@plt+0x1abac>
  4230d4:	ldr	w8, [x23, #1256]
  4230d8:	cbnz	w8, 422cfc <feof@plt+0x1f45c>
  4230dc:	mov	w8, #0x1                   	// #1
  4230e0:	mov	w2, #0x1af                 	// #431
  4230e4:	mov	x0, x24
  4230e8:	mov	x1, x23
  4230ec:	mov	x3, xzr
  4230f0:	mov	x4, x22
  4230f4:	mov	w5, w21
  4230f8:	mov	w6, w20
  4230fc:	mov	w7, w19
  423100:	str	x26, [sp, #16]
  423104:	strb	w8, [sp, #8]
  423108:	str	x25, [sp]
  42310c:	bl	41e44c <feof@plt+0x1abac>
  423110:	ldr	w8, [x23, #1260]
  423114:	cbnz	w8, 422d04 <feof@plt+0x1f464>
  423118:	mov	w8, #0x1                   	// #1
  42311c:	mov	w2, #0x1b0                 	// #432
  423120:	mov	x0, x24
  423124:	mov	x1, x23
  423128:	mov	x3, xzr
  42312c:	mov	x4, x22
  423130:	mov	w5, w21
  423134:	mov	w6, w20
  423138:	mov	w7, w19
  42313c:	str	x26, [sp, #16]
  423140:	strb	w8, [sp, #8]
  423144:	str	x25, [sp]
  423148:	bl	41e44c <feof@plt+0x1abac>
  42314c:	ldr	w8, [x23, #1304]
  423150:	cbnz	w8, 422d0c <feof@plt+0x1f46c>
  423154:	mov	w8, #0x1                   	// #1
  423158:	mov	w2, #0x1bb                 	// #443
  42315c:	mov	x0, x24
  423160:	mov	x1, x23
  423164:	mov	x3, xzr
  423168:	mov	x4, x22
  42316c:	mov	w5, w21
  423170:	mov	w6, w20
  423174:	mov	w7, w19
  423178:	str	x26, [sp, #16]
  42317c:	strb	w8, [sp, #8]
  423180:	str	x25, [sp]
  423184:	bl	41e44c <feof@plt+0x1abac>
  423188:	ldr	w8, [x23, #1312]
  42318c:	cbnz	w8, 422d14 <feof@plt+0x1f474>
  423190:	mov	w8, #0x1                   	// #1
  423194:	mov	w2, #0x1bd                 	// #445
  423198:	mov	x0, x24
  42319c:	mov	x1, x23
  4231a0:	mov	x3, xzr
  4231a4:	mov	x4, x22
  4231a8:	mov	w5, w21
  4231ac:	mov	w6, w20
  4231b0:	mov	w7, w19
  4231b4:	str	x26, [sp, #16]
  4231b8:	strb	w8, [sp, #8]
  4231bc:	str	x25, [sp]
  4231c0:	bl	41e44c <feof@plt+0x1abac>
  4231c4:	ldr	w8, [x23, #1324]
  4231c8:	cbnz	w8, 422d1c <feof@plt+0x1f47c>
  4231cc:	mov	w8, #0x1                   	// #1
  4231d0:	mov	w2, #0x1c2                 	// #450
  4231d4:	mov	x0, x24
  4231d8:	mov	x1, x23
  4231dc:	mov	x3, xzr
  4231e0:	mov	x4, x22
  4231e4:	mov	w5, w21
  4231e8:	mov	w6, w20
  4231ec:	mov	w7, w19
  4231f0:	str	x26, [sp, #16]
  4231f4:	strb	w8, [sp, #8]
  4231f8:	str	x25, [sp]
  4231fc:	bl	41e44c <feof@plt+0x1abac>
  423200:	ldr	w8, [x23, #1340]
  423204:	cbnz	w8, 422d24 <feof@plt+0x1f484>
  423208:	mov	w8, #0x1                   	// #1
  42320c:	mov	w2, #0x1c7                 	// #455
  423210:	mov	x0, x24
  423214:	mov	x1, x23
  423218:	mov	x3, xzr
  42321c:	mov	x4, x22
  423220:	mov	w5, w21
  423224:	mov	w6, w20
  423228:	mov	w7, w19
  42322c:	str	x26, [sp, #16]
  423230:	strb	w8, [sp, #8]
  423234:	str	x25, [sp]
  423238:	bl	41e44c <feof@plt+0x1abac>
  42323c:	ldr	w8, [x23, #1428]
  423240:	cbnz	w8, 4232c8 <feof@plt+0x1fa28>
  423244:	mov	w8, #0x1                   	// #1
  423248:	str	x26, [sp, #16]
  42324c:	strb	w8, [sp, #8]
  423250:	mov	w2, #0x1dc                 	// #476
  423254:	b	4232a4 <feof@plt+0x1fa04>
  423258:	mov	w8, #0x1                   	// #1
  42325c:	mov	w2, #0xa8                  	// #168
  423260:	mov	x0, x24
  423264:	mov	x1, x23
  423268:	mov	x3, xzr
  42326c:	mov	x4, x22
  423270:	mov	w5, w21
  423274:	mov	w6, w20
  423278:	mov	w7, w19
  42327c:	str	x26, [sp, #16]
  423280:	strb	w8, [sp, #8]
  423284:	str	x25, [sp]
  423288:	bl	41e44c <feof@plt+0x1abac>
  42328c:	ldr	w8, [x23, #1256]
  423290:	cbnz	w8, 4232c8 <feof@plt+0x1fa28>
  423294:	mov	w8, #0x1                   	// #1
  423298:	mov	w2, #0x1af                 	// #431
  42329c:	str	x26, [sp, #16]
  4232a0:	strb	w8, [sp, #8]
  4232a4:	mov	x0, x24
  4232a8:	mov	x1, x23
  4232ac:	mov	x3, xzr
  4232b0:	mov	x4, x22
  4232b4:	mov	w5, w21
  4232b8:	mov	w6, w20
  4232bc:	mov	w7, w19
  4232c0:	str	x25, [sp]
  4232c4:	bl	41e44c <feof@plt+0x1abac>
  4232c8:	ldp	x20, x19, [sp, #96]
  4232cc:	ldp	x22, x21, [sp, #80]
  4232d0:	ldp	x24, x23, [sp, #64]
  4232d4:	ldp	x26, x25, [sp, #48]
  4232d8:	ldp	x29, x30, [sp, #32]
  4232dc:	mov	w0, #0x1                   	// #1
  4232e0:	add	sp, sp, #0x70
  4232e4:	ret
  4232e8:	mov	w0, #0x1                   	// #1
  4232ec:	ret
  4232f0:	sub	sp, sp, #0x70
  4232f4:	stp	x29, x30, [sp, #32]
  4232f8:	stp	x26, x25, [sp, #48]
  4232fc:	stp	x24, x23, [sp, #64]
  423300:	stp	x22, x21, [sp, #80]
  423304:	stp	x20, x19, [sp, #96]
  423308:	add	x29, sp, #0x20
  42330c:	ldp	x25, x26, [x29, #80]
  423310:	mov	w19, w7
  423314:	mov	w20, w6
  423318:	mov	w21, w5
  42331c:	mov	x24, x4
  423320:	mov	x22, x1
  423324:	cmp	w2, #0x105
  423328:	mov	x23, x0
  42332c:	b.eq	42336c <feof@plt+0x1facc>  // b.none
  423330:	cmp	w2, #0xa3
  423334:	b.ne	4235dc <feof@plt+0x1fd3c>  // b.any
  423338:	ldr	w8, [x22, #336]
  42333c:	cbz	w8, 423388 <feof@plt+0x1fae8>
  423340:	ldr	w8, [x22, #812]
  423344:	cbz	w8, 4233c8 <feof@plt+0x1fb28>
  423348:	ldr	w8, [x22, #900]
  42334c:	cbz	w8, 423404 <feof@plt+0x1fb64>
  423350:	ldr	w8, [x22, #1172]
  423354:	cbz	w8, 423440 <feof@plt+0x1fba0>
  423358:	ldr	w8, [x22, #1176]
  42335c:	cbz	w8, 423484 <feof@plt+0x1fbe4>
  423360:	ldr	w8, [x22, #1312]
  423364:	cbnz	w8, 4235dc <feof@plt+0x1fd3c>
  423368:	b	4234c0 <feof@plt+0x1fc20>
  42336c:	ldr	w8, [x22, #620]
  423370:	cbz	w8, 4234e8 <feof@plt+0x1fc48>
  423374:	ldr	w8, [x22, #632]
  423378:	cbz	w8, 42353c <feof@plt+0x1fc9c>
  42337c:	ldr	w8, [x22, #900]
  423380:	cbnz	w8, 4235dc <feof@plt+0x1fd3c>
  423384:	b	423590 <feof@plt+0x1fcf0>
  423388:	cmp	x24, #0x0
  42338c:	cset	w4, ne  // ne = any
  423390:	mov	w8, #0x1                   	// #1
  423394:	mov	w2, #0xab                  	// #171
  423398:	mov	x0, x23
  42339c:	mov	x1, x22
  4233a0:	mov	x3, xzr
  4233a4:	mov	w5, w21
  4233a8:	mov	w6, w20
  4233ac:	mov	w7, w19
  4233b0:	str	x26, [sp, #16]
  4233b4:	strb	w8, [sp, #8]
  4233b8:	str	x25, [sp]
  4233bc:	bl	41e44c <feof@plt+0x1abac>
  4233c0:	ldr	w8, [x22, #812]
  4233c4:	cbnz	w8, 423348 <feof@plt+0x1faa8>
  4233c8:	mov	w8, #0x1                   	// #1
  4233cc:	mov	w2, #0x130                 	// #304
  4233d0:	mov	x0, x23
  4233d4:	mov	x1, x22
  4233d8:	mov	x3, xzr
  4233dc:	mov	x4, x24
  4233e0:	mov	w5, w21
  4233e4:	mov	w6, w20
  4233e8:	mov	w7, w19
  4233ec:	str	x26, [sp, #16]
  4233f0:	strb	w8, [sp, #8]
  4233f4:	str	x25, [sp]
  4233f8:	bl	41e44c <feof@plt+0x1abac>
  4233fc:	ldr	w8, [x22, #900]
  423400:	cbnz	w8, 423350 <feof@plt+0x1fab0>
  423404:	mov	w8, #0x1                   	// #1
  423408:	mov	w2, #0x14c                 	// #332
  42340c:	mov	x0, x23
  423410:	mov	x1, x22
  423414:	mov	x3, xzr
  423418:	mov	x4, x24
  42341c:	mov	w5, w21
  423420:	mov	w6, w20
  423424:	mov	w7, w19
  423428:	str	x26, [sp, #16]
  42342c:	strb	w8, [sp, #8]
  423430:	str	x25, [sp]
  423434:	bl	41e44c <feof@plt+0x1abac>
  423438:	ldr	w8, [x22, #1172]
  42343c:	cbnz	w8, 423358 <feof@plt+0x1fab8>
  423440:	cmp	x24, #0x0
  423444:	cset	w8, ne  // ne = any
  423448:	lsl	x4, x8, #1
  42344c:	mov	w8, #0x1                   	// #1
  423450:	mov	w2, #0x19a                 	// #410
  423454:	mov	x0, x23
  423458:	mov	x1, x22
  42345c:	mov	x3, xzr
  423460:	mov	w5, w21
  423464:	mov	w6, w20
  423468:	mov	w7, w19
  42346c:	str	x26, [sp, #16]
  423470:	strb	w8, [sp, #8]
  423474:	str	x25, [sp]
  423478:	bl	41e44c <feof@plt+0x1abac>
  42347c:	ldr	w8, [x22, #1176]
  423480:	cbnz	w8, 423360 <feof@plt+0x1fac0>
  423484:	mov	w8, #0x1                   	// #1
  423488:	mov	w2, #0x19b                 	// #411
  42348c:	mov	x0, x23
  423490:	mov	x1, x22
  423494:	mov	x3, xzr
  423498:	mov	x4, x24
  42349c:	mov	w5, w21
  4234a0:	mov	w6, w20
  4234a4:	mov	w7, w19
  4234a8:	str	x26, [sp, #16]
  4234ac:	strb	w8, [sp, #8]
  4234b0:	str	x25, [sp]
  4234b4:	bl	41e44c <feof@plt+0x1abac>
  4234b8:	ldr	w8, [x22, #1312]
  4234bc:	cbnz	w8, 4235dc <feof@plt+0x1fd3c>
  4234c0:	mov	w8, #0x1                   	// #1
  4234c4:	str	x26, [sp, #16]
  4234c8:	strb	w8, [sp, #8]
  4234cc:	mov	w2, #0x1bd                 	// #445
  4234d0:	str	x25, [sp]
  4234d4:	mov	x0, x23
  4234d8:	mov	x1, x22
  4234dc:	mov	x3, xzr
  4234e0:	mov	x4, x24
  4234e4:	b	4235cc <feof@plt+0x1fd2c>
  4234e8:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4234ec:	ldr	w8, [x8, #1044]
  4234f0:	cmp	x24, #0x0
  4234f4:	cset	w9, ne  // ne = any
  4234f8:	mov	w2, #0xfe                  	// #254
  4234fc:	cmp	w8, #0x0
  423500:	cset	w8, gt
  423504:	and	w4, w9, w8
  423508:	mov	w8, #0x1                   	// #1
  42350c:	mov	x0, x23
  423510:	mov	x1, x22
  423514:	mov	x3, xzr
  423518:	mov	w5, w21
  42351c:	mov	w6, w20
  423520:	mov	w7, w19
  423524:	str	x26, [sp, #16]
  423528:	strb	w8, [sp, #8]
  42352c:	str	x25, [sp]
  423530:	bl	41e44c <feof@plt+0x1abac>
  423534:	ldr	w8, [x22, #632]
  423538:	cbnz	w8, 42337c <feof@plt+0x1fadc>
  42353c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  423540:	ldr	w8, [x8, #1044]
  423544:	cmp	x24, #0x0
  423548:	cset	w9, ne  // ne = any
  42354c:	mov	w2, #0x102                 	// #258
  423550:	cmp	w8, #0x0
  423554:	cset	w8, gt
  423558:	and	w4, w9, w8
  42355c:	mov	w8, #0x1                   	// #1
  423560:	mov	x0, x23
  423564:	mov	x1, x22
  423568:	mov	x3, xzr
  42356c:	mov	w5, w21
  423570:	mov	w6, w20
  423574:	mov	w7, w19
  423578:	str	x26, [sp, #16]
  42357c:	strb	w8, [sp, #8]
  423580:	str	x25, [sp]
  423584:	bl	41e44c <feof@plt+0x1abac>
  423588:	ldr	w8, [x22, #900]
  42358c:	cbnz	w8, 4235dc <feof@plt+0x1fd3c>
  423590:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  423594:	ldr	w8, [x8, #1044]
  423598:	cmp	x24, #0x0
  42359c:	cset	w9, ne  // ne = any
  4235a0:	mov	w2, #0x14c                 	// #332
  4235a4:	cmp	w8, #0x0
  4235a8:	cset	w8, gt
  4235ac:	and	w4, w9, w8
  4235b0:	mov	w8, #0x1                   	// #1
  4235b4:	mov	x0, x23
  4235b8:	mov	x1, x22
  4235bc:	mov	x3, xzr
  4235c0:	str	x26, [sp, #16]
  4235c4:	strb	w8, [sp, #8]
  4235c8:	str	x25, [sp]
  4235cc:	mov	w5, w21
  4235d0:	mov	w6, w20
  4235d4:	mov	w7, w19
  4235d8:	bl	41e44c <feof@plt+0x1abac>
  4235dc:	ldp	x20, x19, [sp, #96]
  4235e0:	ldp	x22, x21, [sp, #80]
  4235e4:	ldp	x24, x23, [sp, #64]
  4235e8:	ldp	x26, x25, [sp, #48]
  4235ec:	ldp	x29, x30, [sp, #32]
  4235f0:	mov	w0, #0x1                   	// #1
  4235f4:	add	sp, sp, #0x70
  4235f8:	ret
  4235fc:	sub	sp, sp, #0x70
  423600:	stp	x29, x30, [sp, #32]
  423604:	stp	x26, x25, [sp, #48]
  423608:	stp	x24, x23, [sp, #64]
  42360c:	stp	x22, x21, [sp, #80]
  423610:	stp	x20, x19, [sp, #96]
  423614:	add	x29, sp, #0x20
  423618:	ldp	x25, x26, [x29, #80]
  42361c:	mov	w19, w7
  423620:	mov	w20, w6
  423624:	mov	w21, w5
  423628:	mov	x24, x4
  42362c:	mov	x22, x1
  423630:	cmp	w2, #0x104
  423634:	mov	x23, x0
  423638:	b.le	423660 <feof@plt+0x1fdc0>
  42363c:	cmp	w2, #0x160
  423640:	b.le	42369c <feof@plt+0x1fdfc>
  423644:	cmp	w2, #0x1c1
  423648:	b.gt	423710 <feof@plt+0x1fe70>
  42364c:	cmp	w2, #0x161
  423650:	b.eq	423744 <feof@plt+0x1fea4>  // b.none
  423654:	cmp	w2, #0x1b4
  423658:	b.eq	42376c <feof@plt+0x1fecc>  // b.none
  42365c:	b	4247f8 <feof@plt+0x20f58>
  423660:	cmp	w2, #0xbe
  423664:	b.gt	4236d0 <feof@plt+0x1fe30>
  423668:	cmp	w2, #0x97
  42366c:	b.eq	423788 <feof@plt+0x1fee8>  // b.none
  423670:	cmp	w2, #0xa3
  423674:	b.eq	4237a4 <feof@plt+0x1ff04>  // b.none
  423678:	cmp	w2, #0xb7
  42367c:	b.ne	4247f8 <feof@plt+0x20f58>  // b.any
  423680:	ldr	w8, [x22, #576]
  423684:	cbnz	w8, 4247f8 <feof@plt+0x20f58>
  423688:	mov	w8, #0x1                   	// #1
  42368c:	str	x26, [sp, #16]
  423690:	strb	w8, [sp, #8]
  423694:	mov	w2, #0xef                  	// #239
  423698:	b	4244f4 <feof@plt+0x20c54>
  42369c:	cmp	w2, #0x105
  4236a0:	b.eq	4238f0 <feof@plt+0x20050>  // b.none
  4236a4:	cmp	w2, #0x10f
  4236a8:	b.eq	42393c <feof@plt+0x2009c>  // b.none
  4236ac:	cmp	w2, #0x160
  4236b0:	b.ne	4247f8 <feof@plt+0x20f58>  // b.any
  4236b4:	ldr	w8, [x22, #492]
  4236b8:	cbnz	w8, 4247f8 <feof@plt+0x20f58>
  4236bc:	mov	w8, #0x1                   	// #1
  4236c0:	str	x26, [sp, #16]
  4236c4:	strb	w8, [sp, #8]
  4236c8:	mov	w2, #0xd9                  	// #217
  4236cc:	b	4244f4 <feof@plt+0x20c54>
  4236d0:	cmp	w2, #0xbf
  4236d4:	b.eq	423994 <feof@plt+0x200f4>  // b.none
  4236d8:	cmp	w2, #0xd3
  4236dc:	b.eq	4239b0 <feof@plt+0x20110>  // b.none
  4236e0:	cmp	w2, #0xf4
  4236e4:	b.ne	4247f8 <feof@plt+0x20f58>  // b.any
  4236e8:	ldr	w8, [x22, #696]
  4236ec:	cbnz	w8, 4247f8 <feof@plt+0x20f58>
  4236f0:	cmp	x24, #0x0
  4236f4:	mov	w8, #0x3                   	// #3
  4236f8:	csel	x4, xzr, x8, eq  // eq = none
  4236fc:	mov	w8, #0x1                   	// #1
  423700:	str	x26, [sp, #16]
  423704:	strb	w8, [sp, #8]
  423708:	mov	w2, #0x111                 	// #273
  42370c:	b	4247d8 <feof@plt+0x20f38>
  423710:	cmp	w2, #0x1c2
  423714:	b.eq	423a08 <feof@plt+0x20168>  // b.none
  423718:	cmp	w2, #0x1cf
  42371c:	b.ne	4247f8 <feof@plt+0x20f58>  // b.any
  423720:	ldr	w8, [x22, #1336]
  423724:	cbnz	w8, 4247f8 <feof@plt+0x20f58>
  423728:	cmp	x24, #0x0
  42372c:	cset	w4, ne  // ne = any
  423730:	mov	w8, #0x1                   	// #1
  423734:	mov	w2, #0x1c6                 	// #454
  423738:	str	x26, [sp, #16]
  42373c:	strb	w8, [sp, #8]
  423740:	b	4247d8 <feof@plt+0x20f38>
  423744:	ldr	w8, [x22, #572]
  423748:	cbz	w8, 423a24 <feof@plt+0x20184>
  42374c:	ldr	w8, [x22, #808]
  423750:	cbz	w8, 423a60 <feof@plt+0x201c0>
  423754:	ldr	w8, [x22, #940]
  423758:	cbz	w8, 423aa4 <feof@plt+0x20204>
  42375c:	ldr	w8, [x22, #992]
  423760:	cbz	w8, 423ae0 <feof@plt+0x20240>
  423764:	ldr	w8, [x22, #1000]
  423768:	cbz	w8, 423b1c <feof@plt+0x2027c>
  42376c:	ldr	w8, [x22, #1388]
  423770:	cbnz	w8, 4247f8 <feof@plt+0x20f58>
  423774:	mov	w8, #0x1                   	// #1
  423778:	str	x26, [sp, #16]
  42377c:	strb	w8, [sp, #8]
  423780:	mov	w2, #0x1d3                 	// #467
  423784:	b	4244f4 <feof@plt+0x20c54>
  423788:	ldr	w8, [x22, #1024]
  42378c:	cbnz	w8, 4247f8 <feof@plt+0x20f58>
  423790:	mov	w8, #0x1                   	// #1
  423794:	str	x26, [sp, #16]
  423798:	strb	w8, [sp, #8]
  42379c:	mov	w2, #0x16e                 	// #366
  4237a0:	b	4244f4 <feof@plt+0x20c54>
  4237a4:	ldr	w8, [x22, #272]
  4237a8:	cbz	w8, 423b5c <feof@plt+0x202bc>
  4237ac:	ldr	w8, [x22, #336]
  4237b0:	cbz	w8, 423b98 <feof@plt+0x202f8>
  4237b4:	ldr	w8, [x22, #364]
  4237b8:	cbz	w8, 423bd8 <feof@plt+0x20338>
  4237bc:	ldr	w8, [x22, #368]
  4237c0:	cbz	w8, 423c14 <feof@plt+0x20374>
  4237c4:	ldr	w8, [x22, #436]
  4237c8:	cbz	w8, 423c50 <feof@plt+0x203b0>
  4237cc:	ldr	w8, [x22, #456]
  4237d0:	cbz	w8, 423c8c <feof@plt+0x203ec>
  4237d4:	ldr	w8, [x22, #552]
  4237d8:	cbz	w8, 423cc8 <feof@plt+0x20428>
  4237dc:	ldr	w8, [x22, #576]
  4237e0:	cbz	w8, 423d04 <feof@plt+0x20464>
  4237e4:	ldr	w8, [x22, #644]
  4237e8:	cbz	w8, 423d40 <feof@plt+0x204a0>
  4237ec:	ldr	w8, [x22, #648]
  4237f0:	cbz	w8, 423d80 <feof@plt+0x204e0>
  4237f4:	ldr	w8, [x22, #692]
  4237f8:	cbz	w8, 423dbc <feof@plt+0x2051c>
  4237fc:	ldr	w8, [x22, #740]
  423800:	cbz	w8, 423df8 <feof@plt+0x20558>
  423804:	ldr	w8, [x22, #792]
  423808:	cbz	w8, 423e34 <feof@plt+0x20594>
  42380c:	ldr	w8, [x22, #808]
  423810:	cbz	w8, 423e70 <feof@plt+0x205d0>
  423814:	ldr	w8, [x22, #812]
  423818:	cbz	w8, 423eb4 <feof@plt+0x20614>
  42381c:	ldr	w8, [x22, #816]
  423820:	cbz	w8, 423ef0 <feof@plt+0x20650>
  423824:	ldr	w8, [x22, #820]
  423828:	cbz	w8, 423f2c <feof@plt+0x2068c>
  42382c:	ldr	w8, [x22, #828]
  423830:	cbz	w8, 423f68 <feof@plt+0x206c8>
  423834:	ldr	w8, [x22, #832]
  423838:	cbz	w8, 423fa4 <feof@plt+0x20704>
  42383c:	ldr	w8, [x22, #868]
  423840:	cbz	w8, 423fe0 <feof@plt+0x20740>
  423844:	ldr	w8, [x22, #900]
  423848:	cbz	w8, 42401c <feof@plt+0x2077c>
  42384c:	ldr	w8, [x22, #904]
  423850:	cbz	w8, 424058 <feof@plt+0x207b8>
  423854:	ldr	w8, [x22, #964]
  423858:	cbz	w8, 424094 <feof@plt+0x207f4>
  42385c:	ldr	w8, [x22, #972]
  423860:	cbz	w8, 4240d0 <feof@plt+0x20830>
  423864:	ldr	w8, [x22, #1000]
  423868:	cbz	w8, 42410c <feof@plt+0x2086c>
  42386c:	ldr	w8, [x22, #1056]
  423870:	cbz	w8, 424148 <feof@plt+0x208a8>
  423874:	ldr	w8, [x22, #1064]
  423878:	cbz	w8, 424184 <feof@plt+0x208e4>
  42387c:	ldr	w8, [x22, #1072]
  423880:	cbz	w8, 4241c0 <feof@plt+0x20920>
  423884:	ldr	w8, [x22, #1128]
  423888:	cbz	w8, 4241fc <feof@plt+0x2095c>
  42388c:	ldr	w8, [x22, #1132]
  423890:	cbz	w8, 424238 <feof@plt+0x20998>
  423894:	ldr	w8, [x22, #1152]
  423898:	cbz	w8, 424274 <feof@plt+0x209d4>
  42389c:	ldr	w8, [x22, #1160]
  4238a0:	cbz	w8, 4242b8 <feof@plt+0x20a18>
  4238a4:	ldr	w8, [x22, #1172]
  4238a8:	cbz	w8, 4242f8 <feof@plt+0x20a58>
  4238ac:	ldr	w8, [x22, #1176]
  4238b0:	cbz	w8, 42433c <feof@plt+0x20a9c>
  4238b4:	ldr	w8, [x22, #1224]
  4238b8:	cbz	w8, 424378 <feof@plt+0x20ad8>
  4238bc:	ldr	w8, [x22, #1264]
  4238c0:	cbz	w8, 4243b4 <feof@plt+0x20b14>
  4238c4:	ldr	w8, [x22, #1288]
  4238c8:	cbz	w8, 4243f0 <feof@plt+0x20b50>
  4238cc:	ldr	w8, [x22, #1312]
  4238d0:	cbz	w8, 42442c <feof@plt+0x20b8c>
  4238d4:	ldr	w8, [x22, #1316]
  4238d8:	cbz	w8, 424468 <feof@plt+0x20bc8>
  4238dc:	ldr	w8, [x22, #1324]
  4238e0:	cbz	w8, 4244a8 <feof@plt+0x20c08>
  4238e4:	ldr	w8, [x22, #1416]
  4238e8:	cbnz	w8, 4247f8 <feof@plt+0x20f58>
  4238ec:	b	4244e4 <feof@plt+0x20c44>
  4238f0:	ldr	w8, [x22, #608]
  4238f4:	cbz	w8, 42450c <feof@plt+0x20c6c>
  4238f8:	ldr	w8, [x22, #612]
  4238fc:	cbz	w8, 424560 <feof@plt+0x20cc0>
  423900:	ldr	w8, [x22, #616]
  423904:	cbz	w8, 4245b4 <feof@plt+0x20d14>
  423908:	ldr	w8, [x22, #620]
  42390c:	cbz	w8, 424608 <feof@plt+0x20d68>
  423910:	ldr	w8, [x22, #624]
  423914:	cbz	w8, 42465c <feof@plt+0x20dbc>
  423918:	ldr	w8, [x22, #632]
  42391c:	cbz	w8, 4246b0 <feof@plt+0x20e10>
  423920:	ldr	w8, [x22, #636]
  423924:	cbz	w8, 424704 <feof@plt+0x20e64>
  423928:	ldr	w8, [x22, #640]
  42392c:	cbz	w8, 424758 <feof@plt+0x20eb8>
  423930:	ldr	w8, [x22, #900]
  423934:	cbnz	w8, 4247f8 <feof@plt+0x20f58>
  423938:	b	4247ac <feof@plt+0x20f0c>
  42393c:	ldr	w8, [x22, #700]
  423940:	cbnz	w8, 423978 <feof@plt+0x200d8>
  423944:	mov	w8, #0x1                   	// #1
  423948:	mov	w2, #0x112                 	// #274
  42394c:	mov	x0, x23
  423950:	mov	x1, x22
  423954:	mov	x3, xzr
  423958:	mov	x4, x24
  42395c:	mov	w5, w21
  423960:	mov	w6, w20
  423964:	mov	w7, w19
  423968:	str	x26, [sp, #16]
  42396c:	strb	w8, [sp, #8]
  423970:	str	x25, [sp]
  423974:	bl	41e44c <feof@plt+0x1abac>
  423978:	ldr	w8, [x22, #704]
  42397c:	cbnz	w8, 4247f8 <feof@plt+0x20f58>
  423980:	mov	w8, #0x1                   	// #1
  423984:	str	x26, [sp, #16]
  423988:	strb	w8, [sp, #8]
  42398c:	mov	w2, #0x113                 	// #275
  423990:	b	4244f4 <feof@plt+0x20c54>
  423994:	ldr	w8, [x22, #800]
  423998:	cbnz	w8, 4247f8 <feof@plt+0x20f58>
  42399c:	mov	w8, #0x1                   	// #1
  4239a0:	str	x26, [sp, #16]
  4239a4:	strb	w8, [sp, #8]
  4239a8:	mov	w2, #0x12d                 	// #301
  4239ac:	b	4244f4 <feof@plt+0x20c54>
  4239b0:	ldr	w8, [x22, #600]
  4239b4:	cbnz	w8, 4239ec <feof@plt+0x2014c>
  4239b8:	mov	w8, #0x1                   	// #1
  4239bc:	mov	w2, #0xf7                  	// #247
  4239c0:	mov	x0, x23
  4239c4:	mov	x1, x22
  4239c8:	mov	x3, xzr
  4239cc:	mov	x4, x24
  4239d0:	mov	w5, w21
  4239d4:	mov	w6, w20
  4239d8:	mov	w7, w19
  4239dc:	str	x26, [sp, #16]
  4239e0:	strb	w8, [sp, #8]
  4239e4:	str	x25, [sp]
  4239e8:	bl	41e44c <feof@plt+0x1abac>
  4239ec:	ldr	w8, [x22, #1112]
  4239f0:	cbnz	w8, 4247f8 <feof@plt+0x20f58>
  4239f4:	mov	w8, #0x1                   	// #1
  4239f8:	str	x26, [sp, #16]
  4239fc:	strb	w8, [sp, #8]
  423a00:	mov	w2, #0x189                 	// #393
  423a04:	b	4244f4 <feof@plt+0x20c54>
  423a08:	ldr	w8, [x22, #1372]
  423a0c:	cbnz	w8, 4247f8 <feof@plt+0x20f58>
  423a10:	mov	w8, #0x1                   	// #1
  423a14:	mov	w2, #0x1cf                 	// #463
  423a18:	str	x26, [sp, #16]
  423a1c:	strb	w8, [sp, #8]
  423a20:	b	4244f4 <feof@plt+0x20c54>
  423a24:	mov	w8, #0x1                   	// #1
  423a28:	mov	w2, #0xee                  	// #238
  423a2c:	mov	x0, x23
  423a30:	mov	x1, x22
  423a34:	mov	x3, xzr
  423a38:	mov	x4, x24
  423a3c:	mov	w5, w21
  423a40:	mov	w6, w20
  423a44:	mov	w7, w19
  423a48:	str	x26, [sp, #16]
  423a4c:	strb	w8, [sp, #8]
  423a50:	str	x25, [sp]
  423a54:	bl	41e44c <feof@plt+0x1abac>
  423a58:	ldr	w8, [x22, #808]
  423a5c:	cbnz	w8, 423754 <feof@plt+0x1feb4>
  423a60:	cmp	x24, #0x0
  423a64:	cset	w8, ne  // ne = any
  423a68:	lsl	x4, x8, #1
  423a6c:	mov	w8, #0x1                   	// #1
  423a70:	mov	w2, #0x12f                 	// #303
  423a74:	mov	x0, x23
  423a78:	mov	x1, x22
  423a7c:	mov	x3, xzr
  423a80:	mov	w5, w21
  423a84:	mov	w6, w20
  423a88:	mov	w7, w19
  423a8c:	str	x26, [sp, #16]
  423a90:	strb	w8, [sp, #8]
  423a94:	str	x25, [sp]
  423a98:	bl	41e44c <feof@plt+0x1abac>
  423a9c:	ldr	w8, [x22, #940]
  423aa0:	cbnz	w8, 42375c <feof@plt+0x1febc>
  423aa4:	mov	w8, #0x1                   	// #1
  423aa8:	mov	w2, #0x157                 	// #343
  423aac:	mov	x0, x23
  423ab0:	mov	x1, x22
  423ab4:	mov	x3, xzr
  423ab8:	mov	x4, x24
  423abc:	mov	w5, w21
  423ac0:	mov	w6, w20
  423ac4:	mov	w7, w19
  423ac8:	str	x26, [sp, #16]
  423acc:	strb	w8, [sp, #8]
  423ad0:	str	x25, [sp]
  423ad4:	bl	41e44c <feof@plt+0x1abac>
  423ad8:	ldr	w8, [x22, #992]
  423adc:	cbnz	w8, 423764 <feof@plt+0x1fec4>
  423ae0:	mov	w8, #0x1                   	// #1
  423ae4:	mov	w2, #0x166                 	// #358
  423ae8:	mov	x0, x23
  423aec:	mov	x1, x22
  423af0:	mov	x3, xzr
  423af4:	mov	x4, x24
  423af8:	mov	w5, w21
  423afc:	mov	w6, w20
  423b00:	mov	w7, w19
  423b04:	str	x26, [sp, #16]
  423b08:	strb	w8, [sp, #8]
  423b0c:	str	x25, [sp]
  423b10:	bl	41e44c <feof@plt+0x1abac>
  423b14:	ldr	w8, [x22, #1000]
  423b18:	cbnz	w8, 42376c <feof@plt+0x1fecc>
  423b1c:	mov	w8, #0x1                   	// #1
  423b20:	mov	w2, #0x168                 	// #360
  423b24:	mov	x0, x23
  423b28:	mov	x1, x22
  423b2c:	mov	x3, xzr
  423b30:	mov	x4, x24
  423b34:	mov	w5, w21
  423b38:	mov	w6, w20
  423b3c:	mov	w7, w19
  423b40:	str	x26, [sp, #16]
  423b44:	strb	w8, [sp, #8]
  423b48:	str	x25, [sp]
  423b4c:	bl	41e44c <feof@plt+0x1abac>
  423b50:	ldr	w8, [x22, #1388]
  423b54:	cbnz	w8, 4247f8 <feof@plt+0x20f58>
  423b58:	b	423774 <feof@plt+0x1fed4>
  423b5c:	mov	w8, #0x1                   	// #1
  423b60:	mov	w2, #0x9b                  	// #155
  423b64:	mov	x0, x23
  423b68:	mov	x1, x22
  423b6c:	mov	x3, xzr
  423b70:	mov	x4, x24
  423b74:	mov	w5, w21
  423b78:	mov	w6, w20
  423b7c:	mov	w7, w19
  423b80:	str	x26, [sp, #16]
  423b84:	strb	w8, [sp, #8]
  423b88:	str	x25, [sp]
  423b8c:	bl	41e44c <feof@plt+0x1abac>
  423b90:	ldr	w8, [x22, #336]
  423b94:	cbnz	w8, 4237b4 <feof@plt+0x1ff14>
  423b98:	cmp	x24, #0x0
  423b9c:	cset	w4, ne  // ne = any
  423ba0:	mov	w8, #0x1                   	// #1
  423ba4:	mov	w2, #0xab                  	// #171
  423ba8:	mov	x0, x23
  423bac:	mov	x1, x22
  423bb0:	mov	x3, xzr
  423bb4:	mov	w5, w21
  423bb8:	mov	w6, w20
  423bbc:	mov	w7, w19
  423bc0:	str	x26, [sp, #16]
  423bc4:	strb	w8, [sp, #8]
  423bc8:	str	x25, [sp]
  423bcc:	bl	41e44c <feof@plt+0x1abac>
  423bd0:	ldr	w8, [x22, #364]
  423bd4:	cbnz	w8, 4237bc <feof@plt+0x1ff1c>
  423bd8:	mov	w8, #0x1                   	// #1
  423bdc:	mov	w2, #0xb3                  	// #179
  423be0:	mov	x0, x23
  423be4:	mov	x1, x22
  423be8:	mov	x3, xzr
  423bec:	mov	x4, x24
  423bf0:	mov	w5, w21
  423bf4:	mov	w6, w20
  423bf8:	mov	w7, w19
  423bfc:	str	x26, [sp, #16]
  423c00:	strb	w8, [sp, #8]
  423c04:	str	x25, [sp]
  423c08:	bl	41e44c <feof@plt+0x1abac>
  423c0c:	ldr	w8, [x22, #368]
  423c10:	cbnz	w8, 4237c4 <feof@plt+0x1ff24>
  423c14:	mov	w8, #0x1                   	// #1
  423c18:	mov	w2, #0xb4                  	// #180
  423c1c:	mov	x0, x23
  423c20:	mov	x1, x22
  423c24:	mov	x3, xzr
  423c28:	mov	x4, x24
  423c2c:	mov	w5, w21
  423c30:	mov	w6, w20
  423c34:	mov	w7, w19
  423c38:	str	x26, [sp, #16]
  423c3c:	strb	w8, [sp, #8]
  423c40:	str	x25, [sp]
  423c44:	bl	41e44c <feof@plt+0x1abac>
  423c48:	ldr	w8, [x22, #436]
  423c4c:	cbnz	w8, 4237cc <feof@plt+0x1ff2c>
  423c50:	mov	w8, #0x1                   	// #1
  423c54:	mov	w2, #0xc9                  	// #201
  423c58:	mov	x0, x23
  423c5c:	mov	x1, x22
  423c60:	mov	x3, xzr
  423c64:	mov	x4, x24
  423c68:	mov	w5, w21
  423c6c:	mov	w6, w20
  423c70:	mov	w7, w19
  423c74:	str	x26, [sp, #16]
  423c78:	strb	w8, [sp, #8]
  423c7c:	str	x25, [sp]
  423c80:	bl	41e44c <feof@plt+0x1abac>
  423c84:	ldr	w8, [x22, #456]
  423c88:	cbnz	w8, 4237d4 <feof@plt+0x1ff34>
  423c8c:	mov	w8, #0x1                   	// #1
  423c90:	mov	w2, #0xcf                  	// #207
  423c94:	mov	x0, x23
  423c98:	mov	x1, x22
  423c9c:	mov	x3, xzr
  423ca0:	mov	x4, x24
  423ca4:	mov	w5, w21
  423ca8:	mov	w6, w20
  423cac:	mov	w7, w19
  423cb0:	str	x26, [sp, #16]
  423cb4:	strb	w8, [sp, #8]
  423cb8:	str	x25, [sp]
  423cbc:	bl	41e44c <feof@plt+0x1abac>
  423cc0:	ldr	w8, [x22, #552]
  423cc4:	cbnz	w8, 4237dc <feof@plt+0x1ff3c>
  423cc8:	mov	w8, #0x1                   	// #1
  423ccc:	mov	w2, #0xe9                  	// #233
  423cd0:	mov	x0, x23
  423cd4:	mov	x1, x22
  423cd8:	mov	x3, xzr
  423cdc:	mov	x4, x24
  423ce0:	mov	w5, w21
  423ce4:	mov	w6, w20
  423ce8:	mov	w7, w19
  423cec:	str	x26, [sp, #16]
  423cf0:	strb	w8, [sp, #8]
  423cf4:	str	x25, [sp]
  423cf8:	bl	41e44c <feof@plt+0x1abac>
  423cfc:	ldr	w8, [x22, #576]
  423d00:	cbnz	w8, 4237e4 <feof@plt+0x1ff44>
  423d04:	mov	w8, #0x1                   	// #1
  423d08:	mov	w2, #0xef                  	// #239
  423d0c:	mov	x0, x23
  423d10:	mov	x1, x22
  423d14:	mov	x3, xzr
  423d18:	mov	x4, x24
  423d1c:	mov	w5, w21
  423d20:	mov	w6, w20
  423d24:	mov	w7, w19
  423d28:	str	x26, [sp, #16]
  423d2c:	strb	w8, [sp, #8]
  423d30:	str	x25, [sp]
  423d34:	bl	41e44c <feof@plt+0x1abac>
  423d38:	ldr	w8, [x22, #644]
  423d3c:	cbnz	w8, 4237ec <feof@plt+0x1ff4c>
  423d40:	cmp	x24, #0x0
  423d44:	cset	w4, ne  // ne = any
  423d48:	mov	w8, #0x1                   	// #1
  423d4c:	mov	w2, #0x105                 	// #261
  423d50:	mov	x0, x23
  423d54:	mov	x1, x22
  423d58:	mov	x3, xzr
  423d5c:	mov	w5, w21
  423d60:	mov	w6, w20
  423d64:	mov	w7, w19
  423d68:	str	x26, [sp, #16]
  423d6c:	strb	w8, [sp, #8]
  423d70:	str	x25, [sp]
  423d74:	bl	41e44c <feof@plt+0x1abac>
  423d78:	ldr	w8, [x22, #648]
  423d7c:	cbnz	w8, 4237f4 <feof@plt+0x1ff54>
  423d80:	mov	w8, #0x1                   	// #1
  423d84:	mov	w2, #0x106                 	// #262
  423d88:	mov	x0, x23
  423d8c:	mov	x1, x22
  423d90:	mov	x3, xzr
  423d94:	mov	x4, x24
  423d98:	mov	w5, w21
  423d9c:	mov	w6, w20
  423da0:	mov	w7, w19
  423da4:	str	x26, [sp, #16]
  423da8:	strb	w8, [sp, #8]
  423dac:	str	x25, [sp]
  423db0:	bl	41e44c <feof@plt+0x1abac>
  423db4:	ldr	w8, [x22, #692]
  423db8:	cbnz	w8, 4237fc <feof@plt+0x1ff5c>
  423dbc:	mov	w8, #0x1                   	// #1
  423dc0:	mov	w2, #0x10f                 	// #271
  423dc4:	mov	x0, x23
  423dc8:	mov	x1, x22
  423dcc:	mov	x3, xzr
  423dd0:	mov	x4, x24
  423dd4:	mov	w5, w21
  423dd8:	mov	w6, w20
  423ddc:	mov	w7, w19
  423de0:	str	x26, [sp, #16]
  423de4:	strb	w8, [sp, #8]
  423de8:	str	x25, [sp]
  423dec:	bl	41e44c <feof@plt+0x1abac>
  423df0:	ldr	w8, [x22, #740]
  423df4:	cbnz	w8, 423804 <feof@plt+0x1ff64>
  423df8:	mov	w8, #0x1                   	// #1
  423dfc:	mov	w2, #0x11d                 	// #285
  423e00:	mov	x0, x23
  423e04:	mov	x1, x22
  423e08:	mov	x3, xzr
  423e0c:	mov	x4, x24
  423e10:	mov	w5, w21
  423e14:	mov	w6, w20
  423e18:	mov	w7, w19
  423e1c:	str	x26, [sp, #16]
  423e20:	strb	w8, [sp, #8]
  423e24:	str	x25, [sp]
  423e28:	bl	41e44c <feof@plt+0x1abac>
  423e2c:	ldr	w8, [x22, #792]
  423e30:	cbnz	w8, 42380c <feof@plt+0x1ff6c>
  423e34:	mov	w8, #0x1                   	// #1
  423e38:	mov	w2, #0x12b                 	// #299
  423e3c:	mov	x0, x23
  423e40:	mov	x1, x22
  423e44:	mov	x3, xzr
  423e48:	mov	x4, x24
  423e4c:	mov	w5, w21
  423e50:	mov	w6, w20
  423e54:	mov	w7, w19
  423e58:	str	x26, [sp, #16]
  423e5c:	strb	w8, [sp, #8]
  423e60:	str	x25, [sp]
  423e64:	bl	41e44c <feof@plt+0x1abac>
  423e68:	ldr	w8, [x22, #808]
  423e6c:	cbnz	w8, 423814 <feof@plt+0x1ff74>
  423e70:	cmp	x24, #0x0
  423e74:	cset	w8, ne  // ne = any
  423e78:	lsl	x4, x8, #1
  423e7c:	mov	w8, #0x1                   	// #1
  423e80:	mov	w2, #0x12f                 	// #303
  423e84:	mov	x0, x23
  423e88:	mov	x1, x22
  423e8c:	mov	x3, xzr
  423e90:	mov	w5, w21
  423e94:	mov	w6, w20
  423e98:	mov	w7, w19
  423e9c:	str	x26, [sp, #16]
  423ea0:	strb	w8, [sp, #8]
  423ea4:	str	x25, [sp]
  423ea8:	bl	41e44c <feof@plt+0x1abac>
  423eac:	ldr	w8, [x22, #812]
  423eb0:	cbnz	w8, 42381c <feof@plt+0x1ff7c>
  423eb4:	mov	w8, #0x1                   	// #1
  423eb8:	mov	w2, #0x130                 	// #304
  423ebc:	mov	x0, x23
  423ec0:	mov	x1, x22
  423ec4:	mov	x3, xzr
  423ec8:	mov	x4, x24
  423ecc:	mov	w5, w21
  423ed0:	mov	w6, w20
  423ed4:	mov	w7, w19
  423ed8:	str	x26, [sp, #16]
  423edc:	strb	w8, [sp, #8]
  423ee0:	str	x25, [sp]
  423ee4:	bl	41e44c <feof@plt+0x1abac>
  423ee8:	ldr	w8, [x22, #816]
  423eec:	cbnz	w8, 423824 <feof@plt+0x1ff84>
  423ef0:	mov	w8, #0x1                   	// #1
  423ef4:	mov	w2, #0x131                 	// #305
  423ef8:	mov	x0, x23
  423efc:	mov	x1, x22
  423f00:	mov	x3, xzr
  423f04:	mov	x4, x24
  423f08:	mov	w5, w21
  423f0c:	mov	w6, w20
  423f10:	mov	w7, w19
  423f14:	str	x26, [sp, #16]
  423f18:	strb	w8, [sp, #8]
  423f1c:	str	x25, [sp]
  423f20:	bl	41e44c <feof@plt+0x1abac>
  423f24:	ldr	w8, [x22, #820]
  423f28:	cbnz	w8, 42382c <feof@plt+0x1ff8c>
  423f2c:	mov	w8, #0x1                   	// #1
  423f30:	mov	w2, #0x132                 	// #306
  423f34:	mov	x0, x23
  423f38:	mov	x1, x22
  423f3c:	mov	x3, xzr
  423f40:	mov	x4, x24
  423f44:	mov	w5, w21
  423f48:	mov	w6, w20
  423f4c:	mov	w7, w19
  423f50:	str	x26, [sp, #16]
  423f54:	strb	w8, [sp, #8]
  423f58:	str	x25, [sp]
  423f5c:	bl	41e44c <feof@plt+0x1abac>
  423f60:	ldr	w8, [x22, #828]
  423f64:	cbnz	w8, 423834 <feof@plt+0x1ff94>
  423f68:	mov	w8, #0x1                   	// #1
  423f6c:	mov	w2, #0x134                 	// #308
  423f70:	mov	x0, x23
  423f74:	mov	x1, x22
  423f78:	mov	x3, xzr
  423f7c:	mov	x4, x24
  423f80:	mov	w5, w21
  423f84:	mov	w6, w20
  423f88:	mov	w7, w19
  423f8c:	str	x26, [sp, #16]
  423f90:	strb	w8, [sp, #8]
  423f94:	str	x25, [sp]
  423f98:	bl	41e44c <feof@plt+0x1abac>
  423f9c:	ldr	w8, [x22, #832]
  423fa0:	cbnz	w8, 42383c <feof@plt+0x1ff9c>
  423fa4:	mov	w8, #0x1                   	// #1
  423fa8:	mov	w2, #0x135                 	// #309
  423fac:	mov	x0, x23
  423fb0:	mov	x1, x22
  423fb4:	mov	x3, xzr
  423fb8:	mov	x4, x24
  423fbc:	mov	w5, w21
  423fc0:	mov	w6, w20
  423fc4:	mov	w7, w19
  423fc8:	str	x26, [sp, #16]
  423fcc:	strb	w8, [sp, #8]
  423fd0:	str	x25, [sp]
  423fd4:	bl	41e44c <feof@plt+0x1abac>
  423fd8:	ldr	w8, [x22, #868]
  423fdc:	cbnz	w8, 423844 <feof@plt+0x1ffa4>
  423fe0:	mov	w8, #0x1                   	// #1
  423fe4:	mov	w2, #0x141                 	// #321
  423fe8:	mov	x0, x23
  423fec:	mov	x1, x22
  423ff0:	mov	x3, xzr
  423ff4:	mov	x4, x24
  423ff8:	mov	w5, w21
  423ffc:	mov	w6, w20
  424000:	mov	w7, w19
  424004:	str	x26, [sp, #16]
  424008:	strb	w8, [sp, #8]
  42400c:	str	x25, [sp]
  424010:	bl	41e44c <feof@plt+0x1abac>
  424014:	ldr	w8, [x22, #900]
  424018:	cbnz	w8, 42384c <feof@plt+0x1ffac>
  42401c:	mov	w8, #0x1                   	// #1
  424020:	mov	w2, #0x14c                 	// #332
  424024:	mov	x0, x23
  424028:	mov	x1, x22
  42402c:	mov	x3, xzr
  424030:	mov	x4, x24
  424034:	mov	w5, w21
  424038:	mov	w6, w20
  42403c:	mov	w7, w19
  424040:	str	x26, [sp, #16]
  424044:	strb	w8, [sp, #8]
  424048:	str	x25, [sp]
  42404c:	bl	41e44c <feof@plt+0x1abac>
  424050:	ldr	w8, [x22, #904]
  424054:	cbnz	w8, 423854 <feof@plt+0x1ffb4>
  424058:	mov	w8, #0x1                   	// #1
  42405c:	mov	w2, #0x14d                 	// #333
  424060:	mov	x0, x23
  424064:	mov	x1, x22
  424068:	mov	x3, xzr
  42406c:	mov	x4, x24
  424070:	mov	w5, w21
  424074:	mov	w6, w20
  424078:	mov	w7, w19
  42407c:	str	x26, [sp, #16]
  424080:	strb	w8, [sp, #8]
  424084:	str	x25, [sp]
  424088:	bl	41e44c <feof@plt+0x1abac>
  42408c:	ldr	w8, [x22, #964]
  424090:	cbnz	w8, 42385c <feof@plt+0x1ffbc>
  424094:	mov	w8, #0x1                   	// #1
  424098:	mov	w2, #0x15e                 	// #350
  42409c:	mov	x0, x23
  4240a0:	mov	x1, x22
  4240a4:	mov	x3, xzr
  4240a8:	mov	x4, x24
  4240ac:	mov	w5, w21
  4240b0:	mov	w6, w20
  4240b4:	mov	w7, w19
  4240b8:	str	x26, [sp, #16]
  4240bc:	strb	w8, [sp, #8]
  4240c0:	str	x25, [sp]
  4240c4:	bl	41e44c <feof@plt+0x1abac>
  4240c8:	ldr	w8, [x22, #972]
  4240cc:	cbnz	w8, 423864 <feof@plt+0x1ffc4>
  4240d0:	mov	w8, #0x1                   	// #1
  4240d4:	mov	w2, #0x160                 	// #352
  4240d8:	mov	x0, x23
  4240dc:	mov	x1, x22
  4240e0:	mov	x3, xzr
  4240e4:	mov	x4, x24
  4240e8:	mov	w5, w21
  4240ec:	mov	w6, w20
  4240f0:	mov	w7, w19
  4240f4:	str	x26, [sp, #16]
  4240f8:	strb	w8, [sp, #8]
  4240fc:	str	x25, [sp]
  424100:	bl	41e44c <feof@plt+0x1abac>
  424104:	ldr	w8, [x22, #1000]
  424108:	cbnz	w8, 42386c <feof@plt+0x1ffcc>
  42410c:	mov	w8, #0x1                   	// #1
  424110:	mov	w2, #0x168                 	// #360
  424114:	mov	x0, x23
  424118:	mov	x1, x22
  42411c:	mov	x3, xzr
  424120:	mov	x4, x24
  424124:	mov	w5, w21
  424128:	mov	w6, w20
  42412c:	mov	w7, w19
  424130:	str	x26, [sp, #16]
  424134:	strb	w8, [sp, #8]
  424138:	str	x25, [sp]
  42413c:	bl	41e44c <feof@plt+0x1abac>
  424140:	ldr	w8, [x22, #1056]
  424144:	cbnz	w8, 423874 <feof@plt+0x1ffd4>
  424148:	mov	w8, #0x1                   	// #1
  42414c:	mov	w2, #0x176                 	// #374
  424150:	mov	x0, x23
  424154:	mov	x1, x22
  424158:	mov	x3, xzr
  42415c:	mov	x4, x24
  424160:	mov	w5, w21
  424164:	mov	w6, w20
  424168:	mov	w7, w19
  42416c:	str	x26, [sp, #16]
  424170:	strb	w8, [sp, #8]
  424174:	str	x25, [sp]
  424178:	bl	41e44c <feof@plt+0x1abac>
  42417c:	ldr	w8, [x22, #1064]
  424180:	cbnz	w8, 42387c <feof@plt+0x1ffdc>
  424184:	mov	w8, #0x1                   	// #1
  424188:	mov	w2, #0x178                 	// #376
  42418c:	mov	x0, x23
  424190:	mov	x1, x22
  424194:	mov	x3, xzr
  424198:	mov	x4, x24
  42419c:	mov	w5, w21
  4241a0:	mov	w6, w20
  4241a4:	mov	w7, w19
  4241a8:	str	x26, [sp, #16]
  4241ac:	strb	w8, [sp, #8]
  4241b0:	str	x25, [sp]
  4241b4:	bl	41e44c <feof@plt+0x1abac>
  4241b8:	ldr	w8, [x22, #1072]
  4241bc:	cbnz	w8, 423884 <feof@plt+0x1ffe4>
  4241c0:	mov	w8, #0x1                   	// #1
  4241c4:	mov	w2, #0x17b                 	// #379
  4241c8:	mov	x0, x23
  4241cc:	mov	x1, x22
  4241d0:	mov	x3, xzr
  4241d4:	mov	x4, x24
  4241d8:	mov	w5, w21
  4241dc:	mov	w6, w20
  4241e0:	mov	w7, w19
  4241e4:	str	x26, [sp, #16]
  4241e8:	strb	w8, [sp, #8]
  4241ec:	str	x25, [sp]
  4241f0:	bl	41e44c <feof@plt+0x1abac>
  4241f4:	ldr	w8, [x22, #1128]
  4241f8:	cbnz	w8, 42388c <feof@plt+0x1ffec>
  4241fc:	mov	w8, #0x1                   	// #1
  424200:	mov	w2, #0x18d                 	// #397
  424204:	mov	x0, x23
  424208:	mov	x1, x22
  42420c:	mov	x3, xzr
  424210:	mov	x4, x24
  424214:	mov	w5, w21
  424218:	mov	w6, w20
  42421c:	mov	w7, w19
  424220:	str	x26, [sp, #16]
  424224:	strb	w8, [sp, #8]
  424228:	str	x25, [sp]
  42422c:	bl	41e44c <feof@plt+0x1abac>
  424230:	ldr	w8, [x22, #1132]
  424234:	cbnz	w8, 423894 <feof@plt+0x1fff4>
  424238:	mov	w8, #0x1                   	// #1
  42423c:	mov	w2, #0x18e                 	// #398
  424240:	mov	x0, x23
  424244:	mov	x1, x22
  424248:	mov	x3, xzr
  42424c:	mov	x4, x24
  424250:	mov	w5, w21
  424254:	mov	w6, w20
  424258:	mov	w7, w19
  42425c:	str	x26, [sp, #16]
  424260:	strb	w8, [sp, #8]
  424264:	str	x25, [sp]
  424268:	bl	41e44c <feof@plt+0x1abac>
  42426c:	ldr	w8, [x22, #1152]
  424270:	cbnz	w8, 42389c <feof@plt+0x1fffc>
  424274:	cmp	x24, #0x0
  424278:	mov	w8, #0x3                   	// #3
  42427c:	csel	x4, xzr, x8, eq  // eq = none
  424280:	mov	w8, #0x1                   	// #1
  424284:	mov	w2, #0x193                 	// #403
  424288:	mov	x0, x23
  42428c:	mov	x1, x22
  424290:	mov	x3, xzr
  424294:	mov	w5, w21
  424298:	mov	w6, w20
  42429c:	mov	w7, w19
  4242a0:	str	x26, [sp, #16]
  4242a4:	strb	w8, [sp, #8]
  4242a8:	str	x25, [sp]
  4242ac:	bl	41e44c <feof@plt+0x1abac>
  4242b0:	ldr	w8, [x22, #1160]
  4242b4:	cbnz	w8, 4238a4 <feof@plt+0x20004>
  4242b8:	cmp	x24, #0x0
  4242bc:	cset	w4, ne  // ne = any
  4242c0:	mov	w8, #0x1                   	// #1
  4242c4:	mov	w2, #0x196                 	// #406
  4242c8:	mov	x0, x23
  4242cc:	mov	x1, x22
  4242d0:	mov	x3, xzr
  4242d4:	mov	w5, w21
  4242d8:	mov	w6, w20
  4242dc:	mov	w7, w19
  4242e0:	str	x26, [sp, #16]
  4242e4:	strb	w8, [sp, #8]
  4242e8:	str	x25, [sp]
  4242ec:	bl	41e44c <feof@plt+0x1abac>
  4242f0:	ldr	w8, [x22, #1172]
  4242f4:	cbnz	w8, 4238ac <feof@plt+0x2000c>
  4242f8:	cmp	x24, #0x0
  4242fc:	cset	w8, ne  // ne = any
  424300:	lsl	x4, x8, #1
  424304:	mov	w8, #0x1                   	// #1
  424308:	mov	w2, #0x19a                 	// #410
  42430c:	mov	x0, x23
  424310:	mov	x1, x22
  424314:	mov	x3, xzr
  424318:	mov	w5, w21
  42431c:	mov	w6, w20
  424320:	mov	w7, w19
  424324:	str	x26, [sp, #16]
  424328:	strb	w8, [sp, #8]
  42432c:	str	x25, [sp]
  424330:	bl	41e44c <feof@plt+0x1abac>
  424334:	ldr	w8, [x22, #1176]
  424338:	cbnz	w8, 4238b4 <feof@plt+0x20014>
  42433c:	mov	w8, #0x1                   	// #1
  424340:	mov	w2, #0x19b                 	// #411
  424344:	mov	x0, x23
  424348:	mov	x1, x22
  42434c:	mov	x3, xzr
  424350:	mov	x4, x24
  424354:	mov	w5, w21
  424358:	mov	w6, w20
  42435c:	mov	w7, w19
  424360:	str	x26, [sp, #16]
  424364:	strb	w8, [sp, #8]
  424368:	str	x25, [sp]
  42436c:	bl	41e44c <feof@plt+0x1abac>
  424370:	ldr	w8, [x22, #1224]
  424374:	cbnz	w8, 4238bc <feof@plt+0x2001c>
  424378:	mov	w8, #0x1                   	// #1
  42437c:	mov	w2, #0x1a7                 	// #423
  424380:	mov	x0, x23
  424384:	mov	x1, x22
  424388:	mov	x3, xzr
  42438c:	mov	x4, x24
  424390:	mov	w5, w21
  424394:	mov	w6, w20
  424398:	mov	w7, w19
  42439c:	str	x26, [sp, #16]
  4243a0:	strb	w8, [sp, #8]
  4243a4:	str	x25, [sp]
  4243a8:	bl	41e44c <feof@plt+0x1abac>
  4243ac:	ldr	w8, [x22, #1264]
  4243b0:	cbnz	w8, 4238c4 <feof@plt+0x20024>
  4243b4:	mov	w8, #0x1                   	// #1
  4243b8:	mov	w2, #0x1b1                 	// #433
  4243bc:	mov	x0, x23
  4243c0:	mov	x1, x22
  4243c4:	mov	x3, xzr
  4243c8:	mov	x4, x24
  4243cc:	mov	w5, w21
  4243d0:	mov	w6, w20
  4243d4:	mov	w7, w19
  4243d8:	str	x26, [sp, #16]
  4243dc:	strb	w8, [sp, #8]
  4243e0:	str	x25, [sp]
  4243e4:	bl	41e44c <feof@plt+0x1abac>
  4243e8:	ldr	w8, [x22, #1288]
  4243ec:	cbnz	w8, 4238cc <feof@plt+0x2002c>
  4243f0:	mov	w8, #0x1                   	// #1
  4243f4:	mov	w2, #0x1b7                 	// #439
  4243f8:	mov	x0, x23
  4243fc:	mov	x1, x22
  424400:	mov	x3, xzr
  424404:	mov	x4, x24
  424408:	mov	w5, w21
  42440c:	mov	w6, w20
  424410:	mov	w7, w19
  424414:	str	x26, [sp, #16]
  424418:	strb	w8, [sp, #8]
  42441c:	str	x25, [sp]
  424420:	bl	41e44c <feof@plt+0x1abac>
  424424:	ldr	w8, [x22, #1312]
  424428:	cbnz	w8, 4238d4 <feof@plt+0x20034>
  42442c:	mov	w8, #0x1                   	// #1
  424430:	mov	w2, #0x1bd                 	// #445
  424434:	mov	x0, x23
  424438:	mov	x1, x22
  42443c:	mov	x3, xzr
  424440:	mov	x4, x24
  424444:	mov	w5, w21
  424448:	mov	w6, w20
  42444c:	mov	w7, w19
  424450:	str	x26, [sp, #16]
  424454:	strb	w8, [sp, #8]
  424458:	str	x25, [sp]
  42445c:	bl	41e44c <feof@plt+0x1abac>
  424460:	ldr	w8, [x22, #1316]
  424464:	cbnz	w8, 4238dc <feof@plt+0x2003c>
  424468:	cmp	x24, #0x0
  42446c:	cset	w4, ne  // ne = any
  424470:	mov	w8, #0x1                   	// #1
  424474:	mov	w2, #0x1be                 	// #446
  424478:	mov	x0, x23
  42447c:	mov	x1, x22
  424480:	mov	x3, xzr
  424484:	mov	w5, w21
  424488:	mov	w6, w20
  42448c:	mov	w7, w19
  424490:	str	x26, [sp, #16]
  424494:	strb	w8, [sp, #8]
  424498:	str	x25, [sp]
  42449c:	bl	41e44c <feof@plt+0x1abac>
  4244a0:	ldr	w8, [x22, #1324]
  4244a4:	cbnz	w8, 4238e4 <feof@plt+0x20044>
  4244a8:	mov	w8, #0x1                   	// #1
  4244ac:	mov	w2, #0x1c2                 	// #450
  4244b0:	mov	x0, x23
  4244b4:	mov	x1, x22
  4244b8:	mov	x3, xzr
  4244bc:	mov	x4, x24
  4244c0:	mov	w5, w21
  4244c4:	mov	w6, w20
  4244c8:	mov	w7, w19
  4244cc:	str	x26, [sp, #16]
  4244d0:	strb	w8, [sp, #8]
  4244d4:	str	x25, [sp]
  4244d8:	bl	41e44c <feof@plt+0x1abac>
  4244dc:	ldr	w8, [x22, #1416]
  4244e0:	cbnz	w8, 4247f8 <feof@plt+0x20f58>
  4244e4:	mov	w8, #0x1                   	// #1
  4244e8:	str	x26, [sp, #16]
  4244ec:	strb	w8, [sp, #8]
  4244f0:	mov	w2, #0x1d9                 	// #473
  4244f4:	mov	x0, x23
  4244f8:	mov	x1, x22
  4244fc:	mov	x3, xzr
  424500:	mov	x4, x24
  424504:	str	x25, [sp]
  424508:	b	4247e8 <feof@plt+0x20f48>
  42450c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  424510:	ldr	w8, [x8, #1044]
  424514:	cmp	x24, #0x0
  424518:	cset	w9, ne  // ne = any
  42451c:	mov	w2, #0xfa                  	// #250
  424520:	cmp	w8, #0x0
  424524:	cset	w8, gt
  424528:	and	w4, w9, w8
  42452c:	mov	w8, #0x1                   	// #1
  424530:	mov	x0, x23
  424534:	mov	x1, x22
  424538:	mov	x3, xzr
  42453c:	mov	w5, w21
  424540:	mov	w6, w20
  424544:	mov	w7, w19
  424548:	str	x26, [sp, #16]
  42454c:	strb	w8, [sp, #8]
  424550:	str	x25, [sp]
  424554:	bl	41e44c <feof@plt+0x1abac>
  424558:	ldr	w8, [x22, #612]
  42455c:	cbnz	w8, 423900 <feof@plt+0x20060>
  424560:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  424564:	ldr	w8, [x8, #1044]
  424568:	cmp	x24, #0x0
  42456c:	cset	w9, ne  // ne = any
  424570:	mov	w2, #0xfb                  	// #251
  424574:	cmp	w8, #0x0
  424578:	cset	w8, gt
  42457c:	and	w4, w9, w8
  424580:	mov	w8, #0x1                   	// #1
  424584:	mov	x0, x23
  424588:	mov	x1, x22
  42458c:	mov	x3, xzr
  424590:	mov	w5, w21
  424594:	mov	w6, w20
  424598:	mov	w7, w19
  42459c:	str	x26, [sp, #16]
  4245a0:	strb	w8, [sp, #8]
  4245a4:	str	x25, [sp]
  4245a8:	bl	41e44c <feof@plt+0x1abac>
  4245ac:	ldr	w8, [x22, #616]
  4245b0:	cbnz	w8, 423908 <feof@plt+0x20068>
  4245b4:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4245b8:	ldr	w8, [x8, #1044]
  4245bc:	cmp	x24, #0x0
  4245c0:	cset	w9, ne  // ne = any
  4245c4:	mov	w2, #0xfc                  	// #252
  4245c8:	cmp	w8, #0x1
  4245cc:	cset	w8, gt
  4245d0:	and	w4, w9, w8
  4245d4:	mov	w8, #0x1                   	// #1
  4245d8:	mov	x0, x23
  4245dc:	mov	x1, x22
  4245e0:	mov	x3, xzr
  4245e4:	mov	w5, w21
  4245e8:	mov	w6, w20
  4245ec:	mov	w7, w19
  4245f0:	str	x26, [sp, #16]
  4245f4:	strb	w8, [sp, #8]
  4245f8:	str	x25, [sp]
  4245fc:	bl	41e44c <feof@plt+0x1abac>
  424600:	ldr	w8, [x22, #620]
  424604:	cbnz	w8, 423910 <feof@plt+0x20070>
  424608:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  42460c:	ldr	w8, [x8, #1044]
  424610:	cmp	x24, #0x0
  424614:	cset	w9, ne  // ne = any
  424618:	mov	w2, #0xfe                  	// #254
  42461c:	cmp	w8, #0x0
  424620:	cset	w8, gt
  424624:	and	w4, w9, w8
  424628:	mov	w8, #0x1                   	// #1
  42462c:	mov	x0, x23
  424630:	mov	x1, x22
  424634:	mov	x3, xzr
  424638:	mov	w5, w21
  42463c:	mov	w6, w20
  424640:	mov	w7, w19
  424644:	str	x26, [sp, #16]
  424648:	strb	w8, [sp, #8]
  42464c:	str	x25, [sp]
  424650:	bl	41e44c <feof@plt+0x1abac>
  424654:	ldr	w8, [x22, #624]
  424658:	cbnz	w8, 423918 <feof@plt+0x20078>
  42465c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  424660:	ldr	w8, [x8, #1044]
  424664:	cmp	x24, #0x0
  424668:	cset	w9, ne  // ne = any
  42466c:	mov	w2, #0xff                  	// #255
  424670:	cmp	w8, #0x1
  424674:	cset	w8, gt
  424678:	and	w4, w9, w8
  42467c:	mov	w8, #0x1                   	// #1
  424680:	mov	x0, x23
  424684:	mov	x1, x22
  424688:	mov	x3, xzr
  42468c:	mov	w5, w21
  424690:	mov	w6, w20
  424694:	mov	w7, w19
  424698:	str	x26, [sp, #16]
  42469c:	strb	w8, [sp, #8]
  4246a0:	str	x25, [sp]
  4246a4:	bl	41e44c <feof@plt+0x1abac>
  4246a8:	ldr	w8, [x22, #632]
  4246ac:	cbnz	w8, 423920 <feof@plt+0x20080>
  4246b0:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4246b4:	ldr	w8, [x8, #1044]
  4246b8:	cmp	x24, #0x0
  4246bc:	cset	w9, ne  // ne = any
  4246c0:	mov	w2, #0x102                 	// #258
  4246c4:	cmp	w8, #0x0
  4246c8:	cset	w8, gt
  4246cc:	and	w4, w9, w8
  4246d0:	mov	w8, #0x1                   	// #1
  4246d4:	mov	x0, x23
  4246d8:	mov	x1, x22
  4246dc:	mov	x3, xzr
  4246e0:	mov	w5, w21
  4246e4:	mov	w6, w20
  4246e8:	mov	w7, w19
  4246ec:	str	x26, [sp, #16]
  4246f0:	strb	w8, [sp, #8]
  4246f4:	str	x25, [sp]
  4246f8:	bl	41e44c <feof@plt+0x1abac>
  4246fc:	ldr	w8, [x22, #636]
  424700:	cbnz	w8, 423928 <feof@plt+0x20088>
  424704:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  424708:	ldr	w8, [x8, #1044]
  42470c:	cmp	x24, #0x0
  424710:	cset	w9, ne  // ne = any
  424714:	mov	w2, #0x103                 	// #259
  424718:	cmp	w8, #0x1
  42471c:	cset	w8, gt
  424720:	and	w4, w9, w8
  424724:	mov	w8, #0x1                   	// #1
  424728:	mov	x0, x23
  42472c:	mov	x1, x22
  424730:	mov	x3, xzr
  424734:	mov	w5, w21
  424738:	mov	w6, w20
  42473c:	mov	w7, w19
  424740:	str	x26, [sp, #16]
  424744:	strb	w8, [sp, #8]
  424748:	str	x25, [sp]
  42474c:	bl	41e44c <feof@plt+0x1abac>
  424750:	ldr	w8, [x22, #640]
  424754:	cbnz	w8, 423930 <feof@plt+0x20090>
  424758:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  42475c:	ldr	w8, [x8, #1044]
  424760:	cmp	x24, #0x0
  424764:	cset	w9, ne  // ne = any
  424768:	mov	w2, #0x104                 	// #260
  42476c:	cmp	w8, #0x0
  424770:	cset	w8, gt
  424774:	and	w4, w9, w8
  424778:	mov	w8, #0x1                   	// #1
  42477c:	mov	x0, x23
  424780:	mov	x1, x22
  424784:	mov	x3, xzr
  424788:	mov	w5, w21
  42478c:	mov	w6, w20
  424790:	mov	w7, w19
  424794:	str	x26, [sp, #16]
  424798:	strb	w8, [sp, #8]
  42479c:	str	x25, [sp]
  4247a0:	bl	41e44c <feof@plt+0x1abac>
  4247a4:	ldr	w8, [x22, #900]
  4247a8:	cbnz	w8, 4247f8 <feof@plt+0x20f58>
  4247ac:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4247b0:	ldr	w8, [x8, #1044]
  4247b4:	cmp	x24, #0x0
  4247b8:	cset	w9, ne  // ne = any
  4247bc:	str	x26, [sp, #16]
  4247c0:	cmp	w8, #0x0
  4247c4:	cset	w8, gt
  4247c8:	and	w4, w9, w8
  4247cc:	mov	w8, #0x1                   	// #1
  4247d0:	strb	w8, [sp, #8]
  4247d4:	mov	w2, #0x14c                 	// #332
  4247d8:	str	x25, [sp]
  4247dc:	mov	x0, x23
  4247e0:	mov	x1, x22
  4247e4:	mov	x3, xzr
  4247e8:	mov	w5, w21
  4247ec:	mov	w6, w20
  4247f0:	mov	w7, w19
  4247f4:	bl	41e44c <feof@plt+0x1abac>
  4247f8:	ldp	x20, x19, [sp, #96]
  4247fc:	ldp	x22, x21, [sp, #80]
  424800:	ldp	x24, x23, [sp, #64]
  424804:	ldp	x26, x25, [sp, #48]
  424808:	ldp	x29, x30, [sp, #32]
  42480c:	mov	w0, #0x1                   	// #1
  424810:	add	sp, sp, #0x70
  424814:	ret
  424818:	sub	sp, sp, #0x70
  42481c:	stp	x29, x30, [sp, #32]
  424820:	stp	x26, x25, [sp, #48]
  424824:	stp	x24, x23, [sp, #64]
  424828:	stp	x22, x21, [sp, #80]
  42482c:	stp	x20, x19, [sp, #96]
  424830:	add	x29, sp, #0x20
  424834:	ldp	x25, x26, [x29, #80]
  424838:	mov	w19, w7
  42483c:	mov	w20, w6
  424840:	mov	w21, w5
  424844:	mov	x23, x4
  424848:	mov	x22, x1
  42484c:	cmp	w2, #0xf3
  424850:	mov	x24, x0
  424854:	b.gt	4248d4 <feof@plt+0x21034>
  424858:	sub	w8, w2, #0x97
  42485c:	cmp	w8, #0x24
  424860:	b.hi	424944 <feof@plt+0x210a4>  // b.pmore
  424864:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  424868:	add	x9, x9, #0xb32
  42486c:	adr	x10, 42487c <feof@plt+0x20fdc>
  424870:	ldrh	w11, [x9, x8, lsl #1]
  424874:	add	x10, x10, x11, lsl #2
  424878:	br	x10
  42487c:	ldr	w8, [x22, #888]
  424880:	cbnz	w8, 4248b8 <feof@plt+0x21018>
  424884:	mov	w8, #0x1                   	// #1
  424888:	mov	w2, #0x149                 	// #329
  42488c:	mov	x0, x24
  424890:	mov	x1, x22
  424894:	mov	x3, xzr
  424898:	mov	x4, x23
  42489c:	mov	w5, w21
  4248a0:	mov	w6, w20
  4248a4:	mov	w7, w19
  4248a8:	str	x26, [sp, #16]
  4248ac:	strb	w8, [sp, #8]
  4248b0:	str	x25, [sp]
  4248b4:	bl	41e44c <feof@plt+0x1abac>
  4248b8:	ldr	w8, [x22, #1024]
  4248bc:	cbnz	w8, 4257d8 <feof@plt+0x21f38>
  4248c0:	mov	w8, #0x1                   	// #1
  4248c4:	str	x26, [sp, #16]
  4248c8:	strb	w8, [sp, #8]
  4248cc:	mov	w2, #0x16e                 	// #366
  4248d0:	b	4257b4 <feof@plt+0x21f14>
  4248d4:	cmp	w2, #0x160
  4248d8:	b.gt	424910 <feof@plt+0x21070>
  4248dc:	cmp	w2, #0xf4
  4248e0:	b.eq	424b60 <feof@plt+0x212c0>  // b.none
  4248e4:	cmp	w2, #0x105
  4248e8:	b.eq	424b7c <feof@plt+0x212dc>  // b.none
  4248ec:	cmp	w2, #0x160
  4248f0:	b.ne	4257d8 <feof@plt+0x21f38>  // b.any
  4248f4:	ldr	w8, [x22, #492]
  4248f8:	cbnz	w8, 4257d8 <feof@plt+0x21f38>
  4248fc:	mov	w8, #0x1                   	// #1
  424900:	str	x26, [sp, #16]
  424904:	strb	w8, [sp, #8]
  424908:	mov	w2, #0xd9                  	// #217
  42490c:	b	4257b4 <feof@plt+0x21f14>
  424910:	cmp	w2, #0x161
  424914:	b.eq	424bc8 <feof@plt+0x21328>  // b.none
  424918:	cmp	w2, #0x1b4
  42491c:	b.eq	424be8 <feof@plt+0x21348>  // b.none
  424920:	cmp	w2, #0x1c2
  424924:	b.ne	4257d8 <feof@plt+0x21f38>  // b.any
  424928:	ldr	w8, [x22, #1372]
  42492c:	cbnz	w8, 4257d8 <feof@plt+0x21f38>
  424930:	mov	w8, #0x1                   	// #1
  424934:	str	x26, [sp, #16]
  424938:	strb	w8, [sp, #8]
  42493c:	mov	w2, #0x1cf                 	// #463
  424940:	b	4257b4 <feof@plt+0x21f14>
  424944:	cmp	w2, #0xd3
  424948:	b.eq	424c04 <feof@plt+0x21364>  // b.none
  42494c:	cmp	w2, #0xec
  424950:	b.ne	4257d8 <feof@plt+0x21f38>  // b.any
  424954:	ldr	w8, [x22, #508]
  424958:	cbnz	w8, 424990 <feof@plt+0x210f0>
  42495c:	mov	w8, #0x1                   	// #1
  424960:	mov	w2, #0xdd                  	// #221
  424964:	mov	x0, x24
  424968:	mov	x1, x22
  42496c:	mov	x3, xzr
  424970:	mov	x4, x23
  424974:	mov	w5, w21
  424978:	mov	w6, w20
  42497c:	mov	w7, w19
  424980:	str	x26, [sp, #16]
  424984:	strb	w8, [sp, #8]
  424988:	str	x25, [sp]
  42498c:	bl	41e44c <feof@plt+0x1abac>
  424990:	ldr	w8, [x22, #896]
  424994:	cbnz	w8, 4257d8 <feof@plt+0x21f38>
  424998:	mov	w8, #0x1                   	// #1
  42499c:	str	x26, [sp, #16]
  4249a0:	strb	w8, [sp, #8]
  4249a4:	mov	w2, #0x14b                 	// #331
  4249a8:	b	4257b4 <feof@plt+0x21f14>
  4249ac:	ldr	w8, [x22, #272]
  4249b0:	cbz	w8, 424c20 <feof@plt+0x21380>
  4249b4:	ldr	w8, [x22, #296]
  4249b8:	cbz	w8, 424c5c <feof@plt+0x213bc>
  4249bc:	ldr	w8, [x22, #336]
  4249c0:	cbz	w8, 424c9c <feof@plt+0x213fc>
  4249c4:	ldr	w8, [x22, #364]
  4249c8:	cbz	w8, 424cdc <feof@plt+0x2143c>
  4249cc:	ldr	w8, [x22, #368]
  4249d0:	cbz	w8, 424d18 <feof@plt+0x21478>
  4249d4:	ldr	w8, [x22, #384]
  4249d8:	cbz	w8, 424d54 <feof@plt+0x214b4>
  4249dc:	ldr	w8, [x22, #388]
  4249e0:	cbz	w8, 424d90 <feof@plt+0x214f0>
  4249e4:	ldr	w8, [x22, #392]
  4249e8:	cbz	w8, 424dcc <feof@plt+0x2152c>
  4249ec:	ldr	w8, [x22, #432]
  4249f0:	cbz	w8, 424e08 <feof@plt+0x21568>
  4249f4:	ldr	w8, [x22, #436]
  4249f8:	cbz	w8, 424e48 <feof@plt+0x215a8>
  4249fc:	ldr	w8, [x22, #448]
  424a00:	cbz	w8, 424e84 <feof@plt+0x215e4>
  424a04:	ldr	w8, [x22, #456]
  424a08:	cbz	w8, 424ec0 <feof@plt+0x21620>
  424a0c:	ldr	w8, [x22, #508]
  424a10:	cbz	w8, 424efc <feof@plt+0x2165c>
  424a14:	ldr	w8, [x22, #644]
  424a18:	cbz	w8, 424f38 <feof@plt+0x21698>
  424a1c:	ldr	w8, [x22, #648]
  424a20:	cbz	w8, 424f78 <feof@plt+0x216d8>
  424a24:	ldr	w8, [x22, #728]
  424a28:	cbz	w8, 424fb4 <feof@plt+0x21714>
  424a2c:	ldr	w8, [x22, #740]
  424a30:	cbz	w8, 424ff0 <feof@plt+0x21750>
  424a34:	ldr	w8, [x22, #792]
  424a38:	cbz	w8, 42502c <feof@plt+0x2178c>
  424a3c:	ldr	w8, [x22, #812]
  424a40:	cbz	w8, 425068 <feof@plt+0x217c8>
  424a44:	ldr	w8, [x22, #816]
  424a48:	cbz	w8, 4250a4 <feof@plt+0x21804>
  424a4c:	ldr	w8, [x22, #820]
  424a50:	cbz	w8, 4250e0 <feof@plt+0x21840>
  424a54:	ldr	w8, [x22, #828]
  424a58:	cbz	w8, 42511c <feof@plt+0x2187c>
  424a5c:	ldr	w8, [x22, #868]
  424a60:	cbz	w8, 425158 <feof@plt+0x218b8>
  424a64:	ldr	w8, [x22, #876]
  424a68:	cbz	w8, 425194 <feof@plt+0x218f4>
  424a6c:	ldr	w8, [x22, #900]
  424a70:	cbz	w8, 4251d0 <feof@plt+0x21930>
  424a74:	ldr	w8, [x22, #904]
  424a78:	cbz	w8, 42520c <feof@plt+0x2196c>
  424a7c:	ldr	w8, [x22, #964]
  424a80:	cbz	w8, 425248 <feof@plt+0x219a8>
  424a84:	ldr	w8, [x22, #972]
  424a88:	cbz	w8, 425284 <feof@plt+0x219e4>
  424a8c:	ldr	w8, [x22, #980]
  424a90:	cbz	w8, 4252c0 <feof@plt+0x21a20>
  424a94:	ldr	w8, [x22, #1052]
  424a98:	cbz	w8, 4252fc <feof@plt+0x21a5c>
  424a9c:	ldr	w8, [x22, #1056]
  424aa0:	cbz	w8, 425338 <feof@plt+0x21a98>
  424aa4:	ldr	w8, [x22, #1064]
  424aa8:	cbz	w8, 425374 <feof@plt+0x21ad4>
  424aac:	ldr	w8, [x22, #1072]
  424ab0:	cbz	w8, 4253b0 <feof@plt+0x21b10>
  424ab4:	ldr	w8, [x22, #1108]
  424ab8:	cbz	w8, 4253ec <feof@plt+0x21b4c>
  424abc:	ldr	w8, [x22, #1128]
  424ac0:	cbz	w8, 425428 <feof@plt+0x21b88>
  424ac4:	ldr	w8, [x22, #1132]
  424ac8:	cbz	w8, 425464 <feof@plt+0x21bc4>
  424acc:	ldr	w8, [x22, #1152]
  424ad0:	cbz	w8, 4254a0 <feof@plt+0x21c00>
  424ad4:	ldr	w8, [x22, #1160]
  424ad8:	cbz	w8, 4254e4 <feof@plt+0x21c44>
  424adc:	ldr	w8, [x22, #1172]
  424ae0:	cbz	w8, 425524 <feof@plt+0x21c84>
  424ae4:	ldr	w8, [x22, #1176]
  424ae8:	cbz	w8, 425568 <feof@plt+0x21cc8>
  424aec:	ldr	w8, [x22, #1224]
  424af0:	cbz	w8, 4255a4 <feof@plt+0x21d04>
  424af4:	ldr	w8, [x22, #1264]
  424af8:	cbz	w8, 4255e0 <feof@plt+0x21d40>
  424afc:	ldr	w8, [x22, #1288]
  424b00:	cbz	w8, 42561c <feof@plt+0x21d7c>
  424b04:	ldr	w8, [x22, #1312]
  424b08:	cbz	w8, 425658 <feof@plt+0x21db8>
  424b0c:	ldr	w8, [x22, #1316]
  424b10:	cbz	w8, 425694 <feof@plt+0x21df4>
  424b14:	ldr	w8, [x22, #1324]
  424b18:	cbz	w8, 4256d4 <feof@plt+0x21e34>
  424b1c:	ldr	w8, [x22, #1416]
  424b20:	cbnz	w8, 4257d8 <feof@plt+0x21f38>
  424b24:	b	425710 <feof@plt+0x21e70>
  424b28:	ldr	w8, [x22, #876]
  424b2c:	cbnz	w8, 4257d8 <feof@plt+0x21f38>
  424b30:	mov	w8, #0x1                   	// #1
  424b34:	str	x26, [sp, #16]
  424b38:	strb	w8, [sp, #8]
  424b3c:	mov	w2, #0x143                 	// #323
  424b40:	b	4257b4 <feof@plt+0x21f14>
  424b44:	ldr	w8, [x22, #888]
  424b48:	cbnz	w8, 4257d8 <feof@plt+0x21f38>
  424b4c:	mov	w8, #0x1                   	// #1
  424b50:	mov	w2, #0x149                 	// #329
  424b54:	str	x26, [sp, #16]
  424b58:	strb	w8, [sp, #8]
  424b5c:	b	4257b4 <feof@plt+0x21f14>
  424b60:	ldr	w8, [x22, #516]
  424b64:	cbz	w8, 425724 <feof@plt+0x21e84>
  424b68:	ldr	w8, [x22, #696]
  424b6c:	cbz	w8, 425760 <feof@plt+0x21ec0>
  424b70:	ldr	w8, [x22, #1044]
  424b74:	cbnz	w8, 4257d8 <feof@plt+0x21f38>
  424b78:	b	4257a4 <feof@plt+0x21f04>
  424b7c:	ldr	w8, [x22, #608]
  424b80:	cbz	w8, 4257f8 <feof@plt+0x21f58>
  424b84:	ldr	w8, [x22, #612]
  424b88:	cbz	w8, 42584c <feof@plt+0x21fac>
  424b8c:	ldr	w8, [x22, #616]
  424b90:	cbz	w8, 4258a0 <feof@plt+0x22000>
  424b94:	ldr	w8, [x22, #620]
  424b98:	cbz	w8, 4258f4 <feof@plt+0x22054>
  424b9c:	ldr	w8, [x22, #624]
  424ba0:	cbz	w8, 425948 <feof@plt+0x220a8>
  424ba4:	ldr	w8, [x22, #632]
  424ba8:	cbz	w8, 42599c <feof@plt+0x220fc>
  424bac:	ldr	w8, [x22, #636]
  424bb0:	cbz	w8, 4259f0 <feof@plt+0x22150>
  424bb4:	ldr	w8, [x22, #640]
  424bb8:	cbz	w8, 425a44 <feof@plt+0x221a4>
  424bbc:	ldr	w8, [x22, #900]
  424bc0:	cbnz	w8, 4257d8 <feof@plt+0x21f38>
  424bc4:	b	425a98 <feof@plt+0x221f8>
  424bc8:	ldr	w8, [x22, #572]
  424bcc:	cbz	w8, 425ad8 <feof@plt+0x22238>
  424bd0:	ldr	w8, [x22, #808]
  424bd4:	cbz	w8, 425b14 <feof@plt+0x22274>
  424bd8:	ldr	w8, [x22, #940]
  424bdc:	cbz	w8, 425b58 <feof@plt+0x222b8>
  424be0:	ldr	w8, [x22, #992]
  424be4:	cbz	w8, 425b94 <feof@plt+0x222f4>
  424be8:	ldr	w8, [x22, #1388]
  424bec:	cbnz	w8, 4257d8 <feof@plt+0x21f38>
  424bf0:	mov	w8, #0x1                   	// #1
  424bf4:	str	x26, [sp, #16]
  424bf8:	strb	w8, [sp, #8]
  424bfc:	mov	w2, #0x1d3                 	// #467
  424c00:	b	4257b4 <feof@plt+0x21f14>
  424c04:	ldr	w8, [x22, #600]
  424c08:	cbnz	w8, 4257d8 <feof@plt+0x21f38>
  424c0c:	mov	w8, #0x1                   	// #1
  424c10:	str	x26, [sp, #16]
  424c14:	strb	w8, [sp, #8]
  424c18:	mov	w2, #0xf7                  	// #247
  424c1c:	b	4257b4 <feof@plt+0x21f14>
  424c20:	mov	w8, #0x1                   	// #1
  424c24:	mov	w2, #0x9b                  	// #155
  424c28:	mov	x0, x24
  424c2c:	mov	x1, x22
  424c30:	mov	x3, xzr
  424c34:	mov	x4, x23
  424c38:	mov	w5, w21
  424c3c:	mov	w6, w20
  424c40:	mov	w7, w19
  424c44:	str	x26, [sp, #16]
  424c48:	strb	w8, [sp, #8]
  424c4c:	str	x25, [sp]
  424c50:	bl	41e44c <feof@plt+0x1abac>
  424c54:	ldr	w8, [x22, #296]
  424c58:	cbnz	w8, 4249bc <feof@plt+0x2111c>
  424c5c:	cmp	x23, #0x0
  424c60:	cset	w4, ne  // ne = any
  424c64:	mov	w8, #0x1                   	// #1
  424c68:	mov	w2, #0xa2                  	// #162
  424c6c:	mov	x0, x24
  424c70:	mov	x1, x22
  424c74:	mov	x3, xzr
  424c78:	mov	w5, w21
  424c7c:	mov	w6, w20
  424c80:	mov	w7, w19
  424c84:	str	x26, [sp, #16]
  424c88:	strb	w8, [sp, #8]
  424c8c:	str	x25, [sp]
  424c90:	bl	41e44c <feof@plt+0x1abac>
  424c94:	ldr	w8, [x22, #336]
  424c98:	cbnz	w8, 4249c4 <feof@plt+0x21124>
  424c9c:	cmp	x23, #0x0
  424ca0:	cset	w4, ne  // ne = any
  424ca4:	mov	w8, #0x1                   	// #1
  424ca8:	mov	w2, #0xab                  	// #171
  424cac:	mov	x0, x24
  424cb0:	mov	x1, x22
  424cb4:	mov	x3, xzr
  424cb8:	mov	w5, w21
  424cbc:	mov	w6, w20
  424cc0:	mov	w7, w19
  424cc4:	str	x26, [sp, #16]
  424cc8:	strb	w8, [sp, #8]
  424ccc:	str	x25, [sp]
  424cd0:	bl	41e44c <feof@plt+0x1abac>
  424cd4:	ldr	w8, [x22, #364]
  424cd8:	cbnz	w8, 4249cc <feof@plt+0x2112c>
  424cdc:	mov	w8, #0x1                   	// #1
  424ce0:	mov	w2, #0xb3                  	// #179
  424ce4:	mov	x0, x24
  424ce8:	mov	x1, x22
  424cec:	mov	x3, xzr
  424cf0:	mov	x4, x23
  424cf4:	mov	w5, w21
  424cf8:	mov	w6, w20
  424cfc:	mov	w7, w19
  424d00:	str	x26, [sp, #16]
  424d04:	strb	w8, [sp, #8]
  424d08:	str	x25, [sp]
  424d0c:	bl	41e44c <feof@plt+0x1abac>
  424d10:	ldr	w8, [x22, #368]
  424d14:	cbnz	w8, 4249d4 <feof@plt+0x21134>
  424d18:	mov	w8, #0x1                   	// #1
  424d1c:	mov	w2, #0xb4                  	// #180
  424d20:	mov	x0, x24
  424d24:	mov	x1, x22
  424d28:	mov	x3, xzr
  424d2c:	mov	x4, x23
  424d30:	mov	w5, w21
  424d34:	mov	w6, w20
  424d38:	mov	w7, w19
  424d3c:	str	x26, [sp, #16]
  424d40:	strb	w8, [sp, #8]
  424d44:	str	x25, [sp]
  424d48:	bl	41e44c <feof@plt+0x1abac>
  424d4c:	ldr	w8, [x22, #384]
  424d50:	cbnz	w8, 4249dc <feof@plt+0x2113c>
  424d54:	mov	w8, #0x1                   	// #1
  424d58:	mov	w2, #0xb9                  	// #185
  424d5c:	mov	x0, x24
  424d60:	mov	x1, x22
  424d64:	mov	x3, xzr
  424d68:	mov	x4, x23
  424d6c:	mov	w5, w21
  424d70:	mov	w6, w20
  424d74:	mov	w7, w19
  424d78:	str	x26, [sp, #16]
  424d7c:	strb	w8, [sp, #8]
  424d80:	str	x25, [sp]
  424d84:	bl	41e44c <feof@plt+0x1abac>
  424d88:	ldr	w8, [x22, #388]
  424d8c:	cbnz	w8, 4249e4 <feof@plt+0x21144>
  424d90:	mov	w8, #0x1                   	// #1
  424d94:	mov	w2, #0xba                  	// #186
  424d98:	mov	x0, x24
  424d9c:	mov	x1, x22
  424da0:	mov	x3, xzr
  424da4:	mov	x4, x23
  424da8:	mov	w5, w21
  424dac:	mov	w6, w20
  424db0:	mov	w7, w19
  424db4:	str	x26, [sp, #16]
  424db8:	strb	w8, [sp, #8]
  424dbc:	str	x25, [sp]
  424dc0:	bl	41e44c <feof@plt+0x1abac>
  424dc4:	ldr	w8, [x22, #392]
  424dc8:	cbnz	w8, 4249ec <feof@plt+0x2114c>
  424dcc:	mov	w8, #0x1                   	// #1
  424dd0:	mov	w2, #0xbb                  	// #187
  424dd4:	mov	x0, x24
  424dd8:	mov	x1, x22
  424ddc:	mov	x3, xzr
  424de0:	mov	x4, x23
  424de4:	mov	w5, w21
  424de8:	mov	w6, w20
  424dec:	mov	w7, w19
  424df0:	str	x26, [sp, #16]
  424df4:	strb	w8, [sp, #8]
  424df8:	str	x25, [sp]
  424dfc:	bl	41e44c <feof@plt+0x1abac>
  424e00:	ldr	w8, [x22, #432]
  424e04:	cbnz	w8, 4249f4 <feof@plt+0x21154>
  424e08:	cmp	x23, #0x0
  424e0c:	cset	w4, ne  // ne = any
  424e10:	mov	w8, #0x1                   	// #1
  424e14:	mov	w2, #0xc8                  	// #200
  424e18:	mov	x0, x24
  424e1c:	mov	x1, x22
  424e20:	mov	x3, xzr
  424e24:	mov	w5, w21
  424e28:	mov	w6, w20
  424e2c:	mov	w7, w19
  424e30:	str	x26, [sp, #16]
  424e34:	strb	w8, [sp, #8]
  424e38:	str	x25, [sp]
  424e3c:	bl	41e44c <feof@plt+0x1abac>
  424e40:	ldr	w8, [x22, #436]
  424e44:	cbnz	w8, 4249fc <feof@plt+0x2115c>
  424e48:	mov	w8, #0x1                   	// #1
  424e4c:	mov	w2, #0xc9                  	// #201
  424e50:	mov	x0, x24
  424e54:	mov	x1, x22
  424e58:	mov	x3, xzr
  424e5c:	mov	x4, x23
  424e60:	mov	w5, w21
  424e64:	mov	w6, w20
  424e68:	mov	w7, w19
  424e6c:	str	x26, [sp, #16]
  424e70:	strb	w8, [sp, #8]
  424e74:	str	x25, [sp]
  424e78:	bl	41e44c <feof@plt+0x1abac>
  424e7c:	ldr	w8, [x22, #448]
  424e80:	cbnz	w8, 424a04 <feof@plt+0x21164>
  424e84:	mov	w8, #0x1                   	// #1
  424e88:	mov	w2, #0xcd                  	// #205
  424e8c:	mov	x0, x24
  424e90:	mov	x1, x22
  424e94:	mov	x3, xzr
  424e98:	mov	x4, x23
  424e9c:	mov	w5, w21
  424ea0:	mov	w6, w20
  424ea4:	mov	w7, w19
  424ea8:	str	x26, [sp, #16]
  424eac:	strb	w8, [sp, #8]
  424eb0:	str	x25, [sp]
  424eb4:	bl	41e44c <feof@plt+0x1abac>
  424eb8:	ldr	w8, [x22, #456]
  424ebc:	cbnz	w8, 424a0c <feof@plt+0x2116c>
  424ec0:	mov	w8, #0x1                   	// #1
  424ec4:	mov	w2, #0xcf                  	// #207
  424ec8:	mov	x0, x24
  424ecc:	mov	x1, x22
  424ed0:	mov	x3, xzr
  424ed4:	mov	x4, x23
  424ed8:	mov	w5, w21
  424edc:	mov	w6, w20
  424ee0:	mov	w7, w19
  424ee4:	str	x26, [sp, #16]
  424ee8:	strb	w8, [sp, #8]
  424eec:	str	x25, [sp]
  424ef0:	bl	41e44c <feof@plt+0x1abac>
  424ef4:	ldr	w8, [x22, #508]
  424ef8:	cbnz	w8, 424a14 <feof@plt+0x21174>
  424efc:	mov	w8, #0x1                   	// #1
  424f00:	mov	w2, #0xdd                  	// #221
  424f04:	mov	x0, x24
  424f08:	mov	x1, x22
  424f0c:	mov	x3, xzr
  424f10:	mov	x4, x23
  424f14:	mov	w5, w21
  424f18:	mov	w6, w20
  424f1c:	mov	w7, w19
  424f20:	str	x26, [sp, #16]
  424f24:	strb	w8, [sp, #8]
  424f28:	str	x25, [sp]
  424f2c:	bl	41e44c <feof@plt+0x1abac>
  424f30:	ldr	w8, [x22, #644]
  424f34:	cbnz	w8, 424a1c <feof@plt+0x2117c>
  424f38:	cmp	x23, #0x0
  424f3c:	cset	w4, ne  // ne = any
  424f40:	mov	w8, #0x1                   	// #1
  424f44:	mov	w2, #0x105                 	// #261
  424f48:	mov	x0, x24
  424f4c:	mov	x1, x22
  424f50:	mov	x3, xzr
  424f54:	mov	w5, w21
  424f58:	mov	w6, w20
  424f5c:	mov	w7, w19
  424f60:	str	x26, [sp, #16]
  424f64:	strb	w8, [sp, #8]
  424f68:	str	x25, [sp]
  424f6c:	bl	41e44c <feof@plt+0x1abac>
  424f70:	ldr	w8, [x22, #648]
  424f74:	cbnz	w8, 424a24 <feof@plt+0x21184>
  424f78:	mov	w8, #0x1                   	// #1
  424f7c:	mov	w2, #0x106                 	// #262
  424f80:	mov	x0, x24
  424f84:	mov	x1, x22
  424f88:	mov	x3, xzr
  424f8c:	mov	x4, x23
  424f90:	mov	w5, w21
  424f94:	mov	w6, w20
  424f98:	mov	w7, w19
  424f9c:	str	x26, [sp, #16]
  424fa0:	strb	w8, [sp, #8]
  424fa4:	str	x25, [sp]
  424fa8:	bl	41e44c <feof@plt+0x1abac>
  424fac:	ldr	w8, [x22, #728]
  424fb0:	cbnz	w8, 424a2c <feof@plt+0x2118c>
  424fb4:	mov	w8, #0x1                   	// #1
  424fb8:	mov	w2, #0x11a                 	// #282
  424fbc:	mov	x0, x24
  424fc0:	mov	x1, x22
  424fc4:	mov	x3, xzr
  424fc8:	mov	x4, x23
  424fcc:	mov	w5, w21
  424fd0:	mov	w6, w20
  424fd4:	mov	w7, w19
  424fd8:	str	x26, [sp, #16]
  424fdc:	strb	w8, [sp, #8]
  424fe0:	str	x25, [sp]
  424fe4:	bl	41e44c <feof@plt+0x1abac>
  424fe8:	ldr	w8, [x22, #740]
  424fec:	cbnz	w8, 424a34 <feof@plt+0x21194>
  424ff0:	mov	w8, #0x1                   	// #1
  424ff4:	mov	w2, #0x11d                 	// #285
  424ff8:	mov	x0, x24
  424ffc:	mov	x1, x22
  425000:	mov	x3, xzr
  425004:	mov	x4, x23
  425008:	mov	w5, w21
  42500c:	mov	w6, w20
  425010:	mov	w7, w19
  425014:	str	x26, [sp, #16]
  425018:	strb	w8, [sp, #8]
  42501c:	str	x25, [sp]
  425020:	bl	41e44c <feof@plt+0x1abac>
  425024:	ldr	w8, [x22, #792]
  425028:	cbnz	w8, 424a3c <feof@plt+0x2119c>
  42502c:	mov	w8, #0x1                   	// #1
  425030:	mov	w2, #0x12b                 	// #299
  425034:	mov	x0, x24
  425038:	mov	x1, x22
  42503c:	mov	x3, xzr
  425040:	mov	x4, x23
  425044:	mov	w5, w21
  425048:	mov	w6, w20
  42504c:	mov	w7, w19
  425050:	str	x26, [sp, #16]
  425054:	strb	w8, [sp, #8]
  425058:	str	x25, [sp]
  42505c:	bl	41e44c <feof@plt+0x1abac>
  425060:	ldr	w8, [x22, #812]
  425064:	cbnz	w8, 424a44 <feof@plt+0x211a4>
  425068:	mov	w8, #0x1                   	// #1
  42506c:	mov	w2, #0x130                 	// #304
  425070:	mov	x0, x24
  425074:	mov	x1, x22
  425078:	mov	x3, xzr
  42507c:	mov	x4, x23
  425080:	mov	w5, w21
  425084:	mov	w6, w20
  425088:	mov	w7, w19
  42508c:	str	x26, [sp, #16]
  425090:	strb	w8, [sp, #8]
  425094:	str	x25, [sp]
  425098:	bl	41e44c <feof@plt+0x1abac>
  42509c:	ldr	w8, [x22, #816]
  4250a0:	cbnz	w8, 424a4c <feof@plt+0x211ac>
  4250a4:	mov	w8, #0x1                   	// #1
  4250a8:	mov	w2, #0x131                 	// #305
  4250ac:	mov	x0, x24
  4250b0:	mov	x1, x22
  4250b4:	mov	x3, xzr
  4250b8:	mov	x4, x23
  4250bc:	mov	w5, w21
  4250c0:	mov	w6, w20
  4250c4:	mov	w7, w19
  4250c8:	str	x26, [sp, #16]
  4250cc:	strb	w8, [sp, #8]
  4250d0:	str	x25, [sp]
  4250d4:	bl	41e44c <feof@plt+0x1abac>
  4250d8:	ldr	w8, [x22, #820]
  4250dc:	cbnz	w8, 424a54 <feof@plt+0x211b4>
  4250e0:	mov	w8, #0x1                   	// #1
  4250e4:	mov	w2, #0x132                 	// #306
  4250e8:	mov	x0, x24
  4250ec:	mov	x1, x22
  4250f0:	mov	x3, xzr
  4250f4:	mov	x4, x23
  4250f8:	mov	w5, w21
  4250fc:	mov	w6, w20
  425100:	mov	w7, w19
  425104:	str	x26, [sp, #16]
  425108:	strb	w8, [sp, #8]
  42510c:	str	x25, [sp]
  425110:	bl	41e44c <feof@plt+0x1abac>
  425114:	ldr	w8, [x22, #828]
  425118:	cbnz	w8, 424a5c <feof@plt+0x211bc>
  42511c:	mov	w8, #0x1                   	// #1
  425120:	mov	w2, #0x134                 	// #308
  425124:	mov	x0, x24
  425128:	mov	x1, x22
  42512c:	mov	x3, xzr
  425130:	mov	x4, x23
  425134:	mov	w5, w21
  425138:	mov	w6, w20
  42513c:	mov	w7, w19
  425140:	str	x26, [sp, #16]
  425144:	strb	w8, [sp, #8]
  425148:	str	x25, [sp]
  42514c:	bl	41e44c <feof@plt+0x1abac>
  425150:	ldr	w8, [x22, #868]
  425154:	cbnz	w8, 424a64 <feof@plt+0x211c4>
  425158:	mov	w8, #0x1                   	// #1
  42515c:	mov	w2, #0x141                 	// #321
  425160:	mov	x0, x24
  425164:	mov	x1, x22
  425168:	mov	x3, xzr
  42516c:	mov	x4, x23
  425170:	mov	w5, w21
  425174:	mov	w6, w20
  425178:	mov	w7, w19
  42517c:	str	x26, [sp, #16]
  425180:	strb	w8, [sp, #8]
  425184:	str	x25, [sp]
  425188:	bl	41e44c <feof@plt+0x1abac>
  42518c:	ldr	w8, [x22, #876]
  425190:	cbnz	w8, 424a6c <feof@plt+0x211cc>
  425194:	mov	w8, #0x1                   	// #1
  425198:	mov	w2, #0x143                 	// #323
  42519c:	mov	x0, x24
  4251a0:	mov	x1, x22
  4251a4:	mov	x3, xzr
  4251a8:	mov	x4, x23
  4251ac:	mov	w5, w21
  4251b0:	mov	w6, w20
  4251b4:	mov	w7, w19
  4251b8:	str	x26, [sp, #16]
  4251bc:	strb	w8, [sp, #8]
  4251c0:	str	x25, [sp]
  4251c4:	bl	41e44c <feof@plt+0x1abac>
  4251c8:	ldr	w8, [x22, #900]
  4251cc:	cbnz	w8, 424a74 <feof@plt+0x211d4>
  4251d0:	mov	w8, #0x1                   	// #1
  4251d4:	mov	w2, #0x14c                 	// #332
  4251d8:	mov	x0, x24
  4251dc:	mov	x1, x22
  4251e0:	mov	x3, xzr
  4251e4:	mov	x4, x23
  4251e8:	mov	w5, w21
  4251ec:	mov	w6, w20
  4251f0:	mov	w7, w19
  4251f4:	str	x26, [sp, #16]
  4251f8:	strb	w8, [sp, #8]
  4251fc:	str	x25, [sp]
  425200:	bl	41e44c <feof@plt+0x1abac>
  425204:	ldr	w8, [x22, #904]
  425208:	cbnz	w8, 424a7c <feof@plt+0x211dc>
  42520c:	mov	w8, #0x1                   	// #1
  425210:	mov	w2, #0x14d                 	// #333
  425214:	mov	x0, x24
  425218:	mov	x1, x22
  42521c:	mov	x3, xzr
  425220:	mov	x4, x23
  425224:	mov	w5, w21
  425228:	mov	w6, w20
  42522c:	mov	w7, w19
  425230:	str	x26, [sp, #16]
  425234:	strb	w8, [sp, #8]
  425238:	str	x25, [sp]
  42523c:	bl	41e44c <feof@plt+0x1abac>
  425240:	ldr	w8, [x22, #964]
  425244:	cbnz	w8, 424a84 <feof@plt+0x211e4>
  425248:	mov	w8, #0x1                   	// #1
  42524c:	mov	w2, #0x15e                 	// #350
  425250:	mov	x0, x24
  425254:	mov	x1, x22
  425258:	mov	x3, xzr
  42525c:	mov	x4, x23
  425260:	mov	w5, w21
  425264:	mov	w6, w20
  425268:	mov	w7, w19
  42526c:	str	x26, [sp, #16]
  425270:	strb	w8, [sp, #8]
  425274:	str	x25, [sp]
  425278:	bl	41e44c <feof@plt+0x1abac>
  42527c:	ldr	w8, [x22, #972]
  425280:	cbnz	w8, 424a8c <feof@plt+0x211ec>
  425284:	mov	w8, #0x1                   	// #1
  425288:	mov	w2, #0x160                 	// #352
  42528c:	mov	x0, x24
  425290:	mov	x1, x22
  425294:	mov	x3, xzr
  425298:	mov	x4, x23
  42529c:	mov	w5, w21
  4252a0:	mov	w6, w20
  4252a4:	mov	w7, w19
  4252a8:	str	x26, [sp, #16]
  4252ac:	strb	w8, [sp, #8]
  4252b0:	str	x25, [sp]
  4252b4:	bl	41e44c <feof@plt+0x1abac>
  4252b8:	ldr	w8, [x22, #980]
  4252bc:	cbnz	w8, 424a94 <feof@plt+0x211f4>
  4252c0:	mov	w8, #0x1                   	// #1
  4252c4:	mov	w2, #0x162                 	// #354
  4252c8:	mov	x0, x24
  4252cc:	mov	x1, x22
  4252d0:	mov	x3, xzr
  4252d4:	mov	x4, x23
  4252d8:	mov	w5, w21
  4252dc:	mov	w6, w20
  4252e0:	mov	w7, w19
  4252e4:	str	x26, [sp, #16]
  4252e8:	strb	w8, [sp, #8]
  4252ec:	str	x25, [sp]
  4252f0:	bl	41e44c <feof@plt+0x1abac>
  4252f4:	ldr	w8, [x22, #1052]
  4252f8:	cbnz	w8, 424a9c <feof@plt+0x211fc>
  4252fc:	mov	w8, #0x1                   	// #1
  425300:	mov	w2, #0x175                 	// #373
  425304:	mov	x0, x24
  425308:	mov	x1, x22
  42530c:	mov	x3, xzr
  425310:	mov	x4, x23
  425314:	mov	w5, w21
  425318:	mov	w6, w20
  42531c:	mov	w7, w19
  425320:	str	x26, [sp, #16]
  425324:	strb	w8, [sp, #8]
  425328:	str	x25, [sp]
  42532c:	bl	41e44c <feof@plt+0x1abac>
  425330:	ldr	w8, [x22, #1056]
  425334:	cbnz	w8, 424aa4 <feof@plt+0x21204>
  425338:	mov	w8, #0x1                   	// #1
  42533c:	mov	w2, #0x176                 	// #374
  425340:	mov	x0, x24
  425344:	mov	x1, x22
  425348:	mov	x3, xzr
  42534c:	mov	x4, x23
  425350:	mov	w5, w21
  425354:	mov	w6, w20
  425358:	mov	w7, w19
  42535c:	str	x26, [sp, #16]
  425360:	strb	w8, [sp, #8]
  425364:	str	x25, [sp]
  425368:	bl	41e44c <feof@plt+0x1abac>
  42536c:	ldr	w8, [x22, #1064]
  425370:	cbnz	w8, 424aac <feof@plt+0x2120c>
  425374:	mov	w8, #0x1                   	// #1
  425378:	mov	w2, #0x178                 	// #376
  42537c:	mov	x0, x24
  425380:	mov	x1, x22
  425384:	mov	x3, xzr
  425388:	mov	x4, x23
  42538c:	mov	w5, w21
  425390:	mov	w6, w20
  425394:	mov	w7, w19
  425398:	str	x26, [sp, #16]
  42539c:	strb	w8, [sp, #8]
  4253a0:	str	x25, [sp]
  4253a4:	bl	41e44c <feof@plt+0x1abac>
  4253a8:	ldr	w8, [x22, #1072]
  4253ac:	cbnz	w8, 424ab4 <feof@plt+0x21214>
  4253b0:	mov	w8, #0x1                   	// #1
  4253b4:	mov	w2, #0x17b                 	// #379
  4253b8:	mov	x0, x24
  4253bc:	mov	x1, x22
  4253c0:	mov	x3, xzr
  4253c4:	mov	x4, x23
  4253c8:	mov	w5, w21
  4253cc:	mov	w6, w20
  4253d0:	mov	w7, w19
  4253d4:	str	x26, [sp, #16]
  4253d8:	strb	w8, [sp, #8]
  4253dc:	str	x25, [sp]
  4253e0:	bl	41e44c <feof@plt+0x1abac>
  4253e4:	ldr	w8, [x22, #1108]
  4253e8:	cbnz	w8, 424abc <feof@plt+0x2121c>
  4253ec:	mov	w8, #0x1                   	// #1
  4253f0:	mov	w2, #0x188                 	// #392
  4253f4:	mov	x0, x24
  4253f8:	mov	x1, x22
  4253fc:	mov	x3, xzr
  425400:	mov	x4, x23
  425404:	mov	w5, w21
  425408:	mov	w6, w20
  42540c:	mov	w7, w19
  425410:	str	x26, [sp, #16]
  425414:	strb	w8, [sp, #8]
  425418:	str	x25, [sp]
  42541c:	bl	41e44c <feof@plt+0x1abac>
  425420:	ldr	w8, [x22, #1128]
  425424:	cbnz	w8, 424ac4 <feof@plt+0x21224>
  425428:	mov	w8, #0x1                   	// #1
  42542c:	mov	w2, #0x18d                 	// #397
  425430:	mov	x0, x24
  425434:	mov	x1, x22
  425438:	mov	x3, xzr
  42543c:	mov	x4, x23
  425440:	mov	w5, w21
  425444:	mov	w6, w20
  425448:	mov	w7, w19
  42544c:	str	x26, [sp, #16]
  425450:	strb	w8, [sp, #8]
  425454:	str	x25, [sp]
  425458:	bl	41e44c <feof@plt+0x1abac>
  42545c:	ldr	w8, [x22, #1132]
  425460:	cbnz	w8, 424acc <feof@plt+0x2122c>
  425464:	mov	w8, #0x1                   	// #1
  425468:	mov	w2, #0x18e                 	// #398
  42546c:	mov	x0, x24
  425470:	mov	x1, x22
  425474:	mov	x3, xzr
  425478:	mov	x4, x23
  42547c:	mov	w5, w21
  425480:	mov	w6, w20
  425484:	mov	w7, w19
  425488:	str	x26, [sp, #16]
  42548c:	strb	w8, [sp, #8]
  425490:	str	x25, [sp]
  425494:	bl	41e44c <feof@plt+0x1abac>
  425498:	ldr	w8, [x22, #1152]
  42549c:	cbnz	w8, 424ad4 <feof@plt+0x21234>
  4254a0:	cmp	x23, #0x0
  4254a4:	mov	w8, #0x3                   	// #3
  4254a8:	csel	x4, xzr, x8, eq  // eq = none
  4254ac:	mov	w8, #0x1                   	// #1
  4254b0:	mov	w2, #0x193                 	// #403
  4254b4:	mov	x0, x24
  4254b8:	mov	x1, x22
  4254bc:	mov	x3, xzr
  4254c0:	mov	w5, w21
  4254c4:	mov	w6, w20
  4254c8:	mov	w7, w19
  4254cc:	str	x26, [sp, #16]
  4254d0:	strb	w8, [sp, #8]
  4254d4:	str	x25, [sp]
  4254d8:	bl	41e44c <feof@plt+0x1abac>
  4254dc:	ldr	w8, [x22, #1160]
  4254e0:	cbnz	w8, 424adc <feof@plt+0x2123c>
  4254e4:	cmp	x23, #0x0
  4254e8:	cset	w4, ne  // ne = any
  4254ec:	mov	w8, #0x1                   	// #1
  4254f0:	mov	w2, #0x196                 	// #406
  4254f4:	mov	x0, x24
  4254f8:	mov	x1, x22
  4254fc:	mov	x3, xzr
  425500:	mov	w5, w21
  425504:	mov	w6, w20
  425508:	mov	w7, w19
  42550c:	str	x26, [sp, #16]
  425510:	strb	w8, [sp, #8]
  425514:	str	x25, [sp]
  425518:	bl	41e44c <feof@plt+0x1abac>
  42551c:	ldr	w8, [x22, #1172]
  425520:	cbnz	w8, 424ae4 <feof@plt+0x21244>
  425524:	cmp	x23, #0x0
  425528:	cset	w8, ne  // ne = any
  42552c:	lsl	x4, x8, #1
  425530:	mov	w8, #0x1                   	// #1
  425534:	mov	w2, #0x19a                 	// #410
  425538:	mov	x0, x24
  42553c:	mov	x1, x22
  425540:	mov	x3, xzr
  425544:	mov	w5, w21
  425548:	mov	w6, w20
  42554c:	mov	w7, w19
  425550:	str	x26, [sp, #16]
  425554:	strb	w8, [sp, #8]
  425558:	str	x25, [sp]
  42555c:	bl	41e44c <feof@plt+0x1abac>
  425560:	ldr	w8, [x22, #1176]
  425564:	cbnz	w8, 424aec <feof@plt+0x2124c>
  425568:	mov	w8, #0x1                   	// #1
  42556c:	mov	w2, #0x19b                 	// #411
  425570:	mov	x0, x24
  425574:	mov	x1, x22
  425578:	mov	x3, xzr
  42557c:	mov	x4, x23
  425580:	mov	w5, w21
  425584:	mov	w6, w20
  425588:	mov	w7, w19
  42558c:	str	x26, [sp, #16]
  425590:	strb	w8, [sp, #8]
  425594:	str	x25, [sp]
  425598:	bl	41e44c <feof@plt+0x1abac>
  42559c:	ldr	w8, [x22, #1224]
  4255a0:	cbnz	w8, 424af4 <feof@plt+0x21254>
  4255a4:	mov	w8, #0x1                   	// #1
  4255a8:	mov	w2, #0x1a7                 	// #423
  4255ac:	mov	x0, x24
  4255b0:	mov	x1, x22
  4255b4:	mov	x3, xzr
  4255b8:	mov	x4, x23
  4255bc:	mov	w5, w21
  4255c0:	mov	w6, w20
  4255c4:	mov	w7, w19
  4255c8:	str	x26, [sp, #16]
  4255cc:	strb	w8, [sp, #8]
  4255d0:	str	x25, [sp]
  4255d4:	bl	41e44c <feof@plt+0x1abac>
  4255d8:	ldr	w8, [x22, #1264]
  4255dc:	cbnz	w8, 424afc <feof@plt+0x2125c>
  4255e0:	mov	w8, #0x1                   	// #1
  4255e4:	mov	w2, #0x1b1                 	// #433
  4255e8:	mov	x0, x24
  4255ec:	mov	x1, x22
  4255f0:	mov	x3, xzr
  4255f4:	mov	x4, x23
  4255f8:	mov	w5, w21
  4255fc:	mov	w6, w20
  425600:	mov	w7, w19
  425604:	str	x26, [sp, #16]
  425608:	strb	w8, [sp, #8]
  42560c:	str	x25, [sp]
  425610:	bl	41e44c <feof@plt+0x1abac>
  425614:	ldr	w8, [x22, #1288]
  425618:	cbnz	w8, 424b04 <feof@plt+0x21264>
  42561c:	mov	w8, #0x1                   	// #1
  425620:	mov	w2, #0x1b7                 	// #439
  425624:	mov	x0, x24
  425628:	mov	x1, x22
  42562c:	mov	x3, xzr
  425630:	mov	x4, x23
  425634:	mov	w5, w21
  425638:	mov	w6, w20
  42563c:	mov	w7, w19
  425640:	str	x26, [sp, #16]
  425644:	strb	w8, [sp, #8]
  425648:	str	x25, [sp]
  42564c:	bl	41e44c <feof@plt+0x1abac>
  425650:	ldr	w8, [x22, #1312]
  425654:	cbnz	w8, 424b0c <feof@plt+0x2126c>
  425658:	mov	w8, #0x1                   	// #1
  42565c:	mov	w2, #0x1bd                 	// #445
  425660:	mov	x0, x24
  425664:	mov	x1, x22
  425668:	mov	x3, xzr
  42566c:	mov	x4, x23
  425670:	mov	w5, w21
  425674:	mov	w6, w20
  425678:	mov	w7, w19
  42567c:	str	x26, [sp, #16]
  425680:	strb	w8, [sp, #8]
  425684:	str	x25, [sp]
  425688:	bl	41e44c <feof@plt+0x1abac>
  42568c:	ldr	w8, [x22, #1316]
  425690:	cbnz	w8, 424b14 <feof@plt+0x21274>
  425694:	cmp	x23, #0x0
  425698:	cset	w4, ne  // ne = any
  42569c:	mov	w8, #0x1                   	// #1
  4256a0:	mov	w2, #0x1be                 	// #446
  4256a4:	mov	x0, x24
  4256a8:	mov	x1, x22
  4256ac:	mov	x3, xzr
  4256b0:	mov	w5, w21
  4256b4:	mov	w6, w20
  4256b8:	mov	w7, w19
  4256bc:	str	x26, [sp, #16]
  4256c0:	strb	w8, [sp, #8]
  4256c4:	str	x25, [sp]
  4256c8:	bl	41e44c <feof@plt+0x1abac>
  4256cc:	ldr	w8, [x22, #1324]
  4256d0:	cbnz	w8, 424b1c <feof@plt+0x2127c>
  4256d4:	mov	w8, #0x1                   	// #1
  4256d8:	mov	w2, #0x1c2                 	// #450
  4256dc:	mov	x0, x24
  4256e0:	mov	x1, x22
  4256e4:	mov	x3, xzr
  4256e8:	mov	x4, x23
  4256ec:	mov	w5, w21
  4256f0:	mov	w6, w20
  4256f4:	mov	w7, w19
  4256f8:	str	x26, [sp, #16]
  4256fc:	strb	w8, [sp, #8]
  425700:	str	x25, [sp]
  425704:	bl	41e44c <feof@plt+0x1abac>
  425708:	ldr	w8, [x22, #1416]
  42570c:	cbnz	w8, 4257d8 <feof@plt+0x21f38>
  425710:	mov	w8, #0x1                   	// #1
  425714:	str	x26, [sp, #16]
  425718:	strb	w8, [sp, #8]
  42571c:	mov	w2, #0x1d9                 	// #473
  425720:	b	4257b4 <feof@plt+0x21f14>
  425724:	mov	w8, #0x1                   	// #1
  425728:	mov	w2, #0xdf                  	// #223
  42572c:	mov	x0, x24
  425730:	mov	x1, x22
  425734:	mov	x3, xzr
  425738:	mov	x4, x23
  42573c:	mov	w5, w21
  425740:	mov	w6, w20
  425744:	mov	w7, w19
  425748:	str	x26, [sp, #16]
  42574c:	strb	w8, [sp, #8]
  425750:	str	x25, [sp]
  425754:	bl	41e44c <feof@plt+0x1abac>
  425758:	ldr	w8, [x22, #696]
  42575c:	cbnz	w8, 424b70 <feof@plt+0x212d0>
  425760:	cmp	x23, #0x0
  425764:	mov	w8, #0x3                   	// #3
  425768:	csel	x4, xzr, x8, eq  // eq = none
  42576c:	mov	w8, #0x1                   	// #1
  425770:	mov	w2, #0x111                 	// #273
  425774:	mov	x0, x24
  425778:	mov	x1, x22
  42577c:	mov	x3, xzr
  425780:	mov	w5, w21
  425784:	mov	w6, w20
  425788:	mov	w7, w19
  42578c:	str	x26, [sp, #16]
  425790:	strb	w8, [sp, #8]
  425794:	str	x25, [sp]
  425798:	bl	41e44c <feof@plt+0x1abac>
  42579c:	ldr	w8, [x22, #1044]
  4257a0:	cbnz	w8, 4257d8 <feof@plt+0x21f38>
  4257a4:	mov	w8, #0x1                   	// #1
  4257a8:	str	x26, [sp, #16]
  4257ac:	strb	w8, [sp, #8]
  4257b0:	mov	w2, #0x173                 	// #371
  4257b4:	mov	x0, x24
  4257b8:	mov	x1, x22
  4257bc:	mov	x3, xzr
  4257c0:	mov	x4, x23
  4257c4:	str	x25, [sp]
  4257c8:	mov	w5, w21
  4257cc:	mov	w6, w20
  4257d0:	mov	w7, w19
  4257d4:	bl	41e44c <feof@plt+0x1abac>
  4257d8:	ldp	x20, x19, [sp, #96]
  4257dc:	ldp	x22, x21, [sp, #80]
  4257e0:	ldp	x24, x23, [sp, #64]
  4257e4:	ldp	x26, x25, [sp, #48]
  4257e8:	ldp	x29, x30, [sp, #32]
  4257ec:	mov	w0, #0x1                   	// #1
  4257f0:	add	sp, sp, #0x70
  4257f4:	ret
  4257f8:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4257fc:	ldr	w8, [x8, #1044]
  425800:	cmp	x23, #0x0
  425804:	cset	w9, ne  // ne = any
  425808:	mov	w2, #0xfa                  	// #250
  42580c:	cmp	w8, #0x0
  425810:	cset	w8, gt
  425814:	and	w4, w9, w8
  425818:	mov	w8, #0x1                   	// #1
  42581c:	mov	x0, x24
  425820:	mov	x1, x22
  425824:	mov	x3, xzr
  425828:	mov	w5, w21
  42582c:	mov	w6, w20
  425830:	mov	w7, w19
  425834:	str	x26, [sp, #16]
  425838:	strb	w8, [sp, #8]
  42583c:	str	x25, [sp]
  425840:	bl	41e44c <feof@plt+0x1abac>
  425844:	ldr	w8, [x22, #612]
  425848:	cbnz	w8, 424b8c <feof@plt+0x212ec>
  42584c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  425850:	ldr	w8, [x8, #1044]
  425854:	cmp	x23, #0x0
  425858:	cset	w9, ne  // ne = any
  42585c:	mov	w2, #0xfb                  	// #251
  425860:	cmp	w8, #0x0
  425864:	cset	w8, gt
  425868:	and	w4, w9, w8
  42586c:	mov	w8, #0x1                   	// #1
  425870:	mov	x0, x24
  425874:	mov	x1, x22
  425878:	mov	x3, xzr
  42587c:	mov	w5, w21
  425880:	mov	w6, w20
  425884:	mov	w7, w19
  425888:	str	x26, [sp, #16]
  42588c:	strb	w8, [sp, #8]
  425890:	str	x25, [sp]
  425894:	bl	41e44c <feof@plt+0x1abac>
  425898:	ldr	w8, [x22, #616]
  42589c:	cbnz	w8, 424b94 <feof@plt+0x212f4>
  4258a0:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4258a4:	ldr	w8, [x8, #1044]
  4258a8:	cmp	x23, #0x0
  4258ac:	cset	w9, ne  // ne = any
  4258b0:	mov	w2, #0xfc                  	// #252
  4258b4:	cmp	w8, #0x1
  4258b8:	cset	w8, gt
  4258bc:	and	w4, w9, w8
  4258c0:	mov	w8, #0x1                   	// #1
  4258c4:	mov	x0, x24
  4258c8:	mov	x1, x22
  4258cc:	mov	x3, xzr
  4258d0:	mov	w5, w21
  4258d4:	mov	w6, w20
  4258d8:	mov	w7, w19
  4258dc:	str	x26, [sp, #16]
  4258e0:	strb	w8, [sp, #8]
  4258e4:	str	x25, [sp]
  4258e8:	bl	41e44c <feof@plt+0x1abac>
  4258ec:	ldr	w8, [x22, #620]
  4258f0:	cbnz	w8, 424b9c <feof@plt+0x212fc>
  4258f4:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4258f8:	ldr	w8, [x8, #1044]
  4258fc:	cmp	x23, #0x0
  425900:	cset	w9, ne  // ne = any
  425904:	mov	w2, #0xfe                  	// #254
  425908:	cmp	w8, #0x0
  42590c:	cset	w8, gt
  425910:	and	w4, w9, w8
  425914:	mov	w8, #0x1                   	// #1
  425918:	mov	x0, x24
  42591c:	mov	x1, x22
  425920:	mov	x3, xzr
  425924:	mov	w5, w21
  425928:	mov	w6, w20
  42592c:	mov	w7, w19
  425930:	str	x26, [sp, #16]
  425934:	strb	w8, [sp, #8]
  425938:	str	x25, [sp]
  42593c:	bl	41e44c <feof@plt+0x1abac>
  425940:	ldr	w8, [x22, #624]
  425944:	cbnz	w8, 424ba4 <feof@plt+0x21304>
  425948:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  42594c:	ldr	w8, [x8, #1044]
  425950:	cmp	x23, #0x0
  425954:	cset	w9, ne  // ne = any
  425958:	mov	w2, #0xff                  	// #255
  42595c:	cmp	w8, #0x1
  425960:	cset	w8, gt
  425964:	and	w4, w9, w8
  425968:	mov	w8, #0x1                   	// #1
  42596c:	mov	x0, x24
  425970:	mov	x1, x22
  425974:	mov	x3, xzr
  425978:	mov	w5, w21
  42597c:	mov	w6, w20
  425980:	mov	w7, w19
  425984:	str	x26, [sp, #16]
  425988:	strb	w8, [sp, #8]
  42598c:	str	x25, [sp]
  425990:	bl	41e44c <feof@plt+0x1abac>
  425994:	ldr	w8, [x22, #632]
  425998:	cbnz	w8, 424bac <feof@plt+0x2130c>
  42599c:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4259a0:	ldr	w8, [x8, #1044]
  4259a4:	cmp	x23, #0x0
  4259a8:	cset	w9, ne  // ne = any
  4259ac:	mov	w2, #0x102                 	// #258
  4259b0:	cmp	w8, #0x0
  4259b4:	cset	w8, gt
  4259b8:	and	w4, w9, w8
  4259bc:	mov	w8, #0x1                   	// #1
  4259c0:	mov	x0, x24
  4259c4:	mov	x1, x22
  4259c8:	mov	x3, xzr
  4259cc:	mov	w5, w21
  4259d0:	mov	w6, w20
  4259d4:	mov	w7, w19
  4259d8:	str	x26, [sp, #16]
  4259dc:	strb	w8, [sp, #8]
  4259e0:	str	x25, [sp]
  4259e4:	bl	41e44c <feof@plt+0x1abac>
  4259e8:	ldr	w8, [x22, #636]
  4259ec:	cbnz	w8, 424bb4 <feof@plt+0x21314>
  4259f0:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  4259f4:	ldr	w8, [x8, #1044]
  4259f8:	cmp	x23, #0x0
  4259fc:	cset	w9, ne  // ne = any
  425a00:	mov	w2, #0x103                 	// #259
  425a04:	cmp	w8, #0x1
  425a08:	cset	w8, gt
  425a0c:	and	w4, w9, w8
  425a10:	mov	w8, #0x1                   	// #1
  425a14:	mov	x0, x24
  425a18:	mov	x1, x22
  425a1c:	mov	x3, xzr
  425a20:	mov	w5, w21
  425a24:	mov	w6, w20
  425a28:	mov	w7, w19
  425a2c:	str	x26, [sp, #16]
  425a30:	strb	w8, [sp, #8]
  425a34:	str	x25, [sp]
  425a38:	bl	41e44c <feof@plt+0x1abac>
  425a3c:	ldr	w8, [x22, #640]
  425a40:	cbnz	w8, 424bbc <feof@plt+0x2131c>
  425a44:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  425a48:	ldr	w8, [x8, #1044]
  425a4c:	cmp	x23, #0x0
  425a50:	cset	w9, ne  // ne = any
  425a54:	mov	w2, #0x104                 	// #260
  425a58:	cmp	w8, #0x0
  425a5c:	cset	w8, gt
  425a60:	and	w4, w9, w8
  425a64:	mov	w8, #0x1                   	// #1
  425a68:	mov	x0, x24
  425a6c:	mov	x1, x22
  425a70:	mov	x3, xzr
  425a74:	mov	w5, w21
  425a78:	mov	w6, w20
  425a7c:	mov	w7, w19
  425a80:	str	x26, [sp, #16]
  425a84:	strb	w8, [sp, #8]
  425a88:	str	x25, [sp]
  425a8c:	bl	41e44c <feof@plt+0x1abac>
  425a90:	ldr	w8, [x22, #900]
  425a94:	cbnz	w8, 4257d8 <feof@plt+0x21f38>
  425a98:	adrp	x8, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  425a9c:	ldr	w8, [x8, #1044]
  425aa0:	cmp	x23, #0x0
  425aa4:	cset	w9, ne  // ne = any
  425aa8:	str	x26, [sp, #16]
  425aac:	cmp	w8, #0x0
  425ab0:	cset	w8, gt
  425ab4:	and	w4, w9, w8
  425ab8:	mov	w8, #0x1                   	// #1
  425abc:	strb	w8, [sp, #8]
  425ac0:	mov	w2, #0x14c                 	// #332
  425ac4:	str	x25, [sp]
  425ac8:	mov	x0, x24
  425acc:	mov	x1, x22
  425ad0:	mov	x3, xzr
  425ad4:	b	4257c8 <feof@plt+0x21f28>
  425ad8:	mov	w8, #0x1                   	// #1
  425adc:	mov	w2, #0xee                  	// #238
  425ae0:	mov	x0, x24
  425ae4:	mov	x1, x22
  425ae8:	mov	x3, xzr
  425aec:	mov	x4, x23
  425af0:	mov	w5, w21
  425af4:	mov	w6, w20
  425af8:	mov	w7, w19
  425afc:	str	x26, [sp, #16]
  425b00:	strb	w8, [sp, #8]
  425b04:	str	x25, [sp]
  425b08:	bl	41e44c <feof@plt+0x1abac>
  425b0c:	ldr	w8, [x22, #808]
  425b10:	cbnz	w8, 424bd8 <feof@plt+0x21338>
  425b14:	cmp	x23, #0x0
  425b18:	cset	w8, ne  // ne = any
  425b1c:	lsl	x4, x8, #1
  425b20:	mov	w8, #0x1                   	// #1
  425b24:	mov	w2, #0x12f                 	// #303
  425b28:	mov	x0, x24
  425b2c:	mov	x1, x22
  425b30:	mov	x3, xzr
  425b34:	mov	w5, w21
  425b38:	mov	w6, w20
  425b3c:	mov	w7, w19
  425b40:	str	x26, [sp, #16]
  425b44:	strb	w8, [sp, #8]
  425b48:	str	x25, [sp]
  425b4c:	bl	41e44c <feof@plt+0x1abac>
  425b50:	ldr	w8, [x22, #940]
  425b54:	cbnz	w8, 424be0 <feof@plt+0x21340>
  425b58:	mov	w8, #0x1                   	// #1
  425b5c:	mov	w2, #0x157                 	// #343
  425b60:	mov	x0, x24
  425b64:	mov	x1, x22
  425b68:	mov	x3, xzr
  425b6c:	mov	x4, x23
  425b70:	mov	w5, w21
  425b74:	mov	w6, w20
  425b78:	mov	w7, w19
  425b7c:	str	x26, [sp, #16]
  425b80:	strb	w8, [sp, #8]
  425b84:	str	x25, [sp]
  425b88:	bl	41e44c <feof@plt+0x1abac>
  425b8c:	ldr	w8, [x22, #992]
  425b90:	cbnz	w8, 424be8 <feof@plt+0x21348>
  425b94:	mov	w8, #0x1                   	// #1
  425b98:	mov	w2, #0x166                 	// #358
  425b9c:	mov	x0, x24
  425ba0:	mov	x1, x22
  425ba4:	mov	x3, xzr
  425ba8:	mov	x4, x23
  425bac:	mov	w5, w21
  425bb0:	mov	w6, w20
  425bb4:	mov	w7, w19
  425bb8:	str	x26, [sp, #16]
  425bbc:	strb	w8, [sp, #8]
  425bc0:	str	x25, [sp]
  425bc4:	bl	41e44c <feof@plt+0x1abac>
  425bc8:	ldr	w8, [x22, #1388]
  425bcc:	cbnz	w8, 4257d8 <feof@plt+0x21f38>
  425bd0:	b	424bf0 <feof@plt+0x21350>
  425bd4:	cmp	w1, #0x14e
  425bd8:	b.gt	425c0c <feof@plt+0x2236c>
  425bdc:	sub	w8, w1, #0xb6
  425be0:	cmp	w8, #0x89
  425be4:	b.hi	425c78 <feof@plt+0x223d8>  // b.pmore
  425be8:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  425bec:	add	x9, x9, #0xb7c
  425bf0:	adr	x10, 425c00 <feof@plt+0x22360>
  425bf4:	ldrb	w11, [x9, x8]
  425bf8:	add	x10, x10, x11, lsl #2
  425bfc:	br	x10
  425c00:	ldr	w8, [x0, #376]
  425c04:	strb	w8, [x2, #31]
  425c08:	ret
  425c0c:	sub	w8, w1, #0x1b4
  425c10:	cmp	w8, #0x1f
  425c14:	b.hi	425c3c <feof@plt+0x2239c>  // b.pmore
  425c18:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  425c1c:	add	x9, x9, #0xc06
  425c20:	adr	x10, 425c30 <feof@plt+0x22390>
  425c24:	ldrb	w11, [x9, x8]
  425c28:	add	x10, x10, x11, lsl #2
  425c2c:	br	x10
  425c30:	ldr	w8, [x0, #1276]
  425c34:	strb	w8, [x2, #26]
  425c38:	ret
  425c3c:	cmp	w1, #0x14f
  425c40:	b.eq	425d28 <feof@plt+0x22488>  // b.none
  425c44:	cmp	w1, #0x161
  425c48:	b.ne	425c78 <feof@plt+0x223d8>  // b.any
  425c4c:	ldr	w8, [x0, #976]
  425c50:	strb	w8, [x2, #42]
  425c54:	ret
  425c58:	ldr	w8, [x0, #1288]
  425c5c:	strb	w8, [x2, #24]
  425c60:	ret
  425c64:	ldr	w8, [x0, #1300]
  425c68:	strb	w8, [x2, #37]
  425c6c:	ret
  425c70:	ldr	w8, [x0, #1388]
  425c74:	strb	w8, [x2, #30]
  425c78:	ret
  425c7c:	ldr	w8, [x0, #380]
  425c80:	strb	w8, [x2, #47]
  425c84:	ret
  425c88:	ldr	w8, [x0, #384]
  425c8c:	cmp	w8, #0x0
  425c90:	cset	w8, ne  // ne = any
  425c94:	strb	w8, [x2, #87]
  425c98:	ret
  425c9c:	ldr	w8, [x0, #404]
  425ca0:	strb	w8, [x2, #86]
  425ca4:	ret
  425ca8:	ldr	w8, [x0, #456]
  425cac:	strb	w8, [x2, #21]
  425cb0:	ret
  425cb4:	ldr	w8, [x0, #496]
  425cb8:	strb	w8, [x2, #22]
  425cbc:	ret
  425cc0:	ldr	w8, [x0, #512]
  425cc4:	strb	w8, [x2, #20]
  425cc8:	ret
  425ccc:	ldr	w8, [x0, #572]
  425cd0:	strb	w8, [x2, #28]
  425cd4:	ret
  425cd8:	ldr	w8, [x0, #584]
  425cdc:	strb	w8, [x2, #38]
  425ce0:	ret
  425ce4:	ldr	w8, [x0, #768]
  425ce8:	cmp	w8, #0x0
  425cec:	cset	w8, ne  // ne = any
  425cf0:	strb	w8, [x2, #84]
  425cf4:	ret
  425cf8:	ldr	w8, [x0, #788]
  425cfc:	strb	w8, [x2, #50]
  425d00:	ret
  425d04:	ldr	w8, [x0, #800]
  425d08:	strb	w8, [x2, #27]
  425d0c:	ret
  425d10:	ldr	w8, [x0, #844]
  425d14:	strb	w8, [x2, #23]
  425d18:	ret
  425d1c:	ldr	w8, [x0, #860]
  425d20:	strb	w8, [x2, #25]
  425d24:	ret
  425d28:	ldr	w8, [x0, #908]
  425d2c:	str	w8, [x2, #80]
  425d30:	ret
  425d34:	ldrb	w8, [x1, #31]
  425d38:	str	w8, [x0, #376]
  425d3c:	ldrb	w8, [x1, #47]
  425d40:	str	w8, [x0, #380]
  425d44:	ldrb	w8, [x1, #87]
  425d48:	str	w8, [x0, #384]
  425d4c:	ldrsb	w8, [x1, #86]
  425d50:	str	w8, [x0, #404]
  425d54:	ldrb	w8, [x1, #21]
  425d58:	str	w8, [x0, #456]
  425d5c:	ldrb	w8, [x1, #22]
  425d60:	str	w8, [x0, #496]
  425d64:	ldrb	w8, [x1, #20]
  425d68:	str	w8, [x0, #512]
  425d6c:	ldrb	w8, [x1, #28]
  425d70:	str	w8, [x0, #572]
  425d74:	ldrb	w8, [x1, #38]
  425d78:	str	w8, [x0, #584]
  425d7c:	ldrb	w8, [x1, #84]
  425d80:	str	w8, [x0, #768]
  425d84:	ldrb	w8, [x1, #50]
  425d88:	str	w8, [x0, #788]
  425d8c:	ldrb	w8, [x1, #27]
  425d90:	str	w8, [x0, #800]
  425d94:	ldrb	w8, [x1, #23]
  425d98:	str	w8, [x0, #844]
  425d9c:	ldrb	w8, [x1, #25]
  425da0:	str	w8, [x0, #860]
  425da4:	ldr	w8, [x1, #80]
  425da8:	str	w8, [x0, #908]
  425dac:	ldrb	w8, [x1, #42]
  425db0:	str	w8, [x0, #976]
  425db4:	ldrb	w8, [x1, #26]
  425db8:	str	w8, [x0, #1276]
  425dbc:	ldrb	w8, [x1, #24]
  425dc0:	str	w8, [x0, #1288]
  425dc4:	ldrb	w8, [x1, #37]
  425dc8:	str	w8, [x0, #1300]
  425dcc:	ldrb	w8, [x1, #30]
  425dd0:	str	w8, [x0, #1388]
  425dd4:	ret
  425dd8:	sub	sp, sp, #0x40
  425ddc:	stp	x29, x30, [sp, #16]
  425de0:	stp	x22, x21, [sp, #32]
  425de4:	stp	x20, x19, [sp, #48]
  425de8:	add	x29, sp, #0x10
  425dec:	mov	w0, #0x20                  	// #32
  425df0:	mov	x19, x3
  425df4:	mov	x20, x2
  425df8:	mov	x21, x1
  425dfc:	bl	403440 <_Znwm@plt>
  425e00:	adrp	x22, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  425e04:	mov	x8, #0x300000000           	// #12884901888
  425e08:	add	x22, x22, #0xfb8
  425e0c:	mov	x2, x0
  425e10:	stp	xzr, xzr, [x0]
  425e14:	str	x8, [x0, #16]
  425e18:	strb	wzr, [x0, #24]
  425e1c:	mov	x0, x22
  425e20:	mov	x1, x21
  425e24:	bl	42698c <feof@plt+0x230ec>
  425e28:	ldr	x0, [x22, #48]
  425e2c:	lsr	x2, x21, #3
  425e30:	add	x1, sp, #0x8
  425e34:	str	x21, [sp, #8]
  425e38:	bl	427178 <feof@plt+0x238d8>
  425e3c:	ldr	x8, [x0]
  425e40:	cbz	x8, 425e68 <feof@plt+0x225c8>
  425e44:	ldr	x8, [x0, #8]
  425e48:	ldp	x9, x10, [x8]
  425e4c:	ldr	x11, [x8, #16]
  425e50:	madd	x9, x19, x20, x9
  425e54:	add	x10, x10, #0x1
  425e58:	cmp	x11, x9
  425e5c:	stp	x9, x10, [x8]
  425e60:	b.cs	425e68 <feof@plt+0x225c8>  // b.hs, b.nlast
  425e64:	str	x9, [x8, #16]
  425e68:	ldp	x9, x10, [x8, #32]
  425e6c:	str	x19, [x8, #48]
  425e70:	add	x9, x9, x20
  425e74:	cmp	x10, x9
  425e78:	str	x9, [x8, #32]
  425e7c:	b.cs	425e84 <feof@plt+0x225e4>  // b.hs, b.nlast
  425e80:	str	x9, [x8, #40]
  425e84:	ldp	x20, x19, [sp, #48]
  425e88:	ldp	x22, x21, [sp, #32]
  425e8c:	ldp	x29, x30, [sp, #16]
  425e90:	add	sp, sp, #0x40
  425e94:	ret
  425e98:	sub	sp, sp, #0x50
  425e9c:	stp	x29, x30, [sp, #16]
  425ea0:	stp	x24, x23, [sp, #32]
  425ea4:	stp	x22, x21, [sp, #48]
  425ea8:	stp	x20, x19, [sp, #64]
  425eac:	add	x29, sp, #0x10
  425eb0:	adrp	x24, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  425eb4:	ldr	x0, [x24, #4072]
  425eb8:	lsr	x22, x1, #3
  425ebc:	mov	x21, x2
  425ec0:	mov	x23, x1
  425ec4:	str	x1, [sp, #8]
  425ec8:	add	x1, sp, #0x8
  425ecc:	mov	w2, w22
  425ed0:	mov	w20, w4
  425ed4:	mov	x19, x3
  425ed8:	bl	427178 <feof@plt+0x238d8>
  425edc:	ldr	x8, [x0]
  425ee0:	cbnz	x8, 425f10 <feof@plt+0x22670>
  425ee4:	mov	w0, #0x20                  	// #32
  425ee8:	bl	403440 <_Znwm@plt>
  425eec:	mov	x8, #0x300000000           	// #12884901888
  425ef0:	mov	x2, x0
  425ef4:	stp	xzr, xzr, [x0]
  425ef8:	str	x8, [x0, #16]
  425efc:	strb	wzr, [x0, #24]
  425f00:	adrp	x0, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  425f04:	add	x0, x0, #0xfb8
  425f08:	mov	x1, x23
  425f0c:	bl	42698c <feof@plt+0x230ec>
  425f10:	ldr	x0, [x24, #4072]
  425f14:	add	x1, sp, #0x8
  425f18:	mov	w2, w22
  425f1c:	str	x23, [sp, #8]
  425f20:	bl	427178 <feof@plt+0x238d8>
  425f24:	ldr	x8, [x0]
  425f28:	cbz	x8, 425f7c <feof@plt+0x226dc>
  425f2c:	ldr	x22, [x0, #8]
  425f30:	ldr	x8, [x22]
  425f34:	subs	x8, x8, x21
  425f38:	b.cc	425fa4 <feof@plt+0x22704>  // b.lo, b.ul, b.last
  425f3c:	str	x8, [x22]
  425f40:	tbz	w20, #0, 425f80 <feof@plt+0x226e0>
  425f44:	ldr	x8, [sp, #8]
  425f48:	ldr	x20, [x24, #4072]
  425f4c:	add	x1, sp, #0x8
  425f50:	mov	w3, wzr
  425f54:	lsr	x2, x8, #3
  425f58:	mov	x0, x20
  425f5c:	bl	42725c <feof@plt+0x239bc>
  425f60:	cbz	x0, 425f80 <feof@plt+0x226e0>
  425f64:	mov	w8, #0x1                   	// #1
  425f68:	str	x8, [x0]
  425f6c:	ldr	x8, [x20, #24]
  425f70:	add	x8, x8, #0x1
  425f74:	str	x8, [x20, #24]
  425f78:	b	425f80 <feof@plt+0x226e0>
  425f7c:	mov	x22, xzr
  425f80:	ldr	x8, [x22, #32]
  425f84:	sub	x8, x8, x19
  425f88:	str	x8, [x22, #32]
  425f8c:	ldp	x20, x19, [sp, #64]
  425f90:	ldp	x22, x21, [sp, #48]
  425f94:	ldp	x24, x23, [sp, #32]
  425f98:	ldp	x29, x30, [sp, #16]
  425f9c:	add	sp, sp, #0x50
  425fa0:	ret
  425fa4:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  425fa8:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  425fac:	add	x0, x0, #0x549
  425fb0:	add	x2, x2, #0x55f
  425fb4:	mov	w1, #0x97                  	// #151
  425fb8:	bl	429434 <feof@plt+0x25b94>
  425fbc:	cmp	w0, w1
  425fc0:	b.cs	425ff4 <feof@plt+0x22754>  // b.hs, b.nlast
  425fc4:	cbz	w0, 425fd8 <feof@plt+0x22738>
  425fc8:	cmp	w0, #0xf
  425fcc:	b.hi	425fe0 <feof@plt+0x22740>  // b.pmore
  425fd0:	lsl	w8, w0, #1
  425fd4:	b	425fe8 <feof@plt+0x22748>
  425fd8:	mov	w8, #0x4                   	// #4
  425fdc:	b	425fe8 <feof@plt+0x22748>
  425fe0:	add	w8, w0, w0, lsl #1
  425fe4:	lsr	w8, w8, #1
  425fe8:	cmp	w8, w1
  425fec:	csel	w0, w1, w8, cc  // cc = lo, ul, last
  425ff0:	ret
  425ff4:	stp	x29, x30, [sp, #-16]!
  425ff8:	mov	x29, sp
  425ffc:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426000:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426004:	add	x0, x0, #0x4fd
  426008:	add	x2, x2, #0x50d
  42600c:	mov	w1, #0xa2                  	// #162
  426010:	bl	429434 <feof@plt+0x25b94>
  426014:	adrp	x0, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  426018:	add	x0, x0, #0xfb8
  42601c:	mov	w1, #0x3                   	// #3
  426020:	mov	x2, xzr
  426024:	b	4263c8 <feof@plt+0x22b28>
  426028:	stp	x29, x30, [sp, #-64]!
  42602c:	str	x23, [sp, #16]
  426030:	stp	x22, x21, [sp, #32]
  426034:	stp	x20, x19, [sp, #48]
  426038:	mov	x29, sp
  42603c:	mov	x19, x0
  426040:	mov	w0, #0x30                  	// #48
  426044:	bl	403440 <_Znwm@plt>
  426048:	mov	x20, x0
  42604c:	stp	xzr, xzr, [x0, #24]
  426050:	str	xzr, [x0, #16]
  426054:	strb	wzr, [x0, #44]
  426058:	mov	w0, #0xd                   	// #13
  42605c:	bl	427ae8 <feof@plt+0x24248>
  426060:	mov	w8, w0
  426064:	adrp	x23, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426068:	lsl	x8, x8, #4
  42606c:	add	x23, x23, #0x700
  426070:	ldr	w22, [x23, x8]
  426074:	mov	w21, w0
  426078:	mov	w1, #0x10                  	// #16
  42607c:	mov	x0, x22
  426080:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  426084:	cbz	x0, 426234 <feof@plt+0x22994>
  426088:	cbz	w22, 4260d4 <feof@plt+0x22834>
  42608c:	cmp	w22, #0x1
  426090:	b.ne	42609c <feof@plt+0x227fc>  // b.any
  426094:	mov	x8, xzr
  426098:	b	4260c0 <feof@plt+0x22820>
  42609c:	and	x8, x22, #0xfffffffe
  4260a0:	add	x9, x0, #0x10
  4260a4:	mov	x10, x8
  4260a8:	stur	xzr, [x9, #-16]
  4260ac:	str	xzr, [x9], #32
  4260b0:	subs	x10, x10, #0x2
  4260b4:	b.ne	4260a8 <feof@plt+0x22808>  // b.any
  4260b8:	cmp	x8, x22
  4260bc:	b.eq	4260d4 <feof@plt+0x22834>  // b.none
  4260c0:	sub	x9, x22, x8
  4260c4:	add	x8, x0, x8, lsl #4
  4260c8:	subs	x9, x9, #0x1
  4260cc:	str	xzr, [x8], #16
  4260d0:	b.ne	4260c8 <feof@plt+0x22828>  // b.any
  4260d4:	stp	x0, x22, [x20]
  4260d8:	mov	w0, #0x30                  	// #48
  4260dc:	str	w21, [x20, #40]
  4260e0:	str	x20, [x19, #40]
  4260e4:	bl	403440 <_Znwm@plt>
  4260e8:	mov	x20, x0
  4260ec:	stp	xzr, xzr, [x0, #24]
  4260f0:	str	xzr, [x0, #16]
  4260f4:	strb	wzr, [x0, #44]
  4260f8:	mov	w0, #0xd                   	// #13
  4260fc:	bl	427ae8 <feof@plt+0x24248>
  426100:	mov	w8, w0
  426104:	lsl	x8, x8, #4
  426108:	ldr	w22, [x23, x8]
  42610c:	mov	w21, w0
  426110:	mov	w1, #0x18                  	// #24
  426114:	mov	x0, x22
  426118:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  42611c:	cbz	x0, 426234 <feof@plt+0x22994>
  426120:	cbz	w22, 426174 <feof@plt+0x228d4>
  426124:	cmp	w22, #0x1
  426128:	b.ne	426134 <feof@plt+0x22894>  // b.any
  42612c:	mov	x8, xzr
  426130:	b	42615c <feof@plt+0x228bc>
  426134:	and	x8, x22, #0xfffffffe
  426138:	mov	x9, x8
  42613c:	mov	x10, x0
  426140:	str	xzr, [x10]
  426144:	str	xzr, [x10, #24]
  426148:	subs	x9, x9, #0x2
  42614c:	add	x10, x10, #0x30
  426150:	b.ne	426140 <feof@plt+0x228a0>  // b.any
  426154:	cmp	x8, x22
  426158:	b.eq	426174 <feof@plt+0x228d4>  // b.none
  42615c:	mov	w10, #0x18                  	// #24
  426160:	sub	x9, x22, x8
  426164:	madd	x8, x8, x10, x0
  426168:	subs	x9, x9, #0x1
  42616c:	str	xzr, [x8], #24
  426170:	b.ne	426168 <feof@plt+0x228c8>  // b.any
  426174:	stp	x0, x22, [x20]
  426178:	mov	w0, #0x30                  	// #48
  42617c:	str	w21, [x20, #40]
  426180:	str	x20, [x19, #48]
  426184:	bl	403440 <_Znwm@plt>
  426188:	mov	x20, x0
  42618c:	stp	xzr, xzr, [x0, #24]
  426190:	str	xzr, [x0, #16]
  426194:	strb	wzr, [x0, #44]
  426198:	mov	w0, #0xd                   	// #13
  42619c:	bl	427ae8 <feof@plt+0x24248>
  4261a0:	mov	w8, w0
  4261a4:	lsl	x8, x8, #4
  4261a8:	ldr	w22, [x23, x8]
  4261ac:	mov	w21, w0
  4261b0:	mov	w1, #0x18                  	// #24
  4261b4:	mov	x0, x22
  4261b8:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  4261bc:	cbz	x0, 426234 <feof@plt+0x22994>
  4261c0:	cbz	w22, 426214 <feof@plt+0x22974>
  4261c4:	cmp	w22, #0x1
  4261c8:	b.ne	4261d4 <feof@plt+0x22934>  // b.any
  4261cc:	mov	x8, xzr
  4261d0:	b	4261fc <feof@plt+0x2295c>
  4261d4:	and	x8, x22, #0xfffffffe
  4261d8:	mov	x9, x8
  4261dc:	mov	x10, x0
  4261e0:	str	xzr, [x10]
  4261e4:	str	xzr, [x10, #24]
  4261e8:	subs	x9, x9, #0x2
  4261ec:	add	x10, x10, #0x30
  4261f0:	b.ne	4261e0 <feof@plt+0x22940>  // b.any
  4261f4:	cmp	x8, x22
  4261f8:	b.eq	426214 <feof@plt+0x22974>  // b.none
  4261fc:	mov	w10, #0x18                  	// #24
  426200:	sub	x9, x22, x8
  426204:	madd	x8, x8, x10, x0
  426208:	subs	x9, x9, #0x1
  42620c:	str	xzr, [x8], #24
  426210:	b.ne	426208 <feof@plt+0x22968>  // b.any
  426214:	stp	x0, x22, [x20]
  426218:	str	w21, [x20, #40]
  42621c:	str	x20, [x19]
  426220:	ldp	x20, x19, [sp, #48]
  426224:	ldp	x22, x21, [sp, #32]
  426228:	ldr	x23, [sp, #16]
  42622c:	ldp	x29, x30, [sp], #64
  426230:	ret
  426234:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426238:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42623c:	add	x0, x0, #0x524
  426240:	add	x2, x2, #0x53b
  426244:	mov	w1, #0x2b5                 	// #693
  426248:	bl	429434 <feof@plt+0x25b94>
  42624c:	stp	x29, x30, [sp, #-48]!
  426250:	stp	x22, x21, [sp, #16]
  426254:	stp	x20, x19, [sp, #32]
  426258:	mov	x29, sp
  42625c:	ldr	x20, [x0, #40]
  426260:	mov	x19, x0
  426264:	ldr	x8, [x20, #8]
  426268:	cmp	x8, #0x1
  42626c:	b.lt	426290 <feof@plt+0x229f0>  // b.tstop
  426270:	ldr	x21, [x20]
  426274:	add	x22, x21, x8, lsl #4
  426278:	ldr	x8, [x21]
  42627c:	cmp	x8, #0x1
  426280:	b.hi	426298 <feof@plt+0x229f8>  // b.pmore
  426284:	add	x21, x21, #0x10
  426288:	cmp	x21, x22
  42628c:	b.cc	426278 <feof@plt+0x229d8>  // b.lo, b.ul, b.last
  426290:	mov	x21, xzr
  426294:	mov	x22, xzr
  426298:	orr	x8, x21, x22
  42629c:	cbnz	x8, 4262ec <feof@plt+0x22a4c>
  4262a0:	cbnz	x20, 426328 <feof@plt+0x22a88>
  4262a4:	ldr	x20, [x19, #48]
  4262a8:	cbnz	x20, 42637c <feof@plt+0x22adc>
  4262ac:	ldr	x19, [x19]
  4262b0:	cbz	x19, 4263b8 <feof@plt+0x22b18>
  4262b4:	ldr	x8, [x19, #8]
  4262b8:	mov	x9, x8
  4262bc:	sub	x9, x9, #0x1
  4262c0:	cmp	x9, x8
  4262c4:	b.cc	4262bc <feof@plt+0x22a1c>  // b.lo, b.ul, b.last
  4262c8:	ldrb	w8, [x19, #44]
  4262cc:	ldr	x0, [x19]
  4262d0:	cbz	w8, 426350 <feof@plt+0x22ab0>
  4262d4:	bl	4161b8 <feof@plt+0x12918>
  4262d8:	b	426354 <feof@plt+0x22ab4>
  4262dc:	mov	x22, xzr
  4262e0:	mov	x21, xzr
  4262e4:	orr	x8, x21, x22
  4262e8:	cbz	x8, 426320 <feof@plt+0x22a80>
  4262ec:	ldr	x0, [x21]
  4262f0:	cbz	x0, 4262f8 <feof@plt+0x22a58>
  4262f4:	bl	403410 <_ZdlPv@plt>
  4262f8:	ldr	x0, [x21, #8]
  4262fc:	cbz	x0, 426304 <feof@plt+0x22a64>
  426300:	bl	403410 <_ZdlPv@plt>
  426304:	add	x21, x21, #0x10
  426308:	cmp	x21, x22
  42630c:	b.cs	4262dc <feof@plt+0x22a3c>  // b.hs, b.nlast
  426310:	ldr	x8, [x21]
  426314:	cmp	x8, #0x1
  426318:	b.ls	426304 <feof@plt+0x22a64>  // b.plast
  42631c:	b	4262e4 <feof@plt+0x22a44>
  426320:	ldr	x20, [x19, #40]
  426324:	cbz	x20, 4262a4 <feof@plt+0x22a04>
  426328:	ldr	x8, [x20, #8]
  42632c:	mov	x9, x8
  426330:	sub	x9, x9, #0x1
  426334:	cmp	x9, x8
  426338:	b.cc	426330 <feof@plt+0x22a90>  // b.lo, b.ul, b.last
  42633c:	ldrb	w8, [x20, #44]
  426340:	ldr	x0, [x20]
  426344:	cbz	w8, 426368 <feof@plt+0x22ac8>
  426348:	bl	4161b8 <feof@plt+0x12918>
  42634c:	b	42636c <feof@plt+0x22acc>
  426350:	bl	4031d0 <free@plt>
  426354:	mov	x0, x19
  426358:	ldp	x20, x19, [sp, #32]
  42635c:	ldp	x22, x21, [sp, #16]
  426360:	ldp	x29, x30, [sp], #48
  426364:	b	403410 <_ZdlPv@plt>
  426368:	bl	4031d0 <free@plt>
  42636c:	mov	x0, x20
  426370:	bl	403410 <_ZdlPv@plt>
  426374:	ldr	x20, [x19, #48]
  426378:	cbz	x20, 4262ac <feof@plt+0x22a0c>
  42637c:	ldr	x8, [x20, #8]
  426380:	mov	x9, x8
  426384:	sub	x9, x9, #0x1
  426388:	cmp	x9, x8
  42638c:	b.cc	426384 <feof@plt+0x22ae4>  // b.lo, b.ul, b.last
  426390:	ldrb	w8, [x20, #44]
  426394:	ldr	x0, [x20]
  426398:	cbz	w8, 4263a4 <feof@plt+0x22b04>
  42639c:	bl	4161b8 <feof@plt+0x12918>
  4263a0:	b	4263a8 <feof@plt+0x22b08>
  4263a4:	bl	4031d0 <free@plt>
  4263a8:	mov	x0, x20
  4263ac:	bl	403410 <_ZdlPv@plt>
  4263b0:	ldr	x19, [x19]
  4263b4:	cbnz	x19, 4262b4 <feof@plt+0x22a14>
  4263b8:	ldp	x20, x19, [sp, #32]
  4263bc:	ldp	x22, x21, [sp, #16]
  4263c0:	ldp	x29, x30, [sp], #48
  4263c4:	ret
  4263c8:	sub	sp, sp, #0xa0
  4263cc:	stp	x29, x30, [sp, #80]
  4263d0:	str	x25, [sp, #96]
  4263d4:	stp	x24, x23, [sp, #112]
  4263d8:	stp	x22, x21, [sp, #128]
  4263dc:	stp	x20, x19, [sp, #144]
  4263e0:	add	x29, sp, #0x50
  4263e4:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4263e8:	mov	w20, w1
  4263ec:	ldr	x1, [x23, #1096]
  4263f0:	mov	x21, x0
  4263f4:	mov	w0, #0xa                   	// #10
  4263f8:	mov	x22, x2
  4263fc:	bl	403480 <fputc@plt>
  426400:	ldr	x8, [x21, #40]
  426404:	mov	w1, #0x10                  	// #16
  426408:	ldp	x9, x8, [x8, #16]
  42640c:	sub	x0, x9, x8
  426410:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  426414:	ldr	x9, [x21, #40]
  426418:	mov	x19, x0
  42641c:	ldr	x8, [x9, #8]
  426420:	cmp	x8, #0x1
  426424:	b.lt	426454 <feof@plt+0x22bb4>  // b.tstop
  426428:	ldr	x10, [x9]
  42642c:	add	x11, x10, x8, lsl #4
  426430:	ldr	x8, [x10]
  426434:	cmp	x8, #0x1
  426438:	b.hi	426460 <feof@plt+0x22bc0>  // b.pmore
  42643c:	add	x10, x10, #0x10
  426440:	mov	x9, xzr
  426444:	cmp	x10, x11
  426448:	mov	x8, xzr
  42644c:	b.cc	426430 <feof@plt+0x22b90>  // b.lo, b.ul, b.last
  426450:	b	426468 <feof@plt+0x22bc8>
  426454:	mov	x9, xzr
  426458:	mov	x8, xzr
  42645c:	b	426468 <feof@plt+0x22bc8>
  426460:	mov	x9, x10
  426464:	mov	x8, x11
  426468:	mov	w24, wzr
  42646c:	orr	x10, x8, x9
  426470:	cbz	x10, 4264e4 <feof@plt+0x22c44>
  426474:	ldr	x10, [x9]
  426478:	ldr	w10, [x10, #20]
  42647c:	cmp	w10, w20
  426480:	b.ne	426494 <feof@plt+0x22bf4>  // b.any
  426484:	ldp	x10, x11, [x9]
  426488:	add	x12, x19, w24, uxtw #4
  42648c:	add	w24, w24, #0x1
  426490:	stp	x10, x11, [x12]
  426494:	add	x10, x9, #0x10
  426498:	cmp	x10, x8
  42649c:	b.cs	4264c4 <feof@plt+0x22c24>  // b.hs, b.nlast
  4264a0:	ldr	x9, [x10]
  4264a4:	cmp	x9, #0x1
  4264a8:	b.hi	4264d0 <feof@plt+0x22c30>  // b.pmore
  4264ac:	add	x10, x10, #0x10
  4264b0:	mov	x11, xzr
  4264b4:	cmp	x10, x8
  4264b8:	mov	x9, xzr
  4264bc:	b.cc	4264a0 <feof@plt+0x22c00>  // b.lo, b.ul, b.last
  4264c0:	b	4264d8 <feof@plt+0x22c38>
  4264c4:	mov	x11, xzr
  4264c8:	mov	x9, xzr
  4264cc:	b	4264d8 <feof@plt+0x22c38>
  4264d0:	mov	x11, x8
  4264d4:	mov	x9, x10
  4264d8:	orr	x10, x9, x11
  4264dc:	mov	x8, x11
  4264e0:	cbnz	x10, 426474 <feof@plt+0x22bd4>
  4264e4:	adrp	x8, 427000 <feof@plt+0x23760>
  4264e8:	add	x8, x8, #0x7f8
  4264ec:	cmp	x22, #0x0
  4264f0:	mov	w1, w24
  4264f4:	csel	x3, x8, x22, eq  // eq = none
  4264f8:	mov	w2, #0x10                  	// #16
  4264fc:	mov	x0, x19
  426500:	bl	439f5c <feof@plt+0x366bc>
  426504:	ldr	x8, [x21, #40]
  426508:	mov	w1, #0x10                  	// #16
  42650c:	ldp	x9, x8, [x8, #16]
  426510:	sub	x0, x9, x8
  426514:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  426518:	ldr	x9, [x21, #40]
  42651c:	mov	x21, x0
  426520:	ldr	x8, [x9, #8]
  426524:	cmp	x8, #0x1
  426528:	b.lt	426558 <feof@plt+0x22cb8>  // b.tstop
  42652c:	ldr	x10, [x9]
  426530:	add	x11, x10, x8, lsl #4
  426534:	ldr	x8, [x10]
  426538:	cmp	x8, #0x1
  42653c:	b.hi	426564 <feof@plt+0x22cc4>  // b.pmore
  426540:	add	x10, x10, #0x10
  426544:	mov	x9, xzr
  426548:	cmp	x10, x11
  42654c:	mov	x8, xzr
  426550:	b.cc	426534 <feof@plt+0x22c94>  // b.lo, b.ul, b.last
  426554:	b	42656c <feof@plt+0x22ccc>
  426558:	mov	x9, xzr
  42655c:	mov	x8, xzr
  426560:	b	42656c <feof@plt+0x22ccc>
  426564:	mov	x9, x10
  426568:	mov	x8, x11
  42656c:	mov	w25, wzr
  426570:	orr	x10, x8, x9
  426574:	cbz	x10, 4265e8 <feof@plt+0x22d48>
  426578:	ldr	x10, [x9]
  42657c:	ldr	w10, [x10, #20]
  426580:	cmp	w10, w20
  426584:	b.ne	426598 <feof@plt+0x22cf8>  // b.any
  426588:	ldp	x10, x11, [x9]
  42658c:	add	x12, x21, w25, uxtw #4
  426590:	add	w25, w25, #0x1
  426594:	stp	x10, x11, [x12]
  426598:	add	x10, x9, #0x10
  42659c:	cmp	x10, x8
  4265a0:	b.cs	4265c8 <feof@plt+0x22d28>  // b.hs, b.nlast
  4265a4:	ldr	x9, [x10]
  4265a8:	cmp	x9, #0x1
  4265ac:	b.hi	4265d4 <feof@plt+0x22d34>  // b.pmore
  4265b0:	add	x10, x10, #0x10
  4265b4:	mov	x11, xzr
  4265b8:	cmp	x10, x8
  4265bc:	mov	x9, xzr
  4265c0:	b.cc	4265a4 <feof@plt+0x22d04>  // b.lo, b.ul, b.last
  4265c4:	b	4265dc <feof@plt+0x22d3c>
  4265c8:	mov	x11, xzr
  4265cc:	mov	x9, xzr
  4265d0:	b	4265dc <feof@plt+0x22d3c>
  4265d4:	mov	x11, x8
  4265d8:	mov	x9, x10
  4265dc:	orr	x10, x9, x11
  4265e0:	mov	x8, x11
  4265e4:	cbnz	x10, 426578 <feof@plt+0x22cd8>
  4265e8:	mov	w22, w25
  4265ec:	adrp	x3, 427000 <feof@plt+0x23760>
  4265f0:	add	x3, x3, #0x7f8
  4265f4:	mov	w2, #0x10                  	// #16
  4265f8:	mov	x0, x21
  4265fc:	mov	x1, x22
  426600:	bl	439f5c <feof@plt+0x366bc>
  426604:	mov	w8, #0x1                   	// #1
  426608:	stp	xzr, xzr, [sp, #16]
  42660c:	stp	xzr, xzr, [sp, #56]
  426610:	stp	xzr, x8, [sp, #32]
  426614:	str	xzr, [sp, #48]
  426618:	cbz	w25, 4266f0 <feof@plt+0x22e50>
  42661c:	cmp	w22, #0x2
  426620:	b.hi	426638 <feof@plt+0x22d98>  // b.pmore
  426624:	mov	x8, xzr
  426628:	mov	x9, xzr
  42662c:	movi	v0.2d, #0x0
  426630:	movi	v1.2d, #0x0
  426634:	b	4266b0 <feof@plt+0x22e10>
  426638:	and	x8, x22, #0xfffffffe
  42663c:	mov	x9, xzr
  426640:	mov	x10, xzr
  426644:	add	x11, x21, #0x18
  426648:	movi	v0.2d, #0x0
  42664c:	movi	v3.2d, #0x0
  426650:	movi	v1.2d, #0x0
  426654:	mov	x12, x8
  426658:	movi	v2.2d, #0x0
  42665c:	ldur	x13, [x11, #-16]
  426660:	ldr	x14, [x11], #32
  426664:	subs	x12, x12, #0x2
  426668:	ldr	q4, [x13]
  42666c:	ldr	q5, [x14]
  426670:	ldr	x15, [x13, #16]
  426674:	ldr	x16, [x14, #16]
  426678:	add	v3.2d, v4.2d, v3.2d
  42667c:	ldr	q4, [x13, #32]
  426680:	add	v0.2d, v5.2d, v0.2d
  426684:	ldr	q5, [x14, #32]
  426688:	add	x9, x15, x9
  42668c:	add	x10, x16, x10
  426690:	add	v2.2d, v4.2d, v2.2d
  426694:	add	v1.2d, v5.2d, v1.2d
  426698:	b.ne	42665c <feof@plt+0x22dbc>  // b.any
  42669c:	add	v0.2d, v0.2d, v3.2d
  4266a0:	add	x9, x10, x9
  4266a4:	cmp	x8, x22
  4266a8:	add	v1.2d, v1.2d, v2.2d
  4266ac:	b.eq	4266e0 <feof@plt+0x22e40>  // b.none
  4266b0:	sub	x10, x22, x8
  4266b4:	add	x8, x21, x8, lsl #4
  4266b8:	add	x8, x8, #0x8
  4266bc:	ldr	x11, [x8], #16
  4266c0:	subs	x10, x10, #0x1
  4266c4:	ldr	q2, [x11]
  4266c8:	ldr	x12, [x11, #16]
  4266cc:	ldr	q3, [x11, #32]
  4266d0:	add	v0.2d, v2.2d, v0.2d
  4266d4:	add	x9, x12, x9
  4266d8:	add	v1.2d, v3.2d, v1.2d
  4266dc:	b.ne	4266bc <feof@plt+0x22e1c>  // b.any
  4266e0:	str	q0, [sp, #16]
  4266e4:	str	q1, [sp, #48]
  4266e8:	stp	x9, xzr, [sp, #32]
  4266ec:	str	xzr, [sp, #64]
  4266f0:	mov	x0, x21
  4266f4:	bl	4031d0 <free@plt>
  4266f8:	ldr	x1, [x23, #1096]
  4266fc:	mov	x21, #0xffffffffffffff74    	// #-140
  426700:	mov	w0, #0x2d                  	// #45
  426704:	bl	403480 <fputc@plt>
  426708:	ldr	x1, [x23, #1096]
  42670c:	adds	x21, x21, #0x1
  426710:	b.cc	426700 <feof@plt+0x22e60>  // b.lo, b.ul, b.last
  426714:	mov	w0, #0xa                   	// #10
  426718:	bl	403480 <fputc@plt>
  42671c:	adrp	x8, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426720:	add	x8, x8, #0x678
  426724:	ldr	x20, [x8, w20, uxtw #3]
  426728:	ldr	x0, [x23, #1096]
  42672c:	adrp	x21, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426730:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426734:	adrp	x3, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426738:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42673c:	adrp	x5, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426740:	adrp	x6, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426744:	adrp	x7, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426748:	add	x21, x21, #0x5b5
  42674c:	add	x1, x1, #0x570
  426750:	add	x3, x3, #0x590
  426754:	add	x4, x4, #0x59a
  426758:	add	x5, x5, #0x59f
  42675c:	add	x6, x6, #0x5a4
  426760:	add	x7, x7, #0x5aa
  426764:	mov	x2, x20
  426768:	str	x21, [sp]
  42676c:	bl	4030d0 <fprintf@plt>
  426770:	ldr	x1, [x23, #1096]
  426774:	mov	x22, #0xffffffffffffff74    	// #-140
  426778:	mov	w0, #0x2d                  	// #45
  42677c:	bl	403480 <fputc@plt>
  426780:	ldr	x1, [x23, #1096]
  426784:	adds	x22, x22, #0x1
  426788:	b.cc	426778 <feof@plt+0x22ed8>  // b.lo, b.ul, b.last
  42678c:	mov	w0, #0xa                   	// #10
  426790:	bl	403480 <fputc@plt>
  426794:	subs	w8, w24, #0x1
  426798:	b.mi	4267c0 <feof@plt+0x22f20>  // b.first
  42679c:	add	x8, x19, w8, uxtw #4
  4267a0:	add	x22, x8, #0x8
  4267a4:	ldp	x1, x0, [x22, #-8]
  4267a8:	add	x2, sp, #0x10
  4267ac:	bl	427600 <feof@plt+0x23d60>
  4267b0:	sub	w24, w24, #0x1
  4267b4:	cmp	w24, #0x0
  4267b8:	sub	x22, x22, #0x10
  4267bc:	b.gt	4267a4 <feof@plt+0x22f04>
  4267c0:	ldr	x1, [x23, #1096]
  4267c4:	mov	x22, #0xffffffffffffff74    	// #-140
  4267c8:	mov	w0, #0x2d                  	// #45
  4267cc:	bl	403480 <fputc@plt>
  4267d0:	ldr	x1, [x23, #1096]
  4267d4:	adds	x22, x22, #0x1
  4267d8:	b.cc	4267c8 <feof@plt+0x22f28>  // b.lo, b.ul, b.last
  4267dc:	mov	w0, #0xa                   	// #10
  4267e0:	bl	403480 <fputc@plt>
  4267e4:	ldr	x0, [x23, #1096]
  4267e8:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4267ec:	adrp	x3, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4267f0:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4267f4:	adrp	x5, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4267f8:	adrp	x6, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4267fc:	adrp	x7, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426800:	add	x1, x1, #0x570
  426804:	add	x3, x3, #0x590
  426808:	add	x4, x4, #0x59a
  42680c:	add	x5, x5, #0x59f
  426810:	add	x6, x6, #0x5a4
  426814:	add	x7, x7, #0x5aa
  426818:	mov	x2, x20
  42681c:	str	x21, [sp]
  426820:	bl	4030d0 <fprintf@plt>
  426824:	ldr	x1, [x23, #1096]
  426828:	mov	x20, #0xffffffffffffff74    	// #-140
  42682c:	mov	w0, #0x2d                  	// #45
  426830:	bl	403480 <fputc@plt>
  426834:	ldr	x1, [x23, #1096]
  426838:	adds	x20, x20, #0x1
  42683c:	b.cc	42682c <feof@plt+0x22f8c>  // b.lo, b.ul, b.last
  426840:	mov	w0, #0xa                   	// #10
  426844:	bl	403480 <fputc@plt>
  426848:	ldr	x8, [sp, #16]
  42684c:	ldr	x0, [x23, #1096]
  426850:	lsr	x10, x8, #11
  426854:	cmp	x10, #0x5
  426858:	mov	x3, x8
  42685c:	b.cc	426878 <feof@plt+0x22fd8>  // b.lo, b.ul, b.last
  426860:	lsr	x9, x8, #21
  426864:	cmp	x9, #0x4
  426868:	b.hi	426874 <feof@plt+0x22fd4>  // b.pmore
  42686c:	lsr	x3, x8, #10
  426870:	b	426878 <feof@plt+0x22fd8>
  426874:	lsr	x3, x8, #20
  426878:	ldr	x12, [sp, #24]
  42687c:	cmp	x8, #0xa00, lsl #12
  426880:	mov	w8, #0x4d                  	// #77
  426884:	mov	w9, #0x6b                  	// #107
  426888:	csel	w11, w9, w8, cc  // cc = lo, ul, last
  42688c:	cmp	x10, #0x5
  426890:	mov	w10, #0x20                  	// #32
  426894:	csel	w4, w10, w11, cc  // cc = lo, ul, last
  426898:	lsr	x11, x12, #11
  42689c:	cmp	x11, #0x5
  4268a0:	mov	x5, x12
  4268a4:	b.cc	4268c0 <feof@plt+0x23020>  // b.lo, b.ul, b.last
  4268a8:	lsr	x13, x12, #21
  4268ac:	cmp	x13, #0x4
  4268b0:	b.hi	4268bc <feof@plt+0x2301c>  // b.pmore
  4268b4:	lsr	x5, x12, #10
  4268b8:	b	4268c0 <feof@plt+0x23020>
  4268bc:	lsr	x5, x12, #20
  4268c0:	cmp	x12, #0xa00, lsl #12
  4268c4:	ldr	x12, [sp, #48]
  4268c8:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  4268cc:	cmp	x11, #0x5
  4268d0:	csel	w6, w10, w8, cc  // cc = lo, ul, last
  4268d4:	lsr	x8, x12, #11
  4268d8:	cmp	x8, #0x5
  4268dc:	mov	x7, x12
  4268e0:	b.cc	4268fc <feof@plt+0x2305c>  // b.lo, b.ul, b.last
  4268e4:	lsr	x9, x12, #21
  4268e8:	cmp	x9, #0x4
  4268ec:	b.hi	4268f8 <feof@plt+0x23058>  // b.pmore
  4268f0:	lsr	x7, x12, #10
  4268f4:	b	4268fc <feof@plt+0x2305c>
  4268f8:	lsr	x7, x12, #20
  4268fc:	cmp	x12, #0xa00, lsl #12
  426900:	mov	w9, #0x4d                  	// #77
  426904:	mov	w10, #0x6b                  	// #107
  426908:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  42690c:	cmp	x8, #0x5
  426910:	mov	w8, #0x20                  	// #32
  426914:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426918:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42691c:	csel	w8, w8, w9, cc  // cc = lo, ul, last
  426920:	add	x1, x1, #0x658
  426924:	add	x2, x2, #0x671
  426928:	str	w8, [sp]
  42692c:	bl	4030d0 <fprintf@plt>
  426930:	ldr	x1, [x23, #1096]
  426934:	mov	x20, #0xffffffffffffff74    	// #-140
  426938:	mov	w0, #0x2d                  	// #45
  42693c:	bl	403480 <fputc@plt>
  426940:	ldr	x1, [x23, #1096]
  426944:	adds	x20, x20, #0x1
  426948:	b.cc	426938 <feof@plt+0x23098>  // b.lo, b.ul, b.last
  42694c:	mov	w0, #0xa                   	// #10
  426950:	bl	403480 <fputc@plt>
  426954:	mov	x0, x19
  426958:	bl	4031d0 <free@plt>
  42695c:	ldr	x1, [x23, #1096]
  426960:	mov	w0, #0xa                   	// #10
  426964:	bl	403480 <fputc@plt>
  426968:	ldp	x20, x19, [sp, #144]
  42696c:	ldp	x22, x21, [sp, #128]
  426970:	ldp	x24, x23, [sp, #112]
  426974:	ldr	x25, [sp, #96]
  426978:	ldp	x29, x30, [sp, #80]
  42697c:	add	sp, sp, #0xa0
  426980:	ret
  426984:	ret
  426988:	ret
  42698c:	sub	sp, sp, #0x50
  426990:	stp	x29, x30, [sp, #16]
  426994:	str	x23, [sp, #32]
  426998:	stp	x22, x21, [sp, #48]
  42699c:	stp	x20, x19, [sp, #64]
  4269a0:	add	x29, sp, #0x10
  4269a4:	stp	x2, x1, [sp]
  4269a8:	ldr	x8, [x2]
  4269ac:	ldr	x21, [x0, #40]
  4269b0:	mov	x20, x2
  4269b4:	mov	x19, x0
  4269b8:	mov	w22, #0x79b9                	// #31161
  4269bc:	add	x0, x29, #0x18
  4269c0:	mov	w1, #0x8                   	// #8
  4269c4:	mov	w2, wzr
  4269c8:	movk	w22, #0x9e37, lsl #16
  4269cc:	str	x8, [x29, #24]
  4269d0:	bl	47ade4 <feof@plt+0x77544>
  4269d4:	ldr	x8, [x20, #8]
  4269d8:	mov	w2, w0
  4269dc:	add	x0, x29, #0x18
  4269e0:	mov	w1, #0x8                   	// #8
  4269e4:	str	x8, [x29, #24]
  4269e8:	bl	47ade4 <feof@plt+0x77544>
  4269ec:	ldr	w8, [x20, #16]
  4269f0:	sub	w9, w22, w0
  4269f4:	mov	x1, sp
  4269f8:	sub	w9, w9, w8
  4269fc:	sub	w8, w8, w0
  426a00:	eor	w9, w9, w0, lsr #13
  426a04:	sub	w8, w8, w9
  426a08:	sub	w10, w0, w9
  426a0c:	eor	w8, w8, w9, lsl #8
  426a10:	sub	w10, w10, w8
  426a14:	sub	w9, w9, w8
  426a18:	eor	w10, w10, w8, lsr #13
  426a1c:	sub	w9, w9, w10
  426a20:	sub	w8, w8, w10
  426a24:	eor	w9, w9, w10, lsr #12
  426a28:	sub	w8, w8, w9
  426a2c:	sub	w10, w10, w9
  426a30:	eor	w8, w8, w9, lsl #16
  426a34:	sub	w10, w10, w8
  426a38:	sub	w9, w9, w8
  426a3c:	eor	w10, w10, w8, lsr #5
  426a40:	sub	w9, w9, w10
  426a44:	sub	w8, w8, w10
  426a48:	eor	w9, w9, w10, lsr #3
  426a4c:	sub	w8, w8, w9
  426a50:	eor	w8, w8, w9, lsl #10
  426a54:	sub	w9, w10, w9
  426a58:	sub	w9, w9, w8
  426a5c:	eor	w2, w9, w8, lsr #15
  426a60:	mov	x0, x21
  426a64:	bl	426be4 <feof@plt+0x23344>
  426a68:	ldr	x8, [x0]
  426a6c:	cbz	x8, 426a94 <feof@plt+0x231f4>
  426a70:	mov	x20, x0
  426a74:	ldr	x0, [sp]
  426a78:	cbz	x0, 426a80 <feof@plt+0x231e0>
  426a7c:	bl	403410 <_ZdlPv@plt>
  426a80:	ldr	x20, [x20, #8]
  426a84:	ldr	x8, [x20, #24]
  426a88:	add	x8, x8, #0x1
  426a8c:	str	x8, [x20, #24]
  426a90:	b	426b80 <feof@plt+0x232e0>
  426a94:	mov	w0, #0x38                  	// #56
  426a98:	bl	403440 <_Znwm@plt>
  426a9c:	ldr	x23, [sp]
  426aa0:	mov	w8, #0x1                   	// #1
  426aa4:	stp	xzr, xzr, [x0]
  426aa8:	stp	xzr, x8, [x0, #16]
  426aac:	stp	xzr, xzr, [x0, #40]
  426ab0:	str	xzr, [x0, #32]
  426ab4:	ldr	x8, [x23]
  426ab8:	ldr	x21, [x19, #40]
  426abc:	mov	x20, x0
  426ac0:	add	x0, x29, #0x18
  426ac4:	mov	w1, #0x8                   	// #8
  426ac8:	mov	w2, wzr
  426acc:	str	x8, [x29, #24]
  426ad0:	bl	47ade4 <feof@plt+0x77544>
  426ad4:	ldr	x8, [x23, #8]
  426ad8:	mov	w2, w0
  426adc:	add	x0, x29, #0x18
  426ae0:	mov	w1, #0x8                   	// #8
  426ae4:	str	x8, [x29, #24]
  426ae8:	bl	47ade4 <feof@plt+0x77544>
  426aec:	ldr	w8, [x23, #16]
  426af0:	sub	w9, w22, w0
  426af4:	mov	x1, sp
  426af8:	mov	w3, #0x1                   	// #1
  426afc:	sub	w9, w9, w8
  426b00:	sub	w8, w8, w0
  426b04:	eor	w9, w9, w0, lsr #13
  426b08:	sub	w8, w8, w9
  426b0c:	sub	w10, w0, w9
  426b10:	eor	w8, w8, w9, lsl #8
  426b14:	sub	w10, w10, w8
  426b18:	sub	w9, w9, w8
  426b1c:	eor	w10, w10, w8, lsr #13
  426b20:	sub	w9, w9, w10
  426b24:	sub	w8, w8, w10
  426b28:	eor	w9, w9, w10, lsr #12
  426b2c:	sub	w8, w8, w9
  426b30:	sub	w10, w10, w9
  426b34:	eor	w8, w8, w9, lsl #16
  426b38:	sub	w10, w10, w8
  426b3c:	sub	w9, w9, w8
  426b40:	eor	w10, w10, w8, lsr #5
  426b44:	sub	w9, w9, w10
  426b48:	sub	w8, w8, w10
  426b4c:	eor	w9, w9, w10, lsr #3
  426b50:	sub	w8, w8, w9
  426b54:	eor	w8, w8, w9, lsl #10
  426b58:	sub	w9, w10, w9
  426b5c:	sub	w9, w9, w8
  426b60:	eor	w2, w9, w8, lsr #15
  426b64:	mov	x0, x21
  426b68:	bl	426d10 <feof@plt+0x23470>
  426b6c:	ldr	x8, [x0]
  426b70:	cbnz	x8, 426b7c <feof@plt+0x232dc>
  426b74:	ldr	x8, [sp]
  426b78:	str	x8, [x0]
  426b7c:	str	x20, [x0, #8]
  426b80:	ldr	x8, [sp, #8]
  426b84:	ldr	x0, [x19, #48]
  426b88:	add	x1, sp, #0x8
  426b8c:	lsr	x2, x8, #3
  426b90:	bl	427178 <feof@plt+0x238d8>
  426b94:	ldr	x8, [x0]
  426b98:	cbnz	x8, 426bc8 <feof@plt+0x23328>
  426b9c:	ldr	x8, [sp, #8]
  426ba0:	ldr	x0, [x19, #48]
  426ba4:	add	x1, sp, #0x8
  426ba8:	mov	w3, #0x1                   	// #1
  426bac:	lsr	x2, x8, #3
  426bb0:	bl	42725c <feof@plt+0x239bc>
  426bb4:	ldr	x8, [x0]
  426bb8:	cbnz	x8, 426bc4 <feof@plt+0x23324>
  426bbc:	ldr	x8, [sp, #8]
  426bc0:	str	x8, [x0]
  426bc4:	stp	x20, xzr, [x0, #8]
  426bc8:	mov	x0, x20
  426bcc:	ldp	x20, x19, [sp, #64]
  426bd0:	ldp	x22, x21, [sp, #48]
  426bd4:	ldr	x23, [sp, #32]
  426bd8:	ldp	x29, x30, [sp, #16]
  426bdc:	add	sp, sp, #0x50
  426be0:	ret
  426be4:	ldr	w8, [x0, #32]
  426be8:	ldr	w14, [x0, #40]
  426bec:	adrp	x15, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426bf0:	add	x15, x15, #0x700
  426bf4:	add	w8, w8, #0x1
  426bf8:	add	x9, x15, x14, lsl #4
  426bfc:	str	w8, [x0, #32]
  426c00:	ldp	w16, w8, [x9]
  426c04:	mov	w13, w2
  426c08:	ldr	w12, [x9, #12]
  426c0c:	ldr	x9, [x0]
  426c10:	mul	x8, x8, x13
  426c14:	lsr	x8, x8, #32
  426c18:	sub	w10, w2, w8
  426c1c:	add	w8, w8, w10, lsr #1
  426c20:	lsr	w8, w8, w12
  426c24:	msub	w11, w8, w16, w2
  426c28:	add	x8, x9, w11, uxtw #4
  426c2c:	ldr	x17, [x8]
  426c30:	cbz	x17, 426d08 <feof@plt+0x23468>
  426c34:	ldr	x10, [x0, #8]
  426c38:	cmp	x17, #0x1
  426c3c:	b.eq	426c74 <feof@plt+0x233d4>  // b.none
  426c40:	ldr	x18, [x1]
  426c44:	ldr	x3, [x17]
  426c48:	ldr	x4, [x18]
  426c4c:	cmp	x3, x4
  426c50:	b.ne	426c74 <feof@plt+0x233d4>  // b.any
  426c54:	ldr	x3, [x17, #8]
  426c58:	ldr	x4, [x18, #8]
  426c5c:	cmp	x3, x4
  426c60:	b.ne	426c74 <feof@plt+0x233d4>  // b.any
  426c64:	ldr	w17, [x17, #16]
  426c68:	ldr	w18, [x18, #16]
  426c6c:	cmp	w17, w18
  426c70:	b.eq	426d08 <feof@plt+0x23468>  // b.none
  426c74:	add	x8, x15, x14, lsl #4
  426c78:	ldr	w8, [x8, #8]
  426c7c:	ldr	w15, [x0, #36]
  426c80:	sub	w14, w16, #0x2
  426c84:	mul	x8, x8, x13
  426c88:	lsr	x8, x8, #32
  426c8c:	sub	w13, w2, w8
  426c90:	add	w8, w8, w13, lsr #1
  426c94:	lsr	w8, w8, w12
  426c98:	msub	w8, w8, w14, w2
  426c9c:	add	w12, w8, #0x1
  426ca0:	add	w13, w15, #0x1
  426ca4:	b	426cac <feof@plt+0x2340c>
  426ca8:	add	w13, w13, #0x1
  426cac:	add	w8, w12, w11
  426cb0:	cmp	x10, x8
  426cb4:	csel	w11, wzr, w10, hi  // hi = pmore
  426cb8:	sub	w11, w8, w11
  426cbc:	str	w13, [x0, #36]
  426cc0:	add	x8, x9, w11, uxtw #4
  426cc4:	ldr	x14, [x8]
  426cc8:	cmp	x14, #0x1
  426ccc:	b.eq	426ca8 <feof@plt+0x23408>  // b.none
  426cd0:	cbz	x14, 426d08 <feof@plt+0x23468>
  426cd4:	ldr	x15, [x1]
  426cd8:	ldr	x16, [x14]
  426cdc:	ldr	x17, [x15]
  426ce0:	cmp	x16, x17
  426ce4:	b.ne	426ca8 <feof@plt+0x23408>  // b.any
  426ce8:	ldr	x16, [x14, #8]
  426cec:	ldr	x17, [x15, #8]
  426cf0:	cmp	x16, x17
  426cf4:	b.ne	426ca8 <feof@plt+0x23408>  // b.any
  426cf8:	ldr	w14, [x14, #16]
  426cfc:	ldr	w15, [x15, #16]
  426d00:	cmp	w14, w15
  426d04:	b.ne	426ca8 <feof@plt+0x23408>  // b.any
  426d08:	mov	x0, x8
  426d0c:	ret
  426d10:	stp	x29, x30, [sp, #-48]!
  426d14:	stp	x22, x21, [sp, #16]
  426d18:	stp	x20, x19, [sp, #32]
  426d1c:	mov	x29, sp
  426d20:	mov	w20, w3
  426d24:	mov	w22, w2
  426d28:	mov	x21, x1
  426d2c:	cmp	w3, #0x1
  426d30:	mov	x19, x0
  426d34:	b.ne	426d50 <feof@plt+0x234b0>  // b.any
  426d38:	ldp	x8, x9, [x19, #8]
  426d3c:	add	x8, x8, x8, lsl #1
  426d40:	cmp	x8, x9, lsl #2
  426d44:	b.hi	426d50 <feof@plt+0x234b0>  // b.pmore
  426d48:	mov	x0, x19
  426d4c:	bl	426ecc <feof@plt+0x2362c>
  426d50:	ldr	w8, [x19, #32]
  426d54:	ldr	w9, [x19, #40]
  426d58:	adrp	x10, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426d5c:	add	x10, x10, #0x700
  426d60:	add	w8, w8, #0x1
  426d64:	add	x10, x10, x9, lsl #4
  426d68:	str	w8, [x19, #32]
  426d6c:	ldp	w12, w8, [x10]
  426d70:	mov	w13, w22
  426d74:	ldr	w11, [x10, #12]
  426d78:	mul	x8, x8, x13
  426d7c:	lsr	x9, x8, #32
  426d80:	sub	w14, w22, w9
  426d84:	ldr	x8, [x19]
  426d88:	add	w9, w9, w14, lsr #1
  426d8c:	lsr	w9, w9, w11
  426d90:	msub	w9, w9, w12, w22
  426d94:	add	x0, x8, w9, uxtw #4
  426d98:	ldr	x15, [x0]
  426d9c:	cbz	x15, 426e7c <feof@plt+0x235dc>
  426da0:	ldr	w14, [x10, #8]
  426da4:	ldr	x10, [x19, #8]
  426da8:	cmp	x15, #0x1
  426dac:	b.eq	426de8 <feof@plt+0x23548>  // b.none
  426db0:	ldr	x16, [x21]
  426db4:	ldr	x17, [x15]
  426db8:	ldr	x18, [x16]
  426dbc:	cmp	x17, x18
  426dc0:	b.ne	426de4 <feof@plt+0x23544>  // b.any
  426dc4:	ldr	x17, [x15, #8]
  426dc8:	ldr	x18, [x16, #8]
  426dcc:	cmp	x17, x18
  426dd0:	b.ne	426de4 <feof@plt+0x23544>  // b.any
  426dd4:	ldr	w15, [x15, #16]
  426dd8:	ldr	w16, [x16, #16]
  426ddc:	cmp	w15, w16
  426de0:	b.eq	426ebc <feof@plt+0x2361c>  // b.none
  426de4:	mov	x0, xzr
  426de8:	sub	w15, w12, #0x2
  426dec:	mul	x12, x14, x13
  426df0:	lsr	x12, x12, #32
  426df4:	sub	w13, w22, w12
  426df8:	add	w13, w12, w13, lsr #1
  426dfc:	ldr	w12, [x19, #36]
  426e00:	lsr	w11, w13, w11
  426e04:	msub	w11, w11, w15, w22
  426e08:	add	w11, w11, #0x1
  426e0c:	add	w9, w11, w9
  426e10:	cmp	x10, x9
  426e14:	csel	w13, wzr, w10, hi  // hi = pmore
  426e18:	add	w12, w12, #0x1
  426e1c:	sub	w9, w9, w13
  426e20:	str	w12, [x19, #36]
  426e24:	add	x13, x8, w9, uxtw #4
  426e28:	ldr	x14, [x13]
  426e2c:	cbz	x14, 426e80 <feof@plt+0x235e0>
  426e30:	cmp	x14, #0x1
  426e34:	b.eq	426e70 <feof@plt+0x235d0>  // b.none
  426e38:	ldr	x15, [x21]
  426e3c:	ldr	x16, [x14]
  426e40:	ldr	x17, [x15]
  426e44:	cmp	x16, x17
  426e48:	b.ne	426e0c <feof@plt+0x2356c>  // b.any
  426e4c:	ldr	x16, [x14, #8]
  426e50:	ldr	x17, [x15, #8]
  426e54:	cmp	x16, x17
  426e58:	b.ne	426e0c <feof@plt+0x2356c>  // b.any
  426e5c:	ldr	w14, [x14, #16]
  426e60:	ldr	w15, [x15, #16]
  426e64:	cmp	w14, w15
  426e68:	b.ne	426e0c <feof@plt+0x2356c>  // b.any
  426e6c:	b	426eb8 <feof@plt+0x23618>
  426e70:	cmp	x0, #0x0
  426e74:	csel	x0, x13, x0, eq  // eq = none
  426e78:	b	426e0c <feof@plt+0x2356c>
  426e7c:	mov	x0, xzr
  426e80:	cbz	w20, 426e9c <feof@plt+0x235fc>
  426e84:	cbz	x0, 426ea4 <feof@plt+0x23604>
  426e88:	ldr	x8, [x19, #24]
  426e8c:	sub	x8, x8, #0x1
  426e90:	str	x8, [x19, #24]
  426e94:	str	xzr, [x0]
  426e98:	b	426ebc <feof@plt+0x2361c>
  426e9c:	mov	x0, xzr
  426ea0:	b	426ebc <feof@plt+0x2361c>
  426ea4:	ldr	x10, [x19, #16]
  426ea8:	add	x0, x8, w9, uxtw #4
  426eac:	add	x10, x10, #0x1
  426eb0:	str	x10, [x19, #16]
  426eb4:	b	426ebc <feof@plt+0x2361c>
  426eb8:	mov	x0, x13
  426ebc:	ldp	x20, x19, [sp, #32]
  426ec0:	ldp	x22, x21, [sp, #16]
  426ec4:	ldp	x29, x30, [sp], #48
  426ec8:	ret
  426ecc:	stp	x29, x30, [sp, #-80]!
  426ed0:	str	x25, [sp, #16]
  426ed4:	stp	x24, x23, [sp, #32]
  426ed8:	stp	x22, x21, [sp, #48]
  426edc:	stp	x20, x19, [sp, #64]
  426ee0:	mov	x29, sp
  426ee4:	ldp	x8, x9, [x0, #16]
  426ee8:	ldp	x19, x24, [x0]
  426eec:	mov	x20, x0
  426ef0:	adrp	x23, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  426ef4:	sub	x8, x8, x9
  426ef8:	lsl	x0, x8, #1
  426efc:	cmp	x0, x24
  426f00:	add	x23, x23, #0x700
  426f04:	b.hi	426f24 <feof@plt+0x23684>  // b.pmore
  426f08:	ldr	w21, [x20, #40]
  426f0c:	cmp	x24, #0x21
  426f10:	b.cc	427144 <feof@plt+0x238a4>  // b.lo, b.ul, b.last
  426f14:	lsl	w8, w8, #3
  426f18:	cmp	x24, x8
  426f1c:	mov	x22, x24
  426f20:	b.ls	426f38 <feof@plt+0x23698>  // b.plast
  426f24:	bl	427ae8 <feof@plt+0x24248>
  426f28:	mov	w8, w0
  426f2c:	lsl	x8, x8, #4
  426f30:	ldr	w22, [x23, x8]
  426f34:	mov	w21, w0
  426f38:	ldrb	w8, [x20, #44]
  426f3c:	cbz	w8, 427150 <feof@plt+0x238b0>
  426f40:	adrp	x1, 426000 <feof@plt+0x22760>
  426f44:	lsl	x0, x22, #4
  426f48:	add	x1, x1, #0x984
  426f4c:	mov	w2, #0x10                  	// #16
  426f50:	mov	x3, x22
  426f54:	bl	416188 <feof@plt+0x128e8>
  426f58:	cbz	x0, 427160 <feof@plt+0x238c0>
  426f5c:	cbz	x22, 426fa8 <feof@plt+0x23708>
  426f60:	cmp	x22, #0x1
  426f64:	b.ne	426f70 <feof@plt+0x236d0>  // b.any
  426f68:	mov	x8, xzr
  426f6c:	b	426f94 <feof@plt+0x236f4>
  426f70:	and	x8, x22, #0xfffffffffffffffe
  426f74:	add	x9, x0, #0x10
  426f78:	mov	x10, x8
  426f7c:	stur	xzr, [x9, #-16]
  426f80:	str	xzr, [x9], #32
  426f84:	subs	x10, x10, #0x2
  426f88:	b.ne	426f7c <feof@plt+0x236dc>  // b.any
  426f8c:	cmp	x22, x8
  426f90:	b.eq	426fa8 <feof@plt+0x23708>  // b.none
  426f94:	sub	x9, x22, x8
  426f98:	add	x8, x0, x8, lsl #4
  426f9c:	subs	x9, x9, #0x1
  426fa0:	str	xzr, [x8], #16
  426fa4:	b.ne	426f9c <feof@plt+0x236fc>  // b.any
  426fa8:	ldp	x9, x8, [x20, #16]
  426fac:	str	w21, [x20, #40]
  426fb0:	mov	w21, #0x79b9                	// #31161
  426fb4:	add	x24, x19, x24, lsl #4
  426fb8:	stp	x0, x22, [x20]
  426fbc:	sub	x8, x9, x8
  426fc0:	movk	w21, #0x9e37, lsl #16
  426fc4:	mov	x22, x19
  426fc8:	stp	x8, xzr, [x20, #16]
  426fcc:	b	426fe4 <feof@plt+0x23744>
  426fd0:	ldr	q0, [x22]
  426fd4:	str	q0, [x14]
  426fd8:	add	x22, x22, #0x10
  426fdc:	cmp	x22, x24
  426fe0:	b.cs	427110 <feof@plt+0x23870>  // b.hs, b.nlast
  426fe4:	ldr	x25, [x22]
  426fe8:	cmp	x25, #0x2
  426fec:	b.cc	426fd8 <feof@plt+0x23738>  // b.lo, b.ul, b.last
  426ff0:	ldr	x8, [x25]
  426ff4:	add	x0, x29, #0x18
  426ff8:	mov	w1, #0x8                   	// #8
  426ffc:	mov	w2, wzr
  427000:	str	x8, [x29, #24]
  427004:	bl	47ade4 <feof@plt+0x77544>
  427008:	ldr	x8, [x25, #8]
  42700c:	mov	w2, w0
  427010:	add	x0, x29, #0x18
  427014:	mov	w1, #0x8                   	// #8
  427018:	str	x8, [x29, #24]
  42701c:	bl	47ade4 <feof@plt+0x77544>
  427020:	ldr	w8, [x25, #16]
  427024:	ldr	w9, [x20, #40]
  427028:	add	w11, w0, w8
  42702c:	sub	w12, w21, w11
  427030:	sub	w8, w8, w0
  427034:	eor	w12, w12, w0, lsr #13
  427038:	sub	w8, w8, w12
  42703c:	sub	w13, w0, w12
  427040:	eor	w8, w8, w12, lsl #8
  427044:	sub	w13, w13, w8
  427048:	sub	w12, w12, w8
  42704c:	eor	w13, w13, w8, lsr #13
  427050:	sub	w12, w12, w13
  427054:	sub	w8, w8, w13
  427058:	eor	w12, w12, w13, lsr #12
  42705c:	sub	w8, w8, w12
  427060:	sub	w13, w13, w12
  427064:	eor	w8, w8, w12, lsl #16
  427068:	sub	w13, w13, w8
  42706c:	sub	w12, w12, w8
  427070:	eor	w13, w13, w8, lsr #5
  427074:	sub	w12, w12, w13
  427078:	add	x10, x23, x9, lsl #4
  42707c:	sub	w8, w8, w13
  427080:	eor	w12, w12, w13, lsr #3
  427084:	ldp	w11, w14, [x10]
  427088:	sub	w8, w8, w12
  42708c:	sub	w13, w13, w12
  427090:	eor	w8, w8, w12, lsl #10
  427094:	sub	w12, w13, w8
  427098:	eor	w13, w12, w8, lsr #15
  42709c:	ldr	w9, [x10, #12]
  4270a0:	mul	x8, x13, x14
  4270a4:	lsr	x12, x8, #32
  4270a8:	sub	w14, w13, w12
  4270ac:	ldr	x8, [x20]
  4270b0:	add	w12, w12, w14, lsr #1
  4270b4:	lsr	w12, w12, w9
  4270b8:	msub	w12, w12, w11, w13
  4270bc:	add	x14, x8, w12, uxtw #4
  4270c0:	ldr	x15, [x14]
  4270c4:	cbz	x15, 426fd0 <feof@plt+0x23730>
  4270c8:	ldr	w14, [x10, #8]
  4270cc:	ldr	x10, [x20, #8]
  4270d0:	sub	w11, w11, #0x2
  4270d4:	mul	x14, x14, x13
  4270d8:	lsr	x14, x14, #32
  4270dc:	sub	w15, w13, w14
  4270e0:	add	w14, w14, w15, lsr #1
  4270e4:	lsr	w9, w14, w9
  4270e8:	msub	w9, w9, w11, w13
  4270ec:	add	w9, w9, #0x1
  4270f0:	add	w11, w9, w12
  4270f4:	cmp	x10, x11
  4270f8:	csel	w12, wzr, w10, hi  // hi = pmore
  4270fc:	sub	w12, w11, w12
  427100:	add	x14, x8, w12, uxtw #4
  427104:	ldr	x11, [x14]
  427108:	cbnz	x11, 4270f0 <feof@plt+0x23850>
  42710c:	b	426fd0 <feof@plt+0x23730>
  427110:	ldrb	w8, [x20, #44]
  427114:	cbz	w8, 427124 <feof@plt+0x23884>
  427118:	mov	x0, x19
  42711c:	bl	4161b8 <feof@plt+0x12918>
  427120:	b	42712c <feof@plt+0x2388c>
  427124:	mov	x0, x19
  427128:	bl	4031d0 <free@plt>
  42712c:	ldp	x20, x19, [sp, #64]
  427130:	ldp	x22, x21, [sp, #48]
  427134:	ldp	x24, x23, [sp, #32]
  427138:	ldr	x25, [sp, #16]
  42713c:	ldp	x29, x30, [sp], #80
  427140:	ret
  427144:	mov	x22, x24
  427148:	ldrb	w8, [x20, #44]
  42714c:	cbnz	w8, 426f40 <feof@plt+0x236a0>
  427150:	mov	w1, #0x10                  	// #16
  427154:	mov	x0, x22
  427158:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  42715c:	cbnz	x0, 426f5c <feof@plt+0x236bc>
  427160:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  427164:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  427168:	add	x0, x0, #0x524
  42716c:	add	x2, x2, #0x53b
  427170:	mov	w1, #0x2b5                 	// #693
  427174:	bl	429434 <feof@plt+0x25b94>
  427178:	ldr	w8, [x0, #32]
  42717c:	ldr	w14, [x0, #40]
  427180:	adrp	x15, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  427184:	add	x15, x15, #0x700
  427188:	add	w8, w8, #0x1
  42718c:	add	x10, x15, x14, lsl #4
  427190:	str	w8, [x0, #32]
  427194:	ldp	w12, w8, [x10]
  427198:	mov	w13, w2
  42719c:	ldr	w16, [x10, #12]
  4271a0:	ldr	x9, [x0]
  4271a4:	mul	x8, x8, x13
  4271a8:	lsr	x8, x8, #32
  4271ac:	sub	w10, w2, w8
  4271b0:	add	w8, w8, w10, lsr #1
  4271b4:	lsr	w8, w8, w16
  4271b8:	msub	w11, w8, w12, w2
  4271bc:	mov	w8, #0x18                  	// #24
  4271c0:	umaddl	x8, w11, w8, x9
  4271c4:	ldr	x17, [x8]
  4271c8:	cbz	x17, 427254 <feof@plt+0x239b4>
  4271cc:	ldr	x10, [x0, #8]
  4271d0:	cmp	x17, #0x1
  4271d4:	b.eq	4271e4 <feof@plt+0x23944>  // b.none
  4271d8:	ldr	x18, [x1]
  4271dc:	cmp	x17, x18
  4271e0:	b.eq	427254 <feof@plt+0x239b4>  // b.none
  4271e4:	add	x8, x15, x14, lsl #4
  4271e8:	ldr	w8, [x8, #8]
  4271ec:	ldr	w14, [x0, #36]
  4271f0:	sub	w15, w12, #0x2
  4271f4:	mul	x8, x8, x13
  4271f8:	lsr	x8, x8, #32
  4271fc:	sub	w13, w2, w8
  427200:	add	w8, w8, w13, lsr #1
  427204:	lsr	w8, w8, w16
  427208:	msub	w8, w8, w15, w2
  42720c:	add	w12, w14, #0x1
  427210:	add	w13, w8, #0x1
  427214:	mov	w14, #0x18                  	// #24
  427218:	b	427220 <feof@plt+0x23980>
  42721c:	add	w12, w12, #0x1
  427220:	add	w8, w13, w11
  427224:	cmp	x10, x8
  427228:	csel	w11, wzr, w10, hi  // hi = pmore
  42722c:	sub	w11, w8, w11
  427230:	str	w12, [x0, #36]
  427234:	umaddl	x8, w11, w14, x9
  427238:	ldr	x15, [x8]
  42723c:	cmp	x15, #0x1
  427240:	b.eq	42721c <feof@plt+0x2397c>  // b.none
  427244:	cbz	x15, 427254 <feof@plt+0x239b4>
  427248:	ldr	x16, [x1]
  42724c:	cmp	x15, x16
  427250:	b.ne	42721c <feof@plt+0x2397c>  // b.any
  427254:	mov	x0, x8
  427258:	ret
  42725c:	stp	x29, x30, [sp, #-48]!
  427260:	stp	x22, x21, [sp, #16]
  427264:	stp	x20, x19, [sp, #32]
  427268:	mov	x29, sp
  42726c:	mov	w20, w3
  427270:	mov	w22, w2
  427274:	mov	x21, x1
  427278:	cmp	w3, #0x1
  42727c:	mov	x19, x0
  427280:	b.ne	42729c <feof@plt+0x239fc>  // b.any
  427284:	ldp	x8, x9, [x19, #8]
  427288:	add	x8, x8, x8, lsl #1
  42728c:	cmp	x8, x9, lsl #2
  427290:	b.hi	42729c <feof@plt+0x239fc>  // b.pmore
  427294:	mov	x0, x19
  427298:	bl	4273d8 <feof@plt+0x23b38>
  42729c:	ldr	w8, [x19, #32]
  4272a0:	ldr	w9, [x19, #40]
  4272a4:	adrp	x10, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4272a8:	add	x10, x10, #0x700
  4272ac:	add	w8, w8, #0x1
  4272b0:	add	x10, x10, x9, lsl #4
  4272b4:	str	w8, [x19, #32]
  4272b8:	ldp	w11, w9, [x10]
  4272bc:	mov	w13, w22
  4272c0:	ldr	w12, [x10, #12]
  4272c4:	ldr	x8, [x19]
  4272c8:	mul	x9, x9, x13
  4272cc:	lsr	x9, x9, #32
  4272d0:	sub	w14, w22, w9
  4272d4:	add	w9, w9, w14, lsr #1
  4272d8:	lsr	w9, w9, w12
  4272dc:	msub	w9, w9, w11, w22
  4272e0:	mov	w14, #0x18                  	// #24
  4272e4:	umaddl	x0, w9, w14, x8
  4272e8:	ldr	x15, [x0]
  4272ec:	cbz	x15, 42738c <feof@plt+0x23aec>
  4272f0:	ldr	w14, [x10, #8]
  4272f4:	ldr	x10, [x19, #8]
  4272f8:	cmp	x15, #0x1
  4272fc:	b.eq	427310 <feof@plt+0x23a70>  // b.none
  427300:	ldr	x16, [x21]
  427304:	cmp	x15, x16
  427308:	b.eq	4273c8 <feof@plt+0x23b28>  // b.none
  42730c:	mov	x0, xzr
  427310:	mul	x13, x14, x13
  427314:	lsr	x13, x13, #32
  427318:	sub	w14, w22, w13
  42731c:	sub	w15, w11, #0x2
  427320:	ldr	w11, [x19, #36]
  427324:	add	w13, w13, w14, lsr #1
  427328:	lsr	w12, w13, w12
  42732c:	msub	w12, w12, w15, w22
  427330:	add	w12, w12, #0x1
  427334:	mov	w13, #0x18                  	// #24
  427338:	add	w11, w11, #0x1
  42733c:	add	w9, w12, w9
  427340:	cmp	x10, x9
  427344:	csel	w14, wzr, w10, hi  // hi = pmore
  427348:	sub	w9, w9, w14
  42734c:	str	w11, [x19, #36]
  427350:	umaddl	x14, w9, w13, x8
  427354:	ldr	x15, [x14]
  427358:	cbz	x15, 427390 <feof@plt+0x23af0>
  42735c:	cmp	x15, #0x1
  427360:	b.eq	427378 <feof@plt+0x23ad8>  // b.none
  427364:	ldr	x16, [x21]
  427368:	add	w11, w11, #0x1
  42736c:	cmp	x15, x16
  427370:	b.ne	42733c <feof@plt+0x23a9c>  // b.any
  427374:	b	427384 <feof@plt+0x23ae4>
  427378:	cmp	x0, #0x0
  42737c:	csel	x0, x14, x0, eq  // eq = none
  427380:	b	427338 <feof@plt+0x23a98>
  427384:	mov	x0, x14
  427388:	b	4273c8 <feof@plt+0x23b28>
  42738c:	mov	x0, xzr
  427390:	cbz	w20, 4273ac <feof@plt+0x23b0c>
  427394:	cbz	x0, 4273b4 <feof@plt+0x23b14>
  427398:	ldr	x8, [x19, #24]
  42739c:	sub	x8, x8, #0x1
  4273a0:	str	x8, [x19, #24]
  4273a4:	str	xzr, [x0]
  4273a8:	b	4273c8 <feof@plt+0x23b28>
  4273ac:	mov	x0, xzr
  4273b0:	b	4273c8 <feof@plt+0x23b28>
  4273b4:	ldr	x10, [x19, #16]
  4273b8:	mov	w11, #0x18                  	// #24
  4273bc:	umaddl	x0, w9, w11, x8
  4273c0:	add	x10, x10, #0x1
  4273c4:	str	x10, [x19, #16]
  4273c8:	ldp	x20, x19, [sp, #32]
  4273cc:	ldp	x22, x21, [sp, #16]
  4273d0:	ldp	x29, x30, [sp], #48
  4273d4:	ret
  4273d8:	stp	x29, x30, [sp, #-64]!
  4273dc:	stp	x24, x23, [sp, #16]
  4273e0:	stp	x22, x21, [sp, #32]
  4273e4:	stp	x20, x19, [sp, #48]
  4273e8:	mov	x29, sp
  4273ec:	ldp	x8, x9, [x0, #16]
  4273f0:	ldp	x19, x24, [x0]
  4273f4:	mov	x20, x0
  4273f8:	adrp	x23, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4273fc:	sub	x8, x8, x9
  427400:	lsl	x0, x8, #1
  427404:	cmp	x0, x24
  427408:	add	x23, x23, #0x700
  42740c:	b.hi	42742c <feof@plt+0x23b8c>  // b.pmore
  427410:	ldr	w21, [x20, #40]
  427414:	cmp	x24, #0x21
  427418:	b.cc	4275cc <feof@plt+0x23d2c>  // b.lo, b.ul, b.last
  42741c:	lsl	w8, w8, #3
  427420:	cmp	x24, x8
  427424:	mov	x22, x24
  427428:	b.ls	427440 <feof@plt+0x23ba0>  // b.plast
  42742c:	bl	427ae8 <feof@plt+0x24248>
  427430:	mov	w8, w0
  427434:	lsl	x8, x8, #4
  427438:	ldr	w22, [x23, x8]
  42743c:	mov	w21, w0
  427440:	ldrb	w8, [x20, #44]
  427444:	cbz	w8, 4275d8 <feof@plt+0x23d38>
  427448:	add	x8, x22, x22, lsl #1
  42744c:	adrp	x1, 426000 <feof@plt+0x22760>
  427450:	lsl	x0, x8, #3
  427454:	add	x1, x1, #0x988
  427458:	mov	w2, #0x18                  	// #24
  42745c:	mov	x3, x22
  427460:	bl	416188 <feof@plt+0x128e8>
  427464:	cbz	x0, 4275e8 <feof@plt+0x23d48>
  427468:	mov	w8, #0x18                  	// #24
  42746c:	cbz	x22, 4274c0 <feof@plt+0x23c20>
  427470:	cmp	x22, #0x1
  427474:	b.ne	427480 <feof@plt+0x23be0>  // b.any
  427478:	mov	x9, xzr
  42747c:	b	4274a8 <feof@plt+0x23c08>
  427480:	and	x9, x22, #0xfffffffffffffffe
  427484:	mov	x10, x9
  427488:	mov	x11, x0
  42748c:	str	xzr, [x11]
  427490:	str	xzr, [x11, #24]
  427494:	subs	x10, x10, #0x2
  427498:	add	x11, x11, #0x30
  42749c:	b.ne	42748c <feof@plt+0x23bec>  // b.any
  4274a0:	cmp	x22, x9
  4274a4:	b.eq	4274c0 <feof@plt+0x23c20>  // b.none
  4274a8:	mov	w11, #0x18                  	// #24
  4274ac:	sub	x10, x22, x9
  4274b0:	madd	x9, x9, x11, x0
  4274b4:	subs	x10, x10, #0x1
  4274b8:	str	xzr, [x9], #24
  4274bc:	b.ne	4274b4 <feof@plt+0x23c14>  // b.any
  4274c0:	ldp	x10, x9, [x20, #16]
  4274c4:	madd	x8, x24, x8, x19
  4274c8:	stp	x0, x22, [x20]
  4274cc:	str	w21, [x20, #40]
  4274d0:	sub	x9, x10, x9
  4274d4:	stp	x9, xzr, [x20, #16]
  4274d8:	mov	w9, #0x18                  	// #24
  4274dc:	mov	x10, x19
  4274e0:	b	427500 <feof@plt+0x23c60>
  4274e4:	ldr	x11, [x10, #16]
  4274e8:	ldr	q0, [x10]
  4274ec:	str	x11, [x18, #16]
  4274f0:	str	q0, [x18]
  4274f4:	add	x10, x10, #0x18
  4274f8:	cmp	x10, x8
  4274fc:	b.cs	427594 <feof@plt+0x23cf4>  // b.hs, b.nlast
  427500:	ldr	x11, [x10]
  427504:	cmp	x11, #0x2
  427508:	b.cc	4274f4 <feof@plt+0x23c54>  // b.lo, b.ul, b.last
  42750c:	ldr	w12, [x20, #40]
  427510:	ubfx	x17, x11, #3, #32
  427514:	add	x14, x23, x12, lsl #4
  427518:	ldp	w15, w13, [x14]
  42751c:	lsr	x12, x11, #3
  427520:	ldr	w16, [x14, #12]
  427524:	mul	x11, x17, x13
  427528:	lsr	x13, x11, #32
  42752c:	sub	w18, w12, w13
  427530:	ldr	x11, [x20]
  427534:	add	w13, w13, w18, lsr #1
  427538:	lsr	w13, w13, w16
  42753c:	msub	w13, w13, w15, w12
  427540:	umaddl	x18, w13, w9, x11
  427544:	ldr	x0, [x18]
  427548:	cbz	x0, 4274e4 <feof@plt+0x23c44>
  42754c:	ldr	w18, [x14, #8]
  427550:	ldr	x14, [x20, #8]
  427554:	sub	w15, w15, #0x2
  427558:	mul	x17, x17, x18
  42755c:	lsr	x17, x17, #32
  427560:	sub	w18, w12, w17
  427564:	add	w17, w17, w18, lsr #1
  427568:	lsr	w16, w17, w16
  42756c:	msub	w12, w16, w15, w12
  427570:	add	w12, w12, #0x1
  427574:	add	w13, w12, w13
  427578:	cmp	x14, x13
  42757c:	csel	w15, wzr, w14, hi  // hi = pmore
  427580:	sub	w13, w13, w15
  427584:	umaddl	x18, w13, w9, x11
  427588:	ldr	x15, [x18]
  42758c:	cbnz	x15, 427574 <feof@plt+0x23cd4>
  427590:	b	4274e4 <feof@plt+0x23c44>
  427594:	ldrb	w8, [x20, #44]
  427598:	cbz	w8, 4275b4 <feof@plt+0x23d14>
  42759c:	mov	x0, x19
  4275a0:	ldp	x20, x19, [sp, #48]
  4275a4:	ldp	x22, x21, [sp, #32]
  4275a8:	ldp	x24, x23, [sp, #16]
  4275ac:	ldp	x29, x30, [sp], #64
  4275b0:	b	4161b8 <feof@plt+0x12918>
  4275b4:	mov	x0, x19
  4275b8:	ldp	x20, x19, [sp, #48]
  4275bc:	ldp	x22, x21, [sp, #32]
  4275c0:	ldp	x24, x23, [sp, #16]
  4275c4:	ldp	x29, x30, [sp], #64
  4275c8:	b	4031d0 <free@plt>
  4275cc:	mov	x22, x24
  4275d0:	ldrb	w8, [x20, #44]
  4275d4:	cbnz	w8, 427448 <feof@plt+0x23ba8>
  4275d8:	mov	w1, #0x18                  	// #24
  4275dc:	mov	x0, x22
  4275e0:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  4275e4:	cbnz	x0, 427468 <feof@plt+0x23bc8>
  4275e8:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4275ec:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4275f0:	add	x0, x0, #0x524
  4275f4:	add	x2, x2, #0x53b
  4275f8:	mov	w1, #0x2b5                 	// #693
  4275fc:	bl	429434 <feof@plt+0x25b94>
  427600:	stp	x29, x30, [sp, #-64]!
  427604:	stp	x28, x23, [sp, #16]
  427608:	stp	x22, x21, [sp, #32]
  42760c:	stp	x20, x19, [sp, #48]
  427610:	mov	x29, sp
  427614:	sub	sp, sp, #0x1, lsl #12
  427618:	sub	sp, sp, #0x30
  42761c:	ldr	x8, [x1]
  427620:	adrp	x23, 47e000 <_obstack_memory_used@@Base+0x22fc>
  427624:	mov	x20, x2
  427628:	mov	x21, x1
  42762c:	mov	x19, x0
  427630:	add	x23, x23, #0x65f
  427634:	mov	x0, x8
  427638:	mov	x1, x23
  42763c:	mov	x22, x8
  427640:	bl	402fe0 <strstr@plt>
  427644:	add	x8, x0, #0x4
  427648:	cbnz	x0, 427634 <feof@plt+0x23d94>
  42764c:	ldr	w3, [x21, #16]
  427650:	ldr	x4, [x21, #8]
  427654:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  427658:	add	x1, x1, #0x610
  42765c:	add	x0, sp, #0x30
  427660:	mov	x2, x22
  427664:	bl	403340 <sprintf@plt>
  427668:	strb	wzr, [sp, #96]
  42766c:	ldr	x8, [x19]
  427670:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  427674:	ldr	x0, [x9, #1096]
  427678:	ldr	x3, [x19, #48]
  42767c:	lsr	x12, x8, #11
  427680:	cmp	x12, #0x5
  427684:	mov	x4, x8
  427688:	b.cc	4276a4 <feof@plt+0x23e04>  // b.lo, b.ul, b.last
  42768c:	lsr	x9, x8, #21
  427690:	cmp	x9, #0x4
  427694:	b.hi	4276a0 <feof@plt+0x23e00>  // b.pmore
  427698:	lsr	x4, x8, #10
  42769c:	b	4276a4 <feof@plt+0x23e04>
  4276a0:	lsr	x4, x8, #20
  4276a4:	ldr	x13, [x19, #16]
  4276a8:	cmp	x8, #0xa00, lsl #12
  4276ac:	mov	w9, #0x4d                  	// #77
  4276b0:	mov	w10, #0x6b                  	// #107
  4276b4:	ldr	d0, [x20]
  4276b8:	mov	w11, #0x20                  	// #32
  4276bc:	csel	w14, w10, w9, cc  // cc = lo, ul, last
  4276c0:	cmp	x12, #0x5
  4276c4:	csel	w5, w11, w14, cc  // cc = lo, ul, last
  4276c8:	mov	x14, #0x4059000000000000    	// #4636737291354636288
  4276cc:	lsr	x12, x13, #11
  4276d0:	cmp	x12, #0x5
  4276d4:	ucvtf	d1, x8
  4276d8:	fmov	d2, x14
  4276dc:	mov	x6, x13
  4276e0:	b.cc	4276fc <feof@plt+0x23e5c>  // b.lo, b.ul, b.last
  4276e4:	lsr	x8, x13, #21
  4276e8:	cmp	x8, #0x4
  4276ec:	b.hi	4276f8 <feof@plt+0x23e58>  // b.pmore
  4276f0:	lsr	x6, x13, #10
  4276f4:	b	4276fc <feof@plt+0x23e5c>
  4276f8:	lsr	x6, x13, #20
  4276fc:	ldr	x8, [x19, #8]
  427700:	cmp	x13, #0xa00, lsl #12
  427704:	ldr	x13, [x19, #32]
  427708:	fmul	d3, d1, d2
  42770c:	ldr	d2, [x20, #8]
  427710:	mov	x14, #0x4059000000000000    	// #4636737291354636288
  427714:	fmov	d4, x14
  427718:	ucvtf	d1, x8
  42771c:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  427720:	cmp	x12, #0x5
  427724:	lsr	x10, x13, #11
  427728:	ucvtf	d0, d0
  42772c:	fmul	d1, d1, d4
  427730:	csel	w7, w11, w9, cc  // cc = lo, ul, last
  427734:	cmp	x10, #0x5
  427738:	ucvtf	d2, d2
  42773c:	mov	x9, x13
  427740:	b.cc	42775c <feof@plt+0x23ebc>  // b.lo, b.ul, b.last
  427744:	lsr	x9, x13, #21
  427748:	cmp	x9, #0x4
  42774c:	b.hi	427758 <feof@plt+0x23eb8>  // b.pmore
  427750:	lsr	x9, x13, #10
  427754:	b	42775c <feof@plt+0x23ebc>
  427758:	lsr	x9, x13, #20
  42775c:	ldr	x14, [x19, #40]
  427760:	cmp	x13, #0xa00, lsl #12
  427764:	mov	w11, #0x4d                  	// #77
  427768:	mov	w12, #0x6b                  	// #107
  42776c:	csel	w15, w12, w11, cc  // cc = lo, ul, last
  427770:	cmp	x10, #0x5
  427774:	mov	w13, #0x20                  	// #32
  427778:	csel	w10, w13, w15, cc  // cc = lo, ul, last
  42777c:	lsr	x15, x14, #11
  427780:	fdiv	d0, d3, d0
  427784:	cmp	x15, #0x5
  427788:	fdiv	d1, d1, d2
  42778c:	mov	x16, x14
  427790:	b.cc	4277ac <feof@plt+0x23f0c>  // b.lo, b.ul, b.last
  427794:	lsr	x16, x14, #21
  427798:	cmp	x16, #0x4
  42779c:	b.hi	4277a8 <feof@plt+0x23f08>  // b.pmore
  4277a0:	lsr	x16, x14, #10
  4277a4:	b	4277ac <feof@plt+0x23f0c>
  4277a8:	lsr	x16, x14, #20
  4277ac:	cmp	x14, #0xa00, lsl #12
  4277b0:	csel	w11, w12, w11, cc  // cc = lo, ul, last
  4277b4:	cmp	x15, #0x5
  4277b8:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4277bc:	csel	w11, w13, w11, cc  // cc = lo, ul, last
  4277c0:	add	x1, x1, #0x61b
  4277c4:	add	x2, sp, #0x30
  4277c8:	str	x16, [sp, #24]
  4277cc:	str	w10, [sp, #16]
  4277d0:	stp	x8, x9, [sp]
  4277d4:	str	w11, [sp, #32]
  4277d8:	bl	4030d0 <fprintf@plt>
  4277dc:	add	sp, sp, #0x1, lsl #12
  4277e0:	add	sp, sp, #0x30
  4277e4:	ldp	x20, x19, [sp, #48]
  4277e8:	ldp	x22, x21, [sp, #32]
  4277ec:	ldp	x28, x23, [sp, #16]
  4277f0:	ldp	x29, x30, [sp], #64
  4277f4:	ret
  4277f8:	ldr	x8, [x0, #8]
  4277fc:	ldr	x9, [x1, #8]
  427800:	ldr	x10, [x8]
  427804:	ldr	x11, [x9]
  427808:	cmp	x10, x11
  42780c:	b.ne	427838 <feof@plt+0x23f98>  // b.any
  427810:	ldr	x10, [x8, #16]
  427814:	ldr	x11, [x9, #16]
  427818:	cmp	x10, x11
  42781c:	b.ne	427838 <feof@plt+0x23f98>  // b.any
  427820:	ldr	x10, [x8, #8]
  427824:	ldr	x11, [x9, #8]
  427828:	cmp	x10, x11
  42782c:	b.ne	427844 <feof@plt+0x23fa4>  // b.any
  427830:	mov	w0, wzr
  427834:	ret
  427838:	b.cs	427854 <feof@plt+0x23fb4>  // b.hs, b.nlast
  42783c:	mov	w0, #0x1                   	// #1
  427840:	ret
  427844:	ldr	x8, [x8, #8]
  427848:	ldr	x9, [x9, #8]
  42784c:	cmp	x8, x9
  427850:	b.cc	42783c <feof@plt+0x23f9c>  // b.lo, b.ul, b.last
  427854:	mov	w0, #0xffffffff            	// #-1
  427858:	ret
  42785c:	ret
  427860:	mov	w0, wzr
  427864:	ret
  427868:	mov	w0, #0x1                   	// #1
  42786c:	ret
  427870:	mov	w0, wzr
  427874:	ret
  427878:	mov	w0, wzr
  42787c:	ret
  427880:	mov	w0, #0x1                   	// #1
  427884:	ret
  427888:	mov	w0, wzr
  42788c:	ret
  427890:	mov	w0, #0x1                   	// #1
  427894:	ret
  427898:	mov	w0, #0x1                   	// #1
  42789c:	ret
  4278a0:	mov	w0, wzr
  4278a4:	ret
  4278a8:	mov	w0, #0x1                   	// #1
  4278ac:	ret
  4278b0:	mov	w0, wzr
  4278b4:	ret
  4278b8:	mov	w0, #0x1                   	// #1
  4278bc:	ret
  4278c0:	mov	w0, #0x1                   	// #1
  4278c4:	ret
  4278c8:	mov	w0, wzr
  4278cc:	ret
  4278d0:	mov	w0, #0x1                   	// #1
  4278d4:	ret
  4278d8:	mov	w0, wzr
  4278dc:	ret
  4278e0:	mov	w0, #0x1                   	// #1
  4278e4:	ret
  4278e8:	ret
  4278ec:	ret
  4278f0:	mov	w0, wzr
  4278f4:	ret
  4278f8:	mov	w0, wzr
  4278fc:	ret
  427900:	mov	w0, wzr
  427904:	ret
  427908:	mov	w0, #0x1                   	// #1
  42790c:	ret
  427910:	cmp	x2, #0x0
  427914:	cset	w0, eq  // eq = none
  427918:	ret
  42791c:	mov	w0, #0x1                   	// #1
  427920:	ret
  427924:	mov	w0, wzr
  427928:	ret
  42792c:	mov	w0, #0x1                   	// #1
  427930:	ret
  427934:	mov	w0, wzr
  427938:	ret
  42793c:	mov	w0, #0x1                   	// #1
  427940:	ret
  427944:	mov	w0, wzr
  427948:	ret
  42794c:	stp	x29, x30, [sp, #-16]!
  427950:	mov	x29, sp
  427954:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  427958:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42795c:	add	x0, x0, #0x6b0
  427960:	add	x2, x2, #0x6c2
  427964:	mov	w1, #0xf7                  	// #247
  427968:	bl	429434 <feof@plt+0x25b94>
  42796c:	mov	w0, wzr
  427970:	ret
  427974:	mov	w0, wzr
  427978:	ret
  42797c:	mov	w0, wzr
  427980:	ret
  427984:	mov	x0, xzr
  427988:	ret
  42798c:	ret
  427990:	ret
  427994:	ret
  427998:	ret
  42799c:	ret
  4279a0:	ret
  4279a4:	mov	w0, wzr
  4279a8:	ret
  4279ac:	mov	w0, wzr
  4279b0:	ret
  4279b4:	mov	w0, #0x1                   	// #1
  4279b8:	ret
  4279bc:	mov	w0, #0x1                   	// #1
  4279c0:	ret
  4279c4:	mov	w0, wzr
  4279c8:	ret
  4279cc:	mov	w0, #0x1                   	// #1
  4279d0:	ret
  4279d4:	mov	w0, wzr
  4279d8:	ret
  4279dc:	mov	w0, #0x1                   	// #1
  4279e0:	ret
  4279e4:	mov	w0, wzr
  4279e8:	ret
  4279ec:	mov	w0, wzr
  4279f0:	ret
  4279f4:	mov	w0, wzr
  4279f8:	ret
  4279fc:	mov	w0, #0x1                   	// #1
  427a00:	ret
  427a04:	ret
  427a08:	mov	x0, xzr
  427a0c:	ret
  427a10:	mov	x0, xzr
  427a14:	ret
  427a18:	mov	w0, wzr
  427a1c:	ret
  427a20:	mov	x0, xzr
  427a24:	ret
  427a28:	mov	x0, xzr
  427a2c:	ret
  427a30:	mov	x0, xzr
  427a34:	ret
  427a38:	mov	x0, xzr
  427a3c:	ret
  427a40:	mov	x0, xzr
  427a44:	ret
  427a48:	mov	x0, xzr
  427a4c:	ret
  427a50:	mov	x0, xzr
  427a54:	ret
  427a58:	mov	x0, xzr
  427a5c:	ret
  427a60:	mov	x0, xzr
  427a64:	ret
  427a68:	mov	x0, xzr
  427a6c:	ret
  427a70:	mov	x0, xzr
  427a74:	ret
  427a78:	mov	x0, xzr
  427a7c:	ret
  427a80:	mov	w0, wzr
  427a84:	ret
  427a88:	ret
  427a8c:	ret
  427a90:	mov	w0, wzr
  427a94:	ret
  427a98:	mov	w0, wzr
  427a9c:	ret
  427aa0:	mov	w0, #0x1                   	// #1
  427aa4:	ret
  427aa8:	mov	w0, wzr
  427aac:	ret
  427ab0:	mov	x0, xzr
  427ab4:	ret
  427ab8:	mov	w0, #0x2                   	// #2
  427abc:	ret
  427ac0:	mov	w0, #0x2                   	// #2
  427ac4:	ret
  427ac8:	mov	w0, #0x1                   	// #1
  427acc:	ret
  427ad0:	mov	w0, #0x1                   	// #1
  427ad4:	ret
  427ad8:	mov	x0, xzr
  427adc:	ret
  427ae0:	mov	w0, #0x1                   	// #1
  427ae4:	ret
  427ae8:	stp	x29, x30, [sp, #-16]!
  427aec:	mov	x29, sp
  427af0:	adrp	x10, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  427af4:	mov	x8, x0
  427af8:	mov	w9, wzr
  427afc:	mov	w0, #0x1e                  	// #30
  427b00:	add	x10, x10, #0x700
  427b04:	sub	w11, w0, w9
  427b08:	add	w11, w9, w11, lsr #1
  427b0c:	lsl	x12, x11, #4
  427b10:	ldr	w12, [x10, x12]
  427b14:	cmp	x12, x8
  427b18:	csel	w0, w0, w11, cc  // cc = lo, ul, last
  427b1c:	csinc	w9, w9, w11, cs  // cs = hs, nlast
  427b20:	cmp	w0, w9
  427b24:	b.ne	427b04 <feof@plt+0x24264>  // b.any
  427b28:	mov	w9, w0
  427b2c:	lsl	x9, x9, #4
  427b30:	ldr	w9, [x10, x9]
  427b34:	cmp	x9, x8
  427b38:	b.cc	427b44 <feof@plt+0x242a4>  // b.lo, b.ul, b.last
  427b3c:	ldp	x29, x30, [sp], #16
  427b40:	ret
  427b44:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  427b48:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  427b4c:	add	x0, x0, #0x8e0
  427b50:	add	x2, x2, #0x8f7
  427b54:	mov	w1, #0x60                  	// #96
  427b58:	bl	429434 <feof@plt+0x25b94>
  427b5c:	stp	x29, x30, [sp, #-32]!
  427b60:	str	x19, [sp, #16]
  427b64:	mov	x29, sp
  427b68:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  427b6c:	add	x8, x8, #0x28
  427b70:	ldarb	w8, [x8]
  427b74:	tbz	w8, #0, 427b8c <feof@plt+0x242ec>
  427b78:	ldr	x19, [sp, #16]
  427b7c:	adrp	x0, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  427b80:	add	x0, x0, #0xff0
  427b84:	ldp	x29, x30, [sp], #32
  427b88:	ret
  427b8c:	adrp	x0, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  427b90:	add	x0, x0, #0x28
  427b94:	bl	4037a0 <__cxa_guard_acquire@plt>
  427b98:	cbz	w0, 427b78 <feof@plt+0x242d8>
  427b9c:	adrp	x19, 4f4000 <stderr@@GLIBC_2.17+0x1bb8>
  427ba0:	add	x19, x19, #0xff0
  427ba4:	mov	x0, x19
  427ba8:	bl	427bd8 <feof@plt+0x24338>
  427bac:	adrp	x0, 427000 <feof@plt+0x23760>
  427bb0:	adrp	x2, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  427bb4:	add	x0, x0, #0xe3c
  427bb8:	add	x2, x2, #0x4b0
  427bbc:	mov	x1, x19
  427bc0:	bl	403520 <__cxa_atexit@plt>
  427bc4:	adrp	x0, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  427bc8:	add	x0, x0, #0x28
  427bcc:	bl	403280 <__cxa_guard_release@plt>
  427bd0:	b	427b78 <feof@plt+0x242d8>
  427bd4:	ret
  427bd8:	stp	x29, x30, [sp, #-64]!
  427bdc:	str	x23, [sp, #16]
  427be0:	stp	x22, x21, [sp, #32]
  427be4:	stp	x20, x19, [sp, #48]
  427be8:	mov	x29, sp
  427bec:	mov	x19, x0
  427bf0:	mov	w0, #0x30                  	// #48
  427bf4:	bl	403440 <_Znwm@plt>
  427bf8:	mov	x20, x0
  427bfc:	mov	w8, wzr
  427c00:	mov	w23, #0x1e                  	// #30
  427c04:	stp	xzr, xzr, [x0, #24]
  427c08:	str	xzr, [x0, #16]
  427c0c:	strb	wzr, [x0, #44]
  427c10:	sub	w9, w23, w8
  427c14:	add	w9, w8, w9, lsr #1
  427c18:	cmp	w9, #0x0
  427c1c:	csel	w23, w23, w9, eq  // eq = none
  427c20:	csinc	w8, w8, wzr, ne  // ne = any
  427c24:	cmp	w23, w8
  427c28:	b.ne	427c10 <feof@plt+0x24370>  // b.any
  427c2c:	cbz	w23, 427e0c <feof@plt+0x2456c>
  427c30:	mov	w8, w23
  427c34:	adrp	x22, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  427c38:	lsl	x8, x8, #4
  427c3c:	add	x22, x22, #0x700
  427c40:	ldr	w21, [x22, x8]
  427c44:	mov	w1, #0x10                  	// #16
  427c48:	mov	x0, x21
  427c4c:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  427c50:	cbz	x0, 427e24 <feof@plt+0x24584>
  427c54:	and	x8, x21, #0xfffffffe
  427c58:	add	x9, x0, #0x10
  427c5c:	mov	x10, x8
  427c60:	stur	xzr, [x9, #-16]
  427c64:	str	xzr, [x9], #32
  427c68:	subs	x10, x10, #0x2
  427c6c:	b.ne	427c60 <feof@plt+0x243c0>  // b.any
  427c70:	cmp	x8, x21
  427c74:	b.eq	427c94 <feof@plt+0x243f4>  // b.none
  427c78:	lsl	x9, x21, #4
  427c7c:	and	x9, x9, #0xfffffffe0
  427c80:	sub	x8, x21, x8
  427c84:	add	x9, x0, x9
  427c88:	subs	x8, x8, #0x1
  427c8c:	str	xzr, [x9], #16
  427c90:	b.ne	427c88 <feof@plt+0x243e8>  // b.any
  427c94:	stp	x0, x21, [x20]
  427c98:	mov	w0, #0x30                  	// #48
  427c9c:	str	w23, [x20, #40]
  427ca0:	str	x20, [x19, #40]
  427ca4:	bl	403440 <_Znwm@plt>
  427ca8:	mov	x20, x0
  427cac:	mov	w8, wzr
  427cb0:	mov	w23, #0x1e                  	// #30
  427cb4:	stp	xzr, xzr, [x0, #24]
  427cb8:	str	xzr, [x0, #16]
  427cbc:	strb	wzr, [x0, #44]
  427cc0:	sub	w9, w23, w8
  427cc4:	add	w9, w8, w9, lsr #1
  427cc8:	cmp	w9, #0x0
  427ccc:	csel	w23, w23, w9, eq  // eq = none
  427cd0:	csinc	w8, w8, wzr, ne  // ne = any
  427cd4:	cmp	w23, w8
  427cd8:	b.ne	427cc0 <feof@plt+0x24420>  // b.any
  427cdc:	cbz	w23, 427e0c <feof@plt+0x2456c>
  427ce0:	mov	w8, w23
  427ce4:	lsl	x8, x8, #4
  427ce8:	ldr	w21, [x22, x8]
  427cec:	mov	w1, #0x18                  	// #24
  427cf0:	mov	x0, x21
  427cf4:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  427cf8:	cbz	x0, 427e24 <feof@plt+0x24584>
  427cfc:	and	x8, x21, #0xfffffffe
  427d00:	mov	x9, x8
  427d04:	mov	x10, x0
  427d08:	str	xzr, [x10]
  427d0c:	str	xzr, [x10, #24]
  427d10:	subs	x9, x9, #0x2
  427d14:	add	x10, x10, #0x30
  427d18:	b.ne	427d08 <feof@plt+0x24468>  // b.any
  427d1c:	cmp	x8, x21
  427d20:	b.eq	427d40 <feof@plt+0x244a0>  // b.none
  427d24:	lsr	x9, x21, #1
  427d28:	mov	w10, #0x30                  	// #48
  427d2c:	sub	x8, x21, x8
  427d30:	madd	x9, x9, x10, x0
  427d34:	subs	x8, x8, #0x1
  427d38:	str	xzr, [x9], #24
  427d3c:	b.ne	427d34 <feof@plt+0x24494>  // b.any
  427d40:	stp	x0, x21, [x20]
  427d44:	mov	w0, #0x30                  	// #48
  427d48:	str	w23, [x20, #40]
  427d4c:	str	x20, [x19, #48]
  427d50:	bl	403440 <_Znwm@plt>
  427d54:	mov	x20, x0
  427d58:	mov	w8, wzr
  427d5c:	mov	w23, #0x1e                  	// #30
  427d60:	stp	xzr, xzr, [x0, #24]
  427d64:	str	xzr, [x0, #16]
  427d68:	strb	wzr, [x0, #44]
  427d6c:	sub	w9, w23, w8
  427d70:	add	w9, w8, w9, lsr #1
  427d74:	cmp	w9, #0x0
  427d78:	csel	w23, w23, w9, eq  // eq = none
  427d7c:	csinc	w8, w8, wzr, ne  // ne = any
  427d80:	cmp	w23, w8
  427d84:	b.ne	427d6c <feof@plt+0x244cc>  // b.any
  427d88:	cbz	w23, 427e0c <feof@plt+0x2456c>
  427d8c:	mov	w8, w23
  427d90:	lsl	x8, x8, #4
  427d94:	ldr	w21, [x22, x8]
  427d98:	mov	w1, #0x18                  	// #24
  427d9c:	mov	x0, x21
  427da0:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  427da4:	cbz	x0, 427e24 <feof@plt+0x24584>
  427da8:	and	x8, x21, #0xfffffffe
  427dac:	mov	x9, x8
  427db0:	mov	x10, x0
  427db4:	str	xzr, [x10]
  427db8:	str	xzr, [x10, #24]
  427dbc:	subs	x9, x9, #0x2
  427dc0:	add	x10, x10, #0x30
  427dc4:	b.ne	427db4 <feof@plt+0x24514>  // b.any
  427dc8:	cmp	x8, x21
  427dcc:	b.eq	427dec <feof@plt+0x2454c>  // b.none
  427dd0:	lsr	x9, x21, #1
  427dd4:	mov	w10, #0x30                  	// #48
  427dd8:	sub	x8, x21, x8
  427ddc:	madd	x9, x9, x10, x0
  427de0:	subs	x8, x8, #0x1
  427de4:	str	xzr, [x9], #24
  427de8:	b.ne	427de0 <feof@plt+0x24540>  // b.any
  427dec:	stp	x0, x21, [x20]
  427df0:	str	w23, [x20, #40]
  427df4:	str	x20, [x19]
  427df8:	ldp	x20, x19, [sp, #48]
  427dfc:	ldp	x22, x21, [sp, #32]
  427e00:	ldr	x23, [sp, #16]
  427e04:	ldp	x29, x30, [sp], #64
  427e08:	ret
  427e0c:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  427e10:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  427e14:	add	x0, x0, #0x8e0
  427e18:	add	x2, x2, #0x8f7
  427e1c:	mov	w1, #0x60                  	// #96
  427e20:	bl	429434 <feof@plt+0x25b94>
  427e24:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  427e28:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  427e2c:	add	x0, x0, #0x524
  427e30:	add	x2, x2, #0x53b
  427e34:	mov	w1, #0x2b5                 	// #693
  427e38:	bl	429434 <feof@plt+0x25b94>
  427e3c:	stp	x29, x30, [sp, #-48]!
  427e40:	stp	x22, x21, [sp, #16]
  427e44:	stp	x20, x19, [sp, #32]
  427e48:	mov	x29, sp
  427e4c:	ldr	x20, [x0, #40]
  427e50:	mov	x19, x0
  427e54:	ldr	x8, [x20, #8]
  427e58:	cmp	x8, #0x1
  427e5c:	b.lt	427e80 <feof@plt+0x245e0>  // b.tstop
  427e60:	ldr	x21, [x20]
  427e64:	add	x22, x21, x8, lsl #4
  427e68:	ldr	x8, [x21]
  427e6c:	cmp	x8, #0x1
  427e70:	b.hi	427e88 <feof@plt+0x245e8>  // b.pmore
  427e74:	add	x21, x21, #0x10
  427e78:	cmp	x21, x22
  427e7c:	b.cc	427e68 <feof@plt+0x245c8>  // b.lo, b.ul, b.last
  427e80:	mov	x21, xzr
  427e84:	mov	x22, xzr
  427e88:	orr	x8, x21, x22
  427e8c:	cbnz	x8, 427edc <feof@plt+0x2463c>
  427e90:	cbnz	x20, 427f18 <feof@plt+0x24678>
  427e94:	ldr	x20, [x19, #48]
  427e98:	cbnz	x20, 427f6c <feof@plt+0x246cc>
  427e9c:	ldr	x19, [x19]
  427ea0:	cbz	x19, 427fa8 <feof@plt+0x24708>
  427ea4:	ldr	x8, [x19, #8]
  427ea8:	mov	x9, x8
  427eac:	sub	x9, x9, #0x1
  427eb0:	cmp	x9, x8
  427eb4:	b.cc	427eac <feof@plt+0x2460c>  // b.lo, b.ul, b.last
  427eb8:	ldrb	w8, [x19, #44]
  427ebc:	ldr	x0, [x19]
  427ec0:	cbz	w8, 427f40 <feof@plt+0x246a0>
  427ec4:	bl	4161b8 <feof@plt+0x12918>
  427ec8:	b	427f44 <feof@plt+0x246a4>
  427ecc:	mov	x22, xzr
  427ed0:	mov	x21, xzr
  427ed4:	orr	x8, x21, x22
  427ed8:	cbz	x8, 427f10 <feof@plt+0x24670>
  427edc:	ldr	x0, [x21]
  427ee0:	cbz	x0, 427ee8 <feof@plt+0x24648>
  427ee4:	bl	403410 <_ZdlPv@plt>
  427ee8:	ldr	x0, [x21, #8]
  427eec:	cbz	x0, 427ef4 <feof@plt+0x24654>
  427ef0:	bl	403410 <_ZdlPv@plt>
  427ef4:	add	x21, x21, #0x10
  427ef8:	cmp	x21, x22
  427efc:	b.cs	427ecc <feof@plt+0x2462c>  // b.hs, b.nlast
  427f00:	ldr	x8, [x21]
  427f04:	cmp	x8, #0x1
  427f08:	b.ls	427ef4 <feof@plt+0x24654>  // b.plast
  427f0c:	b	427ed4 <feof@plt+0x24634>
  427f10:	ldr	x20, [x19, #40]
  427f14:	cbz	x20, 427e94 <feof@plt+0x245f4>
  427f18:	ldr	x8, [x20, #8]
  427f1c:	mov	x9, x8
  427f20:	sub	x9, x9, #0x1
  427f24:	cmp	x9, x8
  427f28:	b.cc	427f20 <feof@plt+0x24680>  // b.lo, b.ul, b.last
  427f2c:	ldrb	w8, [x20, #44]
  427f30:	ldr	x0, [x20]
  427f34:	cbz	w8, 427f58 <feof@plt+0x246b8>
  427f38:	bl	4161b8 <feof@plt+0x12918>
  427f3c:	b	427f5c <feof@plt+0x246bc>
  427f40:	bl	4031d0 <free@plt>
  427f44:	mov	x0, x19
  427f48:	ldp	x20, x19, [sp, #32]
  427f4c:	ldp	x22, x21, [sp, #16]
  427f50:	ldp	x29, x30, [sp], #48
  427f54:	b	403410 <_ZdlPv@plt>
  427f58:	bl	4031d0 <free@plt>
  427f5c:	mov	x0, x20
  427f60:	bl	403410 <_ZdlPv@plt>
  427f64:	ldr	x20, [x19, #48]
  427f68:	cbz	x20, 427e9c <feof@plt+0x245fc>
  427f6c:	ldr	x8, [x20, #8]
  427f70:	mov	x9, x8
  427f74:	sub	x9, x9, #0x1
  427f78:	cmp	x9, x8
  427f7c:	b.cc	427f74 <feof@plt+0x246d4>  // b.lo, b.ul, b.last
  427f80:	ldrb	w8, [x20, #44]
  427f84:	ldr	x0, [x20]
  427f88:	cbz	w8, 427f94 <feof@plt+0x246f4>
  427f8c:	bl	4161b8 <feof@plt+0x12918>
  427f90:	b	427f98 <feof@plt+0x246f8>
  427f94:	bl	4031d0 <free@plt>
  427f98:	mov	x0, x20
  427f9c:	bl	403410 <_ZdlPv@plt>
  427fa0:	ldr	x19, [x19]
  427fa4:	cbnz	x19, 427ea4 <feof@plt+0x24604>
  427fa8:	ldp	x20, x19, [sp, #32]
  427fac:	ldp	x22, x21, [sp, #16]
  427fb0:	ldp	x29, x30, [sp], #48
  427fb4:	ret
  427fb8:	stp	x29, x30, [sp, #-96]!
  427fbc:	stp	x28, x27, [sp, #16]
  427fc0:	stp	x26, x25, [sp, #32]
  427fc4:	stp	x24, x23, [sp, #48]
  427fc8:	stp	x22, x21, [sp, #64]
  427fcc:	stp	x20, x19, [sp, #80]
  427fd0:	mov	x29, sp
  427fd4:	mov	w24, w3
  427fd8:	cbz	w1, 428230 <feof@plt+0x24990>
  427fdc:	mov	w19, w1
  427fe0:	cbz	w24, 42803c <feof@plt+0x2479c>
  427fe4:	add	w26, w19, #0x1
  427fe8:	sxtw	x8, w26
  427fec:	sbfiz	x9, x26, #2, #32
  427ff0:	cmp	xzr, x8, lsr #62
  427ff4:	csinv	x23, x9, xzr, eq  // eq = none
  427ff8:	mov	x25, x0
  427ffc:	mov	x0, x23
  428000:	mov	x20, x2
  428004:	bl	402f70 <_Znam@plt>
  428008:	mov	x21, x0
  42800c:	mov	x0, x23
  428010:	bl	402f70 <_Znam@plt>
  428014:	mov	x22, x0
  428018:	mov	x0, x23
  42801c:	bl	402f70 <_Znam@plt>
  428020:	mov	x23, x0
  428024:	tbnz	w19, #31, 428090 <feof@plt+0x247f0>
  428028:	cmp	w26, #0x7
  42802c:	mov	w8, w26
  428030:	b.hi	428044 <feof@plt+0x247a4>  // b.pmore
  428034:	mov	x9, xzr
  428038:	b	428080 <feof@plt+0x247e0>
  42803c:	mov	w24, w19
  428040:	b	428230 <feof@plt+0x24990>
  428044:	adrp	x10, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  428048:	ldr	q0, [x10, #2336]
  42804c:	and	x9, x8, #0xfffffff8
  428050:	add	x10, x22, #0x10
  428054:	movi	v1.4s, #0x4
  428058:	movi	v2.4s, #0x8
  42805c:	mov	x11, x9
  428060:	add	v3.4s, v0.4s, v1.4s
  428064:	stp	q0, q3, [x10, #-16]
  428068:	add	v0.4s, v0.4s, v2.4s
  42806c:	subs	x11, x11, #0x8
  428070:	add	x10, x10, #0x20
  428074:	b.ne	428060 <feof@plt+0x247c0>  // b.any
  428078:	cmp	x9, x8
  42807c:	b.eq	428090 <feof@plt+0x247f0>  // b.none
  428080:	str	w9, [x22, x9, lsl #2]
  428084:	add	x9, x9, #0x1
  428088:	cmp	x8, x9
  42808c:	b.ne	428080 <feof@plt+0x247e0>  // b.any
  428090:	cmp	w24, #0x1
  428094:	b.lt	428218 <feof@plt+0x24978>  // b.tstop
  428098:	mov	w10, w26
  42809c:	sub	x17, x10, #0x1
  4280a0:	and	x18, x17, #0xfffffffffffffff8
  4280a4:	mov	x3, xzr
  4280a8:	mov	w8, w24
  4280ac:	mov	w9, w19
  4280b0:	add	x11, x22, #0x4
  4280b4:	sub	x12, x25, #0x1
  4280b8:	sub	x13, x21, #0x4
  4280bc:	add	x14, x23, #0x4
  4280c0:	add	x15, x23, #0x14
  4280c4:	add	x16, x22, #0x14
  4280c8:	orr	x0, x18, #0x1
  4280cc:	add	x1, x21, #0x14
  4280d0:	b	4280e0 <feof@plt+0x24840>
  4280d4:	cmp	x2, x8
  4280d8:	mov	x3, x2
  4280dc:	b.eq	428210 <feof@plt+0x24970>  // b.none
  4280e0:	add	x2, x3, #0x1
  4280e4:	cmp	w19, #0x1
  4280e8:	str	w2, [x23]
  4280ec:	b.lt	428180 <feof@plt+0x248e0>  // b.tstop
  4280f0:	ldrb	w4, [x20, x3]
  4280f4:	ldr	w7, [x22]
  4280f8:	mov	x5, xzr
  4280fc:	sub	x6, x3, #0x1
  428100:	mov	w24, w2
  428104:	b	428118 <feof@plt+0x24878>
  428108:	cmp	x9, x25
  42810c:	str	w24, [x14, x5, lsl #2]
  428110:	mov	x5, x25
  428114:	b.eq	428180 <feof@plt+0x248e0>  // b.none
  428118:	add	x25, x12, x5
  42811c:	ldrb	w26, [x25, #1]
  428120:	mov	w25, w7
  428124:	ldr	w7, [x11, x5, lsl #2]
  428128:	add	w24, w24, #0x1
  42812c:	cmp	w26, w4
  428130:	cinc	w27, w25, ne  // ne = any
  428134:	add	w28, w7, #0x1
  428138:	cmp	w24, w28
  42813c:	csinc	w24, w24, w7, cc  // cc = lo, ul, last
  428140:	cmp	w24, w27
  428144:	add	x25, x5, #0x1
  428148:	csel	w24, w24, w27, cc  // cc = lo, ul, last
  42814c:	cbz	x3, 428108 <feof@plt+0x24868>
  428150:	cbz	x5, 428108 <feof@plt+0x24868>
  428154:	ldrb	w27, [x20, x6]
  428158:	cmp	w26, w27
  42815c:	b.ne	428108 <feof@plt+0x24868>  // b.any
  428160:	ldrb	w26, [x12, x5]
  428164:	cmp	w26, w4
  428168:	b.ne	428108 <feof@plt+0x24868>  // b.any
  42816c:	ldr	w26, [x13, x5, lsl #2]
  428170:	add	w27, w26, #0x1
  428174:	cmp	w24, w27
  428178:	csinc	w24, w24, w26, cc  // cc = lo, ul, last
  42817c:	b	428108 <feof@plt+0x24868>
  428180:	tbnz	w19, #31, 4280d4 <feof@plt+0x24834>
  428184:	ldr	w3, [x22]
  428188:	cmp	x17, #0x8
  42818c:	mov	x4, x1
  428190:	mov	x5, x16
  428194:	str	w3, [x21]
  428198:	mov	x3, x18
  42819c:	mov	x6, x15
  4281a0:	str	w2, [x22]
  4281a4:	b.cs	4281b0 <feof@plt+0x24910>  // b.hs, b.nlast
  4281a8:	mov	w4, #0x1                   	// #1
  4281ac:	b	4281e0 <feof@plt+0x24940>
  4281b0:	ldp	q0, q1, [x6, #-16]
  4281b4:	ldp	q2, q3, [x5, #-16]
  4281b8:	add	x6, x6, #0x20
  4281bc:	subs	x3, x3, #0x8
  4281c0:	stp	q0, q1, [x5, #-16]
  4281c4:	stp	q2, q3, [x4, #-16]
  4281c8:	add	x5, x5, #0x20
  4281cc:	add	x4, x4, #0x20
  4281d0:	b.ne	4281b0 <feof@plt+0x24910>  // b.any
  4281d4:	cmp	x17, x18
  4281d8:	mov	x4, x0
  4281dc:	b.eq	4280d4 <feof@plt+0x24834>  // b.none
  4281e0:	lsl	x6, x4, #2
  4281e4:	sub	x3, x10, x4
  4281e8:	add	x4, x22, x6
  4281ec:	add	x5, x21, x6
  4281f0:	add	x6, x23, x6
  4281f4:	ldr	w7, [x6], #4
  4281f8:	ldr	w24, [x4]
  4281fc:	subs	x3, x3, #0x1
  428200:	str	w7, [x4], #4
  428204:	str	w24, [x5], #4
  428208:	b.ne	4281f4 <feof@plt+0x24954>  // b.any
  42820c:	b	4280d4 <feof@plt+0x24834>
  428210:	ldr	w24, [x23, w19, sxtw #2]
  428214:	b	428218 <feof@plt+0x24978>
  428218:	mov	x0, x21
  42821c:	bl	4035b0 <_ZdaPv@plt>
  428220:	mov	x0, x22
  428224:	bl	4035b0 <_ZdaPv@plt>
  428228:	mov	x0, x23
  42822c:	bl	4035b0 <_ZdaPv@plt>
  428230:	mov	w0, w24
  428234:	ldp	x20, x19, [sp, #80]
  428238:	ldp	x22, x21, [sp, #64]
  42823c:	ldp	x24, x23, [sp, #48]
  428240:	ldp	x26, x25, [sp, #32]
  428244:	ldp	x28, x27, [sp, #16]
  428248:	ldp	x29, x30, [sp], #96
  42824c:	ret
  428250:	stp	x29, x30, [sp, #-48]!
  428254:	str	x21, [sp, #16]
  428258:	stp	x20, x19, [sp, #32]
  42825c:	mov	x29, sp
  428260:	mov	x19, x1
  428264:	mov	x20, x0
  428268:	bl	4030b0 <strlen@plt>
  42826c:	mov	x21, x0
  428270:	mov	x0, x19
  428274:	bl	4030b0 <strlen@plt>
  428278:	mov	x3, x0
  42827c:	mov	x0, x20
  428280:	mov	w1, w21
  428284:	mov	x2, x19
  428288:	ldp	x20, x19, [sp, #32]
  42828c:	ldr	x21, [sp, #16]
  428290:	ldp	x29, x30, [sp], #48
  428294:	b	427fb8 <feof@plt+0x24718>
  428298:	stp	x29, x30, [sp, #-96]!
  42829c:	stp	x28, x27, [sp, #16]
  4282a0:	stp	x26, x25, [sp, #32]
  4282a4:	stp	x24, x23, [sp, #48]
  4282a8:	stp	x22, x21, [sp, #64]
  4282ac:	stp	x20, x19, [sp, #80]
  4282b0:	mov	x29, sp
  4282b4:	cbz	x0, 428478 <feof@plt+0x24bd8>
  4282b8:	mov	x20, x1
  4282bc:	cbz	x1, 428490 <feof@plt+0x24bf0>
  4282c0:	mov	x21, x0
  4282c4:	bl	4030b0 <strlen@plt>
  4282c8:	ldr	x28, [x20]
  4282cc:	cbz	x28, 428440 <feof@plt+0x24ba0>
  4282d0:	mov	x19, x0
  4282d4:	mov	x27, xzr
  4282d8:	mov	x24, xzr
  4282dc:	mov	w25, #0xffffffff            	// #-1
  4282e0:	b	4282ec <feof@plt+0x24a4c>
  4282e4:	add	x27, x27, #0x1
  4282e8:	cbz	x28, 4283c0 <feof@plt+0x24b20>
  4282ec:	ldr	w8, [x28, #4]
  4282f0:	cmp	x27, x8
  4282f4:	b.cs	4283c0 <feof@plt+0x24b20>  // b.hs, b.nlast
  4282f8:	add	x8, x28, x27, lsl #3
  4282fc:	ldr	x22, [x8, #8]
  428300:	cbz	x22, 428460 <feof@plt+0x24bc0>
  428304:	mov	x0, x22
  428308:	bl	4030b0 <strlen@plt>
  42830c:	subs	x8, x0, x19
  428310:	cneg	x8, x8, mi  // mi = first
  428314:	cmp	w25, w8
  428318:	b.ls	4282e4 <feof@plt+0x24a44>  // b.plast
  42831c:	cmp	x0, x19
  428320:	csel	x9, x19, x0, cc  // cc = lo, ul, last
  428324:	mov	x23, x0
  428328:	cmp	x9, #0x2
  42832c:	b.cs	428340 <feof@plt+0x24aa0>  // b.hs, b.nlast
  428330:	mov	w9, wzr
  428334:	cmp	w9, w8
  428338:	b.cc	4282e4 <feof@plt+0x24a44>  // b.lo, b.ul, b.last
  42833c:	b	428394 <feof@plt+0x24af4>
  428340:	cmp	x23, x19
  428344:	csel	x10, x19, x23, hi  // hi = pmore
  428348:	sub	x10, x9, x10
  42834c:	cmp	x10, #0x1
  428350:	b.hi	428378 <feof@plt+0x24ad8>  // b.pmore
  428354:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  428358:	movk	x10, #0xaaab
  42835c:	umulh	x10, x9, x10
  428360:	lsr	x10, x10, #1
  428364:	cmp	x9, #0x5
  428368:	csinc	w9, w10, wzr, hi  // hi = pmore
  42836c:	cmp	w9, w8
  428370:	b.cc	4282e4 <feof@plt+0x24a44>  // b.lo, b.ul, b.last
  428374:	b	428394 <feof@plt+0x24af4>
  428378:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42837c:	add	x9, x9, #0x2
  428380:	movk	x10, #0xaaab
  428384:	umulh	x9, x9, x10
  428388:	lsr	x9, x9, #1
  42838c:	cmp	w9, w8
  428390:	b.cc	4282e4 <feof@plt+0x24a44>  // b.lo, b.ul, b.last
  428394:	mov	x0, x21
  428398:	mov	w1, w19
  42839c:	mov	x2, x22
  4283a0:	mov	w3, w23
  4283a4:	bl	427fb8 <feof@plt+0x24718>
  4283a8:	ldr	x28, [x20]
  4283ac:	cmp	w0, w25
  4283b0:	csel	x24, x22, x24, cc  // cc = lo, ul, last
  4283b4:	csel	w25, w0, w25, cc  // cc = lo, ul, last
  4283b8:	csel	x26, x23, x26, cc  // cc = lo, ul, last
  4283bc:	b	4282e4 <feof@plt+0x24a44>
  4283c0:	cbz	x24, 428418 <feof@plt+0x24b78>
  4283c4:	cmp	x19, x26
  4283c8:	csel	x8, x19, x26, hi  // hi = pmore
  4283cc:	cmp	x8, #0x2
  4283d0:	b.cs	4283e4 <feof@plt+0x24b44>  // b.hs, b.nlast
  4283d4:	mov	w8, wzr
  4283d8:	cmp	w25, w8
  4283dc:	b.ls	428418 <feof@plt+0x24b78>  // b.plast
  4283e0:	b	428440 <feof@plt+0x24ba0>
  4283e4:	cmp	x19, x26
  4283e8:	csel	x9, x19, x26, cc  // cc = lo, ul, last
  4283ec:	sub	x9, x8, x9
  4283f0:	cmp	x9, #0x1
  4283f4:	b.hi	428424 <feof@plt+0x24b84>  // b.pmore
  4283f8:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4283fc:	movk	x9, #0xaaab
  428400:	umulh	x9, x8, x9
  428404:	lsr	x9, x9, #1
  428408:	cmp	x8, #0x5
  42840c:	csinc	w8, w9, wzr, hi  // hi = pmore
  428410:	cmp	w25, w8
  428414:	b.hi	428440 <feof@plt+0x24ba0>  // b.pmore
  428418:	cmp	w25, #0x0
  42841c:	csel	x0, xzr, x24, eq  // eq = none
  428420:	b	428444 <feof@plt+0x24ba4>
  428424:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  428428:	add	x8, x8, #0x2
  42842c:	movk	x9, #0xaaab
  428430:	umulh	x8, x8, x9
  428434:	lsr	x8, x8, #1
  428438:	cmp	w25, w8
  42843c:	b.ls	428418 <feof@plt+0x24b78>  // b.plast
  428440:	mov	x0, xzr
  428444:	ldp	x20, x19, [sp, #80]
  428448:	ldp	x22, x21, [sp, #64]
  42844c:	ldp	x24, x23, [sp, #48]
  428450:	ldp	x26, x25, [sp, #32]
  428454:	ldp	x28, x27, [sp, #16]
  428458:	ldp	x29, x30, [sp], #96
  42845c:	ret
  428460:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  428464:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  428468:	add	x0, x0, #0x930
  42846c:	add	x2, x2, #0x947
  428470:	mov	w1, #0x9e                  	// #158
  428474:	bl	429434 <feof@plt+0x25b94>
  428478:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42847c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  428480:	add	x0, x0, #0x930
  428484:	add	x2, x2, #0x947
  428488:	mov	w1, #0x96                  	// #150
  42848c:	bl	429434 <feof@plt+0x25b94>
  428490:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  428494:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  428498:	add	x0, x0, #0x930
  42849c:	add	x2, x2, #0x947
  4284a0:	mov	w1, #0x97                  	// #151
  4284a4:	bl	429434 <feof@plt+0x25b94>
  4284a8:	cmp	x0, x1
  4284ac:	csel	x8, x0, x1, hi  // hi = pmore
  4284b0:	cmp	x8, #0x2
  4284b4:	b.cs	4284c0 <feof@plt+0x24c20>  // b.hs, b.nlast
  4284b8:	mov	w0, wzr
  4284bc:	ret
  4284c0:	cmp	x0, x1
  4284c4:	csel	x9, x0, x1, cc  // cc = lo, ul, last
  4284c8:	sub	x9, x8, x9
  4284cc:	cmp	x9, #0x1
  4284d0:	b.hi	4284f0 <feof@plt+0x24c50>  // b.pmore
  4284d4:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4284d8:	movk	x9, #0xaaab
  4284dc:	umulh	x9, x8, x9
  4284e0:	lsr	x9, x9, #1
  4284e4:	cmp	x8, #0x5
  4284e8:	csinc	w0, w9, wzr, hi  // hi = pmore
  4284ec:	ret
  4284f0:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4284f4:	add	x8, x8, #0x2
  4284f8:	movk	x9, #0xaaab
  4284fc:	umulh	x8, x8, x9
  428500:	lsr	x0, x8, #1
  428504:	ret
  428508:	stp	x29, x30, [sp, #-32]!
  42850c:	stp	x20, x19, [sp, #16]
  428510:	mov	x29, sp
  428514:	ldr	x19, [x0]
  428518:	cbz	x19, 428550 <feof@plt+0x24cb0>
  42851c:	ldr	x0, [x19]
  428520:	cbz	x0, 428570 <feof@plt+0x24cd0>
  428524:	mov	x20, xzr
  428528:	ldr	w8, [x0, #4]
  42852c:	cmp	x20, x8
  428530:	b.cs	42855c <feof@plt+0x24cbc>  // b.hs, b.nlast
  428534:	add	x8, x0, x20, lsl #3
  428538:	ldr	x0, [x8, #8]
  42853c:	bl	4031d0 <free@plt>
  428540:	ldr	x0, [x19]
  428544:	add	x20, x20, #0x1
  428548:	cbnz	x0, 428528 <feof@plt+0x24c88>
  42854c:	b	428570 <feof@plt+0x24cd0>
  428550:	ldp	x20, x19, [sp, #16]
  428554:	ldp	x29, x30, [sp], #32
  428558:	ret
  42855c:	ldr	w8, [x0]
  428560:	tbnz	w8, #31, 42856c <feof@plt+0x24ccc>
  428564:	bl	4031d0 <free@plt>
  428568:	b	428570 <feof@plt+0x24cd0>
  42856c:	str	wzr, [x0, #4]
  428570:	mov	x0, x19
  428574:	ldp	x20, x19, [sp, #16]
  428578:	ldp	x29, x30, [sp], #32
  42857c:	b	403410 <_ZdlPv@plt>
  428580:	stp	x29, x30, [sp, #-32]!
  428584:	stp	x20, x19, [sp, #16]
  428588:	mov	x29, sp
  42858c:	ldr	x8, [x0]
  428590:	mov	x19, x1
  428594:	cbnz	x8, 4285ac <feof@plt+0x24d0c>
  428598:	mov	x1, xzr
  42859c:	mov	x20, x0
  4285a0:	bl	4285d8 <feof@plt+0x24d38>
  4285a4:	ldr	x8, [x20]
  4285a8:	cbz	x8, 4285c0 <feof@plt+0x24d20>
  4285ac:	mov	x0, x19
  4285b0:	ldp	x20, x19, [sp, #16]
  4285b4:	mov	x1, x8
  4285b8:	ldp	x29, x30, [sp], #32
  4285bc:	b	428298 <feof@plt+0x249f8>
  4285c0:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4285c4:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4285c8:	add	x0, x0, #0x95b
  4285cc:	add	x2, x2, #0x977
  4285d0:	mov	w1, #0x2b                  	// #43
  4285d4:	bl	429434 <feof@plt+0x25b94>
  4285d8:	sub	sp, sp, #0xd0
  4285dc:	stp	x29, x30, [sp, #112]
  4285e0:	stp	x28, x27, [sp, #128]
  4285e4:	stp	x26, x25, [sp, #144]
  4285e8:	stp	x24, x23, [sp, #160]
  4285ec:	stp	x22, x21, [sp, #176]
  4285f0:	stp	x20, x19, [sp, #192]
  4285f4:	add	x29, sp, #0x70
  4285f8:	ldr	x8, [x0]
  4285fc:	cbnz	x8, 428898 <feof@plt+0x24ff8>
  428600:	mov	x19, x0
  428604:	mov	w0, #0x8                   	// #8
  428608:	mov	x28, x1
  42860c:	bl	403440 <_Znwm@plt>
  428610:	adrp	x8, 491000 <_obstack_memory_used@@Base+0x152fc>
  428614:	ldr	w26, [x8, #3240]
  428618:	str	xzr, [x0]
  42861c:	str	x0, [x19]
  428620:	cbz	w26, 428878 <feof@plt+0x24fd8>
  428624:	adrp	x9, 491000 <_obstack_memory_used@@Base+0x152fc>
  428628:	adrp	x20, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42862c:	mov	x21, xzr
  428630:	mov	w27, #0x60                  	// #96
  428634:	add	x9, x9, #0xcb0
  428638:	add	x20, x20, #0x9af
  42863c:	str	x28, [sp, #8]
  428640:	b	428678 <feof@plt+0x24dd8>
  428644:	ldr	w8, [x24]
  428648:	tbnz	w8, #31, 428870 <feof@plt+0x24fd0>
  42864c:	mov	x0, x24
  428650:	bl	4031d0 <free@plt>
  428654:	ldr	x0, [x19]
  428658:	mov	x1, x22
  42865c:	mov	x2, x23
  428660:	bl	41cc60 <feof@plt+0x193c0>
  428664:	add	x21, x21, #0x1
  428668:	adrp	x9, 491000 <_obstack_memory_used@@Base+0x152fc>
  42866c:	cmp	x21, x26
  428670:	add	x9, x9, #0xcb0
  428674:	b.cs	428878 <feof@plt+0x24fd8>  // b.hs, b.nlast
  428678:	madd	x22, x21, x27, x9
  42867c:	ldr	x23, [x22]
  428680:	cmp	w21, #0x3f1
  428684:	b.eq	428690 <feof@plt+0x24df0>  // b.none
  428688:	cmp	w21, #0x3f4
  42868c:	b.ne	428740 <feof@plt+0x24ea0>  // b.any
  428690:	ldr	x0, [x19]
  428694:	mov	x1, x22
  428698:	mov	x2, x23
  42869c:	bl	41cc60 <feof@plt+0x193c0>
  4286a0:	adrp	x8, 48d000 <_obstack_memory_used@@Base+0x112fc>
  4286a4:	ldr	x1, [x8, #2272]
  4286a8:	cbz	x1, 428664 <feof@plt+0x24dc4>
  4286ac:	adrp	x8, 48d000 <_obstack_memory_used@@Base+0x112fc>
  4286b0:	add	x8, x8, #0x8e0
  4286b4:	add	x25, x8, #0x20
  4286b8:	b	4286f0 <feof@plt+0x24e50>
  4286bc:	mov	x0, x23
  4286c0:	mov	x2, xzr
  4286c4:	bl	4799ac <feof@plt+0x7610c>
  4286c8:	ldr	x8, [x19]
  4286cc:	mov	x24, x0
  4286d0:	mov	x1, x22
  4286d4:	mov	x2, x24
  4286d8:	mov	x0, x8
  4286dc:	bl	41cc60 <feof@plt+0x193c0>
  4286e0:	mov	x0, x24
  4286e4:	bl	4031d0 <free@plt>
  4286e8:	ldr	x1, [x25], #32
  4286ec:	cbz	x1, 428664 <feof@plt+0x24dc4>
  4286f0:	cmp	x21, #0x3f4
  4286f4:	b.ne	4286bc <feof@plt+0x24e1c>  // b.any
  4286f8:	ldur	w8, [x25, #-24]
  4286fc:	cmn	w8, #0x1
  428700:	b.ne	4286bc <feof@plt+0x24e1c>  // b.any
  428704:	ldp	q0, q1, [x22]
  428708:	mov	x23, x20
  42870c:	str	q0, [sp, #16]
  428710:	ldp	q3, q0, [x22, #48]
  428714:	ldr	q2, [x22, #32]
  428718:	ldr	q4, [x22, #80]
  42871c:	add	x22, sp, #0x10
  428720:	stp	q3, q0, [sp, #64]
  428724:	ldrh	w8, [sp, #80]
  428728:	str	x20, [sp, #16]
  42872c:	str	q4, [sp, #96]
  428730:	stp	q1, q2, [sp, #32]
  428734:	orr	w8, w8, #0x80
  428738:	strh	w8, [sp, #80]
  42873c:	b	4286bc <feof@plt+0x24e1c>
  428740:	madd	x8, x21, x27, x9
  428744:	ldr	w8, [x8, #72]
  428748:	cmp	w8, #0x6
  42874c:	b.ne	4287d4 <feof@plt+0x24f34>  // b.any
  428750:	madd	x8, x21, x27, x9
  428754:	ldrh	w8, [x8, #68]
  428758:	adrp	x10, 490000 <_obstack_memory_used@@Base+0x142fc>
  42875c:	mov	w9, #0x30                  	// #48
  428760:	add	x10, x10, #0x608
  428764:	madd	x25, x8, x9, x10
  428768:	ldr	x8, [x25, #16]!
  42876c:	ldr	x1, [x8]
  428770:	cbz	x1, 4287bc <feof@plt+0x24f1c>
  428774:	mov	w27, #0x1                   	// #1
  428778:	mov	x0, x23
  42877c:	mov	x2, xzr
  428780:	bl	4799ac <feof@plt+0x7610c>
  428784:	ldr	x8, [x19]
  428788:	mov	x24, x0
  42878c:	mov	x1, x22
  428790:	mov	x2, x24
  428794:	mov	x0, x8
  428798:	bl	41cc60 <feof@plt+0x193c0>
  42879c:	mov	x0, x24
  4287a0:	bl	4031d0 <free@plt>
  4287a4:	ldr	x8, [x25]
  4287a8:	mov	w9, w27
  4287ac:	lsl	x9, x9, #4
  4287b0:	add	w27, w27, #0x1
  4287b4:	ldr	x1, [x8, x9]
  4287b8:	cbnz	x1, 428778 <feof@plt+0x24ed8>
  4287bc:	ldr	x0, [x19]
  4287c0:	mov	x1, x22
  4287c4:	mov	x2, x23
  4287c8:	bl	41cc60 <feof@plt+0x193c0>
  4287cc:	mov	w27, #0x60                  	// #96
  4287d0:	b	428664 <feof@plt+0x24dc4>
  4287d4:	madd	x8, x21, x27, x9
  4287d8:	ldrb	w8, [x8, #62]
  4287dc:	tbz	w8, #4, 428654 <feof@plt+0x24db4>
  4287e0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4287e4:	ldr	x8, [x8, #560]
  4287e8:	mov	w0, w21
  4287ec:	mov	x1, x28
  4287f0:	blr	x8
  4287f4:	cbz	x0, 428654 <feof@plt+0x24db4>
  4287f8:	ldr	w8, [x0, #4]
  4287fc:	mov	x24, x0
  428800:	cbz	w8, 428644 <feof@plt+0x24da4>
  428804:	mov	x27, xzr
  428808:	add	x28, x24, #0x8
  42880c:	ldr	x1, [x28, x27, lsl #3]
  428810:	mov	x0, x23
  428814:	mov	x2, xzr
  428818:	bl	4799ac <feof@plt+0x7610c>
  42881c:	ldr	x8, [x19]
  428820:	mov	x25, x0
  428824:	mov	x1, x22
  428828:	mov	x2, x25
  42882c:	mov	x0, x8
  428830:	bl	41cc60 <feof@plt+0x193c0>
  428834:	mov	x0, x25
  428838:	bl	4031d0 <free@plt>
  42883c:	ldr	w8, [x24, #4]
  428840:	add	x27, x27, #0x1
  428844:	cmp	x27, x8
  428848:	b.cc	42880c <feof@plt+0x24f6c>  // b.lo, b.ul, b.last
  42884c:	ldr	w8, [x24]
  428850:	tbnz	w8, #31, 428860 <feof@plt+0x24fc0>
  428854:	mov	x0, x24
  428858:	bl	4031d0 <free@plt>
  42885c:	b	428864 <feof@plt+0x24fc4>
  428860:	str	wzr, [x24, #4]
  428864:	ldr	x28, [sp, #8]
  428868:	mov	w27, #0x60                  	// #96
  42886c:	b	428664 <feof@plt+0x24dc4>
  428870:	str	wzr, [x24, #4]
  428874:	b	428654 <feof@plt+0x24db4>
  428878:	ldp	x20, x19, [sp, #192]
  42887c:	ldp	x22, x21, [sp, #176]
  428880:	ldp	x24, x23, [sp, #160]
  428884:	ldp	x26, x25, [sp, #144]
  428888:	ldp	x28, x27, [sp, #128]
  42888c:	ldp	x29, x30, [sp, #112]
  428890:	add	sp, sp, #0xd0
  428894:	ret
  428898:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42889c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4288a0:	add	x0, x0, #0x95b
  4288a4:	add	x2, x2, #0x996
  4288a8:	mov	w1, #0x72                  	// #114
  4288ac:	bl	429434 <feof@plt+0x25b94>
  4288b0:	sub	sp, sp, #0x70
  4288b4:	stp	x29, x30, [sp, #16]
  4288b8:	stp	x28, x27, [sp, #32]
  4288bc:	stp	x26, x25, [sp, #48]
  4288c0:	stp	x24, x23, [sp, #64]
  4288c4:	stp	x22, x21, [sp, #80]
  4288c8:	stp	x20, x19, [sp, #96]
  4288cc:	add	x29, sp, #0x10
  4288d0:	cbz	x1, 428b7c <feof@plt+0x252dc>
  4288d4:	ldrb	w8, [x1]
  4288d8:	mov	x20, x1
  4288dc:	cbz	w8, 428b7c <feof@plt+0x252dc>
  4288e0:	mov	x19, x2
  4288e4:	mov	x21, x0
  4288e8:	cmp	w8, #0x2d
  4288ec:	b.ne	4288f4 <feof@plt+0x25054>  // b.any
  4288f0:	add	x20, x20, #0x1
  4288f4:	mov	x0, x20
  4288f8:	bl	4030b0 <strlen@plt>
  4288fc:	mov	x22, x0
  428900:	cmp	x0, #0x6
  428904:	b.cc	428920 <feof@plt+0x25080>  // b.lo, b.ul, b.last
  428908:	adrp	x1, 4b3000 <_obstack_memory_used@@Base+0x372fc>
  42890c:	add	x1, x1, #0xe96
  428910:	mov	w2, #0x6                   	// #6
  428914:	mov	x0, x20
  428918:	bl	403450 <strncmp@plt>
  42891c:	cbz	w0, 428b40 <feof@plt+0x252a0>
  428920:	ldr	x25, [x21]
  428924:	cbnz	x25, 42893c <feof@plt+0x2509c>
  428928:	mov	x0, x21
  42892c:	mov	x1, x20
  428930:	bl	4285d8 <feof@plt+0x24d38>
  428934:	ldr	x25, [x21]
  428938:	cbz	x25, 428b9c <feof@plt+0x252fc>
  42893c:	mov	x26, xzr
  428940:	str	x21, [sp, #8]
  428944:	b	428970 <feof@plt+0x250d0>
  428948:	ldr	x11, [x19]
  42894c:	str	w28, [x11, #4]
  428950:	ldr	x8, [x19]
  428954:	ldr	w9, [x8, #4]
  428958:	add	w10, w9, #0x1
  42895c:	add	x9, x8, x9, lsl #3
  428960:	str	w10, [x8, #4]
  428964:	str	x24, [x9, #8]
  428968:	ldr	x25, [x21]
  42896c:	add	x26, x26, #0x1
  428970:	ldr	x8, [x25]
  428974:	cbz	x8, 428988 <feof@plt+0x250e8>
  428978:	ldr	w9, [x8, #4]
  42897c:	cmp	x26, w9, uxtw
  428980:	b.cc	428994 <feof@plt+0x250f4>  // b.lo, b.ul, b.last
  428984:	b	428b7c <feof@plt+0x252dc>
  428988:	mov	w9, wzr
  42898c:	cmp	x26, w9, uxtw
  428990:	b.cs	428b7c <feof@plt+0x252dc>  // b.hs, b.nlast
  428994:	add	x8, x8, x26, lsl #3
  428998:	ldr	x24, [x8, #8]
  42899c:	mov	x0, x24
  4289a0:	bl	4030b0 <strlen@plt>
  4289a4:	cmp	x0, x22
  4289a8:	b.cc	42896c <feof@plt+0x250cc>  // b.lo, b.ul, b.last
  4289ac:	mov	x0, x20
  4289b0:	bl	4030b0 <strlen@plt>
  4289b4:	mov	x2, x0
  4289b8:	mov	x0, x24
  4289bc:	mov	x1, x20
  4289c0:	bl	403450 <strncmp@plt>
  4289c4:	cbnz	w0, 42896c <feof@plt+0x250cc>
  4289c8:	adrp	x0, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4289cc:	add	x0, x0, #0x935
  4289d0:	mov	x1, x24
  4289d4:	mov	x2, xzr
  4289d8:	bl	4799ac <feof@plt+0x7610c>
  4289dc:	ldr	x27, [x19]
  4289e0:	mov	x24, x0
  4289e4:	cbz	x27, 428a2c <feof@plt+0x2518c>
  4289e8:	ldp	w8, w9, [x27]
  4289ec:	and	w0, w8, #0x7fffffff
  4289f0:	cmp	w0, w9
  4289f4:	b.ne	428950 <feof@plt+0x250b0>  // b.any
  4289f8:	tbnz	w8, #31, 428a3c <feof@plt+0x2519c>
  4289fc:	add	w1, w0, #0x1
  428a00:	bl	425fbc <feof@plt+0x2271c>
  428a04:	ldr	x8, [x19]
  428a08:	mov	w9, w0
  428a0c:	lsl	x9, x9, #3
  428a10:	mov	w25, w0
  428a14:	add	x1, x9, #0x8
  428a18:	mov	w28, wzr
  428a1c:	cbz	x8, 428b34 <feof@plt+0x25294>
  428a20:	ldr	w21, [x8, #4]
  428a24:	mov	w23, wzr
  428a28:	b	428a6c <feof@plt+0x251cc>
  428a2c:	mov	w28, wzr
  428a30:	mov	w23, wzr
  428a34:	mov	w25, #0x4                   	// #4
  428a38:	b	428a58 <feof@plt+0x251b8>
  428a3c:	str	xzr, [x19]
  428a40:	ldr	w28, [x27, #4]
  428a44:	mov	w23, #0x1                   	// #1
  428a48:	add	w8, w28, #0x1
  428a4c:	cmp	w8, #0x4
  428a50:	mov	w8, #0x4                   	// #4
  428a54:	csinc	w25, w8, w28, ls  // ls = plast
  428a58:	mov	w9, w25
  428a5c:	lsl	x9, x9, #3
  428a60:	mov	x8, xzr
  428a64:	mov	w21, wzr
  428a68:	add	x1, x9, #0x8
  428a6c:	mov	x0, x8
  428a70:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  428a74:	and	w8, w25, #0x7fffffff
  428a78:	str	x0, [x19]
  428a7c:	stp	w8, w21, [x0]
  428a80:	ldr	x21, [sp, #8]
  428a84:	cbz	w23, 428950 <feof@plt+0x250b0>
  428a88:	ldr	x11, [x19]
  428a8c:	cbz	w28, 42894c <feof@plt+0x250ac>
  428a90:	sub	w12, w28, #0x1
  428a94:	add	x8, x27, #0x8
  428a98:	cmp	w12, #0x3
  428a9c:	add	x9, x11, #0x8
  428aa0:	b.cs	428aac <feof@plt+0x2520c>  // b.hs, b.nlast
  428aa4:	mov	w10, w28
  428aa8:	b	428b20 <feof@plt+0x25280>
  428aac:	lsl	x10, x12, #3
  428ab0:	add	x13, x27, x10
  428ab4:	add	x13, x13, #0x10
  428ab8:	cmp	x13, x9
  428abc:	b.ls	428ad4 <feof@plt+0x25234>  // b.plast
  428ac0:	add	x10, x11, x10
  428ac4:	add	x10, x10, #0x10
  428ac8:	cmp	x10, x8
  428acc:	mov	w10, w28
  428ad0:	b.hi	428b20 <feof@plt+0x25280>  // b.pmore
  428ad4:	add	x12, x12, #0x1
  428ad8:	and	x13, x12, #0x1fffffffc
  428adc:	lsl	x8, x13, #3
  428ae0:	add	x14, x11, #0x18
  428ae4:	add	x9, x27, x8
  428ae8:	add	x11, x11, x8
  428aec:	sub	w10, w28, w13
  428af0:	add	x8, x9, #0x8
  428af4:	add	x9, x11, #0x8
  428af8:	add	x11, x27, #0x18
  428afc:	mov	x15, x13
  428b00:	ldp	q0, q1, [x11, #-16]
  428b04:	subs	x15, x15, #0x4
  428b08:	add	x11, x11, #0x20
  428b0c:	stp	q0, q1, [x14, #-16]
  428b10:	add	x14, x14, #0x20
  428b14:	b.ne	428b00 <feof@plt+0x25260>  // b.any
  428b18:	cmp	x12, x13
  428b1c:	b.eq	428948 <feof@plt+0x250a8>  // b.none
  428b20:	ldr	x11, [x8], #8
  428b24:	subs	w10, w10, #0x1
  428b28:	str	x11, [x9], #8
  428b2c:	b.ne	428b20 <feof@plt+0x25280>  // b.any
  428b30:	b	428948 <feof@plt+0x250a8>
  428b34:	mov	w23, wzr
  428b38:	mov	w21, wzr
  428b3c:	b	428a6c <feof@plt+0x251cc>
  428b40:	ldrb	w1, [x20, #6]
  428b44:	cmp	w1, #0x3d
  428b48:	b.eq	428b54 <feof@plt+0x252b4>  // b.none
  428b4c:	cmp	w1, #0x20
  428b50:	b.ne	428b7c <feof@plt+0x252dc>  // b.any
  428b54:	add	x2, x20, #0x7
  428b58:	mov	x3, x19
  428b5c:	ldp	x20, x19, [sp, #96]
  428b60:	ldp	x22, x21, [sp, #80]
  428b64:	ldp	x24, x23, [sp, #64]
  428b68:	ldp	x26, x25, [sp, #48]
  428b6c:	ldp	x28, x27, [sp, #32]
  428b70:	ldp	x29, x30, [sp, #16]
  428b74:	add	sp, sp, #0x70
  428b78:	b	428bb4 <feof@plt+0x25314>
  428b7c:	ldp	x20, x19, [sp, #96]
  428b80:	ldp	x22, x21, [sp, #80]
  428b84:	ldp	x24, x23, [sp, #64]
  428b88:	ldp	x26, x25, [sp, #48]
  428b8c:	ldp	x28, x27, [sp, #32]
  428b90:	ldp	x29, x30, [sp, #16]
  428b94:	add	sp, sp, #0x70
  428b98:	ret
  428b9c:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  428ba0:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  428ba4:	add	x0, x0, #0x95b
  428ba8:	add	x2, x2, #0x986
  428bac:	mov	w1, #0x55                  	// #85
  428bb0:	bl	429434 <feof@plt+0x25b94>
  428bb4:	sub	sp, sp, #0x70
  428bb8:	stp	x29, x30, [sp, #16]
  428bbc:	stp	x28, x27, [sp, #32]
  428bc0:	stp	x26, x25, [sp, #48]
  428bc4:	stp	x24, x23, [sp, #64]
  428bc8:	stp	x22, x21, [sp, #80]
  428bcc:	stp	x20, x19, [sp, #96]
  428bd0:	add	x29, sp, #0x10
  428bd4:	mov	x0, x2
  428bd8:	mov	x19, x3
  428bdc:	mov	x20, x2
  428be0:	sturb	w1, [x29, #-4]
  428be4:	sturb	wzr, [x29, #-3]
  428be8:	bl	4030b0 <strlen@plt>
  428bec:	mov	x21, x0
  428bf0:	bl	418018 <feof@plt+0x14778>
  428bf4:	cbz	x0, 428e00 <feof@plt+0x25560>
  428bf8:	mov	x25, xzr
  428bfc:	adrp	x24, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  428c00:	mov	w27, #0x28                  	// #40
  428c04:	b	428c38 <feof@plt+0x25398>
  428c08:	ldr	x11, [x19]
  428c0c:	str	w28, [x11, #4]
  428c10:	ldr	x8, [x19]
  428c14:	ldr	w9, [x8, #4]
  428c18:	add	w10, w9, #0x1
  428c1c:	add	x9, x8, x9, lsl #3
  428c20:	str	w10, [x8, #4]
  428c24:	str	x26, [x9, #8]
  428c28:	add	w25, w25, #0x1
  428c2c:	bl	418018 <feof@plt+0x14778>
  428c30:	cmp	x0, x25
  428c34:	b.ls	428e00 <feof@plt+0x25560>  // b.plast
  428c38:	ldr	x8, [x24, #288]
  428c3c:	mul	x9, x25, x27
  428c40:	ldr	x23, [x8, x9]
  428c44:	mov	x0, x23
  428c48:	bl	4030b0 <strlen@plt>
  428c4c:	cmp	x0, x21
  428c50:	b.cc	428c28 <feof@plt+0x25388>  // b.lo, b.ul, b.last
  428c54:	mov	x0, x20
  428c58:	bl	4030b0 <strlen@plt>
  428c5c:	mov	x2, x0
  428c60:	mov	x0, x23
  428c64:	mov	x1, x20
  428c68:	bl	403450 <strncmp@plt>
  428c6c:	cbnz	w0, 428c28 <feof@plt+0x25388>
  428c70:	adrp	x0, 4b3000 <_obstack_memory_used@@Base+0x372fc>
  428c74:	sub	x1, x29, #0x4
  428c78:	add	x0, x0, #0xe95
  428c7c:	mov	x2, x23
  428c80:	mov	x3, xzr
  428c84:	bl	4799ac <feof@plt+0x7610c>
  428c88:	ldr	x22, [x19]
  428c8c:	mov	x26, x0
  428c90:	cbz	x22, 428cdc <feof@plt+0x2543c>
  428c94:	ldp	w8, w9, [x22]
  428c98:	and	w0, w8, #0x7fffffff
  428c9c:	cmp	w0, w9
  428ca0:	b.ne	428c10 <feof@plt+0x25370>  // b.any
  428ca4:	tbnz	w8, #31, 428cf0 <feof@plt+0x25450>
  428ca8:	add	w1, w0, #0x1
  428cac:	bl	425fbc <feof@plt+0x2271c>
  428cb0:	ldr	x8, [x19]
  428cb4:	mov	w9, w0
  428cb8:	lsl	x9, x9, #3
  428cbc:	mov	w24, w0
  428cc0:	add	x1, x9, #0x8
  428cc4:	mov	x27, x26
  428cc8:	mov	w28, wzr
  428ccc:	cbz	x8, 428df4 <feof@plt+0x25554>
  428cd0:	ldr	w26, [x8, #4]
  428cd4:	mov	w23, wzr
  428cd8:	b	428d24 <feof@plt+0x25484>
  428cdc:	mov	x27, x26
  428ce0:	mov	w28, wzr
  428ce4:	mov	w23, wzr
  428ce8:	mov	w24, #0x4                   	// #4
  428cec:	b	428d10 <feof@plt+0x25470>
  428cf0:	str	xzr, [x19]
  428cf4:	ldr	w28, [x22, #4]
  428cf8:	mov	x27, x26
  428cfc:	mov	w23, #0x1                   	// #1
  428d00:	add	w8, w28, #0x1
  428d04:	cmp	w8, #0x4
  428d08:	mov	w8, #0x4                   	// #4
  428d0c:	csinc	w24, w8, w28, ls  // ls = plast
  428d10:	mov	w9, w24
  428d14:	lsl	x9, x9, #3
  428d18:	mov	x8, xzr
  428d1c:	mov	w26, wzr
  428d20:	add	x1, x9, #0x8
  428d24:	mov	x0, x8
  428d28:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  428d2c:	and	w8, w24, #0x7fffffff
  428d30:	str	x0, [x19]
  428d34:	stp	w8, w26, [x0]
  428d38:	adrp	x24, 4f3000 <stderr@@GLIBC_2.17+0xbb8>
  428d3c:	mov	x26, x27
  428d40:	mov	w27, #0x28                  	// #40
  428d44:	cbz	w23, 428c10 <feof@plt+0x25370>
  428d48:	ldr	x11, [x19]
  428d4c:	cbz	w28, 428c0c <feof@plt+0x2536c>
  428d50:	sub	w12, w28, #0x1
  428d54:	add	x8, x22, #0x8
  428d58:	cmp	w12, #0x3
  428d5c:	add	x9, x11, #0x8
  428d60:	b.cs	428d6c <feof@plt+0x254cc>  // b.hs, b.nlast
  428d64:	mov	w10, w28
  428d68:	b	428de0 <feof@plt+0x25540>
  428d6c:	lsl	x10, x12, #3
  428d70:	add	x13, x22, x10
  428d74:	add	x13, x13, #0x10
  428d78:	cmp	x13, x9
  428d7c:	b.ls	428d94 <feof@plt+0x254f4>  // b.plast
  428d80:	add	x10, x11, x10
  428d84:	add	x10, x10, #0x10
  428d88:	cmp	x10, x8
  428d8c:	mov	w10, w28
  428d90:	b.hi	428de0 <feof@plt+0x25540>  // b.pmore
  428d94:	add	x12, x12, #0x1
  428d98:	and	x13, x12, #0x1fffffffc
  428d9c:	lsl	x8, x13, #3
  428da0:	add	x14, x11, #0x18
  428da4:	add	x9, x22, x8
  428da8:	add	x11, x11, x8
  428dac:	sub	w10, w28, w13
  428db0:	add	x8, x9, #0x8
  428db4:	add	x9, x11, #0x8
  428db8:	add	x11, x22, #0x18
  428dbc:	mov	x15, x13
  428dc0:	ldp	q0, q1, [x11, #-16]
  428dc4:	subs	x15, x15, #0x4
  428dc8:	add	x11, x11, #0x20
  428dcc:	stp	q0, q1, [x14, #-16]
  428dd0:	add	x14, x14, #0x20
  428dd4:	b.ne	428dc0 <feof@plt+0x25520>  // b.any
  428dd8:	cmp	x12, x13
  428ddc:	b.eq	428c08 <feof@plt+0x25368>  // b.none
  428de0:	ldr	x11, [x8], #8
  428de4:	subs	w10, w10, #0x1
  428de8:	str	x11, [x9], #8
  428dec:	b.ne	428de0 <feof@plt+0x25540>  // b.any
  428df0:	b	428c08 <feof@plt+0x25368>
  428df4:	mov	w23, wzr
  428df8:	mov	w26, wzr
  428dfc:	b	428d24 <feof@plt+0x25484>
  428e00:	ldp	x20, x19, [sp, #96]
  428e04:	ldp	x22, x21, [sp, #80]
  428e08:	ldp	x24, x23, [sp, #64]
  428e0c:	ldp	x26, x25, [sp, #48]
  428e10:	ldp	x28, x27, [sp, #32]
  428e14:	ldp	x29, x30, [sp, #16]
  428e18:	add	sp, sp, #0x70
  428e1c:	ret
  428e20:	stp	x29, x30, [sp, #-48]!
  428e24:	str	x21, [sp, #16]
  428e28:	stp	x20, x19, [sp, #32]
  428e2c:	mov	x29, sp
  428e30:	add	x2, x29, #0x18
  428e34:	str	xzr, [x29, #24]
  428e38:	bl	4288b0 <feof@plt+0x25010>
  428e3c:	ldr	x19, [x29, #24]
  428e40:	mov	x20, xzr
  428e44:	add	x21, x19, #0x8
  428e48:	cbz	x19, 428e5c <feof@plt+0x255bc>
  428e4c:	ldr	w8, [x19, #4]
  428e50:	cmp	x20, w8, uxtw
  428e54:	b.cc	428e68 <feof@plt+0x255c8>  // b.lo, b.ul, b.last
  428e58:	b	428e7c <feof@plt+0x255dc>
  428e5c:	mov	w8, wzr
  428e60:	cmp	x20, w8, uxtw
  428e64:	b.cs	428e7c <feof@plt+0x255dc>  // b.hs, b.nlast
  428e68:	ldr	x0, [x21, x20, lsl #3]
  428e6c:	bl	403010 <puts@plt>
  428e70:	add	x20, x20, #0x1
  428e74:	cbnz	x19, 428e4c <feof@plt+0x255ac>
  428e78:	b	428e5c <feof@plt+0x255bc>
  428e7c:	cbz	x19, 428ec4 <feof@plt+0x25624>
  428e80:	ldr	w8, [x19, #4]
  428e84:	cbz	w8, 428ea8 <feof@plt+0x25608>
  428e88:	mov	x20, xzr
  428e8c:	add	x21, x19, #0x8
  428e90:	ldr	x0, [x21, x20, lsl #3]
  428e94:	bl	4031d0 <free@plt>
  428e98:	ldr	w8, [x19, #4]
  428e9c:	add	x20, x20, #0x1
  428ea0:	cmp	x20, x8
  428ea4:	b.cc	428e90 <feof@plt+0x255f0>  // b.lo, b.ul, b.last
  428ea8:	ldr	w8, [x19]
  428eac:	tbnz	w8, #31, 428ec0 <feof@plt+0x25620>
  428eb0:	mov	x0, x19
  428eb4:	bl	4031d0 <free@plt>
  428eb8:	str	xzr, [x29, #24]
  428ebc:	b	428ec4 <feof@plt+0x25624>
  428ec0:	str	wzr, [x19, #4]
  428ec4:	ldp	x20, x19, [sp, #32]
  428ec8:	ldr	x21, [sp, #16]
  428ecc:	ldp	x29, x30, [sp], #48
  428ed0:	ret
  428ed4:	sub	sp, sp, #0x120
  428ed8:	stp	x29, x30, [sp, #256]
  428edc:	str	x28, [sp, #272]
  428ee0:	add	x29, sp, #0x100
  428ee4:	mov	x8, #0xffffffffffffffc8    	// #-56
  428ee8:	mov	x9, sp
  428eec:	sub	x10, x29, #0x78
  428ef0:	movk	x8, #0xff80, lsl #32
  428ef4:	add	x11, x29, #0x20
  428ef8:	add	x9, x9, #0x80
  428efc:	add	x10, x10, #0x38
  428f00:	stp	x9, x8, [x29, #-16]
  428f04:	stp	x11, x10, [x29, #-32]
  428f08:	stp	x1, x2, [x29, #-120]
  428f0c:	stp	x3, x4, [x29, #-104]
  428f10:	stp	x5, x6, [x29, #-88]
  428f14:	stur	x7, [x29, #-72]
  428f18:	stp	q0, q1, [sp]
  428f1c:	ldp	q1, q0, [x29, #-32]
  428f20:	sub	x1, x29, #0x40
  428f24:	stp	q2, q3, [sp, #32]
  428f28:	stp	q4, q5, [sp, #64]
  428f2c:	stp	q6, q7, [sp, #96]
  428f30:	stp	q1, q0, [x29, #-64]
  428f34:	bl	47d26c <_obstack_memory_used@@Base+0x1568>
  428f38:	ldr	x28, [sp, #272]
  428f3c:	ldp	x29, x30, [sp, #256]
  428f40:	add	sp, sp, #0x120
  428f44:	ret
  428f48:	stp	x29, x30, [sp, #-32]!
  428f4c:	stp	x20, x19, [sp, #16]
  428f50:	mov	x29, sp
  428f54:	ldr	x8, [x0]
  428f58:	mov	x19, x0
  428f5c:	mov	x20, x1
  428f60:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  428f64:	ldrb	w0, [x8, #67]
  428f68:	add	x1, x1, #0xac8
  428f6c:	mov	w2, #0x5                   	// #5
  428f70:	bl	42c4e0 <feof@plt+0x28c40>
  428f74:	ldr	x8, [x19]
  428f78:	mov	x19, x0
  428f7c:	ldrb	w8, [x8, #67]
  428f80:	mov	w0, w8
  428f84:	bl	42c564 <feof@plt+0x28cc4>
  428f88:	mov	x1, x19
  428f8c:	mov	x2, x20
  428f90:	ldp	x20, x19, [sp, #16]
  428f94:	adrp	x8, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  428f98:	add	x8, x8, #0xace
  428f9c:	mov	x3, x0
  428fa0:	mov	x0, x8
  428fa4:	ldp	x29, x30, [sp], #32
  428fa8:	b	428ed4 <feof@plt+0x25634>
  428fac:	sub	sp, sp, #0x20
  428fb0:	stp	x29, x30, [sp, #16]
  428fb4:	add	x29, sp, #0x10
  428fb8:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  428fbc:	add	x0, x0, #0xad7
  428fc0:	bl	403700 <getenv@plt>
  428fc4:	cbz	x0, 428fdc <feof@plt+0x2573c>
  428fc8:	mov	w2, #0xa                   	// #10
  428fcc:	mov	x1, xzr
  428fd0:	bl	403190 <strtol@plt>
  428fd4:	cmp	w0, #0x0
  428fd8:	b.gt	429008 <feof@plt+0x25768>
  428fdc:	add	x2, sp, #0x8
  428fe0:	mov	w1, #0x5413                	// #21523
  428fe4:	mov	w0, wzr
  428fe8:	strh	wzr, [sp, #10]
  428fec:	bl	403350 <ioctl@plt>
  428ff0:	ldrh	w8, [sp, #10]
  428ff4:	mov	w9, #0x7fffffff            	// #2147483647
  428ff8:	cmp	w8, #0x0
  428ffc:	csel	w8, w9, w8, eq  // eq = none
  429000:	cmp	w0, #0x0
  429004:	csel	w0, w8, w9, eq  // eq = none
  429008:	ldp	x29, x30, [sp, #16]
  42900c:	add	sp, sp, #0x20
  429010:	ret
  429014:	stp	x29, x30, [sp, #-32]!
  429018:	str	x19, [sp, #16]
  42901c:	mov	x29, sp
  429020:	mov	x19, x0
  429024:	cbz	w1, 429048 <feof@plt+0x257a8>
  429028:	sub	w8, w1, #0x1
  42902c:	cmp	w1, #0x2
  429030:	mov	w9, #0x7fffffff            	// #2147483647
  429034:	csel	w8, w9, w8, lt  // lt = tstop
  429038:	str	w8, [x19, #112]
  42903c:	ldr	x19, [sp, #16]
  429040:	ldp	x29, x30, [sp], #32
  429044:	ret
  429048:	ldr	x8, [x19]
  42904c:	ldr	x8, [x8, #8]
  429050:	ldr	x0, [x8, #192]
  429054:	bl	4034d0 <fileno_unlocked@plt>
  429058:	bl	403240 <isatty@plt>
  42905c:	cbz	w0, 4290b8 <feof@plt+0x25818>
  429060:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429064:	add	x0, x0, #0xad7
  429068:	bl	403700 <getenv@plt>
  42906c:	cbz	x0, 429088 <feof@plt+0x257e8>
  429070:	mov	w2, #0xa                   	// #10
  429074:	mov	x1, xzr
  429078:	bl	403190 <strtol@plt>
  42907c:	mov	x1, x0
  429080:	cmp	w1, #0x0
  429084:	b.gt	429028 <feof@plt+0x25788>
  429088:	add	x2, x29, #0x18
  42908c:	mov	w1, #0x5413                	// #21523
  429090:	mov	w0, wzr
  429094:	strh	wzr, [x29, #26]
  429098:	bl	403350 <ioctl@plt>
  42909c:	ldrh	w8, [x29, #26]
  4290a0:	mov	w9, #0x7fffffff            	// #2147483647
  4290a4:	cmp	w8, #0x0
  4290a8:	csel	w8, w9, w8, eq  // eq = none
  4290ac:	cmp	w0, #0x0
  4290b0:	csel	w1, w8, w9, eq  // eq = none
  4290b4:	b	429028 <feof@plt+0x25788>
  4290b8:	mov	w8, #0x7fffffff            	// #2147483647
  4290bc:	b	429038 <feof@plt+0x25798>
  4290c0:	stp	x29, x30, [sp, #-32]!
  4290c4:	stp	x20, x19, [sp, #16]
  4290c8:	mov	x29, sp
  4290cc:	mov	x19, x0
  4290d0:	mov	w0, #0x48                  	// #72
  4290d4:	mov	w20, w1
  4290d8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4290dc:	mov	w1, wzr
  4290e0:	str	x0, [x19]
  4290e4:	bl	435b30 <feof@plt+0x32290>
  4290e8:	movi	v0.2d, #0x0
  4290ec:	sbfiz	x0, x20, #2, #32
  4290f0:	str	w20, [x19, #68]
  4290f4:	stur	q0, [x19, #49]
  4290f8:	stur	q0, [x19, #40]
  4290fc:	stur	q0, [x19, #24]
  429100:	stur	q0, [x19, #8]
  429104:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  429108:	cmp	w20, #0x1
  42910c:	str	x0, [x19, #72]
  429110:	b.lt	42913c <feof@plt+0x2589c>  // b.tstop
  429114:	cmp	w20, #0x1
  429118:	str	wzr, [x0]
  42911c:	b.eq	42913c <feof@plt+0x2589c>  // b.none
  429120:	mov	w8, w20
  429124:	mov	w9, #0x1                   	// #1
  429128:	ldr	x10, [x19, #72]
  42912c:	str	wzr, [x10, x9, lsl #2]
  429130:	add	x9, x9, #0x1
  429134:	cmp	x8, x9
  429138:	b.ne	429128 <feof@plt+0x25888>  // b.any
  42913c:	ldr	x8, [x19]
  429140:	strb	wzr, [x19, #108]
  429144:	mov	x0, x19
  429148:	ldr	w1, [x8, #40]
  42914c:	bl	429014 <feof@plt+0x25774>
  429150:	mov	w8, #0x5e                  	// #94
  429154:	mov	w9, #0x5e5e                	// #24158
  429158:	strb	w8, [x19, #118]
  42915c:	adrp	x8, 429000 <feof@plt+0x25760>
  429160:	strh	w9, [x19, #116]
  429164:	adrp	x9, 429000 <feof@plt+0x25760>
  429168:	add	x8, x8, #0x1c4
  42916c:	add	x9, x9, #0x21c
  429170:	stp	x8, x9, [x19, #136]
  429174:	adrp	x8, 429000 <feof@plt+0x25760>
  429178:	add	x8, x8, #0x270
  42917c:	stp	x8, xzr, [x19, #152]
  429180:	adrp	x8, 429000 <feof@plt+0x25760>
  429184:	movi	v0.2d, #0x0
  429188:	add	x8, x8, #0x2a8
  42918c:	str	wzr, [x19, #132]
  429190:	stur	xzr, [x19, #119]
  429194:	stur	wzr, [x19, #127]
  429198:	stur	q0, [x19, #168]
  42919c:	stur	q0, [x19, #184]
  4291a0:	str	wzr, [x19, #200]
  4291a4:	stp	xzr, xzr, [x19, #208]
  4291a8:	stur	xzr, [x19, #222]
  4291ac:	stur	q0, [x19, #232]
  4291b0:	stur	q0, [x19, #248]
  4291b4:	str	x8, [x19, #264]
  4291b8:	ldp	x20, x19, [sp, #16]
  4291bc:	ldp	x29, x30, [sp], #32
  4291c0:	ret
  4291c4:	stp	x29, x30, [sp, #-48]!
  4291c8:	str	x21, [sp, #16]
  4291cc:	stp	x20, x19, [sp, #32]
  4291d0:	mov	x29, sp
  4291d4:	mov	x19, x1
  4291d8:	mov	x20, x0
  4291dc:	mov	x0, x1
  4291e0:	mov	w1, wzr
  4291e4:	bl	433624 <feof@plt+0x2fd84>
  4291e8:	mov	w1, w0
  4291ec:	mov	x0, x20
  4291f0:	bl	429b8c <feof@plt+0x262ec>
  4291f4:	ldr	x21, [x20]
  4291f8:	mov	x0, x20
  4291fc:	mov	x1, x19
  429200:	bl	4294ec <feof@plt+0x25c4c>
  429204:	mov	x1, x0
  429208:	mov	x0, x21
  42920c:	ldp	x20, x19, [sp, #32]
  429210:	ldr	x21, [sp, #16]
  429214:	ldp	x29, x30, [sp], #48
  429218:	b	435978 <feof@plt+0x320d8>
  42921c:	sub	sp, sp, #0x40
  429220:	stp	x29, x30, [sp, #32]
  429224:	stp	x20, x19, [sp, #48]
  429228:	add	x29, sp, #0x20
  42922c:	ldp	q1, q0, [x1]
  429230:	mov	x1, sp
  429234:	mov	x19, x0
  429238:	stp	q1, q0, [sp]
  42923c:	bl	429610 <feof@plt+0x25d70>
  429240:	ldr	x8, [x19]
  429244:	mov	x20, x0
  429248:	mov	x1, x20
  42924c:	mov	x0, x8
  429250:	bl	4354fc <feof@plt+0x31c5c>
  429254:	mov	x0, x20
  429258:	bl	4031d0 <free@plt>
  42925c:	ldr	x0, [x19]
  429260:	ldp	x20, x19, [sp, #48]
  429264:	ldp	x29, x30, [sp, #32]
  429268:	add	sp, sp, #0x40
  42926c:	b	435e80 <feof@plt+0x325e0>
  429270:	stp	x29, x30, [sp, #-32]!
  429274:	str	x19, [sp, #16]
  429278:	mov	x29, sp
  42927c:	ldr	x8, [x1, #40]
  429280:	ldr	w2, [x1, #56]
  429284:	mov	x19, x0
  429288:	mov	x1, x8
  42928c:	bl	42de28 <feof@plt+0x2a588>
  429290:	ldr	x0, [x19]
  429294:	bl	435a00 <feof@plt+0x32160>
  429298:	ldr	x0, [x19]
  42929c:	ldr	x19, [sp, #16]
  4292a0:	ldp	x29, x30, [sp], #32
  4292a4:	b	4357b0 <feof@plt+0x31f10>
  4292a8:	stp	x29, x30, [sp, #-32]!
  4292ac:	stp	x20, x19, [sp, #16]
  4292b0:	mov	x29, sp
  4292b4:	ldr	w8, [x0, #56]
  4292b8:	cbz	w8, 429308 <feof@plt+0x25a68>
  4292bc:	ldrb	w8, [x0, #64]
  4292c0:	ldr	x20, [x0]
  4292c4:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4292c8:	adrp	x10, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4292cc:	add	x9, x9, #0xe05
  4292d0:	add	x10, x10, #0xe2e
  4292d4:	cmp	w8, #0x0
  4292d8:	mov	x19, x0
  4292dc:	csel	x0, x10, x9, eq  // eq = none
  4292e0:	bl	4033e0 <gettext@plt>
  4292e4:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4292e8:	ldr	x2, [x8, #48]
  4292ec:	mov	x1, x0
  4292f0:	mov	x0, x20
  4292f4:	bl	435dd0 <feof@plt+0x32530>
  4292f8:	ldr	x0, [x19]
  4292fc:	ldp	x20, x19, [sp, #16]
  429300:	ldp	x29, x30, [sp], #32
  429304:	b	4361fc <feof@plt+0x3295c>
  429308:	ldp	x20, x19, [sp, #16]
  42930c:	ldp	x29, x30, [sp], #32
  429310:	ret
  429314:	stp	x29, x30, [sp, #-32]!
  429318:	str	x19, [sp, #16]
  42931c:	mov	x29, sp
  429320:	cmp	w1, #0x0
  429324:	mov	w8, #0x2                   	// #2
  429328:	mov	x19, x0
  42932c:	csel	w0, w8, w1, lt  // lt = tstop
  429330:	bl	42c580 <feof@plt+0x28ce0>
  429334:	ldr	x8, [x19]
  429338:	ldr	x19, [sp, #16]
  42933c:	and	w9, w0, #0x1
  429340:	strb	w9, [x8, #67]
  429344:	ldp	x29, x30, [sp], #32
  429348:	ret
  42934c:	stp	x29, x30, [sp, #-32]!
  429350:	stp	x20, x19, [sp, #16]
  429354:	mov	x29, sp
  429358:	ldr	x8, [x0, #264]
  42935c:	mov	x19, x0
  429360:	cbz	x8, 42936c <feof@plt+0x25acc>
  429364:	mov	x0, x19
  429368:	blr	x8
  42936c:	bl	43722c <feof@plt+0x3398c>
  429370:	ldr	x0, [x19, #72]
  429374:	bl	4031d0 <free@plt>
  429378:	ldr	x0, [x19]
  42937c:	str	xzr, [x19, #72]
  429380:	ldr	x8, [x0]
  429384:	ldr	x8, [x8]
  429388:	blr	x8
  42938c:	ldr	x0, [x19]
  429390:	bl	4031d0 <free@plt>
  429394:	ldr	x20, [x19, #232]
  429398:	str	xzr, [x19]
  42939c:	cbz	x20, 4293b8 <feof@plt+0x25b18>
  4293a0:	mov	x0, x20
  4293a4:	ldr	x1, [x0, #8]!
  4293a8:	bl	42c3e8 <feof@plt+0x28b48>
  4293ac:	mov	x0, x20
  4293b0:	bl	403410 <_ZdlPv@plt>
  4293b4:	str	xzr, [x19, #232]
  4293b8:	ldp	x20, x19, [sp, #16]
  4293bc:	ldp	x29, x30, [sp], #32
  4293c0:	ret
  4293c4:	stp	x29, x30, [sp, #-64]!
  4293c8:	str	x23, [sp, #16]
  4293cc:	stp	x22, x21, [sp, #32]
  4293d0:	stp	x20, x19, [sp, #48]
  4293d4:	mov	x29, sp
  4293d8:	cbz	x3, 42941c <feof@plt+0x25b7c>
  4293dc:	mov	w19, w4
  4293e0:	mov	x21, x3
  4293e4:	mov	x23, x2
  4293e8:	mov	x22, x1
  4293ec:	mov	x20, x0
  4293f0:	bl	4035c0 <__errno_location@plt>
  4293f4:	ldr	w8, [x0]
  4293f8:	stp	x22, x23, [x20]
  4293fc:	stp	x21, x21, [x20, #32]
  429400:	stp	w19, wzr, [x20, #56]
  429404:	str	w8, [x20, #16]
  429408:	ldp	x20, x19, [sp, #48]
  42940c:	ldp	x22, x21, [sp, #32]
  429410:	ldr	x23, [sp, #16]
  429414:	ldp	x29, x30, [sp], #64
  429418:	ret
  42941c:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429420:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429424:	add	x0, x0, #0xd70
  429428:	add	x2, x2, #0xadf
  42942c:	mov	w1, #0x112                 	// #274
  429430:	bl	429434 <feof@plt+0x25b94>
  429434:	stp	x29, x30, [sp, #-32]!
  429438:	stp	x20, x19, [sp, #16]
  42943c:	mov	x29, sp
  429440:	mov	x19, x2
  429444:	mov	w20, w1
  429448:	bl	42a5dc <feof@plt+0x26d3c>
  42944c:	mov	x2, x0
  429450:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429454:	add	x0, x0, #0xdf5
  429458:	mov	x1, x19
  42945c:	mov	w3, w20
  429460:	bl	42c0bc <feof@plt+0x2881c>
  429464:	stp	x29, x30, [sp, #-64]!
  429468:	str	x23, [sp, #16]
  42946c:	stp	x22, x21, [sp, #32]
  429470:	stp	x20, x19, [sp, #48]
  429474:	mov	x29, sp
  429478:	cbz	x3, 4294c4 <feof@plt+0x25c24>
  42947c:	mov	x20, x0
  429480:	mov	x0, x1
  429484:	mov	w19, w4
  429488:	mov	x21, x3
  42948c:	mov	x22, x2
  429490:	bl	4033e0 <gettext@plt>
  429494:	mov	x23, x0
  429498:	bl	4035c0 <__errno_location@plt>
  42949c:	ldr	w8, [x0]
  4294a0:	stp	x23, x22, [x20]
  4294a4:	stp	x21, x21, [x20, #32]
  4294a8:	stp	w19, wzr, [x20, #56]
  4294ac:	str	w8, [x20, #16]
  4294b0:	ldp	x20, x19, [sp, #48]
  4294b4:	ldp	x22, x21, [sp, #32]
  4294b8:	ldr	x23, [sp, #16]
  4294bc:	ldp	x29, x30, [sp], #64
  4294c0:	ret
  4294c4:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4294c8:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4294cc:	add	x0, x0, #0xd70
  4294d0:	add	x2, x2, #0xafe
  4294d4:	mov	w1, #0x123                 	// #291
  4294d8:	bl	429434 <feof@plt+0x25b94>
  4294dc:	adrp	x8, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4294e0:	add	x8, x8, #0x9d0
  4294e4:	ldr	x0, [x8, w0, uxtw #3]
  4294e8:	ret
  4294ec:	sub	sp, sp, #0x80
  4294f0:	stp	x29, x30, [sp, #64]
  4294f4:	stp	x24, x23, [sp, #80]
  4294f8:	stp	x22, x21, [sp, #96]
  4294fc:	stp	x20, x19, [sp, #112]
  429500:	add	x29, sp, #0x40
  429504:	ldr	w8, [x1, #56]
  429508:	cmp	w8, #0xe
  42950c:	b.ge	4295f8 <feof@plt+0x25d58>  // b.tcont
  429510:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429514:	add	x9, x9, #0xa48
  429518:	mov	x19, x0
  42951c:	ldr	x0, [x9, x8, lsl #3]
  429520:	mov	x21, x1
  429524:	bl	4033e0 <gettext@plt>
  429528:	ldr	w8, [x21, #56]
  42952c:	mov	w9, #0x23fc                	// #9212
  429530:	mov	x20, x0
  429534:	lsr	x9, x9, x8
  429538:	tbnz	w9, #0, 42954c <feof@plt+0x25cac>
  42953c:	adrp	x22, 48f000 <_obstack_memory_used@@Base+0x132fc>
  429540:	add	x22, x22, #0x23b
  429544:	mov	x23, x22
  429548:	b	42958c <feof@plt+0x25cec>
  42954c:	ldr	x24, [x19]
  429550:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429554:	add	x9, x9, #0x9d0
  429558:	ldr	x22, [x9, x8, lsl #3]
  42955c:	ldrb	w23, [x24, #67]
  429560:	mov	x0, x22
  429564:	bl	4030b0 <strlen@plt>
  429568:	mov	x2, x0
  42956c:	mov	w0, w23
  429570:	mov	x1, x22
  429574:	bl	42c4e0 <feof@plt+0x28c40>
  429578:	ldrb	w8, [x24, #67]
  42957c:	mov	x23, x0
  429580:	mov	w0, w8
  429584:	bl	42c564 <feof@plt+0x28cc4>
  429588:	mov	x22, x0
  42958c:	ldr	x0, [x21, #40]
  429590:	add	x8, sp, #0x20
  429594:	mov	w1, wzr
  429598:	bl	450888 <feof@plt+0x4cfe8>
  42959c:	ldp	q0, q1, [sp, #32]
  4295a0:	mov	x1, sp
  4295a4:	mov	x0, x19
  4295a8:	stp	q0, q1, [sp]
  4295ac:	bl	429610 <feof@plt+0x25d70>
  4295b0:	mov	x19, x0
  4295b4:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4295b8:	add	x0, x0, #0xbb6
  4295bc:	mov	x1, x19
  4295c0:	mov	x2, x23
  4295c4:	mov	x3, x20
  4295c8:	mov	x4, x22
  4295cc:	bl	428ed4 <feof@plt+0x25634>
  4295d0:	mov	x20, x0
  4295d4:	mov	x0, x19
  4295d8:	bl	4031d0 <free@plt>
  4295dc:	mov	x0, x20
  4295e0:	ldp	x20, x19, [sp, #112]
  4295e4:	ldp	x22, x21, [sp, #96]
  4295e8:	ldp	x24, x23, [sp, #80]
  4295ec:	ldp	x29, x30, [sp, #64]
  4295f0:	add	sp, sp, #0x80
  4295f4:	ret
  4295f8:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4295fc:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429600:	add	x0, x0, #0xd70
  429604:	add	x2, x2, #0xb9e
  429608:	mov	w1, #0x16a                 	// #362
  42960c:	bl	429434 <feof@plt+0x25b94>
  429610:	stp	x29, x30, [sp, #-64]!
  429614:	str	x23, [sp, #16]
  429618:	stp	x22, x21, [sp, #32]
  42961c:	stp	x20, x19, [sp, #48]
  429620:	mov	x29, sp
  429624:	ldr	x19, [x0]
  429628:	mov	x23, x0
  42962c:	mov	x22, x1
  429630:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429634:	ldrb	w0, [x19, #67]
  429638:	add	x1, x1, #0xac8
  42963c:	mov	w2, #0x5                   	// #5
  429640:	bl	42c4e0 <feof@plt+0x28c40>
  429644:	ldrb	w8, [x19, #67]
  429648:	mov	x19, x0
  42964c:	mov	w0, w8
  429650:	bl	42c564 <feof@plt+0x28cc4>
  429654:	ldr	x8, [x22]
  429658:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42965c:	ldr	x9, [x9, #48]
  429660:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429664:	cmp	x8, #0x0
  429668:	mov	x20, x0
  42966c:	csel	x21, x9, x8, eq  // eq = none
  429670:	add	x1, x1, #0xe5d
  429674:	mov	x0, x21
  429678:	bl	403640 <strcmp@plt>
  42967c:	cbz	w0, 4296c0 <feof@plt+0x25e20>
  429680:	ldr	w3, [x22, #8]
  429684:	ldrb	w8, [x23, #121]
  429688:	cbz	w8, 4296cc <feof@plt+0x25e2c>
  42968c:	ldr	w4, [x22, #12]
  429690:	cbz	w3, 4296d4 <feof@plt+0x25e34>
  429694:	adrp	x8, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429698:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42969c:	add	x8, x8, #0xeba
  4296a0:	add	x9, x9, #0xebd
  4296a4:	cmp	w4, #0x0
  4296a8:	adrp	x0, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4296ac:	csel	x2, x9, x8, eq  // eq = none
  4296b0:	add	x0, x0, #0x148
  4296b4:	mov	w1, #0x20                  	// #32
  4296b8:	bl	403530 <snprintf@plt>
  4296bc:	b	4296dc <feof@plt+0x25e3c>
  4296c0:	mov	w3, wzr
  4296c4:	ldrb	w8, [x23, #121]
  4296c8:	cbnz	w8, 42968c <feof@plt+0x25dec>
  4296cc:	mov	w4, wzr
  4296d0:	cbnz	w3, 429694 <feof@plt+0x25df4>
  4296d4:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4296d8:	strb	wzr, [x8, #328]
  4296dc:	mov	x1, x19
  4296e0:	mov	x2, x21
  4296e4:	mov	x4, x20
  4296e8:	ldp	x20, x19, [sp, #48]
  4296ec:	ldp	x22, x21, [sp, #32]
  4296f0:	ldr	x23, [sp, #16]
  4296f4:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4296f8:	adrp	x3, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4296fc:	add	x0, x0, #0xe68
  429700:	add	x3, x3, #0x148
  429704:	ldp	x29, x30, [sp], #64
  429708:	b	428ed4 <feof@plt+0x25634>
  42970c:	stp	x29, x30, [sp, #-32]!
  429710:	str	x19, [sp, #16]
  429714:	mov	x29, sp
  429718:	ldr	w2, [x0, #132]
  42971c:	cbz	w2, 429738 <feof@plt+0x25e98>
  429720:	ldp	w8, w9, [x0, #24]
  429724:	ldr	w10, [x0, #56]
  429728:	add	w8, w9, w8
  42972c:	add	w8, w8, w10
  429730:	cmp	w8, w2
  429734:	b.ge	429744 <feof@plt+0x25ea4>  // b.tcont
  429738:	ldr	x19, [sp, #16]
  42973c:	ldp	x29, x30, [sp], #32
  429740:	ret
  429744:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  429748:	str	x0, [x29, #24]
  42974c:	ldr	x0, [x8, #1096]
  429750:	adrp	x8, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429754:	add	x8, x8, #0xbc0
  429758:	mov	w19, w1
  42975c:	mov	x1, x8
  429760:	bl	429778 <feof@plt+0x25ed8>
  429764:	tbz	w19, #0, 429770 <feof@plt+0x25ed0>
  429768:	ldr	x0, [x29, #24]
  42976c:	bl	42934c <feof@plt+0x25aac>
  429770:	mov	w0, #0x1                   	// #1
  429774:	bl	403730 <exit@plt>
  429778:	sub	sp, sp, #0x110
  42977c:	stp	x29, x30, [sp, #240]
  429780:	stp	x28, x19, [sp, #256]
  429784:	add	x29, sp, #0xf0
  429788:	mov	x8, #0xffffffffffffffd0    	// #-48
  42978c:	mov	x9, sp
  429790:	sub	x10, x29, #0x70
  429794:	mov	x19, x0
  429798:	movk	x8, #0xff80, lsl #32
  42979c:	add	x11, x29, #0x20
  4297a0:	add	x9, x9, #0x80
  4297a4:	add	x10, x10, #0x30
  4297a8:	mov	x0, x1
  4297ac:	stp	x2, x3, [x29, #-112]
  4297b0:	stp	x4, x5, [x29, #-96]
  4297b4:	stp	x6, x7, [x29, #-80]
  4297b8:	stp	q1, q2, [sp, #16]
  4297bc:	stp	q3, q4, [sp, #48]
  4297c0:	str	q0, [sp]
  4297c4:	stp	q5, q6, [sp, #80]
  4297c8:	str	q7, [sp, #112]
  4297cc:	stp	x9, x8, [x29, #-16]
  4297d0:	stp	x11, x10, [x29, #-32]
  4297d4:	bl	4033e0 <gettext@plt>
  4297d8:	ldp	q0, q1, [x29, #-32]
  4297dc:	mov	x1, x0
  4297e0:	sub	x2, x29, #0x40
  4297e4:	mov	x0, x19
  4297e8:	stp	q0, q1, [x29, #-64]
  4297ec:	bl	403890 <vfprintf@plt>
  4297f0:	ldp	x28, x19, [sp, #256]
  4297f4:	ldp	x29, x30, [sp, #240]
  4297f8:	add	sp, sp, #0x110
  4297fc:	ret
  429800:	stp	x29, x30, [sp, #-32]!
  429804:	str	x19, [sp, #16]
  429808:	mov	x29, sp
  42980c:	sub	w8, w1, #0x6
  429810:	cmp	w8, #0x4
  429814:	b.cc	42984c <feof@plt+0x25fac>  // b.lo, b.ul, b.last
  429818:	sub	w8, w1, #0x2
  42981c:	cmp	w8, #0xb
  429820:	b.hi	4298c4 <feof@plt+0x26024>  // b.pmore
  429824:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429828:	add	x9, x9, #0x9c0
  42982c:	adr	x10, 42983c <feof@plt+0x25f9c>
  429830:	ldrb	w11, [x9, x8]
  429834:	add	x10, x10, x11, lsl #2
  429838:	br	x10
  42983c:	ldrb	w8, [x0, #120]
  429840:	cbnz	w8, 42993c <feof@plt+0x2609c>
  429844:	ldrb	w8, [x0, #128]
  429848:	cbnz	w8, 429940 <feof@plt+0x260a0>
  42984c:	ldr	x19, [sp, #16]
  429850:	ldp	x29, x30, [sp], #32
  429854:	ret
  429858:	ldrb	w9, [x0, #120]
  42985c:	cbnz	w9, 42993c <feof@plt+0x2609c>
  429860:	bl	42934c <feof@plt+0x25aac>
  429864:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  429868:	ldr	x0, [x8, #1096]
  42986c:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429870:	add	x1, x1, #0xcc0
  429874:	bl	429778 <feof@plt+0x25ed8>
  429878:	mov	w0, #0x1                   	// #1
  42987c:	bl	403730 <exit@plt>
  429880:	adrp	x2, 429000 <feof@plt+0x25760>
  429884:	mov	x19, x0
  429888:	add	x2, x2, #0x978
  42988c:	mov	x0, xzr
  429890:	mov	w1, wzr
  429894:	mov	x3, xzr
  429898:	bl	4599d4 <feof@plt+0x56134>
  42989c:	str	wzr, [x29, #28]
  4298a0:	cbz	x0, 4298e4 <feof@plt+0x26044>
  4298a4:	adrp	x2, 429000 <feof@plt+0x25760>
  4298a8:	adrp	x3, 429000 <feof@plt+0x25760>
  4298ac:	add	x2, x2, #0x9e8
  4298b0:	add	x3, x3, #0x978
  4298b4:	add	x4, x29, #0x1c
  4298b8:	mov	w1, #0x2                   	// #2
  4298bc:	bl	459a2c <feof@plt+0x5618c>
  4298c0:	b	4298e4 <feof@plt+0x26044>
  4298c4:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4298c8:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4298cc:	add	x0, x0, #0xd70
  4298d0:	add	x2, x2, #0xcd9
  4298d4:	mov	w1, #0x231                 	// #561
  4298d8:	bl	429434 <feof@plt+0x25b94>
  4298dc:	mov	x19, x0
  4298e0:	str	wzr, [x29, #28]
  4298e4:	ldrb	w8, [x19, #120]
  4298e8:	cbnz	w8, 42993c <feof@plt+0x2609c>
  4298ec:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4298f0:	ldr	x0, [x19, #1096]
  4298f4:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4298f8:	add	x1, x1, #0xc1f
  4298fc:	bl	429778 <feof@plt+0x25ed8>
  429900:	ldr	w8, [x29, #28]
  429904:	cmp	w8, #0x1
  429908:	b.lt	42991c <feof@plt+0x2607c>  // b.tstop
  42990c:	ldr	x0, [x19, #1096]
  429910:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429914:	add	x1, x1, #0xc6a
  429918:	bl	429778 <feof@plt+0x25ed8>
  42991c:	ldr	x0, [x19, #1096]
  429920:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429924:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  429928:	add	x1, x1, #0xca6
  42992c:	add	x2, x2, #0xf70
  429930:	bl	429778 <feof@plt+0x25ed8>
  429934:	mov	w0, #0x4                   	// #4
  429938:	bl	403730 <exit@plt>
  42993c:	bl	42996c <feof@plt+0x260cc>
  429940:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  429944:	ldr	x8, [x8, #1096]
  429948:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42994c:	add	x1, x1, #0xbf0
  429950:	mov	x19, x0
  429954:	mov	x0, x8
  429958:	bl	429778 <feof@plt+0x25ed8>
  42995c:	mov	x0, x19
  429960:	bl	42934c <feof@plt+0x25aac>
  429964:	mov	w0, #0x1                   	// #1
  429968:	bl	403730 <exit@plt>
  42996c:	stp	x29, x30, [sp, #-16]!
  429970:	mov	x29, sp
  429974:	bl	4036f0 <abort@plt>
  429978:	tbz	w2, #31, 429980 <feof@plt+0x260e0>
  42997c:	ret
  429980:	stp	x29, x30, [sp, #-48]!
  429984:	str	x21, [sp, #16]
  429988:	stp	x20, x19, [sp, #32]
  42998c:	mov	x29, sp
  429990:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  429994:	ldr	x20, [x8, #1096]
  429998:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42999c:	adrp	x4, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4299a0:	add	x8, x8, #0x3f7
  4299a4:	add	x4, x4, #0x23b
  4299a8:	cmp	w2, #0x0
  4299ac:	mov	x19, x1
  4299b0:	csel	x21, x4, x8, eq  // eq = none
  4299b4:	cbz	w2, 4299c4 <feof@plt+0x26124>
  4299b8:	mov	w0, w2
  4299bc:	bl	47d1ec <_obstack_memory_used@@Base+0x14e8>
  4299c0:	mov	x4, x0
  4299c4:	mov	x0, x20
  4299c8:	mov	x2, x19
  4299cc:	mov	x3, x21
  4299d0:	ldp	x20, x19, [sp, #32]
  4299d4:	ldr	x21, [sp, #16]
  4299d8:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4299dc:	add	x1, x1, #0xe72
  4299e0:	ldp	x29, x30, [sp], #48
  4299e4:	b	4030d0 <fprintf@plt>
  4299e8:	stp	x29, x30, [sp, #-64]!
  4299ec:	str	x23, [sp, #16]
  4299f0:	stp	x22, x21, [sp, #32]
  4299f4:	stp	x20, x19, [sp, #48]
  4299f8:	mov	x29, sp
  4299fc:	orr	x8, x2, x4
  429a00:	cbnz	x8, 429a0c <feof@plt+0x2616c>
  429a04:	mov	w0, wzr
  429a08:	b	429b30 <feof@plt+0x26290>
  429a0c:	ldr	w8, [x0]
  429a10:	mov	x23, x4
  429a14:	mov	w19, w3
  429a18:	mov	x21, x2
  429a1c:	mov	x20, x1
  429a20:	mov	x22, x0
  429a24:	cbz	x2, 429a48 <feof@plt+0x261a8>
  429a28:	cbnz	w8, 429a48 <feof@plt+0x261a8>
  429a2c:	mov	x0, x21
  429a30:	bl	47b0c8 <feof@plt+0x77828>
  429a34:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429a38:	add	x1, x1, #0xd7a
  429a3c:	bl	403640 <strcmp@plt>
  429a40:	cbz	w0, 429b30 <feof@plt+0x26290>
  429a44:	ldr	w8, [x22]
  429a48:	cmp	w8, #0x13
  429a4c:	b.gt	429b2c <feof@plt+0x2628c>
  429a50:	add	w8, w8, #0x1
  429a54:	str	w8, [x22]
  429a58:	cbz	x23, 429b44 <feof@plt+0x262a4>
  429a5c:	mov	w1, #0x400b                	// #16395
  429a60:	mov	x0, x23
  429a64:	bl	46cc70 <feof@plt+0x693d0>
  429a68:	cmp	x0, #0x0
  429a6c:	csel	x23, x23, x0, eq  // eq = none
  429a70:	adrp	x1, 4bc000 <_obstack_memory_used@@Base+0x402fc>
  429a74:	mov	x22, x0
  429a78:	add	x1, x1, #0x8d
  429a7c:	mov	w2, #0x4                   	// #4
  429a80:	mov	x0, x23
  429a84:	bl	403450 <strncmp@plt>
  429a88:	cbz	w0, 429ae8 <feof@plt+0x26248>
  429a8c:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429a90:	add	x1, x1, #0xe8f
  429a94:	mov	w2, #0xc                   	// #12
  429a98:	mov	x0, x23
  429a9c:	bl	403450 <strncmp@plt>
  429aa0:	cbz	w0, 429afc <feof@plt+0x2625c>
  429aa4:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429aa8:	add	x1, x1, #0xe9c
  429aac:	mov	w2, #0x10                  	// #16
  429ab0:	mov	x0, x23
  429ab4:	bl	403450 <strncmp@plt>
  429ab8:	cbz	w0, 429b10 <feof@plt+0x26270>
  429abc:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429ac0:	add	x1, x1, #0xead
  429ac4:	mov	w2, #0xc                   	// #12
  429ac8:	mov	x0, x23
  429acc:	bl	403450 <strncmp@plt>
  429ad0:	cbnz	w0, 429b48 <feof@plt+0x262a8>
  429ad4:	ldrb	w8, [x23, #12]
  429ad8:	cbz	w8, 429b20 <feof@plt+0x26280>
  429adc:	cmp	w8, #0x28
  429ae0:	b.eq	429b20 <feof@plt+0x26280>  // b.none
  429ae4:	b	429b48 <feof@plt+0x262a8>
  429ae8:	ldrb	w8, [x23, #4]
  429aec:	cmp	w8, #0x28
  429af0:	b.eq	429b20 <feof@plt+0x26280>  // b.none
  429af4:	cbz	w8, 429b20 <feof@plt+0x26280>
  429af8:	b	429a8c <feof@plt+0x261ec>
  429afc:	ldrb	w8, [x23, #12]
  429b00:	cbz	w8, 429b20 <feof@plt+0x26280>
  429b04:	cmp	w8, #0x28
  429b08:	b.eq	429b20 <feof@plt+0x26280>  // b.none
  429b0c:	b	429aa4 <feof@plt+0x26204>
  429b10:	ldrb	w8, [x23, #16]
  429b14:	cbz	w8, 429b20 <feof@plt+0x26280>
  429b18:	cmp	w8, #0x28
  429b1c:	b.ne	429abc <feof@plt+0x2621c>  // b.any
  429b20:	cbz	x22, 429b2c <feof@plt+0x2628c>
  429b24:	mov	x0, x22
  429b28:	bl	4031d0 <free@plt>
  429b2c:	mov	w0, #0x1                   	// #1
  429b30:	ldp	x20, x19, [sp, #48]
  429b34:	ldp	x22, x21, [sp, #32]
  429b38:	ldr	x23, [sp, #16]
  429b3c:	ldp	x29, x30, [sp], #64
  429b40:	ret
  429b44:	mov	x22, xzr
  429b48:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  429b4c:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429b50:	ldr	x0, [x8, #1096]
  429b54:	add	x9, x9, #0xe8b
  429b58:	cmp	x23, #0x0
  429b5c:	csel	x3, x9, x23, eq  // eq = none
  429b60:	cmp	x21, #0x0
  429b64:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429b68:	csel	x4, x9, x21, eq  // eq = none
  429b6c:	add	x1, x1, #0xe7a
  429b70:	mov	x2, x20
  429b74:	mov	w5, w19
  429b78:	bl	4030d0 <fprintf@plt>
  429b7c:	cbz	x22, 429a04 <feof@plt+0x26164>
  429b80:	mov	x0, x22
  429b84:	bl	4031d0 <free@plt>
  429b88:	b	429a04 <feof@plt+0x26164>
  429b8c:	sub	sp, sp, #0x70
  429b90:	stp	x29, x30, [sp, #16]
  429b94:	stp	x28, x27, [sp, #32]
  429b98:	stp	x26, x25, [sp, #48]
  429b9c:	stp	x24, x23, [sp, #64]
  429ba0:	stp	x22, x21, [sp, #80]
  429ba4:	stp	x20, x19, [sp, #96]
  429ba8:	add	x29, sp, #0x10
  429bac:	str	xzr, [sp, #8]
  429bb0:	mov	x19, x0
  429bb4:	ldr	x0, [x0]
  429bb8:	mov	w20, w1
  429bbc:	ldrb	w8, [x0, #65]
  429bc0:	cbz	w8, 429bd0 <feof@plt+0x26330>
  429bc4:	bl	435e80 <feof@plt+0x325e0>
  429bc8:	ldr	x8, [x19]
  429bcc:	strb	wzr, [x8, #65]
  429bd0:	cmp	w20, #0x2
  429bd4:	b.cc	429db4 <feof@plt+0x26514>  // b.lo, b.ul, b.last
  429bd8:	adrp	x27, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  429bdc:	ldr	x0, [x27, #408]
  429be0:	add	x3, sp, #0x8
  429be4:	mov	w2, #0x2                   	// #2
  429be8:	mov	w1, w20
  429bec:	bl	44f288 <feof@plt+0x4b9e8>
  429bf0:	ldr	x1, [sp, #8]
  429bf4:	cbz	x1, 429db4 <feof@plt+0x26514>
  429bf8:	ldr	x8, [x19, #208]
  429bfc:	cmp	x8, x1
  429c00:	b.eq	429db4 <feof@plt+0x26514>  // b.none
  429c04:	str	x1, [x19, #208]
  429c08:	ldr	w20, [x1, #20]
  429c0c:	cbz	w20, 429db4 <feof@plt+0x26514>
  429c10:	ldr	x0, [x27, #408]
  429c14:	bl	44e604 <feof@plt+0x4ad64>
  429c18:	str	x0, [sp, #8]
  429c1c:	ldr	w9, [x0]
  429c20:	ldrh	w8, [x0, #6]
  429c24:	ldr	w10, [x0, #16]
  429c28:	ldrb	w11, [x19, #121]
  429c2c:	sub	w9, w20, w9
  429c30:	lsr	w12, w9, w8
  429c34:	add	w3, w12, w10
  429c38:	cbz	w11, 429c88 <feof@plt+0x263e8>
  429c3c:	and	w10, w8, #0xff
  429c40:	mov	w11, #0xffffffff            	// #-1
  429c44:	lsl	w10, w11, w10
  429c48:	bic	w9, w9, w10
  429c4c:	lsr	w8, w8, #8
  429c50:	lsr	w4, w9, w8
  429c54:	adrp	x28, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  429c58:	cbz	w3, 429c94 <feof@plt+0x263f4>
  429c5c:	adrp	x8, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429c60:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429c64:	add	x8, x8, #0xeba
  429c68:	add	x9, x9, #0xebd
  429c6c:	cmp	w4, #0x0
  429c70:	adrp	x0, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  429c74:	csel	x2, x9, x8, eq  // eq = none
  429c78:	add	x0, x0, #0x148
  429c7c:	mov	w1, #0x20                  	// #32
  429c80:	bl	403530 <snprintf@plt>
  429c84:	b	429c98 <feof@plt+0x263f8>
  429c88:	mov	w4, wzr
  429c8c:	adrp	x28, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  429c90:	cbnz	w3, 429c5c <feof@plt+0x263bc>
  429c94:	strb	wzr, [x28, #328]
  429c98:	ldr	x20, [x19]
  429c9c:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429ca0:	add	x0, x0, #0xcf8
  429ca4:	bl	4033e0 <gettext@plt>
  429ca8:	ldr	x8, [sp, #8]
  429cac:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429cb0:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  429cb4:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429cb8:	ldr	x5, [x8, #8]
  429cbc:	adrp	x6, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  429cc0:	mov	x3, x0
  429cc4:	add	x1, x1, #0xd24
  429cc8:	add	x2, x2, #0x23b
  429ccc:	add	x4, x4, #0xac8
  429cd0:	add	x6, x6, #0x148
  429cd4:	mov	x0, x20
  429cd8:	bl	435dd0 <feof@plt+0x32530>
  429cdc:	ldr	x1, [sp, #8]
  429ce0:	ldr	w26, [x1, #20]
  429ce4:	cbz	w26, 429d9c <feof@plt+0x264fc>
  429ce8:	adrp	x20, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429cec:	adrp	x21, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429cf0:	adrp	x22, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429cf4:	adrp	x23, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429cf8:	adrp	x24, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  429cfc:	adrp	x25, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  429d00:	add	x20, x20, #0xd0e
  429d04:	add	x21, x21, #0xd24
  429d08:	add	x22, x22, #0xd32
  429d0c:	add	x23, x23, #0xac8
  429d10:	add	x24, x24, #0x148
  429d14:	add	x25, x25, #0xebd
  429d18:	b	429d5c <feof@plt+0x264bc>
  429d1c:	strb	wzr, [x28, #328]
  429d20:	ldr	x26, [x19]
  429d24:	mov	x0, x20
  429d28:	bl	4033e0 <gettext@plt>
  429d2c:	ldr	x8, [sp, #8]
  429d30:	mov	x3, x0
  429d34:	mov	x0, x26
  429d38:	mov	x1, x21
  429d3c:	ldr	x5, [x8, #8]
  429d40:	mov	x2, x22
  429d44:	mov	x4, x23
  429d48:	mov	x6, x24
  429d4c:	bl	435dd0 <feof@plt+0x32530>
  429d50:	ldr	x1, [sp, #8]
  429d54:	ldr	w26, [x1, #20]
  429d58:	cbz	w26, 429d9c <feof@plt+0x264fc>
  429d5c:	ldr	x0, [x27, #408]
  429d60:	bl	44e604 <feof@plt+0x4ad64>
  429d64:	str	x0, [sp, #8]
  429d68:	ldr	w8, [x0]
  429d6c:	ldrb	w9, [x0, #6]
  429d70:	ldr	w10, [x0, #16]
  429d74:	sub	w8, w26, w8
  429d78:	lsr	w8, w8, w9
  429d7c:	adds	w3, w8, w10
  429d80:	b.eq	429d1c <feof@plt+0x2647c>  // b.none
  429d84:	mov	w1, #0x20                  	// #32
  429d88:	mov	x0, x24
  429d8c:	mov	x2, x25
  429d90:	mov	w4, wzr
  429d94:	bl	403530 <snprintf@plt>
  429d98:	b	429d20 <feof@plt+0x26480>
  429d9c:	ldr	x0, [x19]
  429da0:	adrp	x1, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  429da4:	add	x1, x1, #0xe31
  429da8:	bl	435dd0 <feof@plt+0x32530>
  429dac:	ldr	x0, [x19]
  429db0:	bl	435e80 <feof@plt+0x325e0>
  429db4:	ldp	x20, x19, [sp, #96]
  429db8:	ldp	x22, x21, [sp, #80]
  429dbc:	ldp	x24, x23, [sp, #64]
  429dc0:	ldp	x26, x25, [sp, #48]
  429dc4:	ldp	x28, x27, [sp, #32]
  429dc8:	ldp	x29, x30, [sp, #16]
  429dcc:	add	sp, sp, #0x70
  429dd0:	ret
  429dd4:	mov	w1, wzr
  429dd8:	b	433624 <feof@plt+0x2fd84>
  429ddc:	stp	x29, x30, [sp, #-64]!
  429de0:	stp	x24, x23, [sp, #16]
  429de4:	stp	x22, x21, [sp, #32]
  429de8:	stp	x20, x19, [sp, #48]
  429dec:	mov	x29, sp
  429df0:	tbnz	w1, #31, 429e58 <feof@plt+0x265b8>
  429df4:	mov	w19, w2
  429df8:	cmp	w2, #0xd
  429dfc:	mov	w23, wzr
  429e00:	b.gt	429f00 <feof@plt+0x26660>
  429e04:	ldr	w8, [x0, #68]
  429e08:	mov	w21, w1
  429e0c:	mov	x20, x0
  429e10:	cmp	w8, w1
  429e14:	b.le	429f00 <feof@plt+0x26660>
  429e18:	ldr	x8, [x20, #72]
  429e1c:	mov	w22, w3
  429e20:	mov	w24, w21
  429e24:	ldr	w23, [x8, w21, uxtw #2]
  429e28:	cbz	w3, 429e60 <feof@plt+0x265c0>
  429e2c:	cbnz	w23, 429e74 <feof@plt+0x265d4>
  429e30:	ldp	x8, x1, [x20, #168]
  429e34:	mov	w0, w21
  429e38:	blr	x8
  429e3c:	cbz	w0, 429e68 <feof@plt+0x265c8>
  429e40:	ldrb	w8, [x20, #64]
  429e44:	mov	w9, #0x4                   	// #4
  429e48:	cmp	w8, #0x0
  429e4c:	mov	w8, #0x6                   	// #6
  429e50:	csel	w23, w8, w9, eq  // eq = none
  429e54:	b	429e6c <feof@plt+0x265cc>
  429e58:	mov	w23, wzr
  429e5c:	b	429f00 <feof@plt+0x26660>
  429e60:	str	w19, [x8, x24, lsl #2]
  429e64:	b	429f00 <feof@plt+0x26660>
  429e68:	mov	w23, #0x1                   	// #1
  429e6c:	ldr	x8, [x20, #72]
  429e70:	str	w23, [x8, x24, lsl #2]
  429e74:	ldrsw	x24, [x20, #88]
  429e78:	add	x9, x24, x24, lsl #1
  429e7c:	add	x8, x24, #0x1
  429e80:	lsl	x9, x9, #2
  429e84:	sub	x8, x8, #0x1
  429e88:	cmp	x8, #0x1
  429e8c:	b.lt	429eb8 <feof@plt+0x26618>  // b.tstop
  429e90:	ldr	x0, [x20, #80]
  429e94:	add	x10, x0, x9
  429e98:	ldur	w11, [x10, #-8]
  429e9c:	sub	x10, x9, #0xc
  429ea0:	mov	x9, x10
  429ea4:	cmp	w11, w21
  429ea8:	b.ne	429e84 <feof@plt+0x265e4>  // b.any
  429eac:	add	x8, x0, x10
  429eb0:	ldr	w23, [x8, #8]
  429eb4:	b	429ebc <feof@plt+0x2661c>
  429eb8:	ldr	x0, [x20, #80]
  429ebc:	add	w8, w24, #0x1
  429ec0:	mov	w9, #0xc                   	// #12
  429ec4:	smull	x1, w8, w9
  429ec8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  429ecc:	add	x8, x24, x24, lsl #1
  429ed0:	lsl	x8, x8, #2
  429ed4:	str	x0, [x20, #80]
  429ed8:	str	w22, [x0, x8]
  429edc:	ldr	x9, [x20, #80]
  429ee0:	add	x9, x9, x8
  429ee4:	str	w21, [x9, #4]
  429ee8:	ldr	x9, [x20, #80]
  429eec:	add	x8, x9, x8
  429ef0:	str	w19, [x8, #8]
  429ef4:	ldr	w8, [x20, #88]
  429ef8:	add	w8, w8, #0x1
  429efc:	str	w8, [x20, #88]
  429f00:	mov	w0, w23
  429f04:	ldp	x20, x19, [sp, #48]
  429f08:	ldp	x22, x21, [sp, #32]
  429f0c:	ldp	x24, x23, [sp, #16]
  429f10:	ldp	x29, x30, [sp], #64
  429f14:	ret
  429f18:	stp	x29, x30, [sp, #-32]!
  429f1c:	str	x19, [sp, #16]
  429f20:	mov	x29, sp
  429f24:	ldrsw	x8, [x0, #104]
  429f28:	mov	x19, x0
  429f2c:	ldr	x0, [x0, #96]
  429f30:	lsl	x8, x8, #2
  429f34:	add	x1, x8, #0x4
  429f38:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  429f3c:	ldrsw	x8, [x19, #104]
  429f40:	ldr	w9, [x19, #88]
  429f44:	str	x0, [x19, #96]
  429f48:	add	w10, w8, #0x1
  429f4c:	str	w10, [x19, #104]
  429f50:	ldr	x19, [sp, #16]
  429f54:	str	w9, [x0, x8, lsl #2]
  429f58:	ldp	x29, x30, [sp], #32
  429f5c:	ret
  429f60:	stp	x29, x30, [sp, #-48]!
  429f64:	stp	x22, x21, [sp, #16]
  429f68:	stp	x20, x19, [sp, #32]
  429f6c:	mov	x29, sp
  429f70:	ldr	w8, [x0, #104]
  429f74:	mov	x19, x0
  429f78:	mov	w20, w1
  429f7c:	cbz	w8, 429f94 <feof@plt+0x266f4>
  429f80:	ldr	x9, [x19, #96]
  429f84:	sub	w8, w8, #0x1
  429f88:	str	w8, [x19, #104]
  429f8c:	ldr	w21, [x9, w8, sxtw #2]
  429f90:	b	429f98 <feof@plt+0x266f8>
  429f94:	mov	w21, wzr
  429f98:	ldrsw	x8, [x19, #88]
  429f9c:	ldr	x0, [x19, #80]
  429fa0:	add	x8, x8, x8, lsl #1
  429fa4:	lsl	x22, x8, #2
  429fa8:	add	x1, x22, #0xc
  429fac:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  429fb0:	str	x0, [x19, #80]
  429fb4:	str	w20, [x0, x22]
  429fb8:	ldr	x8, [x19, #80]
  429fbc:	mov	w9, #0xf                   	// #15
  429fc0:	add	x8, x8, x22
  429fc4:	str	w21, [x8, #4]
  429fc8:	ldr	x8, [x19, #80]
  429fcc:	add	x8, x8, x22
  429fd0:	str	w9, [x8, #8]
  429fd4:	ldr	w8, [x19, #88]
  429fd8:	add	w8, w8, #0x1
  429fdc:	str	w8, [x19, #88]
  429fe0:	ldp	x20, x19, [sp, #32]
  429fe4:	ldp	x22, x21, [sp, #16]
  429fe8:	ldp	x29, x30, [sp], #48
  429fec:	ret
  429ff0:	sub	sp, sp, #0x90
  429ff4:	stp	x29, x30, [sp, #64]
  429ff8:	stp	x26, x25, [sp, #80]
  429ffc:	stp	x24, x23, [sp, #96]
  42a000:	stp	x22, x21, [sp, #112]
  42a004:	stp	x20, x19, [sp, #128]
  42a008:	add	x29, sp, #0x40
  42a00c:	mov	x20, x1
  42a010:	mov	x19, x0
  42a014:	mov	x0, x1
  42a018:	mov	w1, wzr
  42a01c:	bl	433624 <feof@plt+0x2fd84>
  42a020:	ldr	w21, [x20, #56]
  42a024:	mov	w1, w0
  42a028:	cmp	w21, #0xa
  42a02c:	b.eq	42a03c <feof@plt+0x2679c>  // b.none
  42a030:	cmp	w21, #0x6
  42a034:	mov	w8, w21
  42a038:	b.ne	42a088 <feof@plt+0x267e8>  // b.any
  42a03c:	ldrb	w8, [x19, #129]
  42a040:	cbnz	w8, 42a098 <feof@plt+0x267f8>
  42a044:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42a048:	ldr	x0, [x8, #408]
  42a04c:	bl	44f5f8 <feof@plt+0x4bd58>
  42a050:	cbz	w0, 42a05c <feof@plt+0x267bc>
  42a054:	ldrb	w8, [x19, #130]
  42a058:	cbz	w8, 42a098 <feof@plt+0x267f8>
  42a05c:	ldr	w8, [x20, #56]
  42a060:	cmp	w8, #0xa
  42a064:	b.ne	42a088 <feof@plt+0x267e8>  // b.any
  42a068:	ldrb	w8, [x19, #122]
  42a06c:	mov	w9, #0x4                   	// #4
  42a070:	cmp	w8, #0x0
  42a074:	mov	w8, #0x6                   	// #6
  42a078:	csel	w21, w8, w9, eq  // eq = none
  42a07c:	str	w21, [x20, #56]
  42a080:	mov	w8, w21
  42a084:	b	42a0a4 <feof@plt+0x26804>
  42a088:	cmp	w8, #0x8
  42a08c:	b.ne	42a0a4 <feof@plt+0x26804>  // b.any
  42a090:	ldrb	w8, [x19, #220]
  42a094:	cbz	w8, 42a0a0 <feof@plt+0x26800>
  42a098:	mov	w0, wzr
  42a09c:	b	42a488 <feof@plt+0x26be8>
  42a0a0:	mov	w8, #0x8                   	// #8
  42a0a4:	ldr	w9, [x19, #216]
  42a0a8:	cmp	w9, #0x1
  42a0ac:	b.lt	42a0d0 <feof@plt+0x26830>  // b.tstop
  42a0b0:	cmp	w8, #0xd
  42a0b4:	b.eq	42a0c0 <feof@plt+0x26820>  // b.none
  42a0b8:	cmp	w8, #0x3
  42a0bc:	b.ne	42a4b4 <feof@plt+0x26c14>  // b.any
  42a0c0:	cmp	w9, #0x1
  42a0c4:	b.ne	42a4b4 <feof@plt+0x26c14>  // b.any
  42a0c8:	ldr	x0, [x19]
  42a0cc:	bl	4361fc <feof@plt+0x3295c>
  42a0d0:	ldrb	w8, [x19, #64]
  42a0d4:	cbz	w8, 42a0ec <feof@plt+0x2684c>
  42a0d8:	ldr	w8, [x20, #56]
  42a0dc:	cmp	w8, #0x6
  42a0e0:	b.ne	42a0ec <feof@plt+0x2684c>  // b.any
  42a0e4:	mov	w8, #0x4                   	// #4
  42a0e8:	str	w8, [x20, #56]
  42a0ec:	ldr	w0, [x20, #60]
  42a0f0:	cbz	w0, 42a100 <feof@plt+0x26860>
  42a0f4:	ldr	w8, [x19, #124]
  42a0f8:	cmp	w0, w8
  42a0fc:	b.ne	42a38c <feof@plt+0x26aec>  // b.any
  42a100:	ldr	w8, [x20, #56]
  42a104:	cmp	w8, #0x8
  42a108:	b.eq	42a12c <feof@plt+0x2688c>  // b.none
  42a10c:	ldr	w2, [x19, #132]
  42a110:	cbz	w2, 42a12c <feof@plt+0x2688c>
  42a114:	ldp	w8, w9, [x19, #24]
  42a118:	ldr	w10, [x19, #56]
  42a11c:	add	w8, w9, w8
  42a120:	add	w8, w8, w10
  42a124:	cmp	w8, w2
  42a128:	b.ge	42a520 <feof@plt+0x26c80>  // b.tcont
  42a12c:	ldr	w8, [x19, #216]
  42a130:	add	w8, w8, #0x1
  42a134:	str	w8, [x19, #216]
  42a138:	ldr	w8, [x20, #56]
  42a13c:	cmp	w8, #0xd
  42a140:	b.eq	42a14c <feof@plt+0x268ac>  // b.none
  42a144:	cmp	w8, #0x3
  42a148:	b.ne	42a184 <feof@plt+0x268e4>  // b.any
  42a14c:	ldr	w9, [x19, #24]
  42a150:	cmp	w9, #0x0
  42a154:	b.gt	42a164 <feof@plt+0x268c4>
  42a158:	ldr	w9, [x19, #28]
  42a15c:	cmp	w9, #0x1
  42a160:	b.lt	42a16c <feof@plt+0x268cc>  // b.tstop
  42a164:	ldrb	w9, [x19, #120]
  42a168:	cbz	w9, 42a4ec <feof@plt+0x26c4c>
  42a16c:	ldr	x9, [x19, #160]
  42a170:	cbz	x9, 42a184 <feof@plt+0x268e4>
  42a174:	ldp	x1, x2, [x20]
  42a178:	mov	x0, x19
  42a17c:	blr	x9
  42a180:	ldr	w8, [x20, #56]
  42a184:	cmp	w21, #0x6
  42a188:	b.ne	42a1ac <feof@plt+0x2690c>  // b.any
  42a18c:	cmp	w8, #0x4
  42a190:	b.ne	42a1ac <feof@plt+0x2690c>  // b.any
  42a194:	ldr	w8, [x19, #56]
  42a198:	add	w8, w8, #0x1
  42a19c:	str	w8, [x19, #56]
  42a1a0:	ldr	w8, [x19, #244]
  42a1a4:	cbnz	w8, 42a1d8 <feof@plt+0x26938>
  42a1a8:	b	42a1c4 <feof@plt+0x26924>
  42a1ac:	add	x8, x19, w8, sxtw #2
  42a1b0:	ldr	w9, [x8, #8]
  42a1b4:	add	w9, w9, #0x1
  42a1b8:	str	w9, [x8, #8]
  42a1bc:	ldr	w8, [x19, #244]
  42a1c0:	cbnz	w8, 42a1d8 <feof@plt+0x26938>
  42a1c4:	ldr	x8, [x19, #248]
  42a1c8:	cbz	x8, 42a1d8 <feof@plt+0x26938>
  42a1cc:	mov	x0, x19
  42a1d0:	blr	x8
  42a1d4:	ldr	w8, [x19, #244]
  42a1d8:	add	w8, w8, #0x1
  42a1dc:	mov	x9, x20
  42a1e0:	str	w8, [x19, #244]
  42a1e4:	str	xzr, [x9, #48]!
  42a1e8:	str	x9, [x20, #24]
  42a1ec:	ldr	x0, [x19]
  42a1f0:	mov	x1, x20
  42a1f4:	bl	433b7c <feof@plt+0x302dc>
  42a1f8:	ldr	x8, [x19, #136]
  42a1fc:	mov	x0, x19
  42a200:	mov	x1, x20
  42a204:	blr	x8
  42a208:	ldr	x0, [x19]
  42a20c:	bl	435688 <feof@plt+0x31de8>
  42a210:	ldrb	w8, [x19, #119]
  42a214:	cbz	w8, 42a2b4 <feof@plt+0x26a14>
  42a218:	ldr	x8, [x19, #184]
  42a21c:	ldp	w3, w1, [x20, #56]
  42a220:	mov	x0, x19
  42a224:	mov	w2, w21
  42a228:	blr	x8
  42a22c:	cbz	x0, 42a2b4 <feof@plt+0x26a14>
  42a230:	ldr	x23, [x19]
  42a234:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42a238:	mov	x22, x0
  42a23c:	add	x1, x1, #0xec1
  42a240:	mov	x0, x23
  42a244:	bl	4354fc <feof@plt+0x31c5c>
  42a248:	ldr	w8, [x20, #56]
  42a24c:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42a250:	add	x9, x9, #0x9d0
  42a254:	ldrb	w24, [x23, #67]
  42a258:	ldr	x25, [x9, x8, lsl #3]
  42a25c:	mov	x0, x25
  42a260:	bl	4030b0 <strlen@plt>
  42a264:	mov	x2, x0
  42a268:	mov	w0, w24
  42a26c:	mov	x1, x25
  42a270:	bl	42c4e0 <feof@plt+0x28c40>
  42a274:	mov	x1, x0
  42a278:	mov	x0, x23
  42a27c:	bl	4354fc <feof@plt+0x31c5c>
  42a280:	mov	x0, x23
  42a284:	mov	x1, x22
  42a288:	bl	4354fc <feof@plt+0x31c5c>
  42a28c:	ldrb	w0, [x23, #67]
  42a290:	bl	42c564 <feof@plt+0x28cc4>
  42a294:	mov	x1, x0
  42a298:	mov	x0, x23
  42a29c:	bl	4354fc <feof@plt+0x31c5c>
  42a2a0:	mov	w1, #0x5d                  	// #93
  42a2a4:	mov	x0, x23
  42a2a8:	bl	433718 <feof@plt+0x2fe78>
  42a2ac:	mov	x0, x22
  42a2b0:	bl	4031d0 <free@plt>
  42a2b4:	ldr	x8, [x19, #152]
  42a2b8:	mov	x0, x19
  42a2bc:	mov	x1, x20
  42a2c0:	mov	w2, w21
  42a2c4:	blr	x8
  42a2c8:	ldrb	w8, [x19, #229]
  42a2cc:	cbz	w8, 42a450 <feof@plt+0x26bb0>
  42a2d0:	ldr	x21, [x19]
  42a2d4:	cbz	x21, 42a4bc <feof@plt+0x26c1c>
  42a2d8:	ldr	x24, [x20, #40]
  42a2dc:	cbz	x24, 42a4d4 <feof@plt+0x26c34>
  42a2e0:	ldr	w8, [x24, #120]
  42a2e4:	cbz	w8, 42a448 <feof@plt+0x26ba8>
  42a2e8:	adrp	x22, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42a2ec:	adrp	x23, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42a2f0:	mov	w25, wzr
  42a2f4:	add	x22, x22, #0xedb
  42a2f8:	add	x23, x23, #0xee3
  42a2fc:	b	42a378 <feof@plt+0x26ad8>
  42a300:	ldr	x8, [x24, #152]
  42a304:	sub	w9, w25, #0x2
  42a308:	add	x8, x8, w9, sxtw #3
  42a30c:	ldr	x26, [x8]
  42a310:	add	x8, sp, #0x20
  42a314:	ldr	w0, [x26]
  42a318:	bl	4377f8 <feof@plt+0x33f58>
  42a31c:	mov	x0, x21
  42a320:	mov	x1, x22
  42a324:	bl	4354fc <feof@plt+0x31c5c>
  42a328:	ldr	x1, [sp, #32]
  42a32c:	mov	x0, x21
  42a330:	bl	42c294 <feof@plt+0x289f4>
  42a334:	ldr	w0, [x26, #4]
  42a338:	mov	x8, sp
  42a33c:	bl	4377f8 <feof@plt+0x33f58>
  42a340:	ldp	w2, w3, [sp, #40]
  42a344:	ldp	w4, w5, [sp, #8]
  42a348:	mov	x0, x21
  42a34c:	mov	x1, x23
  42a350:	bl	435d34 <feof@plt+0x32494>
  42a354:	ldr	x1, [x26, #8]
  42a358:	mov	x0, x21
  42a35c:	bl	42c294 <feof@plt+0x289f4>
  42a360:	mov	x0, x21
  42a364:	bl	435e80 <feof@plt+0x325e0>
  42a368:	ldr	w8, [x24, #120]
  42a36c:	add	w25, w25, #0x1
  42a370:	cmp	w25, w8
  42a374:	b.cs	42a444 <feof@plt+0x26ba4>  // b.hs, b.nlast
  42a378:	cmp	w25, #0x1
  42a37c:	b.gt	42a300 <feof@plt+0x26a60>
  42a380:	add	x8, x24, w25, sxtw #3
  42a384:	add	x8, x8, #0x80
  42a388:	b	42a30c <feof@plt+0x26a6c>
  42a38c:	ldp	x8, x1, [x19, #168]
  42a390:	blr	x8
  42a394:	cbz	w0, 42a488 <feof@plt+0x26be8>
  42a398:	ldr	w8, [x19, #88]
  42a39c:	cmp	w8, #0x1
  42a3a0:	b.lt	42a424 <feof@plt+0x26b84>  // b.tstop
  42a3a4:	mov	x0, x20
  42a3a8:	mov	w1, wzr
  42a3ac:	bl	433624 <feof@plt+0x2fd84>
  42a3b0:	ldr	w23, [x19, #88]
  42a3b4:	cmp	w23, #0x1
  42a3b8:	b.lt	42a424 <feof@plt+0x26b84>  // b.tstop
  42a3bc:	mov	w22, w0
  42a3c0:	adrp	x24, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42a3c4:	mov	w25, #0xc                   	// #12
  42a3c8:	b	42a3d8 <feof@plt+0x26b38>
  42a3cc:	mov	w23, w9
  42a3d0:	cmp	w23, #0x0
  42a3d4:	b.le	42a424 <feof@plt+0x26b84>
  42a3d8:	ldr	x9, [x19, #80]
  42a3dc:	sxtw	x8, w23
  42a3e0:	sub	x23, x8, #0x1
  42a3e4:	mul	x8, x23, x25
  42a3e8:	ldr	x0, [x24, #408]
  42a3ec:	ldr	w1, [x9, x8]
  42a3f0:	mov	w2, w22
  42a3f4:	bl	44f6c0 <feof@plt+0x4be20>
  42a3f8:	tbnz	w0, #31, 42a3d0 <feof@plt+0x26b30>
  42a3fc:	ldr	x8, [x19, #80]
  42a400:	madd	x9, x23, x25, x8
  42a404:	ldp	w9, w8, [x9, #4]
  42a408:	cmp	w8, #0xf
  42a40c:	b.eq	42a3cc <feof@plt+0x26b2c>  // b.none
  42a410:	cbz	w9, 42a420 <feof@plt+0x26b80>
  42a414:	ldr	w10, [x20, #60]
  42a418:	cmp	w9, w10
  42a41c:	b.ne	42a3d0 <feof@plt+0x26b30>  // b.any
  42a420:	cbnz	w8, 42a434 <feof@plt+0x26b94>
  42a424:	ldr	x8, [x19, #72]
  42a428:	ldrsw	x9, [x20, #60]
  42a42c:	ldr	w8, [x8, x9, lsl #2]
  42a430:	cbz	w8, 42a4a4 <feof@plt+0x26c04>
  42a434:	str	w8, [x20, #56]
  42a438:	cmp	w8, #0x1
  42a43c:	b.eq	42a098 <feof@plt+0x267f8>  // b.none
  42a440:	b	42a104 <feof@plt+0x26864>
  42a444:	ldr	x21, [x19]
  42a448:	mov	x0, x21
  42a44c:	bl	4357b0 <feof@plt+0x31f10>
  42a450:	ldr	w1, [x20, #56]
  42a454:	mov	x0, x19
  42a458:	bl	429800 <feof@plt+0x25f60>
  42a45c:	str	xzr, [x20, #48]
  42a460:	ldr	x0, [x19, #232]
  42a464:	cbz	x0, 42a478 <feof@plt+0x26bd8>
  42a468:	ldr	x1, [x20, #40]
  42a46c:	ldrb	w8, [x1, #161]
  42a470:	cbnz	w8, 42a478 <feof@plt+0x26bd8>
  42a474:	bl	4314b4 <feof@plt+0x2dc14>
  42a478:	ldr	w8, [x19, #216]
  42a47c:	mov	w0, #0x1                   	// #1
  42a480:	sub	w8, w8, #0x1
  42a484:	str	w8, [x19, #216]
  42a488:	ldp	x20, x19, [sp, #128]
  42a48c:	ldp	x22, x21, [sp, #112]
  42a490:	ldp	x24, x23, [sp, #96]
  42a494:	ldp	x26, x25, [sp, #80]
  42a498:	ldp	x29, x30, [sp, #64]
  42a49c:	add	sp, sp, #0x90
  42a4a0:	ret
  42a4a4:	ldr	w8, [x20, #56]
  42a4a8:	cmp	w8, #0x1
  42a4ac:	b.eq	42a098 <feof@plt+0x267f8>  // b.none
  42a4b0:	b	42a104 <feof@plt+0x26864>
  42a4b4:	mov	x0, x19
  42a4b8:	bl	42a53c <feof@plt+0x26c9c>
  42a4bc:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42a4c0:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42a4c4:	add	x0, x0, #0xd70
  42a4c8:	add	x2, x2, #0xec4
  42a4cc:	mov	w1, #0x322                 	// #802
  42a4d0:	bl	429434 <feof@plt+0x25b94>
  42a4d4:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42a4d8:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42a4dc:	add	x0, x0, #0xd70
  42a4e0:	add	x2, x2, #0xec4
  42a4e4:	mov	w1, #0x323                 	// #803
  42a4e8:	bl	429434 <feof@plt+0x25b94>
  42a4ec:	mov	x0, x20
  42a4f0:	bl	429dd4 <feof@plt+0x26534>
  42a4f4:	add	x8, sp, #0x20
  42a4f8:	bl	4377f8 <feof@plt+0x33f58>
  42a4fc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42a500:	ldr	x2, [sp, #32]
  42a504:	ldr	x0, [x8, #1096]
  42a508:	ldr	w3, [sp, #40]
  42a50c:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42a510:	add	x1, x1, #0xd35
  42a514:	bl	429778 <feof@plt+0x25ed8>
  42a518:	mov	w0, #0x4                   	// #4
  42a51c:	bl	403730 <exit@plt>
  42a520:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42a524:	ldr	x0, [x8, #1096]
  42a528:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42a52c:	add	x1, x1, #0xbc0
  42a530:	bl	429778 <feof@plt+0x25ed8>
  42a534:	mov	w0, #0x1                   	// #1
  42a538:	bl	403730 <exit@plt>
  42a53c:	stp	x29, x30, [sp, #-32]!
  42a540:	str	x19, [sp, #16]
  42a544:	mov	x29, sp
  42a548:	ldr	w8, [x0, #216]
  42a54c:	mov	x19, x0
  42a550:	cmp	w8, #0x2
  42a554:	b.gt	42a560 <feof@plt+0x26cc0>
  42a558:	ldr	x0, [x19]
  42a55c:	bl	4361fc <feof@plt+0x3295c>
  42a560:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42a564:	ldr	x0, [x8, #1096]
  42a568:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42a56c:	add	x1, x1, #0xf1c
  42a570:	bl	429778 <feof@plt+0x25ed8>
  42a574:	mov	w1, #0x3                   	// #3
  42a578:	mov	x0, x19
  42a57c:	bl	429800 <feof@plt+0x25f60>
  42a580:	bl	42996c <feof@plt+0x260cc>
  42a584:	tbnz	w0, #31, 42a5bc <feof@plt+0x26d1c>
  42a588:	mov	w8, w0
  42a58c:	cbz	w0, 42a5b4 <feof@plt+0x26d14>
  42a590:	mov	w9, #0xcccd                	// #52429
  42a594:	mov	w0, wzr
  42a598:	movk	w9, #0xcccc, lsl #16
  42a59c:	umull	x10, w8, w9
  42a5a0:	cmp	w8, #0x9
  42a5a4:	lsr	x8, x10, #35
  42a5a8:	add	w0, w0, #0x1
  42a5ac:	b.hi	42a59c <feof@plt+0x26cfc>  // b.pmore
  42a5b0:	ret
  42a5b4:	mov	w0, #0x1                   	// #1
  42a5b8:	ret
  42a5bc:	stp	x29, x30, [sp, #-16]!
  42a5c0:	mov	x29, sp
  42a5c4:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42a5c8:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42a5cc:	add	x0, x0, #0xd70
  42a5d0:	add	x2, x2, #0xd65
  42a5d4:	mov	w1, #0x415                 	// #1045
  42a5d8:	bl	429434 <feof@plt+0x25b94>
  42a5dc:	ldrb	w8, [x0]
  42a5e0:	mov	x9, x0
  42a5e4:	cmp	w8, #0x2e
  42a5e8:	b.ne	42a614 <feof@plt+0x26d74>  // b.any
  42a5ec:	mov	x9, x0
  42a5f0:	ldrb	w8, [x9, #1]
  42a5f4:	cmp	w8, #0x2e
  42a5f8:	b.ne	42a63c <feof@plt+0x26d9c>  // b.any
  42a5fc:	ldrb	w8, [x9, #2]
  42a600:	cmp	w8, #0x2f
  42a604:	b.ne	42a63c <feof@plt+0x26d9c>  // b.any
  42a608:	ldrb	w8, [x9, #3]!
  42a60c:	cmp	w8, #0x2e
  42a610:	b.eq	42a5f0 <feof@plt+0x26d50>  // b.none
  42a614:	cmp	w8, #0x67
  42a618:	b.ne	42a63c <feof@plt+0x26d9c>  // b.any
  42a61c:	adrp	x8, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42a620:	add	x8, x8, #0xd77
  42a624:	ldrb	w10, [x9, #1]!
  42a628:	ldrb	w11, [x8], #1
  42a62c:	cbz	w11, 42a63c <feof@plt+0x26d9c>
  42a630:	cbz	w10, 42a63c <feof@plt+0x26d9c>
  42a634:	cmp	w10, w11
  42a638:	b.eq	42a624 <feof@plt+0x26d84>  // b.none
  42a63c:	mov	x8, x9
  42a640:	cmp	x9, x0
  42a644:	b.ls	42a658 <feof@plt+0x26db8>  // b.plast
  42a648:	mov	x9, x8
  42a64c:	ldrb	w10, [x9, #-1]!
  42a650:	cmp	w10, #0x2f
  42a654:	b.ne	42a63c <feof@plt+0x26d9c>  // b.any
  42a658:	mov	x0, x8
  42a65c:	ret
  42a660:	sub	sp, sp, #0x120
  42a664:	stp	x29, x30, [sp, #256]
  42a668:	stp	x28, x19, [sp, #272]
  42a66c:	add	x29, sp, #0x100
  42a670:	mov	x8, #0xffffffffffffffc8    	// #-56
  42a674:	mov	x9, sp
  42a678:	add	x10, sp, #0x80
  42a67c:	movk	x8, #0xff80, lsl #32
  42a680:	add	x11, x29, #0x20
  42a684:	add	x9, x9, #0x80
  42a688:	add	x10, x10, #0x38
  42a68c:	mov	x19, x0
  42a690:	stp	x1, x2, [sp, #128]
  42a694:	stp	x3, x4, [sp, #144]
  42a698:	stp	x5, x6, [sp, #160]
  42a69c:	str	x7, [sp, #176]
  42a6a0:	stp	q0, q1, [sp]
  42a6a4:	stp	q2, q3, [sp, #32]
  42a6a8:	stp	q4, q5, [sp, #64]
  42a6ac:	stp	q6, q7, [sp, #96]
  42a6b0:	stp	x9, x8, [x29, #-56]
  42a6b4:	stp	x11, x10, [x29, #-72]
  42a6b8:	bl	4035c0 <__errno_location@plt>
  42a6bc:	ldr	w8, [x0]
  42a6c0:	sub	x9, x29, #0x48
  42a6c4:	mov	x0, x19
  42a6c8:	stur	x9, [x29, #-32]
  42a6cc:	stur	w8, [x29, #-24]
  42a6d0:	bl	4033e0 <gettext@plt>
  42a6d4:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42a6d8:	ldr	x8, [x19, #632]
  42a6dc:	stur	x0, [x29, #-40]
  42a6e0:	stur	xzr, [x29, #-16]
  42a6e4:	sub	x1, x29, #0x28
  42a6e8:	ldr	x0, [x8]
  42a6ec:	bl	435774 <feof@plt+0x31ed4>
  42a6f0:	ldr	x8, [x19, #632]
  42a6f4:	ldr	x0, [x8]
  42a6f8:	bl	4361fc <feof@plt+0x3295c>
  42a6fc:	ldp	x28, x19, [sp, #272]
  42a700:	ldp	x29, x30, [sp, #256]
  42a704:	add	sp, sp, #0x120
  42a708:	ret
  42a70c:	sub	sp, sp, #0x1e0
  42a710:	stp	x29, x30, [sp, #432]
  42a714:	stp	x28, x21, [sp, #448]
  42a718:	stp	x20, x19, [sp, #464]
  42a71c:	add	x29, sp, #0x1b0
  42a720:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42a724:	mov	x20, x2
  42a728:	mov	w2, w1
  42a72c:	ldr	x1, [x8, #408]
  42a730:	mov	x19, x0
  42a734:	stp	x3, x4, [sp, #128]
  42a738:	add	x0, sp, #0xa8
  42a73c:	mov	x3, xzr
  42a740:	stp	x5, x6, [sp, #144]
  42a744:	str	x7, [sp, #160]
  42a748:	stp	q1, q2, [sp, #16]
  42a74c:	stp	q3, q4, [sp, #48]
  42a750:	str	q0, [sp]
  42a754:	stp	q5, q6, [sp, #80]
  42a758:	str	q7, [sp, #112]
  42a75c:	add	x21, sp, #0xa8
  42a760:	bl	4506a8 <feof@plt+0x4ce08>
  42a764:	mov	x8, #0xffffffffffffffd8    	// #-40
  42a768:	mov	x9, sp
  42a76c:	add	x10, sp, #0x80
  42a770:	movk	x8, #0xff80, lsl #32
  42a774:	add	x11, x29, #0x30
  42a778:	add	x9, x9, #0x80
  42a77c:	add	x10, x10, #0x28
  42a780:	mov	x0, x20
  42a784:	stp	x9, x8, [x29, #-80]
  42a788:	stp	x11, x10, [x29, #-96]
  42a78c:	bl	4033e0 <gettext@plt>
  42a790:	mov	x20, x0
  42a794:	bl	4035c0 <__errno_location@plt>
  42a798:	adrp	x10, 47d000 <_obstack_memory_used@@Base+0x12fc>
  42a79c:	ldr	w8, [x0]
  42a7a0:	ldr	d0, [x10, #1648]
  42a7a4:	sub	x9, x29, #0x60
  42a7a8:	stp	x20, x9, [x29, #-64]
  42a7ac:	stur	w8, [x29, #-48]
  42a7b0:	stp	x21, x21, [x29, #-32]
  42a7b4:	stur	d0, [x29, #-8]
  42a7b8:	ldrb	w8, [x19, #220]
  42a7bc:	cbnz	w8, 42a820 <feof@plt+0x26f80>
  42a7c0:	ldr	x0, [x19]
  42a7c4:	bl	4359f0 <feof@plt+0x32150>
  42a7c8:	ldr	x20, [x19]
  42a7cc:	mov	x21, x0
  42a7d0:	sub	x1, x29, #0x40
  42a7d4:	mov	x0, x19
  42a7d8:	bl	4294ec <feof@plt+0x25c4c>
  42a7dc:	mov	x1, x0
  42a7e0:	mov	x0, x20
  42a7e4:	bl	435978 <feof@plt+0x320d8>
  42a7e8:	ldr	x0, [x19]
  42a7ec:	sub	x1, x29, #0x40
  42a7f0:	bl	433b7c <feof@plt+0x302dc>
  42a7f4:	ldr	x0, [x19]
  42a7f8:	bl	435688 <feof@plt+0x31de8>
  42a7fc:	ldr	x0, [x19]
  42a800:	bl	435a00 <feof@plt+0x32160>
  42a804:	ldr	x0, [x19]
  42a808:	mov	x1, x21
  42a80c:	bl	435978 <feof@plt+0x320d8>
  42a810:	add	x1, sp, #0xa8
  42a814:	mov	w2, #0x8                   	// #8
  42a818:	mov	x0, x19
  42a81c:	bl	42de28 <feof@plt+0x2a588>
  42a820:	add	x0, sp, #0xa8
  42a824:	bl	450788 <feof@plt+0x4cee8>
  42a828:	ldp	x20, x19, [sp, #464]
  42a82c:	ldp	x28, x21, [sp, #448]
  42a830:	ldp	x29, x30, [sp, #432]
  42a834:	add	sp, sp, #0x1e0
  42a838:	ret
  42a83c:	sub	sp, sp, #0x1b0
  42a840:	stp	x29, x30, [sp, #368]
  42a844:	str	x28, [sp, #384]
  42a848:	stp	x22, x21, [sp, #400]
  42a84c:	stp	x20, x19, [sp, #416]
  42a850:	add	x29, sp, #0x170
  42a854:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42a858:	ldr	x8, [x22, #632]
  42a85c:	stp	q4, q5, [sp, #64]
  42a860:	stp	q2, q3, [sp, #32]
  42a864:	stp	q0, q1, [sp]
  42a868:	stp	x6, x7, [sp, #152]
  42a86c:	stp	x4, x5, [sp, #136]
  42a870:	stp	q6, q7, [sp, #96]
  42a874:	ldr	w9, [x8, #240]
  42a878:	mov	x10, #0xffffffffffffffe0    	// #-32
  42a87c:	movk	x10, #0xff80, lsl #32
  42a880:	mov	w20, w2
  42a884:	add	w9, w9, #0x1
  42a888:	str	w9, [x8, #240]
  42a88c:	mov	x8, sp
  42a890:	add	x8, x8, #0x80
  42a894:	stp	x8, x10, [x29, #-16]
  42a898:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42a89c:	mov	w2, w1
  42a8a0:	ldr	x1, [x8, #408]
  42a8a4:	add	x9, sp, #0x88
  42a8a8:	mov	x19, x3
  42a8ac:	mov	w21, w0
  42a8b0:	add	x9, x9, #0x20
  42a8b4:	add	x8, x29, #0x40
  42a8b8:	add	x0, sp, #0xa8
  42a8bc:	mov	x3, xzr
  42a8c0:	stp	x8, x9, [x29, #-32]
  42a8c4:	bl	4506a8 <feof@plt+0x4ce08>
  42a8c8:	add	x0, sp, #0xa8
  42a8cc:	sub	x3, x29, #0x20
  42a8d0:	mov	w1, w20
  42a8d4:	mov	x2, x19
  42a8d8:	mov	w4, w21
  42a8dc:	bl	42a93c <feof@plt+0x2709c>
  42a8e0:	mov	w19, w0
  42a8e4:	add	x0, sp, #0xa8
  42a8e8:	bl	450788 <feof@plt+0x4cee8>
  42a8ec:	ldr	x0, [x22, #632]
  42a8f0:	ldr	w8, [x0, #240]
  42a8f4:	subs	w8, w8, #0x1
  42a8f8:	str	w8, [x0, #240]
  42a8fc:	b.ne	42a920 <feof@plt+0x27080>  // b.any
  42a900:	ldr	w8, [x0, #244]
  42a904:	cmp	w8, #0x1
  42a908:	b.lt	42a91c <feof@plt+0x2707c>  // b.tstop
  42a90c:	ldr	x8, [x0, #256]
  42a910:	cbz	x8, 42a91c <feof@plt+0x2707c>
  42a914:	blr	x8
  42a918:	ldr	x0, [x22, #632]
  42a91c:	str	wzr, [x0, #244]
  42a920:	and	w0, w19, #0x1
  42a924:	ldp	x20, x19, [sp, #416]
  42a928:	ldp	x22, x21, [sp, #400]
  42a92c:	ldr	x28, [sp, #384]
  42a930:	ldp	x29, x30, [sp, #368]
  42a934:	add	sp, sp, #0x1b0
  42a938:	ret
  42a93c:	sub	sp, sp, #0x80
  42a940:	stp	x29, x30, [sp, #64]
  42a944:	stp	x24, x23, [sp, #80]
  42a948:	stp	x22, x21, [sp, #96]
  42a94c:	stp	x20, x19, [sp, #112]
  42a950:	add	x29, sp, #0x40
  42a954:	mov	x20, x3
  42a958:	mov	x19, x0
  42a95c:	cmp	w4, #0xb
  42a960:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42a964:	b.ne	42a9b4 <feof@plt+0x27114>  // b.any
  42a968:	cbz	x19, 42aa20 <feof@plt+0x27180>
  42a96c:	ldr	x8, [x24, #632]
  42a970:	mov	w9, #0x6                   	// #6
  42a974:	mov	x0, x2
  42a978:	ldrb	w8, [x8, #123]
  42a97c:	cmp	w8, #0x0
  42a980:	mov	w8, #0x4                   	// #4
  42a984:	csel	w22, w8, w9, eq  // eq = none
  42a988:	bl	4033e0 <gettext@plt>
  42a98c:	mov	x21, x0
  42a990:	bl	4035c0 <__errno_location@plt>
  42a994:	ldr	w8, [x0]
  42a998:	ldr	x9, [x24, #632]
  42a99c:	stp	x21, x20, [sp]
  42a9a0:	stp	x19, x19, [sp, #32]
  42a9a4:	str	w8, [sp, #16]
  42a9a8:	ldr	w8, [x9, #124]
  42a9ac:	stp	w22, w8, [sp, #56]
  42a9b0:	b	42a9f8 <feof@plt+0x27158>
  42a9b4:	cbz	x19, 42aa20 <feof@plt+0x27180>
  42a9b8:	mov	x0, x2
  42a9bc:	mov	w22, w4
  42a9c0:	mov	w21, w1
  42a9c4:	bl	4033e0 <gettext@plt>
  42a9c8:	mov	x23, x0
  42a9cc:	bl	4035c0 <__errno_location@plt>
  42a9d0:	ldr	w8, [x0]
  42a9d4:	cmp	w22, #0xa
  42a9d8:	stp	x23, x20, [sp]
  42a9dc:	stp	x19, x19, [sp, #32]
  42a9e0:	str	w8, [sp, #16]
  42a9e4:	stp	w22, wzr, [sp, #56]
  42a9e8:	b.eq	42a9f4 <feof@plt+0x27154>  // b.none
  42a9ec:	cmp	w22, #0x6
  42a9f0:	b.ne	42a9f8 <feof@plt+0x27158>  // b.any
  42a9f4:	str	w21, [sp, #60]
  42a9f8:	ldr	x0, [x24, #632]
  42a9fc:	mov	x1, sp
  42aa00:	bl	429ff0 <feof@plt+0x26750>
  42aa04:	ldp	x20, x19, [sp, #112]
  42aa08:	ldp	x22, x21, [sp, #96]
  42aa0c:	ldp	x24, x23, [sp, #80]
  42aa10:	ldp	x29, x30, [sp, #64]
  42aa14:	and	w0, w0, #0x1
  42aa18:	add	sp, sp, #0x80
  42aa1c:	ret
  42aa20:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42aa24:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42aa28:	add	x0, x0, #0xd70
  42aa2c:	add	x2, x2, #0xafe
  42aa30:	mov	w1, #0x123                 	// #291
  42aa34:	bl	429434 <feof@plt+0x25b94>
  42aa38:	sub	sp, sp, #0xe0
  42aa3c:	stp	x29, x30, [sp, #192]
  42aa40:	stp	x20, x19, [sp, #208]
  42aa44:	add	x29, sp, #0xc0
  42aa48:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42aa4c:	ldr	x10, [x20, #632]
  42aa50:	stp	q4, q5, [sp, #64]
  42aa54:	stp	q2, q3, [sp, #32]
  42aa58:	stp	q0, q1, [sp]
  42aa5c:	stp	x6, x7, [x29, #-48]
  42aa60:	stp	x4, x5, [x29, #-64]
  42aa64:	stp	q6, q7, [sp, #96]
  42aa68:	ldr	w11, [x10, #240]
  42aa6c:	mov	x8, x3
  42aa70:	mov	w9, w0
  42aa74:	mov	x12, #0xffffffffffffffe0    	// #-32
  42aa78:	add	w11, w11, #0x1
  42aa7c:	mov	x13, sp
  42aa80:	str	w11, [x10, #240]
  42aa84:	sub	x10, x29, #0x40
  42aa88:	movk	x12, #0xff80, lsl #32
  42aa8c:	add	x11, x29, #0x20
  42aa90:	add	x13, x13, #0x80
  42aa94:	add	x10, x10, #0x20
  42aa98:	sub	x3, x29, #0x20
  42aa9c:	mov	x0, x1
  42aaa0:	mov	w1, w2
  42aaa4:	mov	x2, x8
  42aaa8:	mov	w4, w9
  42aaac:	stp	x13, x12, [x29, #-16]
  42aab0:	stp	x11, x10, [x29, #-32]
  42aab4:	bl	42a93c <feof@plt+0x2709c>
  42aab8:	mov	w19, w0
  42aabc:	ldr	x0, [x20, #632]
  42aac0:	ldr	w8, [x0, #240]
  42aac4:	subs	w8, w8, #0x1
  42aac8:	str	w8, [x0, #240]
  42aacc:	b.ne	42aaf0 <feof@plt+0x27250>  // b.any
  42aad0:	ldr	w8, [x0, #244]
  42aad4:	cmp	w8, #0x1
  42aad8:	b.lt	42aaec <feof@plt+0x2724c>  // b.tstop
  42aadc:	ldr	x8, [x0, #256]
  42aae0:	cbz	x8, 42aaec <feof@plt+0x2724c>
  42aae4:	blr	x8
  42aae8:	ldr	x0, [x20, #632]
  42aaec:	str	wzr, [x0, #244]
  42aaf0:	and	w0, w19, #0x1
  42aaf4:	ldp	x20, x19, [sp, #208]
  42aaf8:	ldp	x29, x30, [sp, #192]
  42aafc:	add	sp, sp, #0xe0
  42ab00:	ret
  42ab04:	sub	sp, sp, #0xe0
  42ab08:	stp	x29, x30, [sp, #176]
  42ab0c:	stp	x22, x21, [sp, #192]
  42ab10:	stp	x20, x19, [sp, #208]
  42ab14:	add	x29, sp, #0xb0
  42ab18:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42ab1c:	mov	w21, w2
  42ab20:	mov	w2, w1
  42ab24:	ldr	x1, [x8, #408]
  42ab28:	mov	x20, x3
  42ab2c:	mov	w22, w0
  42ab30:	add	x0, sp, #0x8
  42ab34:	mov	x3, xzr
  42ab38:	mov	x19, x4
  42ab3c:	bl	4506a8 <feof@plt+0x4ce08>
  42ab40:	add	x0, sp, #0x8
  42ab44:	mov	w1, w21
  42ab48:	mov	x2, x20
  42ab4c:	mov	x3, x19
  42ab50:	mov	w4, w22
  42ab54:	bl	42a93c <feof@plt+0x2709c>
  42ab58:	mov	w19, w0
  42ab5c:	add	x0, sp, #0x8
  42ab60:	bl	450788 <feof@plt+0x4cee8>
  42ab64:	and	w0, w19, #0x1
  42ab68:	ldp	x20, x19, [sp, #208]
  42ab6c:	ldp	x22, x21, [sp, #192]
  42ab70:	ldp	x29, x30, [sp, #176]
  42ab74:	add	sp, sp, #0xe0
  42ab78:	ret
  42ab7c:	sub	sp, sp, #0x1f0
  42ab80:	stp	x29, x30, [sp, #448]
  42ab84:	stp	x28, x21, [sp, #464]
  42ab88:	stp	x20, x19, [sp, #480]
  42ab8c:	add	x29, sp, #0x1c0
  42ab90:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42ab94:	ldr	x9, [x20, #632]
  42ab98:	stp	q4, q5, [sp, #64]
  42ab9c:	stp	q2, q3, [sp, #32]
  42aba0:	stp	q0, q1, [sp]
  42aba4:	stp	x6, x7, [sp, #168]
  42aba8:	stp	x4, x5, [sp, #152]
  42abac:	stp	x2, x3, [sp, #136]
  42abb0:	stp	q6, q7, [sp, #96]
  42abb4:	ldr	w12, [x9, #240]
  42abb8:	mov	x19, x1
  42abbc:	mov	w8, w0
  42abc0:	mov	x10, #0xffffffffffffffd0    	// #-48
  42abc4:	add	w12, w12, #0x1
  42abc8:	str	w12, [x9, #240]
  42abcc:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42abd0:	ldr	x1, [x9, #408]
  42abd4:	mov	x11, sp
  42abd8:	add	x13, sp, #0x88
  42abdc:	movk	x10, #0xff80, lsl #32
  42abe0:	add	x11, x11, #0x80
  42abe4:	add	x13, x13, #0x30
  42abe8:	add	x9, x29, #0x30
  42abec:	add	x0, sp, #0xb8
  42abf0:	mov	w2, w8
  42abf4:	mov	x3, xzr
  42abf8:	stp	x11, x10, [x29, #-80]
  42abfc:	stp	x9, x13, [x29, #-96]
  42ac00:	add	x21, sp, #0xb8
  42ac04:	bl	4506a8 <feof@plt+0x4ce08>
  42ac08:	mov	x0, x19
  42ac0c:	bl	4033e0 <gettext@plt>
  42ac10:	mov	x19, x0
  42ac14:	bl	4035c0 <__errno_location@plt>
  42ac18:	adrp	x10, 47d000 <_obstack_memory_used@@Base+0x12fc>
  42ac1c:	ldr	w8, [x0]
  42ac20:	ldr	x0, [x20, #632]
  42ac24:	ldr	d0, [x10, #1648]
  42ac28:	sub	x9, x29, #0x60
  42ac2c:	sub	x1, x29, #0x40
  42ac30:	stp	x19, x9, [x29, #-64]
  42ac34:	stur	w8, [x29, #-48]
  42ac38:	stp	x21, x21, [x29, #-32]
  42ac3c:	stur	d0, [x29, #-8]
  42ac40:	bl	429ff0 <feof@plt+0x26750>
  42ac44:	add	x0, sp, #0xb8
  42ac48:	bl	450788 <feof@plt+0x4cee8>
  42ac4c:	ldr	x0, [x20, #632]
  42ac50:	ldr	w8, [x0, #240]
  42ac54:	subs	w8, w8, #0x1
  42ac58:	str	w8, [x0, #240]
  42ac5c:	b.ne	42ac80 <feof@plt+0x273e0>  // b.any
  42ac60:	ldr	w8, [x0, #244]
  42ac64:	cmp	w8, #0x1
  42ac68:	b.lt	42ac7c <feof@plt+0x273dc>  // b.tstop
  42ac6c:	ldr	x8, [x0, #256]
  42ac70:	cbz	x8, 42ac7c <feof@plt+0x273dc>
  42ac74:	blr	x8
  42ac78:	ldr	x0, [x20, #632]
  42ac7c:	str	wzr, [x0, #244]
  42ac80:	ldp	x20, x19, [sp, #480]
  42ac84:	ldp	x28, x21, [sp, #464]
  42ac88:	ldp	x29, x30, [sp, #448]
  42ac8c:	add	sp, sp, #0x1f0
  42ac90:	ret
  42ac94:	sub	sp, sp, #0x140
  42ac98:	stp	x29, x30, [sp, #272]
  42ac9c:	stp	x28, x21, [sp, #288]
  42aca0:	stp	x20, x19, [sp, #304]
  42aca4:	add	x29, sp, #0x110
  42aca8:	stp	x2, x3, [sp, #128]
  42acac:	stp	x4, x5, [sp, #144]
  42acb0:	stp	x6, x7, [sp, #160]
  42acb4:	stp	q1, q2, [sp, #16]
  42acb8:	stp	q3, q4, [sp, #48]
  42acbc:	str	q0, [sp]
  42acc0:	stp	q5, q6, [sp, #80]
  42acc4:	str	q7, [sp, #112]
  42acc8:	cbz	x0, 42ad8c <feof@plt+0x274ec>
  42accc:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42acd0:	ldr	x8, [x21, #632]
  42acd4:	mov	x9, #0xffffffffffffffd0    	// #-48
  42acd8:	mov	x10, sp
  42acdc:	add	x11, sp, #0x80
  42ace0:	ldr	w12, [x8, #240]
  42ace4:	mov	x19, x0
  42ace8:	movk	x9, #0xff80, lsl #32
  42acec:	add	x13, x29, #0x30
  42acf0:	add	x10, x10, #0x80
  42acf4:	add	x11, x11, #0x30
  42acf8:	add	w12, w12, #0x1
  42acfc:	mov	x0, x1
  42ad00:	str	w12, [x8, #240]
  42ad04:	stp	x10, x9, [x29, #-80]
  42ad08:	stp	x13, x11, [x29, #-96]
  42ad0c:	bl	4033e0 <gettext@plt>
  42ad10:	mov	x20, x0
  42ad14:	bl	4035c0 <__errno_location@plt>
  42ad18:	adrp	x10, 47d000 <_obstack_memory_used@@Base+0x12fc>
  42ad1c:	ldr	w8, [x0]
  42ad20:	ldr	x0, [x21, #632]
  42ad24:	ldr	d0, [x10, #1648]
  42ad28:	sub	x9, x29, #0x60
  42ad2c:	sub	x1, x29, #0x40
  42ad30:	stp	x20, x9, [x29, #-64]
  42ad34:	stur	w8, [x29, #-48]
  42ad38:	stp	x19, x19, [x29, #-32]
  42ad3c:	stur	d0, [x29, #-8]
  42ad40:	bl	429ff0 <feof@plt+0x26750>
  42ad44:	ldr	x0, [x21, #632]
  42ad48:	ldr	w8, [x0, #240]
  42ad4c:	subs	w8, w8, #0x1
  42ad50:	str	w8, [x0, #240]
  42ad54:	b.ne	42ad78 <feof@plt+0x274d8>  // b.any
  42ad58:	ldr	w8, [x0, #244]
  42ad5c:	cmp	w8, #0x1
  42ad60:	b.lt	42ad74 <feof@plt+0x274d4>  // b.tstop
  42ad64:	ldr	x8, [x0, #256]
  42ad68:	cbz	x8, 42ad74 <feof@plt+0x274d4>
  42ad6c:	blr	x8
  42ad70:	ldr	x0, [x21, #632]
  42ad74:	str	wzr, [x0, #244]
  42ad78:	ldp	x20, x19, [sp, #304]
  42ad7c:	ldp	x28, x21, [sp, #288]
  42ad80:	ldp	x29, x30, [sp, #272]
  42ad84:	add	sp, sp, #0x140
  42ad88:	ret
  42ad8c:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42ad90:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42ad94:	add	x0, x0, #0xd70
  42ad98:	add	x2, x2, #0xd87
  42ad9c:	mov	w1, #0x4dc                 	// #1244
  42ada0:	bl	429434 <feof@plt+0x25b94>
  42ada4:	sub	sp, sp, #0x1f0
  42ada8:	stp	x29, x30, [sp, #432]
  42adac:	stp	x28, x23, [sp, #448]
  42adb0:	stp	x22, x21, [sp, #464]
  42adb4:	stp	x20, x19, [sp, #480]
  42adb8:	add	x29, sp, #0x1b0
  42adbc:	mov	x8, #0xffffffffffffffe0    	// #-32
  42adc0:	mov	x9, sp
  42adc4:	movk	x8, #0xff80, lsl #32
  42adc8:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42adcc:	add	x9, x9, #0x80
  42add0:	stp	x9, x8, [x29, #-80]
  42add4:	ldr	x8, [x22, #632]
  42add8:	add	x10, sp, #0x88
  42addc:	add	x11, x29, #0x40
  42ade0:	add	x9, x10, #0x20
  42ade4:	stp	x4, x5, [sp, #136]
  42ade8:	stp	x6, x7, [sp, #152]
  42adec:	stp	q0, q1, [sp]
  42adf0:	stp	q2, q3, [sp, #32]
  42adf4:	stp	q4, q5, [sp, #64]
  42adf8:	stp	q6, q7, [sp, #96]
  42adfc:	stp	x11, x9, [x29, #-96]
  42ae00:	ldr	w9, [x8, #240]
  42ae04:	mov	x21, x1
  42ae08:	mov	x19, x3
  42ae0c:	mov	x20, x2
  42ae10:	add	w9, w9, #0x1
  42ae14:	str	w9, [x8, #240]
  42ae18:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42ae1c:	ldr	x1, [x8, #408]
  42ae20:	mov	w2, w0
  42ae24:	add	x0, sp, #0xa8
  42ae28:	mov	x3, xzr
  42ae2c:	add	x23, sp, #0xa8
  42ae30:	bl	4506a8 <feof@plt+0x4ce08>
  42ae34:	mov	x0, x20
  42ae38:	mov	x1, x19
  42ae3c:	mov	x2, x21
  42ae40:	bl	403110 <ngettext@plt>
  42ae44:	mov	x19, x0
  42ae48:	bl	4035c0 <__errno_location@plt>
  42ae4c:	adrp	x10, 47d000 <_obstack_memory_used@@Base+0x12fc>
  42ae50:	ldr	w8, [x0]
  42ae54:	ldr	x0, [x22, #632]
  42ae58:	ldr	d0, [x10, #1648]
  42ae5c:	sub	x9, x29, #0x60
  42ae60:	sub	x1, x29, #0x40
  42ae64:	stp	x19, x9, [x29, #-64]
  42ae68:	stur	w8, [x29, #-48]
  42ae6c:	stp	x23, x23, [x29, #-32]
  42ae70:	stur	d0, [x29, #-8]
  42ae74:	bl	429ff0 <feof@plt+0x26750>
  42ae78:	add	x0, sp, #0xa8
  42ae7c:	bl	450788 <feof@plt+0x4cee8>
  42ae80:	ldr	x0, [x22, #632]
  42ae84:	ldr	w8, [x0, #240]
  42ae88:	subs	w8, w8, #0x1
  42ae8c:	str	w8, [x0, #240]
  42ae90:	b.ne	42aeb4 <feof@plt+0x27614>  // b.any
  42ae94:	ldr	w8, [x0, #244]
  42ae98:	cmp	w8, #0x1
  42ae9c:	b.lt	42aeb0 <feof@plt+0x27610>  // b.tstop
  42aea0:	ldr	x8, [x0, #256]
  42aea4:	cbz	x8, 42aeb0 <feof@plt+0x27610>
  42aea8:	blr	x8
  42aeac:	ldr	x0, [x22, #632]
  42aeb0:	str	wzr, [x0, #244]
  42aeb4:	ldp	x20, x19, [sp, #480]
  42aeb8:	ldp	x22, x21, [sp, #464]
  42aebc:	ldp	x28, x23, [sp, #448]
  42aec0:	ldp	x29, x30, [sp, #432]
  42aec4:	add	sp, sp, #0x1f0
  42aec8:	ret
  42aecc:	stp	x29, x30, [sp, #-64]!
  42aed0:	str	x28, [sp, #16]
  42aed4:	stp	x22, x21, [sp, #32]
  42aed8:	stp	x20, x19, [sp, #48]
  42aedc:	mov	x29, sp
  42aee0:	sub	sp, sp, #0x1c0
  42aee4:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42aee8:	ldr	x8, [x21, #632]
  42aeec:	stp	q4, q5, [sp, #64]
  42aef0:	stp	q2, q3, [sp, #32]
  42aef4:	stp	q0, q1, [sp]
  42aef8:	stp	x6, x7, [sp, #168]
  42aefc:	stp	x4, x5, [sp, #152]
  42af00:	stp	x2, x3, [sp, #136]
  42af04:	stp	q6, q7, [sp, #96]
  42af08:	ldr	w9, [x8, #240]
  42af0c:	mov	x19, x1
  42af10:	mov	x10, #0xffffffffffffffd0    	// #-48
  42af14:	mov	x11, sp
  42af18:	add	w9, w9, #0x1
  42af1c:	str	w9, [x8, #240]
  42af20:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42af24:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42af28:	ldr	x1, [x8, #408]
  42af2c:	ldr	w2, [x9, #400]
  42af30:	add	x12, sp, #0x88
  42af34:	mov	w20, w0
  42af38:	movk	x10, #0xff80, lsl #32
  42af3c:	add	x11, x11, #0x80
  42af40:	add	x12, x12, #0x30
  42af44:	add	x8, x29, #0x40
  42af48:	add	x0, sp, #0xb8
  42af4c:	mov	x3, xzr
  42af50:	stp	x11, x10, [x29, #-80]
  42af54:	stp	x8, x12, [x29, #-96]
  42af58:	add	x22, sp, #0xb8
  42af5c:	bl	4506a8 <feof@plt+0x4ce08>
  42af60:	mov	x0, x19
  42af64:	bl	4033e0 <gettext@plt>
  42af68:	mov	x19, x0
  42af6c:	bl	4035c0 <__errno_location@plt>
  42af70:	ldr	w8, [x0]
  42af74:	ldr	x0, [x21, #632]
  42af78:	sub	x9, x29, #0x60
  42af7c:	mov	w10, #0x6                   	// #6
  42af80:	sub	x1, x29, #0x40
  42af84:	stp	x22, x22, [x29, #-32]
  42af88:	stp	x19, x9, [x29, #-64]
  42af8c:	stur	w8, [x29, #-48]
  42af90:	stp	w10, w20, [x29, #-8]
  42af94:	bl	429ff0 <feof@plt+0x26750>
  42af98:	mov	w19, w0
  42af9c:	add	x0, sp, #0xb8
  42afa0:	bl	450788 <feof@plt+0x4cee8>
  42afa4:	ldr	x0, [x21, #632]
  42afa8:	ldr	w8, [x0, #240]
  42afac:	subs	w8, w8, #0x1
  42afb0:	str	w8, [x0, #240]
  42afb4:	b.ne	42afd8 <feof@plt+0x27738>  // b.any
  42afb8:	ldr	w8, [x0, #244]
  42afbc:	cmp	w8, #0x1
  42afc0:	b.lt	42afd4 <feof@plt+0x27734>  // b.tstop
  42afc4:	ldr	x8, [x0, #256]
  42afc8:	cbz	x8, 42afd4 <feof@plt+0x27734>
  42afcc:	blr	x8
  42afd0:	ldr	x0, [x21, #632]
  42afd4:	str	wzr, [x0, #244]
  42afd8:	and	w0, w19, #0x1
  42afdc:	add	sp, sp, #0x1c0
  42afe0:	ldp	x20, x19, [sp, #48]
  42afe4:	ldp	x22, x21, [sp, #32]
  42afe8:	ldr	x28, [sp, #16]
  42afec:	ldp	x29, x30, [sp], #64
  42aff0:	ret
  42aff4:	sub	sp, sp, #0x1f0
  42aff8:	stp	x29, x30, [sp, #432]
  42affc:	str	x28, [sp, #448]
  42b000:	stp	x22, x21, [sp, #464]
  42b004:	stp	x20, x19, [sp, #480]
  42b008:	add	x29, sp, #0x1b0
  42b00c:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42b010:	ldr	x8, [x21, #632]
  42b014:	stp	q4, q5, [sp, #64]
  42b018:	stp	q2, q3, [sp, #32]
  42b01c:	stp	q0, q1, [sp]
  42b020:	stp	x6, x7, [sp, #152]
  42b024:	stp	x4, x5, [sp, #136]
  42b028:	str	x3, [sp, #128]
  42b02c:	stp	q6, q7, [sp, #96]
  42b030:	ldr	w9, [x8, #240]
  42b034:	mov	x10, #0xffffffffffffffd8    	// #-40
  42b038:	mov	x11, sp
  42b03c:	movk	x10, #0xff80, lsl #32
  42b040:	add	w9, w9, #0x1
  42b044:	str	w9, [x8, #240]
  42b048:	add	x9, x11, #0x80
  42b04c:	stp	x9, x10, [x29, #-80]
  42b050:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42b054:	mov	w20, w1
  42b058:	ldr	x1, [x9, #408]
  42b05c:	add	x8, sp, #0x80
  42b060:	mov	x19, x2
  42b064:	mov	w2, w0
  42b068:	add	x8, x8, #0x28
  42b06c:	add	x9, x29, #0x40
  42b070:	add	x0, sp, #0xa8
  42b074:	mov	x3, xzr
  42b078:	stp	x9, x8, [x29, #-96]
  42b07c:	add	x22, sp, #0xa8
  42b080:	bl	4506a8 <feof@plt+0x4ce08>
  42b084:	mov	x0, x19
  42b088:	bl	4033e0 <gettext@plt>
  42b08c:	mov	x19, x0
  42b090:	bl	4035c0 <__errno_location@plt>
  42b094:	ldr	w8, [x0]
  42b098:	ldr	x0, [x21, #632]
  42b09c:	sub	x9, x29, #0x60
  42b0a0:	mov	w10, #0x6                   	// #6
  42b0a4:	sub	x1, x29, #0x40
  42b0a8:	stp	x22, x22, [x29, #-32]
  42b0ac:	stp	x19, x9, [x29, #-64]
  42b0b0:	stur	w8, [x29, #-48]
  42b0b4:	stp	w10, w20, [x29, #-8]
  42b0b8:	bl	429ff0 <feof@plt+0x26750>
  42b0bc:	mov	w19, w0
  42b0c0:	add	x0, sp, #0xa8
  42b0c4:	bl	450788 <feof@plt+0x4cee8>
  42b0c8:	ldr	x0, [x21, #632]
  42b0cc:	ldr	w8, [x0, #240]
  42b0d0:	subs	w8, w8, #0x1
  42b0d4:	str	w8, [x0, #240]
  42b0d8:	b.ne	42b0fc <feof@plt+0x2785c>  // b.any
  42b0dc:	ldr	w8, [x0, #244]
  42b0e0:	cmp	w8, #0x1
  42b0e4:	b.lt	42b0f8 <feof@plt+0x27858>  // b.tstop
  42b0e8:	ldr	x8, [x0, #256]
  42b0ec:	cbz	x8, 42b0f8 <feof@plt+0x27858>
  42b0f0:	blr	x8
  42b0f4:	ldr	x0, [x21, #632]
  42b0f8:	str	wzr, [x0, #244]
  42b0fc:	and	w0, w19, #0x1
  42b100:	ldp	x20, x19, [sp, #480]
  42b104:	ldp	x22, x21, [sp, #464]
  42b108:	ldr	x28, [sp, #448]
  42b10c:	ldp	x29, x30, [sp, #432]
  42b110:	add	sp, sp, #0x1f0
  42b114:	ret
  42b118:	sub	sp, sp, #0x150
  42b11c:	stp	x29, x30, [sp, #272]
  42b120:	str	x28, [sp, #288]
  42b124:	stp	x22, x21, [sp, #304]
  42b128:	stp	x20, x19, [sp, #320]
  42b12c:	add	x29, sp, #0x110
  42b130:	stp	x3, x4, [sp, #136]
  42b134:	stp	x5, x6, [sp, #152]
  42b138:	str	x7, [sp, #168]
  42b13c:	stp	q1, q2, [sp, #16]
  42b140:	stp	q3, q4, [sp, #48]
  42b144:	str	q0, [sp]
  42b148:	stp	q5, q6, [sp, #80]
  42b14c:	str	q7, [sp, #112]
  42b150:	cbz	x0, 42b220 <feof@plt+0x27980>
  42b154:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42b158:	ldr	x8, [x22, #632]
  42b15c:	mov	x9, #0xffffffffffffffd8    	// #-40
  42b160:	mov	x10, sp
  42b164:	add	x11, sp, #0x88
  42b168:	ldr	w12, [x8, #240]
  42b16c:	mov	x20, x0
  42b170:	movk	x9, #0xff80, lsl #32
  42b174:	add	x13, x29, #0x40
  42b178:	add	x10, x10, #0x80
  42b17c:	add	x11, x11, #0x28
  42b180:	add	w12, w12, #0x1
  42b184:	mov	x0, x2
  42b188:	mov	w19, w1
  42b18c:	str	w12, [x8, #240]
  42b190:	stp	x10, x9, [x29, #-80]
  42b194:	stp	x13, x11, [x29, #-96]
  42b198:	bl	4033e0 <gettext@plt>
  42b19c:	mov	x21, x0
  42b1a0:	bl	4035c0 <__errno_location@plt>
  42b1a4:	ldr	w8, [x0]
  42b1a8:	ldr	x0, [x22, #632]
  42b1ac:	sub	x9, x29, #0x60
  42b1b0:	mov	w10, #0x6                   	// #6
  42b1b4:	sub	x1, x29, #0x40
  42b1b8:	stp	x20, x20, [x29, #-32]
  42b1bc:	stp	x21, x9, [x29, #-64]
  42b1c0:	stur	w8, [x29, #-48]
  42b1c4:	stp	w10, w19, [x29, #-8]
  42b1c8:	bl	429ff0 <feof@plt+0x26750>
  42b1cc:	mov	w19, w0
  42b1d0:	ldr	x0, [x22, #632]
  42b1d4:	ldr	w8, [x0, #240]
  42b1d8:	subs	w8, w8, #0x1
  42b1dc:	str	w8, [x0, #240]
  42b1e0:	b.ne	42b204 <feof@plt+0x27964>  // b.any
  42b1e4:	ldr	w8, [x0, #244]
  42b1e8:	cmp	w8, #0x1
  42b1ec:	b.lt	42b200 <feof@plt+0x27960>  // b.tstop
  42b1f0:	ldr	x8, [x0, #256]
  42b1f4:	cbz	x8, 42b200 <feof@plt+0x27960>
  42b1f8:	blr	x8
  42b1fc:	ldr	x0, [x22, #632]
  42b200:	str	wzr, [x0, #244]
  42b204:	and	w0, w19, #0x1
  42b208:	ldp	x20, x19, [sp, #320]
  42b20c:	ldp	x22, x21, [sp, #304]
  42b210:	ldr	x28, [sp, #288]
  42b214:	ldp	x29, x30, [sp, #272]
  42b218:	add	sp, sp, #0x150
  42b21c:	ret
  42b220:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42b224:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42b228:	add	x0, x0, #0xd70
  42b22c:	add	x2, x2, #0xd8e
  42b230:	mov	w1, #0x518                 	// #1304
  42b234:	bl	429434 <feof@plt+0x25b94>
  42b238:	sub	sp, sp, #0x140
  42b23c:	stp	x29, x30, [sp, #256]
  42b240:	str	x28, [sp, #272]
  42b244:	stp	x22, x21, [sp, #288]
  42b248:	stp	x20, x19, [sp, #304]
  42b24c:	add	x29, sp, #0x100
  42b250:	stp	x5, x6, [x29, #-120]
  42b254:	stur	x7, [x29, #-104]
  42b258:	stp	q0, q1, [sp]
  42b25c:	stp	q2, q3, [sp, #32]
  42b260:	stp	q4, q5, [sp, #64]
  42b264:	stp	q6, q7, [sp, #96]
  42b268:	cbz	x0, 42b33c <feof@plt+0x27a9c>
  42b26c:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42b270:	ldr	x8, [x22, #632]
  42b274:	mov	x9, #0xffffffffffffffe8    	// #-24
  42b278:	mov	x10, sp
  42b27c:	sub	x11, x29, #0x78
  42b280:	ldr	w12, [x8, #240]
  42b284:	mov	w19, w1
  42b288:	mov	x20, x0
  42b28c:	movk	x9, #0xff80, lsl #32
  42b290:	add	x13, x29, #0x40
  42b294:	add	x10, x10, #0x80
  42b298:	add	x11, x11, #0x18
  42b29c:	add	w12, w12, #0x1
  42b2a0:	mov	x0, x3
  42b2a4:	mov	x1, x4
  42b2a8:	str	w12, [x8, #240]
  42b2ac:	stp	x10, x9, [x29, #-80]
  42b2b0:	stp	x13, x11, [x29, #-96]
  42b2b4:	bl	403110 <ngettext@plt>
  42b2b8:	mov	x21, x0
  42b2bc:	bl	4035c0 <__errno_location@plt>
  42b2c0:	ldr	w8, [x0]
  42b2c4:	ldr	x0, [x22, #632]
  42b2c8:	sub	x9, x29, #0x60
  42b2cc:	mov	w10, #0x6                   	// #6
  42b2d0:	sub	x1, x29, #0x40
  42b2d4:	stp	x20, x20, [x29, #-32]
  42b2d8:	stp	x21, x9, [x29, #-64]
  42b2dc:	stur	w8, [x29, #-48]
  42b2e0:	stp	w10, w19, [x29, #-8]
  42b2e4:	bl	429ff0 <feof@plt+0x26750>
  42b2e8:	mov	w19, w0
  42b2ec:	ldr	x0, [x22, #632]
  42b2f0:	ldr	w8, [x0, #240]
  42b2f4:	subs	w8, w8, #0x1
  42b2f8:	str	w8, [x0, #240]
  42b2fc:	b.ne	42b320 <feof@plt+0x27a80>  // b.any
  42b300:	ldr	w8, [x0, #244]
  42b304:	cmp	w8, #0x1
  42b308:	b.lt	42b31c <feof@plt+0x27a7c>  // b.tstop
  42b30c:	ldr	x8, [x0, #256]
  42b310:	cbz	x8, 42b31c <feof@plt+0x27a7c>
  42b314:	blr	x8
  42b318:	ldr	x0, [x22, #632]
  42b31c:	str	wzr, [x0, #244]
  42b320:	and	w0, w19, #0x1
  42b324:	ldp	x20, x19, [sp, #304]
  42b328:	ldp	x22, x21, [sp, #288]
  42b32c:	ldr	x28, [sp, #272]
  42b330:	ldp	x29, x30, [sp, #256]
  42b334:	add	sp, sp, #0x140
  42b338:	ret
  42b33c:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42b340:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42b344:	add	x0, x0, #0xd70
  42b348:	add	x2, x2, #0xd99
  42b34c:	mov	w1, #0x528                 	// #1320
  42b350:	bl	429434 <feof@plt+0x25b94>
  42b354:	sub	sp, sp, #0x1f0
  42b358:	stp	x29, x30, [sp, #416]
  42b35c:	str	x28, [sp, #432]
  42b360:	stp	x24, x23, [sp, #448]
  42b364:	stp	x22, x21, [sp, #464]
  42b368:	stp	x20, x19, [sp, #480]
  42b36c:	add	x29, sp, #0x1a0
  42b370:	adrp	x23, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42b374:	ldr	x8, [x23, #632]
  42b378:	stp	q4, q5, [sp, #64]
  42b37c:	stp	q2, q3, [sp, #32]
  42b380:	stp	q0, q1, [sp]
  42b384:	stp	x6, x7, [sp, #136]
  42b388:	str	x5, [sp, #128]
  42b38c:	stp	q6, q7, [sp, #96]
  42b390:	ldr	w9, [x8, #240]
  42b394:	mov	x10, #0xffffffffffffffe8    	// #-24
  42b398:	movk	x10, #0xff80, lsl #32
  42b39c:	mov	w22, w1
  42b3a0:	add	w9, w9, #0x1
  42b3a4:	str	w9, [x8, #240]
  42b3a8:	mov	x8, sp
  42b3ac:	add	x8, x8, #0x80
  42b3b0:	stp	x8, x10, [x29, #-80]
  42b3b4:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42b3b8:	ldr	x1, [x8, #408]
  42b3bc:	add	x9, sp, #0x80
  42b3c0:	mov	x20, x3
  42b3c4:	mov	x21, x2
  42b3c8:	mov	w2, w0
  42b3cc:	add	x9, x9, #0x18
  42b3d0:	add	x8, x29, #0x50
  42b3d4:	add	x0, sp, #0x98
  42b3d8:	mov	x3, xzr
  42b3dc:	mov	x19, x4
  42b3e0:	stp	x8, x9, [x29, #-96]
  42b3e4:	add	x24, sp, #0x98
  42b3e8:	bl	4506a8 <feof@plt+0x4ce08>
  42b3ec:	mov	x0, x20
  42b3f0:	mov	x1, x19
  42b3f4:	mov	x2, x21
  42b3f8:	bl	403110 <ngettext@plt>
  42b3fc:	mov	x19, x0
  42b400:	bl	4035c0 <__errno_location@plt>
  42b404:	ldr	w8, [x0]
  42b408:	ldr	x0, [x23, #632]
  42b40c:	sub	x9, x29, #0x60
  42b410:	mov	w10, #0x6                   	// #6
  42b414:	sub	x1, x29, #0x40
  42b418:	stp	x24, x24, [x29, #-32]
  42b41c:	stp	x19, x9, [x29, #-64]
  42b420:	stur	w8, [x29, #-48]
  42b424:	stp	w10, w22, [x29, #-8]
  42b428:	bl	429ff0 <feof@plt+0x26750>
  42b42c:	mov	w19, w0
  42b430:	add	x0, sp, #0x98
  42b434:	bl	450788 <feof@plt+0x4cee8>
  42b438:	ldr	x0, [x23, #632]
  42b43c:	ldr	w8, [x0, #240]
  42b440:	subs	w8, w8, #0x1
  42b444:	str	w8, [x0, #240]
  42b448:	b.ne	42b46c <feof@plt+0x27bcc>  // b.any
  42b44c:	ldr	w8, [x0, #244]
  42b450:	cmp	w8, #0x1
  42b454:	b.lt	42b468 <feof@plt+0x27bc8>  // b.tstop
  42b458:	ldr	x8, [x0, #256]
  42b45c:	cbz	x8, 42b468 <feof@plt+0x27bc8>
  42b460:	blr	x8
  42b464:	ldr	x0, [x23, #632]
  42b468:	str	wzr, [x0, #244]
  42b46c:	and	w0, w19, #0x1
  42b470:	ldp	x20, x19, [sp, #480]
  42b474:	ldp	x22, x21, [sp, #464]
  42b478:	ldp	x24, x23, [sp, #448]
  42b47c:	ldr	x28, [sp, #432]
  42b480:	ldp	x29, x30, [sp, #416]
  42b484:	add	sp, sp, #0x1f0
  42b488:	ret
  42b48c:	sub	sp, sp, #0x1f0
  42b490:	stp	x29, x30, [sp, #432]
  42b494:	str	x28, [sp, #448]
  42b498:	stp	x22, x21, [sp, #464]
  42b49c:	stp	x20, x19, [sp, #480]
  42b4a0:	add	x29, sp, #0x1b0
  42b4a4:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42b4a8:	ldr	x8, [x21, #632]
  42b4ac:	stp	q4, q5, [sp, #64]
  42b4b0:	stp	q2, q3, [sp, #32]
  42b4b4:	stp	q0, q1, [sp]
  42b4b8:	stp	x6, x7, [sp, #152]
  42b4bc:	stp	x4, x5, [sp, #136]
  42b4c0:	str	x3, [sp, #128]
  42b4c4:	stp	q6, q7, [sp, #96]
  42b4c8:	ldr	w9, [x8, #240]
  42b4cc:	mov	x10, #0xffffffffffffffd8    	// #-40
  42b4d0:	mov	x11, sp
  42b4d4:	movk	x10, #0xff80, lsl #32
  42b4d8:	add	w9, w9, #0x1
  42b4dc:	str	w9, [x8, #240]
  42b4e0:	add	x9, x11, #0x80
  42b4e4:	stp	x9, x10, [x29, #-80]
  42b4e8:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42b4ec:	mov	w20, w1
  42b4f0:	ldr	x1, [x9, #408]
  42b4f4:	add	x8, sp, #0x80
  42b4f8:	mov	x19, x2
  42b4fc:	mov	w2, w0
  42b500:	add	x8, x8, #0x28
  42b504:	add	x9, x29, #0x40
  42b508:	add	x0, sp, #0xa8
  42b50c:	mov	x3, xzr
  42b510:	stp	x9, x8, [x29, #-96]
  42b514:	add	x22, sp, #0xa8
  42b518:	bl	4506a8 <feof@plt+0x4ce08>
  42b51c:	mov	x0, x19
  42b520:	bl	4033e0 <gettext@plt>
  42b524:	mov	x19, x0
  42b528:	bl	4035c0 <__errno_location@plt>
  42b52c:	ldr	w8, [x0]
  42b530:	ldr	x0, [x21, #632]
  42b534:	sub	x9, x29, #0x60
  42b538:	mov	w10, #0xa                   	// #10
  42b53c:	sub	x1, x29, #0x40
  42b540:	stp	x22, x22, [x29, #-32]
  42b544:	stp	x19, x9, [x29, #-64]
  42b548:	stur	w8, [x29, #-48]
  42b54c:	stp	w10, w20, [x29, #-8]
  42b550:	bl	429ff0 <feof@plt+0x26750>
  42b554:	mov	w19, w0
  42b558:	add	x0, sp, #0xa8
  42b55c:	bl	450788 <feof@plt+0x4cee8>
  42b560:	ldr	x0, [x21, #632]
  42b564:	ldr	w8, [x0, #240]
  42b568:	subs	w8, w8, #0x1
  42b56c:	str	w8, [x0, #240]
  42b570:	b.ne	42b594 <feof@plt+0x27cf4>  // b.any
  42b574:	ldr	w8, [x0, #244]
  42b578:	cmp	w8, #0x1
  42b57c:	b.lt	42b590 <feof@plt+0x27cf0>  // b.tstop
  42b580:	ldr	x8, [x0, #256]
  42b584:	cbz	x8, 42b590 <feof@plt+0x27cf0>
  42b588:	blr	x8
  42b58c:	ldr	x0, [x21, #632]
  42b590:	str	wzr, [x0, #244]
  42b594:	and	w0, w19, #0x1
  42b598:	ldp	x20, x19, [sp, #480]
  42b59c:	ldp	x22, x21, [sp, #464]
  42b5a0:	ldr	x28, [sp, #448]
  42b5a4:	ldp	x29, x30, [sp, #432]
  42b5a8:	add	sp, sp, #0x1f0
  42b5ac:	ret
  42b5b0:	sub	sp, sp, #0x150
  42b5b4:	stp	x29, x30, [sp, #272]
  42b5b8:	str	x28, [sp, #288]
  42b5bc:	stp	x22, x21, [sp, #304]
  42b5c0:	stp	x20, x19, [sp, #320]
  42b5c4:	add	x29, sp, #0x110
  42b5c8:	stp	x3, x4, [sp, #136]
  42b5cc:	stp	x5, x6, [sp, #152]
  42b5d0:	str	x7, [sp, #168]
  42b5d4:	stp	q1, q2, [sp, #16]
  42b5d8:	stp	q3, q4, [sp, #48]
  42b5dc:	str	q0, [sp]
  42b5e0:	stp	q5, q6, [sp, #80]
  42b5e4:	str	q7, [sp, #112]
  42b5e8:	cbz	x0, 42b6b8 <feof@plt+0x27e18>
  42b5ec:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42b5f0:	ldr	x8, [x22, #632]
  42b5f4:	mov	x9, #0xffffffffffffffd8    	// #-40
  42b5f8:	mov	x10, sp
  42b5fc:	add	x11, sp, #0x88
  42b600:	ldr	w12, [x8, #240]
  42b604:	mov	x20, x0
  42b608:	movk	x9, #0xff80, lsl #32
  42b60c:	add	x13, x29, #0x40
  42b610:	add	x10, x10, #0x80
  42b614:	add	x11, x11, #0x28
  42b618:	add	w12, w12, #0x1
  42b61c:	mov	x0, x2
  42b620:	mov	w19, w1
  42b624:	str	w12, [x8, #240]
  42b628:	stp	x10, x9, [x29, #-80]
  42b62c:	stp	x13, x11, [x29, #-96]
  42b630:	bl	4033e0 <gettext@plt>
  42b634:	mov	x21, x0
  42b638:	bl	4035c0 <__errno_location@plt>
  42b63c:	ldr	w8, [x0]
  42b640:	ldr	x0, [x22, #632]
  42b644:	sub	x9, x29, #0x60
  42b648:	mov	w10, #0xa                   	// #10
  42b64c:	sub	x1, x29, #0x40
  42b650:	stp	x20, x20, [x29, #-32]
  42b654:	stp	x21, x9, [x29, #-64]
  42b658:	stur	w8, [x29, #-48]
  42b65c:	stp	w10, w19, [x29, #-8]
  42b660:	bl	429ff0 <feof@plt+0x26750>
  42b664:	mov	w19, w0
  42b668:	ldr	x0, [x22, #632]
  42b66c:	ldr	w8, [x0, #240]
  42b670:	subs	w8, w8, #0x1
  42b674:	str	w8, [x0, #240]
  42b678:	b.ne	42b69c <feof@plt+0x27dfc>  // b.any
  42b67c:	ldr	w8, [x0, #244]
  42b680:	cmp	w8, #0x1
  42b684:	b.lt	42b698 <feof@plt+0x27df8>  // b.tstop
  42b688:	ldr	x8, [x0, #256]
  42b68c:	cbz	x8, 42b698 <feof@plt+0x27df8>
  42b690:	blr	x8
  42b694:	ldr	x0, [x22, #632]
  42b698:	str	wzr, [x0, #244]
  42b69c:	and	w0, w19, #0x1
  42b6a0:	ldp	x20, x19, [sp, #320]
  42b6a4:	ldp	x22, x21, [sp, #304]
  42b6a8:	ldr	x28, [sp, #288]
  42b6ac:	ldp	x29, x30, [sp, #272]
  42b6b0:	add	sp, sp, #0x150
  42b6b4:	ret
  42b6b8:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42b6bc:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42b6c0:	add	x0, x0, #0xd70
  42b6c4:	add	x2, x2, #0xda3
  42b6c8:	mov	w1, #0x565                 	// #1381
  42b6cc:	bl	429434 <feof@plt+0x25b94>
  42b6d0:	stp	x29, x30, [sp, #-64]!
  42b6d4:	str	x28, [sp, #16]
  42b6d8:	stp	x22, x21, [sp, #32]
  42b6dc:	stp	x20, x19, [sp, #48]
  42b6e0:	mov	x29, sp
  42b6e4:	sub	sp, sp, #0x1c0
  42b6e8:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42b6ec:	ldr	x9, [x20, #632]
  42b6f0:	stp	q4, q5, [sp, #64]
  42b6f4:	stp	q2, q3, [sp, #32]
  42b6f8:	stp	q0, q1, [sp]
  42b6fc:	stp	x6, x7, [sp, #168]
  42b700:	stp	x4, x5, [sp, #152]
  42b704:	stp	x2, x3, [sp, #136]
  42b708:	stp	q6, q7, [sp, #96]
  42b70c:	ldr	w12, [x9, #240]
  42b710:	mov	x19, x1
  42b714:	mov	w8, w0
  42b718:	mov	x10, #0xffffffffffffffd0    	// #-48
  42b71c:	add	w12, w12, #0x1
  42b720:	str	w12, [x9, #240]
  42b724:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42b728:	ldr	x1, [x9, #408]
  42b72c:	mov	x11, sp
  42b730:	add	x13, sp, #0x88
  42b734:	movk	x10, #0xff80, lsl #32
  42b738:	add	x11, x11, #0x80
  42b73c:	add	x13, x13, #0x30
  42b740:	add	x9, x29, #0x40
  42b744:	add	x0, sp, #0xb8
  42b748:	mov	w2, w8
  42b74c:	mov	x3, xzr
  42b750:	stp	x11, x10, [x29, #-80]
  42b754:	stp	x9, x13, [x29, #-96]
  42b758:	add	x21, sp, #0xb8
  42b75c:	bl	4506a8 <feof@plt+0x4ce08>
  42b760:	ldr	x8, [x20, #632]
  42b764:	mov	w9, #0x6                   	// #6
  42b768:	mov	x0, x19
  42b76c:	ldrb	w8, [x8, #123]
  42b770:	cmp	w8, #0x0
  42b774:	mov	w8, #0x4                   	// #4
  42b778:	csel	w22, w8, w9, eq  // eq = none
  42b77c:	bl	4033e0 <gettext@plt>
  42b780:	mov	x19, x0
  42b784:	bl	4035c0 <__errno_location@plt>
  42b788:	ldr	w8, [x0]
  42b78c:	ldr	x0, [x20, #632]
  42b790:	sub	x9, x29, #0x60
  42b794:	stp	x21, x21, [x29, #-32]
  42b798:	stp	x19, x9, [x29, #-64]
  42b79c:	stur	w8, [x29, #-48]
  42b7a0:	ldr	w8, [x0, #124]
  42b7a4:	sub	x1, x29, #0x40
  42b7a8:	stp	w22, w8, [x29, #-8]
  42b7ac:	bl	429ff0 <feof@plt+0x26750>
  42b7b0:	mov	w19, w0
  42b7b4:	add	x0, sp, #0xb8
  42b7b8:	bl	450788 <feof@plt+0x4cee8>
  42b7bc:	ldr	x0, [x20, #632]
  42b7c0:	ldr	w8, [x0, #240]
  42b7c4:	subs	w8, w8, #0x1
  42b7c8:	str	w8, [x0, #240]
  42b7cc:	b.ne	42b7f0 <feof@plt+0x27f50>  // b.any
  42b7d0:	ldr	w8, [x0, #244]
  42b7d4:	cmp	w8, #0x1
  42b7d8:	b.lt	42b7ec <feof@plt+0x27f4c>  // b.tstop
  42b7dc:	ldr	x8, [x0, #256]
  42b7e0:	cbz	x8, 42b7ec <feof@plt+0x27f4c>
  42b7e4:	blr	x8
  42b7e8:	ldr	x0, [x20, #632]
  42b7ec:	str	wzr, [x0, #244]
  42b7f0:	and	w0, w19, #0x1
  42b7f4:	add	sp, sp, #0x1c0
  42b7f8:	ldp	x20, x19, [sp, #48]
  42b7fc:	ldp	x22, x21, [sp, #32]
  42b800:	ldr	x28, [sp, #16]
  42b804:	ldp	x29, x30, [sp], #64
  42b808:	ret
  42b80c:	sub	sp, sp, #0x150
  42b810:	stp	x29, x30, [sp, #272]
  42b814:	str	x28, [sp, #288]
  42b818:	stp	x22, x21, [sp, #304]
  42b81c:	stp	x20, x19, [sp, #320]
  42b820:	add	x29, sp, #0x110
  42b824:	stp	x2, x3, [sp, #128]
  42b828:	stp	x4, x5, [sp, #144]
  42b82c:	stp	x6, x7, [sp, #160]
  42b830:	stp	q1, q2, [sp, #16]
  42b834:	stp	q3, q4, [sp, #48]
  42b838:	str	q0, [sp]
  42b83c:	stp	q5, q6, [sp, #80]
  42b840:	str	q7, [sp, #112]
  42b844:	cbz	x0, 42b928 <feof@plt+0x28088>
  42b848:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42b84c:	ldr	x8, [x21, #632]
  42b850:	mov	x10, #0xffffffffffffffd0    	// #-48
  42b854:	mov	x11, sp
  42b858:	movk	x10, #0xff80, lsl #32
  42b85c:	ldr	w9, [x8, #240]
  42b860:	add	x11, x11, #0x80
  42b864:	mov	x19, x0
  42b868:	mov	x0, x1
  42b86c:	add	w9, w9, #0x1
  42b870:	str	w9, [x8, #240]
  42b874:	stp	x11, x10, [x29, #-80]
  42b878:	ldr	x10, [x21, #632]
  42b87c:	add	x8, sp, #0x80
  42b880:	add	x9, x29, #0x40
  42b884:	add	x8, x8, #0x30
  42b888:	stp	x9, x8, [x29, #-96]
  42b88c:	ldrb	w8, [x10, #123]
  42b890:	mov	w9, #0x6                   	// #6
  42b894:	cmp	w8, #0x0
  42b898:	mov	w8, #0x4                   	// #4
  42b89c:	csel	w22, w8, w9, eq  // eq = none
  42b8a0:	bl	4033e0 <gettext@plt>
  42b8a4:	mov	x20, x0
  42b8a8:	bl	4035c0 <__errno_location@plt>
  42b8ac:	ldr	w8, [x0]
  42b8b0:	ldr	x0, [x21, #632]
  42b8b4:	sub	x9, x29, #0x60
  42b8b8:	stp	x19, x19, [x29, #-32]
  42b8bc:	stp	x20, x9, [x29, #-64]
  42b8c0:	stur	w8, [x29, #-48]
  42b8c4:	ldr	w8, [x0, #124]
  42b8c8:	sub	x1, x29, #0x40
  42b8cc:	stp	w22, w8, [x29, #-8]
  42b8d0:	bl	429ff0 <feof@plt+0x26750>
  42b8d4:	mov	w19, w0
  42b8d8:	ldr	x0, [x21, #632]
  42b8dc:	ldr	w8, [x0, #240]
  42b8e0:	subs	w8, w8, #0x1
  42b8e4:	str	w8, [x0, #240]
  42b8e8:	b.ne	42b90c <feof@plt+0x2806c>  // b.any
  42b8ec:	ldr	w8, [x0, #244]
  42b8f0:	cmp	w8, #0x1
  42b8f4:	b.lt	42b908 <feof@plt+0x28068>  // b.tstop
  42b8f8:	ldr	x8, [x0, #256]
  42b8fc:	cbz	x8, 42b908 <feof@plt+0x28068>
  42b900:	blr	x8
  42b904:	ldr	x0, [x21, #632]
  42b908:	str	wzr, [x0, #244]
  42b90c:	and	w0, w19, #0x1
  42b910:	ldp	x20, x19, [sp, #320]
  42b914:	ldp	x22, x21, [sp, #304]
  42b918:	ldr	x28, [sp, #288]
  42b91c:	ldp	x29, x30, [sp, #272]
  42b920:	add	sp, sp, #0x150
  42b924:	ret
  42b928:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42b92c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42b930:	add	x0, x0, #0xd70
  42b934:	add	x2, x2, #0xdab
  42b938:	mov	w1, #0x587                 	// #1415
  42b93c:	bl	429434 <feof@plt+0x25b94>
  42b940:	sub	sp, sp, #0x1f0
  42b944:	stp	x29, x30, [sp, #448]
  42b948:	stp	x28, x21, [sp, #464]
  42b94c:	stp	x20, x19, [sp, #480]
  42b950:	add	x29, sp, #0x1c0
  42b954:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42b958:	ldr	x8, [x20, #632]
  42b95c:	stp	q4, q5, [sp, #64]
  42b960:	stp	q2, q3, [sp, #32]
  42b964:	stp	q0, q1, [sp]
  42b968:	stp	x6, x7, [sp, #168]
  42b96c:	stp	x4, x5, [sp, #152]
  42b970:	stp	x2, x3, [sp, #136]
  42b974:	str	x1, [sp, #128]
  42b978:	stp	q6, q7, [sp, #96]
  42b97c:	ldr	w10, [x8, #240]
  42b980:	adrp	x13, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42b984:	mov	x9, #0xffffffffffffffc8    	// #-56
  42b988:	mov	x11, sp
  42b98c:	add	w10, w10, #0x1
  42b990:	str	w10, [x8, #240]
  42b994:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42b998:	ldr	x1, [x13, #408]
  42b99c:	ldr	w2, [x8, #400]
  42b9a0:	add	x12, sp, #0x80
  42b9a4:	mov	x19, x0
  42b9a8:	movk	x9, #0xff80, lsl #32
  42b9ac:	add	x10, x11, #0x80
  42b9b0:	add	x11, x12, #0x38
  42b9b4:	add	x8, x29, #0x30
  42b9b8:	add	x0, sp, #0xb8
  42b9bc:	mov	x3, xzr
  42b9c0:	stp	x10, x9, [x29, #-80]
  42b9c4:	stp	x8, x11, [x29, #-96]
  42b9c8:	add	x21, sp, #0xb8
  42b9cc:	bl	4506a8 <feof@plt+0x4ce08>
  42b9d0:	mov	x0, x19
  42b9d4:	bl	4033e0 <gettext@plt>
  42b9d8:	mov	x19, x0
  42b9dc:	bl	4035c0 <__errno_location@plt>
  42b9e0:	adrp	x10, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42b9e4:	ldr	w8, [x0]
  42b9e8:	ldr	x0, [x20, #632]
  42b9ec:	ldr	d0, [x10, #2752]
  42b9f0:	sub	x9, x29, #0x60
  42b9f4:	sub	x1, x29, #0x40
  42b9f8:	stp	x19, x9, [x29, #-64]
  42b9fc:	stur	w8, [x29, #-48]
  42ba00:	stp	x21, x21, [x29, #-32]
  42ba04:	stur	d0, [x29, #-8]
  42ba08:	bl	429ff0 <feof@plt+0x26750>
  42ba0c:	add	x0, sp, #0xb8
  42ba10:	bl	450788 <feof@plt+0x4cee8>
  42ba14:	ldr	x0, [x20, #632]
  42ba18:	ldr	w8, [x0, #240]
  42ba1c:	subs	w8, w8, #0x1
  42ba20:	str	w8, [x0, #240]
  42ba24:	b.ne	42ba48 <feof@plt+0x281a8>  // b.any
  42ba28:	ldr	w8, [x0, #244]
  42ba2c:	cmp	w8, #0x1
  42ba30:	b.lt	42ba44 <feof@plt+0x281a4>  // b.tstop
  42ba34:	ldr	x8, [x0, #256]
  42ba38:	cbz	x8, 42ba44 <feof@plt+0x281a4>
  42ba3c:	blr	x8
  42ba40:	ldr	x0, [x20, #632]
  42ba44:	str	wzr, [x0, #244]
  42ba48:	ldp	x20, x19, [sp, #480]
  42ba4c:	ldp	x28, x21, [sp, #464]
  42ba50:	ldp	x29, x30, [sp, #448]
  42ba54:	add	sp, sp, #0x1f0
  42ba58:	ret
  42ba5c:	sub	sp, sp, #0x1f0
  42ba60:	stp	x29, x30, [sp, #432]
  42ba64:	stp	x28, x23, [sp, #448]
  42ba68:	stp	x22, x21, [sp, #464]
  42ba6c:	stp	x20, x19, [sp, #480]
  42ba70:	add	x29, sp, #0x1b0
  42ba74:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42ba78:	ldr	x8, [x22, #632]
  42ba7c:	stp	q4, q5, [sp, #64]
  42ba80:	stp	q2, q3, [sp, #32]
  42ba84:	stp	q0, q1, [sp]
  42ba88:	stp	x6, x7, [sp, #152]
  42ba8c:	stp	x4, x5, [sp, #136]
  42ba90:	stp	q6, q7, [sp, #96]
  42ba94:	ldr	w9, [x8, #240]
  42ba98:	mov	x10, #0xffffffffffffffe0    	// #-32
  42ba9c:	movk	x10, #0xff80, lsl #32
  42baa0:	mov	x21, x1
  42baa4:	add	w9, w9, #0x1
  42baa8:	str	w9, [x8, #240]
  42baac:	mov	x8, sp
  42bab0:	add	x8, x8, #0x80
  42bab4:	stp	x8, x10, [x29, #-80]
  42bab8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42babc:	ldr	x1, [x8, #408]
  42bac0:	add	x9, sp, #0x88
  42bac4:	mov	x19, x3
  42bac8:	mov	x20, x2
  42bacc:	mov	w2, w0
  42bad0:	add	x9, x9, #0x20
  42bad4:	add	x8, x29, #0x40
  42bad8:	add	x0, sp, #0xa8
  42badc:	mov	x3, xzr
  42bae0:	stp	x8, x9, [x29, #-96]
  42bae4:	add	x23, sp, #0xa8
  42bae8:	bl	4506a8 <feof@plt+0x4ce08>
  42baec:	mov	x0, x20
  42baf0:	mov	x1, x19
  42baf4:	mov	x2, x21
  42baf8:	bl	403110 <ngettext@plt>
  42bafc:	mov	x19, x0
  42bb00:	bl	4035c0 <__errno_location@plt>
  42bb04:	adrp	x10, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42bb08:	ldr	w8, [x0]
  42bb0c:	ldr	x0, [x22, #632]
  42bb10:	ldr	d0, [x10, #2752]
  42bb14:	sub	x9, x29, #0x60
  42bb18:	sub	x1, x29, #0x40
  42bb1c:	stp	x19, x9, [x29, #-64]
  42bb20:	stur	w8, [x29, #-48]
  42bb24:	stp	x23, x23, [x29, #-32]
  42bb28:	stur	d0, [x29, #-8]
  42bb2c:	bl	429ff0 <feof@plt+0x26750>
  42bb30:	add	x0, sp, #0xa8
  42bb34:	bl	450788 <feof@plt+0x4cee8>
  42bb38:	ldr	x0, [x22, #632]
  42bb3c:	ldr	w8, [x0, #240]
  42bb40:	subs	w8, w8, #0x1
  42bb44:	str	w8, [x0, #240]
  42bb48:	b.ne	42bb6c <feof@plt+0x282cc>  // b.any
  42bb4c:	ldr	w8, [x0, #244]
  42bb50:	cmp	w8, #0x1
  42bb54:	b.lt	42bb68 <feof@plt+0x282c8>  // b.tstop
  42bb58:	ldr	x8, [x0, #256]
  42bb5c:	cbz	x8, 42bb68 <feof@plt+0x282c8>
  42bb60:	blr	x8
  42bb64:	ldr	x0, [x22, #632]
  42bb68:	str	wzr, [x0, #244]
  42bb6c:	ldp	x20, x19, [sp, #480]
  42bb70:	ldp	x22, x21, [sp, #464]
  42bb74:	ldp	x28, x23, [sp, #448]
  42bb78:	ldp	x29, x30, [sp, #432]
  42bb7c:	add	sp, sp, #0x1f0
  42bb80:	ret
  42bb84:	sub	sp, sp, #0x1f0
  42bb88:	stp	x29, x30, [sp, #448]
  42bb8c:	stp	x28, x21, [sp, #464]
  42bb90:	stp	x20, x19, [sp, #480]
  42bb94:	add	x29, sp, #0x1c0
  42bb98:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42bb9c:	ldr	x9, [x20, #632]
  42bba0:	stp	q4, q5, [sp, #64]
  42bba4:	stp	q2, q3, [sp, #32]
  42bba8:	stp	q0, q1, [sp]
  42bbac:	stp	x6, x7, [sp, #168]
  42bbb0:	stp	x4, x5, [sp, #152]
  42bbb4:	stp	x2, x3, [sp, #136]
  42bbb8:	stp	q6, q7, [sp, #96]
  42bbbc:	ldr	w12, [x9, #240]
  42bbc0:	mov	x19, x1
  42bbc4:	mov	w8, w0
  42bbc8:	mov	x10, #0xffffffffffffffd0    	// #-48
  42bbcc:	add	w12, w12, #0x1
  42bbd0:	str	w12, [x9, #240]
  42bbd4:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42bbd8:	ldr	x1, [x9, #408]
  42bbdc:	mov	x11, sp
  42bbe0:	add	x13, sp, #0x88
  42bbe4:	movk	x10, #0xff80, lsl #32
  42bbe8:	add	x11, x11, #0x80
  42bbec:	add	x13, x13, #0x30
  42bbf0:	add	x9, x29, #0x30
  42bbf4:	add	x0, sp, #0xb8
  42bbf8:	mov	w2, w8
  42bbfc:	mov	x3, xzr
  42bc00:	stp	x11, x10, [x29, #-80]
  42bc04:	stp	x9, x13, [x29, #-96]
  42bc08:	add	x21, sp, #0xb8
  42bc0c:	bl	4506a8 <feof@plt+0x4ce08>
  42bc10:	mov	x0, x19
  42bc14:	bl	4033e0 <gettext@plt>
  42bc18:	mov	x19, x0
  42bc1c:	bl	4035c0 <__errno_location@plt>
  42bc20:	adrp	x10, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42bc24:	ldr	w8, [x0]
  42bc28:	ldr	x0, [x20, #632]
  42bc2c:	ldr	d0, [x10, #2752]
  42bc30:	sub	x9, x29, #0x60
  42bc34:	sub	x1, x29, #0x40
  42bc38:	stp	x19, x9, [x29, #-64]
  42bc3c:	stur	w8, [x29, #-48]
  42bc40:	stp	x21, x21, [x29, #-32]
  42bc44:	stur	d0, [x29, #-8]
  42bc48:	bl	429ff0 <feof@plt+0x26750>
  42bc4c:	add	x0, sp, #0xb8
  42bc50:	bl	450788 <feof@plt+0x4cee8>
  42bc54:	ldr	x0, [x20, #632]
  42bc58:	ldr	w8, [x0, #240]
  42bc5c:	subs	w8, w8, #0x1
  42bc60:	str	w8, [x0, #240]
  42bc64:	b.ne	42bc88 <feof@plt+0x283e8>  // b.any
  42bc68:	ldr	w8, [x0, #244]
  42bc6c:	cmp	w8, #0x1
  42bc70:	b.lt	42bc84 <feof@plt+0x283e4>  // b.tstop
  42bc74:	ldr	x8, [x0, #256]
  42bc78:	cbz	x8, 42bc84 <feof@plt+0x283e4>
  42bc7c:	blr	x8
  42bc80:	ldr	x0, [x20, #632]
  42bc84:	str	wzr, [x0, #244]
  42bc88:	ldp	x20, x19, [sp, #480]
  42bc8c:	ldp	x28, x21, [sp, #464]
  42bc90:	ldp	x29, x30, [sp, #448]
  42bc94:	add	sp, sp, #0x1f0
  42bc98:	ret
  42bc9c:	sub	sp, sp, #0x140
  42bca0:	stp	x29, x30, [sp, #272]
  42bca4:	stp	x28, x21, [sp, #288]
  42bca8:	stp	x20, x19, [sp, #304]
  42bcac:	add	x29, sp, #0x110
  42bcb0:	stp	x2, x3, [sp, #128]
  42bcb4:	stp	x4, x5, [sp, #144]
  42bcb8:	stp	x6, x7, [sp, #160]
  42bcbc:	stp	q1, q2, [sp, #16]
  42bcc0:	stp	q3, q4, [sp, #48]
  42bcc4:	str	q0, [sp]
  42bcc8:	stp	q5, q6, [sp, #80]
  42bccc:	str	q7, [sp, #112]
  42bcd0:	cbz	x0, 42bd94 <feof@plt+0x284f4>
  42bcd4:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42bcd8:	ldr	x8, [x21, #632]
  42bcdc:	mov	x9, #0xffffffffffffffd0    	// #-48
  42bce0:	mov	x10, sp
  42bce4:	add	x11, sp, #0x80
  42bce8:	ldr	w12, [x8, #240]
  42bcec:	mov	x19, x0
  42bcf0:	movk	x9, #0xff80, lsl #32
  42bcf4:	add	x13, x29, #0x30
  42bcf8:	add	x10, x10, #0x80
  42bcfc:	add	x11, x11, #0x30
  42bd00:	add	w12, w12, #0x1
  42bd04:	mov	x0, x1
  42bd08:	str	w12, [x8, #240]
  42bd0c:	stp	x10, x9, [x29, #-80]
  42bd10:	stp	x13, x11, [x29, #-96]
  42bd14:	bl	4033e0 <gettext@plt>
  42bd18:	mov	x20, x0
  42bd1c:	bl	4035c0 <__errno_location@plt>
  42bd20:	adrp	x10, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42bd24:	ldr	w8, [x0]
  42bd28:	ldr	x0, [x21, #632]
  42bd2c:	ldr	d0, [x10, #2752]
  42bd30:	sub	x9, x29, #0x60
  42bd34:	sub	x1, x29, #0x40
  42bd38:	stp	x20, x9, [x29, #-64]
  42bd3c:	stur	w8, [x29, #-48]
  42bd40:	stp	x19, x19, [x29, #-32]
  42bd44:	stur	d0, [x29, #-8]
  42bd48:	bl	429ff0 <feof@plt+0x26750>
  42bd4c:	ldr	x0, [x21, #632]
  42bd50:	ldr	w8, [x0, #240]
  42bd54:	subs	w8, w8, #0x1
  42bd58:	str	w8, [x0, #240]
  42bd5c:	b.ne	42bd80 <feof@plt+0x284e0>  // b.any
  42bd60:	ldr	w8, [x0, #244]
  42bd64:	cmp	w8, #0x1
  42bd68:	b.lt	42bd7c <feof@plt+0x284dc>  // b.tstop
  42bd6c:	ldr	x8, [x0, #256]
  42bd70:	cbz	x8, 42bd7c <feof@plt+0x284dc>
  42bd74:	blr	x8
  42bd78:	ldr	x0, [x21, #632]
  42bd7c:	str	wzr, [x0, #244]
  42bd80:	ldp	x20, x19, [sp, #304]
  42bd84:	ldp	x28, x21, [sp, #288]
  42bd88:	ldp	x29, x30, [sp, #272]
  42bd8c:	add	sp, sp, #0x140
  42bd90:	ret
  42bd94:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42bd98:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42bd9c:	add	x0, x0, #0xd70
  42bda0:	add	x2, x2, #0xdb5
  42bda4:	mov	w1, #0x5be                 	// #1470
  42bda8:	bl	429434 <feof@plt+0x25b94>
  42bdac:	sub	sp, sp, #0x1f0
  42bdb0:	stp	x29, x30, [sp, #448]
  42bdb4:	stp	x28, x21, [sp, #464]
  42bdb8:	stp	x20, x19, [sp, #480]
  42bdbc:	add	x29, sp, #0x1c0
  42bdc0:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42bdc4:	ldr	x8, [x20, #632]
  42bdc8:	stp	q4, q5, [sp, #64]
  42bdcc:	stp	q2, q3, [sp, #32]
  42bdd0:	stp	q0, q1, [sp]
  42bdd4:	stp	x6, x7, [sp, #168]
  42bdd8:	stp	x4, x5, [sp, #152]
  42bddc:	stp	x2, x3, [sp, #136]
  42bde0:	str	x1, [sp, #128]
  42bde4:	stp	q6, q7, [sp, #96]
  42bde8:	ldr	w10, [x8, #240]
  42bdec:	adrp	x13, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42bdf0:	mov	x9, #0xffffffffffffffc8    	// #-56
  42bdf4:	mov	x11, sp
  42bdf8:	add	w10, w10, #0x1
  42bdfc:	str	w10, [x8, #240]
  42be00:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42be04:	ldr	x1, [x13, #408]
  42be08:	ldr	w2, [x8, #400]
  42be0c:	add	x12, sp, #0x80
  42be10:	mov	x19, x0
  42be14:	movk	x9, #0xff80, lsl #32
  42be18:	add	x10, x11, #0x80
  42be1c:	add	x11, x12, #0x38
  42be20:	add	x8, x29, #0x30
  42be24:	add	x0, sp, #0xb8
  42be28:	mov	x3, xzr
  42be2c:	stp	x10, x9, [x29, #-80]
  42be30:	stp	x8, x11, [x29, #-96]
  42be34:	add	x21, sp, #0xb8
  42be38:	bl	4506a8 <feof@plt+0x4ce08>
  42be3c:	mov	x0, x19
  42be40:	bl	4033e0 <gettext@plt>
  42be44:	mov	x19, x0
  42be48:	bl	4035c0 <__errno_location@plt>
  42be4c:	adrp	x10, 47d000 <_obstack_memory_used@@Base+0x12fc>
  42be50:	ldr	w8, [x0]
  42be54:	ldr	x0, [x20, #632]
  42be58:	ldr	d0, [x10, #1624]
  42be5c:	sub	x9, x29, #0x60
  42be60:	sub	x1, x29, #0x40
  42be64:	stp	x19, x9, [x29, #-64]
  42be68:	stur	w8, [x29, #-48]
  42be6c:	stp	x21, x21, [x29, #-32]
  42be70:	stur	d0, [x29, #-8]
  42be74:	bl	429ff0 <feof@plt+0x26750>
  42be78:	add	x0, sp, #0xb8
  42be7c:	bl	450788 <feof@plt+0x4cee8>
  42be80:	ldr	x0, [x20, #632]
  42be84:	ldr	w8, [x0, #240]
  42be88:	subs	w8, w8, #0x1
  42be8c:	str	w8, [x0, #240]
  42be90:	b.ne	42beb4 <feof@plt+0x28614>  // b.any
  42be94:	ldr	w8, [x0, #244]
  42be98:	cmp	w8, #0x1
  42be9c:	b.lt	42beb0 <feof@plt+0x28610>  // b.tstop
  42bea0:	ldr	x8, [x0, #256]
  42bea4:	cbz	x8, 42beb0 <feof@plt+0x28610>
  42bea8:	blr	x8
  42beac:	ldr	x0, [x20, #632]
  42beb0:	str	wzr, [x0, #244]
  42beb4:	ldp	x20, x19, [sp, #480]
  42beb8:	ldp	x28, x21, [sp, #464]
  42bebc:	ldp	x29, x30, [sp, #448]
  42bec0:	add	sp, sp, #0x1f0
  42bec4:	ret
  42bec8:	sub	sp, sp, #0x1f0
  42becc:	stp	x29, x30, [sp, #448]
  42bed0:	stp	x28, x21, [sp, #464]
  42bed4:	stp	x20, x19, [sp, #480]
  42bed8:	add	x29, sp, #0x1c0
  42bedc:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42bee0:	ldr	x9, [x20, #632]
  42bee4:	stp	q4, q5, [sp, #64]
  42bee8:	stp	q2, q3, [sp, #32]
  42beec:	stp	q0, q1, [sp]
  42bef0:	stp	x6, x7, [sp, #168]
  42bef4:	stp	x4, x5, [sp, #152]
  42bef8:	stp	x2, x3, [sp, #136]
  42befc:	stp	q6, q7, [sp, #96]
  42bf00:	ldr	w12, [x9, #240]
  42bf04:	mov	x19, x1
  42bf08:	mov	w8, w0
  42bf0c:	mov	x10, #0xffffffffffffffd0    	// #-48
  42bf10:	add	w12, w12, #0x1
  42bf14:	str	w12, [x9, #240]
  42bf18:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42bf1c:	ldr	x1, [x9, #408]
  42bf20:	mov	x11, sp
  42bf24:	add	x13, sp, #0x88
  42bf28:	movk	x10, #0xff80, lsl #32
  42bf2c:	add	x11, x11, #0x80
  42bf30:	add	x13, x13, #0x30
  42bf34:	add	x9, x29, #0x30
  42bf38:	add	x0, sp, #0xb8
  42bf3c:	mov	w2, w8
  42bf40:	mov	x3, xzr
  42bf44:	stp	x11, x10, [x29, #-80]
  42bf48:	stp	x9, x13, [x29, #-96]
  42bf4c:	add	x21, sp, #0xb8
  42bf50:	bl	4506a8 <feof@plt+0x4ce08>
  42bf54:	mov	x0, x19
  42bf58:	bl	4033e0 <gettext@plt>
  42bf5c:	mov	x19, x0
  42bf60:	bl	4035c0 <__errno_location@plt>
  42bf64:	adrp	x10, 47d000 <_obstack_memory_used@@Base+0x12fc>
  42bf68:	ldr	w8, [x0]
  42bf6c:	ldr	x0, [x20, #632]
  42bf70:	ldr	d0, [x10, #1624]
  42bf74:	sub	x9, x29, #0x60
  42bf78:	sub	x1, x29, #0x40
  42bf7c:	stp	x19, x9, [x29, #-64]
  42bf80:	stur	w8, [x29, #-48]
  42bf84:	stp	x21, x21, [x29, #-32]
  42bf88:	stur	d0, [x29, #-8]
  42bf8c:	bl	429ff0 <feof@plt+0x26750>
  42bf90:	add	x0, sp, #0xb8
  42bf94:	bl	450788 <feof@plt+0x4cee8>
  42bf98:	ldr	x0, [x20, #632]
  42bf9c:	ldr	w8, [x0, #240]
  42bfa0:	subs	w8, w8, #0x1
  42bfa4:	str	w8, [x0, #240]
  42bfa8:	b.ne	42bfcc <feof@plt+0x2872c>  // b.any
  42bfac:	ldr	w8, [x0, #244]
  42bfb0:	cmp	w8, #0x1
  42bfb4:	b.lt	42bfc8 <feof@plt+0x28728>  // b.tstop
  42bfb8:	ldr	x8, [x0, #256]
  42bfbc:	cbz	x8, 42bfc8 <feof@plt+0x28728>
  42bfc0:	blr	x8
  42bfc4:	ldr	x0, [x20, #632]
  42bfc8:	str	wzr, [x0, #244]
  42bfcc:	ldp	x20, x19, [sp, #480]
  42bfd0:	ldp	x28, x21, [sp, #464]
  42bfd4:	ldp	x29, x30, [sp, #448]
  42bfd8:	add	sp, sp, #0x1f0
  42bfdc:	ret
  42bfe0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42bfe4:	ldr	x8, [x8, #632]
  42bfe8:	ldr	w9, [x8, #24]
  42bfec:	cbz	w9, 42bff8 <feof@plt+0x28758>
  42bff0:	mov	w0, #0x1                   	// #1
  42bff4:	ret
  42bff8:	ldr	w8, [x8, #28]
  42bffc:	cmp	w8, #0x0
  42c000:	cset	w0, ne  // ne = any
  42c004:	ret
  42c008:	sub	sp, sp, #0x1a0
  42c00c:	stp	x29, x30, [sp, #384]
  42c010:	stp	x28, x19, [sp, #400]
  42c014:	add	x29, sp, #0x180
  42c018:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42c01c:	ldr	x9, [x9, #632]
  42c020:	stp	q4, q5, [sp, #64]
  42c024:	stp	q2, q3, [sp, #32]
  42c028:	stp	q0, q1, [sp]
  42c02c:	stp	x6, x7, [sp, #168]
  42c030:	stp	x4, x5, [sp, #152]
  42c034:	stp	x2, x3, [sp, #136]
  42c038:	stp	q6, q7, [sp, #96]
  42c03c:	ldr	w12, [x9, #240]
  42c040:	mov	x19, x1
  42c044:	mov	w8, w0
  42c048:	mov	x10, #0xffffffffffffffd0    	// #-48
  42c04c:	add	w12, w12, #0x1
  42c050:	str	w12, [x9, #240]
  42c054:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42c058:	ldr	x1, [x9, #408]
  42c05c:	mov	x11, sp
  42c060:	add	x13, sp, #0x88
  42c064:	movk	x10, #0xff80, lsl #32
  42c068:	add	x11, x11, #0x80
  42c06c:	add	x13, x13, #0x30
  42c070:	add	x9, x29, #0x20
  42c074:	add	x0, sp, #0xb8
  42c078:	mov	w2, w8
  42c07c:	mov	x3, xzr
  42c080:	stp	x11, x10, [x29, #-16]
  42c084:	stp	x9, x13, [x29, #-32]
  42c088:	bl	4506a8 <feof@plt+0x4ce08>
  42c08c:	add	x0, sp, #0xb8
  42c090:	sub	x3, x29, #0x20
  42c094:	mov	w1, #0xffffffff            	// #-1
  42c098:	mov	w4, #0x2                   	// #2
  42c09c:	mov	x2, x19
  42c0a0:	bl	42a93c <feof@plt+0x2709c>
  42c0a4:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c0a8:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c0ac:	add	x0, x0, #0xd70
  42c0b0:	add	x2, x2, #0xdbe
  42c0b4:	mov	w1, #0x5f6                 	// #1526
  42c0b8:	bl	429434 <feof@plt+0x25b94>
  42c0bc:	sub	sp, sp, #0x1a0
  42c0c0:	stp	x29, x30, [sp, #384]
  42c0c4:	stp	x28, x19, [sp, #400]
  42c0c8:	add	x29, sp, #0x180
  42c0cc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42c0d0:	ldr	x8, [x8, #632]
  42c0d4:	stp	q4, q5, [sp, #64]
  42c0d8:	stp	q2, q3, [sp, #32]
  42c0dc:	stp	q0, q1, [sp]
  42c0e0:	stp	x6, x7, [sp, #168]
  42c0e4:	stp	x4, x5, [sp, #152]
  42c0e8:	stp	x2, x3, [sp, #136]
  42c0ec:	str	x1, [sp, #128]
  42c0f0:	stp	q6, q7, [sp, #96]
  42c0f4:	ldr	w13, [x8, #240]
  42c0f8:	adrp	x12, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42c0fc:	adrp	x14, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42c100:	mov	x9, #0xffffffffffffffc8    	// #-56
  42c104:	add	w13, w13, #0x1
  42c108:	str	w13, [x8, #240]
  42c10c:	ldr	x1, [x12, #408]
  42c110:	ldr	w2, [x14, #400]
  42c114:	mov	x10, sp
  42c118:	add	x11, sp, #0x80
  42c11c:	mov	x19, x0
  42c120:	movk	x9, #0xff80, lsl #32
  42c124:	add	x10, x10, #0x80
  42c128:	add	x11, x11, #0x38
  42c12c:	add	x8, x29, #0x20
  42c130:	add	x0, sp, #0xb8
  42c134:	mov	x3, xzr
  42c138:	stp	x10, x9, [x29, #-16]
  42c13c:	stp	x8, x11, [x29, #-32]
  42c140:	bl	4506a8 <feof@plt+0x4ce08>
  42c144:	add	x0, sp, #0xb8
  42c148:	sub	x3, x29, #0x20
  42c14c:	mov	w1, #0xffffffff            	// #-1
  42c150:	mov	w4, #0x3                   	// #3
  42c154:	mov	x2, x19
  42c158:	bl	42a93c <feof@plt+0x2709c>
  42c15c:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c160:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c164:	add	x0, x0, #0xd70
  42c168:	add	x2, x2, #0xdca
  42c16c:	mov	w1, #0x607                 	// #1543
  42c170:	bl	429434 <feof@plt+0x25b94>
  42c174:	sub	sp, sp, #0x1a0
  42c178:	stp	x29, x30, [sp, #384]
  42c17c:	stp	x28, x19, [sp, #400]
  42c180:	add	x29, sp, #0x180
  42c184:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42c188:	ldr	x8, [x8, #632]
  42c18c:	stp	q4, q5, [sp, #64]
  42c190:	stp	q2, q3, [sp, #32]
  42c194:	stp	q0, q1, [sp]
  42c198:	stp	x6, x7, [sp, #168]
  42c19c:	stp	x4, x5, [sp, #152]
  42c1a0:	stp	x2, x3, [sp, #136]
  42c1a4:	str	x1, [sp, #128]
  42c1a8:	stp	q6, q7, [sp, #96]
  42c1ac:	ldr	w13, [x8, #240]
  42c1b0:	adrp	x12, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42c1b4:	adrp	x14, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42c1b8:	mov	x9, #0xffffffffffffffc8    	// #-56
  42c1bc:	add	w13, w13, #0x1
  42c1c0:	str	w13, [x8, #240]
  42c1c4:	ldr	x1, [x12, #408]
  42c1c8:	ldr	w2, [x14, #400]
  42c1cc:	mov	x10, sp
  42c1d0:	add	x11, sp, #0x80
  42c1d4:	mov	x19, x0
  42c1d8:	movk	x9, #0xff80, lsl #32
  42c1dc:	add	x10, x10, #0x80
  42c1e0:	add	x11, x11, #0x38
  42c1e4:	add	x8, x29, #0x20
  42c1e8:	add	x0, sp, #0xb8
  42c1ec:	mov	x3, xzr
  42c1f0:	stp	x10, x9, [x29, #-16]
  42c1f4:	stp	x8, x11, [x29, #-32]
  42c1f8:	bl	4506a8 <feof@plt+0x4ce08>
  42c1fc:	add	x0, sp, #0xb8
  42c200:	sub	x3, x29, #0x20
  42c204:	mov	w1, #0xffffffff            	// #-1
  42c208:	mov	w4, #0xd                   	// #13
  42c20c:	mov	x2, x19
  42c210:	bl	42a93c <feof@plt+0x2709c>
  42c214:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c218:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c21c:	add	x0, x0, #0xd70
  42c220:	add	x2, x2, #0xdd9
  42c224:	mov	w1, #0x617                 	// #1559
  42c228:	bl	429434 <feof@plt+0x25b94>
  42c22c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42c230:	ldr	x8, [x8, #632]
  42c234:	ldr	w9, [x8, #240]
  42c238:	add	w9, w9, #0x1
  42c23c:	str	w9, [x8, #240]
  42c240:	ret
  42c244:	stp	x29, x30, [sp, #-32]!
  42c248:	str	x19, [sp, #16]
  42c24c:	mov	x29, sp
  42c250:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42c254:	ldr	x0, [x19, #632]
  42c258:	ldr	w8, [x0, #240]
  42c25c:	subs	w8, w8, #0x1
  42c260:	str	w8, [x0, #240]
  42c264:	b.ne	42c288 <feof@plt+0x289e8>  // b.any
  42c268:	ldr	w8, [x0, #244]
  42c26c:	cmp	w8, #0x1
  42c270:	b.lt	42c284 <feof@plt+0x289e4>  // b.tstop
  42c274:	ldr	x8, [x0, #256]
  42c278:	cbz	x8, 42c284 <feof@plt+0x289e4>
  42c27c:	blr	x8
  42c280:	ldr	x0, [x19, #632]
  42c284:	str	wzr, [x0, #244]
  42c288:	ldr	x19, [sp, #16]
  42c28c:	ldp	x29, x30, [sp], #32
  42c290:	ret
  42c294:	stp	x29, x30, [sp, #-80]!
  42c298:	stp	x26, x25, [sp, #16]
  42c29c:	stp	x24, x23, [sp, #32]
  42c2a0:	stp	x22, x21, [sp, #48]
  42c2a4:	stp	x20, x19, [sp, #64]
  42c2a8:	mov	x29, sp
  42c2ac:	cbz	x0, 42c3b8 <feof@plt+0x28b18>
  42c2b0:	mov	x20, x1
  42c2b4:	cbz	x1, 42c3d0 <feof@plt+0x28b30>
  42c2b8:	mov	w1, #0x22                  	// #34
  42c2bc:	mov	x19, x0
  42c2c0:	bl	433718 <feof@plt+0x2fe78>
  42c2c4:	ldrb	w8, [x20]
  42c2c8:	cbz	w8, 42c398 <feof@plt+0x28af8>
  42c2cc:	add	x25, x20, #0x1
  42c2d0:	adrp	x20, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c2d4:	adrp	x21, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c2d8:	adrp	x26, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  42c2dc:	adrp	x22, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c2e0:	adrp	x23, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c2e4:	adrp	x24, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c2e8:	add	x20, x20, #0xf0b
  42c2ec:	add	x21, x21, #0xf0e
  42c2f0:	add	x26, x26, #0x4a2
  42c2f4:	add	x22, x22, #0xf14
  42c2f8:	add	x23, x23, #0xf11
  42c2fc:	add	x24, x24, #0xf08
  42c300:	b	42c318 <feof@plt+0x28a78>
  42c304:	mov	x0, x19
  42c308:	mov	x1, x23
  42c30c:	bl	4354fc <feof@plt+0x31c5c>
  42c310:	ldrb	w8, [x25], #1
  42c314:	cbz	w8, 42c398 <feof@plt+0x28af8>
  42c318:	and	w1, w8, #0xff
  42c31c:	cmp	w1, #0x21
  42c320:	b.gt	42c340 <feof@plt+0x28aa0>
  42c324:	cmp	w1, #0x9
  42c328:	b.eq	42c380 <feof@plt+0x28ae0>  // b.none
  42c32c:	cmp	w1, #0xa
  42c330:	b.ne	42c35c <feof@plt+0x28abc>  // b.any
  42c334:	mov	x0, x19
  42c338:	mov	x1, x21
  42c33c:	b	42c30c <feof@plt+0x28a6c>
  42c340:	cmp	w1, #0x22
  42c344:	b.eq	42c304 <feof@plt+0x28a64>  // b.none
  42c348:	cmp	w1, #0x5c
  42c34c:	b.ne	42c35c <feof@plt+0x28abc>  // b.any
  42c350:	mov	x0, x19
  42c354:	mov	x1, x24
  42c358:	b	42c30c <feof@plt+0x28a6c>
  42c35c:	ldrh	w8, [x26, w1, uxtw #1]
  42c360:	tbnz	w8, #4, 42c38c <feof@plt+0x28aec>
  42c364:	lsr	w2, w1, #6
  42c368:	ubfx	w3, w1, #3, #3
  42c36c:	and	w4, w1, #0x7
  42c370:	mov	x0, x19
  42c374:	mov	x1, x22
  42c378:	bl	435d34 <feof@plt+0x32494>
  42c37c:	b	42c310 <feof@plt+0x28a70>
  42c380:	mov	x0, x19
  42c384:	mov	x1, x20
  42c388:	b	42c30c <feof@plt+0x28a6c>
  42c38c:	mov	x0, x19
  42c390:	bl	433718 <feof@plt+0x2fe78>
  42c394:	b	42c310 <feof@plt+0x28a70>
  42c398:	mov	x0, x19
  42c39c:	ldp	x20, x19, [sp, #64]
  42c3a0:	ldp	x22, x21, [sp, #48]
  42c3a4:	ldp	x24, x23, [sp, #32]
  42c3a8:	ldp	x26, x25, [sp, #16]
  42c3ac:	mov	w1, #0x22                  	// #34
  42c3b0:	ldp	x29, x30, [sp], #80
  42c3b4:	b	433718 <feof@plt+0x2fe78>
  42c3b8:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c3bc:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c3c0:	add	x0, x0, #0xd70
  42c3c4:	add	x2, x2, #0xef3
  42c3c8:	mov	w1, #0x2f5                 	// #757
  42c3cc:	bl	429434 <feof@plt+0x25b94>
  42c3d0:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c3d4:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c3d8:	add	x0, x0, #0xd70
  42c3dc:	add	x2, x2, #0xef3
  42c3e0:	mov	w1, #0x2f6                 	// #758
  42c3e4:	bl	429434 <feof@plt+0x25b94>
  42c3e8:	stp	x29, x30, [sp, #-64]!
  42c3ec:	str	x23, [sp, #16]
  42c3f0:	stp	x22, x21, [sp, #32]
  42c3f4:	stp	x20, x19, [sp, #48]
  42c3f8:	mov	x29, sp
  42c3fc:	cbz	x1, 42c4cc <feof@plt+0x28c2c>
  42c400:	ldr	x8, [x0, #16]
  42c404:	mov	x20, x1
  42c408:	mov	x19, x0
  42c40c:	cbz	x8, 42c418 <feof@plt+0x28b78>
  42c410:	ldr	x0, [x20]
  42c414:	blr	x8
  42c418:	ldr	x8, [x19, #24]
  42c41c:	cbz	x8, 42c428 <feof@plt+0x28b88>
  42c420:	ldr	x0, [x20, #8]
  42c424:	blr	x8
  42c428:	mov	x21, xzr
  42c42c:	str	xzr, [x20, #32]
  42c430:	ldr	x9, [x20, #16]
  42c434:	cbz	x9, 42c468 <feof@plt+0x28bc8>
  42c438:	ldr	x8, [x19, #16]
  42c43c:	cbz	x8, 42c448 <feof@plt+0x28ba8>
  42c440:	ldr	x0, [x9]
  42c444:	blr	x8
  42c448:	ldr	x8, [x19, #24]
  42c44c:	cbz	x8, 42c45c <feof@plt+0x28bbc>
  42c450:	ldr	x9, [x20, #16]
  42c454:	ldr	x0, [x9, #8]
  42c458:	blr	x8
  42c45c:	ldr	x8, [x20, #16]
  42c460:	str	x21, [x8, #32]
  42c464:	ldr	x21, [x20, #16]
  42c468:	ldr	x9, [x20, #24]
  42c46c:	cbz	x9, 42c4a8 <feof@plt+0x28c08>
  42c470:	ldr	x8, [x19, #16]
  42c474:	cbz	x8, 42c480 <feof@plt+0x28be0>
  42c478:	ldr	x0, [x9]
  42c47c:	blr	x8
  42c480:	ldr	x8, [x19, #24]
  42c484:	cbz	x8, 42c494 <feof@plt+0x28bf4>
  42c488:	ldr	x9, [x20, #24]
  42c48c:	ldr	x0, [x9, #8]
  42c490:	blr	x8
  42c494:	ldr	x8, [x20, #24]
  42c498:	str	x21, [x8, #32]
  42c49c:	ldr	x22, [x20, #24]
  42c4a0:	mov	x21, x22
  42c4a4:	b	42c4ac <feof@plt+0x28c0c>
  42c4a8:	mov	x22, x21
  42c4ac:	ldr	x23, [x20, #32]
  42c4b0:	mov	x0, x20
  42c4b4:	bl	403410 <_ZdlPv@plt>
  42c4b8:	mov	x20, x23
  42c4bc:	cbnz	x23, 42c430 <feof@plt+0x28b90>
  42c4c0:	mov	x21, xzr
  42c4c4:	mov	x20, x22
  42c4c8:	cbnz	x22, 42c430 <feof@plt+0x28b90>
  42c4cc:	ldp	x20, x19, [sp, #48]
  42c4d0:	ldp	x22, x21, [sp, #32]
  42c4d4:	ldr	x23, [sp, #16]
  42c4d8:	ldp	x29, x30, [sp], #64
  42c4dc:	ret
  42c4e0:	stp	x29, x30, [sp, #-48]!
  42c4e4:	stp	x22, x21, [sp, #16]
  42c4e8:	stp	x20, x19, [sp, #32]
  42c4ec:	mov	x29, sp
  42c4f0:	tbz	w0, #0, 42c548 <feof@plt+0x28ca8>
  42c4f4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42c4f8:	ldr	x0, [x8, #640]
  42c4fc:	cbz	x0, 42c548 <feof@plt+0x28ca8>
  42c500:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42c504:	adrp	x19, 48f000 <_obstack_memory_used@@Base+0x132fc>
  42c508:	mov	x20, x2
  42c50c:	mov	x21, x1
  42c510:	add	x22, x22, #0x298
  42c514:	add	x19, x19, #0x23b
  42c518:	b	42c524 <feof@plt+0x28c84>
  42c51c:	ldr	x0, [x22], #24
  42c520:	cbz	x0, 42c550 <feof@plt+0x28cb0>
  42c524:	ldurb	w8, [x22, #-8]
  42c528:	cmp	x8, x20
  42c52c:	b.ne	42c51c <feof@plt+0x28c7c>  // b.any
  42c530:	mov	x1, x21
  42c534:	mov	x2, x20
  42c538:	bl	403840 <bcmp@plt>
  42c53c:	cbnz	w0, 42c51c <feof@plt+0x28c7c>
  42c540:	ldur	x19, [x22, #-16]
  42c544:	b	42c550 <feof@plt+0x28cb0>
  42c548:	adrp	x19, 48f000 <_obstack_memory_used@@Base+0x132fc>
  42c54c:	add	x19, x19, #0x23b
  42c550:	mov	x0, x19
  42c554:	ldp	x20, x19, [sp, #32]
  42c558:	ldp	x22, x21, [sp, #16]
  42c55c:	ldp	x29, x30, [sp], #48
  42c560:	ret
  42c564:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  42c568:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c56c:	add	x8, x8, #0x23b
  42c570:	add	x9, x9, #0xf5b
  42c574:	tst	w0, #0x1
  42c578:	csel	x0, x9, x8, ne  // ne = any
  42c57c:	ret
  42c580:	stp	x29, x30, [sp, #-16]!
  42c584:	mov	x29, sp
  42c588:	cbz	w0, 42c5d8 <feof@plt+0x28d38>
  42c58c:	cmp	w0, #0x2
  42c590:	b.eq	42c5a4 <feof@plt+0x28d04>  // b.none
  42c594:	cmp	w0, #0x1
  42c598:	b.ne	42c5e4 <feof@plt+0x28d44>  // b.any
  42c59c:	ldp	x29, x30, [sp], #16
  42c5a0:	b	42c5fc <feof@plt+0x28d5c>
  42c5a4:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42c5a8:	add	x0, x0, #0x57
  42c5ac:	bl	403700 <getenv@plt>
  42c5b0:	cbz	x0, 42c5d8 <feof@plt+0x28d38>
  42c5b4:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42c5b8:	add	x1, x1, #0x5c
  42c5bc:	bl	403640 <strcmp@plt>
  42c5c0:	cbz	w0, 42c5d8 <feof@plt+0x28d38>
  42c5c4:	mov	w0, #0x2                   	// #2
  42c5c8:	bl	403240 <isatty@plt>
  42c5cc:	cbz	w0, 42c5d8 <feof@plt+0x28d38>
  42c5d0:	ldp	x29, x30, [sp], #16
  42c5d4:	b	42c5fc <feof@plt+0x28d5c>
  42c5d8:	mov	w0, wzr
  42c5dc:	ldp	x29, x30, [sp], #16
  42c5e0:	ret
  42c5e4:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c5e8:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c5ec:	add	x0, x0, #0xf62
  42c5f0:	add	x2, x2, #0xf7f
  42c5f4:	mov	w1, #0xec                  	// #236
  42c5f8:	bl	429434 <feof@plt+0x25b94>
  42c5fc:	stp	x29, x30, [sp, #-96]!
  42c600:	stp	x28, x27, [sp, #16]
  42c604:	stp	x26, x25, [sp, #32]
  42c608:	stp	x24, x23, [sp, #48]
  42c60c:	stp	x22, x21, [sp, #64]
  42c610:	stp	x20, x19, [sp, #80]
  42c614:	mov	x29, sp
  42c618:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42c61c:	add	x0, x0, #0x4c
  42c620:	bl	403700 <getenv@plt>
  42c624:	cbz	x0, 42c774 <feof@plt+0x28ed4>
  42c628:	ldrb	w24, [x0]
  42c62c:	mov	x19, x0
  42c630:	cbz	w24, 42c77c <feof@plt+0x28edc>
  42c634:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42c638:	mov	w27, #0x1b6d                	// #7021
  42c63c:	mov	x22, xzr
  42c640:	mov	x21, xzr
  42c644:	mov	x20, xzr
  42c648:	add	x26, x26, #0x280
  42c64c:	movk	w27, #0x4b5b, lsl #16
  42c650:	mov	w28, #0x1                   	// #1
  42c654:	mov	x23, x19
  42c658:	b	42c660 <feof@plt+0x28dc0>
  42c65c:	ldrb	w24, [x19, #1]!
  42c660:	ands	w8, w24, #0xff
  42c664:	b.eq	42c678 <feof@plt+0x28dd8>  // b.none
  42c668:	cmp	w8, #0x3d
  42c66c:	b.eq	42c734 <feof@plt+0x28e94>  // b.none
  42c670:	cmp	w8, #0x3a
  42c674:	b.ne	42c754 <feof@plt+0x28eb4>  // b.any
  42c678:	ldr	x0, [x26]
  42c67c:	sub	x8, x19, x22
  42c680:	sub	x9, x19, x23
  42c684:	cmp	x22, #0x0
  42c688:	csel	x21, x21, x9, ne  // ne = any
  42c68c:	csel	x20, x8, x20, ne  // ne = any
  42c690:	mov	x25, x26
  42c694:	cbnz	x0, 42c6a4 <feof@plt+0x28e04>
  42c698:	b	42c6c0 <feof@plt+0x28e20>
  42c69c:	ldr	x0, [x25, #24]!
  42c6a0:	cbz	x0, 42c6c0 <feof@plt+0x28e20>
  42c6a4:	ldrb	w8, [x25, #16]
  42c6a8:	cmp	x21, x8
  42c6ac:	b.ne	42c69c <feof@plt+0x28dfc>  // b.any
  42c6b0:	mov	x1, x23
  42c6b4:	mov	x2, x21
  42c6b8:	bl	403840 <bcmp@plt>
  42c6bc:	cbnz	w0, 42c69c <feof@plt+0x28dfc>
  42c6c0:	cbz	x22, 42c718 <feof@plt+0x28e78>
  42c6c4:	ldr	x0, [x25, #8]
  42c6c8:	cbz	x0, 42c718 <feof@plt+0x28e78>
  42c6cc:	ldrb	w8, [x25, #17]
  42c6d0:	cbz	w8, 42c6d8 <feof@plt+0x28e38>
  42c6d4:	bl	4031d0 <free@plt>
  42c6d8:	add	x0, x20, #0x7
  42c6dc:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  42c6e0:	mov	x24, x0
  42c6e4:	mov	w8, #0x5b1b                	// #23323
  42c6e8:	strh	w8, [x24], #2
  42c6ec:	mov	x23, x0
  42c6f0:	mov	x0, x24
  42c6f4:	mov	x1, x22
  42c6f8:	mov	x2, x20
  42c6fc:	bl	402fc0 <memcpy@plt>
  42c700:	add	x8, x24, x20
  42c704:	str	x23, [x25, #8]
  42c708:	str	w27, [x8]
  42c70c:	strb	wzr, [x8, #4]
  42c710:	strb	w28, [x25, #17]
  42c714:	ldrb	w24, [x19]
  42c718:	tst	w24, #0xff
  42c71c:	b.eq	42c774 <feof@plt+0x28ed4>  // b.none
  42c720:	add	x19, x19, #0x1
  42c724:	ldrb	w24, [x19]
  42c728:	mov	x22, xzr
  42c72c:	mov	x23, x19
  42c730:	b	42c660 <feof@plt+0x28dc0>
  42c734:	subs	x21, x19, x23
  42c738:	mov	w0, #0x1                   	// #1
  42c73c:	b.eq	42c780 <feof@plt+0x28ee0>  // b.none
  42c740:	cbnz	x22, 42c780 <feof@plt+0x28ee0>
  42c744:	add	x19, x19, #0x1
  42c748:	ldrb	w24, [x19]
  42c74c:	mov	x22, x19
  42c750:	b	42c660 <feof@plt+0x28dc0>
  42c754:	cbz	x22, 42c65c <feof@plt+0x28dbc>
  42c758:	and	w8, w24, #0xff
  42c75c:	cmp	w8, #0x3b
  42c760:	b.eq	42c65c <feof@plt+0x28dbc>  // b.none
  42c764:	sub	w8, w24, #0x30
  42c768:	and	w8, w8, #0xff
  42c76c:	cmp	w8, #0x9
  42c770:	b.ls	42c65c <feof@plt+0x28dbc>  // b.plast
  42c774:	mov	w0, #0x1                   	// #1
  42c778:	b	42c780 <feof@plt+0x28ee0>
  42c77c:	mov	w0, wzr
  42c780:	ldp	x20, x19, [sp, #80]
  42c784:	ldp	x22, x21, [sp, #64]
  42c788:	ldp	x24, x23, [sp, #48]
  42c78c:	ldp	x26, x25, [sp, #32]
  42c790:	ldp	x28, x27, [sp, #16]
  42c794:	ldp	x29, x30, [sp], #96
  42c798:	ret
  42c79c:	sub	sp, sp, #0xe0
  42c7a0:	stp	x29, x30, [sp, #176]
  42c7a4:	str	x21, [sp, #192]
  42c7a8:	stp	x20, x19, [sp, #208]
  42c7ac:	add	x29, sp, #0xb0
  42c7b0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  42c7b4:	mov	w20, w1
  42c7b8:	ldr	x1, [x8, #632]
  42c7bc:	mov	x21, x0
  42c7c0:	add	x0, sp, #0x18
  42c7c4:	mov	w3, #0x4                   	// #4
  42c7c8:	mov	x2, x21
  42c7cc:	bl	42c8a8 <feof@plt+0x29008>
  42c7d0:	mov	w8, #0x1                   	// #1
  42c7d4:	add	x0, sp, #0x18
  42c7d8:	add	x1, sp, #0x8
  42c7dc:	mov	w3, #0x1                   	// #1
  42c7e0:	mov	w2, wzr
  42c7e4:	stp	w20, w8, [sp, #8]
  42c7e8:	bl	42da20 <feof@plt+0x2a180>
  42c7ec:	mov	w19, wzr
  42c7f0:	tbz	w0, #0, 42c80c <feof@plt+0x28f6c>
  42c7f4:	mov	w2, #0x1                   	// #1
  42c7f8:	mov	x0, x21
  42c7fc:	mov	w1, w20
  42c800:	mov	x3, xzr
  42c804:	mov	w19, #0x1                   	// #1
  42c808:	bl	4506e0 <feof@plt+0x4ce40>
  42c80c:	ldr	x0, [sp, #160]
  42c810:	cbz	x0, 42c824 <feof@plt+0x28f84>
  42c814:	ldr	w8, [x0]
  42c818:	tbnz	w8, #31, 42c840 <feof@plt+0x28fa0>
  42c81c:	bl	4031d0 <free@plt>
  42c820:	str	xzr, [sp, #160]
  42c824:	ldr	x0, [sp, #152]
  42c828:	cbz	x0, 42c854 <feof@plt+0x28fb4>
  42c82c:	ldr	w8, [x0]
  42c830:	tbnz	w8, #31, 42c850 <feof@plt+0x28fb0>
  42c834:	bl	4031d0 <free@plt>
  42c838:	str	xzr, [sp, #152]
  42c83c:	b	42c854 <feof@plt+0x28fb4>
  42c840:	str	wzr, [x0, #4]
  42c844:	ldr	x0, [sp, #152]
  42c848:	cbnz	x0, 42c82c <feof@plt+0x28f8c>
  42c84c:	b	42c854 <feof@plt+0x28fb4>
  42c850:	str	wzr, [x0, #4]
  42c854:	ldr	x0, [sp, #144]
  42c858:	cbz	x0, 42c874 <feof@plt+0x28fd4>
  42c85c:	ldr	w8, [x0]
  42c860:	tbnz	w8, #31, 42c870 <feof@plt+0x28fd0>
  42c864:	bl	4031d0 <free@plt>
  42c868:	str	xzr, [sp, #144]
  42c86c:	b	42c874 <feof@plt+0x28fd4>
  42c870:	str	wzr, [x0, #4]
  42c874:	ldr	w8, [sp, #92]
  42c878:	cmn	w8, #0x1
  42c87c:	b.eq	42c890 <feof@plt+0x28ff0>  // b.none
  42c880:	ldr	x8, [sp, #80]
  42c884:	ldr	x1, [sp, #128]
  42c888:	ldr	x0, [x8]
  42c88c:	bl	4354fc <feof@plt+0x31c5c>
  42c890:	mov	w0, w19
  42c894:	ldp	x20, x19, [sp, #208]
  42c898:	ldr	x21, [sp, #192]
  42c89c:	ldp	x29, x30, [sp, #176]
  42c8a0:	add	sp, sp, #0xe0
  42c8a4:	ret
  42c8a8:	sub	sp, sp, #0x90
  42c8ac:	stp	x29, x30, [sp, #48]
  42c8b0:	stp	x28, x27, [sp, #64]
  42c8b4:	stp	x26, x25, [sp, #80]
  42c8b8:	stp	x24, x23, [sp, #96]
  42c8bc:	stp	x22, x21, [sp, #112]
  42c8c0:	stp	x20, x19, [sp, #128]
  42c8c4:	add	x29, sp, #0x30
  42c8c8:	str	x1, [x0]
  42c8cc:	ldr	x8, [x1]
  42c8d0:	mov	x20, x1
  42c8d4:	mov	x19, x0
  42c8d8:	mov	w1, wzr
  42c8dc:	str	x8, [x0, #8]
  42c8e0:	mov	x0, x2
  42c8e4:	mov	w22, w3
  42c8e8:	mov	x21, x2
  42c8ec:	bl	450864 <feof@plt+0x4cfc4>
  42c8f0:	ldr	w8, [x0]
  42c8f4:	mov	x0, x21
  42c8f8:	mov	w1, wzr
  42c8fc:	str	w8, [x19, #16]
  42c900:	add	x8, x19, #0x18
  42c904:	bl	450888 <feof@plt+0x4cfe8>
  42c908:	mov	w8, #0xffffffff            	// #-1
  42c90c:	str	x20, [x19, #56]
  42c910:	stp	w22, w8, [x19, #64]
  42c914:	ldr	x8, [x20]
  42c918:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c91c:	add	x1, x1, #0xfb1
  42c920:	mov	w2, #0x6                   	// #6
  42c924:	ldrb	w0, [x8, #67]
  42c928:	bl	42c4e0 <feof@plt+0x28c40>
  42c92c:	ldr	x8, [x19, #56]
  42c930:	str	x0, [x19, #72]
  42c934:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c938:	add	x1, x1, #0xfc1
  42c93c:	ldr	x8, [x8]
  42c940:	mov	w2, #0x6                   	// #6
  42c944:	ldrb	w0, [x8, #67]
  42c948:	bl	42c4e0 <feof@plt+0x28c40>
  42c94c:	ldr	x8, [x19, #56]
  42c950:	str	x0, [x19, #80]
  42c954:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c958:	add	x1, x1, #0xfda
  42c95c:	ldr	x8, [x8]
  42c960:	mov	w2, #0xc                   	// #12
  42c964:	ldrb	w0, [x8, #67]
  42c968:	bl	42c4e0 <feof@plt+0x28c40>
  42c96c:	ldr	x8, [x19, #56]
  42c970:	str	x0, [x19, #88]
  42c974:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42c978:	add	x1, x1, #0xfe7
  42c97c:	ldr	x8, [x8]
  42c980:	mov	w2, #0xc                   	// #12
  42c984:	ldrb	w0, [x8, #67]
  42c988:	bl	42c4e0 <feof@plt+0x28c40>
  42c98c:	str	x0, [x19, #96]
  42c990:	ldr	x8, [x20]
  42c994:	ldrb	w0, [x8, #67]
  42c998:	bl	42c564 <feof@plt+0x28cc4>
  42c99c:	str	x0, [x19, #104]
  42c9a0:	ldrb	w8, [x20, #221]
  42c9a4:	str	x20, [sp, #8]
  42c9a8:	strb	w8, [x19, #112]
  42c9ac:	ldrb	w8, [x20, #222]
  42c9b0:	strb	w8, [x19, #113]
  42c9b4:	ldrb	w8, [x20, #223]
  42c9b8:	strb	w8, [x19, #114]
  42c9bc:	ldr	w20, [x21, #8]
  42c9c0:	str	xzr, [x19, #120]
  42c9c4:	cbz	w20, 42c9e8 <feof@plt+0x29148>
  42c9c8:	mov	w8, #0x28                  	// #40
  42c9cc:	orr	x9, xzr, #0x8
  42c9d0:	madd	x1, x20, x8, x9
  42c9d4:	mov	x0, xzr
  42c9d8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  42c9dc:	and	w8, w20, #0x7fffffff
  42c9e0:	str	x0, [x19, #120]
  42c9e4:	stp	w8, wzr, [x0]
  42c9e8:	ldr	w20, [x21, #120]
  42c9ec:	str	xzr, [x19, #128]
  42c9f0:	cbz	w20, 42ca10 <feof@plt+0x29170>
  42c9f4:	lsl	x8, x20, #3
  42c9f8:	add	x1, x8, #0x8
  42c9fc:	mov	x0, xzr
  42ca00:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  42ca04:	and	w8, w20, #0x7fffffff
  42ca08:	str	x0, [x19, #128]
  42ca0c:	stp	w8, wzr, [x0]
  42ca10:	ldr	w8, [x21, #8]
  42ca14:	str	xzr, [x19, #136]
  42ca18:	adds	w20, w8, #0x1
  42ca1c:	b.cs	42ca40 <feof@plt+0x291a0>  // b.hs, b.nlast
  42ca20:	mov	w8, w20
  42ca24:	lsl	x8, x8, #3
  42ca28:	add	x1, x8, #0x8
  42ca2c:	mov	x0, xzr
  42ca30:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  42ca34:	and	w8, w20, #0x7fffffff
  42ca38:	str	x0, [x19, #136]
  42ca3c:	stp	w8, wzr, [x0]
  42ca40:	str	xzr, [x19, #144]
  42ca44:	ldr	w8, [x21, #8]
  42ca48:	cbz	w8, 42ca80 <feof@plt+0x291e0>
  42ca4c:	mov	w22, wzr
  42ca50:	mov	x0, x21
  42ca54:	mov	w1, w22
  42ca58:	bl	450864 <feof@plt+0x4cfc4>
  42ca5c:	mov	x1, x0
  42ca60:	mov	x0, x19
  42ca64:	mov	w2, w22
  42ca68:	mov	w3, wzr
  42ca6c:	bl	42da20 <feof@plt+0x2a180>
  42ca70:	ldr	w8, [x21, #8]
  42ca74:	add	w22, w22, #0x1
  42ca78:	cmp	w22, w8
  42ca7c:	b.cc	42ca50 <feof@plt+0x291b0>  // b.lo, b.ul, b.last
  42ca80:	ldr	w8, [x21, #120]
  42ca84:	cbz	w8, 42cc78 <feof@plt+0x293d8>
  42ca88:	mov	w23, wzr
  42ca8c:	mov	w24, #0x4                   	// #4
  42ca90:	b	42cac4 <feof@plt+0x29224>
  42ca94:	ldr	x11, [x19, #128]
  42ca98:	str	w20, [x11, #4]
  42ca9c:	ldr	x8, [x19, #128]
  42caa0:	ldr	w9, [x8, #4]
  42caa4:	add	w10, w9, #0x1
  42caa8:	add	x9, x8, x9, lsl #3
  42caac:	str	w10, [x8, #4]
  42cab0:	str	x25, [x9, #8]
  42cab4:	ldr	w8, [x21, #120]
  42cab8:	add	w23, w23, #0x1
  42cabc:	cmp	w23, w8
  42cac0:	b.cs	42cc78 <feof@plt+0x293d8>  // b.hs, b.nlast
  42cac4:	cmp	w23, #0x1
  42cac8:	b.gt	42cad8 <feof@plt+0x29238>
  42cacc:	add	x8, x21, w23, sxtw #3
  42cad0:	add	x8, x8, #0x80
  42cad4:	b	42cae4 <feof@plt+0x29244>
  42cad8:	ldr	x8, [x21, #152]
  42cadc:	add	x8, x8, w23, sxtw #3
  42cae0:	sub	x8, x8, #0x10
  42cae4:	ldr	x25, [x8]
  42cae8:	add	x8, sp, #0x10
  42caec:	ldr	w0, [x25]
  42caf0:	bl	4377f8 <feof@plt+0x33f58>
  42caf4:	ldr	x8, [sp, #16]
  42caf8:	ldr	x9, [x19, #24]
  42cafc:	cmp	x8, x9
  42cb00:	b.ne	42cab4 <feof@plt+0x29214>  // b.any
  42cb04:	ldr	w0, [x25, #4]
  42cb08:	add	x8, sp, #0x10
  42cb0c:	bl	4377f8 <feof@plt+0x33f58>
  42cb10:	ldr	x8, [sp, #16]
  42cb14:	ldr	x9, [x19, #24]
  42cb18:	cmp	x8, x9
  42cb1c:	b.ne	42cab4 <feof@plt+0x29214>  // b.any
  42cb20:	ldr	x26, [x19, #128]
  42cb24:	cbz	x26, 42cb6c <feof@plt+0x292cc>
  42cb28:	ldp	w8, w9, [x26]
  42cb2c:	and	w0, w8, #0x7fffffff
  42cb30:	cmp	w0, w9
  42cb34:	b.ne	42ca9c <feof@plt+0x291fc>  // b.any
  42cb38:	tbnz	w8, #31, 42cb7c <feof@plt+0x292dc>
  42cb3c:	add	w1, w0, #0x1
  42cb40:	bl	425fbc <feof@plt+0x2271c>
  42cb44:	ldr	x8, [x19, #128]
  42cb48:	mov	w9, w0
  42cb4c:	lsl	x9, x9, #3
  42cb50:	mov	w22, w0
  42cb54:	add	x1, x9, #0x8
  42cb58:	mov	w20, wzr
  42cb5c:	cbz	x8, 42cc6c <feof@plt+0x293cc>
  42cb60:	ldr	w28, [x8, #4]
  42cb64:	mov	w27, wzr
  42cb68:	b	42cba8 <feof@plt+0x29308>
  42cb6c:	mov	w20, wzr
  42cb70:	mov	w27, wzr
  42cb74:	mov	w22, #0x4                   	// #4
  42cb78:	b	42cb94 <feof@plt+0x292f4>
  42cb7c:	str	xzr, [x19, #128]
  42cb80:	ldr	w20, [x26, #4]
  42cb84:	mov	w27, #0x1                   	// #1
  42cb88:	add	w8, w20, #0x1
  42cb8c:	cmp	w8, #0x4
  42cb90:	csinc	w22, w24, w20, ls  // ls = plast
  42cb94:	mov	w9, w22
  42cb98:	lsl	x9, x9, #3
  42cb9c:	mov	x8, xzr
  42cba0:	mov	w28, wzr
  42cba4:	add	x1, x9, #0x8
  42cba8:	mov	x0, x8
  42cbac:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  42cbb0:	and	w8, w22, #0x7fffffff
  42cbb4:	str	x0, [x19, #128]
  42cbb8:	stp	w8, w28, [x0]
  42cbbc:	cbz	w27, 42ca9c <feof@plt+0x291fc>
  42cbc0:	ldr	x11, [x19, #128]
  42cbc4:	cbz	w20, 42ca98 <feof@plt+0x291f8>
  42cbc8:	sub	w12, w20, #0x1
  42cbcc:	add	x8, x26, #0x8
  42cbd0:	cmp	w12, #0x3
  42cbd4:	add	x9, x11, #0x8
  42cbd8:	b.cs	42cbe4 <feof@plt+0x29344>  // b.hs, b.nlast
  42cbdc:	mov	w10, w20
  42cbe0:	b	42cc58 <feof@plt+0x293b8>
  42cbe4:	lsl	x10, x12, #3
  42cbe8:	add	x13, x26, x10
  42cbec:	add	x13, x13, #0x10
  42cbf0:	cmp	x13, x9
  42cbf4:	b.ls	42cc0c <feof@plt+0x2936c>  // b.plast
  42cbf8:	add	x10, x11, x10
  42cbfc:	add	x10, x10, #0x10
  42cc00:	cmp	x10, x8
  42cc04:	mov	w10, w20
  42cc08:	b.hi	42cc58 <feof@plt+0x293b8>  // b.pmore
  42cc0c:	add	x12, x12, #0x1
  42cc10:	and	x13, x12, #0x1fffffffc
  42cc14:	lsl	x8, x13, #3
  42cc18:	add	x14, x11, #0x18
  42cc1c:	add	x9, x26, x8
  42cc20:	add	x11, x11, x8
  42cc24:	sub	w10, w20, w13
  42cc28:	add	x8, x9, #0x8
  42cc2c:	add	x9, x11, #0x8
  42cc30:	add	x11, x26, #0x18
  42cc34:	mov	x15, x13
  42cc38:	ldp	q0, q1, [x11, #-16]
  42cc3c:	subs	x15, x15, #0x4
  42cc40:	add	x11, x11, #0x20
  42cc44:	stp	q0, q1, [x14, #-16]
  42cc48:	add	x14, x14, #0x20
  42cc4c:	b.ne	42cc38 <feof@plt+0x29398>  // b.any
  42cc50:	cmp	x12, x13
  42cc54:	b.eq	42ca94 <feof@plt+0x291f4>  // b.none
  42cc58:	ldr	x11, [x8], #8
  42cc5c:	subs	w10, w10, #0x1
  42cc60:	str	x11, [x9], #8
  42cc64:	b.ne	42cc58 <feof@plt+0x293b8>  // b.any
  42cc68:	b	42ca94 <feof@plt+0x291f4>
  42cc6c:	mov	w27, wzr
  42cc70:	mov	w28, wzr
  42cc74:	b	42cba8 <feof@plt+0x29308>
  42cc78:	ldr	x8, [x19, #128]
  42cc7c:	cbz	x8, 42cca0 <feof@plt+0x29400>
  42cc80:	ldr	w1, [x8, #4]
  42cc84:	cmp	w1, #0x2
  42cc88:	b.cc	42cca0 <feof@plt+0x29400>  // b.lo, b.ul, b.last
  42cc8c:	adrp	x3, 42f000 <feof@plt+0x2b760>
  42cc90:	add	x0, x8, #0x8
  42cc94:	add	x3, x3, #0x7d8
  42cc98:	mov	w2, #0x8                   	// #8
  42cc9c:	bl	439f5c <feof@plt+0x366bc>
  42cca0:	mov	x24, x19
  42cca4:	ldr	x8, [x24, #136]!
  42cca8:	cbz	x8, 42ccb4 <feof@plt+0x29414>
  42ccac:	ldr	w8, [x8, #4]
  42ccb0:	cbnz	w8, 42d9f0 <feof@plt+0x2a150>
  42ccb4:	ldr	x8, [x19, #120]
  42ccb8:	cbz	x8, 42ccd4 <feof@plt+0x29434>
  42ccbc:	ldr	w8, [x8, #4]
  42ccc0:	adds	w8, w8, #0x1
  42ccc4:	b.cc	42cce0 <feof@plt+0x29440>  // b.lo, b.ul, b.last
  42ccc8:	ldr	w20, [x19, #32]
  42cccc:	mov	x21, xzr
  42ccd0:	b	42cd14 <feof@plt+0x29474>
  42ccd4:	mov	w8, #0x1                   	// #1
  42ccd8:	mov	w20, #0x1                   	// #1
  42ccdc:	b	42cce4 <feof@plt+0x29444>
  42cce0:	mov	w20, w8
  42cce4:	lsl	x8, x8, #3
  42cce8:	add	x1, x8, #0x8
  42ccec:	mov	x0, xzr
  42ccf0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  42ccf4:	and	w8, w20, #0x7fffffff
  42ccf8:	stp	w8, wzr, [x0]
  42ccfc:	ldr	w20, [x19, #32]
  42cd00:	mov	x21, x0
  42cd04:	cbz	x0, 42cd14 <feof@plt+0x29474>
  42cd08:	cbz	w8, 42cd20 <feof@plt+0x29480>
  42cd0c:	mov	w23, wzr
  42cd10:	b	42cd54 <feof@plt+0x294b4>
  42cd14:	mov	w23, wzr
  42cd18:	mov	w22, #0x4                   	// #4
  42cd1c:	b	42cd34 <feof@plt+0x29494>
  42cd20:	mov	w1, #0x1                   	// #1
  42cd24:	mov	w0, wzr
  42cd28:	bl	425fbc <feof@plt+0x2271c>
  42cd2c:	ldr	w23, [x21, #4]
  42cd30:	mov	w22, w0
  42cd34:	mov	w8, w22
  42cd38:	lsl	x8, x8, #3
  42cd3c:	add	x1, x8, #0x8
  42cd40:	mov	x0, x21
  42cd44:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  42cd48:	mov	x21, x0
  42cd4c:	and	w8, w22, #0x7fffffff
  42cd50:	stp	w8, w23, [x0]
  42cd54:	mov	w9, w20
  42cd58:	mov	w25, wzr
  42cd5c:	add	w22, w23, #0x1
  42cd60:	add	x8, x21, w23, uxtw #3
  42cd64:	bfi	x9, x9, #32, #32
  42cd68:	str	w22, [x21, #4]
  42cd6c:	str	x9, [x8, #8]
  42cd70:	b	42cd98 <feof@plt+0x294f8>
  42cd74:	mov	x0, x21
  42cd78:	ldr	w8, [x0, #4]
  42cd7c:	bfi	x28, x20, #32, #32
  42cd80:	add	w25, w25, #0x1
  42cd84:	mov	x21, x0
  42cd88:	add	w22, w8, #0x1
  42cd8c:	add	x8, x0, x8, lsl #3
  42cd90:	str	w22, [x0, #4]
  42cd94:	str	x28, [x8, #8]
  42cd98:	ldr	x8, [x19, #120]
  42cd9c:	cbz	x8, 42cdb0 <feof@plt+0x29510>
  42cda0:	ldr	w9, [x8, #4]
  42cda4:	cmp	w25, w9
  42cda8:	b.cc	42cdbc <feof@plt+0x2951c>  // b.lo, b.ul, b.last
  42cdac:	b	42cf08 <feof@plt+0x29668>
  42cdb0:	mov	w9, wzr
  42cdb4:	cmp	w25, w9
  42cdb8:	b.cs	42cf08 <feof@plt+0x29668>  // b.hs, b.nlast
  42cdbc:	mov	w9, #0x28                  	// #40
  42cdc0:	umaddl	x8, w25, w9, x8
  42cdc4:	ldr	w28, [x8, #8]
  42cdc8:	ldr	w20, [x8, #16]
  42cdcc:	cmp	w28, w20
  42cdd0:	b.hi	42d900 <feof@plt+0x2a060>  // b.pmore
  42cdd4:	cbz	x21, 42ce10 <feof@plt+0x29570>
  42cdd8:	ldr	w8, [x21]
  42cddc:	and	w9, w8, #0x7fffffff
  42cde0:	cmp	w9, w22
  42cde4:	b.ne	42cd74 <feof@plt+0x294d4>  // b.any
  42cde8:	add	w1, w22, #0x1
  42cdec:	tbnz	w8, #31, 42ce28 <feof@plt+0x29588>
  42cdf0:	mov	w0, w22
  42cdf4:	bl	425fbc <feof@plt+0x2271c>
  42cdf8:	ldr	w27, [x21, #4]
  42cdfc:	mov	w23, w0
  42ce00:	mov	w22, wzr
  42ce04:	mov	w26, wzr
  42ce08:	mov	x0, x21
  42ce0c:	b	42ce40 <feof@plt+0x295a0>
  42ce10:	mov	w22, wzr
  42ce14:	mov	w26, wzr
  42ce18:	mov	x0, xzr
  42ce1c:	mov	w27, wzr
  42ce20:	mov	w23, #0x4                   	// #4
  42ce24:	b	42ce40 <feof@plt+0x295a0>
  42ce28:	cmp	w1, #0x4
  42ce2c:	mov	w8, #0x4                   	// #4
  42ce30:	mov	x0, xzr
  42ce34:	mov	w27, wzr
  42ce38:	csel	w23, w1, w8, hi  // hi = pmore
  42ce3c:	mov	w26, #0x1                   	// #1
  42ce40:	mov	w8, w23
  42ce44:	lsl	x8, x8, #3
  42ce48:	add	x1, x8, #0x8
  42ce4c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  42ce50:	and	w8, w23, #0x7fffffff
  42ce54:	stp	w8, w27, [x0]
  42ce58:	cbz	w26, 42cd78 <feof@plt+0x294d8>
  42ce5c:	cbz	w22, 42cf00 <feof@plt+0x29660>
  42ce60:	sub	w10, w22, #0x1
  42ce64:	add	x9, x21, #0x8
  42ce68:	cmp	w10, #0x3
  42ce6c:	add	x8, x0, #0x8
  42ce70:	b.cs	42ce7c <feof@plt+0x295dc>  // b.hs, b.nlast
  42ce74:	mov	w10, w22
  42ce78:	b	42cef0 <feof@plt+0x29650>
  42ce7c:	lsl	x11, x10, #3
  42ce80:	add	x12, x21, x11
  42ce84:	add	x12, x12, #0x10
  42ce88:	cmp	x8, x12
  42ce8c:	b.cs	42cea8 <feof@plt+0x29608>  // b.hs, b.nlast
  42ce90:	add	x11, x0, x11
  42ce94:	add	x11, x11, #0x10
  42ce98:	cmp	x11, x9
  42ce9c:	b.ls	42cea8 <feof@plt+0x29608>  // b.plast
  42cea0:	mov	w10, w22
  42cea4:	b	42cef0 <feof@plt+0x29650>
  42cea8:	add	x11, x10, #0x1
  42ceac:	and	x12, x11, #0x1fffffffc
  42ceb0:	lsl	x9, x12, #3
  42ceb4:	add	x14, x21, x9
  42ceb8:	add	x13, x0, #0x18
  42cebc:	sub	w10, w22, w12
  42cec0:	add	x8, x8, x9
  42cec4:	add	x9, x14, #0x8
  42cec8:	add	x14, x21, #0x18
  42cecc:	mov	x15, x12
  42ced0:	ldp	q0, q1, [x14, #-16]
  42ced4:	subs	x15, x15, #0x4
  42ced8:	add	x14, x14, #0x20
  42cedc:	stp	q0, q1, [x13, #-16]
  42cee0:	add	x13, x13, #0x20
  42cee4:	b.ne	42ced0 <feof@plt+0x29630>  // b.any
  42cee8:	cmp	x11, x12
  42ceec:	b.eq	42cf00 <feof@plt+0x29660>  // b.none
  42cef0:	ldr	x11, [x9], #8
  42cef4:	subs	w10, w10, #0x1
  42cef8:	str	x11, [x8], #8
  42cefc:	b.ne	42cef0 <feof@plt+0x29650>  // b.any
  42cf00:	str	w22, [x0, #4]
  42cf04:	b	42cd78 <feof@plt+0x294d8>
  42cf08:	mov	w25, wzr
  42cf0c:	mov	w26, #0x4                   	// #4
  42cf10:	b	42cf34 <feof@plt+0x29694>
  42cf14:	mov	x0, x21
  42cf18:	ldr	w8, [x0, #4]
  42cf1c:	add	w25, w25, #0x1
  42cf20:	mov	x21, x0
  42cf24:	add	w22, w8, #0x1
  42cf28:	add	x8, x0, x8, lsl #3
  42cf2c:	str	w22, [x0, #4]
  42cf30:	str	x20, [x8, #8]
  42cf34:	ldr	x8, [x19, #128]
  42cf38:	cbz	x8, 42cf4c <feof@plt+0x296ac>
  42cf3c:	ldr	w9, [x8, #4]
  42cf40:	cmp	w25, w9
  42cf44:	b.cc	42cf58 <feof@plt+0x296b8>  // b.lo, b.ul, b.last
  42cf48:	b	42d0e0 <feof@plt+0x29840>
  42cf4c:	mov	w9, wzr
  42cf50:	cmp	w25, w9
  42cf54:	b.cs	42d0e0 <feof@plt+0x29840>  // b.hs, b.nlast
  42cf58:	add	x8, x8, w25, uxtw #3
  42cf5c:	ldr	x22, [x8, #8]
  42cf60:	cbz	x22, 42d918 <feof@plt+0x2a078>
  42cf64:	ldr	w0, [x22]
  42cf68:	add	x8, sp, #0x10
  42cf6c:	bl	4377f8 <feof@plt+0x33f58>
  42cf70:	ldr	w20, [sp, #24]
  42cf74:	mov	x0, x22
  42cf78:	bl	4518a0 <feof@plt+0x4e000>
  42cf7c:	ldr	w9, [x22, #4]
  42cf80:	cmp	w20, #0x1
  42cf84:	cset	w8, gt
  42cf88:	and	w8, w8, w0
  42cf8c:	sub	w20, w20, w8
  42cf90:	add	x8, sp, #0x10
  42cf94:	mov	w0, w9
  42cf98:	bl	4377f8 <feof@plt+0x33f58>
  42cf9c:	ldr	w8, [sp, #24]
  42cfa0:	cmp	w20, w8
  42cfa4:	b.hi	42d960 <feof@plt+0x2a0c0>  // b.pmore
  42cfa8:	mov	w20, w20
  42cfac:	bfi	x20, x8, #32, #32
  42cfb0:	cbz	x21, 42cfec <feof@plt+0x2974c>
  42cfb4:	ldp	w8, w9, [x21]
  42cfb8:	and	w22, w8, #0x7fffffff
  42cfbc:	cmp	w22, w9
  42cfc0:	b.ne	42cf14 <feof@plt+0x29674>  // b.any
  42cfc4:	add	w1, w22, #0x1
  42cfc8:	tbnz	w8, #31, 42d004 <feof@plt+0x29764>
  42cfcc:	mov	w0, w22
  42cfd0:	bl	425fbc <feof@plt+0x2271c>
  42cfd4:	ldr	w27, [x21, #4]
  42cfd8:	mov	w23, w0
  42cfdc:	mov	w22, wzr
  42cfe0:	mov	w28, wzr
  42cfe4:	mov	x0, x21
  42cfe8:	b	42d018 <feof@plt+0x29778>
  42cfec:	mov	w22, wzr
  42cff0:	mov	w28, wzr
  42cff4:	mov	x0, xzr
  42cff8:	mov	w27, wzr
  42cffc:	mov	w23, #0x4                   	// #4
  42d000:	b	42d018 <feof@plt+0x29778>
  42d004:	cmp	w22, #0x4
  42d008:	mov	x0, xzr
  42d00c:	mov	w27, wzr
  42d010:	csel	w23, w26, w1, cc  // cc = lo, ul, last
  42d014:	mov	w28, #0x1                   	// #1
  42d018:	mov	w8, w23
  42d01c:	lsl	x8, x8, #3
  42d020:	add	x1, x8, #0x8
  42d024:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  42d028:	and	w8, w23, #0x7fffffff
  42d02c:	stp	w8, w27, [x0]
  42d030:	cbz	w28, 42cf18 <feof@plt+0x29678>
  42d034:	cbz	w22, 42d0d8 <feof@plt+0x29838>
  42d038:	sub	w10, w22, #0x1
  42d03c:	add	x9, x21, #0x8
  42d040:	cmp	w10, #0x3
  42d044:	add	x8, x0, #0x8
  42d048:	b.cs	42d054 <feof@plt+0x297b4>  // b.hs, b.nlast
  42d04c:	mov	w10, w22
  42d050:	b	42d0c8 <feof@plt+0x29828>
  42d054:	lsl	x11, x10, #3
  42d058:	add	x12, x21, x11
  42d05c:	add	x12, x12, #0x10
  42d060:	cmp	x8, x12
  42d064:	b.cs	42d080 <feof@plt+0x297e0>  // b.hs, b.nlast
  42d068:	add	x11, x0, x11
  42d06c:	add	x11, x11, #0x10
  42d070:	cmp	x11, x9
  42d074:	b.ls	42d080 <feof@plt+0x297e0>  // b.plast
  42d078:	mov	w10, w22
  42d07c:	b	42d0c8 <feof@plt+0x29828>
  42d080:	add	x11, x10, #0x1
  42d084:	and	x12, x11, #0x1fffffffc
  42d088:	lsl	x9, x12, #3
  42d08c:	add	x14, x21, x9
  42d090:	add	x13, x0, #0x18
  42d094:	sub	w10, w22, w12
  42d098:	add	x8, x8, x9
  42d09c:	add	x9, x14, #0x8
  42d0a0:	add	x14, x21, #0x18
  42d0a4:	mov	x15, x12
  42d0a8:	ldp	q0, q1, [x14, #-16]
  42d0ac:	subs	x15, x15, #0x4
  42d0b0:	add	x14, x14, #0x20
  42d0b4:	stp	q0, q1, [x13, #-16]
  42d0b8:	add	x13, x13, #0x20
  42d0bc:	b.ne	42d0a8 <feof@plt+0x29808>  // b.any
  42d0c0:	cmp	x11, x12
  42d0c4:	b.eq	42d0d8 <feof@plt+0x29838>  // b.none
  42d0c8:	ldr	x11, [x9], #8
  42d0cc:	subs	w10, w10, #0x1
  42d0d0:	str	x11, [x8], #8
  42d0d4:	b.ne	42d0c8 <feof@plt+0x29828>  // b.any
  42d0d8:	str	w22, [x0, #4]
  42d0dc:	b	42cf18 <feof@plt+0x29678>
  42d0e0:	cbz	x21, 42d9a8 <feof@plt+0x2a108>
  42d0e4:	cmp	w22, #0x2
  42d0e8:	b.cc	42d108 <feof@plt+0x29868>  // b.lo, b.ul, b.last
  42d0ec:	adrp	x3, 42f000 <feof@plt+0x2b760>
  42d0f0:	add	x0, x21, #0x8
  42d0f4:	mov	w1, w22
  42d0f8:	add	x3, x3, #0x7f0
  42d0fc:	mov	w2, #0x8                   	// #8
  42d100:	bl	439f5c <feof@plt+0x366bc>
  42d104:	ldr	w22, [x21, #4]
  42d108:	cbz	w22, 42d9a8 <feof@plt+0x2a108>
  42d10c:	ldr	x23, [x24]
  42d110:	cbz	x23, 42d158 <feof@plt+0x298b8>
  42d114:	ldp	w8, w9, [x23]
  42d118:	and	w0, w8, #0x7fffffff
  42d11c:	cmp	w0, w9
  42d120:	b.ne	42d260 <feof@plt+0x299c0>  // b.any
  42d124:	tbnz	w8, #31, 42d168 <feof@plt+0x298c8>
  42d128:	add	w1, w0, #0x1
  42d12c:	bl	425fbc <feof@plt+0x2271c>
  42d130:	ldr	x8, [x24]
  42d134:	mov	w9, w0
  42d138:	lsl	x9, x9, #3
  42d13c:	mov	w22, w0
  42d140:	add	x1, x9, #0x8
  42d144:	mov	w20, wzr
  42d148:	cbz	x8, 42d8f4 <feof@plt+0x2a054>
  42d14c:	ldr	w26, [x8, #4]
  42d150:	mov	w25, wzr
  42d154:	b	42d198 <feof@plt+0x298f8>
  42d158:	mov	w20, wzr
  42d15c:	mov	w25, wzr
  42d160:	mov	w22, #0x4                   	// #4
  42d164:	b	42d184 <feof@plt+0x298e4>
  42d168:	str	xzr, [x24]
  42d16c:	ldr	w20, [x23, #4]
  42d170:	mov	w8, #0x4                   	// #4
  42d174:	mov	w25, #0x1                   	// #1
  42d178:	add	w9, w20, #0x1
  42d17c:	cmp	w9, #0x4
  42d180:	csinc	w22, w8, w20, ls  // ls = plast
  42d184:	mov	w9, w22
  42d188:	lsl	x9, x9, #3
  42d18c:	mov	x8, xzr
  42d190:	mov	w26, wzr
  42d194:	add	x1, x9, #0x8
  42d198:	mov	x0, x8
  42d19c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  42d1a0:	and	w8, w22, #0x7fffffff
  42d1a4:	str	x0, [x24]
  42d1a8:	stp	w8, w26, [x0]
  42d1ac:	cbz	w25, 42d260 <feof@plt+0x299c0>
  42d1b0:	ldr	x11, [x24]
  42d1b4:	cbz	w20, 42d25c <feof@plt+0x299bc>
  42d1b8:	sub	w12, w20, #0x1
  42d1bc:	add	x8, x23, #0x8
  42d1c0:	cmp	w12, #0x3
  42d1c4:	add	x9, x11, #0x8
  42d1c8:	b.cs	42d1d4 <feof@plt+0x29934>  // b.hs, b.nlast
  42d1cc:	mov	w10, w20
  42d1d0:	b	42d248 <feof@plt+0x299a8>
  42d1d4:	lsl	x10, x12, #3
  42d1d8:	add	x13, x23, x10
  42d1dc:	add	x13, x13, #0x10
  42d1e0:	cmp	x9, x13
  42d1e4:	b.cs	42d1fc <feof@plt+0x2995c>  // b.hs, b.nlast
  42d1e8:	add	x10, x11, x10
  42d1ec:	add	x10, x10, #0x10
  42d1f0:	cmp	x8, x10
  42d1f4:	mov	w10, w20
  42d1f8:	b.cc	42d248 <feof@plt+0x299a8>  // b.lo, b.ul, b.last
  42d1fc:	add	x12, x12, #0x1
  42d200:	and	x13, x12, #0x1fffffffc
  42d204:	lsl	x8, x13, #3
  42d208:	add	x14, x11, #0x18
  42d20c:	add	x9, x23, x8
  42d210:	add	x11, x11, x8
  42d214:	sub	w10, w20, w13
  42d218:	add	x8, x9, #0x8
  42d21c:	add	x9, x11, #0x8
  42d220:	add	x11, x23, #0x18
  42d224:	mov	x15, x13
  42d228:	ldp	q0, q1, [x11, #-16]
  42d22c:	subs	x15, x15, #0x4
  42d230:	add	x11, x11, #0x20
  42d234:	stp	q0, q1, [x14, #-16]
  42d238:	add	x14, x14, #0x20
  42d23c:	b.ne	42d228 <feof@plt+0x29988>  // b.any
  42d240:	cmp	x12, x13
  42d244:	b.eq	42d258 <feof@plt+0x299b8>  // b.none
  42d248:	ldr	x11, [x8], #8
  42d24c:	subs	w10, w10, #0x1
  42d250:	str	x11, [x9], #8
  42d254:	b.ne	42d248 <feof@plt+0x299a8>  // b.any
  42d258:	ldr	x11, [x24]
  42d25c:	str	w20, [x11, #4]
  42d260:	ldr	x8, [x24]
  42d264:	mov	w23, #0x1                   	// #1
  42d268:	ldr	w9, [x8, #4]
  42d26c:	add	w10, w9, #0x1
  42d270:	str	w10, [x8, #4]
  42d274:	ldr	x10, [x21, #8]
  42d278:	add	x8, x8, x9, lsl #3
  42d27c:	str	x10, [x8, #8]
  42d280:	b	42d2ac <feof@plt+0x29a0c>
  42d284:	ldr	x11, [x24]
  42d288:	str	w20, [x11, #4]
  42d28c:	ldr	x8, [x24]
  42d290:	ldr	w9, [x8, #4]
  42d294:	add	w10, w9, #0x1
  42d298:	str	w10, [x8, #4]
  42d29c:	ldr	x10, [x27]
  42d2a0:	add	x8, x8, x9, lsl #3
  42d2a4:	str	x10, [x8, #8]
  42d2a8:	add	w23, w23, #0x1
  42d2ac:	ldr	x26, [x24]
  42d2b0:	ldr	w8, [x21, #4]
  42d2b4:	cbz	x26, 42d2c8 <feof@plt+0x29a28>
  42d2b8:	ldr	w9, [x26, #4]
  42d2bc:	cmp	w23, w8
  42d2c0:	b.cc	42d2d4 <feof@plt+0x29a34>  // b.lo, b.ul, b.last
  42d2c4:	b	42d46c <feof@plt+0x29bcc>
  42d2c8:	mov	w9, wzr
  42d2cc:	cmp	w23, w8
  42d2d0:	b.cs	42d46c <feof@plt+0x29bcc>  // b.hs, b.nlast
  42d2d4:	sub	w8, w9, #0x1
  42d2d8:	add	x27, x21, w23, uxtw #3
  42d2dc:	add	x10, x26, w8, uxtw #3
  42d2e0:	ldr	w9, [x27, #8]!
  42d2e4:	ldr	w10, [x10, #8]
  42d2e8:	cmp	w9, w10
  42d2ec:	b.cc	42d930 <feof@plt+0x2a090>  // b.lo, b.ul, b.last
  42d2f0:	add	x8, x26, x8, lsl #3
  42d2f4:	ldrb	w11, [x19, #114]
  42d2f8:	ldr	w10, [x8, #12]!
  42d2fc:	add	x11, x11, x10
  42d300:	add	x11, x11, #0x1
  42d304:	cmp	x11, x9
  42d308:	b.cs	42d350 <feof@plt+0x29ab0>  // b.hs, b.nlast
  42d30c:	ldp	w8, w9, [x26]
  42d310:	and	w0, w8, #0x7fffffff
  42d314:	cmp	w0, w9
  42d318:	b.ne	42d28c <feof@plt+0x299ec>  // b.any
  42d31c:	tbnz	w8, #31, 42d370 <feof@plt+0x29ad0>
  42d320:	add	w1, w0, #0x1
  42d324:	bl	425fbc <feof@plt+0x2271c>
  42d328:	ldr	x8, [x24]
  42d32c:	mov	w9, w0
  42d330:	lsl	x9, x9, #3
  42d334:	mov	w22, w0
  42d338:	add	x1, x9, #0x8
  42d33c:	mov	w20, wzr
  42d340:	cbz	x8, 42d3a0 <feof@plt+0x29b00>
  42d344:	ldr	w28, [x8, #4]
  42d348:	mov	w25, wzr
  42d34c:	b	42d3a8 <feof@plt+0x29b08>
  42d350:	mov	w9, w23
  42d354:	add	x9, x21, x9, lsl #3
  42d358:	ldr	w9, [x9, #12]
  42d35c:	cmp	w9, w10
  42d360:	b.ls	42d2a8 <feof@plt+0x29a08>  // b.plast
  42d364:	str	w9, [x8]
  42d368:	add	w23, w23, #0x1
  42d36c:	b	42d2ac <feof@plt+0x29a0c>
  42d370:	str	xzr, [x24]
  42d374:	ldr	w20, [x26, #4]
  42d378:	mov	x8, xzr
  42d37c:	mov	w28, wzr
  42d380:	mov	w25, #0x1                   	// #1
  42d384:	add	w9, w20, #0x1
  42d388:	cmp	w9, #0x4
  42d38c:	mov	w9, #0x4                   	// #4
  42d390:	csinc	w22, w9, w20, ls  // ls = plast
  42d394:	lsl	x9, x22, #3
  42d398:	add	x1, x9, #0x8
  42d39c:	b	42d3a8 <feof@plt+0x29b08>
  42d3a0:	mov	w25, wzr
  42d3a4:	mov	w28, wzr
  42d3a8:	mov	x0, x8
  42d3ac:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  42d3b0:	and	w8, w22, #0x7fffffff
  42d3b4:	str	x0, [x24]
  42d3b8:	stp	w8, w28, [x0]
  42d3bc:	cbz	w25, 42d28c <feof@plt+0x299ec>
  42d3c0:	ldr	x11, [x24]
  42d3c4:	cbz	w20, 42d288 <feof@plt+0x299e8>
  42d3c8:	sub	w12, w20, #0x1
  42d3cc:	add	x8, x26, #0x8
  42d3d0:	cmp	w12, #0x3
  42d3d4:	add	x9, x11, #0x8
  42d3d8:	b.cs	42d3e4 <feof@plt+0x29b44>  // b.hs, b.nlast
  42d3dc:	mov	w10, w20
  42d3e0:	b	42d458 <feof@plt+0x29bb8>
  42d3e4:	lsl	x10, x12, #3
  42d3e8:	add	x13, x26, x10
  42d3ec:	add	x13, x13, #0x10
  42d3f0:	cmp	x13, x9
  42d3f4:	b.ls	42d40c <feof@plt+0x29b6c>  // b.plast
  42d3f8:	add	x10, x11, x10
  42d3fc:	add	x10, x10, #0x10
  42d400:	cmp	x10, x8
  42d404:	mov	w10, w20
  42d408:	b.hi	42d458 <feof@plt+0x29bb8>  // b.pmore
  42d40c:	add	x12, x12, #0x1
  42d410:	and	x13, x12, #0x1fffffffc
  42d414:	lsl	x8, x13, #3
  42d418:	add	x14, x11, #0x18
  42d41c:	add	x9, x26, x8
  42d420:	add	x11, x11, x8
  42d424:	sub	w10, w20, w13
  42d428:	add	x8, x9, #0x8
  42d42c:	add	x9, x11, #0x8
  42d430:	add	x11, x26, #0x18
  42d434:	mov	x15, x13
  42d438:	ldp	q0, q1, [x11, #-16]
  42d43c:	subs	x15, x15, #0x4
  42d440:	add	x11, x11, #0x20
  42d444:	stp	q0, q1, [x14, #-16]
  42d448:	add	x14, x14, #0x20
  42d44c:	b.ne	42d438 <feof@plt+0x29b98>  // b.any
  42d450:	cmp	x12, x13
  42d454:	b.eq	42d284 <feof@plt+0x299e4>  // b.none
  42d458:	ldr	x11, [x8], #8
  42d45c:	subs	w10, w10, #0x1
  42d460:	str	x11, [x9], #8
  42d464:	b.ne	42d458 <feof@plt+0x29bb8>  // b.any
  42d468:	b	42d284 <feof@plt+0x299e4>
  42d46c:	cbz	w9, 42d9d8 <feof@plt+0x2a138>
  42d470:	mov	x8, xzr
  42d474:	add	x9, x26, #0x14
  42d478:	add	x10, x8, #0x1
  42d47c:	cbz	x26, 42d490 <feof@plt+0x29bf0>
  42d480:	ldr	w11, [x26, #4]
  42d484:	cmp	x10, w11, uxtw
  42d488:	b.cc	42d49c <feof@plt+0x29bfc>  // b.lo, b.ul, b.last
  42d48c:	b	42d4ec <feof@plt+0x29c4c>
  42d490:	mov	w11, wzr
  42d494:	cmp	x10, w11, uxtw
  42d498:	b.cs	42d4ec <feof@plt+0x29c4c>  // b.hs, b.nlast
  42d49c:	add	x10, x26, w8, uxtw #3
  42d4a0:	ldp	w12, w10, [x10, #8]
  42d4a4:	cmp	w12, w10
  42d4a8:	b.hi	42d948 <feof@plt+0x2a0a8>  // b.pmore
  42d4ac:	ldp	w11, w13, [x9, #-4]
  42d4b0:	cmp	w11, w13
  42d4b4:	b.hi	42d978 <feof@plt+0x2a0d8>  // b.pmore
  42d4b8:	cmp	w12, w11
  42d4bc:	b.cs	42d990 <feof@plt+0x2a0f0>  // b.hs, b.nlast
  42d4c0:	add	w10, w10, #0x1
  42d4c4:	add	x9, x9, #0x8
  42d4c8:	cmp	w10, w11
  42d4cc:	add	x8, x8, #0x1
  42d4d0:	b.cc	42d478 <feof@plt+0x29bd8>  // b.lo, b.ul, b.last
  42d4d4:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d4d8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d4dc:	add	x0, x0, #0x67
  42d4e0:	add	x2, x2, #0x90
  42d4e4:	mov	w1, #0x4d8                 	// #1240
  42d4e8:	bl	429434 <feof@plt+0x25b94>
  42d4ec:	ldr	w8, [x21]
  42d4f0:	tbnz	w8, #31, 42d500 <feof@plt+0x29c60>
  42d4f4:	mov	x0, x21
  42d4f8:	bl	4031d0 <free@plt>
  42d4fc:	b	42d504 <feof@plt+0x29c64>
  42d500:	str	wzr, [x21, #4]
  42d504:	ldr	x8, [x19, #136]
  42d508:	ldr	x21, [sp, #8]
  42d50c:	cbz	x8, 42d9c0 <feof@plt+0x2a120>
  42d510:	ldr	w9, [x8, #4]
  42d514:	cbz	w9, 42d9c0 <feof@plt+0x2a120>
  42d518:	sub	w9, w9, #0x1
  42d51c:	add	x8, x8, w9, uxtw #3
  42d520:	ldr	w8, [x8, #12]
  42d524:	bic	w0, w8, w8, asr #31
  42d528:	bl	42a584 <feof@plt+0x26ce4>
  42d52c:	ldr	x8, [x19, #136]
  42d530:	str	w0, [x19, #144]
  42d534:	cbz	x8, 42d554 <feof@plt+0x29cb4>
  42d538:	ldr	w8, [x8, #4]
  42d53c:	cmp	w8, #0x2
  42d540:	b.cc	42d554 <feof@plt+0x29cb4>  // b.lo, b.ul, b.last
  42d544:	cmp	w0, #0x3
  42d548:	mov	w8, #0x3                   	// #3
  42d54c:	csel	w0, w0, w8, gt
  42d550:	str	w0, [x19, #144]
  42d554:	ldr	w9, [x21, #224]
  42d558:	ldr	x10, [x19]
  42d55c:	ldr	x8, [x19, #24]
  42d560:	ldr	w1, [x19, #32]
  42d564:	sub	w11, w9, #0x1
  42d568:	cmp	w0, w9
  42d56c:	csel	w9, w11, w0, lt  // lt = tstop
  42d570:	str	w9, [x19, #144]
  42d574:	ldrsw	x20, [x10, #112]
  42d578:	mov	x0, x8
  42d57c:	bl	437438 <feof@plt+0x33b98>
  42d580:	cbz	x0, 42d5dc <feof@plt+0x29d3c>
  42d584:	ldrsw	x8, [x19, #36]
  42d588:	cmp	x1, x8
  42d58c:	b.cc	42d5dc <feof@plt+0x29d3c>  // b.lo, b.ul, b.last
  42d590:	ldrb	w9, [x19, #114]
  42d594:	cbz	w9, 42d5a4 <feof@plt+0x29d04>
  42d598:	ldrsw	x9, [x19, #144]
  42d59c:	add	x8, x9, x8
  42d5a0:	add	x8, x8, #0x2
  42d5a4:	sub	x9, x1, x8
  42d5a8:	mov	w10, #0xa                   	// #10
  42d5ac:	cmp	x9, #0xa
  42d5b0:	csel	x9, x9, x10, cc  // cc = lo, ul, last
  42d5b4:	cmp	x1, x20
  42d5b8:	b.cc	42d5d4 <feof@plt+0x29d34>  // b.lo, b.ul, b.last
  42d5bc:	sub	x9, x20, x9
  42d5c0:	cmp	x8, x9
  42d5c4:	b.ls	42d5d4 <feof@plt+0x29d34>  // b.plast
  42d5c8:	sub	w8, w8, w9
  42d5cc:	str	w8, [x19, #148]
  42d5d0:	b	42d5d8 <feof@plt+0x29d38>
  42d5d4:	ldr	w8, [x19, #148]
  42d5d8:	tbnz	w8, #31, 42da08 <feof@plt+0x2a168>
  42d5dc:	ldrb	w8, [x21, #228]
  42d5e0:	cbz	w8, 42d8d4 <feof@plt+0x2a034>
  42d5e4:	ldr	w8, [x19, #148]
  42d5e8:	add	w20, w8, w20
  42d5ec:	cmp	w20, #0x64
  42d5f0:	b.lt	42d704 <feof@plt+0x29e64>  // b.tstop
  42d5f4:	ldrb	w8, [x19, #114]
  42d5f8:	cbz	w8, 42d668 <feof@plt+0x29dc8>
  42d5fc:	ldr	w8, [x19, #144]
  42d600:	cmp	w8, #0x4
  42d604:	b.lt	42d630 <feof@plt+0x29d90>  // b.tstop
  42d608:	mov	w21, wzr
  42d60c:	ldr	x0, [x19, #8]
  42d610:	mov	w1, #0x20                  	// #32
  42d614:	bl	433718 <feof@plt+0x2fe78>
  42d618:	ldr	w8, [x19, #144]
  42d61c:	add	w21, w21, #0x1
  42d620:	sub	w9, w8, #0x3
  42d624:	cmp	w21, w9
  42d628:	b.lt	42d60c <feof@plt+0x29d6c>  // b.tstop
  42d62c:	b	42d634 <feof@plt+0x29d94>
  42d630:	mov	w21, wzr
  42d634:	ldr	x0, [x19, #8]
  42d638:	cmp	w21, w8
  42d63c:	b.ge	42d65c <feof@plt+0x29dbc>  // b.tcont
  42d640:	mov	w1, #0x20                  	// #32
  42d644:	bl	433718 <feof@plt+0x2fe78>
  42d648:	ldr	w8, [x19, #144]
  42d64c:	ldr	x0, [x19, #8]
  42d650:	add	w21, w21, #0x1
  42d654:	cmp	w21, w8
  42d658:	b.lt	42d640 <feof@plt+0x29da0>  // b.tstop
  42d65c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  42d660:	add	x1, x1, #0x56c
  42d664:	bl	4354fc <feof@plt+0x31c5c>
  42d668:	ldr	x0, [x19, #8]
  42d66c:	mov	w1, #0x20                  	// #32
  42d670:	bl	433718 <feof@plt+0x2fe78>
  42d674:	ldr	w21, [x19, #148]
  42d678:	cmp	w21, w20
  42d67c:	b.ge	42d6fc <feof@plt+0x29e5c>  // b.tcont
  42d680:	mov	w22, #0xcccd                	// #52429
  42d684:	mov	w23, #0x9998                	// #39320
  42d688:	mov	w24, #0x851f                	// #34079
  42d68c:	mov	w25, #0x6667                	// #26215
  42d690:	movk	w22, #0xcccc, lsl #16
  42d694:	movk	w23, #0x1999, lsl #16
  42d698:	movk	w24, #0x51eb, lsl #16
  42d69c:	movk	w25, #0x6666, lsl #16
  42d6a0:	mov	w26, #0xa                   	// #10
  42d6a4:	b	42d6b8 <feof@plt+0x29e18>
  42d6a8:	mov	w1, #0x20                  	// #32
  42d6ac:	bl	433718 <feof@plt+0x2fe78>
  42d6b0:	cmp	w20, w21
  42d6b4:	b.eq	42d6fc <feof@plt+0x29e5c>  // b.none
  42d6b8:	add	w21, w21, #0x1
  42d6bc:	ldr	x0, [x19, #8]
  42d6c0:	madd	w8, w21, w22, w23
  42d6c4:	ror	w8, w8, #1
  42d6c8:	cmp	w8, w23
  42d6cc:	b.hi	42d6a8 <feof@plt+0x29e08>  // b.pmore
  42d6d0:	smull	x8, w21, w24
  42d6d4:	lsr	x9, x8, #63
  42d6d8:	asr	x8, x8, #37
  42d6dc:	add	w8, w8, w9
  42d6e0:	smull	x9, w8, w25
  42d6e4:	lsr	x10, x9, #63
  42d6e8:	asr	x9, x9, #34
  42d6ec:	add	w9, w9, w10
  42d6f0:	msub	w8, w9, w26, w8
  42d6f4:	add	w1, w8, #0x30
  42d6f8:	b	42d6ac <feof@plt+0x29e0c>
  42d6fc:	ldr	x0, [x19, #8]
  42d700:	bl	435e80 <feof@plt+0x325e0>
  42d704:	ldrb	w8, [x19, #114]
  42d708:	cbz	w8, 42d778 <feof@plt+0x29ed8>
  42d70c:	ldr	w8, [x19, #144]
  42d710:	cmp	w8, #0x4
  42d714:	b.lt	42d740 <feof@plt+0x29ea0>  // b.tstop
  42d718:	mov	w21, wzr
  42d71c:	ldr	x0, [x19, #8]
  42d720:	mov	w1, #0x20                  	// #32
  42d724:	bl	433718 <feof@plt+0x2fe78>
  42d728:	ldr	w8, [x19, #144]
  42d72c:	add	w21, w21, #0x1
  42d730:	sub	w9, w8, #0x3
  42d734:	cmp	w21, w9
  42d738:	b.lt	42d71c <feof@plt+0x29e7c>  // b.tstop
  42d73c:	b	42d744 <feof@plt+0x29ea4>
  42d740:	mov	w21, wzr
  42d744:	ldr	x0, [x19, #8]
  42d748:	cmp	w21, w8
  42d74c:	b.ge	42d76c <feof@plt+0x29ecc>  // b.tcont
  42d750:	mov	w1, #0x20                  	// #32
  42d754:	bl	433718 <feof@plt+0x2fe78>
  42d758:	ldr	w8, [x19, #144]
  42d75c:	ldr	x0, [x19, #8]
  42d760:	add	w21, w21, #0x1
  42d764:	cmp	w21, w8
  42d768:	b.lt	42d750 <feof@plt+0x29eb0>  // b.tstop
  42d76c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  42d770:	add	x1, x1, #0x56c
  42d774:	bl	4354fc <feof@plt+0x31c5c>
  42d778:	ldr	x0, [x19, #8]
  42d77c:	mov	w1, #0x20                  	// #32
  42d780:	bl	433718 <feof@plt+0x2fe78>
  42d784:	ldr	w8, [x19, #148]
  42d788:	cmp	w8, w20
  42d78c:	b.ge	42d800 <feof@plt+0x29f60>  // b.tcont
  42d790:	mov	w23, #0x6667                	// #26215
  42d794:	add	w21, w8, #0x1
  42d798:	neg	w22, w20
  42d79c:	movk	w23, #0x6666, lsl #16
  42d7a0:	mov	w24, #0xa                   	// #10
  42d7a4:	b	42d7d4 <feof@plt+0x29f34>
  42d7a8:	smull	x9, w8, w23
  42d7ac:	lsr	x10, x9, #63
  42d7b0:	asr	x9, x9, #34
  42d7b4:	add	w9, w9, w10
  42d7b8:	msub	w8, w9, w24, w8
  42d7bc:	add	w1, w8, #0x30
  42d7c0:	bl	433718 <feof@plt+0x2fe78>
  42d7c4:	add	w21, w21, #0x1
  42d7c8:	add	w8, w22, w21
  42d7cc:	cmp	w8, #0x1
  42d7d0:	b.eq	42d800 <feof@plt+0x29f60>  // b.none
  42d7d4:	smull	x8, w21, w23
  42d7d8:	lsr	x9, x8, #63
  42d7dc:	asr	x8, x8, #34
  42d7e0:	add	w8, w8, w9
  42d7e4:	ldr	x0, [x19, #8]
  42d7e8:	add	w9, w8, w8, lsl #2
  42d7ec:	lsl	w9, w9, #1
  42d7f0:	cmp	w9, w21
  42d7f4:	b.eq	42d7a8 <feof@plt+0x29f08>  // b.none
  42d7f8:	mov	w1, #0x20                  	// #32
  42d7fc:	b	42d7c0 <feof@plt+0x29f20>
  42d800:	ldr	x0, [x19, #8]
  42d804:	bl	435e80 <feof@plt+0x325e0>
  42d808:	ldrb	w8, [x19, #114]
  42d80c:	cbz	w8, 42d87c <feof@plt+0x29fdc>
  42d810:	ldr	w8, [x19, #144]
  42d814:	cmp	w8, #0x4
  42d818:	b.lt	42d844 <feof@plt+0x29fa4>  // b.tstop
  42d81c:	mov	w21, wzr
  42d820:	ldr	x0, [x19, #8]
  42d824:	mov	w1, #0x20                  	// #32
  42d828:	bl	433718 <feof@plt+0x2fe78>
  42d82c:	ldr	w8, [x19, #144]
  42d830:	add	w21, w21, #0x1
  42d834:	sub	w9, w8, #0x3
  42d838:	cmp	w21, w9
  42d83c:	b.lt	42d820 <feof@plt+0x29f80>  // b.tstop
  42d840:	b	42d848 <feof@plt+0x29fa8>
  42d844:	mov	w21, wzr
  42d848:	ldr	x0, [x19, #8]
  42d84c:	cmp	w21, w8
  42d850:	b.ge	42d870 <feof@plt+0x29fd0>  // b.tcont
  42d854:	mov	w1, #0x20                  	// #32
  42d858:	bl	433718 <feof@plt+0x2fe78>
  42d85c:	ldr	w8, [x19, #144]
  42d860:	ldr	x0, [x19, #8]
  42d864:	add	w21, w21, #0x1
  42d868:	cmp	w21, w8
  42d86c:	b.lt	42d854 <feof@plt+0x29fb4>  // b.tstop
  42d870:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  42d874:	add	x1, x1, #0x56c
  42d878:	bl	4354fc <feof@plt+0x31c5c>
  42d87c:	ldr	x0, [x19, #8]
  42d880:	mov	w1, #0x20                  	// #32
  42d884:	bl	433718 <feof@plt+0x2fe78>
  42d888:	ldr	w21, [x19, #148]
  42d88c:	ldr	x0, [x19, #8]
  42d890:	cmp	w21, w20
  42d894:	b.ge	42d8d0 <feof@plt+0x2a030>  // b.tcont
  42d898:	mov	w22, #0x6667                	// #26215
  42d89c:	movk	w22, #0x6666, lsl #16
  42d8a0:	mov	w23, #0xa                   	// #10
  42d8a4:	add	w21, w21, #0x1
  42d8a8:	smull	x8, w21, w22
  42d8ac:	lsr	x9, x8, #63
  42d8b0:	asr	x8, x8, #34
  42d8b4:	add	w8, w8, w9
  42d8b8:	msub	w8, w8, w23, w21
  42d8bc:	add	w1, w8, #0x30
  42d8c0:	bl	433718 <feof@plt+0x2fe78>
  42d8c4:	ldr	x0, [x19, #8]
  42d8c8:	cmp	w20, w21
  42d8cc:	b.ne	42d8a4 <feof@plt+0x2a004>  // b.any
  42d8d0:	bl	435e80 <feof@plt+0x325e0>
  42d8d4:	ldp	x20, x19, [sp, #128]
  42d8d8:	ldp	x22, x21, [sp, #112]
  42d8dc:	ldp	x24, x23, [sp, #96]
  42d8e0:	ldp	x26, x25, [sp, #80]
  42d8e4:	ldp	x28, x27, [sp, #64]
  42d8e8:	ldp	x29, x30, [sp, #48]
  42d8ec:	add	sp, sp, #0x90
  42d8f0:	ret
  42d8f4:	mov	w25, wzr
  42d8f8:	mov	w26, wzr
  42d8fc:	b	42d198 <feof@plt+0x298f8>
  42d900:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d904:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d908:	add	x0, x0, #0x67
  42d90c:	add	x2, x2, #0x90
  42d910:	mov	w1, #0x4a4                 	// #1188
  42d914:	bl	429434 <feof@plt+0x25b94>
  42d918:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d91c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d920:	add	x0, x0, #0x67
  42d924:	add	x2, x2, #0x90
  42d928:	mov	w1, #0x4ad                 	// #1197
  42d92c:	bl	429434 <feof@plt+0x25b94>
  42d930:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d934:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d938:	add	x0, x0, #0x67
  42d93c:	add	x2, x2, #0x90
  42d940:	mov	w1, #0x4bc                 	// #1212
  42d944:	bl	429434 <feof@plt+0x25b94>
  42d948:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d94c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d950:	add	x0, x0, #0x67
  42d954:	add	x2, x2, #0x90
  42d958:	mov	w1, #0x4d3                 	// #1235
  42d95c:	bl	429434 <feof@plt+0x25b94>
  42d960:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d964:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d968:	add	x0, x0, #0x67
  42d96c:	add	x2, x2, #0xa5
  42d970:	mov	w1, #0xa5                  	// #165
  42d974:	bl	429434 <feof@plt+0x25b94>
  42d978:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d97c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d980:	add	x0, x0, #0x67
  42d984:	add	x2, x2, #0x90
  42d988:	mov	w1, #0x4d4                 	// #1236
  42d98c:	bl	429434 <feof@plt+0x25b94>
  42d990:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d994:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d998:	add	x0, x0, #0x67
  42d99c:	add	x2, x2, #0x90
  42d9a0:	mov	w1, #0x4d6                 	// #1238
  42d9a4:	bl	429434 <feof@plt+0x25b94>
  42d9a8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d9ac:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d9b0:	add	x0, x0, #0x67
  42d9b4:	add	x2, x2, #0x90
  42d9b8:	mov	w1, #0x4b6                 	// #1206
  42d9bc:	bl	429434 <feof@plt+0x25b94>
  42d9c0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d9c4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d9c8:	add	x0, x0, #0x67
  42d9cc:	add	x2, x2, #0x89
  42d9d0:	mov	w1, #0x36a                 	// #874
  42d9d4:	bl	429434 <feof@plt+0x25b94>
  42d9d8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d9dc:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d9e0:	add	x0, x0, #0x67
  42d9e4:	add	x2, x2, #0x90
  42d9e8:	mov	w1, #0x4cd                 	// #1229
  42d9ec:	bl	429434 <feof@plt+0x25b94>
  42d9f0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d9f4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42d9f8:	add	x0, x0, #0x67
  42d9fc:	add	x2, x2, #0x90
  42da00:	mov	w1, #0x49b                 	// #1179
  42da04:	bl	429434 <feof@plt+0x25b94>
  42da08:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42da0c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42da10:	add	x0, x0, #0x67
  42da14:	add	x2, x2, #0x89
  42da18:	mov	w1, #0x386                 	// #902
  42da1c:	bl	429434 <feof@plt+0x25b94>
  42da20:	sub	sp, sp, #0xf0
  42da24:	stp	x29, x30, [sp, #144]
  42da28:	stp	x28, x27, [sp, #160]
  42da2c:	stp	x26, x25, [sp, #176]
  42da30:	stp	x24, x23, [sp, #192]
  42da34:	stp	x22, x21, [sp, #208]
  42da38:	stp	x20, x19, [sp, #224]
  42da3c:	add	x29, sp, #0x90
  42da40:	cbz	x1, 42de10 <feof@plt+0x2a570>
  42da44:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42da48:	mov	x21, x1
  42da4c:	mov	x20, x0
  42da50:	ldr	x0, [x8, #408]
  42da54:	ldr	w1, [x1]
  42da58:	mov	w22, w3
  42da5c:	mov	w19, w2
  42da60:	bl	44e40c <feof@plt+0x4ab6c>
  42da64:	sub	x8, x29, #0x20
  42da68:	mov	w1, #0x1                   	// #1
  42da6c:	mov	x24, x0
  42da70:	lsr	x23, x0, #32
  42da74:	bl	43799c <feof@plt+0x340fc>
  42da78:	sub	x8, x29, #0x40
  42da7c:	mov	w1, #0x2                   	// #2
  42da80:	mov	w0, w23
  42da84:	bl	43799c <feof@plt+0x340fc>
  42da88:	ldr	w0, [x21]
  42da8c:	add	x8, sp, #0x30
  42da90:	mov	w1, wzr
  42da94:	bl	43799c <feof@plt+0x340fc>
  42da98:	ldur	x8, [x29, #-32]
  42da9c:	ldr	x9, [x20, #24]
  42daa0:	mov	w0, wzr
  42daa4:	cmp	x8, x9
  42daa8:	b.ne	42dabc <feof@plt+0x2a21c>  // b.any
  42daac:	ldur	x9, [x29, #-64]
  42dab0:	cmp	x9, x8
  42dab4:	b.eq	42dadc <feof@plt+0x2a23c>  // b.none
  42dab8:	mov	w0, wzr
  42dabc:	ldp	x20, x19, [sp, #224]
  42dac0:	ldp	x22, x21, [sp, #208]
  42dac4:	ldp	x24, x23, [sp, #192]
  42dac8:	ldp	x26, x25, [sp, #176]
  42dacc:	ldp	x28, x27, [sp, #160]
  42dad0:	ldp	x29, x30, [sp, #144]
  42dad4:	add	sp, sp, #0xf0
  42dad8:	ret
  42dadc:	ldr	w10, [x21, #4]
  42dae0:	cbz	w10, 42dbac <feof@plt+0x2a30c>
  42dae4:	ldr	x8, [x20, #120]
  42dae8:	cbz	x8, 42db0c <feof@plt+0x2a26c>
  42daec:	ldr	w8, [x8, #4]
  42daf0:	cbz	w8, 42db0c <feof@plt+0x2a26c>
  42daf4:	cbnz	w10, 42db0c <feof@plt+0x2a26c>
  42daf8:	ldr	w0, [x21]
  42dafc:	ldr	w1, [x20, #16]
  42db00:	bl	42f834 <feof@plt+0x2bf94>
  42db04:	tbz	w0, #0, 42dab8 <feof@plt+0x2a218>
  42db08:	ldr	w10, [x21, #4]
  42db0c:	ldr	x8, [x21, #8]
  42db10:	ldur	w9, [x29, #-24]
  42db14:	ldp	w16, w14, [sp, #56]
  42db18:	str	w10, [sp, #36]
  42db1c:	str	x8, [sp, #40]
  42db20:	ldur	w8, [x29, #-56]
  42db24:	cmp	w9, w8
  42db28:	b.gt	42db88 <feof@plt+0x2a2e8>
  42db2c:	mov	w26, w8
  42db30:	ldur	w8, [x29, #-20]
  42db34:	ldr	w1, [x20, #16]
  42db38:	ldur	w28, [x29, #-52]
  42db3c:	mov	w0, w24
  42db40:	mov	w27, w9
  42db44:	str	x8, [sp, #24]
  42db48:	mov	x24, x14
  42db4c:	mov	x25, x16
  42db50:	bl	42f834 <feof@plt+0x2bf94>
  42db54:	mov	x16, x25
  42db58:	mov	x14, x24
  42db5c:	tbz	w0, #0, 42db88 <feof@plt+0x2a2e8>
  42db60:	ldr	w1, [x20, #16]
  42db64:	mov	w0, w23
  42db68:	bl	42f834 <feof@plt+0x2bf94>
  42db6c:	mov	x16, x25
  42db70:	mov	x14, x24
  42db74:	tbz	w0, #0, 42db88 <feof@plt+0x2a2e8>
  42db78:	mov	x15, x28
  42db7c:	ldr	x28, [sp, #24]
  42db80:	mov	w25, w27
  42db84:	b	42dbcc <feof@plt+0x2a32c>
  42db88:	ldr	x8, [x20, #120]
  42db8c:	cbz	x8, 42dbbc <feof@plt+0x2a31c>
  42db90:	ldr	w8, [x8, #4]
  42db94:	mov	w26, w16
  42db98:	mov	w15, w14
  42db9c:	mov	w25, w16
  42dba0:	mov	w28, w14
  42dba4:	cbnz	w8, 42dab8 <feof@plt+0x2a218>
  42dba8:	b	42dbcc <feof@plt+0x2a32c>
  42dbac:	ldr	x9, [sp, #48]
  42dbb0:	cmp	x9, x8
  42dbb4:	b.ne	42dab8 <feof@plt+0x2a218>  // b.any
  42dbb8:	b	42dae4 <feof@plt+0x2a244>
  42dbbc:	mov	w26, w16
  42dbc0:	mov	w15, w14
  42dbc4:	mov	w25, w16
  42dbc8:	mov	w28, w14
  42dbcc:	tbz	w22, #0, 42dc74 <feof@plt+0x2a3d4>
  42dbd0:	ldr	x8, [x20, #136]
  42dbd4:	ldur	w10, [x29, #-24]
  42dbd8:	mov	x9, xzr
  42dbdc:	add	x11, x8, #0xc
  42dbe0:	b	42dbec <feof@plt+0x2a34c>
  42dbe4:	add	x9, x9, #0x1
  42dbe8:	add	x11, x11, #0x8
  42dbec:	cbz	x8, 42dc00 <feof@plt+0x2a360>
  42dbf0:	ldr	w12, [x8, #4]
  42dbf4:	cmp	x9, w12, sxtw
  42dbf8:	b.lt	42dc0c <feof@plt+0x2a36c>  // b.tstop
  42dbfc:	b	42dab8 <feof@plt+0x2a218>
  42dc00:	mov	w12, wzr
  42dc04:	cmp	x9, w12, sxtw
  42dc08:	b.ge	42dab8 <feof@plt+0x2a218>  // b.tcont
  42dc0c:	ldur	w12, [x11, #-4]
  42dc10:	cmp	w12, w10
  42dc14:	b.hi	42dbe4 <feof@plt+0x2a344>  // b.pmore
  42dc18:	ldr	w12, [x11]
  42dc1c:	cmp	w12, w10
  42dc20:	b.cc	42dbe4 <feof@plt+0x2a344>  // b.lo, b.ul, b.last
  42dc24:	ldrsw	x9, [x8, #4]
  42dc28:	cmp	w9, #0x1
  42dc2c:	b.lt	42dab8 <feof@plt+0x2a218>  // b.tstop
  42dc30:	ldur	w11, [x29, #-56]
  42dc34:	mov	x10, xzr
  42dc38:	add	x12, x8, #0xc
  42dc3c:	b	42dc54 <feof@plt+0x2a3b4>
  42dc40:	add	x10, x10, #0x1
  42dc44:	mov	w0, wzr
  42dc48:	cmp	x10, x9
  42dc4c:	add	x12, x12, #0x8
  42dc50:	b.ge	42dabc <feof@plt+0x2a21c>  // b.tcont
  42dc54:	ldur	w13, [x12, #-4]
  42dc58:	cmp	w13, w11
  42dc5c:	b.hi	42dc40 <feof@plt+0x2a3a0>  // b.pmore
  42dc60:	ldr	w13, [x12]
  42dc64:	cmp	w13, w11
  42dc68:	b.cc	42dc40 <feof@plt+0x2a3a0>  // b.lo, b.ul, b.last
  42dc6c:	ldr	w10, [x21, #4]
  42dc70:	cbz	w10, 42ddd0 <feof@plt+0x2a530>
  42dc74:	ldr	x22, [x20, #120]
  42dc78:	cbz	x22, 42dcc8 <feof@plt+0x2a428>
  42dc7c:	ldp	w8, w9, [x22]
  42dc80:	and	w0, w8, #0x7fffffff
  42dc84:	cmp	w0, w9
  42dc88:	b.ne	42dd70 <feof@plt+0x2a4d0>  // b.any
  42dc8c:	mov	x27, x16
  42dc90:	stp	x14, x15, [sp, #16]
  42dc94:	tbnz	w8, #31, 42dce0 <feof@plt+0x2a440>
  42dc98:	add	w1, w0, #0x1
  42dc9c:	bl	425fbc <feof@plt+0x2271c>
  42dca0:	mov	w21, w0
  42dca4:	ldr	x0, [x20, #120]
  42dca8:	mov	w8, #0x28                  	// #40
  42dcac:	umull	x8, w21, w8
  42dcb0:	add	x1, x8, #0x8
  42dcb4:	cbz	x0, 42ddc0 <feof@plt+0x2a520>
  42dcb8:	ldr	w23, [x0, #4]
  42dcbc:	mov	w24, wzr
  42dcc0:	str	wzr, [sp, #12]
  42dcc4:	b	42dd14 <feof@plt+0x2a474>
  42dcc8:	mov	x27, x16
  42dccc:	stp	x14, x15, [sp, #16]
  42dcd0:	str	wzr, [sp, #12]
  42dcd4:	mov	w24, wzr
  42dcd8:	mov	w21, #0x4                   	// #4
  42dcdc:	b	42dd00 <feof@plt+0x2a460>
  42dce0:	str	xzr, [x20, #120]
  42dce4:	ldr	w10, [x22, #4]
  42dce8:	mov	w8, #0x4                   	// #4
  42dcec:	mov	w24, #0x1                   	// #1
  42dcf0:	add	w9, w10, #0x1
  42dcf4:	cmp	w9, #0x4
  42dcf8:	csinc	w21, w8, w10, ls  // ls = plast
  42dcfc:	str	w10, [sp, #12]
  42dd00:	mov	w8, #0x28                  	// #40
  42dd04:	umull	x8, w21, w8
  42dd08:	mov	x0, xzr
  42dd0c:	mov	w23, wzr
  42dd10:	add	x1, x8, #0x8
  42dd14:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  42dd18:	and	w8, w21, #0x7fffffff
  42dd1c:	str	x0, [x20, #120]
  42dd20:	stp	w8, w23, [x0]
  42dd24:	ldp	x14, x15, [sp, #16]
  42dd28:	mov	x16, x27
  42dd2c:	cbz	w24, 42dd70 <feof@plt+0x2a4d0>
  42dd30:	ldr	x9, [x20, #120]
  42dd34:	ldr	w12, [sp, #12]
  42dd38:	cbz	w12, 42dd6c <feof@plt+0x2a4cc>
  42dd3c:	add	x8, x22, #0x8
  42dd40:	add	x9, x9, #0x8
  42dd44:	mov	w10, w12
  42dd48:	ldr	x11, [x8, #32]
  42dd4c:	ldp	q1, q0, [x8]
  42dd50:	subs	w10, w10, #0x1
  42dd54:	add	x8, x8, #0x28
  42dd58:	str	x11, [x9, #32]
  42dd5c:	stp	q1, q0, [x9]
  42dd60:	add	x9, x9, #0x28
  42dd64:	b.ne	42dd48 <feof@plt+0x2a4a8>  // b.any
  42dd68:	ldr	x9, [x20, #120]
  42dd6c:	str	w12, [x9, #4]
  42dd70:	ldr	x8, [x20, #120]
  42dd74:	mov	w9, #0x28                  	// #40
  42dd78:	mov	w10, w25
  42dd7c:	mov	w11, w26
  42dd80:	ldr	w12, [x8, #4]
  42dd84:	bfi	x10, x28, #32, #32
  42dd88:	bfi	x11, x15, #32, #32
  42dd8c:	bfi	x16, x14, #32, #32
  42dd90:	add	w13, w12, #0x1
  42dd94:	madd	x9, x12, x9, x8
  42dd98:	str	w13, [x8, #4]
  42dd9c:	stp	x10, x11, [x9, #8]
  42dda0:	ldr	w8, [sp, #36]
  42dda4:	mov	w0, #0x1                   	// #1
  42dda8:	stur	x16, [x9, #28]
  42ddac:	str	w19, [x9, #36]
  42ddb0:	str	w8, [x9, #24]
  42ddb4:	ldr	x8, [sp, #40]
  42ddb8:	str	x8, [x9, #40]
  42ddbc:	b	42dabc <feof@plt+0x2a21c>
  42ddc0:	str	wzr, [sp, #12]
  42ddc4:	mov	w24, wzr
  42ddc8:	mov	w23, wzr
  42ddcc:	b	42dd14 <feof@plt+0x2a474>
  42ddd0:	ldr	w11, [sp, #56]
  42ddd4:	mov	x10, xzr
  42ddd8:	add	x8, x8, #0xc
  42dddc:	b	42ddf4 <feof@plt+0x2a554>
  42dde0:	add	x10, x10, #0x1
  42dde4:	mov	w0, wzr
  42dde8:	cmp	x10, x9
  42ddec:	add	x8, x8, #0x8
  42ddf0:	b.ge	42dabc <feof@plt+0x2a21c>  // b.tcont
  42ddf4:	ldur	w12, [x8, #-4]
  42ddf8:	cmp	w12, w11
  42ddfc:	b.hi	42dde0 <feof@plt+0x2a540>  // b.pmore
  42de00:	ldr	w12, [x8]
  42de04:	cmp	w12, w11
  42de08:	b.cc	42dde0 <feof@plt+0x2a540>  // b.lo, b.ul, b.last
  42de0c:	b	42dc74 <feof@plt+0x2a3d4>
  42de10:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42de14:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42de18:	add	x0, x0, #0x67
  42de1c:	add	x2, x2, #0xaf
  42de20:	mov	w1, #0x39f                 	// #927
  42de24:	bl	429434 <feof@plt+0x25b94>
  42de28:	sub	sp, sp, #0x1b0
  42de2c:	stp	x29, x30, [sp, #336]
  42de30:	stp	x28, x27, [sp, #352]
  42de34:	stp	x26, x25, [sp, #368]
  42de38:	stp	x24, x23, [sp, #384]
  42de3c:	stp	x22, x21, [sp, #400]
  42de40:	stp	x20, x19, [sp, #416]
  42de44:	add	x29, sp, #0x150
  42de48:	mov	x23, x0
  42de4c:	ldr	x0, [x0]
  42de50:	mov	w20, w2
  42de54:	mov	x21, x1
  42de58:	bl	435e80 <feof@plt+0x325e0>
  42de5c:	mov	x0, x21
  42de60:	mov	w1, wzr
  42de64:	bl	45081c <feof@plt+0x4cf7c>
  42de68:	cmp	w0, #0x2
  42de6c:	b.cc	42f5d8 <feof@plt+0x2bd38>  // b.lo, b.ul, b.last
  42de70:	ldrb	w8, [x23, #108]
  42de74:	cbz	w8, 42f5d8 <feof@plt+0x2bd38>
  42de78:	ldr	w8, [x23, #200]
  42de7c:	cmp	w0, w8
  42de80:	b.ne	42de8c <feof@plt+0x2a5ec>  // b.any
  42de84:	ldr	w8, [x21, #120]
  42de88:	cbz	w8, 42f5d8 <feof@plt+0x2bd38>
  42de8c:	ldr	x8, [x23]
  42de90:	str	w0, [x23, #200]
  42de94:	mov	x0, x8
  42de98:	bl	4359f0 <feof@plt+0x32150>
  42de9c:	ldr	x8, [x23]
  42dea0:	str	x0, [sp]
  42dea4:	mov	x1, xzr
  42dea8:	mov	x0, x8
  42deac:	bl	435978 <feof@plt+0x320d8>
  42deb0:	add	x0, sp, #0x88
  42deb4:	mov	x1, x23
  42deb8:	mov	x2, x21
  42debc:	mov	w3, w20
  42dec0:	add	x19, sp, #0x88
  42dec4:	bl	42c8a8 <feof@plt+0x29008>
  42dec8:	mov	x24, xzr
  42decc:	add	x8, x19, #0x18
  42ded0:	add	x25, x19, #0x38
  42ded4:	stp	x8, x23, [sp, #8]
  42ded8:	b	42dee4 <feof@plt+0x2a644>
  42dedc:	ldp	x23, x24, [sp, #16]
  42dee0:	add	x24, x24, #0x1
  42dee4:	ldr	x19, [sp, #272]
  42dee8:	cbz	x19, 42defc <feof@plt+0x2a65c>
  42deec:	ldr	w8, [x19, #4]
  42def0:	cmp	x24, w8, sxtw
  42def4:	b.lt	42df08 <feof@plt+0x2a668>  // b.tstop
  42def8:	b	42f548 <feof@plt+0x2bca8>
  42defc:	mov	w8, wzr
  42df00:	cmp	x24, w8, sxtw
  42df04:	b.ge	42f548 <feof@plt+0x2bca8>  // b.tcont
  42df08:	ldrb	w8, [x23, #223]
  42df0c:	add	x9, x19, x24, lsl #3
  42df10:	add	x20, x9, #0x8
  42df14:	cbz	w8, 42df58 <feof@plt+0x2a6b8>
  42df18:	cbz	x24, 42e088 <feof@plt+0x2a7e8>
  42df1c:	ldrb	w8, [sp, #250]
  42df20:	cbz	w8, 42f7c0 <feof@plt+0x2bf20>
  42df24:	ldr	w8, [sp, #280]
  42df28:	ldr	x0, [sp, #144]
  42df2c:	tbnz	w8, #31, 42df50 <feof@plt+0x2a6b0>
  42df30:	mov	w21, #0xffffffff            	// #-1
  42df34:	mov	w1, #0x2e                  	// #46
  42df38:	bl	433718 <feof@plt+0x2fe78>
  42df3c:	ldr	w8, [sp, #280]
  42df40:	ldr	x0, [sp, #144]
  42df44:	add	w21, w21, #0x1
  42df48:	cmp	w21, w8
  42df4c:	b.lt	42df34 <feof@plt+0x2a694>  // b.tstop
  42df50:	bl	435e80 <feof@plt+0x325e0>
  42df54:	b	42e088 <feof@plt+0x2a7e8>
  42df58:	ldr	w9, [sp, #168]
  42df5c:	cbnz	x24, 42df6c <feof@plt+0x2a6cc>
  42df60:	ldr	w8, [x19, #12]
  42df64:	cmp	w9, w8
  42df68:	b.le	42e088 <feof@plt+0x2a7e8>
  42df6c:	ldr	w8, [x20]
  42df70:	cmp	w8, w9
  42df74:	b.hi	42df88 <feof@plt+0x2a6e8>  // b.pmore
  42df78:	add	x10, x19, x24, lsl #3
  42df7c:	ldr	w10, [x10, #12]
  42df80:	cmp	w10, w9
  42df84:	b.cs	42e064 <feof@plt+0x2a7c4>  // b.hs, b.nlast
  42df88:	ldr	x11, [sp, #256]
  42df8c:	add	x9, x19, x24, lsl #3
  42df90:	mov	x10, xzr
  42df94:	add	x21, x9, #0xc
  42df98:	add	x9, x11, #0x8
  42df9c:	b	42dfa8 <feof@plt+0x2a708>
  42dfa0:	add	x10, x10, #0x1
  42dfa4:	add	x9, x9, #0x28
  42dfa8:	cbz	x11, 42dfbc <feof@plt+0x2a71c>
  42dfac:	ldr	w12, [x11, #4]
  42dfb0:	cmp	x10, w12, uxtw
  42dfb4:	b.cc	42dfc8 <feof@plt+0x2a728>  // b.lo, b.ul, b.last
  42dfb8:	b	42e000 <feof@plt+0x2a760>
  42dfbc:	mov	w12, wzr
  42dfc0:	cmp	x10, w12, uxtw
  42dfc4:	b.cs	42e000 <feof@plt+0x2a760>  // b.hs, b.nlast
  42dfc8:	ldr	w12, [x9]
  42dfcc:	cmp	w8, w12
  42dfd0:	b.hi	42dfa0 <feof@plt+0x2a700>  // b.pmore
  42dfd4:	ldr	w13, [x21]
  42dfd8:	cmp	w13, w12
  42dfdc:	b.cc	42dfa0 <feof@plt+0x2a700>  // b.lo, b.ul, b.last
  42dfe0:	ldr	x8, [sp, #8]
  42dfe4:	ldp	q1, q0, [x8]
  42dfe8:	stp	q1, q0, [x29, #-48]
  42dfec:	ldr	w8, [x9]
  42dff0:	stur	w8, [x29, #-40]
  42dff4:	ldr	w8, [x9, #4]
  42dff8:	stur	w8, [x29, #-36]
  42dffc:	b	42e070 <feof@plt+0x2a7d0>
  42e000:	mov	x22, xzr
  42e004:	b	42e00c <feof@plt+0x2a76c>
  42e008:	add	x22, x22, #0x1
  42e00c:	ldr	x8, [sp, #264]
  42e010:	cbz	x8, 42e024 <feof@plt+0x2a784>
  42e014:	ldr	w9, [x8, #4]
  42e018:	cmp	x22, w9, uxtw
  42e01c:	b.cc	42e030 <feof@plt+0x2a790>  // b.lo, b.ul, b.last
  42e020:	b	42f790 <feof@plt+0x2bef0>
  42e024:	mov	w9, wzr
  42e028:	cmp	x22, w9, uxtw
  42e02c:	b.cs	42f790 <feof@plt+0x2bef0>  // b.hs, b.nlast
  42e030:	add	x8, x8, x22, lsl #3
  42e034:	ldr	x8, [x8, #8]
  42e038:	ldr	w0, [x8]
  42e03c:	sub	x8, x29, #0x30
  42e040:	bl	4377f8 <feof@plt+0x33f58>
  42e044:	ldur	w8, [x29, #-40]
  42e048:	ldr	w9, [x20]
  42e04c:	cmp	w9, w8
  42e050:	b.hi	42e008 <feof@plt+0x2a768>  // b.pmore
  42e054:	ldr	w9, [x21]
  42e058:	cmp	w9, w8
  42e05c:	b.cc	42e008 <feof@plt+0x2a768>  // b.lo, b.ul, b.last
  42e060:	b	42e070 <feof@plt+0x2a7d0>
  42e064:	ldr	x8, [sp, #8]
  42e068:	ldp	q1, q0, [x8]
  42e06c:	stp	q1, q0, [x29, #-48]
  42e070:	ldp	q0, q1, [x29, #-48]
  42e074:	ldr	x8, [x23, #144]
  42e078:	add	x1, sp, #0x60
  42e07c:	mov	x0, x23
  42e080:	stp	q0, q1, [sp, #96]
  42e084:	blr	x8
  42e088:	add	x8, x19, x24, lsl #3
  42e08c:	ldr	w8, [x8, #12]
  42e090:	ldr	w22, [x20]
  42e094:	str	x24, [sp, #24]
  42e098:	str	x8, [sp, #56]
  42e09c:	cmp	w22, w8
  42e0a0:	b.ls	42e0c8 <feof@plt+0x2a828>  // b.plast
  42e0a4:	b	42dedc <feof@plt+0x2a63c>
  42e0a8:	ldr	w8, [x24]
  42e0ac:	tbnz	w8, #31, 42e5a0 <feof@plt+0x2ad00>
  42e0b0:	mov	x0, x24
  42e0b4:	bl	4031d0 <free@plt>
  42e0b8:	ldr	x8, [sp, #56]
  42e0bc:	cmp	x22, x8
  42e0c0:	add	x22, x22, #0x1
  42e0c4:	b.cs	42dedc <feof@plt+0x2a63c>  // b.hs, b.nlast
  42e0c8:	ldr	x0, [sp, #160]
  42e0cc:	mov	w1, w22
  42e0d0:	bl	437438 <feof@plt+0x33b98>
  42e0d4:	cbz	x0, 42e0b8 <feof@plt+0x2a818>
  42e0d8:	mov	x27, x0
  42e0dc:	mov	x26, x1
  42e0e0:	mov	x19, xzr
  42e0e4:	b	42e0f4 <feof@plt+0x2a854>
  42e0e8:	ldr	x0, [sp, #144]
  42e0ec:	bl	435e80 <feof@plt+0x325e0>
  42e0f0:	add	x19, x19, #0x1
  42e0f4:	ldr	x8, [sp, #264]
  42e0f8:	cbz	x8, 42e10c <feof@plt+0x2a86c>
  42e0fc:	ldr	w9, [x8, #4]
  42e100:	cmp	x19, w9, uxtw
  42e104:	b.cc	42e118 <feof@plt+0x2a878>  // b.lo, b.ul, b.last
  42e108:	b	42e288 <feof@plt+0x2a9e8>
  42e10c:	mov	w9, wzr
  42e110:	cmp	x19, w9, uxtw
  42e114:	b.cs	42e288 <feof@plt+0x2a9e8>  // b.hs, b.nlast
  42e118:	add	x8, x8, x19, lsl #3
  42e11c:	ldr	x20, [x8, #8]
  42e120:	mov	x0, x20
  42e124:	bl	4518a0 <feof@plt+0x4e000>
  42e128:	tbz	w0, #0, 42e0f0 <feof@plt+0x2a850>
  42e12c:	ldp	w8, w9, [x20]
  42e130:	cmp	w8, w9
  42e134:	b.ne	42f628 <feof@plt+0x2bd88>  // b.any
  42e138:	ldr	x1, [sp, #160]
  42e13c:	mov	x0, x20
  42e140:	mov	w2, w22
  42e144:	bl	451990 <feof@plt+0x4e0f0>
  42e148:	tbz	w0, #0, 42e0f0 <feof@plt+0x2a850>
  42e14c:	ldr	w8, [sp, #204]
  42e150:	cmn	w8, #0x1
  42e154:	b.eq	42e170 <feof@plt+0x2a8d0>  // b.none
  42e158:	ldr	x8, [sp, #192]
  42e15c:	ldr	x1, [sp, #240]
  42e160:	ldr	x0, [x8]
  42e164:	bl	4354fc <feof@plt+0x31c5c>
  42e168:	mov	w8, #0xffffffff            	// #-1
  42e16c:	str	w8, [sp, #204]
  42e170:	ldrb	w8, [sp, #250]
  42e174:	cbz	w8, 42e1e4 <feof@plt+0x2a944>
  42e178:	ldr	w8, [sp, #280]
  42e17c:	cmp	w8, #0x4
  42e180:	b.lt	42e1ac <feof@plt+0x2a90c>  // b.tstop
  42e184:	mov	w21, wzr
  42e188:	ldr	x0, [sp, #144]
  42e18c:	mov	w1, #0x20                  	// #32
  42e190:	bl	433718 <feof@plt+0x2fe78>
  42e194:	ldr	w8, [sp, #280]
  42e198:	add	w21, w21, #0x1
  42e19c:	sub	w9, w8, #0x3
  42e1a0:	cmp	w21, w9
  42e1a4:	b.lt	42e188 <feof@plt+0x2a8e8>  // b.tstop
  42e1a8:	b	42e1b0 <feof@plt+0x2a910>
  42e1ac:	mov	w21, wzr
  42e1b0:	ldr	x0, [sp, #144]
  42e1b4:	cmp	w21, w8
  42e1b8:	b.ge	42e1d8 <feof@plt+0x2a938>  // b.tcont
  42e1bc:	mov	w1, #0x2b                  	// #43
  42e1c0:	bl	433718 <feof@plt+0x2fe78>
  42e1c4:	ldr	w8, [sp, #280]
  42e1c8:	ldr	x0, [sp, #144]
  42e1cc:	add	w21, w21, #0x1
  42e1d0:	cmp	w21, w8
  42e1d4:	b.lt	42e1bc <feof@plt+0x2a91c>  // b.tstop
  42e1d8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  42e1dc:	add	x1, x1, #0x56c
  42e1e0:	bl	4354fc <feof@plt+0x31c5c>
  42e1e4:	ldr	x0, [sp, #144]
  42e1e8:	mov	w1, #0x2b                  	// #43
  42e1ec:	bl	433718 <feof@plt+0x2fe78>
  42e1f0:	ldr	w8, [sp, #204]
  42e1f4:	cmn	w8, #0x2
  42e1f8:	b.eq	42e22c <feof@plt+0x2a98c>  // b.none
  42e1fc:	cmn	w8, #0x1
  42e200:	b.eq	42e214 <feof@plt+0x2a974>  // b.none
  42e204:	ldr	x8, [sp, #192]
  42e208:	ldr	x1, [sp, #240]
  42e20c:	ldr	x0, [x8]
  42e210:	bl	4354fc <feof@plt+0x31c5c>
  42e214:	ldr	x8, [sp, #192]
  42e218:	mov	w9, #0xfffffffe            	// #-2
  42e21c:	str	w9, [sp, #204]
  42e220:	ldr	x1, [sp, #224]
  42e224:	ldr	x0, [x8]
  42e228:	bl	4354fc <feof@plt+0x31c5c>
  42e22c:	ldr	x8, [x20, #16]
  42e230:	cmp	x8, #0x1
  42e234:	b.eq	42e260 <feof@plt+0x2a9c0>  // b.none
  42e238:	mov	x21, xzr
  42e23c:	ldr	x8, [x20, #8]
  42e240:	ldr	x0, [sp, #144]
  42e244:	ldrb	w1, [x8, x21]
  42e248:	bl	433718 <feof@plt+0x2fe78>
  42e24c:	ldr	x8, [x20, #16]
  42e250:	add	x21, x21, #0x1
  42e254:	sub	x8, x8, #0x1
  42e258:	cmp	x21, x8
  42e25c:	b.cc	42e23c <feof@plt+0x2a99c>  // b.lo, b.ul, b.last
  42e260:	ldr	w8, [sp, #204]
  42e264:	cmn	w8, #0x1
  42e268:	b.eq	42e0e8 <feof@plt+0x2a848>  // b.none
  42e26c:	ldr	x8, [sp, #192]
  42e270:	ldr	x1, [sp, #240]
  42e274:	ldr	x0, [x8]
  42e278:	bl	4354fc <feof@plt+0x31c5c>
  42e27c:	mov	w8, #0xffffffff            	// #-1
  42e280:	str	w8, [sp, #204]
  42e284:	b	42e0e8 <feof@plt+0x2a848>
  42e288:	ldr	w8, [sp, #204]
  42e28c:	cmn	w8, #0x1
  42e290:	b.eq	42e2ac <feof@plt+0x2aa0c>  // b.none
  42e294:	ldr	x8, [sp, #192]
  42e298:	ldr	x1, [sp, #240]
  42e29c:	ldr	x0, [x8]
  42e2a0:	bl	4354fc <feof@plt+0x31c5c>
  42e2a4:	mov	w8, #0xffffffff            	// #-1
  42e2a8:	str	w8, [sp, #204]
  42e2ac:	mov	x11, #0x2200                	// #8704
  42e2b0:	cmp	w26, #0x1
  42e2b4:	mov	w23, w26
  42e2b8:	movk	x11, #0x1, lsl #32
  42e2bc:	b.lt	42e2f4 <feof@plt+0x2aa54>  // b.tstop
  42e2c0:	and	x23, x26, #0xffffffff
  42e2c4:	sub	x8, x27, #0x1
  42e2c8:	ldrb	w9, [x8, x23]
  42e2cc:	cmp	w9, #0x20
  42e2d0:	b.hi	42e2f8 <feof@plt+0x2aa58>  // b.pmore
  42e2d4:	mov	w10, #0x1                   	// #1
  42e2d8:	lsl	x9, x10, x9
  42e2dc:	tst	x9, x11
  42e2e0:	b.eq	42e2f8 <feof@plt+0x2aa58>  // b.none
  42e2e4:	sub	x23, x23, #0x1
  42e2e8:	add	x9, x23, #0x1
  42e2ec:	cmp	x9, #0x1
  42e2f0:	b.gt	42e2c8 <feof@plt+0x2aa28>
  42e2f4:	tbnz	w23, #31, 42f7a8 <feof@plt+0x2bf08>
  42e2f8:	cmp	w23, w26
  42e2fc:	b.gt	42f778 <feof@plt+0x2bed8>
  42e300:	cbz	w23, 42e324 <feof@plt+0x2aa84>
  42e304:	add	x8, x27, w23, sxtw
  42e308:	ldurb	w8, [x8, #-1]
  42e30c:	cmp	w8, #0x20
  42e310:	b.hi	42e324 <feof@plt+0x2aa84>  // b.pmore
  42e314:	mov	w9, #0x1                   	// #1
  42e318:	lsl	x8, x9, x8
  42e31c:	tst	x8, x11
  42e320:	b.ne	42f760 <feof@plt+0x2bec0>  // b.any
  42e324:	ldrb	w8, [sp, #250]
  42e328:	ldrsw	x21, [sp, #284]
  42e32c:	cbz	w8, 42e38c <feof@plt+0x2aaec>
  42e330:	mov	w0, w22
  42e334:	bl	42a584 <feof@plt+0x26ce4>
  42e338:	ldr	w9, [sp, #280]
  42e33c:	ldr	x8, [sp, #144]
  42e340:	cmp	w9, w0
  42e344:	b.le	42e374 <feof@plt+0x2aad4>
  42e348:	mov	w19, w0
  42e34c:	mov	w20, wzr
  42e350:	mov	w1, #0x20                  	// #32
  42e354:	mov	x0, x8
  42e358:	bl	433718 <feof@plt+0x2fe78>
  42e35c:	ldr	w9, [sp, #280]
  42e360:	ldr	x8, [sp, #144]
  42e364:	add	w20, w20, #0x1
  42e368:	sub	w9, w9, w19
  42e36c:	cmp	w20, w9
  42e370:	b.lt	42e350 <feof@plt+0x2aab0>  // b.tstop
  42e374:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42e378:	mov	x0, x8
  42e37c:	add	x1, x1, #0x11b
  42e380:	mov	w2, w22
  42e384:	bl	435d34 <feof@plt+0x32494>
  42e388:	b	42e398 <feof@plt+0x2aaf8>
  42e38c:	ldr	x0, [sp, #144]
  42e390:	mov	w1, #0x20                  	// #32
  42e394:	bl	433718 <feof@plt+0x2fe78>
  42e398:	ldr	w20, [sp, #284]
  42e39c:	cmp	w20, w23
  42e3a0:	b.ge	42e468 <feof@plt+0x2abc8>  // b.tcont
  42e3a4:	mov	w26, wzr
  42e3a8:	add	x19, x27, x21
  42e3ac:	mov	w27, #0x7fffffff            	// #2147483647
  42e3b0:	b	42e3e0 <feof@plt+0x2ab40>
  42e3b4:	ldr	x0, [sp, #144]
  42e3b8:	mov	w8, #0x7fffffff            	// #2147483647
  42e3bc:	cmp	w27, w8
  42e3c0:	csel	w8, w20, w27, eq  // eq = none
  42e3c4:	cmp	w1, #0x20
  42e3c8:	csel	w27, w27, w8, eq  // eq = none
  42e3cc:	csel	w26, w26, w20, eq  // eq = none
  42e3d0:	bl	433718 <feof@plt+0x2fe78>
  42e3d4:	cmp	w23, w20
  42e3d8:	add	x19, x19, #0x1
  42e3dc:	b.eq	42e470 <feof@plt+0x2abd0>  // b.none
  42e3e0:	ldrb	w8, [sp, #248]
  42e3e4:	add	w20, w20, #0x1
  42e3e8:	cbz	w8, 42e440 <feof@plt+0x2aba0>
  42e3ec:	add	x0, sp, #0x88
  42e3f0:	sub	x5, x29, #0x30
  42e3f4:	mov	w4, #0x7fffffff            	// #2147483647
  42e3f8:	mov	w1, w22
  42e3fc:	mov	w2, w20
  42e400:	mov	w3, wzr
  42e404:	bl	42fa8c <feof@plt+0x2c1ec>
  42e408:	tbz	w0, #0, 42e41c <feof@plt+0x2ab7c>
  42e40c:	ldur	w1, [x29, #-48]
  42e410:	mov	x0, x25
  42e414:	bl	42f954 <feof@plt+0x2c0b4>
  42e418:	b	42e440 <feof@plt+0x2aba0>
  42e41c:	ldr	w8, [sp, #204]
  42e420:	cmn	w8, #0x1
  42e424:	b.eq	42e440 <feof@plt+0x2aba0>  // b.none
  42e428:	ldr	x8, [sp, #192]
  42e42c:	ldr	x1, [sp, #240]
  42e430:	ldr	x0, [x8]
  42e434:	bl	4354fc <feof@plt+0x31c5c>
  42e438:	mov	w8, #0xffffffff            	// #-1
  42e43c:	str	w8, [sp, #204]
  42e440:	ldrb	w1, [x19]
  42e444:	cmp	w1, #0xd
  42e448:	b.hi	42e3b4 <feof@plt+0x2ab14>  // b.pmore
  42e44c:	mov	w8, #0x1                   	// #1
  42e450:	lsl	w8, w8, w1
  42e454:	mov	w9, #0x2201                	// #8705
  42e458:	tst	w8, w9
  42e45c:	b.eq	42e3b4 <feof@plt+0x2ab14>  // b.none
  42e460:	mov	w1, #0x20                  	// #32
  42e464:	b	42e3b4 <feof@plt+0x2ab14>
  42e468:	mov	w26, wzr
  42e46c:	mov	w27, #0x7fffffff            	// #2147483647
  42e470:	ldr	w8, [sp, #204]
  42e474:	cmn	w8, #0x1
  42e478:	b.eq	42e494 <feof@plt+0x2abf4>  // b.none
  42e47c:	ldr	x8, [sp, #192]
  42e480:	ldr	x1, [sp, #240]
  42e484:	ldr	x0, [x8]
  42e488:	bl	4354fc <feof@plt+0x31c5c>
  42e48c:	mov	w8, #0xffffffff            	// #-1
  42e490:	str	w8, [sp, #204]
  42e494:	ldr	x0, [sp, #144]
  42e498:	bl	435e80 <feof@plt+0x325e0>
  42e49c:	ldr	x9, [sp, #256]
  42e4a0:	cbz	x9, 42e628 <feof@plt+0x2ad88>
  42e4a4:	ldr	w8, [x9, #4]
  42e4a8:	cbz	w8, 42e628 <feof@plt+0x2ad88>
  42e4ac:	add	x10, x9, #0x8
  42e4b0:	add	x9, x9, #0x30
  42e4b4:	mov	x11, xzr
  42e4b8:	mov	x12, x9
  42e4bc:	mov	x13, x10
  42e4c0:	b	42e4dc <feof@plt+0x2ac3c>
  42e4c4:	add	x11, x11, #0x1
  42e4c8:	cmp	x11, x8
  42e4cc:	csel	x13, x12, xzr, cc  // cc = lo, ul, last
  42e4d0:	cmp	x8, x11
  42e4d4:	add	x12, x12, #0x28
  42e4d8:	b.eq	42e628 <feof@plt+0x2ad88>  // b.none
  42e4dc:	ldr	w14, [x13, #16]
  42e4e0:	cmp	w14, #0x2
  42e4e4:	b.eq	42e628 <feof@plt+0x2ad88>  // b.none
  42e4e8:	ldr	w14, [x13]
  42e4ec:	ldr	w13, [x13, #8]
  42e4f0:	cmp	w14, w13
  42e4f4:	b.hi	42f658 <feof@plt+0x2bdb8>  // b.pmore
  42e4f8:	cmp	w14, w22
  42e4fc:	b.hi	42e4c4 <feof@plt+0x2ac24>  // b.pmore
  42e500:	cmp	w13, w22
  42e504:	b.cc	42e4c4 <feof@plt+0x2ac24>  // b.lo, b.ul, b.last
  42e508:	ldr	w12, [sp, #172]
  42e50c:	mov	x11, xzr
  42e510:	add	w23, w12, #0x1
  42e514:	add	w12, w26, #0x1
  42e518:	b	42e53c <feof@plt+0x2ac9c>
  42e51c:	ccmp	w23, w26, #0x0, hi  // hi = pmore
  42e520:	csel	w23, w23, w12, gt
  42e524:	add	x11, x11, #0x1
  42e528:	cmp	x11, x8
  42e52c:	csel	x10, x9, xzr, cc  // cc = lo, ul, last
  42e530:	cmp	x8, x11
  42e534:	add	x9, x9, #0x28
  42e538:	b.eq	42e564 <feof@plt+0x2acc4>  // b.none
  42e53c:	ldr	w13, [x10]
  42e540:	cmp	w13, w22
  42e544:	b.hi	42e524 <feof@plt+0x2ac84>  // b.pmore
  42e548:	ldr	w13, [x10, #8]
  42e54c:	cmp	w13, w22
  42e550:	b.ne	42e51c <feof@plt+0x2ac7c>  // b.any
  42e554:	ldr	w10, [x10, #12]
  42e558:	cmp	w23, w10
  42e55c:	csinc	w23, w23, w10, gt
  42e560:	b	42e524 <feof@plt+0x2ac84>
  42e564:	ldrb	w8, [sp, #250]
  42e568:	cbz	w8, 42e5e0 <feof@plt+0x2ad40>
  42e56c:	ldr	w8, [sp, #280]
  42e570:	cmp	w8, #0x4
  42e574:	b.lt	42e5a8 <feof@plt+0x2ad08>  // b.tstop
  42e578:	mov	w19, wzr
  42e57c:	ldr	x0, [sp, #144]
  42e580:	mov	w1, #0x20                  	// #32
  42e584:	bl	433718 <feof@plt+0x2fe78>
  42e588:	ldr	w8, [sp, #280]
  42e58c:	add	w19, w19, #0x1
  42e590:	sub	w9, w8, #0x3
  42e594:	cmp	w19, w9
  42e598:	b.lt	42e57c <feof@plt+0x2acdc>  // b.tstop
  42e59c:	b	42e5ac <feof@plt+0x2ad0c>
  42e5a0:	str	wzr, [x24, #4]
  42e5a4:	b	42e0b8 <feof@plt+0x2a818>
  42e5a8:	mov	w19, wzr
  42e5ac:	ldr	x0, [sp, #144]
  42e5b0:	cmp	w19, w8
  42e5b4:	b.ge	42e5d4 <feof@plt+0x2ad34>  // b.tcont
  42e5b8:	mov	w1, #0x20                  	// #32
  42e5bc:	bl	433718 <feof@plt+0x2fe78>
  42e5c0:	ldr	w8, [sp, #280]
  42e5c4:	ldr	x0, [sp, #144]
  42e5c8:	add	w19, w19, #0x1
  42e5cc:	cmp	w19, w8
  42e5d0:	b.lt	42e5b8 <feof@plt+0x2ad18>  // b.tstop
  42e5d4:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  42e5d8:	add	x1, x1, #0x56c
  42e5dc:	bl	4354fc <feof@plt+0x31c5c>
  42e5e0:	ldr	x0, [sp, #144]
  42e5e4:	mov	w1, #0x20                  	// #32
  42e5e8:	bl	433718 <feof@plt+0x2fe78>
  42e5ec:	ldr	w8, [sp, #284]
  42e5f0:	add	w20, w8, #0x1
  42e5f4:	cmp	w20, w23
  42e5f8:	b.lt	42e660 <feof@plt+0x2adc0>  // b.tstop
  42e5fc:	ldr	w8, [sp, #204]
  42e600:	cmn	w8, #0x1
  42e604:	b.eq	42e620 <feof@plt+0x2ad80>  // b.none
  42e608:	ldr	x8, [sp, #192]
  42e60c:	ldr	x1, [sp, #240]
  42e610:	ldr	x0, [x8]
  42e614:	bl	4354fc <feof@plt+0x31c5c>
  42e618:	mov	w8, #0xffffffff            	// #-1
  42e61c:	str	w8, [sp, #204]
  42e620:	ldr	x0, [sp, #144]
  42e624:	bl	435e80 <feof@plt+0x325e0>
  42e628:	ldrb	w8, [sp, #249]
  42e62c:	str	x22, [sp, #88]
  42e630:	cbz	w8, 42eb48 <feof@plt+0x2b2a8>
  42e634:	ldr	x8, [sp, #256]
  42e638:	cbz	x8, 42eb48 <feof@plt+0x2b2a8>
  42e63c:	mov	x19, xzr
  42e640:	mov	x26, xzr
  42e644:	b	42e72c <feof@plt+0x2ae8c>
  42e648:	ldr	x0, [sp, #144]
  42e64c:	mov	w1, #0x20                  	// #32
  42e650:	bl	433718 <feof@plt+0x2fe78>
  42e654:	add	w20, w20, #0x1
  42e658:	cmp	w23, w20
  42e65c:	b.eq	42e5fc <feof@plt+0x2ad5c>  // b.none
  42e660:	add	x0, sp, #0x88
  42e664:	sub	x5, x29, #0x30
  42e668:	mov	w1, w22
  42e66c:	mov	w2, w20
  42e670:	mov	w3, w27
  42e674:	mov	w4, w26
  42e678:	bl	42fa8c <feof@plt+0x2c1ec>
  42e67c:	tbz	w0, #0, 42e6b4 <feof@plt+0x2ae14>
  42e680:	ldur	w19, [x29, #-48]
  42e684:	mov	x0, x25
  42e688:	mov	w1, w19
  42e68c:	bl	42f954 <feof@plt+0x2c0b4>
  42e690:	ldurb	w8, [x29, #-44]
  42e694:	cbz	w8, 42e6dc <feof@plt+0x2ae3c>
  42e698:	sxtw	x8, w19
  42e69c:	cmp	w8, #0x2
  42e6a0:	b.gt	42e6e8 <feof@plt+0x2ae48>
  42e6a4:	ldp	x9, x0, [sp, #136]
  42e6a8:	add	x8, x9, x8
  42e6ac:	ldrb	w1, [x8, #116]
  42e6b0:	b	42e650 <feof@plt+0x2adb0>
  42e6b4:	ldr	w8, [sp, #204]
  42e6b8:	cmn	w8, #0x1
  42e6bc:	b.eq	42e648 <feof@plt+0x2ada8>  // b.none
  42e6c0:	ldr	x8, [sp, #192]
  42e6c4:	ldr	x1, [sp, #240]
  42e6c8:	ldr	x0, [x8]
  42e6cc:	bl	4354fc <feof@plt+0x31c5c>
  42e6d0:	mov	w8, #0xffffffff            	// #-1
  42e6d4:	str	w8, [sp, #204]
  42e6d8:	b	42e648 <feof@plt+0x2ada8>
  42e6dc:	ldr	x0, [sp, #144]
  42e6e0:	mov	w1, #0x7e                  	// #126
  42e6e4:	b	42e650 <feof@plt+0x2adb0>
  42e6e8:	ldr	x0, [sp, #144]
  42e6ec:	mov	w1, #0x5e                  	// #94
  42e6f0:	b	42e650 <feof@plt+0x2adb0>
  42e6f4:	mov	x0, x26
  42e6f8:	ldr	w8, [x0, #4]
  42e6fc:	mov	w10, #0x28                  	// #40
  42e700:	mov	x26, x0
  42e704:	add	w9, w8, #0x1
  42e708:	madd	x8, x8, x10, x0
  42e70c:	str	w9, [x0, #4]
  42e710:	stp	w19, w21, [x8, #8]
  42e714:	stp	x20, x27, [x8, #16]
  42e718:	str	x12, [x8, #32]
  42e71c:	str	wzr, [x8, #40]
  42e720:	ldr	x8, [sp, #256]
  42e724:	add	x19, x19, #0x1
  42e728:	cbz	x8, 42e870 <feof@plt+0x2afd0>
  42e72c:	ldr	w9, [x8, #4]
  42e730:	mov	w10, #0x28                  	// #40
  42e734:	madd	x8, x19, x10, x8
  42e738:	add	x8, x8, #0x8
  42e73c:	cmp	x19, x9
  42e740:	csel	x21, x8, xzr, cc  // cc = lo, ul, last
  42e744:	b.cs	42e870 <feof@plt+0x2afd0>  // b.hs, b.nlast
  42e748:	ldr	x0, [x21, #32]
  42e74c:	cbz	x0, 42e720 <feof@plt+0x2ae80>
  42e750:	ldr	w8, [x21, #20]
  42e754:	cmp	w8, w22
  42e758:	b.ne	42e720 <feof@plt+0x2ae80>  // b.any
  42e75c:	ldr	w8, [x21, #24]
  42e760:	ldr	w9, [sp, #284]
  42e764:	cmp	w8, w9
  42e768:	b.le	42e720 <feof@plt+0x2ae80>
  42e76c:	ldr	x8, [x0]
  42e770:	ldr	w1, [x21, #28]
  42e774:	ldr	x8, [x8, #16]
  42e778:	blr	x8
  42e77c:	bfxil	x27, x1, #0, #8
  42e780:	cbz	x0, 42e720 <feof@plt+0x2ae80>
  42e784:	ldr	w21, [x21, #24]
  42e788:	mov	x20, x0
  42e78c:	bl	4030b0 <strlen@plt>
  42e790:	mov	x12, x0
  42e794:	cbz	x26, 42e7d8 <feof@plt+0x2af38>
  42e798:	ldp	w8, w9, [x26]
  42e79c:	and	w28, w8, #0x7fffffff
  42e7a0:	cmp	w28, w9
  42e7a4:	b.ne	42e6f4 <feof@plt+0x2ae54>  // b.any
  42e7a8:	str	w21, [sp, #80]
  42e7ac:	mov	x21, x12
  42e7b0:	add	w1, w28, #0x1
  42e7b4:	tbnz	w8, #31, 42e7f8 <feof@plt+0x2af58>
  42e7b8:	mov	w0, w28
  42e7bc:	bl	425fbc <feof@plt+0x2271c>
  42e7c0:	ldr	w22, [x26, #4]
  42e7c4:	mov	w23, w0
  42e7c8:	mov	w28, wzr
  42e7cc:	mov	w24, wzr
  42e7d0:	mov	x0, x26
  42e7d4:	b	42e810 <feof@plt+0x2af70>
  42e7d8:	str	w21, [sp, #80]
  42e7dc:	mov	x21, x12
  42e7e0:	mov	w28, wzr
  42e7e4:	mov	w24, wzr
  42e7e8:	mov	x0, xzr
  42e7ec:	mov	w22, wzr
  42e7f0:	mov	w23, #0x4                   	// #4
  42e7f4:	b	42e810 <feof@plt+0x2af70>
  42e7f8:	cmp	w28, #0x4
  42e7fc:	mov	w8, #0x4                   	// #4
  42e800:	mov	x0, xzr
  42e804:	mov	w22, wzr
  42e808:	csel	w23, w8, w1, cc  // cc = lo, ul, last
  42e80c:	mov	w24, #0x1                   	// #1
  42e810:	mov	w8, #0x28                  	// #40
  42e814:	umull	x8, w23, w8
  42e818:	add	x1, x8, #0x8
  42e81c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  42e820:	and	w8, w23, #0x7fffffff
  42e824:	stp	w8, w22, [x0]
  42e828:	ldr	x22, [sp, #88]
  42e82c:	mov	x12, x21
  42e830:	ldr	w21, [sp, #80]
  42e834:	cbz	w24, 42e6f8 <feof@plt+0x2ae58>
  42e838:	cbz	w28, 42e868 <feof@plt+0x2afc8>
  42e83c:	add	x8, x26, #0x8
  42e840:	add	x9, x0, #0x8
  42e844:	mov	w10, w28
  42e848:	ldr	x11, [x8, #32]
  42e84c:	ldp	q1, q0, [x8]
  42e850:	subs	w10, w10, #0x1
  42e854:	add	x8, x8, #0x28
  42e858:	str	x11, [x9, #32]
  42e85c:	stp	q1, q0, [x9]
  42e860:	add	x9, x9, #0x28
  42e864:	b.ne	42e848 <feof@plt+0x2afa8>  // b.any
  42e868:	str	w28, [x0, #4]
  42e86c:	b	42e6f8 <feof@plt+0x2ae58>
  42e870:	cbz	x26, 42eb48 <feof@plt+0x2b2a8>
  42e874:	ldr	w1, [x26, #4]
  42e878:	cbz	w1, 42eb30 <feof@plt+0x2b290>
  42e87c:	cmp	w1, #0x1
  42e880:	b.ne	42e890 <feof@plt+0x2aff0>  // b.any
  42e884:	mov	w8, wzr
  42e888:	mov	w14, #0x28                  	// #40
  42e88c:	b	42e8b4 <feof@plt+0x2b014>
  42e890:	adrp	x3, 42f000 <feof@plt+0x2b760>
  42e894:	add	x0, x26, #0x8
  42e898:	mov	w2, #0x28                  	// #40
  42e89c:	add	x3, x3, #0xc14
  42e8a0:	bl	439f5c <feof@plt+0x366bc>
  42e8a4:	ldr	w1, [x26, #4]
  42e8a8:	mov	w14, #0x28                  	// #40
  42e8ac:	cbz	w1, 42f540 <feof@plt+0x2bca0>
  42e8b0:	sub	w8, w1, #0x1
  42e8b4:	mov	w9, #0x1                   	// #1
  42e8b8:	mov	w10, #0x7fffffff            	// #2147483647
  42e8bc:	umaddl	x11, w8, w14, x26
  42e8c0:	ldrsw	x12, [x11, #12]
  42e8c4:	ldr	x13, [x11, #32]
  42e8c8:	sub	w8, w8, #0x1
  42e8cc:	add	x13, x13, x12
  42e8d0:	cmp	x13, w10, sxtw
  42e8d4:	cinc	w9, w9, cs  // cs = hs, nlast
  42e8d8:	cmp	w1, w8
  42e8dc:	mov	w10, w12
  42e8e0:	str	w9, [x11, #40]
  42e8e4:	b.hi	42e8bc <feof@plt+0x2b01c>  // b.pmore
  42e8e8:	add	w19, w9, #0x1
  42e8ec:	mov	w20, wzr
  42e8f0:	mov	w27, wzr
  42e8f4:	add	x23, x26, #0x8
  42e8f8:	b	42e914 <feof@plt+0x2b074>
  42e8fc:	ldr	x0, [sp, #144]
  42e900:	bl	435e80 <feof@plt+0x325e0>
  42e904:	ldr	x22, [sp, #88]
  42e908:	add	w20, w20, #0x1
  42e90c:	cmp	w20, w19
  42e910:	b.eq	42eaf4 <feof@plt+0x2b254>  // b.none
  42e914:	ldrb	w8, [sp, #250]
  42e918:	cbz	w8, 42e988 <feof@plt+0x2b0e8>
  42e91c:	ldr	w8, [sp, #280]
  42e920:	cmp	w8, #0x4
  42e924:	b.lt	42e950 <feof@plt+0x2b0b0>  // b.tstop
  42e928:	mov	w21, wzr
  42e92c:	ldr	x0, [sp, #144]
  42e930:	mov	w1, #0x20                  	// #32
  42e934:	bl	433718 <feof@plt+0x2fe78>
  42e938:	ldr	w8, [sp, #280]
  42e93c:	add	w21, w21, #0x1
  42e940:	sub	w9, w8, #0x3
  42e944:	cmp	w21, w9
  42e948:	b.lt	42e92c <feof@plt+0x2b08c>  // b.tstop
  42e94c:	b	42e954 <feof@plt+0x2b0b4>
  42e950:	mov	w21, wzr
  42e954:	ldr	x0, [sp, #144]
  42e958:	cmp	w21, w8
  42e95c:	b.ge	42e97c <feof@plt+0x2b0dc>  // b.tcont
  42e960:	mov	w1, #0x20                  	// #32
  42e964:	bl	433718 <feof@plt+0x2fe78>
  42e968:	ldr	w8, [sp, #280]
  42e96c:	ldr	x0, [sp, #144]
  42e970:	add	w21, w21, #0x1
  42e974:	cmp	w21, w8
  42e978:	b.lt	42e960 <feof@plt+0x2b0c0>  // b.tstop
  42e97c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  42e980:	add	x1, x1, #0x56c
  42e984:	bl	4354fc <feof@plt+0x31c5c>
  42e988:	ldr	x0, [sp, #144]
  42e98c:	mov	w1, #0x20                  	// #32
  42e990:	bl	433718 <feof@plt+0x2fe78>
  42e994:	ldr	w8, [x26, #4]
  42e998:	cbz	w8, 42eacc <feof@plt+0x2b22c>
  42e99c:	ldr	w8, [sp, #284]
  42e9a0:	mov	x28, xzr
  42e9a4:	mov	x21, x23
  42e9a8:	add	w22, w8, #0x1
  42e9ac:	b	42e9d4 <feof@plt+0x2b134>
  42e9b0:	ldr	w8, [x21, #24]
  42e9b4:	add	w22, w22, w8
  42e9b8:	ldr	w8, [x26, #4]
  42e9bc:	add	x28, x28, #0x1
  42e9c0:	mov	w9, #0x28                  	// #40
  42e9c4:	madd	x9, x28, x9, x26
  42e9c8:	cmp	x28, x8
  42e9cc:	add	x21, x9, #0x8
  42e9d0:	b.cs	42eacc <feof@plt+0x2b22c>  // b.hs, b.nlast
  42e9d4:	ldr	w8, [x21, #32]
  42e9d8:	cmp	w20, w8
  42e9dc:	b.gt	42eacc <feof@plt+0x2b22c>
  42e9e0:	ldr	w24, [x21, #4]
  42e9e4:	b.ne	42ea50 <feof@plt+0x2b1b0>  // b.any
  42e9e8:	cmp	w22, w24
  42e9ec:	b.gt	42f5f8 <feof@plt+0x2bd58>
  42e9f0:	b.ge	42ea10 <feof@plt+0x2b170>  // b.tcont
  42e9f4:	sub	w22, w24, w22
  42e9f8:	ldr	x0, [sp, #144]
  42e9fc:	mov	w1, #0x20                  	// #32
  42ea00:	bl	433718 <feof@plt+0x2fe78>
  42ea04:	subs	w22, w22, #0x1
  42ea08:	b.ne	42e9f8 <feof@plt+0x2b158>  // b.any
  42ea0c:	mov	w22, w24
  42ea10:	ldr	w1, [x21]
  42ea14:	mov	x0, x25
  42ea18:	bl	42f954 <feof@plt+0x2c0b4>
  42ea1c:	ldr	x0, [sp, #144]
  42ea20:	ldr	x1, [x21, #8]
  42ea24:	bl	4354fc <feof@plt+0x31c5c>
  42ea28:	ldr	w8, [sp, #204]
  42ea2c:	cmn	w8, #0x1
  42ea30:	b.eq	42e9b0 <feof@plt+0x2b110>  // b.none
  42ea34:	ldr	x8, [sp, #192]
  42ea38:	ldr	x1, [sp, #240]
  42ea3c:	ldr	x0, [x8]
  42ea40:	bl	4354fc <feof@plt+0x31c5c>
  42ea44:	mov	w8, #0xffffffff            	// #-1
  42ea48:	str	w8, [sp, #204]
  42ea4c:	b	42e9b0 <feof@plt+0x2b110>
  42ea50:	cmp	w24, w27
  42ea54:	b.eq	42e9b8 <feof@plt+0x2b118>  // b.none
  42ea58:	cmp	w22, w24
  42ea5c:	b.gt	42f640 <feof@plt+0x2bda0>
  42ea60:	b.ge	42ea84 <feof@plt+0x2b1e4>  // b.tcont
  42ea64:	sub	w22, w24, w22
  42ea68:	ldr	x0, [sp, #144]
  42ea6c:	mov	w1, #0x20                  	// #32
  42ea70:	bl	433718 <feof@plt+0x2fe78>
  42ea74:	subs	w22, w22, #0x1
  42ea78:	b.ne	42ea68 <feof@plt+0x2b1c8>  // b.any
  42ea7c:	mov	w27, w24
  42ea80:	b	42ea88 <feof@plt+0x2b1e8>
  42ea84:	mov	w27, w22
  42ea88:	ldr	w1, [x21]
  42ea8c:	mov	x0, x25
  42ea90:	bl	42f954 <feof@plt+0x2c0b4>
  42ea94:	ldr	x0, [sp, #144]
  42ea98:	mov	w1, #0x7c                  	// #124
  42ea9c:	bl	433718 <feof@plt+0x2fe78>
  42eaa0:	ldr	w8, [sp, #204]
  42eaa4:	cmn	w8, #0x1
  42eaa8:	b.eq	42eac4 <feof@plt+0x2b224>  // b.none
  42eaac:	ldr	x8, [sp, #192]
  42eab0:	ldr	x1, [sp, #240]
  42eab4:	ldr	x0, [x8]
  42eab8:	bl	4354fc <feof@plt+0x31c5c>
  42eabc:	mov	w8, #0xffffffff            	// #-1
  42eac0:	str	w8, [sp, #204]
  42eac4:	add	w22, w27, #0x1
  42eac8:	b	42e9b8 <feof@plt+0x2b118>
  42eacc:	ldr	w8, [sp, #204]
  42ead0:	cmn	w8, #0x1
  42ead4:	b.eq	42e8fc <feof@plt+0x2b05c>  // b.none
  42ead8:	ldr	x8, [sp, #192]
  42eadc:	ldr	x1, [sp, #240]
  42eae0:	ldr	x0, [x8]
  42eae4:	bl	4354fc <feof@plt+0x31c5c>
  42eae8:	mov	w8, #0xffffffff            	// #-1
  42eaec:	str	w8, [sp, #204]
  42eaf0:	b	42e8fc <feof@plt+0x2b05c>
  42eaf4:	ldr	w8, [x26, #4]
  42eaf8:	cbz	w8, 42eb30 <feof@plt+0x2b290>
  42eafc:	mov	x19, xzr
  42eb00:	add	x20, x26, #0x18
  42eb04:	b	42eb18 <feof@plt+0x2b278>
  42eb08:	add	x19, x19, #0x1
  42eb0c:	cmp	x19, w8, uxtw
  42eb10:	add	x20, x20, #0x28
  42eb14:	b.cs	42eb30 <feof@plt+0x2b290>  // b.hs, b.nlast
  42eb18:	ldrb	w9, [x20]
  42eb1c:	cbz	w9, 42eb08 <feof@plt+0x2b268>
  42eb20:	ldur	x0, [x20, #-8]
  42eb24:	bl	4031d0 <free@plt>
  42eb28:	ldr	w8, [x26, #4]
  42eb2c:	b	42eb08 <feof@plt+0x2b268>
  42eb30:	ldr	w8, [x26]
  42eb34:	tbnz	w8, #31, 42eb44 <feof@plt+0x2b2a4>
  42eb38:	mov	x0, x26
  42eb3c:	bl	4031d0 <free@plt>
  42eb40:	b	42eb48 <feof@plt+0x2b2a8>
  42eb44:	str	wzr, [x26, #4]
  42eb48:	ldr	x8, [sp, #160]
  42eb4c:	mov	x27, xzr
  42eb50:	mov	x24, xzr
  42eb54:	str	x8, [sp, #64]
  42eb58:	ldr	x8, [sp, #264]
  42eb5c:	cbnz	x8, 42eb8c <feof@plt+0x2b2ec>
  42eb60:	b	42eb9c <feof@plt+0x2b2fc>
  42eb64:	mov	x0, x24
  42eb68:	ldr	w8, [x0, #4]
  42eb6c:	mov	x24, x0
  42eb70:	add	w9, w8, #0x1
  42eb74:	add	x8, x0, x8, lsl #3
  42eb78:	str	w9, [x0, #4]
  42eb7c:	str	x20, [x8, #8]
  42eb80:	add	x27, x27, #0x1
  42eb84:	ldr	x8, [sp, #264]
  42eb88:	cbz	x8, 42eb9c <feof@plt+0x2b2fc>
  42eb8c:	ldr	w9, [x8, #4]
  42eb90:	cmp	x27, w9, uxtw
  42eb94:	b.cc	42eba8 <feof@plt+0x2b308>  // b.lo, b.ul, b.last
  42eb98:	b	42ef64 <feof@plt+0x2b6c4>
  42eb9c:	mov	w9, wzr
  42eba0:	cmp	x27, w9, uxtw
  42eba4:	b.cs	42ef64 <feof@plt+0x2b6c4>  // b.hs, b.nlast
  42eba8:	add	x8, x8, x27, lsl #3
  42ebac:	ldr	x28, [x8, #8]
  42ebb0:	mov	x0, x28
  42ebb4:	bl	4518a0 <feof@plt+0x4e000>
  42ebb8:	tbnz	w0, #0, 42eb80 <feof@plt+0x2b2e0>
  42ebbc:	ldr	x1, [sp, #160]
  42ebc0:	mov	x0, x28
  42ebc4:	mov	w2, w22
  42ebc8:	bl	451990 <feof@plt+0x4e0f0>
  42ebcc:	tbz	w0, #0, 42eb80 <feof@plt+0x2b2e0>
  42ebd0:	ldr	w0, [x28]
  42ebd4:	sub	x8, x29, #0x30
  42ebd8:	mov	x26, x25
  42ebdc:	bl	4377f8 <feof@plt+0x33f58>
  42ebe0:	ldr	w0, [x28, #4]
  42ebe4:	ldur	w19, [x29, #-36]
  42ebe8:	sub	x8, x29, #0x30
  42ebec:	bl	4377f8 <feof@plt+0x33f58>
  42ebf0:	ldur	w22, [x29, #-36]
  42ebf4:	cmp	w19, w22
  42ebf8:	b.gt	42f610 <feof@plt+0x2bd70>
  42ebfc:	ldr	w0, [x28]
  42ec00:	sub	x8, x29, #0x30
  42ec04:	bl	4377f8 <feof@plt+0x33f58>
  42ec08:	ldur	w25, [x29, #-36]
  42ec0c:	ldp	w9, w0, [x28]
  42ec10:	ldr	w8, [x28, #16]
  42ec14:	mov	x23, x24
  42ec18:	sub	w21, w25, #0x1
  42ec1c:	cmp	w9, w0
  42ec20:	add	w20, w21, w8
  42ec24:	b.ne	42ec38 <feof@plt+0x2b398>  // b.any
  42ec28:	cbz	w8, 42ec60 <feof@plt+0x2b3c0>
  42ec2c:	cmp	w25, w20
  42ec30:	b.le	42ec60 <feof@plt+0x2b3c0>
  42ec34:	b	42f610 <feof@plt+0x2bd70>
  42ec38:	sub	x8, x29, #0x30
  42ec3c:	bl	4377f8 <feof@plt+0x33f58>
  42ec40:	ldur	w8, [x29, #-36]
  42ec44:	sub	w8, w8, #0x1
  42ec48:	cmp	w8, w20
  42ec4c:	csel	w20, w8, w20, gt
  42ec50:	cmp	w25, w20
  42ec54:	b.le	42ec60 <feof@plt+0x2b3c0>
  42ec58:	cmp	w21, w20
  42ec5c:	b.ne	42f610 <feof@plt+0x2bd70>  // b.any
  42ec60:	sub	w9, w22, #0x1
  42ec64:	mov	x24, x23
  42ec68:	cbz	x23, 42eca8 <feof@plt+0x2b408>
  42ec6c:	ldr	w8, [x24, #4]
  42ec70:	cbz	w8, 42eca8 <feof@plt+0x2b408>
  42ec74:	sub	w8, w8, #0x1
  42ec78:	add	x8, x24, w8, uxtw #3
  42ec7c:	ldr	x22, [x8, #8]
  42ec80:	ldr	w8, [x22]
  42ec84:	cmp	w8, w19
  42ec88:	b.gt	42f670 <feof@plt+0x2bdd0>
  42ec8c:	ldr	w8, [x22, #8]
  42ec90:	cmp	w8, w25
  42ec94:	b.gt	42f688 <feof@plt+0x2bde8>
  42ec98:	ldr	w8, [x22, #12]
  42ec9c:	mov	x24, x23
  42eca0:	cmp	w8, w25
  42eca4:	b.ge	42ed38 <feof@plt+0x2b498>  // b.tcont
  42eca8:	mov	w0, #0x28                  	// #40
  42ecac:	bfi	x19, x9, #32, #32
  42ecb0:	bfi	x25, x20, #32, #32
  42ecb4:	bl	403440 <_Znwm@plt>
  42ecb8:	mov	x20, x0
  42ecbc:	ldp	x0, x21, [x28, #8]
  42ecc0:	stp	x19, x25, [x20]
  42ecc4:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  42ecc8:	add	x8, x21, #0x1
  42eccc:	stp	x0, x21, [x20, #16]
  42ecd0:	str	x8, [x20, #32]
  42ecd4:	cbz	x24, 42ed18 <feof@plt+0x2b478>
  42ecd8:	ldp	w8, w9, [x24]
  42ecdc:	ldr	x22, [sp, #88]
  42ece0:	mov	x25, x26
  42ece4:	and	w28, w8, #0x7fffffff
  42ece8:	cmp	w28, w9
  42ecec:	b.ne	42eb64 <feof@plt+0x2b2c4>  // b.any
  42ecf0:	add	w1, w28, #0x1
  42ecf4:	tbnz	w8, #31, 42ee84 <feof@plt+0x2b5e4>
  42ecf8:	mov	w0, w28
  42ecfc:	bl	425fbc <feof@plt+0x2271c>
  42ed00:	ldr	w19, [x24, #4]
  42ed04:	mov	w23, w0
  42ed08:	mov	w28, wzr
  42ed0c:	mov	w21, wzr
  42ed10:	mov	x0, x24
  42ed14:	b	42ee9c <feof@plt+0x2b5fc>
  42ed18:	ldr	x22, [sp, #88]
  42ed1c:	mov	w28, wzr
  42ed20:	mov	w21, wzr
  42ed24:	mov	x0, xzr
  42ed28:	mov	w19, wzr
  42ed2c:	mov	w23, #0x4                   	// #4
  42ed30:	mov	x25, x26
  42ed34:	b	42ee9c <feof@plt+0x2b5fc>
  42ed38:	ldr	w8, [x22, #4]
  42ed3c:	cmp	w8, w25
  42ed40:	stp	x8, x9, [sp, #72]
  42ed44:	b.ge	42f610 <feof@plt+0x2bd70>  // b.tcont
  42ed48:	ldr	x0, [sp, #64]
  42ed4c:	ldr	x1, [sp, #88]
  42ed50:	bl	437438 <feof@plt+0x33b98>
  42ed54:	ldr	x9, [sp, #80]
  42ed58:	mov	x24, x23
  42ed5c:	cbz	x0, 42eca8 <feof@plt+0x2b408>
  42ed60:	cmp	w25, w1
  42ed64:	b.gt	42eca8 <feof@plt+0x2b408>
  42ed68:	ldr	x20, [x22, #24]
  42ed6c:	tbnz	w20, #31, 42f6a0 <feof@plt+0x2be00>
  42ed70:	ldr	x10, [sp, #72]
  42ed74:	mvn	w8, w10
  42ed78:	adds	w24, w25, w8
  42ed7c:	b.mi	42f6b8 <feof@plt+0x2be18>  // b.first
  42ed80:	ldr	w8, [x28, #16]
  42ed84:	add	w25, w24, w20
  42ed88:	adds	w8, w25, w8
  42ed8c:	b.mi	42f6d0 <feof@plt+0x2be30>  // b.first
  42ed90:	ldr	x19, [x22, #32]
  42ed94:	mov	w9, w8
  42ed98:	cmp	x19, x9
  42ed9c:	b.hi	42edd0 <feof@plt+0x2b530>  // b.pmore
  42eda0:	stp	x1, x0, [sp, #32]
  42eda4:	ldr	x0, [x22, #16]
  42eda8:	lsl	x8, x9, #1
  42edac:	add	x19, x8, #0x2
  42edb0:	mov	x1, x19
  42edb4:	str	x9, [sp, #48]
  42edb8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  42edbc:	str	x0, [x22, #16]
  42edc0:	ldr	x9, [sp, #48]
  42edc4:	ldr	x10, [sp, #72]
  42edc8:	ldp	x1, x0, [sp, #32]
  42edcc:	str	x19, [x22, #32]
  42edd0:	tbnz	w10, #31, 42f6e8 <feof@plt+0x2be48>
  42edd4:	cmp	w10, w1
  42edd8:	b.ge	42f700 <feof@plt+0x2be60>  // b.tcont
  42eddc:	cmp	w21, w1
  42ede0:	b.gt	42f718 <feof@plt+0x2be78>
  42ede4:	and	x8, x20, #0xffffffff
  42ede8:	mov	w2, w24
  42edec:	mov	x21, x9
  42edf0:	add	x9, x8, x2
  42edf4:	cmp	x9, x19
  42edf8:	b.cs	42f730 <feof@plt+0x2be90>  // b.hs, b.nlast
  42edfc:	ldr	x9, [x22, #16]
  42ee00:	add	x1, x0, x10
  42ee04:	add	x0, x9, x8
  42ee08:	bl	402fc0 <memcpy@plt>
  42ee0c:	ldr	x2, [x28, #16]
  42ee10:	ldr	x9, [x22, #32]
  42ee14:	mov	w8, w25
  42ee18:	add	x10, x2, x8
  42ee1c:	cmp	x10, x9
  42ee20:	b.cs	42f730 <feof@plt+0x2be90>  // b.hs, b.nlast
  42ee24:	ldr	x9, [x22, #16]
  42ee28:	ldr	x1, [x28, #8]
  42ee2c:	add	x0, x9, x8
  42ee30:	bl	402fc0 <memcpy@plt>
  42ee34:	ldr	x8, [x22, #32]
  42ee38:	str	x21, [x22, #24]
  42ee3c:	cmp	x8, x21
  42ee40:	b.ls	42f748 <feof@plt+0x2bea8>  // b.plast
  42ee44:	ldr	x8, [x22, #16]
  42ee48:	mov	x25, x26
  42ee4c:	add	x27, x27, #0x1
  42ee50:	strb	wzr, [x8, x21]
  42ee54:	ldr	x8, [sp, #80]
  42ee58:	ldr	w9, [x22, #12]
  42ee5c:	str	w8, [x22, #4]
  42ee60:	ldr	w8, [x28, #16]
  42ee64:	add	w8, w24, w8
  42ee68:	add	w8, w8, w9
  42ee6c:	str	w8, [x22, #12]
  42ee70:	ldr	x22, [sp, #88]
  42ee74:	mov	x24, x23
  42ee78:	ldr	x8, [sp, #264]
  42ee7c:	cbnz	x8, 42eb8c <feof@plt+0x2b2ec>
  42ee80:	b	42eb9c <feof@plt+0x2b2fc>
  42ee84:	cmp	w28, #0x4
  42ee88:	mov	w8, #0x4                   	// #4
  42ee8c:	mov	x0, xzr
  42ee90:	mov	w19, wzr
  42ee94:	csel	w23, w8, w1, cc  // cc = lo, ul, last
  42ee98:	mov	w21, #0x1                   	// #1
  42ee9c:	mov	w8, w23
  42eea0:	lsl	x8, x8, #3
  42eea4:	add	x1, x8, #0x8
  42eea8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  42eeac:	and	w8, w23, #0x7fffffff
  42eeb0:	stp	w8, w19, [x0]
  42eeb4:	cbz	w21, 42eb68 <feof@plt+0x2b2c8>
  42eeb8:	cbz	w28, 42ef5c <feof@plt+0x2b6bc>
  42eebc:	sub	w10, w28, #0x1
  42eec0:	add	x9, x24, #0x8
  42eec4:	cmp	w10, #0x3
  42eec8:	add	x8, x0, #0x8
  42eecc:	b.cs	42eed8 <feof@plt+0x2b638>  // b.hs, b.nlast
  42eed0:	mov	w10, w28
  42eed4:	b	42ef4c <feof@plt+0x2b6ac>
  42eed8:	lsl	x11, x10, #3
  42eedc:	add	x12, x24, x11
  42eee0:	add	x12, x12, #0x10
  42eee4:	cmp	x8, x12
  42eee8:	b.cs	42ef04 <feof@plt+0x2b664>  // b.hs, b.nlast
  42eeec:	add	x11, x0, x11
  42eef0:	add	x11, x11, #0x10
  42eef4:	cmp	x11, x9
  42eef8:	b.ls	42ef04 <feof@plt+0x2b664>  // b.plast
  42eefc:	mov	w10, w28
  42ef00:	b	42ef4c <feof@plt+0x2b6ac>
  42ef04:	add	x11, x10, #0x1
  42ef08:	and	x12, x11, #0x1fffffffc
  42ef0c:	lsl	x9, x12, #3
  42ef10:	add	x14, x24, x9
  42ef14:	add	x13, x0, #0x18
  42ef18:	sub	w10, w28, w12
  42ef1c:	add	x8, x8, x9
  42ef20:	add	x9, x14, #0x8
  42ef24:	add	x14, x24, #0x18
  42ef28:	mov	x15, x12
  42ef2c:	ldp	q0, q1, [x14, #-16]
  42ef30:	subs	x15, x15, #0x4
  42ef34:	add	x14, x14, #0x20
  42ef38:	stp	q0, q1, [x13, #-16]
  42ef3c:	add	x13, x13, #0x20
  42ef40:	b.ne	42ef2c <feof@plt+0x2b68c>  // b.any
  42ef44:	cmp	x11, x12
  42ef48:	b.eq	42ef5c <feof@plt+0x2b6bc>  // b.none
  42ef4c:	ldr	x11, [x9], #8
  42ef50:	subs	w10, w10, #0x1
  42ef54:	str	x11, [x8], #8
  42ef58:	b.ne	42ef4c <feof@plt+0x2b6ac>  // b.any
  42ef5c:	str	w28, [x0, #4]
  42ef60:	b	42eb68 <feof@plt+0x2b2c8>
  42ef64:	ldr	w27, [sp, #284]
  42ef68:	cbz	x24, 42f4a4 <feof@plt+0x2bc04>
  42ef6c:	ldr	w8, [x24, #4]
  42ef70:	cbz	w8, 42f4a4 <feof@plt+0x2bc04>
  42ef74:	ldrb	w8, [sp, #250]
  42ef78:	cbz	w8, 42eff0 <feof@plt+0x2b750>
  42ef7c:	ldr	w8, [sp, #280]
  42ef80:	cmp	w8, #0x4
  42ef84:	b.lt	42efb0 <feof@plt+0x2b710>  // b.tstop
  42ef88:	mov	w19, wzr
  42ef8c:	ldr	x0, [sp, #144]
  42ef90:	mov	w1, #0x20                  	// #32
  42ef94:	bl	433718 <feof@plt+0x2fe78>
  42ef98:	ldr	w8, [sp, #280]
  42ef9c:	add	w19, w19, #0x1
  42efa0:	sub	w9, w8, #0x3
  42efa4:	cmp	w19, w9
  42efa8:	b.lt	42ef8c <feof@plt+0x2b6ec>  // b.tstop
  42efac:	b	42efb4 <feof@plt+0x2b714>
  42efb0:	mov	w19, wzr
  42efb4:	ldr	x0, [sp, #144]
  42efb8:	cmp	w19, w8
  42efbc:	b.ge	42efdc <feof@plt+0x2b73c>  // b.tcont
  42efc0:	mov	w1, #0x20                  	// #32
  42efc4:	bl	433718 <feof@plt+0x2fe78>
  42efc8:	ldr	w8, [sp, #280]
  42efcc:	ldr	x0, [sp, #144]
  42efd0:	add	w19, w19, #0x1
  42efd4:	cmp	w19, w8
  42efd8:	b.lt	42efc0 <feof@plt+0x2b720>  // b.tstop
  42efdc:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  42efe0:	add	x1, x1, #0x56c
  42efe4:	bl	4354fc <feof@plt+0x31c5c>
  42efe8:	ldr	w8, [x24, #4]
  42efec:	cbz	w8, 42f4a4 <feof@plt+0x2bc04>
  42eff0:	mov	w19, wzr
  42eff4:	b	42f018 <feof@plt+0x2b778>
  42eff8:	add	x28, x20, #0x18
  42effc:	ldr	w8, [x28]
  42f000:	add	w21, w27, w8
  42f004:	ldr	w8, [x24, #4]
  42f008:	add	w19, w19, #0x1
  42f00c:	mov	w27, w21
  42f010:	cmp	w8, w19
  42f014:	b.ls	42f4a8 <feof@plt+0x2bc08>  // b.plast
  42f018:	add	x8, x24, w19, uxtw #3
  42f01c:	ldr	x20, [x8, #8]
  42f020:	ldp	w23, w28, [x20]
  42f024:	add	w8, w28, #0x1
  42f028:	cmp	w23, w8
  42f02c:	b.ne	42f0a4 <feof@plt+0x2b804>  // b.any
  42f030:	ldr	w21, [x20, #8]
  42f034:	cmp	w27, w21
  42f038:	b.le	42f1cc <feof@plt+0x2b92c>
  42f03c:	ldr	w8, [sp, #204]
  42f040:	cmn	w8, #0x1
  42f044:	b.eq	42f060 <feof@plt+0x2b7c0>  // b.none
  42f048:	ldr	x8, [sp, #192]
  42f04c:	ldr	x1, [sp, #240]
  42f050:	ldr	x0, [x8]
  42f054:	bl	4354fc <feof@plt+0x31c5c>
  42f058:	mov	w8, #0xffffffff            	// #-1
  42f05c:	str	w8, [sp, #204]
  42f060:	ldr	x0, [sp, #144]
  42f064:	bl	435e80 <feof@plt+0x325e0>
  42f068:	ldrb	w8, [sp, #250]
  42f06c:	cbz	w8, 42f1c8 <feof@plt+0x2b928>
  42f070:	ldr	w8, [sp, #280]
  42f074:	cmp	w8, #0x4
  42f078:	b.lt	42f18c <feof@plt+0x2b8ec>  // b.tstop
  42f07c:	mov	w22, wzr
  42f080:	ldr	x0, [sp, #144]
  42f084:	mov	w1, #0x20                  	// #32
  42f088:	bl	433718 <feof@plt+0x2fe78>
  42f08c:	ldr	w8, [sp, #280]
  42f090:	add	w22, w22, #0x1
  42f094:	sub	w9, w8, #0x3
  42f098:	cmp	w22, w9
  42f09c:	b.lt	42f080 <feof@plt+0x2b7e0>  // b.tstop
  42f0a0:	b	42f190 <feof@plt+0x2b8f0>
  42f0a4:	ldr	x10, [sp, #256]
  42f0a8:	cbz	x10, 42f11c <feof@plt+0x2b87c>
  42f0ac:	ldr	w8, [x10, #4]
  42f0b0:	cbz	w8, 42f11c <feof@plt+0x2b87c>
  42f0b4:	mov	x9, xzr
  42f0b8:	add	x11, x10, #0x8
  42f0bc:	add	x10, x10, #0x30
  42f0c0:	b	42f0dc <feof@plt+0x2b83c>
  42f0c4:	add	x9, x9, #0x1
  42f0c8:	cmp	x9, x8
  42f0cc:	csel	x11, x10, xzr, cc  // cc = lo, ul, last
  42f0d0:	cmp	x8, x9
  42f0d4:	add	x10, x10, #0x28
  42f0d8:	b.eq	42f11c <feof@plt+0x2b87c>  // b.none
  42f0dc:	ldr	w12, [x11]
  42f0e0:	cmp	w12, w22
  42f0e4:	b.ne	42f0c4 <feof@plt+0x2b824>  // b.any
  42f0e8:	ldr	w12, [x11, #4]
  42f0ec:	cmp	w12, w23
  42f0f0:	b.ne	42f0c4 <feof@plt+0x2b824>  // b.any
  42f0f4:	ldr	w12, [x11, #8]
  42f0f8:	cmp	w12, w22
  42f0fc:	b.ne	42f0c4 <feof@plt+0x2b824>  // b.any
  42f100:	ldr	w11, [x11, #12]
  42f104:	cmp	w11, w28
  42f108:	b.ne	42f0c4 <feof@plt+0x2b824>  // b.any
  42f10c:	ldr	x8, [x20, #24]
  42f110:	cbz	x8, 42f11c <feof@plt+0x2b87c>
  42f114:	mov	w21, w27
  42f118:	b	42f350 <feof@plt+0x2bab0>
  42f11c:	cmp	w27, w23
  42f120:	b.le	42f2a0 <feof@plt+0x2ba00>
  42f124:	ldr	w8, [sp, #204]
  42f128:	cmn	w8, #0x1
  42f12c:	b.eq	42f148 <feof@plt+0x2b8a8>  // b.none
  42f130:	ldr	x8, [sp, #192]
  42f134:	ldr	x1, [sp, #240]
  42f138:	ldr	x0, [x8]
  42f13c:	bl	4354fc <feof@plt+0x31c5c>
  42f140:	mov	w8, #0xffffffff            	// #-1
  42f144:	str	w8, [sp, #204]
  42f148:	ldr	x0, [sp, #144]
  42f14c:	bl	435e80 <feof@plt+0x325e0>
  42f150:	ldrb	w8, [sp, #250]
  42f154:	cbz	w8, 42f29c <feof@plt+0x2b9fc>
  42f158:	ldr	w8, [sp, #280]
  42f15c:	cmp	w8, #0x4
  42f160:	b.lt	42f264 <feof@plt+0x2b9c4>  // b.tstop
  42f164:	mov	w21, wzr
  42f168:	ldr	x0, [sp, #144]
  42f16c:	mov	w1, #0x20                  	// #32
  42f170:	bl	433718 <feof@plt+0x2fe78>
  42f174:	ldr	w8, [sp, #280]
  42f178:	add	w21, w21, #0x1
  42f17c:	sub	w9, w8, #0x3
  42f180:	cmp	w21, w9
  42f184:	b.lt	42f168 <feof@plt+0x2b8c8>  // b.tstop
  42f188:	b	42f268 <feof@plt+0x2b9c8>
  42f18c:	mov	w22, wzr
  42f190:	ldr	x0, [sp, #144]
  42f194:	cmp	w22, w8
  42f198:	b.ge	42f1b8 <feof@plt+0x2b918>  // b.tcont
  42f19c:	mov	w1, #0x20                  	// #32
  42f1a0:	bl	433718 <feof@plt+0x2fe78>
  42f1a4:	ldr	w8, [sp, #280]
  42f1a8:	ldr	x0, [sp, #144]
  42f1ac:	add	w22, w22, #0x1
  42f1b0:	cmp	w22, w8
  42f1b4:	b.lt	42f19c <feof@plt+0x2b8fc>  // b.tstop
  42f1b8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  42f1bc:	add	x1, x1, #0x56c
  42f1c0:	bl	4354fc <feof@plt+0x31c5c>
  42f1c4:	ldr	x22, [sp, #88]
  42f1c8:	ldr	w27, [sp, #284]
  42f1cc:	cmp	w27, w21
  42f1d0:	b.ge	42f1f4 <feof@plt+0x2b954>  // b.tcont
  42f1d4:	sub	w22, w21, w27
  42f1d8:	ldr	x0, [sp, #144]
  42f1dc:	mov	w1, #0x20                  	// #32
  42f1e0:	bl	433718 <feof@plt+0x2fe78>
  42f1e4:	subs	w22, w22, #0x1
  42f1e8:	b.ne	42f1d8 <feof@plt+0x2b938>  // b.any
  42f1ec:	ldr	x22, [sp, #88]
  42f1f0:	mov	w27, w21
  42f1f4:	ldr	w8, [sp, #204]
  42f1f8:	cmn	w8, #0x2
  42f1fc:	b.eq	42f230 <feof@plt+0x2b990>  // b.none
  42f200:	cmn	w8, #0x1
  42f204:	b.eq	42f218 <feof@plt+0x2b978>  // b.none
  42f208:	ldr	x8, [sp, #192]
  42f20c:	ldr	x1, [sp, #240]
  42f210:	ldr	x0, [x8]
  42f214:	bl	4354fc <feof@plt+0x31c5c>
  42f218:	ldr	x8, [sp, #192]
  42f21c:	mov	w9, #0xfffffffe            	// #-2
  42f220:	str	w9, [sp, #204]
  42f224:	ldr	x1, [sp, #224]
  42f228:	ldr	x0, [x8]
  42f22c:	bl	4354fc <feof@plt+0x31c5c>
  42f230:	ldr	x0, [sp, #144]
  42f234:	ldr	x1, [x20, #16]
  42f238:	bl	4354fc <feof@plt+0x31c5c>
  42f23c:	ldr	w8, [sp, #204]
  42f240:	cmn	w8, #0x1
  42f244:	b.eq	42eff8 <feof@plt+0x2b758>  // b.none
  42f248:	ldr	x8, [sp, #192]
  42f24c:	ldr	x1, [sp, #240]
  42f250:	ldr	x0, [x8]
  42f254:	bl	4354fc <feof@plt+0x31c5c>
  42f258:	mov	w8, #0xffffffff            	// #-1
  42f25c:	str	w8, [sp, #204]
  42f260:	b	42eff8 <feof@plt+0x2b758>
  42f264:	mov	w21, wzr
  42f268:	ldr	x0, [sp, #144]
  42f26c:	cmp	w21, w8
  42f270:	b.ge	42f290 <feof@plt+0x2b9f0>  // b.tcont
  42f274:	mov	w1, #0x20                  	// #32
  42f278:	bl	433718 <feof@plt+0x2fe78>
  42f27c:	ldr	w8, [sp, #280]
  42f280:	ldr	x0, [sp, #144]
  42f284:	add	w21, w21, #0x1
  42f288:	cmp	w21, w8
  42f28c:	b.lt	42f274 <feof@plt+0x2b9d4>  // b.tstop
  42f290:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  42f294:	add	x1, x1, #0x56c
  42f298:	bl	4354fc <feof@plt+0x31c5c>
  42f29c:	ldr	w27, [sp, #284]
  42f2a0:	cmp	w27, w23
  42f2a4:	b.ge	42f2c4 <feof@plt+0x2ba24>  // b.tcont
  42f2a8:	sub	w21, w23, w27
  42f2ac:	ldr	x0, [sp, #144]
  42f2b0:	mov	w1, #0x20                  	// #32
  42f2b4:	bl	433718 <feof@plt+0x2fe78>
  42f2b8:	subs	w21, w21, #0x1
  42f2bc:	b.ne	42f2ac <feof@plt+0x2ba0c>  // b.any
  42f2c0:	mov	w27, w23
  42f2c4:	ldr	w8, [sp, #204]
  42f2c8:	cmn	w8, #0x3
  42f2cc:	b.eq	42f300 <feof@plt+0x2ba60>  // b.none
  42f2d0:	cmn	w8, #0x1
  42f2d4:	b.eq	42f2e8 <feof@plt+0x2ba48>  // b.none
  42f2d8:	ldr	x8, [sp, #192]
  42f2dc:	ldr	x1, [sp, #240]
  42f2e0:	ldr	x0, [x8]
  42f2e4:	bl	4354fc <feof@plt+0x31c5c>
  42f2e8:	ldr	x8, [sp, #192]
  42f2ec:	mov	w9, #0xfffffffd            	// #-3
  42f2f0:	str	w9, [sp, #204]
  42f2f4:	ldr	x1, [sp, #232]
  42f2f8:	ldr	x0, [x8]
  42f2fc:	bl	4354fc <feof@plt+0x31c5c>
  42f300:	cmp	w27, w28
  42f304:	b.le	42f310 <feof@plt+0x2ba70>
  42f308:	mov	w21, w27
  42f30c:	b	42f32c <feof@plt+0x2ba8c>
  42f310:	ldr	x0, [sp, #144]
  42f314:	mov	w1, #0x2d                  	// #45
  42f318:	bl	433718 <feof@plt+0x2fe78>
  42f31c:	add	w21, w27, #0x1
  42f320:	cmp	w27, w28
  42f324:	mov	w27, w21
  42f328:	b.lt	42f310 <feof@plt+0x2ba70>  // b.tstop
  42f32c:	ldr	w8, [sp, #204]
  42f330:	cmn	w8, #0x1
  42f334:	b.eq	42f350 <feof@plt+0x2bab0>  // b.none
  42f338:	ldr	x8, [sp, #192]
  42f33c:	ldr	x1, [sp, #240]
  42f340:	ldr	x0, [x8]
  42f344:	bl	4354fc <feof@plt+0x31c5c>
  42f348:	mov	w8, #0xffffffff            	// #-1
  42f34c:	str	w8, [sp, #204]
  42f350:	mov	x28, x20
  42f354:	ldr	x8, [x28, #24]!
  42f358:	cbz	x8, 42f004 <feof@plt+0x2b764>
  42f35c:	cmp	w21, w23
  42f360:	b.le	42f408 <feof@plt+0x2bb68>
  42f364:	ldr	w8, [sp, #204]
  42f368:	cmn	w8, #0x1
  42f36c:	b.eq	42f388 <feof@plt+0x2bae8>  // b.none
  42f370:	ldr	x8, [sp, #192]
  42f374:	ldr	x1, [sp, #240]
  42f378:	ldr	x0, [x8]
  42f37c:	bl	4354fc <feof@plt+0x31c5c>
  42f380:	mov	w8, #0xffffffff            	// #-1
  42f384:	str	w8, [sp, #204]
  42f388:	ldr	x0, [sp, #144]
  42f38c:	bl	435e80 <feof@plt+0x325e0>
  42f390:	ldrb	w8, [sp, #250]
  42f394:	cbz	w8, 42f404 <feof@plt+0x2bb64>
  42f398:	ldr	w8, [sp, #280]
  42f39c:	cmp	w8, #0x4
  42f3a0:	b.lt	42f3cc <feof@plt+0x2bb2c>  // b.tstop
  42f3a4:	mov	w21, wzr
  42f3a8:	ldr	x0, [sp, #144]
  42f3ac:	mov	w1, #0x20                  	// #32
  42f3b0:	bl	433718 <feof@plt+0x2fe78>
  42f3b4:	ldr	w8, [sp, #280]
  42f3b8:	add	w21, w21, #0x1
  42f3bc:	sub	w9, w8, #0x3
  42f3c0:	cmp	w21, w9
  42f3c4:	b.lt	42f3a8 <feof@plt+0x2bb08>  // b.tstop
  42f3c8:	b	42f3d0 <feof@plt+0x2bb30>
  42f3cc:	mov	w21, wzr
  42f3d0:	ldr	x0, [sp, #144]
  42f3d4:	cmp	w21, w8
  42f3d8:	b.ge	42f3f8 <feof@plt+0x2bb58>  // b.tcont
  42f3dc:	mov	w1, #0x20                  	// #32
  42f3e0:	bl	433718 <feof@plt+0x2fe78>
  42f3e4:	ldr	w8, [sp, #280]
  42f3e8:	ldr	x0, [sp, #144]
  42f3ec:	add	w21, w21, #0x1
  42f3f0:	cmp	w21, w8
  42f3f4:	b.lt	42f3dc <feof@plt+0x2bb3c>  // b.tstop
  42f3f8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  42f3fc:	add	x1, x1, #0x56c
  42f400:	bl	4354fc <feof@plt+0x31c5c>
  42f404:	ldr	w21, [sp, #284]
  42f408:	cmp	w21, w23
  42f40c:	b.ge	42f430 <feof@plt+0x2bb90>  // b.tcont
  42f410:	sub	w21, w23, w21
  42f414:	ldr	x0, [sp, #144]
  42f418:	mov	w1, #0x20                  	// #32
  42f41c:	bl	433718 <feof@plt+0x2fe78>
  42f420:	subs	w21, w21, #0x1
  42f424:	b.ne	42f414 <feof@plt+0x2bb74>  // b.any
  42f428:	mov	w27, w23
  42f42c:	b	42f434 <feof@plt+0x2bb94>
  42f430:	mov	w27, w21
  42f434:	ldr	w8, [sp, #204]
  42f438:	cmn	w8, #0x2
  42f43c:	b.eq	42f470 <feof@plt+0x2bbd0>  // b.none
  42f440:	cmn	w8, #0x1
  42f444:	b.eq	42f458 <feof@plt+0x2bbb8>  // b.none
  42f448:	ldr	x8, [sp, #192]
  42f44c:	ldr	x1, [sp, #240]
  42f450:	ldr	x0, [x8]
  42f454:	bl	4354fc <feof@plt+0x31c5c>
  42f458:	ldr	x8, [sp, #192]
  42f45c:	mov	w9, #0xfffffffe            	// #-2
  42f460:	str	w9, [sp, #204]
  42f464:	ldr	x1, [sp, #224]
  42f468:	ldr	x0, [x8]
  42f46c:	bl	4354fc <feof@plt+0x31c5c>
  42f470:	ldr	x0, [sp, #144]
  42f474:	ldr	x1, [x20, #16]
  42f478:	bl	4354fc <feof@plt+0x31c5c>
  42f47c:	ldr	w8, [sp, #204]
  42f480:	cmn	w8, #0x1
  42f484:	b.eq	42effc <feof@plt+0x2b75c>  // b.none
  42f488:	ldr	x8, [sp, #192]
  42f48c:	ldr	x1, [sp, #240]
  42f490:	ldr	x0, [x8]
  42f494:	bl	4354fc <feof@plt+0x31c5c>
  42f498:	mov	w8, #0xffffffff            	// #-1
  42f49c:	str	w8, [sp, #204]
  42f4a0:	b	42effc <feof@plt+0x2b75c>
  42f4a4:	mov	w21, w27
  42f4a8:	cmp	w21, #0x1
  42f4ac:	b.lt	42f4e0 <feof@plt+0x2bc40>  // b.tstop
  42f4b0:	ldr	w8, [sp, #204]
  42f4b4:	cmn	w8, #0x1
  42f4b8:	b.eq	42f4d4 <feof@plt+0x2bc34>  // b.none
  42f4bc:	ldr	x8, [sp, #192]
  42f4c0:	ldr	x1, [sp, #240]
  42f4c4:	ldr	x0, [x8]
  42f4c8:	bl	4354fc <feof@plt+0x31c5c>
  42f4cc:	mov	w8, #0xffffffff            	// #-1
  42f4d0:	str	w8, [sp, #204]
  42f4d4:	ldr	x0, [sp, #144]
  42f4d8:	bl	435e80 <feof@plt+0x325e0>
  42f4dc:	ldr	w21, [sp, #284]
  42f4e0:	tbz	w21, #31, 42f500 <feof@plt+0x2bc60>
  42f4e4:	sub	w19, w21, #0x1
  42f4e8:	ldr	x0, [sp, #144]
  42f4ec:	mov	w1, #0x20                  	// #32
  42f4f0:	bl	433718 <feof@plt+0x2fe78>
  42f4f4:	add	w19, w19, #0x1
  42f4f8:	cmn	w19, #0x1
  42f4fc:	b.lt	42f4e8 <feof@plt+0x2bc48>  // b.tstop
  42f500:	cbz	x24, 42e0b8 <feof@plt+0x2a818>
  42f504:	mov	x20, xzr
  42f508:	b	42f514 <feof@plt+0x2bc74>
  42f50c:	add	x20, x20, #0x1
  42f510:	cbz	x24, 42e0b8 <feof@plt+0x2a818>
  42f514:	ldr	w8, [x24, #4]
  42f518:	cmp	x20, x8
  42f51c:	b.cs	42e0a8 <feof@plt+0x2a808>  // b.hs, b.nlast
  42f520:	add	x8, x24, x20, lsl #3
  42f524:	ldr	x19, [x8, #8]
  42f528:	cbz	x19, 42f50c <feof@plt+0x2bc6c>
  42f52c:	ldr	x0, [x19, #16]
  42f530:	bl	4031d0 <free@plt>
  42f534:	mov	x0, x19
  42f538:	bl	403410 <_ZdlPv@plt>
  42f53c:	b	42f50c <feof@plt+0x2bc6c>
  42f540:	mov	w19, #0x2                   	// #2
  42f544:	b	42e8ec <feof@plt+0x2b04c>
  42f548:	ldr	x0, [x23]
  42f54c:	ldr	x1, [sp]
  42f550:	bl	435978 <feof@plt+0x320d8>
  42f554:	ldr	x0, [sp, #272]
  42f558:	cbz	x0, 42f56c <feof@plt+0x2bccc>
  42f55c:	ldr	w8, [x0]
  42f560:	tbnz	w8, #31, 42f588 <feof@plt+0x2bce8>
  42f564:	bl	4031d0 <free@plt>
  42f568:	str	xzr, [sp, #272]
  42f56c:	ldr	x0, [sp, #264]
  42f570:	cbz	x0, 42f59c <feof@plt+0x2bcfc>
  42f574:	ldr	w8, [x0]
  42f578:	tbnz	w8, #31, 42f598 <feof@plt+0x2bcf8>
  42f57c:	bl	4031d0 <free@plt>
  42f580:	str	xzr, [sp, #264]
  42f584:	b	42f59c <feof@plt+0x2bcfc>
  42f588:	str	wzr, [x0, #4]
  42f58c:	ldr	x0, [sp, #264]
  42f590:	cbnz	x0, 42f574 <feof@plt+0x2bcd4>
  42f594:	b	42f59c <feof@plt+0x2bcfc>
  42f598:	str	wzr, [x0, #4]
  42f59c:	ldr	x0, [sp, #256]
  42f5a0:	cbz	x0, 42f5bc <feof@plt+0x2bd1c>
  42f5a4:	ldr	w8, [x0]
  42f5a8:	tbnz	w8, #31, 42f5b8 <feof@plt+0x2bd18>
  42f5ac:	bl	4031d0 <free@plt>
  42f5b0:	str	xzr, [sp, #256]
  42f5b4:	b	42f5bc <feof@plt+0x2bd1c>
  42f5b8:	str	wzr, [x0, #4]
  42f5bc:	ldr	w8, [sp, #204]
  42f5c0:	cmn	w8, #0x1
  42f5c4:	b.eq	42f5d8 <feof@plt+0x2bd38>  // b.none
  42f5c8:	ldr	x8, [sp, #192]
  42f5cc:	ldr	x1, [sp, #240]
  42f5d0:	ldr	x0, [x8]
  42f5d4:	bl	4354fc <feof@plt+0x31c5c>
  42f5d8:	ldp	x20, x19, [sp, #416]
  42f5dc:	ldp	x22, x21, [sp, #400]
  42f5e0:	ldp	x24, x23, [sp, #384]
  42f5e4:	ldp	x26, x25, [sp, #368]
  42f5e8:	ldp	x28, x27, [sp, #352]
  42f5ec:	ldp	x29, x30, [sp, #336]
  42f5f0:	add	sp, sp, #0x1b0
  42f5f4:	ret
  42f5f8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f5fc:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f600:	add	x0, x0, #0x67
  42f604:	add	x2, x2, #0x16d
  42f608:	mov	w1, #0x609                 	// #1545
  42f60c:	bl	429434 <feof@plt+0x25b94>
  42f610:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f614:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f618:	add	x0, x0, #0x67
  42f61c:	add	x2, x2, #0x187
  42f620:	mov	w1, #0x6bc                 	// #1724
  42f624:	bl	429434 <feof@plt+0x25b94>
  42f628:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f62c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f630:	add	x0, x0, #0x67
  42f634:	add	x2, x2, #0xfa
  42f638:	mov	w1, #0x638                 	// #1592
  42f63c:	bl	429434 <feof@plt+0x25b94>
  42f640:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f644:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f648:	add	x0, x0, #0x67
  42f64c:	add	x2, x2, #0x16d
  42f650:	mov	w1, #0x612                 	// #1554
  42f654:	bl	429434 <feof@plt+0x25b94>
  42f658:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f65c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f660:	add	x0, x0, #0x67
  42f664:	add	x2, x2, #0x15b
  42f668:	mov	w1, #0x215                 	// #533
  42f66c:	bl	429434 <feof@plt+0x25b94>
  42f670:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f674:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f678:	add	x0, x0, #0x67
  42f67c:	add	x2, x2, #0x17e
  42f680:	mov	w1, #0x77b                 	// #1915
  42f684:	bl	429434 <feof@plt+0x25b94>
  42f688:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f68c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f690:	add	x0, x0, #0x67
  42f694:	add	x2, x2, #0x17e
  42f698:	mov	w1, #0x77d                 	// #1917
  42f69c:	bl	429434 <feof@plt+0x25b94>
  42f6a0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f6a4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f6a8:	add	x0, x0, #0x67
  42f6ac:	add	x2, x2, #0x17e
  42f6b0:	mov	w1, #0x792                 	// #1938
  42f6b4:	bl	429434 <feof@plt+0x25b94>
  42f6b8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f6bc:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f6c0:	add	x0, x0, #0x67
  42f6c4:	add	x2, x2, #0x17e
  42f6c8:	mov	w1, #0x794                 	// #1940
  42f6cc:	bl	429434 <feof@plt+0x25b94>
  42f6d0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f6d4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f6d8:	add	x0, x0, #0x67
  42f6dc:	add	x2, x2, #0x17e
  42f6e0:	mov	w1, #0x796                 	// #1942
  42f6e4:	bl	429434 <feof@plt+0x25b94>
  42f6e8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f6ec:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f6f0:	add	x0, x0, #0x19e
  42f6f4:	add	x2, x2, #0x1b0
  42f6f8:	mov	w1, #0x44                  	// #68
  42f6fc:	bl	429434 <feof@plt+0x25b94>
  42f700:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f704:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f708:	add	x0, x0, #0x19e
  42f70c:	add	x2, x2, #0x1b0
  42f710:	mov	w1, #0x45                  	// #69
  42f714:	bl	429434 <feof@plt+0x25b94>
  42f718:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f71c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f720:	add	x0, x0, #0x19e
  42f724:	add	x2, x2, #0x1b0
  42f728:	mov	w1, #0x47                  	// #71
  42f72c:	bl	429434 <feof@plt+0x25b94>
  42f730:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f734:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f738:	add	x0, x0, #0x67
  42f73c:	add	x2, x2, #0x194
  42f740:	mov	w1, #0x706                 	// #1798
  42f744:	bl	429434 <feof@plt+0x25b94>
  42f748:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f74c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f750:	add	x0, x0, #0x67
  42f754:	add	x2, x2, #0x1b8
  42f758:	mov	w1, #0x732                 	// #1842
  42f75c:	bl	429434 <feof@plt+0x25b94>
  42f760:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f764:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f768:	add	x0, x0, #0x67
  42f76c:	add	x2, x2, #0x121
  42f770:	mov	w1, #0x2be                 	// #702
  42f774:	bl	429434 <feof@plt+0x25b94>
  42f778:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f77c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f780:	add	x0, x0, #0x67
  42f784:	add	x2, x2, #0x121
  42f788:	mov	w1, #0x2ba                 	// #698
  42f78c:	bl	429434 <feof@plt+0x25b94>
  42f790:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f794:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f798:	add	x0, x0, #0x67
  42f79c:	add	x2, x2, #0xe4
  42f7a0:	mov	w1, #0x449                 	// #1097
  42f7a4:	bl	429434 <feof@plt+0x25b94>
  42f7a8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f7ac:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f7b0:	add	x0, x0, #0x67
  42f7b4:	add	x2, x2, #0x121
  42f7b8:	mov	w1, #0x2b9                 	// #697
  42f7bc:	bl	429434 <feof@plt+0x25b94>
  42f7c0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f7c4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f7c8:	add	x0, x0, #0x67
  42f7cc:	add	x2, x2, #0xc8
  42f7d0:	mov	w1, #0x408                 	// #1032
  42f7d4:	bl	429434 <feof@plt+0x25b94>
  42f7d8:	ldr	x8, [x0]
  42f7dc:	ldr	x9, [x1]
  42f7e0:	ldr	w8, [x8]
  42f7e4:	ldr	w9, [x9]
  42f7e8:	sub	w0, w8, w9
  42f7ec:	ret
  42f7f0:	ldr	w8, [x0]
  42f7f4:	ldr	w9, [x1]
  42f7f8:	sub	x10, x8, x9
  42f7fc:	cmp	x10, #0x0
  42f800:	mov	w9, #0x1                   	// #1
  42f804:	cneg	w8, w9, le
  42f808:	cbz	x10, 42f814 <feof@plt+0x2bf74>
  42f80c:	mov	w0, w8
  42f810:	ret
  42f814:	ldr	w8, [x0, #4]
  42f818:	ldr	w10, [x1, #4]
  42f81c:	sub	x8, x8, x10
  42f820:	cmp	x8, #0x0
  42f824:	cneg	w8, w9, le
  42f828:	csel	w8, wzr, w8, eq  // eq = none
  42f82c:	mov	w0, w8
  42f830:	ret
  42f834:	stp	x29, x30, [sp, #-64]!
  42f838:	str	x23, [sp, #16]
  42f83c:	stp	x22, x21, [sp, #32]
  42f840:	stp	x20, x19, [sp, #48]
  42f844:	mov	x29, sp
  42f848:	mov	w19, w1
  42f84c:	mov	w20, w0
  42f850:	adrp	x23, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42f854:	tbz	w20, #31, 42f888 <feof@plt+0x2bfe8>
  42f858:	ldr	x0, [x23, #408]
  42f85c:	mov	w1, w20
  42f860:	bl	44e3f4 <feof@plt+0x4ab54>
  42f864:	mov	w20, w0
  42f868:	tbz	w19, #31, 42f88c <feof@plt+0x2bfec>
  42f86c:	ldr	x0, [x23, #408]
  42f870:	mov	w1, w19
  42f874:	bl	44e3f4 <feof@plt+0x4ab54>
  42f878:	mov	w19, w0
  42f87c:	cmp	w20, #0x2
  42f880:	b.cs	42f894 <feof@plt+0x2bff4>  // b.hs, b.nlast
  42f884:	b	42f908 <feof@plt+0x2c068>
  42f888:	tbnz	w19, #31, 42f86c <feof@plt+0x2bfcc>
  42f88c:	cmp	w20, #0x2
  42f890:	b.cc	42f908 <feof@plt+0x2c068>  // b.lo, b.ul, b.last
  42f894:	cmp	w19, #0x1
  42f898:	b.ls	42f908 <feof@plt+0x2c068>  // b.plast
  42f89c:	ldr	x0, [x23, #408]
  42f8a0:	mov	w1, w20
  42f8a4:	bl	44e220 <feof@plt+0x4a980>
  42f8a8:	ldr	x8, [x23, #408]
  42f8ac:	mov	x21, x0
  42f8b0:	mov	w1, w19
  42f8b4:	mov	x0, x8
  42f8b8:	bl	44e220 <feof@plt+0x4a980>
  42f8bc:	mov	x22, x0
  42f8c0:	mov	x0, x21
  42f8c4:	bl	44f448 <feof@plt+0x4bba8>
  42f8c8:	cmp	x21, x22
  42f8cc:	b.ne	42f910 <feof@plt+0x2c070>  // b.any
  42f8d0:	tbz	w0, #0, 42f928 <feof@plt+0x2c088>
  42f8d4:	ldr	x0, [x23, #408]
  42f8d8:	mov	x1, x21
  42f8dc:	mov	w2, w20
  42f8e0:	bl	44f460 <feof@plt+0x4bbc0>
  42f8e4:	ldr	x8, [x23, #408]
  42f8e8:	mov	w20, w0
  42f8ec:	mov	x1, x21
  42f8f0:	mov	w2, w19
  42f8f4:	mov	x0, x8
  42f8f8:	bl	44f460 <feof@plt+0x4bbc0>
  42f8fc:	mov	w19, w0
  42f900:	tbz	w20, #31, 42f888 <feof@plt+0x2bfe8>
  42f904:	b	42f858 <feof@plt+0x2bfb8>
  42f908:	cmp	w20, w19
  42f90c:	b	42f93c <feof@plt+0x2c09c>
  42f910:	tbnz	w0, #0, 42f920 <feof@plt+0x2c080>
  42f914:	mov	x0, x22
  42f918:	bl	44f448 <feof@plt+0x4bba8>
  42f91c:	tbz	w0, #0, 42f930 <feof@plt+0x2c090>
  42f920:	mov	w0, wzr
  42f924:	b	42f940 <feof@plt+0x2c0a0>
  42f928:	mov	w0, #0x1                   	// #1
  42f92c:	b	42f940 <feof@plt+0x2c0a0>
  42f930:	ldr	x8, [x21, #8]
  42f934:	ldr	x9, [x22, #8]
  42f938:	cmp	x8, x9
  42f93c:	cset	w0, eq  // eq = none
  42f940:	ldp	x20, x19, [sp, #48]
  42f944:	ldp	x22, x21, [sp, #32]
  42f948:	ldr	x23, [sp, #16]
  42f94c:	ldp	x29, x30, [sp], #64
  42f950:	ret
  42f954:	stp	x29, x30, [sp, #-48]!
  42f958:	str	x21, [sp, #16]
  42f95c:	stp	x20, x19, [sp, #32]
  42f960:	mov	x29, sp
  42f964:	ldr	w8, [x0, #12]
  42f968:	cmp	w8, w1
  42f96c:	b.ne	42f980 <feof@plt+0x2c0e0>  // b.any
  42f970:	ldp	x20, x19, [sp, #32]
  42f974:	ldr	x21, [sp, #16]
  42f978:	ldp	x29, x30, [sp], #48
  42f97c:	ret
  42f980:	mov	x19, x0
  42f984:	mov	w20, w1
  42f988:	cmn	w8, #0x1
  42f98c:	b.eq	42f9a0 <feof@plt+0x2c100>  // b.none
  42f990:	ldr	x8, [x19]
  42f994:	ldr	x1, [x19, #48]
  42f998:	ldr	x0, [x8]
  42f99c:	bl	4354fc <feof@plt+0x31c5c>
  42f9a0:	add	w8, w20, #0x3
  42f9a4:	cmp	w8, #0x5
  42f9a8:	str	w20, [x19, #12]
  42f9ac:	b.hi	42fa40 <feof@plt+0x2c1a0>  // b.pmore
  42f9b0:	adrp	x9, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42f9b4:	add	x9, x9, #0x61
  42f9b8:	adr	x10, 42f970 <feof@plt+0x2c0d0>
  42f9bc:	ldrb	w11, [x9, x8]
  42f9c0:	add	x10, x10, x11, lsl #2
  42f9c4:	br	x10
  42f9c8:	ldr	x8, [x19]
  42f9cc:	ldr	x1, [x19, #40]
  42f9d0:	ldr	x0, [x8]
  42f9d4:	b	42fa64 <feof@plt+0x2c1c4>
  42f9d8:	ldr	x8, [x19]
  42f9dc:	ldr	x1, [x19, #16]
  42f9e0:	ldr	x0, [x8]
  42f9e4:	b	42fa64 <feof@plt+0x2c1c4>
  42f9e8:	ldr	x8, [x19]
  42f9ec:	ldr	x1, [x19, #32]
  42f9f0:	ldr	x0, [x8]
  42f9f4:	b	42fa64 <feof@plt+0x2c1c4>
  42f9f8:	ldr	x8, [x19]
  42f9fc:	ldr	w0, [x19, #8]
  42fa00:	ldr	x20, [x8]
  42fa04:	ldrb	w21, [x20, #67]
  42fa08:	bl	4294dc <feof@plt+0x25c3c>
  42fa0c:	mov	x19, x0
  42fa10:	bl	4030b0 <strlen@plt>
  42fa14:	mov	x2, x0
  42fa18:	mov	w0, w21
  42fa1c:	mov	x1, x19
  42fa20:	bl	42c4e0 <feof@plt+0x28c40>
  42fa24:	mov	x1, x0
  42fa28:	mov	x0, x20
  42fa2c:	b	42fa64 <feof@plt+0x2c1c4>
  42fa30:	ldr	x8, [x19]
  42fa34:	ldr	x1, [x19, #24]
  42fa38:	ldr	x0, [x8]
  42fa3c:	b	42fa64 <feof@plt+0x2c1c4>
  42fa40:	cmp	w20, #0x2
  42fa44:	b.le	42fa74 <feof@plt+0x2c1d4>
  42fa48:	ldr	x8, [x19]
  42fa4c:	tst	w20, #0x1
  42fa50:	mov	w9, #0x10                  	// #16
  42fa54:	mov	w10, #0x18                  	// #24
  42fa58:	csel	x9, x10, x9, eq  // eq = none
  42fa5c:	ldr	x0, [x8]
  42fa60:	ldr	x1, [x19, x9]
  42fa64:	ldp	x20, x19, [sp, #32]
  42fa68:	ldr	x21, [sp, #16]
  42fa6c:	ldp	x29, x30, [sp], #48
  42fa70:	b	4354fc <feof@plt+0x31c5c>
  42fa74:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fa78:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fa7c:	add	x0, x0, #0x67
  42fa80:	add	x2, x2, #0x10f
  42fa84:	mov	w1, #0x17f                 	// #383
  42fa88:	bl	429434 <feof@plt+0x25b94>
  42fa8c:	stp	x29, x30, [sp, #-16]!
  42fa90:	mov	x29, sp
  42fa94:	ldr	x11, [x0, #120]
  42fa98:	cbz	x11, 42fb4c <feof@plt+0x2c2ac>
  42fa9c:	ldr	w10, [x11, #4]
  42faa0:	cbz	w10, 42fb4c <feof@plt+0x2c2ac>
  42faa4:	mov	x9, xzr
  42faa8:	add	x8, x11, #0x8
  42faac:	add	x11, x11, #0x30
  42fab0:	b	42fad4 <feof@plt+0x2c234>
  42fab4:	ldr	w12, [x8, #12]
  42fab8:	cmp	w12, w2
  42fabc:	b.ge	42fb60 <feof@plt+0x2c2c0>  // b.tcont
  42fac0:	add	x9, x9, #0x1
  42fac4:	cmp	x9, x10
  42fac8:	csel	x8, x11, xzr, cc  // cc = lo, ul, last
  42facc:	add	x11, x11, #0x28
  42fad0:	b.cs	42fb4c <feof@plt+0x2c2ac>  // b.hs, b.nlast
  42fad4:	ldr	w12, [x8, #16]
  42fad8:	cmp	w12, #0x2
  42fadc:	b.eq	42fac0 <feof@plt+0x2c220>  // b.none
  42fae0:	ldr	w13, [x8]
  42fae4:	ldr	w12, [x8, #8]
  42fae8:	cmp	w13, w12
  42faec:	b.hi	42fbb4 <feof@plt+0x2c314>  // b.pmore
  42faf0:	cmp	w13, w1
  42faf4:	b.hi	42fac0 <feof@plt+0x2c220>  // b.pmore
  42faf8:	b.ne	42fb18 <feof@plt+0x2c278>  // b.any
  42fafc:	ldr	w13, [x8, #4]
  42fb00:	cmp	w13, w2
  42fb04:	b.gt	42fac0 <feof@plt+0x2c220>
  42fb08:	cmp	w12, w1
  42fb0c:	b.hi	42fb60 <feof@plt+0x2c2c0>  // b.pmore
  42fb10:	b.eq	42fab4 <feof@plt+0x2c214>  // b.none
  42fb14:	b	42fbe4 <feof@plt+0x2c344>
  42fb18:	cmp	w13, w1
  42fb1c:	b.cs	42fbcc <feof@plt+0x2c32c>  // b.hs, b.nlast
  42fb20:	cmp	w12, w1
  42fb24:	b.cc	42fac0 <feof@plt+0x2c220>  // b.lo, b.ul, b.last
  42fb28:	b.hi	42fb58 <feof@plt+0x2c2b8>  // b.pmore
  42fb2c:	cmp	w12, w1
  42fb30:	b.eq	42fab4 <feof@plt+0x2c214>  // b.none
  42fb34:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fb38:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fb3c:	add	x0, x0, #0x67
  42fb40:	add	x2, x2, #0x14c
  42fb44:	mov	w1, #0x20b                 	// #523
  42fb48:	bl	429434 <feof@plt+0x25b94>
  42fb4c:	mov	w0, wzr
  42fb50:	ldp	x29, x30, [sp], #16
  42fb54:	ret
  42fb58:	cmp	w13, w12
  42fb5c:	b.cs	42fbfc <feof@plt+0x2c35c>  // b.hs, b.nlast
  42fb60:	str	w9, [x5]
  42fb64:	strb	wzr, [x5, #4]
  42fb68:	ldr	w9, [x8, #16]
  42fb6c:	cbnz	w9, 42fb94 <feof@plt+0x2c2f4>
  42fb70:	ldr	w9, [x8, #20]
  42fb74:	cmp	w9, w1
  42fb78:	b.ne	42fb94 <feof@plt+0x2c2f4>  // b.any
  42fb7c:	ldr	w8, [x8, #24]
  42fb80:	cmp	w8, w2
  42fb84:	b.ne	42fb94 <feof@plt+0x2c2f4>  // b.any
  42fb88:	mov	w8, #0x1                   	// #1
  42fb8c:	strb	w8, [x5, #4]
  42fb90:	b	42fba8 <feof@plt+0x2c308>
  42fb94:	cmp	w2, w3
  42fb98:	mov	w0, wzr
  42fb9c:	b.lt	42fb50 <feof@plt+0x2c2b0>  // b.tstop
  42fba0:	cmp	w2, w4
  42fba4:	b.gt	42fb50 <feof@plt+0x2c2b0>
  42fba8:	mov	w0, #0x1                   	// #1
  42fbac:	ldp	x29, x30, [sp], #16
  42fbb0:	ret
  42fbb4:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fbb8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fbbc:	add	x0, x0, #0x67
  42fbc0:	add	x2, x2, #0x14c
  42fbc4:	mov	w1, #0x1d8                 	// #472
  42fbc8:	bl	429434 <feof@plt+0x25b94>
  42fbcc:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fbd0:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fbd4:	add	x0, x0, #0x67
  42fbd8:	add	x2, x2, #0x14c
  42fbdc:	mov	w1, #0x1fb                 	// #507
  42fbe0:	bl	429434 <feof@plt+0x25b94>
  42fbe4:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fbe8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fbec:	add	x0, x0, #0x67
  42fbf0:	add	x2, x2, #0x14c
  42fbf4:	mov	w1, #0x1f3                 	// #499
  42fbf8:	bl	429434 <feof@plt+0x25b94>
  42fbfc:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fc00:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fc04:	add	x0, x0, #0x67
  42fc08:	add	x2, x2, #0x14c
  42fc0c:	mov	w1, #0x207                 	// #519
  42fc10:	bl	429434 <feof@plt+0x25b94>
  42fc14:	ldr	w8, [x0, #4]
  42fc18:	ldr	w9, [x1, #4]
  42fc1c:	sub	x10, x8, x9
  42fc20:	cmp	x10, #0x0
  42fc24:	mov	w9, #0x1                   	// #1
  42fc28:	cneg	w8, w9, le
  42fc2c:	cbz	x10, 42fc38 <feof@plt+0x2c398>
  42fc30:	mov	w0, w8
  42fc34:	ret
  42fc38:	ldr	w8, [x0]
  42fc3c:	ldr	w10, [x1]
  42fc40:	sub	x8, x8, x10
  42fc44:	cmp	x8, #0x0
  42fc48:	cneg	w8, w9, le
  42fc4c:	csel	w8, wzr, w8, eq  // eq = none
  42fc50:	mov	w0, w8
  42fc54:	ret
  42fc58:	stp	x29, x30, [sp, #-32]!
  42fc5c:	stp	x20, x19, [sp, #16]
  42fc60:	mov	x29, sp
  42fc64:	cbz	w1, 42fcdc <feof@plt+0x2c43c>
  42fc68:	cmp	w1, #0x1
  42fc6c:	b.ne	42fce8 <feof@plt+0x2c448>  // b.any
  42fc70:	adrp	x20, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42fc74:	ldr	x8, [x20, #360]
  42fc78:	mov	x19, x0
  42fc7c:	cbnz	x8, 42fc98 <feof@plt+0x2c3f8>
  42fc80:	mov	w0, #0x10                  	// #16
  42fc84:	bl	403440 <_Znwm@plt>
  42fc88:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fc8c:	add	x8, x8, #0x328
  42fc90:	stp	x8, xzr, [x0]
  42fc94:	str	x0, [x20, #360]
  42fc98:	adrp	x8, 42f000 <feof@plt+0x2b760>
  42fc9c:	ldr	x12, [x19]
  42fca0:	add	x8, x8, #0xd00
  42fca4:	adrp	x9, 42f000 <feof@plt+0x2b760>
  42fca8:	adrp	x10, 430000 <feof@plt+0x2c760>
  42fcac:	adrp	x11, 430000 <feof@plt+0x2c760>
  42fcb0:	str	x8, [x19, #136]
  42fcb4:	adrp	x8, 430000 <feof@plt+0x2c760>
  42fcb8:	add	x9, x9, #0xd04
  42fcbc:	add	x10, x10, #0x3c4
  42fcc0:	add	x11, x11, #0x3c8
  42fcc4:	add	x8, x8, #0x3dc
  42fcc8:	str	x9, [x19, #152]
  42fccc:	stp	x10, x11, [x19, #248]
  42fcd0:	str	x8, [x19, #264]
  42fcd4:	strb	wzr, [x19, #119]
  42fcd8:	strb	wzr, [x12, #67]
  42fcdc:	ldp	x20, x19, [sp, #16]
  42fce0:	ldp	x29, x30, [sp], #32
  42fce4:	ret
  42fce8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fcec:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fcf0:	add	x0, x0, #0x1ca
  42fcf4:	add	x2, x2, #0x1ee
  42fcf8:	mov	w1, #0xee                  	// #238
  42fcfc:	bl	429434 <feof@plt+0x25b94>
  42fd00:	ret
  42fd04:	sub	sp, sp, #0x70
  42fd08:	stp	x29, x30, [sp, #16]
  42fd0c:	stp	x28, x27, [sp, #32]
  42fd10:	stp	x26, x25, [sp, #48]
  42fd14:	stp	x24, x23, [sp, #64]
  42fd18:	stp	x22, x21, [sp, #80]
  42fd1c:	stp	x20, x19, [sp, #96]
  42fd20:	add	x29, sp, #0x10
  42fd24:	mov	x22, x0
  42fd28:	mov	w0, #0x38                  	// #56
  42fd2c:	mov	w21, w2
  42fd30:	mov	x20, x1
  42fd34:	bl	403440 <_Znwm@plt>
  42fd38:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fd3c:	movi	v0.2d, #0x0
  42fd40:	add	x8, x8, #0x2f8
  42fd44:	mov	x24, x0
  42fd48:	stp	q0, q0, [x0]
  42fd4c:	str	q0, [x0, #32]
  42fd50:	str	x8, [x0]
  42fd54:	stp	xzr, xzr, [x0, #24]
  42fd58:	stp	xzr, xzr, [x0, #40]
  42fd5c:	strb	wzr, [x0, #52]
  42fd60:	mov	w0, #0xd                   	// #13
  42fd64:	bl	427ae8 <feof@plt+0x24248>
  42fd68:	mov	w8, w0
  42fd6c:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  42fd70:	lsl	x8, x8, #4
  42fd74:	add	x9, x9, #0x700
  42fd78:	ldr	w19, [x9, x8]
  42fd7c:	mov	w23, w0
  42fd80:	mov	w1, #0x10                  	// #16
  42fd84:	mov	x0, x19
  42fd88:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  42fd8c:	cbz	x0, 43034c <feof@plt+0x2caac>
  42fd90:	cbz	w19, 42fddc <feof@plt+0x2c53c>
  42fd94:	cmp	w19, #0x1
  42fd98:	b.ne	42fda4 <feof@plt+0x2c504>  // b.any
  42fd9c:	mov	x8, xzr
  42fda0:	b	42fdc8 <feof@plt+0x2c528>
  42fda4:	and	x8, x19, #0xfffffffe
  42fda8:	add	x9, x0, #0x10
  42fdac:	mov	x10, x8
  42fdb0:	stur	xzr, [x9, #-16]
  42fdb4:	str	xzr, [x9], #32
  42fdb8:	subs	x10, x10, #0x2
  42fdbc:	b.ne	42fdb0 <feof@plt+0x2c510>  // b.any
  42fdc0:	cmp	x8, x19
  42fdc4:	b.eq	42fddc <feof@plt+0x2c53c>  // b.none
  42fdc8:	sub	x9, x19, x8
  42fdcc:	add	x8, x0, x8, lsl #4
  42fdd0:	subs	x9, x9, #0x1
  42fdd4:	str	xzr, [x8], #16
  42fdd8:	b.ne	42fdd0 <feof@plt+0x2c530>  // b.any
  42fddc:	stp	x0, x19, [x24, #8]
  42fde0:	str	w23, [x24, #48]
  42fde4:	ldr	w8, [x20, #56]
  42fde8:	adrp	x9, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fdec:	add	x9, x9, #0x248
  42fdf0:	ldr	x19, [x9, x8, lsl #3]
  42fdf4:	mov	x0, x19
  42fdf8:	bl	4030b0 <strlen@plt>
  42fdfc:	subs	x23, x0, #0x2
  42fe00:	b.ls	430364 <feof@plt+0x2cac4>  // b.plast
  42fe04:	ldrb	w8, [x19, x23]
  42fe08:	cmp	w8, #0x3a
  42fe0c:	b.ne	43037c <feof@plt+0x2cadc>  // b.any
  42fe10:	add	x8, x0, x19
  42fe14:	ldurb	w8, [x8, #-1]
  42fe18:	cmp	w8, #0x20
  42fe1c:	b.ne	430394 <feof@plt+0x2caf4>  // b.any
  42fe20:	mov	x0, x19
  42fe24:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  42fe28:	mov	x19, x0
  42fe2c:	strb	wzr, [x0, x23]
  42fe30:	mov	w0, #0x10                  	// #16
  42fe34:	bl	403440 <_Znwm@plt>
  42fe38:	mov	x1, x19
  42fe3c:	mov	x23, x0
  42fe40:	bl	430d20 <feof@plt+0x2d480>
  42fe44:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fe48:	add	x1, x1, #0x220
  42fe4c:	mov	x0, x24
  42fe50:	mov	x2, x23
  42fe54:	bl	430870 <feof@plt+0x2cfd0>
  42fe58:	mov	x0, x19
  42fe5c:	bl	4031d0 <free@plt>
  42fe60:	mov	w0, #0x10                  	// #16
  42fe64:	bl	403440 <_Znwm@plt>
  42fe68:	ldr	x8, [x22]
  42fe6c:	mov	x19, x0
  42fe70:	mov	x0, x8
  42fe74:	bl	43388c <feof@plt+0x2ffec>
  42fe78:	mov	x1, x0
  42fe7c:	mov	x0, x19
  42fe80:	bl	430d20 <feof@plt+0x2d480>
  42fe84:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fe88:	add	x1, x1, #0x225
  42fe8c:	mov	x0, x24
  42fe90:	mov	x2, x19
  42fe94:	bl	430870 <feof@plt+0x2cfd0>
  42fe98:	ldr	x0, [x22]
  42fe9c:	bl	4338dc <feof@plt+0x3003c>
  42fea0:	ldr	x8, [x22, #184]
  42fea4:	ldp	w3, w1, [x20, #56]
  42fea8:	mov	x0, x22
  42feac:	mov	w2, w21
  42feb0:	blr	x8
  42feb4:	cbz	x0, 42feec <feof@plt+0x2c64c>
  42feb8:	mov	x19, x0
  42febc:	mov	w0, #0x10                  	// #16
  42fec0:	bl	403440 <_Znwm@plt>
  42fec4:	mov	x1, x19
  42fec8:	mov	x21, x0
  42fecc:	bl	430d20 <feof@plt+0x2d480>
  42fed0:	adrp	x1, 48e000 <_obstack_memory_used@@Base+0x122fc>
  42fed4:	add	x1, x1, #0x463
  42fed8:	mov	x0, x24
  42fedc:	mov	x2, x21
  42fee0:	bl	430870 <feof@plt+0x2cfd0>
  42fee4:	mov	x0, x19
  42fee8:	bl	4031d0 <free@plt>
  42feec:	adrp	x19, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42fef0:	ldr	x8, [x19, #368]
  42fef4:	adrp	x21, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42fef8:	add	x21, x21, #0x328
  42fefc:	cbz	x8, 42ff18 <feof@plt+0x2c678>
  42ff00:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42ff04:	ldr	x0, [x8, #376]
  42ff08:	cbz	x0, 4303ac <feof@plt+0x2cb0c>
  42ff0c:	mov	x1, x24
  42ff10:	bl	430b0c <feof@plt+0x2d26c>
  42ff14:	b	42ff54 <feof@plt+0x2c6b4>
  42ff18:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42ff1c:	ldr	x0, [x8, #360]
  42ff20:	mov	x1, x24
  42ff24:	bl	430b0c <feof@plt+0x2d26c>
  42ff28:	mov	w0, #0x10                  	// #16
  42ff2c:	str	x24, [x19, #368]
  42ff30:	bl	403440 <_Znwm@plt>
  42ff34:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42ff38:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  42ff3c:	mov	x2, x0
  42ff40:	stp	x21, xzr, [x0]
  42ff44:	str	x0, [x8, #376]
  42ff48:	add	x1, x1, #0x22d
  42ff4c:	mov	x0, x24
  42ff50:	bl	430870 <feof@plt+0x2cfd0>
  42ff54:	ldr	x20, [x20, #40]
  42ff58:	mov	w0, #0x10                  	// #16
  42ff5c:	bl	403440 <_Znwm@plt>
  42ff60:	adrp	x1, 4bd000 <_obstack_memory_used@@Base+0x412fc>
  42ff64:	mov	x2, x0
  42ff68:	stp	x21, xzr, [x0]
  42ff6c:	add	x1, x1, #0xa22
  42ff70:	mov	x0, x24
  42ff74:	stp	x24, x2, [sp]
  42ff78:	bl	430870 <feof@plt+0x2cfd0>
  42ff7c:	ldr	w8, [x20, #8]
  42ff80:	cbz	w8, 430184 <feof@plt+0x2c8e4>
  42ff84:	mov	w22, wzr
  42ff88:	adrp	x21, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  42ff8c:	b	42ffac <feof@plt+0x2c70c>
  42ff90:	ldr	x0, [sp, #8]
  42ff94:	mov	x1, x27
  42ff98:	bl	430b0c <feof@plt+0x2d26c>
  42ff9c:	ldr	w8, [x20, #8]
  42ffa0:	add	w22, w22, #0x1
  42ffa4:	cmp	w22, w8
  42ffa8:	b.cs	430184 <feof@plt+0x2c8e4>  // b.hs, b.nlast
  42ffac:	mov	x0, x20
  42ffb0:	mov	w1, w22
  42ffb4:	bl	450840 <feof@plt+0x4cfa0>
  42ffb8:	mov	x28, x0
  42ffbc:	ldr	w1, [x0]
  42ffc0:	ldr	x0, [x21, #408]
  42ffc4:	bl	44e504 <feof@plt+0x4ac64>
  42ffc8:	cbz	w0, 42ff9c <feof@plt+0x2c6fc>
  42ffcc:	mov	w24, w0
  42ffd0:	ldr	w1, [x28]
  42ffd4:	ldr	x0, [x21, #408]
  42ffd8:	bl	44e40c <feof@plt+0x4ab6c>
  42ffdc:	ldr	x8, [x21, #408]
  42ffe0:	ldr	w1, [x28]
  42ffe4:	mov	x25, x0
  42ffe8:	mov	x0, x8
  42ffec:	bl	44e40c <feof@plt+0x4ab6c>
  42fff0:	mov	x26, x0
  42fff4:	mov	w0, #0x38                  	// #56
  42fff8:	bl	403440 <_Znwm@plt>
  42fffc:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430000:	movi	v0.2d, #0x0
  430004:	add	x8, x8, #0x2f8
  430008:	mov	x27, x0
  43000c:	stp	q0, q0, [x0]
  430010:	str	q0, [x0, #32]
  430014:	stp	xzr, xzr, [x0, #40]
  430018:	str	x8, [x0]
  43001c:	stp	xzr, xzr, [x0, #24]
  430020:	strb	wzr, [x0, #52]
  430024:	mov	w0, #0xd                   	// #13
  430028:	bl	427ae8 <feof@plt+0x24248>
  43002c:	mov	w8, w0
  430030:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  430034:	lsl	x8, x8, #4
  430038:	add	x9, x9, #0x700
  43003c:	ldr	w19, [x9, x8]
  430040:	mov	w23, w0
  430044:	mov	w1, #0x10                  	// #16
  430048:	mov	x0, x19
  43004c:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  430050:	cbz	x0, 43034c <feof@plt+0x2caac>
  430054:	lsr	x26, x26, #32
  430058:	cbz	w19, 4300a4 <feof@plt+0x2c804>
  43005c:	cmp	w19, #0x1
  430060:	b.ne	43006c <feof@plt+0x2c7cc>  // b.any
  430064:	mov	x8, xzr
  430068:	b	430090 <feof@plt+0x2c7f0>
  43006c:	and	x8, x19, #0xfffffffe
  430070:	add	x9, x0, #0x10
  430074:	mov	x10, x8
  430078:	stur	xzr, [x9, #-16]
  43007c:	str	xzr, [x9], #32
  430080:	subs	x10, x10, #0x2
  430084:	b.ne	430078 <feof@plt+0x2c7d8>  // b.any
  430088:	cmp	x8, x19
  43008c:	b.eq	4300a4 <feof@plt+0x2c804>  // b.none
  430090:	sub	x9, x19, x8
  430094:	add	x8, x0, x8, lsl #4
  430098:	subs	x9, x9, #0x1
  43009c:	str	xzr, [x8], #16
  4300a0:	b.ne	430098 <feof@plt+0x2c7f8>  // b.any
  4300a4:	stp	x0, x19, [x27, #8]
  4300a8:	mov	w0, w24
  4300ac:	str	w23, [x27, #48]
  4300b0:	bl	43042c <feof@plt+0x2cb8c>
  4300b4:	adrp	x1, 4bd000 <_obstack_memory_used@@Base+0x412fc>
  4300b8:	mov	x2, x0
  4300bc:	mov	x0, x27
  4300c0:	add	x1, x1, #0x2c2
  4300c4:	bl	430870 <feof@plt+0x2cfd0>
  4300c8:	cmp	w24, w25
  4300cc:	b.ne	4300e4 <feof@plt+0x2c844>  // b.any
  4300d0:	cmp	w24, w26
  4300d4:	b.ne	430108 <feof@plt+0x2c868>  // b.any
  4300d8:	ldr	x0, [x28, #8]
  4300dc:	cbnz	x0, 43012c <feof@plt+0x2c88c>
  4300e0:	b	42ff90 <feof@plt+0x2c6f0>
  4300e4:	mov	w0, w25
  4300e8:	bl	43042c <feof@plt+0x2cb8c>
  4300ec:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4300f0:	mov	x2, x0
  4300f4:	mov	x0, x27
  4300f8:	add	x1, x1, #0x236
  4300fc:	bl	430870 <feof@plt+0x2cfd0>
  430100:	cmp	w24, w26
  430104:	b.eq	4300d8 <feof@plt+0x2c838>  // b.none
  430108:	mov	w0, w26
  43010c:	bl	43042c <feof@plt+0x2cb8c>
  430110:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430114:	mov	x2, x0
  430118:	mov	x0, x27
  43011c:	add	x1, x1, #0x23c
  430120:	bl	430870 <feof@plt+0x2cfd0>
  430124:	ldr	x0, [x28, #8]
  430128:	cbz	x0, 42ff90 <feof@plt+0x2c6f0>
  43012c:	ldr	x8, [x0]
  430130:	mov	w1, w22
  430134:	ldr	x8, [x8, #16]
  430138:	blr	x8
  43013c:	mov	x19, x0
  430140:	mov	x23, x1
  430144:	cbz	x0, 430170 <feof@plt+0x2c8d0>
  430148:	mov	w0, #0x10                  	// #16
  43014c:	bl	403440 <_Znwm@plt>
  430150:	mov	x1, x19
  430154:	mov	x24, x0
  430158:	bl	430d20 <feof@plt+0x2d480>
  43015c:	adrp	x1, 4ba000 <_obstack_memory_used@@Base+0x3e2fc>
  430160:	mov	x0, x27
  430164:	add	x1, x1, #0x311
  430168:	mov	x2, x24
  43016c:	bl	430870 <feof@plt+0x2cfd0>
  430170:	tst	w23, #0xff
  430174:	b.eq	42ff90 <feof@plt+0x2c6f0>  // b.none
  430178:	mov	x0, x19
  43017c:	bl	4031d0 <free@plt>
  430180:	b	42ff90 <feof@plt+0x2c6f0>
  430184:	ldr	w8, [x20, #120]
  430188:	cbz	w8, 43032c <feof@plt+0x2ca8c>
  43018c:	mov	w0, #0x10                  	// #16
  430190:	bl	403440 <_Znwm@plt>
  430194:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430198:	add	x8, x8, #0x328
  43019c:	mov	x21, x0
  4301a0:	stp	x8, xzr, [x0]
  4301a4:	ldr	x0, [sp]
  4301a8:	adrp	x1, 4bd000 <_obstack_memory_used@@Base+0x412fc>
  4301ac:	add	x1, x1, #0x27b
  4301b0:	mov	x2, x21
  4301b4:	bl	430870 <feof@plt+0x2cfd0>
  4301b8:	ldr	w8, [x20, #120]
  4301bc:	cbz	w8, 43032c <feof@plt+0x2ca8c>
  4301c0:	adrp	x19, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4301c4:	adrp	x22, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  4301c8:	adrp	x23, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4301cc:	mov	w27, wzr
  4301d0:	add	x19, x19, #0x236
  4301d4:	add	x22, x22, #0x983
  4301d8:	add	x23, x23, #0xcb3
  4301dc:	b	430258 <feof@plt+0x2c9b8>
  4301e0:	stp	x0, x26, [x24, #8]
  4301e4:	str	w25, [x24, #48]
  4301e8:	ldr	w0, [x28]
  4301ec:	bl	43042c <feof@plt+0x2cb8c>
  4301f0:	mov	x2, x0
  4301f4:	mov	x0, x24
  4301f8:	mov	x1, x19
  4301fc:	bl	430870 <feof@plt+0x2cfd0>
  430200:	ldr	w0, [x28, #4]
  430204:	bl	43042c <feof@plt+0x2cb8c>
  430208:	mov	x2, x0
  43020c:	mov	x0, x24
  430210:	mov	x1, x22
  430214:	bl	430870 <feof@plt+0x2cfd0>
  430218:	mov	w0, #0x10                  	// #16
  43021c:	bl	403440 <_Znwm@plt>
  430220:	ldr	x1, [x28, #8]
  430224:	mov	x25, x0
  430228:	bl	430d20 <feof@plt+0x2d480>
  43022c:	mov	x0, x24
  430230:	mov	x1, x23
  430234:	mov	x2, x25
  430238:	bl	430870 <feof@plt+0x2cfd0>
  43023c:	mov	x0, x21
  430240:	mov	x1, x24
  430244:	bl	430b0c <feof@plt+0x2d26c>
  430248:	ldr	w8, [x20, #120]
  43024c:	add	w27, w27, #0x1
  430250:	cmp	w27, w8
  430254:	b.cs	43032c <feof@plt+0x2ca8c>  // b.hs, b.nlast
  430258:	cmp	w27, #0x1
  43025c:	b.gt	43026c <feof@plt+0x2c9cc>
  430260:	add	x8, x20, w27, sxtw #3
  430264:	add	x8, x8, #0x80
  430268:	b	430278 <feof@plt+0x2c9d8>
  43026c:	ldr	x8, [x20, #152]
  430270:	add	x8, x8, w27, sxtw #3
  430274:	sub	x8, x8, #0x10
  430278:	ldr	x28, [x8]
  43027c:	mov	w0, #0x38                  	// #56
  430280:	bl	403440 <_Znwm@plt>
  430284:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430288:	movi	v0.2d, #0x0
  43028c:	add	x8, x8, #0x2f8
  430290:	mov	x24, x0
  430294:	stp	q0, q0, [x0]
  430298:	str	q0, [x0, #32]
  43029c:	stp	xzr, xzr, [x0, #40]
  4302a0:	str	x8, [x0]
  4302a4:	stp	xzr, xzr, [x0, #24]
  4302a8:	strb	wzr, [x0, #52]
  4302ac:	mov	w0, #0xd                   	// #13
  4302b0:	bl	427ae8 <feof@plt+0x24248>
  4302b4:	mov	w8, w0
  4302b8:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4302bc:	lsl	x8, x8, #4
  4302c0:	add	x9, x9, #0x700
  4302c4:	ldr	w26, [x9, x8]
  4302c8:	mov	w25, w0
  4302cc:	mov	w1, #0x10                  	// #16
  4302d0:	mov	x0, x26
  4302d4:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  4302d8:	cbz	x0, 43034c <feof@plt+0x2caac>
  4302dc:	cbz	w26, 4301e0 <feof@plt+0x2c940>
  4302e0:	cmp	w26, #0x1
  4302e4:	b.ne	4302f0 <feof@plt+0x2ca50>  // b.any
  4302e8:	mov	x8, xzr
  4302ec:	b	430314 <feof@plt+0x2ca74>
  4302f0:	and	x8, x26, #0xfffffffe
  4302f4:	add	x9, x0, #0x10
  4302f8:	mov	x10, x8
  4302fc:	stur	xzr, [x9, #-16]
  430300:	str	xzr, [x9], #32
  430304:	subs	x10, x10, #0x2
  430308:	b.ne	4302fc <feof@plt+0x2ca5c>  // b.any
  43030c:	cmp	x8, x26
  430310:	b.eq	4301e0 <feof@plt+0x2c940>  // b.none
  430314:	sub	x9, x26, x8
  430318:	add	x8, x0, x8, lsl #4
  43031c:	subs	x9, x9, #0x1
  430320:	str	xzr, [x8], #16
  430324:	b.ne	43031c <feof@plt+0x2ca7c>  // b.any
  430328:	b	4301e0 <feof@plt+0x2c940>
  43032c:	ldp	x20, x19, [sp, #96]
  430330:	ldp	x22, x21, [sp, #80]
  430334:	ldp	x24, x23, [sp, #64]
  430338:	ldp	x26, x25, [sp, #48]
  43033c:	ldp	x28, x27, [sp, #32]
  430340:	ldp	x29, x30, [sp, #16]
  430344:	add	sp, sp, #0x70
  430348:	ret
  43034c:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  430350:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  430354:	add	x0, x0, #0x524
  430358:	add	x2, x2, #0x53b
  43035c:	mov	w1, #0x2b5                 	// #693
  430360:	bl	429434 <feof@plt+0x25b94>
  430364:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430368:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43036c:	add	x0, x0, #0x1ca
  430370:	add	x2, x2, #0x20c
  430374:	mov	w1, #0x82                  	// #130
  430378:	bl	429434 <feof@plt+0x25b94>
  43037c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430380:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430384:	add	x0, x0, #0x1ca
  430388:	add	x2, x2, #0x20c
  43038c:	mov	w1, #0x83                  	// #131
  430390:	bl	429434 <feof@plt+0x25b94>
  430394:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430398:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43039c:	add	x0, x0, #0x1ca
  4303a0:	add	x2, x2, #0x20c
  4303a4:	mov	w1, #0x84                  	// #132
  4303a8:	bl	429434 <feof@plt+0x25b94>
  4303ac:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4303b0:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4303b4:	add	x0, x0, #0x1ca
  4303b8:	add	x2, x2, #0x20c
  4303bc:	mov	w1, #0x9d                  	// #157
  4303c0:	bl	429434 <feof@plt+0x25b94>
  4303c4:	ret
  4303c8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4303cc:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4303d0:	str	xzr, [x8, #368]
  4303d4:	str	xzr, [x9, #376]
  4303d8:	ret
  4303dc:	stp	x29, x30, [sp, #-32]!
  4303e0:	stp	x20, x19, [sp, #16]
  4303e4:	mov	x29, sp
  4303e8:	adrp	x19, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4303ec:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4303f0:	ldr	x0, [x19, #360]
  4303f4:	ldr	x1, [x20, #1096]
  4303f8:	bl	4305bc <feof@plt+0x2cd1c>
  4303fc:	ldr	x1, [x20, #1096]
  430400:	mov	w0, #0xa                   	// #10
  430404:	bl	403480 <fputc@plt>
  430408:	ldr	x0, [x19, #360]
  43040c:	cbz	x0, 43041c <feof@plt+0x2cb7c>
  430410:	ldr	x8, [x0]
  430414:	ldr	x8, [x8, #8]
  430418:	blr	x8
  43041c:	str	xzr, [x19, #360]
  430420:	ldp	x20, x19, [sp, #16]
  430424:	ldp	x29, x30, [sp], #32
  430428:	ret
  43042c:	sub	sp, sp, #0x50
  430430:	stp	x29, x30, [sp, #32]
  430434:	str	x21, [sp, #48]
  430438:	stp	x20, x19, [sp, #64]
  43043c:	add	x29, sp, #0x20
  430440:	mov	x8, sp
  430444:	bl	4377f8 <feof@plt+0x33f58>
  430448:	mov	w0, #0x38                  	// #56
  43044c:	bl	403440 <_Znwm@plt>
  430450:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430454:	movi	v0.2d, #0x0
  430458:	add	x8, x8, #0x2f8
  43045c:	mov	x19, x0
  430460:	stp	q0, q0, [x0]
  430464:	str	q0, [x0, #32]
  430468:	str	x8, [x0]
  43046c:	stp	xzr, xzr, [x0, #24]
  430470:	stp	xzr, xzr, [x0, #40]
  430474:	strb	wzr, [x0, #52]
  430478:	mov	w0, #0xd                   	// #13
  43047c:	bl	427ae8 <feof@plt+0x24248>
  430480:	mov	w8, w0
  430484:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  430488:	lsl	x8, x8, #4
  43048c:	add	x9, x9, #0x700
  430490:	ldr	w21, [x9, x8]
  430494:	mov	w20, w0
  430498:	mov	w1, #0x10                  	// #16
  43049c:	mov	x0, x21
  4304a0:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  4304a4:	cbz	x0, 4305a4 <feof@plt+0x2cd04>
  4304a8:	cbz	w21, 4304f4 <feof@plt+0x2cc54>
  4304ac:	cmp	w21, #0x1
  4304b0:	b.ne	4304bc <feof@plt+0x2cc1c>  // b.any
  4304b4:	mov	x8, xzr
  4304b8:	b	4304e0 <feof@plt+0x2cc40>
  4304bc:	and	x8, x21, #0xfffffffe
  4304c0:	add	x9, x0, #0x10
  4304c4:	mov	x10, x8
  4304c8:	stur	xzr, [x9, #-16]
  4304cc:	str	xzr, [x9], #32
  4304d0:	subs	x10, x10, #0x2
  4304d4:	b.ne	4304c8 <feof@plt+0x2cc28>  // b.any
  4304d8:	cmp	x8, x21
  4304dc:	b.eq	4304f4 <feof@plt+0x2cc54>  // b.none
  4304e0:	sub	x9, x21, x8
  4304e4:	add	x8, x0, x8, lsl #4
  4304e8:	subs	x9, x9, #0x1
  4304ec:	str	xzr, [x8], #16
  4304f0:	b.ne	4304e8 <feof@plt+0x2cc48>  // b.any
  4304f4:	stp	x0, x21, [x19, #8]
  4304f8:	mov	w0, #0x10                  	// #16
  4304fc:	str	w20, [x19, #48]
  430500:	bl	403440 <_Znwm@plt>
  430504:	ldr	x1, [sp]
  430508:	mov	x20, x0
  43050c:	bl	430d20 <feof@plt+0x2d480>
  430510:	adrp	x1, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  430514:	add	x1, x1, #0xc2c
  430518:	mov	x0, x19
  43051c:	mov	x2, x20
  430520:	bl	430870 <feof@plt+0x2cfd0>
  430524:	mov	w0, #0x10                  	// #16
  430528:	bl	403440 <_Znwm@plt>
  43052c:	ldr	s0, [sp, #8]
  430530:	adrp	x20, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430534:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430538:	mov	x2, x0
  43053c:	sxtl	v0.2d, v0.2s
  430540:	add	x20, x20, #0x388
  430544:	scvtf	d0, d0
  430548:	add	x1, x1, #0xea7
  43054c:	mov	x0, x19
  430550:	str	x20, [x2]
  430554:	str	d0, [x2, #8]
  430558:	bl	430870 <feof@plt+0x2cfd0>
  43055c:	mov	w0, #0x10                  	// #16
  430560:	bl	403440 <_Znwm@plt>
  430564:	ldr	s0, [sp, #12]
  430568:	adrp	x1, 4c4000 <_obstack_memory_used@@Base+0x482fc>
  43056c:	mov	x2, x0
  430570:	str	x20, [x0]
  430574:	sxtl	v0.2d, v0.2s
  430578:	scvtf	d0, d0
  43057c:	str	d0, [x0, #8]
  430580:	add	x1, x1, #0x139
  430584:	mov	x0, x19
  430588:	bl	430870 <feof@plt+0x2cfd0>
  43058c:	mov	x0, x19
  430590:	ldp	x20, x19, [sp, #64]
  430594:	ldr	x21, [sp, #48]
  430598:	ldp	x29, x30, [sp, #32]
  43059c:	add	sp, sp, #0x50
  4305a0:	ret
  4305a4:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4305a8:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4305ac:	add	x0, x0, #0x524
  4305b0:	add	x2, x2, #0x53b
  4305b4:	mov	w1, #0x2b5                 	// #693
  4305b8:	bl	429434 <feof@plt+0x25b94>
  4305bc:	sub	sp, sp, #0x70
  4305c0:	stp	x29, x30, [sp, #80]
  4305c4:	stp	x20, x19, [sp, #96]
  4305c8:	add	x29, sp, #0x50
  4305cc:	mov	x19, x1
  4305d0:	mov	x20, x0
  4305d4:	add	x0, sp, #0x8
  4305d8:	mov	w1, wzr
  4305dc:	bl	435b30 <feof@plt+0x32290>
  4305e0:	ldr	x8, [sp, #16]
  4305e4:	add	x1, sp, #0x8
  4305e8:	mov	x0, x20
  4305ec:	str	x19, [x8, #192]
  4305f0:	ldr	x8, [x20]
  4305f4:	ldr	x8, [x8, #24]
  4305f8:	blr	x8
  4305fc:	add	x0, sp, #0x8
  430600:	bl	4357b0 <feof@plt+0x31f10>
  430604:	add	x0, sp, #0x8
  430608:	bl	435c34 <feof@plt+0x32394>
  43060c:	ldp	x20, x19, [sp, #96]
  430610:	ldp	x29, x30, [sp, #80]
  430614:	add	sp, sp, #0x70
  430618:	ret
  43061c:	stp	x29, x30, [sp, #-48]!
  430620:	str	x21, [sp, #16]
  430624:	stp	x20, x19, [sp, #32]
  430628:	mov	x29, sp
  43062c:	ldr	x8, [x0, #16]
  430630:	adrp	x9, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430634:	mov	x19, x0
  430638:	add	x9, x9, #0x2f8
  43063c:	cmp	x8, #0x1
  430640:	str	x9, [x0]
  430644:	b.lt	430668 <feof@plt+0x2cdc8>  // b.tstop
  430648:	ldr	x20, [x19, #8]
  43064c:	add	x21, x20, x8, lsl #4
  430650:	ldr	x9, [x20]
  430654:	cmp	x9, #0x1
  430658:	b.hi	430670 <feof@plt+0x2cdd0>  // b.pmore
  43065c:	add	x20, x20, #0x10
  430660:	cmp	x20, x21
  430664:	b.cc	430650 <feof@plt+0x2cdb0>  // b.lo, b.ul, b.last
  430668:	mov	x20, xzr
  43066c:	mov	x21, xzr
  430670:	orr	x9, x20, x21
  430674:	cbnz	x9, 43068c <feof@plt+0x2cdec>
  430678:	b	4306c8 <feof@plt+0x2ce28>
  43067c:	mov	x21, xzr
  430680:	mov	x20, xzr
  430684:	orr	x8, x20, x21
  430688:	cbz	x8, 4306c4 <feof@plt+0x2ce24>
  43068c:	ldr	x0, [x20]
  430690:	bl	4031d0 <free@plt>
  430694:	ldr	x0, [x20, #8]
  430698:	cbz	x0, 4306a8 <feof@plt+0x2ce08>
  43069c:	ldr	x8, [x0]
  4306a0:	ldr	x8, [x8, #8]
  4306a4:	blr	x8
  4306a8:	add	x20, x20, #0x10
  4306ac:	cmp	x20, x21
  4306b0:	b.cs	43067c <feof@plt+0x2cddc>  // b.hs, b.nlast
  4306b4:	ldr	x8, [x20]
  4306b8:	cmp	x8, #0x1
  4306bc:	b.ls	4306a8 <feof@plt+0x2ce08>  // b.plast
  4306c0:	b	430684 <feof@plt+0x2cde4>
  4306c4:	ldr	x8, [x19, #16]
  4306c8:	mov	x9, x8
  4306cc:	sub	x9, x9, #0x1
  4306d0:	cmp	x9, x8
  4306d4:	b.cc	4306cc <feof@plt+0x2ce2c>  // b.lo, b.ul, b.last
  4306d8:	ldrb	w8, [x19, #52]
  4306dc:	ldr	x0, [x19, #8]
  4306e0:	cbz	w8, 4306f4 <feof@plt+0x2ce54>
  4306e4:	ldp	x20, x19, [sp, #32]
  4306e8:	ldr	x21, [sp, #16]
  4306ec:	ldp	x29, x30, [sp], #48
  4306f0:	b	4161b8 <feof@plt+0x12918>
  4306f4:	ldp	x20, x19, [sp, #32]
  4306f8:	ldr	x21, [sp, #16]
  4306fc:	ldp	x29, x30, [sp], #48
  430700:	b	4031d0 <free@plt>
  430704:	stp	x29, x30, [sp, #-32]!
  430708:	str	x19, [sp, #16]
  43070c:	mov	x29, sp
  430710:	mov	x19, x0
  430714:	bl	43061c <feof@plt+0x2cd7c>
  430718:	mov	x0, x19
  43071c:	ldr	x19, [sp, #16]
  430720:	ldp	x29, x30, [sp], #32
  430724:	b	403410 <_ZdlPv@plt>
  430728:	stp	x29, x30, [sp, #-80]!
  43072c:	str	x25, [sp, #16]
  430730:	stp	x24, x23, [sp, #32]
  430734:	stp	x22, x21, [sp, #48]
  430738:	stp	x20, x19, [sp, #64]
  43073c:	mov	x29, sp
  430740:	mov	x19, x1
  430744:	mov	x20, x0
  430748:	mov	w1, #0x7b                  	// #123
  43074c:	mov	x0, x19
  430750:	bl	433718 <feof@plt+0x2fe78>
  430754:	ldp	x8, x9, [x20, #8]
  430758:	cmp	x9, #0x1
  43075c:	b.lt	430780 <feof@plt+0x2cee0>  // b.tstop
  430760:	add	x24, x8, x9, lsl #4
  430764:	mov	x25, x8
  430768:	ldr	x10, [x25]
  43076c:	cmp	x10, #0x1
  430770:	b.hi	430788 <feof@plt+0x2cee8>  // b.pmore
  430774:	add	x25, x25, #0x10
  430778:	cmp	x25, x24
  43077c:	b.cc	430768 <feof@plt+0x2cec8>  // b.lo, b.ul, b.last
  430780:	mov	x25, xzr
  430784:	mov	x24, xzr
  430788:	orr	x10, x25, x24
  43078c:	cbz	x10, 430850 <feof@plt+0x2cfb0>
  430790:	adrp	x21, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430794:	adrp	x22, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430798:	add	x21, x21, #0x3f3
  43079c:	add	x22, x22, #0x3f0
  4307a0:	cmp	x9, #0x1
  4307a4:	b.lt	4307c4 <feof@plt+0x2cf24>  // b.tstop
  4307a8:	add	x9, x8, x9, lsl #4
  4307ac:	ldr	x10, [x8]
  4307b0:	cmp	x10, #0x1
  4307b4:	b.hi	4307cc <feof@plt+0x2cf2c>  // b.pmore
  4307b8:	add	x8, x8, #0x10
  4307bc:	cmp	x8, x9
  4307c0:	b.cc	4307ac <feof@plt+0x2cf0c>  // b.lo, b.ul, b.last
  4307c4:	mov	x8, xzr
  4307c8:	mov	x9, xzr
  4307cc:	cmp	x25, x8
  4307d0:	b.ne	4307dc <feof@plt+0x2cf3c>  // b.any
  4307d4:	cmp	x24, x9
  4307d8:	b.eq	4307e8 <feof@plt+0x2cf48>  // b.none
  4307dc:	mov	x0, x19
  4307e0:	mov	x1, x22
  4307e4:	bl	4354fc <feof@plt+0x31c5c>
  4307e8:	ldp	x2, x23, [x25]
  4307ec:	mov	x0, x19
  4307f0:	mov	x1, x21
  4307f4:	bl	435d34 <feof@plt+0x32494>
  4307f8:	ldr	x8, [x23]
  4307fc:	mov	x0, x23
  430800:	mov	x1, x19
  430804:	ldr	x8, [x8, #24]
  430808:	blr	x8
  43080c:	add	x25, x25, #0x10
  430810:	cmp	x25, x24
  430814:	b.cs	430830 <feof@plt+0x2cf90>  // b.hs, b.nlast
  430818:	ldr	x8, [x25]
  43081c:	cmp	x8, #0x1
  430820:	b.ls	43080c <feof@plt+0x2cf6c>  // b.plast
  430824:	orr	x8, x25, x24
  430828:	cbnz	x8, 430840 <feof@plt+0x2cfa0>
  43082c:	b	430850 <feof@plt+0x2cfb0>
  430830:	mov	x24, xzr
  430834:	mov	x25, xzr
  430838:	orr	x8, x25, x24
  43083c:	cbz	x8, 430850 <feof@plt+0x2cfb0>
  430840:	ldp	x8, x9, [x20, #8]
  430844:	cmp	x9, #0x1
  430848:	b.ge	4307a8 <feof@plt+0x2cf08>  // b.tcont
  43084c:	b	4307c4 <feof@plt+0x2cf24>
  430850:	mov	x0, x19
  430854:	ldp	x20, x19, [sp, #64]
  430858:	ldp	x22, x21, [sp, #48]
  43085c:	ldp	x24, x23, [sp, #32]
  430860:	ldr	x25, [sp, #16]
  430864:	mov	w1, #0x7d                  	// #125
  430868:	ldp	x29, x30, [sp], #80
  43086c:	b	433718 <feof@plt+0x2fe78>
  430870:	sub	sp, sp, #0x40
  430874:	stp	x29, x30, [sp, #16]
  430878:	str	x21, [sp, #32]
  43087c:	stp	x20, x19, [sp, #48]
  430880:	add	x29, sp, #0x10
  430884:	str	x1, [x29, #24]
  430888:	cbz	x1, 430928 <feof@plt+0x2d088>
  43088c:	mov	x19, x2
  430890:	cbz	x2, 430940 <feof@plt+0x2d0a0>
  430894:	add	x20, x0, #0x8
  430898:	mov	x0, x1
  43089c:	bl	47adac <feof@plt+0x7750c>
  4308a0:	mov	w2, w0
  4308a4:	add	x1, x29, #0x18
  4308a8:	mov	x0, x20
  4308ac:	bl	430f74 <feof@plt+0x2d6d4>
  4308b0:	ldr	x8, [x0], #8
  4308b4:	cmp	x8, #0x0
  4308b8:	csel	x21, xzr, x0, eq  // eq = none
  4308bc:	cbz	x8, 4308dc <feof@plt+0x2d03c>
  4308c0:	ldr	x0, [x21]
  4308c4:	cbz	x0, 4308d4 <feof@plt+0x2d034>
  4308c8:	ldr	x8, [x0]
  4308cc:	ldr	x8, [x8, #8]
  4308d0:	blr	x8
  4308d4:	str	x19, [x21]
  4308d8:	b	430914 <feof@plt+0x2d074>
  4308dc:	ldr	x0, [x29, #24]
  4308e0:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  4308e4:	str	x0, [sp, #8]
  4308e8:	bl	47adac <feof@plt+0x7750c>
  4308ec:	mov	w2, w0
  4308f0:	add	x1, sp, #0x8
  4308f4:	mov	w3, #0x1                   	// #1
  4308f8:	mov	x0, x20
  4308fc:	bl	4310a8 <feof@plt+0x2d808>
  430900:	ldr	x8, [x0]
  430904:	cbnz	x8, 430910 <feof@plt+0x2d070>
  430908:	ldr	x8, [sp, #8]
  43090c:	str	x8, [x0]
  430910:	str	x19, [x0, #8]
  430914:	ldp	x20, x19, [sp, #48]
  430918:	ldr	x21, [sp, #32]
  43091c:	ldp	x29, x30, [sp, #16]
  430920:	add	sp, sp, #0x40
  430924:	ret
  430928:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43092c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  430930:	add	x0, x0, #0x3fa
  430934:	add	x2, x2, #0x48d
  430938:	mov	w1, #0x55                  	// #85
  43093c:	bl	429434 <feof@plt+0x25b94>
  430940:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430944:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  430948:	add	x0, x0, #0x3fa
  43094c:	add	x2, x2, #0x48d
  430950:	mov	w1, #0x56                  	// #86
  430954:	bl	429434 <feof@plt+0x25b94>
  430958:	stp	x29, x30, [sp, #-32]!
  43095c:	stp	x20, x19, [sp, #16]
  430960:	mov	x29, sp
  430964:	mov	x19, x0
  430968:	ldr	x0, [x0, #8]
  43096c:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430970:	add	x8, x8, #0x328
  430974:	str	x8, [x19]
  430978:	cbz	x0, 4309d4 <feof@plt+0x2d134>
  43097c:	mov	x20, xzr
  430980:	b	43098c <feof@plt+0x2d0ec>
  430984:	add	x20, x20, #0x1
  430988:	cbz	x0, 4309d4 <feof@plt+0x2d134>
  43098c:	ldr	w8, [x0, #4]
  430990:	cmp	x20, x8
  430994:	b.cs	4309bc <feof@plt+0x2d11c>  // b.hs, b.nlast
  430998:	add	x8, x0, x20, lsl #3
  43099c:	ldr	x8, [x8, #8]
  4309a0:	cbz	x8, 430984 <feof@plt+0x2d0e4>
  4309a4:	ldr	x9, [x8]
  4309a8:	mov	x0, x8
  4309ac:	ldr	x9, [x9, #8]
  4309b0:	blr	x9
  4309b4:	ldr	x0, [x19, #8]
  4309b8:	b	430984 <feof@plt+0x2d0e4>
  4309bc:	ldr	w8, [x0]
  4309c0:	tbnz	w8, #31, 4309d0 <feof@plt+0x2d130>
  4309c4:	bl	4031d0 <free@plt>
  4309c8:	str	xzr, [x19, #8]
  4309cc:	b	4309d4 <feof@plt+0x2d134>
  4309d0:	str	wzr, [x0, #4]
  4309d4:	ldp	x20, x19, [sp, #16]
  4309d8:	ldp	x29, x30, [sp], #32
  4309dc:	ret
  4309e0:	stp	x29, x30, [sp, #-32]!
  4309e4:	stp	x20, x19, [sp, #16]
  4309e8:	mov	x29, sp
  4309ec:	mov	x19, x0
  4309f0:	ldr	x0, [x0, #8]
  4309f4:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4309f8:	add	x8, x8, #0x328
  4309fc:	str	x8, [x19]
  430a00:	cbz	x0, 430a58 <feof@plt+0x2d1b8>
  430a04:	mov	x20, xzr
  430a08:	b	430a14 <feof@plt+0x2d174>
  430a0c:	add	x20, x20, #0x1
  430a10:	cbz	x0, 430a58 <feof@plt+0x2d1b8>
  430a14:	ldr	w8, [x0, #4]
  430a18:	cmp	x20, x8
  430a1c:	b.cs	430a44 <feof@plt+0x2d1a4>  // b.hs, b.nlast
  430a20:	add	x8, x0, x20, lsl #3
  430a24:	ldr	x8, [x8, #8]
  430a28:	cbz	x8, 430a0c <feof@plt+0x2d16c>
  430a2c:	ldr	x9, [x8]
  430a30:	mov	x0, x8
  430a34:	ldr	x9, [x9, #8]
  430a38:	blr	x9
  430a3c:	ldr	x0, [x19, #8]
  430a40:	b	430a0c <feof@plt+0x2d16c>
  430a44:	ldr	w8, [x0]
  430a48:	tbnz	w8, #31, 430a54 <feof@plt+0x2d1b4>
  430a4c:	bl	4031d0 <free@plt>
  430a50:	b	430a58 <feof@plt+0x2d1b8>
  430a54:	str	wzr, [x0, #4]
  430a58:	mov	x0, x19
  430a5c:	ldp	x20, x19, [sp, #16]
  430a60:	ldp	x29, x30, [sp], #32
  430a64:	b	403410 <_ZdlPv@plt>
  430a68:	stp	x29, x30, [sp, #-64]!
  430a6c:	str	x23, [sp, #16]
  430a70:	stp	x22, x21, [sp, #32]
  430a74:	stp	x20, x19, [sp, #48]
  430a78:	mov	x29, sp
  430a7c:	mov	x19, x1
  430a80:	mov	x20, x0
  430a84:	mov	w1, #0x5b                  	// #91
  430a88:	mov	x0, x19
  430a8c:	bl	433718 <feof@plt+0x2fe78>
  430a90:	ldr	x8, [x20, #8]
  430a94:	cbz	x8, 430af0 <feof@plt+0x2d250>
  430a98:	adrp	x21, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430a9c:	mov	x23, xzr
  430aa0:	add	x21, x21, #0x3f0
  430aa4:	b	430ac8 <feof@plt+0x2d228>
  430aa8:	ldr	x8, [x22]
  430aac:	mov	x0, x22
  430ab0:	mov	x1, x19
  430ab4:	ldr	x8, [x8, #24]
  430ab8:	blr	x8
  430abc:	ldr	x8, [x20, #8]
  430ac0:	add	x23, x23, #0x1
  430ac4:	cbz	x8, 430af0 <feof@plt+0x2d250>
  430ac8:	ldr	w9, [x8, #4]
  430acc:	cmp	x23, x9
  430ad0:	b.cs	430af0 <feof@plt+0x2d250>  // b.hs, b.nlast
  430ad4:	add	x8, x8, x23, lsl #3
  430ad8:	ldr	x22, [x8, #8]
  430adc:	cbz	x23, 430aa8 <feof@plt+0x2d208>
  430ae0:	mov	x0, x19
  430ae4:	mov	x1, x21
  430ae8:	bl	4354fc <feof@plt+0x31c5c>
  430aec:	b	430aa8 <feof@plt+0x2d208>
  430af0:	mov	x0, x19
  430af4:	ldp	x20, x19, [sp, #48]
  430af8:	ldp	x22, x21, [sp, #32]
  430afc:	ldr	x23, [sp, #16]
  430b00:	mov	w1, #0x5d                  	// #93
  430b04:	ldp	x29, x30, [sp], #64
  430b08:	b	433718 <feof@plt+0x2fe78>
  430b0c:	stp	x29, x30, [sp, #-80]!
  430b10:	str	x25, [sp, #16]
  430b14:	stp	x24, x23, [sp, #32]
  430b18:	stp	x22, x21, [sp, #48]
  430b1c:	stp	x20, x19, [sp, #64]
  430b20:	mov	x29, sp
  430b24:	cbz	x1, 430cc0 <feof@plt+0x2d420>
  430b28:	ldr	x23, [x0, #8]
  430b2c:	mov	x19, x1
  430b30:	mov	x20, x0
  430b34:	cbz	x23, 430b7c <feof@plt+0x2d2dc>
  430b38:	ldp	w8, w9, [x23]
  430b3c:	and	w0, w8, #0x7fffffff
  430b40:	cmp	w0, w9
  430b44:	b.ne	430c84 <feof@plt+0x2d3e4>  // b.any
  430b48:	tbnz	w8, #31, 430b8c <feof@plt+0x2d2ec>
  430b4c:	add	w1, w0, #0x1
  430b50:	bl	425fbc <feof@plt+0x2271c>
  430b54:	ldr	x8, [x20, #8]
  430b58:	mov	w9, w0
  430b5c:	lsl	x9, x9, #3
  430b60:	mov	w21, w0
  430b64:	add	x1, x9, #0x8
  430b68:	mov	w22, wzr
  430b6c:	cbz	x8, 430cb4 <feof@plt+0x2d414>
  430b70:	ldr	w25, [x8, #4]
  430b74:	mov	w24, wzr
  430b78:	b	430bbc <feof@plt+0x2d31c>
  430b7c:	mov	w22, wzr
  430b80:	mov	w24, wzr
  430b84:	mov	w21, #0x4                   	// #4
  430b88:	b	430ba8 <feof@plt+0x2d308>
  430b8c:	str	xzr, [x20, #8]
  430b90:	ldr	w22, [x23, #4]
  430b94:	mov	w8, #0x4                   	// #4
  430b98:	mov	w24, #0x1                   	// #1
  430b9c:	add	w9, w22, #0x1
  430ba0:	cmp	w9, #0x4
  430ba4:	csinc	w21, w8, w22, ls  // ls = plast
  430ba8:	mov	w9, w21
  430bac:	lsl	x9, x9, #3
  430bb0:	mov	x8, xzr
  430bb4:	mov	w25, wzr
  430bb8:	add	x1, x9, #0x8
  430bbc:	mov	x0, x8
  430bc0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  430bc4:	and	w8, w21, #0x7fffffff
  430bc8:	str	x0, [x20, #8]
  430bcc:	stp	w8, w25, [x0]
  430bd0:	cbz	w24, 430c84 <feof@plt+0x2d3e4>
  430bd4:	ldr	x11, [x20, #8]
  430bd8:	cbz	w22, 430c80 <feof@plt+0x2d3e0>
  430bdc:	sub	w12, w22, #0x1
  430be0:	add	x8, x23, #0x8
  430be4:	cmp	w12, #0x3
  430be8:	add	x9, x11, #0x8
  430bec:	b.cs	430bf8 <feof@plt+0x2d358>  // b.hs, b.nlast
  430bf0:	mov	w10, w22
  430bf4:	b	430c6c <feof@plt+0x2d3cc>
  430bf8:	lsl	x10, x12, #3
  430bfc:	add	x13, x23, x10
  430c00:	add	x13, x13, #0x10
  430c04:	cmp	x9, x13
  430c08:	b.cs	430c20 <feof@plt+0x2d380>  // b.hs, b.nlast
  430c0c:	add	x10, x11, x10
  430c10:	add	x10, x10, #0x10
  430c14:	cmp	x8, x10
  430c18:	mov	w10, w22
  430c1c:	b.cc	430c6c <feof@plt+0x2d3cc>  // b.lo, b.ul, b.last
  430c20:	add	x12, x12, #0x1
  430c24:	and	x13, x12, #0x1fffffffc
  430c28:	lsl	x8, x13, #3
  430c2c:	add	x14, x11, #0x18
  430c30:	add	x9, x23, x8
  430c34:	add	x11, x11, x8
  430c38:	sub	w10, w22, w13
  430c3c:	add	x8, x9, #0x8
  430c40:	add	x9, x11, #0x8
  430c44:	add	x11, x23, #0x18
  430c48:	mov	x15, x13
  430c4c:	ldp	q0, q1, [x11, #-16]
  430c50:	subs	x15, x15, #0x4
  430c54:	add	x11, x11, #0x20
  430c58:	stp	q0, q1, [x14, #-16]
  430c5c:	add	x14, x14, #0x20
  430c60:	b.ne	430c4c <feof@plt+0x2d3ac>  // b.any
  430c64:	cmp	x12, x13
  430c68:	b.eq	430c7c <feof@plt+0x2d3dc>  // b.none
  430c6c:	ldr	x11, [x8], #8
  430c70:	subs	w10, w10, #0x1
  430c74:	str	x11, [x9], #8
  430c78:	b.ne	430c6c <feof@plt+0x2d3cc>  // b.any
  430c7c:	ldr	x11, [x20, #8]
  430c80:	str	w22, [x11, #4]
  430c84:	ldr	x8, [x20, #8]
  430c88:	ldr	x25, [sp, #16]
  430c8c:	ldr	w9, [x8, #4]
  430c90:	add	w10, w9, #0x1
  430c94:	add	x9, x8, x9, lsl #3
  430c98:	str	w10, [x8, #4]
  430c9c:	str	x19, [x9, #8]
  430ca0:	ldp	x20, x19, [sp, #64]
  430ca4:	ldp	x22, x21, [sp, #48]
  430ca8:	ldp	x24, x23, [sp, #32]
  430cac:	ldp	x29, x30, [sp], #80
  430cb0:	ret
  430cb4:	mov	w24, wzr
  430cb8:	mov	w25, wzr
  430cbc:	b	430bbc <feof@plt+0x2d31c>
  430cc0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430cc4:	adrp	x2, 484000 <_obstack_memory_used@@Base+0x82fc>
  430cc8:	add	x0, x0, #0x3fa
  430ccc:	add	x2, x2, #0x8c7
  430cd0:	mov	w1, #0x89                  	// #137
  430cd4:	bl	429434 <feof@plt+0x25b94>
  430cd8:	stp	x29, x30, [sp, #-32]!
  430cdc:	stp	x28, x19, [sp, #16]
  430ce0:	mov	x29, sp
  430ce4:	sub	sp, sp, #0x400
  430ce8:	ldr	d0, [x0, #8]
  430cec:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x32fc>
  430cf0:	mov	x19, x1
  430cf4:	add	x2, x2, #0x62a
  430cf8:	mov	x0, sp
  430cfc:	mov	w1, #0x400                 	// #1024
  430d00:	bl	403530 <snprintf@plt>
  430d04:	mov	x1, sp
  430d08:	mov	x0, x19
  430d0c:	bl	4354fc <feof@plt+0x31c5c>
  430d10:	add	sp, sp, #0x400
  430d14:	ldp	x28, x19, [sp, #16]
  430d18:	ldp	x29, x30, [sp], #32
  430d1c:	ret
  430d20:	stp	x29, x30, [sp, #-32]!
  430d24:	str	x19, [sp, #16]
  430d28:	mov	x29, sp
  430d2c:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430d30:	add	x8, x8, #0x358
  430d34:	str	x8, [x0]
  430d38:	cbz	x1, 430d58 <feof@plt+0x2d4b8>
  430d3c:	mov	x19, x0
  430d40:	mov	x0, x1
  430d44:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  430d48:	str	x0, [x19, #8]
  430d4c:	ldr	x19, [sp, #16]
  430d50:	ldp	x29, x30, [sp], #32
  430d54:	ret
  430d58:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430d5c:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  430d60:	add	x0, x0, #0x3fa
  430d64:	add	x2, x2, #0xcb3
  430d68:	mov	w1, #0x9f                  	// #159
  430d6c:	bl	429434 <feof@plt+0x25b94>
  430d70:	stp	x29, x30, [sp, #-96]!
  430d74:	str	x27, [sp, #16]
  430d78:	stp	x26, x25, [sp, #32]
  430d7c:	stp	x24, x23, [sp, #48]
  430d80:	stp	x22, x21, [sp, #64]
  430d84:	stp	x20, x19, [sp, #80]
  430d88:	mov	x29, sp
  430d8c:	mov	x19, x1
  430d90:	mov	x20, x0
  430d94:	mov	w1, #0x22                  	// #34
  430d98:	mov	x0, x19
  430d9c:	bl	433718 <feof@plt+0x2fe78>
  430da0:	ldr	x26, [x20, #8]
  430da4:	adrp	x20, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  430da8:	adrp	x27, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430dac:	adrp	x21, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430db0:	adrp	x22, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  430db4:	adrp	x23, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430db8:	adrp	x24, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430dbc:	adrp	x25, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  430dc0:	add	x20, x20, #0xf0e
  430dc4:	add	x27, x27, #0x2c0
  430dc8:	add	x21, x21, #0x40c
  430dcc:	add	x22, x22, #0xf0b
  430dd0:	add	x23, x23, #0x40f
  430dd4:	add	x24, x24, #0x412
  430dd8:	add	x25, x25, #0xf11
  430ddc:	b	430df0 <feof@plt+0x2d550>
  430de0:	mov	x0, x19
  430de4:	mov	x1, x20
  430de8:	bl	4354fc <feof@plt+0x31c5c>
  430dec:	add	x26, x26, #0x1
  430df0:	ldrb	w1, [x26]
  430df4:	cmp	w1, #0x22
  430df8:	b.hi	430e20 <feof@plt+0x2d580>  // b.pmore
  430dfc:	adr	x8, 430de0 <feof@plt+0x2d540>
  430e00:	ldrb	w9, [x27, x1]
  430e04:	add	x8, x8, x9, lsl #2
  430e08:	br	x8
  430e0c:	mov	x0, x19
  430e10:	mov	x1, x21
  430e14:	bl	4354fc <feof@plt+0x31c5c>
  430e18:	add	x26, x26, #0x1
  430e1c:	b	430df0 <feof@plt+0x2d550>
  430e20:	cmp	w1, #0x5c
  430e24:	b.eq	430de0 <feof@plt+0x2d540>  // b.none
  430e28:	mov	x0, x19
  430e2c:	bl	433718 <feof@plt+0x2fe78>
  430e30:	add	x26, x26, #0x1
  430e34:	b	430df0 <feof@plt+0x2d550>
  430e38:	mov	x0, x19
  430e3c:	mov	x1, x22
  430e40:	bl	4354fc <feof@plt+0x31c5c>
  430e44:	add	x26, x26, #0x1
  430e48:	b	430df0 <feof@plt+0x2d550>
  430e4c:	mov	x0, x19
  430e50:	mov	x1, x23
  430e54:	bl	4354fc <feof@plt+0x31c5c>
  430e58:	add	x26, x26, #0x1
  430e5c:	b	430df0 <feof@plt+0x2d550>
  430e60:	mov	x0, x19
  430e64:	mov	x1, x24
  430e68:	bl	4354fc <feof@plt+0x31c5c>
  430e6c:	add	x26, x26, #0x1
  430e70:	b	430df0 <feof@plt+0x2d550>
  430e74:	mov	x0, x19
  430e78:	mov	x1, x25
  430e7c:	bl	4354fc <feof@plt+0x31c5c>
  430e80:	add	x26, x26, #0x1
  430e84:	b	430df0 <feof@plt+0x2d550>
  430e88:	mov	x0, x19
  430e8c:	ldp	x20, x19, [sp, #80]
  430e90:	ldp	x22, x21, [sp, #64]
  430e94:	ldp	x24, x23, [sp, #48]
  430e98:	ldp	x26, x25, [sp, #32]
  430e9c:	ldr	x27, [sp, #16]
  430ea0:	mov	w1, #0x22                  	// #34
  430ea4:	ldp	x29, x30, [sp], #96
  430ea8:	b	433718 <feof@plt+0x2fe78>
  430eac:	stp	x29, x30, [sp, #-16]!
  430eb0:	mov	x29, sp
  430eb4:	ldr	w8, [x0, #8]
  430eb8:	sub	w8, w8, #0x4
  430ebc:	cmp	w8, #0x3
  430ec0:	b.cs	430edc <feof@plt+0x2d63c>  // b.hs, b.nlast
  430ec4:	adrp	x9, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430ec8:	add	x9, x9, #0x3d8
  430ecc:	mov	x0, x1
  430ed0:	ldr	x1, [x9, w8, sxtw #3]
  430ed4:	ldp	x29, x30, [sp], #16
  430ed8:	b	4354fc <feof@plt+0x31c5c>
  430edc:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430ee0:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430ee4:	add	x0, x0, #0x3fa
  430ee8:	add	x2, x2, #0x420
  430eec:	mov	w1, #0xde                  	// #222
  430ef0:	bl	429434 <feof@plt+0x25b94>
  430ef4:	b	403410 <_ZdlPv@plt>
  430ef8:	mov	w0, #0x2                   	// #2
  430efc:	ret
  430f00:	ldr	x8, [x0, #8]
  430f04:	adrp	x9, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430f08:	add	x9, x9, #0x358
  430f0c:	str	x9, [x0]
  430f10:	mov	x0, x8
  430f14:	b	4031d0 <free@plt>
  430f18:	stp	x29, x30, [sp, #-32]!
  430f1c:	str	x19, [sp, #16]
  430f20:	mov	x29, sp
  430f24:	mov	x19, x0
  430f28:	ldr	x0, [x0, #8]
  430f2c:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  430f30:	add	x8, x8, #0x358
  430f34:	str	x8, [x19]
  430f38:	bl	4031d0 <free@plt>
  430f3c:	mov	x0, x19
  430f40:	ldr	x19, [sp, #16]
  430f44:	ldp	x29, x30, [sp], #32
  430f48:	b	403410 <_ZdlPv@plt>
  430f4c:	mov	w0, #0x3                   	// #3
  430f50:	ret
  430f54:	b	403410 <_ZdlPv@plt>
  430f58:	ldr	w0, [x0, #8]
  430f5c:	ret
  430f60:	mov	w0, wzr
  430f64:	ret
  430f68:	mov	w0, #0x1                   	// #1
  430f6c:	ret
  430f70:	ret
  430f74:	sub	sp, sp, #0x70
  430f78:	stp	x29, x30, [sp, #16]
  430f7c:	stp	x28, x27, [sp, #32]
  430f80:	stp	x26, x25, [sp, #48]
  430f84:	stp	x24, x23, [sp, #64]
  430f88:	stp	x22, x21, [sp, #80]
  430f8c:	stp	x20, x19, [sp, #96]
  430f90:	add	x29, sp, #0x10
  430f94:	ldr	w8, [x0, #32]
  430f98:	ldr	w28, [x0, #40]
  430f9c:	adrp	x10, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  430fa0:	add	x10, x10, #0x700
  430fa4:	add	w8, w8, #0x1
  430fa8:	add	x9, x10, x28, lsl #4
  430fac:	str	w8, [x0, #32]
  430fb0:	ldp	w26, w8, [x9]
  430fb4:	mov	w27, w2
  430fb8:	ldr	w12, [x9, #12]
  430fbc:	ldr	x23, [x0]
  430fc0:	mul	x8, x8, x27
  430fc4:	lsr	x8, x8, #32
  430fc8:	sub	w9, w2, w8
  430fcc:	add	w8, w8, w9, lsr #1
  430fd0:	lsr	w8, w8, w12
  430fd4:	msub	w25, w8, w26, w2
  430fd8:	add	x22, x23, w25, uxtw #4
  430fdc:	mov	x19, x0
  430fe0:	ldr	x0, [x22]
  430fe4:	cbz	x0, 431084 <feof@plt+0x2d7e4>
  430fe8:	ldr	x24, [x19, #8]
  430fec:	mov	w21, w2
  430ff0:	mov	x20, x1
  430ff4:	cmp	x0, #0x1
  430ff8:	b.eq	431018 <feof@plt+0x2d778>  // b.none
  430ffc:	ldr	x1, [x20]
  431000:	str	x12, [sp, #8]
  431004:	bl	403640 <strcmp@plt>
  431008:	ldr	x12, [sp, #8]
  43100c:	adrp	x10, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  431010:	add	x10, x10, #0x700
  431014:	cbz	w0, 431084 <feof@plt+0x2d7e4>
  431018:	add	x8, x10, x28, lsl #4
  43101c:	ldr	w8, [x8, #8]
  431020:	ldr	w10, [x19, #36]
  431024:	sub	w9, w26, #0x2
  431028:	mul	x8, x8, x27
  43102c:	lsr	x8, x8, #32
  431030:	sub	w11, w21, w8
  431034:	add	w8, w8, w11, lsr #1
  431038:	lsr	w8, w8, w12
  43103c:	msub	w8, w8, w9, w21
  431040:	add	w21, w8, #0x1
  431044:	add	w26, w10, #0x1
  431048:	b	431050 <feof@plt+0x2d7b0>
  43104c:	add	w26, w26, #0x1
  431050:	add	w8, w21, w25
  431054:	cmp	x24, x8
  431058:	csel	w9, wzr, w24, hi  // hi = pmore
  43105c:	sub	w25, w8, w9
  431060:	str	w26, [x19, #36]
  431064:	add	x22, x23, w25, uxtw #4
  431068:	ldr	x0, [x22]
  43106c:	cmp	x0, #0x1
  431070:	b.eq	43104c <feof@plt+0x2d7ac>  // b.none
  431074:	cbz	x0, 431084 <feof@plt+0x2d7e4>
  431078:	ldr	x1, [x20]
  43107c:	bl	403640 <strcmp@plt>
  431080:	cbnz	w0, 43104c <feof@plt+0x2d7ac>
  431084:	mov	x0, x22
  431088:	ldp	x20, x19, [sp, #96]
  43108c:	ldp	x22, x21, [sp, #80]
  431090:	ldp	x24, x23, [sp, #64]
  431094:	ldp	x26, x25, [sp, #48]
  431098:	ldp	x28, x27, [sp, #32]
  43109c:	ldp	x29, x30, [sp, #16]
  4310a0:	add	sp, sp, #0x70
  4310a4:	ret
  4310a8:	sub	sp, sp, #0x70
  4310ac:	stp	x29, x30, [sp, #16]
  4310b0:	stp	x28, x27, [sp, #32]
  4310b4:	stp	x26, x25, [sp, #48]
  4310b8:	stp	x24, x23, [sp, #64]
  4310bc:	stp	x22, x21, [sp, #80]
  4310c0:	stp	x20, x19, [sp, #96]
  4310c4:	add	x29, sp, #0x10
  4310c8:	mov	w26, w3
  4310cc:	mov	w23, w2
  4310d0:	mov	x21, x1
  4310d4:	cmp	w3, #0x1
  4310d8:	mov	x19, x0
  4310dc:	b.ne	4310f8 <feof@plt+0x2d858>  // b.any
  4310e0:	ldp	x8, x9, [x19, #8]
  4310e4:	add	x8, x8, x8, lsl #1
  4310e8:	cmp	x8, x9, lsl #2
  4310ec:	b.hi	4310f8 <feof@plt+0x2d858>  // b.pmore
  4310f0:	mov	x0, x19
  4310f4:	bl	431250 <feof@plt+0x2d9b0>
  4310f8:	ldr	w8, [x19, #32]
  4310fc:	ldr	w9, [x19, #40]
  431100:	adrp	x10, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  431104:	add	x10, x10, #0x700
  431108:	add	w11, w8, #0x1
  43110c:	add	x8, x10, x9, lsl #4
  431110:	str	w11, [x19, #32]
  431114:	ldp	w27, w9, [x8]
  431118:	mov	w20, w23
  43111c:	ldr	w28, [x8, #12]
  431120:	ldr	x24, [x19]
  431124:	mul	x9, x9, x20
  431128:	lsr	x9, x9, #32
  43112c:	sub	w10, w23, w9
  431130:	add	w9, w9, w10, lsr #1
  431134:	lsr	w9, w9, w28
  431138:	msub	w25, w9, w27, w23
  43113c:	add	x22, x24, w25, uxtw #4
  431140:	ldr	x0, [x22]
  431144:	cbz	x0, 4311ec <feof@plt+0x2d94c>
  431148:	stur	w26, [x29, #-4]
  43114c:	ldr	w9, [x8, #8]
  431150:	ldr	x26, [x19, #8]
  431154:	cmp	x0, #0x1
  431158:	b.eq	431174 <feof@plt+0x2d8d4>  // b.none
  43115c:	ldr	x1, [x21]
  431160:	str	x9, [sp]
  431164:	bl	403640 <strcmp@plt>
  431168:	cbz	w0, 43122c <feof@plt+0x2d98c>
  43116c:	ldr	x9, [sp]
  431170:	mov	x22, xzr
  431174:	mul	x9, x9, x20
  431178:	lsr	x9, x9, #32
  43117c:	sub	w10, w23, w9
  431180:	sub	w8, w27, #0x2
  431184:	add	w9, w9, w10, lsr #1
  431188:	ldr	w27, [x19, #36]
  43118c:	lsr	w9, w9, w28
  431190:	msub	w8, w9, w8, w23
  431194:	add	w23, w8, #0x1
  431198:	add	w27, w27, #0x1
  43119c:	add	w8, w23, w25
  4311a0:	cmp	x26, x8
  4311a4:	csel	w9, wzr, w26, hi  // hi = pmore
  4311a8:	sub	w25, w8, w9
  4311ac:	str	w27, [x19, #36]
  4311b0:	add	x20, x24, w25, uxtw #4
  4311b4:	ldr	x0, [x20]
  4311b8:	cbz	x0, 43120c <feof@plt+0x2d96c>
  4311bc:	cmp	x0, #0x1
  4311c0:	b.eq	4311d8 <feof@plt+0x2d938>  // b.none
  4311c4:	ldr	x1, [x21]
  4311c8:	bl	403640 <strcmp@plt>
  4311cc:	add	w27, w27, #0x1
  4311d0:	cbnz	w0, 43119c <feof@plt+0x2d8fc>
  4311d4:	b	4311e4 <feof@plt+0x2d944>
  4311d8:	cmp	x22, #0x0
  4311dc:	csel	x22, x20, x22, eq  // eq = none
  4311e0:	b	431198 <feof@plt+0x2d8f8>
  4311e4:	mov	x22, x20
  4311e8:	b	43122c <feof@plt+0x2d98c>
  4311ec:	mov	x22, xzr
  4311f0:	cbz	w26, 431214 <feof@plt+0x2d974>
  4311f4:	cbz	x22, 43121c <feof@plt+0x2d97c>
  4311f8:	ldr	x8, [x19, #24]
  4311fc:	sub	x8, x8, #0x1
  431200:	str	x8, [x19, #24]
  431204:	str	xzr, [x22]
  431208:	b	43122c <feof@plt+0x2d98c>
  43120c:	ldur	w26, [x29, #-4]
  431210:	cbnz	w26, 4311f4 <feof@plt+0x2d954>
  431214:	mov	x22, xzr
  431218:	b	43122c <feof@plt+0x2d98c>
  43121c:	ldr	x8, [x19, #16]
  431220:	add	x22, x24, w25, uxtw #4
  431224:	add	x8, x8, #0x1
  431228:	str	x8, [x19, #16]
  43122c:	mov	x0, x22
  431230:	ldp	x20, x19, [sp, #96]
  431234:	ldp	x22, x21, [sp, #80]
  431238:	ldp	x24, x23, [sp, #64]
  43123c:	ldp	x26, x25, [sp, #48]
  431240:	ldp	x28, x27, [sp, #32]
  431244:	ldp	x29, x30, [sp, #16]
  431248:	add	sp, sp, #0x70
  43124c:	ret
  431250:	stp	x29, x30, [sp, #-64]!
  431254:	stp	x24, x23, [sp, #16]
  431258:	stp	x22, x21, [sp, #32]
  43125c:	stp	x20, x19, [sp, #48]
  431260:	mov	x29, sp
  431264:	ldp	x8, x9, [x0, #16]
  431268:	ldp	x19, x24, [x0]
  43126c:	mov	x20, x0
  431270:	adrp	x23, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  431274:	sub	x8, x8, x9
  431278:	lsl	x0, x8, #1
  43127c:	cmp	x0, x24
  431280:	add	x23, x23, #0x700
  431284:	b.hi	4312a4 <feof@plt+0x2da04>  // b.pmore
  431288:	ldr	w21, [x20, #40]
  43128c:	cmp	x24, #0x21
  431290:	b.cc	431428 <feof@plt+0x2db88>  // b.lo, b.ul, b.last
  431294:	lsl	w8, w8, #3
  431298:	cmp	x24, x8
  43129c:	mov	x22, x24
  4312a0:	b.ls	4312b8 <feof@plt+0x2da18>  // b.plast
  4312a4:	bl	427ae8 <feof@plt+0x24248>
  4312a8:	mov	w8, w0
  4312ac:	lsl	x8, x8, #4
  4312b0:	ldr	w22, [x23, x8]
  4312b4:	mov	w21, w0
  4312b8:	ldrb	w8, [x20, #44]
  4312bc:	cbz	w8, 431434 <feof@plt+0x2db94>
  4312c0:	adrp	x1, 431000 <feof@plt+0x2d760>
  4312c4:	lsl	x0, x22, #4
  4312c8:	add	x1, x1, #0x45c
  4312cc:	mov	w2, #0x10                  	// #16
  4312d0:	mov	x3, x22
  4312d4:	bl	416188 <feof@plt+0x128e8>
  4312d8:	cbz	x0, 431444 <feof@plt+0x2dba4>
  4312dc:	cbz	x22, 431328 <feof@plt+0x2da88>
  4312e0:	cmp	x22, #0x1
  4312e4:	b.ne	4312f0 <feof@plt+0x2da50>  // b.any
  4312e8:	mov	x8, xzr
  4312ec:	b	431314 <feof@plt+0x2da74>
  4312f0:	and	x8, x22, #0xfffffffffffffffe
  4312f4:	add	x9, x0, #0x10
  4312f8:	mov	x10, x8
  4312fc:	stur	xzr, [x9, #-16]
  431300:	str	xzr, [x9], #32
  431304:	subs	x10, x10, #0x2
  431308:	b.ne	4312fc <feof@plt+0x2da5c>  // b.any
  43130c:	cmp	x22, x8
  431310:	b.eq	431328 <feof@plt+0x2da88>  // b.none
  431314:	sub	x9, x22, x8
  431318:	add	x8, x0, x8, lsl #4
  43131c:	subs	x9, x9, #0x1
  431320:	str	xzr, [x8], #16
  431324:	b.ne	43131c <feof@plt+0x2da7c>  // b.any
  431328:	ldp	x9, x8, [x20, #16]
  43132c:	add	x24, x19, x24, lsl #4
  431330:	str	w21, [x20, #40]
  431334:	mov	x21, x19
  431338:	sub	x8, x9, x8
  43133c:	stp	x0, x22, [x20]
  431340:	stp	x8, xzr, [x20, #16]
  431344:	b	43135c <feof@plt+0x2dabc>
  431348:	ldr	q0, [x21]
  43134c:	str	q0, [x14]
  431350:	add	x21, x21, #0x10
  431354:	cmp	x21, x24
  431358:	b.cs	4313f0 <feof@plt+0x2db50>  // b.hs, b.nlast
  43135c:	ldr	x0, [x21]
  431360:	cmp	x0, #0x2
  431364:	b.cc	431350 <feof@plt+0x2dab0>  // b.lo, b.ul, b.last
  431368:	bl	47adac <feof@plt+0x7750c>
  43136c:	ldr	w8, [x20, #40]
  431370:	mov	w10, w0
  431374:	add	x11, x23, x8, lsl #4
  431378:	ldp	w13, w8, [x11]
  43137c:	ldr	w12, [x11, #12]
  431380:	mul	x8, x8, x10
  431384:	lsr	x9, x8, #32
  431388:	sub	w14, w0, w9
  43138c:	ldr	x8, [x20]
  431390:	add	w9, w9, w14, lsr #1
  431394:	lsr	w9, w9, w12
  431398:	msub	w9, w9, w13, w0
  43139c:	add	x14, x8, w9, uxtw #4
  4313a0:	ldr	x15, [x14]
  4313a4:	cbz	x15, 431348 <feof@plt+0x2daa8>
  4313a8:	ldr	w14, [x11, #8]
  4313ac:	ldr	x11, [x20, #8]
  4313b0:	sub	w13, w13, #0x2
  4313b4:	mul	x14, x14, x10
  4313b8:	lsr	x14, x14, #32
  4313bc:	sub	w15, w10, w14
  4313c0:	add	w14, w14, w15, lsr #1
  4313c4:	lsr	w12, w14, w12
  4313c8:	msub	w10, w12, w13, w10
  4313cc:	add	w10, w10, #0x1
  4313d0:	add	w9, w10, w9
  4313d4:	cmp	x11, x9
  4313d8:	csel	w12, wzr, w11, hi  // hi = pmore
  4313dc:	sub	w9, w9, w12
  4313e0:	add	x14, x8, w9, uxtw #4
  4313e4:	ldr	x12, [x14]
  4313e8:	cbnz	x12, 4313d0 <feof@plt+0x2db30>
  4313ec:	b	431348 <feof@plt+0x2daa8>
  4313f0:	ldrb	w8, [x20, #44]
  4313f4:	cbz	w8, 431410 <feof@plt+0x2db70>
  4313f8:	mov	x0, x19
  4313fc:	ldp	x20, x19, [sp, #48]
  431400:	ldp	x22, x21, [sp, #32]
  431404:	ldp	x24, x23, [sp, #16]
  431408:	ldp	x29, x30, [sp], #64
  43140c:	b	4161b8 <feof@plt+0x12918>
  431410:	mov	x0, x19
  431414:	ldp	x20, x19, [sp, #48]
  431418:	ldp	x22, x21, [sp, #32]
  43141c:	ldp	x24, x23, [sp, #16]
  431420:	ldp	x29, x30, [sp], #64
  431424:	b	4031d0 <free@plt>
  431428:	mov	x22, x24
  43142c:	ldrb	w8, [x20, #44]
  431430:	cbnz	w8, 4312c0 <feof@plt+0x2da20>
  431434:	mov	w1, #0x10                  	// #16
  431438:	mov	x0, x22
  43143c:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  431440:	cbnz	x0, 4312dc <feof@plt+0x2da3c>
  431444:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  431448:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  43144c:	add	x0, x0, #0x524
  431450:	add	x2, x2, #0x53b
  431454:	mov	w1, #0x2b5                 	// #693
  431458:	bl	429434 <feof@plt+0x25b94>
  43145c:	ret
  431460:	adrp	x9, 403000 <readlink@plt>
  431464:	adrp	x10, 431000 <feof@plt+0x2d760>
  431468:	mov	w8, #0x1                   	// #1
  43146c:	add	x9, x9, #0x640
  431470:	add	x10, x10, #0x484
  431474:	strb	w8, [x0]
  431478:	stp	xzr, x9, [x0, #8]
  43147c:	stp	xzr, x10, [x0, #24]
  431480:	ret
  431484:	cbz	x0, 4314b0 <feof@plt+0x2dc10>
  431488:	stp	x29, x30, [sp, #-32]!
  43148c:	str	x19, [sp, #16]
  431490:	mov	x29, sp
  431494:	mov	x19, x0
  431498:	ldr	x1, [x0, #8]!
  43149c:	bl	4331ec <feof@plt+0x2f94c>
  4314a0:	mov	x0, x19
  4314a4:	ldr	x19, [sp, #16]
  4314a8:	ldp	x29, x30, [sp], #32
  4314ac:	b	403410 <_ZdlPv@plt>
  4314b0:	ret
  4314b4:	stp	x29, x30, [sp, #-48]!
  4314b8:	str	x21, [sp, #16]
  4314bc:	stp	x20, x19, [sp, #32]
  4314c0:	mov	x29, sp
  4314c4:	ldrb	w8, [x0]
  4314c8:	cbz	w8, 4314e0 <feof@plt+0x2dc40>
  4314cc:	ldrb	w8, [x1, #160]
  4314d0:	mov	x19, x0
  4314d4:	mov	x20, x1
  4314d8:	cbz	w8, 4314f0 <feof@plt+0x2dc50>
  4314dc:	strb	wzr, [x19]
  4314e0:	ldp	x20, x19, [sp, #32]
  4314e4:	ldr	x21, [sp, #16]
  4314e8:	ldp	x29, x30, [sp], #48
  4314ec:	ret
  4314f0:	ldr	w8, [x20, #120]
  4314f4:	cbz	w8, 4314e0 <feof@plt+0x2dc40>
  4314f8:	mov	w21, wzr
  4314fc:	b	431510 <feof@plt+0x2dc70>
  431500:	ldr	w8, [x20, #120]
  431504:	add	w21, w21, #0x1
  431508:	cmp	w21, w8
  43150c:	b.cs	4314e0 <feof@plt+0x2dc40>  // b.hs, b.nlast
  431510:	cmp	w21, #0x1
  431514:	b.gt	431524 <feof@plt+0x2dc84>
  431518:	add	x8, x20, w21, sxtw #3
  43151c:	add	x8, x8, #0x80
  431520:	b	431530 <feof@plt+0x2dc90>
  431524:	ldr	x8, [x20, #152]
  431528:	sub	w9, w21, #0x2
  43152c:	add	x8, x8, w9, sxtw #3
  431530:	ldr	x1, [x8]
  431534:	mov	x0, x19
  431538:	bl	431548 <feof@plt+0x2dca8>
  43153c:	tbnz	w0, #0, 431500 <feof@plt+0x2dc60>
  431540:	strb	wzr, [x19]
  431544:	b	431500 <feof@plt+0x2dc60>
  431548:	sub	sp, sp, #0x70
  43154c:	stp	x29, x30, [sp, #64]
  431550:	stp	x22, x21, [sp, #80]
  431554:	stp	x20, x19, [sp, #96]
  431558:	add	x29, sp, #0x40
  43155c:	ldr	w9, [x1]
  431560:	mov	x20, x0
  431564:	add	x8, sp, #0x20
  431568:	mov	x19, x1
  43156c:	mov	w0, w9
  431570:	bl	4377f8 <feof@plt+0x33f58>
  431574:	ldr	w0, [x19, #4]
  431578:	mov	x8, sp
  43157c:	bl	4377f8 <feof@plt+0x33f58>
  431580:	ldr	x1, [sp, #32]
  431584:	ldr	x8, [sp]
  431588:	cmp	x1, x8
  43158c:	b.ne	4315ec <feof@plt+0x2dd4c>  // b.any
  431590:	ldr	w8, [sp, #40]
  431594:	ldr	w9, [sp, #8]
  431598:	cmp	w8, w9
  43159c:	b.ne	4315ec <feof@plt+0x2dd4c>  // b.any
  4315a0:	ldr	w8, [sp, #44]
  4315a4:	cbz	w8, 4315ec <feof@plt+0x2dd4c>
  4315a8:	ldr	w8, [sp, #12]
  4315ac:	cbz	w8, 4315ec <feof@plt+0x2dd4c>
  4315b0:	mov	x0, x20
  4315b4:	bl	431680 <feof@plt+0x2dde0>
  4315b8:	ldrb	w8, [x20]
  4315bc:	cbz	w8, 4315ec <feof@plt+0x2dd4c>
  4315c0:	ldp	w1, w20, [sp, #40]
  4315c4:	ldr	w21, [sp, #12]
  4315c8:	ldp	x22, x19, [x19, #8]
  4315cc:	bl	431e54 <feof@plt+0x2e5b4>
  4315d0:	cbz	x0, 4315f0 <feof@plt+0x2dd50>
  4315d4:	mov	w1, w20
  4315d8:	mov	w2, w21
  4315dc:	mov	x3, x22
  4315e0:	mov	w4, w19
  4315e4:	bl	432034 <feof@plt+0x2e794>
  4315e8:	b	4315f0 <feof@plt+0x2dd50>
  4315ec:	mov	w0, wzr
  4315f0:	ldp	x20, x19, [sp, #96]
  4315f4:	ldp	x22, x21, [sp, #80]
  4315f8:	ldp	x29, x30, [sp, #64]
  4315fc:	and	w0, w0, #0x1
  431600:	add	sp, sp, #0x70
  431604:	ret
  431608:	sub	sp, sp, #0x70
  43160c:	stp	x29, x30, [sp, #80]
  431610:	str	x19, [sp, #96]
  431614:	add	x29, sp, #0x50
  431618:	ldrb	w8, [x0]
  43161c:	cbz	w8, 431658 <feof@plt+0x2ddb8>
  431620:	bl	431680 <feof@plt+0x2dde0>
  431624:	mov	x19, x0
  431628:	add	x0, sp, #0x8
  43162c:	mov	w1, wzr
  431630:	bl	435b30 <feof@plt+0x32290>
  431634:	add	x1, sp, #0x8
  431638:	mov	x0, x19
  43163c:	bl	431c94 <feof@plt+0x2e3f4>
  431640:	tbz	w0, #0, 431660 <feof@plt+0x2ddc0>
  431644:	add	x0, sp, #0x8
  431648:	bl	43388c <feof@plt+0x2ffec>
  43164c:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  431650:	mov	x19, x0
  431654:	b	431664 <feof@plt+0x2ddc4>
  431658:	mov	x19, xzr
  43165c:	b	43166c <feof@plt+0x2ddcc>
  431660:	mov	x19, xzr
  431664:	add	x0, sp, #0x8
  431668:	bl	435c34 <feof@plt+0x32394>
  43166c:	mov	x0, x19
  431670:	ldr	x19, [sp, #96]
  431674:	ldp	x29, x30, [sp, #80]
  431678:	add	sp, sp, #0x70
  43167c:	ret
  431680:	stp	x29, x30, [sp, #-64]!
  431684:	stp	x24, x23, [sp, #16]
  431688:	stp	x22, x21, [sp, #32]
  43168c:	stp	x20, x19, [sp, #48]
  431690:	mov	x29, sp
  431694:	cbz	x1, 4317c0 <feof@plt+0x2df20>
  431698:	add	x19, x0, #0x8
  43169c:	mov	x22, x0
  4316a0:	mov	x0, x19
  4316a4:	mov	x21, x1
  4316a8:	bl	4332e4 <feof@plt+0x2fa44>
  4316ac:	ldr	x8, [x22, #8]
  4316b0:	cbz	x8, 4316c8 <feof@plt+0x2de28>
  4316b4:	ldr	x9, [x22, #16]
  4316b8:	ldr	x0, [x8]
  4316bc:	mov	x1, x21
  4316c0:	blr	x9
  4316c4:	cbz	w0, 431778 <feof@plt+0x2ded8>
  4316c8:	mov	w0, #0x30                  	// #48
  4316cc:	bl	403440 <_Znwm@plt>
  4316d0:	adrp	x8, 431000 <feof@plt+0x2d760>
  4316d4:	adrp	x9, 431000 <feof@plt+0x2d760>
  4316d8:	add	x8, x8, #0xc60
  4316dc:	add	x9, x9, #0xc68
  4316e0:	mov	w10, #0xffffffff            	// #-1
  4316e4:	mov	x20, x0
  4316e8:	stp	x21, xzr, [x0]
  4316ec:	stp	x8, xzr, [x0, #16]
  4316f0:	str	x9, [x0, #32]
  4316f4:	str	w10, [x0, #40]
  4316f8:	mov	x0, x19
  4316fc:	mov	x1, x21
  431700:	bl	4332e4 <feof@plt+0x2fa44>
  431704:	ldr	x8, [x19]
  431708:	cbz	x8, 431748 <feof@plt+0x2dea8>
  43170c:	ldr	x9, [x22, #16]
  431710:	ldr	x0, [x8]
  431714:	mov	x1, x21
  431718:	blr	x9
  43171c:	ldr	x24, [x22, #8]
  431720:	mov	w23, w0
  431724:	cbnz	w0, 431750 <feof@plt+0x2deb0>
  431728:	cbz	x24, 431750 <feof@plt+0x2deb0>
  43172c:	ldr	x8, [x22, #32]
  431730:	cbz	x8, 431740 <feof@plt+0x2dea0>
  431734:	ldr	x0, [x24, #8]
  431738:	blr	x8
  43173c:	ldr	x24, [x19]
  431740:	str	x20, [x24, #8]
  431744:	b	4317a8 <feof@plt+0x2df08>
  431748:	mov	w23, wzr
  43174c:	mov	x24, xzr
  431750:	mov	w0, #0x28                  	// #40
  431754:	bl	403440 <_Znwm@plt>
  431758:	stp	x21, x20, [x0]
  43175c:	cbz	x24, 43178c <feof@plt+0x2deec>
  431760:	tbnz	w23, #31, 431794 <feof@plt+0x2def4>
  431764:	str	x24, [x0, #24]
  431768:	ldr	x8, [x24, #16]
  43176c:	str	x8, [x0, #16]
  431770:	str	xzr, [x24, #16]
  431774:	b	4317a4 <feof@plt+0x2df04>
  431778:	ldr	x8, [x19]
  43177c:	cbz	x8, 4316c8 <feof@plt+0x2de28>
  431780:	ldr	x20, [x8, #8]
  431784:	cbnz	x20, 4317a8 <feof@plt+0x2df08>
  431788:	b	4316c8 <feof@plt+0x2de28>
  43178c:	stp	xzr, xzr, [x0, #16]
  431790:	b	4317a4 <feof@plt+0x2df04>
  431794:	str	x24, [x0, #16]
  431798:	ldr	x8, [x24, #24]
  43179c:	str	x8, [x0, #24]
  4317a0:	str	xzr, [x24, #24]
  4317a4:	str	x0, [x19]
  4317a8:	mov	x0, x20
  4317ac:	ldp	x20, x19, [sp, #48]
  4317b0:	ldp	x22, x21, [sp, #32]
  4317b4:	ldp	x24, x23, [sp, #16]
  4317b8:	ldp	x29, x30, [sp], #64
  4317bc:	ret
  4317c0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4317c4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4317c8:	add	x0, x0, #0x426
  4317cc:	add	x2, x2, #0x448
  4317d0:	mov	w1, #0x149                 	// #329
  4317d4:	bl	429434 <feof@plt+0x25b94>
  4317d8:	sub	sp, sp, #0x70
  4317dc:	stp	x29, x30, [sp, #80]
  4317e0:	str	x19, [sp, #96]
  4317e4:	add	x29, sp, #0x50
  4317e8:	mov	x19, x0
  4317ec:	add	x0, sp, #0x8
  4317f0:	mov	w1, wzr
  4317f4:	bl	435b30 <feof@plt+0x32290>
  4317f8:	add	x1, sp, #0x8
  4317fc:	mov	x0, x19
  431800:	bl	431c94 <feof@plt+0x2e3f4>
  431804:	tbz	w0, #0, 43181c <feof@plt+0x2df7c>
  431808:	add	x0, sp, #0x8
  43180c:	bl	43388c <feof@plt+0x2ffec>
  431810:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  431814:	mov	x19, x0
  431818:	b	431820 <feof@plt+0x2df80>
  43181c:	mov	x19, xzr
  431820:	add	x0, sp, #0x8
  431824:	bl	435c34 <feof@plt+0x32394>
  431828:	mov	x0, x19
  43182c:	ldr	x19, [sp, #96]
  431830:	ldp	x29, x30, [sp, #80]
  431834:	add	sp, sp, #0x70
  431838:	ret
  43183c:	stp	x29, x30, [sp, #-64]!
  431840:	str	x23, [sp, #16]
  431844:	stp	x22, x21, [sp, #32]
  431848:	stp	x20, x19, [sp, #48]
  43184c:	mov	x29, sp
  431850:	cbz	x1, 431940 <feof@plt+0x2e0a0>
  431854:	add	x21, x0, #0x8
  431858:	mov	x23, x0
  43185c:	mov	x0, x21
  431860:	mov	w19, w3
  431864:	mov	w20, w2
  431868:	mov	x22, x1
  43186c:	bl	4332e4 <feof@plt+0x2fa44>
  431870:	ldr	x8, [x23, #8]
  431874:	cbz	x8, 43188c <feof@plt+0x2dfec>
  431878:	ldr	x9, [x23, #16]
  43187c:	ldr	x0, [x8]
  431880:	mov	x1, x22
  431884:	blr	x9
  431888:	cbz	w0, 4318a4 <feof@plt+0x2e004>
  43188c:	mov	w0, w19
  431890:	ldp	x20, x19, [sp, #48]
  431894:	ldp	x22, x21, [sp, #32]
  431898:	ldr	x23, [sp, #16]
  43189c:	ldp	x29, x30, [sp], #64
  4318a0:	ret
  4318a4:	ldr	x8, [x21]
  4318a8:	cbz	x8, 43188c <feof@plt+0x2dfec>
  4318ac:	ldr	x22, [x8, #8]
  4318b0:	cbz	x22, 43188c <feof@plt+0x2dfec>
  4318b4:	add	x21, x22, #0x8
  4318b8:	mov	x0, x21
  4318bc:	mov	w1, w20
  4318c0:	bl	433480 <feof@plt+0x2fbe0>
  4318c4:	ldr	x8, [x22, #8]
  4318c8:	cbz	x8, 43188c <feof@plt+0x2dfec>
  4318cc:	ldr	x9, [x22, #16]
  4318d0:	ldr	w0, [x8]
  4318d4:	mov	w1, w20
  4318d8:	blr	x9
  4318dc:	cbnz	w0, 43188c <feof@plt+0x2dfec>
  4318e0:	ldr	x8, [x21]
  4318e4:	cbz	x8, 43188c <feof@plt+0x2dfec>
  4318e8:	ldr	x8, [x8, #8]
  4318ec:	cbz	x8, 43188c <feof@plt+0x2dfec>
  4318f0:	ldr	x10, [x8, #24]
  4318f4:	cbz	x10, 43188c <feof@plt+0x2dfec>
  4318f8:	ldr	w8, [x10, #4]
  4318fc:	cbz	w8, 43188c <feof@plt+0x2dfec>
  431900:	mov	x9, xzr
  431904:	add	x11, x10, #0x8
  431908:	add	x10, x10, #0x10
  43190c:	b	431928 <feof@plt+0x2e088>
  431910:	add	x9, x9, #0x1
  431914:	cmp	x9, x8
  431918:	csel	x11, x10, xzr, cc  // cc = lo, ul, last
  43191c:	cmp	x8, x9
  431920:	add	x10, x10, #0x8
  431924:	b.eq	43188c <feof@plt+0x2dfec>  // b.none
  431928:	ldr	w12, [x11]
  43192c:	cmp	w12, w19
  431930:	b.gt	431910 <feof@plt+0x2e070>
  431934:	ldr	w11, [x11, #4]
  431938:	add	w19, w11, w19
  43193c:	b	431910 <feof@plt+0x2e070>
  431940:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  431944:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  431948:	add	x0, x0, #0x426
  43194c:	add	x2, x2, #0x43f
  431950:	mov	w1, #0x140                 	// #320
  431954:	bl	429434 <feof@plt+0x25b94>
  431958:	stp	x29, x30, [sp, #-48]!
  43195c:	str	x21, [sp, #16]
  431960:	stp	x20, x19, [sp, #32]
  431964:	mov	x29, sp
  431968:	cbz	x1, 4319c0 <feof@plt+0x2e120>
  43196c:	add	x19, x0, #0x8
  431970:	mov	x21, x0
  431974:	mov	x0, x19
  431978:	mov	x20, x1
  43197c:	bl	4332e4 <feof@plt+0x2fa44>
  431980:	ldr	x8, [x21, #8]
  431984:	cbz	x8, 43199c <feof@plt+0x2e0fc>
  431988:	ldr	x9, [x21, #16]
  43198c:	ldr	x0, [x8]
  431990:	mov	x1, x20
  431994:	blr	x9
  431998:	cbz	w0, 4319b0 <feof@plt+0x2e110>
  43199c:	mov	x0, xzr
  4319a0:	ldp	x20, x19, [sp, #32]
  4319a4:	ldr	x21, [sp, #16]
  4319a8:	ldp	x29, x30, [sp], #48
  4319ac:	ret
  4319b0:	ldr	x8, [x19]
  4319b4:	cbz	x8, 43199c <feof@plt+0x2e0fc>
  4319b8:	ldr	x0, [x8, #8]
  4319bc:	b	4319a0 <feof@plt+0x2e100>
  4319c0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4319c4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4319c8:	add	x0, x0, #0x426
  4319cc:	add	x2, x2, #0x43f
  4319d0:	mov	w1, #0x140                 	// #320
  4319d4:	bl	429434 <feof@plt+0x25b94>
  4319d8:	stp	x29, x30, [sp, #-48]!
  4319dc:	stp	x22, x21, [sp, #16]
  4319e0:	stp	x20, x19, [sp, #32]
  4319e4:	mov	x29, sp
  4319e8:	add	x20, x0, #0x8
  4319ec:	mov	x22, x0
  4319f0:	mov	x0, x20
  4319f4:	mov	w19, w2
  4319f8:	mov	w21, w1
  4319fc:	bl	433480 <feof@plt+0x2fbe0>
  431a00:	ldr	x8, [x22, #8]
  431a04:	cbz	x8, 431a1c <feof@plt+0x2e17c>
  431a08:	ldr	x9, [x22, #16]
  431a0c:	ldr	w0, [x8]
  431a10:	mov	w1, w21
  431a14:	blr	x9
  431a18:	cbz	w0, 431a30 <feof@plt+0x2e190>
  431a1c:	mov	w0, w19
  431a20:	ldp	x20, x19, [sp, #32]
  431a24:	ldp	x22, x21, [sp, #16]
  431a28:	ldp	x29, x30, [sp], #48
  431a2c:	ret
  431a30:	ldr	x8, [x20]
  431a34:	cbz	x8, 431a1c <feof@plt+0x2e17c>
  431a38:	ldr	x8, [x8, #8]
  431a3c:	cbz	x8, 431a1c <feof@plt+0x2e17c>
  431a40:	ldr	x10, [x8, #24]
  431a44:	cbz	x10, 431a1c <feof@plt+0x2e17c>
  431a48:	ldr	w8, [x10, #4]
  431a4c:	cbz	w8, 431a1c <feof@plt+0x2e17c>
  431a50:	mov	x9, xzr
  431a54:	add	x11, x10, #0x8
  431a58:	add	x10, x10, #0x10
  431a5c:	b	431a78 <feof@plt+0x2e1d8>
  431a60:	add	x9, x9, #0x1
  431a64:	cmp	x9, x8
  431a68:	csel	x11, x10, xzr, cc  // cc = lo, ul, last
  431a6c:	cmp	x8, x9
  431a70:	add	x10, x10, #0x8
  431a74:	b.eq	431a1c <feof@plt+0x2e17c>  // b.none
  431a78:	ldr	w12, [x11]
  431a7c:	cmp	w12, w19
  431a80:	b.gt	431a60 <feof@plt+0x2e1c0>
  431a84:	ldr	w11, [x11, #4]
  431a88:	add	w19, w11, w19
  431a8c:	b	431a60 <feof@plt+0x2e1c0>
  431a90:	sub	sp, sp, #0x80
  431a94:	stp	x29, x30, [sp, #80]
  431a98:	str	x21, [sp, #96]
  431a9c:	stp	x20, x19, [sp, #112]
  431aa0:	add	x29, sp, #0x50
  431aa4:	ldrb	w8, [x0]
  431aa8:	cbz	w8, 431b3c <feof@plt+0x2e29c>
  431aac:	mov	x20, x0
  431ab0:	mov	w19, w1
  431ab4:	add	x0, sp, #0x8
  431ab8:	mov	w1, wzr
  431abc:	bl	435b30 <feof@plt+0x32290>
  431ac0:	ldrb	w8, [x20]
  431ac4:	cbz	w8, 431b20 <feof@plt+0x2e280>
  431ac8:	mov	x8, xzr
  431acc:	add	x9, x20, #0x8
  431ad0:	and	w19, w19, #0x1
  431ad4:	b	431afc <feof@plt+0x2e25c>
  431ad8:	cbz	x8, 431b20 <feof@plt+0x2e280>
  431adc:	ldr	x20, [x8, #32]
  431ae0:	mov	x21, x8
  431ae4:	ldr	x0, [x21, #8]
  431ae8:	add	x1, sp, #0x8
  431aec:	mov	w2, w19
  431af0:	bl	432748 <feof@plt+0x2eea8>
  431af4:	add	x9, x21, #0x18
  431af8:	mov	x8, x20
  431afc:	ldr	x9, [x9]
  431b00:	cbz	x9, 431ad8 <feof@plt+0x2e238>
  431b04:	mov	x21, x9
  431b08:	ldr	x9, [x9, #16]
  431b0c:	mov	x20, x8
  431b10:	str	x8, [x21, #32]
  431b14:	mov	x8, x21
  431b18:	cbnz	x9, 431b04 <feof@plt+0x2e264>
  431b1c:	b	431ae4 <feof@plt+0x2e244>
  431b20:	add	x0, sp, #0x8
  431b24:	bl	43388c <feof@plt+0x2ffec>
  431b28:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  431b2c:	mov	x19, x0
  431b30:	add	x0, sp, #0x8
  431b34:	bl	435c34 <feof@plt+0x32394>
  431b38:	b	431b40 <feof@plt+0x2e2a0>
  431b3c:	mov	x19, xzr
  431b40:	mov	x0, x19
  431b44:	ldp	x20, x19, [sp, #112]
  431b48:	ldr	x21, [sp, #96]
  431b4c:	ldp	x29, x30, [sp, #80]
  431b50:	add	sp, sp, #0x80
  431b54:	ret
  431b58:	stp	x29, x30, [sp, #-48]!
  431b5c:	stp	x22, x21, [sp, #16]
  431b60:	stp	x20, x19, [sp, #32]
  431b64:	mov	x29, sp
  431b68:	ldrb	w8, [x0]
  431b6c:	cbz	w8, 431bd0 <feof@plt+0x2e330>
  431b70:	mov	x19, x1
  431b74:	mov	x8, xzr
  431b78:	add	x9, x0, #0x8
  431b7c:	and	w20, w2, #0x1
  431b80:	b	431b9c <feof@plt+0x2e2fc>
  431b84:	ldr	x0, [x22, #8]
  431b88:	mov	x1, x19
  431b8c:	mov	w2, w20
  431b90:	bl	432748 <feof@plt+0x2eea8>
  431b94:	add	x9, x22, #0x18
  431b98:	mov	x8, x21
  431b9c:	ldr	x9, [x9]
  431ba0:	cbz	x9, 431bc0 <feof@plt+0x2e320>
  431ba4:	mov	x22, x9
  431ba8:	ldr	x9, [x9, #16]
  431bac:	mov	x21, x8
  431bb0:	str	x8, [x22, #32]
  431bb4:	mov	x8, x22
  431bb8:	cbnz	x9, 431ba4 <feof@plt+0x2e304>
  431bbc:	b	431b84 <feof@plt+0x2e2e4>
  431bc0:	cbz	x8, 431bd0 <feof@plt+0x2e330>
  431bc4:	ldr	x21, [x8, #32]
  431bc8:	mov	x22, x8
  431bcc:	b	431b84 <feof@plt+0x2e2e4>
  431bd0:	ldp	x20, x19, [sp, #32]
  431bd4:	ldp	x22, x21, [sp, #16]
  431bd8:	ldp	x29, x30, [sp], #48
  431bdc:	ret
  431be0:	stp	x29, x30, [sp, #-48]!
  431be4:	stp	x22, x21, [sp, #16]
  431be8:	stp	x20, x19, [sp, #32]
  431bec:	mov	x29, sp
  431bf0:	mov	w19, w5
  431bf4:	mov	x20, x4
  431bf8:	mov	w21, w3
  431bfc:	mov	w22, w2
  431c00:	bl	431e54 <feof@plt+0x2e5b4>
  431c04:	cbz	x0, 431c28 <feof@plt+0x2e388>
  431c08:	mov	w1, w22
  431c0c:	mov	w2, w21
  431c10:	mov	x3, x20
  431c14:	mov	w4, w19
  431c18:	ldp	x20, x19, [sp, #32]
  431c1c:	ldp	x22, x21, [sp, #16]
  431c20:	ldp	x29, x30, [sp], #48
  431c24:	b	432034 <feof@plt+0x2e794>
  431c28:	ldp	x20, x19, [sp, #32]
  431c2c:	ldp	x22, x21, [sp, #16]
  431c30:	ldp	x29, x30, [sp], #48
  431c34:	ret
  431c38:	adrp	x8, 431000 <feof@plt+0x2d760>
  431c3c:	adrp	x9, 431000 <feof@plt+0x2d760>
  431c40:	add	x8, x8, #0xc60
  431c44:	add	x9, x9, #0xc68
  431c48:	mov	w10, #0xffffffff            	// #-1
  431c4c:	stp	x1, xzr, [x0]
  431c50:	stp	x8, xzr, [x0, #16]
  431c54:	str	x9, [x0, #32]
  431c58:	str	w10, [x0, #40]
  431c5c:	ret
  431c60:	sub	w0, w0, w1
  431c64:	ret
  431c68:	cbz	x0, 431c90 <feof@plt+0x2e3f0>
  431c6c:	stp	x29, x30, [sp, #-32]!
  431c70:	str	x19, [sp, #16]
  431c74:	mov	x29, sp
  431c78:	mov	x19, x0
  431c7c:	bl	433138 <feof@plt+0x2f898>
  431c80:	mov	x0, x19
  431c84:	ldr	x19, [sp, #16]
  431c88:	ldp	x29, x30, [sp], #32
  431c8c:	b	403410 <_ZdlPv@plt>
  431c90:	ret
  431c94:	stp	x29, x30, [sp, #-96]!
  431c98:	str	x27, [sp, #16]
  431c9c:	stp	x26, x25, [sp, #32]
  431ca0:	stp	x24, x23, [sp, #48]
  431ca4:	stp	x22, x21, [sp, #64]
  431ca8:	stp	x20, x19, [sp, #80]
  431cac:	mov	x29, sp
  431cb0:	ldr	w8, [x0, #40]
  431cb4:	mov	x20, x0
  431cb8:	mov	x19, x1
  431cbc:	cmn	w8, #0x1
  431cc0:	b.eq	431e08 <feof@plt+0x2e568>  // b.none
  431cc4:	ldr	x0, [x20]
  431cc8:	bl	437798 <feof@plt+0x33ef8>
  431ccc:	ldr	w26, [x20, #40]
  431cd0:	mov	w21, w0
  431cd4:	cmp	w26, #0x1
  431cd8:	b.lt	431dd8 <feof@plt+0x2e538>  // b.tstop
  431cdc:	add	x22, x20, #0x8
  431ce0:	mov	w23, #0x1                   	// #1
  431ce4:	b	431cf4 <feof@plt+0x2e454>
  431ce8:	cmp	w23, w26
  431cec:	add	w23, w23, #0x1
  431cf0:	b.eq	431dd8 <feof@plt+0x2e538>  // b.none
  431cf4:	mov	x0, x22
  431cf8:	mov	w1, w23
  431cfc:	bl	433480 <feof@plt+0x2fbe0>
  431d00:	ldr	x8, [x22]
  431d04:	cbz	x8, 431d1c <feof@plt+0x2e47c>
  431d08:	ldr	x9, [x20, #16]
  431d0c:	ldr	w0, [x8]
  431d10:	mov	w1, w23
  431d14:	blr	x9
  431d18:	cbz	w0, 431d70 <feof@plt+0x2e4d0>
  431d1c:	ldr	x0, [x20]
  431d20:	mov	w1, w23
  431d24:	bl	437438 <feof@plt+0x33b98>
  431d28:	cbz	x0, 431dec <feof@plt+0x2e54c>
  431d2c:	mov	x25, x1
  431d30:	cbz	x1, 431d58 <feof@plt+0x2e4b8>
  431d34:	mov	x24, x0
  431d38:	mov	w27, #0x80000000            	// #-2147483648
  431d3c:	cbz	x27, 431e3c <feof@plt+0x2e59c>
  431d40:	ldrb	w1, [x24], #1
  431d44:	mov	x0, x19
  431d48:	bl	433718 <feof@plt+0x2fe78>
  431d4c:	subs	x25, x25, #0x1
  431d50:	sub	x27, x27, #0x1
  431d54:	b.ne	431d3c <feof@plt+0x2e49c>  // b.any
  431d58:	cmp	w23, w26
  431d5c:	b.ge	431ce8 <feof@plt+0x2e448>  // b.tcont
  431d60:	mov	w1, #0xa                   	// #10
  431d64:	mov	x0, x19
  431d68:	bl	433718 <feof@plt+0x2fe78>
  431d6c:	b	431ce8 <feof@plt+0x2e448>
  431d70:	ldr	x8, [x22]
  431d74:	cbz	x8, 431d1c <feof@plt+0x2e47c>
  431d78:	ldr	x24, [x8, #8]
  431d7c:	cbz	x24, 431d1c <feof@plt+0x2e47c>
  431d80:	ldr	x8, [x24, #32]
  431d84:	cbz	x8, 431dc0 <feof@plt+0x2e520>
  431d88:	mov	x25, xzr
  431d8c:	ldr	w9, [x8, #4]
  431d90:	cmp	x25, x9
  431d94:	b.cs	431dc0 <feof@plt+0x2e520>  // b.hs, b.nlast
  431d98:	add	x8, x8, x25, lsl #3
  431d9c:	ldr	x8, [x8, #8]
  431da0:	mov	x0, x19
  431da4:	ldr	x1, [x8]
  431da8:	bl	4354fc <feof@plt+0x31c5c>
  431dac:	mov	x0, x19
  431db0:	bl	435e80 <feof@plt+0x325e0>
  431db4:	ldr	x8, [x24, #32]
  431db8:	add	x25, x25, #0x1
  431dbc:	cbnz	x8, 431d8c <feof@plt+0x2e4ec>
  431dc0:	ldr	x1, [x24, #8]
  431dc4:	mov	x0, x19
  431dc8:	bl	4354fc <feof@plt+0x31c5c>
  431dcc:	cmp	w23, w26
  431dd0:	b.ge	431ce8 <feof@plt+0x2e448>  // b.tcont
  431dd4:	b	431d60 <feof@plt+0x2e4c0>
  431dd8:	tbnz	w21, #0, 431de8 <feof@plt+0x2e548>
  431ddc:	mov	w1, #0xa                   	// #10
  431de0:	mov	x0, x19
  431de4:	bl	433718 <feof@plt+0x2fe78>
  431de8:	mov	w0, #0x1                   	// #1
  431dec:	ldp	x20, x19, [sp, #80]
  431df0:	ldp	x22, x21, [sp, #64]
  431df4:	ldp	x24, x23, [sp, #48]
  431df8:	ldp	x26, x25, [sp, #32]
  431dfc:	ldr	x27, [sp, #16]
  431e00:	ldp	x29, x30, [sp], #96
  431e04:	ret
  431e08:	ldr	x0, [x20]
  431e0c:	str	wzr, [x20, #40]
  431e10:	mov	w1, #0x1                   	// #1
  431e14:	bl	437438 <feof@plt+0x33b98>
  431e18:	cbz	x0, 431cc4 <feof@plt+0x2e424>
  431e1c:	ldr	w8, [x20, #40]
  431e20:	ldr	x0, [x20]
  431e24:	add	w9, w8, #0x1
  431e28:	add	w1, w8, #0x2
  431e2c:	str	w9, [x20, #40]
  431e30:	bl	437438 <feof@plt+0x33b98>
  431e34:	cbnz	x0, 431e1c <feof@plt+0x2e57c>
  431e38:	b	431cc4 <feof@plt+0x2e424>
  431e3c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  431e40:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  431e44:	add	x0, x0, #0x19e
  431e48:	add	x2, x2, #0x4b5
  431e4c:	mov	w1, #0x3d                  	// #61
  431e50:	bl	429434 <feof@plt+0x25b94>
  431e54:	stp	x29, x30, [sp, #-80]!
  431e58:	str	x25, [sp, #16]
  431e5c:	stp	x24, x23, [sp, #32]
  431e60:	stp	x22, x21, [sp, #48]
  431e64:	stp	x20, x19, [sp, #64]
  431e68:	mov	x29, sp
  431e6c:	add	x19, x0, #0x8
  431e70:	mov	x22, x0
  431e74:	mov	x0, x19
  431e78:	mov	w21, w1
  431e7c:	bl	433480 <feof@plt+0x2fbe0>
  431e80:	ldr	x8, [x22, #8]
  431e84:	cbz	x8, 431e9c <feof@plt+0x2e5fc>
  431e88:	ldr	x9, [x22, #16]
  431e8c:	ldr	w0, [x8]
  431e90:	mov	w1, w21
  431e94:	blr	x9
  431e98:	cbz	w0, 431f9c <feof@plt+0x2e6fc>
  431e9c:	mov	w0, #0x28                  	// #40
  431ea0:	bl	403440 <_Znwm@plt>
  431ea4:	mov	x20, x0
  431ea8:	ldr	x0, [x22]
  431eac:	movi	v0.2d, #0x0
  431eb0:	mov	x24, x20
  431eb4:	mov	w1, w21
  431eb8:	str	w21, [x20]
  431ebc:	str	q0, [x24, #8]!
  431ec0:	stur	q0, [x20, #24]
  431ec4:	bl	437438 <feof@plt+0x33b98>
  431ec8:	cbz	x0, 431f2c <feof@plt+0x2e68c>
  431ecc:	ldr	w8, [x20, #20]
  431ed0:	mov	x23, x0
  431ed4:	str	w1, [x20, #16]
  431ed8:	cmp	w8, w1
  431edc:	b.le	431ee8 <feof@plt+0x2e648>
  431ee0:	ldr	x0, [x24]
  431ee4:	b	431f08 <feof@plt+0x2e668>
  431ee8:	ldr	x0, [x20, #8]
  431eec:	lsl	w8, w1, #1
  431ef0:	add	w25, w8, #0x2
  431ef4:	sxtw	x1, w25
  431ef8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  431efc:	ldr	w1, [x20, #16]
  431f00:	str	x0, [x20, #8]
  431f04:	str	w25, [x20, #20]
  431f08:	sxtw	x2, w1
  431f0c:	mov	x1, x23
  431f10:	bl	402fc0 <memcpy@plt>
  431f14:	ldp	w8, w9, [x20, #16]
  431f18:	sxtw	x8, w8
  431f1c:	cmp	w8, w9
  431f20:	b.ge	43201c <feof@plt+0x2e77c>  // b.tcont
  431f24:	ldr	x9, [x24]
  431f28:	strb	wzr, [x9, x8]
  431f2c:	ldr	x8, [x24]
  431f30:	cbz	x8, 431f84 <feof@plt+0x2e6e4>
  431f34:	mov	x0, x19
  431f38:	mov	w1, w21
  431f3c:	bl	433480 <feof@plt+0x2fbe0>
  431f40:	ldr	x8, [x19]
  431f44:	cbz	x8, 431fb0 <feof@plt+0x2e710>
  431f48:	ldr	x9, [x22, #16]
  431f4c:	ldr	w0, [x8]
  431f50:	mov	w1, w21
  431f54:	blr	x9
  431f58:	ldr	x24, [x22, #8]
  431f5c:	mov	w23, w0
  431f60:	cbnz	w0, 431fb8 <feof@plt+0x2e718>
  431f64:	cbz	x24, 431fb8 <feof@plt+0x2e718>
  431f68:	ldr	x8, [x22, #32]
  431f6c:	cbz	x8, 431f7c <feof@plt+0x2e6dc>
  431f70:	ldr	x0, [x24, #8]
  431f74:	blr	x8
  431f78:	ldr	x24, [x19]
  431f7c:	str	x20, [x24, #8]
  431f80:	b	432000 <feof@plt+0x2e760>
  431f84:	mov	x0, x20
  431f88:	bl	433138 <feof@plt+0x2f898>
  431f8c:	mov	x0, x20
  431f90:	bl	403410 <_ZdlPv@plt>
  431f94:	mov	x20, xzr
  431f98:	b	432000 <feof@plt+0x2e760>
  431f9c:	ldr	x8, [x19]
  431fa0:	cbz	x8, 431e9c <feof@plt+0x2e5fc>
  431fa4:	ldr	x20, [x8, #8]
  431fa8:	cbnz	x20, 432000 <feof@plt+0x2e760>
  431fac:	b	431e9c <feof@plt+0x2e5fc>
  431fb0:	mov	w23, wzr
  431fb4:	mov	x24, xzr
  431fb8:	mov	w0, #0x28                  	// #40
  431fbc:	bl	403440 <_Znwm@plt>
  431fc0:	str	w21, [x0]
  431fc4:	str	x20, [x0, #8]
  431fc8:	cbz	x24, 431fe4 <feof@plt+0x2e744>
  431fcc:	tbnz	w23, #31, 431fec <feof@plt+0x2e74c>
  431fd0:	str	x24, [x0, #24]
  431fd4:	ldr	x8, [x24, #16]
  431fd8:	str	x8, [x0, #16]
  431fdc:	str	xzr, [x24, #16]
  431fe0:	b	431ffc <feof@plt+0x2e75c>
  431fe4:	stp	xzr, xzr, [x0, #16]
  431fe8:	b	431ffc <feof@plt+0x2e75c>
  431fec:	str	x24, [x0, #16]
  431ff0:	ldr	x8, [x24, #24]
  431ff4:	str	x8, [x0, #24]
  431ff8:	str	xzr, [x24, #24]
  431ffc:	str	x0, [x19]
  432000:	mov	x0, x20
  432004:	ldp	x20, x19, [sp, #64]
  432008:	ldp	x22, x21, [sp, #48]
  43200c:	ldp	x24, x23, [sp, #32]
  432010:	ldr	x25, [sp, #16]
  432014:	ldp	x29, x30, [sp], #80
  432018:	ret
  43201c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432020:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432024:	add	x0, x0, #0x426
  432028:	add	x2, x2, #0x1b8
  43202c:	mov	w1, #0x36b                 	// #875
  432030:	bl	429434 <feof@plt+0x25b94>
  432034:	stp	x29, x30, [sp, #-96]!
  432038:	str	x27, [sp, #16]
  43203c:	stp	x26, x25, [sp, #32]
  432040:	stp	x24, x23, [sp, #48]
  432044:	stp	x22, x21, [sp, #64]
  432048:	stp	x20, x19, [sp, #80]
  43204c:	mov	x29, sp
  432050:	mov	w21, w4
  432054:	mov	x23, x3
  432058:	mov	w22, w2
  43205c:	mov	w20, w1
  432060:	cmp	w4, #0x2
  432064:	mov	x19, x0
  432068:	b.lt	4320ec <feof@plt+0x2e84c>  // b.tstop
  43206c:	sxtw	x8, w21
  432070:	sub	x24, x8, #0x1
  432074:	ldrb	w8, [x23, x24]
  432078:	cmp	w8, #0xa
  43207c:	b.ne	4320ec <feof@plt+0x2e84c>  // b.any
  432080:	mov	w0, #0x10                  	// #16
  432084:	bl	403440 <_Znwm@plt>
  432088:	mov	x20, x0
  43208c:	mov	x0, x23
  432090:	mov	x1, x24
  432094:	bl	47d234 <_obstack_memory_used@@Base+0x1530>
  432098:	str	x0, [x20]
  43209c:	str	w24, [x20, #8]
  4320a0:	ldr	x23, [x19, #32]
  4320a4:	cbz	x23, 4321e4 <feof@plt+0x2e944>
  4320a8:	ldp	w8, w9, [x23]
  4320ac:	and	w0, w8, #0x7fffffff
  4320b0:	cmp	w0, w9
  4320b4:	b.ne	4323c4 <feof@plt+0x2eb24>  // b.any
  4320b8:	tbnz	w8, #31, 4322cc <feof@plt+0x2ea2c>
  4320bc:	add	w1, w0, #0x1
  4320c0:	bl	425fbc <feof@plt+0x2271c>
  4320c4:	ldr	x8, [x19, #32]
  4320c8:	mov	w9, w0
  4320cc:	lsl	x9, x9, #3
  4320d0:	mov	w21, w0
  4320d4:	add	x1, x9, #0x8
  4320d8:	mov	w22, wzr
  4320dc:	cbz	x8, 432518 <feof@plt+0x2ec78>
  4320e0:	ldr	w25, [x8, #4]
  4320e4:	mov	w24, wzr
  4320e8:	b	4322fc <feof@plt+0x2ea5c>
  4320ec:	ldr	x10, [x19, #24]
  4320f0:	cbz	x10, 432180 <feof@plt+0x2e8e0>
  4320f4:	ldr	w8, [x10, #4]
  4320f8:	cbz	w8, 432180 <feof@plt+0x2e8e0>
  4320fc:	add	x9, x10, #0x8
  432100:	mov	x11, xzr
  432104:	add	x12, x10, #0x10
  432108:	mov	x13, x9
  43210c:	b	432128 <feof@plt+0x2e888>
  432110:	add	x11, x11, #0x1
  432114:	cmp	x11, x8
  432118:	csel	x13, x12, xzr, cc  // cc = lo, ul, last
  43211c:	cmp	x8, x11
  432120:	add	x12, x12, #0x8
  432124:	b.eq	432140 <feof@plt+0x2e8a0>  // b.none
  432128:	ldr	w14, [x13]
  43212c:	cmp	w14, w20
  432130:	b.gt	432110 <feof@plt+0x2e870>
  432134:	ldr	w13, [x13, #4]
  432138:	add	w20, w13, w20
  43213c:	b	432110 <feof@plt+0x2e870>
  432140:	cbz	w8, 432180 <feof@plt+0x2e8e0>
  432144:	mov	x11, xzr
  432148:	add	x10, x10, #0x10
  43214c:	b	432168 <feof@plt+0x2e8c8>
  432150:	add	x11, x11, #0x1
  432154:	cmp	x11, x8
  432158:	csel	x9, x10, xzr, cc  // cc = lo, ul, last
  43215c:	cmp	x8, x11
  432160:	add	x10, x10, #0x8
  432164:	b.eq	432180 <feof@plt+0x2e8e0>  // b.none
  432168:	ldr	w12, [x9]
  43216c:	cmp	w12, w22
  432170:	b.gt	432150 <feof@plt+0x2e8b0>
  432174:	ldr	w9, [x9, #4]
  432178:	add	w22, w9, w22
  43217c:	b	432150 <feof@plt+0x2e8b0>
  432180:	cmp	w20, #0x0
  432184:	b.le	432530 <feof@plt+0x2ec90>
  432188:	cmp	w22, #0x0
  43218c:	b.le	432548 <feof@plt+0x2eca8>
  432190:	cmp	w20, w22
  432194:	b.le	4321a0 <feof@plt+0x2e900>
  432198:	mov	w0, wzr
  43219c:	b	4324fc <feof@plt+0x2ec5c>
  4321a0:	ldr	w8, [x19, #16]
  4321a4:	mov	w0, wzr
  4321a8:	add	w9, w8, #0x1
  4321ac:	cmp	w20, w9
  4321b0:	b.gt	4324fc <feof@plt+0x2ec5c>
  4321b4:	cmp	w22, w9
  4321b8:	b.gt	4324fc <feof@plt+0x2ec5c>
  4321bc:	sub	w24, w20, #0x1
  4321c0:	sub	w26, w22, #0x1
  4321c4:	ldr	w9, [x19, #20]
  4321c8:	sub	w10, w24, w26
  4321cc:	add	w10, w10, w21
  4321d0:	add	w25, w10, w8
  4321d4:	cmp	w9, w25
  4321d8:	b.le	4321f4 <feof@plt+0x2e954>
  4321dc:	ldr	x0, [x19, #8]
  4321e0:	b	432214 <feof@plt+0x2e974>
  4321e4:	mov	w22, wzr
  4321e8:	mov	w24, wzr
  4321ec:	mov	w21, #0x4                   	// #4
  4321f0:	b	4322e8 <feof@plt+0x2ea48>
  4321f4:	ldr	x0, [x19, #8]
  4321f8:	lsl	w8, w25, #1
  4321fc:	add	w27, w8, #0x2
  432200:	sxtw	x1, w27
  432204:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  432208:	ldr	w8, [x19, #16]
  43220c:	str	x0, [x19, #8]
  432210:	str	w27, [x19, #20]
  432214:	cmp	w26, w8
  432218:	b.gt	432560 <feof@plt+0x2ecc0>
  43221c:	add	x1, x0, w26, sxtw
  432220:	add	x8, x0, w8, sxtw
  432224:	sxtw	x26, w24
  432228:	sub	x2, x8, x1
  43222c:	add	x8, x0, x26
  432230:	sxtw	x24, w21
  432234:	add	x0, x8, x24
  432238:	bl	403580 <memmove@plt>
  43223c:	ldr	x8, [x19, #8]
  432240:	mov	x1, x23
  432244:	mov	x2, x24
  432248:	add	x0, x8, x26
  43224c:	bl	402fc0 <memcpy@plt>
  432250:	ldr	w8, [x19, #20]
  432254:	str	w25, [x19, #16]
  432258:	cmp	w25, w8
  43225c:	b.ge	432578 <feof@plt+0x2ecd8>  // b.tcont
  432260:	ldr	x8, [x19, #8]
  432264:	strb	wzr, [x8, w25, sxtw]
  432268:	ldr	x24, [x19, #24]
  43226c:	add	w8, w20, w21
  432270:	sub	w22, w8, w22
  432274:	cbz	x24, 4322bc <feof@plt+0x2ea1c>
  432278:	ldp	w8, w9, [x24]
  43227c:	and	w0, w8, #0x7fffffff
  432280:	cmp	w0, w9
  432284:	b.ne	4324d8 <feof@plt+0x2ec38>  // b.any
  432288:	tbnz	w8, #31, 4323e0 <feof@plt+0x2eb40>
  43228c:	add	w1, w0, #0x1
  432290:	bl	425fbc <feof@plt+0x2271c>
  432294:	ldr	x8, [x19, #24]
  432298:	mov	w9, w0
  43229c:	lsl	x9, x9, #3
  4322a0:	mov	w21, w0
  4322a4:	add	x1, x9, #0x8
  4322a8:	mov	w23, wzr
  4322ac:	cbz	x8, 432524 <feof@plt+0x2ec84>
  4322b0:	ldr	w26, [x8, #4]
  4322b4:	mov	w25, wzr
  4322b8:	b	432410 <feof@plt+0x2eb70>
  4322bc:	mov	w23, wzr
  4322c0:	mov	w25, wzr
  4322c4:	mov	w21, #0x4                   	// #4
  4322c8:	b	4323fc <feof@plt+0x2eb5c>
  4322cc:	str	xzr, [x19, #32]
  4322d0:	ldr	w22, [x23, #4]
  4322d4:	mov	w8, #0x4                   	// #4
  4322d8:	mov	w24, #0x1                   	// #1
  4322dc:	add	w9, w22, #0x1
  4322e0:	cmp	w9, #0x4
  4322e4:	csinc	w21, w8, w22, ls  // ls = plast
  4322e8:	mov	w9, w21
  4322ec:	lsl	x9, x9, #3
  4322f0:	mov	x8, xzr
  4322f4:	mov	w25, wzr
  4322f8:	add	x1, x9, #0x8
  4322fc:	mov	x0, x8
  432300:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  432304:	and	w8, w21, #0x7fffffff
  432308:	str	x0, [x19, #32]
  43230c:	stp	w8, w25, [x0]
  432310:	cbz	w24, 4323c4 <feof@plt+0x2eb24>
  432314:	ldr	x11, [x19, #32]
  432318:	cbz	w22, 4323c0 <feof@plt+0x2eb20>
  43231c:	sub	w12, w22, #0x1
  432320:	add	x8, x23, #0x8
  432324:	cmp	w12, #0x3
  432328:	add	x9, x11, #0x8
  43232c:	b.cs	432338 <feof@plt+0x2ea98>  // b.hs, b.nlast
  432330:	mov	w10, w22
  432334:	b	4323ac <feof@plt+0x2eb0c>
  432338:	lsl	x10, x12, #3
  43233c:	add	x13, x23, x10
  432340:	add	x13, x13, #0x10
  432344:	cmp	x9, x13
  432348:	b.cs	432360 <feof@plt+0x2eac0>  // b.hs, b.nlast
  43234c:	add	x10, x11, x10
  432350:	add	x10, x10, #0x10
  432354:	cmp	x8, x10
  432358:	mov	w10, w22
  43235c:	b.cc	4323ac <feof@plt+0x2eb0c>  // b.lo, b.ul, b.last
  432360:	add	x12, x12, #0x1
  432364:	and	x13, x12, #0x1fffffffc
  432368:	lsl	x8, x13, #3
  43236c:	add	x14, x11, #0x18
  432370:	add	x9, x23, x8
  432374:	add	x11, x11, x8
  432378:	sub	w10, w22, w13
  43237c:	add	x8, x9, #0x8
  432380:	add	x9, x11, #0x8
  432384:	add	x11, x23, #0x18
  432388:	mov	x15, x13
  43238c:	ldp	q0, q1, [x11, #-16]
  432390:	subs	x15, x15, #0x4
  432394:	add	x11, x11, #0x20
  432398:	stp	q0, q1, [x14, #-16]
  43239c:	add	x14, x14, #0x20
  4323a0:	b.ne	43238c <feof@plt+0x2eaec>  // b.any
  4323a4:	cmp	x12, x13
  4323a8:	b.eq	4323bc <feof@plt+0x2eb1c>  // b.none
  4323ac:	ldr	x11, [x8], #8
  4323b0:	subs	w10, w10, #0x1
  4323b4:	str	x11, [x9], #8
  4323b8:	b.ne	4323ac <feof@plt+0x2eb0c>  // b.any
  4323bc:	ldr	x11, [x19, #32]
  4323c0:	str	w22, [x11, #4]
  4323c4:	ldr	x8, [x19, #32]
  4323c8:	ldr	w9, [x8, #4]
  4323cc:	add	w10, w9, #0x1
  4323d0:	add	x9, x8, x9, lsl #3
  4323d4:	str	w10, [x8, #4]
  4323d8:	str	x20, [x9, #8]
  4323dc:	b	4324f8 <feof@plt+0x2ec58>
  4323e0:	str	xzr, [x19, #24]
  4323e4:	ldr	w23, [x24, #4]
  4323e8:	mov	w8, #0x4                   	// #4
  4323ec:	mov	w25, #0x1                   	// #1
  4323f0:	add	w9, w23, #0x1
  4323f4:	cmp	w9, #0x4
  4323f8:	csinc	w21, w8, w23, ls  // ls = plast
  4323fc:	mov	w9, w21
  432400:	lsl	x9, x9, #3
  432404:	mov	x8, xzr
  432408:	mov	w26, wzr
  43240c:	add	x1, x9, #0x8
  432410:	mov	x0, x8
  432414:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  432418:	and	w8, w21, #0x7fffffff
  43241c:	str	x0, [x19, #24]
  432420:	stp	w8, w26, [x0]
  432424:	cbz	w25, 4324d8 <feof@plt+0x2ec38>
  432428:	ldr	x11, [x19, #24]
  43242c:	cbz	w23, 4324d4 <feof@plt+0x2ec34>
  432430:	sub	w12, w23, #0x1
  432434:	add	x8, x24, #0x8
  432438:	cmp	w12, #0x3
  43243c:	add	x9, x11, #0x8
  432440:	b.cs	43244c <feof@plt+0x2ebac>  // b.hs, b.nlast
  432444:	mov	w10, w23
  432448:	b	4324c0 <feof@plt+0x2ec20>
  43244c:	lsl	x10, x12, #3
  432450:	add	x13, x24, x10
  432454:	add	x13, x13, #0x10
  432458:	cmp	x9, x13
  43245c:	b.cs	432474 <feof@plt+0x2ebd4>  // b.hs, b.nlast
  432460:	add	x10, x11, x10
  432464:	add	x10, x10, #0x10
  432468:	cmp	x8, x10
  43246c:	mov	w10, w23
  432470:	b.cc	4324c0 <feof@plt+0x2ec20>  // b.lo, b.ul, b.last
  432474:	add	x12, x12, #0x1
  432478:	and	x13, x12, #0x1fffffffc
  43247c:	lsl	x8, x13, #3
  432480:	add	x14, x11, #0x18
  432484:	add	x9, x24, x8
  432488:	add	x11, x11, x8
  43248c:	sub	w10, w23, w13
  432490:	add	x8, x9, #0x8
  432494:	add	x9, x11, #0x8
  432498:	add	x11, x24, #0x18
  43249c:	mov	x15, x13
  4324a0:	ldp	q0, q1, [x11, #-16]
  4324a4:	subs	x15, x15, #0x4
  4324a8:	add	x11, x11, #0x20
  4324ac:	stp	q0, q1, [x14, #-16]
  4324b0:	add	x14, x14, #0x20
  4324b4:	b.ne	4324a0 <feof@plt+0x2ec00>  // b.any
  4324b8:	cmp	x12, x13
  4324bc:	b.eq	4324d0 <feof@plt+0x2ec30>  // b.none
  4324c0:	ldr	x11, [x8], #8
  4324c4:	subs	w10, w10, #0x1
  4324c8:	str	x11, [x9], #8
  4324cc:	b.ne	4324c0 <feof@plt+0x2ec20>  // b.any
  4324d0:	ldr	x11, [x19, #24]
  4324d4:	str	w23, [x11, #4]
  4324d8:	ldr	x8, [x19, #24]
  4324dc:	mov	w10, w20
  4324e0:	bfi	x10, x22, #32, #32
  4324e4:	ldr	w9, [x8, #4]
  4324e8:	add	w11, w9, #0x1
  4324ec:	add	x9, x8, x9, lsl #3
  4324f0:	str	w11, [x8, #4]
  4324f4:	str	x10, [x9, #8]
  4324f8:	mov	w0, #0x1                   	// #1
  4324fc:	ldp	x20, x19, [sp, #80]
  432500:	ldp	x22, x21, [sp, #64]
  432504:	ldp	x24, x23, [sp, #48]
  432508:	ldp	x26, x25, [sp, #32]
  43250c:	ldr	x27, [sp, #16]
  432510:	ldp	x29, x30, [sp], #96
  432514:	ret
  432518:	mov	w24, wzr
  43251c:	mov	w25, wzr
  432520:	b	4322fc <feof@plt+0x2ea5c>
  432524:	mov	w25, wzr
  432528:	mov	w26, wzr
  43252c:	b	432410 <feof@plt+0x2eb70>
  432530:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432534:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432538:	add	x0, x0, #0x426
  43253c:	add	x2, x2, #0x4a9
  432540:	mov	w1, #0x2fa                 	// #762
  432544:	bl	429434 <feof@plt+0x25b94>
  432548:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43254c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432550:	add	x0, x0, #0x426
  432554:	add	x2, x2, #0x4a9
  432558:	mov	w1, #0x2fb                 	// #763
  43255c:	bl	429434 <feof@plt+0x25b94>
  432560:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432564:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432568:	add	x0, x0, #0x426
  43256c:	add	x2, x2, #0x4a9
  432570:	mov	w1, #0x30b                 	// #779
  432574:	bl	429434 <feof@plt+0x25b94>
  432578:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43257c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432580:	add	x0, x0, #0x426
  432584:	add	x2, x2, #0x1b8
  432588:	mov	w1, #0x36b                 	// #875
  43258c:	bl	429434 <feof@plt+0x25b94>
  432590:	stp	x29, x30, [sp, #-48]!
  432594:	str	x21, [sp, #16]
  432598:	stp	x20, x19, [sp, #32]
  43259c:	mov	x29, sp
  4325a0:	add	x19, x0, #0x8
  4325a4:	mov	x21, x0
  4325a8:	mov	x0, x19
  4325ac:	mov	w20, w1
  4325b0:	bl	433480 <feof@plt+0x2fbe0>
  4325b4:	ldr	x8, [x21, #8]
  4325b8:	cbz	x8, 4325d0 <feof@plt+0x2ed30>
  4325bc:	ldr	x9, [x21, #16]
  4325c0:	ldr	w0, [x8]
  4325c4:	mov	w1, w20
  4325c8:	blr	x9
  4325cc:	cbz	w0, 4325e4 <feof@plt+0x2ed44>
  4325d0:	mov	x0, xzr
  4325d4:	ldp	x20, x19, [sp, #32]
  4325d8:	ldr	x21, [sp, #16]
  4325dc:	ldp	x29, x30, [sp], #48
  4325e0:	ret
  4325e4:	ldr	x8, [x19]
  4325e8:	cbz	x8, 4325d0 <feof@plt+0x2ed30>
  4325ec:	ldr	x0, [x8, #8]
  4325f0:	b	4325d4 <feof@plt+0x2ed34>
  4325f4:	ldr	x9, [x0, #24]
  4325f8:	mov	w0, w1
  4325fc:	cbz	x9, 432644 <feof@plt+0x2eda4>
  432600:	ldr	w8, [x9, #4]
  432604:	cbz	w8, 432644 <feof@plt+0x2eda4>
  432608:	add	x11, x9, #0x8
  43260c:	add	x9, x9, #0x10
  432610:	mov	w10, #0x1                   	// #1
  432614:	b	43262c <feof@plt+0x2ed8c>
  432618:	cmp	x10, x8
  43261c:	csel	x11, x9, xzr, cc  // cc = lo, ul, last
  432620:	add	x9, x9, #0x8
  432624:	add	x10, x10, #0x1
  432628:	b.cs	432644 <feof@plt+0x2eda4>  // b.hs, b.nlast
  43262c:	ldr	w12, [x11]
  432630:	cmp	w12, w0
  432634:	b.gt	432618 <feof@plt+0x2ed78>
  432638:	ldr	w11, [x11, #4]
  43263c:	add	w0, w11, w0
  432640:	b	432618 <feof@plt+0x2ed78>
  432644:	ret
  432648:	stp	x29, x30, [sp, #-32]!
  43264c:	stp	x20, x19, [sp, #16]
  432650:	mov	x29, sp
  432654:	cbz	x1, 4326c0 <feof@plt+0x2ee20>
  432658:	ldr	w8, [x0, #40]
  43265c:	mov	x20, x1
  432660:	mov	x19, x0
  432664:	cmn	w8, #0x1
  432668:	b.eq	43268c <feof@plt+0x2edec>  // b.none
  43266c:	ldr	x0, [x19]
  432670:	bl	437798 <feof@plt+0x33ef8>
  432674:	and	w8, w0, #0x1
  432678:	strb	w8, [x20]
  43267c:	ldr	w0, [x19, #40]
  432680:	ldp	x20, x19, [sp, #16]
  432684:	ldp	x29, x30, [sp], #32
  432688:	ret
  43268c:	ldr	x0, [x19]
  432690:	str	wzr, [x19, #40]
  432694:	mov	w1, #0x1                   	// #1
  432698:	bl	437438 <feof@plt+0x33b98>
  43269c:	cbz	x0, 43266c <feof@plt+0x2edcc>
  4326a0:	ldr	w8, [x19, #40]
  4326a4:	ldr	x0, [x19]
  4326a8:	add	w9, w8, #0x1
  4326ac:	add	w1, w8, #0x2
  4326b0:	str	w9, [x19, #40]
  4326b4:	bl	437438 <feof@plt+0x33b98>
  4326b8:	cbnz	x0, 4326a0 <feof@plt+0x2ee00>
  4326bc:	b	43266c <feof@plt+0x2edcc>
  4326c0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4326c4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4326c8:	add	x0, x0, #0x426
  4326cc:	add	x2, x2, #0x49b
  4326d0:	mov	w1, #0x296                 	// #662
  4326d4:	bl	429434 <feof@plt+0x25b94>
  4326d8:	stp	x29, x30, [sp, #-48]!
  4326dc:	str	x21, [sp, #16]
  4326e0:	stp	x20, x19, [sp, #32]
  4326e4:	mov	x29, sp
  4326e8:	ldr	x8, [x0, #32]
  4326ec:	mov	x19, x0
  4326f0:	mov	x20, x1
  4326f4:	cbz	x8, 432730 <feof@plt+0x2ee90>
  4326f8:	mov	x21, xzr
  4326fc:	ldr	w9, [x8, #4]
  432700:	cmp	x21, x9
  432704:	b.cs	432730 <feof@plt+0x2ee90>  // b.hs, b.nlast
  432708:	add	x8, x8, x21, lsl #3
  43270c:	ldr	x8, [x8, #8]
  432710:	mov	x0, x20
  432714:	ldr	x1, [x8]
  432718:	bl	4354fc <feof@plt+0x31c5c>
  43271c:	mov	x0, x20
  432720:	bl	435e80 <feof@plt+0x325e0>
  432724:	ldr	x8, [x19, #32]
  432728:	add	x21, x21, #0x1
  43272c:	cbnz	x8, 4326fc <feof@plt+0x2ee5c>
  432730:	ldr	x1, [x19, #8]
  432734:	mov	x0, x20
  432738:	ldp	x20, x19, [sp, #32]
  43273c:	ldr	x21, [sp, #16]
  432740:	ldp	x29, x30, [sp], #48
  432744:	b	4354fc <feof@plt+0x31c5c>
  432748:	stp	x29, x30, [sp, #-96]!
  43274c:	stp	x28, x27, [sp, #16]
  432750:	stp	x26, x25, [sp, #32]
  432754:	stp	x24, x23, [sp, #48]
  432758:	stp	x22, x21, [sp, #64]
  43275c:	stp	x20, x19, [sp, #80]
  432760:	mov	x29, sp
  432764:	mov	x19, x1
  432768:	mov	x20, x0
  43276c:	tbz	w2, #0, 4327cc <feof@plt+0x2ef2c>
  432770:	ldrb	w0, [x19, #67]
  432774:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  432778:	add	x1, x1, #0xffd
  43277c:	mov	w2, #0xd                   	// #13
  432780:	bl	42c4e0 <feof@plt+0x28c40>
  432784:	mov	x1, x0
  432788:	mov	x0, x19
  43278c:	bl	4354fc <feof@plt+0x31c5c>
  432790:	ldr	x2, [x20]
  432794:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432798:	add	x1, x1, #0x45b
  43279c:	mov	x0, x19
  4327a0:	bl	435d34 <feof@plt+0x32494>
  4327a4:	ldr	x2, [x20]
  4327a8:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4327ac:	add	x1, x1, #0x463
  4327b0:	mov	x0, x19
  4327b4:	bl	435d34 <feof@plt+0x32494>
  4327b8:	ldrb	w0, [x19, #67]
  4327bc:	bl	42c564 <feof@plt+0x28cc4>
  4327c0:	mov	x1, x0
  4327c4:	mov	x0, x19
  4327c8:	bl	4354fc <feof@plt+0x31c5c>
  4327cc:	mov	x21, x20
  4327d0:	ldr	x8, [x21, #8]!
  4327d4:	cbz	x8, 4327ec <feof@plt+0x2ef4c>
  4327d8:	mov	x9, x8
  4327dc:	ldr	x8, [x8, #16]
  4327e0:	cbnz	x8, 4327d8 <feof@plt+0x2ef38>
  4327e4:	ldr	x28, [x9, #8]
  4327e8:	b	4327f0 <feof@plt+0x2ef50>
  4327ec:	mov	x28, xzr
  4327f0:	ldr	w8, [x20, #40]
  4327f4:	cmn	w8, #0x1
  4327f8:	b.eq	432980 <feof@plt+0x2f0e0>  // b.none
  4327fc:	ldr	x0, [x20]
  432800:	bl	437798 <feof@plt+0x33ef8>
  432804:	cbz	x28, 432964 <feof@plt+0x2f0c4>
  432808:	ldr	w25, [x20, #40]
  43280c:	ldr	x8, [x20, #8]
  432810:	mov	w24, wzr
  432814:	mov	w27, #0x2                   	// #2
  432818:	b	432830 <feof@plt+0x2ef90>
  43281c:	mov	x9, x8
  432820:	cbz	x8, 432964 <feof@plt+0x2f0c4>
  432824:	ldr	x28, [x9, #8]
  432828:	add	w24, w22, w24
  43282c:	cbz	x28, 432964 <feof@plt+0x2f0c4>
  432830:	ldr	w23, [x28]
  432834:	mov	w9, #0x4                   	// #4
  432838:	cmp	w23, #0x4
  43283c:	csel	w9, w23, w9, gt
  432840:	sub	w22, w9, #0x3
  432844:	b	432868 <feof@plt+0x2efc8>
  432848:	ldr	w10, [x10, #4]
  43284c:	cmp	w10, #0x0
  432850:	cinc	w10, w27, ne  // ne = any
  432854:	add	w9, w10, w9
  432858:	ldr	w23, [x28]
  43285c:	sub	w10, w23, #0x3
  432860:	cmp	w9, w10
  432864:	b.lt	4328d4 <feof@plt+0x2f034>  // b.tstop
  432868:	mov	x26, x28
  43286c:	cbz	x8, 4328d4 <feof@plt+0x2f034>
  432870:	mov	x0, x21
  432874:	mov	w1, w23
  432878:	bl	433480 <feof@plt+0x2fbe0>
  43287c:	ldp	x8, x9, [x20, #8]
  432880:	mov	w1, w23
  432884:	ldr	w0, [x8]
  432888:	blr	x9
  43288c:	ldr	x8, [x20, #8]
  432890:	cmp	w0, #0x0
  432894:	b.le	4328a4 <feof@plt+0x2f004>
  432898:	mov	x10, x8
  43289c:	cbnz	x8, 4328b8 <feof@plt+0x2f018>
  4328a0:	b	4328d4 <feof@plt+0x2f034>
  4328a4:	ldr	x9, [x8, #24]
  4328a8:	cbz	x9, 4328d4 <feof@plt+0x2f034>
  4328ac:	mov	x10, x9
  4328b0:	ldr	x9, [x9, #16]
  4328b4:	cbnz	x9, 4328ac <feof@plt+0x2f00c>
  4328b8:	ldr	x28, [x10, #8]
  4328bc:	cbz	x28, 4328d4 <feof@plt+0x2f034>
  4328c0:	ldr	x10, [x26, #24]
  4328c4:	ldr	w9, [x26]
  4328c8:	cbnz	x10, 432848 <feof@plt+0x2efa8>
  4328cc:	add	w9, w9, #0x2
  4328d0:	b	432858 <feof@plt+0x2efb8>
  4328d4:	ldr	x9, [x26, #24]
  4328d8:	ldr	w8, [x26]
  4328dc:	cbz	x9, 4328f4 <feof@plt+0x2f054>
  4328e0:	ldr	w9, [x9, #4]
  4328e4:	cmp	w9, #0x0
  4328e8:	cinc	w9, w27, ne  // ne = any
  4328ec:	add	w8, w9, w8
  4328f0:	b	4328f8 <feof@plt+0x2f058>
  4328f4:	add	w8, w8, #0x2
  4328f8:	cmp	w8, w25
  4328fc:	csel	w3, w25, w8, gt
  432900:	add	w4, w22, w24
  432904:	mov	x0, x20
  432908:	mov	x1, x19
  43290c:	mov	w2, w22
  432910:	bl	4329b4 <feof@plt+0x2f114>
  432914:	ldr	x8, [x20, #8]
  432918:	cbz	x8, 432964 <feof@plt+0x2f0c4>
  43291c:	ldr	w23, [x26]
  432920:	mov	w22, w0
  432924:	mov	x0, x21
  432928:	mov	w1, w23
  43292c:	bl	433480 <feof@plt+0x2fbe0>
  432930:	ldp	x8, x9, [x20, #8]
  432934:	mov	w1, w23
  432938:	ldr	w0, [x8]
  43293c:	blr	x9
  432940:	ldr	x8, [x20, #8]
  432944:	cmp	w0, #0x0
  432948:	b.gt	43281c <feof@plt+0x2ef7c>
  43294c:	ldr	x10, [x8, #24]
  432950:	cbz	x10, 432964 <feof@plt+0x2f0c4>
  432954:	mov	x9, x10
  432958:	ldr	x10, [x10, #16]
  43295c:	cbnz	x10, 432954 <feof@plt+0x2f0b4>
  432960:	b	432824 <feof@plt+0x2ef84>
  432964:	ldp	x20, x19, [sp, #80]
  432968:	ldp	x22, x21, [sp, #64]
  43296c:	ldp	x24, x23, [sp, #48]
  432970:	ldp	x26, x25, [sp, #32]
  432974:	ldp	x28, x27, [sp, #16]
  432978:	ldp	x29, x30, [sp], #96
  43297c:	ret
  432980:	ldr	x0, [x20]
  432984:	str	wzr, [x20, #40]
  432988:	mov	w1, #0x1                   	// #1
  43298c:	bl	437438 <feof@plt+0x33b98>
  432990:	cbz	x0, 4327fc <feof@plt+0x2ef5c>
  432994:	ldr	w8, [x20, #40]
  432998:	ldr	x0, [x20]
  43299c:	add	w9, w8, #0x1
  4329a0:	add	w1, w8, #0x2
  4329a4:	str	w9, [x20, #40]
  4329a8:	bl	437438 <feof@plt+0x33b98>
  4329ac:	cbnz	x0, 432994 <feof@plt+0x2f0f4>
  4329b0:	b	4327fc <feof@plt+0x2ef5c>
  4329b4:	stp	x29, x30, [sp, #-96]!
  4329b8:	str	x27, [sp, #16]
  4329bc:	stp	x26, x25, [sp, #32]
  4329c0:	stp	x24, x23, [sp, #48]
  4329c4:	stp	x22, x21, [sp, #64]
  4329c8:	stp	x20, x19, [sp, #80]
  4329cc:	mov	x29, sp
  4329d0:	subs	w8, w3, w2
  4329d4:	mov	w25, w4
  4329d8:	mov	w19, w3
  4329dc:	mov	w24, w2
  4329e0:	mov	x20, x1
  4329e4:	mov	x21, x0
  4329e8:	add	w22, w8, #0x1
  4329ec:	mov	w23, wzr
  4329f0:	b.ge	432a70 <feof@plt+0x2f1d0>  // b.tcont
  4329f4:	ldrb	w0, [x20, #67]
  4329f8:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4329fc:	add	x1, x1, #0xb
  432a00:	mov	w2, #0x9                   	// #9
  432a04:	bl	42c4e0 <feof@plt+0x28c40>
  432a08:	mov	x1, x0
  432a0c:	mov	x0, x20
  432a10:	bl	4354fc <feof@plt+0x31c5c>
  432a14:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432a18:	add	x1, x1, #0x46b
  432a1c:	mov	x0, x20
  432a20:	mov	w2, w24
  432a24:	mov	w3, w22
  432a28:	mov	w4, w25
  432a2c:	mov	w5, w23
  432a30:	bl	435d34 <feof@plt+0x32494>
  432a34:	ldrb	w0, [x20, #67]
  432a38:	bl	42c564 <feof@plt+0x28cc4>
  432a3c:	mov	x1, x0
  432a40:	mov	x0, x20
  432a44:	bl	4354fc <feof@plt+0x31c5c>
  432a48:	cmp	w19, w24
  432a4c:	b.ge	432adc <feof@plt+0x2f23c>  // b.tcont
  432a50:	sub	w0, w23, w22
  432a54:	ldp	x20, x19, [sp, #80]
  432a58:	ldp	x22, x21, [sp, #64]
  432a5c:	ldp	x24, x23, [sp, #48]
  432a60:	ldp	x26, x25, [sp, #32]
  432a64:	ldr	x27, [sp, #16]
  432a68:	ldp	x29, x30, [sp], #96
  432a6c:	ret
  432a70:	add	x26, x21, #0x8
  432a74:	mov	w27, w24
  432a78:	mov	x0, x26
  432a7c:	mov	w1, w27
  432a80:	bl	433480 <feof@plt+0x2fbe0>
  432a84:	ldr	x8, [x26]
  432a88:	cbz	x8, 432aa0 <feof@plt+0x2f200>
  432a8c:	ldr	x9, [x21, #16]
  432a90:	ldr	w0, [x8]
  432a94:	mov	w1, w27
  432a98:	blr	x9
  432a9c:	cbz	w0, 432ab8 <feof@plt+0x2f218>
  432aa0:	mov	w8, #0x1                   	// #1
  432aa4:	cmp	w27, w19
  432aa8:	add	w27, w27, #0x1
  432aac:	add	w23, w8, w23
  432ab0:	b.lt	432a78 <feof@plt+0x2f1d8>  // b.tstop
  432ab4:	b	4329f4 <feof@plt+0x2f154>
  432ab8:	ldr	x8, [x26]
  432abc:	cbz	x8, 432aa0 <feof@plt+0x2f200>
  432ac0:	ldr	x8, [x8, #8]
  432ac4:	cbz	x8, 432aa0 <feof@plt+0x2f200>
  432ac8:	ldr	x8, [x8, #32]
  432acc:	cbz	x8, 432aa0 <feof@plt+0x2f200>
  432ad0:	ldr	w8, [x8, #4]
  432ad4:	add	w8, w8, #0x1
  432ad8:	b	432aa4 <feof@plt+0x2f204>
  432adc:	add	x25, x21, #0x8
  432ae0:	mov	x0, x25
  432ae4:	mov	w1, w24
  432ae8:	bl	433480 <feof@plt+0x2fbe0>
  432aec:	ldr	x8, [x25]
  432af0:	cbz	x8, 432b08 <feof@plt+0x2f268>
  432af4:	ldr	x9, [x21, #16]
  432af8:	ldr	w0, [x8]
  432afc:	mov	w1, w24
  432b00:	blr	x9
  432b04:	cbz	w0, 432b68 <feof@plt+0x2f2c8>
  432b08:	ldr	x0, [x21]
  432b0c:	mov	w1, w24
  432b10:	bl	437438 <feof@plt+0x33b98>
  432b14:	mov	x26, x0
  432b18:	mov	x27, x1
  432b1c:	mov	w1, #0x20                  	// #32
  432b20:	mov	x0, x20
  432b24:	bl	433718 <feof@plt+0x2fe78>
  432b28:	cmp	w27, #0x1
  432b2c:	b.lt	432b48 <feof@plt+0x2f2a8>  // b.tstop
  432b30:	and	x27, x27, #0xffffffff
  432b34:	ldrb	w1, [x26], #1
  432b38:	mov	x0, x20
  432b3c:	bl	433718 <feof@plt+0x2fe78>
  432b40:	subs	x27, x27, #0x1
  432b44:	b.ne	432b34 <feof@plt+0x2f294>  // b.any
  432b48:	mov	w1, #0xa                   	// #10
  432b4c:	mov	x0, x20
  432b50:	bl	433718 <feof@plt+0x2fe78>
  432b54:	add	w26, w24, #0x1
  432b58:	cmp	w26, w19
  432b5c:	mov	w24, w26
  432b60:	b.le	432ae0 <feof@plt+0x2f240>
  432b64:	b	432a50 <feof@plt+0x2f1b0>
  432b68:	ldr	x8, [x25]
  432b6c:	cbz	x8, 432b08 <feof@plt+0x2f268>
  432b70:	ldr	x8, [x8, #8]
  432b74:	cbz	x8, 432b08 <feof@plt+0x2f268>
  432b78:	mov	x0, x25
  432b7c:	mov	w1, w24
  432b80:	bl	433480 <feof@plt+0x2fbe0>
  432b84:	ldr	x8, [x25]
  432b88:	mov	w26, w24
  432b8c:	cbz	x8, 432bd0 <feof@plt+0x2f330>
  432b90:	mov	w26, w24
  432b94:	ldr	x9, [x21, #16]
  432b98:	ldr	w0, [x8]
  432b9c:	mov	w1, w26
  432ba0:	blr	x9
  432ba4:	cbnz	w0, 432bd0 <feof@plt+0x2f330>
  432ba8:	ldr	x8, [x25]
  432bac:	cbz	x8, 432bd0 <feof@plt+0x2f330>
  432bb0:	ldr	x8, [x8, #8]
  432bb4:	cbz	x8, 432bd0 <feof@plt+0x2f330>
  432bb8:	add	w26, w26, #0x1
  432bbc:	mov	x0, x25
  432bc0:	mov	w1, w26
  432bc4:	bl	433480 <feof@plt+0x2fbe0>
  432bc8:	ldr	x8, [x25]
  432bcc:	cbnz	x8, 432b94 <feof@plt+0x2f2f4>
  432bd0:	sub	w3, w26, #0x1
  432bd4:	mov	x0, x21
  432bd8:	mov	x1, x20
  432bdc:	mov	w2, w24
  432be0:	bl	432c98 <feof@plt+0x2f3f8>
  432be4:	b	432b58 <feof@plt+0x2f2b8>
  432be8:	stp	x29, x30, [sp, #-64]!
  432bec:	str	x23, [sp, #16]
  432bf0:	stp	x22, x21, [sp, #32]
  432bf4:	stp	x20, x19, [sp, #48]
  432bf8:	mov	x29, sp
  432bfc:	cmp	w1, w2
  432c00:	b.le	432c20 <feof@plt+0x2f380>
  432c04:	mov	w20, wzr
  432c08:	mov	w0, w20
  432c0c:	ldp	x20, x19, [sp, #48]
  432c10:	ldp	x22, x21, [sp, #32]
  432c14:	ldr	x23, [sp, #16]
  432c18:	ldp	x29, x30, [sp], #64
  432c1c:	ret
  432c20:	mov	w19, w2
  432c24:	mov	w22, w1
  432c28:	mov	x21, x0
  432c2c:	mov	w20, wzr
  432c30:	add	x23, x0, #0x8
  432c34:	mov	x0, x23
  432c38:	mov	w1, w22
  432c3c:	bl	433480 <feof@plt+0x2fbe0>
  432c40:	ldr	x8, [x23]
  432c44:	cbz	x8, 432c5c <feof@plt+0x2f3bc>
  432c48:	ldr	x9, [x21, #16]
  432c4c:	ldr	w0, [x8]
  432c50:	mov	w1, w22
  432c54:	blr	x9
  432c58:	cbz	w0, 432c74 <feof@plt+0x2f3d4>
  432c5c:	mov	w8, #0x1                   	// #1
  432c60:	cmp	w22, w19
  432c64:	add	w22, w22, #0x1
  432c68:	add	w20, w8, w20
  432c6c:	b.lt	432c34 <feof@plt+0x2f394>  // b.tstop
  432c70:	b	432c08 <feof@plt+0x2f368>
  432c74:	ldr	x8, [x23]
  432c78:	cbz	x8, 432c5c <feof@plt+0x2f3bc>
  432c7c:	ldr	x8, [x8, #8]
  432c80:	cbz	x8, 432c5c <feof@plt+0x2f3bc>
  432c84:	ldr	x8, [x8, #32]
  432c88:	cbz	x8, 432c5c <feof@plt+0x2f3bc>
  432c8c:	ldr	w8, [x8, #4]
  432c90:	add	w8, w8, #0x1
  432c94:	b	432c60 <feof@plt+0x2f3c0>
  432c98:	stp	x29, x30, [sp, #-80]!
  432c9c:	stp	x26, x25, [sp, #16]
  432ca0:	stp	x24, x23, [sp, #32]
  432ca4:	stp	x22, x21, [sp, #48]
  432ca8:	stp	x20, x19, [sp, #64]
  432cac:	mov	x29, sp
  432cb0:	ldrb	w8, [x1, #67]
  432cb4:	mov	x19, x1
  432cb8:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432cbc:	mov	w21, w2
  432cc0:	mov	x22, x0
  432cc4:	add	x1, x1, #0x1e
  432cc8:	mov	w2, #0xb                   	// #11
  432ccc:	mov	w0, w8
  432cd0:	mov	w20, w3
  432cd4:	bl	42c4e0 <feof@plt+0x28c40>
  432cd8:	mov	x1, x0
  432cdc:	mov	x0, x19
  432ce0:	bl	4354fc <feof@plt+0x31c5c>
  432ce4:	cmp	w21, w20
  432ce8:	b.le	432d24 <feof@plt+0x2f484>
  432cec:	ldrb	w0, [x19, #67]
  432cf0:	bl	42c564 <feof@plt+0x28cc4>
  432cf4:	mov	x1, x0
  432cf8:	mov	x0, x19
  432cfc:	bl	4354fc <feof@plt+0x31c5c>
  432d00:	ldrb	w0, [x19, #67]
  432d04:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432d08:	add	x1, x1, #0x2a
  432d0c:	mov	w2, #0xb                   	// #11
  432d10:	bl	42c4e0 <feof@plt+0x28c40>
  432d14:	mov	x1, x0
  432d18:	mov	x0, x19
  432d1c:	bl	4354fc <feof@plt+0x31c5c>
  432d20:	b	432e60 <feof@plt+0x2f5c0>
  432d24:	add	x23, x22, #0x8
  432d28:	mov	w24, w21
  432d2c:	b	432d48 <feof@plt+0x2f4a8>
  432d30:	mov	w1, #0xa                   	// #10
  432d34:	mov	x0, x19
  432d38:	bl	433718 <feof@plt+0x2fe78>
  432d3c:	cmp	w24, w20
  432d40:	add	w24, w24, #0x1
  432d44:	b.ge	432dd4 <feof@plt+0x2f534>  // b.tcont
  432d48:	mov	x0, x23
  432d4c:	mov	w1, w24
  432d50:	bl	433480 <feof@plt+0x2fbe0>
  432d54:	ldr	x8, [x23]
  432d58:	cbz	x8, 432e88 <feof@plt+0x2f5e8>
  432d5c:	ldr	x9, [x22, #16]
  432d60:	ldr	w0, [x8]
  432d64:	mov	w1, w24
  432d68:	blr	x9
  432d6c:	cbnz	w0, 432e88 <feof@plt+0x2f5e8>
  432d70:	ldr	x8, [x23]
  432d74:	cbz	x8, 432e88 <feof@plt+0x2f5e8>
  432d78:	ldr	x8, [x8, #8]
  432d7c:	cbz	x8, 432e88 <feof@plt+0x2f5e8>
  432d80:	ldr	x8, [x8, #24]
  432d84:	cbz	x8, 432d3c <feof@plt+0x2f49c>
  432d88:	ldr	w8, [x8, #4]
  432d8c:	cbz	w8, 432d3c <feof@plt+0x2f49c>
  432d90:	ldr	x0, [x22]
  432d94:	mov	w1, w24
  432d98:	bl	437438 <feof@plt+0x33b98>
  432d9c:	mov	x25, x0
  432da0:	mov	x26, x1
  432da4:	mov	w1, #0x2d                  	// #45
  432da8:	mov	x0, x19
  432dac:	bl	433718 <feof@plt+0x2fe78>
  432db0:	cmp	w26, #0x1
  432db4:	b.lt	432d30 <feof@plt+0x2f490>  // b.tstop
  432db8:	and	x26, x26, #0xffffffff
  432dbc:	ldrb	w1, [x25], #1
  432dc0:	mov	x0, x19
  432dc4:	bl	433718 <feof@plt+0x2fe78>
  432dc8:	subs	x26, x26, #0x1
  432dcc:	b.ne	432dbc <feof@plt+0x2f51c>  // b.any
  432dd0:	b	432d30 <feof@plt+0x2f490>
  432dd4:	ldrb	w0, [x19, #67]
  432dd8:	bl	42c564 <feof@plt+0x28cc4>
  432ddc:	mov	x1, x0
  432de0:	mov	x0, x19
  432de4:	bl	4354fc <feof@plt+0x31c5c>
  432de8:	ldrb	w0, [x19, #67]
  432dec:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432df0:	add	x1, x1, #0x2a
  432df4:	mov	w2, #0xb                   	// #11
  432df8:	bl	42c4e0 <feof@plt+0x28c40>
  432dfc:	mov	x1, x0
  432e00:	mov	x0, x19
  432e04:	bl	4354fc <feof@plt+0x31c5c>
  432e08:	cmp	w21, w20
  432e0c:	b.gt	432e60 <feof@plt+0x2f5c0>
  432e10:	add	x23, x22, #0x8
  432e14:	mov	x0, x23
  432e18:	mov	w1, w21
  432e1c:	bl	433480 <feof@plt+0x2fbe0>
  432e20:	ldr	x8, [x23]
  432e24:	cbz	x8, 432ea0 <feof@plt+0x2f600>
  432e28:	ldr	x9, [x22, #16]
  432e2c:	ldr	w0, [x8]
  432e30:	mov	w1, w21
  432e34:	blr	x9
  432e38:	cbnz	w0, 432ea0 <feof@plt+0x2f600>
  432e3c:	ldr	x8, [x23]
  432e40:	cbz	x8, 432ea0 <feof@plt+0x2f600>
  432e44:	ldr	x0, [x8, #8]
  432e48:	cbz	x0, 432ea0 <feof@plt+0x2f600>
  432e4c:	mov	x1, x19
  432e50:	bl	432eb8 <feof@plt+0x2f618>
  432e54:	cmp	w21, w20
  432e58:	add	w21, w21, #0x1
  432e5c:	b.lt	432e14 <feof@plt+0x2f574>  // b.tstop
  432e60:	ldrb	w0, [x19, #67]
  432e64:	bl	42c564 <feof@plt+0x28cc4>
  432e68:	mov	x1, x0
  432e6c:	mov	x0, x19
  432e70:	ldp	x20, x19, [sp, #64]
  432e74:	ldp	x22, x21, [sp, #48]
  432e78:	ldp	x24, x23, [sp, #32]
  432e7c:	ldp	x26, x25, [sp, #16]
  432e80:	ldp	x29, x30, [sp], #80
  432e84:	b	4354fc <feof@plt+0x31c5c>
  432e88:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432e8c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432e90:	add	x0, x0, #0x426
  432e94:	add	x2, x2, #0x480
  432e98:	mov	w1, #0x239                 	// #569
  432e9c:	bl	429434 <feof@plt+0x25b94>
  432ea0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432ea4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  432ea8:	add	x0, x0, #0x426
  432eac:	add	x2, x2, #0x480
  432eb0:	mov	w1, #0x24b                 	// #587
  432eb4:	bl	429434 <feof@plt+0x25b94>
  432eb8:	stp	x29, x30, [sp, #-64]!
  432ebc:	str	x23, [sp, #16]
  432ec0:	stp	x22, x21, [sp, #32]
  432ec4:	stp	x20, x19, [sp, #48]
  432ec8:	mov	x29, sp
  432ecc:	ldr	x8, [x0, #32]
  432ed0:	mov	x20, x0
  432ed4:	mov	x19, x1
  432ed8:	cbz	x8, 432f44 <feof@plt+0x2f6a4>
  432edc:	mov	w21, wzr
  432ee0:	b	432efc <feof@plt+0x2f65c>
  432ee4:	mov	w1, #0xa                   	// #10
  432ee8:	mov	x0, x19
  432eec:	bl	433718 <feof@plt+0x2fe78>
  432ef0:	ldr	x8, [x20, #32]
  432ef4:	add	w21, w21, #0x1
  432ef8:	cbz	x8, 432f44 <feof@plt+0x2f6a4>
  432efc:	ldr	w9, [x8, #4]
  432f00:	cmp	w9, w21
  432f04:	b.ls	432f44 <feof@plt+0x2f6a4>  // b.plast
  432f08:	add	x8, x8, w21, uxtw #3
  432f0c:	ldr	x8, [x8, #8]
  432f10:	mov	w1, #0x2b                  	// #43
  432f14:	mov	x0, x19
  432f18:	ldr	x22, [x8]
  432f1c:	ldr	w23, [x8, #8]
  432f20:	bl	433718 <feof@plt+0x2fe78>
  432f24:	cmp	w23, #0x1
  432f28:	b.lt	432ee4 <feof@plt+0x2f644>  // b.tstop
  432f2c:	ldrb	w1, [x22], #1
  432f30:	mov	x0, x19
  432f34:	bl	433718 <feof@plt+0x2fe78>
  432f38:	subs	x23, x23, #0x1
  432f3c:	b.ne	432f2c <feof@plt+0x2f68c>  // b.any
  432f40:	b	432ee4 <feof@plt+0x2f644>
  432f44:	ldr	x8, [x20, #24]
  432f48:	cbz	x8, 432f88 <feof@plt+0x2f6e8>
  432f4c:	ldr	w8, [x8, #4]
  432f50:	ldr	x21, [x20, #8]
  432f54:	ldr	w20, [x20, #16]
  432f58:	cbz	w8, 432f90 <feof@plt+0x2f6f0>
  432f5c:	mov	w1, #0x2b                  	// #43
  432f60:	mov	x0, x19
  432f64:	bl	433718 <feof@plt+0x2fe78>
  432f68:	cmp	w20, #0x1
  432f6c:	b.lt	432fbc <feof@plt+0x2f71c>  // b.tstop
  432f70:	ldrb	w1, [x21], #1
  432f74:	mov	x0, x19
  432f78:	bl	433718 <feof@plt+0x2fe78>
  432f7c:	subs	x20, x20, #0x1
  432f80:	b.ne	432f70 <feof@plt+0x2f6d0>  // b.any
  432f84:	b	432fbc <feof@plt+0x2f71c>
  432f88:	ldr	x21, [x20, #8]
  432f8c:	ldr	w20, [x20, #16]
  432f90:	mov	w1, #0x20                  	// #32
  432f94:	mov	x0, x19
  432f98:	bl	433718 <feof@plt+0x2fe78>
  432f9c:	cmp	w20, #0x1
  432fa0:	b.lt	432fbc <feof@plt+0x2f71c>  // b.tstop
  432fa4:	mov	w20, w20
  432fa8:	ldrb	w1, [x21], #1
  432fac:	mov	x0, x19
  432fb0:	bl	433718 <feof@plt+0x2fe78>
  432fb4:	subs	x20, x20, #0x1
  432fb8:	b.ne	432fa8 <feof@plt+0x2f708>  // b.any
  432fbc:	mov	x0, x19
  432fc0:	ldp	x20, x19, [sp, #48]
  432fc4:	ldp	x22, x21, [sp, #32]
  432fc8:	ldr	x23, [sp, #16]
  432fcc:	mov	w1, #0xa                   	// #10
  432fd0:	ldp	x29, x30, [sp], #64
  432fd4:	b	433718 <feof@plt+0x2fe78>
  432fd8:	ldr	x8, [x0, #32]
  432fdc:	cbz	x8, 432fec <feof@plt+0x2f74c>
  432fe0:	ldr	w8, [x8, #4]
  432fe4:	add	w0, w8, #0x1
  432fe8:	ret
  432fec:	mov	w0, #0x1                   	// #1
  432ff0:	ret
  432ff4:	stp	x29, x30, [sp, #-48]!
  432ff8:	stp	x22, x21, [sp, #16]
  432ffc:	stp	x20, x19, [sp, #32]
  433000:	mov	x29, sp
  433004:	movi	v0.2d, #0x0
  433008:	mov	x19, x0
  43300c:	str	w2, [x0]
  433010:	mov	x21, x0
  433014:	stur	q0, [x0, #24]
  433018:	mov	x0, x1
  43301c:	mov	w1, w2
  433020:	str	q0, [x21, #8]!
  433024:	bl	437438 <feof@plt+0x33b98>
  433028:	cbz	x0, 43308c <feof@plt+0x2f7ec>
  43302c:	ldr	w8, [x19, #20]
  433030:	mov	x20, x0
  433034:	str	w1, [x19, #16]
  433038:	cmp	w8, w1
  43303c:	b.le	433048 <feof@plt+0x2f7a8>
  433040:	ldr	x0, [x21]
  433044:	b	433068 <feof@plt+0x2f7c8>
  433048:	ldr	x0, [x19, #8]
  43304c:	lsl	w8, w1, #1
  433050:	add	w22, w8, #0x2
  433054:	sxtw	x1, w22
  433058:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43305c:	ldr	w1, [x19, #16]
  433060:	str	x0, [x19, #8]
  433064:	str	w22, [x19, #20]
  433068:	sxtw	x2, w1
  43306c:	mov	x1, x20
  433070:	bl	402fc0 <memcpy@plt>
  433074:	ldp	w8, w9, [x19, #16]
  433078:	sxtw	x8, w8
  43307c:	cmp	w8, w9
  433080:	b.ge	43309c <feof@plt+0x2f7fc>  // b.tcont
  433084:	ldr	x9, [x21]
  433088:	strb	wzr, [x9, x8]
  43308c:	ldp	x20, x19, [sp, #32]
  433090:	ldp	x22, x21, [sp, #16]
  433094:	ldp	x29, x30, [sp], #48
  433098:	ret
  43309c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4330a0:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4330a4:	add	x0, x0, #0x426
  4330a8:	add	x2, x2, #0x1b8
  4330ac:	mov	w1, #0x36b                 	// #875
  4330b0:	bl	429434 <feof@plt+0x25b94>
  4330b4:	stp	x29, x30, [sp, #-32]!
  4330b8:	stp	x20, x19, [sp, #16]
  4330bc:	mov	x29, sp
  4330c0:	ldr	w8, [x0, #20]
  4330c4:	cmp	w8, w1
  4330c8:	b.gt	4330ec <feof@plt+0x2f84c>
  4330cc:	mov	x19, x0
  4330d0:	ldr	x0, [x0, #8]
  4330d4:	lsl	w8, w1, #1
  4330d8:	add	w20, w8, #0x2
  4330dc:	sxtw	x1, w20
  4330e0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4330e4:	str	x0, [x19, #8]
  4330e8:	str	w20, [x19, #20]
  4330ec:	ldp	x20, x19, [sp, #16]
  4330f0:	ldp	x29, x30, [sp], #32
  4330f4:	ret
  4330f8:	stp	x29, x30, [sp, #-16]!
  4330fc:	mov	x29, sp
  433100:	ldp	w8, w9, [x0, #16]
  433104:	sxtw	x8, w8
  433108:	cmp	w8, w9
  43310c:	b.ge	433120 <feof@plt+0x2f880>  // b.tcont
  433110:	ldr	x9, [x0, #8]
  433114:	strb	wzr, [x9, x8]
  433118:	ldp	x29, x30, [sp], #16
  43311c:	ret
  433120:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  433124:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  433128:	add	x0, x0, #0x426
  43312c:	add	x2, x2, #0x1b8
  433130:	mov	w1, #0x36b                 	// #875
  433134:	bl	429434 <feof@plt+0x25b94>
  433138:	stp	x29, x30, [sp, #-48]!
  43313c:	str	x21, [sp, #16]
  433140:	stp	x20, x19, [sp, #32]
  433144:	mov	x29, sp
  433148:	mov	x19, x0
  43314c:	ldr	x0, [x0, #8]
  433150:	bl	4031d0 <free@plt>
  433154:	ldr	x0, [x19, #32]
  433158:	cbz	x0, 4331ac <feof@plt+0x2f90c>
  43315c:	mov	x21, xzr
  433160:	b	43316c <feof@plt+0x2f8cc>
  433164:	add	x21, x21, #0x1
  433168:	cbz	x0, 4331ac <feof@plt+0x2f90c>
  43316c:	ldr	w8, [x0, #4]
  433170:	cmp	x21, x8
  433174:	b.cs	43319c <feof@plt+0x2f8fc>  // b.hs, b.nlast
  433178:	add	x8, x0, x21, lsl #3
  43317c:	ldr	x20, [x8, #8]
  433180:	cbz	x20, 433164 <feof@plt+0x2f8c4>
  433184:	ldr	x0, [x20]
  433188:	bl	4031d0 <free@plt>
  43318c:	mov	x0, x20
  433190:	bl	403410 <_ZdlPv@plt>
  433194:	ldr	x0, [x19, #32]
  433198:	b	433164 <feof@plt+0x2f8c4>
  43319c:	ldr	w8, [x0]
  4331a0:	tbnz	w8, #31, 4331dc <feof@plt+0x2f93c>
  4331a4:	bl	4031d0 <free@plt>
  4331a8:	str	xzr, [x19, #32]
  4331ac:	ldr	x0, [x19, #24]
  4331b0:	cbz	x0, 4331cc <feof@plt+0x2f92c>
  4331b4:	ldr	w8, [x0]
  4331b8:	tbnz	w8, #31, 4331c8 <feof@plt+0x2f928>
  4331bc:	bl	4031d0 <free@plt>
  4331c0:	str	xzr, [x19, #24]
  4331c4:	b	4331cc <feof@plt+0x2f92c>
  4331c8:	str	wzr, [x0, #4]
  4331cc:	ldp	x20, x19, [sp, #32]
  4331d0:	ldr	x21, [sp, #16]
  4331d4:	ldp	x29, x30, [sp], #48
  4331d8:	ret
  4331dc:	str	wzr, [x0, #4]
  4331e0:	ldr	x0, [x19, #24]
  4331e4:	cbnz	x0, 4331b4 <feof@plt+0x2f914>
  4331e8:	b	4331cc <feof@plt+0x2f92c>
  4331ec:	stp	x29, x30, [sp, #-64]!
  4331f0:	str	x23, [sp, #16]
  4331f4:	stp	x22, x21, [sp, #32]
  4331f8:	stp	x20, x19, [sp, #48]
  4331fc:	mov	x29, sp
  433200:	cbz	x1, 4332d0 <feof@plt+0x2fa30>
  433204:	ldr	x8, [x0, #16]
  433208:	mov	x20, x1
  43320c:	mov	x19, x0
  433210:	cbz	x8, 43321c <feof@plt+0x2f97c>
  433214:	ldr	w0, [x20]
  433218:	blr	x8
  43321c:	ldr	x8, [x19, #24]
  433220:	cbz	x8, 43322c <feof@plt+0x2f98c>
  433224:	ldr	x0, [x20, #8]
  433228:	blr	x8
  43322c:	mov	x21, xzr
  433230:	str	xzr, [x20, #32]
  433234:	ldr	x9, [x20, #16]
  433238:	cbz	x9, 43326c <feof@plt+0x2f9cc>
  43323c:	ldr	x8, [x19, #16]
  433240:	cbz	x8, 43324c <feof@plt+0x2f9ac>
  433244:	ldr	w0, [x9]
  433248:	blr	x8
  43324c:	ldr	x8, [x19, #24]
  433250:	cbz	x8, 433260 <feof@plt+0x2f9c0>
  433254:	ldr	x9, [x20, #16]
  433258:	ldr	x0, [x9, #8]
  43325c:	blr	x8
  433260:	ldr	x8, [x20, #16]
  433264:	str	x21, [x8, #32]
  433268:	ldr	x21, [x20, #16]
  43326c:	ldr	x9, [x20, #24]
  433270:	cbz	x9, 4332ac <feof@plt+0x2fa0c>
  433274:	ldr	x8, [x19, #16]
  433278:	cbz	x8, 433284 <feof@plt+0x2f9e4>
  43327c:	ldr	w0, [x9]
  433280:	blr	x8
  433284:	ldr	x8, [x19, #24]
  433288:	cbz	x8, 433298 <feof@plt+0x2f9f8>
  43328c:	ldr	x9, [x20, #24]
  433290:	ldr	x0, [x9, #8]
  433294:	blr	x8
  433298:	ldr	x8, [x20, #24]
  43329c:	str	x21, [x8, #32]
  4332a0:	ldr	x22, [x20, #24]
  4332a4:	mov	x21, x22
  4332a8:	b	4332b0 <feof@plt+0x2fa10>
  4332ac:	mov	x22, x21
  4332b0:	ldr	x23, [x20, #32]
  4332b4:	mov	x0, x20
  4332b8:	bl	403410 <_ZdlPv@plt>
  4332bc:	mov	x20, x23
  4332c0:	cbnz	x23, 433234 <feof@plt+0x2f994>
  4332c4:	mov	x21, xzr
  4332c8:	mov	x20, x22
  4332cc:	cbnz	x22, 433234 <feof@plt+0x2f994>
  4332d0:	ldp	x20, x19, [sp, #48]
  4332d4:	ldp	x22, x21, [sp, #32]
  4332d8:	ldr	x23, [sp, #16]
  4332dc:	ldp	x29, x30, [sp], #64
  4332e0:	ret
  4332e4:	stp	x29, x30, [sp, #-80]!
  4332e8:	str	x25, [sp, #16]
  4332ec:	stp	x24, x23, [sp, #32]
  4332f0:	stp	x22, x21, [sp, #48]
  4332f4:	stp	x20, x19, [sp, #64]
  4332f8:	mov	x29, sp
  4332fc:	ldr	x22, [x0]
  433300:	cbz	x22, 433468 <feof@plt+0x2fbc8>
  433304:	mov	x20, x1
  433308:	ldr	x8, [x0, #8]
  43330c:	ldr	x1, [x22]
  433310:	mov	x19, x0
  433314:	mov	x0, x20
  433318:	blr	x8
  43331c:	cbz	w0, 433468 <feof@plt+0x2fbc8>
  433320:	mov	w21, w0
  433324:	mov	w23, #0x18                  	// #24
  433328:	mov	w24, #0x10                  	// #16
  43332c:	cmp	w21, #0x0
  433330:	csel	x8, x24, x23, lt  // lt = tstop
  433334:	ldr	x25, [x22, x8]
  433338:	cbz	x25, 433468 <feof@plt+0x2fbc8>
  43333c:	ldr	x8, [x19, #8]
  433340:	ldr	x1, [x25]
  433344:	mov	x0, x20
  433348:	blr	x8
  43334c:	cbz	w0, 433444 <feof@plt+0x2fba4>
  433350:	tbnz	w0, #31, 4333a0 <feof@plt+0x2fb00>
  433354:	ldr	x8, [x25, #24]
  433358:	cbz	x8, 433444 <feof@plt+0x2fba4>
  43335c:	mov	w8, #0x1                   	// #1
  433360:	tst	w0, w21
  433364:	b.lt	4333b4 <feof@plt+0x2fb14>  // b.tstop
  433368:	cmp	w21, #0x1
  43336c:	cset	w9, lt  // lt = tstop
  433370:	eor	w8, w8, #0x1
  433374:	orr	w9, w9, w8
  433378:	tbnz	w9, #0, 4333c8 <feof@plt+0x2fb28>
  43337c:	ldr	x8, [x25, #24]
  433380:	ldr	x9, [x8, #16]
  433384:	str	x25, [x8, #16]
  433388:	str	x9, [x25, #24]
  43338c:	str	x8, [x22, #24]
  433390:	ldr	x9, [x8, #16]
  433394:	str	x22, [x8, #16]
  433398:	str	x9, [x22, #24]
  43339c:	b	4333f8 <feof@plt+0x2fb58>
  4333a0:	ldr	x8, [x25, #16]
  4333a4:	cbz	x8, 433444 <feof@plt+0x2fba4>
  4333a8:	mov	w8, wzr
  4333ac:	tst	w0, w21
  4333b0:	b.ge	433368 <feof@plt+0x2fac8>  // b.tcont
  4333b4:	ldr	x8, [x25, #16]
  4333b8:	ldr	x9, [x8, #24]
  4333bc:	str	x25, [x8, #24]
  4333c0:	str	x9, [x25, #16]
  4333c4:	b	4333e8 <feof@plt+0x2fb48>
  4333c8:	cmp	w21, #0x0
  4333cc:	cset	w9, ge  // ge = tcont
  4333d0:	orr	w8, w9, w8
  4333d4:	tbnz	w8, #0, 43341c <feof@plt+0x2fb7c>
  4333d8:	ldr	x8, [x25, #24]
  4333dc:	ldr	x9, [x8, #16]
  4333e0:	str	x25, [x8, #16]
  4333e4:	str	x9, [x25, #24]
  4333e8:	str	x8, [x22, #16]
  4333ec:	ldr	x9, [x8, #24]
  4333f0:	str	x22, [x8, #24]
  4333f4:	str	x9, [x22, #16]
  4333f8:	mov	x22, x8
  4333fc:	str	x8, [x19]
  433400:	ldr	x8, [x19, #8]
  433404:	ldr	x1, [x22]
  433408:	mov	x0, x20
  43340c:	blr	x8
  433410:	mov	w21, w0
  433414:	cbnz	w0, 43332c <feof@plt+0x2fa8c>
  433418:	b	433468 <feof@plt+0x2fbc8>
  43341c:	cmp	w21, #0x1
  433420:	b.lt	43343c <feof@plt+0x2fb9c>  // b.tstop
  433424:	tbz	w0, #31, 43343c <feof@plt+0x2fb9c>
  433428:	ldr	x8, [x25, #16]
  43342c:	ldr	x9, [x8, #24]
  433430:	str	x25, [x8, #24]
  433434:	str	x9, [x25, #16]
  433438:	b	43338c <feof@plt+0x2faec>
  43343c:	ldr	x22, [x19]
  433440:	b	433400 <feof@plt+0x2fb60>
  433444:	tbnz	w21, #31, 433458 <feof@plt+0x2fbb8>
  433448:	ldr	x8, [x25, #16]
  43344c:	str	x22, [x25, #16]
  433450:	str	x8, [x22, #24]
  433454:	b	433464 <feof@plt+0x2fbc4>
  433458:	ldr	x8, [x25, #24]
  43345c:	str	x22, [x25, #24]
  433460:	str	x8, [x22, #16]
  433464:	str	x25, [x19]
  433468:	ldp	x20, x19, [sp, #64]
  43346c:	ldp	x22, x21, [sp, #48]
  433470:	ldp	x24, x23, [sp, #32]
  433474:	ldr	x25, [sp, #16]
  433478:	ldp	x29, x30, [sp], #80
  43347c:	ret
  433480:	stp	x29, x30, [sp, #-80]!
  433484:	str	x25, [sp, #16]
  433488:	stp	x24, x23, [sp, #32]
  43348c:	stp	x22, x21, [sp, #48]
  433490:	stp	x20, x19, [sp, #64]
  433494:	mov	x29, sp
  433498:	ldr	x22, [x0]
  43349c:	cbz	x22, 433604 <feof@plt+0x2fd64>
  4334a0:	mov	w20, w1
  4334a4:	ldr	x8, [x0, #8]
  4334a8:	ldr	w1, [x22]
  4334ac:	mov	x19, x0
  4334b0:	mov	w0, w20
  4334b4:	blr	x8
  4334b8:	cbz	w0, 433604 <feof@plt+0x2fd64>
  4334bc:	mov	w21, w0
  4334c0:	mov	w23, #0x18                  	// #24
  4334c4:	mov	w24, #0x10                  	// #16
  4334c8:	cmp	w21, #0x0
  4334cc:	csel	x8, x24, x23, lt  // lt = tstop
  4334d0:	ldr	x25, [x22, x8]
  4334d4:	cbz	x25, 433604 <feof@plt+0x2fd64>
  4334d8:	ldr	x8, [x19, #8]
  4334dc:	ldr	w1, [x25]
  4334e0:	mov	w0, w20
  4334e4:	blr	x8
  4334e8:	cbz	w0, 4335e0 <feof@plt+0x2fd40>
  4334ec:	tbnz	w0, #31, 43353c <feof@plt+0x2fc9c>
  4334f0:	ldr	x8, [x25, #24]
  4334f4:	cbz	x8, 4335e0 <feof@plt+0x2fd40>
  4334f8:	mov	w8, #0x1                   	// #1
  4334fc:	tst	w0, w21
  433500:	b.lt	433550 <feof@plt+0x2fcb0>  // b.tstop
  433504:	cmp	w21, #0x1
  433508:	cset	w9, lt  // lt = tstop
  43350c:	eor	w8, w8, #0x1
  433510:	orr	w9, w9, w8
  433514:	tbnz	w9, #0, 433564 <feof@plt+0x2fcc4>
  433518:	ldr	x8, [x25, #24]
  43351c:	ldr	x9, [x8, #16]
  433520:	str	x25, [x8, #16]
  433524:	str	x9, [x25, #24]
  433528:	str	x8, [x22, #24]
  43352c:	ldr	x9, [x8, #16]
  433530:	str	x22, [x8, #16]
  433534:	str	x9, [x22, #24]
  433538:	b	433594 <feof@plt+0x2fcf4>
  43353c:	ldr	x8, [x25, #16]
  433540:	cbz	x8, 4335e0 <feof@plt+0x2fd40>
  433544:	mov	w8, wzr
  433548:	tst	w0, w21
  43354c:	b.ge	433504 <feof@plt+0x2fc64>  // b.tcont
  433550:	ldr	x8, [x25, #16]
  433554:	ldr	x9, [x8, #24]
  433558:	str	x25, [x8, #24]
  43355c:	str	x9, [x25, #16]
  433560:	b	433584 <feof@plt+0x2fce4>
  433564:	cmp	w21, #0x0
  433568:	cset	w9, ge  // ge = tcont
  43356c:	orr	w8, w9, w8
  433570:	tbnz	w8, #0, 4335b8 <feof@plt+0x2fd18>
  433574:	ldr	x8, [x25, #24]
  433578:	ldr	x9, [x8, #16]
  43357c:	str	x25, [x8, #16]
  433580:	str	x9, [x25, #24]
  433584:	str	x8, [x22, #16]
  433588:	ldr	x9, [x8, #24]
  43358c:	str	x22, [x8, #24]
  433590:	str	x9, [x22, #16]
  433594:	mov	x22, x8
  433598:	str	x8, [x19]
  43359c:	ldr	x8, [x19, #8]
  4335a0:	ldr	w1, [x22]
  4335a4:	mov	w0, w20
  4335a8:	blr	x8
  4335ac:	mov	w21, w0
  4335b0:	cbnz	w0, 4334c8 <feof@plt+0x2fc28>
  4335b4:	b	433604 <feof@plt+0x2fd64>
  4335b8:	cmp	w21, #0x1
  4335bc:	b.lt	4335d8 <feof@plt+0x2fd38>  // b.tstop
  4335c0:	tbz	w0, #31, 4335d8 <feof@plt+0x2fd38>
  4335c4:	ldr	x8, [x25, #16]
  4335c8:	ldr	x9, [x8, #24]
  4335cc:	str	x25, [x8, #24]
  4335d0:	str	x9, [x25, #16]
  4335d4:	b	433528 <feof@plt+0x2fc88>
  4335d8:	ldr	x22, [x19]
  4335dc:	b	43359c <feof@plt+0x2fcfc>
  4335e0:	tbnz	w21, #31, 4335f4 <feof@plt+0x2fd54>
  4335e4:	ldr	x8, [x25, #16]
  4335e8:	str	x22, [x25, #16]
  4335ec:	str	x8, [x22, #24]
  4335f0:	b	433600 <feof@plt+0x2fd60>
  4335f4:	ldr	x8, [x25, #24]
  4335f8:	str	x22, [x25, #24]
  4335fc:	str	x8, [x22, #16]
  433600:	str	x25, [x19]
  433604:	ldp	x20, x19, [sp, #64]
  433608:	ldp	x22, x21, [sp, #48]
  43360c:	ldp	x24, x23, [sp, #32]
  433610:	ldr	x25, [sp, #16]
  433614:	ldp	x29, x30, [sp], #80
  433618:	ret
  43361c:	ldr	x0, [x0, #32]
  433620:	b	450940 <feof@plt+0x4d0a0>
  433624:	cbz	w1, 433630 <feof@plt+0x2fd90>
  433628:	mov	w0, wzr
  43362c:	ret
  433630:	ldr	x0, [x0, #32]
  433634:	b	45081c <feof@plt+0x4cf7c>
  433638:	stp	x29, x30, [sp, #-48]!
  43363c:	str	x21, [sp, #16]
  433640:	stp	x20, x19, [sp, #32]
  433644:	mov	x29, sp
  433648:	movi	v0.2d, #0x0
  43364c:	stp	x0, xzr, [x0, #176]
  433650:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  433654:	stp	q0, q0, [x0, #144]
  433658:	stp	q0, q0, [x0, #112]
  43365c:	stp	q0, q0, [x0, #80]
  433660:	stp	q0, q0, [x0, #48]
  433664:	stp	q0, q0, [x0, #16]
  433668:	str	q0, [x0]
  43366c:	ldr	x8, [x8, #1096]
  433670:	adrp	x20, 439000 <feof@plt+0x35760>
  433674:	adrp	x21, 439000 <feof@plt+0x35760>
  433678:	add	x20, x20, #0xf08
  43367c:	str	x8, [x0, #192]
  433680:	mov	x8, x0
  433684:	str	q0, [x8, #200]!
  433688:	add	x21, x21, #0xf34
  43368c:	str	wzr, [x8, #128]
  433690:	stp	q0, q0, [x8, #96]
  433694:	stp	q0, q0, [x8, #64]
  433698:	mov	w8, #0x1                   	// #1
  43369c:	mov	x1, xzr
  4336a0:	mov	x2, xzr
  4336a4:	mov	x3, x20
  4336a8:	mov	x4, x21
  4336ac:	add	x19, x0, #0x58
  4336b0:	stur	q0, [x0, #248]
  4336b4:	stur	q0, [x0, #232]
  4336b8:	stur	q0, [x0, #216]
  4336bc:	strb	w8, [x0, #332]
  4336c0:	bl	47b98c <_obstack_begin@@Base>
  4336c4:	mov	x0, x19
  4336c8:	mov	x3, x20
  4336cc:	mov	x4, x21
  4336d0:	ldp	x20, x19, [sp, #32]
  4336d4:	ldr	x21, [sp, #16]
  4336d8:	mov	x1, xzr
  4336dc:	mov	x2, xzr
  4336e0:	ldp	x29, x30, [sp], #48
  4336e4:	b	47b98c <_obstack_begin@@Base>
  4336e8:	stp	x29, x30, [sp, #-32]!
  4336ec:	str	x19, [sp, #16]
  4336f0:	mov	x29, sp
  4336f4:	mov	x19, x0
  4336f8:	add	x0, x0, #0x58
  4336fc:	mov	x1, xzr
  433700:	bl	47bc70 <_obstack_free@@Base>
  433704:	mov	x0, x19
  433708:	ldr	x19, [sp, #16]
  43370c:	mov	x1, xzr
  433710:	ldp	x29, x30, [sp], #32
  433714:	b	47bc70 <_obstack_free@@Base>
  433718:	stp	x29, x30, [sp, #-48]!
  43371c:	str	x21, [sp, #16]
  433720:	stp	x20, x19, [sp, #32]
  433724:	mov	x29, sp
  433728:	ldr	w8, [x0, #40]
  43372c:	mov	x19, x0
  433730:	mov	w20, w1
  433734:	cmp	w8, #0x1
  433738:	b.lt	4337a0 <feof@plt+0x2ff00>  // b.tstop
  43373c:	ldr	x8, [x19, #8]
  433740:	ldr	w9, [x19, #28]
  433744:	ldr	w10, [x8, #200]
  433748:	cmp	w9, w10
  43374c:	b.gt	4337a0 <feof@plt+0x2ff00>
  433750:	ldr	x21, [x8, #176]
  433754:	ldp	x8, x9, [x21, #24]
  433758:	cmp	x9, x8
  43375c:	b.ne	433770 <feof@plt+0x2fed0>  // b.any
  433760:	mov	w1, #0x1                   	// #1
  433764:	mov	x0, x21
  433768:	bl	47bae8 <_obstack_newchunk@@Base>
  43376c:	ldr	x8, [x21, #24]
  433770:	add	x9, x8, #0x1
  433774:	mov	w10, #0xa                   	// #10
  433778:	adrp	x12, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  43377c:	and	w11, w20, #0xff
  433780:	add	x12, x12, #0x4a2
  433784:	str	x9, [x21, #24]
  433788:	strb	w10, [x8]
  43378c:	ldr	x8, [x19, #8]
  433790:	ldrh	w9, [x12, w11, uxtw #1]
  433794:	strb	wzr, [x19, #65]
  433798:	str	wzr, [x8, #200]
  43379c:	tbnz	w9, #6, 4337e0 <feof@plt+0x2ff40>
  4337a0:	ldr	x8, [x19, #8]
  4337a4:	ldr	x21, [x8, #176]
  4337a8:	ldp	x8, x9, [x21, #24]
  4337ac:	cmp	x9, x8
  4337b0:	b.ne	4337c4 <feof@plt+0x2ff24>  // b.any
  4337b4:	mov	w1, #0x1                   	// #1
  4337b8:	mov	x0, x21
  4337bc:	bl	47bae8 <_obstack_newchunk@@Base>
  4337c0:	ldr	x8, [x21, #24]
  4337c4:	add	x9, x8, #0x1
  4337c8:	str	x9, [x21, #24]
  4337cc:	strb	w20, [x8]
  4337d0:	ldr	x8, [x19, #8]
  4337d4:	ldr	w9, [x8, #200]
  4337d8:	add	w9, w9, #0x1
  4337dc:	str	w9, [x8, #200]
  4337e0:	ldp	x20, x19, [sp, #32]
  4337e4:	ldr	x21, [sp, #16]
  4337e8:	ldp	x29, x30, [sp], #48
  4337ec:	ret
  4337f0:	stp	x29, x30, [sp, #-48]!
  4337f4:	str	x21, [sp, #16]
  4337f8:	stp	x20, x19, [sp, #32]
  4337fc:	mov	x29, sp
  433800:	ldr	x21, [x0, #8]
  433804:	mov	x19, x0
  433808:	ldr	x20, [x21, #176]
  43380c:	ldp	x8, x9, [x20, #24]
  433810:	cmp	x9, x8
  433814:	b.ne	433828 <feof@plt+0x2ff88>  // b.any
  433818:	mov	w1, #0x1                   	// #1
  43381c:	mov	x0, x20
  433820:	bl	47bae8 <_obstack_newchunk@@Base>
  433824:	ldr	x8, [x20, #24]
  433828:	add	x9, x8, #0x1
  43382c:	str	x9, [x20, #24]
  433830:	strb	wzr, [x8]
  433834:	ldr	x8, [x21, #176]
  433838:	ldr	x9, [x19, #8]
  43383c:	ldr	x0, [x8, #16]
  433840:	ldr	x1, [x9, #192]
  433844:	bl	402fa0 <fputs@plt>
  433848:	ldr	x8, [x19, #8]
  43384c:	ldr	x0, [x8, #176]
  433850:	ldp	x8, x1, [x0, #8]
  433854:	cmp	x1, x8
  433858:	b.ls	433870 <feof@plt+0x2ffd0>  // b.plast
  43385c:	ldr	x8, [x0, #32]
  433860:	cmp	x1, x8
  433864:	b.cs	433870 <feof@plt+0x2ffd0>  // b.hs, b.nlast
  433868:	str	x1, [x0, #24]
  43386c:	b	433874 <feof@plt+0x2ffd4>
  433870:	bl	47bc70 <_obstack_free@@Base>
  433874:	ldr	x8, [x19, #8]
  433878:	ldr	x21, [sp, #16]
  43387c:	str	wzr, [x8, #200]
  433880:	ldp	x20, x19, [sp, #32]
  433884:	ldp	x29, x30, [sp], #48
  433888:	ret
  43388c:	stp	x29, x30, [sp, #-32]!
  433890:	stp	x20, x19, [sp, #16]
  433894:	mov	x29, sp
  433898:	ldr	x20, [x0, #8]
  43389c:	ldr	x19, [x20, #176]
  4338a0:	ldp	x8, x9, [x19, #24]
  4338a4:	cmp	x9, x8
  4338a8:	b.ne	4338bc <feof@plt+0x3001c>  // b.any
  4338ac:	mov	w1, #0x1                   	// #1
  4338b0:	mov	x0, x19
  4338b4:	bl	47bae8 <_obstack_newchunk@@Base>
  4338b8:	ldr	x8, [x19, #24]
  4338bc:	add	x9, x8, #0x1
  4338c0:	str	x9, [x19, #24]
  4338c4:	strb	wzr, [x8]
  4338c8:	ldr	x8, [x20, #176]
  4338cc:	ldp	x20, x19, [sp, #16]
  4338d0:	ldr	x0, [x8, #16]
  4338d4:	ldp	x29, x30, [sp], #32
  4338d8:	ret
  4338dc:	stp	x29, x30, [sp, #-32]!
  4338e0:	str	x19, [sp, #16]
  4338e4:	mov	x29, sp
  4338e8:	ldr	x8, [x0, #8]
  4338ec:	mov	x19, x0
  4338f0:	ldr	x0, [x8, #176]
  4338f4:	ldp	x8, x1, [x0, #8]
  4338f8:	cmp	x1, x8
  4338fc:	b.ls	433914 <feof@plt+0x30074>  // b.plast
  433900:	ldr	x8, [x0, #32]
  433904:	cmp	x1, x8
  433908:	b.cs	433914 <feof@plt+0x30074>  // b.hs, b.nlast
  43390c:	str	x1, [x0, #24]
  433910:	b	433918 <feof@plt+0x30078>
  433914:	bl	47bc70 <_obstack_free@@Base>
  433918:	ldr	x8, [x19, #8]
  43391c:	ldr	x19, [sp, #16]
  433920:	str	wzr, [x8, #200]
  433924:	ldp	x29, x30, [sp], #32
  433928:	ret
  43392c:	stp	x29, x30, [sp, #-64]!
  433930:	stp	x24, x23, [sp, #16]
  433934:	stp	x22, x21, [sp, #32]
  433938:	stp	x20, x19, [sp, #48]
  43393c:	mov	x29, sp
  433940:	ldr	x22, [x0, #8]
  433944:	mov	x19, x0
  433948:	mov	w20, w1
  43394c:	ldr	x21, [x22, #176]
  433950:	ldp	x8, x9, [x21, #24]
  433954:	cmp	x9, x8
  433958:	b.ne	43396c <feof@plt+0x300cc>  // b.any
  43395c:	mov	w1, #0x1                   	// #1
  433960:	mov	x0, x21
  433964:	bl	47bae8 <_obstack_newchunk@@Base>
  433968:	ldr	x8, [x21, #24]
  43396c:	add	x9, x8, #0x1
  433970:	str	x9, [x21, #24]
  433974:	strb	wzr, [x8]
  433978:	ldr	x8, [x22, #176]
  43397c:	ldr	x9, [x19, #8]
  433980:	adrp	x24, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  433984:	adrp	x22, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  433988:	ldr	x23, [x8, #16]
  43398c:	ldr	x21, [x9, #192]
  433990:	add	x24, x24, #0x4c0
  433994:	add	x22, x22, #0x580
  433998:	b	4339cc <feof@plt+0x3012c>
  43399c:	mov	w1, #0x2                   	// #2
  4339a0:	mov	w2, #0x1                   	// #1
  4339a4:	mov	x0, x22
  4339a8:	mov	x3, x21
  4339ac:	bl	403760 <fwrite@plt>
  4339b0:	mov	w0, #0x5c                  	// #92
  4339b4:	mov	x1, x21
  4339b8:	bl	403480 <fputc@plt>
  4339bc:	ldrb	w0, [x23]
  4339c0:	mov	x1, x21
  4339c4:	bl	403480 <fputc@plt>
  4339c8:	add	x23, x23, #0x1
  4339cc:	ldrb	w0, [x23]
  4339d0:	cmp	w0, #0x3d
  4339d4:	b.le	433a00 <feof@plt+0x30160>
  4339d8:	sub	w8, w0, #0x7b
  4339dc:	cmp	w8, #0x3
  4339e0:	b.cc	433a20 <feof@plt+0x30180>  // b.lo, b.ul, b.last
  4339e4:	cmp	w0, #0x3e
  4339e8:	b.eq	433a20 <feof@plt+0x30180>  // b.none
  4339ec:	cmp	w0, #0x5c
  4339f0:	b.ne	4339c0 <feof@plt+0x30120>  // b.any
  4339f4:	ldrb	w8, [x23, #1]
  4339f8:	cbnz	w8, 4339b0 <feof@plt+0x30110>
  4339fc:	b	433a70 <feof@plt+0x301d0>
  433a00:	cmp	w0, #0x22
  433a04:	b.hi	433a18 <feof@plt+0x30178>  // b.pmore
  433a08:	adr	x8, 43399c <feof@plt+0x300fc>
  433a0c:	ldrb	w9, [x24, x0]
  433a10:	add	x8, x8, x9, lsl #2
  433a14:	br	x8
  433a18:	cmp	w0, #0x3c
  433a1c:	b.ne	4339c0 <feof@plt+0x30120>  // b.any
  433a20:	tbnz	w20, #0, 4339b0 <feof@plt+0x30110>
  433a24:	b	4339c0 <feof@plt+0x30120>
  433a28:	ldr	x8, [x19, #8]
  433a2c:	ldr	x0, [x8, #176]
  433a30:	ldp	x8, x1, [x0, #8]
  433a34:	cmp	x1, x8
  433a38:	b.ls	433a50 <feof@plt+0x301b0>  // b.plast
  433a3c:	ldr	x8, [x0, #32]
  433a40:	cmp	x1, x8
  433a44:	b.cs	433a50 <feof@plt+0x301b0>  // b.hs, b.nlast
  433a48:	str	x1, [x0, #24]
  433a4c:	b	433a54 <feof@plt+0x301b4>
  433a50:	bl	47bc70 <_obstack_free@@Base>
  433a54:	ldr	x8, [x19, #8]
  433a58:	str	wzr, [x8, #200]
  433a5c:	ldp	x20, x19, [sp, #48]
  433a60:	ldp	x22, x21, [sp, #32]
  433a64:	ldp	x24, x23, [sp, #16]
  433a68:	ldp	x29, x30, [sp], #64
  433a6c:	ret
  433a70:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  433a74:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  433a78:	add	x0, x0, #0x583
  433a7c:	add	x2, x2, #0x59c
  433a80:	mov	w1, #0x378                 	// #888
  433a84:	bl	429434 <feof@plt+0x25b94>
  433a88:	stp	x29, x30, [sp, #-64]!
  433a8c:	stp	x24, x23, [sp, #16]
  433a90:	stp	x22, x21, [sp, #32]
  433a94:	stp	x20, x19, [sp, #48]
  433a98:	mov	x29, sp
  433a9c:	ldr	w21, [x0, #32]
  433aa0:	cmp	w21, #0x1
  433aa4:	b.lt	433b68 <feof@plt+0x302c8>  // b.tstop
  433aa8:	adrp	x8, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  433aac:	ldrh	w22, [x8, #1250]
  433ab0:	mov	x19, x0
  433ab4:	mov	w23, #0xa                   	// #10
  433ab8:	mov	w24, #0x20                  	// #32
  433abc:	b	433ae4 <feof@plt+0x30244>
  433ac0:	add	x9, x8, #0x1
  433ac4:	str	x9, [x20, #24]
  433ac8:	strb	w24, [x8]
  433acc:	ldr	x8, [x19, #8]
  433ad0:	ldr	w9, [x8, #200]
  433ad4:	add	w9, w9, #0x1
  433ad8:	str	w9, [x8, #200]
  433adc:	subs	w21, w21, #0x1
  433ae0:	b.eq	433b68 <feof@plt+0x302c8>  // b.none
  433ae4:	ldr	w8, [x19, #40]
  433ae8:	cmp	w8, #0x1
  433aec:	b.lt	433b40 <feof@plt+0x302a0>  // b.tstop
  433af0:	ldr	x8, [x19, #8]
  433af4:	ldr	w9, [x19, #28]
  433af8:	ldr	w10, [x8, #200]
  433afc:	cmp	w9, w10
  433b00:	b.gt	433b40 <feof@plt+0x302a0>
  433b04:	ldr	x20, [x8, #176]
  433b08:	ldp	x8, x9, [x20, #24]
  433b0c:	cmp	x9, x8
  433b10:	b.ne	433b24 <feof@plt+0x30284>  // b.any
  433b14:	mov	w1, #0x1                   	// #1
  433b18:	mov	x0, x20
  433b1c:	bl	47bae8 <_obstack_newchunk@@Base>
  433b20:	ldr	x8, [x20, #24]
  433b24:	add	x9, x8, #0x1
  433b28:	str	x9, [x20, #24]
  433b2c:	strb	w23, [x8]
  433b30:	ldr	x8, [x19, #8]
  433b34:	strb	wzr, [x19, #65]
  433b38:	str	wzr, [x8, #200]
  433b3c:	tbnz	w22, #6, 433adc <feof@plt+0x3023c>
  433b40:	ldr	x8, [x19, #8]
  433b44:	ldr	x20, [x8, #176]
  433b48:	ldp	x8, x9, [x20, #24]
  433b4c:	cmp	x9, x8
  433b50:	b.ne	433ac0 <feof@plt+0x30220>  // b.any
  433b54:	mov	w1, #0x1                   	// #1
  433b58:	mov	x0, x20
  433b5c:	bl	47bae8 <_obstack_newchunk@@Base>
  433b60:	ldr	x8, [x20, #24]
  433b64:	b	433ac0 <feof@plt+0x30220>
  433b68:	ldp	x20, x19, [sp, #48]
  433b6c:	ldp	x22, x21, [sp, #32]
  433b70:	ldp	x24, x23, [sp, #16]
  433b74:	ldp	x29, x30, [sp], #64
  433b78:	ret
  433b7c:	sub	sp, sp, #0x1e0
  433b80:	stp	x29, x30, [sp, #384]
  433b84:	stp	x28, x27, [sp, #400]
  433b88:	stp	x26, x25, [sp, #416]
  433b8c:	stp	x24, x23, [sp, #432]
  433b90:	stp	x22, x21, [sp, #448]
  433b94:	stp	x20, x19, [sp, #464]
  433b98:	add	x29, sp, #0x180
  433b9c:	str	x1, [sp, #32]
  433ba0:	mov	x23, x0
  433ba4:	ldr	x27, [x23, #8]!
  433ba8:	mov	x28, x0
  433bac:	mov	x10, x27
  433bb0:	ldr	x8, [x27, #120]
  433bb4:	ldr	x9, [x10, #112]!
  433bb8:	sub	x8, x8, x9
  433bbc:	cmp	x8, #0x1e7
  433bc0:	add	x8, x27, #0x58
  433bc4:	stp	x8, x10, [sp, #88]
  433bc8:	b.hi	433be0 <feof@plt+0x30340>  // b.pmore
  433bcc:	ldr	x0, [sp, #88]
  433bd0:	mov	w1, #0x1e8                 	// #488
  433bd4:	bl	47bae8 <_obstack_newchunk@@Base>
  433bd8:	ldr	x8, [sp, #96]
  433bdc:	ldr	x9, [x8]
  433be0:	ldr	x8, [x27, #104]
  433be4:	add	x10, x9, #0x1e8
  433be8:	str	x10, [x27, #112]
  433bec:	cmp	x10, x8
  433bf0:	b.ne	433c00 <feof@plt+0x30360>  // b.any
  433bf4:	ldrb	w9, [x27, #168]
  433bf8:	orr	w9, w9, #0x2
  433bfc:	strb	w9, [x27, #168]
  433c00:	ldr	x12, [x27, #136]
  433c04:	ldr	x13, [x27, #96]
  433c08:	ldr	x11, [x27, #120]
  433c0c:	add	x9, sp, #0x70
  433c10:	add	x10, x12, x10
  433c14:	bic	x10, x10, x12
  433c18:	sub	x12, x10, x13
  433c1c:	sub	x13, x11, x13
  433c20:	cmp	x12, x13
  433c24:	str	x10, [x27, #112]
  433c28:	b.ls	433c38 <feof@plt+0x30398>  // b.plast
  433c2c:	ldr	x10, [sp, #96]
  433c30:	str	x11, [x10]
  433c34:	mov	x10, x11
  433c38:	ldr	x11, [x27, #184]
  433c3c:	str	x10, [x27, #104]
  433c40:	mov	x10, x8
  433c44:	movi	v0.2d, #0x0
  433c48:	str	x11, [x10], #8
  433c4c:	stp	x27, x10, [sp, #72]
  433c50:	str	x8, [x27, #184]
  433c54:	ldr	x8, [sp, #32]
  433c58:	stp	q0, q0, [x9, #208]
  433c5c:	stp	q0, q0, [x9, #176]
  433c60:	stp	q0, q0, [x9, #144]
  433c64:	str	q0, [x9, #128]
  433c68:	stp	q0, q0, [sp, #208]
  433c6c:	stp	q0, q0, [sp, #176]
  433c70:	stp	q0, q0, [sp, #144]
  433c74:	stp	q0, q0, [sp, #112]
  433c78:	ldr	x24, [x8]
  433c7c:	ldrb	w8, [x24]
  433c80:	cbz	w8, 4342c8 <feof@plt+0x30a28>
  433c84:	adrp	x22, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  433c88:	adrp	x19, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  433c8c:	str	x23, [sp, #40]
  433c90:	mov	x23, x28
  433c94:	mov	x20, xzr
  433c98:	mov	w28, wzr
  433c9c:	add	x21, sp, #0x70
  433ca0:	add	x22, x22, #0x5cb
  433ca4:	add	x19, x19, #0x4e3
  433ca8:	stp	wzr, wzr, [sp, #52]
  433cac:	str	wzr, [sp, #64]
  433cb0:	b	433cc8 <feof@plt+0x30428>
  433cb4:	ldr	x11, [sp, #96]
  433cb8:	add	x10, x9, #0x1
  433cbc:	str	x10, [x11]
  433cc0:	strb	w8, [x9]
  433cc4:	ldrb	w8, [x24, #1]!
  433cc8:	and	w9, w8, #0xff
  433ccc:	cmp	w9, #0x25
  433cd0:	b.eq	433d00 <feof@plt+0x30460>  // b.none
  433cd4:	cbz	w9, 4342d4 <feof@plt+0x30a34>
  433cd8:	ldp	x9, x10, [x27, #112]
  433cdc:	cmp	x10, x9
  433ce0:	b.ne	433cb4 <feof@plt+0x30414>  // b.any
  433ce4:	ldr	x0, [sp, #88]
  433ce8:	mov	w1, #0x1                   	// #1
  433cec:	bl	47bae8 <_obstack_newchunk@@Base>
  433cf0:	ldr	x9, [sp, #96]
  433cf4:	ldrb	w8, [x24]
  433cf8:	ldr	x9, [x9]
  433cfc:	b	433cb4 <feof@plt+0x30414>
  433d00:	ldrb	w8, [x24, #1]
  433d04:	sub	w9, w8, #0x25
  433d08:	cmp	w9, #0x2d
  433d0c:	b.hi	433d58 <feof@plt+0x304b8>  // b.pmore
  433d10:	adr	x8, 433d20 <feof@plt+0x30480>
  433d14:	ldrb	w10, [x19, x9]
  433d18:	add	x8, x8, x10, lsl #2
  433d1c:	br	x8
  433d20:	ldp	x8, x9, [x27, #112]
  433d24:	cmp	x9, x8
  433d28:	b.ne	433d40 <feof@plt+0x304a0>  // b.any
  433d2c:	ldr	x0, [sp, #88]
  433d30:	mov	w1, #0x1                   	// #1
  433d34:	bl	47bae8 <_obstack_newchunk@@Base>
  433d38:	ldr	x8, [sp, #96]
  433d3c:	ldr	x8, [x8]
  433d40:	ldr	x10, [sp, #96]
  433d44:	add	x9, x8, #0x1
  433d48:	str	x9, [x10]
  433d4c:	mov	w9, #0x25                  	// #37
  433d50:	strb	w9, [x8]
  433d54:	b	433fc8 <feof@plt+0x30728>
  433d58:	cmp	w8, #0x6d
  433d5c:	b.eq	433f70 <feof@plt+0x306d0>  // b.none
  433d60:	cbz	w8, 435294 <feof@plt+0x319f4>
  433d64:	ldp	x8, x9, [x27, #112]
  433d68:	cmp	x9, x8
  433d6c:	b.ne	433d84 <feof@plt+0x304e4>  // b.any
  433d70:	ldr	x0, [sp, #88]
  433d74:	mov	w1, #0x1                   	// #1
  433d78:	bl	47bae8 <_obstack_newchunk@@Base>
  433d7c:	ldr	x8, [sp, #96]
  433d80:	ldr	x8, [x8]
  433d84:	ldr	x10, [sp, #96]
  433d88:	add	x9, x8, #0x1
  433d8c:	cmp	x20, #0x3c
  433d90:	str	x9, [x10]
  433d94:	strb	wzr, [x8]
  433d98:	b.cs	435354 <feof@plt+0x31ab4>  // b.hs, b.nlast
  433d9c:	ldp	x8, x9, [x27, #104]
  433da0:	add	x24, x24, #0x1
  433da4:	cmp	x9, x8
  433da8:	b.ne	433db8 <feof@plt+0x30518>  // b.any
  433dac:	ldrb	w10, [x27, #168]
  433db0:	orr	w10, w10, #0x2
  433db4:	strb	w10, [x27, #168]
  433db8:	ldr	x10, [x27, #136]
  433dbc:	ldr	x11, [x27, #96]
  433dc0:	ldr	x12, [x27, #120]
  433dc4:	add	x9, x10, x9
  433dc8:	bic	x9, x9, x10
  433dcc:	sub	x13, x12, x11
  433dd0:	sub	x10, x9, x11
  433dd4:	cmp	x10, x13
  433dd8:	csel	x9, x12, x9, hi  // hi = pmore
  433ddc:	stp	x9, x9, [x27, #104]
  433de0:	ldr	x9, [sp, #80]
  433de4:	str	x8, [x9, x20, lsl #3]
  433de8:	ldrb	w8, [x24]
  433dec:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  433df0:	add	x9, x9, #0x4a2
  433df4:	ldrh	w8, [x9, x8, lsl #1]
  433df8:	tbnz	w8, #2, 433fd4 <feof@plt+0x30734>
  433dfc:	ldr	w8, [sp, #56]
  433e00:	tbnz	w8, #0, 43536c <feof@plt+0x31acc>
  433e04:	ldr	w8, [sp, #52]
  433e08:	mov	w9, #0x1                   	// #1
  433e0c:	str	w9, [sp, #64]
  433e10:	mov	w19, w8
  433e14:	add	w8, w8, #0x1
  433e18:	stp	w8, wzr, [sp, #52]
  433e1c:	b	434010 <feof@plt+0x30770>
  433e20:	ldrb	w0, [x23, #67]
  433e24:	bl	42c564 <feof@plt+0x28cc4>
  433e28:	b	433f7c <feof@plt+0x306dc>
  433e2c:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  433e30:	ldr	x26, [x19, #1016]
  433e34:	mov	x0, x26
  433e38:	bl	4030b0 <strlen@plt>
  433e3c:	mov	x25, x0
  433e40:	ldp	x0, x8, [x27, #112]
  433e44:	sub	x8, x8, x0
  433e48:	cmp	x8, x25
  433e4c:	b.cs	433e68 <feof@plt+0x305c8>  // b.hs, b.nlast
  433e50:	ldr	x0, [sp, #88]
  433e54:	mov	x1, x25
  433e58:	bl	47bae8 <_obstack_newchunk@@Base>
  433e5c:	ldr	x8, [sp, #96]
  433e60:	ldr	x26, [x19, #1016]
  433e64:	ldr	x0, [x8]
  433e68:	mov	x1, x26
  433e6c:	mov	x2, x25
  433e70:	bl	402fc0 <memcpy@plt>
  433e74:	ldr	x8, [x27, #112]
  433e78:	adrp	x1, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  433e7c:	mov	w2, #0x5                   	// #5
  433e80:	add	x1, x1, #0x601
  433e84:	add	x8, x8, x25
  433e88:	str	x8, [x27, #112]
  433e8c:	ldrb	w0, [x23, #67]
  433e90:	bl	42c4e0 <feof@plt+0x28c40>
  433e94:	mov	x25, x0
  433e98:	bl	4030b0 <strlen@plt>
  433e9c:	mov	x26, x0
  433ea0:	ldp	x0, x8, [x27, #112]
  433ea4:	adrp	x19, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  433ea8:	add	x19, x19, #0x4e3
  433eac:	b	433f8c <feof@plt+0x306ec>
  433eb0:	ldr	x8, [sp, #96]
  433eb4:	ldr	x25, [x8]
  433eb8:	b	433f10 <feof@plt+0x30670>
  433ebc:	ldrb	w0, [x23, #67]
  433ec0:	bl	42c564 <feof@plt+0x28cc4>
  433ec4:	mov	x25, x0
  433ec8:	bl	4030b0 <strlen@plt>
  433ecc:	mov	x26, x0
  433ed0:	ldp	x0, x8, [x27, #112]
  433ed4:	sub	x8, x8, x0
  433ed8:	cmp	x8, x26
  433edc:	b.cs	433ef4 <feof@plt+0x30654>  // b.hs, b.nlast
  433ee0:	ldr	x0, [sp, #88]
  433ee4:	mov	x1, x26
  433ee8:	bl	47bae8 <_obstack_newchunk@@Base>
  433eec:	ldr	x8, [sp, #96]
  433ef0:	ldr	x0, [x8]
  433ef4:	mov	x1, x25
  433ef8:	mov	x2, x26
  433efc:	bl	402fc0 <memcpy@plt>
  433f00:	ldr	x9, [sp, #96]
  433f04:	ldr	x8, [x9]
  433f08:	add	x25, x8, x26
  433f0c:	str	x25, [x9]
  433f10:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  433f14:	ldr	x27, [x8, #1024]
  433f18:	mov	x0, x27
  433f1c:	bl	4030b0 <strlen@plt>
  433f20:	ldr	x8, [sp, #72]
  433f24:	mov	x26, x0
  433f28:	ldr	x8, [x8, #120]
  433f2c:	sub	x8, x8, x25
  433f30:	cmp	x8, x0
  433f34:	b.cs	433f54 <feof@plt+0x306b4>  // b.hs, b.nlast
  433f38:	ldr	x0, [sp, #88]
  433f3c:	mov	x1, x26
  433f40:	bl	47bae8 <_obstack_newchunk@@Base>
  433f44:	ldr	x8, [sp, #96]
  433f48:	ldr	x25, [x8]
  433f4c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  433f50:	ldr	x27, [x8, #1024]
  433f54:	mov	x0, x25
  433f58:	mov	x1, x27
  433f5c:	mov	x2, x26
  433f60:	bl	402fc0 <memcpy@plt>
  433f64:	ldr	x9, [sp, #96]
  433f68:	ldr	x27, [sp, #72]
  433f6c:	b	433fbc <feof@plt+0x3071c>
  433f70:	ldr	x8, [sp, #32]
  433f74:	ldr	w0, [x8, #16]
  433f78:	bl	47d1ec <_obstack_memory_used@@Base+0x14e8>
  433f7c:	mov	x25, x0
  433f80:	bl	4030b0 <strlen@plt>
  433f84:	mov	x26, x0
  433f88:	ldp	x0, x8, [x27, #112]
  433f8c:	sub	x8, x8, x0
  433f90:	cmp	x8, x26
  433f94:	b.cs	433fac <feof@plt+0x3070c>  // b.hs, b.nlast
  433f98:	ldr	x0, [sp, #88]
  433f9c:	mov	x1, x26
  433fa0:	bl	47bae8 <_obstack_newchunk@@Base>
  433fa4:	ldr	x8, [sp, #96]
  433fa8:	ldr	x0, [x8]
  433fac:	mov	x1, x25
  433fb0:	mov	x2, x26
  433fb4:	bl	402fc0 <memcpy@plt>
  433fb8:	ldr	x9, [sp, #96]
  433fbc:	ldr	x8, [x9]
  433fc0:	add	x8, x8, x26
  433fc4:	str	x8, [x9]
  433fc8:	ldrb	w8, [x24, #2]!
  433fcc:	cbnz	w8, 433cc8 <feof@plt+0x30428>
  433fd0:	b	4342d4 <feof@plt+0x30a34>
  433fd4:	sub	x1, x29, #0x20
  433fd8:	mov	w2, #0xa                   	// #10
  433fdc:	mov	x0, x24
  433fe0:	bl	4035f0 <strtoul@plt>
  433fe4:	ldur	x8, [x29, #-32]
  433fe8:	ldrb	w9, [x8]
  433fec:	cmp	w9, #0x24
  433ff0:	b.ne	435384 <feof@plt+0x31ae4>  // b.any
  433ff4:	ldr	w9, [sp, #64]
  433ff8:	tbnz	w9, #0, 43539c <feof@plt+0x31afc>
  433ffc:	add	x24, x8, #0x1
  434000:	mov	w8, #0x1                   	// #1
  434004:	str	wzr, [sp, #64]
  434008:	sub	w19, w0, #0x1
  43400c:	str	w8, [sp, #56]
  434010:	cmp	w19, #0x1e
  434014:	b.cs	4353b4 <feof@plt+0x31b14>  // b.hs, b.nlast
  434018:	ldr	x8, [x21, w19, uxtw #3]
  43401c:	add	x10, sp, #0x70
  434020:	cbnz	x8, 4353cc <feof@plt+0x31b2c>
  434024:	ldr	x9, [sp, #80]
  434028:	orr	x8, x20, #0x1
  43402c:	mov	w21, w19
  434030:	add	x26, x9, x8, lsl #3
  434034:	str	x26, [x10, x21, lsl #3]
  434038:	b	434068 <feof@plt+0x307c8>
  43403c:	ldrb	w9, [x24]
  434040:	ldr	x11, [sp, #96]
  434044:	add	x10, x8, #0x1
  434048:	mov	w2, #0x6                   	// #6
  43404c:	mov	x0, x22
  434050:	str	x10, [x11]
  434054:	strb	w9, [x8]
  434058:	ldrb	w25, [x24], #1
  43405c:	mov	w1, w25
  434060:	bl	4033f0 <memchr@plt>
  434064:	cbz	x0, 43408c <feof@plt+0x307ec>
  434068:	ldp	x8, x9, [x27, #112]
  43406c:	cmp	x9, x8
  434070:	b.ne	43403c <feof@plt+0x3079c>  // b.any
  434074:	ldr	x0, [sp, #88]
  434078:	mov	w1, #0x1                   	// #1
  43407c:	bl	47bae8 <_obstack_newchunk@@Base>
  434080:	ldr	x8, [sp, #96]
  434084:	ldr	x8, [x8]
  434088:	b	43403c <feof@plt+0x3079c>
  43408c:	cmp	w25, #0x2e
  434090:	b.ne	43412c <feof@plt+0x3088c>  // b.any
  434094:	ldrb	w8, [x24]
  434098:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  43409c:	add	x9, x9, #0x4a2
  4340a0:	ldrh	w9, [x9, x8, lsl #1]
  4340a4:	tbnz	w9, #2, 43413c <feof@plt+0x3089c>
  4340a8:	cmp	w8, #0x2a
  4340ac:	b.ne	4353e4 <feof@plt+0x31b44>  // b.any
  4340b0:	ldp	x8, x9, [x27, #112]
  4340b4:	cmp	x9, x8
  4340b8:	b.ne	4340d0 <feof@plt+0x30830>  // b.any
  4340bc:	ldr	x0, [sp, #88]
  4340c0:	mov	w1, #0x1                   	// #1
  4340c4:	bl	47bae8 <_obstack_newchunk@@Base>
  4340c8:	ldr	x8, [sp, #96]
  4340cc:	ldr	x8, [x8]
  4340d0:	ldr	x10, [sp, #96]
  4340d4:	add	x9, x8, #0x1
  4340d8:	str	x9, [x10]
  4340dc:	mov	w9, #0x2a                  	// #42
  4340e0:	strb	w9, [x8]
  4340e4:	ldrb	w8, [x24, #1]!
  4340e8:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  4340ec:	add	x9, x9, #0x4a2
  4340f0:	ldrh	w8, [x9, x8, lsl #1]
  4340f4:	tbnz	w8, #2, 4341a4 <feof@plt+0x30904>
  4340f8:	ldr	w8, [sp, #56]
  4340fc:	cbnz	w8, 4353fc <feof@plt+0x31b5c>
  434100:	add	x8, sp, #0x70
  434104:	ldr	x8, [x8, x21, lsl #3]
  434108:	add	x21, sp, #0x70
  43410c:	add	w9, w19, #0x1
  434110:	adrp	x19, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  434114:	str	x8, [x21, w9, uxtw #3]
  434118:	ldr	w8, [sp, #52]
  43411c:	add	x19, x19, #0x4e3
  434120:	add	w8, w8, #0x1
  434124:	str	w8, [sp, #52]
  434128:	b	4341f8 <feof@plt+0x30958>
  43412c:	adrp	x19, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  434130:	add	x21, sp, #0x70
  434134:	add	x19, x19, #0x4e3
  434138:	b	43423c <feof@plt+0x3099c>
  43413c:	adrp	x19, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  434140:	add	x21, sp, #0x70
  434144:	add	x19, x19, #0x4e3
  434148:	b	434174 <feof@plt+0x308d4>
  43414c:	ldrb	w9, [x24]
  434150:	ldr	x11, [sp, #96]
  434154:	add	x10, x8, #0x1
  434158:	str	x10, [x11]
  43415c:	strb	w9, [x8]
  434160:	ldrb	w8, [x24], #1
  434164:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  434168:	add	x9, x9, #0x4a2
  43416c:	ldrh	w9, [x9, x8, lsl #1]
  434170:	tbz	w9, #2, 434198 <feof@plt+0x308f8>
  434174:	ldp	x8, x9, [x27, #112]
  434178:	cmp	x9, x8
  43417c:	b.ne	43414c <feof@plt+0x308ac>  // b.any
  434180:	ldr	x0, [sp, #88]
  434184:	mov	w1, #0x1                   	// #1
  434188:	bl	47bae8 <_obstack_newchunk@@Base>
  43418c:	ldr	x8, [sp, #96]
  434190:	ldr	x8, [x8]
  434194:	b	43414c <feof@plt+0x308ac>
  434198:	cmp	w8, #0x73
  43419c:	b.eq	43423c <feof@plt+0x3099c>  // b.none
  4341a0:	b	435414 <feof@plt+0x31b74>
  4341a4:	sub	x1, x29, #0x20
  4341a8:	mov	w2, #0xa                   	// #10
  4341ac:	mov	x0, x24
  4341b0:	bl	4035f0 <strtoul@plt>
  4341b4:	cmp	w19, w0
  4341b8:	b.ne	43542c <feof@plt+0x31b8c>  // b.any
  4341bc:	ldr	w8, [sp, #64]
  4341c0:	adrp	x19, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4341c4:	add	x19, x19, #0x4e3
  4341c8:	cbnz	w8, 435444 <feof@plt+0x31ba4>
  4341cc:	ldur	x8, [x29, #-32]
  4341d0:	ldrb	w9, [x8]
  4341d4:	cmp	w9, #0x24
  4341d8:	b.ne	43545c <feof@plt+0x31bbc>  // b.any
  4341dc:	add	x9, sp, #0x70
  4341e0:	ldr	x9, [x9, x21, lsl #3]
  4341e4:	mov	w10, #0xffffffff            	// #-1
  4341e8:	add	x21, sp, #0x70
  4341ec:	add	x10, x0, x10
  4341f0:	add	x24, x8, #0x1
  4341f4:	str	x9, [x21, w10, uxtw #3]
  4341f8:	ldrb	w8, [x24]
  4341fc:	cmp	w8, #0x73
  434200:	b.ne	435474 <feof@plt+0x31bd4>  // b.any
  434204:	ldp	x8, x9, [x27, #112]
  434208:	cmp	x9, x8
  43420c:	b.ne	434224 <feof@plt+0x30984>  // b.any
  434210:	ldr	x0, [sp, #88]
  434214:	mov	w1, #0x1                   	// #1
  434218:	bl	47bae8 <_obstack_newchunk@@Base>
  43421c:	ldr	x8, [sp, #96]
  434220:	ldr	x8, [x8]
  434224:	ldr	x10, [sp, #96]
  434228:	add	x9, x8, #0x1
  43422c:	add	x24, x24, #0x1
  434230:	str	x9, [x10]
  434234:	mov	w9, #0x73                  	// #115
  434238:	strb	w9, [x8]
  43423c:	ldrb	w8, [x24]
  434240:	cbz	w8, 4342d0 <feof@plt+0x30a30>
  434244:	ldp	x8, x9, [x27, #112]
  434248:	cmp	x9, x8
  43424c:	b.ne	434264 <feof@plt+0x309c4>  // b.any
  434250:	ldr	x0, [sp, #88]
  434254:	mov	w1, #0x1                   	// #1
  434258:	bl	47bae8 <_obstack_newchunk@@Base>
  43425c:	ldr	x8, [sp, #96]
  434260:	ldr	x8, [x8]
  434264:	add	x9, x8, #0x1
  434268:	str	x9, [x27, #112]
  43426c:	strb	wzr, [x8]
  434270:	ldp	x8, x9, [x27, #104]
  434274:	cmp	x9, x8
  434278:	b.ne	434288 <feof@plt+0x309e8>  // b.any
  43427c:	ldrb	w10, [x27, #168]
  434280:	orr	w10, w10, #0x2
  434284:	strb	w10, [x27, #168]
  434288:	ldr	x10, [x27, #136]
  43428c:	ldr	x11, [x27, #96]
  434290:	ldr	x12, [x27, #120]
  434294:	add	x20, x20, #0x2
  434298:	add	x9, x10, x9
  43429c:	bic	x9, x9, x10
  4342a0:	sub	x13, x12, x11
  4342a4:	sub	x10, x9, x11
  4342a8:	cmp	x10, x13
  4342ac:	csel	x9, x12, x9, hi  // hi = pmore
  4342b0:	stp	x9, x9, [x27, #104]
  4342b4:	str	x8, [x26]
  4342b8:	ldrb	w8, [x24]
  4342bc:	add	w28, w28, #0x2
  4342c0:	cbnz	w8, 433cc8 <feof@plt+0x30428>
  4342c4:	b	4342d4 <feof@plt+0x30a34>
  4342c8:	mov	w20, wzr
  4342cc:	b	4342dc <feof@plt+0x30a3c>
  4342d0:	orr	w20, w28, #0x1
  4342d4:	mov	x28, x23
  4342d8:	ldr	x23, [sp, #40]
  4342dc:	ldp	x8, x9, [x27, #112]
  4342e0:	cmp	x9, x8
  4342e4:	b.ne	4342fc <feof@plt+0x30a5c>  // b.any
  4342e8:	ldr	x0, [sp, #88]
  4342ec:	mov	w1, #0x1                   	// #1
  4342f0:	bl	47bae8 <_obstack_newchunk@@Base>
  4342f4:	ldr	x8, [sp, #96]
  4342f8:	ldr	x8, [x8]
  4342fc:	ldr	x10, [sp, #96]
  434300:	add	x9, x8, #0x1
  434304:	cmp	w20, #0x3c
  434308:	str	x9, [x10]
  43430c:	strb	wzr, [x8]
  434310:	b.cs	43533c <feof@plt+0x31a9c>  // b.hs, b.nlast
  434314:	ldp	x8, x9, [x27, #104]
  434318:	cmp	x9, x8
  43431c:	b.ne	43432c <feof@plt+0x30a8c>  // b.any
  434320:	ldrb	w10, [x27, #168]
  434324:	orr	w10, w10, #0x2
  434328:	strb	w10, [x27, #168]
  43432c:	ldr	x10, [x27, #136]
  434330:	ldr	x11, [x27, #96]
  434334:	ldr	x12, [x27, #120]
  434338:	add	x9, x10, x9
  43433c:	bic	x9, x9, x10
  434340:	sub	x10, x12, x11
  434344:	sub	x11, x9, x11
  434348:	cmp	x11, x10
  43434c:	csel	x9, x12, x9, hi  // hi = pmore
  434350:	stp	x9, x9, [x27, #104]
  434354:	ldr	x9, [sp, #80]
  434358:	adrp	x11, 48d000 <_obstack_memory_used@@Base+0x112fc>
  43435c:	ldr	d0, [x11, #3576]
  434360:	add	w10, w20, #0x1
  434364:	str	x8, [x9, w20, uxtw #3]
  434368:	ldr	x8, [sp, #88]
  43436c:	str	xzr, [x9, w10, uxtw #3]
  434370:	str	x8, [x27, #176]
  434374:	ldur	x8, [x28, #36]
  434378:	stur	d0, [x28, #36]
  43437c:	ldr	x11, [sp, #112]
  434380:	str	x8, [sp, #24]
  434384:	cbz	x11, 4351b4 <feof@plt+0x31914>
  434388:	ldr	x8, [sp, #32]
  43438c:	add	x9, sp, #0x68
  434390:	mov	w22, wzr
  434394:	add	x8, x8, #0x8
  434398:	str	x8, [sp, #56]
  43439c:	adrp	x8, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  4343a0:	add	x8, x8, #0x4e2
  4343a4:	ldrh	w10, [x8, #24]
  4343a8:	ldrh	w8, [x8]
  4343ac:	str	w10, [sp, #52]
  4343b0:	str	w8, [sp, #40]
  4343b4:	orr	x8, x9, #0x1
  4343b8:	str	x8, [sp, #16]
  4343bc:	b	434418 <feof@plt+0x30b78>
  4343c0:	add	x9, x8, #0x1
  4343c4:	str	x9, [x27, #112]
  4343c8:	strb	wzr, [x8]
  4343cc:	ldp	x8, x9, [x27, #104]
  4343d0:	cmp	x9, x8
  4343d4:	b.eq	4345a4 <feof@plt+0x30d04>  // b.none
  4343d8:	ldr	x10, [x27, #136]
  4343dc:	ldr	x11, [x27, #96]
  4343e0:	ldr	x12, [x27, #120]
  4343e4:	add	x9, x10, x9
  4343e8:	bic	x9, x9, x10
  4343ec:	sub	x13, x12, x11
  4343f0:	sub	x10, x9, x11
  4343f4:	cmp	x10, x13
  4343f8:	csel	x9, x12, x9, hi  // hi = pmore
  4343fc:	stp	x9, x9, [x27, #104]
  434400:	add	x10, sp, #0x70
  434404:	ldr	x9, [x10, w22, uxtw #3]
  434408:	add	w22, w22, #0x1
  43440c:	str	x8, [x9]
  434410:	ldr	x11, [x10, w22, uxtw #3]
  434414:	cbz	x11, 4351b4 <feof@plt+0x31914>
  434418:	strb	wzr, [sp, #108]
  43441c:	ldr	x9, [x11]
  434420:	mov	w8, wzr
  434424:	mov	w26, wzr
  434428:	mov	w19, wzr
  43442c:	mov	w21, wzr
  434430:	mov	w27, wzr
  434434:	add	x25, x9, #0x1
  434438:	ldurb	w9, [x25, #-1]
  43443c:	cmp	w9, #0x6b
  434440:	b.le	434474 <feof@plt+0x30bd4>
  434444:	cmp	w9, #0x6c
  434448:	b.eq	4344a4 <feof@plt+0x30c04>  // b.none
  43444c:	cmp	w9, #0x77
  434450:	b.eq	4344b8 <feof@plt+0x30c18>  // b.none
  434454:	cmp	w9, #0x71
  434458:	b.ne	4344c8 <feof@plt+0x30c28>  // b.any
  43445c:	tst	w8, #0xff
  434460:	b.ne	435204 <feof@plt+0x31964>  // b.any
  434464:	mov	w8, #0x1                   	// #1
  434468:	strb	w8, [sp, #108]
  43446c:	add	x25, x25, #0x1
  434470:	b	434438 <feof@plt+0x30b98>
  434474:	cmp	w9, #0x23
  434478:	b.eq	434494 <feof@plt+0x30bf4>  // b.none
  43447c:	cmp	w9, #0x2b
  434480:	b.ne	4344c8 <feof@plt+0x30c28>  // b.any
  434484:	tbnz	w19, #0, 43521c <feof@plt+0x3197c>
  434488:	mov	w19, #0x1                   	// #1
  43448c:	add	x25, x25, #0x1
  434490:	b	434438 <feof@plt+0x30b98>
  434494:	tbnz	w26, #0, 435234 <feof@plt+0x31994>
  434498:	mov	w26, #0x1                   	// #1
  43449c:	add	x25, x25, #0x1
  4344a0:	b	434438 <feof@plt+0x30b98>
  4344a4:	cmp	w27, #0x2
  4344a8:	b.ge	43524c <feof@plt+0x319ac>  // b.tcont
  4344ac:	add	w27, w27, #0x1
  4344b0:	add	x25, x25, #0x1
  4344b4:	b	434438 <feof@plt+0x30b98>
  4344b8:	tbnz	w21, #0, 435264 <feof@plt+0x319c4>
  4344bc:	mov	w21, #0x1                   	// #1
  4344c0:	add	x25, x25, #0x1
  4344c4:	b	434438 <feof@plt+0x30b98>
  4344c8:	cbz	w27, 4344d4 <feof@plt+0x30c34>
  4344cc:	eor	w10, w21, #0x1
  4344d0:	tbz	w10, #0, 43527c <feof@plt+0x319dc>
  4344d4:	tst	w8, #0xff
  4344d8:	sub	x2, x25, #0x1
  4344dc:	str	x11, [sp, #64]
  4344e0:	b.eq	434550 <feof@plt+0x30cb0>  // b.none
  4344e4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4344e8:	ldr	x20, [x8, #1016]
  4344ec:	mov	w24, w22
  4344f0:	mov	x22, x23
  4344f4:	ldrb	w23, [x28, #67]
  4344f8:	mov	x0, x20
  4344fc:	str	x2, [sp, #80]
  434500:	bl	4030b0 <strlen@plt>
  434504:	add	x2, x20, x0
  434508:	mov	x0, x28
  43450c:	mov	x1, x20
  434510:	bl	435edc <feof@plt+0x3263c>
  434514:	adrp	x1, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  434518:	mov	w2, #0x5                   	// #5
  43451c:	mov	w0, w23
  434520:	add	x1, x1, #0x601
  434524:	mov	x23, x22
  434528:	mov	w22, w24
  43452c:	bl	42c4e0 <feof@plt+0x28c40>
  434530:	mov	x20, x0
  434534:	bl	4030b0 <strlen@plt>
  434538:	add	x2, x20, x0
  43453c:	mov	x0, x28
  434540:	mov	x1, x20
  434544:	bl	435edc <feof@plt+0x3263c>
  434548:	ldr	x2, [sp, #80]
  43454c:	ldrb	w9, [x2]
  434550:	sub	w8, w9, #0x2e
  434554:	cmp	w8, #0x4a
  434558:	b.hi	43482c <feof@plt+0x30f8c>  // b.pmore
  43455c:	adrp	x11, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  434560:	add	x11, x11, #0x511
  434564:	adr	x9, 434574 <feof@plt+0x30cd4>
  434568:	ldrb	w10, [x11, x8]
  43456c:	add	x9, x9, x10, lsl #2
  434570:	br	x9
  434574:	tbz	w21, #0, 434684 <feof@plt+0x30de4>
  434578:	ldr	x8, [sp, #56]
  43457c:	ldr	x8, [x8]
  434580:	ldrsw	x9, [x8, #24]
  434584:	tbz	w9, #31, 43490c <feof@plt+0x3106c>
  434588:	add	w10, w9, #0x8
  43458c:	cmn	w9, #0x8
  434590:	str	w10, [x8, #24]
  434594:	b.gt	43490c <feof@plt+0x3106c>
  434598:	ldr	x8, [x8, #8]
  43459c:	add	x9, x8, x9
  4345a0:	b	434918 <feof@plt+0x31078>
  4345a4:	ldrb	w10, [x27, #168]
  4345a8:	orr	w10, w10, #0x2
  4345ac:	strb	w10, [x27, #168]
  4345b0:	b	4343d8 <feof@plt+0x30b38>
  4345b4:	tbz	w21, #0, 434c80 <feof@plt+0x313e0>
  4345b8:	ldr	x8, [sp, #56]
  4345bc:	ldr	x10, [x23]
  4345c0:	ldr	x8, [x8]
  4345c4:	add	x0, x10, #0xcc
  4345c8:	ldrsw	x9, [x8, #24]
  4345cc:	tbz	w9, #31, 434bac <feof@plt+0x3130c>
  4345d0:	add	w10, w9, #0x8
  4345d4:	cmn	w9, #0x8
  4345d8:	str	w10, [x8, #24]
  4345dc:	b.gt	434bac <feof@plt+0x3130c>
  4345e0:	ldr	x8, [x8, #8]
  4345e4:	add	x9, x8, x9
  4345e8:	b	434bb8 <feof@plt+0x31318>
  4345ec:	ldr	x8, [sp, #56]
  4345f0:	ldr	x10, [x23]
  4345f4:	ldr	x8, [x8]
  4345f8:	add	x0, x10, #0xcc
  4345fc:	ldrsw	x9, [x8, #28]
  434600:	tbz	w9, #31, 434868 <feof@plt+0x30fc8>
  434604:	add	w10, w9, #0x10
  434608:	cmn	w9, #0x10
  43460c:	str	w10, [x8, #28]
  434610:	b.gt	434868 <feof@plt+0x30fc8>
  434614:	ldr	x8, [x8, #16]
  434618:	add	x9, x8, x9
  43461c:	b	434874 <feof@plt+0x30fd4>
  434620:	tbz	w21, #0, 434cc8 <feof@plt+0x31428>
  434624:	ldr	x8, [sp, #56]
  434628:	ldr	x10, [x23]
  43462c:	ldr	x8, [x8]
  434630:	add	x0, x10, #0xcc
  434634:	ldrsw	x9, [x8, #24]
  434638:	tbz	w9, #31, 434d94 <feof@plt+0x314f4>
  43463c:	add	w10, w9, #0x8
  434640:	cmn	w9, #0x8
  434644:	str	w10, [x8, #24]
  434648:	b.gt	434d94 <feof@plt+0x314f4>
  43464c:	ldr	x8, [x8, #8]
  434650:	add	x9, x8, x9
  434654:	b	434da0 <feof@plt+0x31500>
  434658:	ldr	x8, [sp, #56]
  43465c:	ldr	x8, [x8]
  434660:	ldrsw	x9, [x8, #24]
  434664:	tbz	w9, #31, 43488c <feof@plt+0x30fec>
  434668:	add	w10, w9, #0x8
  43466c:	cmn	w9, #0x8
  434670:	str	w10, [x8, #24]
  434674:	b.gt	43488c <feof@plt+0x30fec>
  434678:	ldr	x8, [x8, #8]
  43467c:	add	x9, x8, x9
  434680:	b	434898 <feof@plt+0x30ff8>
  434684:	cmp	w27, #0x2
  434688:	b.eq	434eb8 <feof@plt+0x31618>  // b.none
  43468c:	cmp	w27, #0x1
  434690:	b.eq	434e84 <feof@plt+0x315e4>  // b.none
  434694:	cbnz	w27, 434d64 <feof@plt+0x314c4>
  434698:	ldr	x8, [sp, #56]
  43469c:	ldr	x10, [x23]
  4346a0:	ldr	x8, [x8]
  4346a4:	add	x0, x10, #0xcc
  4346a8:	ldrsw	x9, [x8, #24]
  4346ac:	tbz	w9, #31, 434f48 <feof@plt+0x316a8>
  4346b0:	add	w10, w9, #0x8
  4346b4:	cmn	w9, #0x8
  4346b8:	str	w10, [x8, #24]
  4346bc:	b.gt	434f48 <feof@plt+0x316a8>
  4346c0:	ldr	x8, [x8, #8]
  4346c4:	add	x9, x8, x9
  4346c8:	b	434f54 <feof@plt+0x316b4>
  4346cc:	tbz	w21, #0, 434d1c <feof@plt+0x3147c>
  4346d0:	ldr	x8, [sp, #56]
  4346d4:	ldr	x10, [x23]
  4346d8:	ldr	x8, [x8]
  4346dc:	add	x0, x10, #0xcc
  4346e0:	ldrsw	x9, [x8, #24]
  4346e4:	tbz	w9, #31, 434bd0 <feof@plt+0x31330>
  4346e8:	add	w10, w9, #0x8
  4346ec:	cmn	w9, #0x8
  4346f0:	str	w10, [x8, #24]
  4346f4:	b.gt	434bd0 <feof@plt+0x31330>
  4346f8:	ldr	x8, [x8, #8]
  4346fc:	add	x9, x8, x9
  434700:	b	434bdc <feof@plt+0x3133c>
  434704:	ldr	x8, [sp, #56]
  434708:	ldr	x10, [x23]
  43470c:	ldr	x8, [x8]
  434710:	add	x0, x10, #0xcc
  434714:	ldrsw	x9, [x8, #24]
  434718:	tbz	w9, #31, 434938 <feof@plt+0x31098>
  43471c:	add	w10, w9, #0x8
  434720:	cmn	w9, #0x8
  434724:	str	w10, [x8, #24]
  434728:	b.gt	434938 <feof@plt+0x31098>
  43472c:	ldr	x8, [x8, #8]
  434730:	add	x9, x8, x9
  434734:	b	434944 <feof@plt+0x310a4>
  434738:	ldrb	w8, [x25]
  43473c:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  434740:	add	x9, x9, #0x4a2
  434744:	ldrh	w9, [x9, x8, lsl #1]
  434748:	tbnz	w9, #2, 434d6c <feof@plt+0x314cc>
  43474c:	cmp	w8, #0x2a
  434750:	b.ne	4352ac <feof@plt+0x31a0c>  // b.any
  434754:	ldrb	w8, [x25, #1]
  434758:	ldr	x11, [sp, #64]
  43475c:	cmp	w8, #0x73
  434760:	b.ne	4352c4 <feof@plt+0x31a24>  // b.any
  434764:	ldr	x8, [sp, #56]
  434768:	ldr	x27, [sp, #72]
  43476c:	ldr	x8, [x8]
  434770:	ldrsw	x9, [x8, #24]
  434774:	tbz	w9, #31, 434db8 <feof@plt+0x31518>
  434778:	add	w10, w9, #0x8
  43477c:	cmn	w9, #0x8
  434780:	str	w10, [x8, #24]
  434784:	b.gt	434db8 <feof@plt+0x31518>
  434788:	ldr	x8, [x8, #8]
  43478c:	add	x9, x8, x9
  434790:	b	434dc4 <feof@plt+0x31524>
  434794:	ldr	x8, [sp, #56]
  434798:	ldr	x8, [x8]
  43479c:	ldrsw	x9, [x8, #24]
  4347a0:	tbz	w9, #31, 43495c <feof@plt+0x310bc>
  4347a4:	add	w10, w9, #0x8
  4347a8:	cmn	w9, #0x8
  4347ac:	str	w10, [x8, #24]
  4347b0:	b.gt	43495c <feof@plt+0x310bc>
  4347b4:	ldr	x8, [x8, #8]
  4347b8:	mov	w26, w22
  4347bc:	add	x9, x8, x9
  4347c0:	b	43496c <feof@plt+0x310cc>
  4347c4:	ldr	x8, [sp, #56]
  4347c8:	ldrb	w10, [sp, #108]
  4347cc:	ldr	x8, [x8]
  4347d0:	ldrsw	x9, [x8, #24]
  4347d4:	cbz	w10, 434e4c <feof@plt+0x315ac>
  4347d8:	ldr	x27, [sp, #72]
  4347dc:	tbz	w9, #31, 434bf4 <feof@plt+0x31354>
  4347e0:	add	w10, w9, #0x8
  4347e4:	cmn	w9, #0x8
  4347e8:	str	w10, [x8, #24]
  4347ec:	b.gt	434bf4 <feof@plt+0x31354>
  4347f0:	ldr	x8, [x8, #8]
  4347f4:	add	x9, x8, x9
  4347f8:	b	434c00 <feof@plt+0x31360>
  4347fc:	ldr	x8, [sp, #56]
  434800:	ldr	x9, [x8]
  434804:	ldrb	w8, [x28, #67]
  434808:	ldrsw	x10, [x9, #24]
  43480c:	tbz	w10, #31, 434b70 <feof@plt+0x312d0>
  434810:	add	w11, w10, #0x8
  434814:	cmn	w10, #0x8
  434818:	str	w11, [x9, #24]
  43481c:	b.gt	434b70 <feof@plt+0x312d0>
  434820:	ldr	x9, [x9, #8]
  434824:	add	x10, x9, x10
  434828:	b	434b7c <feof@plt+0x312dc>
  43482c:	ldr	x8, [x28, #48]
  434830:	cbz	x8, 4352dc <feof@plt+0x31a3c>
  434834:	ldr	x9, [sp, #64]
  434838:	ldr	x1, [sp, #32]
  43483c:	and	w4, w21, #0x1
  434840:	and	w5, w19, #0x1
  434844:	and	w6, w26, #0x1
  434848:	add	x7, sp, #0x6c
  43484c:	mov	x0, x28
  434850:	mov	w3, w27
  434854:	str	x9, [sp]
  434858:	blr	x8
  43485c:	ldr	x27, [sp, #72]
  434860:	tbnz	w0, #0, 435148 <feof@plt+0x318a8>
  434864:	b	4352f4 <feof@plt+0x31a54>
  434868:	ldr	x9, [x8]
  43486c:	add	x10, x9, #0x8
  434870:	str	x10, [x8]
  434874:	ldr	d0, [x9]
  434878:	ldr	x27, [sp, #72]
  43487c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  434880:	add	x1, x1, #0x5ea
  434884:	bl	403340 <sprintf@plt>
  434888:	b	435128 <feof@plt+0x31888>
  43488c:	ldr	x9, [x8]
  434890:	add	x10, x9, #0x8
  434894:	str	x10, [x8]
  434898:	ldr	w1, [x9]
  43489c:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  4348a0:	add	x9, x9, #0x4a2
  4348a4:	ldr	x27, [sp, #72]
  4348a8:	and	x8, x1, #0xff
  4348ac:	ldrh	w8, [x9, x8, lsl #1]
  4348b0:	tbnz	w8, #4, 434d10 <feof@plt+0x31470>
  4348b4:	ldrb	w8, [sp, #108]
  4348b8:	cbz	w8, 434d10 <feof@plt+0x31470>
  4348bc:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  4348c0:	and	x8, x1, #0xff
  4348c4:	add	x9, x9, #0x4a2
  4348c8:	ldrh	w8, [x9, x8, lsl #1]
  4348cc:	strb	w1, [sp, #104]
  4348d0:	strb	wzr, [sp, #105]
  4348d4:	tbnz	w8, #4, 434eec <feof@plt+0x3164c>
  4348d8:	and	w2, w1, #0xff
  4348dc:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4348e0:	sub	x0, x29, #0x20
  4348e4:	add	x1, x1, #0x61f
  4348e8:	bl	403340 <sprintf@plt>
  4348ec:	sub	x8, x29, #0x20
  4348f0:	add	x2, x8, w0, sxtw
  4348f4:	sub	x1, x29, #0x20
  4348f8:	mov	x0, x28
  4348fc:	bl	435edc <feof@plt+0x3263c>
  434900:	ldr	x2, [sp, #16]
  434904:	mov	x1, x2
  434908:	b	434ef4 <feof@plt+0x31654>
  43490c:	ldr	x9, [x8]
  434910:	add	x10, x9, #0x8
  434914:	str	x10, [x8]
  434918:	ldr	x8, [x28, #8]
  43491c:	ldr	x27, [sp, #72]
  434920:	ldr	x2, [x9]
  434924:	add	x0, x8, #0xcc
  434928:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43492c:	add	x1, x1, #0x5d1
  434930:	bl	403340 <sprintf@plt>
  434934:	b	435128 <feof@plt+0x31888>
  434938:	ldr	x9, [x8]
  43493c:	add	x10, x9, #0x8
  434940:	str	x10, [x8]
  434944:	ldr	x2, [x9]
  434948:	ldr	x27, [sp, #72]
  43494c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  434950:	add	x1, x1, #0x5e3
  434954:	bl	403340 <sprintf@plt>
  434958:	b	435128 <feof@plt+0x31888>
  43495c:	ldr	x9, [x8]
  434960:	mov	w26, w22
  434964:	add	x10, x9, #0x8
  434968:	str	x10, [x8]
  43496c:	ldr	x8, [sp, #56]
  434970:	ldr	x22, [x9]
  434974:	ldr	x27, [sp, #72]
  434978:	ldr	x8, [x8]
  43497c:	ldrsw	x10, [x8, #24]
  434980:	tbz	w10, #31, 4349a8 <feof@plt+0x31108>
  434984:	add	w9, w10, #0x8
  434988:	cmn	w10, #0x8
  43498c:	str	w9, [x8, #24]
  434990:	b.gt	4349a8 <feof@plt+0x31108>
  434994:	ldr	x8, [x8, #8]
  434998:	add	x9, x8, x10
  43499c:	ldr	w25, [x9]
  4349a0:	cbnz	w25, 4349bc <feof@plt+0x3111c>
  4349a4:	b	434b68 <feof@plt+0x312c8>
  4349a8:	ldr	x9, [x8]
  4349ac:	add	x10, x9, #0x8
  4349b0:	str	x10, [x8]
  4349b4:	ldr	w25, [x9]
  4349b8:	cbz	w25, 434b68 <feof@plt+0x312c8>
  4349bc:	mov	x19, xzr
  4349c0:	sub	w21, w25, #0x1
  4349c4:	b	4349f4 <feof@plt+0x31154>
  4349c8:	add	x9, x8, #0x1
  4349cc:	str	x9, [x24, #24]
  4349d0:	mov	w9, #0x20                  	// #32
  4349d4:	strb	w9, [x8]
  4349d8:	ldr	x8, [x23]
  4349dc:	ldr	w9, [x8, #200]
  4349e0:	add	w9, w9, #0x1
  4349e4:	str	w9, [x8, #200]
  4349e8:	add	x19, x19, #0x1
  4349ec:	cmp	x25, x19
  4349f0:	b.eq	434b68 <feof@plt+0x312c8>  // b.none
  4349f4:	ldr	x8, [x28, #8]
  4349f8:	ldr	w2, [x22, x19, lsl #2]
  4349fc:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  434a00:	add	x1, x1, #0xb6c
  434a04:	add	x0, x8, #0xcc
  434a08:	bl	403340 <sprintf@plt>
  434a0c:	ldr	x8, [x28, #8]
  434a10:	add	x20, x8, #0xcc
  434a14:	mov	x0, x20
  434a18:	bl	4030b0 <strlen@plt>
  434a1c:	add	x2, x20, x0
  434a20:	mov	x0, x28
  434a24:	mov	x1, x20
  434a28:	bl	435edc <feof@plt+0x3263c>
  434a2c:	cmp	x19, x21
  434a30:	b.cs	4349e8 <feof@plt+0x31148>  // b.hs, b.nlast
  434a34:	ldr	w8, [x28, #40]
  434a38:	cmp	w8, #0x1
  434a3c:	b.lt	434a98 <feof@plt+0x311f8>  // b.tstop
  434a40:	ldr	x8, [x28, #8]
  434a44:	ldr	w9, [x28, #28]
  434a48:	ldr	w10, [x8, #200]
  434a4c:	cmp	w9, w10
  434a50:	b.gt	434a98 <feof@plt+0x311f8>
  434a54:	ldr	x24, [x8, #176]
  434a58:	ldp	x8, x9, [x24, #24]
  434a5c:	cmp	x9, x8
  434a60:	b.ne	434a74 <feof@plt+0x311d4>  // b.any
  434a64:	mov	w1, #0x1                   	// #1
  434a68:	mov	x0, x24
  434a6c:	bl	47bae8 <_obstack_newchunk@@Base>
  434a70:	ldr	x8, [x24, #24]
  434a74:	add	x9, x8, #0x1
  434a78:	str	x9, [x24, #24]
  434a7c:	mov	w9, #0xa                   	// #10
  434a80:	strb	w9, [x8]
  434a84:	ldr	x8, [x28, #8]
  434a88:	strb	wzr, [x28, #65]
  434a8c:	str	wzr, [x8, #200]
  434a90:	ldr	w8, [sp, #52]
  434a94:	tbnz	w8, #6, 434adc <feof@plt+0x3123c>
  434a98:	ldr	x8, [x23]
  434a9c:	ldr	x24, [x8, #176]
  434aa0:	ldp	x8, x9, [x24, #24]
  434aa4:	cmp	x9, x8
  434aa8:	b.ne	434abc <feof@plt+0x3121c>  // b.any
  434aac:	mov	w1, #0x1                   	// #1
  434ab0:	mov	x0, x24
  434ab4:	bl	47bae8 <_obstack_newchunk@@Base>
  434ab8:	ldr	x8, [x24, #24]
  434abc:	add	x9, x8, #0x1
  434ac0:	str	x9, [x24, #24]
  434ac4:	mov	w9, #0x2c                  	// #44
  434ac8:	strb	w9, [x8]
  434acc:	ldr	x8, [x23]
  434ad0:	ldr	w9, [x8, #200]
  434ad4:	add	w9, w9, #0x1
  434ad8:	str	w9, [x8, #200]
  434adc:	ldr	w8, [x28, #40]
  434ae0:	cmp	w8, #0x1
  434ae4:	b.lt	434b40 <feof@plt+0x312a0>  // b.tstop
  434ae8:	ldr	x8, [x28, #8]
  434aec:	ldr	w9, [x28, #28]
  434af0:	ldr	w10, [x8, #200]
  434af4:	cmp	w9, w10
  434af8:	b.gt	434b40 <feof@plt+0x312a0>
  434afc:	ldr	x24, [x8, #176]
  434b00:	ldp	x8, x9, [x24, #24]
  434b04:	cmp	x9, x8
  434b08:	b.ne	434b1c <feof@plt+0x3127c>  // b.any
  434b0c:	mov	w1, #0x1                   	// #1
  434b10:	mov	x0, x24
  434b14:	bl	47bae8 <_obstack_newchunk@@Base>
  434b18:	ldr	x8, [x24, #24]
  434b1c:	add	x9, x8, #0x1
  434b20:	str	x9, [x24, #24]
  434b24:	mov	w9, #0xa                   	// #10
  434b28:	strb	w9, [x8]
  434b2c:	ldr	x8, [x28, #8]
  434b30:	strb	wzr, [x28, #65]
  434b34:	str	wzr, [x8, #200]
  434b38:	ldr	w8, [sp, #40]
  434b3c:	tbnz	w8, #6, 4349e8 <feof@plt+0x31148>
  434b40:	ldr	x8, [x23]
  434b44:	ldr	x24, [x8, #176]
  434b48:	ldp	x8, x9, [x24, #24]
  434b4c:	cmp	x9, x8
  434b50:	b.ne	4349c8 <feof@plt+0x31128>  // b.any
  434b54:	mov	w1, #0x1                   	// #1
  434b58:	mov	x0, x24
  434b5c:	bl	47bae8 <_obstack_newchunk@@Base>
  434b60:	ldr	x8, [x24, #24]
  434b64:	b	4349c8 <feof@plt+0x31128>
  434b68:	mov	w22, w26
  434b6c:	b	435148 <feof@plt+0x318a8>
  434b70:	ldr	x10, [x9]
  434b74:	add	x11, x10, #0x8
  434b78:	str	x11, [x9]
  434b7c:	ldr	x20, [x10]
  434b80:	ldr	x27, [sp, #72]
  434b84:	cmp	w8, #0x0
  434b88:	cset	w24, ne  // ne = any
  434b8c:	mov	x0, x20
  434b90:	bl	4030b0 <strlen@plt>
  434b94:	mov	x2, x0
  434b98:	mov	w0, w24
  434b9c:	mov	x1, x20
  434ba0:	bl	42c4e0 <feof@plt+0x28c40>
  434ba4:	mov	x20, x0
  434ba8:	b	435134 <feof@plt+0x31894>
  434bac:	ldr	x9, [x8]
  434bb0:	add	x10, x9, #0x8
  434bb4:	str	x10, [x8]
  434bb8:	ldr	x2, [x9]
  434bbc:	ldr	x27, [sp, #72]
  434bc0:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  434bc4:	add	x1, x1, #0x5e6
  434bc8:	bl	403340 <sprintf@plt>
  434bcc:	b	435128 <feof@plt+0x31888>
  434bd0:	ldr	x9, [x8]
  434bd4:	add	x10, x9, #0x8
  434bd8:	str	x10, [x8]
  434bdc:	ldr	x2, [x9]
  434be0:	ldr	x27, [sp, #72]
  434be4:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  434be8:	add	x1, x1, #0x5da
  434bec:	bl	403340 <sprintf@plt>
  434bf0:	b	435128 <feof@plt+0x31888>
  434bf4:	ldr	x9, [x8]
  434bf8:	add	x10, x9, #0x8
  434bfc:	str	x10, [x8]
  434c00:	ldr	x25, [x9]
  434c04:	mov	x0, x25
  434c08:	bl	4030b0 <strlen@plt>
  434c0c:	cbz	x0, 434efc <feof@plt+0x3165c>
  434c10:	mov	x24, x0
  434c14:	mov	x1, x25
  434c18:	b	434c50 <feof@plt+0x313b0>
  434c1c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  434c20:	sub	x0, x29, #0x20
  434c24:	add	x1, x1, #0x61f
  434c28:	bl	403340 <sprintf@plt>
  434c2c:	sub	x8, x29, #0x20
  434c30:	add	x2, x8, w0, sxtw
  434c34:	sub	x1, x29, #0x20
  434c38:	mov	x0, x28
  434c3c:	bl	435edc <feof@plt+0x3263c>
  434c40:	add	x1, x25, #0x1
  434c44:	subs	x24, x24, #0x1
  434c48:	add	x25, x25, #0x1
  434c4c:	b.eq	434f00 <feof@plt+0x31660>  // b.none
  434c50:	ldrb	w2, [x25]
  434c54:	adrp	x8, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  434c58:	add	x8, x8, #0x4a2
  434c5c:	ldrh	w8, [x8, x2, lsl #1]
  434c60:	tbnz	w8, #4, 434c44 <feof@plt+0x313a4>
  434c64:	cmp	x1, x25
  434c68:	b.cs	434c1c <feof@plt+0x3137c>  // b.hs, b.nlast
  434c6c:	sub	x2, x25, #0x1
  434c70:	mov	x0, x28
  434c74:	bl	435edc <feof@plt+0x3263c>
  434c78:	ldrb	w2, [x25]
  434c7c:	b	434c1c <feof@plt+0x3137c>
  434c80:	cmp	w27, #0x2
  434c84:	b.eq	434f68 <feof@plt+0x316c8>  // b.none
  434c88:	cmp	w27, #0x1
  434c8c:	b.eq	4345b8 <feof@plt+0x30d18>  // b.none
  434c90:	cbnz	w27, 434d64 <feof@plt+0x314c4>
  434c94:	ldr	x8, [sp, #56]
  434c98:	ldr	x10, [x23]
  434c9c:	ldr	x8, [x8]
  434ca0:	add	x0, x10, #0xcc
  434ca4:	ldrsw	x9, [x8, #24]
  434ca8:	tbz	w9, #31, 43505c <feof@plt+0x317bc>
  434cac:	add	w10, w9, #0x8
  434cb0:	cmn	w9, #0x8
  434cb4:	str	w10, [x8, #24]
  434cb8:	b.gt	43505c <feof@plt+0x317bc>
  434cbc:	ldr	x8, [x8, #8]
  434cc0:	add	x9, x8, x9
  434cc4:	b	435068 <feof@plt+0x317c8>
  434cc8:	cmp	w27, #0x2
  434ccc:	b.eq	434fd0 <feof@plt+0x31730>  // b.none
  434cd0:	cmp	w27, #0x1
  434cd4:	b.eq	434f9c <feof@plt+0x316fc>  // b.none
  434cd8:	cbnz	w27, 434d64 <feof@plt+0x314c4>
  434cdc:	ldr	x8, [sp, #56]
  434ce0:	ldr	x10, [x23]
  434ce4:	ldr	x8, [x8]
  434ce8:	add	x0, x10, #0xcc
  434cec:	ldrsw	x9, [x8, #24]
  434cf0:	tbz	w9, #31, 4350c4 <feof@plt+0x31824>
  434cf4:	add	w10, w9, #0x8
  434cf8:	cmn	w9, #0x8
  434cfc:	str	w10, [x8, #24]
  434d00:	b.gt	4350c4 <feof@plt+0x31824>
  434d04:	ldr	x8, [x8, #8]
  434d08:	add	x9, x8, x9
  434d0c:	b	4350d0 <feof@plt+0x31830>
  434d10:	mov	x0, x28
  434d14:	bl	433718 <feof@plt+0x2fe78>
  434d18:	b	435148 <feof@plt+0x318a8>
  434d1c:	cmp	w27, #0x2
  434d20:	b.eq	435004 <feof@plt+0x31764>  // b.none
  434d24:	cmp	w27, #0x1
  434d28:	b.eq	4346d0 <feof@plt+0x30e30>  // b.none
  434d2c:	cbnz	w27, 434d64 <feof@plt+0x314c4>
  434d30:	ldr	x8, [sp, #56]
  434d34:	ldr	x10, [x23]
  434d38:	ldr	x8, [x8]
  434d3c:	add	x0, x10, #0xcc
  434d40:	ldrsw	x9, [x8, #24]
  434d44:	tbz	w9, #31, 435108 <feof@plt+0x31868>
  434d48:	add	w10, w9, #0x8
  434d4c:	cmn	w9, #0x8
  434d50:	str	w10, [x8, #24]
  434d54:	b.gt	435108 <feof@plt+0x31868>
  434d58:	ldr	x8, [x8, #8]
  434d5c:	add	x9, x8, x9
  434d60:	b	435114 <feof@plt+0x31874>
  434d64:	ldr	x27, [sp, #72]
  434d68:	b	435148 <feof@plt+0x318a8>
  434d6c:	sub	x1, x29, #0x20
  434d70:	mov	w2, #0xa                   	// #10
  434d74:	mov	x0, x25
  434d78:	bl	4035f0 <strtoul@plt>
  434d7c:	ldur	x8, [x29, #-32]
  434d80:	ldrb	w8, [x8]
  434d84:	cmp	w8, #0x73
  434d88:	b.ne	43530c <feof@plt+0x31a6c>  // b.any
  434d8c:	ldr	x27, [sp, #72]
  434d90:	b	434ddc <feof@plt+0x3153c>
  434d94:	ldr	x9, [x8]
  434d98:	add	x10, x9, #0x8
  434d9c:	str	x10, [x8]
  434da0:	ldr	x2, [x9]
  434da4:	ldr	x27, [sp, #72]
  434da8:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  434dac:	add	x1, x1, #0x881
  434db0:	bl	403340 <sprintf@plt>
  434db4:	b	435128 <feof@plt+0x31888>
  434db8:	ldr	x9, [x8]
  434dbc:	add	x10, x9, #0x8
  434dc0:	str	x10, [x8]
  434dc4:	add	w22, w22, #0x1
  434dc8:	add	x8, sp, #0x70
  434dcc:	ldr	x8, [x8, w22, uxtw #3]
  434dd0:	cmp	x11, x8
  434dd4:	b.ne	435324 <feof@plt+0x31a84>  // b.any
  434dd8:	ldr	w0, [x9]
  434ddc:	ldr	x8, [sp, #56]
  434de0:	ldr	x8, [x8]
  434de4:	ldrsw	x9, [x8, #24]
  434de8:	tbz	w9, #31, 434e18 <feof@plt+0x31578>
  434dec:	add	w10, w9, #0x8
  434df0:	cmn	w9, #0x8
  434df4:	str	w10, [x8, #24]
  434df8:	b.gt	434e18 <feof@plt+0x31578>
  434dfc:	ldr	x8, [x8, #8]
  434e00:	add	x9, x8, x9
  434e04:	ldr	x24, [x9]
  434e08:	tbz	w0, #31, 434e2c <feof@plt+0x3158c>
  434e0c:	mov	x0, x24
  434e10:	bl	4030b0 <strlen@plt>
  434e14:	b	434e38 <feof@plt+0x31598>
  434e18:	ldr	x9, [x8]
  434e1c:	add	x10, x9, #0x8
  434e20:	str	x10, [x8]
  434e24:	ldr	x24, [x9]
  434e28:	tbnz	w0, #31, 434e0c <feof@plt+0x3156c>
  434e2c:	mov	w1, w0
  434e30:	mov	x0, x24
  434e34:	bl	4037e0 <strnlen@plt>
  434e38:	add	x2, x24, x0
  434e3c:	mov	x0, x28
  434e40:	mov	x1, x24
  434e44:	bl	435530 <feof@plt+0x31c90>
  434e48:	b	435148 <feof@plt+0x318a8>
  434e4c:	ldr	x27, [sp, #72]
  434e50:	tbz	w9, #31, 434e70 <feof@plt+0x315d0>
  434e54:	add	w10, w9, #0x8
  434e58:	cmn	w9, #0x8
  434e5c:	str	w10, [x8, #24]
  434e60:	b.gt	434e70 <feof@plt+0x315d0>
  434e64:	ldr	x8, [x8, #8]
  434e68:	add	x9, x8, x9
  434e6c:	b	434e7c <feof@plt+0x315dc>
  434e70:	ldr	x9, [x8]
  434e74:	add	x10, x9, #0x8
  434e78:	str	x10, [x8]
  434e7c:	ldr	x20, [x9]
  434e80:	b	435130 <feof@plt+0x31890>
  434e84:	ldr	x8, [sp, #56]
  434e88:	ldr	x10, [x23]
  434e8c:	ldr	x8, [x8]
  434e90:	add	x0, x10, #0xcc
  434e94:	ldrsw	x9, [x8, #24]
  434e98:	tbz	w9, #31, 434f0c <feof@plt+0x3166c>
  434e9c:	add	w10, w9, #0x8
  434ea0:	cmn	w9, #0x8
  434ea4:	str	w10, [x8, #24]
  434ea8:	b.gt	434f0c <feof@plt+0x3166c>
  434eac:	ldr	x8, [x8, #8]
  434eb0:	add	x9, x8, x9
  434eb4:	b	434f18 <feof@plt+0x31678>
  434eb8:	ldr	x8, [sp, #56]
  434ebc:	ldr	x10, [x23]
  434ec0:	ldr	x8, [x8]
  434ec4:	add	x0, x10, #0xcc
  434ec8:	ldrsw	x9, [x8, #24]
  434ecc:	tbz	w9, #31, 434f24 <feof@plt+0x31684>
  434ed0:	add	w10, w9, #0x8
  434ed4:	cmn	w9, #0x8
  434ed8:	str	w10, [x8, #24]
  434edc:	b.gt	434f24 <feof@plt+0x31684>
  434ee0:	ldr	x8, [x8, #8]
  434ee4:	add	x9, x8, x9
  434ee8:	b	434f30 <feof@plt+0x31690>
  434eec:	ldr	x2, [sp, #16]
  434ef0:	add	x1, sp, #0x68
  434ef4:	mov	x0, x28
  434ef8:	b	435144 <feof@plt+0x318a4>
  434efc:	mov	x1, x25
  434f00:	mov	x0, x28
  434f04:	mov	x2, x25
  434f08:	b	435144 <feof@plt+0x318a4>
  434f0c:	ldr	x9, [x8]
  434f10:	add	x10, x9, #0x8
  434f14:	str	x10, [x8]
  434f18:	ldr	x27, [sp, #72]
  434f1c:	ldr	x2, [x9]
  434f20:	b	434928 <feof@plt+0x31088>
  434f24:	ldr	x9, [x8]
  434f28:	add	x10, x9, #0x8
  434f2c:	str	x10, [x8]
  434f30:	ldr	x2, [x9]
  434f34:	ldr	x27, [sp, #72]
  434f38:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  434f3c:	add	x1, x1, #0x5d5
  434f40:	bl	403340 <sprintf@plt>
  434f44:	b	435128 <feof@plt+0x31888>
  434f48:	ldr	x9, [x8]
  434f4c:	add	x10, x9, #0x8
  434f50:	str	x10, [x8]
  434f54:	ldr	x27, [sp, #72]
  434f58:	ldr	w2, [x9]
  434f5c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  434f60:	add	x1, x1, #0xadf
  434f64:	b	435124 <feof@plt+0x31884>
  434f68:	ldr	x8, [sp, #56]
  434f6c:	ldr	x10, [x23]
  434f70:	ldr	x8, [x8]
  434f74:	add	x0, x10, #0xcc
  434f78:	ldrsw	x9, [x8, #24]
  434f7c:	tbz	w9, #31, 435038 <feof@plt+0x31798>
  434f80:	add	w10, w9, #0x8
  434f84:	cmn	w9, #0x8
  434f88:	str	w10, [x8, #24]
  434f8c:	b.gt	435038 <feof@plt+0x31798>
  434f90:	ldr	x8, [x8, #8]
  434f94:	add	x9, x8, x9
  434f98:	b	435044 <feof@plt+0x317a4>
  434f9c:	ldr	x8, [sp, #56]
  434fa0:	ldr	x10, [x23]
  434fa4:	ldr	x8, [x8]
  434fa8:	add	x0, x10, #0xcc
  434fac:	ldrsw	x9, [x8, #24]
  434fb0:	tbz	w9, #31, 43507c <feof@plt+0x317dc>
  434fb4:	add	w10, w9, #0x8
  434fb8:	cmn	w9, #0x8
  434fbc:	str	w10, [x8, #24]
  434fc0:	b.gt	43507c <feof@plt+0x317dc>
  434fc4:	ldr	x8, [x8, #8]
  434fc8:	add	x9, x8, x9
  434fcc:	b	435088 <feof@plt+0x317e8>
  434fd0:	ldr	x8, [sp, #56]
  434fd4:	ldr	x10, [x23]
  434fd8:	ldr	x8, [x8]
  434fdc:	add	x0, x10, #0xcc
  434fe0:	ldrsw	x9, [x8, #24]
  434fe4:	tbz	w9, #31, 4350a0 <feof@plt+0x31800>
  434fe8:	add	w10, w9, #0x8
  434fec:	cmn	w9, #0x8
  434ff0:	str	w10, [x8, #24]
  434ff4:	b.gt	4350a0 <feof@plt+0x31800>
  434ff8:	ldr	x8, [x8, #8]
  434ffc:	add	x9, x8, x9
  435000:	b	4350ac <feof@plt+0x3180c>
  435004:	ldr	x8, [sp, #56]
  435008:	ldr	x10, [x23]
  43500c:	ldr	x8, [x8]
  435010:	add	x0, x10, #0xcc
  435014:	ldrsw	x9, [x8, #24]
  435018:	tbz	w9, #31, 4350e4 <feof@plt+0x31844>
  43501c:	add	w10, w9, #0x8
  435020:	cmn	w9, #0x8
  435024:	str	w10, [x8, #24]
  435028:	b.gt	4350e4 <feof@plt+0x31844>
  43502c:	ldr	x8, [x8, #8]
  435030:	add	x9, x8, x9
  435034:	b	4350f0 <feof@plt+0x31850>
  435038:	ldr	x9, [x8]
  43503c:	add	x10, x9, #0x8
  435040:	str	x10, [x8]
  435044:	ldr	x2, [x9]
  435048:	ldr	x27, [sp, #72]
  43504c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  435050:	add	x1, x1, #0x9e0
  435054:	bl	403340 <sprintf@plt>
  435058:	b	435128 <feof@plt+0x31888>
  43505c:	ldr	x9, [x8]
  435060:	add	x10, x9, #0x8
  435064:	str	x10, [x8]
  435068:	ldr	x27, [sp, #72]
  43506c:	ldr	w2, [x9]
  435070:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435074:	add	x1, x1, #0xc28
  435078:	b	435124 <feof@plt+0x31884>
  43507c:	ldr	x9, [x8]
  435080:	add	x10, x9, #0x8
  435084:	str	x10, [x8]
  435088:	ldr	x2, [x9]
  43508c:	ldr	x27, [sp, #72]
  435090:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435094:	add	x1, x1, #0x5f0
  435098:	bl	403340 <sprintf@plt>
  43509c:	b	435128 <feof@plt+0x31888>
  4350a0:	ldr	x9, [x8]
  4350a4:	add	x10, x9, #0x8
  4350a8:	str	x10, [x8]
  4350ac:	ldr	x2, [x9]
  4350b0:	ldr	x27, [sp, #72]
  4350b4:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4350b8:	add	x1, x1, #0x5f4
  4350bc:	bl	403340 <sprintf@plt>
  4350c0:	b	435128 <feof@plt+0x31888>
  4350c4:	ldr	x9, [x8]
  4350c8:	add	x10, x9, #0x8
  4350cc:	str	x10, [x8]
  4350d0:	ldr	x27, [sp, #72]
  4350d4:	ldr	w2, [x9]
  4350d8:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4350dc:	add	x1, x1, #0x5ed
  4350e0:	b	435124 <feof@plt+0x31884>
  4350e4:	ldr	x9, [x8]
  4350e8:	add	x10, x9, #0x8
  4350ec:	str	x10, [x8]
  4350f0:	ldr	x2, [x9]
  4350f4:	ldr	x27, [sp, #72]
  4350f8:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4350fc:	add	x1, x1, #0x5de
  435100:	bl	403340 <sprintf@plt>
  435104:	b	435128 <feof@plt+0x31888>
  435108:	ldr	x9, [x8]
  43510c:	add	x10, x9, #0x8
  435110:	str	x10, [x8]
  435114:	ldr	x27, [sp, #72]
  435118:	ldr	w2, [x9]
  43511c:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  435120:	add	x1, x1, #0xf19
  435124:	bl	403340 <sprintf@plt>
  435128:	ldr	x8, [x28, #8]
  43512c:	add	x20, x8, #0xcc
  435130:	mov	x0, x20
  435134:	bl	4030b0 <strlen@plt>
  435138:	add	x2, x20, x0
  43513c:	mov	x0, x28
  435140:	mov	x1, x20
  435144:	bl	435edc <feof@plt+0x3263c>
  435148:	ldrb	w8, [sp, #108]
  43514c:	cbz	w8, 435190 <feof@plt+0x318f0>
  435150:	ldrb	w0, [x28, #67]
  435154:	bl	42c564 <feof@plt+0x28cc4>
  435158:	mov	x20, x0
  43515c:	bl	4030b0 <strlen@plt>
  435160:	add	x2, x20, x0
  435164:	mov	x0, x28
  435168:	mov	x1, x20
  43516c:	bl	435edc <feof@plt+0x3263c>
  435170:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  435174:	ldr	x20, [x8, #1024]
  435178:	mov	x0, x20
  43517c:	bl	4030b0 <strlen@plt>
  435180:	add	x2, x20, x0
  435184:	mov	x0, x28
  435188:	mov	x1, x20
  43518c:	bl	435edc <feof@plt+0x3263c>
  435190:	ldp	x8, x9, [x27, #112]
  435194:	cmp	x9, x8
  435198:	b.ne	4343c0 <feof@plt+0x30b20>  // b.any
  43519c:	ldr	x0, [sp, #88]
  4351a0:	mov	w1, #0x1                   	// #1
  4351a4:	bl	47bae8 <_obstack_newchunk@@Base>
  4351a8:	ldr	x8, [sp, #96]
  4351ac:	ldr	x8, [x8]
  4351b0:	b	4343c0 <feof@plt+0x30b20>
  4351b4:	ldr	x0, [x28, #56]
  4351b8:	cbz	x0, 4351cc <feof@plt+0x3192c>
  4351bc:	ldr	x8, [x0]
  4351c0:	mov	x1, x28
  4351c4:	ldr	x8, [x8, #16]
  4351c8:	blr	x8
  4351cc:	ldr	x8, [sp, #24]
  4351d0:	str	x27, [x27, #176]
  4351d4:	str	wzr, [x27, #200]
  4351d8:	strb	wzr, [x28, #64]
  4351dc:	stur	x8, [x28, #36]
  4351e0:	str	wzr, [x28, #32]
  4351e4:	ldp	x20, x19, [sp, #464]
  4351e8:	ldp	x22, x21, [sp, #448]
  4351ec:	ldp	x24, x23, [sp, #432]
  4351f0:	ldp	x26, x25, [sp, #416]
  4351f4:	ldp	x28, x27, [sp, #400]
  4351f8:	ldp	x29, x30, [sp, #384]
  4351fc:	add	sp, sp, #0x1e0
  435200:	ret
  435204:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435208:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43520c:	add	x0, x0, #0x583
  435210:	add	x2, x2, #0x5c1
  435214:	mov	w1, #0x4c0                 	// #1216
  435218:	bl	429434 <feof@plt+0x25b94>
  43521c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435220:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435224:	add	x0, x0, #0x583
  435228:	add	x2, x2, #0x5c1
  43522c:	mov	w1, #0x4c5                 	// #1221
  435230:	bl	429434 <feof@plt+0x25b94>
  435234:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435238:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43523c:	add	x0, x0, #0x583
  435240:	add	x2, x2, #0x5c1
  435244:	mov	w1, #0x4ca                 	// #1226
  435248:	bl	429434 <feof@plt+0x25b94>
  43524c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435250:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435254:	add	x0, x0, #0x583
  435258:	add	x2, x2, #0x5c1
  43525c:	mov	w1, #0x4d5                 	// #1237
  435260:	bl	429434 <feof@plt+0x25b94>
  435264:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435268:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43526c:	add	x0, x0, #0x583
  435270:	add	x2, x2, #0x5c1
  435274:	mov	w1, #0x4cf                 	// #1231
  435278:	bl	429434 <feof@plt+0x25b94>
  43527c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435280:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435284:	add	x0, x0, #0x583
  435288:	add	x2, x2, #0x5c1
  43528c:	mov	w1, #0x4dc                 	// #1244
  435290:	bl	429434 <feof@plt+0x25b94>
  435294:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435298:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43529c:	add	x0, x0, #0x583
  4352a0:	add	x2, x2, #0x5c1
  4352a4:	mov	w1, #0x41e                 	// #1054
  4352a8:	bl	429434 <feof@plt+0x25b94>
  4352ac:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4352b0:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4352b4:	add	x0, x0, #0x583
  4352b8:	add	x2, x2, #0x5c1
  4352bc:	mov	w1, #0x54f                 	// #1359
  4352c0:	bl	429434 <feof@plt+0x25b94>
  4352c4:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4352c8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4352cc:	add	x0, x0, #0x583
  4352d0:	add	x2, x2, #0x5c1
  4352d4:	mov	w1, #0x551                 	// #1361
  4352d8:	bl	429434 <feof@plt+0x25b94>
  4352dc:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4352e0:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4352e4:	add	x0, x0, #0x583
  4352e8:	add	x2, x2, #0x5c1
  4352ec:	mov	w1, #0x56d                 	// #1389
  4352f0:	bl	429434 <feof@plt+0x25b94>
  4352f4:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4352f8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4352fc:	add	x0, x0, #0x583
  435300:	add	x2, x2, #0x5c1
  435304:	mov	w1, #0x571                 	// #1393
  435308:	bl	429434 <feof@plt+0x25b94>
  43530c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435310:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435314:	add	x0, x0, #0x583
  435318:	add	x2, x2, #0x5c1
  43531c:	mov	w1, #0x54b                 	// #1355
  435320:	bl	429434 <feof@plt+0x25b94>
  435324:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435328:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43532c:	add	x0, x0, #0x583
  435330:	add	x2, x2, #0x5c1
  435334:	mov	w1, #0x555                 	// #1365
  435338:	bl	429434 <feof@plt+0x25b94>
  43533c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435340:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435344:	add	x0, x0, #0x583
  435348:	add	x2, x2, #0x5c1
  43534c:	mov	w1, #0x4a4                 	// #1188
  435350:	bl	429434 <feof@plt+0x25b94>
  435354:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435358:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43535c:	add	x0, x0, #0x583
  435360:	add	x2, x2, #0x5c1
  435364:	mov	w1, #0x450                 	// #1104
  435368:	bl	429434 <feof@plt+0x25b94>
  43536c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435370:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435374:	add	x0, x0, #0x583
  435378:	add	x2, x2, #0x5c1
  43537c:	mov	w1, #0x464                 	// #1124
  435380:	bl	429434 <feof@plt+0x25b94>
  435384:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435388:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43538c:	add	x0, x0, #0x583
  435390:	add	x2, x2, #0x5c1
  435394:	mov	w1, #0x45a                 	// #1114
  435398:	bl	429434 <feof@plt+0x25b94>
  43539c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4353a0:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4353a4:	add	x0, x0, #0x583
  4353a8:	add	x2, x2, #0x5c1
  4353ac:	mov	w1, #0x45e                 	// #1118
  4353b0:	bl	429434 <feof@plt+0x25b94>
  4353b4:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4353b8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4353bc:	add	x0, x0, #0x583
  4353c0:	add	x2, x2, #0x5c1
  4353c4:	mov	w1, #0x466                 	// #1126
  4353c8:	bl	429434 <feof@plt+0x25b94>
  4353cc:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4353d0:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4353d4:	add	x0, x0, #0x583
  4353d8:	add	x2, x2, #0x5c1
  4353dc:	mov	w1, #0x467                 	// #1127
  4353e0:	bl	429434 <feof@plt+0x25b94>
  4353e4:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4353e8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4353ec:	add	x0, x0, #0x583
  4353f0:	add	x2, x2, #0x5c1
  4353f4:	mov	w1, #0x480                 	// #1152
  4353f8:	bl	429434 <feof@plt+0x25b94>
  4353fc:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435400:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435404:	add	x0, x0, #0x583
  435408:	add	x2, x2, #0x5c1
  43540c:	mov	w1, #0x492                 	// #1170
  435410:	bl	429434 <feof@plt+0x25b94>
  435414:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435418:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43541c:	add	x0, x0, #0x583
  435420:	add	x2, x2, #0x5c1
  435424:	mov	w1, #0x47c                 	// #1148
  435428:	bl	429434 <feof@plt+0x25b94>
  43542c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435430:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435434:	add	x0, x0, #0x583
  435438:	add	x2, x2, #0x5c1
  43543c:	mov	w1, #0x489                 	// #1161
  435440:	bl	429434 <feof@plt+0x25b94>
  435444:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435448:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43544c:	add	x0, x0, #0x583
  435450:	add	x2, x2, #0x5c1
  435454:	mov	w1, #0x48a                 	// #1162
  435458:	bl	429434 <feof@plt+0x25b94>
  43545c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435460:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435464:	add	x0, x0, #0x583
  435468:	add	x2, x2, #0x5c1
  43546c:	mov	w1, #0x48b                 	// #1163
  435470:	bl	429434 <feof@plt+0x25b94>
  435474:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435478:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43547c:	add	x0, x0, #0x583
  435480:	add	x2, x2, #0x5c1
  435484:	mov	w1, #0x496                 	// #1174
  435488:	bl	429434 <feof@plt+0x25b94>
  43548c:	stp	x29, x30, [sp, #-48]!
  435490:	str	x21, [sp, #16]
  435494:	stp	x20, x19, [sp, #32]
  435498:	mov	x29, sp
  43549c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4354a0:	ldr	x20, [x8, #1016]
  4354a4:	mov	x21, x0
  4354a8:	mov	w19, w1
  4354ac:	mov	x0, x20
  4354b0:	bl	4030b0 <strlen@plt>
  4354b4:	add	x2, x20, x0
  4354b8:	mov	x0, x21
  4354bc:	mov	x1, x20
  4354c0:	bl	435edc <feof@plt+0x3263c>
  4354c4:	adrp	x1, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  4354c8:	and	w0, w19, #0x1
  4354cc:	add	x1, x1, #0x601
  4354d0:	mov	w2, #0x5                   	// #5
  4354d4:	bl	42c4e0 <feof@plt+0x28c40>
  4354d8:	mov	x19, x0
  4354dc:	bl	4030b0 <strlen@plt>
  4354e0:	add	x2, x19, x0
  4354e4:	mov	x0, x21
  4354e8:	mov	x1, x19
  4354ec:	ldp	x20, x19, [sp, #32]
  4354f0:	ldr	x21, [sp, #16]
  4354f4:	ldp	x29, x30, [sp], #48
  4354f8:	b	435edc <feof@plt+0x3263c>
  4354fc:	stp	x29, x30, [sp, #-32]!
  435500:	stp	x20, x19, [sp, #16]
  435504:	mov	x29, sp
  435508:	mov	x20, x0
  43550c:	mov	x0, x1
  435510:	mov	x19, x1
  435514:	bl	4030b0 <strlen@plt>
  435518:	add	x2, x19, x0
  43551c:	mov	x0, x20
  435520:	mov	x1, x19
  435524:	ldp	x20, x19, [sp, #16]
  435528:	ldp	x29, x30, [sp], #32
  43552c:	b	435edc <feof@plt+0x3263c>
  435530:	stp	x29, x30, [sp, #-64]!
  435534:	str	x23, [sp, #16]
  435538:	stp	x22, x21, [sp, #32]
  43553c:	stp	x20, x19, [sp, #48]
  435540:	mov	x29, sp
  435544:	ldr	x8, [x0, #8]
  435548:	mov	x20, x2
  43554c:	mov	x21, x0
  435550:	mov	x19, x1
  435554:	ldr	w8, [x8, #200]
  435558:	cbz	w8, 4355f4 <feof@plt+0x31d54>
  43555c:	ldr	x22, [x21, #8]
  435560:	sub	x23, x20, x19
  435564:	sxtw	x20, w23
  435568:	ldr	x21, [x22, #176]
  43556c:	ldp	x0, x8, [x21, #24]
  435570:	sub	x8, x8, x0
  435574:	cmp	x8, x20
  435578:	b.cs	43558c <feof@plt+0x31cec>  // b.hs, b.nlast
  43557c:	mov	x0, x21
  435580:	mov	x1, x20
  435584:	bl	47bae8 <_obstack_newchunk@@Base>
  435588:	ldr	x0, [x21, #24]
  43558c:	mov	x1, x19
  435590:	mov	x2, x20
  435594:	bl	402fc0 <memcpy@plt>
  435598:	ldr	x8, [x21, #24]
  43559c:	cmp	w23, #0x1
  4355a0:	add	x8, x8, x20
  4355a4:	str	x8, [x21, #24]
  4355a8:	b.lt	4355e0 <feof@plt+0x31d40>  // b.tstop
  4355ac:	and	x8, x23, #0xffffffff
  4355b0:	b	4355cc <feof@plt+0x31d2c>
  4355b4:	ldr	w9, [x22, #200]
  4355b8:	add	w9, w9, #0x1
  4355bc:	subs	x8, x8, #0x1
  4355c0:	add	x19, x19, #0x1
  4355c4:	str	w9, [x22, #200]
  4355c8:	b.eq	4355e0 <feof@plt+0x31d40>  // b.none
  4355cc:	ldrb	w9, [x19]
  4355d0:	cmp	w9, #0xa
  4355d4:	b.ne	4355b4 <feof@plt+0x31d14>  // b.any
  4355d8:	mov	w9, wzr
  4355dc:	b	4355bc <feof@plt+0x31d1c>
  4355e0:	ldp	x20, x19, [sp, #48]
  4355e4:	ldp	x22, x21, [sp, #32]
  4355e8:	ldr	x23, [sp, #16]
  4355ec:	ldp	x29, x30, [sp], #64
  4355f0:	ret
  4355f4:	mov	x0, x21
  4355f8:	bl	435a2c <feof@plt+0x3218c>
  4355fc:	ldr	w8, [x21, #40]
  435600:	cmp	w8, #0x1
  435604:	b.lt	43555c <feof@plt+0x31cbc>  // b.tstop
  435608:	cmp	x19, x20
  43560c:	b.eq	43555c <feof@plt+0x31cbc>  // b.none
  435610:	ldrb	w8, [x19]
  435614:	cmp	w8, #0x20
  435618:	b.ne	43555c <feof@plt+0x31cbc>  // b.any
  43561c:	add	x19, x19, #0x1
  435620:	cmp	x20, x19
  435624:	b.ne	435610 <feof@plt+0x31d70>  // b.any
  435628:	mov	x19, x20
  43562c:	b	43555c <feof@plt+0x31cbc>
  435630:	stp	x29, x30, [sp, #-32]!
  435634:	stp	x20, x19, [sp, #16]
  435638:	mov	x29, sp
  43563c:	mov	x19, x0
  435640:	and	w0, w1, #0x1
  435644:	bl	42c564 <feof@plt+0x28cc4>
  435648:	mov	x20, x0
  43564c:	bl	4030b0 <strlen@plt>
  435650:	add	x2, x20, x0
  435654:	mov	x0, x19
  435658:	mov	x1, x20
  43565c:	bl	435edc <feof@plt+0x3263c>
  435660:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  435664:	ldr	x20, [x8, #1024]
  435668:	mov	x0, x20
  43566c:	bl	4030b0 <strlen@plt>
  435670:	add	x2, x20, x0
  435674:	mov	x0, x19
  435678:	mov	x1, x20
  43567c:	ldp	x20, x19, [sp, #16]
  435680:	ldp	x29, x30, [sp], #32
  435684:	b	435edc <feof@plt+0x3263c>
  435688:	stp	x29, x30, [sp, #-64]!
  43568c:	str	x23, [sp, #16]
  435690:	stp	x22, x21, [sp, #32]
  435694:	stp	x20, x19, [sp, #48]
  435698:	mov	x29, sp
  43569c:	ldr	x22, [x0, #8]
  4356a0:	ldr	x8, [x22, #176]
  4356a4:	cmp	x8, x22
  4356a8:	b.ne	435744 <feof@plt+0x31ea4>  // b.any
  4356ac:	ldr	w8, [x22, #200]
  4356b0:	cbnz	w8, 43575c <feof@plt+0x31ebc>
  4356b4:	ldr	x19, [x22, #184]
  4356b8:	ldr	x21, [x19, #8]
  4356bc:	cbz	x21, 4356f0 <feof@plt+0x31e50>
  4356c0:	mov	x20, x0
  4356c4:	mov	w23, #0x1                   	// #1
  4356c8:	mov	x0, x21
  4356cc:	bl	4030b0 <strlen@plt>
  4356d0:	add	x2, x21, x0
  4356d4:	mov	x0, x20
  4356d8:	mov	x1, x21
  4356dc:	bl	435edc <feof@plt+0x3263c>
  4356e0:	add	x8, x19, w23, uxtw #3
  4356e4:	ldr	x21, [x8, #8]
  4356e8:	add	w23, w23, #0x1
  4356ec:	cbnz	x21, 4356c8 <feof@plt+0x31e28>
  4356f0:	ldr	x8, [x22, #96]
  4356f4:	ldr	x9, [x19]
  4356f8:	cmp	x8, x19
  4356fc:	str	x9, [x22, #184]
  435700:	b.cs	435728 <feof@plt+0x31e88>  // b.hs, b.nlast
  435704:	ldr	x8, [x22, #120]
  435708:	cmp	x8, x19
  43570c:	b.ls	435728 <feof@plt+0x31e88>  // b.plast
  435710:	stp	x19, x19, [x22, #104]
  435714:	ldp	x20, x19, [sp, #48]
  435718:	ldp	x22, x21, [sp, #32]
  43571c:	ldr	x23, [sp, #16]
  435720:	ldp	x29, x30, [sp], #64
  435724:	ret
  435728:	add	x0, x22, #0x58
  43572c:	mov	x1, x19
  435730:	ldp	x20, x19, [sp, #48]
  435734:	ldp	x22, x21, [sp, #32]
  435738:	ldr	x23, [sp, #16]
  43573c:	ldp	x29, x30, [sp], #64
  435740:	b	47bc70 <_obstack_free@@Base>
  435744:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435748:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43574c:	add	x0, x0, #0x583
  435750:	add	x2, x2, #0x5f9
  435754:	mov	w1, #0x595                 	// #1429
  435758:	bl	429434 <feof@plt+0x25b94>
  43575c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435760:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435764:	add	x0, x0, #0x583
  435768:	add	x2, x2, #0x5f9
  43576c:	mov	w1, #0x596                 	// #1430
  435770:	bl	429434 <feof@plt+0x25b94>
  435774:	stp	x29, x30, [sp, #-32]!
  435778:	stp	x20, x19, [sp, #16]
  43577c:	mov	x29, sp
  435780:	adrp	x8, 48d000 <_obstack_memory_used@@Base+0x112fc>
  435784:	ldr	d0, [x8, #3576]
  435788:	ldur	x20, [x0, #36]
  43578c:	mov	x19, x0
  435790:	stur	d0, [x0, #36]
  435794:	bl	433b7c <feof@plt+0x302dc>
  435798:	mov	x0, x19
  43579c:	bl	435688 <feof@plt+0x31de8>
  4357a0:	stur	x20, [x19, #36]
  4357a4:	ldp	x20, x19, [sp, #16]
  4357a8:	ldp	x29, x30, [sp], #32
  4357ac:	ret
  4357b0:	stp	x29, x30, [sp, #-48]!
  4357b4:	str	x21, [sp, #16]
  4357b8:	stp	x20, x19, [sp, #32]
  4357bc:	mov	x29, sp
  4357c0:	ldr	x21, [x0, #8]
  4357c4:	strb	wzr, [x0, #64]
  4357c8:	str	wzr, [x0, #32]
  4357cc:	ldrb	w8, [x21, #332]
  4357d0:	cbz	w8, 435864 <feof@plt+0x31fc4>
  4357d4:	ldr	x20, [x21, #176]
  4357d8:	mov	x19, x0
  4357dc:	ldp	x8, x9, [x20, #24]
  4357e0:	cmp	x9, x8
  4357e4:	b.ne	4357f8 <feof@plt+0x31f58>  // b.any
  4357e8:	mov	w1, #0x1                   	// #1
  4357ec:	mov	x0, x20
  4357f0:	bl	47bae8 <_obstack_newchunk@@Base>
  4357f4:	ldr	x8, [x20, #24]
  4357f8:	add	x9, x8, #0x1
  4357fc:	str	x9, [x20, #24]
  435800:	strb	wzr, [x8]
  435804:	ldr	x8, [x21, #176]
  435808:	ldr	x9, [x19, #8]
  43580c:	ldr	x0, [x8, #16]
  435810:	ldr	x1, [x9, #192]
  435814:	bl	402fa0 <fputs@plt>
  435818:	ldr	x8, [x19, #8]
  43581c:	ldr	x0, [x8, #176]
  435820:	ldp	x8, x1, [x0, #8]
  435824:	cmp	x1, x8
  435828:	b.ls	435840 <feof@plt+0x31fa0>  // b.plast
  43582c:	ldr	x8, [x0, #32]
  435830:	cmp	x1, x8
  435834:	b.cs	435840 <feof@plt+0x31fa0>  // b.hs, b.nlast
  435838:	str	x1, [x0, #24]
  43583c:	b	435844 <feof@plt+0x31fa4>
  435840:	bl	47bc70 <_obstack_free@@Base>
  435844:	ldr	x8, [x19, #8]
  435848:	ldr	x21, [sp, #16]
  43584c:	str	wzr, [x8, #200]
  435850:	ldr	x8, [x19, #8]
  435854:	ldp	x20, x19, [sp, #32]
  435858:	ldr	x0, [x8, #192]
  43585c:	ldp	x29, x30, [sp], #48
  435860:	b	403550 <fflush@plt>
  435864:	ldp	x20, x19, [sp, #32]
  435868:	ldr	x21, [sp, #16]
  43586c:	ldp	x29, x30, [sp], #48
  435870:	ret
  435874:	stp	x29, x30, [sp, #-48]!
  435878:	str	x21, [sp, #16]
  43587c:	stp	x20, x19, [sp, #32]
  435880:	mov	x29, sp
  435884:	ldr	x21, [x0, #8]
  435888:	strb	wzr, [x0, #64]
  43588c:	str	wzr, [x0, #32]
  435890:	mov	x19, x0
  435894:	ldr	x20, [x21, #176]
  435898:	ldp	x8, x9, [x20, #24]
  43589c:	cmp	x9, x8
  4358a0:	b.ne	4358b4 <feof@plt+0x32014>  // b.any
  4358a4:	mov	w1, #0x1                   	// #1
  4358a8:	mov	x0, x20
  4358ac:	bl	47bae8 <_obstack_newchunk@@Base>
  4358b0:	ldr	x8, [x20, #24]
  4358b4:	add	x9, x8, #0x1
  4358b8:	str	x9, [x20, #24]
  4358bc:	strb	wzr, [x8]
  4358c0:	ldr	x8, [x21, #176]
  4358c4:	ldr	x9, [x19, #8]
  4358c8:	ldr	x0, [x8, #16]
  4358cc:	ldr	x1, [x9, #192]
  4358d0:	bl	402fa0 <fputs@plt>
  4358d4:	ldr	x8, [x19, #8]
  4358d8:	ldr	x0, [x8, #176]
  4358dc:	ldp	x8, x1, [x0, #8]
  4358e0:	cmp	x1, x8
  4358e4:	b.ls	4358fc <feof@plt+0x3205c>  // b.plast
  4358e8:	ldr	x8, [x0, #32]
  4358ec:	cmp	x1, x8
  4358f0:	b.cs	4358fc <feof@plt+0x3205c>  // b.hs, b.nlast
  4358f4:	str	x1, [x0, #24]
  4358f8:	b	435900 <feof@plt+0x32060>
  4358fc:	bl	47bc70 <_obstack_free@@Base>
  435900:	ldr	x8, [x19, #8]
  435904:	ldr	x21, [sp, #16]
  435908:	str	wzr, [x8, #200]
  43590c:	ldr	x8, [x19, #8]
  435910:	ldp	x20, x19, [sp, #32]
  435914:	ldr	x0, [x8, #192]
  435918:	ldp	x29, x30, [sp], #48
  43591c:	b	403550 <fflush@plt>
  435920:	stp	x29, x30, [sp, #-32]!
  435924:	stp	x20, x19, [sp, #16]
  435928:	mov	x29, sp
  43592c:	mov	w19, w1
  435930:	mov	x20, x0
  435934:	cmp	w1, #0x1
  435938:	str	w1, [x0, #40]
  43593c:	b.lt	435968 <feof@plt+0x320c8>  // b.tstop
  435940:	ldr	w8, [x20, #36]
  435944:	cmp	w8, #0x2
  435948:	b.cc	435968 <feof@plt+0x320c8>  // b.lo, b.ul, b.last
  43594c:	ldr	x0, [x20, #16]
  435950:	cbz	x0, 435958 <feof@plt+0x320b8>
  435954:	bl	4030b0 <strlen@plt>
  435958:	sub	w8, w19, w0
  43595c:	add	w9, w19, #0x20
  435960:	cmp	w8, #0x20
  435964:	csel	w19, w9, w19, lt  // lt = tstop
  435968:	str	w19, [x20, #28]
  43596c:	ldp	x20, x19, [sp, #16]
  435970:	ldp	x29, x30, [sp], #32
  435974:	ret
  435978:	stp	x29, x30, [sp, #-48]!
  43597c:	str	x21, [sp, #16]
  435980:	stp	x20, x19, [sp, #32]
  435984:	mov	x29, sp
  435988:	mov	x19, x0
  43598c:	ldr	x0, [x0, #16]
  435990:	mov	x20, x1
  435994:	bl	4031d0 <free@plt>
  435998:	ldr	w21, [x19, #40]
  43599c:	str	x20, [x19, #16]
  4359a0:	cmp	w21, #0x1
  4359a4:	b.lt	4359d8 <feof@plt+0x32138>  // b.tstop
  4359a8:	ldr	w8, [x19, #36]
  4359ac:	cmp	w8, #0x2
  4359b0:	b.cc	4359d8 <feof@plt+0x32138>  // b.lo, b.ul, b.last
  4359b4:	cbz	x20, 4359c4 <feof@plt+0x32124>
  4359b8:	mov	x0, x20
  4359bc:	bl	4030b0 <strlen@plt>
  4359c0:	b	4359c8 <feof@plt+0x32128>
  4359c4:	mov	w0, wzr
  4359c8:	sub	w8, w21, w0
  4359cc:	add	w9, w21, #0x20
  4359d0:	cmp	w8, #0x20
  4359d4:	csel	w21, w9, w21, lt  // lt = tstop
  4359d8:	strb	wzr, [x19, #64]
  4359dc:	stp	w21, wzr, [x19, #28]
  4359e0:	ldp	x20, x19, [sp, #32]
  4359e4:	ldr	x21, [sp, #16]
  4359e8:	ldp	x29, x30, [sp], #48
  4359ec:	ret
  4359f0:	ldr	x8, [x0, #16]
  4359f4:	str	xzr, [x0, #16]
  4359f8:	mov	x0, x8
  4359fc:	ret
  435a00:	stp	x29, x30, [sp, #-32]!
  435a04:	str	x19, [sp, #16]
  435a08:	mov	x29, sp
  435a0c:	mov	x19, x0
  435a10:	ldr	x0, [x0, #16]
  435a14:	cbz	x0, 435a20 <feof@plt+0x32180>
  435a18:	bl	4031d0 <free@plt>
  435a1c:	str	xzr, [x19, #16]
  435a20:	ldr	x19, [sp, #16]
  435a24:	ldp	x29, x30, [sp], #32
  435a28:	ret
  435a2c:	stp	x29, x30, [sp, #-64]!
  435a30:	stp	x24, x23, [sp, #16]
  435a34:	stp	x22, x21, [sp, #32]
  435a38:	stp	x20, x19, [sp, #48]
  435a3c:	mov	x29, sp
  435a40:	ldr	x20, [x0, #16]
  435a44:	cbz	x20, 435b1c <feof@plt+0x3227c>
  435a48:	ldr	w8, [x0, #36]
  435a4c:	mov	x19, x0
  435a50:	cmp	w8, #0x2
  435a54:	b.eq	435a88 <feof@plt+0x321e8>  // b.none
  435a58:	cbnz	w8, 435b1c <feof@plt+0x3227c>
  435a5c:	ldrb	w8, [x19, #64]
  435a60:	cbz	w8, 435a7c <feof@plt+0x321dc>
  435a64:	mov	x0, x19
  435a68:	ldp	x20, x19, [sp, #48]
  435a6c:	ldp	x22, x21, [sp, #32]
  435a70:	ldp	x24, x23, [sp, #16]
  435a74:	ldp	x29, x30, [sp], #64
  435a78:	b	433a88 <feof@plt+0x301e8>
  435a7c:	ldr	w8, [x19, #32]
  435a80:	add	w8, w8, #0x3
  435a84:	str	w8, [x19, #32]
  435a88:	mov	x0, x20
  435a8c:	bl	4030b0 <strlen@plt>
  435a90:	ldr	x24, [x19, #8]
  435a94:	mov	x21, x0
  435a98:	sxtw	x23, w21
  435a9c:	ldr	x22, [x24, #176]
  435aa0:	ldp	x0, x8, [x22, #24]
  435aa4:	sub	x8, x8, x0
  435aa8:	cmp	x8, x23
  435aac:	b.cs	435ac0 <feof@plt+0x32220>  // b.hs, b.nlast
  435ab0:	mov	x0, x22
  435ab4:	mov	x1, x23
  435ab8:	bl	47bae8 <_obstack_newchunk@@Base>
  435abc:	ldr	x0, [x22, #24]
  435ac0:	mov	x1, x20
  435ac4:	mov	x2, x23
  435ac8:	bl	402fc0 <memcpy@plt>
  435acc:	ldr	x8, [x22, #24]
  435ad0:	cmp	w21, #0x1
  435ad4:	add	x8, x8, x23
  435ad8:	str	x8, [x22, #24]
  435adc:	b.lt	435b14 <feof@plt+0x32274>  // b.tstop
  435ae0:	and	x8, x21, #0xffffffff
  435ae4:	b	435b00 <feof@plt+0x32260>
  435ae8:	ldr	w9, [x24, #200]
  435aec:	add	w9, w9, #0x1
  435af0:	subs	x8, x8, #0x1
  435af4:	add	x20, x20, #0x1
  435af8:	str	w9, [x24, #200]
  435afc:	b.eq	435b14 <feof@plt+0x32274>  // b.none
  435b00:	ldrb	w9, [x20]
  435b04:	cmp	w9, #0xa
  435b08:	b.ne	435ae8 <feof@plt+0x32248>  // b.any
  435b0c:	mov	w9, wzr
  435b10:	b	435af0 <feof@plt+0x32250>
  435b14:	mov	w8, #0x1                   	// #1
  435b18:	strb	w8, [x19, #64]
  435b1c:	ldp	x20, x19, [sp, #48]
  435b20:	ldp	x22, x21, [sp, #32]
  435b24:	ldp	x24, x23, [sp, #16]
  435b28:	ldp	x29, x30, [sp], #64
  435b2c:	ret
  435b30:	stp	x29, x30, [sp, #-64]!
  435b34:	stp	x24, x23, [sp, #16]
  435b38:	stp	x22, x21, [sp, #32]
  435b3c:	stp	x20, x19, [sp, #48]
  435b40:	mov	x29, sp
  435b44:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435b48:	add	x8, x8, #0x570
  435b4c:	mov	w20, w1
  435b50:	mov	x19, x0
  435b54:	str	x8, [x0]
  435b58:	mov	w0, #0x1                   	// #1
  435b5c:	mov	w1, #0x150                 	// #336
  435b60:	mov	w23, #0x1                   	// #1
  435b64:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  435b68:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  435b6c:	ldr	x8, [x8, #1096]
  435b70:	movi	v0.2d, #0x0
  435b74:	stp	x0, xzr, [x0, #176]
  435b78:	stp	q0, q0, [x0]
  435b7c:	str	x8, [x0, #192]
  435b80:	mov	x8, x0
  435b84:	stp	q0, q0, [x0, #32]
  435b88:	stp	q0, q0, [x0, #64]
  435b8c:	stp	q0, q0, [x0, #96]
  435b90:	stp	q0, q0, [x0, #128]
  435b94:	str	q0, [x0, #160]
  435b98:	str	q0, [x8, #200]!
  435b9c:	stur	q0, [x0, #248]
  435ba0:	stur	q0, [x0, #232]
  435ba4:	stur	q0, [x0, #216]
  435ba8:	str	wzr, [x8, #128]
  435bac:	stp	q0, q0, [x8, #96]
  435bb0:	stp	q0, q0, [x8, #64]
  435bb4:	strb	w23, [x0, #332]
  435bb8:	adrp	x23, 439000 <feof@plt+0x35760>
  435bbc:	adrp	x24, 439000 <feof@plt+0x35760>
  435bc0:	add	x23, x23, #0xf08
  435bc4:	add	x24, x24, #0xf34
  435bc8:	mov	x1, xzr
  435bcc:	mov	x2, xzr
  435bd0:	mov	x3, x23
  435bd4:	mov	x4, x24
  435bd8:	mov	x21, x0
  435bdc:	add	x22, x0, #0x58
  435be0:	bl	47b98c <_obstack_begin@@Base>
  435be4:	mov	x0, x22
  435be8:	mov	x1, xzr
  435bec:	mov	x2, xzr
  435bf0:	mov	x3, x23
  435bf4:	mov	x4, x24
  435bf8:	bl	47b98c <_obstack_begin@@Base>
  435bfc:	mov	w8, #0x10000               	// #65536
  435c00:	stp	xzr, xzr, [x19, #48]
  435c04:	str	w20, [x19, #40]
  435c08:	stp	xzr, xzr, [x19, #24]
  435c0c:	stp	x21, xzr, [x19, #8]
  435c10:	str	w20, [x19, #28]
  435c14:	str	w8, [x19, #64]
  435c18:	strb	wzr, [x19, #64]
  435c1c:	str	xzr, [x19, #32]
  435c20:	ldp	x20, x19, [sp, #48]
  435c24:	ldp	x22, x21, [sp, #32]
  435c28:	ldp	x24, x23, [sp, #16]
  435c2c:	ldp	x29, x30, [sp], #64
  435c30:	ret
  435c34:	stp	x29, x30, [sp, #-32]!
  435c38:	stp	x20, x19, [sp, #16]
  435c3c:	mov	x29, sp
  435c40:	mov	x19, x0
  435c44:	ldr	x0, [x0, #56]
  435c48:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435c4c:	add	x8, x8, #0x570
  435c50:	str	x8, [x19]
  435c54:	cbz	x0, 435c64 <feof@plt+0x323c4>
  435c58:	ldr	x8, [x0]
  435c5c:	ldr	x8, [x8, #8]
  435c60:	blr	x8
  435c64:	ldr	x20, [x19, #8]
  435c68:	mov	x1, xzr
  435c6c:	add	x0, x20, #0x58
  435c70:	bl	47bc70 <_obstack_free@@Base>
  435c74:	mov	x0, x20
  435c78:	mov	x1, xzr
  435c7c:	bl	47bc70 <_obstack_free@@Base>
  435c80:	ldr	x0, [x19, #8]
  435c84:	bl	4031d0 <free@plt>
  435c88:	ldr	x0, [x19, #16]
  435c8c:	ldp	x20, x19, [sp, #16]
  435c90:	ldp	x29, x30, [sp], #32
  435c94:	b	4031d0 <free@plt>
  435c98:	stp	x29, x30, [sp, #-32]!
  435c9c:	stp	x20, x19, [sp, #16]
  435ca0:	mov	x29, sp
  435ca4:	mov	x19, x0
  435ca8:	ldr	x0, [x0, #56]
  435cac:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  435cb0:	add	x8, x8, #0x570
  435cb4:	str	x8, [x19]
  435cb8:	cbz	x0, 435cc8 <feof@plt+0x32428>
  435cbc:	ldr	x8, [x0]
  435cc0:	ldr	x8, [x8, #8]
  435cc4:	blr	x8
  435cc8:	ldr	x20, [x19, #8]
  435ccc:	mov	x1, xzr
  435cd0:	add	x0, x20, #0x58
  435cd4:	bl	47bc70 <_obstack_free@@Base>
  435cd8:	mov	x0, x20
  435cdc:	mov	x1, xzr
  435ce0:	bl	47bc70 <_obstack_free@@Base>
  435ce4:	ldr	x0, [x19, #8]
  435ce8:	bl	4031d0 <free@plt>
  435cec:	ldr	x0, [x19, #16]
  435cf0:	bl	4031d0 <free@plt>
  435cf4:	mov	x0, x19
  435cf8:	ldp	x20, x19, [sp, #16]
  435cfc:	ldp	x29, x30, [sp], #32
  435d00:	b	403410 <_ZdlPv@plt>
  435d04:	ldr	x8, [x0, #8]
  435d08:	ldr	x8, [x8, #176]
  435d0c:	ldp	x8, x9, [x8, #16]
  435d10:	sub	x10, x9, #0x1
  435d14:	cmp	x8, x9
  435d18:	csel	x0, xzr, x10, eq  // eq = none
  435d1c:	ret
  435d20:	ldr	x8, [x0, #8]
  435d24:	ldr	w9, [x0, #28]
  435d28:	ldr	w8, [x8, #200]
  435d2c:	sub	w0, w9, w8
  435d30:	ret
  435d34:	sub	sp, sp, #0x130
  435d38:	stp	x29, x30, [sp, #256]
  435d3c:	str	x28, [sp, #272]
  435d40:	stp	x20, x19, [sp, #288]
  435d44:	add	x29, sp, #0x100
  435d48:	mov	x8, #0xffffffffffffffd0    	// #-48
  435d4c:	mov	x9, sp
  435d50:	sub	x10, x29, #0x78
  435d54:	movk	x8, #0xff80, lsl #32
  435d58:	add	x11, x29, #0x30
  435d5c:	add	x9, x9, #0x80
  435d60:	add	x10, x10, #0x30
  435d64:	mov	x19, x1
  435d68:	mov	x20, x0
  435d6c:	stp	x2, x3, [x29, #-120]
  435d70:	stp	x4, x5, [x29, #-104]
  435d74:	stp	x6, x7, [x29, #-88]
  435d78:	stp	q1, q2, [sp, #16]
  435d7c:	stp	q3, q4, [sp, #48]
  435d80:	str	q0, [sp]
  435d84:	stp	q5, q6, [sp, #80]
  435d88:	str	q7, [sp, #112]
  435d8c:	stp	x9, x8, [x29, #-56]
  435d90:	stp	x11, x10, [x29, #-72]
  435d94:	bl	4035c0 <__errno_location@plt>
  435d98:	ldr	w8, [x0]
  435d9c:	sub	x9, x29, #0x48
  435da0:	sub	x1, x29, #0x28
  435da4:	mov	x0, x20
  435da8:	stur	w8, [x29, #-24]
  435dac:	stp	x19, x9, [x29, #-40]
  435db0:	bl	433b7c <feof@plt+0x302dc>
  435db4:	mov	x0, x20
  435db8:	bl	435688 <feof@plt+0x31de8>
  435dbc:	ldp	x20, x19, [sp, #288]
  435dc0:	ldr	x28, [sp, #272]
  435dc4:	ldp	x29, x30, [sp, #256]
  435dc8:	add	sp, sp, #0x130
  435dcc:	ret
  435dd0:	sub	sp, sp, #0x130
  435dd4:	stp	x29, x30, [sp, #256]
  435dd8:	str	x28, [sp, #272]
  435ddc:	stp	x20, x19, [sp, #288]
  435de0:	add	x29, sp, #0x100
  435de4:	mov	x8, #0xffffffffffffffd0    	// #-48
  435de8:	mov	x9, sp
  435dec:	sub	x10, x29, #0x78
  435df0:	movk	x8, #0xff80, lsl #32
  435df4:	add	x11, x29, #0x30
  435df8:	add	x9, x9, #0x80
  435dfc:	add	x10, x10, #0x30
  435e00:	mov	x19, x1
  435e04:	mov	x20, x0
  435e08:	stp	x2, x3, [x29, #-120]
  435e0c:	stp	x4, x5, [x29, #-104]
  435e10:	stp	x6, x7, [x29, #-88]
  435e14:	stp	q1, q2, [sp, #16]
  435e18:	stp	q3, q4, [sp, #48]
  435e1c:	str	q0, [sp]
  435e20:	stp	q5, q6, [sp, #80]
  435e24:	str	q7, [sp, #112]
  435e28:	stp	x9, x8, [x29, #-56]
  435e2c:	stp	x11, x10, [x29, #-72]
  435e30:	bl	4035c0 <__errno_location@plt>
  435e34:	ldr	w8, [x0]
  435e38:	sub	x9, x29, #0x48
  435e3c:	adrp	x10, 48d000 <_obstack_memory_used@@Base+0x112fc>
  435e40:	stp	x19, x9, [x29, #-40]
  435e44:	stur	w8, [x29, #-24]
  435e48:	ldr	d0, [x10, #3576]
  435e4c:	ldur	x19, [x20, #36]
  435e50:	sub	x1, x29, #0x28
  435e54:	mov	x0, x20
  435e58:	stur	d0, [x20, #36]
  435e5c:	bl	433b7c <feof@plt+0x302dc>
  435e60:	mov	x0, x20
  435e64:	bl	435688 <feof@plt+0x31de8>
  435e68:	stur	x19, [x20, #36]
  435e6c:	ldp	x20, x19, [sp, #288]
  435e70:	ldr	x28, [sp, #272]
  435e74:	ldp	x29, x30, [sp, #256]
  435e78:	add	sp, sp, #0x130
  435e7c:	ret
  435e80:	stp	x29, x30, [sp, #-32]!
  435e84:	stp	x20, x19, [sp, #16]
  435e88:	mov	x29, sp
  435e8c:	ldr	x8, [x0, #8]
  435e90:	mov	x19, x0
  435e94:	ldr	x20, [x8, #176]
  435e98:	ldp	x8, x9, [x20, #24]
  435e9c:	cmp	x9, x8
  435ea0:	b.ne	435eb4 <feof@plt+0x32614>  // b.any
  435ea4:	mov	w1, #0x1                   	// #1
  435ea8:	mov	x0, x20
  435eac:	bl	47bae8 <_obstack_newchunk@@Base>
  435eb0:	ldr	x8, [x20, #24]
  435eb4:	add	x9, x8, #0x1
  435eb8:	mov	w10, #0xa                   	// #10
  435ebc:	str	x9, [x20, #24]
  435ec0:	strb	w10, [x8]
  435ec4:	ldr	x8, [x19, #8]
  435ec8:	strb	wzr, [x19, #65]
  435ecc:	str	wzr, [x8, #200]
  435ed0:	ldp	x20, x19, [sp, #16]
  435ed4:	ldp	x29, x30, [sp], #32
  435ed8:	ret
  435edc:	stp	x29, x30, [sp, #-96]!
  435ee0:	stp	x28, x27, [sp, #16]
  435ee4:	stp	x26, x25, [sp, #32]
  435ee8:	stp	x24, x23, [sp, #48]
  435eec:	stp	x22, x21, [sp, #64]
  435ef0:	stp	x20, x19, [sp, #80]
  435ef4:	mov	x29, sp
  435ef8:	ldr	w8, [x0, #40]
  435efc:	mov	x19, x2
  435f00:	mov	x20, x0
  435f04:	mov	x22, x1
  435f08:	cmp	w8, #0x1
  435f0c:	b.lt	436100 <feof@plt+0x32860>  // b.tstop
  435f10:	cmp	x22, x19
  435f14:	b.eq	4360e4 <feof@plt+0x32844>  // b.none
  435f18:	adrp	x8, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  435f1c:	ldrh	w24, [x8, #1250]
  435f20:	adrp	x25, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  435f24:	add	x25, x25, #0x4a2
  435f28:	mov	w26, #0xa                   	// #10
  435f2c:	mov	w27, #0x20                  	// #32
  435f30:	b	435f5c <feof@plt+0x326bc>
  435f34:	add	x9, x8, #0x1
  435f38:	str	x9, [x22, #24]
  435f3c:	strb	w26, [x8]
  435f40:	ldr	x8, [x20, #8]
  435f44:	add	x21, x21, #0x1
  435f48:	strb	wzr, [x20, #65]
  435f4c:	str	wzr, [x8, #200]
  435f50:	cmp	x21, x19
  435f54:	mov	x22, x21
  435f58:	b.eq	4360e4 <feof@plt+0x32844>  // b.none
  435f5c:	cmp	x22, x19
  435f60:	b.eq	435f8c <feof@plt+0x326ec>  // b.none
  435f64:	mov	x21, x22
  435f68:	ldrb	w8, [x21]
  435f6c:	mov	w28, #0x1                   	// #1
  435f70:	cmp	x8, #0xa
  435f74:	b.eq	435f94 <feof@plt+0x326f4>  // b.none
  435f78:	ldrh	w8, [x25, x8, lsl #1]
  435f7c:	tbnz	w8, #0, 435f94 <feof@plt+0x326f4>
  435f80:	add	x21, x21, #0x1
  435f84:	cmp	x19, x21
  435f88:	b.ne	435f68 <feof@plt+0x326c8>  // b.any
  435f8c:	mov	w28, wzr
  435f90:	mov	x21, x19
  435f94:	ldr	x8, [x20, #8]
  435f98:	ldrsw	x9, [x20, #28]
  435f9c:	sub	x11, x21, x22
  435fa0:	ldrsw	x10, [x8, #200]
  435fa4:	sub	x9, x9, x10
  435fa8:	cmp	x11, x9
  435fac:	b.lt	435fe8 <feof@plt+0x32748>  // b.tstop
  435fb0:	ldr	x23, [x8, #176]
  435fb4:	ldp	x8, x9, [x23, #24]
  435fb8:	cmp	x9, x8
  435fbc:	b.ne	435fd0 <feof@plt+0x32730>  // b.any
  435fc0:	mov	w1, #0x1                   	// #1
  435fc4:	mov	x0, x23
  435fc8:	bl	47bae8 <_obstack_newchunk@@Base>
  435fcc:	ldr	x8, [x23, #24]
  435fd0:	add	x9, x8, #0x1
  435fd4:	str	x9, [x23, #24]
  435fd8:	strb	w26, [x8]
  435fdc:	ldr	x8, [x20, #8]
  435fe0:	strb	wzr, [x20, #65]
  435fe4:	str	wzr, [x8, #200]
  435fe8:	mov	x0, x20
  435fec:	mov	x1, x22
  435ff0:	mov	x2, x21
  435ff4:	bl	435530 <feof@plt+0x31c90>
  435ff8:	cbz	w28, 4360a8 <feof@plt+0x32808>
  435ffc:	ldrb	w8, [x21]
  436000:	ldrh	w8, [x25, x8, lsl #1]
  436004:	tbz	w8, #0, 4360a8 <feof@plt+0x32808>
  436008:	ldr	w8, [x20, #40]
  43600c:	cmp	w8, #0x1
  436010:	b.lt	436064 <feof@plt+0x327c4>  // b.tstop
  436014:	ldr	x8, [x20, #8]
  436018:	ldr	w9, [x20, #28]
  43601c:	ldr	w10, [x8, #200]
  436020:	cmp	w9, w10
  436024:	b.gt	436064 <feof@plt+0x327c4>
  436028:	ldr	x22, [x8, #176]
  43602c:	ldp	x8, x9, [x22, #24]
  436030:	cmp	x9, x8
  436034:	b.ne	436048 <feof@plt+0x327a8>  // b.any
  436038:	mov	w1, #0x1                   	// #1
  43603c:	mov	x0, x22
  436040:	bl	47bae8 <_obstack_newchunk@@Base>
  436044:	ldr	x8, [x22, #24]
  436048:	add	x9, x8, #0x1
  43604c:	str	x9, [x22, #24]
  436050:	strb	w26, [x8]
  436054:	ldr	x8, [x20, #8]
  436058:	strb	wzr, [x20, #65]
  43605c:	str	wzr, [x8, #200]
  436060:	tbnz	w24, #6, 4360a4 <feof@plt+0x32804>
  436064:	ldr	x8, [x20, #8]
  436068:	ldr	x22, [x8, #176]
  43606c:	ldp	x8, x9, [x22, #24]
  436070:	cmp	x9, x8
  436074:	b.ne	436088 <feof@plt+0x327e8>  // b.any
  436078:	mov	w1, #0x1                   	// #1
  43607c:	mov	x0, x22
  436080:	bl	47bae8 <_obstack_newchunk@@Base>
  436084:	ldr	x8, [x22, #24]
  436088:	add	x9, x8, #0x1
  43608c:	str	x9, [x22, #24]
  436090:	strb	w27, [x8]
  436094:	ldr	x8, [x20, #8]
  436098:	ldr	w9, [x8, #200]
  43609c:	add	w9, w9, #0x1
  4360a0:	str	w9, [x8, #200]
  4360a4:	add	x21, x21, #0x1
  4360a8:	cmp	x21, x19
  4360ac:	b.eq	4360e4 <feof@plt+0x32844>  // b.none
  4360b0:	ldrb	w8, [x21]
  4360b4:	cmp	w8, #0xa
  4360b8:	b.ne	435f50 <feof@plt+0x326b0>  // b.any
  4360bc:	ldr	x8, [x20, #8]
  4360c0:	ldr	x22, [x8, #176]
  4360c4:	ldp	x8, x9, [x22, #24]
  4360c8:	cmp	x9, x8
  4360cc:	b.ne	435f34 <feof@plt+0x32694>  // b.any
  4360d0:	mov	w1, #0x1                   	// #1
  4360d4:	mov	x0, x22
  4360d8:	bl	47bae8 <_obstack_newchunk@@Base>
  4360dc:	ldr	x8, [x22, #24]
  4360e0:	b	435f34 <feof@plt+0x32694>
  4360e4:	ldp	x20, x19, [sp, #80]
  4360e8:	ldp	x22, x21, [sp, #64]
  4360ec:	ldp	x24, x23, [sp, #48]
  4360f0:	ldp	x26, x25, [sp, #32]
  4360f4:	ldp	x28, x27, [sp, #16]
  4360f8:	ldp	x29, x30, [sp], #96
  4360fc:	ret
  436100:	mov	x0, x20
  436104:	mov	x1, x22
  436108:	mov	x2, x19
  43610c:	ldp	x20, x19, [sp, #80]
  436110:	ldp	x22, x21, [sp, #64]
  436114:	ldp	x24, x23, [sp, #48]
  436118:	ldp	x26, x25, [sp, #32]
  43611c:	ldp	x28, x27, [sp, #16]
  436120:	ldp	x29, x30, [sp], #96
  436124:	b	435530 <feof@plt+0x31c90>
  436128:	stp	x29, x30, [sp, #-32]!
  43612c:	stp	x20, x19, [sp, #16]
  436130:	mov	x29, sp
  436134:	ldr	w8, [x0, #24]
  436138:	cbz	w8, 4361f0 <feof@plt+0x32950>
  43613c:	ldr	w8, [x0, #40]
  436140:	mov	x19, x0
  436144:	cmp	w8, #0x1
  436148:	b.lt	4361a8 <feof@plt+0x32908>  // b.tstop
  43614c:	ldr	x8, [x19, #8]
  436150:	ldr	w9, [x19, #28]
  436154:	ldr	w10, [x8, #200]
  436158:	cmp	w9, w10
  43615c:	b.gt	4361a8 <feof@plt+0x32908>
  436160:	ldr	x20, [x8, #176]
  436164:	ldp	x8, x9, [x20, #24]
  436168:	cmp	x9, x8
  43616c:	b.ne	436180 <feof@plt+0x328e0>  // b.any
  436170:	mov	w1, #0x1                   	// #1
  436174:	mov	x0, x20
  436178:	bl	47bae8 <_obstack_newchunk@@Base>
  43617c:	ldr	x8, [x20, #24]
  436180:	add	x9, x8, #0x1
  436184:	mov	w10, #0xa                   	// #10
  436188:	adrp	x11, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  43618c:	str	x9, [x20, #24]
  436190:	strb	w10, [x8]
  436194:	ldr	x8, [x19, #8]
  436198:	ldrb	w9, [x11, #1250]
  43619c:	strb	wzr, [x19, #65]
  4361a0:	str	wzr, [x8, #200]
  4361a4:	tbnz	w9, #6, 4361ec <feof@plt+0x3294c>
  4361a8:	ldr	x8, [x19, #8]
  4361ac:	ldr	x20, [x8, #176]
  4361b0:	ldp	x8, x9, [x20, #24]
  4361b4:	cmp	x9, x8
  4361b8:	b.ne	4361cc <feof@plt+0x3292c>  // b.any
  4361bc:	mov	w1, #0x1                   	// #1
  4361c0:	mov	x0, x20
  4361c4:	bl	47bae8 <_obstack_newchunk@@Base>
  4361c8:	ldr	x8, [x20, #24]
  4361cc:	add	x9, x8, #0x1
  4361d0:	mov	w10, #0x20                  	// #32
  4361d4:	str	x9, [x20, #24]
  4361d8:	strb	w10, [x8]
  4361dc:	ldr	x8, [x19, #8]
  4361e0:	ldr	w9, [x8, #200]
  4361e4:	add	w9, w9, #0x1
  4361e8:	str	w9, [x8, #200]
  4361ec:	str	wzr, [x19, #24]
  4361f0:	ldp	x20, x19, [sp, #16]
  4361f4:	ldp	x29, x30, [sp], #32
  4361f8:	ret
  4361fc:	stp	x29, x30, [sp, #-32]!
  436200:	stp	x20, x19, [sp, #16]
  436204:	mov	x29, sp
  436208:	ldr	x8, [x0, #8]
  43620c:	mov	x19, x0
  436210:	ldr	x20, [x8, #176]
  436214:	ldp	x8, x9, [x20, #24]
  436218:	cmp	x9, x8
  43621c:	b.ne	436230 <feof@plt+0x32990>  // b.any
  436220:	mov	w1, #0x1                   	// #1
  436224:	mov	x0, x20
  436228:	bl	47bae8 <_obstack_newchunk@@Base>
  43622c:	ldr	x8, [x20, #24]
  436230:	add	x9, x8, #0x1
  436234:	mov	w10, #0xa                   	// #10
  436238:	str	x9, [x20, #24]
  43623c:	strb	w10, [x8]
  436240:	ldr	x8, [x19, #8]
  436244:	mov	x0, x19
  436248:	strb	wzr, [x19, #65]
  43624c:	str	wzr, [x8, #200]
  436250:	bl	4357b0 <feof@plt+0x31f10>
  436254:	strb	wzr, [x19, #65]
  436258:	ldp	x20, x19, [sp, #16]
  43625c:	ldp	x29, x30, [sp], #32
  436260:	ret
  436264:	stp	x29, x30, [sp, #-32]!
  436268:	stp	x20, x19, [sp, #16]
  43626c:	mov	x29, sp
  436270:	ldr	w8, [x0, #32]
  436274:	ldr	x9, [x0, #8]
  436278:	mov	x19, x0
  43627c:	add	w8, w8, w1
  436280:	str	w8, [x0, #32]
  436284:	ldr	x20, [x9, #176]
  436288:	ldp	x8, x9, [x20, #24]
  43628c:	cmp	x9, x8
  436290:	b.ne	4362a4 <feof@plt+0x32a04>  // b.any
  436294:	mov	w1, #0x1                   	// #1
  436298:	mov	x0, x20
  43629c:	bl	47bae8 <_obstack_newchunk@@Base>
  4362a0:	ldr	x8, [x20, #24]
  4362a4:	add	x9, x8, #0x1
  4362a8:	mov	w10, #0xa                   	// #10
  4362ac:	str	x9, [x20, #24]
  4362b0:	strb	w10, [x8]
  4362b4:	ldr	x8, [x19, #8]
  4362b8:	mov	x0, x19
  4362bc:	strb	wzr, [x19, #65]
  4362c0:	str	wzr, [x8, #200]
  4362c4:	bl	433a88 <feof@plt+0x301e8>
  4362c8:	strb	wzr, [x19, #65]
  4362cc:	ldp	x20, x19, [sp, #16]
  4362d0:	ldp	x29, x30, [sp], #32
  4362d4:	ret
  4362d8:	stp	x29, x30, [sp, #-32]!
  4362dc:	stp	x20, x19, [sp, #16]
  4362e0:	mov	x29, sp
  4362e4:	and	w1, w1, #0xff
  4362e8:	mov	x19, x0
  4362ec:	bl	433718 <feof@plt+0x2fe78>
  4362f0:	ldr	w8, [x19, #40]
  4362f4:	cmp	w8, #0x1
  4362f8:	b.lt	436358 <feof@plt+0x32ab8>  // b.tstop
  4362fc:	ldr	x8, [x19, #8]
  436300:	ldr	w9, [x19, #28]
  436304:	ldr	w10, [x8, #200]
  436308:	cmp	w9, w10
  43630c:	b.gt	436358 <feof@plt+0x32ab8>
  436310:	ldr	x20, [x8, #176]
  436314:	ldp	x8, x9, [x20, #24]
  436318:	cmp	x9, x8
  43631c:	b.ne	436330 <feof@plt+0x32a90>  // b.any
  436320:	mov	w1, #0x1                   	// #1
  436324:	mov	x0, x20
  436328:	bl	47bae8 <_obstack_newchunk@@Base>
  43632c:	ldr	x8, [x20, #24]
  436330:	add	x9, x8, #0x1
  436334:	mov	w10, #0xa                   	// #10
  436338:	adrp	x11, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  43633c:	str	x9, [x20, #24]
  436340:	strb	w10, [x8]
  436344:	ldr	x8, [x19, #8]
  436348:	ldrb	w9, [x11, #1250]
  43634c:	strb	wzr, [x19, #65]
  436350:	str	wzr, [x8, #200]
  436354:	tbnz	w9, #6, 43639c <feof@plt+0x32afc>
  436358:	ldr	x8, [x19, #8]
  43635c:	ldr	x20, [x8, #176]
  436360:	ldp	x8, x9, [x20, #24]
  436364:	cmp	x9, x8
  436368:	b.ne	43637c <feof@plt+0x32adc>  // b.any
  43636c:	mov	w1, #0x1                   	// #1
  436370:	mov	x0, x20
  436374:	bl	47bae8 <_obstack_newchunk@@Base>
  436378:	ldr	x8, [x20, #24]
  43637c:	add	x9, x8, #0x1
  436380:	mov	w10, #0x20                  	// #32
  436384:	str	x9, [x20, #24]
  436388:	strb	w10, [x8]
  43638c:	ldr	x8, [x19, #8]
  436390:	ldr	w9, [x8, #200]
  436394:	add	w9, w9, #0x1
  436398:	str	w9, [x8, #200]
  43639c:	ldp	x20, x19, [sp, #16]
  4363a0:	ldp	x29, x30, [sp], #32
  4363a4:	ret
  4363a8:	sub	sp, sp, #0x70
  4363ac:	stp	x29, x30, [sp, #32]
  4363b0:	stp	x26, x25, [sp, #48]
  4363b4:	stp	x24, x23, [sp, #64]
  4363b8:	stp	x22, x21, [sp, #80]
  4363bc:	stp	x20, x19, [sp, #96]
  4363c0:	add	x29, sp, #0x20
  4363c4:	mov	x19, x0
  4363c8:	bl	4030b0 <strlen@plt>
  4363cc:	cbz	x0, 4365d4 <feof@plt+0x32d34>
  4363d0:	mov	x20, x0
  4363d4:	mov	x22, xzr
  4363d8:	mov	w21, #0x1                   	// #1
  4363dc:	add	x0, x19, x22
  4363e0:	sub	x1, x20, x22
  4363e4:	sub	x2, x29, #0x8
  4363e8:	bl	436664 <feof@plt+0x32dc4>
  4363ec:	cbz	w0, 4365dc <feof@plt+0x32d3c>
  4363f0:	ldur	w8, [x29, #-8]
  4363f4:	cmp	w8, #0x20
  4363f8:	b.cc	4365dc <feof@plt+0x32d3c>  // b.lo, b.ul, b.last
  4363fc:	sub	w8, w8, #0x7f
  436400:	cmp	w8, #0x20
  436404:	b.ls	4365dc <feof@plt+0x32d3c>  // b.plast
  436408:	cmp	w0, #0x2
  43640c:	add	x22, x22, w0, sxtw
  436410:	cset	w8, cc  // cc = lo, ul, last
  436414:	cmp	x20, x22
  436418:	and	w21, w21, w8
  43641c:	b.hi	4363dc <feof@plt+0x32b3c>  // b.pmore
  436420:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  436424:	ldrb	w8, [x8, #392]
  436428:	cbnz	w8, 4365d4 <feof@plt+0x32d34>
  43642c:	eor	w8, w21, #0x1
  436430:	cbz	w8, 4365d4 <feof@plt+0x32d34>
  436434:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  436438:	ldr	x0, [x8, #384]
  43643c:	adrp	x24, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  436440:	cbz	x0, 436554 <feof@plt+0x32cb4>
  436444:	adrp	x1, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  436448:	add	x1, x1, #0x59a
  43644c:	bl	4031b0 <iconv_open@plt>
  436450:	cmn	x0, #0x1
  436454:	b.eq	436554 <feof@plt+0x32cb4>  // b.none
  436458:	mov	w23, #0x1                   	// #1
  43645c:	mov	x22, x0
  436460:	mov	w25, #0x1                   	// #1
  436464:	bfi	x23, x20, #2, #62
  436468:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  43646c:	b	43647c <feof@plt+0x32bdc>
  436470:	mov	w25, wzr
  436474:	mov	w8, #0x1                   	// #1
  436478:	cbnz	w8, 436548 <feof@plt+0x32ca8>
  43647c:	ldr	x8, [x24, #1000]
  436480:	sub	x9, x23, #0x1
  436484:	mov	x0, x23
  436488:	stur	x19, [x29, #-8]
  43648c:	stp	x9, x20, [sp]
  436490:	blr	x8
  436494:	mov	x21, x0
  436498:	str	x0, [sp, #16]
  43649c:	mov	x0, x22
  4364a0:	mov	x1, xzr
  4364a4:	mov	x2, xzr
  4364a8:	mov	x3, xzr
  4364ac:	mov	x4, xzr
  4364b0:	bl	4034c0 <iconv@plt>
  4364b4:	cmn	x0, #0x1
  4364b8:	b.eq	436470 <feof@plt+0x32bd0>  // b.none
  4364bc:	sub	x1, x29, #0x8
  4364c0:	add	x2, sp, #0x8
  4364c4:	add	x3, sp, #0x10
  4364c8:	mov	x4, sp
  4364cc:	mov	x0, x22
  4364d0:	bl	4034c0 <iconv@plt>
  4364d4:	cmn	x0, #0x1
  4364d8:	b.eq	43651c <feof@plt+0x32c7c>  // b.none
  4364dc:	ldr	x8, [sp, #8]
  4364e0:	cbnz	x8, 43651c <feof@plt+0x32c7c>
  4364e4:	cbnz	x0, 436470 <feof@plt+0x32bd0>
  4364e8:	add	x3, sp, #0x10
  4364ec:	mov	x4, sp
  4364f0:	mov	x0, x22
  4364f4:	mov	x1, xzr
  4364f8:	mov	x2, xzr
  4364fc:	bl	4034c0 <iconv@plt>
  436500:	cmn	x0, #0x1
  436504:	b.eq	43651c <feof@plt+0x32c7c>  // b.none
  436508:	ldr	x8, [sp, #16]
  43650c:	strb	wzr, [x8]
  436510:	mov	w8, #0x1                   	// #1
  436514:	cbz	w8, 43647c <feof@plt+0x32bdc>
  436518:	b	436548 <feof@plt+0x32ca8>
  43651c:	bl	4035c0 <__errno_location@plt>
  436520:	ldr	w8, [x0]
  436524:	cmp	w8, #0x7
  436528:	b.ne	436470 <feof@plt+0x32bd0>  // b.any
  43652c:	ldr	x8, [x26, #1008]
  436530:	mov	x0, x21
  436534:	lsl	x23, x23, #1
  436538:	blr	x8
  43653c:	mov	w8, wzr
  436540:	mov	x21, xzr
  436544:	cbz	w8, 43647c <feof@plt+0x32bdc>
  436548:	mov	x0, x22
  43654c:	bl	402fb0 <iconv_close@plt>
  436550:	tbnz	w25, #0, 436644 <feof@plt+0x32da4>
  436554:	ldr	x8, [x24, #1000]
  436558:	add	x9, x20, x20, lsl #2
  43655c:	mov	w0, #0x1                   	// #1
  436560:	bfi	x0, x9, #1, #63
  436564:	blr	x8
  436568:	mov	x21, x0
  43656c:	mov	x22, x0
  436570:	cbz	x20, 436640 <feof@plt+0x32da0>
  436574:	adrp	x23, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  436578:	mov	x25, xzr
  43657c:	add	x23, x23, #0x618
  436580:	mov	x22, x21
  436584:	b	4365a8 <feof@plt+0x32d08>
  436588:	ldur	w2, [x29, #-8]
  43658c:	mov	x0, x22
  436590:	mov	x1, x23
  436594:	bl	403340 <sprintf@plt>
  436598:	add	x22, x22, #0xa
  43659c:	add	x25, x25, x26
  4365a0:	cmp	x20, x25
  4365a4:	b.ls	436640 <feof@plt+0x32da0>  // b.plast
  4365a8:	add	x24, x19, x25
  4365ac:	sub	x1, x20, x25
  4365b0:	sub	x2, x29, #0x8
  4365b4:	mov	x0, x24
  4365b8:	bl	436664 <feof@plt+0x32dc4>
  4365bc:	cmp	w0, #0x1
  4365c0:	sxtw	x26, w0
  4365c4:	b.ne	436588 <feof@plt+0x32ce8>  // b.any
  4365c8:	ldrb	w8, [x24]
  4365cc:	strb	w8, [x22], #1
  4365d0:	b	43659c <feof@plt+0x32cfc>
  4365d4:	mov	x21, x19
  4365d8:	b	436644 <feof@plt+0x32da4>
  4365dc:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4365e0:	ldr	x8, [x8, #1000]
  4365e4:	mov	w0, #0x1                   	// #1
  4365e8:	bfi	x0, x20, #2, #62
  4365ec:	blr	x8
  4365f0:	adrp	x22, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4365f4:	mov	x21, x0
  4365f8:	add	x22, x22, #0x612
  4365fc:	mov	x23, x0
  436600:	b	436620 <feof@plt+0x32d80>
  436604:	mov	x0, x23
  436608:	mov	x1, x22
  43660c:	bl	403340 <sprintf@plt>
  436610:	add	x23, x23, #0x4
  436614:	subs	x20, x20, #0x1
  436618:	add	x19, x19, #0x1
  43661c:	b.eq	436638 <feof@plt+0x32d98>  // b.none
  436620:	ldrb	w2, [x19]
  436624:	sub	w8, w2, #0x20
  436628:	cmp	w8, #0x5e
  43662c:	b.hi	436604 <feof@plt+0x32d64>  // b.pmore
  436630:	strb	w2, [x23], #1
  436634:	b	436614 <feof@plt+0x32d74>
  436638:	strb	wzr, [x23]
  43663c:	b	436644 <feof@plt+0x32da4>
  436640:	strb	wzr, [x22]
  436644:	mov	x0, x21
  436648:	ldp	x20, x19, [sp, #96]
  43664c:	ldp	x22, x21, [sp, #80]
  436650:	ldp	x24, x23, [sp, #64]
  436654:	ldp	x26, x25, [sp, #48]
  436658:	ldp	x29, x30, [sp, #32]
  43665c:	add	sp, sp, #0x70
  436660:	ret
  436664:	stp	x29, x30, [sp, #-16]!
  436668:	mov	x29, sp
  43666c:	cbz	x1, 436784 <feof@plt+0x32ee4>
  436670:	ldrb	w11, [x0]
  436674:	mov	x8, x0
  436678:	tbnz	w11, #7, 436688 <feof@plt+0x32de8>
  43667c:	mov	w0, #0x1                   	// #1
  436680:	mov	w10, w11
  436684:	b	436740 <feof@plt+0x32ea0>
  436688:	mov	x9, xzr
  43668c:	mov	w10, w11
  436690:	mov	w12, w10
  436694:	add	x9, x9, #0x1
  436698:	lsl	w10, w10, #1
  43669c:	tbnz	w12, #6, 436690 <feof@plt+0x32df0>
  4366a0:	mov	w0, wzr
  4366a4:	cmp	x9, x1
  4366a8:	mov	w10, #0xffffffff            	// #-1
  4366ac:	b.hi	436740 <feof@plt+0x32ea0>  // b.pmore
  4366b0:	sub	x12, x9, #0x2
  4366b4:	cmp	x12, #0x4
  4366b8:	b.hi	436740 <feof@plt+0x32ea0>  // b.pmore
  4366bc:	mov	w10, #0x7                   	// #7
  4366c0:	mov	w14, #0xffffffff            	// #-1
  4366c4:	sub	w10, w10, w9
  4366c8:	lsl	w10, w14, w10
  4366cc:	mov	x12, xzr
  4366d0:	sub	x13, x9, #0x1
  4366d4:	bic	w10, w11, w10
  4366d8:	add	x11, x8, #0x1
  4366dc:	mov	w8, w10
  4366e0:	ldrb	w10, [x11, x12]
  4366e4:	and	w14, w10, #0xc0
  4366e8:	cmp	w14, #0x80
  4366ec:	b.ne	436738 <feof@plt+0x32e98>  // b.any
  4366f0:	add	x12, x12, #0x1
  4366f4:	cmp	x13, x12
  4366f8:	bfi	w10, w8, #6, #26
  4366fc:	b.ne	4366dc <feof@plt+0x32e3c>  // b.any
  436700:	cmp	w10, #0x80
  436704:	b.cc	436738 <feof@plt+0x32e98>  // b.lo, b.ul, b.last
  436708:	cmp	x9, #0x3
  43670c:	b.cc	436718 <feof@plt+0x32e78>  // b.lo, b.ul, b.last
  436710:	cmp	w10, #0x800
  436714:	b.cc	436738 <feof@plt+0x32e98>  // b.lo, b.ul, b.last
  436718:	cmp	x9, #0x4
  43671c:	b.cc	436728 <feof@plt+0x32e88>  // b.lo, b.ul, b.last
  436720:	cmp	w10, #0x10, lsl #12
  436724:	b.cc	436738 <feof@plt+0x32e98>  // b.lo, b.ul, b.last
  436728:	cmp	x9, #0x5
  43672c:	b.cc	43674c <feof@plt+0x32eac>  // b.lo, b.ul, b.last
  436730:	cmp	w10, #0x200, lsl #12
  436734:	b.cs	43674c <feof@plt+0x32eac>  // b.hs, b.nlast
  436738:	mov	w0, wzr
  43673c:	mov	w10, #0xffffffff            	// #-1
  436740:	str	w10, [x2]
  436744:	ldp	x29, x30, [sp], #16
  436748:	ret
  43674c:	lsr	w11, w10, #26
  436750:	cmp	w11, #0x0
  436754:	and	w8, w8, #0x3ffffe0
  436758:	cset	w11, eq  // eq = none
  43675c:	cmp	x9, #0x5
  436760:	cset	w12, hi  // hi = pmore
  436764:	cmp	w8, #0x360
  436768:	and	w8, w12, w11
  43676c:	cset	w11, eq  // eq = none
  436770:	orr	w8, w8, w11
  436774:	cmp	w8, #0x0
  436778:	csinv	w10, w10, wzr, eq  // eq = none
  43677c:	csel	w0, wzr, w9, ne  // ne = any
  436780:	b	436740 <feof@plt+0x32ea0>
  436784:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  436788:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43678c:	add	x0, x0, #0x583
  436790:	add	x2, x2, #0x626
  436794:	mov	w1, #0x71b                 	// #1819
  436798:	bl	429434 <feof@plt+0x25b94>
  43679c:	stp	x29, x30, [sp, #-48]!
  4367a0:	stp	x22, x21, [sp, #16]
  4367a4:	stp	x20, x19, [sp, #32]
  4367a8:	mov	x29, sp
  4367ac:	ldrh	w8, [x1, #2]
  4367b0:	mov	x20, x1
  4367b4:	mov	x19, x0
  4367b8:	cbz	w8, 436a40 <feof@plt+0x331a0>
  4367bc:	ldr	w8, [x19, #40]
  4367c0:	cmp	w8, #0x1
  4367c4:	b.lt	436824 <feof@plt+0x32f84>  // b.tstop
  4367c8:	ldr	x8, [x19, #8]
  4367cc:	ldr	w9, [x19, #28]
  4367d0:	ldr	w10, [x8, #200]
  4367d4:	cmp	w9, w10
  4367d8:	b.gt	436824 <feof@plt+0x32f84>
  4367dc:	ldr	x21, [x8, #176]
  4367e0:	ldp	x8, x9, [x21, #24]
  4367e4:	cmp	x9, x8
  4367e8:	b.ne	4367fc <feof@plt+0x32f5c>  // b.any
  4367ec:	mov	w1, #0x1                   	// #1
  4367f0:	mov	x0, x21
  4367f4:	bl	47bae8 <_obstack_newchunk@@Base>
  4367f8:	ldr	x8, [x21, #24]
  4367fc:	add	x9, x8, #0x1
  436800:	mov	w10, #0xa                   	// #10
  436804:	adrp	x11, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  436808:	str	x9, [x21, #24]
  43680c:	strb	w10, [x8]
  436810:	ldr	x8, [x19, #8]
  436814:	ldrb	w9, [x11, #1368]
  436818:	strb	wzr, [x19, #65]
  43681c:	str	wzr, [x8, #200]
  436820:	tbnz	w9, #6, 436868 <feof@plt+0x32fc8>
  436824:	ldr	x8, [x19, #8]
  436828:	ldr	x21, [x8, #176]
  43682c:	ldp	x8, x9, [x21, #24]
  436830:	cmp	x9, x8
  436834:	b.ne	436848 <feof@plt+0x32fa8>  // b.any
  436838:	mov	w1, #0x1                   	// #1
  43683c:	mov	x0, x21
  436840:	bl	47bae8 <_obstack_newchunk@@Base>
  436844:	ldr	x8, [x21, #24]
  436848:	add	x9, x8, #0x1
  43684c:	mov	w10, #0x5b                  	// #91
  436850:	str	x9, [x21, #24]
  436854:	strb	w10, [x8]
  436858:	ldr	x8, [x19, #8]
  43685c:	ldr	w9, [x8, #200]
  436860:	add	w9, w9, #0x1
  436864:	str	w9, [x8, #200]
  436868:	ldr	x8, [x19, #8]
  43686c:	ldrh	w2, [x20]
  436870:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  436874:	add	x1, x1, #0x5d1
  436878:	add	x0, x8, #0xcc
  43687c:	bl	403340 <sprintf@plt>
  436880:	ldr	x8, [x19, #8]
  436884:	add	x21, x8, #0xcc
  436888:	mov	x0, x21
  43688c:	bl	4030b0 <strlen@plt>
  436890:	add	x2, x21, x0
  436894:	mov	x0, x19
  436898:	mov	x1, x21
  43689c:	bl	435edc <feof@plt+0x3263c>
  4368a0:	ldr	w8, [x19, #40]
  4368a4:	cmp	w8, #0x1
  4368a8:	b.lt	436908 <feof@plt+0x33068>  // b.tstop
  4368ac:	ldr	x8, [x19, #8]
  4368b0:	ldr	w9, [x19, #28]
  4368b4:	ldr	w10, [x8, #200]
  4368b8:	cmp	w9, w10
  4368bc:	b.gt	436908 <feof@plt+0x33068>
  4368c0:	ldr	x21, [x8, #176]
  4368c4:	adrp	x10, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  4368c8:	ldrh	w22, [x10, #1274]
  4368cc:	ldp	x8, x9, [x21, #24]
  4368d0:	cmp	x9, x8
  4368d4:	b.ne	4368e8 <feof@plt+0x33048>  // b.any
  4368d8:	mov	w1, #0x1                   	// #1
  4368dc:	mov	x0, x21
  4368e0:	bl	47bae8 <_obstack_newchunk@@Base>
  4368e4:	ldr	x8, [x21, #24]
  4368e8:	add	x9, x8, #0x1
  4368ec:	mov	w10, #0xa                   	// #10
  4368f0:	str	x9, [x21, #24]
  4368f4:	strb	w10, [x8]
  4368f8:	ldr	x8, [x19, #8]
  4368fc:	strb	wzr, [x19, #65]
  436900:	str	wzr, [x8, #200]
  436904:	tbnz	w22, #6, 43694c <feof@plt+0x330ac>
  436908:	ldr	x8, [x19, #8]
  43690c:	ldr	x21, [x8, #176]
  436910:	ldp	x8, x9, [x21, #24]
  436914:	cmp	x9, x8
  436918:	b.ne	43692c <feof@plt+0x3308c>  // b.any
  43691c:	mov	w1, #0x1                   	// #1
  436920:	mov	x0, x21
  436924:	bl	47bae8 <_obstack_newchunk@@Base>
  436928:	ldr	x8, [x21, #24]
  43692c:	add	x9, x8, #0x1
  436930:	mov	w10, #0x2c                  	// #44
  436934:	str	x9, [x21, #24]
  436938:	strb	w10, [x8]
  43693c:	ldr	x8, [x19, #8]
  436940:	ldr	w9, [x8, #200]
  436944:	add	w9, w9, #0x1
  436948:	str	w9, [x8, #200]
  43694c:	ldr	x8, [x19, #8]
  436950:	ldrh	w2, [x20, #2]
  436954:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  436958:	add	x1, x1, #0x5d1
  43695c:	add	x0, x8, #0xcc
  436960:	bl	403340 <sprintf@plt>
  436964:	ldr	x8, [x19, #8]
  436968:	add	x20, x8, #0xcc
  43696c:	mov	x0, x20
  436970:	bl	4030b0 <strlen@plt>
  436974:	add	x2, x20, x0
  436978:	mov	x0, x19
  43697c:	mov	x1, x20
  436980:	bl	435edc <feof@plt+0x3263c>
  436984:	ldr	w8, [x19, #40]
  436988:	cmp	w8, #0x0
  43698c:	b.le	4369ec <feof@plt+0x3314c>
  436990:	ldr	x8, [x19, #8]
  436994:	ldr	w9, [x19, #28]
  436998:	ldr	w10, [x8, #200]
  43699c:	cmp	w9, w10
  4369a0:	b.gt	4369ec <feof@plt+0x3314c>
  4369a4:	ldr	x20, [x8, #176]
  4369a8:	ldp	x8, x9, [x20, #24]
  4369ac:	cmp	x9, x8
  4369b0:	b.ne	4369c4 <feof@plt+0x33124>  // b.any
  4369b4:	mov	w1, #0x1                   	// #1
  4369b8:	mov	x0, x20
  4369bc:	bl	47bae8 <_obstack_newchunk@@Base>
  4369c0:	ldr	x8, [x20, #24]
  4369c4:	add	x9, x8, #0x1
  4369c8:	mov	w10, #0xa                   	// #10
  4369cc:	adrp	x11, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  4369d0:	str	x9, [x20, #24]
  4369d4:	strb	w10, [x8]
  4369d8:	ldr	x8, [x19, #8]
  4369dc:	ldrb	w9, [x11, #1372]
  4369e0:	strb	wzr, [x19, #65]
  4369e4:	str	wzr, [x8, #200]
  4369e8:	tbnz	w9, #6, 436a30 <feof@plt+0x33190>
  4369ec:	ldr	x8, [x19, #8]
  4369f0:	ldr	x20, [x8, #176]
  4369f4:	ldp	x8, x9, [x20, #24]
  4369f8:	cmp	x9, x8
  4369fc:	b.ne	436a10 <feof@plt+0x33170>  // b.any
  436a00:	mov	w1, #0x1                   	// #1
  436a04:	mov	x0, x20
  436a08:	bl	47bae8 <_obstack_newchunk@@Base>
  436a0c:	ldr	x8, [x20, #24]
  436a10:	add	x9, x8, #0x1
  436a14:	mov	w10, #0x5d                  	// #93
  436a18:	str	x9, [x20, #24]
  436a1c:	strb	w10, [x8]
  436a20:	ldr	x8, [x19, #8]
  436a24:	ldr	w9, [x8, #200]
  436a28:	add	w9, w9, #0x1
  436a2c:	str	w9, [x8, #200]
  436a30:	ldp	x20, x19, [sp, #32]
  436a34:	ldp	x22, x21, [sp, #16]
  436a38:	ldp	x29, x30, [sp], #48
  436a3c:	ret
  436a40:	ldr	x8, [x19, #8]
  436a44:	ldrh	w2, [x20]
  436a48:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  436a4c:	add	x1, x1, #0x5d1
  436a50:	add	x0, x8, #0xcc
  436a54:	bl	403340 <sprintf@plt>
  436a58:	ldr	x8, [x19, #8]
  436a5c:	add	x20, x8, #0xcc
  436a60:	mov	x0, x20
  436a64:	bl	4030b0 <strlen@plt>
  436a68:	add	x2, x20, x0
  436a6c:	mov	x0, x19
  436a70:	mov	x1, x20
  436a74:	ldp	x20, x19, [sp, #32]
  436a78:	ldp	x22, x21, [sp, #16]
  436a7c:	ldp	x29, x30, [sp], #48
  436a80:	b	435edc <feof@plt+0x3263c>
  436a84:	stp	x29, x30, [sp, #-48]!
  436a88:	stp	x22, x21, [sp, #16]
  436a8c:	stp	x20, x19, [sp, #32]
  436a90:	mov	x29, sp
  436a94:	ldr	x8, [x1, #8]
  436a98:	mov	x20, x1
  436a9c:	mov	x19, x0
  436aa0:	cbz	x8, 436d28 <feof@plt+0x33488>
  436aa4:	ldr	w8, [x19, #40]
  436aa8:	cmp	w8, #0x1
  436aac:	b.lt	436b0c <feof@plt+0x3326c>  // b.tstop
  436ab0:	ldr	x8, [x19, #8]
  436ab4:	ldr	w9, [x19, #28]
  436ab8:	ldr	w10, [x8, #200]
  436abc:	cmp	w9, w10
  436ac0:	b.gt	436b0c <feof@plt+0x3326c>
  436ac4:	ldr	x21, [x8, #176]
  436ac8:	ldp	x8, x9, [x21, #24]
  436acc:	cmp	x9, x8
  436ad0:	b.ne	436ae4 <feof@plt+0x33244>  // b.any
  436ad4:	mov	w1, #0x1                   	// #1
  436ad8:	mov	x0, x21
  436adc:	bl	47bae8 <_obstack_newchunk@@Base>
  436ae0:	ldr	x8, [x21, #24]
  436ae4:	add	x9, x8, #0x1
  436ae8:	mov	w10, #0xa                   	// #10
  436aec:	adrp	x11, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  436af0:	str	x9, [x21, #24]
  436af4:	strb	w10, [x8]
  436af8:	ldr	x8, [x19, #8]
  436afc:	ldrb	w9, [x11, #1368]
  436b00:	strb	wzr, [x19, #65]
  436b04:	str	wzr, [x8, #200]
  436b08:	tbnz	w9, #6, 436b50 <feof@plt+0x332b0>
  436b0c:	ldr	x8, [x19, #8]
  436b10:	ldr	x21, [x8, #176]
  436b14:	ldp	x8, x9, [x21, #24]
  436b18:	cmp	x9, x8
  436b1c:	b.ne	436b30 <feof@plt+0x33290>  // b.any
  436b20:	mov	w1, #0x1                   	// #1
  436b24:	mov	x0, x21
  436b28:	bl	47bae8 <_obstack_newchunk@@Base>
  436b2c:	ldr	x8, [x21, #24]
  436b30:	add	x9, x8, #0x1
  436b34:	mov	w10, #0x5b                  	// #91
  436b38:	str	x9, [x21, #24]
  436b3c:	strb	w10, [x8]
  436b40:	ldr	x8, [x19, #8]
  436b44:	ldr	w9, [x8, #200]
  436b48:	add	w9, w9, #0x1
  436b4c:	str	w9, [x8, #200]
  436b50:	ldr	x8, [x19, #8]
  436b54:	ldr	x2, [x20]
  436b58:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  436b5c:	add	x1, x1, #0x5d1
  436b60:	add	x0, x8, #0xcc
  436b64:	bl	403340 <sprintf@plt>
  436b68:	ldr	x8, [x19, #8]
  436b6c:	add	x21, x8, #0xcc
  436b70:	mov	x0, x21
  436b74:	bl	4030b0 <strlen@plt>
  436b78:	add	x2, x21, x0
  436b7c:	mov	x0, x19
  436b80:	mov	x1, x21
  436b84:	bl	435edc <feof@plt+0x3263c>
  436b88:	ldr	w8, [x19, #40]
  436b8c:	cmp	w8, #0x1
  436b90:	b.lt	436bf0 <feof@plt+0x33350>  // b.tstop
  436b94:	ldr	x8, [x19, #8]
  436b98:	ldr	w9, [x19, #28]
  436b9c:	ldr	w10, [x8, #200]
  436ba0:	cmp	w9, w10
  436ba4:	b.gt	436bf0 <feof@plt+0x33350>
  436ba8:	ldr	x21, [x8, #176]
  436bac:	adrp	x10, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  436bb0:	ldrh	w22, [x10, #1274]
  436bb4:	ldp	x8, x9, [x21, #24]
  436bb8:	cmp	x9, x8
  436bbc:	b.ne	436bd0 <feof@plt+0x33330>  // b.any
  436bc0:	mov	w1, #0x1                   	// #1
  436bc4:	mov	x0, x21
  436bc8:	bl	47bae8 <_obstack_newchunk@@Base>
  436bcc:	ldr	x8, [x21, #24]
  436bd0:	add	x9, x8, #0x1
  436bd4:	mov	w10, #0xa                   	// #10
  436bd8:	str	x9, [x21, #24]
  436bdc:	strb	w10, [x8]
  436be0:	ldr	x8, [x19, #8]
  436be4:	strb	wzr, [x19, #65]
  436be8:	str	wzr, [x8, #200]
  436bec:	tbnz	w22, #6, 436c34 <feof@plt+0x33394>
  436bf0:	ldr	x8, [x19, #8]
  436bf4:	ldr	x21, [x8, #176]
  436bf8:	ldp	x8, x9, [x21, #24]
  436bfc:	cmp	x9, x8
  436c00:	b.ne	436c14 <feof@plt+0x33374>  // b.any
  436c04:	mov	w1, #0x1                   	// #1
  436c08:	mov	x0, x21
  436c0c:	bl	47bae8 <_obstack_newchunk@@Base>
  436c10:	ldr	x8, [x21, #24]
  436c14:	add	x9, x8, #0x1
  436c18:	mov	w10, #0x2c                  	// #44
  436c1c:	str	x9, [x21, #24]
  436c20:	strb	w10, [x8]
  436c24:	ldr	x8, [x19, #8]
  436c28:	ldr	w9, [x8, #200]
  436c2c:	add	w9, w9, #0x1
  436c30:	str	w9, [x8, #200]
  436c34:	ldr	x8, [x19, #8]
  436c38:	ldr	x2, [x20, #8]
  436c3c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  436c40:	add	x1, x1, #0x5d1
  436c44:	add	x0, x8, #0xcc
  436c48:	bl	403340 <sprintf@plt>
  436c4c:	ldr	x8, [x19, #8]
  436c50:	add	x20, x8, #0xcc
  436c54:	mov	x0, x20
  436c58:	bl	4030b0 <strlen@plt>
  436c5c:	add	x2, x20, x0
  436c60:	mov	x0, x19
  436c64:	mov	x1, x20
  436c68:	bl	435edc <feof@plt+0x3263c>
  436c6c:	ldr	w8, [x19, #40]
  436c70:	cmp	w8, #0x0
  436c74:	b.le	436cd4 <feof@plt+0x33434>
  436c78:	ldr	x8, [x19, #8]
  436c7c:	ldr	w9, [x19, #28]
  436c80:	ldr	w10, [x8, #200]
  436c84:	cmp	w9, w10
  436c88:	b.gt	436cd4 <feof@plt+0x33434>
  436c8c:	ldr	x20, [x8, #176]
  436c90:	ldp	x8, x9, [x20, #24]
  436c94:	cmp	x9, x8
  436c98:	b.ne	436cac <feof@plt+0x3340c>  // b.any
  436c9c:	mov	w1, #0x1                   	// #1
  436ca0:	mov	x0, x20
  436ca4:	bl	47bae8 <_obstack_newchunk@@Base>
  436ca8:	ldr	x8, [x20, #24]
  436cac:	add	x9, x8, #0x1
  436cb0:	mov	w10, #0xa                   	// #10
  436cb4:	adrp	x11, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  436cb8:	str	x9, [x20, #24]
  436cbc:	strb	w10, [x8]
  436cc0:	ldr	x8, [x19, #8]
  436cc4:	ldrb	w9, [x11, #1372]
  436cc8:	strb	wzr, [x19, #65]
  436ccc:	str	wzr, [x8, #200]
  436cd0:	tbnz	w9, #6, 436d18 <feof@plt+0x33478>
  436cd4:	ldr	x8, [x19, #8]
  436cd8:	ldr	x20, [x8, #176]
  436cdc:	ldp	x8, x9, [x20, #24]
  436ce0:	cmp	x9, x8
  436ce4:	b.ne	436cf8 <feof@plt+0x33458>  // b.any
  436ce8:	mov	w1, #0x1                   	// #1
  436cec:	mov	x0, x20
  436cf0:	bl	47bae8 <_obstack_newchunk@@Base>
  436cf4:	ldr	x8, [x20, #24]
  436cf8:	add	x9, x8, #0x1
  436cfc:	mov	w10, #0x5d                  	// #93
  436d00:	str	x9, [x20, #24]
  436d04:	strb	w10, [x8]
  436d08:	ldr	x8, [x19, #8]
  436d0c:	ldr	w9, [x8, #200]
  436d10:	add	w9, w9, #0x1
  436d14:	str	w9, [x8, #200]
  436d18:	ldp	x20, x19, [sp, #32]
  436d1c:	ldp	x22, x21, [sp, #16]
  436d20:	ldp	x29, x30, [sp], #48
  436d24:	ret
  436d28:	ldr	x8, [x19, #8]
  436d2c:	ldr	x2, [x20]
  436d30:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  436d34:	add	x1, x1, #0x5d1
  436d38:	add	x0, x8, #0xcc
  436d3c:	bl	403340 <sprintf@plt>
  436d40:	ldr	x8, [x19, #8]
  436d44:	add	x20, x8, #0xcc
  436d48:	mov	x0, x20
  436d4c:	bl	4030b0 <strlen@plt>
  436d50:	add	x2, x20, x0
  436d54:	mov	x0, x19
  436d58:	mov	x1, x20
  436d5c:	ldp	x20, x19, [sp, #32]
  436d60:	ldp	x22, x21, [sp, #16]
  436d64:	ldp	x29, x30, [sp], #48
  436d68:	b	435edc <feof@plt+0x3263c>
  436d6c:	stp	x29, x30, [sp, #-48]!
  436d70:	stp	x22, x21, [sp, #16]
  436d74:	stp	x20, x19, [sp, #32]
  436d78:	mov	x29, sp
  436d7c:	ldr	x8, [x1, #8]
  436d80:	mov	x20, x1
  436d84:	mov	x19, x0
  436d88:	cbz	x8, 437010 <feof@plt+0x33770>
  436d8c:	ldr	w8, [x19, #40]
  436d90:	cmp	w8, #0x1
  436d94:	b.lt	436df4 <feof@plt+0x33554>  // b.tstop
  436d98:	ldr	x8, [x19, #8]
  436d9c:	ldr	w9, [x19, #28]
  436da0:	ldr	w10, [x8, #200]
  436da4:	cmp	w9, w10
  436da8:	b.gt	436df4 <feof@plt+0x33554>
  436dac:	ldr	x21, [x8, #176]
  436db0:	ldp	x8, x9, [x21, #24]
  436db4:	cmp	x9, x8
  436db8:	b.ne	436dcc <feof@plt+0x3352c>  // b.any
  436dbc:	mov	w1, #0x1                   	// #1
  436dc0:	mov	x0, x21
  436dc4:	bl	47bae8 <_obstack_newchunk@@Base>
  436dc8:	ldr	x8, [x21, #24]
  436dcc:	add	x9, x8, #0x1
  436dd0:	mov	w10, #0xa                   	// #10
  436dd4:	adrp	x11, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  436dd8:	str	x9, [x21, #24]
  436ddc:	strb	w10, [x8]
  436de0:	ldr	x8, [x19, #8]
  436de4:	ldrb	w9, [x11, #1368]
  436de8:	strb	wzr, [x19, #65]
  436dec:	str	wzr, [x8, #200]
  436df0:	tbnz	w9, #6, 436e38 <feof@plt+0x33598>
  436df4:	ldr	x8, [x19, #8]
  436df8:	ldr	x21, [x8, #176]
  436dfc:	ldp	x8, x9, [x21, #24]
  436e00:	cmp	x9, x8
  436e04:	b.ne	436e18 <feof@plt+0x33578>  // b.any
  436e08:	mov	w1, #0x1                   	// #1
  436e0c:	mov	x0, x21
  436e10:	bl	47bae8 <_obstack_newchunk@@Base>
  436e14:	ldr	x8, [x21, #24]
  436e18:	add	x9, x8, #0x1
  436e1c:	mov	w10, #0x5b                  	// #91
  436e20:	str	x9, [x21, #24]
  436e24:	strb	w10, [x8]
  436e28:	ldr	x8, [x19, #8]
  436e2c:	ldr	w9, [x8, #200]
  436e30:	add	w9, w9, #0x1
  436e34:	str	w9, [x8, #200]
  436e38:	ldr	x8, [x19, #8]
  436e3c:	ldr	x2, [x20]
  436e40:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  436e44:	add	x1, x1, #0x5d1
  436e48:	add	x0, x8, #0xcc
  436e4c:	bl	403340 <sprintf@plt>
  436e50:	ldr	x8, [x19, #8]
  436e54:	add	x21, x8, #0xcc
  436e58:	mov	x0, x21
  436e5c:	bl	4030b0 <strlen@plt>
  436e60:	add	x2, x21, x0
  436e64:	mov	x0, x19
  436e68:	mov	x1, x21
  436e6c:	bl	435edc <feof@plt+0x3263c>
  436e70:	ldr	w8, [x19, #40]
  436e74:	cmp	w8, #0x1
  436e78:	b.lt	436ed8 <feof@plt+0x33638>  // b.tstop
  436e7c:	ldr	x8, [x19, #8]
  436e80:	ldr	w9, [x19, #28]
  436e84:	ldr	w10, [x8, #200]
  436e88:	cmp	w9, w10
  436e8c:	b.gt	436ed8 <feof@plt+0x33638>
  436e90:	ldr	x21, [x8, #176]
  436e94:	adrp	x10, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  436e98:	ldrh	w22, [x10, #1274]
  436e9c:	ldp	x8, x9, [x21, #24]
  436ea0:	cmp	x9, x8
  436ea4:	b.ne	436eb8 <feof@plt+0x33618>  // b.any
  436ea8:	mov	w1, #0x1                   	// #1
  436eac:	mov	x0, x21
  436eb0:	bl	47bae8 <_obstack_newchunk@@Base>
  436eb4:	ldr	x8, [x21, #24]
  436eb8:	add	x9, x8, #0x1
  436ebc:	mov	w10, #0xa                   	// #10
  436ec0:	str	x9, [x21, #24]
  436ec4:	strb	w10, [x8]
  436ec8:	ldr	x8, [x19, #8]
  436ecc:	strb	wzr, [x19, #65]
  436ed0:	str	wzr, [x8, #200]
  436ed4:	tbnz	w22, #6, 436f1c <feof@plt+0x3367c>
  436ed8:	ldr	x8, [x19, #8]
  436edc:	ldr	x21, [x8, #176]
  436ee0:	ldp	x8, x9, [x21, #24]
  436ee4:	cmp	x9, x8
  436ee8:	b.ne	436efc <feof@plt+0x3365c>  // b.any
  436eec:	mov	w1, #0x1                   	// #1
  436ef0:	mov	x0, x21
  436ef4:	bl	47bae8 <_obstack_newchunk@@Base>
  436ef8:	ldr	x8, [x21, #24]
  436efc:	add	x9, x8, #0x1
  436f00:	mov	w10, #0x2c                  	// #44
  436f04:	str	x9, [x21, #24]
  436f08:	strb	w10, [x8]
  436f0c:	ldr	x8, [x19, #8]
  436f10:	ldr	w9, [x8, #200]
  436f14:	add	w9, w9, #0x1
  436f18:	str	w9, [x8, #200]
  436f1c:	ldr	x8, [x19, #8]
  436f20:	ldr	x2, [x20, #8]
  436f24:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  436f28:	add	x1, x1, #0x5d1
  436f2c:	add	x0, x8, #0xcc
  436f30:	bl	403340 <sprintf@plt>
  436f34:	ldr	x8, [x19, #8]
  436f38:	add	x20, x8, #0xcc
  436f3c:	mov	x0, x20
  436f40:	bl	4030b0 <strlen@plt>
  436f44:	add	x2, x20, x0
  436f48:	mov	x0, x19
  436f4c:	mov	x1, x20
  436f50:	bl	435edc <feof@plt+0x3263c>
  436f54:	ldr	w8, [x19, #40]
  436f58:	cmp	w8, #0x0
  436f5c:	b.le	436fbc <feof@plt+0x3371c>
  436f60:	ldr	x8, [x19, #8]
  436f64:	ldr	w9, [x19, #28]
  436f68:	ldr	w10, [x8, #200]
  436f6c:	cmp	w9, w10
  436f70:	b.gt	436fbc <feof@plt+0x3371c>
  436f74:	ldr	x20, [x8, #176]
  436f78:	ldp	x8, x9, [x20, #24]
  436f7c:	cmp	x9, x8
  436f80:	b.ne	436f94 <feof@plt+0x336f4>  // b.any
  436f84:	mov	w1, #0x1                   	// #1
  436f88:	mov	x0, x20
  436f8c:	bl	47bae8 <_obstack_newchunk@@Base>
  436f90:	ldr	x8, [x20, #24]
  436f94:	add	x9, x8, #0x1
  436f98:	mov	w10, #0xa                   	// #10
  436f9c:	adrp	x11, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  436fa0:	str	x9, [x20, #24]
  436fa4:	strb	w10, [x8]
  436fa8:	ldr	x8, [x19, #8]
  436fac:	ldrb	w9, [x11, #1372]
  436fb0:	strb	wzr, [x19, #65]
  436fb4:	str	wzr, [x8, #200]
  436fb8:	tbnz	w9, #6, 437000 <feof@plt+0x33760>
  436fbc:	ldr	x8, [x19, #8]
  436fc0:	ldr	x20, [x8, #176]
  436fc4:	ldp	x8, x9, [x20, #24]
  436fc8:	cmp	x9, x8
  436fcc:	b.ne	436fe0 <feof@plt+0x33740>  // b.any
  436fd0:	mov	w1, #0x1                   	// #1
  436fd4:	mov	x0, x20
  436fd8:	bl	47bae8 <_obstack_newchunk@@Base>
  436fdc:	ldr	x8, [x20, #24]
  436fe0:	add	x9, x8, #0x1
  436fe4:	mov	w10, #0x5d                  	// #93
  436fe8:	str	x9, [x20, #24]
  436fec:	strb	w10, [x8]
  436ff0:	ldr	x8, [x19, #8]
  436ff4:	ldr	w9, [x8, #200]
  436ff8:	add	w9, w9, #0x1
  436ffc:	str	w9, [x8, #200]
  437000:	ldp	x20, x19, [sp, #32]
  437004:	ldp	x22, x21, [sp, #16]
  437008:	ldp	x29, x30, [sp], #48
  43700c:	ret
  437010:	ldr	x8, [x19, #8]
  437014:	ldr	x2, [x20]
  437018:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43701c:	add	x1, x1, #0x5d1
  437020:	add	x0, x8, #0xcc
  437024:	bl	403340 <sprintf@plt>
  437028:	ldr	x8, [x19, #8]
  43702c:	add	x20, x8, #0xcc
  437030:	mov	x0, x20
  437034:	bl	4030b0 <strlen@plt>
  437038:	add	x2, x20, x0
  43703c:	mov	x0, x19
  437040:	mov	x1, x20
  437044:	ldp	x20, x19, [sp, #32]
  437048:	ldp	x22, x21, [sp, #16]
  43704c:	ldp	x29, x30, [sp], #48
  437050:	b	435edc <feof@plt+0x3263c>
  437054:	stp	x29, x30, [sp, #-48]!
  437058:	str	x21, [sp, #16]
  43705c:	stp	x20, x19, [sp, #32]
  437060:	mov	x29, sp
  437064:	adrp	x19, 48f000 <_obstack_memory_used@@Base+0x132fc>
  437068:	add	x19, x19, #0x23b
  43706c:	mov	w0, wzr
  437070:	mov	x1, x19
  437074:	bl	403420 <setlocale@plt>
  437078:	mov	w0, #0x5                   	// #5
  43707c:	mov	x1, x19
  437080:	bl	403420 <setlocale@plt>
  437084:	adrp	x19, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  437088:	add	x19, x19, #0xeef
  43708c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437090:	add	x1, x1, #0x637
  437094:	mov	x0, x19
  437098:	bl	403040 <bindtextdomain@plt>
  43709c:	mov	x0, x19
  4370a0:	bl	402ff0 <textdomain@plt>
  4370a4:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4370a8:	add	x0, x0, #0x649
  4370ac:	bl	4033e0 <gettext@plt>
  4370b0:	adrp	x20, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4370b4:	str	x0, [x20, #1016]
  4370b8:	adrp	x0, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  4370bc:	add	x0, x0, #0x497
  4370c0:	bl	4033e0 <gettext@plt>
  4370c4:	adrp	x21, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4370c8:	str	x0, [x21, #1024]
  4370cc:	mov	w0, #0xe                   	// #14
  4370d0:	bl	403780 <nl_langinfo@plt>
  4370d4:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4370d8:	str	x0, [x8, #384]
  4370dc:	cbz	x0, 437114 <feof@plt+0x33874>
  4370e0:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4370e4:	add	x1, x1, #0x64b
  4370e8:	mov	x19, x0
  4370ec:	bl	403720 <strcasecmp@plt>
  4370f0:	cbz	w0, 437108 <feof@plt+0x33868>
  4370f4:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4370f8:	add	x1, x1, #0x651
  4370fc:	mov	x0, x19
  437100:	bl	403720 <strcasecmp@plt>
  437104:	cbnz	w0, 437114 <feof@plt+0x33874>
  437108:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  43710c:	mov	w9, #0x1                   	// #1
  437110:	strb	w9, [x8, #392]
  437114:	ldr	x0, [x20, #1016]
  437118:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43711c:	add	x1, x1, #0x649
  437120:	bl	403640 <strcmp@plt>
  437124:	cbnz	w0, 437168 <feof@plt+0x338c8>
  437128:	ldr	x0, [x21, #1024]
  43712c:	adrp	x19, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  437130:	add	x19, x19, #0x497
  437134:	mov	x1, x19
  437138:	bl	403640 <strcmp@plt>
  43713c:	cbnz	w0, 437168 <feof@plt+0x338c8>
  437140:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  437144:	ldrb	w8, [x8, #392]
  437148:	str	x19, [x20, #1016]
  43714c:	cbz	w8, 437168 <feof@plt+0x338c8>
  437150:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437154:	adrp	x9, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437158:	add	x8, x8, #0x656
  43715c:	add	x9, x9, #0x65a
  437160:	str	x8, [x20, #1016]
  437164:	str	x9, [x21, #1024]
  437168:	ldp	x20, x19, [sp, #32]
  43716c:	ldr	x21, [sp, #16]
  437170:	ldp	x29, x30, [sp], #48
  437174:	ret
  437178:	stp	x29, x30, [sp, #-48]!
  43717c:	str	x21, [sp, #16]
  437180:	stp	x20, x19, [sp, #32]
  437184:	mov	x29, sp
  437188:	mov	x19, x0
  43718c:	mov	x0, xzr
  437190:	mov	x1, x19
  437194:	mov	x2, xzr
  437198:	bl	4034f0 <mbstowcs@plt>
  43719c:	add	x2, x0, #0x1
  4371a0:	lsl	x8, x2, #2
  4371a4:	add	x8, x8, #0xf
  4371a8:	and	x8, x8, #0xfffffffffffffff0
  4371ac:	mov	x9, sp
  4371b0:	sub	x21, x9, x8
  4371b4:	mov	x20, x0
  4371b8:	mov	sp, x21
  4371bc:	mov	x0, x21
  4371c0:	mov	x1, x19
  4371c4:	bl	4034f0 <mbstowcs@plt>
  4371c8:	mov	x0, x21
  4371cc:	mov	x1, x20
  4371d0:	bl	403750 <wcswidth@plt>
  4371d4:	sxtw	x0, w0
  4371d8:	mov	sp, x29
  4371dc:	ldp	x20, x19, [sp, #32]
  4371e0:	ldr	x21, [sp, #16]
  4371e4:	ldp	x29, x30, [sp], #48
  4371e8:	ret
  4371ec:	stp	x29, x30, [sp, #-32]!
  4371f0:	stp	x20, x19, [sp, #16]
  4371f4:	mov	x29, sp
  4371f8:	bl	437178 <feof@plt+0x338d8>
  4371fc:	mov	x19, x0
  437200:	add	x0, x0, #0x1
  437204:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  437208:	mov	w1, #0x20                  	// #32
  43720c:	mov	x2, x19
  437210:	mov	x20, x0
  437214:	bl	4031f0 <memset@plt>
  437218:	strb	wzr, [x20, x19]
  43721c:	mov	x0, x20
  437220:	ldp	x20, x19, [sp, #16]
  437224:	ldp	x29, x30, [sp], #32
  437228:	ret
  43722c:	stp	x29, x30, [sp, #-64]!
  437230:	str	x23, [sp, #16]
  437234:	stp	x22, x21, [sp, #32]
  437238:	stp	x20, x19, [sp, #48]
  43723c:	mov	x29, sp
  437240:	adrp	x20, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  437244:	ldr	x21, [x20, #424]
  437248:	cbz	x21, 4372c0 <feof@plt+0x33a20>
  43724c:	mov	x19, x21
  437250:	ldr	x8, [x19, #-8]!
  437254:	cbz	x8, 4372b4 <feof@plt+0x33a14>
  437258:	mov	w9, #0x58                  	// #88
  43725c:	mul	x22, x8, x9
  437260:	b	437274 <feof@plt+0x339d4>
  437264:	bl	4031d0 <free@plt>
  437268:	stur	xzr, [x23, #-8]
  43726c:	subs	x22, x22, #0x58
  437270:	b.eq	4372b4 <feof@plt+0x33a14>  // b.none
  437274:	add	x23, x21, x22
  437278:	ldur	x0, [x23, #-72]
  43727c:	cbz	x0, 437288 <feof@plt+0x339e8>
  437280:	bl	403150 <fclose@plt>
  437284:	stur	xzr, [x23, #-72]
  437288:	ldur	x0, [x23, #-64]
  43728c:	cbz	x0, 437298 <feof@plt+0x339f8>
  437290:	bl	4031d0 <free@plt>
  437294:	stur	xzr, [x23, #-64]
  437298:	add	x23, x21, x22
  43729c:	ldur	x0, [x23, #-8]
  4372a0:	cbz	x0, 43726c <feof@plt+0x339cc>
  4372a4:	ldr	w8, [x0]
  4372a8:	tbz	w8, #31, 437264 <feof@plt+0x339c4>
  4372ac:	str	wzr, [x0, #4]
  4372b0:	b	43726c <feof@plt+0x339cc>
  4372b4:	mov	x0, x19
  4372b8:	bl	4035b0 <_ZdaPv@plt>
  4372bc:	str	xzr, [x20, #424]
  4372c0:	ldp	x20, x19, [sp, #48]
  4372c4:	ldp	x22, x21, [sp, #32]
  4372c8:	ldr	x23, [sp, #16]
  4372cc:	ldp	x29, x30, [sp], #64
  4372d0:	ret
  4372d4:	stp	x29, x30, [sp, #-64]!
  4372d8:	str	x23, [sp, #16]
  4372dc:	stp	x22, x21, [sp, #32]
  4372e0:	stp	x20, x19, [sp, #48]
  4372e4:	mov	x29, sp
  4372e8:	cbz	x0, 43739c <feof@plt+0x33afc>
  4372ec:	mov	x19, x0
  4372f0:	bl	4392f8 <feof@plt+0x35a58>
  4372f4:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4372f8:	ldr	x22, [x8, #424]
  4372fc:	mov	x21, xzr
  437300:	mov	x20, xzr
  437304:	b	437314 <feof@plt+0x33a74>
  437308:	add	x21, x21, #0x58
  43730c:	cmp	x21, #0x580
  437310:	b.eq	437340 <feof@plt+0x33aa0>  // b.none
  437314:	add	x23, x22, x21
  437318:	ldr	x0, [x23, #8]
  43731c:	cbz	x0, 437308 <feof@plt+0x33a68>
  437320:	mov	x1, x19
  437324:	bl	403640 <strcmp@plt>
  437328:	cbnz	w0, 437308 <feof@plt+0x33a68>
  43732c:	ldr	w8, [x22, x21]
  437330:	mov	x20, x23
  437334:	add	w8, w8, #0x1
  437338:	str	w8, [x22, x21]
  43733c:	b	437308 <feof@plt+0x33a68>
  437340:	cbz	x20, 437388 <feof@plt+0x33ae8>
  437344:	ldr	w8, [x20]
  437348:	ldr	x0, [x20, #16]
  43734c:	str	xzr, [x20, #8]
  437350:	add	w8, w8, #0x1
  437354:	str	w8, [x20]
  437358:	cbz	x0, 437360 <feof@plt+0x33ac0>
  43735c:	bl	403150 <fclose@plt>
  437360:	ldr	x8, [x20, #80]
  437364:	str	xzr, [x20, #16]
  437368:	stp	xzr, xzr, [x20, #48]
  43736c:	str	xzr, [x20, #40]
  437370:	cbz	x8, 437378 <feof@plt+0x33ad8>
  437374:	str	wzr, [x8, #4]
  437378:	mov	w8, #0x1                   	// #1
  43737c:	str	wzr, [x20]
  437380:	str	xzr, [x20, #64]
  437384:	strb	w8, [x20, #72]
  437388:	ldp	x20, x19, [sp, #48]
  43738c:	ldp	x22, x21, [sp, #32]
  437390:	ldr	x23, [sp, #16]
  437394:	ldp	x29, x30, [sp], #64
  437398:	ret
  43739c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4373a0:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4373a4:	add	x0, x0, #0x65e
  4373a8:	add	x2, x2, #0x670
  4373ac:	mov	w1, #0x133                 	// #307
  4373b0:	bl	429434 <feof@plt+0x25b94>
  4373b4:	movi	v0.2d, #0x0
  4373b8:	mov	w8, #0x1                   	// #1
  4373bc:	str	wzr, [x0]
  4373c0:	stur	q0, [x0, #8]
  4373c4:	stur	q0, [x0, #24]
  4373c8:	stur	q0, [x0, #40]
  4373cc:	stur	q0, [x0, #56]
  4373d0:	strb	w8, [x0, #72]
  4373d4:	str	xzr, [x0, #80]
  4373d8:	ret
  4373dc:	stp	x29, x30, [sp, #-32]!
  4373e0:	str	x19, [sp, #16]
  4373e4:	mov	x29, sp
  4373e8:	mov	x19, x0
  4373ec:	ldr	x0, [x0, #16]
  4373f0:	cbz	x0, 4373fc <feof@plt+0x33b5c>
  4373f4:	bl	403150 <fclose@plt>
  4373f8:	str	xzr, [x19, #16]
  4373fc:	ldr	x0, [x19, #24]
  437400:	cbz	x0, 43740c <feof@plt+0x33b6c>
  437404:	bl	4031d0 <free@plt>
  437408:	str	xzr, [x19, #24]
  43740c:	ldr	x0, [x19, #80]
  437410:	cbz	x0, 43742c <feof@plt+0x33b8c>
  437414:	ldr	w8, [x0]
  437418:	tbnz	w8, #31, 437428 <feof@plt+0x33b88>
  43741c:	bl	4031d0 <free@plt>
  437420:	str	xzr, [x19, #80]
  437424:	b	43742c <feof@plt+0x33b8c>
  437428:	str	wzr, [x0, #4]
  43742c:	ldr	x19, [sp, #16]
  437430:	ldp	x29, x30, [sp], #32
  437434:	ret
  437438:	sub	sp, sp, #0x40
  43743c:	stp	x29, x30, [sp, #32]
  437440:	stp	x20, x19, [sp, #48]
  437444:	add	x29, sp, #0x20
  437448:	str	xzr, [sp, #8]
  43744c:	cbz	w1, 4375b4 <feof@plt+0x33d14>
  437450:	mov	w20, w1
  437454:	bl	4375e4 <feof@plt+0x33d44>
  437458:	cbz	x0, 4374d0 <feof@plt+0x33c30>
  43745c:	ldr	x9, [x0, #56]
  437460:	sxtw	x8, w20
  437464:	mov	x19, x0
  437468:	cmp	x9, x8
  43746c:	b.cc	437568 <feof@plt+0x33cc8>  // b.lo, b.ul, b.last
  437470:	ldr	x9, [x19, #80]
  437474:	cbz	x9, 4374d8 <feof@plt+0x33c38>
  437478:	ldr	w10, [x9, #4]
  43747c:	cbz	w10, 4374d8 <feof@plt+0x33c38>
  437480:	ldr	x11, [x19, #64]
  437484:	cmp	x11, #0x64
  437488:	b.hi	4374e4 <feof@plt+0x33c44>  // b.pmore
  43748c:	sub	w10, w8, #0x1
  437490:	add	x9, x9, #0x8
  437494:	mov	w12, #0x18                  	// #24
  437498:	sub	w13, w11, #0x1
  43749c:	umaddl	x10, w10, w12, x9
  4374a0:	umaddl	x9, w13, w12, x9
  4374a4:	cmp	x11, x8
  4374a8:	csel	x9, x9, x10, cc  // cc = lo, ul, last
  4374ac:	ldr	x10, [x9]
  4374b0:	cmp	x10, x8
  4374b4:	b.ls	437520 <feof@plt+0x33c80>  // b.plast
  4374b8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4374bc:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4374c0:	add	x0, x0, #0x65e
  4374c4:	add	x2, x2, #0xd0c
  4374c8:	mov	w1, #0x2b2                 	// #690
  4374cc:	bl	429434 <feof@plt+0x25b94>
  4374d0:	mov	x1, xzr
  4374d4:	b	4375bc <feof@plt+0x33d1c>
  4374d8:	mov	x9, xzr
  4374dc:	stp	xzr, xzr, [x19, #48]
  4374e0:	b	437568 <feof@plt+0x33cc8>
  4374e4:	cmp	x11, x8
  4374e8:	b.cs	4374f4 <feof@plt+0x33c54>  // b.hs, b.nlast
  4374ec:	sub	w11, w10, #0x1
  4374f0:	b	437500 <feof@plt+0x33c60>
  4374f4:	mov	w12, #0x64                  	// #100
  4374f8:	mul	x12, x8, x12
  4374fc:	udiv	x11, x12, x11
  437500:	cmp	x11, x10
  437504:	b.cs	43755c <feof@plt+0x33cbc>  // b.hs, b.nlast
  437508:	and	x10, x11, #0xffffffff
  43750c:	mov	w11, #0x18                  	// #24
  437510:	madd	x9, x10, x11, x9
  437514:	ldr	x10, [x9, #8]!
  437518:	cmp	x10, x8
  43751c:	b.hi	4375cc <feof@plt+0x33d2c>  // b.pmore
  437520:	cmp	x10, x8
  437524:	b.ne	437548 <feof@plt+0x33ca8>  // b.any
  437528:	ldr	x8, [x19, #24]
  43752c:	ldr	x10, [x9, #8]
  437530:	add	x0, x8, x10
  437534:	str	x0, [sp, #8]
  437538:	ldr	x8, [x9, #16]
  43753c:	sub	x1, x8, x10
  437540:	stur	x1, [x29, #-8]
  437544:	b	4375bc <feof@plt+0x33d1c>
  437548:	ldr	x10, [x9, #8]
  43754c:	str	x10, [x19, #48]
  437550:	ldr	x9, [x9]
  437554:	sub	x9, x9, #0x1
  437558:	b	437564 <feof@plt+0x33cc4>
  43755c:	mov	x9, xzr
  437560:	str	xzr, [x19, #48]
  437564:	str	x9, [x19, #56]
  437568:	sub	x20, x8, #0x1
  43756c:	cmp	x9, x20
  437570:	b.cs	437594 <feof@plt+0x33cf4>  // b.hs, b.nlast
  437574:	sub	x1, x29, #0x8
  437578:	add	x2, sp, #0x10
  43757c:	mov	x0, x19
  437580:	bl	4394b0 <feof@plt+0x35c10>
  437584:	tbz	w0, #0, 4375b4 <feof@plt+0x33d14>
  437588:	ldr	x8, [x19, #56]
  43758c:	cmp	x8, x20
  437590:	b.cc	437574 <feof@plt+0x33cd4>  // b.lo, b.ul, b.last
  437594:	add	x1, sp, #0x8
  437598:	sub	x2, x29, #0x8
  43759c:	mov	x0, x19
  4375a0:	bl	4394b0 <feof@plt+0x35c10>
  4375a4:	tbz	w0, #0, 4375b4 <feof@plt+0x33d14>
  4375a8:	ldr	x0, [sp, #8]
  4375ac:	ldur	x1, [x29, #-8]
  4375b0:	b	4375bc <feof@plt+0x33d1c>
  4375b4:	mov	x1, xzr
  4375b8:	mov	x0, xzr
  4375bc:	ldp	x20, x19, [sp, #48]
  4375c0:	ldp	x29, x30, [sp, #32]
  4375c4:	add	sp, sp, #0x40
  4375c8:	ret
  4375cc:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4375d0:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4375d4:	add	x0, x0, #0x65e
  4375d8:	add	x2, x2, #0xd0c
  4375dc:	mov	w1, #0x2c1                 	// #705
  4375e0:	bl	429434 <feof@plt+0x25b94>
  4375e4:	sub	sp, sp, #0x70
  4375e8:	stp	x29, x30, [sp, #48]
  4375ec:	stp	x24, x23, [sp, #64]
  4375f0:	stp	x22, x21, [sp, #80]
  4375f4:	stp	x20, x19, [sp, #96]
  4375f8:	add	x29, sp, #0x30
  4375fc:	mov	x20, x0
  437600:	adrp	x22, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  437604:	cbz	x0, 437668 <feof@plt+0x33dc8>
  437608:	bl	4392f8 <feof@plt+0x35a58>
  43760c:	ldr	x23, [x22, #424]
  437610:	mov	x21, xzr
  437614:	mov	x19, xzr
  437618:	b	437628 <feof@plt+0x33d88>
  43761c:	add	x21, x21, #0x58
  437620:	cmp	x21, #0x580
  437624:	b.eq	437654 <feof@plt+0x33db4>  // b.none
  437628:	add	x24, x23, x21
  43762c:	ldr	x0, [x24, #8]
  437630:	cbz	x0, 43761c <feof@plt+0x33d7c>
  437634:	mov	x1, x20
  437638:	bl	403640 <strcmp@plt>
  43763c:	cbnz	w0, 43761c <feof@plt+0x33d7c>
  437640:	ldr	w8, [x23, x21]
  437644:	mov	x19, x24
  437648:	add	w8, w8, #0x1
  43764c:	str	w8, [x23, x21]
  437650:	b	43761c <feof@plt+0x33d7c>
  437654:	cbz	x19, 437668 <feof@plt+0x33dc8>
  437658:	ldr	w8, [x19]
  43765c:	add	w8, w8, #0x1
  437660:	str	w8, [x19]
  437664:	b	437764 <feof@plt+0x33ec4>
  437668:	adrp	x1, 4c8000 <_obstack_memory_used@@Base+0x4c2fc>
  43766c:	add	x1, x1, #0x639
  437670:	mov	x0, x20
  437674:	bl	403620 <fopen@plt>
  437678:	cbz	x0, 43774c <feof@plt+0x33eac>
  43767c:	mov	x21, x0
  437680:	bl	4392f8 <feof@plt+0x35a58>
  437684:	ldr	x9, [x22, #424]
  437688:	mov	x8, xzr
  43768c:	ldr	w10, [x9]
  437690:	mov	x19, x9
  437694:	mov	w22, w10
  437698:	add	x13, x9, x8
  43769c:	ldr	w11, [x13, #88]!
  4376a0:	ldr	x12, [x13, #8]
  4376a4:	cmp	w11, w10
  4376a8:	b.cc	4376b8 <feof@plt+0x33e18>  // b.lo, b.ul, b.last
  4376ac:	ldr	x10, [x19, #8]
  4376b0:	cbz	x10, 4376bc <feof@plt+0x33e1c>
  4376b4:	cbnz	x12, 4376bc <feof@plt+0x33e1c>
  4376b8:	mov	x19, x13
  4376bc:	cmp	w22, w11
  4376c0:	csel	w22, w11, w22, cc  // cc = lo, ul, last
  4376c4:	cbz	x12, 4376dc <feof@plt+0x33e3c>
  4376c8:	cmp	x8, #0x4d0
  4376cc:	b.eq	4376dc <feof@plt+0x33e3c>  // b.none
  4376d0:	ldr	w10, [x19]
  4376d4:	add	x8, x8, #0x58
  4376d8:	b	437698 <feof@plt+0x33df8>
  4376dc:	ldr	x0, [x19, #16]
  4376e0:	str	x20, [x19, #8]
  4376e4:	cbz	x0, 4376ec <feof@plt+0x33e4c>
  4376e8:	bl	403150 <fclose@plt>
  4376ec:	ldr	x8, [x19, #80]
  4376f0:	str	x21, [x19, #16]
  4376f4:	stp	xzr, xzr, [x19, #48]
  4376f8:	str	xzr, [x19, #40]
  4376fc:	cbz	x8, 437704 <feof@plt+0x33e64>
  437700:	str	wzr, [x8, #4]
  437704:	add	w8, w22, #0x1
  437708:	str	w8, [x19]
  43770c:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  437710:	ldr	x0, [x8, #408]
  437714:	sub	x2, x29, #0x4
  437718:	mov	x1, x20
  43771c:	stur	wzr, [x29, #-4]
  437720:	bl	45033c <feof@plt+0x4ca9c>
  437724:	tbz	w0, #0, 437754 <feof@plt+0x33eb4>
  437728:	ldur	w0, [x29, #-4]
  43772c:	cmp	w0, #0x1
  437730:	b.ls	437780 <feof@plt+0x33ee0>  // b.plast
  437734:	add	x8, sp, #0x8
  437738:	mov	w1, #0x1                   	// #1
  43773c:	mov	w2, wzr
  437740:	bl	437804 <feof@plt+0x33f64>
  437744:	ldrsw	x8, [sp, #16]
  437748:	b	437758 <feof@plt+0x33eb8>
  43774c:	mov	x19, xzr
  437750:	b	437764 <feof@plt+0x33ec4>
  437754:	mov	x8, xzr
  437758:	str	x8, [x19, #64]
  43775c:	mov	w8, #0x1                   	// #1
  437760:	strb	w8, [x19, #72]
  437764:	mov	x0, x19
  437768:	ldp	x20, x19, [sp, #96]
  43776c:	ldp	x22, x21, [sp, #80]
  437770:	ldp	x24, x23, [sp, #64]
  437774:	ldp	x29, x30, [sp, #48]
  437778:	add	sp, sp, #0x70
  43777c:	ret
  437780:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437784:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437788:	add	x0, x0, #0x65e
  43778c:	add	x2, x2, #0xcfc
  437790:	mov	w1, #0x107                 	// #263
  437794:	bl	429434 <feof@plt+0x25b94>
  437798:	stp	x29, x30, [sp, #-16]!
  43779c:	mov	x29, sp
  4377a0:	bl	4375e4 <feof@plt+0x33d44>
  4377a4:	cbz	x0, 4377b4 <feof@plt+0x33f14>
  4377a8:	ldrb	w8, [x0, #72]
  4377ac:	cmp	w8, #0x0
  4377b0:	cset	w0, ne  // ne = any
  4377b4:	ldp	x29, x30, [sp], #16
  4377b8:	ret
  4377bc:	sub	sp, sp, #0x20
  4377c0:	stp	x29, x30, [sp, #16]
  4377c4:	add	x29, sp, #0x10
  4377c8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4377cc:	mov	w1, w0
  4377d0:	ldr	x0, [x8, #408]
  4377d4:	add	x3, sp, #0x8
  4377d8:	mov	w2, #0x1                   	// #1
  4377dc:	str	xzr, [sp, #8]
  4377e0:	bl	44f288 <feof@plt+0x4b9e8>
  4377e4:	ldp	x29, x30, [sp, #16]
  4377e8:	cmp	w0, #0x1
  4377ec:	cset	w0, eq  // eq = none
  4377f0:	add	sp, sp, #0x20
  4377f4:	ret
  4377f8:	mov	w1, #0x1                   	// #1
  4377fc:	mov	w2, wzr
  437800:	b	437804 <feof@plt+0x33f64>
  437804:	sub	sp, sp, #0x70
  437808:	stp	x29, x30, [sp, #48]
  43780c:	stp	x24, x23, [sp, #64]
  437810:	stp	x22, x21, [sp, #80]
  437814:	stp	x20, x19, [sp, #96]
  437818:	add	x29, sp, #0x30
  43781c:	mov	w23, w2
  437820:	mov	w22, w1
  437824:	mov	w21, w0
  437828:	mov	x19, x8
  43782c:	tbnz	w0, #31, 43784c <feof@plt+0x33fac>
  437830:	mov	x20, xzr
  437834:	cmp	w21, #0x2
  437838:	b.cc	43787c <feof@plt+0x33fdc>  // b.lo, b.ul, b.last
  43783c:	adrp	x24, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  437840:	tbz	w22, #0, 437888 <feof@plt+0x33fe8>
  437844:	mov	w2, wzr
  437848:	b	4378a0 <feof@plt+0x34000>
  43784c:	adrp	x20, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  437850:	ldr	x0, [x20, #408]
  437854:	mov	w1, w21
  437858:	bl	44e3dc <feof@plt+0x4ab3c>
  43785c:	ldr	x8, [x20, #408]
  437860:	mov	x20, x0
  437864:	mov	w1, w21
  437868:	mov	x0, x8
  43786c:	bl	44e3f4 <feof@plt+0x4ab54>
  437870:	mov	w21, w0
  437874:	cmp	w21, #0x2
  437878:	b.cs	43783c <feof@plt+0x33f9c>  // b.hs, b.nlast
  43787c:	mov	x22, xzr
  437880:	mov	x23, xzr
  437884:	b	437924 <feof@plt+0x34084>
  437888:	ldr	x0, [x24, #408]
  43788c:	mov	w1, w21
  437890:	mov	x2, xzr
  437894:	bl	44fb0c <feof@plt+0x4c26c>
  437898:	mov	w21, w0
  43789c:	mov	w2, #0x1                   	// #1
  4378a0:	ldr	x0, [x24, #408]
  4378a4:	sub	x3, x29, #0x8
  4378a8:	mov	w1, w21
  4378ac:	bl	44f288 <feof@plt+0x4b9e8>
  4378b0:	mov	w21, w0
  4378b4:	cbz	w23, 437900 <feof@plt+0x34060>
  4378b8:	cmp	w23, #0x1
  4378bc:	b.eq	4378ec <feof@plt+0x3404c>  // b.none
  4378c0:	cmp	w23, #0x2
  4378c4:	b.ne	437978 <feof@plt+0x340d8>  // b.any
  4378c8:	ldr	x0, [x24, #408]
  4378cc:	mov	w1, w21
  4378d0:	bl	44e40c <feof@plt+0x4ab6c>
  4378d4:	lsr	x0, x0, #32
  4378d8:	cmp	w21, w0
  4378dc:	b.eq	437900 <feof@plt+0x34060>  // b.none
  4378e0:	and	w1, w22, #0x1
  4378e4:	mov	w2, #0x2                   	// #2
  4378e8:	b	43796c <feof@plt+0x340cc>
  4378ec:	ldr	x0, [x24, #408]
  4378f0:	mov	w1, w21
  4378f4:	bl	44e40c <feof@plt+0x4ab6c>
  4378f8:	cmp	w21, w0
  4378fc:	b.ne	437964 <feof@plt+0x340c4>  // b.any
  437900:	ldr	x0, [x24, #408]
  437904:	ldur	x1, [x29, #-8]
  437908:	add	x8, sp, #0x8
  43790c:	mov	w2, w21
  437910:	bl	44fd70 <feof@plt+0x4c4d0>
  437914:	ldr	x23, [sp, #16]
  437918:	ldr	x22, [sp, #32]
  43791c:	cmp	w21, #0x1
  437920:	b.hi	437940 <feof@plt+0x340a0>  // b.pmore
  437924:	cbz	w21, 437938 <feof@plt+0x34098>
  437928:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  43792c:	add	x0, x0, #0xe5d
  437930:	bl	4033e0 <gettext@plt>
  437934:	b	437944 <feof@plt+0x340a4>
  437938:	mov	x0, xzr
  43793c:	b	437944 <feof@plt+0x340a4>
  437940:	ldr	x0, [sp, #8]
  437944:	stp	x0, x23, [x19]
  437948:	stp	x20, x22, [x19, #16]
  43794c:	ldp	x20, x19, [sp, #96]
  437950:	ldp	x22, x21, [sp, #80]
  437954:	ldp	x24, x23, [sp, #64]
  437958:	ldp	x29, x30, [sp, #48]
  43795c:	add	sp, sp, #0x70
  437960:	ret
  437964:	and	w1, w22, #0x1
  437968:	mov	w2, #0x1                   	// #1
  43796c:	mov	x8, x19
  437970:	bl	437804 <feof@plt+0x33f64>
  437974:	b	43794c <feof@plt+0x340ac>
  437978:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43797c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437980:	add	x0, x0, #0x65e
  437984:	add	x2, x2, #0xd28
  437988:	mov	w1, #0xc7                  	// #199
  43798c:	bl	429434 <feof@plt+0x25b94>
  437990:	mov	w2, w1
  437994:	mov	w1, wzr
  437998:	b	437804 <feof@plt+0x33f64>
  43799c:	mov	w2, w1
  4379a0:	mov	w1, wzr
  4379a4:	b	437804 <feof@plt+0x33f64>
  4379a8:	stp	x29, x30, [sp, #-32]!
  4379ac:	stp	x20, x19, [sp, #16]
  4379b0:	mov	x29, sp
  4379b4:	adrp	x20, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4379b8:	ldr	x8, [x20, #408]
  4379bc:	mov	w19, w0
  4379c0:	mov	w1, w19
  4379c4:	mov	x0, x8
  4379c8:	bl	44f5f8 <feof@plt+0x4bd58>
  4379cc:	cbz	w0, 4379ec <feof@plt+0x3414c>
  4379d0:	ldr	x0, [x20, #408]
  4379d4:	mov	w1, w19
  4379d8:	ldp	x20, x19, [sp, #16]
  4379dc:	mov	w2, wzr
  4379e0:	mov	x3, xzr
  4379e4:	ldp	x29, x30, [sp], #32
  4379e8:	b	44f288 <feof@plt+0x4b9e8>
  4379ec:	mov	w0, w19
  4379f0:	ldp	x20, x19, [sp, #16]
  4379f4:	ldp	x29, x30, [sp], #32
  4379f8:	ret
  4379fc:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  437a00:	ldr	x8, [x8, #408]
  437a04:	mov	w1, w0
  437a08:	mov	w2, wzr
  437a0c:	mov	x3, xzr
  437a10:	mov	x0, x8
  437a14:	b	44f288 <feof@plt+0x4b9e8>
  437a18:	stp	x29, x30, [sp, #-48]!
  437a1c:	stp	x22, x21, [sp, #16]
  437a20:	stp	x20, x19, [sp, #32]
  437a24:	mov	x29, sp
  437a28:	adrp	x22, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  437a2c:	ldr	x8, [x22, #408]
  437a30:	mov	w20, w1
  437a34:	mov	w1, w0
  437a38:	mov	w19, w2
  437a3c:	mov	x0, x8
  437a40:	bl	44e504 <feof@plt+0x4ac64>
  437a44:	ldr	x8, [x22, #408]
  437a48:	mov	w21, w0
  437a4c:	mov	w1, w20
  437a50:	mov	x0, x8
  437a54:	bl	44e40c <feof@plt+0x4ab6c>
  437a58:	ldr	x8, [x22, #408]
  437a5c:	mov	x20, x0
  437a60:	mov	w1, w19
  437a64:	mov	x0, x8
  437a68:	bl	44e40c <feof@plt+0x4ab6c>
  437a6c:	ldr	x8, [x22, #408]
  437a70:	mov	x2, x0
  437a74:	bfxil	x2, x20, #0, #32
  437a78:	mov	w1, w21
  437a7c:	ldp	x20, x19, [sp, #32]
  437a80:	ldp	x22, x21, [sp, #16]
  437a84:	mov	x0, x8
  437a88:	mov	x3, xzr
  437a8c:	ldp	x29, x30, [sp], #48
  437a90:	b	44e000 <feof@plt+0x4a760>
  437a94:	stp	x29, x30, [sp, #-32]!
  437a98:	stp	x20, x19, [sp, #16]
  437a9c:	mov	x29, sp
  437aa0:	adrp	x20, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  437aa4:	ldr	x8, [x20, #408]
  437aa8:	mov	x19, x1
  437aac:	mov	w1, w0
  437ab0:	mov	x0, x8
  437ab4:	bl	44e504 <feof@plt+0x4ac64>
  437ab8:	ldr	x8, [x20, #408]
  437abc:	mov	x2, x19
  437ac0:	ldp	x20, x19, [sp, #16]
  437ac4:	mov	w1, w0
  437ac8:	mov	x0, x8
  437acc:	mov	x3, xzr
  437ad0:	ldp	x29, x30, [sp], #32
  437ad4:	b	44e000 <feof@plt+0x4a760>
  437ad8:	sub	sp, sp, #0xd0
  437adc:	stp	x29, x30, [sp, #112]
  437ae0:	stp	x28, x27, [sp, #128]
  437ae4:	stp	x26, x25, [sp, #144]
  437ae8:	stp	x24, x23, [sp, #160]
  437aec:	stp	x22, x21, [sp, #176]
  437af0:	stp	x20, x19, [sp, #192]
  437af4:	add	x29, sp, #0x70
  437af8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  437afc:	ldr	x0, [x8, #408]
  437b00:	movi	v0.2d, #0x0
  437b04:	mov	x1, sp
  437b08:	str	xzr, [sp, #96]
  437b0c:	stp	q0, q0, [sp, #64]
  437b10:	stp	q0, q0, [sp, #32]
  437b14:	stp	q0, q0, [sp]
  437b18:	bl	4503f0 <feof@plt+0x4cb50>
  437b1c:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  437b20:	ldr	x0, [x19, #1096]
  437b24:	ldr	x2, [sp, #32]
  437b28:	ldp	x25, x23, [sp, #64]
  437b2c:	ldp	x24, x21, [sp, #16]
  437b30:	ldr	x22, [sp, #56]
  437b34:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437b38:	add	x1, x1, #0x69b
  437b3c:	bl	4030d0 <fprintf@plt>
  437b40:	ldr	x8, [sp, #32]
  437b44:	cbz	x8, 437b60 <feof@plt+0x342c0>
  437b48:	ldr	x9, [sp, #40]
  437b4c:	ldr	x0, [x19, #1096]
  437b50:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437b54:	add	x1, x1, #0x6d0
  437b58:	sdiv	x2, x9, x8
  437b5c:	bl	4030d0 <fprintf@plt>
  437b60:	ldr	x3, [x19, #1096]
  437b64:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437b68:	add	x0, x0, #0x705
  437b6c:	mov	w1, #0x37                  	// #55
  437b70:	mov	w2, #0x1                   	// #1
  437b74:	bl	403760 <fwrite@plt>
  437b78:	ldr	x8, [sp, #8]
  437b7c:	ldr	x0, [x19, #1096]
  437b80:	mov	w9, #0x2800                	// #10240
  437b84:	cmp	x8, x9
  437b88:	mov	x2, x8
  437b8c:	b.lt	437ba4 <feof@plt+0x34304>  // b.tstop
  437b90:	cmp	x8, #0xa00, lsl #12
  437b94:	b.ge	437ba0 <feof@plt+0x34300>  // b.tcont
  437b98:	lsr	x2, x8, #10
  437b9c:	b	437ba4 <feof@plt+0x34304>
  437ba0:	lsr	x2, x8, #20
  437ba4:	cmp	x8, #0xa00, lsl #12
  437ba8:	mov	w26, #0x4d                  	// #77
  437bac:	mov	w27, #0x6b                  	// #107
  437bb0:	mov	w20, #0x2800                	// #10240
  437bb4:	csel	w9, w27, w26, lt  // lt = tstop
  437bb8:	cmp	x8, x20
  437bbc:	mov	w28, #0x20                  	// #32
  437bc0:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437bc4:	csel	w3, w28, w9, lt  // lt = tstop
  437bc8:	add	x1, x1, #0x73d
  437bcc:	bl	4030d0 <fprintf@plt>
  437bd0:	ldr	x8, [sp, #24]
  437bd4:	ldr	x0, [x19, #1096]
  437bd8:	cmp	x8, x20
  437bdc:	mov	x2, x8
  437be0:	b.lt	437bf8 <feof@plt+0x34358>  // b.tstop
  437be4:	cmp	x8, #0xa00, lsl #12
  437be8:	b.ge	437bf4 <feof@plt+0x34354>  // b.tcont
  437bec:	lsr	x2, x8, #10
  437bf0:	b	437bf8 <feof@plt+0x34358>
  437bf4:	lsr	x2, x8, #20
  437bf8:	cmp	x8, #0xa00, lsl #12
  437bfc:	mov	w20, #0x2800                	// #10240
  437c00:	csel	w9, w27, w26, lt  // lt = tstop
  437c04:	cmp	x8, x20
  437c08:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437c0c:	csel	w3, w28, w9, lt  // lt = tstop
  437c10:	add	x1, x1, #0x76a
  437c14:	bl	4030d0 <fprintf@plt>
  437c18:	ldr	x8, [sp]
  437c1c:	ldr	x0, [x19, #1096]
  437c20:	cmp	x8, x20
  437c24:	mov	x2, x8
  437c28:	b.lt	437c40 <feof@plt+0x343a0>  // b.tstop
  437c2c:	cmp	x8, #0xa00, lsl #12
  437c30:	b.ge	437c3c <feof@plt+0x3439c>  // b.tcont
  437c34:	lsr	x2, x8, #10
  437c38:	b	437c40 <feof@plt+0x343a0>
  437c3c:	lsr	x2, x8, #20
  437c40:	cmp	x8, #0xa00, lsl #12
  437c44:	mov	w26, #0x4d                  	// #77
  437c48:	mov	w27, #0x6b                  	// #107
  437c4c:	mov	w20, #0x2800                	// #10240
  437c50:	csel	w9, w27, w26, lt  // lt = tstop
  437c54:	cmp	x8, x20
  437c58:	mov	w28, #0x20                  	// #32
  437c5c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437c60:	csel	w3, w28, w9, lt  // lt = tstop
  437c64:	add	x1, x1, #0x797
  437c68:	bl	4030d0 <fprintf@plt>
  437c6c:	ldr	x8, [sp, #16]
  437c70:	ldr	x0, [x19, #1096]
  437c74:	cmp	x8, x20
  437c78:	mov	x2, x8
  437c7c:	b.lt	437c94 <feof@plt+0x343f4>  // b.tstop
  437c80:	cmp	x8, #0xa00, lsl #12
  437c84:	b.ge	437c90 <feof@plt+0x343f0>  // b.tcont
  437c88:	lsr	x2, x8, #10
  437c8c:	b	437c94 <feof@plt+0x343f4>
  437c90:	lsr	x2, x8, #20
  437c94:	cmp	x8, #0xa00, lsl #12
  437c98:	mov	w20, #0x2800                	// #10240
  437c9c:	csel	w9, w27, w26, lt  // lt = tstop
  437ca0:	cmp	x8, x20
  437ca4:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437ca8:	csel	w3, w28, w9, lt  // lt = tstop
  437cac:	add	x1, x1, #0x7c4
  437cb0:	bl	4030d0 <fprintf@plt>
  437cb4:	ldr	x8, [sp, #48]
  437cb8:	ldr	x0, [x19, #1096]
  437cbc:	cmp	x8, x20
  437cc0:	mov	x2, x8
  437cc4:	b.lt	437cdc <feof@plt+0x3443c>  // b.tstop
  437cc8:	cmp	x8, #0xa00, lsl #12
  437ccc:	b.ge	437cd8 <feof@plt+0x34438>  // b.tcont
  437cd0:	lsr	x2, x8, #10
  437cd4:	b	437cdc <feof@plt+0x3443c>
  437cd8:	lsr	x2, x8, #20
  437cdc:	cmp	x8, #0xa00, lsl #12
  437ce0:	mov	w26, #0x4d                  	// #77
  437ce4:	mov	w27, #0x6b                  	// #107
  437ce8:	mov	w20, #0x2800                	// #10240
  437cec:	csel	w9, w27, w26, lt  // lt = tstop
  437cf0:	cmp	x8, x20
  437cf4:	mov	w28, #0x20                  	// #32
  437cf8:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437cfc:	csel	w3, w28, w9, lt  // lt = tstop
  437d00:	add	x1, x1, #0x7f1
  437d04:	bl	4030d0 <fprintf@plt>
  437d08:	ldr	x8, [sp, #64]
  437d0c:	ldr	x0, [x19, #1096]
  437d10:	cmp	x8, x20
  437d14:	mov	x2, x8
  437d18:	b.lt	437d30 <feof@plt+0x34490>  // b.tstop
  437d1c:	cmp	x8, #0xa00, lsl #12
  437d20:	b.ge	437d2c <feof@plt+0x3448c>  // b.tcont
  437d24:	lsr	x2, x8, #10
  437d28:	b	437d30 <feof@plt+0x34490>
  437d2c:	lsr	x2, x8, #20
  437d30:	cmp	x8, #0xa00, lsl #12
  437d34:	mov	w20, #0x2800                	// #10240
  437d38:	csel	w9, w27, w26, lt  // lt = tstop
  437d3c:	cmp	x8, x20
  437d40:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437d44:	csel	w3, w28, w9, lt  // lt = tstop
  437d48:	add	x1, x1, #0x81e
  437d4c:	add	x25, x23, x25
  437d50:	bl	4030d0 <fprintf@plt>
  437d54:	ldr	x8, [sp, #72]
  437d58:	ldr	x0, [x19, #1096]
  437d5c:	cmp	x8, x20
  437d60:	mov	x2, x8
  437d64:	b.lt	437d7c <feof@plt+0x344dc>  // b.tstop
  437d68:	cmp	x8, #0xa00, lsl #12
  437d6c:	b.ge	437d78 <feof@plt+0x344d8>  // b.tcont
  437d70:	lsr	x2, x8, #10
  437d74:	b	437d7c <feof@plt+0x344dc>
  437d78:	lsr	x2, x8, #20
  437d7c:	add	x24, x24, x23
  437d80:	cmp	x8, #0xa00, lsl #12
  437d84:	mov	w23, #0x4d                  	// #77
  437d88:	mov	w26, #0x6b                  	// #107
  437d8c:	mov	w20, #0x2800                	// #10240
  437d90:	csel	w9, w26, w23, lt  // lt = tstop
  437d94:	cmp	x8, x20
  437d98:	mov	w27, #0x20                  	// #32
  437d9c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437da0:	csel	w3, w27, w9, lt  // lt = tstop
  437da4:	add	x1, x1, #0x84b
  437da8:	bl	4030d0 <fprintf@plt>
  437dac:	ldr	x0, [x19, #1096]
  437db0:	cmp	x25, x20
  437db4:	mov	x2, x25
  437db8:	b.lt	437dd0 <feof@plt+0x34530>  // b.tstop
  437dbc:	cmp	x25, #0xa00, lsl #12
  437dc0:	b.ge	437dcc <feof@plt+0x3452c>  // b.tcont
  437dc4:	lsr	x2, x25, #10
  437dc8:	b	437dd0 <feof@plt+0x34530>
  437dcc:	lsr	x2, x25, #20
  437dd0:	cmp	x25, #0xa00, lsl #12
  437dd4:	mov	w20, #0x2800                	// #10240
  437dd8:	csel	w8, w26, w23, lt  // lt = tstop
  437ddc:	cmp	x25, x20
  437de0:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437de4:	csel	w3, w27, w8, lt  // lt = tstop
  437de8:	add	x1, x1, #0x878
  437dec:	add	x22, x24, x22
  437df0:	bl	4030d0 <fprintf@plt>
  437df4:	ldr	x8, [sp, #80]
  437df8:	ldr	x0, [x19, #1096]
  437dfc:	cmp	x8, x20
  437e00:	mov	x2, x8
  437e04:	b.lt	437e1c <feof@plt+0x3457c>  // b.tstop
  437e08:	cmp	x8, #0xa00, lsl #12
  437e0c:	b.ge	437e18 <feof@plt+0x34578>  // b.tcont
  437e10:	lsr	x2, x8, #10
  437e14:	b	437e1c <feof@plt+0x3457c>
  437e18:	lsr	x2, x8, #20
  437e1c:	cmp	x8, #0xa00, lsl #12
  437e20:	mov	w23, #0x4d                  	// #77
  437e24:	mov	w24, #0x6b                  	// #107
  437e28:	mov	w20, #0x2800                	// #10240
  437e2c:	add	x21, x25, x21
  437e30:	csel	w9, w24, w23, lt  // lt = tstop
  437e34:	cmp	x8, x20
  437e38:	mov	w25, #0x20                  	// #32
  437e3c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437e40:	csel	w3, w25, w9, lt  // lt = tstop
  437e44:	add	x1, x1, #0x8a5
  437e48:	bl	4030d0 <fprintf@plt>
  437e4c:	ldr	x0, [x19, #1096]
  437e50:	cmp	x22, x20
  437e54:	mov	x2, x22
  437e58:	b.lt	437e70 <feof@plt+0x345d0>  // b.tstop
  437e5c:	cmp	x22, #0xa00, lsl #12
  437e60:	b.ge	437e6c <feof@plt+0x345cc>  // b.tcont
  437e64:	lsr	x2, x22, #10
  437e68:	b	437e70 <feof@plt+0x345d0>
  437e6c:	lsr	x2, x22, #20
  437e70:	cmp	x22, #0xa00, lsl #12
  437e74:	mov	w20, #0x2800                	// #10240
  437e78:	csel	w8, w24, w23, lt  // lt = tstop
  437e7c:	cmp	x22, x20
  437e80:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437e84:	csel	w3, w25, w8, lt  // lt = tstop
  437e88:	add	x1, x1, #0x8d2
  437e8c:	bl	4030d0 <fprintf@plt>
  437e90:	ldr	x0, [x19, #1096]
  437e94:	cmp	x21, x20
  437e98:	mov	x2, x21
  437e9c:	b.lt	437eb4 <feof@plt+0x34614>  // b.tstop
  437ea0:	cmp	x21, #0xa00, lsl #12
  437ea4:	b.ge	437eb0 <feof@plt+0x34610>  // b.tcont
  437ea8:	lsr	x2, x21, #10
  437eac:	b	437eb4 <feof@plt+0x34614>
  437eb0:	lsr	x2, x21, #20
  437eb4:	cmp	x21, #0xa00, lsl #12
  437eb8:	mov	w22, #0x4d                  	// #77
  437ebc:	mov	w23, #0x6b                  	// #107
  437ec0:	mov	w20, #0x2800                	// #10240
  437ec4:	csel	w8, w23, w22, lt  // lt = tstop
  437ec8:	cmp	x21, x20
  437ecc:	mov	w21, #0x20                  	// #32
  437ed0:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437ed4:	csel	w3, w21, w8, lt  // lt = tstop
  437ed8:	add	x1, x1, #0x8ff
  437edc:	bl	4030d0 <fprintf@plt>
  437ee0:	ldr	x8, [sp, #88]
  437ee4:	ldr	x0, [x19, #1096]
  437ee8:	cmp	x8, x20
  437eec:	mov	x2, x8
  437ef0:	b.lt	437f08 <feof@plt+0x34668>  // b.tstop
  437ef4:	cmp	x8, #0xa00, lsl #12
  437ef8:	b.ge	437f04 <feof@plt+0x34664>  // b.tcont
  437efc:	lsr	x2, x8, #10
  437f00:	b	437f08 <feof@plt+0x34668>
  437f04:	lsr	x2, x8, #20
  437f08:	cmp	x8, #0xa00, lsl #12
  437f0c:	mov	w20, #0x2800                	// #10240
  437f10:	csel	w9, w23, w22, lt  // lt = tstop
  437f14:	cmp	x8, x20
  437f18:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437f1c:	csel	w3, w21, w9, lt  // lt = tstop
  437f20:	add	x1, x1, #0x92c
  437f24:	bl	4030d0 <fprintf@plt>
  437f28:	ldr	x8, [sp, #96]
  437f2c:	ldr	x0, [x19, #1096]
  437f30:	cmp	x8, x20
  437f34:	mov	x2, x8
  437f38:	adrp	x20, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  437f3c:	b.lt	437f54 <feof@plt+0x346b4>  // b.tstop
  437f40:	cmp	x8, #0xa00, lsl #12
  437f44:	b.ge	437f50 <feof@plt+0x346b0>  // b.tcont
  437f48:	lsr	x2, x8, #10
  437f4c:	b	437f54 <feof@plt+0x346b4>
  437f50:	lsr	x2, x8, #20
  437f54:	cmp	x8, #0xa00, lsl #12
  437f58:	mov	w21, #0x4d                  	// #77
  437f5c:	mov	w22, #0x6b                  	// #107
  437f60:	mov	w9, #0x2800                	// #10240
  437f64:	csel	w10, w22, w21, lt  // lt = tstop
  437f68:	cmp	x8, x9
  437f6c:	mov	w23, #0x20                  	// #32
  437f70:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437f74:	csel	w3, w23, w10, lt  // lt = tstop
  437f78:	add	x1, x1, #0x959
  437f7c:	bl	4030d0 <fprintf@plt>
  437f80:	ldr	x8, [x20, #408]
  437f84:	ldr	x0, [x19, #1096]
  437f88:	ldr	w8, [x8, #124]
  437f8c:	lsr	w9, w8, #11
  437f90:	cmp	w9, #0x5
  437f94:	mov	w10, w8
  437f98:	b.cc	437fb4 <feof@plt+0x34714>  // b.lo, b.ul, b.last
  437f9c:	lsr	w10, w8, #21
  437fa0:	cmp	w10, #0x4
  437fa4:	b.hi	437fb0 <feof@plt+0x34710>  // b.pmore
  437fa8:	lsr	w10, w8, #10
  437fac:	b	437fb4 <feof@plt+0x34714>
  437fb0:	lsr	w10, w8, #20
  437fb4:	cmp	w8, #0xa00, lsl #12
  437fb8:	csel	w8, w22, w21, cc  // cc = lo, ul, last
  437fbc:	cmp	w9, #0x5
  437fc0:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  437fc4:	mov	w2, w10
  437fc8:	csel	w3, w23, w8, cc  // cc = lo, ul, last
  437fcc:	add	x1, x1, #0x986
  437fd0:	bl	4030d0 <fprintf@plt>
  437fd4:	ldr	x8, [x20, #408]
  437fd8:	ldr	x0, [x19, #1096]
  437fdc:	ldr	w9, [x8, #128]
  437fe0:	lsr	w8, w9, #11
  437fe4:	cmp	w8, #0x5
  437fe8:	mov	w10, w9
  437fec:	b.cc	438008 <feof@plt+0x34768>  // b.lo, b.ul, b.last
  437ff0:	lsr	w10, w9, #21
  437ff4:	cmp	w10, #0x4
  437ff8:	b.hi	438004 <feof@plt+0x34764>  // b.pmore
  437ffc:	lsr	w10, w9, #10
  438000:	b	438008 <feof@plt+0x34768>
  438004:	lsr	w10, w9, #20
  438008:	mov	w2, w10
  43800c:	cmp	w9, #0xa00, lsl #12
  438010:	mov	w9, #0x4d                  	// #77
  438014:	mov	w10, #0x6b                  	// #107
  438018:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  43801c:	cmp	w8, #0x5
  438020:	mov	w8, #0x20                  	// #32
  438024:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438028:	csel	w3, w8, w9, cc  // cc = lo, ul, last
  43802c:	add	x1, x1, #0x9b3
  438030:	bl	4030d0 <fprintf@plt>
  438034:	ldr	x1, [x19, #1096]
  438038:	mov	w0, #0xa                   	// #10
  43803c:	bl	403480 <fputc@plt>
  438040:	ldp	x20, x19, [sp, #192]
  438044:	ldp	x22, x21, [sp, #176]
  438048:	ldp	x24, x23, [sp, #160]
  43804c:	ldp	x26, x25, [sp, #144]
  438050:	ldp	x28, x27, [sp, #128]
  438054:	ldp	x29, x30, [sp, #112]
  438058:	add	sp, sp, #0xd0
  43805c:	ret
  438060:	sub	sp, sp, #0xa0
  438064:	stp	x29, x30, [sp, #64]
  438068:	stp	x28, x27, [sp, #80]
  43806c:	stp	x26, x25, [sp, #96]
  438070:	stp	x24, x23, [sp, #112]
  438074:	stp	x22, x21, [sp, #128]
  438078:	stp	x20, x19, [sp, #144]
  43807c:	add	x29, sp, #0x40
  438080:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438084:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438088:	add	x1, x1, #0x467
  43808c:	add	x2, x2, #0x9e0
  438090:	mov	x19, x0
  438094:	bl	4030d0 <fprintf@plt>
  438098:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43809c:	add	x1, x1, #0xd3a
  4380a0:	mov	w3, #0x2                   	// #2
  4380a4:	mov	x0, x19
  4380a8:	mov	w2, wzr
  4380ac:	bl	4030d0 <fprintf@plt>
  4380b0:	mov	w0, #0xa                   	// #10
  4380b4:	mov	x1, x19
  4380b8:	mov	w28, #0xa                   	// #10
  4380bc:	bl	403480 <fputc@plt>
  4380c0:	adrp	x21, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4380c4:	ldr	x8, [x21, #408]
  4380c8:	ldr	w9, [x8, #12]
  4380cc:	cbz	w9, 4385b0 <feof@plt+0x34d10>
  4380d0:	mov	w22, #0xcccd                	// #52429
  4380d4:	mov	w24, #0x851f                	// #34079
  4380d8:	mov	w20, #0x6667                	// #26215
  4380dc:	mov	w2, wzr
  4380e0:	mov	w10, #0x18                  	// #24
  4380e4:	movk	w22, #0xcccc, lsl #16
  4380e8:	movk	w24, #0x51eb, lsl #16
  4380ec:	movk	w20, #0x6666, lsl #16
  4380f0:	b	43811c <feof@plt+0x3487c>
  4380f4:	mov	w0, #0xa                   	// #10
  4380f8:	mov	x1, x19
  4380fc:	bl	403480 <fputc@plt>
  438100:	ldr	x8, [x21, #408]
  438104:	ldr	x2, [sp, #8]
  438108:	mov	w10, #0x18                  	// #24
  43810c:	ldr	w9, [x8, #12]
  438110:	add	w2, w2, #0x1
  438114:	cmp	w2, w9
  438118:	b.cs	4385b0 <feof@plt+0x34d10>  // b.hs, b.nlast
  43811c:	sub	w9, w9, #0x1
  438120:	cmp	w9, w2
  438124:	b.ne	438130 <feof@plt+0x34890>  // b.any
  438128:	ldr	x23, [x8], #56
  43812c:	b	43813c <feof@plt+0x3489c>
  438130:	ldr	x23, [x8]
  438134:	add	w8, w2, #0x1
  438138:	smaddl	x8, w8, w10, x23
  43813c:	ldr	w25, [x8]
  438140:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438144:	mov	x0, x19
  438148:	add	x1, x1, #0x9f3
  43814c:	sxtw	x26, w2
  438150:	smaddl	x27, w2, w10, x23
  438154:	str	x2, [sp, #8]
  438158:	bl	4030d0 <fprintf@plt>
  43815c:	ldr	w2, [x27]
  438160:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438164:	mov	x0, x19
  438168:	add	x1, x1, #0xd3a
  43816c:	mov	w3, w25
  438170:	str	w25, [sp, #28]
  438174:	bl	4030d0 <fprintf@plt>
  438178:	ldr	x2, [x27, #8]
  43817c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438180:	mov	x0, x19
  438184:	add	x1, x1, #0xa05
  438188:	bl	4030d0 <fprintf@plt>
  43818c:	ldr	w2, [x27, #16]
  438190:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438194:	mov	x0, x19
  438198:	add	x1, x1, #0xa11
  43819c:	bl	4030d0 <fprintf@plt>
  4381a0:	mov	x25, x27
  4381a4:	ldrb	w2, [x25, #6]!
  4381a8:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4381ac:	mov	x0, x19
  4381b0:	add	x1, x1, #0xa29
  4381b4:	bl	4030d0 <fprintf@plt>
  4381b8:	ldrh	w8, [x25]
  4381bc:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4381c0:	mov	x0, x19
  4381c4:	add	x1, x1, #0xa46
  4381c8:	and	w9, w8, #0xff
  4381cc:	sub	w2, w9, w8, lsr #8
  4381d0:	bl	4030d0 <fprintf@plt>
  4381d4:	ldrb	w2, [x27, #7]
  4381d8:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4381dc:	mov	x0, x19
  4381e0:	add	x1, x1, #0xa59
  4381e4:	bl	4030d0 <fprintf@plt>
  4381e8:	ldrsb	x8, [x27, #4]
  4381ec:	adrp	x3, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4381f0:	add	x3, x3, #0xaaa
  4381f4:	str	x27, [sp, #16]
  4381f8:	cmp	x8, #0x4
  4381fc:	b.hi	43820c <feof@plt+0x3496c>  // b.pmore
  438200:	adrp	x9, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438204:	add	x9, x9, #0xf48
  438208:	ldr	x3, [x9, x8, lsl #3]
  43820c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438210:	and	w2, w8, #0xff
  438214:	mov	x0, x19
  438218:	add	x1, x1, #0xab2
  43821c:	bl	4030d0 <fprintf@plt>
  438220:	ldr	x0, [x21, #408]
  438224:	ldr	x1, [sp, #16]
  438228:	bl	44e604 <feof@plt+0x4ad64>
  43822c:	mov	w8, #0x18                  	// #24
  438230:	madd	x8, x26, x8, x23
  438234:	ldr	w2, [x8, #20]
  438238:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43823c:	mov	x26, x0
  438240:	mov	x0, x19
  438244:	add	x1, x1, #0xac5
  438248:	bl	4030d0 <fprintf@plt>
  43824c:	cbz	x26, 43827c <feof@plt+0x349dc>
  438250:	ldr	x8, [x21, #408]
  438254:	mov	w9, #0xaaab                	// #43691
  438258:	movk	w9, #0xaaaa, lsl #16
  43825c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438260:	ldr	x8, [x8]
  438264:	mov	x0, x19
  438268:	add	x1, x1, #0xae2
  43826c:	sub	x8, x26, x8
  438270:	lsr	x8, x8, #3
  438274:	mul	w2, w8, w9
  438278:	bl	4030d0 <fprintf@plt>
  43827c:	mov	w0, #0xa                   	// #10
  438280:	mov	x1, x19
  438284:	bl	403480 <fputc@plt>
  438288:	ldr	x27, [sp, #16]
  43828c:	ldr	w8, [sp, #28]
  438290:	mov	w23, #0x1                   	// #1
  438294:	ldr	w26, [x27]
  438298:	cmp	w26, w8
  43829c:	b.cc	438300 <feof@plt+0x34a60>  // b.lo, b.ul, b.last
  4382a0:	b	4380f4 <feof@plt+0x34854>
  4382a4:	mov	w0, #0xa                   	// #10
  4382a8:	mov	x1, x19
  4382ac:	bl	403480 <fputc@plt>
  4382b0:	mov	w3, #0x20                  	// #32
  4382b4:	mov	x0, x19
  4382b8:	mov	x1, x21
  4382bc:	mov	w2, w27
  4382c0:	bl	4030d0 <fprintf@plt>
  4382c4:	mov	w0, #0x7c                  	// #124
  4382c8:	mov	x1, x19
  4382cc:	bl	403480 <fputc@plt>
  4382d0:	mov	w0, #0xa                   	// #10
  4382d4:	mov	x1, x19
  4382d8:	bl	403480 <fputc@plt>
  4382dc:	ldr	x27, [sp, #16]
  4382e0:	adrp	x21, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4382e4:	mov	w23, #0x1                   	// #1
  4382e8:	ldrb	w8, [x25, #1]
  4382ec:	lsl	w8, w23, w8
  4382f0:	add	w26, w8, w26
  4382f4:	ldr	w8, [sp, #28]
  4382f8:	cmp	w26, w8
  4382fc:	b.cs	4380f4 <feof@plt+0x34854>  // b.hs, b.nlast
  438300:	ldr	x0, [x21, #408]
  438304:	mov	w1, w26
  438308:	bl	44e4b8 <feof@plt+0x4ac18>
  43830c:	tbz	w0, #0, 438854 <feof@plt+0x34fb4>
  438310:	ldr	x0, [x21, #408]
  438314:	add	x8, sp, #0x20
  438318:	mov	x1, x27
  43831c:	mov	w2, w26
  438320:	bl	44fd70 <feof@plt+0x4c4d0>
  438324:	ldr	w8, [sp, #44]
  438328:	cbnz	w8, 4382e8 <feof@plt+0x34a48>
  43832c:	ldr	x0, [sp, #32]
  438330:	ldr	w1, [sp, #40]
  438334:	bl	437438 <feof@plt+0x33b98>
  438338:	cbz	x0, 4380f4 <feof@plt+0x34854>
  43833c:	ldr	x2, [sp, #32]
  438340:	ldr	w3, [sp, #40]
  438344:	mov	x27, x1
  438348:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43834c:	mov	x6, x0
  438350:	mov	x0, x19
  438354:	add	x1, x1, #0xb0b
  438358:	mov	w4, w26
  43835c:	mov	w5, w27
  438360:	bl	4030d0 <fprintf@plt>
  438364:	ldrb	w8, [x25]
  438368:	mov	w9, #0xffffffff            	// #-1
  43836c:	ldr	w0, [sp, #40]
  438370:	lsl	w8, w9, w8
  438374:	mvn	w8, w8
  438378:	sxtw	x8, w8
  43837c:	cmp	x27, x8
  438380:	csinc	x23, x8, x27, cs  // cs = hs, nlast
  438384:	bl	42a584 <feof@plt+0x26ce4>
  438388:	cmp	w0, #0x3
  43838c:	mov	w8, #0x3                   	// #3
  438390:	csel	w21, w0, w8, gt
  438394:	mov	w0, w26
  438398:	bl	42a584 <feof@plt+0x26ce4>
  43839c:	ldr	x8, [sp, #32]
  4383a0:	cmp	w0, #0x5
  4383a4:	mov	w9, #0x5                   	// #5
  4383a8:	csel	w27, w0, w9, gt
  4383ac:	mov	x0, x8
  4383b0:	bl	4030b0 <strlen@plt>
  4383b4:	ldr	w9, [sp, #28]
  4383b8:	add	w8, w21, w27
  4383bc:	add	w8, w8, w0
  4383c0:	add	w27, w8, #0x6
  4383c4:	cmp	w9, #0x3e8
  4383c8:	b.cc	438450 <feof@plt+0x34bb0>  // b.lo, b.ul, b.last
  4383cc:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4383d0:	mov	w3, #0x20                  	// #32
  4383d4:	mov	x0, x19
  4383d8:	add	x1, x1, #0xd61
  4383dc:	mov	w2, w27
  4383e0:	bl	4030d0 <fprintf@plt>
  4383e4:	mov	w0, #0x7c                  	// #124
  4383e8:	mov	x1, x19
  4383ec:	bl	403480 <fputc@plt>
  4383f0:	mov	w24, #0x4dd3                	// #19923
  4383f4:	cmp	w23, #0x2
  4383f8:	movk	w24, #0x1062, lsl #16
  4383fc:	b.lt	43843c <feof@plt+0x34b9c>  // b.tstop
  438400:	mov	w21, #0x1                   	// #1
  438404:	ldrb	w8, [x25, #1]
  438408:	mov	x1, x19
  43840c:	lsl	w8, w21, w8
  438410:	add	w8, w8, w26
  438414:	umull	x8, w8, w24
  438418:	lsr	x8, x8, #38
  43841c:	mul	x9, x8, x22
  438420:	lsr	x9, x9, #35
  438424:	msub	w8, w9, w28, w8
  438428:	orr	w0, w8, #0x30
  43842c:	bl	403480 <fputc@plt>
  438430:	add	w21, w21, #0x1
  438434:	cmp	w23, w21
  438438:	b.ne	438404 <feof@plt+0x34b64>  // b.any
  43843c:	mov	w0, #0xa                   	// #10
  438440:	mov	x1, x19
  438444:	bl	403480 <fputc@plt>
  438448:	mov	w24, #0x851f                	// #34079
  43844c:	movk	w24, #0x51eb, lsl #16
  438450:	ldr	w8, [sp, #28]
  438454:	adrp	x21, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438458:	add	x21, x21, #0xd61
  43845c:	cmp	w8, #0x64
  438460:	b.cc	4384dc <feof@plt+0x34c3c>  // b.lo, b.ul, b.last
  438464:	mov	w3, #0x20                  	// #32
  438468:	mov	x0, x19
  43846c:	mov	x1, x21
  438470:	mov	w2, w27
  438474:	bl	4030d0 <fprintf@plt>
  438478:	mov	w0, #0x7c                  	// #124
  43847c:	mov	x1, x19
  438480:	bl	403480 <fputc@plt>
  438484:	cmp	w23, #0x2
  438488:	b.lt	4384c8 <feof@plt+0x34c28>  // b.tstop
  43848c:	mov	w21, #0x1                   	// #1
  438490:	ldrb	w8, [x25, #1]
  438494:	mov	x1, x19
  438498:	lsl	w8, w21, w8
  43849c:	add	w8, w8, w26
  4384a0:	umull	x8, w8, w24
  4384a4:	lsr	x8, x8, #37
  4384a8:	mul	x9, x8, x22
  4384ac:	lsr	x9, x9, #35
  4384b0:	msub	w8, w9, w28, w8
  4384b4:	orr	w0, w8, #0x30
  4384b8:	bl	403480 <fputc@plt>
  4384bc:	add	w21, w21, #0x1
  4384c0:	cmp	w23, w21
  4384c4:	b.ne	438490 <feof@plt+0x34bf0>  // b.any
  4384c8:	mov	w0, #0xa                   	// #10
  4384cc:	mov	x1, x19
  4384d0:	bl	403480 <fputc@plt>
  4384d4:	adrp	x21, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4384d8:	add	x21, x21, #0xd61
  4384dc:	mov	w3, #0x20                  	// #32
  4384e0:	mov	x0, x19
  4384e4:	mov	x1, x21
  4384e8:	mov	w2, w27
  4384ec:	bl	4030d0 <fprintf@plt>
  4384f0:	mov	w0, #0x7c                  	// #124
  4384f4:	mov	x1, x19
  4384f8:	bl	403480 <fputc@plt>
  4384fc:	cmp	w23, #0x2
  438500:	b.lt	4382a4 <feof@plt+0x34a04>  // b.tstop
  438504:	mov	w21, #0x1                   	// #1
  438508:	ldrb	w8, [x25, #1]
  43850c:	mov	x1, x19
  438510:	lsl	w8, w21, w8
  438514:	add	w8, w8, w26
  438518:	umull	x8, w8, w22
  43851c:	lsr	x8, x8, #35
  438520:	mul	x9, x8, x22
  438524:	lsr	x9, x9, #35
  438528:	msub	w8, w9, w28, w8
  43852c:	orr	w0, w8, #0x30
  438530:	bl	403480 <fputc@plt>
  438534:	add	w21, w21, #0x1
  438538:	cmp	w23, w21
  43853c:	b.ne	438508 <feof@plt+0x34c68>  // b.any
  438540:	mov	w0, #0xa                   	// #10
  438544:	mov	x1, x19
  438548:	bl	403480 <fputc@plt>
  43854c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438550:	mov	w3, #0x20                  	// #32
  438554:	mov	x0, x19
  438558:	add	x1, x1, #0xd61
  43855c:	mov	w2, w27
  438560:	bl	4030d0 <fprintf@plt>
  438564:	mov	w0, #0x7c                  	// #124
  438568:	mov	x1, x19
  43856c:	bl	403480 <fputc@plt>
  438570:	mov	w21, #0x1                   	// #1
  438574:	ldrb	w8, [x25, #1]
  438578:	mov	x1, x19
  43857c:	lsl	w8, w21, w8
  438580:	add	w8, w8, w26
  438584:	smull	x9, w8, w20
  438588:	lsr	x10, x9, #63
  43858c:	asr	x9, x9, #34
  438590:	add	w9, w9, w10
  438594:	msub	w8, w9, w28, w8
  438598:	add	w0, w8, #0x30
  43859c:	bl	403480 <fputc@plt>
  4385a0:	add	w21, w21, #0x1
  4385a4:	cmp	w23, w21
  4385a8:	b.ne	438574 <feof@plt+0x34cd4>  // b.any
  4385ac:	b	4382d0 <feof@plt+0x34a30>
  4385b0:	ldr	w9, [x8, #36]
  4385b4:	ldr	w20, [x8, #56]
  4385b8:	cbz	w9, 4385d0 <feof@plt+0x34d30>
  4385bc:	ldr	x8, [x8, #24]
  4385c0:	sub	w9, w9, #0x1
  4385c4:	sbfiz	x9, x9, #5, #32
  4385c8:	ldr	w21, [x8, x9]
  4385cc:	b	4385d4 <feof@plt+0x34d34>
  4385d0:	mov	w21, #0x80000000            	// #-2147483648
  4385d4:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4385d8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4385dc:	add	x1, x1, #0x467
  4385e0:	add	x2, x2, #0xb20
  4385e4:	mov	x0, x19
  4385e8:	bl	4030d0 <fprintf@plt>
  4385ec:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4385f0:	add	x1, x1, #0xd3a
  4385f4:	mov	x0, x19
  4385f8:	mov	w2, w20
  4385fc:	mov	w3, w21
  438600:	bl	4030d0 <fprintf@plt>
  438604:	mov	w0, #0xa                   	// #10
  438608:	mov	x1, x19
  43860c:	bl	403480 <fputc@plt>
  438610:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  438614:	ldr	x8, [x8, #408]
  438618:	ldr	w9, [x8, #36]
  43861c:	cbz	w9, 4387bc <feof@plt+0x34f1c>
  438620:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438624:	adrp	x20, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438628:	mov	w10, wzr
  43862c:	add	x25, x25, #0xb9e
  438630:	add	x20, x20, #0xc2b
  438634:	b	43865c <feof@plt+0x34dbc>
  438638:	mov	w0, #0xa                   	// #10
  43863c:	mov	x1, x19
  438640:	bl	403480 <fputc@plt>
  438644:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  438648:	ldr	x8, [x8, #408]
  43864c:	ldr	w10, [sp, #28]
  438650:	ldr	w9, [x8, #36]
  438654:	cmp	w10, w9
  438658:	b.cs	4387bc <feof@plt+0x34f1c>  // b.hs, b.nlast
  43865c:	ldr	x8, [x8, #24]
  438660:	add	w10, w10, #0x1
  438664:	sub	w22, w9, w10
  438668:	sxtw	x9, w22
  43866c:	add	x27, x8, x9, lsl #5
  438670:	mov	x0, x27
  438674:	str	w10, [sp, #28]
  438678:	bl	44f5ec <feof@plt+0x4bd4c>
  43867c:	mov	x21, x27
  438680:	ldr	w4, [x21, #4]!
  438684:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438688:	mov	x3, x0
  43868c:	mov	x0, x19
  438690:	add	x1, x1, #0xb36
  438694:	mov	w2, w22
  438698:	bl	4030d0 <fprintf@plt>
  43869c:	ldr	w2, [x27]
  4386a0:	ldr	w8, [x21]
  4386a4:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4386a8:	mov	x0, x19
  4386ac:	add	x1, x1, #0xd3a
  4386b0:	add	w3, w8, w2
  4386b4:	bl	4030d0 <fprintf@plt>
  4386b8:	ldr	w0, [x27, #24]
  4386bc:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4386c0:	add	x1, x1, #0xb50
  4386c4:	mov	w2, w0
  4386c8:	bl	42ab7c <feof@plt+0x272dc>
  4386cc:	ldr	w2, [x27]
  4386d0:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4386d4:	mov	x0, x19
  4386d8:	add	x1, x1, #0xb6f
  4386dc:	bl	4030d0 <fprintf@plt>
  4386e0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4386e4:	mov	w1, #0x13                  	// #19
  4386e8:	mov	w2, #0x1                   	// #1
  4386ec:	add	x0, x0, #0xb8a
  4386f0:	mov	x3, x19
  4386f4:	bl	403760 <fwrite@plt>
  4386f8:	ldr	w8, [x21]
  4386fc:	cbz	w8, 438638 <feof@plt+0x34d98>
  438700:	mov	x22, xzr
  438704:	add	x26, x27, #0x10
  438708:	mov	w28, #0x1                   	// #1
  43870c:	b	438750 <feof@plt+0x34eb0>
  438710:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438714:	mov	w0, w23
  438718:	add	x1, x1, #0xc0d
  43871c:	mov	w2, w22
  438720:	mov	w3, w23
  438724:	bl	42ab7c <feof@plt+0x272dc>
  438728:	mov	w0, w23
  43872c:	mov	x1, x20
  438730:	mov	w2, w22
  438734:	mov	w3, w24
  438738:	bl	42ab7c <feof@plt+0x272dc>
  43873c:	ldr	w8, [x21]
  438740:	add	x22, x22, #0x1
  438744:	add	w28, w28, #0x2
  438748:	cmp	x22, x8
  43874c:	b.cs	438638 <feof@plt+0x34d98>  // b.hs, b.nlast
  438750:	ldr	x8, [x26]
  438754:	sub	w9, w28, #0x1
  438758:	mov	x0, x19
  43875c:	mov	x1, x25
  438760:	ldr	w23, [x8, w9, uxtw #2]
  438764:	ldr	w24, [x8, w28, uxtw #2]
  438768:	mov	w2, w22
  43876c:	mov	w3, w23
  438770:	mov	w4, w24
  438774:	bl	4030d0 <fprintf@plt>
  438778:	cmp	w23, w24
  43877c:	b.ne	438710 <feof@plt+0x34e70>  // b.any
  438780:	ldr	w8, [x27]
  438784:	subs	w3, w23, w8
  438788:	b.cs	4387a4 <feof@plt+0x34f04>  // b.hs, b.nlast
  43878c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438790:	mov	w0, w23
  438794:	add	x1, x1, #0xbae
  438798:	mov	w2, w22
  43879c:	mov	w3, w23
  4387a0:	b	438738 <feof@plt+0x34e98>
  4387a4:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4387a8:	mov	x0, x19
  4387ac:	add	x1, x1, #0xbda
  4387b0:	mov	w2, w23
  4387b4:	bl	4030d0 <fprintf@plt>
  4387b8:	b	43873c <feof@plt+0x34e9c>
  4387bc:	adrp	x20, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4387c0:	add	x20, x20, #0x467
  4387c4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4387c8:	add	x2, x2, #0xc49
  4387cc:	mov	x0, x19
  4387d0:	mov	x1, x20
  4387d4:	bl	4030d0 <fprintf@plt>
  4387d8:	adrp	x21, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4387dc:	add	x21, x21, #0xd3a
  4387e0:	mov	w2, #0x7fffffff            	// #2147483647
  4387e4:	mov	w3, #0x80000000            	// #-2147483648
  4387e8:	mov	x0, x19
  4387ec:	mov	x1, x21
  4387f0:	bl	4030d0 <fprintf@plt>
  4387f4:	mov	w0, #0xa                   	// #10
  4387f8:	mov	x1, x19
  4387fc:	bl	403480 <fputc@plt>
  438800:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438804:	add	x2, x2, #0xc58
  438808:	mov	x0, x19
  43880c:	mov	x1, x20
  438810:	bl	4030d0 <fprintf@plt>
  438814:	mov	w2, #0x80000000            	// #-2147483648
  438818:	mov	w3, #0xffffffff            	// #-1
  43881c:	mov	x0, x19
  438820:	mov	x1, x21
  438824:	bl	4030d0 <fprintf@plt>
  438828:	mov	w0, #0xa                   	// #10
  43882c:	mov	x1, x19
  438830:	bl	403480 <fputc@plt>
  438834:	ldp	x20, x19, [sp, #144]
  438838:	ldp	x22, x21, [sp, #128]
  43883c:	ldp	x24, x23, [sp, #112]
  438840:	ldp	x26, x25, [sp, #96]
  438844:	ldp	x28, x27, [sp, #80]
  438848:	ldp	x29, x30, [sp, #64]
  43884c:	add	sp, sp, #0xa0
  438850:	ret
  438854:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438858:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43885c:	add	x0, x0, #0x65e
  438860:	add	x2, x2, #0xaf8
  438864:	mov	w1, #0x454                 	// #1108
  438868:	bl	429434 <feof@plt+0x25b94>
  43886c:	stp	x29, x30, [sp, #-48]!
  438870:	str	x21, [sp, #16]
  438874:	stp	x20, x19, [sp, #32]
  438878:	mov	x29, sp
  43887c:	mov	w21, w1
  438880:	str	w1, [x0]
  438884:	adrp	x1, 439000 <feof@plt+0x35760>
  438888:	mov	x19, x2
  43888c:	mov	x20, x0
  438890:	sxtw	x3, w21
  438894:	sbfiz	x0, x21, #2, #32
  438898:	add	x1, x1, #0xb68
  43889c:	mov	w2, #0x4                   	// #4
  4388a0:	bl	416160 <feof@plt+0x128c0>
  4388a4:	cmp	w21, #0x1
  4388a8:	str	x0, [x20, #8]
  4388ac:	b.lt	4388e4 <feof@plt+0x35044>  // b.tstop
  4388b0:	ldr	w8, [x19]
  4388b4:	cmp	w21, #0x1
  4388b8:	str	w8, [x0]
  4388bc:	b.eq	4388e4 <feof@plt+0x35044>  // b.none
  4388c0:	mov	w8, w21
  4388c4:	mov	w9, #0x1                   	// #1
  4388c8:	lsl	x11, x9, #2
  4388cc:	ldr	x10, [x20, #8]
  4388d0:	ldr	w12, [x19, x11]
  4388d4:	add	x9, x9, #0x1
  4388d8:	cmp	x8, x9
  4388dc:	str	w12, [x10, x11]
  4388e0:	b.ne	4388c8 <feof@plt+0x35028>  // b.any
  4388e4:	ldp	x20, x19, [sp, #32]
  4388e8:	ldr	x21, [sp, #16]
  4388ec:	ldp	x29, x30, [sp], #48
  4388f0:	ret
  4388f4:	stp	x29, x30, [sp, #-32]!
  4388f8:	str	x19, [sp, #16]
  4388fc:	mov	x29, sp
  438900:	mov	x19, x0
  438904:	mov	w0, #0x40                  	// #64
  438908:	mov	w1, wzr
  43890c:	bl	439994 <feof@plt+0x360f4>
  438910:	str	x0, [x19]
  438914:	ldr	x19, [sp, #16]
  438918:	ldp	x29, x30, [sp], #32
  43891c:	ret
  438920:	stp	x29, x30, [sp, #-64]!
  438924:	str	x23, [sp, #16]
  438928:	stp	x22, x21, [sp, #32]
  43892c:	stp	x20, x19, [sp, #48]
  438930:	mov	x29, sp
  438934:	cmp	w1, #0x1
  438938:	b.le	438a24 <feof@plt+0x35184>
  43893c:	mov	x19, x2
  438940:	cbz	x2, 438a3c <feof@plt+0x3519c>
  438944:	adrp	x22, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  438948:	mov	w21, w1
  43894c:	mov	x20, x0
  438950:	ldr	w1, [x19]
  438954:	ldr	x0, [x22, #408]
  438958:	mov	w2, #0x1                   	// #1
  43895c:	mov	x3, xzr
  438960:	bl	44f288 <feof@plt+0x4b9e8>
  438964:	ldr	x8, [x22, #408]
  438968:	mov	w1, w0
  43896c:	mov	x0, x8
  438970:	bl	44e40c <feof@plt+0x4ab6c>
  438974:	adrp	x1, 439000 <feof@plt+0x35760>
  438978:	str	w0, [x29, #28]
  43897c:	add	x1, x1, #0xb98
  438980:	mov	w0, #0x10                  	// #16
  438984:	mov	w3, #0x1                   	// #1
  438988:	mov	x2, xzr
  43898c:	bl	416160 <feof@plt+0x128c0>
  438990:	mov	w23, w21
  438994:	adrp	x1, 439000 <feof@plt+0x35760>
  438998:	mov	x22, x0
  43899c:	str	w21, [x0]
  4389a0:	lsl	x0, x23, #2
  4389a4:	add	x1, x1, #0xb68
  4389a8:	mov	w2, #0x4                   	// #4
  4389ac:	mov	x3, x23
  4389b0:	bl	416160 <feof@plt+0x128c0>
  4389b4:	str	x0, [x22, #8]
  4389b8:	ldr	x8, [x19]
  4389bc:	cmp	w21, #0x2
  4389c0:	str	x8, [x0]
  4389c4:	b.eq	4389e8 <feof@plt+0x35148>  // b.none
  4389c8:	mov	w8, #0x2                   	// #2
  4389cc:	lsl	x10, x8, #2
  4389d0:	ldr	x9, [x22, #8]
  4389d4:	ldr	w11, [x19, x10]
  4389d8:	add	x8, x8, #0x1
  4389dc:	cmp	x23, x8
  4389e0:	str	w11, [x9, x10]
  4389e4:	b.ne	4389cc <feof@plt+0x3512c>  // b.any
  4389e8:	ldr	w2, [x29, #28]
  4389ec:	ldr	x0, [x20]
  4389f0:	add	x1, x29, #0x1c
  4389f4:	mov	w3, #0x1                   	// #1
  4389f8:	bl	439b9c <feof@plt+0x362fc>
  4389fc:	ldr	w8, [x0]
  438a00:	cbnz	w8, 438a0c <feof@plt+0x3516c>
  438a04:	ldr	w8, [x29, #28]
  438a08:	str	w8, [x0]
  438a0c:	str	x22, [x0, #8]
  438a10:	ldp	x20, x19, [sp, #48]
  438a14:	ldp	x22, x21, [sp, #32]
  438a18:	ldr	x23, [sp, #16]
  438a1c:	ldp	x29, x30, [sp], #64
  438a20:	ret
  438a24:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438a28:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438a2c:	add	x0, x0, #0x65e
  438a30:	add	x2, x2, #0xc69
  438a34:	mov	w1, #0x4f6                 	// #1270
  438a38:	bl	429434 <feof@plt+0x25b94>
  438a3c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438a40:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438a44:	add	x0, x0, #0x65e
  438a48:	add	x2, x2, #0xc69
  438a4c:	mov	w1, #0x4f7                 	// #1271
  438a50:	bl	429434 <feof@plt+0x25b94>
  438a54:	stp	x29, x30, [sp, #-32]!
  438a58:	str	x19, [sp, #16]
  438a5c:	mov	x29, sp
  438a60:	adrp	x19, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  438a64:	ldr	x8, [x19, #408]
  438a68:	mov	w1, w0
  438a6c:	mov	w2, #0x1                   	// #1
  438a70:	mov	x3, xzr
  438a74:	mov	x0, x8
  438a78:	bl	44f288 <feof@plt+0x4b9e8>
  438a7c:	ldr	x8, [x19, #408]
  438a80:	mov	w1, w0
  438a84:	mov	x0, x8
  438a88:	bl	44e40c <feof@plt+0x4ab6c>
  438a8c:	ldr	x19, [sp, #16]
  438a90:	ldp	x29, x30, [sp], #32
  438a94:	ret
  438a98:	sub	sp, sp, #0x40
  438a9c:	stp	x29, x30, [sp, #16]
  438aa0:	stp	x22, x21, [sp, #32]
  438aa4:	stp	x20, x19, [sp, #48]
  438aa8:	add	x29, sp, #0x10
  438aac:	cbz	x2, 438b28 <feof@plt+0x35288>
  438ab0:	mov	x19, x3
  438ab4:	cbz	x3, 438b40 <feof@plt+0x352a0>
  438ab8:	adrp	x22, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  438abc:	mov	x21, x0
  438ac0:	ldr	x0, [x22, #408]
  438ac4:	mov	x20, x2
  438ac8:	mov	w2, #0x1                   	// #1
  438acc:	mov	x3, xzr
  438ad0:	bl	44f288 <feof@plt+0x4b9e8>
  438ad4:	ldr	x8, [x22, #408]
  438ad8:	mov	w1, w0
  438adc:	mov	x0, x8
  438ae0:	bl	44e40c <feof@plt+0x4ab6c>
  438ae4:	stur	w0, [x29, #-4]
  438ae8:	ldr	x0, [x21]
  438aec:	sub	x1, x29, #0x4
  438af0:	bl	439a90 <feof@plt+0x361f0>
  438af4:	cbz	x0, 438b14 <feof@plt+0x35274>
  438af8:	ldr	x8, [x0]
  438afc:	ldr	w8, [x8]
  438b00:	str	w8, [x20]
  438b04:	ldr	x8, [x0]
  438b08:	mov	w0, #0x1                   	// #1
  438b0c:	ldr	x8, [x8, #8]
  438b10:	str	x8, [x19]
  438b14:	ldp	x20, x19, [sp, #48]
  438b18:	ldp	x22, x21, [sp, #32]
  438b1c:	ldp	x29, x30, [sp, #16]
  438b20:	add	sp, sp, #0x40
  438b24:	ret
  438b28:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438b2c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438b30:	add	x0, x0, #0x65e
  438b34:	add	x2, x2, #0xc85
  438b38:	mov	w1, #0x50d                 	// #1293
  438b3c:	bl	429434 <feof@plt+0x25b94>
  438b40:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438b44:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438b48:	add	x0, x0, #0x65e
  438b4c:	add	x2, x2, #0xc85
  438b50:	mov	w1, #0x50e                 	// #1294
  438b54:	bl	429434 <feof@plt+0x25b94>
  438b58:	sub	sp, sp, #0x140
  438b5c:	stp	x29, x30, [sp, #224]
  438b60:	stp	x28, x27, [sp, #240]
  438b64:	stp	x26, x25, [sp, #256]
  438b68:	stp	x24, x23, [sp, #272]
  438b6c:	stp	x22, x21, [sp, #288]
  438b70:	stp	x20, x19, [sp, #304]
  438b74:	add	x29, sp, #0xe0
  438b78:	cbz	x7, 439268 <feof@plt+0x359c8>
  438b7c:	mov	x24, x0
  438b80:	add	x0, sp, #0x60
  438b84:	mov	x22, x7
  438b88:	mov	w23, w6
  438b8c:	mov	w25, w5
  438b90:	mov	w26, w4
  438b94:	mov	w28, w3
  438b98:	mov	w21, w2
  438b9c:	mov	x20, x1
  438ba0:	bl	43ad54 <feof@plt+0x374b4>
  438ba4:	stur	w21, [x29, #-12]
  438ba8:	cbz	x24, 439280 <feof@plt+0x359e0>
  438bac:	cbz	w21, 438be0 <feof@plt+0x35340>
  438bb0:	mov	x0, x24
  438bb4:	bl	44064c <feof@plt+0x3cdac>
  438bb8:	ldrb	w8, [x0, #45]
  438bbc:	cmp	w8, #0x2
  438bc0:	b.ne	438bec <feof@plt+0x3534c>  // b.any
  438bc4:	adrp	x19, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  438bc8:	ldr	x0, [x19, #408]
  438bcc:	ldrb	w8, [x0, #116]
  438bd0:	cbz	w8, 438c20 <feof@plt+0x35380>
  438bd4:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438bd8:	add	x25, x25, #0xdae
  438bdc:	b	438bf4 <feof@plt+0x35354>
  438be0:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438be4:	add	x25, x25, #0xd82
  438be8:	b	438bf4 <feof@plt+0x35354>
  438bec:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438bf0:	add	x25, x25, #0xd93
  438bf4:	add	x0, sp, #0x60
  438bf8:	bl	43ad8c <feof@plt+0x374ec>
  438bfc:	mov	x0, x25
  438c00:	ldp	x20, x19, [sp, #304]
  438c04:	ldp	x22, x21, [sp, #288]
  438c08:	ldp	x24, x23, [sp, #272]
  438c0c:	ldp	x26, x25, [sp, #256]
  438c10:	ldp	x28, x27, [sp, #240]
  438c14:	ldp	x29, x30, [sp, #224]
  438c18:	add	sp, sp, #0x140
  438c1c:	ret
  438c20:	str	x22, [sp, #24]
  438c24:	stp	w23, w25, [sp, #36]
  438c28:	str	w26, [sp, #44]
  438c2c:	cbz	x20, 438c7c <feof@plt+0x353dc>
  438c30:	mov	w2, #0x1                   	// #1
  438c34:	mov	w1, w21
  438c38:	mov	x3, xzr
  438c3c:	bl	44f288 <feof@plt+0x4b9e8>
  438c40:	ldr	x8, [x19, #408]
  438c44:	mov	w1, w0
  438c48:	mov	x0, x8
  438c4c:	bl	44e40c <feof@plt+0x4ab6c>
  438c50:	stur	w0, [x29, #-48]
  438c54:	ldr	x0, [x20]
  438c58:	sub	x1, x29, #0x30
  438c5c:	bl	439a90 <feof@plt+0x361f0>
  438c60:	cbz	x0, 438c7c <feof@plt+0x353dc>
  438c64:	ldr	x8, [x0]
  438c68:	ldr	w19, [x8]
  438c6c:	cbz	w19, 439090 <feof@plt+0x357f0>
  438c70:	ldr	x8, [x8, #8]
  438c74:	str	x8, [sp, #72]
  438c78:	b	438c88 <feof@plt+0x353e8>
  438c7c:	sub	x8, x29, #0xc
  438c80:	str	x8, [sp, #72]
  438c84:	mov	w19, #0x1                   	// #1
  438c88:	sxtw	x22, w19
  438c8c:	mov	w20, #0x8                   	// #8
  438c90:	bfi	x20, x22, #4, #32
  438c94:	mov	x0, xzr
  438c98:	mov	x1, x20
  438c9c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  438ca0:	and	w21, w19, #0x7fffffff
  438ca4:	mov	x27, x0
  438ca8:	stp	w21, wzr, [x0]
  438cac:	mov	x0, xzr
  438cb0:	mov	x1, x20
  438cb4:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  438cb8:	mov	x23, x0
  438cbc:	cmp	w19, #0x1
  438cc0:	stp	w21, wzr, [x0]
  438cc4:	b.lt	43909c <feof@plt+0x357fc>  // b.tstop
  438cc8:	str	w28, [sp, #20]
  438ccc:	mov	x26, xzr
  438cd0:	and	x8, x22, #0xffffffff
  438cd4:	mov	x28, x27
  438cd8:	adrp	x19, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  438cdc:	str	x22, [sp, #8]
  438ce0:	str	x8, [sp, #48]
  438ce4:	b	438d0c <feof@plt+0x3546c>
  438ce8:	ldr	x26, [sp, #88]
  438cec:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438cf0:	add	x25, x25, #0xec4
  438cf4:	tbz	w8, #0, 4390d0 <feof@plt+0x35830>
  438cf8:	ldr	x8, [sp, #48]
  438cfc:	add	x26, x26, #0x1
  438d00:	mov	x28, x27
  438d04:	cmp	x26, x8
  438d08:	b.eq	43922c <feof@plt+0x3598c>  // b.none
  438d0c:	ldr	x8, [sp, #72]
  438d10:	ldr	x0, [x19, #408]
  438d14:	ldr	w1, [x8, x26, lsl #2]
  438d18:	bl	44e40c <feof@plt+0x4ab6c>
  438d1c:	ldr	x8, [x19, #408]
  438d20:	mov	x21, x0
  438d24:	lsr	x20, x0, #32
  438d28:	ldr	w9, [x8, #36]
  438d2c:	cbz	w9, 438d60 <feof@plt+0x354c0>
  438d30:	ldr	x8, [x8, #24]
  438d34:	sub	w9, w9, #0x1
  438d38:	sbfiz	x9, x9, #5, #32
  438d3c:	ldr	w8, [x8, x9]
  438d40:	cmp	w8, w21
  438d44:	b.ls	438d6c <feof@plt+0x354cc>  // b.plast
  438d48:	mov	w8, #0x5fffffff            	// #1610612735
  438d4c:	cmp	w21, w8
  438d50:	b.hi	439244 <feof@plt+0x359a4>  // b.pmore
  438d54:	cmp	w20, w8
  438d58:	b.ls	438d74 <feof@plt+0x354d4>  // b.plast
  438d5c:	b	43925c <feof@plt+0x359bc>
  438d60:	mov	w8, #0x80000000            	// #-2147483648
  438d64:	cmp	w8, w21
  438d68:	b.hi	438d48 <feof@plt+0x354a8>  // b.pmore
  438d6c:	cmp	w21, w20
  438d70:	b.ne	439250 <feof@plt+0x359b0>  // b.any
  438d74:	sub	x8, x29, #0x30
  438d78:	mov	w2, #0x1                   	// #1
  438d7c:	mov	w0, w21
  438d80:	mov	w1, wzr
  438d84:	bl	437804 <feof@plt+0x33f64>
  438d88:	sub	x8, x29, #0x50
  438d8c:	mov	w2, #0x2                   	// #2
  438d90:	mov	w0, w20
  438d94:	mov	w1, wzr
  438d98:	bl	437804 <feof@plt+0x33f64>
  438d9c:	ldur	x0, [x29, #-48]
  438da0:	ldur	x8, [x29, #-80]
  438da4:	cmp	x0, x8
  438da8:	b.ne	4391f0 <feof@plt+0x35950>  // b.any
  438dac:	ldur	w1, [x29, #-40]
  438db0:	ldur	w8, [x29, #-72]
  438db4:	cmp	w1, w8
  438db8:	b.ne	4391fc <feof@plt+0x3595c>  // b.any
  438dbc:	ldur	w8, [x29, #-36]
  438dc0:	ldur	w9, [x29, #-68]
  438dc4:	cmp	w8, w9
  438dc8:	b.gt	439208 <feof@plt+0x35968>
  438dcc:	bl	437438 <feof@plt+0x33b98>
  438dd0:	cbz	x0, 439214 <feof@plt+0x35974>
  438dd4:	ldur	w9, [x29, #-68]
  438dd8:	ldursw	x11, [x29, #-36]
  438ddc:	sub	w10, w9, w11
  438de0:	add	w22, w10, #0x1
  438de4:	sub	x8, x11, #0x1
  438de8:	add	x12, x8, w22, sxtw
  438dec:	cmp	x1, x12
  438df0:	b.cc	439220 <feof@plt+0x35980>  // b.lo, b.ul, b.last
  438df4:	cmp	w11, #0x0
  438df8:	b.le	439298 <feof@plt+0x359f8>
  438dfc:	cmp	w11, w1
  438e00:	b.gt	4392b0 <feof@plt+0x35a10>
  438e04:	cmn	w10, #0x2
  438e08:	b.le	4392c8 <feof@plt+0x35a28>
  438e0c:	cmp	w9, w1
  438e10:	b.gt	4392e0 <feof@plt+0x35a40>
  438e14:	add	x0, x0, w8, uxtw
  438e18:	mov	w1, w22
  438e1c:	str	x26, [sp, #88]
  438e20:	bl	47d234 <_obstack_memory_used@@Base+0x1530>
  438e24:	str	x20, [sp, #80]
  438e28:	cbz	x28, 438e68 <feof@plt+0x355c8>
  438e2c:	ldp	w8, w9, [x28]
  438e30:	and	w26, w8, #0x7fffffff
  438e34:	cmp	w26, w9
  438e38:	b.ne	438e84 <feof@plt+0x355e4>  // b.any
  438e3c:	add	w1, w26, #0x1
  438e40:	stp	x0, x23, [sp, #56]
  438e44:	tbnz	w8, #31, 438e8c <feof@plt+0x355ec>
  438e48:	mov	w0, w26
  438e4c:	bl	425fbc <feof@plt+0x2271c>
  438e50:	ldr	w19, [x28, #4]
  438e54:	mov	w23, w0
  438e58:	mov	w26, wzr
  438e5c:	mov	w20, wzr
  438e60:	mov	x0, x28
  438e64:	b	438ea4 <feof@plt+0x35604>
  438e68:	stp	x0, x23, [sp, #56]
  438e6c:	mov	w26, wzr
  438e70:	mov	w20, wzr
  438e74:	mov	x0, xzr
  438e78:	mov	w19, wzr
  438e7c:	mov	w23, #0x4                   	// #4
  438e80:	b	438ea4 <feof@plt+0x35604>
  438e84:	mov	x27, x28
  438e88:	b	438ef0 <feof@plt+0x35650>
  438e8c:	cmp	w26, #0x4
  438e90:	mov	w8, #0x4                   	// #4
  438e94:	mov	x0, xzr
  438e98:	mov	w19, wzr
  438e9c:	csel	w23, w8, w1, cc  // cc = lo, ul, last
  438ea0:	mov	w20, #0x1                   	// #1
  438ea4:	mov	w8, w23
  438ea8:	mov	w1, #0x8                   	// #8
  438eac:	bfi	x1, x8, #4, #32
  438eb0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  438eb4:	and	w8, w23, #0x7fffffff
  438eb8:	stp	w8, w19, [x0]
  438ebc:	mov	x27, x0
  438ec0:	ldp	x0, x23, [sp, #56]
  438ec4:	adrp	x19, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  438ec8:	cbz	w20, 438ef0 <feof@plt+0x35650>
  438ecc:	cbz	w26, 438eec <feof@plt+0x3564c>
  438ed0:	add	x8, x28, #0x8
  438ed4:	add	x9, x27, #0x8
  438ed8:	mov	w10, w26
  438edc:	ldr	q0, [x8], #16
  438ee0:	subs	w10, w10, #0x1
  438ee4:	str	q0, [x9], #16
  438ee8:	b.ne	438edc <feof@plt+0x3563c>  // b.any
  438eec:	str	w26, [x27, #4]
  438ef0:	ldr	w8, [x27, #4]
  438ef4:	sub	x3, x29, #0x58
  438ef8:	mov	w2, #0x1                   	// #1
  438efc:	mov	w1, w21
  438f00:	add	w9, w8, #0x1
  438f04:	add	x8, x27, x8, lsl #4
  438f08:	str	w9, [x27, #4]
  438f0c:	str	w22, [x8, #8]
  438f10:	str	x0, [x8, #16]
  438f14:	ldr	x0, [x19, #408]
  438f18:	bl	44f288 <feof@plt+0x4b9e8>
  438f1c:	ldr	x0, [x19, #408]
  438f20:	sub	x3, x29, #0x60
  438f24:	mov	w2, #0x1                   	// #1
  438f28:	ldr	x1, [sp, #80]
  438f2c:	bl	44f288 <feof@plt+0x4b9e8>
  438f30:	ldur	x9, [x29, #-88]
  438f34:	mov	w8, wzr
  438f38:	cbz	x9, 438ce8 <feof@plt+0x35448>
  438f3c:	ldur	x1, [x29, #-96]
  438f40:	ldr	x26, [sp, #88]
  438f44:	cbz	x1, 438cec <feof@plt+0x3544c>
  438f48:	ldr	x8, [x9, #8]
  438f4c:	cmp	x9, x1
  438f50:	b.eq	438f74 <feof@plt+0x356d4>  // b.none
  438f54:	ldr	x9, [x1, #8]
  438f58:	cmp	x8, x9
  438f5c:	b.eq	438f74 <feof@plt+0x356d4>  // b.none
  438f60:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438f64:	add	x25, x25, #0xee0
  438f68:	mov	w8, wzr
  438f6c:	tbnz	wzr, #0, 438cf8 <feof@plt+0x35458>
  438f70:	b	4390d0 <feof@plt+0x35830>
  438f74:	ldur	x9, [x29, #-48]
  438f78:	cmp	x8, x9
  438f7c:	b.eq	438f94 <feof@plt+0x356f4>  // b.none
  438f80:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  438f84:	add	x25, x25, #0xf18
  438f88:	mov	w8, wzr
  438f8c:	tbnz	wzr, #0, 438cf8 <feof@plt+0x35458>
  438f90:	b	4390d0 <feof@plt+0x35830>
  438f94:	ldr	x0, [x19, #408]
  438f98:	ldp	w2, w3, [x29, #-40]
  438f9c:	bl	44efb0 <feof@plt+0x4b710>
  438fa0:	ldr	x2, [x19, #408]
  438fa4:	mov	w1, w0
  438fa8:	add	x0, sp, #0x70
  438fac:	bl	43c9f0 <feof@plt+0x39150>
  438fb0:	cbz	x23, 438fec <feof@plt+0x3574c>
  438fb4:	ldp	w8, w9, [x23]
  438fb8:	and	w20, w8, #0x7fffffff
  438fbc:	cmp	w20, w9
  438fc0:	b.ne	439004 <feof@plt+0x35764>  // b.any
  438fc4:	add	w1, w20, #0x1
  438fc8:	tbnz	w8, #31, 43900c <feof@plt+0x3576c>
  438fcc:	mov	w0, w20
  438fd0:	bl	425fbc <feof@plt+0x2271c>
  438fd4:	ldr	w22, [x23, #4]
  438fd8:	mov	w21, w0
  438fdc:	mov	w20, wzr
  438fe0:	mov	w19, wzr
  438fe4:	mov	x0, x23
  438fe8:	b	439024 <feof@plt+0x35784>
  438fec:	mov	w20, wzr
  438ff0:	mov	w19, wzr
  438ff4:	mov	x0, xzr
  438ff8:	mov	w22, wzr
  438ffc:	mov	w21, #0x4                   	// #4
  439000:	b	439024 <feof@plt+0x35784>
  439004:	mov	x0, x23
  439008:	b	439064 <feof@plt+0x357c4>
  43900c:	cmp	w20, #0x4
  439010:	mov	w8, #0x4                   	// #4
  439014:	mov	x0, xzr
  439018:	mov	w22, wzr
  43901c:	csel	w21, w8, w1, cc  // cc = lo, ul, last
  439020:	mov	w19, #0x1                   	// #1
  439024:	mov	w8, w21
  439028:	mov	w1, #0x8                   	// #8
  43902c:	bfi	x1, x8, #4, #32
  439030:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  439034:	and	w8, w21, #0x7fffffff
  439038:	stp	w8, w22, [x0]
  43903c:	cbz	w19, 439064 <feof@plt+0x357c4>
  439040:	cbz	w20, 439060 <feof@plt+0x357c0>
  439044:	add	x8, x23, #0x8
  439048:	add	x9, x0, #0x8
  43904c:	mov	w10, w20
  439050:	ldr	q0, [x8], #16
  439054:	subs	w10, w10, #0x1
  439058:	str	q0, [x9], #16
  43905c:	b.ne	439050 <feof@plt+0x357b0>  // b.any
  439060:	str	w20, [x0, #4]
  439064:	ldr	w8, [x0, #4]
  439068:	mov	x23, x0
  43906c:	adrp	x19, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  439070:	add	w9, w8, #0x1
  439074:	str	w9, [x0, #4]
  439078:	ldr	q0, [sp, #112]
  43907c:	add	x8, x0, x8, lsl #4
  439080:	stur	q0, [x8, #8]
  439084:	mov	w8, #0x1                   	// #1
  439088:	tbnz	w8, #0, 438cf8 <feof@plt+0x35458>
  43908c:	b	4390d0 <feof@plt+0x35830>
  439090:	mov	x22, xzr
  439094:	mov	x23, xzr
  439098:	mov	x27, xzr
  43909c:	adrp	x19, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4390a0:	add	x8, x27, #0x8
  4390a4:	cmp	x27, #0x0
  4390a8:	add	x9, x23, #0x8
  4390ac:	csel	x1, xzr, x8, eq  // eq = none
  4390b0:	cmp	x23, #0x0
  4390b4:	csel	x2, xzr, x9, eq  // eq = none
  4390b8:	add	x4, sp, #0x60
  4390bc:	mov	x0, x24
  4390c0:	mov	x3, x22
  4390c4:	mov	w5, w28
  4390c8:	bl	43c13c <feof@plt+0x3889c>
  4390cc:	mov	x25, x0
  4390d0:	mov	x28, x27
  4390d4:	cbz	x23, 4390e8 <feof@plt+0x35848>
  4390d8:	ldr	w8, [x23]
  4390dc:	tbnz	w8, #31, 439128 <feof@plt+0x35888>
  4390e0:	mov	x0, x23
  4390e4:	bl	4031d0 <free@plt>
  4390e8:	cbz	x28, 43913c <feof@plt+0x3589c>
  4390ec:	ldr	w8, [x28, #4]
  4390f0:	cbz	w8, 439114 <feof@plt+0x35874>
  4390f4:	mov	x19, xzr
  4390f8:	add	x20, x28, #0x10
  4390fc:	ldr	x0, [x20], #16
  439100:	bl	4031d0 <free@plt>
  439104:	ldr	w8, [x28, #4]
  439108:	add	x19, x19, #0x1
  43910c:	cmp	x19, x8
  439110:	b.cc	4390fc <feof@plt+0x3585c>  // b.lo, b.ul, b.last
  439114:	ldr	w8, [x28]
  439118:	tbnz	w8, #31, 439134 <feof@plt+0x35894>
  43911c:	mov	x0, x28
  439120:	bl	4031d0 <free@plt>
  439124:	b	439138 <feof@plt+0x35898>
  439128:	str	wzr, [x23, #4]
  43912c:	cbnz	x28, 4390ec <feof@plt+0x3584c>
  439130:	b	43913c <feof@plt+0x3589c>
  439134:	str	wzr, [x28, #4]
  439138:	adrp	x19, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  43913c:	cbnz	x25, 438bf4 <feof@plt+0x35354>
  439140:	ldr	w8, [sp, #104]
  439144:	ldr	w11, [sp, #44]
  439148:	cmp	w8, w11
  43914c:	b.le	4391d8 <feof@plt+0x35938>
  439150:	ldr	w10, [sp, #40]
  439154:	cmp	w8, w10
  439158:	b.le	4391e4 <feof@plt+0x35944>
  43915c:	ldr	w9, [sp, #36]
  439160:	cmp	w8, w9
  439164:	b.le	439238 <feof@plt+0x35998>
  439168:	ldr	x8, [sp, #96]
  43916c:	ldr	x0, [x19, #408]
  439170:	ldr	x1, [x8, w11, sxtw #3]
  439174:	ldr	x20, [x8, w10, sxtw #3]
  439178:	add	x8, x8, w9, sxtw #3
  43917c:	ldr	w21, [x8, #4]
  439180:	bl	44e504 <feof@plt+0x4ac64>
  439184:	ldr	x8, [x19, #408]
  439188:	mov	w22, w0
  43918c:	mov	w1, w20
  439190:	mov	x0, x8
  439194:	bl	44e40c <feof@plt+0x4ab6c>
  439198:	ldr	x8, [x19, #408]
  43919c:	mov	x20, x0
  4391a0:	mov	w1, w21
  4391a4:	mov	x0, x8
  4391a8:	bl	44e40c <feof@plt+0x4ab6c>
  4391ac:	ldr	x8, [x19, #408]
  4391b0:	mov	x2, x0
  4391b4:	bfxil	x2, x20, #0, #32
  4391b8:	mov	w1, w22
  4391bc:	mov	x0, x8
  4391c0:	mov	x3, xzr
  4391c4:	bl	44e000 <feof@plt+0x4a760>
  4391c8:	ldr	x8, [sp, #24]
  4391cc:	mov	x25, xzr
  4391d0:	str	w0, [x8]
  4391d4:	b	438bf4 <feof@plt+0x35354>
  4391d8:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4391dc:	add	x25, x25, #0xcb9
  4391e0:	b	438bf4 <feof@plt+0x35354>
  4391e4:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4391e8:	add	x25, x25, #0xcd0
  4391ec:	b	438bf4 <feof@plt+0x35354>
  4391f0:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4391f4:	add	x25, x25, #0xe26
  4391f8:	b	4390d4 <feof@plt+0x35834>
  4391fc:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  439200:	add	x25, x25, #0xe4d
  439204:	b	4390d4 <feof@plt+0x35834>
  439208:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43920c:	add	x25, x25, #0xe74
  439210:	b	4390d4 <feof@plt+0x35834>
  439214:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  439218:	add	x25, x25, #0xe91
  43921c:	b	4390d4 <feof@plt+0x35834>
  439220:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  439224:	add	x25, x25, #0xeac
  439228:	b	4390d4 <feof@plt+0x35834>
  43922c:	ldr	w28, [sp, #20]
  439230:	ldr	x22, [sp, #8]
  439234:	b	4390a0 <feof@plt+0x35800>
  439238:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43923c:	add	x25, x25, #0xce7
  439240:	b	438bf4 <feof@plt+0x35354>
  439244:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  439248:	add	x25, x25, #0xdc2
  43924c:	b	4390d4 <feof@plt+0x35834>
  439250:	adrp	x25, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  439254:	add	x25, x25, #0x6e9
  439258:	b	4390d4 <feof@plt+0x35834>
  43925c:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  439260:	add	x25, x25, #0xdf5
  439264:	b	4390d4 <feof@plt+0x35834>
  439268:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43926c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  439270:	add	x0, x0, #0x65e
  439274:	add	x2, x2, #0xc9e
  439278:	mov	w1, #0x5fa                 	// #1530
  43927c:	bl	429434 <feof@plt+0x25b94>
  439280:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  439284:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  439288:	add	x0, x0, #0x65e
  43928c:	add	x2, x2, #0xd65
  439290:	mov	w1, #0x551                 	// #1361
  439294:	bl	429434 <feof@plt+0x25b94>
  439298:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43929c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4392a0:	add	x0, x0, #0x19e
  4392a4:	add	x2, x2, #0x1b0
  4392a8:	mov	w1, #0x44                  	// #68
  4392ac:	bl	429434 <feof@plt+0x25b94>
  4392b0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4392b4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4392b8:	add	x0, x0, #0x19e
  4392bc:	add	x2, x2, #0x1b0
  4392c0:	mov	w1, #0x45                  	// #69
  4392c4:	bl	429434 <feof@plt+0x25b94>
  4392c8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4392cc:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4392d0:	add	x0, x0, #0x19e
  4392d4:	add	x2, x2, #0x1b0
  4392d8:	mov	w1, #0x46                  	// #70
  4392dc:	bl	429434 <feof@plt+0x25b94>
  4392e0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4392e4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4392e8:	add	x0, x0, #0x19e
  4392ec:	add	x2, x2, #0x1b0
  4392f0:	mov	w1, #0x47                  	// #71
  4392f4:	bl	429434 <feof@plt+0x25b94>
  4392f8:	stp	x29, x30, [sp, #-32]!
  4392fc:	str	x19, [sp, #16]
  439300:	mov	x29, sp
  439304:	adrp	x19, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  439308:	ldr	x8, [x19, #424]
  43930c:	cbnz	x8, 4394a4 <feof@plt+0x35c04>
  439310:	mov	w0, #0x588                 	// #1416
  439314:	bl	402f70 <_Znam@plt>
  439318:	mov	w10, #0x10                  	// #16
  43931c:	mov	x8, x0
  439320:	movi	v0.2d, #0x0
  439324:	mov	w9, #0x1                   	// #1
  439328:	str	x10, [x0]
  43932c:	add	x10, x0, #0x118
  439330:	str	wzr, [x8, #8]!
  439334:	stp	q0, q0, [x0, #16]
  439338:	stp	q0, q0, [x0, #48]
  43933c:	strb	w9, [x0, #80]
  439340:	str	xzr, [x0, #88]
  439344:	str	wzr, [x0, #96]
  439348:	stur	q0, [x0, #104]
  43934c:	stur	q0, [x0, #120]
  439350:	stur	q0, [x0, #136]
  439354:	stur	q0, [x0, #152]
  439358:	strb	w9, [x0, #168]
  43935c:	str	xzr, [x0, #176]
  439360:	str	wzr, [x0, #184]
  439364:	stp	q0, q0, [x0, #192]
  439368:	stp	q0, q0, [x0, #224]
  43936c:	strb	w9, [x0, #256]
  439370:	str	xzr, [x0, #264]
  439374:	str	wzr, [x0, #272]
  439378:	stp	q0, q0, [x10]
  43937c:	stp	q0, q0, [x10, #32]
  439380:	add	x10, x0, #0x1c8
  439384:	strb	w9, [x0, #344]
  439388:	str	xzr, [x0, #352]
  43938c:	str	wzr, [x0, #360]
  439390:	stp	q0, q0, [x0, #368]
  439394:	stp	q0, q0, [x0, #400]
  439398:	strb	w9, [x0, #432]
  43939c:	str	xzr, [x0, #440]
  4393a0:	str	wzr, [x0, #448]
  4393a4:	stp	q0, q0, [x10]
  4393a8:	stp	q0, q0, [x10, #32]
  4393ac:	add	x10, x0, #0x278
  4393b0:	strb	w9, [x0, #520]
  4393b4:	str	xzr, [x0, #528]
  4393b8:	str	wzr, [x0, #536]
  4393bc:	stp	q0, q0, [x0, #544]
  4393c0:	stp	q0, q0, [x0, #576]
  4393c4:	strb	w9, [x0, #608]
  4393c8:	str	xzr, [x0, #616]
  4393cc:	str	wzr, [x0, #624]
  4393d0:	stp	q0, q0, [x10]
  4393d4:	stp	q0, q0, [x10, #32]
  4393d8:	add	x10, x0, #0x328
  4393dc:	strb	w9, [x0, #696]
  4393e0:	str	xzr, [x0, #704]
  4393e4:	str	wzr, [x0, #712]
  4393e8:	stp	q0, q0, [x0, #720]
  4393ec:	stp	q0, q0, [x0, #752]
  4393f0:	strb	w9, [x0, #784]
  4393f4:	str	xzr, [x0, #792]
  4393f8:	str	wzr, [x0, #800]
  4393fc:	stp	q0, q0, [x10, #32]
  439400:	stp	q0, q0, [x10]
  439404:	add	x10, x0, #0x3d8
  439408:	strb	w9, [x0, #872]
  43940c:	str	xzr, [x0, #880]
  439410:	str	wzr, [x0, #888]
  439414:	stp	q0, q0, [x0, #928]
  439418:	stp	q0, q0, [x0, #896]
  43941c:	strb	w9, [x0, #960]
  439420:	str	xzr, [x0, #968]
  439424:	str	wzr, [x0, #976]
  439428:	stp	q0, q0, [x10, #32]
  43942c:	stp	q0, q0, [x10]
  439430:	add	x10, x0, #0x488
  439434:	strb	w9, [x0, #1048]
  439438:	str	xzr, [x0, #1056]
  43943c:	str	wzr, [x0, #1064]
  439440:	str	q0, [x0, #1120]
  439444:	str	q0, [x0, #1104]
  439448:	str	q0, [x0, #1088]
  43944c:	str	q0, [x0, #1072]
  439450:	strb	w9, [x0, #1136]
  439454:	str	xzr, [x0, #1144]
  439458:	str	wzr, [x0, #1152]
  43945c:	stp	q0, q0, [x10, #32]
  439460:	stp	q0, q0, [x10]
  439464:	add	x10, x0, #0x538
  439468:	strb	w9, [x0, #1224]
  43946c:	str	xzr, [x0, #1232]
  439470:	str	wzr, [x0, #1240]
  439474:	str	q0, [x0, #1296]
  439478:	str	q0, [x0, #1280]
  43947c:	str	q0, [x0, #1264]
  439480:	str	q0, [x0, #1248]
  439484:	strb	w9, [x0, #1312]
  439488:	str	xzr, [x0, #1320]
  43948c:	str	wzr, [x0, #1328]
  439490:	stp	q0, q0, [x10, #32]
  439494:	stp	q0, q0, [x10]
  439498:	strb	w9, [x0, #1400]
  43949c:	str	xzr, [x0, #1408]
  4394a0:	str	x8, [x19, #424]
  4394a4:	ldr	x19, [sp, #16]
  4394a8:	ldp	x29, x30, [sp], #32
  4394ac:	ret
  4394b0:	sub	sp, sp, #0x80
  4394b4:	stp	x29, x30, [sp, #32]
  4394b8:	stp	x28, x27, [sp, #48]
  4394bc:	stp	x26, x25, [sp, #64]
  4394c0:	stp	x24, x23, [sp, #80]
  4394c4:	stp	x22, x21, [sp, #96]
  4394c8:	stp	x20, x19, [sp, #112]
  4394cc:	add	x29, sp, #0x20
  4394d0:	mov	x19, x2
  4394d4:	mov	x23, x1
  4394d8:	mov	x20, x0
  4394dc:	bl	4398b0 <feof@plt+0x36010>
  4394e0:	ldp	x25, x8, [x20, #40]
  4394e4:	subs	x2, x25, x8
  4394e8:	b.eq	439554 <feof@plt+0x35cb4>  // b.none
  4394ec:	ldr	x9, [x20, #24]
  4394f0:	add	x21, x9, x8
  4394f4:	mov	w1, #0xa                   	// #10
  4394f8:	mov	x0, x21
  4394fc:	bl	4033f0 <memchr@plt>
  439500:	cbnz	x0, 439524 <feof@plt+0x35c84>
  439504:	mov	x0, x20
  439508:	bl	4398b0 <feof@plt+0x36010>
  43950c:	ldr	x8, [x20, #24]
  439510:	tbz	w0, #0, 439534 <feof@plt+0x35c94>
  439514:	ldp	x25, x9, [x20, #40]
  439518:	add	x21, x8, x9
  43951c:	sub	x2, x25, x9
  439520:	b	4394f4 <feof@plt+0x35c54>
  439524:	mov	x22, x0
  439528:	mov	w8, wzr
  43952c:	add	x24, x0, #0x1
  439530:	b	439544 <feof@plt+0x35ca4>
  439534:	ldr	x25, [x20, #40]
  439538:	mov	x24, xzr
  43953c:	add	x22, x8, x25
  439540:	mov	w8, #0x1                   	// #1
  439544:	ldr	x0, [x20, #16]
  439548:	strb	w8, [x20, #72]
  43954c:	bl	4037c0 <ferror@plt>
  439550:	cbz	w0, 43955c <feof@plt+0x35cbc>
  439554:	mov	w0, wzr
  439558:	b	439858 <feof@plt+0x35fb8>
  43955c:	cbz	x22, 439898 <feof@plt+0x35ff8>
  439560:	ldr	x8, [x20, #48]
  439564:	cmp	x8, x25
  439568:	b.cs	439570 <feof@plt+0x35cd0>  // b.hs, b.nlast
  43956c:	str	x21, [x23]
  439570:	ldp	x9, x8, [x20, #56]
  439574:	add	x25, x9, #0x1
  439578:	cmp	x25, x8
  43957c:	str	x25, [x20, #56]
  439580:	b.hi	439748 <feof@plt+0x35ea8>  // b.pmore
  439584:	ldr	x26, [x20, #80]
  439588:	cbz	x26, 439598 <feof@plt+0x35cf8>
  43958c:	ldr	w9, [x26, #4]
  439590:	cmp	w9, #0x63
  439594:	b.hi	439748 <feof@plt+0x35ea8>  // b.pmore
  439598:	cmp	x8, #0x64
  43959c:	b.hi	4395b4 <feof@plt+0x35d14>  // b.pmore
  4395a0:	cbz	x26, 43962c <feof@plt+0x35d8c>
  4395a4:	ldr	w8, [x26, #4]
  4395a8:	cmp	x25, x8
  4395ac:	b.ls	439748 <feof@plt+0x35ea8>  // b.plast
  4395b0:	b	439638 <feof@plt+0x35d98>
  4395b4:	cbz	x26, 439694 <feof@plt+0x35df4>
  4395b8:	ldr	w0, [x26, #4]
  4395bc:	cbz	w0, 4395d4 <feof@plt+0x35d34>
  4395c0:	mov	w9, #0x64                  	// #100
  4395c4:	mul	x9, x25, x9
  4395c8:	udiv	x8, x9, x8
  4395cc:	cmp	x8, x0
  4395d0:	b.cc	439748 <feof@plt+0x35ea8>  // b.lo, b.ul, b.last
  4395d4:	ldr	w8, [x26]
  4395d8:	ldr	x9, [x20, #24]
  4395dc:	ldr	x12, [x20, #48]
  4395e0:	and	w10, w8, #0x7fffffff
  4395e4:	cmp	w10, w0
  4395e8:	sub	x13, x22, x9
  4395ec:	b.ne	439728 <feof@plt+0x35e88>  // b.any
  4395f0:	stur	x12, [x29, #-8]
  4395f4:	str	x13, [sp, #16]
  4395f8:	tbnz	w8, #31, 439774 <feof@plt+0x35ed4>
  4395fc:	add	w1, w0, #0x1
  439600:	bl	425fbc <feof@plt+0x2271c>
  439604:	mov	w23, w0
  439608:	ldr	x0, [x20, #80]
  43960c:	mov	w8, #0x18                  	// #24
  439610:	umull	x8, w23, w8
  439614:	add	x1, x8, #0x8
  439618:	cbz	x0, 439878 <feof@plt+0x35fd8>
  43961c:	ldr	w27, [x0, #4]
  439620:	mov	w28, wzr
  439624:	str	wzr, [sp, #12]
  439628:	b	4396c8 <feof@plt+0x35e28>
  43962c:	mov	x8, xzr
  439630:	cmp	x25, x8
  439634:	b.ls	439748 <feof@plt+0x35ea8>  // b.plast
  439638:	ldr	x8, [x20, #24]
  43963c:	ldr	x13, [x20, #48]
  439640:	sub	x12, x22, x8
  439644:	cbz	x26, 43975c <feof@plt+0x35ebc>
  439648:	ldp	w8, w9, [x26]
  43964c:	and	w0, w8, #0x7fffffff
  439650:	cmp	w0, w9
  439654:	b.ne	439820 <feof@plt+0x35f80>  // b.any
  439658:	stur	x12, [x29, #-8]
  43965c:	str	x13, [sp, #16]
  439660:	tbnz	w8, #31, 439798 <feof@plt+0x35ef8>
  439664:	add	w1, w0, #0x1
  439668:	bl	425fbc <feof@plt+0x2271c>
  43966c:	mov	w23, w0
  439670:	ldr	x0, [x20, #80]
  439674:	mov	w8, #0x18                  	// #24
  439678:	umull	x8, w23, w8
  43967c:	add	x1, x8, #0x8
  439680:	cbz	x0, 439888 <feof@plt+0x35fe8>
  439684:	ldr	w27, [x0, #4]
  439688:	mov	w28, wzr
  43968c:	str	wzr, [sp, #12]
  439690:	b	4397cc <feof@plt+0x35f2c>
  439694:	ldr	x8, [x20, #24]
  439698:	ldr	x9, [x20, #48]
  43969c:	str	wzr, [sp, #12]
  4396a0:	mov	w28, wzr
  4396a4:	sub	x8, x22, x8
  4396a8:	stur	x9, [x29, #-8]
  4396ac:	str	x8, [sp, #16]
  4396b0:	mov	w23, #0x4                   	// #4
  4396b4:	mov	w8, #0x18                  	// #24
  4396b8:	umull	x8, w23, w8
  4396bc:	mov	x0, xzr
  4396c0:	mov	w27, wzr
  4396c4:	add	x1, x8, #0x8
  4396c8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4396cc:	and	w8, w23, #0x7fffffff
  4396d0:	str	x0, [x20, #80]
  4396d4:	stp	w8, w27, [x0]
  4396d8:	cbz	w28, 439720 <feof@plt+0x35e80>
  4396dc:	ldr	x9, [x20, #80]
  4396e0:	ldr	w14, [sp, #12]
  4396e4:	cbz	w14, 439710 <feof@plt+0x35e70>
  4396e8:	add	x8, x26, #0x8
  4396ec:	add	x9, x9, #0x8
  4396f0:	mov	w10, w14
  4396f4:	ldr	x11, [x8, #16]
  4396f8:	ldr	q0, [x8], #24
  4396fc:	subs	w10, w10, #0x1
  439700:	str	x11, [x9, #16]
  439704:	str	q0, [x9], #24
  439708:	b.ne	4396f4 <feof@plt+0x35e54>  // b.any
  43970c:	ldr	x9, [x20, #80]
  439710:	ldur	x12, [x29, #-8]
  439714:	ldr	x13, [sp, #16]
  439718:	str	w14, [x9, #4]
  43971c:	b	439728 <feof@plt+0x35e88>
  439720:	ldur	x12, [x29, #-8]
  439724:	ldr	x13, [sp, #16]
  439728:	ldr	x8, [x20, #80]
  43972c:	mov	w10, #0x18                  	// #24
  439730:	ldr	w9, [x8, #4]
  439734:	add	w11, w9, #0x1
  439738:	madd	x9, x9, x10, x8
  43973c:	str	w11, [x8, #4]
  439740:	stp	x25, x12, [x9, #8]
  439744:	str	x13, [x9, #24]
  439748:	sub	x8, x22, x21
  43974c:	cbz	x24, 439848 <feof@plt+0x35fa8>
  439750:	ldr	x9, [x20, #24]
  439754:	sub	x9, x24, x9
  439758:	b	43984c <feof@plt+0x35fac>
  43975c:	str	x13, [sp, #16]
  439760:	stur	x12, [x29, #-8]
  439764:	str	wzr, [sp, #12]
  439768:	mov	w28, wzr
  43976c:	mov	w23, #0x4                   	// #4
  439770:	b	4397b8 <feof@plt+0x35f18>
  439774:	str	xzr, [x20, #80]
  439778:	ldr	w10, [x26, #4]
  43977c:	mov	w8, #0x4                   	// #4
  439780:	mov	w28, #0x1                   	// #1
  439784:	add	w9, w10, #0x1
  439788:	cmp	w9, #0x4
  43978c:	csinc	w23, w8, w10, ls  // ls = plast
  439790:	str	w10, [sp, #12]
  439794:	b	4396b4 <feof@plt+0x35e14>
  439798:	str	xzr, [x20, #80]
  43979c:	ldr	w10, [x26, #4]
  4397a0:	mov	w8, #0x4                   	// #4
  4397a4:	mov	w28, #0x1                   	// #1
  4397a8:	add	w9, w10, #0x1
  4397ac:	cmp	w9, #0x4
  4397b0:	csinc	w23, w8, w10, ls  // ls = plast
  4397b4:	str	w10, [sp, #12]
  4397b8:	mov	w8, #0x18                  	// #24
  4397bc:	umull	x8, w23, w8
  4397c0:	mov	x0, xzr
  4397c4:	mov	w27, wzr
  4397c8:	add	x1, x8, #0x8
  4397cc:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4397d0:	and	w8, w23, #0x7fffffff
  4397d4:	str	x0, [x20, #80]
  4397d8:	stp	w8, w27, [x0]
  4397dc:	ldur	x12, [x29, #-8]
  4397e0:	ldr	x13, [sp, #16]
  4397e4:	cbz	w28, 439820 <feof@plt+0x35f80>
  4397e8:	ldr	x9, [x20, #80]
  4397ec:	ldr	w14, [sp, #12]
  4397f0:	cbz	w14, 43981c <feof@plt+0x35f7c>
  4397f4:	add	x8, x26, #0x8
  4397f8:	add	x9, x9, #0x8
  4397fc:	mov	w10, w14
  439800:	ldr	x11, [x8, #16]
  439804:	ldr	q0, [x8], #24
  439808:	subs	w10, w10, #0x1
  43980c:	str	x11, [x9, #16]
  439810:	str	q0, [x9], #24
  439814:	b.ne	439800 <feof@plt+0x35f60>  // b.any
  439818:	ldr	x9, [x20, #80]
  43981c:	str	w14, [x9, #4]
  439820:	ldr	x8, [x20, #80]
  439824:	mov	w10, #0x18                  	// #24
  439828:	ldr	w9, [x8, #4]
  43982c:	add	w11, w9, #0x1
  439830:	madd	x9, x9, x10, x8
  439834:	str	w11, [x8, #4]
  439838:	stp	x25, x13, [x9, #8]
  43983c:	str	x12, [x9, #24]
  439840:	sub	x8, x22, x21
  439844:	cbnz	x24, 439750 <feof@plt+0x35eb0>
  439848:	ldr	x9, [x20, #40]
  43984c:	mov	w0, #0x1                   	// #1
  439850:	str	x9, [x20, #48]
  439854:	str	x8, [x19]
  439858:	ldp	x20, x19, [sp, #112]
  43985c:	ldp	x22, x21, [sp, #96]
  439860:	ldp	x24, x23, [sp, #80]
  439864:	ldp	x26, x25, [sp, #64]
  439868:	ldp	x28, x27, [sp, #48]
  43986c:	ldp	x29, x30, [sp, #32]
  439870:	add	sp, sp, #0x80
  439874:	ret
  439878:	str	wzr, [sp, #12]
  43987c:	mov	w28, wzr
  439880:	mov	w27, wzr
  439884:	b	4396c8 <feof@plt+0x35e28>
  439888:	str	wzr, [sp, #12]
  43988c:	mov	w28, wzr
  439890:	mov	w27, wzr
  439894:	b	4397cc <feof@plt+0x35f2c>
  439898:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43989c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4398a0:	add	x0, x0, #0x65e
  4398a4:	add	x2, x2, #0xd1a
  4398a8:	mov	w1, #0x241                 	// #577
  4398ac:	bl	429434 <feof@plt+0x25b94>
  4398b0:	stp	x29, x30, [sp, #-48]!
  4398b4:	str	x21, [sp, #16]
  4398b8:	stp	x20, x19, [sp, #32]
  4398bc:	mov	x29, sp
  4398c0:	ldr	x8, [x0, #40]
  4398c4:	mov	x19, x0
  4398c8:	cbz	x8, 4398e8 <feof@plt+0x36048>
  4398cc:	ldr	x9, [x19, #32]
  4398d0:	cmp	x8, x9
  4398d4:	b.eq	4398e8 <feof@plt+0x36048>  // b.none
  4398d8:	ldr	x9, [x19, #48]
  4398dc:	sub	x8, x8, #0x1
  4398e0:	cmp	x9, x8
  4398e4:	b.cc	439968 <feof@plt+0x360c8>  // b.lo, b.ul, b.last
  4398e8:	ldr	x0, [x19, #16]
  4398ec:	bl	4038a0 <feof@plt>
  4398f0:	cbnz	w0, 439968 <feof@plt+0x360c8>
  4398f4:	ldr	x20, [x19, #16]
  4398f8:	mov	x0, x20
  4398fc:	bl	4037c0 <ferror@plt>
  439900:	cbnz	w0, 439968 <feof@plt+0x360c8>
  439904:	ldp	x21, x8, [x19, #32]
  439908:	cmp	x8, x21
  43990c:	b.ne	43993c <feof@plt+0x3609c>  // b.any
  439910:	ldr	x0, [x19, #24]
  439914:	lsl	x9, x8, #1
  439918:	cmp	x8, #0x0
  43991c:	mov	w8, #0x1000                	// #4096
  439920:	csel	x21, x8, x9, eq  // eq = none
  439924:	mov	x1, x21
  439928:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43992c:	ldr	x8, [x19, #40]
  439930:	ldr	x20, [x19, #16]
  439934:	stp	x0, x21, [x19, #24]
  439938:	b	439940 <feof@plt+0x360a0>
  43993c:	ldr	x0, [x19, #24]
  439940:	add	x0, x0, x8
  439944:	sub	x2, x21, x8
  439948:	mov	w1, #0x1                   	// #1
  43994c:	mov	x3, x20
  439950:	bl	402fd0 <fread@plt>
  439954:	ldr	x8, [x19, #16]
  439958:	mov	x20, x0
  43995c:	mov	x0, x8
  439960:	bl	4037c0 <ferror@plt>
  439964:	cbz	w0, 43997c <feof@plt+0x360dc>
  439968:	mov	w0, wzr
  43996c:	ldp	x20, x19, [sp, #32]
  439970:	ldr	x21, [sp, #16]
  439974:	ldp	x29, x30, [sp], #48
  439978:	ret
  43997c:	ldr	x8, [x19, #40]
  439980:	cmp	x20, #0x0
  439984:	cset	w0, ne  // ne = any
  439988:	add	x8, x8, x20
  43998c:	str	x8, [x19, #40]
  439990:	b	43996c <feof@plt+0x360cc>
  439994:	stp	x29, x30, [sp, #-48]!
  439998:	str	x21, [sp, #16]
  43999c:	stp	x20, x19, [sp, #32]
  4399a0:	mov	x29, sp
  4399a4:	adrp	x1, 439000 <feof@plt+0x35760>
  4399a8:	mov	x20, x0
  4399ac:	add	x1, x1, #0xb6c
  4399b0:	mov	w0, #0x30                  	// #48
  4399b4:	mov	w3, #0x1                   	// #1
  4399b8:	mov	x2, xzr
  4399bc:	mov	w21, #0x1                   	// #1
  4399c0:	bl	416160 <feof@plt+0x128c0>
  4399c4:	mov	x19, x0
  4399c8:	stp	xzr, xzr, [x0, #24]
  4399cc:	str	xzr, [x0, #16]
  4399d0:	strb	w21, [x0, #44]
  4399d4:	mov	x0, x20
  4399d8:	bl	427ae8 <feof@plt+0x24248>
  4399dc:	mov	w8, w0
  4399e0:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  4399e4:	lsl	x8, x8, #4
  4399e8:	add	x9, x9, #0x700
  4399ec:	ldr	w21, [x9, x8]
  4399f0:	adrp	x1, 439000 <feof@plt+0x35760>
  4399f4:	mov	w20, w0
  4399f8:	add	x1, x1, #0xb94
  4399fc:	lsl	x0, x21, #4
  439a00:	mov	w2, #0x10                  	// #16
  439a04:	mov	x3, x21
  439a08:	bl	416188 <feof@plt+0x128e8>
  439a0c:	cbz	x0, 439a78 <feof@plt+0x361d8>
  439a10:	cbz	w21, 439a5c <feof@plt+0x361bc>
  439a14:	cmp	w21, #0x1
  439a18:	b.ne	439a24 <feof@plt+0x36184>  // b.any
  439a1c:	mov	x8, xzr
  439a20:	b	439a48 <feof@plt+0x361a8>
  439a24:	and	x8, x21, #0xfffffffe
  439a28:	add	x9, x0, #0x10
  439a2c:	mov	x10, x8
  439a30:	stur	wzr, [x9, #-16]
  439a34:	str	wzr, [x9], #32
  439a38:	subs	x10, x10, #0x2
  439a3c:	b.ne	439a30 <feof@plt+0x36190>  // b.any
  439a40:	cmp	x8, x21
  439a44:	b.eq	439a5c <feof@plt+0x361bc>  // b.none
  439a48:	sub	x9, x21, x8
  439a4c:	add	x8, x0, x8, lsl #4
  439a50:	subs	x9, x9, #0x1
  439a54:	str	wzr, [x8], #16
  439a58:	b.ne	439a50 <feof@plt+0x361b0>  // b.any
  439a5c:	stp	x0, x21, [x19]
  439a60:	str	w20, [x19, #40]
  439a64:	mov	x0, x19
  439a68:	ldp	x20, x19, [sp, #32]
  439a6c:	ldr	x21, [sp, #16]
  439a70:	ldp	x29, x30, [sp], #48
  439a74:	ret
  439a78:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  439a7c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  439a80:	add	x0, x0, #0x524
  439a84:	add	x2, x2, #0x53b
  439a88:	mov	w1, #0x2b5                 	// #693
  439a8c:	bl	429434 <feof@plt+0x25b94>
  439a90:	ldr	w8, [x0, #32]
  439a94:	ldr	w12, [x0, #40]
  439a98:	adrp	x14, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  439a9c:	add	x14, x14, #0x700
  439aa0:	add	w8, w8, #0x1
  439aa4:	ldr	w10, [x1]
  439aa8:	add	x9, x14, x12, lsl #4
  439aac:	str	w8, [x0, #32]
  439ab0:	ldp	w15, w8, [x9]
  439ab4:	ldr	w11, [x9, #12]
  439ab8:	mul	x8, x8, x10
  439abc:	lsr	x8, x8, #32
  439ac0:	sub	w9, w10, w8
  439ac4:	add	w9, w8, w9, lsr #1
  439ac8:	ldr	x8, [x0]
  439acc:	lsr	w9, w9, w11
  439ad0:	msub	w9, w9, w15, w10
  439ad4:	lsl	x13, x9, #4
  439ad8:	ldr	w13, [x8, x13]
  439adc:	cbz	w13, 439b54 <feof@plt+0x362b4>
  439ae0:	ldr	w16, [x1]
  439ae4:	cmp	w13, w16
  439ae8:	b.eq	439b54 <feof@plt+0x362b4>  // b.none
  439aec:	add	x12, x14, x12, lsl #4
  439af0:	ldr	w13, [x12, #8]
  439af4:	sub	w14, w15, #0x2
  439af8:	ldr	w15, [x0, #36]
  439afc:	ldr	x12, [x0, #8]
  439b00:	mul	x13, x13, x10
  439b04:	lsr	x13, x13, #32
  439b08:	sub	w16, w10, w13
  439b0c:	add	w13, w13, w16, lsr #1
  439b10:	lsr	w11, w13, w11
  439b14:	msub	w10, w11, w14, w10
  439b18:	add	w10, w10, #0x1
  439b1c:	add	w11, w15, #0x1
  439b20:	add	w9, w10, w9
  439b24:	cmp	x12, x9
  439b28:	csel	w13, wzr, w12, hi  // hi = pmore
  439b2c:	sub	w9, w9, w13
  439b30:	str	w11, [x0, #36]
  439b34:	lsl	x13, x9, #4
  439b38:	ldr	w13, [x8, x13]
  439b3c:	cbz	w13, 439b50 <feof@plt+0x362b0>
  439b40:	ldr	w14, [x1]
  439b44:	add	w11, w11, #0x1
  439b48:	cmp	w13, w14
  439b4c:	b.ne	439b20 <feof@plt+0x36280>  // b.any
  439b50:	mov	w9, w9
  439b54:	add	x8, x8, x9, lsl #4
  439b58:	add	x8, x8, #0x8
  439b5c:	cmp	w13, #0x0
  439b60:	csel	x0, xzr, x8, eq  // eq = none
  439b64:	ret
  439b68:	ret
  439b6c:	ldr	x8, [x0, #8]
  439b70:	mov	x9, x8
  439b74:	sub	x9, x9, #0x1
  439b78:	cmp	x9, x8
  439b7c:	b.cc	439b74 <feof@plt+0x362d4>  // b.lo, b.ul, b.last
  439b80:	ldrb	w8, [x0, #44]
  439b84:	ldr	x0, [x0]
  439b88:	cbz	w8, 439b90 <feof@plt+0x362f0>
  439b8c:	b	4161b8 <feof@plt+0x12918>
  439b90:	b	4031d0 <free@plt>
  439b94:	ret
  439b98:	ret
  439b9c:	stp	x29, x30, [sp, #-48]!
  439ba0:	stp	x22, x21, [sp, #16]
  439ba4:	stp	x20, x19, [sp, #32]
  439ba8:	mov	x29, sp
  439bac:	mov	w19, w3
  439bb0:	mov	w22, w2
  439bb4:	mov	x21, x1
  439bb8:	cmp	w3, #0x1
  439bbc:	mov	x20, x0
  439bc0:	b.ne	439bdc <feof@plt+0x3633c>  // b.any
  439bc4:	ldp	x8, x9, [x20, #8]
  439bc8:	add	x8, x8, x8, lsl #1
  439bcc:	cmp	x8, x9, lsl #2
  439bd0:	b.hi	439bdc <feof@plt+0x3633c>  // b.pmore
  439bd4:	mov	x0, x20
  439bd8:	bl	439cc8 <feof@plt+0x36428>
  439bdc:	ldr	w8, [x20, #32]
  439be0:	ldr	w9, [x20, #40]
  439be4:	adrp	x10, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  439be8:	add	x10, x10, #0x700
  439bec:	add	w8, w8, #0x1
  439bf0:	add	x12, x10, x9, lsl #4
  439bf4:	str	w8, [x20, #32]
  439bf8:	ldp	w13, w8, [x12]
  439bfc:	mov	w11, w22
  439c00:	ldr	w10, [x12, #12]
  439c04:	mul	x8, x8, x11
  439c08:	lsr	x9, x8, #32
  439c0c:	sub	w14, w22, w9
  439c10:	ldr	x8, [x20]
  439c14:	add	w9, w9, w14, lsr #1
  439c18:	lsr	w9, w9, w10
  439c1c:	msub	w9, w9, w13, w22
  439c20:	add	x0, x8, w9, uxtw #4
  439c24:	ldr	w14, [x0]
  439c28:	cbz	w14, 439c9c <feof@plt+0x363fc>
  439c2c:	ldr	w15, [x21]
  439c30:	cmp	w14, w15
  439c34:	b.eq	439cb8 <feof@plt+0x36418>  // b.none
  439c38:	ldr	w14, [x12, #8]
  439c3c:	ldr	w15, [x20, #36]
  439c40:	ldr	x12, [x20, #8]
  439c44:	sub	w13, w13, #0x2
  439c48:	mul	x11, x14, x11
  439c4c:	lsr	x11, x11, #32
  439c50:	sub	w14, w22, w11
  439c54:	add	w11, w11, w14, lsr #1
  439c58:	lsr	w10, w11, w10
  439c5c:	msub	w10, w10, w13, w22
  439c60:	add	w10, w10, #0x1
  439c64:	add	w11, w15, #0x1
  439c68:	add	w9, w10, w9
  439c6c:	cmp	x12, x9
  439c70:	csel	w13, wzr, w12, hi  // hi = pmore
  439c74:	sub	w9, w9, w13
  439c78:	str	w11, [x20, #36]
  439c7c:	add	x0, x8, w9, uxtw #4
  439c80:	ldr	w13, [x0]
  439c84:	cbz	w13, 439c9c <feof@plt+0x363fc>
  439c88:	ldr	w14, [x21]
  439c8c:	add	w11, w11, #0x1
  439c90:	cmp	w13, w14
  439c94:	b.ne	439c68 <feof@plt+0x363c8>  // b.any
  439c98:	b	439cb8 <feof@plt+0x36418>
  439c9c:	cbz	w19, 439cb4 <feof@plt+0x36414>
  439ca0:	ldr	x10, [x20, #16]
  439ca4:	add	x0, x8, w9, uxtw #4
  439ca8:	add	x10, x10, #0x1
  439cac:	str	x10, [x20, #16]
  439cb0:	b	439cb8 <feof@plt+0x36418>
  439cb4:	mov	x0, xzr
  439cb8:	ldp	x20, x19, [sp, #32]
  439cbc:	ldp	x22, x21, [sp, #16]
  439cc0:	ldp	x29, x30, [sp], #48
  439cc4:	ret
  439cc8:	stp	x29, x30, [sp, #-64]!
  439ccc:	stp	x24, x23, [sp, #16]
  439cd0:	stp	x22, x21, [sp, #32]
  439cd4:	stp	x20, x19, [sp, #48]
  439cd8:	mov	x29, sp
  439cdc:	ldp	x8, x9, [x0, #16]
  439ce0:	ldp	x19, x24, [x0]
  439ce4:	mov	x20, x0
  439ce8:	adrp	x23, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  439cec:	sub	x8, x8, x9
  439cf0:	lsl	x0, x8, #1
  439cf4:	cmp	x0, x24
  439cf8:	add	x23, x23, #0x700
  439cfc:	b.hi	439d1c <feof@plt+0x3647c>  // b.pmore
  439d00:	ldr	w21, [x20, #40]
  439d04:	cmp	x24, #0x21
  439d08:	b.cc	439e94 <feof@plt+0x365f4>  // b.lo, b.ul, b.last
  439d0c:	lsl	w8, w8, #3
  439d10:	cmp	x24, x8
  439d14:	mov	x22, x24
  439d18:	b.ls	439d30 <feof@plt+0x36490>  // b.plast
  439d1c:	bl	427ae8 <feof@plt+0x24248>
  439d20:	mov	w8, w0
  439d24:	lsl	x8, x8, #4
  439d28:	ldr	w22, [x23, x8]
  439d2c:	mov	w21, w0
  439d30:	ldrb	w8, [x20, #44]
  439d34:	cbz	w8, 439ea0 <feof@plt+0x36600>
  439d38:	adrp	x1, 439000 <feof@plt+0x35760>
  439d3c:	lsl	x0, x22, #4
  439d40:	add	x1, x1, #0xb94
  439d44:	mov	w2, #0x10                  	// #16
  439d48:	mov	x3, x22
  439d4c:	bl	416188 <feof@plt+0x128e8>
  439d50:	cbz	x0, 439eb0 <feof@plt+0x36610>
  439d54:	cbz	x22, 439da0 <feof@plt+0x36500>
  439d58:	cmp	x22, #0x1
  439d5c:	b.ne	439d68 <feof@plt+0x364c8>  // b.any
  439d60:	mov	x8, xzr
  439d64:	b	439d8c <feof@plt+0x364ec>
  439d68:	and	x8, x22, #0xfffffffffffffffe
  439d6c:	add	x9, x0, #0x10
  439d70:	mov	x10, x8
  439d74:	stur	wzr, [x9, #-16]
  439d78:	str	wzr, [x9], #32
  439d7c:	subs	x10, x10, #0x2
  439d80:	b.ne	439d74 <feof@plt+0x364d4>  // b.any
  439d84:	cmp	x22, x8
  439d88:	b.eq	439da0 <feof@plt+0x36500>  // b.none
  439d8c:	sub	x9, x22, x8
  439d90:	add	x8, x0, x8, lsl #4
  439d94:	subs	x9, x9, #0x1
  439d98:	str	wzr, [x8], #16
  439d9c:	b.ne	439d94 <feof@plt+0x364f4>  // b.any
  439da0:	ldp	x10, x9, [x20, #16]
  439da4:	add	x8, x19, x24, lsl #4
  439da8:	stp	x0, x22, [x20]
  439dac:	str	w21, [x20, #40]
  439db0:	sub	x9, x10, x9
  439db4:	stp	x9, xzr, [x20, #16]
  439db8:	mov	x9, x19
  439dbc:	b	439dd4 <feof@plt+0x36534>
  439dc0:	ldr	q0, [x9]
  439dc4:	str	q0, [x16]
  439dc8:	add	x9, x9, #0x10
  439dcc:	cmp	x9, x8
  439dd0:	b.cs	439e5c <feof@plt+0x365bc>  // b.hs, b.nlast
  439dd4:	ldr	w10, [x9]
  439dd8:	cbz	w10, 439dc8 <feof@plt+0x36528>
  439ddc:	ldr	w11, [x20, #40]
  439de0:	add	x14, x23, x11, lsl #4
  439de4:	ldp	w15, w11, [x14]
  439de8:	ldr	w13, [x14, #12]
  439dec:	mul	x11, x11, x10
  439df0:	lsr	x12, x11, #32
  439df4:	sub	w16, w10, w12
  439df8:	ldr	x11, [x20]
  439dfc:	add	w12, w12, w16, lsr #1
  439e00:	lsr	w12, w12, w13
  439e04:	msub	w12, w12, w15, w10
  439e08:	add	x16, x11, w12, uxtw #4
  439e0c:	ldr	w17, [x16]
  439e10:	cbz	w17, 439dc0 <feof@plt+0x36520>
  439e14:	ldr	w16, [x14, #8]
  439e18:	ldr	x14, [x20, #8]
  439e1c:	sub	w15, w15, #0x2
  439e20:	mul	x16, x16, x10
  439e24:	lsr	x16, x16, #32
  439e28:	sub	w17, w10, w16
  439e2c:	add	w16, w16, w17, lsr #1
  439e30:	lsr	w13, w16, w13
  439e34:	msub	w10, w13, w15, w10
  439e38:	add	w10, w10, #0x1
  439e3c:	add	w12, w10, w12
  439e40:	cmp	x14, x12
  439e44:	csel	w13, wzr, w14, hi  // hi = pmore
  439e48:	sub	w12, w12, w13
  439e4c:	add	x16, x11, w12, uxtw #4
  439e50:	ldr	w13, [x16]
  439e54:	cbnz	w13, 439e3c <feof@plt+0x3659c>
  439e58:	b	439dc0 <feof@plt+0x36520>
  439e5c:	ldrb	w8, [x20, #44]
  439e60:	cbz	w8, 439e7c <feof@plt+0x365dc>
  439e64:	mov	x0, x19
  439e68:	ldp	x20, x19, [sp, #48]
  439e6c:	ldp	x22, x21, [sp, #32]
  439e70:	ldp	x24, x23, [sp, #16]
  439e74:	ldp	x29, x30, [sp], #64
  439e78:	b	4161b8 <feof@plt+0x12918>
  439e7c:	mov	x0, x19
  439e80:	ldp	x20, x19, [sp, #48]
  439e84:	ldp	x22, x21, [sp, #32]
  439e88:	ldp	x24, x23, [sp, #16]
  439e8c:	ldp	x29, x30, [sp], #64
  439e90:	b	4031d0 <free@plt>
  439e94:	mov	x22, x24
  439e98:	ldrb	w8, [x20, #44]
  439e9c:	cbnz	w8, 439d38 <feof@plt+0x36498>
  439ea0:	mov	w1, #0x10                  	// #16
  439ea4:	mov	x0, x22
  439ea8:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  439eac:	cbnz	x0, 439d54 <feof@plt+0x364b4>
  439eb0:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  439eb4:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  439eb8:	add	x0, x0, #0x524
  439ebc:	add	x2, x2, #0x53b
  439ec0:	mov	w1, #0x2b5                 	// #693
  439ec4:	bl	429434 <feof@plt+0x25b94>
  439ec8:	str	xzr, [x0]
  439ecc:	ret
  439ed0:	stp	x29, x30, [sp, #-32]!
  439ed4:	stp	x20, x19, [sp, #16]
  439ed8:	mov	x29, sp
  439edc:	mov	x19, x0
  439ee0:	ldr	x0, [x0]
  439ee4:	cbz	x0, 439efc <feof@plt+0x3665c>
  439ee8:	ldr	x20, [x0]
  439eec:	bl	4031d0 <free@plt>
  439ef0:	mov	x0, x20
  439ef4:	str	x20, [x19]
  439ef8:	cbnz	x20, 439ee8 <feof@plt+0x36648>
  439efc:	ldp	x20, x19, [sp, #16]
  439f00:	ldp	x29, x30, [sp], #32
  439f04:	ret
  439f08:	cmp	x0, #0x10, lsl #12
  439f0c:	b.ne	439f28 <feof@plt+0x36688>  // b.any
  439f10:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  439f14:	ldr	x0, [x8, #432]
  439f18:	cbz	x0, 439f2c <feof@plt+0x3668c>
  439f1c:	ldr	x9, [x0]
  439f20:	str	x9, [x8, #432]
  439f24:	ret
  439f28:	b	47d098 <_obstack_memory_used@@Base+0x1394>
  439f2c:	mov	w0, #0x10000               	// #65536
  439f30:	b	47d098 <_obstack_memory_used@@Base+0x1394>
  439f34:	ldr	x8, [x0]
  439f38:	sub	x8, x8, x0
  439f3c:	cmp	x8, #0x10, lsl #12
  439f40:	b.ne	439f58 <feof@plt+0x366b8>  // b.any
  439f44:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  439f48:	ldr	x9, [x8, #432]
  439f4c:	str	x9, [x0]
  439f50:	str	x0, [x8, #432]
  439f54:	ret
  439f58:	b	4031d0 <free@plt>
  439f5c:	cmp	x1, #0x2
  439f60:	b.cc	43a004 <feof@plt+0x36764>  // b.lo, b.ul, b.last
  439f64:	sub	sp, sp, #0x160
  439f68:	stp	x29, x30, [sp, #304]
  439f6c:	stp	x28, x21, [sp, #320]
  439f70:	stp	x20, x19, [sp, #336]
  439f74:	add	x29, sp, #0x130
  439f78:	eor	x10, x2, x2, asr #63
  439f7c:	lsr	x11, x1, #1
  439f80:	mov	x20, x0
  439f84:	cmp	x2, #0x0
  439f88:	mov	w8, #0x5                   	// #5
  439f8c:	mov	w9, #0x3                   	// #3
  439f90:	stp	x3, x0, [x29, #-40]
  439f94:	mul	x0, x10, x11
  439f98:	mov	x19, x1
  439f9c:	csel	x8, x9, x8, lt  // lt = tstop
  439fa0:	cmp	x0, #0x100
  439fa4:	stp	x1, x10, [x29, #-24]
  439fa8:	stur	x8, [x29, #-8]
  439fac:	b.hi	439fcc <feof@plt+0x3672c>  // b.pmore
  439fb0:	sub	x1, x29, #0x28
  439fb4:	add	x4, sp, #0x8
  439fb8:	mov	x0, x20
  439fbc:	mov	x2, x19
  439fc0:	mov	x3, x20
  439fc4:	bl	43a008 <feof@plt+0x36768>
  439fc8:	b	439ff4 <feof@plt+0x36754>
  439fcc:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  439fd0:	mov	x21, x0
  439fd4:	sub	x1, x29, #0x28
  439fd8:	mov	x0, x20
  439fdc:	mov	x2, x19
  439fe0:	mov	x3, x20
  439fe4:	mov	x4, x21
  439fe8:	bl	43a008 <feof@plt+0x36768>
  439fec:	mov	x0, x21
  439ff0:	bl	4031d0 <free@plt>
  439ff4:	ldp	x20, x19, [sp, #336]
  439ff8:	ldp	x28, x21, [sp, #320]
  439ffc:	ldp	x29, x30, [sp, #304]
  43a000:	add	sp, sp, #0x160
  43a004:	ret
  43a008:	stp	x29, x30, [sp, #-96]!
  43a00c:	str	x27, [sp, #16]
  43a010:	stp	x26, x25, [sp, #32]
  43a014:	stp	x24, x23, [sp, #48]
  43a018:	stp	x22, x21, [sp, #64]
  43a01c:	stp	x20, x19, [sp, #80]
  43a020:	mov	x29, sp
  43a024:	ldr	x8, [x1, #32]
  43a028:	mov	x20, x3
  43a02c:	mov	x19, x1
  43a030:	mov	x23, x2
  43a034:	cmp	x8, x2
  43a038:	mov	x24, x0
  43a03c:	b.cc	43a210 <feof@plt+0x36970>  // b.lo, b.ul, b.last
  43a040:	ldr	x8, [x19, #24]
  43a044:	ldr	x2, [x19]
  43a048:	mov	x1, x24
  43a04c:	stp	x20, x23, [x19, #8]
  43a050:	add	x21, x24, x8
  43a054:	mov	x0, x21
  43a058:	add	x23, x21, x8
  43a05c:	bl	43a660 <feof@plt+0x36dc0>
  43a060:	ldr	x9, [x19, #16]
  43a064:	eor	x20, x0, x24
  43a068:	eor	x21, x0, x21
  43a06c:	cmp	x9, #0x3
  43a070:	b.ne	43a0a8 <feof@plt+0x36808>  // b.any
  43a074:	ldr	x2, [x19]
  43a078:	mov	x0, x23
  43a07c:	mov	x1, x21
  43a080:	bl	43a660 <feof@plt+0x36dc0>
  43a084:	ldr	x2, [x19]
  43a088:	eor	x21, x0, x21
  43a08c:	eor	x23, x0, x23
  43a090:	mov	x0, x21
  43a094:	mov	x1, x20
  43a098:	bl	43a660 <feof@plt+0x36dc0>
  43a09c:	ldr	x9, [x19, #16]
  43a0a0:	eor	x20, x0, x20
  43a0a4:	eor	x21, x0, x21
  43a0a8:	ldr	x8, [x19, #24]
  43a0ac:	cmp	x9, #0x3
  43a0b0:	b.hi	43a0e0 <feof@plt+0x36840>  // b.pmore
  43a0b4:	cmp	x8, #0x8
  43a0b8:	b.ne	43a2f8 <feof@plt+0x36a58>  // b.any
  43a0bc:	ldr	x8, [x20]
  43a0c0:	ldr	x10, [x21]
  43a0c4:	ldr	x11, [x19, #8]
  43a0c8:	cmp	x9, #0x3
  43a0cc:	b.ne	43a0d8 <feof@plt+0x36838>  // b.any
  43a0d0:	ldr	x9, [x23]
  43a0d4:	str	x9, [x11, #16]
  43a0d8:	stp	x8, x10, [x11]
  43a0dc:	b	43a1f4 <feof@plt+0x36954>
  43a0e0:	add	x25, x23, x8
  43a0e4:	cmp	x9, #0x5
  43a0e8:	add	x22, x25, x8
  43a0ec:	b.ne	43a120 <feof@plt+0x36880>  // b.any
  43a0f0:	ldr	x2, [x19]
  43a0f4:	mov	x0, x22
  43a0f8:	mov	x1, x25
  43a0fc:	bl	43a660 <feof@plt+0x36dc0>
  43a100:	ldr	x2, [x19]
  43a104:	eor	x22, x0, x22
  43a108:	eor	x25, x0, x25
  43a10c:	mov	x0, x22
  43a110:	mov	x1, x23
  43a114:	bl	43a660 <feof@plt+0x36dc0>
  43a118:	eor	x23, x0, x23
  43a11c:	eor	x22, x0, x22
  43a120:	ldr	x2, [x19]
  43a124:	mov	x0, x25
  43a128:	mov	x1, x23
  43a12c:	bl	43a660 <feof@plt+0x36dc0>
  43a130:	ldr	x8, [x19, #16]
  43a134:	eor	x24, x0, x23
  43a138:	eor	x23, x0, x25
  43a13c:	cmp	x8, #0x5
  43a140:	b.ne	43a174 <feof@plt+0x368d4>  // b.any
  43a144:	ldr	x2, [x19]
  43a148:	mov	x0, x23
  43a14c:	mov	x1, x20
  43a150:	bl	43a660 <feof@plt+0x36dc0>
  43a154:	ldr	x2, [x19]
  43a158:	eor	x20, x0, x20
  43a15c:	eor	x23, x0, x23
  43a160:	mov	x0, x22
  43a164:	mov	x1, x21
  43a168:	bl	43a660 <feof@plt+0x36dc0>
  43a16c:	eor	x21, x0, x21
  43a170:	eor	x22, x0, x22
  43a174:	ldr	x2, [x19]
  43a178:	mov	x0, x24
  43a17c:	mov	x1, x20
  43a180:	bl	43a660 <feof@plt+0x36dc0>
  43a184:	ldr	x2, [x19]
  43a188:	eor	x25, x0, x20
  43a18c:	eor	x20, x0, x24
  43a190:	mov	x0, x23
  43a194:	mov	x1, x21
  43a198:	bl	43a660 <feof@plt+0x36dc0>
  43a19c:	ldr	x2, [x19]
  43a1a0:	eor	x21, x0, x21
  43a1a4:	eor	x23, x0, x23
  43a1a8:	mov	x0, x20
  43a1ac:	mov	x1, x21
  43a1b0:	bl	43a660 <feof@plt+0x36dc0>
  43a1b4:	ldr	x10, [x19, #24]
  43a1b8:	eor	x9, x0, x21
  43a1bc:	eor	x8, x0, x20
  43a1c0:	cmp	x10, #0x8
  43a1c4:	b.ne	43a324 <feof@plt+0x36a84>  // b.any
  43a1c8:	ldp	x11, x13, [x19, #8]
  43a1cc:	ldr	x10, [x25]
  43a1d0:	ldr	x9, [x9]
  43a1d4:	ldr	x12, [x8]
  43a1d8:	ldr	x8, [x23]
  43a1dc:	cmp	x13, #0x5
  43a1e0:	b.ne	43a1ec <feof@plt+0x3694c>  // b.any
  43a1e4:	ldr	x13, [x22]
  43a1e8:	str	x13, [x11, #32]
  43a1ec:	stp	x10, x9, [x11]
  43a1f0:	stp	x12, x8, [x11, #16]
  43a1f4:	ldp	x20, x19, [sp, #80]
  43a1f8:	ldp	x22, x21, [sp, #64]
  43a1fc:	ldp	x24, x23, [sp, #48]
  43a200:	ldp	x26, x25, [sp, #32]
  43a204:	ldr	x27, [sp, #16]
  43a208:	ldp	x29, x30, [sp], #96
  43a20c:	ret
  43a210:	ldr	x8, [x19, #24]
  43a214:	lsr	x25, x23, #1
  43a218:	cmp	x24, x20
  43a21c:	sub	x2, x23, x25
  43a220:	mul	x27, x8, x25
  43a224:	add	x26, x24, x27
  43a228:	add	x22, x20, x27
  43a22c:	mov	x0, x26
  43a230:	mov	x1, x19
  43a234:	mov	x3, x22
  43a238:	csel	x21, x4, x24, eq  // eq = none
  43a23c:	bl	43a008 <feof@plt+0x36768>
  43a240:	mov	x0, x24
  43a244:	mov	x1, x19
  43a248:	mov	x2, x25
  43a24c:	mov	x3, x21
  43a250:	mov	x4, x26
  43a254:	bl	43a008 <feof@plt+0x36768>
  43a258:	ldr	x8, [x19, #24]
  43a25c:	ldr	x9, [x19]
  43a260:	add	x10, x21, x27
  43a264:	mov	x0, x22
  43a268:	sub	x1, x10, x8
  43a26c:	blr	x9
  43a270:	tbz	w0, #31, 43a2d0 <feof@plt+0x36a30>
  43a274:	ldr	x8, [x19, #24]
  43a278:	cmp	x8, #0x8
  43a27c:	madd	x23, x8, x23, x20
  43a280:	b.ne	43a35c <feof@plt+0x36abc>  // b.any
  43a284:	ldr	x8, [x19]
  43a288:	mov	x0, x22
  43a28c:	mov	x1, x21
  43a290:	blr	x8
  43a294:	sbfx	x8, x0, #31, #1
  43a298:	bic	x9, x21, x8
  43a29c:	and	x10, x22, x8
  43a2a0:	orr	x9, x10, x9
  43a2a4:	ldr	x9, [x9]
  43a2a8:	and	x8, x8, #0x8
  43a2ac:	add	x22, x22, x8
  43a2b0:	str	x9, [x20], #8
  43a2b4:	cmp	x20, x22
  43a2b8:	b.eq	43a1f4 <feof@plt+0x36954>  // b.none
  43a2bc:	eor	x8, x8, #0x8
  43a2c0:	cmp	x22, x23
  43a2c4:	add	x21, x21, x8
  43a2c8:	b.ne	43a284 <feof@plt+0x369e4>  // b.any
  43a2cc:	mov	x22, x23
  43a2d0:	sub	x2, x22, x20
  43a2d4:	mov	x0, x20
  43a2d8:	mov	x1, x21
  43a2dc:	ldp	x20, x19, [sp, #80]
  43a2e0:	ldp	x22, x21, [sp, #64]
  43a2e4:	ldp	x24, x23, [sp, #48]
  43a2e8:	ldp	x26, x25, [sp, #32]
  43a2ec:	ldr	x27, [sp, #16]
  43a2f0:	ldp	x29, x30, [sp], #96
  43a2f4:	b	402fc0 <memcpy@plt>
  43a2f8:	cmp	x8, #0x4
  43a2fc:	b.ne	43a3b0 <feof@plt+0x36b10>  // b.any
  43a300:	ldr	w8, [x20]
  43a304:	ldr	w10, [x21]
  43a308:	ldr	x11, [x19, #8]
  43a30c:	cmp	x9, #0x3
  43a310:	b.ne	43a31c <feof@plt+0x36a7c>  // b.any
  43a314:	ldr	w9, [x23]
  43a318:	str	w9, [x11, #8]
  43a31c:	stp	w8, w10, [x11]
  43a320:	b	43a1f4 <feof@plt+0x36954>
  43a324:	cmp	x10, #0x4
  43a328:	b.ne	43a3c0 <feof@plt+0x36b20>  // b.any
  43a32c:	ldp	x11, x13, [x19, #8]
  43a330:	ldr	w10, [x25]
  43a334:	ldr	w9, [x9]
  43a338:	ldr	w12, [x8]
  43a33c:	ldr	w8, [x23]
  43a340:	cmp	x13, #0x5
  43a344:	b.ne	43a350 <feof@plt+0x36ab0>  // b.any
  43a348:	ldr	w13, [x22]
  43a34c:	str	w13, [x11, #16]
  43a350:	stp	w10, w9, [x11]
  43a354:	stp	w12, w8, [x11, #8]
  43a358:	b	43a1f4 <feof@plt+0x36954>
  43a35c:	cmp	x8, #0x4
  43a360:	b.ne	43a558 <feof@plt+0x36cb8>  // b.any
  43a364:	ldr	x8, [x19]
  43a368:	mov	x0, x22
  43a36c:	mov	x1, x21
  43a370:	blr	x8
  43a374:	sbfx	x8, x0, #31, #1
  43a378:	bic	x9, x21, x8
  43a37c:	and	x10, x22, x8
  43a380:	orr	x9, x10, x9
  43a384:	ldr	w9, [x9]
  43a388:	and	x8, x8, #0x4
  43a38c:	add	x22, x22, x8
  43a390:	str	w9, [x20], #4
  43a394:	cmp	x20, x22
  43a398:	b.eq	43a1f4 <feof@plt+0x36954>  // b.none
  43a39c:	eor	x8, x8, #0x4
  43a3a0:	cmp	x22, x23
  43a3a4:	add	x21, x21, x8
  43a3a8:	b.ne	43a364 <feof@plt+0x36ac4>  // b.any
  43a3ac:	b	43a2cc <feof@plt+0x36a2c>
  43a3b0:	cmp	x8, #0x8
  43a3b4:	b.cs	43a3d0 <feof@plt+0x36b30>  // b.hs, b.nlast
  43a3b8:	mov	x9, xzr
  43a3bc:	b	43a54c <feof@plt+0x36cac>
  43a3c0:	cmp	x10, #0x8
  43a3c4:	b.cs	43a420 <feof@plt+0x36b80>  // b.hs, b.nlast
  43a3c8:	mov	x11, xzr
  43a3cc:	b	43a500 <feof@plt+0x36c60>
  43a3d0:	mov	x10, xzr
  43a3d4:	ldr	x13, [x20, x10]
  43a3d8:	ldr	x11, [x21, x10]
  43a3dc:	ldr	x12, [x19, #8]
  43a3e0:	cmp	x9, #0x3
  43a3e4:	b.ne	43a3f4 <feof@plt+0x36b54>  // b.any
  43a3e8:	ldr	x9, [x23, x10]
  43a3ec:	add	x8, x12, x8, lsl #1
  43a3f0:	str	x9, [x8, x10]
  43a3f4:	str	x13, [x12, x10]
  43a3f8:	ldr	x8, [x19, #24]
  43a3fc:	add	x9, x10, #0x10
  43a400:	add	x8, x12, x8
  43a404:	str	x11, [x8, x10]
  43a408:	ldr	x8, [x19, #24]
  43a40c:	cmp	x9, x8
  43a410:	b.hi	43a50c <feof@plt+0x36c6c>  // b.pmore
  43a414:	ldr	x9, [x19, #16]
  43a418:	add	x10, x10, #0x8
  43a41c:	b	43a3d4 <feof@plt+0x36b34>
  43a420:	mov	x12, xzr
  43a424:	ldp	x11, x17, [x19, #8]
  43a428:	ldr	x16, [x25, x12]
  43a42c:	ldr	x14, [x9, x12]
  43a430:	ldr	x15, [x8, x12]
  43a434:	ldr	x13, [x23, x12]
  43a438:	cmp	x17, #0x5
  43a43c:	b.ne	43a44c <feof@plt+0x36bac>  // b.any
  43a440:	ldr	x17, [x22, x12]
  43a444:	add	x10, x11, x10, lsl #2
  43a448:	str	x17, [x10, x12]
  43a44c:	str	x16, [x11, x12]
  43a450:	ldr	x10, [x19, #24]
  43a454:	add	x16, x11, x10
  43a458:	str	x14, [x16, x12]
  43a45c:	ldr	x14, [x19, #24]
  43a460:	add	x16, x14, x10
  43a464:	add	x16, x11, x16
  43a468:	str	x15, [x16, x12]
  43a46c:	ldr	x15, [x19, #24]
  43a470:	add	x14, x15, x14
  43a474:	add	x10, x14, x10
  43a478:	add	x10, x11, x10
  43a47c:	str	x13, [x10, x12]
  43a480:	ldr	x10, [x19, #24]
  43a484:	add	x11, x12, #0x8
  43a488:	add	x12, x12, #0x10
  43a48c:	cmp	x12, x10
  43a490:	mov	x12, x11
  43a494:	b.ls	43a424 <feof@plt+0x36b84>  // b.plast
  43a498:	b	43a500 <feof@plt+0x36c60>
  43a49c:	ldp	x12, x17, [x19, #8]
  43a4a0:	ldrb	w16, [x25, x11]
  43a4a4:	ldrb	w14, [x9, x11]
  43a4a8:	ldrb	w15, [x8, x11]
  43a4ac:	ldrb	w13, [x23, x11]
  43a4b0:	cmp	x17, #0x5
  43a4b4:	b.ne	43a4c4 <feof@plt+0x36c24>  // b.any
  43a4b8:	ldrb	w17, [x22, x11]
  43a4bc:	add	x10, x12, x10, lsl #2
  43a4c0:	strb	w17, [x10, x11]
  43a4c4:	strb	w16, [x12, x11]
  43a4c8:	ldr	x10, [x19, #24]
  43a4cc:	add	x16, x12, x10
  43a4d0:	strb	w14, [x16, x11]
  43a4d4:	ldr	x14, [x19, #24]
  43a4d8:	add	x16, x14, x10
  43a4dc:	add	x16, x12, x16
  43a4e0:	strb	w15, [x16, x11]
  43a4e4:	ldr	x15, [x19, #24]
  43a4e8:	add	x14, x15, x14
  43a4ec:	add	x10, x14, x10
  43a4f0:	add	x10, x12, x10
  43a4f4:	strb	w13, [x10, x11]
  43a4f8:	ldr	x10, [x19, #24]
  43a4fc:	add	x11, x11, #0x1
  43a500:	cmp	x11, x10
  43a504:	b.cc	43a49c <feof@plt+0x36bfc>  // b.lo, b.ul, b.last
  43a508:	b	43a1f4 <feof@plt+0x36954>
  43a50c:	add	x9, x10, #0x8
  43a510:	b	43a54c <feof@plt+0x36cac>
  43a514:	ldp	x10, x13, [x19, #8]
  43a518:	ldrb	w12, [x20, x9]
  43a51c:	ldrb	w11, [x21, x9]
  43a520:	cmp	x13, #0x3
  43a524:	b.ne	43a534 <feof@plt+0x36c94>  // b.any
  43a528:	ldrb	w13, [x23, x9]
  43a52c:	add	x8, x10, x8, lsl #1
  43a530:	strb	w13, [x8, x9]
  43a534:	strb	w12, [x10, x9]
  43a538:	ldr	x8, [x19, #24]
  43a53c:	add	x8, x10, x8
  43a540:	strb	w11, [x8, x9]
  43a544:	ldr	x8, [x19, #24]
  43a548:	add	x9, x9, #0x1
  43a54c:	cmp	x9, x8
  43a550:	b.cc	43a514 <feof@plt+0x36c74>  // b.lo, b.ul, b.last
  43a554:	b	43a1f4 <feof@plt+0x36954>
  43a558:	ldr	x8, [x19]
  43a55c:	mov	x0, x22
  43a560:	mov	x1, x21
  43a564:	blr	x8
  43a568:	ldr	x2, [x19, #24]
  43a56c:	sbfx	x24, x0, #31, #1
  43a570:	bic	x8, x21, x24
  43a574:	and	x9, x22, x24
  43a578:	orr	x1, x9, x8
  43a57c:	mov	x0, x20
  43a580:	bl	402fc0 <memcpy@plt>
  43a584:	ldr	x8, [x19, #24]
  43a588:	and	x9, x8, x24
  43a58c:	add	x20, x20, x8
  43a590:	add	x22, x22, x9
  43a594:	cmp	x22, x20
  43a598:	b.eq	43a1f4 <feof@plt+0x36954>  // b.none
  43a59c:	bic	x8, x8, x24
  43a5a0:	cmp	x22, x23
  43a5a4:	add	x21, x21, x8
  43a5a8:	b.ne	43a558 <feof@plt+0x36cb8>  // b.any
  43a5ac:	b	43a2cc <feof@plt+0x36a2c>
  43a5b0:	cmp	x1, #0x2
  43a5b4:	b.cc	43a65c <feof@plt+0x36dbc>  // b.lo, b.ul, b.last
  43a5b8:	sub	sp, sp, #0x160
  43a5bc:	stp	x29, x30, [sp, #304]
  43a5c0:	stp	x28, x21, [sp, #320]
  43a5c4:	stp	x20, x19, [sp, #336]
  43a5c8:	add	x29, sp, #0x130
  43a5cc:	mvn	x8, x2
  43a5d0:	lsr	x11, x1, #1
  43a5d4:	eor	x8, x8, x8, asr #63
  43a5d8:	mov	x20, x0
  43a5dc:	cmp	x2, #0x0
  43a5e0:	mov	w9, #0x5                   	// #5
  43a5e4:	mov	w10, #0x3                   	// #3
  43a5e8:	stp	x3, x0, [x29, #-40]
  43a5ec:	mul	x0, x8, x11
  43a5f0:	mov	x19, x1
  43a5f4:	csel	x9, x10, x9, ge  // ge = tcont
  43a5f8:	cmp	x0, #0x100
  43a5fc:	stp	x1, x8, [x29, #-24]
  43a600:	stur	x9, [x29, #-8]
  43a604:	b.hi	43a624 <feof@plt+0x36d84>  // b.pmore
  43a608:	sub	x1, x29, #0x28
  43a60c:	add	x4, sp, #0x8
  43a610:	mov	x0, x20
  43a614:	mov	x2, x19
  43a618:	mov	x3, x20
  43a61c:	bl	43a008 <feof@plt+0x36768>
  43a620:	b	43a64c <feof@plt+0x36dac>
  43a624:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  43a628:	mov	x21, x0
  43a62c:	sub	x1, x29, #0x28
  43a630:	mov	x0, x20
  43a634:	mov	x2, x19
  43a638:	mov	x3, x20
  43a63c:	mov	x4, x21
  43a640:	bl	43a008 <feof@plt+0x36768>
  43a644:	mov	x0, x21
  43a648:	bl	4031d0 <free@plt>
  43a64c:	ldp	x20, x19, [sp, #336]
  43a650:	ldp	x28, x21, [sp, #320]
  43a654:	ldp	x29, x30, [sp, #304]
  43a658:	add	sp, sp, #0x160
  43a65c:	ret
  43a660:	stp	x29, x30, [sp, #-32]!
  43a664:	str	x19, [sp, #16]
  43a668:	mov	x29, sp
  43a66c:	eor	x19, x1, x0
  43a670:	blr	x2
  43a674:	sbfx	x8, x0, #31, #1
  43a678:	and	x0, x19, x8
  43a67c:	ldr	x19, [sp, #16]
  43a680:	ldp	x29, x30, [sp], #32
  43a684:	ret
  43a688:	sub	sp, sp, #0x70
  43a68c:	stp	x29, x30, [sp, #32]
  43a690:	stp	x26, x25, [sp, #48]
  43a694:	stp	x24, x23, [sp, #64]
  43a698:	stp	x22, x21, [sp, #80]
  43a69c:	stp	x20, x19, [sp, #96]
  43a6a0:	ldr	x10, [x0, #1232]
  43a6a4:	ldr	x9, [x0, #1168]
  43a6a8:	ldr	x8, [x0, #1176]
  43a6ac:	ldrb	w22, [x0, #1242]
  43a6b0:	adrp	x20, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43a6b4:	adrp	x25, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43a6b8:	adrp	x26, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43a6bc:	adrp	x23, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43a6c0:	adrp	x24, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43a6c4:	mov	x19, x0
  43a6c8:	add	x20, x20, #0x59a
  43a6cc:	add	x25, x25, #0x56a
  43a6d0:	add	x26, x26, #0x579
  43a6d4:	cmp	x10, #0x20
  43a6d8:	add	x23, x23, #0x54c
  43a6dc:	add	x24, x24, #0x55b
  43a6e0:	add	x29, sp, #0x20
  43a6e4:	b.cc	43a6f4 <feof@plt+0x36e54>  // b.lo, b.ul, b.last
  43a6e8:	cmp	w22, #0x0
  43a6ec:	csel	x10, x24, x23, ne  // ne = any
  43a6f0:	b	43a710 <feof@plt+0x36e70>
  43a6f4:	cmp	x10, #0x10
  43a6f8:	b.cc	43a708 <feof@plt+0x36e68>  // b.lo, b.ul, b.last
  43a6fc:	cmp	w22, #0x0
  43a700:	csel	x10, x26, x25, ne  // ne = any
  43a704:	b	43a710 <feof@plt+0x36e70>
  43a708:	adrp	x10, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43a70c:	add	x10, x10, #0x59a
  43a710:	cmp	x9, #0x0
  43a714:	csel	x1, x20, x9, eq  // eq = none
  43a718:	cmp	x8, #0x0
  43a71c:	csel	x21, x10, x8, eq  // eq = none
  43a720:	add	x8, sp, #0x8
  43a724:	mov	x0, x19
  43a728:	mov	x2, x20
  43a72c:	bl	43a828 <feof@plt+0x36f88>
  43a730:	ldr	x8, [sp, #24]
  43a734:	ldur	q0, [sp, #8]
  43a738:	add	x9, x19, #0x208
  43a73c:	mov	x0, x19
  43a740:	str	x8, [x9, #16]
  43a744:	str	q0, [x9]
  43a748:	ldr	x8, [x19, #1216]
  43a74c:	mov	x1, x20
  43a750:	mov	x2, x20
  43a754:	str	w8, [x9, #16]
  43a758:	add	x8, sp, #0x8
  43a75c:	bl	43a828 <feof@plt+0x36f88>
  43a760:	ldr	x8, [sp, #24]
  43a764:	ldur	q0, [sp, #8]
  43a768:	ldr	x9, [x19, #1216]
  43a76c:	cmp	w22, #0x0
  43a770:	str	x8, [x19, #560]
  43a774:	csel	x1, x26, x25, ne  // ne = any
  43a778:	add	x8, sp, #0x8
  43a77c:	mov	x0, x19
  43a780:	mov	x2, x20
  43a784:	str	q0, [x19, #544]
  43a788:	str	w9, [x19, #560]
  43a78c:	csel	x22, x24, x23, ne  // ne = any
  43a790:	bl	43a828 <feof@plt+0x36f88>
  43a794:	ldr	x8, [sp, #24]
  43a798:	ldur	q0, [sp, #8]
  43a79c:	add	x9, x19, #0x238
  43a7a0:	mov	w10, #0x10                  	// #16
  43a7a4:	str	x8, [x9, #16]
  43a7a8:	add	x8, sp, #0x8
  43a7ac:	mov	x0, x19
  43a7b0:	mov	x1, x22
  43a7b4:	mov	x2, x20
  43a7b8:	str	q0, [x9]
  43a7bc:	str	w10, [x9, #16]
  43a7c0:	bl	43a828 <feof@plt+0x36f88>
  43a7c4:	ldr	x8, [sp, #24]
  43a7c8:	ldur	q0, [sp, #8]
  43a7cc:	mov	w9, #0x20                  	// #32
  43a7d0:	mov	x0, x19
  43a7d4:	str	x8, [x19, #608]
  43a7d8:	add	x8, sp, #0x8
  43a7dc:	mov	x1, x21
  43a7e0:	mov	x2, x20
  43a7e4:	str	q0, [x19, #592]
  43a7e8:	str	w9, [x19, #608]
  43a7ec:	bl	43a828 <feof@plt+0x36f88>
  43a7f0:	ldr	x8, [sp, #24]
  43a7f4:	ldur	q0, [sp, #8]
  43a7f8:	add	x9, x19, #0x268
  43a7fc:	str	x8, [x9, #16]
  43a800:	str	q0, [x9]
  43a804:	ldr	x8, [x19, #1232]
  43a808:	str	w8, [x9, #16]
  43a80c:	ldp	x20, x19, [sp, #96]
  43a810:	ldp	x22, x21, [sp, #80]
  43a814:	ldp	x24, x23, [sp, #64]
  43a818:	ldp	x26, x25, [sp, #48]
  43a81c:	ldp	x29, x30, [sp, #32]
  43a820:	add	sp, sp, #0x70
  43a824:	ret
  43a828:	stp	x29, x30, [sp, #-64]!
  43a82c:	stp	x22, x21, [sp, #32]
  43a830:	stp	x20, x19, [sp, #48]
  43a834:	mov	x21, x1
  43a838:	mov	x20, x0
  43a83c:	mov	x0, x1
  43a840:	mov	x1, x2
  43a844:	str	x23, [sp, #16]
  43a848:	mov	x29, sp
  43a84c:	mov	x22, x2
  43a850:	mov	x19, x8
  43a854:	bl	403720 <strcasecmp@plt>
  43a858:	cbz	w0, 43a9a4 <feof@plt+0x37104>
  43a85c:	mov	x0, x21
  43a860:	bl	4030b0 <strlen@plt>
  43a864:	mov	x23, x0
  43a868:	mov	x0, x22
  43a86c:	bl	4030b0 <strlen@plt>
  43a870:	add	x8, x23, x0
  43a874:	add	x8, x8, #0x11
  43a878:	and	x8, x8, #0xfffffffffffffff0
  43a87c:	mov	x9, sp
  43a880:	sub	x23, x9, x8
  43a884:	mov	sp, x23
  43a888:	mov	x0, x23
  43a88c:	mov	x1, x22
  43a890:	bl	4032f0 <strcpy@plt>
  43a894:	bl	4030b0 <strlen@plt>
  43a898:	mov	w8, #0x2f                  	// #47
  43a89c:	strh	w8, [x23, x0]
  43a8a0:	mov	x0, x23
  43a8a4:	mov	x1, x21
  43a8a8:	bl	403850 <strcat@plt>
  43a8ac:	adrp	x1, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43a8b0:	add	x1, x1, #0x546
  43a8b4:	bl	403720 <strcasecmp@plt>
  43a8b8:	cbz	w0, 43a9c0 <feof@plt+0x37120>
  43a8bc:	adrp	x1, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43a8c0:	add	x1, x1, #0x555
  43a8c4:	mov	x0, x23
  43a8c8:	bl	403720 <strcasecmp@plt>
  43a8cc:	cbz	w0, 43a9c8 <feof@plt+0x37128>
  43a8d0:	adrp	x1, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43a8d4:	add	x1, x1, #0x564
  43a8d8:	mov	x0, x23
  43a8dc:	bl	403720 <strcasecmp@plt>
  43a8e0:	cbz	w0, 43a9d0 <feof@plt+0x37130>
  43a8e4:	adrp	x1, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43a8e8:	add	x1, x1, #0x573
  43a8ec:	mov	x0, x23
  43a8f0:	bl	403720 <strcasecmp@plt>
  43a8f4:	cbz	w0, 43a9d8 <feof@plt+0x37138>
  43a8f8:	adrp	x1, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43a8fc:	add	x1, x1, #0x582
  43a900:	mov	x0, x23
  43a904:	bl	403720 <strcasecmp@plt>
  43a908:	cbz	w0, 43a9e0 <feof@plt+0x37140>
  43a90c:	adrp	x1, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43a910:	add	x1, x1, #0x591
  43a914:	mov	x0, x23
  43a918:	bl	403720 <strcasecmp@plt>
  43a91c:	cbz	w0, 43a9e8 <feof@plt+0x37148>
  43a920:	adrp	x1, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43a924:	add	x1, x1, #0x5a0
  43a928:	mov	x0, x23
  43a92c:	bl	403720 <strcasecmp@plt>
  43a930:	cbz	w0, 43a9f0 <feof@plt+0x37150>
  43a934:	adrp	x1, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43a938:	add	x1, x1, #0x5af
  43a93c:	mov	x0, x23
  43a940:	bl	403720 <strcasecmp@plt>
  43a944:	cbz	w0, 43a9f8 <feof@plt+0x37158>
  43a948:	adrp	x8, 43a000 <feof@plt+0x36760>
  43a94c:	add	x8, x8, #0xae8
  43a950:	mov	x0, x21
  43a954:	mov	x1, x22
  43a958:	str	x8, [x19]
  43a95c:	bl	4031b0 <iconv_open@plt>
  43a960:	mov	w8, #0xffffffff            	// #-1
  43a964:	cmn	x0, #0x1
  43a968:	str	x0, [x19, #8]
  43a96c:	str	w8, [x19, #16]
  43a970:	b.ne	43aa1c <feof@plt+0x3717c>  // b.any
  43a974:	bl	4035c0 <__errno_location@plt>
  43a978:	ldr	w8, [x0]
  43a97c:	cmp	w8, #0x16
  43a980:	b.ne	43aa34 <feof@plt+0x37194>  // b.any
  43a984:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43a988:	add	x2, x2, #0x50b
  43a98c:	mov	w1, #0x3                   	// #3
  43a990:	mov	x0, x20
  43a994:	mov	x3, x22
  43a998:	mov	x4, x21
  43a99c:	bl	4424f8 <feof@plt+0x3ec58>
  43a9a0:	b	43aa48 <feof@plt+0x371a8>
  43a9a4:	adrp	x8, 43c000 <feof@plt+0x38760>
  43a9a8:	add	x8, x8, #0x204
  43a9ac:	mov	x9, #0xffffffffffffffff    	// #-1
  43a9b0:	mov	w10, #0xffffffff            	// #-1
  43a9b4:	stp	x8, x9, [x19]
  43a9b8:	str	w10, [x19, #16]
  43a9bc:	b	43aa1c <feof@plt+0x3717c>
  43a9c0:	mov	x8, xzr
  43a9c4:	b	43a9fc <feof@plt+0x3715c>
  43a9c8:	mov	w8, #0x1                   	// #1
  43a9cc:	b	43a9fc <feof@plt+0x3715c>
  43a9d0:	mov	w8, #0x2                   	// #2
  43a9d4:	b	43a9fc <feof@plt+0x3715c>
  43a9d8:	mov	w8, #0x3                   	// #3
  43a9dc:	b	43a9fc <feof@plt+0x3715c>
  43a9e0:	mov	w8, #0x4                   	// #4
  43a9e4:	b	43a9fc <feof@plt+0x3715c>
  43a9e8:	mov	w8, #0x5                   	// #5
  43a9ec:	b	43a9fc <feof@plt+0x3715c>
  43a9f0:	mov	w8, #0x6                   	// #6
  43a9f4:	b	43a9fc <feof@plt+0x3715c>
  43a9f8:	mov	w8, #0x7                   	// #7
  43a9fc:	adrp	x10, 4cf000 <_obstack_memory_used@@Base+0x532fc>
  43aa00:	mov	w9, #0x18                  	// #24
  43aa04:	add	x10, x10, #0x740
  43aa08:	madd	x8, x8, x9, x10
  43aa0c:	ldur	q0, [x8, #8]
  43aa10:	mov	w8, #0xffffffff            	// #-1
  43aa14:	str	w8, [x19, #16]
  43aa18:	str	q0, [x19]
  43aa1c:	mov	sp, x29
  43aa20:	ldp	x20, x19, [sp, #48]
  43aa24:	ldp	x22, x21, [sp, #32]
  43aa28:	ldr	x23, [sp, #16]
  43aa2c:	ldp	x29, x30, [sp], #64
  43aa30:	ret
  43aa34:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43aa38:	add	x2, x2, #0x53b
  43aa3c:	mov	w1, #0x3                   	// #3
  43aa40:	mov	x0, x20
  43aa44:	bl	442f50 <feof@plt+0x3f6b0>
  43aa48:	adrp	x8, 43c000 <feof@plt+0x38760>
  43aa4c:	add	x8, x8, #0x204
  43aa50:	str	x8, [x19]
  43aa54:	b	43aa1c <feof@plt+0x3717c>
  43aa58:	stp	x29, x30, [sp, #-32]!
  43aa5c:	stp	x20, x19, [sp, #16]
  43aa60:	ldr	x8, [x0, #520]
  43aa64:	adrp	x20, 43a000 <feof@plt+0x36760>
  43aa68:	add	x20, x20, #0xae8
  43aa6c:	mov	x19, x0
  43aa70:	cmp	x8, x20
  43aa74:	mov	x29, sp
  43aa78:	b.ne	43aa84 <feof@plt+0x371e4>  // b.any
  43aa7c:	ldr	x0, [x19, #528]
  43aa80:	bl	402fb0 <iconv_close@plt>
  43aa84:	ldr	x8, [x19, #544]
  43aa88:	cmp	x8, x20
  43aa8c:	b.ne	43aa98 <feof@plt+0x371f8>  // b.any
  43aa90:	ldr	x0, [x19, #552]
  43aa94:	bl	402fb0 <iconv_close@plt>
  43aa98:	ldr	x8, [x19, #568]
  43aa9c:	cmp	x8, x20
  43aaa0:	b.ne	43aaac <feof@plt+0x3720c>  // b.any
  43aaa4:	ldr	x0, [x19, #576]
  43aaa8:	bl	402fb0 <iconv_close@plt>
  43aaac:	ldr	x8, [x19, #592]
  43aab0:	cmp	x8, x20
  43aab4:	b.ne	43aac0 <feof@plt+0x37220>  // b.any
  43aab8:	ldr	x0, [x19, #600]
  43aabc:	bl	402fb0 <iconv_close@plt>
  43aac0:	ldr	x8, [x19, #616]
  43aac4:	cmp	x8, x20
  43aac8:	b.eq	43aad8 <feof@plt+0x37238>  // b.none
  43aacc:	ldp	x20, x19, [sp, #16]
  43aad0:	ldp	x29, x30, [sp], #32
  43aad4:	ret
  43aad8:	ldr	x0, [x19, #624]
  43aadc:	ldp	x20, x19, [sp, #16]
  43aae0:	ldp	x29, x30, [sp], #32
  43aae4:	b	402fb0 <iconv_close@plt>
  43aae8:	sub	sp, sp, #0x50
  43aaec:	stp	x22, x21, [sp, #48]
  43aaf0:	stp	x20, x19, [sp, #64]
  43aaf4:	mov	x19, x3
  43aaf8:	mov	x21, x2
  43aafc:	mov	x22, x1
  43ab00:	mov	x1, xzr
  43ab04:	mov	x2, xzr
  43ab08:	mov	x3, xzr
  43ab0c:	mov	x4, xzr
  43ab10:	stp	x29, x30, [sp, #32]
  43ab14:	add	x29, sp, #0x20
  43ab18:	mov	x20, x0
  43ab1c:	bl	4034c0 <iconv@plt>
  43ab20:	cmn	x0, #0x1
  43ab24:	b.eq	43ac04 <feof@plt+0x37364>  // b.none
  43ab28:	stur	x22, [x29, #-8]
  43ab2c:	ldr	x8, [x19]
  43ab30:	ldr	x9, [x19, #16]
  43ab34:	sub	x1, x29, #0x8
  43ab38:	add	x2, sp, #0x8
  43ab3c:	add	x3, sp, #0x10
  43ab40:	add	x8, x8, x9
  43ab44:	stp	x21, x8, [sp, #8]
  43ab48:	ldr	x8, [x19, #8]
  43ab4c:	mov	x4, sp
  43ab50:	mov	x0, x20
  43ab54:	sub	x8, x8, x9
  43ab58:	str	x8, [sp]
  43ab5c:	bl	4034c0 <iconv@plt>
  43ab60:	ldr	x8, [sp, #8]
  43ab64:	cbnz	x8, 43ac1c <feof@plt+0x3737c>
  43ab68:	add	x3, sp, #0x10
  43ab6c:	mov	x4, sp
  43ab70:	mov	x0, x20
  43ab74:	mov	x1, xzr
  43ab78:	mov	x2, xzr
  43ab7c:	bl	4034c0 <iconv@plt>
  43ab80:	cmn	x0, #0x1
  43ab84:	b.eq	43aba0 <feof@plt+0x37300>  // b.none
  43ab88:	ldr	x8, [x19, #8]
  43ab8c:	ldr	x9, [sp]
  43ab90:	mov	w0, #0x1                   	// #1
  43ab94:	sub	x8, x8, x9
  43ab98:	str	x8, [x19, #16]
  43ab9c:	b	43ac08 <feof@plt+0x37368>
  43aba0:	bl	4035c0 <__errno_location@plt>
  43aba4:	ldr	w8, [x0]
  43aba8:	cmp	w8, #0x7
  43abac:	b.ne	43ac04 <feof@plt+0x37364>  // b.any
  43abb0:	ldr	x8, [sp]
  43abb4:	add	x8, x8, #0x100
  43abb8:	str	x8, [sp]
  43abbc:	ldp	x0, x8, [x19]
  43abc0:	add	x1, x8, #0x100
  43abc4:	str	x1, [x19, #8]
  43abc8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43abcc:	str	x0, [x19]
  43abd0:	ldr	x8, [x19, #8]
  43abd4:	ldr	x9, [sp]
  43abd8:	add	x3, sp, #0x10
  43abdc:	mov	x4, sp
  43abe0:	add	x8, x0, x8
  43abe4:	sub	x8, x8, x9
  43abe8:	mov	x0, x20
  43abec:	mov	x1, xzr
  43abf0:	mov	x2, xzr
  43abf4:	str	x8, [sp, #16]
  43abf8:	bl	4034c0 <iconv@plt>
  43abfc:	cmn	x0, #0x1
  43ac00:	b.ne	43ab88 <feof@plt+0x372e8>  // b.any
  43ac04:	mov	w0, wzr
  43ac08:	ldp	x20, x19, [sp, #64]
  43ac0c:	ldp	x22, x21, [sp, #48]
  43ac10:	ldp	x29, x30, [sp, #32]
  43ac14:	add	sp, sp, #0x50
  43ac18:	ret
  43ac1c:	bl	4035c0 <__errno_location@plt>
  43ac20:	mov	x21, x0
  43ac24:	ldr	w8, [x21]
  43ac28:	cmp	w8, #0x7
  43ac2c:	b.ne	43ac04 <feof@plt+0x37364>  // b.any
  43ac30:	ldr	x8, [sp]
  43ac34:	add	x8, x8, #0x100
  43ac38:	str	x8, [sp]
  43ac3c:	ldp	x0, x8, [x19]
  43ac40:	add	x1, x8, #0x100
  43ac44:	str	x1, [x19, #8]
  43ac48:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43ac4c:	str	x0, [x19]
  43ac50:	ldr	x8, [x19, #8]
  43ac54:	ldr	x9, [sp]
  43ac58:	sub	x1, x29, #0x8
  43ac5c:	add	x2, sp, #0x8
  43ac60:	add	x8, x0, x8
  43ac64:	sub	x8, x8, x9
  43ac68:	add	x3, sp, #0x10
  43ac6c:	mov	x4, sp
  43ac70:	mov	x0, x20
  43ac74:	str	x8, [sp, #16]
  43ac78:	bl	4034c0 <iconv@plt>
  43ac7c:	ldr	x8, [sp, #8]
  43ac80:	cbz	x8, 43ab68 <feof@plt+0x372c8>
  43ac84:	b	43ac24 <feof@plt+0x37384>
  43ac88:	sub	sp, sp, #0x40
  43ac8c:	stp	x20, x19, [sp, #48]
  43ac90:	mov	w20, w1
  43ac94:	cmp	w1, #0x7f
  43ac98:	mov	x19, x0
  43ac9c:	stp	x29, x30, [sp, #32]
  43aca0:	add	x29, sp, #0x20
  43aca4:	b.cc	43acb8 <feof@plt+0x37418>  // b.lo, b.ul, b.last
  43aca8:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43acac:	mov	w3, w20
  43acb0:	add	x2, x2, #0x1f4
  43acb4:	b	43ad30 <feof@plt+0x37490>
  43acb8:	mov	w8, #0x1                   	// #1
  43acbc:	mov	w0, #0x1                   	// #1
  43acc0:	sturb	w20, [x29, #-4]
  43acc4:	str	x8, [sp, #8]
  43acc8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  43accc:	str	x0, [sp]
  43acd0:	str	xzr, [sp, #16]
  43acd4:	ldr	x8, [x19, #520]
  43acd8:	ldr	x0, [x19, #528]
  43acdc:	sub	x1, x29, #0x4
  43ace0:	mov	x3, sp
  43ace4:	mov	w2, #0x1                   	// #1
  43ace8:	blr	x8
  43acec:	tbz	w0, #0, 43ad0c <feof@plt+0x3746c>
  43acf0:	ldr	x8, [sp, #16]
  43acf4:	cmp	x8, #0x1
  43acf8:	b.ne	43ad24 <feof@plt+0x37484>  // b.any
  43acfc:	ldr	x0, [sp]
  43ad00:	ldrb	w19, [x0]
  43ad04:	bl	4031d0 <free@plt>
  43ad08:	b	43ad40 <feof@plt+0x374a0>
  43ad0c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ad10:	add	x2, x2, #0x22e
  43ad14:	mov	w1, #0x4                   	// #4
  43ad18:	mov	x0, x19
  43ad1c:	bl	442f50 <feof@plt+0x3f6b0>
  43ad20:	b	43ad3c <feof@plt+0x3749c>
  43ad24:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ad28:	mov	w3, w20
  43ad2c:	add	x2, x2, #0x254
  43ad30:	mov	w1, #0x4                   	// #4
  43ad34:	mov	x0, x19
  43ad38:	bl	4424f8 <feof@plt+0x3ec58>
  43ad3c:	mov	w19, wzr
  43ad40:	mov	w0, w19
  43ad44:	ldp	x20, x19, [sp, #48]
  43ad48:	ldp	x29, x30, [sp, #32]
  43ad4c:	add	sp, sp, #0x40
  43ad50:	ret
  43ad54:	stp	x29, x30, [sp, #-32]!
  43ad58:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43ad5c:	ldr	d0, [x8, #4000]
  43ad60:	str	x19, [sp, #16]
  43ad64:	mov	x19, x0
  43ad68:	str	xzr, [x0]
  43ad6c:	str	d0, [x0, #8]
  43ad70:	mov	w0, #0x40                  	// #64
  43ad74:	mov	x29, sp
  43ad78:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  43ad7c:	str	x0, [x19]
  43ad80:	ldr	x19, [sp, #16]
  43ad84:	ldp	x29, x30, [sp], #32
  43ad88:	ret
  43ad8c:	ldr	x0, [x0]
  43ad90:	b	4031d0 <free@plt>
  43ad94:	stp	x29, x30, [sp, #-32]!
  43ad98:	stp	x20, x19, [sp, #16]
  43ad9c:	ldp	w8, w9, [x0, #8]
  43ada0:	mov	x19, x0
  43ada4:	sxtw	x9, w9
  43ada8:	mov	x20, x1
  43adac:	cmp	w8, w9
  43adb0:	mov	x29, sp
  43adb4:	b.ge	43adc0 <feof@plt+0x37520>  // b.tcont
  43adb8:	ldr	x0, [x19]
  43adbc:	b	43addc <feof@plt+0x3753c>
  43adc0:	ldr	x0, [x19]
  43adc4:	lsl	w8, w9, #1
  43adc8:	lsl	x1, x9, #4
  43adcc:	str	w8, [x19, #12]
  43add0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43add4:	ldr	w8, [x19, #8]
  43add8:	str	x0, [x19]
  43addc:	add	w9, w8, #0x1
  43ade0:	str	w9, [x19, #8]
  43ade4:	str	x20, [x0, w8, sxtw #3]
  43ade8:	ldp	x20, x19, [sp, #16]
  43adec:	ldp	x29, x30, [sp], #32
  43adf0:	ret
  43adf4:	stp	x29, x30, [sp, #-64]!
  43adf8:	cmp	w1, #0x1
  43adfc:	str	x23, [sp, #16]
  43ae00:	stp	x22, x21, [sp, #32]
  43ae04:	stp	x20, x19, [sp, #48]
  43ae08:	mov	x29, sp
  43ae0c:	b.lt	43ae88 <feof@plt+0x375e8>  // b.tstop
  43ae10:	mov	x19, x2
  43ae14:	mov	w20, w1
  43ae18:	mov	x21, x0
  43ae1c:	mov	w22, #0x60000000            	// #1610612736
  43ae20:	b	43ae54 <feof@plt+0x375b4>
  43ae24:	ldr	x0, [x21]
  43ae28:	lsl	w8, w9, #1
  43ae2c:	lsl	x1, x9, #4
  43ae30:	str	w8, [x21, #12]
  43ae34:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43ae38:	ldr	w8, [x21, #8]
  43ae3c:	str	x0, [x21]
  43ae40:	add	w9, w8, #0x1
  43ae44:	subs	w20, w20, #0x1
  43ae48:	str	w9, [x21, #8]
  43ae4c:	str	x23, [x0, w8, sxtw #3]
  43ae50:	b.eq	43ae88 <feof@plt+0x375e8>  // b.none
  43ae54:	ldr	w23, [x19]
  43ae58:	cmp	w23, w22
  43ae5c:	b.hi	43ae6c <feof@plt+0x375cc>  // b.pmore
  43ae60:	ldr	w8, [x19, #4]
  43ae64:	add	w8, w8, w23
  43ae68:	str	w8, [x19]
  43ae6c:	ldp	w8, w9, [x21, #8]
  43ae70:	bfi	x23, x23, #32, #32
  43ae74:	sxtw	x9, w9
  43ae78:	cmp	w8, w9
  43ae7c:	b.ge	43ae24 <feof@plt+0x37584>  // b.tcont
  43ae80:	ldr	x0, [x21]
  43ae84:	b	43ae40 <feof@plt+0x375a0>
  43ae88:	ldp	x20, x19, [sp, #48]
  43ae8c:	ldp	x22, x21, [sp, #32]
  43ae90:	ldr	x23, [sp, #16]
  43ae94:	ldp	x29, x30, [sp], #64
  43ae98:	ret
  43ae9c:	mov	x8, x0
  43aea0:	ldr	w0, [x0]
  43aea4:	mov	w9, #0x60000000            	// #1610612736
  43aea8:	cmp	w0, w9
  43aeac:	b.hi	43aebc <feof@plt+0x3761c>  // b.pmore
  43aeb0:	ldr	w9, [x8, #4]
  43aeb4:	add	w9, w9, w0
  43aeb8:	str	w9, [x8]
  43aebc:	bfi	x0, x0, #32, #32
  43aec0:	ret
  43aec4:	sub	sp, sp, #0x70
  43aec8:	stp	x29, x30, [sp, #16]
  43aecc:	stp	x28, x27, [sp, #32]
  43aed0:	stp	x26, x25, [sp, #48]
  43aed4:	stp	x24, x23, [sp, #64]
  43aed8:	stp	x22, x21, [sp, #80]
  43aedc:	stp	x20, x19, [sp, #96]
  43aee0:	ldrb	w8, [x0, #1120]
  43aee4:	ldr	x21, [x1]
  43aee8:	mov	x26, x7
  43aeec:	mov	x27, x6
  43aef0:	mov	x24, x4
  43aef4:	mov	w22, w3
  43aef8:	mov	x25, x1
  43aefc:	mov	x20, x0
  43af00:	mov	x28, x2
  43af04:	add	x29, sp, #0x10
  43af08:	str	x5, [sp, #8]
  43af0c:	cbz	w8, 43af38 <feof@plt+0x37698>
  43af10:	cbnz	w22, 43af70 <feof@plt+0x376d0>
  43af14:	ldrb	w8, [x20, #1138]
  43af18:	cbz	w8, 43af70 <feof@plt+0x376d0>
  43af1c:	ldurb	w3, [x21, #-1]
  43af20:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43af24:	add	x2, x2, #0x300
  43af28:	mov	w1, #0x6                   	// #6
  43af2c:	mov	x0, x20
  43af30:	bl	442628 <feof@plt+0x3ed88>
  43af34:	b	43af70 <feof@plt+0x376d0>
  43af38:	ldrb	w9, [x20, #1152]
  43af3c:	cbz	w9, 43af5c <feof@plt+0x376bc>
  43af40:	ldrsb	w9, [x20, #1198]
  43af44:	cmp	w9, #0x1
  43af48:	b.lt	43af10 <feof@plt+0x37670>  // b.tstop
  43af4c:	cbnz	w8, 43af10 <feof@plt+0x37670>
  43af50:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43af54:	add	x2, x2, #0x2c6
  43af58:	b	43af64 <feof@plt+0x376c4>
  43af5c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43af60:	add	x2, x2, #0x28e
  43af64:	mov	x0, x20
  43af68:	mov	w1, wzr
  43af6c:	bl	4424f8 <feof@plt+0x3ec58>
  43af70:	ldurb	w8, [x21, #-1]
  43af74:	sub	x4, x21, #0x2
  43af78:	cmp	w8, #0x75
  43af7c:	b.eq	43af90 <feof@plt+0x376f0>  // b.none
  43af80:	cmp	w8, #0x55
  43af84:	b.ne	43af98 <feof@plt+0x376f8>  // b.any
  43af88:	mov	w19, #0x8                   	// #8
  43af8c:	b	43afb8 <feof@plt+0x37718>
  43af90:	mov	w19, #0x4                   	// #4
  43af94:	b	43afb8 <feof@plt+0x37718>
  43af98:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43af9c:	add	x2, x2, #0x333
  43afa0:	mov	w1, #0x4                   	// #4
  43afa4:	mov	x0, x20
  43afa8:	mov	w19, #0x4                   	// #4
  43afac:	mov	x23, x4
  43afb0:	bl	4424f8 <feof@plt+0x3ec58>
  43afb4:	mov	x4, x23
  43afb8:	adrp	x8, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  43afbc:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  43afc0:	mov	w23, wzr
  43afc4:	add	x8, x8, #0x4a2
  43afc8:	add	x9, x9, #0x1c3
  43afcc:	mov	w10, #0x60000000            	// #1610612736
  43afd0:	ldrb	w11, [x21]
  43afd4:	ldrh	w12, [x8, x11, lsl #1]
  43afd8:	tbz	w12, #8, 43b028 <feof@plt+0x37788>
  43afdc:	cbz	x26, 43b000 <feof@plt+0x37760>
  43afe0:	cbz	x27, 43b33c <feof@plt+0x37a9c>
  43afe4:	ldr	w12, [x26]
  43afe8:	cmp	w12, w10
  43afec:	b.hi	43affc <feof@plt+0x3775c>  // b.pmore
  43aff0:	ldr	w13, [x26, #4]
  43aff4:	add	w13, w13, w12
  43aff8:	str	w13, [x26]
  43affc:	str	w12, [x27, #4]
  43b000:	ldrb	w11, [x9, x11]
  43b004:	add	x21, x21, #0x1
  43b008:	cmp	x21, x28
  43b00c:	add	w23, w11, w23, lsl #4
  43b010:	sub	w11, w19, #0x1
  43b014:	b.cs	43b02c <feof@plt+0x3778c>  // b.hs, b.nlast
  43b018:	cmp	w19, #0x1
  43b01c:	mov	w19, w11
  43b020:	b.ne	43afd0 <feof@plt+0x37730>  // b.any
  43b024:	b	43b02c <feof@plt+0x3778c>
  43b028:	mov	w11, w19
  43b02c:	cbz	w22, 43b040 <feof@plt+0x377a0>
  43b030:	cbz	w11, 43b040 <feof@plt+0x377a0>
  43b034:	mov	w23, wzr
  43b038:	mov	w0, wzr
  43b03c:	b	43b114 <feof@plt+0x37874>
  43b040:	str	x21, [x25]
  43b044:	cbz	w11, 43b058 <feof@plt+0x377b8>
  43b048:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43b04c:	sub	w3, w21, w4
  43b050:	add	x2, x2, #0x379
  43b054:	b	43b100 <feof@plt+0x37860>
  43b058:	cmp	w23, #0x9f
  43b05c:	b.hi	43b08c <feof@plt+0x377ec>  // b.pmore
  43b060:	ldrb	w8, [x20, #1120]
  43b064:	cbnz	w8, 43b08c <feof@plt+0x377ec>
  43b068:	sub	w8, w23, #0x24
  43b06c:	cmp	w8, #0x3c
  43b070:	b.hi	43b0f4 <feof@plt+0x37854>  // b.pmore
  43b074:	mov	w9, #0x1                   	// #1
  43b078:	lsl	x8, x9, x8
  43b07c:	mov	x9, #0x1000000010000000    	// #1152921504875282432
  43b080:	movk	x9, #0x1
  43b084:	tst	x8, x9
  43b088:	b.eq	43b0f4 <feof@plt+0x37854>  // b.none
  43b08c:	tbnz	w23, #31, 43b0f4 <feof@plt+0x37854>
  43b090:	and	w8, w23, #0xfffff800
  43b094:	mov	w9, #0xd800                	// #55296
  43b098:	cmp	w8, w9
  43b09c:	b.eq	43b0f4 <feof@plt+0x37854>  // b.none
  43b0a0:	cbz	w22, 43b13c <feof@plt+0x3789c>
  43b0a4:	cmp	w23, #0x24
  43b0a8:	b.ne	43b13c <feof@plt+0x3789c>  // b.any
  43b0ac:	ldrb	w8, [x20, #1146]
  43b0b0:	cbz	w8, 43b13c <feof@plt+0x3789c>
  43b0b4:	ldrb	w8, [x20, #1148]
  43b0b8:	ldr	x19, [sp, #8]
  43b0bc:	cbz	w8, 43b0e0 <feof@plt+0x37840>
  43b0c0:	ldrb	w8, [x20, #18]
  43b0c4:	cbnz	w8, 43b0e0 <feof@plt+0x37840>
  43b0c8:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43b0cc:	add	x2, x2, #0x3ca
  43b0d0:	mov	w1, #0x2                   	// #2
  43b0d4:	mov	x0, x20
  43b0d8:	strb	wzr, [x20, #1148]
  43b0dc:	bl	4424f8 <feof@plt+0x3ec58>
  43b0e0:	mov	w23, #0x24                  	// #36
  43b0e4:	strb	wzr, [x24, #4]
  43b0e8:	str	w23, [x24]
  43b0ec:	mov	w0, #0x1                   	// #1
  43b0f0:	b	43b118 <feof@plt+0x37878>
  43b0f4:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43b0f8:	sub	w3, w21, w4
  43b0fc:	add	x2, x2, #0x3a2
  43b100:	mov	w1, #0x3                   	// #3
  43b104:	mov	x0, x20
  43b108:	bl	4424f8 <feof@plt+0x3ec58>
  43b10c:	mov	w23, #0x1                   	// #1
  43b110:	mov	w0, #0x1                   	// #1
  43b114:	ldr	x19, [sp, #8]
  43b118:	str	w23, [x19]
  43b11c:	ldp	x20, x19, [sp, #96]
  43b120:	ldp	x22, x21, [sp, #80]
  43b124:	ldp	x24, x23, [sp, #64]
  43b128:	ldp	x26, x25, [sp, #48]
  43b12c:	ldp	x28, x27, [sp, #32]
  43b130:	ldp	x29, x30, [sp, #16]
  43b134:	add	sp, sp, #0x70
  43b138:	ret
  43b13c:	cbz	w22, 43b110 <feof@plt+0x37870>
  43b140:	lsr	w8, w23, #16
  43b144:	cmp	w8, #0x10
  43b148:	b.hi	43b1f4 <feof@plt+0x37954>  // b.pmore
  43b14c:	adrp	x8, 4cf000 <_obstack_memory_used@@Base+0x532fc>
  43b150:	mov	x19, x24
  43b154:	mov	w10, wzr
  43b158:	mov	w9, #0x73c                 	// #1852
  43b15c:	add	x8, x8, #0x800
  43b160:	add	w11, w9, w10
  43b164:	cmp	w11, #0x0
  43b168:	cinc	w11, w11, lt  // lt = tstop
  43b16c:	asr	w11, w11, #1
  43b170:	add	x12, x8, w11, sxtw #3
  43b174:	ldr	w12, [x12, #4]
  43b178:	cmp	w12, w23
  43b17c:	csel	w9, w9, w11, cc  // cc = lo, ul, last
  43b180:	csinc	w10, w10, w11, cs  // cs = hs, nlast
  43b184:	cmp	w9, w10
  43b188:	b.ne	43b160 <feof@plt+0x378c0>  // b.any
  43b18c:	ldrb	w10, [x20, #1154]
  43b190:	cbz	w10, 43b1a4 <feof@plt+0x37904>
  43b194:	ldrb	w10, [x20, #1164]
  43b198:	cbz	w10, 43b1ac <feof@plt+0x3790c>
  43b19c:	mov	w10, #0x8                   	// #8
  43b1a0:	b	43b1d0 <feof@plt+0x37930>
  43b1a4:	mov	w10, #0xd                   	// #13
  43b1a8:	b	43b1d0 <feof@plt+0x37930>
  43b1ac:	ldrb	w10, [x20, #1152]
  43b1b0:	cbz	w10, 43b1bc <feof@plt+0x3791c>
  43b1b4:	mov	w10, #0x1                   	// #1
  43b1b8:	b	43b1d0 <feof@plt+0x37930>
  43b1bc:	ldrb	w10, [x20, #1120]
  43b1c0:	mov	w11, #0x4                   	// #4
  43b1c4:	cmp	w10, #0x0
  43b1c8:	mov	w10, #0xd                   	// #13
  43b1cc:	csel	w10, w10, w11, eq  // eq = none
  43b1d0:	sbfiz	x11, x9, #3, #32
  43b1d4:	ldrh	w25, [x8, x11]
  43b1d8:	tst	w10, w25
  43b1dc:	b.eq	43b1f4 <feof@plt+0x37954>  // b.none
  43b1e0:	ldrb	w10, [x20, #1164]
  43b1e4:	sxtw	x9, w9
  43b1e8:	cbz	w10, 43b210 <feof@plt+0x37970>
  43b1ec:	mov	w26, #0x10                  	// #16
  43b1f0:	b	43b220 <feof@plt+0x37980>
  43b1f4:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43b1f8:	sub	w3, w21, w4
  43b1fc:	add	x2, x2, #0x3e6
  43b200:	mov	w1, #0x3                   	// #3
  43b204:	mov	x0, x20
  43b208:	bl	4424f8 <feof@plt+0x3ec58>
  43b20c:	b	43b110 <feof@plt+0x37870>
  43b210:	ldrb	w10, [x20, #1152]
  43b214:	cmp	w10, #0x0
  43b218:	cset	w10, ne  // ne = any
  43b21c:	lsl	w26, w10, #1
  43b220:	add	x8, x8, x9, lsl #3
  43b224:	ldrb	w27, [x8, #2]
  43b228:	cbz	w27, 43b244 <feof@plt+0x379a4>
  43b22c:	ldrb	w8, [x19, #4]
  43b230:	cmp	w27, w8
  43b234:	b.cs	43b244 <feof@plt+0x379a4>  // b.hs, b.nlast
  43b238:	mov	w8, #0x3                   	// #3
  43b23c:	str	w8, [x19, #8]
  43b240:	b	43b314 <feof@plt+0x37a74>
  43b244:	tbnz	w25, #8, 43b258 <feof@plt+0x379b8>
  43b248:	tbnz	w25, #7, 43b30c <feof@plt+0x37a6c>
  43b24c:	tbnz	w25, #6, 43b2dc <feof@plt+0x37a3c>
  43b250:	tbnz	w25, #5, 43b27c <feof@plt+0x379dc>
  43b254:	b	43b304 <feof@plt+0x37a64>
  43b258:	ldr	w2, [x19]
  43b25c:	mov	w8, #0xffffee9f            	// #-4449
  43b260:	add	w8, w23, w8
  43b264:	cmp	w8, #0x14
  43b268:	b.hi	43b290 <feof@plt+0x379f0>  // b.pmore
  43b26c:	mov	w8, #0xffffef00            	// #-4352
  43b270:	add	w8, w2, w8
  43b274:	cmp	w8, #0x12
  43b278:	b.hi	43b30c <feof@plt+0x37a6c>  // b.pmore
  43b27c:	ldr	w8, [x19, #8]
  43b280:	mov	w9, #0x2                   	// #2
  43b284:	cmp	w8, #0x2
  43b288:	csel	w8, w8, w9, gt
  43b28c:	b	43b308 <feof@plt+0x37a68>
  43b290:	mov	w8, #0xffffee58            	// #-4520
  43b294:	add	w8, w23, w8
  43b298:	cmp	w8, #0x1a
  43b29c:	b.hi	43b2ec <feof@plt+0x37a4c>  // b.pmore
  43b2a0:	mov	w8, #0xffff5400            	// #-44032
  43b2a4:	add	w8, w2, w8
  43b2a8:	lsr	w9, w8, #2
  43b2ac:	cmp	w9, #0xae8
  43b2b0:	b.hi	43b30c <feof@plt+0x37a6c>  // b.pmore
  43b2b4:	mov	w9, #0x6db7                	// #28087
  43b2b8:	and	w8, w8, #0xffff
  43b2bc:	movk	w9, #0xb6db, lsl #16
  43b2c0:	mul	w8, w8, w9
  43b2c4:	mov	w9, #0x9249                	// #37449
  43b2c8:	ror	w8, w8, #2
  43b2cc:	movk	w9, #0x924, lsl #16
  43b2d0:	cmp	w8, w9
  43b2d4:	b.hi	43b30c <feof@plt+0x37a6c>  // b.pmore
  43b2d8:	b	43b27c <feof@plt+0x379dc>
  43b2dc:	ldr	w8, [x19, #8]
  43b2e0:	cmp	w8, #0x1
  43b2e4:	csinc	w8, w8, wzr, gt
  43b2e8:	b	43b308 <feof@plt+0x37a68>
  43b2ec:	mov	x0, x20
  43b2f0:	mov	w1, w23
  43b2f4:	mov	x24, x4
  43b2f8:	bl	43d42c <feof@plt+0x39b8c>
  43b2fc:	mov	x4, x24
  43b300:	tbnz	w0, #0, 43b30c <feof@plt+0x37a6c>
  43b304:	mov	w8, #0x3                   	// #3
  43b308:	str	w8, [x19, #8]
  43b30c:	cbnz	w27, 43b314 <feof@plt+0x37a74>
  43b310:	str	w23, [x19]
  43b314:	cmp	w22, #0x1
  43b318:	mov	w0, #0x1                   	// #1
  43b31c:	strb	w27, [x19, #4]
  43b320:	b.ne	43b114 <feof@plt+0x37874>  // b.any
  43b324:	and	w8, w26, w25
  43b328:	cbz	w8, 43b114 <feof@plt+0x37874>
  43b32c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43b330:	sub	w3, w21, w4
  43b334:	add	x2, x2, #0x41d
  43b338:	b	43b200 <feof@plt+0x37960>
  43b33c:	adrp	x0, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43b340:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43b344:	add	x0, x0, #0x353
  43b348:	add	x2, x2, #0x36a
  43b34c:	mov	w1, #0x434                 	// #1076
  43b350:	bl	429434 <feof@plt+0x25b94>
  43b354:	mov	x5, xzr
  43b358:	mov	x6, xzr
  43b35c:	b	43b360 <feof@plt+0x37ac0>
  43b360:	sub	sp, sp, #0x140
  43b364:	sub	w8, w4, #0x39
  43b368:	stp	x20, x19, [sp, #304]
  43b36c:	mov	x19, x6
  43b370:	cmp	w8, #0x9
  43b374:	mov	x20, x0
  43b378:	stp	x29, x30, [sp, #224]
  43b37c:	stp	x28, x27, [sp, #240]
  43b380:	stp	x26, x25, [sp, #256]
  43b384:	stp	x24, x23, [sp, #272]
  43b388:	stp	x22, x21, [sp, #288]
  43b38c:	add	x29, sp, #0xe0
  43b390:	stp	x1, x5, [sp, #48]
  43b394:	str	x3, [sp, #80]
  43b398:	str	x2, [sp, #40]
  43b39c:	b.hi	43b3f8 <feof@plt+0x37b58>  // b.pmore
  43b3a0:	adrp	x9, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43b3a4:	add	x9, x9, #0xfa8
  43b3a8:	adr	x10, 43b3b8 <feof@plt+0x37b18>
  43b3ac:	ldrb	w11, [x9, x8]
  43b3b0:	add	x10, x10, x11, lsl #2
  43b3b4:	br	x10
  43b3b8:	add	x8, x20, #0x268
  43b3bc:	add	x9, x20, #0x270
  43b3c0:	add	x10, x20, #0x278
  43b3c4:	b	43b404 <feof@plt+0x37b64>
  43b3c8:	add	x8, x20, #0x220
  43b3cc:	add	x9, x20, #0x228
  43b3d0:	add	x10, x20, #0x230
  43b3d4:	b	43b404 <feof@plt+0x37b64>
  43b3d8:	add	x8, x20, #0x250
  43b3dc:	add	x9, x20, #0x258
  43b3e0:	add	x10, x20, #0x260
  43b3e4:	b	43b404 <feof@plt+0x37b64>
  43b3e8:	add	x8, x20, #0x238
  43b3ec:	add	x9, x20, #0x240
  43b3f0:	add	x10, x20, #0x248
  43b3f4:	b	43b404 <feof@plt+0x37b64>
  43b3f8:	add	x8, x20, #0x208
  43b3fc:	add	x9, x20, #0x210
  43b400:	add	x10, x20, #0x218
  43b404:	ldr	x11, [sp, #56]
  43b408:	cmp	x11, #0x0
  43b40c:	cset	w11, ne  // ne = any
  43b410:	cmp	x19, #0x0
  43b414:	cset	w12, ne  // ne = any
  43b418:	cmp	w11, w12
  43b41c:	b.ne	43c0f4 <feof@plt+0x38854>  // b.any
  43b420:	ldr	w11, [x8, #20]
  43b424:	ldr	x8, [x8]
  43b428:	ldr	w10, [x10]
  43b42c:	ldr	x9, [x9]
  43b430:	str	w11, [sp, #20]
  43b434:	str	x8, [sp, #112]
  43b438:	ldr	x8, [sp, #80]
  43b43c:	str	x10, [sp, #32]
  43b440:	str	x9, [sp, #96]
  43b444:	cbz	x8, 43b46c <feof@plt+0x37bcc>
  43b448:	ldr	x8, [sp, #48]
  43b44c:	mov	w9, #0x100                 	// #256
  43b450:	ldr	w8, [x8]
  43b454:	cmp	w8, #0x100
  43b458:	csel	w0, w8, w9, hi  // hi = pmore
  43b45c:	stur	x0, [x29, #-96]
  43b460:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  43b464:	stur	x0, [x29, #-104]
  43b468:	stur	xzr, [x29, #-88]
  43b46c:	ldr	x8, [sp, #32]
  43b470:	str	x20, [sp, #104]
  43b474:	sxtw	x11, w8
  43b478:	ldr	x8, [sp, #40]
  43b47c:	str	x11, [sp, #8]
  43b480:	cbz	x8, 43bea8 <feof@plt+0x38608>
  43b484:	ldr	x8, [sp, #80]
  43b488:	mov	w9, #0x20                  	// #32
  43b48c:	mov	x10, #0xffffffffffffffff    	// #-1
  43b490:	mov	w20, #0x1                   	// #1
  43b494:	cmp	x8, #0x0
  43b498:	sub	x8, x29, #0x68
  43b49c:	csel	x8, x8, xzr, ne  // ne = any
  43b4a0:	cmp	x11, #0x20
  43b4a4:	str	x8, [sp, #88]
  43b4a8:	csel	x8, x11, x9, cc  // cc = lo, ul, last
  43b4ac:	lsl	x8, x10, x8
  43b4b0:	mov	x23, xzr
  43b4b4:	mov	x21, xzr
  43b4b8:	movk	w20, #0x6000, lsl #16
  43b4bc:	eor	x8, x8, #0xffffffff
  43b4c0:	str	x8, [sp, #64]
  43b4c4:	b	43b4dc <feof@plt+0x37c3c>
  43b4c8:	tbz	w0, #0, 43bef8 <feof@plt+0x38658>
  43b4cc:	ldr	x8, [sp, #40]
  43b4d0:	add	x23, x23, #0x1
  43b4d4:	cmp	x23, x8
  43b4d8:	b.eq	43beac <feof@plt+0x3860c>  // b.none
  43b4dc:	ldp	x8, x12, [sp, #48]
  43b4e0:	lsl	x10, x23, #4
  43b4e4:	add	x9, x8, x10
  43b4e8:	ldr	x8, [x9, #8]
  43b4ec:	add	x10, x12, x10
  43b4f0:	cmp	x12, #0x0
  43b4f4:	csel	x21, x10, x21, ne  // ne = any
  43b4f8:	ldrb	w11, [x8]
  43b4fc:	cmp	w11, #0x4c
  43b500:	b.eq	43b564 <feof@plt+0x37cc4>  // b.none
  43b504:	cmp	w11, #0x55
  43b508:	b.eq	43b564 <feof@plt+0x37cc4>  // b.none
  43b50c:	cmp	w11, #0x75
  43b510:	b.ne	43b5fc <feof@plt+0x37d5c>  // b.any
  43b514:	add	x10, x8, #0x1
  43b518:	cbz	x21, 43b534 <feof@plt+0x37c94>
  43b51c:	ldr	w11, [x21]
  43b520:	cmp	w11, w20
  43b524:	b.cs	43b534 <feof@plt+0x37c94>  // b.hs, b.nlast
  43b528:	ldr	w12, [x21, #4]
  43b52c:	add	w11, w12, w11
  43b530:	str	w11, [x21]
  43b534:	ldrb	w11, [x10]
  43b538:	cmp	w11, #0x38
  43b53c:	b.ne	43b56c <feof@plt+0x37ccc>  // b.any
  43b540:	add	x10, x8, #0x2
  43b544:	cbz	x21, 43b568 <feof@plt+0x37cc8>
  43b548:	ldr	w11, [x21]
  43b54c:	cmp	w11, w20
  43b550:	b.cs	43b568 <feof@plt+0x37cc8>  // b.hs, b.nlast
  43b554:	ldr	w12, [x21, #4]
  43b558:	add	w11, w12, w11
  43b55c:	str	w11, [x21]
  43b560:	b	43b568 <feof@plt+0x37cc8>
  43b564:	add	x10, x8, #0x1
  43b568:	ldrb	w11, [x10]
  43b56c:	cmp	w11, #0x22
  43b570:	b.eq	43b608 <feof@plt+0x37d68>  // b.none
  43b574:	cmp	w11, #0x27
  43b578:	b.eq	43b608 <feof@plt+0x37d68>  // b.none
  43b57c:	cmp	w11, #0x52
  43b580:	b.ne	43bf10 <feof@plt+0x38670>  // b.any
  43b584:	add	x11, x10, #0x2
  43b588:	cbz	x21, 43b5b4 <feof@plt+0x37d14>
  43b58c:	ldr	w13, [x21]
  43b590:	cmp	w13, w20
  43b594:	b.cs	43b5b4 <feof@plt+0x37d14>  // b.hs, b.nlast
  43b598:	ldr	w12, [x21, #4]
  43b59c:	add	w13, w12, w13
  43b5a0:	cmp	w13, w20
  43b5a4:	str	w13, [x21]
  43b5a8:	b.cs	43b5b4 <feof@plt+0x37d14>  // b.hs, b.nlast
  43b5ac:	add	w12, w12, w13
  43b5b0:	str	w12, [x21]
  43b5b4:	ldrb	w12, [x10, #2]
  43b5b8:	add	x24, x10, #0x3
  43b5bc:	cmp	w12, #0x28
  43b5c0:	b.ne	43b5dc <feof@plt+0x37d3c>  // b.any
  43b5c4:	mov	x10, x11
  43b5c8:	cbnz	x21, 43bdb4 <feof@plt+0x38514>
  43b5cc:	b	43bdcc <feof@plt+0x3852c>
  43b5d0:	ldrb	w10, [x24], #1
  43b5d4:	cmp	w10, #0x28
  43b5d8:	b.eq	43bdac <feof@plt+0x3850c>  // b.none
  43b5dc:	cbz	x21, 43b5d0 <feof@plt+0x37d30>
  43b5e0:	ldr	w10, [x21]
  43b5e4:	cmp	w10, w20
  43b5e8:	b.cs	43b5d0 <feof@plt+0x37d30>  // b.hs, b.nlast
  43b5ec:	ldr	w12, [x21, #4]
  43b5f0:	add	w10, w12, w10
  43b5f4:	str	w10, [x21]
  43b5f8:	b	43b5d0 <feof@plt+0x37d30>
  43b5fc:	mov	x10, x8
  43b600:	cmp	w11, #0x22
  43b604:	b.ne	43b574 <feof@plt+0x37cd4>  // b.any
  43b608:	add	x24, x10, #0x1
  43b60c:	cbz	x21, 43b628 <feof@plt+0x37d88>
  43b610:	ldr	w10, [x21]
  43b614:	cmp	w10, w20
  43b618:	b.cs	43b628 <feof@plt+0x37d88>  // b.hs, b.nlast
  43b61c:	ldr	w11, [x21, #4]
  43b620:	add	w10, w11, w10
  43b624:	str	w10, [x21]
  43b628:	ldr	w12, [x9]
  43b62c:	cmp	x21, #0x0
  43b630:	cset	w9, ne  // ne = any
  43b634:	cmp	x19, #0x0
  43b638:	add	x8, x8, x12
  43b63c:	sub	x25, x8, #0x1
  43b640:	cset	w10, eq  // eq = none
  43b644:	cset	w11, ne  // ne = any
  43b648:	cmp	x24, x25
  43b64c:	str	x8, [sp, #24]
  43b650:	b.cs	43b4cc <feof@plt+0x37c2c>  // b.hs, b.nlast
  43b654:	eor	w8, w11, w9
  43b658:	str	w8, [sp, #76]
  43b65c:	eor	w8, w10, w9
  43b660:	str	w8, [sp, #16]
  43b664:	ldr	x8, [sp, #24]
  43b668:	sub	x26, x8, #0x2
  43b66c:	b	43b6a4 <feof@plt+0x37e04>
  43b670:	ldr	x0, [x19]
  43b674:	lsl	w8, w10, #1
  43b678:	lsl	x1, x10, #4
  43b67c:	str	w8, [x19, #12]
  43b680:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43b684:	ldr	w8, [x19, #8]
  43b688:	str	x0, [x19]
  43b68c:	add	w9, w8, #0x1
  43b690:	str	w9, [x19, #8]
  43b694:	str	x22, [x0, w8, sxtw #3]
  43b698:	add	x24, x28, #0x2
  43b69c:	cmp	x24, x25
  43b6a0:	b.cs	43b4cc <feof@plt+0x37c2c>  // b.hs, b.nlast
  43b6a4:	ldrb	w8, [x24]
  43b6a8:	mov	x9, x24
  43b6ac:	cmp	w8, #0x5c
  43b6b0:	b.ne	43b6c8 <feof@plt+0x37e28>  // b.any
  43b6b4:	mov	w22, #0x1                   	// #1
  43b6b8:	mov	x28, x24
  43b6bc:	subs	x2, x28, x24
  43b6c0:	b.hi	43b700 <feof@plt+0x37e60>  // b.pmore
  43b6c4:	b	43b744 <feof@plt+0x37ea4>
  43b6c8:	cmp	x26, x9
  43b6cc:	add	x8, x9, #0x1
  43b6d0:	b.eq	43b6ec <feof@plt+0x37e4c>  // b.none
  43b6d4:	ldrb	w9, [x9, #1]
  43b6d8:	mov	x28, x8
  43b6dc:	cmp	w9, #0x5c
  43b6e0:	mov	x9, x8
  43b6e4:	b.ne	43b6c8 <feof@plt+0x37e28>  // b.any
  43b6e8:	b	43b6f0 <feof@plt+0x37e50>
  43b6ec:	mov	x28, x25
  43b6f0:	cmp	x8, x25
  43b6f4:	cset	w22, cc  // cc = lo, ul, last
  43b6f8:	subs	x2, x28, x24
  43b6fc:	b.ls	43b744 <feof@plt+0x37ea4>  // b.plast
  43b700:	ldr	x8, [sp, #80]
  43b704:	cbz	x8, 43b720 <feof@plt+0x37e80>
  43b708:	ldr	x0, [sp, #96]
  43b70c:	ldr	x8, [sp, #112]
  43b710:	sub	x3, x29, #0x68
  43b714:	mov	x1, x24
  43b718:	blr	x8
  43b71c:	tbz	w0, #0, 43bef8 <feof@plt+0x38658>
  43b720:	cbz	x21, 43b744 <feof@plt+0x37ea4>
  43b724:	ldr	x8, [sp, #112]
  43b728:	adrp	x9, 43c000 <feof@plt+0x38760>
  43b72c:	add	x9, x9, #0x204
  43b730:	cmp	x8, x9
  43b734:	b.ne	43c094 <feof@plt+0x387f4>  // b.any
  43b738:	sub	w24, w28, w24
  43b73c:	cmp	w24, #0x1
  43b740:	b.ge	43b7a0 <feof@plt+0x37f00>  // b.tcont
  43b744:	cbz	w22, 43b4cc <feof@plt+0x37c2c>
  43b748:	add	x24, x28, #0x1
  43b74c:	cbz	x21, 43b7d4 <feof@plt+0x37f34>
  43b750:	ldr	w22, [x21]
  43b754:	cmp	w22, w20
  43b758:	b.cs	43b768 <feof@plt+0x37ec8>  // b.hs, b.nlast
  43b75c:	ldr	w8, [x21, #4]
  43b760:	add	w8, w8, w22
  43b764:	str	w8, [x21]
  43b768:	lsl	x27, x22, #32
  43b76c:	b	43b7dc <feof@plt+0x37f3c>
  43b770:	ldr	x0, [x19]
  43b774:	lsl	w8, w9, #1
  43b778:	lsl	x1, x9, #4
  43b77c:	str	w8, [x19, #12]
  43b780:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43b784:	ldr	w8, [x19, #8]
  43b788:	str	x0, [x19]
  43b78c:	add	w9, w8, #0x1
  43b790:	subs	w24, w24, #0x1
  43b794:	str	w9, [x19, #8]
  43b798:	str	x27, [x0, w8, sxtw #3]
  43b79c:	b.eq	43b744 <feof@plt+0x37ea4>  // b.none
  43b7a0:	ldr	w27, [x21]
  43b7a4:	cmp	w27, w20
  43b7a8:	b.cs	43b7b8 <feof@plt+0x37f18>  // b.hs, b.nlast
  43b7ac:	ldr	w8, [x21, #4]
  43b7b0:	add	w8, w8, w27
  43b7b4:	str	w8, [x21]
  43b7b8:	ldp	w8, w9, [x19, #8]
  43b7bc:	bfi	x27, x27, #32, #32
  43b7c0:	sxtw	x9, w9
  43b7c4:	cmp	w8, w9
  43b7c8:	b.ge	43b770 <feof@plt+0x37ed0>  // b.tcont
  43b7cc:	ldr	x0, [x19]
  43b7d0:	b	43b78c <feof@plt+0x37eec>
  43b7d4:	mov	x22, xzr
  43b7d8:	mov	x27, xzr
  43b7dc:	ldrb	w3, [x24]
  43b7e0:	sub	w8, w3, #0x22
  43b7e4:	cmp	w8, #0x59
  43b7e8:	sturb	w3, [x29, #-48]
  43b7ec:	b.hi	43b888 <feof@plt+0x37fe8>  // b.pmore
  43b7f0:	adrp	x11, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43b7f4:	add	x11, x11, #0xfb2
  43b7f8:	adr	x9, 43b808 <feof@plt+0x37f68>
  43b7fc:	ldrh	w10, [x11, x8, lsl #1]
  43b800:	add	x9, x9, x10, lsl #2
  43b804:	br	x9
  43b808:	ldr	w8, [sp, #76]
  43b80c:	tbnz	w8, #0, 43c0ac <feof@plt+0x3880c>
  43b810:	cmp	x24, x25
  43b814:	lsr	x27, x27, #32
  43b818:	b.cs	43b8c0 <feof@plt+0x38020>  // b.hs, b.nlast
  43b81c:	mov	x9, xzr
  43b820:	mov	w1, wzr
  43b824:	add	x8, x28, #0x4
  43b828:	sub	x10, x26, x28
  43b82c:	b	43b840 <feof@plt+0x37fa0>
  43b830:	add	w11, w11, w1, lsl #3
  43b834:	cmp	x10, x9
  43b838:	sub	w1, w11, #0x30
  43b83c:	b.eq	43ba60 <feof@plt+0x381c0>  // b.none
  43b840:	cmp	x9, #0x3
  43b844:	b.eq	43ba18 <feof@plt+0x38178>  // b.none
  43b848:	ldrb	w11, [x24, x9]
  43b84c:	and	w12, w11, #0xf8
  43b850:	cmp	w12, #0x30
  43b854:	b.ne	43ba20 <feof@plt+0x38180>  // b.any
  43b858:	add	x9, x9, #0x1
  43b85c:	cbz	x21, 43b830 <feof@plt+0x37f90>
  43b860:	ldr	w27, [x21]
  43b864:	cmp	w27, w20
  43b868:	b.cs	43b830 <feof@plt+0x37f90>  // b.hs, b.nlast
  43b86c:	ldr	w12, [x21, #4]
  43b870:	add	w12, w12, w27
  43b874:	str	w12, [x21]
  43b878:	b	43b830 <feof@plt+0x37f90>
  43b87c:	ldr	x8, [sp, #104]
  43b880:	ldrb	w8, [x8, #1154]
  43b884:	cbz	w8, 43bc3c <feof@plt+0x3839c>
  43b888:	adrp	x8, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  43b88c:	add	x8, x8, #0x4a2
  43b890:	ldrh	w8, [x8, x3, lsl #1]
  43b894:	mov	w9, #0xac                  	// #172
  43b898:	tst	w8, w9
  43b89c:	b.eq	43ba28 <feof@plt+0x38188>  // b.none
  43b8a0:	ldr	x0, [sp, #104]
  43b8a4:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43b8a8:	mov	w1, #0x2                   	// #2
  43b8ac:	add	x2, x2, #0x661
  43b8b0:	bl	4424f8 <feof@plt+0x3ec58>
  43b8b4:	ldr	x3, [sp, #88]
  43b8b8:	cbnz	x3, 43bc58 <feof@plt+0x383b8>
  43b8bc:	b	43bc84 <feof@plt+0x383e4>
  43b8c0:	mov	w1, wzr
  43b8c4:	b	43ba64 <feof@plt+0x381c4>
  43b8c8:	orr	x8, x27, x22
  43b8cc:	stp	x24, x8, [x29, #-32]
  43b8d0:	ldr	w8, [sp, #16]
  43b8d4:	stur	wzr, [x29, #-72]
  43b8d8:	stur	xzr, [x29, #-80]
  43b8dc:	tbz	w8, #0, 43c0c4 <feof@plt+0x38824>
  43b8e0:	ldr	x22, [sp, #88]
  43b8e4:	add	x8, x28, #0x2
  43b8e8:	stur	x8, [x29, #-32]
  43b8ec:	cbz	x21, 43b90c <feof@plt+0x3806c>
  43b8f0:	ldr	w8, [x21]
  43b8f4:	cmp	w8, w20
  43b8f8:	b.cs	43b908 <feof@plt+0x38068>  // b.hs, b.nlast
  43b8fc:	ldr	w9, [x21, #4]
  43b900:	add	w9, w9, w8
  43b904:	str	w9, [x21]
  43b908:	stur	w8, [x29, #-20]
  43b90c:	ldr	x0, [sp, #104]
  43b910:	sub	x1, x29, #0x20
  43b914:	sub	x4, x29, #0x50
  43b918:	sub	x5, x29, #0x24
  43b91c:	sub	x6, x29, #0x18
  43b920:	mov	x2, x25
  43b924:	mov	w3, wzr
  43b928:	mov	x7, x21
  43b92c:	bl	43aec4 <feof@plt+0x37624>
  43b930:	ldur	w9, [x29, #-36]
  43b934:	cmp	w9, #0x80
  43b938:	b.cs	43bb0c <feof@plt+0x3826c>  // b.hs, b.nlast
  43b93c:	sturb	w9, [x29, #-11]
  43b940:	mov	x8, #0xffffffffffffffff    	// #-1
  43b944:	mov	w28, #0x1                   	// #1
  43b948:	sub	x14, x29, #0x10
  43b94c:	add	x9, x14, x8
  43b950:	add	x1, x9, #0x6
  43b954:	neg	x2, x8
  43b958:	sub	x0, x29, #0x2c
  43b95c:	bl	402fc0 <memcpy@plt>
  43b960:	cbz	x22, 43b994 <feof@plt+0x380f4>
  43b964:	ldr	x0, [sp, #96]
  43b968:	ldr	x8, [sp, #112]
  43b96c:	sub	x1, x29, #0x2c
  43b970:	mov	x2, x28
  43b974:	mov	x3, x22
  43b978:	blr	x8
  43b97c:	tbnz	w0, #0, 43b994 <feof@plt+0x380f4>
  43b980:	ldr	x0, [sp, #104]
  43b984:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43b988:	mov	w1, #0x3                   	// #3
  43b98c:	add	x2, x2, #0x6e1
  43b990:	bl	442f50 <feof@plt+0x3f6b0>
  43b994:	cbz	x21, 43b9a0 <feof@plt+0x38100>
  43b998:	cmp	w28, #0x1
  43b99c:	b.ge	43b9d8 <feof@plt+0x38138>  // b.tcont
  43b9a0:	ldur	x24, [x29, #-32]
  43b9a4:	b	43b69c <feof@plt+0x37dfc>
  43b9a8:	ldr	x0, [x19]
  43b9ac:	lsl	w8, w9, #1
  43b9b0:	lsl	x1, x9, #4
  43b9b4:	str	w8, [x19, #12]
  43b9b8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43b9bc:	ldr	w8, [x19, #8]
  43b9c0:	str	x0, [x19]
  43b9c4:	add	w9, w8, #0x1
  43b9c8:	subs	w28, w28, #0x1
  43b9cc:	str	w9, [x19, #8]
  43b9d0:	str	x22, [x0, w8, sxtw #3]
  43b9d4:	b.eq	43b9a0 <feof@plt+0x38100>  // b.none
  43b9d8:	ldp	w8, w9, [x19, #8]
  43b9dc:	ldur	x22, [x29, #-24]
  43b9e0:	sxtw	x9, w9
  43b9e4:	cmp	w8, w9
  43b9e8:	b.ge	43b9a8 <feof@plt+0x38108>  // b.tcont
  43b9ec:	ldr	x0, [x19]
  43b9f0:	b	43b9c4 <feof@plt+0x38124>
  43b9f4:	ldr	x0, [sp, #104]
  43b9f8:	ldrb	w8, [x0, #1154]
  43b9fc:	cbz	w8, 43ba10 <feof@plt+0x38170>
  43ba00:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ba04:	mov	w1, #0x2                   	// #2
  43ba08:	add	x2, x2, #0x639
  43ba0c:	bl	4424f8 <feof@plt+0x3ec58>
  43ba10:	mov	w8, #0x1b                  	// #27
  43ba14:	b	43bc4c <feof@plt+0x383ac>
  43ba18:	mov	x24, x8
  43ba1c:	b	43ba64 <feof@plt+0x381c4>
  43ba20:	add	x24, x24, x9
  43ba24:	b	43ba64 <feof@plt+0x381c4>
  43ba28:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  43ba2c:	sub	x0, x29, #0x50
  43ba30:	add	x1, x1, #0x613
  43ba34:	mov	w2, w3
  43ba38:	bl	403340 <sprintf@plt>
  43ba3c:	ldr	x0, [sp, #104]
  43ba40:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ba44:	sub	x3, x29, #0x50
  43ba48:	mov	w1, #0x2                   	// #2
  43ba4c:	add	x2, x2, #0x680
  43ba50:	bl	4424f8 <feof@plt+0x3ec58>
  43ba54:	ldr	x3, [sp, #88]
  43ba58:	cbnz	x3, 43bc58 <feof@plt+0x383b8>
  43ba5c:	b	43bc84 <feof@plt+0x383e4>
  43ba60:	mov	x24, x25
  43ba64:	ldr	x9, [sp, #64]
  43ba68:	mov	w8, w1
  43ba6c:	and	x28, x9, x8
  43ba70:	cmp	x28, x8
  43ba74:	b.eq	43ba90 <feof@plt+0x381f0>  // b.none
  43ba78:	ldr	x0, [sp, #104]
  43ba7c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ba80:	mov	w1, #0x2                   	// #2
  43ba84:	add	x2, x2, #0x79b
  43ba88:	bl	4424f8 <feof@plt+0x3ec58>
  43ba8c:	mov	w1, w28
  43ba90:	ldr	x2, [sp, #88]
  43ba94:	cbz	x2, 43bac0 <feof@plt+0x38220>
  43ba98:	ldp	x0, x8, [sp, #104]
  43ba9c:	sub	x3, x29, #0x50
  43baa0:	stur	x8, [x29, #-80]
  43baa4:	ldr	x8, [sp, #96]
  43baa8:	stur	x8, [x29, #-72]
  43baac:	ldr	x8, [sp, #32]
  43bab0:	stur	w8, [x29, #-64]
  43bab4:	ldr	w8, [sp, #20]
  43bab8:	stur	w8, [x29, #-60]
  43babc:	bl	43e230 <feof@plt+0x3a990>
  43bac0:	cbz	x19, 43b69c <feof@plt+0x37dfc>
  43bac4:	ldp	w8, w9, [x19, #8]
  43bac8:	bfi	x22, x27, #32, #32
  43bacc:	sxtw	x9, w9
  43bad0:	cmp	w8, w9
  43bad4:	b.ge	43bae0 <feof@plt+0x38240>  // b.tcont
  43bad8:	ldr	x0, [x19]
  43badc:	b	43bafc <feof@plt+0x3825c>
  43bae0:	ldr	x0, [x19]
  43bae4:	lsl	w8, w9, #1
  43bae8:	lsl	x1, x9, #4
  43baec:	str	w8, [x19, #12]
  43baf0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43baf4:	ldr	w8, [x19, #8]
  43baf8:	str	x0, [x19]
  43bafc:	add	w9, w8, #0x1
  43bb00:	str	w9, [x19, #8]
  43bb04:	str	x22, [x0, w8, sxtw #3]
  43bb08:	b	43b69c <feof@plt+0x37dfc>
  43bb0c:	adrp	x11, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43bb10:	adrp	x10, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43bb14:	mov	x8, xzr
  43bb18:	add	x11, x11, #0x1ef
  43bb1c:	add	x10, x10, #0x1e9
  43bb20:	sub	x14, x29, #0x10
  43bb24:	b	43bb38 <feof@plt+0x38298>
  43bb28:	sub	x8, x8, #0x1
  43bb2c:	add	x10, x10, #0x1
  43bb30:	add	x11, x11, #0x1
  43bb34:	mov	w9, w12
  43bb38:	mov	w12, #0x80                  	// #128
  43bb3c:	add	x13, x14, x8
  43bb40:	bfxil	w12, w9, #0, #6
  43bb44:	cmp	w9, #0xfbf
  43bb48:	strb	w12, [x13, #5]
  43bb4c:	lsr	w12, w9, #6
  43bb50:	b.hi	43bb28 <feof@plt+0x38288>  // b.pmore
  43bb54:	ldrb	w13, [x11]
  43bb58:	tst	w12, w13
  43bb5c:	b.ne	43bb28 <feof@plt+0x38288>  // b.any
  43bb60:	ldrb	w10, [x10]
  43bb64:	mov	w12, #0x2                   	// #2
  43bb68:	sub	x28, x12, x8
  43bb6c:	add	x11, x14, x8
  43bb70:	orr	w9, w10, w9, lsr #6
  43bb74:	cmp	x28, #0x6
  43bb78:	strb	w9, [x11, #4]
  43bb7c:	b.ls	43bcbc <feof@plt+0x3841c>  // b.plast
  43bb80:	bl	4035c0 <__errno_location@plt>
  43bb84:	mov	w8, #0x7                   	// #7
  43bb88:	str	w8, [x0]
  43bb8c:	ldr	x0, [sp, #104]
  43bb90:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43bb94:	mov	w1, #0x3                   	// #3
  43bb98:	add	x2, x2, #0x4c8
  43bb9c:	bl	442f50 <feof@plt+0x3f6b0>
  43bba0:	ldur	x24, [x29, #-32]
  43bba4:	b	43b69c <feof@plt+0x37dfc>
  43bba8:	mov	w8, #0xd                   	// #13
  43bbac:	b	43bc4c <feof@plt+0x383ac>
  43bbb0:	ldr	x0, [sp, #104]
  43bbb4:	ldrb	w8, [x0, #1138]
  43bbb8:	cbz	w8, 43bbcc <feof@plt+0x3832c>
  43bbbc:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43bbc0:	mov	w1, #0x6                   	// #6
  43bbc4:	add	x2, x2, #0x607
  43bbc8:	bl	442628 <feof@plt+0x3ed88>
  43bbcc:	mov	w8, #0x7                   	// #7
  43bbd0:	b	43bc4c <feof@plt+0x383ac>
  43bbd4:	mov	w8, #0x8                   	// #8
  43bbd8:	b	43bc4c <feof@plt+0x383ac>
  43bbdc:	ldr	w8, [sp, #76]
  43bbe0:	cbnz	w8, 43c0dc <feof@plt+0x3883c>
  43bbe4:	ldr	x0, [sp, #104]
  43bbe8:	ldrb	w8, [x0, #1138]
  43bbec:	cbz	w8, 43bc00 <feof@plt+0x38360>
  43bbf0:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43bbf4:	mov	w1, #0x6                   	// #6
  43bbf8:	add	x2, x2, #0x717
  43bbfc:	bl	442628 <feof@plt+0x3ed88>
  43bc00:	cbz	x21, 43bccc <feof@plt+0x3842c>
  43bc04:	ldr	w10, [x21]
  43bc08:	cmp	w10, w20
  43bc0c:	b.cs	43bc1c <feof@plt+0x3837c>  // b.hs, b.nlast
  43bc10:	ldr	w8, [x21, #4]
  43bc14:	add	w8, w8, w10
  43bc18:	str	w8, [x21]
  43bc1c:	bfi	x10, x10, #32, #32
  43bc20:	b	43bcd0 <feof@plt+0x38430>
  43bc24:	mov	w8, #0xb                   	// #11
  43bc28:	b	43bc4c <feof@plt+0x383ac>
  43bc2c:	mov	w8, #0xa                   	// #10
  43bc30:	b	43bc4c <feof@plt+0x383ac>
  43bc34:	mov	w8, #0xc                   	// #12
  43bc38:	sturb	w8, [x29, #-48]
  43bc3c:	ldr	x3, [sp, #88]
  43bc40:	cbnz	x3, 43bc58 <feof@plt+0x383b8>
  43bc44:	b	43bc84 <feof@plt+0x383e4>
  43bc48:	mov	w8, #0x9                   	// #9
  43bc4c:	sturb	w8, [x29, #-48]
  43bc50:	ldr	x3, [sp, #88]
  43bc54:	cbz	x3, 43bc84 <feof@plt+0x383e4>
  43bc58:	ldr	x0, [sp, #96]
  43bc5c:	ldr	x8, [sp, #112]
  43bc60:	sub	x1, x29, #0x30
  43bc64:	mov	w2, #0x1                   	// #1
  43bc68:	blr	x8
  43bc6c:	tbnz	w0, #0, 43bc84 <feof@plt+0x383e4>
  43bc70:	ldr	x0, [sp, #104]
  43bc74:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43bc78:	mov	w1, #0x3                   	// #3
  43bc7c:	add	x2, x2, #0x69f
  43bc80:	bl	442f50 <feof@plt+0x3f6b0>
  43bc84:	cbz	x21, 43b698 <feof@plt+0x37df8>
  43bc88:	ldr	w9, [x21]
  43bc8c:	cmp	w9, w20
  43bc90:	b.cs	43bca0 <feof@plt+0x38400>  // b.hs, b.nlast
  43bc94:	ldr	w8, [x21, #4]
  43bc98:	add	w8, w8, w9
  43bc9c:	str	w8, [x21]
  43bca0:	ldp	w8, w10, [x19, #8]
  43bca4:	bfi	x22, x9, #32, #32
  43bca8:	sxtw	x10, w10
  43bcac:	cmp	w8, w10
  43bcb0:	b.ge	43b670 <feof@plt+0x37dd0>  // b.tcont
  43bcb4:	ldr	x0, [x19]
  43bcb8:	b	43b68c <feof@plt+0x37dec>
  43bcbc:	cmp	x8, #0x1
  43bcc0:	b.gt	43b960 <feof@plt+0x380c0>
  43bcc4:	sub	x8, x8, #0x2
  43bcc8:	b	43b94c <feof@plt+0x380ac>
  43bccc:	orr	x10, x27, x22
  43bcd0:	add	x24, x28, #0x2
  43bcd4:	cmp	x24, x25
  43bcd8:	b.cs	43bcf4 <feof@plt+0x38454>  // b.hs, b.nlast
  43bcdc:	ldrb	w8, [x24]
  43bce0:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  43bce4:	add	x9, x9, #0x1c3
  43bce8:	ldrb	w9, [x9, x8]
  43bcec:	cmp	w9, #0x63
  43bcf0:	b.ne	43bd0c <feof@plt+0x3846c>  // b.any
  43bcf4:	ldr	x0, [sp, #104]
  43bcf8:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43bcfc:	mov	w1, #0x3                   	// #3
  43bd00:	add	x2, x2, #0x749
  43bd04:	bl	4424f8 <feof@plt+0x3ec58>
  43bd08:	b	43b69c <feof@plt+0x37dfc>
  43bd0c:	ldr	x13, [sp, #24]
  43bd10:	mov	w8, wzr
  43bd14:	mov	w1, wzr
  43bd18:	lsr	x27, x10, #32
  43bd1c:	add	x10, x28, #0x4
  43bd20:	cbz	x21, 43bd3c <feof@plt+0x3849c>
  43bd24:	ldr	w27, [x21]
  43bd28:	cmp	w27, w20
  43bd2c:	b.cs	43bd3c <feof@plt+0x3849c>  // b.hs, b.nlast
  43bd30:	ldr	w11, [x21, #4]
  43bd34:	add	w11, w11, w27
  43bd38:	str	w11, [x21]
  43bd3c:	lsl	w11, w1, #4
  43bd40:	and	w12, w1, #0xf0000000
  43bd44:	cmp	x13, x10
  43bd48:	orr	w8, w12, w8
  43bd4c:	add	w1, w11, w9, uxtb
  43bd50:	b.eq	43bd78 <feof@plt+0x384d8>  // b.none
  43bd54:	ldurb	w9, [x10, #-1]
  43bd58:	adrp	x11, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  43bd5c:	add	x11, x11, #0x1c3
  43bd60:	add	x10, x10, #0x1
  43bd64:	ldrb	w9, [x11, x9]
  43bd68:	cmp	w9, #0x63
  43bd6c:	b.ne	43bd20 <feof@plt+0x38480>  // b.any
  43bd70:	sub	x24, x10, #0x2
  43bd74:	b	43bd7c <feof@plt+0x384dc>
  43bd78:	mov	x24, x25
  43bd7c:	ldr	x10, [sp, #64]
  43bd80:	mov	w9, w1
  43bd84:	and	x28, x10, x9
  43bd88:	cmp	x28, x9
  43bd8c:	cset	w9, ne  // ne = any
  43bd90:	orr	w8, w8, w9
  43bd94:	cbz	w8, 43ba90 <feof@plt+0x381f0>
  43bd98:	ldr	x0, [sp, #104]
  43bd9c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43bda0:	mov	w1, #0x2                   	// #2
  43bda4:	add	x2, x2, #0x76e
  43bda8:	b	43ba88 <feof@plt+0x381e8>
  43bdac:	sub	x10, x24, #0x1
  43bdb0:	cbz	x21, 43bdcc <feof@plt+0x3852c>
  43bdb4:	ldr	w12, [x21]
  43bdb8:	cmp	w12, w20
  43bdbc:	b.cs	43bdcc <feof@plt+0x3852c>  // b.hs, b.nlast
  43bdc0:	ldr	w13, [x21, #4]
  43bdc4:	add	w12, w13, w12
  43bdc8:	str	w12, [x21]
  43bdcc:	ldr	w9, [x9]
  43bdd0:	sub	x11, x24, x11
  43bdd4:	add	x10, x10, x11
  43bdd8:	mvn	x11, x11
  43bddc:	add	x10, x10, #0x2
  43bde0:	add	x8, x8, x9
  43bde4:	add	x9, x8, x11
  43bde8:	cmp	x8, x10
  43bdec:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  43bdf0:	ldr	x8, [sp, #80]
  43bdf4:	cbz	x8, 43be1c <feof@plt+0x3857c>
  43bdf8:	ldr	x0, [sp, #96]
  43bdfc:	ldr	x8, [sp, #112]
  43be00:	sub	x2, x22, x24
  43be04:	sub	x3, x29, #0x68
  43be08:	mov	x1, x24
  43be0c:	blr	x8
  43be10:	cbz	x21, 43b4c8 <feof@plt+0x37c28>
  43be14:	tbnz	w0, #0, 43be20 <feof@plt+0x38580>
  43be18:	b	43b4c8 <feof@plt+0x37c28>
  43be1c:	cbz	x21, 43b4cc <feof@plt+0x37c2c>
  43be20:	ldr	x8, [sp, #112]
  43be24:	adrp	x9, 43c000 <feof@plt+0x38760>
  43be28:	add	x9, x9, #0x204
  43be2c:	cmp	x8, x9
  43be30:	b.ne	43c10c <feof@plt+0x3886c>  // b.any
  43be34:	sub	w22, w22, w24
  43be38:	cmp	w22, #0x1
  43be3c:	b.ge	43be74 <feof@plt+0x385d4>  // b.tcont
  43be40:	b	43b4cc <feof@plt+0x37c2c>
  43be44:	ldr	x0, [x19]
  43be48:	lsl	w8, w9, #1
  43be4c:	lsl	x1, x9, #4
  43be50:	str	w8, [x19, #12]
  43be54:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43be58:	ldr	w8, [x19, #8]
  43be5c:	str	x0, [x19]
  43be60:	add	w9, w8, #0x1
  43be64:	subs	w22, w22, #0x1
  43be68:	str	w9, [x19, #8]
  43be6c:	str	x24, [x0, w8, sxtw #3]
  43be70:	b.eq	43b4cc <feof@plt+0x37c2c>  // b.none
  43be74:	ldr	w24, [x21]
  43be78:	cmp	w24, w20
  43be7c:	b.cs	43be8c <feof@plt+0x385ec>  // b.hs, b.nlast
  43be80:	ldr	w8, [x21, #4]
  43be84:	add	w8, w8, w24
  43be88:	str	w8, [x21]
  43be8c:	ldp	w8, w9, [x19, #8]
  43be90:	bfi	x24, x24, #32, #32
  43be94:	sxtw	x9, w9
  43be98:	cmp	w8, w9
  43be9c:	b.ge	43be44 <feof@plt+0x385a4>  // b.tcont
  43bea0:	ldr	x0, [x19]
  43bea4:	b	43be60 <feof@plt+0x385c0>
  43bea8:	mov	x21, xzr
  43beac:	ldr	x8, [sp, #80]
  43beb0:	cbz	x8, 43c008 <feof@plt+0x38768>
  43beb4:	ldr	x8, [sp, #104]
  43beb8:	ldr	x10, [sp, #8]
  43bebc:	ldr	x20, [x8, #1216]
  43bec0:	cmp	x20, x10
  43bec4:	b.ne	43bf40 <feof@plt+0x386a0>  // b.any
  43bec8:	ldp	x10, x8, [x29, #-96]
  43becc:	add	x9, x8, #0x1
  43bed0:	cmp	x9, x10
  43bed4:	b.ls	43bfdc <feof@plt+0x3873c>  // b.plast
  43bed8:	ldur	x0, [x29, #-104]
  43bedc:	add	x1, x10, #0x100
  43bee0:	stur	x1, [x29, #-96]
  43bee4:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43bee8:	ldur	x8, [x29, #-88]
  43beec:	stur	x0, [x29, #-104]
  43bef0:	add	x9, x8, #0x1
  43bef4:	b	43bfe0 <feof@plt+0x38740>
  43bef8:	ldr	x0, [sp, #104]
  43befc:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43bf00:	add	x2, x2, #0x22e
  43bf04:	mov	w1, #0x3                   	// #3
  43bf08:	bl	442f50 <feof@plt+0x3f6b0>
  43bf0c:	b	43bf30 <feof@plt+0x38690>
  43bf10:	cbz	x19, 43c124 <feof@plt+0x38884>
  43bf14:	ldr	x0, [sp, #104]
  43bf18:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43bf1c:	add	x2, x2, #0x5f4
  43bf20:	mov	w1, #0x3                   	// #3
  43bf24:	bl	4424f8 <feof@plt+0x3ec58>
  43bf28:	ldr	x8, [sp, #80]
  43bf2c:	cbz	x8, 43bf38 <feof@plt+0x38698>
  43bf30:	ldur	x0, [x29, #-104]
  43bf34:	bl	4031d0 <free@plt>
  43bf38:	mov	w0, wzr
  43bf3c:	b	43c074 <feof@plt+0x387d4>
  43bf40:	ldrb	w22, [x8, #1242]
  43bf44:	ldp	x8, x23, [x29, #-96]
  43bf48:	cmp	x20, #0x20
  43bf4c:	mov	w9, #0x20                  	// #32
  43bf50:	udiv	x24, x10, x20
  43bf54:	csel	x25, x20, x9, cc  // cc = lo, ul, last
  43bf58:	add	x9, x23, x24
  43bf5c:	cmp	x9, x8
  43bf60:	b.ls	43bf80 <feof@plt+0x386e0>  // b.plast
  43bf64:	ldur	x0, [x29, #-104]
  43bf68:	add	x1, x8, #0x100
  43bf6c:	stur	x1, [x29, #-96]
  43bf70:	mov	x26, x10
  43bf74:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43bf78:	mov	x10, x26
  43bf7c:	stur	x0, [x29, #-104]
  43bf80:	cmp	x20, x10
  43bf84:	b.hi	43bfcc <feof@plt+0x3872c>  // b.pmore
  43bf88:	mov	x10, #0xffffffffffffffff    	// #-1
  43bf8c:	lsl	x10, x10, x25
  43bf90:	mov	w8, wzr
  43bf94:	mov	x9, xzr
  43bf98:	eor	w10, w10, #0xff
  43bf9c:	ldur	x12, [x29, #-104]
  43bfa0:	mvn	x13, x9
  43bfa4:	cmp	w22, #0x0
  43bfa8:	add	x13, x24, x13
  43bfac:	csel	x13, x9, x13, eq  // eq = none
  43bfb0:	add	x9, x9, #0x1
  43bfb4:	and	w11, w8, w10
  43bfb8:	lsr	w8, w8, w20
  43bfbc:	add	x13, x13, x23
  43bfc0:	cmp	x24, x9
  43bfc4:	strb	w11, [x12, x13]
  43bfc8:	b.hi	43bf9c <feof@plt+0x386fc>  // b.pmore
  43bfcc:	ldur	x8, [x29, #-88]
  43bfd0:	add	x1, x8, x24
  43bfd4:	stur	x1, [x29, #-88]
  43bfd8:	b	43bfec <feof@plt+0x3874c>
  43bfdc:	ldur	x0, [x29, #-104]
  43bfe0:	stur	x9, [x29, #-88]
  43bfe4:	strb	wzr, [x0, x8]
  43bfe8:	ldur	x1, [x29, #-88]
  43bfec:	ldur	x0, [x29, #-104]
  43bff0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43bff4:	ldr	x9, [sp, #80]
  43bff8:	stur	x0, [x29, #-104]
  43bffc:	str	x0, [x9, #8]
  43c000:	ldur	x8, [x29, #-88]
  43c004:	str	w8, [x9]
  43c008:	cbz	x21, 43c070 <feof@plt+0x387d0>
  43c00c:	ldr	w20, [x21]
  43c010:	mov	w8, #0x1                   	// #1
  43c014:	movk	w8, #0x6000, lsl #16
  43c018:	cmp	w20, w8
  43c01c:	b.cs	43c02c <feof@plt+0x3878c>  // b.hs, b.nlast
  43c020:	ldr	w8, [x21, #4]
  43c024:	add	w8, w8, w20
  43c028:	str	w8, [x21]
  43c02c:	ldp	w8, w9, [x19, #8]
  43c030:	bfi	x20, x20, #32, #32
  43c034:	sxtw	x9, w9
  43c038:	cmp	w8, w9
  43c03c:	b.ge	43c048 <feof@plt+0x387a8>  // b.tcont
  43c040:	ldr	x0, [x19]
  43c044:	b	43c064 <feof@plt+0x387c4>
  43c048:	ldr	x0, [x19]
  43c04c:	lsl	w8, w9, #1
  43c050:	lsl	x1, x9, #4
  43c054:	str	w8, [x19, #12]
  43c058:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43c05c:	ldr	w8, [x19, #8]
  43c060:	str	x0, [x19]
  43c064:	add	w9, w8, #0x1
  43c068:	str	w9, [x19, #8]
  43c06c:	str	x20, [x0, w8, sxtw #3]
  43c070:	mov	w0, #0x1                   	// #1
  43c074:	ldp	x20, x19, [sp, #304]
  43c078:	ldp	x22, x21, [sp, #288]
  43c07c:	ldp	x24, x23, [sp, #272]
  43c080:	ldp	x26, x25, [sp, #256]
  43c084:	ldp	x28, x27, [sp, #240]
  43c088:	ldp	x29, x30, [sp, #224]
  43c08c:	add	sp, sp, #0x140
  43c090:	ret
  43c094:	adrp	x0, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c098:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c09c:	add	x0, x0, #0x353
  43c0a0:	add	x2, x2, #0x5dd
  43c0a4:	mov	w1, #0x66c                 	// #1644
  43c0a8:	bl	429434 <feof@plt+0x25b94>
  43c0ac:	adrp	x0, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c0b0:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c0b4:	add	x0, x0, #0x353
  43c0b8:	add	x2, x2, #0x78f
  43c0bc:	mov	w1, #0x540                 	// #1344
  43c0c0:	bl	429434 <feof@plt+0x25b94>
  43c0c4:	adrp	x0, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c0c8:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c0cc:	add	x0, x0, #0x353
  43c0d0:	add	x2, x2, #0x6d5
  43c0d4:	mov	w1, #0x48d                 	// #1165
  43c0d8:	bl	429434 <feof@plt+0x25b94>
  43c0dc:	adrp	x0, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c0e0:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c0e4:	add	x0, x0, #0x353
  43c0e8:	add	x2, x2, #0x70b
  43c0ec:	mov	w1, #0x4f9                 	// #1273
  43c0f0:	bl	429434 <feof@plt+0x25b94>
  43c0f4:	adrp	x0, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c0f8:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c0fc:	add	x0, x0, #0x353
  43c100:	add	x2, x2, #0x5dd
  43c104:	mov	w1, #0x5fc                 	// #1532
  43c108:	bl	429434 <feof@plt+0x25b94>
  43c10c:	adrp	x0, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c110:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c114:	add	x0, x0, #0x353
  43c118:	add	x2, x2, #0x5dd
  43c11c:	mov	w1, #0x641                 	// #1601
  43c120:	bl	429434 <feof@plt+0x25b94>
  43c124:	adrp	x0, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c128:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c12c:	add	x0, x0, #0x353
  43c130:	add	x2, x2, #0x5dd
  43c134:	mov	w1, #0x64d                 	// #1613
  43c138:	bl	429434 <feof@plt+0x25b94>
  43c13c:	stp	x29, x30, [sp, #-32]!
  43c140:	sub	w9, w5, #0x39
  43c144:	stp	x20, x19, [sp, #16]
  43c148:	mov	x6, x4
  43c14c:	mov	x8, x2
  43c150:	cmp	w9, #0x9
  43c154:	mov	x19, x0
  43c158:	mov	x29, sp
  43c15c:	b.hi	43c198 <feof@plt+0x388f8>  // b.pmore
  43c160:	adrp	x10, 4cb000 <_obstack_memory_used@@Base+0x4f2fc>
  43c164:	add	x10, x10, #0x66
  43c168:	adr	x11, 43c178 <feof@plt+0x388d8>
  43c16c:	ldrb	w12, [x10, x9]
  43c170:	add	x11, x11, x12, lsl #2
  43c174:	br	x11
  43c178:	add	x9, x19, #0x268
  43c17c:	b	43c19c <feof@plt+0x388fc>
  43c180:	add	x9, x19, #0x238
  43c184:	b	43c19c <feof@plt+0x388fc>
  43c188:	add	x9, x19, #0x250
  43c18c:	b	43c19c <feof@plt+0x388fc>
  43c190:	add	x9, x19, #0x220
  43c194:	b	43c19c <feof@plt+0x388fc>
  43c198:	add	x9, x19, #0x208
  43c19c:	ldr	x9, [x9]
  43c1a0:	adrp	x10, 43c000 <feof@plt+0x38760>
  43c1a4:	add	x10, x10, #0x204
  43c1a8:	cmp	x9, x10
  43c1ac:	b.eq	43c1bc <feof@plt+0x3891c>  // b.none
  43c1b0:	adrp	x0, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c1b4:	add	x0, x0, #0x461
  43c1b8:	b	43c1f8 <feof@plt+0x38958>
  43c1bc:	ldr	x20, [x19, #1000]
  43c1c0:	adrp	x9, 43c000 <feof@plt+0x38760>
  43c1c4:	add	x9, x9, #0x280
  43c1c8:	mov	x0, x19
  43c1cc:	mov	x2, x3
  43c1d0:	mov	x3, xzr
  43c1d4:	mov	w4, w5
  43c1d8:	mov	x5, x8
  43c1dc:	str	x9, [x19, #1000]
  43c1e0:	bl	43b360 <feof@plt+0x37ac0>
  43c1e4:	adrp	x8, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c1e8:	add	x8, x8, #0x491
  43c1ec:	tst	w0, #0x1
  43c1f0:	csel	x0, xzr, x8, ne  // ne = any
  43c1f4:	str	x20, [x19, #1000]
  43c1f8:	ldp	x20, x19, [sp, #16]
  43c1fc:	ldp	x29, x30, [sp], #32
  43c200:	ret
  43c204:	stp	x29, x30, [sp, #-48]!
  43c208:	str	x21, [sp, #16]
  43c20c:	stp	x20, x19, [sp, #32]
  43c210:	ldp	x10, x8, [x3, #8]
  43c214:	mov	x19, x3
  43c218:	mov	x20, x2
  43c21c:	mov	x21, x1
  43c220:	add	x9, x8, x2
  43c224:	cmp	x9, x10
  43c228:	mov	x29, sp
  43c22c:	b.ls	43c24c <feof@plt+0x389ac>  // b.plast
  43c230:	ldr	x0, [x19]
  43c234:	add	x1, x9, x9, lsr #2
  43c238:	str	x1, [x19, #8]
  43c23c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43c240:	ldr	x8, [x19, #16]
  43c244:	str	x0, [x19]
  43c248:	b	43c250 <feof@plt+0x389b0>
  43c24c:	ldr	x0, [x19]
  43c250:	add	x0, x0, x8
  43c254:	mov	x1, x21
  43c258:	mov	x2, x20
  43c25c:	bl	402fc0 <memcpy@plt>
  43c260:	ldr	x8, [x19, #16]
  43c264:	ldr	x21, [sp, #16]
  43c268:	mov	w0, #0x1                   	// #1
  43c26c:	add	x8, x8, x20
  43c270:	str	x8, [x19, #16]
  43c274:	ldp	x20, x19, [sp, #32]
  43c278:	ldp	x29, x30, [sp], #48
  43c27c:	ret
  43c280:	mov	w0, #0x1                   	// #1
  43c284:	ret
  43c288:	sub	sp, sp, #0x40
  43c28c:	stp	x29, x30, [sp, #32]
  43c290:	str	x19, [sp, #48]
  43c294:	add	x19, x0, #0x208
  43c298:	ldr	x8, [x19, #16]
  43c29c:	ldr	q0, [x19]
  43c2a0:	mov	w4, #0x3e                  	// #62
  43c2a4:	mov	x5, xzr
  43c2a8:	str	x8, [sp, #16]
  43c2ac:	str	q0, [sp]
  43c2b0:	ldr	x9, [x0, #1216]
  43c2b4:	adrp	x8, 43c000 <feof@plt+0x38760>
  43c2b8:	add	x8, x8, #0x204
  43c2bc:	str	x8, [x0, #520]
  43c2c0:	mov	x8, #0xffffffffffffffff    	// #-1
  43c2c4:	mov	x6, xzr
  43c2c8:	add	x29, sp, #0x20
  43c2cc:	str	x8, [x0, #528]
  43c2d0:	str	w9, [x19, #16]
  43c2d4:	bl	43b360 <feof@plt+0x37ac0>
  43c2d8:	ldr	q0, [sp]
  43c2dc:	ldr	x8, [sp, #16]
  43c2e0:	and	w0, w0, #0x1
  43c2e4:	str	q0, [x19]
  43c2e8:	str	x8, [x19, #16]
  43c2ec:	ldr	x19, [sp, #48]
  43c2f0:	ldp	x29, x30, [sp, #32]
  43c2f4:	add	sp, sp, #0x40
  43c2f8:	ret
  43c2fc:	sub	sp, sp, #0x70
  43c300:	stp	x29, x30, [sp, #16]
  43c304:	str	x27, [sp, #32]
  43c308:	stp	x26, x25, [sp, #48]
  43c30c:	stp	x24, x23, [sp, #64]
  43c310:	stp	x22, x21, [sp, #80]
  43c314:	stp	x20, x19, [sp, #96]
  43c318:	stp	xzr, xzr, [sp]
  43c31c:	mov	x21, x1
  43c320:	ldr	w8, [x1, #8]!
  43c324:	mov	w10, #0x2                   	// #2
  43c328:	mov	x19, x3
  43c32c:	mov	x20, x2
  43c330:	ldurb	w4, [x1, #-4]
  43c334:	mov	x22, x0
  43c338:	add	x29, sp, #0x10
  43c33c:	cmp	w4, #0x3c
  43c340:	orr	w23, w4, #0x4
  43c344:	cset	w9, eq  // eq = none
  43c348:	cmp	w23, #0x3c
  43c34c:	cinc	x10, x10, ne  // ne = any
  43c350:	add	x9, x10, w9, uxtw #1
  43c354:	cmp	x9, x8
  43c358:	b.ne	43c374 <feof@plt+0x38ad4>  // b.any
  43c35c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c360:	add	x2, x2, #0x4af
  43c364:	mov	w1, #0x3                   	// #3
  43c368:	mov	x0, x22
  43c36c:	bl	4424f8 <feof@plt+0x3ec58>
  43c370:	b	43c3d0 <feof@plt+0x38b30>
  43c374:	mov	x3, sp
  43c378:	mov	w2, #0x1                   	// #1
  43c37c:	mov	x0, x22
  43c380:	mov	x5, xzr
  43c384:	mov	x6, xzr
  43c388:	bl	43b360 <feof@plt+0x37ac0>
  43c38c:	tbz	w0, #0, 43c3d0 <feof@plt+0x38b30>
  43c390:	ldp	x10, x8, [sp]
  43c394:	cmp	w23, #0x3c
  43c398:	b.eq	43c400 <feof@plt+0x38b60>  // b.none
  43c39c:	ldrb	w24, [x21, #4]
  43c3a0:	ldrb	w9, [x22, #1242]
  43c3a4:	sub	w11, w24, #0x39
  43c3a8:	cmp	w11, #0x9
  43c3ac:	b.hi	43c524 <feof@plt+0x38c84>  // b.pmore
  43c3b0:	adrp	x12, 4cb000 <_obstack_memory_used@@Base+0x4f2fc>
  43c3b4:	add	x12, x12, #0x70
  43c3b8:	adr	x13, 43c3c8 <feof@plt+0x38b28>
  43c3bc:	ldrb	w14, [x12, x11]
  43c3c0:	add	x13, x13, x14, lsl #2
  43c3c4:	br	x13
  43c3c8:	add	x11, x22, #0x278
  43c3cc:	b	43c528 <feof@plt+0x38c88>
  43c3d0:	mov	w23, wzr
  43c3d4:	str	wzr, [x20]
  43c3d8:	str	wzr, [x19]
  43c3dc:	mov	w0, w23
  43c3e0:	ldp	x20, x19, [sp, #96]
  43c3e4:	ldp	x22, x21, [sp, #80]
  43c3e8:	ldp	x24, x23, [sp, #64]
  43c3ec:	ldp	x26, x25, [sp, #48]
  43c3f0:	ldr	x27, [sp, #32]
  43c3f4:	ldp	x29, x30, [sp, #16]
  43c3f8:	add	sp, sp, #0x70
  43c3fc:	ret
  43c400:	ldr	x25, [x22, #1216]
  43c404:	mov	x9, #0xffffffffffffffff    	// #-1
  43c408:	mov	w11, #0xff                  	// #255
  43c40c:	mov	w23, wzr
  43c410:	lsl	x9, x9, x25
  43c414:	cmp	x25, #0x20
  43c418:	eor	x9, x9, #0xff
  43c41c:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  43c420:	subs	w24, w10, #0x1
  43c424:	b.eq	43c4b8 <feof@plt+0x38c18>  // b.none
  43c428:	ldr	x10, [x22, #1224]
  43c42c:	udiv	x26, x10, x25
  43c430:	mov	x10, x24
  43c434:	ldrb	w11, [x8], #1
  43c438:	lsl	w12, w23, w25
  43c43c:	cmp	x25, #0x20
  43c440:	csel	w12, w12, wzr, cc  // cc = lo, ul, last
  43c444:	and	w11, w9, w11
  43c448:	subs	x10, x10, #0x1
  43c44c:	orr	w23, w12, w11
  43c450:	b.ne	43c434 <feof@plt+0x38b94>  // b.any
  43c454:	cmp	x24, x26
  43c458:	b.ls	43c480 <feof@plt+0x38be0>  // b.plast
  43c45c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c460:	add	x2, x2, #0x7be
  43c464:	mov	x0, x22
  43c468:	mov	w1, wzr
  43c46c:	bl	4424f8 <feof@plt+0x3ec58>
  43c470:	cmp	x26, #0x1
  43c474:	b.ls	43c4d8 <feof@plt+0x38c38>  // b.plast
  43c478:	mov	x24, x26
  43c47c:	b	43c4a4 <feof@plt+0x38c04>
  43c480:	cmp	x24, #0x2
  43c484:	b.cc	43c4b8 <feof@plt+0x38c18>  // b.lo, b.ul, b.last
  43c488:	ldrb	w8, [x22, #1137]
  43c48c:	cbz	w8, 43c4a4 <feof@plt+0x38c04>
  43c490:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c494:	add	x2, x2, #0x7e7
  43c498:	mov	w1, #0x5                   	// #5
  43c49c:	mov	x0, x22
  43c4a0:	bl	442628 <feof@plt+0x3ed88>
  43c4a4:	ldr	x25, [x22, #1224]
  43c4a8:	mov	w8, wzr
  43c4ac:	cmp	x25, #0x1f
  43c4b0:	b.ls	43c4f0 <feof@plt+0x38c50>  // b.plast
  43c4b4:	b	43c518 <feof@plt+0x38c78>
  43c4b8:	ldrb	w8, [x22, #1240]
  43c4bc:	b	43c4e0 <feof@plt+0x38c40>
  43c4c0:	add	x11, x22, #0x248
  43c4c4:	b	43c528 <feof@plt+0x38c88>
  43c4c8:	add	x11, x22, #0x260
  43c4cc:	b	43c528 <feof@plt+0x38c88>
  43c4d0:	add	x11, x22, #0x230
  43c4d4:	b	43c528 <feof@plt+0x38c88>
  43c4d8:	ldrb	w8, [x22, #1240]
  43c4dc:	mov	x24, x26
  43c4e0:	cmp	w8, #0x0
  43c4e4:	cset	w8, ne  // ne = any
  43c4e8:	cmp	x25, #0x1f
  43c4ec:	b.hi	43c518 <feof@plt+0x38c78>  // b.pmore
  43c4f0:	mov	w9, #0xffffffff            	// #-1
  43c4f4:	lsl	w9, w9, w25
  43c4f8:	tbnz	w8, #0, 43c510 <feof@plt+0x38c70>
  43c4fc:	sub	w10, w25, #0x1
  43c500:	lsr	w10, w23, w10
  43c504:	tbz	w10, #0, 43c510 <feof@plt+0x38c70>
  43c508:	orr	w23, w9, w23
  43c50c:	b	43c518 <feof@plt+0x38c78>
  43c510:	mvn	w9, w9
  43c514:	and	w23, w23, w9
  43c518:	str	w24, [x20]
  43c51c:	str	w8, [x19]
  43c520:	b	43c60c <feof@plt+0x38d6c>
  43c524:	add	x11, x22, #0x218
  43c528:	ldrsw	x25, [x11]
  43c52c:	ldr	x11, [x22, #1216]
  43c530:	mov	w12, #0x20                  	// #32
  43c534:	mov	x26, #0xffffffffffffffff    	// #-1
  43c538:	cmp	x25, #0x20
  43c53c:	udiv	x13, x25, x11
  43c540:	csel	x27, x25, x12, cc  // cc = lo, ul, last
  43c544:	cmp	x11, #0x20
  43c548:	and	x10, x10, #0xffffffff
  43c54c:	csel	x15, x11, x12, cc  // cc = lo, ul, last
  43c550:	cmp	x11, x25
  43c554:	lsl	x12, x13, #1
  43c558:	b.ls	43c564 <feof@plt+0x38cc4>  // b.plast
  43c55c:	mov	w23, wzr
  43c560:	b	43c5ac <feof@plt+0x38d0c>
  43c564:	lsl	x16, x26, x15
  43c568:	sub	x15, x10, x12
  43c56c:	mov	x14, xzr
  43c570:	mov	w23, wzr
  43c574:	eor	x16, x16, #0xff
  43c578:	add	x17, x15, x13
  43c57c:	mvn	x0, x14
  43c580:	add	x18, x14, x15
  43c584:	cmp	w9, #0x0
  43c588:	add	x0, x17, x0
  43c58c:	csel	x18, x0, x18, eq  // eq = none
  43c590:	ldrb	w18, [x8, x18]
  43c594:	lsl	w0, w23, w11
  43c598:	add	x14, x14, #0x1
  43c59c:	cmp	x14, x13
  43c5a0:	and	w18, w16, w18
  43c5a4:	orr	w23, w0, w18
  43c5a8:	b.cc	43c57c <feof@plt+0x38cdc>  // b.lo, b.ul, b.last
  43c5ac:	cmp	x10, x12
  43c5b0:	b.ls	43c5c8 <feof@plt+0x38d28>  // b.plast
  43c5b4:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c5b8:	add	x2, x2, #0x7be
  43c5bc:	mov	x0, x22
  43c5c0:	mov	w1, wzr
  43c5c4:	bl	4424f8 <feof@plt+0x3ec58>
  43c5c8:	cmp	w25, #0x1f
  43c5cc:	orr	w8, w24, #0x1
  43c5d0:	b.hi	43c5f0 <feof@plt+0x38d50>  // b.pmore
  43c5d4:	lsl	x9, x26, x27
  43c5d8:	cmp	w8, #0x3b
  43c5dc:	mvn	x9, x9
  43c5e0:	b.eq	43c5ec <feof@plt+0x38d4c>  // b.none
  43c5e4:	ldrb	w10, [x22, #1241]
  43c5e8:	cbz	w10, 43c624 <feof@plt+0x38d84>
  43c5ec:	and	w23, w23, w9
  43c5f0:	mov	w9, #0x1                   	// #1
  43c5f4:	cmp	w8, #0x3b
  43c5f8:	mov	w8, #0x1                   	// #1
  43c5fc:	b.eq	43c604 <feof@plt+0x38d64>  // b.none
  43c600:	ldrb	w8, [x22, #1241]
  43c604:	str	w8, [x19]
  43c608:	str	w9, [x20]
  43c60c:	ldr	x0, [sp, #8]
  43c610:	ldr	x8, [x21, #16]
  43c614:	cmp	x0, x8
  43c618:	b.eq	43c3dc <feof@plt+0x38b3c>  // b.none
  43c61c:	bl	4031d0 <free@plt>
  43c620:	b	43c3dc <feof@plt+0x38b3c>
  43c624:	sub	w10, w25, #0x1
  43c628:	lsr	w10, w23, w10
  43c62c:	tbz	w10, #0, 43c5ec <feof@plt+0x38d4c>
  43c630:	orn	w23, w23, w9
  43c634:	b	43c5f0 <feof@plt+0x38d50>
  43c638:	stp	x29, x30, [sp, #-96]!
  43c63c:	stp	x28, x27, [sp, #16]
  43c640:	stp	x26, x25, [sp, #32]
  43c644:	stp	x24, x23, [sp, #48]
  43c648:	stp	x22, x21, [sp, #64]
  43c64c:	stp	x20, x19, [sp, #80]
  43c650:	mov	x29, sp
  43c654:	sub	sp, sp, #0x10
  43c658:	add	x9, x2, #0x10
  43c65c:	mov	x8, sp
  43c660:	and	x9, x9, #0xfffffffffffffff0
  43c664:	mov	x20, x0
  43c668:	sub	x19, x8, x9
  43c66c:	mov	sp, x19
  43c670:	cbz	x2, 43c7dc <feof@plt+0x38f3c>
  43c674:	stur	x20, [x29, #-16]
  43c678:	adrp	x27, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  43c67c:	adrp	x28, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c680:	adrp	x20, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  43c684:	mov	x21, x2
  43c688:	mov	x22, x1
  43c68c:	mov	x25, xzr
  43c690:	add	x24, x19, x2
  43c694:	mov	w13, #0x7                   	// #7
  43c698:	mov	w14, #0x3                   	// #3
  43c69c:	add	x27, x27, #0x4a2
  43c6a0:	add	x28, x28, #0x1ee
  43c6a4:	add	x20, x20, #0x1c3
  43c6a8:	mov	x23, x19
  43c6ac:	b	43c6c0 <feof@plt+0x38e20>
  43c6b0:	strb	w8, [x23], #1
  43c6b4:	add	x25, x25, #0x1
  43c6b8:	cmp	x25, x21
  43c6bc:	b.cs	43c7d4 <feof@plt+0x38f34>  // b.hs, b.nlast
  43c6c0:	ldrb	w8, [x22, x25]
  43c6c4:	cmp	w8, #0x5c
  43c6c8:	b.ne	43c6b0 <feof@plt+0x38e10>  // b.any
  43c6cc:	add	x9, x25, #0x2
  43c6d0:	cmp	x9, x21
  43c6d4:	add	x25, x25, #0x1
  43c6d8:	mov	w8, wzr
  43c6dc:	b.cs	43c728 <feof@plt+0x38e88>  // b.hs, b.nlast
  43c6e0:	ldrb	w10, [x22, x25]
  43c6e4:	cmp	w10, #0x75
  43c6e8:	csel	w10, w14, w13, eq  // eq = none
  43c6ec:	ldrb	w11, [x22, x9]
  43c6f0:	ldrh	w12, [x27, x11, lsl #1]
  43c6f4:	tbz	w12, #8, 43c714 <feof@plt+0x38e74>
  43c6f8:	ldrb	w11, [x20, x11]
  43c6fc:	subs	w10, w10, #0x1
  43c700:	add	x9, x9, #0x1
  43c704:	add	w8, w11, w8, lsl #4
  43c708:	b.cc	43c714 <feof@plt+0x38e74>  // b.lo, b.ul, b.last
  43c70c:	cmp	x9, x21
  43c710:	b.cc	43c6ec <feof@plt+0x38e4c>  // b.lo, b.ul, b.last
  43c714:	cmp	w8, #0x24
  43c718:	sub	x25, x9, #0x1
  43c71c:	b.eq	43c6b0 <feof@plt+0x38e10>  // b.none
  43c720:	cmp	w8, #0x80
  43c724:	b.cs	43c76c <feof@plt+0x38ecc>  // b.hs, b.nlast
  43c728:	sturb	w8, [x29, #-3]
  43c72c:	mov	x26, #0xffffffffffffffff    	// #-1
  43c730:	mov	w8, #0x1                   	// #1
  43c734:	sub	x9, x24, x23
  43c738:	cmp	x9, x8
  43c73c:	b.cc	43c7e4 <feof@plt+0x38f44>  // b.lo, b.ul, b.last
  43c740:	tbz	x26, #63, 43c6b4 <feof@plt+0x38e14>
  43c744:	sub	x8, x29, #0x8
  43c748:	add	x8, x8, x26
  43c74c:	add	x1, x8, #0x6
  43c750:	neg	x2, x26
  43c754:	mov	x0, x23
  43c758:	bl	402fc0 <memcpy@plt>
  43c75c:	mov	w14, #0x3                   	// #3
  43c760:	mov	w13, #0x7                   	// #7
  43c764:	sub	x23, x23, x26
  43c768:	b	43c6b4 <feof@plt+0x38e14>
  43c76c:	mov	x9, xzr
  43c770:	sub	x10, x29, #0x8
  43c774:	b	43c784 <feof@plt+0x38ee4>
  43c778:	add	x9, x9, #0x1
  43c77c:	sub	x10, x10, #0x1
  43c780:	mov	w8, w11
  43c784:	mov	w11, #0x80                  	// #128
  43c788:	bfxil	w11, w8, #0, #6
  43c78c:	cmp	w8, #0xfbf
  43c790:	strb	w11, [x10, #5]
  43c794:	lsr	w11, w8, #6
  43c798:	b.hi	43c778 <feof@plt+0x38ed8>  // b.pmore
  43c79c:	add	x12, x28, x9
  43c7a0:	ldrb	w12, [x12, #1]
  43c7a4:	tst	w11, w12
  43c7a8:	b.ne	43c778 <feof@plt+0x38ed8>  // b.any
  43c7ac:	adrp	x11, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c7b0:	add	x11, x11, #0x1e8
  43c7b4:	add	x11, x11, x9
  43c7b8:	ldrb	w11, [x11, #1]
  43c7bc:	mov	x12, #0xfffffffffffffffe    	// #-2
  43c7c0:	sub	x26, x12, x9
  43c7c4:	orr	w8, w11, w8, lsr #6
  43c7c8:	strb	w8, [x10, #4]
  43c7cc:	add	x8, x9, #0x2
  43c7d0:	b	43c734 <feof@plt+0x38e94>
  43c7d4:	ldur	x20, [x29, #-16]
  43c7d8:	b	43c808 <feof@plt+0x38f68>
  43c7dc:	mov	x23, x19
  43c7e0:	b	43c808 <feof@plt+0x38f68>
  43c7e4:	bl	4035c0 <__errno_location@plt>
  43c7e8:	ldur	x20, [x29, #-16]
  43c7ec:	mov	w8, #0x7                   	// #7
  43c7f0:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c7f4:	str	w8, [x0]
  43c7f8:	add	x2, x2, #0x4c8
  43c7fc:	mov	w1, #0x3                   	// #3
  43c800:	mov	x0, x20
  43c804:	bl	442f50 <feof@plt+0x3f6b0>
  43c808:	ldr	x0, [x20, #1088]
  43c80c:	sub	x2, x23, x19
  43c810:	mov	w3, #0x1                   	// #1
  43c814:	mov	x1, x19
  43c818:	bl	456b40 <feof@plt+0x532a0>
  43c81c:	mov	sp, x29
  43c820:	ldp	x20, x19, [sp, #80]
  43c824:	ldp	x22, x21, [sp, #64]
  43c828:	ldp	x24, x23, [sp, #48]
  43c82c:	ldp	x26, x25, [sp, #32]
  43c830:	ldp	x28, x27, [sp, #16]
  43c834:	ldp	x29, x30, [sp], #96
  43c838:	ret
  43c83c:	sub	sp, sp, #0x70
  43c840:	stp	x22, x21, [sp, #80]
  43c844:	mov	x21, x2
  43c848:	mov	x2, x1
  43c84c:	adrp	x1, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c850:	add	x1, x1, #0x59a
  43c854:	add	x8, sp, #0x8
  43c858:	stp	x29, x30, [sp, #32]
  43c85c:	str	x25, [sp, #48]
  43c860:	stp	x24, x23, [sp, #64]
  43c864:	stp	x20, x19, [sp, #96]
  43c868:	add	x29, sp, #0x20
  43c86c:	mov	x20, x6
  43c870:	mov	x19, x5
  43c874:	mov	x24, x4
  43c878:	mov	x23, x3
  43c87c:	mov	x22, x0
  43c880:	bl	43a828 <feof@plt+0x36f88>
  43c884:	ldr	x25, [sp, #8]
  43c888:	adrp	x8, 43c000 <feof@plt+0x38760>
  43c88c:	add	x8, x8, #0x204
  43c890:	cmp	x25, x8
  43c894:	b.eq	43c914 <feof@plt+0x39074>  // b.none
  43c898:	ldr	x23, [sp, #16]
  43c89c:	cmp	x24, #0x10, lsl #12
  43c8a0:	mov	w8, #0x10000               	// #65536
  43c8a4:	csel	x0, x24, x8, hi  // hi = pmore
  43c8a8:	str	x0, [sp, #16]
  43c8ac:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  43c8b0:	str	x0, [sp, #8]
  43c8b4:	add	x3, sp, #0x8
  43c8b8:	mov	x0, x23
  43c8bc:	mov	x1, x21
  43c8c0:	mov	x2, x24
  43c8c4:	str	xzr, [sp, #24]
  43c8c8:	blr	x25
  43c8cc:	tbnz	w0, #0, 43c8f0 <feof@plt+0x39050>
  43c8d0:	ldr	x3, [x22, #1184]
  43c8d4:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c8d8:	adrp	x4, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c8dc:	add	x2, x2, #0x4ef
  43c8e0:	add	x4, x4, #0x59a
  43c8e4:	mov	w1, #0x3                   	// #3
  43c8e8:	mov	x0, x22
  43c8ec:	bl	4424f8 <feof@plt+0x3ec58>
  43c8f0:	mov	x0, x21
  43c8f4:	bl	4031d0 <free@plt>
  43c8f8:	adrp	x8, 43a000 <feof@plt+0x36760>
  43c8fc:	add	x8, x8, #0xae8
  43c900:	cmp	x25, x8
  43c904:	b.ne	43c91c <feof@plt+0x3907c>  // b.any
  43c908:	mov	x0, x23
  43c90c:	bl	402fb0 <iconv_close@plt>
  43c910:	b	43c91c <feof@plt+0x3907c>
  43c914:	stp	x21, x23, [sp, #8]
  43c918:	str	x24, [sp, #24]
  43c91c:	ldp	x9, x8, [sp, #16]
  43c920:	ldr	x0, [sp, #8]
  43c924:	add	x10, x8, #0x1, lsl #12
  43c928:	cmp	x10, x9
  43c92c:	add	x1, x8, #0x10
  43c930:	b.cc	43c93c <feof@plt+0x3909c>  // b.lo, b.ul, b.last
  43c934:	cmp	x1, x9
  43c938:	b.ls	43c948 <feof@plt+0x390a8>  // b.plast
  43c93c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43c940:	ldr	x8, [sp, #24]
  43c944:	str	x0, [sp, #8]
  43c948:	add	x8, x0, x8
  43c94c:	stp	xzr, xzr, [x8]
  43c950:	ldr	x8, [sp, #24]
  43c954:	ldr	x9, [sp, #8]
  43c958:	cbz	x8, 43c96c <feof@plt+0x390cc>
  43c95c:	add	x10, x8, x9
  43c960:	ldurb	w10, [x10, #-1]
  43c964:	cmp	w10, #0xd
  43c968:	b.eq	43c970 <feof@plt+0x390d0>  // b.none
  43c96c:	mov	w10, #0xa                   	// #10
  43c970:	strb	w10, [x9, x8]
  43c974:	ldr	x10, [sp, #24]
  43c978:	ldr	x8, [sp, #8]
  43c97c:	subs	x9, x10, #0x3
  43c980:	mov	x0, x8
  43c984:	str	x10, [x20]
  43c988:	b.cc	43c9c4 <feof@plt+0x39124>  // b.lo, b.ul, b.last
  43c98c:	ldrb	w10, [x8]
  43c990:	mov	x0, x8
  43c994:	cmp	w10, #0xef
  43c998:	b.ne	43c9c4 <feof@plt+0x39124>  // b.any
  43c99c:	ldrb	w10, [x8, #1]
  43c9a0:	mov	x0, x8
  43c9a4:	cmp	w10, #0xbb
  43c9a8:	b.ne	43c9c4 <feof@plt+0x39124>  // b.any
  43c9ac:	ldrb	w10, [x8, #2]
  43c9b0:	mov	x0, x8
  43c9b4:	cmp	w10, #0xbf
  43c9b8:	b.ne	43c9c4 <feof@plt+0x39124>  // b.any
  43c9bc:	add	x0, x8, #0x3
  43c9c0:	str	x9, [x20]
  43c9c4:	str	x8, [x19]
  43c9c8:	ldp	x20, x19, [sp, #96]
  43c9cc:	ldp	x22, x21, [sp, #80]
  43c9d0:	ldp	x24, x23, [sp, #64]
  43c9d4:	ldr	x25, [sp, #48]
  43c9d8:	ldp	x29, x30, [sp, #32]
  43c9dc:	add	sp, sp, #0x70
  43c9e0:	ret
  43c9e4:	adrp	x0, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43c9e8:	add	x0, x0, #0x59a
  43c9ec:	ret
  43c9f0:	stp	x29, x30, [sp, #-48]!
  43c9f4:	stp	x20, x19, [sp, #32]
  43c9f8:	mov	x20, x0
  43c9fc:	str	x2, [x0, #8]
  43ca00:	mov	x0, x2
  43ca04:	str	x21, [sp, #16]
  43ca08:	mov	x29, sp
  43ca0c:	mov	x19, x2
  43ca10:	bl	44e40c <feof@plt+0x4ab6c>
  43ca14:	mov	x1, x0
  43ca18:	mov	w2, #0x1                   	// #1
  43ca1c:	mov	x0, x19
  43ca20:	mov	x3, xzr
  43ca24:	mov	w21, #0x1                   	// #1
  43ca28:	bl	44f288 <feof@plt+0x4b9e8>
  43ca2c:	mov	w1, w0
  43ca30:	str	w0, [x20]
  43ca34:	mov	x0, x19
  43ca38:	bl	44e220 <feof@plt+0x4a980>
  43ca3c:	ldrb	w8, [x0, #7]
  43ca40:	lsl	w8, w21, w8
  43ca44:	str	w8, [x20, #4]
  43ca48:	ldp	x20, x19, [sp, #32]
  43ca4c:	ldr	x21, [sp, #16]
  43ca50:	ldp	x29, x30, [sp], #48
  43ca54:	ret
  43ca58:	stp	x29, x30, [sp, #-96]!
  43ca5c:	str	x27, [sp, #16]
  43ca60:	stp	x26, x25, [sp, #32]
  43ca64:	stp	x24, x23, [sp, #48]
  43ca68:	stp	x22, x21, [sp, #64]
  43ca6c:	stp	x20, x19, [sp, #80]
  43ca70:	ldp	x10, x9, [x3, #8]
  43ca74:	ldr	x8, [x3]
  43ca78:	cmp	x0, #0x0
  43ca7c:	mov	w11, #0x3                   	// #3
  43ca80:	mov	w12, #0x1                   	// #1
  43ca84:	mov	x19, x3
  43ca88:	mov	x21, x2
  43ca8c:	mov	x20, x1
  43ca90:	csel	x22, x11, xzr, ne  // ne = any
  43ca94:	add	x8, x8, x9
  43ca98:	sub	x9, x10, x9
  43ca9c:	cinc	x23, x12, ne  // ne = any
  43caa0:	cinc	x24, x12, eq  // eq = none
  43caa4:	csel	x25, xzr, x11, ne  // ne = any
  43caa8:	mov	x29, sp
  43caac:	mov	x26, x9
  43cab0:	subs	x9, x26, #0x4
  43cab4:	b.cc	43cbd8 <feof@plt+0x39338>  // b.lo, b.ul, b.last
  43cab8:	cbz	x21, 43cc5c <feof@plt+0x393bc>
  43cabc:	ldrsb	w11, [x20]
  43cac0:	and	w10, w11, #0xff
  43cac4:	tbz	w11, #31, 43cc20 <feof@plt+0x39380>
  43cac8:	and	w11, w10, #0xe0
  43cacc:	cmp	w11, #0xc0
  43cad0:	b.ne	43cae0 <feof@plt+0x39240>  // b.any
  43cad4:	mov	w13, #0x1f                  	// #31
  43cad8:	mov	w11, #0x2                   	// #2
  43cadc:	b	43cb3c <feof@plt+0x3929c>
  43cae0:	and	w11, w10, #0xf0
  43cae4:	cmp	w11, #0xe0
  43cae8:	b.ne	43caf8 <feof@plt+0x39258>  // b.any
  43caec:	mov	w13, #0xf                   	// #15
  43caf0:	mov	w11, #0x3                   	// #3
  43caf4:	b	43cb3c <feof@plt+0x3929c>
  43caf8:	and	w11, w10, #0xf8
  43cafc:	cmp	w11, #0xf0
  43cb00:	b.ne	43cb10 <feof@plt+0x39270>  // b.any
  43cb04:	mov	w13, #0x7                   	// #7
  43cb08:	mov	w11, #0x4                   	// #4
  43cb0c:	b	43cb3c <feof@plt+0x3929c>
  43cb10:	and	w11, w10, #0xfc
  43cb14:	cmp	w11, #0xf8
  43cb18:	b.ne	43cb28 <feof@plt+0x39288>  // b.any
  43cb1c:	mov	w13, #0x3                   	// #3
  43cb20:	mov	w11, #0x5                   	// #5
  43cb24:	b	43cb3c <feof@plt+0x3929c>
  43cb28:	and	w11, w10, #0xfe
  43cb2c:	cmp	w11, #0xfc
  43cb30:	b.ne	43cca4 <feof@plt+0x39404>  // b.any
  43cb34:	mov	w13, #0x1                   	// #1
  43cb38:	mov	w11, #0x6                   	// #6
  43cb3c:	subs	x12, x21, x11
  43cb40:	b.cc	43cc8c <feof@plt+0x393ec>  // b.lo, b.ul, b.last
  43cb44:	and	w10, w13, w10
  43cb48:	mov	w14, #0x1                   	// #1
  43cb4c:	mov	w13, w10
  43cb50:	ldrb	w10, [x20, x14]
  43cb54:	and	w15, w10, #0xc0
  43cb58:	cmp	w15, #0x80
  43cb5c:	b.ne	43cbb8 <feof@plt+0x39318>  // b.any
  43cb60:	add	x14, x14, #0x1
  43cb64:	cmp	x11, x14
  43cb68:	bfi	w10, w13, #6, #26
  43cb6c:	b.ne	43cb4c <feof@plt+0x392ac>  // b.any
  43cb70:	cmp	w10, #0x80
  43cb74:	b.cc	43cbb8 <feof@plt+0x39318>  // b.lo, b.ul, b.last
  43cb78:	cmp	x11, #0x3
  43cb7c:	b.cc	43cb88 <feof@plt+0x392e8>  // b.lo, b.ul, b.last
  43cb80:	cmp	w10, #0x800
  43cb84:	b.cc	43cbb8 <feof@plt+0x39318>  // b.lo, b.ul, b.last
  43cb88:	cmp	x11, #0x4
  43cb8c:	b.cc	43cb98 <feof@plt+0x392f8>  // b.lo, b.ul, b.last
  43cb90:	cmp	w10, #0x10, lsl #12
  43cb94:	b.cc	43cbb8 <feof@plt+0x39318>  // b.lo, b.ul, b.last
  43cb98:	cmp	x11, #0x5
  43cb9c:	b.cc	43cba8 <feof@plt+0x39308>  // b.lo, b.ul, b.last
  43cba0:	cmp	w10, #0x200, lsl #12
  43cba4:	b.cc	43cbb8 <feof@plt+0x39318>  // b.lo, b.ul, b.last
  43cba8:	cmp	x11, #0x6
  43cbac:	b.cc	43cbc0 <feof@plt+0x39320>  // b.lo, b.ul, b.last
  43cbb0:	lsr	w14, w10, #26
  43cbb4:	cbnz	w14, 43cbc0 <feof@plt+0x39320>
  43cbb8:	mov	w27, #0x54                  	// #84
  43cbbc:	b	43cbdc <feof@plt+0x3933c>
  43cbc0:	mov	w27, #0x54                  	// #84
  43cbc4:	tbnz	w10, #31, 43cbdc <feof@plt+0x3933c>
  43cbc8:	and	w13, w13, #0x3ffffe0
  43cbcc:	cmp	w13, #0x360
  43cbd0:	b.eq	43cbdc <feof@plt+0x3933c>  // b.none
  43cbd4:	b	43cc50 <feof@plt+0x393b0>
  43cbd8:	mov	w27, #0x7                   	// #7
  43cbdc:	cbz	x21, 43cc5c <feof@plt+0x393bc>
  43cbe0:	cmp	w27, #0x7
  43cbe4:	b.ne	43cc90 <feof@plt+0x393f0>  // b.any
  43cbe8:	ldp	x0, x8, [x19]
  43cbec:	add	x27, x26, #0x100
  43cbf0:	add	x1, x8, #0x100
  43cbf4:	str	x1, [x19, #8]
  43cbf8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43cbfc:	ldr	x8, [x19, #8]
  43cc00:	str	x0, [x19]
  43cc04:	add	x8, x0, x8
  43cc08:	sub	x8, x8, x26
  43cc0c:	sub	x8, x8, #0x100
  43cc10:	mov	x26, x27
  43cc14:	subs	x9, x26, #0x4
  43cc18:	b.cs	43cab8 <feof@plt+0x39218>  // b.hs, b.nlast
  43cc1c:	b	43cbd8 <feof@plt+0x39338>
  43cc20:	sub	x21, x21, #0x1
  43cc24:	add	x20, x20, #0x1
  43cc28:	strb	w10, [x8, x22]
  43cc2c:	lsr	w11, w10, #8
  43cc30:	lsr	w12, w10, #16
  43cc34:	lsr	w10, w10, #24
  43cc38:	strb	w11, [x8, x23]
  43cc3c:	strb	w12, [x8, x24]
  43cc40:	strb	w10, [x8, x25]
  43cc44:	add	x8, x8, #0x4
  43cc48:	cbnz	x21, 43caac <feof@plt+0x3920c>
  43cc4c:	b	43cc60 <feof@plt+0x393c0>
  43cc50:	add	x20, x20, x11
  43cc54:	mov	x21, x12
  43cc58:	b	43cc28 <feof@plt+0x39388>
  43cc5c:	mov	x9, x26
  43cc60:	ldr	x8, [x19, #8]
  43cc64:	mov	w0, #0x1                   	// #1
  43cc68:	sub	x8, x8, x9
  43cc6c:	str	x8, [x19, #16]
  43cc70:	ldp	x20, x19, [sp, #80]
  43cc74:	ldp	x22, x21, [sp, #64]
  43cc78:	ldp	x24, x23, [sp, #48]
  43cc7c:	ldp	x26, x25, [sp, #32]
  43cc80:	ldr	x27, [sp, #16]
  43cc84:	ldp	x29, x30, [sp], #96
  43cc88:	ret
  43cc8c:	mov	w27, #0x16                  	// #22
  43cc90:	bl	4035c0 <__errno_location@plt>
  43cc94:	mov	x8, x0
  43cc98:	mov	w0, wzr
  43cc9c:	str	w27, [x8]
  43cca0:	b	43cc70 <feof@plt+0x393d0>
  43cca4:	mov	w27, #0x54                  	// #84
  43cca8:	b	43cc90 <feof@plt+0x393f0>
  43ccac:	sub	sp, sp, #0x70
  43ccb0:	stp	x29, x30, [sp, #16]
  43ccb4:	stp	x28, x27, [sp, #32]
  43ccb8:	stp	x26, x25, [sp, #48]
  43ccbc:	stp	x24, x23, [sp, #64]
  43ccc0:	stp	x22, x21, [sp, #80]
  43ccc4:	stp	x20, x19, [sp, #96]
  43ccc8:	ldp	x10, x9, [x3, #8]
  43cccc:	ldr	x8, [x3]
  43ccd0:	cmp	x0, #0x0
  43ccd4:	mov	w11, #0x2                   	// #2
  43ccd8:	mov	x19, x3
  43ccdc:	mov	x21, x2
  43cce0:	mov	x20, x1
  43cce4:	cset	w22, eq  // eq = none
  43cce8:	cset	w23, ne  // ne = any
  43ccec:	cinc	x12, x11, ne  // ne = any
  43ccf0:	cinc	x26, x11, eq  // eq = none
  43ccf4:	add	x8, x8, x9
  43ccf8:	sub	x25, x10, x9
  43ccfc:	add	x29, sp, #0x10
  43cd00:	str	x12, [sp, #8]
  43cd04:	sub	x28, x21, #0x1
  43cd08:	add	x27, x20, #0x1
  43cd0c:	cbz	x21, 43cf00 <feof@plt+0x39660>
  43cd10:	ldrsb	w10, [x20]
  43cd14:	and	w9, w10, #0xff
  43cd18:	tbnz	w10, #31, 43cd3c <feof@plt+0x3949c>
  43cd1c:	mov	x11, x27
  43cd20:	mov	x10, x28
  43cd24:	cmp	x25, #0x2
  43cd28:	b.cs	43ced4 <feof@plt+0x39634>  // b.hs, b.nlast
  43cd2c:	mov	w24, #0x7                   	// #7
  43cd30:	cmp	w24, #0x7
  43cd34:	b.eq	43ce5c <feof@plt+0x395bc>  // b.none
  43cd38:	b	43cf18 <feof@plt+0x39678>
  43cd3c:	and	w10, w9, #0xe0
  43cd40:	cmp	w10, #0xc0
  43cd44:	b.ne	43cd54 <feof@plt+0x394b4>  // b.any
  43cd48:	mov	w11, #0x1f                  	// #31
  43cd4c:	mov	w12, #0x2                   	// #2
  43cd50:	b	43cdb0 <feof@plt+0x39510>
  43cd54:	and	w10, w9, #0xf0
  43cd58:	cmp	w10, #0xe0
  43cd5c:	b.ne	43cd6c <feof@plt+0x394cc>  // b.any
  43cd60:	mov	w11, #0xf                   	// #15
  43cd64:	mov	w12, #0x3                   	// #3
  43cd68:	b	43cdb0 <feof@plt+0x39510>
  43cd6c:	and	w10, w9, #0xf8
  43cd70:	cmp	w10, #0xf0
  43cd74:	b.ne	43cd84 <feof@plt+0x394e4>  // b.any
  43cd78:	mov	w11, #0x7                   	// #7
  43cd7c:	mov	w12, #0x4                   	// #4
  43cd80:	b	43cdb0 <feof@plt+0x39510>
  43cd84:	and	w10, w9, #0xfc
  43cd88:	cmp	w10, #0xf8
  43cd8c:	b.ne	43cd9c <feof@plt+0x394fc>  // b.any
  43cd90:	mov	w11, #0x3                   	// #3
  43cd94:	mov	w12, #0x5                   	// #5
  43cd98:	b	43cdb0 <feof@plt+0x39510>
  43cd9c:	and	w10, w9, #0xfe
  43cda0:	cmp	w10, #0xfc
  43cda4:	b.ne	43cf48 <feof@plt+0x396a8>  // b.any
  43cda8:	mov	w11, #0x1                   	// #1
  43cdac:	mov	w12, #0x6                   	// #6
  43cdb0:	subs	x10, x21, x12
  43cdb4:	b.cc	43cf14 <feof@plt+0x39674>  // b.lo, b.ul, b.last
  43cdb8:	and	w9, w11, w9
  43cdbc:	add	x11, x20, x12
  43cdc0:	mov	w14, #0x1                   	// #1
  43cdc4:	mov	w13, w9
  43cdc8:	ldrb	w9, [x20, x14]
  43cdcc:	and	w15, w9, #0xc0
  43cdd0:	cmp	w15, #0x80
  43cdd4:	b.ne	43ce50 <feof@plt+0x395b0>  // b.any
  43cdd8:	add	x14, x14, #0x1
  43cddc:	cmp	x12, x14
  43cde0:	bfi	w9, w13, #6, #26
  43cde4:	b.ne	43cdc4 <feof@plt+0x39524>  // b.any
  43cde8:	cmp	w9, #0x80
  43cdec:	b.cc	43ce50 <feof@plt+0x395b0>  // b.lo, b.ul, b.last
  43cdf0:	cmp	x12, #0x3
  43cdf4:	b.cc	43ce00 <feof@plt+0x39560>  // b.lo, b.ul, b.last
  43cdf8:	cmp	w9, #0x800
  43cdfc:	b.cc	43ce50 <feof@plt+0x395b0>  // b.lo, b.ul, b.last
  43ce00:	cmp	x12, #0x4
  43ce04:	b.cc	43ce10 <feof@plt+0x39570>  // b.lo, b.ul, b.last
  43ce08:	cmp	w9, #0x10, lsl #12
  43ce0c:	b.cc	43ce50 <feof@plt+0x395b0>  // b.lo, b.ul, b.last
  43ce10:	cmp	x12, #0x5
  43ce14:	b.cc	43ce20 <feof@plt+0x39580>  // b.lo, b.ul, b.last
  43ce18:	cmp	w9, #0x200, lsl #12
  43ce1c:	b.cc	43ce50 <feof@plt+0x395b0>  // b.lo, b.ul, b.last
  43ce20:	cmp	x12, #0x6
  43ce24:	b.cc	43ce30 <feof@plt+0x39590>  // b.lo, b.ul, b.last
  43ce28:	lsr	w12, w9, #26
  43ce2c:	cbz	w12, 43ce50 <feof@plt+0x395b0>
  43ce30:	mov	w24, #0x54                  	// #84
  43ce34:	tbnz	w9, #31, 43ce54 <feof@plt+0x395b4>
  43ce38:	and	w12, w13, #0x3ffffe0
  43ce3c:	cmp	w12, #0x360
  43ce40:	b.eq	43ce54 <feof@plt+0x395b4>  // b.none
  43ce44:	lsr	w12, w9, #16
  43ce48:	cmp	w12, #0x10
  43ce4c:	b.ls	43ce90 <feof@plt+0x395f0>  // b.plast
  43ce50:	mov	w24, #0x54                  	// #84
  43ce54:	cmp	w24, #0x7
  43ce58:	b.ne	43cf18 <feof@plt+0x39678>  // b.any
  43ce5c:	ldp	x0, x8, [x19]
  43ce60:	add	x24, x25, #0x100
  43ce64:	add	x1, x8, #0x100
  43ce68:	str	x1, [x19, #8]
  43ce6c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43ce70:	ldr	x8, [x19, #8]
  43ce74:	str	x0, [x19]
  43ce78:	add	x8, x0, x8
  43ce7c:	sub	x8, x8, x25
  43ce80:	sub	x8, x8, #0x100
  43ce84:	mov	x25, x24
  43ce88:	cbnz	x21, 43cd10 <feof@plt+0x39470>
  43ce8c:	b	43cf00 <feof@plt+0x39660>
  43ce90:	cbz	w12, 43cd24 <feof@plt+0x39484>
  43ce94:	cmp	x25, #0x4
  43ce98:	b.cc	43cd2c <feof@plt+0x3948c>  // b.lo, b.ul, b.last
  43ce9c:	sub	w14, w9, #0x10, lsl #12
  43cea0:	mov	w15, #0xd800                	// #55296
  43cea4:	add	w15, w15, w14, lsr #10
  43cea8:	strb	w15, [x8, x23]
  43ceac:	lsr	w15, w15, #8
  43ceb0:	strb	w15, [x8, x22]
  43ceb4:	ldr	x15, [sp, #8]
  43ceb8:	mov	w9, #0xffffffdc            	// #-36
  43cebc:	mov	x12, #0xfffffffffffffffc    	// #-4
  43cec0:	mov	x13, x26
  43cec4:	bfxil	w9, w14, #8, #2
  43cec8:	strb	w14, [x8, x15]
  43cecc:	mov	w14, #0x4                   	// #4
  43ced0:	b	43cee8 <feof@plt+0x39648>
  43ced4:	strb	w9, [x8, x23]
  43ced8:	lsr	w9, w9, #8
  43cedc:	mov	x12, #0xfffffffffffffffe    	// #-2
  43cee0:	mov	x13, x22
  43cee4:	mov	w14, #0x2                   	// #2
  43cee8:	strb	w9, [x8, x13]
  43ceec:	add	x8, x8, x14
  43cef0:	add	x25, x25, x12
  43cef4:	mov	x20, x11
  43cef8:	mov	x21, x10
  43cefc:	cbnz	x10, 43cd04 <feof@plt+0x39464>
  43cf00:	ldr	x8, [x19, #8]
  43cf04:	mov	w0, #0x1                   	// #1
  43cf08:	sub	x8, x8, x25
  43cf0c:	str	x8, [x19, #16]
  43cf10:	b	43cf28 <feof@plt+0x39688>
  43cf14:	mov	w24, #0x16                  	// #22
  43cf18:	bl	4035c0 <__errno_location@plt>
  43cf1c:	mov	x8, x0
  43cf20:	mov	w0, wzr
  43cf24:	str	w24, [x8]
  43cf28:	ldp	x20, x19, [sp, #96]
  43cf2c:	ldp	x22, x21, [sp, #80]
  43cf30:	ldp	x24, x23, [sp, #64]
  43cf34:	ldp	x26, x25, [sp, #48]
  43cf38:	ldp	x28, x27, [sp, #32]
  43cf3c:	ldp	x29, x30, [sp, #16]
  43cf40:	add	sp, sp, #0x70
  43cf44:	ret
  43cf48:	mov	w24, #0x54                  	// #84
  43cf4c:	b	43cf18 <feof@plt+0x39678>
  43cf50:	sub	sp, sp, #0x70
  43cf54:	stp	x29, x30, [sp, #16]
  43cf58:	stp	x28, x27, [sp, #32]
  43cf5c:	stp	x26, x25, [sp, #48]
  43cf60:	stp	x24, x23, [sp, #64]
  43cf64:	stp	x22, x21, [sp, #80]
  43cf68:	stp	x20, x19, [sp, #96]
  43cf6c:	ldp	x10, x8, [x3, #8]
  43cf70:	ldr	x9, [x3]
  43cf74:	cmp	x0, #0x0
  43cf78:	mov	w11, #0x3                   	// #3
  43cf7c:	mov	w12, #0x1                   	// #1
  43cf80:	adrp	x26, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43cf84:	adrp	x16, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43cf88:	mov	x19, x3
  43cf8c:	mov	x20, x2
  43cf90:	mov	x21, x1
  43cf94:	mov	w13, #0x7ffffffe            	// #2147483646
  43cf98:	mov	w14, #0xd800                	// #55296
  43cf9c:	add	x15, sp, #0x8
  43cfa0:	add	x26, x26, #0x1ee
  43cfa4:	add	x16, x16, #0x1e8
  43cfa8:	csel	x17, xzr, x11, ne  // ne = any
  43cfac:	cinc	x25, x12, eq  // eq = none
  43cfb0:	cinc	x27, x12, ne  // ne = any
  43cfb4:	csel	x24, x11, xzr, ne  // ne = any
  43cfb8:	add	x0, x9, x8
  43cfbc:	sub	x23, x10, x8
  43cfc0:	mov	x18, #0xfffffffffffffffe    	// #-2
  43cfc4:	add	x29, sp, #0x10
  43cfc8:	mov	x22, x23
  43cfcc:	cmp	x20, #0x4
  43cfd0:	b.cs	43cfe0 <feof@plt+0x39740>  // b.hs, b.nlast
  43cfd4:	mov	w23, #0x16                  	// #22
  43cfd8:	cbz	x20, 43d14c <feof@plt+0x398ac>
  43cfdc:	b	43d098 <feof@plt+0x397f8>
  43cfe0:	ldrb	w8, [x21, x17]
  43cfe4:	ldrb	w11, [x21, x25]
  43cfe8:	ldrb	w12, [x21, x27]
  43cfec:	ldrb	w9, [x21, x24]
  43cff0:	lsl	w10, w8, #24
  43cff4:	bfi	w10, w11, #16, #8
  43cff8:	bfi	w10, w12, #8, #8
  43cffc:	orr	w8, w10, w9
  43d000:	cmp	w8, w13
  43d004:	mov	w23, #0x54                  	// #84
  43d008:	b.hi	43d180 <feof@plt+0x398e0>  // b.pmore
  43d00c:	and	w10, w10, #0xfffff800
  43d010:	cmp	w10, w14
  43d014:	b.eq	43d180 <feof@plt+0x398e0>  // b.none
  43d018:	cmp	w8, #0x80
  43d01c:	b.cs	43d030 <feof@plt+0x39790>  // b.hs, b.nlast
  43d020:	strb	w9, [sp, #13]
  43d024:	mov	x28, #0xffffffffffffffff    	// #-1
  43d028:	mov	w8, #0x1                   	// #1
  43d02c:	b	43d088 <feof@plt+0x397e8>
  43d030:	mov	x9, xzr
  43d034:	add	x10, sp, #0x8
  43d038:	b	43d048 <feof@plt+0x397a8>
  43d03c:	add	x9, x9, #0x1
  43d040:	sub	x10, x10, #0x1
  43d044:	mov	w8, w11
  43d048:	mov	w11, #0x80                  	// #128
  43d04c:	bfxil	w11, w8, #0, #6
  43d050:	cmp	w8, #0xfbf
  43d054:	strb	w11, [x10, #5]
  43d058:	lsr	w11, w8, #6
  43d05c:	b.hi	43d03c <feof@plt+0x3979c>  // b.pmore
  43d060:	add	x12, x26, x9
  43d064:	ldrb	w12, [x12, #1]
  43d068:	tst	w11, w12
  43d06c:	b.ne	43d03c <feof@plt+0x3979c>  // b.any
  43d070:	add	x11, x16, x9
  43d074:	ldrb	w11, [x11, #1]
  43d078:	sub	x28, x18, x9
  43d07c:	orr	w8, w11, w8, lsr #6
  43d080:	strb	w8, [x10, #4]
  43d084:	add	x8, x9, #0x2
  43d088:	subs	x23, x22, x8
  43d08c:	b.cs	43d0fc <feof@plt+0x3985c>  // b.hs, b.nlast
  43d090:	mov	w23, #0x7                   	// #7
  43d094:	cbz	x20, 43d14c <feof@plt+0x398ac>
  43d098:	cmp	w23, #0x7
  43d09c:	b.ne	43d180 <feof@plt+0x398e0>  // b.any
  43d0a0:	ldp	x0, x8, [x19]
  43d0a4:	add	x9, x22, #0x100
  43d0a8:	str	x9, [sp]
  43d0ac:	mov	x28, x16
  43d0b0:	add	x1, x8, #0x100
  43d0b4:	str	x1, [x19, #8]
  43d0b8:	mov	x23, x17
  43d0bc:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43d0c0:	ldr	x8, [x19, #8]
  43d0c4:	mov	x18, #0xfffffffffffffffe    	// #-2
  43d0c8:	mov	x17, x23
  43d0cc:	mov	x16, x28
  43d0d0:	add	x8, x0, x8
  43d0d4:	sub	x8, x8, x22
  43d0d8:	ldr	x22, [sp]
  43d0dc:	add	x15, sp, #0x8
  43d0e0:	mov	w14, #0xd800                	// #55296
  43d0e4:	mov	w13, #0x7ffffffe            	// #2147483646
  43d0e8:	str	x0, [x19]
  43d0ec:	sub	x0, x8, #0x100
  43d0f0:	cmp	x20, #0x4
  43d0f4:	b.cs	43cfe0 <feof@plt+0x39740>  // b.hs, b.nlast
  43d0f8:	b	43cfd4 <feof@plt+0x39734>
  43d0fc:	tbz	x28, #63, 43d13c <feof@plt+0x3989c>
  43d100:	add	x8, x15, x28
  43d104:	add	x1, x8, #0x6
  43d108:	neg	x2, x28
  43d10c:	mov	x22, x0
  43d110:	str	x17, [sp]
  43d114:	bl	402fc0 <memcpy@plt>
  43d118:	ldr	x17, [sp]
  43d11c:	mov	x0, x22
  43d120:	adrp	x16, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43d124:	mov	x18, #0xfffffffffffffffe    	// #-2
  43d128:	add	x16, x16, #0x1e8
  43d12c:	add	x15, sp, #0x8
  43d130:	mov	w14, #0xd800                	// #55296
  43d134:	mov	w13, #0x7ffffffe            	// #2147483646
  43d138:	sub	x0, x22, x28
  43d13c:	subs	x20, x20, #0x4
  43d140:	add	x21, x21, #0x4
  43d144:	b.ne	43cfc8 <feof@plt+0x39728>  // b.any
  43d148:	b	43d150 <feof@plt+0x398b0>
  43d14c:	mov	x23, x22
  43d150:	ldr	x8, [x19, #8]
  43d154:	mov	w0, #0x1                   	// #1
  43d158:	sub	x8, x8, x23
  43d15c:	str	x8, [x19, #16]
  43d160:	ldp	x20, x19, [sp, #96]
  43d164:	ldp	x22, x21, [sp, #80]
  43d168:	ldp	x24, x23, [sp, #64]
  43d16c:	ldp	x26, x25, [sp, #48]
  43d170:	ldp	x28, x27, [sp, #32]
  43d174:	ldp	x29, x30, [sp, #16]
  43d178:	add	sp, sp, #0x70
  43d17c:	ret
  43d180:	bl	4035c0 <__errno_location@plt>
  43d184:	mov	x8, x0
  43d188:	mov	w0, wzr
  43d18c:	str	w23, [x8]
  43d190:	b	43d160 <feof@plt+0x398c0>
  43d194:	sub	sp, sp, #0x80
  43d198:	stp	x29, x30, [sp, #32]
  43d19c:	stp	x28, x27, [sp, #48]
  43d1a0:	stp	x26, x25, [sp, #64]
  43d1a4:	stp	x24, x23, [sp, #80]
  43d1a8:	stp	x22, x21, [sp, #96]
  43d1ac:	stp	x20, x19, [sp, #112]
  43d1b0:	ldp	x10, x8, [x3, #8]
  43d1b4:	ldr	x9, [x3]
  43d1b8:	add	x29, sp, #0x20
  43d1bc:	mov	x20, x2
  43d1c0:	cmp	x0, #0x0
  43d1c4:	mov	w13, #0x2                   	// #2
  43d1c8:	mov	w14, #0x2400                	// #9216
  43d1cc:	adrp	x25, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43d1d0:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43d1d4:	mov	x19, x3
  43d1d8:	mov	x21, x1
  43d1dc:	movk	w14, #0xfca0, lsl #16
  43d1e0:	sub	x15, x29, #0x8
  43d1e4:	mov	w16, #0x4                   	// #4
  43d1e8:	mov	x17, #0xfffffffffffffffc    	// #-4
  43d1ec:	mov	x18, #0xfffffffffffffffe    	// #-2
  43d1f0:	add	x25, x25, #0x1ee
  43d1f4:	cset	w26, ne  // ne = any
  43d1f8:	cset	w27, eq  // eq = none
  43d1fc:	cinc	x3, x13, eq  // eq = none
  43d200:	cinc	x1, x13, ne  // ne = any
  43d204:	add	x0, x9, x8
  43d208:	sub	x28, x10, x8
  43d20c:	add	x2, x2, #0x1e8
  43d210:	mov	x24, x28
  43d214:	cmp	x20, #0x2
  43d218:	b.cc	43d2f4 <feof@plt+0x39a54>  // b.lo, b.ul, b.last
  43d21c:	ldrb	w9, [x21, x27]
  43d220:	ldrb	w22, [x21, x26]
  43d224:	and	w8, w9, #0xfc
  43d228:	cmp	w8, #0xd8
  43d22c:	bfi	w22, w9, #8, #8
  43d230:	b.eq	43d254 <feof@plt+0x399b4>  // b.none
  43d234:	cmp	w8, #0xdc
  43d238:	b.eq	43d40c <feof@plt+0x39b6c>  // b.none
  43d23c:	cmp	w22, #0x80
  43d240:	b.cs	43d284 <feof@plt+0x399e4>  // b.hs, b.nlast
  43d244:	sturb	w22, [x29, #-3]
  43d248:	mov	x23, #0xffffffffffffffff    	// #-1
  43d24c:	mov	w8, #0x1                   	// #1
  43d250:	b	43d2e0 <feof@plt+0x39a40>
  43d254:	cmp	x20, #0x4
  43d258:	b.cc	43d414 <feof@plt+0x39b74>  // b.lo, b.ul, b.last
  43d25c:	ldrb	w8, [x21, x3]
  43d260:	and	w9, w8, #0xfc
  43d264:	cmp	w9, #0xdc
  43d268:	b.ne	43d40c <feof@plt+0x39b6c>  // b.any
  43d26c:	ldrb	w9, [x21, x1]
  43d270:	bfi	w9, w8, #8, #8
  43d274:	add	w8, w9, w22, lsl #10
  43d278:	add	w22, w8, w14
  43d27c:	cmp	w22, #0x80
  43d280:	b.cc	43d244 <feof@plt+0x399a4>  // b.lo, b.ul, b.last
  43d284:	mov	x8, xzr
  43d288:	sub	x9, x29, #0x8
  43d28c:	mov	w10, w22
  43d290:	b	43d2a0 <feof@plt+0x39a00>
  43d294:	add	x8, x8, #0x1
  43d298:	sub	x9, x9, #0x1
  43d29c:	mov	w10, w11
  43d2a0:	mov	w11, #0x80                  	// #128
  43d2a4:	bfxil	w11, w10, #0, #6
  43d2a8:	cmp	w10, #0xfbf
  43d2ac:	strb	w11, [x9, #5]
  43d2b0:	lsr	w11, w10, #6
  43d2b4:	b.hi	43d294 <feof@plt+0x399f4>  // b.pmore
  43d2b8:	add	x12, x25, x8
  43d2bc:	ldrb	w12, [x12, #1]
  43d2c0:	tst	w11, w12
  43d2c4:	b.ne	43d294 <feof@plt+0x399f4>  // b.any
  43d2c8:	add	x11, x2, x8
  43d2cc:	ldrb	w11, [x11, #1]
  43d2d0:	sub	x23, x18, x8
  43d2d4:	add	x8, x8, #0x2
  43d2d8:	orr	w10, w11, w10, lsr #6
  43d2dc:	strb	w10, [x9, #4]
  43d2e0:	subs	x28, x24, x8
  43d2e4:	b.cs	43d370 <feof@plt+0x39ad0>  // b.hs, b.nlast
  43d2e8:	mov	w22, #0x7                   	// #7
  43d2ec:	cbz	x20, 43d3d8 <feof@plt+0x39b38>
  43d2f0:	b	43d2fc <feof@plt+0x39a5c>
  43d2f4:	mov	w22, #0x16                  	// #22
  43d2f8:	cbz	x20, 43d3d8 <feof@plt+0x39b38>
  43d2fc:	cmp	w22, #0x7
  43d300:	b.ne	43d418 <feof@plt+0x39b78>  // b.any
  43d304:	ldp	x0, x8, [x19]
  43d308:	mov	x28, x1
  43d30c:	mov	x23, x3
  43d310:	add	x22, x24, #0x100
  43d314:	add	x1, x8, #0x100
  43d318:	str	x1, [x19, #8]
  43d31c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43d320:	ldr	x8, [x19, #8]
  43d324:	mov	w14, #0x2400                	// #9216
  43d328:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43d32c:	str	x0, [x19]
  43d330:	add	x8, x0, x8
  43d334:	sub	x8, x8, x24
  43d338:	sub	x0, x8, #0x100
  43d33c:	mov	x24, x22
  43d340:	mov	w13, #0x2                   	// #2
  43d344:	movk	w14, #0xfca0, lsl #16
  43d348:	sub	x15, x29, #0x8
  43d34c:	mov	w16, #0x4                   	// #4
  43d350:	mov	x17, #0xfffffffffffffffc    	// #-4
  43d354:	mov	x18, #0xfffffffffffffffe    	// #-2
  43d358:	mov	x3, x23
  43d35c:	mov	x1, x28
  43d360:	add	x2, x2, #0x1e8
  43d364:	cmp	x20, #0x2
  43d368:	b.cs	43d21c <feof@plt+0x3997c>  // b.hs, b.nlast
  43d36c:	b	43d2f4 <feof@plt+0x39a54>
  43d370:	tbz	x23, #63, 43d3bc <feof@plt+0x39b1c>
  43d374:	add	x8, x15, x23
  43d378:	stp	x3, x1, [sp, #8]
  43d37c:	add	x1, x8, #0x6
  43d380:	neg	x2, x23
  43d384:	mov	x24, x0
  43d388:	bl	402fc0 <memcpy@plt>
  43d38c:	ldp	x3, x1, [sp, #8]
  43d390:	mov	x0, x24
  43d394:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43d398:	mov	w14, #0x2400                	// #9216
  43d39c:	add	x2, x2, #0x1e8
  43d3a0:	mov	x18, #0xfffffffffffffffe    	// #-2
  43d3a4:	mov	x17, #0xfffffffffffffffc    	// #-4
  43d3a8:	mov	w16, #0x4                   	// #4
  43d3ac:	sub	x15, x29, #0x8
  43d3b0:	movk	w14, #0xfca0, lsl #16
  43d3b4:	mov	w13, #0x2                   	// #2
  43d3b8:	sub	x0, x24, x23
  43d3bc:	cmp	w22, #0x10, lsl #12
  43d3c0:	csel	x8, x13, x16, cc  // cc = lo, ul, last
  43d3c4:	csel	x9, x18, x17, cc  // cc = lo, ul, last
  43d3c8:	adds	x20, x9, x20
  43d3cc:	add	x21, x21, x8
  43d3d0:	b.ne	43d210 <feof@plt+0x39970>  // b.any
  43d3d4:	b	43d3dc <feof@plt+0x39b3c>
  43d3d8:	mov	x28, x24
  43d3dc:	ldr	x8, [x19, #8]
  43d3e0:	mov	w0, #0x1                   	// #1
  43d3e4:	sub	x8, x8, x28
  43d3e8:	str	x8, [x19, #16]
  43d3ec:	ldp	x20, x19, [sp, #112]
  43d3f0:	ldp	x22, x21, [sp, #96]
  43d3f4:	ldp	x24, x23, [sp, #80]
  43d3f8:	ldp	x26, x25, [sp, #64]
  43d3fc:	ldp	x28, x27, [sp, #48]
  43d400:	ldp	x29, x30, [sp, #32]
  43d404:	add	sp, sp, #0x80
  43d408:	ret
  43d40c:	mov	w22, #0x54                  	// #84
  43d410:	b	43d418 <feof@plt+0x39b78>
  43d414:	mov	w22, #0x16                  	// #22
  43d418:	bl	4035c0 <__errno_location@plt>
  43d41c:	mov	x8, x0
  43d420:	mov	w0, wzr
  43d424:	str	w22, [x8]
  43d428:	b	43d3ec <feof@plt+0x39b4c>
  43d42c:	mov	w3, w1
  43d430:	cmp	w1, #0x652
  43d434:	mov	x8, x0
  43d438:	b.gt	43d498 <feof@plt+0x39bf8>
  43d43c:	sub	w9, w3, #0x300
  43d440:	cmp	w9, #0x45
  43d444:	b.hi	43dd10 <feof@plt+0x3a470>  // b.pmore
  43d448:	adrp	x10, 4cb000 <_obstack_memory_used@@Base+0x4f2fc>
  43d44c:	add	x10, x10, #0x7a
  43d450:	adr	x11, 43d464 <feof@plt+0x39bc4>
  43d454:	ldrh	w12, [x10, x9, lsl #1]
  43d458:	add	x11, x11, x12, lsl #2
  43d45c:	mov	w0, #0x1                   	// #1
  43d460:	br	x11
  43d464:	mov	w8, #0x1eff                	// #7935
  43d468:	cmp	w2, w8
  43d46c:	mov	w0, wzr
  43d470:	b.gt	43de28 <feof@plt+0x3a588>
  43d474:	sub	w8, w2, #0x41
  43d478:	cmp	w8, #0x10c
  43d47c:	b.hi	43e040 <feof@plt+0x3a7a0>  // b.pmore
  43d480:	adrp	x9, 4cf000 <_obstack_memory_used@@Base+0x532fc>
  43d484:	add	x9, x9, #0x1d8
  43d488:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43d48c:	ldrh	w11, [x9, x8, lsl #1]
  43d490:	add	x10, x10, x11, lsl #2
  43d494:	br	x10
  43d498:	cmp	w3, #0xcd4
  43d49c:	b.gt	43d4e0 <feof@plt+0x39c40>
  43d4a0:	cmp	w3, #0xb3d
  43d4a4:	b.le	43d550 <feof@plt+0x39cb0>
  43d4a8:	cmp	w3, #0xbbd
  43d4ac:	b.le	43d5b4 <feof@plt+0x39d14>
  43d4b0:	cmp	w3, #0xc55
  43d4b4:	b.gt	43d658 <feof@plt+0x39db8>
  43d4b8:	cmp	w3, #0xbbe
  43d4bc:	b.eq	43dc04 <feof@plt+0x3a364>  // b.none
  43d4c0:	cmp	w3, #0xbd7
  43d4c4:	b.ne	43dd10 <feof@plt+0x3a470>  // b.any
  43d4c8:	cmp	w2, #0xb92
  43d4cc:	mov	w0, wzr
  43d4d0:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43d4d4:	cmp	w2, #0xbc6
  43d4d8:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43d4dc:	b	43e21c <feof@plt+0x3a97c>
  43d4e0:	cmp	w3, #0xdde
  43d4e4:	b.le	43d584 <feof@plt+0x39ce4>
  43d4e8:	mov	w9, #0x3098                	// #12440
  43d4ec:	cmp	w3, w9
  43d4f0:	b.le	43d5d8 <feof@plt+0x39d38>
  43d4f4:	mov	w9, #0x10b9                	// #4281
  43d4f8:	movk	w9, #0x1, lsl #16
  43d4fc:	cmp	w3, w9
  43d500:	b.gt	43d674 <feof@plt+0x39dd4>
  43d504:	mov	w9, #0x3099                	// #12441
  43d508:	cmp	w3, w9
  43d50c:	b.eq	43dc14 <feof@plt+0x3a374>  // b.none
  43d510:	mov	w9, #0x309a                	// #12442
  43d514:	cmp	w3, w9
  43d518:	b.ne	43dd10 <feof@plt+0x3a470>  // b.any
  43d51c:	mov	w8, #0xffffcf91            	// #-12399
  43d520:	add	w8, w2, w8
  43d524:	cmp	w8, #0xc
  43d528:	mov	w0, wzr
  43d52c:	b.ls	43dd74 <feof@plt+0x3a4d4>  // b.plast
  43d530:	mov	w8, #0xffffcf31            	// #-12495
  43d534:	add	w8, w2, w8
  43d538:	cmp	w8, #0xc
  43d53c:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43d540:	mov	w9, #0x1                   	// #1
  43d544:	lsl	w8, w9, w8
  43d548:	mov	w9, #0x1249                	// #4681
  43d54c:	b	43e080 <feof@plt+0x3a7e0>
  43d550:	cmp	w3, #0x93b
  43d554:	b.gt	43d614 <feof@plt+0x39d74>
  43d558:	cmp	w3, #0x653
  43d55c:	b.eq	43dc40 <feof@plt+0x3a3a0>  // b.none
  43d560:	cmp	w3, #0x654
  43d564:	b.eq	43dc4c <feof@plt+0x3a3ac>  // b.none
  43d568:	cmp	w3, #0x655
  43d56c:	b.ne	43dd10 <feof@plt+0x3a470>  // b.any
  43d570:	sub	w8, w2, #0x622
  43d574:	cmp	w8, #0x6
  43d578:	b.cs	43e21c <feof@plt+0x3a97c>  // b.hs, b.nlast
  43d57c:	mov	w9, #0x1c                  	// #28
  43d580:	b	43dd04 <feof@plt+0x3a464>
  43d584:	cmp	w3, #0xd56
  43d588:	b.gt	43d638 <feof@plt+0x39d98>
  43d58c:	cmp	w3, #0xcd5
  43d590:	b.eq	43dc7c <feof@plt+0x3a3dc>  // b.none
  43d594:	cmp	w3, #0xcd6
  43d598:	b.eq	43d668 <feof@plt+0x39dc8>  // b.none
  43d59c:	cmp	w3, #0xd3e
  43d5a0:	b.ne	43dd10 <feof@plt+0x3a470>  // b.any
  43d5a4:	and	w8, w2, #0xfffffffe
  43d5a8:	cmp	w8, #0xd46
  43d5ac:	cset	w0, ne  // ne = any
  43d5b0:	ret
  43d5b4:	cmp	w3, #0xb3e
  43d5b8:	b.eq	43d5cc <feof@plt+0x39d2c>  // b.none
  43d5bc:	cmp	w3, #0xb56
  43d5c0:	b.eq	43d5cc <feof@plt+0x39d2c>  // b.none
  43d5c4:	cmp	w3, #0xb57
  43d5c8:	b.ne	43dd10 <feof@plt+0x3a470>  // b.any
  43d5cc:	cmp	w2, #0xb47
  43d5d0:	cset	w0, ne  // ne = any
  43d5d4:	ret
  43d5d8:	cmp	w3, #0xddf
  43d5dc:	b.eq	43d650 <feof@plt+0x39db0>  // b.none
  43d5e0:	mov	w9, #0x102e                	// #4142
  43d5e4:	cmp	w3, w9
  43d5e8:	b.eq	43dc90 <feof@plt+0x3a3f0>  // b.none
  43d5ec:	mov	w9, #0x1b35                	// #6965
  43d5f0:	cmp	w3, w9
  43d5f4:	b.ne	43dd10 <feof@plt+0x3a470>  // b.any
  43d5f8:	mov	w8, #0xffffe4fb            	// #-6917
  43d5fc:	add	w8, w2, w8
  43d600:	cmp	w8, #0x3e
  43d604:	b.cs	43e21c <feof@plt+0x3a97c>  // b.hs, b.nlast
  43d608:	mov	x9, #0xffffffffffffeeaa    	// #-4438
  43d60c:	movk	x9, #0x195f, lsl #48
  43d610:	b	43d924 <feof@plt+0x3a084>
  43d614:	cmp	w3, #0x93c
  43d618:	b.eq	43dca0 <feof@plt+0x3a400>  // b.none
  43d61c:	cmp	w3, #0x9be
  43d620:	b.eq	43d62c <feof@plt+0x39d8c>  // b.none
  43d624:	cmp	w3, #0x9d7
  43d628:	b.ne	43dd10 <feof@plt+0x3a470>  // b.any
  43d62c:	cmp	w2, #0x9c7
  43d630:	cset	w0, ne  // ne = any
  43d634:	ret
  43d638:	cmp	w3, #0xd57
  43d63c:	b.eq	43dcb8 <feof@plt+0x3a418>  // b.none
  43d640:	cmp	w3, #0xdca
  43d644:	b.eq	43dcc4 <feof@plt+0x3a424>  // b.none
  43d648:	cmp	w3, #0xdcf
  43d64c:	b.ne	43dd10 <feof@plt+0x3a470>  // b.any
  43d650:	sub	w8, w2, #0xdd9
  43d654:	b	43d6a0 <feof@plt+0x39e00>
  43d658:	cmp	w3, #0xc56
  43d65c:	b.eq	43dcdc <feof@plt+0x3a43c>  // b.none
  43d660:	cmp	w3, #0xcc2
  43d664:	b.ne	43dd10 <feof@plt+0x3a470>  // b.any
  43d668:	cmp	w2, #0xcc6
  43d66c:	cset	w0, ne  // ne = any
  43d670:	ret
  43d674:	mov	w9, #0x10ba                	// #4282
  43d678:	movk	w9, #0x1, lsl #16
  43d67c:	cmp	w3, w9
  43d680:	b.eq	43dce8 <feof@plt+0x3a448>  // b.none
  43d684:	mov	w9, #0x1127                	// #4391
  43d688:	movk	w9, #0x1, lsl #16
  43d68c:	cmp	w3, w9
  43d690:	b.ne	43dd10 <feof@plt+0x3a470>  // b.any
  43d694:	mov	w8, #0xeecf                	// #61135
  43d698:	movk	w8, #0xfffe, lsl #16
  43d69c:	add	w8, w2, w8
  43d6a0:	cmp	w8, #0x1
  43d6a4:	cset	w0, hi  // hi = pmore
  43d6a8:	ret
  43d6ac:	sub	w8, w2, #0x41
  43d6b0:	cmp	w8, #0x16f
  43d6b4:	mov	w0, wzr
  43d6b8:	b.ls	43dda8 <feof@plt+0x3a508>  // b.plast
  43d6bc:	mov	w8, #0xffffe100            	// #-7936
  43d6c0:	add	w8, w2, w8
  43d6c4:	cmp	w8, #0xfe
  43d6c8:	b.hi	43e10c <feof@plt+0x3a86c>  // b.pmore
  43d6cc:	adrp	x9, 4ce000 <_obstack_memory_used@@Base+0x522fc>
  43d6d0:	add	x9, x9, #0xfda
  43d6d4:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43d6d8:	ldrh	w11, [x9, x8, lsl #1]
  43d6dc:	add	x10, x10, x11, lsl #2
  43d6e0:	br	x10
  43d6e4:	sub	w8, w2, #0x41
  43d6e8:	cmp	w8, #0x39
  43d6ec:	mov	w0, wzr
  43d6f0:	b.hi	43d714 <feof@plt+0x39e74>  // b.pmore
  43d6f4:	mov	w9, #0x1                   	// #1
  43d6f8:	lsl	x8, x9, x8
  43d6fc:	mov	x9, #0x43d5                	// #17365
  43d700:	movk	x9, #0x354, lsl #16
  43d704:	movk	x9, #0x43d5, lsl #32
  43d708:	movk	x9, #0x354, lsl #48
  43d70c:	tst	x8, x9
  43d710:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43d714:	mov	w8, #0xffffe160            	// #-7840
  43d718:	add	w8, w2, w8
  43d71c:	cmp	w8, #0x2d
  43d720:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43d724:	mov	w9, #0x1                   	// #1
  43d728:	lsl	x8, x9, x8
  43d72c:	mov	x9, #0x3                   	// #3
  43d730:	movk	x9, #0x300, lsl #16
  43d734:	movk	x9, #0x3000, lsl #32
  43d738:	b	43d994 <feof@plt+0x3a0f4>
  43d73c:	sub	w8, w2, #0x41
  43d740:	cmp	w8, #0xc2
  43d744:	mov	w0, wzr
  43d748:	b.hi	43e064 <feof@plt+0x3a7c4>  // b.pmore
  43d74c:	adrp	x9, 4ce000 <_obstack_memory_used@@Base+0x522fc>
  43d750:	add	x9, x9, #0xa20
  43d754:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43d758:	ldrh	w11, [x9, x8, lsl #1]
  43d75c:	add	x10, x10, x11, lsl #2
  43d760:	br	x10
  43d764:	cmp	w2, #0x390
  43d768:	mov	w0, wzr
  43d76c:	b.gt	43ddc0 <feof@plt+0x3a520>
  43d770:	sub	w8, w2, #0x41
  43d774:	cmp	w8, #0xbb
  43d778:	b.hi	43e194 <feof@plt+0x3a8f4>  // b.pmore
  43d77c:	adrp	x9, 4ce000 <_obstack_memory_used@@Base+0x522fc>
  43d780:	add	x9, x9, #0x8a8
  43d784:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43d788:	ldrh	w11, [x9, x8, lsl #1]
  43d78c:	add	x10, x10, x11, lsl #2
  43d790:	br	x10
  43d794:	cmp	w2, #0x40f
  43d798:	mov	w0, wzr
  43d79c:	b.le	43deb8 <feof@plt+0x3a618>
  43d7a0:	mov	w8, #0x1e9f                	// #7839
  43d7a4:	cmp	w2, w8
  43d7a8:	b.gt	43e0e0 <feof@plt+0x3a840>
  43d7ac:	sub	w8, w2, #0x410
  43d7b0:	cmp	w8, #0x33
  43d7b4:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43d7b8:	mov	w9, #0x1                   	// #1
  43d7bc:	lsl	x8, x9, x8
  43d7c0:	mov	x9, #0x8000800080008       	// #2251834173947912
  43d7c4:	movk	x9, #0x161
  43d7c8:	movk	x9, #0x161, lsl #32
  43d7cc:	b	43d994 <feof@plt+0x3a0f4>
  43d7d0:	sub	w8, w2, #0x41
  43d7d4:	cmp	w8, #0x13e
  43d7d8:	mov	w0, wzr
  43d7dc:	b.hi	43e204 <feof@plt+0x3a964>  // b.pmore
  43d7e0:	adrp	x9, 4ce000 <_obstack_memory_used@@Base+0x522fc>
  43d7e4:	add	x9, x9, #0x62a
  43d7e8:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43d7ec:	ldrh	w11, [x9, x8, lsl #1]
  43d7f0:	add	x10, x10, x11, lsl #2
  43d7f4:	br	x10
  43d7f8:	cmp	w2, #0x398
  43d7fc:	mov	w0, wzr
  43d800:	b.le	43de94 <feof@plt+0x3a5f4>
  43d804:	sub	w8, w2, #0x399
  43d808:	cmp	w8, #0xbd
  43d80c:	b.hi	43e1bc <feof@plt+0x3a91c>  // b.pmore
  43d810:	adrp	x9, 4ce000 <_obstack_memory_used@@Base+0x522fc>
  43d814:	add	x9, x9, #0x4ae
  43d818:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43d81c:	ldrh	w11, [x9, x8, lsl #1]
  43d820:	add	x10, x10, x11, lsl #2
  43d824:	br	x10
  43d828:	sub	w8, w2, #0x41
  43d82c:	cmp	w8, #0xc2
  43d830:	mov	w0, wzr
  43d834:	b.hi	43e064 <feof@plt+0x3a7c4>  // b.pmore
  43d838:	adrp	x9, 4ce000 <_obstack_memory_used@@Base+0x522fc>
  43d83c:	add	x9, x9, #0x1be
  43d840:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43d844:	ldrh	w11, [x9, x8, lsl #1]
  43d848:	add	x10, x10, x11, lsl #2
  43d84c:	br	x10
  43d850:	sub	w8, w2, #0x41
  43d854:	cmp	w8, #0x39
  43d858:	b.cs	43e21c <feof@plt+0x3a97c>  // b.hs, b.nlast
  43d85c:	mov	x9, #0xfffefffefffefffe    	// #-281479271743490
  43d860:	movk	x9, #0xffef, lsl #16
  43d864:	movk	x9, #0xaf, lsl #48
  43d868:	b	43d924 <feof@plt+0x3a084>
  43d86c:	sub	w8, w2, #0x4f
  43d870:	cmp	w8, #0x26
  43d874:	mov	w0, wzr
  43d878:	b.hi	43d894 <feof@plt+0x39ff4>  // b.pmore
  43d87c:	mov	w9, #0x1                   	// #1
  43d880:	lsl	x8, x9, x8
  43d884:	mov	x9, #0x41                  	// #65
  43d888:	movk	x9, #0x41, lsl #32
  43d88c:	tst	x8, x9
  43d890:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43d894:	cmp	w2, #0x423
  43d898:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43d89c:	cmp	w2, #0x443
  43d8a0:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43d8a4:	b	43e21c <feof@plt+0x3a97c>
  43d8a8:	sub	w8, w2, #0x41
  43d8ac:	cmp	w8, #0xbb
  43d8b0:	mov	w0, wzr
  43d8b4:	b.hi	43e1dc <feof@plt+0x3a93c>  // b.pmore
  43d8b8:	adrp	x9, 4ce000 <_obstack_memory_used@@Base+0x522fc>
  43d8bc:	add	x9, x9, #0x46
  43d8c0:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43d8c4:	ldrh	w11, [x9, x8, lsl #1]
  43d8c8:	add	x10, x10, x11, lsl #2
  43d8cc:	br	x10
  43d8d0:	sub	w8, w2, #0x41
  43d8d4:	cmp	w8, #0x34
  43d8d8:	mov	w0, wzr
  43d8dc:	b.hi	43d900 <feof@plt+0x3a060>  // b.pmore
  43d8e0:	mov	w9, #0x1                   	// #1
  43d8e4:	lsl	x8, x9, x8
  43d8e8:	mov	x9, #0x4111                	// #16657
  43d8ec:	movk	x9, #0x12, lsl #16
  43d8f0:	movk	x9, #0x4111, lsl #32
  43d8f4:	movk	x9, #0x12, lsl #48
  43d8f8:	tst	x8, x9
  43d8fc:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43d900:	sub	w8, w2, #0x474
  43d904:	b	43e214 <feof@plt+0x3a974>
  43d908:	sub	w8, w2, #0x41
  43d90c:	cmp	w8, #0x35
  43d910:	b.cs	43e21c <feof@plt+0x3a97c>  // b.hs, b.nlast
  43d914:	mov	x9, #0xbeee                	// #48878
  43d918:	movk	x9, #0xffed, lsl #16
  43d91c:	movk	x9, #0xbeee, lsl #32
  43d920:	movk	x9, #0xd, lsl #48
  43d924:	lsr	x8, x9, x8
  43d928:	and	w0, w8, #0x1
  43d92c:	ret
  43d930:	mov	w8, #0x1fb2                	// #8114
  43d934:	cmp	w2, w8
  43d938:	mov	w0, wzr
  43d93c:	b.gt	43dd38 <feof@plt+0x3a498>
  43d940:	sub	w8, w2, #0x391
  43d944:	cmp	w8, #0x38
  43d948:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43d94c:	mov	w9, #0x1                   	// #1
  43d950:	lsl	x8, x9, x8
  43d954:	mov	x9, #0x4151                	// #16721
  43d958:	movk	x9, #0x100, lsl #16
  43d95c:	b	43d98c <feof@plt+0x3a0ec>
  43d960:	mov	w8, #0x1fb2                	// #8114
  43d964:	cmp	w2, w8
  43d968:	mov	w0, wzr
  43d96c:	b.gt	43dd38 <feof@plt+0x3a498>
  43d970:	sub	w8, w2, #0x391
  43d974:	cmp	w8, #0x38
  43d978:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43d97c:	mov	w9, #0x1                   	// #1
  43d980:	lsl	x8, x9, x8
  43d984:	mov	x9, #0x4151                	// #16721
  43d988:	movk	x9, #0x111, lsl #16
  43d98c:	movk	x9, #0x4151, lsl #32
  43d990:	movk	x9, #0x111, lsl #48
  43d994:	tst	x8, x9
  43d998:	b.eq	43e21c <feof@plt+0x3a97c>  // b.none
  43d99c:	ret
  43d9a0:	sub	w8, w2, #0x4f
  43d9a4:	cmp	w8, #0x1e2
  43d9a8:	mov	w0, wzr
  43d9ac:	b.hi	43df7c <feof@plt+0x3a6dc>  // b.pmore
  43d9b0:	adrp	x9, 4cd000 <_obstack_memory_used@@Base+0x512fc>
  43d9b4:	add	x9, x9, #0xb48
  43d9b8:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43d9bc:	ldrh	w11, [x9, x8, lsl #1]
  43d9c0:	add	x10, x10, x11, lsl #2
  43d9c4:	br	x10
  43d9c8:	sub	w8, w2, #0x41
  43d9cc:	cmp	w8, #0x1f2
  43d9d0:	mov	w0, wzr
  43d9d4:	b.hi	43df54 <feof@plt+0x3a6b4>  // b.pmore
  43d9d8:	adrp	x9, 4cd000 <_obstack_memory_used@@Base+0x512fc>
  43d9dc:	add	x9, x9, #0x572
  43d9e0:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43d9e4:	ldrh	w11, [x9, x8, lsl #1]
  43d9e8:	add	x10, x10, x11, lsl #2
  43d9ec:	br	x10
  43d9f0:	mov	w8, #0x1e77                	// #7799
  43d9f4:	cmp	w2, w8
  43d9f8:	mov	w0, wzr
  43d9fc:	b.gt	43e130 <feof@plt+0x3a890>
  43da00:	sub	w8, w2, #0xd9
  43da04:	cmp	w8, #0x13e
  43da08:	b.hi	43e1f0 <feof@plt+0x3a950>  // b.pmore
  43da0c:	adrp	x9, 4cd000 <_obstack_memory_used@@Base+0x512fc>
  43da10:	add	x9, x9, #0x2f4
  43da14:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43da18:	ldrh	w11, [x9, x8, lsl #1]
  43da1c:	add	x10, x10, x11, lsl #2
  43da20:	br	x10
  43da24:	mov	w8, #0x1ea1                	// #7841
  43da28:	cmp	w2, w8
  43da2c:	mov	w0, wzr
  43da30:	b.gt	43df30 <feof@plt+0x3a690>
  43da34:	sub	w8, w2, #0x61
  43da38:	cmp	w8, #0xa2
  43da3c:	b.hi	43dfa4 <feof@plt+0x3a704>  // b.pmore
  43da40:	adrp	x9, 4cd000 <_obstack_memory_used@@Base+0x512fc>
  43da44:	add	x9, x9, #0xf8
  43da48:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43da4c:	ldrh	w11, [x9, x8, lsl #1]
  43da50:	add	x10, x10, x11, lsl #2
  43da54:	br	x10
  43da58:	mov	w8, #0xffffe1a0            	// #-7776
  43da5c:	add	w8, w2, w8
  43da60:	cmp	w8, #0x37
  43da64:	mov	w0, wzr
  43da68:	b.ls	43de78 <feof@plt+0x3a5d8>  // b.plast
  43da6c:	sub	w8, w2, #0x15a
  43da70:	cmp	w8, #0xb
  43da74:	b.hi	43da8c <feof@plt+0x3a1ec>  // b.pmore
  43da78:	mov	w9, #0x1                   	// #1
  43da7c:	lsl	w8, w9, w8
  43da80:	mov	w9, #0xccf                 	// #3279
  43da84:	tst	w8, w9
  43da88:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43da8c:	sub	w8, w2, #0x53
  43da90:	cmp	w8, #0x21
  43da94:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43da98:	mov	w9, #0x1                   	// #1
  43da9c:	lsl	x8, x9, x8
  43daa0:	tst	x8, #0x300000003
  43daa4:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43daa8:	b	43e21c <feof@plt+0x3a97c>
  43daac:	sub	w8, w2, #0x43
  43dab0:	cmp	w8, #0x1dc
  43dab4:	mov	w0, wzr
  43dab8:	b.hi	43de00 <feof@plt+0x3a560>  // b.pmore
  43dabc:	adrp	x9, 4cc000 <_obstack_memory_used@@Base+0x502fc>
  43dac0:	add	x9, x9, #0xbc2
  43dac4:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43dac8:	ldrh	w11, [x9, x8, lsl #1]
  43dacc:	add	x10, x10, x11, lsl #2
  43dad0:	br	x10
  43dad4:	sub	w8, w2, #0x41
  43dad8:	cmp	w8, #0x1f0
  43dadc:	mov	w0, wzr
  43dae0:	b.hi	43de50 <feof@plt+0x3a5b0>  // b.pmore
  43dae4:	adrp	x9, 4cc000 <_obstack_memory_used@@Base+0x502fc>
  43dae8:	add	x9, x9, #0x5fc
  43daec:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43daf0:	ldrh	w11, [x9, x8, lsl #1]
  43daf4:	add	x10, x10, x11, lsl #2
  43daf8:	br	x10
  43dafc:	sub	w8, w2, #0x44
  43db00:	cmp	w8, #0x1d3
  43db04:	mov	w0, wzr
  43db08:	b.hi	43dfc8 <feof@plt+0x3a728>  // b.pmore
  43db0c:	adrp	x9, 4cc000 <_obstack_memory_used@@Base+0x502fc>
  43db10:	add	x9, x9, #0x98
  43db14:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43db18:	ldrh	w11, [x9, x8, lsl #1]
  43db1c:	add	x10, x10, x11, lsl #2
  43db20:	br	x10
  43db24:	cmp	w2, #0x21d
  43db28:	mov	w0, wzr
  43db2c:	b.le	43df10 <feof@plt+0x3a670>
  43db30:	mov	w8, #0xffffe1de            	// #-7714
  43db34:	add	w8, w2, w8
  43db38:	cmp	w8, #0x5
  43db3c:	b.hi	43db54 <feof@plt+0x3a2b4>  // b.pmore
  43db40:	mov	w9, #0x1                   	// #1
  43db44:	lsl	w8, w9, w8
  43db48:	mov	w9, #0x33                  	// #51
  43db4c:	tst	w8, w9
  43db50:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43db54:	sub	w8, w2, #0x21e
  43db58:	b	43e214 <feof@plt+0x3a974>
  43db5c:	sub	w8, w2, #0x45
  43db60:	cmp	w8, #0x1d2
  43db64:	mov	w0, wzr
  43db68:	b.hi	43e018 <feof@plt+0x3a778>  // b.pmore
  43db6c:	adrp	x9, 4cb000 <_obstack_memory_used@@Base+0x4f2fc>
  43db70:	add	x9, x9, #0xb4a
  43db74:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43db78:	ldrh	w11, [x9, x8, lsl #1]
  43db7c:	add	x10, x10, x11, lsl #2
  43db80:	br	x10
  43db84:	sub	w8, w2, #0x42
  43db88:	cmp	w8, #0x1dd
  43db8c:	mov	w0, wzr
  43db90:	b.hi	43dff0 <feof@plt+0x3a750>  // b.pmore
  43db94:	adrp	x9, 4cb000 <_obstack_memory_used@@Base+0x4f2fc>
  43db98:	add	x9, x9, #0x662
  43db9c:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43dba0:	ldrh	w11, [x9, x8, lsl #1]
  43dba4:	add	x10, x10, x11, lsl #2
  43dba8:	br	x10
  43dbac:	mov	w8, #0xffffe100            	// #-7936
  43dbb0:	add	w8, w2, w8
  43dbb4:	cmp	w8, #0xfe
  43dbb8:	mov	w0, wzr
  43dbbc:	b.hi	43e08c <feof@plt+0x3a7ec>  // b.pmore
  43dbc0:	adrp	x9, 4cb000 <_obstack_memory_used@@Base+0x4f2fc>
  43dbc4:	add	x9, x9, #0x464
  43dbc8:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43dbcc:	ldrh	w11, [x9, x8, lsl #1]
  43dbd0:	add	x10, x10, x11, lsl #2
  43dbd4:	br	x10
  43dbd8:	mov	w8, #0xffffe100            	// #-7936
  43dbdc:	add	w8, w2, w8
  43dbe0:	cmp	w8, #0xf6
  43dbe4:	mov	w0, wzr
  43dbe8:	b.hi	43e14c <feof@plt+0x3a8ac>  // b.pmore
  43dbec:	adrp	x9, 4cb000 <_obstack_memory_used@@Base+0x4f2fc>
  43dbf0:	add	x9, x9, #0x276
  43dbf4:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43dbf8:	ldrh	w11, [x9, x8, lsl #1]
  43dbfc:	add	x10, x10, x11, lsl #2
  43dc00:	br	x10
  43dc04:	and	w8, w2, #0xfffffffe
  43dc08:	cmp	w8, #0xbc6
  43dc0c:	cset	w0, ne  // ne = any
  43dc10:	ret
  43dc14:	mov	w8, #0xffffcfba            	// #-12358
  43dc18:	add	w8, w2, w8
  43dc1c:	cmp	w8, #0xb7
  43dc20:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43dc24:	adrp	x9, 4cb000 <_obstack_memory_used@@Base+0x4f2fc>
  43dc28:	add	x9, x9, #0x106
  43dc2c:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43dc30:	ldrh	w11, [x9, x8, lsl #1]
  43dc34:	add	x10, x10, x11, lsl #2
  43dc38:	mov	w0, wzr
  43dc3c:	br	x10
  43dc40:	cmp	w2, #0x627
  43dc44:	cset	w0, ne  // ne = any
  43dc48:	ret
  43dc4c:	sub	w8, w2, #0x627
  43dc50:	cmp	w8, #0x23
  43dc54:	mov	w0, wzr
  43dc58:	b.ls	43dd8c <feof@plt+0x3a4ec>  // b.plast
  43dc5c:	sub	w8, w2, #0x6c1
  43dc60:	cmp	w8, #0x14
  43dc64:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43dc68:	mov	w9, #0x1                   	// #1
  43dc6c:	lsl	w8, w9, w8
  43dc70:	mov	w9, #0x1                   	// #1
  43dc74:	movk	w9, #0x12, lsl #16
  43dc78:	b	43e080 <feof@plt+0x3a7e0>
  43dc7c:	sub	w8, w2, #0xcbf
  43dc80:	cmp	w8, #0xc
  43dc84:	b.cs	43e21c <feof@plt+0x3a97c>  // b.hs, b.nlast
  43dc88:	mov	w9, #0x77e                 	// #1918
  43dc8c:	b	43dd04 <feof@plt+0x3a464>
  43dc90:	mov	w8, #0x1025                	// #4133
  43dc94:	cmp	w2, w8
  43dc98:	cset	w0, ne  // ne = any
  43dc9c:	ret
  43dca0:	sub	w8, w2, #0x915
  43dca4:	cmp	w8, #0x1f
  43dca8:	b.cs	43e21c <feof@plt+0x3a97c>  // b.hs, b.nlast
  43dcac:	mov	w9, #0xcf78                	// #53112
  43dcb0:	movk	w9, #0x33b7, lsl #16
  43dcb4:	b	43dd04 <feof@plt+0x3a464>
  43dcb8:	cmp	w2, #0xd46
  43dcbc:	cset	w0, ne  // ne = any
  43dcc0:	ret
  43dcc4:	cmp	w2, #0xdd9
  43dcc8:	mov	w0, wzr
  43dccc:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43dcd0:	cmp	w2, #0xddc
  43dcd4:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43dcd8:	b	43e21c <feof@plt+0x3a97c>
  43dcdc:	cmp	w2, #0xc46
  43dce0:	cset	w0, ne  // ne = any
  43dce4:	ret
  43dce8:	mov	w8, #0xeecf                	// #61135
  43dcec:	movk	w8, #0xfffe, lsl #16
  43dcf0:	add	w8, w2, w8
  43dcf4:	add	w8, w8, #0x98
  43dcf8:	cmp	w8, #0xd
  43dcfc:	b.cs	43e21c <feof@plt+0x3a97c>  // b.hs, b.nlast
  43dd00:	mov	w9, #0xffa                 	// #4090
  43dd04:	lsr	w8, w9, w8
  43dd08:	and	w0, w8, #0x1
  43dd0c:	ret
  43dd10:	stp	x29, x30, [sp, #-16]!
  43dd14:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43dd18:	add	x2, x2, #0x5be
  43dd1c:	mov	w1, #0x4                   	// #4
  43dd20:	mov	x0, x8
  43dd24:	mov	x29, sp
  43dd28:	bl	4424f8 <feof@plt+0x3ec58>
  43dd2c:	mov	w0, #0x1                   	// #1
  43dd30:	ldp	x29, x30, [sp], #16
  43dd34:	ret
  43dd38:	mov	w8, #0xffffe04d            	// #-8115
  43dd3c:	add	w8, w2, w8
  43dd40:	cmp	w8, #0x19
  43dd44:	b.hi	43dd60 <feof@plt+0x3a4c0>  // b.pmore
  43dd48:	mov	w9, #0x1                   	// #1
  43dd4c:	lsl	w8, w9, w8
  43dd50:	mov	w9, #0x201                 	// #513
  43dd54:	movk	w9, #0x201, lsl #16
  43dd58:	tst	w8, w9
  43dd5c:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43dd60:	mov	w8, #0x1ff3                	// #8179
  43dd64:	cmp	w2, w8
  43dd68:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43dd6c:	mov	w8, #0x1ffc                	// #8188
  43dd70:	b	43e100 <feof@plt+0x3a860>
  43dd74:	mov	w9, #0x1                   	// #1
  43dd78:	lsl	w8, w9, w8
  43dd7c:	mov	w9, #0x1249                	// #4681
  43dd80:	tst	w8, w9
  43dd84:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43dd88:	b	43d530 <feof@plt+0x39c90>
  43dd8c:	mov	w9, #0x1                   	// #1
  43dd90:	lsl	x8, x9, x8
  43dd94:	mov	x9, #0x1                   	// #1
  43dd98:	movk	x9, #0xa, lsl #32
  43dd9c:	tst	x8, x9
  43dda0:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43dda4:	b	43dc5c <feof@plt+0x3a3bc>
  43dda8:	adrp	x9, 4ce000 <_obstack_memory_used@@Base+0x522fc>
  43ddac:	add	x9, x9, #0xba6
  43ddb0:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43ddb4:	ldrh	w11, [x9, x8, lsl #1]
  43ddb8:	add	x10, x10, x11, lsl #2
  43ddbc:	br	x10
  43ddc0:	cmp	w2, #0x417
  43ddc4:	b.le	43e0bc <feof@plt+0x3a81c>
  43ddc8:	mov	w8, #0x1e35                	// #7733
  43ddcc:	cmp	w2, w8
  43ddd0:	b.le	43e174 <feof@plt+0x3a8d4>
  43ddd4:	mov	w8, #0xffffe1ca            	// #-7734
  43ddd8:	add	w8, w2, w8
  43dddc:	cmp	w8, #0x25
  43dde0:	b.hi	43e0f0 <feof@plt+0x3a850>  // b.pmore
  43dde4:	mov	w9, #0x1                   	// #1
  43dde8:	lsl	x8, x9, x8
  43ddec:	mov	x9, #0x3                   	// #3
  43ddf0:	movk	x9, #0x30, lsl #32
  43ddf4:	tst	x8, x9
  43ddf8:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43ddfc:	b	43e0f0 <feof@plt+0x3a850>
  43de00:	mov	w8, #0xffffe1f6            	// #-7690
  43de04:	add	w8, w2, w8
  43de08:	cmp	w8, #0xbd
  43de0c:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43de10:	adrp	x9, 4cc000 <_obstack_memory_used@@Base+0x502fc>
  43de14:	add	x9, x9, #0xf7c
  43de18:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43de1c:	ldrh	w11, [x9, x8, lsl #1]
  43de20:	add	x10, x10, x11, lsl #2
  43de24:	br	x10
  43de28:	mov	w8, #0xffffe100            	// #-7936
  43de2c:	add	w8, w2, w8
  43de30:	cmp	w8, #0xfe
  43de34:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43de38:	adrp	x9, 4cf000 <_obstack_memory_used@@Base+0x532fc>
  43de3c:	add	x9, x9, #0x542
  43de40:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43de44:	ldrh	w11, [x9, x8, lsl #1]
  43de48:	add	x10, x10, x11, lsl #2
  43de4c:	br	x10
  43de50:	mov	w8, #0xffffe200            	// #-7680
  43de54:	add	w8, w2, w8
  43de58:	cmp	w8, #0xf1
  43de5c:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43de60:	adrp	x9, 4cc000 <_obstack_memory_used@@Base+0x502fc>
  43de64:	add	x9, x9, #0x9de
  43de68:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43de6c:	ldrh	w11, [x9, x8, lsl #1]
  43de70:	add	x10, x10, x11, lsl #2
  43de74:	br	x10
  43de78:	mov	w9, #0x1                   	// #1
  43de7c:	lsl	x8, x9, x8
  43de80:	mov	x9, #0xcf3                 	// #3315
  43de84:	movk	x9, #0x80, lsl #48
  43de88:	tst	x8, x9
  43de8c:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43de90:	b	43da6c <feof@plt+0x3a1cc>
  43de94:	sub	w8, w2, #0x41
  43de98:	cmp	w8, #0xb4
  43de9c:	b.hi	43e210 <feof@plt+0x3a970>  // b.pmore
  43dea0:	adrp	x9, 4ce000 <_obstack_memory_used@@Base+0x522fc>
  43dea4:	add	x9, x9, #0x344
  43dea8:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43deac:	ldrh	w11, [x9, x8, lsl #1]
  43deb0:	add	x10, x10, x11, lsl #2
  43deb4:	br	x10
  43deb8:	sub	w8, w2, #0x41
  43debc:	cmp	w8, #0x34
  43dec0:	b.hi	43dee0 <feof@plt+0x3a640>  // b.pmore
  43dec4:	mov	w9, #0x1                   	// #1
  43dec8:	lsl	x8, x9, x8
  43decc:	mov	x9, #0x10001000100010      	// #4503668347895824
  43ded0:	movk	x9, #0x4151
  43ded4:	movk	x9, #0x4151, lsl #32
  43ded8:	tst	x8, x9
  43dedc:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43dee0:	sub	w8, w2, #0x391
  43dee4:	cmp	w8, #0x34
  43dee8:	b.hi	43df08 <feof@plt+0x3a668>  // b.pmore
  43deec:	mov	w9, #0x1                   	// #1
  43def0:	lsl	x8, x9, x8
  43def4:	mov	x9, #0x10001000100010      	// #4503668347895824
  43def8:	movk	x9, #0x101
  43defc:	movk	x9, #0x101, lsl #32
  43df00:	tst	x8, x9
  43df04:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43df08:	sub	w8, w2, #0x228
  43df0c:	b	43e214 <feof@plt+0x3a974>
  43df10:	sub	w8, w2, #0x124
  43df14:	cmp	w8, #0x2
  43df18:	b.cc	43d99c <feof@plt+0x3a0fc>  // b.lo, b.ul, b.last
  43df1c:	cmp	w2, #0x48
  43df20:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43df24:	cmp	w2, #0x68
  43df28:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43df2c:	b	43e21c <feof@plt+0x3a97c>
  43df30:	mov	w8, #0xffffe15e            	// #-7842
  43df34:	add	w8, w2, w8
  43df38:	cmp	w8, #0x13
  43df3c:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43df40:	mov	w9, #0x1                   	// #1
  43df44:	lsl	w8, w9, w8
  43df48:	mov	w9, #0xf3ff                	// #62463
  43df4c:	movk	w9, #0xf, lsl #16
  43df50:	b	43e080 <feof@plt+0x3a7e0>
  43df54:	mov	w8, #0xffffe1fe            	// #-7682
  43df58:	add	w8, w2, w8
  43df5c:	cmp	w8, #0xf7
  43df60:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43df64:	adrp	x9, 4cd000 <_obstack_memory_used@@Base+0x512fc>
  43df68:	add	x9, x9, #0x958
  43df6c:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43df70:	ldrh	w11, [x9, x8, lsl #1]
  43df74:	add	x10, x10, x11, lsl #2
  43df78:	br	x10
  43df7c:	mov	w8, #0xffffe1b4            	// #-7756
  43df80:	add	w8, w2, w8
  43df84:	cmp	w8, #0x9b
  43df88:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43df8c:	adrp	x9, 4cd000 <_obstack_memory_used@@Base+0x512fc>
  43df90:	add	x9, x9, #0xf0e
  43df94:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43df98:	ldrh	w11, [x9, x8, lsl #1]
  43df9c:	add	x10, x10, x11, lsl #2
  43dfa0:	br	x10
  43dfa4:	sub	w8, w2, #0x1cd
  43dfa8:	cmp	w8, #0x5a
  43dfac:	b.hi	43e224 <feof@plt+0x3a984>  // b.pmore
  43dfb0:	adrp	x9, 4cd000 <_obstack_memory_used@@Base+0x512fc>
  43dfb4:	add	x9, x9, #0x23e
  43dfb8:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43dfbc:	ldrh	w11, [x9, x8, lsl #1]
  43dfc0:	add	x10, x10, x11, lsl #2
  43dfc4:	br	x10
  43dfc8:	mov	w8, #0xffffe1f6            	// #-7690
  43dfcc:	add	w8, w2, w8
  43dfd0:	cmp	w8, #0xdd
  43dfd4:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43dfd8:	adrp	x9, 4cc000 <_obstack_memory_used@@Base+0x502fc>
  43dfdc:	add	x9, x9, #0x440
  43dfe0:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43dfe4:	ldrh	w11, [x9, x8, lsl #1]
  43dfe8:	add	x10, x10, x11, lsl #2
  43dfec:	br	x10
  43dff0:	mov	w8, #0xffffe1fe            	// #-7682
  43dff4:	add	w8, w2, w8
  43dff8:	cmp	w8, #0x95
  43dffc:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43e000:	adrp	x9, 4cb000 <_obstack_memory_used@@Base+0x4f2fc>
  43e004:	add	x9, x9, #0xa1e
  43e008:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43e00c:	ldrh	w11, [x9, x8, lsl #1]
  43e010:	add	x10, x10, x11, lsl #2
  43e014:	br	x10
  43e018:	mov	w8, #0xffffe1ec            	// #-7700
  43e01c:	add	w8, w2, w8
  43e020:	cmp	w8, #0xd3
  43e024:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43e028:	adrp	x9, 4cb000 <_obstack_memory_used@@Base+0x4f2fc>
  43e02c:	add	x9, x9, #0xef0
  43e030:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43e034:	ldrh	w11, [x9, x8, lsl #1]
  43e038:	add	x10, x10, x11, lsl #2
  43e03c:	br	x10
  43e040:	sub	w8, w2, #0x391
  43e044:	cmp	w8, #0xa7
  43e048:	b.hi	43e064 <feof@plt+0x3a7c4>  // b.pmore
  43e04c:	adrp	x9, 4cf000 <_obstack_memory_used@@Base+0x532fc>
  43e050:	add	x9, x9, #0x3f2
  43e054:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43e058:	ldrh	w11, [x9, x8, lsl #1]
  43e05c:	add	x10, x10, x11, lsl #2
  43e060:	br	x10
  43e064:	sub	w8, w2, #0x1a0
  43e068:	cmp	w8, #0x10
  43e06c:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43e070:	mov	w9, #0x1                   	// #1
  43e074:	lsl	w8, w9, w8
  43e078:	mov	w9, #0x8003                	// #32771
  43e07c:	movk	w9, #0x1, lsl #16
  43e080:	tst	w8, w9
  43e084:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43e088:	b	43e21c <feof@plt+0x3a97c>
  43e08c:	sub	w8, w2, #0x3b1
  43e090:	cmp	w8, #0x1a
  43e094:	b.hi	43e0b0 <feof@plt+0x3a810>  // b.pmore
  43e098:	mov	w9, #0x1                   	// #1
  43e09c:	lsl	w8, w9, w8
  43e0a0:	mov	w9, #0x141                 	// #321
  43e0a4:	movk	w9, #0x710, lsl #16
  43e0a8:	tst	w8, w9
  43e0ac:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43e0b0:	cmp	w2, #0xa8
  43e0b4:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43e0b8:	b	43e21c <feof@plt+0x3a97c>
  43e0bc:	sub	w8, w2, #0x391
  43e0c0:	cmp	w8, #0x34
  43e0c4:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43e0c8:	mov	w9, #0x1                   	// #1
  43e0cc:	lsl	x8, x9, x8
  43e0d0:	mov	x9, #0x10001000100010      	// #4503668347895824
  43e0d4:	movk	x9, #0x101
  43e0d8:	movk	x9, #0x101, lsl #32
  43e0dc:	b	43d994 <feof@plt+0x3a0f4>
  43e0e0:	mov	w8, #0xffffe160            	// #-7840
  43e0e4:	add	w8, w2, w8
  43e0e8:	cmp	w8, #0x2
  43e0ec:	b.cc	43d99c <feof@plt+0x3a0fc>  // b.lo, b.ul, b.last
  43e0f0:	mov	w8, #0x1fb3                	// #8115
  43e0f4:	cmp	w2, w8
  43e0f8:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43e0fc:	mov	w8, #0x1fbc                	// #8124
  43e100:	cmp	w2, w8
  43e104:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43e108:	b	43e21c <feof@plt+0x3a97c>
  43e10c:	sub	w8, w2, #0x391
  43e110:	cmp	w8, #0xa9
  43e114:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43e118:	adrp	x9, 4ce000 <_obstack_memory_used@@Base+0x522fc>
  43e11c:	add	x9, x9, #0xe86
  43e120:	adr	x10, 43d99c <feof@plt+0x3a0fc>
  43e124:	ldrh	w11, [x9, x8, lsl #1]
  43e128:	add	x10, x10, x11, lsl #2
  43e12c:	br	x10
  43e130:	mov	w8, #0xffffe188            	// #-7800
  43e134:	add	w8, w2, w8
  43e138:	cmp	w8, #0x4
  43e13c:	b.cc	43d99c <feof@plt+0x3a0fc>  // b.lo, b.ul, b.last
  43e140:	mov	w8, #0xffffe11a            	// #-7910
  43e144:	add	w8, w2, w8
  43e148:	b	43e214 <feof@plt+0x3a974>
  43e14c:	sub	w8, w2, #0x391
  43e150:	cmp	w8, #0x3d
  43e154:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43e158:	mov	w9, #0x1                   	// #1
  43e15c:	lsl	x8, x9, x8
  43e160:	mov	x9, #0x41                  	// #65
  43e164:	movk	x9, #0x2900, lsl #16
  43e168:	movk	x9, #0x41, lsl #32
  43e16c:	movk	x9, #0x2100, lsl #48
  43e170:	b	43d994 <feof@plt+0x3a0f4>
  43e174:	sub	w8, w2, #0x418
  43e178:	cmp	w8, #0x2b
  43e17c:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43e180:	mov	w9, #0x1                   	// #1
  43e184:	lsl	x8, x9, x8
  43e188:	mov	x9, #0x801                 	// #2049
  43e18c:	movk	x9, #0x801, lsl #32
  43e190:	b	43d994 <feof@plt+0x3a0f4>
  43e194:	sub	w8, w2, #0x226
  43e198:	cmp	w8, #0x9
  43e19c:	b.hi	43e1b4 <feof@plt+0x3a914>  // b.pmore
  43e1a0:	mov	w9, #0x1                   	// #1
  43e1a4:	lsl	w8, w9, w8
  43e1a8:	mov	w9, #0x303                 	// #771
  43e1ac:	tst	w8, w9
  43e1b0:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43e1b4:	sub	w8, w2, #0x1ea
  43e1b8:	b	43e214 <feof@plt+0x3a974>
  43e1bc:	sub	w8, w2, #0x4d8
  43e1c0:	cmp	w8, #0x11
  43e1c4:	b.hi	43e21c <feof@plt+0x3a97c>  // b.pmore
  43e1c8:	mov	w9, #0x1                   	// #1
  43e1cc:	lsl	w8, w9, w8
  43e1d0:	tst	w8, #0x30003
  43e1d4:	b.ne	43d99c <feof@plt+0x3a0fc>  // b.any
  43e1d8:	b	43e21c <feof@plt+0x3a97c>
  43e1dc:	cmp	w2, #0x1b7
  43e1e0:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43e1e4:	cmp	w2, #0x292
  43e1e8:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43e1ec:	b	43e21c <feof@plt+0x3a97c>
  43e1f0:	cmp	w2, #0x55
  43e1f4:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43e1f8:	cmp	w2, #0x75
  43e1fc:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43e200:	b	43e21c <feof@plt+0x3a97c>
  43e204:	mov	w8, #0xffffe19e            	// #-7778
  43e208:	add	w8, w2, w8
  43e20c:	b	43e214 <feof@plt+0x3a974>
  43e210:	sub	w8, w2, #0x16a
  43e214:	cmp	w8, #0x2
  43e218:	b.cc	43d99c <feof@plt+0x3a0fc>  // b.lo, b.ul, b.last
  43e21c:	mov	w0, #0x1                   	// #1
  43e220:	ret
  43e224:	cmp	w2, #0x41
  43e228:	b.eq	43d99c <feof@plt+0x3a0fc>  // b.none
  43e22c:	b	43e21c <feof@plt+0x3a97c>
  43e230:	stp	x29, x30, [sp, #-80]!
  43e234:	stp	x26, x25, [sp, #16]
  43e238:	stp	x24, x23, [sp, #32]
  43e23c:	stp	x22, x21, [sp, #48]
  43e240:	stp	x20, x19, [sp, #64]
  43e244:	ldrsw	x25, [x3, #16]
  43e248:	ldr	x21, [x0, #1216]
  43e24c:	mov	x19, x2
  43e250:	mov	w20, w1
  43e254:	mov	x29, sp
  43e258:	cmp	x21, x25
  43e25c:	b.ne	43e290 <feof@plt+0x3a9f0>  // b.any
  43e260:	ldp	x10, x8, [x19, #8]
  43e264:	add	x9, x8, #0x1
  43e268:	cmp	x9, x10
  43e26c:	b.ls	43e320 <feof@plt+0x3aa80>  // b.plast
  43e270:	ldr	x0, [x19]
  43e274:	add	x1, x10, #0x100
  43e278:	str	x1, [x19, #8]
  43e27c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43e280:	ldr	x8, [x19, #16]
  43e284:	str	x0, [x19]
  43e288:	add	x9, x8, #0x1
  43e28c:	b	43e324 <feof@plt+0x3aa84>
  43e290:	ldp	x8, x23, [x19, #8]
  43e294:	ldrb	w22, [x0, #1242]
  43e298:	cmp	x21, #0x20
  43e29c:	mov	w9, #0x20                  	// #32
  43e2a0:	udiv	x24, x25, x21
  43e2a4:	csel	x26, x21, x9, cc  // cc = lo, ul, last
  43e2a8:	add	x9, x23, x24
  43e2ac:	cmp	x9, x8
  43e2b0:	b.ls	43e2c8 <feof@plt+0x3aa28>  // b.plast
  43e2b4:	ldr	x0, [x19]
  43e2b8:	add	x1, x8, #0x100
  43e2bc:	str	x1, [x19, #8]
  43e2c0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43e2c4:	str	x0, [x19]
  43e2c8:	cmp	x21, x25
  43e2cc:	b.hi	43e310 <feof@plt+0x3aa70>  // b.pmore
  43e2d0:	mov	x9, #0xffffffffffffffff    	// #-1
  43e2d4:	lsl	x9, x9, x26
  43e2d8:	mov	x8, xzr
  43e2dc:	eor	w9, w9, #0xff
  43e2e0:	ldr	x11, [x19]
  43e2e4:	mvn	x12, x8
  43e2e8:	cmp	w22, #0x0
  43e2ec:	add	x12, x24, x12
  43e2f0:	csel	x12, x8, x12, eq  // eq = none
  43e2f4:	add	x8, x8, #0x1
  43e2f8:	and	w10, w20, w9
  43e2fc:	lsr	w20, w20, w21
  43e300:	add	x12, x12, x23
  43e304:	cmp	x24, x8
  43e308:	strb	w10, [x11, x12]
  43e30c:	b.hi	43e2e0 <feof@plt+0x3aa40>  // b.pmore
  43e310:	ldr	x8, [x19, #16]
  43e314:	add	x8, x8, x24
  43e318:	str	x8, [x19, #16]
  43e31c:	b	43e32c <feof@plt+0x3aa8c>
  43e320:	ldr	x0, [x19]
  43e324:	str	x9, [x19, #16]
  43e328:	strb	w20, [x0, x8]
  43e32c:	ldp	x20, x19, [sp, #64]
  43e330:	ldp	x22, x21, [sp, #48]
  43e334:	ldp	x24, x23, [sp, #32]
  43e338:	ldp	x26, x25, [sp, #16]
  43e33c:	ldp	x29, x30, [sp], #80
  43e340:	ret
  43e344:	sub	sp, sp, #0x100
  43e348:	stp	x29, x30, [sp, #176]
  43e34c:	stp	x24, x23, [sp, #208]
  43e350:	stp	x22, x21, [sp, #224]
  43e354:	stp	x20, x19, [sp, #240]
  43e358:	ldrb	w23, [x0, #27]
  43e35c:	ldrb	w24, [x0, #25]
  43e360:	mov	x19, x0
  43e364:	mov	w20, w1
  43e368:	str	x25, [sp, #192]
  43e36c:	add	x29, sp, #0xb0
  43e370:	cbz	w23, 43e378 <feof@plt+0x3aad8>
  43e374:	strb	wzr, [x19, #24]
  43e378:	cbz	w24, 43e39c <feof@plt+0x3aafc>
  43e37c:	ldrb	w8, [x19, #1154]
  43e380:	cbz	w8, 43e398 <feof@plt+0x3aaf8>
  43e384:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43e388:	add	x2, x2, #0x80a
  43e38c:	mov	w1, #0x2                   	// #2
  43e390:	mov	x0, x19
  43e394:	bl	4424f8 <feof@plt+0x3ec58>
  43e398:	strh	wzr, [x19, #24]
  43e39c:	ldr	x8, [x19, #40]
  43e3a0:	mov	w21, #0x1                   	// #1
  43e3a4:	mov	w9, #0x53                  	// #83
  43e3a8:	strb	w21, [x19, #16]
  43e3ac:	strb	wzr, [x19, #21]
  43e3b0:	strb	w9, [x19, #156]
  43e3b4:	ldr	w8, [x8, #60]
  43e3b8:	mov	x0, x19
  43e3bc:	str	w8, [x19, #48]
  43e3c0:	bl	4499fc <feof@plt+0x4615c>
  43e3c4:	ldrb	w8, [x0, #4]
  43e3c8:	cmp	w8, #0x16
  43e3cc:	b.eq	43e494 <feof@plt+0x3abf4>  // b.none
  43e3d0:	cmp	w8, #0x37
  43e3d4:	b.eq	43e49c <feof@plt+0x3abfc>  // b.none
  43e3d8:	mov	x22, x0
  43e3dc:	cmp	w8, #0x35
  43e3e0:	b.ne	43e3f0 <feof@plt+0x3ab50>  // b.any
  43e3e4:	ldr	x8, [x22, #8]
  43e3e8:	ldrb	w8, [x8, #16]
  43e3ec:	tbnz	w8, #0, 43e4b4 <feof@plt+0x3ac14>
  43e3f0:	ldr	w8, [x19, #1116]
  43e3f4:	cmp	w8, #0x15
  43e3f8:	b.eq	43e4a8 <feof@plt+0x3ac08>  // b.none
  43e3fc:	ldrb	w8, [x19, #18]
  43e400:	cbnz	w8, 43e5a4 <feof@plt+0x3ad04>
  43e404:	mov	x0, x19
  43e408:	mov	x1, x22
  43e40c:	bl	44d198 <feof@plt+0x498f8>
  43e410:	ldr	x8, [x19, #1064]
  43e414:	mov	x20, x0
  43e418:	cbz	x8, 43e58c <feof@plt+0x3acec>
  43e41c:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  43e420:	add	x2, x2, #0x2a0
  43e424:	mov	x0, x19
  43e428:	mov	x1, x20
  43e42c:	blr	x8
  43e430:	cbz	x0, 43e58c <feof@plt+0x3acec>
  43e434:	ldr	x1, [x19, #40]
  43e438:	ldr	w2, [x22]
  43e43c:	mov	x21, x0
  43e440:	add	x0, sp, #0x8
  43e444:	mov	x3, xzr
  43e448:	bl	4506a8 <feof@plt+0x4ce08>
  43e44c:	ldr	x0, [x19, #40]
  43e450:	ldr	w1, [x22]
  43e454:	bl	44e40c <feof@plt+0x4ab6c>
  43e458:	mov	x1, x0
  43e45c:	add	x0, sp, #0x8
  43e460:	mov	x2, x21
  43e464:	bl	451454 <feof@plt+0x4dbb4>
  43e468:	adrp	x3, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43e46c:	add	x3, x3, #0x872
  43e470:	add	x2, sp, #0x8
  43e474:	mov	w1, #0x3                   	// #3
  43e478:	mov	x0, x19
  43e47c:	mov	x4, x20
  43e480:	mov	x5, x21
  43e484:	bl	442e90 <feof@plt+0x3f5f0>
  43e488:	add	x0, sp, #0x8
  43e48c:	bl	450788 <feof@plt+0x4cee8>
  43e490:	b	43e5a4 <feof@plt+0x3ad04>
  43e494:	mov	x25, xzr
  43e498:	b	43e644 <feof@plt+0x3ada4>
  43e49c:	ldr	w8, [x19, #1116]
  43e4a0:	cmp	w8, #0x15
  43e4a4:	b.ne	43e4d4 <feof@plt+0x3ac34>  // b.any
  43e4a8:	mov	w21, wzr
  43e4ac:	mov	x25, xzr
  43e4b0:	b	43e644 <feof@plt+0x3ada4>
  43e4b4:	adrp	x9, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  43e4b8:	lsr	w8, w8, #1
  43e4bc:	add	x9, x9, #0xc0
  43e4c0:	mov	w10, #0x18                  	// #24
  43e4c4:	umaddl	x22, w8, w10, x9
  43e4c8:	ldrb	w8, [x22, #19]
  43e4cc:	tbz	w8, #1, 43e510 <feof@plt+0x3ac70>
  43e4d0:	b	43e514 <feof@plt+0x3ac74>
  43e4d4:	ldrb	w8, [x19, #1154]
  43e4d8:	cbz	w8, 43e500 <feof@plt+0x3ac60>
  43e4dc:	ldrb	w8, [x19, #1155]
  43e4e0:	cbnz	w8, 43e500 <feof@plt+0x3ac60>
  43e4e4:	ldrb	w8, [x19, #18]
  43e4e8:	cbnz	w8, 43e500 <feof@plt+0x3ac60>
  43e4ec:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43e4f0:	add	x2, x2, #0x847
  43e4f4:	mov	w1, #0x2                   	// #2
  43e4f8:	mov	x0, x19
  43e4fc:	bl	4424f8 <feof@plt+0x3ec58>
  43e500:	adrp	x22, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  43e504:	add	x22, x22, #0x288
  43e508:	ldrb	w8, [x22, #19]
  43e50c:	tbnz	w8, #1, 43e514 <feof@plt+0x3ac74>
  43e510:	strb	wzr, [x19, #440]
  43e514:	ldrb	w9, [x19, #1155]
  43e518:	cbz	w9, 43e544 <feof@plt+0x3aca4>
  43e51c:	ldrb	w9, [x19, #1244]
  43e520:	cbnz	w9, 43e534 <feof@plt+0x3ac94>
  43e524:	mov	x25, xzr
  43e528:	mov	w21, wzr
  43e52c:	cbnz	w20, 43e644 <feof@plt+0x3ada4>
  43e530:	tbz	w8, #3, 43e644 <feof@plt+0x3ada4>
  43e534:	and	w8, w8, #0x4
  43e538:	strb	w8, [x19, #19]
  43e53c:	strb	w8, [x19, #17]
  43e540:	b	43e620 <feof@plt+0x3ad80>
  43e544:	ldrb	w9, [x19, #18]
  43e548:	and	w10, w8, #0x4
  43e54c:	strb	w10, [x19, #19]
  43e550:	strb	w10, [x19, #17]
  43e554:	cbz	w9, 43e5ac <feof@plt+0x3ad0c>
  43e558:	ldrb	w8, [x19, #1138]
  43e55c:	cbz	w8, 43e620 <feof@plt+0x3ad80>
  43e560:	adrp	x8, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  43e564:	add	x8, x8, #0x198
  43e568:	cmp	x22, x8
  43e56c:	b.eq	43e5ec <feof@plt+0x3ad4c>  // b.none
  43e570:	ldrb	w8, [x22, #18]
  43e574:	cbz	w20, 43e604 <feof@plt+0x3ad64>
  43e578:	cbnz	w8, 43e620 <feof@plt+0x3ad80>
  43e57c:	ldr	x3, [x22, #8]
  43e580:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43e584:	add	x2, x2, #0xd3b
  43e588:	b	43e614 <feof@plt+0x3ad74>
  43e58c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43e590:	add	x2, x2, #0x8a9
  43e594:	mov	w1, #0x3                   	// #3
  43e598:	mov	x0, x19
  43e59c:	mov	x3, x20
  43e5a0:	bl	4424f8 <feof@plt+0x3ec58>
  43e5a4:	mov	x25, xzr
  43e5a8:	b	43e634 <feof@plt+0x3ad94>
  43e5ac:	ldrb	w9, [x22, #18]
  43e5b0:	cmp	w9, #0x2
  43e5b4:	b.ne	43e77c <feof@plt+0x3aedc>  // b.any
  43e5b8:	adrp	x9, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  43e5bc:	add	x9, x9, #0x228
  43e5c0:	cmp	x22, x9
  43e5c4:	b.eq	43e774 <feof@plt+0x3aed4>  // b.none
  43e5c8:	ldrb	w9, [x19, #1154]
  43e5cc:	cbz	w9, 43e77c <feof@plt+0x3aedc>
  43e5d0:	ldr	x3, [x22, #8]
  43e5d4:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43e5d8:	add	x2, x2, #0xcd9
  43e5dc:	mov	w1, #0x2                   	// #2
  43e5e0:	mov	x0, x19
  43e5e4:	bl	4424f8 <feof@plt+0x3ec58>
  43e5e8:	b	43e558 <feof@plt+0x3acb8>
  43e5ec:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43e5f0:	add	x2, x2, #0xd12
  43e5f4:	mov	w1, #0x6                   	// #6
  43e5f8:	mov	x0, x19
  43e5fc:	bl	442628 <feof@plt+0x3ed88>
  43e600:	b	43e620 <feof@plt+0x3ad80>
  43e604:	cbz	w8, 43e620 <feof@plt+0x3ad80>
  43e608:	ldr	x3, [x22, #8]
  43e60c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43e610:	add	x2, x2, #0xd69
  43e614:	mov	w1, #0x6                   	// #6
  43e618:	mov	x0, x19
  43e61c:	bl	442628 <feof@plt+0x3ed88>
  43e620:	ldrb	w8, [x19, #18]
  43e624:	cbz	w8, 43e63c <feof@plt+0x3ad9c>
  43e628:	ldrb	w8, [x22, #19]
  43e62c:	tst	w8, #0x1
  43e630:	csel	x25, xzr, x22, eq  // eq = none
  43e634:	mov	w21, #0x1                   	// #1
  43e638:	b	43e644 <feof@plt+0x3ada4>
  43e63c:	mov	w21, #0x1                   	// #1
  43e640:	mov	x25, x22
  43e644:	ldrb	w8, [x19, #1160]
  43e648:	str	x25, [x19, #144]
  43e64c:	cbz	w8, 43e658 <feof@plt+0x3adb8>
  43e650:	mov	x0, x19
  43e654:	bl	43e7bc <feof@plt+0x3af1c>
  43e658:	cbz	x25, 43e670 <feof@plt+0x3add0>
  43e65c:	ldr	x8, [x19, #144]
  43e660:	mov	x0, x19
  43e664:	ldr	x8, [x8]
  43e668:	blr	x8
  43e66c:	b	43e680 <feof@plt+0x3ade0>
  43e670:	cbnz	w21, 43e680 <feof@plt+0x3ade0>
  43e674:	mov	w1, #0x1                   	// #1
  43e678:	mov	x0, x19
  43e67c:	bl	4529b4 <feof@plt+0x4f114>
  43e680:	ldrb	w9, [x19, #1160]
  43e684:	ldrb	w8, [x19, #32]
  43e688:	cbz	w9, 43e6bc <feof@plt+0x3ae1c>
  43e68c:	cbnz	w8, 43e69c <feof@plt+0x3adfc>
  43e690:	ldrb	w8, [x19, #24]
  43e694:	sub	w8, w8, #0x1
  43e698:	strb	w8, [x19, #24]
  43e69c:	ldr	x8, [x19, #144]
  43e6a0:	adrp	x9, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  43e6a4:	add	x9, x9, #0xc0
  43e6a8:	cmp	x8, x9
  43e6ac:	b.eq	43e718 <feof@plt+0x3ae78>  // b.none
  43e6b0:	mov	x0, x19
  43e6b4:	bl	457368 <feof@plt+0x53ac8>
  43e6b8:	b	43e718 <feof@plt+0x3ae78>
  43e6bc:	cbz	w21, 43e718 <feof@plt+0x3ae78>
  43e6c0:	cbz	w8, 43e6d0 <feof@plt+0x3ae30>
  43e6c4:	b	43e718 <feof@plt+0x3ae78>
  43e6c8:	mov	x0, x19
  43e6cc:	bl	452120 <feof@plt+0x4e880>
  43e6d0:	ldr	x8, [x19, #136]
  43e6d4:	ldr	x8, [x8, #8]
  43e6d8:	cbnz	x8, 43e6c8 <feof@plt+0x3ae28>
  43e6dc:	ldr	x8, [x19, #448]
  43e6e0:	ldurb	w8, [x8, #-20]
  43e6e4:	cmp	w8, #0x16
  43e6e8:	b.eq	43e700 <feof@plt+0x3ae60>  // b.none
  43e6ec:	mov	x0, x19
  43e6f0:	bl	4499fc <feof@plt+0x4615c>
  43e6f4:	ldrb	w8, [x0, #4]
  43e6f8:	cmp	w8, #0x16
  43e6fc:	b.ne	43e6ec <feof@plt+0x3ae4c>  // b.any
  43e700:	ldr	w8, [x19, #500]
  43e704:	cbnz	w8, 43e718 <feof@plt+0x3ae78>
  43e708:	ldr	x8, [x19, #472]
  43e70c:	add	x9, x19, #0x1c8
  43e710:	str	x9, [x19, #488]
  43e714:	str	x8, [x19, #448]
  43e718:	ldrb	w8, [x19, #1123]
  43e71c:	strb	wzr, [x19, #16]
  43e720:	sturh	wzr, [x19, #19]
  43e724:	str	xzr, [x19, #144]
  43e728:	cmp	w8, #0x0
  43e72c:	cset	w8, eq  // eq = none
  43e730:	strb	w8, [x19, #21]
  43e734:	cbz	w24, 43e748 <feof@plt+0x3aea8>
  43e738:	ldrb	w8, [x19, #32]
  43e73c:	cbnz	w8, 43e748 <feof@plt+0x3aea8>
  43e740:	mov	w8, #0x201                 	// #513
  43e744:	strh	w8, [x19, #24]
  43e748:	cbz	w23, 43e754 <feof@plt+0x3aeb4>
  43e74c:	mov	w8, #0x1                   	// #1
  43e750:	strb	w8, [x19, #24]
  43e754:	mov	w0, w21
  43e758:	ldp	x20, x19, [sp, #240]
  43e75c:	ldp	x22, x21, [sp, #224]
  43e760:	ldp	x24, x23, [sp, #208]
  43e764:	ldr	x25, [sp, #192]
  43e768:	ldp	x29, x30, [sp, #176]
  43e76c:	add	sp, sp, #0x100
  43e770:	ret
  43e774:	ldrb	w9, [x19, #1122]
  43e778:	cbz	w9, 43e5c8 <feof@plt+0x3ad28>
  43e77c:	tbnz	w8, #5, 43e798 <feof@plt+0x3aef8>
  43e780:	adrp	x8, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  43e784:	add	x8, x8, #0x228
  43e788:	cmp	x22, x8
  43e78c:	b.ne	43e558 <feof@plt+0x3acb8>  // b.any
  43e790:	ldrb	w8, [x19, #1122]
  43e794:	cbnz	w8, 43e558 <feof@plt+0x3acb8>
  43e798:	ldrb	w8, [x19, #1132]
  43e79c:	cbz	w8, 43e558 <feof@plt+0x3acb8>
  43e7a0:	ldr	x3, [x22, #8]
  43e7a4:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43e7a8:	add	x2, x2, #0xcf0
  43e7ac:	mov	w1, #0x1                   	// #1
  43e7b0:	mov	x0, x19
  43e7b4:	bl	442628 <feof@plt+0x3ed88>
  43e7b8:	b	43e558 <feof@plt+0x3acb8>
  43e7bc:	stp	x29, x30, [sp, #-32]!
  43e7c0:	stp	x20, x19, [sp, #16]
  43e7c4:	ldr	x8, [x0, #144]
  43e7c8:	adrp	x9, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  43e7cc:	add	x9, x9, #0xc0
  43e7d0:	mov	x19, x0
  43e7d4:	cmp	x8, x9
  43e7d8:	mov	x29, sp
  43e7dc:	b.eq	43e888 <feof@plt+0x3afe8>  // b.none
  43e7e0:	cbz	x8, 43e7f4 <feof@plt+0x3af54>
  43e7e4:	ldrb	w9, [x8, #19]
  43e7e8:	tst	w9, #0x10
  43e7ec:	cset	w9, eq  // eq = none
  43e7f0:	b	43e7f8 <feof@plt+0x3af58>
  43e7f4:	mov	w9, wzr
  43e7f8:	ldrb	w10, [x19, #18]
  43e7fc:	adrp	x11, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  43e800:	add	x11, x11, #0x120
  43e804:	add	x12, x11, #0x78
  43e808:	cmp	w10, #0x0
  43e80c:	cset	w20, ne  // ne = any
  43e810:	cmp	x8, x11
  43e814:	cset	w10, eq  // eq = none
  43e818:	cmp	x8, x12
  43e81c:	cset	w8, eq  // eq = none
  43e820:	orr	w8, w10, w8
  43e824:	strb	w8, [x19, #20]
  43e828:	cbz	w8, 43e830 <feof@plt+0x3af90>
  43e82c:	strb	wzr, [x19, #18]
  43e830:	cbz	w9, 43e860 <feof@plt+0x3afc0>
  43e834:	ldrb	w8, [x19, #24]
  43e838:	mov	x0, x19
  43e83c:	mov	x1, xzr
  43e840:	mov	w2, wzr
  43e844:	add	w8, w8, #0x1
  43e848:	strb	w8, [x19, #24]
  43e84c:	bl	4573f8 <feof@plt+0x53b58>
  43e850:	ldrb	w8, [x19, #24]
  43e854:	sub	w8, w8, #0x1
  43e858:	strb	w8, [x19, #24]
  43e85c:	b	43e870 <feof@plt+0x3afd0>
  43e860:	mov	x0, x19
  43e864:	mov	x1, xzr
  43e868:	mov	w2, wzr
  43e86c:	bl	4573f8 <feof@plt+0x53b58>
  43e870:	ldr	x1, [x19, #1312]
  43e874:	ldr	x8, [x19, #1328]
  43e878:	mov	x0, x19
  43e87c:	strb	w20, [x19, #18]
  43e880:	sub	x2, x8, x1
  43e884:	bl	457334 <feof@plt+0x53a94>
  43e888:	ldrb	w8, [x19, #24]
  43e88c:	add	w8, w8, #0x1
  43e890:	strb	w8, [x19, #24]
  43e894:	ldp	x20, x19, [sp, #16]
  43e898:	ldp	x29, x30, [sp], #32
  43e89c:	ret
  43e8a0:	adrp	x1, 43e000 <feof@plt+0x3a760>
  43e8a4:	add	x1, x1, #0x8b0
  43e8a8:	mov	x2, xzr
  43e8ac:	b	448d54 <feof@plt+0x454b4>
  43e8b0:	ldrh	w8, [x1, #18]
  43e8b4:	mov	w9, #0xff34                	// #65332
  43e8b8:	mov	w0, #0x1                   	// #1
  43e8bc:	str	xzr, [x1, #24]
  43e8c0:	and	w8, w8, w9
  43e8c4:	strh	w8, [x1, #18]
  43e8c8:	ret
  43e8cc:	stp	x29, x30, [sp, #-32]!
  43e8d0:	stp	x20, x19, [sp, #16]
  43e8d4:	mov	x19, x0
  43e8d8:	ldr	x0, [x0, #40]
  43e8dc:	mov	w8, w3
  43e8e0:	mov	x3, x2
  43e8e4:	mov	w2, w4
  43e8e8:	mov	w4, w8
  43e8ec:	mov	x29, sp
  43e8f0:	bl	44e7e4 <feof@plt+0x4af44>
  43e8f4:	mov	x20, x0
  43e8f8:	cbz	x0, 43e90c <feof@plt+0x3b06c>
  43e8fc:	ldr	x0, [x19, #40]
  43e900:	ldr	w1, [x20, #16]
  43e904:	mov	w2, #0x7f                  	// #127
  43e908:	bl	44ecdc <feof@plt+0x4b43c>
  43e90c:	ldr	x2, [x19, #912]
  43e910:	cbz	x2, 43e928 <feof@plt+0x3b088>
  43e914:	mov	x0, x19
  43e918:	mov	x1, x20
  43e91c:	ldp	x20, x19, [sp, #16]
  43e920:	ldp	x29, x30, [sp], #32
  43e924:	br	x2
  43e928:	ldp	x20, x19, [sp, #16]
  43e92c:	ldp	x29, x30, [sp], #32
  43e930:	ret
  43e934:	cbz	x3, 43e970 <feof@plt+0x3b0d0>
  43e938:	stp	x29, x30, [sp, #-32]!
  43e93c:	stp	x20, x19, [sp, #16]
  43e940:	mov	x19, x3
  43e944:	mov	w3, wzr
  43e948:	mov	x29, sp
  43e94c:	mov	w20, w4
  43e950:	bl	43e980 <feof@plt+0x3b0e0>
  43e954:	cbz	x0, 43e964 <feof@plt+0x3b0c4>
  43e958:	and	w8, w20, #0x1
  43e95c:	strb	w8, [x0, #19]
  43e960:	str	x19, [x0, #24]
  43e964:	ldp	x20, x19, [sp, #16]
  43e968:	ldp	x29, x30, [sp], #32
  43e96c:	ret
  43e970:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43e974:	add	x2, x2, #0x8cd
  43e978:	mov	w1, #0x4                   	// #4
  43e97c:	b	4424f8 <feof@plt+0x3ec58>
  43e980:	stp	x29, x30, [sp, #-64]!
  43e984:	stp	x22, x21, [sp, #32]
  43e988:	stp	x20, x19, [sp, #48]
  43e98c:	mov	x20, x2
  43e990:	mov	x21, x1
  43e994:	mov	x19, x0
  43e998:	str	x23, [sp, #16]
  43e99c:	mov	x29, sp
  43e9a0:	cbz	x1, 43ea1c <feof@plt+0x3b17c>
  43e9a4:	mov	x0, x21
  43e9a8:	and	w23, w3, #0x1
  43e9ac:	bl	4030b0 <strlen@plt>
  43e9b0:	mov	x2, x0
  43e9b4:	mov	x0, x19
  43e9b8:	mov	x1, x21
  43e9bc:	bl	448cd8 <feof@plt+0x45438>
  43e9c0:	ldr	x8, [x19, #896]
  43e9c4:	mov	x22, x0
  43e9c8:	cbz	x8, 43e9e0 <feof@plt+0x3b140>
  43e9cc:	ldr	x9, [x8, #8]
  43e9d0:	cmp	x9, x22
  43e9d4:	b.eq	43ea38 <feof@plt+0x3b198>  // b.none
  43e9d8:	ldr	x8, [x8]
  43e9dc:	cbnz	x8, 43e9cc <feof@plt+0x3b12c>
  43e9e0:	mov	w1, #0x20                  	// #32
  43e9e4:	mov	x0, x19
  43e9e8:	bl	44dd1c <feof@plt+0x4a47c>
  43e9ec:	movi	v0.2d, #0x0
  43e9f0:	stp	q0, q0, [x0]
  43e9f4:	ldr	x9, [x19, #896]
  43e9f8:	mov	x8, x0
  43e9fc:	mov	w10, #0x1                   	// #1
  43ea00:	str	x9, [x0]
  43ea04:	str	x0, [x19, #896]
  43ea08:	str	x22, [x0, #8]
  43ea0c:	strb	w10, [x0, #16]
  43ea10:	strb	w23, [x0, #19]
  43ea14:	add	x23, x8, #0x18
  43ea18:	b	43ea68 <feof@plt+0x3b1c8>
  43ea1c:	tbz	w3, #0, 43ea64 <feof@plt+0x3b1c4>
  43ea20:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ea24:	add	x2, x2, #0xde7
  43ea28:	mov	w1, #0x4                   	// #4
  43ea2c:	mov	x0, x19
  43ea30:	mov	x3, x20
  43ea34:	b	43eae4 <feof@plt+0x3b244>
  43ea38:	ldrb	w9, [x8, #16]
  43ea3c:	cbz	w9, 43ead0 <feof@plt+0x3b230>
  43ea40:	ldrb	w9, [x8, #19]
  43ea44:	cmp	w9, w23
  43ea48:	b.eq	43ea14 <feof@plt+0x3b174>  // b.none
  43ea4c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ea50:	add	x2, x2, #0xda2
  43ea54:	mov	w1, #0x4                   	// #4
  43ea58:	mov	x0, x19
  43ea5c:	mov	x3, x21
  43ea60:	b	43eae4 <feof@plt+0x3b244>
  43ea64:	add	x23, x19, #0x380
  43ea68:	mov	x0, x20
  43ea6c:	bl	4030b0 <strlen@plt>
  43ea70:	mov	x2, x0
  43ea74:	mov	x0, x19
  43ea78:	mov	x1, x20
  43ea7c:	bl	448cd8 <feof@plt+0x45438>
  43ea80:	ldr	x8, [x23]
  43ea84:	mov	x22, x0
  43ea88:	cbz	x8, 43eaa0 <feof@plt+0x3b200>
  43ea8c:	ldr	x9, [x8, #8]
  43ea90:	cmp	x9, x22
  43ea94:	b.eq	43eac8 <feof@plt+0x3b228>  // b.none
  43ea98:	ldr	x8, [x8]
  43ea9c:	cbnz	x8, 43ea8c <feof@plt+0x3b1ec>
  43eaa0:	mov	w1, #0x20                  	// #32
  43eaa4:	mov	x0, x19
  43eaa8:	bl	44dd1c <feof@plt+0x4a47c>
  43eaac:	movi	v0.2d, #0x0
  43eab0:	stp	q0, q0, [x0]
  43eab4:	ldr	x8, [x23]
  43eab8:	str	x8, [x0]
  43eabc:	str	x0, [x23]
  43eac0:	str	x22, [x0, #8]
  43eac4:	b	43eaec <feof@plt+0x3b24c>
  43eac8:	ldrb	w8, [x8, #16]
  43eacc:	cbz	w8, 43eb00 <feof@plt+0x3b260>
  43ead0:	ldr	x3, [x22]
  43ead4:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ead8:	add	x2, x2, #0xe24
  43eadc:	mov	w1, #0x4                   	// #4
  43eae0:	mov	x0, x19
  43eae4:	bl	4424f8 <feof@plt+0x3ec58>
  43eae8:	mov	x0, xzr
  43eaec:	ldp	x20, x19, [sp, #48]
  43eaf0:	ldp	x22, x21, [sp, #32]
  43eaf4:	ldr	x23, [sp, #16]
  43eaf8:	ldp	x29, x30, [sp], #64
  43eafc:	ret
  43eb00:	cbz	x21, 43eb24 <feof@plt+0x3b284>
  43eb04:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43eb08:	add	x2, x2, #0xe5d
  43eb0c:	mov	w1, #0x4                   	// #4
  43eb10:	mov	x0, x19
  43eb14:	mov	x3, x21
  43eb18:	mov	x4, x20
  43eb1c:	bl	4424f8 <feof@plt+0x3ec58>
  43eb20:	b	43eae8 <feof@plt+0x3b248>
  43eb24:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43eb28:	add	x2, x2, #0xe81
  43eb2c:	b	43ea28 <feof@plt+0x3b188>
  43eb30:	stp	x29, x30, [sp, #-32]!
  43eb34:	stp	x20, x19, [sp, #16]
  43eb38:	mov	w19, w3
  43eb3c:	and	w3, w5, #0x1
  43eb40:	mov	x29, sp
  43eb44:	mov	w20, w4
  43eb48:	bl	43e980 <feof@plt+0x3b0e0>
  43eb4c:	cbz	x0, 43eb64 <feof@plt+0x3b2c4>
  43eb50:	and	w8, w20, #0x1
  43eb54:	mov	w9, #0x1                   	// #1
  43eb58:	strb	w9, [x0, #18]
  43eb5c:	strb	w8, [x0, #19]
  43eb60:	str	w19, [x0, #24]
  43eb64:	ldp	x20, x19, [sp, #16]
  43eb68:	ldp	x29, x30, [sp], #32
  43eb6c:	ret
  43eb70:	stp	x29, x30, [sp, #-48]!
  43eb74:	adrp	x2, 4bf000 <_obstack_memory_used@@Base+0x432fc>
  43eb78:	add	x2, x2, #0x846
  43eb7c:	mov	x1, xzr
  43eb80:	mov	w3, wzr
  43eb84:	str	x21, [sp, #16]
  43eb88:	stp	x20, x19, [sp, #32]
  43eb8c:	mov	x29, sp
  43eb90:	mov	x19, x0
  43eb94:	bl	43e980 <feof@plt+0x3b0e0>
  43eb98:	adrp	x8, 43e000 <feof@plt+0x3a760>
  43eb9c:	mov	w21, #0x1                   	// #1
  43eba0:	add	x8, x8, #0xcdc
  43eba4:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43eba8:	strb	w21, [x0, #17]
  43ebac:	str	x8, [x0, #24]
  43ebb0:	add	x2, x2, #0x8f2
  43ebb4:	mov	x0, x19
  43ebb8:	mov	x1, xzr
  43ebbc:	mov	w3, wzr
  43ebc0:	bl	43e980 <feof@plt+0x3b0e0>
  43ebc4:	adrp	x8, 43e000 <feof@plt+0x3a760>
  43ebc8:	add	x8, x8, #0xd68
  43ebcc:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ebd0:	strb	w21, [x0, #17]
  43ebd4:	str	x8, [x0, #24]
  43ebd8:	add	x2, x2, #0x8fd
  43ebdc:	mov	x0, x19
  43ebe0:	mov	x1, xzr
  43ebe4:	mov	w3, wzr
  43ebe8:	bl	43e980 <feof@plt+0x3b0e0>
  43ebec:	adrp	x8, 43f000 <feof@plt+0x3b760>
  43ebf0:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x22fc>
  43ebf4:	add	x8, x8, #0x28
  43ebf8:	add	x20, x20, #0x664
  43ebfc:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ec00:	strb	w21, [x0, #17]
  43ec04:	str	x8, [x0, #24]
  43ec08:	add	x2, x2, #0x907
  43ec0c:	mov	x0, x19
  43ec10:	mov	x1, x20
  43ec14:	mov	w3, wzr
  43ec18:	bl	43e980 <feof@plt+0x3b0e0>
  43ec1c:	adrp	x8, 43f000 <feof@plt+0x3b760>
  43ec20:	add	x8, x8, #0x49c
  43ec24:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ec28:	strb	w21, [x0, #17]
  43ec2c:	str	x8, [x0, #24]
  43ec30:	add	x2, x2, #0x90e
  43ec34:	mov	x0, x19
  43ec38:	mov	x1, x20
  43ec3c:	mov	w3, wzr
  43ec40:	bl	43e980 <feof@plt+0x3b0e0>
  43ec44:	adrp	x8, 43f000 <feof@plt+0x3b760>
  43ec48:	add	x8, x8, #0x544
  43ec4c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ec50:	strb	w21, [x0, #17]
  43ec54:	str	x8, [x0, #24]
  43ec58:	add	x2, x2, #0xaad
  43ec5c:	mov	x0, x19
  43ec60:	mov	x1, x20
  43ec64:	mov	w3, wzr
  43ec68:	bl	43e980 <feof@plt+0x3b0e0>
  43ec6c:	adrp	x8, 43f000 <feof@plt+0x3b760>
  43ec70:	add	x8, x8, #0x614
  43ec74:	adrp	x2, 4b4000 <_obstack_memory_used@@Base+0x382fc>
  43ec78:	strb	w21, [x0, #17]
  43ec7c:	str	x8, [x0, #24]
  43ec80:	add	x2, x2, #0xfa6
  43ec84:	mov	x0, x19
  43ec88:	mov	x1, x20
  43ec8c:	mov	w3, wzr
  43ec90:	bl	43e980 <feof@plt+0x3b0e0>
  43ec94:	adrp	x8, 43f000 <feof@plt+0x3b760>
  43ec98:	add	x8, x8, #0x724
  43ec9c:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x472fc>
  43eca0:	strb	w21, [x0, #17]
  43eca4:	str	x8, [x0, #24]
  43eca8:	add	x2, x2, #0x67f
  43ecac:	mov	x0, x19
  43ecb0:	mov	x1, x20
  43ecb4:	mov	w3, wzr
  43ecb8:	bl	43e980 <feof@plt+0x3b0e0>
  43ecbc:	adrp	x8, 43f000 <feof@plt+0x3b760>
  43ecc0:	add	x8, x8, #0x72c
  43ecc4:	strb	w21, [x0, #17]
  43ecc8:	str	x8, [x0, #24]
  43eccc:	ldp	x20, x19, [sp, #32]
  43ecd0:	ldr	x21, [sp, #16]
  43ecd4:	ldp	x29, x30, [sp], #48
  43ecd8:	ret
  43ecdc:	stp	x29, x30, [sp, #-32]!
  43ece0:	ldr	x8, [x0, #40]
  43ece4:	str	x19, [sp, #16]
  43ece8:	mov	x19, x0
  43ecec:	mov	x29, sp
  43ecf0:	ldr	w8, [x8, #48]
  43ecf4:	cmp	w8, #0x1
  43ecf8:	b.ne	43ed10 <feof@plt+0x3b470>  // b.any
  43ecfc:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ed00:	add	x2, x2, #0xea2
  43ed04:	mov	x0, x19
  43ed08:	mov	w1, wzr
  43ed0c:	bl	4424f8 <feof@plt+0x3ec58>
  43ed10:	ldr	x8, [x19, #448]
  43ed14:	ldurb	w8, [x8, #-20]
  43ed18:	cmp	w8, #0x16
  43ed1c:	b.eq	43ed50 <feof@plt+0x3b4b0>  // b.none
  43ed20:	mov	x0, x19
  43ed24:	bl	4499fc <feof@plt+0x4615c>
  43ed28:	ldrb	w8, [x0, #4]
  43ed2c:	cmp	w8, #0x16
  43ed30:	b.eq	43ed50 <feof@plt+0x3b4b0>  // b.none
  43ed34:	ldr	x8, [x19, #144]
  43ed38:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ed3c:	add	x2, x2, #0xadd
  43ed40:	mov	x0, x19
  43ed44:	ldr	x3, [x8, #8]
  43ed48:	mov	w1, wzr
  43ed4c:	bl	442758 <feof@plt+0x3eeb8>
  43ed50:	ldr	x8, [x19]
  43ed54:	mov	x0, x19
  43ed58:	ldr	x19, [sp, #16]
  43ed5c:	ldr	x1, [x8, #80]
  43ed60:	ldp	x29, x30, [sp], #32
  43ed64:	b	4473f4 <feof@plt+0x43b54>
  43ed68:	stp	x29, x30, [sp, #-64]!
  43ed6c:	str	x23, [sp, #16]
  43ed70:	stp	x22, x21, [sp, #32]
  43ed74:	stp	x20, x19, [sp, #48]
  43ed78:	mov	x29, sp
  43ed7c:	mov	x19, x0
  43ed80:	bl	43f94c <feof@plt+0x3c0ac>
  43ed84:	cbz	x0, 43ef64 <feof@plt+0x3b6c4>
  43ed88:	ldr	w8, [x0, #8]
  43ed8c:	mov	x10, sp
  43ed90:	add	w9, w8, #0x2
  43ed94:	add	x9, x9, #0xf
  43ed98:	and	x9, x9, #0x1fffffff0
  43ed9c:	sub	x20, x10, x9
  43eda0:	mov	sp, x20
  43eda4:	ldr	x9, [x0, #16]
  43eda8:	mov	x10, x9
  43edac:	ldrb	w11, [x10], #1
  43edb0:	add	x8, x9, x8
  43edb4:	sub	x8, x8, #0x1
  43edb8:	cmp	w11, #0x4c
  43edbc:	csel	x9, x9, x10, ne  // ne = any
  43edc0:	add	x10, x9, #0x1
  43edc4:	cmp	x10, x8
  43edc8:	mov	x9, x20
  43edcc:	b.cs	43ee18 <feof@plt+0x3b578>  // b.hs, b.nlast
  43edd0:	mov	x9, x20
  43edd4:	b	43edec <feof@plt+0x3b54c>
  43edd8:	mov	x10, x12
  43eddc:	add	x10, x10, #0x1
  43ede0:	cmp	x10, x8
  43ede4:	strb	w11, [x9], #1
  43ede8:	b.cs	43ee18 <feof@plt+0x3b578>  // b.hs, b.nlast
  43edec:	ldrb	w11, [x10]
  43edf0:	cmp	w11, #0x5c
  43edf4:	b.ne	43eddc <feof@plt+0x3b53c>  // b.any
  43edf8:	mov	x12, x10
  43edfc:	ldrb	w11, [x12, #1]!
  43ee00:	cmp	w11, #0x5c
  43ee04:	b.eq	43edd8 <feof@plt+0x3b538>  // b.none
  43ee08:	cmp	w11, #0x22
  43ee0c:	b.eq	43edd8 <feof@plt+0x3b538>  // b.none
  43ee10:	mov	w11, #0x5c                  	// #92
  43ee14:	b	43eddc <feof@plt+0x3b53c>
  43ee18:	strb	wzr, [x9]
  43ee1c:	ldr	x8, [x19, #448]
  43ee20:	ldurb	w8, [x8, #-20]
  43ee24:	cmp	w8, #0x16
  43ee28:	b.eq	43ee68 <feof@plt+0x3b5c8>  // b.none
  43ee2c:	mov	x0, x19
  43ee30:	bl	4499fc <feof@plt+0x4615c>
  43ee34:	ldrb	w8, [x0, #4]
  43ee38:	cmp	w8, #0x16
  43ee3c:	b.eq	43ee68 <feof@plt+0x3b5c8>  // b.none
  43ee40:	ldr	x8, [x19, #144]
  43ee44:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ee48:	add	x2, x2, #0xadd
  43ee4c:	mov	x0, x19
  43ee50:	ldr	x3, [x8, #8]
  43ee54:	mov	w1, wzr
  43ee58:	bl	442758 <feof@plt+0x3eeb8>
  43ee5c:	b	43ee68 <feof@plt+0x3b5c8>
  43ee60:	mov	x0, x19
  43ee64:	bl	452120 <feof@plt+0x4e880>
  43ee68:	ldr	x8, [x19, #136]
  43ee6c:	ldr	x8, [x8, #8]
  43ee70:	cbnz	x8, 43ee60 <feof@plt+0x3b5c0>
  43ee74:	ldr	x8, [x19, #448]
  43ee78:	ldurb	w8, [x8, #-20]
  43ee7c:	cmp	w8, #0x16
  43ee80:	b.eq	43ee98 <feof@plt+0x3b5f8>  // b.none
  43ee84:	mov	x0, x19
  43ee88:	bl	4499fc <feof@plt+0x4615c>
  43ee8c:	ldrb	w8, [x0, #4]
  43ee90:	cmp	w8, #0x16
  43ee94:	b.ne	43ee84 <feof@plt+0x3b5e4>  // b.any
  43ee98:	mov	w0, #0x20                  	// #32
  43ee9c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  43eea0:	mov	x21, x0
  43eea4:	stp	xzr, xzr, [x0, #16]
  43eea8:	mov	x0, x20
  43eeac:	bl	4030b0 <strlen@plt>
  43eeb0:	add	x0, x0, #0x1
  43eeb4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  43eeb8:	mov	x1, x20
  43eebc:	mov	x22, x0
  43eec0:	str	x0, [x21, #8]
  43eec4:	bl	4032f0 <strcpy@plt>
  43eec8:	ldr	x8, [x19, #1400]
  43eecc:	mov	x0, x19
  43eed0:	mov	x1, x22
  43eed4:	str	x8, [x21]
  43eed8:	bl	449684 <feof@plt+0x45de4>
  43eedc:	ldrb	w8, [x0, #18]
  43eee0:	tst	w8, #0x3
  43eee4:	b.eq	43f004 <feof@plt+0x3b764>  // b.none
  43eee8:	mov	x20, x0
  43eeec:	mov	x0, x19
  43eef0:	mov	x1, x20
  43eef4:	bl	4539cc <feof@plt+0x5012c>
  43eef8:	mov	x22, x0
  43eefc:	bl	4030b0 <strlen@plt>
  43ef00:	mov	x23, x0
  43ef04:	add	x0, x0, #0x2
  43ef08:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  43ef0c:	mov	w8, #0xa                   	// #10
  43ef10:	str	x0, [x21, #16]
  43ef14:	strh	w8, [x0, x23]
  43ef18:	ldr	x8, [x20, #24]
  43ef1c:	ldrb	w9, [x21, #28]
  43ef20:	mov	x1, x22
  43ef24:	mov	x2, x23
  43ef28:	ldr	w8, [x8, #8]
  43ef2c:	str	w8, [x21, #24]
  43ef30:	ldr	x8, [x20, #24]
  43ef34:	ldrb	w8, [x8, #19]
  43ef38:	bfxil	w9, w8, #4, #1
  43ef3c:	strb	w9, [x21, #28]
  43ef40:	ldr	x8, [x20, #24]
  43ef44:	and	w9, w9, #0xfffffffd
  43ef48:	ldrb	w8, [x8, #19]
  43ef4c:	lsr	w8, w8, #4
  43ef50:	and	w8, w8, #0x2
  43ef54:	orr	w8, w8, w9
  43ef58:	strb	w8, [x21, #28]
  43ef5c:	bl	402fc0 <memcpy@plt>
  43ef60:	b	43f00c <feof@plt+0x3b76c>
  43ef64:	ldr	x8, [x19, #448]
  43ef68:	adrp	x4, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43ef6c:	add	x4, x4, #0xebc
  43ef70:	mov	w1, #0x3                   	// #3
  43ef74:	ldur	w2, [x8, #-24]
  43ef78:	mov	x0, x19
  43ef7c:	mov	w3, wzr
  43ef80:	bl	4429b8 <feof@plt+0x3f118>
  43ef84:	ldr	x8, [x19, #448]
  43ef88:	ldurb	w8, [x8, #-20]
  43ef8c:	cmp	w8, #0x16
  43ef90:	b.eq	43efd0 <feof@plt+0x3b730>  // b.none
  43ef94:	mov	x0, x19
  43ef98:	bl	4499fc <feof@plt+0x4615c>
  43ef9c:	ldrb	w8, [x0, #4]
  43efa0:	cmp	w8, #0x16
  43efa4:	b.eq	43efd0 <feof@plt+0x3b730>  // b.none
  43efa8:	ldr	x8, [x19, #144]
  43efac:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43efb0:	add	x2, x2, #0xadd
  43efb4:	mov	x0, x19
  43efb8:	ldr	x3, [x8, #8]
  43efbc:	mov	w1, wzr
  43efc0:	bl	442758 <feof@plt+0x3eeb8>
  43efc4:	b	43efd0 <feof@plt+0x3b730>
  43efc8:	mov	x0, x19
  43efcc:	bl	452120 <feof@plt+0x4e880>
  43efd0:	ldr	x8, [x19, #136]
  43efd4:	ldr	x8, [x8, #8]
  43efd8:	cbnz	x8, 43efc8 <feof@plt+0x3b728>
  43efdc:	ldr	x8, [x19, #448]
  43efe0:	ldurb	w8, [x8, #-20]
  43efe4:	cmp	w8, #0x16
  43efe8:	b.eq	43f010 <feof@plt+0x3b770>  // b.none
  43efec:	mov	x0, x19
  43eff0:	bl	4499fc <feof@plt+0x4615c>
  43eff4:	ldrb	w8, [x0, #4]
  43eff8:	cmp	w8, #0x16
  43effc:	b.ne	43efec <feof@plt+0x3b74c>  // b.any
  43f000:	b	43f010 <feof@plt+0x3b770>
  43f004:	mov	w8, #0x4                   	// #4
  43f008:	strb	w8, [x21, #28]
  43f00c:	str	x21, [x19, #1400]
  43f010:	mov	sp, x29
  43f014:	ldp	x20, x19, [sp, #48]
  43f018:	ldp	x22, x21, [sp, #32]
  43f01c:	ldr	x23, [sp, #16]
  43f020:	ldp	x29, x30, [sp], #64
  43f024:	ret
  43f028:	stp	x29, x30, [sp, #-64]!
  43f02c:	stp	x24, x23, [sp, #16]
  43f030:	stp	x22, x21, [sp, #32]
  43f034:	stp	x20, x19, [sp, #48]
  43f038:	ldr	x20, [x0, #1400]
  43f03c:	mov	x29, sp
  43f040:	mov	x19, x0
  43f044:	bl	43f94c <feof@plt+0x3c0ac>
  43f048:	cbz	x0, 43f198 <feof@plt+0x3b8f8>
  43f04c:	ldr	w8, [x0, #8]
  43f050:	mov	x10, sp
  43f054:	add	w9, w8, #0x2
  43f058:	add	x9, x9, #0xf
  43f05c:	and	x9, x9, #0x1fffffff0
  43f060:	sub	x21, x10, x9
  43f064:	mov	sp, x21
  43f068:	ldr	x9, [x0, #16]
  43f06c:	mov	x10, x9
  43f070:	ldrb	w11, [x10], #1
  43f074:	add	x8, x9, x8
  43f078:	sub	x8, x8, #0x1
  43f07c:	cmp	w11, #0x4c
  43f080:	csel	x9, x9, x10, ne  // ne = any
  43f084:	add	x10, x9, #0x1
  43f088:	cmp	x10, x8
  43f08c:	mov	x9, x21
  43f090:	b.cs	43f0dc <feof@plt+0x3b83c>  // b.hs, b.nlast
  43f094:	mov	x9, x21
  43f098:	b	43f0b0 <feof@plt+0x3b810>
  43f09c:	mov	x10, x12
  43f0a0:	add	x10, x10, #0x1
  43f0a4:	cmp	x10, x8
  43f0a8:	strb	w11, [x9], #1
  43f0ac:	b.cs	43f0dc <feof@plt+0x3b83c>  // b.hs, b.nlast
  43f0b0:	ldrb	w11, [x10]
  43f0b4:	cmp	w11, #0x5c
  43f0b8:	b.ne	43f0a0 <feof@plt+0x3b800>  // b.any
  43f0bc:	mov	x12, x10
  43f0c0:	ldrb	w11, [x12, #1]!
  43f0c4:	cmp	w11, #0x5c
  43f0c8:	b.eq	43f09c <feof@plt+0x3b7fc>  // b.none
  43f0cc:	cmp	w11, #0x22
  43f0d0:	b.eq	43f09c <feof@plt+0x3b7fc>  // b.none
  43f0d4:	mov	w11, #0x5c                  	// #92
  43f0d8:	b	43f0a0 <feof@plt+0x3b800>
  43f0dc:	strb	wzr, [x9]
  43f0e0:	ldr	x8, [x19, #448]
  43f0e4:	ldurb	w8, [x8, #-20]
  43f0e8:	cmp	w8, #0x16
  43f0ec:	b.eq	43f12c <feof@plt+0x3b88c>  // b.none
  43f0f0:	mov	x0, x19
  43f0f4:	bl	4499fc <feof@plt+0x4615c>
  43f0f8:	ldrb	w8, [x0, #4]
  43f0fc:	cmp	w8, #0x16
  43f100:	b.eq	43f12c <feof@plt+0x3b88c>  // b.none
  43f104:	ldr	x8, [x19, #144]
  43f108:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43f10c:	add	x2, x2, #0xadd
  43f110:	mov	x0, x19
  43f114:	ldr	x3, [x8, #8]
  43f118:	mov	w1, wzr
  43f11c:	bl	442758 <feof@plt+0x3eeb8>
  43f120:	b	43f12c <feof@plt+0x3b88c>
  43f124:	mov	x0, x19
  43f128:	bl	452120 <feof@plt+0x4e880>
  43f12c:	ldr	x8, [x19, #136]
  43f130:	ldr	x8, [x8, #8]
  43f134:	cbnz	x8, 43f124 <feof@plt+0x3b884>
  43f138:	ldr	x8, [x19, #448]
  43f13c:	ldurb	w8, [x8, #-20]
  43f140:	cmp	w8, #0x16
  43f144:	b.eq	43f15c <feof@plt+0x3b8bc>  // b.none
  43f148:	mov	x0, x19
  43f14c:	bl	4499fc <feof@plt+0x4615c>
  43f150:	ldrb	w8, [x0, #4]
  43f154:	cmp	w8, #0x16
  43f158:	b.ne	43f148 <feof@plt+0x3b8a8>  // b.any
  43f15c:	cbz	x20, 43f234 <feof@plt+0x3b994>
  43f160:	ldr	x22, [x20, #8]
  43f164:	mov	x1, x21
  43f168:	mov	x0, x22
  43f16c:	bl	403640 <strcmp@plt>
  43f170:	cbz	w0, 43f24c <feof@plt+0x3b9ac>
  43f174:	mov	x23, x20
  43f178:	ldr	x20, [x20]
  43f17c:	cbz	x20, 43f234 <feof@plt+0x3b994>
  43f180:	ldr	x22, [x20, #8]
  43f184:	mov	x1, x21
  43f188:	mov	x0, x22
  43f18c:	bl	403640 <strcmp@plt>
  43f190:	cbnz	w0, 43f174 <feof@plt+0x3b8d4>
  43f194:	b	43f250 <feof@plt+0x3b9b0>
  43f198:	ldr	x8, [x19, #448]
  43f19c:	adrp	x4, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43f1a0:	add	x4, x4, #0xee1
  43f1a4:	mov	w1, #0x3                   	// #3
  43f1a8:	ldur	w2, [x8, #-24]
  43f1ac:	mov	x0, x19
  43f1b0:	mov	w3, wzr
  43f1b4:	bl	4429b8 <feof@plt+0x3f118>
  43f1b8:	ldr	x8, [x19, #448]
  43f1bc:	ldurb	w8, [x8, #-20]
  43f1c0:	cmp	w8, #0x16
  43f1c4:	b.eq	43f204 <feof@plt+0x3b964>  // b.none
  43f1c8:	mov	x0, x19
  43f1cc:	bl	4499fc <feof@plt+0x4615c>
  43f1d0:	ldrb	w8, [x0, #4]
  43f1d4:	cmp	w8, #0x16
  43f1d8:	b.eq	43f204 <feof@plt+0x3b964>  // b.none
  43f1dc:	ldr	x8, [x19, #144]
  43f1e0:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43f1e4:	add	x2, x2, #0xadd
  43f1e8:	mov	x0, x19
  43f1ec:	ldr	x3, [x8, #8]
  43f1f0:	mov	w1, wzr
  43f1f4:	bl	442758 <feof@plt+0x3eeb8>
  43f1f8:	b	43f204 <feof@plt+0x3b964>
  43f1fc:	mov	x0, x19
  43f200:	bl	452120 <feof@plt+0x4e880>
  43f204:	ldr	x8, [x19, #136]
  43f208:	ldr	x8, [x8, #8]
  43f20c:	cbnz	x8, 43f1fc <feof@plt+0x3b95c>
  43f210:	ldr	x8, [x19, #448]
  43f214:	ldurb	w8, [x8, #-20]
  43f218:	cmp	w8, #0x16
  43f21c:	b.eq	43f234 <feof@plt+0x3b994>  // b.none
  43f220:	mov	x0, x19
  43f224:	bl	4499fc <feof@plt+0x4615c>
  43f228:	ldrb	w8, [x0, #4]
  43f22c:	cmp	w8, #0x16
  43f230:	b.ne	43f220 <feof@plt+0x3b980>  // b.any
  43f234:	mov	sp, x29
  43f238:	ldp	x20, x19, [sp, #48]
  43f23c:	ldp	x22, x21, [sp, #32]
  43f240:	ldp	x24, x23, [sp, #16]
  43f244:	ldp	x29, x30, [sp], #64
  43f248:	ret
  43f24c:	mov	x23, xzr
  43f250:	ldr	x8, [x20]
  43f254:	add	x9, x19, #0x578
  43f258:	cmp	x23, #0x0
  43f25c:	csel	x9, x9, x23, eq  // eq = none
  43f260:	mov	x0, x19
  43f264:	mov	x1, x22
  43f268:	str	x8, [x9]
  43f26c:	bl	449684 <feof@plt+0x45de4>
  43f270:	cbz	x0, 43f440 <feof@plt+0x3bba0>
  43f274:	ldr	x8, [x19, #1024]
  43f278:	mov	x21, x0
  43f27c:	cbz	x8, 43f288 <feof@plt+0x3b9e8>
  43f280:	mov	x0, x19
  43f284:	blr	x8
  43f288:	ldrb	w8, [x21, #18]
  43f28c:	tbz	w8, #1, 43f2c8 <feof@plt+0x3ba28>
  43f290:	ldr	x8, [x19, #944]
  43f294:	cbz	x8, 43f2a8 <feof@plt+0x3ba08>
  43f298:	ldr	w1, [x19, #48]
  43f29c:	mov	x0, x19
  43f2a0:	mov	x2, x21
  43f2a4:	blr	x8
  43f2a8:	ldrb	w8, [x19, #1151]
  43f2ac:	cbz	w8, 43f2c0 <feof@plt+0x3ba20>
  43f2b0:	mov	x0, x19
  43f2b4:	mov	x1, x21
  43f2b8:	mov	x2, xzr
  43f2bc:	bl	451a20 <feof@plt+0x4e180>
  43f2c0:	mov	x0, x21
  43f2c4:	bl	452ac8 <feof@plt+0x4f228>
  43f2c8:	ldrb	w8, [x20, #28]
  43f2cc:	tbnz	w8, #2, 43f440 <feof@plt+0x3bba0>
  43f2d0:	ldr	x21, [x20, #16]
  43f2d4:	adrp	x1, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43f2d8:	add	x1, x1, #0xf05
  43f2dc:	mov	x0, x21
  43f2e0:	bl	403360 <strcspn@plt>
  43f2e4:	mov	x22, x0
  43f2e8:	mov	x0, x19
  43f2ec:	mov	x1, x21
  43f2f0:	mov	w2, w22
  43f2f4:	bl	448cd8 <feof@plt+0x45438>
  43f2f8:	ldr	x8, [x20, #16]
  43f2fc:	mov	x21, x0
  43f300:	mov	w1, #0xa                   	// #10
  43f304:	add	x22, x8, w22, sxtw
  43f308:	mov	x0, x22
  43f30c:	bl	403210 <strchr@plt>
  43f310:	ldr	x9, [x19, #840]
  43f314:	ldr	x8, [x19, #832]
  43f318:	mov	x23, x0
  43f31c:	sub	x9, x9, x8
  43f320:	cmp	x9, #0xc7
  43f324:	b.hi	43f338 <feof@plt+0x3ba98>  // b.pmore
  43f328:	add	x0, x19, #0x328
  43f32c:	mov	w1, #0xc8                  	// #200
  43f330:	bl	47bae8 <_obstack_newchunk@@Base>
  43f334:	ldr	x8, [x19, #832]
  43f338:	ldr	x24, [x19, #824]
  43f33c:	add	x8, x8, #0xc8
  43f340:	str	x8, [x19, #832]
  43f344:	cmp	x8, x24
  43f348:	b.ne	43f358 <feof@plt+0x3bab8>  // b.any
  43f34c:	ldrb	w9, [x19, #888]
  43f350:	orr	w9, w9, #0x2
  43f354:	strb	w9, [x19, #888]
  43f358:	ldr	x10, [x19, #856]
  43f35c:	ldr	x11, [x19, #816]
  43f360:	ldr	x9, [x19, #840]
  43f364:	add	x8, x10, x8
  43f368:	bic	x8, x8, x10
  43f36c:	sub	x10, x8, x11
  43f370:	sub	x11, x9, x11
  43f374:	cmp	x10, x11
  43f378:	str	x8, [x19, #832]
  43f37c:	b.ls	43f388 <feof@plt+0x3bae8>  // b.plast
  43f380:	mov	x8, x9
  43f384:	str	x9, [x19, #832]
  43f388:	str	x8, [x19, #824]
  43f38c:	movi	v0.2d, #0x0
  43f390:	mov	w8, #0x2                   	// #2
  43f394:	str	xzr, [x24, #192]
  43f398:	stp	q0, q0, [x24, #160]
  43f39c:	stp	q0, q0, [x24, #128]
  43f3a0:	stp	q0, q0, [x24, #96]
  43f3a4:	stp	q0, q0, [x24, #64]
  43f3a8:	stp	q0, q0, [x24, #32]
  43f3ac:	stp	q0, q0, [x24]
  43f3b0:	stp	x22, x22, [x24, #16]
  43f3b4:	str	x23, [x24, #32]
  43f3b8:	strb	w8, [x24, #105]
  43f3bc:	ldr	x8, [x19]
  43f3c0:	mov	w22, #0x1                   	// #1
  43f3c4:	strb	w22, [x24, #104]
  43f3c8:	str	x8, [x24, #72]
  43f3cc:	str	x24, [x19]
  43f3d0:	cbz	x24, 43f46c <feof@plt+0x3bbcc>
  43f3d4:	mov	x0, x19
  43f3d8:	bl	448d9c <feof@plt+0x454fc>
  43f3dc:	mov	x0, x19
  43f3e0:	mov	x1, x21
  43f3e4:	strb	w22, [x24, #106]
  43f3e8:	bl	452cac <feof@plt+0x4f40c>
  43f3ec:	tbz	w0, #0, 43f484 <feof@plt+0x3bbe4>
  43f3f0:	mov	x0, x19
  43f3f4:	bl	4407b8 <feof@plt+0x3cf18>
  43f3f8:	ldr	w8, [x20, #24]
  43f3fc:	ldr	x9, [x21, #24]
  43f400:	str	w8, [x9, #8]
  43f404:	ldr	x8, [x21, #24]
  43f408:	ldrb	w9, [x20, #28]
  43f40c:	ldrb	w10, [x8, #19]
  43f410:	ubfiz	w9, w9, #4, #1
  43f414:	and	w10, w10, #0xffffffef
  43f418:	orr	w9, w10, w9
  43f41c:	strb	w9, [x8, #19]
  43f420:	ldr	x8, [x21, #24]
  43f424:	ldrb	w9, [x20, #28]
  43f428:	ldrb	w10, [x8, #19]
  43f42c:	lsl	w9, w9, #4
  43f430:	and	w9, w9, #0x20
  43f434:	and	w10, w10, #0xffffffdf
  43f438:	orr	w9, w10, w9
  43f43c:	strb	w9, [x8, #19]
  43f440:	ldr	x0, [x20, #16]
  43f444:	bl	4031d0 <free@plt>
  43f448:	ldr	x0, [x20, #8]
  43f44c:	bl	4031d0 <free@plt>
  43f450:	mov	x0, x20
  43f454:	mov	sp, x29
  43f458:	ldp	x20, x19, [sp, #48]
  43f45c:	ldp	x22, x21, [sp, #32]
  43f460:	ldp	x24, x23, [sp, #16]
  43f464:	ldp	x29, x30, [sp], #64
  43f468:	b	4031d0 <free@plt>
  43f46c:	adrp	x0, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43f470:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43f474:	add	x0, x0, #0xf09
  43f478:	add	x2, x2, #0xf23
  43f47c:	mov	w1, #0x9ac                 	// #2476
  43f480:	bl	429434 <feof@plt+0x25b94>
  43f484:	adrp	x0, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43f488:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43f48c:	add	x0, x0, #0xf09
  43f490:	add	x2, x2, #0xf23
  43f494:	mov	w1, #0x9a8                 	// #2472
  43f498:	bl	429434 <feof@plt+0x25b94>
  43f49c:	stp	x29, x30, [sp, #-48]!
  43f4a0:	stp	x20, x19, [sp, #32]
  43f4a4:	adrp	x20, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43f4a8:	mov	x19, x0
  43f4ac:	mov	w8, #0x1                   	// #1
  43f4b0:	add	x20, x20, #0xf5b
  43f4b4:	str	x21, [sp, #16]
  43f4b8:	mov	x29, sp
  43f4bc:	strb	w8, [x0, #23]
  43f4c0:	b	43f4d8 <feof@plt+0x3bc38>
  43f4c4:	mov	x0, x21
  43f4c8:	bl	452ac8 <feof@plt+0x4f228>
  43f4cc:	ldrh	w8, [x21, #18]
  43f4d0:	orr	w8, w8, #0x18
  43f4d4:	strh	w8, [x21, #18]
  43f4d8:	mov	x0, x19
  43f4dc:	bl	4499fc <feof@plt+0x4615c>
  43f4e0:	ldrb	w8, [x0, #4]
  43f4e4:	cmp	w8, #0x35
  43f4e8:	b.ne	43f514 <feof@plt+0x3bc74>  // b.any
  43f4ec:	ldr	x21, [x0, #8]
  43f4f0:	ldrh	w8, [x21, #18]
  43f4f4:	tbnz	w8, #3, 43f4d8 <feof@plt+0x3bc38>
  43f4f8:	tbz	w8, #1, 43f4c4 <feof@plt+0x3bc24>
  43f4fc:	ldr	x3, [x21]
  43f500:	mov	x0, x19
  43f504:	mov	w1, wzr
  43f508:	mov	x2, x20
  43f50c:	bl	4424f8 <feof@plt+0x3ec58>
  43f510:	b	43f4c4 <feof@plt+0x3bc24>
  43f514:	cmp	w8, #0x16
  43f518:	b.eq	43f530 <feof@plt+0x3bc90>  // b.none
  43f51c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43f520:	add	x2, x2, #0xf36
  43f524:	mov	w1, #0x3                   	// #3
  43f528:	mov	x0, x19
  43f52c:	bl	4424f8 <feof@plt+0x3ec58>
  43f530:	strb	wzr, [x19, #23]
  43f534:	ldp	x20, x19, [sp, #32]
  43f538:	ldr	x21, [sp, #16]
  43f53c:	ldp	x29, x30, [sp], #48
  43f540:	ret
  43f544:	stp	x29, x30, [sp, #-32]!
  43f548:	ldr	x8, [x0, #40]
  43f54c:	str	x19, [sp, #16]
  43f550:	mov	x19, x0
  43f554:	mov	x29, sp
  43f558:	ldr	w8, [x8, #48]
  43f55c:	cmp	w8, #0x1
  43f560:	b.ne	43f580 <feof@plt+0x3bce0>  // b.any
  43f564:	mov	x0, x19
  43f568:	ldr	x19, [sp, #16]
  43f56c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43f570:	add	x2, x2, #0xf79
  43f574:	mov	w1, wzr
  43f578:	ldp	x29, x30, [sp], #32
  43f57c:	b	4424f8 <feof@plt+0x3ec58>
  43f580:	ldr	x8, [x19, #448]
  43f584:	ldurb	w8, [x8, #-20]
  43f588:	cmp	w8, #0x16
  43f58c:	b.eq	43f5cc <feof@plt+0x3bd2c>  // b.none
  43f590:	mov	x0, x19
  43f594:	bl	4499fc <feof@plt+0x4615c>
  43f598:	ldrb	w8, [x0, #4]
  43f59c:	cmp	w8, #0x16
  43f5a0:	b.eq	43f5cc <feof@plt+0x3bd2c>  // b.none
  43f5a4:	ldr	x8, [x19, #144]
  43f5a8:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43f5ac:	add	x2, x2, #0xadd
  43f5b0:	mov	x0, x19
  43f5b4:	ldr	x3, [x8, #8]
  43f5b8:	mov	w1, wzr
  43f5bc:	bl	442758 <feof@plt+0x3eeb8>
  43f5c0:	b	43f5cc <feof@plt+0x3bd2c>
  43f5c4:	mov	x0, x19
  43f5c8:	bl	452120 <feof@plt+0x4e880>
  43f5cc:	ldr	x8, [x19, #136]
  43f5d0:	ldr	x8, [x8, #8]
  43f5d4:	cbnz	x8, 43f5c4 <feof@plt+0x3bd24>
  43f5d8:	ldr	x8, [x19, #448]
  43f5dc:	ldurb	w8, [x8, #-20]
  43f5e0:	cmp	w8, #0x16
  43f5e4:	b.eq	43f5fc <feof@plt+0x3bd5c>  // b.none
  43f5e8:	mov	x0, x19
  43f5ec:	bl	4499fc <feof@plt+0x4615c>
  43f5f0:	ldrb	w8, [x0, #4]
  43f5f4:	cmp	w8, #0x16
  43f5f8:	b.ne	43f5e8 <feof@plt+0x3bd48>  // b.any
  43f5fc:	mov	x0, x19
  43f600:	ldr	x19, [sp, #16]
  43f604:	mov	w1, #0x1                   	// #1
  43f608:	mov	w2, wzr
  43f60c:	ldp	x29, x30, [sp], #32
  43f610:	b	447a98 <feof@plt+0x441f8>
  43f614:	sub	sp, sp, #0x40
  43f618:	stp	x29, x30, [sp, #16]
  43f61c:	add	x29, sp, #0x10
  43f620:	sub	x1, x29, #0x4
  43f624:	add	x3, sp, #0x8
  43f628:	mov	x2, xzr
  43f62c:	stp	x22, x21, [sp, #32]
  43f630:	stp	x20, x19, [sp, #48]
  43f634:	mov	x20, x0
  43f638:	bl	441c70 <feof@plt+0x3e3d0>
  43f63c:	cbz	x0, 43f710 <feof@plt+0x3be70>
  43f640:	ldur	w2, [x29, #-4]
  43f644:	mov	x19, x0
  43f648:	mov	x0, x20
  43f64c:	mov	x1, x19
  43f650:	bl	447c74 <feof@plt+0x443d4>
  43f654:	tbnz	w0, #31, 43f6f0 <feof@plt+0x3be50>
  43f658:	cbz	w0, 43f708 <feof@plt+0x3be68>
  43f65c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43f660:	add	x2, x2, #0xfc7
  43f664:	mov	x0, x20
  43f668:	mov	w1, wzr
  43f66c:	mov	x3, x19
  43f670:	bl	4424f8 <feof@plt+0x3ec58>
  43f674:	mov	x0, x20
  43f678:	bl	452228 <feof@plt+0x4e988>
  43f67c:	ldrb	w8, [x0, #4]
  43f680:	cmp	w8, #0x16
  43f684:	b.eq	43f708 <feof@plt+0x3be68>  // b.none
  43f688:	mov	w1, #0x1                   	// #1
  43f68c:	mov	x0, x20
  43f690:	bl	4529b4 <feof@plt+0x4f114>
  43f694:	ldr	x8, [x20, #448]
  43f698:	ldrb	w9, [x20, #24]
  43f69c:	mov	x0, x20
  43f6a0:	mov	x1, xzr
  43f6a4:	ldur	w21, [x8, #-24]
  43f6a8:	add	w8, w9, #0x1
  43f6ac:	strb	w8, [x20, #24]
  43f6b0:	bl	44d90c <feof@plt+0x4a06c>
  43f6b4:	ldrb	w8, [x20, #24]
  43f6b8:	mov	x22, x0
  43f6bc:	adrp	x4, 48f000 <_obstack_memory_used@@Base+0x132fc>
  43f6c0:	add	x4, x4, #0x236
  43f6c4:	sub	w8, w8, #0x1
  43f6c8:	mov	x0, x20
  43f6cc:	mov	w1, wzr
  43f6d0:	mov	w2, w21
  43f6d4:	mov	w3, wzr
  43f6d8:	mov	x5, x22
  43f6dc:	strb	w8, [x20, #24]
  43f6e0:	bl	4429b8 <feof@plt+0x3f118>
  43f6e4:	mov	x0, x22
  43f6e8:	bl	4031d0 <free@plt>
  43f6ec:	b	43f708 <feof@plt+0x3be68>
  43f6f0:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43f6f4:	add	x2, x2, #0xfac
  43f6f8:	mov	x0, x20
  43f6fc:	mov	w1, wzr
  43f700:	mov	x3, x19
  43f704:	bl	4424f8 <feof@plt+0x3ec58>
  43f708:	mov	x0, x19
  43f70c:	bl	4031d0 <free@plt>
  43f710:	ldp	x20, x19, [sp, #48]
  43f714:	ldp	x22, x21, [sp, #32]
  43f718:	ldp	x29, x30, [sp, #16]
  43f71c:	add	sp, sp, #0x40
  43f720:	ret
  43f724:	mov	w1, wzr
  43f728:	b	442444 <feof@plt+0x3eba4>
  43f72c:	mov	w1, #0x1                   	// #1
  43f730:	b	442444 <feof@plt+0x3eba4>
  43f734:	stp	x29, x30, [sp, #-32]!
  43f738:	str	x19, [sp, #16]
  43f73c:	mov	x19, x0
  43f740:	ldr	x0, [x0, #896]
  43f744:	mov	x29, sp
  43f748:	bl	43f778 <feof@plt+0x3bed8>
  43f74c:	sbfiz	x0, x0, #3, #32
  43f750:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  43f754:	ldr	x8, [x19, #896]
  43f758:	mov	x19, x0
  43f75c:	mov	x1, x19
  43f760:	mov	x0, x8
  43f764:	bl	43f7cc <feof@plt+0x3bf2c>
  43f768:	mov	x0, x19
  43f76c:	ldr	x19, [sp, #16]
  43f770:	ldp	x29, x30, [sp], #32
  43f774:	ret
  43f778:	stp	x29, x30, [sp, #-32]!
  43f77c:	stp	x20, x19, [sp, #16]
  43f780:	mov	x29, sp
  43f784:	cbz	x0, 43f7b8 <feof@plt+0x3bf18>
  43f788:	mov	x19, x0
  43f78c:	mov	w20, wzr
  43f790:	b	43f7a0 <feof@plt+0x3bf00>
  43f794:	ldr	x19, [x19]
  43f798:	add	w20, w20, #0x1
  43f79c:	cbz	x19, 43f7bc <feof@plt+0x3bf1c>
  43f7a0:	ldrb	w8, [x19, #16]
  43f7a4:	cbz	w8, 43f794 <feof@plt+0x3bef4>
  43f7a8:	ldr	x0, [x19, #24]
  43f7ac:	bl	43f778 <feof@plt+0x3bed8>
  43f7b0:	add	w20, w0, w20
  43f7b4:	b	43f794 <feof@plt+0x3bef4>
  43f7b8:	mov	w20, wzr
  43f7bc:	mov	w0, w20
  43f7c0:	ldp	x20, x19, [sp, #16]
  43f7c4:	ldp	x29, x30, [sp], #32
  43f7c8:	ret
  43f7cc:	stp	x29, x30, [sp, #-32]!
  43f7d0:	stp	x20, x19, [sp, #16]
  43f7d4:	mov	x19, x1
  43f7d8:	mov	x29, sp
  43f7dc:	cbz	x0, 43f824 <feof@plt+0x3bf84>
  43f7e0:	mov	x20, x0
  43f7e4:	b	43f808 <feof@plt+0x3bf68>
  43f7e8:	ldr	x8, [x20, #8]
  43f7ec:	ldr	w1, [x8, #8]
  43f7f0:	ldr	x0, [x8]
  43f7f4:	add	w2, w1, #0x1
  43f7f8:	bl	47d160 <_obstack_memory_used@@Base+0x145c>
  43f7fc:	str	x0, [x19], #8
  43f800:	ldr	x20, [x20]
  43f804:	cbz	x20, 43f824 <feof@plt+0x3bf84>
  43f808:	ldrb	w8, [x20, #16]
  43f80c:	cbz	w8, 43f7e8 <feof@plt+0x3bf48>
  43f810:	ldr	x0, [x20, #24]
  43f814:	mov	x1, x19
  43f818:	bl	43f7cc <feof@plt+0x3bf2c>
  43f81c:	mov	x19, x0
  43f820:	b	43f7e8 <feof@plt+0x3bf48>
  43f824:	mov	x0, x19
  43f828:	ldp	x20, x19, [sp, #16]
  43f82c:	ldp	x29, x30, [sp], #32
  43f830:	ret
  43f834:	stp	x29, x30, [sp, #-32]!
  43f838:	ldr	x8, [x0, #896]
  43f83c:	str	x19, [sp, #16]
  43f840:	mov	x19, x1
  43f844:	mov	x2, x19
  43f848:	mov	x1, x8
  43f84c:	mov	x29, sp
  43f850:	bl	43f864 <feof@plt+0x3bfc4>
  43f854:	mov	x0, x19
  43f858:	ldr	x19, [sp, #16]
  43f85c:	ldp	x29, x30, [sp], #32
  43f860:	b	4031d0 <free@plt>
  43f864:	stp	x29, x30, [sp, #-48]!
  43f868:	stp	x20, x19, [sp, #32]
  43f86c:	mov	x19, x2
  43f870:	stp	x22, x21, [sp, #16]
  43f874:	mov	x29, sp
  43f878:	cbz	x1, 43f8d8 <feof@plt+0x3c038>
  43f87c:	mov	x20, x1
  43f880:	mov	x21, x0
  43f884:	b	43f8b8 <feof@plt+0x3c018>
  43f888:	ldr	x22, [x19]
  43f88c:	mov	x0, x22
  43f890:	bl	4030b0 <strlen@plt>
  43f894:	mov	x2, x0
  43f898:	mov	x0, x21
  43f89c:	mov	x1, x22
  43f8a0:	bl	448cd8 <feof@plt+0x45438>
  43f8a4:	str	x0, [x20, #8]
  43f8a8:	ldr	x0, [x19], #8
  43f8ac:	bl	4031d0 <free@plt>
  43f8b0:	ldr	x20, [x20]
  43f8b4:	cbz	x20, 43f8d8 <feof@plt+0x3c038>
  43f8b8:	ldrb	w8, [x20, #16]
  43f8bc:	cbz	w8, 43f888 <feof@plt+0x3bfe8>
  43f8c0:	ldr	x1, [x20, #24]
  43f8c4:	mov	x0, x21
  43f8c8:	mov	x2, x19
  43f8cc:	bl	43f864 <feof@plt+0x3bfc4>
  43f8d0:	mov	x19, x0
  43f8d4:	b	43f888 <feof@plt+0x3bfe8>
  43f8d8:	mov	x0, x19
  43f8dc:	ldp	x20, x19, [sp, #32]
  43f8e0:	ldp	x22, x21, [sp, #16]
  43f8e4:	ldp	x29, x30, [sp], #48
  43f8e8:	ret
  43f8ec:	stp	x29, x30, [sp, #-32]!
  43f8f0:	stp	x20, x19, [sp, #16]
  43f8f4:	mov	x29, sp
  43f8f8:	mov	w20, w1
  43f8fc:	mov	x19, x0
  43f900:	bl	43f94c <feof@plt+0x3c0ac>
  43f904:	mov	w8, #0x53                  	// #83
  43f908:	strb	w8, [x19, #156]
  43f90c:	cbz	x0, 43f928 <feof@plt+0x3c088>
  43f910:	add	x1, x0, #0x8
  43f914:	mov	x0, x19
  43f918:	mov	w2, w20
  43f91c:	bl	43fa24 <feof@plt+0x3c184>
  43f920:	mov	w0, #0x1                   	// #1
  43f924:	b	43f940 <feof@plt+0x3c0a0>
  43f928:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  43f92c:	add	x2, x2, #0x91c
  43f930:	mov	w1, #0x3                   	// #3
  43f934:	mov	x0, x19
  43f938:	bl	4424f8 <feof@plt+0x3ec58>
  43f93c:	mov	w0, wzr
  43f940:	ldp	x20, x19, [sp, #16]
  43f944:	ldp	x29, x30, [sp], #32
  43f948:	ret
  43f94c:	stp	x29, x30, [sp, #-48]!
  43f950:	stp	x20, x19, [sp, #32]
  43f954:	mov	x19, x0
  43f958:	str	x21, [sp, #16]
  43f95c:	mov	x29, sp
  43f960:	mov	x0, x19
  43f964:	bl	452228 <feof@plt+0x4e988>
  43f968:	ldrb	w8, [x0, #4]
  43f96c:	cmp	w8, #0x53
  43f970:	b.eq	43f960 <feof@plt+0x3c0c0>  // b.none
  43f974:	cmp	w8, #0x16
  43f978:	b.ne	43f990 <feof@plt+0x3c0f0>  // b.any
  43f97c:	mov	x20, x0
  43f980:	mov	w1, #0x1                   	// #1
  43f984:	mov	x0, x19
  43f988:	bl	4529b4 <feof@plt+0x4f114>
  43f98c:	ldrb	w8, [x20, #4]
  43f990:	cmp	w8, #0x14
  43f994:	b.ne	43fa10 <feof@plt+0x3c170>  // b.any
  43f998:	mov	x0, x19
  43f99c:	bl	452228 <feof@plt+0x4e988>
  43f9a0:	ldrb	w8, [x0, #4]
  43f9a4:	cmp	w8, #0x53
  43f9a8:	b.eq	43f998 <feof@plt+0x3c0f8>  // b.none
  43f9ac:	mov	x20, x0
  43f9b0:	cmp	w8, #0x16
  43f9b4:	b.ne	43f9c8 <feof@plt+0x3c128>  // b.any
  43f9b8:	mov	w1, #0x1                   	// #1
  43f9bc:	mov	x0, x19
  43f9c0:	bl	4529b4 <feof@plt+0x4f114>
  43f9c4:	ldrb	w8, [x20, #4]
  43f9c8:	sub	w8, w8, #0x3e
  43f9cc:	cmp	w8, #0x4
  43f9d0:	b.hi	43fa10 <feof@plt+0x3c170>  // b.pmore
  43f9d4:	mov	x0, x19
  43f9d8:	bl	452228 <feof@plt+0x4e988>
  43f9dc:	ldrb	w8, [x0, #4]
  43f9e0:	cmp	w8, #0x53
  43f9e4:	b.eq	43f9d4 <feof@plt+0x3c134>  // b.none
  43f9e8:	cmp	w8, #0x16
  43f9ec:	b.ne	43fa04 <feof@plt+0x3c164>  // b.any
  43f9f0:	mov	x21, x0
  43f9f4:	mov	w1, #0x1                   	// #1
  43f9f8:	mov	x0, x19
  43f9fc:	bl	4529b4 <feof@plt+0x4f114>
  43fa00:	ldrb	w8, [x21, #4]
  43fa04:	cmp	w8, #0x15
  43fa08:	csel	x0, x20, xzr, eq  // eq = none
  43fa0c:	b	43fa14 <feof@plt+0x3c174>
  43fa10:	mov	x0, xzr
  43fa14:	ldp	x20, x19, [sp, #32]
  43fa18:	ldr	x21, [sp, #16]
  43fa1c:	ldp	x29, x30, [sp], #48
  43fa20:	ret
  43fa24:	stp	x29, x30, [sp, #-96]!
  43fa28:	stp	x28, x27, [sp, #16]
  43fa2c:	stp	x26, x25, [sp, #32]
  43fa30:	stp	x24, x23, [sp, #48]
  43fa34:	stp	x22, x21, [sp, #64]
  43fa38:	stp	x20, x19, [sp, #80]
  43fa3c:	ldr	w8, [x1]
  43fa40:	mov	x10, sp
  43fa44:	mov	w20, w2
  43fa48:	mov	x19, x0
  43fa4c:	sub	w9, w8, #0x1
  43fa50:	add	x9, x9, #0xf
  43fa54:	and	x9, x9, #0x1fffffff0
  43fa58:	sub	x21, x10, x9
  43fa5c:	mov	x29, sp
  43fa60:	mov	sp, x21
  43fa64:	ldr	x9, [x1, #8]
  43fa68:	mov	x22, x21
  43fa6c:	mov	x10, x9
  43fa70:	ldrb	w11, [x10], #1
  43fa74:	add	x8, x9, x8
  43fa78:	sub	x8, x8, #0x1
  43fa7c:	cmp	w11, #0x4c
  43fa80:	csel	x9, x9, x10, ne  // ne = any
  43fa84:	add	x9, x9, #0x1
  43fa88:	cmp	x9, x8
  43fa8c:	b.cs	43fad8 <feof@plt+0x3c238>  // b.hs, b.nlast
  43fa90:	mov	x22, x21
  43fa94:	b	43faac <feof@plt+0x3c20c>
  43fa98:	mov	x9, x11
  43fa9c:	add	x9, x9, #0x1
  43faa0:	cmp	x9, x8
  43faa4:	strb	w10, [x22], #1
  43faa8:	b.cs	43fad8 <feof@plt+0x3c238>  // b.hs, b.nlast
  43faac:	ldrb	w10, [x9]
  43fab0:	cmp	w10, #0x5c
  43fab4:	b.ne	43fa9c <feof@plt+0x3c1fc>  // b.any
  43fab8:	mov	x11, x9
  43fabc:	ldrb	w10, [x11, #1]!
  43fac0:	cmp	w10, #0x5c
  43fac4:	b.eq	43fa98 <feof@plt+0x3c1f8>  // b.none
  43fac8:	cmp	w10, #0x22
  43facc:	b.eq	43fa98 <feof@plt+0x3c1f8>  // b.none
  43fad0:	mov	w10, #0x5c                  	// #92
  43fad4:	b	43fa9c <feof@plt+0x3c1fc>
  43fad8:	mov	w8, #0xa                   	// #10
  43fadc:	strb	w8, [x22]
  43fae0:	ldr	x23, [x19, #136]
  43fae4:	ldr	x24, [x19, #448]
  43fae8:	ldr	x25, [x19, #488]
  43faec:	mov	w0, #0x1                   	// #1
  43faf0:	mov	w1, #0x38                  	// #56
  43faf4:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  43faf8:	ldr	x8, [x19, #840]
  43fafc:	ldr	x9, [x19, #832]
  43fb00:	str	x0, [x19, #136]
  43fb04:	sub	x8, x8, x9
  43fb08:	cmp	x8, #0xc7
  43fb0c:	b.hi	43fb20 <feof@plt+0x3c280>  // b.pmore
  43fb10:	add	x0, x19, #0x328
  43fb14:	mov	w1, #0xc8                  	// #200
  43fb18:	bl	47bae8 <_obstack_newchunk@@Base>
  43fb1c:	ldr	x9, [x19, #832]
  43fb20:	ldr	x8, [x19, #824]
  43fb24:	add	x9, x9, #0xc8
  43fb28:	str	x9, [x19, #832]
  43fb2c:	cmp	x9, x8
  43fb30:	b.ne	43fb40 <feof@plt+0x3c2a0>  // b.any
  43fb34:	ldrb	w10, [x19, #888]
  43fb38:	orr	w10, w10, #0x2
  43fb3c:	strb	w10, [x19, #888]
  43fb40:	ldr	x11, [x19, #856]
  43fb44:	ldr	x12, [x19, #816]
  43fb48:	ldr	x10, [x19, #840]
  43fb4c:	add	x9, x11, x9
  43fb50:	bic	x9, x9, x11
  43fb54:	sub	x11, x9, x12
  43fb58:	sub	x12, x10, x12
  43fb5c:	cmp	x11, x12
  43fb60:	str	x9, [x19, #832]
  43fb64:	b.ls	43fb70 <feof@plt+0x3c2d0>  // b.plast
  43fb68:	mov	x9, x10
  43fb6c:	str	x10, [x19, #832]
  43fb70:	str	x9, [x19, #824]
  43fb74:	movi	v0.2d, #0x0
  43fb78:	mov	w9, #0x2                   	// #2
  43fb7c:	str	xzr, [x8, #192]
  43fb80:	stp	q0, q0, [x8, #160]
  43fb84:	stp	q0, q0, [x8, #128]
  43fb88:	stp	q0, q0, [x8, #96]
  43fb8c:	stp	q0, q0, [x8, #64]
  43fb90:	stp	q0, q0, [x8, #32]
  43fb94:	stp	q0, q0, [x8]
  43fb98:	stp	x21, x21, [x8, #16]
  43fb9c:	str	x22, [x8, #32]
  43fba0:	strb	w9, [x8, #105]
  43fba4:	ldr	x10, [x19]
  43fba8:	mov	w9, #0x1                   	// #1
  43fbac:	strb	w9, [x8, #104]
  43fbb0:	str	x10, [x8, #72]
  43fbb4:	str	x8, [x19]
  43fbb8:	cbz	x10, 43fbc4 <feof@plt+0x3c324>
  43fbbc:	ldr	x10, [x10, #80]
  43fbc0:	str	x10, [x8, #80]
  43fbc4:	ldr	x8, [x19, #40]
  43fbc8:	strb	w9, [x19, #16]
  43fbcc:	mov	w9, #0x53                  	// #83
  43fbd0:	strb	wzr, [x19, #21]
  43fbd4:	strb	w9, [x19, #156]
  43fbd8:	ldr	w8, [x8, #60]
  43fbdc:	mov	x0, x19
  43fbe0:	str	w8, [x19, #48]
  43fbe4:	bl	448d9c <feof@plt+0x454fc>
  43fbe8:	ldr	x21, [x19, #144]
  43fbec:	adrp	x8, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  43fbf0:	add	x8, x8, #0x1c8
  43fbf4:	mov	x0, x19
  43fbf8:	str	x8, [x19, #144]
  43fbfc:	bl	441408 <feof@plt+0x3db68>
  43fc00:	ldrb	w9, [x19, #1160]
  43fc04:	ldrb	w8, [x19, #32]
  43fc08:	cbz	w9, 43fc3c <feof@plt+0x3c39c>
  43fc0c:	cbnz	w8, 43fc1c <feof@plt+0x3c37c>
  43fc10:	ldrb	w8, [x19, #24]
  43fc14:	sub	w8, w8, #0x1
  43fc18:	strb	w8, [x19, #24]
  43fc1c:	ldr	x8, [x19, #144]
  43fc20:	adrp	x9, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  43fc24:	add	x9, x9, #0xc0
  43fc28:	cmp	x8, x9
  43fc2c:	b.eq	43fc94 <feof@plt+0x3c3f4>  // b.none
  43fc30:	mov	x0, x19
  43fc34:	bl	457368 <feof@plt+0x53ac8>
  43fc38:	b	43fc94 <feof@plt+0x3c3f4>
  43fc3c:	cbnz	w8, 43fc94 <feof@plt+0x3c3f4>
  43fc40:	b	43fc4c <feof@plt+0x3c3ac>
  43fc44:	mov	x0, x19
  43fc48:	bl	452120 <feof@plt+0x4e880>
  43fc4c:	ldr	x8, [x19, #136]
  43fc50:	ldr	x8, [x8, #8]
  43fc54:	cbnz	x8, 43fc44 <feof@plt+0x3c3a4>
  43fc58:	ldr	x8, [x19, #448]
  43fc5c:	ldurb	w8, [x8, #-20]
  43fc60:	cmp	w8, #0x16
  43fc64:	b.eq	43fc7c <feof@plt+0x3c3dc>  // b.none
  43fc68:	mov	x0, x19
  43fc6c:	bl	4499fc <feof@plt+0x4615c>
  43fc70:	ldrb	w8, [x0, #4]
  43fc74:	cmp	w8, #0x16
  43fc78:	b.ne	43fc68 <feof@plt+0x3c3c8>  // b.any
  43fc7c:	ldr	w8, [x19, #500]
  43fc80:	cbnz	w8, 43fc94 <feof@plt+0x3c3f4>
  43fc84:	ldr	x8, [x19, #472]
  43fc88:	add	x9, x19, #0x1c8
  43fc8c:	str	x9, [x19, #488]
  43fc90:	str	x8, [x19, #448]
  43fc94:	ldrb	w8, [x19, #1123]
  43fc98:	ldrb	w9, [x19, #156]
  43fc9c:	add	x22, x19, #0x98
  43fca0:	strb	wzr, [x19, #16]
  43fca4:	cmp	w8, #0x0
  43fca8:	cset	w8, eq  // eq = none
  43fcac:	cmp	w9, #0x51
  43fcb0:	sturh	wzr, [x19, #19]
  43fcb4:	str	x21, [x19, #144]
  43fcb8:	strb	w8, [x19, #21]
  43fcbc:	b.ne	43fd5c <feof@plt+0x3c4bc>  // b.any
  43fcc0:	mov	w0, #0x4b0                 	// #1200
  43fcc4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  43fcc8:	ldr	q0, [x22]
  43fccc:	ldr	x8, [x22, #16]
  43fcd0:	mov	x21, x0
  43fcd4:	mov	x26, xzr
  43fcd8:	mov	w27, #0x32                  	// #50
  43fcdc:	mov	w22, #0x1                   	// #1
  43fce0:	mov	w28, #0x18                  	// #24
  43fce4:	str	q0, [x0]
  43fce8:	str	x8, [x0, #16]
  43fcec:	b	43fd30 <feof@plt+0x3c490>
  43fcf0:	mov	x0, x19
  43fcf4:	bl	452228 <feof@plt+0x4e988>
  43fcf8:	ldr	q0, [x0]
  43fcfc:	add	x8, x21, x26
  43fd00:	ldr	x9, [x0, #16]
  43fd04:	add	x22, x22, #0x1
  43fd08:	stur	q0, [x8, #24]
  43fd0c:	ldrh	w10, [x8, #30]
  43fd10:	ldrb	w11, [x8, #28]
  43fd14:	str	x9, [x8, #40]
  43fd18:	add	x26, x26, #0x18
  43fd1c:	orr	w9, w10, #0x400
  43fd20:	cmp	w11, #0x52
  43fd24:	str	w20, [x8, #24]
  43fd28:	strh	w9, [x8, #30]
  43fd2c:	b.eq	43fd94 <feof@plt+0x3c4f4>  // b.none
  43fd30:	cmp	x22, w27, uxtw
  43fd34:	b.ne	43fcf0 <feof@plt+0x3c450>  // b.any
  43fd38:	add	w8, w27, w27, lsl #1
  43fd3c:	cmp	w8, #0x0
  43fd40:	cinc	w8, w8, lt  // lt = tstop
  43fd44:	asr	w27, w8, #1
  43fd48:	smull	x1, w27, w28
  43fd4c:	mov	x0, x21
  43fd50:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  43fd54:	mov	x21, x0
  43fd58:	b	43fcf0 <feof@plt+0x3c450>
  43fd5c:	mov	w0, #0x18                  	// #24
  43fd60:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  43fd64:	ldr	x8, [x22, #16]
  43fd68:	ldr	q0, [x22]
  43fd6c:	mov	x21, x0
  43fd70:	str	x8, [x0, #16]
  43fd74:	str	q0, [x0]
  43fd78:	ldr	x8, [x19, #904]
  43fd7c:	cbz	x8, 43fd90 <feof@plt+0x3c4f0>
  43fd80:	ldr	x1, [x19, #448]
  43fd84:	mov	x0, x19
  43fd88:	mov	w2, wzr
  43fd8c:	blr	x8
  43fd90:	mov	w22, #0x1                   	// #1
  43fd94:	ldr	x8, [x19]
  43fd98:	mov	x0, x19
  43fd9c:	str	xzr, [x8, #80]
  43fda0:	bl	4407b8 <feof@plt+0x3cf18>
  43fda4:	ldr	x0, [x19, #136]
  43fda8:	bl	4031d0 <free@plt>
  43fdac:	mov	x0, x19
  43fdb0:	mov	x1, xzr
  43fdb4:	mov	x2, x21
  43fdb8:	mov	w3, w22
  43fdbc:	str	x23, [x19, #136]
  43fdc0:	str	x24, [x19, #448]
  43fdc4:	str	x25, [x19, #488]
  43fdc8:	bl	452000 <feof@plt+0x4e760>
  43fdcc:	mov	sp, x29
  43fdd0:	ldp	x20, x19, [sp, #80]
  43fdd4:	ldp	x22, x21, [sp, #64]
  43fdd8:	ldp	x24, x23, [sp, #48]
  43fddc:	ldp	x26, x25, [sp, #32]
  43fde0:	ldp	x28, x27, [sp, #16]
  43fde4:	ldp	x29, x30, [sp], #96
  43fde8:	ret
  43fdec:	stp	x29, x30, [sp, #-96]!
  43fdf0:	mov	x29, sp
  43fdf4:	stp	x20, x19, [sp, #80]
  43fdf8:	mov	x20, x1
  43fdfc:	add	x2, x29, #0x18
  43fe00:	mov	w1, #0x4                   	// #4
  43fe04:	str	x27, [sp, #16]
  43fe08:	stp	x26, x25, [sp, #32]
  43fe0c:	stp	x24, x23, [sp, #48]
  43fe10:	stp	x22, x21, [sp, #64]
  43fe14:	mov	x21, x0
  43fe18:	bl	43ff04 <feof@plt+0x3c664>
  43fe1c:	mov	x19, x0
  43fe20:	str	wzr, [x20]
  43fe24:	cbz	x0, 43fea8 <feof@plt+0x3c608>
  43fe28:	mov	x23, x19
  43fe2c:	ldr	x26, [x23, #24]!
  43fe30:	cbz	x26, 43fee0 <feof@plt+0x3c640>
  43fe34:	ldr	x24, [x29, #24]
  43fe38:	cbz	x24, 43fec8 <feof@plt+0x3c628>
  43fe3c:	add	x25, x24, #0x18
  43fe40:	b	43fe5c <feof@plt+0x3c5bc>
  43fe44:	ldr	w8, [x26, #12]
  43fe48:	cmp	w27, w8
  43fe4c:	b.eq	43fed0 <feof@plt+0x3c630>  // b.none
  43fe50:	ldr	x23, [x23]
  43fe54:	ldr	x26, [x23]
  43fe58:	cbz	x26, 43fed4 <feof@plt+0x3c634>
  43fe5c:	ldr	w8, [x26, #12]
  43fe60:	ldr	w9, [x24, #12]
  43fe64:	cmp	w8, w9
  43fe68:	b.ne	43fe50 <feof@plt+0x3c5b0>  // b.any
  43fe6c:	cbz	w8, 43fed4 <feof@plt+0x3c634>
  43fe70:	mov	x27, xzr
  43fe74:	add	x21, x26, #0x18
  43fe78:	mov	x22, x25
  43fe7c:	mov	x0, x21
  43fe80:	mov	x1, x22
  43fe84:	bl	44d4c0 <feof@plt+0x49c20>
  43fe88:	cbz	w0, 43fe44 <feof@plt+0x3c5a4>
  43fe8c:	ldr	w8, [x26, #12]
  43fe90:	add	x27, x27, #0x1
  43fe94:	add	x22, x22, #0x18
  43fe98:	add	x21, x21, #0x18
  43fe9c:	cmp	x27, x8
  43fea0:	b.cc	43fe7c <feof@plt+0x3c5dc>  // b.lo, b.ul, b.last
  43fea4:	b	43fe48 <feof@plt+0x3c5a8>
  43fea8:	ldr	x8, [x21, #448]
  43feac:	ldurb	w8, [x8, #-20]
  43feb0:	cmp	w8, #0x16
  43feb4:	b.ne	43fee0 <feof@plt+0x3c640>  // b.any
  43feb8:	mov	w1, #0x1                   	// #1
  43febc:	mov	x0, x21
  43fec0:	bl	4529b4 <feof@plt+0x4f114>
  43fec4:	b	43fee0 <feof@plt+0x3c640>
  43fec8:	mov	w8, #0x1                   	// #1
  43fecc:	b	43fedc <feof@plt+0x3c63c>
  43fed0:	ldr	x26, [x23]
  43fed4:	cmp	x26, #0x0
  43fed8:	cset	w8, ne  // ne = any
  43fedc:	str	w8, [x20]
  43fee0:	cmp	x19, #0x0
  43fee4:	ldp	x20, x19, [sp, #80]
  43fee8:	ldp	x22, x21, [sp, #64]
  43feec:	ldp	x24, x23, [sp, #48]
  43fef0:	ldp	x26, x25, [sp, #32]
  43fef4:	ldr	x27, [sp, #16]
  43fef8:	cset	w0, eq  // eq = none
  43fefc:	ldp	x29, x30, [sp], #96
  43ff00:	ret
  43ff04:	stp	x29, x30, [sp, #-96]!
  43ff08:	stp	x26, x25, [sp, #32]
  43ff0c:	stp	x24, x23, [sp, #48]
  43ff10:	stp	x22, x21, [sp, #64]
  43ff14:	stp	x20, x19, [sp, #80]
  43ff18:	ldrb	w8, [x0, #24]
  43ff1c:	str	x27, [sp, #16]
  43ff20:	mov	x29, sp
  43ff24:	mov	x21, x2
  43ff28:	add	w8, w8, #0x1
  43ff2c:	mov	w22, w1
  43ff30:	mov	x19, x0
  43ff34:	strb	w8, [x0, #24]
  43ff38:	str	xzr, [x2]
  43ff3c:	bl	452228 <feof@plt+0x4e988>
  43ff40:	ldrb	w8, [x0, #4]
  43ff44:	mov	x20, x0
  43ff48:	cmp	w8, #0x35
  43ff4c:	b.eq	43ff74 <feof@plt+0x3c6d4>  // b.none
  43ff50:	cmp	w8, #0x16
  43ff54:	b.ne	440050 <feof@plt+0x3c7b0>  // b.any
  43ff58:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  43ff5c:	add	x2, x2, #0x8
  43ff60:	mov	w1, #0x3                   	// #3
  43ff64:	mov	x0, x19
  43ff68:	bl	4424f8 <feof@plt+0x3ec58>
  43ff6c:	mov	x0, xzr
  43ff70:	b	440108 <feof@plt+0x3c868>
  43ff74:	ldr	w23, [x20]
  43ff78:	mov	x0, x19
  43ff7c:	bl	452228 <feof@plt+0x4e988>
  43ff80:	ldrb	w8, [x0, #4]
  43ff84:	cmp	w8, #0x14
  43ff88:	b.ne	440074 <feof@plt+0x3c7d4>  // b.any
  43ff8c:	mov	x22, x19
  43ff90:	ldr	x8, [x22, #56]!
  43ff94:	ldp	x2, x9, [x8, #16]
  43ff98:	sub	x8, x9, x2
  43ff9c:	cmp	x8, #0x2f
  43ffa0:	b.hi	43ffbc <feof@plt+0x3c71c>  // b.pmore
  43ffa4:	mov	w2, #0x30                  	// #48
  43ffa8:	mov	x0, x19
  43ffac:	mov	x1, x22
  43ffb0:	bl	44dc10 <feof@plt+0x4a370>
  43ffb4:	ldr	x8, [x19, #56]
  43ffb8:	ldr	x2, [x8, #16]
  43ffbc:	mov	w1, #0x1                   	// #1
  43ffc0:	mov	x0, x19
  43ffc4:	bl	452c34 <feof@plt+0x4f394>
  43ffc8:	mov	x23, x0
  43ffcc:	mov	w25, wzr
  43ffd0:	mov	w26, #0x18                  	// #24
  43ffd4:	str	xzr, [x0]
  43ffd8:	b	43fff4 <feof@plt+0x3c754>
  43ffdc:	ldr	x8, [x24, #16]
  43ffe0:	ldr	q0, [x24]
  43ffe4:	madd	x9, x27, x26, x23
  43ffe8:	add	w25, w25, #0x1
  43ffec:	str	x8, [x9, #40]
  43fff0:	stur	q0, [x9, #24]
  43fff4:	mov	x0, x19
  43fff8:	bl	452228 <feof@plt+0x4e988>
  43fffc:	ldrb	w8, [x0, #4]
  440000:	cmp	w8, #0x15
  440004:	b.eq	440094 <feof@plt+0x3c7f4>  // b.none
  440008:	cmp	w8, #0x16
  44000c:	b.eq	4400b0 <feof@plt+0x3c810>  // b.none
  440010:	ldr	x8, [x22]
  440014:	mov	x24, x0
  440018:	mov	w27, w25
  44001c:	ldp	x23, x9, [x8, #16]
  440020:	umull	x8, w25, w26
  440024:	add	x8, x8, #0x48
  440028:	sub	x9, x9, x23
  44002c:	cmp	x9, x8
  440030:	b.cs	43ffdc <feof@plt+0x3c73c>  // b.hs, b.nlast
  440034:	mov	w2, #0x18                  	// #24
  440038:	mov	x0, x19
  44003c:	mov	x1, x22
  440040:	bl	44dc10 <feof@plt+0x4a370>
  440044:	ldr	x8, [x19, #56]
  440048:	ldr	x23, [x8, #16]
  44004c:	b	43ffdc <feof@plt+0x3c73c>
  440050:	ldr	w2, [x20]
  440054:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  440058:	add	x4, x4, #0x24
  44005c:	mov	w1, #0x3                   	// #3
  440060:	mov	x0, x19
  440064:	mov	w3, wzr
  440068:	bl	4429b8 <feof@plt+0x3f118>
  44006c:	mov	x0, xzr
  440070:	b	440108 <feof@plt+0x3c868>
  440074:	cmp	w22, #0x11
  440078:	b.eq	4400bc <feof@plt+0x3c81c>  // b.none
  44007c:	cmp	w22, #0x4
  440080:	b.ne	440134 <feof@plt+0x3c894>  // b.any
  440084:	mov	w1, #0x1                   	// #1
  440088:	mov	x0, x19
  44008c:	bl	4529b4 <feof@plt+0x4f114>
  440090:	b	4400c4 <feof@plt+0x3c824>
  440094:	cbz	w25, 44014c <feof@plt+0x3c8ac>
  440098:	ldrh	w8, [x23, #30]
  44009c:	str	w25, [x23, #12]
  4400a0:	and	w8, w8, #0xfffe
  4400a4:	strh	w8, [x23, #30]
  4400a8:	str	x23, [x21]
  4400ac:	b	4400c4 <feof@plt+0x3c824>
  4400b0:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4400b4:	add	x2, x2, #0x60
  4400b8:	b	43ff60 <feof@plt+0x3c6c0>
  4400bc:	cmp	w8, #0x16
  4400c0:	b.ne	440134 <feof@plt+0x3c894>  // b.any
  4400c4:	ldr	x8, [x20, #8]
  4400c8:	mov	x9, sp
  4400cc:	ldr	w2, [x8, #8]
  4400d0:	add	w20, w2, #0x1
  4400d4:	add	x10, x20, #0xf
  4400d8:	and	x10, x10, #0x1fffffff0
  4400dc:	sub	x21, x9, x10
  4400e0:	mov	sp, x21
  4400e4:	mov	w9, #0x23                  	// #35
  4400e8:	mov	x0, x21
  4400ec:	strb	w9, [x0], #1
  4400f0:	ldr	x1, [x8]
  4400f4:	bl	402fc0 <memcpy@plt>
  4400f8:	mov	x0, x19
  4400fc:	mov	x1, x21
  440100:	mov	w2, w20
  440104:	bl	448cd8 <feof@plt+0x45438>
  440108:	ldrb	w8, [x19, #24]
  44010c:	sub	w8, w8, #0x1
  440110:	strb	w8, [x19, #24]
  440114:	mov	sp, x29
  440118:	ldp	x20, x19, [sp, #80]
  44011c:	ldp	x22, x21, [sp, #64]
  440120:	ldp	x24, x23, [sp, #48]
  440124:	ldp	x26, x25, [sp, #32]
  440128:	ldr	x27, [sp, #16]
  44012c:	ldp	x29, x30, [sp], #96
  440130:	ret
  440134:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  440138:	add	x4, x4, #0x44
  44013c:	mov	w1, #0x3                   	// #3
  440140:	mov	x0, x19
  440144:	mov	w2, w23
  440148:	b	440064 <feof@plt+0x3c7c4>
  44014c:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  440150:	add	x2, x2, #0x7f
  440154:	b	43ff60 <feof@plt+0x3c6c0>
  440158:	stp	x29, x30, [sp, #-48]!
  44015c:	stp	x20, x19, [sp, #32]
  440160:	mov	x19, x0
  440164:	mov	x0, x1
  440168:	stp	x22, x21, [sp, #16]
  44016c:	mov	x29, sp
  440170:	mov	x22, x1
  440174:	bl	4030b0 <strlen@plt>
  440178:	add	x9, x0, #0x12
  44017c:	mov	x8, sp
  440180:	and	x9, x9, #0xfffffffffffffff0
  440184:	mov	x20, x0
  440188:	sub	x21, x8, x9
  44018c:	mov	sp, x21
  440190:	mov	x0, x21
  440194:	mov	x1, x22
  440198:	mov	x2, x20
  44019c:	bl	402fc0 <memcpy@plt>
  4401a0:	mov	w1, #0x3d                  	// #61
  4401a4:	mov	x0, x22
  4401a8:	bl	403210 <strchr@plt>
  4401ac:	cbz	x0, 4401bc <feof@plt+0x3c91c>
  4401b0:	sub	x8, x0, x22
  4401b4:	mov	w9, #0x20                  	// #32
  4401b8:	b	4401d0 <feof@plt+0x3c930>
  4401bc:	mov	w9, #0x20                  	// #32
  4401c0:	add	x8, x20, #0x1
  4401c4:	strb	w9, [x21, x20]
  4401c8:	add	x20, x20, #0x2
  4401cc:	mov	w9, #0x31                  	// #49
  4401d0:	strb	w9, [x21, x8]
  4401d4:	mov	w8, #0xa                   	// #10
  4401d8:	mov	x0, x19
  4401dc:	mov	w1, wzr
  4401e0:	mov	x2, x21
  4401e4:	mov	x3, x20
  4401e8:	strb	w8, [x21, x20]
  4401ec:	bl	440204 <feof@plt+0x3c964>
  4401f0:	mov	sp, x29
  4401f4:	ldp	x20, x19, [sp, #32]
  4401f8:	ldp	x22, x21, [sp, #16]
  4401fc:	ldp	x29, x30, [sp], #48
  440200:	ret
  440204:	stp	x29, x30, [sp, #-48]!
  440208:	stp	x22, x21, [sp, #16]
  44020c:	stp	x20, x19, [sp, #32]
  440210:	ldr	x8, [x0, #840]
  440214:	ldr	x9, [x0, #832]
  440218:	mov	x22, x3
  44021c:	mov	x21, x2
  440220:	mov	x19, x0
  440224:	sub	x8, x8, x9
  440228:	cmp	x8, #0xc7
  44022c:	mov	w20, w1
  440230:	mov	x29, sp
  440234:	b.hi	440248 <feof@plt+0x3c9a8>  // b.pmore
  440238:	add	x0, x19, #0x328
  44023c:	mov	w1, #0xc8                  	// #200
  440240:	bl	47bae8 <_obstack_newchunk@@Base>
  440244:	ldr	x9, [x19, #832]
  440248:	ldr	x8, [x19, #824]
  44024c:	add	x9, x9, #0xc8
  440250:	str	x9, [x19, #832]
  440254:	cmp	x9, x8
  440258:	b.ne	440268 <feof@plt+0x3c9c8>  // b.any
  44025c:	ldrb	w10, [x19, #888]
  440260:	orr	w10, w10, #0x2
  440264:	strb	w10, [x19, #888]
  440268:	ldr	x11, [x19, #856]
  44026c:	ldr	x12, [x19, #816]
  440270:	ldr	x10, [x19, #840]
  440274:	add	x9, x11, x9
  440278:	bic	x9, x9, x11
  44027c:	sub	x11, x9, x12
  440280:	sub	x12, x10, x12
  440284:	cmp	x11, x12
  440288:	str	x9, [x19, #832]
  44028c:	b.ls	440298 <feof@plt+0x3c9f8>  // b.plast
  440290:	mov	x9, x10
  440294:	str	x10, [x19, #832]
  440298:	str	x9, [x19, #824]
  44029c:	movi	v0.2d, #0x0
  4402a0:	add	x9, x21, x22
  4402a4:	mov	w10, #0x2                   	// #2
  4402a8:	str	xzr, [x8, #192]
  4402ac:	stp	q0, q0, [x8, #160]
  4402b0:	stp	q0, q0, [x8, #128]
  4402b4:	stp	q0, q0, [x8, #96]
  4402b8:	stp	q0, q0, [x8, #64]
  4402bc:	stp	q0, q0, [x8, #32]
  4402c0:	stp	q0, q0, [x8]
  4402c4:	stp	x21, x21, [x8, #16]
  4402c8:	str	x9, [x8, #32]
  4402cc:	strb	w10, [x8, #105]
  4402d0:	ldr	x9, [x19]
  4402d4:	mov	w10, #0x1                   	// #1
  4402d8:	strb	w10, [x8, #104]
  4402dc:	mov	x0, x19
  4402e0:	str	x9, [x8, #72]
  4402e4:	str	x8, [x19]
  4402e8:	ldr	x8, [x19, #40]
  4402ec:	mov	w9, #0x53                  	// #83
  4402f0:	strb	w10, [x19, #16]
  4402f4:	strb	wzr, [x19, #21]
  4402f8:	strb	w9, [x19, #156]
  4402fc:	ldr	w8, [x8, #60]
  440300:	str	w8, [x19, #48]
  440304:	bl	448d9c <feof@plt+0x454fc>
  440308:	ldrb	w9, [x19, #1160]
  44030c:	adrp	x21, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  440310:	add	x21, x21, #0xc0
  440314:	mov	w8, #0x18                  	// #24
  440318:	smaddl	x8, w20, w8, x21
  44031c:	str	x8, [x19, #144]
  440320:	cbz	w9, 440330 <feof@plt+0x3ca90>
  440324:	mov	x0, x19
  440328:	bl	43e7bc <feof@plt+0x3af1c>
  44032c:	ldr	x8, [x19, #144]
  440330:	ldr	x8, [x8]
  440334:	mov	x0, x19
  440338:	blr	x8
  44033c:	ldrb	w9, [x19, #1160]
  440340:	ldrb	w8, [x19, #32]
  440344:	cbz	w9, 440370 <feof@plt+0x3cad0>
  440348:	cbnz	w8, 440358 <feof@plt+0x3cab8>
  44034c:	ldrb	w8, [x19, #24]
  440350:	sub	w8, w8, #0x1
  440354:	strb	w8, [x19, #24]
  440358:	ldr	x8, [x19, #144]
  44035c:	cmp	x8, x21
  440360:	b.eq	4403c8 <feof@plt+0x3cb28>  // b.none
  440364:	mov	x0, x19
  440368:	bl	457368 <feof@plt+0x53ac8>
  44036c:	b	4403c8 <feof@plt+0x3cb28>
  440370:	cbnz	w8, 4403c8 <feof@plt+0x3cb28>
  440374:	b	440380 <feof@plt+0x3cae0>
  440378:	mov	x0, x19
  44037c:	bl	452120 <feof@plt+0x4e880>
  440380:	ldr	x8, [x19, #136]
  440384:	ldr	x8, [x8, #8]
  440388:	cbnz	x8, 440378 <feof@plt+0x3cad8>
  44038c:	ldr	x8, [x19, #448]
  440390:	ldurb	w8, [x8, #-20]
  440394:	cmp	w8, #0x16
  440398:	b.eq	4403b0 <feof@plt+0x3cb10>  // b.none
  44039c:	mov	x0, x19
  4403a0:	bl	4499fc <feof@plt+0x4615c>
  4403a4:	ldrb	w8, [x0, #4]
  4403a8:	cmp	w8, #0x16
  4403ac:	b.ne	44039c <feof@plt+0x3cafc>  // b.any
  4403b0:	ldr	w8, [x19, #500]
  4403b4:	cbnz	w8, 4403c8 <feof@plt+0x3cb28>
  4403b8:	ldr	x8, [x19, #472]
  4403bc:	add	x9, x19, #0x1c8
  4403c0:	str	x9, [x19, #488]
  4403c4:	str	x8, [x19, #448]
  4403c8:	ldrb	w8, [x19, #1123]
  4403cc:	strb	wzr, [x19, #16]
  4403d0:	sturh	wzr, [x19, #19]
  4403d4:	str	xzr, [x19, #144]
  4403d8:	cmp	w8, #0x0
  4403dc:	cset	w8, eq  // eq = none
  4403e0:	strb	w8, [x19, #21]
  4403e4:	mov	x0, x19
  4403e8:	ldp	x20, x19, [sp, #32]
  4403ec:	ldp	x22, x21, [sp, #16]
  4403f0:	ldp	x29, x30, [sp], #48
  4403f4:	b	4407b8 <feof@plt+0x3cf18>
  4403f8:	sub	sp, sp, #0x120
  4403fc:	stp	x29, x30, [sp, #240]
  440400:	add	x29, sp, #0xf0
  440404:	mov	x9, #0xffffffffffffffd0    	// #-48
  440408:	mov	x10, sp
  44040c:	sub	x11, x29, #0x70
  440410:	movk	x9, #0xff80, lsl #32
  440414:	add	x12, x29, #0x30
  440418:	add	x10, x10, #0x80
  44041c:	add	x11, x11, #0x30
  440420:	stp	x10, x9, [x29, #-16]
  440424:	stp	x12, x11, [x29, #-32]
  440428:	stp	x2, x3, [x29, #-112]
  44042c:	stp	x4, x5, [x29, #-96]
  440430:	stp	x6, x7, [x29, #-80]
  440434:	stp	q1, q2, [sp, #16]
  440438:	str	q0, [sp]
  44043c:	ldp	q1, q0, [x29, #-32]
  440440:	mov	x8, x1
  440444:	stp	x20, x19, [sp, #272]
  440448:	mov	x19, x0
  44044c:	sub	x1, x29, #0x40
  440450:	mov	x0, x8
  440454:	str	x28, [sp, #256]
  440458:	stp	q3, q4, [sp, #48]
  44045c:	stp	q5, q6, [sp, #80]
  440460:	str	q7, [sp, #112]
  440464:	stp	q1, q0, [x29, #-64]
  440468:	bl	47d26c <_obstack_memory_used@@Base+0x1568>
  44046c:	mov	x20, x0
  440470:	mov	x0, x19
  440474:	mov	x1, x20
  440478:	bl	440158 <feof@plt+0x3c8b8>
  44047c:	mov	x0, x20
  440480:	bl	4031d0 <free@plt>
  440484:	ldp	x20, x19, [sp, #272]
  440488:	ldr	x28, [sp, #256]
  44048c:	ldp	x29, x30, [sp, #240]
  440490:	add	sp, sp, #0x120
  440494:	ret
  440498:	stp	x29, x30, [sp, #-48]!
  44049c:	stp	x20, x19, [sp, #32]
  4404a0:	mov	x20, x0
  4404a4:	mov	x0, x1
  4404a8:	stp	x22, x21, [sp, #16]
  4404ac:	mov	x29, sp
  4404b0:	mov	x19, x1
  4404b4:	bl	4030b0 <strlen@plt>
  4404b8:	add	x9, x0, #0x10
  4404bc:	mov	x8, sp
  4404c0:	and	x9, x9, #0xfffffffffffffff0
  4404c4:	sub	x22, x8, x9
  4404c8:	mov	x21, x0
  4404cc:	mov	sp, x22
  4404d0:	mov	x0, x22
  4404d4:	mov	x1, x19
  4404d8:	mov	x2, x21
  4404dc:	bl	402fc0 <memcpy@plt>
  4404e0:	mov	w8, #0xa                   	// #10
  4404e4:	mov	x0, x20
  4404e8:	mov	w1, wzr
  4404ec:	mov	x2, x22
  4404f0:	mov	x3, x21
  4404f4:	strb	w8, [x22, x21]
  4404f8:	bl	440204 <feof@plt+0x3c964>
  4404fc:	mov	sp, x29
  440500:	ldp	x20, x19, [sp, #32]
  440504:	ldp	x22, x21, [sp, #16]
  440508:	ldp	x29, x30, [sp], #48
  44050c:	ret
  440510:	stp	x29, x30, [sp, #-48]!
  440514:	stp	x20, x19, [sp, #32]
  440518:	mov	x20, x0
  44051c:	mov	x0, x1
  440520:	stp	x22, x21, [sp, #16]
  440524:	mov	x29, sp
  440528:	mov	x19, x1
  44052c:	bl	4030b0 <strlen@plt>
  440530:	add	x9, x0, #0x10
  440534:	mov	x8, sp
  440538:	and	x9, x9, #0xfffffffffffffff0
  44053c:	sub	x22, x8, x9
  440540:	mov	x21, x0
  440544:	mov	sp, x22
  440548:	mov	x0, x22
  44054c:	mov	x1, x19
  440550:	mov	x2, x21
  440554:	bl	402fc0 <memcpy@plt>
  440558:	mov	w8, #0xa                   	// #10
  44055c:	mov	w1, #0x7                   	// #7
  440560:	mov	x0, x20
  440564:	mov	x2, x22
  440568:	mov	x3, x21
  44056c:	strb	w8, [x22, x21]
  440570:	bl	440204 <feof@plt+0x3c964>
  440574:	mov	sp, x29
  440578:	ldp	x20, x19, [sp, #32]
  44057c:	ldp	x22, x21, [sp, #16]
  440580:	ldp	x29, x30, [sp], #48
  440584:	ret
  440588:	mov	w2, #0x10                  	// #16
  44058c:	b	440590 <feof@plt+0x3ccf0>
  440590:	stp	x29, x30, [sp, #-64]!
  440594:	stp	x20, x19, [sp, #48]
  440598:	mov	x20, x0
  44059c:	mov	x0, x1
  4405a0:	stp	x24, x23, [sp, #16]
  4405a4:	stp	x22, x21, [sp, #32]
  4405a8:	mov	x29, sp
  4405ac:	mov	w19, w2
  4405b0:	mov	x22, x1
  4405b4:	bl	4030b0 <strlen@plt>
  4405b8:	mov	x21, x0
  4405bc:	mov	w1, #0x3d                  	// #61
  4405c0:	mov	x0, x22
  4405c4:	bl	403210 <strchr@plt>
  4405c8:	add	x9, x21, #0x11
  4405cc:	mov	x8, sp
  4405d0:	and	x9, x9, #0xfffffffffffffff0
  4405d4:	mov	x24, x0
  4405d8:	sub	x23, x8, x9
  4405dc:	mov	sp, x23
  4405e0:	mov	x0, x23
  4405e4:	mov	x1, x22
  4405e8:	mov	x2, x21
  4405ec:	bl	402fc0 <memcpy@plt>
  4405f0:	cbz	x24, 440610 <feof@plt+0x3cd70>
  4405f4:	sub	x8, x24, x22
  4405f8:	mov	w9, #0x28                  	// #40
  4405fc:	strb	w9, [x23, x8]
  440600:	add	x8, x21, #0x1
  440604:	mov	w9, #0x29                  	// #41
  440608:	strb	w9, [x23, x21]
  44060c:	mov	x21, x8
  440610:	mov	w8, #0xa                   	// #10
  440614:	mov	x0, x20
  440618:	mov	w1, w19
  44061c:	mov	x2, x23
  440620:	mov	x3, x21
  440624:	strb	w8, [x23, x21]
  440628:	bl	440204 <feof@plt+0x3c964>
  44062c:	mov	sp, x29
  440630:	ldp	x20, x19, [sp, #48]
  440634:	ldp	x22, x21, [sp, #32]
  440638:	ldp	x24, x23, [sp, #16]
  44063c:	ldp	x29, x30, [sp], #64
  440640:	ret
  440644:	mov	w2, #0x11                  	// #17
  440648:	b	440590 <feof@plt+0x3ccf0>
  44064c:	add	x0, x0, #0x458
  440650:	ret
  440654:	add	x0, x0, #0x388
  440658:	ret
  44065c:	ldp	q0, q1, [x1, #32]
  440660:	ldp	q2, q3, [x1]
  440664:	add	x8, x0, #0x388
  440668:	stp	q0, q1, [x8, #32]
  44066c:	stp	q2, q3, [x8]
  440670:	ldp	q1, q0, [x1, #96]
  440674:	ldp	q3, q2, [x1, #64]
  440678:	stp	q1, q0, [x8, #96]
  44067c:	stp	q3, q2, [x8, #64]
  440680:	ldr	x9, [x1, #176]
  440684:	ldp	q1, q0, [x1, #144]
  440688:	ldr	q2, [x1, #128]
  44068c:	str	x9, [x8, #176]
  440690:	stp	q1, q0, [x8, #144]
  440694:	str	q2, [x8, #128]
  440698:	ret
  44069c:	stp	x29, x30, [sp, #-32]!
  4406a0:	str	x19, [sp, #16]
  4406a4:	mov	x19, x0
  4406a8:	ldr	x0, [x0, #712]
  4406ac:	mov	x29, sp
  4406b0:	cbnz	x0, 4406bc <feof@plt+0x3ce1c>
  4406b4:	bl	455f9c <feof@plt+0x526fc>
  4406b8:	str	x0, [x19, #712]
  4406bc:	ldr	x19, [sp, #16]
  4406c0:	ldp	x29, x30, [sp], #32
  4406c4:	ret
  4406c8:	stp	x29, x30, [sp, #-48]!
  4406cc:	stp	x22, x21, [sp, #16]
  4406d0:	stp	x20, x19, [sp, #32]
  4406d4:	ldr	x9, [x0, #840]
  4406d8:	ldr	x8, [x0, #832]
  4406dc:	mov	w20, w3
  4406e0:	mov	x22, x2
  4406e4:	mov	x19, x0
  4406e8:	sub	x9, x9, x8
  4406ec:	cmp	x9, #0xc7
  4406f0:	mov	x21, x1
  4406f4:	mov	x29, sp
  4406f8:	b.hi	44070c <feof@plt+0x3ce6c>  // b.pmore
  4406fc:	add	x0, x19, #0x328
  440700:	mov	w1, #0xc8                  	// #200
  440704:	bl	47bae8 <_obstack_newchunk@@Base>
  440708:	ldr	x8, [x19, #832]
  44070c:	ldr	x0, [x19, #824]
  440710:	add	x8, x8, #0xc8
  440714:	str	x8, [x19, #832]
  440718:	cmp	x8, x0
  44071c:	b.ne	44072c <feof@plt+0x3ce8c>  // b.any
  440720:	ldrb	w9, [x19, #888]
  440724:	orr	w9, w9, #0x2
  440728:	strb	w9, [x19, #888]
  44072c:	ldr	x10, [x19, #856]
  440730:	ldr	x11, [x19, #816]
  440734:	ldr	x9, [x19, #840]
  440738:	add	x8, x10, x8
  44073c:	bic	x8, x8, x10
  440740:	sub	x10, x8, x11
  440744:	sub	x11, x9, x11
  440748:	cmp	x10, x11
  44074c:	str	x8, [x19, #832]
  440750:	b.ls	44075c <feof@plt+0x3cebc>  // b.plast
  440754:	mov	x8, x9
  440758:	str	x9, [x19, #832]
  44075c:	str	x8, [x19, #824]
  440760:	movi	v0.2d, #0x0
  440764:	add	x8, x21, x22
  440768:	ubfiz	w9, w20, #1, #1
  44076c:	str	xzr, [x0, #192]
  440770:	stp	q0, q0, [x0, #160]
  440774:	stp	q0, q0, [x0, #128]
  440778:	stp	q0, q0, [x0, #96]
  44077c:	stp	q0, q0, [x0, #64]
  440780:	stp	q0, q0, [x0, #32]
  440784:	stp	q0, q0, [x0]
  440788:	stp	x21, x21, [x0, #16]
  44078c:	str	x8, [x0, #32]
  440790:	strb	w9, [x0, #105]
  440794:	ldr	x8, [x19]
  440798:	mov	w9, #0x1                   	// #1
  44079c:	strb	w9, [x0, #104]
  4407a0:	str	x8, [x0, #72]
  4407a4:	str	x0, [x19]
  4407a8:	ldp	x20, x19, [sp, #32]
  4407ac:	ldp	x22, x21, [sp, #16]
  4407b0:	ldp	x29, x30, [sp], #48
  4407b4:	ret
  4407b8:	stp	x29, x30, [sp, #-80]!
  4407bc:	stp	x24, x23, [sp, #32]
  4407c0:	stp	x22, x21, [sp, #48]
  4407c4:	stp	x20, x19, [sp, #64]
  4407c8:	ldr	x21, [x0]
  4407cc:	mov	x19, x0
  4407d0:	str	x25, [sp, #16]
  4407d4:	mov	x29, sp
  4407d8:	ldr	x23, [x21, #96]
  4407dc:	ldr	x20, [x21, #80]
  4407e0:	cbz	x23, 440824 <feof@plt+0x3cf84>
  4407e4:	adrp	x25, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4407e8:	adrp	x22, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  4407ec:	mov	w24, #0x18                  	// #24
  4407f0:	add	x25, x25, #0xc0
  4407f4:	add	x22, x22, #0x949
  4407f8:	ldrsw	x8, [x23, #28]
  4407fc:	ldr	w2, [x23, #8]
  440800:	mov	w1, #0x3                   	// #3
  440804:	mov	x0, x19
  440808:	madd	x8, x8, x24, x25
  44080c:	ldr	x5, [x8, #8]
  440810:	mov	w3, wzr
  440814:	mov	x4, x22
  440818:	bl	4429b8 <feof@plt+0x3f118>
  44081c:	ldr	x23, [x23]
  440820:	cbnz	x23, 4407f8 <feof@plt+0x3cf58>
  440824:	strb	wzr, [x19, #18]
  440828:	ldr	x8, [x21, #72]
  44082c:	str	x8, [x19]
  440830:	ldp	x22, x0, [x21, #40]
  440834:	bl	4031d0 <free@plt>
  440838:	ldr	x8, [x19, #816]
  44083c:	cmp	x8, x21
  440840:	b.cs	44087c <feof@plt+0x3cfdc>  // b.hs, b.nlast
  440844:	ldr	x8, [x19, #840]
  440848:	cmp	x8, x21
  44084c:	b.ls	44087c <feof@plt+0x3cfdc>  // b.plast
  440850:	str	x21, [x19, #824]
  440854:	str	x21, [x19, #832]
  440858:	cbnz	x20, 44088c <feof@plt+0x3cfec>
  44085c:	cbz	x22, 4408f4 <feof@plt+0x3d054>
  440860:	mov	x0, x22
  440864:	ldp	x20, x19, [sp, #64]
  440868:	ldp	x22, x21, [sp, #48]
  44086c:	ldp	x24, x23, [sp, #32]
  440870:	ldr	x25, [sp, #16]
  440874:	ldp	x29, x30, [sp], #80
  440878:	b	4031d0 <free@plt>
  44087c:	add	x0, x19, #0x328
  440880:	mov	x1, x21
  440884:	bl	47bc70 <_obstack_free@@Base>
  440888:	cbz	x20, 44085c <feof@plt+0x3cfbc>
  44088c:	mov	x0, x19
  440890:	mov	x1, x20
  440894:	mov	x2, x22
  440898:	bl	447e40 <feof@plt+0x445a0>
  44089c:	ldr	x0, [x19, #40]
  4408a0:	mov	w1, #0x1                   	// #1
  4408a4:	mov	w2, wzr
  4408a8:	mov	x3, xzr
  4408ac:	mov	w4, wzr
  4408b0:	bl	44e7e4 <feof@plt+0x4af44>
  4408b4:	mov	x20, x0
  4408b8:	cbz	x0, 4408cc <feof@plt+0x3d02c>
  4408bc:	ldr	x0, [x19, #40]
  4408c0:	ldr	w1, [x20, #16]
  4408c4:	mov	w2, #0x7f                  	// #127
  4408c8:	bl	44ecdc <feof@plt+0x4b43c>
  4408cc:	ldr	x2, [x19, #912]
  4408d0:	cbz	x2, 4408f4 <feof@plt+0x3d054>
  4408d4:	mov	x0, x19
  4408d8:	mov	x1, x20
  4408dc:	ldp	x20, x19, [sp, #64]
  4408e0:	ldp	x22, x21, [sp, #48]
  4408e4:	ldp	x24, x23, [sp, #32]
  4408e8:	ldr	x25, [sp, #16]
  4408ec:	ldp	x29, x30, [sp], #80
  4408f0:	br	x2
  4408f4:	ldp	x20, x19, [sp, #64]
  4408f8:	ldp	x22, x21, [sp, #48]
  4408fc:	ldp	x24, x23, [sp, #32]
  440900:	ldr	x25, [sp, #16]
  440904:	ldp	x29, x30, [sp], #80
  440908:	ret
  44090c:	stp	x29, x30, [sp, #-48]!
  440910:	str	x21, [sp, #16]
  440914:	adrp	x21, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  440918:	stp	x20, x19, [sp, #32]
  44091c:	mov	x19, x0
  440920:	mov	x20, xzr
  440924:	add	x21, x21, #0xd0
  440928:	mov	x29, sp
  44092c:	ldur	x1, [x21, #-8]
  440930:	ldrh	w2, [x21], #24
  440934:	mov	x0, x19
  440938:	bl	448cd8 <feof@plt+0x45438>
  44093c:	mov	w8, #0x1                   	// #1
  440940:	bfi	w8, w20, #1, #31
  440944:	add	x20, x20, #0x1
  440948:	cmp	x20, #0x13
  44094c:	strb	w8, [x0, #16]
  440950:	b.ne	44092c <feof@plt+0x3d08c>  // b.any
  440954:	ldp	x20, x19, [sp, #32]
  440958:	ldr	x21, [sp, #16]
  44095c:	ldp	x29, x30, [sp], #48
  440960:	ret
  440964:	b	440968 <feof@plt+0x3d0c8>
  440968:	stp	x29, x30, [sp, #-64]!
  44096c:	stp	x20, x19, [sp, #48]
  440970:	mov	x19, x0
  440974:	mov	w0, #0x400                 	// #1024
  440978:	stp	x24, x23, [sp, #16]
  44097c:	stp	x22, x21, [sp, #32]
  440980:	mov	x29, sp
  440984:	mov	w21, #0x400                 	// #1024
  440988:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44098c:	mov	x20, x0
  440990:	mov	x23, xzr
  440994:	mov	w24, #0x20                  	// #32
  440998:	mov	x0, x19
  44099c:	bl	452228 <feof@plt+0x4e988>
  4409a0:	ldrb	w8, [x0, #4]
  4409a4:	cmp	w8, #0x53
  4409a8:	b.eq	440998 <feof@plt+0x3d0f8>  // b.none
  4409ac:	cmp	w8, #0x2
  4409b0:	b.eq	440a30 <feof@plt+0x3d190>  // b.none
  4409b4:	cmp	w8, #0x16
  4409b8:	b.eq	440a1c <feof@plt+0x3d17c>  // b.none
  4409bc:	mov	x22, x0
  4409c0:	bl	44ce70 <feof@plt+0x495d0>
  4409c4:	add	w8, w0, #0x2
  4409c8:	add	x9, x23, x8
  4409cc:	cmp	x9, x21
  4409d0:	b.ls	4409ec <feof@plt+0x3d14c>  // b.plast
  4409d4:	add	x8, x21, x8
  4409d8:	lsl	x21, x8, #1
  4409dc:	mov	x0, x20
  4409e0:	mov	x1, x21
  4409e4:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4409e8:	mov	x20, x0
  4409ec:	ldrb	w8, [x22, #6]
  4409f0:	tbz	w8, #0, 440a00 <feof@plt+0x3d160>
  4409f4:	add	x8, x23, #0x1
  4409f8:	strb	w24, [x20, x23]
  4409fc:	mov	x23, x8
  440a00:	add	x2, x20, x23
  440a04:	mov	w3, #0x1                   	// #1
  440a08:	mov	x0, x19
  440a0c:	mov	x1, x22
  440a10:	bl	44d044 <feof@plt+0x497a4>
  440a14:	sub	x23, x0, x20
  440a18:	b	440998 <feof@plt+0x3d0f8>
  440a1c:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  440a20:	add	x2, x2, #0x9b
  440a24:	mov	w1, #0x3                   	// #3
  440a28:	mov	x0, x19
  440a2c:	bl	4424f8 <feof@plt+0x3ec58>
  440a30:	strb	wzr, [x20, x23]
  440a34:	mov	x0, x20
  440a38:	ldp	x20, x19, [sp, #48]
  440a3c:	ldp	x22, x21, [sp, #32]
  440a40:	ldp	x24, x23, [sp, #16]
  440a44:	ldp	x29, x30, [sp], #64
  440a48:	ret
  440a4c:	stp	x29, x30, [sp, #-32]!
  440a50:	mov	w1, #0x1                   	// #1
  440a54:	stp	x20, x19, [sp, #16]
  440a58:	mov	x29, sp
  440a5c:	mov	x20, x0
  440a60:	bl	441a44 <feof@plt+0x3e1a4>
  440a64:	cbz	x0, 440ac0 <feof@plt+0x3d220>
  440a68:	ldrb	w9, [x20, #1124]
  440a6c:	ldr	x8, [x20, #1024]
  440a70:	mov	x19, x0
  440a74:	cmp	w9, #0x0
  440a78:	cset	w9, eq  // eq = none
  440a7c:	strb	w9, [x20, #21]
  440a80:	cbz	x8, 440a8c <feof@plt+0x3d1ec>
  440a84:	mov	x0, x20
  440a88:	blr	x8
  440a8c:	mov	x0, x20
  440a90:	mov	x1, x19
  440a94:	bl	452cac <feof@plt+0x4f40c>
  440a98:	tbz	w0, #0, 440ab4 <feof@plt+0x3d214>
  440a9c:	ldr	x8, [x20, #936]
  440aa0:	cbz	x8, 440ab4 <feof@plt+0x3d214>
  440aa4:	ldr	w1, [x20, #48]
  440aa8:	mov	x0, x20
  440aac:	mov	x2, x19
  440ab0:	blr	x8
  440ab4:	ldrh	w8, [x19, #18]
  440ab8:	and	w8, w8, #0xffffff7f
  440abc:	strh	w8, [x19, #18]
  440ac0:	ldp	x20, x19, [sp, #16]
  440ac4:	ldp	x29, x30, [sp], #32
  440ac8:	ret
  440acc:	mov	w1, wzr
  440ad0:	b	441b20 <feof@plt+0x3e280>
  440ad4:	stp	x29, x30, [sp, #-48]!
  440ad8:	stp	x20, x19, [sp, #32]
  440adc:	str	x21, [sp, #16]
  440ae0:	ldr	x21, [x0]
  440ae4:	mov	x19, x0
  440ae8:	mov	x29, sp
  440aec:	ldr	x20, [x21, #96]
  440af0:	cbz	x20, 440b6c <feof@plt+0x3d2cc>
  440af4:	ldrb	w8, [x20, #25]
  440af8:	cbz	w8, 440b8c <feof@plt+0x3d2ec>
  440afc:	ldr	x8, [x20]
  440b00:	cbnz	x8, 440b18 <feof@plt+0x3d278>
  440b04:	ldr	x9, [x20, #16]
  440b08:	cbz	x9, 440b18 <feof@plt+0x3d278>
  440b0c:	mov	w10, #0x1                   	// #1
  440b10:	strb	w10, [x19, #440]
  440b14:	str	x9, [x19, #424]
  440b18:	str	x8, [x21, #96]
  440b1c:	ldr	x8, [x19, #816]
  440b20:	ldrb	w9, [x20, #25]
  440b24:	cmp	x8, x20
  440b28:	strb	w9, [x19, #18]
  440b2c:	b.cs	440b54 <feof@plt+0x3d2b4>  // b.hs, b.nlast
  440b30:	ldr	x8, [x19, #840]
  440b34:	cmp	x8, x20
  440b38:	b.ls	440b54 <feof@plt+0x3d2b4>  // b.plast
  440b3c:	str	x20, [x19, #824]
  440b40:	str	x20, [x19, #832]
  440b44:	ldp	x20, x19, [sp, #32]
  440b48:	ldr	x21, [sp, #16]
  440b4c:	ldp	x29, x30, [sp], #48
  440b50:	ret
  440b54:	add	x0, x19, #0x328
  440b58:	mov	x1, x20
  440b5c:	ldp	x20, x19, [sp, #32]
  440b60:	ldr	x21, [sp, #16]
  440b64:	ldp	x29, x30, [sp], #48
  440b68:	b	47bc70 <_obstack_free@@Base>
  440b6c:	mov	x0, x19
  440b70:	ldp	x20, x19, [sp, #32]
  440b74:	ldr	x21, [sp, #16]
  440b78:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  440b7c:	add	x2, x2, #0xb02
  440b80:	mov	w1, #0x3                   	// #3
  440b84:	ldp	x29, x30, [sp], #48
  440b88:	b	4424f8 <feof@plt+0x3ec58>
  440b8c:	ldrb	w8, [x19, #1140]
  440b90:	cbz	w8, 440afc <feof@plt+0x3d25c>
  440b94:	ldr	x8, [x19, #448]
  440b98:	ldurb	w8, [x8, #-20]
  440b9c:	cmp	w8, #0x16
  440ba0:	b.eq	440afc <feof@plt+0x3d25c>  // b.none
  440ba4:	mov	x0, x19
  440ba8:	bl	4499fc <feof@plt+0x4615c>
  440bac:	ldrb	w8, [x0, #4]
  440bb0:	cmp	w8, #0x16
  440bb4:	b.eq	440afc <feof@plt+0x3d25c>  // b.none
  440bb8:	ldr	x8, [x19, #144]
  440bbc:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  440bc0:	add	x2, x2, #0xadd
  440bc4:	mov	w1, #0x8                   	// #8
  440bc8:	ldr	x3, [x8, #8]
  440bcc:	mov	x0, x19
  440bd0:	bl	442758 <feof@plt+0x3eeb8>
  440bd4:	b	440afc <feof@plt+0x3d25c>
  440bd8:	stp	x29, x30, [sp, #-48]!
  440bdc:	stp	x20, x19, [sp, #32]
  440be0:	ldrb	w8, [x0, #18]
  440be4:	mov	x19, x0
  440be8:	str	x21, [sp, #16]
  440bec:	mov	x29, sp
  440bf0:	cbz	w8, 440c18 <feof@plt+0x3d378>
  440bf4:	mov	w20, #0x1                   	// #1
  440bf8:	mov	x0, x19
  440bfc:	mov	w1, w20
  440c00:	ldp	x20, x19, [sp, #32]
  440c04:	ldr	x21, [sp, #16]
  440c08:	mov	w2, #0x3                   	// #3
  440c0c:	mov	x3, xzr
  440c10:	ldp	x29, x30, [sp], #48
  440c14:	b	441e9c <feof@plt+0x3e5fc>
  440c18:	mov	x0, x19
  440c1c:	mov	w1, wzr
  440c20:	bl	441a44 <feof@plt+0x3e1a4>
  440c24:	cbz	x0, 440bf4 <feof@plt+0x3d354>
  440c28:	ldrh	w8, [x0, #18]
  440c2c:	mov	x21, x0
  440c30:	ubfx	w9, w8, #8, #1
  440c34:	tst	w8, #0x2
  440c38:	and	w10, w8, #0x3
  440c3c:	csinc	w20, w9, wzr, ne  // ne = any
  440c40:	cmp	w10, #0x2
  440c44:	b.ne	440cbc <feof@plt+0x3d41c>  // b.any
  440c48:	ldr	x8, [x21, #24]
  440c4c:	ldrb	w9, [x8, #19]
  440c50:	orr	w9, w9, #0x20
  440c54:	strb	w9, [x8, #19]
  440c58:	ldrh	w8, [x21, #18]
  440c5c:	tbz	w8, #7, 440cc0 <feof@plt+0x3d420>
  440c60:	ldr	x8, [x19, #1032]
  440c64:	cbz	x8, 440c78 <feof@plt+0x3d3d8>
  440c68:	ldr	w1, [x19, #48]
  440c6c:	mov	x0, x19
  440c70:	mov	x2, x21
  440c74:	blr	x8
  440c78:	ldr	x8, [x19, #448]
  440c7c:	ldurb	w8, [x8, #-20]
  440c80:	cmp	w8, #0x16
  440c84:	b.eq	440bf8 <feof@plt+0x3d358>  // b.none
  440c88:	mov	x0, x19
  440c8c:	bl	4499fc <feof@plt+0x4615c>
  440c90:	ldrb	w8, [x0, #4]
  440c94:	cmp	w8, #0x16
  440c98:	b.eq	440bf8 <feof@plt+0x3d358>  // b.none
  440c9c:	ldr	x8, [x19, #144]
  440ca0:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  440ca4:	add	x2, x2, #0xadd
  440ca8:	mov	x0, x19
  440cac:	ldr	x3, [x8, #8]
  440cb0:	mov	w1, wzr
  440cb4:	bl	442758 <feof@plt+0x3eeb8>
  440cb8:	b	440bf8 <feof@plt+0x3d358>
  440cbc:	tbnz	w8, #7, 440c60 <feof@plt+0x3d3c0>
  440cc0:	mov	x0, x19
  440cc4:	mov	x1, x21
  440cc8:	bl	453918 <feof@plt+0x50078>
  440ccc:	ldr	x8, [x19, #1032]
  440cd0:	cbnz	x8, 440c68 <feof@plt+0x3d3c8>
  440cd4:	b	440c78 <feof@plt+0x3d3d8>
  440cd8:	stp	x29, x30, [sp, #-32]!
  440cdc:	ldrb	w8, [x0, #18]
  440ce0:	str	x19, [sp, #16]
  440ce4:	mov	x19, x0
  440ce8:	mov	x29, sp
  440cec:	cbz	w8, 440cf8 <feof@plt+0x3d458>
  440cf0:	mov	w1, #0x1                   	// #1
  440cf4:	b	440d0c <feof@plt+0x3d46c>
  440cf8:	mov	w1, #0x1                   	// #1
  440cfc:	mov	x0, x19
  440d00:	bl	444324 <feof@plt+0x40a84>
  440d04:	mvn	w8, w0
  440d08:	and	w1, w8, #0x1
  440d0c:	ldr	x3, [x19, #432]
  440d10:	mov	x0, x19
  440d14:	ldr	x19, [sp, #16]
  440d18:	mov	w2, #0x4                   	// #4
  440d1c:	ldp	x29, x30, [sp], #32
  440d20:	b	441e9c <feof@plt+0x3e5fc>
  440d24:	stp	x29, x30, [sp, #-32]!
  440d28:	stp	x20, x19, [sp, #16]
  440d2c:	ldr	x8, [x0]
  440d30:	mov	x19, x0
  440d34:	mov	x29, sp
  440d38:	ldr	x20, [x8, #96]
  440d3c:	cbz	x20, 440dac <feof@plt+0x3d50c>
  440d40:	ldr	w8, [x20, #28]
  440d44:	cmp	w8, #0x5
  440d48:	b.ne	440d7c <feof@plt+0x3d4dc>  // b.any
  440d4c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  440d50:	add	x2, x2, #0xb27
  440d54:	mov	w1, #0x3                   	// #3
  440d58:	mov	x0, x19
  440d5c:	bl	4424f8 <feof@plt+0x3ec58>
  440d60:	ldr	w2, [x20, #8]
  440d64:	adrp	x4, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  440d68:	add	x4, x4, #0xb39
  440d6c:	mov	w1, #0x3                   	// #3
  440d70:	mov	x0, x19
  440d74:	mov	w3, wzr
  440d78:	bl	4429b8 <feof@plt+0x3f118>
  440d7c:	ldrb	w8, [x20, #24]
  440d80:	mov	w9, #0x5                   	// #5
  440d84:	str	w9, [x20, #28]
  440d88:	mov	w9, #0x1                   	// #1
  440d8c:	strb	w8, [x19, #18]
  440d90:	ldrb	w8, [x20, #25]
  440d94:	strb	w9, [x20, #24]
  440d98:	str	xzr, [x20, #16]
  440d9c:	cbz	w8, 440dc8 <feof@plt+0x3d528>
  440da0:	ldp	x20, x19, [sp, #16]
  440da4:	ldp	x29, x30, [sp], #32
  440da8:	ret
  440dac:	mov	x0, x19
  440db0:	ldp	x20, x19, [sp, #16]
  440db4:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  440db8:	add	x2, x2, #0xb15
  440dbc:	mov	w1, #0x3                   	// #3
  440dc0:	ldp	x29, x30, [sp], #32
  440dc4:	b	4424f8 <feof@plt+0x3ec58>
  440dc8:	ldrb	w8, [x19, #1140]
  440dcc:	cbz	w8, 440da0 <feof@plt+0x3d500>
  440dd0:	ldr	x8, [x19, #448]
  440dd4:	ldurb	w8, [x8, #-20]
  440dd8:	cmp	w8, #0x16
  440ddc:	b.eq	440da0 <feof@plt+0x3d500>  // b.none
  440de0:	mov	x0, x19
  440de4:	bl	4499fc <feof@plt+0x4615c>
  440de8:	ldrb	w8, [x0, #4]
  440dec:	cmp	w8, #0x16
  440df0:	b.eq	440da0 <feof@plt+0x3d500>  // b.none
  440df4:	ldr	x8, [x19, #144]
  440df8:	mov	x0, x19
  440dfc:	ldp	x20, x19, [sp, #16]
  440e00:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  440e04:	ldr	x3, [x8, #8]
  440e08:	add	x2, x2, #0xadd
  440e0c:	mov	w1, #0x8                   	// #8
  440e10:	ldp	x29, x30, [sp], #32
  440e14:	b	442758 <feof@plt+0x3eeb8>
  440e18:	stp	x29, x30, [sp, #-48]!
  440e1c:	stp	x20, x19, [sp, #32]
  440e20:	ldrb	w8, [x0, #18]
  440e24:	mov	x19, x0
  440e28:	str	x21, [sp, #16]
  440e2c:	mov	x29, sp
  440e30:	cbz	w8, 440e5c <feof@plt+0x3d5bc>
  440e34:	mov	x20, xzr
  440e38:	mov	w21, #0x1                   	// #1
  440e3c:	mov	x0, x19
  440e40:	mov	w1, w21
  440e44:	mov	x3, x20
  440e48:	ldp	x20, x19, [sp, #32]
  440e4c:	ldr	x21, [sp, #16]
  440e50:	mov	w2, #0x6                   	// #6
  440e54:	ldp	x29, x30, [sp], #48
  440e58:	b	441e9c <feof@plt+0x3e5fc>
  440e5c:	mov	x0, x19
  440e60:	mov	w1, wzr
  440e64:	bl	441a44 <feof@plt+0x3e1a4>
  440e68:	mov	x20, x0
  440e6c:	cbz	x0, 440e38 <feof@plt+0x3d598>
  440e70:	ldrh	w8, [x20, #18]
  440e74:	and	w9, w8, #0x3
  440e78:	cmp	w9, #0x2
  440e7c:	lsr	w9, w8, #1
  440e80:	mov	w10, w8
  440e84:	b.ne	440e9c <feof@plt+0x3d5fc>  // b.any
  440e88:	ldr	x10, [x20, #24]
  440e8c:	ldrb	w11, [x10, #19]
  440e90:	orr	w11, w11, #0x20
  440e94:	strb	w11, [x10, #19]
  440e98:	ldrh	w10, [x20, #18]
  440e9c:	bic	w21, w9, w8, lsr #8
  440ea0:	tbnz	w10, #7, 440eb0 <feof@plt+0x3d610>
  440ea4:	mov	x0, x19
  440ea8:	mov	x1, x20
  440eac:	bl	453918 <feof@plt+0x50078>
  440eb0:	ldr	x8, [x19, #1032]
  440eb4:	and	w21, w21, #0x1
  440eb8:	cbz	x8, 440ecc <feof@plt+0x3d62c>
  440ebc:	ldr	w1, [x19, #48]
  440ec0:	mov	x0, x19
  440ec4:	mov	x2, x20
  440ec8:	blr	x8
  440ecc:	ldr	x8, [x19, #448]
  440ed0:	ldurb	w8, [x8, #-20]
  440ed4:	cmp	w8, #0x16
  440ed8:	b.eq	440e3c <feof@plt+0x3d59c>  // b.none
  440edc:	mov	x0, x19
  440ee0:	bl	4499fc <feof@plt+0x4615c>
  440ee4:	ldrb	w8, [x0, #4]
  440ee8:	cmp	w8, #0x16
  440eec:	b.eq	440e3c <feof@plt+0x3d59c>  // b.none
  440ef0:	ldr	x8, [x19, #144]
  440ef4:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  440ef8:	add	x2, x2, #0xadd
  440efc:	mov	x0, x19
  440f00:	ldr	x3, [x8, #8]
  440f04:	mov	w1, wzr
  440f08:	bl	442758 <feof@plt+0x3eeb8>
  440f0c:	b	440e3c <feof@plt+0x3d59c>
  440f10:	stp	x29, x30, [sp, #-32]!
  440f14:	mov	w1, #0x1                   	// #1
  440f18:	stp	x20, x19, [sp, #16]
  440f1c:	mov	x29, sp
  440f20:	mov	x19, x0
  440f24:	bl	441a44 <feof@plt+0x3e1a4>
  440f28:	cbz	x0, 440fd4 <feof@plt+0x3d734>
  440f2c:	ldr	x8, [x19, #1024]
  440f30:	mov	x20, x0
  440f34:	cbz	x8, 440f40 <feof@plt+0x3d6a0>
  440f38:	mov	x0, x19
  440f3c:	blr	x8
  440f40:	ldr	x8, [x19, #944]
  440f44:	cbz	x8, 440f58 <feof@plt+0x3d6b8>
  440f48:	ldr	w1, [x19, #48]
  440f4c:	mov	x0, x19
  440f50:	mov	x2, x20
  440f54:	blr	x8
  440f58:	ldrh	w8, [x20, #18]
  440f5c:	tbz	w8, #1, 440fd4 <feof@plt+0x3d734>
  440f60:	tbnz	w8, #5, 440f9c <feof@plt+0x3d6fc>
  440f64:	mvn	w8, w8
  440f68:	tst	w8, #0x3
  440f6c:	b.ne	440fb4 <feof@plt+0x3d714>  // b.any
  440f70:	ldrb	w8, [x19, #1143]
  440f74:	cbz	w8, 440fb4 <feof@plt+0x3d714>
  440f78:	ldr	w2, [x19, #48]
  440f7c:	ldr	x5, [x20]
  440f80:	adrp	x4, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  440f84:	add	x4, x4, #0xb54
  440f88:	mov	w1, #0xb                   	// #11
  440f8c:	mov	x0, x19
  440f90:	mov	w3, wzr
  440f94:	bl	442ab4 <feof@plt+0x3f214>
  440f98:	b	440fb4 <feof@plt+0x3d714>
  440f9c:	ldr	x3, [x20]
  440fa0:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  440fa4:	add	x2, x2, #0xb54
  440fa8:	mov	x0, x19
  440fac:	mov	w1, wzr
  440fb0:	bl	4424f8 <feof@plt+0x3ec58>
  440fb4:	ldrb	w8, [x19, #1151]
  440fb8:	cbz	w8, 440fcc <feof@plt+0x3d72c>
  440fbc:	mov	x0, x19
  440fc0:	mov	x1, x20
  440fc4:	mov	x2, xzr
  440fc8:	bl	451a20 <feof@plt+0x4e180>
  440fcc:	mov	x0, x20
  440fd0:	bl	452ac8 <feof@plt+0x4f228>
  440fd4:	ldr	x8, [x19, #448]
  440fd8:	ldurb	w8, [x8, #-20]
  440fdc:	cmp	w8, #0x16
  440fe0:	b.eq	440ff8 <feof@plt+0x3d758>  // b.none
  440fe4:	mov	x0, x19
  440fe8:	bl	4499fc <feof@plt+0x4615c>
  440fec:	ldrb	w8, [x0, #4]
  440ff0:	cmp	w8, #0x16
  440ff4:	b.ne	441004 <feof@plt+0x3d764>  // b.any
  440ff8:	ldp	x20, x19, [sp, #16]
  440ffc:	ldp	x29, x30, [sp], #32
  441000:	ret
  441004:	ldr	x8, [x19, #144]
  441008:	mov	x0, x19
  44100c:	ldp	x20, x19, [sp, #16]
  441010:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441014:	ldr	x3, [x8, #8]
  441018:	add	x2, x2, #0xadd
  44101c:	mov	w1, wzr
  441020:	ldp	x29, x30, [sp], #32
  441024:	b	442758 <feof@plt+0x3eeb8>
  441028:	sub	sp, sp, #0x50
  44102c:	stp	x29, x30, [sp, #16]
  441030:	stp	x24, x23, [sp, #32]
  441034:	stp	x22, x21, [sp, #48]
  441038:	stp	x20, x19, [sp, #64]
  44103c:	ldr	x23, [x0, #40]
  441040:	mov	w10, #0x18                  	// #24
  441044:	ldrb	w11, [x0, #1152]
  441048:	add	x29, sp, #0x10
  44104c:	ldr	w8, [x23, #12]
  441050:	ldr	x9, [x23]
  441054:	cmp	w11, #0x0
  441058:	mov	x19, x0
  44105c:	sub	w8, w8, #0x1
  441060:	smaddl	x8, w8, w10, x9
  441064:	ldrb	w21, [x8, #5]
  441068:	ldr	x20, [x8, #8]
  44106c:	mov	w8, #0x7fffffff            	// #2147483647
  441070:	mov	w9, #0x7fff                	// #32767
  441074:	csel	w24, w9, w8, eq  // eq = none
  441078:	bl	452228 <feof@plt+0x4e988>
  44107c:	ldrb	w8, [x0, #4]
  441080:	cmp	w8, #0x16
  441084:	b.eq	441144 <feof@plt+0x3d8a4>  // b.none
  441088:	mov	x1, x0
  44108c:	cmp	w8, #0x37
  441090:	b.ne	441110 <feof@plt+0x3d870>  // b.any
  441094:	ldr	w9, [x1, #8]
  441098:	cbz	w9, 44116c <feof@plt+0x3d8cc>
  44109c:	ldr	x10, [x1, #16]
  4410a0:	adrp	x11, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  4410a4:	mov	w8, wzr
  4410a8:	mov	w12, wzr
  4410ac:	add	x11, x11, #0x4a2
  4410b0:	mov	w13, #0xa                   	// #10
  4410b4:	ldrb	w14, [x10]
  4410b8:	ldrh	w15, [x11, x14, lsl #1]
  4410bc:	tbz	w15, #2, 441110 <feof@plt+0x3d870>
  4410c0:	madd	w14, w12, w13, w14
  4410c4:	sub	w22, w14, #0x30
  4410c8:	cmp	w22, w12
  4410cc:	sub	x9, x9, #0x1
  4410d0:	add	x10, x10, #0x1
  4410d4:	csinc	w8, w8, wzr, cs  // cs = hs, nlast
  4410d8:	mov	w12, w22
  4410dc:	cbnz	x9, 4410b4 <feof@plt+0x3d814>
  4410e0:	ldrb	w9, [x19, #1154]
  4410e4:	cbz	w9, 44117c <feof@plt+0x3d8dc>
  4410e8:	sub	w9, w22, #0x1
  4410ec:	cmp	w9, w24
  4410f0:	b.cs	4410fc <feof@plt+0x3d85c>  // b.hs, b.nlast
  4410f4:	tst	w8, #0xff
  4410f8:	b.eq	441198 <feof@plt+0x3d8f8>  // b.none
  4410fc:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441100:	add	x2, x2, #0xbb2
  441104:	mov	w1, #0x2                   	// #2
  441108:	mov	x0, x19
  44110c:	b	441194 <feof@plt+0x3d8f4>
  441110:	mov	x0, x19
  441114:	bl	44d198 <feof@plt+0x498f8>
  441118:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  44111c:	add	x2, x2, #0xb87
  441120:	mov	x3, x0
  441124:	mov	x0, x19
  441128:	ldp	x20, x19, [sp, #64]
  44112c:	ldp	x22, x21, [sp, #48]
  441130:	ldp	x24, x23, [sp, #32]
  441134:	ldp	x29, x30, [sp, #16]
  441138:	mov	w1, #0x3                   	// #3
  44113c:	add	sp, sp, #0x50
  441140:	b	4424f8 <feof@plt+0x3ec58>
  441144:	mov	x0, x19
  441148:	ldp	x20, x19, [sp, #64]
  44114c:	ldp	x22, x21, [sp, #48]
  441150:	ldp	x24, x23, [sp, #32]
  441154:	ldp	x29, x30, [sp, #16]
  441158:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  44115c:	add	x2, x2, #0xb64
  441160:	mov	w1, #0x3                   	// #3
  441164:	add	sp, sp, #0x50
  441168:	b	4424f8 <feof@plt+0x3ec58>
  44116c:	mov	w22, wzr
  441170:	mov	w8, wzr
  441174:	ldrb	w9, [x19, #1154]
  441178:	cbnz	w9, 4410e8 <feof@plt+0x3d848>
  44117c:	tst	w8, #0xff
  441180:	b.eq	441198 <feof@plt+0x3d8f8>  // b.none
  441184:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441188:	add	x2, x2, #0xbb2
  44118c:	mov	x0, x19
  441190:	mov	w1, wzr
  441194:	bl	4424f8 <feof@plt+0x3ec58>
  441198:	mov	x0, x19
  44119c:	bl	452228 <feof@plt+0x4e988>
  4411a0:	ldrb	w8, [x0, #4]
  4411a4:	cmp	w8, #0x16
  4411a8:	b.eq	44122c <feof@plt+0x3d98c>  // b.none
  4411ac:	mov	x1, x0
  4411b0:	cmp	w8, #0x3e
  4411b4:	b.ne	4412c0 <feof@plt+0x3da20>  // b.any
  4411b8:	add	x1, x1, #0x8
  4411bc:	mov	x3, sp
  4411c0:	mov	w2, #0x1                   	// #1
  4411c4:	mov	w4, #0x3e                  	// #62
  4411c8:	mov	x0, x19
  4411cc:	stp	xzr, xzr, [sp]
  4411d0:	bl	43c288 <feof@plt+0x389e8>
  4411d4:	ldr	x8, [x19, #448]
  4411d8:	ldr	x9, [sp, #8]
  4411dc:	tst	w0, #0x1
  4411e0:	ldurb	w8, [x8, #-20]
  4411e4:	csel	x20, x9, x20, ne  // ne = any
  4411e8:	cmp	w8, #0x16
  4411ec:	b.eq	44122c <feof@plt+0x3d98c>  // b.none
  4411f0:	mov	x0, x19
  4411f4:	bl	452228 <feof@plt+0x4e988>
  4411f8:	ldrb	w8, [x0, #4]
  4411fc:	cmp	w8, #0x16
  441200:	b.eq	44122c <feof@plt+0x3d98c>  // b.none
  441204:	ldr	x8, [x19, #144]
  441208:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  44120c:	add	x2, x2, #0xadd
  441210:	mov	x0, x19
  441214:	ldr	x3, [x8, #8]
  441218:	mov	w1, wzr
  44121c:	bl	442758 <feof@plt+0x3eeb8>
  441220:	b	44122c <feof@plt+0x3d98c>
  441224:	mov	x0, x19
  441228:	bl	452120 <feof@plt+0x4e880>
  44122c:	ldr	x8, [x19, #136]
  441230:	ldr	x8, [x8, #8]
  441234:	cbnz	x8, 441224 <feof@plt+0x3d984>
  441238:	ldr	x8, [x19, #448]
  44123c:	ldurb	w8, [x8, #-20]
  441240:	cmp	w8, #0x16
  441244:	b.eq	44125c <feof@plt+0x3d9bc>  // b.none
  441248:	mov	x0, x19
  44124c:	bl	4499fc <feof@plt+0x4615c>
  441250:	ldrb	w8, [x0, #4]
  441254:	cmp	w8, #0x16
  441258:	b.ne	441248 <feof@plt+0x3d9a8>  // b.any
  44125c:	ldr	x0, [x19, #40]
  441260:	mov	w1, #0x3                   	// #3
  441264:	mov	w2, w21
  441268:	mov	x3, x20
  44126c:	mov	w4, w22
  441270:	bl	44e7e4 <feof@plt+0x4af44>
  441274:	mov	x20, x0
  441278:	cbz	x0, 44128c <feof@plt+0x3d9ec>
  44127c:	ldr	x0, [x19, #40]
  441280:	ldr	w1, [x20, #16]
  441284:	mov	w2, #0x7f                  	// #127
  441288:	bl	44ecdc <feof@plt+0x4b43c>
  44128c:	ldr	x8, [x19, #912]
  441290:	cbz	x8, 4412a0 <feof@plt+0x3da00>
  441294:	mov	x0, x19
  441298:	mov	x1, x20
  44129c:	blr	x8
  4412a0:	mov	w8, #0x1                   	// #1
  4412a4:	strb	w8, [x23, #116]
  4412a8:	ldp	x20, x19, [sp, #64]
  4412ac:	ldp	x22, x21, [sp, #48]
  4412b0:	ldp	x24, x23, [sp, #32]
  4412b4:	ldp	x29, x30, [sp, #16]
  4412b8:	add	sp, sp, #0x50
  4412bc:	ret
  4412c0:	mov	x0, x19
  4412c4:	bl	44d198 <feof@plt+0x498f8>
  4412c8:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  4412cc:	add	x2, x2, #0xbcb
  4412d0:	b	441120 <feof@plt+0x3d880>
  4412d4:	stp	x29, x30, [sp, #-32]!
  4412d8:	stp	x20, x19, [sp, #16]
  4412dc:	ldr	x8, [x0]
  4412e0:	mov	x19, x0
  4412e4:	mov	x29, sp
  4412e8:	ldr	x20, [x8, #96]
  4412ec:	cbz	x20, 441344 <feof@plt+0x3daa4>
  4412f0:	ldr	w8, [x20, #28]
  4412f4:	cmp	w8, #0x5
  4412f8:	b.ne	44132c <feof@plt+0x3da8c>  // b.any
  4412fc:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441300:	add	x2, x2, #0xbfa
  441304:	mov	w1, #0x3                   	// #3
  441308:	mov	x0, x19
  44130c:	bl	4424f8 <feof@plt+0x3ec58>
  441310:	ldr	w2, [x20, #8]
  441314:	adrp	x4, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441318:	add	x4, x4, #0xb39
  44131c:	mov	w1, #0x3                   	// #3
  441320:	mov	x0, x19
  441324:	mov	w3, wzr
  441328:	bl	4429b8 <feof@plt+0x3f118>
  44132c:	ldrb	w8, [x20, #24]
  441330:	mov	w9, #0x9                   	// #9
  441334:	str	w9, [x20, #28]
  441338:	cbz	w8, 441360 <feof@plt+0x3dac0>
  44133c:	mov	w8, #0x1                   	// #1
  441340:	b	44137c <feof@plt+0x3dadc>
  441344:	mov	x0, x19
  441348:	ldp	x20, x19, [sp, #16]
  44134c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441350:	add	x2, x2, #0xbe8
  441354:	mov	w1, #0x3                   	// #3
  441358:	ldp	x29, x30, [sp], #32
  44135c:	b	4424f8 <feof@plt+0x3ec58>
  441360:	mov	x0, x19
  441364:	mov	w1, wzr
  441368:	bl	444324 <feof@plt+0x40a84>
  44136c:	mvn	w8, w0
  441370:	and	w9, w0, #0x1
  441374:	and	w8, w8, #0x1
  441378:	strb	w9, [x20, #24]
  44137c:	strb	w8, [x19, #18]
  441380:	str	xzr, [x20, #16]
  441384:	ldp	x20, x19, [sp, #16]
  441388:	ldp	x29, x30, [sp], #32
  44138c:	ret
  441390:	stp	x29, x30, [sp, #-48]!
  441394:	stp	x20, x19, [sp, #32]
  441398:	ldr	x9, [x0, #144]
  44139c:	ldr	x8, [x0, #448]
  4413a0:	ldrb	w10, [x0, #24]
  4413a4:	str	x21, [sp, #16]
  4413a8:	ldr	x1, [x9, #8]
  4413ac:	ldur	w20, [x8, #-24]
  4413b0:	add	w8, w10, #0x1
  4413b4:	mov	x29, sp
  4413b8:	mov	x19, x0
  4413bc:	strb	w8, [x0, #24]
  4413c0:	bl	44d90c <feof@plt+0x4a06c>
  4413c4:	ldrb	w8, [x19, #24]
  4413c8:	mov	x21, x0
  4413cc:	adrp	x4, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4413d0:	add	x4, x4, #0x236
  4413d4:	sub	w8, w8, #0x1
  4413d8:	mov	w1, #0x3                   	// #3
  4413dc:	mov	x0, x19
  4413e0:	mov	w2, w20
  4413e4:	mov	w3, wzr
  4413e8:	mov	x5, x21
  4413ec:	strb	w8, [x19, #24]
  4413f0:	bl	4429b8 <feof@plt+0x3f118>
  4413f4:	mov	x0, x21
  4413f8:	ldp	x20, x19, [sp, #32]
  4413fc:	ldr	x21, [sp, #16]
  441400:	ldp	x29, x30, [sp], #48
  441404:	b	4031d0 <free@plt>
  441408:	sub	sp, sp, #0x50
  44140c:	stp	x29, x30, [sp, #32]
  441410:	add	x29, sp, #0x20
  441414:	stp	x22, x21, [sp, #48]
  441418:	stp	x20, x19, [sp, #64]
  44141c:	stur	wzr, [x29, #-4]
  441420:	ldrb	w8, [x0, #24]
  441424:	sub	x1, x29, #0x4
  441428:	mov	x19, x0
  44142c:	add	w8, w8, #0x1
  441430:	strb	w8, [x0, #24]
  441434:	bl	452890 <feof@plt+0x4eff0>
  441438:	ldr	x8, [x0, #16]
  44143c:	ldr	q0, [x0]
  441440:	mov	x20, x0
  441444:	str	x8, [sp, #16]
  441448:	str	q0, [sp]
  44144c:	ldrb	w8, [x0, #4]
  441450:	cmp	w8, #0x35
  441454:	b.ne	441478 <feof@plt+0x3dbd8>  // b.any
  441458:	ldr	x21, [x19, #896]
  44145c:	cbz	x21, 441478 <feof@plt+0x3dbd8>
  441460:	ldr	x8, [x20, #8]
  441464:	ldr	x9, [x21, #8]
  441468:	cmp	x9, x8
  44146c:	b.eq	441528 <feof@plt+0x3dc88>  // b.none
  441470:	ldr	x21, [x21]
  441474:	cbnz	x21, 441464 <feof@plt+0x3dbc4>
  441478:	mov	w1, #0x1                   	// #1
  44147c:	ldr	x8, [x19, #960]
  441480:	cbz	x8, 441508 <feof@plt+0x3dc68>
  441484:	cmp	w1, #0x1
  441488:	b.eq	4414f0 <feof@plt+0x3dc50>  // b.none
  44148c:	ldr	x8, [x19, #136]
  441490:	ldr	x8, [x8, #8]
  441494:	cbz	x8, 4414f0 <feof@plt+0x3dc50>
  441498:	mov	w0, #0x30                  	// #48
  44149c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4414a0:	ldr	q0, [sp]
  4414a4:	ldr	x8, [sp, #16]
  4414a8:	mov	x2, x0
  4414ac:	mov	w3, #0x2                   	// #2
  4414b0:	str	q0, [x0]
  4414b4:	ldrh	w9, [x0, #6]
  4414b8:	str	x8, [x0, #16]
  4414bc:	mov	x1, xzr
  4414c0:	orr	w8, w9, #0x400
  4414c4:	strh	w8, [x0, #6]
  4414c8:	ldr	q0, [x20]
  4414cc:	ldr	x8, [x20, #16]
  4414d0:	stur	q0, [x0, #24]
  4414d4:	ldrh	w9, [x0, #30]
  4414d8:	str	x8, [x0, #40]
  4414dc:	orr	w8, w9, #0x400
  4414e0:	strh	w8, [x0, #30]
  4414e4:	mov	x0, x19
  4414e8:	bl	452000 <feof@plt+0x4e760>
  4414ec:	b	4414f8 <feof@plt+0x3dc58>
  4414f0:	mov	x0, x19
  4414f4:	bl	4529b4 <feof@plt+0x4f114>
  4414f8:	ldr	x8, [x19, #960]
  4414fc:	ldr	w1, [x19, #48]
  441500:	mov	x0, x19
  441504:	blr	x8
  441508:	ldrb	w8, [x19, #24]
  44150c:	sub	w8, w8, #0x1
  441510:	strb	w8, [x19, #24]
  441514:	ldp	x20, x19, [sp, #64]
  441518:	ldp	x22, x21, [sp, #48]
  44151c:	ldp	x29, x30, [sp, #32]
  441520:	add	sp, sp, #0x50
  441524:	ret
  441528:	ldrb	w8, [x21, #16]
  44152c:	cbz	w8, 441594 <feof@plt+0x3dcf4>
  441530:	ldrb	w22, [x21, #19]
  441534:	cbz	w22, 441544 <feof@plt+0x3dca4>
  441538:	ldrb	w8, [x19, #24]
  44153c:	sub	w8, w8, #0x1
  441540:	strb	w8, [x19, #24]
  441544:	mov	x0, x19
  441548:	bl	452228 <feof@plt+0x4e988>
  44154c:	ldrb	w8, [x0, #4]
  441550:	cmp	w8, #0x35
  441554:	b.ne	44157c <feof@plt+0x3dcdc>  // b.any
  441558:	ldr	x21, [x21, #24]
  44155c:	cbz	x21, 441580 <feof@plt+0x3dce0>
  441560:	ldr	x8, [x0, #8]
  441564:	ldr	x9, [x21, #8]
  441568:	cmp	x9, x8
  44156c:	b.eq	441580 <feof@plt+0x3dce0>  // b.none
  441570:	ldr	x21, [x21]
  441574:	cbnz	x21, 441564 <feof@plt+0x3dcc4>
  441578:	b	441580 <feof@plt+0x3dce0>
  44157c:	mov	x21, xzr
  441580:	cbz	w22, 441590 <feof@plt+0x3dcf0>
  441584:	ldrb	w8, [x19, #24]
  441588:	add	w8, w8, #0x1
  44158c:	strb	w8, [x19, #24]
  441590:	cbz	x21, 441624 <feof@plt+0x3dd84>
  441594:	ldrb	w8, [x21, #18]
  441598:	cbz	w8, 4415d4 <feof@plt+0x3dd34>
  44159c:	ldur	w8, [x29, #-4]
  4415a0:	mov	w9, #0x51                  	// #81
  4415a4:	strb	w9, [x19, #156]
  4415a8:	mov	w9, #0x1                   	// #1
  4415ac:	str	w8, [x19, #152]
  4415b0:	ldrh	w8, [x20, #6]
  4415b4:	strh	w8, [x19, #158]
  4415b8:	ldr	w8, [x21, #24]
  4415bc:	strb	w9, [x19, #32]
  4415c0:	str	w8, [x19, #160]
  4415c4:	ldrb	w8, [x21, #19]
  4415c8:	strb	w8, [x19, #33]
  4415cc:	cbnz	w8, 441508 <feof@plt+0x3dc68>
  4415d0:	b	441614 <feof@plt+0x3dd74>
  4415d4:	ldr	x8, [x19, #904]
  4415d8:	cbz	x8, 4415ec <feof@plt+0x3dd4c>
  4415dc:	mov	x0, x19
  4415e0:	mov	x1, x20
  4415e4:	mov	w2, wzr
  4415e8:	blr	x8
  4415ec:	ldrb	w8, [x21, #19]
  4415f0:	cbz	w8, 441600 <feof@plt+0x3dd60>
  4415f4:	ldrb	w8, [x19, #24]
  4415f8:	sub	w8, w8, #0x1
  4415fc:	strb	w8, [x19, #24]
  441600:	ldr	x8, [x21, #24]
  441604:	mov	x0, x19
  441608:	blr	x8
  44160c:	ldrb	w8, [x21, #19]
  441610:	cbz	w8, 441508 <feof@plt+0x3dc68>
  441614:	ldrb	w8, [x19, #24]
  441618:	add	w8, w8, #0x1
  44161c:	strb	w8, [x19, #24]
  441620:	b	441508 <feof@plt+0x3dc68>
  441624:	mov	w1, #0x2                   	// #2
  441628:	mov	x20, x0
  44162c:	ldr	x8, [x19, #960]
  441630:	cbnz	x8, 441484 <feof@plt+0x3dbe4>
  441634:	b	441508 <feof@plt+0x3dc68>
  441638:	stp	x29, x30, [sp, #-48]!
  44163c:	stp	x20, x19, [sp, #32]
  441640:	ldr	x9, [x0, #144]
  441644:	ldr	x8, [x0, #448]
  441648:	ldrb	w10, [x0, #24]
  44164c:	str	x21, [sp, #16]
  441650:	ldr	x1, [x9, #8]
  441654:	ldur	w20, [x8, #-24]
  441658:	add	w8, w10, #0x1
  44165c:	mov	x29, sp
  441660:	mov	x19, x0
  441664:	strb	w8, [x0, #24]
  441668:	bl	44d90c <feof@plt+0x4a06c>
  44166c:	ldrb	w8, [x19, #24]
  441670:	mov	x21, x0
  441674:	adrp	x4, 48f000 <_obstack_memory_used@@Base+0x132fc>
  441678:	add	x4, x4, #0x236
  44167c:	sub	w8, w8, #0x1
  441680:	mov	w1, #0x12                  	// #18
  441684:	mov	x0, x19
  441688:	mov	w2, w20
  44168c:	mov	w3, wzr
  441690:	mov	x5, x21
  441694:	strb	w8, [x19, #24]
  441698:	bl	442cac <feof@plt+0x3f40c>
  44169c:	mov	x0, x21
  4416a0:	ldp	x20, x19, [sp, #32]
  4416a4:	ldr	x21, [sp, #16]
  4416a8:	ldp	x29, x30, [sp], #48
  4416ac:	b	4031d0 <free@plt>
  4416b0:	stp	x29, x30, [sp, #-32]!
  4416b4:	ldr	x8, [x0, #40]
  4416b8:	str	x19, [sp, #16]
  4416bc:	mov	x19, x0
  4416c0:	mov	x29, sp
  4416c4:	ldr	w8, [x8, #48]
  4416c8:	cmp	w8, #0x1
  4416cc:	b.ne	4416ec <feof@plt+0x3de4c>  // b.any
  4416d0:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  4416d4:	add	x2, x2, #0xc0c
  4416d8:	mov	x0, x19
  4416dc:	mov	w1, wzr
  4416e0:	bl	4424f8 <feof@plt+0x3ec58>
  4416e4:	mov	w1, wzr
  4416e8:	b	4416f0 <feof@plt+0x3de50>
  4416ec:	mov	w1, #0x1                   	// #1
  4416f0:	mov	x0, x19
  4416f4:	ldr	x19, [sp, #16]
  4416f8:	ldp	x29, x30, [sp], #32
  4416fc:	b	441b20 <feof@plt+0x3e280>
  441700:	stp	x29, x30, [sp, #-32]!
  441704:	str	x19, [sp, #16]
  441708:	mov	x29, sp
  44170c:	mov	x19, x0
  441710:	bl	452228 <feof@plt+0x4e988>
  441714:	ldrb	w8, [x0, #4]
  441718:	cmp	w8, #0x3e
  44171c:	b.ne	44173c <feof@plt+0x3de9c>  // b.any
  441720:	ldr	x8, [x19, #952]
  441724:	cbz	x8, 441758 <feof@plt+0x3deb8>
  441728:	ldr	w1, [x19, #48]
  44172c:	add	x2, x0, #0x8
  441730:	mov	x0, x19
  441734:	blr	x8
  441738:	b	441758 <feof@plt+0x3deb8>
  44173c:	ldr	x8, [x19, #144]
  441740:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441744:	add	x2, x2, #0xc31
  441748:	mov	w1, #0x3                   	// #3
  44174c:	ldr	x3, [x8, #8]
  441750:	mov	x0, x19
  441754:	bl	4424f8 <feof@plt+0x3ec58>
  441758:	ldr	x8, [x19, #448]
  44175c:	ldurb	w8, [x8, #-20]
  441760:	cmp	w8, #0x16
  441764:	b.eq	44177c <feof@plt+0x3dedc>  // b.none
  441768:	mov	x0, x19
  44176c:	bl	4499fc <feof@plt+0x4615c>
  441770:	ldrb	w8, [x0, #4]
  441774:	cmp	w8, #0x16
  441778:	b.ne	441788 <feof@plt+0x3dee8>  // b.any
  44177c:	ldr	x19, [sp, #16]
  441780:	ldp	x29, x30, [sp], #32
  441784:	ret
  441788:	ldr	x8, [x19, #144]
  44178c:	mov	x0, x19
  441790:	ldr	x19, [sp, #16]
  441794:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441798:	ldr	x3, [x8, #8]
  44179c:	add	x2, x2, #0xadd
  4417a0:	mov	w1, wzr
  4417a4:	ldp	x29, x30, [sp], #32
  4417a8:	b	442758 <feof@plt+0x3eeb8>
  4417ac:	mov	w1, #0x2                   	// #2
  4417b0:	b	441b20 <feof@plt+0x3e280>
  4417b4:	sub	sp, sp, #0x70
  4417b8:	add	x2, sp, #0x8
  4417bc:	mov	w1, #0x10                  	// #16
  4417c0:	stp	x29, x30, [sp, #16]
  4417c4:	stp	x28, x27, [sp, #32]
  4417c8:	stp	x26, x25, [sp, #48]
  4417cc:	stp	x24, x23, [sp, #64]
  4417d0:	stp	x22, x21, [sp, #80]
  4417d4:	stp	x20, x19, [sp, #96]
  4417d8:	add	x29, sp, #0x10
  4417dc:	mov	x19, x0
  4417e0:	bl	43ff04 <feof@plt+0x3c664>
  4417e4:	cbz	x0, 4418fc <feof@plt+0x3e05c>
  4417e8:	mov	x23, x0
  4417ec:	ldr	x24, [sp, #8]
  4417f0:	ldr	x27, [x23, #24]!
  4417f4:	mov	x20, x0
  4417f8:	cbz	x27, 441894 <feof@plt+0x3dff4>
  4417fc:	add	x25, x24, #0x18
  441800:	mov	x26, x23
  441804:	b	441820 <feof@plt+0x3df80>
  441808:	ldr	w8, [x27, #12]
  44180c:	cmp	w28, w8
  441810:	b.eq	44186c <feof@plt+0x3dfcc>  // b.none
  441814:	ldr	x26, [x26]
  441818:	ldr	x27, [x26]
  44181c:	cbz	x27, 441894 <feof@plt+0x3dff4>
  441820:	ldr	w8, [x27, #12]
  441824:	ldr	w9, [x24, #12]
  441828:	cmp	w8, w9
  44182c:	b.ne	441814 <feof@plt+0x3df74>  // b.any
  441830:	cbz	w8, 441874 <feof@plt+0x3dfd4>
  441834:	mov	x28, xzr
  441838:	add	x21, x27, #0x18
  44183c:	mov	x22, x25
  441840:	mov	x0, x21
  441844:	mov	x1, x22
  441848:	bl	44d4c0 <feof@plt+0x49c20>
  44184c:	cbz	w0, 441808 <feof@plt+0x3df68>
  441850:	ldr	w8, [x27, #12]
  441854:	add	x28, x28, #0x1
  441858:	add	x22, x22, #0x18
  44185c:	add	x21, x21, #0x18
  441860:	cmp	x28, x8
  441864:	b.cc	441840 <feof@plt+0x3dfa0>  // b.lo, b.ul, b.last
  441868:	b	44180c <feof@plt+0x3df6c>
  44186c:	ldr	x8, [x26]
  441870:	cbz	x8, 441894 <feof@plt+0x3dff4>
  441874:	ldr	x8, [x20]
  441878:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  44187c:	add	x2, x2, #0xc47
  441880:	mov	x0, x19
  441884:	add	x3, x8, #0x1
  441888:	mov	w1, wzr
  44188c:	bl	4424f8 <feof@plt+0x3ec58>
  441890:	b	4418fc <feof@plt+0x3e05c>
  441894:	ldr	w8, [x24, #12]
  441898:	mov	w9, #0x18                  	// #24
  44189c:	orr	x10, xzr, #0x18
  4418a0:	mov	x0, x19
  4418a4:	madd	x1, x8, x9, x10
  4418a8:	bl	44de04 <feof@plt+0x4a564>
  4418ac:	str	x0, [sp, #8]
  4418b0:	ldr	x8, [x23]
  4418b4:	str	x8, [x0]
  4418b8:	str	x0, [x23]
  4418bc:	ldr	x8, [x19, #448]
  4418c0:	ldurb	w8, [x8, #-20]
  4418c4:	cmp	w8, #0x16
  4418c8:	b.eq	4418fc <feof@plt+0x3e05c>  // b.none
  4418cc:	mov	x0, x19
  4418d0:	bl	4499fc <feof@plt+0x4615c>
  4418d4:	ldrb	w8, [x0, #4]
  4418d8:	cmp	w8, #0x16
  4418dc:	b.eq	4418fc <feof@plt+0x3e05c>  // b.none
  4418e0:	ldr	x8, [x19, #144]
  4418e4:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  4418e8:	add	x2, x2, #0xadd
  4418ec:	mov	x0, x19
  4418f0:	ldr	x3, [x8, #8]
  4418f4:	mov	w1, wzr
  4418f8:	bl	442758 <feof@plt+0x3eeb8>
  4418fc:	ldp	x20, x19, [sp, #96]
  441900:	ldp	x22, x21, [sp, #80]
  441904:	ldp	x24, x23, [sp, #64]
  441908:	ldp	x26, x25, [sp, #48]
  44190c:	ldp	x28, x27, [sp, #32]
  441910:	ldp	x29, x30, [sp, #16]
  441914:	add	sp, sp, #0x70
  441918:	ret
  44191c:	sub	sp, sp, #0x60
  441920:	add	x2, sp, #0x8
  441924:	mov	w1, #0x11                  	// #17
  441928:	stp	x29, x30, [sp, #16]
  44192c:	stp	x26, x25, [sp, #32]
  441930:	stp	x24, x23, [sp, #48]
  441934:	stp	x22, x21, [sp, #64]
  441938:	stp	x20, x19, [sp, #80]
  44193c:	add	x29, sp, #0x10
  441940:	mov	x19, x0
  441944:	bl	43ff04 <feof@plt+0x3c664>
  441948:	cbz	x0, 441a28 <feof@plt+0x3e188>
  44194c:	ldr	x23, [sp, #8]
  441950:	mov	x20, x0
  441954:	cbz	x23, 4419cc <feof@plt+0x3e12c>
  441958:	ldr	x25, [x20, #24]!
  44195c:	cbz	x25, 4419e8 <feof@plt+0x3e148>
  441960:	add	x24, x23, #0x18
  441964:	b	441980 <feof@plt+0x3e0e0>
  441968:	ldr	w8, [x25, #12]
  44196c:	cmp	w26, w8
  441970:	b.eq	4419d8 <feof@plt+0x3e138>  // b.none
  441974:	ldr	x20, [x20]
  441978:	ldr	x25, [x20]
  44197c:	cbz	x25, 4419e8 <feof@plt+0x3e148>
  441980:	ldr	w8, [x25, #12]
  441984:	ldr	w9, [x23, #12]
  441988:	cmp	w8, w9
  44198c:	b.ne	441974 <feof@plt+0x3e0d4>  // b.any
  441990:	cbz	w8, 4419e0 <feof@plt+0x3e140>
  441994:	mov	x26, xzr
  441998:	add	x21, x25, #0x18
  44199c:	mov	x22, x24
  4419a0:	mov	x0, x21
  4419a4:	mov	x1, x22
  4419a8:	bl	44d4c0 <feof@plt+0x49c20>
  4419ac:	cbz	w0, 441968 <feof@plt+0x3e0c8>
  4419b0:	ldr	w8, [x25, #12]
  4419b4:	add	x26, x26, #0x1
  4419b8:	add	x22, x22, #0x18
  4419bc:	add	x21, x21, #0x18
  4419c0:	cmp	x26, x8
  4419c4:	b.cc	4419a0 <feof@plt+0x3e100>  // b.lo, b.ul, b.last
  4419c8:	b	44196c <feof@plt+0x3e0cc>
  4419cc:	mov	x0, x20
  4419d0:	bl	452ac8 <feof@plt+0x4f228>
  4419d4:	b	441a28 <feof@plt+0x3e188>
  4419d8:	ldr	x25, [x20]
  4419dc:	cbz	x25, 4419e8 <feof@plt+0x3e148>
  4419e0:	ldr	x8, [x25]
  4419e4:	str	x8, [x20]
  4419e8:	ldr	x8, [x19, #448]
  4419ec:	ldurb	w8, [x8, #-20]
  4419f0:	cmp	w8, #0x16
  4419f4:	b.eq	441a28 <feof@plt+0x3e188>  // b.none
  4419f8:	mov	x0, x19
  4419fc:	bl	4499fc <feof@plt+0x4615c>
  441a00:	ldrb	w8, [x0, #4]
  441a04:	cmp	w8, #0x16
  441a08:	b.eq	441a28 <feof@plt+0x3e188>  // b.none
  441a0c:	ldr	x8, [x19, #144]
  441a10:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441a14:	add	x2, x2, #0xadd
  441a18:	mov	x0, x19
  441a1c:	ldr	x3, [x8, #8]
  441a20:	mov	w1, wzr
  441a24:	bl	442758 <feof@plt+0x3eeb8>
  441a28:	ldp	x20, x19, [sp, #80]
  441a2c:	ldp	x22, x21, [sp, #64]
  441a30:	ldp	x24, x23, [sp, #48]
  441a34:	ldp	x26, x25, [sp, #32]
  441a38:	ldp	x29, x30, [sp, #16]
  441a3c:	add	sp, sp, #0x60
  441a40:	ret
  441a44:	stp	x29, x30, [sp, #-32]!
  441a48:	stp	x20, x19, [sp, #16]
  441a4c:	mov	x29, sp
  441a50:	mov	w20, w1
  441a54:	mov	x19, x0
  441a58:	bl	4499fc <feof@plt+0x4615c>
  441a5c:	ldrb	w8, [x0, #4]
  441a60:	cmp	w8, #0x35
  441a64:	b.ne	441aa0 <feof@plt+0x3e200>  // b.any
  441a68:	ldr	x0, [x0, #8]
  441a6c:	tbz	w20, #0, 441a94 <feof@plt+0x3e1f4>
  441a70:	ldr	x8, [x19, #1248]
  441a74:	cmp	x0, x8
  441a78:	b.eq	441af0 <feof@plt+0x3e250>  // b.none
  441a7c:	ldr	x8, [x19, #1288]
  441a80:	cmp	x0, x8
  441a84:	b.eq	441afc <feof@plt+0x3e25c>  // b.none
  441a88:	ldr	x8, [x19, #1296]
  441a8c:	cmp	x0, x8
  441a90:	b.eq	441afc <feof@plt+0x3e25c>  // b.none
  441a94:	ldrb	w8, [x0, #18]
  441a98:	tbnz	w8, #3, 441b10 <feof@plt+0x3e270>
  441a9c:	b	441b14 <feof@plt+0x3e274>
  441aa0:	ldrb	w9, [x0, #6]
  441aa4:	tbnz	w9, #4, 441ac4 <feof@plt+0x3e224>
  441aa8:	cmp	w8, #0x16
  441aac:	b.ne	441ae4 <feof@plt+0x3e244>  // b.any
  441ab0:	ldr	x8, [x19, #144]
  441ab4:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441ab8:	add	x2, x2, #0xa30
  441abc:	ldr	x3, [x8, #8]
  441ac0:	b	441ad4 <feof@plt+0x3e234>
  441ac4:	ldr	x8, [x0, #8]
  441ac8:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441acc:	add	x2, x2, #0x9f0
  441ad0:	ldr	x3, [x8]
  441ad4:	mov	w1, #0x3                   	// #3
  441ad8:	mov	x0, x19
  441adc:	bl	4424f8 <feof@plt+0x3ec58>
  441ae0:	b	441b10 <feof@plt+0x3e270>
  441ae4:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441ae8:	add	x2, x2, #0xa55
  441aec:	b	441b04 <feof@plt+0x3e264>
  441af0:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441af4:	add	x2, x2, #0x996
  441af8:	b	441b04 <feof@plt+0x3e264>
  441afc:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441b00:	add	x2, x2, #0x9bf
  441b04:	mov	w1, #0x3                   	// #3
  441b08:	mov	x0, x19
  441b0c:	bl	4424f8 <feof@plt+0x3ec58>
  441b10:	mov	x0, xzr
  441b14:	ldp	x20, x19, [sp, #16]
  441b18:	ldp	x29, x30, [sp], #32
  441b1c:	ret
  441b20:	sub	sp, sp, #0x50
  441b24:	stp	x29, x30, [sp, #32]
  441b28:	stp	x22, x21, [sp, #48]
  441b2c:	stp	x20, x19, [sp, #64]
  441b30:	str	xzr, [sp, #16]
  441b34:	ldrb	w8, [x0, #1123]
  441b38:	add	x29, sp, #0x20
  441b3c:	mov	w21, w1
  441b40:	sub	x1, x29, #0x4
  441b44:	cmp	w8, #0x0
  441b48:	cset	w8, eq  // eq = none
  441b4c:	add	x2, sp, #0x10
  441b50:	add	x3, sp, #0xc
  441b54:	mov	x20, x0
  441b58:	strb	w8, [x0, #21]
  441b5c:	bl	441c70 <feof@plt+0x3e3d0>
  441b60:	mov	x19, x0
  441b64:	cbz	x0, 441c48 <feof@plt+0x3e3a8>
  441b68:	ldrb	w8, [x19]
  441b6c:	cbz	w8, 441bb0 <feof@plt+0x3e310>
  441b70:	ldr	x8, [x20, #40]
  441b74:	ldr	w8, [x8, #48]
  441b78:	cmp	w8, #0xc8
  441b7c:	b.cc	441b98 <feof@plt+0x3e2f8>  // b.lo, b.ul, b.last
  441b80:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441b84:	add	x2, x2, #0xa8b
  441b88:	mov	w1, #0x3                   	// #3
  441b8c:	mov	x0, x20
  441b90:	bl	4424f8 <feof@plt+0x3ec58>
  441b94:	b	441c48 <feof@plt+0x3e3a8>
  441b98:	ldr	x8, [x20, #136]
  441b9c:	ldr	x8, [x8, #8]
  441ba0:	cbz	x8, 441bd8 <feof@plt+0x3e338>
  441ba4:	mov	x0, x20
  441ba8:	bl	452120 <feof@plt+0x4e880>
  441bac:	b	441b98 <feof@plt+0x3e2f8>
  441bb0:	ldr	x8, [x20, #144]
  441bb4:	ldr	w2, [sp, #12]
  441bb8:	adrp	x4, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441bbc:	add	x4, x4, #0xa75
  441bc0:	ldr	x5, [x8, #8]
  441bc4:	mov	w1, #0x3                   	// #3
  441bc8:	mov	x0, x20
  441bcc:	mov	w3, wzr
  441bd0:	bl	4429b8 <feof@plt+0x3f118>
  441bd4:	b	441c48 <feof@plt+0x3e3a8>
  441bd8:	ldr	x8, [x20, #448]
  441bdc:	ldurb	w8, [x8, #-20]
  441be0:	cmp	w8, #0x16
  441be4:	b.eq	441bfc <feof@plt+0x3e35c>  // b.none
  441be8:	mov	x0, x20
  441bec:	bl	4499fc <feof@plt+0x4615c>
  441bf0:	ldrb	w8, [x0, #4]
  441bf4:	cmp	w8, #0x16
  441bf8:	b.ne	441be8 <feof@plt+0x3e348>  // b.any
  441bfc:	ldr	x8, [x20, #928]
  441c00:	cbz	x8, 441c2c <feof@plt+0x3e38c>
  441c04:	ldr	x9, [x20, #144]
  441c08:	ldur	w22, [x29, #-4]
  441c0c:	ldr	w1, [x20, #48]
  441c10:	ldr	x5, [sp, #16]
  441c14:	ldr	x2, [x9, #8]
  441c18:	mov	x0, x20
  441c1c:	mov	x3, x19
  441c20:	mov	w4, w22
  441c24:	blr	x8
  441c28:	b	441c30 <feof@plt+0x3e390>
  441c2c:	ldur	w22, [x29, #-4]
  441c30:	ldr	w4, [sp, #12]
  441c34:	mov	x0, x20
  441c38:	mov	x1, x19
  441c3c:	mov	w2, w22
  441c40:	mov	w3, w21
  441c44:	bl	447404 <feof@plt+0x43b64>
  441c48:	mov	x0, x19
  441c4c:	bl	4031d0 <free@plt>
  441c50:	ldr	x0, [sp, #16]
  441c54:	cbz	x0, 441c5c <feof@plt+0x3e3bc>
  441c58:	bl	4031d0 <free@plt>
  441c5c:	ldp	x20, x19, [sp, #64]
  441c60:	ldp	x22, x21, [sp, #48]
  441c64:	ldp	x29, x30, [sp, #32]
  441c68:	add	sp, sp, #0x50
  441c6c:	ret
  441c70:	stp	x29, x30, [sp, #-96]!
  441c74:	stp	x22, x21, [sp, #64]
  441c78:	stp	x20, x19, [sp, #80]
  441c7c:	mov	x21, x3
  441c80:	mov	x20, x2
  441c84:	mov	x22, x1
  441c88:	mov	x19, x0
  441c8c:	stp	x28, x27, [sp, #16]
  441c90:	stp	x26, x25, [sp, #32]
  441c94:	stp	x24, x23, [sp, #48]
  441c98:	mov	x29, sp
  441c9c:	mov	x0, x19
  441ca0:	bl	452228 <feof@plt+0x4e988>
  441ca4:	ldrb	w8, [x0, #4]
  441ca8:	cmp	w8, #0x53
  441cac:	b.eq	441c9c <feof@plt+0x3e3fc>  // b.none
  441cb0:	ldr	w8, [x0]
  441cb4:	mov	x23, x0
  441cb8:	str	w8, [x21]
  441cbc:	ldrb	w8, [x0, #4]
  441cc0:	cmp	w8, #0x3
  441cc4:	b.eq	441d40 <feof@plt+0x3e4a0>  // b.none
  441cc8:	cmp	w8, #0x44
  441ccc:	b.eq	441d04 <feof@plt+0x3e464>  // b.none
  441cd0:	cmp	w8, #0x3e
  441cd4:	b.ne	441ce8 <feof@plt+0x3e448>  // b.any
  441cd8:	ldr	x8, [x23, #16]
  441cdc:	ldrb	w8, [x8]
  441ce0:	cmp	w8, #0x52
  441ce4:	b.ne	441d04 <feof@plt+0x3e464>  // b.any
  441ce8:	ldr	x8, [x19, #144]
  441cec:	adrp	x9, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  441cf0:	add	x9, x9, #0x1c8
  441cf4:	cmp	x8, x9
  441cf8:	b.eq	441db8 <feof@plt+0x3e518>  // b.none
  441cfc:	ldr	x3, [x8, #8]
  441d00:	b	441dc0 <feof@plt+0x3e520>
  441d04:	ldr	w8, [x23, #8]
  441d08:	sub	w0, w8, #0x1
  441d0c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  441d10:	ldr	w9, [x23, #8]
  441d14:	ldr	x8, [x23, #16]
  441d18:	mov	x21, x0
  441d1c:	sub	w24, w9, #0x2
  441d20:	add	x1, x8, #0x1
  441d24:	mov	x2, x24
  441d28:	bl	402fc0 <memcpy@plt>
  441d2c:	strb	wzr, [x21, x24]
  441d30:	ldrb	w8, [x23, #4]
  441d34:	cmp	w8, #0x44
  441d38:	cset	w8, eq  // eq = none
  441d3c:	b	441d50 <feof@plt+0x3e4b0>
  441d40:	mov	x0, x19
  441d44:	bl	440968 <feof@plt+0x3d0c8>
  441d48:	mov	x21, x0
  441d4c:	mov	w8, #0x1                   	// #1
  441d50:	str	w8, [x22]
  441d54:	ldr	x8, [x19, #144]
  441d58:	adrp	x9, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  441d5c:	add	x9, x9, #0x1c8
  441d60:	cmp	x8, x9
  441d64:	b.eq	441dd8 <feof@plt+0x3e538>  // b.none
  441d68:	cbz	x20, 441d74 <feof@plt+0x3e4d4>
  441d6c:	ldrb	w8, [x19, #1123]
  441d70:	cbz	w8, 441df8 <feof@plt+0x3e558>
  441d74:	ldr	x8, [x19, #448]
  441d78:	ldurb	w8, [x8, #-20]
  441d7c:	cmp	w8, #0x16
  441d80:	b.eq	441dd8 <feof@plt+0x3e538>  // b.none
  441d84:	mov	x0, x19
  441d88:	bl	452228 <feof@plt+0x4e988>
  441d8c:	ldrb	w8, [x0, #4]
  441d90:	cmp	w8, #0x16
  441d94:	b.eq	441dd8 <feof@plt+0x3e538>  // b.none
  441d98:	ldr	x8, [x19, #144]
  441d9c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441da0:	add	x2, x2, #0xadd
  441da4:	mov	x0, x19
  441da8:	ldr	x3, [x8, #8]
  441dac:	mov	w1, wzr
  441db0:	bl	442758 <feof@plt+0x3eeb8>
  441db4:	b	441dd8 <feof@plt+0x3e538>
  441db8:	adrp	x3, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441dbc:	add	x3, x3, #0xaa6
  441dc0:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441dc4:	add	x2, x2, #0xab8
  441dc8:	mov	w1, #0x3                   	// #3
  441dcc:	mov	x0, x19
  441dd0:	bl	4424f8 <feof@plt+0x3ec58>
  441dd4:	mov	x21, xzr
  441dd8:	mov	x0, x21
  441ddc:	ldp	x20, x19, [sp, #80]
  441de0:	ldp	x22, x21, [sp, #64]
  441de4:	ldp	x24, x23, [sp, #48]
  441de8:	ldp	x26, x25, [sp, #32]
  441dec:	ldp	x28, x27, [sp, #16]
  441df0:	ldp	x29, x30, [sp], #96
  441df4:	ret
  441df8:	mov	w0, #0x40                  	// #64
  441dfc:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  441e00:	ldr	x8, [x19, #448]
  441e04:	mov	x22, x0
  441e08:	mov	x25, xzr
  441e0c:	ldurb	w8, [x8, #-20]
  441e10:	cmp	w8, #0x16
  441e14:	b.ne	441e24 <feof@plt+0x3e584>  // b.any
  441e18:	str	xzr, [x22, x25, lsl #3]
  441e1c:	str	x22, [x20]
  441e20:	b	441dd8 <feof@plt+0x3e538>
  441e24:	adrp	x23, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  441e28:	mov	w26, #0x8                   	// #8
  441e2c:	add	x23, x23, #0xadd
  441e30:	mov	x0, x19
  441e34:	bl	4499fc <feof@plt+0x4615c>
  441e38:	ldrb	w8, [x0, #4]
  441e3c:	cmp	w8, #0x16
  441e40:	b.eq	441e18 <feof@plt+0x3e578>  // b.none
  441e44:	cmp	w8, #0x4f
  441e48:	b.eq	441e68 <feof@plt+0x3e5c8>  // b.none
  441e4c:	ldr	x8, [x19, #144]
  441e50:	mov	w1, #0x2                   	// #2
  441e54:	mov	x0, x19
  441e58:	mov	x2, x23
  441e5c:	ldr	x3, [x8, #8]
  441e60:	bl	4424f8 <feof@plt+0x3ec58>
  441e64:	b	441e30 <feof@plt+0x3e590>
  441e68:	add	x27, x25, #0x1
  441e6c:	mov	x24, x0
  441e70:	cmp	x27, x26
  441e74:	b.cc	441e90 <feof@plt+0x3e5f0>  // b.lo, b.ul, b.last
  441e78:	lsl	x1, x26, #4
  441e7c:	mov	x0, x22
  441e80:	lsl	x28, x26, #1
  441e84:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  441e88:	mov	x22, x0
  441e8c:	mov	x26, x28
  441e90:	str	x24, [x22, x25, lsl #3]
  441e94:	mov	x25, x27
  441e98:	b	441e30 <feof@plt+0x3e590>
  441e9c:	stp	x29, x30, [sp, #-64]!
  441ea0:	stp	x22, x21, [sp, #32]
  441ea4:	stp	x20, x19, [sp, #48]
  441ea8:	ldr	x8, [x0, #840]
  441eac:	ldr	x9, [x0, #832]
  441eb0:	str	x23, [sp, #16]
  441eb4:	ldr	x23, [x0]
  441eb8:	mov	x20, x3
  441ebc:	sub	x8, x8, x9
  441ec0:	mov	w22, w2
  441ec4:	mov	x19, x0
  441ec8:	cmp	x8, #0x1f
  441ecc:	mov	w21, w1
  441ed0:	mov	x29, sp
  441ed4:	b.hi	441ee8 <feof@plt+0x3e648>  // b.pmore
  441ed8:	add	x0, x19, #0x328
  441edc:	mov	w1, #0x20                  	// #32
  441ee0:	bl	47bae8 <_obstack_newchunk@@Base>
  441ee4:	ldr	x9, [x19, #832]
  441ee8:	ldr	x8, [x19, #824]
  441eec:	add	x9, x9, #0x20
  441ef0:	str	x9, [x19, #832]
  441ef4:	cmp	x9, x8
  441ef8:	b.ne	441f08 <feof@plt+0x3e668>  // b.any
  441efc:	ldrb	w10, [x19, #888]
  441f00:	orr	w10, w10, #0x2
  441f04:	strb	w10, [x19, #888]
  441f08:	ldr	x11, [x19, #856]
  441f0c:	ldr	x12, [x19, #816]
  441f10:	ldr	x10, [x19, #840]
  441f14:	add	x9, x11, x9
  441f18:	bic	x9, x9, x11
  441f1c:	sub	x11, x9, x12
  441f20:	sub	x12, x10, x12
  441f24:	cmp	x11, x12
  441f28:	str	x9, [x19, #832]
  441f2c:	b.ls	441f38 <feof@plt+0x3e698>  // b.plast
  441f30:	mov	x9, x10
  441f34:	str	x10, [x19, #832]
  441f38:	ldr	w10, [x19, #48]
  441f3c:	str	x9, [x19, #824]
  441f40:	str	w10, [x8, #8]
  441f44:	ldr	x9, [x23, #96]
  441f48:	str	x9, [x8]
  441f4c:	ldrb	w9, [x19, #18]
  441f50:	str	w22, [x8, #28]
  441f54:	cmp	w9, #0x0
  441f58:	cset	w9, ne  // ne = any
  441f5c:	cmp	w21, #0x0
  441f60:	cset	w10, eq  // eq = none
  441f64:	strb	w9, [x8, #25]
  441f68:	orr	w9, w10, w9
  441f6c:	strb	w9, [x8, #24]
  441f70:	ldrb	w9, [x19, #440]
  441f74:	cbz	w9, 441f80 <feof@plt+0x3e6e0>
  441f78:	ldr	x9, [x19, #424]
  441f7c:	cbz	x9, 441f84 <feof@plt+0x3e6e4>
  441f80:	mov	x20, xzr
  441f84:	str	x20, [x8, #16]
  441f88:	strb	w21, [x19, #18]
  441f8c:	str	x8, [x23, #96]
  441f90:	ldp	x20, x19, [sp, #48]
  441f94:	ldp	x22, x21, [sp, #32]
  441f98:	ldr	x23, [sp, #16]
  441f9c:	ldp	x29, x30, [sp], #64
  441fa0:	ret
  441fa4:	sub	sp, sp, #0x60
  441fa8:	stp	x29, x30, [sp, #16]
  441fac:	stp	x24, x23, [sp, #48]
  441fb0:	stp	x22, x21, [sp, #64]
  441fb4:	stp	x20, x19, [sp, #80]
  441fb8:	ldr	x20, [x0, #40]
  441fbc:	mov	w10, #0x18                  	// #24
  441fc0:	mov	w1, #0x1                   	// #1
  441fc4:	str	x25, [sp, #32]
  441fc8:	ldr	w8, [x20, #12]
  441fcc:	ldr	x9, [x20]
  441fd0:	add	x29, sp, #0x10
  441fd4:	mov	x19, x0
  441fd8:	sub	w8, w8, #0x1
  441fdc:	smaddl	x8, w8, w10, x9
  441fe0:	ldr	x21, [x8, #8]
  441fe4:	ldrb	w23, [x8, #5]
  441fe8:	bl	4529b4 <feof@plt+0x4f114>
  441fec:	mov	x0, x19
  441ff0:	bl	452228 <feof@plt+0x4e988>
  441ff4:	ldrb	w8, [x0, #4]
  441ff8:	mov	x1, x0
  441ffc:	cmp	w8, #0x37
  442000:	b.ne	442044 <feof@plt+0x3e7a4>  // b.any
  442004:	ldr	w8, [x1, #8]
  442008:	cbz	w8, 44207c <feof@plt+0x3e7dc>
  44200c:	ldr	x9, [x1, #16]
  442010:	adrp	x10, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  442014:	mov	w22, wzr
  442018:	add	x10, x10, #0x4a2
  44201c:	mov	w11, #0xa                   	// #10
  442020:	ldrb	w12, [x9]
  442024:	ldrh	w13, [x10, x12, lsl #1]
  442028:	tbz	w13, #2, 442044 <feof@plt+0x3e7a4>
  44202c:	madd	w12, w22, w11, w12
  442030:	sub	x8, x8, #0x1
  442034:	add	x9, x9, #0x1
  442038:	sub	w22, w12, #0x30
  44203c:	cbnz	x8, 442020 <feof@plt+0x3e780>
  442040:	b	442080 <feof@plt+0x3e7e0>
  442044:	mov	x0, x19
  442048:	bl	44d198 <feof@plt+0x498f8>
  44204c:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  442050:	add	x2, x2, #0xc58
  442054:	mov	x3, x0
  442058:	mov	x0, x19
  44205c:	ldp	x20, x19, [sp, #80]
  442060:	ldp	x22, x21, [sp, #64]
  442064:	ldp	x24, x23, [sp, #48]
  442068:	ldr	x25, [sp, #32]
  44206c:	ldp	x29, x30, [sp, #16]
  442070:	mov	w1, #0x3                   	// #3
  442074:	add	sp, sp, #0x60
  442078:	b	4424f8 <feof@plt+0x3ec58>
  44207c:	mov	w22, wzr
  442080:	mov	x0, x19
  442084:	bl	452228 <feof@plt+0x4e988>
  442088:	ldrb	w8, [x0, #4]
  44208c:	cmp	w8, #0x16
  442090:	b.eq	4421a8 <feof@plt+0x3e908>  // b.none
  442094:	mov	x1, x0
  442098:	cmp	w8, #0x3e
  44209c:	b.ne	4421b0 <feof@plt+0x3e910>  // b.any
  4420a0:	add	x1, x1, #0x8
  4420a4:	mov	x3, sp
  4420a8:	mov	w2, #0x1                   	// #1
  4420ac:	mov	w4, #0x3e                  	// #62
  4420b0:	mov	x0, x19
  4420b4:	stp	xzr, xzr, [sp]
  4420b8:	bl	43c288 <feof@plt+0x389e8>
  4420bc:	ldr	x8, [sp, #8]
  4420c0:	tst	w0, #0x1
  4420c4:	mov	x0, x19
  4420c8:	csel	x21, x8, x21, ne  // ne = any
  4420cc:	bl	4499fc <feof@plt+0x4615c>
  4420d0:	ldrb	w8, [x0, #4]
  4420d4:	cmp	w8, #0x16
  4420d8:	b.eq	4421f0 <feof@plt+0x3e950>  // b.none
  4420dc:	mov	x1, x0
  4420e0:	cmp	w8, #0x37
  4420e4:	b.ne	4421c4 <feof@plt+0x3e924>  // b.any
  4420e8:	ldr	w8, [x1, #8]
  4420ec:	cmp	w8, #0x1
  4420f0:	b.ne	4421c4 <feof@plt+0x3e924>  // b.any
  4420f4:	ldr	x8, [x1, #16]
  4420f8:	ldrb	w8, [x8]
  4420fc:	cmp	w8, #0x34
  442100:	b.eq	4421c4 <feof@plt+0x3e924>  // b.none
  442104:	sub	w9, w8, #0x31
  442108:	cmp	w9, #0x4
  44210c:	b.cs	4421c4 <feof@plt+0x3e924>  // b.hs, b.nlast
  442110:	cmp	w8, #0x32
  442114:	b.eq	442350 <feof@plt+0x3eab0>  // b.none
  442118:	cmp	w8, #0x31
  44211c:	b.ne	4423a0 <feof@plt+0x3eb00>  // b.any
  442120:	mov	x0, x19
  442124:	mov	x1, x21
  442128:	bl	447a78 <feof@plt+0x441d8>
  44212c:	mov	x0, x19
  442130:	bl	4499fc <feof@plt+0x4615c>
  442134:	ldrb	w8, [x0, #4]
  442138:	cmp	w8, #0x16
  44213c:	b.eq	44219c <feof@plt+0x3e8fc>  // b.none
  442140:	mov	x1, x0
  442144:	cmp	w8, #0x37
  442148:	b.ne	44217c <feof@plt+0x3e8dc>  // b.any
  44214c:	ldr	w8, [x1, #8]
  442150:	cmp	w8, #0x1
  442154:	b.ne	44217c <feof@plt+0x3e8dc>  // b.any
  442158:	ldr	x8, [x1, #16]
  44215c:	ldrb	w8, [x8]
  442160:	sub	w9, w8, #0x32
  442164:	cmp	w9, #0x2
  442168:	b.hi	44217c <feof@plt+0x3e8dc>  // b.pmore
  44216c:	cmp	w8, #0x34
  442170:	b.eq	44217c <feof@plt+0x3e8dc>  // b.none
  442174:	cmp	w8, #0x32
  442178:	b.ne	44243c <feof@plt+0x3eb9c>  // b.any
  44217c:	mov	x0, x19
  442180:	bl	44d198 <feof@plt+0x498f8>
  442184:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  442188:	mov	x3, x0
  44218c:	add	x2, x2, #0xcb5
  442190:	mov	w1, #0x3                   	// #3
  442194:	mov	x0, x19
  442198:	bl	4424f8 <feof@plt+0x3ec58>
  44219c:	mov	w24, wzr
  4421a0:	mov	w23, wzr
  4421a4:	b	4421f8 <feof@plt+0x3e958>
  4421a8:	mov	w24, #0x3                   	// #3
  4421ac:	b	44224c <feof@plt+0x3e9ac>
  4421b0:	mov	x0, x19
  4421b4:	bl	44d198 <feof@plt+0x498f8>
  4421b8:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  4421bc:	add	x2, x2, #0xbcb
  4421c0:	b	442054 <feof@plt+0x3e7b4>
  4421c4:	mov	x0, x19
  4421c8:	bl	44d198 <feof@plt+0x498f8>
  4421cc:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  4421d0:	mov	x3, x0
  4421d4:	add	x2, x2, #0xcb5
  4421d8:	mov	w1, #0x3                   	// #3
  4421dc:	mov	x0, x19
  4421e0:	mov	w24, #0x3                   	// #3
  4421e4:	bl	4424f8 <feof@plt+0x3ec58>
  4421e8:	mov	w23, wzr
  4421ec:	b	4421f8 <feof@plt+0x3e958>
  4421f0:	mov	w23, wzr
  4421f4:	mov	w24, #0x3                   	// #3
  4421f8:	ldr	x8, [x19]
  4421fc:	strb	w23, [x8, #106]
  442200:	ldr	x8, [x19, #448]
  442204:	ldurb	w8, [x8, #-20]
  442208:	cmp	w8, #0x16
  44220c:	b.eq	44224c <feof@plt+0x3e9ac>  // b.none
  442210:	mov	x0, x19
  442214:	bl	4499fc <feof@plt+0x4615c>
  442218:	ldrb	w8, [x0, #4]
  44221c:	cmp	w8, #0x16
  442220:	b.eq	44224c <feof@plt+0x3e9ac>  // b.none
  442224:	ldr	x8, [x19, #144]
  442228:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  44222c:	add	x2, x2, #0xadd
  442230:	mov	x0, x19
  442234:	ldr	x3, [x8, #8]
  442238:	mov	w1, wzr
  44223c:	bl	442758 <feof@plt+0x3eeb8>
  442240:	b	44224c <feof@plt+0x3e9ac>
  442244:	mov	x0, x19
  442248:	bl	452120 <feof@plt+0x4e880>
  44224c:	ldr	x8, [x19, #136]
  442250:	ldr	x8, [x8, #8]
  442254:	cbnz	x8, 442244 <feof@plt+0x3e9a4>
  442258:	ldr	x8, [x19, #448]
  44225c:	ldurb	w8, [x8, #-20]
  442260:	cmp	w8, #0x16
  442264:	b.eq	44227c <feof@plt+0x3e9dc>  // b.none
  442268:	mov	x0, x19
  44226c:	bl	4499fc <feof@plt+0x4615c>
  442270:	ldrb	w8, [x0, #4]
  442274:	cmp	w8, #0x16
  442278:	b.ne	442268 <feof@plt+0x3e9c8>  // b.any
  44227c:	cmp	w24, #0x1
  442280:	b.ne	4422dc <feof@plt+0x3ea3c>  // b.any
  442284:	ldr	w8, [x20, #12]
  442288:	ldr	x9, [x20]
  44228c:	mov	w10, #0x18                  	// #24
  442290:	mov	x0, x20
  442294:	sub	w8, w8, #0x1
  442298:	smaddl	x25, w8, w10, x9
  44229c:	mov	x1, x25
  4422a0:	bl	44e604 <feof@plt+0x4ad64>
  4422a4:	ldr	w8, [x25, #20]
  4422a8:	cbz	w8, 4422c0 <feof@plt+0x3ea20>
  4422ac:	cbz	x0, 4422dc <feof@plt+0x3ea3c>
  4422b0:	ldr	x0, [x0, #8]
  4422b4:	mov	x1, x21
  4422b8:	bl	479ca4 <feof@plt+0x76404>
  4422bc:	cbz	w0, 4422dc <feof@plt+0x3ea3c>
  4422c0:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  4422c4:	add	x2, x2, #0xc7f
  4422c8:	mov	x0, x19
  4422cc:	mov	w1, wzr
  4422d0:	mov	x3, x21
  4422d4:	bl	442628 <feof@plt+0x3ed88>
  4422d8:	b	442334 <feof@plt+0x3ea94>
  4422dc:	ldr	x0, [x19, #40]
  4422e0:	mov	w1, w24
  4422e4:	mov	w2, w23
  4422e8:	mov	x3, x21
  4422ec:	ldr	w8, [x0, #56]
  4422f0:	mov	w4, w22
  4422f4:	sub	w8, w8, #0x1
  4422f8:	str	w8, [x0, #56]
  4422fc:	bl	44e7e4 <feof@plt+0x4af44>
  442300:	mov	x21, x0
  442304:	cbz	x0, 442318 <feof@plt+0x3ea78>
  442308:	ldr	x0, [x19, #40]
  44230c:	ldr	w1, [x21, #16]
  442310:	mov	w2, #0x7f                  	// #127
  442314:	bl	44ecdc <feof@plt+0x4b43c>
  442318:	ldr	x8, [x19, #912]
  44231c:	cbz	x8, 44232c <feof@plt+0x3ea8c>
  442320:	mov	x0, x19
  442324:	mov	x1, x21
  442328:	blr	x8
  44232c:	mov	w8, #0x1                   	// #1
  442330:	strb	w8, [x20, #116]
  442334:	ldp	x20, x19, [sp, #80]
  442338:	ldp	x22, x21, [sp, #64]
  44233c:	ldp	x24, x23, [sp, #48]
  442340:	ldr	x25, [sp, #32]
  442344:	ldp	x29, x30, [sp, #16]
  442348:	add	sp, sp, #0x60
  44234c:	ret
  442350:	mov	x0, x19
  442354:	bl	4499fc <feof@plt+0x4615c>
  442358:	ldrb	w8, [x0, #4]
  44235c:	cmp	w8, #0x16
  442360:	b.eq	442430 <feof@plt+0x3eb90>  // b.none
  442364:	mov	x1, x0
  442368:	cmp	w8, #0x37
  44236c:	b.ne	442410 <feof@plt+0x3eb70>  // b.any
  442370:	ldr	w8, [x1, #8]
  442374:	cmp	w8, #0x1
  442378:	b.ne	442410 <feof@plt+0x3eb70>  // b.any
  44237c:	ldr	x8, [x1, #16]
  442380:	ldrb	w8, [x8]
  442384:	cmp	w8, #0x34
  442388:	b.eq	442410 <feof@plt+0x3eb70>  // b.none
  44238c:	sub	w8, w8, #0x33
  442390:	cmp	w8, #0x2
  442394:	b.cs	442410 <feof@plt+0x3eb70>  // b.hs, b.nlast
  442398:	mov	w24, #0x1                   	// #1
  44239c:	b	4423a4 <feof@plt+0x3eb04>
  4423a0:	mov	w24, #0x3                   	// #3
  4423a4:	mov	x0, x19
  4423a8:	bl	4499fc <feof@plt+0x4615c>
  4423ac:	ldrb	w8, [x0, #4]
  4423b0:	cmp	w8, #0x16
  4423b4:	b.eq	442408 <feof@plt+0x3eb68>  // b.none
  4423b8:	mov	x1, x0
  4423bc:	cmp	w8, #0x37
  4423c0:	b.ne	4423e8 <feof@plt+0x3eb48>  // b.any
  4423c4:	ldr	w8, [x1, #8]
  4423c8:	cmp	w8, #0x1
  4423cc:	b.ne	4423e8 <feof@plt+0x3eb48>  // b.any
  4423d0:	ldr	x8, [x1, #16]
  4423d4:	ldrb	w8, [x8]
  4423d8:	cmp	w8, #0x34
  4423dc:	b.ne	4423e8 <feof@plt+0x3eb48>  // b.any
  4423e0:	mov	w23, #0x2                   	// #2
  4423e4:	b	4421f8 <feof@plt+0x3e958>
  4423e8:	mov	x0, x19
  4423ec:	bl	44d198 <feof@plt+0x498f8>
  4423f0:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  4423f4:	mov	x3, x0
  4423f8:	add	x2, x2, #0xcb5
  4423fc:	mov	w1, #0x3                   	// #3
  442400:	mov	x0, x19
  442404:	bl	4424f8 <feof@plt+0x3ec58>
  442408:	mov	w23, #0x1                   	// #1
  44240c:	b	4421f8 <feof@plt+0x3e958>
  442410:	mov	x0, x19
  442414:	bl	44d198 <feof@plt+0x498f8>
  442418:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  44241c:	mov	x3, x0
  442420:	add	x2, x2, #0xcb5
  442424:	mov	w1, #0x3                   	// #3
  442428:	mov	x0, x19
  44242c:	bl	4424f8 <feof@plt+0x3ec58>
  442430:	mov	w23, wzr
  442434:	mov	w24, #0x1                   	// #1
  442438:	b	4421f8 <feof@plt+0x3e958>
  44243c:	mov	w24, wzr
  442440:	b	4423a4 <feof@plt+0x3eb04>
  442444:	sub	sp, sp, #0x30
  442448:	stp	x29, x30, [sp, #16]
  44244c:	stp	x20, x19, [sp, #32]
  442450:	add	x29, sp, #0x10
  442454:	mov	w20, w1
  442458:	mov	x19, x0
  44245c:	bl	4499fc <feof@plt+0x4615c>
  442460:	ldrb	w8, [x0, #4]
  442464:	cmp	w8, #0x3e
  442468:	b.ne	4424bc <feof@plt+0x3ec1c>  // b.any
  44246c:	add	x1, x0, #0x8
  442470:	mov	x3, sp
  442474:	mov	w2, #0x1                   	// #1
  442478:	mov	w4, #0x3e                  	// #62
  44247c:	mov	x0, x19
  442480:	bl	43c288 <feof@plt+0x389e8>
  442484:	tbz	w0, #0, 4424bc <feof@plt+0x3ec1c>
  442488:	ldr	w8, [sp]
  44248c:	cbz	w8, 4424bc <feof@plt+0x3ec1c>
  442490:	ldr	x3, [sp, #8]
  442494:	tst	w20, #0x1
  442498:	mov	w8, #0x3                   	// #3
  44249c:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4424a0:	csel	w1, w8, wzr, ne  // ne = any
  4424a4:	add	x2, x2, #0x236
  4424a8:	mov	x0, x19
  4424ac:	bl	4424f8 <feof@plt+0x3ec58>
  4424b0:	ldr	x0, [sp, #8]
  4424b4:	bl	4031d0 <free@plt>
  4424b8:	b	4424e8 <feof@plt+0x3ec48>
  4424bc:	adrp	x8, 4b4000 <_obstack_memory_used@@Base+0x382fc>
  4424c0:	adrp	x9, 4c3000 <_obstack_memory_used@@Base+0x472fc>
  4424c4:	add	x8, x8, #0xfa6
  4424c8:	add	x9, x9, #0x67f
  4424cc:	tst	w20, #0x1
  4424d0:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  4424d4:	csel	x3, x9, x8, ne  // ne = any
  4424d8:	add	x2, x2, #0xfe5
  4424dc:	mov	w1, #0x3                   	// #3
  4424e0:	mov	x0, x19
  4424e4:	bl	4424f8 <feof@plt+0x3ec58>
  4424e8:	ldp	x20, x19, [sp, #32]
  4424ec:	ldp	x29, x30, [sp, #16]
  4424f0:	add	sp, sp, #0x30
  4424f4:	ret
  4424f8:	sub	sp, sp, #0x1b0
  4424fc:	stp	x29, x30, [sp, #368]
  442500:	add	x29, sp, #0x170
  442504:	mov	x8, #0xffffffffffffffd8    	// #-40
  442508:	mov	x9, sp
  44250c:	add	x10, sp, #0x80
  442510:	movk	x8, #0xff80, lsl #32
  442514:	add	x11, x29, #0x40
  442518:	add	x9, x9, #0x80
  44251c:	add	x10, x10, #0x28
  442520:	stp	x22, x21, [sp, #400]
  442524:	stp	x20, x19, [sp, #416]
  442528:	stp	x3, x4, [sp, #128]
  44252c:	stp	x5, x6, [sp, #144]
  442530:	stp	q1, q2, [sp, #16]
  442534:	stp	q3, q4, [sp, #48]
  442538:	str	q0, [sp]
  44253c:	stp	q5, q6, [sp, #80]
  442540:	str	q7, [sp, #112]
  442544:	stp	x9, x8, [sp, #184]
  442548:	str	x10, [sp, #176]
  44254c:	stp	x7, x11, [sp, #160]
  442550:	ldrb	w8, [x0, #1160]
  442554:	mov	x20, x2
  442558:	mov	x19, x0
  44255c:	mov	w21, w1
  442560:	str	x28, [sp, #384]
  442564:	cbz	w8, 442578 <feof@plt+0x3ecd8>
  442568:	ldrb	w8, [x19, #16]
  44256c:	cbz	w8, 442594 <feof@plt+0x3ecf4>
  442570:	ldr	w2, [x19, #48]
  442574:	b	4425a4 <feof@plt+0x3ed04>
  442578:	ldr	x9, [x19, #488]
  44257c:	ldr	x8, [x19, #448]
  442580:	ldr	x9, [x9, #16]
  442584:	cmp	x8, x9
  442588:	b.eq	4425a0 <feof@plt+0x3ed00>  // b.none
  44258c:	ldur	w2, [x8, #-24]
  442590:	b	4425a4 <feof@plt+0x3ed04>
  442594:	ldr	x8, [x19, #40]
  442598:	ldr	w2, [x8, #60]
  44259c:	b	4425a4 <feof@plt+0x3ed04>
  4425a0:	mov	w2, wzr
  4425a4:	ldr	x1, [x19, #40]
  4425a8:	sub	x0, x29, #0xa8
  4425ac:	mov	x3, xzr
  4425b0:	bl	4506a8 <feof@plt+0x4ce08>
  4425b4:	ldr	x22, [x19, #1000]
  4425b8:	cbz	x22, 442610 <feof@plt+0x3ed70>
  4425bc:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4425c0:	add	x0, x0, #0x347
  4425c4:	mov	x1, x20
  4425c8:	bl	4033b0 <dgettext@plt>
  4425cc:	mov	x4, x0
  4425d0:	sub	x3, x29, #0xa8
  4425d4:	add	x5, sp, #0xa8
  4425d8:	mov	x0, x19
  4425dc:	mov	w1, w21
  4425e0:	mov	w2, wzr
  4425e4:	blr	x22
  4425e8:	mov	w19, w0
  4425ec:	sub	x0, x29, #0xa8
  4425f0:	bl	450788 <feof@plt+0x4cee8>
  4425f4:	and	w0, w19, #0x1
  4425f8:	ldp	x20, x19, [sp, #416]
  4425fc:	ldp	x22, x21, [sp, #400]
  442600:	ldr	x28, [sp, #384]
  442604:	ldp	x29, x30, [sp, #368]
  442608:	add	sp, sp, #0x1b0
  44260c:	ret
  442610:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442614:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442618:	add	x0, x0, #0x355
  44261c:	add	x2, x2, #0x384
  442620:	mov	w1, #0x29                  	// #41
  442624:	bl	429434 <feof@plt+0x25b94>
  442628:	sub	sp, sp, #0x1b0
  44262c:	stp	x29, x30, [sp, #368]
  442630:	add	x29, sp, #0x170
  442634:	mov	x8, #0xffffffffffffffd8    	// #-40
  442638:	mov	x9, sp
  44263c:	add	x10, sp, #0x80
  442640:	movk	x8, #0xff80, lsl #32
  442644:	add	x11, x29, #0x40
  442648:	add	x9, x9, #0x80
  44264c:	add	x10, x10, #0x28
  442650:	stp	x22, x21, [sp, #400]
  442654:	stp	x20, x19, [sp, #416]
  442658:	stp	x3, x4, [sp, #128]
  44265c:	stp	x5, x6, [sp, #144]
  442660:	stp	q1, q2, [sp, #16]
  442664:	stp	q3, q4, [sp, #48]
  442668:	str	q0, [sp]
  44266c:	stp	q5, q6, [sp, #80]
  442670:	str	q7, [sp, #112]
  442674:	stp	x9, x8, [sp, #184]
  442678:	str	x10, [sp, #176]
  44267c:	stp	x7, x11, [sp, #160]
  442680:	ldrb	w8, [x0, #1160]
  442684:	mov	x20, x2
  442688:	mov	x19, x0
  44268c:	mov	w21, w1
  442690:	str	x28, [sp, #384]
  442694:	cbz	w8, 4426a8 <feof@plt+0x3ee08>
  442698:	ldrb	w8, [x19, #16]
  44269c:	cbz	w8, 4426c4 <feof@plt+0x3ee24>
  4426a0:	ldr	w2, [x19, #48]
  4426a4:	b	4426d4 <feof@plt+0x3ee34>
  4426a8:	ldr	x9, [x19, #488]
  4426ac:	ldr	x8, [x19, #448]
  4426b0:	ldr	x9, [x9, #16]
  4426b4:	cmp	x8, x9
  4426b8:	b.eq	4426d0 <feof@plt+0x3ee30>  // b.none
  4426bc:	ldur	w2, [x8, #-24]
  4426c0:	b	4426d4 <feof@plt+0x3ee34>
  4426c4:	ldr	x8, [x19, #40]
  4426c8:	ldr	w2, [x8, #60]
  4426cc:	b	4426d4 <feof@plt+0x3ee34>
  4426d0:	mov	w2, wzr
  4426d4:	ldr	x1, [x19, #40]
  4426d8:	sub	x0, x29, #0xa8
  4426dc:	mov	x3, xzr
  4426e0:	bl	4506a8 <feof@plt+0x4ce08>
  4426e4:	ldr	x22, [x19, #1000]
  4426e8:	cbz	x22, 442740 <feof@plt+0x3eea0>
  4426ec:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4426f0:	add	x0, x0, #0x347
  4426f4:	mov	x1, x20
  4426f8:	bl	4033b0 <dgettext@plt>
  4426fc:	mov	x4, x0
  442700:	sub	x3, x29, #0xa8
  442704:	add	x5, sp, #0xa8
  442708:	mov	x0, x19
  44270c:	mov	w1, wzr
  442710:	mov	w2, w21
  442714:	blr	x22
  442718:	mov	w19, w0
  44271c:	sub	x0, x29, #0xa8
  442720:	bl	450788 <feof@plt+0x4cee8>
  442724:	and	w0, w19, #0x1
  442728:	ldp	x20, x19, [sp, #416]
  44272c:	ldp	x22, x21, [sp, #400]
  442730:	ldr	x28, [sp, #384]
  442734:	ldp	x29, x30, [sp, #368]
  442738:	add	sp, sp, #0x1b0
  44273c:	ret
  442740:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442744:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442748:	add	x0, x0, #0x355
  44274c:	add	x2, x2, #0x384
  442750:	mov	w1, #0x29                  	// #41
  442754:	bl	429434 <feof@plt+0x25b94>
  442758:	sub	sp, sp, #0x1b0
  44275c:	stp	x29, x30, [sp, #368]
  442760:	add	x29, sp, #0x170
  442764:	mov	x8, #0xffffffffffffffd8    	// #-40
  442768:	mov	x9, sp
  44276c:	add	x10, sp, #0x80
  442770:	movk	x8, #0xff80, lsl #32
  442774:	add	x11, x29, #0x40
  442778:	add	x9, x9, #0x80
  44277c:	add	x10, x10, #0x28
  442780:	stp	x22, x21, [sp, #400]
  442784:	stp	x20, x19, [sp, #416]
  442788:	stp	x3, x4, [sp, #128]
  44278c:	stp	x5, x6, [sp, #144]
  442790:	stp	q1, q2, [sp, #16]
  442794:	stp	q3, q4, [sp, #48]
  442798:	str	q0, [sp]
  44279c:	stp	q5, q6, [sp, #80]
  4427a0:	str	q7, [sp, #112]
  4427a4:	stp	x9, x8, [sp, #184]
  4427a8:	str	x10, [sp, #176]
  4427ac:	stp	x7, x11, [sp, #160]
  4427b0:	ldrb	w8, [x0, #1160]
  4427b4:	mov	x20, x2
  4427b8:	mov	x19, x0
  4427bc:	mov	w21, w1
  4427c0:	str	x28, [sp, #384]
  4427c4:	cbz	w8, 4427d8 <feof@plt+0x3ef38>
  4427c8:	ldrb	w8, [x19, #16]
  4427cc:	cbz	w8, 4427f4 <feof@plt+0x3ef54>
  4427d0:	ldr	w2, [x19, #48]
  4427d4:	b	442804 <feof@plt+0x3ef64>
  4427d8:	ldr	x9, [x19, #488]
  4427dc:	ldr	x8, [x19, #448]
  4427e0:	ldr	x9, [x9, #16]
  4427e4:	cmp	x8, x9
  4427e8:	b.eq	442800 <feof@plt+0x3ef60>  // b.none
  4427ec:	ldur	w2, [x8, #-24]
  4427f0:	b	442804 <feof@plt+0x3ef64>
  4427f4:	ldr	x8, [x19, #40]
  4427f8:	ldr	w2, [x8, #60]
  4427fc:	b	442804 <feof@plt+0x3ef64>
  442800:	mov	w2, wzr
  442804:	ldr	x1, [x19, #40]
  442808:	sub	x0, x29, #0xa8
  44280c:	mov	x3, xzr
  442810:	bl	4506a8 <feof@plt+0x4ce08>
  442814:	ldr	x22, [x19, #1000]
  442818:	cbz	x22, 442870 <feof@plt+0x3efd0>
  44281c:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442820:	add	x0, x0, #0x347
  442824:	mov	x1, x20
  442828:	bl	4033b0 <dgettext@plt>
  44282c:	mov	x4, x0
  442830:	sub	x3, x29, #0xa8
  442834:	add	x5, sp, #0xa8
  442838:	mov	w1, #0x2                   	// #2
  44283c:	mov	x0, x19
  442840:	mov	w2, w21
  442844:	blr	x22
  442848:	mov	w19, w0
  44284c:	sub	x0, x29, #0xa8
  442850:	bl	450788 <feof@plt+0x4cee8>
  442854:	and	w0, w19, #0x1
  442858:	ldp	x20, x19, [sp, #416]
  44285c:	ldp	x22, x21, [sp, #400]
  442860:	ldr	x28, [sp, #384]
  442864:	ldp	x29, x30, [sp, #368]
  442868:	add	sp, sp, #0x1b0
  44286c:	ret
  442870:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442874:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442878:	add	x0, x0, #0x355
  44287c:	add	x2, x2, #0x384
  442880:	mov	w1, #0x29                  	// #41
  442884:	bl	429434 <feof@plt+0x25b94>
  442888:	sub	sp, sp, #0x1b0
  44288c:	stp	x29, x30, [sp, #368]
  442890:	add	x29, sp, #0x170
  442894:	mov	x8, #0xffffffffffffffd8    	// #-40
  442898:	mov	x9, sp
  44289c:	add	x10, sp, #0x80
  4428a0:	movk	x8, #0xff80, lsl #32
  4428a4:	add	x11, x29, #0x40
  4428a8:	add	x9, x9, #0x80
  4428ac:	add	x10, x10, #0x28
  4428b0:	stp	x22, x21, [sp, #400]
  4428b4:	stp	x20, x19, [sp, #416]
  4428b8:	stp	x3, x4, [sp, #128]
  4428bc:	stp	x5, x6, [sp, #144]
  4428c0:	stp	q1, q2, [sp, #16]
  4428c4:	stp	q3, q4, [sp, #48]
  4428c8:	str	q0, [sp]
  4428cc:	stp	q5, q6, [sp, #80]
  4428d0:	str	q7, [sp, #112]
  4428d4:	stp	x9, x8, [sp, #184]
  4428d8:	str	x10, [sp, #176]
  4428dc:	stp	x7, x11, [sp, #160]
  4428e0:	ldrb	w8, [x0, #1160]
  4428e4:	mov	x20, x2
  4428e8:	mov	x19, x0
  4428ec:	mov	w21, w1
  4428f0:	str	x28, [sp, #384]
  4428f4:	cbz	w8, 442908 <feof@plt+0x3f068>
  4428f8:	ldrb	w8, [x19, #16]
  4428fc:	cbz	w8, 442924 <feof@plt+0x3f084>
  442900:	ldr	w2, [x19, #48]
  442904:	b	442934 <feof@plt+0x3f094>
  442908:	ldr	x9, [x19, #488]
  44290c:	ldr	x8, [x19, #448]
  442910:	ldr	x9, [x9, #16]
  442914:	cmp	x8, x9
  442918:	b.eq	442930 <feof@plt+0x3f090>  // b.none
  44291c:	ldur	w2, [x8, #-24]
  442920:	b	442934 <feof@plt+0x3f094>
  442924:	ldr	x8, [x19, #40]
  442928:	ldr	w2, [x8, #60]
  44292c:	b	442934 <feof@plt+0x3f094>
  442930:	mov	w2, wzr
  442934:	ldr	x1, [x19, #40]
  442938:	sub	x0, x29, #0xa8
  44293c:	mov	x3, xzr
  442940:	bl	4506a8 <feof@plt+0x4ce08>
  442944:	ldr	x22, [x19, #1000]
  442948:	cbz	x22, 4429a0 <feof@plt+0x3f100>
  44294c:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442950:	add	x0, x0, #0x347
  442954:	mov	x1, x20
  442958:	bl	4033b0 <dgettext@plt>
  44295c:	mov	x4, x0
  442960:	sub	x3, x29, #0xa8
  442964:	add	x5, sp, #0xa8
  442968:	mov	w1, #0x1                   	// #1
  44296c:	mov	x0, x19
  442970:	mov	w2, w21
  442974:	blr	x22
  442978:	mov	w19, w0
  44297c:	sub	x0, x29, #0xa8
  442980:	bl	450788 <feof@plt+0x4cee8>
  442984:	and	w0, w19, #0x1
  442988:	ldp	x20, x19, [sp, #416]
  44298c:	ldp	x22, x21, [sp, #400]
  442990:	ldr	x28, [sp, #384]
  442994:	ldp	x29, x30, [sp, #368]
  442998:	add	sp, sp, #0x1b0
  44299c:	ret
  4429a0:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4429a4:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4429a8:	add	x0, x0, #0x355
  4429ac:	add	x2, x2, #0x384
  4429b0:	mov	w1, #0x29                  	// #41
  4429b4:	bl	429434 <feof@plt+0x25b94>
  4429b8:	sub	sp, sp, #0x1a0
  4429bc:	stp	x29, x30, [sp, #352]
  4429c0:	add	x29, sp, #0x160
  4429c4:	mov	x8, #0xffffffffffffffe8    	// #-24
  4429c8:	mov	x9, sp
  4429cc:	add	x10, sp, #0x80
  4429d0:	movk	x8, #0xff80, lsl #32
  4429d4:	add	x11, x29, #0x40
  4429d8:	add	x9, x9, #0x80
  4429dc:	add	x10, x10, #0x18
  4429e0:	stp	x22, x21, [sp, #384]
  4429e4:	stp	x20, x19, [sp, #400]
  4429e8:	stp	x5, x6, [sp, #128]
  4429ec:	stp	q0, q1, [sp]
  4429f0:	stp	q2, q3, [sp, #32]
  4429f4:	stp	q4, q5, [sp, #64]
  4429f8:	stp	q6, q7, [sp, #96]
  4429fc:	stp	x9, x8, [sp, #168]
  442a00:	str	x10, [sp, #160]
  442a04:	stp	x7, x11, [sp, #144]
  442a08:	ldr	x8, [x0, #1000]
  442a0c:	str	x28, [sp, #368]
  442a10:	cbz	x8, 442a9c <feof@plt+0x3f1fc>
  442a14:	mov	w22, w1
  442a18:	ldr	x1, [x0, #40]
  442a1c:	mov	w21, w3
  442a20:	mov	x19, x0
  442a24:	sub	x0, x29, #0xa8
  442a28:	mov	x3, xzr
  442a2c:	mov	x20, x4
  442a30:	bl	4506a8 <feof@plt+0x4ce08>
  442a34:	cbz	w21, 442a44 <feof@plt+0x3f1a4>
  442a38:	sub	x0, x29, #0xa8
  442a3c:	mov	w1, w21
  442a40:	bl	450934 <feof@plt+0x4d094>
  442a44:	ldr	x21, [x19, #1000]
  442a48:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442a4c:	add	x0, x0, #0x347
  442a50:	mov	x1, x20
  442a54:	bl	4033b0 <dgettext@plt>
  442a58:	mov	x4, x0
  442a5c:	sub	x3, x29, #0xa8
  442a60:	add	x5, sp, #0x98
  442a64:	mov	x0, x19
  442a68:	mov	w1, w22
  442a6c:	mov	w2, wzr
  442a70:	blr	x21
  442a74:	mov	w19, w0
  442a78:	sub	x0, x29, #0xa8
  442a7c:	bl	450788 <feof@plt+0x4cee8>
  442a80:	and	w0, w19, #0x1
  442a84:	ldp	x20, x19, [sp, #400]
  442a88:	ldp	x22, x21, [sp, #384]
  442a8c:	ldr	x28, [sp, #368]
  442a90:	ldp	x29, x30, [sp, #352]
  442a94:	add	sp, sp, #0x1a0
  442a98:	ret
  442a9c:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442aa0:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442aa4:	add	x0, x0, #0x355
  442aa8:	add	x2, x2, #0x36b
  442aac:	mov	w1, #0x9f                  	// #159
  442ab0:	bl	429434 <feof@plt+0x25b94>
  442ab4:	sub	sp, sp, #0x1a0
  442ab8:	stp	x29, x30, [sp, #352]
  442abc:	add	x29, sp, #0x160
  442ac0:	mov	x8, #0xffffffffffffffe8    	// #-24
  442ac4:	mov	x9, sp
  442ac8:	add	x10, sp, #0x80
  442acc:	movk	x8, #0xff80, lsl #32
  442ad0:	add	x11, x29, #0x40
  442ad4:	add	x9, x9, #0x80
  442ad8:	add	x10, x10, #0x18
  442adc:	stp	x22, x21, [sp, #384]
  442ae0:	stp	x20, x19, [sp, #400]
  442ae4:	stp	x5, x6, [sp, #128]
  442ae8:	stp	q0, q1, [sp]
  442aec:	stp	q2, q3, [sp, #32]
  442af0:	stp	q4, q5, [sp, #64]
  442af4:	stp	q6, q7, [sp, #96]
  442af8:	stp	x9, x8, [sp, #168]
  442afc:	str	x10, [sp, #160]
  442b00:	stp	x7, x11, [sp, #144]
  442b04:	ldr	x8, [x0, #1000]
  442b08:	str	x28, [sp, #368]
  442b0c:	cbz	x8, 442b98 <feof@plt+0x3f2f8>
  442b10:	mov	w22, w1
  442b14:	ldr	x1, [x0, #40]
  442b18:	mov	w21, w3
  442b1c:	mov	x19, x0
  442b20:	sub	x0, x29, #0xa8
  442b24:	mov	x3, xzr
  442b28:	mov	x20, x4
  442b2c:	bl	4506a8 <feof@plt+0x4ce08>
  442b30:	cbz	w21, 442b40 <feof@plt+0x3f2a0>
  442b34:	sub	x0, x29, #0xa8
  442b38:	mov	w1, w21
  442b3c:	bl	450934 <feof@plt+0x4d094>
  442b40:	ldr	x21, [x19, #1000]
  442b44:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442b48:	add	x0, x0, #0x347
  442b4c:	mov	x1, x20
  442b50:	bl	4033b0 <dgettext@plt>
  442b54:	mov	x4, x0
  442b58:	sub	x3, x29, #0xa8
  442b5c:	add	x5, sp, #0x98
  442b60:	mov	x0, x19
  442b64:	mov	w1, wzr
  442b68:	mov	w2, w22
  442b6c:	blr	x21
  442b70:	mov	w19, w0
  442b74:	sub	x0, x29, #0xa8
  442b78:	bl	450788 <feof@plt+0x4cee8>
  442b7c:	and	w0, w19, #0x1
  442b80:	ldp	x20, x19, [sp, #400]
  442b84:	ldp	x22, x21, [sp, #384]
  442b88:	ldr	x28, [sp, #368]
  442b8c:	ldp	x29, x30, [sp, #352]
  442b90:	add	sp, sp, #0x1a0
  442b94:	ret
  442b98:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442b9c:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442ba0:	add	x0, x0, #0x355
  442ba4:	add	x2, x2, #0x36b
  442ba8:	mov	w1, #0x9f                  	// #159
  442bac:	bl	429434 <feof@plt+0x25b94>
  442bb0:	sub	sp, sp, #0x1a0
  442bb4:	stp	x29, x30, [sp, #352]
  442bb8:	add	x29, sp, #0x160
  442bbc:	mov	x8, #0xffffffffffffffe8    	// #-24
  442bc0:	mov	x9, sp
  442bc4:	add	x10, sp, #0x80
  442bc8:	movk	x8, #0xff80, lsl #32
  442bcc:	add	x11, x29, #0x40
  442bd0:	add	x9, x9, #0x80
  442bd4:	add	x10, x10, #0x18
  442bd8:	stp	x22, x21, [sp, #384]
  442bdc:	stp	x20, x19, [sp, #400]
  442be0:	stp	x5, x6, [sp, #128]
  442be4:	stp	q0, q1, [sp]
  442be8:	stp	q2, q3, [sp, #32]
  442bec:	stp	q4, q5, [sp, #64]
  442bf0:	stp	q6, q7, [sp, #96]
  442bf4:	stp	x9, x8, [sp, #168]
  442bf8:	str	x10, [sp, #160]
  442bfc:	stp	x7, x11, [sp, #144]
  442c00:	ldr	x8, [x0, #1000]
  442c04:	str	x28, [sp, #368]
  442c08:	cbz	x8, 442c94 <feof@plt+0x3f3f4>
  442c0c:	mov	w22, w1
  442c10:	ldr	x1, [x0, #40]
  442c14:	mov	w21, w3
  442c18:	mov	x19, x0
  442c1c:	sub	x0, x29, #0xa8
  442c20:	mov	x3, xzr
  442c24:	mov	x20, x4
  442c28:	bl	4506a8 <feof@plt+0x4ce08>
  442c2c:	cbz	w21, 442c3c <feof@plt+0x3f39c>
  442c30:	sub	x0, x29, #0xa8
  442c34:	mov	w1, w21
  442c38:	bl	450934 <feof@plt+0x4d094>
  442c3c:	ldr	x21, [x19, #1000]
  442c40:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442c44:	add	x0, x0, #0x347
  442c48:	mov	x1, x20
  442c4c:	bl	4033b0 <dgettext@plt>
  442c50:	mov	x4, x0
  442c54:	sub	x3, x29, #0xa8
  442c58:	add	x5, sp, #0x98
  442c5c:	mov	w1, #0x2                   	// #2
  442c60:	mov	x0, x19
  442c64:	mov	w2, w22
  442c68:	blr	x21
  442c6c:	mov	w19, w0
  442c70:	sub	x0, x29, #0xa8
  442c74:	bl	450788 <feof@plt+0x4cee8>
  442c78:	and	w0, w19, #0x1
  442c7c:	ldp	x20, x19, [sp, #400]
  442c80:	ldp	x22, x21, [sp, #384]
  442c84:	ldr	x28, [sp, #368]
  442c88:	ldp	x29, x30, [sp, #352]
  442c8c:	add	sp, sp, #0x1a0
  442c90:	ret
  442c94:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442c98:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442c9c:	add	x0, x0, #0x355
  442ca0:	add	x2, x2, #0x36b
  442ca4:	mov	w1, #0x9f                  	// #159
  442ca8:	bl	429434 <feof@plt+0x25b94>
  442cac:	sub	sp, sp, #0x1a0
  442cb0:	stp	x29, x30, [sp, #352]
  442cb4:	add	x29, sp, #0x160
  442cb8:	mov	x8, #0xffffffffffffffe8    	// #-24
  442cbc:	mov	x9, sp
  442cc0:	add	x10, sp, #0x80
  442cc4:	movk	x8, #0xff80, lsl #32
  442cc8:	add	x11, x29, #0x40
  442ccc:	add	x9, x9, #0x80
  442cd0:	add	x10, x10, #0x18
  442cd4:	stp	x22, x21, [sp, #384]
  442cd8:	stp	x20, x19, [sp, #400]
  442cdc:	stp	x5, x6, [sp, #128]
  442ce0:	stp	q0, q1, [sp]
  442ce4:	stp	q2, q3, [sp, #32]
  442ce8:	stp	q4, q5, [sp, #64]
  442cec:	stp	q6, q7, [sp, #96]
  442cf0:	stp	x9, x8, [sp, #168]
  442cf4:	str	x10, [sp, #160]
  442cf8:	stp	x7, x11, [sp, #144]
  442cfc:	ldr	x8, [x0, #1000]
  442d00:	str	x28, [sp, #368]
  442d04:	cbz	x8, 442d90 <feof@plt+0x3f4f0>
  442d08:	mov	w22, w1
  442d0c:	ldr	x1, [x0, #40]
  442d10:	mov	w21, w3
  442d14:	mov	x19, x0
  442d18:	sub	x0, x29, #0xa8
  442d1c:	mov	x3, xzr
  442d20:	mov	x20, x4
  442d24:	bl	4506a8 <feof@plt+0x4ce08>
  442d28:	cbz	w21, 442d38 <feof@plt+0x3f498>
  442d2c:	sub	x0, x29, #0xa8
  442d30:	mov	w1, w21
  442d34:	bl	450934 <feof@plt+0x4d094>
  442d38:	ldr	x21, [x19, #1000]
  442d3c:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442d40:	add	x0, x0, #0x347
  442d44:	mov	x1, x20
  442d48:	bl	4033b0 <dgettext@plt>
  442d4c:	mov	x4, x0
  442d50:	sub	x3, x29, #0xa8
  442d54:	add	x5, sp, #0x98
  442d58:	mov	w1, #0x1                   	// #1
  442d5c:	mov	x0, x19
  442d60:	mov	w2, w22
  442d64:	blr	x21
  442d68:	mov	w19, w0
  442d6c:	sub	x0, x29, #0xa8
  442d70:	bl	450788 <feof@plt+0x4cee8>
  442d74:	and	w0, w19, #0x1
  442d78:	ldp	x20, x19, [sp, #400]
  442d7c:	ldp	x22, x21, [sp, #384]
  442d80:	ldr	x28, [sp, #368]
  442d84:	ldp	x29, x30, [sp, #352]
  442d88:	add	sp, sp, #0x1a0
  442d8c:	ret
  442d90:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442d94:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442d98:	add	x0, x0, #0x355
  442d9c:	add	x2, x2, #0x36b
  442da0:	mov	w1, #0x9f                  	// #159
  442da4:	bl	429434 <feof@plt+0x25b94>
  442da8:	sub	sp, sp, #0x1b0
  442dac:	stp	x29, x30, [sp, #368]
  442db0:	add	x29, sp, #0x170
  442db4:	mov	x8, #0xffffffffffffffe0    	// #-32
  442db8:	mov	x9, sp
  442dbc:	add	x10, sp, #0x88
  442dc0:	movk	x8, #0xff80, lsl #32
  442dc4:	add	x11, x29, #0x40
  442dc8:	add	x9, x9, #0x80
  442dcc:	add	x10, x10, #0x20
  442dd0:	stp	x22, x21, [sp, #400]
  442dd4:	stp	x20, x19, [sp, #416]
  442dd8:	stp	x4, x5, [sp, #136]
  442ddc:	stp	x6, x7, [sp, #152]
  442de0:	stp	q0, q1, [sp]
  442de4:	stp	q2, q3, [sp, #32]
  442de8:	stp	q4, q5, [sp, #64]
  442dec:	stp	q6, q7, [sp, #96]
  442df0:	stp	x9, x8, [x29, #-16]
  442df4:	stp	x11, x10, [x29, #-32]
  442df8:	ldr	x8, [x0, #40]
  442dfc:	mov	x20, x3
  442e00:	mov	x19, x0
  442e04:	mov	w21, w1
  442e08:	add	x0, sp, #0xa8
  442e0c:	mov	x1, x8
  442e10:	mov	x3, xzr
  442e14:	str	x28, [sp, #384]
  442e18:	bl	4506a8 <feof@plt+0x4ce08>
  442e1c:	ldr	x22, [x19, #1000]
  442e20:	cbz	x22, 442e78 <feof@plt+0x3f5d8>
  442e24:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442e28:	add	x0, x0, #0x347
  442e2c:	mov	x1, x20
  442e30:	bl	4033b0 <dgettext@plt>
  442e34:	mov	x4, x0
  442e38:	add	x3, sp, #0xa8
  442e3c:	sub	x5, x29, #0x20
  442e40:	mov	x0, x19
  442e44:	mov	w1, w21
  442e48:	mov	w2, wzr
  442e4c:	blr	x22
  442e50:	mov	w19, w0
  442e54:	add	x0, sp, #0xa8
  442e58:	bl	450788 <feof@plt+0x4cee8>
  442e5c:	and	w0, w19, #0x1
  442e60:	ldp	x20, x19, [sp, #416]
  442e64:	ldp	x22, x21, [sp, #400]
  442e68:	ldr	x28, [sp, #384]
  442e6c:	ldp	x29, x30, [sp, #368]
  442e70:	add	sp, sp, #0x1b0
  442e74:	ret
  442e78:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442e7c:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442e80:	add	x0, x0, #0x355
  442e84:	add	x2, x2, #0x384
  442e88:	mov	w1, #0x29                  	// #41
  442e8c:	bl	429434 <feof@plt+0x25b94>
  442e90:	sub	sp, sp, #0xf0
  442e94:	stp	x29, x30, [sp, #192]
  442e98:	add	x29, sp, #0xc0
  442e9c:	mov	x8, #0xffffffffffffffe0    	// #-32
  442ea0:	mov	x9, sp
  442ea4:	sub	x10, x29, #0x40
  442ea8:	movk	x8, #0xff80, lsl #32
  442eac:	add	x11, x29, #0x30
  442eb0:	add	x9, x9, #0x80
  442eb4:	add	x10, x10, #0x20
  442eb8:	stp	x22, x21, [sp, #208]
  442ebc:	stp	x20, x19, [sp, #224]
  442ec0:	stp	x4, x5, [x29, #-64]
  442ec4:	stp	x6, x7, [x29, #-48]
  442ec8:	stp	q0, q1, [sp]
  442ecc:	stp	q2, q3, [sp, #32]
  442ed0:	stp	q4, q5, [sp, #64]
  442ed4:	stp	q6, q7, [sp, #96]
  442ed8:	stp	x9, x8, [x29, #-16]
  442edc:	stp	x11, x10, [x29, #-32]
  442ee0:	ldr	x22, [x0, #1000]
  442ee4:	cbz	x22, 442f38 <feof@plt+0x3f698>
  442ee8:	mov	x20, x0
  442eec:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442ef0:	mov	w21, w1
  442ef4:	add	x0, x0, #0x347
  442ef8:	mov	x1, x3
  442efc:	mov	x19, x2
  442f00:	bl	4033b0 <dgettext@plt>
  442f04:	mov	x4, x0
  442f08:	sub	x5, x29, #0x20
  442f0c:	mov	x0, x20
  442f10:	mov	w1, w21
  442f14:	mov	w2, wzr
  442f18:	mov	x3, x19
  442f1c:	blr	x22
  442f20:	ldp	x20, x19, [sp, #224]
  442f24:	ldp	x22, x21, [sp, #208]
  442f28:	ldp	x29, x30, [sp, #192]
  442f2c:	and	w0, w0, #0x1
  442f30:	add	sp, sp, #0xf0
  442f34:	ret
  442f38:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442f3c:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442f40:	add	x0, x0, #0x355
  442f44:	add	x2, x2, #0x384
  442f48:	mov	w1, #0x29                  	// #41
  442f4c:	bl	429434 <feof@plt+0x25b94>
  442f50:	stp	x29, x30, [sp, #-48]!
  442f54:	stp	x20, x19, [sp, #32]
  442f58:	mov	x20, x0
  442f5c:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442f60:	mov	w19, w1
  442f64:	add	x0, x0, #0x347
  442f68:	mov	x1, x2
  442f6c:	str	x21, [sp, #16]
  442f70:	mov	x29, sp
  442f74:	bl	4033b0 <dgettext@plt>
  442f78:	mov	x21, x0
  442f7c:	bl	4035c0 <__errno_location@plt>
  442f80:	ldr	w0, [x0]
  442f84:	bl	47d1ec <_obstack_memory_used@@Base+0x14e8>
  442f88:	mov	x4, x0
  442f8c:	mov	x0, x20
  442f90:	mov	w1, w19
  442f94:	mov	x3, x21
  442f98:	ldp	x20, x19, [sp, #32]
  442f9c:	ldr	x21, [sp, #16]
  442fa0:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442fa4:	add	x2, x2, #0x340
  442fa8:	ldp	x29, x30, [sp], #48
  442fac:	b	4424f8 <feof@plt+0x3ec58>
  442fb0:	stp	x29, x30, [sp, #-48]!
  442fb4:	stp	x22, x21, [sp, #16]
  442fb8:	stp	x20, x19, [sp, #32]
  442fbc:	ldrb	w8, [x2]
  442fc0:	mov	w19, w3
  442fc4:	mov	x22, x2
  442fc8:	mov	w20, w1
  442fcc:	mov	x21, x0
  442fd0:	mov	x29, sp
  442fd4:	cbnz	w8, 442ff0 <feof@plt+0x3f750>
  442fd8:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442fdc:	adrp	x1, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  442fe0:	add	x0, x0, #0x347
  442fe4:	add	x1, x1, #0x34e
  442fe8:	bl	4033b0 <dgettext@plt>
  442fec:	mov	x22, x0
  442ff0:	bl	4035c0 <__errno_location@plt>
  442ff4:	ldr	w0, [x0]
  442ff8:	bl	47d1ec <_obstack_memory_used@@Base+0x14e8>
  442ffc:	mov	x5, x0
  443000:	mov	x0, x21
  443004:	mov	w1, w20
  443008:	mov	w2, w19
  44300c:	mov	x4, x22
  443010:	ldp	x20, x19, [sp, #32]
  443014:	ldp	x22, x21, [sp, #16]
  443018:	adrp	x3, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  44301c:	add	x3, x3, #0x340
  443020:	ldp	x29, x30, [sp], #48
  443024:	b	442da8 <feof@plt+0x3f508>
  443028:	b	44302c <feof@plt+0x3f78c>
  44302c:	stp	x22, x21, [sp, #-32]!
  443030:	subs	x8, x2, #0x2
  443034:	stp	x20, x19, [sp, #16]
  443038:	b.ne	443084 <feof@plt+0x3f7e4>  // b.any
  44303c:	ldrb	w9, [x1]
  443040:	orr	w10, w9, #0x20
  443044:	cmp	w10, #0x64
  443048:	b.ne	443084 <feof@plt+0x3f7e4>  // b.any
  44304c:	ldrb	w10, [x1, #1]
  443050:	sub	w10, w10, #0x44
  443054:	cmp	w10, #0x28
  443058:	b.hi	443084 <feof@plt+0x3f7e4>  // b.pmore
  44305c:	adrp	x11, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443060:	add	x11, x11, #0x396
  443064:	adr	x12, 443074 <feof@plt+0x3f7d4>
  443068:	ldrb	w13, [x11, x10]
  44306c:	add	x12, x12, x13, lsl #2
  443070:	br	x12
  443074:	cmp	w9, #0x44
  443078:	mov	w8, #0x4020                	// #16416
  44307c:	csel	w8, w8, wzr, eq  // eq = none
  443080:	b	443474 <feof@plt+0x3fbd4>
  443084:	ldrb	w17, [x0, #1163]
  443088:	cbz	x2, 4430f0 <feof@plt+0x3f850>
  44308c:	cbz	w17, 4430f0 <feof@plt+0x3f850>
  443090:	sub	x10, x2, #0x1
  443094:	ldrb	w9, [x1, x10]
  443098:	sub	w9, w9, #0x4b
  44309c:	cmp	w9, #0x27
  4430a0:	b.hi	4430f0 <feof@plt+0x3f850>  // b.pmore
  4430a4:	adrp	x11, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4430a8:	add	x11, x11, #0x3bf
  4430ac:	adr	x12, 4430c0 <feof@plt+0x3f820>
  4430b0:	ldrb	w13, [x11, x9]
  4430b4:	add	x12, x12, x13, lsl #2
  4430b8:	mov	w9, #0x200000              	// #2097152
  4430bc:	br	x12
  4430c0:	mov	w9, #0x100000              	// #1048576
  4430c4:	cmp	x2, #0x1
  4430c8:	b.eq	4430e8 <feof@plt+0x3f848>  // b.none
  4430cc:	ldrb	w11, [x1]
  4430d0:	orr	w12, w11, #0x20
  4430d4:	cmp	w12, #0x75
  4430d8:	b.ne	4433bc <feof@plt+0x3fb1c>  // b.any
  4430dc:	cmp	x10, #0x1
  4430e0:	orr	x9, x9, #0x1000
  4430e4:	b.ne	4433b4 <feof@plt+0x3fb14>  // b.any
  4430e8:	mov	w8, w9
  4430ec:	b	443474 <feof@plt+0x3fbd4>
  4430f0:	cbz	x2, 443268 <feof@plt+0x3f9c8>
  4430f4:	adrp	x8, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4430f8:	mov	x15, xzr
  4430fc:	mov	x9, xzr
  443100:	mov	x10, xzr
  443104:	mov	x16, xzr
  443108:	mov	x11, xzr
  44310c:	mov	x13, xzr
  443110:	mov	x12, xzr
  443114:	mov	x14, xzr
  443118:	mov	x18, xzr
  44311c:	add	x8, x8, #0x3f1
  443120:	mov	w3, #0xa                   	// #10
  443124:	mov	x6, x2
  443128:	mov	x4, x1
  44312c:	b	443140 <feof@plt+0x3f8a0>
  443130:	add	x16, x16, #0x1
  443134:	add	x4, x4, #0x1
  443138:	mov	x6, x5
  44313c:	cbz	x5, 44328c <feof@plt+0x3f9ec>
  443140:	ldrb	w5, [x4]
  443144:	sub	w5, w5, #0x44
  443148:	cmp	w5, #0x33
  44314c:	b.hi	443470 <feof@plt+0x3fbd0>  // b.pmore
  443150:	adr	x7, 443130 <feof@plt+0x3f890>
  443154:	ldrb	w19, [x8, x5]
  443158:	add	x7, x7, x19, lsl #2
  44315c:	sub	x5, x6, #0x1
  443160:	br	x7
  443164:	add	x14, x14, #0x1
  443168:	b	443134 <feof@plt+0x3f894>
  44316c:	add	x19, x18, #0x1
  443170:	cbz	x5, 44344c <feof@plt+0x3fbac>
  443174:	ldrb	w7, [x0, #1120]
  443178:	cbnz	w7, 443214 <feof@plt+0x3f974>
  44317c:	ldrb	w7, [x4, #1]
  443180:	cmp	w7, #0x31
  443184:	b.cc	443214 <feof@plt+0x3f974>  // b.lo, b.ul, b.last
  443188:	cbnz	x15, 443214 <feof@plt+0x3f974>
  44318c:	cmp	w7, #0x39
  443190:	b.hi	443214 <feof@plt+0x3f974>  // b.pmore
  443194:	cmp	w7, #0x30
  443198:	b.cc	44321c <feof@plt+0x3f97c>  // b.lo, b.ul, b.last
  44319c:	add	x19, x4, x6
  4431a0:	mov	x5, xzr
  4431a4:	mov	x15, xzr
  4431a8:	sub	x21, x6, #0x2
  4431ac:	sub	x20, x19, #0x1
  4431b0:	mov	x19, #0xffffffffffffffff    	// #-1
  4431b4:	cmp	x15, #0xef
  4431b8:	b.hi	443228 <feof@plt+0x3f988>  // b.pmore
  4431bc:	and	w22, w7, #0xff
  4431c0:	cmp	w22, #0x39
  4431c4:	b.hi	443228 <feof@plt+0x3f988>  // b.pmore
  4431c8:	mul	x15, x15, x3
  4431cc:	add	x15, x15, w7, uxtb
  4431d0:	cmp	x21, x5
  4431d4:	sub	x15, x15, #0x30
  4431d8:	b.eq	443258 <feof@plt+0x3f9b8>  // b.none
  4431dc:	add	x7, x4, x5
  4431e0:	ldrb	w7, [x7, #2]
  4431e4:	add	x5, x5, #0x1
  4431e8:	sub	x19, x19, #0x1
  4431ec:	cmp	w7, #0x2f
  4431f0:	b.hi	4431b4 <feof@plt+0x3f914>  // b.pmore
  4431f4:	add	x4, x4, x5
  4431f8:	b	44324c <feof@plt+0x3f9ac>
  4431fc:	add	x12, x12, #0x1
  443200:	b	443134 <feof@plt+0x3f894>
  443204:	add	x11, x11, #0x1
  443208:	b	443134 <feof@plt+0x3f894>
  44320c:	add	x13, x13, #0x1
  443210:	b	443134 <feof@plt+0x3f894>
  443214:	mov	x18, x19
  443218:	b	443134 <feof@plt+0x3f894>
  44321c:	mov	x15, xzr
  443220:	add	x10, x10, #0x1
  443224:	b	443134 <feof@plt+0x3f894>
  443228:	and	w7, w7, #0xff
  44322c:	cmp	w7, #0x78
  443230:	add	x4, x4, x5
  443234:	b.ne	44324c <feof@plt+0x3f9ac>  // b.any
  443238:	sub	x5, x6, x5
  44323c:	add	x4, x4, #0x1
  443240:	add	x9, x9, #0x1
  443244:	sub	x5, x5, #0x2
  443248:	b	443134 <feof@plt+0x3f894>
  44324c:	add	x5, x6, x19
  443250:	add	x10, x10, #0x1
  443254:	b	443134 <feof@plt+0x3f894>
  443258:	mov	x5, xzr
  44325c:	mov	x4, x20
  443260:	add	x10, x10, #0x1
  443264:	b	443134 <feof@plt+0x3f894>
  443268:	mov	x18, xzr
  44326c:	mov	x14, xzr
  443270:	mov	x12, xzr
  443274:	mov	x13, xzr
  443278:	mov	x11, xzr
  44327c:	mov	x16, xzr
  443280:	mov	x10, xzr
  443284:	mov	x9, xzr
  443288:	mov	x15, xzr
  44328c:	cmp	x15, #0xf0
  443290:	mov	w8, wzr
  443294:	b.hi	443474 <feof@plt+0x3fbd4>  // b.pmore
  443298:	add	x3, x14, x18
  44329c:	add	x3, x3, x12
  4432a0:	add	x3, x3, x13
  4432a4:	add	x3, x3, x11
  4432a8:	add	x3, x3, x10
  4432ac:	add	x3, x3, x9
  4432b0:	orr	x3, x3, x16
  4432b4:	cmp	x3, #0x1
  4432b8:	b.hi	443474 <feof@plt+0x3fbd4>  // b.pmore
  4432bc:	cbz	x9, 4432d8 <feof@plt+0x3fa38>
  4432c0:	cmp	x15, #0x20
  4432c4:	b.eq	4432d8 <feof@plt+0x3fa38>  // b.none
  4432c8:	cmp	x15, #0x80
  4432cc:	b.eq	4432d8 <feof@plt+0x3fa38>  // b.none
  4432d0:	cmp	x15, #0x40
  4432d4:	b.ne	443470 <feof@plt+0x3fbd0>  // b.any
  4432d8:	cmp	x10, #0x0
  4432dc:	cset	w3, ne  // ne = any
  4432e0:	cmp	x15, #0x10
  4432e4:	cset	w4, ne  // ne = any
  4432e8:	tst	x15, #0x1f
  4432ec:	cset	w5, ne  // ne = any
  4432f0:	cmp	x15, #0x60
  4432f4:	cset	w8, eq  // eq = none
  4432f8:	and	w6, w3, w8
  4432fc:	mov	w8, wzr
  443300:	tbnz	w6, #0, 443474 <feof@plt+0x3fbd4>
  443304:	and	w3, w3, w4
  443308:	and	w3, w3, w5
  44330c:	tbnz	w3, #0, 443474 <feof@plt+0x3fbd4>
  443310:	cbz	x16, 4433f8 <feof@plt+0x3fb58>
  443314:	cbz	w17, 443470 <feof@plt+0x3fbd0>
  443318:	ldrb	w8, [x0, #1120]
  44331c:	cbz	w8, 443404 <feof@plt+0x3fb64>
  443320:	ldr	w8, [x0, #1116]
  443324:	cmp	w8, #0xf
  443328:	b.lt	443404 <feof@plt+0x3fb64>  // b.tstop
  44332c:	ldrb	w8, [x1]
  443330:	cmp	w8, #0x69
  443334:	b.ne	443404 <feof@plt+0x3fb64>  // b.any
  443338:	cmp	x2, #0x1
  44333c:	b.eq	443470 <feof@plt+0x3fbd0>  // b.none
  443340:	cmp	x2, #0x2
  443344:	b.ne	443404 <feof@plt+0x3fb64>  // b.any
  443348:	ldrb	w17, [x1, #1]
  44334c:	mov	w8, wzr
  443350:	cmp	w17, #0x66
  443354:	b.eq	443474 <feof@plt+0x3fbd4>  // b.none
  443358:	cmp	w17, #0x6c
  44335c:	b.eq	443474 <feof@plt+0x3fbd4>  // b.none
  443360:	b	443404 <feof@plt+0x3fb64>
  443364:	cmp	w9, #0x44
  443368:	mov	w8, #0x4010                	// #16400
  44336c:	csel	w8, w8, wzr, eq  // eq = none
  443370:	b	443474 <feof@plt+0x3fbd4>
  443374:	cmp	w9, #0x44
  443378:	mov	w8, #0x4040                	// #16448
  44337c:	csel	w8, w8, wzr, eq  // eq = none
  443380:	b	443474 <feof@plt+0x3fbd4>
  443384:	cmp	w9, #0x44
  443388:	mov	w8, #0x4020                	// #16416
  44338c:	csel	w8, wzr, w8, eq  // eq = none
  443390:	b	443474 <feof@plt+0x3fbd4>
  443394:	cmp	w9, #0x44
  443398:	mov	w8, #0x4010                	// #16400
  44339c:	csel	w8, wzr, w8, eq  // eq = none
  4433a0:	b	443474 <feof@plt+0x3fbd4>
  4433a4:	cmp	w9, #0x44
  4433a8:	mov	w8, #0x4040                	// #16448
  4433ac:	csel	w8, wzr, w8, eq  // eq = none
  4433b0:	b	443474 <feof@plt+0x3fbd4>
  4433b4:	ldrb	w11, [x1, #1]!
  4433b8:	mov	x10, x8
  4433bc:	sub	w8, w11, #0x48
  4433c0:	ror	w11, w8, #2
  4433c4:	cmp	w11, #0x9
  4433c8:	mov	w8, wzr
  4433cc:	b.hi	443474 <feof@plt+0x3fbd4>  // b.pmore
  4433d0:	adrp	x12, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4433d4:	add	x12, x12, #0x3e7
  4433d8:	adr	x13, 4433e8 <feof@plt+0x3fb48>
  4433dc:	ldrb	w14, [x12, x11]
  4433e0:	add	x13, x13, x14, lsl #2
  4433e4:	br	x13
  4433e8:	cmp	x10, #0x1
  4433ec:	b.ne	443470 <feof@plt+0x3fbd0>  // b.any
  4433f0:	orr	w8, w9, #0x10
  4433f4:	b	443474 <feof@plt+0x3fbd4>
  4433f8:	orr	x8, x11, x13
  4433fc:	cbz	x8, 443404 <feof@plt+0x3fb64>
  443400:	cbz	w17, 443470 <feof@plt+0x3fbd0>
  443404:	cmp	x16, #0x0
  443408:	cset	w8, ne  // ne = any
  44340c:	lsl	x8, x8, #13
  443410:	cbz	x18, 443454 <feof@plt+0x3fbb4>
  443414:	mov	w11, #0x10                  	// #16
  443418:	orr	w8, w11, w8
  44341c:	b	443474 <feof@plt+0x3fbd4>
  443420:	cmp	x10, #0x2
  443424:	b.eq	443464 <feof@plt+0x3fbc4>  // b.none
  443428:	cmp	x10, #0x1
  44342c:	b.eq	443444 <feof@plt+0x3fba4>  // b.none
  443430:	b	443470 <feof@plt+0x3fbd0>
  443434:	cmp	x10, #0x2
  443438:	b.eq	443484 <feof@plt+0x3fbe4>  // b.none
  44343c:	cmp	x10, #0x1
  443440:	b.ne	443470 <feof@plt+0x3fbd0>  // b.any
  443444:	orr	w8, w9, #0x20
  443448:	b	443474 <feof@plt+0x3fbd4>
  44344c:	mov	x18, x19
  443450:	b	44328c <feof@plt+0x3f9ec>
  443454:	cbz	x14, 443498 <feof@plt+0x3fbf8>
  443458:	mov	w11, #0x20                  	// #32
  44345c:	orr	w8, w11, w8
  443460:	b	443474 <feof@plt+0x3fbd4>
  443464:	ldrb	w8, [x1, #1]
  443468:	cmp	w8, #0x4c
  44346c:	b.eq	443490 <feof@plt+0x3fbf0>  // b.none
  443470:	mov	w8, wzr
  443474:	ldp	x20, x19, [sp, #16]
  443478:	mov	w0, w8
  44347c:	ldp	x22, x21, [sp], #32
  443480:	ret
  443484:	ldrb	w8, [x1, #1]
  443488:	cmp	w8, #0x6c
  44348c:	b.ne	443470 <feof@plt+0x3fbd0>  // b.any
  443490:	orr	w8, w9, #0x40
  443494:	b	443474 <feof@plt+0x3fbd4>
  443498:	orr	x13, x13, x12
  44349c:	cmp	x12, #0x0
  4434a0:	mov	w12, #0x40                  	// #64
  4434a4:	mov	w14, #0x10000               	// #65536
  4434a8:	csel	x12, x14, x12, eq  // eq = none
  4434ac:	orr	x14, x13, x11
  4434b0:	cmp	x13, #0x0
  4434b4:	mov	w11, #0x20000               	// #131072
  4434b8:	csel	x11, x11, x12, eq  // eq = none
  4434bc:	cbz	x14, 4434c8 <feof@plt+0x3fc28>
  4434c0:	orr	w8, w11, w8
  4434c4:	b	443474 <feof@plt+0x3fbd4>
  4434c8:	lsl	x11, x15, #24
  4434cc:	cbz	x10, 4434dc <feof@plt+0x3fc3c>
  4434d0:	orr	x11, x11, #0x400000
  4434d4:	orr	w8, w11, w8
  4434d8:	b	443474 <feof@plt+0x3fbd4>
  4434dc:	orr	x10, x11, #0x800000
  4434e0:	cmp	x9, #0x0
  4434e4:	mov	w9, #0x8000                	// #32768
  4434e8:	csel	x11, x10, x9, ne  // ne = any
  4434ec:	b	4434c0 <feof@plt+0x3fc20>
  4434f0:	cbz	x2, 44357c <feof@plt+0x3fcdc>
  4434f4:	mov	x11, xzr
  4434f8:	mov	x10, xzr
  4434fc:	mov	x9, xzr
  443500:	mov	w12, #0x1                   	// #1
  443504:	mov	x13, x2
  443508:	b	443518 <feof@plt+0x3fc78>
  44350c:	add	x11, x11, #0x1
  443510:	sub	x13, x13, #0x1
  443514:	cbz	x13, 443588 <feof@plt+0x3fce8>
  443518:	add	x8, x1, x13
  44351c:	ldurb	w14, [x8, #-1]
  443520:	mov	w8, wzr
  443524:	sub	w15, w14, #0x49
  443528:	cmp	w15, #0x2c
  44352c:	b.hi	443628 <feof@plt+0x3fd88>  // b.pmore
  443530:	lsl	x16, x12, x15
  443534:	tst	x16, #0x300000003
  443538:	b.ne	44350c <feof@plt+0x3fc6c>  // b.any
  44353c:	lsl	x16, x12, x15
  443540:	tst	x16, #0x800000008
  443544:	b.ne	44355c <feof@plt+0x3fcbc>  // b.any
  443548:	lsl	x14, x12, x15
  44354c:	tst	x14, #0x100000001000
  443550:	b.eq	443628 <feof@plt+0x3fd88>  // b.none
  443554:	add	x9, x9, #0x1
  443558:	b	443510 <feof@plt+0x3fc70>
  44355c:	add	x10, x10, #0x1
  443560:	cmp	x10, #0x2
  443564:	b.ne	443510 <feof@plt+0x3fc70>  // b.any
  443568:	ldrb	w8, [x1, x13]
  44356c:	cmp	w14, w8
  443570:	b.ne	4435e8 <feof@plt+0x3fd48>  // b.any
  443574:	mov	w10, #0x2                   	// #2
  443578:	b	443510 <feof@plt+0x3fc70>
  44357c:	mov	x9, xzr
  443580:	mov	x10, xzr
  443584:	mov	x11, xzr
  443588:	cmp	x10, #0x2
  44358c:	mov	w8, wzr
  443590:	b.hi	443628 <feof@plt+0x3fd88>  // b.pmore
  443594:	orr	x12, x11, x9
  443598:	cmp	x12, #0x1
  44359c:	b.hi	443628 <feof@plt+0x3fd88>  // b.pmore
  4435a0:	cbz	x11, 4435f0 <feof@plt+0x3fd50>
  4435a4:	ldrb	w8, [x0, #1163]
  4435a8:	cbz	w8, 443628 <feof@plt+0x3fd88>
  4435ac:	ldrb	w8, [x0, #1120]
  4435b0:	cbz	w8, 4435f0 <feof@plt+0x3fd50>
  4435b4:	ldr	w8, [x0, #1116]
  4435b8:	cmp	w8, #0xf
  4435bc:	b.lt	4435f0 <feof@plt+0x3fd50>  // b.tstop
  4435c0:	ldrb	w8, [x1]
  4435c4:	cmp	w8, #0x69
  4435c8:	b.ne	4435f0 <feof@plt+0x3fd50>  // b.any
  4435cc:	cmp	x2, #0x1
  4435d0:	b.eq	4435e8 <feof@plt+0x3fd48>  // b.none
  4435d4:	cmp	x2, #0x2
  4435d8:	b.ne	4435f0 <feof@plt+0x3fd50>  // b.any
  4435dc:	ldrb	w8, [x1, #1]
  4435e0:	cmp	w8, #0x6c
  4435e4:	b.ne	4435f0 <feof@plt+0x3fd50>  // b.any
  4435e8:	mov	w0, wzr
  4435ec:	ret
  4435f0:	cmp	x11, #0x0
  4435f4:	cset	w13, ne  // ne = any
  4435f8:	cmp	x9, #0x0
  4435fc:	mov	w8, #0x40                  	// #64
  443600:	mov	w11, #0x20                  	// #32
  443604:	cset	w9, ne  // ne = any
  443608:	cmp	x10, #0x1
  44360c:	mov	w12, #0x10                  	// #16
  443610:	lsl	w9, w9, #12
  443614:	csel	w8, w11, w8, eq  // eq = none
  443618:	cmp	x10, #0x0
  44361c:	bfi	w9, w13, #13, #1
  443620:	csel	w8, w12, w8, eq  // eq = none
  443624:	orr	w8, w9, w8
  443628:	mov	w0, w8
  44362c:	ret
  443630:	sub	w8, w0, #0x4a
  443634:	cmp	w8, #0x4
  443638:	b.hi	443640 <feof@plt+0x3fda0>  // b.pmore
  44363c:	sub	w0, w0, #0xc
  443640:	ret
  443644:	sub	w8, w0, #0x3e
  443648:	cmp	w8, #0x4
  44364c:	b.hi	443654 <feof@plt+0x3fdb4>  // b.pmore
  443650:	add	w0, w0, #0xc
  443654:	ret
  443658:	sub	w8, w0, #0x45
  44365c:	cmp	w8, #0x4
  443660:	b.hi	443668 <feof@plt+0x3fdc8>  // b.pmore
  443664:	sub	w0, w0, #0xd
  443668:	ret
  44366c:	sub	w8, w0, #0x38
  443670:	cmp	w8, #0x4
  443674:	b.hi	44367c <feof@plt+0x3fddc>  // b.pmore
  443678:	add	w0, w0, #0xd
  44367c:	ret
  443680:	sub	w8, w0, #0x4a
  443684:	cmp	w8, #0x5
  443688:	cset	w0, cc  // cc = lo, ul, last
  44368c:	ret
  443690:	sub	w8, w0, #0x45
  443694:	cmp	w8, #0x5
  443698:	cset	w0, cc  // cc = lo, ul, last
  44369c:	ret
  4436a0:	ldr	w8, [x0, #8]
  4436a4:	ldr	x9, [x0, #16]
  4436a8:	cbz	w8, 4436d4 <feof@plt+0x3fe34>
  4436ac:	mov	x10, xzr
  4436b0:	ldrb	w11, [x9, x10]
  4436b4:	cmp	w11, #0x22
  4436b8:	b.eq	4436d8 <feof@plt+0x3fe38>  // b.none
  4436bc:	cmp	w11, #0x27
  4436c0:	b.eq	4436d8 <feof@plt+0x3fe38>  // b.none
  4436c4:	add	x10, x10, #0x1
  4436c8:	cmp	x8, x10
  4436cc:	b.ne	4436b0 <feof@plt+0x3fe10>  // b.any
  4436d0:	b	4436e0 <feof@plt+0x3fe40>
  4436d4:	mov	w10, wzr
  4436d8:	cmp	w10, w8
  4436dc:	b.ne	4436e8 <feof@plt+0x3fe48>  // b.any
  4436e0:	add	x0, x9, w8, uxtw
  4436e4:	ret
  4436e8:	ldrb	w10, [x9, w10, uxtw]
  4436ec:	cbz	x8, 4436e0 <feof@plt+0x3fe40>
  4436f0:	sub	w11, w8, #0x1
  4436f4:	ldrb	w11, [x9, w11, uxtw]
  4436f8:	sub	x8, x8, #0x1
  4436fc:	cmp	w11, w10
  443700:	b.ne	4436ec <feof@plt+0x3fe4c>  // b.any
  443704:	add	w8, w8, #0x1
  443708:	add	x0, x9, w8, uxtw
  44370c:	ret
  443710:	sub	sp, sp, #0x70
  443714:	stp	x29, x30, [sp, #16]
  443718:	stp	x28, x27, [sp, #32]
  44371c:	stp	x26, x25, [sp, #48]
  443720:	stp	x24, x23, [sp, #64]
  443724:	stp	x22, x21, [sp, #80]
  443728:	stp	x20, x19, [sp, #96]
  44372c:	ldr	x8, [x1, #16]
  443730:	mov	x20, x0
  443734:	add	x29, sp, #0x10
  443738:	cbz	x2, 443740 <feof@plt+0x3fea0>
  44373c:	str	xzr, [x2]
  443740:	ldr	w9, [x1, #8]
  443744:	cmp	w9, #0x1
  443748:	b.ne	443754 <feof@plt+0x3feb4>  // b.any
  44374c:	mov	w0, #0x111                 	// #273
  443750:	b	443eb8 <feof@plt+0x40618>
  443754:	ldrb	w10, [x8]
  443758:	adrp	x24, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  44375c:	mov	x21, x8
  443760:	add	x24, x24, #0x4a2
  443764:	cmp	w10, #0x30
  443768:	b.ne	443794 <feof@plt+0x3fef4>  // b.any
  44376c:	mov	x10, x21
  443770:	ldrb	w11, [x10, #1]!
  443774:	mov	w25, #0x8                   	// #8
  443778:	cmp	w11, #0x61
  44377c:	b.gt	44379c <feof@plt+0x3fefc>
  443780:	cmp	w11, #0x42
  443784:	b.eq	4437cc <feof@plt+0x3ff2c>  // b.none
  443788:	cmp	w11, #0x58
  44378c:	b.eq	4437ac <feof@plt+0x3ff0c>  // b.none
  443790:	b	44380c <feof@plt+0x3ff6c>
  443794:	mov	w25, #0xa                   	// #10
  443798:	b	443810 <feof@plt+0x3ff70>
  44379c:	cmp	w11, #0x62
  4437a0:	b.eq	4437cc <feof@plt+0x3ff2c>  // b.none
  4437a4:	cmp	w11, #0x78
  4437a8:	b.ne	44380c <feof@plt+0x3ff6c>  // b.any
  4437ac:	ldrb	w11, [x21, #2]!
  4437b0:	cmp	x11, #0x2e
  4437b4:	b.eq	4437e4 <feof@plt+0x3ff44>  // b.none
  4437b8:	ldrh	w12, [x24, x11, lsl #1]
  4437bc:	tbnz	w12, #8, 4437e4 <feof@plt+0x3ff44>
  4437c0:	cmp	w11, #0x27
  4437c4:	b.eq	4437f4 <feof@plt+0x3ff54>  // b.none
  4437c8:	b	443808 <feof@plt+0x3ff68>
  4437cc:	ldrb	w11, [x21, #2]!
  4437d0:	sub	w12, w11, #0x30
  4437d4:	cmp	w12, #0x2
  4437d8:	b.cs	4437ec <feof@plt+0x3ff4c>  // b.hs, b.nlast
  4437dc:	mov	w25, #0x2                   	// #2
  4437e0:	b	443810 <feof@plt+0x3ff70>
  4437e4:	mov	w25, #0x10                  	// #16
  4437e8:	b	443810 <feof@plt+0x3ff70>
  4437ec:	cmp	w11, #0x27
  4437f0:	b.ne	443808 <feof@plt+0x3ff68>  // b.any
  4437f4:	ldrb	w11, [x20, #1166]
  4437f8:	cbz	w11, 443808 <feof@plt+0x3ff68>
  4437fc:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443800:	add	x4, x4, #0x542
  443804:	b	443ea0 <feof@plt+0x40600>
  443808:	mov	w25, #0x8                   	// #8
  44380c:	mov	x21, x10
  443810:	add	x12, x8, x9
  443814:	adrp	x8, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  443818:	mov	w10, wzr
  44381c:	mov	w26, wzr
  443820:	mov	w19, wzr
  443824:	add	x8, x8, #0x1c3
  443828:	mov	w28, w10
  44382c:	b	443844 <feof@plt+0x3ffa4>
  443830:	mov	x21, x9
  443834:	ldrb	w9, [x8, x27]
  443838:	mov	w26, #0x1                   	// #1
  44383c:	cmp	w19, w9
  443840:	csel	w19, w9, w19, cc  // cc = lo, ul, last
  443844:	mov	x23, x21
  443848:	ldrb	w27, [x21], #1
  44384c:	ldrh	w9, [x24, x27, lsl #1]
  443850:	tbnz	w9, #2, 443834 <feof@plt+0x3ff94>
  443854:	cmp	w25, #0x10
  443858:	b.ne	443860 <feof@plt+0x3ffc0>  // b.any
  44385c:	tbnz	w9, #8, 443834 <feof@plt+0x3ff94>
  443860:	cmp	w27, #0x27
  443864:	b.ne	4438a0 <feof@plt+0x40000>  // b.any
  443868:	ldrb	w9, [x20, #1166]
  44386c:	cbz	w9, 4438d8 <feof@plt+0x40038>
  443870:	ldrb	w27, [x23, #1]
  443874:	add	x9, x23, #0x2
  443878:	ldrh	w10, [x24, x27, lsl #1]
  44387c:	tbnz	w10, #2, 443830 <feof@plt+0x3ff90>
  443880:	cmp	w25, #0x10
  443884:	b.ne	44388c <feof@plt+0x3ffec>  // b.any
  443888:	tbnz	w10, #8, 443830 <feof@plt+0x3ff90>
  44388c:	cmp	w27, #0x2e
  443890:	b.ne	443970 <feof@plt+0x400d0>  // b.any
  443894:	mov	w10, #0x1                   	// #1
  443898:	mov	x21, x9
  44389c:	b	4438ac <feof@plt+0x4000c>
  4438a0:	cmp	w27, #0x2e
  4438a4:	b.ne	4438e4 <feof@plt+0x40044>  // b.any
  4438a8:	mov	w10, wzr
  4438ac:	tbnz	w10, #0, 443958 <feof@plt+0x400b8>
  4438b0:	ldrb	w9, [x21]
  4438b4:	cmp	w9, #0x27
  4438b8:	b.ne	4438c4 <feof@plt+0x40024>  // b.any
  4438bc:	ldrb	w9, [x20, #1166]
  4438c0:	cbnz	w9, 443958 <feof@plt+0x400b8>
  4438c4:	mov	w10, #0x1                   	// #1
  4438c8:	cbz	w28, 443828 <feof@plt+0x3ff88>
  4438cc:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4438d0:	add	x4, x4, #0x5ab
  4438d4:	b	443ea0 <feof@plt+0x40600>
  4438d8:	mov	w22, wzr
  4438dc:	cbnz	w22, 443920 <feof@plt+0x40080>
  4438e0:	b	4439a8 <feof@plt+0x40108>
  4438e4:	mov	w22, wzr
  4438e8:	cmp	w25, #0x10
  4438ec:	orr	w9, w27, #0x20
  4438f0:	cset	w8, eq  // eq = none
  4438f4:	cmp	w25, #0xb
  4438f8:	cset	w10, cc  // cc = lo, ul, last
  4438fc:	cmp	w9, #0x65
  443900:	cset	w11, eq  // eq = none
  443904:	cmp	w9, #0x70
  443908:	and	w10, w10, w11
  44390c:	cset	w9, eq  // eq = none
  443910:	tbnz	w10, #0, 44392c <feof@plt+0x4008c>
  443914:	and	w8, w8, w9
  443918:	cbnz	w8, 44392c <feof@plt+0x4008c>
  44391c:	cbz	w22, 4439a8 <feof@plt+0x40108>
  443920:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443924:	add	x4, x4, #0x5f2
  443928:	b	443ea0 <feof@plt+0x40600>
  44392c:	tbnz	w22, #0, 443944 <feof@plt+0x400a4>
  443930:	ldrb	w27, [x21]
  443934:	cmp	w27, #0x27
  443938:	b.ne	443950 <feof@plt+0x400b0>  // b.any
  44393c:	ldrb	w8, [x20, #1166]
  443940:	cbz	w8, 443964 <feof@plt+0x400c4>
  443944:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443948:	add	x4, x4, #0x5cd
  44394c:	b	443ea0 <feof@plt+0x40600>
  443950:	mov	w28, #0x2                   	// #2
  443954:	b	443a30 <feof@plt+0x40190>
  443958:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  44395c:	add	x4, x4, #0x581
  443960:	b	443ea0 <feof@plt+0x40600>
  443964:	mov	w28, #0x2                   	// #2
  443968:	mov	w27, #0x27                  	// #39
  44396c:	b	443a30 <feof@plt+0x40190>
  443970:	cmp	w27, #0x27
  443974:	b.ne	44398c <feof@plt+0x400ec>  // b.any
  443978:	ldrb	w8, [x20, #1166]
  44397c:	cbz	w8, 44399c <feof@plt+0x400fc>
  443980:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443984:	add	x4, x4, #0x567
  443988:	b	443ea0 <feof@plt+0x40600>
  44398c:	mov	w22, #0x1                   	// #1
  443990:	mov	x23, x21
  443994:	mov	x21, x9
  443998:	b	4438e8 <feof@plt+0x40048>
  44399c:	mov	w22, #0x1                   	// #1
  4439a0:	mov	x23, x21
  4439a4:	cbnz	w22, 443920 <feof@plt+0x40080>
  4439a8:	cmp	w25, #0x10
  4439ac:	b.eq	443a2c <feof@plt+0x4018c>  // b.none
  4439b0:	cbnz	w28, 443a2c <feof@plt+0x4018c>
  4439b4:	str	x2, [sp]
  4439b8:	sub	x2, x12, x23
  4439bc:	mov	x0, x20
  4439c0:	mov	x1, x23
  4439c4:	stur	w3, [x29, #-4]
  4439c8:	mov	x21, x12
  4439cc:	bl	44302c <feof@plt+0x3f78c>
  4439d0:	tst	w0, #0x300000
  4439d4:	b.eq	443a1c <feof@plt+0x4017c>  // b.none
  4439d8:	ldrb	w8, [x20, #1154]
  4439dc:	ldur	w3, [x29, #-4]
  4439e0:	cmp	w25, #0x8
  4439e4:	mov	w9, #0xa                   	// #10
  4439e8:	orr	w19, w0, #0x2
  4439ec:	csel	w25, w9, w25, eq  // eq = none
  4439f0:	cbz	w8, 443d34 <feof@plt+0x40494>
  4439f4:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4439f8:	add	x4, x4, #0x619
  4439fc:	mov	w1, #0x2                   	// #2
  443a00:	mov	x0, x20
  443a04:	mov	w2, w3
  443a08:	mov	w3, wzr
  443a0c:	bl	4429b8 <feof@plt+0x3f118>
  443a10:	ldur	w3, [x29, #-4]
  443a14:	tbnz	w19, #13, 443d38 <feof@plt+0x40498>
  443a18:	b	443d64 <feof@plt+0x404c4>
  443a1c:	ldur	w3, [x29, #-4]
  443a20:	ldr	x2, [sp]
  443a24:	mov	w28, wzr
  443a28:	mov	x12, x21
  443a2c:	mov	x21, x23
  443a30:	cmp	w28, #0x0
  443a34:	ccmp	w25, #0x8, #0x0, ne  // ne = any
  443a38:	mov	w8, #0xa                   	// #10
  443a3c:	csel	w25, w8, w25, eq  // eq = none
  443a40:	cmp	w19, w25
  443a44:	b.cs	443a60 <feof@plt+0x401c0>  // b.hs, b.nlast
  443a48:	cbz	w28, 443a98 <feof@plt+0x401f8>
  443a4c:	cmp	w25, #0x2
  443a50:	b.ne	443b24 <feof@plt+0x40284>  // b.any
  443a54:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443a58:	add	x4, x4, #0x68e
  443a5c:	b	443ea0 <feof@plt+0x40600>
  443a60:	cmp	w25, #0x2
  443a64:	add	w5, w19, #0x30
  443a68:	b.ne	443a78 <feof@plt+0x401d8>  // b.any
  443a6c:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443a70:	add	x4, x4, #0x643
  443a74:	b	443a80 <feof@plt+0x401e0>
  443a78:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443a7c:	add	x4, x4, #0x669
  443a80:	mov	w1, #0x3                   	// #3
  443a84:	mov	x0, x20
  443a88:	mov	w2, w3
  443a8c:	mov	w3, wzr
  443a90:	bl	4429b8 <feof@plt+0x3f118>
  443a94:	b	443eb4 <feof@plt+0x40614>
  443a98:	subs	x23, x12, x21
  443a9c:	b.eq	443b70 <feof@plt+0x402d0>  // b.none
  443aa0:	mov	x10, xzr
  443aa4:	mov	x9, xzr
  443aa8:	mov	x8, xzr
  443aac:	mov	w11, #0x1                   	// #1
  443ab0:	mov	x12, x23
  443ab4:	b	443ac4 <feof@plt+0x40224>
  443ab8:	add	x10, x10, #0x1
  443abc:	sub	x12, x12, #0x1
  443ac0:	cbz	x12, 443b7c <feof@plt+0x402dc>
  443ac4:	add	x13, x21, x12
  443ac8:	ldurb	w13, [x13, #-1]
  443acc:	sub	w14, w13, #0x49
  443ad0:	cmp	w14, #0x2c
  443ad4:	b.hi	443bd4 <feof@plt+0x40334>  // b.pmore
  443ad8:	lsl	x15, x11, x14
  443adc:	tst	x15, #0x300000003
  443ae0:	b.ne	443ab8 <feof@plt+0x40218>  // b.any
  443ae4:	lsl	x15, x11, x14
  443ae8:	tst	x15, #0x800000008
  443aec:	b.ne	443b04 <feof@plt+0x40264>  // b.any
  443af0:	lsl	x13, x11, x14
  443af4:	tst	x13, #0x100000001000
  443af8:	b.eq	443bd4 <feof@plt+0x40334>  // b.none
  443afc:	add	x8, x8, #0x1
  443b00:	b	443abc <feof@plt+0x4021c>
  443b04:	add	x9, x9, #0x1
  443b08:	cmp	x9, #0x2
  443b0c:	b.ne	443abc <feof@plt+0x4021c>  // b.any
  443b10:	ldrb	w9, [x21, x12]
  443b14:	cmp	w13, w9
  443b18:	b.ne	443bd4 <feof@plt+0x40334>  // b.any
  443b1c:	mov	w9, #0x2                   	// #2
  443b20:	b	443abc <feof@plt+0x4021c>
  443b24:	cmp	w25, #0x10
  443b28:	cset	w8, ne  // ne = any
  443b2c:	orr	w8, w26, w8
  443b30:	tbz	w8, #0, 443b64 <feof@plt+0x402c4>
  443b34:	b.ne	443e08 <feof@plt+0x40568>  // b.any
  443b38:	ldrb	w8, [x20, #1154]
  443b3c:	cbz	w8, 443e08 <feof@plt+0x40568>
  443b40:	ldrb	w8, [x20, #1127]
  443b44:	cbnz	w8, 443e08 <feof@plt+0x40568>
  443b48:	ldrb	w8, [x20, #1120]
  443b4c:	mov	x26, x12
  443b50:	mov	x23, x2
  443b54:	cbz	w8, 443ddc <feof@plt+0x4053c>
  443b58:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443b5c:	add	x4, x4, #0x6e3
  443b60:	b	443de4 <feof@plt+0x40544>
  443b64:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443b68:	add	x4, x4, #0x6b8
  443b6c:	b	443ea0 <feof@plt+0x40600>
  443b70:	mov	x8, xzr
  443b74:	mov	x9, xzr
  443b78:	mov	x10, xzr
  443b7c:	cmp	x9, #0x2
  443b80:	b.hi	443bd4 <feof@plt+0x40334>  // b.pmore
  443b84:	orr	x11, x10, x8
  443b88:	cmp	x11, #0x1
  443b8c:	b.hi	443bd4 <feof@plt+0x40334>  // b.pmore
  443b90:	cbz	x10, 443c1c <feof@plt+0x4037c>
  443b94:	ldrb	w11, [x20, #1163]
  443b98:	cbz	w11, 443bd4 <feof@plt+0x40334>
  443b9c:	ldrb	w11, [x20, #1120]
  443ba0:	cbz	w11, 443c1c <feof@plt+0x4037c>
  443ba4:	ldr	w11, [x20, #1116]
  443ba8:	cmp	w11, #0xf
  443bac:	b.lt	443c1c <feof@plt+0x4037c>  // b.tstop
  443bb0:	cmp	w27, #0x69
  443bb4:	b.ne	443c1c <feof@plt+0x4037c>  // b.any
  443bb8:	cmp	x23, #0x1
  443bbc:	b.eq	443bd4 <feof@plt+0x40334>  // b.none
  443bc0:	cmp	x23, #0x2
  443bc4:	b.ne	443c1c <feof@plt+0x4037c>  // b.any
  443bc8:	ldrb	w11, [x21, #1]
  443bcc:	cmp	w11, #0x6c
  443bd0:	b.ne	443c1c <feof@plt+0x4037c>  // b.any
  443bd4:	ldrb	w8, [x20, #1161]
  443bd8:	cbz	w8, 443bf4 <feof@plt+0x40354>
  443bdc:	mov	w8, #0x40                  	// #64
  443be0:	movk	w8, #0x100, lsl #16
  443be4:	cbz	x2, 443c58 <feof@plt+0x403b8>
  443be8:	add	w19, w8, #0x1, lsl #12
  443bec:	str	x21, [x2]
  443bf0:	b	443c5c <feof@plt+0x403bc>
  443bf4:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443bf8:	add	x4, x4, #0x867
  443bfc:	mov	w1, #0x3                   	// #3
  443c00:	mov	x0, x20
  443c04:	mov	w2, w3
  443c08:	mov	w3, wzr
  443c0c:	mov	w5, w23
  443c10:	mov	x6, x21
  443c14:	bl	4429b8 <feof@plt+0x3f118>
  443c18:	b	443eb4 <feof@plt+0x40614>
  443c1c:	cmp	x10, #0x0
  443c20:	cset	w13, ne  // ne = any
  443c24:	cmp	x8, #0x0
  443c28:	mov	w10, #0x40                  	// #64
  443c2c:	mov	w11, #0x20                  	// #32
  443c30:	cset	w8, ne  // ne = any
  443c34:	cmp	x9, #0x1
  443c38:	mov	w12, #0x10                  	// #16
  443c3c:	lsl	w8, w8, #12
  443c40:	csel	w10, w11, w10, eq  // eq = none
  443c44:	cmp	x9, #0x0
  443c48:	bfi	w8, w13, #13, #1
  443c4c:	csel	w9, w12, w10, eq  // eq = none
  443c50:	orr	w19, w8, w9
  443c54:	b	443c5c <feof@plt+0x403bc>
  443c58:	orr	w19, w8, #0x1000
  443c5c:	ldrb	w8, [x20, #1138]
  443c60:	cbz	w8, 443cd4 <feof@plt+0x40434>
  443c64:	mov	x0, x20
  443c68:	mov	w22, w3
  443c6c:	bl	452894 <feof@plt+0x4eff4>
  443c70:	mov	w3, w22
  443c74:	cbnz	w0, 443cd4 <feof@plt+0x40434>
  443c78:	and	w8, w19, #0xf0
  443c7c:	cmp	w8, #0x40
  443c80:	and	w8, w19, #0x3000
  443c84:	b.ne	443c98 <feof@plt+0x403f8>  // b.any
  443c88:	ldrb	w9, [x20, #1139]
  443c8c:	cmp	w9, #0x0
  443c90:	cset	w9, ne  // ne = any
  443c94:	b	443c9c <feof@plt+0x403fc>
  443c98:	mov	w9, wzr
  443c9c:	cbnz	w8, 443ca4 <feof@plt+0x40404>
  443ca0:	cbz	w9, 443cd4 <feof@plt+0x40434>
  443ca4:	cmp	w9, #0x0
  443ca8:	mov	w8, #0x6                   	// #6
  443cac:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443cb0:	cinc	w1, w8, ne  // ne = any
  443cb4:	add	x4, x4, #0x7ac
  443cb8:	mov	x0, x20
  443cbc:	mov	w2, w3
  443cc0:	mov	w3, wzr
  443cc4:	mov	w5, w23
  443cc8:	mov	x6, x21
  443ccc:	bl	442ab4 <feof@plt+0x3f214>
  443cd0:	mov	w3, w22
  443cd4:	and	w8, w19, #0xf0
  443cd8:	cmp	w8, #0x40
  443cdc:	b.ne	443d30 <feof@plt+0x40490>  // b.any
  443ce0:	ldrb	w8, [x20, #1139]
  443ce4:	cbz	w8, 443d30 <feof@plt+0x40490>
  443ce8:	ldrb	w8, [x20, #1120]
  443cec:	ldrb	w9, [x20, #1152]
  443cf0:	adrp	x10, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443cf4:	adrp	x11, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443cf8:	add	x10, x10, #0x891
  443cfc:	add	x11, x11, #0x8b9
  443d00:	cmp	w8, #0x0
  443d04:	csel	x4, x11, x10, eq  // eq = none
  443d08:	mov	w1, #0x7                   	// #7
  443d0c:	mov	x0, x20
  443d10:	mov	w2, w3
  443d14:	mov	w21, w3
  443d18:	mov	w3, wzr
  443d1c:	cbz	w9, 443d28 <feof@plt+0x40488>
  443d20:	bl	442ab4 <feof@plt+0x3f214>
  443d24:	b	443d2c <feof@plt+0x4048c>
  443d28:	bl	442bb0 <feof@plt+0x3f310>
  443d2c:	mov	w3, w21
  443d30:	orr	w19, w19, #0x1
  443d34:	tbz	w19, #13, 443d64 <feof@plt+0x404c4>
  443d38:	ldrb	w8, [x20, #1154]
  443d3c:	cbz	w8, 443d64 <feof@plt+0x404c4>
  443d40:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443d44:	add	x4, x4, #0x8df
  443d48:	mov	w1, #0x2                   	// #2
  443d4c:	mov	x0, x20
  443d50:	mov	w2, w3
  443d54:	mov	w21, w3
  443d58:	mov	w3, wzr
  443d5c:	bl	4429b8 <feof@plt+0x3f118>
  443d60:	mov	w3, w21
  443d64:	cmp	w25, #0x10
  443d68:	b.eq	443dc4 <feof@plt+0x40524>  // b.none
  443d6c:	cmp	w25, #0xa
  443d70:	b.eq	443dcc <feof@plt+0x4052c>  // b.none
  443d74:	cmp	w25, #0x2
  443d78:	b.ne	443dd4 <feof@plt+0x40534>  // b.any
  443d7c:	ldrb	w8, [x20, #1165]
  443d80:	cbnz	w8, 443dbc <feof@plt+0x4051c>
  443d84:	ldrb	w8, [x20, #1154]
  443d88:	cbz	w8, 443dbc <feof@plt+0x4051c>
  443d8c:	ldrb	w8, [x20, #1120]
  443d90:	adrp	x9, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443d94:	adrp	x10, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443d98:	add	x9, x9, #0x907
  443d9c:	add	x10, x10, #0x93d
  443da0:	cmp	w8, #0x0
  443da4:	csel	x4, x10, x9, eq  // eq = none
  443da8:	mov	w1, #0x2                   	// #2
  443dac:	mov	x0, x20
  443db0:	mov	w2, w3
  443db4:	mov	w3, wzr
  443db8:	bl	4429b8 <feof@plt+0x3f118>
  443dbc:	orr	w0, w19, #0x800
  443dc0:	b	443eb8 <feof@plt+0x40618>
  443dc4:	orr	w0, w19, #0x200
  443dc8:	b	443eb8 <feof@plt+0x40618>
  443dcc:	orr	w0, w19, #0x100
  443dd0:	b	443eb8 <feof@plt+0x40618>
  443dd4:	orr	w0, w19, #0x400
  443dd8:	b	443eb8 <feof@plt+0x40618>
  443ddc:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443de0:	add	x4, x4, #0x70e
  443de4:	mov	w1, #0x2                   	// #2
  443de8:	mov	x0, x20
  443dec:	mov	w2, w3
  443df0:	mov	w19, w3
  443df4:	mov	w3, wzr
  443df8:	bl	4429b8 <feof@plt+0x3f118>
  443dfc:	mov	w3, w19
  443e00:	mov	x2, x23
  443e04:	mov	x12, x26
  443e08:	cmp	w28, #0x2
  443e0c:	b.ne	443e90 <feof@plt+0x405f0>  // b.any
  443e10:	ldrb	w8, [x21]
  443e14:	cmp	w8, #0x2d
  443e18:	b.eq	443e24 <feof@plt+0x40584>  // b.none
  443e1c:	cmp	w8, #0x2b
  443e20:	b.ne	443e28 <feof@plt+0x40588>  // b.any
  443e24:	ldrb	w8, [x21, #1]!
  443e28:	ldrh	w9, [x24, w8, uxtw #1]
  443e2c:	tbnz	w9, #2, 443e4c <feof@plt+0x405ac>
  443e30:	cmp	w8, #0x27
  443e34:	b.ne	443e40 <feof@plt+0x405a0>  // b.any
  443e38:	ldrb	w8, [x20, #1166]
  443e3c:	cbnz	w8, 443944 <feof@plt+0x400a4>
  443e40:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443e44:	add	x4, x4, #0x737
  443e48:	b	443ea0 <feof@plt+0x40600>
  443e4c:	and	w8, w8, #0xff
  443e50:	add	x21, x21, #0x1
  443e54:	cmp	w8, #0x27
  443e58:	b.ne	443e6c <feof@plt+0x405cc>  // b.any
  443e5c:	ldrb	w8, [x20, #1166]
  443e60:	cmp	w8, #0x0
  443e64:	cset	w22, ne  // ne = any
  443e68:	b	443e70 <feof@plt+0x405d0>
  443e6c:	mov	w22, wzr
  443e70:	ldrb	w8, [x21]
  443e74:	ldrh	w9, [x24, x8, lsl #1]
  443e78:	tbnz	w9, #2, 443e4c <feof@plt+0x405ac>
  443e7c:	cmp	w8, #0x27
  443e80:	b.ne	443ed8 <feof@plt+0x40638>  // b.any
  443e84:	ldrb	w9, [x20, #1166]
  443e88:	cbnz	w9, 443e4c <feof@plt+0x405ac>
  443e8c:	b	443ed8 <feof@plt+0x40638>
  443e90:	cmp	w25, #0x10
  443e94:	b.ne	443ed8 <feof@plt+0x40638>  // b.any
  443e98:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443e9c:	add	x4, x4, #0x74e
  443ea0:	mov	w1, #0x3                   	// #3
  443ea4:	mov	x0, x20
  443ea8:	mov	w2, w3
  443eac:	mov	w3, wzr
  443eb0:	bl	4429b8 <feof@plt+0x3f118>
  443eb4:	mov	w0, wzr
  443eb8:	ldp	x20, x19, [sp, #96]
  443ebc:	ldp	x22, x21, [sp, #80]
  443ec0:	ldp	x24, x23, [sp, #64]
  443ec4:	ldp	x26, x25, [sp, #48]
  443ec8:	ldp	x28, x27, [sp, #32]
  443ecc:	ldp	x29, x30, [sp, #16]
  443ed0:	add	sp, sp, #0x70
  443ed4:	ret
  443ed8:	cbnz	w22, 443920 <feof@plt+0x40080>
  443edc:	sub	x24, x12, x21
  443ee0:	mov	x22, x2
  443ee4:	mov	x0, x20
  443ee8:	mov	x1, x21
  443eec:	mov	x2, x24
  443ef0:	mov	w19, w3
  443ef4:	mov	x26, x12
  443ef8:	bl	44302c <feof@plt+0x3f78c>
  443efc:	mov	w23, w0
  443f00:	cbz	w0, 443f8c <feof@plt+0x406ec>
  443f04:	cmp	x26, x21
  443f08:	b.eq	443f44 <feof@plt+0x406a4>  // b.none
  443f0c:	ldrb	w8, [x20, #1138]
  443f10:	cbz	w8, 443f44 <feof@plt+0x406a4>
  443f14:	mov	x0, x20
  443f18:	bl	452894 <feof@plt+0x4eff4>
  443f1c:	cbnz	w0, 443f44 <feof@plt+0x406a4>
  443f20:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443f24:	add	x4, x4, #0x7ac
  443f28:	mov	w1, #0x6                   	// #6
  443f2c:	mov	x0, x20
  443f30:	mov	w2, w19
  443f34:	mov	w3, wzr
  443f38:	mov	w5, w24
  443f3c:	mov	x6, x21
  443f40:	bl	442ab4 <feof@plt+0x3f214>
  443f44:	cmp	w23, #0x20
  443f48:	b.ne	443f64 <feof@plt+0x406c4>  // b.any
  443f4c:	ldrb	w8, [x20, #1154]
  443f50:	mov	w3, w19
  443f54:	cbz	w8, 444004 <feof@plt+0x40764>
  443f58:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443f5c:	add	x4, x4, #0x7d4
  443f60:	b	443fec <feof@plt+0x4074c>
  443f64:	cmp	w25, #0xa
  443f68:	mov	w3, w19
  443f6c:	b.eq	443fa8 <feof@plt+0x40708>  // b.none
  443f70:	tbz	w23, #14, 443fa8 <feof@plt+0x40708>
  443f74:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443f78:	add	x4, x4, #0x802
  443f7c:	mov	w1, #0x3                   	// #3
  443f80:	mov	x0, x20
  443f84:	mov	w2, w3
  443f88:	b	444024 <feof@plt+0x40784>
  443f8c:	ldrb	w8, [x20, #1161]
  443f90:	cbz	w8, 444010 <feof@plt+0x40770>
  443f94:	mov	w23, #0x40                  	// #64
  443f98:	movk	w23, #0x100, lsl #16
  443f9c:	cbz	x22, 443f04 <feof@plt+0x40664>
  443fa0:	str	x21, [x22]
  443fa4:	b	443f04 <feof@plt+0x40664>
  443fa8:	tst	w23, #0x300000
  443fac:	b.eq	443fd8 <feof@plt+0x40738>  // b.none
  443fb0:	ldrb	w8, [x20, #1154]
  443fb4:	cbz	w8, 443fd8 <feof@plt+0x40738>
  443fb8:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443fbc:	add	x4, x4, #0x619
  443fc0:	mov	w1, #0x2                   	// #2
  443fc4:	mov	x0, x20
  443fc8:	mov	w2, w3
  443fcc:	mov	w3, wzr
  443fd0:	bl	4429b8 <feof@plt+0x3f118>
  443fd4:	mov	w3, w19
  443fd8:	tbz	w23, #14, 444004 <feof@plt+0x40764>
  443fdc:	ldrb	w8, [x20, #1154]
  443fe0:	cbz	w8, 444004 <feof@plt+0x40764>
  443fe4:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  443fe8:	add	x4, x4, #0x83b
  443fec:	mov	w1, #0x2                   	// #2
  443ff0:	mov	x0, x20
  443ff4:	mov	w2, w3
  443ff8:	mov	w3, wzr
  443ffc:	bl	4429b8 <feof@plt+0x3f118>
  444000:	mov	w3, w19
  444004:	orr	w19, w23, #0x2
  444008:	tbnz	w19, #13, 443d38 <feof@plt+0x40498>
  44400c:	b	443d64 <feof@plt+0x404c4>
  444010:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  444014:	add	x4, x4, #0x781
  444018:	mov	w1, #0x3                   	// #3
  44401c:	mov	x0, x20
  444020:	mov	w2, w19
  444024:	mov	w3, wzr
  444028:	mov	w5, w24
  44402c:	b	443c10 <feof@plt+0x40370>
  444030:	sub	sp, sp, #0x50
  444034:	stp	x20, x19, [sp, #64]
  444038:	mov	x19, x8
  44403c:	ubfx	w8, w2, #12, #1
  444040:	stp	x29, x30, [sp, #16]
  444044:	stp	x24, x23, [sp, #32]
  444048:	stp	x22, x21, [sp, #48]
  44404c:	stp	xzr, xzr, [x19]
  444050:	strb	w8, [x19, #16]
  444054:	strb	wzr, [x19, #17]
  444058:	ldr	w10, [x1, #8]
  44405c:	ldr	x11, [x1, #16]
  444060:	add	x29, sp, #0x10
  444064:	cmp	w10, #0x1
  444068:	b.ne	44407c <feof@plt+0x407dc>  // b.any
  44406c:	ldrb	w8, [x11]
  444070:	sub	x8, x8, #0x30
  444074:	str	x8, [x19, #8]
  444078:	b	44430c <feof@plt+0x40a6c>
  44407c:	ldr	x9, [x0, #1208]
  444080:	and	w13, w2, #0xf00
  444084:	cmp	w13, #0x200
  444088:	add	x12, x11, x10
  44408c:	b.eq	4440b4 <feof@plt+0x40814>  // b.none
  444090:	cmp	w13, #0x800
  444094:	b.eq	4440c8 <feof@plt+0x40828>  // b.none
  444098:	cmp	w13, #0x400
  44409c:	b.ne	4440e4 <feof@plt+0x40844>  // b.any
  4440a0:	add	x11, x11, #0x1
  4440a4:	mov	w10, #0x8                   	// #8
  4440a8:	cmp	x11, x12
  4440ac:	b.cs	4440d8 <feof@plt+0x40838>  // b.hs, b.nlast
  4440b0:	b	4440f0 <feof@plt+0x40850>
  4440b4:	add	x11, x11, #0x2
  4440b8:	mov	w10, #0x10                  	// #16
  4440bc:	cmp	x11, x12
  4440c0:	b.cs	4440d8 <feof@plt+0x40838>  // b.hs, b.nlast
  4440c4:	b	4440f0 <feof@plt+0x40850>
  4440c8:	add	x11, x11, #0x2
  4440cc:	mov	w10, #0x2                   	// #2
  4440d0:	cmp	x11, x12
  4440d4:	b.cc	4440f0 <feof@plt+0x40850>  // b.lo, b.ul, b.last
  4440d8:	mov	x13, xzr
  4440dc:	mov	x14, xzr
  4440e0:	b	4442b0 <feof@plt+0x40a10>
  4440e4:	mov	w10, #0xa                   	// #10
  4440e8:	cmp	x11, x12
  4440ec:	b.cs	4440d8 <feof@plt+0x40838>  // b.hs, b.nlast
  4440f0:	neg	x3, x9
  4440f4:	mov	x4, #0xffffffffffffffff    	// #-1
  4440f8:	subs	x16, x9, #0x40
  4440fc:	lsr	x3, x4, x3
  444100:	mov	w5, #0x3                   	// #3
  444104:	lsl	x4, x4, x9
  444108:	csinc	x7, xzr, x3, cs  // cs = hs, nlast
  44410c:	cmp	w10, #0x10
  444110:	mvn	x3, x4
  444114:	sub	x4, x7, x10
  444118:	cinc	x5, x5, eq  // eq = none
  44411c:	cmp	w10, #0x2
  444120:	mov	w6, #0x40                  	// #64
  444124:	adrp	x18, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  444128:	adrp	x1, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  44412c:	udiv	x7, x4, x10
  444130:	csinc	x4, x5, xzr, ne  // ne = any
  444134:	mov	x14, xzr
  444138:	mov	x13, xzr
  44413c:	mov	w15, wzr
  444140:	add	x17, x19, #0x12
  444144:	add	x18, x18, #0x4a2
  444148:	add	x1, x1, #0x1c3
  44414c:	add	x7, x7, #0x1
  444150:	sub	x5, x6, x4
  444154:	mov	w6, #0x2                   	// #2
  444158:	b	444170 <feof@plt+0x408d0>
  44415c:	madd	x13, x13, x10, x20
  444160:	str	x13, [x19, #8]
  444164:	add	x11, x11, #0x1
  444168:	cmp	x12, x11
  44416c:	b.eq	444284 <feof@plt+0x409e4>  // b.none
  444170:	ldrb	w20, [x11]
  444174:	ldrh	w21, [x18, x20, lsl #1]
  444178:	tbnz	w21, #2, 444188 <feof@plt+0x408e8>
  44417c:	cmp	w10, #0x10
  444180:	b.ne	444210 <feof@plt+0x40970>  // b.any
  444184:	tbz	w21, #8, 444210 <feof@plt+0x40970>
  444188:	ldrb	w20, [x1, x20]
  44418c:	cmp	x13, x7
  444190:	b.cc	44415c <feof@plt+0x408bc>  // b.lo, b.ul, b.last
  444194:	lsr	x7, x14, x5
  444198:	lsl	x21, x14, x4
  44419c:	lsr	x23, x13, x5
  4441a0:	cmp	x7, #0x0
  4441a4:	lsl	x22, x13, x4
  4441a8:	lsl	x24, x13, #1
  4441ac:	extr	x13, x14, x13, #63
  4441b0:	orr	x14, x21, x23
  4441b4:	cset	w21, ne  // ne = any
  4441b8:	cmp	w10, #0xa
  4441bc:	csel	x23, x13, xzr, eq  // eq = none
  4441c0:	csel	x13, x24, xzr, eq  // eq = none
  4441c4:	mvn	x7, x22
  4441c8:	adds	x13, x13, x20
  4441cc:	cset	w20, cs  // cs = hs, nlast
  4441d0:	csinc	x24, x6, xzr, cs  // cs = hs, nlast
  4441d4:	cmp	x13, x7
  4441d8:	csel	x20, x20, x24, ls  // ls = plast
  4441dc:	mvn	x7, x14
  4441e0:	add	x13, x13, x22
  4441e4:	add	x22, x20, x23
  4441e8:	cmp	x22, x7
  4441ec:	cset	w7, hi  // hi = pmore
  4441f0:	cmp	x9, #0x41
  4441f4:	orr	w20, w21, w7
  4441f8:	add	x14, x22, x14
  4441fc:	b.cc	444224 <feof@plt+0x40984>  // b.lo, b.ul, b.last
  444200:	cmp	x16, #0x3f
  444204:	b.hi	444254 <feof@plt+0x409b4>  // b.pmore
  444208:	and	x7, x14, x3
  44420c:	b	444244 <feof@plt+0x409a4>
  444210:	cmp	w20, #0x27
  444214:	b.ne	444284 <feof@plt+0x409e4>  // b.any
  444218:	ldrb	w20, [x0, #1166]
  44421c:	cbnz	w20, 444164 <feof@plt+0x408c4>
  444220:	b	444284 <feof@plt+0x409e4>
  444224:	cmp	x9, #0x40
  444228:	b.ne	444234 <feof@plt+0x40994>  // b.any
  44422c:	mov	x7, xzr
  444230:	b	444244 <feof@plt+0x409a4>
  444234:	mov	x7, xzr
  444238:	cmp	x13, x3
  44423c:	and	x13, x13, x3
  444240:	b.hi	44424c <feof@plt+0x409ac>  // b.pmore
  444244:	cmp	x7, x14
  444248:	b.eq	444254 <feof@plt+0x409b4>  // b.none
  44424c:	mov	w20, #0x1                   	// #1
  444250:	mov	x14, x7
  444254:	ldr	w21, [sp, #8]
  444258:	ldrh	w22, [sp, #12]
  44425c:	and	w15, w15, #0x1
  444260:	orr	w15, w20, w15
  444264:	cmp	w15, #0x0
  444268:	mov	x7, xzr
  44426c:	cset	w15, ne  // ne = any
  444270:	stp	x14, x13, [x19]
  444274:	strb	w20, [x19, #17]
  444278:	strh	w22, [x17, #4]
  44427c:	str	w21, [x17]
  444280:	b	444164 <feof@plt+0x408c4>
  444284:	tbnz	w2, #24, 4442b0 <feof@plt+0x40a10>
  444288:	tbz	w15, #0, 4442b0 <feof@plt+0x40a10>
  44428c:	ldp	x20, x19, [sp, #64]
  444290:	ldp	x22, x21, [sp, #48]
  444294:	ldp	x24, x23, [sp, #32]
  444298:	ldp	x29, x30, [sp, #16]
  44429c:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4442a0:	add	x2, x2, #0x962
  4442a4:	mov	w1, #0x2                   	// #2
  4442a8:	add	sp, sp, #0x50
  4442ac:	b	4424f8 <feof@plt+0x3ec58>
  4442b0:	cbnz	w8, 44430c <feof@plt+0x40a6c>
  4442b4:	ldrb	w8, [x0, #1160]
  4442b8:	cbz	w8, 4442c4 <feof@plt+0x40a24>
  4442bc:	ldrb	w8, [x0, #16]
  4442c0:	cbnz	w8, 44430c <feof@plt+0x40a6c>
  4442c4:	cmp	x9, #0x40
  4442c8:	mov	x8, #0xffffffffffffffbf    	// #-65
  4442cc:	csinv	x8, x8, xzr, hi  // hi = pmore
  4442d0:	csel	x11, x14, x13, hi  // hi = pmore
  4442d4:	add	x8, x9, x8
  4442d8:	lsr	x8, x11, x8
  4442dc:	tbz	w8, #0, 44430c <feof@plt+0x40a6c>
  4442e0:	cmp	w10, #0xa
  4442e4:	b.ne	444304 <feof@plt+0x40a64>  // b.any
  4442e8:	ldrb	w8, [x0, #1152]
  4442ec:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4442f0:	add	x2, x2, #0x98d
  4442f4:	cmp	w8, #0x0
  4442f8:	cset	w8, ne  // ne = any
  4442fc:	lsl	w1, w8, #1
  444300:	bl	4424f8 <feof@plt+0x3ec58>
  444304:	mov	w8, #0x1                   	// #1
  444308:	strb	w8, [x19, #16]
  44430c:	ldp	x20, x19, [sp, #64]
  444310:	ldp	x22, x21, [sp, #48]
  444314:	ldp	x24, x23, [sp, #32]
  444318:	ldp	x29, x30, [sp, #16]
  44431c:	add	sp, sp, #0x50
  444320:	ret
  444324:	sub	sp, sp, #0x1b0
  444328:	stp	x29, x30, [sp, #336]
  44432c:	stp	x28, x27, [sp, #352]
  444330:	stp	x26, x25, [sp, #368]
  444334:	stp	x24, x23, [sp, #384]
  444338:	stp	x22, x21, [sp, #400]
  44433c:	stp	x20, x19, [sp, #416]
  444340:	stp	w1, wzr, [sp, #64]
  444344:	ldr	x27, [x0, #1096]
  444348:	add	x29, sp, #0x150
  44434c:	add	x9, x0, #0x50
  444350:	mov	w8, #0x16                  	// #22
  444354:	str	x9, [sp, #72]
  444358:	sub	x9, x29, #0x40
  44435c:	str	wzr, [sp, #116]
  444360:	str	wzr, [x0, #28]
  444364:	str	xzr, [x0, #432]
  444368:	sub	x10, x29, #0x28
  44436c:	adrp	x23, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  444370:	str	w8, [x27, #36]
  444374:	add	x8, x9, #0x12
  444378:	mov	x19, x0
  44437c:	mov	w25, wzr
  444380:	sub	x22, x29, #0x58
  444384:	add	x23, x23, #0x492
  444388:	mov	x21, #0xffffffffffffffff    	// #-1
  44438c:	str	x8, [sp, #104]
  444390:	add	x8, x10, #0x12
  444394:	str	x8, [sp, #96]
  444398:	mov	w24, #0x1                   	// #1
  44439c:	mov	x28, x27
  4443a0:	add	x27, x27, #0x8
  4443a4:	b	444404 <feof@plt+0x40b64>
  4443a8:	lsl	x10, x21, x10
  4443ac:	mov	x9, xzr
  4443b0:	bic	x8, x8, x10
  4443b4:	ldr	w11, [sp, #120]
  4443b8:	ldrh	w12, [sp, #124]
  4443bc:	mov	w10, wzr
  4443c0:	str	w11, [sp, #128]
  4443c4:	strh	w12, [sp, #132]
  4443c8:	cmp	w10, #0x0
  4443cc:	cset	w10, ne  // ne = any
  4443d0:	stp	x9, x8, [x22, #24]
  4443d4:	ldrh	w8, [sp, #132]
  4443d8:	ldr	w9, [sp, #128]
  4443dc:	sturb	w10, [x29, #-48]
  4443e0:	ldr	x10, [sp, #104]
  4443e4:	sturb	wzr, [x29, #-47]
  4443e8:	strh	w8, [x10, #4]
  4443ec:	str	w9, [x10]
  4443f0:	ldr	x8, [x22, #40]
  4443f4:	ldur	q0, [x22, #24]
  4443f8:	mov	w24, wzr
  4443fc:	str	x8, [x27, #16]
  444400:	str	q0, [x27]
  444404:	add	x1, sp, #0x74
  444408:	mov	x0, x19
  44440c:	add	w25, w25, #0x1
  444410:	bl	452890 <feof@plt+0x4eff0>
  444414:	ldrb	w20, [x0, #4]
  444418:	ldr	w2, [sp, #116]
  44441c:	mov	x26, x0
  444420:	sub	w8, w20, #0x37
  444424:	cmp	w8, #0x6
  444428:	b.cc	44444c <feof@plt+0x40bac>  // b.lo, b.ul, b.last
  44442c:	cmp	w20, #0x35
  444430:	b.hi	44488c <feof@plt+0x40fec>  // b.pmore
  444434:	adrp	x10, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  444438:	add	x10, x10, #0x426
  44443c:	adr	x8, 44444c <feof@plt+0x40bac>
  444440:	ldrh	w9, [x10, x20, lsl #1]
  444444:	add	x8, x8, x9, lsl #2
  444448:	br	x8
  44444c:	tbz	w24, #0, 445aa8 <feof@plt+0x42208>
  444450:	sub	w8, w20, #0x25
  444454:	cmp	w8, #0x17
  444458:	stur	wzr, [x29, #-88]
  44445c:	b.hi	445c44 <feof@plt+0x423a4>  // b.pmore
  444460:	adr	x9, 444470 <feof@plt+0x40bd0>
  444464:	ldrh	w10, [x23, x8, lsl #1]
  444468:	add	x9, x9, x10, lsl #2
  44446c:	br	x9
  444470:	sub	x2, x29, #0x28
  444474:	sub	x3, x29, #0x58
  444478:	mov	x0, x19
  44447c:	mov	x1, x26
  444480:	bl	43c2fc <feof@plt+0x38a5c>
  444484:	ldur	w10, [x29, #-88]
  444488:	mov	x9, xzr
  44448c:	mov	w8, w0
  444490:	tbz	w0, #31, 4443c8 <feof@plt+0x40b28>
  444494:	cbnz	w10, 4443c8 <feof@plt+0x40b28>
  444498:	ldr	w9, [sp, #128]
  44449c:	ldrh	w10, [sp, #132]
  4444a0:	orr	x8, x8, #0xffffffff00000000
  4444a4:	str	w9, [sp, #120]
  4444a8:	strh	w10, [sp, #124]
  4444ac:	ldr	x10, [x19, #1208]
  4444b0:	cmp	x10, #0x41
  4444b4:	b.cc	4444d0 <feof@plt+0x40c30>  // b.lo, b.ul, b.last
  4444b8:	sub	x9, x10, #0x40
  4444bc:	cmp	x9, #0x3f
  4444c0:	b.hi	4445ec <feof@plt+0x40d4c>  // b.pmore
  4444c4:	lsl	x9, x21, x9
  4444c8:	mvn	x9, x9
  4444cc:	b	4443b4 <feof@plt+0x40b14>
  4444d0:	cmp	x10, #0x40
  4444d4:	b.ne	4443a8 <feof@plt+0x40b08>  // b.any
  4444d8:	mov	x9, xzr
  4444dc:	b	4443b4 <feof@plt+0x40b14>
  4444e0:	mov	x0, x19
  4444e4:	mov	x1, x26
  4444e8:	mov	w3, w2
  4444ec:	mov	x2, xzr
  4444f0:	mov	w20, w3
  4444f4:	bl	443710 <feof@plt+0x3fe70>
  4444f8:	mov	w24, w0
  4444fc:	stur	w0, [x29, #-40]
  444500:	tbz	w0, #24, 444518 <feof@plt+0x40c78>
  444504:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  444508:	mov	w1, #0x3                   	// #3
  44450c:	mov	x0, x19
  444510:	add	x2, x2, #0xad6
  444514:	bl	4424f8 <feof@plt+0x3ec58>
  444518:	and	w8, w24, #0xf
  44451c:	cmp	w8, #0x1
  444520:	b.eq	444698 <feof@plt+0x40df8>  // b.none
  444524:	cmp	w8, #0x2
  444528:	b.ne	4447b0 <feof@plt+0x40f10>  // b.any
  44452c:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  444530:	mov	w2, w20
  444534:	mov	w1, #0x3                   	// #3
  444538:	mov	x0, x19
  44453c:	mov	w3, wzr
  444540:	add	x4, x4, #0xb06
  444544:	b	4447ac <feof@plt+0x40f0c>
  444548:	ldrb	w8, [x19, #18]
  44454c:	cbnz	w8, 4447f0 <feof@plt+0x40f50>
  444550:	ldrb	w8, [x19, #1154]
  444554:	cbz	w8, 4447d0 <feof@plt+0x40f30>
  444558:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  44455c:	mov	w1, #0x2                   	// #2
  444560:	mov	x0, x19
  444564:	mov	w3, wzr
  444568:	add	x4, x4, #0xb83
  44456c:	bl	4429b8 <feof@plt+0x3f118>
  444570:	b	4447f0 <feof@plt+0x40f50>
  444574:	ldr	x8, [x26, #8]
  444578:	ldr	x9, [x19, #1248]
  44457c:	cmp	x8, x9
  444580:	b.eq	4445f4 <feof@plt+0x40d54>  // b.none
  444584:	ldr	x9, [x19, #1288]
  444588:	cmp	x8, x9
  44458c:	b.eq	4446b4 <feof@plt+0x40e14>  // b.none
  444590:	ldr	x9, [x19, #1296]
  444594:	cmp	x8, x9
  444598:	b.eq	4447bc <feof@plt+0x40f1c>  // b.none
  44459c:	ldrb	w9, [x19, #1120]
  4445a0:	cbz	w9, 4445bc <feof@plt+0x40d1c>
  4445a4:	ldr	x11, [x19, #1256]
  4445a8:	cmp	x8, x11
  4445ac:	b.eq	44480c <feof@plt+0x40f6c>  // b.none
  4445b0:	ldr	x9, [x19, #1264]
  4445b4:	cmp	x8, x9
  4445b8:	b.eq	44480c <feof@plt+0x40f6c>  // b.none
  4445bc:	ldrb	w9, [x19, #1149]
  4445c0:	cbz	w9, 4447b0 <feof@plt+0x40f10>
  4445c4:	ldr	w9, [x19, #28]
  4445c8:	cbnz	w9, 4447b0 <feof@plt+0x40f10>
  4445cc:	ldr	x5, [x8]
  4445d0:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4445d4:	mov	w1, #0xd                   	// #13
  4445d8:	mov	x0, x19
  4445dc:	mov	w3, wzr
  4445e0:	add	x4, x4, #0xb5f
  4445e4:	bl	442ab4 <feof@plt+0x3f214>
  4445e8:	b	4447b0 <feof@plt+0x40f10>
  4445ec:	mov	x9, #0xffffffffffffffff    	// #-1
  4445f0:	b	4443b4 <feof@plt+0x40b14>
  4445f4:	ldrb	w8, [x19, #24]
  4445f8:	ldr	x20, [x19, #136]
  4445fc:	mov	x0, x19
  444600:	add	w8, w8, #0x1
  444604:	strb	w8, [x19, #24]
  444608:	bl	452228 <feof@plt+0x4e988>
  44460c:	ldrb	w8, [x0, #4]
  444610:	cmp	w8, #0x14
  444614:	b.ne	4446c8 <feof@plt+0x40e28>  // b.any
  444618:	mov	x0, x19
  44461c:	bl	452228 <feof@plt+0x4e988>
  444620:	ldrb	w8, [x0, #4]
  444624:	mov	x21, x0
  444628:	mov	w9, #0x1                   	// #1
  44462c:	cmp	w8, #0x35
  444630:	b.eq	4446d8 <feof@plt+0x40e38>  // b.none
  444634:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  444638:	mov	w1, #0x3                   	// #3
  44463c:	mov	x0, x19
  444640:	add	x2, x2, #0xc03
  444644:	bl	4424f8 <feof@plt+0x3ec58>
  444648:	ldrb	w8, [x21, #6]
  44464c:	tbz	w8, #4, 444834 <feof@plt+0x40f94>
  444650:	sturh	wzr, [x29, #-34]
  444654:	ldrb	w8, [x21, #4]
  444658:	mov	x0, x19
  44465c:	mov	x1, x21
  444660:	sturb	w8, [x29, #-36]
  444664:	bl	44d198 <feof@plt+0x498f8>
  444668:	mov	x21, x0
  44466c:	sub	x1, x29, #0x28
  444670:	mov	x0, x19
  444674:	bl	44d198 <feof@plt+0x498f8>
  444678:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  44467c:	mov	x4, x0
  444680:	mov	w1, #0x3                   	// #3
  444684:	mov	x0, x19
  444688:	add	x2, x2, #0xc2d
  44468c:	mov	x3, x21
  444690:	bl	4424f8 <feof@plt+0x3ec58>
  444694:	b	444834 <feof@plt+0x40f94>
  444698:	tbnz	w24, #13, 444794 <feof@plt+0x40ef4>
  44469c:	sub	x8, x29, #0x40
  4446a0:	mov	x0, x19
  4446a4:	mov	x1, x26
  4446a8:	mov	w2, w24
  4446ac:	bl	444030 <feof@plt+0x40790>
  4446b0:	b	4443f0 <feof@plt+0x40b50>
  4446b4:	sub	x8, x29, #0x40
  4446b8:	mov	x0, x19
  4446bc:	mov	w1, wzr
  4446c0:	bl	445d30 <feof@plt+0x42490>
  4446c4:	b	4443f0 <feof@plt+0x40b50>
  4446c8:	mov	x21, x0
  4446cc:	mov	w9, wzr
  4446d0:	cmp	w8, #0x35
  4446d4:	b.ne	444634 <feof@plt+0x40d94>  // b.any
  4446d8:	ldr	x21, [x21, #8]
  4446dc:	cbz	w9, 4446f4 <feof@plt+0x40e54>
  4446e0:	mov	x0, x19
  4446e4:	bl	452228 <feof@plt+0x4e988>
  4446e8:	ldrb	w8, [x0, #4]
  4446ec:	cmp	w8, #0x15
  4446f0:	b.ne	444820 <feof@plt+0x40f80>  // b.any
  4446f4:	cbz	x21, 444834 <feof@plt+0x40f94>
  4446f8:	ldr	x8, [sp, #72]
  4446fc:	cmp	x20, x8
  444700:	b.ne	444710 <feof@plt+0x40e70>  // b.any
  444704:	ldr	x8, [x19, #136]
  444708:	cmp	x8, x20
  44470c:	b.eq	44472c <feof@plt+0x40e8c>  // b.none
  444710:	ldrb	w8, [x19, #1150]
  444714:	cbz	w8, 44472c <feof@plt+0x40e8c>
  444718:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  44471c:	mov	w1, #0x18                  	// #24
  444720:	mov	x0, x19
  444724:	add	x2, x2, #0xc5c
  444728:	bl	442758 <feof@plt+0x3eeb8>
  44472c:	ldrh	w8, [x21, #18]
  444730:	and	w9, w8, #0x3
  444734:	cmp	w9, #0x2
  444738:	b.ne	444750 <feof@plt+0x40eb0>  // b.any
  44473c:	ldr	x8, [x21, #24]
  444740:	ldrb	w9, [x8, #19]
  444744:	orr	w9, w9, #0x20
  444748:	strb	w9, [x8, #19]
  44474c:	ldrh	w8, [x21, #18]
  444750:	tbnz	w8, #7, 444760 <feof@plt+0x40ec0>
  444754:	mov	x0, x19
  444758:	mov	x1, x21
  44475c:	bl	453918 <feof@plt+0x50078>
  444760:	ldrb	w8, [x19, #24]
  444764:	str	x21, [x19, #432]
  444768:	sub	w8, w8, #0x1
  44476c:	strb	w8, [x19, #24]
  444770:	sturh	wzr, [x29, #-48]
  444774:	str	xzr, [x22, #24]
  444778:	ldrh	w9, [x21, #18]
  44477c:	mov	x8, xzr
  444780:	tbz	w9, #1, 44484c <feof@plt+0x40fac>
  444784:	mov	w8, #0xffffffff            	// #-1
  444788:	eor	w8, w8, w9, lsr #8
  44478c:	and	x8, x8, #0x1
  444790:	b	44484c <feof@plt+0x40fac>
  444794:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  444798:	mov	w2, w20
  44479c:	mov	w1, #0x3                   	// #3
  4447a0:	mov	x0, x19
  4447a4:	mov	w3, wzr
  4447a8:	add	x4, x4, #0xb33
  4447ac:	bl	4429b8 <feof@plt+0x3f118>
  4447b0:	mov	w10, wzr
  4447b4:	mov	x8, xzr
  4447b8:	b	444804 <feof@plt+0x40f64>
  4447bc:	sub	x8, x29, #0x40
  4447c0:	mov	w1, #0x1                   	// #1
  4447c4:	mov	x0, x19
  4447c8:	bl	445d30 <feof@plt+0x42490>
  4447cc:	b	4443f0 <feof@plt+0x40b50>
  4447d0:	ldrb	w8, [x19, #1132]
  4447d4:	cbz	w8, 4447f0 <feof@plt+0x40f50>
  4447d8:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4447dc:	mov	w1, #0x1                   	// #1
  4447e0:	mov	x0, x19
  4447e4:	mov	w3, wzr
  4447e8:	add	x4, x4, #0xba2
  4447ec:	bl	442ab4 <feof@plt+0x3f214>
  4447f0:	sub	x1, x29, #0x28
  4447f4:	mov	x0, x19
  4447f8:	bl	43fdec <feof@plt+0x3c54c>
  4447fc:	ldur	w8, [x29, #-40]
  444800:	ldur	w10, [x29, #-88]
  444804:	mov	x9, xzr
  444808:	b	4443c8 <feof@plt+0x40b28>
  44480c:	cmp	x8, x11
  444810:	mov	w10, wzr
  444814:	mov	x9, xzr
  444818:	cset	w8, eq  // eq = none
  44481c:	b	4443c8 <feof@plt+0x40b28>
  444820:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  444824:	mov	w1, #0x3                   	// #3
  444828:	mov	x0, x19
  44482c:	add	x2, x2, #0xbe7
  444830:	bl	4424f8 <feof@plt+0x3ec58>
  444834:	ldrb	w9, [x19, #24]
  444838:	mov	x8, xzr
  44483c:	sub	w9, w9, #0x1
  444840:	strb	w9, [x19, #24]
  444844:	sturh	wzr, [x29, #-48]
  444848:	str	xzr, [x22, #24]
  44484c:	str	x8, [x22, #32]
  444850:	mov	x21, #0xffffffffffffffff    	// #-1
  444854:	b	4443f0 <feof@plt+0x40b50>
  444858:	cmp	w25, #0x1
  44485c:	cset	w8, eq  // eq = none
  444860:	mov	w20, #0x1                   	// #1
  444864:	str	w8, [sp, #68]
  444868:	b	444894 <feof@plt+0x40ff4>
  44486c:	tst	w24, #0x1
  444870:	mov	w8, #0x1b                  	// #27
  444874:	csel	w20, w8, w20, ne  // ne = any
  444878:	b	444894 <feof@plt+0x40ff4>
  44487c:	tst	w24, #0x1
  444880:	mov	w8, #0x1c                  	// #28
  444884:	csel	w20, w8, w20, ne  // ne = any
  444888:	b	444894 <feof@plt+0x40ff4>
  44488c:	cmp	w20, #0x1b
  444890:	b.cs	445afc <feof@plt+0x4225c>  // b.hs, b.nlast
  444894:	mov	w8, #0x4002                	// #16386
  444898:	movk	w8, #0x1810, lsl #16
  44489c:	mov	x27, x28
  4448a0:	lsr	x8, x8, x20
  4448a4:	str	w2, [sp, #84]
  4448a8:	tbnz	w8, #0, 4448d4 <feof@plt+0x41034>
  4448ac:	tbz	w24, #0, 444908 <feof@plt+0x41068>
  4448b0:	subs	w8, w20, #0x15
  4448b4:	b.eq	4448dc <feof@plt+0x4103c>  // b.none
  4448b8:	ldr	w2, [sp, #84]
  4448bc:	cmp	w20, #0x16
  4448c0:	b.ne	4448f0 <feof@plt+0x41050>  // b.any
  4448c4:	ldr	w9, [x27, #36]
  4448c8:	cmp	w9, #0x16
  4448cc:	b.ne	4448f4 <feof@plt+0x41054>  // b.any
  4448d0:	b	445bfc <feof@plt+0x4235c>
  4448d4:	tbnz	w24, #0, 444908 <feof@plt+0x41068>
  4448d8:	b	445b7c <feof@plt+0x422dc>
  4448dc:	ldr	w9, [x27, #36]
  4448e0:	ldr	w2, [sp, #84]
  4448e4:	cmp	w9, #0x14
  4448e8:	b.ne	4448f4 <feof@plt+0x41054>  // b.any
  4448ec:	b	445c28 <feof@plt+0x42388>
  4448f0:	ldr	w9, [x27, #36]
  4448f4:	orr	w9, w9, #0x2
  4448f8:	cmp	w9, #0x16
  4448fc:	b.ne	445bac <feof@plt+0x4230c>  // b.any
  444900:	cmp	w8, #0x2
  444904:	b.cs	445bc8 <feof@plt+0x42328>  // b.hs, b.nlast
  444908:	mov	x21, x27
  44490c:	ldr	w3, [x21, #36]!
  444910:	sub	w8, w3, #0x1
  444914:	cmp	w8, #0x1b
  444918:	b.ls	444938 <feof@plt+0x41098>  // b.plast
  44491c:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  444920:	mov	w1, #0x4                   	// #4
  444924:	mov	x0, x19
  444928:	add	x2, x2, #0xcde
  44492c:	bl	4424f8 <feof@plt+0x3ec58>
  444930:	mov	x27, xzr
  444934:	b	444940 <feof@plt+0x410a0>
  444938:	cmp	w20, #0x14
  44493c:	b.ne	444978 <feof@plt+0x410d8>  // b.any
  444940:	ldr	w2, [sp, #84]
  444944:	mov	x21, #0xffffffffffffffff    	// #-1
  444948:	cbz	x27, 445ad8 <feof@plt+0x42238>
  44494c:	cmp	w20, #0x16
  444950:	b.eq	445b1c <feof@plt+0x4227c>  // b.none
  444954:	sub	w8, w20, #0xf
  444958:	cmp	w8, #0x6
  44495c:	b.hi	445a5c <feof@plt+0x421bc>  // b.pmore
  444960:	adrp	x11, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  444964:	add	x11, x11, #0x4fa
  444968:	adr	x9, 44439c <feof@plt+0x40afc>
  44496c:	ldrh	w10, [x11, x8, lsl #1]
  444970:	add	x9, x9, x10, lsl #2
  444974:	br	x9
  444978:	adrp	x10, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  44497c:	lsl	x8, x20, #1
  444980:	add	x10, x10, #0x508
  444984:	lsl	x9, x3, #1
  444988:	ldrb	w8, [x10, x8]
  44498c:	ldrb	w9, [x10, x9]
  444990:	mov	w10, #0xbffc                	// #49148
  444994:	movk	w10, #0x78d, lsl #16
  444998:	lsr	x10, x10, x20
  44499c:	ldr	w2, [sp, #84]
  4449a0:	and	w10, w10, #0x1
  4449a4:	sub	w28, w8, w10
  4449a8:	cmp	w28, w9
  4449ac:	b.cs	445954 <feof@plt+0x420b4>  // b.hs, b.nlast
  4449b0:	str	w28, [sp, #52]
  4449b4:	str	w25, [sp, #32]
  4449b8:	b	4449ec <feof@plt+0x4114c>
  4449bc:	ldr	w3, [x27, #-4]!
  4449c0:	adrp	x9, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4449c4:	add	x9, x9, #0x508
  4449c8:	ldr	w2, [sp, #84]
  4449cc:	lsl	x8, x3, #1
  4449d0:	ldrb	w8, [x9, x8]
  4449d4:	mov	x21, x27
  4449d8:	mov	x27, x23
  4449dc:	adrp	x23, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4449e0:	cmp	w28, w8
  4449e4:	add	x23, x23, #0x492
  4449e8:	b.cs	445954 <feof@plt+0x420b4>  // b.hs, b.nlast
  4449ec:	ldrb	w8, [x19, #1141]
  4449f0:	cbz	w8, 444ad4 <feof@plt+0x41234>
  4449f4:	mov	w8, #0xffc                 	// #4092
  4449f8:	movk	w8, #0x604, lsl #16
  4449fc:	lsr	x8, x8, x3
  444a00:	tbz	w8, #0, 444ad4 <feof@plt+0x41234>
  444a04:	ldrb	w9, [x27, #24]
  444a08:	ldurb	w8, [x27, #-16]
  444a0c:	cmp	w9, w8
  444a10:	b.eq	444ad4 <feof@plt+0x41234>  // b.none
  444a14:	ldr	x8, [x19, #1208]
  444a18:	cmp	x8, #0x40
  444a1c:	cbz	w9, 444a78 <feof@plt+0x411d8>
  444a20:	mov	x9, #0xffffffffffffffe8    	// #-24
  444a24:	mov	x10, #0xffffffffffffffe0    	// #-32
  444a28:	csel	x9, x10, x9, hi  // hi = pmore
  444a2c:	ldr	x9, [x27, x9]
  444a30:	mov	x10, #0xffffffffffffffbf    	// #-65
  444a34:	csinv	x10, x10, xzr, hi  // hi = pmore
  444a38:	add	x8, x8, x10
  444a3c:	lsr	x8, x9, x8
  444a40:	tbz	w8, #0, 444ad4 <feof@plt+0x41234>
  444a44:	ldur	w8, [x27, #-8]
  444a48:	ldr	x1, [x27]
  444a4c:	mov	x0, x19
  444a50:	str	w8, [sp, #88]
  444a54:	bl	44d198 <feof@plt+0x498f8>
  444a58:	ldr	w2, [sp, #88]
  444a5c:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  444a60:	mov	x5, x0
  444a64:	mov	x0, x19
  444a68:	mov	w1, wzr
  444a6c:	mov	w3, wzr
  444a70:	add	x4, x4, #0xd71
  444a74:	b	444acc <feof@plt+0x4122c>
  444a78:	mov	w9, #0x10                  	// #16
  444a7c:	mov	w10, #0x8                   	// #8
  444a80:	csel	x9, x10, x9, hi  // hi = pmore
  444a84:	ldr	x9, [x27, x9]
  444a88:	mov	x10, #0xffffffffffffffbf    	// #-65
  444a8c:	csinv	x10, x10, xzr, hi  // hi = pmore
  444a90:	add	x8, x8, x10
  444a94:	lsr	x8, x9, x8
  444a98:	tbz	w8, #0, 444ad4 <feof@plt+0x41234>
  444a9c:	ldr	w8, [x27, #32]
  444aa0:	ldr	x1, [x27]
  444aa4:	mov	x0, x19
  444aa8:	str	w8, [sp, #88]
  444aac:	bl	44d198 <feof@plt+0x498f8>
  444ab0:	ldr	w2, [sp, #88]
  444ab4:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  444ab8:	mov	x5, x0
  444abc:	mov	x0, x19
  444ac0:	mov	w1, wzr
  444ac4:	mov	w3, wzr
  444ac8:	add	x4, x4, #0xda5
  444acc:	bl	4429b8 <feof@plt+0x3f118>
  444ad0:	ldr	w2, [sp, #84]
  444ad4:	ldr	w8, [x21]
  444ad8:	sub	w9, w8, #0x1
  444adc:	cmp	w9, #0x1b
  444ae0:	b.hi	4459a4 <feof@plt+0x42104>  // b.pmore
  444ae4:	adrp	x12, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  444ae8:	add	x12, x12, #0x4c2
  444aec:	adr	x10, 444afc <feof@plt+0x4125c>
  444af0:	ldrh	w11, [x12, x9, lsl #1]
  444af4:	add	x10, x10, x11, lsl #2
  444af8:	br	x10
  444afc:	ldur	x8, [x27, #-16]
  444b00:	ldur	q0, [x27, #-32]
  444b04:	sub	x1, x29, #0x80
  444b08:	sub	x2, x29, #0xa0
  444b0c:	stur	x8, [x29, #-112]
  444b10:	stur	q0, [x29, #-128]
  444b14:	ldr	x8, [x27, #24]
  444b18:	ldur	q0, [x27, #8]
  444b1c:	mov	x0, x19
  444b20:	stur	x8, [x29, #-144]
  444b24:	stur	q0, [x29, #-160]
  444b28:	ldr	w3, [x21]
  444b2c:	sub	x8, x29, #0x28
  444b30:	bl	445ebc <feof@plt+0x4261c>
  444b34:	ldr	x8, [x22, #64]
  444b38:	ldr	q0, [x22, #48]
  444b3c:	stur	x8, [x27, #-16]
  444b40:	stur	q0, [x27, #-32]
  444b44:	b	44590c <feof@plt+0x4206c>
  444b48:	ldrh	w9, [x27, #30]
  444b4c:	ldur	w21, [x27, #26]
  444b50:	ldp	x23, x28, [x27, #8]
  444b54:	str	x27, [sp, #56]
  444b58:	ldrb	w27, [x27, #24]
  444b5c:	cmp	w8, #0xe
  444b60:	bfi	x21, x9, #32, #32
  444b64:	b.eq	444da4 <feof@plt+0x41504>  // b.none
  444b68:	cmp	w8, #0x1c
  444b6c:	b.eq	444dd8 <feof@plt+0x41538>  // b.none
  444b70:	cmp	w8, #0x1b
  444b74:	b.ne	444e10 <feof@plt+0x41570>  // b.any
  444b78:	ldrb	w8, [x19, #1138]
  444b7c:	cbz	w8, 4450d4 <feof@plt+0x41834>
  444b80:	ldr	w8, [x19, #28]
  444b84:	cbz	w8, 4450fc <feof@plt+0x4185c>
  444b88:	mov	w8, wzr
  444b8c:	b	4450d4 <feof@plt+0x41834>
  444b90:	mov	x8, x27
  444b94:	ldr	w10, [x8, #-14]!
  444b98:	ldrh	w12, [x8, #4]
  444b9c:	ldur	x9, [x8, #-18]
  444ba0:	ldur	x11, [x8, #-10]
  444ba4:	ldurb	w14, [x8, #-2]
  444ba8:	str	w10, [sp, #168]
  444bac:	strh	w12, [sp, #172]
  444bb0:	ldrb	w15, [x8, #38]
  444bb4:	ldur	x10, [x8, #22]
  444bb8:	ldur	x12, [x8, #30]
  444bbc:	ldr	w13, [x21]
  444bc0:	orr	w14, w15, w14
  444bc4:	cbnz	w14, 444ed4 <feof@plt+0x41634>
  444bc8:	ldr	x14, [x19, #1208]
  444bcc:	subs	x15, x14, #0x41
  444bd0:	b.cc	444ea8 <feof@plt+0x41608>  // b.lo, b.ul, b.last
  444bd4:	mov	w14, #0x1                   	// #1
  444bd8:	lsl	x15, x14, x15
  444bdc:	and	x14, x15, x9
  444be0:	and	x15, x15, x10
  444be4:	b	444ebc <feof@plt+0x4161c>
  444be8:	mov	x8, x27
  444bec:	ldr	w9, [x8, #-14]!
  444bf0:	ldrh	w12, [x8, #4]
  444bf4:	ldurb	w13, [x8, #-2]
  444bf8:	ldur	x10, [x8, #-18]
  444bfc:	ldur	x11, [x8, #-10]
  444c00:	str	w9, [sp, #152]
  444c04:	strh	w12, [sp, #156]
  444c08:	ldrb	w9, [x8, #38]
  444c0c:	ldr	w14, [x21]
  444c10:	cmp	w13, #0x0
  444c14:	ldur	x12, [x8, #22]
  444c18:	ldur	x13, [x8, #30]
  444c1c:	csinc	w9, w9, wzr, eq  // eq = none
  444c20:	cmp	w14, #0xa
  444c24:	b.eq	444e2c <feof@plt+0x4158c>  // b.none
  444c28:	cmp	w14, #0x9
  444c2c:	b.ne	444e38 <feof@plt+0x41598>  // b.any
  444c30:	and	x11, x13, x11
  444c34:	and	x10, x12, x10
  444c38:	b	444e40 <feof@plt+0x415a0>
  444c3c:	mov	x23, x27
  444c40:	ldr	w8, [x23, #-14]!
  444c44:	ldrh	w9, [x23, #4]
  444c48:	ldur	x4, [x23, #-18]
  444c4c:	ldur	x16, [x23, #-10]
  444c50:	ldurb	w3, [x23, #-2]
  444c54:	ldurb	w17, [x23, #-1]
  444c58:	str	w8, [sp, #136]
  444c5c:	strh	w9, [sp, #140]
  444c60:	ldur	x10, [x23, #22]
  444c64:	ldur	x11, [x23, #30]
  444c68:	ldrh	w9, [x23, #44]
  444c6c:	ldr	w8, [x23, #40]
  444c70:	ldr	w1, [x21]
  444c74:	ldur	w2, [x23, #46]
  444c78:	cbz	w3, 444f50 <feof@plt+0x416b0>
  444c7c:	ldr	x0, [x19, #1208]
  444c80:	b	444f60 <feof@plt+0x416c0>
  444c84:	ldurh	w8, [x27, #-10]
  444c88:	ldur	w9, [x27, #-14]
  444c8c:	ldp	x10, x11, [x27, #-32]
  444c90:	strh	w8, [sp, #164]
  444c94:	str	w9, [sp, #160]
  444c98:	ldp	x12, x13, [x27, #8]
  444c9c:	ldr	w14, [x21]
  444ca0:	sturh	w8, [x29, #-36]
  444ca4:	stur	w9, [x29, #-40]
  444ca8:	cmp	x11, x13
  444cac:	cset	w8, eq  // eq = none
  444cb0:	cmp	x10, x12
  444cb4:	cset	w9, eq  // eq = none
  444cb8:	cmp	w14, #0x18
  444cbc:	and	w8, w9, w8
  444cc0:	cset	w9, eq  // eq = none
  444cc4:	eor	w8, w9, w8
  444cc8:	sturh	wzr, [x27, #-16]
  444ccc:	stp	xzr, x8, [x27, #-32]
  444cd0:	ldurh	w8, [x29, #-36]
  444cd4:	ldur	w9, [x29, #-40]
  444cd8:	sturh	w8, [x27, #-10]
  444cdc:	stur	w9, [x27, #-14]
  444ce0:	b	44590c <feof@plt+0x4206c>
  444ce4:	ldp	x12, x14, [x27, #-32]
  444ce8:	ldurb	w8, [x27, #-16]
  444cec:	ldp	x11, x13, [x27, #8]
  444cf0:	cbz	w8, 444fec <feof@plt+0x4174c>
  444cf4:	ldr	x8, [x19, #1208]
  444cf8:	mov	w9, wzr
  444cfc:	mov	w10, #0x1                   	// #1
  444d00:	mov	x6, #0xffffffffffffffff    	// #-1
  444d04:	b	4456f8 <feof@plt+0x41e58>
  444d08:	ldp	x9, x8, [x27, #-32]
  444d0c:	orr	x9, x9, x8
  444d10:	sub	x8, x27, #0x28
  444d14:	cbnz	x9, 444e60 <feof@plt+0x415c0>
  444d18:	ldr	w10, [x19, #28]
  444d1c:	sub	w10, w10, #0x1
  444d20:	str	w10, [x19, #28]
  444d24:	b	444e70 <feof@plt+0x415d0>
  444d28:	ldp	x9, x8, [x27, #-32]
  444d2c:	orr	x9, x9, x8
  444d30:	sub	x8, x27, #0x28
  444d34:	cbz	x9, 444e60 <feof@plt+0x415c0>
  444d38:	ldr	w9, [x19, #28]
  444d3c:	sub	w9, w9, #0x1
  444d40:	str	w9, [x19, #28]
  444d44:	mov	w9, #0x1                   	// #1
  444d48:	b	444e70 <feof@plt+0x415d0>
  444d4c:	mov	x8, x27
  444d50:	ldr	x9, [x8, #-72]!
  444d54:	ldr	x10, [x8, #8]
  444d58:	orr	x9, x9, x10
  444d5c:	cbz	x9, 444d70 <feof@plt+0x414d0>
  444d60:	ldr	w9, [x19, #28]
  444d64:	sub	w9, w9, #0x1
  444d68:	str	w9, [x19, #28]
  444d6c:	mov	x9, #0xffffffffffffffff    	// #-1
  444d70:	mov	w10, #0x28                  	// #40
  444d74:	madd	x9, x9, x10, x27
  444d78:	ldr	x10, [x9, #24]
  444d7c:	ldur	q0, [x9, #8]
  444d80:	str	x10, [x8, #16]
  444d84:	str	q0, [x8], #-8
  444d88:	ldr	w9, [x9, #32]
  444d8c:	ldurb	w10, [x27, #-16]
  444d90:	stur	w9, [x27, #-48]
  444d94:	cbz	w10, 445008 <feof@plt+0x41768>
  444d98:	mov	w9, #0x1                   	// #1
  444d9c:	sturb	w9, [x27, #-56]
  444da0:	b	444e80 <feof@plt+0x415e0>
  444da4:	ldr	x9, [x19, #1208]
  444da8:	mvn	x28, x28
  444dac:	cmp	x9, #0x41
  444db0:	b.cc	444f98 <feof@plt+0x416f8>  // b.lo, b.ul, b.last
  444db4:	sub	x9, x9, #0x40
  444db8:	cmp	x9, #0x3f
  444dbc:	mvn	x23, x23
  444dc0:	mov	w8, wzr
  444dc4:	b.hi	4450d4 <feof@plt+0x41834>  // b.pmore
  444dc8:	mov	x10, #0xffffffffffffffff    	// #-1
  444dcc:	lsl	x9, x10, x9
  444dd0:	bic	x23, x23, x9
  444dd4:	b	4450d4 <feof@plt+0x41834>
  444dd8:	ldr	x8, [x19, #1208]
  444ddc:	neg	x9, x23
  444de0:	cmp	x28, #0x0
  444de4:	csinv	x10, x9, x23, eq  // eq = none
  444de8:	cmp	x8, #0x41
  444dec:	neg	x9, x28
  444df0:	b.cc	444fac <feof@plt+0x4170c>  // b.lo, b.ul, b.last
  444df4:	sub	x8, x8, #0x40
  444df8:	cmp	x8, #0x3f
  444dfc:	b.hi	44509c <feof@plt+0x417fc>  // b.pmore
  444e00:	mov	x11, #0xffffffffffffffff    	// #-1
  444e04:	lsl	x8, x11, x8
  444e08:	bic	x10, x10, x8
  444e0c:	b	44509c <feof@plt+0x417fc>
  444e10:	orr	x9, x28, x23
  444e14:	cmp	x9, #0x0
  444e18:	mov	w27, wzr
  444e1c:	mov	w8, wzr
  444e20:	cset	w28, eq  // eq = none
  444e24:	mov	x23, xzr
  444e28:	b	4450d4 <feof@plt+0x41834>
  444e2c:	orr	x11, x13, x11
  444e30:	orr	x10, x12, x10
  444e34:	b	444e40 <feof@plt+0x415a0>
  444e38:	eor	x11, x13, x11
  444e3c:	eor	x10, x12, x10
  444e40:	ldr	w12, [sp, #152]
  444e44:	ldrh	w13, [sp, #156]
  444e48:	stur	w12, [x29, #-40]
  444e4c:	sturh	w13, [x29, #-36]
  444e50:	stp	x10, x11, [x27, #-32]
  444e54:	sturb	w9, [x27, #-16]
  444e58:	sturb	wzr, [x27, #-15]
  444e5c:	b	444fd8 <feof@plt+0x41738>
  444e60:	ldp	x10, x9, [x27, #8]
  444e64:	orr	x9, x10, x9
  444e68:	cmp	x9, #0x0
  444e6c:	cset	w9, ne  // ne = any
  444e70:	ldr	w10, [x27, #32]
  444e74:	stp	xzr, x9, [x27, #-32]
  444e78:	sturh	wzr, [x27, #-16]
  444e7c:	stur	w10, [x27, #-8]
  444e80:	mov	x21, x8
  444e84:	ldr	w3, [x21, #36]!
  444e88:	adrp	x9, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  444e8c:	mov	x27, x8
  444e90:	add	x9, x9, #0x508
  444e94:	lsl	x8, x3, #1
  444e98:	ldrb	w8, [x9, x8]
  444e9c:	cmp	w28, w8
  444ea0:	b.cc	4449ec <feof@plt+0x4114c>  // b.lo, b.ul, b.last
  444ea4:	b	445954 <feof@plt+0x420b4>
  444ea8:	sub	x14, x14, #0x1
  444eac:	mov	w15, #0x1                   	// #1
  444eb0:	lsl	x15, x15, x14
  444eb4:	and	x14, x15, x11
  444eb8:	and	x15, x15, x12
  444ebc:	cmp	x14, #0x0
  444ec0:	cset	w14, eq  // eq = none
  444ec4:	cmp	x15, #0x0
  444ec8:	cset	w15, eq  // eq = none
  444ecc:	eor	w15, w14, w15
  444ed0:	tbnz	w15, #0, 444ee0 <feof@plt+0x41640>
  444ed4:	cmp	x9, x10
  444ed8:	b.ls	444f00 <feof@plt+0x41660>  // b.plast
  444edc:	mov	w14, #0x1                   	// #1
  444ee0:	cmp	w13, #0x2
  444ee4:	b.eq	444f18 <feof@plt+0x41678>  // b.none
  444ee8:	cmp	w13, #0x19
  444eec:	b.eq	444fc0 <feof@plt+0x41720>  // b.none
  444ef0:	cmp	w13, #0x3
  444ef4:	b.ne	444f34 <feof@plt+0x41694>  // b.any
  444ef8:	eor	w14, w14, #0x1
  444efc:	b	444fc0 <feof@plt+0x41720>
  444f00:	cset	w14, eq  // eq = none
  444f04:	cmp	x11, x12
  444f08:	cset	w15, cs  // cs = hs, nlast
  444f0c:	and	w14, w14, w15
  444f10:	cmp	w13, #0x2
  444f14:	b.ne	444ee8 <feof@plt+0x41648>  // b.any
  444f18:	cbz	w14, 444fc0 <feof@plt+0x41720>
  444f1c:	cmp	x11, x12
  444f20:	cset	w11, ne  // ne = any
  444f24:	cmp	x9, x10
  444f28:	cset	w9, ne  // ne = any
  444f2c:	orr	w14, w9, w11
  444f30:	b	444fc0 <feof@plt+0x41720>
  444f34:	cbz	w14, 444fbc <feof@plt+0x4171c>
  444f38:	cmp	x11, x12
  444f3c:	cset	w11, eq  // eq = none
  444f40:	cmp	x9, x10
  444f44:	cset	w9, eq  // eq = none
  444f48:	and	w14, w9, w11
  444f4c:	b	444fc0 <feof@plt+0x41720>
  444f50:	ldrb	w12, [x23, #38]
  444f54:	ldr	x0, [x19, #1208]
  444f58:	mov	x18, #0xffffffffffffffff    	// #-1
  444f5c:	cbz	w12, 44501c <feof@plt+0x4177c>
  444f60:	str	wzr, [sp, #8]
  444f64:	mov	w15, wzr
  444f68:	mov	w14, #0x1                   	// #1
  444f6c:	cbz	x10, 44526c <feof@plt+0x419cc>
  444f70:	sub	x12, x0, #0x41
  444f74:	mov	w13, #0x1                   	// #1
  444f78:	lsl	x13, x13, x12
  444f7c:	mov	x12, x0
  444f80:	sub	x12, x12, #0x1
  444f84:	tst	x13, x10
  444f88:	lsr	x13, x13, #1
  444f8c:	b.eq	444f80 <feof@plt+0x416e0>  // b.none
  444f90:	str	x27, [sp, #56]
  444f94:	b	4452a8 <feof@plt+0x41a08>
  444f98:	cmp	x9, #0x40
  444f9c:	b.ne	445074 <feof@plt+0x417d4>  // b.any
  444fa0:	mov	x23, xzr
  444fa4:	mov	w8, wzr
  444fa8:	b	4450d4 <feof@plt+0x41834>
  444fac:	cmp	x8, #0x40
  444fb0:	b.ne	44508c <feof@plt+0x417ec>  // b.any
  444fb4:	mov	x10, xzr
  444fb8:	b	44509c <feof@plt+0x417fc>
  444fbc:	mov	w14, #0x1                   	// #1
  444fc0:	ldr	w9, [sp, #168]
  444fc4:	ldrh	w10, [sp, #172]
  444fc8:	stur	w9, [x29, #-40]
  444fcc:	sturh	w10, [x29, #-36]
  444fd0:	stp	xzr, x14, [x27, #-32]
  444fd4:	sturh	wzr, [x27, #-16]
  444fd8:	ldurh	w9, [x29, #-36]
  444fdc:	ldur	w10, [x29, #-40]
  444fe0:	strh	w9, [x8, #4]
  444fe4:	str	w10, [x8]
  444fe8:	b	44590c <feof@plt+0x4206c>
  444fec:	ldrb	w9, [x27, #24]
  444ff0:	ldr	x8, [x19, #1208]
  444ff4:	mov	x6, #0xffffffffffffffff    	// #-1
  444ff8:	cbz	w9, 445118 <feof@plt+0x41878>
  444ffc:	mov	w9, wzr
  445000:	mov	w10, #0x1                   	// #1
  445004:	b	4456f8 <feof@plt+0x41e58>
  445008:	ldrb	w9, [x27, #24]
  44500c:	cmp	w9, #0x0
  445010:	cset	w9, ne  // ne = any
  445014:	sturb	w9, [x27, #-56]
  445018:	b	444e80 <feof@plt+0x415e0>
  44501c:	subs	x14, x0, #0x40
  445020:	mov	x12, #0xffffffffffffffbf    	// #-65
  445024:	csinv	x12, x12, xzr, hi  // hi = pmore
  445028:	csel	x13, x4, x16, hi  // hi = pmore
  44502c:	add	x12, x0, x12
  445030:	lsr	x12, x13, x12
  445034:	tbz	w12, #0, 445164 <feof@plt+0x418c4>
  445038:	ldr	w12, [sp, #136]
  44503c:	ldrh	w15, [sp, #140]
  445040:	neg	x13, x4
  445044:	cmp	x16, #0x0
  445048:	csinv	x13, x13, x4, eq  // eq = none
  44504c:	cmp	x0, #0x41
  445050:	str	w12, [sp, #128]
  445054:	neg	x12, x16
  445058:	strh	w15, [sp, #132]
  44505c:	b.cc	44516c <feof@plt+0x418cc>  // b.lo, b.ul, b.last
  445060:	cmp	x14, #0x3f
  445064:	b.hi	4451a8 <feof@plt+0x41908>  // b.pmore
  445068:	lsl	x14, x18, x14
  44506c:	bic	x13, x13, x14
  445070:	b	4451a8 <feof@plt+0x41908>
  445074:	mov	x10, #0xffffffffffffffff    	// #-1
  445078:	lsl	x9, x10, x9
  44507c:	mov	x23, xzr
  445080:	mov	w8, wzr
  445084:	bic	x28, x28, x9
  445088:	b	4450d4 <feof@plt+0x41834>
  44508c:	mov	x11, #0xffffffffffffffff    	// #-1
  445090:	lsl	x8, x11, x8
  445094:	mov	x10, xzr
  445098:	bic	x9, x9, x8
  44509c:	cmp	w27, #0x0
  4450a0:	cset	w11, eq  // eq = none
  4450a4:	cmp	x9, x28
  4450a8:	orr	x8, x10, x9
  4450ac:	cset	w12, eq  // eq = none
  4450b0:	cmp	x10, x23
  4450b4:	and	w11, w11, w12
  4450b8:	cset	w12, eq  // eq = none
  4450bc:	cmp	x8, #0x0
  4450c0:	and	w8, w12, w11
  4450c4:	cset	w11, ne  // ne = any
  4450c8:	and	w8, w11, w8
  4450cc:	mov	x23, x10
  4450d0:	mov	x28, x9
  4450d4:	ldr	x9, [sp, #56]
  4450d8:	stp	x23, x28, [x9, #-32]
  4450dc:	ldr	w28, [sp, #52]
  4450e0:	sturb	w8, [x9, #-15]
  4450e4:	lsr	x8, x21, #32
  4450e8:	sturb	w27, [x9, #-16]
  4450ec:	mov	x27, x9
  4450f0:	stur	w21, [x9, #-14]
  4450f4:	sturh	w8, [x9, #-10]
  4450f8:	b	44590c <feof@plt+0x4206c>
  4450fc:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445100:	mov	w1, #0x6                   	// #6
  445104:	mov	x0, x19
  445108:	add	x2, x2, #0xdda
  44510c:	bl	442628 <feof@plt+0x3ed88>
  445110:	mov	w8, wzr
  445114:	b	4450d4 <feof@plt+0x41834>
  445118:	subs	x15, x8, #0x40
  44511c:	mov	x9, #0xffffffffffffffbf    	// #-65
  445120:	csinv	x9, x9, xzr, hi  // hi = pmore
  445124:	csel	x10, x12, x14, hi  // hi = pmore
  445128:	add	x9, x8, x9
  44512c:	lsr	x9, x10, x9
  445130:	tbz	w9, #0, 44517c <feof@plt+0x418dc>
  445134:	neg	x9, x12
  445138:	cmp	x14, #0x0
  44513c:	csinv	x12, x9, x12, eq  // eq = none
  445140:	cmp	x8, #0x41
  445144:	neg	x14, x14
  445148:	b.cc	44518c <feof@plt+0x418ec>  // b.lo, b.ul, b.last
  44514c:	cmp	x15, #0x3f
  445150:	b.hi	445680 <feof@plt+0x41de0>  // b.pmore
  445154:	lsl	x10, x6, x15
  445158:	mov	w9, #0x1                   	// #1
  44515c:	bic	x12, x12, x10
  445160:	b	445684 <feof@plt+0x41de4>
  445164:	mov	w15, wzr
  445168:	b	4451e8 <feof@plt+0x41948>
  44516c:	cmp	x0, #0x40
  445170:	b.ne	44519c <feof@plt+0x418fc>  // b.any
  445174:	mov	x13, xzr
  445178:	b	4451a8 <feof@plt+0x41908>
  44517c:	cmp	x8, #0x40
  445180:	mov	w9, wzr
  445184:	b.hi	445684 <feof@plt+0x41de4>  // b.pmore
  445188:	b	4456a0 <feof@plt+0x41e00>
  44518c:	cmp	x8, #0x40
  445190:	b.ne	445690 <feof@plt+0x41df0>  // b.any
  445194:	mov	x12, xzr
  445198:	b	44569c <feof@plt+0x41dfc>
  44519c:	lsl	x14, x18, x0
  4451a0:	mov	x13, xzr
  4451a4:	bic	x12, x12, x14
  4451a8:	cmp	x12, x16
  4451ac:	orr	x14, x13, x12
  4451b0:	ldr	w15, [sp, #128]
  4451b4:	cset	w16, eq  // eq = none
  4451b8:	cmp	x13, x4
  4451bc:	cset	w17, eq  // eq = none
  4451c0:	cmp	x14, #0x0
  4451c4:	ldrh	w14, [sp, #132]
  4451c8:	and	w16, w16, w17
  4451cc:	cset	w17, ne  // ne = any
  4451d0:	and	w17, w17, w16
  4451d4:	str	w15, [sp, #136]
  4451d8:	mov	w15, #0x1                   	// #1
  4451dc:	mov	x16, x12
  4451e0:	mov	x4, x13
  4451e4:	strh	w14, [sp, #140]
  4451e8:	subs	x12, x0, #0x40
  4451ec:	mov	x13, #0xffffffffffffffbf    	// #-65
  4451f0:	csinv	x13, x13, xzr, hi  // hi = pmore
  4451f4:	csel	x14, x10, x11, hi  // hi = pmore
  4451f8:	add	x13, x0, x13
  4451fc:	lsr	x13, x14, x13
  445200:	tbz	w13, #0, 44523c <feof@plt+0x4199c>
  445204:	neg	x13, x10
  445208:	cmp	x11, #0x0
  44520c:	eor	w14, w15, #0x1
  445210:	csinv	x10, x13, x10, eq  // eq = none
  445214:	cmp	x0, #0x41
  445218:	neg	x11, x11
  44521c:	str	w14, [sp, #8]
  445220:	b.cc	445248 <feof@plt+0x419a8>  // b.lo, b.ul, b.last
  445224:	cmp	x12, #0x3f
  445228:	b.hi	445258 <feof@plt+0x419b8>  // b.pmore
  44522c:	lsl	x12, x18, x12
  445230:	mov	w14, wzr
  445234:	bic	x10, x10, x12
  445238:	b	444f6c <feof@plt+0x416cc>
  44523c:	mov	w14, wzr
  445240:	str	w15, [sp, #8]
  445244:	b	444f6c <feof@plt+0x416cc>
  445248:	cmp	x0, #0x40
  44524c:	b.ne	445260 <feof@plt+0x419c0>  // b.any
  445250:	mov	w14, wzr
  445254:	b	44526c <feof@plt+0x419cc>
  445258:	mov	w14, wzr
  44525c:	b	444f6c <feof@plt+0x416cc>
  445260:	lsl	x10, x18, x0
  445264:	mov	w14, wzr
  445268:	bic	x11, x11, x10
  44526c:	cbz	x11, 445344 <feof@plt+0x41aa4>
  445270:	cmp	x0, #0x40
  445274:	mov	x10, #0xffffffffffffffbf    	// #-65
  445278:	csinv	x10, x10, xzr, hi  // hi = pmore
  44527c:	add	x12, x10, x0
  445280:	mov	w10, #0x1                   	// #1
  445284:	lsl	x10, x10, x12
  445288:	tst	x10, x11
  44528c:	str	x27, [sp, #56]
  445290:	b.ne	4452a4 <feof@plt+0x41a04>  // b.any
  445294:	lsr	x10, x10, #1
  445298:	tst	x10, x11
  44529c:	sub	x12, x12, #0x1
  4452a0:	b.eq	445294 <feof@plt+0x419f4>  // b.none
  4452a4:	mov	x10, xzr
  4452a8:	bfi	x8, x9, #32, #32
  4452ac:	mvn	x9, x12
  4452b0:	adds	x27, x0, x9
  4452b4:	mov	w9, #0x1                   	// #1
  4452b8:	str	w15, [sp, #12]
  4452bc:	str	w1, [sp, #28]
  4452c0:	str	w14, [sp, #36]
  4452c4:	str	x23, [sp, #16]
  4452c8:	str	x0, [sp, #40]
  4452cc:	str	x9, [sp, #88]
  4452d0:	b.cc	445328 <feof@plt+0x41a88>  // b.lo, b.ul, b.last
  4452d4:	sub	x9, x27, #0x40
  4452d8:	cmp	x27, #0x3f
  4452dc:	csel	x21, xzr, x11, hi  // hi = pmore
  4452e0:	csel	x9, x9, x27, hi  // hi = pmore
  4452e4:	csel	x23, x11, x10, hi  // hi = pmore
  4452e8:	cbz	x9, 445300 <feof@plt+0x41a60>
  4452ec:	neg	x11, x9
  4452f0:	lsl	x10, x23, x9
  4452f4:	lsr	x11, x21, x11
  4452f8:	orr	x23, x11, x10
  4452fc:	lsl	x21, x21, x9
  445300:	ldr	x10, [sp, #40]
  445304:	cmp	x10, #0x41
  445308:	b.cc	445334 <feof@plt+0x41a94>  // b.lo, b.ul, b.last
  44530c:	sub	x9, x10, #0x40
  445310:	cmp	x9, #0x3f
  445314:	b.hi	445368 <feof@plt+0x41ac8>  // b.pmore
  445318:	mov	x10, #0xffffffffffffffff    	// #-1
  44531c:	lsl	x9, x10, x9
  445320:	bic	x23, x23, x9
  445324:	b	445368 <feof@plt+0x41ac8>
  445328:	mov	x21, xzr
  44532c:	mov	x23, xzr
  445330:	b	445368 <feof@plt+0x41ac8>
  445334:	cmp	x10, #0x40
  445338:	b.ne	445358 <feof@plt+0x41ab8>  // b.any
  44533c:	mov	x23, xzr
  445340:	b	445368 <feof@plt+0x41ac8>
  445344:	ldr	w8, [x19, #28]
  445348:	cbz	w8, 44553c <feof@plt+0x41c9c>
  44534c:	add	x21, sp, #0x88
  445350:	mov	w14, w3
  445354:	b	445648 <feof@plt+0x41da8>
  445358:	mov	x9, #0xffffffffffffffff    	// #-1
  44535c:	lsl	x9, x9, x10
  445360:	mov	x23, xzr
  445364:	bic	x21, x21, x9
  445368:	ldr	x9, [sp, #88]
  44536c:	mov	x28, xzr
  445370:	mov	x25, xzr
  445374:	bfi	x9, x8, #16, #48
  445378:	ldr	x8, [sp, #40]
  44537c:	str	x9, [sp, #88]
  445380:	sub	x8, x8, #0x1
  445384:	str	x8, [sp]
  445388:	mov	w8, #0x1                   	// #1
  44538c:	b	4453a0 <feof@plt+0x41b00>
  445390:	orr	x28, x9, x28
  445394:	sub	x27, x27, #0x1
  445398:	extr	x21, x23, x21, #1
  44539c:	lsr	x23, x23, #1
  4453a0:	cmp	x4, x23
  4453a4:	b.hi	4453b8 <feof@plt+0x41b18>  // b.pmore
  4453a8:	cmp	x16, x21
  4453ac:	b.cc	445430 <feof@plt+0x41b90>  // b.lo, b.ul, b.last
  4453b0:	cmp	x4, x23
  4453b4:	b.ne	445430 <feof@plt+0x41b90>  // b.any
  4453b8:	stp	x4, x16, [x22, #24]
  4453bc:	ldr	w9, [sp, #136]
  4453c0:	ldrh	w10, [sp, #140]
  4453c4:	sturb	w8, [x29, #-48]
  4453c8:	ldr	x8, [sp, #104]
  4453cc:	ldr	x11, [sp, #88]
  4453d0:	sturb	w17, [x29, #-47]
  4453d4:	sub	x1, x29, #0x40
  4453d8:	strh	w10, [x8, #4]
  4453dc:	str	w9, [x8]
  4453e0:	sub	x8, x29, #0x28
  4453e4:	sub	x2, x29, #0x58
  4453e8:	mov	w3, #0x5                   	// #5
  4453ec:	mov	x0, x19
  4453f0:	stp	x21, x11, [x22, #8]
  4453f4:	str	x23, [x22]
  4453f8:	bl	445ebc <feof@plt+0x4261c>
  4453fc:	ldr	x10, [sp, #96]
  445400:	ldp	x4, x16, [x22, #48]
  445404:	ldurb	w8, [x29, #-24]
  445408:	ldurb	w17, [x29, #-23]
  44540c:	ldr	w9, [x10]
  445410:	ldrh	w10, [x10, #4]
  445414:	cmp	x27, #0x40
  445418:	str	w9, [sp, #136]
  44541c:	mov	w9, #0x1                   	// #1
  445420:	lsl	x9, x9, x27
  445424:	strh	w10, [sp, #140]
  445428:	b.cs	445390 <feof@plt+0x41af0>  // b.hs, b.nlast
  44542c:	orr	x25, x9, x25
  445430:	cbnz	x27, 445394 <feof@plt+0x41af4>
  445434:	ldr	w8, [sp, #28]
  445438:	cmp	w8, #0x7
  44543c:	b.ne	445460 <feof@plt+0x41bc0>  // b.any
  445440:	ldr	x27, [sp, #56]
  445444:	ldr	x23, [sp, #16]
  445448:	ldr	x13, [sp, #40]
  44544c:	ldr	w14, [sp, #36]
  445450:	tbz	w14, #0, 4454bc <feof@plt+0x41c1c>
  445454:	mov	w17, wzr
  445458:	sub	x21, x29, #0x60
  44545c:	b	445640 <feof@plt+0x41da0>
  445460:	ldr	x27, [sp, #56]
  445464:	ldr	x23, [sp, #16]
  445468:	ldr	x12, [sp, #40]
  44546c:	ldr	w8, [sp, #12]
  445470:	cbz	w8, 44551c <feof@plt+0x41c7c>
  445474:	ldr	w8, [sp, #136]
  445478:	ldrh	w10, [sp, #140]
  44547c:	ldr	w14, [sp, #36]
  445480:	neg	x9, x4
  445484:	cmp	x16, #0x0
  445488:	csinv	x9, x9, x4, eq  // eq = none
  44548c:	cmp	x12, #0x41
  445490:	stur	w8, [x29, #-40]
  445494:	neg	x8, x16
  445498:	mov	x11, #0xffffffffffffffff    	// #-1
  44549c:	sturh	w10, [x29, #-36]
  4454a0:	b.cc	44552c <feof@plt+0x41c8c>  // b.lo, b.ul, b.last
  4454a4:	sub	x10, x12, #0x40
  4454a8:	cmp	x10, #0x3f
  4454ac:	b.hi	445598 <feof@plt+0x41cf8>  // b.pmore
  4454b0:	lsl	x10, x11, x10
  4454b4:	bic	x9, x9, x10
  4454b8:	b	445598 <feof@plt+0x41cf8>
  4454bc:	ldr	x8, [sp]
  4454c0:	ldr	w14, [sp, #8]
  4454c4:	sub	x9, x13, #0x41
  4454c8:	mov	w10, #0x1                   	// #1
  4454cc:	lsl	x8, x10, x8
  4454d0:	lsl	x9, x10, x9
  4454d4:	cbz	w14, 445604 <feof@plt+0x41d64>
  4454d8:	ldur	w10, [x29, #-96]
  4454dc:	ldurh	w11, [x29, #-92]
  4454e0:	neg	x12, x28
  4454e4:	cmp	x25, #0x0
  4454e8:	csinv	x28, x12, x28, eq  // eq = none
  4454ec:	cmp	x13, #0x41
  4454f0:	neg	x25, x25
  4454f4:	mov	x12, #0xffffffffffffffff    	// #-1
  4454f8:	str	w10, [sp, #120]
  4454fc:	strh	w11, [sp, #124]
  445500:	b.cc	44557c <feof@plt+0x41cdc>  // b.lo, b.ul, b.last
  445504:	sub	x11, x13, #0x40
  445508:	cmp	x11, #0x3f
  44550c:	b.hi	4455f4 <feof@plt+0x41d54>  // b.pmore
  445510:	lsl	x11, x12, x11
  445514:	bic	x28, x28, x11
  445518:	b	4455f4 <feof@plt+0x41d54>
  44551c:	ldr	w14, [sp, #36]
  445520:	mov	w17, wzr
  445524:	add	x21, sp, #0x88
  445528:	b	445648 <feof@plt+0x41da8>
  44552c:	cmp	x12, #0x40
  445530:	b.ne	44558c <feof@plt+0x41cec>  // b.any
  445534:	mov	x9, xzr
  445538:	b	445598 <feof@plt+0x41cf8>
  44553c:	mov	x25, x4
  445540:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445544:	mov	w1, #0x3                   	// #3
  445548:	mov	x0, x19
  44554c:	mov	w28, w3
  445550:	mov	w3, wzr
  445554:	add	x4, x4, #0xe29
  445558:	add	x21, sp, #0x88
  44555c:	str	x16, [sp, #88]
  445560:	str	w17, [sp, #40]
  445564:	bl	4429b8 <feof@plt+0x3f118>
  445568:	ldr	w17, [sp, #40]
  44556c:	ldr	x16, [sp, #88]
  445570:	mov	x4, x25
  445574:	mov	w14, w28
  445578:	b	445648 <feof@plt+0x41da8>
  44557c:	cmp	x13, #0x40
  445580:	b.ne	4455e8 <feof@plt+0x41d48>  // b.any
  445584:	mov	x28, xzr
  445588:	b	4455f4 <feof@plt+0x41d54>
  44558c:	lsl	x10, x11, x12
  445590:	mov	x9, xzr
  445594:	bic	x8, x8, x10
  445598:	cmp	w14, #0x0
  44559c:	cset	w11, eq  // eq = none
  4455a0:	cmp	x8, x16
  4455a4:	cset	w12, eq  // eq = none
  4455a8:	cmp	x9, x4
  4455ac:	orr	x10, x9, x8
  4455b0:	and	w11, w11, w12
  4455b4:	cset	w12, eq  // eq = none
  4455b8:	ldur	w13, [x29, #-40]
  4455bc:	cmp	x10, #0x0
  4455c0:	and	w10, w12, w11
  4455c4:	ldurh	w11, [x29, #-36]
  4455c8:	cset	w12, ne  // ne = any
  4455cc:	add	x21, sp, #0x88
  4455d0:	and	w17, w12, w10
  4455d4:	mov	x16, x8
  4455d8:	mov	x4, x9
  4455dc:	str	w13, [sp, #136]
  4455e0:	strh	w11, [sp, #140]
  4455e4:	b	445648 <feof@plt+0x41da8>
  4455e8:	lsl	x11, x12, x13
  4455ec:	mov	x28, xzr
  4455f0:	bic	x25, x25, x11
  4455f4:	ldr	w11, [sp, #120]
  4455f8:	ldrh	w12, [sp, #124]
  4455fc:	stur	w11, [x29, #-96]
  445600:	sturh	w12, [x29, #-92]
  445604:	ldr	x10, [sp, #40]
  445608:	and	x9, x28, x9
  44560c:	and	x8, x25, x8
  445610:	sub	x21, x29, #0x60
  445614:	cmp	x10, #0x40
  445618:	csel	x8, x9, x8, hi  // hi = pmore
  44561c:	cmp	x8, #0x0
  445620:	cset	w8, eq  // eq = none
  445624:	orr	x10, x25, x28
  445628:	eor	w8, w14, w8
  44562c:	ldr	w14, [sp, #36]
  445630:	cmp	x10, #0x0
  445634:	eor	w8, w8, #0x1
  445638:	cset	w9, ne  // ne = any
  44563c:	and	w17, w9, w8
  445640:	mov	x16, x25
  445644:	mov	x4, x28
  445648:	ldrh	w8, [x21, #4]
  44564c:	ldr	w9, [x21]
  445650:	strh	w8, [sp, #148]
  445654:	str	w9, [sp, #144]
  445658:	stp	x4, x16, [x27, #-32]
  44565c:	sturb	w14, [x27, #-16]
  445660:	sturb	w17, [x27, #-15]
  445664:	ldrh	w8, [sp, #148]
  445668:	ldr	w9, [sp, #144]
  44566c:	ldr	w28, [sp, #52]
  445670:	ldr	w25, [sp, #32]
  445674:	strh	w8, [x23, #4]
  445678:	str	w9, [x23]
  44567c:	b	44590c <feof@plt+0x4206c>
  445680:	mov	w9, #0x1                   	// #1
  445684:	mov	x10, #0xffffffffffffffbf    	// #-65
  445688:	mov	x16, x11
  44568c:	b	4456a8 <feof@plt+0x41e08>
  445690:	lsl	x9, x6, x8
  445694:	mov	x12, xzr
  445698:	bic	x14, x14, x9
  44569c:	mov	w9, #0x1                   	// #1
  4456a0:	mov	x10, #0xffffffffffffffff    	// #-1
  4456a4:	mov	x16, x13
  4456a8:	add	x10, x8, x10
  4456ac:	lsr	x10, x16, x10
  4456b0:	tbz	w10, #0, 4456f4 <feof@plt+0x41e54>
  4456b4:	neg	x10, x11
  4456b8:	cmp	x13, #0x0
  4456bc:	eor	w9, w9, #0x1
  4456c0:	csinv	x11, x10, x11, eq  // eq = none
  4456c4:	cmp	x8, #0x41
  4456c8:	neg	x13, x13
  4456cc:	b.cc	4456e8 <feof@plt+0x41e48>  // b.lo, b.ul, b.last
  4456d0:	cmp	x15, #0x3f
  4456d4:	b.hi	4456f4 <feof@plt+0x41e54>  // b.pmore
  4456d8:	lsl	x15, x6, x15
  4456dc:	mov	w10, wzr
  4456e0:	bic	x11, x11, x15
  4456e4:	b	4456f8 <feof@plt+0x41e58>
  4456e8:	cmp	x8, #0x40
  4456ec:	b.ne	445940 <feof@plt+0x420a0>  // b.any
  4456f0:	mov	x11, xzr
  4456f4:	mov	w10, wzr
  4456f8:	cmp	x12, #0x0
  4456fc:	and	x16, x13, #0xffffffff
  445700:	lsr	x13, x13, #32
  445704:	and	x17, x12, #0xffffffff
  445708:	and	x15, x14, #0xffffffff
  44570c:	lsr	x14, x14, #32
  445710:	lsr	x12, x12, #32
  445714:	and	x18, x11, #0xffffffff
  445718:	lsr	x0, x11, #32
  44571c:	cset	w1, ne  // ne = any
  445720:	cmp	x11, #0x0
  445724:	mul	x5, x16, x17
  445728:	mul	x17, x13, x17
  44572c:	mul	x11, x16, x15
  445730:	mul	x2, x13, x14
  445734:	mul	x3, x13, x15
  445738:	mul	x4, x16, x14
  44573c:	mul	x13, x13, x12
  445740:	mul	x12, x16, x12
  445744:	mul	x16, x18, x15
  445748:	mul	x15, x0, x15
  44574c:	mul	x0, x0, x14
  445750:	mul	x14, x18, x14
  445754:	cset	w18, ne  // ne = any
  445758:	adds	x5, x5, x17, lsl #32
  44575c:	and	w18, w1, w18
  445760:	lsr	x1, x12, #32
  445764:	cinc	x13, x13, cs  // cs = hs, nlast
  445768:	adds	x12, x5, x12, lsl #32
  44576c:	add	x17, x1, x17, lsr #32
  445770:	cinc	x13, x13, cs  // cs = hs, nlast
  445774:	add	x2, x2, x3, lsr #32
  445778:	lsr	x5, x14, #32
  44577c:	cmn	x17, x13
  445780:	add	x1, x2, x4, lsr #32
  445784:	add	x2, x5, x15, lsr #32
  445788:	cset	w13, ne  // ne = any
  44578c:	adds	x15, x16, x15, lsl #32
  445790:	cinc	x16, x0, cs  // cs = hs, nlast
  445794:	adds	x14, x15, x14, lsl #32
  445798:	add	x12, x1, x12
  44579c:	cinc	x17, x16, cs  // cs = hs, nlast
  4457a0:	adds	x11, x11, x3, lsl #32
  4457a4:	cinc	x12, x12, cs  // cs = hs, nlast
  4457a8:	adds	x16, x11, x4, lsl #32
  4457ac:	add	x11, x12, x14
  4457b0:	cinc	x15, x11, cs  // cs = hs, nlast
  4457b4:	cmn	x2, x17
  4457b8:	orr	w13, w18, w13
  4457bc:	cset	w11, ne  // ne = any
  4457c0:	cmp	x8, #0x41
  4457c4:	orr	w14, w13, w11
  4457c8:	b.cc	4457e8 <feof@plt+0x41f48>  // b.lo, b.ul, b.last
  4457cc:	sub	x11, x8, #0x40
  4457d0:	cmp	x11, #0x3f
  4457d4:	b.hi	4457fc <feof@plt+0x41f5c>  // b.pmore
  4457d8:	lsl	x11, x6, x11
  4457dc:	bic	x11, x15, x11
  4457e0:	mov	x13, x16
  4457e4:	b	445814 <feof@plt+0x41f74>
  4457e8:	cmp	x8, #0x40
  4457ec:	b.ne	445808 <feof@plt+0x41f68>  // b.any
  4457f0:	mov	x11, xzr
  4457f4:	mov	x13, x16
  4457f8:	b	445814 <feof@plt+0x41f74>
  4457fc:	mov	x13, x16
  445800:	mov	x11, x15
  445804:	b	445814 <feof@plt+0x41f74>
  445808:	lsl	x12, x6, x8
  44580c:	mov	x11, xzr
  445810:	bic	x13, x16, x12
  445814:	cmp	x13, x16
  445818:	cset	w16, ne  // ne = any
  44581c:	cmp	x11, x15
  445820:	cset	w15, ne  // ne = any
  445824:	orr	w15, w16, w15
  445828:	sub	x12, x27, #0xe
  44582c:	orr	w14, w14, w15
  445830:	cbz	w9, 4458a0 <feof@plt+0x42000>
  445834:	ldur	w15, [x29, #-40]
  445838:	ldurh	w16, [x29, #-36]
  44583c:	neg	x17, x11
  445840:	cmp	x13, #0x0
  445844:	csinv	x11, x17, x11, eq  // eq = none
  445848:	cmp	x8, #0x41
  44584c:	neg	x13, x13
  445850:	stur	w15, [x29, #-96]
  445854:	sturh	w16, [x29, #-92]
  445858:	b.cc	445874 <feof@plt+0x41fd4>  // b.lo, b.ul, b.last
  44585c:	sub	x15, x8, #0x40
  445860:	cmp	x15, #0x3f
  445864:	b.hi	445890 <feof@plt+0x41ff0>  // b.pmore
  445868:	lsl	x15, x6, x15
  44586c:	bic	x11, x11, x15
  445870:	b	445890 <feof@plt+0x41ff0>
  445874:	cmp	x8, #0x40
  445878:	b.ne	445884 <feof@plt+0x41fe4>  // b.any
  44587c:	mov	x11, xzr
  445880:	b	445890 <feof@plt+0x41ff0>
  445884:	lsl	x15, x6, x8
  445888:	mov	x11, xzr
  44588c:	bic	x13, x13, x15
  445890:	ldur	w15, [x29, #-96]
  445894:	ldurh	w16, [x29, #-92]
  445898:	stur	w15, [x29, #-40]
  44589c:	sturh	w16, [x29, #-36]
  4458a0:	orr	w14, w10, w14
  4458a4:	tbz	w14, #0, 4458b0 <feof@plt+0x42010>
  4458a8:	eor	w8, w10, #0x1
  4458ac:	b	4458f0 <feof@plt+0x42050>
  4458b0:	cmp	x8, #0x40
  4458b4:	mov	x14, #0xffffffffffffffbf    	// #-65
  4458b8:	csinv	x14, x14, xzr, hi  // hi = pmore
  4458bc:	csel	x15, x11, x13, hi  // hi = pmore
  4458c0:	add	x8, x8, x14
  4458c4:	lsr	x8, x15, x8
  4458c8:	tst	x8, #0x1
  4458cc:	cset	w8, eq  // eq = none
  4458d0:	eor	w8, w9, w8
  4458d4:	cmp	w8, #0x1
  4458d8:	b.eq	4458ec <feof@plt+0x4204c>  // b.none
  4458dc:	orr	x8, x11, x13
  4458e0:	cmp	x8, #0x0
  4458e4:	cset	w8, ne  // ne = any
  4458e8:	b	4458f0 <feof@plt+0x42050>
  4458ec:	mov	w8, wzr
  4458f0:	stp	x11, x13, [x27, #-32]
  4458f4:	sturb	w10, [x27, #-16]
  4458f8:	sturb	w8, [x27, #-15]
  4458fc:	ldurh	w8, [x29, #-36]
  445900:	ldur	w9, [x29, #-40]
  445904:	strh	w8, [x12, #4]
  445908:	str	w9, [x12]
  44590c:	ldr	w8, [x27, #32]
  445910:	ldurb	w9, [x27, #-15]
  445914:	sub	x23, x27, #0x28
  445918:	stur	w8, [x27, #-8]
  44591c:	cbz	w9, 4449bc <feof@plt+0x4111c>
  445920:	ldr	w8, [x19, #28]
  445924:	cbnz	w8, 4449bc <feof@plt+0x4111c>
  445928:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  44592c:	mov	w1, #0x2                   	// #2
  445930:	mov	x0, x19
  445934:	add	x2, x2, #0xd2b
  445938:	bl	4424f8 <feof@plt+0x3ec58>
  44593c:	b	4449bc <feof@plt+0x4111c>
  445940:	lsl	x15, x6, x8
  445944:	mov	x11, xzr
  445948:	mov	w10, wzr
  44594c:	bic	x13, x13, x15
  445950:	b	4456f8 <feof@plt+0x41e58>
  445954:	cmp	w20, #0x15
  445958:	mov	x21, #0xffffffffffffffff    	// #-1
  44595c:	b.ne	444948 <feof@plt+0x410a8>  // b.any
  445960:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445964:	mov	w1, #0x3                   	// #3
  445968:	mov	x0, x19
  44596c:	add	x2, x2, #0xd57
  445970:	bl	4424f8 <feof@plt+0x3ec58>
  445974:	ldr	w2, [sp, #84]
  445978:	mov	x27, xzr
  44597c:	b	444948 <feof@plt+0x410a8>
  445980:	orr	w8, w20, #0x1
  445984:	cmp	w8, #0x13
  445988:	mov	x21, #0xffffffffffffffff    	// #-1
  44598c:	b.eq	444948 <feof@plt+0x410a8>  // b.none
  445990:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445994:	mov	w1, #0x3                   	// #3
  445998:	mov	x0, x19
  44599c:	add	x2, x2, #0xd11
  4459a0:	b	445970 <feof@plt+0x420d0>
  4459a4:	ldr	w3, [x27, #36]
  4459a8:	b	44491c <feof@plt+0x4107c>
  4459ac:	cmp	w20, #0x15
  4459b0:	b.ne	4459dc <feof@plt+0x4213c>  // b.any
  4459b4:	ldr	x8, [x27, #24]
  4459b8:	ldur	q0, [x27, #8]
  4459bc:	ldr	w9, [x27, #32]
  4459c0:	mov	x21, #0xffffffffffffffff    	// #-1
  4459c4:	stur	x8, [x27, #-16]
  4459c8:	sub	x8, x27, #0x28
  4459cc:	stur	q0, [x27, #-32]
  4459d0:	stur	w9, [x27, #-8]
  4459d4:	mov	x27, x8
  4459d8:	b	444948 <feof@plt+0x410a8>
  4459dc:	ldr	x8, [x27]
  4459e0:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4459e4:	mov	w1, #0x3                   	// #3
  4459e8:	mov	x0, x19
  4459ec:	ldr	w2, [x8]
  4459f0:	mov	w3, wzr
  4459f4:	add	x4, x4, #0xcf7
  4459f8:	bl	4429b8 <feof@plt+0x3f118>
  4459fc:	ldr	w2, [sp, #84]
  445a00:	mov	x27, xzr
  445a04:	b	444944 <feof@plt+0x410a4>
  445a08:	ldp	x9, x8, [x27, #8]
  445a0c:	orr	x8, x9, x8
  445a10:	cbnz	x8, 445a5c <feof@plt+0x421bc>
  445a14:	b	445a24 <feof@plt+0x42184>
  445a18:	ldp	x9, x8, [x27, #8]
  445a1c:	orr	x8, x9, x8
  445a20:	cbz	x8, 445a5c <feof@plt+0x421bc>
  445a24:	ldr	w8, [x19, #28]
  445a28:	add	w8, w8, #0x1
  445a2c:	b	445a58 <feof@plt+0x421b8>
  445a30:	ldr	w8, [x27, #36]
  445a34:	cmp	w8, #0x11
  445a38:	b.ne	445bf0 <feof@plt+0x42350>  // b.any
  445a3c:	ldp	x10, x9, [x27, #-32]
  445a40:	ldr	w8, [x19, #28]
  445a44:	orr	x9, x10, x9
  445a48:	cbz	x9, 445a54 <feof@plt+0x421b4>
  445a4c:	add	w8, w8, #0x1
  445a50:	b	445a58 <feof@plt+0x421b8>
  445a54:	sub	w8, w8, #0x1
  445a58:	str	w8, [x19, #28]
  445a5c:	ldr	x8, [x19, #1104]
  445a60:	add	x27, x27, #0x28
  445a64:	cmp	x27, x8
  445a68:	b.ne	445a9c <feof@plt+0x421fc>  // b.any
  445a6c:	ldr	x0, [x19, #1096]
  445a70:	sub	x21, x8, x0
  445a74:	lsl	x8, x21, #1
  445a78:	add	x24, x8, #0x320
  445a7c:	mov	x1, x24
  445a80:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  445a84:	ldr	w2, [sp, #84]
  445a88:	add	x8, x0, x24
  445a8c:	add	x27, x0, x21
  445a90:	mov	x21, #0xffffffffffffffff    	// #-1
  445a94:	str	x0, [x19, #1096]
  445a98:	str	x8, [x19, #1104]
  445a9c:	str	x26, [x27]
  445aa0:	stp	w2, w20, [x27, #32]
  445aa4:	b	444398 <feof@plt+0x40af8>
  445aa8:	mov	x0, x19
  445aac:	mov	x1, x26
  445ab0:	mov	w20, w2
  445ab4:	bl	44d198 <feof@plt+0x498f8>
  445ab8:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445abc:	mov	x5, x0
  445ac0:	add	x4, x4, #0x9be
  445ac4:	mov	w1, #0x3                   	// #3
  445ac8:	mov	x0, x19
  445acc:	mov	w2, w20
  445ad0:	mov	w3, wzr
  445ad4:	bl	4429b8 <feof@plt+0x3f118>
  445ad8:	mov	w0, wzr
  445adc:	ldp	x20, x19, [sp, #416]
  445ae0:	ldp	x22, x21, [sp, #400]
  445ae4:	ldp	x24, x23, [sp, #384]
  445ae8:	ldp	x26, x25, [sp, #368]
  445aec:	ldp	x28, x27, [sp, #352]
  445af0:	ldp	x29, x30, [sp, #336]
  445af4:	add	sp, sp, #0x1b0
  445af8:	ret
  445afc:	mov	x0, x19
  445b00:	mov	x1, x26
  445b04:	mov	w20, w2
  445b08:	bl	44d198 <feof@plt+0x498f8>
  445b0c:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445b10:	mov	x5, x0
  445b14:	add	x4, x4, #0x9e8
  445b18:	b	445ac4 <feof@plt+0x42224>
  445b1c:	ldr	w9, [sp, #68]
  445b20:	cmp	w25, #0x3
  445b24:	cset	w8, eq  // eq = none
  445b28:	and	w8, w8, w9
  445b2c:	tbnz	w8, #0, 445b3c <feof@plt+0x4229c>
  445b30:	ldr	x8, [x19, #432]
  445b34:	cbz	x8, 445b3c <feof@plt+0x4229c>
  445b38:	str	xzr, [x19, #432]
  445b3c:	ldr	x8, [x19, #1096]
  445b40:	cmp	x27, x8
  445b44:	b.eq	445b98 <feof@plt+0x422f8>  // b.none
  445b48:	ldr	w10, [sp, #64]
  445b4c:	ldr	w2, [x27, #32]
  445b50:	adrp	x8, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445b54:	adrp	x9, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445b58:	add	x8, x8, #0xa59
  445b5c:	add	x9, x9, #0xe25
  445b60:	tst	w10, #0x1
  445b64:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445b68:	csel	x5, x9, x8, ne  // ne = any
  445b6c:	add	x4, x4, #0xabf
  445b70:	mov	w1, #0x4                   	// #4
  445b74:	mov	x0, x19
  445b78:	b	445ad0 <feof@plt+0x42230>
  445b7c:	mov	x0, x19
  445b80:	mov	x1, x26
  445b84:	bl	44d198 <feof@plt+0x498f8>
  445b88:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445b8c:	mov	x5, x0
  445b90:	add	x4, x4, #0x9be
  445b94:	b	445be0 <feof@plt+0x42340>
  445b98:	ldp	x9, x8, [x27, #8]
  445b9c:	orr	x8, x9, x8
  445ba0:	cmp	x8, #0x0
  445ba4:	cset	w0, ne  // ne = any
  445ba8:	b	445adc <feof@plt+0x4223c>
  445bac:	ldr	x1, [x27]
  445bb0:	mov	x0, x19
  445bb4:	bl	44d198 <feof@plt+0x498f8>
  445bb8:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445bbc:	mov	x5, x0
  445bc0:	add	x4, x4, #0xa5f
  445bc4:	b	445be0 <feof@plt+0x42340>
  445bc8:	mov	x0, x19
  445bcc:	mov	x1, x26
  445bd0:	bl	44d198 <feof@plt+0x498f8>
  445bd4:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445bd8:	mov	x5, x0
  445bdc:	add	x4, x4, #0xa82
  445be0:	ldr	w2, [sp, #84]
  445be4:	mov	w1, #0x3                   	// #3
  445be8:	mov	x0, x19
  445bec:	b	445ad0 <feof@plt+0x42230>
  445bf0:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445bf4:	add	x4, x4, #0xaa4
  445bf8:	b	445c30 <feof@plt+0x42390>
  445bfc:	ldr	w10, [sp, #64]
  445c00:	adrp	x8, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445c04:	adrp	x9, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445c08:	add	x8, x8, #0xa59
  445c0c:	add	x9, x9, #0xe25
  445c10:	tst	w10, #0x1
  445c14:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445c18:	csel	x5, x9, x8, ne  // ne = any
  445c1c:	add	x4, x4, #0xa43
  445c20:	mov	w1, #0x3                   	// #3
  445c24:	b	445b74 <feof@plt+0x422d4>
  445c28:	adrp	x4, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445c2c:	add	x4, x4, #0xa1c
  445c30:	mov	w1, #0x3                   	// #3
  445c34:	mov	x0, x19
  445c38:	mov	w3, wzr
  445c3c:	bl	4429b8 <feof@plt+0x3f118>
  445c40:	b	445ad8 <feof@plt+0x42238>
  445c44:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445c48:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445c4c:	add	x0, x0, #0xbc8
  445c50:	add	x2, x2, #0xbdc
  445c54:	mov	w1, #0x4ad                 	// #1197
  445c58:	bl	429434 <feof@plt+0x25b94>
  445c5c:	stp	x29, x30, [sp, #-48]!
  445c60:	stp	x20, x19, [sp, #32]
  445c64:	mov	x19, x0
  445c68:	ldr	x8, [x0, #1104]
  445c6c:	ldr	x0, [x0, #1096]
  445c70:	str	x21, [sp, #16]
  445c74:	mov	x29, sp
  445c78:	sub	x21, x8, x0
  445c7c:	lsl	x8, x21, #1
  445c80:	add	x20, x8, #0x320
  445c84:	mov	x1, x20
  445c88:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  445c8c:	add	x8, x0, x20
  445c90:	str	x0, [x19, #1096]
  445c94:	str	x8, [x19, #1104]
  445c98:	add	x0, x0, x21
  445c9c:	ldp	x20, x19, [sp, #32]
  445ca0:	ldr	x21, [sp, #16]
  445ca4:	ldp	x29, x30, [sp], #48
  445ca8:	ret
  445cac:	ldrb	w9, [x0, #16]
  445cb0:	cbnz	w9, 445d1c <feof@plt+0x4247c>
  445cb4:	subs	x9, x1, #0x41
  445cb8:	b.cc	445ce8 <feof@plt+0x42448>  // b.lo, b.ul, b.last
  445cbc:	and	x10, x1, #0xffffffffffffffc0
  445cc0:	cmp	x10, #0x40
  445cc4:	b.ne	445d1c <feof@plt+0x4247c>  // b.any
  445cc8:	ldr	x10, [x0]
  445ccc:	lsr	x9, x10, x9
  445cd0:	tbz	w9, #0, 445d1c <feof@plt+0x4247c>
  445cd4:	neg	x9, x1
  445cd8:	mov	x11, #0xffffffffffffffff    	// #-1
  445cdc:	lsr	x9, x11, x9
  445ce0:	orn	x9, x10, x9
  445ce4:	b	445d18 <feof@plt+0x42478>
  445ce8:	ldr	x9, [x0, #8]
  445cec:	sub	x10, x1, #0x1
  445cf0:	lsr	x10, x9, x10
  445cf4:	tbz	w10, #0, 445d1c <feof@plt+0x4247c>
  445cf8:	cmp	x1, #0x3f
  445cfc:	b.hi	445d14 <feof@plt+0x42474>  // b.pmore
  445d00:	neg	x10, x1
  445d04:	mov	x11, #0xffffffffffffffff    	// #-1
  445d08:	lsr	x10, x11, x10
  445d0c:	orn	x9, x9, x10
  445d10:	str	x9, [x0, #8]
  445d14:	mov	x9, #0xffffffffffffffff    	// #-1
  445d18:	str	x9, [x0]
  445d1c:	ldr	x9, [x0, #16]
  445d20:	ldr	q0, [x0]
  445d24:	str	x9, [x8, #16]
  445d28:	str	q0, [x8]
  445d2c:	ret
  445d30:	stp	x29, x30, [sp, #-80]!
  445d34:	stp	x24, x23, [sp, #32]
  445d38:	stp	x22, x21, [sp, #48]
  445d3c:	stp	x20, x19, [sp, #64]
  445d40:	stp	xzr, xzr, [x8]
  445d44:	strh	wzr, [x8, #16]
  445d48:	mov	x20, x8
  445d4c:	ldrb	w8, [x0, #26]
  445d50:	str	x25, [sp, #16]
  445d54:	mov	x29, sp
  445d58:	mov	w21, w1
  445d5c:	add	w8, w8, #0x1
  445d60:	mov	x19, x0
  445d64:	strb	w8, [x0, #26]
  445d68:	bl	452228 <feof@plt+0x4e988>
  445d6c:	ldrb	w8, [x0, #4]
  445d70:	cmp	w8, #0x14
  445d74:	b.ne	445de8 <feof@plt+0x42548>  // b.any
  445d78:	mov	x0, x19
  445d7c:	bl	452228 <feof@plt+0x4e988>
  445d80:	ldrb	w8, [x0, #4]
  445d84:	mov	x22, x0
  445d88:	mov	w25, #0x1                   	// #1
  445d8c:	cmp	w8, #0x3
  445d90:	b.eq	445df8 <feof@plt+0x42558>  // b.none
  445d94:	cmp	w8, #0x44
  445d98:	b.eq	445da4 <feof@plt+0x42504>  // b.none
  445d9c:	cmp	w8, #0x3e
  445da0:	b.ne	445e74 <feof@plt+0x425d4>  // b.any
  445da4:	ldr	w9, [x22, #8]
  445da8:	cmp	w8, #0x44
  445dac:	cset	w24, eq  // eq = none
  445db0:	sub	w0, w9, #0x1
  445db4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  445db8:	ldr	x8, [x22, #16]
  445dbc:	ldr	w9, [x22, #8]
  445dc0:	mov	x23, x0
  445dc4:	add	x1, x8, #0x1
  445dc8:	sub	w2, w9, #0x2
  445dcc:	bl	402fc0 <memcpy@plt>
  445dd0:	ldr	w8, [x22, #8]
  445dd4:	sub	w8, w8, #0x2
  445dd8:	strb	wzr, [x23, w8, uxtw]
  445ddc:	ldr	x22, [x22, #8]
  445de0:	cbnz	x23, 445e10 <feof@plt+0x42570>
  445de4:	b	445e34 <feof@plt+0x42594>
  445de8:	mov	x22, x0
  445dec:	mov	w25, wzr
  445df0:	cmp	w8, #0x3
  445df4:	b.ne	445d94 <feof@plt+0x424f4>  // b.any
  445df8:	mov	x0, x19
  445dfc:	bl	440964 <feof@plt+0x3d0c4>
  445e00:	mov	x23, x0
  445e04:	mov	x22, xzr
  445e08:	mov	w24, #0x1                   	// #1
  445e0c:	cbz	x23, 445e34 <feof@plt+0x42594>
  445e10:	mov	x0, x19
  445e14:	mov	x1, x23
  445e18:	mov	w2, w24
  445e1c:	mov	w3, w21
  445e20:	bl	448294 <feof@plt+0x449f4>
  445e24:	and	x8, x0, #0x1
  445e28:	mov	x0, x23
  445e2c:	str	x8, [x20, #8]
  445e30:	bl	4031d0 <free@plt>
  445e34:	cbz	w25, 445e90 <feof@plt+0x425f0>
  445e38:	ldr	x8, [x19, #448]
  445e3c:	ldurb	w8, [x8, #-20]
  445e40:	cmp	w8, #0x16
  445e44:	b.eq	445e90 <feof@plt+0x425f0>  // b.none
  445e48:	mov	x0, x19
  445e4c:	bl	452228 <feof@plt+0x4e988>
  445e50:	ldrb	w8, [x0, #4]
  445e54:	cmp	w8, #0x15
  445e58:	b.eq	445e90 <feof@plt+0x425f0>  // b.none
  445e5c:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445e60:	add	x2, x2, #0xcba
  445e64:	mov	w1, #0x3                   	// #3
  445e68:	mov	x0, x19
  445e6c:	bl	4424f8 <feof@plt+0x3ec58>
  445e70:	b	445e90 <feof@plt+0x425f0>
  445e74:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445e78:	add	x2, x2, #0xc86
  445e7c:	mov	w1, #0x3                   	// #3
  445e80:	mov	x0, x19
  445e84:	bl	4424f8 <feof@plt+0x3ec58>
  445e88:	mov	x22, xzr
  445e8c:	cbnz	w25, 445e38 <feof@plt+0x42598>
  445e90:	cbz	x22, 445e98 <feof@plt+0x425f8>
  445e94:	str	x22, [x19, #432]
  445e98:	ldrb	w8, [x19, #26]
  445e9c:	ldr	x25, [sp, #16]
  445ea0:	sub	w8, w8, #0x1
  445ea4:	strb	w8, [x19, #26]
  445ea8:	ldp	x20, x19, [sp, #64]
  445eac:	ldp	x22, x21, [sp, #48]
  445eb0:	ldp	x24, x23, [sp, #32]
  445eb4:	ldp	x29, x30, [sp], #80
  445eb8:	ret
  445ebc:	sub	sp, sp, #0x80
  445ec0:	stp	x29, x30, [sp, #80]
  445ec4:	stp	x20, x19, [sp, #112]
  445ec8:	ldr	x9, [x0, #1208]
  445ecc:	sub	w10, w3, #0xc
  445ed0:	str	x21, [sp, #96]
  445ed4:	mov	x21, x2
  445ed8:	mov	x20, x1
  445edc:	cmp	w10, #0x2
  445ee0:	mov	x19, x8
  445ee4:	add	x29, sp, #0x50
  445ee8:	b.cc	445f1c <feof@plt+0x4267c>  // b.lo, b.ul, b.last
  445eec:	cmp	w3, #0x4
  445ef0:	b.eq	445f98 <feof@plt+0x426f8>  // b.none
  445ef4:	cmp	w3, #0x5
  445ef8:	b.ne	445fbc <feof@plt+0x4271c>  // b.any
  445efc:	ldp	x14, x12, [x20]
  445f00:	ldp	x15, x13, [x21]
  445f04:	ldrb	w8, [x20, #16]
  445f08:	subs	x10, x12, x13
  445f0c:	cset	w11, cc  // cc = lo, ul, last
  445f10:	cbz	w8, 445ff0 <feof@plt+0x42750>
  445f14:	mov	w8, #0x1                   	// #1
  445f18:	b	445ff4 <feof@plt+0x42754>
  445f1c:	ldrb	w10, [x21, #16]
  445f20:	ldr	x8, [x21]
  445f24:	cbnz	w10, 446214 <feof@plt+0x42974>
  445f28:	ldr	x11, [x21, #8]
  445f2c:	subs	x14, x9, #0x40
  445f30:	mov	x10, #0xffffffffffffffbf    	// #-65
  445f34:	csinv	x10, x10, xzr, hi  // hi = pmore
  445f38:	csel	x12, x8, x11, hi  // hi = pmore
  445f3c:	add	x10, x9, x10
  445f40:	lsr	x10, x12, x10
  445f44:	tbz	w10, #0, 446214 <feof@plt+0x42974>
  445f48:	mov	x10, x21
  445f4c:	ldr	w13, [x10, #18]!
  445f50:	cmp	w3, #0xd
  445f54:	mov	w12, #0xc                   	// #12
  445f58:	neg	x15, x8
  445f5c:	ldrh	w16, [x10, #4]
  445f60:	cinc	w3, w12, ne  // ne = any
  445f64:	cmp	x11, #0x0
  445f68:	csinv	x12, x15, x8, eq  // eq = none
  445f6c:	cmp	x9, #0x41
  445f70:	stur	w13, [x29, #-16]
  445f74:	neg	x13, x11
  445f78:	sturh	w16, [x29, #-12]
  445f7c:	b.cc	446108 <feof@plt+0x42868>  // b.lo, b.ul, b.last
  445f80:	cmp	x14, #0x3f
  445f84:	b.hi	4461d4 <feof@plt+0x42934>  // b.pmore
  445f88:	mov	x15, #0xffffffffffffffff    	// #-1
  445f8c:	lsl	x14, x15, x14
  445f90:	bic	x12, x12, x14
  445f94:	b	4461d4 <feof@plt+0x42934>
  445f98:	ldp	x15, x12, [x20]
  445f9c:	ldp	x14, x13, [x21]
  445fa0:	ldrb	w8, [x20, #16]
  445fa4:	adds	x10, x13, x12
  445fa8:	add	x11, x14, x15
  445fac:	cinc	x11, x11, cs  // cs = hs, nlast
  445fb0:	cbz	w8, 446040 <feof@plt+0x427a0>
  445fb4:	mov	w8, #0x1                   	// #1
  445fb8:	b	446044 <feof@plt+0x427a4>
  445fbc:	ldrb	w8, [x0, #1154]
  445fc0:	cbz	w8, 445fe4 <feof@plt+0x42744>
  445fc4:	ldrb	w8, [x0, #1152]
  445fc8:	cbz	w8, 445fd4 <feof@plt+0x42734>
  445fcc:	ldr	w8, [x0, #28]
  445fd0:	cbnz	w8, 445fe4 <feof@plt+0x42744>
  445fd4:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  445fd8:	add	x2, x2, #0xe08
  445fdc:	mov	w1, #0x15                  	// #21
  445fe0:	bl	442758 <feof@plt+0x3eeb8>
  445fe4:	ldr	x8, [x21, #16]
  445fe8:	ldr	q0, [x21]
  445fec:	b	446560 <feof@plt+0x42cc0>
  445ff0:	ldrb	w8, [x21, #16]
  445ff4:	ldr	w16, [x29, #24]
  445ff8:	ldrh	w17, [x29, #28]
  445ffc:	cmp	x9, #0x41
  446000:	str	w16, [sp, #16]
  446004:	strh	w17, [sp, #20]
  446008:	b.cc	446030 <feof@plt+0x42790>  // b.lo, b.ul, b.last
  44600c:	sub	x17, x14, x15
  446010:	sub	x16, x9, #0x40
  446014:	cmp	x16, #0x3f
  446018:	sub	x11, x17, x11
  44601c:	b.hi	446098 <feof@plt+0x427f8>  // b.pmore
  446020:	mov	x17, #0xffffffffffffffff    	// #-1
  446024:	lsl	x16, x17, x16
  446028:	bic	x11, x11, x16
  44602c:	b	446098 <feof@plt+0x427f8>
  446030:	cmp	x9, #0x40
  446034:	b.ne	446088 <feof@plt+0x427e8>  // b.any
  446038:	mov	x11, xzr
  44603c:	b	446098 <feof@plt+0x427f8>
  446040:	ldrb	w8, [x21, #16]
  446044:	ldr	w16, [x29, #24]
  446048:	ldrh	w17, [x29, #28]
  44604c:	cmp	x9, #0x41
  446050:	str	w16, [sp, #8]
  446054:	strh	w17, [sp, #12]
  446058:	b.cc	446078 <feof@plt+0x427d8>  // b.lo, b.ul, b.last
  44605c:	sub	x16, x9, #0x40
  446060:	cmp	x16, #0x3f
  446064:	b.hi	4460d8 <feof@plt+0x42838>  // b.pmore
  446068:	mov	x17, #0xffffffffffffffff    	// #-1
  44606c:	lsl	x16, x17, x16
  446070:	bic	x11, x11, x16
  446074:	b	4460d8 <feof@plt+0x42838>
  446078:	cmp	x9, #0x40
  44607c:	b.ne	4460c8 <feof@plt+0x42828>  // b.any
  446080:	mov	x11, xzr
  446084:	b	4460d8 <feof@plt+0x42838>
  446088:	mov	x16, #0xffffffffffffffff    	// #-1
  44608c:	lsl	x16, x16, x9
  446090:	mov	x11, xzr
  446094:	bic	x10, x10, x16
  446098:	ldr	w16, [sp, #16]
  44609c:	ldrh	w17, [sp, #20]
  4460a0:	str	w16, [x29, #24]
  4460a4:	strh	w17, [x29, #28]
  4460a8:	cbnz	w8, 4461a0 <feof@plt+0x42900>
  4460ac:	subs	x16, x9, #0x41
  4460b0:	b.cc	446118 <feof@plt+0x42878>  // b.lo, b.ul, b.last
  4460b4:	mov	w12, #0x1                   	// #1
  4460b8:	lsl	x13, x12, x16
  4460bc:	and	x12, x14, x13
  4460c0:	and	x13, x15, x13
  4460c4:	b	44612c <feof@plt+0x4288c>
  4460c8:	mov	x16, #0xffffffffffffffff    	// #-1
  4460cc:	lsl	x16, x16, x9
  4460d0:	mov	x11, xzr
  4460d4:	bic	x10, x10, x16
  4460d8:	ldr	w16, [sp, #8]
  4460dc:	ldrh	w17, [sp, #12]
  4460e0:	str	w16, [x29, #24]
  4460e4:	strh	w17, [x29, #28]
  4460e8:	cbnz	w8, 4461a0 <feof@plt+0x42900>
  4460ec:	subs	x16, x9, #0x41
  4460f0:	b.cc	446174 <feof@plt+0x428d4>  // b.lo, b.ul, b.last
  4460f4:	mov	w12, #0x1                   	// #1
  4460f8:	lsl	x13, x12, x16
  4460fc:	and	x12, x15, x13
  446100:	and	x13, x14, x13
  446104:	b	446188 <feof@plt+0x428e8>
  446108:	cmp	x9, #0x40
  44610c:	b.ne	4461c4 <feof@plt+0x42924>  // b.any
  446110:	mov	x12, xzr
  446114:	b	4461d4 <feof@plt+0x42934>
  446118:	sub	x14, x9, #0x1
  44611c:	mov	w15, #0x1                   	// #1
  446120:	lsl	x14, x15, x14
  446124:	and	x12, x12, x14
  446128:	and	x13, x13, x14
  44612c:	cmp	x12, #0x0
  446130:	cset	w14, eq  // eq = none
  446134:	cmp	x13, #0x0
  446138:	cset	w13, eq  // eq = none
  44613c:	cmp	w14, w13
  446140:	b.eq	4461a0 <feof@plt+0x42900>  // b.none
  446144:	cmp	x12, #0x0
  446148:	mov	x12, #0xffffffffffffffbf    	// #-65
  44614c:	cset	w13, eq  // eq = none
  446150:	cmp	x9, #0x40
  446154:	csinv	x12, x12, xzr, hi  // hi = pmore
  446158:	csel	x14, x11, x10, hi  // hi = pmore
  44615c:	add	x9, x9, x12
  446160:	lsr	x9, x14, x9
  446164:	tst	x9, #0x1
  446168:	cset	w9, eq  // eq = none
  44616c:	eor	w9, w13, w9
  446170:	b	4461a4 <feof@plt+0x42904>
  446174:	sub	x14, x9, #0x1
  446178:	mov	w15, #0x1                   	// #1
  44617c:	lsl	x14, x15, x14
  446180:	and	x12, x12, x14
  446184:	and	x13, x13, x14
  446188:	cmp	x12, #0x0
  44618c:	cset	w14, eq  // eq = none
  446190:	cmp	x13, #0x0
  446194:	cset	w13, eq  // eq = none
  446198:	eor	w13, w14, w13
  44619c:	tbz	w13, #0, 446144 <feof@plt+0x428a4>
  4461a0:	mov	w9, wzr
  4461a4:	stp	x11, x10, [x19]
  4461a8:	ldrh	w10, [x29, #28]
  4461ac:	ldr	w11, [x29, #24]
  4461b0:	strb	w8, [x19, #16]
  4461b4:	strb	w9, [x19, #17]
  4461b8:	strh	w10, [x19, #22]
  4461bc:	stur	w11, [x19, #18]
  4461c0:	b	446578 <feof@plt+0x42cd8>
  4461c4:	mov	x14, #0xffffffffffffffff    	// #-1
  4461c8:	lsl	x14, x14, x9
  4461cc:	mov	x12, xzr
  4461d0:	bic	x13, x13, x14
  4461d4:	cmp	x13, x11
  4461d8:	orr	x11, x12, x13
  4461dc:	stp	x12, x13, [x21]
  4461e0:	cset	w13, eq  // eq = none
  4461e4:	cmp	x12, x8
  4461e8:	cset	w8, eq  // eq = none
  4461ec:	cmp	x11, #0x0
  4461f0:	and	w8, w13, w8
  4461f4:	cset	w11, ne  // ne = any
  4461f8:	and	w8, w11, w8
  4461fc:	strb	w8, [x21, #17]
  446200:	ldurh	w8, [x29, #-12]
  446204:	ldur	w11, [x29, #-16]
  446208:	strh	w8, [x10, #4]
  44620c:	mov	x8, x12
  446210:	str	w11, [x10]
  446214:	cbz	x8, 44625c <feof@plt+0x429bc>
  446218:	mov	x8, #0xffffffffffffffff    	// #-1
  44621c:	cmp	w3, #0xd
  446220:	b.ne	446268 <feof@plt+0x429c8>  // b.any
  446224:	ldr	x10, [x20, #16]
  446228:	ldr	q0, [x20]
  44622c:	cmp	x8, x9
  446230:	str	x10, [sp, #48]
  446234:	str	q0, [sp, #32]
  446238:	b.cs	4462cc <feof@plt+0x42a2c>  // b.hs, b.nlast
  44623c:	ldp	x10, x11, [sp, #32]
  446240:	subs	x12, x8, #0x40
  446244:	b.cc	4462e4 <feof@plt+0x42a44>  // b.lo, b.ul, b.last
  446248:	mov	x13, xzr
  44624c:	mov	x14, x11
  446250:	mov	x15, x12
  446254:	stp	x11, xzr, [sp, #32]
  446258:	b	4462f0 <feof@plt+0x42a50>
  44625c:	ldr	x8, [x21, #8]
  446260:	cmp	w3, #0xd
  446264:	b.eq	446224 <feof@plt+0x42984>  // b.none
  446268:	ldp	x14, x13, [x20]
  44626c:	ldrb	w11, [x20, #16]
  446270:	subs	x12, x9, #0x40
  446274:	mov	x15, #0xffffffffffffffbf    	// #-65
  446278:	mov	x10, x20
  44627c:	csinv	x15, x15, xzr, hi  // hi = pmore
  446280:	ldr	w16, [x10, #18]!
  446284:	ldrh	w17, [x20, #22]
  446288:	csel	x18, x14, x13, hi  // hi = pmore
  44628c:	cmp	w11, #0x0
  446290:	add	x11, x9, x15
  446294:	lsr	x11, x18, x11
  446298:	cset	w15, eq  // eq = none
  44629c:	and	w11, w11, w15
  4462a0:	cmp	x8, x9
  4462a4:	sbfx	x11, x11, #0, #1
  4462a8:	strh	w17, [sp, #28]
  4462ac:	str	w16, [sp, #24]
  4462b0:	b.cs	4462dc <feof@plt+0x42a3c>  // b.hs, b.nlast
  4462b4:	cmp	x9, #0x3f
  4462b8:	b.hi	446330 <feof@plt+0x42a90>  // b.pmore
  4462bc:	lsl	x14, x11, x9
  4462c0:	orr	x13, x14, x13
  4462c4:	mov	x14, x11
  4462c8:	b	446340 <feof@plt+0x42aa0>
  4462cc:	ldrb	w8, [sp, #48]
  4462d0:	cbz	w8, 446388 <feof@plt+0x42ae8>
  4462d4:	mov	w8, wzr
  4462d8:	b	446398 <feof@plt+0x42af8>
  4462dc:	mov	x8, x11
  4462e0:	b	4463a8 <feof@plt+0x42b08>
  4462e4:	mov	x13, x11
  4462e8:	mov	x14, x10
  4462ec:	mov	x15, x8
  4462f0:	cbz	x15, 44630c <feof@plt+0x42a6c>
  4462f4:	neg	x16, x15
  4462f8:	lsl	x14, x14, x15
  4462fc:	lsr	x16, x13, x16
  446300:	lsl	x13, x13, x15
  446304:	orr	x14, x16, x14
  446308:	stp	x14, x13, [sp, #32]
  44630c:	subs	x16, x9, #0x41
  446310:	b.cc	446378 <feof@plt+0x42ad8>  // b.lo, b.ul, b.last
  446314:	sub	x15, x9, #0x40
  446318:	cmp	x15, #0x3f
  44631c:	b.hi	44643c <feof@plt+0x42b9c>  // b.pmore
  446320:	mov	x17, #0xffffffffffffffff    	// #-1
  446324:	lsl	x15, x17, x15
  446328:	bic	x14, x14, x15
  44632c:	b	44643c <feof@plt+0x42b9c>
  446330:	cmp	x9, #0x7f
  446334:	b.hi	446340 <feof@plt+0x42aa0>  // b.pmore
  446338:	lsl	x15, x11, x9
  44633c:	orr	x14, x15, x14
  446340:	sub	x16, x8, #0x40
  446344:	cmp	x8, #0x3f
  446348:	csel	x15, x11, x14, hi  // hi = pmore
  44634c:	csel	x16, x16, x8, hi  // hi = pmore
  446350:	csel	x8, x14, x13, hi  // hi = pmore
  446354:	cbz	x16, 4463a4 <feof@plt+0x42b04>
  446358:	neg	x13, x16
  44635c:	lsr	x8, x8, x16
  446360:	lsr	x14, x15, x16
  446364:	lsl	x15, x15, x13
  446368:	lsl	x11, x11, x13
  44636c:	orr	x8, x8, x15
  446370:	orr	x11, x14, x11
  446374:	b	4463a8 <feof@plt+0x42b08>
  446378:	cmp	x9, #0x40
  44637c:	b.ne	44642c <feof@plt+0x42b8c>  // b.any
  446380:	mov	x14, xzr
  446384:	b	44643c <feof@plt+0x42b9c>
  446388:	ldp	x9, x8, [sp, #32]
  44638c:	orr	x8, x9, x8
  446390:	cmp	x8, #0x0
  446394:	cset	w8, ne  // ne = any
  446398:	strb	w8, [sp, #49]
  44639c:	stp	xzr, xzr, [sp, #32]
  4463a0:	b	446558 <feof@plt+0x42cb8>
  4463a4:	mov	x11, x15
  4463a8:	ldr	w13, [sp, #24]
  4463ac:	ldrh	w14, [sp, #28]
  4463b0:	cmp	x9, #0x41
  4463b4:	str	w13, [x29, #24]
  4463b8:	strh	w14, [x29, #28]
  4463bc:	b.cc	4463d8 <feof@plt+0x42b38>  // b.lo, b.ul, b.last
  4463c0:	cmp	x12, #0x3f
  4463c4:	b.hi	4463f8 <feof@plt+0x42b58>  // b.pmore
  4463c8:	mov	x9, #0xffffffffffffffff    	// #-1
  4463cc:	lsl	x9, x9, x12
  4463d0:	bic	x11, x11, x9
  4463d4:	b	4463f8 <feof@plt+0x42b58>
  4463d8:	cmp	x9, #0x40
  4463dc:	b.ne	4463e8 <feof@plt+0x42b48>  // b.any
  4463e0:	mov	x11, xzr
  4463e4:	b	4463f8 <feof@plt+0x42b58>
  4463e8:	mov	x12, #0xffffffffffffffff    	// #-1
  4463ec:	lsl	x9, x12, x9
  4463f0:	mov	x11, xzr
  4463f4:	bic	x8, x8, x9
  4463f8:	ldr	w9, [x29, #24]
  4463fc:	ldrh	w12, [x29, #28]
  446400:	str	w9, [sp, #24]
  446404:	strh	w12, [sp, #28]
  446408:	stur	w9, [x29, #-8]
  44640c:	sturh	w12, [x29, #-4]
  446410:	stp	x11, x8, [x20]
  446414:	and	w8, w12, #0xffff
  446418:	mov	w9, w9
  44641c:	strb	wzr, [x20, #17]
  446420:	strh	w8, [x10, #4]
  446424:	str	w9, [x10]
  446428:	b	446568 <feof@plt+0x42cc8>
  44642c:	mov	x15, #0xffffffffffffffff    	// #-1
  446430:	lsl	x15, x15, x9
  446434:	mov	x14, xzr
  446438:	bic	x13, x13, x15
  44643c:	ldrb	w15, [sp, #48]
  446440:	stp	x14, x13, [sp, #32]
  446444:	cbz	w15, 446450 <feof@plt+0x42bb0>
  446448:	strb	wzr, [sp, #49]
  44644c:	b	446558 <feof@plt+0x42cb8>
  446450:	ldur	w17, [sp, #50]
  446454:	ldrh	w18, [sp, #54]
  446458:	subs	x15, x9, #0x40
  44645c:	stur	w17, [x29, #-8]
  446460:	sturh	w18, [x29, #-4]
  446464:	b.ls	446480 <feof@plt+0x42be0>  // b.plast
  446468:	lsr	x16, x14, x16
  44646c:	tst	x16, #0x1
  446470:	csetm	x17, ne  // ne = any
  446474:	cmp	x9, #0x7f
  446478:	b.ls	446498 <feof@plt+0x42bf8>  // b.plast
  44647c:	b	4464b0 <feof@plt+0x42c10>
  446480:	sub	x16, x9, #0x1
  446484:	lsr	x16, x13, x16
  446488:	tst	x16, #0x1
  44648c:	csetm	x17, ne  // ne = any
  446490:	cmp	x9, #0x40
  446494:	b.ne	4464a4 <feof@plt+0x42c04>  // b.any
  446498:	lsl	x16, x17, x9
  44649c:	orr	x14, x16, x14
  4464a0:	b	4464b0 <feof@plt+0x42c10>
  4464a4:	lsl	x14, x17, x9
  4464a8:	orr	x13, x14, x13
  4464ac:	mov	x14, x17
  4464b0:	cmp	x8, #0x3f
  4464b4:	csel	x16, x17, x14, hi  // hi = pmore
  4464b8:	csel	x12, x12, x8, hi  // hi = pmore
  4464bc:	csel	x8, x14, x13, hi  // hi = pmore
  4464c0:	cbz	x12, 4464e0 <feof@plt+0x42c40>
  4464c4:	neg	x13, x12
  4464c8:	lsr	x8, x8, x12
  4464cc:	lsr	x12, x16, x12
  4464d0:	lsl	x14, x16, x13
  4464d4:	lsl	x13, x17, x13
  4464d8:	orr	x8, x8, x14
  4464dc:	orr	x16, x12, x13
  4464e0:	ldur	w12, [x29, #-8]
  4464e4:	ldurh	w13, [x29, #-4]
  4464e8:	cmp	x9, #0x41
  4464ec:	str	w12, [x29, #24]
  4464f0:	strh	w13, [x29, #28]
  4464f4:	b.cc	446510 <feof@plt+0x42c70>  // b.lo, b.ul, b.last
  4464f8:	cmp	x15, #0x3f
  4464fc:	b.hi	446530 <feof@plt+0x42c90>  // b.pmore
  446500:	mov	x9, #0xffffffffffffffff    	// #-1
  446504:	lsl	x9, x9, x15
  446508:	bic	x16, x16, x9
  44650c:	b	446530 <feof@plt+0x42c90>
  446510:	cmp	x9, #0x40
  446514:	b.ne	446520 <feof@plt+0x42c80>  // b.any
  446518:	mov	x16, xzr
  44651c:	b	446530 <feof@plt+0x42c90>
  446520:	mov	x12, #0xffffffffffffffff    	// #-1
  446524:	lsl	x9, x12, x9
  446528:	mov	x16, xzr
  44652c:	bic	x8, x8, x9
  446530:	ldr	w9, [x29, #24]
  446534:	ldrh	w12, [x29, #28]
  446538:	cmp	x11, x8
  44653c:	cset	w8, ne  // ne = any
  446540:	cmp	x10, x16
  446544:	cset	w10, ne  // ne = any
  446548:	orr	w8, w10, w8
  44654c:	stur	w9, [x29, #-8]
  446550:	sturh	w12, [x29, #-4]
  446554:	strb	w8, [sp, #49]
  446558:	ldr	x8, [sp, #48]
  44655c:	ldr	q0, [sp, #32]
  446560:	str	x8, [x20, #16]
  446564:	str	q0, [x20]
  446568:	ldr	x8, [x20, #16]
  44656c:	ldr	q0, [x20]
  446570:	str	x8, [x19, #16]
  446574:	str	q0, [x19]
  446578:	ldp	x20, x19, [sp, #112]
  44657c:	ldr	x21, [sp, #96]
  446580:	ldp	x29, x30, [sp, #80]
  446584:	add	sp, sp, #0x80
  446588:	ret
  44658c:	ldr	w8, [x0, #204]
  446590:	cmp	w8, #0x0
  446594:	cset	w0, ne  // ne = any
  446598:	ret
  44659c:	sub	sp, sp, #0x130
  4465a0:	stp	x24, x23, [sp, #256]
  4465a4:	stp	x22, x21, [sp, #272]
  4465a8:	stp	x20, x19, [sp, #288]
  4465ac:	mov	w21, w6
  4465b0:	mov	w23, w4
  4465b4:	mov	x22, x2
  4465b8:	mov	x24, x1
  4465bc:	mov	x19, x0
  4465c0:	stp	x29, x30, [sp, #208]
  4465c4:	stp	x28, x27, [sp, #224]
  4465c8:	stp	x26, x25, [sp, #240]
  4465cc:	add	x29, sp, #0xd0
  4465d0:	stp	w5, w3, [sp, #64]
  4465d4:	cbnz	x2, 4465f0 <feof@plt+0x42d50>
  4465d8:	adrp	x3, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4465dc:	add	x3, x3, #0xe41
  4465e0:	mov	w1, #0x4                   	// #4
  4465e4:	mov	x0, x19
  4465e8:	mov	w2, w21
  4465ec:	bl	442da8 <feof@plt+0x3f508>
  4465f0:	ldr	x20, [x19, #296]
  4465f4:	mov	x0, x24
  4465f8:	bl	47adac <feof@plt+0x7750c>
  4465fc:	mov	w2, w0
  446600:	mov	w3, #0x1                   	// #1
  446604:	mov	x0, x20
  446608:	mov	x1, x24
  44660c:	bl	47a764 <feof@plt+0x76ec4>
  446610:	ldr	x8, [x0]
  446614:	cbz	x8, 44662c <feof@plt+0x42d8c>
  446618:	ldr	x9, [x8, #8]
  44661c:	cmp	x9, x22
  446620:	b.eq	446694 <feof@plt+0x42df4>  // b.none
  446624:	ldr	x8, [x8]
  446628:	cbnz	x8, 446618 <feof@plt+0x42d78>
  44662c:	str	x0, [sp, #48]
  446630:	mov	w0, #0x1                   	// #1
  446634:	mov	w1, #0xd8                  	// #216
  446638:	stp	w21, w23, [sp, #16]
  44663c:	mov	w20, #0x1                   	// #1
  446640:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  446644:	ldr	x8, [x19]
  446648:	mov	w9, #0xffffffff            	// #-1
  44664c:	mov	x21, x0
  446650:	mov	x28, x0
  446654:	cmp	x8, #0x0
  446658:	cset	w8, eq  // eq = none
  44665c:	str	w9, [x0, #200]
  446660:	strb	w8, [x0, #212]
  446664:	mov	x0, x24
  446668:	str	x22, [x28, #64]!
  44666c:	str	x24, [sp, #8]
  446670:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  446674:	ldr	w8, [sp, #64]
  446678:	str	x0, [x21]
  44667c:	tbnz	w8, #0, 4466a0 <feof@plt+0x42e00>
  446680:	ldr	x8, [x19]
  446684:	cbz	x8, 44669c <feof@plt+0x42dfc>
  446688:	ldr	x8, [x8, #80]
  44668c:	ldrb	w20, [x8, #214]
  446690:	b	4466a0 <feof@plt+0x42e00>
  446694:	ldr	x21, [x8, #24]
  446698:	b	446e84 <feof@plt+0x435e4>
  44669c:	mov	w20, wzr
  4466a0:	add	x8, x19, #0x148
  4466a4:	str	x22, [sp, #56]
  4466a8:	str	wzr, [sp, #24]
  4466ac:	str	xzr, [sp, #32]
  4466b0:	strb	w20, [x21, #214]
  4466b4:	str	x8, [sp, #40]
  4466b8:	ldr	w8, [sp, #68]
  4466bc:	tbnz	w8, #0, 446bd8 <feof@plt+0x43338>
  4466c0:	ldrb	w8, [x19, #1145]
  4466c4:	cbz	w8, 4467e0 <feof@plt+0x42f40>
  4466c8:	ldr	x23, [x21, #64]
  4466cc:	ldr	x20, [x21]
  4466d0:	b	446700 <feof@plt+0x42e60>
  4466d4:	mov	x0, x27
  4466d8:	mov	x1, x20
  4466dc:	mov	x2, x25
  4466e0:	bl	402fc0 <memcpy@plt>
  4466e4:	strb	wzr, [x26, x22]
  4466e8:	ldrb	w2, [x23, #20]
  4466ec:	mov	x0, x19
  4466f0:	mov	x1, x26
  4466f4:	bl	4485a4 <feof@plt+0x44d04>
  4466f8:	mov	x23, x0
  4466fc:	add	x20, x24, #0x1
  446700:	ldr	x8, [x23, #32]
  446704:	cbz	x8, 446714 <feof@plt+0x42e74>
  446708:	ldr	x0, [x8]
  44670c:	cbnz	x0, 446728 <feof@plt+0x42e88>
  446710:	b	44674c <feof@plt+0x42eac>
  446714:	mov	x0, x23
  446718:	bl	4482f0 <feof@plt+0x44a50>
  44671c:	ldr	x8, [x23, #32]
  446720:	ldr	x0, [x8]
  446724:	cbz	x0, 44674c <feof@plt+0x42eac>
  446728:	mov	x22, xzr
  44672c:	mov	x1, x20
  446730:	bl	479ca4 <feof@plt+0x76404>
  446734:	cbz	w0, 4467c8 <feof@plt+0x42f28>
  446738:	ldr	x8, [x23, #32]
  44673c:	add	x8, x8, x22
  446740:	ldr	x0, [x8, #16]
  446744:	add	x22, x22, #0x10
  446748:	cbnz	x0, 44672c <feof@plt+0x42e8c>
  44674c:	ldrb	w8, [x20]
  446750:	cmp	w8, #0x2f
  446754:	b.eq	4467e0 <feof@plt+0x42f40>  // b.none
  446758:	mov	w1, #0x2f                  	// #47
  44675c:	mov	x0, x20
  446760:	bl	403210 <strchr@plt>
  446764:	cbz	x0, 4467e0 <feof@plt+0x42f40>
  446768:	mov	x24, x0
  44676c:	subs	x8, x0, x20
  446770:	b.eq	4467e0 <feof@plt+0x42f40>  // b.none
  446774:	ldr	w9, [x23, #16]
  446778:	add	x25, x8, #0x1
  44677c:	add	x22, x25, x9
  446780:	add	x0, x22, #0x2
  446784:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  446788:	ldr	w2, [x23, #16]
  44678c:	ldr	x1, [x23, #8]
  446790:	mov	x26, x0
  446794:	add	x27, x0, x2
  446798:	bl	402fc0 <memcpy@plt>
  44679c:	ldr	w8, [x23, #16]
  4467a0:	cbz	w8, 4466d4 <feof@plt+0x42e34>
  4467a4:	ldr	x9, [x23, #8]
  4467a8:	sub	w8, w8, #0x1
  4467ac:	ldrb	w8, [x9, w8, uxtw]
  4467b0:	cmp	w8, #0x2f
  4467b4:	b.eq	4466d4 <feof@plt+0x42e34>  // b.none
  4467b8:	mov	w8, #0x2f                  	// #47
  4467bc:	strb	w8, [x27], #1
  4467c0:	add	x22, x22, #0x1
  4467c4:	b	4466d4 <feof@plt+0x42e34>
  4467c8:	ldr	x8, [x23, #32]
  4467cc:	add	x8, x8, x22
  4467d0:	ldr	x0, [x8, #8]
  4467d4:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  4467d8:	mov	x25, x0
  4467dc:	cbnz	x0, 446804 <feof@plt+0x42f64>
  4467e0:	ldr	x25, [x21, #64]
  4467e4:	ldr	x20, [x21]
  4467e8:	ldr	x8, [x25, #40]
  4467ec:	cbz	x8, 446854 <feof@plt+0x42fb4>
  4467f0:	mov	x0, x20
  4467f4:	mov	x1, x25
  4467f8:	blr	x8
  4467fc:	mov	x25, x0
  446800:	cbz	x25, 446928 <feof@plt+0x43088>
  446804:	ldrb	w8, [x19, #1245]
  446808:	cbz	w8, 4468ac <feof@plt+0x4300c>
  44680c:	ldr	x8, [x28]
  446810:	ldrb	w8, [x8, #20]
  446814:	cbz	w8, 4468ac <feof@plt+0x4300c>
  446818:	mov	x0, x25
  44681c:	bl	47b0ec <feof@plt+0x7784c>
  446820:	mov	x20, x0
  446824:	cbz	x0, 4468a4 <feof@plt+0x43004>
  446828:	mov	x0, x20
  44682c:	bl	4030b0 <strlen@plt>
  446830:	mov	x23, x0
  446834:	mov	x0, x25
  446838:	bl	4030b0 <strlen@plt>
  44683c:	cmp	x23, x0
  446840:	b.cs	4468a4 <feof@plt+0x43004>  // b.hs, b.nlast
  446844:	mov	x0, x25
  446848:	bl	4031d0 <free@plt>
  44684c:	mov	x25, x20
  446850:	b	4468ac <feof@plt+0x4300c>
  446854:	ldr	w23, [x25, #16]
  446858:	mov	x0, x20
  44685c:	bl	4030b0 <strlen@plt>
  446860:	add	x22, x23, #0x1
  446864:	add	x24, x0, #0x1
  446868:	add	x0, x24, x22
  44686c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  446870:	ldr	x1, [x25, #8]
  446874:	mov	x2, x23
  446878:	mov	x25, x0
  44687c:	bl	402fc0 <memcpy@plt>
  446880:	cbz	w23, 446910 <feof@plt+0x43070>
  446884:	add	x8, x23, x25
  446888:	ldurb	w8, [x8, #-1]
  44688c:	cmp	w8, #0x2f
  446890:	b.eq	446914 <feof@plt+0x43074>  // b.none
  446894:	mov	w8, #0x2f                  	// #47
  446898:	strb	w8, [x25, x23]
  44689c:	mov	x23, x22
  4468a0:	b	446914 <feof@plt+0x43074>
  4468a4:	mov	x0, x20
  4468a8:	bl	4031d0 <free@plt>
  4468ac:	mov	x0, x25
  4468b0:	bl	47adac <feof@plt+0x7750c>
  4468b4:	ldr	x8, [x19, #320]
  4468b8:	mov	w23, w0
  4468bc:	mov	x1, x25
  4468c0:	mov	w2, w23
  4468c4:	mov	x0, x8
  4468c8:	bl	47a604 <feof@plt+0x76d64>
  4468cc:	cbz	x0, 4468dc <feof@plt+0x4303c>
  4468d0:	mov	w8, #0x2                   	// #2
  4468d4:	str	w8, [x21, #204]
  4468d8:	b	446b78 <feof@plt+0x432d8>
  4468dc:	ldr	x8, [x21]
  4468e0:	str	x25, [x21, #8]
  4468e4:	ldrb	w8, [x8]
  4468e8:	cbz	w8, 446aac <feof@plt+0x4320c>
  4468ec:	ldr	x8, [x19, #968]
  4468f0:	cbz	x8, 446aac <feof@plt+0x4320c>
  4468f4:	ldr	x8, [x19, #280]
  4468f8:	cbz	x8, 446940 <feof@plt+0x430a0>
  4468fc:	ldrb	w9, [x8, #214]
  446900:	cbz	w9, 446938 <feof@plt+0x43098>
  446904:	ldr	x8, [x8, #32]
  446908:	cbnz	x8, 4468fc <feof@plt+0x4305c>
  44690c:	b	446940 <feof@plt+0x430a0>
  446910:	mov	x23, xzr
  446914:	add	x0, x25, x23
  446918:	mov	x1, x20
  44691c:	mov	x2, x24
  446920:	bl	402fc0 <memcpy@plt>
  446924:	cbnz	x25, 446804 <feof@plt+0x42f64>
  446928:	mov	w8, #0x2                   	// #2
  44692c:	str	w8, [x21, #204]
  446930:	str	xzr, [x21, #8]
  446934:	b	446b78 <feof@plt+0x432d8>
  446938:	ldrb	w8, [x8, #212]
  44693c:	cbz	w8, 446aac <feof@plt+0x4320c>
  446940:	mov	x0, x25
  446944:	bl	4030b0 <strlen@plt>
  446948:	add	x22, x0, #0x5
  44694c:	mov	x27, x0
  446950:	mov	x0, x22
  446954:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  446958:	mov	x1, x25
  44695c:	mov	x2, x27
  446960:	mov	x24, x0
  446964:	bl	402fc0 <memcpy@plt>
  446968:	mov	w9, #0x672e                	// #26414
  44696c:	add	x8, x24, x27
  446970:	movk	w9, #0x6863, lsl #16
  446974:	add	x2, sp, #0x48
  446978:	mov	w0, wzr
  44697c:	mov	x1, x24
  446980:	str	w9, [x8]
  446984:	strb	wzr, [x8, #4]
  446988:	bl	403650 <__xstat@plt>
  44698c:	cbnz	w0, 446aa4 <feof@plt+0x43204>
  446990:	ldr	w8, [sp, #88]
  446994:	and	w8, w8, #0xf000
  446998:	cmp	w8, #0x4, lsl #12
  44699c:	b.ne	446a70 <feof@plt+0x431d0>  // b.any
  4469a0:	mov	x0, x24
  4469a4:	bl	4034e0 <opendir@plt>
  4469a8:	cbz	x0, 446a9c <feof@plt+0x431fc>
  4469ac:	mov	x26, x0
  4469b0:	add	x8, x27, x24
  4469b4:	mov	w9, #0x2f                  	// #47
  4469b8:	strb	w9, [x8, #4]
  4469bc:	str	x22, [sp, #24]
  4469c0:	mov	x0, x26
  4469c4:	bl	403460 <readdir@plt>
  4469c8:	cbnz	x0, 4469dc <feof@plt+0x4313c>
  4469cc:	b	446a8c <feof@plt+0x431ec>
  4469d0:	mov	x0, x26
  4469d4:	bl	403460 <readdir@plt>
  4469d8:	cbz	x0, 446a8c <feof@plt+0x431ec>
  4469dc:	add	x27, x0, #0x13
  4469e0:	adrp	x1, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  4469e4:	mov	x0, x27
  4469e8:	add	x1, x1, #0x60
  4469ec:	bl	403640 <strcmp@plt>
  4469f0:	cbz	w0, 4469d0 <feof@plt+0x43130>
  4469f4:	mov	x0, x27
  4469f8:	bl	4030b0 <strlen@plt>
  4469fc:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  446a00:	mov	x20, x0
  446a04:	mov	x0, x27
  446a08:	add	x1, x1, #0xa55
  446a0c:	bl	403640 <strcmp@plt>
  446a10:	cbz	w0, 4469d0 <feof@plt+0x43130>
  446a14:	ldr	x9, [sp, #24]
  446a18:	add	x2, x20, #0x1
  446a1c:	add	x8, x2, x22
  446a20:	cmp	x8, x9
  446a24:	b.ls	446a48 <feof@plt+0x431a8>  // b.plast
  446a28:	add	x8, x9, x20
  446a2c:	add	x1, x8, #0x41
  446a30:	mov	x0, x24
  446a34:	str	x1, [sp, #24]
  446a38:	mov	x20, x2
  446a3c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  446a40:	mov	x2, x20
  446a44:	mov	x24, x0
  446a48:	add	x0, x24, x22
  446a4c:	mov	x1, x27
  446a50:	bl	402fc0 <memcpy@plt>
  446a54:	mov	x0, x19
  446a58:	mov	x1, x21
  446a5c:	mov	x2, x24
  446a60:	bl	4487a8 <feof@plt+0x44f08>
  446a64:	tbz	w0, #0, 4469c0 <feof@plt+0x43120>
  446a68:	mov	w20, #0x1                   	// #1
  446a6c:	b	446a90 <feof@plt+0x431f0>
  446a70:	mov	x0, x19
  446a74:	mov	x1, x21
  446a78:	mov	x2, x24
  446a7c:	bl	4487a8 <feof@plt+0x44f08>
  446a80:	and	w20, w0, #0x1
  446a84:	cbz	w20, 446a9c <feof@plt+0x431fc>
  446a88:	b	446ec0 <feof@plt+0x43620>
  446a8c:	mov	w20, wzr
  446a90:	mov	x0, x26
  446a94:	bl	403320 <closedir@plt>
  446a98:	cbnz	w20, 446ec0 <feof@plt+0x43620>
  446a9c:	mov	w8, #0x1                   	// #1
  446aa0:	str	w8, [sp, #24]
  446aa4:	mov	x0, x24
  446aa8:	bl	4031d0 <free@plt>
  446aac:	mov	x0, x21
  446ab0:	bl	4480d0 <feof@plt+0x44830>
  446ab4:	tbnz	w0, #0, 446c70 <feof@plt+0x433d0>
  446ab8:	ldr	w8, [x21, #204]
  446abc:	cmp	w8, #0x2
  446ac0:	b.ne	446c5c <feof@plt+0x433bc>  // b.any
  446ac4:	mov	x0, x25
  446ac8:	bl	4030b0 <strlen@plt>
  446acc:	mov	x20, x0
  446ad0:	ldp	x0, x8, [x19, #352]
  446ad4:	add	x1, x20, #0x1
  446ad8:	sub	x8, x8, x0
  446adc:	cmp	x8, x1
  446ae0:	b.cs	446af0 <feof@plt+0x43250>  // b.hs, b.nlast
  446ae4:	ldr	x0, [sp, #40]
  446ae8:	bl	47bae8 <_obstack_newchunk@@Base>
  446aec:	ldr	x0, [x19, #352]
  446af0:	mov	x1, x25
  446af4:	mov	x2, x20
  446af8:	bl	402fc0 <memcpy@plt>
  446afc:	ldr	x8, [x19, #352]
  446b00:	add	x8, x8, x20
  446b04:	add	x9, x8, #0x1
  446b08:	str	x9, [x19, #352]
  446b0c:	strb	wzr, [x8]
  446b10:	ldp	x20, x8, [x19, #344]
  446b14:	cmp	x8, x20
  446b18:	b.ne	446b28 <feof@plt+0x43288>  // b.any
  446b1c:	ldrb	w9, [x19, #408]
  446b20:	orr	w9, w9, #0x2
  446b24:	strb	w9, [x19, #408]
  446b28:	ldr	x9, [x19, #376]
  446b2c:	ldr	x10, [x19, #336]
  446b30:	ldr	x11, [x19, #360]
  446b34:	mov	x0, x25
  446b38:	add	x8, x9, x8
  446b3c:	bic	x8, x8, x9
  446b40:	sub	x12, x11, x10
  446b44:	sub	x9, x8, x10
  446b48:	cmp	x9, x12
  446b4c:	csel	x8, x11, x8, hi  // hi = pmore
  446b50:	stp	x8, x8, [x19, #344]
  446b54:	bl	4031d0 <free@plt>
  446b58:	ldr	x0, [x19, #320]
  446b5c:	mov	w3, #0x1                   	// #1
  446b60:	mov	x1, x20
  446b64:	mov	w2, w23
  446b68:	bl	47a764 <feof@plt+0x76ec4>
  446b6c:	str	x20, [x0]
  446b70:	ldr	x8, [x21]
  446b74:	str	x8, [x21, #8]
  446b78:	ldr	x8, [x28]
  446b7c:	ldr	x20, [x8]
  446b80:	str	x20, [x28]
  446b84:	cbz	x20, 446be8 <feof@plt+0x43348>
  446b88:	ldr	x8, [x19, #208]
  446b8c:	cmp	x20, x8
  446b90:	b.eq	446bac <feof@plt+0x4330c>  // b.none
  446b94:	ldr	x8, [x19, #200]
  446b98:	cmp	x20, x8
  446b9c:	b.ne	4466b8 <feof@plt+0x42e18>  // b.any
  446ba0:	mov	w8, #0x1                   	// #1
  446ba4:	str	w8, [sp, #32]
  446ba8:	b	446bb4 <feof@plt+0x43314>
  446bac:	mov	w8, #0x1                   	// #1
  446bb0:	str	w8, [sp, #36]
  446bb4:	ldr	x8, [sp, #48]
  446bb8:	ldr	x22, [x8]
  446bbc:	cbz	x22, 4466b8 <feof@plt+0x42e18>
  446bc0:	ldr	x8, [x22, #8]
  446bc4:	cmp	x8, x20
  446bc8:	b.eq	446c3c <feof@plt+0x4339c>  // b.none
  446bcc:	ldr	x22, [x22]
  446bd0:	cbnz	x22, 446bc0 <feof@plt+0x43320>
  446bd4:	b	4466b8 <feof@plt+0x42e18>
  446bd8:	ldr	x22, [sp, #48]
  446bdc:	mov	w24, wzr
  446be0:	mov	w23, wzr
  446be4:	b	446d14 <feof@plt+0x43474>
  446be8:	ldr	x8, [x19, #984]
  446bec:	cbz	x8, 446c8c <feof@plt+0x433ec>
  446bf0:	ldr	x1, [sp, #8]
  446bf4:	mov	x0, x19
  446bf8:	mov	x2, x28
  446bfc:	blr	x8
  446c00:	str	x0, [x21, #8]
  446c04:	cbz	x0, 446c84 <feof@plt+0x433e4>
  446c08:	mov	x0, x21
  446c0c:	bl	4480d0 <feof@plt+0x44830>
  446c10:	tbz	w0, #0, 446c7c <feof@plt+0x433dc>
  446c14:	ldr	x8, [x19, #280]
  446c18:	ldr	x1, [sp, #48]
  446c1c:	str	x8, [x21, #32]
  446c20:	str	x21, [x19, #280]
  446c24:	ldr	x8, [x1]
  446c28:	cbnz	x8, 446e84 <feof@plt+0x435e4>
  446c2c:	str	x21, [x1]
  446c30:	ldr	x0, [x19, #296]
  446c34:	bl	47ac34 <feof@plt+0x77394>
  446c38:	b	446e84 <feof@plt+0x435e4>
  446c3c:	ldr	x0, [x21]
  446c40:	bl	4031d0 <free@plt>
  446c44:	mov	x0, x21
  446c48:	bl	4031d0 <free@plt>
  446c4c:	ldr	x21, [x22, #24]
  446c50:	ldr	x22, [sp, #48]
  446c54:	ldp	w23, w24, [sp, #32]
  446c58:	b	446d24 <feof@plt+0x43484>
  446c5c:	ldr	w3, [sp, #16]
  446c60:	mov	x0, x19
  446c64:	mov	x1, x21
  446c68:	mov	w2, wzr
  446c6c:	bl	446ec8 <feof@plt+0x43628>
  446c70:	ldr	x22, [sp, #48]
  446c74:	ldp	w23, w24, [sp, #32]
  446c78:	b	446d14 <feof@plt+0x43474>
  446c7c:	ldr	x0, [x21, #8]
  446c80:	bl	4031d0 <free@plt>
  446c84:	ldr	x8, [x21]
  446c88:	str	x8, [x21, #8]
  446c8c:	ldr	w8, [sp, #24]
  446c90:	ldr	x22, [sp, #48]
  446c94:	tst	w8, #0xff
  446c98:	b.eq	446cd4 <feof@plt+0x43434>  // b.none
  446c9c:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  446ca0:	add	x2, x2, #0xe5d
  446ca4:	mov	w1, #0x3                   	// #3
  446ca8:	mov	x0, x19
  446cac:	bl	4424f8 <feof@plt+0x3ec58>
  446cb0:	mov	x0, x19
  446cb4:	bl	44064c <feof@plt+0x3cdac>
  446cb8:	ldrb	w8, [x0, #84]
  446cbc:	cbnz	w8, 446cd4 <feof@plt+0x43434>
  446cc0:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  446cc4:	add	x2, x2, #0xe95
  446cc8:	mov	w1, #0x3                   	// #3
  446ccc:	mov	x0, x19
  446cd0:	bl	4424f8 <feof@plt+0x3ec58>
  446cd4:	ldp	w23, w24, [sp, #32]
  446cd8:	ldr	w2, [sp, #20]
  446cdc:	ldr	w8, [sp, #64]
  446ce0:	tbz	w8, #0, 446d04 <feof@plt+0x43464>
  446ce4:	ldr	x0, [x21]
  446ce8:	bl	4031d0 <free@plt>
  446cec:	mov	x0, x21
  446cf0:	bl	4031d0 <free@plt>
  446cf4:	ldr	x8, [x22]
  446cf8:	cbz	x8, 446ea8 <feof@plt+0x43608>
  446cfc:	mov	x21, xzr
  446d00:	b	446e84 <feof@plt+0x435e4>
  446d04:	ldr	w3, [sp, #16]
  446d08:	mov	x0, x19
  446d0c:	mov	x1, x21
  446d10:	bl	446ec8 <feof@plt+0x43628>
  446d14:	ldr	x8, [x19, #280]
  446d18:	mov	x20, xzr
  446d1c:	str	x8, [x21, #32]
  446d20:	str	x21, [x19, #280]
  446d24:	ldr	x0, [x19, #312]
  446d28:	ldr	w8, [x0]
  446d2c:	cmp	w8, #0x7f
  446d30:	b.ne	446d50 <feof@plt+0x434b0>  // b.any
  446d34:	mov	w0, #0xff0                 	// #4080
  446d38:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  446d3c:	str	wzr, [x0]
  446d40:	ldr	x9, [x19, #312]
  446d44:	mov	w8, wzr
  446d48:	str	x9, [x0, #8]
  446d4c:	str	x0, [x19, #312]
  446d50:	add	w9, w8, #0x1
  446d54:	str	w9, [x0]
  446d58:	ldr	x9, [x22]
  446d5c:	mov	w8, w8
  446d60:	add	x8, x0, x8, lsl #5
  446d64:	str	x9, [x8, #16]!
  446d68:	ldr	x9, [sp, #56]
  446d6c:	str	x9, [x8, #8]
  446d70:	ldr	x9, [x19, #40]
  446d74:	ldr	w9, [x9, #56]
  446d78:	str	x21, [x8, #24]
  446d7c:	str	w9, [x8, #16]
  446d80:	str	x8, [x22]
  446d84:	tbz	w24, #0, 446e08 <feof@plt+0x43568>
  446d88:	ldr	x9, [x19, #208]
  446d8c:	ldr	x10, [sp, #56]
  446d90:	cmp	x9, x10
  446d94:	b.eq	446e08 <feof@plt+0x43568>  // b.none
  446d98:	cmp	x20, x9
  446d9c:	b.eq	446e08 <feof@plt+0x43568>  // b.none
  446da0:	ldr	x0, [x19, #312]
  446da4:	ldr	w11, [x0]
  446da8:	cmp	w11, #0x7f
  446dac:	b.ne	446dd8 <feof@plt+0x43538>  // b.any
  446db0:	mov	w0, #0xff0                 	// #4080
  446db4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  446db8:	str	wzr, [x0]
  446dbc:	ldr	x8, [x19, #312]
  446dc0:	mov	w11, wzr
  446dc4:	str	x8, [x0, #8]
  446dc8:	str	x0, [x19, #312]
  446dcc:	ldr	x10, [x22]
  446dd0:	ldr	x9, [x19, #208]
  446dd4:	b	446ddc <feof@plt+0x4353c>
  446dd8:	mov	x10, x8
  446ddc:	add	w8, w11, #0x1
  446de0:	mov	w11, w11
  446de4:	str	w8, [x0]
  446de8:	add	x8, x0, x11, lsl #5
  446dec:	str	x10, [x8, #16]!
  446df0:	str	x9, [x8, #8]
  446df4:	ldr	x9, [x19, #40]
  446df8:	ldr	w9, [x9, #56]
  446dfc:	str	x21, [x8, #24]
  446e00:	str	w9, [x8, #16]
  446e04:	str	x8, [x22]
  446e08:	tbz	w23, #0, 446e84 <feof@plt+0x435e4>
  446e0c:	ldr	x9, [x19, #200]
  446e10:	ldr	x10, [sp, #56]
  446e14:	cmp	x9, x10
  446e18:	b.eq	446e84 <feof@plt+0x435e4>  // b.none
  446e1c:	cmp	x20, x9
  446e20:	b.eq	446e84 <feof@plt+0x435e4>  // b.none
  446e24:	ldr	x0, [x19, #312]
  446e28:	ldr	w10, [x0]
  446e2c:	cmp	w10, #0x7f
  446e30:	b.ne	446e58 <feof@plt+0x435b8>  // b.any
  446e34:	mov	w0, #0xff0                 	// #4080
  446e38:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  446e3c:	str	wzr, [x0]
  446e40:	ldr	x8, [x19, #312]
  446e44:	mov	w10, wzr
  446e48:	str	x8, [x0, #8]
  446e4c:	str	x0, [x19, #312]
  446e50:	ldr	x8, [x22]
  446e54:	ldr	x9, [x19, #200]
  446e58:	add	w11, w10, #0x1
  446e5c:	mov	w10, w10
  446e60:	add	x10, x0, x10, lsl #5
  446e64:	str	w11, [x0]
  446e68:	str	x8, [x10, #16]!
  446e6c:	str	x9, [x10, #8]
  446e70:	ldr	x8, [x19, #40]
  446e74:	ldr	w8, [x8, #56]
  446e78:	str	x21, [x10, #24]
  446e7c:	str	w8, [x10, #16]
  446e80:	str	x10, [x22]
  446e84:	mov	x0, x21
  446e88:	ldp	x20, x19, [sp, #288]
  446e8c:	ldp	x22, x21, [sp, #272]
  446e90:	ldp	x24, x23, [sp, #256]
  446e94:	ldp	x26, x25, [sp, #240]
  446e98:	ldp	x28, x27, [sp, #224]
  446e9c:	ldp	x29, x30, [sp, #208]
  446ea0:	add	sp, sp, #0x130
  446ea4:	ret
  446ea8:	str	x21, [x22]
  446eac:	ldr	x0, [x19, #296]
  446eb0:	mov	x1, x22
  446eb4:	bl	47ac34 <feof@plt+0x77394>
  446eb8:	mov	x21, xzr
  446ebc:	b	446e84 <feof@plt+0x435e4>
  446ec0:	str	x24, [x21, #16]
  446ec4:	b	446c70 <feof@plt+0x433d0>
  446ec8:	stp	x29, x30, [sp, #-64]!
  446ecc:	stp	x24, x23, [sp, #16]
  446ed0:	stp	x22, x21, [sp, #32]
  446ed4:	stp	x20, x19, [sp, #48]
  446ed8:	ldr	x8, [x0, #40]
  446edc:	mov	w19, w3
  446ee0:	mov	x20, x0
  446ee4:	mov	x21, x1
  446ee8:	ldr	w8, [x8, #60]
  446eec:	mov	x29, sp
  446ef0:	cmp	w8, #0x2
  446ef4:	b.cc	446f18 <feof@plt+0x43678>  // b.lo, b.ul, b.last
  446ef8:	ldr	x8, [x20]
  446efc:	cbz	x8, 446f0c <feof@plt+0x4366c>
  446f00:	ldrb	w8, [x8, #106]
  446f04:	cmp	w8, #0x0
  446f08:	cset	w8, ne  // ne = any
  446f0c:	ldrb	w9, [x20, #26]
  446f10:	cbnz	w9, 446f24 <feof@plt+0x43684>
  446f14:	b	446f38 <feof@plt+0x43698>
  446f18:	mov	w8, wzr
  446f1c:	ldrb	w9, [x20, #26]
  446f20:	cbz	w9, 446f38 <feof@plt+0x43698>
  446f24:	ldp	x20, x19, [sp, #48]
  446f28:	ldp	x22, x21, [sp, #32]
  446f2c:	ldp	x24, x23, [sp, #16]
  446f30:	ldp	x29, x30, [sp], #64
  446f34:	ret
  446f38:	ldr	w22, [x20, #1200]
  446f3c:	ldr	w23, [x21, #204]
  446f40:	cmp	w2, #0x0
  446f44:	cset	w9, ne  // ne = any
  446f48:	orr	w24, w9, w8
  446f4c:	bl	4035c0 <__errno_location@plt>
  446f50:	cmp	w22, w24
  446f54:	str	w23, [x0]
  446f58:	b.le	446f84 <feof@plt+0x436e4>
  446f5c:	cmp	w23, #0x2
  446f60:	b.ne	446f90 <feof@plt+0x436f0>  // b.any
  446f64:	ldrb	w8, [x20, #1204]
  446f68:	cbz	w8, 446f90 <feof@plt+0x436f0>
  446f6c:	ldr	x0, [x20, #712]
  446f70:	ldr	x1, [x21]
  446f74:	bl	456370 <feof@plt+0x52ad0>
  446f78:	ldrb	w8, [x20, #1207]
  446f7c:	cbnz	w8, 446f90 <feof@plt+0x436f0>
  446f80:	b	446f24 <feof@plt+0x43684>
  446f84:	cbz	w22, 446f90 <feof@plt+0x436f0>
  446f88:	ldrb	w8, [x20, #1207]
  446f8c:	cbz	w8, 446fbc <feof@plt+0x4371c>
  446f90:	ldr	x2, [x21, #8]
  446f94:	cbnz	x2, 446f9c <feof@plt+0x436fc>
  446f98:	ldr	x2, [x21]
  446f9c:	mov	w1, #0x6                   	// #6
  446fa0:	mov	x0, x20
  446fa4:	mov	w3, w19
  446fa8:	ldp	x20, x19, [sp, #48]
  446fac:	ldp	x22, x21, [sp, #32]
  446fb0:	ldp	x24, x23, [sp, #16]
  446fb4:	ldp	x29, x30, [sp], #64
  446fb8:	b	442fb0 <feof@plt+0x3f710>
  446fbc:	ldr	x2, [x21, #8]
  446fc0:	cbnz	x2, 446fc8 <feof@plt+0x43728>
  446fc4:	ldr	x2, [x21]
  446fc8:	mov	x0, x20
  446fcc:	mov	w1, wzr
  446fd0:	b	446fa4 <feof@plt+0x43704>
  446fd4:	sub	sp, sp, #0x90
  446fd8:	stp	x29, x30, [sp, #48]
  446fdc:	stp	x28, x27, [sp, #64]
  446fe0:	stp	x26, x25, [sp, #80]
  446fe4:	stp	x24, x23, [sp, #96]
  446fe8:	stp	x22, x21, [sp, #112]
  446fec:	stp	x20, x19, [sp, #128]
  446ff0:	ldrb	w8, [x1, #210]
  446ff4:	add	x29, sp, #0x30
  446ff8:	cbz	w8, 447024 <feof@plt+0x43784>
  446ffc:	mov	w22, wzr
  447000:	mov	w0, w22
  447004:	ldp	x20, x19, [sp, #128]
  447008:	ldp	x22, x21, [sp, #112]
  44700c:	ldp	x24, x23, [sp, #96]
  447010:	ldp	x26, x25, [sp, #80]
  447014:	ldp	x28, x27, [sp, #64]
  447018:	ldp	x29, x30, [sp, #48]
  44701c:	add	sp, sp, #0x90
  447020:	ret
  447024:	mov	w22, w3
  447028:	mov	w21, w2
  44702c:	mov	x19, x1
  447030:	mov	x20, x0
  447034:	tbz	w2, #0, 44704c <feof@plt+0x437ac>
  447038:	mov	w8, #0x1                   	// #1
  44703c:	strb	w8, [x20, #417]
  447040:	ldrh	w9, [x19, #208]
  447044:	strb	w8, [x19, #210]
  447048:	cbnz	w9, 446ffc <feof@plt+0x4375c>
  44704c:	ldr	x8, [x19, #56]
  447050:	cbz	x8, 44705c <feof@plt+0x437bc>
  447054:	ldrb	w8, [x8, #18]
  447058:	tbnz	w8, #1, 446ffc <feof@plt+0x4375c>
  44705c:	ldr	x1, [x19, #16]
  447060:	cbz	x1, 447094 <feof@plt+0x437f4>
  447064:	ldr	x8, [x20, #976]
  447068:	ldr	w2, [x19, #200]
  44706c:	ldr	x3, [x19, #8]
  447070:	mov	x0, x20
  447074:	blr	x8
  447078:	ldr	x0, [x19, #16]
  44707c:	mov	w8, #0xffffffff            	// #-1
  447080:	str	w8, [x19, #200]
  447084:	bl	4031d0 <free@plt>
  447088:	mov	w22, wzr
  44708c:	str	xzr, [x19, #16]
  447090:	b	447000 <feof@plt+0x43760>
  447094:	mov	x0, x20
  447098:	mov	x1, x19
  44709c:	mov	w2, w22
  4470a0:	bl	4488d0 <feof@plt+0x45030>
  4470a4:	tbz	w0, #0, 446ffc <feof@plt+0x4375c>
  4470a8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4470ac:	ldr	x24, [x8, #440]
  4470b0:	cbz	x24, 4471ec <feof@plt+0x4394c>
  4470b4:	tbnz	w21, #0, 4470c0 <feof@plt+0x43820>
  4470b8:	ldrb	w8, [x24, #8]
  4470bc:	cbz	w8, 4471ec <feof@plt+0x4394c>
  4470c0:	ldr	x8, [x19, #120]
  4470c4:	and	w9, w21, #0x1
  4470c8:	strb	wzr, [sp, #32]
  4470cc:	str	x19, [sp, #40]
  4470d0:	str	x8, [sp, #8]
  4470d4:	strb	w9, [sp, #33]
  4470d8:	ldr	x25, [x24]
  4470dc:	cbz	x25, 4471ec <feof@plt+0x4394c>
  4470e0:	add	x9, sp, #0x8
  4470e4:	mov	w8, wzr
  4470e8:	mov	x27, xzr
  4470ec:	add	x9, x9, #0x8
  4470f0:	mov	w26, #0xffffffff            	// #-1
  4470f4:	str	x9, [sp]
  4470f8:	b	447108 <feof@plt+0x43868>
  4470fc:	add	x27, x28, #0x1
  447100:	cmp	x27, x25
  447104:	b.cs	4471ec <feof@plt+0x4394c>  // b.hs, b.nlast
  447108:	add	x9, x25, x27
  44710c:	lsr	x28, x9, #1
  447110:	add	x23, x24, x28, lsl #5
  447114:	ldr	x9, [x23, #16]!
  447118:	ldr	x10, [sp, #8]
  44711c:	rev	x9, x9
  447120:	rev	x10, x10
  447124:	cmp	x10, x9
  447128:	cset	w9, hi  // hi = pmore
  44712c:	cset	w10, cc  // cc = lo, ul, last
  447130:	subs	w9, w9, w10
  447134:	b.ne	4471a4 <feof@plt+0x43904>  // b.any
  447138:	tst	w8, #0xff
  44713c:	b.ne	44715c <feof@plt+0x438bc>  // b.any
  447140:	ldr	x8, [sp, #40]
  447144:	ldr	x2, [sp]
  447148:	ldr	x0, [x8, #40]
  44714c:	ldr	x1, [x8, #120]
  447150:	bl	478f6c <feof@plt+0x756cc>
  447154:	mov	w8, #0x1                   	// #1
  447158:	strb	w8, [sp, #32]
  44715c:	add	x11, x24, x28, lsl #5
  447160:	ldr	x9, [x11, #24]!
  447164:	ldr	x12, [sp, #16]
  447168:	rev	x10, x9
  44716c:	rev	x9, x12
  447170:	cmp	x9, x10
  447174:	b.ne	447198 <feof@plt+0x438f8>  // b.any
  447178:	ldr	x9, [sp, #24]
  44717c:	ldr	x10, [x11, #8]
  447180:	rev	x9, x9
  447184:	rev	x10, x10
  447188:	cmp	x9, x10
  44718c:	b.ne	447198 <feof@plt+0x438f8>  // b.any
  447190:	mov	w9, wzr
  447194:	b	4471a0 <feof@plt+0x43900>
  447198:	cmp	x9, x10
  44719c:	cneg	w9, w26, cs  // cs = hs, nlast
  4471a0:	cbz	w9, 4471b8 <feof@plt+0x43918>
  4471a4:	tbz	w9, #31, 4470fc <feof@plt+0x4385c>
  4471a8:	mov	x25, x28
  4471ac:	cmp	x27, x25
  4471b0:	b.cc	447108 <feof@plt+0x43868>  // b.lo, b.ul, b.last
  4471b4:	b	4471ec <feof@plt+0x4394c>
  4471b8:	ldrb	w9, [sp, #33]
  4471bc:	cbnz	w9, 4471d0 <feof@plt+0x43930>
  4471c0:	add	x9, x24, x28, lsl #5
  4471c4:	ldrb	w9, [x9, #40]
  4471c8:	cbz	w9, 4470fc <feof@plt+0x4385c>
  4471cc:	b	4471d4 <feof@plt+0x43934>
  4471d0:	cbz	x23, 4471ec <feof@plt+0x4394c>
  4471d4:	mov	w22, wzr
  4471d8:	tbnz	w21, #0, 447000 <feof@plt+0x43760>
  4471dc:	mov	w8, #0x1                   	// #1
  4471e0:	strb	w8, [x20, #417]
  4471e4:	strb	w8, [x19, #210]
  4471e8:	b	447000 <feof@plt+0x43760>
  4471ec:	ldrb	w8, [x20, #417]
  4471f0:	cbz	w8, 447324 <feof@plt+0x43a84>
  4471f4:	ldr	x25, [x20, #280]
  4471f8:	cbz	x25, 447324 <feof@plt+0x43a84>
  4471fc:	mov	w26, #0xffffffff            	// #-1
  447200:	b	447214 <feof@plt+0x43974>
  447204:	ldr	w8, [x25, #204]
  447208:	cbz	w8, 44722c <feof@plt+0x4398c>
  44720c:	ldr	x25, [x25, #32]
  447210:	cbz	x25, 447324 <feof@plt+0x43a84>
  447214:	cmp	x25, x19
  447218:	b.eq	44720c <feof@plt+0x4396c>  // b.none
  44721c:	tbnz	w21, #0, 447204 <feof@plt+0x43964>
  447220:	ldrb	w8, [x25, #210]
  447224:	cbnz	w8, 447204 <feof@plt+0x43964>
  447228:	b	44720c <feof@plt+0x4396c>
  44722c:	ldr	x8, [x25, #160]
  447230:	ldr	x9, [x19, #160]
  447234:	cmp	x8, x9
  447238:	b.ne	44720c <feof@plt+0x4396c>  // b.any
  44723c:	ldr	x8, [x25, #120]
  447240:	ldr	x9, [x19, #120]
  447244:	cmp	x8, x9
  447248:	b.ne	44720c <feof@plt+0x4396c>  // b.any
  44724c:	ldr	x8, [x25, #40]
  447250:	mov	x23, x25
  447254:	cbz	x8, 4472a8 <feof@plt+0x43a08>
  447258:	ldrb	w8, [x25, #213]
  44725c:	mov	x23, x25
  447260:	cbnz	w8, 4472a8 <feof@plt+0x43a08>
  447264:	ldr	x27, [x25, #64]
  447268:	ldr	x24, [x25]
  44726c:	mov	w0, #0x1                   	// #1
  447270:	mov	w1, #0xd8                  	// #216
  447274:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  447278:	ldr	x8, [x20]
  44727c:	mov	x23, x0
  447280:	str	w26, [x0, #200]
  447284:	str	x27, [x0, #64]
  447288:	cmp	x8, #0x0
  44728c:	cset	w8, eq  // eq = none
  447290:	strb	w8, [x0, #212]
  447294:	mov	x0, x24
  447298:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  44729c:	str	x0, [x23]
  4472a0:	ldr	x8, [x25, #8]
  4472a4:	str	x8, [x23, #8]
  4472a8:	mov	x0, x20
  4472ac:	mov	x1, x23
  4472b0:	mov	w2, w22
  4472b4:	bl	4488d0 <feof@plt+0x45030>
  4472b8:	tbz	w0, #0, 4472e4 <feof@plt+0x43a44>
  4472bc:	ldr	x2, [x23, #120]
  4472c0:	ldr	x8, [x19, #120]
  4472c4:	cmp	x2, x8
  4472c8:	b.ne	4472e4 <feof@plt+0x43a44>  // b.any
  4472cc:	ldr	x0, [x23, #40]
  4472d0:	ldr	x1, [x19, #40]
  4472d4:	bl	403840 <bcmp@plt>
  4472d8:	cmp	w0, #0x0
  4472dc:	cset	w24, eq  // eq = none
  4472e0:	b	4472e8 <feof@plt+0x43a48>
  4472e4:	mov	w24, wzr
  4472e8:	ldr	x8, [x25, #40]
  4472ec:	cbz	x8, 44731c <feof@plt+0x43a7c>
  4472f0:	ldrb	w8, [x25, #213]
  4472f4:	cbnz	w8, 44731c <feof@plt+0x43a7c>
  4472f8:	ldr	x0, [x23, #48]
  4472fc:	str	xzr, [x23, #8]
  447300:	bl	4031d0 <free@plt>
  447304:	ldr	x0, [x23]
  447308:	bl	4031d0 <free@plt>
  44730c:	ldr	x0, [x23, #8]
  447310:	bl	4031d0 <free@plt>
  447314:	mov	x0, x23
  447318:	bl	4031d0 <free@plt>
  44731c:	tbz	w24, #0, 44720c <feof@plt+0x4396c>
  447320:	b	446ffc <feof@plt+0x4375c>
  447324:	ldr	x8, [x20]
  447328:	cbz	x8, 447348 <feof@plt+0x43aa8>
  44732c:	ldr	x9, [x19, #64]
  447330:	cbz	x9, 447348 <feof@plt+0x43aa8>
  447334:	ldrb	w8, [x8, #106]
  447338:	ldrb	w9, [x9, #20]
  44733c:	cmp	w8, w9
  447340:	csel	w21, w8, w9, hi  // hi = pmore
  447344:	b	44734c <feof@plt+0x43aac>
  447348:	mov	w21, wzr
  44734c:	ldr	w8, [x20, #1200]
  447350:	cmp	w21, #0x0
  447354:	cset	w9, ne  // ne = any
  447358:	cmp	w8, w9
  44735c:	b.le	447384 <feof@plt+0x43ae4>
  447360:	ldrh	w8, [x19, #208]
  447364:	cbnz	w8, 447384 <feof@plt+0x43ae4>
  447368:	ldrb	w8, [x19, #212]
  44736c:	cbz	w8, 447378 <feof@plt+0x43ad8>
  447370:	ldrb	w8, [x20, #1206]
  447374:	cbnz	w8, 447384 <feof@plt+0x43ae4>
  447378:	ldr	x0, [x20, #712]
  44737c:	ldr	x1, [x19, #8]
  447380:	bl	456370 <feof@plt+0x52ad0>
  447384:	ldrh	w8, [x19, #208]
  447388:	strb	wzr, [x19, #213]
  44738c:	ldr	x1, [x19, #40]
  447390:	ldr	x2, [x19, #120]
  447394:	add	w8, w8, #0x1
  447398:	strh	w8, [x19, #208]
  44739c:	ldrb	w8, [x20, #1155]
  4473a0:	cbz	w8, 4473b0 <feof@plt+0x43b10>
  4473a4:	ldrb	w8, [x20, #1244]
  4473a8:	eor	w3, w8, #0x1
  4473ac:	b	4473b4 <feof@plt+0x43b14>
  4473b0:	mov	w3, wzr
  4473b4:	mov	x0, x20
  4473b8:	bl	4406c8 <feof@plt+0x3ce28>
  4473bc:	str	x19, [x0, #80]
  4473c0:	strb	w21, [x0, #106]
  4473c4:	ldr	x8, [x19, #48]
  4473c8:	mov	w22, #0x1                   	// #1
  4473cc:	mov	w3, #0x1                   	// #1
  4473d0:	mov	w1, wzr
  4473d4:	str	x8, [x0, #40]
  4473d8:	strb	w22, [x20, #440]
  4473dc:	str	xzr, [x20, #424]
  4473e0:	ldr	x2, [x19, #8]
  4473e4:	mov	x0, x20
  4473e8:	mov	w4, w21
  4473ec:	bl	43e8cc <feof@plt+0x3b02c>
  4473f0:	b	447000 <feof@plt+0x43760>
  4473f4:	mov	w8, #0x1                   	// #1
  4473f8:	strb	w8, [x0, #417]
  4473fc:	strb	w8, [x1, #210]
  447400:	ret
  447404:	stp	x29, x30, [sp, #-64]!
  447408:	stp	x24, x23, [sp, #16]
  44740c:	stp	x22, x21, [sp, #32]
  447410:	stp	x20, x19, [sp, #48]
  447414:	mov	w20, w4
  447418:	mov	w21, w3
  44741c:	mov	w22, w2
  447420:	mov	x23, x1
  447424:	subs	w24, w3, #0x3
  447428:	mov	x19, x0
  44742c:	mov	x29, sp
  447430:	b.ne	44744c <feof@plt+0x43bac>  // b.any
  447434:	ldr	x9, [x19, #488]
  447438:	ldr	x8, [x19, #448]
  44743c:	ldr	x9, [x9, #16]
  447440:	cmp	x8, x9
  447444:	b.eq	44744c <feof@plt+0x43bac>  // b.none
  447448:	stur	wzr, [x8, #-24]
  44744c:	mov	x0, x19
  447450:	mov	x1, x23
  447454:	mov	w2, w22
  447458:	mov	w3, w21
  44745c:	bl	447560 <feof@plt+0x43cc0>
  447460:	cbz	x0, 44749c <feof@plt+0x43bfc>
  447464:	cmp	w21, #0x4
  447468:	mov	x2, x0
  44746c:	cset	w5, eq  // eq = none
  447470:	mov	x0, x19
  447474:	mov	x1, x23
  447478:	mov	w3, wzr
  44747c:	mov	w4, w22
  447480:	mov	w6, w20
  447484:	bl	44659c <feof@plt+0x42cfc>
  447488:	cmp	w21, #0x4
  44748c:	mov	x22, x0
  447490:	b.ne	4474b4 <feof@plt+0x43c14>  // b.any
  447494:	mov	w0, wzr
  447498:	cbnz	x22, 4474b4 <feof@plt+0x43c14>
  44749c:	ldp	x20, x19, [sp, #48]
  4474a0:	ldp	x22, x21, [sp, #32]
  4474a4:	ldp	x24, x23, [sp, #16]
  4474a8:	and	w0, w0, #0x1
  4474ac:	ldp	x29, x30, [sp], #64
  4474b0:	ret
  4474b4:	ldr	x8, [x22, #16]
  4474b8:	cbz	x8, 4474e4 <feof@plt+0x43c44>
  4474bc:	cmp	w21, #0x2
  4474c0:	mov	x0, x19
  4474c4:	mov	x1, x22
  4474c8:	mov	w3, w20
  4474cc:	ldp	x20, x19, [sp, #48]
  4474d0:	ldp	x22, x21, [sp, #32]
  4474d4:	ldp	x24, x23, [sp, #16]
  4474d8:	cset	w2, eq  // eq = none
  4474dc:	ldp	x29, x30, [sp], #64
  4474e0:	b	446fd4 <feof@plt+0x43734>
  4474e4:	cmp	w24, #0x2
  4474e8:	b.cc	4474bc <feof@plt+0x43c1c>  // b.lo, b.ul, b.last
  4474ec:	ldr	w8, [x22, #204]
  4474f0:	cbnz	w8, 4474bc <feof@plt+0x43c1c>
  4474f4:	ldr	x0, [x19, #40]
  4474f8:	ldr	w1, [x0, #56]
  4474fc:	bl	44f490 <feof@plt+0x4bbf0>
  447500:	ldr	x8, [x19, #40]
  447504:	mov	w23, w0
  447508:	mov	w1, w20
  44750c:	mov	x0, x8
  447510:	bl	44f490 <feof@plt+0x4bbf0>
  447514:	cmp	w23, w0
  447518:	b.le	4474bc <feof@plt+0x43c1c>
  44751c:	ldr	x8, [x19, #40]
  447520:	cmp	w21, #0x2
  447524:	cset	w2, eq  // eq = none
  447528:	mov	x0, x19
  44752c:	ldr	w9, [x8, #56]
  447530:	mov	x1, x22
  447534:	mov	w3, w20
  447538:	sub	w9, w9, #0x1
  44753c:	str	w9, [x8, #56]
  447540:	bl	446fd4 <feof@plt+0x43734>
  447544:	tbnz	w0, #0, 44749c <feof@plt+0x43bfc>
  447548:	ldr	x8, [x19, #40]
  44754c:	mov	w0, wzr
  447550:	ldr	w9, [x8, #56]
  447554:	add	w9, w9, #0x1
  447558:	str	w9, [x8, #56]
  44755c:	b	44749c <feof@plt+0x43bfc>
  447560:	stp	x29, x30, [sp, #-48]!
  447564:	stp	x22, x21, [sp, #16]
  447568:	stp	x20, x19, [sp, #32]
  44756c:	ldrb	w9, [x1]
  447570:	mov	x19, x0
  447574:	mov	x29, sp
  447578:	cmp	w9, #0x2f
  44757c:	b.ne	447588 <feof@plt+0x43ce8>  // b.any
  447580:	add	x0, x19, #0xd8
  447584:	b	4475ec <feof@plt+0x43d4c>
  447588:	ldr	x9, [x19]
  44758c:	add	x10, x19, #0x120
  447590:	mov	x8, x1
  447594:	add	x11, x9, #0x50
  447598:	cmp	x9, #0x0
  44759c:	csel	x10, x10, x11, eq  // eq = none
  4475a0:	ldr	x22, [x10]
  4475a4:	cmp	w3, #0x1
  4475a8:	b.ne	4475c0 <feof@plt+0x43d20>  // b.any
  4475ac:	ldr	x10, [x22, #64]
  4475b0:	cbz	x10, 4475c0 <feof@plt+0x43d20>
  4475b4:	add	x11, x19, #0xd8
  4475b8:	cmp	x10, x11
  4475bc:	b.ne	4475c8 <feof@plt+0x43d28>  // b.any
  4475c0:	cbz	w2, 4475fc <feof@plt+0x43d5c>
  4475c4:	add	x10, x19, #0xd0
  4475c8:	ldr	x0, [x10]
  4475cc:	cbnz	x0, 4475ec <feof@plt+0x43d4c>
  4475d0:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4475d4:	add	x2, x2, #0xf30
  4475d8:	mov	w1, #0x3                   	// #3
  4475dc:	mov	x0, x19
  4475e0:	mov	x3, x8
  4475e4:	bl	4424f8 <feof@plt+0x3ec58>
  4475e8:	mov	x0, xzr
  4475ec:	ldp	x20, x19, [sp, #32]
  4475f0:	ldp	x22, x21, [sp, #16]
  4475f4:	ldp	x29, x30, [sp], #48
  4475f8:	ret
  4475fc:	cmp	w3, #0x3
  447600:	b.ne	447618 <feof@plt+0x43d78>  // b.any
  447604:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  447608:	add	x1, x1, #0x8b1
  44760c:	mov	x0, x19
  447610:	mov	w2, wzr
  447614:	b	447684 <feof@plt+0x43de4>
  447618:	ldrb	w10, [x19, #416]
  44761c:	cbz	w10, 447630 <feof@plt+0x43d90>
  447620:	add	x10, x19, #0xc8
  447624:	ldr	x0, [x10]
  447628:	cbnz	x0, 4475ec <feof@plt+0x43d4c>
  44762c:	b	4475d0 <feof@plt+0x43d30>
  447630:	ldr	x20, [x22, #24]
  447634:	cbnz	x20, 44766c <feof@plt+0x43dcc>
  447638:	ldr	x0, [x22, #8]
  44763c:	bl	47b0c8 <feof@plt+0x77828>
  447640:	ldr	x8, [x22, #8]
  447644:	sub	x21, x0, x8
  447648:	add	x0, x21, #0x1
  44764c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  447650:	ldr	x1, [x22, #8]
  447654:	mov	x2, x21
  447658:	mov	x20, x0
  44765c:	bl	402fc0 <memcpy@plt>
  447660:	strb	wzr, [x20, x21]
  447664:	str	x20, [x22, #24]
  447668:	ldr	x9, [x19]
  44766c:	cbz	x9, 447678 <feof@plt+0x43dd8>
  447670:	ldrb	w2, [x9, #106]
  447674:	b	44767c <feof@plt+0x43ddc>
  447678:	mov	w2, wzr
  44767c:	mov	x0, x19
  447680:	mov	x1, x20
  447684:	ldp	x20, x19, [sp, #32]
  447688:	ldp	x22, x21, [sp, #16]
  44768c:	ldp	x29, x30, [sp], #48
  447690:	b	4485a4 <feof@plt+0x44d04>
  447694:	stp	x29, x30, [sp, #-32]!
  447698:	stp	x20, x19, [sp, #16]
  44769c:	ldr	x19, [x0, #296]
  4476a0:	mov	x0, x1
  4476a4:	mov	x29, sp
  4476a8:	mov	x20, x1
  4476ac:	bl	47adac <feof@plt+0x7750c>
  4476b0:	mov	w2, w0
  4476b4:	mov	x0, x19
  4476b8:	mov	x1, x20
  4476bc:	bl	47a604 <feof@plt+0x76d64>
  4476c0:	cbnz	x0, 4476d0 <feof@plt+0x43e30>
  4476c4:	b	4476e8 <feof@plt+0x43e48>
  4476c8:	ldr	x0, [x0]
  4476cc:	cbz	x0, 4476e8 <feof@plt+0x43e48>
  4476d0:	ldr	x8, [x0, #8]
  4476d4:	cbz	x8, 4476c8 <feof@plt+0x43e28>
  4476d8:	ldr	x8, [x0, #24]
  4476dc:	ldr	w8, [x8, #204]
  4476e0:	cbnz	w8, 4476c8 <feof@plt+0x43e28>
  4476e4:	mov	w0, #0x1                   	// #1
  4476e8:	ldp	x20, x19, [sp, #16]
  4476ec:	ldp	x29, x30, [sp], #32
  4476f0:	ret
  4476f4:	stp	x29, x30, [sp, #-48]!
  4476f8:	stp	x22, x21, [sp, #16]
  4476fc:	stp	x20, x19, [sp, #32]
  447700:	ldr	x20, [x0, #296]
  447704:	mov	x21, x0
  447708:	mov	x0, x1
  44770c:	mov	x29, sp
  447710:	mov	w19, w2
  447714:	mov	x22, x1
  447718:	bl	47adac <feof@plt+0x7750c>
  44771c:	mov	w2, w0
  447720:	mov	x0, x20
  447724:	mov	x1, x22
  447728:	bl	47a604 <feof@plt+0x76d64>
  44772c:	mov	x20, x0
  447730:	tbnz	w19, #31, 44773c <feof@plt+0x43e9c>
  447734:	cbnz	x20, 44776c <feof@plt+0x43ecc>
  447738:	b	447750 <feof@plt+0x43eb0>
  44773c:	ldr	x0, [x21, #40]
  447740:	mov	w1, w19
  447744:	bl	44e3f4 <feof@plt+0x4ab54>
  447748:	mov	w19, w0
  44774c:	cbnz	x20, 44776c <feof@plt+0x43ecc>
  447750:	mov	w0, wzr
  447754:	ldp	x20, x19, [sp, #32]
  447758:	ldp	x22, x21, [sp, #16]
  44775c:	ldp	x29, x30, [sp], #48
  447760:	ret
  447764:	ldr	x20, [x20]
  447768:	cbz	x20, 447750 <feof@plt+0x43eb0>
  44776c:	ldr	x8, [x20, #8]
  447770:	cbz	x8, 447764 <feof@plt+0x43ec4>
  447774:	ldr	x8, [x20, #24]
  447778:	ldr	w8, [x8, #204]
  44777c:	cbnz	w8, 447764 <feof@plt+0x43ec4>
  447780:	ldr	w8, [x20, #16]
  447784:	cmp	w8, w19
  447788:	b.hi	447764 <feof@plt+0x43ec4>  // b.pmore
  44778c:	mov	w0, #0x1                   	// #1
  447790:	b	447754 <feof@plt+0x43eb4>
  447794:	stp	x29, x30, [sp, #-64]!
  447798:	str	x23, [sp, #16]
  44779c:	stp	x22, x21, [sp, #32]
  4477a0:	stp	x20, x19, [sp, #48]
  4477a4:	adrp	x20, 447000 <feof@plt+0x43760>
  4477a8:	adrp	x21, 447000 <feof@plt+0x43760>
  4477ac:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x12fc>
  4477b0:	adrp	x23, 403000 <readlink@plt>
  4477b4:	add	x20, x20, #0x880
  4477b8:	add	x21, x21, #0x8a0
  4477bc:	add	x22, x22, #0xcc
  4477c0:	add	x23, x23, #0x1d0
  4477c4:	mov	x19, x0
  4477c8:	mov	w0, #0x7f                  	// #127
  4477cc:	mov	x1, x20
  4477d0:	mov	x2, x21
  4477d4:	mov	x3, xzr
  4477d8:	mov	x4, x22
  4477dc:	mov	x5, x23
  4477e0:	mov	x29, sp
  4477e4:	bl	479f14 <feof@plt+0x76674>
  4477e8:	str	x0, [x19, #296]
  4477ec:	mov	w0, #0x7f                  	// #127
  4477f0:	mov	x1, x20
  4477f4:	mov	x2, x21
  4477f8:	mov	x3, xzr
  4477fc:	mov	x4, x22
  447800:	mov	x5, x23
  447804:	bl	479f14 <feof@plt+0x76674>
  447808:	str	x0, [x19, #304]
  44780c:	mov	w0, #0xff0                 	// #4080
  447810:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  447814:	str	wzr, [x0]
  447818:	ldr	x8, [x19, #312]
  44781c:	adrp	x1, 47a000 <feof@plt+0x76760>
  447820:	adrp	x2, 447000 <feof@plt+0x43760>
  447824:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x12fc>
  447828:	str	x8, [x0, #8]
  44782c:	str	x0, [x19, #312]
  447830:	add	x1, x1, #0xdac
  447834:	add	x2, x2, #0x8d8
  447838:	mov	w0, #0x7f                  	// #127
  44783c:	mov	x3, xzr
  447840:	mov	x4, x22
  447844:	mov	x5, x23
  447848:	add	x20, x20, #0x98
  44784c:	bl	479f14 <feof@plt+0x76674>
  447850:	str	x0, [x19, #320]
  447854:	add	x8, x19, #0x148
  447858:	mov	x3, x20
  44785c:	mov	x4, x23
  447860:	ldp	x20, x19, [sp, #48]
  447864:	ldp	x22, x21, [sp, #32]
  447868:	ldr	x23, [sp, #16]
  44786c:	mov	x0, x8
  447870:	mov	x1, xzr
  447874:	mov	x2, xzr
  447878:	ldp	x29, x30, [sp], #64
  44787c:	b	47b98c <_obstack_begin@@Base>
  447880:	ldr	x8, [x0, #8]
  447884:	cbz	x8, 447894 <feof@plt+0x43ff4>
  447888:	ldr	x8, [x0, #24]
  44788c:	ldr	x0, [x8]
  447890:	b	47adac <feof@plt+0x7750c>
  447894:	ldr	x8, [x0, #24]
  447898:	ldr	x0, [x8, #8]!
  44789c:	b	47adac <feof@plt+0x7750c>
  4478a0:	stp	x29, x30, [sp, #-16]!
  4478a4:	ldr	x8, [x0, #8]
  4478a8:	mov	x29, sp
  4478ac:	cbz	x8, 4478b8 <feof@plt+0x44018>
  4478b0:	ldr	x8, [x0, #24]
  4478b4:	b	4478c0 <feof@plt+0x44020>
  4478b8:	ldr	x8, [x0, #24]
  4478bc:	add	x8, x8, #0x8
  4478c0:	ldr	x0, [x8]
  4478c4:	bl	479ca4 <feof@plt+0x76404>
  4478c8:	cmp	w0, #0x0
  4478cc:	cset	w0, eq  // eq = none
  4478d0:	ldp	x29, x30, [sp], #16
  4478d4:	ret
  4478d8:	stp	x29, x30, [sp, #-16]!
  4478dc:	mov	x29, sp
  4478e0:	bl	479ca4 <feof@plt+0x76404>
  4478e4:	cmp	w0, #0x0
  4478e8:	cset	w0, eq  // eq = none
  4478ec:	ldp	x29, x30, [sp], #16
  4478f0:	ret
  4478f4:	stp	x29, x30, [sp, #-32]!
  4478f8:	stp	x20, x19, [sp, #16]
  4478fc:	mov	x19, x0
  447900:	ldr	x0, [x0, #296]
  447904:	mov	x29, sp
  447908:	bl	47a428 <feof@plt+0x76b88>
  44790c:	ldr	x0, [x19, #304]
  447910:	bl	47a428 <feof@plt+0x76b88>
  447914:	ldr	x0, [x19, #320]
  447918:	bl	47a428 <feof@plt+0x76b88>
  44791c:	add	x0, x19, #0x148
  447920:	mov	x1, xzr
  447924:	bl	47bc70 <_obstack_free@@Base>
  447928:	ldr	x0, [x19, #312]
  44792c:	cbz	x0, 447940 <feof@plt+0x440a0>
  447930:	ldr	x20, [x0, #8]
  447934:	bl	4031d0 <free@plt>
  447938:	mov	x0, x20
  44793c:	cbnz	x20, 447930 <feof@plt+0x44090>
  447940:	ldr	x19, [x19, #280]
  447944:	cbz	x19, 447974 <feof@plt+0x440d4>
  447948:	ldr	x0, [x19, #48]
  44794c:	ldr	x20, [x19, #32]
  447950:	bl	4031d0 <free@plt>
  447954:	ldr	x0, [x19]
  447958:	bl	4031d0 <free@plt>
  44795c:	ldr	x0, [x19, #8]
  447960:	bl	4031d0 <free@plt>
  447964:	mov	x0, x19
  447968:	bl	4031d0 <free@plt>
  44796c:	mov	x19, x20
  447970:	cbnz	x20, 447948 <feof@plt+0x440a8>
  447974:	ldp	x20, x19, [sp, #16]
  447978:	ldp	x29, x30, [sp], #32
  44797c:	ret
  447980:	stp	x29, x30, [sp, #-64]!
  447984:	str	x23, [sp, #16]
  447988:	stp	x22, x21, [sp, #32]
  44798c:	stp	x20, x19, [sp, #48]
  447990:	mov	x29, sp
  447994:	mov	x19, x0
  447998:	bl	4478f4 <feof@plt+0x44054>
  44799c:	adrp	x20, 447000 <feof@plt+0x43760>
  4479a0:	adrp	x21, 447000 <feof@plt+0x43760>
  4479a4:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x12fc>
  4479a8:	adrp	x23, 403000 <readlink@plt>
  4479ac:	add	x20, x20, #0x880
  4479b0:	add	x21, x21, #0x8a0
  4479b4:	add	x22, x22, #0xcc
  4479b8:	add	x23, x23, #0x1d0
  4479bc:	mov	w0, #0x7f                  	// #127
  4479c0:	mov	x1, x20
  4479c4:	mov	x2, x21
  4479c8:	mov	x3, xzr
  4479cc:	mov	x4, x22
  4479d0:	mov	x5, x23
  4479d4:	str	xzr, [x19, #312]
  4479d8:	str	xzr, [x19, #280]
  4479dc:	bl	479f14 <feof@plt+0x76674>
  4479e0:	str	x0, [x19, #296]
  4479e4:	mov	w0, #0x7f                  	// #127
  4479e8:	mov	x1, x20
  4479ec:	mov	x2, x21
  4479f0:	mov	x3, xzr
  4479f4:	mov	x4, x22
  4479f8:	mov	x5, x23
  4479fc:	bl	479f14 <feof@plt+0x76674>
  447a00:	str	x0, [x19, #304]
  447a04:	mov	w0, #0xff0                 	// #4080
  447a08:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  447a0c:	str	wzr, [x0]
  447a10:	ldr	x8, [x19, #312]
  447a14:	adrp	x1, 47a000 <feof@plt+0x76760>
  447a18:	adrp	x2, 447000 <feof@plt+0x43760>
  447a1c:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x12fc>
  447a20:	str	x8, [x0, #8]
  447a24:	str	x0, [x19, #312]
  447a28:	add	x1, x1, #0xdac
  447a2c:	add	x2, x2, #0x8d8
  447a30:	mov	w0, #0x7f                  	// #127
  447a34:	mov	x3, xzr
  447a38:	mov	x4, x22
  447a3c:	mov	x5, x23
  447a40:	add	x20, x20, #0x98
  447a44:	bl	479f14 <feof@plt+0x76674>
  447a48:	str	x0, [x19, #320]
  447a4c:	add	x8, x19, #0x148
  447a50:	mov	x3, x20
  447a54:	mov	x4, x23
  447a58:	ldp	x20, x19, [sp, #48]
  447a5c:	ldp	x22, x21, [sp, #32]
  447a60:	ldr	x23, [sp, #16]
  447a64:	mov	x0, x8
  447a68:	mov	x1, xzr
  447a6c:	mov	x2, xzr
  447a70:	ldp	x29, x30, [sp], #64
  447a74:	b	47b98c <_obstack_begin@@Base>
  447a78:	ldr	x8, [x0]
  447a7c:	mov	w3, #0x1                   	// #1
  447a80:	mov	w4, wzr
  447a84:	mov	w5, wzr
  447a88:	ldr	x8, [x8, #80]
  447a8c:	mov	w6, wzr
  447a90:	ldr	x2, [x8, #64]
  447a94:	b	44659c <feof@plt+0x42cfc>
  447a98:	ldr	x8, [x0, #40]
  447a9c:	cmp	w2, #0x0
  447aa0:	mov	w10, #0x1                   	// #1
  447aa4:	cinc	w10, w10, ne  // ne = any
  447aa8:	cmp	w1, #0x0
  447aac:	csel	w4, wzr, w10, eq  // eq = none
  447ab0:	ldr	w10, [x8, #12]
  447ab4:	ldr	x11, [x0]
  447ab8:	ldr	x12, [x8]
  447abc:	mov	w9, #0x18                  	// #24
  447ac0:	sub	w10, w10, #0x1
  447ac4:	strb	w4, [x11, #106]
  447ac8:	smaddl	x9, w10, w9, x12
  447acc:	ldr	w8, [x8, #60]
  447ad0:	ldr	w10, [x9]
  447ad4:	ldrb	w11, [x9, #6]
  447ad8:	ldr	w12, [x9, #16]
  447adc:	ldr	x2, [x9, #8]
  447ae0:	sub	w8, w8, w10
  447ae4:	lsr	w8, w8, w11
  447ae8:	add	w3, w8, w12
  447aec:	mov	w1, #0x2                   	// #2
  447af0:	b	43e8cc <feof@plt+0x3b02c>
  447af4:	mov	w3, #0x1                   	// #1
  447af8:	mov	w4, wzr
  447afc:	b	43e8cc <feof@plt+0x3b02c>
  447b00:	sub	sp, sp, #0x40
  447b04:	stp	x29, x30, [sp, #16]
  447b08:	stp	x20, x19, [sp, #48]
  447b0c:	str	xzr, [sp]
  447b10:	mov	x19, x0
  447b14:	ldr	x0, [x0, #296]
  447b18:	str	x21, [sp, #32]
  447b1c:	add	x29, sp, #0x10
  447b20:	bl	479f08 <feof@plt+0x76668>
  447b24:	str	x0, [sp, #8]
  447b28:	ldr	x0, [x19, #296]
  447b2c:	adrp	x1, 447000 <feof@plt+0x43760>
  447b30:	add	x1, x1, #0xbe8
  447b34:	mov	x2, sp
  447b38:	bl	47acfc <feof@plt+0x7745c>
  447b3c:	ldr	x0, [sp]
  447b40:	cbz	x0, 447bd4 <feof@plt+0x44334>
  447b44:	ldr	x1, [sp, #8]
  447b48:	adrp	x3, 447000 <feof@plt+0x43760>
  447b4c:	add	x3, x3, #0xc68
  447b50:	mov	w2, #0x8                   	// #8
  447b54:	bl	403250 <qsort@plt>
  447b58:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  447b5c:	adrp	x1, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  447b60:	add	x0, x0, #0x347
  447b64:	add	x1, x1, #0xebc
  447b68:	bl	4033b0 <dgettext@plt>
  447b6c:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  447b70:	ldr	x1, [x19, #1096]
  447b74:	bl	403200 <fputs_unlocked@plt>
  447b78:	ldp	x0, x8, [sp]
  447b7c:	cbz	x8, 447bd0 <feof@plt+0x44330>
  447b80:	mov	x20, xzr
  447b84:	mov	w21, #0xa                   	// #10
  447b88:	ldr	x0, [x0, x20, lsl #3]
  447b8c:	ldr	x1, [x19, #1096]
  447b90:	bl	403200 <fputs_unlocked@plt>
  447b94:	ldr	x0, [x19, #1096]
  447b98:	ldp	x8, x9, [x0, #40]
  447b9c:	cmp	x8, x9
  447ba0:	b.cs	447bc4 <feof@plt+0x44324>  // b.hs, b.nlast
  447ba4:	add	x9, x8, #0x1
  447ba8:	str	x9, [x0, #40]
  447bac:	strb	w21, [x8]
  447bb0:	ldp	x0, x8, [sp]
  447bb4:	add	x20, x20, #0x1
  447bb8:	cmp	x20, x8
  447bbc:	b.cc	447b88 <feof@plt+0x442e8>  // b.lo, b.ul, b.last
  447bc0:	b	447bd0 <feof@plt+0x44330>
  447bc4:	mov	w1, #0xa                   	// #10
  447bc8:	bl	403140 <__overflow@plt>
  447bcc:	b	447bb0 <feof@plt+0x44310>
  447bd0:	bl	4031d0 <free@plt>
  447bd4:	ldp	x20, x19, [sp, #48]
  447bd8:	ldr	x21, [sp, #32]
  447bdc:	ldp	x29, x30, [sp, #16]
  447be0:	add	sp, sp, #0x40
  447be4:	ret
  447be8:	stp	x29, x30, [sp, #-32]!
  447bec:	stp	x20, x19, [sp, #16]
  447bf0:	ldr	x8, [x0]
  447bf4:	mov	x29, sp
  447bf8:	ldr	x9, [x8, #8]
  447bfc:	cbz	x9, 447c58 <feof@plt+0x443b8>
  447c00:	ldr	x20, [x8, #24]
  447c04:	ldrb	w8, [x20, #210]
  447c08:	cbnz	w8, 447c58 <feof@plt+0x443b8>
  447c0c:	ldr	x8, [x20, #56]
  447c10:	cbnz	x8, 447c58 <feof@plt+0x443b8>
  447c14:	ldrh	w8, [x20, #208]
  447c18:	cmp	w8, #0x1
  447c1c:	b.ne	447c58 <feof@plt+0x443b8>  // b.any
  447c20:	ldrb	w8, [x20, #212]
  447c24:	cbnz	w8, 447c58 <feof@plt+0x443b8>
  447c28:	ldp	x8, x0, [x1]
  447c2c:	mov	x19, x1
  447c30:	cbnz	x8, 447c48 <feof@plt+0x443a8>
  447c34:	mov	w1, #0x8                   	// #8
  447c38:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  447c3c:	mov	x8, x0
  447c40:	mov	x0, xzr
  447c44:	stp	x8, xzr, [x19]
  447c48:	ldr	x9, [x20, #8]
  447c4c:	add	x10, x0, #0x1
  447c50:	str	x10, [x19, #8]
  447c54:	str	x9, [x8, x0, lsl #3]
  447c58:	ldp	x20, x19, [sp, #16]
  447c5c:	mov	w0, #0x1                   	// #1
  447c60:	ldp	x29, x30, [sp], #32
  447c64:	ret
  447c68:	ldr	x0, [x0]
  447c6c:	ldr	x1, [x1]
  447c70:	b	403640 <strcmp@plt>
  447c74:	stp	x29, x30, [sp, #-48]!
  447c78:	mov	w3, wzr
  447c7c:	str	x21, [sp, #16]
  447c80:	stp	x20, x19, [sp, #32]
  447c84:	mov	x29, sp
  447c88:	mov	w20, w2
  447c8c:	mov	x21, x1
  447c90:	mov	x19, x0
  447c94:	bl	447560 <feof@plt+0x43cc0>
  447c98:	cbz	x0, 447cc4 <feof@plt+0x44424>
  447c9c:	mov	x2, x0
  447ca0:	mov	x0, x19
  447ca4:	mov	x1, x21
  447ca8:	mov	w3, wzr
  447cac:	mov	w4, w20
  447cb0:	mov	w5, wzr
  447cb4:	mov	w6, wzr
  447cb8:	bl	44659c <feof@plt+0x42cfc>
  447cbc:	ldr	w8, [x0, #204]
  447cc0:	cbz	w8, 447ccc <feof@plt+0x4442c>
  447cc4:	mov	w0, #0xffffffff            	// #-1
  447cc8:	b	447d00 <feof@plt+0x44460>
  447ccc:	mov	x20, x0
  447cd0:	ldr	w0, [x0, #200]
  447cd4:	cmn	w0, #0x1
  447cd8:	b.eq	447ce8 <feof@plt+0x44448>  // b.none
  447cdc:	bl	403630 <close@plt>
  447ce0:	mov	w8, #0xffffffff            	// #-1
  447ce4:	str	w8, [x20, #200]
  447ce8:	ldr	x8, [x19]
  447cec:	ldr	x9, [x20, #160]
  447cf0:	ldr	x8, [x8, #80]
  447cf4:	ldr	x8, [x8, #160]
  447cf8:	cmp	x9, x8
  447cfc:	cset	w0, gt
  447d00:	ldp	x20, x19, [sp, #32]
  447d04:	ldr	x21, [sp, #16]
  447d08:	ldp	x29, x30, [sp], #48
  447d0c:	ret
  447d10:	stp	x29, x30, [sp, #-32]!
  447d14:	stp	x20, x19, [sp, #16]
  447d18:	ldr	x9, [x0, #488]
  447d1c:	ldr	x8, [x0, #448]
  447d20:	mov	x19, x0
  447d24:	mov	x20, x1
  447d28:	ldr	x9, [x9, #16]
  447d2c:	mov	x29, sp
  447d30:	cmp	x8, x9
  447d34:	b.eq	447d3c <feof@plt+0x4449c>  // b.none
  447d38:	stur	wzr, [x8, #-24]
  447d3c:	ldrb	w8, [x20]
  447d40:	cmp	w8, #0x2f
  447d44:	b.ne	447d50 <feof@plt+0x444b0>  // b.any
  447d48:	add	x2, x19, #0xd8
  447d4c:	b	447d6c <feof@plt+0x444cc>
  447d50:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x32fc>
  447d54:	add	x1, x1, #0x8b1
  447d58:	mov	x0, x19
  447d5c:	mov	w2, wzr
  447d60:	bl	4485a4 <feof@plt+0x44d04>
  447d64:	mov	x2, x0
  447d68:	cbz	x0, 447da4 <feof@plt+0x44504>
  447d6c:	mov	x0, x19
  447d70:	mov	x1, x20
  447d74:	mov	w3, wzr
  447d78:	mov	w4, wzr
  447d7c:	mov	w5, wzr
  447d80:	mov	w6, wzr
  447d84:	bl	44659c <feof@plt+0x42cfc>
  447d88:	mov	x1, x0
  447d8c:	mov	x0, x19
  447d90:	ldp	x20, x19, [sp, #16]
  447d94:	mov	w2, wzr
  447d98:	mov	w3, wzr
  447d9c:	ldp	x29, x30, [sp], #32
  447da0:	b	446fd4 <feof@plt+0x43734>
  447da4:	ldp	x20, x19, [sp, #16]
  447da8:	ldp	x29, x30, [sp], #32
  447dac:	ret
  447db0:	stp	x29, x30, [sp, #-32]!
  447db4:	ldrb	w8, [x1]
  447db8:	str	x19, [sp, #16]
  447dbc:	mov	x3, x1
  447dc0:	mov	x19, x0
  447dc4:	cmp	w8, #0x2f
  447dc8:	mov	x29, sp
  447dcc:	b.ne	447dd8 <feof@plt+0x44538>  // b.any
  447dd0:	add	x2, x19, #0xd8
  447dd4:	b	447de0 <feof@plt+0x44540>
  447dd8:	ldr	x2, [x19, #208]
  447ddc:	cbz	x2, 447e1c <feof@plt+0x4457c>
  447de0:	mov	w4, #0x1                   	// #1
  447de4:	mov	w5, #0x1                   	// #1
  447de8:	mov	x0, x19
  447dec:	mov	x1, x3
  447df0:	mov	w3, wzr
  447df4:	mov	w6, wzr
  447df8:	bl	44659c <feof@plt+0x42cfc>
  447dfc:	cbz	x0, 447e30 <feof@plt+0x44590>
  447e00:	mov	x1, x0
  447e04:	mov	x0, x19
  447e08:	ldr	x19, [sp, #16]
  447e0c:	mov	w2, wzr
  447e10:	mov	w3, wzr
  447e14:	ldp	x29, x30, [sp], #32
  447e18:	b	446fd4 <feof@plt+0x43734>
  447e1c:	adrp	x2, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  447e20:	add	x2, x2, #0xf30
  447e24:	mov	w1, #0x3                   	// #3
  447e28:	mov	x0, x19
  447e2c:	bl	4424f8 <feof@plt+0x3ec58>
  447e30:	ldr	x19, [sp, #16]
  447e34:	mov	w0, wzr
  447e38:	ldp	x29, x30, [sp], #32
  447e3c:	ret
  447e40:	ldrb	w8, [x0, #440]
  447e44:	cbz	w8, 447e50 <feof@plt+0x445b0>
  447e48:	ldr	x8, [x1, #56]
  447e4c:	cbz	x8, 447e6c <feof@plt+0x445cc>
  447e50:	strb	wzr, [x0, #440]
  447e54:	cbz	x2, 447e7c <feof@plt+0x445dc>
  447e58:	ldr	x8, [x1, #48]
  447e5c:	cmp	x8, x2
  447e60:	b.eq	447e80 <feof@plt+0x445e0>  // b.none
  447e64:	mov	x0, x2
  447e68:	b	4031d0 <free@plt>
  447e6c:	ldr	x8, [x0, #424]
  447e70:	str	x8, [x1, #56]
  447e74:	strb	wzr, [x0, #440]
  447e78:	cbnz	x2, 447e58 <feof@plt+0x445b8>
  447e7c:	ret
  447e80:	strb	wzr, [x1, #213]
  447e84:	stp	xzr, xzr, [x1, #40]
  447e88:	mov	x0, x2
  447e8c:	b	4031d0 <free@plt>
  447e90:	ldr	x0, [x0]
  447e94:	ret
  447e98:	add	x0, x0, #0x48
  447e9c:	ret
  447ea0:	stp	x29, x30, [sp, #-48]!
  447ea4:	cmp	w3, #0x0
  447ea8:	cset	w8, ne  // ne = any
  447eac:	str	x21, [sp, #16]
  447eb0:	stp	x20, x19, [sp, #32]
  447eb4:	mov	x29, sp
  447eb8:	stp	x1, x1, [x0, #200]
  447ebc:	strb	w8, [x0, #416]
  447ec0:	cbz	x1, 447efc <feof@plt+0x4465c>
  447ec4:	mov	x19, x2
  447ec8:	mov	x20, x1
  447ecc:	mov	x21, x0
  447ed0:	b	447edc <feof@plt+0x4463c>
  447ed4:	ldr	x20, [x20]
  447ed8:	cbz	x20, 447efc <feof@plt+0x4465c>
  447edc:	ldr	x0, [x20, #8]
  447ee0:	str	xzr, [x20, #32]
  447ee4:	bl	4030b0 <strlen@plt>
  447ee8:	cmp	x20, x19
  447eec:	str	w0, [x20, #16]
  447ef0:	b.ne	447ed4 <feof@plt+0x44634>  // b.any
  447ef4:	str	x19, [x21, #208]
  447ef8:	b	447ed4 <feof@plt+0x44634>
  447efc:	ldp	x20, x19, [sp, #32]
  447f00:	ldr	x21, [sp, #16]
  447f04:	ldp	x29, x30, [sp], #48
  447f08:	ret
  447f0c:	ldr	x0, [x0, #8]
  447f10:	ret
  447f14:	ldr	x0, [x0, #64]
  447f18:	ret
  447f1c:	ldr	x0, [x0]
  447f20:	ret
  447f24:	ldr	x0, [x0, #80]
  447f28:	ret
  447f2c:	ldr	x0, [x0, #72]
  447f30:	ret
  447f34:	stp	x29, x30, [sp, #-96]!
  447f38:	stp	x26, x25, [sp, #32]
  447f3c:	stp	x24, x23, [sp, #48]
  447f40:	stp	x22, x21, [sp, #64]
  447f44:	stp	x20, x19, [sp, #80]
  447f48:	ldr	x8, [x0, #280]
  447f4c:	mov	x21, x0
  447f50:	mov	x19, x1
  447f54:	mov	w1, #0x10                  	// #16
  447f58:	str	x27, [sp, #16]
  447f5c:	mov	x29, sp
  447f60:	cbz	x8, 447f70 <feof@plt+0x446d0>
  447f64:	ldr	x8, [x8, #32]
  447f68:	add	x1, x1, #0x20
  447f6c:	cbnz	x8, 447f64 <feof@plt+0x446c4>
  447f70:	mov	w0, #0x1                   	// #1
  447f74:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  447f78:	str	xzr, [x0]
  447f7c:	strb	wzr, [x0, #8]
  447f80:	ldr	x22, [x21, #280]
  447f84:	mov	x20, x0
  447f88:	cbz	x22, 448048 <feof@plt+0x447a8>
  447f8c:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x32fc>
  447f90:	add	x25, x20, #0x10
  447f94:	add	x23, x23, #0x6c3
  447f98:	b	447fc0 <feof@plt+0x44720>
  447f9c:	ldr	x0, [x22, #40]
  447fa0:	ldr	x1, [x22, #120]
  447fa4:	add	x2, x8, #0x8
  447fa8:	bl	478f6c <feof@plt+0x756cc>
  447fac:	ldr	x8, [x22, #120]
  447fb0:	lsl	x9, x26, #5
  447fb4:	str	x8, [x25, x9]
  447fb8:	ldr	x22, [x22, #32]
  447fbc:	cbz	x22, 448040 <feof@plt+0x447a0>
  447fc0:	ldrb	w8, [x22, #211]
  447fc4:	cbnz	w8, 447fb8 <feof@plt+0x44718>
  447fc8:	ldr	w8, [x22, #204]
  447fcc:	cbnz	w8, 447fb8 <feof@plt+0x44718>
  447fd0:	ldrh	w8, [x22, #208]
  447fd4:	cbz	w8, 447fb8 <feof@plt+0x44718>
  447fd8:	ldr	x26, [x20]
  447fdc:	add	x8, x26, #0x1
  447fe0:	str	x8, [x20]
  447fe4:	ldrb	w9, [x22, #210]
  447fe8:	add	x8, x25, x26, lsl #5
  447fec:	strb	w9, [x8, #24]
  447ff0:	ldrb	w10, [x20, #8]
  447ff4:	orr	w9, w10, w9
  447ff8:	strb	w9, [x20, #8]
  447ffc:	ldrb	w9, [x22, #213]
  448000:	cbnz	w9, 447f9c <feof@plt+0x446fc>
  448004:	ldr	w27, [x22, #200]
  448008:	mov	x0, x22
  44800c:	bl	4480d0 <feof@plt+0x44830>
  448010:	tbz	w0, #0, 4480ac <feof@plt+0x4480c>
  448014:	ldr	w0, [x22, #200]
  448018:	mov	x1, x23
  44801c:	bl	479df8 <feof@plt+0x76558>
  448020:	add	x8, x25, x26, lsl #5
  448024:	add	x1, x8, #0x8
  448028:	mov	x24, x0
  44802c:	bl	478cdc <feof@plt+0x7543c>
  448030:	mov	x0, x24
  448034:	bl	403150 <fclose@plt>
  448038:	str	w27, [x22, #200]
  44803c:	b	447fac <feof@plt+0x4470c>
  448040:	ldr	x1, [x20]
  448044:	b	44804c <feof@plt+0x447ac>
  448048:	mov	x1, xzr
  44804c:	adrp	x3, 448000 <feof@plt+0x44760>
  448050:	mov	w21, #0x10                  	// #16
  448054:	add	x0, x20, #0x10
  448058:	add	x3, x3, #0x19c
  44805c:	mov	w2, #0x20                  	// #32
  448060:	bfi	x21, x1, #5, #59
  448064:	bl	403250 <qsort@plt>
  448068:	mov	w2, #0x1                   	// #1
  44806c:	mov	x0, x20
  448070:	mov	x1, x21
  448074:	mov	x3, x19
  448078:	bl	403740 <fwrite_unlocked@plt>
  44807c:	cmp	x0, #0x1
  448080:	mov	x0, x20
  448084:	cset	w19, eq  // eq = none
  448088:	bl	4031d0 <free@plt>
  44808c:	mov	w0, w19
  448090:	ldp	x20, x19, [sp, #80]
  448094:	ldp	x22, x21, [sp, #64]
  448098:	ldp	x24, x23, [sp, #48]
  44809c:	ldp	x26, x25, [sp, #32]
  4480a0:	ldr	x27, [sp, #16]
  4480a4:	ldp	x29, x30, [sp], #96
  4480a8:	ret
  4480ac:	mov	x0, x21
  4480b0:	mov	x1, x22
  4480b4:	mov	w2, wzr
  4480b8:	mov	w3, wzr
  4480bc:	bl	446ec8 <feof@plt+0x43628>
  4480c0:	mov	x0, x20
  4480c4:	bl	4031d0 <free@plt>
  4480c8:	mov	w19, wzr
  4480cc:	b	44808c <feof@plt+0x447ec>
  4480d0:	stp	x29, x30, [sp, #-32]!
  4480d4:	stp	x20, x19, [sp, #16]
  4480d8:	mov	x19, x0
  4480dc:	ldr	x0, [x0, #8]
  4480e0:	mov	x29, sp
  4480e4:	ldrb	w8, [x0]
  4480e8:	cbz	w8, 448110 <feof@plt+0x44870>
  4480ec:	mov	w1, #0x100                 	// #256
  4480f0:	mov	w2, #0x1b6                 	// #438
  4480f4:	bl	403130 <open@plt>
  4480f8:	mov	x20, x19
  4480fc:	cmn	w0, #0x1
  448100:	str	w0, [x20, #200]!
  448104:	b.eq	448174 <feof@plt+0x448d4>  // b.none
  448108:	mov	w1, w0
  44810c:	b	44811c <feof@plt+0x4487c>
  448110:	mov	x20, x19
  448114:	mov	w1, wzr
  448118:	str	wzr, [x20, #200]!
  44811c:	add	x2, x19, #0x48
  448120:	mov	w0, wzr
  448124:	bl	402f80 <__fxstat@plt>
  448128:	cbnz	w0, 448148 <feof@plt+0x448a8>
  44812c:	ldr	w8, [x19, #88]
  448130:	and	w8, w8, #0xf000
  448134:	cmp	w8, #0x4, lsl #12
  448138:	b.ne	448190 <feof@plt+0x448f0>  // b.any
  44813c:	bl	4035c0 <__errno_location@plt>
  448140:	mov	w8, #0x2                   	// #2
  448144:	str	w8, [x0]
  448148:	ldr	w0, [x20]
  44814c:	bl	403630 <close@plt>
  448150:	mov	w8, #0xffffffff            	// #-1
  448154:	str	w8, [x20]
  448158:	bl	4035c0 <__errno_location@plt>
  44815c:	ldr	w8, [x0]
  448160:	mov	w0, wzr
  448164:	str	w8, [x19, #204]
  448168:	ldp	x20, x19, [sp, #16]
  44816c:	ldp	x29, x30, [sp], #32
  448170:	ret
  448174:	bl	4035c0 <__errno_location@plt>
  448178:	ldr	w8, [x0]
  44817c:	cmp	w8, #0x14
  448180:	b.ne	44815c <feof@plt+0x448bc>  // b.any
  448184:	mov	w8, #0x2                   	// #2
  448188:	str	w8, [x0]
  44818c:	b	44815c <feof@plt+0x448bc>
  448190:	mov	w8, wzr
  448194:	mov	w0, #0x1                   	// #1
  448198:	b	448164 <feof@plt+0x448c4>
  44819c:	ldr	x8, [x0]
  4481a0:	ldr	x9, [x1]
  4481a4:	rev	x8, x8
  4481a8:	rev	x9, x9
  4481ac:	cmp	x8, x9
  4481b0:	b.ne	448204 <feof@plt+0x44964>  // b.any
  4481b4:	ldr	x8, [x0, #8]
  4481b8:	ldr	x9, [x1, #8]
  4481bc:	rev	x8, x8
  4481c0:	rev	x9, x9
  4481c4:	cmp	x8, x9
  4481c8:	b.ne	448204 <feof@plt+0x44964>  // b.any
  4481cc:	ldr	x8, [x0, #16]
  4481d0:	ldr	x9, [x1, #16]
  4481d4:	rev	x8, x8
  4481d8:	rev	x9, x9
  4481dc:	cmp	x8, x9
  4481e0:	b.ne	448204 <feof@plt+0x44964>  // b.any
  4481e4:	ldr	x8, [x0, #24]
  4481e8:	ldr	x9, [x1, #24]
  4481ec:	rev	x8, x8
  4481f0:	rev	x9, x9
  4481f4:	cmp	x8, x9
  4481f8:	b.ne	448204 <feof@plt+0x44964>  // b.any
  4481fc:	mov	w0, wzr
  448200:	ret
  448204:	cmp	x8, x9
  448208:	mov	w8, #0xffffffff            	// #-1
  44820c:	cneg	w0, w8, cs  // cs = hs, nlast
  448210:	ret
  448214:	sub	sp, sp, #0x50
  448218:	stp	x20, x19, [sp, #64]
  44821c:	mov	x19, x1
  448220:	mov	x0, sp
  448224:	mov	w1, #0x10                  	// #16
  448228:	mov	w2, #0x1                   	// #1
  44822c:	mov	x3, x19
  448230:	stp	x29, x30, [sp, #48]
  448234:	add	x29, sp, #0x30
  448238:	bl	4031e0 <fread_unlocked@plt>
  44823c:	cmp	x0, #0x1
  448240:	b.ne	448280 <feof@plt+0x449e0>  // b.any
  448244:	ldr	x20, [sp]
  448248:	mov	w0, #0x10                  	// #16
  44824c:	bfi	x0, x20, #5, #59
  448250:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  448254:	ldr	q0, [sp]
  448258:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  44825c:	str	x0, [x8, #440]
  448260:	mov	w1, #0x20                  	// #32
  448264:	str	q0, [x0], #16
  448268:	mov	x2, x20
  44826c:	mov	x3, x19
  448270:	bl	4031e0 <fread_unlocked@plt>
  448274:	cmp	x0, x20
  448278:	cset	w0, eq  // eq = none
  44827c:	b	448284 <feof@plt+0x449e4>
  448280:	mov	w0, wzr
  448284:	ldp	x20, x19, [sp, #64]
  448288:	ldp	x29, x30, [sp, #48]
  44828c:	add	sp, sp, #0x50
  448290:	ret
  448294:	stp	x29, x30, [sp, #-48]!
  448298:	str	x21, [sp, #16]
  44829c:	stp	x20, x19, [sp, #32]
  4482a0:	mov	x29, sp
  4482a4:	mov	w19, w2
  4482a8:	mov	x20, x1
  4482ac:	mov	x21, x0
  4482b0:	bl	447560 <feof@plt+0x43cc0>
  4482b4:	mov	x2, x0
  4482b8:	mov	x0, x21
  4482bc:	mov	x1, x20
  4482c0:	mov	w3, wzr
  4482c4:	mov	w4, w19
  4482c8:	mov	w5, wzr
  4482cc:	mov	w6, wzr
  4482d0:	bl	44659c <feof@plt+0x42cfc>
  4482d4:	ldr	w8, [x0, #204]
  4482d8:	ldp	x20, x19, [sp, #32]
  4482dc:	ldr	x21, [sp, #16]
  4482e0:	cmp	w8, #0x2
  4482e4:	cset	w0, ne  // ne = any
  4482e8:	ldp	x29, x30, [sp], #48
  4482ec:	ret
  4482f0:	stp	x29, x30, [sp, #-96]!
  4482f4:	stp	x28, x27, [sp, #16]
  4482f8:	stp	x26, x25, [sp, #32]
  4482fc:	stp	x24, x23, [sp, #48]
  448300:	stp	x22, x21, [sp, #64]
  448304:	stp	x20, x19, [sp, #80]
  448308:	mov	x29, sp
  44830c:	sub	sp, sp, #0x10
  448310:	ldr	w21, [x0, #16]
  448314:	mov	x8, sp
  448318:	mov	x27, x0
  44831c:	add	x9, x21, #0x1b
  448320:	and	x9, x9, #0x1fffffff0
  448324:	sub	x20, x8, x9
  448328:	mov	sp, x20
  44832c:	ldr	x1, [x0, #8]
  448330:	mov	x0, x20
  448334:	mov	x2, x21
  448338:	bl	402fc0 <memcpy@plt>
  44833c:	cbz	w21, 448364 <feof@plt+0x44ac4>
  448340:	add	x8, x21, x20
  448344:	ldurb	w8, [x8, #-1]
  448348:	cmp	w8, #0x2f
  44834c:	b.eq	448368 <feof@plt+0x44ac8>  // b.none
  448350:	add	x8, x21, #0x1
  448354:	mov	w9, #0x2f                  	// #47
  448358:	strb	w9, [x20, x21]
  44835c:	mov	x21, x8
  448360:	b	448368 <feof@plt+0x44ac8>
  448364:	mov	x21, xzr
  448368:	adrp	x8, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  44836c:	add	x8, x8, #0xee8
  448370:	ldr	x8, [x8]
  448374:	mov	w10, #0x6367                	// #25447
  448378:	adrp	x1, 4c8000 <_obstack_memory_used@@Base+0x4c2fc>
  44837c:	add	x9, x20, x21
  448380:	movk	w10, #0x63, lsl #16
  448384:	add	x1, x1, #0x639
  448388:	mov	x0, x20
  44838c:	str	x8, [x9]
  448390:	stur	w10, [x9, #7]
  448394:	bl	479dc4 <feof@plt+0x76524>
  448398:	mov	x20, x0
  44839c:	mov	w0, #0x48                  	// #72
  4483a0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4483a4:	str	x0, [x27, #32]
  4483a8:	cbz	x20, 44857c <feof@plt+0x44cdc>
  4483ac:	adrp	x26, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  4483b0:	mov	x19, xzr
  4483b4:	mov	w25, #0x9                   	// #9
  4483b8:	add	x26, x26, #0x4a2
  4483bc:	mov	x28, x19
  4483c0:	ldp	x8, x9, [x20, #8]
  4483c4:	cmp	x8, x9
  4483c8:	b.cs	4483ec <feof@plt+0x44b4c>  // b.hs, b.nlast
  4483cc:	add	x9, x8, #0x1
  4483d0:	str	x9, [x20, #8]
  4483d4:	ldrb	w21, [x8]
  4483d8:	and	w8, w21, #0xff
  4483dc:	ldrh	w8, [x26, w8, uxtw #1]
  4483e0:	tst	w8, #0xc00
  4483e4:	b.ne	4483c0 <feof@plt+0x44b20>  // b.any
  4483e8:	b	448404 <feof@plt+0x44b64>
  4483ec:	mov	x0, x20
  4483f0:	bl	4035e0 <__uflow@plt>
  4483f4:	mov	w21, w0
  4483f8:	cmn	w0, #0x1
  4483fc:	b.ne	4483d8 <feof@plt+0x44b38>  // b.any
  448400:	b	44856c <feof@plt+0x44ccc>
  448404:	add	x19, x28, #0x2
  448408:	cmp	x19, x25
  44840c:	b.ls	448424 <feof@plt+0x44b84>  // b.plast
  448410:	ldr	x0, [x27, #32]
  448414:	add	x25, x25, #0x8
  448418:	lsl	x1, x25, #3
  44841c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  448420:	str	x0, [x27, #32]
  448424:	mov	w0, w21
  448428:	mov	x1, x20
  44842c:	bl	4486a8 <feof@plt+0x44e08>
  448430:	ldr	x8, [x27, #32]
  448434:	str	x0, [x8, x28, lsl #3]
  448438:	ldp	x8, x9, [x20, #8]
  44843c:	cmp	x8, x9
  448440:	b.cs	448460 <feof@plt+0x44bc0>  // b.hs, b.nlast
  448444:	add	x9, x8, #0x1
  448448:	str	x9, [x20, #8]
  44844c:	ldrb	w0, [x8]
  448450:	and	w8, w0, #0xff
  448454:	ldrh	w8, [x26, w8, uxtw #1]
  448458:	tbnz	w8, #0, 448438 <feof@plt+0x44b98>
  44845c:	b	448470 <feof@plt+0x44bd0>
  448460:	mov	x0, x20
  448464:	bl	4035e0 <__uflow@plt>
  448468:	cmn	w0, #0x1
  44846c:	b.ne	448450 <feof@plt+0x44bb0>  // b.any
  448470:	mov	x1, x20
  448474:	bl	4486a8 <feof@plt+0x44e08>
  448478:	ldrb	w8, [x0]
  44847c:	mov	x21, x0
  448480:	cmp	w8, #0x2f
  448484:	b.ne	44849c <feof@plt+0x44bfc>  // b.any
  448488:	ldr	x8, [x27, #32]
  44848c:	lsl	x9, x28, #3
  448490:	orr	x9, x9, #0x8
  448494:	str	x21, [x8, x9]
  448498:	b	44852c <feof@plt+0x44c8c>
  44849c:	ldr	w22, [x27, #16]
  4484a0:	mov	x0, x21
  4484a4:	stur	x19, [x29, #-8]
  4484a8:	mov	x19, x25
  4484ac:	mov	x24, x27
  4484b0:	bl	4030b0 <strlen@plt>
  4484b4:	add	x25, x22, #0x1
  4484b8:	add	x23, x0, #0x1
  4484bc:	add	x0, x23, x25
  4484c0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4484c4:	ldr	x1, [x27, #8]
  4484c8:	mov	x2, x22
  4484cc:	mov	x24, x0
  4484d0:	bl	402fc0 <memcpy@plt>
  4484d4:	cbz	w22, 4484f8 <feof@plt+0x44c58>
  4484d8:	add	x8, x22, x24
  4484dc:	ldurb	w8, [x8, #-1]
  4484e0:	cmp	w8, #0x2f
  4484e4:	b.eq	4484fc <feof@plt+0x44c5c>  // b.none
  4484e8:	mov	w8, #0x2f                  	// #47
  4484ec:	strb	w8, [x24, x22]
  4484f0:	mov	x22, x25
  4484f4:	b	4484fc <feof@plt+0x44c5c>
  4484f8:	mov	x22, xzr
  4484fc:	mov	x25, x19
  448500:	ldur	x19, [x29, #-8]
  448504:	add	x0, x24, x22
  448508:	mov	x1, x21
  44850c:	mov	x2, x23
  448510:	bl	402fc0 <memcpy@plt>
  448514:	ldr	x8, [x27, #32]
  448518:	lsl	x9, x28, #3
  44851c:	orr	x9, x9, #0x8
  448520:	mov	x0, x21
  448524:	str	x24, [x8, x9]
  448528:	bl	4031d0 <free@plt>
  44852c:	ldp	x8, x9, [x20, #8]
  448530:	cmp	x8, x9
  448534:	b.cs	448558 <feof@plt+0x44cb8>  // b.hs, b.nlast
  448538:	add	x9, x8, #0x1
  44853c:	str	x9, [x20, #8]
  448540:	ldrb	w0, [x8]
  448544:	cmn	w0, #0x1
  448548:	b.eq	4483bc <feof@plt+0x44b1c>  // b.none
  44854c:	cmp	w0, #0xa
  448550:	b.ne	44852c <feof@plt+0x44c8c>  // b.any
  448554:	b	4483bc <feof@plt+0x44b1c>
  448558:	mov	x0, x20
  44855c:	bl	4035e0 <__uflow@plt>
  448560:	cmn	w0, #0x1
  448564:	b.ne	44854c <feof@plt+0x44cac>  // b.any
  448568:	b	4483bc <feof@plt+0x44b1c>
  44856c:	mov	x0, x20
  448570:	bl	403150 <fclose@plt>
  448574:	ldr	x0, [x27, #32]
  448578:	b	448580 <feof@plt+0x44ce0>
  44857c:	mov	x28, xzr
  448580:	str	xzr, [x0, x28, lsl #3]
  448584:	mov	sp, x29
  448588:	ldp	x20, x19, [sp, #80]
  44858c:	ldp	x22, x21, [sp, #64]
  448590:	ldp	x24, x23, [sp, #48]
  448594:	ldp	x26, x25, [sp, #32]
  448598:	ldp	x28, x27, [sp, #16]
  44859c:	ldp	x29, x30, [sp], #96
  4485a0:	ret
  4485a4:	stp	x29, x30, [sp, #-64]!
  4485a8:	stp	x22, x21, [sp, #32]
  4485ac:	stp	x20, x19, [sp, #48]
  4485b0:	ldr	x20, [x0, #304]
  4485b4:	mov	x19, x0
  4485b8:	mov	x0, x1
  4485bc:	str	x23, [sp, #16]
  4485c0:	mov	x29, sp
  4485c4:	mov	w22, w2
  4485c8:	mov	x23, x1
  4485cc:	bl	47adac <feof@plt+0x7750c>
  4485d0:	mov	w2, w0
  4485d4:	mov	w3, #0x1                   	// #1
  4485d8:	mov	x0, x20
  4485dc:	mov	x1, x23
  4485e0:	bl	47a764 <feof@plt+0x76ec4>
  4485e4:	ldr	x8, [x0]
  4485e8:	mov	x20, x0
  4485ec:	cbz	x8, 448600 <feof@plt+0x44d60>
  4485f0:	ldr	x9, [x8, #8]
  4485f4:	cbz	x9, 44868c <feof@plt+0x44dec>
  4485f8:	ldr	x8, [x8]
  4485fc:	cbnz	x8, 4485f0 <feof@plt+0x44d50>
  448600:	mov	w0, #0x1                   	// #1
  448604:	mov	w1, #0x40                  	// #64
  448608:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  44860c:	ldr	x8, [x19, #200]
  448610:	mov	x21, x0
  448614:	stp	x8, x23, [x0]
  448618:	mov	x0, x23
  44861c:	bl	4030b0 <strlen@plt>
  448620:	str	w0, [x21, #16]
  448624:	strb	w22, [x21, #20]
  448628:	str	xzr, [x21, #40]
  44862c:	ldr	x0, [x19, #312]
  448630:	ldr	w8, [x0]
  448634:	cmp	w8, #0x7f
  448638:	b.ne	448658 <feof@plt+0x44db8>  // b.any
  44863c:	mov	w0, #0xff0                 	// #4080
  448640:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  448644:	str	wzr, [x0]
  448648:	ldr	x9, [x19, #312]
  44864c:	mov	w8, wzr
  448650:	str	x9, [x0, #8]
  448654:	str	x0, [x19, #312]
  448658:	add	w9, w8, #0x1
  44865c:	str	w9, [x0]
  448660:	ldr	x9, [x20]
  448664:	mov	w8, w8
  448668:	add	x8, x0, x8, lsl #5
  44866c:	str	x9, [x8, #16]!
  448670:	str	xzr, [x8, #8]
  448674:	ldr	x9, [x19, #40]
  448678:	ldr	w9, [x9, #56]
  44867c:	str	x21, [x8, #24]
  448680:	str	w9, [x8, #16]
  448684:	str	x8, [x20]
  448688:	b	448690 <feof@plt+0x44df0>
  44868c:	ldr	x21, [x8, #24]
  448690:	mov	x0, x21
  448694:	ldp	x20, x19, [sp, #48]
  448698:	ldp	x22, x21, [sp, #32]
  44869c:	ldr	x23, [sp, #16]
  4486a0:	ldp	x29, x30, [sp], #64
  4486a4:	ret
  4486a8:	stp	x29, x30, [sp, #-80]!
  4486ac:	stp	x22, x21, [sp, #48]
  4486b0:	mov	w21, w0
  4486b4:	mov	w0, #0x15                  	// #21
  4486b8:	stp	x26, x25, [sp, #16]
  4486bc:	stp	x24, x23, [sp, #32]
  4486c0:	stp	x20, x19, [sp, #64]
  4486c4:	mov	x29, sp
  4486c8:	mov	x19, x1
  4486cc:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4486d0:	adrp	x22, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  4486d4:	and	w8, w21, #0xff
  4486d8:	add	x22, x22, #0x4a2
  4486dc:	ldrh	w8, [x22, w8, uxtw #1]
  4486e0:	mov	x20, x0
  4486e4:	tst	w8, #0xc00
  4486e8:	b.eq	44871c <feof@plt+0x44e7c>  // b.none
  4486ec:	mov	x23, x20
  4486f0:	mov	w0, w21
  4486f4:	mov	x1, x19
  4486f8:	strb	wzr, [x23]
  4486fc:	bl	403070 <ungetc@plt>
  448700:	mov	x0, x20
  448704:	ldp	x20, x19, [sp, #64]
  448708:	ldp	x22, x21, [sp, #48]
  44870c:	ldp	x24, x23, [sp, #32]
  448710:	ldp	x26, x25, [sp, #16]
  448714:	ldp	x29, x30, [sp], #80
  448718:	ret
  44871c:	mov	w24, #0x14                  	// #20
  448720:	mov	x23, x20
  448724:	strb	w21, [x20]
  448728:	b	448730 <feof@plt+0x44e90>
  44872c:	strb	w21, [x23]
  448730:	ldp	x8, x9, [x19, #8]
  448734:	add	x23, x23, #0x1
  448738:	cmp	x8, x9
  44873c:	b.cs	448790 <feof@plt+0x44ef0>  // b.hs, b.nlast
  448740:	add	x9, x8, #0x1
  448744:	str	x9, [x19, #8]
  448748:	ldrb	w21, [x8]
  44874c:	and	w8, w21, #0xff
  448750:	ldrh	w8, [x22, w8, uxtw #1]
  448754:	tst	w8, #0xc00
  448758:	b.ne	4486f0 <feof@plt+0x44e50>  // b.any
  44875c:	sub	x25, x23, x20
  448760:	cmp	x25, w24, sxtw
  448764:	b.ne	44872c <feof@plt+0x44e8c>  // b.any
  448768:	mov	w8, #0x1                   	// #1
  44876c:	bfi	w8, w24, #1, #31
  448770:	sxtw	x1, w8
  448774:	mov	x0, x20
  448778:	lsl	w26, w24, #1
  44877c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  448780:	mov	x20, x0
  448784:	add	x23, x0, x25
  448788:	mov	w24, w26
  44878c:	b	44872c <feof@plt+0x44e8c>
  448790:	mov	x0, x19
  448794:	bl	4035e0 <__uflow@plt>
  448798:	mov	w21, w0
  44879c:	cmn	w0, #0x1
  4487a0:	b.ne	44874c <feof@plt+0x44eac>  // b.any
  4487a4:	b	4486f0 <feof@plt+0x44e50>
  4487a8:	sub	sp, sp, #0x50
  4487ac:	stp	x29, x30, [sp, #16]
  4487b0:	stp	x24, x23, [sp, #32]
  4487b4:	stp	x22, x21, [sp, #48]
  4487b8:	stp	x20, x19, [sp, #64]
  4487bc:	ldr	x24, [x1, #8]
  4487c0:	mov	x22, x0
  4487c4:	mov	x0, x1
  4487c8:	add	x29, sp, #0x10
  4487cc:	mov	x20, x2
  4487d0:	mov	x19, x1
  4487d4:	str	x2, [x1, #8]
  4487d8:	bl	4480d0 <feof@plt+0x44830>
  4487dc:	tbz	w0, #0, 448888 <feof@plt+0x44fe8>
  4487e0:	ldr	x8, [x22, #968]
  4487e4:	ldr	w2, [x19, #200]
  4487e8:	mov	x0, x22
  4487ec:	mov	x1, x20
  4487f0:	blr	x8
  4487f4:	mov	w23, w0
  4487f8:	and	w21, w0, #0x1
  4487fc:	tbnz	w0, #0, 448810 <feof@plt+0x44f70>
  448800:	ldr	w0, [x19, #200]
  448804:	bl	403630 <close@plt>
  448808:	mov	w8, #0xffffffff            	// #-1
  44880c:	str	w8, [x19, #200]
  448810:	ldrb	w8, [x22, #1131]
  448814:	cbz	w8, 44888c <feof@plt+0x44fec>
  448818:	ldr	x8, [x22, #40]
  44881c:	ldr	w9, [x8, #48]
  448820:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  448824:	ldr	x0, [x8, #1096]
  448828:	cmp	w9, #0x2
  44882c:	b.cc	4488ac <feof@plt+0x4500c>  // b.lo, b.ul, b.last
  448830:	mov	w9, #0x1                   	// #1
  448834:	mov	w10, #0x2e                  	// #46
  448838:	ldp	x11, x12, [x0, #40]
  44883c:	cmp	x11, x12
  448840:	b.cs	44886c <feof@plt+0x44fcc>  // b.hs, b.nlast
  448844:	add	x12, x11, #0x1
  448848:	str	x12, [x0, #40]
  44884c:	strb	w10, [x11]
  448850:	ldr	x11, [x22, #40]
  448854:	ldr	x0, [x8, #1096]
  448858:	add	w9, w9, #0x1
  44885c:	ldr	w11, [x11, #48]
  448860:	cmp	w9, w11
  448864:	b.cc	448838 <feof@plt+0x44f98>  // b.lo, b.ul, b.last
  448868:	b	4488ac <feof@plt+0x4500c>
  44886c:	mov	w1, #0x2e                  	// #46
  448870:	stur	w9, [x29, #-4]
  448874:	bl	403140 <__overflow@plt>
  448878:	ldur	w9, [x29, #-4]
  44887c:	mov	w10, #0x2e                  	// #46
  448880:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  448884:	b	448850 <feof@plt+0x44fb0>
  448888:	mov	w21, wzr
  44888c:	str	x24, [x19, #8]
  448890:	mov	w0, w21
  448894:	ldp	x20, x19, [sp, #64]
  448898:	ldp	x22, x21, [sp, #48]
  44889c:	ldp	x24, x23, [sp, #32]
  4488a0:	ldp	x29, x30, [sp, #16]
  4488a4:	add	sp, sp, #0x50
  4488a8:	ret
  4488ac:	tst	w23, #0x1
  4488b0:	mov	w8, #0x78                  	// #120
  4488b4:	mov	w9, #0x21                  	// #33
  4488b8:	adrp	x1, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  4488bc:	csel	w2, w9, w8, ne  // ne = any
  4488c0:	add	x1, x1, #0xef8
  4488c4:	mov	x3, x20
  4488c8:	bl	4030d0 <fprintf@plt>
  4488cc:	b	44888c <feof@plt+0x44fec>
  4488d0:	stp	x29, x30, [sp, #-80]!
  4488d4:	stp	x24, x23, [sp, #32]
  4488d8:	stp	x22, x21, [sp, #48]
  4488dc:	stp	x20, x19, [sp, #64]
  4488e0:	ldrb	w8, [x1, #213]
  4488e4:	str	x25, [sp, #16]
  4488e8:	mov	x29, sp
  4488ec:	cbz	w8, 4488f8 <feof@plt+0x45058>
  4488f0:	mov	w0, #0x1                   	// #1
  4488f4:	b	448910 <feof@plt+0x45070>
  4488f8:	ldrb	w8, [x1, #211]
  4488fc:	mov	x19, x1
  448900:	cbnz	w8, 44890c <feof@plt+0x4506c>
  448904:	ldr	w8, [x19, #204]
  448908:	cbz	w8, 448928 <feof@plt+0x45088>
  44890c:	mov	w0, wzr
  448910:	ldp	x20, x19, [sp, #64]
  448914:	ldp	x22, x21, [sp, #48]
  448918:	ldp	x24, x23, [sp, #32]
  44891c:	ldr	x25, [sp, #16]
  448920:	ldp	x29, x30, [sp], #80
  448924:	ret
  448928:	ldr	w8, [x19, #200]
  44892c:	mov	w21, w2
  448930:	mov	x20, x0
  448934:	cmn	w8, #0x1
  448938:	b.ne	448948 <feof@plt+0x450a8>  // b.any
  44893c:	mov	x0, x19
  448940:	bl	4480d0 <feof@plt+0x44830>
  448944:	tbz	w0, #0, 448a04 <feof@plt+0x45164>
  448948:	ldr	w8, [x19, #88]
  44894c:	and	w25, w8, #0xf000
  448950:	cmp	w25, #0x6, lsl #12
  448954:	b.ne	44897c <feof@plt+0x450dc>  // b.any
  448958:	ldr	x4, [x19, #8]
  44895c:	adrp	x3, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  448960:	add	x3, x3, #0xeff
  448964:	mov	w1, #0x3                   	// #3
  448968:	mov	x0, x20
  44896c:	mov	w2, w21
  448970:	bl	442da8 <feof@plt+0x3f508>
  448974:	mov	w8, #0x1                   	// #1
  448978:	b	448ab0 <feof@plt+0x45210>
  44897c:	cmp	w25, #0x8, lsl #12
  448980:	b.ne	44898c <feof@plt+0x450ec>  // b.any
  448984:	ldr	x22, [x19, #120]
  448988:	b	448990 <feof@plt+0x450f0>
  44898c:	mov	w22, #0x2000                	// #8192
  448990:	add	x0, x22, #0x10
  448994:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  448998:	ldr	w8, [x19, #200]
  44899c:	mov	x23, x0
  4489a0:	mov	x1, x23
  4489a4:	mov	x2, x22
  4489a8:	mov	w0, w8
  4489ac:	bl	4032c0 <read@plt>
  4489b0:	cmp	x0, #0x1
  4489b4:	b.lt	448a20 <feof@plt+0x45180>  // b.tstop
  4489b8:	mov	x24, xzr
  4489bc:	b	4489d8 <feof@plt+0x45138>
  4489c0:	ldr	w0, [x19, #200]
  4489c4:	add	x1, x23, x24
  4489c8:	sub	x2, x22, x24
  4489cc:	bl	4032c0 <read@plt>
  4489d0:	cmp	x0, #0x0
  4489d4:	b.le	448a24 <feof@plt+0x45184>
  4489d8:	add	x24, x24, x0
  4489dc:	cmp	x24, x22
  4489e0:	b.ne	4489c0 <feof@plt+0x45120>  // b.any
  4489e4:	cmp	w25, #0x8, lsl #12
  4489e8:	b.eq	448a7c <feof@plt+0x451dc>  // b.none
  4489ec:	lsl	x22, x22, #1
  4489f0:	add	x1, x22, #0x10
  4489f4:	mov	x0, x23
  4489f8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4489fc:	mov	x23, x0
  448a00:	b	4489c0 <feof@plt+0x45120>
  448a04:	mov	x0, x20
  448a08:	mov	x1, x19
  448a0c:	mov	w2, wzr
  448a10:	mov	w3, w21
  448a14:	bl	446ec8 <feof@plt+0x43628>
  448a18:	mov	w0, wzr
  448a1c:	b	448910 <feof@plt+0x45070>
  448a20:	mov	x24, xzr
  448a24:	tbnz	x0, #63, 448a58 <feof@plt+0x451b8>
  448a28:	cmp	x24, x22
  448a2c:	b.eq	448a80 <feof@plt+0x451e0>  // b.none
  448a30:	cmp	w25, #0x8, lsl #12
  448a34:	b.ne	448a80 <feof@plt+0x451e0>  // b.any
  448a38:	ldr	x4, [x19, #8]
  448a3c:	adrp	x3, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  448a40:	add	x3, x3, #0xf14
  448a44:	mov	x0, x20
  448a48:	mov	w1, wzr
  448a4c:	mov	w2, w21
  448a50:	bl	442da8 <feof@plt+0x3f508>
  448a54:	b	448a80 <feof@plt+0x451e0>
  448a58:	ldr	x2, [x19, #8]
  448a5c:	mov	w1, #0x3                   	// #3
  448a60:	mov	x0, x20
  448a64:	mov	w3, w21
  448a68:	bl	442fb0 <feof@plt+0x3f710>
  448a6c:	mov	x0, x23
  448a70:	bl	4031d0 <free@plt>
  448a74:	mov	w8, #0x1                   	// #1
  448a78:	b	448ab0 <feof@plt+0x45210>
  448a7c:	mov	x24, x22
  448a80:	ldr	x1, [x20, #1184]
  448a84:	add	x3, x22, #0x10
  448a88:	add	x5, x19, #0x30
  448a8c:	add	x6, x19, #0x78
  448a90:	mov	x0, x20
  448a94:	mov	x2, x23
  448a98:	mov	x4, x24
  448a9c:	bl	43c83c <feof@plt+0x38f9c>
  448aa0:	mov	w8, wzr
  448aa4:	mov	w9, #0x1                   	// #1
  448aa8:	str	x0, [x19, #40]
  448aac:	strb	w9, [x19, #213]
  448ab0:	ldr	w0, [x19, #200]
  448ab4:	strb	w8, [x19, #211]
  448ab8:	bl	403630 <close@plt>
  448abc:	ldrb	w8, [x19, #211]
  448ac0:	mov	w9, #0xffffffff            	// #-1
  448ac4:	str	w9, [x19, #200]
  448ac8:	cmp	w8, #0x0
  448acc:	cset	w0, eq  // eq = none
  448ad0:	b	448910 <feof@plt+0x45070>
  448ad4:	stp	x29, x30, [sp, #-32]!
  448ad8:	stp	x20, x19, [sp, #16]
  448adc:	mov	x20, x1
  448ae0:	mov	x19, x0
  448ae4:	mov	x29, sp
  448ae8:	cbnz	x1, 448b2c <feof@plt+0x4528c>
  448aec:	mov	w8, #0x1                   	// #1
  448af0:	mov	w0, #0xd                   	// #13
  448af4:	strb	w8, [x19, #1304]
  448af8:	bl	456a94 <feof@plt+0x531f4>
  448afc:	adrp	x8, 448000 <feof@plt+0x44760>
  448b00:	add	x8, x8, #0xc3c
  448b04:	adrp	x3, 47d000 <_obstack_memory_used@@Base+0x12fc>
  448b08:	adrp	x4, 403000 <readlink@plt>
  448b0c:	mov	x20, x0
  448b10:	str	x8, [x0, #96]
  448b14:	add	x0, x19, #0x2d0
  448b18:	add	x3, x3, #0x98
  448b1c:	add	x4, x4, #0x1d0
  448b20:	mov	x1, xzr
  448b24:	mov	x2, xzr
  448b28:	bl	47b98c <_obstack_begin@@Base>
  448b2c:	mov	x0, x19
  448b30:	str	x19, [x20, #120]
  448b34:	str	x20, [x19, #1088]
  448b38:	bl	44090c <feof@plt+0x3d06c>
  448b3c:	mov	x0, x19
  448b40:	bl	43eb70 <feof@plt+0x3b2d0>
  448b44:	ldr	x0, [x19, #1088]
  448b48:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x52fc>
  448b4c:	add	x1, x1, #0x5cd
  448b50:	mov	w2, #0x7                   	// #7
  448b54:	mov	w3, #0x1                   	// #1
  448b58:	bl	456b40 <feof@plt+0x532a0>
  448b5c:	ldr	x8, [x19, #1088]
  448b60:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  448b64:	str	x0, [x19, #1248]
  448b68:	add	x1, x1, #0x415
  448b6c:	mov	w2, #0x4                   	// #4
  448b70:	mov	w3, #0x1                   	// #1
  448b74:	mov	x0, x8
  448b78:	bl	456b40 <feof@plt+0x532a0>
  448b7c:	ldr	x8, [x19, #1088]
  448b80:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  448b84:	str	x0, [x19, #1256]
  448b88:	add	x1, x1, #0x41a
  448b8c:	mov	w2, #0x5                   	// #5
  448b90:	mov	w3, #0x1                   	// #1
  448b94:	mov	x0, x8
  448b98:	bl	456b40 <feof@plt+0x532a0>
  448b9c:	ldr	x8, [x19, #1088]
  448ba0:	adrp	x1, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  448ba4:	str	x0, [x19, #1264]
  448ba8:	add	x1, x1, #0xf5a
  448bac:	mov	w2, #0xb                   	// #11
  448bb0:	mov	w3, #0x1                   	// #1
  448bb4:	mov	x0, x8
  448bb8:	bl	456b40 <feof@plt+0x532a0>
  448bbc:	str	x0, [x19, #1272]
  448bc0:	ldrh	w8, [x0, #18]
  448bc4:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  448bc8:	add	x1, x1, #0x656
  448bcc:	mov	w2, #0xa                   	// #10
  448bd0:	orr	w8, w8, #0x10
  448bd4:	strh	w8, [x0, #18]
  448bd8:	ldr	x0, [x19, #1088]
  448bdc:	mov	w3, #0x1                   	// #1
  448be0:	bl	456b40 <feof@plt+0x532a0>
  448be4:	str	x0, [x19, #1280]
  448be8:	ldrh	w8, [x0, #18]
  448bec:	adrp	x1, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  448bf0:	add	x1, x1, #0xf66
  448bf4:	mov	w2, #0xf                   	// #15
  448bf8:	orr	w8, w8, #0x10
  448bfc:	strh	w8, [x0, #18]
  448c00:	ldr	x0, [x19, #1088]
  448c04:	mov	w3, #0x1                   	// #1
  448c08:	bl	456b40 <feof@plt+0x532a0>
  448c0c:	ldr	x8, [x19, #1088]
  448c10:	adrp	x1, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  448c14:	str	x0, [x19, #1288]
  448c18:	add	x1, x1, #0xf76
  448c1c:	mov	w2, #0x14                  	// #20
  448c20:	mov	w3, #0x1                   	// #1
  448c24:	mov	x0, x8
  448c28:	bl	456b40 <feof@plt+0x532a0>
  448c2c:	str	x0, [x19, #1296]
  448c30:	ldp	x20, x19, [sp, #16]
  448c34:	ldp	x29, x30, [sp], #32
  448c38:	ret
  448c3c:	stp	x29, x30, [sp, #-32]!
  448c40:	str	x19, [sp, #16]
  448c44:	ldr	x19, [x0, #120]
  448c48:	mov	x29, sp
  448c4c:	ldr	x9, [x19, #752]
  448c50:	ldr	x8, [x19, #744]
  448c54:	sub	x9, x9, x8
  448c58:	cmp	x9, #0x1f
  448c5c:	b.hi	448c70 <feof@plt+0x453d0>  // b.pmore
  448c60:	add	x0, x19, #0x2d0
  448c64:	mov	w1, #0x20                  	// #32
  448c68:	bl	47bae8 <_obstack_newchunk@@Base>
  448c6c:	ldr	x8, [x19, #744]
  448c70:	ldr	x0, [x19, #736]
  448c74:	add	x8, x8, #0x20
  448c78:	str	x8, [x19, #744]
  448c7c:	cmp	x8, x0
  448c80:	b.ne	448c90 <feof@plt+0x453f0>  // b.any
  448c84:	ldrb	w9, [x19, #800]
  448c88:	orr	w9, w9, #0x2
  448c8c:	strb	w9, [x19, #800]
  448c90:	ldr	x10, [x19, #768]
  448c94:	ldr	x11, [x19, #728]
  448c98:	ldr	x9, [x19, #752]
  448c9c:	add	x8, x10, x8
  448ca0:	bic	x8, x8, x10
  448ca4:	sub	x10, x8, x11
  448ca8:	sub	x11, x9, x11
  448cac:	cmp	x10, x11
  448cb0:	str	x8, [x19, #744]
  448cb4:	b.ls	448cc0 <feof@plt+0x45420>  // b.plast
  448cb8:	mov	x8, x9
  448cbc:	str	x9, [x19, #744]
  448cc0:	movi	v0.2d, #0x0
  448cc4:	str	x8, [x19, #736]
  448cc8:	stp	q0, q0, [x0]
  448ccc:	ldr	x19, [sp, #16]
  448cd0:	ldp	x29, x30, [sp], #32
  448cd4:	ret
  448cd8:	ldr	x0, [x0, #1088]
  448cdc:	mov	w2, w2
  448ce0:	mov	w3, #0x1                   	// #1
  448ce4:	b	456b40 <feof@plt+0x532a0>
  448ce8:	stp	x29, x30, [sp, #-32]!
  448cec:	ldrb	w8, [x0, #1304]
  448cf0:	str	x19, [sp, #16]
  448cf4:	mov	x29, sp
  448cf8:	cbz	w8, 448d1c <feof@plt+0x4547c>
  448cfc:	mov	x19, x0
  448d00:	ldr	x0, [x0, #1088]
  448d04:	bl	456b08 <feof@plt+0x53268>
  448d08:	add	x0, x19, #0x2d0
  448d0c:	ldr	x19, [sp, #16]
  448d10:	mov	x1, xzr
  448d14:	ldp	x29, x30, [sp], #32
  448d18:	b	47bc70 <_obstack_free@@Base>
  448d1c:	ldr	x19, [sp, #16]
  448d20:	ldp	x29, x30, [sp], #32
  448d24:	ret
  448d28:	stp	x29, x30, [sp, #-16]!
  448d2c:	ldr	x0, [x0, #1088]
  448d30:	mov	w3, wzr
  448d34:	sxtw	x2, w2
  448d38:	mov	x29, sp
  448d3c:	bl	456b40 <feof@plt+0x532a0>
  448d40:	cbz	x0, 448d4c <feof@plt+0x454ac>
  448d44:	ldrh	w8, [x0, #18]
  448d48:	ubfx	w0, w8, #1, #1
  448d4c:	ldp	x29, x30, [sp], #16
  448d50:	ret
  448d54:	ldr	x0, [x0, #1088]
  448d58:	b	456e64 <feof@plt+0x535c4>
  448d5c:	stp	x29, x30, [sp, #-16]!
  448d60:	ldrb	w8, [x0, #4]
  448d64:	mov	x29, sp
  448d68:	cmp	w8, #0x35
  448d6c:	b.ne	448d8c <feof@plt+0x454ec>  // b.any
  448d70:	ldr	x8, [x0, #8]
  448d74:	ldr	x0, [x8]
  448d78:	bl	403640 <strcmp@plt>
  448d7c:	cmp	w0, #0x0
  448d80:	cset	w0, eq  // eq = none
  448d84:	ldp	x29, x30, [sp], #16
  448d88:	ret
  448d8c:	mov	w0, wzr
  448d90:	ldp	x29, x30, [sp], #16
  448d94:	ret
  448d98:	ret
  448d9c:	sub	sp, sp, #0x90
  448da0:	stp	x29, x30, [sp, #48]
  448da4:	stp	x28, x27, [sp, #64]
  448da8:	stp	x26, x25, [sp, #80]
  448dac:	stp	x24, x23, [sp, #96]
  448db0:	stp	x22, x21, [sp, #112]
  448db4:	stp	x20, x19, [sp, #128]
  448db8:	ldr	x19, [x0]
  448dbc:	add	x29, sp, #0x30
  448dc0:	ldr	x20, [x19, #16]
  448dc4:	ldrb	w8, [x19, #105]
  448dc8:	str	xzr, [x19, #56]
  448dcc:	strb	wzr, [x19, #104]
  448dd0:	stp	x20, x20, [x19]
  448dd4:	tbnz	w8, #1, 448fbc <feof@plt+0x4571c>
  448dd8:	adrp	x10, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  448ddc:	adrp	x11, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  448de0:	ldr	q6, [x10, #3984]
  448de4:	ldr	q7, [x11, #4000]
  448de8:	adrp	x10, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  448dec:	mov	w9, wzr
  448df0:	mov	x8, xzr
  448df4:	mov	w21, #0xffffffff            	// #-1
  448df8:	movi	v4.16b, #0xa
  448dfc:	movi	v5.16b, #0xd
  448e00:	movi	v16.16b, #0x5c
  448e04:	movi	v17.16b, #0x3f
  448e08:	add	x10, x10, #0x1c8
  448e0c:	and	x11, x20, #0xfff
  448e10:	cmp	x11, #0xff1
  448e14:	and	x11, x20, #0xfffffffffffffff0
  448e18:	b.cs	448e24 <feof@plt+0x45584>  // b.hs, b.nlast
  448e1c:	ldr	q0, [x20]
  448e20:	b	448e70 <feof@plt+0x455d0>
  448e24:	ldr	q0, [x11]
  448e28:	and	w12, w20, #0xf
  448e2c:	lsl	w12, w21, w12
  448e30:	cmeq	v1.16b, v0.16b, v4.16b
  448e34:	cmeq	v2.16b, v0.16b, v5.16b
  448e38:	cmeq	v3.16b, v0.16b, v16.16b
  448e3c:	cmeq	v0.16b, v0.16b, v17.16b
  448e40:	orr	v0.16b, v0.16b, v2.16b
  448e44:	orr	v0.16b, v0.16b, v1.16b
  448e48:	orr	v0.16b, v0.16b, v3.16b
  448e4c:	and	v0.16b, v0.16b, v6.16b
  448e50:	uaddlp	v0.8h, v0.16b
  448e54:	ushl	v0.8h, v0.8h, v7.8h
  448e58:	addv	h0, v0.8h
  448e5c:	fmov	w13, s0
  448e60:	and	w12, w12, w13
  448e64:	ands	w12, w12, #0xffff
  448e68:	b.ne	448eb4 <feof@plt+0x45614>  // b.any
  448e6c:	ldr	q0, [x11, #16]!
  448e70:	cmeq	v1.16b, v0.16b, v4.16b
  448e74:	cmeq	v2.16b, v0.16b, v5.16b
  448e78:	cmeq	v3.16b, v0.16b, v16.16b
  448e7c:	cmeq	v0.16b, v0.16b, v17.16b
  448e80:	orr	v0.16b, v0.16b, v2.16b
  448e84:	orr	v0.16b, v0.16b, v1.16b
  448e88:	orr	v0.16b, v0.16b, v3.16b
  448e8c:	addp	d1, v0.2d
  448e90:	fmov	x12, d1
  448e94:	cbz	x12, 448e6c <feof@plt+0x455cc>
  448e98:	and	v0.16b, v0.16b, v6.16b
  448e9c:	uaddlp	v0.8h, v0.16b
  448ea0:	ushl	v0.8h, v0.8h, v7.8h
  448ea4:	cmp	x11, x20
  448ea8:	addv	h0, v0.8h
  448eac:	csel	x11, x20, x11, cc  // cc = lo, ul, last
  448eb0:	fmov	w12, s0
  448eb4:	rbit	w12, w12
  448eb8:	clz	w12, w12
  448ebc:	add	x20, x11, x12
  448ec0:	ldrb	w11, [x20]
  448ec4:	cmp	w11, #0x5c
  448ec8:	b.ne	448ed8 <feof@plt+0x45638>  // b.any
  448ecc:	mov	x8, x20
  448ed0:	add	x20, x20, #0x1
  448ed4:	b	448e0c <feof@plt+0x4556c>
  448ed8:	cmp	w11, #0x3f
  448edc:	b.ne	448fd8 <feof@plt+0x45738>  // b.any
  448ee0:	ldrb	w11, [x20, #1]
  448ee4:	cmp	w11, #0x3f
  448ee8:	b.ne	448ed0 <feof@plt+0x45630>  // b.any
  448eec:	stp	q7, q6, [sp]
  448ef0:	ldrb	w23, [x20, #2]
  448ef4:	mov	x22, x8
  448ef8:	stur	x0, [x29, #-8]
  448efc:	ldrb	w8, [x10, x23]
  448f00:	cbz	w8, 448f34 <feof@plt+0x45694>
  448f04:	ldr	w8, [x19, #64]
  448f08:	cmp	w9, w8
  448f0c:	b.ne	448f60 <feof@plt+0x456c0>  // b.any
  448f10:	ldr	x0, [x19, #48]
  448f14:	lsl	w8, w9, #1
  448f18:	add	w8, w8, #0xc8
  448f1c:	lsl	x1, x8, #4
  448f20:	str	w8, [x19, #64]
  448f24:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  448f28:	ldr	w9, [x19, #60]
  448f2c:	str	x0, [x19, #48]
  448f30:	b	448f64 <feof@plt+0x456c4>
  448f34:	ldur	x0, [x29, #-8]
  448f38:	ldp	q7, q6, [sp]
  448f3c:	adrp	x10, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  448f40:	add	x10, x10, #0x1c8
  448f44:	mov	x8, x22
  448f48:	movi	v4.16b, #0xa
  448f4c:	movi	v5.16b, #0xd
  448f50:	movi	v16.16b, #0x5c
  448f54:	movi	v17.16b, #0x3f
  448f58:	add	x20, x20, #0x1
  448f5c:	b	448e0c <feof@plt+0x4556c>
  448f60:	ldr	x0, [x19, #48]
  448f64:	add	x8, x0, w9, uxtw #4
  448f68:	ldur	x0, [x29, #-8]
  448f6c:	add	w9, w9, #0x1
  448f70:	str	x20, [x8]
  448f74:	str	w23, [x8, #8]
  448f78:	str	w9, [x19, #60]
  448f7c:	ldrb	w11, [x0, #1125]
  448f80:	ldp	q7, q6, [sp]
  448f84:	adrp	x10, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  448f88:	add	x10, x10, #0x1c8
  448f8c:	mov	x8, x22
  448f90:	movi	v4.16b, #0xa
  448f94:	movi	v5.16b, #0xd
  448f98:	movi	v16.16b, #0x5c
  448f9c:	movi	v17.16b, #0x3f
  448fa0:	cbz	w11, 448ed0 <feof@plt+0x45630>
  448fa4:	mov	x21, x20
  448fa8:	ldrb	w8, [x21, #2]!
  448fac:	add	x22, x19, #0x20
  448fb0:	ldrb	w8, [x10, x8]
  448fb4:	strb	w8, [x20]
  448fb8:	b	449158 <feof@plt+0x458b8>
  448fbc:	ldrb	w8, [x20]
  448fc0:	cmp	w8, #0xa
  448fc4:	b.eq	44908c <feof@plt+0x457ec>  // b.none
  448fc8:	cmp	w8, #0xd
  448fcc:	b.eq	44906c <feof@plt+0x457cc>  // b.none
  448fd0:	add	x20, x20, #0x1
  448fd4:	b	448fbc <feof@plt+0x4571c>
  448fd8:	mov	x22, x19
  448fdc:	ldr	x10, [x22, #32]!
  448fe0:	cmp	x20, x10
  448fe4:	b.eq	44908c <feof@plt+0x457ec>  // b.none
  448fe8:	cmp	w11, #0xd
  448fec:	mov	x21, x20
  448ff0:	b.eq	44910c <feof@plt+0x4586c>  // b.none
  448ff4:	cbz	x8, 449090 <feof@plt+0x457f0>
  448ff8:	adrp	x11, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  448ffc:	mov	x23, xzr
  449000:	sub	x10, x20, #0x1
  449004:	add	x11, x11, #0x4a2
  449008:	ldrb	w12, [x10, x23]
  44900c:	sub	x23, x23, #0x1
  449010:	ldrh	w12, [x11, x12, lsl #1]
  449014:	tbnz	w12, #11, 449008 <feof@plt+0x45768>
  449018:	sub	x10, x8, x20
  44901c:	cmp	x10, x23
  449020:	b.ne	449090 <feof@plt+0x457f0>  // b.any
  449024:	mov	x24, x8
  449028:	ldr	w8, [x19, #64]
  44902c:	cmn	x23, #0x1
  449030:	mov	w10, #0x20                  	// #32
  449034:	mov	w11, #0x5c                  	// #92
  449038:	csel	w25, w11, w10, eq  // eq = none
  44903c:	cmp	w9, w8
  449040:	stur	x0, [x29, #-8]
  449044:	b.ne	449134 <feof@plt+0x45894>  // b.any
  449048:	ldr	x0, [x19, #48]
  44904c:	lsl	w8, w9, #1
  449050:	add	w8, w8, #0xc8
  449054:	lsl	x1, x8, #4
  449058:	str	w8, [x19, #64]
  44905c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  449060:	ldr	w9, [x19, #60]
  449064:	str	x0, [x19, #48]
  449068:	b	449138 <feof@plt+0x45898>
  44906c:	ldr	x8, [x19, #32]
  449070:	cmp	x8, x20
  449074:	b.eq	44908c <feof@plt+0x457ec>  // b.none
  449078:	mov	x8, x20
  44907c:	ldrb	w9, [x8, #1]!
  449080:	cmp	w9, #0xa
  449084:	csel	x21, x8, x20, eq  // eq = none
  449088:	b	449090 <feof@plt+0x457f0>
  44908c:	mov	x21, x20
  449090:	mov	w8, #0xa                   	// #10
  449094:	strb	w8, [x20], #1
  449098:	ldp	w8, w9, [x19, #60]
  44909c:	cmp	w8, w9
  4490a0:	b.ne	4490c8 <feof@plt+0x45828>  // b.any
  4490a4:	ldr	x0, [x19, #48]
  4490a8:	lsl	w8, w8, #1
  4490ac:	add	w8, w8, #0xc8
  4490b0:	lsl	x1, x8, #4
  4490b4:	str	w8, [x19, #64]
  4490b8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4490bc:	ldr	w8, [x19, #60]
  4490c0:	str	x0, [x19, #48]
  4490c4:	b	4490cc <feof@plt+0x4582c>
  4490c8:	ldr	x0, [x19, #48]
  4490cc:	add	x9, x0, w8, uxtw #4
  4490d0:	mov	w10, #0xa                   	// #10
  4490d4:	add	w8, w8, #0x1
  4490d8:	add	x11, x21, #0x1
  4490dc:	str	x20, [x9]
  4490e0:	str	w10, [x9, #8]
  4490e4:	str	w8, [x19, #60]
  4490e8:	str	x11, [x19, #16]
  4490ec:	ldp	x20, x19, [sp, #128]
  4490f0:	ldp	x22, x21, [sp, #112]
  4490f4:	ldp	x24, x23, [sp, #96]
  4490f8:	ldp	x26, x25, [sp, #80]
  4490fc:	ldp	x28, x27, [sp, #64]
  449100:	ldp	x29, x30, [sp, #48]
  449104:	add	sp, sp, #0x90
  449108:	ret
  44910c:	mov	x11, x20
  449110:	ldrb	w12, [x11, #1]!
  449114:	mov	x21, x20
  449118:	cmp	w12, #0xa
  44911c:	b.ne	448ff4 <feof@plt+0x45754>  // b.any
  449120:	cmp	x11, x10
  449124:	mov	x21, x11
  449128:	b.ne	448ff4 <feof@plt+0x45754>  // b.any
  44912c:	mov	x21, x11
  449130:	b	449090 <feof@plt+0x457f0>
  449134:	ldr	x0, [x19, #48]
  449138:	add	x10, x20, x23
  44913c:	add	x8, x0, w9, uxtw #4
  449140:	add	w9, w9, #0x1
  449144:	sub	x20, x10, #0x1
  449148:	str	x24, [x8]
  44914c:	str	w25, [x8, #8]
  449150:	str	w9, [x19, #60]
  449154:	str	x24, [x19, #16]
  449158:	adrp	x26, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  44915c:	add	x26, x26, #0x4a2
  449160:	mov	w28, #0x20                  	// #32
  449164:	mov	w24, #0x5c                  	// #92
  449168:	mov	x25, x21
  44916c:	ldrb	w11, [x21, #1]!
  449170:	mov	x8, x20
  449174:	cmp	w11, #0x3f
  449178:	strb	w11, [x20, #1]!
  44917c:	b.eq	449198 <feof@plt+0x458f8>  // b.none
  449180:	cmp	w11, #0xd
  449184:	b.eq	4491e8 <feof@plt+0x45948>  // b.none
  449188:	cmp	w11, #0xa
  44918c:	b.ne	449168 <feof@plt+0x458c8>  // b.any
  449190:	ldr	x11, [x22]
  449194:	b	449200 <feof@plt+0x45960>
  449198:	ldrb	w8, [x25, #2]
  44919c:	cmp	w8, #0x3f
  4491a0:	b.ne	449168 <feof@plt+0x458c8>  // b.any
  4491a4:	ldrb	w23, [x25, #3]!
  4491a8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4491ac:	add	x8, x8, #0x1c8
  4491b0:	ldrb	w8, [x8, x23]
  4491b4:	cbz	w8, 449168 <feof@plt+0x458c8>
  4491b8:	ldp	w8, w9, [x19, #60]
  4491bc:	cmp	w8, w9
  4491c0:	b.ne	4492b8 <feof@plt+0x45a18>  // b.any
  4491c4:	ldr	x0, [x19, #48]
  4491c8:	lsl	w8, w8, #1
  4491cc:	add	w8, w8, #0xc8
  4491d0:	lsl	x1, x8, #4
  4491d4:	str	w8, [x19, #64]
  4491d8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4491dc:	ldr	w8, [x19, #60]
  4491e0:	str	x0, [x19, #48]
  4491e4:	b	4492bc <feof@plt+0x45a1c>
  4491e8:	ldr	x11, [x22]
  4491ec:	cmp	x21, x11
  4491f0:	b.eq	449090 <feof@plt+0x457f0>  // b.none
  4491f4:	ldrb	w12, [x25, #2]!
  4491f8:	cmp	w12, #0xa
  4491fc:	csel	x21, x25, x21, eq  // eq = none
  449200:	cmp	x21, x11
  449204:	b.eq	449090 <feof@plt+0x457f0>  // b.none
  449208:	ldr	x11, [x19, #16]
  44920c:	cmp	x20, x11
  449210:	b.eq	449090 <feof@plt+0x457f0>  // b.none
  449214:	mvn	x12, x8
  449218:	mov	x10, xzr
  44921c:	add	x11, x12, x11
  449220:	ldrb	w12, [x8, x10]
  449224:	ldrh	w13, [x26, x12, lsl #1]
  449228:	tbz	w13, #11, 44923c <feof@plt+0x4599c>
  44922c:	sub	x10, x10, #0x1
  449230:	cmp	x11, x10
  449234:	b.ne	449220 <feof@plt+0x45980>  // b.any
  449238:	b	449090 <feof@plt+0x457f0>
  44923c:	cmp	w12, #0x5c
  449240:	b.ne	449090 <feof@plt+0x457f0>  // b.any
  449244:	ldp	w9, w11, [x19, #60]
  449248:	cmp	x10, #0x0
  44924c:	mov	x23, x26
  449250:	csel	w20, w24, w28, eq  // eq = none
  449254:	cmp	w9, w11
  449258:	mov	x26, x8
  44925c:	mov	x27, x10
  449260:	add	x25, x8, x10
  449264:	b.ne	44928c <feof@plt+0x459ec>  // b.any
  449268:	ldr	x0, [x19, #48]
  44926c:	lsl	w8, w9, #1
  449270:	add	w8, w8, #0xc8
  449274:	lsl	x1, x8, #4
  449278:	str	w8, [x19, #64]
  44927c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  449280:	ldr	w9, [x19, #60]
  449284:	str	x0, [x19, #48]
  449288:	b	449290 <feof@plt+0x459f0>
  44928c:	ldr	x0, [x19, #48]
  449290:	add	x8, x0, w9, uxtw #4
  449294:	add	w9, w9, #0x1
  449298:	add	x10, x26, x27
  44929c:	str	x25, [x8]
  4492a0:	str	w20, [x8, #8]
  4492a4:	str	w9, [x19, #60]
  4492a8:	sub	x20, x10, #0x1
  4492ac:	str	x25, [x19, #16]
  4492b0:	mov	x26, x23
  4492b4:	b	449168 <feof@plt+0x458c8>
  4492b8:	ldr	x0, [x19, #48]
  4492bc:	add	x9, x0, w8, uxtw #4
  4492c0:	add	w8, w8, #0x1
  4492c4:	str	x20, [x9]
  4492c8:	str	w23, [x9, #8]
  4492cc:	str	w8, [x19, #60]
  4492d0:	ldur	x8, [x29, #-8]
  4492d4:	ldrb	w8, [x8, #1125]
  4492d8:	cbz	w8, 449168 <feof@plt+0x458c8>
  4492dc:	ldrb	w10, [x25]
  4492e0:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4492e4:	add	x8, x8, #0x1c8
  4492e8:	mov	x21, x25
  4492ec:	ldrb	w8, [x8, x10]
  4492f0:	strb	w8, [x20]
  4492f4:	b	449168 <feof@plt+0x458c8>
  4492f8:	stp	x29, x30, [sp, #-96]!
  4492fc:	stp	x28, x27, [sp, #16]
  449300:	stp	x26, x25, [sp, #32]
  449304:	stp	x24, x23, [sp, #48]
  449308:	stp	x22, x21, [sp, #64]
  44930c:	stp	x20, x19, [sp, #80]
  449310:	ldr	x26, [x0]
  449314:	mov	x29, sp
  449318:	ldr	x9, [x26, #48]
  44931c:	ldr	w10, [x26, #56]
  449320:	ldr	x11, [x26]
  449324:	add	x24, x9, w10, uxtw #4
  449328:	ldr	x8, [x24]
  44932c:	cmp	x8, x11
  449330:	b.ls	449350 <feof@plt+0x45ab0>  // b.plast
  449334:	ldp	x20, x19, [sp, #80]
  449338:	ldp	x22, x21, [sp, #64]
  44933c:	ldp	x24, x23, [sp, #48]
  449340:	ldp	x26, x25, [sp, #32]
  449344:	ldp	x28, x27, [sp, #16]
  449348:	ldp	x29, x30, [sp], #96
  44934c:	ret
  449350:	adrp	x21, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  449354:	adrp	x22, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  449358:	adrp	x28, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  44935c:	adrp	x23, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  449360:	mov	x19, x0
  449364:	mov	w20, w1
  449368:	add	x21, x21, #0x751
  44936c:	mov	w27, #0x18                  	// #24
  449370:	add	x22, x22, #0x728
  449374:	add	x28, x28, #0x1c8
  449378:	add	x23, x23, #0x4a2
  44937c:	b	4493e0 <feof@plt+0x45b40>
  449380:	ldr	x8, [x24]
  449384:	mov	w2, wzr
  449388:	str	x8, [x26, #8]
  44938c:	ldr	x0, [x19, #40]
  449390:	ldr	w8, [x0, #12]
  449394:	ldr	x9, [x0]
  449398:	sub	w8, w8, #0x1
  44939c:	smaddl	x8, w8, w27, x9
  4493a0:	ldr	w9, [x0, #60]
  4493a4:	ldr	w10, [x8]
  4493a8:	ldrb	w11, [x8, #6]
  4493ac:	ldr	w8, [x8, #16]
  4493b0:	sub	w9, w9, w10
  4493b4:	lsr	w9, w9, w11
  4493b8:	add	w8, w8, w9
  4493bc:	add	w1, w8, #0x1
  4493c0:	bl	44ecdc <feof@plt+0x4b43c>
  4493c4:	ldr	x9, [x26, #48]
  4493c8:	ldr	w10, [x26, #56]
  4493cc:	ldr	x11, [x26]
  4493d0:	add	x24, x9, w10, uxtw #4
  4493d4:	ldr	x8, [x24]
  4493d8:	cmp	x8, x11
  4493dc:	b.hi	449334 <feof@plt+0x45a94>  // b.pmore
  4493e0:	add	w11, w10, #0x1
  4493e4:	ldr	w12, [x26, #8]
  4493e8:	str	w11, [x26, #56]
  4493ec:	add	x9, x9, x10, lsl #4
  4493f0:	ldr	w5, [x9, #8]
  4493f4:	sub	w9, w8, w12
  4493f8:	add	w25, w9, #0x1
  4493fc:	cmp	w5, #0x5c
  449400:	b.eq	44940c <feof@plt+0x45b6c>  // b.none
  449404:	cmp	w5, #0x20
  449408:	b.ne	44946c <feof@plt+0x45bcc>  // b.any
  44940c:	cbnz	w20, 449434 <feof@plt+0x45b94>
  449410:	cmp	w5, #0x20
  449414:	b.ne	449434 <feof@plt+0x45b94>  // b.any
  449418:	ldr	x8, [x19, #40]
  44941c:	mov	x0, x19
  449420:	mov	w1, wzr
  449424:	mov	w3, w25
  449428:	ldr	w2, [x8, #60]
  44942c:	mov	x4, x22
  449430:	bl	4429b8 <feof@plt+0x3f118>
  449434:	ldr	x8, [x26, #16]
  449438:	ldr	x9, [x26, #32]
  44943c:	cmp	x8, x9
  449440:	b.ls	449380 <feof@plt+0x45ae0>  // b.plast
  449444:	ldr	x8, [x19, #40]
  449448:	mov	w1, #0x2                   	// #2
  44944c:	mov	x0, x19
  449450:	mov	w3, w25
  449454:	ldr	w2, [x8, #60]
  449458:	mov	x4, x21
  44945c:	bl	4429b8 <feof@plt+0x3f118>
  449460:	ldr	x8, [x26, #32]
  449464:	str	x8, [x26, #16]
  449468:	b	449380 <feof@plt+0x45ae0>
  44946c:	ldrb	w6, [x28, x5]
  449470:	cbz	w6, 4494a8 <feof@plt+0x45c08>
  449474:	ldrb	w9, [x19, #1136]
  449478:	cbz	w9, 4493c4 <feof@plt+0x45b24>
  44947c:	cbz	w20, 4494b0 <feof@plt+0x45c10>
  449480:	cmp	w5, #0x2f
  449484:	b.ne	4493c4 <feof@plt+0x45b24>  // b.any
  449488:	ldrb	w9, [x19, #1125]
  44948c:	cbz	w9, 4494dc <feof@plt+0x45c3c>
  449490:	ldr	x9, [x24, #16]
  449494:	cmp	x9, x8
  449498:	b.ne	4493c4 <feof@plt+0x45b24>  // b.any
  44949c:	ldr	x8, [x19, #40]
  4494a0:	ldr	w2, [x8, #60]
  4494a4:	b	4494c0 <feof@plt+0x45c20>
  4494a8:	cbz	w5, 4493c4 <feof@plt+0x45b24>
  4494ac:	b	449524 <feof@plt+0x45c84>
  4494b0:	ldr	x8, [x19, #40]
  4494b4:	ldrb	w9, [x19, #1125]
  4494b8:	ldr	w2, [x8, #60]
  4494bc:	cbz	w9, 449508 <feof@plt+0x45c68>
  4494c0:	adrp	x4, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  4494c4:	mov	w1, #0x4                   	// #4
  4494c8:	mov	x0, x19
  4494cc:	mov	w3, w25
  4494d0:	add	x4, x4, #0x772
  4494d4:	bl	442ab4 <feof@plt+0x3f214>
  4494d8:	b	4493c4 <feof@plt+0x45b24>
  4494dc:	add	x8, x8, #0x2
  4494e0:	ldrb	w9, [x8, #1]!
  4494e4:	ldrh	w10, [x23, x9, lsl #1]
  4494e8:	tbnz	w10, #11, 4494e0 <feof@plt+0x45c40>
  4494ec:	cmp	w9, #0xa
  4494f0:	b.ne	4493c4 <feof@plt+0x45b24>  // b.any
  4494f4:	ldr	x9, [x24, #16]
  4494f8:	cmp	x8, x9
  4494fc:	b.cs	4493c4 <feof@plt+0x45b24>  // b.hs, b.nlast
  449500:	ldr	x8, [x19, #40]
  449504:	ldr	w2, [x8, #60]
  449508:	adrp	x4, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44950c:	mov	w1, #0x4                   	// #4
  449510:	mov	x0, x19
  449514:	mov	w3, w25
  449518:	add	x4, x4, #0x790
  44951c:	bl	442ab4 <feof@plt+0x3f214>
  449520:	b	4493c4 <feof@plt+0x45b24>
  449524:	adrp	x0, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  449528:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44952c:	add	x0, x0, #0x7c0
  449530:	add	x2, x2, #0x7d3
  449534:	mov	w1, #0x48b                 	// #1163
  449538:	bl	429434 <feof@plt+0x25b94>
  44953c:	stp	x29, x30, [sp, #-64]!
  449540:	stp	x22, x21, [sp, #32]
  449544:	stp	x20, x19, [sp, #48]
  449548:	ldr	x22, [x0]
  44954c:	str	x23, [sp, #16]
  449550:	adrp	x20, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  449554:	mov	x19, x0
  449558:	ldr	x8, [x22]
  44955c:	mov	w23, #0x18                  	// #24
  449560:	add	x20, x20, #0x7eb
  449564:	mov	x29, sp
  449568:	ldrb	w9, [x8, #1]!
  44956c:	cmp	w9, #0x2f
  449570:	cinc	x21, x8, eq  // eq = none
  449574:	mov	x8, x21
  449578:	ldrb	w9, [x21], #1
  44957c:	cmp	w9, #0xa
  449580:	b.eq	4495e0 <feof@plt+0x45d40>  // b.none
  449584:	cmp	w9, #0x2f
  449588:	b.ne	449574 <feof@plt+0x45cd4>  // b.any
  44958c:	ldurb	w9, [x8, #-1]
  449590:	cmp	w9, #0x2a
  449594:	b.eq	449658 <feof@plt+0x45db8>  // b.none
  449598:	ldrb	w9, [x19, #1133]
  44959c:	cbz	w9, 449574 <feof@plt+0x45cd4>
  4495a0:	ldrb	w9, [x21]
  4495a4:	cmp	w9, #0x2a
  4495a8:	b.ne	449574 <feof@plt+0x45cd4>  // b.any
  4495ac:	ldrb	w8, [x8, #2]
  4495b0:	cmp	w8, #0x2f
  4495b4:	b.eq	449574 <feof@plt+0x45cd4>  // b.none
  4495b8:	str	x21, [x22]
  4495bc:	ldr	x8, [x19, #40]
  4495c0:	ldr	w9, [x22, #8]
  4495c4:	mov	w1, #0x2                   	// #2
  4495c8:	mov	x0, x19
  4495cc:	ldr	w2, [x8, #60]
  4495d0:	sub	w3, w21, w9
  4495d4:	mov	x4, x20
  4495d8:	bl	442ab4 <feof@plt+0x3f214>
  4495dc:	b	449574 <feof@plt+0x45cd4>
  4495e0:	mov	w1, #0x1                   	// #1
  4495e4:	mov	x0, x19
  4495e8:	str	x8, [x22]
  4495ec:	mov	w21, #0x1                   	// #1
  4495f0:	bl	4492f8 <feof@plt+0x45a58>
  4495f4:	ldr	x8, [x22, #16]
  4495f8:	ldr	x9, [x22, #32]
  4495fc:	cmp	x8, x9
  449600:	b.cs	44966c <feof@plt+0x45dcc>  // b.hs, b.nlast
  449604:	mov	x0, x19
  449608:	bl	448d9c <feof@plt+0x454fc>
  44960c:	ldr	x0, [x19, #40]
  449610:	ldr	w10, [x22, #16]
  449614:	ldr	w11, [x22, #8]
  449618:	ldr	w8, [x0, #12]
  44961c:	ldr	x9, [x0]
  449620:	sub	w2, w10, w11
  449624:	sub	w8, w8, #0x1
  449628:	smaddl	x8, w8, w23, x9
  44962c:	ldr	w9, [x0, #60]
  449630:	ldr	w12, [x8]
  449634:	ldrb	w13, [x8, #6]
  449638:	ldr	w8, [x8, #16]
  44963c:	sub	w9, w9, w12
  449640:	lsr	w9, w9, w13
  449644:	add	w8, w8, w9
  449648:	add	w1, w8, #0x1
  44964c:	bl	44ecdc <feof@plt+0x4b43c>
  449650:	ldr	x21, [x22]
  449654:	b	449574 <feof@plt+0x45cd4>
  449658:	mov	w1, #0x1                   	// #1
  44965c:	mov	x0, x19
  449660:	str	x21, [x22]
  449664:	bl	4492f8 <feof@plt+0x45a58>
  449668:	mov	w21, wzr
  44966c:	mov	w0, w21
  449670:	ldp	x20, x19, [sp, #48]
  449674:	ldp	x22, x21, [sp, #32]
  449678:	ldr	x23, [sp, #16]
  44967c:	ldp	x29, x30, [sp], #64
  449680:	ret
  449684:	stp	x29, x30, [sp, #-32]!
  449688:	stp	x20, x19, [sp, #16]
  44968c:	mov	x8, x1
  449690:	ldrb	w12, [x1]
  449694:	ldrb	w10, [x8, #1]!
  449698:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  44969c:	add	x9, x9, #0x4a2
  4496a0:	mov	w11, #0x204                 	// #516
  4496a4:	ldrh	w13, [x9, x10, lsl #1]
  4496a8:	mov	x19, x0
  4496ac:	sub	w12, w12, #0x71
  4496b0:	mov	x29, sp
  4496b4:	tst	w13, w11
  4496b8:	b.eq	4496dc <feof@plt+0x45e3c>  // b.none
  4496bc:	mov	w13, #0x43                  	// #67
  4496c0:	mul	w12, w12, w13
  4496c4:	add	w12, w12, w10, uxtb
  4496c8:	ldrb	w10, [x8, #1]!
  4496cc:	sub	w12, w12, #0x71
  4496d0:	ldrh	w14, [x9, x10, lsl #1]
  4496d4:	tst	w14, w11
  4496d8:	b.ne	4496c0 <feof@plt+0x45e20>  // b.any
  4496dc:	ldr	x0, [x19, #1088]
  4496e0:	sub	x8, x8, x1
  4496e4:	add	w3, w12, w8
  4496e8:	and	x2, x8, #0xffffffff
  4496ec:	mov	w4, #0x1                   	// #1
  4496f0:	bl	456b74 <feof@plt+0x532d4>
  4496f4:	ldrh	w8, [x0, #18]
  4496f8:	mov	x20, x0
  4496fc:	tbz	w8, #4, 449708 <feof@plt+0x45e68>
  449700:	ldrb	w9, [x19, #18]
  449704:	cbz	w9, 449718 <feof@plt+0x45e78>
  449708:	mov	x0, x20
  44970c:	ldp	x20, x19, [sp, #16]
  449710:	ldp	x29, x30, [sp], #32
  449714:	ret
  449718:	tbz	w8, #3, 44973c <feof@plt+0x45e9c>
  44971c:	ldrb	w8, [x19, #23]
  449720:	cbnz	w8, 44973c <feof@plt+0x45e9c>
  449724:	ldr	x3, [x20]
  449728:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44972c:	add	x2, x2, #0x901
  449730:	mov	w1, #0x3                   	// #3
  449734:	mov	x0, x19
  449738:	bl	4424f8 <feof@plt+0x3ec58>
  44973c:	ldr	x8, [x19, #1272]
  449740:	cmp	x8, x20
  449744:	b.ne	449778 <feof@plt+0x45ed8>  // b.any
  449748:	ldrb	w8, [x19, #22]
  44974c:	cbnz	w8, 449778 <feof@plt+0x45ed8>
  449750:	ldrb	w8, [x19, #1120]
  449754:	cbz	w8, 449764 <feof@plt+0x45ec4>
  449758:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44975c:	add	x2, x2, #0x91e
  449760:	b	44976c <feof@plt+0x45ecc>
  449764:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  449768:	add	x2, x2, #0x965
  44976c:	mov	w1, #0x2                   	// #2
  449770:	mov	x0, x19
  449774:	bl	4424f8 <feof@plt+0x3ec58>
  449778:	ldr	x8, [x19, #1280]
  44977c:	cmp	x8, x20
  449780:	b.ne	4497cc <feof@plt+0x45f2c>  // b.any
  449784:	ldrb	w8, [x19, #1154]
  449788:	cbz	w8, 449794 <feof@plt+0x45ef4>
  44978c:	ldrb	w8, [x19, #1167]
  449790:	cbz	w8, 4497a8 <feof@plt+0x45f08>
  449794:	ldrb	w8, [x19, #22]
  449798:	cbnz	w8, 4497cc <feof@plt+0x45f2c>
  44979c:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  4497a0:	add	x2, x2, #0xa04
  4497a4:	b	4497c0 <feof@plt+0x45f20>
  4497a8:	ldr	x8, [x19]
  4497ac:	cbz	x8, 4497b8 <feof@plt+0x45f18>
  4497b0:	ldrb	w8, [x8, #106]
  4497b4:	cbnz	w8, 4497cc <feof@plt+0x45f2c>
  4497b8:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  4497bc:	add	x2, x2, #0x9dc
  4497c0:	mov	w1, #0x2                   	// #2
  4497c4:	mov	x0, x19
  4497c8:	bl	4424f8 <feof@plt+0x3ec58>
  4497cc:	ldrb	w8, [x20, #19]
  4497d0:	tbz	w8, #1, 449708 <feof@plt+0x45e68>
  4497d4:	ldr	x3, [x20]
  4497d8:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  4497dc:	add	x2, x2, #0x9aa
  4497e0:	mov	w1, #0xf                   	// #15
  4497e4:	mov	x0, x19
  4497e8:	bl	442628 <feof@plt+0x3ed88>
  4497ec:	b	449708 <feof@plt+0x45e68>
  4497f0:	add	x0, x0, #0x568
  4497f4:	ret
  4497f8:	stp	x29, x30, [sp, #-48]!
  4497fc:	str	x21, [sp, #16]
  449800:	mov	w21, #0x18                  	// #24
  449804:	stp	x20, x19, [sp, #32]
  449808:	mov	x20, x0
  44980c:	umull	x0, w1, w21
  449810:	mov	x29, sp
  449814:	mov	w19, w1
  449818:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44981c:	umaddl	x8, w19, w21, x0
  449820:	stp	x0, x8, [x20, #16]
  449824:	str	xzr, [x20]
  449828:	ldp	x20, x19, [sp, #32]
  44982c:	ldr	x21, [sp, #16]
  449830:	ldp	x29, x30, [sp], #48
  449834:	ret
  449838:	stp	x29, x30, [sp, #-16]!
  44983c:	ldr	w8, [x0, #48]
  449840:	mov	x29, sp
  449844:	cbz	w8, 449878 <feof@plt+0x45fd8>
  449848:	cmp	w8, #0x2
  44984c:	b.eq	449878 <feof@plt+0x45fd8>  // b.none
  449850:	cmp	w8, #0x1
  449854:	b.ne	44988c <feof@plt+0x45fec>  // b.any
  449858:	ldp	x9, x8, [x0, #16]
  44985c:	sub	x8, x8, x9
  449860:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  449864:	asr	x8, x8, #3
  449868:	movk	x9, #0xaaab
  44986c:	mul	x0, x8, x9
  449870:	ldp	x29, x30, [sp], #16
  449874:	ret
  449878:	ldp	x9, x8, [x0, #16]
  44987c:	sub	x8, x8, x9
  449880:	lsr	x0, x8, #3
  449884:	ldp	x29, x30, [sp], #16
  449888:	ret
  44988c:	adrp	x0, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  449890:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  449894:	add	x0, x0, #0x7c0
  449898:	add	x2, x2, #0x7ff
  44989c:	mov	w1, #0x99f                 	// #2463
  4498a0:	bl	429434 <feof@plt+0x25b94>
  4498a4:	stp	x29, x30, [sp, #-64]!
  4498a8:	stp	x22, x21, [sp, #32]
  4498ac:	stp	x20, x19, [sp, #48]
  4498b0:	ldr	x11, [x0, #136]
  4498b4:	mov	x19, x0
  4498b8:	str	x23, [sp, #16]
  4498bc:	mov	x29, sp
  4498c0:	ldr	x12, [x11, #8]
  4498c4:	cbz	x12, 449930 <feof@plt+0x46090>
  4498c8:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4498cc:	movk	x8, #0xaaab
  4498d0:	ldr	w9, [x11, #48]
  4498d4:	mov	x10, x12
  4498d8:	cbz	w9, 449908 <feof@plt+0x46068>
  4498dc:	cmp	w9, #0x2
  4498e0:	b.eq	449908 <feof@plt+0x46068>  // b.none
  4498e4:	cmp	w9, #0x1
  4498e8:	b.ne	4499cc <feof@plt+0x4612c>  // b.any
  4498ec:	ldp	x11, x12, [x11, #16]
  4498f0:	sub	x12, x12, x11
  4498f4:	asr	x12, x12, #3
  4498f8:	mul	x12, x12, x8
  4498fc:	subs	w21, w1, w12
  449900:	b.ge	44991c <feof@plt+0x4607c>  // b.tcont
  449904:	b	449990 <feof@plt+0x460f0>
  449908:	ldp	x11, x12, [x11, #16]
  44990c:	sub	x12, x12, x11
  449910:	lsr	x12, x12, #3
  449914:	subs	w21, w1, w12
  449918:	b.lt	449990 <feof@plt+0x460f0>  // b.tstop
  44991c:	ldr	x12, [x10, #8]
  449920:	mov	w1, w21
  449924:	mov	x11, x10
  449928:	cbnz	x12, 4498d0 <feof@plt+0x46030>
  44992c:	b	449934 <feof@plt+0x46094>
  449930:	mov	w21, w1
  449934:	ldr	w8, [x19, #500]
  449938:	ldr	x22, [x19, #904]
  44993c:	mov	w1, wzr
  449940:	str	xzr, [x19, #904]
  449944:	add	w8, w8, #0x1
  449948:	str	w8, [x19, #500]
  44994c:	mov	x0, x19
  449950:	mov	w23, w1
  449954:	bl	4499fc <feof@plt+0x4615c>
  449958:	mov	x20, x0
  44995c:	cmp	w21, w23
  449960:	add	w1, w23, #0x1
  449964:	b.eq	449974 <feof@plt+0x460d4>  // b.none
  449968:	ldrb	w8, [x20, #4]
  44996c:	cmp	w8, #0x16
  449970:	b.ne	44994c <feof@plt+0x460ac>  // b.any
  449974:	mov	x0, x19
  449978:	bl	45295c <feof@plt+0x4f0bc>
  44997c:	ldr	w8, [x19, #500]
  449980:	str	x22, [x19, #904]
  449984:	sub	w8, w8, #0x1
  449988:	str	w8, [x19, #500]
  44998c:	b	4499b4 <feof@plt+0x46114>
  449990:	cbz	w9, 4499b0 <feof@plt+0x46110>
  449994:	cmp	w9, #0x2
  449998:	b.eq	4499b0 <feof@plt+0x46110>  // b.none
  44999c:	cmp	w9, #0x1
  4499a0:	b.ne	4499e4 <feof@plt+0x46144>  // b.any
  4499a4:	mov	w8, #0x18                  	// #24
  4499a8:	smaddl	x20, w1, w8, x11
  4499ac:	b	4499b4 <feof@plt+0x46114>
  4499b0:	ldr	x20, [x11, w1, sxtw #3]
  4499b4:	mov	x0, x20
  4499b8:	ldp	x20, x19, [sp, #48]
  4499bc:	ldp	x22, x21, [sp, #32]
  4499c0:	ldr	x23, [sp, #16]
  4499c4:	ldp	x29, x30, [sp], #64
  4499c8:	ret
  4499cc:	adrp	x0, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  4499d0:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  4499d4:	add	x0, x0, #0x7c0
  4499d8:	add	x2, x2, #0x7ff
  4499dc:	mov	w1, #0x99f                 	// #2463
  4499e0:	bl	429434 <feof@plt+0x25b94>
  4499e4:	adrp	x0, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  4499e8:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  4499ec:	add	x0, x0, #0x7c0
  4499f0:	add	x2, x2, #0xa4a
  4499f4:	mov	w1, #0x9ad                 	// #2477
  4499f8:	bl	429434 <feof@plt+0x25b94>
  4499fc:	stp	x29, x30, [sp, #-64]!
  449a00:	stp	x22, x21, [sp, #32]
  449a04:	stp	x20, x19, [sp, #48]
  449a08:	mov	x19, x0
  449a0c:	add	x21, x0, #0x98
  449a10:	mov	w22, #0x1770                	// #6000
  449a14:	str	x23, [sp, #16]
  449a18:	mov	x29, sp
  449a1c:	ldr	x23, [x19, #488]
  449a20:	ldr	x20, [x19, #448]
  449a24:	ldr	x8, [x23, #24]
  449a28:	cmp	x20, x8
  449a2c:	b.eq	449a40 <feof@plt+0x461a0>  // b.none
  449a30:	ldr	x8, [x23, #16]
  449a34:	cmp	x20, x8
  449a38:	b.cs	449a84 <feof@plt+0x461e4>  // b.hs, b.nlast
  449a3c:	b	449b74 <feof@plt+0x462d4>
  449a40:	ldr	x8, [x23]
  449a44:	cbnz	x8, 449a74 <feof@plt+0x461d4>
  449a48:	mov	w0, #0x20                  	// #32
  449a4c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  449a50:	mov	x20, x0
  449a54:	str	x0, [x23]
  449a58:	str	x23, [x0, #8]
  449a5c:	mov	w0, #0x1770                	// #6000
  449a60:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  449a64:	add	x8, x0, x22
  449a68:	stp	x0, x8, [x20, #16]
  449a6c:	str	xzr, [x20]
  449a70:	ldr	x8, [x23]
  449a74:	str	x8, [x19, #488]
  449a78:	ldr	x20, [x8, #16]
  449a7c:	mov	x23, x8
  449a80:	str	x20, [x19, #448]
  449a84:	ldr	x8, [x23, #24]
  449a88:	cmp	x20, x8
  449a8c:	b.cs	449b74 <feof@plt+0x462d4>  // b.hs, b.nlast
  449a90:	ldr	w8, [x19, #496]
  449a94:	cbz	w8, 449ab4 <feof@plt+0x46214>
  449a98:	sub	w8, w8, #0x1
  449a9c:	add	x9, x20, #0x18
  449aa0:	str	w8, [x19, #496]
  449aa4:	str	x9, [x19, #448]
  449aa8:	ldrh	w8, [x20, #6]
  449aac:	tbnz	w8, #6, 449ac8 <feof@plt+0x46228>
  449ab0:	b	449b0c <feof@plt+0x4626c>
  449ab4:	mov	x0, x19
  449ab8:	bl	449d0c <feof@plt+0x4646c>
  449abc:	mov	x20, x0
  449ac0:	ldrh	w8, [x20, #6]
  449ac4:	tbz	w8, #6, 449b0c <feof@plt+0x4626c>
  449ac8:	ldrb	w9, [x20, #4]
  449acc:	cmp	w9, #0x25
  449ad0:	b.ne	449ae0 <feof@plt+0x46240>  // b.any
  449ad4:	ldrb	w9, [x19, #25]
  449ad8:	cmp	w9, #0x1
  449adc:	b.ne	449b38 <feof@plt+0x46298>  // b.any
  449ae0:	ldrb	w8, [x19, #32]
  449ae4:	cmp	w8, #0x0
  449ae8:	csel	x20, x20, x21, eq  // eq = none
  449aec:	ldr	x8, [x19, #904]
  449af0:	cbz	x8, 449b0c <feof@plt+0x4626c>
  449af4:	ldrb	w9, [x19, #18]
  449af8:	cbnz	w9, 449b0c <feof@plt+0x4626c>
  449afc:	ldrb	w2, [x19, #25]
  449b00:	mov	x0, x19
  449b04:	mov	x1, x20
  449b08:	blr	x8
  449b0c:	ldrb	w8, [x19, #16]
  449b10:	cbnz	w8, 449b5c <feof@plt+0x462bc>
  449b14:	ldrb	w8, [x19, #32]
  449b18:	cbnz	w8, 449b5c <feof@plt+0x462bc>
  449b1c:	ldrb	w8, [x19, #18]
  449b20:	strb	wzr, [x19, #440]
  449b24:	cbz	w8, 449b5c <feof@plt+0x462bc>
  449b28:	ldrb	w8, [x20, #4]
  449b2c:	cmp	w8, #0x16
  449b30:	b.ne	449a1c <feof@plt+0x4617c>  // b.any
  449b34:	b	449b5c <feof@plt+0x462bc>
  449b38:	and	w1, w8, #0x1
  449b3c:	mov	x0, x19
  449b40:	bl	43e344 <feof@plt+0x3aaa4>
  449b44:	cbz	w0, 449aec <feof@plt+0x4624c>
  449b48:	ldrb	w8, [x19, #156]
  449b4c:	mov	x20, x21
  449b50:	cmp	w8, #0x53
  449b54:	b.eq	449a1c <feof@plt+0x4617c>  // b.none
  449b58:	b	449aec <feof@plt+0x4624c>
  449b5c:	mov	x0, x20
  449b60:	ldp	x20, x19, [sp, #48]
  449b64:	ldp	x22, x21, [sp, #32]
  449b68:	ldr	x23, [sp, #16]
  449b6c:	ldp	x29, x30, [sp], #64
  449b70:	ret
  449b74:	adrp	x0, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  449b78:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  449b7c:	add	x0, x0, #0x7c0
  449b80:	add	x2, x2, #0x824
  449b84:	mov	w1, #0xa1d                 	// #2589
  449b88:	bl	429434 <feof@plt+0x25b94>
  449b8c:	stp	x29, x30, [sp, #-80]!
  449b90:	stp	x26, x25, [sp, #16]
  449b94:	stp	x24, x23, [sp, #32]
  449b98:	stp	x22, x21, [sp, #48]
  449b9c:	stp	x20, x19, [sp, #64]
  449ba0:	ldr	x25, [x0, #488]
  449ba4:	ldr	x21, [x0, #448]
  449ba8:	ldr	w22, [x0, #496]
  449bac:	mov	x19, x0
  449bb0:	ldr	x8, [x25, #24]
  449bb4:	mov	x29, sp
  449bb8:	sub	x23, x8, x21
  449bbc:	cbz	w22, 449c48 <feof@plt+0x463a8>
  449bc0:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  449bc4:	asr	x8, x23, #3
  449bc8:	movk	x9, #0xaaab
  449bcc:	mul	x24, x8, x9
  449bd0:	cmp	x24, x22
  449bd4:	b.gt	449c1c <feof@plt+0x4637c>
  449bd8:	ldr	x20, [x25]
  449bdc:	cbz	x20, 449cd0 <feof@plt+0x46430>
  449be0:	cmp	x24, x22
  449be4:	b.ge	449c00 <feof@plt+0x46360>  // b.tcont
  449be8:	ldr	x1, [x20, #16]
  449bec:	sub	x8, x22, x24
  449bf0:	add	x8, x8, x8, lsl #1
  449bf4:	lsl	x2, x8, #3
  449bf8:	add	x0, x1, #0x18
  449bfc:	bl	403580 <memmove@plt>
  449c00:	ldr	x8, [x19, #488]
  449c04:	ldr	x9, [x20, #16]
  449c08:	ldr	x8, [x8, #24]
  449c0c:	ldur	x10, [x8, #-8]
  449c10:	ldur	q0, [x8, #-24]
  449c14:	str	x10, [x9, #16]
  449c18:	str	q0, [x9]
  449c1c:	cmp	x23, #0x19
  449c20:	b.lt	449c48 <feof@plt+0x463a8>  // b.tstop
  449c24:	ldr	x1, [x19, #448]
  449c28:	sub	x8, x24, #0x1
  449c2c:	cmp	x8, x22
  449c30:	csel	x8, x22, x8, gt
  449c34:	add	x8, x8, x8, lsl #1
  449c38:	add	x0, x1, #0x18
  449c3c:	lsl	x2, x8, #3
  449c40:	bl	403580 <memmove@plt>
  449c44:	b	449ca4 <feof@plt+0x46404>
  449c48:	cbnz	x23, 449ca4 <feof@plt+0x46404>
  449c4c:	ldr	x22, [x19, #488]
  449c50:	ldr	x8, [x19, #448]
  449c54:	ldr	x9, [x22, #24]
  449c58:	cmp	x8, x9
  449c5c:	b.ne	449ca4 <feof@plt+0x46404>  // b.any
  449c60:	ldr	x8, [x22]
  449c64:	cbnz	x8, 449c98 <feof@plt+0x463f8>
  449c68:	mov	w0, #0x20                  	// #32
  449c6c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  449c70:	mov	x20, x0
  449c74:	str	x0, [x22]
  449c78:	str	x22, [x0, #8]
  449c7c:	mov	w0, #0x1770                	// #6000
  449c80:	mov	w23, #0x1770                	// #6000
  449c84:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  449c88:	add	x8, x0, x23
  449c8c:	stp	x0, x8, [x20, #16]
  449c90:	str	xzr, [x20]
  449c94:	ldr	x8, [x22]
  449c98:	str	x8, [x19, #488]
  449c9c:	ldr	x8, [x8, #16]
  449ca0:	str	x8, [x19, #448]
  449ca4:	ldr	x0, [x19, #448]
  449ca8:	add	x8, x0, #0x18
  449cac:	str	x8, [x19, #448]
  449cb0:	ldur	w8, [x21, #-24]
  449cb4:	str	w8, [x0]
  449cb8:	ldp	x20, x19, [sp, #64]
  449cbc:	ldp	x22, x21, [sp, #48]
  449cc0:	ldp	x24, x23, [sp, #32]
  449cc4:	ldp	x26, x25, [sp, #16]
  449cc8:	ldp	x29, x30, [sp], #80
  449ccc:	ret
  449cd0:	mov	w0, #0x20                  	// #32
  449cd4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  449cd8:	mov	x20, x0
  449cdc:	str	x0, [x25]
  449ce0:	str	x25, [x0, #8]
  449ce4:	mov	w0, #0x1770                	// #6000
  449ce8:	mov	w26, #0x1770                	// #6000
  449cec:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  449cf0:	add	x8, x0, x26
  449cf4:	stp	x0, x8, [x20, #16]
  449cf8:	str	xzr, [x20]
  449cfc:	ldr	x20, [x25]
  449d00:	cmp	x24, x22
  449d04:	b.lt	449be8 <feof@plt+0x46348>  // b.tstop
  449d08:	b	449c00 <feof@plt+0x46360>
  449d0c:	sub	sp, sp, #0x70
  449d10:	stp	x29, x30, [sp, #16]
  449d14:	stp	x28, x27, [sp, #32]
  449d18:	stp	x26, x25, [sp, #48]
  449d1c:	stp	x24, x23, [sp, #64]
  449d20:	stp	x22, x21, [sp, #80]
  449d24:	stp	x20, x19, [sp, #96]
  449d28:	ldr	x19, [x0, #448]
  449d2c:	adrp	x25, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  449d30:	adrp	x27, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  449d34:	mov	x20, x0
  449d38:	mov	w22, wzr
  449d3c:	add	x24, x0, #0x1c8
  449d40:	add	x25, x25, #0xfc0
  449d44:	add	x8, x19, #0x18
  449d48:	add	x27, x27, #0x4a2
  449d4c:	add	x29, sp, #0x10
  449d50:	str	x8, [x0, #448]
  449d54:	strh	wzr, [x19, #6]
  449d58:	ldr	x23, [x20]
  449d5c:	ldrb	w8, [x23, #104]
  449d60:	cbz	w8, 449e3c <feof@plt+0x4659c>
  449d64:	ldrb	w8, [x20, #32]
  449d68:	cbnz	w8, 44aa5c <feof@plt+0x471bc>
  449d6c:	ldrb	w8, [x20, #16]
  449d70:	cbnz	w8, 44a9d4 <feof@plt+0x47134>
  449d74:	mov	x8, x23
  449d78:	ldr	x10, [x8, #16]
  449d7c:	ldr	x9, [x8, #32]
  449d80:	cmp	x10, x9
  449d84:	b.cc	449de8 <feof@plt+0x46548>  // b.lo, b.ul, b.last
  449d88:	ldrb	w11, [x20, #25]
  449d8c:	cbnz	w11, 44a9d4 <feof@plt+0x47134>
  449d90:	ldrb	w26, [x8, #105]
  449d94:	cmp	x10, x9
  449d98:	b.ls	449db0 <feof@plt+0x46510>  // b.plast
  449d9c:	ldr	x10, [x8, #24]
  449da0:	cmp	x10, x9
  449da4:	b.eq	449db0 <feof@plt+0x46510>  // b.none
  449da8:	tbnz	w26, #1, 449db0 <feof@plt+0x46510>
  449dac:	str	x9, [x8, #16]
  449db0:	mov	x0, x20
  449db4:	bl	4407b8 <feof@plt+0x3cf18>
  449db8:	ldr	x8, [x20]
  449dbc:	cmp	x8, #0x0
  449dc0:	cset	w9, ne  // ne = any
  449dc4:	tst	w26, #0x4
  449dc8:	cset	w10, eq  // eq = none
  449dcc:	and	w9, w10, w9
  449dd0:	and	w21, w21, w9
  449dd4:	tbnz	w26, #2, 449df8 <feof@plt+0x46558>
  449dd8:	cbz	x8, 449df8 <feof@plt+0x46558>
  449ddc:	ldrb	w9, [x8, #104]
  449de0:	cbnz	w9, 449d78 <feof@plt+0x464d8>
  449de4:	b	449dfc <feof@plt+0x4655c>
  449de8:	mov	x0, x20
  449dec:	bl	448d9c <feof@plt+0x454fc>
  449df0:	ldr	x8, [x20]
  449df4:	b	449dfc <feof@plt+0x4655c>
  449df8:	tbz	w21, #0, 44a9d4 <feof@plt+0x47134>
  449dfc:	ldr	w9, [x20, #500]
  449e00:	cmp	x23, x8
  449e04:	cset	w8, eq  // eq = none
  449e08:	and	w22, w22, w8
  449e0c:	cbnz	w9, 449e20 <feof@plt+0x46580>
  449e10:	ldr	x19, [x20, #472]
  449e14:	str	x24, [x20, #488]
  449e18:	add	x8, x19, #0x18
  449e1c:	str	x8, [x20, #448]
  449e20:	mov	w9, #0x40                  	// #64
  449e24:	strh	w9, [x19, #6]
  449e28:	ldrb	w8, [x20, #25]
  449e2c:	cmp	w8, #0x2
  449e30:	cinc	w8, w9, eq  // eq = none
  449e34:	strh	w8, [x19, #6]
  449e38:	ldr	x23, [x20]
  449e3c:	ldr	x8, [x20, #40]
  449e40:	ldr	w8, [x8, #60]
  449e44:	str	w8, [x19]
  449e48:	b	449e54 <feof@plt+0x465b4>
  449e4c:	sub	x8, x8, #0x1
  449e50:	str	x8, [x21]
  449e54:	ldr	w9, [x23, #56]
  449e58:	ldr	x10, [x23, #48]
  449e5c:	ldr	x8, [x23]
  449e60:	lsl	x9, x9, #4
  449e64:	ldr	x9, [x10, x9]
  449e68:	cmp	x8, x9
  449e6c:	b.cc	449e94 <feof@plt+0x465f4>  // b.lo, b.ul, b.last
  449e70:	ldr	x9, [x20, #8]
  449e74:	cbnz	x9, 449e94 <feof@plt+0x465f4>
  449e78:	mov	x0, x20
  449e7c:	mov	w1, wzr
  449e80:	bl	4492f8 <feof@plt+0x45a58>
  449e84:	ldr	x8, [x20, #40]
  449e88:	ldr	w8, [x8, #60]
  449e8c:	str	w8, [x19]
  449e90:	ldr	x8, [x23]
  449e94:	add	x9, x8, #0x1
  449e98:	str	x9, [x23]
  449e9c:	ldr	w21, [x20, #1408]
  449ea0:	ldrb	w28, [x8]
  449ea4:	cbnz	w21, 449ebc <feof@plt+0x4661c>
  449ea8:	ldr	w8, [x23, #8]
  449eac:	ldr	x0, [x20, #40]
  449eb0:	sub	w1, w9, w8
  449eb4:	bl	44eee0 <feof@plt+0x4b640>
  449eb8:	mov	w21, w0
  449ebc:	cmp	w28, #0x7e
  449ec0:	str	w21, [x19]
  449ec4:	b.hi	44ae60 <feof@plt+0x475c0>  // b.pmore
  449ec8:	adr	x8, 449ed8 <feof@plt+0x46638>
  449ecc:	ldrh	w9, [x25, x28, lsl #1]
  449ed0:	add	x8, x8, x9, lsl #2
  449ed4:	br	x8
  449ed8:	ldrh	w8, [x19, #6]
  449edc:	mov	w26, wzr
  449ee0:	orr	w8, w8, #0x1
  449ee4:	strh	w8, [x19, #6]
  449ee8:	ldr	x21, [x20]
  449eec:	b	449f0c <feof@plt+0x4666c>
  449ef0:	mov	w26, #0x1                   	// #1
  449ef4:	ldr	x9, [x21]
  449ef8:	add	x8, x9, #0x1
  449efc:	str	x8, [x21]
  449f00:	ldrb	w28, [x9]
  449f04:	ldrh	w9, [x27, x28, lsl #1]
  449f08:	tbz	w9, #11, 449f7c <feof@plt+0x466dc>
  449f0c:	and	w8, w28, #0xff
  449f10:	cmp	w8, #0x20
  449f14:	b.eq	449ef4 <feof@plt+0x46654>  // b.none
  449f18:	cmp	w8, #0x9
  449f1c:	b.eq	449ef4 <feof@plt+0x46654>  // b.none
  449f20:	cbz	w8, 449ef0 <feof@plt+0x46650>
  449f24:	ldrb	w8, [x20, #16]
  449f28:	cbz	w8, 449ef4 <feof@plt+0x46654>
  449f2c:	ldrb	w8, [x20, #1154]
  449f30:	cbz	w8, 449ef4 <feof@plt+0x46654>
  449f34:	ldr	x8, [x20, #40]
  449f38:	ldr	w9, [x21]
  449f3c:	ldr	w10, [x21, #8]
  449f40:	and	w11, w28, #0xff
  449f44:	ldr	w2, [x8, #60]
  449f48:	adrp	x8, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  449f4c:	sub	w3, w9, w10
  449f50:	adrp	x9, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  449f54:	add	x8, x8, #0xa8d
  449f58:	add	x9, x9, #0xa83
  449f5c:	cmp	w11, #0xc
  449f60:	adrp	x4, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  449f64:	csel	x5, x9, x8, eq  // eq = none
  449f68:	add	x4, x4, #0xa65
  449f6c:	mov	w1, #0x2                   	// #2
  449f70:	mov	x0, x20
  449f74:	bl	4429b8 <feof@plt+0x3f118>
  449f78:	b	449ef4 <feof@plt+0x46654>
  449f7c:	tbz	w26, #0, 449e4c <feof@plt+0x465ac>
  449f80:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  449f84:	add	x2, x2, #0xa9a
  449f88:	mov	x0, x20
  449f8c:	mov	w1, wzr
  449f90:	bl	4424f8 <feof@plt+0x3ec58>
  449f94:	ldr	x8, [x21]
  449f98:	b	449e4c <feof@plt+0x465ac>
  449f9c:	ldr	x21, [x23]
  449fa0:	ldrb	w28, [x21]
  449fa4:	cmp	w28, #0x2a
  449fa8:	b.eq	44a004 <feof@plt+0x46764>  // b.none
  449fac:	cmp	w28, #0x2f
  449fb0:	b.ne	44b254 <feof@plt+0x479b4>  // b.any
  449fb4:	ldrb	w8, [x20, #1160]
  449fb8:	cbnz	w8, 44b268 <feof@plt+0x479c8>
  449fbc:	ldr	x8, [x20]
  449fc0:	cbz	x8, 449fcc <feof@plt+0x4672c>
  449fc4:	ldrb	w8, [x8, #106]
  449fc8:	cbnz	w8, 44a0b0 <feof@plt+0x46810>
  449fcc:	ldr	w8, [x20, #1116]
  449fd0:	cbz	w8, 44a068 <feof@plt+0x467c8>
  449fd4:	ldrsb	w9, [x20, #1198]
  449fd8:	cmp	w9, #0x1
  449fdc:	b.lt	44a028 <feof@plt+0x46788>  // b.tstop
  449fe0:	ldrb	w9, [x20, #1120]
  449fe4:	cbnz	w9, 44a028 <feof@plt+0x46788>
  449fe8:	ldrb	w9, [x23, #105]
  449fec:	tbnz	w9, #0, 44a028 <feof@plt+0x46788>
  449ff0:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  449ff4:	add	x2, x2, #0x8a7
  449ff8:	mov	x0, x20
  449ffc:	mov	w1, wzr
  44a000:	b	44a088 <feof@plt+0x467e8>
  44a004:	mov	x0, x20
  44a008:	bl	44953c <feof@plt+0x45c9c>
  44a00c:	tbz	w0, #0, 44a118 <feof@plt+0x46878>
  44a010:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44a014:	add	x2, x2, #0x833
  44a018:	mov	w1, #0x3                   	// #3
  44a01c:	mov	x0, x20
  44a020:	bl	4424f8 <feof@plt+0x3ec58>
  44a024:	b	44a118 <feof@plt+0x46878>
  44a028:	sub	w8, w8, #0x5
  44a02c:	cmp	w8, #0x1
  44a030:	b.hi	44a0b0 <feof@plt+0x46810>  // b.pmore
  44a034:	ldrb	w8, [x21, #1]
  44a038:	cmp	w8, #0x2a
  44a03c:	b.eq	44b268 <feof@plt+0x479c8>  // b.none
  44a040:	ldrb	w8, [x20, #16]
  44a044:	cbnz	w8, 44b268 <feof@plt+0x479c8>
  44a048:	ldrb	w8, [x20, #18]
  44a04c:	cbnz	w8, 44b268 <feof@plt+0x479c8>
  44a050:	ldrb	w8, [x23, #105]
  44a054:	tbnz	w8, #0, 44a0b0 <feof@plt+0x46810>
  44a058:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44a05c:	add	x2, x2, #0x848
  44a060:	mov	w1, #0x3                   	// #3
  44a064:	b	44a084 <feof@plt+0x467e4>
  44a068:	ldrb	w9, [x20, #1154]
  44a06c:	cbz	w9, 449fd4 <feof@plt+0x46734>
  44a070:	ldrb	w9, [x23, #105]
  44a074:	tbnz	w9, #0, 449fd4 <feof@plt+0x46734>
  44a078:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44a07c:	add	x2, x2, #0x848
  44a080:	mov	w1, #0x2                   	// #2
  44a084:	mov	x0, x20
  44a088:	bl	4424f8 <feof@plt+0x3ec58>
  44a08c:	tbz	w0, #0, 44a0a4 <feof@plt+0x46804>
  44a090:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44a094:	add	x2, x2, #0x876
  44a098:	mov	w1, #0x5                   	// #5
  44a09c:	mov	x0, x20
  44a0a0:	bl	4424f8 <feof@plt+0x3ec58>
  44a0a4:	ldrb	w8, [x23, #105]
  44a0a8:	orr	w8, w8, #0x1
  44a0ac:	strb	w8, [x23, #105]
  44a0b0:	ldr	x8, [x20]
  44a0b4:	ldr	x10, [x20, #40]
  44a0b8:	ldr	x9, [x8]
  44a0bc:	ldr	w26, [x10, #60]
  44a0c0:	ldrb	w11, [x9]
  44a0c4:	cmp	w11, #0xa
  44a0c8:	b.eq	44a0e0 <feof@plt+0x46840>  // b.none
  44a0cc:	add	x9, x9, #0x1
  44a0d0:	str	x9, [x8]
  44a0d4:	ldrb	w10, [x9], #1
  44a0d8:	cmp	w10, #0xa
  44a0dc:	b.ne	44a0d0 <feof@plt+0x46830>  // b.any
  44a0e0:	mov	w1, #0x1                   	// #1
  44a0e4:	mov	x0, x20
  44a0e8:	bl	4492f8 <feof@plt+0x45a58>
  44a0ec:	ldr	x8, [x20, #40]
  44a0f0:	ldr	w8, [x8, #60]
  44a0f4:	cmp	w26, w8
  44a0f8:	b.eq	44a118 <feof@plt+0x46878>  // b.none
  44a0fc:	ldrb	w8, [x20, #1133]
  44a100:	cbz	w8, 44a118 <feof@plt+0x46878>
  44a104:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44a108:	add	x2, x2, #0x8d4
  44a10c:	mov	w1, #0x2                   	// #2
  44a110:	mov	x0, x20
  44a114:	bl	442628 <feof@plt+0x3ed88>
  44a118:	ldrb	w10, [x20, #1144]
  44a11c:	add	x9, x21, #0x1
  44a120:	sub	w8, w10, #0x3
  44a124:	cmp	w8, #0x2
  44a128:	b.cc	44a280 <feof@plt+0x469e0>  // b.lo, b.ul, b.last
  44a12c:	cmp	w10, #0x1
  44a130:	b.eq	44a524 <feof@plt+0x46c84>  // b.none
  44a134:	cmp	w10, #0x2
  44a138:	b.ne	44a860 <feof@plt+0x46fc0>  // b.any
  44a13c:	ldr	x8, [x20]
  44a140:	ldr	x8, [x8]
  44a144:	sub	x10, x8, x9
  44a148:	cmp	x10, #0x8
  44a14c:	b.cs	44a164 <feof@plt+0x468c4>  // b.hs, b.nlast
  44a150:	b	44a860 <feof@plt+0x46fc0>
  44a154:	add	x9, x9, #0x1
  44a158:	sub	x10, x8, x9
  44a15c:	cmp	x10, #0x7
  44a160:	b.ls	44a860 <feof@plt+0x46fc0>  // b.plast
  44a164:	ldrb	w10, [x9]
  44a168:	orr	w10, w10, #0x20
  44a16c:	cmp	w10, #0x66
  44a170:	b.ne	44a154 <feof@plt+0x468b4>  // b.any
  44a174:	ldrb	w10, [x9, #1]
  44a178:	orr	w10, w10, #0x20
  44a17c:	cmp	w10, #0x61
  44a180:	b.ne	44a154 <feof@plt+0x468b4>  // b.any
  44a184:	ldrb	w10, [x9, #2]
  44a188:	orr	w10, w10, #0x20
  44a18c:	cmp	w10, #0x6c
  44a190:	b.ne	44a154 <feof@plt+0x468b4>  // b.any
  44a194:	ldrb	w10, [x9, #3]
  44a198:	orr	w10, w10, #0x20
  44a19c:	cmp	w10, #0x6c
  44a1a0:	b.ne	44a154 <feof@plt+0x468b4>  // b.any
  44a1a4:	mov	x10, x9
  44a1a8:	ldrb	w11, [x10, #4]!
  44a1ac:	orr	w11, w11, #0x20
  44a1b0:	cmp	w11, #0x73
  44a1b4:	b.ne	44a1c0 <feof@plt+0x46920>  // b.any
  44a1b8:	add	x9, x9, #0x5
  44a1bc:	b	44a1c4 <feof@plt+0x46924>
  44a1c0:	mov	x9, x10
  44a1c4:	ldrb	w10, [x9]
  44a1c8:	cmp	w10, #0x2d
  44a1cc:	b.hi	44a1f0 <feof@plt+0x46950>  // b.pmore
  44a1d0:	mov	w11, #0x1                   	// #1
  44a1d4:	mov	x12, #0x200                 	// #512
  44a1d8:	lsl	x11, x11, x10
  44a1dc:	movk	x12, #0x2001, lsl #32
  44a1e0:	tst	x11, x12
  44a1e4:	b.eq	44a1f0 <feof@plt+0x46950>  // b.none
  44a1e8:	add	x9, x9, #0x1
  44a1ec:	b	44a1c4 <feof@plt+0x46924>
  44a1f0:	cmp	w10, #0x54
  44a1f4:	b.eq	44a200 <feof@plt+0x46960>  // b.none
  44a1f8:	cmp	w10, #0x74
  44a1fc:	b.ne	44a154 <feof@plt+0x468b4>  // b.any
  44a200:	ldrb	w10, [x9, #1]
  44a204:	orr	w10, w10, #0x20
  44a208:	cmp	w10, #0x68
  44a20c:	b.ne	44a154 <feof@plt+0x468b4>  // b.any
  44a210:	ldrb	w10, [x9, #2]
  44a214:	orr	w10, w10, #0x20
  44a218:	cmp	w10, #0x72
  44a21c:	b.ne	44a154 <feof@plt+0x468b4>  // b.any
  44a220:	ldrb	w10, [x9, #3]
  44a224:	sub	w10, w10, #0x4f
  44a228:	cmp	w10, #0x26
  44a22c:	b.hi	44a154 <feof@plt+0x468b4>  // b.pmore
  44a230:	adrp	x11, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44a234:	add	x11, x11, #0xbe
  44a238:	adr	x12, 44a154 <feof@plt+0x468b4>
  44a23c:	ldrh	w13, [x11, x10, lsl #1]
  44a240:	add	x12, x12, x13, lsl #2
  44a244:	mov	w26, #0x1                   	// #1
  44a248:	br	x12
  44a24c:	ldrb	w10, [x9, #4]
  44a250:	orr	w10, w10, #0x20
  44a254:	cmp	w10, #0x75
  44a258:	b.ne	44a154 <feof@plt+0x468b4>  // b.any
  44a25c:	ldrb	w10, [x9, #5]
  44a260:	orr	w10, w10, #0x20
  44a264:	cmp	w10, #0x67
  44a268:	b.ne	44a154 <feof@plt+0x468b4>  // b.any
  44a26c:	ldrb	w10, [x9, #6]
  44a270:	orr	w10, w10, #0x20
  44a274:	cmp	w10, #0x68
  44a278:	b.ne	44a154 <feof@plt+0x468b4>  // b.any
  44a27c:	b	44a524 <feof@plt+0x46c84>
  44a280:	ldrb	w8, [x9]
  44a284:	cmp	w8, #0x2d
  44a288:	b.eq	44a29c <feof@plt+0x469fc>  // b.none
  44a28c:	cmp	w8, #0x6c
  44a290:	b.eq	44a308 <feof@plt+0x46a68>  // b.none
  44a294:	cmp	w8, #0x40
  44a298:	b.ne	44a37c <feof@plt+0x46adc>  // b.any
  44a29c:	ldr	x10, [x20]
  44a2a0:	mvn	x11, x9
  44a2a4:	ldr	x10, [x10]
  44a2a8:	add	x10, x10, x11
  44a2ac:	cmp	x10, #0xb
  44a2b0:	b.cc	44a860 <feof@plt+0x46fc0>  // b.lo, b.ul, b.last
  44a2b4:	ldur	x10, [x21, #2]
  44a2b8:	ldur	x11, [x21, #5]
  44a2bc:	mov	x12, #0x6166                	// #24934
  44a2c0:	mov	x13, #0x746c                	// #29804
  44a2c4:	movk	x12, #0x6c6c, lsl #16
  44a2c8:	movk	x13, #0x7268, lsl #16
  44a2cc:	movk	x12, #0x6874, lsl #32
  44a2d0:	movk	x13, #0x756f, lsl #32
  44a2d4:	movk	x12, #0x6f72, lsl #48
  44a2d8:	movk	x13, #0x6867, lsl #48
  44a2dc:	eor	x10, x10, x12
  44a2e0:	eor	x11, x11, x13
  44a2e4:	orr	x10, x10, x11
  44a2e8:	cbnz	x10, 44a860 <feof@plt+0x46fc0>
  44a2ec:	cmp	w8, #0x40
  44a2f0:	b.ne	44a4ec <feof@plt+0x46c4c>  // b.any
  44a2f4:	ldrb	w8, [x21, #13]
  44a2f8:	cmp	w8, #0x40
  44a2fc:	b.ne	44a860 <feof@plt+0x46fc0>  // b.any
  44a300:	mov	w8, #0xd                   	// #13
  44a304:	b	44a4f0 <feof@plt+0x46c50>
  44a308:	ldr	x8, [x20]
  44a30c:	mvn	x9, x9
  44a310:	ldr	x8, [x8]
  44a314:	add	x8, x8, x9
  44a318:	cmp	x8, #0x10
  44a31c:	b.cc	44a860 <feof@plt+0x46fc0>  // b.lo, b.ul, b.last
  44a320:	ldur	x8, [x21, #2]
  44a324:	ldur	x9, [x21, #10]
  44a328:	mov	x10, #0x6e69                	// #28265
  44a32c:	mov	x11, #0x746c                	// #29804
  44a330:	movk	x10, #0x2074, lsl #16
  44a334:	movk	x11, #0x7268, lsl #16
  44a338:	movk	x10, #0x662d, lsl #32
  44a33c:	movk	x11, #0x756f, lsl #32
  44a340:	movk	x10, #0x6c61, lsl #48
  44a344:	movk	x11, #0x6867, lsl #48
  44a348:	eor	x8, x8, x10
  44a34c:	eor	x9, x9, x11
  44a350:	orr	x8, x8, x9
  44a354:	cbnz	x8, 44a860 <feof@plt+0x46fc0>
  44a358:	add	x8, x21, #0x12
  44a35c:	b	44a364 <feof@plt+0x46ac4>
  44a360:	add	x8, x8, #0x1
  44a364:	ldrb	w9, [x8]
  44a368:	cmp	w9, #0x20
  44a36c:	b.eq	44a360 <feof@plt+0x46ac0>  // b.none
  44a370:	cmp	w9, #0x9
  44a374:	b.eq	44a360 <feof@plt+0x46ac0>  // b.none
  44a378:	b	44a4f8 <feof@plt+0x46c58>
  44a37c:	cmp	w10, #0x4
  44a380:	b.ne	44a420 <feof@plt+0x46b80>  // b.any
  44a384:	add	x9, x21, #0x8
  44a388:	b	44a394 <feof@plt+0x46af4>
  44a38c:	ldurb	w8, [x9, #-6]
  44a390:	add	x9, x9, #0x1
  44a394:	and	w8, w8, #0xff
  44a398:	cmp	w8, #0x20
  44a39c:	b.eq	44a38c <feof@plt+0x46aec>  // b.none
  44a3a0:	cmp	w8, #0x9
  44a3a4:	b.eq	44a38c <feof@plt+0x46aec>  // b.none
  44a3a8:	ldr	x8, [x20]
  44a3ac:	ldr	x8, [x8]
  44a3b0:	sub	x8, x8, x9
  44a3b4:	add	x10, x8, #0x7
  44a3b8:	cmp	x10, #0x8
  44a3bc:	b.cc	44a860 <feof@plt+0x46fc0>  // b.lo, b.ul, b.last
  44a3c0:	ldur	w10, [x9, #-7]
  44a3c4:	ldur	w11, [x9, #-4]
  44a3c8:	mov	w12, #0x4146                	// #16710
  44a3cc:	mov	w13, #0x544c                	// #21580
  44a3d0:	movk	w12, #0x4c4c, lsl #16
  44a3d4:	movk	w13, #0x5248, lsl #16
  44a3d8:	eor	w10, w10, w12
  44a3dc:	eor	w11, w11, w13
  44a3e0:	orr	w10, w10, w11
  44a3e4:	cbnz	w10, 44a860 <feof@plt+0x46fc0>
  44a3e8:	ldrb	w10, [x9]
  44a3ec:	cmp	w10, #0x55
  44a3f0:	b.ne	44a648 <feof@plt+0x46da8>  // b.any
  44a3f4:	mov	w8, #0x8                   	// #8
  44a3f8:	add	x8, x9, x8
  44a3fc:	sub	x8, x8, #0x7
  44a400:	b	44a408 <feof@plt+0x46b68>
  44a404:	add	x8, x8, #0x1
  44a408:	ldrb	w9, [x8]
  44a40c:	cmp	w9, #0x20
  44a410:	b.eq	44a404 <feof@plt+0x46b64>  // b.none
  44a414:	cmp	w9, #0x9
  44a418:	b.eq	44a404 <feof@plt+0x46b64>  // b.none
  44a41c:	b	44a4f8 <feof@plt+0x46c58>
  44a420:	mov	x10, xzr
  44a424:	and	w9, w8, #0xff
  44a428:	cmp	w9, #0x2e
  44a42c:	b.hi	44a45c <feof@plt+0x46bbc>  // b.pmore
  44a430:	and	x9, x8, #0xff
  44a434:	mov	w11, #0x1                   	// #1
  44a438:	lsl	x9, x11, x9
  44a43c:	mov	x11, #0x200                 	// #512
  44a440:	movk	x11, #0x4003, lsl #32
  44a444:	tst	x9, x11
  44a448:	b.eq	44a45c <feof@plt+0x46bbc>  // b.none
  44a44c:	add	x8, x21, x10
  44a450:	ldrb	w8, [x8, #2]
  44a454:	add	x10, x10, #0x1
  44a458:	b	44a424 <feof@plt+0x46b84>
  44a45c:	orr	w11, w8, #0x20
  44a460:	add	x9, x21, x10
  44a464:	and	w11, w11, #0xff
  44a468:	cmp	w11, #0x65
  44a46c:	add	x9, x9, #0x1
  44a470:	b.ne	44a52c <feof@plt+0x46c8c>  // b.any
  44a474:	ldr	x11, [x20]
  44a478:	ldr	x11, [x11]
  44a47c:	sub	x9, x11, x9
  44a480:	cmp	x9, #0xd
  44a484:	b.cc	44a860 <feof@plt+0x46fc0>  // b.lo, b.ul, b.last
  44a488:	and	w9, w8, #0xff
  44a48c:	cmp	w9, #0x45
  44a490:	b.ne	44a4bc <feof@plt+0x46c1c>  // b.any
  44a494:	add	x9, x21, x10
  44a498:	ldrh	w11, [x9, #2]
  44a49c:	ldrb	w9, [x9, #4]
  44a4a0:	mov	w12, #0x534c                	// #21324
  44a4a4:	mov	w13, #0x45                  	// #69
  44a4a8:	eor	w11, w11, w12
  44a4ac:	eor	w9, w9, w13
  44a4b0:	orr	w9, w11, w9
  44a4b4:	tst	w9, #0xffff
  44a4b8:	b.eq	44a66c <feof@plt+0x46dcc>  // b.none
  44a4bc:	add	x9, x21, x10
  44a4c0:	ldrh	w11, [x9, #2]
  44a4c4:	ldrb	w9, [x9, #4]
  44a4c8:	mov	w12, #0x736c                	// #29548
  44a4cc:	mov	w13, #0x65                  	// #101
  44a4d0:	eor	w11, w11, w12
  44a4d4:	eor	w9, w9, w13
  44a4d8:	orr	w9, w11, w9
  44a4dc:	tst	w9, #0xffff
  44a4e0:	b.ne	44a860 <feof@plt+0x46fc0>  // b.any
  44a4e4:	mov	w11, wzr
  44a4e8:	b	44a670 <feof@plt+0x46dd0>
  44a4ec:	mov	w8, #0xc                   	// #12
  44a4f0:	add	x8, x9, x8
  44a4f4:	ldrb	w9, [x8]
  44a4f8:	ldrb	w10, [x21]
  44a4fc:	cmp	w10, #0x2a
  44a500:	b.ne	44a51c <feof@plt+0x46c7c>  // b.any
  44a504:	cmp	w9, #0x2a
  44a508:	b.ne	44a860 <feof@plt+0x46fc0>  // b.any
  44a50c:	ldrb	w8, [x8, #1]
  44a510:	cmp	w8, #0x2f
  44a514:	b.eq	44a524 <feof@plt+0x46c84>  // b.none
  44a518:	b	44a860 <feof@plt+0x46fc0>
  44a51c:	cmp	w9, #0xa
  44a520:	b.ne	44a860 <feof@plt+0x46fc0>  // b.any
  44a524:	mov	w26, #0x1                   	// #1
  44a528:	b	44a864 <feof@plt+0x46fc4>
  44a52c:	cmp	w11, #0x69
  44a530:	b.ne	44a5bc <feof@plt+0x46d1c>  // b.any
  44a534:	ldr	x11, [x20]
  44a538:	ldr	x11, [x11]
  44a53c:	sub	x9, x11, x9
  44a540:	cmp	x9, #0x14
  44a544:	b.cc	44a860 <feof@plt+0x46fc0>  // b.lo, b.ul, b.last
  44a548:	and	w9, w8, #0xff
  44a54c:	cmp	w9, #0x49
  44a550:	b.ne	44a584 <feof@plt+0x46ce4>  // b.any
  44a554:	add	x9, x21, x10
  44a558:	ldur	x11, [x9, #2]
  44a55c:	ldrh	w9, [x9, #10]
  44a560:	mov	x12, #0x544e                	// #21582
  44a564:	movk	x12, #0x4e45, lsl #16
  44a568:	movk	x12, #0x4954, lsl #32
  44a56c:	movk	x12, #0x4e4f, lsl #48
  44a570:	mov	w13, #0x4c41                	// #19521
  44a574:	eor	x11, x11, x12
  44a578:	eor	x9, x9, x13
  44a57c:	orr	x9, x11, x9
  44a580:	cbz	x9, 44a6c0 <feof@plt+0x46e20>
  44a584:	add	x9, x21, x10
  44a588:	ldur	x11, [x9, #2]
  44a58c:	ldrh	w9, [x9, #10]
  44a590:	mov	x12, #0x746e                	// #29806
  44a594:	movk	x12, #0x6e65, lsl #16
  44a598:	movk	x12, #0x6974, lsl #32
  44a59c:	movk	x12, #0x6e6f, lsl #48
  44a5a0:	mov	w13, #0x6c61                	// #27745
  44a5a4:	eor	x11, x11, x12
  44a5a8:	eor	x9, x9, x13
  44a5ac:	orr	x9, x11, x9
  44a5b0:	cbnz	x9, 44a860 <feof@plt+0x46fc0>
  44a5b4:	mov	w11, wzr
  44a5b8:	b	44a6c4 <feof@plt+0x46e24>
  44a5bc:	mov	w11, wzr
  44a5c0:	orr	w10, w8, #0x20
  44a5c4:	and	w10, w10, #0xff
  44a5c8:	cmp	w10, #0x66
  44a5cc:	b.ne	44a860 <feof@plt+0x46fc0>  // b.any
  44a5d0:	ldr	x10, [x20]
  44a5d4:	ldr	x10, [x10]
  44a5d8:	sub	x12, x10, x9
  44a5dc:	cmp	x12, #0x8
  44a5e0:	b.cc	44a860 <feof@plt+0x46fc0>  // b.lo, b.ul, b.last
  44a5e4:	and	w12, w8, #0xff
  44a5e8:	cmp	w12, #0x46
  44a5ec:	b.ne	44a614 <feof@plt+0x46d74>  // b.any
  44a5f0:	ldurh	w12, [x9, #1]
  44a5f4:	ldrb	w13, [x9, #3]
  44a5f8:	mov	w14, #0x4c41                	// #19521
  44a5fc:	mov	w15, #0x4c                  	// #76
  44a600:	eor	w12, w12, w14
  44a604:	eor	w13, w13, w15
  44a608:	orr	w12, w12, w13
  44a60c:	tst	w12, #0xffff
  44a610:	b.eq	44a754 <feof@plt+0x46eb4>  // b.none
  44a614:	tbnz	w11, #0, 44a860 <feof@plt+0x46fc0>
  44a618:	ldurh	w11, [x9, #1]
  44a61c:	ldrb	w12, [x9, #3]
  44a620:	mov	w13, #0x6c61                	// #27745
  44a624:	mov	w14, #0x6c                  	// #108
  44a628:	eor	w11, w11, w13
  44a62c:	eor	w12, w12, w14
  44a630:	orr	w11, w11, w12
  44a634:	tst	w11, #0xffff
  44a638:	b.ne	44a860 <feof@plt+0x46fc0>  // b.any
  44a63c:	mov	w12, wzr
  44a640:	mov	w14, #0x73                  	// #115
  44a644:	b	44a75c <feof@plt+0x46ebc>
  44a648:	cmp	x8, #0x4
  44a64c:	b.cc	44a860 <feof@plt+0x46fc0>  // b.lo, b.ul, b.last
  44a650:	ldr	w8, [x9]
  44a654:	mov	w10, #0x554f                	// #21839
  44a658:	movk	w10, #0x4847, lsl #16
  44a65c:	cmp	w8, w10
  44a660:	b.ne	44a860 <feof@plt+0x46fc0>  // b.any
  44a664:	mov	w8, #0xb                   	// #11
  44a668:	b	44a3f8 <feof@plt+0x46b58>
  44a66c:	mov	w11, #0x1                   	// #1
  44a670:	add	x9, x21, x10
  44a674:	ldrb	w10, [x9, #5]!
  44a678:	cmp	w10, #0x2c
  44a67c:	cinc	x9, x9, eq  // eq = none
  44a680:	ldrb	w10, [x9]
  44a684:	cmp	w10, #0x20
  44a688:	b.ne	44a860 <feof@plt+0x46fc0>  // b.any
  44a68c:	ldrb	w10, [x9, #1]!
  44a690:	cbz	w11, 44a69c <feof@plt+0x46dfc>
  44a694:	cmp	w10, #0x66
  44a698:	b.eq	44a860 <feof@plt+0x46fc0>  // b.none
  44a69c:	and	w8, w8, #0xff
  44a6a0:	cmp	w8, #0x65
  44a6a4:	b.ne	44a6b0 <feof@plt+0x46e10>  // b.any
  44a6a8:	cmp	w10, #0x46
  44a6ac:	b.eq	44a860 <feof@plt+0x46fc0>  // b.none
  44a6b0:	cmp	w11, #0x0
  44a6b4:	cset	w11, ne  // ne = any
  44a6b8:	mov	w8, w10
  44a6bc:	b	44a5c0 <feof@plt+0x46d20>
  44a6c0:	mov	w11, #0x1                   	// #1
  44a6c4:	add	x12, x21, x10
  44a6c8:	ldrb	w9, [x12, #12]
  44a6cc:	cmp	w9, #0x20
  44a6d0:	b.ne	44a6ec <feof@plt+0x46e4c>  // b.any
  44a6d4:	add	x9, x12, #0xd
  44a6d8:	cbz	w11, 44a730 <feof@plt+0x46e90>
  44a6dc:	ldrb	w10, [x12, #13]
  44a6e0:	cmp	w10, #0x66
  44a6e4:	b.ne	44a730 <feof@plt+0x46e90>  // b.any
  44a6e8:	b	44a860 <feof@plt+0x46fc0>
  44a6ec:	cbz	w11, 44a708 <feof@plt+0x46e68>
  44a6f0:	ldr	w9, [x12, #12]
  44a6f4:	mov	w12, #0x594c                	// #22860
  44a6f8:	movk	w12, #0x4620, lsl #16
  44a6fc:	cmp	w9, w12
  44a700:	b.ne	44a860 <feof@plt+0x46fc0>  // b.any
  44a704:	b	44a728 <feof@plt+0x46e88>
  44a708:	ldrh	w9, [x12, #12]
  44a70c:	ldrb	w12, [x12, #14]
  44a710:	mov	w13, #0x796c                	// #31084
  44a714:	eor	w9, w9, w13
  44a718:	eor	w12, w12, #0x20
  44a71c:	orr	w9, w9, w12
  44a720:	tst	w9, #0xffff
  44a724:	b.ne	44a860 <feof@plt+0x46fc0>  // b.any
  44a728:	add	x9, x21, x10
  44a72c:	add	x9, x9, #0xf
  44a730:	and	w10, w8, #0xff
  44a734:	ldrb	w8, [x9]
  44a738:	cmp	w10, #0x69
  44a73c:	b.ne	44a748 <feof@plt+0x46ea8>  // b.any
  44a740:	cmp	w8, #0x46
  44a744:	b.eq	44a860 <feof@plt+0x46fc0>  // b.none
  44a748:	cmp	w11, #0x0
  44a74c:	cset	w11, ne  // ne = any
  44a750:	b	44a5c0 <feof@plt+0x46d20>
  44a754:	mov	w14, #0x53                  	// #83
  44a758:	mov	w12, #0x1                   	// #1
  44a75c:	mov	x11, x9
  44a760:	ldrb	w13, [x11, #4]!
  44a764:	cmp	w14, w13
  44a768:	b.ne	44a780 <feof@plt+0x46ee0>  // b.any
  44a76c:	ldrb	w14, [x9, #5]
  44a770:	cmp	w14, #0x20
  44a774:	b.ne	44a780 <feof@plt+0x46ee0>  // b.any
  44a778:	add	x11, x9, #0x6
  44a77c:	b	44a7b0 <feof@plt+0x46f10>
  44a780:	cmp	w13, #0x2d
  44a784:	b.eq	44a790 <feof@plt+0x46ef0>  // b.none
  44a788:	cmp	w13, #0x20
  44a78c:	b.ne	44a798 <feof@plt+0x46ef8>  // b.any
  44a790:	add	x11, x9, #0x5
  44a794:	b	44a7b0 <feof@plt+0x46f10>
  44a798:	cmp	w12, #0x0
  44a79c:	mov	w9, #0x74                  	// #116
  44a7a0:	mov	w14, #0x54                  	// #84
  44a7a4:	csel	w9, w14, w9, ne  // ne = any
  44a7a8:	cmp	w9, w13
  44a7ac:	b.ne	44a860 <feof@plt+0x46fc0>  // b.any
  44a7b0:	and	w8, w8, #0xff
  44a7b4:	cmp	w8, #0x66
  44a7b8:	b.eq	44a7c8 <feof@plt+0x46f28>  // b.none
  44a7bc:	ldrb	w8, [x11]
  44a7c0:	cmp	w8, #0x54
  44a7c4:	b.eq	44a7d8 <feof@plt+0x46f38>  // b.none
  44a7c8:	tbnz	w12, #0, 44a860 <feof@plt+0x46fc0>
  44a7cc:	ldrb	w8, [x11]
  44a7d0:	cmp	w8, #0x74
  44a7d4:	b.ne	44a860 <feof@plt+0x46fc0>  // b.any
  44a7d8:	sub	x8, x10, x11
  44a7dc:	cmp	x8, #0x4
  44a7e0:	b.cc	44a860 <feof@plt+0x46fc0>  // b.lo, b.ul, b.last
  44a7e4:	adrp	x9, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44a7e8:	adrp	x10, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44a7ec:	add	x9, x9, #0xca4
  44a7f0:	add	x10, x10, #0xca0
  44a7f4:	cmp	w12, #0x0
  44a7f8:	csel	x9, x10, x9, ne  // ne = any
  44a7fc:	ldurh	w13, [x11, #1]
  44a800:	ldrb	w14, [x11, #3]
  44a804:	ldrh	w10, [x9]
  44a808:	ldrb	w9, [x9, #2]
  44a80c:	eor	w10, w13, w10
  44a810:	eor	w9, w14, w9
  44a814:	orr	w9, w10, w9
  44a818:	tst	w9, #0xffff
  44a81c:	b.eq	44a8a8 <feof@plt+0x47008>  // b.none
  44a820:	cmp	x8, #0x7
  44a824:	b.cc	44a860 <feof@plt+0x46fc0>  // b.lo, b.ul, b.last
  44a828:	adrp	x8, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44a82c:	adrp	x9, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44a830:	add	x8, x8, #0xc6a
  44a834:	add	x9, x9, #0xca8
  44a838:	cmp	w12, #0x0
  44a83c:	csel	x8, x9, x8, ne  // ne = any
  44a840:	ldur	w10, [x11, #1]
  44a844:	ldurh	w12, [x11, #5]
  44a848:	ldr	w9, [x8]
  44a84c:	ldrh	w8, [x8, #4]
  44a850:	eor	w9, w10, w9
  44a854:	eor	w8, w12, w8
  44a858:	orr	w8, w9, w8
  44a85c:	cbz	w8, 44a8b0 <feof@plt+0x47010>
  44a860:	mov	w26, w22
  44a864:	ldr	x8, [x20, #1072]
  44a868:	cbz	x8, 44a88c <feof@plt+0x46fec>
  44a86c:	ldr	x9, [x20]
  44a870:	ldr	w1, [x19]
  44a874:	sub	x2, x21, #0x1
  44a878:	mov	x0, x20
  44a87c:	ldr	x9, [x9]
  44a880:	sub	x9, x9, x21
  44a884:	add	x3, x9, #0x1
  44a888:	blr	x8
  44a88c:	ldrb	w8, [x20, #21]
  44a890:	cbnz	w8, 44b274 <feof@plt+0x479d4>
  44a894:	ldrh	w8, [x19, #6]
  44a898:	mov	w22, w26
  44a89c:	orr	w8, w8, #0x1
  44a8a0:	strh	w8, [x19, #6]
  44a8a4:	b	449e3c <feof@plt+0x4659c>
  44a8a8:	mov	w8, #0x4                   	// #4
  44a8ac:	b	44a8b4 <feof@plt+0x47014>
  44a8b0:	mov	w8, #0x7                   	// #7
  44a8b4:	add	x8, x11, x8
  44a8b8:	ldrb	w9, [x8]
  44a8bc:	cmp	w9, #0x2e
  44a8c0:	b.hi	44a4f8 <feof@plt+0x46c58>  // b.pmore
  44a8c4:	mov	w10, #0x1                   	// #1
  44a8c8:	mov	x11, #0x200                 	// #512
  44a8cc:	lsl	x10, x10, x9
  44a8d0:	movk	x11, #0x4003, lsl #32
  44a8d4:	tst	x10, x11
  44a8d8:	b.eq	44a8e4 <feof@plt+0x47044>  // b.none
  44a8dc:	add	x8, x8, #0x1
  44a8e0:	b	44a8b8 <feof@plt+0x47018>
  44a8e4:	cmp	x9, #0x2d
  44a8e8:	b.ne	44a4f8 <feof@plt+0x46c58>  // b.any
  44a8ec:	ldrb	w9, [x21]
  44a8f0:	add	x10, x8, #0x1
  44a8f4:	cmp	w9, #0x2a
  44a8f8:	b.eq	44a930 <feof@plt+0x47090>  // b.none
  44a8fc:	mov	x8, x10
  44a900:	b	44a908 <feof@plt+0x47068>
  44a904:	add	x8, x8, #0x1
  44a908:	ldrb	w9, [x8]
  44a90c:	cmp	w9, #0xd
  44a910:	b.hi	44a904 <feof@plt+0x47064>  // b.pmore
  44a914:	mov	w10, #0x1                   	// #1
  44a918:	lsl	w10, w10, w9
  44a91c:	mov	w11, #0x2401                	// #9217
  44a920:	tst	w10, w11
  44a924:	b.eq	44a904 <feof@plt+0x47064>  // b.none
  44a928:	b	44a4f8 <feof@plt+0x46c58>
  44a92c:	add	x10, x8, #0x1
  44a930:	ldrb	w9, [x10]
  44a934:	mov	x8, x10
  44a938:	cmp	w9, #0x29
  44a93c:	b.le	44a960 <feof@plt+0x470c0>
  44a940:	cmp	w9, #0x2a
  44a944:	b.ne	44a92c <feof@plt+0x4708c>  // b.any
  44a948:	mov	x10, x8
  44a94c:	ldrb	w9, [x10, #1]!
  44a950:	cmp	w9, #0x2f
  44a954:	mov	w9, #0x2a                  	// #42
  44a958:	b.ne	44a930 <feof@plt+0x47090>  // b.any
  44a95c:	b	44a4f8 <feof@plt+0x46c58>
  44a960:	cbz	w9, 44a4f8 <feof@plt+0x46c58>
  44a964:	cmp	w9, #0xa
  44a968:	b.eq	44a4f8 <feof@plt+0x46c58>  // b.none
  44a96c:	cmp	w9, #0xd
  44a970:	b.ne	44a92c <feof@plt+0x4708c>  // b.any
  44a974:	b	44a4f8 <feof@plt+0x46c58>
  44a978:	ldr	x8, [x23]
  44a97c:	ldr	x9, [x23, #32]
  44a980:	cmp	x8, x9
  44a984:	b.cs	44a9c8 <feof@plt+0x47128>  // b.hs, b.nlast
  44a988:	ldr	x0, [x20, #40]
  44a98c:	mov	w10, #0x18                  	// #24
  44a990:	mov	w2, wzr
  44a994:	ldr	w8, [x0, #12]
  44a998:	ldr	x9, [x0]
  44a99c:	sub	w8, w8, #0x1
  44a9a0:	smaddl	x8, w8, w10, x9
  44a9a4:	ldr	w9, [x0, #60]
  44a9a8:	ldr	w10, [x8]
  44a9ac:	ldrb	w11, [x8, #6]
  44a9b0:	ldr	w8, [x8, #16]
  44a9b4:	sub	w9, w9, w10
  44a9b8:	lsr	w9, w9, w11
  44a9bc:	add	w8, w8, w9
  44a9c0:	add	w1, w8, #0x1
  44a9c4:	bl	44ecdc <feof@plt+0x4b43c>
  44a9c8:	mov	w8, #0x1                   	// #1
  44a9cc:	strb	w8, [x23, #104]
  44a9d0:	b	449d54 <feof@plt+0x464b4>
  44a9d4:	mov	w8, #0x16                  	// #22
  44a9d8:	strb	w8, [x19, #4]
  44a9dc:	ldrb	w8, [x20, #16]
  44a9e0:	cbnz	w8, 44b1fc <feof@plt+0x4795c>
  44a9e4:	ldr	x8, [x20, #40]
  44a9e8:	mov	w9, #0x40                  	// #64
  44a9ec:	ldr	w8, [x8, #60]
  44a9f0:	strh	w9, [x19, #6]
  44a9f4:	str	w8, [x19]
  44a9f8:	b	44b1fc <feof@plt+0x4795c>
  44a9fc:	cmp	w28, #0x4c
  44aa00:	b.eq	44aa0c <feof@plt+0x4716c>  // b.none
  44aa04:	ldrb	w8, [x20, #1130]
  44aa08:	cbz	w8, 44af08 <feof@plt+0x47668>
  44aa0c:	ldr	x8, [x23]
  44aa10:	ldrb	w9, [x8]
  44aa14:	cmp	w9, #0x27
  44aa18:	cset	w10, eq  // eq = none
  44aa1c:	cmp	w28, #0x52
  44aa20:	cset	w11, ne  // ne = any
  44aa24:	cmp	w9, #0x22
  44aa28:	b.eq	44aa84 <feof@plt+0x471e4>  // b.none
  44aa2c:	and	w10, w11, w10
  44aa30:	tbnz	w10, #0, 44aa84 <feof@plt+0x471e4>
  44aa34:	cmp	w28, #0x52
  44aa38:	b.eq	44aed0 <feof@plt+0x47630>  // b.none
  44aa3c:	cmp	w9, #0x52
  44aa40:	b.ne	44aed0 <feof@plt+0x47630>  // b.any
  44aa44:	ldrb	w9, [x8, #1]
  44aa48:	cmp	w9, #0x22
  44aa4c:	b.ne	44b108 <feof@plt+0x47868>  // b.any
  44aa50:	ldrb	w9, [x20, #1130]
  44aa54:	cbnz	w9, 44aa84 <feof@plt+0x471e4>
  44aa58:	b	44b108 <feof@plt+0x47868>
  44aa5c:	mov	w8, #0x52                  	// #82
  44aa60:	strb	w8, [x19, #4]
  44aa64:	ldrb	w8, [x20, #33]
  44aa68:	strb	wzr, [x20, #32]
  44aa6c:	cbnz	w8, 44b1fc <feof@plt+0x4795c>
  44aa70:	ldrb	w8, [x20, #24]
  44aa74:	sub	w8, w8, #0x1
  44aa78:	strb	w8, [x20, #24]
  44aa7c:	b	44b1fc <feof@plt+0x4795c>
  44aa80:	ldr	x8, [x23]
  44aa84:	sub	x2, x8, #0x1
  44aa88:	mov	x0, x20
  44aa8c:	mov	x1, x19
  44aa90:	bl	44b73c <feof@plt+0x47e9c>
  44aa94:	b	44b17c <feof@plt+0x478dc>
  44aa98:	ldr	x8, [x23]
  44aa9c:	mov	x2, sp
  44aaa0:	mov	w1, #0x1                   	// #1
  44aaa4:	mov	x0, x20
  44aaa8:	sub	x21, x8, #0x1
  44aaac:	str	x21, [x23]
  44aab0:	str	wzr, [sp, #8]
  44aab4:	str	xzr, [sp]
  44aab8:	bl	44cd98 <feof@plt+0x494f8>
  44aabc:	tbz	w0, #0, 44ae54 <feof@plt+0x475b4>
  44aac0:	mov	w8, #0x35                  	// #53
  44aac4:	add	x4, x19, #0x10
  44aac8:	mov	x3, sp
  44aacc:	mov	w2, #0x1                   	// #1
  44aad0:	mov	x0, x20
  44aad4:	mov	x1, x21
  44aad8:	strb	w8, [x19, #4]
  44aadc:	bl	44cb40 <feof@plt+0x492a0>
  44aae0:	str	x0, [x19, #8]
  44aae4:	b	44ad34 <feof@plt+0x47494>
  44aae8:	mov	w8, #0x1                   	// #1
  44aaec:	strb	w8, [x19, #4]
  44aaf0:	ldr	x8, [x23]
  44aaf4:	ldrb	w9, [x8]
  44aaf8:	cmp	w9, #0x3d
  44aafc:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44ab00:	add	x8, x8, #0x1
  44ab04:	mov	w9, #0x18                  	// #24
  44ab08:	b	44b0f0 <feof@plt+0x47850>
  44ab0c:	mov	w8, #0x8                   	// #8
  44ab10:	strb	w8, [x19, #4]
  44ab14:	ldr	x8, [x23]
  44ab18:	ldrb	w9, [x8]
  44ab1c:	cmp	w9, #0x3d
  44ab20:	b.ne	44af1c <feof@plt+0x4767c>  // b.any
  44ab24:	add	x8, x8, #0x1
  44ab28:	mov	w9, #0x1f                  	// #31
  44ab2c:	b	44b0f0 <feof@plt+0x47850>
  44ab30:	mov	w8, #0x14                  	// #20
  44ab34:	strb	w8, [x19, #4]
  44ab38:	b	44b180 <feof@plt+0x478e0>
  44ab3c:	mov	w8, #0x4                   	// #4
  44ab40:	strb	w8, [x19, #4]
  44ab44:	ldr	x8, [x23]
  44ab48:	ldrb	w9, [x8]
  44ab4c:	cmp	w9, #0x3d
  44ab50:	b.eq	44afd0 <feof@plt+0x47730>  // b.none
  44ab54:	cmp	w9, #0x2b
  44ab58:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44ab5c:	add	x8, x8, #0x1
  44ab60:	mov	w9, #0x2d                  	// #45
  44ab64:	b	44b0f0 <feof@plt+0x47850>
  44ab68:	ldrb	w8, [x20, #19]
  44ab6c:	cbz	w8, 44ab90 <feof@plt+0x472f0>
  44ab70:	ldr	x8, [x23]
  44ab74:	mov	x0, x20
  44ab78:	mov	x1, x19
  44ab7c:	sub	x2, x8, #0x1
  44ab80:	bl	44b73c <feof@plt+0x47e9c>
  44ab84:	ldrb	w8, [x19, #4]
  44ab88:	cmp	w8, #0x3
  44ab8c:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44ab90:	mov	w8, #0x3                   	// #3
  44ab94:	strb	w8, [x19, #4]
  44ab98:	ldr	x8, [x23]
  44ab9c:	ldrb	w9, [x8]
  44aba0:	cmp	w9, #0x3c
  44aba4:	b.eq	44b054 <feof@plt+0x477b4>  // b.none
  44aba8:	cmp	w9, #0x3d
  44abac:	b.ne	44b080 <feof@plt+0x477e0>  // b.any
  44abb0:	add	x8, x8, #0x1
  44abb4:	mov	w9, #0x1a                  	// #26
  44abb8:	b	44b0f0 <feof@plt+0x47850>
  44abbc:	mov	w8, #0x11                  	// #17
  44abc0:	strb	w8, [x19, #4]
  44abc4:	b	44b180 <feof@plt+0x478e0>
  44abc8:	mov	w8, #0x34                  	// #52
  44abcc:	strb	w8, [x19, #4]
  44abd0:	b	44b180 <feof@plt+0x478e0>
  44abd4:	mov	w8, #0x2a                  	// #42
  44abd8:	strb	w8, [x19, #4]
  44abdc:	b	44b180 <feof@plt+0x478e0>
  44abe0:	mov	w8, #0x25                  	// #37
  44abe4:	strb	w8, [x19, #4]
  44abe8:	ldr	x8, [x23]
  44abec:	ldrb	w9, [x8]
  44abf0:	cmp	w9, #0x23
  44abf4:	b.ne	44ac08 <feof@plt+0x47368>  // b.any
  44abf8:	add	x8, x8, #0x1
  44abfc:	mov	w9, #0x26                  	// #38
  44ac00:	str	x8, [x23]
  44ac04:	strb	w9, [x19, #4]
  44ac08:	str	wzr, [x19, #8]
  44ac0c:	b	44b17c <feof@plt+0x478dc>
  44ac10:	mov	w8, #0x9                   	// #9
  44ac14:	strb	w8, [x19, #4]
  44ac18:	ldr	x8, [x23]
  44ac1c:	ldrb	w9, [x8]
  44ac20:	cmp	w9, #0x3d
  44ac24:	b.eq	44afdc <feof@plt+0x4773c>  // b.none
  44ac28:	cmp	w9, #0x26
  44ac2c:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44ac30:	add	x8, x8, #0x1
  44ac34:	mov	w9, #0xf                   	// #15
  44ac38:	b	44b0f0 <feof@plt+0x47850>
  44ac3c:	mov	w8, #0x15                  	// #21
  44ac40:	strb	w8, [x19, #4]
  44ac44:	b	44b180 <feof@plt+0x478e0>
  44ac48:	mov	w8, #0x6                   	// #6
  44ac4c:	strb	w8, [x19, #4]
  44ac50:	ldr	x8, [x23]
  44ac54:	ldrb	w9, [x8]
  44ac58:	cmp	w9, #0x3d
  44ac5c:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44ac60:	add	x8, x8, #0x1
  44ac64:	mov	w9, #0x1d                  	// #29
  44ac68:	b	44b0f0 <feof@plt+0x47850>
  44ac6c:	mov	w8, #0x13                  	// #19
  44ac70:	strb	w8, [x19, #4]
  44ac74:	b	44b180 <feof@plt+0x478e0>
  44ac78:	mov	w8, #0x5                   	// #5
  44ac7c:	strb	w8, [x19, #4]
  44ac80:	ldr	x8, [x23]
  44ac84:	ldrb	w9, [x8]
  44ac88:	cmp	w9, #0x2d
  44ac8c:	b.eq	44b03c <feof@plt+0x4779c>  // b.none
  44ac90:	cmp	w9, #0x3d
  44ac94:	b.eq	44b048 <feof@plt+0x477a8>  // b.none
  44ac98:	cmp	w9, #0x3e
  44ac9c:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44aca0:	add	x8, x8, #0x1
  44aca4:	mov	w9, #0x2f                  	// #47
  44aca8:	str	x8, [x23]
  44acac:	strb	w9, [x19, #4]
  44acb0:	ldr	x8, [x23]
  44acb4:	ldrb	w9, [x8]
  44acb8:	cmp	w9, #0x2a
  44acbc:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44acc0:	ldrb	w9, [x20, #1120]
  44acc4:	cbz	w9, 44b17c <feof@plt+0x478dc>
  44acc8:	add	x8, x8, #0x1
  44accc:	mov	w9, #0x32                  	// #50
  44acd0:	b	44b0f0 <feof@plt+0x47850>
  44acd4:	mov	w8, #0x30                  	// #48
  44acd8:	strb	w8, [x19, #4]
  44acdc:	ldr	x8, [x23]
  44ace0:	ldrb	w9, [x8]
  44ace4:	ldrh	w10, [x27, x9, lsl #1]
  44ace8:	tbnz	w10, #2, 44ad14 <feof@plt+0x47474>
  44acec:	cmp	w9, #0x2a
  44acf0:	b.eq	44b0e0 <feof@plt+0x47840>  // b.none
  44acf4:	cmp	w9, #0x2e
  44acf8:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44acfc:	ldrb	w9, [x8, #1]
  44ad00:	cmp	w9, #0x2e
  44ad04:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44ad08:	add	x8, x8, #0x2
  44ad0c:	mov	w9, #0x2c                  	// #44
  44ad10:	b	44b0f0 <feof@plt+0x47850>
  44ad14:	mov	w8, #0x37                  	// #55
  44ad18:	add	x1, x19, #0x8
  44ad1c:	mov	x2, sp
  44ad20:	mov	x0, x20
  44ad24:	str	wzr, [sp, #8]
  44ad28:	str	xzr, [sp]
  44ad2c:	strb	w8, [x19, #4]
  44ad30:	bl	44b4f0 <feof@plt+0x47c50>
  44ad34:	mov	x2, sp
  44ad38:	mov	x0, x20
  44ad3c:	mov	x1, x19
  44ad40:	bl	44b648 <feof@plt+0x47da8>
  44ad44:	b	44b17c <feof@plt+0x478dc>
  44ad48:	mov	w8, #0x12                  	// #18
  44ad4c:	strb	w8, [x19, #4]
  44ad50:	ldr	x8, [x23]
  44ad54:	ldrb	w9, [x8]
  44ad58:	cmp	w9, #0x3e
  44ad5c:	b.eq	44afe8 <feof@plt+0x47748>  // b.none
  44ad60:	cmp	w9, #0x3a
  44ad64:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44ad68:	ldrb	w9, [x20, #1120]
  44ad6c:	cbz	w9, 44b17c <feof@plt+0x478dc>
  44ad70:	add	x8, x8, #0x1
  44ad74:	mov	w9, #0x31                  	// #49
  44ad78:	b	44b0f0 <feof@plt+0x47850>
  44ad7c:	mov	w8, #0x2b                  	// #43
  44ad80:	strb	w8, [x19, #4]
  44ad84:	b	44b180 <feof@plt+0x478e0>
  44ad88:	strb	wzr, [x19, #4]
  44ad8c:	ldr	x8, [x23]
  44ad90:	ldrb	w9, [x8]
  44ad94:	cmp	w9, #0x3d
  44ad98:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44ad9c:	add	x8, x8, #0x1
  44ada0:	mov	w9, #0x17                  	// #23
  44ada4:	b	44b0f0 <feof@plt+0x47850>
  44ada8:	mov	w8, #0x2                   	// #2
  44adac:	strb	w8, [x19, #4]
  44adb0:	ldr	x8, [x23]
  44adb4:	ldrb	w9, [x8]
  44adb8:	cmp	w9, #0x3e
  44adbc:	b.eq	44b004 <feof@plt+0x47764>  // b.none
  44adc0:	cmp	w9, #0x3d
  44adc4:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44adc8:	add	x8, x8, #0x1
  44adcc:	mov	w9, #0x19                  	// #25
  44add0:	b	44b0f0 <feof@plt+0x47850>
  44add4:	mov	w8, #0x27                  	// #39
  44add8:	strb	w8, [x19, #4]
  44addc:	b	44b180 <feof@plt+0x478e0>
  44ade0:	mov	w8, #0x28                  	// #40
  44ade4:	strb	w8, [x19, #4]
  44ade8:	b	44b180 <feof@plt+0x478e0>
  44adec:	mov	w8, #0xb                   	// #11
  44adf0:	strb	w8, [x19, #4]
  44adf4:	ldr	x8, [x23]
  44adf8:	ldrb	w9, [x8]
  44adfc:	cmp	w9, #0x3d
  44ae00:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44ae04:	add	x8, x8, #0x1
  44ae08:	mov	w9, #0x22                  	// #34
  44ae0c:	b	44b0f0 <feof@plt+0x47850>
  44ae10:	mov	w8, #0x29                  	// #41
  44ae14:	strb	w8, [x19, #4]
  44ae18:	b	44b180 <feof@plt+0x478e0>
  44ae1c:	mov	w8, #0xa                   	// #10
  44ae20:	strb	w8, [x19, #4]
  44ae24:	ldr	x8, [x23]
  44ae28:	ldrb	w9, [x8]
  44ae2c:	cmp	w9, #0x3d
  44ae30:	b.eq	44b030 <feof@plt+0x47790>  // b.none
  44ae34:	cmp	w9, #0x7c
  44ae38:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44ae3c:	add	x8, x8, #0x1
  44ae40:	mov	w9, #0x10                  	// #16
  44ae44:	b	44b0f0 <feof@plt+0x47850>
  44ae48:	mov	w8, #0xe                   	// #14
  44ae4c:	strb	w8, [x19, #4]
  44ae50:	b	44b180 <feof@plt+0x478e0>
  44ae54:	ldr	x8, [x23]
  44ae58:	add	x8, x8, #0x1
  44ae5c:	str	x8, [x23]
  44ae60:	ldr	x8, [x20, #64]
  44ae64:	ldr	x21, [x23]
  44ae68:	ldp	x0, x9, [x8, #16]
  44ae6c:	sub	x9, x9, x0
  44ae70:	cmp	x9, #0x1
  44ae74:	b.hi	44afa4 <feof@plt+0x47704>  // b.pmore
  44ae78:	mov	x9, x20
  44ae7c:	ldr	x8, [x9, #72]!
  44ae80:	cbz	x8, 44aeac <feof@plt+0x4760c>
  44ae84:	ldr	x10, [x8, #24]
  44ae88:	ldr	x11, [x8, #8]
  44ae8c:	sub	x10, x10, x11
  44ae90:	sub	x10, x10, #0x2
  44ae94:	lsr	x10, x10, #1
  44ae98:	cmp	x10, #0xfa1
  44ae9c:	b.cc	44af84 <feof@plt+0x476e4>  // b.lo, b.ul, b.last
  44aea0:	mov	x9, x8
  44aea4:	ldr	x8, [x8]
  44aea8:	cbnz	x8, 44ae84 <feof@plt+0x475e4>
  44aeac:	mov	w0, #0x1f60                	// #8032
  44aeb0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44aeb4:	mov	w8, #0x1f40                	// #8000
  44aeb8:	add	x8, x0, x8
  44aebc:	str	x0, [x0, #8008]
  44aec0:	str	x0, [x0, #8016]
  44aec4:	str	x8, [x0, #8024]
  44aec8:	str	xzr, [x0, #8000]
  44aecc:	b	44af98 <feof@plt+0x476f8>
  44aed0:	cmp	w28, #0x75
  44aed4:	b.ne	44b108 <feof@plt+0x47868>  // b.any
  44aed8:	cmp	w9, #0x38
  44aedc:	b.ne	44b108 <feof@plt+0x47868>  // b.any
  44aee0:	ldrb	w9, [x8, #1]
  44aee4:	cmp	w9, #0x22
  44aee8:	b.eq	44aa84 <feof@plt+0x471e4>  // b.none
  44aeec:	cmp	w9, #0x52
  44aef0:	b.eq	44b0fc <feof@plt+0x4785c>  // b.none
  44aef4:	cmp	w9, #0x27
  44aef8:	b.ne	44b108 <feof@plt+0x47868>  // b.any
  44aefc:	ldrb	w9, [x20, #1129]
  44af00:	cbnz	w9, 44aa84 <feof@plt+0x471e4>
  44af04:	b	44b108 <feof@plt+0x47868>
  44af08:	cmp	w28, #0x52
  44af0c:	b.eq	44b108 <feof@plt+0x47868>  // b.none
  44af10:	ldrb	w8, [x20, #1128]
  44af14:	cbnz	w8, 44aa0c <feof@plt+0x4716c>
  44af18:	b	44b108 <feof@plt+0x47868>
  44af1c:	ldrb	w10, [x20, #1126]
  44af20:	cbz	w10, 44b17c <feof@plt+0x478dc>
  44af24:	cmp	w9, #0x3e
  44af28:	b.eq	44b220 <feof@plt+0x47980>  // b.none
  44af2c:	cmp	w9, #0x3a
  44af30:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44af34:	add	x8, x8, #0x1
  44af38:	str	x8, [x23]
  44af3c:	ldrh	w8, [x19, #6]
  44af40:	mov	w9, #0x25                  	// #37
  44af44:	strb	w9, [x19, #4]
  44af48:	orr	w8, w8, #0x2
  44af4c:	strh	w8, [x19, #6]
  44af50:	ldr	x8, [x23]
  44af54:	ldrb	w9, [x8]
  44af58:	cmp	w9, #0x25
  44af5c:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44af60:	ldrb	w9, [x8, #1]
  44af64:	cmp	w9, #0x3a
  44af68:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44af6c:	add	x8, x8, #0x2
  44af70:	mov	w9, #0x26                  	// #38
  44af74:	str	x8, [x23]
  44af78:	strb	w9, [x19, #4]
  44af7c:	str	wzr, [x19, #8]
  44af80:	b	44b17c <feof@plt+0x478dc>
  44af84:	ldr	x10, [x8]
  44af88:	str	x10, [x9]
  44af8c:	ldr	x0, [x8, #8]
  44af90:	str	xzr, [x8]
  44af94:	str	x0, [x8, #16]
  44af98:	ldr	x9, [x20, #64]
  44af9c:	str	x9, [x8]
  44afa0:	str	x8, [x20, #64]
  44afa4:	add	x9, x0, #0x2
  44afa8:	str	x9, [x8, #16]
  44afac:	ldurb	w8, [x21, #-1]
  44afb0:	mov	w9, #0x3d                  	// #61
  44afb4:	mov	w10, #0x1                   	// #1
  44afb8:	strb	wzr, [x0, #1]
  44afbc:	strb	w8, [x0]
  44afc0:	strb	w9, [x19, #4]
  44afc4:	str	w10, [x19, #8]
  44afc8:	str	x0, [x19, #16]
  44afcc:	b	44b17c <feof@plt+0x478dc>
  44afd0:	add	x8, x8, #0x1
  44afd4:	mov	w9, #0x1b                  	// #27
  44afd8:	b	44b0f0 <feof@plt+0x47850>
  44afdc:	add	x8, x8, #0x1
  44afe0:	mov	w9, #0x20                  	// #32
  44afe4:	b	44b0f0 <feof@plt+0x47850>
  44afe8:	ldrb	w9, [x20, #1126]
  44afec:	cbz	w9, 44b17c <feof@plt+0x478dc>
  44aff0:	add	x8, x8, #0x1
  44aff4:	str	x8, [x23]
  44aff8:	ldrh	w8, [x19, #6]
  44affc:	mov	w9, #0x28                  	// #40
  44b000:	b	44b244 <feof@plt+0x479a4>
  44b004:	add	x8, x8, #0x1
  44b008:	mov	w9, #0xc                   	// #12
  44b00c:	str	x8, [x23]
  44b010:	strb	w9, [x19, #4]
  44b014:	ldr	x8, [x23]
  44b018:	ldrb	w9, [x8]
  44b01c:	cmp	w9, #0x3d
  44b020:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44b024:	add	x8, x8, #0x1
  44b028:	mov	w9, #0x23                  	// #35
  44b02c:	b	44b0f0 <feof@plt+0x47850>
  44b030:	add	x8, x8, #0x1
  44b034:	mov	w9, #0x21                  	// #33
  44b038:	b	44b0f0 <feof@plt+0x47850>
  44b03c:	add	x8, x8, #0x1
  44b040:	mov	w9, #0x2e                  	// #46
  44b044:	b	44b0f0 <feof@plt+0x47850>
  44b048:	add	x8, x8, #0x1
  44b04c:	mov	w9, #0x1c                  	// #28
  44b050:	b	44b0f0 <feof@plt+0x47850>
  44b054:	add	x8, x8, #0x1
  44b058:	mov	w9, #0xd                   	// #13
  44b05c:	str	x8, [x23]
  44b060:	strb	w9, [x19, #4]
  44b064:	ldr	x8, [x23]
  44b068:	ldrb	w9, [x8]
  44b06c:	cmp	w9, #0x3d
  44b070:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44b074:	add	x8, x8, #0x1
  44b078:	mov	w9, #0x24                  	// #36
  44b07c:	b	44b0f0 <feof@plt+0x47850>
  44b080:	ldrb	w10, [x20, #1126]
  44b084:	cbz	w10, 44b17c <feof@plt+0x478dc>
  44b088:	cmp	w9, #0x25
  44b08c:	b.eq	44b234 <feof@plt+0x47994>  // b.none
  44b090:	cmp	w9, #0x3a
  44b094:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44b098:	ldrb	w9, [x20, #1120]
  44b09c:	cbz	w9, 44b0cc <feof@plt+0x4782c>
  44b0a0:	ldr	w9, [x20, #1116]
  44b0a4:	sub	w9, w9, #0xb
  44b0a8:	cmp	w9, #0x2
  44b0ac:	b.cc	44b0cc <feof@plt+0x4782c>  // b.lo, b.ul, b.last
  44b0b0:	ldrb	w9, [x8, #1]
  44b0b4:	cmp	w9, #0x3a
  44b0b8:	b.ne	44b0cc <feof@plt+0x4782c>  // b.any
  44b0bc:	ldrb	w9, [x8, #2]
  44b0c0:	orr	w9, w9, #0x4
  44b0c4:	cmp	w9, #0x3e
  44b0c8:	b.ne	44b17c <feof@plt+0x478dc>  // b.any
  44b0cc:	add	x8, x8, #0x1
  44b0d0:	str	x8, [x23]
  44b0d4:	ldrh	w8, [x19, #6]
  44b0d8:	mov	w9, #0x27                  	// #39
  44b0dc:	b	44b244 <feof@plt+0x479a4>
  44b0e0:	ldrb	w9, [x20, #1120]
  44b0e4:	cbz	w9, 44b17c <feof@plt+0x478dc>
  44b0e8:	add	x8, x8, #0x1
  44b0ec:	mov	w9, #0x33                  	// #51
  44b0f0:	str	x8, [x23]
  44b0f4:	strb	w9, [x19, #4]
  44b0f8:	b	44b17c <feof@plt+0x478dc>
  44b0fc:	ldrb	w9, [x8, #2]
  44b100:	cmp	w9, #0x22
  44b104:	b.eq	44aa50 <feof@plt+0x471b0>  // b.none
  44b108:	mov	w8, #0x35                  	// #53
  44b10c:	strb	w8, [x19, #4]
  44b110:	str	wzr, [sp, #8]
  44b114:	str	xzr, [sp]
  44b118:	ldr	x8, [x23]
  44b11c:	add	x4, x19, #0x10
  44b120:	mov	x3, sp
  44b124:	mov	x0, x20
  44b128:	sub	x1, x8, #0x1
  44b12c:	mov	w2, wzr
  44b130:	bl	44cb40 <feof@plt+0x492a0>
  44b134:	str	x0, [x19, #8]
  44b138:	mov	x2, sp
  44b13c:	mov	x0, x20
  44b140:	mov	x1, x19
  44b144:	bl	44b648 <feof@plt+0x47da8>
  44b148:	ldr	x8, [x19, #8]
  44b14c:	ldrb	w9, [x8, #18]
  44b150:	tbz	w9, #2, 44b16c <feof@plt+0x478cc>
  44b154:	ldrh	w9, [x19, #6]
  44b158:	orr	w9, w9, #0x10
  44b15c:	strh	w9, [x19, #6]
  44b160:	ldrb	w8, [x8, #16]
  44b164:	lsr	w8, w8, #1
  44b168:	strb	w8, [x19, #4]
  44b16c:	tbz	w22, #0, 44b17c <feof@plt+0x478dc>
  44b170:	ldrh	w8, [x19, #6]
  44b174:	orr	w8, w8, #0x20
  44b178:	strh	w8, [x19, #6]
  44b17c:	ldr	w21, [x19]
  44b180:	cmp	w21, #0x2
  44b184:	b.cc	44b1fc <feof@plt+0x4795c>  // b.lo, b.ul, b.last
  44b188:	ldrb	w8, [x19, #4]
  44b18c:	cmp	w8, #0x16
  44b190:	b.eq	44b1fc <feof@plt+0x4795c>  // b.none
  44b194:	ldr	w9, [x23, #56]
  44b198:	ldr	x10, [x23, #48]
  44b19c:	ldr	x8, [x23]
  44b1a0:	lsl	x9, x9, #4
  44b1a4:	ldr	x9, [x10, x9]
  44b1a8:	cmp	x8, x9
  44b1ac:	b.cc	44b1cc <feof@plt+0x4792c>  // b.lo, b.ul, b.last
  44b1b0:	ldr	x9, [x20, #8]
  44b1b4:	cbnz	x9, 44b1cc <feof@plt+0x4792c>
  44b1b8:	mov	x0, x20
  44b1bc:	mov	w1, wzr
  44b1c0:	bl	4492f8 <feof@plt+0x45a58>
  44b1c4:	ldr	w21, [x19]
  44b1c8:	ldr	x8, [x23]
  44b1cc:	ldr	w9, [x23, #8]
  44b1d0:	ldr	x0, [x20, #40]
  44b1d4:	sub	w1, w8, w9
  44b1d8:	bl	44eee0 <feof@plt+0x4b640>
  44b1dc:	ldr	x8, [x20, #40]
  44b1e0:	ldr	w1, [x19]
  44b1e4:	mov	w2, w21
  44b1e8:	bfi	x2, x0, #32, #32
  44b1ec:	mov	x0, x8
  44b1f0:	mov	x3, xzr
  44b1f4:	bl	44e000 <feof@plt+0x4a760>
  44b1f8:	str	w0, [x19]
  44b1fc:	mov	x0, x19
  44b200:	ldp	x20, x19, [sp, #96]
  44b204:	ldp	x22, x21, [sp, #80]
  44b208:	ldp	x24, x23, [sp, #64]
  44b20c:	ldp	x26, x25, [sp, #48]
  44b210:	ldp	x28, x27, [sp, #32]
  44b214:	ldp	x29, x30, [sp, #16]
  44b218:	add	sp, sp, #0x70
  44b21c:	ret
  44b220:	add	x8, x8, #0x1
  44b224:	str	x8, [x23]
  44b228:	ldrh	w8, [x19, #6]
  44b22c:	mov	w9, #0x2a                  	// #42
  44b230:	b	44b244 <feof@plt+0x479a4>
  44b234:	add	x8, x8, #0x1
  44b238:	str	x8, [x23]
  44b23c:	ldrh	w8, [x19, #6]
  44b240:	mov	w9, #0x29                  	// #41
  44b244:	orr	w8, w8, #0x2
  44b248:	strh	w8, [x19, #6]
  44b24c:	strb	w9, [x19, #4]
  44b250:	b	44b17c <feof@plt+0x478dc>
  44b254:	cmp	w28, #0x3d
  44b258:	b.ne	44b268 <feof@plt+0x479c8>  // b.any
  44b25c:	add	x8, x21, #0x1
  44b260:	mov	w9, #0x1e                  	// #30
  44b264:	b	44b0f0 <feof@plt+0x47850>
  44b268:	mov	w8, #0x7                   	// #7
  44b26c:	strb	w8, [x19, #4]
  44b270:	b	44b17c <feof@plt+0x478dc>
  44b274:	tbz	w26, #0, 44b284 <feof@plt+0x479e4>
  44b278:	ldrh	w8, [x19, #6]
  44b27c:	orr	w8, w8, #0x20
  44b280:	strh	w8, [x19, #6]
  44b284:	ldr	x8, [x20]
  44b288:	ldrb	w10, [x20, #16]
  44b28c:	mov	w11, #0x1                   	// #1
  44b290:	cmp	w28, #0x2f
  44b294:	ldr	x8, [x8]
  44b298:	ldurb	w9, [x8, #-1]
  44b29c:	sub	w8, w8, w21
  44b2a0:	ldrh	w9, [x27, x9, lsl #1]
  44b2a4:	bic	w9, w11, w9, lsr #10
  44b2a8:	add	w25, w9, w8
  44b2ac:	cbz	w10, 44b2bc <feof@plt+0x47a1c>
  44b2b0:	mov	w24, w25
  44b2b4:	b.eq	44b2cc <feof@plt+0x47a2c>  // b.none
  44b2b8:	b	44b2d0 <feof@plt+0x47a30>
  44b2bc:	b.ne	44b428 <feof@plt+0x47b88>  // b.any
  44b2c0:	ldrb	w8, [x20, #25]
  44b2c4:	mov	w24, w25
  44b2c8:	cbz	w8, 44b2d0 <feof@plt+0x47a30>
  44b2cc:	add	w24, w25, #0x2
  44b2d0:	mov	w1, w24
  44b2d4:	mov	x0, x20
  44b2d8:	bl	44d230 <feof@plt+0x49990>
  44b2dc:	mov	w8, #0x4f                  	// #79
  44b2e0:	mov	w9, #0x2f                  	// #47
  44b2e4:	mov	x22, x0
  44b2e8:	str	w24, [x19, #8]
  44b2ec:	str	x0, [x19, #16]
  44b2f0:	strb	w8, [x19, #4]
  44b2f4:	strb	w9, [x0], #1
  44b2f8:	sub	w2, w25, #0x1
  44b2fc:	mov	x1, x21
  44b300:	bl	402fc0 <memcpy@plt>
  44b304:	ldrb	w8, [x20, #16]
  44b308:	cbz	w8, 44b318 <feof@plt+0x47a78>
  44b30c:	cmp	w28, #0x2f
  44b310:	b.eq	44b328 <feof@plt+0x47a88>  // b.none
  44b314:	b	44b394 <feof@plt+0x47af4>
  44b318:	cmp	w28, #0x2f
  44b31c:	b.ne	44b394 <feof@plt+0x47af4>  // b.any
  44b320:	ldrb	w8, [x20, #25]
  44b324:	cbz	w8, 44b394 <feof@plt+0x47af4>
  44b328:	sub	w9, w24, #0x2
  44b32c:	mov	w8, #0x2a                  	// #42
  44b330:	sub	w10, w24, #0x1
  44b334:	mov	w11, #0x2f                  	// #47
  44b338:	cmp	w9, #0x3
  44b33c:	strb	w8, [x22, #1]
  44b340:	strb	w8, [x22, x9]
  44b344:	strb	w11, [x22, w10, uxtw]
  44b348:	b.cc	44b394 <feof@plt+0x47af4>  // b.lo, b.ul, b.last
  44b34c:	add	x8, x22, #0x3
  44b350:	sub	x9, x9, #0x2
  44b354:	mov	w10, #0x7c                  	// #124
  44b358:	b	44b36c <feof@plt+0x47acc>
  44b35c:	sturb	w10, [x8, #-1]
  44b360:	subs	x9, x9, #0x1
  44b364:	add	x8, x8, #0x1
  44b368:	b.eq	44b394 <feof@plt+0x47af4>  // b.none
  44b36c:	ldurb	w11, [x8, #-1]
  44b370:	cmp	w11, #0x2f
  44b374:	b.ne	44b360 <feof@plt+0x47ac0>  // b.any
  44b378:	ldurb	w11, [x8, #-2]
  44b37c:	cmp	w11, #0x2a
  44b380:	b.eq	44b35c <feof@plt+0x47abc>  // b.none
  44b384:	ldrb	w11, [x8]
  44b388:	cmp	w11, #0x2a
  44b38c:	b.eq	44b35c <feof@plt+0x47abc>  // b.none
  44b390:	b	44b360 <feof@plt+0x47ac0>
  44b394:	ldr	w8, [x20, #1396]
  44b398:	cbnz	w8, 44b3b4 <feof@plt+0x47b14>
  44b39c:	mov	w8, #0x100                 	// #256
  44b3a0:	mov	w0, #0x1000                	// #4096
  44b3a4:	str	w8, [x20, #1396]
  44b3a8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44b3ac:	ldr	w8, [x20, #1396]
  44b3b0:	str	x0, [x20, #1384]
  44b3b4:	ldr	w9, [x20, #1392]
  44b3b8:	cmp	w9, w8
  44b3bc:	b.ne	44b3d8 <feof@plt+0x47b38>  // b.any
  44b3c0:	ldr	x0, [x20, #1384]
  44b3c4:	lsl	w8, w8, #1
  44b3c8:	sbfiz	x1, x8, #4, #32
  44b3cc:	str	w8, [x20, #1396]
  44b3d0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  44b3d4:	str	x0, [x20, #1384]
  44b3d8:	ldrsw	x21, [x19, #8]
  44b3dc:	add	x0, x21, #0x1
  44b3e0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44b3e4:	ldrsw	x8, [x20, #1392]
  44b3e8:	ldr	x22, [x20, #1384]
  44b3ec:	mov	x2, x21
  44b3f0:	lsl	x24, x8, #4
  44b3f4:	str	x0, [x22, x24]
  44b3f8:	ldr	x1, [x19, #16]
  44b3fc:	bl	402fc0 <memcpy@plt>
  44b400:	ldr	x8, [x22, x24]
  44b404:	strb	wzr, [x8, x21]
  44b408:	ldr	x8, [x20, #1384]
  44b40c:	ldrsw	x9, [x20, #1392]
  44b410:	ldr	w10, [x19]
  44b414:	add	x8, x8, x9, lsl #4
  44b418:	add	w9, w9, #0x1
  44b41c:	str	w10, [x8, #8]
  44b420:	str	w9, [x20, #1392]
  44b424:	b	44b17c <feof@plt+0x478dc>
  44b428:	mov	w24, w25
  44b42c:	b	44b2d0 <feof@plt+0x47a30>
  44b430:	stp	x29, x30, [sp, #-48]!
  44b434:	stp	x20, x19, [sp, #32]
  44b438:	ldrb	w8, [x0, #16]
  44b43c:	str	x21, [sp, #16]
  44b440:	mov	x29, sp
  44b444:	cbz	w8, 44b460 <feof@plt+0x47bc0>
  44b448:	mov	w19, wzr
  44b44c:	mov	w0, w19
  44b450:	ldp	x20, x19, [sp, #32]
  44b454:	ldr	x21, [sp, #16]
  44b458:	ldp	x29, x30, [sp], #48
  44b45c:	ret
  44b460:	ldr	x8, [x0]
  44b464:	mov	x20, x0
  44b468:	ldrb	w9, [x8, #104]
  44b46c:	cbz	w9, 44b4d8 <feof@plt+0x47c38>
  44b470:	ldr	x10, [x8, #16]
  44b474:	ldr	x9, [x8, #32]
  44b478:	cmp	x10, x9
  44b47c:	b.cc	44b4e0 <feof@plt+0x47c40>  // b.lo, b.ul, b.last
  44b480:	ldrb	w11, [x20, #25]
  44b484:	cbnz	w11, 44b448 <feof@plt+0x47ba8>
  44b488:	ldrb	w21, [x8, #105]
  44b48c:	cmp	x10, x9
  44b490:	b.ls	44b4a8 <feof@plt+0x47c08>  // b.plast
  44b494:	ldr	x10, [x8, #24]
  44b498:	cmp	x10, x9
  44b49c:	b.eq	44b4a8 <feof@plt+0x47c08>  // b.none
  44b4a0:	tbnz	w21, #1, 44b4a8 <feof@plt+0x47c08>
  44b4a4:	str	x9, [x8, #16]
  44b4a8:	mov	x0, x20
  44b4ac:	bl	4407b8 <feof@plt+0x3cf18>
  44b4b0:	ldr	x8, [x20]
  44b4b4:	cmp	x8, #0x0
  44b4b8:	cset	w9, ne  // ne = any
  44b4bc:	tst	w21, #0x4
  44b4c0:	cset	w10, eq  // eq = none
  44b4c4:	and	w9, w10, w9
  44b4c8:	and	w19, w19, w9
  44b4cc:	tbnz	w21, #2, 44b44c <feof@plt+0x47bac>
  44b4d0:	cbnz	x8, 44b468 <feof@plt+0x47bc8>
  44b4d4:	b	44b44c <feof@plt+0x47bac>
  44b4d8:	mov	w19, #0x1                   	// #1
  44b4dc:	b	44b44c <feof@plt+0x47bac>
  44b4e0:	mov	x0, x20
  44b4e4:	bl	448d9c <feof@plt+0x454fc>
  44b4e8:	mov	w19, #0x1                   	// #1
  44b4ec:	b	44b44c <feof@plt+0x47bac>
  44b4f0:	stp	x29, x30, [sp, #-80]!
  44b4f4:	stp	x24, x23, [sp, #32]
  44b4f8:	stp	x22, x21, [sp, #48]
  44b4fc:	stp	x20, x19, [sp, #64]
  44b500:	ldr	x8, [x0]
  44b504:	adrp	x23, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  44b508:	mov	x21, x2
  44b50c:	mov	x19, x1
  44b510:	ldr	x22, [x8]
  44b514:	mov	x20, x0
  44b518:	add	x23, x23, #0x4a2
  44b51c:	mov	w24, #0x204                 	// #516
  44b520:	mov	x9, x22
  44b524:	str	x25, [sp, #16]
  44b528:	mov	x29, sp
  44b52c:	mov	x10, x9
  44b530:	b	44b548 <feof@plt+0x47ca8>
  44b534:	ldrb	w12, [x20, #1127]
  44b538:	cbz	w12, 44b5b4 <feof@plt+0x47d14>
  44b53c:	str	w11, [x21]
  44b540:	strb	wzr, [x21, #4]
  44b544:	add	x10, x10, #0x1
  44b548:	ldrb	w11, [x10]
  44b54c:	ldrh	w12, [x23, x11, lsl #1]
  44b550:	cmp	x11, #0x2e
  44b554:	and	w12, w12, w24
  44b558:	b.eq	44b53c <feof@plt+0x47c9c>  // b.none
  44b55c:	cbnz	w12, 44b53c <feof@plt+0x47c9c>
  44b560:	cmp	w11, #0x2d
  44b564:	b.eq	44b584 <feof@plt+0x47ce4>  // b.none
  44b568:	cmp	w11, #0x2b
  44b56c:	b.eq	44b584 <feof@plt+0x47ce4>  // b.none
  44b570:	cmp	w11, #0x27
  44b574:	b.ne	44b5b4 <feof@plt+0x47d14>  // b.any
  44b578:	ldrb	w12, [x20, #1166]
  44b57c:	cbnz	w12, 44b53c <feof@plt+0x47c9c>
  44b580:	b	44b5b4 <feof@plt+0x47d14>
  44b584:	ldurb	w12, [x10, #-1]
  44b588:	cmp	w12, #0x64
  44b58c:	b.gt	44b5a4 <feof@plt+0x47d04>
  44b590:	cmp	w12, #0x45
  44b594:	b.eq	44b53c <feof@plt+0x47c9c>  // b.none
  44b598:	cmp	w12, #0x50
  44b59c:	b.eq	44b534 <feof@plt+0x47c94>  // b.none
  44b5a0:	b	44b5b4 <feof@plt+0x47d14>
  44b5a4:	cmp	w12, #0x65
  44b5a8:	b.eq	44b53c <feof@plt+0x47c9c>  // b.none
  44b5ac:	cmp	w12, #0x70
  44b5b0:	b.eq	44b534 <feof@plt+0x47c94>  // b.none
  44b5b4:	mov	x25, x10
  44b5b8:	cmp	x10, x9
  44b5bc:	b.ls	44b5d8 <feof@plt+0x47d38>  // b.plast
  44b5c0:	mov	x10, x25
  44b5c4:	ldrb	w11, [x10, #-1]!
  44b5c8:	cmp	w11, #0x27
  44b5cc:	b.ne	44b5d8 <feof@plt+0x47d38>  // b.any
  44b5d0:	ldrb	w11, [x20, #1166]
  44b5d4:	cbnz	w11, 44b5b4 <feof@plt+0x47d14>
  44b5d8:	mov	x0, x20
  44b5dc:	mov	w1, wzr
  44b5e0:	mov	x2, x21
  44b5e4:	str	x25, [x8]
  44b5e8:	bl	44cd98 <feof@plt+0x494f8>
  44b5ec:	tbz	w0, #0, 44b5fc <feof@plt+0x47d5c>
  44b5f0:	ldr	x8, [x20]
  44b5f4:	ldr	x9, [x8]
  44b5f8:	b	44b52c <feof@plt+0x47c8c>
  44b5fc:	sub	x21, x22, #0x1
  44b600:	sub	w8, w25, w21
  44b604:	add	w1, w8, #0x1
  44b608:	mov	x0, x20
  44b60c:	str	w8, [x19]
  44b610:	bl	44d230 <feof@plt+0x49990>
  44b614:	ldr	w2, [x19]
  44b618:	mov	x1, x21
  44b61c:	mov	x20, x0
  44b620:	bl	402fc0 <memcpy@plt>
  44b624:	ldr	w8, [x19]
  44b628:	ldr	x25, [sp, #16]
  44b62c:	strb	wzr, [x20, x8]
  44b630:	str	x20, [x19, #8]
  44b634:	ldp	x20, x19, [sp, #64]
  44b638:	ldp	x22, x21, [sp, #48]
  44b63c:	ldp	x24, x23, [sp, #32]
  44b640:	ldp	x29, x30, [sp], #80
  44b644:	ret
  44b648:	stp	x29, x30, [sp, #-48]!
  44b64c:	stp	x22, x21, [sp, #16]
  44b650:	stp	x20, x19, [sp, #32]
  44b654:	ldr	w8, [x0, #1192]
  44b658:	ldr	w9, [x2, #8]
  44b65c:	mov	x29, sp
  44b660:	cmp	w8, w9
  44b664:	b.ge	44b674 <feof@plt+0x47dd4>  // b.tcont
  44b668:	ldrb	w8, [x0, #18]
  44b66c:	mov	x19, x0
  44b670:	cbz	w8, 44b684 <feof@plt+0x47de4>
  44b674:	ldp	x20, x19, [sp, #32]
  44b678:	ldp	x22, x21, [sp, #16]
  44b67c:	ldp	x29, x30, [sp], #48
  44b680:	ret
  44b684:	ldrb	w8, [x1, #4]
  44b688:	adrp	x9, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44b68c:	add	x9, x9, #0x1b8
  44b690:	mov	x20, x2
  44b694:	lsl	x8, x8, #4
  44b698:	ldr	w8, [x9, x8]
  44b69c:	mov	x21, x1
  44b6a0:	cmp	w8, #0x1
  44b6a4:	b.eq	44b6b8 <feof@plt+0x47e18>  // b.none
  44b6a8:	cmp	w8, #0x2
  44b6ac:	b.ne	44b6cc <feof@plt+0x47e2c>  // b.any
  44b6b0:	ldr	w8, [x21, #8]
  44b6b4:	b	44b6d0 <feof@plt+0x47e30>
  44b6b8:	ldr	x8, [x21, #8]
  44b6bc:	ldr	w8, [x8, #8]
  44b6c0:	add	w8, w8, w8, lsl #2
  44b6c4:	lsl	w8, w8, #1
  44b6c8:	b	44b6d0 <feof@plt+0x47e30>
  44b6cc:	mov	w8, #0x6                   	// #6
  44b6d0:	mov	w0, w8
  44b6d4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44b6d8:	mov	x22, x0
  44b6dc:	mov	x0, x19
  44b6e0:	mov	x1, x21
  44b6e4:	mov	x2, x22
  44b6e8:	mov	w3, wzr
  44b6ec:	bl	44d044 <feof@plt+0x497a4>
  44b6f0:	ldr	w8, [x20, #8]
  44b6f4:	ldr	w2, [x21]
  44b6f8:	adrp	x9, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44b6fc:	adrp	x10, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44b700:	add	x9, x9, #0xaca
  44b704:	add	x10, x10, #0xab4
  44b708:	cmp	w8, #0x1
  44b70c:	sub	w5, w0, w22
  44b710:	csel	x4, x10, x9, eq  // eq = none
  44b714:	mov	w1, #0x10                  	// #16
  44b718:	mov	x0, x19
  44b71c:	mov	w3, wzr
  44b720:	mov	x6, x22
  44b724:	bl	442ab4 <feof@plt+0x3f214>
  44b728:	mov	x0, x22
  44b72c:	ldp	x20, x19, [sp, #32]
  44b730:	ldp	x22, x21, [sp, #16]
  44b734:	ldp	x29, x30, [sp], #48
  44b738:	b	4031d0 <free@plt>
  44b73c:	sub	sp, sp, #0xf0
  44b740:	stp	x29, x30, [sp, #144]
  44b744:	stp	x28, x27, [sp, #160]
  44b748:	stp	x26, x25, [sp, #176]
  44b74c:	stp	x24, x23, [sp, #192]
  44b750:	stp	x22, x21, [sp, #208]
  44b754:	stp	x20, x19, [sp, #224]
  44b758:	mov	x8, x2
  44b75c:	ldrb	w9, [x8], #1
  44b760:	mov	x26, x2
  44b764:	mov	x21, x1
  44b768:	mov	x23, x0
  44b76c:	cmp	w9, #0x4c
  44b770:	add	x29, sp, #0x90
  44b774:	b.eq	44b790 <feof@plt+0x47ef0>  // b.none
  44b778:	cmp	w9, #0x75
  44b77c:	b.eq	44b798 <feof@plt+0x47ef8>  // b.none
  44b780:	cmp	w9, #0x55
  44b784:	mov	x12, x8
  44b788:	mov	w10, w9
  44b78c:	b.ne	44b7b4 <feof@plt+0x47f14>  // b.any
  44b790:	ldrb	w10, [x26, #1]
  44b794:	b	44b7b0 <feof@plt+0x47f10>
  44b798:	ldrb	w10, [x26, #1]
  44b79c:	cmp	w10, #0x38
  44b7a0:	b.ne	44b7b0 <feof@plt+0x47f10>  // b.any
  44b7a4:	ldrb	w10, [x26, #2]
  44b7a8:	add	x12, x26, #0x3
  44b7ac:	b	44b7b4 <feof@plt+0x47f14>
  44b7b0:	add	x12, x26, #0x2
  44b7b4:	cmp	w10, #0x22
  44b7b8:	stur	x23, [x29, #-64]
  44b7bc:	b.eq	44b814 <feof@plt+0x47f74>  // b.none
  44b7c0:	cmp	w10, #0x27
  44b7c4:	b.eq	44b84c <feof@plt+0x47fac>  // b.none
  44b7c8:	cmp	w10, #0x52
  44b7cc:	b.ne	44b87c <feof@plt+0x47fdc>  // b.any
  44b7d0:	ldr	x10, [x23]
  44b7d4:	cmp	w9, #0x4c
  44b7d8:	str	x21, [sp, #40]
  44b7dc:	ldr	x11, [x10, #48]
  44b7e0:	ldr	w10, [x10, #56]
  44b7e4:	add	x20, x11, x10, lsl #4
  44b7e8:	b.eq	44b88c <feof@plt+0x47fec>  // b.none
  44b7ec:	cmp	w9, #0x55
  44b7f0:	b.eq	44b894 <feof@plt+0x47ff4>  // b.none
  44b7f4:	cmp	w9, #0x75
  44b7f8:	b.ne	44b89c <feof@plt+0x47ffc>  // b.any
  44b7fc:	ldrb	w8, [x8]
  44b800:	mov	w9, #0x40                  	// #64
  44b804:	cmp	w8, #0x38
  44b808:	mov	w8, #0x42                  	// #66
  44b80c:	csel	w8, w8, w9, eq  // eq = none
  44b810:	b	44b8a0 <feof@plt+0x48000>
  44b814:	cmp	w9, #0x4c
  44b818:	b.eq	44c650 <feof@plt+0x48db0>  // b.none
  44b81c:	cmp	w9, #0x55
  44b820:	b.eq	44c660 <feof@plt+0x48dc0>  // b.none
  44b824:	cmp	w9, #0x75
  44b828:	b.ne	44c670 <feof@plt+0x48dd0>  // b.any
  44b82c:	ldrb	w8, [x8]
  44b830:	mov	w9, #0x40                  	// #64
  44b834:	mov	w10, #0x42                  	// #66
  44b838:	mov	w24, #0x22                  	// #34
  44b83c:	cmp	w8, #0x38
  44b840:	csel	w22, w10, w9, eq  // eq = none
  44b844:	mov	w8, wzr
  44b848:	b	44c6a4 <feof@plt+0x48e04>
  44b84c:	cmp	w9, #0x4c
  44b850:	b.eq	44c680 <feof@plt+0x48de0>  // b.none
  44b854:	cmp	w9, #0x55
  44b858:	b.eq	44c688 <feof@plt+0x48de8>  // b.none
  44b85c:	cmp	w9, #0x75
  44b860:	b.ne	44c690 <feof@plt+0x48df0>  // b.any
  44b864:	ldrb	w8, [x8]
  44b868:	mov	w9, #0x3a                  	// #58
  44b86c:	mov	w10, #0x3c                  	// #60
  44b870:	cmp	w8, #0x38
  44b874:	csel	w22, w10, w9, eq  // eq = none
  44b878:	b	44c694 <feof@plt+0x48df4>
  44b87c:	mov	w22, #0x44                  	// #68
  44b880:	mov	w24, #0x3e                  	// #62
  44b884:	mov	w8, wzr
  44b888:	b	44c6a4 <feof@plt+0x48e04>
  44b88c:	mov	w8, #0x3f                  	// #63
  44b890:	b	44b8a0 <feof@plt+0x48000>
  44b894:	mov	w8, #0x41                  	// #65
  44b898:	b	44b8a0 <feof@plt+0x48000>
  44b89c:	mov	w8, #0x3e                  	// #62
  44b8a0:	str	w8, [sp, #36]
  44b8a4:	mov	x25, xzr
  44b8a8:	mov	x22, xzr
  44b8ac:	mov	x19, xzr
  44b8b0:	mov	w8, wzr
  44b8b4:	add	x27, x12, #0x1
  44b8b8:	add	x28, x23, #0x48
  44b8bc:	stur	xzr, [x29, #-48]
  44b8c0:	str	wzr, [sp, #60]
  44b8c4:	str	xzr, [sp, #48]
  44b8c8:	stp	x27, x12, [sp, #8]
  44b8cc:	str	x26, [sp, #24]
  44b8d0:	stur	x28, [x29, #-56]
  44b8d4:	ldr	x11, [sp, #48]
  44b8d8:	mov	w9, w8
  44b8dc:	mov	w8, w11
  44b8e0:	mov	x24, x27
  44b8e4:	str	x11, [sp, #48]
  44b8e8:	str	x8, [sp, #64]
  44b8ec:	sub	x20, x20, #0x10
  44b8f0:	ldr	x8, [x20, #16]!
  44b8f4:	cmp	x8, x24
  44b8f8:	b.cc	44b8f0 <feof@plt+0x48050>  // b.lo, b.ul, b.last
  44b8fc:	stur	w9, [x29, #-68]
  44b900:	b.eq	44b944 <feof@plt+0x480a4>  // b.none
  44b904:	mov	x27, x24
  44b908:	ldrb	w21, [x27], #1
  44b90c:	cmp	x19, #0x10
  44b910:	b.ls	44c118 <feof@plt+0x48878>  // b.plast
  44b914:	ldur	w8, [x29, #-68]
  44b918:	cbnz	w8, 44c1a0 <feof@plt+0x48900>
  44b91c:	ldr	x8, [sp, #64]
  44b920:	mov	w9, wzr
  44b924:	mov	x24, x27
  44b928:	cmp	x19, x8
  44b92c:	b.ls	44b8ec <feof@plt+0x4804c>  // b.plast
  44b930:	b	44c12c <feof@plt+0x4888c>
  44b934:	mov	x26, x24
  44b938:	ldr	x8, [x20, #16]!
  44b93c:	cmp	x8, x24
  44b940:	b.ne	44b904 <feof@plt+0x48064>  // b.any
  44b944:	ldr	w21, [x20, #8]
  44b948:	cbz	w21, 44b938 <feof@plt+0x48098>
  44b94c:	cmp	w21, #0x5c
  44b950:	b.eq	44b95c <feof@plt+0x480bc>  // b.none
  44b954:	cmp	w21, #0x20
  44b958:	b.ne	44b9a8 <feof@plt+0x48108>  // b.any
  44b95c:	sub	x21, x24, x26
  44b960:	cbz	x25, 44ba10 <feof@plt+0x48170>
  44b964:	ldp	x0, x8, [x22, #16]
  44b968:	sub	x28, x8, x0
  44b96c:	subs	x27, x21, x28
  44b970:	b.ls	44ba88 <feof@plt+0x481e8>  // b.plast
  44b974:	mov	x1, x26
  44b978:	mov	x2, x28
  44b97c:	bl	402fc0 <memcpy@plt>
  44b980:	ldr	x8, [x22, #16]
  44b984:	mov	x0, x23
  44b988:	mov	x1, x22
  44b98c:	mov	x2, x27
  44b990:	add	x8, x8, x28
  44b994:	str	x8, [x22, #16]
  44b998:	add	x26, x26, x28
  44b99c:	bl	44db3c <feof@plt+0x4a29c>
  44b9a0:	mov	x22, x0
  44b9a4:	b	44ba8c <feof@plt+0x481ec>
  44b9a8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  44b9ac:	add	x8, x8, #0x1c8
  44b9b0:	ldrb	w8, [x8, x21]
  44b9b4:	cbz	w8, 44cb10 <feof@plt+0x49270>
  44b9b8:	str	wzr, [x20, #8]
  44b9bc:	ldrb	w8, [x23, #1125]
  44b9c0:	cbz	w8, 44b938 <feof@plt+0x48098>
  44b9c4:	sub	x23, x24, x26
  44b9c8:	cbz	x25, 44bbf0 <feof@plt+0x48350>
  44b9cc:	ldp	x0, x8, [x22, #16]
  44b9d0:	sub	x28, x8, x0
  44b9d4:	subs	x27, x23, x28
  44b9d8:	b.ls	44bc68 <feof@plt+0x483c8>  // b.plast
  44b9dc:	mov	x1, x26
  44b9e0:	mov	x2, x28
  44b9e4:	bl	402fc0 <memcpy@plt>
  44b9e8:	ldr	x8, [x22, #16]
  44b9ec:	ldur	x0, [x29, #-64]
  44b9f0:	mov	x1, x22
  44b9f4:	mov	x2, x27
  44b9f8:	add	x8, x8, x28
  44b9fc:	str	x8, [x22, #16]
  44ba00:	add	x26, x26, x28
  44ba04:	bl	44db3c <feof@plt+0x4a29c>
  44ba08:	mov	x22, x0
  44ba0c:	b	44bc6c <feof@plt+0x483cc>
  44ba10:	ldr	x25, [x28]
  44ba14:	cbz	x25, 44ba94 <feof@plt+0x481f4>
  44ba18:	ldr	x8, [x25, #24]
  44ba1c:	ldr	x9, [x25, #8]
  44ba20:	add	x10, x21, x21, lsl #1
  44ba24:	sub	x8, x8, x9
  44ba28:	mov	w9, #0x1f40                	// #8000
  44ba2c:	cmp	x8, x21
  44ba30:	add	x9, x9, x10, lsr #1
  44ba34:	b.cc	44ba48 <feof@plt+0x481a8>  // b.lo, b.ul, b.last
  44ba38:	cmp	x8, x9
  44ba3c:	b.hi	44ba48 <feof@plt+0x481a8>  // b.pmore
  44ba40:	mov	x8, x28
  44ba44:	b	44ba70 <feof@plt+0x481d0>
  44ba48:	mov	x8, x25
  44ba4c:	ldr	x25, [x25]
  44ba50:	cbz	x25, 44ba94 <feof@plt+0x481f4>
  44ba54:	ldr	x10, [x25, #24]
  44ba58:	ldr	x11, [x25, #8]
  44ba5c:	sub	x10, x10, x11
  44ba60:	cmp	x10, x21
  44ba64:	b.cc	44ba48 <feof@plt+0x481a8>  // b.lo, b.ul, b.last
  44ba68:	cmp	x10, x9
  44ba6c:	b.hi	44ba48 <feof@plt+0x481a8>  // b.pmore
  44ba70:	ldr	x9, [x25]
  44ba74:	str	x9, [x8]
  44ba78:	ldr	x8, [x25, #8]
  44ba7c:	str	xzr, [x25]
  44ba80:	str	x8, [x25, #16]
  44ba84:	b	44babc <feof@plt+0x4821c>
  44ba88:	mov	x27, x21
  44ba8c:	ldur	x28, [x29, #-56]
  44ba90:	b	44bac4 <feof@plt+0x48224>
  44ba94:	mov	w8, #0x1f40                	// #8000
  44ba98:	cmp	x21, x8
  44ba9c:	csel	x8, x21, x8, hi  // hi = pmore
  44baa0:	add	x8, x8, #0x7
  44baa4:	and	x22, x8, #0xfffffffffffffff8
  44baa8:	add	x0, x22, #0x20
  44baac:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44bab0:	add	x25, x0, x22
  44bab4:	stp	x0, x25, [x25, #16]
  44bab8:	stp	xzr, x0, [x25]
  44babc:	mov	x27, x21
  44bac0:	mov	x22, x25
  44bac4:	ldr	x0, [x22, #16]
  44bac8:	mov	x1, x26
  44bacc:	mov	x2, x27
  44bad0:	bl	402fc0 <memcpy@plt>
  44bad4:	ldr	x8, [x22, #16]
  44bad8:	add	x8, x8, x27
  44badc:	str	x8, [x22, #16]
  44bae0:	cbz	x25, 44bb10 <feof@plt+0x48270>
  44bae4:	ldr	x9, [x22, #24]
  44bae8:	ldur	x26, [x29, #-48]
  44baec:	cmp	x9, x8
  44baf0:	b.ne	44bba4 <feof@plt+0x48304>  // b.any
  44baf4:	mov	w2, #0x1                   	// #1
  44baf8:	mov	x0, x23
  44bafc:	mov	x1, x22
  44bb00:	str	x8, [x22, #16]
  44bb04:	bl	44db3c <feof@plt+0x4a29c>
  44bb08:	mov	x22, x0
  44bb0c:	b	44bba4 <feof@plt+0x48304>
  44bb10:	ldr	x25, [x28]
  44bb14:	ldur	x26, [x29, #-48]
  44bb18:	mov	w11, #0x1f41                	// #8001
  44bb1c:	cbz	x25, 44bb60 <feof@plt+0x482c0>
  44bb20:	ldr	x8, [x25, #8]
  44bb24:	ldr	x9, [x25, #24]
  44bb28:	mvn	x8, x8
  44bb2c:	add	x8, x9, x8
  44bb30:	cmp	x8, x11
  44bb34:	b.cc	44bb88 <feof@plt+0x482e8>  // b.lo, b.ul, b.last
  44bb38:	mov	x8, x25
  44bb3c:	ldr	x25, [x25]
  44bb40:	cbz	x25, 44bb60 <feof@plt+0x482c0>
  44bb44:	ldr	x9, [x25, #8]
  44bb48:	ldr	x10, [x25, #24]
  44bb4c:	mvn	x9, x9
  44bb50:	add	x9, x10, x9
  44bb54:	cmp	x9, x11
  44bb58:	b.cs	44bb38 <feof@plt+0x48298>  // b.hs, b.nlast
  44bb5c:	b	44bb8c <feof@plt+0x482ec>
  44bb60:	mov	w0, #0x1f60                	// #8032
  44bb64:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44bb68:	mov	w8, #0x1f40                	// #8000
  44bb6c:	add	x25, x0, x8
  44bb70:	str	x0, [x0, #8008]
  44bb74:	str	x0, [x0, #8016]
  44bb78:	str	x25, [x0, #8024]
  44bb7c:	str	xzr, [x0, #8000]
  44bb80:	mov	x22, x25
  44bb84:	b	44bba4 <feof@plt+0x48304>
  44bb88:	mov	x8, x28
  44bb8c:	ldr	x9, [x25]
  44bb90:	mov	x22, x25
  44bb94:	str	x9, [x8]
  44bb98:	ldr	x8, [x25, #8]
  44bb9c:	str	xzr, [x25]
  44bba0:	str	x8, [x25, #16]
  44bba4:	ldr	x8, [x22, #16]
  44bba8:	mov	w9, #0x5c                  	// #92
  44bbac:	adrp	x10, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  44bbb0:	add	x10, x10, #0xf09
  44bbb4:	strb	w9, [x8]
  44bbb8:	ldr	x8, [x22, #16]
  44bbbc:	add	x9, x21, x26
  44bbc0:	cmp	x24, x10
  44bbc4:	add	x21, x9, #0x1
  44bbc8:	add	x8, x8, #0x1
  44bbcc:	str	x8, [x22, #16]
  44bbd0:	b.eq	44beac <feof@plt+0x4860c>  // b.none
  44bbd4:	cmp	x19, #0x10
  44bbd8:	b.hi	44beac <feof@plt+0x4860c>  // b.pmore
  44bbdc:	mov	w8, #0x5c                  	// #92
  44bbe0:	sub	x9, x29, #0x28
  44bbe4:	strb	w8, [x9, x19]
  44bbe8:	add	x19, x19, #0x1
  44bbec:	b	44beac <feof@plt+0x4860c>
  44bbf0:	ldr	x25, [x28]
  44bbf4:	cbz	x25, 44bc74 <feof@plt+0x483d4>
  44bbf8:	ldr	x8, [x25, #24]
  44bbfc:	ldr	x9, [x25, #8]
  44bc00:	add	x10, x23, x23, lsl #1
  44bc04:	sub	x8, x8, x9
  44bc08:	mov	w9, #0x1f40                	// #8000
  44bc0c:	cmp	x8, x23
  44bc10:	add	x9, x9, x10, lsr #1
  44bc14:	b.cc	44bc28 <feof@plt+0x48388>  // b.lo, b.ul, b.last
  44bc18:	cmp	x8, x9
  44bc1c:	b.hi	44bc28 <feof@plt+0x48388>  // b.pmore
  44bc20:	mov	x8, x28
  44bc24:	b	44bc50 <feof@plt+0x483b0>
  44bc28:	mov	x8, x25
  44bc2c:	ldr	x25, [x25]
  44bc30:	cbz	x25, 44bc74 <feof@plt+0x483d4>
  44bc34:	ldr	x10, [x25, #24]
  44bc38:	ldr	x11, [x25, #8]
  44bc3c:	sub	x10, x10, x11
  44bc40:	cmp	x10, x23
  44bc44:	b.cc	44bc28 <feof@plt+0x48388>  // b.lo, b.ul, b.last
  44bc48:	cmp	x10, x9
  44bc4c:	b.hi	44bc28 <feof@plt+0x48388>  // b.pmore
  44bc50:	ldr	x9, [x25]
  44bc54:	str	x9, [x8]
  44bc58:	ldr	x8, [x25, #8]
  44bc5c:	str	xzr, [x25]
  44bc60:	str	x8, [x25, #16]
  44bc64:	b	44bc9c <feof@plt+0x483fc>
  44bc68:	mov	x27, x23
  44bc6c:	ldur	x28, [x29, #-56]
  44bc70:	b	44bca4 <feof@plt+0x48404>
  44bc74:	mov	w8, #0x1f40                	// #8000
  44bc78:	cmp	x23, x8
  44bc7c:	csel	x8, x23, x8, hi  // hi = pmore
  44bc80:	add	x8, x8, #0x7
  44bc84:	and	x22, x8, #0xfffffffffffffff8
  44bc88:	add	x0, x22, #0x20
  44bc8c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44bc90:	add	x25, x0, x22
  44bc94:	stp	x0, x25, [x25, #16]
  44bc98:	stp	xzr, x0, [x25]
  44bc9c:	mov	x27, x23
  44bca0:	mov	x22, x25
  44bca4:	ldr	x0, [x22, #16]
  44bca8:	mov	x1, x26
  44bcac:	mov	x2, x27
  44bcb0:	bl	402fc0 <memcpy@plt>
  44bcb4:	ldr	x8, [x22, #16]
  44bcb8:	add	x0, x8, x27
  44bcbc:	str	x0, [x22, #16]
  44bcc0:	cbz	x25, 44bd18 <feof@plt+0x48478>
  44bcc4:	ldr	x8, [x22, #24]
  44bcc8:	sub	x26, x8, x0
  44bccc:	cmp	x26, #0x1
  44bcd0:	b.hi	44bd68 <feof@plt+0x484c8>  // b.pmore
  44bcd4:	adrp	x27, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  44bcd8:	add	x27, x27, #0xe8c
  44bcdc:	mov	x1, x27
  44bce0:	mov	x2, x26
  44bce4:	bl	402fc0 <memcpy@plt>
  44bce8:	ldr	x8, [x22, #16]
  44bcec:	ldur	x0, [x29, #-64]
  44bcf0:	add	x28, x27, x26
  44bcf4:	mov	x1, x22
  44bcf8:	add	x8, x8, x26
  44bcfc:	str	x8, [x22, #16]
  44bd00:	mov	w8, #0x2                   	// #2
  44bd04:	sub	x26, x8, x26
  44bd08:	mov	x2, x26
  44bd0c:	bl	44db3c <feof@plt+0x4a29c>
  44bd10:	mov	x22, x0
  44bd14:	b	44bdc0 <feof@plt+0x48520>
  44bd18:	ldr	x25, [x28]
  44bd1c:	cbz	x25, 44bd70 <feof@plt+0x484d0>
  44bd20:	ldr	x8, [x25, #24]
  44bd24:	ldr	x9, [x25, #8]
  44bd28:	sub	x8, x8, x9
  44bd2c:	sub	x8, x8, #0x2
  44bd30:	lsr	x8, x8, #1
  44bd34:	cmp	x8, #0xfa1
  44bd38:	b.cc	44bd94 <feof@plt+0x484f4>  // b.lo, b.ul, b.last
  44bd3c:	mov	x8, x25
  44bd40:	ldr	x25, [x25]
  44bd44:	cbz	x25, 44bd70 <feof@plt+0x484d0>
  44bd48:	ldr	x9, [x25, #24]
  44bd4c:	ldr	x10, [x25, #8]
  44bd50:	sub	x9, x9, x10
  44bd54:	sub	x9, x9, #0x2
  44bd58:	lsr	x9, x9, #1
  44bd5c:	cmp	x9, #0xfa1
  44bd60:	b.cs	44bd3c <feof@plt+0x4849c>  // b.hs, b.nlast
  44bd64:	b	44bd98 <feof@plt+0x484f8>
  44bd68:	mov	w26, #0x2                   	// #2
  44bd6c:	b	44bdb4 <feof@plt+0x48514>
  44bd70:	mov	w0, #0x1f60                	// #8032
  44bd74:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44bd78:	mov	w8, #0x1f40                	// #8000
  44bd7c:	add	x25, x0, x8
  44bd80:	str	x0, [x0, #8008]
  44bd84:	str	x0, [x0, #8016]
  44bd88:	str	xzr, [x0, #8000]
  44bd8c:	str	x25, [x0, #8024]
  44bd90:	b	44bdac <feof@plt+0x4850c>
  44bd94:	mov	x8, x28
  44bd98:	ldr	x9, [x25]
  44bd9c:	str	x9, [x8]
  44bda0:	ldr	x8, [x25, #8]
  44bda4:	str	xzr, [x25]
  44bda8:	str	x8, [x25, #16]
  44bdac:	mov	w26, #0x2                   	// #2
  44bdb0:	mov	x22, x25
  44bdb4:	adrp	x27, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  44bdb8:	add	x27, x27, #0xe8c
  44bdbc:	mov	x28, x27
  44bdc0:	ldr	x0, [x22, #16]
  44bdc4:	mov	x1, x28
  44bdc8:	mov	x2, x26
  44bdcc:	bl	402fc0 <memcpy@plt>
  44bdd0:	ldr	x8, [x22, #16]
  44bdd4:	cmp	x24, x27
  44bdd8:	add	x8, x8, x26
  44bddc:	str	x8, [x22, #16]
  44bde0:	b.eq	44be04 <feof@plt+0x48564>  // b.none
  44bde4:	ldp	x28, x10, [x29, #-56]
  44bde8:	cmp	x19, #0x10
  44bdec:	b.hi	44be08 <feof@plt+0x48568>  // b.pmore
  44bdf0:	sub	x8, x29, #0x28
  44bdf4:	mov	w9, #0x3f3f                	// #16191
  44bdf8:	strh	w9, [x8, x19]
  44bdfc:	add	x19, x19, #0x2
  44be00:	b	44be08 <feof@plt+0x48568>
  44be04:	ldp	x28, x10, [x29, #-56]
  44be08:	and	w8, w21, #0xff
  44be0c:	cmp	w8, #0x2f
  44be10:	add	x23, x10, x23
  44be14:	b.ne	44c0b8 <feof@plt+0x48818>  // b.any
  44be18:	ldr	x8, [x20, #16]
  44be1c:	cmp	x8, x24
  44be20:	b.ne	44c0b8 <feof@plt+0x48818>  // b.any
  44be24:	ldr	w8, [x20, #24]
  44be28:	cmp	w8, #0x20
  44be2c:	b.eq	44be38 <feof@plt+0x48598>  // b.none
  44be30:	cmp	w8, #0x5c
  44be34:	b.ne	44cb28 <feof@plt+0x49288>  // b.any
  44be38:	ldp	x8, x9, [x22, #16]
  44be3c:	cmp	x9, x8
  44be40:	b.ne	44be5c <feof@plt+0x485bc>  // b.any
  44be44:	ldur	x0, [x29, #-64]
  44be48:	mov	w2, #0x1                   	// #1
  44be4c:	mov	x1, x22
  44be50:	bl	44db3c <feof@plt+0x4a29c>
  44be54:	ldr	x8, [x0, #16]
  44be58:	mov	x22, x0
  44be5c:	mov	w9, #0x2f                  	// #47
  44be60:	strb	w9, [x8]
  44be64:	ldr	x8, [x22, #16]
  44be68:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x32fc>
  44be6c:	add	x9, x9, #0x8b2
  44be70:	cmp	x24, x9
  44be74:	add	x8, x8, #0x1
  44be78:	add	x21, x23, #0x3
  44be7c:	str	x8, [x22, #16]
  44be80:	b.eq	44bea4 <feof@plt+0x48604>  // b.none
  44be84:	ldur	x23, [x29, #-64]
  44be88:	cmp	x19, #0x10
  44be8c:	b.hi	44bea8 <feof@plt+0x48608>  // b.pmore
  44be90:	sub	x8, x29, #0x28
  44be94:	mov	w9, #0x2f                  	// #47
  44be98:	strb	w9, [x8, x19]
  44be9c:	add	x19, x19, #0x1
  44bea0:	b	44bea8 <feof@plt+0x48608>
  44bea4:	ldur	x23, [x29, #-64]
  44bea8:	add	x20, x20, #0x10
  44beac:	ldr	w8, [x20, #8]
  44beb0:	cmp	w8, #0x20
  44beb4:	b.ne	44bfb4 <feof@plt+0x48714>  // b.any
  44beb8:	cbz	x25, 44bee0 <feof@plt+0x48640>
  44bebc:	ldp	x9, x8, [x22, #16]
  44bec0:	cmp	x8, x9
  44bec4:	b.ne	44bf70 <feof@plt+0x486d0>  // b.any
  44bec8:	mov	w2, #0x1                   	// #1
  44becc:	mov	x0, x23
  44bed0:	mov	x1, x22
  44bed4:	bl	44db3c <feof@plt+0x4a29c>
  44bed8:	mov	x22, x0
  44bedc:	b	44bf70 <feof@plt+0x486d0>
  44bee0:	ldr	x25, [x28]
  44bee4:	mov	w11, #0x1f41                	// #8001
  44bee8:	cbz	x25, 44bf2c <feof@plt+0x4868c>
  44beec:	ldr	x8, [x25, #8]
  44bef0:	ldr	x9, [x25, #24]
  44bef4:	mvn	x8, x8
  44bef8:	add	x8, x9, x8
  44befc:	cmp	x8, x11
  44bf00:	b.cc	44bf54 <feof@plt+0x486b4>  // b.lo, b.ul, b.last
  44bf04:	mov	x8, x25
  44bf08:	ldr	x25, [x25]
  44bf0c:	cbz	x25, 44bf2c <feof@plt+0x4868c>
  44bf10:	ldr	x9, [x25, #8]
  44bf14:	ldr	x10, [x25, #24]
  44bf18:	mvn	x9, x9
  44bf1c:	add	x9, x10, x9
  44bf20:	cmp	x9, x11
  44bf24:	b.cs	44bf04 <feof@plt+0x48664>  // b.hs, b.nlast
  44bf28:	b	44bf58 <feof@plt+0x486b8>
  44bf2c:	mov	w0, #0x1f60                	// #8032
  44bf30:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44bf34:	mov	w8, #0x1f40                	// #8000
  44bf38:	add	x25, x0, x8
  44bf3c:	str	x0, [x0, #8008]
  44bf40:	str	x0, [x0, #8016]
  44bf44:	str	x25, [x0, #8024]
  44bf48:	str	xzr, [x0, #8000]
  44bf4c:	mov	x22, x25
  44bf50:	b	44bf70 <feof@plt+0x486d0>
  44bf54:	mov	x8, x28
  44bf58:	ldr	x9, [x25]
  44bf5c:	mov	x22, x25
  44bf60:	str	x9, [x8]
  44bf64:	ldr	x8, [x25, #8]
  44bf68:	str	xzr, [x25]
  44bf6c:	str	x8, [x25, #16]
  44bf70:	ldr	x8, [x22, #16]
  44bf74:	mov	w9, #0x20                  	// #32
  44bf78:	add	x21, x21, #0x1
  44bf7c:	strb	w9, [x8]
  44bf80:	ldr	x8, [x22, #16]
  44bf84:	adrp	x9, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  44bf88:	add	x9, x9, #0x9d0
  44bf8c:	cmp	x24, x9
  44bf90:	add	x8, x8, #0x1
  44bf94:	str	x8, [x22, #16]
  44bf98:	b.eq	44bfb4 <feof@plt+0x48714>  // b.none
  44bf9c:	cmp	x19, #0x10
  44bfa0:	b.hi	44bfb4 <feof@plt+0x48714>  // b.pmore
  44bfa4:	sub	x8, x29, #0x28
  44bfa8:	mov	w9, #0x20                  	// #32
  44bfac:	strb	w9, [x8, x19]
  44bfb0:	add	x19, x19, #0x1
  44bfb4:	cbz	x25, 44bfdc <feof@plt+0x4873c>
  44bfb8:	ldp	x9, x8, [x22, #16]
  44bfbc:	cmp	x8, x9
  44bfc0:	b.ne	44c06c <feof@plt+0x487cc>  // b.any
  44bfc4:	mov	w2, #0x1                   	// #1
  44bfc8:	mov	x0, x23
  44bfcc:	mov	x1, x22
  44bfd0:	bl	44db3c <feof@plt+0x4a29c>
  44bfd4:	mov	x22, x0
  44bfd8:	b	44c06c <feof@plt+0x487cc>
  44bfdc:	ldr	x25, [x28]
  44bfe0:	mov	w11, #0x1f41                	// #8001
  44bfe4:	cbz	x25, 44c028 <feof@plt+0x48788>
  44bfe8:	ldr	x8, [x25, #8]
  44bfec:	ldr	x9, [x25, #24]
  44bff0:	mvn	x8, x8
  44bff4:	add	x8, x9, x8
  44bff8:	cmp	x8, x11
  44bffc:	b.cc	44c050 <feof@plt+0x487b0>  // b.lo, b.ul, b.last
  44c000:	mov	x8, x25
  44c004:	ldr	x25, [x25]
  44c008:	cbz	x25, 44c028 <feof@plt+0x48788>
  44c00c:	ldr	x9, [x25, #8]
  44c010:	ldr	x10, [x25, #24]
  44c014:	mvn	x9, x9
  44c018:	add	x9, x10, x9
  44c01c:	cmp	x9, x11
  44c020:	b.cs	44c000 <feof@plt+0x48760>  // b.hs, b.nlast
  44c024:	b	44c054 <feof@plt+0x487b4>
  44c028:	mov	w0, #0x1f60                	// #8032
  44c02c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44c030:	mov	w8, #0x1f40                	// #8000
  44c034:	add	x25, x0, x8
  44c038:	str	x0, [x0, #8008]
  44c03c:	str	x0, [x0, #8016]
  44c040:	str	x25, [x0, #8024]
  44c044:	str	xzr, [x0, #8000]
  44c048:	mov	x22, x25
  44c04c:	b	44c06c <feof@plt+0x487cc>
  44c050:	mov	x8, x28
  44c054:	ldr	x9, [x25]
  44c058:	mov	x22, x25
  44c05c:	str	x9, [x8]
  44c060:	ldr	x8, [x25, #8]
  44c064:	str	xzr, [x25]
  44c068:	str	x8, [x25, #16]
  44c06c:	ldr	x8, [x22, #16]
  44c070:	mov	w9, #0xa                   	// #10
  44c074:	strb	w9, [x8]
  44c078:	ldr	x8, [x22, #16]
  44c07c:	adrp	x9, 47e000 <_obstack_memory_used@@Base+0x22fc>
  44c080:	add	x9, x9, #0x934
  44c084:	cmp	x24, x9
  44c088:	add	x8, x8, #0x1
  44c08c:	str	x8, [x22, #16]
  44c090:	add	x8, x21, #0x1
  44c094:	stur	x8, [x29, #-48]
  44c098:	b.eq	44b934 <feof@plt+0x48094>  // b.none
  44c09c:	cmp	x19, #0x10
  44c0a0:	b.hi	44b934 <feof@plt+0x48094>  // b.pmore
  44c0a4:	sub	x8, x29, #0x28
  44c0a8:	mov	w9, #0xa                   	// #10
  44c0ac:	strb	w9, [x8, x19]
  44c0b0:	add	x19, x19, #0x1
  44c0b4:	b	44b934 <feof@plt+0x48094>
  44c0b8:	ldp	x8, x9, [x22, #16]
  44c0bc:	add	x27, x24, #0x1
  44c0c0:	cmp	x9, x8
  44c0c4:	b.ne	44c0e0 <feof@plt+0x48840>  // b.any
  44c0c8:	ldur	x0, [x29, #-64]
  44c0cc:	mov	w2, #0x1                   	// #1
  44c0d0:	mov	x1, x22
  44c0d4:	bl	44db3c <feof@plt+0x4a29c>
  44c0d8:	ldr	x8, [x0, #16]
  44c0dc:	mov	x22, x0
  44c0e0:	strb	w21, [x8]
  44c0e4:	ldr	x8, [x22, #16]
  44c0e8:	cmp	x19, #0x10
  44c0ec:	add	x8, x8, #0x1
  44c0f0:	str	x8, [x22, #16]
  44c0f4:	add	x8, x23, #0x3
  44c0f8:	stur	x8, [x29, #-48]
  44c0fc:	b.hi	44c10c <feof@plt+0x4886c>  // b.pmore
  44c100:	sub	x8, x29, #0x28
  44c104:	strb	w21, [x8, x19]
  44c108:	add	x19, x19, #0x1
  44c10c:	ldur	x23, [x29, #-64]
  44c110:	mov	x26, x27
  44c114:	b	44b914 <feof@plt+0x48074>
  44c118:	add	x8, x19, #0x1
  44c11c:	sub	x9, x29, #0x28
  44c120:	strb	w21, [x9, x19]
  44c124:	mov	x19, x8
  44c128:	b	44b914 <feof@plt+0x48074>
  44c12c:	ldr	x11, [sp, #64]
  44c130:	adrp	x13, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44c134:	sub	x12, x29, #0x14
  44c138:	add	x13, x13, #0x10c
  44c13c:	sub	x8, x29, #0x28
  44c140:	ldrb	w5, [x8, x11]
  44c144:	sub	w8, w5, #0x21
  44c148:	cmp	w8, #0x5d
  44c14c:	strb	w5, [x12, x11]
  44c150:	b.hi	44c184 <feof@plt+0x488e4>  // b.pmore
  44c154:	adr	x9, 44c164 <feof@plt+0x488c4>
  44c158:	ldrb	w10, [x13, x8]
  44c15c:	add	x9, x9, x10, lsl #2
  44c160:	br	x9
  44c164:	cmp	x11, #0xf
  44c168:	b.hi	44c184 <feof@plt+0x488e4>  // b.pmore
  44c16c:	add	x11, x11, #0x1
  44c170:	cmp	x19, x11
  44c174:	b.ne	44c13c <feof@plt+0x4889c>  // b.any
  44c178:	mov	w9, wzr
  44c17c:	mov	x11, x19
  44c180:	b	44b8dc <feof@plt+0x4803c>
  44c184:	cmp	w5, #0x28
  44c188:	b.ne	44c9bc <feof@plt+0x4911c>  // b.any
  44c18c:	mov	w8, #0x22                  	// #34
  44c190:	strb	w8, [x12, x11]
  44c194:	mov	w9, #0x1                   	// #1
  44c198:	mov	w19, #0x11                  	// #17
  44c19c:	b	44b8dc <feof@plt+0x4803c>
  44c1a0:	cmp	w8, #0x2
  44c1a4:	b.ne	44c1f4 <feof@plt+0x48954>  // b.any
  44c1a8:	ldr	x8, [sp, #48]
  44c1ac:	ldr	w9, [sp, #60]
  44c1b0:	cmp	w9, w8
  44c1b4:	mov	w8, w9
  44c1b8:	b.hi	44c4c0 <feof@plt+0x48c20>  // b.pmore
  44c1bc:	str	w8, [sp, #60]
  44c1c0:	mov	w8, w8
  44c1c4:	cmp	x19, x8
  44c1c8:	b.ls	44c1fc <feof@plt+0x4895c>  // b.plast
  44c1cc:	sub	x9, x29, #0x28
  44c1d0:	sub	x10, x29, #0x14
  44c1d4:	ldrb	w9, [x9, x8]
  44c1d8:	ldrb	w8, [x10, x8]
  44c1dc:	cmp	w9, w8
  44c1e0:	b.ne	44c1fc <feof@plt+0x4895c>  // b.any
  44c1e4:	ldr	w9, [sp, #60]
  44c1e8:	ldr	x8, [sp, #48]
  44c1ec:	add	w9, w9, #0x1
  44c1f0:	b	44c1b0 <feof@plt+0x48910>
  44c1f4:	mov	x10, x19
  44c1f8:	b	44c218 <feof@plt+0x48978>
  44c1fc:	mov	w8, #0x1                   	// #1
  44c200:	stur	w8, [x29, #-68]
  44c204:	ldr	w8, [sp, #60]
  44c208:	cmp	x19, w8, uxtw
  44c20c:	mov	w8, #0x2                   	// #2
  44c210:	b.eq	44b8d4 <feof@plt+0x48034>  // b.none
  44c214:	mov	w10, #0x11                  	// #17
  44c218:	ldr	w11, [sp, #60]
  44c21c:	and	w9, w21, #0xff
  44c220:	mov	x19, xzr
  44c224:	cmp	w9, #0x29
  44c228:	mov	w8, #0x2                   	// #2
  44c22c:	str	wzr, [sp, #60]
  44c230:	b.eq	44b8d4 <feof@plt+0x48034>  // b.none
  44c234:	ldur	w8, [x29, #-68]
  44c238:	cmp	w9, #0xa
  44c23c:	mov	x19, x10
  44c240:	str	w11, [sp, #60]
  44c244:	b.ne	44b8d4 <feof@plt+0x48034>  // b.any
  44c248:	ldrb	w8, [x23, #16]
  44c24c:	cbnz	w8, 44ca60 <feof@plt+0x491c0>
  44c250:	ldrb	w8, [x23, #25]
  44c254:	cbz	w8, 44c26c <feof@plt+0x489cc>
  44c258:	ldr	x8, [x23]
  44c25c:	ldr	x9, [x8, #16]
  44c260:	ldr	x8, [x8, #32]
  44c264:	cmp	x9, x8
  44c268:	b.cs	44ca60 <feof@plt+0x491c0>  // b.hs, b.nlast
  44c26c:	sub	x19, x27, x26
  44c270:	str	w11, [sp, #60]
  44c274:	str	x10, [sp, #64]
  44c278:	cbz	x25, 44c2c4 <feof@plt+0x48a24>
  44c27c:	ldp	x0, x8, [x22, #16]
  44c280:	ldur	w21, [x29, #-68]
  44c284:	sub	x28, x8, x0
  44c288:	subs	x27, x19, x28
  44c28c:	b.ls	44c340 <feof@plt+0x48aa0>  // b.plast
  44c290:	mov	x1, x26
  44c294:	mov	x2, x28
  44c298:	bl	402fc0 <memcpy@plt>
  44c29c:	ldr	x8, [x22, #16]
  44c2a0:	mov	x0, x23
  44c2a4:	mov	x1, x22
  44c2a8:	mov	x2, x27
  44c2ac:	add	x8, x8, x28
  44c2b0:	str	x8, [x22, #16]
  44c2b4:	add	x26, x26, x28
  44c2b8:	bl	44db3c <feof@plt+0x4a29c>
  44c2bc:	mov	x22, x0
  44c2c0:	b	44c344 <feof@plt+0x48aa4>
  44c2c4:	ldr	x25, [x28]
  44c2c8:	ldur	w21, [x29, #-68]
  44c2cc:	cbz	x25, 44c34c <feof@plt+0x48aac>
  44c2d0:	ldr	x8, [x25, #24]
  44c2d4:	ldr	x9, [x25, #8]
  44c2d8:	add	x10, x19, x19, lsl #1
  44c2dc:	sub	x8, x8, x9
  44c2e0:	mov	w9, #0x1f40                	// #8000
  44c2e4:	cmp	x8, x19
  44c2e8:	add	x9, x9, x10, lsr #1
  44c2ec:	b.cc	44c300 <feof@plt+0x48a60>  // b.lo, b.ul, b.last
  44c2f0:	cmp	x8, x9
  44c2f4:	b.hi	44c300 <feof@plt+0x48a60>  // b.pmore
  44c2f8:	mov	x8, x28
  44c2fc:	b	44c328 <feof@plt+0x48a88>
  44c300:	mov	x8, x25
  44c304:	ldr	x25, [x25]
  44c308:	cbz	x25, 44c34c <feof@plt+0x48aac>
  44c30c:	ldr	x10, [x25, #24]
  44c310:	ldr	x11, [x25, #8]
  44c314:	sub	x10, x10, x11
  44c318:	cmp	x10, x19
  44c31c:	b.cc	44c300 <feof@plt+0x48a60>  // b.lo, b.ul, b.last
  44c320:	cmp	x10, x9
  44c324:	b.hi	44c300 <feof@plt+0x48a60>  // b.pmore
  44c328:	ldr	x9, [x25]
  44c32c:	str	x9, [x8]
  44c330:	ldr	x8, [x25, #8]
  44c334:	str	xzr, [x25]
  44c338:	str	x8, [x25, #16]
  44c33c:	b	44c374 <feof@plt+0x48ad4>
  44c340:	mov	x27, x19
  44c344:	ldur	x28, [x29, #-56]
  44c348:	b	44c37c <feof@plt+0x48adc>
  44c34c:	mov	w8, #0x1f40                	// #8000
  44c350:	cmp	x19, x8
  44c354:	csel	x8, x19, x8, hi  // hi = pmore
  44c358:	add	x8, x8, #0x7
  44c35c:	and	x20, x8, #0xfffffffffffffff8
  44c360:	add	x0, x20, #0x20
  44c364:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44c368:	add	x25, x0, x20
  44c36c:	stp	x0, x25, [x25, #16]
  44c370:	stp	xzr, x0, [x25]
  44c374:	mov	x27, x19
  44c378:	mov	x22, x25
  44c37c:	ldr	x0, [x22, #16]
  44c380:	mov	x1, x26
  44c384:	mov	x2, x27
  44c388:	bl	402fc0 <memcpy@plt>
  44c38c:	ldr	x8, [x22, #16]
  44c390:	add	x8, x8, x27
  44c394:	str	x8, [x22, #16]
  44c398:	ldr	x8, [x23]
  44c39c:	ldr	x9, [x8]
  44c3a0:	ldr	x10, [x8, #32]
  44c3a4:	cmp	x9, x10
  44c3a8:	b.cs	44c3f0 <feof@plt+0x48b50>  // b.hs, b.nlast
  44c3ac:	ldr	x0, [x23, #40]
  44c3b0:	mov	w10, #0x18                  	// #24
  44c3b4:	mov	w2, wzr
  44c3b8:	ldr	w8, [x0, #12]
  44c3bc:	ldr	x9, [x0]
  44c3c0:	sub	w8, w8, #0x1
  44c3c4:	smaddl	x8, w8, w10, x9
  44c3c8:	ldr	w9, [x0, #60]
  44c3cc:	ldr	w10, [x8]
  44c3d0:	ldrb	w11, [x8, #6]
  44c3d4:	ldr	w8, [x8, #16]
  44c3d8:	sub	w9, w9, w10
  44c3dc:	lsr	w9, w9, w11
  44c3e0:	add	w8, w8, w9
  44c3e4:	add	w1, w8, #0x1
  44c3e8:	bl	44ecdc <feof@plt+0x4b43c>
  44c3ec:	ldr	x8, [x23]
  44c3f0:	mov	w9, #0x1                   	// #1
  44c3f4:	mov	x0, x23
  44c3f8:	mov	w1, wzr
  44c3fc:	strb	w9, [x8, #104]
  44c400:	str	x24, [x8]
  44c404:	bl	4492f8 <feof@plt+0x45a58>
  44c408:	ldrb	w8, [x23, #16]
  44c40c:	ldur	x24, [x29, #-48]
  44c410:	cbnz	w8, 44c95c <feof@plt+0x490bc>
  44c414:	ldr	x8, [x23]
  44c418:	add	x24, x19, x24
  44c41c:	ldrb	w9, [x8, #104]
  44c420:	cbz	w9, 44c49c <feof@plt+0x48bfc>
  44c424:	ldr	x10, [x8, #16]
  44c428:	ldr	x9, [x8, #32]
  44c42c:	cmp	x10, x9
  44c430:	b.cc	44c490 <feof@plt+0x48bf0>  // b.lo, b.ul, b.last
  44c434:	ldrb	w11, [x23, #25]
  44c438:	cbnz	w11, 44c95c <feof@plt+0x490bc>
  44c43c:	ldrb	w20, [x8, #105]
  44c440:	cmp	x10, x9
  44c444:	b.ls	44c45c <feof@plt+0x48bbc>  // b.plast
  44c448:	ldr	x10, [x8, #24]
  44c44c:	cmp	x10, x9
  44c450:	b.eq	44c45c <feof@plt+0x48bbc>  // b.none
  44c454:	tbnz	w20, #1, 44c45c <feof@plt+0x48bbc>
  44c458:	str	x9, [x8, #16]
  44c45c:	mov	x0, x23
  44c460:	bl	4407b8 <feof@plt+0x3cf18>
  44c464:	ldr	x8, [x23]
  44c468:	cmp	x8, #0x0
  44c46c:	cset	w9, ne  // ne = any
  44c470:	tst	w20, #0x4
  44c474:	cset	w10, eq  // eq = none
  44c478:	and	w9, w10, w9
  44c47c:	and	w19, w19, w9
  44c480:	tbnz	w20, #2, 44c488 <feof@plt+0x48be8>
  44c484:	cbnz	x8, 44c41c <feof@plt+0x48b7c>
  44c488:	tbnz	w19, #0, 44c49c <feof@plt+0x48bfc>
  44c48c:	b	44c95c <feof@plt+0x490bc>
  44c490:	mov	x0, x23
  44c494:	bl	448d9c <feof@plt+0x454fc>
  44c498:	ldr	x8, [x23]
  44c49c:	ldr	x27, [x8]
  44c4a0:	ldr	x9, [x8, #48]
  44c4a4:	ldr	w8, [x8, #56]
  44c4a8:	ldr	x19, [sp, #64]
  44c4ac:	stur	x24, [x29, #-48]
  44c4b0:	mov	x26, x27
  44c4b4:	add	x20, x9, x8, lsl #4
  44c4b8:	mov	w8, w21
  44c4bc:	b	44b8d4 <feof@plt+0x48034>
  44c4c0:	ldr	w21, [sp, #36]
  44c4c4:	mov	x24, x27
  44c4c8:	ldrb	w8, [x23, #1161]
  44c4cc:	cbz	w8, 44c584 <feof@plt+0x48ce4>
  44c4d0:	ldrb	w11, [x24]
  44c4d4:	adrp	x19, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  44c4d8:	add	x19, x19, #0x4a2
  44c4dc:	cmp	x11, #0x5f
  44c4e0:	b.ne	44c4f0 <feof@plt+0x48c50>  // b.any
  44c4e4:	ldrb	w8, [x24, #1]
  44c4e8:	cmp	w8, #0x5f
  44c4ec:	b.ne	44c558 <feof@plt+0x48cb8>  // b.any
  44c4f0:	ldrh	w8, [x19, x11, lsl #1]
  44c4f4:	tbz	w8, #9, 44c558 <feof@plt+0x48cb8>
  44c4f8:	mov	x8, x24
  44c4fc:	ldrb	w10, [x8, #1]!
  44c500:	mov	w9, #0x204                 	// #516
  44c504:	sub	w11, w11, #0x71
  44c508:	ldrh	w12, [x19, x10, lsl #1]
  44c50c:	tst	w12, w9
  44c510:	b.eq	44c534 <feof@plt+0x48c94>  // b.none
  44c514:	mov	w12, #0x43                  	// #67
  44c518:	mul	w11, w11, w12
  44c51c:	add	w11, w11, w10, uxtb
  44c520:	ldrb	w10, [x8, #1]!
  44c524:	sub	w11, w11, #0x71
  44c528:	ldrh	w13, [x19, x10, lsl #1]
  44c52c:	tst	w13, w9
  44c530:	b.ne	44c518 <feof@plt+0x48c78>  // b.any
  44c534:	ldr	x0, [x23, #1088]
  44c538:	sub	x2, x8, x24
  44c53c:	add	w3, w11, w2
  44c540:	mov	x1, x24
  44c544:	mov	w4, wzr
  44c548:	bl	456b74 <feof@plt+0x532d4>
  44c54c:	cbz	x0, 44c558 <feof@plt+0x48cb8>
  44c550:	ldrb	w8, [x0, #18]
  44c554:	tbnz	w8, #1, 44c9fc <feof@plt+0x4915c>
  44c558:	ldrb	w8, [x24]
  44c55c:	ldrh	w8, [x19, x8, lsl #1]
  44c560:	tbz	w8, #9, 44c584 <feof@plt+0x48ce4>
  44c564:	mov	w0, w21
  44c568:	bl	443644 <feof@plt+0x3fda4>
  44c56c:	mov	w21, w0
  44c570:	mov	w8, #0x204                 	// #516
  44c574:	ldrb	w9, [x24, #1]!
  44c578:	ldrh	w9, [x19, x9, lsl #1]
  44c57c:	tst	w9, w8
  44c580:	b.ne	44c574 <feof@plt+0x48cd4>  // b.any
  44c584:	ldr	x8, [x23]
  44c588:	sub	x22, x24, x26
  44c58c:	str	x24, [x8]
  44c590:	cbz	x25, 44c618 <feof@plt+0x48d78>
  44c594:	ldur	x8, [x29, #-48]
  44c598:	mov	x0, x23
  44c59c:	add	x19, x22, x8
  44c5a0:	add	x1, x19, #0x1
  44c5a4:	bl	44d230 <feof@plt+0x49990>
  44c5a8:	ldr	x8, [sp, #40]
  44c5ac:	mov	x20, x0
  44c5b0:	str	w19, [x8, #8]
  44c5b4:	mov	x19, x25
  44c5b8:	strb	w21, [x8, #4]
  44c5bc:	str	x0, [x8, #16]
  44c5c0:	ldp	x1, x8, [x19, #8]
  44c5c4:	mov	x0, x20
  44c5c8:	sub	x2, x8, x1
  44c5cc:	bl	402fc0 <memcpy@plt>
  44c5d0:	ldp	x9, x8, [x19, #8]
  44c5d4:	ldr	x19, [x19]
  44c5d8:	sub	x8, x8, x9
  44c5dc:	add	x20, x20, x8
  44c5e0:	cbnz	x19, 44c5c0 <feof@plt+0x48d20>
  44c5e4:	mov	x9, x25
  44c5e8:	mov	x8, x9
  44c5ec:	ldr	x9, [x9]
  44c5f0:	cbnz	x9, 44c5e8 <feof@plt+0x48d48>
  44c5f4:	ldr	x9, [x28]
  44c5f8:	mov	x0, x20
  44c5fc:	mov	x1, x26
  44c600:	mov	x2, x22
  44c604:	str	x9, [x8]
  44c608:	str	x25, [x28]
  44c60c:	bl	402fc0 <memcpy@plt>
  44c610:	strb	wzr, [x20, x22]
  44c614:	b	44c93c <feof@plt+0x4909c>
  44c618:	add	w1, w22, #0x1
  44c61c:	mov	x0, x23
  44c620:	bl	44d230 <feof@plt+0x49990>
  44c624:	and	x23, x22, #0xffffffff
  44c628:	mov	x1, x26
  44c62c:	mov	x2, x23
  44c630:	mov	x20, x0
  44c634:	bl	402fc0 <memcpy@plt>
  44c638:	ldr	x8, [sp, #40]
  44c63c:	strb	wzr, [x20, x23]
  44c640:	strb	w21, [x8, #4]
  44c644:	str	w22, [x8, #8]
  44c648:	str	x20, [x8, #16]
  44c64c:	b	44c93c <feof@plt+0x4909c>
  44c650:	mov	w22, #0x3f                  	// #63
  44c654:	mov	w24, #0x22                  	// #34
  44c658:	mov	w8, wzr
  44c65c:	b	44c6a4 <feof@plt+0x48e04>
  44c660:	mov	w22, #0x41                  	// #65
  44c664:	mov	w24, #0x22                  	// #34
  44c668:	mov	w8, wzr
  44c66c:	b	44c6a4 <feof@plt+0x48e04>
  44c670:	mov	w22, #0x3e                  	// #62
  44c674:	mov	w24, #0x22                  	// #34
  44c678:	mov	w8, wzr
  44c67c:	b	44c6a4 <feof@plt+0x48e04>
  44c680:	mov	w22, #0x39                  	// #57
  44c684:	b	44c694 <feof@plt+0x48df4>
  44c688:	mov	w22, #0x3b                  	// #59
  44c68c:	b	44c694 <feof@plt+0x48df4>
  44c690:	mov	w22, #0x38                  	// #56
  44c694:	mov	w24, #0x27                  	// #39
  44c698:	mov	w8, wzr
  44c69c:	b	44c6a4 <feof@plt+0x48e04>
  44c6a0:	add	x12, x23, #0x2
  44c6a4:	mov	x23, x12
  44c6a8:	ldrb	w9, [x12], #1
  44c6ac:	cmp	w9, #0x5c
  44c6b0:	b.ne	44c6cc <feof@plt+0x48e2c>  // b.any
  44c6b4:	ldur	x10, [x29, #-64]
  44c6b8:	ldrb	w10, [x10, #19]
  44c6bc:	cbnz	w10, 44c6cc <feof@plt+0x48e2c>
  44c6c0:	ldrb	w10, [x12]
  44c6c4:	cmp	w10, #0xa
  44c6c8:	b.ne	44c6a0 <feof@plt+0x48e00>  // b.any
  44c6cc:	cmp	w24, w9
  44c6d0:	b.eq	44c6ec <feof@plt+0x48e4c>  // b.none
  44c6d4:	cbz	w9, 44c6e4 <feof@plt+0x48e44>
  44c6d8:	cmp	w9, #0xa
  44c6dc:	b.ne	44c6a4 <feof@plt+0x48e04>  // b.any
  44c6e0:	b	44c718 <feof@plt+0x48e78>
  44c6e4:	mov	w8, #0x1                   	// #1
  44c6e8:	b	44c6a4 <feof@plt+0x48e04>
  44c6ec:	mov	x23, x12
  44c6f0:	tbz	w8, #0, 44c734 <feof@plt+0x48e94>
  44c6f4:	ldur	x8, [x29, #-64]
  44c6f8:	ldrb	w8, [x8, #18]
  44c6fc:	cbnz	w8, 44c734 <feof@plt+0x48e94>
  44c700:	ldur	x0, [x29, #-64]
  44c704:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44c708:	add	x2, x2, #0xadf
  44c70c:	mov	w1, wzr
  44c710:	bl	4424f8 <feof@plt+0x3ec58>
  44c714:	b	44c734 <feof@plt+0x48e94>
  44c718:	cmp	w24, #0x3e
  44c71c:	b.ne	44c72c <feof@plt+0x48e8c>  // b.any
  44c720:	mov	w8, #0x3                   	// #3
  44c724:	strb	w8, [x21, #4]
  44c728:	b	44c93c <feof@plt+0x4909c>
  44c72c:	mov	w22, #0x3d                  	// #61
  44c730:	tbnz	w8, #0, 44c6f4 <feof@plt+0x48e54>
  44c734:	ldur	x19, [x29, #-64]
  44c738:	cmp	w22, #0x3d
  44c73c:	b.ne	44c764 <feof@plt+0x48ec4>  // b.any
  44c740:	ldr	w8, [x19, #1116]
  44c744:	cmp	w8, #0x15
  44c748:	b.eq	44c764 <feof@plt+0x48ec4>  // b.none
  44c74c:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44c750:	add	x2, x2, #0xb06
  44c754:	mov	w1, #0x2                   	// #2
  44c758:	mov	x0, x19
  44c75c:	mov	w3, w24
  44c760:	bl	4424f8 <feof@plt+0x3ec58>
  44c764:	ldrb	w8, [x19, #1161]
  44c768:	cbz	w8, 44c834 <feof@plt+0x48f94>
  44c76c:	ldrb	w12, [x23]
  44c770:	cmp	x12, #0x5f
  44c774:	b.ne	44c784 <feof@plt+0x48ee4>  // b.any
  44c778:	ldrb	w8, [x23, #1]
  44c77c:	cmp	w8, #0x5f
  44c780:	b.ne	44c7f8 <feof@plt+0x48f58>  // b.any
  44c784:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  44c788:	add	x9, x9, #0x4a2
  44c78c:	ldrh	w8, [x9, x12, lsl #1]
  44c790:	tbz	w8, #9, 44c7f8 <feof@plt+0x48f58>
  44c794:	mov	x8, x23
  44c798:	ldrb	w11, [x8, #1]!
  44c79c:	mov	w10, #0x204                 	// #516
  44c7a0:	sub	w12, w12, #0x71
  44c7a4:	ldrh	w13, [x9, x11, lsl #1]
  44c7a8:	tst	w13, w10
  44c7ac:	b.eq	44c7d0 <feof@plt+0x48f30>  // b.none
  44c7b0:	mov	w13, #0x43                  	// #67
  44c7b4:	mul	w12, w12, w13
  44c7b8:	add	w12, w12, w11, uxtb
  44c7bc:	ldrb	w11, [x8, #1]!
  44c7c0:	sub	w12, w12, #0x71
  44c7c4:	ldrh	w14, [x9, x11, lsl #1]
  44c7c8:	tst	w14, w10
  44c7cc:	b.ne	44c7b4 <feof@plt+0x48f14>  // b.any
  44c7d0:	ldur	x9, [x29, #-64]
  44c7d4:	sub	x2, x8, x23
  44c7d8:	add	w3, w12, w2
  44c7dc:	mov	x1, x23
  44c7e0:	ldr	x0, [x9, #1088]
  44c7e4:	mov	w4, wzr
  44c7e8:	bl	456b74 <feof@plt+0x532d4>
  44c7ec:	cbz	x0, 44c7f8 <feof@plt+0x48f58>
  44c7f0:	ldrb	w8, [x0, #18]
  44c7f4:	tbnz	w8, #1, 44c8d4 <feof@plt+0x49034>
  44c7f8:	ldrb	w8, [x23]
  44c7fc:	adrp	x19, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  44c800:	add	x19, x19, #0x4a2
  44c804:	ldrh	w8, [x19, x8, lsl #1]
  44c808:	tbz	w8, #9, 44c900 <feof@plt+0x49060>
  44c80c:	mov	w0, w22
  44c810:	bl	44366c <feof@plt+0x3fdcc>
  44c814:	bl	443644 <feof@plt+0x3fda4>
  44c818:	mov	w22, w0
  44c81c:	mov	w8, #0x204                 	// #516
  44c820:	ldrb	w9, [x23, #1]!
  44c824:	ldrh	w9, [x19, x9, lsl #1]
  44c828:	tst	w9, w8
  44c82c:	b.ne	44c820 <feof@plt+0x48f80>  // b.any
  44c830:	b	44c900 <feof@plt+0x49060>
  44c834:	ldrb	w8, [x19, #1199]
  44c838:	cbz	w8, 44c900 <feof@plt+0x49060>
  44c83c:	ldrb	w12, [x23]
  44c840:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  44c844:	add	x9, x9, #0x4a2
  44c848:	ldrh	w8, [x9, x12, lsl #1]
  44c84c:	tbz	w8, #9, 44c900 <feof@plt+0x49060>
  44c850:	mov	x8, x23
  44c854:	ldrb	w11, [x8, #1]!
  44c858:	mov	w10, #0x204                 	// #516
  44c85c:	sub	w12, w12, #0x71
  44c860:	ldrh	w13, [x9, x11, lsl #1]
  44c864:	tst	w13, w10
  44c868:	b.eq	44c88c <feof@plt+0x48fec>  // b.none
  44c86c:	mov	w13, #0x43                  	// #67
  44c870:	mul	w12, w12, w13
  44c874:	add	w12, w12, w11, uxtb
  44c878:	ldrb	w11, [x8, #1]!
  44c87c:	sub	w12, w12, #0x71
  44c880:	ldrh	w14, [x9, x11, lsl #1]
  44c884:	tst	w14, w10
  44c888:	b.ne	44c870 <feof@plt+0x48fd0>  // b.any
  44c88c:	ldur	x9, [x29, #-64]
  44c890:	sub	x2, x8, x23
  44c894:	add	w3, w12, w2
  44c898:	mov	x1, x23
  44c89c:	ldr	x0, [x9, #1088]
  44c8a0:	mov	w4, wzr
  44c8a4:	bl	456b74 <feof@plt+0x532d4>
  44c8a8:	cbz	x0, 44c900 <feof@plt+0x49060>
  44c8ac:	ldrb	w8, [x0, #18]
  44c8b0:	tbz	w8, #1, 44c900 <feof@plt+0x49060>
  44c8b4:	ldur	x0, [x29, #-64]
  44c8b8:	ldrb	w8, [x0, #18]
  44c8bc:	cbnz	w8, 44c900 <feof@plt+0x49060>
  44c8c0:	ldr	w2, [x21]
  44c8c4:	adrp	x4, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44c8c8:	add	x4, x4, #0xb7a
  44c8cc:	mov	w1, #0x17                  	// #23
  44c8d0:	b	44c8f8 <feof@plt+0x49058>
  44c8d4:	ldur	x0, [x29, #-64]
  44c8d8:	ldrb	w8, [x0, #1162]
  44c8dc:	cbz	w8, 44c900 <feof@plt+0x49060>
  44c8e0:	ldrb	w8, [x0, #18]
  44c8e4:	cbnz	w8, 44c900 <feof@plt+0x49060>
  44c8e8:	ldr	w2, [x21]
  44c8ec:	adrp	x4, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44c8f0:	add	x4, x4, #0xb27
  44c8f4:	mov	w1, #0x13                  	// #19
  44c8f8:	mov	w3, wzr
  44c8fc:	bl	442ab4 <feof@plt+0x3f214>
  44c900:	ldur	x0, [x29, #-64]
  44c904:	sub	x19, x23, x26
  44c908:	add	w1, w19, #0x1
  44c90c:	ldr	x8, [x0]
  44c910:	str	x23, [x8]
  44c914:	bl	44d230 <feof@plt+0x49990>
  44c918:	and	x23, x19, #0xffffffff
  44c91c:	mov	x1, x26
  44c920:	mov	x2, x23
  44c924:	mov	x20, x0
  44c928:	bl	402fc0 <memcpy@plt>
  44c92c:	strb	wzr, [x20, x23]
  44c930:	strb	w22, [x21, #4]
  44c934:	str	w19, [x21, #8]
  44c938:	str	x20, [x21, #16]
  44c93c:	ldp	x20, x19, [sp, #224]
  44c940:	ldp	x22, x21, [sp, #208]
  44c944:	ldp	x24, x23, [sp, #192]
  44c948:	ldp	x26, x25, [sp, #176]
  44c94c:	ldp	x28, x27, [sp, #160]
  44c950:	ldp	x29, x30, [sp, #144]
  44c954:	add	sp, sp, #0xf0
  44c958:	ret
  44c95c:	ldr	x10, [sp, #40]
  44c960:	mov	w8, #0x16                  	// #22
  44c964:	mov	w9, #0x40                  	// #64
  44c968:	strb	w8, [x10, #4]
  44c96c:	ldr	x8, [x23, #40]
  44c970:	ldr	w2, [x10]
  44c974:	ldr	w8, [x8, #60]
  44c978:	strh	w9, [x10, #6]
  44c97c:	str	w8, [x10]
  44c980:	cbz	x25, 44c9a0 <feof@plt+0x49100>
  44c984:	mov	x9, x25
  44c988:	mov	x8, x9
  44c98c:	ldr	x9, [x9]
  44c990:	cbnz	x9, 44c988 <feof@plt+0x490e8>
  44c994:	ldr	x9, [x28]
  44c998:	str	x9, [x8]
  44c99c:	str	x25, [x28]
  44c9a0:	adrp	x4, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44c9a4:	add	x4, x4, #0xc48
  44c9a8:	mov	w1, #0x3                   	// #3
  44c9ac:	mov	x0, x23
  44c9b0:	mov	w3, wzr
  44c9b4:	bl	4429b8 <feof@plt+0x3f118>
  44c9b8:	b	44c93c <feof@plt+0x4909c>
  44c9bc:	ldr	x8, [x23]
  44c9c0:	cmp	w11, #0x10
  44c9c4:	ldr	w8, [x8, #8]
  44c9c8:	sub	w8, w27, w8
  44c9cc:	add	w3, w8, #0x1
  44c9d0:	b.ne	44ca30 <feof@plt+0x49190>  // b.any
  44c9d4:	ldr	x21, [sp, #40]
  44c9d8:	adrp	x4, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44c9dc:	add	x4, x4, #0xbc1
  44c9e0:	mov	w1, #0x3                   	// #3
  44c9e4:	ldr	w2, [x21]
  44c9e8:	mov	x0, x23
  44c9ec:	bl	4429b8 <feof@plt+0x3f118>
  44c9f0:	ldp	x20, x24, [sp, #16]
  44c9f4:	ldr	x19, [sp, #8]
  44c9f8:	b	44caa8 <feof@plt+0x49208>
  44c9fc:	ldrb	w8, [x23, #1162]
  44ca00:	cbz	w8, 44c584 <feof@plt+0x48ce4>
  44ca04:	ldrb	w8, [x23, #18]
  44ca08:	cbnz	w8, 44c584 <feof@plt+0x48ce4>
  44ca0c:	ldr	x8, [sp, #40]
  44ca10:	adrp	x4, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44ca14:	add	x4, x4, #0xb27
  44ca18:	mov	w1, #0x13                  	// #19
  44ca1c:	ldr	w2, [x8]
  44ca20:	mov	x0, x23
  44ca24:	mov	w3, wzr
  44ca28:	bl	442ab4 <feof@plt+0x3f214>
  44ca2c:	b	44c584 <feof@plt+0x48ce4>
  44ca30:	ldr	x8, [sp, #40]
  44ca34:	ldp	x20, x24, [sp, #16]
  44ca38:	ldr	x19, [sp, #8]
  44ca3c:	cmp	w5, #0xa
  44ca40:	ldr	w2, [x8]
  44ca44:	b.ne	44ca90 <feof@plt+0x491f0>  // b.any
  44ca48:	adrp	x4, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44ca4c:	add	x4, x4, #0xbf0
  44ca50:	mov	w1, #0x3                   	// #3
  44ca54:	mov	x0, x23
  44ca58:	bl	4429b8 <feof@plt+0x3f118>
  44ca5c:	b	44caa4 <feof@plt+0x49204>
  44ca60:	ldr	x8, [sp, #40]
  44ca64:	adrp	x4, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44ca68:	add	x4, x4, #0xc48
  44ca6c:	mov	w1, #0x3                   	// #3
  44ca70:	ldr	w2, [x8]
  44ca74:	mov	x0, x23
  44ca78:	mov	w3, wzr
  44ca7c:	bl	4429b8 <feof@plt+0x3f118>
  44ca80:	mov	w21, #0x3d                  	// #61
  44ca84:	ldrb	w8, [x23, #1161]
  44ca88:	cbnz	w8, 44c4d0 <feof@plt+0x48c30>
  44ca8c:	b	44c584 <feof@plt+0x48ce4>
  44ca90:	adrp	x4, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44ca94:	add	x4, x4, #0xc19
  44ca98:	mov	w1, #0x3                   	// #3
  44ca9c:	mov	x0, x23
  44caa0:	bl	4429b8 <feof@plt+0x3f118>
  44caa4:	ldr	x21, [sp, #40]
  44caa8:	ldr	x8, [x23]
  44caac:	eor	x9, x24, #0xffffffff
  44cab0:	add	x19, x9, x19
  44cab4:	add	w1, w19, #0x1
  44cab8:	mov	x0, x23
  44cabc:	str	x20, [x8]
  44cac0:	bl	44d230 <feof@plt+0x49990>
  44cac4:	and	x22, x19, #0xffffffff
  44cac8:	mov	x1, x24
  44cacc:	mov	x2, x22
  44cad0:	mov	x20, x0
  44cad4:	bl	402fc0 <memcpy@plt>
  44cad8:	mov	w8, #0x3d                  	// #61
  44cadc:	strb	wzr, [x20, x22]
  44cae0:	str	w19, [x21, #8]
  44cae4:	strb	w8, [x21, #4]
  44cae8:	str	x20, [x21, #16]
  44caec:	cbz	x25, 44c93c <feof@plt+0x4909c>
  44caf0:	mov	x9, x25
  44caf4:	mov	x8, x9
  44caf8:	ldr	x9, [x9]
  44cafc:	cbnz	x9, 44caf4 <feof@plt+0x49254>
  44cb00:	ldr	x9, [x28]
  44cb04:	str	x9, [x8]
  44cb08:	str	x25, [x28]
  44cb0c:	b	44c93c <feof@plt+0x4909c>
  44cb10:	adrp	x0, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44cb14:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44cb18:	add	x0, x0, #0x7c0
  44cb1c:	add	x2, x2, #0xbb2
  44cb20:	mov	w1, #0x6f0                 	// #1776
  44cb24:	bl	429434 <feof@plt+0x25b94>
  44cb28:	adrp	x0, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44cb2c:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44cb30:	add	x0, x0, #0x7c0
  44cb34:	add	x2, x2, #0xbb2
  44cb38:	mov	w1, #0x6e1                 	// #1761
  44cb3c:	bl	429434 <feof@plt+0x25b94>
  44cb40:	stp	x29, x30, [sp, #-80]!
  44cb44:	stp	x24, x23, [sp, #32]
  44cb48:	adrp	x23, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  44cb4c:	stp	x22, x21, [sp, #48]
  44cb50:	stp	x20, x19, [sp, #64]
  44cb54:	mov	x20, x4
  44cb58:	mov	x22, x3
  44cb5c:	mov	x21, x1
  44cb60:	mov	x19, x0
  44cb64:	add	x23, x23, #0x4a2
  44cb68:	str	x25, [sp, #16]
  44cb6c:	mov	x29, sp
  44cb70:	tbnz	w2, #0, 44cbdc <feof@plt+0x4933c>
  44cb74:	ldr	x8, [x19]
  44cb78:	ldrb	w12, [x21]
  44cb7c:	mov	w9, #0x204                 	// #516
  44cb80:	ldr	x24, [x8]
  44cb84:	sub	w25, w12, #0x71
  44cb88:	ldrb	w10, [x24]
  44cb8c:	ldrh	w11, [x23, x10, lsl #1]
  44cb90:	tst	w11, w9
  44cb94:	b.eq	44cbb8 <feof@plt+0x49318>  // b.none
  44cb98:	mov	w11, #0x43                  	// #67
  44cb9c:	mul	w12, w25, w11
  44cba0:	add	w12, w12, w10, uxtb
  44cba4:	ldrb	w10, [x24, #1]!
  44cba8:	sub	w25, w12, #0x71
  44cbac:	ldrh	w13, [x23, x10, lsl #1]
  44cbb0:	tst	w13, w9
  44cbb4:	b.ne	44cb9c <feof@plt+0x492fc>  // b.any
  44cbb8:	ldurb	w9, [x24, #-1]
  44cbbc:	mov	x0, x19
  44cbc0:	mov	w1, wzr
  44cbc4:	mov	x2, x22
  44cbc8:	strb	wzr, [x22, #4]
  44cbcc:	str	w9, [x22]
  44cbd0:	str	x24, [x8]
  44cbd4:	bl	44cd98 <feof@plt+0x494f8>
  44cbd8:	tbz	w0, #0, 44cc70 <feof@plt+0x493d0>
  44cbdc:	mov	w24, #0x204                 	// #516
  44cbe0:	b	44cbf8 <feof@plt+0x49358>
  44cbe4:	mov	x0, x19
  44cbe8:	mov	w1, wzr
  44cbec:	mov	x2, x22
  44cbf0:	bl	44cd98 <feof@plt+0x494f8>
  44cbf4:	tbz	w0, #0, 44cc38 <feof@plt+0x49398>
  44cbf8:	ldr	x8, [x19]
  44cbfc:	ldr	x10, [x8]
  44cc00:	ldrb	w9, [x10]
  44cc04:	ldrh	w11, [x23, x9, lsl #1]
  44cc08:	tst	w11, w24
  44cc0c:	b.eq	44cbe4 <feof@plt+0x49344>  // b.none
  44cc10:	add	x10, x10, #0x1
  44cc14:	and	w9, w9, #0xff
  44cc18:	strb	wzr, [x22, #4]
  44cc1c:	str	w9, [x22]
  44cc20:	str	x10, [x8]
  44cc24:	ldrb	w9, [x10], #1
  44cc28:	ldrh	w11, [x23, x9, lsl #1]
  44cc2c:	tst	w11, w24
  44cc30:	b.ne	44cc14 <feof@plt+0x49374>  // b.any
  44cc34:	b	44cbe4 <feof@plt+0x49344>
  44cc38:	ldr	x8, [x19]
  44cc3c:	mov	x0, x19
  44cc40:	mov	x1, x21
  44cc44:	ldr	x8, [x8]
  44cc48:	sub	x2, x8, x21
  44cc4c:	bl	43c638 <feof@plt+0x38d98>
  44cc50:	ldr	x8, [x19]
  44cc54:	mov	x22, x0
  44cc58:	mov	x0, x19
  44cc5c:	mov	x1, x21
  44cc60:	ldr	w8, [x8]
  44cc64:	sub	w2, w8, w21
  44cc68:	bl	448cd8 <feof@plt+0x45438>
  44cc6c:	b	44cc90 <feof@plt+0x493f0>
  44cc70:	ldr	x0, [x19, #1088]
  44cc74:	sub	x8, x24, x21
  44cc78:	add	w3, w25, w8
  44cc7c:	and	x2, x8, #0xffffffff
  44cc80:	mov	w4, #0x1                   	// #1
  44cc84:	mov	x1, x21
  44cc88:	bl	456b74 <feof@plt+0x532d4>
  44cc8c:	mov	x22, x0
  44cc90:	str	x0, [x20]
  44cc94:	ldrh	w8, [x22, #18]
  44cc98:	tbz	w8, #4, 44cca4 <feof@plt+0x49404>
  44cc9c:	ldrb	w9, [x19, #18]
  44cca0:	cbz	w9, 44ccc0 <feof@plt+0x49420>
  44cca4:	mov	x0, x22
  44cca8:	ldp	x20, x19, [sp, #64]
  44ccac:	ldp	x22, x21, [sp, #48]
  44ccb0:	ldp	x24, x23, [sp, #32]
  44ccb4:	ldr	x25, [sp, #16]
  44ccb8:	ldp	x29, x30, [sp], #80
  44ccbc:	ret
  44ccc0:	tbz	w8, #3, 44cce4 <feof@plt+0x49444>
  44ccc4:	ldrb	w8, [x19, #23]
  44ccc8:	cbnz	w8, 44cce4 <feof@plt+0x49444>
  44cccc:	ldr	x3, [x22]
  44ccd0:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44ccd4:	add	x2, x2, #0x901
  44ccd8:	mov	w1, #0x3                   	// #3
  44ccdc:	mov	x0, x19
  44cce0:	bl	4424f8 <feof@plt+0x3ec58>
  44cce4:	ldr	x8, [x19, #1272]
  44cce8:	cmp	x22, x8
  44ccec:	b.ne	44cd20 <feof@plt+0x49480>  // b.any
  44ccf0:	ldrb	w8, [x19, #22]
  44ccf4:	cbnz	w8, 44cd20 <feof@plt+0x49480>
  44ccf8:	ldrb	w8, [x19, #1120]
  44ccfc:	cbz	w8, 44cd0c <feof@plt+0x4946c>
  44cd00:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44cd04:	add	x2, x2, #0x91e
  44cd08:	b	44cd14 <feof@plt+0x49474>
  44cd0c:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44cd10:	add	x2, x2, #0x965
  44cd14:	mov	w1, #0x2                   	// #2
  44cd18:	mov	x0, x19
  44cd1c:	bl	4424f8 <feof@plt+0x3ec58>
  44cd20:	ldr	x8, [x19, #1280]
  44cd24:	cmp	x22, x8
  44cd28:	b.ne	44cd74 <feof@plt+0x494d4>  // b.any
  44cd2c:	ldrb	w8, [x19, #1154]
  44cd30:	cbz	w8, 44cd3c <feof@plt+0x4949c>
  44cd34:	ldrb	w8, [x19, #1167]
  44cd38:	cbz	w8, 44cd50 <feof@plt+0x494b0>
  44cd3c:	ldrb	w8, [x19, #22]
  44cd40:	cbnz	w8, 44cd74 <feof@plt+0x494d4>
  44cd44:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44cd48:	add	x2, x2, #0xa04
  44cd4c:	b	44cd68 <feof@plt+0x494c8>
  44cd50:	ldr	x8, [x19]
  44cd54:	cbz	x8, 44cd60 <feof@plt+0x494c0>
  44cd58:	ldrb	w8, [x8, #106]
  44cd5c:	cbnz	w8, 44cd74 <feof@plt+0x494d4>
  44cd60:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44cd64:	add	x2, x2, #0x9dc
  44cd68:	mov	w1, #0x2                   	// #2
  44cd6c:	mov	x0, x19
  44cd70:	bl	4424f8 <feof@plt+0x3ec58>
  44cd74:	ldrb	w8, [x22, #19]
  44cd78:	tbz	w8, #1, 44cca4 <feof@plt+0x49404>
  44cd7c:	ldr	x3, [x22]
  44cd80:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44cd84:	add	x2, x2, #0x9aa
  44cd88:	mov	w1, #0xf                   	// #15
  44cd8c:	mov	x0, x19
  44cd90:	bl	442628 <feof@plt+0x3ed88>
  44cd94:	b	44cca4 <feof@plt+0x49404>
  44cd98:	stp	x29, x30, [sp, #-32]!
  44cd9c:	str	x19, [sp, #16]
  44cda0:	ldr	x19, [x0]
  44cda4:	mov	x29, sp
  44cda8:	ldr	x8, [x19]
  44cdac:	ldrb	w9, [x8]
  44cdb0:	cmp	w9, #0x24
  44cdb4:	b.ne	44cdf0 <feof@plt+0x49550>  // b.any
  44cdb8:	ldrb	w9, [x0, #1146]
  44cdbc:	cbz	w9, 44ce4c <feof@plt+0x495ac>
  44cdc0:	add	x8, x8, #0x1
  44cdc4:	str	x8, [x19]
  44cdc8:	ldrb	w8, [x0, #1148]
  44cdcc:	cbz	w8, 44ce44 <feof@plt+0x495a4>
  44cdd0:	ldrb	w8, [x0, #18]
  44cdd4:	cbnz	w8, 44ce44 <feof@plt+0x495a4>
  44cdd8:	adrp	x2, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  44cddc:	add	x2, x2, #0x3ca
  44cde0:	mov	w1, #0x2                   	// #2
  44cde4:	strb	wzr, [x0, #1148]
  44cde8:	bl	4424f8 <feof@plt+0x3ec58>
  44cdec:	b	44ce44 <feof@plt+0x495a4>
  44cdf0:	ldrb	w10, [x0, #1147]
  44cdf4:	cmp	w9, #0x5c
  44cdf8:	ccmp	w10, #0x0, #0x4, eq  // eq = none
  44cdfc:	b.eq	44ce4c <feof@plt+0x495ac>  // b.none
  44ce00:	ldrb	w9, [x8, #1]
  44ce04:	orr	w9, w9, #0x20
  44ce08:	cmp	w9, #0x75
  44ce0c:	b.ne	44ce4c <feof@plt+0x495ac>  // b.any
  44ce10:	mov	x4, x2
  44ce14:	ldr	x2, [x19, #32]
  44ce18:	add	x8, x8, #0x2
  44ce1c:	str	x8, [x19]
  44ce20:	cmp	w1, #0x0
  44ce24:	mov	w8, #0x1                   	// #1
  44ce28:	cinc	w3, w8, eq  // eq = none
  44ce2c:	add	x5, x29, #0x1c
  44ce30:	mov	x1, x19
  44ce34:	mov	x6, xzr
  44ce38:	mov	x7, xzr
  44ce3c:	bl	43aec4 <feof@plt+0x37624>
  44ce40:	tbz	w0, #0, 44ce5c <feof@plt+0x495bc>
  44ce44:	mov	w0, #0x1                   	// #1
  44ce48:	b	44ce50 <feof@plt+0x495b0>
  44ce4c:	mov	w0, wzr
  44ce50:	ldr	x19, [sp, #16]
  44ce54:	ldp	x29, x30, [sp], #32
  44ce58:	ret
  44ce5c:	ldr	x8, [x19]
  44ce60:	mov	w0, wzr
  44ce64:	sub	x8, x8, #0x2
  44ce68:	str	x8, [x19]
  44ce6c:	b	44ce50 <feof@plt+0x495b0>
  44ce70:	ldrb	w8, [x0, #4]
  44ce74:	adrp	x9, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44ce78:	add	x9, x9, #0x1b8
  44ce7c:	lsl	x8, x8, #4
  44ce80:	ldr	w8, [x9, x8]
  44ce84:	cmp	w8, #0x1
  44ce88:	b.eq	44ce9c <feof@plt+0x495fc>  // b.none
  44ce8c:	cmp	w8, #0x2
  44ce90:	b.ne	44ceb0 <feof@plt+0x49610>  // b.any
  44ce94:	ldr	w0, [x0, #8]
  44ce98:	ret
  44ce9c:	ldr	x8, [x0, #8]
  44cea0:	ldr	w8, [x8, #8]
  44cea4:	add	w8, w8, w8, lsl #2
  44cea8:	lsl	w0, w8, #1
  44ceac:	ret
  44ceb0:	mov	w0, #0x6                   	// #6
  44ceb4:	ret
  44ceb8:	stp	x29, x30, [sp, #-48]!
  44cebc:	stp	x22, x21, [sp, #16]
  44cec0:	stp	x20, x19, [sp, #32]
  44cec4:	ldr	w8, [x1, #8]
  44cec8:	mov	x19, x0
  44cecc:	mov	x29, sp
  44ced0:	cbz	w8, 44cf1c <feof@plt+0x4967c>
  44ced4:	ldr	x21, [x1]
  44ced8:	mov	x20, x1
  44cedc:	mov	x22, xzr
  44cee0:	b	44cef8 <feof@plt+0x49658>
  44cee4:	strb	w8, [x19], #1
  44cee8:	ldr	w8, [x20, #8]
  44ceec:	add	x22, x22, #0x1
  44cef0:	cmp	x22, x8
  44cef4:	b.cs	44cf1c <feof@plt+0x4967c>  // b.hs, b.nlast
  44cef8:	add	x1, x21, x22
  44cefc:	ldrsb	w8, [x1]
  44cf00:	tbz	w8, #31, 44cee4 <feof@plt+0x49644>
  44cf04:	mov	x0, x19
  44cf08:	bl	44cf30 <feof@plt+0x49690>
  44cf0c:	add	x8, x22, x0
  44cf10:	sub	x22, x8, #0x1
  44cf14:	add	x19, x19, #0xa
  44cf18:	b	44cee8 <feof@plt+0x49648>
  44cf1c:	mov	x0, x19
  44cf20:	ldp	x20, x19, [sp, #32]
  44cf24:	ldp	x22, x21, [sp, #16]
  44cf28:	ldp	x29, x30, [sp], #48
  44cf2c:	ret
  44cf30:	stp	x29, x30, [sp, #-16]!
  44cf34:	ldrb	w9, [x1]
  44cf38:	mov	x29, sp
  44cf3c:	tbnz	w9, #7, 44cf4c <feof@plt+0x496ac>
  44cf40:	mov	x8, xzr
  44cf44:	and	x9, x9, #0x7f
  44cf48:	b	44cfb0 <feof@plt+0x49710>
  44cf4c:	mov	x8, xzr
  44cf50:	mov	w10, w9
  44cf54:	mov	w11, w10
  44cf58:	lsl	w10, w10, #1
  44cf5c:	sub	x8, x8, #0x1
  44cf60:	tbnz	w11, #6, 44cf54 <feof@plt+0x496b4>
  44cf64:	mvn	x10, x8
  44cf68:	mov	w11, #0x3f                  	// #63
  44cf6c:	lsr	x11, x11, x10
  44cf70:	cmn	w8, #0x1
  44cf74:	and	x9, x11, x9
  44cf78:	b.eq	44cfac <feof@plt+0x4970c>  // b.none
  44cf7c:	add	x11, x1, #0x1
  44cf80:	ldrb	w12, [x11]
  44cf84:	and	w13, w12, #0xc0
  44cf88:	cmp	w13, #0x80
  44cf8c:	b.ne	44d02c <feof@plt+0x4978c>  // b.any
  44cf90:	bfi	x12, x9, #6, #58
  44cf94:	subs	w10, w10, #0x1
  44cf98:	mov	x9, x12
  44cf9c:	add	x11, x11, #0x1
  44cfa0:	b.ne	44cf80 <feof@plt+0x496e0>  // b.any
  44cfa4:	neg	x8, x8
  44cfa8:	b	44cfb0 <feof@plt+0x49710>
  44cfac:	mov	w8, #0x1                   	// #1
  44cfb0:	mov	w10, #0x555c                	// #21852
  44cfb4:	adrp	x12, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44cfb8:	ubfx	x11, x9, #28, #4
  44cfbc:	add	x12, x12, #0xe1d
  44cfc0:	ubfx	x13, x9, #24, #4
  44cfc4:	ubfx	x14, x9, #20, #4
  44cfc8:	ubfx	x15, x9, #16, #4
  44cfcc:	ubfx	x16, x9, #12, #4
  44cfd0:	ubfx	x17, x9, #8, #4
  44cfd4:	strh	w10, [x0]
  44cfd8:	ubfx	x10, x9, #4, #4
  44cfdc:	and	x9, x9, #0xf
  44cfe0:	ldrb	w11, [x12, x11]
  44cfe4:	ldrb	w13, [x12, x13]
  44cfe8:	ldrb	w14, [x12, x14]
  44cfec:	ldrb	w15, [x12, x15]
  44cff0:	ldrb	w16, [x12, x16]
  44cff4:	ldrb	w17, [x12, x17]
  44cff8:	ldrb	w10, [x12, x10]
  44cffc:	ldrb	w9, [x12, x9]
  44d000:	strb	w11, [x0, #2]
  44d004:	strb	w13, [x0, #3]
  44d008:	strb	w14, [x0, #4]
  44d00c:	strb	w15, [x0, #5]
  44d010:	strb	w16, [x0, #6]
  44d014:	strb	w17, [x0, #7]
  44d018:	strb	w10, [x0, #8]
  44d01c:	strb	w9, [x0, #9]
  44d020:	mov	x0, x8
  44d024:	ldp	x29, x30, [sp], #16
  44d028:	ret
  44d02c:	adrp	x0, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d030:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d034:	add	x0, x0, #0x7c0
  44d038:	add	x2, x2, #0xe11
  44d03c:	mov	w1, #0xc89                 	// #3209
  44d040:	bl	429434 <feof@plt+0x25b94>
  44d044:	stp	x29, x30, [sp, #-48]!
  44d048:	stp	x22, x21, [sp, #16]
  44d04c:	stp	x20, x19, [sp, #32]
  44d050:	ldrb	w8, [x1, #4]
  44d054:	adrp	x9, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d058:	add	x9, x9, #0x1b8
  44d05c:	mov	x19, x2
  44d060:	lsl	x10, x8, #4
  44d064:	ldr	w10, [x9, x10]
  44d068:	mov	x29, sp
  44d06c:	cmp	w10, #0x3
  44d070:	b.hi	44d184 <feof@plt+0x498e4>  // b.pmore
  44d074:	adrp	x11, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d078:	add	x11, x11, #0x16a
  44d07c:	adr	x12, 44d090 <feof@plt+0x497f0>
  44d080:	ldrb	w13, [x11, x10]
  44d084:	add	x12, x12, x13, lsl #2
  44d088:	mov	x20, x1
  44d08c:	br	x12
  44d090:	ldrh	w10, [x20, #6]
  44d094:	tbnz	w10, #1, 44d158 <feof@plt+0x498b8>
  44d098:	tbnz	w10, #4, 44d0a8 <feof@plt+0x49808>
  44d09c:	add	x8, x9, x8, lsl #4
  44d0a0:	add	x8, x8, #0x8
  44d0a4:	b	44d168 <feof@plt+0x498c8>
  44d0a8:	tbz	w3, #0, 44d108 <feof@plt+0x49868>
  44d0ac:	ldr	x8, [x20, #16]
  44d0b0:	mov	x0, x19
  44d0b4:	ldr	x1, [x8]
  44d0b8:	ldr	w2, [x8, #8]
  44d0bc:	bl	402fc0 <memcpy@plt>
  44d0c0:	ldr	x8, [x20, #16]
  44d0c4:	ldr	w8, [x8, #8]
  44d0c8:	add	x19, x19, x8
  44d0cc:	b	44d184 <feof@plt+0x498e4>
  44d0d0:	ldr	x1, [x20, #16]
  44d0d4:	ldr	w2, [x20, #8]
  44d0d8:	mov	x0, x19
  44d0dc:	bl	402fc0 <memcpy@plt>
  44d0e0:	ldr	w8, [x20, #8]
  44d0e4:	add	x19, x19, x8
  44d0e8:	b	44d184 <feof@plt+0x498e4>
  44d0ec:	add	x8, x9, x8, lsl #4
  44d0f0:	ldr	x3, [x8, #8]
  44d0f4:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d0f8:	add	x2, x2, #0x8e7
  44d0fc:	mov	w1, #0x4                   	// #4
  44d100:	bl	4424f8 <feof@plt+0x3ec58>
  44d104:	b	44d184 <feof@plt+0x498e4>
  44d108:	ldr	x20, [x20, #8]
  44d10c:	ldr	w8, [x20, #8]
  44d110:	cbz	w8, 44d184 <feof@plt+0x498e4>
  44d114:	ldr	x21, [x20]
  44d118:	mov	x22, xzr
  44d11c:	b	44d134 <feof@plt+0x49894>
  44d120:	strb	w8, [x19], #1
  44d124:	ldr	w8, [x20, #8]
  44d128:	add	x22, x22, #0x1
  44d12c:	cmp	x22, x8
  44d130:	b.cs	44d184 <feof@plt+0x498e4>  // b.hs, b.nlast
  44d134:	add	x1, x21, x22
  44d138:	ldrsb	w8, [x1]
  44d13c:	tbz	w8, #31, 44d120 <feof@plt+0x49880>
  44d140:	mov	x0, x19
  44d144:	bl	44cf30 <feof@plt+0x49690>
  44d148:	add	x8, x22, x0
  44d14c:	sub	x22, x8, #0x1
  44d150:	add	x19, x19, #0xa
  44d154:	b	44d124 <feof@plt+0x49884>
  44d158:	adrp	x9, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d15c:	add	x9, x9, #0x6f8
  44d160:	add	x8, x9, x8, lsl #3
  44d164:	sub	x8, x8, #0x128
  44d168:	ldr	x9, [x8]
  44d16c:	ldrb	w8, [x9]
  44d170:	cbz	w8, 44d184 <feof@plt+0x498e4>
  44d174:	add	x9, x9, #0x1
  44d178:	strb	w8, [x19], #1
  44d17c:	ldrb	w8, [x9], #1
  44d180:	cbnz	w8, 44d178 <feof@plt+0x498d8>
  44d184:	mov	x0, x19
  44d188:	ldp	x20, x19, [sp, #32]
  44d18c:	ldp	x22, x21, [sp, #16]
  44d190:	ldp	x29, x30, [sp], #48
  44d194:	ret
  44d198:	stp	x29, x30, [sp, #-48]!
  44d19c:	stp	x20, x19, [sp, #32]
  44d1a0:	ldrb	w8, [x1, #4]
  44d1a4:	adrp	x9, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d1a8:	add	x9, x9, #0x1b8
  44d1ac:	mov	x19, x1
  44d1b0:	lsl	x8, x8, #4
  44d1b4:	ldr	w8, [x9, x8]
  44d1b8:	mov	x20, x0
  44d1bc:	str	x21, [sp, #16]
  44d1c0:	mov	x29, sp
  44d1c4:	cmp	w8, #0x1
  44d1c8:	b.eq	44d1dc <feof@plt+0x4993c>  // b.none
  44d1cc:	cmp	w8, #0x2
  44d1d0:	b.ne	44d1f0 <feof@plt+0x49950>  // b.any
  44d1d4:	ldr	w8, [x19, #8]
  44d1d8:	b	44d1f4 <feof@plt+0x49954>
  44d1dc:	ldr	x8, [x19, #8]
  44d1e0:	ldr	w8, [x8, #8]
  44d1e4:	add	w8, w8, w8, lsl #2
  44d1e8:	lsl	w8, w8, #1
  44d1ec:	b	44d1f4 <feof@plt+0x49954>
  44d1f0:	mov	w8, #0x6                   	// #6
  44d1f4:	add	w1, w8, #0x1
  44d1f8:	mov	x0, x20
  44d1fc:	bl	44d230 <feof@plt+0x49990>
  44d200:	mov	x21, x0
  44d204:	mov	x0, x20
  44d208:	mov	x1, x19
  44d20c:	mov	x2, x21
  44d210:	mov	w3, wzr
  44d214:	bl	44d044 <feof@plt+0x497a4>
  44d218:	strb	wzr, [x0]
  44d21c:	mov	x0, x21
  44d220:	ldp	x20, x19, [sp, #32]
  44d224:	ldr	x21, [sp, #16]
  44d228:	ldp	x29, x30, [sp], #48
  44d22c:	ret
  44d230:	stp	x29, x30, [sp, #-48]!
  44d234:	stp	x20, x19, [sp, #32]
  44d238:	ldr	x8, [x0, #64]
  44d23c:	str	x21, [sp, #16]
  44d240:	mov	x20, x0
  44d244:	mov	x19, x1
  44d248:	ldp	x0, x9, [x8, #16]
  44d24c:	mov	x29, sp
  44d250:	sub	x9, x9, x0
  44d254:	cmp	x9, x1
  44d258:	b.cs	44d300 <feof@plt+0x49a60>  // b.hs, b.nlast
  44d25c:	mov	x9, x20
  44d260:	ldr	x8, [x9, #72]!
  44d264:	cbz	x8, 44d2b4 <feof@plt+0x49a14>
  44d268:	ldr	x10, [x8, #24]
  44d26c:	ldr	x11, [x8, #8]
  44d270:	add	x12, x19, x19, lsl #1
  44d274:	mov	w13, #0x1f40                	// #8000
  44d278:	sub	x11, x10, x11
  44d27c:	cmp	x11, x19
  44d280:	add	x10, x13, x12, lsr #1
  44d284:	b.cc	44d290 <feof@plt+0x499f0>  // b.lo, b.ul, b.last
  44d288:	cmp	x11, x10
  44d28c:	b.ls	44d2e0 <feof@plt+0x49a40>  // b.plast
  44d290:	mov	x9, x8
  44d294:	ldr	x8, [x8]
  44d298:	cbz	x8, 44d2b4 <feof@plt+0x49a14>
  44d29c:	ldr	x11, [x8, #24]
  44d2a0:	ldr	x12, [x8, #8]
  44d2a4:	sub	x11, x11, x12
  44d2a8:	cmp	x11, x19
  44d2ac:	b.cs	44d288 <feof@plt+0x499e8>  // b.hs, b.nlast
  44d2b0:	b	44d290 <feof@plt+0x499f0>
  44d2b4:	mov	w8, #0x1f40                	// #8000
  44d2b8:	cmp	x19, x8
  44d2bc:	csel	x8, x19, x8, hi  // hi = pmore
  44d2c0:	add	x8, x8, #0x7
  44d2c4:	and	x21, x8, #0xfffffffffffffff8
  44d2c8:	add	x0, x21, #0x20
  44d2cc:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44d2d0:	add	x8, x0, x21
  44d2d4:	stp	x0, x8, [x8, #16]
  44d2d8:	stp	xzr, x0, [x8]
  44d2dc:	b	44d2f4 <feof@plt+0x49a54>
  44d2e0:	ldr	x10, [x8]
  44d2e4:	str	x10, [x9]
  44d2e8:	ldr	x0, [x8, #8]
  44d2ec:	str	xzr, [x8]
  44d2f0:	str	x0, [x8, #16]
  44d2f4:	ldr	x9, [x20, #64]
  44d2f8:	str	x9, [x8]
  44d2fc:	str	x8, [x20, #64]
  44d300:	add	x9, x0, x19
  44d304:	str	x9, [x8, #16]
  44d308:	ldp	x20, x19, [sp, #32]
  44d30c:	ldr	x21, [sp, #16]
  44d310:	ldp	x29, x30, [sp], #48
  44d314:	ret
  44d318:	tbnz	w1, #1, 44d338 <feof@plt+0x49a98>
  44d31c:	and	w8, w1, #0xff
  44d320:	tbnz	w8, #4, 44d350 <feof@plt+0x49ab0>
  44d324:	adrp	x8, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d328:	add	x8, x8, #0x1b8
  44d32c:	add	x8, x8, w0, uxtw #4
  44d330:	ldr	x0, [x8, #8]
  44d334:	ret
  44d338:	adrp	x8, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d33c:	add	x8, x8, #0x6f8
  44d340:	add	x8, x8, w0, sxtw #3
  44d344:	sub	x8, x8, #0x128
  44d348:	ldr	x0, [x8]
  44d34c:	ret
  44d350:	b	4592ac <feof@plt+0x55a0c>
  44d354:	sub	sp, sp, #0x40
  44d358:	stp	x29, x30, [sp, #16]
  44d35c:	stp	x22, x21, [sp, #32]
  44d360:	stp	x20, x19, [sp, #48]
  44d364:	ldrb	w8, [x0, #4]
  44d368:	adrp	x9, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d36c:	add	x9, x9, #0x1b8
  44d370:	mov	x20, x0
  44d374:	lsl	x10, x8, #4
  44d378:	ldr	w10, [x9, x10]
  44d37c:	mov	x19, x1
  44d380:	add	x29, sp, #0x10
  44d384:	cmp	w10, #0x2
  44d388:	b.eq	44d43c <feof@plt+0x49b9c>  // b.none
  44d38c:	cmp	w10, #0x1
  44d390:	b.eq	44d3b0 <feof@plt+0x49b10>  // b.none
  44d394:	cbnz	w10, 44d4ac <feof@plt+0x49c0c>
  44d398:	ldrh	w10, [x20, #6]
  44d39c:	tbnz	w10, #1, 44d460 <feof@plt+0x49bc0>
  44d3a0:	tbnz	w10, #4, 44d3b0 <feof@plt+0x49b10>
  44d3a4:	add	x8, x9, x8, lsl #4
  44d3a8:	add	x8, x8, #0x8
  44d3ac:	b	44d470 <feof@plt+0x49bd0>
  44d3b0:	ldr	x8, [x20, #8]
  44d3b4:	ldr	w9, [x8, #8]
  44d3b8:	cbz	w9, 44d4ac <feof@plt+0x49c0c>
  44d3bc:	ldr	x21, [x8]
  44d3c0:	mov	x22, xzr
  44d3c4:	b	44d400 <feof@plt+0x49b60>
  44d3c8:	add	x0, sp, #0x4
  44d3cc:	bl	44cf30 <feof@plt+0x49690>
  44d3d0:	add	x8, x22, x0
  44d3d4:	add	x0, sp, #0x4
  44d3d8:	mov	w1, #0x1                   	// #1
  44d3dc:	mov	w2, #0xa                   	// #10
  44d3e0:	mov	x3, x19
  44d3e4:	sub	x22, x8, #0x1
  44d3e8:	bl	403740 <fwrite_unlocked@plt>
  44d3ec:	ldr	x8, [x20, #8]
  44d3f0:	add	x22, x22, #0x1
  44d3f4:	ldr	w9, [x8, #8]
  44d3f8:	cmp	x22, x9
  44d3fc:	b.cs	44d4ac <feof@plt+0x49c0c>  // b.hs, b.nlast
  44d400:	add	x1, x21, x22
  44d404:	ldrsb	w9, [x1]
  44d408:	tbnz	w9, #31, 44d3c8 <feof@plt+0x49b28>
  44d40c:	ldr	x9, [x8]
  44d410:	ldp	x8, x10, [x19, #40]
  44d414:	ldrb	w1, [x9, x22]
  44d418:	cmp	x8, x10
  44d41c:	b.cs	44d430 <feof@plt+0x49b90>  // b.hs, b.nlast
  44d420:	add	x9, x8, #0x1
  44d424:	str	x9, [x19, #40]
  44d428:	strb	w1, [x8]
  44d42c:	b	44d3ec <feof@plt+0x49b4c>
  44d430:	mov	x0, x19
  44d434:	bl	403140 <__overflow@plt>
  44d438:	b	44d3ec <feof@plt+0x49b4c>
  44d43c:	ldr	x0, [x20, #16]
  44d440:	ldr	w2, [x20, #8]
  44d444:	mov	x3, x19
  44d448:	ldp	x20, x19, [sp, #48]
  44d44c:	ldp	x22, x21, [sp, #32]
  44d450:	ldp	x29, x30, [sp, #16]
  44d454:	mov	w1, #0x1                   	// #1
  44d458:	add	sp, sp, #0x40
  44d45c:	b	403740 <fwrite_unlocked@plt>
  44d460:	adrp	x9, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d464:	add	x9, x9, #0x6f8
  44d468:	add	x8, x9, x8, lsl #3
  44d46c:	sub	x8, x8, #0x128
  44d470:	ldr	x20, [x8]
  44d474:	ldrb	w8, [x20], #1
  44d478:	ldp	x9, x10, [x19, #40]
  44d47c:	cmp	x9, x10
  44d480:	b.cs	44d49c <feof@plt+0x49bfc>  // b.hs, b.nlast
  44d484:	add	x10, x9, #0x1
  44d488:	str	x10, [x19, #40]
  44d48c:	strb	w8, [x9]
  44d490:	ldrb	w8, [x20], #1
  44d494:	cbnz	w8, 44d478 <feof@plt+0x49bd8>
  44d498:	b	44d4ac <feof@plt+0x49c0c>
  44d49c:	and	w1, w8, #0xff
  44d4a0:	mov	x0, x19
  44d4a4:	bl	403140 <__overflow@plt>
  44d4a8:	b	44d490 <feof@plt+0x49bf0>
  44d4ac:	ldp	x20, x19, [sp, #48]
  44d4b0:	ldp	x22, x21, [sp, #32]
  44d4b4:	ldp	x29, x30, [sp, #16]
  44d4b8:	add	sp, sp, #0x40
  44d4bc:	ret
  44d4c0:	stp	x29, x30, [sp, #-16]!
  44d4c4:	ldrb	w8, [x0, #4]
  44d4c8:	ldrb	w9, [x1, #4]
  44d4cc:	mov	x29, sp
  44d4d0:	cmp	w8, w9
  44d4d4:	b.ne	44d570 <feof@plt+0x49cd0>  // b.any
  44d4d8:	ldrh	w9, [x0, #6]
  44d4dc:	ldrh	w10, [x1, #6]
  44d4e0:	cmp	w9, w10
  44d4e4:	b.ne	44d570 <feof@plt+0x49cd0>  // b.any
  44d4e8:	adrp	x10, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d4ec:	lsl	x9, x8, #4
  44d4f0:	add	x10, x10, #0x1b8
  44d4f4:	ldr	w9, [x10, x9]
  44d4f8:	cmp	w9, #0x1
  44d4fc:	b.eq	44d52c <feof@plt+0x49c8c>  // b.none
  44d500:	cmp	w9, #0x2
  44d504:	b.eq	44d54c <feof@plt+0x49cac>  // b.none
  44d508:	cmp	w9, #0x3
  44d50c:	b.ne	44d57c <feof@plt+0x49cdc>  // b.any
  44d510:	cmp	w8, #0x50
  44d514:	b.ne	44d59c <feof@plt+0x49cfc>  // b.any
  44d518:	ldr	w8, [x0, #8]
  44d51c:	ldr	w9, [x1, #8]
  44d520:	cmp	w8, w9
  44d524:	b.eq	44d53c <feof@plt+0x49c9c>  // b.none
  44d528:	b	44d570 <feof@plt+0x49cd0>
  44d52c:	ldr	x8, [x0, #8]
  44d530:	ldr	x9, [x1, #8]
  44d534:	cmp	x8, x9
  44d538:	b.ne	44d570 <feof@plt+0x49cd0>  // b.any
  44d53c:	ldr	x8, [x0, #16]
  44d540:	ldr	x9, [x1, #16]
  44d544:	cmp	x8, x9
  44d548:	b	44d590 <feof@plt+0x49cf0>
  44d54c:	ldr	w2, [x0, #8]
  44d550:	ldr	w8, [x1, #8]
  44d554:	cmp	w2, w8
  44d558:	b.ne	44d570 <feof@plt+0x49cd0>  // b.any
  44d55c:	ldr	x0, [x0, #16]
  44d560:	ldr	x1, [x1, #16]
  44d564:	bl	403840 <bcmp@plt>
  44d568:	cmp	w0, #0x0
  44d56c:	b	44d590 <feof@plt+0x49cf0>
  44d570:	mov	w0, wzr
  44d574:	ldp	x29, x30, [sp], #16
  44d578:	ret
  44d57c:	cmp	w8, #0x26
  44d580:	b.ne	44d59c <feof@plt+0x49cfc>  // b.any
  44d584:	ldr	w8, [x0, #8]
  44d588:	ldr	w9, [x1, #8]
  44d58c:	cmp	w8, w9
  44d590:	cset	w0, eq  // eq = none
  44d594:	ldp	x29, x30, [sp], #16
  44d598:	ret
  44d59c:	mov	w0, #0x1                   	// #1
  44d5a0:	ldp	x29, x30, [sp], #16
  44d5a4:	ret
  44d5a8:	ldrb	w10, [x1, #6]
  44d5ac:	ldrb	w9, [x1, #4]
  44d5b0:	ldrh	w13, [x2, #6]
  44d5b4:	ldrb	w11, [x2, #4]
  44d5b8:	mov	w14, #0x35                  	// #53
  44d5bc:	tst	w10, #0x10
  44d5c0:	csel	w12, w9, w14, eq  // eq = none
  44d5c4:	tst	w13, #0x10
  44d5c8:	mov	x8, x0
  44d5cc:	csel	w9, w11, w14, eq  // eq = none
  44d5d0:	tbnz	w13, #1, 44d5f0 <feof@plt+0x49d50>
  44d5d4:	adrp	x10, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d5d8:	lsl	x13, x9, #4
  44d5dc:	add	x10, x10, #0x1b8
  44d5e0:	ldr	w13, [x10, x13]
  44d5e4:	cbz	w13, 44d604 <feof@plt+0x49d64>
  44d5e8:	mov	w10, #0xffffffff            	// #-1
  44d5ec:	b	44d62c <feof@plt+0x49d8c>
  44d5f0:	adrp	x10, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d5f4:	add	x10, x10, #0x6f8
  44d5f8:	add	x10, x10, w9, uxtw #3
  44d5fc:	sub	x10, x10, #0x128
  44d600:	b	44d60c <feof@plt+0x49d6c>
  44d604:	add	x10, x10, x9, lsl #4
  44d608:	add	x10, x10, #0x8
  44d60c:	ldr	x10, [x10]
  44d610:	cmp	w12, #0xd
  44d614:	ldrb	w10, [x10]
  44d618:	b.hi	44d62c <feof@plt+0x49d8c>  // b.pmore
  44d61c:	cmp	w10, #0x3d
  44d620:	b.ne	44d62c <feof@plt+0x49d8c>  // b.any
  44d624:	mov	w0, #0x1                   	// #1
  44d628:	ret
  44d62c:	sub	w12, w12, #0x2
  44d630:	cmp	w12, #0x40
  44d634:	mov	w0, wzr
  44d638:	b.hi	44d83c <feof@plt+0x49f9c>  // b.pmore
  44d63c:	adrp	x13, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d640:	add	x13, x13, #0x16e
  44d644:	adr	x14, 44d654 <feof@plt+0x49db4>
  44d648:	ldrb	w15, [x13, x12]
  44d64c:	add	x14, x14, x15, lsl #2
  44d650:	br	x14
  44d654:	ldrb	w8, [x8, #1161]
  44d658:	cbz	w8, 44d68c <feof@plt+0x49dec>
  44d65c:	cmp	w9, #0x35
  44d660:	b.eq	44d624 <feof@plt+0x49d84>  // b.none
  44d664:	sub	x8, x11, #0x37
  44d668:	cmp	x8, #0x18
  44d66c:	b.hi	44d68c <feof@plt+0x49dec>  // b.pmore
  44d670:	ldr	x8, [x2, #16]
  44d674:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  44d678:	add	x9, x9, #0x4a2
  44d67c:	ldrb	w8, [x8]
  44d680:	ldrh	w8, [x9, x8, lsl #1]
  44d684:	ubfx	w0, w8, #9, #1
  44d688:	b	44d83c <feof@plt+0x49f9c>
  44d68c:	mov	w0, wzr
  44d690:	ret
  44d694:	orr	w8, w10, #0x4
  44d698:	cmp	w8, #0x3e
  44d69c:	cset	w0, eq  // eq = none
  44d6a0:	ret
  44d6a4:	cmp	w10, #0x3e
  44d6a8:	cset	w0, eq  // eq = none
  44d6ac:	ret
  44d6b0:	cmp	w10, #0x25
  44d6b4:	mov	w0, #0x1                   	// #1
  44d6b8:	b.eq	44d83c <feof@plt+0x49f9c>  // b.none
  44d6bc:	cmp	w10, #0x3c
  44d6c0:	b.eq	44d83c <feof@plt+0x49f9c>  // b.none
  44d6c4:	cmp	w10, #0x3a
  44d6c8:	cset	w0, eq  // eq = none
  44d6cc:	ret
  44d6d0:	cmp	w10, #0x2b
  44d6d4:	cset	w0, eq  // eq = none
  44d6d8:	ret
  44d6dc:	cmp	w10, #0x2d
  44d6e0:	cset	w8, eq  // eq = none
  44d6e4:	cmp	w10, #0x3e
  44d6e8:	b	44d720 <feof@plt+0x49e80>
  44d6ec:	cmp	w10, #0x2f
  44d6f0:	cset	w8, eq  // eq = none
  44d6f4:	cmp	w10, #0x2a
  44d6f8:	b	44d720 <feof@plt+0x49e80>
  44d6fc:	cmp	w10, #0x26
  44d700:	cset	w0, eq  // eq = none
  44d704:	ret
  44d708:	cmp	w10, #0x7c
  44d70c:	cset	w0, eq  // eq = none
  44d710:	ret
  44d714:	cmp	w10, #0x23
  44d718:	cset	w8, eq  // eq = none
  44d71c:	cmp	w10, #0x25
  44d720:	cset	w9, eq  // eq = none
  44d724:	orr	w0, w8, w9
  44d728:	ret
  44d72c:	cmp	w10, #0x2a
  44d730:	cset	w0, eq  // eq = none
  44d734:	ret
  44d738:	cmp	w10, #0x25
  44d73c:	mov	w0, #0x1                   	// #1
  44d740:	b.eq	44d83c <feof@plt+0x49f9c>  // b.none
  44d744:	cmp	w10, #0x2e
  44d748:	b.eq	44d83c <feof@plt+0x49f9c>  // b.none
  44d74c:	cmp	w9, #0x37
  44d750:	cset	w0, eq  // eq = none
  44d754:	ret
  44d758:	cmp	w9, #0x35
  44d75c:	mov	w0, #0x1                   	// #1
  44d760:	b.eq	44d83c <feof@plt+0x49f9c>  // b.none
  44d764:	cmp	w9, #0x38
  44d768:	b.eq	44d83c <feof@plt+0x49f9c>  // b.none
  44d76c:	cmp	w9, #0x37
  44d770:	b.ne	44d7c0 <feof@plt+0x49f20>  // b.any
  44d774:	ldr	w10, [x2, #8]
  44d778:	cbz	w10, 44d624 <feof@plt+0x49d84>
  44d77c:	ldr	x11, [x2, #16]
  44d780:	adrp	x12, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  44d784:	add	x12, x12, #0x4a2
  44d788:	mov	w13, #0x204                 	// #516
  44d78c:	mov	w0, #0x1                   	// #1
  44d790:	b	44d7a0 <feof@plt+0x49f00>
  44d794:	subs	x10, x10, #0x1
  44d798:	add	x11, x11, #0x1
  44d79c:	b.eq	44d83c <feof@plt+0x49f9c>  // b.none
  44d7a0:	ldrb	w14, [x11]
  44d7a4:	ldrh	w15, [x12, x14, lsl #1]
  44d7a8:	tst	w15, w13
  44d7ac:	b.ne	44d794 <feof@plt+0x49ef4>  // b.any
  44d7b0:	cmp	w14, #0x24
  44d7b4:	b.ne	44d7c0 <feof@plt+0x49f20>  // b.any
  44d7b8:	ldrb	w14, [x8, #1146]
  44d7bc:	cbnz	w14, 44d794 <feof@plt+0x49ef4>
  44d7c0:	cmp	w9, #0x3e
  44d7c4:	cset	w0, eq  // eq = none
  44d7c8:	ret
  44d7cc:	orr	w8, w9, #0x2
  44d7d0:	cmp	w8, #0x37
  44d7d4:	cset	w8, eq  // eq = none
  44d7d8:	cmp	w10, #0x2e
  44d7dc:	cset	w9, eq  // eq = none
  44d7e0:	cmp	w10, #0x2b
  44d7e4:	orr	w8, w8, w9
  44d7e8:	cset	w9, eq  // eq = none
  44d7ec:	cmp	w10, #0x2d
  44d7f0:	orr	w8, w9, w8
  44d7f4:	cset	w9, eq  // eq = none
  44d7f8:	orr	w0, w9, w8
  44d7fc:	ret
  44d800:	ldr	x10, [x1, #16]
  44d804:	cmp	w9, #0x35
  44d808:	ldrb	w10, [x10]
  44d80c:	b.ne	44d818 <feof@plt+0x49f78>  // b.any
  44d810:	cmp	w10, #0x5c
  44d814:	b.eq	44d624 <feof@plt+0x49d84>  // b.none
  44d818:	cmp	w10, #0x40
  44d81c:	mov	w0, wzr
  44d820:	b.ne	44d83c <feof@plt+0x49f9c>  // b.any
  44d824:	ldrb	w8, [x8, #1122]
  44d828:	cbz	w8, 44d83c <feof@plt+0x49f9c>
  44d82c:	cmp	w9, #0x35
  44d830:	cset	w8, eq  // eq = none
  44d834:	cmp	w9, #0x3e
  44d838:	b	44d720 <feof@plt+0x49e80>
  44d83c:	ret
  44d840:	stp	x29, x30, [sp, #-48]!
  44d844:	stp	x22, x21, [sp, #16]
  44d848:	stp	x20, x19, [sp, #32]
  44d84c:	mov	x29, sp
  44d850:	mov	x19, x1
  44d854:	mov	x20, x0
  44d858:	bl	452228 <feof@plt+0x4e988>
  44d85c:	ldrb	w8, [x0, #4]
  44d860:	cmp	w8, #0x16
  44d864:	b.ne	44d894 <feof@plt+0x49ff4>  // b.any
  44d868:	ldp	x8, x9, [x19, #40]
  44d86c:	cmp	x8, x9
  44d870:	b.cs	44d8f4 <feof@plt+0x4a054>  // b.hs, b.nlast
  44d874:	add	x9, x8, #0x1
  44d878:	mov	w10, #0xa                   	// #10
  44d87c:	str	x9, [x19, #40]
  44d880:	strb	w10, [x8]
  44d884:	ldp	x20, x19, [sp, #32]
  44d888:	ldp	x22, x21, [sp, #16]
  44d88c:	ldp	x29, x30, [sp], #48
  44d890:	ret
  44d894:	mov	x21, x0
  44d898:	mov	w22, #0x20                  	// #32
  44d89c:	b	44d8b8 <feof@plt+0x4a018>
  44d8a0:	add	x9, x8, #0x1
  44d8a4:	str	x9, [x19, #40]
  44d8a8:	strb	w22, [x8]
  44d8ac:	ldrb	w8, [x21, #4]
  44d8b0:	cmp	w8, #0x16
  44d8b4:	b.eq	44d868 <feof@plt+0x49fc8>  // b.none
  44d8b8:	mov	x0, x21
  44d8bc:	mov	x1, x19
  44d8c0:	bl	44d354 <feof@plt+0x49ab4>
  44d8c4:	mov	x0, x20
  44d8c8:	bl	452228 <feof@plt+0x4e988>
  44d8cc:	ldrb	w8, [x0, #6]
  44d8d0:	mov	x21, x0
  44d8d4:	tbz	w8, #0, 44d8ac <feof@plt+0x4a00c>
  44d8d8:	ldp	x8, x9, [x19, #40]
  44d8dc:	cmp	x8, x9
  44d8e0:	b.cc	44d8a0 <feof@plt+0x4a000>  // b.lo, b.ul, b.last
  44d8e4:	mov	w1, #0x20                  	// #32
  44d8e8:	mov	x0, x19
  44d8ec:	bl	403140 <__overflow@plt>
  44d8f0:	b	44d8ac <feof@plt+0x4a00c>
  44d8f4:	mov	x0, x19
  44d8f8:	ldp	x20, x19, [sp, #32]
  44d8fc:	ldp	x22, x21, [sp, #16]
  44d900:	mov	w1, #0xa                   	// #10
  44d904:	ldp	x29, x30, [sp], #48
  44d908:	b	403140 <__overflow@plt>
  44d90c:	stp	x29, x30, [sp, #-80]!
  44d910:	stp	x20, x19, [sp, #64]
  44d914:	mov	x19, x0
  44d918:	str	x25, [sp, #16]
  44d91c:	stp	x24, x23, [sp, #32]
  44d920:	stp	x22, x21, [sp, #48]
  44d924:	mov	x29, sp
  44d928:	cbz	x1, 44d964 <feof@plt+0x4a0c4>
  44d92c:	mov	x0, x1
  44d930:	mov	x22, x1
  44d934:	bl	4030b0 <strlen@plt>
  44d938:	mov	x23, x0
  44d93c:	add	w20, w23, #0x78
  44d940:	mov	x0, x20
  44d944:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44d948:	adrp	x1, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d94c:	add	x1, x1, #0x8fc
  44d950:	mov	x2, x22
  44d954:	mov	x21, x0
  44d958:	bl	403340 <sprintf@plt>
  44d95c:	add	w23, w23, #0x2
  44d960:	b	44d978 <feof@plt+0x4a0d8>
  44d964:	mov	w0, #0x78                  	// #120
  44d968:	mov	w20, #0x78                  	// #120
  44d96c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44d970:	mov	x21, x0
  44d974:	mov	w23, wzr
  44d978:	mov	x0, x19
  44d97c:	bl	452228 <feof@plt+0x4e988>
  44d980:	ldrb	w8, [x0, #4]
  44d984:	cmp	w8, #0x16
  44d988:	b.ne	44d9ac <feof@plt+0x4a10c>  // b.any
  44d98c:	strb	wzr, [x21, w23, uxtw]
  44d990:	mov	x0, x21
  44d994:	ldp	x20, x19, [sp, #64]
  44d998:	ldp	x22, x21, [sp, #48]
  44d99c:	ldp	x24, x23, [sp, #32]
  44d9a0:	ldr	x25, [sp, #16]
  44d9a4:	ldp	x29, x30, [sp], #80
  44d9a8:	ret
  44d9ac:	adrp	x24, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44d9b0:	mov	x22, x0
  44d9b4:	add	x24, x24, #0x1b8
  44d9b8:	mov	w25, #0x20                  	// #32
  44d9bc:	b	44d9cc <feof@plt+0x4a12c>
  44d9c0:	ldrb	w8, [x22, #4]
  44d9c4:	cmp	w8, #0x16
  44d9c8:	b.eq	44d98c <feof@plt+0x4a0ec>  // b.none
  44d9cc:	and	x8, x8, #0xff
  44d9d0:	lsl	x8, x8, #4
  44d9d4:	ldr	w8, [x24, x8]
  44d9d8:	cmp	w8, #0x1
  44d9dc:	b.eq	44d9f0 <feof@plt+0x4a150>  // b.none
  44d9e0:	cmp	w8, #0x2
  44d9e4:	b.ne	44da04 <feof@plt+0x4a164>  // b.any
  44d9e8:	ldr	w8, [x22, #8]
  44d9ec:	b	44da08 <feof@plt+0x4a168>
  44d9f0:	ldr	x8, [x22, #8]
  44d9f4:	ldr	w8, [x8, #8]
  44d9f8:	add	w8, w8, w8, lsl #2
  44d9fc:	lsl	w8, w8, #1
  44da00:	b	44da08 <feof@plt+0x4a168>
  44da04:	mov	w8, #0x6                   	// #6
  44da08:	add	w8, w23, w8
  44da0c:	add	w8, w8, #0x2
  44da10:	cmp	w8, w20
  44da14:	b.ls	44da34 <feof@plt+0x4a194>  // b.plast
  44da18:	lsl	w9, w20, #1
  44da1c:	cmp	w8, w9
  44da20:	csel	w20, w8, w9, hi  // hi = pmore
  44da24:	mov	x0, x21
  44da28:	mov	x1, x20
  44da2c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  44da30:	mov	x21, x0
  44da34:	add	x2, x21, w23, uxtw
  44da38:	mov	x0, x19
  44da3c:	mov	x1, x22
  44da40:	mov	w3, wzr
  44da44:	bl	44d044 <feof@plt+0x497a4>
  44da48:	sub	x23, x0, x21
  44da4c:	mov	x0, x19
  44da50:	bl	452228 <feof@plt+0x4e988>
  44da54:	ldrb	w8, [x0, #6]
  44da58:	mov	x22, x0
  44da5c:	tbz	w8, #0, 44d9c0 <feof@plt+0x4a120>
  44da60:	add	w8, w23, #0x1
  44da64:	strb	w25, [x21, w23, uxtw]
  44da68:	mov	w23, w8
  44da6c:	b	44d9c0 <feof@plt+0x4a120>
  44da70:	mov	x9, x1
  44da74:	mov	x8, x9
  44da78:	ldr	x9, [x9]
  44da7c:	cbnz	x9, 44da74 <feof@plt+0x4a1d4>
  44da80:	ldr	x9, [x0, #72]
  44da84:	str	x9, [x8]
  44da88:	str	x1, [x0, #72]
  44da8c:	ret
  44da90:	stp	x29, x30, [sp, #-32]!
  44da94:	str	x19, [sp, #16]
  44da98:	mov	x8, x0
  44da9c:	ldr	x0, [x8, #72]!
  44daa0:	mov	x29, sp
  44daa4:	cbz	x0, 44daec <feof@plt+0x4a24c>
  44daa8:	mov	x9, x0
  44daac:	ldr	x11, [x9, #8]!
  44dab0:	add	x10, x1, x1, lsl #1
  44dab4:	mov	w13, #0x1f40                	// #8000
  44dab8:	add	x10, x13, x10, lsr #1
  44dabc:	ldr	x12, [x9, #16]
  44dac0:	sub	x11, x12, x11
  44dac4:	cmp	x11, x1
  44dac8:	ccmp	x11, x10, #0x2, cs  // cs = hs, nlast
  44dacc:	b.ls	44db1c <feof@plt+0x4a27c>  // b.plast
  44dad0:	mov	x8, x0
  44dad4:	ldr	x0, [x0]
  44dad8:	cbz	x0, 44daec <feof@plt+0x4a24c>
  44dadc:	mov	x9, x0
  44dae0:	ldr	x11, [x9, #8]!
  44dae4:	ldr	x12, [x9, #16]
  44dae8:	b	44dac0 <feof@plt+0x4a220>
  44daec:	mov	w8, #0x1f40                	// #8000
  44daf0:	cmp	x1, x8
  44daf4:	csel	x8, x1, x8, hi  // hi = pmore
  44daf8:	add	x8, x8, #0x7
  44dafc:	and	x19, x8, #0xfffffffffffffff8
  44db00:	add	x0, x19, #0x20
  44db04:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44db08:	mov	x8, x0
  44db0c:	add	x0, x0, x19
  44db10:	stp	x8, x0, [x0, #16]
  44db14:	stp	xzr, x8, [x0]
  44db18:	b	44db30 <feof@plt+0x4a290>
  44db1c:	ldr	x10, [x0]
  44db20:	str	x10, [x8]
  44db24:	str	xzr, [x0]
  44db28:	ldr	x8, [x9]
  44db2c:	str	x8, [x0, #16]
  44db30:	ldr	x19, [sp, #16]
  44db34:	ldp	x29, x30, [sp], #32
  44db38:	ret
  44db3c:	stp	x29, x30, [sp, #-32]!
  44db40:	stp	x20, x19, [sp, #16]
  44db44:	ldp	x9, x8, [x1, #16]
  44db48:	ldr	x20, [x0, #72]!
  44db4c:	mov	x19, x1
  44db50:	mov	x29, sp
  44db54:	sub	x8, x8, x9
  44db58:	add	x8, x2, x8, lsl #1
  44db5c:	cbz	x20, 44dbac <feof@plt+0x4a30c>
  44db60:	ldr	x9, [x20, #24]
  44db64:	ldr	x10, [x20, #8]
  44db68:	add	x11, x8, x8, lsl #1
  44db6c:	mov	w12, #0x1f40                	// #8000
  44db70:	sub	x10, x9, x10
  44db74:	cmp	x10, x8
  44db78:	add	x9, x12, x11, lsr #1
  44db7c:	b.cc	44db88 <feof@plt+0x4a2e8>  // b.lo, b.ul, b.last
  44db80:	cmp	x10, x9
  44db84:	b.ls	44dbd8 <feof@plt+0x4a338>  // b.plast
  44db88:	mov	x0, x20
  44db8c:	ldr	x20, [x20]
  44db90:	cbz	x20, 44dbac <feof@plt+0x4a30c>
  44db94:	ldr	x10, [x20, #24]
  44db98:	ldr	x11, [x20, #8]
  44db9c:	sub	x10, x10, x11
  44dba0:	cmp	x10, x8
  44dba4:	b.cs	44db80 <feof@plt+0x4a2e0>  // b.hs, b.nlast
  44dba8:	b	44db88 <feof@plt+0x4a2e8>
  44dbac:	mov	w9, #0x1f40                	// #8000
  44dbb0:	cmp	x8, x9
  44dbb4:	csel	x8, x8, x9, hi  // hi = pmore
  44dbb8:	add	x8, x8, #0x7
  44dbbc:	and	x20, x8, #0xfffffffffffffff8
  44dbc0:	add	x0, x20, #0x20
  44dbc4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44dbc8:	add	x20, x0, x20
  44dbcc:	stp	x0, x20, [x20, #16]
  44dbd0:	stp	xzr, x0, [x20]
  44dbd4:	b	44dbec <feof@plt+0x4a34c>
  44dbd8:	ldr	x8, [x20]
  44dbdc:	str	x8, [x0]
  44dbe0:	ldr	x8, [x20, #8]
  44dbe4:	str	xzr, [x20]
  44dbe8:	str	x8, [x20, #16]
  44dbec:	str	x20, [x19]
  44dbf0:	ldp	x1, x8, [x19, #16]
  44dbf4:	ldr	x0, [x20, #8]
  44dbf8:	sub	x2, x8, x1
  44dbfc:	bl	402fc0 <memcpy@plt>
  44dc00:	mov	x0, x20
  44dc04:	ldp	x20, x19, [sp, #16]
  44dc08:	ldp	x29, x30, [sp], #32
  44dc0c:	ret
  44dc10:	stp	x29, x30, [sp, #-48]!
  44dc14:	stp	x20, x19, [sp, #32]
  44dc18:	ldr	x20, [x1]
  44dc1c:	str	x21, [sp, #16]
  44dc20:	mov	x19, x1
  44dc24:	mov	x29, sp
  44dc28:	ldp	x9, x8, [x20, #16]
  44dc2c:	ldr	x21, [x0, #72]!
  44dc30:	sub	x8, x8, x9
  44dc34:	add	x8, x2, x8, lsl #1
  44dc38:	cbz	x21, 44dc88 <feof@plt+0x4a3e8>
  44dc3c:	ldr	x9, [x21, #24]
  44dc40:	ldr	x10, [x21, #8]
  44dc44:	add	x11, x8, x8, lsl #1
  44dc48:	mov	w12, #0x1f40                	// #8000
  44dc4c:	sub	x10, x9, x10
  44dc50:	cmp	x10, x8
  44dc54:	add	x9, x12, x11, lsr #1
  44dc58:	b.cc	44dc64 <feof@plt+0x4a3c4>  // b.lo, b.ul, b.last
  44dc5c:	cmp	x10, x9
  44dc60:	b.ls	44dcb4 <feof@plt+0x4a414>  // b.plast
  44dc64:	mov	x0, x21
  44dc68:	ldr	x21, [x21]
  44dc6c:	cbz	x21, 44dc88 <feof@plt+0x4a3e8>
  44dc70:	ldr	x10, [x21, #24]
  44dc74:	ldr	x11, [x21, #8]
  44dc78:	sub	x10, x10, x11
  44dc7c:	cmp	x10, x8
  44dc80:	b.cs	44dc5c <feof@plt+0x4a3bc>  // b.hs, b.nlast
  44dc84:	b	44dc64 <feof@plt+0x4a3c4>
  44dc88:	mov	w9, #0x1f40                	// #8000
  44dc8c:	cmp	x8, x9
  44dc90:	csel	x8, x8, x9, hi  // hi = pmore
  44dc94:	add	x8, x8, #0x7
  44dc98:	and	x21, x8, #0xfffffffffffffff8
  44dc9c:	add	x0, x21, #0x20
  44dca0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44dca4:	add	x21, x0, x21
  44dca8:	stp	x0, x21, [x21, #16]
  44dcac:	stp	xzr, x0, [x21]
  44dcb0:	b	44dcc8 <feof@plt+0x4a428>
  44dcb4:	ldr	x8, [x21]
  44dcb8:	str	x8, [x0]
  44dcbc:	ldr	x8, [x21, #8]
  44dcc0:	str	xzr, [x21]
  44dcc4:	str	x8, [x21, #16]
  44dcc8:	ldp	x1, x8, [x20, #16]
  44dccc:	ldr	x0, [x21, #8]
  44dcd0:	sub	x2, x8, x1
  44dcd4:	bl	402fc0 <memcpy@plt>
  44dcd8:	str	x20, [x21]
  44dcdc:	str	x21, [x19]
  44dce0:	ldp	x20, x19, [sp, #32]
  44dce4:	ldr	x21, [sp, #16]
  44dce8:	ldp	x29, x30, [sp], #48
  44dcec:	ret
  44dcf0:	stp	x29, x30, [sp, #-32]!
  44dcf4:	str	x19, [sp, #16]
  44dcf8:	mov	x29, sp
  44dcfc:	cbz	x0, 44dd10 <feof@plt+0x4a470>
  44dd00:	ldp	x19, x0, [x0]
  44dd04:	bl	4031d0 <free@plt>
  44dd08:	mov	x0, x19
  44dd0c:	cbnz	x19, 44dd00 <feof@plt+0x4a460>
  44dd10:	ldr	x19, [sp, #16]
  44dd14:	ldp	x29, x30, [sp], #32
  44dd18:	ret
  44dd1c:	stp	x29, x30, [sp, #-48]!
  44dd20:	stp	x20, x19, [sp, #32]
  44dd24:	ldr	x8, [x0, #56]
  44dd28:	str	x21, [sp, #16]
  44dd2c:	mov	x20, x0
  44dd30:	mov	x19, x1
  44dd34:	ldp	x0, x9, [x8, #16]
  44dd38:	mov	x29, sp
  44dd3c:	sub	x9, x9, x0
  44dd40:	cmp	x9, x1
  44dd44:	b.cs	44ddec <feof@plt+0x4a54c>  // b.hs, b.nlast
  44dd48:	mov	x9, x20
  44dd4c:	ldr	x8, [x9, #72]!
  44dd50:	cbz	x8, 44dda0 <feof@plt+0x4a500>
  44dd54:	ldr	x10, [x8, #24]
  44dd58:	ldr	x11, [x8, #8]
  44dd5c:	add	x12, x19, x19, lsl #1
  44dd60:	mov	w13, #0x1f40                	// #8000
  44dd64:	sub	x11, x10, x11
  44dd68:	cmp	x11, x19
  44dd6c:	add	x10, x13, x12, lsr #1
  44dd70:	b.cc	44dd7c <feof@plt+0x4a4dc>  // b.lo, b.ul, b.last
  44dd74:	cmp	x11, x10
  44dd78:	b.ls	44ddcc <feof@plt+0x4a52c>  // b.plast
  44dd7c:	mov	x9, x8
  44dd80:	ldr	x8, [x8]
  44dd84:	cbz	x8, 44dda0 <feof@plt+0x4a500>
  44dd88:	ldr	x11, [x8, #24]
  44dd8c:	ldr	x12, [x8, #8]
  44dd90:	sub	x11, x11, x12
  44dd94:	cmp	x11, x19
  44dd98:	b.cs	44dd74 <feof@plt+0x4a4d4>  // b.hs, b.nlast
  44dd9c:	b	44dd7c <feof@plt+0x4a4dc>
  44dda0:	mov	w8, #0x1f40                	// #8000
  44dda4:	cmp	x19, x8
  44dda8:	csel	x8, x19, x8, hi  // hi = pmore
  44ddac:	add	x8, x8, #0x7
  44ddb0:	and	x21, x8, #0xfffffffffffffff8
  44ddb4:	add	x0, x21, #0x20
  44ddb8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  44ddbc:	add	x8, x0, x21
  44ddc0:	stp	x0, x8, [x8, #16]
  44ddc4:	stp	xzr, x0, [x8]
  44ddc8:	b	44dde0 <feof@plt+0x4a540>
  44ddcc:	ldr	x10, [x8]
  44ddd0:	str	x10, [x9]
  44ddd4:	ldr	x0, [x8, #8]
  44ddd8:	str	xzr, [x8]
  44dddc:	str	x0, [x8, #16]
  44dde0:	ldr	x9, [x20, #56]
  44dde4:	str	x9, [x8]
  44dde8:	str	x8, [x20, #56]
  44ddec:	add	x9, x0, x19
  44ddf0:	str	x9, [x8, #16]
  44ddf4:	ldp	x20, x19, [sp, #32]
  44ddf8:	ldr	x21, [sp, #16]
  44ddfc:	ldp	x29, x30, [sp], #48
  44de00:	ret
  44de04:	stp	x29, x30, [sp, #-48]!
  44de08:	stp	x20, x19, [sp, #32]
  44de0c:	ldr	x8, [x0, #1088]
  44de10:	ldr	x9, [x0, #56]
  44de14:	mov	x20, x1
  44de18:	str	x21, [sp, #16]
  44de1c:	ldr	x8, [x8, #104]
  44de20:	ldr	x19, [x9, #16]
  44de24:	mov	x29, sp
  44de28:	cbz	x8, 44de4c <feof@plt+0x4a5ac>
  44de2c:	mov	x0, x20
  44de30:	blr	x8
  44de34:	mov	x1, x19
  44de38:	mov	x2, x20
  44de3c:	mov	x21, x0
  44de40:	bl	402fc0 <memcpy@plt>
  44de44:	mov	x19, x21
  44de48:	b	44de54 <feof@plt+0x4a5b4>
  44de4c:	add	x8, x19, x20
  44de50:	str	x8, [x9, #16]
  44de54:	mov	x0, x19
  44de58:	ldp	x20, x19, [sp, #32]
  44de5c:	ldr	x21, [sp, #16]
  44de60:	ldp	x29, x30, [sp], #48
  44de64:	ret
  44de68:	ldrb	w8, [x0, #4]
  44de6c:	adrp	x10, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44de70:	add	x10, x10, #0x1b8
  44de74:	lsl	x9, x8, #4
  44de78:	ldr	w9, [x10, x9]
  44de7c:	cmp	w9, #0x3
  44de80:	b.hi	44dedc <feof@plt+0x4a63c>  // b.pmore
  44de84:	adrp	x10, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44de88:	add	x10, x10, #0x1af
  44de8c:	adr	x11, 44dea0 <feof@plt+0x4a600>
  44de90:	ldrb	w12, [x10, x9]
  44de94:	add	x11, x11, x12, lsl #2
  44de98:	mov	w0, wzr
  44de9c:	br	x11
  44dea0:	cmp	w8, #0x26
  44dea4:	mov	w8, #0x6                   	// #6
  44dea8:	mov	w9, #0x4                   	// #4
  44deac:	csel	w0, w9, w8, eq  // eq = none
  44deb0:	ret
  44deb4:	mov	w0, #0x2                   	// #2
  44deb8:	ret
  44debc:	sub	w8, w8, #0x50
  44dec0:	cmp	w8, #0x4
  44dec4:	b.cs	44dedc <feof@plt+0x4a63c>  // b.hs, b.nlast
  44dec8:	adrp	x9, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  44decc:	sxtb	x8, w8
  44ded0:	add	x9, x9, #0xfb0
  44ded4:	ldr	w0, [x9, x8, lsl #2]
  44ded8:	ret
  44dedc:	mov	w0, #0x6                   	// #6
  44dee0:	ret
  44dee4:	str	w1, [x0, #1408]
  44dee8:	ret
  44deec:	str	wzr, [x0, #1408]
  44def0:	ret
  44def4:	ldr	x0, [x0, #88]
  44def8:	cbz	x0, 44df00 <feof@plt+0x4a660>
  44defc:	b	47a428 <feof@plt+0x76b88>
  44df00:	ret
  44df04:	stp	x29, x30, [sp, #-48]!
  44df08:	adrp	x1, 44d000 <feof@plt+0x49760>
  44df0c:	adrp	x2, 44d000 <feof@plt+0x49760>
  44df10:	stp	x20, x19, [sp, #32]
  44df14:	mov	x19, x0
  44df18:	add	x1, x1, #0xf98
  44df1c:	add	x2, x2, #0xfb4
  44df20:	mov	w0, #0x64                  	// #100
  44df24:	mov	x3, xzr
  44df28:	str	x21, [sp, #16]
  44df2c:	mov	x29, sp
  44df30:	bl	47a238 <feof@plt+0x76998>
  44df34:	ldr	w8, [x19, #96]
  44df38:	str	x0, [x19, #88]
  44df3c:	cbz	w8, 44df88 <feof@plt+0x4a6e8>
  44df40:	ldr	x1, [x19, #104]
  44df44:	mov	w2, #0x1                   	// #1
  44df48:	bl	47ab30 <feof@plt+0x77290>
  44df4c:	ldr	w8, [x19, #96]
  44df50:	cmp	w8, #0x2
  44df54:	b.cc	44df88 <feof@plt+0x4a6e8>  // b.lo, b.ul, b.last
  44df58:	mov	w20, #0x1                   	// #1
  44df5c:	mov	w21, #0x18                  	// #24
  44df60:	ldr	x8, [x19, #104]
  44df64:	ldr	x0, [x19, #88]
  44df68:	mov	w2, #0x1                   	// #1
  44df6c:	add	x1, x8, x21
  44df70:	bl	47ab30 <feof@plt+0x77290>
  44df74:	ldr	w8, [x19, #96]
  44df78:	add	x20, x20, #0x1
  44df7c:	add	x21, x21, #0x18
  44df80:	cmp	x20, x8
  44df84:	b.cc	44df60 <feof@plt+0x4a6c0>  // b.lo, b.ul, b.last
  44df88:	ldp	x20, x19, [sp, #32]
  44df8c:	ldr	x21, [sp, #16]
  44df90:	ldp	x29, x30, [sp], #48
  44df94:	ret
  44df98:	ldp	w8, w9, [x0]
  44df9c:	ldr	w10, [x0, #8]
  44dfa0:	ldr	w11, [x0, #16]
  44dfa4:	add	w8, w9, w8
  44dfa8:	add	w8, w8, w10
  44dfac:	add	w0, w8, w11
  44dfb0:	ret
  44dfb4:	ldr	w8, [x0]
  44dfb8:	ldr	w9, [x1]
  44dfbc:	cmp	w8, w9
  44dfc0:	b.ne	44dff8 <feof@plt+0x4a758>  // b.any
  44dfc4:	ldr	w8, [x0, #4]
  44dfc8:	ldr	w9, [x1, #4]
  44dfcc:	cmp	w8, w9
  44dfd0:	b.ne	44dff8 <feof@plt+0x4a758>  // b.any
  44dfd4:	ldr	w8, [x0, #8]
  44dfd8:	ldr	w9, [x1, #8]
  44dfdc:	cmp	w8, w9
  44dfe0:	b.ne	44dff8 <feof@plt+0x4a758>  // b.any
  44dfe4:	ldr	x8, [x0, #16]
  44dfe8:	ldr	x9, [x1, #16]
  44dfec:	cmp	x8, x9
  44dff0:	cset	w0, eq  // eq = none
  44dff4:	ret
  44dff8:	mov	w0, wzr
  44dffc:	ret
  44e000:	sub	sp, sp, #0x60
  44e004:	stp	x22, x21, [sp, #64]
  44e008:	stp	x20, x19, [sp, #80]
  44e00c:	mov	x21, x3
  44e010:	mov	x20, x2
  44e014:	mov	w22, w1
  44e018:	mov	x19, x0
  44e01c:	stp	x29, x30, [sp, #32]
  44e020:	stp	x24, x23, [sp, #48]
  44e024:	add	x29, sp, #0x20
  44e028:	tbnz	w1, #31, 44e034 <feof@plt+0x4a794>
  44e02c:	cbz	x21, 44e04c <feof@plt+0x4a7ac>
  44e030:	b	44e058 <feof@plt+0x4a7b8>
  44e034:	ldr	x8, [x19, #104]
  44e038:	and	w9, w22, #0x7fffffff
  44e03c:	mov	w10, #0x18                  	// #24
  44e040:	umull	x9, w9, w10
  44e044:	ldr	w22, [x8, x9]
  44e048:	cbnz	x21, 44e058 <feof@plt+0x4a7b8>
  44e04c:	cbnz	w22, 44e058 <feof@plt+0x4a7b8>
  44e050:	mov	w23, wzr
  44e054:	b	44e1f0 <feof@plt+0x4a950>
  44e058:	lsr	w8, w22, #28
  44e05c:	cmp	w8, #0x4
  44e060:	lsr	x23, x20, #32
  44e064:	b.hi	44e0dc <feof@plt+0x4a83c>  // b.pmore
  44e068:	cmp	w20, #0x2
  44e06c:	b.cc	44e0dc <feof@plt+0x4a83c>  // b.lo, b.ul, b.last
  44e070:	subs	w24, w23, w20
  44e074:	b.cc	44e0dc <feof@plt+0x4a83c>  // b.lo, b.ul, b.last
  44e078:	cbnz	x21, 44e0dc <feof@plt+0x4a83c>
  44e07c:	cmp	w22, w20
  44e080:	b.ne	44e0dc <feof@plt+0x4a83c>  // b.any
  44e084:	ldr	w8, [x19, #36]
  44e088:	cbz	w8, 44e0a8 <feof@plt+0x4a808>
  44e08c:	ldr	x9, [x19, #24]
  44e090:	sub	w8, w8, #0x1
  44e094:	sbfiz	x8, x8, #5, #32
  44e098:	ldr	w8, [x9, x8]
  44e09c:	cmp	w8, w23
  44e0a0:	b.hi	44e0b4 <feof@plt+0x4a814>  // b.pmore
  44e0a4:	b	44e0dc <feof@plt+0x4a83c>
  44e0a8:	mov	w8, #0x80000000            	// #-2147483648
  44e0ac:	cmp	w8, w23
  44e0b0:	b.ls	44e0dc <feof@plt+0x4a83c>  // b.plast
  44e0b4:	cmp	w8, w20
  44e0b8:	b.ls	44e0dc <feof@plt+0x4a83c>  // b.plast
  44e0bc:	mov	x0, x19
  44e0c0:	mov	w1, w20
  44e0c4:	bl	44e220 <feof@plt+0x4a980>
  44e0c8:	ldrh	w8, [x0, #6]
  44e0cc:	lsr	x9, x8, #8
  44e0d0:	lsr	w8, w24, w9
  44e0d4:	lsr	w9, w8, w9
  44e0d8:	cbz	w9, 44e20c <feof@plt+0x4a96c>
  44e0dc:	cmp	w22, w20
  44e0e0:	b.ne	44e0f0 <feof@plt+0x4a850>  // b.any
  44e0e4:	cbnz	x21, 44e0f0 <feof@plt+0x4a850>
  44e0e8:	cmp	w22, w23
  44e0ec:	b.eq	44e1f0 <feof@plt+0x4a950>  // b.none
  44e0f0:	cbnz	x21, 44e100 <feof@plt+0x4a860>
  44e0f4:	ldr	w8, [x19, #128]
  44e0f8:	add	w8, w8, #0x1
  44e0fc:	str	w8, [x19, #128]
  44e100:	stp	w22, w20, [sp, #8]
  44e104:	str	w23, [sp, #16]
  44e108:	str	x21, [sp, #24]
  44e10c:	ldr	x0, [x19, #88]
  44e110:	add	x1, sp, #0x8
  44e114:	mov	w2, #0x1                   	// #1
  44e118:	bl	47ab30 <feof@plt+0x77290>
  44e11c:	ldr	x8, [x0]
  44e120:	cbnz	x8, 44e1d4 <feof@plt+0x4a934>
  44e124:	ldp	w8, w9, [x19, #96]
  44e128:	mov	x20, x0
  44e12c:	cmp	w8, w9
  44e130:	b.cc	44e1a0 <feof@plt+0x4a900>  // b.lo, b.ul, b.last
  44e134:	ldr	x8, [x19, #72]
  44e138:	ldr	x21, [x19, #104]
  44e13c:	adrp	x10, 47d000 <_obstack_memory_used@@Base+0x12fc>
  44e140:	add	x10, x10, #0x11c
  44e144:	cmp	x8, #0x0
  44e148:	lsl	w11, w9, #1
  44e14c:	mov	w12, #0x80                  	// #128
  44e150:	csel	x8, x10, x8, eq  // eq = none
  44e154:	cmp	w9, #0x0
  44e158:	mov	w13, #0x18                  	// #24
  44e15c:	csel	w9, w12, w11, eq  // eq = none
  44e160:	umull	x1, w9, w13
  44e164:	mov	x0, x21
  44e168:	str	w9, [x19, #100]
  44e16c:	blr	x8
  44e170:	sub	x8, x0, x21
  44e174:	str	x0, [x19, #104]
  44e178:	str	x8, [sp]
  44e17c:	ldr	w8, [x19, #100]
  44e180:	cmp	w8, #0x81
  44e184:	b.cc	44e19c <feof@plt+0x4a8fc>  // b.lo, b.ul, b.last
  44e188:	ldr	x0, [x19, #88]
  44e18c:	adrp	x1, 44e000 <feof@plt+0x4a760>
  44e190:	add	x1, x1, #0x3c0
  44e194:	mov	x2, sp
  44e198:	bl	47acfc <feof@plt+0x7745c>
  44e19c:	ldr	w8, [x19, #96]
  44e1a0:	ldr	x9, [x19, #104]
  44e1a4:	mov	w10, #0x18                  	// #24
  44e1a8:	add	w11, w8, #0x1
  44e1ac:	umaddl	x9, w8, w10, x9
  44e1b0:	str	x9, [x20]
  44e1b4:	str	w11, [x19, #96]
  44e1b8:	ldr	x9, [x19, #104]
  44e1bc:	ldr	x11, [sp, #24]
  44e1c0:	ldur	q0, [sp, #8]
  44e1c4:	umaddl	x8, w8, w10, x9
  44e1c8:	str	x11, [x8, #16]
  44e1cc:	str	q0, [x8]
  44e1d0:	ldr	x8, [x20]
  44e1d4:	ldr	x9, [x19, #104]
  44e1d8:	sub	x8, x8, x9
  44e1dc:	mov	w9, #0xaaab                	// #43691
  44e1e0:	lsr	x8, x8, #3
  44e1e4:	movk	w9, #0xaaaa, lsl #16
  44e1e8:	mul	w8, w8, w9
  44e1ec:	orr	w23, w8, #0x80000000
  44e1f0:	mov	w0, w23
  44e1f4:	ldp	x20, x19, [sp, #80]
  44e1f8:	ldp	x22, x21, [sp, #64]
  44e1fc:	ldp	x24, x23, [sp, #48]
  44e200:	ldp	x29, x30, [sp, #32]
  44e204:	add	sp, sp, #0x60
  44e208:	ret
  44e20c:	ldr	w9, [x19, #124]
  44e210:	orr	w23, w8, w20
  44e214:	add	w8, w9, #0x1
  44e218:	str	w8, [x19, #124]
  44e21c:	b	44e1f0 <feof@plt+0x4a950>
  44e220:	tbz	w1, #31, 44e23c <feof@plt+0x4a99c>
  44e224:	ldr	x8, [x0, #104]
  44e228:	and	w9, w1, #0x7fffffff
  44e22c:	mov	w10, #0x18                  	// #24
  44e230:	umull	x9, w9, w10
  44e234:	ldr	w1, [x8, x9]
  44e238:	tbnz	w1, #31, 44e330 <feof@plt+0x4aa90>
  44e23c:	mov	w8, wzr
  44e240:	mov	w9, w1
  44e244:	lsr	w10, w9, #28
  44e248:	cmp	w10, #0x7
  44e24c:	b.cc	44e270 <feof@plt+0x4a9d0>  // b.lo, b.ul, b.last
  44e250:	tbnz	w9, #31, 44e270 <feof@plt+0x4a9d0>
  44e254:	cbz	w8, 44e2bc <feof@plt+0x4aa1c>
  44e258:	ldr	x8, [x0, #104]
  44e25c:	and	w9, w1, #0x7fffffff
  44e260:	mov	w10, #0x18                  	// #24
  44e264:	umull	x9, w9, w10
  44e268:	ldr	w1, [x8, x9]
  44e26c:	b	44e2c0 <feof@plt+0x4aa20>
  44e270:	cbz	w8, 44e288 <feof@plt+0x4a9e8>
  44e274:	ldr	x8, [x0, #104]
  44e278:	and	w9, w1, #0x7fffffff
  44e27c:	mov	w10, #0x18                  	// #24
  44e280:	umull	x9, w9, w10
  44e284:	ldr	w1, [x8, x9]
  44e288:	mov	x8, xzr
  44e28c:	cbz	x0, 44e3b0 <feof@plt+0x4ab10>
  44e290:	cmp	w1, #0x2
  44e294:	b.cc	44e3b0 <feof@plt+0x4ab10>  // b.lo, b.ul, b.last
  44e298:	ldrsw	x10, [x0, #16]
  44e29c:	ldr	x9, [x0]
  44e2a0:	mov	w8, #0x18                  	// #24
  44e2a4:	madd	x8, x10, x8, x9
  44e2a8:	ldr	w11, [x8]
  44e2ac:	cmp	w1, w11
  44e2b0:	b.cs	44e348 <feof@plt+0x4aaa8>  // b.hs, b.nlast
  44e2b4:	mov	w11, wzr
  44e2b8:	b	44e36c <feof@plt+0x4aacc>
  44e2bc:	cbz	x0, 44e3b8 <feof@plt+0x4ab18>
  44e2c0:	ldrsw	x10, [x0, #40]
  44e2c4:	ldr	x9, [x0, #24]
  44e2c8:	add	x8, x9, x10, lsl #5
  44e2cc:	ldr	w11, [x8]
  44e2d0:	cmp	w1, w11
  44e2d4:	b.cs	44e2e0 <feof@plt+0x4aa40>  // b.hs, b.nlast
  44e2d8:	ldr	w8, [x0, #36]
  44e2dc:	b	44e318 <feof@plt+0x4aa78>
  44e2e0:	cbz	w10, 44e3b0 <feof@plt+0x4ab10>
  44e2e4:	ldur	w11, [x8, #-32]
  44e2e8:	cmp	w1, w11
  44e2ec:	b.cc	44e3b0 <feof@plt+0x4ab10>  // b.lo, b.ul, b.last
  44e2f0:	sub	w8, w10, #0x1
  44e2f4:	mov	w10, wzr
  44e2f8:	b	44e318 <feof@plt+0x4aa78>
  44e2fc:	add	w11, w10, w8
  44e300:	lsr	w11, w11, #1
  44e304:	lsl	x12, x11, #5
  44e308:	ldr	w12, [x9, x12]
  44e30c:	cmp	w12, w1
  44e310:	csinc	w10, w10, w11, ls  // ls = plast
  44e314:	csel	w8, w8, w11, hi  // hi = pmore
  44e318:	cmp	w10, w8
  44e31c:	b.cc	44e2fc <feof@plt+0x4aa5c>  // b.lo, b.ul, b.last
  44e320:	str	w8, [x0, #40]
  44e324:	sxtw	x8, w8
  44e328:	add	x0, x9, x8, lsl #5
  44e32c:	ret
  44e330:	and	x9, x1, #0x7fffffff
  44e334:	mov	w10, #0x18                  	// #24
  44e338:	mul	x9, x9, x10
  44e33c:	ldr	w9, [x8, x9]
  44e340:	mov	w8, #0x1                   	// #1
  44e344:	b	44e244 <feof@plt+0x4a9a4>
  44e348:	ldr	w12, [x0, #12]
  44e34c:	add	w11, w10, #0x1
  44e350:	cmp	w11, w12
  44e354:	b.eq	44e3b0 <feof@plt+0x4ab10>  // b.none
  44e358:	ldr	w11, [x8, #24]
  44e35c:	cmp	w1, w11
  44e360:	mov	w11, w10
  44e364:	mov	w10, w12
  44e368:	b.cc	44e3b0 <feof@plt+0x4ab10>  // b.lo, b.ul, b.last
  44e36c:	sub	w8, w10, w11
  44e370:	cmp	w8, #0x2
  44e374:	b.cc	44e3a4 <feof@plt+0x4ab04>  // b.lo, b.ul, b.last
  44e378:	mov	w8, #0x18                  	// #24
  44e37c:	add	w12, w11, w10
  44e380:	lsr	w12, w12, #1
  44e384:	umull	x13, w12, w8
  44e388:	ldr	w13, [x9, x13]
  44e38c:	cmp	w13, w1
  44e390:	csel	w11, w11, w12, hi  // hi = pmore
  44e394:	csel	w10, w12, w10, hi  // hi = pmore
  44e398:	sub	w12, w10, w11
  44e39c:	cmp	w12, #0x1
  44e3a0:	b.hi	44e37c <feof@plt+0x4aadc>  // b.pmore
  44e3a4:	mov	w8, #0x18                  	// #24
  44e3a8:	smaddl	x8, w11, w8, x9
  44e3ac:	str	w11, [x0, #16]
  44e3b0:	mov	x0, x8
  44e3b4:	ret
  44e3b8:	mov	x0, xzr
  44e3bc:	ret
  44e3c0:	ldr	x9, [x0]
  44e3c4:	ldr	x10, [x1]
  44e3c8:	mov	x8, x0
  44e3cc:	mov	w0, #0x1                   	// #1
  44e3d0:	add	x9, x10, x9
  44e3d4:	str	x9, [x8]
  44e3d8:	ret
  44e3dc:	ldr	x8, [x0, #104]
  44e3e0:	and	w9, w1, #0x7fffffff
  44e3e4:	mov	w10, #0x18                  	// #24
  44e3e8:	umaddl	x8, w9, w10, x8
  44e3ec:	ldr	x0, [x8, #16]
  44e3f0:	ret
  44e3f4:	ldr	x8, [x0, #104]
  44e3f8:	and	w9, w1, #0x7fffffff
  44e3fc:	mov	w10, #0x18                  	// #24
  44e400:	umull	x9, w9, w10
  44e404:	ldr	w0, [x8, x9]
  44e408:	ret
  44e40c:	stp	x29, x30, [sp, #-32]!
  44e410:	str	x19, [sp, #16]
  44e414:	mov	w19, w1
  44e418:	mov	x29, sp
  44e41c:	tbnz	w1, #31, 44e444 <feof@plt+0x4aba4>
  44e420:	cmp	w19, #0x2
  44e424:	b.cc	44e4a0 <feof@plt+0x4ac00>  // b.lo, b.ul, b.last
  44e428:	ldr	w8, [x0, #36]
  44e42c:	cbz	w8, 44e45c <feof@plt+0x4abbc>
  44e430:	ldr	x9, [x0, #24]
  44e434:	sub	w8, w8, #0x1
  44e438:	sbfiz	x8, x8, #5, #32
  44e43c:	ldr	w8, [x9, x8]
  44e440:	b	44e460 <feof@plt+0x4abc0>
  44e444:	ldr	x8, [x0, #104]
  44e448:	and	w9, w19, #0x7fffffff
  44e44c:	mov	w10, #0x18                  	// #24
  44e450:	umaddl	x8, w9, w10, x8
  44e454:	ldp	w19, w8, [x8, #4]
  44e458:	b	44e4a4 <feof@plt+0x4ac04>
  44e45c:	mov	w8, #0x80000000            	// #-2147483648
  44e460:	mov	w9, #0x50000000            	// #1342177280
  44e464:	cmp	w19, w9
  44e468:	b.hi	44e4a0 <feof@plt+0x4ac00>  // b.pmore
  44e46c:	cmp	w8, w19
  44e470:	b.ls	44e4a0 <feof@plt+0x4ac00>  // b.plast
  44e474:	mov	w1, w19
  44e478:	bl	44e220 <feof@plt+0x4a980>
  44e47c:	ldrh	w8, [x0, #6]
  44e480:	mov	w9, #0xffffffff            	// #-1
  44e484:	lsr	x8, x8, #8
  44e488:	lsl	w9, w9, w8
  44e48c:	bic	w9, w19, w9
  44e490:	sub	w19, w19, w9
  44e494:	lsl	w8, w9, w8
  44e498:	add	w8, w19, w8
  44e49c:	b	44e4a4 <feof@plt+0x4ac04>
  44e4a0:	mov	w8, w19
  44e4a4:	mov	w0, w19
  44e4a8:	ldr	x19, [sp, #16]
  44e4ac:	bfi	x0, x8, #32, #32
  44e4b0:	ldp	x29, x30, [sp], #32
  44e4b4:	ret
  44e4b8:	stp	x29, x30, [sp, #-32]!
  44e4bc:	str	x19, [sp, #16]
  44e4c0:	mov	x29, sp
  44e4c4:	tbnz	w1, #31, 44e4ec <feof@plt+0x4ac4c>
  44e4c8:	mov	w19, w1
  44e4cc:	bl	44e220 <feof@plt+0x4a980>
  44e4d0:	cbz	x0, 44e4f4 <feof@plt+0x4ac54>
  44e4d4:	ldrb	w8, [x0, #7]
  44e4d8:	mov	w9, #0xffffffff            	// #-1
  44e4dc:	lsl	w8, w9, w8
  44e4e0:	bics	wzr, w19, w8
  44e4e4:	cset	w0, eq  // eq = none
  44e4e8:	b	44e4f8 <feof@plt+0x4ac58>
  44e4ec:	mov	w0, wzr
  44e4f0:	b	44e4f8 <feof@plt+0x4ac58>
  44e4f4:	mov	w0, #0x1                   	// #1
  44e4f8:	ldr	x19, [sp, #16]
  44e4fc:	ldp	x29, x30, [sp], #32
  44e500:	ret
  44e504:	stp	x29, x30, [sp, #-32]!
  44e508:	str	x19, [sp, #16]
  44e50c:	mov	w19, w1
  44e510:	mov	x29, sp
  44e514:	tbnz	w1, #31, 44e53c <feof@plt+0x4ac9c>
  44e518:	ldr	w8, [x0, #36]
  44e51c:	cbz	w8, 44e558 <feof@plt+0x4acb8>
  44e520:	ldr	x9, [x0, #24]
  44e524:	sub	w8, w8, #0x1
  44e528:	sbfiz	x8, x8, #5, #32
  44e52c:	ldr	w8, [x9, x8]
  44e530:	cmp	w19, #0x2
  44e534:	b.cs	44e564 <feof@plt+0x4acc4>  // b.hs, b.nlast
  44e538:	b	44e584 <feof@plt+0x4ace4>
  44e53c:	ldr	x8, [x0, #104]
  44e540:	and	w9, w19, #0x7fffffff
  44e544:	mov	w10, #0x18                  	// #24
  44e548:	umull	x9, w9, w10
  44e54c:	ldr	w19, [x8, x9]
  44e550:	ldr	w8, [x0, #36]
  44e554:	cbnz	w8, 44e520 <feof@plt+0x4ac80>
  44e558:	mov	w8, #0x80000000            	// #-2147483648
  44e55c:	cmp	w19, #0x2
  44e560:	b.cc	44e584 <feof@plt+0x4ace4>  // b.lo, b.ul, b.last
  44e564:	cmp	w19, w8
  44e568:	b.cs	44e584 <feof@plt+0x4ace4>  // b.hs, b.nlast
  44e56c:	mov	w1, w19
  44e570:	bl	44e220 <feof@plt+0x4a980>
  44e574:	ldrb	w8, [x0, #7]
  44e578:	mov	w9, #0xffffffff            	// #-1
  44e57c:	lsl	w8, w9, w8
  44e580:	and	w19, w8, w19
  44e584:	mov	w0, w19
  44e588:	ldr	x19, [sp, #16]
  44e58c:	ldp	x29, x30, [sp], #32
  44e590:	ret
  44e594:	stp	x29, x30, [sp, #-32]!
  44e598:	movi	v0.2d, #0x0
  44e59c:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  44e5a0:	stp	x20, x19, [sp, #16]
  44e5a4:	mov	w19, w1
  44e5a8:	add	x8, x8, #0x11c
  44e5ac:	stp	q0, q0, [x0, #96]
  44e5b0:	stp	q0, q0, [x0, #64]
  44e5b4:	stp	q0, q0, [x0, #32]
  44e5b8:	stp	q0, q0, [x0]
  44e5bc:	movi	v0.2s, #0x1
  44e5c0:	adrp	x1, 44d000 <feof@plt+0x49760>
  44e5c4:	adrp	x2, 44d000 <feof@plt+0x49760>
  44e5c8:	mov	x20, x0
  44e5cc:	str	xzr, [x0, #128]
  44e5d0:	str	x8, [x0, #72]
  44e5d4:	str	d0, [x0, #56]
  44e5d8:	add	x1, x1, #0xf98
  44e5dc:	add	x2, x2, #0xfb4
  44e5e0:	mov	w0, #0x64                  	// #100
  44e5e4:	mov	x3, xzr
  44e5e8:	mov	x29, sp
  44e5ec:	bl	47a238 <feof@plt+0x76998>
  44e5f0:	str	x0, [x20, #88]
  44e5f4:	str	w19, [x20, #112]
  44e5f8:	ldp	x20, x19, [sp, #16]
  44e5fc:	ldp	x29, x30, [sp], #32
  44e600:	ret
  44e604:	ldr	w9, [x1, #20]
  44e608:	tbz	w9, #31, 44e620 <feof@plt+0x4ad80>
  44e60c:	ldr	x8, [x0, #104]
  44e610:	and	x9, x9, #0x7fffffff
  44e614:	mov	w10, #0x18                  	// #24
  44e618:	mul	x9, x9, x10
  44e61c:	ldr	w9, [x8, x9]
  44e620:	mov	x8, xzr
  44e624:	cbz	x0, 44e6bc <feof@plt+0x4ae1c>
  44e628:	cmp	w9, #0x2
  44e62c:	b.cc	44e6bc <feof@plt+0x4ae1c>  // b.lo, b.ul, b.last
  44e630:	ldrsw	x11, [x0, #16]
  44e634:	ldr	x10, [x0]
  44e638:	mov	w8, #0x18                  	// #24
  44e63c:	madd	x8, x11, x8, x10
  44e640:	ldr	w12, [x8]
  44e644:	cmp	w9, w12
  44e648:	b.cs	44e654 <feof@plt+0x4adb4>  // b.hs, b.nlast
  44e64c:	mov	w12, wzr
  44e650:	b	44e678 <feof@plt+0x4add8>
  44e654:	ldr	w13, [x0, #12]
  44e658:	add	w12, w11, #0x1
  44e65c:	cmp	w12, w13
  44e660:	b.eq	44e6bc <feof@plt+0x4ae1c>  // b.none
  44e664:	ldr	w12, [x8, #24]
  44e668:	cmp	w9, w12
  44e66c:	mov	w12, w11
  44e670:	mov	w11, w13
  44e674:	b.cc	44e6bc <feof@plt+0x4ae1c>  // b.lo, b.ul, b.last
  44e678:	sub	w8, w11, w12
  44e67c:	cmp	w8, #0x2
  44e680:	b.cc	44e6b0 <feof@plt+0x4ae10>  // b.lo, b.ul, b.last
  44e684:	mov	w8, #0x18                  	// #24
  44e688:	add	w13, w12, w11
  44e68c:	lsr	w13, w13, #1
  44e690:	umull	x14, w13, w8
  44e694:	ldr	w14, [x10, x14]
  44e698:	cmp	w14, w9
  44e69c:	csel	w12, w12, w13, hi  // hi = pmore
  44e6a0:	csel	w11, w13, w11, hi  // hi = pmore
  44e6a4:	sub	w13, w11, w12
  44e6a8:	cmp	w13, #0x1
  44e6ac:	b.hi	44e688 <feof@plt+0x4ade8>  // b.pmore
  44e6b0:	mov	w8, #0x18                  	// #24
  44e6b4:	smaddl	x8, w12, w8, x10
  44e6b8:	str	w12, [x0, #16]
  44e6bc:	mov	x0, x8
  44e6c0:	ret
  44e6c4:	stp	x29, x30, [sp, #-64]!
  44e6c8:	stp	x22, x21, [sp, #32]
  44e6cc:	stp	x20, x19, [sp, #48]
  44e6d0:	ldr	w8, [x0, #12]
  44e6d4:	ldr	x9, [x0]
  44e6d8:	mov	w21, #0x18                  	// #24
  44e6dc:	str	x23, [sp, #16]
  44e6e0:	sub	w8, w8, #0x1
  44e6e4:	smaddl	x11, w8, w21, x9
  44e6e8:	mov	x23, x11
  44e6ec:	ldr	w8, [x23, #20]!
  44e6f0:	mov	x29, sp
  44e6f4:	cbnz	w8, 44e70c <feof@plt+0x4ae6c>
  44e6f8:	ldp	x20, x19, [sp, #48]
  44e6fc:	ldp	x22, x21, [sp, #32]
  44e700:	ldr	x23, [sp, #16]
  44e704:	ldp	x29, x30, [sp], #64
  44e708:	ret
  44e70c:	adrp	x20, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44e710:	mov	x19, x0
  44e714:	adrp	x22, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  44e718:	add	x20, x20, #0xe3c
  44e71c:	ldr	x0, [x22, #1096]
  44e720:	ldr	x2, [x11, #8]
  44e724:	mov	x1, x20
  44e728:	bl	4030d0 <fprintf@plt>
  44e72c:	ldr	w8, [x23]
  44e730:	tbz	w8, #31, 44e744 <feof@plt+0x4aea4>
  44e734:	ldr	x9, [x19, #104]
  44e738:	and	x8, x8, #0x7fffffff
  44e73c:	mul	x8, x8, x21
  44e740:	ldr	w8, [x9, x8]
  44e744:	cmp	w8, #0x2
  44e748:	b.cs	44e754 <feof@plt+0x4aeb4>  // b.hs, b.nlast
  44e74c:	mov	x11, xzr
  44e750:	b	44e7d4 <feof@plt+0x4af34>
  44e754:	ldrsw	x10, [x19, #16]
  44e758:	ldr	x9, [x19]
  44e75c:	madd	x11, x10, x21, x9
  44e760:	ldr	w12, [x11]
  44e764:	cmp	w8, w12
  44e768:	b.cs	44e774 <feof@plt+0x4aed4>  // b.hs, b.nlast
  44e76c:	mov	w12, wzr
  44e770:	b	44e798 <feof@plt+0x4aef8>
  44e774:	ldr	w13, [x19, #12]
  44e778:	add	w12, w10, #0x1
  44e77c:	cmp	w12, w13
  44e780:	b.eq	44e7d4 <feof@plt+0x4af34>  // b.none
  44e784:	ldr	w12, [x11, #24]
  44e788:	cmp	w8, w12
  44e78c:	mov	w12, w10
  44e790:	mov	w10, w13
  44e794:	b.cc	44e7d4 <feof@plt+0x4af34>  // b.lo, b.ul, b.last
  44e798:	sub	w11, w10, w12
  44e79c:	cmp	w11, #0x2
  44e7a0:	b.cc	44e7cc <feof@plt+0x4af2c>  // b.lo, b.ul, b.last
  44e7a4:	add	w11, w12, w10
  44e7a8:	lsr	w11, w11, #1
  44e7ac:	umull	x13, w11, w21
  44e7b0:	ldr	w13, [x9, x13]
  44e7b4:	cmp	w13, w8
  44e7b8:	csel	w12, w12, w11, hi  // hi = pmore
  44e7bc:	csel	w10, w11, w10, hi  // hi = pmore
  44e7c0:	sub	w11, w10, w12
  44e7c4:	cmp	w11, #0x1
  44e7c8:	b.hi	44e7a4 <feof@plt+0x4af04>  // b.pmore
  44e7cc:	smaddl	x11, w12, w21, x9
  44e7d0:	str	w12, [x19, #16]
  44e7d4:	mov	x23, x11
  44e7d8:	ldr	w8, [x23, #20]!
  44e7dc:	cbz	w8, 44e6f8 <feof@plt+0x4ae58>
  44e7e0:	b	44e71c <feof@plt+0x4ae7c>
  44e7e4:	stp	x29, x30, [sp, #-96]!
  44e7e8:	stp	x28, x27, [sp, #16]
  44e7ec:	stp	x26, x25, [sp, #32]
  44e7f0:	stp	x24, x23, [sp, #48]
  44e7f4:	stp	x22, x21, [sp, #64]
  44e7f8:	stp	x20, x19, [sp, #80]
  44e7fc:	ldr	w8, [x0, #56]
  44e800:	mov	w21, w4
  44e804:	mov	x24, x3
  44e808:	mov	w22, w2
  44e80c:	lsr	w9, w8, #29
  44e810:	mov	x19, x0
  44e814:	cmp	w9, #0x2
  44e818:	mov	w23, w1
  44e81c:	mov	x29, sp
  44e820:	b.hi	44e844 <feof@plt+0x4afa4>  // b.pmore
  44e824:	ldr	w10, [x19, #120]
  44e828:	mov	w9, #0x1                   	// #1
  44e82c:	lsl	w9, w9, w10
  44e830:	add	w8, w9, w8
  44e834:	cbz	w10, 44e848 <feof@plt+0x4afa8>
  44e838:	neg	w9, w9
  44e83c:	and	w8, w8, w9
  44e840:	b	44e848 <feof@plt+0x4afa8>
  44e844:	add	w8, w8, #0x1
  44e848:	ldr	w26, [x19, #12]
  44e84c:	cmp	w23, #0x1
  44e850:	b.ne	44e884 <feof@plt+0x4afe4>  // b.any
  44e854:	cbnz	x24, 44e884 <feof@plt+0x4afe4>
  44e858:	ldr	x9, [x19]
  44e85c:	sub	w10, w26, #0x1
  44e860:	mov	w11, #0x18                  	// #24
  44e864:	smaddl	x9, w10, w11, x9
  44e868:	ldr	w9, [x9, #20]
  44e86c:	cbnz	w9, 44e884 <feof@plt+0x4afe4>
  44e870:	ldr	w8, [x19, #48]
  44e874:	mov	x20, xzr
  44e878:	sub	w8, w8, #0x1
  44e87c:	str	w8, [x19, #48]
  44e880:	b	44eaf8 <feof@plt+0x4b258>
  44e884:	ldr	w9, [x19, #8]
  44e888:	lsr	w10, w8, #28
  44e88c:	cmp	w10, #0x6
  44e890:	csel	w25, wzr, w8, hi  // hi = pmore
  44e894:	cmp	w26, w9
  44e898:	b.ne	44e910 <feof@plt+0x4b070>  // b.any
  44e89c:	ldr	x10, [x19, #80]
  44e8a0:	lsl	w8, w26, #1
  44e8a4:	cmp	w26, #0x0
  44e8a8:	mov	w9, #0x100                 	// #256
  44e8ac:	ldr	x20, [x19]
  44e8b0:	csel	w8, w9, w8, eq  // eq = none
  44e8b4:	mov	w27, #0x18                  	// #24
  44e8b8:	umull	x0, w8, w27
  44e8bc:	blr	x10
  44e8c0:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44e8c4:	movk	x8, #0xaaab
  44e8c8:	ldr	x9, [x19, #72]
  44e8cc:	umulh	x8, x0, x8
  44e8d0:	lsr	x28, x8, #4
  44e8d4:	ubfx	x8, x8, #4, #32
  44e8d8:	add	x8, x8, w28, uxtw #1
  44e8dc:	lsl	x1, x8, #3
  44e8e0:	mov	x0, x20
  44e8e4:	blr	x9
  44e8e8:	sub	w8, w28, w26
  44e8ec:	mov	x20, x0
  44e8f0:	madd	x0, x26, x27, x0
  44e8f4:	umull	x2, w8, w27
  44e8f8:	mov	w1, wzr
  44e8fc:	bl	4031f0 <memset@plt>
  44e900:	ldr	w8, [x19, #12]
  44e904:	str	x20, [x19]
  44e908:	str	w28, [x19, #8]
  44e90c:	b	44e918 <feof@plt+0x4b078>
  44e910:	ldr	x20, [x19]
  44e914:	mov	w8, w26
  44e918:	mov	w9, #0x18                  	// #24
  44e91c:	add	w8, w8, #0x1
  44e920:	madd	x20, x26, x9, x20
  44e924:	str	w8, [x19, #12]
  44e928:	str	w25, [x20]
  44e92c:	strb	w23, [x20, #4]
  44e930:	cbz	x24, 44e950 <feof@plt+0x4b0b0>
  44e934:	ldrb	w8, [x24]
  44e938:	cmp	w8, #0x0
  44e93c:	adrp	x8, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44e940:	ccmp	w23, #0x3, #0x4, eq  // eq = none
  44e944:	add	x8, x8, #0xe68
  44e948:	csel	x2, x8, x24, ne  // ne = any
  44e94c:	b	44e954 <feof@plt+0x4b0b4>
  44e950:	mov	x2, xzr
  44e954:	cmp	w23, #0x3
  44e958:	mov	w8, #0x2                   	// #2
  44e95c:	csel	w8, w8, w23, eq  // eq = none
  44e960:	cmp	w8, #0x1
  44e964:	b.ne	44e980 <feof@plt+0x4b0e0>  // b.any
  44e968:	ldur	w10, [x20, #-4]
  44e96c:	tbnz	w10, #31, 44e988 <feof@plt+0x4b0e8>
  44e970:	cmp	w10, #0x2
  44e974:	b.cs	44e9a4 <feof@plt+0x4b104>  // b.hs, b.nlast
  44e978:	mov	x9, xzr
  44e97c:	b	44ea30 <feof@plt+0x4b190>
  44e980:	mov	x9, xzr
  44e984:	b	44ea58 <feof@plt+0x4b1b8>
  44e988:	ldr	x9, [x19, #104]
  44e98c:	and	x10, x10, #0x7fffffff
  44e990:	mov	w11, #0x18                  	// #24
  44e994:	mul	x10, x10, x11
  44e998:	ldr	w10, [x9, x10]
  44e99c:	cmp	w10, #0x2
  44e9a0:	b.cc	44e978 <feof@plt+0x4b0d8>  // b.lo, b.ul, b.last
  44e9a4:	ldrsw	x12, [x19, #16]
  44e9a8:	ldr	x11, [x19]
  44e9ac:	mov	w9, #0x18                  	// #24
  44e9b0:	madd	x9, x12, x9, x11
  44e9b4:	ldr	w13, [x9]
  44e9b8:	cmp	w10, w13
  44e9bc:	b.cs	44ea0c <feof@plt+0x4b16c>  // b.hs, b.nlast
  44e9c0:	mov	w13, wzr
  44e9c4:	sub	w9, w12, w13
  44e9c8:	cmp	w9, #0x2
  44e9cc:	b.cc	44e9fc <feof@plt+0x4b15c>  // b.lo, b.ul, b.last
  44e9d0:	mov	w9, #0x18                  	// #24
  44e9d4:	add	w14, w13, w12
  44e9d8:	lsr	w14, w14, #1
  44e9dc:	umull	x15, w14, w9
  44e9e0:	ldr	w15, [x11, x15]
  44e9e4:	cmp	w15, w10
  44e9e8:	csel	w13, w13, w14, hi  // hi = pmore
  44e9ec:	csel	w12, w14, w12, hi  // hi = pmore
  44e9f0:	sub	w14, w12, w13
  44e9f4:	cmp	w14, #0x1
  44e9f8:	b.hi	44e9d4 <feof@plt+0x4b134>  // b.pmore
  44e9fc:	mov	w9, #0x18                  	// #24
  44ea00:	smaddl	x9, w13, w9, x11
  44ea04:	str	w13, [x19, #16]
  44ea08:	b	44ea30 <feof@plt+0x4b190>
  44ea0c:	ldr	w14, [x19, #12]
  44ea10:	add	w13, w12, #0x1
  44ea14:	cmp	w13, w14
  44ea18:	b.eq	44ea30 <feof@plt+0x4b190>  // b.none
  44ea1c:	ldr	w13, [x9, #24]
  44ea20:	cmp	w10, w13
  44ea24:	mov	w13, w12
  44ea28:	mov	w12, w14
  44ea2c:	b.cs	44e9c4 <feof@plt+0x4b124>  // b.hs, b.nlast
  44ea30:	cbnz	x2, 44ea58 <feof@plt+0x4b1b8>
  44ea34:	ldr	w10, [x9, #24]
  44ea38:	ldr	w11, [x9]
  44ea3c:	ldrb	w12, [x9, #6]
  44ea40:	ldr	w13, [x9, #16]
  44ea44:	ldr	x2, [x9, #8]
  44ea48:	ldrb	w22, [x9, #5]
  44ea4c:	sub	w10, w10, w11
  44ea50:	lsr	w10, w10, w12
  44ea54:	add	w21, w10, w13
  44ea58:	strb	w22, [x20, #5]
  44ea5c:	str	x2, [x20, #8]
  44ea60:	str	w21, [x20, #16]
  44ea64:	ldr	w10, [x19, #12]
  44ea68:	cmp	w8, #0x2
  44ea6c:	sub	w10, w10, #0x1
  44ea70:	str	w10, [x19, #16]
  44ea74:	strh	wzr, [x20, #6]
  44ea78:	stp	w25, w25, [x19, #56]
  44ea7c:	str	wzr, [x19, #64]
  44ea80:	b.eq	44eab8 <feof@plt+0x4b218>  // b.none
  44ea84:	cbnz	w8, 44eac0 <feof@plt+0x4b220>
  44ea88:	ldr	w21, [x19, #48]
  44ea8c:	cbz	w21, 44eae0 <feof@plt+0x4b240>
  44ea90:	ldur	w8, [x20, #-24]
  44ea94:	ldr	w9, [x20]
  44ea98:	ldurb	w10, [x20, #-18]
  44ea9c:	mov	w11, #0xffffffff            	// #-1
  44eaa0:	mvn	w12, w8
  44eaa4:	add	w9, w9, w12
  44eaa8:	lsl	w10, w11, w10
  44eaac:	and	w9, w10, w9
  44eab0:	add	w8, w9, w8
  44eab4:	b	44eae4 <feof@plt+0x4b244>
  44eab8:	ldur	w8, [x20, #-4]
  44eabc:	b	44ead8 <feof@plt+0x4b238>
  44eac0:	cmp	w8, #0x1
  44eac4:	b.ne	44eaf8 <feof@plt+0x4b258>  // b.any
  44eac8:	ldr	w8, [x19, #48]
  44eacc:	sub	w8, w8, #0x1
  44ead0:	str	w8, [x19, #48]
  44ead4:	ldr	w8, [x9, #20]
  44ead8:	str	w8, [x20, #20]
  44eadc:	b	44eaf8 <feof@plt+0x4b258>
  44eae0:	mov	w8, wzr
  44eae4:	str	w8, [x20, #20]
  44eae8:	ldrb	w8, [x19, #52]
  44eaec:	add	w9, w21, #0x1
  44eaf0:	str	w9, [x19, #48]
  44eaf4:	cbnz	w8, 44eb18 <feof@plt+0x4b278>
  44eaf8:	mov	x0, x20
  44eafc:	ldp	x20, x19, [sp, #80]
  44eb00:	ldp	x22, x21, [sp, #64]
  44eb04:	ldp	x24, x23, [sp, #48]
  44eb08:	ldp	x26, x25, [sp, #32]
  44eb0c:	ldp	x28, x27, [sp, #16]
  44eb10:	ldp	x29, x30, [sp], #96
  44eb14:	ret
  44eb18:	adrp	x19, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  44eb1c:	ldr	x0, [x19, #1096]
  44eb20:	cbz	w21, 44eb60 <feof@plt+0x4b2c0>
  44eb24:	mov	w22, #0x2e                  	// #46
  44eb28:	ldp	x8, x9, [x0, #40]
  44eb2c:	cmp	x8, x9
  44eb30:	b.cs	44eb50 <feof@plt+0x4b2b0>  // b.hs, b.nlast
  44eb34:	add	x9, x8, #0x1
  44eb38:	str	x9, [x0, #40]
  44eb3c:	strb	w22, [x8]
  44eb40:	ldr	x0, [x19, #1096]
  44eb44:	subs	w21, w21, #0x1
  44eb48:	b.ne	44eb28 <feof@plt+0x4b288>  // b.any
  44eb4c:	b	44eb5c <feof@plt+0x4b2bc>
  44eb50:	mov	w1, #0x2e                  	// #46
  44eb54:	bl	403140 <__overflow@plt>
  44eb58:	b	44eb40 <feof@plt+0x4b2a0>
  44eb5c:	ldr	x2, [x20, #8]
  44eb60:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  44eb64:	add	x1, x1, #0x466
  44eb68:	bl	4030d0 <fprintf@plt>
  44eb6c:	b	44eaf8 <feof@plt+0x4b258>
  44eb70:	ldr	x8, [x0, #24]
  44eb74:	cmp	x8, #0x0
  44eb78:	cset	w0, ne  // ne = any
  44eb7c:	ret
  44eb80:	stp	x29, x30, [sp, #-80]!
  44eb84:	stp	x26, x25, [sp, #16]
  44eb88:	stp	x24, x23, [sp, #32]
  44eb8c:	stp	x22, x21, [sp, #48]
  44eb90:	stp	x20, x19, [sp, #64]
  44eb94:	ldr	w24, [x0, #36]
  44eb98:	mov	w21, w3
  44eb9c:	mov	w20, w2
  44eba0:	mov	x19, x0
  44eba4:	mov	x22, x1
  44eba8:	mov	x29, sp
  44ebac:	cbz	w24, 44ebc4 <feof@plt+0x4b324>
  44ebb0:	ldr	x8, [x19, #24]
  44ebb4:	sub	w9, w24, #0x1
  44ebb8:	sbfiz	x9, x9, #5, #32
  44ebbc:	ldr	w8, [x8, x9]
  44ebc0:	b	44ebc8 <feof@plt+0x4b328>
  44ebc4:	mov	w8, #0x80000000            	// #-2147483648
  44ebc8:	sub	w25, w8, w21
  44ebcc:	lsr	w8, w25, #28
  44ebd0:	cmp	w8, #0x7
  44ebd4:	b.cs	44ebe0 <feof@plt+0x4b340>  // b.hs, b.nlast
  44ebd8:	mov	x23, xzr
  44ebdc:	b	44ec9c <feof@plt+0x4b3fc>
  44ebe0:	ldr	w8, [x19, #32]
  44ebe4:	cmp	w24, w8
  44ebe8:	b.ne	44ec48 <feof@plt+0x4b3a8>  // b.any
  44ebec:	ldr	x9, [x19, #80]
  44ebf0:	lsl	w8, w24, #1
  44ebf4:	cmp	w24, #0x0
  44ebf8:	ldr	x23, [x19, #24]
  44ebfc:	mov	w10, #0x100                 	// #256
  44ec00:	csel	w8, w10, w8, eq  // eq = none
  44ec04:	lsl	x0, x8, #5
  44ec08:	blr	x9
  44ec0c:	ldr	x8, [x19, #72]
  44ec10:	lsr	x26, x0, #5
  44ec14:	and	x1, x0, #0x1fffffffe0
  44ec18:	mov	x0, x23
  44ec1c:	blr	x8
  44ec20:	sub	w8, w26, w24
  44ec24:	mov	x23, x0
  44ec28:	add	x0, x0, x24, lsl #5
  44ec2c:	lsl	x2, x8, #5
  44ec30:	mov	w1, wzr
  44ec34:	bl	4031f0 <memset@plt>
  44ec38:	ldr	w8, [x19, #36]
  44ec3c:	str	x23, [x19, #24]
  44ec40:	str	w26, [x19, #32]
  44ec44:	b	44ec50 <feof@plt+0x4b3b0>
  44ec48:	ldr	x23, [x19, #24]
  44ec4c:	mov	w8, w24
  44ec50:	add	x23, x23, x24, lsl #5
  44ec54:	add	w8, w8, #0x1
  44ec58:	str	w8, [x19, #36]
  44ec5c:	str	x22, [x23, #8]
  44ec60:	stp	w25, w21, [x23]
  44ec64:	ldr	x8, [x19, #72]
  44ec68:	lsl	w9, w21, #1
  44ec6c:	lsl	x21, x9, #2
  44ec70:	mov	x0, xzr
  44ec74:	mov	x1, x21
  44ec78:	blr	x8
  44ec7c:	mov	w1, wzr
  44ec80:	mov	x2, x21
  44ec84:	str	x0, [x23, #16]
  44ec88:	str	w20, [x23, #24]
  44ec8c:	bl	4031f0 <memset@plt>
  44ec90:	ldr	w8, [x19, #36]
  44ec94:	sub	w8, w8, #0x1
  44ec98:	str	w8, [x19, #40]
  44ec9c:	mov	x0, x23
  44eca0:	ldp	x20, x19, [sp, #64]
  44eca4:	ldp	x22, x21, [sp, #48]
  44eca8:	ldp	x24, x23, [sp, #32]
  44ecac:	ldp	x26, x25, [sp, #16]
  44ecb0:	ldp	x29, x30, [sp], #80
  44ecb4:	ret
  44ecb8:	ldr	x8, [x0, #16]
  44ecbc:	mov	w10, #0x1                   	// #1
  44ecc0:	lsl	w9, w1, #1
  44ecc4:	bfi	w10, w1, #1, #31
  44ecc8:	str	w2, [x8, w9, uxtw #2]
  44eccc:	str	w3, [x8, w10, uxtw #2]
  44ecd0:	ldr	w8, [x0]
  44ecd4:	add	w0, w8, w1
  44ecd8:	ret
  44ecdc:	stp	x29, x30, [sp, #-64]!
  44ece0:	stp	x24, x23, [sp, #16]
  44ece4:	stp	x22, x21, [sp, #32]
  44ece8:	stp	x20, x19, [sp, #48]
  44ecec:	ldr	w9, [x0, #12]
  44ecf0:	ldr	x11, [x0]
  44ecf4:	mov	w12, #0x18                  	// #24
  44ecf8:	mov	x19, x0
  44ecfc:	sub	w9, w9, #0x1
  44ed00:	ldp	w10, w8, [x0, #56]
  44ed04:	smaddl	x0, w9, w12, x11
  44ed08:	ldr	w13, [x0]
  44ed0c:	ldrh	w16, [x0, #6]
  44ed10:	ldr	w9, [x0, #16]
  44ed14:	mov	w20, w1
  44ed18:	sub	w11, w8, w13
  44ed1c:	lsr	w15, w11, w16
  44ed20:	sub	w9, w1, w9
  44ed24:	mov	w21, #0x6fffffff            	// #1879048191
  44ed28:	and	w12, w16, #0xff
  44ed2c:	sub	w14, w9, w15
  44ed30:	lsr	w11, w16, #8
  44ed34:	mov	x29, sp
  44ed38:	tbnz	w14, #31, 44ed8c <feof@plt+0x4b4ec>
  44ed3c:	cmp	w14, #0xb
  44ed40:	mul	w1, w14, w12
  44ed44:	sub	w17, w12, w11
  44ed48:	cset	w18, lt  // lt = tstop
  44ed4c:	cmp	w1, #0x3e9
  44ed50:	lsr	w3, w2, w17
  44ed54:	cset	w1, lt  // lt = tstop
  44ed58:	cbnz	w3, 44ed8c <feof@plt+0x4b4ec>
  44ed5c:	orr	w18, w18, w1
  44ed60:	cbz	w18, 44ed8c <feof@plt+0x4b4ec>
  44ed64:	cmp	w2, #0x50
  44ed68:	b.hi	44ed74 <feof@plt+0x4b4d4>  // b.pmore
  44ed6c:	cmp	w17, #0x9
  44ed70:	b.gt	44ed8c <feof@plt+0x4b4ec>
  44ed74:	mov	w17, #0x1                   	// #1
  44ed78:	movk	w17, #0x5000, lsl #16
  44ed7c:	cmp	w10, w17
  44ed80:	b.cc	44edfc <feof@plt+0x4b55c>  // b.lo, b.ul, b.last
  44ed84:	cmp	w16, #0xff
  44ed88:	b.ls	44eddc <feof@plt+0x4b53c>  // b.plast
  44ed8c:	cmp	w2, #0x1, lsl #12
  44ed90:	b.hi	44ee08 <feof@plt+0x4b568>  // b.pmore
  44ed94:	mov	w8, #0x1                   	// #1
  44ed98:	movk	w8, #0x6000, lsl #16
  44ed9c:	cmp	w10, w8
  44eda0:	b.cs	44ee08 <feof@plt+0x4b568>  // b.hs, b.nlast
  44eda4:	mov	w8, #0x50000000            	// #1342177280
  44eda8:	cmp	w10, w8
  44edac:	b.hi	44edb8 <feof@plt+0x4b518>  // b.pmore
  44edb0:	ldr	w23, [x19, #120]
  44edb4:	b	44edbc <feof@plt+0x4b51c>
  44edb8:	mov	w23, wzr
  44edbc:	mov	w8, #0x6                   	// #6
  44edc0:	mov	w16, #0x1                   	// #1
  44edc4:	add	w8, w8, #0x1
  44edc8:	lsl	w22, w16, w8
  44edcc:	cmp	w22, w2
  44edd0:	b.ls	44edc4 <feof@plt+0x4b524>  // b.plast
  44edd4:	add	w24, w23, w8
  44edd8:	b	44ee20 <feof@plt+0x4b580>
  44eddc:	mov	w16, #0x1                   	// #1
  44ede0:	movk	w16, #0x6000, lsl #16
  44ede4:	cmp	w10, w16
  44ede8:	b.cc	44edfc <feof@plt+0x4b55c>  // b.lo, b.ul, b.last
  44edec:	cmp	w10, w21
  44edf0:	b.hi	44ee08 <feof@plt+0x4b568>  // b.pmore
  44edf4:	ldr	w16, [x19, #64]
  44edf8:	cbnz	w16, 44ee08 <feof@plt+0x4b568>
  44edfc:	ldr	w22, [x19, #64]
  44ee00:	lsl	w9, w14, w12
  44ee04:	b	44ee7c <feof@plt+0x4b5dc>
  44ee08:	mov	w22, wzr
  44ee0c:	mov	w24, wzr
  44ee10:	mov	w23, wzr
  44ee14:	cmp	w10, w21
  44ee18:	mov	w8, wzr
  44ee1c:	b.hi	44eea8 <feof@plt+0x4b608>  // b.pmore
  44ee20:	cbnz	w15, 44ee48 <feof@plt+0x4b5a8>
  44ee24:	tbnz	w14, #31, 44ee48 <feof@plt+0x4b5a8>
  44ee28:	sub	w8, w10, w13
  44ee2c:	mov	w10, #0xffffffff            	// #-1
  44ee30:	lsl	w10, w10, w12
  44ee34:	bic	w8, w8, w10
  44ee38:	lsr	w8, w8, w11
  44ee3c:	sub	w10, w24, w23
  44ee40:	lsr	w8, w8, w10
  44ee44:	cbz	w8, 44eec0 <feof@plt+0x4b620>
  44ee48:	ldrb	w2, [x0, #5]
  44ee4c:	ldr	x3, [x0, #8]
  44ee50:	mov	w1, #0x2                   	// #2
  44ee54:	mov	x0, x19
  44ee58:	mov	w4, w20
  44ee5c:	bl	44e7e4 <feof@plt+0x4af44>
  44ee60:	ldr	w10, [x0, #16]
  44ee64:	mov	w9, w24
  44ee68:	ldr	w8, [x0]
  44ee6c:	bfi	w9, w23, #8, #24
  44ee70:	strh	w9, [x0, #6]
  44ee74:	sub	w9, w20, w10
  44ee78:	lsl	w9, w9, w24
  44ee7c:	add	w8, w9, w8
  44ee80:	cmp	w8, w21
  44ee84:	b.ls	44ee90 <feof@plt+0x4b5f0>  // b.plast
  44ee88:	mov	w8, wzr
  44ee8c:	b	44eea8 <feof@plt+0x4b608>
  44ee90:	ldr	w9, [x19, #56]
  44ee94:	str	w8, [x19, #60]
  44ee98:	cmp	w8, w9
  44ee9c:	b.ls	44eea4 <feof@plt+0x4b604>  // b.plast
  44eea0:	str	w8, [x19, #56]
  44eea4:	str	w22, [x19, #64]
  44eea8:	ldp	x20, x19, [sp, #48]
  44eeac:	ldp	x22, x21, [sp, #32]
  44eeb0:	ldp	x24, x23, [sp, #16]
  44eeb4:	mov	w0, w8
  44eeb8:	ldp	x29, x30, [sp], #64
  44eebc:	ret
  44eec0:	cmp	w23, w11
  44eec4:	b.lt	44ee48 <feof@plt+0x4b5a8>  // b.tstop
  44eec8:	mov	w8, w9
  44eecc:	mov	w9, #0x20                  	// #32
  44eed0:	sub	x9, x9, w24, sxtw
  44eed4:	lsr	x8, x8, x9
  44eed8:	cbz	x8, 44ee60 <feof@plt+0x4b5c0>
  44eedc:	b	44ee48 <feof@plt+0x4b5a8>
  44eee0:	stp	x29, x30, [sp, #-48]!
  44eee4:	str	x21, [sp, #16]
  44eee8:	stp	x20, x19, [sp, #32]
  44eeec:	mov	x19, x0
  44eef0:	ldp	w0, w8, [x0, #60]
  44eef4:	mov	w20, w1
  44eef8:	mov	x29, sp
  44eefc:	cmp	w8, w1
  44ef00:	b.ls	44ef14 <feof@plt+0x4b674>  // b.plast
  44ef04:	ldr	w9, [x19, #12]
  44ef08:	ldr	x8, [x19]
  44ef0c:	sub	w9, w9, #0x1
  44ef10:	b	44ef78 <feof@plt+0x4b6d8>
  44ef14:	cmp	w20, #0x1, lsl #12
  44ef18:	b.hi	44efa0 <feof@plt+0x4b700>  // b.pmore
  44ef1c:	mov	w8, #0x60000000            	// #1610612736
  44ef20:	cmp	w0, w8
  44ef24:	b.hi	44efa0 <feof@plt+0x4b700>  // b.pmore
  44ef28:	ldr	w8, [x19, #12]
  44ef2c:	ldr	x9, [x19]
  44ef30:	mov	w21, #0x18                  	// #24
  44ef34:	add	w2, w20, #0x32
  44ef38:	sub	w8, w8, #0x1
  44ef3c:	smaddl	x8, w8, w21, x9
  44ef40:	ldr	w9, [x8]
  44ef44:	ldrb	w10, [x8, #6]
  44ef48:	ldr	w8, [x8, #16]
  44ef4c:	sub	w9, w0, w9
  44ef50:	lsr	w9, w9, w10
  44ef54:	add	w1, w9, w8
  44ef58:	mov	x0, x19
  44ef5c:	bl	44ecdc <feof@plt+0x4b43c>
  44ef60:	ldr	w9, [x19, #12]
  44ef64:	ldr	x8, [x19]
  44ef68:	sub	w9, w9, #0x1
  44ef6c:	smaddl	x10, w9, w21, x8
  44ef70:	ldrb	w10, [x10, #6]
  44ef74:	cbz	w10, 44efa0 <feof@plt+0x4b700>
  44ef78:	sxtw	x9, w9
  44ef7c:	mov	w10, #0x18                  	// #24
  44ef80:	madd	x8, x9, x10, x8
  44ef84:	ldrb	w8, [x8, #7]
  44ef88:	ldr	w9, [x19, #56]
  44ef8c:	lsl	w8, w20, w8
  44ef90:	add	w0, w8, w0
  44ef94:	cmp	w0, w9
  44ef98:	b.cc	44efa0 <feof@plt+0x4b700>  // b.lo, b.ul, b.last
  44ef9c:	str	w0, [x19, #56]
  44efa0:	ldp	x20, x19, [sp, #32]
  44efa4:	ldr	x21, [sp, #16]
  44efa8:	ldp	x29, x30, [sp], #48
  44efac:	ret
  44efb0:	ldr	w8, [x1, #16]
  44efb4:	ldrh	w9, [x1, #6]
  44efb8:	ldr	w10, [x1]
  44efbc:	sub	w8, w2, w8
  44efc0:	lsl	w8, w8, w9
  44efc4:	add	w8, w8, w10
  44efc8:	mov	w10, #0x60000000            	// #1610612736
  44efcc:	cmp	w8, w10
  44efd0:	b.hi	44eff0 <feof@plt+0x4b750>  // b.pmore
  44efd4:	and	w10, w9, #0xff
  44efd8:	mov	w11, #0xffffffff            	// #-1
  44efdc:	lsl	w10, w11, w10
  44efe0:	bic	w10, w3, w10
  44efe4:	lsr	w9, w9, #8
  44efe8:	lsl	w9, w10, w9
  44efec:	add	w8, w9, w8
  44eff0:	ldr	w9, [x0, #36]
  44eff4:	cbz	w9, 44f00c <feof@plt+0x4b76c>
  44eff8:	ldr	x10, [x0, #24]
  44effc:	sub	w9, w9, #0x1
  44f000:	sbfiz	x9, x9, #5, #32
  44f004:	ldr	w9, [x10, x9]
  44f008:	b	44f010 <feof@plt+0x4b770>
  44f00c:	mov	w9, #0x80000000            	// #-2147483648
  44f010:	ldr	w10, [x0, #56]
  44f014:	sub	w11, w9, #0x1
  44f018:	cmp	w8, w9
  44f01c:	csel	w8, w8, w11, cc  // cc = lo, ul, last
  44f020:	cmp	w8, w10
  44f024:	b.ls	44f02c <feof@plt+0x4b78c>  // b.plast
  44f028:	str	w8, [x0, #56]
  44f02c:	mov	w0, w8
  44f030:	ret
  44f034:	stp	x29, x30, [sp, #-64]!
  44f038:	stp	x22, x21, [sp, #32]
  44f03c:	stp	x20, x19, [sp, #48]
  44f040:	mov	w21, w2
  44f044:	mov	w19, w1
  44f048:	mov	x20, x0
  44f04c:	str	x23, [sp, #16]
  44f050:	mov	x29, sp
  44f054:	tbz	w1, #31, 44f070 <feof@plt+0x4b7d0>
  44f058:	ldr	x8, [x20, #104]
  44f05c:	and	w9, w19, #0x7fffffff
  44f060:	mov	w10, #0x18                  	// #24
  44f064:	umull	x9, w9, w10
  44f068:	ldr	w19, [x8, x9]
  44f06c:	tbnz	w19, #31, 44f134 <feof@plt+0x4b894>
  44f070:	mov	w8, w19
  44f074:	lsr	w9, w8, #28
  44f078:	cmp	w9, #0x7
  44f07c:	b.cc	44f084 <feof@plt+0x4b7e4>  // b.lo, b.ul, b.last
  44f080:	tbz	w8, #31, 44f23c <feof@plt+0x4b99c>
  44f084:	cbz	w21, 44f23c <feof@plt+0x4b99c>
  44f088:	cmp	w19, #0x2
  44f08c:	b.cc	44f23c <feof@plt+0x4b99c>  // b.lo, b.ul, b.last
  44f090:	mov	x0, x20
  44f094:	mov	w1, w19
  44f098:	bl	44e220 <feof@plt+0x4a980>
  44f09c:	ldr	w8, [x0]
  44f0a0:	mov	x22, x0
  44f0a4:	lsr	w9, w8, #28
  44f0a8:	cmp	w9, #0x7
  44f0ac:	b.cs	44f148 <feof@plt+0x4b8a8>  // b.hs, b.nlast
  44f0b0:	ldrh	w9, [x22, #6]
  44f0b4:	lsr	w10, w9, #8
  44f0b8:	lsl	w11, w21, w10
  44f0bc:	add	w11, w11, w19
  44f0c0:	cmp	w8, w11
  44f0c4:	b.cs	44f23c <feof@plt+0x4b99c>  // b.hs, b.nlast
  44f0c8:	ldr	w11, [x22, #16]
  44f0cc:	ldr	w13, [x20, #12]
  44f0d0:	sub	w8, w19, w8
  44f0d4:	mov	w12, #0xffffffff            	// #-1
  44f0d8:	ldr	x14, [x20]
  44f0dc:	lsr	w15, w8, w9
  44f0e0:	lsl	w9, w12, w9
  44f0e4:	bic	w8, w8, w9
  44f0e8:	lsr	w9, w8, w10
  44f0ec:	add	w8, w15, w11
  44f0f0:	sub	w10, w13, #0x1
  44f0f4:	mov	w11, #0x18                  	// #24
  44f0f8:	smaddl	x11, w10, w11, x14
  44f0fc:	cmp	x11, x22
  44f100:	b.eq	44f198 <feof@plt+0x4b8f8>  // b.none
  44f104:	ldrh	w12, [x22, #6]
  44f108:	ldr	w13, [x22, #24]
  44f10c:	lsr	w10, w12, #8
  44f110:	lsl	w14, w21, w10
  44f114:	add	w14, w14, w19
  44f118:	cmp	w14, w13
  44f11c:	b.cc	44f1a4 <feof@plt+0x4b904>  // b.lo, b.ul, b.last
  44f120:	ldr	w10, [x22, #40]
  44f124:	add	x22, x22, #0x18
  44f128:	cmp	w8, w10
  44f12c:	b.cs	44f0fc <feof@plt+0x4b85c>  // b.hs, b.nlast
  44f130:	b	44f23c <feof@plt+0x4b99c>
  44f134:	and	x9, x19, #0x7fffffff
  44f138:	mov	w10, #0x18                  	// #24
  44f13c:	mul	x9, x9, x10
  44f140:	ldr	w8, [x8, x9]
  44f144:	b	44f074 <feof@plt+0x4b7d4>
  44f148:	mov	w23, #0x18                  	// #24
  44f14c:	b	44f180 <feof@plt+0x4b8e0>
  44f150:	ldr	x9, [x22, #16]
  44f154:	sub	w8, w19, w8
  44f158:	lsl	w8, w8, #1
  44f15c:	mov	x0, x20
  44f160:	ldr	w19, [x9, w8, uxtw #2]
  44f164:	mov	w1, w19
  44f168:	bl	44e220 <feof@plt+0x4a980>
  44f16c:	ldr	w8, [x0]
  44f170:	mov	x22, x0
  44f174:	lsr	w9, w8, #28
  44f178:	cmp	w9, #0x7
  44f17c:	b.cc	44f0b0 <feof@plt+0x4b810>  // b.lo, b.ul, b.last
  44f180:	tbz	w19, #31, 44f150 <feof@plt+0x4b8b0>
  44f184:	ldr	x9, [x20, #104]
  44f188:	and	w10, w19, #0x7fffffff
  44f18c:	umull	x10, w10, w23
  44f190:	ldr	w19, [x9, x10]
  44f194:	b	44f150 <feof@plt+0x4b8b0>
  44f198:	ldrh	w12, [x11, #6]
  44f19c:	mov	x22, x11
  44f1a0:	lsr	w10, w12, #8
  44f1a4:	and	w11, w12, #0xff
  44f1a8:	add	w9, w9, w21
  44f1ac:	sub	w12, w11, w10
  44f1b0:	lsr	w12, w9, w12
  44f1b4:	cbnz	w12, 44f23c <feof@plt+0x4b99c>
  44f1b8:	ldr	w12, [x22, #16]
  44f1bc:	ldr	w13, [x22]
  44f1c0:	sub	w8, w8, w12
  44f1c4:	lsl	w8, w8, w11
  44f1c8:	add	w8, w8, w13
  44f1cc:	mov	w12, #0x60000000            	// #1610612736
  44f1d0:	cmp	w8, w12
  44f1d4:	b.hi	44f1ec <feof@plt+0x4b94c>  // b.pmore
  44f1d8:	mov	w12, #0xffffffff            	// #-1
  44f1dc:	lsl	w11, w12, w11
  44f1e0:	bic	w9, w9, w11
  44f1e4:	lsl	w9, w9, w10
  44f1e8:	add	w8, w8, w9
  44f1ec:	ldr	w9, [x20, #36]
  44f1f0:	cbz	w9, 44f208 <feof@plt+0x4b968>
  44f1f4:	ldr	x10, [x20, #24]
  44f1f8:	sub	w9, w9, #0x1
  44f1fc:	sbfiz	x9, x9, #5, #32
  44f200:	ldr	w9, [x10, x9]
  44f204:	b	44f20c <feof@plt+0x4b96c>
  44f208:	mov	w9, #0x80000000            	// #-2147483648
  44f20c:	ldr	w10, [x20, #56]
  44f210:	sub	w11, w9, #0x1
  44f214:	cmp	w8, w9
  44f218:	csel	w21, w8, w11, cc  // cc = lo, ul, last
  44f21c:	cmp	w21, w10
  44f220:	b.ls	44f228 <feof@plt+0x4b988>  // b.plast
  44f224:	str	w21, [x20, #56]
  44f228:	mov	x0, x20
  44f22c:	mov	w1, w21
  44f230:	bl	44e220 <feof@plt+0x4a980>
  44f234:	cmp	x22, x0
  44f238:	csel	w19, w21, w19, eq  // eq = none
  44f23c:	mov	w0, w19
  44f240:	ldp	x20, x19, [sp, #48]
  44f244:	ldp	x22, x21, [sp, #32]
  44f248:	ldr	x23, [sp, #16]
  44f24c:	ldp	x29, x30, [sp], #64
  44f250:	ret
  44f254:	tbz	w1, #31, 44f26c <feof@plt+0x4b9cc>
  44f258:	ldr	x8, [x0, #104]
  44f25c:	and	w9, w1, #0x7fffffff
  44f260:	mov	w10, #0x18                  	// #24
  44f264:	umull	x9, w9, w10
  44f268:	ldr	w1, [x8, x9]
  44f26c:	lsr	w8, w1, #28
  44f270:	cmp	w8, #0x6
  44f274:	cset	w8, hi  // hi = pmore
  44f278:	cmp	w1, #0x0
  44f27c:	cset	w9, ge  // ge = tcont
  44f280:	and	w0, w8, w9
  44f284:	ret
  44f288:	stp	x29, x30, [sp, #-64]!
  44f28c:	stp	x22, x21, [sp, #32]
  44f290:	stp	x20, x19, [sp, #48]
  44f294:	mov	x20, x3
  44f298:	mov	w19, w1
  44f29c:	mov	x21, x0
  44f2a0:	mov	w8, w1
  44f2a4:	str	x23, [sp, #16]
  44f2a8:	mov	x29, sp
  44f2ac:	tbnz	w1, #31, 44f2c4 <feof@plt+0x4ba24>
  44f2b0:	cmp	w8, #0x1
  44f2b4:	b.hi	44f2e0 <feof@plt+0x4ba40>  // b.pmore
  44f2b8:	cbz	x20, 44f418 <feof@plt+0x4bb78>
  44f2bc:	str	xzr, [x20]
  44f2c0:	b	44f418 <feof@plt+0x4bb78>
  44f2c4:	ldr	x8, [x21, #104]
  44f2c8:	and	w9, w19, #0x7fffffff
  44f2cc:	mov	w10, #0x18                  	// #24
  44f2d0:	umull	x9, w9, w10
  44f2d4:	ldr	w8, [x8, x9]
  44f2d8:	cmp	w8, #0x1
  44f2dc:	b.ls	44f2b8 <feof@plt+0x4ba18>  // b.plast
  44f2e0:	cmp	w2, #0x2
  44f2e4:	b.eq	44f3b4 <feof@plt+0x4bb14>  // b.none
  44f2e8:	cmp	w2, #0x1
  44f2ec:	b.eq	44f354 <feof@plt+0x4bab4>  // b.none
  44f2f0:	cbnz	w2, 44f430 <feof@plt+0x4bb90>
  44f2f4:	tbz	w19, #31, 44f30c <feof@plt+0x4ba6c>
  44f2f8:	ldr	x8, [x21, #104]
  44f2fc:	and	w9, w19, #0x7fffffff
  44f300:	mov	w10, #0x18                  	// #24
  44f304:	umull	x9, w9, w10
  44f308:	ldr	w19, [x8, x9]
  44f30c:	mov	x0, x21
  44f310:	mov	w1, w19
  44f314:	bl	44e220 <feof@plt+0x4a980>
  44f318:	cbz	x0, 44f410 <feof@plt+0x4bb70>
  44f31c:	ldr	w8, [x0]
  44f320:	lsr	w8, w8, #28
  44f324:	cmp	w8, #0x7
  44f328:	b.cc	44f410 <feof@plt+0x4bb70>  // b.lo, b.ul, b.last
  44f32c:	mov	w22, #0x6fffffff            	// #1879048191
  44f330:	ldr	w19, [x0, #24]
  44f334:	mov	x0, x21
  44f338:	mov	w1, w19
  44f33c:	bl	44e220 <feof@plt+0x4a980>
  44f340:	cbz	x0, 44f410 <feof@plt+0x4bb70>
  44f344:	ldr	w8, [x0]
  44f348:	cmp	w8, w22
  44f34c:	b.hi	44f330 <feof@plt+0x4ba90>  // b.pmore
  44f350:	b	44f410 <feof@plt+0x4bb70>
  44f354:	mov	x0, x21
  44f358:	mov	w1, w19
  44f35c:	bl	44e220 <feof@plt+0x4a980>
  44f360:	cbz	x0, 44f410 <feof@plt+0x4bb70>
  44f364:	mov	w22, #0x18                  	// #24
  44f368:	b	44f38c <feof@plt+0x4baec>
  44f36c:	ldr	x9, [x0, #16]
  44f370:	sub	w8, w19, w8
  44f374:	lsl	w8, w8, #1
  44f378:	mov	x0, x21
  44f37c:	ldr	w19, [x9, w8, uxtw #2]
  44f380:	mov	w1, w19
  44f384:	bl	44e220 <feof@plt+0x4a980>
  44f388:	cbz	x0, 44f410 <feof@plt+0x4bb70>
  44f38c:	ldr	w8, [x0]
  44f390:	lsr	w9, w8, #28
  44f394:	cmp	w9, #0x6
  44f398:	b.ls	44f410 <feof@plt+0x4bb70>  // b.plast
  44f39c:	tbz	w19, #31, 44f36c <feof@plt+0x4bacc>
  44f3a0:	ldr	x9, [x21, #104]
  44f3a4:	and	w10, w19, #0x7fffffff
  44f3a8:	umull	x10, w10, w22
  44f3ac:	ldr	w19, [x9, x10]
  44f3b0:	b	44f36c <feof@plt+0x4bacc>
  44f3b4:	mov	w23, #0x18                  	// #24
  44f3b8:	mov	w22, w19
  44f3bc:	tbz	w19, #31, 44f400 <feof@plt+0x4bb60>
  44f3c0:	b	44f3f0 <feof@plt+0x4bb50>
  44f3c4:	ldr	w8, [x0]
  44f3c8:	lsr	w9, w8, #28
  44f3cc:	cmp	w9, #0x6
  44f3d0:	b.ls	44f410 <feof@plt+0x4bb70>  // b.plast
  44f3d4:	ldr	x9, [x0, #16]
  44f3d8:	sub	w8, w22, w8
  44f3dc:	mov	w10, #0x1                   	// #1
  44f3e0:	bfi	w10, w8, #1, #31
  44f3e4:	ldr	w19, [x9, w10, uxtw #2]
  44f3e8:	mov	w22, w19
  44f3ec:	tbz	w19, #31, 44f400 <feof@plt+0x4bb60>
  44f3f0:	ldr	x8, [x21, #104]
  44f3f4:	and	w9, w19, #0x7fffffff
  44f3f8:	umull	x9, w9, w23
  44f3fc:	ldr	w22, [x8, x9]
  44f400:	mov	x0, x21
  44f404:	mov	w1, w22
  44f408:	bl	44e220 <feof@plt+0x4a980>
  44f40c:	cbnz	x0, 44f3c4 <feof@plt+0x4bb24>
  44f410:	cbz	x20, 44f418 <feof@plt+0x4bb78>
  44f414:	str	x0, [x20]
  44f418:	mov	w0, w19
  44f41c:	ldp	x20, x19, [sp, #48]
  44f420:	ldp	x22, x21, [sp, #32]
  44f424:	ldr	x23, [sp, #16]
  44f428:	ldp	x29, x30, [sp], #64
  44f42c:	ret
  44f430:	adrp	x0, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44f434:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44f438:	add	x0, x0, #0xe70
  44f43c:	add	x2, x2, #0xea2
  44f440:	mov	w1, #0x621                 	// #1569
  44f444:	bl	429434 <feof@plt+0x25b94>
  44f448:	cbz	x0, 44f45c <feof@plt+0x4bbbc>
  44f44c:	ldr	w8, [x0]
  44f450:	lsr	w8, w8, #28
  44f454:	cmp	w8, #0x6
  44f458:	cset	w0, hi  // hi = pmore
  44f45c:	ret
  44f460:	tbz	w2, #31, 44f478 <feof@plt+0x4bbd8>
  44f464:	ldr	x8, [x0, #104]
  44f468:	and	w9, w2, #0x7fffffff
  44f46c:	mov	w10, #0x18                  	// #24
  44f470:	umull	x9, w9, w10
  44f474:	ldr	w2, [x8, x9]
  44f478:	ldr	w8, [x1]
  44f47c:	ldr	x9, [x1, #16]
  44f480:	sub	w8, w2, w8
  44f484:	lsl	w8, w8, #1
  44f488:	ldr	w0, [x9, w8, uxtw #2]
  44f48c:	ret
  44f490:	stp	x29, x30, [sp, #-48]!
  44f494:	stp	x20, x19, [sp, #32]
  44f498:	mov	w19, w1
  44f49c:	mov	x20, x0
  44f4a0:	str	x21, [sp, #16]
  44f4a4:	mov	x29, sp
  44f4a8:	tbnz	w1, #31, 44f4bc <feof@plt+0x4bc1c>
  44f4ac:	cmp	w19, #0x2
  44f4b0:	b.cs	44f4d8 <feof@plt+0x4bc38>  // b.hs, b.nlast
  44f4b4:	mov	w0, wzr
  44f4b8:	b	44f540 <feof@plt+0x4bca0>
  44f4bc:	ldr	x8, [x20, #104]
  44f4c0:	and	w9, w19, #0x7fffffff
  44f4c4:	mov	w10, #0x18                  	// #24
  44f4c8:	umull	x9, w9, w10
  44f4cc:	ldr	w19, [x8, x9]
  44f4d0:	cmp	w19, #0x2
  44f4d4:	b.cc	44f4b4 <feof@plt+0x4bc14>  // b.lo, b.ul, b.last
  44f4d8:	tbz	w19, #31, 44f4f0 <feof@plt+0x4bc50>
  44f4dc:	ldr	x8, [x20, #104]
  44f4e0:	and	w9, w19, #0x7fffffff
  44f4e4:	mov	w10, #0x18                  	// #24
  44f4e8:	umull	x9, w9, w10
  44f4ec:	ldr	w19, [x8, x9]
  44f4f0:	mov	x0, x20
  44f4f4:	mov	w1, w19
  44f4f8:	bl	44e220 <feof@plt+0x4a980>
  44f4fc:	ldr	w8, [x0]
  44f500:	lsr	w9, w8, #28
  44f504:	cmp	w9, #0x7
  44f508:	b.cc	44f52c <feof@plt+0x4bc8c>  // b.lo, b.ul, b.last
  44f50c:	mov	w21, #0x6fffffff            	// #1879048191
  44f510:	ldr	w19, [x0, #24]
  44f514:	mov	x0, x20
  44f518:	mov	w1, w19
  44f51c:	bl	44e220 <feof@plt+0x4a980>
  44f520:	ldr	w8, [x0]
  44f524:	cmp	w8, w21
  44f528:	b.hi	44f510 <feof@plt+0x4bc70>  // b.pmore
  44f52c:	ldrb	w9, [x0, #6]
  44f530:	ldr	w10, [x0, #16]
  44f534:	sub	w8, w19, w8
  44f538:	lsr	w8, w8, w9
  44f53c:	add	w0, w8, w10
  44f540:	ldp	x20, x19, [sp, #32]
  44f544:	ldr	x21, [sp, #16]
  44f548:	ldp	x29, x30, [sp], #48
  44f54c:	ret
  44f550:	stp	x29, x30, [sp, #-32]!
  44f554:	stp	x20, x19, [sp, #16]
  44f558:	mov	x19, x0
  44f55c:	mov	x29, sp
  44f560:	tbnz	w1, #31, 44f574 <feof@plt+0x4bcd4>
  44f564:	cmp	w1, #0x2
  44f568:	b.cs	44f590 <feof@plt+0x4bcf0>  // b.hs, b.nlast
  44f56c:	mov	x0, xzr
  44f570:	b	44f5e0 <feof@plt+0x4bd40>
  44f574:	ldr	x8, [x19, #104]
  44f578:	and	w9, w1, #0x7fffffff
  44f57c:	mov	w10, #0x18                  	// #24
  44f580:	umull	x9, w9, w10
  44f584:	ldr	w1, [x8, x9]
  44f588:	cmp	w1, #0x2
  44f58c:	b.cc	44f56c <feof@plt+0x4bccc>  // b.lo, b.ul, b.last
  44f590:	tbz	w1, #31, 44f5a8 <feof@plt+0x4bd08>
  44f594:	ldr	x8, [x19, #104]
  44f598:	and	w9, w1, #0x7fffffff
  44f59c:	mov	w10, #0x18                  	// #24
  44f5a0:	umull	x9, w9, w10
  44f5a4:	ldr	w1, [x8, x9]
  44f5a8:	mov	x0, x19
  44f5ac:	bl	44e220 <feof@plt+0x4a980>
  44f5b0:	ldr	w8, [x0]
  44f5b4:	lsr	w8, w8, #28
  44f5b8:	cmp	w8, #0x7
  44f5bc:	b.cc	44f5dc <feof@plt+0x4bd3c>  // b.lo, b.ul, b.last
  44f5c0:	mov	w20, #0x6fffffff            	// #1879048191
  44f5c4:	ldr	w1, [x0, #24]
  44f5c8:	mov	x0, x19
  44f5cc:	bl	44e220 <feof@plt+0x4a980>
  44f5d0:	ldr	w8, [x0]
  44f5d4:	cmp	w8, w20
  44f5d8:	b.hi	44f5c4 <feof@plt+0x4bd24>  // b.pmore
  44f5dc:	ldr	x0, [x0, #8]
  44f5e0:	ldp	x20, x19, [sp, #16]
  44f5e4:	ldp	x29, x30, [sp], #32
  44f5e8:	ret
  44f5ec:	ldr	x8, [x0, #8]
  44f5f0:	ldr	x0, [x8]
  44f5f4:	ret
  44f5f8:	stp	x29, x30, [sp, #-48]!
  44f5fc:	stp	x20, x19, [sp, #32]
  44f600:	mov	w20, w1
  44f604:	mov	x19, x0
  44f608:	str	x21, [sp, #16]
  44f60c:	mov	x29, sp
  44f610:	tbnz	w1, #31, 44f624 <feof@plt+0x4bd84>
  44f614:	cmp	w20, #0x2
  44f618:	b.cs	44f640 <feof@plt+0x4bda0>  // b.hs, b.nlast
  44f61c:	mov	w0, wzr
  44f620:	b	44f6b0 <feof@plt+0x4be10>
  44f624:	ldr	x8, [x19, #104]
  44f628:	and	w9, w20, #0x7fffffff
  44f62c:	mov	w10, #0x18                  	// #24
  44f630:	umull	x9, w9, w10
  44f634:	ldr	w20, [x8, x9]
  44f638:	cmp	w20, #0x2
  44f63c:	b.cc	44f61c <feof@plt+0x4bd7c>  // b.lo, b.ul, b.last
  44f640:	mov	x0, x19
  44f644:	mov	w1, w20
  44f648:	bl	44e220 <feof@plt+0x4a980>
  44f64c:	cbz	x0, 44f6b0 <feof@plt+0x4be10>
  44f650:	mov	w21, #0x18                  	// #24
  44f654:	b	44f668 <feof@plt+0x4bdc8>
  44f658:	mov	x0, x19
  44f65c:	mov	w1, w20
  44f660:	bl	44e220 <feof@plt+0x4a980>
  44f664:	cbz	x0, 44f6b0 <feof@plt+0x4be10>
  44f668:	ldr	w8, [x0]
  44f66c:	lsr	w9, w8, #28
  44f670:	cmp	w9, #0x6
  44f674:	b.ls	44f6ac <feof@plt+0x4be0c>  // b.plast
  44f678:	tbz	w20, #31, 44f68c <feof@plt+0x4bdec>
  44f67c:	ldr	x9, [x19, #104]
  44f680:	and	w10, w20, #0x7fffffff
  44f684:	umull	x10, w10, w21
  44f688:	ldr	w20, [x9, x10]
  44f68c:	ldr	x9, [x0, #16]
  44f690:	sub	w8, w20, w8
  44f694:	lsl	w8, w8, #1
  44f698:	ldr	w20, [x9, w8, uxtw #2]
  44f69c:	cmp	w20, #0x1
  44f6a0:	b.hi	44f658 <feof@plt+0x4bdb8>  // b.pmore
  44f6a4:	ldr	w20, [x0, #24]
  44f6a8:	b	44f658 <feof@plt+0x4bdb8>
  44f6ac:	ldrb	w0, [x0, #5]
  44f6b0:	ldp	x20, x19, [sp, #32]
  44f6b4:	ldr	x21, [sp, #16]
  44f6b8:	ldp	x29, x30, [sp], #48
  44f6bc:	ret
  44f6c0:	stp	x29, x30, [sp, #-80]!
  44f6c4:	stp	x22, x21, [sp, #48]
  44f6c8:	stp	x20, x19, [sp, #64]
  44f6cc:	mov	w20, w2
  44f6d0:	mov	w21, w1
  44f6d4:	mov	x19, x0
  44f6d8:	mov	w22, w1
  44f6dc:	str	x25, [sp, #16]
  44f6e0:	stp	x24, x23, [sp, #32]
  44f6e4:	mov	x29, sp
  44f6e8:	tbnz	w1, #31, 44f704 <feof@plt+0x4be64>
  44f6ec:	mov	w23, w20
  44f6f0:	tbnz	w20, #31, 44f720 <feof@plt+0x4be80>
  44f6f4:	cmp	w22, w23
  44f6f8:	b.ne	44f73c <feof@plt+0x4be9c>  // b.any
  44f6fc:	mov	w0, wzr
  44f700:	b	44f950 <feof@plt+0x4c0b0>
  44f704:	ldr	x8, [x19, #104]
  44f708:	and	w9, w21, #0x7fffffff
  44f70c:	mov	w10, #0x18                  	// #24
  44f710:	umull	x9, w9, w10
  44f714:	ldr	w22, [x8, x9]
  44f718:	mov	w23, w20
  44f71c:	tbz	w20, #31, 44f6f4 <feof@plt+0x4be54>
  44f720:	ldr	x8, [x19, #104]
  44f724:	and	w9, w20, #0x7fffffff
  44f728:	mov	w10, #0x18                  	// #24
  44f72c:	umull	x9, w9, w10
  44f730:	ldr	w23, [x8, x9]
  44f734:	cmp	w22, w23
  44f738:	b.eq	44f6fc <feof@plt+0x4be5c>  // b.none
  44f73c:	mov	w24, w22
  44f740:	tbz	w22, #31, 44f758 <feof@plt+0x4beb8>
  44f744:	ldr	x8, [x19, #104]
  44f748:	and	w9, w22, #0x7fffffff
  44f74c:	mov	w10, #0x18                  	// #24
  44f750:	umull	x9, w9, w10
  44f754:	ldr	w24, [x8, x9]
  44f758:	lsr	w8, w24, #28
  44f75c:	cmp	w8, #0x7
  44f760:	mov	w25, #0x6fffffff            	// #1879048191
  44f764:	b.cc	44f790 <feof@plt+0x4bef0>  // b.lo, b.ul, b.last
  44f768:	tbnz	w24, #31, 44f790 <feof@plt+0x4bef0>
  44f76c:	mov	w8, w22
  44f770:	tbz	w22, #31, 44f788 <feof@plt+0x4bee8>
  44f774:	ldr	x8, [x19, #104]
  44f778:	and	w9, w22, #0x7fffffff
  44f77c:	mov	w10, #0x18                  	// #24
  44f780:	umull	x9, w9, w10
  44f784:	ldr	w8, [x8, x9]
  44f788:	cmp	w8, #0x2
  44f78c:	b.cs	44f8cc <feof@plt+0x4c02c>  // b.hs, b.nlast
  44f790:	mov	w8, w23
  44f794:	tbnz	w23, #31, 44f7a4 <feof@plt+0x4bf04>
  44f798:	cmp	w8, w25
  44f79c:	b.hi	44f7c0 <feof@plt+0x4bf20>  // b.pmore
  44f7a0:	b	44f88c <feof@plt+0x4bfec>
  44f7a4:	ldr	x8, [x19, #104]
  44f7a8:	and	w9, w23, #0x7fffffff
  44f7ac:	mov	w10, #0x18                  	// #24
  44f7b0:	umull	x9, w9, w10
  44f7b4:	ldr	w8, [x8, x9]
  44f7b8:	cmp	w8, w25
  44f7bc:	b.ls	44f88c <feof@plt+0x4bfec>  // b.plast
  44f7c0:	tbnz	w8, #31, 44f88c <feof@plt+0x4bfec>
  44f7c4:	mov	w8, w23
  44f7c8:	tbz	w23, #31, 44f7e0 <feof@plt+0x4bf40>
  44f7cc:	ldr	x8, [x19, #104]
  44f7d0:	and	w9, w23, #0x7fffffff
  44f7d4:	mov	w10, #0x18                  	// #24
  44f7d8:	umull	x9, w9, w10
  44f7dc:	ldr	w8, [x8, x9]
  44f7e0:	cmp	w8, #0x2
  44f7e4:	b.cs	44f908 <feof@plt+0x4c068>  // b.hs, b.nlast
  44f7e8:	cmp	w22, w23
  44f7ec:	b.ne	44f88c <feof@plt+0x4bfec>  // b.any
  44f7f0:	cmp	w24, w25
  44f7f4:	b.ls	44f88c <feof@plt+0x4bfec>  // b.plast
  44f7f8:	tbnz	w24, #31, 44f88c <feof@plt+0x4bfec>
  44f7fc:	mov	x0, x19
  44f800:	mov	w1, w21
  44f804:	bl	44e220 <feof@plt+0x4a980>
  44f808:	mov	x22, x0
  44f80c:	mov	x0, x19
  44f810:	mov	w1, w20
  44f814:	bl	44e220 <feof@plt+0x4a980>
  44f818:	cbz	x22, 44f968 <feof@plt+0x4c0c8>
  44f81c:	mov	x23, x0
  44f820:	b	44f83c <feof@plt+0x4bf9c>
  44f824:	ldr	w21, [x22, #24]
  44f828:	mov	x0, x19
  44f82c:	mov	w1, w21
  44f830:	bl	44e220 <feof@plt+0x4a980>
  44f834:	mov	x22, x0
  44f838:	cbz	x0, 44f968 <feof@plt+0x4c0c8>
  44f83c:	cbz	x23, 44f944 <feof@plt+0x4c0a4>
  44f840:	ldr	w8, [x22]
  44f844:	lsr	w9, w8, #28
  44f848:	cmp	w9, #0x7
  44f84c:	b.cc	44f944 <feof@plt+0x4c0a4>  // b.lo, b.ul, b.last
  44f850:	cmp	x22, x23
  44f854:	b.eq	44f944 <feof@plt+0x4c0a4>  // b.none
  44f858:	ldr	w9, [x23]
  44f85c:	lsr	w10, w9, #28
  44f860:	cmp	w10, #0x7
  44f864:	b.cc	44f944 <feof@plt+0x4c0a4>  // b.lo, b.ul, b.last
  44f868:	cmp	w8, w9
  44f86c:	b.cc	44f824 <feof@plt+0x4bf84>  // b.lo, b.ul, b.last
  44f870:	ldr	w20, [x23, #24]
  44f874:	mov	x0, x19
  44f878:	mov	w1, w20
  44f87c:	bl	44e220 <feof@plt+0x4a980>
  44f880:	mov	x23, x0
  44f884:	cbnz	x22, 44f83c <feof@plt+0x4bf9c>
  44f888:	b	44f968 <feof@plt+0x4c0c8>
  44f88c:	tbnz	w22, #31, 44f89c <feof@plt+0x4bffc>
  44f890:	tbnz	w23, #31, 44f8b4 <feof@plt+0x4c014>
  44f894:	sub	w0, w23, w22
  44f898:	b	44f950 <feof@plt+0x4c0b0>
  44f89c:	ldr	x8, [x19, #104]
  44f8a0:	and	w9, w22, #0x7fffffff
  44f8a4:	mov	w10, #0x18                  	// #24
  44f8a8:	umull	x9, w9, w10
  44f8ac:	ldr	w22, [x8, x9]
  44f8b0:	tbz	w23, #31, 44f894 <feof@plt+0x4bff4>
  44f8b4:	ldr	x8, [x19, #104]
  44f8b8:	and	w9, w23, #0x7fffffff
  44f8bc:	mov	w10, #0x18                  	// #24
  44f8c0:	umull	x9, w9, w10
  44f8c4:	ldr	w23, [x8, x9]
  44f8c8:	b	44f894 <feof@plt+0x4bff4>
  44f8cc:	tbz	w22, #31, 44f8e4 <feof@plt+0x4c044>
  44f8d0:	ldr	x8, [x19, #104]
  44f8d4:	and	w9, w22, #0x7fffffff
  44f8d8:	mov	w10, #0x18                  	// #24
  44f8dc:	umull	x9, w9, w10
  44f8e0:	ldr	w22, [x8, x9]
  44f8e4:	mov	x0, x19
  44f8e8:	mov	w1, w22
  44f8ec:	bl	44e220 <feof@plt+0x4a980>
  44f8f0:	cbz	x0, 44f790 <feof@plt+0x4bef0>
  44f8f4:	ldr	w8, [x0]
  44f8f8:	cmp	w8, w25
  44f8fc:	b.ls	44f790 <feof@plt+0x4bef0>  // b.plast
  44f900:	ldr	w22, [x0, #24]
  44f904:	b	44f8e4 <feof@plt+0x4c044>
  44f908:	tbz	w23, #31, 44f920 <feof@plt+0x4c080>
  44f90c:	ldr	x8, [x19, #104]
  44f910:	and	w9, w23, #0x7fffffff
  44f914:	mov	w10, #0x18                  	// #24
  44f918:	umull	x9, w9, w10
  44f91c:	ldr	w23, [x8, x9]
  44f920:	mov	x0, x19
  44f924:	mov	w1, w23
  44f928:	bl	44e220 <feof@plt+0x4a980>
  44f92c:	cbz	x0, 44f7e8 <feof@plt+0x4bf48>
  44f930:	ldr	w8, [x0]
  44f934:	cmp	w8, w25
  44f938:	b.ls	44f7e8 <feof@plt+0x4bf48>  // b.plast
  44f93c:	ldr	w23, [x0, #24]
  44f940:	b	44f920 <feof@plt+0x4c080>
  44f944:	cmp	x22, x23
  44f948:	b.ne	44f968 <feof@plt+0x4c0c8>  // b.any
  44f94c:	sub	w0, w20, w21
  44f950:	ldp	x20, x19, [sp, #64]
  44f954:	ldp	x22, x21, [sp, #48]
  44f958:	ldp	x24, x23, [sp, #32]
  44f95c:	ldr	x25, [sp, #16]
  44f960:	ldp	x29, x30, [sp], #80
  44f964:	ret
  44f968:	adrp	x0, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44f96c:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44f970:	add	x0, x0, #0xe70
  44f974:	add	x2, x2, #0xe88
  44f978:	mov	w1, #0x549                 	// #1353
  44f97c:	bl	429434 <feof@plt+0x25b94>
  44f980:	stp	x29, x30, [sp, #-48]!
  44f984:	stp	x20, x19, [sp, #32]
  44f988:	mov	x19, x0
  44f98c:	stp	x22, x21, [sp, #16]
  44f990:	mov	x29, sp
  44f994:	tbz	w1, #31, 44f9b0 <feof@plt+0x4c110>
  44f998:	ldr	x8, [x19, #104]
  44f99c:	and	w9, w1, #0x7fffffff
  44f9a0:	mov	w10, #0x18                  	// #24
  44f9a4:	umull	x9, w9, w10
  44f9a8:	ldr	w1, [x8, x9]
  44f9ac:	tbnz	w1, #31, 44fa54 <feof@plt+0x4c1b4>
  44f9b0:	mov	w8, w1
  44f9b4:	lsr	w9, w8, #28
  44f9b8:	cmp	w9, #0x7
  44f9bc:	mov	w0, wzr
  44f9c0:	b.cc	44fa44 <feof@plt+0x4c1a4>  // b.lo, b.ul, b.last
  44f9c4:	tbnz	w8, #31, 44fa44 <feof@plt+0x4c1a4>
  44f9c8:	mov	w21, #0x6fffffff            	// #1879048191
  44f9cc:	mov	w22, #0x18                  	// #24
  44f9d0:	mov	x0, x19
  44f9d4:	mov	w20, w1
  44f9d8:	bl	44e220 <feof@plt+0x4a980>
  44f9dc:	mov	w10, w20
  44f9e0:	tbz	w20, #31, 44f9f4 <feof@plt+0x4c154>
  44f9e4:	ldr	x8, [x19, #104]
  44f9e8:	and	w9, w20, #0x7fffffff
  44f9ec:	umull	x9, w9, w22
  44f9f0:	ldr	w10, [x8, x9]
  44f9f4:	ldr	w9, [x0]
  44f9f8:	ldr	x8, [x0, #16]
  44f9fc:	sub	w10, w10, w9
  44fa00:	lsl	w10, w10, #1
  44fa04:	ldr	w1, [x8, w10, uxtw #2]
  44fa08:	mov	w10, w1
  44fa0c:	tbz	w1, #31, 44fa20 <feof@plt+0x4c180>
  44fa10:	ldr	x10, [x19, #104]
  44fa14:	and	x11, x1, #0x7fffffff
  44fa18:	mul	x11, x11, x22
  44fa1c:	ldr	w10, [x10, x11]
  44fa20:	cmp	w10, w21
  44fa24:	b.ls	44fa2c <feof@plt+0x4c18c>  // b.plast
  44fa28:	tbz	w10, #31, 44f9d0 <feof@plt+0x4c130>
  44fa2c:	sub	w9, w20, w9
  44fa30:	mov	w10, #0x1                   	// #1
  44fa34:	bfi	w10, w9, #1, #31
  44fa38:	ldr	w8, [x8, w10, uxtw #2]
  44fa3c:	cmp	w1, w8
  44fa40:	cset	w0, eq  // eq = none
  44fa44:	ldp	x20, x19, [sp, #32]
  44fa48:	ldp	x22, x21, [sp, #16]
  44fa4c:	ldp	x29, x30, [sp], #48
  44fa50:	ret
  44fa54:	and	x9, x1, #0x7fffffff
  44fa58:	mov	w10, #0x18                  	// #24
  44fa5c:	mul	x9, x9, x10
  44fa60:	ldr	w8, [x8, x9]
  44fa64:	b	44f9b4 <feof@plt+0x4c114>
  44fa68:	stp	x29, x30, [sp, #-48]!
  44fa6c:	stp	x22, x21, [sp, #16]
  44fa70:	stp	x20, x19, [sp, #32]
  44fa74:	ldr	x22, [x2]
  44fa78:	mov	x19, x2
  44fa7c:	mov	x20, x0
  44fa80:	mov	x29, sp
  44fa84:	tbz	w1, #31, 44fab0 <feof@plt+0x4c210>
  44fa88:	ldr	x8, [x20, #104]
  44fa8c:	and	w9, w1, #0x7fffffff
  44fa90:	mov	w10, #0x18                  	// #24
  44fa94:	umull	x9, w9, w10
  44fa98:	ldr	w1, [x8, x9]
  44fa9c:	tbz	w1, #31, 44fab0 <feof@plt+0x4c210>
  44faa0:	and	x9, x1, #0x7fffffff
  44faa4:	mov	w10, #0x18                  	// #24
  44faa8:	mul	x9, x9, x10
  44faac:	ldr	w1, [x8, x9]
  44fab0:	ldr	w8, [x22]
  44fab4:	ldr	x9, [x22, #16]
  44fab8:	mov	x0, x20
  44fabc:	sub	w8, w1, w8
  44fac0:	lsl	w8, w8, #1
  44fac4:	ldr	w21, [x9, w8, uxtw #2]
  44fac8:	mov	w1, w21
  44facc:	bl	44e220 <feof@plt+0x4a980>
  44fad0:	cbz	x0, 44fae4 <feof@plt+0x4c244>
  44fad4:	ldr	w8, [x0]
  44fad8:	lsr	w8, w8, #28
  44fadc:	cmp	w8, #0x6
  44fae0:	b.hi	44faf4 <feof@plt+0x4c254>  // b.pmore
  44fae4:	ldr	w21, [x22, #24]
  44fae8:	mov	x0, x20
  44faec:	mov	w1, w21
  44faf0:	bl	44e220 <feof@plt+0x4a980>
  44faf4:	str	x0, [x19]
  44faf8:	mov	w0, w21
  44fafc:	ldp	x20, x19, [sp, #32]
  44fb00:	ldp	x22, x21, [sp, #16]
  44fb04:	ldp	x29, x30, [sp], #48
  44fb08:	ret
  44fb0c:	stp	x29, x30, [sp, #-80]!
  44fb10:	stp	x22, x21, [sp, #48]
  44fb14:	stp	x20, x19, [sp, #64]
  44fb18:	mov	x20, x2
  44fb1c:	mov	w19, w1
  44fb20:	mov	x21, x0
  44fb24:	stp	x26, x25, [sp, #16]
  44fb28:	stp	x24, x23, [sp, #32]
  44fb2c:	mov	x29, sp
  44fb30:	tbz	w1, #31, 44fb48 <feof@plt+0x4c2a8>
  44fb34:	ldr	x8, [x21, #104]
  44fb38:	and	w9, w19, #0x7fffffff
  44fb3c:	mov	w10, #0x18                  	// #24
  44fb40:	umull	x9, w9, w10
  44fb44:	ldr	w19, [x8, x9]
  44fb48:	mov	x0, x21
  44fb4c:	mov	w1, w19
  44fb50:	bl	44e220 <feof@plt+0x4a980>
  44fb54:	cbz	x0, 44fd54 <feof@plt+0x4c4b4>
  44fb58:	ldr	w8, [x0]
  44fb5c:	mov	x22, x0
  44fb60:	lsr	w8, w8, #28
  44fb64:	cmp	w8, #0x7
  44fb68:	b.cc	44fd54 <feof@plt+0x4c4b4>  // b.lo, b.ul, b.last
  44fb6c:	mov	w8, w19
  44fb70:	tbnz	w19, #31, 44fb84 <feof@plt+0x4c2e4>
  44fb74:	cmp	w8, #0x2
  44fb78:	b.cs	44fba0 <feof@plt+0x4c300>  // b.hs, b.nlast
  44fb7c:	mov	x0, xzr
  44fb80:	b	44fc04 <feof@plt+0x4c364>
  44fb84:	ldr	x8, [x21, #104]
  44fb88:	and	w9, w19, #0x7fffffff
  44fb8c:	mov	w10, #0x18                  	// #24
  44fb90:	umull	x9, w9, w10
  44fb94:	ldr	w8, [x8, x9]
  44fb98:	cmp	w8, #0x2
  44fb9c:	b.cc	44fb7c <feof@plt+0x4c2dc>  // b.lo, b.ul, b.last
  44fba0:	mov	x0, x21
  44fba4:	mov	w1, w19
  44fba8:	bl	44e220 <feof@plt+0x4a980>
  44fbac:	cbz	x0, 44fc04 <feof@plt+0x4c364>
  44fbb0:	mov	w24, #0x18                  	// #24
  44fbb4:	mov	w23, w19
  44fbb8:	b	44fbdc <feof@plt+0x4c33c>
  44fbbc:	ldr	x9, [x0, #16]
  44fbc0:	sub	w8, w23, w8
  44fbc4:	lsl	w8, w8, #1
  44fbc8:	mov	x0, x21
  44fbcc:	ldr	w23, [x9, w8, uxtw #2]
  44fbd0:	mov	w1, w23
  44fbd4:	bl	44e220 <feof@plt+0x4a980>
  44fbd8:	cbz	x0, 44fc08 <feof@plt+0x4c368>
  44fbdc:	ldr	w8, [x0]
  44fbe0:	lsr	w9, w8, #28
  44fbe4:	cmp	w9, #0x6
  44fbe8:	b.ls	44fc08 <feof@plt+0x4c368>  // b.plast
  44fbec:	tbz	w23, #31, 44fbbc <feof@plt+0x4c31c>
  44fbf0:	ldr	x9, [x21, #104]
  44fbf4:	and	w10, w23, #0x7fffffff
  44fbf8:	umull	x10, w10, w24
  44fbfc:	ldr	w23, [x9, x10]
  44fc00:	b	44fbbc <feof@plt+0x4c31c>
  44fc04:	mov	w23, w19
  44fc08:	cmp	w23, #0x2
  44fc0c:	b.cc	44fc18 <feof@plt+0x4c378>  // b.lo, b.ul, b.last
  44fc10:	ldrb	w8, [x0, #5]
  44fc14:	cbz	w8, 44fd54 <feof@plt+0x4c4b4>
  44fc18:	mov	w25, #0x6fffffff            	// #1879048191
  44fc1c:	mov	w26, #0x18                  	// #24
  44fc20:	b	44fc34 <feof@plt+0x4c394>
  44fc24:	mov	x0, xzr
  44fc28:	mov	w23, w19
  44fc2c:	mov	x22, x24
  44fc30:	cbz	x24, 44fd4c <feof@plt+0x4c4ac>
  44fc34:	ldr	w8, [x22]
  44fc38:	cmp	w8, w25
  44fc3c:	b.ls	44fd4c <feof@plt+0x4c4ac>  // b.plast
  44fc40:	cmp	w23, #0x2
  44fc44:	b.cc	44fc50 <feof@plt+0x4c3b0>  // b.lo, b.ul, b.last
  44fc48:	ldrb	w9, [x0, #5]
  44fc4c:	cbz	w9, 44fd4c <feof@plt+0x4c4ac>
  44fc50:	tbz	w19, #31, 44fc74 <feof@plt+0x4c3d4>
  44fc54:	ldr	x9, [x21, #104]
  44fc58:	and	w10, w19, #0x7fffffff
  44fc5c:	umull	x10, w10, w26
  44fc60:	ldr	w19, [x9, x10]
  44fc64:	tbz	w19, #31, 44fc74 <feof@plt+0x4c3d4>
  44fc68:	and	x10, x19, #0x7fffffff
  44fc6c:	mul	x10, x10, x26
  44fc70:	ldr	w19, [x9, x10]
  44fc74:	ldr	x9, [x22, #16]
  44fc78:	sub	w8, w19, w8
  44fc7c:	lsl	w8, w8, #1
  44fc80:	mov	x0, x21
  44fc84:	ldr	w19, [x9, w8, uxtw #2]
  44fc88:	mov	w1, w19
  44fc8c:	bl	44e220 <feof@plt+0x4a980>
  44fc90:	cbz	x0, 44fcb8 <feof@plt+0x4c418>
  44fc94:	ldr	w8, [x0]
  44fc98:	mov	x24, x0
  44fc9c:	cmp	w8, w25
  44fca0:	b.ls	44fcb8 <feof@plt+0x4c418>  // b.plast
  44fca4:	mov	w8, w19
  44fca8:	tbnz	w19, #31, 44fcd4 <feof@plt+0x4c434>
  44fcac:	cmp	w8, #0x2
  44fcb0:	b.cc	44fc24 <feof@plt+0x4c384>  // b.lo, b.ul, b.last
  44fcb4:	b	44fcec <feof@plt+0x4c44c>
  44fcb8:	ldr	w19, [x22, #24]
  44fcbc:	mov	x0, x21
  44fcc0:	mov	w1, w19
  44fcc4:	bl	44e220 <feof@plt+0x4a980>
  44fcc8:	mov	x24, x0
  44fccc:	mov	w8, w19
  44fcd0:	tbz	w19, #31, 44fcac <feof@plt+0x4c40c>
  44fcd4:	ldr	x8, [x21, #104]
  44fcd8:	and	w9, w19, #0x7fffffff
  44fcdc:	umull	x9, w9, w26
  44fce0:	ldr	w8, [x8, x9]
  44fce4:	cmp	w8, #0x2
  44fce8:	b.cc	44fc24 <feof@plt+0x4c384>  // b.lo, b.ul, b.last
  44fcec:	mov	x0, x21
  44fcf0:	mov	w1, w19
  44fcf4:	bl	44e220 <feof@plt+0x4a980>
  44fcf8:	mov	w23, w19
  44fcfc:	cbnz	x0, 44fd24 <feof@plt+0x4c484>
  44fd00:	b	44fc2c <feof@plt+0x4c38c>
  44fd04:	ldr	x9, [x0, #16]
  44fd08:	sub	w8, w23, w8
  44fd0c:	lsl	w8, w8, #1
  44fd10:	mov	x0, x21
  44fd14:	ldr	w23, [x9, w8, uxtw #2]
  44fd18:	mov	w1, w23
  44fd1c:	bl	44e220 <feof@plt+0x4a980>
  44fd20:	cbz	x0, 44fc2c <feof@plt+0x4c38c>
  44fd24:	ldr	w8, [x0]
  44fd28:	lsr	w9, w8, #28
  44fd2c:	cmp	w9, #0x6
  44fd30:	b.ls	44fc2c <feof@plt+0x4c38c>  // b.plast
  44fd34:	tbz	w23, #31, 44fd04 <feof@plt+0x4c464>
  44fd38:	ldr	x9, [x21, #104]
  44fd3c:	and	w10, w23, #0x7fffffff
  44fd40:	umull	x10, w10, w26
  44fd44:	ldr	w23, [x9, x10]
  44fd48:	b	44fd04 <feof@plt+0x4c464>
  44fd4c:	cbz	x20, 44fd54 <feof@plt+0x4c4b4>
  44fd50:	str	x22, [x20]
  44fd54:	mov	w0, w19
  44fd58:	ldp	x20, x19, [sp, #64]
  44fd5c:	ldp	x22, x21, [sp, #48]
  44fd60:	ldp	x24, x23, [sp, #32]
  44fd64:	ldp	x26, x25, [sp, #16]
  44fd68:	ldp	x29, x30, [sp], #80
  44fd6c:	ret
  44fd70:	stp	x29, x30, [sp, #-16]!
  44fd74:	movi	v0.2d, #0x0
  44fd78:	mov	x29, sp
  44fd7c:	stp	q0, q0, [x8]
  44fd80:	tbnz	w2, #31, 44fd94 <feof@plt+0x4c4f4>
  44fd84:	cmp	w2, #0x2
  44fd88:	b.cs	44fdb8 <feof@plt+0x4c518>  // b.hs, b.nlast
  44fd8c:	ldp	x29, x30, [sp], #16
  44fd90:	ret
  44fd94:	ldr	x9, [x0, #104]
  44fd98:	and	w10, w2, #0x7fffffff
  44fd9c:	mov	w11, #0x18                  	// #24
  44fda0:	umaddl	x9, w10, w11, x9
  44fda4:	ldr	x10, [x9, #16]
  44fda8:	str	x10, [x8, #16]
  44fdac:	ldr	w2, [x9]
  44fdb0:	cmp	w2, #0x2
  44fdb4:	b.cc	44fd8c <feof@plt+0x4c4ec>  // b.lo, b.ul, b.last
  44fdb8:	cbz	x1, 44fe38 <feof@plt+0x4c598>
  44fdbc:	mov	w9, w2
  44fdc0:	tbz	w2, #31, 44fdd8 <feof@plt+0x4c538>
  44fdc4:	ldr	x9, [x0, #104]
  44fdc8:	and	w10, w2, #0x7fffffff
  44fdcc:	mov	w11, #0x18                  	// #24
  44fdd0:	umull	x10, w10, w11
  44fdd4:	ldr	w9, [x9, x10]
  44fdd8:	lsr	w10, w9, #28
  44fddc:	cmp	w10, #0x7
  44fde0:	b.cc	44fde8 <feof@plt+0x4c548>  // b.lo, b.ul, b.last
  44fde4:	tbz	w9, #31, 44fe50 <feof@plt+0x4c5b0>
  44fde8:	ldr	x9, [x1, #8]
  44fdec:	mov	w11, #0xffffffff            	// #-1
  44fdf0:	str	x9, [x8]
  44fdf4:	ldr	w9, [x1]
  44fdf8:	ldrh	w10, [x1, #6]
  44fdfc:	ldr	w12, [x1, #16]
  44fe00:	sub	w9, w2, w9
  44fe04:	lsl	w11, w11, w10
  44fe08:	bic	w11, w9, w11
  44fe0c:	lsr	w9, w9, w10
  44fe10:	lsr	x10, x10, #8
  44fe14:	add	w9, w9, w12
  44fe18:	lsr	w10, w11, w10
  44fe1c:	stp	w9, w10, [x8, #8]
  44fe20:	ldrb	w9, [x1, #5]
  44fe24:	cmp	w9, #0x0
  44fe28:	cset	w9, ne  // ne = any
  44fe2c:	strb	w9, [x8, #24]
  44fe30:	ldp	x29, x30, [sp], #16
  44fe34:	ret
  44fe38:	adrp	x0, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44fe3c:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44fe40:	add	x0, x0, #0xe70
  44fe44:	add	x2, x2, #0xebb
  44fe48:	mov	w1, #0x6bd                 	// #1725
  44fe4c:	bl	429434 <feof@plt+0x25b94>
  44fe50:	adrp	x0, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44fe54:	adrp	x2, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44fe58:	add	x0, x0, #0xe70
  44fe5c:	add	x2, x2, #0xebb
  44fe60:	mov	w1, #0x6c5                 	// #1733
  44fe64:	bl	429434 <feof@plt+0x25b94>
  44fe68:	sub	sp, sp, #0x60
  44fe6c:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  44fe70:	adrp	x9, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  44fe74:	add	x8, x8, #0xa6b
  44fe78:	add	x9, x9, #0xa74
  44fe7c:	stp	x29, x30, [sp, #48]
  44fe80:	stp	x22, x21, [sp, #64]
  44fe84:	stp	x20, x19, [sp, #80]
  44fe88:	stp	x8, x9, [sp, #8]
  44fe8c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  44fe90:	ldr	x8, [x8, #1096]
  44fe94:	adrp	x10, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  44fe98:	adrp	x11, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  44fe9c:	adrp	x9, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44fea0:	cmp	x0, #0x0
  44fea4:	mov	x20, x1
  44fea8:	add	x10, x10, #0xa7d
  44feac:	add	x11, x11, #0xa87
  44feb0:	add	x9, x9, #0xed3
  44feb4:	csel	x19, x8, x0, eq  // eq = none
  44feb8:	add	x29, sp, #0x30
  44febc:	stp	x10, x11, [sp, #24]
  44fec0:	str	x9, [sp, #40]
  44fec4:	tbz	w3, #0, 44ff1c <feof@plt+0x4c67c>
  44fec8:	ldr	x8, [x20, #24]
  44fecc:	sxtw	x9, w2
  44fed0:	adrp	x1, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44fed4:	adrp	x5, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44fed8:	add	x20, x8, x9, lsl #5
  44fedc:	ldr	w4, [x20]
  44fee0:	adrp	x6, 484000 <_obstack_memory_used@@Base+0x82fc>
  44fee4:	add	x1, x1, #0xee2
  44fee8:	add	x5, x5, #0xed3
  44feec:	add	x6, x6, #0x7b9
  44fef0:	mov	x0, x19
  44fef4:	mov	x3, x20
  44fef8:	bl	4030d0 <fprintf@plt>
  44fefc:	ldr	x8, [x20, #8]
  44ff00:	ldr	w3, [x20, #4]
  44ff04:	adrp	x1, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44ff08:	add	x1, x1, #0xf40
  44ff0c:	ldr	x2, [x8]
  44ff10:	mov	x0, x19
  44ff14:	bl	4030d0 <fprintf@plt>
  44ff18:	b	450094 <feof@plt+0x4c7f4>
  44ff1c:	ldr	x8, [x20]
  44ff20:	mov	w9, #0x18                  	// #24
  44ff24:	smaddl	x21, w2, w9, x8
  44ff28:	ldrb	w8, [x21, #4]
  44ff2c:	ldr	w4, [x21]
  44ff30:	cmp	x8, #0x4
  44ff34:	b.hi	44ff44 <feof@plt+0x4c6a4>  // b.pmore
  44ff38:	add	x9, sp, #0x8
  44ff3c:	ldr	x5, [x9, x8, lsl #3]
  44ff40:	b	44ff4c <feof@plt+0x4c6ac>
  44ff44:	adrp	x5, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  44ff48:	add	x5, x5, #0xe8b
  44ff4c:	ldrb	w8, [x21, #5]
  44ff50:	adrp	x9, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44ff54:	adrp	x10, 484000 <_obstack_memory_used@@Base+0x82fc>
  44ff58:	add	x9, x9, #0xf12
  44ff5c:	add	x10, x10, #0x7b9
  44ff60:	cmp	w8, #0x0
  44ff64:	adrp	x1, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  44ff68:	csel	x6, x10, x9, eq  // eq = none
  44ff6c:	add	x1, x1, #0xee2
  44ff70:	mov	x0, x19
  44ff74:	mov	x3, x21
  44ff78:	bl	4030d0 <fprintf@plt>
  44ff7c:	ldr	w8, [x21, #20]
  44ff80:	tbnz	w8, #31, 44ff94 <feof@plt+0x4c6f4>
  44ff84:	cmp	w8, #0x2
  44ff88:	b.cs	44ffb0 <feof@plt+0x4c710>  // b.hs, b.nlast
  44ff8c:	mov	x22, xzr
  44ff90:	b	45003c <feof@plt+0x4c79c>
  44ff94:	ldr	x9, [x20, #104]
  44ff98:	and	x8, x8, #0x7fffffff
  44ff9c:	mov	w10, #0x18                  	// #24
  44ffa0:	mul	x8, x8, x10
  44ffa4:	ldr	w8, [x9, x8]
  44ffa8:	cmp	w8, #0x2
  44ffac:	b.cc	44ff8c <feof@plt+0x4c6ec>  // b.lo, b.ul, b.last
  44ffb0:	ldrsw	x10, [x20, #16]
  44ffb4:	ldr	x9, [x20]
  44ffb8:	mov	w11, #0x18                  	// #24
  44ffbc:	madd	x22, x10, x11, x9
  44ffc0:	ldr	w11, [x22]
  44ffc4:	cmp	w8, w11
  44ffc8:	b.cs	44ffd4 <feof@plt+0x4c734>  // b.hs, b.nlast
  44ffcc:	mov	w11, wzr
  44ffd0:	b	44fff8 <feof@plt+0x4c758>
  44ffd4:	ldr	w12, [x20, #12]
  44ffd8:	add	w11, w10, #0x1
  44ffdc:	cmp	w11, w12
  44ffe0:	b.eq	45003c <feof@plt+0x4c79c>  // b.none
  44ffe4:	ldr	w11, [x22, #24]
  44ffe8:	cmp	w8, w11
  44ffec:	mov	w11, w10
  44fff0:	mov	w10, w12
  44fff4:	b.cc	45003c <feof@plt+0x4c79c>  // b.lo, b.ul, b.last
  44fff8:	sub	w12, w10, w11
  44fffc:	cmp	w12, #0x2
  450000:	b.cc	450030 <feof@plt+0x4c790>  // b.lo, b.ul, b.last
  450004:	mov	w12, #0x18                  	// #24
  450008:	add	w13, w11, w10
  45000c:	lsr	w13, w13, #1
  450010:	umull	x14, w13, w12
  450014:	ldr	w14, [x9, x14]
  450018:	cmp	w14, w8
  45001c:	csel	w11, w11, w13, hi  // hi = pmore
  450020:	csel	w10, w13, w10, hi  // hi = pmore
  450024:	sub	w13, w10, w11
  450028:	cmp	w13, #0x1
  45002c:	b.hi	450008 <feof@plt+0x4c768>  // b.pmore
  450030:	mov	w8, #0x18                  	// #24
  450034:	smaddl	x22, w11, w8, x9
  450038:	str	w11, [x20, #16]
  45003c:	ldr	x2, [x21, #8]
  450040:	ldr	w3, [x21, #16]
  450044:	adrp	x1, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  450048:	add	x1, x1, #0xf16
  45004c:	mov	x0, x19
  450050:	bl	4030d0 <fprintf@plt>
  450054:	cbz	x22, 450078 <feof@plt+0x4c7d8>
  450058:	ldr	x8, [x20]
  45005c:	ldr	x3, [x22, #8]
  450060:	mov	w9, #0xaaab                	// #43691
  450064:	movk	w9, #0xaaaa, lsl #16
  450068:	sub	x8, x22, x8
  45006c:	lsr	x8, x8, #3
  450070:	mul	w2, w8, w9
  450074:	b	450084 <feof@plt+0x4c7e4>
  450078:	adrp	x3, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  45007c:	add	x3, x3, #0xf3b
  450080:	mov	w2, #0xffffffff            	// #-1
  450084:	adrp	x1, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  450088:	add	x1, x1, #0xf23
  45008c:	mov	x0, x19
  450090:	bl	4030d0 <fprintf@plt>
  450094:	mov	x1, x19
  450098:	ldp	x20, x19, [sp, #80]
  45009c:	ldp	x22, x21, [sp, #64]
  4500a0:	ldp	x29, x30, [sp, #48]
  4500a4:	mov	w0, #0xa                   	// #10
  4500a8:	add	sp, sp, #0x60
  4500ac:	b	403480 <fputc@plt>
  4500b0:	sub	sp, sp, #0x70
  4500b4:	stp	x22, x21, [sp, #80]
  4500b8:	stp	x20, x19, [sp, #96]
  4500bc:	mov	x19, x2
  4500c0:	mov	w20, w1
  4500c4:	mov	x22, x0
  4500c8:	stp	x29, x30, [sp, #32]
  4500cc:	str	x25, [sp, #48]
  4500d0:	stp	x24, x23, [sp, #64]
  4500d4:	add	x29, sp, #0x20
  4500d8:	tbz	w1, #31, 4500f0 <feof@plt+0x4c850>
  4500dc:	ldr	x8, [x22, #104]
  4500e0:	and	w9, w20, #0x7fffffff
  4500e4:	mov	w10, #0x18                  	// #24
  4500e8:	umull	x9, w9, w10
  4500ec:	ldr	w20, [x8, x9]
  4500f0:	cbz	w20, 450320 <feof@plt+0x4ca80>
  4500f4:	mov	w8, w20
  4500f8:	tbnz	w20, #31, 45012c <feof@plt+0x4c88c>
  4500fc:	cmp	w8, #0x2
  450100:	b.cs	450148 <feof@plt+0x4c8a8>  // b.hs, b.nlast
  450104:	adrp	x21, 48f000 <_obstack_memory_used@@Base+0x132fc>
  450108:	add	x21, x21, #0x23b
  45010c:	mov	x7, xzr
  450110:	mov	w4, #0xffffffff            	// #-1
  450114:	mov	w24, w20
  450118:	mov	w5, #0xffffffff            	// #-1
  45011c:	mov	w6, #0xffffffff            	// #-1
  450120:	mov	x3, x21
  450124:	mov	w8, #0xffffffff            	// #-1
  450128:	b	450300 <feof@plt+0x4ca60>
  45012c:	ldr	x8, [x22, #104]
  450130:	and	w9, w20, #0x7fffffff
  450134:	mov	w10, #0x18                  	// #24
  450138:	umull	x9, w9, w10
  45013c:	ldr	w8, [x8, x9]
  450140:	cmp	w8, #0x2
  450144:	b.cc	450104 <feof@plt+0x4c864>  // b.lo, b.ul, b.last
  450148:	adrp	x21, 48f000 <_obstack_memory_used@@Base+0x132fc>
  45014c:	mov	w25, #0x18                  	// #24
  450150:	add	x21, x21, #0x23b
  450154:	mov	w24, w20
  450158:	mov	w23, w24
  45015c:	tbz	w24, #31, 450170 <feof@plt+0x4c8d0>
  450160:	ldr	x8, [x22, #104]
  450164:	and	w9, w24, #0x7fffffff
  450168:	umull	x9, w9, w25
  45016c:	ldr	w23, [x8, x9]
  450170:	mov	x0, x22
  450174:	mov	w1, w23
  450178:	bl	44e220 <feof@plt+0x4a980>
  45017c:	mov	x7, x0
  450180:	cbz	x0, 4501b4 <feof@plt+0x4c914>
  450184:	ldr	w8, [x7]
  450188:	lsr	w9, w8, #28
  45018c:	cmp	w9, #0x7
  450190:	b.cc	4501cc <feof@plt+0x4c92c>  // b.lo, b.ul, b.last
  450194:	ldr	x9, [x7, #16]
  450198:	sub	w8, w23, w8
  45019c:	mov	w10, #0x1                   	// #1
  4501a0:	bfi	w10, w8, #1, #31
  4501a4:	ldr	w24, [x9, w10, uxtw #2]
  4501a8:	mov	w23, w24
  4501ac:	tbz	w24, #31, 450170 <feof@plt+0x4c8d0>
  4501b0:	b	450160 <feof@plt+0x4c8c0>
  4501b4:	mov	w4, #0xffffffff            	// #-1
  4501b8:	mov	x3, x21
  4501bc:	mov	w5, #0xffffffff            	// #-1
  4501c0:	mov	w6, #0xffffffff            	// #-1
  4501c4:	mov	w8, #0xffffffff            	// #-1
  4501c8:	b	450300 <feof@plt+0x4ca60>
  4501cc:	ldrb	w8, [x7, #5]
  4501d0:	ldr	w9, [x7]
  4501d4:	ldrh	w10, [x7, #6]
  4501d8:	ldr	w11, [x7, #16]
  4501dc:	ldr	x21, [x7, #8]
  4501e0:	cmp	w8, #0x0
  4501e4:	mov	w8, #0xffffffff            	// #-1
  4501e8:	sub	w9, w24, w9
  4501ec:	lsl	w8, w8, w10
  4501f0:	bic	w8, w9, w8
  4501f4:	lsr	w9, w9, w10
  4501f8:	lsr	x10, x10, #8
  4501fc:	cset	w6, ne  // ne = any
  450200:	cmp	w24, w20
  450204:	add	w4, w9, w11
  450208:	lsr	w5, w8, w10
  45020c:	cset	w8, ne  // ne = any
  450210:	b.eq	450224 <feof@plt+0x4c984>  // b.none
  450214:	adrp	x3, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  450218:	mov	w8, #0x1                   	// #1
  45021c:	add	x3, x3, #0xf57
  450220:	b	450300 <feof@plt+0x4ca60>
  450224:	ldr	w9, [x7, #20]
  450228:	tbz	w9, #31, 450240 <feof@plt+0x4c9a0>
  45022c:	ldr	x10, [x22, #104]
  450230:	and	x9, x9, #0x7fffffff
  450234:	mov	w11, #0x18                  	// #24
  450238:	mul	x9, x9, x11
  45023c:	ldr	w9, [x10, x9]
  450240:	adrp	x3, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  450244:	add	x3, x3, #0xf5b
  450248:	cbz	x22, 450278 <feof@plt+0x4c9d8>
  45024c:	cmp	w9, #0x2
  450250:	b.cc	450278 <feof@plt+0x4c9d8>  // b.lo, b.ul, b.last
  450254:	ldrsw	x11, [x22, #16]
  450258:	ldr	x10, [x22]
  45025c:	mov	w12, #0x18                  	// #24
  450260:	madd	x13, x11, x12, x10
  450264:	ldr	w12, [x13]
  450268:	cmp	w9, w12
  45026c:	b.cs	450280 <feof@plt+0x4c9e0>  // b.hs, b.nlast
  450270:	mov	w12, wzr
  450274:	b	4502a4 <feof@plt+0x4ca04>
  450278:	mov	w8, wzr
  45027c:	b	4502fc <feof@plt+0x4ca5c>
  450280:	ldr	w14, [x22, #12]
  450284:	add	w12, w11, #0x1
  450288:	cmp	w12, w14
  45028c:	b.eq	4502e8 <feof@plt+0x4ca48>  // b.none
  450290:	ldr	w12, [x13, #24]
  450294:	cmp	w9, w12
  450298:	mov	w12, w11
  45029c:	mov	w11, w14
  4502a0:	b.cc	4502ec <feof@plt+0x4ca4c>  // b.lo, b.ul, b.last
  4502a4:	sub	w13, w11, w12
  4502a8:	cmp	w13, #0x2
  4502ac:	b.cc	4502dc <feof@plt+0x4ca3c>  // b.lo, b.ul, b.last
  4502b0:	mov	w13, #0x18                  	// #24
  4502b4:	add	w14, w12, w11
  4502b8:	lsr	w14, w14, #1
  4502bc:	umull	x15, w14, w13
  4502c0:	ldr	w15, [x10, x15]
  4502c4:	cmp	w15, w9
  4502c8:	csel	w12, w12, w14, hi  // hi = pmore
  4502cc:	csel	w11, w14, w11, hi  // hi = pmore
  4502d0:	sub	w14, w11, w12
  4502d4:	cmp	w14, #0x1
  4502d8:	b.hi	4502b4 <feof@plt+0x4ca14>  // b.pmore
  4502dc:	mov	w9, #0x18                  	// #24
  4502e0:	smaddl	x13, w12, w9, x10
  4502e4:	str	w12, [x22, #16]
  4502e8:	cbz	x13, 4502f4 <feof@plt+0x4ca54>
  4502ec:	ldr	x3, [x13, #8]
  4502f0:	b	4502fc <feof@plt+0x4ca5c>
  4502f4:	adrp	x3, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  4502f8:	add	x3, x3, #0xf5b
  4502fc:	mov	w24, w20
  450300:	adrp	x1, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  450304:	add	x1, x1, #0xf62
  450308:	mov	x0, x19
  45030c:	mov	x2, x21
  450310:	str	w24, [sp, #16]
  450314:	str	w20, [sp, #8]
  450318:	str	w8, [sp]
  45031c:	bl	4030d0 <fprintf@plt>
  450320:	ldp	x20, x19, [sp, #96]
  450324:	ldp	x22, x21, [sp, #80]
  450328:	ldp	x24, x23, [sp, #64]
  45032c:	ldr	x25, [sp, #48]
  450330:	ldp	x29, x30, [sp, #32]
  450334:	add	sp, sp, #0x70
  450338:	ret
  45033c:	stp	x29, x30, [sp, #-64]!
  450340:	stp	x24, x23, [sp, #16]
  450344:	stp	x22, x21, [sp, #32]
  450348:	stp	x20, x19, [sp, #48]
  45034c:	mov	x29, sp
  450350:	cbz	x0, 4503bc <feof@plt+0x4cb1c>
  450354:	ldr	w22, [x0, #12]
  450358:	mov	x20, x0
  45035c:	cbz	w22, 4503b8 <feof@plt+0x4cb18>
  450360:	cmp	w22, #0x1
  450364:	b.mi	4503b8 <feof@plt+0x4cb18>  // b.first
  450368:	mov	x19, x2
  45036c:	mov	x21, x1
  450370:	mov	w23, #0x18                  	// #24
  450374:	b	450384 <feof@plt+0x4cae4>
  450378:	cmp	w22, #0x2
  45037c:	mov	w22, w24
  450380:	b.mi	4503b8 <feof@plt+0x4cb18>  // b.first
  450384:	ldr	x8, [x20]
  450388:	sub	w24, w22, #0x1
  45038c:	umaddl	x8, w24, w23, x8
  450390:	ldr	x0, [x8, #8]
  450394:	cbz	x0, 450378 <feof@plt+0x4cad8>
  450398:	mov	x1, x21
  45039c:	bl	479ca4 <feof@plt+0x76404>
  4503a0:	cbnz	w0, 450378 <feof@plt+0x4cad8>
  4503a4:	ldr	w8, [x20, #12]
  4503a8:	cmp	w8, w22
  4503ac:	b.ne	4503d0 <feof@plt+0x4cb30>  // b.any
  4503b0:	ldr	w8, [x20, #56]
  4503b4:	b	4503e4 <feof@plt+0x4cb44>
  4503b8:	mov	w0, wzr
  4503bc:	ldp	x20, x19, [sp, #48]
  4503c0:	ldp	x22, x21, [sp, #32]
  4503c4:	ldp	x24, x23, [sp, #16]
  4503c8:	ldp	x29, x30, [sp], #64
  4503cc:	ret
  4503d0:	ldr	x8, [x20]
  4503d4:	mov	w9, #0x18                  	// #24
  4503d8:	smull	x9, w22, w9
  4503dc:	ldr	w8, [x8, x9]
  4503e0:	sub	w8, w8, #0x1
  4503e4:	mov	w0, #0x1                   	// #1
  4503e8:	str	w8, [x19]
  4503ec:	b	4503bc <feof@plt+0x4cb1c>
  4503f0:	ldp	w9, w11, [x0, #8]
  4503f4:	ldp	w10, w8, [x0, #32]
  4503f8:	ldr	x16, [x0, #24]
  4503fc:	add	x12, x9, x9, lsl #1
  450400:	add	x14, x11, x11, lsl #1
  450404:	lsl	x13, x12, #3
  450408:	lsl	x12, x14, #3
  45040c:	lsl	x10, x10, #5
  450410:	cbz	x16, 450428 <feof@plt+0x4cb88>
  450414:	sub	w14, w8, #0x1
  450418:	sxtw	x14, w14
  45041c:	add	x17, x16, x14, lsl #5
  450420:	cmp	x16, x17
  450424:	b.ls	450478 <feof@plt+0x4cbd8>  // b.plast
  450428:	mov	x14, xzr
  45042c:	mov	x15, xzr
  450430:	stp	x9, x11, [x1]
  450434:	stp	x13, x12, [x1, #16]
  450438:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  45043c:	ldr	w9, [x9, #448]
  450440:	adrp	x11, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  450444:	str	x9, [x1, #32]
  450448:	ldr	w9, [x11, #452]
  45044c:	lsl	x11, x8, #5
  450450:	stp	x10, x11, [x1, #56]
  450454:	stp	x14, x15, [x1, #72]
  450458:	stp	x9, x8, [x1, #40]
  45045c:	ldr	w8, [x0, #100]
  450460:	add	x8, x8, x8, lsl #1
  450464:	lsl	x8, x8, #3
  450468:	str	x8, [x1, #88]
  45046c:	ldr	w8, [x0, #96]
  450470:	str	x8, [x1, #96]
  450474:	ret
  450478:	mov	x14, xzr
  45047c:	mov	x15, xzr
  450480:	b	450490 <feof@plt+0x4cbf0>
  450484:	add	x16, x16, #0x20
  450488:	cmp	x16, x17
  45048c:	b.hi	450430 <feof@plt+0x4cb90>  // b.pmore
  450490:	ldr	w18, [x16, #4]
  450494:	lsl	w18, w18, #1
  450498:	add	x14, x14, w18, uxtw #2
  45049c:	cbz	w18, 450484 <feof@plt+0x4cbe4>
  4504a0:	ldr	x2, [x16, #16]
  4504a4:	mov	x3, xzr
  4504a8:	add	x4, x2, x3, lsl #2
  4504ac:	ldp	w5, w4, [x4]
  4504b0:	add	x6, x15, #0x4
  4504b4:	add	x3, x3, #0x2
  4504b8:	cmp	w5, w4
  4504bc:	csel	x15, x6, x15, eq  // eq = none
  4504c0:	cmp	x3, x18
  4504c4:	b.cc	4504a8 <feof@plt+0x4cc08>  // b.lo, b.ul, b.last
  4504c8:	b	450484 <feof@plt+0x4cbe4>
  4504cc:	stp	x29, x30, [sp, #-96]!
  4504d0:	stp	x28, x27, [sp, #16]
  4504d4:	stp	x26, x25, [sp, #32]
  4504d8:	stp	x24, x23, [sp, #48]
  4504dc:	stp	x22, x21, [sp, #64]
  4504e0:	stp	x20, x19, [sp, #80]
  4504e4:	mov	x29, sp
  4504e8:	cbz	x1, 45068c <feof@plt+0x4cdec>
  4504ec:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4504f0:	ldr	x8, [x8, #1096]
  4504f4:	mov	w22, w2
  4504f8:	ldr	w2, [x1, #12]
  4504fc:	cmp	x0, #0x0
  450500:	mov	x20, x1
  450504:	csel	x21, x8, x0, eq  // eq = none
  450508:	adrp	x1, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  45050c:	add	x1, x1, #0xf93
  450510:	mov	x0, x21
  450514:	mov	w19, w3
  450518:	bl	4030d0 <fprintf@plt>
  45051c:	ldr	w2, [x20, #36]
  450520:	adrp	x1, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  450524:	add	x1, x1, #0xfac
  450528:	mov	x0, x21
  45052c:	bl	4030d0 <fprintf@plt>
  450530:	ldr	w2, [x20, #48]
  450534:	adrp	x1, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  450538:	add	x1, x1, #0xfc5
  45053c:	mov	x0, x21
  450540:	bl	4030d0 <fprintf@plt>
  450544:	ldr	w2, [x20, #56]
  450548:	adrp	x1, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  45054c:	add	x1, x1, #0xfde
  450550:	mov	x0, x21
  450554:	bl	4030d0 <fprintf@plt>
  450558:	cbz	w22, 4505b0 <feof@plt+0x4cd10>
  45055c:	adrp	x0, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  450560:	add	x0, x0, #0xff7
  450564:	mov	w1, #0x14                  	// #20
  450568:	mov	w2, #0x1                   	// #1
  45056c:	mov	x3, x21
  450570:	bl	403760 <fwrite@plt>
  450574:	mov	w23, wzr
  450578:	ldr	w8, [x20, #12]
  45057c:	cmp	w23, w8
  450580:	b.cs	4505a4 <feof@plt+0x4cd04>  // b.hs, b.nlast
  450584:	mov	x0, x21
  450588:	mov	x1, x20
  45058c:	mov	w2, w23
  450590:	mov	w3, wzr
  450594:	bl	44fe68 <feof@plt+0x4c5c8>
  450598:	add	w23, w23, #0x1
  45059c:	cmp	w22, w23
  4505a0:	b.ne	450578 <feof@plt+0x4ccd8>  // b.any
  4505a4:	mov	w0, #0xa                   	// #10
  4505a8:	mov	x1, x21
  4505ac:	bl	403480 <fputc@plt>
  4505b0:	cbz	w19, 45068c <feof@plt+0x4cdec>
  4505b4:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4505b8:	add	x0, x0, #0xc
  4505bc:	mov	w1, #0x11                  	// #17
  4505c0:	mov	w2, #0x1                   	// #1
  4505c4:	mov	x3, x21
  4505c8:	bl	403760 <fwrite@plt>
  4505cc:	adrp	x23, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  4505d0:	adrp	x24, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  4505d4:	adrp	x25, 484000 <_obstack_memory_used@@Base+0x82fc>
  4505d8:	adrp	x26, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  4505dc:	mov	w22, wzr
  4505e0:	add	x23, x23, #0xee2
  4505e4:	add	x24, x24, #0xed3
  4505e8:	add	x25, x25, #0x7b9
  4505ec:	add	x26, x26, #0xf40
  4505f0:	ldr	w8, [x20, #36]
  4505f4:	cmp	w22, w8
  4505f8:	b.cs	450668 <feof@plt+0x4cdc8>  // b.hs, b.nlast
  4505fc:	ldr	x8, [x20, #24]
  450600:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  450604:	ldr	x9, [x9, #1096]
  450608:	sxtw	x10, w22
  45060c:	add	x27, x8, x10, lsl #5
  450610:	ldr	w4, [x27]
  450614:	cmp	x21, #0x0
  450618:	csel	x28, x9, x21, eq  // eq = none
  45061c:	mov	x0, x28
  450620:	mov	x1, x23
  450624:	mov	w2, w22
  450628:	mov	x3, x27
  45062c:	mov	x5, x24
  450630:	mov	x6, x25
  450634:	bl	4030d0 <fprintf@plt>
  450638:	ldr	x8, [x27, #8]
  45063c:	ldr	w3, [x27, #4]
  450640:	mov	x0, x28
  450644:	mov	x1, x26
  450648:	ldr	x2, [x8]
  45064c:	bl	4030d0 <fprintf@plt>
  450650:	mov	w0, #0xa                   	// #10
  450654:	mov	x1, x28
  450658:	bl	403480 <fputc@plt>
  45065c:	add	w22, w22, #0x1
  450660:	cmp	w19, w22
  450664:	b.ne	4505f0 <feof@plt+0x4cd50>  // b.any
  450668:	mov	x1, x21
  45066c:	ldp	x20, x19, [sp, #80]
  450670:	ldp	x22, x21, [sp, #64]
  450674:	ldp	x24, x23, [sp, #48]
  450678:	ldp	x26, x25, [sp, #32]
  45067c:	ldp	x28, x27, [sp, #16]
  450680:	mov	w0, #0xa                   	// #10
  450684:	ldp	x29, x30, [sp], #96
  450688:	b	403480 <fputc@plt>
  45068c:	ldp	x20, x19, [sp, #80]
  450690:	ldp	x22, x21, [sp, #64]
  450694:	ldp	x24, x23, [sp, #48]
  450698:	ldp	x26, x25, [sp, #32]
  45069c:	ldp	x28, x27, [sp, #16]
  4506a0:	ldp	x29, x30, [sp], #96
  4506a4:	ret
  4506a8:	mov	w8, #0x1                   	// #1
  4506ac:	str	x1, [x0]
  4506b0:	str	wzr, [x0, #64]
  4506b4:	str	xzr, [x0, #72]
  4506b8:	str	wzr, [x0, #80]
  4506bc:	strb	wzr, [x0, #84]
  4506c0:	str	wzr, [x0, #120]
  4506c4:	str	wzr, [x0, #144]
  4506c8:	str	xzr, [x0, #152]
  4506cc:	strh	wzr, [x0, #160]
  4506d0:	stp	w2, wzr, [x0, #16]
  4506d4:	str	w8, [x0, #8]
  4506d8:	str	x3, [x0, #24]
  4506dc:	ret
  4506e0:	stp	x29, x30, [sp, #-64]!
  4506e4:	stp	x22, x21, [sp, #32]
  4506e8:	stp	x20, x19, [sp, #48]
  4506ec:	ldrsw	x8, [x0, #8]
  4506f0:	mov	x19, x3
  4506f4:	mov	w20, w2
  4506f8:	mov	w21, w1
  4506fc:	mov	x22, x0
  450700:	add	w9, w8, #0x1
  450704:	cmp	w8, #0x2
  450708:	str	x23, [sp, #16]
  45070c:	mov	x29, sp
  450710:	str	w9, [x0, #8]
  450714:	b.gt	450728 <feof@plt+0x4ce88>
  450718:	add	x8, x22, x8, lsl #4
  45071c:	stp	w21, w20, [x8, #16]
  450720:	add	x8, x8, #0x18
  450724:	b	450770 <feof@plt+0x4ced0>
  450728:	ldr	x0, [x22, #72]
  45072c:	sub	w23, w8, #0x3
  450730:	cbz	x0, 450754 <feof@plt+0x4ceb4>
  450734:	ldrsw	x8, [x22, #64]
  450738:	cmp	w23, w8
  45073c:	b.lt	450768 <feof@plt+0x4cec8>  // b.tstop
  450740:	lsl	w9, w8, #1
  450744:	lsl	x1, x8, #5
  450748:	str	w9, [x22, #64]
  45074c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  450750:	b	450764 <feof@plt+0x4cec4>
  450754:	mov	w8, #0x10                  	// #16
  450758:	mov	w0, #0x100                 	// #256
  45075c:	str	w8, [x22, #64]
  450760:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  450764:	str	x0, [x22, #72]
  450768:	add	x8, x0, w23, uxtw #4
  45076c:	stp	w21, w20, [x8], #8
  450770:	str	x19, [x8]
  450774:	ldp	x20, x19, [sp, #48]
  450778:	ldp	x22, x21, [sp, #32]
  45077c:	ldr	x23, [sp, #16]
  450780:	ldp	x29, x30, [sp], #64
  450784:	ret
  450788:	stp	x29, x30, [sp, #-48]!
  45078c:	stp	x20, x19, [sp, #32]
  450790:	ldr	w8, [x0, #120]
  450794:	mov	x19, x0
  450798:	str	x21, [sp, #16]
  45079c:	mov	x29, sp
  4507a0:	cbz	w8, 450800 <feof@plt+0x4cf60>
  4507a4:	mov	w21, wzr
  4507a8:	b	4507b8 <feof@plt+0x4cf18>
  4507ac:	add	w21, w21, #0x1
  4507b0:	cmp	w21, w8
  4507b4:	b.cs	450800 <feof@plt+0x4cf60>  // b.hs, b.nlast
  4507b8:	cmp	w21, #0x1
  4507bc:	b.gt	4507d4 <feof@plt+0x4cf34>
  4507c0:	add	x9, x19, w21, sxtw #3
  4507c4:	add	x9, x9, #0x80
  4507c8:	ldr	x20, [x9]
  4507cc:	cbnz	x20, 4507e8 <feof@plt+0x4cf48>
  4507d0:	b	4507ac <feof@plt+0x4cf0c>
  4507d4:	ldr	x9, [x19, #152]
  4507d8:	sub	w10, w21, #0x2
  4507dc:	add	x9, x9, w10, sxtw #3
  4507e0:	ldr	x20, [x9]
  4507e4:	cbz	x20, 4507ac <feof@plt+0x4cf0c>
  4507e8:	ldr	x0, [x20, #8]
  4507ec:	bl	4031d0 <free@plt>
  4507f0:	mov	x0, x20
  4507f4:	bl	403410 <_ZdlPv@plt>
  4507f8:	ldr	w8, [x19, #120]
  4507fc:	b	4507ac <feof@plt+0x4cf0c>
  450800:	ldr	x0, [x19, #152]
  450804:	bl	4031d0 <free@plt>
  450808:	ldr	x0, [x19, #72]
  45080c:	ldp	x20, x19, [sp, #32]
  450810:	ldr	x21, [sp, #16]
  450814:	ldp	x29, x30, [sp], #48
  450818:	b	4031d0 <free@plt>
  45081c:	cmp	w1, #0x2
  450820:	b.gt	450830 <feof@plt+0x4cf90>
  450824:	add	x8, x0, w1, sxtw #4
  450828:	ldr	w0, [x8, #16]!
  45082c:	ret
  450830:	ldr	x8, [x0, #72]
  450834:	add	x8, x8, w1, sxtw #4
  450838:	ldr	w0, [x8, #-48]!
  45083c:	ret
  450840:	cmp	w1, #0x2
  450844:	b.gt	450854 <feof@plt+0x4cfb4>
  450848:	add	x8, x0, w1, sxtw #4
  45084c:	add	x0, x8, #0x10
  450850:	ret
  450854:	ldr	x8, [x0, #72]
  450858:	add	x8, x8, w1, sxtw #4
  45085c:	sub	x0, x8, #0x30
  450860:	ret
  450864:	cmp	w1, #0x2
  450868:	b.gt	450878 <feof@plt+0x4cfd8>
  45086c:	add	x8, x0, w1, sxtw #4
  450870:	add	x0, x8, #0x10
  450874:	ret
  450878:	ldr	x8, [x0, #72]
  45087c:	add	x8, x8, w1, sxtw #4
  450880:	sub	x0, x8, #0x30
  450884:	ret
  450888:	sub	sp, sp, #0x40
  45088c:	stp	x20, x19, [sp, #48]
  450890:	mov	x20, x0
  450894:	mov	x19, x8
  450898:	stp	x29, x30, [sp, #32]
  45089c:	add	x29, sp, #0x20
  4508a0:	cbz	w1, 4508b8 <feof@plt+0x4d018>
  4508a4:	cmp	w1, #0x2
  4508a8:	b.gt	45090c <feof@plt+0x4d06c>
  4508ac:	add	x8, x20, w1, sxtw #4
  4508b0:	add	x8, x8, #0x10
  4508b4:	b	450918 <feof@plt+0x4d078>
  4508b8:	ldrb	w8, [x20, #84]
  4508bc:	cbnz	w8, 4508f0 <feof@plt+0x4d050>
  4508c0:	ldr	w0, [x20, #16]
  4508c4:	mov	x8, sp
  4508c8:	mov	w1, wzr
  4508cc:	bl	43799c <feof@plt+0x340fc>
  4508d0:	ldp	q0, q1, [sp]
  4508d4:	ldr	w8, [x20, #80]
  4508d8:	stur	q1, [x20, #104]
  4508dc:	stur	q0, [x20, #88]
  4508e0:	cbz	w8, 4508e8 <feof@plt+0x4d048>
  4508e4:	str	w8, [x20, #100]
  4508e8:	mov	w8, #0x1                   	// #1
  4508ec:	strb	w8, [x20, #84]
  4508f0:	ldur	q0, [x20, #104]
  4508f4:	ldur	q1, [x20, #88]
  4508f8:	stp	q1, q0, [x19]
  4508fc:	ldp	x20, x19, [sp, #48]
  450900:	ldp	x29, x30, [sp, #32]
  450904:	add	sp, sp, #0x40
  450908:	ret
  45090c:	ldr	x8, [x20, #72]
  450910:	add	x8, x8, w1, sxtw #4
  450914:	sub	x8, x8, #0x30
  450918:	ldr	w0, [x8]
  45091c:	mov	x8, x19
  450920:	ldp	x20, x19, [sp, #48]
  450924:	ldp	x29, x30, [sp, #32]
  450928:	mov	w1, wzr
  45092c:	add	sp, sp, #0x40
  450930:	b	43799c <feof@plt+0x340fc>
  450934:	str	w1, [x0, #80]
  450938:	strb	wzr, [x0, #84]
  45093c:	ret
  450940:	stp	x29, x30, [sp, #-48]!
  450944:	stp	x22, x21, [sp, #16]
  450948:	stp	x20, x19, [sp, #32]
  45094c:	ldr	w8, [x0, #8]
  450950:	mov	w19, w3
  450954:	mov	x20, x0
  450958:	mov	w21, w2
  45095c:	cmp	w8, w1
  450960:	mov	x29, sp
  450964:	b.ne	45098c <feof@plt+0x4d0ec>  // b.any
  450968:	add	w8, w1, #0x1
  45096c:	cmp	w1, #0x2
  450970:	str	w8, [x20, #8]
  450974:	b.gt	4509a8 <feof@plt+0x4d108>
  450978:	add	x8, x20, w1, sxtw #4
  45097c:	stp	w21, w19, [x8, #16]
  450980:	str	xzr, [x8, #24]
  450984:	cbnz	w1, 450a10 <feof@plt+0x4d170>
  450988:	b	4509e8 <feof@plt+0x4d148>
  45098c:	cmp	w1, #0x2
  450990:	b.gt	4509d4 <feof@plt+0x4d134>
  450994:	add	x8, x20, w1, sxtw #4
  450998:	add	x8, x8, #0x10
  45099c:	stp	w21, w19, [x8]
  4509a0:	cbnz	w1, 450a10 <feof@plt+0x4d170>
  4509a4:	b	4509e8 <feof@plt+0x4d148>
  4509a8:	ldr	x0, [x20, #72]
  4509ac:	sub	w22, w1, #0x3
  4509b0:	cbz	x0, 4509f0 <feof@plt+0x4d150>
  4509b4:	ldrsw	x8, [x20, #64]
  4509b8:	cmp	w22, w8
  4509bc:	b.lt	450a04 <feof@plt+0x4d164>  // b.tstop
  4509c0:	lsl	w9, w8, #1
  4509c4:	lsl	x1, x8, #5
  4509c8:	str	w9, [x20, #64]
  4509cc:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4509d0:	b	450a00 <feof@plt+0x4d160>
  4509d4:	ldr	x8, [x20, #72]
  4509d8:	add	x8, x8, w1, sxtw #4
  4509dc:	sub	x8, x8, #0x30
  4509e0:	stp	w21, w19, [x8]
  4509e4:	cbnz	w1, 450a10 <feof@plt+0x4d170>
  4509e8:	strb	wzr, [x20, #84]
  4509ec:	b	450a10 <feof@plt+0x4d170>
  4509f0:	mov	w8, #0x10                  	// #16
  4509f4:	mov	w0, #0x100                 	// #256
  4509f8:	str	w8, [x20, #64]
  4509fc:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  450a00:	str	x0, [x20, #72]
  450a04:	add	x8, x0, w22, uxtw #4
  450a08:	stp	w21, w19, [x8]
  450a0c:	str	xzr, [x8, #8]
  450a10:	ldp	x20, x19, [sp, #32]
  450a14:	ldp	x22, x21, [sp, #16]
  450a18:	ldp	x29, x30, [sp], #48
  450a1c:	ret
  450a20:	stp	x29, x30, [sp, #-48]!
  450a24:	stp	x20, x19, [sp, #32]
  450a28:	str	x21, [sp, #16]
  450a2c:	mov	x20, x0
  450a30:	ldr	w21, [x0, #16]
  450a34:	ldr	x0, [x0]
  450a38:	mov	x19, x1
  450a3c:	mov	x29, sp
  450a40:	tbnz	w21, #31, 450a68 <feof@plt+0x4d1c8>
  450a44:	cmp	w21, #0x2
  450a48:	b.cc	450ab0 <feof@plt+0x4d210>  // b.lo, b.ul, b.last
  450a4c:	ldr	w8, [x0, #36]
  450a50:	cbz	w8, 450a80 <feof@plt+0x4d1e0>
  450a54:	ldr	x9, [x0, #24]
  450a58:	sub	w8, w8, #0x1
  450a5c:	sbfiz	x8, x8, #5, #32
  450a60:	ldr	w8, [x9, x8]
  450a64:	b	450a84 <feof@plt+0x4d1e4>
  450a68:	ldr	x8, [x0, #104]
  450a6c:	and	x9, x21, #0x7fffffff
  450a70:	mov	w10, #0x18                  	// #24
  450a74:	madd	x8, x9, x10, x8
  450a78:	ldr	w21, [x8, #4]
  450a7c:	b	450ab0 <feof@plt+0x4d210>
  450a80:	mov	w8, #0x80000000            	// #-2147483648
  450a84:	mov	w9, #0x50000000            	// #1342177280
  450a88:	cmp	w21, w9
  450a8c:	b.hi	450ab0 <feof@plt+0x4d210>  // b.pmore
  450a90:	cmp	w8, w21
  450a94:	b.ls	450ab0 <feof@plt+0x4d210>  // b.plast
  450a98:	mov	w1, w21
  450a9c:	bl	44e220 <feof@plt+0x4a980>
  450aa0:	ldrb	w8, [x0, #7]
  450aa4:	mov	w9, #0xffffffff            	// #-1
  450aa8:	lsl	w8, w9, w8
  450aac:	and	w21, w8, w21
  450ab0:	mov	x0, x20
  450ab4:	mov	w1, w21
  450ab8:	mov	w2, w21
  450abc:	mov	x3, x19
  450ac0:	ldp	x20, x19, [sp, #32]
  450ac4:	ldr	x21, [sp, #16]
  450ac8:	ldp	x29, x30, [sp], #48
  450acc:	b	450b80 <feof@plt+0x4d2e0>
  450ad0:	stp	x29, x30, [sp, #-48]!
  450ad4:	stp	x20, x19, [sp, #32]
  450ad8:	mov	x20, x0
  450adc:	ldr	x0, [x0]
  450ae0:	str	x21, [sp, #16]
  450ae4:	mov	x19, x2
  450ae8:	mov	w21, w1
  450aec:	mov	x29, sp
  450af0:	tbnz	w1, #31, 450b18 <feof@plt+0x4d278>
  450af4:	cmp	w21, #0x2
  450af8:	b.cc	450b60 <feof@plt+0x4d2c0>  // b.lo, b.ul, b.last
  450afc:	ldr	w8, [x0, #36]
  450b00:	cbz	w8, 450b30 <feof@plt+0x4d290>
  450b04:	ldr	x9, [x0, #24]
  450b08:	sub	w8, w8, #0x1
  450b0c:	sbfiz	x8, x8, #5, #32
  450b10:	ldr	w8, [x9, x8]
  450b14:	b	450b34 <feof@plt+0x4d294>
  450b18:	ldr	x8, [x0, #104]
  450b1c:	and	w9, w21, #0x7fffffff
  450b20:	mov	w10, #0x18                  	// #24
  450b24:	umaddl	x8, w9, w10, x8
  450b28:	ldr	w21, [x8, #4]
  450b2c:	b	450b60 <feof@plt+0x4d2c0>
  450b30:	mov	w8, #0x80000000            	// #-2147483648
  450b34:	mov	w9, #0x50000000            	// #1342177280
  450b38:	cmp	w21, w9
  450b3c:	b.hi	450b60 <feof@plt+0x4d2c0>  // b.pmore
  450b40:	cmp	w8, w21
  450b44:	b.ls	450b60 <feof@plt+0x4d2c0>  // b.plast
  450b48:	mov	w1, w21
  450b4c:	bl	44e220 <feof@plt+0x4a980>
  450b50:	ldrb	w8, [x0, #7]
  450b54:	mov	w9, #0xffffffff            	// #-1
  450b58:	lsl	w8, w9, w8
  450b5c:	and	w21, w8, w21
  450b60:	mov	x0, x20
  450b64:	mov	w1, w21
  450b68:	mov	w2, w21
  450b6c:	mov	x3, x19
  450b70:	ldp	x20, x19, [sp, #32]
  450b74:	ldr	x21, [sp, #16]
  450b78:	ldp	x29, x30, [sp], #48
  450b7c:	b	450b80 <feof@plt+0x4d2e0>
  450b80:	sub	sp, sp, #0x80
  450b84:	stp	x29, x30, [sp, #64]
  450b88:	stp	x24, x23, [sp, #80]
  450b8c:	stp	x22, x21, [sp, #96]
  450b90:	stp	x20, x19, [sp, #112]
  450b94:	ldrb	w8, [x0, #160]
  450b98:	add	x29, sp, #0x40
  450b9c:	cbnz	w8, 450f98 <feof@plt+0x4d6f8>
  450ba0:	mov	w8, #0x1                   	// #1
  450ba4:	movk	w8, #0x6000, lsl #16
  450ba8:	mov	x19, x0
  450bac:	mov	w22, w1
  450bb0:	cmp	w1, w8
  450bb4:	b.cs	450c60 <feof@plt+0x4d3c0>  // b.hs, b.nlast
  450bb8:	mov	w21, w2
  450bbc:	cmp	w2, w8
  450bc0:	b.cs	450cc8 <feof@plt+0x4d428>  // b.hs, b.nlast
  450bc4:	add	x8, sp, #0x20
  450bc8:	mov	w1, #0x1                   	// #1
  450bcc:	mov	w0, w22
  450bd0:	mov	x20, x3
  450bd4:	mov	w23, #0x1                   	// #1
  450bd8:	bl	43799c <feof@plt+0x340fc>
  450bdc:	mov	x8, sp
  450be0:	mov	w1, #0x1                   	// #1
  450be4:	mov	w0, w21
  450be8:	bl	43799c <feof@plt+0x340fc>
  450bec:	ldr	x8, [sp, #32]
  450bf0:	ldr	x9, [sp]
  450bf4:	cmp	x8, x9
  450bf8:	b.eq	450d30 <feof@plt+0x4d490>  // b.none
  450bfc:	ldr	w8, [x19, #120]
  450c00:	strb	w23, [x19, #160]
  450c04:	cbz	w8, 450f94 <feof@plt+0x4d6f4>
  450c08:	mov	w21, wzr
  450c0c:	b	450c44 <feof@plt+0x4d3a4>
  450c10:	ldr	x9, [x19, #152]
  450c14:	sub	w10, w21, #0x2
  450c18:	add	x9, x9, w10, sxtw #3
  450c1c:	ldr	x20, [x9]
  450c20:	cbz	x20, 450c38 <feof@plt+0x4d398>
  450c24:	ldr	x0, [x20, #8]
  450c28:	bl	4031d0 <free@plt>
  450c2c:	mov	x0, x20
  450c30:	bl	403410 <_ZdlPv@plt>
  450c34:	ldr	w8, [x19, #120]
  450c38:	add	w21, w21, #0x1
  450c3c:	cmp	w21, w8
  450c40:	b.cs	450f94 <feof@plt+0x4d6f4>  // b.hs, b.nlast
  450c44:	cmp	w21, #0x1
  450c48:	b.gt	450c10 <feof@plt+0x4d370>
  450c4c:	add	x9, x19, w21, sxtw #3
  450c50:	add	x9, x9, #0x80
  450c54:	ldr	x20, [x9]
  450c58:	cbnz	x20, 450c24 <feof@plt+0x4d384>
  450c5c:	b	450c38 <feof@plt+0x4d398>
  450c60:	ldr	w8, [x19, #120]
  450c64:	mov	w9, #0x1                   	// #1
  450c68:	strb	w9, [x19, #160]
  450c6c:	cbz	w8, 450f94 <feof@plt+0x4d6f4>
  450c70:	mov	w21, wzr
  450c74:	b	450cac <feof@plt+0x4d40c>
  450c78:	ldr	x9, [x19, #152]
  450c7c:	sub	w10, w21, #0x2
  450c80:	add	x9, x9, w10, sxtw #3
  450c84:	ldr	x20, [x9]
  450c88:	cbz	x20, 450ca0 <feof@plt+0x4d400>
  450c8c:	ldr	x0, [x20, #8]
  450c90:	bl	4031d0 <free@plt>
  450c94:	mov	x0, x20
  450c98:	bl	403410 <_ZdlPv@plt>
  450c9c:	ldr	w8, [x19, #120]
  450ca0:	add	w21, w21, #0x1
  450ca4:	cmp	w21, w8
  450ca8:	b.cs	450f94 <feof@plt+0x4d6f4>  // b.hs, b.nlast
  450cac:	cmp	w21, #0x1
  450cb0:	b.gt	450c78 <feof@plt+0x4d3d8>
  450cb4:	add	x9, x19, w21, sxtw #3
  450cb8:	add	x9, x9, #0x80
  450cbc:	ldr	x20, [x9]
  450cc0:	cbnz	x20, 450c8c <feof@plt+0x4d3ec>
  450cc4:	b	450ca0 <feof@plt+0x4d400>
  450cc8:	ldr	w8, [x19, #120]
  450ccc:	mov	w9, #0x1                   	// #1
  450cd0:	strb	w9, [x19, #160]
  450cd4:	cbz	w8, 450f94 <feof@plt+0x4d6f4>
  450cd8:	mov	w21, wzr
  450cdc:	b	450d14 <feof@plt+0x4d474>
  450ce0:	ldr	x9, [x19, #152]
  450ce4:	sub	w10, w21, #0x2
  450ce8:	add	x9, x9, w10, sxtw #3
  450cec:	ldr	x20, [x9]
  450cf0:	cbz	x20, 450d08 <feof@plt+0x4d468>
  450cf4:	ldr	x0, [x20, #8]
  450cf8:	bl	4031d0 <free@plt>
  450cfc:	mov	x0, x20
  450d00:	bl	403410 <_ZdlPv@plt>
  450d04:	ldr	w8, [x19, #120]
  450d08:	add	w21, w21, #0x1
  450d0c:	cmp	w21, w8
  450d10:	b.cs	450f94 <feof@plt+0x4d6f4>  // b.hs, b.nlast
  450d14:	cmp	w21, #0x1
  450d18:	b.gt	450ce0 <feof@plt+0x4d440>
  450d1c:	add	x9, x19, w21, sxtw #3
  450d20:	add	x9, x9, #0x80
  450d24:	ldr	x20, [x9]
  450d28:	cbnz	x20, 450cf4 <feof@plt+0x4d454>
  450d2c:	b	450d08 <feof@plt+0x4d468>
  450d30:	ldr	w8, [sp, #40]
  450d34:	ldr	w9, [sp, #8]
  450d38:	cmp	w8, w9
  450d3c:	b.ne	450db8 <feof@plt+0x4d518>  // b.any
  450d40:	ldr	w23, [sp, #44]
  450d44:	ldr	w8, [sp, #12]
  450d48:	cmp	w23, w8
  450d4c:	b.le	450e20 <feof@plt+0x4d580>
  450d50:	ldr	w8, [x19, #120]
  450d54:	mov	w9, #0x1                   	// #1
  450d58:	strb	w9, [x19, #160]
  450d5c:	cbz	w8, 450f94 <feof@plt+0x4d6f4>
  450d60:	mov	w21, wzr
  450d64:	b	450d9c <feof@plt+0x4d4fc>
  450d68:	ldr	x9, [x19, #152]
  450d6c:	sub	w10, w21, #0x2
  450d70:	add	x9, x9, w10, sxtw #3
  450d74:	ldr	x20, [x9]
  450d78:	cbz	x20, 450d90 <feof@plt+0x4d4f0>
  450d7c:	ldr	x0, [x20, #8]
  450d80:	bl	4031d0 <free@plt>
  450d84:	mov	x0, x20
  450d88:	bl	403410 <_ZdlPv@plt>
  450d8c:	ldr	w8, [x19, #120]
  450d90:	add	w21, w21, #0x1
  450d94:	cmp	w21, w8
  450d98:	b.cs	450f94 <feof@plt+0x4d6f4>  // b.hs, b.nlast
  450d9c:	cmp	w21, #0x1
  450da0:	b.gt	450d68 <feof@plt+0x4d4c8>
  450da4:	add	x9, x19, w21, sxtw #3
  450da8:	add	x9, x9, #0x80
  450dac:	ldr	x20, [x9]
  450db0:	cbnz	x20, 450d7c <feof@plt+0x4d4dc>
  450db4:	b	450d90 <feof@plt+0x4d4f0>
  450db8:	ldr	w8, [x19, #120]
  450dbc:	mov	w9, #0x1                   	// #1
  450dc0:	strb	w9, [x19, #160]
  450dc4:	cbz	w8, 450f94 <feof@plt+0x4d6f4>
  450dc8:	mov	w21, wzr
  450dcc:	b	450e04 <feof@plt+0x4d564>
  450dd0:	ldr	x9, [x19, #152]
  450dd4:	sub	w10, w21, #0x2
  450dd8:	add	x9, x9, w10, sxtw #3
  450ddc:	ldr	x20, [x9]
  450de0:	cbz	x20, 450df8 <feof@plt+0x4d558>
  450de4:	ldr	x0, [x20, #8]
  450de8:	bl	4031d0 <free@plt>
  450dec:	mov	x0, x20
  450df0:	bl	403410 <_ZdlPv@plt>
  450df4:	ldr	w8, [x19, #120]
  450df8:	add	w21, w21, #0x1
  450dfc:	cmp	w21, w8
  450e00:	b.cs	450f94 <feof@plt+0x4d6f4>  // b.hs, b.nlast
  450e04:	cmp	w21, #0x1
  450e08:	b.gt	450dd0 <feof@plt+0x4d530>
  450e0c:	add	x9, x19, w21, sxtw #3
  450e10:	add	x9, x9, #0x80
  450e14:	ldr	x20, [x9]
  450e18:	cbnz	x20, 450de4 <feof@plt+0x4d544>
  450e1c:	b	450df8 <feof@plt+0x4d558>
  450e20:	mov	w1, #0xa                   	// #10
  450e24:	mov	x0, x20
  450e28:	bl	403210 <strchr@plt>
  450e2c:	cbz	x0, 450eac <feof@plt+0x4d60c>
  450e30:	cmp	w22, w21
  450e34:	b.ne	450ecc <feof@plt+0x4d62c>  // b.any
  450e38:	cmp	w23, #0x1
  450e3c:	b.ne	450f30 <feof@plt+0x4d690>  // b.any
  450e40:	ldrb	w8, [x0, #1]
  450e44:	cbz	w8, 450eac <feof@plt+0x4d60c>
  450e48:	ldr	w8, [x19, #120]
  450e4c:	mov	w9, #0x1                   	// #1
  450e50:	strb	w9, [x19, #160]
  450e54:	cbz	w8, 450f94 <feof@plt+0x4d6f4>
  450e58:	mov	w21, wzr
  450e5c:	b	450e6c <feof@plt+0x4d5cc>
  450e60:	add	w21, w21, #0x1
  450e64:	cmp	w21, w8
  450e68:	b.cs	450f94 <feof@plt+0x4d6f4>  // b.hs, b.nlast
  450e6c:	cmp	w21, #0x1
  450e70:	b.gt	450e80 <feof@plt+0x4d5e0>
  450e74:	add	x9, x19, w21, sxtw #3
  450e78:	add	x9, x9, #0x80
  450e7c:	b	450e8c <feof@plt+0x4d5ec>
  450e80:	ldr	x9, [x19, #152]
  450e84:	sub	w10, w21, #0x2
  450e88:	add	x9, x9, w10, sxtw #3
  450e8c:	ldr	x20, [x9]
  450e90:	cbz	x20, 450e60 <feof@plt+0x4d5c0>
  450e94:	ldr	x0, [x20, #8]
  450e98:	bl	4031d0 <free@plt>
  450e9c:	mov	x0, x20
  450ea0:	bl	403410 <_ZdlPv@plt>
  450ea4:	ldr	w8, [x19, #120]
  450ea8:	b	450e60 <feof@plt+0x4d5c0>
  450eac:	ldr	w8, [x19, #120]
  450eb0:	cbz	w8, 45103c <feof@plt+0x4d79c>
  450eb4:	sub	w9, w8, #0x1
  450eb8:	cmp	w9, #0x1
  450ebc:	b.gt	450fb0 <feof@plt+0x4d710>
  450ec0:	add	x8, x19, w9, sxtw #3
  450ec4:	add	x8, x8, #0x80
  450ec8:	b	450fbc <feof@plt+0x4d71c>
  450ecc:	ldr	w8, [x19, #120]
  450ed0:	mov	w9, #0x1                   	// #1
  450ed4:	strb	w9, [x19, #160]
  450ed8:	cbz	w8, 450f94 <feof@plt+0x4d6f4>
  450edc:	mov	w21, wzr
  450ee0:	b	450ef0 <feof@plt+0x4d650>
  450ee4:	add	w21, w21, #0x1
  450ee8:	cmp	w21, w8
  450eec:	b.cs	450f94 <feof@plt+0x4d6f4>  // b.hs, b.nlast
  450ef0:	cmp	w21, #0x1
  450ef4:	b.gt	450f04 <feof@plt+0x4d664>
  450ef8:	add	x9, x19, w21, sxtw #3
  450efc:	add	x9, x9, #0x80
  450f00:	b	450f10 <feof@plt+0x4d670>
  450f04:	ldr	x9, [x19, #152]
  450f08:	sub	w10, w21, #0x2
  450f0c:	add	x9, x9, w10, sxtw #3
  450f10:	ldr	x20, [x9]
  450f14:	cbz	x20, 450ee4 <feof@plt+0x4d644>
  450f18:	ldr	x0, [x20, #8]
  450f1c:	bl	4031d0 <free@plt>
  450f20:	mov	x0, x20
  450f24:	bl	403410 <_ZdlPv@plt>
  450f28:	ldr	w8, [x19, #120]
  450f2c:	b	450ee4 <feof@plt+0x4d644>
  450f30:	ldr	w8, [x19, #120]
  450f34:	mov	w9, #0x1                   	// #1
  450f38:	strb	w9, [x19, #160]
  450f3c:	cbz	w8, 450f94 <feof@plt+0x4d6f4>
  450f40:	mov	w21, wzr
  450f44:	b	450f54 <feof@plt+0x4d6b4>
  450f48:	add	w21, w21, #0x1
  450f4c:	cmp	w21, w8
  450f50:	b.cs	450f94 <feof@plt+0x4d6f4>  // b.hs, b.nlast
  450f54:	cmp	w21, #0x1
  450f58:	b.gt	450f68 <feof@plt+0x4d6c8>
  450f5c:	add	x9, x19, w21, sxtw #3
  450f60:	add	x9, x9, #0x80
  450f64:	b	450f74 <feof@plt+0x4d6d4>
  450f68:	ldr	x9, [x19, #152]
  450f6c:	sub	w10, w21, #0x2
  450f70:	add	x9, x9, w10, sxtw #3
  450f74:	ldr	x20, [x9]
  450f78:	cbz	x20, 450f48 <feof@plt+0x4d6a8>
  450f7c:	ldr	x0, [x20, #8]
  450f80:	bl	4031d0 <free@plt>
  450f84:	mov	x0, x20
  450f88:	bl	403410 <_ZdlPv@plt>
  450f8c:	ldr	w8, [x19, #120]
  450f90:	b	450f48 <feof@plt+0x4d6a8>
  450f94:	str	wzr, [x19, #120]
  450f98:	ldp	x20, x19, [sp, #112]
  450f9c:	ldp	x22, x21, [sp, #96]
  450fa0:	ldp	x24, x23, [sp, #80]
  450fa4:	ldp	x29, x30, [sp, #64]
  450fa8:	add	sp, sp, #0x80
  450fac:	ret
  450fb0:	ldr	x9, [x19, #152]
  450fb4:	sub	w8, w8, #0x3
  450fb8:	add	x8, x9, w8, sxtw #3
  450fbc:	ldr	x23, [x8]
  450fc0:	cbz	x23, 45103c <feof@plt+0x4d79c>
  450fc4:	ldr	x24, [x23, #16]
  450fc8:	cbz	x24, 450fe0 <feof@plt+0x4d740>
  450fcc:	ldr	x8, [x23, #8]
  450fd0:	add	x8, x24, x8
  450fd4:	ldurb	w8, [x8, #-1]
  450fd8:	cmp	w8, #0xa
  450fdc:	b.eq	45103c <feof@plt+0x4d79c>  // b.none
  450fe0:	ldr	w8, [x23, #4]
  450fe4:	cmp	w8, w22
  450fe8:	b.ne	45103c <feof@plt+0x4d79c>  // b.any
  450fec:	mov	x0, x20
  450ff0:	str	w21, [x23, #4]
  450ff4:	bl	4030b0 <strlen@plt>
  450ff8:	ldr	x8, [x23, #8]
  450ffc:	add	x9, x24, x0
  451000:	mov	x19, x0
  451004:	add	x1, x9, #0x1
  451008:	mov	x0, x8
  45100c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  451010:	ldr	x8, [x23, #16]
  451014:	str	x0, [x23, #8]
  451018:	mov	x1, x20
  45101c:	mov	x2, x19
  451020:	add	x0, x0, x8
  451024:	bl	402fc0 <memcpy@plt>
  451028:	ldp	x9, x8, [x23, #8]
  45102c:	add	x8, x8, x19
  451030:	str	x8, [x23, #16]
  451034:	strb	wzr, [x9, x8]
  451038:	b	450f98 <feof@plt+0x4d6f8>
  45103c:	mov	w0, #0x18                  	// #24
  451040:	bl	403440 <_Znwm@plt>
  451044:	mov	x23, x0
  451048:	stp	w22, w21, [x0]
  45104c:	mov	x0, x20
  451050:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  451054:	str	x0, [x23, #8]
  451058:	mov	x0, x20
  45105c:	bl	4030b0 <strlen@plt>
  451060:	str	x0, [x23, #16]
  451064:	ldrsw	x8, [x19, #120]
  451068:	add	w9, w8, #0x1
  45106c:	cmp	w8, #0x1
  451070:	str	w9, [x19, #120]
  451074:	b.gt	451084 <feof@plt+0x4d7e4>
  451078:	add	x8, x19, x8, lsl #3
  45107c:	str	x23, [x8, #128]
  451080:	b	450f98 <feof@plt+0x4d6f8>
  451084:	ldr	x0, [x19, #152]
  451088:	sub	w20, w8, #0x2
  45108c:	cbz	x0, 4510b0 <feof@plt+0x4d810>
  451090:	ldrsw	x8, [x19, #144]
  451094:	cmp	w20, w8
  451098:	b.lt	4510c4 <feof@plt+0x4d824>  // b.tstop
  45109c:	lsl	w9, w8, #1
  4510a0:	lsl	x1, x8, #4
  4510a4:	str	w9, [x19, #144]
  4510a8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4510ac:	b	4510c0 <feof@plt+0x4d820>
  4510b0:	mov	w8, #0x10                  	// #16
  4510b4:	mov	w0, #0x80                  	// #128
  4510b8:	str	w8, [x19, #144]
  4510bc:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4510c0:	str	x0, [x19, #152]
  4510c4:	str	x23, [x0, w20, uxtw #3]
  4510c8:	b	450f98 <feof@plt+0x4d6f8>
  4510cc:	ldr	w8, [x0, #16]
  4510d0:	mov	x2, x1
  4510d4:	mov	w1, w8
  4510d8:	b	4510dc <feof@plt+0x4d83c>
  4510dc:	stp	x29, x30, [sp, #-48]!
  4510e0:	stp	x22, x21, [sp, #16]
  4510e4:	stp	x20, x19, [sp, #32]
  4510e8:	mov	x19, x0
  4510ec:	ldr	x0, [x0]
  4510f0:	mov	x20, x2
  4510f4:	mov	w21, w1
  4510f8:	mov	x29, sp
  4510fc:	tbnz	w1, #31, 451124 <feof@plt+0x4d884>
  451100:	cmp	w21, #0x2
  451104:	b.cc	451180 <feof@plt+0x4d8e0>  // b.lo, b.ul, b.last
  451108:	ldr	w8, [x0, #36]
  45110c:	cbz	w8, 45113c <feof@plt+0x4d89c>
  451110:	ldr	x9, [x0, #24]
  451114:	sub	w8, w8, #0x1
  451118:	sbfiz	x8, x8, #5, #32
  45111c:	ldr	w8, [x9, x8]
  451120:	b	451140 <feof@plt+0x4d8a0>
  451124:	ldr	x8, [x0, #104]
  451128:	and	w9, w21, #0x7fffffff
  45112c:	mov	w10, #0x18                  	// #24
  451130:	umaddl	x8, w9, w10, x8
  451134:	ldr	w21, [x8, #8]
  451138:	b	451180 <feof@plt+0x4d8e0>
  45113c:	mov	w8, #0x80000000            	// #-2147483648
  451140:	mov	w9, #0x50000000            	// #1342177280
  451144:	cmp	w21, w9
  451148:	b.hi	451180 <feof@plt+0x4d8e0>  // b.pmore
  45114c:	cmp	w8, w21
  451150:	b.ls	451180 <feof@plt+0x4d8e0>  // b.plast
  451154:	mov	w1, w21
  451158:	bl	44e220 <feof@plt+0x4a980>
  45115c:	ldrh	w8, [x0, #6]
  451160:	mov	w9, #0xffffffff            	// #-1
  451164:	ldr	x0, [x19]
  451168:	lsr	x8, x8, #8
  45116c:	lsl	w9, w9, w8
  451170:	bic	w9, w21, w9
  451174:	sub	w10, w21, w9
  451178:	lsl	w8, w9, w8
  45117c:	add	w21, w10, w8
  451180:	mov	w2, #0x1                   	// #1
  451184:	mov	w1, w21
  451188:	mov	w22, #0x1                   	// #1
  45118c:	bl	44f034 <feof@plt+0x4b794>
  451190:	cmp	w0, w21
  451194:	b.ne	451200 <feof@plt+0x4d960>  // b.any
  451198:	ldr	w8, [x19, #120]
  45119c:	strb	w22, [x19, #160]
  4511a0:	cbz	w8, 451220 <feof@plt+0x4d980>
  4511a4:	mov	w21, wzr
  4511a8:	b	4511b8 <feof@plt+0x4d918>
  4511ac:	add	w21, w21, #0x1
  4511b0:	cmp	w21, w8
  4511b4:	b.cs	451220 <feof@plt+0x4d980>  // b.hs, b.nlast
  4511b8:	cmp	w21, #0x1
  4511bc:	b.gt	4511d4 <feof@plt+0x4d934>
  4511c0:	add	x9, x19, w21, sxtw #3
  4511c4:	add	x9, x9, #0x80
  4511c8:	ldr	x20, [x9]
  4511cc:	cbnz	x20, 4511e8 <feof@plt+0x4d948>
  4511d0:	b	4511ac <feof@plt+0x4d90c>
  4511d4:	ldr	x9, [x19, #152]
  4511d8:	sub	w10, w21, #0x2
  4511dc:	add	x9, x9, w10, sxtw #3
  4511e0:	ldr	x20, [x9]
  4511e4:	cbz	x20, 4511ac <feof@plt+0x4d90c>
  4511e8:	ldr	x0, [x20, #8]
  4511ec:	bl	4031d0 <free@plt>
  4511f0:	mov	x0, x20
  4511f4:	bl	403410 <_ZdlPv@plt>
  4511f8:	ldr	w8, [x19, #120]
  4511fc:	b	4511ac <feof@plt+0x4d90c>
  451200:	mov	w1, w0
  451204:	mov	x0, x19
  451208:	mov	x3, x20
  45120c:	ldp	x20, x19, [sp, #32]
  451210:	ldp	x22, x21, [sp, #16]
  451214:	mov	w2, w1
  451218:	ldp	x29, x30, [sp], #48
  45121c:	b	450b80 <feof@plt+0x4d2e0>
  451220:	str	wzr, [x19, #120]
  451224:	ldp	x20, x19, [sp, #32]
  451228:	ldp	x22, x21, [sp, #16]
  45122c:	ldp	x29, x30, [sp], #48
  451230:	ret
  451234:	stp	x29, x30, [sp, #-48]!
  451238:	stp	x20, x19, [sp, #32]
  45123c:	ldr	w8, [x0, #120]
  451240:	mov	x19, x0
  451244:	mov	w9, #0x1                   	// #1
  451248:	str	x21, [sp, #16]
  45124c:	mov	x29, sp
  451250:	strb	w9, [x0, #160]
  451254:	cbz	w8, 4512b4 <feof@plt+0x4da14>
  451258:	mov	w21, wzr
  45125c:	b	45126c <feof@plt+0x4d9cc>
  451260:	add	w21, w21, #0x1
  451264:	cmp	w21, w8
  451268:	b.cs	4512b4 <feof@plt+0x4da14>  // b.hs, b.nlast
  45126c:	cmp	w21, #0x1
  451270:	b.gt	451288 <feof@plt+0x4d9e8>
  451274:	add	x9, x19, w21, sxtw #3
  451278:	add	x9, x9, #0x80
  45127c:	ldr	x20, [x9]
  451280:	cbnz	x20, 45129c <feof@plt+0x4d9fc>
  451284:	b	451260 <feof@plt+0x4d9c0>
  451288:	ldr	x9, [x19, #152]
  45128c:	sub	w10, w21, #0x2
  451290:	add	x9, x9, w10, sxtw #3
  451294:	ldr	x20, [x9]
  451298:	cbz	x20, 451260 <feof@plt+0x4d9c0>
  45129c:	ldr	x0, [x20, #8]
  4512a0:	bl	4031d0 <free@plt>
  4512a4:	mov	x0, x20
  4512a8:	bl	403410 <_ZdlPv@plt>
  4512ac:	ldr	w8, [x19, #120]
  4512b0:	b	451260 <feof@plt+0x4d9c0>
  4512b4:	str	wzr, [x19, #120]
  4512b8:	ldp	x20, x19, [sp, #32]
  4512bc:	ldr	x21, [sp, #16]
  4512c0:	ldp	x29, x30, [sp], #48
  4512c4:	ret
  4512c8:	stp	x29, x30, [sp, #-32]!
  4512cc:	stp	x20, x19, [sp, #16]
  4512d0:	mov	x19, x0
  4512d4:	ldr	w20, [x0, #16]
  4512d8:	ldr	x0, [x0]
  4512dc:	mov	x29, sp
  4512e0:	tbnz	w20, #31, 451308 <feof@plt+0x4da68>
  4512e4:	cmp	w20, #0x2
  4512e8:	b.cc	451364 <feof@plt+0x4dac4>  // b.lo, b.ul, b.last
  4512ec:	ldr	w8, [x0, #36]
  4512f0:	cbz	w8, 451320 <feof@plt+0x4da80>
  4512f4:	ldr	x9, [x0, #24]
  4512f8:	sub	w8, w8, #0x1
  4512fc:	sbfiz	x8, x8, #5, #32
  451300:	ldr	w8, [x9, x8]
  451304:	b	451324 <feof@plt+0x4da84>
  451308:	ldr	x8, [x0, #104]
  45130c:	and	x9, x20, #0x7fffffff
  451310:	mov	w10, #0x18                  	// #24
  451314:	madd	x8, x9, x10, x8
  451318:	ldp	w20, w8, [x8, #4]
  45131c:	b	451368 <feof@plt+0x4dac8>
  451320:	mov	w8, #0x80000000            	// #-2147483648
  451324:	mov	w9, #0x50000000            	// #1342177280
  451328:	cmp	w20, w9
  45132c:	b.hi	451364 <feof@plt+0x4dac4>  // b.pmore
  451330:	cmp	w8, w20
  451334:	b.ls	451364 <feof@plt+0x4dac4>  // b.plast
  451338:	mov	w1, w20
  45133c:	bl	44e220 <feof@plt+0x4a980>
  451340:	ldrh	w8, [x0, #6]
  451344:	mov	w9, #0xffffffff            	// #-1
  451348:	lsr	x8, x8, #8
  45134c:	lsl	w9, w9, w8
  451350:	bic	w9, w20, w9
  451354:	sub	w20, w20, w9
  451358:	lsl	w8, w9, w8
  45135c:	add	w8, w20, w8
  451360:	b	451368 <feof@plt+0x4dac8>
  451364:	mov	w8, w20
  451368:	mov	w1, w20
  45136c:	mov	x0, x19
  451370:	ldp	x20, x19, [sp, #16]
  451374:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  451378:	bfi	x1, x8, #32, #32
  45137c:	add	x2, x2, #0x23b
  451380:	ldp	x29, x30, [sp], #32
  451384:	b	451454 <feof@plt+0x4dbb4>
  451388:	stp	x29, x30, [sp, #-32]!
  45138c:	stp	x20, x19, [sp, #16]
  451390:	mov	x19, x0
  451394:	ldr	x0, [x0]
  451398:	mov	w20, w1
  45139c:	mov	x29, sp
  4513a0:	tbnz	w1, #31, 4513c8 <feof@plt+0x4db28>
  4513a4:	cmp	w20, #0x2
  4513a8:	b.cc	451424 <feof@plt+0x4db84>  // b.lo, b.ul, b.last
  4513ac:	ldr	w8, [x0, #36]
  4513b0:	cbz	w8, 4513e0 <feof@plt+0x4db40>
  4513b4:	ldr	x9, [x0, #24]
  4513b8:	sub	w8, w8, #0x1
  4513bc:	sbfiz	x8, x8, #5, #32
  4513c0:	ldr	w8, [x9, x8]
  4513c4:	b	4513e4 <feof@plt+0x4db44>
  4513c8:	ldr	x8, [x0, #104]
  4513cc:	and	w9, w20, #0x7fffffff
  4513d0:	mov	w10, #0x18                  	// #24
  4513d4:	umaddl	x8, w9, w10, x8
  4513d8:	ldp	w20, w8, [x8, #4]
  4513dc:	b	451428 <feof@plt+0x4db88>
  4513e0:	mov	w8, #0x80000000            	// #-2147483648
  4513e4:	mov	w9, #0x50000000            	// #1342177280
  4513e8:	cmp	w20, w9
  4513ec:	b.hi	451424 <feof@plt+0x4db84>  // b.pmore
  4513f0:	cmp	w8, w20
  4513f4:	b.ls	451424 <feof@plt+0x4db84>  // b.plast
  4513f8:	mov	w1, w20
  4513fc:	bl	44e220 <feof@plt+0x4a980>
  451400:	ldrh	w8, [x0, #6]
  451404:	mov	w9, #0xffffffff            	// #-1
  451408:	lsr	x8, x8, #8
  45140c:	lsl	w9, w9, w8
  451410:	bic	w9, w20, w9
  451414:	sub	w20, w20, w9
  451418:	lsl	w8, w9, w8
  45141c:	add	w8, w20, w8
  451420:	b	451428 <feof@plt+0x4db88>
  451424:	mov	w8, w20
  451428:	mov	w1, w20
  45142c:	mov	x0, x19
  451430:	ldp	x20, x19, [sp, #16]
  451434:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  451438:	bfi	x1, x8, #32, #32
  45143c:	add	x2, x2, #0x23b
  451440:	ldp	x29, x30, [sp], #32
  451444:	b	451454 <feof@plt+0x4dbb4>
  451448:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x132fc>
  45144c:	add	x2, x2, #0x23b
  451450:	b	451454 <feof@plt+0x4dbb4>
  451454:	stp	x29, x30, [sp, #-64]!
  451458:	stp	x22, x21, [sp, #32]
  45145c:	stp	x20, x19, [sp, #48]
  451460:	mov	x19, x0
  451464:	ldr	x0, [x0]
  451468:	str	x23, [sp, #16]
  45146c:	mov	x23, x1
  451470:	mov	x20, x2
  451474:	mov	w21, w23
  451478:	mov	x29, sp
  45147c:	tbz	w23, #31, 451494 <feof@plt+0x4dbf4>
  451480:	ldr	x8, [x0, #104]
  451484:	and	x9, x23, #0x7fffffff
  451488:	mov	w10, #0x18                  	// #24
  45148c:	mul	x9, x9, x10
  451490:	ldr	w21, [x8, x9]
  451494:	ldr	w8, [x0, #36]
  451498:	lsr	x22, x23, #32
  45149c:	cbz	w8, 4514bc <feof@plt+0x4dc1c>
  4514a0:	ldr	x9, [x0, #24]
  4514a4:	sub	w8, w8, #0x1
  4514a8:	sbfiz	x8, x8, #5, #32
  4514ac:	ldr	w8, [x9, x8]
  4514b0:	cmp	w21, #0x2
  4514b4:	b.cs	4514c8 <feof@plt+0x4dc28>  // b.hs, b.nlast
  4514b8:	b	4514ec <feof@plt+0x4dc4c>
  4514bc:	mov	w8, #0x80000000            	// #-2147483648
  4514c0:	cmp	w21, #0x2
  4514c4:	b.cc	4514ec <feof@plt+0x4dc4c>  // b.lo, b.ul, b.last
  4514c8:	cmp	w21, w8
  4514cc:	b.cs	4514ec <feof@plt+0x4dc4c>  // b.hs, b.nlast
  4514d0:	mov	w1, w21
  4514d4:	bl	44e220 <feof@plt+0x4a980>
  4514d8:	ldrb	w8, [x0, #7]
  4514dc:	ldr	x0, [x19]
  4514e0:	mov	w9, #0xffffffff            	// #-1
  4514e4:	lsl	w8, w9, w8
  4514e8:	and	w21, w8, w21
  4514ec:	tbnz	w22, #31, 451514 <feof@plt+0x4dc74>
  4514f0:	ldr	w8, [x0, #36]
  4514f4:	cbz	w8, 451530 <feof@plt+0x4dc90>
  4514f8:	ldr	x9, [x0, #24]
  4514fc:	sub	w8, w8, #0x1
  451500:	sbfiz	x8, x8, #5, #32
  451504:	ldr	w8, [x9, x8]
  451508:	cmp	w22, #0x2
  45150c:	b.cs	45153c <feof@plt+0x4dc9c>  // b.hs, b.nlast
  451510:	b	451560 <feof@plt+0x4dcc0>
  451514:	ldr	x8, [x0, #104]
  451518:	ubfx	x9, x23, #32, #31
  45151c:	mov	w10, #0x18                  	// #24
  451520:	mul	x9, x9, x10
  451524:	ldr	w22, [x8, x9]
  451528:	ldr	w8, [x0, #36]
  45152c:	cbnz	w8, 4514f8 <feof@plt+0x4dc58>
  451530:	mov	w8, #0x80000000            	// #-2147483648
  451534:	cmp	w22, #0x2
  451538:	b.cc	451560 <feof@plt+0x4dcc0>  // b.lo, b.ul, b.last
  45153c:	cmp	w22, w8
  451540:	b.cs	451560 <feof@plt+0x4dcc0>  // b.hs, b.nlast
  451544:	mov	w1, w22
  451548:	bl	44e220 <feof@plt+0x4a980>
  45154c:	ldrb	w8, [x0, #7]
  451550:	ldr	x0, [x19]
  451554:	mov	w9, #0xffffffff            	// #-1
  451558:	lsl	w8, w9, w8
  45155c:	and	w22, w8, w22
  451560:	mov	w2, #0x1                   	// #1
  451564:	mov	w1, w22
  451568:	mov	w23, #0x1                   	// #1
  45156c:	bl	44f034 <feof@plt+0x4b794>
  451570:	cmp	w0, w22
  451574:	b.ne	4515e0 <feof@plt+0x4dd40>  // b.any
  451578:	ldr	w8, [x19, #120]
  45157c:	strb	w23, [x19, #160]
  451580:	cbz	w8, 451604 <feof@plt+0x4dd64>
  451584:	mov	w21, wzr
  451588:	b	451598 <feof@plt+0x4dcf8>
  45158c:	add	w21, w21, #0x1
  451590:	cmp	w21, w8
  451594:	b.cs	451604 <feof@plt+0x4dd64>  // b.hs, b.nlast
  451598:	cmp	w21, #0x1
  45159c:	b.gt	4515b4 <feof@plt+0x4dd14>
  4515a0:	add	x9, x19, w21, sxtw #3
  4515a4:	add	x9, x9, #0x80
  4515a8:	ldr	x20, [x9]
  4515ac:	cbnz	x20, 4515c8 <feof@plt+0x4dd28>
  4515b0:	b	45158c <feof@plt+0x4dcec>
  4515b4:	ldr	x9, [x19, #152]
  4515b8:	sub	w10, w21, #0x2
  4515bc:	add	x9, x9, w10, sxtw #3
  4515c0:	ldr	x20, [x9]
  4515c4:	cbz	x20, 45158c <feof@plt+0x4dcec>
  4515c8:	ldr	x0, [x20, #8]
  4515cc:	bl	4031d0 <free@plt>
  4515d0:	mov	x0, x20
  4515d4:	bl	403410 <_ZdlPv@plt>
  4515d8:	ldr	w8, [x19, #120]
  4515dc:	b	45158c <feof@plt+0x4dcec>
  4515e0:	mov	w2, w0
  4515e4:	mov	x0, x19
  4515e8:	mov	w1, w21
  4515ec:	mov	x3, x20
  4515f0:	ldp	x20, x19, [sp, #48]
  4515f4:	ldp	x22, x21, [sp, #32]
  4515f8:	ldr	x23, [sp, #16]
  4515fc:	ldp	x29, x30, [sp], #64
  451600:	b	450b80 <feof@plt+0x4d2e0>
  451604:	str	wzr, [x19, #120]
  451608:	ldp	x20, x19, [sp, #48]
  45160c:	ldp	x22, x21, [sp, #32]
  451610:	ldr	x23, [sp, #16]
  451614:	ldp	x29, x30, [sp], #64
  451618:	ret
  45161c:	stp	x29, x30, [sp, #-48]!
  451620:	stp	x20, x19, [sp, #32]
  451624:	str	x21, [sp, #16]
  451628:	mov	x19, x0
  45162c:	ldr	w21, [x0, #16]
  451630:	ldr	x0, [x0]
  451634:	mov	x20, x1
  451638:	mov	x29, sp
  45163c:	tbnz	w21, #31, 451664 <feof@plt+0x4ddc4>
  451640:	cmp	w21, #0x2
  451644:	b.cc	4516c0 <feof@plt+0x4de20>  // b.lo, b.ul, b.last
  451648:	ldr	w8, [x0, #36]
  45164c:	cbz	w8, 45167c <feof@plt+0x4dddc>
  451650:	ldr	x9, [x0, #24]
  451654:	sub	w8, w8, #0x1
  451658:	sbfiz	x8, x8, #5, #32
  45165c:	ldr	w8, [x9, x8]
  451660:	b	451680 <feof@plt+0x4dde0>
  451664:	ldr	x8, [x0, #104]
  451668:	and	x9, x21, #0x7fffffff
  45166c:	mov	w10, #0x18                  	// #24
  451670:	madd	x8, x9, x10, x8
  451674:	ldp	w21, w8, [x8, #4]
  451678:	b	4516c4 <feof@plt+0x4de24>
  45167c:	mov	w8, #0x80000000            	// #-2147483648
  451680:	mov	w9, #0x50000000            	// #1342177280
  451684:	cmp	w21, w9
  451688:	b.hi	4516c0 <feof@plt+0x4de20>  // b.pmore
  45168c:	cmp	w8, w21
  451690:	b.ls	4516c0 <feof@plt+0x4de20>  // b.plast
  451694:	mov	w1, w21
  451698:	bl	44e220 <feof@plt+0x4a980>
  45169c:	ldrh	w8, [x0, #6]
  4516a0:	mov	w9, #0xffffffff            	// #-1
  4516a4:	lsr	x8, x8, #8
  4516a8:	lsl	w9, w9, w8
  4516ac:	bic	w9, w21, w9
  4516b0:	sub	w21, w21, w9
  4516b4:	lsl	w8, w9, w8
  4516b8:	add	w8, w21, w8
  4516bc:	b	4516c4 <feof@plt+0x4de24>
  4516c0:	mov	w8, w21
  4516c4:	mov	w1, w21
  4516c8:	mov	x0, x19
  4516cc:	mov	x2, x20
  4516d0:	ldp	x20, x19, [sp, #32]
  4516d4:	ldr	x21, [sp, #16]
  4516d8:	bfi	x1, x8, #32, #32
  4516dc:	ldp	x29, x30, [sp], #48
  4516e0:	b	451454 <feof@plt+0x4dbb4>
  4516e4:	stp	x29, x30, [sp, #-48]!
  4516e8:	stp	x20, x19, [sp, #32]
  4516ec:	mov	x20, x0
  4516f0:	ldr	x0, [x0]
  4516f4:	str	x21, [sp, #16]
  4516f8:	mov	x19, x2
  4516fc:	mov	w21, w1
  451700:	mov	x29, sp
  451704:	tbnz	w1, #31, 45172c <feof@plt+0x4de8c>
  451708:	cmp	w21, #0x2
  45170c:	b.cc	451788 <feof@plt+0x4dee8>  // b.lo, b.ul, b.last
  451710:	ldr	w8, [x0, #36]
  451714:	cbz	w8, 451744 <feof@plt+0x4dea4>
  451718:	ldr	x9, [x0, #24]
  45171c:	sub	w8, w8, #0x1
  451720:	sbfiz	x8, x8, #5, #32
  451724:	ldr	w8, [x9, x8]
  451728:	b	451748 <feof@plt+0x4dea8>
  45172c:	ldr	x8, [x0, #104]
  451730:	and	w9, w21, #0x7fffffff
  451734:	mov	w10, #0x18                  	// #24
  451738:	umaddl	x8, w9, w10, x8
  45173c:	ldp	w21, w8, [x8, #4]
  451740:	b	45178c <feof@plt+0x4deec>
  451744:	mov	w8, #0x80000000            	// #-2147483648
  451748:	mov	w9, #0x50000000            	// #1342177280
  45174c:	cmp	w21, w9
  451750:	b.hi	451788 <feof@plt+0x4dee8>  // b.pmore
  451754:	cmp	w8, w21
  451758:	b.ls	451788 <feof@plt+0x4dee8>  // b.plast
  45175c:	mov	w1, w21
  451760:	bl	44e220 <feof@plt+0x4a980>
  451764:	ldrh	w8, [x0, #6]
  451768:	mov	w9, #0xffffffff            	// #-1
  45176c:	lsr	x8, x8, #8
  451770:	lsl	w9, w9, w8
  451774:	bic	w9, w21, w9
  451778:	sub	w21, w21, w9
  45177c:	lsl	w8, w9, w8
  451780:	add	w8, w21, w8
  451784:	b	45178c <feof@plt+0x4deec>
  451788:	mov	w8, w21
  45178c:	mov	w1, w21
  451790:	mov	x0, x20
  451794:	mov	x2, x19
  451798:	ldp	x20, x19, [sp, #32]
  45179c:	ldr	x21, [sp, #16]
  4517a0:	bfi	x1, x8, #32, #32
  4517a4:	ldp	x29, x30, [sp], #48
  4517a8:	b	451454 <feof@plt+0x4dbb4>
  4517ac:	ldr	w8, [x0, #120]
  4517b0:	cbz	w8, 4517cc <feof@plt+0x4df2c>
  4517b4:	sub	w9, w8, #0x1
  4517b8:	cmp	w9, #0x1
  4517bc:	b.gt	4517d4 <feof@plt+0x4df34>
  4517c0:	add	x8, x0, w9, sxtw #3
  4517c4:	ldr	x0, [x8, #128]!
  4517c8:	ret
  4517cc:	mov	x0, xzr
  4517d0:	ret
  4517d4:	ldr	x9, [x0, #152]
  4517d8:	sub	w8, w8, #0x3
  4517dc:	add	x8, x9, w8, sxtw #3
  4517e0:	ldr	x0, [x8]
  4517e4:	ret
  4517e8:	stp	x29, x30, [sp, #-48]!
  4517ec:	stp	x20, x19, [sp, #32]
  4517f0:	ldrb	w8, [x0, #160]
  4517f4:	str	x21, [sp, #16]
  4517f8:	mov	x29, sp
  4517fc:	cbnz	w8, 45188c <feof@plt+0x4dfec>
  451800:	mov	w8, #0x1                   	// #1
  451804:	movk	w8, #0x6000, lsl #16
  451808:	cmp	w1, w8
  45180c:	b.cs	451818 <feof@plt+0x4df78>  // b.hs, b.nlast
  451810:	mov	w0, wzr
  451814:	b	451890 <feof@plt+0x4dff0>
  451818:	ldr	w8, [x0, #120]
  45181c:	mov	x19, x0
  451820:	mov	w9, #0x1                   	// #1
  451824:	strb	w9, [x0, #160]
  451828:	cbz	w8, 451888 <feof@plt+0x4dfe8>
  45182c:	mov	w21, wzr
  451830:	b	451840 <feof@plt+0x4dfa0>
  451834:	add	w21, w21, #0x1
  451838:	cmp	w21, w8
  45183c:	b.cs	451888 <feof@plt+0x4dfe8>  // b.hs, b.nlast
  451840:	cmp	w21, #0x1
  451844:	b.gt	45185c <feof@plt+0x4dfbc>
  451848:	add	x9, x19, w21, sxtw #3
  45184c:	add	x9, x9, #0x80
  451850:	ldr	x20, [x9]
  451854:	cbnz	x20, 451870 <feof@plt+0x4dfd0>
  451858:	b	451834 <feof@plt+0x4df94>
  45185c:	ldr	x9, [x19, #152]
  451860:	sub	w10, w21, #0x2
  451864:	add	x9, x9, w10, sxtw #3
  451868:	ldr	x20, [x9]
  45186c:	cbz	x20, 451834 <feof@plt+0x4df94>
  451870:	ldr	x0, [x20, #8]
  451874:	bl	4031d0 <free@plt>
  451878:	mov	x0, x20
  45187c:	bl	403410 <_ZdlPv@plt>
  451880:	ldr	w8, [x19, #120]
  451884:	b	451834 <feof@plt+0x4df94>
  451888:	str	wzr, [x19, #120]
  45188c:	mov	w0, #0x1                   	// #1
  451890:	ldp	x20, x19, [sp, #32]
  451894:	ldr	x21, [sp, #16]
  451898:	ldp	x29, x30, [sp], #48
  45189c:	ret
  4518a0:	ldr	x8, [x0, #16]
  4518a4:	cbz	x8, 4518c0 <feof@plt+0x4e020>
  4518a8:	ldr	x9, [x0, #8]
  4518ac:	add	x8, x8, x9
  4518b0:	ldurb	w8, [x8, #-1]
  4518b4:	cmp	w8, #0xa
  4518b8:	cset	w0, eq  // eq = none
  4518bc:	ret
  4518c0:	mov	w0, wzr
  4518c4:	ret
  4518c8:	stp	x29, x30, [sp, #-48]!
  4518cc:	stp	x20, x19, [sp, #32]
  4518d0:	ldr	w8, [x0, #4]
  4518d4:	str	x21, [sp, #16]
  4518d8:	mov	x29, sp
  4518dc:	cmp	w8, w1
  4518e0:	b.ne	451940 <feof@plt+0x4e0a0>  // b.any
  4518e4:	mov	x19, x0
  4518e8:	str	w2, [x0, #4]
  4518ec:	mov	x0, x3
  4518f0:	mov	x20, x3
  4518f4:	bl	4030b0 <strlen@plt>
  4518f8:	ldp	x8, x9, [x19, #8]
  4518fc:	mov	x21, x0
  451900:	add	x9, x0, x9
  451904:	add	x1, x9, #0x1
  451908:	mov	x0, x8
  45190c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  451910:	ldr	x8, [x19, #16]
  451914:	str	x0, [x19, #8]
  451918:	mov	x1, x20
  45191c:	mov	x2, x21
  451920:	add	x0, x0, x8
  451924:	bl	402fc0 <memcpy@plt>
  451928:	ldp	x9, x8, [x19, #8]
  45192c:	mov	w0, #0x1                   	// #1
  451930:	add	x8, x8, x21
  451934:	str	x8, [x19, #16]
  451938:	strb	wzr, [x9, x8]
  45193c:	b	451944 <feof@plt+0x4e0a4>
  451940:	mov	w0, wzr
  451944:	ldp	x20, x19, [sp, #32]
  451948:	ldr	x21, [sp, #16]
  45194c:	ldp	x29, x30, [sp], #48
  451950:	ret
  451954:	stp	x29, x30, [sp, #-32]!
  451958:	stp	x20, x19, [sp, #16]
  45195c:	mov	x20, x0
  451960:	stp	w1, w2, [x0]
  451964:	mov	x0, x3
  451968:	mov	x29, sp
  45196c:	mov	x19, x3
  451970:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  451974:	str	x0, [x20, #8]
  451978:	mov	x0, x19
  45197c:	bl	4030b0 <strlen@plt>
  451980:	str	x0, [x20, #16]
  451984:	ldp	x20, x19, [sp, #16]
  451988:	ldp	x29, x30, [sp], #32
  45198c:	ret
  451990:	sub	sp, sp, #0x70
  451994:	stp	x29, x30, [sp, #64]
  451998:	stp	x20, x19, [sp, #96]
  45199c:	str	x21, [sp, #80]
  4519a0:	mov	x21, x0
  4519a4:	ldr	w0, [x0]
  4519a8:	mov	x20, x1
  4519ac:	add	x8, sp, #0x20
  4519b0:	mov	w1, #0x1                   	// #1
  4519b4:	add	x29, sp, #0x40
  4519b8:	mov	w19, w2
  4519bc:	bl	43799c <feof@plt+0x340fc>
  4519c0:	ldr	x8, [sp, #32]
  4519c4:	cmp	x8, x20
  4519c8:	b.ne	4519d8 <feof@plt+0x4e138>  // b.any
  4519cc:	ldr	w8, [sp, #40]
  4519d0:	cmp	w8, w19
  4519d4:	b.le	4519e0 <feof@plt+0x4e140>
  4519d8:	mov	w0, wzr
  4519dc:	b	451a0c <feof@plt+0x4e16c>
  4519e0:	ldr	w0, [x21, #4]
  4519e4:	mov	x8, sp
  4519e8:	mov	w1, #0x1                   	// #1
  4519ec:	bl	43799c <feof@plt+0x340fc>
  4519f0:	ldr	x8, [sp]
  4519f4:	ldr	w9, [sp, #8]
  4519f8:	cmp	x8, x20
  4519fc:	cset	w8, eq  // eq = none
  451a00:	cmp	w9, w19
  451a04:	cset	w9, ge  // ge = tcont
  451a08:	and	w0, w8, w9
  451a0c:	ldp	x20, x19, [sp, #96]
  451a10:	ldr	x21, [sp, #80]
  451a14:	ldp	x29, x30, [sp, #64]
  451a18:	add	sp, sp, #0x70
  451a1c:	ret
  451a20:	stp	x29, x30, [sp, #-48]!
  451a24:	stp	x20, x19, [sp, #32]
  451a28:	ldrh	w8, [x1, #18]
  451a2c:	str	x21, [sp, #16]
  451a30:	mov	x29, sp
  451a34:	and	w8, w8, #0x3
  451a38:	cmp	w8, #0x2
  451a3c:	b.ne	451a88 <feof@plt+0x4e1e8>  // b.any
  451a40:	ldr	x21, [x1, #24]
  451a44:	mov	x20, x1
  451a48:	ldrb	w8, [x21, #19]
  451a4c:	tbnz	w8, #5, 451a88 <feof@plt+0x4e1e8>
  451a50:	mov	x19, x0
  451a54:	ldr	x0, [x0, #40]
  451a58:	ldr	w1, [x21, #8]
  451a5c:	bl	44e220 <feof@plt+0x4a980>
  451a60:	ldr	w8, [x0, #20]
  451a64:	cbnz	w8, 451a88 <feof@plt+0x4e1e8>
  451a68:	ldr	w2, [x21, #8]
  451a6c:	ldr	x5, [x20]
  451a70:	adrp	x4, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451a74:	add	x4, x4, #0xd8
  451a78:	mov	w1, #0xe                   	// #14
  451a7c:	mov	x0, x19
  451a80:	mov	w3, wzr
  451a84:	bl	442ab4 <feof@plt+0x3f214>
  451a88:	ldp	x20, x19, [sp, #32]
  451a8c:	ldr	x21, [sp, #16]
  451a90:	mov	w0, #0x1                   	// #1
  451a94:	ldp	x29, x30, [sp], #48
  451a98:	ret
  451a9c:	sub	sp, sp, #0x50
  451aa0:	stp	x29, x30, [sp, #16]
  451aa4:	stp	x24, x23, [sp, #32]
  451aa8:	stp	x22, x21, [sp, #48]
  451aac:	stp	x20, x19, [sp, #64]
  451ab0:	ldr	w8, [x1, #24]
  451ab4:	mov	x20, x1
  451ab8:	mov	x19, x0
  451abc:	add	x29, sp, #0x10
  451ac0:	cmp	w8, #0xa
  451ac4:	b.hi	451b64 <feof@plt+0x4e2c4>  // b.pmore
  451ac8:	adrp	x9, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451acc:	add	x9, x9, #0x20
  451ad0:	adr	x10, 451ae0 <feof@plt+0x4e240>
  451ad4:	ldrb	w11, [x9, x8]
  451ad8:	add	x10, x10, x11, lsl #2
  451adc:	br	x10
  451ae0:	ldrb	w8, [x19, #1134]
  451ae4:	cbz	w8, 451b00 <feof@plt+0x4e260>
  451ae8:	ldr	x3, [x20]
  451aec:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451af0:	add	x2, x2, #0x10b
  451af4:	mov	w1, #0x14                  	// #20
  451af8:	mov	x0, x19
  451afc:	bl	442628 <feof@plt+0x3ed88>
  451b00:	ldr	x8, [x19, #640]
  451b04:	cbnz	x8, 451e3c <feof@plt+0x4e59c>
  451b08:	ldr	x0, [x19, #656]
  451b0c:	cmn	x0, #0x2
  451b10:	b.ne	451b28 <feof@plt+0x4e288>  // b.any
  451b14:	ldr	x8, [x19, #1056]
  451b18:	cbz	x8, 451d44 <feof@plt+0x4e4a4>
  451b1c:	mov	x0, x19
  451b20:	blr	x8
  451b24:	str	x0, [x19, #656]
  451b28:	tbnz	x0, #63, 451d44 <feof@plt+0x4e4a4>
  451b2c:	add	x0, x19, #0x290
  451b30:	bl	4030c0 <gmtime@plt>
  451b34:	mov	x21, x0
  451b38:	cbnz	x0, 451d74 <feof@plt+0x4e4d4>
  451b3c:	b	451e10 <feof@plt+0x4e570>
  451b40:	ldr	x8, [x19, #40]
  451b44:	ldr	w8, [x8, #48]
  451b48:	sub	w21, w8, #0x1
  451b4c:	b	451e60 <feof@plt+0x4e5c0>
  451b50:	ldrb	w9, [x19, #1160]
  451b54:	ldr	x8, [x19, #40]
  451b58:	cbz	w9, 451d18 <feof@plt+0x4e478>
  451b5c:	ldr	w1, [x8, #60]
  451b60:	b	451d34 <feof@plt+0x4e494>
  451b64:	ldr	x3, [x20]
  451b68:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451b6c:	add	x2, x2, #0xef
  451b70:	mov	w1, #0x4                   	// #4
  451b74:	mov	x0, x19
  451b78:	bl	4424f8 <feof@plt+0x3ec58>
  451b7c:	b	451e5c <feof@plt+0x4e5bc>
  451b80:	ldr	x8, [x19]
  451b84:	cbz	x8, 451e5c <feof@plt+0x4e5bc>
  451b88:	ldrb	w8, [x8, #106]
  451b8c:	cbz	w8, 451e5c <feof@plt+0x4e5bc>
  451b90:	mov	w21, wzr
  451b94:	b	451e60 <feof@plt+0x4e5c0>
  451b98:	ldrb	w8, [x19, #1134]
  451b9c:	cbz	w8, 451bb8 <feof@plt+0x4e318>
  451ba0:	ldr	x3, [x20]
  451ba4:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451ba8:	add	x2, x2, #0x10b
  451bac:	mov	w1, #0x14                  	// #20
  451bb0:	mov	x0, x19
  451bb4:	bl	442628 <feof@plt+0x3ed88>
  451bb8:	mov	x0, x19
  451bbc:	bl	447f1c <feof@plt+0x4467c>
  451bc0:	ldr	x20, [x0, #88]
  451bc4:	cbnz	x20, 451e80 <feof@plt+0x4e5e0>
  451bc8:	mov	x21, x0
  451bcc:	bl	447f24 <feof@plt+0x44684>
  451bd0:	cbz	x0, 451dfc <feof@plt+0x4e55c>
  451bd4:	bl	447e98 <feof@plt+0x445f8>
  451bd8:	cbz	x0, 451dd4 <feof@plt+0x4e534>
  451bdc:	add	x0, x0, #0x58
  451be0:	bl	403390 <localtime@plt>
  451be4:	cbz	x0, 451dd4 <feof@plt+0x4e534>
  451be8:	bl	403540 <asctime@plt>
  451bec:	mov	x22, x0
  451bf0:	bl	4030b0 <strlen@plt>
  451bf4:	mov	x23, x0
  451bf8:	add	x1, x0, #0x2
  451bfc:	mov	x0, x19
  451c00:	bl	44d230 <feof@plt+0x49990>
  451c04:	mov	w24, #0x22                  	// #34
  451c08:	mov	x20, x0
  451c0c:	strb	w24, [x0], #1
  451c10:	mov	x1, x22
  451c14:	bl	4032f0 <strcpy@plt>
  451c18:	strb	w24, [x20, x23]
  451c1c:	b	451df0 <feof@plt+0x4e550>
  451c20:	ldr	x0, [x19, #40]
  451c24:	ldr	w1, [x0, #60]
  451c28:	bl	44f550 <feof@plt+0x4bcb0>
  451c2c:	mov	x21, x0
  451c30:	b	451c44 <feof@plt+0x4e3a4>
  451c34:	ldr	x0, [x19, #288]
  451c38:	bl	447e90 <feof@plt+0x445f0>
  451c3c:	mov	x21, x0
  451c40:	cbz	x0, 451e9c <feof@plt+0x4e5fc>
  451c44:	ldr	x8, [x19, #1080]
  451c48:	cbz	x8, 451c58 <feof@plt+0x4e3b8>
  451c4c:	mov	x0, x21
  451c50:	blr	x8
  451c54:	mov	x21, x0
  451c58:	mov	x0, x21
  451c5c:	bl	4030b0 <strlen@plt>
  451c60:	mov	x22, x0
  451c64:	lsl	w8, w22, #1
  451c68:	add	w1, w8, #0x3
  451c6c:	mov	x0, x19
  451c70:	bl	44d230 <feof@plt+0x49990>
  451c74:	mov	w8, #0x22                  	// #34
  451c78:	mov	x9, x0
  451c7c:	mov	x20, x0
  451c80:	strb	w8, [x9], #1
  451c84:	cbz	w22, 451cc4 <feof@plt+0x4e424>
  451c88:	mov	w10, #0x5c                  	// #92
  451c8c:	b	451c9c <feof@plt+0x4e3fc>
  451c90:	strb	w10, [x9], #1
  451c94:	strb	w11, [x9], #1
  451c98:	cbz	w22, 451cc4 <feof@plt+0x4e424>
  451c9c:	ldrb	w11, [x21], #1
  451ca0:	sub	w22, w22, #0x1
  451ca4:	cmp	w11, #0x5c
  451ca8:	b.eq	451c90 <feof@plt+0x4e3f0>  // b.none
  451cac:	cmp	w11, #0x22
  451cb0:	b.eq	451c90 <feof@plt+0x4e3f0>  // b.none
  451cb4:	cmp	w11, #0xa
  451cb8:	b.ne	451c94 <feof@plt+0x4e3f4>  // b.any
  451cbc:	mov	w11, #0x6e                  	// #110
  451cc0:	b	451c90 <feof@plt+0x4e3f0>
  451cc4:	strh	w8, [x9]
  451cc8:	cbnz	x20, 451e80 <feof@plt+0x4e5e0>
  451ccc:	b	451e5c <feof@plt+0x4e5bc>
  451cd0:	ldr	x8, [x19, #1040]
  451cd4:	mov	x0, x19
  451cd8:	blr	x8
  451cdc:	mov	w21, w0
  451ce0:	b	451e60 <feof@plt+0x4e5c0>
  451ce4:	ldrb	w8, [x19, #1244]
  451ce8:	cbz	w8, 451d08 <feof@plt+0x4e468>
  451cec:	ldrb	w8, [x19, #16]
  451cf0:	cbz	w8, 451d08 <feof@plt+0x4e468>
  451cf4:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451cf8:	add	x2, x2, #0x1fc
  451cfc:	mov	w1, #0x3                   	// #3
  451d00:	mov	x0, x19
  451d04:	bl	4424f8 <feof@plt+0x3ec58>
  451d08:	ldr	w21, [x19, #1376]
  451d0c:	add	w8, w21, #0x1
  451d10:	str	w8, [x19, #1376]
  451d14:	b	451e60 <feof@plt+0x4e5c0>
  451d18:	mov	x0, x8
  451d1c:	mov	w1, w2
  451d20:	mov	w2, wzr
  451d24:	mov	x3, xzr
  451d28:	bl	44f288 <feof@plt+0x4b9e8>
  451d2c:	ldr	x8, [x19, #40]
  451d30:	mov	w1, w0
  451d34:	mov	x0, x8
  451d38:	bl	44f490 <feof@plt+0x4bbf0>
  451d3c:	mov	w21, w0
  451d40:	b	451e60 <feof@plt+0x4e5c0>
  451d44:	bl	4035c0 <__errno_location@plt>
  451d48:	mov	x21, x0
  451d4c:	str	wzr, [x0]
  451d50:	mov	x0, xzr
  451d54:	bl	403590 <time@plt>
  451d58:	cmn	x0, #0x1
  451d5c:	str	x0, [sp, #8]
  451d60:	b.eq	451e08 <feof@plt+0x4e568>  // b.none
  451d64:	add	x0, sp, #0x8
  451d68:	bl	403390 <localtime@plt>
  451d6c:	mov	x21, x0
  451d70:	cbz	x0, 451e10 <feof@plt+0x4e570>
  451d74:	mov	w1, #0xe                   	// #14
  451d78:	mov	x0, x19
  451d7c:	bl	44d230 <feof@plt+0x49990>
  451d80:	str	x0, [x19, #640]
  451d84:	ldp	w3, w8, [x21, #12]
  451d88:	adrp	x9, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451d8c:	sxtw	x8, w8
  451d90:	add	x9, x9, #0x78
  451d94:	ldr	w10, [x21, #20]
  451d98:	ldr	x2, [x9, x8, lsl #3]
  451d9c:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451da0:	add	x1, x1, #0x1a3
  451da4:	add	w4, w10, #0x76c
  451da8:	bl	403340 <sprintf@plt>
  451dac:	mov	w1, #0xb                   	// #11
  451db0:	mov	x0, x19
  451db4:	bl	44d230 <feof@plt+0x49990>
  451db8:	str	x0, [x19, #648]
  451dbc:	ldp	w3, w2, [x21, #4]
  451dc0:	ldr	w4, [x21]
  451dc4:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451dc8:	add	x1, x1, #0x1b0
  451dcc:	bl	403340 <sprintf@plt>
  451dd0:	b	451e3c <feof@plt+0x4e59c>
  451dd4:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451dd8:	add	x2, x2, #0x138
  451ddc:	mov	x0, x19
  451de0:	mov	w1, wzr
  451de4:	bl	442f50 <feof@plt+0x3f6b0>
  451de8:	adrp	x20, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451dec:	add	x20, x20, #0x15b
  451df0:	str	x20, [x21, #88]
  451df4:	cbnz	x20, 451e80 <feof@plt+0x4e5e0>
  451df8:	b	451e5c <feof@plt+0x4e5bc>
  451dfc:	ldr	x20, [x21, #88]
  451e00:	cbnz	x20, 451e80 <feof@plt+0x4e5e0>
  451e04:	b	451e5c <feof@plt+0x4e5bc>
  451e08:	ldr	w8, [x21]
  451e0c:	cbz	w8, 451d64 <feof@plt+0x4e4c4>
  451e10:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451e14:	add	x2, x2, #0x1c1
  451e18:	mov	x0, x19
  451e1c:	mov	w1, wzr
  451e20:	bl	442f50 <feof@plt+0x3f6b0>
  451e24:	adrp	x8, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451e28:	adrp	x9, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451e2c:	add	x8, x8, #0x1e3
  451e30:	add	x9, x9, #0x1f1
  451e34:	str	x8, [x19, #640]
  451e38:	str	x9, [x19, #648]
  451e3c:	ldr	w8, [x20, #24]
  451e40:	cmp	w8, #0x1
  451e44:	b.ne	451e54 <feof@plt+0x4e5b4>  // b.any
  451e48:	ldr	x20, [x19, #640]
  451e4c:	cbnz	x20, 451e80 <feof@plt+0x4e5e0>
  451e50:	b	451e5c <feof@plt+0x4e5bc>
  451e54:	ldr	x20, [x19, #648]
  451e58:	cbnz	x20, 451e80 <feof@plt+0x4e5e0>
  451e5c:	mov	w21, #0x1                   	// #1
  451e60:	mov	w1, #0x15                  	// #21
  451e64:	mov	x0, x19
  451e68:	bl	44d230 <feof@plt+0x49990>
  451e6c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  451e70:	add	x1, x1, #0xc28
  451e74:	mov	w2, w21
  451e78:	mov	x20, x0
  451e7c:	bl	403340 <sprintf@plt>
  451e80:	mov	x0, x20
  451e84:	ldp	x20, x19, [sp, #64]
  451e88:	ldp	x22, x21, [sp, #48]
  451e8c:	ldp	x24, x23, [sp, #32]
  451e90:	ldp	x29, x30, [sp, #16]
  451e94:	add	sp, sp, #0x50
  451e98:	ret
  451e9c:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451ea0:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451ea4:	add	x0, x0, #0x176
  451ea8:	add	x2, x2, #0x18b
  451eac:	mov	w1, #0x1c5                 	// #453
  451eb0:	bl	429434 <feof@plt+0x25b94>
  451eb4:	cbz	w2, 451ef4 <feof@plt+0x4e654>
  451eb8:	mov	w8, #0x5c                  	// #92
  451ebc:	b	451ecc <feof@plt+0x4e62c>
  451ec0:	strb	w8, [x0], #1
  451ec4:	strb	w9, [x0], #1
  451ec8:	cbz	w2, 451ef4 <feof@plt+0x4e654>
  451ecc:	ldrb	w9, [x1], #1
  451ed0:	sub	w2, w2, #0x1
  451ed4:	cmp	w9, #0x5c
  451ed8:	b.eq	451ec0 <feof@plt+0x4e620>  // b.none
  451edc:	cmp	w9, #0x22
  451ee0:	b.eq	451ec0 <feof@plt+0x4e620>  // b.none
  451ee4:	cmp	w9, #0xa
  451ee8:	b.ne	451ec4 <feof@plt+0x4e624>  // b.any
  451eec:	mov	w9, #0x6e                  	// #110
  451ef0:	b	451ec0 <feof@plt+0x4e620>
  451ef4:	ret
  451ef8:	stp	x29, x30, [sp, #-48]!
  451efc:	stp	x20, x19, [sp, #32]
  451f00:	ldrh	w5, [x1, #16]
  451f04:	str	x21, [sp, #16]
  451f08:	mov	x29, sp
  451f0c:	cmp	w5, w3
  451f10:	b.ne	451f1c <feof@plt+0x4e67c>  // b.any
  451f14:	mov	w0, #0x1                   	// #1
  451f18:	b	451fa8 <feof@plt+0x4e708>
  451f1c:	mov	w8, w3
  451f20:	mov	x20, x2
  451f24:	mov	x21, x1
  451f28:	mov	x19, x0
  451f2c:	b.ls	451f64 <feof@plt+0x4e6c4>  // b.plast
  451f30:	add	w9, w8, #0x1
  451f34:	cmp	w9, w5
  451f38:	b.ne	451f44 <feof@plt+0x4e6a4>  // b.any
  451f3c:	ldrb	w9, [x21, #19]
  451f40:	tbnz	w9, #3, 451fb8 <feof@plt+0x4e718>
  451f44:	ldr	x3, [x20]
  451f48:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451f4c:	add	x2, x2, #0x2cd
  451f50:	mov	w1, #0x3                   	// #3
  451f54:	mov	x0, x19
  451f58:	mov	w4, w5
  451f5c:	mov	w5, w8
  451f60:	b	451f7c <feof@plt+0x4e6dc>
  451f64:	ldr	x3, [x20]
  451f68:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451f6c:	add	x2, x2, #0x301
  451f70:	mov	w1, #0x3                   	// #3
  451f74:	mov	x0, x19
  451f78:	mov	w4, w8
  451f7c:	bl	4424f8 <feof@plt+0x3ec58>
  451f80:	ldr	w2, [x21, #8]
  451f84:	cmp	w2, #0x3
  451f88:	b.cc	451fa4 <feof@plt+0x4e704>  // b.lo, b.ul, b.last
  451f8c:	ldr	x4, [x20]
  451f90:	adrp	x3, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451f94:	add	x3, x3, #0x333
  451f98:	mov	w1, #0x5                   	// #5
  451f9c:	mov	x0, x19
  451fa0:	bl	442da8 <feof@plt+0x3f508>
  451fa4:	mov	w0, wzr
  451fa8:	ldp	x20, x19, [sp, #32]
  451fac:	ldr	x21, [sp, #16]
  451fb0:	ldp	x29, x30, [sp], #48
  451fb4:	ret
  451fb8:	mov	w0, #0x1                   	// #1
  451fbc:	tbnz	w9, #4, 451fa8 <feof@plt+0x4e708>
  451fc0:	ldrb	w8, [x19, #1154]
  451fc4:	cbz	w8, 451fa8 <feof@plt+0x4e708>
  451fc8:	ldrb	w8, [x19, #1167]
  451fcc:	cbnz	w8, 451f14 <feof@plt+0x4e674>
  451fd0:	ldrb	w8, [x19, #1120]
  451fd4:	cbz	w8, 451fe4 <feof@plt+0x4e744>
  451fd8:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451fdc:	add	x2, x2, #0x239
  451fe0:	b	451fec <feof@plt+0x4e74c>
  451fe4:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  451fe8:	add	x2, x2, #0x284
  451fec:	mov	w1, #0x2                   	// #2
  451ff0:	mov	x0, x19
  451ff4:	bl	4424f8 <feof@plt+0x3ec58>
  451ff8:	mov	w0, #0x1                   	// #1
  451ffc:	b	451fa8 <feof@plt+0x4e708>
  452000:	stp	x29, x30, [sp, #-48]!
  452004:	stp	x22, x21, [sp, #16]
  452008:	stp	x20, x19, [sp, #32]
  45200c:	ldr	x8, [x0, #136]
  452010:	mov	w19, w3
  452014:	mov	x20, x2
  452018:	mov	x21, x0
  45201c:	mov	x22, x1
  452020:	mov	x29, sp
  452024:	cbz	x1, 45205c <feof@plt+0x4e7bc>
  452028:	ldr	x0, [x8]
  45202c:	cbz	x0, 45207c <feof@plt+0x4e7dc>
  452030:	mov	w8, #0x1                   	// #1
  452034:	mov	w9, #0x18                  	// #24
  452038:	str	x0, [x21, #136]
  45203c:	str	w8, [x0, #48]
  452040:	umaddl	x8, w19, w9, x20
  452044:	stp	xzr, x22, [x0, #32]
  452048:	stp	x20, x8, [x0, #16]
  45204c:	ldp	x20, x19, [sp, #32]
  452050:	ldp	x22, x21, [sp, #16]
  452054:	ldp	x29, x30, [sp], #48
  452058:	ret
  45205c:	ldr	w9, [x8, #48]
  452060:	cmp	w9, #0x2
  452064:	add	x9, x8, #0x28
  452068:	b.ne	452070 <feof@plt+0x4e7d0>  // b.any
  45206c:	ldr	x9, [x9]
  452070:	ldr	x22, [x9]
  452074:	ldr	x0, [x8]
  452078:	cbnz	x0, 452030 <feof@plt+0x4e790>
  45207c:	mov	w0, #0x38                  	// #56
  452080:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  452084:	movi	v0.2d, #0x0
  452088:	str	xzr, [x0, #48]
  45208c:	stp	q0, q0, [x0, #16]
  452090:	ldr	x8, [x21, #136]
  452094:	stp	xzr, x8, [x0]
  452098:	str	x0, [x8]
  45209c:	b	452030 <feof@plt+0x4e790>
  4520a0:	stp	x29, x30, [sp, #-48]!
  4520a4:	stp	x22, x21, [sp, #16]
  4520a8:	stp	x20, x19, [sp, #32]
  4520ac:	ldr	x8, [x0, #136]
  4520b0:	mov	x22, x0
  4520b4:	mov	x19, x3
  4520b8:	mov	x20, x2
  4520bc:	ldr	x0, [x8]
  4520c0:	mov	x21, x1
  4520c4:	mov	x29, sp
  4520c8:	cbnz	x0, 4520ec <feof@plt+0x4e84c>
  4520cc:	mov	w0, #0x38                  	// #56
  4520d0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4520d4:	movi	v0.2d, #0x0
  4520d8:	str	xzr, [x0, #48]
  4520dc:	stp	q0, q0, [x0, #16]
  4520e0:	ldr	x8, [x22, #136]
  4520e4:	stp	xzr, x8, [x0]
  4520e8:	str	x0, [x8]
  4520ec:	mov	w8, #0x1                   	// #1
  4520f0:	add	x9, x20, x19
  4520f4:	str	x0, [x22, #136]
  4520f8:	stp	xzr, x21, [x0, #32]
  4520fc:	str	w8, [x0, #48]
  452100:	stp	x20, x9, [x0, #16]
  452104:	ldrh	w8, [x21, #18]
  452108:	orr	w8, w8, #0x40
  45210c:	strh	w8, [x21, #18]
  452110:	ldp	x20, x19, [sp, #32]
  452114:	ldp	x22, x21, [sp, #16]
  452118:	ldp	x29, x30, [sp], #48
  45211c:	ret
  452120:	stp	x29, x30, [sp, #-48]!
  452124:	stp	x22, x21, [sp, #16]
  452128:	stp	x20, x19, [sp, #32]
  45212c:	ldr	x19, [x0, #136]
  452130:	add	x8, x0, #0x50
  452134:	mov	x29, sp
  452138:	cmp	x19, x8
  45213c:	b.eq	452210 <feof@plt+0x4e970>  // b.none
  452140:	ldr	x21, [x19, #40]
  452144:	mov	x20, x0
  452148:	cbz	x21, 4521b4 <feof@plt+0x4e914>
  45214c:	ldr	w8, [x19, #48]
  452150:	cmp	w8, #0x2
  452154:	b.ne	4521e0 <feof@plt+0x4e940>  // b.any
  452158:	ldr	x8, [x19, #32]
  45215c:	ldr	x22, [x21]
  452160:	cbz	x8, 452170 <feof@plt+0x4e8d0>
  452164:	ldr	x0, [x21, #8]
  452168:	cbz	x0, 452170 <feof@plt+0x4e8d0>
  45216c:	bl	4031d0 <free@plt>
  452170:	mov	x0, x21
  452174:	bl	4031d0 <free@plt>
  452178:	str	xzr, [x19, #40]
  45217c:	cbz	x22, 45219c <feof@plt+0x4e8fc>
  452180:	ldr	x8, [x19, #8]
  452184:	cbnz	x8, 4521ec <feof@plt+0x4e94c>
  452188:	cmp	x8, x22
  45218c:	b.eq	45219c <feof@plt+0x4e8fc>  // b.none
  452190:	ldrh	w8, [x22, #18]
  452194:	and	w8, w8, #0xffffffbf
  452198:	strh	w8, [x22, #18]
  45219c:	ldr	x8, [x20, #184]
  4521a0:	cmp	x22, x8
  4521a4:	b.ne	4521b4 <feof@plt+0x4e914>  // b.any
  4521a8:	ldr	x8, [x19, #8]
  4521ac:	cbnz	x8, 4521b4 <feof@plt+0x4e914>
  4521b0:	str	xzr, [x20, #184]
  4521b4:	ldr	x0, [x19, #32]
  4521b8:	cbz	x0, 4521c0 <feof@plt+0x4e920>
  4521bc:	bl	44dcf0 <feof@plt+0x4a450>
  4521c0:	ldr	x8, [x19, #8]
  4521c4:	mov	x0, x19
  4521c8:	str	x8, [x20, #136]
  4521cc:	str	xzr, [x8]
  4521d0:	ldp	x20, x19, [sp, #32]
  4521d4:	ldp	x22, x21, [sp, #16]
  4521d8:	ldp	x29, x30, [sp], #48
  4521dc:	b	4031d0 <free@plt>
  4521e0:	mov	x22, x21
  4521e4:	ldr	x8, [x19, #8]
  4521e8:	cbz	x8, 452188 <feof@plt+0x4e8e8>
  4521ec:	ldr	w9, [x8, #48]
  4521f0:	add	x8, x8, #0x28
  4521f4:	cmp	w9, #0x2
  4521f8:	b.ne	452200 <feof@plt+0x4e960>  // b.any
  4521fc:	ldr	x8, [x8]
  452200:	ldr	x8, [x8]
  452204:	cmp	x8, x22
  452208:	b.ne	452190 <feof@plt+0x4e8f0>  // b.any
  45220c:	b	45219c <feof@plt+0x4e8fc>
  452210:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452214:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452218:	add	x0, x0, #0x176
  45221c:	add	x2, x2, #0x34b
  452220:	mov	w1, #0x9eb                 	// #2539
  452224:	bl	429434 <feof@plt+0x25b94>
  452228:	mov	x1, xzr
  45222c:	b	452230 <feof@plt+0x4e990>
  452230:	sub	sp, sp, #0x80
  452234:	stp	x29, x30, [sp, #32]
  452238:	stp	x28, x27, [sp, #48]
  45223c:	stp	x26, x25, [sp, #64]
  452240:	stp	x24, x23, [sp, #80]
  452244:	stp	x22, x21, [sp, #96]
  452248:	stp	x20, x19, [sp, #112]
  45224c:	ldrb	w26, [x0, #192]
  452250:	mov	x20, x1
  452254:	mov	x19, x0
  452258:	mov	w21, wzr
  45225c:	add	x25, x0, #0xb0
  452260:	adrp	x28, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  452264:	add	x29, sp, #0x20
  452268:	b	45227c <feof@plt+0x4e9dc>
  45226c:	mov	x0, x19
  452270:	bl	452120 <feof@plt+0x4e880>
  452274:	ldrb	w8, [x19, #16]
  452278:	cbz	w8, 45269c <feof@plt+0x4edfc>
  45227c:	ldr	x8, [x19, #136]
  452280:	ldr	x9, [x8, #8]
  452284:	cbz	x9, 4522d4 <feof@plt+0x4ea34>
  452288:	ldr	w10, [x8, #48]
  45228c:	cbz	w10, 4522b0 <feof@plt+0x4ea10>
  452290:	cmp	w10, #0x2
  452294:	b.eq	4522b0 <feof@plt+0x4ea10>  // b.none
  452298:	cmp	w10, #0x1
  45229c:	b.ne	452818 <feof@plt+0x4ef78>  // b.any
  4522a0:	ldp	x9, x10, [x8, #16]
  4522a4:	cmp	x9, x10
  4522a8:	b.eq	4522bc <feof@plt+0x4ea1c>  // b.none
  4522ac:	b	4522fc <feof@plt+0x4ea5c>
  4522b0:	ldp	x9, x11, [x8, #16]
  4522b4:	cmp	x9, x11
  4522b8:	b.ne	4522e8 <feof@plt+0x4ea48>  // b.any
  4522bc:	ldr	x8, [x8, #40]
  4522c0:	cbz	x8, 45226c <feof@plt+0x4e9cc>
  4522c4:	ldr	w8, [x28, #448]
  4522c8:	add	w8, w8, #0x1
  4522cc:	str	w8, [x28, #448]
  4522d0:	b	45226c <feof@plt+0x4e9cc>
  4522d4:	mov	x0, x19
  4522d8:	bl	4499fc <feof@plt+0x4615c>
  4522dc:	ldr	w21, [x0]
  4522e0:	mov	x22, x0
  4522e4:	b	452314 <feof@plt+0x4ea74>
  4522e8:	cbz	w10, 4523e0 <feof@plt+0x4eb40>
  4522ec:	cmp	w10, #0x2
  4522f0:	b.eq	4523bc <feof@plt+0x4eb1c>  // b.none
  4522f4:	cmp	w10, #0x1
  4522f8:	b.ne	452848 <feof@plt+0x4efa8>  // b.any
  4522fc:	mov	x10, x9
  452300:	ldr	w21, [x10], #24
  452304:	mov	x22, x9
  452308:	str	x10, [x8, #16]
  45230c:	ldrb	w8, [x22, #6]
  452310:	tbnz	w8, #3, 452448 <feof@plt+0x4eba8>
  452314:	ldrb	w9, [x19, #16]
  452318:	ldrb	w8, [x22, #4]
  45231c:	cbz	w9, 452328 <feof@plt+0x4ea88>
  452320:	cmp	w8, #0x4f
  452324:	b.eq	45227c <feof@plt+0x4e9dc>  // b.none
  452328:	cmp	w8, #0x35
  45232c:	b.ne	4526a0 <feof@plt+0x4ee00>  // b.any
  452330:	ldr	x1, [x22, #8]
  452334:	ldrh	w8, [x1, #18]
  452338:	tst	w8, #0x3
  45233c:	b.eq	4526a0 <feof@plt+0x4ee00>  // b.none
  452340:	ldrb	w9, [x22, #7]
  452344:	tbnz	w9, #2, 4526a0 <feof@plt+0x4ee00>
  452348:	tbnz	w8, #6, 452748 <feof@plt+0x4eea8>
  45234c:	ldrb	w8, [x19, #192]
  452350:	cbnz	w8, 452384 <feof@plt+0x4eae4>
  452354:	ldr	x8, [x19, #136]
  452358:	cbz	x8, 452378 <feof@plt+0x4ead8>
  45235c:	ldr	w9, [x8, #48]
  452360:	add	x8, x8, #0x28
  452364:	cmp	w9, #0x2
  452368:	b.ne	452370 <feof@plt+0x4ead0>  // b.any
  45236c:	ldr	x8, [x8]
  452370:	ldr	x8, [x8]
  452374:	cbnz	x8, 452384 <feof@plt+0x4eae4>
  452378:	ldr	w8, [x22]
  45237c:	str	x1, [x19, #184]
  452380:	str	w8, [x19, #176]
  452384:	ldrb	w8, [x19, #24]
  452388:	cbnz	w8, 4526a0 <feof@plt+0x4ee00>
  45238c:	ldrb	w8, [x1, #19]
  452390:	tbz	w8, #0, 45240c <feof@plt+0x4eb6c>
  452394:	ldr	x8, [x19, #992]
  452398:	cbz	x8, 4526a0 <feof@plt+0x4ee00>
  45239c:	mov	x0, x19
  4523a0:	mov	w1, wzr
  4523a4:	bl	4498a4 <feof@plt+0x46004>
  4523a8:	ldrb	w8, [x0, #4]
  4523ac:	cmp	w8, #0x53
  4523b0:	b.ne	4523ec <feof@plt+0x4eb4c>  // b.any
  4523b4:	mov	w23, #0x1                   	// #1
  4523b8:	b	4523f4 <feof@plt+0x4eb54>
  4523bc:	ldr	x10, [x8, #40]
  4523c0:	ldr	x22, [x9]
  4523c4:	ldr	x11, [x10, #8]
  4523c8:	cbz	x11, 452434 <feof@plt+0x4eb94>
  4523cc:	ldr	x9, [x10, #16]
  4523d0:	ldr	w21, [x9], #4
  4523d4:	str	x9, [x10, #16]
  4523d8:	ldr	x9, [x8, #16]
  4523dc:	b	452438 <feof@plt+0x4eb98>
  4523e0:	ldr	x22, [x9], #8
  4523e4:	ldr	w21, [x22]
  4523e8:	b	45243c <feof@plt+0x4eb9c>
  4523ec:	ldrb	w8, [x0, #6]
  4523f0:	and	w23, w8, #0x1
  4523f4:	ldr	x8, [x19, #992]
  4523f8:	mov	x0, x19
  4523fc:	mov	x1, x22
  452400:	blr	x8
  452404:	mov	x1, x0
  452408:	cbz	x0, 452774 <feof@plt+0x4eed4>
  45240c:	mov	x0, x19
  452410:	mov	x2, x22
  452414:	mov	w3, w21
  452418:	bl	453d24 <feof@plt+0x50484>
  45241c:	cbz	w0, 4526a0 <feof@plt+0x4ee00>
  452420:	cmp	w0, #0x2
  452424:	b.eq	45227c <feof@plt+0x4e9dc>  // b.none
  452428:	ldrb	w8, [x19, #16]
  45242c:	cbnz	w8, 45227c <feof@plt+0x4e9dc>
  452430:	b	452728 <feof@plt+0x4ee88>
  452434:	ldr	w21, [x22]
  452438:	add	x9, x9, #0x8
  45243c:	str	x9, [x8, #16]
  452440:	ldrb	w8, [x22, #6]
  452444:	tbz	w8, #3, 452314 <feof@plt+0x4ea74>
  452448:	stur	x22, [x29, #-8]
  45244c:	ldr	x27, [x19, #136]
  452450:	cbz	x27, 452860 <feof@plt+0x4efc0>
  452454:	ldr	w8, [x27, #48]
  452458:	add	x9, x27, #0x28
  45245c:	cmp	w8, #0x2
  452460:	b.ne	452468 <feof@plt+0x4ebc8>  // b.any
  452464:	ldr	x9, [x9]
  452468:	ldr	x9, [x9]
  45246c:	cbz	x9, 452860 <feof@plt+0x4efc0>
  452470:	cmp	w8, #0x2
  452474:	mov	x9, x25
  452478:	b.ne	452488 <feof@plt+0x4ebe8>  // b.any
  45247c:	ldr	x9, [x27, #40]
  452480:	ldr	x9, [x9, #16]
  452484:	sub	x9, x9, #0x4
  452488:	ldr	w23, [x9]
  45248c:	mov	x24, xzr
  452490:	cbz	w8, 4524d8 <feof@plt+0x4ec38>
  452494:	cmp	w8, #0x2
  452498:	b.eq	4524b4 <feof@plt+0x4ec14>  // b.none
  45249c:	cmp	w8, #0x1
  4524a0:	b.ne	4524e8 <feof@plt+0x4ec48>  // b.any
  4524a4:	ldr	x24, [x27, #16]
  4524a8:	add	x8, x24, #0x18
  4524ac:	str	x8, [x27, #16]
  4524b0:	b	4524e8 <feof@plt+0x4ec48>
  4524b4:	ldr	x8, [x27, #16]
  4524b8:	ldr	x9, [x27, #40]
  4524bc:	add	x10, x8, #0x8
  4524c0:	str	x10, [x27, #16]
  4524c4:	ldr	x10, [x9, #16]
  4524c8:	ldr	x24, [x8]
  4524cc:	add	x8, x10, #0x4
  4524d0:	str	x8, [x9, #16]
  4524d4:	b	4524e8 <feof@plt+0x4ec48>
  4524d8:	ldr	x8, [x27, #16]
  4524dc:	add	x9, x8, #0x8
  4524e0:	str	x9, [x27, #16]
  4524e4:	ldr	x24, [x8]
  4524e8:	ldrb	w8, [x24, #4]
  4524ec:	cmp	w8, #0x53
  4524f0:	b.ne	4524fc <feof@plt+0x4ec5c>  // b.any
  4524f4:	ldrb	w8, [x24, #6]
  4524f8:	tbnz	w8, #3, 452830 <feof@plt+0x4ef90>
  4524fc:	sub	x2, x29, #0x8
  452500:	mov	x0, x19
  452504:	mov	w1, w23
  452508:	mov	x3, x24
  45250c:	bl	455340 <feof@plt+0x51aa0>
  452510:	tbz	w0, #0, 452528 <feof@plt+0x4ec88>
  452514:	ldrb	w8, [x24, #6]
  452518:	tbz	w8, #3, 452528 <feof@plt+0x4ec88>
  45251c:	ldr	w8, [x27, #48]
  452520:	cbnz	w8, 452494 <feof@plt+0x4ebf4>
  452524:	b	4524d8 <feof@plt+0x4ec38>
  452528:	ldr	w8, [x27, #48]
  45252c:	cmp	w8, #0x2
  452530:	b.ne	4525e8 <feof@plt+0x4ed48>  // b.any
  452534:	mov	w0, #0x10                  	// #16
  452538:	str	x20, [sp, #8]
  45253c:	mov	x20, x25
  452540:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  452544:	mov	x24, x0
  452548:	mov	w1, #0x8                   	// #8
  45254c:	mov	x0, x19
  452550:	bl	44da90 <feof@plt+0x4a1f0>
  452554:	ldp	x8, x9, [x0, #16]
  452558:	cmp	x8, x9
  45255c:	b.hi	452878 <feof@plt+0x4efd8>  // b.pmore
  452560:	ldur	x9, [x29, #-8]
  452564:	mov	x25, x0
  452568:	stur	w26, [x29, #-12]
  45256c:	cbz	x24, 452580 <feof@plt+0x4ece0>
  452570:	ldr	x10, [x25, #8]
  452574:	sub	x10, x8, x10
  452578:	lsr	x10, x10, #3
  45257c:	str	w23, [x24, w10, uxtw #2]
  452580:	str	x9, [x8], #8
  452584:	str	x8, [x25, #16]
  452588:	ldr	x8, [x27, #40]
  45258c:	ldr	x27, [x25, #8]
  452590:	ldr	x26, [x8]
  452594:	ldr	x8, [x19, #136]
  452598:	cbz	x26, 452654 <feof@plt+0x4edb4>
  45259c:	ldr	x23, [x8]
  4525a0:	cbz	x23, 452674 <feof@plt+0x4edd4>
  4525a4:	mov	w8, #0x2                   	// #2
  4525a8:	mov	w0, #0x18                  	// #24
  4525ac:	str	x23, [x19, #136]
  4525b0:	str	w8, [x23, #48]
  4525b4:	str	x25, [x23, #32]
  4525b8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4525bc:	add	x8, x27, #0x8
  4525c0:	stp	x26, x24, [x0]
  4525c4:	str	x24, [x0, #16]
  4525c8:	stp	x27, x8, [x23, #16]
  4525cc:	ldur	w26, [x29, #-12]
  4525d0:	mov	x25, x20
  4525d4:	ldr	x20, [sp, #8]
  4525d8:	str	x0, [x23, #40]
  4525dc:	ldrb	w8, [x19, #16]
  4525e0:	cbnz	w8, 45227c <feof@plt+0x4e9dc>
  4525e4:	b	452728 <feof@plt+0x4ee88>
  4525e8:	ldr	x8, [x19, #136]
  4525ec:	ldur	x23, [x29, #-8]
  4525f0:	ldr	w9, [x8, #48]
  4525f4:	cmp	w9, #0x2
  4525f8:	add	x9, x8, #0x28
  4525fc:	b.ne	452604 <feof@plt+0x4ed64>  // b.any
  452600:	ldr	x9, [x9]
  452604:	ldr	x0, [x8]
  452608:	ldr	x24, [x9]
  45260c:	mov	w27, #0x1                   	// #1
  452610:	cbnz	x0, 452634 <feof@plt+0x4ed94>
  452614:	mov	w0, #0x38                  	// #56
  452618:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  45261c:	movi	v0.2d, #0x0
  452620:	stp	q0, q0, [x0, #16]
  452624:	str	xzr, [x0, #48]
  452628:	ldr	x8, [x19, #136]
  45262c:	stp	xzr, x8, [x0]
  452630:	str	x0, [x8]
  452634:	add	x8, x23, #0x18
  452638:	str	x0, [x19, #136]
  45263c:	str	w27, [x0, #48]
  452640:	stp	xzr, x24, [x0, #32]
  452644:	stp	x23, x8, [x0, #16]
  452648:	ldrb	w8, [x19, #16]
  45264c:	cbnz	w8, 45227c <feof@plt+0x4e9dc>
  452650:	b	452728 <feof@plt+0x4ee88>
  452654:	ldr	w9, [x8, #48]
  452658:	cmp	w9, #0x2
  45265c:	add	x9, x8, #0x28
  452660:	b.ne	452668 <feof@plt+0x4edc8>  // b.any
  452664:	ldr	x9, [x9]
  452668:	ldr	x26, [x9]
  45266c:	ldr	x23, [x8]
  452670:	cbnz	x23, 4525a4 <feof@plt+0x4ed04>
  452674:	mov	w0, #0x38                  	// #56
  452678:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  45267c:	movi	v0.2d, #0x0
  452680:	stp	q0, q0, [x0, #16]
  452684:	str	xzr, [x0, #48]
  452688:	ldr	x8, [x19, #136]
  45268c:	mov	x23, x0
  452690:	stp	xzr, x8, [x0]
  452694:	str	x0, [x8]
  452698:	b	4525a4 <feof@plt+0x4ed04>
  45269c:	add	x22, x19, #0x298
  4526a0:	cbz	x20, 4526d0 <feof@plt+0x4ee30>
  4526a4:	cbnz	w21, 4526ac <feof@plt+0x4ee0c>
  4526a8:	ldr	w21, [x22]
  4526ac:	str	w21, [x20]
  4526b0:	ldrb	w8, [x19, #1157]
  4526b4:	cbz	w8, 4526f8 <feof@plt+0x4ee58>
  4526b8:	ldrb	w8, [x19, #1160]
  4526bc:	cbz	w8, 4526cc <feof@plt+0x4ee2c>
  4526c0:	ldrb	w8, [x19, #16]
  4526c4:	cbz	w8, 4526cc <feof@plt+0x4ee2c>
  4526c8:	ldr	w21, [x19, #48]
  4526cc:	str	w21, [x20]
  4526d0:	strb	w26, [x19, #192]
  4526d4:	mov	x0, x22
  4526d8:	ldp	x20, x19, [sp, #112]
  4526dc:	ldp	x22, x21, [sp, #96]
  4526e0:	ldp	x24, x23, [sp, #80]
  4526e4:	ldp	x26, x25, [sp, #64]
  4526e8:	ldp	x28, x27, [sp, #48]
  4526ec:	ldp	x29, x30, [sp, #32]
  4526f0:	add	sp, sp, #0x80
  4526f4:	ret
  4526f8:	ldr	x8, [x19, #136]
  4526fc:	cbz	x8, 4526b8 <feof@plt+0x4ee18>
  452700:	ldr	w9, [x8, #48]
  452704:	add	x8, x8, #0x28
  452708:	cmp	w9, #0x2
  45270c:	b.ne	452714 <feof@plt+0x4ee74>  // b.any
  452710:	ldr	x8, [x8]
  452714:	ldr	x8, [x8]
  452718:	cbz	x8, 4526b8 <feof@plt+0x4ee18>
  45271c:	ldr	w21, [x25]
  452720:	str	w21, [x20]
  452724:	b	4526b8 <feof@plt+0x4ee18>
  452728:	mov	x0, x19
  45272c:	bl	449b8c <feof@plt+0x462ec>
  452730:	mov	w8, #0x53                  	// #83
  452734:	str	x22, [x0, #8]
  452738:	strb	w8, [x0, #4]
  45273c:	strh	wzr, [x0, #6]
  452740:	mov	x22, x0
  452744:	b	4526a0 <feof@plt+0x4ee00>
  452748:	mov	x0, x19
  45274c:	bl	449b8c <feof@plt+0x462ec>
  452750:	ldrb	w8, [x22, #4]
  452754:	strb	w8, [x0, #4]
  452758:	ldrh	w8, [x22, #6]
  45275c:	orr	w8, w8, #0x400
  452760:	strh	w8, [x0, #6]
  452764:	ldur	q0, [x22, #8]
  452768:	mov	x22, x0
  45276c:	stur	q0, [x0, #8]
  452770:	b	4526a0 <feof@plt+0x4ee00>
  452774:	cbz	w23, 4526a0 <feof@plt+0x4ee00>
  452778:	mov	x0, x19
  45277c:	mov	w1, wzr
  452780:	bl	4498a4 <feof@plt+0x46004>
  452784:	ldrb	w8, [x0, #4]
  452788:	cmp	w8, #0x53
  45278c:	b.eq	4526a0 <feof@plt+0x4ee00>  // b.none
  452790:	ldrb	w8, [x0, #6]
  452794:	mov	x24, x0
  452798:	tbnz	w8, #0, 4526a0 <feof@plt+0x4ee00>
  45279c:	mov	x0, x19
  4527a0:	bl	449b8c <feof@plt+0x462ec>
  4527a4:	mov	w8, #0x53                  	// #83
  4527a8:	str	x24, [x0, #8]
  4527ac:	strb	w8, [x0, #4]
  4527b0:	strh	wzr, [x0, #6]
  4527b4:	ldr	x8, [x19, #136]
  4527b8:	mov	x23, x0
  4527bc:	ldr	w9, [x8, #48]
  4527c0:	cmp	w9, #0x2
  4527c4:	add	x9, x8, #0x28
  4527c8:	b.ne	4527d0 <feof@plt+0x4ef30>  // b.any
  4527cc:	ldr	x9, [x9]
  4527d0:	ldr	x0, [x8]
  4527d4:	ldr	x24, [x9]
  4527d8:	cbnz	x0, 4527fc <feof@plt+0x4ef5c>
  4527dc:	mov	w0, #0x38                  	// #56
  4527e0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4527e4:	movi	v0.2d, #0x0
  4527e8:	str	xzr, [x0, #48]
  4527ec:	stp	q0, q0, [x0, #16]
  4527f0:	ldr	x8, [x19, #136]
  4527f4:	stp	xzr, x8, [x0]
  4527f8:	str	x0, [x8]
  4527fc:	mov	w8, #0x1                   	// #1
  452800:	add	x9, x23, #0x18
  452804:	str	x0, [x19, #136]
  452808:	stp	xzr, x24, [x0, #32]
  45280c:	str	w8, [x0, #48]
  452810:	stp	x23, x9, [x0, #16]
  452814:	b	4526a0 <feof@plt+0x4ee00>
  452818:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45281c:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452820:	add	x0, x0, #0x176
  452824:	add	x2, x2, #0x45b
  452828:	mov	w1, #0xa2f                 	// #2607
  45282c:	bl	429434 <feof@plt+0x25b94>
  452830:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452834:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452838:	add	x0, x0, #0x176
  45283c:	add	x2, x2, #0x492
  452840:	mov	w1, #0x380                 	// #896
  452844:	bl	429434 <feof@plt+0x25b94>
  452848:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45284c:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452850:	add	x0, x0, #0x176
  452854:	add	x2, x2, #0x472
  452858:	mov	w1, #0xa59                 	// #2649
  45285c:	bl	429434 <feof@plt+0x25b94>
  452860:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452864:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452868:	add	x0, x0, #0x176
  45286c:	add	x2, x2, #0x492
  452870:	mov	w1, #0x352                 	// #850
  452874:	bl	429434 <feof@plt+0x25b94>
  452878:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45287c:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452880:	add	x0, x0, #0x176
  452884:	add	x2, x2, #0x4e3
  452888:	mov	w1, #0x953                 	// #2387
  45288c:	bl	429434 <feof@plt+0x25b94>
  452890:	b	452230 <feof@plt+0x4e990>
  452894:	ldr	x8, [x0, #136]
  452898:	ldr	w9, [x8, #48]
  45289c:	add	x8, x8, #0x28
  4528a0:	cmp	w9, #0x2
  4528a4:	b.ne	4528ac <feof@plt+0x4f00c>  // b.any
  4528a8:	ldr	x8, [x8]
  4528ac:	ldr	x8, [x8]
  4528b0:	cbz	x8, 4528c8 <feof@plt+0x4f028>
  4528b4:	ldr	x8, [x8, #24]
  4528b8:	cbz	x8, 4528c8 <feof@plt+0x4f028>
  4528bc:	ldrb	w8, [x8, #19]
  4528c0:	ubfx	w0, w8, #4, #1
  4528c4:	ret
  4528c8:	mov	w0, wzr
  4528cc:	ret
  4528d0:	stp	x29, x30, [sp, #-32]!
  4528d4:	ldr	x8, [x0]
  4528d8:	str	x19, [sp, #16]
  4528dc:	mov	x19, x0
  4528e0:	mov	x29, sp
  4528e4:	ldrb	w9, [x8, #105]
  4528e8:	orr	w9, w9, #0x4
  4528ec:	strb	w9, [x8, #105]
  4528f0:	ldrb	w8, [x0, #27]
  4528f4:	ldrb	w9, [x0, #24]
  4528f8:	ldrb	w10, [x0, #1160]
  4528fc:	add	w8, w8, #0x1
  452900:	add	w9, w9, #0x1
  452904:	strb	w8, [x0, #27]
  452908:	strb	w9, [x0, #24]
  45290c:	cbz	w10, 452920 <feof@plt+0x4f080>
  452910:	mov	x0, x19
  452914:	bl	457394 <feof@plt+0x53af4>
  452918:	tbnz	w0, #0, 452910 <feof@plt+0x4f070>
  45291c:	b	452938 <feof@plt+0x4f098>
  452920:	mov	x0, x19
  452924:	mov	x1, xzr
  452928:	bl	452230 <feof@plt+0x4e990>
  45292c:	ldrb	w8, [x0, #4]
  452930:	cmp	w8, #0x16
  452934:	b.ne	452920 <feof@plt+0x4f080>  // b.any
  452938:	ldrb	w8, [x19, #27]
  45293c:	ldrb	w9, [x19, #24]
  452940:	sub	w8, w8, #0x1
  452944:	sub	w9, w9, #0x1
  452948:	strb	w8, [x19, #27]
  45294c:	strb	w9, [x19, #24]
  452950:	ldr	x19, [sp, #16]
  452954:	ldp	x29, x30, [sp], #32
  452958:	ret
  45295c:	ldr	w8, [x0, #496]
  452960:	add	w8, w8, w1
  452964:	str	w8, [x0, #496]
  452968:	cbz	w1, 4529b0 <feof@plt+0x4f110>
  45296c:	ldr	x8, [x0, #448]
  452970:	ldr	x9, [x0, #488]
  452974:	b	45297c <feof@plt+0x4f0dc>
  452978:	cbz	w1, 4529b0 <feof@plt+0x4f110>
  45297c:	sub	x8, x8, #0x18
  452980:	str	x8, [x0, #448]
  452984:	ldr	x10, [x9, #16]
  452988:	sub	w1, w1, #0x1
  45298c:	cmp	x8, x10
  452990:	b.ne	452978 <feof@plt+0x4f0d8>  // b.any
  452994:	ldr	x10, [x9, #8]
  452998:	cbz	x10, 452978 <feof@plt+0x4f0d8>
  45299c:	str	x10, [x0, #488]
  4529a0:	ldr	x8, [x10, #24]
  4529a4:	mov	x9, x10
  4529a8:	str	x8, [x0, #448]
  4529ac:	b	452978 <feof@plt+0x4f0d8>
  4529b0:	ret
  4529b4:	stp	x29, x30, [sp, #-16]!
  4529b8:	ldr	x8, [x0, #136]
  4529bc:	mov	x29, sp
  4529c0:	ldr	x9, [x8, #8]
  4529c4:	cbz	x9, 4529f4 <feof@plt+0x4f154>
  4529c8:	cmp	w1, #0x1
  4529cc:	b.ne	452a80 <feof@plt+0x4f1e0>  // b.any
  4529d0:	ldr	w9, [x8, #48]
  4529d4:	cbz	w9, 452a6c <feof@plt+0x4f1cc>
  4529d8:	cmp	w9, #0x2
  4529dc:	b.eq	452a48 <feof@plt+0x4f1a8>  // b.none
  4529e0:	cmp	w9, #0x1
  4529e4:	b.ne	452a98 <feof@plt+0x4f1f8>  // b.any
  4529e8:	ldr	x9, [x8, #16]
  4529ec:	sub	x9, x9, #0x18
  4529f0:	b	452a74 <feof@plt+0x4f1d4>
  4529f4:	ldr	w8, [x0, #496]
  4529f8:	add	w8, w8, w1
  4529fc:	str	w8, [x0, #496]
  452a00:	cbz	w1, 452a78 <feof@plt+0x4f1d8>
  452a04:	ldr	x8, [x0, #448]
  452a08:	ldr	x9, [x0, #488]
  452a0c:	b	452a14 <feof@plt+0x4f174>
  452a10:	cbz	w1, 452a78 <feof@plt+0x4f1d8>
  452a14:	sub	x8, x8, #0x18
  452a18:	str	x8, [x0, #448]
  452a1c:	ldr	x10, [x9, #16]
  452a20:	sub	w1, w1, #0x1
  452a24:	cmp	x8, x10
  452a28:	b.ne	452a10 <feof@plt+0x4f170>  // b.any
  452a2c:	ldr	x10, [x9, #8]
  452a30:	cbz	x10, 452a10 <feof@plt+0x4f170>
  452a34:	str	x10, [x0, #488]
  452a38:	ldr	x8, [x10, #24]
  452a3c:	mov	x9, x10
  452a40:	str	x8, [x0, #448]
  452a44:	b	452a10 <feof@plt+0x4f170>
  452a48:	ldr	x9, [x8, #16]
  452a4c:	sub	x9, x9, #0x8
  452a50:	str	x9, [x8, #16]
  452a54:	ldr	x8, [x0, #136]
  452a58:	ldr	x8, [x8, #40]
  452a5c:	cbz	x8, 452ab0 <feof@plt+0x4f210>
  452a60:	ldr	x9, [x8, #16]
  452a64:	sub	x9, x9, #0x4
  452a68:	b	452a74 <feof@plt+0x4f1d4>
  452a6c:	ldr	x9, [x8, #16]
  452a70:	sub	x9, x9, #0x8
  452a74:	str	x9, [x8, #16]
  452a78:	ldp	x29, x30, [sp], #16
  452a7c:	ret
  452a80:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452a84:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452a88:	add	x0, x0, #0x176
  452a8c:	add	x2, x2, #0x35c
  452a90:	mov	w1, #0xb8f                 	// #2959
  452a94:	bl	429434 <feof@plt+0x25b94>
  452a98:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452a9c:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452aa0:	add	x0, x0, #0x176
  452aa4:	add	x2, x2, #0x35c
  452aa8:	mov	w1, #0xba1                 	// #2977
  452aac:	bl	429434 <feof@plt+0x25b94>
  452ab0:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452ab4:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452ab8:	add	x0, x0, #0x176
  452abc:	add	x2, x2, #0x35c
  452ac0:	mov	w1, #0xb9e                 	// #2974
  452ac4:	bl	429434 <feof@plt+0x25b94>
  452ac8:	ldrh	w8, [x0, #18]
  452acc:	mov	w9, #0xff3c                	// #65340
  452ad0:	str	xzr, [x0, #24]
  452ad4:	and	w8, w8, w9
  452ad8:	strh	w8, [x0, #18]
  452adc:	ret
  452ae0:	stp	x29, x30, [sp, #-64]!
  452ae4:	stp	x24, x23, [sp, #16]
  452ae8:	stp	x22, x21, [sp, #32]
  452aec:	stp	x20, x19, [sp, #48]
  452af0:	ldrh	w8, [x2, #18]
  452af4:	mov	x19, x2
  452af8:	mov	x21, x0
  452afc:	mov	x29, sp
  452b00:	and	w8, w8, #0x3
  452b04:	cmp	w8, #0x1
  452b08:	b.ne	452b2c <feof@plt+0x4f28c>  // b.any
  452b0c:	ldr	x3, [x19]
  452b10:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452b14:	add	x2, x2, #0x36f
  452b18:	mov	w1, #0x3                   	// #3
  452b1c:	mov	x0, x21
  452b20:	bl	4424f8 <feof@plt+0x3ec58>
  452b24:	mov	w0, wzr
  452b28:	b	452bdc <feof@plt+0x4f33c>
  452b2c:	ldr	w8, [x21, #512]
  452b30:	add	w23, w1, #0x1
  452b34:	add	w9, w23, w23, lsl #1
  452b38:	lsl	w24, w9, #3
  452b3c:	mov	x20, x3
  452b40:	mov	w22, w1
  452b44:	cmp	w24, w8
  452b48:	b.ls	452b64 <feof@plt+0x4f2c4>  // b.plast
  452b4c:	ldr	x0, [x21, #504]
  452b50:	mov	w1, w24
  452b54:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  452b58:	str	x0, [x21, #504]
  452b5c:	str	w24, [x21, #512]
  452b60:	b	452b68 <feof@plt+0x4f2c8>
  452b64:	ldr	x0, [x21, #504]
  452b68:	mov	w8, #0x18                  	// #24
  452b6c:	umaddl	x8, w22, w8, x0
  452b70:	str	x19, [x8]
  452b74:	ldr	x9, [x19, #24]
  452b78:	mov	x1, x21
  452b7c:	mov	w22, w22
  452b80:	lsl	x10, x22, #3
  452b84:	str	x9, [x8, #8]
  452b88:	ldrh	w9, [x19, #18]
  452b8c:	add	x10, x10, #0x8
  452b90:	and	w9, w9, #0x3
  452b94:	str	w9, [x8, #16]
  452b98:	ldr	x8, [x1, #56]!
  452b9c:	ldp	x8, x9, [x8, #16]
  452ba0:	sub	x9, x9, x8
  452ba4:	cmp	x9, x10
  452ba8:	b.cs	452bc0 <feof@plt+0x4f320>  // b.hs, b.nlast
  452bac:	mov	w2, #0x8                   	// #8
  452bb0:	mov	x0, x21
  452bb4:	bl	44dc10 <feof@plt+0x4a370>
  452bb8:	ldr	x8, [x21, #56]
  452bbc:	ldr	x8, [x8, #16]
  452bc0:	str	x20, [x8, x22, lsl #3]
  452bc4:	ldrh	w8, [x19, #18]
  452bc8:	mov	w0, #0x1                   	// #1
  452bcc:	strh	w23, [x19, #24]
  452bd0:	and	w8, w8, #0xfffc
  452bd4:	orr	w8, w8, #0x1
  452bd8:	strh	w8, [x19, #18]
  452bdc:	ldp	x20, x19, [sp, #48]
  452be0:	ldp	x22, x21, [sp, #32]
  452be4:	ldp	x24, x23, [sp, #16]
  452be8:	ldp	x29, x30, [sp], #64
  452bec:	ret
  452bf0:	cbz	w1, 452c30 <feof@plt+0x4f390>
  452bf4:	sub	w8, w1, #0x1
  452bf8:	mov	w9, #0x18                  	// #24
  452bfc:	umull	x8, w8, w9
  452c00:	ldr	x9, [x0, #504]
  452c04:	subs	w1, w1, #0x1
  452c08:	add	x9, x9, x8
  452c0c:	ldr	x10, [x9]
  452c10:	ldrh	w11, [x9, #16]
  452c14:	sub	x8, x8, #0x18
  452c18:	ldrh	w12, [x10, #18]
  452c1c:	bfxil	w12, w11, #0, #2
  452c20:	strh	w12, [x10, #18]
  452c24:	ldr	x9, [x9, #8]
  452c28:	str	x9, [x10, #24]
  452c2c:	b.ne	452c00 <feof@plt+0x4f360>  // b.any
  452c30:	ret
  452c34:	ldr	w8, [x0, #48]
  452c38:	ldrb	w9, [x2, #19]
  452c3c:	str	xzr, [x2]
  452c40:	strb	wzr, [x2, #18]
  452c44:	str	w8, [x2, #8]
  452c48:	and	w8, w9, #0xfffffff7
  452c4c:	strh	wzr, [x2, #16]
  452c50:	strb	w8, [x2, #19]
  452c54:	ldrb	w10, [x0, #1151]
  452c58:	mov	w8, #0xd7                  	// #215
  452c5c:	and	w8, w9, w8
  452c60:	str	wzr, [x2, #12]
  452c64:	cmp	w10, #0x0
  452c68:	cset	w9, eq  // eq = none
  452c6c:	bfi	w8, w9, #5, #1
  452c70:	and	w9, w8, #0xbbbbbbbb
  452c74:	strb	w9, [x2, #19]
  452c78:	ldr	x9, [x0]
  452c7c:	cbz	x9, 452c90 <feof@plt+0x4f3f0>
  452c80:	ldrb	w9, [x9, #106]
  452c84:	cmp	w9, #0x0
  452c88:	cset	w9, ne  // ne = any
  452c8c:	lsl	w9, w9, #4
  452c90:	mov	w10, #0xa0                  	// #160
  452c94:	and	w8, w8, w10
  452c98:	bfxil	w8, w1, #0, #2
  452c9c:	orr	w8, w8, w9
  452ca0:	mov	x0, x2
  452ca4:	strb	w8, [x2, #19]
  452ca8:	ret
  452cac:	sub	sp, sp, #0xd0
  452cb0:	stp	x29, x30, [sp, #112]
  452cb4:	stp	x28, x27, [sp, #128]
  452cb8:	stp	x26, x25, [sp, #144]
  452cbc:	stp	x24, x23, [sp, #160]
  452cc0:	stp	x22, x21, [sp, #176]
  452cc4:	stp	x20, x19, [sp, #192]
  452cc8:	ldrb	w8, [x0, #1160]
  452ccc:	mov	x21, x0
  452cd0:	mov	x22, x1
  452cd4:	add	x29, sp, #0x70
  452cd8:	str	x0, [sp, #40]
  452cdc:	cbz	w8, 452cf0 <feof@plt+0x4f450>
  452ce0:	mov	x0, x21
  452ce4:	bl	45862c <feof@plt+0x54d8c>
  452ce8:	mov	x23, x0
  452cec:	b	453500 <feof@plt+0x4fc60>
  452cf0:	ldr	x19, [x21, #448]
  452cf4:	add	x8, sp, #0x30
  452cf8:	mov	x0, x21
  452cfc:	str	x8, [x21, #448]
  452d00:	bl	449d0c <feof@plt+0x4646c>
  452d04:	str	x19, [x21, #448]
  452d08:	ldrb	w8, [x0, #6]
  452d0c:	mov	x23, x0
  452d10:	str	x22, [sp, #8]
  452d14:	tbnz	w8, #0, 453048 <feof@plt+0x4f7a8>
  452d18:	ldrb	w8, [x23, #4]
  452d1c:	cmp	w8, #0x4f
  452d20:	b.eq	452f20 <feof@plt+0x4f680>  // b.none
  452d24:	cmp	w8, #0x16
  452d28:	b.eq	453048 <feof@plt+0x4f7a8>  // b.none
  452d2c:	cmp	w8, #0x14
  452d30:	b.ne	452f28 <feof@plt+0x4f688>  // b.any
  452d34:	adrp	x19, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452d38:	adrp	x23, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452d3c:	adrp	x24, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452d40:	adrp	x22, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452d44:	mov	w8, wzr
  452d48:	mov	w27, wzr
  452d4c:	mov	w9, wzr
  452d50:	add	x19, x19, #0x2b
  452d54:	add	x23, x23, #0x8d7
  452d58:	add	x24, x24, #0x905
  452d5c:	mov	w25, #0x1                   	// #1
  452d60:	add	x22, x22, #0x8a6
  452d64:	b	452d84 <feof@plt+0x4f4e4>
  452d68:	tst	w28, #0xff
  452d6c:	cset	w11, eq  // eq = none
  452d70:	mov	w8, wzr
  452d74:	mov	w9, wzr
  452d78:	and	w11, w11, w26
  452d7c:	mov	w27, w20
  452d80:	tbz	w11, #0, 452f54 <feof@plt+0x4f6b4>
  452d84:	mov	x0, x21
  452d88:	mov	w26, w9
  452d8c:	mov	w20, w27
  452d90:	mov	w28, w8
  452d94:	bl	4499fc <feof@plt+0x4615c>
  452d98:	ldrb	w10, [x0, #4]
  452d9c:	mov	x1, x0
  452da0:	sub	w8, w10, #0x13
  452da4:	cmp	w8, #0x22
  452da8:	b.hi	452dd4 <feof@plt+0x4f534>  // b.pmore
  452dac:	adr	x9, 452d68 <feof@plt+0x4f4c8>
  452db0:	ldrb	w11, [x19, x8]
  452db4:	add	x9, x9, x11, lsl #2
  452db8:	br	x9
  452dbc:	tst	w28, #0xff
  452dc0:	b.ne	453780 <feof@plt+0x4fee0>  // b.any
  452dc4:	cbz	w20, 453780 <feof@plt+0x4fee0>
  452dc8:	eor	w8, w26, #0x1
  452dcc:	tbnz	w8, #0, 452d68 <feof@plt+0x4f4c8>
  452dd0:	b	453780 <feof@plt+0x4fee0>
  452dd4:	cmp	w10, #0x4f
  452dd8:	b.ne	452f54 <feof@plt+0x4f6b4>  // b.any
  452ddc:	ldrb	w11, [x21, #1124]
  452de0:	mov	w8, w28
  452de4:	mov	w27, w20
  452de8:	mov	w9, w26
  452dec:	cbz	w11, 452d84 <feof@plt+0x4f4e4>
  452df0:	b	452f54 <feof@plt+0x4f6b4>
  452df4:	tst	w28, #0xff
  452df8:	b.ne	452f54 <feof@plt+0x4f6b4>  // b.any
  452dfc:	tbz	w26, #0, 452e88 <feof@plt+0x4f5e8>
  452e00:	ldrb	w10, [x21, #1154]
  452e04:	mov	w8, #0x1                   	// #1
  452e08:	mov	w27, w20
  452e0c:	mov	w9, #0x1                   	// #1
  452e10:	cbz	w10, 452d84 <feof@plt+0x4f4e4>
  452e14:	ldrb	w10, [x21, #1142]
  452e18:	mov	w8, #0x1                   	// #1
  452e1c:	mov	w27, w20
  452e20:	mov	w9, #0x1                   	// #1
  452e24:	cbz	w10, 452d84 <feof@plt+0x4f4e4>
  452e28:	ldrb	w8, [x21, #1120]
  452e2c:	mov	w1, #0xa                   	// #10
  452e30:	mov	x0, x21
  452e34:	cmp	w8, #0x0
  452e38:	csel	x2, x24, x23, eq  // eq = none
  452e3c:	bl	442758 <feof@plt+0x3eeb8>
  452e40:	mov	w8, #0x1                   	// #1
  452e44:	mov	w27, w20
  452e48:	mov	w9, #0x1                   	// #1
  452e4c:	b	452d84 <feof@plt+0x4f4e4>
  452e50:	tst	w28, #0xff
  452e54:	b.ne	452f54 <feof@plt+0x4f6b4>  // b.any
  452e58:	eor	w8, w26, #0x1
  452e5c:	tbz	w8, #0, 452f54 <feof@plt+0x4f6b4>
  452e60:	ldp	x2, x3, [x1, #8]
  452e64:	mov	x0, x21
  452e68:	mov	w1, w20
  452e6c:	mov	w26, w20
  452e70:	bl	452ae0 <feof@plt+0x4f240>
  452e74:	mov	w8, wzr
  452e78:	add	w27, w20, #0x1
  452e7c:	mov	w9, #0x1                   	// #1
  452e80:	tbnz	w0, #0, 452d84 <feof@plt+0x4f4e4>
  452e84:	b	45379c <feof@plt+0x4fefc>
  452e88:	ldr	x2, [x21, #1272]
  452e8c:	mov	x0, x21
  452e90:	mov	w1, w20
  452e94:	mov	x3, x2
  452e98:	bl	452ae0 <feof@plt+0x4f240>
  452e9c:	ldrb	w8, [x21, #1152]
  452ea0:	add	w27, w20, #0x1
  452ea4:	strb	w25, [x21, #22]
  452ea8:	cbz	w8, 452ee4 <feof@plt+0x4f644>
  452eac:	ldrsb	w8, [x21, #1198]
  452eb0:	mov	w9, wzr
  452eb4:	cmp	w8, #0x1
  452eb8:	mov	w8, #0x1                   	// #1
  452ebc:	b.lt	452d84 <feof@plt+0x4f4e4>  // b.tstop
  452ec0:	ldrb	w10, [x21, #1120]
  452ec4:	mov	w9, wzr
  452ec8:	mov	w8, #0x1                   	// #1
  452ecc:	cbnz	w10, 452d84 <feof@plt+0x4f4e4>
  452ed0:	mov	x0, x21
  452ed4:	mov	w1, wzr
  452ed8:	mov	x2, x22
  452edc:	bl	4424f8 <feof@plt+0x3ec58>
  452ee0:	b	452f14 <feof@plt+0x4f674>
  452ee4:	ldrb	w8, [x21, #1154]
  452ee8:	cbz	w8, 452eac <feof@plt+0x4f60c>
  452eec:	ldrb	w8, [x21, #1142]
  452ef0:	cbz	w8, 452eac <feof@plt+0x4f60c>
  452ef4:	ldrb	w8, [x21, #1120]
  452ef8:	mov	w1, #0xa                   	// #10
  452efc:	mov	x0, x21
  452f00:	cmp	w8, #0x0
  452f04:	adrp	x8, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452f08:	add	x8, x8, #0x873
  452f0c:	csel	x2, x22, x8, eq  // eq = none
  452f10:	bl	442758 <feof@plt+0x3eeb8>
  452f14:	mov	w9, wzr
  452f18:	mov	w8, #0x1                   	// #1
  452f1c:	b	452d84 <feof@plt+0x4f4e4>
  452f20:	ldrb	w9, [x21, #1124]
  452f24:	cbz	w9, 453048 <feof@plt+0x4f7a8>
  452f28:	ldrb	w9, [x21, #1152]
  452f2c:	cbz	w9, 452f9c <feof@plt+0x4f6fc>
  452f30:	ldrb	w8, [x21, #1120]
  452f34:	adrp	x9, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452f38:	adrp	x10, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452f3c:	add	x9, x9, #0x6f9
  452f40:	add	x10, x10, #0x72c
  452f44:	cmp	w8, #0x0
  452f48:	csel	x2, x10, x9, eq  // eq = none
  452f4c:	mov	w1, #0x2                   	// #2
  452f50:	b	453040 <feof@plt+0x4f7a0>
  452f54:	adrp	x8, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452f58:	adrp	x9, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452f5c:	adrp	x11, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452f60:	adrp	x12, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452f64:	adrp	x13, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452f68:	add	x8, x8, #0x7cb
  452f6c:	add	x9, x9, #0x7ef
  452f70:	add	x11, x11, #0x80f
  452f74:	add	x12, x12, #0x83a
  452f78:	add	x13, x13, #0x85a
  452f7c:	tst	w28, #0xff
  452f80:	stp	x8, x9, [x29, #-40]
  452f84:	stp	x11, x12, [x29, #-24]
  452f88:	stur	x13, [x29, #-8]
  452f8c:	b.eq	452fcc <feof@plt+0x4f72c>  // b.none
  452f90:	mov	x3, xzr
  452f94:	mov	w19, #0x4                   	// #4
  452f98:	b	452ff8 <feof@plt+0x4f758>
  452f9c:	sub	w8, w8, #0x34
  452fa0:	cmp	w8, #0xf
  452fa4:	mov	w1, wzr
  452fa8:	b.hi	453038 <feof@plt+0x4f798>  // b.pmore
  452fac:	adrp	x9, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  452fb0:	add	x9, x9, #0x4e
  452fb4:	adr	x10, 452fc4 <feof@plt+0x4f724>
  452fb8:	ldrb	w11, [x9, x8]
  452fbc:	add	x10, x10, x11, lsl #2
  452fc0:	br	x10
  452fc4:	mov	w1, #0x2                   	// #2
  452fc8:	b	453038 <feof@plt+0x4f798>
  452fcc:	cmp	w10, #0x16
  452fd0:	b.ne	452fe8 <feof@plt+0x4f748>  // b.any
  452fd4:	tst	w26, #0x1
  452fd8:	mov	w8, #0x2                   	// #2
  452fdc:	mov	x3, xzr
  452fe0:	cinc	x19, x8, ne  // ne = any
  452fe4:	b	452ff8 <feof@plt+0x4f758>
  452fe8:	mov	x0, x21
  452fec:	and	x19, x26, #0x1
  452ff0:	bl	44d198 <feof@plt+0x498f8>
  452ff4:	mov	x3, x0
  452ff8:	sub	x8, x29, #0x28
  452ffc:	ldr	x2, [x8, x19, lsl #3]
  453000:	ldr	x22, [sp, #8]
  453004:	mov	w1, #0x3                   	// #3
  453008:	mov	x0, x21
  45300c:	bl	4424f8 <feof@plt+0x3ec58>
  453010:	b	4534b8 <feof@plt+0x4fc18>
  453014:	ldr	x8, [x23, #16]
  453018:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45301c:	add	x0, x0, #0x75d
  453020:	mov	w2, #0x1d                  	// #29
  453024:	ldrb	w1, [x8]
  453028:	bl	4033f0 <memchr@plt>
  45302c:	cmp	x0, #0x0
  453030:	cset	w8, eq  // eq = none
  453034:	lsl	w1, w8, #1
  453038:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45303c:	add	x2, x2, #0x77a
  453040:	mov	x0, x21
  453044:	bl	4424f8 <feof@plt+0x3ec58>
  453048:	mov	w20, wzr
  45304c:	mov	w28, wzr
  453050:	mov	x24, xzr
  453054:	mov	x9, x21
  453058:	ldr	x8, [x9, #56]!
  45305c:	str	x9, [sp, #24]
  453060:	ldp	x27, x9, [x8, #16]
  453064:	sub	x8, x9, x27
  453068:	cmp	x8, #0x2f
  45306c:	b.hi	453088 <feof@plt+0x4f7e8>  // b.pmore
  453070:	ldr	x1, [sp, #24]
  453074:	mov	w2, #0x30                  	// #48
  453078:	mov	x0, x21
  45307c:	bl	44dc10 <feof@plt+0x4a370>
  453080:	ldr	x8, [x21, #56]
  453084:	ldr	x27, [x8, #16]
  453088:	ldr	w8, [x21, #48]
  45308c:	ldrb	w9, [x27, #19]
  453090:	str	xzr, [x27]
  453094:	strb	wzr, [x27, #18]
  453098:	str	w8, [x27, #8]
  45309c:	and	w8, w9, #0xfffffff7
  4530a0:	strh	wzr, [x27, #16]
  4530a4:	strb	w8, [x27, #19]
  4530a8:	ldrb	w10, [x21, #1151]
  4530ac:	mov	w8, #0xd7                  	// #215
  4530b0:	and	w8, w9, w8
  4530b4:	str	wzr, [x27, #12]
  4530b8:	cmp	w10, #0x0
  4530bc:	cset	w9, eq  // eq = none
  4530c0:	bfi	w8, w9, #5, #1
  4530c4:	and	w9, w8, #0xbbbbbbbb
  4530c8:	strb	w9, [x27, #19]
  4530cc:	ldr	x9, [x21]
  4530d0:	cbz	x9, 4530e4 <feof@plt+0x4f844>
  4530d4:	ldrb	w9, [x9, #106]
  4530d8:	cmp	w9, #0x0
  4530dc:	cset	w9, ne  // ne = any
  4530e0:	lsl	w9, w9, #4
  4530e4:	mov	w10, #0xa0                  	// #160
  4530e8:	and	w8, w8, w10
  4530ec:	orr	w8, w9, w8
  4530f0:	strb	w8, [x27, #19]
  4530f4:	str	w20, [sp, #4]
  4530f8:	cbz	x23, 45311c <feof@plt+0x4f87c>
  4530fc:	ldr	x9, [x23, #16]
  453100:	ldr	q0, [x23]
  453104:	add	x1, x27, #0x18
  453108:	mov	w10, #0x1                   	// #1
  45310c:	str	x9, [x27, #40]
  453110:	stur	q0, [x27, #24]
  453114:	str	w10, [x27, #12]
  453118:	b	453134 <feof@plt+0x4f894>
  45311c:	orr	w8, w8, w28, lsl #3
  453120:	orr	w8, w8, #0x4
  453124:	mov	x1, xzr
  453128:	strh	w20, [x27, #16]
  45312c:	str	x24, [x27]
  453130:	strb	w8, [x27, #19]
  453134:	ldr	x24, [sp, #24]
  453138:	adrp	x19, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  45313c:	mov	w23, wzr
  453140:	ubfx	w8, w8, #3, #1
  453144:	mov	w9, #0x1                   	// #1
  453148:	mov	w22, #0x18                  	// #24
  45314c:	add	x19, x19, #0x4a2
  453150:	str	wzr, [sp, #20]
  453154:	stur	x21, [x29, #-40]
  453158:	sturb	wzr, [x29, #-30]
  45315c:	stur	xzr, [x29, #-28]
  453160:	stur	wzr, [x29, #-20]
  453164:	sturb	w9, [x29, #-32]
  453168:	sturb	w8, [x29, #-31]
  45316c:	b	453194 <feof@plt+0x4f8f4>
  453170:	ldr	w9, [sp, #20]
  453174:	str	w8, [x1, #8]
  453178:	add	w9, w9, #0x1
  45317c:	str	w9, [sp, #20]
  453180:	mov	w23, #0x1                   	// #1
  453184:	sub	x0, x29, #0x28
  453188:	bl	455e24 <feof@plt+0x52584>
  45318c:	mov	x1, xzr
  453190:	cbz	w0, 4534b0 <feof@plt+0x4fc10>
  453194:	cbnz	x1, 4533a4 <feof@plt+0x4fb04>
  453198:	ldr	x8, [x24]
  45319c:	ldr	w9, [x27, #12]
  4531a0:	ldp	x27, x10, [x8, #16]
  4531a4:	sub	x8, x10, x27
  4531a8:	orr	x10, xzr, #0x30
  4531ac:	madd	x9, x9, x22, x10
  4531b0:	cmp	x8, x9
  4531b4:	b.cs	4531d0 <feof@plt+0x4f930>  // b.hs, b.nlast
  4531b8:	mov	w2, #0x18                  	// #24
  4531bc:	mov	x0, x21
  4531c0:	mov	x1, x24
  4531c4:	bl	44dc10 <feof@plt+0x4a370>
  4531c8:	ldr	x8, [x21, #56]
  4531cc:	ldr	x27, [x8, #16]
  4531d0:	ldr	w8, [x27, #12]
  4531d4:	ldr	x20, [x21, #448]
  4531d8:	mov	x0, x21
  4531dc:	madd	x8, x8, x22, x27
  4531e0:	add	x8, x8, #0x18
  4531e4:	str	x8, [x21, #448]
  4531e8:	bl	449d0c <feof@plt+0x4646c>
  4531ec:	str	x20, [x21, #448]
  4531f0:	ldrb	w8, [x0, #4]
  4531f4:	str	w23, [sp, #36]
  4531f8:	cmp	w8, #0x35
  4531fc:	b.ne	453228 <feof@plt+0x4f988>  // b.any
  453200:	ldr	x9, [x0, #8]
  453204:	ldrh	w10, [x9, #18]
  453208:	and	w10, w10, #0x3
  45320c:	cmp	w10, #0x1
  453210:	b.ne	453228 <feof@plt+0x4f988>  // b.any
  453214:	mov	w8, #0x50                  	// #80
  453218:	strb	w8, [x0, #4]
  45321c:	ldrh	w8, [x9, #24]
  453220:	str	w8, [x0, #8]
  453224:	b	453384 <feof@plt+0x4fae4>
  453228:	ldrb	w9, [x21, #1138]
  45322c:	cbz	w9, 453384 <feof@plt+0x4fae4>
  453230:	ldrh	w9, [x27, #16]
  453234:	cbz	w9, 453384 <feof@plt+0x4fae4>
  453238:	cmp	w8, #0x3e
  45323c:	b.eq	453248 <feof@plt+0x4f9a8>  // b.none
  453240:	cmp	w8, #0x38
  453244:	b.ne	453384 <feof@plt+0x4fae4>  // b.any
  453248:	ldr	w8, [x0, #8]
  45324c:	cmp	w8, #0x3
  453250:	b.cc	453384 <feof@plt+0x4fae4>  // b.lo, b.ul, b.last
  453254:	ldr	x9, [x0, #16]
  453258:	add	x8, x8, x9
  45325c:	sub	x23, x8, #0x1
  453260:	add	x24, x9, #0x1
  453264:	b	453274 <feof@plt+0x4f9d4>
  453268:	ldr	x21, [sp, #40]
  45326c:	cmp	x24, x23
  453270:	b.cs	453384 <feof@plt+0x4fae4>  // b.hs, b.nlast
  453274:	mov	w11, #0x204                 	// #516
  453278:	cmp	x24, x23
  45327c:	b.cc	4532dc <feof@plt+0x4fa3c>  // b.lo, b.ul, b.last
  453280:	cmp	x24, x23
  453284:	b.cs	4532fc <feof@plt+0x4fa5c>  // b.hs, b.nlast
  453288:	mov	x8, x24
  45328c:	b	45329c <feof@plt+0x4f9fc>
  453290:	add	x8, x8, #0x1
  453294:	cmp	x23, x8
  453298:	b.eq	45330c <feof@plt+0x4fa6c>  // b.none
  45329c:	ldrb	w9, [x8]
  4532a0:	ldrh	w10, [x19, x9, lsl #1]
  4532a4:	tst	w10, w11
  4532a8:	b.ne	453290 <feof@plt+0x4f9f0>  // b.any
  4532ac:	cmp	w9, #0x24
  4532b0:	b.ne	4532bc <feof@plt+0x4fa1c>  // b.any
  4532b4:	ldrb	w9, [x21, #1146]
  4532b8:	cbnz	w9, 453290 <feof@plt+0x4f9f0>
  4532bc:	mov	x22, x24
  4532c0:	mov	x24, x8
  4532c4:	ldrh	w20, [x27, #16]
  4532c8:	cbnz	x20, 453324 <feof@plt+0x4fa84>
  4532cc:	b	453268 <feof@plt+0x4f9c8>
  4532d0:	add	x24, x24, #0x1
  4532d4:	cmp	x23, x24
  4532d8:	b.eq	453314 <feof@plt+0x4fa74>  // b.none
  4532dc:	ldrb	w8, [x24]
  4532e0:	ldrh	w9, [x19, x8, lsl #1]
  4532e4:	tbnz	w9, #9, 453280 <feof@plt+0x4f9e0>
  4532e8:	cmp	w8, #0x24
  4532ec:	b.ne	4532d0 <feof@plt+0x4fa30>  // b.any
  4532f0:	ldrb	w8, [x21, #1146]
  4532f4:	cbz	w8, 4532d0 <feof@plt+0x4fa30>
  4532f8:	b	453280 <feof@plt+0x4f9e0>
  4532fc:	mov	x22, x24
  453300:	ldrh	w20, [x27, #16]
  453304:	cbnz	x20, 453324 <feof@plt+0x4fa84>
  453308:	b	453268 <feof@plt+0x4f9c8>
  45330c:	mov	x22, x24
  453310:	b	453318 <feof@plt+0x4fa78>
  453314:	mov	x22, x23
  453318:	mov	x24, x23
  45331c:	ldrh	w20, [x27, #16]
  453320:	cbz	x20, 453268 <feof@plt+0x4f9c8>
  453324:	ldr	x28, [x27]
  453328:	sub	x21, x24, x22
  45332c:	and	x25, x21, #0xffffffff
  453330:	b	453340 <feof@plt+0x4faa0>
  453334:	subs	x20, x20, #0x1
  453338:	add	x28, x28, #0x8
  45333c:	b.eq	453268 <feof@plt+0x4f9c8>  // b.none
  453340:	ldr	x8, [x28]
  453344:	ldr	w9, [x8, #8]
  453348:	cmp	w9, w21
  45334c:	b.ne	453334 <feof@plt+0x4fa94>  // b.any
  453350:	ldr	x26, [x8]
  453354:	mov	x0, x22
  453358:	mov	x2, x25
  45335c:	mov	x1, x26
  453360:	bl	403840 <bcmp@plt>
  453364:	cbnz	w0, 453334 <feof@plt+0x4fa94>
  453368:	ldr	x0, [sp, #40]
  45336c:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  453370:	mov	w1, #0x6                   	// #6
  453374:	add	x2, x2, #0x931
  453378:	mov	x3, x26
  45337c:	bl	442628 <feof@plt+0x3ed88>
  453380:	b	453268 <feof@plt+0x4f9c8>
  453384:	ldr	w8, [x27, #12]
  453388:	ldr	x24, [sp, #24]
  45338c:	ldr	w23, [sp, #36]
  453390:	mov	w22, #0x18                  	// #24
  453394:	add	w9, w8, #0x1
  453398:	madd	x8, x8, x22, x27
  45339c:	add	x1, x8, #0x18
  4533a0:	str	w9, [x27, #12]
  4533a4:	ldr	w8, [x27, #12]
  4533a8:	cmp	w8, #0x2
  4533ac:	b.cc	453434 <feof@plt+0x4fb94>  // b.lo, b.ul, b.last
  4533b0:	ldurb	w9, [x1, #-20]
  4533b4:	cmp	w9, #0x25
  4533b8:	b.ne	453434 <feof@plt+0x4fb94>  // b.any
  4533bc:	ldrb	w9, [x27, #19]
  4533c0:	tbz	w9, #2, 453434 <feof@plt+0x4fb94>
  4533c4:	ldrb	w9, [x1, #4]
  4533c8:	cmp	w9, #0x50
  4533cc:	b.ne	453428 <feof@plt+0x4fb88>  // b.any
  4533d0:	ldrh	w9, [x1, #6]
  4533d4:	sub	x8, x1, #0x18
  4533d8:	tbz	w9, #0, 4533e4 <feof@plt+0x4fb44>
  4533dc:	orr	w9, w9, #0x200
  4533e0:	strh	w9, [x1, #6]
  4533e4:	ldurh	w10, [x1, #-18]
  4533e8:	tbz	w10, #1, 4533f4 <feof@plt+0x4fb54>
  4533ec:	orr	w9, w9, #0x100
  4533f0:	strh	w9, [x1, #6]
  4533f4:	and	w9, w9, #0xfffffffe
  4533f8:	and	w10, w10, #0x1
  4533fc:	orr	w9, w10, w9
  453400:	orr	w9, w9, #0x4
  453404:	strh	w9, [x1, #6]
  453408:	ldr	x9, [x1, #16]
  45340c:	ldr	q0, [x1]
  453410:	str	x9, [x8, #16]
  453414:	str	q0, [x8]
  453418:	ldr	w8, [x27, #12]
  45341c:	sub	w8, w8, #0x1
  453420:	str	w8, [x27, #12]
  453424:	b	453434 <feof@plt+0x4fb94>
  453428:	ldr	w9, [x21, #1116]
  45342c:	cmp	w9, #0x15
  453430:	b.ne	453730 <feof@plt+0x4fe90>  // b.any
  453434:	ldrb	w9, [x1, #4]
  453438:	cmp	w9, #0x26
  45343c:	b.eq	453450 <feof@plt+0x4fbb0>  // b.none
  453440:	cmp	w9, #0x16
  453444:	b.eq	453498 <feof@plt+0x4fbf8>  // b.none
  453448:	mov	w23, wzr
  45344c:	b	453184 <feof@plt+0x4f8e4>
  453450:	subs	w8, w8, #0x1
  453454:	b.eq	45349c <feof@plt+0x4fbfc>  // b.none
  453458:	tbnz	w23, #0, 453170 <feof@plt+0x4f8d0>
  45345c:	str	w8, [x27, #12]
  453460:	ldurh	w8, [x1, #-18]
  453464:	ldrh	w10, [x1, #6]
  453468:	orr	w9, w8, #0x8
  45346c:	tst	w10, #0x3
  453470:	sturh	w9, [x1, #-18]
  453474:	b.eq	453180 <feof@plt+0x4f8e0>  // b.none
  453478:	mov	w12, #0x108                 	// #264
  45347c:	orr	w8, w8, w12
  453480:	tst	w10, #0x2
  453484:	and	w11, w10, #0x1
  453488:	csel	w8, w9, w8, eq  // eq = none
  45348c:	orr	w8, w8, w11, lsl #9
  453490:	sturh	w8, [x1, #-18]
  453494:	b	453180 <feof@plt+0x4f8e0>
  453498:	tbz	w23, #0, 45360c <feof@plt+0x4fd6c>
  45349c:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4534a0:	add	x2, x2, #0x6c3
  4534a4:	mov	w1, #0x3                   	// #3
  4534a8:	mov	x0, x21
  4534ac:	bl	4424f8 <feof@plt+0x3ec58>
  4534b0:	ldr	x22, [sp, #8]
  4534b4:	ldr	w20, [sp, #4]
  4534b8:	mov	x23, xzr
  4534bc:	strb	wzr, [x21, #22]
  4534c0:	cbz	w20, 453500 <feof@plt+0x4fc60>
  4534c4:	sub	w8, w20, #0x1
  4534c8:	mov	w9, #0x18                  	// #24
  4534cc:	umull	x8, w8, w9
  4534d0:	ldr	x9, [x21, #504]
  4534d4:	sub	w20, w20, #0x1
  4534d8:	add	x9, x9, x8
  4534dc:	ldr	x10, [x9]
  4534e0:	ldrh	w11, [x9, #16]
  4534e4:	sub	x8, x8, #0x18
  4534e8:	ldrh	w12, [x10, #18]
  4534ec:	bfxil	w12, w11, #0, #2
  4534f0:	strh	w12, [x10, #18]
  4534f4:	ldr	x9, [x9, #8]
  4534f8:	str	x9, [x10, #24]
  4534fc:	cbnz	w20, 4534d0 <feof@plt+0x4fc30>
  453500:	cbz	x23, 453584 <feof@plt+0x4fce4>
  453504:	ldrh	w19, [x22, #18]
  453508:	tbz	w19, #1, 453858 <feof@plt+0x4ffb8>
  45350c:	and	w8, w19, #0x3
  453510:	cmp	w8, #0x2
  453514:	b.ne	453560 <feof@plt+0x4fcc0>  // b.any
  453518:	ldrb	w8, [x21, #1151]
  45351c:	cbz	w8, 453560 <feof@plt+0x4fcc0>
  453520:	ldr	x19, [x22, #24]
  453524:	ldrb	w8, [x19, #19]
  453528:	tbnz	w8, #5, 453560 <feof@plt+0x4fcc0>
  45352c:	ldr	x0, [x21, #40]
  453530:	ldr	w1, [x19, #8]
  453534:	bl	44e220 <feof@plt+0x4a980>
  453538:	ldr	w8, [x0, #20]
  45353c:	cbnz	w8, 453560 <feof@plt+0x4fcc0>
  453540:	ldr	w2, [x19, #8]
  453544:	ldr	x5, [x22]
  453548:	adrp	x4, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45354c:	add	x4, x4, #0xd8
  453550:	mov	w1, #0xe                   	// #14
  453554:	mov	x0, x21
  453558:	mov	w3, wzr
  45355c:	bl	442ab4 <feof@plt+0x3f214>
  453560:	ldrh	w8, [x22, #18]
  453564:	tbnz	w8, #5, 4537dc <feof@plt+0x4ff3c>
  453568:	mvn	w9, w8
  45356c:	tst	w9, #0x3
  453570:	b.ne	45358c <feof@plt+0x4fcec>  // b.any
  453574:	ldr	x8, [sp, #40]
  453578:	ldrb	w8, [x8, #1143]
  45357c:	cbnz	w8, 4537dc <feof@plt+0x4ff3c>
  453580:	b	453844 <feof@plt+0x4ffa4>
  453584:	mov	w0, wzr
  453588:	b	453890 <feof@plt+0x4fff0>
  45358c:	tbnz	w8, #8, 453844 <feof@plt+0x4ffa4>
  453590:	ldr	x21, [x22, #24]
  453594:	ldrb	w8, [x21, #18]
  453598:	cbz	w8, 4535b4 <feof@plt+0x4fd14>
  45359c:	ldr	x0, [sp, #40]
  4535a0:	sub	w2, w8, #0x1
  4535a4:	mov	x1, x21
  4535a8:	ldr	x9, [x0, #1048]
  4535ac:	blr	x9
  4535b0:	strb	wzr, [x21, #18]
  4535b4:	ldrh	w9, [x21, #16]
  4535b8:	ldrh	w8, [x23, #16]
  4535bc:	cmp	w9, w8
  4535c0:	b.ne	4537dc <feof@plt+0x4ff3c>  // b.any
  4535c4:	ldrb	w8, [x21, #19]
  4535c8:	ldrb	w10, [x23, #19]
  4535cc:	eor	w10, w10, w8
  4535d0:	tst	w10, #0xc
  4535d4:	b.ne	4537dc <feof@plt+0x4ff3c>  // b.any
  4535d8:	sub	w9, w9, #0x1
  4535dc:	cmn	w9, #0x1
  4535e0:	b.eq	453760 <feof@plt+0x4fec0>  // b.none
  4535e4:	ldr	x10, [x21]
  4535e8:	ldr	x11, [x23]
  4535ec:	mov	w12, w9
  4535f0:	lsl	x12, x12, #3
  4535f4:	ldr	x10, [x10, x12]
  4535f8:	ldr	x11, [x11, x12]
  4535fc:	sub	w9, w9, #0x1
  453600:	cmp	x10, x11
  453604:	b.eq	4535dc <feof@plt+0x4fd3c>  // b.none
  453608:	b	4537dc <feof@plt+0x4ff3c>
  45360c:	ldurb	w8, [x29, #-31]
  453610:	cbz	w8, 453634 <feof@plt+0x4fd94>
  453614:	ldur	w8, [x29, #-28]
  453618:	cbz	w8, 45363c <feof@plt+0x4fd9c>
  45361c:	ldur	x0, [x29, #-40]
  453620:	ldur	w2, [x29, #-20]
  453624:	adrp	x3, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  453628:	add	x3, x3, #0x96b
  45362c:	mov	w1, #0x3                   	// #3
  453630:	bl	442da8 <feof@plt+0x3f508>
  453634:	ldur	w8, [x29, #-28]
  453638:	cbnz	w8, 4534b0 <feof@plt+0x4fc10>
  45363c:	ldr	w8, [x27, #12]
  453640:	mov	w9, #0x18                  	// #24
  453644:	mov	x0, x21
  453648:	sub	w8, w8, #0x1
  45364c:	str	w8, [x27, #12]
  453650:	umull	x8, w8, w9
  453654:	add	x1, x8, #0x18
  453658:	bl	44de04 <feof@plt+0x4a564>
  45365c:	ldr	w8, [x0, #12]
  453660:	mov	x23, x0
  453664:	cbz	w8, 453674 <feof@plt+0x4fdd4>
  453668:	ldrh	w9, [x23, #30]
  45366c:	and	w9, w9, #0xfffe
  453670:	strh	w9, [x23, #30]
  453674:	ldr	x22, [sp, #8]
  453678:	ldr	w20, [sp, #4]
  45367c:	ldr	w12, [sp, #20]
  453680:	cbz	w12, 4534bc <feof@plt+0x4fc1c>
  453684:	ldr	x9, [x24]
  453688:	mov	x11, x24
  45368c:	ldp	x1, x10, [x9, #16]
  453690:	mov	w9, #0x18                  	// #24
  453694:	umull	x24, w12, w9
  453698:	sub	x9, x10, x1
  45369c:	cmp	x9, x24
  4536a0:	b.cs	4536c0 <feof@plt+0x4fe20>  // b.hs, b.nlast
  4536a4:	mov	x0, x21
  4536a8:	mov	x1, x11
  4536ac:	mov	x2, x24
  4536b0:	bl	44dc10 <feof@plt+0x4a370>
  4536b4:	ldr	x8, [x21, #56]
  4536b8:	ldr	x1, [x8, #16]
  4536bc:	ldr	w8, [x23, #12]
  4536c0:	add	x9, x23, #0x18
  4536c4:	cbz	w8, 45373c <feof@plt+0x4fe9c>
  4536c8:	mov	w11, wzr
  4536cc:	mov	w10, wzr
  4536d0:	mov	w13, wzr
  4536d4:	mov	w12, #0x18                  	// #24
  4536d8:	b	453700 <feof@plt+0x4fe60>
  4536dc:	ldr	x15, [x14, #16]
  4536e0:	ldr	q0, [x14]
  4536e4:	umaddl	x14, w10, w12, x9
  4536e8:	add	w10, w10, #0x1
  4536ec:	str	x15, [x14, #16]
  4536f0:	str	q0, [x14]
  4536f4:	add	w11, w11, #0x1
  4536f8:	cmp	w11, w8
  4536fc:	b.eq	453740 <feof@plt+0x4fea0>  // b.none
  453700:	umaddl	x14, w11, w12, x9
  453704:	ldrb	w15, [x14, #4]
  453708:	cmp	w15, #0x26
  45370c:	b.ne	4536dc <feof@plt+0x4fe3c>  // b.any
  453710:	ldr	x8, [x14, #16]
  453714:	ldr	q0, [x14]
  453718:	umaddl	x14, w13, w12, x1
  45371c:	add	w13, w13, #0x1
  453720:	str	x8, [x14, #16]
  453724:	str	q0, [x14]
  453728:	ldr	w8, [x23, #12]
  45372c:	b	4536f4 <feof@plt+0x4fe54>
  453730:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  453734:	add	x2, x2, #0x7a2
  453738:	b	4534a4 <feof@plt+0x4fc04>
  45373c:	mov	w10, wzr
  453740:	mov	w8, #0x18                  	// #24
  453744:	umaddl	x0, w10, w8, x9
  453748:	mov	x2, x24
  45374c:	bl	402fc0 <memcpy@plt>
  453750:	ldrb	w8, [x23, #19]
  453754:	orr	w8, w8, #0x40
  453758:	strb	w8, [x23, #19]
  45375c:	b	4534bc <feof@plt+0x4fc1c>
  453760:	and	w8, w8, #0x3
  453764:	cmp	w8, #0x2
  453768:	b.ne	4537a4 <feof@plt+0x4ff04>  // b.any
  45376c:	mov	x0, x21
  453770:	mov	x1, x23
  453774:	bl	4589c0 <feof@plt+0x55120>
  453778:	tbnz	w0, #0, 4537dc <feof@plt+0x4ff3c>
  45377c:	b	453844 <feof@plt+0x4ffa4>
  453780:	mov	w8, w20
  453784:	lsl	x1, x8, #3
  453788:	mov	x0, x21
  45378c:	bl	44de04 <feof@plt+0x4a564>
  453790:	mov	x24, x0
  453794:	mov	x23, xzr
  453798:	b	453054 <feof@plt+0x4f7b4>
  45379c:	ldr	x22, [sp, #8]
  4537a0:	b	4534b8 <feof@plt+0x4fc18>
  4537a4:	ldr	w19, [x21, #12]
  4537a8:	ldr	w8, [x23, #12]
  4537ac:	cmp	w19, w8
  4537b0:	b.ne	4537dc <feof@plt+0x4ff3c>  // b.any
  4537b4:	mov	w20, #0x18                  	// #24
  4537b8:	cbz	x19, 453844 <feof@plt+0x4ffa4>
  4537bc:	sub	w8, w19, #0x1
  4537c0:	umaddl	x9, w8, w20, x21
  4537c4:	umaddl	x8, w8, w20, x23
  4537c8:	add	x0, x9, #0x18
  4537cc:	add	x1, x8, #0x18
  4537d0:	bl	44d4c0 <feof@plt+0x49c20>
  4537d4:	sub	x19, x19, #0x1
  4537d8:	cbnz	w0, 4537b8 <feof@plt+0x4ff18>
  4537dc:	ldr	x0, [sp, #40]
  4537e0:	ldrh	w8, [x22, #18]
  4537e4:	mov	w9, #0x23                  	// #35
  4537e8:	ldr	x5, [x22]
  4537ec:	ldr	w2, [x0, #48]
  4537f0:	and	w8, w8, w9
  4537f4:	cmp	w8, #0x3
  4537f8:	mov	w8, #0xb                   	// #11
  4537fc:	adrp	x4, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  453800:	csel	w1, w8, wzr, eq  // eq = none
  453804:	add	x4, x4, #0x38e
  453808:	mov	w3, wzr
  45380c:	bl	442bb0 <feof@plt+0x3f310>
  453810:	tbz	w0, #0, 453844 <feof@plt+0x4ffa4>
  453814:	ldrh	w8, [x22, #18]
  453818:	and	w8, w8, #0x3
  45381c:	cmp	w8, #0x2
  453820:	b.ne	453844 <feof@plt+0x4ffa4>  // b.any
  453824:	ldr	x8, [x22, #24]
  453828:	ldr	x0, [sp, #40]
  45382c:	adrp	x4, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  453830:	add	x4, x4, #0x39d
  453834:	ldr	w2, [x8, #8]
  453838:	mov	w1, #0x5                   	// #5
  45383c:	mov	w3, wzr
  453840:	bl	4429b8 <feof@plt+0x3f118>
  453844:	ldrh	w8, [x22, #18]
  453848:	mov	w9, #0xffffff3c            	// #-196
  45384c:	str	xzr, [x22, #24]
  453850:	and	w19, w8, w9
  453854:	strh	w19, [x22, #18]
  453858:	ldr	x20, [x22]
  45385c:	and	w8, w19, #0xfffffffc
  453860:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  453864:	orr	w21, w8, #0x2
  453868:	add	x1, x1, #0x3cd
  45386c:	mov	w2, #0x7                   	// #7
  453870:	mov	x0, x20
  453874:	strh	w21, [x22, #18]
  453878:	str	x23, [x22, #24]
  45387c:	bl	403450 <strncmp@plt>
  453880:	cbz	w0, 4538b0 <feof@plt+0x50010>
  453884:	and	w8, w21, #0xfffffeff
  453888:	mov	w0, #0x1                   	// #1
  45388c:	strh	w8, [x22, #18]
  453890:	ldp	x20, x19, [sp, #192]
  453894:	ldp	x22, x21, [sp, #176]
  453898:	ldp	x24, x23, [sp, #160]
  45389c:	ldp	x26, x25, [sp, #144]
  4538a0:	ldp	x28, x27, [sp, #128]
  4538a4:	ldp	x29, x30, [sp, #112]
  4538a8:	add	sp, sp, #0xd0
  4538ac:	ret
  4538b0:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4538b4:	add	x1, x1, #0x3d5
  4538b8:	mov	x0, x20
  4538bc:	bl	403640 <strcmp@plt>
  4538c0:	cbz	w0, 453884 <feof@plt+0x4ffe4>
  4538c4:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4538c8:	add	x1, x1, #0x3ea
  4538cc:	mov	x0, x20
  4538d0:	bl	403640 <strcmp@plt>
  4538d4:	cbz	w0, 453884 <feof@plt+0x4ffe4>
  4538d8:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4538dc:	add	x1, x1, #0x3fe
  4538e0:	mov	x0, x20
  4538e4:	bl	403640 <strcmp@plt>
  4538e8:	cbz	w0, 453884 <feof@plt+0x4ffe4>
  4538ec:	mov	w9, #0xfffffc02            	// #-1022
  4538f0:	and	w8, w19, #0x3fc
  4538f4:	and	w9, w21, w9
  4538f8:	orr	w8, w8, w9
  4538fc:	orr	w21, w8, #0x20
  453900:	strh	w21, [x22, #18]
  453904:	b	453884 <feof@plt+0x4ffe4>
  453908:	ldr	x8, [x1, #24]
  45390c:	add	w9, w2, #0x1
  453910:	strb	w9, [x8, #18]
  453914:	ret
  453918:	stp	x29, x30, [sp, #-48]!
  45391c:	stp	x20, x19, [sp, #32]
  453920:	ldrh	w8, [x1, #18]
  453924:	mov	x19, x1
  453928:	mov	x20, x0
  45392c:	str	x21, [sp, #16]
  453930:	orr	w9, w8, #0x80
  453934:	ands	w8, w8, #0x3
  453938:	mov	x29, sp
  45393c:	strh	w9, [x1, #18]
  453940:	b.eq	45399c <feof@plt+0x500fc>  // b.none
  453944:	cmp	w8, #0x3
  453948:	b.eq	453978 <feof@plt+0x500d8>  // b.none
  45394c:	cmp	w8, #0x2
  453950:	b.ne	4539b4 <feof@plt+0x50114>  // b.any
  453954:	ldr	x21, [x19, #24]
  453958:	ldrb	w8, [x21, #18]
  45395c:	cbz	w8, 453978 <feof@plt+0x500d8>
  453960:	ldr	x9, [x20, #1048]
  453964:	sub	w2, w8, #0x1
  453968:	mov	x0, x20
  45396c:	mov	x1, x21
  453970:	blr	x9
  453974:	strb	wzr, [x21, #18]
  453978:	ldr	x3, [x20, #1008]
  45397c:	cbz	x3, 4539a4 <feof@plt+0x50104>
  453980:	ldr	w1, [x20, #48]
  453984:	mov	x0, x20
  453988:	mov	x2, x19
  45398c:	ldp	x20, x19, [sp, #32]
  453990:	ldr	x21, [sp, #16]
  453994:	ldp	x29, x30, [sp], #48
  453998:	br	x3
  45399c:	ldr	x3, [x20, #1016]
  4539a0:	cbnz	x3, 453980 <feof@plt+0x500e0>
  4539a4:	ldp	x20, x19, [sp, #32]
  4539a8:	ldr	x21, [sp, #16]
  4539ac:	ldp	x29, x30, [sp], #48
  4539b0:	ret
  4539b4:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4539b8:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4539bc:	add	x0, x0, #0x176
  4539c0:	add	x2, x2, #0x415
  4539c4:	mov	w1, #0xe0b                 	// #3595
  4539c8:	bl	429434 <feof@plt+0x25b94>
  4539cc:	stp	x29, x30, [sp, #-80]!
  4539d0:	stp	x26, x25, [sp, #16]
  4539d4:	stp	x24, x23, [sp, #32]
  4539d8:	stp	x22, x21, [sp, #48]
  4539dc:	stp	x20, x19, [sp, #64]
  4539e0:	ldr	x20, [x1, #24]
  4539e4:	ldr	w9, [x1, #8]
  4539e8:	mov	x21, x1
  4539ec:	mov	x19, x0
  4539f0:	ldrb	w8, [x20, #19]
  4539f4:	add	w9, w9, w9, lsl #2
  4539f8:	lsl	w10, w9, #1
  4539fc:	mov	x29, sp
  453a00:	tbnz	w8, #2, 453a0c <feof@plt+0x5016c>
  453a04:	add	w23, w10, #0x2
  453a08:	b	453a8c <feof@plt+0x501ec>
  453a0c:	ldrh	w9, [x20, #16]
  453a10:	add	w23, w10, #0x6
  453a14:	cbz	x9, 453a8c <feof@plt+0x501ec>
  453a18:	ldr	x10, [x20]
  453a1c:	cmp	w9, #0x1
  453a20:	b.ne	453a2c <feof@plt+0x5018c>  // b.any
  453a24:	mov	x11, xzr
  453a28:	b	453a70 <feof@plt+0x501d0>
  453a2c:	and	x11, x9, #0xfffe
  453a30:	mov	w12, wzr
  453a34:	add	x13, x10, #0x8
  453a38:	mov	x14, x11
  453a3c:	ldp	x15, x16, [x13, #-8]
  453a40:	subs	x14, x14, #0x2
  453a44:	add	x13, x13, #0x10
  453a48:	ldr	w15, [x15, #8]
  453a4c:	ldr	w16, [x16, #8]
  453a50:	add	w15, w23, w15
  453a54:	add	w12, w12, w16
  453a58:	add	w23, w15, #0x1
  453a5c:	add	w12, w12, #0x1
  453a60:	b.ne	453a3c <feof@plt+0x5019c>  // b.any
  453a64:	cmp	x11, x9
  453a68:	add	w23, w12, w23
  453a6c:	b.eq	453a8c <feof@plt+0x501ec>  // b.none
  453a70:	ldr	x12, [x10, x11, lsl #3]
  453a74:	add	x11, x11, #0x1
  453a78:	cmp	x11, x9
  453a7c:	ldr	w12, [x12, #8]
  453a80:	add	w12, w23, w12
  453a84:	add	w23, w12, #0x1
  453a88:	b.cc	453a70 <feof@plt+0x501d0>  // b.lo, b.ul, b.last
  453a8c:	ldrb	w9, [x19, #1160]
  453a90:	cbz	w9, 453ba8 <feof@plt+0x50308>
  453a94:	mov	x0, x20
  453a98:	bl	458514 <feof@plt+0x54c74>
  453a9c:	add	w23, w23, w0
  453aa0:	ldr	w8, [x19, #512]
  453aa4:	ldr	x0, [x19, #504]
  453aa8:	cmp	w23, w8
  453aac:	b.ls	453ac0 <feof@plt+0x50220>  // b.plast
  453ab0:	mov	w1, w23
  453ab4:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  453ab8:	str	x0, [x19, #504]
  453abc:	str	w23, [x19, #512]
  453ac0:	mov	x1, x21
  453ac4:	bl	44ceb8 <feof@plt+0x49618>
  453ac8:	ldrb	w8, [x20, #19]
  453acc:	mov	x21, x0
  453ad0:	tbz	w8, #2, 453b68 <feof@plt+0x502c8>
  453ad4:	mov	w8, #0x28                  	// #40
  453ad8:	strb	w8, [x21], #1
  453adc:	ldrh	w8, [x20, #16]
  453ae0:	cbz	w8, 453b60 <feof@plt+0x502c0>
  453ae4:	mov	x22, xzr
  453ae8:	mov	w23, #0x2c                  	// #44
  453aec:	mov	w24, #0x2e2e                	// #11822
  453af0:	mov	w25, #0x2e                  	// #46
  453af4:	b	453b08 <feof@plt+0x50268>
  453af8:	strb	w23, [x21], #1
  453afc:	ldrh	w8, [x20, #16]
  453b00:	cmp	x22, x8
  453b04:	b.cs	453b60 <feof@plt+0x502c0>  // b.hs, b.nlast
  453b08:	ldr	x9, [x20]
  453b0c:	ldr	x26, [x9, x22, lsl #3]
  453b10:	ldr	x9, [x19, #1272]
  453b14:	cmp	x26, x9
  453b18:	b.eq	453b38 <feof@plt+0x50298>  // b.none
  453b1c:	ldr	x1, [x26]
  453b20:	ldr	w2, [x26, #8]
  453b24:	mov	x0, x21
  453b28:	bl	402fc0 <memcpy@plt>
  453b2c:	ldr	w9, [x26, #8]
  453b30:	ldrh	w8, [x20, #16]
  453b34:	add	x21, x21, x9
  453b38:	add	x22, x22, #0x1
  453b3c:	cmp	x22, w8, uxth
  453b40:	b.cc	453af8 <feof@plt+0x50258>  // b.lo, b.ul, b.last
  453b44:	ldrb	w8, [x20, #19]
  453b48:	tbz	w8, #3, 453afc <feof@plt+0x5025c>
  453b4c:	add	x8, x21, #0x3
  453b50:	strh	w24, [x21]
  453b54:	strb	w25, [x21, #2]
  453b58:	mov	x21, x8
  453b5c:	b	453afc <feof@plt+0x5025c>
  453b60:	mov	w8, #0x29                  	// #41
  453b64:	strb	w8, [x21], #1
  453b68:	mov	w8, #0x20                  	// #32
  453b6c:	strb	w8, [x21], #1
  453b70:	ldrb	w8, [x19, #1160]
  453b74:	cbz	w8, 453c10 <feof@plt+0x50370>
  453b78:	mov	x0, x20
  453b7c:	mov	x1, x21
  453b80:	bl	458578 <feof@plt+0x54cd8>
  453b84:	mov	x21, x0
  453b88:	strb	wzr, [x21]
  453b8c:	ldr	x0, [x19, #504]
  453b90:	ldp	x20, x19, [sp, #64]
  453b94:	ldp	x22, x21, [sp, #48]
  453b98:	ldp	x24, x23, [sp, #32]
  453b9c:	ldp	x26, x25, [sp, #16]
  453ba0:	ldp	x29, x30, [sp], #80
  453ba4:	ret
  453ba8:	ldr	w9, [x20, #12]
  453bac:	tbnz	w8, #6, 453cc8 <feof@plt+0x50428>
  453bb0:	cbz	w9, 453aa0 <feof@plt+0x50200>
  453bb4:	mov	w24, w9
  453bb8:	add	x22, x20, #0x18
  453bbc:	b	453bf8 <feof@plt+0x50358>
  453bc0:	mov	x0, x22
  453bc4:	bl	44ce70 <feof@plt+0x495d0>
  453bc8:	ldrh	w8, [x22, #6]
  453bcc:	add	w9, w0, w23
  453bd0:	add	x22, x22, #0x18
  453bd4:	ubfx	w10, w8, #2, #1
  453bd8:	add	w9, w9, w10
  453bdc:	tst	w8, #0x8
  453be0:	add	w10, w9, #0x3
  453be4:	and	w8, w8, #0x1
  453be8:	csel	w9, w9, w10, eq  // eq = none
  453bec:	subs	x24, x24, #0x1
  453bf0:	add	w23, w9, w8
  453bf4:	b.eq	453aa0 <feof@plt+0x50200>  // b.none
  453bf8:	ldrb	w8, [x22, #4]
  453bfc:	cmp	w8, #0x50
  453c00:	b.ne	453bc0 <feof@plt+0x50320>  // b.any
  453c04:	ldr	x8, [x22, #16]
  453c08:	ldr	w0, [x8, #8]
  453c0c:	b	453bc8 <feof@plt+0x50328>
  453c10:	ldr	w8, [x20, #12]
  453c14:	cbz	w8, 453b88 <feof@plt+0x502e8>
  453c18:	ldrb	w9, [x20, #19]
  453c1c:	tbnz	w9, #6, 453cf4 <feof@plt+0x50454>
  453c20:	mov	w22, w8
  453c24:	add	x20, x20, #0x18
  453c28:	mov	w23, #0x2320                	// #8992
  453c2c:	mov	w24, #0x23                  	// #35
  453c30:	mov	w25, #0x20                  	// #32
  453c34:	b	453c44 <feof@plt+0x503a4>
  453c38:	subs	x22, x22, #0x1
  453c3c:	add	x20, x20, #0x18
  453c40:	b.eq	453b88 <feof@plt+0x502e8>  // b.none
  453c44:	ldrh	w8, [x20, #6]
  453c48:	tbz	w8, #0, 453c54 <feof@plt+0x503b4>
  453c4c:	strb	w25, [x21], #1
  453c50:	ldrh	w8, [x20, #6]
  453c54:	tbz	w8, #2, 453c5c <feof@plt+0x503bc>
  453c58:	strb	w24, [x21], #1
  453c5c:	ldrb	w8, [x20, #4]
  453c60:	cmp	w8, #0x50
  453c64:	b.ne	453c94 <feof@plt+0x503f4>  // b.any
  453c68:	ldr	x8, [x20, #16]
  453c6c:	mov	x0, x21
  453c70:	ldr	x1, [x8]
  453c74:	ldr	w2, [x8, #8]
  453c78:	bl	402fc0 <memcpy@plt>
  453c7c:	ldr	x8, [x20, #16]
  453c80:	ldr	w8, [x8, #8]
  453c84:	add	x21, x21, x8
  453c88:	ldrb	w8, [x20, #6]
  453c8c:	tbz	w8, #3, 453c38 <feof@plt+0x50398>
  453c90:	b	453cb4 <feof@plt+0x50414>
  453c94:	mov	w3, #0x1                   	// #1
  453c98:	mov	x0, x19
  453c9c:	mov	x1, x20
  453ca0:	mov	x2, x21
  453ca4:	bl	44d044 <feof@plt+0x497a4>
  453ca8:	mov	x21, x0
  453cac:	ldrb	w8, [x20, #6]
  453cb0:	tbz	w8, #3, 453c38 <feof@plt+0x50398>
  453cb4:	add	x8, x21, #0x3
  453cb8:	strh	w23, [x21]
  453cbc:	strb	w24, [x21, #2]
  453cc0:	mov	x21, x8
  453cc4:	b	453c38 <feof@plt+0x50398>
  453cc8:	mov	w8, #0x18                  	// #24
  453ccc:	cbz	x9, 453aa0 <feof@plt+0x50200>
  453cd0:	sub	w10, w9, #0x1
  453cd4:	umaddl	x10, w10, w8, x20
  453cd8:	ldrb	w10, [x10, #28]
  453cdc:	sub	x9, x9, #0x1
  453ce0:	cmp	w10, #0x26
  453ce4:	b.eq	453ccc <feof@plt+0x5042c>  // b.none
  453ce8:	add	w9, w9, #0x1
  453cec:	cbnz	w9, 453bb4 <feof@plt+0x50314>
  453cf0:	b	453aa0 <feof@plt+0x50200>
  453cf4:	mov	w9, #0x18                  	// #24
  453cf8:	cbz	x8, 453b88 <feof@plt+0x502e8>
  453cfc:	sub	w10, w8, #0x1
  453d00:	umaddl	x10, w10, w9, x20
  453d04:	ldrb	w10, [x10, #28]
  453d08:	sub	x8, x8, #0x1
  453d0c:	cmp	w10, #0x26
  453d10:	b.eq	453cf8 <feof@plt+0x50458>  // b.none
  453d14:	cmn	w8, #0x1
  453d18:	b.eq	453b88 <feof@plt+0x502e8>  // b.none
  453d1c:	add	x8, x8, #0x1
  453d20:	b	453c20 <feof@plt+0x50380>
  453d24:	sub	sp, sp, #0x140
  453d28:	mov	w8, #0x1                   	// #1
  453d2c:	stp	x29, x30, [sp, #224]
  453d30:	stp	x28, x27, [sp, #240]
  453d34:	stp	x26, x25, [sp, #256]
  453d38:	stp	x24, x23, [sp, #272]
  453d3c:	stp	x22, x21, [sp, #288]
  453d40:	stp	x20, x19, [sp, #304]
  453d44:	strb	wzr, [x0, #440]
  453d48:	strb	wzr, [x0, #19]
  453d4c:	strb	w8, [x0, #192]
  453d50:	ldrh	w8, [x1, #18]
  453d54:	mov	w26, w3
  453d58:	mov	x27, x1
  453d5c:	mov	x19, x0
  453d60:	and	w9, w8, #0x3
  453d64:	cmp	w9, #0x2
  453d68:	add	x29, sp, #0xe0
  453d6c:	b.ne	453de0 <feof@plt+0x50540>  // b.any
  453d70:	ldr	x25, [x27, #24]
  453d74:	stur	xzr, [x29, #-48]
  453d78:	str	x2, [sp, #72]
  453d7c:	ldrb	w9, [x25, #19]
  453d80:	tbz	w9, #2, 454f00 <feof@plt+0x51660>
  453d84:	stur	wzr, [x29, #-52]
  453d88:	ldrb	w8, [x19, #24]
  453d8c:	ldr	w9, [x19, #500]
  453d90:	mov	x0, xzr
  453d94:	mov	w10, #0x1                   	// #1
  453d98:	add	w8, w8, #0x1
  453d9c:	add	w9, w9, #0x1
  453da0:	strb	w8, [x19, #24]
  453da4:	str	w9, [x19, #500]
  453da8:	strb	w10, [x19, #25]
  453dac:	mov	x20, x0
  453db0:	mov	x0, x19
  453db4:	mov	x1, xzr
  453db8:	bl	452230 <feof@plt+0x4e990>
  453dbc:	ldrb	w8, [x0, #4]
  453dc0:	cmp	w8, #0x53
  453dc4:	b.ne	453e40 <feof@plt+0x505a0>  // b.any
  453dc8:	cbz	x20, 453dac <feof@plt+0x5050c>
  453dcc:	ldrb	w8, [x20, #6]
  453dd0:	tbnz	w8, #0, 453db0 <feof@plt+0x50510>
  453dd4:	ldr	x8, [x0, #8]
  453dd8:	cbnz	x8, 453db0 <feof@plt+0x50510>
  453ddc:	b	453dac <feof@plt+0x5050c>
  453de0:	ldr	x8, [x19, #184]
  453de4:	strb	wzr, [x19, #192]
  453de8:	ldrh	w9, [x8, #18]
  453dec:	and	w9, w9, #0x3
  453df0:	cmp	w9, #0x2
  453df4:	b.ne	453e10 <feof@plt+0x50570>  // b.any
  453df8:	ldr	x8, [x8, #24]
  453dfc:	ldrb	w8, [x8, #19]
  453e00:	tbz	w8, #2, 453e10 <feof@plt+0x50570>
  453e04:	ldrb	w8, [x19, #1157]
  453e08:	mov	w3, w26
  453e0c:	cbnz	w8, 453e14 <feof@plt+0x50574>
  453e10:	ldr	w3, [x19, #176]
  453e14:	mov	x0, x19
  453e18:	mov	x1, x27
  453e1c:	mov	w2, w26
  453e20:	ldp	x20, x19, [sp, #304]
  453e24:	ldp	x22, x21, [sp, #288]
  453e28:	ldp	x24, x23, [sp, #272]
  453e2c:	ldp	x26, x25, [sp, #256]
  453e30:	ldp	x28, x27, [sp, #240]
  453e34:	ldp	x29, x30, [sp, #224]
  453e38:	add	sp, sp, #0x140
  453e3c:	b	455508 <feof@plt+0x51c68>
  453e40:	cmp	w8, #0x14
  453e44:	b.eq	453ed8 <feof@plt+0x50638>  // b.none
  453e48:	cmp	w8, #0x16
  453e4c:	b.ne	453e5c <feof@plt+0x505bc>  // b.any
  453e50:	add	x8, x19, #0x2b0
  453e54:	cmp	x0, x8
  453e58:	b.ne	453ed0 <feof@plt+0x50630>  // b.any
  453e5c:	mov	w1, #0x1                   	// #1
  453e60:	mov	x0, x19
  453e64:	bl	4529b4 <feof@plt+0x4f114>
  453e68:	cbz	x20, 453ed0 <feof@plt+0x50630>
  453e6c:	ldr	x8, [x19, #136]
  453e70:	ldr	w9, [x8, #48]
  453e74:	cmp	w9, #0x2
  453e78:	add	x9, x8, #0x28
  453e7c:	b.ne	453e84 <feof@plt+0x505e4>  // b.any
  453e80:	ldr	x9, [x9]
  453e84:	ldr	x0, [x8]
  453e88:	ldr	x21, [x9]
  453e8c:	cbnz	x0, 453eb0 <feof@plt+0x50610>
  453e90:	mov	w0, #0x38                  	// #56
  453e94:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  453e98:	movi	v0.2d, #0x0
  453e9c:	str	xzr, [x0, #48]
  453ea0:	stp	q0, q0, [x0, #16]
  453ea4:	ldr	x8, [x19, #136]
  453ea8:	stp	xzr, x8, [x0]
  453eac:	str	x0, [x8]
  453eb0:	mov	x10, xzr
  453eb4:	mov	w8, #0x1                   	// #1
  453eb8:	add	x9, x20, #0x18
  453ebc:	str	x0, [x19, #136]
  453ec0:	stp	xzr, x21, [x0, #32]
  453ec4:	str	w8, [x0, #48]
  453ec8:	stp	x20, x9, [x0, #16]
  453ecc:	b	453ef8 <feof@plt+0x50658>
  453ed0:	mov	x10, xzr
  453ed4:	b	453ef8 <feof@plt+0x50658>
  453ed8:	mov	w8, #0x2                   	// #2
  453edc:	sub	x2, x29, #0x30
  453ee0:	sub	x3, x29, #0x34
  453ee4:	mov	x0, x19
  453ee8:	mov	x1, x27
  453eec:	strb	w8, [x19, #25]
  453ef0:	bl	455784 <feof@plt+0x51ee4>
  453ef4:	mov	x10, x0
  453ef8:	ldr	w8, [x19, #500]
  453efc:	ldrb	w9, [x19, #24]
  453f00:	strb	wzr, [x19, #25]
  453f04:	sub	w8, w8, #0x1
  453f08:	sub	w9, w9, #0x1
  453f0c:	str	w8, [x19, #500]
  453f10:	strb	w9, [x19, #24]
  453f14:	cbz	x10, 4542f8 <feof@plt+0x50a58>
  453f18:	ldrh	w8, [x25, #16]
  453f1c:	str	x10, [sp, #40]
  453f20:	cbz	w8, 454e9c <feof@plt+0x515fc>
  453f24:	ldr	x8, [sp, #40]
  453f28:	str	x25, [sp, #48]
  453f2c:	str	x27, [sp, #64]
  453f30:	str	w26, [sp, #28]
  453f34:	ldr	x28, [x8, #8]
  453f38:	stur	xzr, [x29, #-16]
  453f3c:	ldrb	w8, [x25, #19]
  453f40:	ldr	w24, [x25, #12]
  453f44:	str	x28, [sp, #112]
  453f48:	tbnz	w8, #6, 4552d0 <feof@plt+0x51a30>
  453f4c:	cmp	w24, #0x0
  453f50:	cset	w8, eq  // eq = none
  453f54:	cbz	w24, 454344 <feof@plt+0x50aa4>
  453f58:	str	w8, [sp, #100]
  453f5c:	mov	x21, xzr
  453f60:	mov	w8, w24
  453f64:	add	x11, x19, #0x40
  453f68:	mov	w9, #0x18                  	// #24
  453f6c:	mov	w23, #0x30                  	// #48
  453f70:	mov	w20, #0x5c                  	// #92
  453f74:	mov	w10, w24
  453f78:	stur	x8, [x29, #-96]
  453f7c:	stur	x11, [x29, #-80]
  453f80:	b	453fac <feof@plt+0x5070c>
  453f84:	madd	x8, x22, x23, x28
  453f88:	ldr	w8, [x8, #24]
  453f8c:	add	w8, w24, w8
  453f90:	add	w24, w8, #0x1
  453f94:	ldur	w10, [x29, #-88]
  453f98:	mov	w9, #0x18                  	// #24
  453f9c:	ldur	x8, [x29, #-96]
  453fa0:	add	x21, x21, #0x1
  453fa4:	cmp	x21, x8
  453fa8:	b.eq	45433c <feof@plt+0x50a9c>  // b.none
  453fac:	madd	x8, x21, x9, x25
  453fb0:	ldrb	w8, [x8, #28]
  453fb4:	cmp	w8, #0x50
  453fb8:	b.ne	453f9c <feof@plt+0x506fc>  // b.any
  453fbc:	madd	x8, x21, x9, x25
  453fc0:	ldr	w9, [x8, #32]
  453fc4:	ldrh	w8, [x8, #30]
  453fc8:	mov	w12, #0x18                  	// #24
  453fcc:	add	w10, w10, #0x2
  453fd0:	sub	w22, w9, #0x1
  453fd4:	umaddl	x9, w22, w23, x28
  453fd8:	stur	w10, [x29, #-88]
  453fdc:	stur	x9, [x29, #-64]
  453fe0:	tbnz	w8, #2, 454020 <feof@plt+0x50780>
  453fe4:	tbnz	w8, #3, 453f84 <feof@plt+0x506e4>
  453fe8:	cbz	x21, 453ff8 <feof@plt+0x50758>
  453fec:	madd	x8, x21, x12, x25
  453ff0:	ldrb	w8, [x8, #6]
  453ff4:	tbnz	w8, #3, 453f84 <feof@plt+0x506e4>
  453ff8:	madd	x8, x22, x23, x28
  453ffc:	ldr	x8, [x8, #8]
  454000:	cbnz	x8, 454014 <feof@plt+0x50774>
  454004:	ldur	x1, [x29, #-64]
  454008:	mov	x0, x19
  45400c:	bl	455c20 <feof@plt+0x52380>
  454010:	ldur	x11, [x29, #-80]
  454014:	madd	x8, x22, x23, x28
  454018:	ldr	w8, [x8, #28]
  45401c:	b	453f8c <feof@plt+0x506ec>
  454020:	madd	x9, x22, x23, x28
  454024:	ldr	x8, [x9, #16]!
  454028:	add	w24, w24, #0x2
  45402c:	cbnz	x8, 453f94 <feof@plt+0x506f4>
  454030:	ldr	x8, [x11]
  454034:	stur	x9, [x29, #-104]
  454038:	ldp	x27, x9, [x8, #16]
  45403c:	sub	x8, x9, x27
  454040:	cmp	x8, #0x2
  454044:	b.hi	454060 <feof@plt+0x507c0>  // b.pmore
  454048:	ldur	x1, [x29, #-80]
  45404c:	mov	w2, #0x3                   	// #3
  454050:	mov	x0, x19
  454054:	bl	44dc10 <feof@plt+0x4a370>
  454058:	ldr	x8, [x19, #64]
  45405c:	ldr	x27, [x8, #16]
  454060:	mov	w8, #0x22                  	// #34
  454064:	strb	w8, [x27], #1
  454068:	madd	x9, x22, x23, x28
  45406c:	ldr	w8, [x9, #24]!
  454070:	stur	x9, [x29, #-72]
  454074:	cbz	w8, 454298 <feof@plt+0x509f8>
  454078:	str	x24, [sp, #104]
  45407c:	mov	x24, xzr
  454080:	mov	w26, wzr
  454084:	mov	x25, xzr
  454088:	b	4540b4 <feof@plt+0x50814>
  45408c:	ldr	x8, [x28, #16]
  454090:	mov	x25, xzr
  454094:	ldrb	w8, [x8]
  454098:	cmp	w8, #0x5c
  45409c:	csinc	w26, wzr, w26, ne  // ne = any
  4540a0:	ldur	x8, [x29, #-72]
  4540a4:	add	x24, x24, #0x1
  4540a8:	ldr	w8, [x8]
  4540ac:	cmp	x24, x8
  4540b0:	b.cs	45426c <feof@plt+0x509cc>  // b.hs, b.nlast
  4540b4:	ldur	x8, [x29, #-64]
  4540b8:	ldr	x8, [x8]
  4540bc:	ldr	x28, [x8, x24, lsl #3]
  4540c0:	ldrb	w0, [x28, #4]
  4540c4:	sub	w8, w0, #0x38
  4540c8:	cmp	w8, #0x1b
  4540cc:	b.hi	454234 <feof@plt+0x50994>  // b.pmore
  4540d0:	mov	w9, #0x1                   	// #1
  4540d4:	lsl	w9, w9, w8
  4540d8:	mov	w10, #0x7df                 	// #2015
  4540dc:	tst	w9, w10
  4540e0:	b.eq	454210 <feof@plt+0x50970>  // b.none
  4540e4:	mov	x0, x28
  4540e8:	bl	44ce70 <feof@plt+0x495d0>
  4540ec:	mov	w8, w0
  4540f0:	ldur	x1, [x29, #-80]
  4540f4:	lsl	x8, x8, #2
  4540f8:	mov	w22, #0x1                   	// #1
  4540fc:	ldr	x9, [x1]
  454100:	add	x23, x8, #0x3
  454104:	ldr	x10, [x9, #24]
  454108:	sub	x8, x10, x27
  45410c:	cmp	x8, x23
  454110:	b.cs	454138 <feof@plt+0x50898>  // b.hs, b.nlast
  454114:	ldr	x8, [x9, #16]
  454118:	mov	x0, x19
  45411c:	mov	x2, x23
  454120:	sub	x27, x27, x8
  454124:	bl	44dc10 <feof@plt+0x4a370>
  454128:	ldr	x8, [x19, #64]
  45412c:	ldr	x8, [x8, #16]
  454130:	add	x27, x8, x27
  454134:	b	45413c <feof@plt+0x5089c>
  454138:	ldr	x8, [x9, #16]
  45413c:	sub	x9, x27, #0x1
  454140:	cmp	x9, x8
  454144:	b.eq	454160 <feof@plt+0x508c0>  // b.none
  454148:	cmp	x25, #0x0
  45414c:	csel	x8, x28, x25, eq  // eq = none
  454150:	ldrb	w8, [x8, #6]
  454154:	tbz	w8, #0, 454160 <feof@plt+0x508c0>
  454158:	mov	w8, #0x20                  	// #32
  45415c:	strb	w8, [x27], #1
  454160:	cbz	w22, 4541d0 <feof@plt+0x50930>
  454164:	mov	x0, x19
  454168:	mov	x1, x23
  45416c:	bl	44da90 <feof@plt+0x4a1f0>
  454170:	ldr	x23, [x0, #16]
  454174:	mov	x25, x0
  454178:	mov	w3, #0x1                   	// #1
  45417c:	mov	x0, x19
  454180:	mov	x1, x28
  454184:	mov	x2, x23
  454188:	bl	44d044 <feof@plt+0x497a4>
  45418c:	cmp	w0, w23
  454190:	b.eq	4541ec <feof@plt+0x5094c>  // b.none
  454194:	sub	w8, w23, w0
  454198:	b	4541ac <feof@plt+0x5090c>
  45419c:	strb	w20, [x27], #1
  4541a0:	adds	w8, w8, #0x1
  4541a4:	strb	w9, [x27], #1
  4541a8:	b.cs	4541ec <feof@plt+0x5094c>  // b.hs, b.nlast
  4541ac:	ldrb	w9, [x23], #1
  4541b0:	cmp	w9, #0x5c
  4541b4:	b.eq	45419c <feof@plt+0x508fc>  // b.none
  4541b8:	cmp	w9, #0x22
  4541bc:	b.eq	45419c <feof@plt+0x508fc>  // b.none
  4541c0:	cmp	w9, #0xa
  4541c4:	b.ne	4541a0 <feof@plt+0x50900>  // b.any
  4541c8:	mov	w9, #0x6e                  	// #110
  4541cc:	b	45419c <feof@plt+0x508fc>
  4541d0:	mov	w3, #0x1                   	// #1
  4541d4:	mov	x0, x19
  4541d8:	mov	x1, x28
  4541dc:	mov	x2, x27
  4541e0:	bl	44d044 <feof@plt+0x497a4>
  4541e4:	mov	x27, x0
  4541e8:	b	4541f8 <feof@plt+0x50958>
  4541ec:	mov	x0, x19
  4541f0:	mov	x1, x25
  4541f4:	bl	44da70 <feof@plt+0x4a1d0>
  4541f8:	ldrb	w8, [x28, #4]
  4541fc:	cmp	w8, #0x3d
  454200:	b.eq	45408c <feof@plt+0x507ec>  // b.none
  454204:	mov	x25, xzr
  454208:	mov	w26, wzr
  45420c:	b	4540a0 <feof@plt+0x50800>
  454210:	cmp	w8, #0x1b
  454214:	b.ne	454234 <feof@plt+0x50994>  // b.any
  454218:	cbz	x25, 454264 <feof@plt+0x509c4>
  45421c:	ldrb	w8, [x25, #6]
  454220:	tbnz	w8, #0, 4540a0 <feof@plt+0x50800>
  454224:	ldr	x8, [x28, #8]
  454228:	cbnz	x8, 4540a0 <feof@plt+0x50800>
  45422c:	mov	x25, xzr
  454230:	b	4540a0 <feof@plt+0x50800>
  454234:	bl	443680 <feof@plt+0x3fde0>
  454238:	tbnz	w0, #0, 4540e4 <feof@plt+0x50844>
  45423c:	ldrb	w0, [x28, #4]
  454240:	bl	443690 <feof@plt+0x3fdf0>
  454244:	mov	w23, w0
  454248:	mov	x0, x28
  45424c:	bl	44ce70 <feof@plt+0x495d0>
  454250:	mov	w8, w0
  454254:	tbnz	w23, #0, 4540f0 <feof@plt+0x50850>
  454258:	ldur	x1, [x29, #-80]
  45425c:	mov	w22, wzr
  454260:	b	4540fc <feof@plt+0x5085c>
  454264:	ldr	x25, [x28, #8]
  454268:	b	4540a0 <feof@plt+0x50800>
  45426c:	ldr	x25, [sp, #48]
  454270:	ldr	x24, [sp, #104]
  454274:	tbz	w26, #0, 454290 <feof@plt+0x509f0>
  454278:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45427c:	mov	x0, x19
  454280:	mov	w1, wzr
  454284:	add	x2, x2, #0x60c
  454288:	bl	4424f8 <feof@plt+0x3ec58>
  45428c:	sub	x27, x27, #0x1
  454290:	ldr	w26, [sp, #28]
  454294:	ldr	x28, [sp, #112]
  454298:	mov	x8, x27
  45429c:	mov	w9, #0x22                  	// #34
  4542a0:	strb	w9, [x8], #2
  4542a4:	ldr	x9, [x19, #64]
  4542a8:	mov	x0, x19
  4542ac:	ldr	x22, [x9, #16]
  4542b0:	str	x8, [x9, #16]
  4542b4:	sub	x8, x27, x22
  4542b8:	add	x23, x8, #0x1
  4542bc:	bl	449b8c <feof@plt+0x462ec>
  4542c0:	mov	w8, #0x3e                  	// #62
  4542c4:	strb	wzr, [x22, w23, uxtw]
  4542c8:	strb	w8, [x0, #4]
  4542cc:	ldur	x8, [x29, #-104]
  4542d0:	ldr	x27, [sp, #64]
  4542d4:	ldur	w10, [x29, #-88]
  4542d8:	ldur	x11, [x29, #-80]
  4542dc:	str	w23, [x0, #8]
  4542e0:	str	x22, [x0, #16]
  4542e4:	strh	wzr, [x0, #6]
  4542e8:	str	x0, [x8]
  4542ec:	mov	w9, #0x18                  	// #24
  4542f0:	mov	w23, #0x30                  	// #48
  4542f4:	b	453f9c <feof@plt+0x506fc>
  4542f8:	ldrb	w8, [x19, #1138]
  4542fc:	cbz	w8, 454324 <feof@plt+0x50a84>
  454300:	ldr	x8, [x27, #24]
  454304:	ldrb	w8, [x8, #19]
  454308:	tbnz	w8, #4, 454324 <feof@plt+0x50a84>
  45430c:	ldr	x3, [x27]
  454310:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  454314:	add	x2, x2, #0x4f9
  454318:	mov	w1, #0x6                   	// #6
  45431c:	mov	x0, x19
  454320:	bl	442628 <feof@plt+0x3ed88>
  454324:	ldur	x1, [x29, #-48]
  454328:	cbz	x1, 454334 <feof@plt+0x50a94>
  45432c:	mov	x0, x19
  454330:	bl	44da70 <feof@plt+0x4a1d0>
  454334:	mov	w0, wzr
  454338:	b	455284 <feof@plt+0x519e4>
  45433c:	stur	w10, [x29, #-88]
  454340:	b	454354 <feof@plt+0x50ab4>
  454344:	mov	w8, #0x1                   	// #1
  454348:	stur	xzr, [x29, #-96]
  45434c:	stur	wzr, [x29, #-88]
  454350:	str	w8, [sp, #100]
  454354:	ldrb	w22, [x19, #1157]
  454358:	mov	w20, w24
  45435c:	lsl	x23, x20, #3
  454360:	str	w22, [sp, #104]
  454364:	cbz	w22, 4543bc <feof@plt+0x50b1c>
  454368:	lsl	x0, x20, #4
  45436c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  454370:	stur	x0, [x29, #-16]
  454374:	mov	x0, x19
  454378:	mov	x1, x23
  45437c:	bl	44da90 <feof@plt+0x4a1f0>
  454380:	mov	x8, x0
  454384:	ldr	x9, [x8, #8]!
  454388:	mov	x21, x0
  45438c:	ldr	x0, [x19, #40]
  454390:	cmp	w22, #0x1
  454394:	str	x9, [sp, #16]
  454398:	stur	x8, [x29, #-80]
  45439c:	ldur	w8, [x29, #-88]
  4543a0:	mov	x1, x27
  4543a4:	mov	w2, w26
  4543a8:	csel	w3, w8, w20, eq  // eq = none
  4543ac:	bl	44eb80 <feof@plt+0x4b2e0>
  4543b0:	stur	x0, [x29, #-104]
  4543b4:	mov	x0, x21
  4543b8:	b	4543dc <feof@plt+0x50b3c>
  4543bc:	mov	x0, x19
  4543c0:	mov	x1, x23
  4543c4:	bl	44da90 <feof@plt+0x4a1f0>
  4543c8:	mov	x8, x0
  4543cc:	ldr	x9, [x8, #8]!
  4543d0:	str	x9, [sp, #16]
  4543d4:	stur	x8, [x29, #-80]
  4543d8:	stur	xzr, [x29, #-104]
  4543dc:	ldrh	w8, [x25, #16]
  4543e0:	mov	w10, #0x30                  	// #48
  4543e4:	ldrb	w9, [x25, #19]
  4543e8:	stur	x0, [x29, #-88]
  4543ec:	madd	x8, x8, x10, x28
  4543f0:	ldur	w8, [x8, #-24]
  4543f4:	stur	xzr, [x29, #-28]
  4543f8:	ubfx	w9, w9, #3, #1
  4543fc:	stur	x19, [x29, #-40]
  454400:	cmp	w8, #0x0
  454404:	cset	w8, ne  // ne = any
  454408:	sturb	w8, [x29, #-32]
  45440c:	ldr	w8, [sp, #100]
  454410:	sturb	w9, [x29, #-31]
  454414:	sturb	wzr, [x29, #-30]
  454418:	stur	wzr, [x29, #-20]
  45441c:	tbz	w8, #0, 4544bc <feof@plt+0x50c1c>
  454420:	ldr	w8, [sp, #104]
  454424:	cbz	w8, 454e10 <feof@plt+0x51570>
  454428:	mov	x20, x0
  45442c:	ldur	x22, [x29, #-16]
  454430:	ldr	x8, [x20, #16]!
  454434:	ldur	x9, [x29, #-80]
  454438:	ldr	x10, [x19, #136]
  45443c:	mov	x23, x27
  454440:	ldr	x9, [x9]
  454444:	cbnz	x27, 454460 <feof@plt+0x50bc0>
  454448:	ldr	w11, [x10, #48]
  45444c:	cmp	w11, #0x2
  454450:	add	x11, x10, #0x28
  454454:	b.ne	45445c <feof@plt+0x50bbc>  // b.any
  454458:	ldr	x11, [x11]
  45445c:	ldr	x23, [x11]
  454460:	ldr	x25, [x10]
  454464:	sub	x21, x8, x9
  454468:	cbnz	x25, 454494 <feof@plt+0x50bf4>
  45446c:	mov	w0, #0x38                  	// #56
  454470:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  454474:	mov	x25, x0
  454478:	movi	v0.2d, #0x0
  45447c:	ldur	x0, [x29, #-88]
  454480:	str	xzr, [x25, #48]
  454484:	stp	q0, q0, [x25, #16]
  454488:	ldr	x8, [x19, #136]
  45448c:	stp	xzr, x8, [x25]
  454490:	str	x25, [x8]
  454494:	str	x25, [x19, #136]
  454498:	mov	w8, #0x2                   	// #2
  45449c:	str	x0, [x25, #32]
  4544a0:	mov	w0, #0x18                  	// #24
  4544a4:	str	w8, [x25, #48]
  4544a8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4544ac:	stp	x23, x22, [x0]
  4544b0:	str	x22, [x0, #16]
  4544b4:	str	x0, [x25, #40]
  4544b8:	b	454e64 <feof@plt+0x515c4>
  4544bc:	mov	x22, xzr
  4544c0:	add	x1, x25, #0x18
  4544c4:	add	x21, x19, #0x298
  4544c8:	mov	w20, #0x18                  	// #24
  4544cc:	stur	wzr, [x29, #-64]
  4544d0:	stp	x21, xzr, [sp, #80]
  4544d4:	b	4544f4 <feof@plt+0x50c54>
  4544d8:	ldur	x0, [x29, #-88]
  4544dc:	ldur	x9, [x29, #-96]
  4544e0:	add	x22, x22, #0x1
  4544e4:	madd	x8, x22, x20, x25
  4544e8:	add	x1, x8, #0x18
  4544ec:	cmp	x22, x9
  4544f0:	b.eq	454420 <feof@plt+0x50b80>  // b.none
  4544f4:	sub	x0, x29, #0x28
  4544f8:	stur	x1, [x29, #-72]
  4544fc:	bl	455e24 <feof@plt+0x52584>
  454500:	cmp	w0, #0x2
  454504:	b.eq	454694 <feof@plt+0x50df4>  // b.none
  454508:	cmp	w0, #0x4
  45450c:	b.eq	4545d8 <feof@plt+0x50d38>  // b.none
  454510:	cmp	w0, #0x3
  454514:	b.ne	4544d8 <feof@plt+0x50c38>  // b.any
  454518:	ldur	x0, [x29, #-88]
  45451c:	cbz	x22, 4545b8 <feof@plt+0x50d18>
  454520:	ldur	x8, [x29, #-72]
  454524:	ldurb	w8, [x8, #-18]
  454528:	tbnz	w8, #3, 4545b8 <feof@plt+0x50d18>
  45452c:	mov	x0, x19
  454530:	bl	449b8c <feof@plt+0x462ec>
  454534:	mov	x23, x0
  454538:	mov	w8, #0x53                  	// #83
  45453c:	strb	w8, [x23, #4]
  454540:	ldur	x8, [x29, #-72]
  454544:	strh	wzr, [x23, #6]
  454548:	ldur	x0, [x29, #-88]
  45454c:	str	x8, [x23, #8]
  454550:	ldrb	w8, [x19, #1157]
  454554:	ldp	x20, x9, [x0, #16]
  454558:	cmp	w8, #0x1
  45455c:	ldur	w8, [x29, #-64]
  454560:	csel	w1, w8, w22, hi  // hi = pmore
  454564:	cmp	x20, x9
  454568:	b.hi	455310 <feof@plt+0x51a70>  // b.pmore
  45456c:	ldur	x21, [x29, #-16]
  454570:	cbz	x21, 4545a8 <feof@plt+0x50d08>
  454574:	ldur	x8, [x29, #-80]
  454578:	ldr	w2, [x23]
  45457c:	ldr	x8, [x8]
  454580:	sub	x8, x20, x8
  454584:	ubfx	x24, x8, #3, #32
  454588:	ldur	x8, [x29, #-104]
  45458c:	cbz	x8, 4545a4 <feof@plt+0x50d04>
  454590:	mov	x0, x8
  454594:	mov	w3, w2
  454598:	bl	44ecb8 <feof@plt+0x4b418>
  45459c:	mov	w2, w0
  4545a0:	ldur	x0, [x29, #-88]
  4545a4:	str	w2, [x21, x24, lsl #2]
  4545a8:	ldr	x21, [sp, #80]
  4545ac:	str	x23, [x20], #8
  4545b0:	str	x20, [x0, #16]
  4545b4:	mov	w20, #0x18                  	// #24
  4545b8:	ldur	x9, [x29, #-80]
  4545bc:	ldr	x8, [x0, #16]
  4545c0:	ldr	x9, [x9]
  4545c4:	sub	x10, x8, #0x8
  4545c8:	cmp	x8, x9
  4545cc:	csel	x8, xzr, x10, eq  // eq = none
  4545d0:	str	x8, [sp, #88]
  4545d4:	b	4544dc <feof@plt+0x50c3c>
  4545d8:	ldp	x0, x9, [x29, #-88]
  4545dc:	ldr	x13, [sp, #88]
  4545e0:	mov	w12, #0x18                  	// #24
  4545e4:	ldr	x8, [x0, #16]
  4545e8:	ldr	x9, [x9]
  4545ec:	sub	x10, x8, #0x8
  4545f0:	cmp	x8, x9
  4545f4:	csel	x20, xzr, x10, eq  // eq = none
  4545f8:	cmp	x20, #0x0
  4545fc:	cset	w10, ne  // ne = any
  454600:	cmp	x20, x13
  454604:	b.eq	45464c <feof@plt+0x50dac>  // b.none
  454608:	cbz	x20, 45464c <feof@plt+0x50dac>
  45460c:	ldr	x11, [x20]
  454610:	ldrb	w11, [x11, #4]
  454614:	cmp	w11, #0x53
  454618:	b.ne	45464c <feof@plt+0x50dac>  // b.any
  45461c:	cmp	x8, x9
  454620:	b.ls	45462c <feof@plt+0x50d8c>  // b.plast
  454624:	sub	x8, x8, #0x8
  454628:	str	x8, [x0, #16]
  45462c:	sub	x10, x8, #0x8
  454630:	cmp	x8, x9
  454634:	csel	x20, xzr, x10, eq  // eq = none
  454638:	cmp	x20, #0x0
  45463c:	cset	w10, ne  // ne = any
  454640:	cmp	x20, x13
  454644:	b.eq	45464c <feof@plt+0x50dac>  // b.none
  454648:	cbnz	x20, 45460c <feof@plt+0x50d6c>
  45464c:	madd	x21, x22, x12, x25
  454650:	ldrb	w11, [x21, #30]!
  454654:	tbnz	w11, #3, 454710 <feof@plt+0x50e70>
  454658:	ldr	x10, [x0, #24]
  45465c:	ldr	x21, [sp, #80]
  454660:	cmp	x8, x10
  454664:	b.hi	455310 <feof@plt+0x51a70>  // b.pmore
  454668:	ldur	x10, [x29, #-16]
  45466c:	mov	w20, #0x18                  	// #24
  454670:	cbz	x10, 454684 <feof@plt+0x50de4>
  454674:	ldr	w11, [x21]
  454678:	sub	x9, x8, x9
  45467c:	lsr	x9, x9, #3
  454680:	str	w11, [x10, w9, uxtw #2]
  454684:	str	x21, [x8], #8
  454688:	str	xzr, [sp, #88]
  45468c:	str	x8, [x0, #16]
  454690:	b	4544dc <feof@plt+0x50c3c>
  454694:	madd	x8, x22, x20, x25
  454698:	ldrb	w8, [x8, #28]
  45469c:	cmp	w8, #0x50
  4546a0:	b.ne	45472c <feof@plt+0x50e8c>  // b.any
  4546a4:	madd	x8, x22, x20, x25
  4546a8:	ldrh	w11, [x8, #30]!
  4546ac:	str	x8, [sp, #56]
  4546b0:	mov	x17, x8
  4546b4:	ldr	w8, [x17, #2]!
  4546b8:	ldur	x0, [x29, #-88]
  4546bc:	ldr	w13, [sp, #104]
  4546c0:	ldur	x16, [x29, #-72]
  4546c4:	sub	w9, w8, #0x1
  4546c8:	tbnz	w11, #2, 4547a8 <feof@plt+0x50f08>
  4546cc:	mov	w14, #0x30                  	// #48
  4546d0:	umaddl	x10, w9, w14, x28
  4546d4:	tbnz	w11, #3, 45482c <feof@plt+0x50f8c>
  4546d8:	cbz	x22, 4546e4 <feof@plt+0x50e44>
  4546dc:	ldurb	w11, [x16, #-18]
  4546e0:	tbnz	w11, #3, 454878 <feof@plt+0x50fd8>
  4546e4:	ldrb	w8, [x19, #1157]
  4546e8:	madd	x10, x9, x14, x28
  4546ec:	ldr	w15, [x10, #28]
  4546f0:	ldr	x26, [x10, #8]
  4546f4:	cmp	w8, #0x0
  4546f8:	cset	w18, ne  // ne = any
  4546fc:	cbz	w8, 4548a4 <feof@plt+0x51004>
  454700:	cbz	x26, 4548c8 <feof@plt+0x51028>
  454704:	madd	x9, x9, x14, x28
  454708:	ldr	x9, [x9, #40]
  45470c:	b	4548cc <feof@plt+0x5102c>
  454710:	cbz	w10, 454724 <feof@plt+0x50e84>
  454714:	ldr	x8, [x20]
  454718:	ldrb	w8, [x8, #4]
  45471c:	cmp	w8, #0x53
  454720:	b.ne	4547d4 <feof@plt+0x50f34>  // b.any
  454724:	str	xzr, [sp, #88]
  454728:	b	454820 <feof@plt+0x50f80>
  45472c:	ldrb	w8, [x19, #1157]
  454730:	ldur	x0, [x29, #-88]
  454734:	cmp	w8, #0x1
  454738:	ldp	x20, x9, [x0, #16]
  45473c:	ldur	w8, [x29, #-64]
  454740:	csel	w1, w8, w22, hi  // hi = pmore
  454744:	cmp	x20, x9
  454748:	ldur	x9, [x29, #-72]
  45474c:	b.hi	455310 <feof@plt+0x51a70>  // b.pmore
  454750:	ldur	x21, [x29, #-16]
  454754:	cbz	x21, 454790 <feof@plt+0x50ef0>
  454758:	ldur	x8, [x29, #-80]
  45475c:	ldr	w2, [x9]
  454760:	ldr	x8, [x8]
  454764:	sub	x8, x20, x8
  454768:	ubfx	x23, x8, #3, #32
  45476c:	ldur	x8, [x29, #-104]
  454770:	cbz	x8, 45478c <feof@plt+0x50eec>
  454774:	mov	x0, x8
  454778:	mov	w3, w2
  45477c:	bl	44ecb8 <feof@plt+0x4b418>
  454780:	ldur	x9, [x29, #-72]
  454784:	mov	w2, w0
  454788:	ldur	x0, [x29, #-88]
  45478c:	str	w2, [x21, x23, lsl #2]
  454790:	ldur	w8, [x29, #-64]
  454794:	str	x9, [x20], #8
  454798:	str	x20, [x0, #16]
  45479c:	add	w8, w8, #0x1
  4547a0:	stur	w8, [x29, #-64]
  4547a4:	b	454820 <feof@plt+0x50f80>
  4547a8:	ldrb	w8, [x19, #1157]
  4547ac:	mov	w10, #0x30                  	// #48
  4547b0:	madd	x9, x9, x10, x28
  4547b4:	add	x26, x9, #0x10
  4547b8:	cbz	w8, 454850 <feof@plt+0x50fb0>
  4547bc:	ldr	x25, [x26]
  4547c0:	str	xzr, [sp, #32]
  4547c4:	mov	w12, #0x1                   	// #1
  4547c8:	mov	w18, #0x1                   	// #1
  4547cc:	mov	w15, #0x1                   	// #1
  4547d0:	b	454a08 <feof@plt+0x51168>
  4547d4:	mov	x0, x19
  4547d8:	bl	449b8c <feof@plt+0x462ec>
  4547dc:	ldr	x8, [x20]
  4547e0:	str	xzr, [sp, #88]
  4547e4:	ldrb	w8, [x8, #4]
  4547e8:	strb	w8, [x0, #4]
  4547ec:	ldr	x8, [x20]
  4547f0:	ldur	q0, [x8, #8]
  4547f4:	stur	q0, [x0, #8]
  4547f8:	ldr	x8, [x20]
  4547fc:	ldrh	w9, [x21]
  454800:	ldrh	w8, [x8, #6]
  454804:	tst	w9, #0x8
  454808:	and	w9, w8, #0xfffffff7
  45480c:	orr	w8, w8, #0x8
  454810:	csel	w8, w9, w8, eq  // eq = none
  454814:	strh	w8, [x0, #6]
  454818:	str	x0, [x20]
  45481c:	ldur	x0, [x29, #-88]
  454820:	ldr	x21, [sp, #80]
  454824:	mov	w20, #0x18                  	// #24
  454828:	b	4544dc <feof@plt+0x50c3c>
  45482c:	madd	x8, x9, x14, x28
  454830:	ldrb	w11, [x19, #1157]
  454834:	ldr	w15, [x8, #24]
  454838:	ldr	x26, [x10]
  45483c:	cbz	w11, 454868 <feof@plt+0x50fc8>
  454840:	cbz	x26, 4548ac <feof@plt+0x5100c>
  454844:	madd	x8, x9, x14, x28
  454848:	ldr	x8, [x8, #32]
  45484c:	b	4548b0 <feof@plt+0x51010>
  454850:	mov	x25, xzr
  454854:	mov	w18, wzr
  454858:	str	xzr, [sp, #32]
  45485c:	mov	w12, #0x1                   	// #1
  454860:	mov	w15, #0x1                   	// #1
  454864:	b	454a08 <feof@plt+0x51168>
  454868:	mov	w12, wzr
  45486c:	mov	x25, xzr
  454870:	mov	w18, wzr
  454874:	b	454a04 <feof@plt+0x51164>
  454878:	ldrb	w12, [x19, #1157]
  45487c:	madd	x11, x9, x14, x28
  454880:	ldr	w15, [x11, #24]
  454884:	ldr	x26, [x10]
  454888:	cmp	w12, #0x0
  45488c:	cset	w18, ne  // ne = any
  454890:	cbz	w12, 45494c <feof@plt+0x510ac>
  454894:	cbz	x26, 454954 <feof@plt+0x510b4>
  454898:	madd	x9, x9, x14, x28
  45489c:	ldr	x9, [x9, #32]
  4548a0:	b	454958 <feof@plt+0x510b8>
  4548a4:	mov	x25, xzr
  4548a8:	b	4548d4 <feof@plt+0x51034>
  4548ac:	mov	x8, xzr
  4548b0:	cmp	x26, #0x0
  4548b4:	mov	w12, wzr
  4548b8:	str	xzr, [sp, #32]
  4548bc:	csel	x25, xzr, x8, eq  // eq = none
  4548c0:	mov	w18, #0x1                   	// #1
  4548c4:	b	454a08 <feof@plt+0x51168>
  4548c8:	mov	x9, xzr
  4548cc:	cmp	x26, #0x0
  4548d0:	csel	x25, xzr, x9, eq  // eq = none
  4548d4:	ldr	x12, [sp, #88]
  4548d8:	cbz	x12, 4548fc <feof@plt+0x5105c>
  4548dc:	ldur	x10, [x29, #-80]
  4548e0:	ldr	x9, [x0, #16]
  4548e4:	ldr	x10, [x10]
  4548e8:	sub	x11, x9, #0x8
  4548ec:	cmp	x9, x10
  4548f0:	csel	x9, xzr, x11, eq  // eq = none
  4548f4:	cmp	x9, x12
  4548f8:	b.eq	454908 <feof@plt+0x51068>  // b.none
  4548fc:	str	xzr, [sp, #32]
  454900:	mov	w12, #0x2                   	// #2
  454904:	b	454a08 <feof@plt+0x51168>
  454908:	cbz	w15, 4548fc <feof@plt+0x5105c>
  45490c:	sub	w9, w15, #0x1
  454910:	add	x9, x26, w9, uxtw #3
  454914:	add	x9, x9, #0x8
  454918:	ldr	x10, [x26]
  45491c:	ldrb	w10, [x10, #4]
  454920:	cmp	w10, #0x53
  454924:	b.ne	4548fc <feof@plt+0x5105c>  // b.any
  454928:	add	x10, x25, #0x4
  45492c:	cmp	w8, #0x0
  454930:	add	x26, x26, #0x8
  454934:	csel	x25, x10, x25, ne  // ne = any
  454938:	subs	w15, w15, #0x1
  45493c:	mov	w12, #0x2                   	// #2
  454940:	b.ne	454918 <feof@plt+0x51078>  // b.any
  454944:	mov	x26, x9
  454948:	b	454a04 <feof@plt+0x51164>
  45494c:	mov	x25, xzr
  454950:	b	454960 <feof@plt+0x510c0>
  454954:	mov	x9, xzr
  454958:	cmp	x26, #0x0
  45495c:	csel	x25, xzr, x9, eq  // eq = none
  454960:	ldur	x10, [x29, #-80]
  454964:	ldr	x9, [x0, #16]
  454968:	ldr	x10, [x10]
  45496c:	sub	x11, x9, x10
  454970:	lsr	x11, x11, #3
  454974:	cbz	w11, 454a00 <feof@plt+0x51160>
  454978:	sub	x11, x9, #0x8
  45497c:	cmp	x9, x10
  454980:	csel	x12, xzr, x11, eq  // eq = none
  454984:	str	x12, [sp, #32]
  454988:	ldr	x12, [x12]
  45498c:	ldrb	w12, [x12, #4]
  454990:	cmp	w12, #0x13
  454994:	b.ne	4549c8 <feof@plt+0x51128>  // b.any
  454998:	ldr	x12, [sp, #48]
  45499c:	ldrb	w12, [x12, #19]
  4549a0:	tbz	w12, #3, 4549c8 <feof@plt+0x51128>
  4549a4:	ldr	x12, [sp, #48]
  4549a8:	ldrh	w12, [x12, #16]
  4549ac:	cmp	w8, w12
  4549b0:	b.ne	4549c8 <feof@plt+0x51128>  // b.any
  4549b4:	cbz	x26, 4549e8 <feof@plt+0x51148>
  4549b8:	ldr	x8, [x26]
  4549bc:	cbz	x8, 4549e8 <feof@plt+0x51148>
  4549c0:	mov	w12, wzr
  4549c4:	b	454a08 <feof@plt+0x51168>
  4549c8:	ldr	x8, [sp, #88]
  4549cc:	ldr	x9, [sp, #32]
  4549d0:	mov	w12, wzr
  4549d4:	cmp	x9, x8
  4549d8:	ccmp	w15, #0x0, #0x0, ne  // ne = any
  4549dc:	csel	x9, xzr, x9, ne  // ne = any
  4549e0:	str	x9, [sp, #32]
  4549e4:	b	454a08 <feof@plt+0x51168>
  4549e8:	cmp	x9, x10
  4549ec:	b.ls	454a00 <feof@plt+0x51160>  // b.plast
  4549f0:	mov	w12, wzr
  4549f4:	str	xzr, [sp, #32]
  4549f8:	str	x11, [x0, #16]
  4549fc:	b	454a08 <feof@plt+0x51168>
  454a00:	mov	w12, wzr
  454a04:	str	xzr, [sp, #32]
  454a08:	ldrb	w8, [x19, #16]
  454a0c:	stp	w18, w15, [sp, #96]
  454a10:	cbz	w8, 454a24 <feof@plt+0x51184>
  454a14:	cbz	x22, 454b24 <feof@plt+0x51284>
  454a18:	ldrb	w8, [x19, #17]
  454a1c:	cbnz	w8, 454a28 <feof@plt+0x51188>
  454a20:	b	454b24 <feof@plt+0x51284>
  454a24:	cbz	x22, 454b24 <feof@plt+0x51284>
  454a28:	ldurb	w8, [x16, #-18]
  454a2c:	tbnz	w8, #3, 454b24 <feof@plt+0x51284>
  454a30:	ldr	x8, [sp, #88]
  454a34:	cbz	x8, 454a5c <feof@plt+0x511bc>
  454a38:	ldur	x9, [x29, #-80]
  454a3c:	ldr	x8, [x0, #16]
  454a40:	ldr	x9, [x9]
  454a44:	sub	x10, x8, #0x8
  454a48:	cmp	x8, x9
  454a4c:	ldr	x9, [sp, #88]
  454a50:	csel	x8, xzr, x10, eq  // eq = none
  454a54:	cmp	x8, x9
  454a58:	b.eq	454b24 <feof@plt+0x51284>  // b.none
  454a5c:	mov	x0, x19
  454a60:	mov	x20, x17
  454a64:	mov	w24, w12
  454a68:	bl	449b8c <feof@plt+0x462ec>
  454a6c:	ldur	x16, [x29, #-72]
  454a70:	mov	x10, x0
  454a74:	mov	w8, #0x53                  	// #83
  454a78:	strb	w8, [x10, #4]
  454a7c:	str	x16, [x10, #8]
  454a80:	strh	wzr, [x10, #6]
  454a84:	ldur	x0, [x29, #-88]
  454a88:	ldrb	w8, [x19, #1157]
  454a8c:	ldp	x21, x9, [x0, #16]
  454a90:	cmp	w8, #0x1
  454a94:	ldur	w8, [x29, #-64]
  454a98:	csel	w1, w8, w22, hi  // hi = pmore
  454a9c:	cmp	x21, x9
  454aa0:	b.hi	455310 <feof@plt+0x51a70>  // b.pmore
  454aa4:	ldur	x23, [x29, #-16]
  454aa8:	ldp	w15, w13, [sp, #100]
  454aac:	ldr	w18, [sp, #96]
  454ab0:	mov	w12, w24
  454ab4:	mov	x17, x20
  454ab8:	cbz	x23, 454b18 <feof@plt+0x51278>
  454abc:	str	x17, [sp, #8]
  454ac0:	ldur	x8, [x29, #-80]
  454ac4:	ldr	w2, [x10]
  454ac8:	ldr	x8, [x8]
  454acc:	sub	x8, x21, x8
  454ad0:	ubfx	x9, x8, #3, #32
  454ad4:	ldur	x8, [x29, #-104]
  454ad8:	cbz	x8, 454b10 <feof@plt+0x51270>
  454adc:	mov	x0, x8
  454ae0:	mov	w3, w2
  454ae4:	mov	x20, x10
  454ae8:	str	x9, [sp]
  454aec:	bl	44ecb8 <feof@plt+0x4b418>
  454af0:	ldr	x9, [sp]
  454af4:	ldp	w18, w15, [sp, #96]
  454af8:	ldur	x16, [x29, #-72]
  454afc:	ldr	w13, [sp, #104]
  454b00:	mov	w2, w0
  454b04:	ldur	x0, [x29, #-88]
  454b08:	mov	x10, x20
  454b0c:	mov	w12, w24
  454b10:	ldr	x17, [sp, #8]
  454b14:	str	w2, [x23, x9, lsl #2]
  454b18:	str	x10, [x21], #8
  454b1c:	str	x21, [x0, #16]
  454b20:	ldr	x21, [sp, #80]
  454b24:	cbz	w15, 454c40 <feof@plt+0x513a0>
  454b28:	ldur	x21, [x29, #-16]
  454b2c:	mov	w27, wzr
  454b30:	b	454b40 <feof@plt+0x512a0>
  454b34:	add	w27, w27, #0x1
  454b38:	cmp	w15, w27
  454b3c:	b.eq	454c04 <feof@plt+0x51364>  // b.none
  454b40:	ldrb	w8, [x19, #1157]
  454b44:	ldur	w10, [x29, #-64]
  454b48:	cmp	w13, #0x1
  454b4c:	csel	w9, w27, wzr, hi  // hi = pmore
  454b50:	cmp	w8, #0x1
  454b54:	add	w9, w9, w10
  454b58:	csel	w1, w9, w22, hi  // hi = pmore
  454b5c:	cbz	x26, 454bf4 <feof@plt+0x51354>
  454b60:	ldr	x24, [x26]
  454b64:	mov	x8, x25
  454b68:	cbnz	w18, 454b70 <feof@plt+0x512d0>
  454b6c:	ldr	x8, [x26]
  454b70:	ldp	x23, x9, [x0, #16]
  454b74:	cmp	x23, x9
  454b78:	b.hi	455310 <feof@plt+0x51a70>  // b.pmore
  454b7c:	cbz	x21, 454bcc <feof@plt+0x5132c>
  454b80:	ldur	x9, [x29, #-80]
  454b84:	ldr	w2, [x8]
  454b88:	ldr	x9, [x9]
  454b8c:	sub	x8, x23, x9
  454b90:	ubfx	x28, x8, #3, #32
  454b94:	ldur	x8, [x29, #-104]
  454b98:	cbz	x8, 454bc4 <feof@plt+0x51324>
  454b9c:	ldr	w3, [x16]
  454ba0:	mov	x0, x8
  454ba4:	mov	w20, w12
  454ba8:	bl	44ecb8 <feof@plt+0x4b418>
  454bac:	ldp	w18, w15, [sp, #96]
  454bb0:	ldur	x16, [x29, #-72]
  454bb4:	ldr	w13, [sp, #104]
  454bb8:	mov	w2, w0
  454bbc:	ldur	x0, [x29, #-88]
  454bc0:	mov	w12, w20
  454bc4:	str	w2, [x21, x28, lsl #2]
  454bc8:	ldr	x28, [sp, #112]
  454bcc:	orr	w8, w12, #0x2
  454bd0:	str	x24, [x23], #8
  454bd4:	cmp	w8, #0x2
  454bd8:	str	x23, [x0, #16]
  454bdc:	b.ne	454b34 <feof@plt+0x51294>  // b.any
  454be0:	add	x8, x25, #0x4
  454be4:	cmp	w18, #0x0
  454be8:	add	x26, x26, #0x8
  454bec:	csel	x25, x25, x8, eq  // eq = none
  454bf0:	b	454b34 <feof@plt+0x51294>
  454bf4:	mov	x24, xzr
  454bf8:	mov	x8, x25
  454bfc:	cbnz	w18, 454b70 <feof@plt+0x512d0>
  454c00:	b	454b6c <feof@plt+0x512cc>
  454c04:	ldp	x8, x27, [sp, #56]
  454c08:	ldr	w26, [sp, #28]
  454c0c:	ldr	x25, [sp, #48]
  454c10:	ldr	x21, [sp, #80]
  454c14:	ldrb	w8, [x8]
  454c18:	ldr	x12, [sp, #32]
  454c1c:	mov	w20, #0x18                  	// #24
  454c20:	tbz	w8, #3, 454d34 <feof@plt+0x51494>
  454c24:	ldur	x9, [x29, #-80]
  454c28:	ldr	x8, [x0, #16]
  454c2c:	ldr	x9, [x9]
  454c30:	sub	x10, x8, #0x8
  454c34:	cmp	x8, x9
  454c38:	csel	x12, xzr, x10, eq  // eq = none
  454c3c:	b	454d34 <feof@plt+0x51494>
  454c40:	ldrb	w8, [x19, #1154]
  454c44:	ldr	x25, [sp, #48]
  454c48:	cbz	w8, 454c6c <feof@plt+0x513cc>
  454c4c:	ldrb	w8, [x19, #1152]
  454c50:	cbnz	w8, 454c6c <feof@plt+0x513cc>
  454c54:	ldrb	w8, [x25, #19]
  454c58:	tbnz	w8, #4, 454c6c <feof@plt+0x513cc>
  454c5c:	ldr	x8, [x19]
  454c60:	cbz	x8, 454cd0 <feof@plt+0x51430>
  454c64:	ldrb	w8, [x8, #106]
  454c68:	cbz	w8, 454cd0 <feof@plt+0x51430>
  454c6c:	ldrsb	w8, [x19, #1198]
  454c70:	ldr	w26, [sp, #28]
  454c74:	mov	w20, #0x18                  	// #24
  454c78:	cmp	w8, #0x1
  454c7c:	b.lt	454d30 <feof@plt+0x51490>  // b.tstop
  454c80:	ldrb	w8, [x19, #1120]
  454c84:	ldr	x12, [sp, #32]
  454c88:	cbnz	w8, 454d34 <feof@plt+0x51494>
  454c8c:	ldrb	w8, [x25, #19]
  454c90:	tbnz	w8, #4, 454d34 <feof@plt+0x51494>
  454c94:	ldr	x8, [x19]
  454c98:	cbz	x8, 454ca4 <feof@plt+0x51404>
  454c9c:	ldrb	w8, [x8, #106]
  454ca0:	cbnz	w8, 454d34 <feof@plt+0x51494>
  454ca4:	ldr	x3, [x27]
  454ca8:	ldr	w4, [x17]
  454cac:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  454cb0:	mov	w1, #0x16                  	// #22
  454cb4:	mov	x0, x19
  454cb8:	add	x2, x2, #0x5be
  454cbc:	bl	442628 <feof@plt+0x3ed88>
  454cc0:	ldr	x12, [sp, #32]
  454cc4:	ldr	w15, [sp, #100]
  454cc8:	ldur	x0, [x29, #-88]
  454ccc:	b	454d34 <feof@plt+0x51494>
  454cd0:	ldrb	w8, [x19, #1120]
  454cd4:	ldr	w26, [sp, #28]
  454cd8:	mov	w20, #0x18                  	// #24
  454cdc:	cbz	w8, 454cfc <feof@plt+0x5145c>
  454ce0:	ldr	x3, [x27]
  454ce4:	ldr	w4, [x17]
  454ce8:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  454cec:	mov	w1, #0x15                  	// #21
  454cf0:	mov	x0, x19
  454cf4:	add	x2, x2, #0x56e
  454cf8:	b	454d24 <feof@plt+0x51484>
  454cfc:	ldrsb	w8, [x19, #1198]
  454d00:	cbz	w8, 454d30 <feof@plt+0x51490>
  454d04:	ldr	x3, [x27]
  454d08:	ldr	w4, [x17]
  454d0c:	cmp	w8, #0x0
  454d10:	mov	w8, #0x15                  	// #21
  454d14:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  454d18:	cinc	w1, w8, gt
  454d1c:	mov	x0, x19
  454d20:	add	x2, x2, #0x5be
  454d24:	bl	442758 <feof@plt+0x3eeb8>
  454d28:	ldr	w15, [sp, #100]
  454d2c:	ldur	x0, [x29, #-88]
  454d30:	ldr	x12, [sp, #32]
  454d34:	ldrb	w8, [x19, #16]
  454d38:	cbnz	w8, 454da8 <feof@plt+0x51508>
  454d3c:	ldr	x8, [sp, #56]
  454d40:	ldrb	w8, [x8]
  454d44:	tbnz	w8, #3, 454da8 <feof@plt+0x51508>
  454d48:	ldr	x8, [x0, #16]
  454d4c:	ldr	x9, [sp, #88]
  454d50:	cbz	x9, 454d74 <feof@plt+0x514d4>
  454d54:	ldur	x9, [x29, #-80]
  454d58:	sub	x10, x8, #0x8
  454d5c:	ldr	x9, [x9]
  454d60:	cmp	x8, x9
  454d64:	csel	x9, xzr, x10, eq  // eq = none
  454d68:	ldr	x10, [sp, #88]
  454d6c:	cmp	x9, x10
  454d70:	b.eq	454da8 <feof@plt+0x51508>  // b.none
  454d74:	ldr	x9, [x0, #24]
  454d78:	cmp	x8, x9
  454d7c:	b.hi	455310 <feof@plt+0x51a70>  // b.pmore
  454d80:	ldur	x9, [x29, #-16]
  454d84:	cbz	x9, 454da0 <feof@plt+0x51500>
  454d88:	ldur	x10, [x29, #-80]
  454d8c:	ldr	w11, [x21]
  454d90:	ldr	x10, [x10]
  454d94:	sub	x10, x8, x10
  454d98:	lsr	x10, x10, #3
  454d9c:	str	w11, [x9, w10, uxtw #2]
  454da0:	str	x21, [x8], #8
  454da4:	str	x8, [x0, #16]
  454da8:	cbz	x12, 454e00 <feof@plt+0x51560>
  454dac:	mov	x0, x19
  454db0:	mov	x23, x12
  454db4:	bl	449b8c <feof@plt+0x462ec>
  454db8:	ldr	x8, [x23]
  454dbc:	ldr	x9, [sp, #56]
  454dc0:	ldr	w15, [sp, #100]
  454dc4:	ldrb	w8, [x8, #4]
  454dc8:	strb	w8, [x0, #4]
  454dcc:	ldr	x8, [x23]
  454dd0:	ldur	q0, [x8, #8]
  454dd4:	stur	q0, [x0, #8]
  454dd8:	ldr	x8, [x23]
  454ddc:	ldrh	w9, [x9]
  454de0:	ldrh	w8, [x8, #6]
  454de4:	tst	w9, #0x8
  454de8:	and	w9, w8, #0xfffffff7
  454dec:	orr	w8, w8, #0x8
  454df0:	csel	w8, w9, w8, eq  // eq = none
  454df4:	strh	w8, [x0, #6]
  454df8:	str	x0, [x23]
  454dfc:	ldur	x0, [x29, #-88]
  454e00:	ldur	w8, [x29, #-64]
  454e04:	add	w8, w15, w8
  454e08:	stur	w8, [x29, #-64]
  454e0c:	b	4544dc <feof@plt+0x50c3c>
  454e10:	mov	x20, x0
  454e14:	ldr	x8, [x20, #16]!
  454e18:	ldur	x10, [x29, #-80]
  454e1c:	ldr	x9, [x19, #136]
  454e20:	ldr	x10, [x10]
  454e24:	ldr	x25, [x9]
  454e28:	sub	x21, x8, x10
  454e2c:	cbnz	x25, 454e58 <feof@plt+0x515b8>
  454e30:	mov	w0, #0x38                  	// #56
  454e34:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  454e38:	mov	x25, x0
  454e3c:	movi	v0.2d, #0x0
  454e40:	ldur	x0, [x29, #-88]
  454e44:	str	xzr, [x25, #48]
  454e48:	stp	q0, q0, [x25, #16]
  454e4c:	ldr	x8, [x19, #136]
  454e50:	stp	xzr, x8, [x25]
  454e54:	str	x25, [x8]
  454e58:	str	x25, [x19, #136]
  454e5c:	str	wzr, [x25, #48]
  454e60:	stp	x0, x27, [x25, #32]
  454e64:	ldr	x9, [sp, #16]
  454e68:	lsr	x8, x21, #3
  454e6c:	adrp	x10, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  454e70:	add	x8, x9, w8, uxtw #3
  454e74:	stp	x9, x8, [x25, #16]
  454e78:	ldur	x9, [x29, #-80]
  454e7c:	ldr	x8, [x20]
  454e80:	ldr	w11, [x10, #452]
  454e84:	ldr	x25, [sp, #48]
  454e88:	ldr	x9, [x9]
  454e8c:	sub	x8, x8, x9
  454e90:	lsr	x8, x8, #3
  454e94:	add	w8, w11, w8
  454e98:	str	w8, [x10, #452]
  454e9c:	ldur	w20, [x29, #-52]
  454ea0:	cbz	w20, 454ef4 <feof@plt+0x51654>
  454ea4:	ldr	x8, [sp, #40]
  454ea8:	ldr	x8, [x8, #8]
  454eac:	add	x21, x8, #0x28
  454eb0:	b	454ec0 <feof@plt+0x51620>
  454eb4:	subs	x20, x20, #0x1
  454eb8:	add	x21, x21, #0x30
  454ebc:	b.eq	454ef4 <feof@plt+0x51654>  // b.none
  454ec0:	ldur	x0, [x21, #-32]
  454ec4:	cbz	x0, 454ed0 <feof@plt+0x51630>
  454ec8:	bl	4031d0 <free@plt>
  454ecc:	stur	xzr, [x21, #-32]
  454ed0:	ldur	x0, [x21, #-8]
  454ed4:	cbz	x0, 454ee0 <feof@plt+0x51640>
  454ed8:	bl	4031d0 <free@plt>
  454edc:	stur	xzr, [x21, #-8]
  454ee0:	ldr	x0, [x21]
  454ee4:	cbz	x0, 454eb4 <feof@plt+0x51614>
  454ee8:	bl	4031d0 <free@plt>
  454eec:	str	xzr, [x21]
  454ef0:	b	454eb4 <feof@plt+0x51614>
  454ef4:	ldr	x0, [sp, #40]
  454ef8:	bl	44dcf0 <feof@plt+0x4a450>
  454efc:	ldrh	w8, [x27, #18]
  454f00:	orr	w9, w8, #0x40
  454f04:	strh	w9, [x27, #18]
  454f08:	tbnz	w8, #7, 454f68 <feof@plt+0x516c8>
  454f0c:	orr	w9, w8, #0xc0
  454f10:	ands	w8, w8, #0x3
  454f14:	strh	w9, [x27, #18]
  454f18:	b.eq	4551f4 <feof@plt+0x51954>  // b.none
  454f1c:	cmp	w8, #0x3
  454f20:	b.eq	454f50 <feof@plt+0x516b0>  // b.none
  454f24:	cmp	w8, #0x2
  454f28:	b.ne	455328 <feof@plt+0x51a88>  // b.any
  454f2c:	ldr	x23, [x27, #24]
  454f30:	ldrb	w8, [x23, #18]
  454f34:	cbz	w8, 454f50 <feof@plt+0x516b0>
  454f38:	ldr	x9, [x19, #1048]
  454f3c:	sub	w2, w8, #0x1
  454f40:	mov	x0, x19
  454f44:	mov	x1, x23
  454f48:	blr	x9
  454f4c:	strb	wzr, [x23, #18]
  454f50:	ldr	x8, [x19, #1008]
  454f54:	cbz	x8, 454f68 <feof@plt+0x516c8>
  454f58:	ldr	w1, [x19, #48]
  454f5c:	mov	x0, x19
  454f60:	mov	x2, x27
  454f64:	blr	x8
  454f68:	ldr	x8, [x19, #1032]
  454f6c:	cbz	x8, 454f80 <feof@plt+0x516e0>
  454f70:	mov	x0, x19
  454f74:	mov	w1, w26
  454f78:	mov	x2, x27
  454f7c:	blr	x8
  454f80:	ldrb	w8, [x25, #19]
  454f84:	ldrh	w9, [x25, #16]
  454f88:	orr	w10, w8, #0x20
  454f8c:	strb	w10, [x25, #19]
  454f90:	cbz	w9, 4550b0 <feof@plt+0x51810>
  454f94:	ldur	x20, [x29, #-48]
  454f98:	cbz	x20, 455280 <feof@plt+0x519e0>
  454f9c:	ldrb	w8, [x19, #16]
  454fa0:	cbnz	w8, 455024 <feof@plt+0x51784>
  454fa4:	mov	x0, x19
  454fa8:	bl	449b8c <feof@plt+0x462ec>
  454fac:	ldr	x9, [sp, #72]
  454fb0:	mov	w8, #0x53                  	// #83
  454fb4:	strb	w8, [x0, #4]
  454fb8:	strh	wzr, [x0, #6]
  454fbc:	str	x9, [x0, #8]
  454fc0:	ldr	x8, [x19, #136]
  454fc4:	mov	x21, x0
  454fc8:	ldr	w9, [x8, #48]
  454fcc:	cmp	w9, #0x2
  454fd0:	add	x9, x8, #0x28
  454fd4:	b.ne	454fdc <feof@plt+0x5173c>  // b.any
  454fd8:	ldr	x9, [x9]
  454fdc:	ldr	x0, [x8]
  454fe0:	ldr	x22, [x9]
  454fe4:	cbnz	x0, 45500c <feof@plt+0x5176c>
  454fe8:	mov	w0, #0x38                  	// #56
  454fec:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  454ff0:	movi	v0.2d, #0x0
  454ff4:	str	xzr, [x0, #48]
  454ff8:	stp	q0, q0, [x0, #16]
  454ffc:	ldr	x8, [x19, #136]
  455000:	stp	xzr, x8, [x0]
  455004:	str	x0, [x8]
  455008:	ldur	x20, [x29, #-48]
  45500c:	mov	w8, #0x1                   	// #1
  455010:	add	x9, x21, #0x18
  455014:	str	x0, [x19, #136]
  455018:	stp	xzr, x22, [x0, #32]
  45501c:	str	w8, [x0, #48]
  455020:	stp	x21, x9, [x0, #16]
  455024:	adrp	x21, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  455028:	b	455034 <feof@plt+0x51794>
  45502c:	mov	x20, x22
  455030:	cbz	x22, 4550a4 <feof@plt+0x51804>
  455034:	ldp	x22, x24, [x20]
  455038:	str	xzr, [x20]
  45503c:	ldr	x8, [x19, #136]
  455040:	ldr	x9, [x20, #16]
  455044:	ldr	x0, [x8]
  455048:	sub	x8, x9, x24
  45504c:	lsr	x23, x8, #3
  455050:	cbnz	x0, 455074 <feof@plt+0x517d4>
  455054:	mov	w0, #0x38                  	// #56
  455058:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  45505c:	movi	v0.2d, #0x0
  455060:	stp	q0, q0, [x0, #16]
  455064:	str	xzr, [x0, #48]
  455068:	ldr	x8, [x19, #136]
  45506c:	stp	xzr, x8, [x0]
  455070:	str	x0, [x8]
  455074:	add	x8, x24, w23, uxtw #3
  455078:	str	x0, [x19, #136]
  45507c:	str	wzr, [x0, #48]
  455080:	stp	x20, xzr, [x0, #32]
  455084:	stp	x24, x8, [x0, #16]
  455088:	stur	x22, [x29, #-48]
  45508c:	ldrb	w8, [x19, #1157]
  455090:	cbnz	w8, 45502c <feof@plt+0x5178c>
  455094:	ldr	w8, [x21, #452]
  455098:	add	w8, w8, w23
  45509c:	str	w8, [x21, #452]
  4550a0:	b	45502c <feof@plt+0x5178c>
  4550a4:	strb	wzr, [x19, #192]
  4550a8:	mov	w0, #0x2                   	// #2
  4550ac:	b	455288 <feof@plt+0x519e8>
  4550b0:	ldr	w23, [x25, #12]
  4550b4:	tbnz	w8, #6, 4552a8 <feof@plt+0x51a08>
  4550b8:	ldrb	w8, [x19, #1157]
  4550bc:	add	x21, x25, #0x18
  4550c0:	cbz	w8, 455200 <feof@plt+0x51960>
  4550c4:	mov	w20, w23
  4550c8:	lsl	x0, x20, #4
  4550cc:	lsl	x25, x20, #3
  4550d0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4550d4:	mov	x24, x0
  4550d8:	mov	x0, x19
  4550dc:	mov	x1, x25
  4550e0:	bl	44da90 <feof@plt+0x4a1f0>
  4550e4:	ldr	x8, [x19, #40]
  4550e8:	mov	x25, x0
  4550ec:	mov	x1, x27
  4550f0:	mov	w2, w26
  4550f4:	mov	x0, x8
  4550f8:	mov	w3, w23
  4550fc:	str	x27, [sp, #64]
  455100:	bl	44eb80 <feof@plt+0x4b2e0>
  455104:	cbz	w23, 455170 <feof@plt+0x518d0>
  455108:	ldr	x27, [x25, #16]
  45510c:	mov	x22, x0
  455110:	mov	x26, xzr
  455114:	b	455134 <feof@plt+0x51894>
  455118:	str	w2, [x24, x28, lsl #2]
  45511c:	add	x26, x26, #0x1
  455120:	str	x21, [x27], #8
  455124:	cmp	w20, w26
  455128:	add	x21, x21, #0x18
  45512c:	str	x27, [x25, #16]
  455130:	b.eq	455170 <feof@plt+0x518d0>  // b.none
  455134:	ldr	x8, [x25, #24]
  455138:	cmp	x27, x8
  45513c:	b.hi	455310 <feof@plt+0x51a70>  // b.pmore
  455140:	cbz	x24, 45511c <feof@plt+0x5187c>
  455144:	ldr	x8, [x25, #8]
  455148:	ldr	w2, [x21]
  45514c:	sub	x8, x27, x8
  455150:	ubfx	x28, x8, #3, #32
  455154:	cbz	x22, 455118 <feof@plt+0x51878>
  455158:	mov	x0, x22
  45515c:	mov	w1, w26
  455160:	mov	w3, w2
  455164:	bl	44ecb8 <feof@plt+0x4b418>
  455168:	mov	w2, w0
  45516c:	b	455118 <feof@plt+0x51878>
  455170:	ldr	x21, [x25, #8]
  455174:	ldr	x8, [x19, #136]
  455178:	ldr	x26, [sp, #64]
  45517c:	cbnz	x26, 455198 <feof@plt+0x518f8>
  455180:	ldr	w9, [x8, #48]
  455184:	cmp	w9, #0x2
  455188:	add	x9, x8, #0x28
  45518c:	b.ne	455194 <feof@plt+0x518f4>  // b.any
  455190:	ldr	x9, [x9]
  455194:	ldr	x26, [x9]
  455198:	ldr	x22, [x8]
  45519c:	cbnz	x22, 4551c4 <feof@plt+0x51924>
  4551a0:	mov	w0, #0x38                  	// #56
  4551a4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4551a8:	movi	v0.2d, #0x0
  4551ac:	str	xzr, [x0, #48]
  4551b0:	stp	q0, q0, [x0, #16]
  4551b4:	ldr	x8, [x19, #136]
  4551b8:	mov	x22, x0
  4551bc:	stp	xzr, x8, [x0]
  4551c0:	str	x0, [x8]
  4551c4:	mov	w8, #0x2                   	// #2
  4551c8:	mov	w0, #0x18                  	// #24
  4551cc:	str	x22, [x19, #136]
  4551d0:	str	w8, [x22, #48]
  4551d4:	str	x25, [x22, #32]
  4551d8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4551dc:	add	x8, x21, x20, lsl #3
  4551e0:	stp	x26, x24, [x0]
  4551e4:	str	x24, [x0, #16]
  4551e8:	str	x0, [x22, #40]
  4551ec:	stp	x21, x8, [x22, #16]
  4551f0:	b	455268 <feof@plt+0x519c8>
  4551f4:	ldr	x8, [x19, #1016]
  4551f8:	cbnz	x8, 454f58 <feof@plt+0x516b8>
  4551fc:	b	454f68 <feof@plt+0x516c8>
  455200:	ldr	x8, [x19, #136]
  455204:	cbnz	x27, 455220 <feof@plt+0x51980>
  455208:	ldr	w9, [x8, #48]
  45520c:	cmp	w9, #0x2
  455210:	add	x9, x8, #0x28
  455214:	b.ne	45521c <feof@plt+0x5197c>  // b.any
  455218:	ldr	x9, [x9]
  45521c:	ldr	x27, [x9]
  455220:	ldr	x0, [x8]
  455224:	cbnz	x0, 455248 <feof@plt+0x519a8>
  455228:	mov	w0, #0x38                  	// #56
  45522c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  455230:	movi	v0.2d, #0x0
  455234:	str	xzr, [x0, #48]
  455238:	stp	q0, q0, [x0, #16]
  45523c:	ldr	x8, [x19, #136]
  455240:	stp	xzr, x8, [x0]
  455244:	str	x0, [x8]
  455248:	mov	w8, #0x1                   	// #1
  45524c:	mov	w9, #0x18                  	// #24
  455250:	str	x0, [x19, #136]
  455254:	str	w8, [x0, #48]
  455258:	umaddl	x8, w23, w9, x25
  45525c:	add	x8, x8, #0x18
  455260:	stp	xzr, x27, [x0, #32]
  455264:	stp	x21, x8, [x0, #16]
  455268:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  45526c:	ldr	w9, [x8, #452]
  455270:	add	w9, w9, w23
  455274:	str	w9, [x8, #452]
  455278:	ldur	x20, [x29, #-48]
  45527c:	cbnz	x20, 454f9c <feof@plt+0x516fc>
  455280:	mov	w0, #0x1                   	// #1
  455284:	strb	wzr, [x19, #192]
  455288:	ldp	x20, x19, [sp, #304]
  45528c:	ldp	x22, x21, [sp, #288]
  455290:	ldp	x24, x23, [sp, #272]
  455294:	ldp	x26, x25, [sp, #256]
  455298:	ldp	x28, x27, [sp, #240]
  45529c:	ldp	x29, x30, [sp, #224]
  4552a0:	add	sp, sp, #0x140
  4552a4:	ret
  4552a8:	mov	w8, #0x18                  	// #24
  4552ac:	cbz	x23, 4550b8 <feof@plt+0x51818>
  4552b0:	sub	w9, w23, #0x1
  4552b4:	umaddl	x9, w9, w8, x25
  4552b8:	ldrb	w9, [x9, #28]
  4552bc:	sub	x23, x23, #0x1
  4552c0:	cmp	w9, #0x26
  4552c4:	b.eq	4552ac <feof@plt+0x51a0c>  // b.none
  4552c8:	add	w23, w23, #0x1
  4552cc:	b	4550b8 <feof@plt+0x51818>
  4552d0:	mov	w8, #0x18                  	// #24
  4552d4:	cbz	x24, 4552fc <feof@plt+0x51a5c>
  4552d8:	sub	w9, w24, #0x1
  4552dc:	umaddl	x9, w9, w8, x25
  4552e0:	ldrb	w9, [x9, #28]
  4552e4:	sub	x24, x24, #0x1
  4552e8:	cmp	w9, #0x26
  4552ec:	b.eq	4552d4 <feof@plt+0x51a34>  // b.none
  4552f0:	ldr	x28, [sp, #112]
  4552f4:	add	w24, w24, #0x1
  4552f8:	b	453f4c <feof@plt+0x506ac>
  4552fc:	stur	xzr, [x29, #-96]
  455300:	stur	wzr, [x29, #-88]
  455304:	ldr	x28, [sp, #112]
  455308:	mov	w8, #0x1                   	// #1
  45530c:	b	454350 <feof@plt+0x50ab0>
  455310:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  455314:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  455318:	add	x0, x0, #0x176
  45531c:	add	x2, x2, #0x4e3
  455320:	mov	w1, #0x953                 	// #2387
  455324:	bl	429434 <feof@plt+0x25b94>
  455328:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45532c:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  455330:	add	x0, x0, #0x176
  455334:	add	x2, x2, #0x415
  455338:	mov	w1, #0xe0b                 	// #3595
  45533c:	bl	429434 <feof@plt+0x25b94>
  455340:	stp	x29, x30, [sp, #-80]!
  455344:	stp	x26, x25, [sp, #16]
  455348:	stp	x24, x23, [sp, #32]
  45534c:	stp	x22, x21, [sp, #48]
  455350:	stp	x20, x19, [sp, #64]
  455354:	ldr	x8, [x2]
  455358:	mov	x19, x0
  45535c:	mov	x29, sp
  455360:	mov	x21, x3
  455364:	mov	x0, x8
  455368:	mov	x23, x2
  45536c:	mov	w20, w1
  455370:	bl	44ce70 <feof@plt+0x495d0>
  455374:	mov	w22, w0
  455378:	mov	x0, x21
  45537c:	bl	44ce70 <feof@plt+0x495d0>
  455380:	add	w8, w22, w0
  455384:	add	w8, w8, #0x1
  455388:	add	x8, x8, #0xf
  45538c:	and	x8, x8, #0x1fffffff0
  455390:	mov	x9, sp
  455394:	sub	x22, x9, x8
  455398:	mov	sp, x22
  45539c:	ldr	x1, [x23]
  4553a0:	mov	w3, #0x1                   	// #1
  4553a4:	mov	x0, x19
  4553a8:	mov	x2, x22
  4553ac:	bl	44d044 <feof@plt+0x497a4>
  4553b0:	ldr	x8, [x23]
  4553b4:	mov	x24, x0
  4553b8:	mov	x2, x0
  4553bc:	ldrb	w8, [x8, #4]
  4553c0:	cmp	w8, #0x7
  4553c4:	b.ne	4553e0 <feof@plt+0x51b40>  // b.any
  4553c8:	ldrb	w8, [x21, #4]
  4553cc:	mov	x2, x24
  4553d0:	cbz	w8, 4553e0 <feof@plt+0x51b40>
  4553d4:	mov	w8, #0x20                  	// #32
  4553d8:	mov	x2, x24
  4553dc:	strb	w8, [x2], #1
  4553e0:	ldrb	w8, [x21, #4]
  4553e4:	cmp	w8, #0x53
  4553e8:	b.eq	455400 <feof@plt+0x51b60>  // b.none
  4553ec:	mov	w3, #0x1                   	// #1
  4553f0:	mov	x0, x19
  4553f4:	mov	x1, x21
  4553f8:	bl	44d044 <feof@plt+0x497a4>
  4553fc:	mov	x2, x0
  455400:	mov	w8, #0xa                   	// #10
  455404:	strb	w8, [x2]
  455408:	sub	x2, x2, x22
  45540c:	mov	w3, #0x1                   	// #1
  455410:	mov	x0, x19
  455414:	mov	x1, x22
  455418:	bl	4406c8 <feof@plt+0x3ce28>
  45541c:	mov	x0, x19
  455420:	bl	448d9c <feof@plt+0x454fc>
  455424:	mov	x0, x19
  455428:	bl	449b8c <feof@plt+0x462ec>
  45542c:	str	x0, [x19, #448]
  455430:	mov	x0, x19
  455434:	bl	449d0c <feof@plt+0x4646c>
  455438:	ldr	x8, [x19]
  45543c:	mov	x25, x0
  455440:	ldr	x9, [x8]
  455444:	ldr	x8, [x8, #32]
  455448:	cmp	x9, x8
  45544c:	b.eq	4554dc <feof@plt+0x51c3c>  // b.none
  455450:	ldr	w26, [x25]
  455454:	mov	x0, x19
  455458:	bl	4407b8 <feof@plt+0x3cf18>
  45545c:	mov	w1, #0x1                   	// #1
  455460:	mov	x0, x19
  455464:	bl	4529b4 <feof@plt+0x4f114>
  455468:	strb	wzr, [x24]
  45546c:	ldr	x8, [x23]
  455470:	mov	w0, wzr
  455474:	ldr	x9, [x8, #16]
  455478:	ldr	q0, [x8]
  45547c:	str	x9, [x25, #16]
  455480:	str	q0, [x25]
  455484:	str	x25, [x23]
  455488:	ldrh	w8, [x25, #6]
  45548c:	str	w26, [x25]
  455490:	and	w8, w8, #0xfffffff7
  455494:	strh	w8, [x25, #6]
  455498:	ldr	w8, [x19, #1116]
  45549c:	cmp	w8, #0x15
  4554a0:	b.eq	4554ec <feof@plt+0x51c4c>  // b.none
  4554a4:	mov	x0, x19
  4554a8:	mov	x1, x21
  4554ac:	bl	44d198 <feof@plt+0x498f8>
  4554b0:	adrp	x4, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4554b4:	mov	x6, x0
  4554b8:	add	x4, x4, #0x4a3
  4554bc:	mov	w1, #0x3                   	// #3
  4554c0:	mov	x0, x19
  4554c4:	mov	w2, w20
  4554c8:	mov	w3, wzr
  4554cc:	mov	x5, x22
  4554d0:	bl	4429b8 <feof@plt+0x3f118>
  4554d4:	mov	w0, wzr
  4554d8:	b	4554ec <feof@plt+0x51c4c>
  4554dc:	mov	x0, x19
  4554e0:	str	x25, [x23]
  4554e4:	bl	4407b8 <feof@plt+0x3cf18>
  4554e8:	mov	w0, #0x1                   	// #1
  4554ec:	mov	sp, x29
  4554f0:	ldp	x20, x19, [sp, #64]
  4554f4:	ldp	x22, x21, [sp, #48]
  4554f8:	ldp	x24, x23, [sp, #32]
  4554fc:	ldp	x26, x25, [sp, #16]
  455500:	ldp	x29, x30, [sp], #80
  455504:	ret
  455508:	stp	x29, x30, [sp, #-80]!
  45550c:	stp	x24, x23, [sp, #32]
  455510:	stp	x22, x21, [sp, #48]
  455514:	stp	x20, x19, [sp, #64]
  455518:	ldr	w8, [x1, #24]
  45551c:	mov	w23, w2
  455520:	mov	x19, x0
  455524:	str	x25, [sp, #16]
  455528:	cmp	w8, #0x7
  45552c:	mov	x29, sp
  455530:	b.ne	455544 <feof@plt+0x51ca4>  // b.any
  455534:	ldrb	w8, [x19, #16]
  455538:	cbz	w8, 455748 <feof@plt+0x51ea8>
  45553c:	mov	w0, wzr
  455540:	b	45572c <feof@plt+0x51e8c>
  455544:	mov	x0, x19
  455548:	mov	w2, w3
  45554c:	mov	x20, x1
  455550:	bl	451a9c <feof@plt+0x4e1fc>
  455554:	mov	x21, x0
  455558:	bl	4030b0 <strlen@plt>
  45555c:	add	x8, x0, #0x10
  455560:	and	x8, x8, #0xfffffffffffffff0
  455564:	mov	x9, sp
  455568:	sub	x24, x9, x8
  45556c:	mov	x22, x0
  455570:	mov	sp, x24
  455574:	mov	x0, x24
  455578:	mov	x1, x21
  45557c:	mov	x2, x22
  455580:	bl	402fc0 <memcpy@plt>
  455584:	mov	w8, #0xa                   	// #10
  455588:	mov	w3, #0x1                   	// #1
  45558c:	mov	x0, x19
  455590:	mov	x1, x24
  455594:	mov	x2, x22
  455598:	strb	w8, [x24, x22]
  45559c:	bl	4406c8 <feof@plt+0x3ce28>
  4555a0:	mov	x0, x19
  4555a4:	bl	448d9c <feof@plt+0x454fc>
  4555a8:	mov	x0, x19
  4555ac:	bl	449b8c <feof@plt+0x462ec>
  4555b0:	str	x0, [x19, #448]
  4555b4:	mov	x0, x19
  4555b8:	bl	449d0c <feof@plt+0x4646c>
  4555bc:	str	w23, [x0]
  4555c0:	ldr	x8, [x19, #136]
  4555c4:	mov	x21, x0
  4555c8:	ldr	w9, [x8, #48]
  4555cc:	cmp	w9, #0x2
  4555d0:	b.ne	4556b0 <feof@plt+0x51e10>  // b.any
  4555d4:	mov	w0, #0x10                  	// #16
  4555d8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4555dc:	mov	x22, x0
  4555e0:	mov	w1, #0x8                   	// #8
  4555e4:	mov	x0, x19
  4555e8:	bl	44da90 <feof@plt+0x4a1f0>
  4555ec:	ldr	x8, [x19, #40]
  4555f0:	mov	x24, x0
  4555f4:	mov	w3, #0x1                   	// #1
  4555f8:	mov	x1, x20
  4555fc:	mov	x0, x8
  455600:	mov	w2, w23
  455604:	bl	44eb80 <feof@plt+0x4b2e0>
  455608:	ldp	x23, x8, [x24, #16]
  45560c:	cmp	x23, x8
  455610:	b.hi	45576c <feof@plt+0x51ecc>  // b.pmore
  455614:	cbz	x22, 455644 <feof@plt+0x51da4>
  455618:	ldr	x8, [x19, #40]
  45561c:	ldr	x9, [x24, #8]
  455620:	ldr	w2, [x8, #112]
  455624:	sub	x8, x23, x9
  455628:	ubfx	x25, x8, #3, #32
  45562c:	cbz	x0, 455640 <feof@plt+0x51da0>
  455630:	mov	w1, wzr
  455634:	mov	w3, w2
  455638:	bl	44ecb8 <feof@plt+0x4b418>
  45563c:	mov	w2, w0
  455640:	str	w2, [x22, x25, lsl #2]
  455644:	str	x21, [x23], #8
  455648:	str	x23, [x24, #16]
  45564c:	ldr	x8, [x19, #136]
  455650:	ldr	x23, [x24, #8]
  455654:	ldr	x21, [x8]
  455658:	cbnz	x21, 455680 <feof@plt+0x51de0>
  45565c:	mov	w0, #0x38                  	// #56
  455660:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  455664:	movi	v0.2d, #0x0
  455668:	str	xzr, [x0, #48]
  45566c:	stp	q0, q0, [x0, #16]
  455670:	ldr	x8, [x19, #136]
  455674:	mov	x21, x0
  455678:	stp	xzr, x8, [x0]
  45567c:	str	x0, [x8]
  455680:	mov	w8, #0x2                   	// #2
  455684:	mov	w0, #0x18                  	// #24
  455688:	str	x21, [x19, #136]
  45568c:	str	w8, [x21, #48]
  455690:	str	x24, [x21, #32]
  455694:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  455698:	add	x8, x23, #0x8
  45569c:	stp	x20, x22, [x0]
  4556a0:	str	x22, [x0, #16]
  4556a4:	str	x0, [x21, #40]
  4556a8:	stp	x23, x8, [x21, #16]
  4556ac:	b	4556f4 <feof@plt+0x51e54>
  4556b0:	ldr	x0, [x8]
  4556b4:	ldr	x22, [x8, #40]
  4556b8:	cbnz	x0, 4556dc <feof@plt+0x51e3c>
  4556bc:	mov	w0, #0x38                  	// #56
  4556c0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4556c4:	movi	v0.2d, #0x0
  4556c8:	str	xzr, [x0, #48]
  4556cc:	stp	q0, q0, [x0, #16]
  4556d0:	ldr	x8, [x19, #136]
  4556d4:	stp	xzr, x8, [x0]
  4556d8:	str	x0, [x8]
  4556dc:	mov	w8, #0x1                   	// #1
  4556e0:	add	x9, x21, #0x18
  4556e4:	str	x0, [x19, #136]
  4556e8:	stp	xzr, x22, [x0, #32]
  4556ec:	str	w8, [x0, #48]
  4556f0:	stp	x21, x9, [x0, #16]
  4556f4:	ldr	x8, [x19]
  4556f8:	ldr	x9, [x8]
  4556fc:	ldr	x8, [x8, #32]
  455700:	cmp	x9, x8
  455704:	b.eq	455720 <feof@plt+0x51e80>  // b.none
  455708:	ldr	x3, [x20]
  45570c:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  455710:	add	x2, x2, #0xef
  455714:	mov	w1, #0x4                   	// #4
  455718:	mov	x0, x19
  45571c:	bl	4424f8 <feof@plt+0x3ec58>
  455720:	mov	x0, x19
  455724:	bl	4407b8 <feof@plt+0x3cf18>
  455728:	mov	w0, #0x1                   	// #1
  45572c:	mov	sp, x29
  455730:	ldp	x20, x19, [sp, #64]
  455734:	ldp	x22, x21, [sp, #48]
  455738:	ldp	x24, x23, [sp, #32]
  45573c:	ldr	x25, [sp, #16]
  455740:	ldp	x29, x30, [sp], #80
  455744:	ret
  455748:	mov	x0, x19
  45574c:	mov	w1, w23
  455750:	mov	sp, x29
  455754:	ldp	x20, x19, [sp, #64]
  455758:	ldp	x22, x21, [sp, #48]
  45575c:	ldp	x24, x23, [sp, #32]
  455760:	ldr	x25, [sp, #16]
  455764:	ldp	x29, x30, [sp], #80
  455768:	b	43f8ec <feof@plt+0x3c04c>
  45576c:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  455770:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  455774:	add	x0, x0, #0x176
  455778:	add	x2, x2, #0x4e3
  45577c:	mov	w1, #0x953                 	// #2387
  455780:	bl	429434 <feof@plt+0x25b94>
  455784:	sub	sp, sp, #0xb0
  455788:	stp	x29, x30, [sp, #80]
  45578c:	stp	x28, x27, [sp, #96]
  455790:	stp	x26, x25, [sp, #112]
  455794:	stp	x24, x23, [sp, #128]
  455798:	stp	x22, x21, [sp, #144]
  45579c:	stp	x20, x19, [sp, #160]
  4557a0:	stp	x3, x1, [sp, #16]
  4557a4:	ldr	x8, [x1, #24]
  4557a8:	add	x29, sp, #0x50
  4557ac:	ldrb	w22, [x0, #1157]
  4557b0:	mov	x25, x2
  4557b4:	stur	x8, [x29, #-24]
  4557b8:	ldrh	w8, [x8, #16]
  4557bc:	mov	x20, x0
  4557c0:	cmp	w8, #0x0
  4557c4:	csinc	w19, w8, wzr, ne  // ne = any
  4557c8:	mov	w8, #0x1c0                 	// #448
  4557cc:	umull	x1, w19, w8
  4557d0:	bl	44da90 <feof@plt+0x4a1f0>
  4557d4:	ldr	x24, [x0, #8]
  4557d8:	add	x8, x19, w19, uxtw #1
  4557dc:	lsl	x26, x8, #4
  4557e0:	mov	x21, x0
  4557e4:	mov	x0, x24
  4557e8:	mov	w1, wzr
  4557ec:	mov	x2, x26
  4557f0:	bl	4031f0 <memset@plt>
  4557f4:	mov	w23, wzr
  4557f8:	add	x8, x24, x26
  4557fc:	add	x9, x20, #0x2b0
  455800:	mov	w19, #0x201                 	// #513
  455804:	mov	x26, x21
  455808:	stur	x9, [x29, #-32]
  45580c:	str	x8, [x21, #16]
  455810:	str	x24, [sp, #8]
  455814:	str	x21, [sp, #32]
  455818:	b	45582c <feof@plt+0x51f8c>
  45581c:	ldrb	w9, [x27, #4]
  455820:	sub	w10, w9, #0x15
  455824:	cmp	w10, #0x1
  455828:	b.ls	455b04 <feof@plt+0x52264>  // b.plast
  45582c:	ldr	x8, [x26, #16]
  455830:	add	w9, w23, #0x1
  455834:	stur	w23, [x29, #-36]
  455838:	stur	w9, [x29, #-12]
  45583c:	str	x8, [x24]
  455840:	cbz	w22, 455850 <feof@plt+0x51fb0>
  455844:	mov	w0, #0xc8                  	// #200
  455848:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  45584c:	str	x0, [x24, #32]
  455850:	mov	w8, wzr
  455854:	mov	w23, #0x32                  	// #50
  455858:	stur	wzr, [x29, #-16]
  45585c:	add	w21, w8, #0x2
  455860:	stur	w8, [x29, #-8]
  455864:	b	455878 <feof@plt+0x51fd8>
  455868:	strh	w19, [x20, #24]
  45586c:	ldrb	w8, [x27, #4]
  455870:	cmp	w8, #0x16
  455874:	b.eq	455a70 <feof@plt+0x521d0>  // b.none
  455878:	ldr	x8, [x24]
  45587c:	ldr	x9, [x26, #24]
  455880:	add	x8, x8, x21, lsl #3
  455884:	cmp	x9, x8
  455888:	b.cs	4558a8 <feof@plt+0x52008>  // b.hs, b.nlast
  45588c:	mov	w2, #0x1f40                	// #8000
  455890:	mov	x0, x20
  455894:	mov	x1, x26
  455898:	bl	44db3c <feof@plt+0x4a29c>
  45589c:	ldr	x8, [x0, #16]
  4558a0:	mov	x26, x0
  4558a4:	str	x8, [x24]
  4558a8:	cbz	w22, 4558c8 <feof@plt+0x52028>
  4558ac:	cmp	w21, w23
  4558b0:	b.ls	4558c8 <feof@plt+0x52028>  // b.plast
  4558b4:	ldr	x0, [x24, #32]
  4558b8:	add	w23, w23, #0x3e8
  4558bc:	lsl	x1, x23, #2
  4558c0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4558c4:	str	x0, [x24, #32]
  4558c8:	sub	x1, x29, #0x4
  4558cc:	mov	x0, x20
  4558d0:	bl	452230 <feof@plt+0x4e990>
  4558d4:	ldrb	w8, [x0, #4]
  4558d8:	mov	x28, x0
  4558dc:	cmp	w8, #0x51
  4558e0:	b.ne	455994 <feof@plt+0x520f4>  // b.any
  4558e4:	mov	x0, x20
  4558e8:	bl	449b8c <feof@plt+0x462ec>
  4558ec:	ldr	q0, [x28]
  4558f0:	ldr	x8, [x28, #16]
  4558f4:	mov	x27, x0
  4558f8:	str	q0, [x0]
  4558fc:	str	x8, [x0, #16]
  455900:	ldr	x28, [x25]
  455904:	cbz	x28, 45593c <feof@plt+0x5209c>
  455908:	ldp	x8, x9, [x28, #16]
  45590c:	sub	x9, x9, x8
  455910:	cmp	x9, #0x8
  455914:	b.cs	455950 <feof@plt+0x520b0>  // b.hs, b.nlast
  455918:	ldr	x9, [x28, #8]
  45591c:	mov	x0, x20
  455920:	sub	x8, x8, x9
  455924:	lsl	x1, x8, #1
  455928:	bl	44da90 <feof@plt+0x4a1f0>
  45592c:	str	x0, [x25]
  455930:	str	x28, [x0]
  455934:	ldr	x28, [x25]
  455938:	b	455950 <feof@plt+0x520b0>
  45593c:	mov	w1, #0x100                 	// #256
  455940:	mov	x0, x20
  455944:	bl	44da90 <feof@plt+0x4a1f0>
  455948:	mov	x28, x0
  45594c:	str	x0, [x25]
  455950:	ldr	x8, [x28, #16]
  455954:	str	x27, [x8]
  455958:	ldr	x8, [x25]
  45595c:	ldr	x9, [x8, #16]
  455960:	add	x9, x9, #0x8
  455964:	str	x9, [x8, #16]
  455968:	ldrb	w8, [x27, #4]
  45596c:	cmp	w8, #0x52
  455970:	b.eq	455868 <feof@plt+0x51fc8>  // b.none
  455974:	sub	x1, x29, #0x4
  455978:	mov	x0, x20
  45597c:	bl	452230 <feof@plt+0x4e990>
  455980:	ldrb	w8, [x0, #4]
  455984:	mov	x27, x0
  455988:	cmp	w8, #0x16
  45598c:	b.ne	455900 <feof@plt+0x52060>  // b.any
  455990:	b	455868 <feof@plt+0x51fc8>
  455994:	sub	w9, w8, #0x13
  455998:	cmp	w9, #0x12
  45599c:	b.hi	4559ec <feof@plt+0x5214c>  // b.pmore
  4559a0:	adrp	x11, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4559a4:	add	x11, x11, #0x5e
  4559a8:	adr	x8, 4559bc <feof@plt+0x5211c>
  4559ac:	ldrb	w10, [x11, x9]
  4559b0:	add	x8, x8, x10, lsl #2
  4559b4:	mov	x27, x28
  4559b8:	br	x8
  4559bc:	ldur	w8, [x29, #-16]
  4559c0:	ldur	w12, [x29, #-8]
  4559c4:	cbnz	w8, 455a34 <feof@plt+0x52194>
  4559c8:	ldur	x9, [x29, #-24]
  4559cc:	ldrb	w8, [x9, #19]
  4559d0:	tbz	w8, #3, 455a6c <feof@plt+0x521cc>
  4559d4:	ldrh	w8, [x9, #16]
  4559d8:	ldur	w9, [x29, #-12]
  4559dc:	cmp	w9, w8
  4559e0:	b.ne	455a6c <feof@plt+0x521cc>  // b.any
  4559e4:	stur	wzr, [x29, #-16]
  4559e8:	b	455a34 <feof@plt+0x52194>
  4559ec:	cmp	w8, #0x53
  4559f0:	b.ne	455a20 <feof@plt+0x52180>  // b.any
  4559f4:	ldur	w12, [x29, #-8]
  4559f8:	mov	w8, wzr
  4559fc:	cbz	w12, 45585c <feof@plt+0x51fbc>
  455a00:	b	455a34 <feof@plt+0x52194>
  455a04:	ldur	w8, [x29, #-16]
  455a08:	add	w8, w8, #0x1
  455a0c:	b	455a1c <feof@plt+0x5217c>
  455a10:	ldur	w8, [x29, #-16]
  455a14:	cbz	w8, 455a6c <feof@plt+0x521cc>
  455a18:	sub	w8, w8, #0x1
  455a1c:	stur	w8, [x29, #-16]
  455a20:	ldur	w12, [x29, #-8]
  455a24:	b	455a34 <feof@plt+0x52194>
  455a28:	ldrb	w8, [x28, #6]
  455a2c:	ldur	w12, [x29, #-8]
  455a30:	tbnz	w8, #6, 455a6c <feof@plt+0x521cc>
  455a34:	ldrb	w10, [x20, #1157]
  455a38:	ldr	x9, [x24]
  455a3c:	mov	w8, w12
  455a40:	cbz	w10, 455a60 <feof@plt+0x521c0>
  455a44:	ldr	x10, [x24, #32]
  455a48:	ldur	w11, [x29, #-4]
  455a4c:	str	x28, [x9, x8, lsl #3]
  455a50:	cbz	x10, 455a58 <feof@plt+0x521b8>
  455a54:	str	w11, [x10, x8, lsl #2]
  455a58:	add	w8, w12, #0x1
  455a5c:	b	45585c <feof@plt+0x51fbc>
  455a60:	str	x28, [x9, x8, lsl #3]
  455a64:	add	w8, w12, #0x1
  455a68:	b	45585c <feof@plt+0x51fbc>
  455a6c:	mov	x27, x28
  455a70:	ldp	w23, w8, [x29, #-12]
  455a74:	mov	w8, w8
  455a78:	cbz	x8, 455a9c <feof@plt+0x521fc>
  455a7c:	ldr	x9, [x24]
  455a80:	sub	w10, w8, #0x1
  455a84:	sub	x8, x8, #0x1
  455a88:	ldr	x9, [x9, w10, uxtw #3]
  455a8c:	ldrb	w9, [x9, #4]
  455a90:	cmp	w9, #0x53
  455a94:	b.eq	455a78 <feof@plt+0x521d8>  // b.none
  455a98:	add	w8, w8, #0x1
  455a9c:	str	w8, [x24, #24]
  455aa0:	ldrb	w11, [x20, #1157]
  455aa4:	ldr	x10, [x24]
  455aa8:	mov	w9, w8
  455aac:	cbz	w11, 455acc <feof@plt+0x5222c>
  455ab0:	ldr	x8, [x24, #32]
  455ab4:	ldr	w11, [x20, #688]
  455ab8:	ldur	x12, [x29, #-32]
  455abc:	str	x12, [x10, x9, lsl #3]
  455ac0:	cbz	x8, 455ad4 <feof@plt+0x52234>
  455ac4:	str	w11, [x8, x9, lsl #2]
  455ac8:	b	455ad4 <feof@plt+0x52234>
  455acc:	ldur	x8, [x29, #-32]
  455ad0:	str	x8, [x10, x9, lsl #3]
  455ad4:	ldur	x8, [x29, #-24]
  455ad8:	ldrh	w8, [x8, #16]
  455adc:	cmp	w23, w8
  455ae0:	b.hi	45581c <feof@plt+0x51f7c>  // b.pmore
  455ae4:	mov	x10, x24
  455ae8:	ldr	x11, [x10], #48
  455aec:	add	w9, w9, #0x1
  455af0:	cmp	w23, w8
  455af4:	add	x9, x11, w9, uxtw #3
  455af8:	csel	x24, x24, x10, eq  // eq = none
  455afc:	str	x9, [x26, #16]
  455b00:	b	45581c <feof@plt+0x51f7c>
  455b04:	cmp	w9, #0x16
  455b08:	b.ne	455b50 <feof@plt+0x522b0>  // b.any
  455b0c:	ldr	x8, [x20, #136]
  455b10:	ldr	x19, [sp, #32]
  455b14:	ldr	x8, [x8, #8]
  455b18:	cbnz	x8, 455b24 <feof@plt+0x52284>
  455b1c:	ldrb	w8, [x20, #16]
  455b20:	cbz	w8, 455b30 <feof@plt+0x52290>
  455b24:	mov	w1, #0x1                   	// #1
  455b28:	mov	x0, x20
  455b2c:	bl	4529b4 <feof@plt+0x4f114>
  455b30:	ldr	x8, [sp, #24]
  455b34:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  455b38:	add	x2, x2, #0x53f
  455b3c:	mov	w1, #0x3                   	// #3
  455b40:	ldr	x3, [x8]
  455b44:	mov	x0, x20
  455b48:	bl	4424f8 <feof@plt+0x3ec58>
  455b4c:	b	455bc0 <feof@plt+0x52320>
  455b50:	ldr	x19, [sp, #32]
  455b54:	ldur	x1, [x29, #-24]
  455b58:	ldur	w9, [x29, #-36]
  455b5c:	mov	w25, w23
  455b60:	cbnz	w9, 455b80 <feof@plt+0x522e0>
  455b64:	cbz	w8, 455b70 <feof@plt+0x522d0>
  455b68:	mov	w25, #0x1                   	// #1
  455b6c:	b	455b80 <feof@plt+0x522e0>
  455b70:	ldr	x8, [sp, #8]
  455b74:	ldr	w8, [x8, #24]
  455b78:	cmp	w8, #0x0
  455b7c:	cset	w25, ne  // ne = any
  455b80:	ldr	x2, [sp, #24]
  455b84:	mov	x0, x20
  455b88:	mov	w3, w25
  455b8c:	mov	x21, x1
  455b90:	bl	451ef8 <feof@plt+0x4e658>
  455b94:	tbz	w0, #0, 455bc0 <feof@plt+0x52320>
  455b98:	ldrb	w8, [x21, #19]
  455b9c:	tbz	w8, #3, 455c10 <feof@plt+0x52370>
  455ba0:	ldrh	w8, [x21, #16]
  455ba4:	cmp	w25, w8
  455ba8:	b.cs	455bf4 <feof@plt+0x52354>  // b.hs, b.nlast
  455bac:	ldr	x10, [sp, #8]
  455bb0:	mov	w9, #0x30                  	// #48
  455bb4:	madd	x8, x8, x9, x10
  455bb8:	stur	xzr, [x8, #-48]
  455bbc:	b	455c10 <feof@plt+0x52370>
  455bc0:	mov	x0, x20
  455bc4:	mov	x1, x19
  455bc8:	bl	44da70 <feof@plt+0x4a1d0>
  455bcc:	mov	x19, xzr
  455bd0:	mov	x0, x19
  455bd4:	ldp	x20, x19, [sp, #160]
  455bd8:	ldp	x22, x21, [sp, #144]
  455bdc:	ldp	x24, x23, [sp, #128]
  455be0:	ldp	x26, x25, [sp, #112]
  455be4:	ldp	x28, x27, [sp, #96]
  455be8:	ldp	x29, x30, [sp, #80]
  455bec:	add	sp, sp, #0xb0
  455bf0:	ret
  455bf4:	cmp	w25, #0x1
  455bf8:	b.ne	455c10 <feof@plt+0x52370>  // b.any
  455bfc:	ldr	x9, [sp, #8]
  455c00:	ldr	w9, [x9, #24]
  455c04:	cbnz	w9, 455c10 <feof@plt+0x52370>
  455c08:	ldrb	w9, [x20, #1153]
  455c0c:	cbz	w9, 455bac <feof@plt+0x5230c>
  455c10:	ldr	x8, [sp, #16]
  455c14:	cbz	x8, 455bd0 <feof@plt+0x52330>
  455c18:	str	w23, [x8]
  455c1c:	b	455bd0 <feof@plt+0x52330>
  455c20:	sub	sp, sp, #0x60
  455c24:	stp	x29, x30, [sp, #16]
  455c28:	stp	x26, x25, [sp, #32]
  455c2c:	stp	x24, x23, [sp, #48]
  455c30:	stp	x22, x21, [sp, #64]
  455c34:	stp	x20, x19, [sp, #80]
  455c38:	ldr	w8, [x1, #24]
  455c3c:	add	x29, sp, #0x10
  455c40:	cbz	w8, 455e08 <feof@plt+0x52568>
  455c44:	ldr	x8, [x1, #8]
  455c48:	mov	x20, x1
  455c4c:	cbnz	x8, 455e08 <feof@plt+0x52568>
  455c50:	ldrb	w8, [x0, #1138]
  455c54:	ldrb	w21, [x0, #1157]
  455c58:	mov	x19, x0
  455c5c:	strb	wzr, [x0, #1138]
  455c60:	cmp	w8, #0x0
  455c64:	mov	w0, #0x800                 	// #2048
  455c68:	cset	w22, ne  // ne = any
  455c6c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  455c70:	str	x0, [x20, #8]
  455c74:	ldrb	w8, [x19, #1157]
  455c78:	cbz	w8, 455c88 <feof@plt+0x523e8>
  455c7c:	mov	w0, #0x400                 	// #1024
  455c80:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  455c84:	str	x0, [x20, #40]
  455c88:	cbz	w21, 455d08 <feof@plt+0x52468>
  455c8c:	ldr	x8, [x19, #136]
  455c90:	ldr	x25, [x20, #32]
  455c94:	ldr	x23, [x20]
  455c98:	ldr	w24, [x20, #24]
  455c9c:	ldr	w9, [x8, #48]
  455ca0:	cmp	w9, #0x2
  455ca4:	add	x9, x8, #0x28
  455ca8:	b.ne	455cb0 <feof@plt+0x52410>  // b.any
  455cac:	ldr	x9, [x9]
  455cb0:	ldr	x21, [x8]
  455cb4:	ldr	x26, [x9]
  455cb8:	cbnz	x21, 455ce0 <feof@plt+0x52440>
  455cbc:	mov	w0, #0x38                  	// #56
  455cc0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  455cc4:	movi	v0.2d, #0x0
  455cc8:	str	xzr, [x0, #48]
  455ccc:	stp	q0, q0, [x0, #16]
  455cd0:	ldr	x8, [x19, #136]
  455cd4:	mov	x21, x0
  455cd8:	stp	xzr, x8, [x0]
  455cdc:	str	x0, [x8]
  455ce0:	mov	w8, #0x2                   	// #2
  455ce4:	mov	w0, #0x18                  	// #24
  455ce8:	str	x21, [x19, #136]
  455cec:	str	w8, [x21, #48]
  455cf0:	str	xzr, [x21, #32]
  455cf4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  455cf8:	stp	x26, x25, [x0]
  455cfc:	str	x25, [x0, #16]
  455d00:	str	x0, [x21, #40]
  455d04:	b	455d4c <feof@plt+0x524ac>
  455d08:	ldr	x8, [x19, #136]
  455d0c:	ldr	x23, [x20]
  455d10:	ldr	w24, [x20, #24]
  455d14:	ldr	x21, [x8]
  455d18:	cbnz	x21, 455d40 <feof@plt+0x524a0>
  455d1c:	mov	w0, #0x38                  	// #56
  455d20:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  455d24:	movi	v0.2d, #0x0
  455d28:	str	xzr, [x0, #48]
  455d2c:	stp	q0, q0, [x0, #16]
  455d30:	ldr	x8, [x19, #136]
  455d34:	mov	x21, x0
  455d38:	stp	xzr, x8, [x0]
  455d3c:	str	x0, [x8]
  455d40:	str	x21, [x19, #136]
  455d44:	stp	xzr, xzr, [x21, #32]
  455d48:	str	wzr, [x21, #48]
  455d4c:	add	w8, w24, #0x1
  455d50:	add	x8, x23, w8, uxtw #3
  455d54:	stp	x23, x8, [x21, #16]
  455d58:	ldr	w8, [x20, #28]
  455d5c:	mov	w21, #0x100                 	// #256
  455d60:	b	455d70 <feof@plt+0x524d0>
  455d64:	str	x0, [x9, x8, lsl #3]
  455d68:	add	w8, w8, #0x1
  455d6c:	str	w8, [x20, #28]
  455d70:	add	w23, w8, #0x1
  455d74:	cmp	x21, x23
  455d78:	b.cs	455db8 <feof@plt+0x52518>  // b.hs, b.nlast
  455d7c:	ldr	x0, [x20, #8]
  455d80:	lsl	x1, x23, #4
  455d84:	lsl	x21, x23, #1
  455d88:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  455d8c:	str	x0, [x20, #8]
  455d90:	ldrb	w8, [x19, #1157]
  455d94:	cbz	w8, 455db8 <feof@plt+0x52518>
  455d98:	ldr	x0, [x20, #40]
  455d9c:	lsl	x1, x23, #3
  455da0:	cbz	x0, 455dac <feof@plt+0x5250c>
  455da4:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  455da8:	b	455db4 <feof@plt+0x52514>
  455dac:	mov	x0, x1
  455db0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  455db4:	str	x0, [x20, #40]
  455db8:	sub	x1, x29, #0x4
  455dbc:	mov	x0, x19
  455dc0:	bl	452230 <feof@plt+0x4e990>
  455dc4:	ldrb	w8, [x0, #4]
  455dc8:	cmp	w8, #0x16
  455dcc:	b.eq	455dfc <feof@plt+0x5255c>  // b.none
  455dd0:	ldr	w8, [x20, #28]
  455dd4:	ldrb	w10, [x19, #1157]
  455dd8:	ldr	x9, [x20, #8]
  455ddc:	cbz	w10, 455d64 <feof@plt+0x524c4>
  455de0:	ldr	x10, [x20, #40]
  455de4:	ldur	w11, [x29, #-4]
  455de8:	str	x0, [x9, x8, lsl #3]
  455dec:	cbz	x10, 455d68 <feof@plt+0x524c8>
  455df0:	str	w11, [x10, x8, lsl #2]
  455df4:	ldr	w8, [x20, #28]
  455df8:	b	455d68 <feof@plt+0x524c8>
  455dfc:	mov	x0, x19
  455e00:	bl	452120 <feof@plt+0x4e880>
  455e04:	strb	w22, [x19, #1138]
  455e08:	ldp	x20, x19, [sp, #80]
  455e0c:	ldp	x22, x21, [sp, #64]
  455e10:	ldp	x24, x23, [sp, #48]
  455e14:	ldp	x26, x25, [sp, #32]
  455e18:	ldp	x29, x30, [sp, #16]
  455e1c:	add	sp, sp, #0x60
  455e20:	ret
  455e24:	stp	x29, x30, [sp, #-16]!
  455e28:	ldrb	w8, [x0, #9]
  455e2c:	mov	x29, sp
  455e30:	cbz	w8, 455ea8 <feof@plt+0x52608>
  455e34:	ldrb	w9, [x1, #4]
  455e38:	cmp	w9, #0x35
  455e3c:	b.ne	455e54 <feof@plt+0x525b4>  // b.any
  455e40:	ldr	x8, [x0]
  455e44:	ldr	x10, [x1, #8]
  455e48:	ldr	x11, [x8, #1280]
  455e4c:	cmp	x10, x11
  455e50:	b.eq	455ec8 <feof@plt+0x52628>  // b.none
  455e54:	ldr	w8, [x0, #12]
  455e58:	cmp	w8, #0x1
  455e5c:	b.ne	455e7c <feof@plt+0x525dc>  // b.any
  455e60:	cmp	w9, #0x14
  455e64:	b.ne	455eb4 <feof@plt+0x52614>  // b.any
  455e68:	mov	w8, #0x2                   	// #2
  455e6c:	str	w8, [x0, #12]
  455e70:	mov	w0, #0x1                   	// #1
  455e74:	ldp	x29, x30, [sp], #16
  455e78:	ret
  455e7c:	cmp	w8, #0x2
  455e80:	b.lt	455ea8 <feof@plt+0x52608>  // b.tstop
  455e84:	b.ne	455f1c <feof@plt+0x5267c>  // b.any
  455e88:	cmp	w9, #0x26
  455e8c:	b.ne	455f14 <feof@plt+0x52674>  // b.any
  455e90:	ldr	x0, [x0]
  455e94:	ldr	w2, [x1]
  455e98:	adrp	x3, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  455e9c:	add	x3, x3, #0x694
  455ea0:	mov	w1, #0x3                   	// #3
  455ea4:	b	455ee8 <feof@plt+0x52648>
  455ea8:	mov	w0, #0x2                   	// #2
  455eac:	ldp	x29, x30, [sp], #16
  455eb0:	ret
  455eb4:	ldr	x8, [x0]
  455eb8:	ldr	w2, [x0, #20]
  455ebc:	adrp	x3, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  455ec0:	add	x3, x3, #0x661
  455ec4:	b	455ee0 <feof@plt+0x52640>
  455ec8:	ldr	w9, [x0, #12]
  455ecc:	cmp	w9, #0x1
  455ed0:	b.lt	455ef8 <feof@plt+0x52658>  // b.tstop
  455ed4:	ldr	w2, [x1]
  455ed8:	adrp	x3, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  455edc:	add	x3, x3, #0x637
  455ee0:	mov	w1, #0x3                   	// #3
  455ee4:	mov	x0, x8
  455ee8:	bl	442da8 <feof@plt+0x3f508>
  455eec:	mov	w0, wzr
  455ef0:	ldp	x29, x30, [sp], #16
  455ef4:	ret
  455ef8:	add	w8, w9, #0x1
  455efc:	str	w8, [x0, #12]
  455f00:	ldr	w8, [x1]
  455f04:	str	w8, [x0, #20]
  455f08:	mov	w0, #0x3                   	// #3
  455f0c:	ldp	x29, x30, [sp], #16
  455f10:	ret
  455f14:	mov	w8, #0x3                   	// #3
  455f18:	str	w8, [x0, #12]
  455f1c:	ldrb	w9, [x0, #10]
  455f20:	strb	wzr, [x0, #10]
  455f24:	ldrb	w10, [x1, #4]
  455f28:	cmp	w10, #0x14
  455f2c:	b.eq	455f54 <feof@plt+0x526b4>  // b.none
  455f30:	cmp	w10, #0x15
  455f34:	b.eq	455f60 <feof@plt+0x526c0>  // b.none
  455f38:	cmp	w10, #0x26
  455f3c:	b.ne	455f84 <feof@plt+0x526e4>  // b.any
  455f40:	mov	w8, #0x1                   	// #1
  455f44:	strb	w8, [x0, #10]
  455f48:	ldr	w8, [x1]
  455f4c:	str	w8, [x0, #16]
  455f50:	b	455f84 <feof@plt+0x526e4>
  455f54:	add	w8, w8, #0x1
  455f58:	str	w8, [x0, #12]
  455f5c:	b	455f84 <feof@plt+0x526e4>
  455f60:	sub	w8, w8, #0x1
  455f64:	cmp	w8, #0x2
  455f68:	str	w8, [x0, #12]
  455f6c:	b.ne	455f84 <feof@plt+0x526e4>  // b.any
  455f70:	str	wzr, [x0, #12]
  455f74:	cbnz	w9, 455e90 <feof@plt+0x525f0>
  455f78:	mov	w0, #0x4                   	// #4
  455f7c:	ldp	x29, x30, [sp], #16
  455f80:	ret
  455f84:	ldrb	w8, [x0, #8]
  455f88:	cmp	w8, #0x0
  455f8c:	mov	w8, #0x1                   	// #1
  455f90:	cinc	w0, w8, ne  // ne = any
  455f94:	ldp	x29, x30, [sp], #16
  455f98:	ret
  455f9c:	mov	w0, #0x1                   	// #1
  455fa0:	mov	w1, #0x38                  	// #56
  455fa4:	b	47d0cc <_obstack_memory_used@@Base+0x13c8>
  455fa8:	stp	x29, x30, [sp, #-32]!
  455fac:	stp	x20, x19, [sp, #16]
  455fb0:	mov	x19, x0
  455fb4:	ldr	x0, [x0]
  455fb8:	mov	x29, sp
  455fbc:	cbz	x0, 455fec <feof@plt+0x5274c>
  455fc0:	ldr	w8, [x19, #8]
  455fc4:	cbz	w8, 455fe8 <feof@plt+0x52748>
  455fc8:	mov	x20, xzr
  455fcc:	ldr	x0, [x0, x20, lsl #3]
  455fd0:	bl	4031d0 <free@plt>
  455fd4:	ldr	w8, [x19, #8]
  455fd8:	ldr	x0, [x19]
  455fdc:	add	x20, x20, #0x1
  455fe0:	cmp	x20, x8
  455fe4:	b.cc	455fcc <feof@plt+0x5272c>  // b.lo, b.ul, b.last
  455fe8:	bl	4031d0 <free@plt>
  455fec:	ldr	x0, [x19, #16]
  455ff0:	cbz	x0, 456020 <feof@plt+0x52780>
  455ff4:	ldr	w8, [x19, #24]
  455ff8:	cbz	w8, 45601c <feof@plt+0x5277c>
  455ffc:	mov	x20, xzr
  456000:	ldr	x0, [x0, x20, lsl #3]
  456004:	bl	4031d0 <free@plt>
  456008:	ldr	w8, [x19, #24]
  45600c:	ldr	x0, [x19, #16]
  456010:	add	x20, x20, #0x1
  456014:	cmp	x20, x8
  456018:	b.cc	456000 <feof@plt+0x52760>  // b.lo, b.ul, b.last
  45601c:	bl	4031d0 <free@plt>
  456020:	ldr	x0, [x19, #32]
  456024:	cbz	x0, 45605c <feof@plt+0x527bc>
  456028:	ldr	w8, [x19, #48]
  45602c:	cbz	w8, 456050 <feof@plt+0x527b0>
  456030:	mov	x20, xzr
  456034:	ldr	x0, [x0, x20, lsl #3]
  456038:	bl	4031d0 <free@plt>
  45603c:	ldr	w8, [x19, #48]
  456040:	ldr	x0, [x19, #32]
  456044:	add	x20, x20, #0x1
  456048:	cmp	x20, x8
  45604c:	b.cc	456034 <feof@plt+0x52794>  // b.lo, b.ul, b.last
  456050:	bl	4031d0 <free@plt>
  456054:	ldr	x0, [x19, #40]
  456058:	bl	4031d0 <free@plt>
  45605c:	mov	x0, x19
  456060:	ldp	x20, x19, [sp, #16]
  456064:	ldp	x29, x30, [sp], #32
  456068:	b	4031d0 <free@plt>
  45606c:	stp	x29, x30, [sp, #-48]!
  456070:	stp	x22, x21, [sp, #16]
  456074:	stp	x20, x19, [sp, #32]
  456078:	ldp	w8, w9, [x0, #8]
  45607c:	mov	w20, w2
  456080:	mov	x19, x0
  456084:	mov	x21, x1
  456088:	cmp	w8, w9
  45608c:	mov	x29, sp
  456090:	b.ne	4560b0 <feof@plt+0x52810>  // b.any
  456094:	ldr	x0, [x19]
  456098:	lsl	w8, w8, #1
  45609c:	add	w8, w8, #0x4
  4560a0:	lsl	x1, x8, #3
  4560a4:	str	w8, [x19, #12]
  4560a8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4560ac:	str	x0, [x19]
  4560b0:	ldr	x8, [x19, #32]
  4560b4:	cbz	x8, 45613c <feof@plt+0x5289c>
  4560b8:	ldr	w9, [x19, #48]
  4560bc:	cbz	w9, 45613c <feof@plt+0x5289c>
  4560c0:	mov	x22, xzr
  4560c4:	ldr	x9, [x19, #40]
  4560c8:	lsl	x10, x22, #3
  4560cc:	ldr	x0, [x8, x10]
  4560d0:	mov	x1, x21
  4560d4:	ldr	x2, [x9, x10]
  4560d8:	bl	479ca8 <feof@plt+0x76408>
  4560dc:	cbnz	w0, 45611c <feof@plt+0x5287c>
  4560e0:	ldr	x8, [x19, #40]
  4560e4:	ldr	x8, [x8, x22, lsl #3]
  4560e8:	add	x9, x21, x8
  4560ec:	ldrb	w10, [x9]
  4560f0:	cmp	w10, #0x2f
  4560f4:	b.ne	45611c <feof@plt+0x5287c>  // b.any
  4560f8:	ldrb	w10, [x9, #1]
  4560fc:	cmp	w10, #0x2e
  456100:	b.ne	456134 <feof@plt+0x52894>  // b.any
  456104:	ldrb	w10, [x9, #2]
  456108:	cmp	w10, #0x2e
  45610c:	b.ne	456134 <feof@plt+0x52894>  // b.any
  456110:	ldrb	w9, [x9, #3]
  456114:	cmp	w9, #0x2f
  456118:	b.ne	456134 <feof@plt+0x52894>  // b.any
  45611c:	ldr	w8, [x19, #48]
  456120:	add	x22, x22, #0x1
  456124:	cmp	x22, x8
  456128:	b.cs	45613c <feof@plt+0x5289c>  // b.hs, b.nlast
  45612c:	ldr	x8, [x19, #32]
  456130:	b	4560c4 <feof@plt+0x52824>
  456134:	add	x8, x21, x8
  456138:	add	x21, x8, #0x1
  45613c:	ldrb	w8, [x21]
  456140:	cmp	w8, #0x2e
  456144:	b.ne	456168 <feof@plt+0x528c8>  // b.any
  456148:	ldrb	w8, [x21, #1]
  45614c:	cmp	w8, #0x2f
  456150:	b.ne	456168 <feof@plt+0x528c8>  // b.any
  456154:	add	x21, x21, #0x1
  456158:	ldrb	w8, [x21, #1]!
  45615c:	cmp	w8, #0x2f
  456160:	b.eq	456158 <feof@plt+0x528b8>  // b.none
  456164:	b	456140 <feof@plt+0x528a0>
  456168:	mov	x0, x21
  45616c:	cbz	w20, 456178 <feof@plt+0x528d8>
  456170:	bl	4561a0 <feof@plt+0x52900>
  456174:	b	45617c <feof@plt+0x528dc>
  456178:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  45617c:	ldr	w8, [x19, #8]
  456180:	ldr	x9, [x19]
  456184:	add	w10, w8, #0x1
  456188:	str	w10, [x19, #8]
  45618c:	str	x0, [x9, x8, lsl #3]
  456190:	ldp	x20, x19, [sp, #32]
  456194:	ldp	x22, x21, [sp, #16]
  456198:	ldp	x29, x30, [sp], #48
  45619c:	ret
  4561a0:	stp	x29, x30, [sp, #-32]!
  4561a4:	adrp	x9, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4561a8:	str	x19, [sp, #16]
  4561ac:	mov	x19, x0
  4561b0:	mov	w8, wzr
  4561b4:	add	x9, x9, #0x983
  4561b8:	mov	x10, x0
  4561bc:	mov	x29, sp
  4561c0:	b	4561d4 <feof@plt+0x52934>
  4561c4:	sub	w8, w8, w11
  4561c8:	add	w8, w8, #0x1
  4561cc:	add	x10, x10, #0x1
  4561d0:	add	w8, w8, #0x1
  4561d4:	ldrb	w11, [x10]
  4561d8:	cmp	w11, #0x24
  4561dc:	b.hi	4561cc <feof@plt+0x5292c>  // b.pmore
  4561e0:	adr	x12, 4561c8 <feof@plt+0x52928>
  4561e4:	ldrb	w13, [x9, x11]
  4561e8:	add	x12, x12, x13, lsl #2
  4561ec:	br	x12
  4561f0:	mov	x11, xzr
  4561f4:	add	x12, x10, x11
  4561f8:	sub	x12, x12, #0x1
  4561fc:	cmp	x12, x19
  456200:	b.cc	4561c4 <feof@plt+0x52924>  // b.lo, b.ul, b.last
  456204:	ldrb	w12, [x12]
  456208:	sub	x11, x11, #0x1
  45620c:	cmp	w12, #0x5c
  456210:	b.eq	4561f4 <feof@plt+0x52954>  // b.none
  456214:	sub	w8, w8, w11
  456218:	b	4561cc <feof@plt+0x5292c>
  45621c:	add	w8, w8, #0x1
  456220:	sxtw	x0, w8
  456224:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  456228:	adrp	x9, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45622c:	sub	x8, x19, #0x1
  456230:	add	x9, x9, #0x9a8
  456234:	mov	w10, #0x5c                  	// #92
  456238:	mov	w11, #0x24                  	// #36
  45623c:	mov	x13, x19
  456240:	mov	x12, x0
  456244:	b	456258 <feof@plt+0x529b8>
  456248:	strb	w10, [x12], #1
  45624c:	ldrb	w14, [x13], #1
  456250:	add	x8, x8, #0x1
  456254:	strb	w14, [x12], #1
  456258:	ldrb	w14, [x13]
  45625c:	cmp	w14, #0x24
  456260:	b.hi	45624c <feof@plt+0x529ac>  // b.pmore
  456264:	adr	x15, 456248 <feof@plt+0x529a8>
  456268:	ldrb	w16, [x9, x14]
  45626c:	add	x15, x15, x16, lsl #2
  456270:	br	x15
  456274:	mov	x14, x8
  456278:	cmp	x14, x19
  45627c:	b.cc	456248 <feof@plt+0x529a8>  // b.lo, b.ul, b.last
  456280:	ldrb	w15, [x14], #-1
  456284:	strb	w10, [x12], #1
  456288:	cmp	w15, #0x5c
  45628c:	b.eq	456278 <feof@plt+0x529d8>  // b.none
  456290:	b	45624c <feof@plt+0x529ac>
  456294:	strb	w11, [x12], #1
  456298:	b	45624c <feof@plt+0x529ac>
  45629c:	ldr	x19, [sp, #16]
  4562a0:	strb	wzr, [x12]
  4562a4:	ldp	x29, x30, [sp], #32
  4562a8:	ret
  4562ac:	stp	x29, x30, [sp, #-48]!
  4562b0:	stp	x20, x19, [sp, #32]
  4562b4:	ldr	w8, [x0, #8]
  4562b8:	str	x21, [sp, #16]
  4562bc:	mov	x29, sp
  4562c0:	cbnz	w8, 456338 <feof@plt+0x52a98>
  4562c4:	ldrb	w8, [x1]
  4562c8:	mov	x19, x0
  4562cc:	cbz	w8, 45634c <feof@plt+0x52aac>
  4562d0:	mov	x0, x1
  4562d4:	bl	47b0c8 <feof@plt+0x77828>
  4562d8:	mov	x21, x0
  4562dc:	bl	4030b0 <strlen@plt>
  4562e0:	add	x9, x0, #0x12
  4562e4:	mov	x8, sp
  4562e8:	and	x9, x9, #0xfffffffffffffff0
  4562ec:	sub	x20, x8, x9
  4562f0:	mov	sp, x20
  4562f4:	mov	x0, x20
  4562f8:	mov	x1, x21
  4562fc:	bl	4032f0 <strcpy@plt>
  456300:	mov	w1, #0x2e                  	// #46
  456304:	mov	x0, x20
  456308:	bl	4035a0 <strrchr@plt>
  45630c:	cbnz	x0, 45631c <feof@plt+0x52a7c>
  456310:	mov	x0, x20
  456314:	bl	4030b0 <strlen@plt>
  456318:	add	x0, x20, x0
  45631c:	mov	w8, #0x6f2e                	// #28462
  456320:	strb	wzr, [x0, #2]
  456324:	strh	w8, [x0]
  456328:	mov	w2, #0x1                   	// #1
  45632c:	mov	x0, x19
  456330:	mov	x1, x20
  456334:	bl	45606c <feof@plt+0x527cc>
  456338:	mov	sp, x29
  45633c:	ldp	x20, x19, [sp, #32]
  456340:	ldr	x21, [sp, #16]
  456344:	ldp	x29, x30, [sp], #48
  456348:	ret
  45634c:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  456350:	add	x1, x1, #0x935
  456354:	mov	w2, #0x1                   	// #1
  456358:	mov	x0, x19
  45635c:	mov	sp, x29
  456360:	ldp	x20, x19, [sp, #32]
  456364:	ldr	x21, [sp, #16]
  456368:	ldp	x29, x30, [sp], #48
  45636c:	b	45606c <feof@plt+0x527cc>
  456370:	stp	x29, x30, [sp, #-48]!
  456374:	stp	x20, x19, [sp, #32]
  456378:	ldr	x8, [x0, #32]
  45637c:	mov	x19, x0
  456380:	mov	x20, x1
  456384:	str	x21, [sp, #16]
  456388:	mov	x29, sp
  45638c:	cbz	x8, 456414 <feof@plt+0x52b74>
  456390:	ldr	w9, [x19, #48]
  456394:	cbz	w9, 456414 <feof@plt+0x52b74>
  456398:	mov	x21, xzr
  45639c:	ldr	x9, [x19, #40]
  4563a0:	lsl	x10, x21, #3
  4563a4:	ldr	x0, [x8, x10]
  4563a8:	mov	x1, x20
  4563ac:	ldr	x2, [x9, x10]
  4563b0:	bl	479ca8 <feof@plt+0x76408>
  4563b4:	cbnz	w0, 4563f4 <feof@plt+0x52b54>
  4563b8:	ldr	x8, [x19, #40]
  4563bc:	ldr	x8, [x8, x21, lsl #3]
  4563c0:	add	x9, x20, x8
  4563c4:	ldrb	w10, [x9]
  4563c8:	cmp	w10, #0x2f
  4563cc:	b.ne	4563f4 <feof@plt+0x52b54>  // b.any
  4563d0:	ldrb	w10, [x9, #1]
  4563d4:	cmp	w10, #0x2e
  4563d8:	b.ne	45640c <feof@plt+0x52b6c>  // b.any
  4563dc:	ldrb	w10, [x9, #2]
  4563e0:	cmp	w10, #0x2e
  4563e4:	b.ne	45640c <feof@plt+0x52b6c>  // b.any
  4563e8:	ldrb	w9, [x9, #3]
  4563ec:	cmp	w9, #0x2f
  4563f0:	b.ne	45640c <feof@plt+0x52b6c>  // b.any
  4563f4:	ldr	w8, [x19, #48]
  4563f8:	add	x21, x21, #0x1
  4563fc:	cmp	x21, x8
  456400:	b.cs	456414 <feof@plt+0x52b74>  // b.hs, b.nlast
  456404:	ldr	x8, [x19, #32]
  456408:	b	45639c <feof@plt+0x52afc>
  45640c:	add	x8, x20, x8
  456410:	add	x20, x8, #0x1
  456414:	ldrb	w8, [x20]
  456418:	cmp	w8, #0x2e
  45641c:	b.ne	456440 <feof@plt+0x52ba0>  // b.any
  456420:	ldrb	w8, [x20, #1]
  456424:	cmp	w8, #0x2f
  456428:	b.ne	456440 <feof@plt+0x52ba0>  // b.any
  45642c:	add	x20, x20, #0x1
  456430:	ldrb	w8, [x20, #1]!
  456434:	cmp	w8, #0x2f
  456438:	b.eq	456430 <feof@plt+0x52b90>  // b.none
  45643c:	b	456418 <feof@plt+0x52b78>
  456440:	mov	x0, x20
  456444:	bl	4561a0 <feof@plt+0x52900>
  456448:	ldp	w8, w9, [x19, #24]
  45644c:	mov	x20, x0
  456450:	cmp	w8, w9
  456454:	b.ne	45647c <feof@plt+0x52bdc>  // b.any
  456458:	ldr	x0, [x19, #16]
  45645c:	lsl	w8, w8, #1
  456460:	add	w8, w8, #0x8
  456464:	lsl	x1, x8, #3
  456468:	str	w8, [x19, #28]
  45646c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  456470:	ldr	w8, [x19, #24]
  456474:	str	x0, [x19, #16]
  456478:	b	456480 <feof@plt+0x52be0>
  45647c:	ldr	x0, [x19, #16]
  456480:	add	w9, w8, #0x1
  456484:	str	w9, [x19, #24]
  456488:	str	x20, [x0, w8, uxtw #3]
  45648c:	ldp	x20, x19, [sp, #32]
  456490:	ldr	x21, [sp, #16]
  456494:	ldp	x29, x30, [sp], #48
  456498:	ret
  45649c:	stp	x29, x30, [sp, #-64]!
  4564a0:	stp	x24, x23, [sp, #16]
  4564a4:	stp	x22, x21, [sp, #32]
  4564a8:	stp	x20, x19, [sp, #48]
  4564ac:	ldrb	w8, [x1]
  4564b0:	mov	x29, sp
  4564b4:	cbz	w8, 456584 <feof@plt+0x52ce4>
  4564b8:	mov	x20, x1
  4564bc:	mov	x19, x0
  4564c0:	b	4564ec <feof@plt+0x52c4c>
  4564c4:	ldr	x9, [x19, #32]
  4564c8:	mov	w10, w8
  4564cc:	lsl	x10, x10, #3
  4564d0:	add	w8, w8, #0x1
  4564d4:	str	x22, [x9, x10]
  4564d8:	ldr	x9, [x19, #40]
  4564dc:	str	x21, [x9, x10]
  4564e0:	str	w8, [x19, #48]
  4564e4:	ldrb	w8, [x20]
  4564e8:	cbz	w8, 456584 <feof@plt+0x52ce4>
  4564ec:	add	x23, x20, #0x1
  4564f0:	ands	w8, w8, #0xff
  4564f4:	b.eq	45650c <feof@plt+0x52c6c>  // b.none
  4564f8:	cmp	w8, #0x3a
  4564fc:	b.eq	45650c <feof@plt+0x52c6c>  // b.none
  456500:	ldrb	w8, [x23], #1
  456504:	ands	w8, w8, #0xff
  456508:	b.ne	4564f8 <feof@plt+0x52c58>  // b.any
  45650c:	sub	x24, x23, #0x1
  456510:	sub	x21, x24, x20
  456514:	add	x0, x21, #0x1
  456518:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  45651c:	mov	x1, x20
  456520:	mov	x2, x21
  456524:	mov	x22, x0
  456528:	bl	402fc0 <memcpy@plt>
  45652c:	strb	wzr, [x22, x21]
  456530:	ldurb	w9, [x23, #-1]
  456534:	ldp	w8, w10, [x19, #48]
  456538:	cmp	w9, #0x3a
  45653c:	csel	x20, x23, x24, eq  // eq = none
  456540:	cmp	w8, w10
  456544:	b.ne	4564c4 <feof@plt+0x52c24>  // b.any
  456548:	ldr	x0, [x19, #32]
  45654c:	lsl	w8, w8, #1
  456550:	add	w8, w8, #0x8
  456554:	lsl	x1, x8, #3
  456558:	str	w8, [x19, #52]
  45655c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  456560:	ldr	w9, [x19, #52]
  456564:	ldr	x8, [x19, #40]
  456568:	str	x0, [x19, #32]
  45656c:	lsl	x1, x9, #3
  456570:	mov	x0, x8
  456574:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  456578:	ldr	w8, [x19, #48]
  45657c:	str	x0, [x19, #40]
  456580:	b	4564c4 <feof@plt+0x52c24>
  456584:	ldp	x20, x19, [sp, #48]
  456588:	ldp	x22, x21, [sp, #32]
  45658c:	ldp	x24, x23, [sp, #16]
  456590:	ldp	x29, x30, [sp], #64
  456594:	ret
  456598:	stp	x29, x30, [sp, #-80]!
  45659c:	stp	x26, x25, [sp, #16]
  4565a0:	stp	x24, x23, [sp, #32]
  4565a4:	stp	x22, x21, [sp, #48]
  4565a8:	stp	x20, x19, [sp, #64]
  4565ac:	ldr	w8, [x0, #8]
  4565b0:	sub	w9, w2, #0x1
  4565b4:	cmp	w9, #0x21
  4565b8:	mov	w9, #0x22                  	// #34
  4565bc:	mov	x19, x1
  4565c0:	mov	x20, x0
  4565c4:	csel	w24, w9, w2, cc  // cc = lo, ul, last
  4565c8:	mov	x29, sp
  4565cc:	cbz	w8, 456694 <feof@plt+0x52df4>
  4565d0:	ldr	x8, [x20]
  4565d4:	ldr	x0, [x8]
  4565d8:	bl	4030b0 <strlen@plt>
  4565dc:	ldr	x8, [x20]
  4565e0:	mov	x21, x0
  4565e4:	mov	x1, x19
  4565e8:	ldr	x8, [x8]
  4565ec:	mov	x0, x8
  4565f0:	bl	403200 <fputs_unlocked@plt>
  4565f4:	ldr	w8, [x20, #8]
  4565f8:	cmp	w8, #0x2
  4565fc:	b.cc	456698 <feof@plt+0x52df8>  // b.lo, b.ul, b.last
  456600:	adrp	x22, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  456604:	mov	w25, #0x1                   	// #1
  456608:	add	x22, x22, #0x9cd
  45660c:	mov	w26, #0x20                  	// #32
  456610:	b	456644 <feof@plt+0x52da4>
  456614:	mov	x0, x22
  456618:	mov	x1, x19
  45661c:	bl	403200 <fputs_unlocked@plt>
  456620:	ldr	x8, [x20]
  456624:	mov	x1, x19
  456628:	add	w21, w23, #0x1
  45662c:	ldr	x0, [x8, x25, lsl #3]
  456630:	bl	403200 <fputs_unlocked@plt>
  456634:	ldr	w8, [x20, #8]
  456638:	add	x25, x25, #0x1
  45663c:	cmp	x25, x8
  456640:	b.cs	456698 <feof@plt+0x52df8>  // b.hs, b.nlast
  456644:	ldr	x8, [x20]
  456648:	ldr	x0, [x8, x25, lsl #3]
  45664c:	bl	4030b0 <strlen@plt>
  456650:	mov	x23, x0
  456654:	add	w21, w21, w23
  456658:	cbz	w24, 456664 <feof@plt+0x52dc4>
  45665c:	cmp	w21, w24
  456660:	b.hi	456614 <feof@plt+0x52d74>  // b.pmore
  456664:	ldp	x8, x9, [x19, #40]
  456668:	cmp	x8, x9
  45666c:	b.cs	456684 <feof@plt+0x52de4>  // b.hs, b.nlast
  456670:	add	x9, x8, #0x1
  456674:	str	x9, [x19, #40]
  456678:	strb	w26, [x8]
  45667c:	mov	w23, w21
  456680:	b	456620 <feof@plt+0x52d80>
  456684:	mov	w1, #0x20                  	// #32
  456688:	mov	x0, x19
  45668c:	bl	403140 <__overflow@plt>
  456690:	b	45667c <feof@plt+0x52ddc>
  456694:	mov	w21, wzr
  456698:	ldp	x8, x9, [x19, #40]
  45669c:	cmp	x8, x9
  4566a0:	b.cs	456754 <feof@plt+0x52eb4>  // b.hs, b.nlast
  4566a4:	add	x9, x8, #0x1
  4566a8:	mov	w10, #0x3a                  	// #58
  4566ac:	str	x9, [x19, #40]
  4566b0:	strb	w10, [x8]
  4566b4:	ldr	w8, [x20, #24]
  4566b8:	cbz	w8, 456768 <feof@plt+0x52ec8>
  4566bc:	adrp	x22, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4566c0:	mov	x23, xzr
  4566c4:	add	x22, x22, #0x9cd
  4566c8:	mov	w25, #0x20                  	// #32
  4566cc:	b	4566fc <feof@plt+0x52e5c>
  4566d0:	mov	x0, x22
  4566d4:	mov	x1, x19
  4566d8:	bl	403200 <fputs_unlocked@plt>
  4566dc:	ldr	x8, [x20, #16]
  4566e0:	mov	x1, x19
  4566e4:	ldr	x0, [x8, x23, lsl #3]
  4566e8:	bl	403200 <fputs_unlocked@plt>
  4566ec:	ldr	w8, [x20, #24]
  4566f0:	add	x23, x23, #0x1
  4566f4:	cmp	x23, x8
  4566f8:	b.cs	456768 <feof@plt+0x52ec8>  // b.hs, b.nlast
  4566fc:	ldr	x8, [x20, #16]
  456700:	mov	w26, w21
  456704:	ldr	x0, [x8, x23, lsl #3]
  456708:	bl	4030b0 <strlen@plt>
  45670c:	mov	x21, x0
  456710:	add	w8, w26, w21
  456714:	add	w26, w8, #0x1
  456718:	cbz	w24, 456724 <feof@plt+0x52e84>
  45671c:	cmp	w26, w24
  456720:	b.hi	4566d0 <feof@plt+0x52e30>  // b.pmore
  456724:	ldp	x8, x9, [x19, #40]
  456728:	cmp	x8, x9
  45672c:	b.cs	456744 <feof@plt+0x52ea4>  // b.hs, b.nlast
  456730:	add	x9, x8, #0x1
  456734:	str	x9, [x19, #40]
  456738:	strb	w25, [x8]
  45673c:	mov	w21, w26
  456740:	b	4566dc <feof@plt+0x52e3c>
  456744:	mov	w1, #0x20                  	// #32
  456748:	mov	x0, x19
  45674c:	bl	403140 <__overflow@plt>
  456750:	b	45673c <feof@plt+0x52e9c>
  456754:	mov	w1, #0x3a                  	// #58
  456758:	mov	x0, x19
  45675c:	bl	403140 <__overflow@plt>
  456760:	ldr	w8, [x20, #24]
  456764:	cbnz	w8, 4566bc <feof@plt+0x52e1c>
  456768:	ldp	x8, x9, [x19, #40]
  45676c:	cmp	x8, x9
  456770:	b.cs	45679c <feof@plt+0x52efc>  // b.hs, b.nlast
  456774:	add	x9, x8, #0x1
  456778:	mov	w10, #0xa                   	// #10
  45677c:	str	x9, [x19, #40]
  456780:	strb	w10, [x8]
  456784:	ldp	x20, x19, [sp, #64]
  456788:	ldp	x22, x21, [sp, #48]
  45678c:	ldp	x24, x23, [sp, #32]
  456790:	ldp	x26, x25, [sp, #16]
  456794:	ldp	x29, x30, [sp], #80
  456798:	ret
  45679c:	mov	x0, x19
  4567a0:	ldp	x20, x19, [sp, #64]
  4567a4:	ldp	x22, x21, [sp, #48]
  4567a8:	ldp	x24, x23, [sp, #32]
  4567ac:	ldp	x26, x25, [sp, #16]
  4567b0:	mov	w1, #0xa                   	// #10
  4567b4:	ldp	x29, x30, [sp], #80
  4567b8:	b	403140 <__overflow@plt>
  4567bc:	stp	x29, x30, [sp, #-64]!
  4567c0:	stp	x22, x21, [sp, #32]
  4567c4:	stp	x20, x19, [sp, #48]
  4567c8:	ldr	w8, [x0, #24]
  4567cc:	str	x23, [sp, #16]
  4567d0:	mov	x29, sp
  4567d4:	cmp	w8, #0x2
  4567d8:	b.cc	45688c <feof@plt+0x52fec>  // b.lo, b.ul, b.last
  4567dc:	mov	x19, x0
  4567e0:	mov	x20, x1
  4567e4:	mov	w21, #0x1                   	// #1
  4567e8:	mov	w22, #0xa                   	// #10
  4567ec:	mov	w23, #0x3a                  	// #58
  4567f0:	ldp	x8, x9, [x20, #40]
  4567f4:	cmp	x8, x9
  4567f8:	b.cs	45685c <feof@plt+0x52fbc>  // b.hs, b.nlast
  4567fc:	add	x9, x8, #0x1
  456800:	str	x9, [x20, #40]
  456804:	strb	w22, [x8]
  456808:	ldr	x8, [x19, #16]
  45680c:	mov	x1, x20
  456810:	ldr	x0, [x8, x21, lsl #3]
  456814:	bl	403200 <fputs_unlocked@plt>
  456818:	ldp	x8, x9, [x20, #40]
  45681c:	cmp	x8, x9
  456820:	b.cs	45686c <feof@plt+0x52fcc>  // b.hs, b.nlast
  456824:	add	x9, x8, #0x1
  456828:	str	x9, [x20, #40]
  45682c:	strb	w23, [x8]
  456830:	ldp	x8, x9, [x20, #40]
  456834:	cmp	x8, x9
  456838:	b.cs	45687c <feof@plt+0x52fdc>  // b.hs, b.nlast
  45683c:	add	x9, x8, #0x1
  456840:	str	x9, [x20, #40]
  456844:	strb	w22, [x8]
  456848:	ldr	w8, [x19, #24]
  45684c:	add	x21, x21, #0x1
  456850:	cmp	x21, x8
  456854:	b.cc	4567f0 <feof@plt+0x52f50>  // b.lo, b.ul, b.last
  456858:	b	45688c <feof@plt+0x52fec>
  45685c:	mov	w1, #0xa                   	// #10
  456860:	mov	x0, x20
  456864:	bl	403140 <__overflow@plt>
  456868:	b	456808 <feof@plt+0x52f68>
  45686c:	mov	w1, #0x3a                  	// #58
  456870:	mov	x0, x20
  456874:	bl	403140 <__overflow@plt>
  456878:	b	456830 <feof@plt+0x52f90>
  45687c:	mov	w1, #0xa                   	// #10
  456880:	mov	x0, x20
  456884:	bl	403140 <__overflow@plt>
  456888:	b	456848 <feof@plt+0x52fa8>
  45688c:	ldp	x20, x19, [sp, #48]
  456890:	ldp	x22, x21, [sp, #32]
  456894:	ldr	x23, [sp, #16]
  456898:	ldp	x29, x30, [sp], #64
  45689c:	ret
  4568a0:	sub	sp, sp, #0x40
  4568a4:	stp	x22, x21, [sp, #32]
  4568a8:	stp	x20, x19, [sp, #48]
  4568ac:	mov	x19, x1
  4568b0:	add	x21, x0, #0x18
  4568b4:	mov	x20, x0
  4568b8:	mov	w1, #0x4                   	// #4
  4568bc:	mov	w2, #0x1                   	// #1
  4568c0:	mov	x0, x21
  4568c4:	mov	x3, x19
  4568c8:	stp	x29, x30, [sp, #16]
  4568cc:	add	x29, sp, #0x10
  4568d0:	bl	403740 <fwrite_unlocked@plt>
  4568d4:	cmp	x0, #0x1
  4568d8:	b.ne	45694c <feof@plt+0x530ac>  // b.any
  4568dc:	ldr	w8, [x21]
  4568e0:	cbz	w8, 456944 <feof@plt+0x530a4>
  4568e4:	mov	x22, xzr
  4568e8:	ldr	x8, [x20, #16]
  4568ec:	ldr	x0, [x8, x22, lsl #3]
  4568f0:	bl	4030b0 <strlen@plt>
  4568f4:	str	x0, [sp, #8]
  4568f8:	add	x0, sp, #0x8
  4568fc:	mov	w1, #0x8                   	// #8
  456900:	mov	w2, #0x1                   	// #1
  456904:	mov	x3, x19
  456908:	bl	403740 <fwrite_unlocked@plt>
  45690c:	cmp	x0, #0x1
  456910:	b.ne	45694c <feof@plt+0x530ac>  // b.any
  456914:	ldr	x8, [x20, #16]
  456918:	ldr	x1, [sp, #8]
  45691c:	mov	w2, #0x1                   	// #1
  456920:	mov	x3, x19
  456924:	ldr	x0, [x8, x22, lsl #3]
  456928:	bl	403740 <fwrite_unlocked@plt>
  45692c:	cmp	x0, #0x1
  456930:	b.ne	45694c <feof@plt+0x530ac>  // b.any
  456934:	ldr	w8, [x21]
  456938:	add	x22, x22, #0x1
  45693c:	cmp	x22, x8
  456940:	b.cc	4568e8 <feof@plt+0x53048>  // b.lo, b.ul, b.last
  456944:	mov	w0, wzr
  456948:	b	456950 <feof@plt+0x530b0>
  45694c:	mov	w0, #0xffffffff            	// #-1
  456950:	ldp	x20, x19, [sp, #48]
  456954:	ldp	x22, x21, [sp, #32]
  456958:	ldp	x29, x30, [sp, #16]
  45695c:	add	sp, sp, #0x40
  456960:	ret
  456964:	sub	sp, sp, #0x60
  456968:	stp	x29, x30, [sp, #16]
  45696c:	stp	x20, x19, [sp, #80]
  456970:	add	x29, sp, #0x10
  456974:	mov	x20, x1
  456978:	stp	x22, x21, [sp, #64]
  45697c:	mov	x19, x2
  456980:	mov	x21, x0
  456984:	sub	x0, x29, #0x4
  456988:	mov	w1, #0x1                   	// #1
  45698c:	mov	w2, #0x4                   	// #4
  456990:	mov	x3, x20
  456994:	stp	x26, x25, [sp, #32]
  456998:	stp	x24, x23, [sp, #48]
  45699c:	bl	4031e0 <fread_unlocked@plt>
  4569a0:	cmp	x0, #0x4
  4569a4:	b.ne	456a58 <feof@plt+0x531b8>  // b.any
  4569a8:	mov	w0, #0x200                 	// #512
  4569ac:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4569b0:	ldur	w25, [x29, #-4]
  4569b4:	mov	x22, x0
  4569b8:	cbz	w25, 456a60 <feof@plt+0x531c0>
  4569bc:	mov	w26, wzr
  4569c0:	mov	w23, #0x200                 	// #512
  4569c4:	b	4569d4 <feof@plt+0x53134>
  4569c8:	add	w26, w26, #0x1
  4569cc:	cmp	w26, w25
  4569d0:	b.cs	456a60 <feof@plt+0x531c0>  // b.hs, b.nlast
  4569d4:	mov	x0, sp
  4569d8:	mov	w1, #0x1                   	// #1
  4569dc:	mov	w2, #0x8                   	// #8
  4569e0:	mov	x3, x20
  4569e4:	bl	4031e0 <fread_unlocked@plt>
  4569e8:	cmp	x0, #0x8
  4569ec:	b.ne	456a68 <feof@plt+0x531c8>  // b.any
  4569f0:	ldr	x24, [sp]
  4569f4:	add	x8, x24, #0x1
  4569f8:	cmp	x23, x8
  4569fc:	b.cs	456a14 <feof@plt+0x53174>  // b.hs, b.nlast
  456a00:	add	x23, x24, #0x80
  456a04:	mov	x0, x22
  456a08:	mov	x1, x23
  456a0c:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  456a10:	mov	x22, x0
  456a14:	mov	w1, #0x1                   	// #1
  456a18:	mov	x0, x22
  456a1c:	mov	x2, x24
  456a20:	mov	x3, x20
  456a24:	bl	4031e0 <fread_unlocked@plt>
  456a28:	cmp	x0, x24
  456a2c:	b.ne	456a68 <feof@plt+0x531c8>  // b.any
  456a30:	strb	wzr, [x22, x24]
  456a34:	cbz	x19, 4569c8 <feof@plt+0x53128>
  456a38:	mov	x0, x22
  456a3c:	mov	x1, x19
  456a40:	bl	479ca4 <feof@plt+0x76404>
  456a44:	cbz	w0, 4569c8 <feof@plt+0x53128>
  456a48:	mov	x0, x21
  456a4c:	mov	x1, x22
  456a50:	bl	456370 <feof@plt+0x52ad0>
  456a54:	b	4569c8 <feof@plt+0x53128>
  456a58:	mov	w19, #0xffffffff            	// #-1
  456a5c:	b	456a74 <feof@plt+0x531d4>
  456a60:	mov	w19, wzr
  456a64:	b	456a6c <feof@plt+0x531cc>
  456a68:	mov	w19, #0xffffffff            	// #-1
  456a6c:	mov	x0, x22
  456a70:	bl	4031d0 <free@plt>
  456a74:	mov	w0, w19
  456a78:	ldp	x20, x19, [sp, #80]
  456a7c:	ldp	x22, x21, [sp, #64]
  456a80:	ldp	x24, x23, [sp, #48]
  456a84:	ldp	x26, x25, [sp, #32]
  456a88:	ldp	x29, x30, [sp, #16]
  456a8c:	add	sp, sp, #0x60
  456a90:	ret
  456a94:	stp	x29, x30, [sp, #-48]!
  456a98:	str	x21, [sp, #16]
  456a9c:	mov	w21, #0x1                   	// #1
  456aa0:	stp	x20, x19, [sp, #32]
  456aa4:	lsl	w19, w21, w0
  456aa8:	mov	w0, #0x1                   	// #1
  456aac:	mov	w1, #0x90                  	// #144
  456ab0:	mov	x29, sp
  456ab4:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  456ab8:	adrp	x3, 47d000 <_obstack_memory_used@@Base+0x12fc>
  456abc:	adrp	x4, 403000 <readlink@plt>
  456ac0:	add	x3, x3, #0x98
  456ac4:	add	x4, x4, #0x1d0
  456ac8:	mov	x1, xzr
  456acc:	mov	x2, xzr
  456ad0:	mov	x20, x0
  456ad4:	bl	47b98c <_obstack_begin@@Base>
  456ad8:	mov	w1, #0x8                   	// #8
  456adc:	mov	x0, x19
  456ae0:	str	xzr, [x20, #48]
  456ae4:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  456ae8:	str	x0, [x20, #88]
  456aec:	strb	w21, [x20, #136]
  456af0:	str	w19, [x20, #112]
  456af4:	mov	x0, x20
  456af8:	ldp	x20, x19, [sp, #32]
  456afc:	ldr	x21, [sp, #16]
  456b00:	ldp	x29, x30, [sp], #48
  456b04:	ret
  456b08:	stp	x29, x30, [sp, #-32]!
  456b0c:	mov	x1, xzr
  456b10:	str	x19, [sp, #16]
  456b14:	mov	x29, sp
  456b18:	mov	x19, x0
  456b1c:	bl	47bc70 <_obstack_free@@Base>
  456b20:	ldrb	w8, [x19, #136]
  456b24:	cbz	w8, 456b30 <feof@plt+0x53290>
  456b28:	ldr	x0, [x19, #88]
  456b2c:	bl	4031d0 <free@plt>
  456b30:	mov	x0, x19
  456b34:	ldr	x19, [sp, #16]
  456b38:	ldp	x29, x30, [sp], #32
  456b3c:	b	4031d0 <free@plt>
  456b40:	mov	w4, w3
  456b44:	mov	w8, wzr
  456b48:	cbz	x2, 456b6c <feof@plt+0x532cc>
  456b4c:	mov	w9, #0x43                  	// #67
  456b50:	mov	x10, x2
  456b54:	mov	x11, x1
  456b58:	ldrb	w12, [x11], #1
  456b5c:	sub	x10, x10, #0x1
  456b60:	madd	w8, w8, w9, w12
  456b64:	sub	w8, w8, #0x71
  456b68:	cbnz	x10, 456b58 <feof@plt+0x532b8>
  456b6c:	add	w3, w8, w2
  456b70:	b	456b74 <feof@plt+0x532d4>
  456b74:	sub	sp, sp, #0x70
  456b78:	stp	x29, x30, [sp, #16]
  456b7c:	stp	x28, x27, [sp, #32]
  456b80:	stp	x26, x25, [sp, #48]
  456b84:	stp	x24, x23, [sp, #64]
  456b88:	stp	x22, x21, [sp, #80]
  456b8c:	stp	x20, x19, [sp, #96]
  456b90:	ldr	w9, [x0, #112]
  456b94:	ldr	w8, [x0, #128]
  456b98:	ldr	x27, [x0, #88]
  456b9c:	add	x29, sp, #0x10
  456ba0:	sub	w28, w9, #0x1
  456ba4:	add	w8, w8, #0x1
  456ba8:	stp	w4, w9, [sp, #4]
  456bac:	and	w26, w28, w3
  456bb0:	str	w8, [x0, #128]
  456bb4:	ldr	x20, [x27, w26, uxtw #3]
  456bb8:	mov	w23, w3
  456bbc:	mov	x21, x2
  456bc0:	mov	x22, x1
  456bc4:	mov	x19, x0
  456bc8:	cmn	x20, #0x1
  456bcc:	stur	w26, [x29, #-4]
  456bd0:	b.eq	456c28 <feof@plt+0x53388>  // b.none
  456bd4:	cbnz	x20, 456be8 <feof@plt+0x53348>
  456bd8:	ldp	w8, w10, [sp, #4]
  456bdc:	cbnz	w8, 456cac <feof@plt+0x5340c>
  456be0:	mov	x20, xzr
  456be4:	b	456e40 <feof@plt+0x535a0>
  456be8:	ldr	w8, [x20, #12]
  456bec:	cmp	w8, w23
  456bf0:	b.ne	456c20 <feof@plt+0x53380>  // b.any
  456bf4:	ldr	w8, [x20, #8]
  456bf8:	cmp	w8, w21
  456bfc:	b.ne	456c20 <feof@plt+0x53380>  // b.any
  456c00:	ldr	x0, [x20]
  456c04:	mov	x1, x22
  456c08:	mov	x2, x21
  456c0c:	bl	403840 <bcmp@plt>
  456c10:	ldr	w8, [sp, #8]
  456c14:	stur	w8, [x29, #-4]
  456c18:	cbnz	w0, 456c28 <feof@plt+0x53388>
  456c1c:	b	456e40 <feof@plt+0x535a0>
  456c20:	ldr	w8, [sp, #8]
  456c24:	stur	w8, [x29, #-4]
  456c28:	ldr	w24, [x19, #132]
  456c2c:	add	w8, w23, w23, lsl #4
  456c30:	and	w8, w28, w8
  456c34:	orr	w25, w8, #0x1
  456c38:	add	w24, w24, #0x1
  456c3c:	add	w8, w26, w25
  456c40:	str	w24, [x19, #132]
  456c44:	and	w26, w8, w28
  456c48:	ldr	x20, [x27, w26, uxtw #3]
  456c4c:	cbz	x20, 456ca0 <feof@plt+0x53400>
  456c50:	cmn	x20, #0x1
  456c54:	b.eq	456c88 <feof@plt+0x533e8>  // b.none
  456c58:	ldr	w8, [x20, #12]
  456c5c:	cmp	w8, w23
  456c60:	b.ne	456c38 <feof@plt+0x53398>  // b.any
  456c64:	ldr	w8, [x20, #8]
  456c68:	cmp	w8, w21
  456c6c:	b.ne	456c38 <feof@plt+0x53398>  // b.any
  456c70:	ldr	x0, [x20]
  456c74:	mov	x1, x22
  456c78:	mov	x2, x21
  456c7c:	bl	403840 <bcmp@plt>
  456c80:	cbnz	w0, 456c38 <feof@plt+0x53398>
  456c84:	b	456e40 <feof@plt+0x535a0>
  456c88:	ldr	w8, [sp, #8]
  456c8c:	ldur	w9, [x29, #-4]
  456c90:	cmp	w9, w8
  456c94:	csel	w9, w9, w26, eq  // eq = none
  456c98:	stur	w9, [x29, #-4]
  456c9c:	b	456c38 <feof@plt+0x53398>
  456ca0:	ldr	w8, [sp, #4]
  456ca4:	ldur	w10, [x29, #-4]
  456ca8:	cbz	w8, 456be0 <feof@plt+0x53340>
  456cac:	ldr	w9, [sp, #8]
  456cb0:	ldr	x8, [x19, #96]
  456cb4:	mov	x0, x19
  456cb8:	cmp	w10, w9
  456cbc:	csel	w24, w26, w10, eq  // eq = none
  456cc0:	blr	x8
  456cc4:	ldr	x8, [x19, #88]
  456cc8:	mov	x20, x0
  456ccc:	str	x0, [x8, w24, uxtw #3]
  456cd0:	stp	w21, w23, [x0, #8]
  456cd4:	ldr	x8, [x19, #104]
  456cd8:	cbz	x8, 456cfc <feof@plt+0x5345c>
  456cdc:	add	x0, x21, #0x1
  456ce0:	blr	x8
  456ce4:	mov	x1, x22
  456ce8:	mov	x2, x21
  456cec:	mov	x23, x0
  456cf0:	bl	402fc0 <memcpy@plt>
  456cf4:	strb	wzr, [x23, x21]
  456cf8:	b	456d88 <feof@plt+0x534e8>
  456cfc:	ldp	x0, x8, [x19, #24]
  456d00:	add	x1, x21, #0x1
  456d04:	sub	x8, x8, x0
  456d08:	cmp	x8, x1
  456d0c:	b.cs	456d1c <feof@plt+0x5347c>  // b.hs, b.nlast
  456d10:	mov	x0, x19
  456d14:	bl	47bae8 <_obstack_newchunk@@Base>
  456d18:	ldr	x0, [x19, #24]
  456d1c:	mov	x1, x22
  456d20:	mov	x2, x21
  456d24:	bl	402fc0 <memcpy@plt>
  456d28:	ldr	x8, [x19, #24]
  456d2c:	add	x8, x8, x21
  456d30:	add	x9, x8, #0x1
  456d34:	str	x9, [x19, #24]
  456d38:	strb	wzr, [x8]
  456d3c:	ldp	x23, x8, [x19, #16]
  456d40:	cmp	x8, x23
  456d44:	b.ne	456d54 <feof@plt+0x534b4>  // b.any
  456d48:	ldrb	w9, [x19, #80]
  456d4c:	orr	w9, w9, #0x2
  456d50:	strb	w9, [x19, #80]
  456d54:	ldr	x10, [x19, #48]
  456d58:	ldr	x11, [x19, #8]
  456d5c:	ldr	x9, [x19, #32]
  456d60:	add	x8, x10, x8
  456d64:	bic	x8, x8, x10
  456d68:	sub	x10, x8, x11
  456d6c:	sub	x11, x9, x11
  456d70:	cmp	x10, x11
  456d74:	str	x8, [x19, #24]
  456d78:	b.ls	456d84 <feof@plt+0x534e4>  // b.plast
  456d7c:	mov	x8, x9
  456d80:	str	x9, [x19, #24]
  456d84:	str	x8, [x19, #16]
  456d88:	str	x23, [x20]
  456d8c:	ldp	w8, w9, [x19, #112]
  456d90:	add	w9, w9, #0x1
  456d94:	add	w10, w8, w8, lsl #1
  456d98:	cmp	w10, w9, lsl #2
  456d9c:	str	w9, [x19, #116]
  456da0:	b.hi	456e40 <feof@plt+0x535a0>  // b.pmore
  456da4:	lsl	w21, w8, #1
  456da8:	mov	w1, #0x8                   	// #8
  456dac:	mov	x0, x21
  456db0:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  456db4:	mov	x22, x0
  456db8:	ldr	x0, [x19, #88]
  456dbc:	ldr	w9, [x19, #112]
  456dc0:	sub	w8, w21, #0x1
  456dc4:	mov	x10, x0
  456dc8:	add	x9, x0, x9, lsl #3
  456dcc:	b	456de0 <feof@plt+0x53540>
  456dd0:	str	x11, [x22, x12, lsl #3]
  456dd4:	add	x10, x10, #0x8
  456dd8:	cmp	x10, x9
  456ddc:	b.cs	456e24 <feof@plt+0x53584>  // b.hs, b.nlast
  456de0:	ldr	x11, [x10]
  456de4:	add	x12, x11, #0x1
  456de8:	cmp	x12, #0x2
  456dec:	b.cc	456dd4 <feof@plt+0x53534>  // b.lo, b.ul, b.last
  456df0:	ldr	w13, [x11, #12]
  456df4:	and	w12, w13, w8
  456df8:	ldr	x14, [x22, w12, uxtw #3]
  456dfc:	cbz	x14, 456dd0 <feof@plt+0x53530>
  456e00:	add	w13, w13, w13, lsl #4
  456e04:	and	w13, w13, w8
  456e08:	orr	w13, w13, #0x1
  456e0c:	add	w12, w12, w13
  456e10:	and	w12, w12, w8
  456e14:	ldr	x14, [x22, w12, uxtw #3]
  456e18:	cbnz	x14, 456e0c <feof@plt+0x5356c>
  456e1c:	mov	w12, w12
  456e20:	b	456dd0 <feof@plt+0x53530>
  456e24:	ldrb	w8, [x19, #136]
  456e28:	cbz	w8, 456e30 <feof@plt+0x53590>
  456e2c:	bl	4031d0 <free@plt>
  456e30:	mov	w8, #0x1                   	// #1
  456e34:	str	x22, [x19, #88]
  456e38:	strb	w8, [x19, #136]
  456e3c:	str	w21, [x19, #112]
  456e40:	mov	x0, x20
  456e44:	ldp	x20, x19, [sp, #96]
  456e48:	ldp	x22, x21, [sp, #80]
  456e4c:	ldp	x24, x23, [sp, #64]
  456e50:	ldp	x26, x25, [sp, #48]
  456e54:	ldp	x28, x27, [sp, #32]
  456e58:	ldp	x29, x30, [sp, #16]
  456e5c:	add	sp, sp, #0x70
  456e60:	ret
  456e64:	stp	x29, x30, [sp, #-64]!
  456e68:	stp	x22, x21, [sp, #32]
  456e6c:	stp	x20, x19, [sp, #48]
  456e70:	ldr	x22, [x0, #88]
  456e74:	ldr	w8, [x0, #112]
  456e78:	str	x23, [sp, #16]
  456e7c:	mov	x19, x2
  456e80:	mov	x20, x1
  456e84:	mov	x21, x0
  456e88:	add	x23, x22, x8, lsl #3
  456e8c:	mov	x29, sp
  456e90:	b	456ea0 <feof@plt+0x53600>
  456e94:	add	x22, x22, #0x8
  456e98:	cmp	x22, x23
  456e9c:	b.cs	456ec0 <feof@plt+0x53620>  // b.hs, b.nlast
  456ea0:	ldr	x1, [x22]
  456ea4:	add	x8, x1, #0x1
  456ea8:	cmp	x8, #0x2
  456eac:	b.cc	456e94 <feof@plt+0x535f4>  // b.lo, b.ul, b.last
  456eb0:	ldr	x0, [x21, #120]
  456eb4:	mov	x2, x19
  456eb8:	blr	x20
  456ebc:	cbnz	w0, 456e94 <feof@plt+0x535f4>
  456ec0:	ldp	x20, x19, [sp, #48]
  456ec4:	ldp	x22, x21, [sp, #32]
  456ec8:	ldr	x23, [sp, #16]
  456ecc:	ldp	x29, x30, [sp], #64
  456ed0:	ret
  456ed4:	stp	x29, x30, [sp, #-64]!
  456ed8:	stp	x24, x23, [sp, #16]
  456edc:	stp	x22, x21, [sp, #32]
  456ee0:	stp	x20, x19, [sp, #48]
  456ee4:	ldr	x22, [x0, #88]
  456ee8:	ldr	w8, [x0, #112]
  456eec:	mov	x19, x2
  456ef0:	mov	x20, x1
  456ef4:	mov	x21, x0
  456ef8:	add	x23, x22, x8, lsl #3
  456efc:	mov	x24, #0xffffffffffffffff    	// #-1
  456f00:	mov	x29, sp
  456f04:	b	456f14 <feof@plt+0x53674>
  456f08:	add	x22, x22, #0x8
  456f0c:	cmp	x22, x23
  456f10:	b.cs	456f3c <feof@plt+0x5369c>  // b.hs, b.nlast
  456f14:	ldr	x1, [x22]
  456f18:	add	x8, x1, #0x1
  456f1c:	cmp	x8, #0x2
  456f20:	b.cc	456f08 <feof@plt+0x53668>  // b.lo, b.ul, b.last
  456f24:	ldr	x0, [x21, #120]
  456f28:	mov	x2, x19
  456f2c:	blr	x20
  456f30:	cbz	w0, 456f08 <feof@plt+0x53668>
  456f34:	str	x24, [x22]
  456f38:	b	456f08 <feof@plt+0x53668>
  456f3c:	ldp	x20, x19, [sp, #48]
  456f40:	ldp	x22, x21, [sp, #32]
  456f44:	ldp	x24, x23, [sp, #16]
  456f48:	ldp	x29, x30, [sp], #64
  456f4c:	ret
  456f50:	stp	x29, x30, [sp, #-64]!
  456f54:	stp	x22, x21, [sp, #32]
  456f58:	stp	x20, x19, [sp, #48]
  456f5c:	ldrb	w8, [x0, #136]
  456f60:	str	x23, [sp, #16]
  456f64:	mov	w19, w3
  456f68:	mov	w21, w2
  456f6c:	mov	x22, x1
  456f70:	mov	x20, x0
  456f74:	and	w23, w4, #0x1
  456f78:	mov	x29, sp
  456f7c:	cbz	w8, 456f88 <feof@plt+0x536e8>
  456f80:	ldr	x0, [x20, #88]
  456f84:	bl	4031d0 <free@plt>
  456f88:	str	x22, [x20, #88]
  456f8c:	stp	w21, w19, [x20, #112]
  456f90:	strb	w23, [x20, #136]
  456f94:	ldp	x20, x19, [sp, #48]
  456f98:	ldp	x22, x21, [sp, #32]
  456f9c:	ldr	x23, [sp, #16]
  456fa0:	ldp	x29, x30, [sp], #64
  456fa4:	ret
  456fa8:	stp	d11, d10, [sp, #-128]!
  456fac:	stp	d9, d8, [sp, #16]
  456fb0:	stp	x29, x30, [sp, #32]
  456fb4:	stp	x26, x25, [sp, #64]
  456fb8:	stp	x24, x23, [sp, #80]
  456fbc:	stp	x22, x21, [sp, #96]
  456fc0:	stp	x20, x19, [sp, #112]
  456fc4:	str	x27, [sp, #48]
  456fc8:	ldr	x8, [x0, #88]
  456fcc:	ldr	w27, [x0, #112]
  456fd0:	mov	x20, x0
  456fd4:	mov	x22, xzr
  456fd8:	mov	x19, xzr
  456fdc:	mov	x25, xzr
  456fe0:	mov	x23, xzr
  456fe4:	add	x9, x8, x27, lsl #3
  456fe8:	fmov	d8, xzr
  456fec:	mov	x29, sp
  456ff0:	ldr	x10, [x8]
  456ff4:	cbz	x10, 457028 <feof@plt+0x53788>
  456ff8:	cmn	x10, #0x1
  456ffc:	b.ne	457008 <feof@plt+0x53768>  // b.any
  457000:	add	x22, x22, #0x1
  457004:	b	457028 <feof@plt+0x53788>
  457008:	ldr	w10, [x10, #8]
  45700c:	add	x23, x23, #0x1
  457010:	ucvtf	d0, w10
  457014:	cmp	x19, x10
  457018:	fmul	d0, d0, d0
  45701c:	add	x25, x25, x10
  457020:	csel	x19, x10, x19, cc  // cc = lo, ul, last
  457024:	fadd	d8, d8, d0
  457028:	add	x8, x8, #0x8
  45702c:	cmp	x8, x9
  457030:	b.cc	456ff0 <feof@plt+0x53750>  // b.lo, b.ul, b.last
  457034:	ldr	w24, [x20, #116]
  457038:	adrp	x26, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  45703c:	ldr	x0, [x26, #1096]
  457040:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457044:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457048:	add	x1, x1, #0x9e0
  45704c:	add	x2, x2, #0x9f7
  457050:	mov	x3, x24
  457054:	lsl	x21, x27, #3
  457058:	bl	4030d0 <fprintf@plt>
  45705c:	ldr	x0, [x26, #1096]
  457060:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  457064:	ucvtf	d0, x23
  457068:	fmov	d1, x8
  45706c:	fmul	d0, d0, d1
  457070:	ucvtf	d9, w24
  457074:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457078:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45707c:	fdiv	d0, d0, d9
  457080:	add	x1, x1, #0xa00
  457084:	add	x2, x2, #0xa13
  457088:	mov	x3, x23
  45708c:	bl	4030d0 <fprintf@plt>
  457090:	ldr	x0, [x26, #1096]
  457094:	ldr	w3, [x20, #112]
  457098:	adrp	x23, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45709c:	add	x23, x23, #0x9ed
  4570a0:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4570a4:	add	x2, x2, #0xa20
  4570a8:	mov	x1, x23
  4570ac:	bl	4030d0 <fprintf@plt>
  4570b0:	ldr	x0, [x26, #1096]
  4570b4:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4570b8:	add	x2, x2, #0xa27
  4570bc:	mov	x1, x23
  4570c0:	mov	x3, x22
  4570c4:	bl	4030d0 <fprintf@plt>
  4570c8:	ldr	x8, [x20, #104]
  4570cc:	cbnz	x8, 457108 <feof@plt+0x53868>
  4570d0:	mov	x0, x20
  4570d4:	bl	47bd04 <_obstack_memory_used@@Base>
  4570d8:	mov	x8, x0
  4570dc:	ldr	x0, [x26, #1096]
  4570e0:	lsr	x9, x25, #11
  4570e4:	cmp	x9, #0x5
  4570e8:	sub	x8, x8, x25
  4570ec:	mov	x3, x25
  4570f0:	b.cc	457134 <feof@plt+0x53894>  // b.lo, b.ul, b.last
  4570f4:	lsr	x10, x25, #21
  4570f8:	cmp	x10, #0x4
  4570fc:	b.hi	457130 <feof@plt+0x53890>  // b.pmore
  457100:	lsr	x3, x25, #10
  457104:	b	457134 <feof@plt+0x53894>
  457108:	ldr	x0, [x26, #1096]
  45710c:	lsr	x8, x25, #11
  457110:	cmp	x8, #0x5
  457114:	mov	x3, x25
  457118:	b.cc	457178 <feof@plt+0x538d8>  // b.lo, b.ul, b.last
  45711c:	lsr	x9, x25, #21
  457120:	cmp	x9, #0x4
  457124:	b.hi	457174 <feof@plt+0x538d4>  // b.pmore
  457128:	lsr	x3, x25, #10
  45712c:	b	457178 <feof@plt+0x538d8>
  457130:	lsr	x3, x25, #20
  457134:	cmp	x25, #0xa00, lsl #12
  457138:	mov	w10, #0x4d                  	// #77
  45713c:	mov	w11, #0x6b                  	// #107
  457140:	mov	w12, #0x20                  	// #32
  457144:	lsr	x13, x8, #11
  457148:	csel	w14, w11, w10, cc  // cc = lo, ul, last
  45714c:	cmp	x9, #0x5
  457150:	csel	w4, w12, w14, cc  // cc = lo, ul, last
  457154:	cmp	x13, #0x5
  457158:	mov	x5, x8
  45715c:	b.cc	4571b0 <feof@plt+0x53910>  // b.lo, b.ul, b.last
  457160:	lsr	x9, x8, #21
  457164:	cmp	x9, #0x4
  457168:	b.hi	4571ac <feof@plt+0x5390c>  // b.pmore
  45716c:	lsr	x5, x8, #10
  457170:	b	4571b0 <feof@plt+0x53910>
  457174:	lsr	x3, x25, #20
  457178:	cmp	x25, #0xa00, lsl #12
  45717c:	mov	w9, #0x4d                  	// #77
  457180:	mov	w10, #0x6b                  	// #107
  457184:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  457188:	cmp	x8, #0x5
  45718c:	mov	w8, #0x20                  	// #32
  457190:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457194:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457198:	csel	w4, w8, w9, cc  // cc = lo, ul, last
  45719c:	add	x1, x1, #0xa30
  4571a0:	add	x2, x2, #0xa3c
  4571a4:	bl	4030d0 <fprintf@plt>
  4571a8:	b	4571d4 <feof@plt+0x53934>
  4571ac:	lsr	x5, x8, #20
  4571b0:	cmp	x8, #0xa00, lsl #12
  4571b4:	csel	w8, w11, w10, cc  // cc = lo, ul, last
  4571b8:	cmp	x13, #0x5
  4571bc:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4571c0:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4571c4:	csel	w6, w12, w8, cc  // cc = lo, ul, last
  4571c8:	add	x1, x1, #0xa47
  4571cc:	add	x2, x2, #0xa64
  4571d0:	bl	4030d0 <fprintf@plt>
  4571d4:	ldr	x0, [x26, #1096]
  4571d8:	cmp	w27, #0x500
  4571dc:	b.cc	4571f8 <feof@plt+0x53958>  // b.lo, b.ul, b.last
  4571e0:	ubfx	x8, x27, #18, #14
  4571e4:	cmp	w8, #0x4
  4571e8:	b.hi	4571f4 <feof@plt+0x53954>  // b.pmore
  4571ec:	lsr	x21, x27, #7
  4571f0:	b	4571f8 <feof@plt+0x53958>
  4571f4:	lsr	x21, x27, #17
  4571f8:	cmp	w27, #0x140, lsl #12
  4571fc:	mov	w8, #0x4d                  	// #77
  457200:	mov	w9, #0x6b                  	// #107
  457204:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  457208:	cmp	w27, #0x500
  45720c:	mov	w9, #0x20                  	// #32
  457210:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457214:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457218:	csel	w4, w9, w8, cc  // cc = lo, ul, last
  45721c:	add	x1, x1, #0xa30
  457220:	add	x2, x2, #0xa73
  457224:	mov	x3, x21
  457228:	bl	4030d0 <fprintf@plt>
  45722c:	ldp	s2, s1, [x20, #128]
  457230:	ldr	x0, [x26, #1096]
  457234:	ucvtf	d0, x25
  457238:	adrp	x21, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45723c:	fdiv	d10, d8, d9
  457240:	fdiv	d8, d0, d9
  457244:	ucvtf	d0, d1
  457248:	ucvtf	d1, d2
  45724c:	add	x21, x21, #0xa7f
  457250:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457254:	fdiv	d0, d0, d1
  457258:	add	x2, x2, #0xa8a
  45725c:	mov	x1, x21
  457260:	fmul	d11, d8, d8
  457264:	bl	4030d0 <fprintf@plt>
  457268:	ldr	s0, [x20, #128]
  45726c:	ldr	x0, [x26, #1096]
  457270:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457274:	add	x2, x2, #0xa97
  457278:	ucvtf	d0, d0
  45727c:	fdiv	d0, d9, d0
  457280:	mov	x1, x21
  457284:	bl	4030d0 <fprintf@plt>
  457288:	fsub	d0, d10, d11
  45728c:	fcmp	d0, #0.0
  457290:	b.mi	45731c <feof@plt+0x53a7c>  // b.first
  457294:	ldr	x0, [x26, #1096]
  457298:	fmov	d1, xzr
  45729c:	b.eq	4572c8 <feof@plt+0x53a28>  // b.none
  4572a0:	adrp	x8, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4572a4:	ldr	d2, [x8, #2520]
  4572a8:	mov	v1.16b, v0.16b
  4572ac:	fmul	d3, d1, d1
  4572b0:	fsub	d3, d3, d0
  4572b4:	fadd	d4, d1, d1
  4572b8:	fdiv	d3, d3, d4
  4572bc:	fcmp	d3, d2
  4572c0:	fsub	d1, d1, d3
  4572c4:	b.gt	4572ac <feof@plt+0x53a0c>
  4572c8:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4572cc:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4572d0:	add	x1, x1, #0xaa3
  4572d4:	add	x2, x2, #0xabf
  4572d8:	mov	v0.16b, v8.16b
  4572dc:	bl	4030d0 <fprintf@plt>
  4572e0:	ldr	x0, [x26, #1096]
  4572e4:	mov	x3, x19
  4572e8:	ldp	x20, x19, [sp, #112]
  4572ec:	ldp	x22, x21, [sp, #96]
  4572f0:	ldp	x24, x23, [sp, #80]
  4572f4:	ldp	x26, x25, [sp, #64]
  4572f8:	ldr	x27, [sp, #48]
  4572fc:	ldp	x29, x30, [sp, #32]
  457300:	ldp	d9, d8, [sp, #16]
  457304:	adrp	x1, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457308:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45730c:	add	x1, x1, #0x9ed
  457310:	add	x2, x2, #0xacb
  457314:	ldp	d11, d10, [sp], #128
  457318:	b	4030d0 <fprintf@plt>
  45731c:	adrp	x0, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457320:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457324:	add	x0, x0, #0xada
  457328:	add	x2, x2, #0xaf0
  45732c:	mov	w1, #0x165                 	// #357
  457330:	bl	429434 <feof@plt+0x25b94>
  457334:	ldr	x8, [x0]
  457338:	add	x10, x1, x2
  45733c:	str	x8, [x0, #8]
  457340:	ldr	x9, [x8]
  457344:	str	x9, [x0, #1344]
  457348:	ldr	x9, [x8, #32]
  45734c:	str	x9, [x0, #1352]
  457350:	ldr	x9, [x8, #16]
  457354:	str	x9, [x0, #1360]
  457358:	strb	wzr, [x8, #104]
  45735c:	stp	x1, x1, [x8]
  457360:	str	x10, [x8, #32]
  457364:	ret
  457368:	ldr	x8, [x0, #8]
  45736c:	ldr	x9, [x0, #1344]
  457370:	mov	w10, #0x1                   	// #1
  457374:	str	x9, [x8]
  457378:	ldr	x9, [x0, #1352]
  45737c:	str	x9, [x8, #32]
  457380:	ldr	x9, [x0, #1360]
  457384:	strb	w10, [x8, #104]
  457388:	str	x9, [x8, #8]
  45738c:	str	xzr, [x0, #8]
  457390:	ret
  457394:	stp	x29, x30, [sp, #-32]!
  457398:	str	x19, [sp, #16]
  45739c:	mov	x19, x0
  4573a0:	mov	x29, sp
  4573a4:	ldr	x8, [x19]
  4573a8:	ldrb	w8, [x8, #104]
  4573ac:	cbz	w8, 4573bc <feof@plt+0x53b1c>
  4573b0:	mov	x0, x19
  4573b4:	bl	44b430 <feof@plt+0x47b90>
  4573b8:	tbz	w0, #0, 4573e8 <feof@plt+0x53b48>
  4573bc:	mov	x0, x19
  4573c0:	mov	x1, xzr
  4573c4:	mov	w2, wzr
  4573c8:	bl	4573f8 <feof@plt+0x53b58>
  4573cc:	tbz	w0, #0, 4573a4 <feof@plt+0x53b04>
  4573d0:	ldrb	w8, [x19, #18]
  4573d4:	cbnz	w8, 4573a4 <feof@plt+0x53b04>
  4573d8:	ldr	x8, [x19]
  4573dc:	cmp	x8, #0x0
  4573e0:	cset	w0, ne  // ne = any
  4573e4:	b	4573ec <feof@plt+0x53b4c>
  4573e8:	mov	w0, wzr
  4573ec:	ldr	x19, [sp, #16]
  4573f0:	ldp	x29, x30, [sp], #32
  4573f4:	ret
  4573f8:	sub	sp, sp, #0x100
  4573fc:	stp	x29, x30, [sp, #160]
  457400:	stp	x28, x27, [sp, #176]
  457404:	stp	x26, x25, [sp, #192]
  457408:	stp	x24, x23, [sp, #208]
  45740c:	stp	x22, x21, [sp, #224]
  457410:	stp	x20, x19, [sp, #240]
  457414:	ldr	x8, [x0]
  457418:	ldr	x9, [x0, #136]
  45741c:	ldrb	w10, [x0, #19]
  457420:	mov	w25, w2
  457424:	ldr	x8, [x8]
  457428:	mov	x19, x0
  45742c:	cmp	w10, #0x0
  457430:	cset	w10, ne  // ne = any
  457434:	str	x8, [x9, #16]
  457438:	ldr	x8, [x0]
  45743c:	ldr	x9, [x0, #136]
  457440:	add	x29, sp, #0xa0
  457444:	str	w10, [sp, #60]
  457448:	ldr	x8, [x8, #32]
  45744c:	str	x8, [x9, #24]
  457450:	tbnz	w2, #0, 457468 <feof@plt+0x53bc8>
  457454:	ldr	x8, [x19, #1312]
  457458:	ldr	x9, [x19, #40]
  45745c:	str	x8, [x19, #1328]
  457460:	ldr	w8, [x9, #60]
  457464:	str	w8, [x19, #1336]
  457468:	str	xzr, [sp, #40]
  45746c:	ldr	x8, [x19]
  457470:	cmp	x1, #0x0
  457474:	mov	w27, wzr
  457478:	cset	w9, ne  // ne = any
  45747c:	ldr	x8, [x8]
  457480:	stur	wzr, [x29, #-76]
  457484:	str	xzr, [sp, #8]
  457488:	stur	xzr, [x29, #-72]
  45748c:	str	xzr, [sp, #32]
  457490:	stur	xzr, [x29, #-64]
  457494:	str	wzr, [sp, #64]
  457498:	str	wzr, [sp, #48]
  45749c:	str	x1, [sp, #72]
  4574a0:	str	w9, [sp, #20]
  4574a4:	str	x8, [sp, #24]
  4574a8:	stur	w25, [x29, #-52]
  4574ac:	ldr	x24, [x19, #136]
  4574b0:	ldr	x9, [x19, #1320]
  4574b4:	ldr	x21, [x19, #1328]
  4574b8:	ldp	x23, x8, [x24, #16]
  4574bc:	sub	x9, x9, x21
  4574c0:	sub	x8, x8, x23
  4574c4:	add	x8, x8, #0x3
  4574c8:	cmp	x8, x9
  4574cc:	b.ls	457500 <feof@plt+0x53c60>  // b.plast
  4574d0:	ldr	x0, [x19, #1312]
  4574d4:	sub	x20, x21, x0
  4574d8:	add	x8, x20, x8
  4574dc:	add	x8, x8, x8, lsl #1
  4574e0:	lsr	x22, x8, #1
  4574e4:	mov	x1, x22
  4574e8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4574ec:	add	x8, x0, x22
  4574f0:	add	x21, x0, x20
  4574f4:	str	x0, [x19, #1312]
  4574f8:	str	x8, [x19, #1320]
  4574fc:	str	x21, [x19, #1328]
  457500:	ldur	w25, [x29, #-52]
  457504:	mov	w20, w27
  457508:	sub	w27, w27, #0x1
  45750c:	b	457518 <feof@plt+0x53c78>
  457510:	ldr	x8, [x19]
  457514:	ldr	x23, [x8]
  457518:	ldr	x8, [x24, #8]
  45751c:	mov	x28, x23
  457520:	mov	x26, x21
  457524:	cbnz	x8, 457558 <feof@plt+0x53cb8>
  457528:	tbnz	w25, #0, 457558 <feof@plt+0x53cb8>
  45752c:	ldr	x8, [x19]
  457530:	ldr	w9, [x8, #56]
  457534:	ldr	x10, [x8, #48]
  457538:	lsl	x9, x9, #4
  45753c:	ldr	x9, [x10, x9]
  457540:	cmp	x28, x9
  457544:	b.cc	457558 <feof@plt+0x53cb8>  // b.lo, b.ul, b.last
  457548:	mov	x0, x19
  45754c:	mov	w1, wzr
  457550:	str	x28, [x8]
  457554:	bl	4492f8 <feof@plt+0x45a58>
  457558:	mov	x23, x28
  45755c:	ldrb	w8, [x23], #1
  457560:	mov	x21, x26
  457564:	cmp	w8, #0x7a
  457568:	strb	w8, [x21], #1
  45756c:	b.hi	45797c <feof@plt+0x540dc>  // b.pmore
  457570:	adrp	x11, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457574:	add	x11, x11, #0xafc
  457578:	adr	x9, 457518 <feof@plt+0x53c78>
  45757c:	ldrh	w10, [x11, x8, lsl #1]
  457580:	add	x9, x9, x10, lsl #2
  457584:	br	x9
  457588:	ldr	x8, [x24, #8]
  45758c:	str	x26, [x19, #1328]
  457590:	cbnz	x8, 457d18 <feof@plt+0x54478>
  457594:	ldr	x8, [x19]
  457598:	mov	w22, #0x1                   	// #1
  45759c:	str	x23, [x8]
  4575a0:	tbnz	w25, #0, 4581e0 <feof@plt+0x54940>
  4575a4:	strb	w22, [x8, #104]
  4575a8:	ldr	x0, [x19, #40]
  4575ac:	mov	w10, #0x18                  	// #24
  4575b0:	mov	w2, wzr
  4575b4:	ldr	w8, [x0, #12]
  4575b8:	ldr	x9, [x0]
  4575bc:	sub	w8, w8, #0x1
  4575c0:	smaddl	x8, w8, w10, x9
  4575c4:	ldr	w9, [x0, #60]
  4575c8:	ldr	w10, [x8]
  4575cc:	ldrb	w11, [x8, #6]
  4575d0:	ldr	w8, [x8, #16]
  4575d4:	sub	w9, w9, w10
  4575d8:	lsr	w9, w9, w11
  4575dc:	add	w8, w8, w9
  4575e0:	add	w1, w8, #0x1
  4575e4:	bl	44ecdc <feof@plt+0x4b43c>
  4575e8:	cmp	w27, #0x1
  4575ec:	b.hi	4581e0 <feof@plt+0x54940>  // b.pmore
  4575f0:	ldrb	w8, [x19, #16]
  4575f4:	cbnz	w8, 4581dc <feof@plt+0x5493c>
  4575f8:	mov	x0, x19
  4575fc:	bl	44b430 <feof@plt+0x47b90>
  457600:	tbz	w0, #0, 4581dc <feof@plt+0x5493c>
  457604:	cmp	w20, #0x2
  457608:	b.ne	457510 <feof@plt+0x53c70>  // b.any
  45760c:	mov	w8, #0x20                  	// #32
  457610:	strb	w8, [x26]
  457614:	b	457510 <feof@plt+0x53c70>
  457618:	ldr	w8, [sp, #64]
  45761c:	add	x21, x26, #0x1
  457620:	cbnz	w8, 457c10 <feof@plt+0x54370>
  457624:	ldrb	w8, [x23]
  457628:	cmp	w8, #0x2a
  45762c:	b.ne	457c0c <feof@plt+0x5436c>  // b.any
  457630:	ldr	w2, [sp, #20]
  457634:	mov	x0, x19
  457638:	mov	x1, x23
  45763c:	str	x21, [x19, #1328]
  457640:	bl	4582ac <feof@plt+0x54a0c>
  457644:	ldr	x21, [x19, #1328]
  457648:	mov	x23, x0
  45764c:	str	wzr, [sp, #64]
  457650:	b	457518 <feof@plt+0x53c78>
  457654:	ldr	x8, [sp, #72]
  457658:	ldr	w9, [sp, #64]
  45765c:	ldrb	w10, [x19, #18]
  457660:	cmp	x8, #0x0
  457664:	cset	w8, ne  // ne = any
  457668:	cmp	w9, #0x0
  45766c:	cset	w9, eq  // eq = none
  457670:	cbnz	w10, 45797c <feof@plt+0x540dc>
  457674:	orr	w8, w8, w9
  457678:	tbz	w8, #0, 45797c <feof@plt+0x540dc>
  45767c:	str	x26, [x19, #1328]
  457680:	ldrb	w8, [x28]
  457684:	adrp	x10, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  457688:	mov	x22, xzr
  45768c:	mov	x25, x26
  457690:	add	x10, x10, #0x4a2
  457694:	mov	w11, #0x204                 	// #516
  457698:	add	x9, x28, x22
  45769c:	strb	w8, [x26, x22]
  4576a0:	ldrb	w8, [x9, #1]
  4576a4:	add	x25, x25, #0x1
  4576a8:	add	x22, x22, #0x1
  4576ac:	ldrh	w9, [x10, x8, lsl #1]
  4576b0:	tst	w9, w11
  4576b4:	b.ne	457698 <feof@plt+0x53df8>  // b.any
  4576b8:	ldr	x8, [x19, #136]
  4576bc:	add	x9, x28, x22
  4576c0:	add	x21, x26, x22
  4576c4:	mov	w3, #0x1                   	// #1
  4576c8:	str	x9, [x8, #16]
  4576cc:	ldr	x1, [x19, #1328]
  4576d0:	ldr	x0, [x19, #1088]
  4576d4:	sub	x2, x21, x1
  4576d8:	bl	456b40 <feof@plt+0x532a0>
  4576dc:	str	x21, [x19, #1328]
  4576e0:	ldr	x23, [x24, #16]
  4576e4:	ldrh	w8, [x0, #18]
  4576e8:	mov	x28, x0
  4576ec:	cmp	w20, #0x1
  4576f0:	b.hi	457700 <feof@plt+0x53e60>  // b.pmore
  4576f4:	tbz	w8, #1, 457700 <feof@plt+0x53e60>
  4576f8:	ldrb	w9, [x19, #24]
  4576fc:	cbz	w9, 4579f8 <feof@plt+0x54158>
  457700:	ldr	x9, [sp, #72]
  457704:	cbz	x9, 457714 <feof@plt+0x53e74>
  457708:	and	w8, w8, #0x3
  45770c:	cmp	w8, #0x1
  457710:	b.eq	457778 <feof@plt+0x53ed8>  // b.none
  457714:	cmp	w20, #0x5
  457718:	mov	w27, #0x6                   	// #6
  45771c:	b.eq	457500 <feof@plt+0x53c60>  // b.none
  457720:	ldrb	w8, [x19, #20]
  457724:	cbz	w8, 457a20 <feof@plt+0x54180>
  457728:	ldr	x8, [x19, #1248]
  45772c:	mov	w27, #0x3                   	// #3
  457730:	cmp	x8, x28
  457734:	b.eq	457500 <feof@plt+0x53c60>  // b.none
  457738:	ldr	x8, [x19, #1288]
  45773c:	mov	w27, #0x8                   	// #8
  457740:	cmp	x8, x28
  457744:	b.eq	457500 <feof@plt+0x53c60>  // b.none
  457748:	ldr	x8, [x19, #1296]
  45774c:	mov	w27, #0x8                   	// #8
  457750:	cmp	x8, x28
  457754:	b.eq	457500 <feof@plt+0x53c60>  // b.none
  457758:	mov	x21, x25
  45775c:	b	457980 <feof@plt+0x540e0>
  457760:	ldr	w9, [sp, #64]
  457764:	add	x21, x26, #0x1
  457768:	cmp	w9, w8
  45776c:	b.ne	4579e8 <feof@plt+0x54148>  // b.any
  457770:	str	wzr, [sp, #64]
  457774:	b	457980 <feof@plt+0x540e0>
  457778:	str	x26, [x19, #1328]
  45777c:	ldrh	w2, [x28, #24]
  457780:	ldr	x1, [sp, #72]
  457784:	mov	x0, x19
  457788:	bl	458414 <feof@plt+0x54b74>
  45778c:	ldr	x21, [x19, #1312]
  457790:	b	457980 <feof@plt+0x540e0>
  457794:	ldr	x8, [sp, #24]
  457798:	add	x21, x26, #0x1
  45779c:	cmp	x28, x8
  4577a0:	b.ne	457be0 <feof@plt+0x54340>  // b.any
  4577a4:	ldr	x8, [x19, #136]
  4577a8:	ldr	x8, [x8, #8]
  4577ac:	cbnz	x8, 457be0 <feof@plt+0x54340>
  4577b0:	ldrb	w8, [x19, #16]
  4577b4:	cbnz	w8, 457be0 <feof@plt+0x54340>
  4577b8:	adrp	x26, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  4577bc:	add	x26, x26, #0x4a2
  4577c0:	str	x21, [x19, #1328]
  4577c4:	mov	x22, x23
  4577c8:	ldrb	w8, [x23], #1
  4577cc:	mov	x25, x21
  4577d0:	ldrh	w9, [x26, x8, lsl #1]
  4577d4:	strb	w8, [x21], #1
  4577d8:	tbnz	w9, #11, 4577c4 <feof@plt+0x53f24>
  4577dc:	cmp	w8, #0x2f
  4577e0:	b.ne	457b4c <feof@plt+0x542ac>  // b.any
  4577e4:	ldrb	w8, [x23]
  4577e8:	cmp	w8, #0x2a
  4577ec:	b.ne	457b4c <feof@plt+0x542ac>  // b.any
  4577f0:	mov	x0, x19
  4577f4:	mov	x1, x23
  4577f8:	mov	w2, wzr
  4577fc:	str	x21, [x19, #1328]
  457800:	bl	4582ac <feof@plt+0x54a0c>
  457804:	ldr	x21, [x19, #1328]
  457808:	mov	x23, x0
  45780c:	b	4577c4 <feof@plt+0x53f24>
  457810:	ldr	w8, [sp, #64]
  457814:	add	x21, x26, #0x1
  457818:	cbnz	w8, 457980 <feof@plt+0x540e0>
  45781c:	ldr	w8, [sp, #48]
  457820:	cmp	w27, #0x7
  457824:	add	w8, w8, #0x1
  457828:	str	w8, [sp, #48]
  45782c:	b.hi	457770 <feof@plt+0x53ed0>  // b.pmore
  457830:	adrp	x10, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457834:	add	x10, x10, #0xbf2
  457838:	adr	x8, 457770 <feof@plt+0x53ed0>
  45783c:	ldrb	w9, [x10, x27]
  457840:	add	x8, x8, x9, lsl #2
  457844:	br	x8
  457848:	ldur	x11, [x29, #-72]
  45784c:	ldrh	w8, [x11, #18]
  457850:	tbnz	w8, #6, 457bf0 <feof@plt+0x54350>
  457854:	ldr	x9, [sp, #32]
  457858:	ldr	x10, [sp, #8]
  45785c:	ldr	x8, [x19, #1312]
  457860:	str	wzr, [sp, #64]
  457864:	mov	w20, #0x2                   	// #2
  457868:	str	x10, [x9]
  45786c:	mov	w9, #0x1                   	// #1
  457870:	str	w9, [sp, #48]
  457874:	add	x21, x8, x10
  457878:	b	457980 <feof@plt+0x540e0>
  45787c:	ldr	w8, [sp, #64]
  457880:	add	x21, x26, #0x1
  457884:	cbnz	w8, 457980 <feof@plt+0x540e0>
  457888:	ldr	w8, [sp, #48]
  45788c:	cmp	w20, #0x2
  457890:	sub	w8, w8, #0x1
  457894:	b.ne	457abc <feof@plt+0x5421c>  // b.any
  457898:	cbnz	w8, 457abc <feof@plt+0x5421c>
  45789c:	ldur	x2, [x29, #-72]
  4578a0:	ldrh	w8, [x2, #18]
  4578a4:	mvn	w8, w8
  4578a8:	tst	w8, #0x3
  4578ac:	b.ne	457ae4 <feof@plt+0x54244>  // b.any
  4578b0:	ldp	w8, w3, [sp, #40]
  4578b4:	add	w3, w3, #0x1
  4578b8:	cmp	w3, w8
  4578bc:	b.hi	4578d0 <feof@plt+0x54030>  // b.pmore
  4578c0:	ldr	x8, [x19, #1312]
  4578c4:	ldr	x9, [sp, #32]
  4578c8:	sub	x8, x21, x8
  4578cc:	str	x8, [x9, w3, uxtw #3]
  4578d0:	ldr	w8, [sp, #40]
  4578d4:	movi	v0.2d, #0x0
  4578d8:	sub	x1, x29, #0x30
  4578dc:	mov	x0, x19
  4578e0:	stp	q0, q0, [x29, #-32]
  4578e4:	stur	q0, [x29, #-48]
  4578e8:	sturh	w8, [x29, #-32]
  4578ec:	str	w3, [sp, #44]
  4578f0:	bl	451ef8 <feof@plt+0x4e658>
  4578f4:	tbnz	w0, #0, 457db8 <feof@plt+0x54518>
  4578f8:	mov	w20, wzr
  4578fc:	str	wzr, [sp, #64]
  457900:	str	wzr, [sp, #48]
  457904:	b	457980 <feof@plt+0x540e0>
  457908:	cmp	w20, #0x2
  45790c:	add	x21, x26, #0x1
  457910:	b.ne	457980 <feof@plt+0x540e0>  // b.any
  457914:	ldr	w10, [sp, #44]
  457918:	ldr	w8, [sp, #64]
  45791c:	cbnz	w8, 457980 <feof@plt+0x540e0>
  457920:	ldr	w8, [sp, #48]
  457924:	cmp	w8, #0x1
  457928:	b.ne	457980 <feof@plt+0x540e0>  // b.any
  45792c:	ldr	w8, [sp, #40]
  457930:	add	w10, w10, #0x1
  457934:	str	w10, [sp, #44]
  457938:	cmp	w10, w8
  45793c:	b.ls	457a98 <feof@plt+0x541f8>  // b.plast
  457940:	mov	w8, #0x1                   	// #1
  457944:	str	wzr, [sp, #64]
  457948:	str	w8, [sp, #48]
  45794c:	mov	w20, #0x2                   	// #2
  457950:	b	457980 <feof@plt+0x540e0>
  457954:	ldp	w8, w9, [sp, #60]
  457958:	tst	w8, #0x1
  45795c:	mov	w8, #0x3e                  	// #62
  457960:	csel	w9, w8, w9, ne  // ne = any
  457964:	str	w9, [sp, #64]
  457968:	b	45797c <feof@plt+0x540dc>
  45796c:	ldr	w8, [sp, #64]
  457970:	cmp	w8, #0x3e
  457974:	csel	w8, wzr, w8, eq  // eq = none
  457978:	str	w8, [sp, #64]
  45797c:	add	x21, x26, #0x1
  457980:	ldrb	w8, [x19, #16]
  457984:	cbnz	w8, 45798c <feof@plt+0x540ec>
  457988:	strb	wzr, [x19, #440]
  45798c:	mov	w8, #0x16b                 	// #363
  457990:	lsr	w8, w8, w20
  457994:	tst	w8, #0x1
  457998:	csel	w8, w20, wzr, eq  // eq = none
  45799c:	cmp	w20, #0x9
  4579a0:	str	wzr, [sp, #60]
  4579a4:	csel	w27, w8, w20, cc  // cc = lo, ul, last
  4579a8:	b	457500 <feof@plt+0x53c60>
  4579ac:	ldrb	w8, [x23]
  4579b0:	add	x21, x26, #0x1
  4579b4:	sub	w9, w8, #0x22
  4579b8:	cmp	w9, #0x3a
  4579bc:	b.hi	457980 <feof@plt+0x540e0>  // b.pmore
  4579c0:	mov	w10, #0x1                   	// #1
  4579c4:	lsl	x9, x10, x9
  4579c8:	mov	x10, #0x21                  	// #33
  4579cc:	movk	x10, #0x400, lsl #48
  4579d0:	tst	x9, x10
  4579d4:	b.eq	457980 <feof@plt+0x540e0>  // b.none
  4579d8:	add	x23, x28, #0x2
  4579dc:	add	x21, x26, #0x2
  4579e0:	strb	w8, [x26, #1]
  4579e4:	b	457980 <feof@plt+0x540e0>
  4579e8:	cmp	w9, #0x0
  4579ec:	csel	w9, w8, w9, eq  // eq = none
  4579f0:	str	w9, [sp, #64]
  4579f4:	b	457980 <feof@plt+0x540e0>
  4579f8:	strb	wzr, [x19, #440]
  4579fc:	ldrh	w10, [x28, #18]
  457a00:	and	w8, w10, #0x3
  457a04:	cmp	w8, #0x3
  457a08:	b.ne	457a28 <feof@plt+0x54188>  // b.any
  457a0c:	ldr	w9, [x28, #24]
  457a10:	cmp	w9, #0xa
  457a14:	b.ne	457c18 <feof@plt+0x54378>  // b.any
  457a18:	mov	w8, #0x1                   	// #1
  457a1c:	b	457a38 <feof@plt+0x54198>
  457a20:	add	x21, x26, x22
  457a24:	b	457980 <feof@plt+0x540e0>
  457a28:	ldr	x9, [x28, #24]
  457a2c:	ldrb	w11, [x9, #19]
  457a30:	tbz	w11, #2, 457c18 <feof@plt+0x54378>
  457a34:	ldrh	w8, [x9, #16]
  457a38:	ldur	x1, [x29, #-64]
  457a3c:	add	x21, x26, x22
  457a40:	str	w8, [sp, #40]
  457a44:	cbz	x1, 457a50 <feof@plt+0x541b0>
  457a48:	mov	x0, x19
  457a4c:	bl	44da70 <feof@plt+0x4a1d0>
  457a50:	ldr	w8, [sp, #40]
  457a54:	mov	x0, x19
  457a58:	lsl	w8, w8, #3
  457a5c:	add	w1, w8, #0x8
  457a60:	bl	44da90 <feof@plt+0x4a1f0>
  457a64:	ldr	x8, [x19, #40]
  457a68:	ldr	x9, [x19, #1312]
  457a6c:	ldr	x10, [x0, #16]
  457a70:	str	wzr, [sp, #44]
  457a74:	ldr	w8, [x8, #60]
  457a78:	stur	x0, [x29, #-64]
  457a7c:	str	x10, [sp, #32]
  457a80:	mov	w27, #0x1                   	// #1
  457a84:	stur	w8, [x29, #-76]
  457a88:	sub	x8, x26, x9
  457a8c:	str	x8, [sp, #8]
  457a90:	stur	x28, [x29, #-72]
  457a94:	b	457500 <feof@plt+0x53c60>
  457a98:	ldr	x8, [x19, #1312]
  457a9c:	mov	w9, #0x1                   	// #1
  457aa0:	str	w9, [sp, #48]
  457aa4:	ldr	x9, [sp, #32]
  457aa8:	sub	x8, x21, x8
  457aac:	str	wzr, [sp, #64]
  457ab0:	mov	w20, #0x2                   	// #2
  457ab4:	str	x8, [x9, w10, uxtw #3]
  457ab8:	b	457980 <feof@plt+0x540e0>
  457abc:	cmp	w20, #0x9
  457ac0:	str	w8, [sp, #48]
  457ac4:	b.hi	457770 <feof@plt+0x53ed0>  // b.pmore
  457ac8:	mov	w8, #0x1                   	// #1
  457acc:	lsl	w8, w8, w20
  457ad0:	mov	w9, #0x290                 	// #656
  457ad4:	tst	w8, w9
  457ad8:	b.eq	457770 <feof@plt+0x53ed0>  // b.none
  457adc:	mov	w20, wzr
  457ae0:	b	457770 <feof@plt+0x53ed0>
  457ae4:	ldr	x1, [x2, #24]
  457ae8:	ldp	w9, w10, [sp, #40]
  457aec:	ldrb	w8, [x1, #19]
  457af0:	add	w22, w10, #0x1
  457af4:	cmp	w22, w9
  457af8:	orr	w8, w8, #0x20
  457afc:	strb	w8, [x1, #19]
  457b00:	b.hi	457b14 <feof@plt+0x54274>  // b.pmore
  457b04:	ldr	x8, [x19, #1312]
  457b08:	ldr	x9, [sp, #32]
  457b0c:	sub	x8, x21, x8
  457b10:	str	x8, [x9, w22, uxtw #3]
  457b14:	cbnz	w10, 457cf8 <feof@plt+0x54458>
  457b18:	ldrh	w8, [x1, #16]
  457b1c:	cbz	w8, 457ce4 <feof@plt+0x54444>
  457b20:	mov	w22, #0x1                   	// #1
  457b24:	b	457cf8 <feof@plt+0x54458>
  457b28:	str	wzr, [sp, #64]
  457b2c:	mov	w20, #0x4                   	// #4
  457b30:	b	457980 <feof@plt+0x540e0>
  457b34:	str	wzr, [sp, #64]
  457b38:	mov	w20, #0x7                   	// #7
  457b3c:	b	457980 <feof@plt+0x540e0>
  457b40:	str	wzr, [sp, #64]
  457b44:	mov	w20, #0x9                   	// #9
  457b48:	b	457980 <feof@plt+0x540e0>
  457b4c:	str	x25, [x19, #1328]
  457b50:	ldrb	w8, [x22]
  457b54:	cmp	x8, #0xa
  457b58:	b.eq	458258 <feof@plt+0x549b8>  // b.none
  457b5c:	ldrh	w9, [x26, x8, lsl #1]
  457b60:	tbz	w9, #2, 457b70 <feof@plt+0x542d0>
  457b64:	ldr	w10, [x19, #1116]
  457b68:	cmp	w10, #0x15
  457b6c:	b.ne	45823c <feof@plt+0x5499c>  // b.any
  457b70:	tbnz	w9, #9, 457b84 <feof@plt+0x542e4>
  457b74:	cmp	w8, #0x24
  457b78:	b.ne	457bcc <feof@plt+0x5432c>  // b.any
  457b7c:	ldrb	w9, [x19, #1146]
  457b80:	cbz	w9, 457bcc <feof@plt+0x5432c>
  457b84:	mov	x21, x25
  457b88:	mov	x9, x22
  457b8c:	mov	w11, #0x204                 	// #516
  457b90:	strb	w8, [x21], #1
  457b94:	ldrb	w8, [x9, #1]!
  457b98:	ldrh	w10, [x26, x8, lsl #1]
  457b9c:	tst	w10, w11
  457ba0:	b.ne	457b90 <feof@plt+0x542f0>  // b.any
  457ba4:	ldr	x8, [x19, #136]
  457ba8:	mov	w3, #0x1                   	// #1
  457bac:	str	x9, [x8, #16]
  457bb0:	ldr	x1, [x19, #1328]
  457bb4:	ldr	x0, [x19, #1088]
  457bb8:	sub	x2, x21, x1
  457bbc:	bl	456b40 <feof@plt+0x532a0>
  457bc0:	str	x21, [x19, #1328]
  457bc4:	ldrb	w8, [x0, #16]
  457bc8:	tbnz	w8, #0, 45823c <feof@plt+0x5499c>
  457bcc:	ldr	w8, [x19, #1116]
  457bd0:	cmp	w8, #0x15
  457bd4:	b.ne	45823c <feof@plt+0x5499c>  // b.any
  457bd8:	mov	x21, x25
  457bdc:	mov	x23, x22
  457be0:	ldrb	w8, [x19, #20]
  457be4:	mov	w27, #0x5                   	// #5
  457be8:	cbnz	w8, 457500 <feof@plt+0x53c60>
  457bec:	b	457980 <feof@plt+0x540e0>
  457bf0:	mvn	w8, w8
  457bf4:	tst	w8, #0x3
  457bf8:	b.ne	457c30 <feof@plt+0x54390>  // b.any
  457bfc:	ldr	w8, [x11, #24]
  457c00:	cmp	w8, #0xa
  457c04:	b.eq	457c3c <feof@plt+0x5439c>  // b.none
  457c08:	b	457c6c <feof@plt+0x543cc>
  457c0c:	mov	w8, wzr
  457c10:	str	w8, [sp, #64]
  457c14:	b	457980 <feof@plt+0x540e0>
  457c18:	tbz	w10, #6, 457d28 <feof@plt+0x54488>
  457c1c:	cmp	w8, #0x3
  457c20:	b.ne	457c88 <feof@plt+0x543e8>  // b.any
  457c24:	cmp	w9, #0xa
  457c28:	b.eq	457c94 <feof@plt+0x543f4>  // b.none
  457c2c:	b	457cc4 <feof@plt+0x54424>
  457c30:	ldr	x8, [x11, #24]
  457c34:	ldrb	w8, [x8, #19]
  457c38:	tbz	w8, #2, 457c6c <feof@plt+0x543cc>
  457c3c:	ldr	x8, [x19, #136]
  457c40:	mov	w9, #0x1                   	// #1
  457c44:	b	457c54 <feof@plt+0x543b4>
  457c48:	ldr	x8, [x8, #8]
  457c4c:	add	x9, x9, #0x1
  457c50:	cbz	x8, 457854 <feof@plt+0x53fb4>
  457c54:	cmp	x9, #0x15
  457c58:	b.cc	457c48 <feof@plt+0x543a8>  // b.lo, b.ul, b.last
  457c5c:	ldr	x10, [x8, #40]
  457c60:	cmp	x10, x11
  457c64:	b.ne	457c48 <feof@plt+0x543a8>  // b.any
  457c68:	cbz	x8, 457854 <feof@plt+0x53fb4>
  457c6c:	ldr	x3, [x11]
  457c70:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457c74:	mov	w1, #0x3                   	// #3
  457c78:	mov	x0, x19
  457c7c:	add	x2, x2, #0xbfa
  457c80:	bl	4424f8 <feof@plt+0x3ec58>
  457c84:	b	457adc <feof@plt+0x5423c>
  457c88:	ldr	x8, [x28, #24]
  457c8c:	ldrb	w8, [x8, #19]
  457c90:	tbz	w8, #2, 457cc4 <feof@plt+0x54424>
  457c94:	ldr	x8, [x19, #136]
  457c98:	mov	w9, #0x1                   	// #1
  457c9c:	b	457cac <feof@plt+0x5440c>
  457ca0:	ldr	x8, [x8, #8]
  457ca4:	add	x9, x9, #0x1
  457ca8:	cbz	x8, 457d28 <feof@plt+0x54488>
  457cac:	cmp	x9, #0x15
  457cb0:	b.cc	457ca0 <feof@plt+0x54400>  // b.lo, b.ul, b.last
  457cb4:	ldr	x10, [x8, #40]
  457cb8:	cmp	x10, x28
  457cbc:	b.ne	457ca0 <feof@plt+0x54400>  // b.any
  457cc0:	cbz	x8, 457d28 <feof@plt+0x54488>
  457cc4:	ldr	x3, [x28]
  457cc8:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  457ccc:	mov	w1, #0x3                   	// #3
  457cd0:	mov	x0, x19
  457cd4:	add	x2, x2, #0xbfa
  457cd8:	add	x21, x26, x22
  457cdc:	bl	4424f8 <feof@plt+0x3ec58>
  457ce0:	b	457980 <feof@plt+0x540e0>
  457ce4:	ldr	x8, [x19, #1312]
  457ce8:	ldr	x9, [sp, #8]
  457cec:	add	x8, x8, x9
  457cf0:	cmp	x8, x26
  457cf4:	cset	w22, ne  // ne = any
  457cf8:	mov	x0, x19
  457cfc:	mov	w3, w22
  457d00:	bl	451ef8 <feof@plt+0x4e658>
  457d04:	tbnz	w0, #0, 457fa8 <feof@plt+0x54708>
  457d08:	mov	w20, wzr
  457d0c:	str	wzr, [sp, #64]
  457d10:	stp	w22, wzr, [sp, #44]
  457d14:	b	457980 <feof@plt+0x540e0>
  457d18:	mov	x0, x19
  457d1c:	bl	452120 <feof@plt+0x4e880>
  457d20:	mov	w27, w20
  457d24:	b	4574ac <feof@plt+0x53c0c>
  457d28:	str	x26, [x19, #1328]
  457d2c:	ldrh	w8, [x28, #18]
  457d30:	mov	x20, x28
  457d34:	mvn	w8, w8
  457d38:	tst	w8, #0x3
  457d3c:	b.ne	457d84 <feof@plt+0x544e4>  // b.any
  457d40:	mov	x0, x19
  457d44:	mov	x1, x20
  457d48:	mov	w2, wzr
  457d4c:	bl	451a9c <feof@plt+0x4e1fc>
  457d50:	mov	x22, x0
  457d54:	bl	4030b0 <strlen@plt>
  457d58:	mov	x28, x0
  457d5c:	add	x1, x0, #0x1
  457d60:	mov	x0, x19
  457d64:	bl	44d230 <feof@plt+0x49990>
  457d68:	mov	x1, x22
  457d6c:	mov	x2, x28
  457d70:	mov	x21, x0
  457d74:	bl	402fc0 <memcpy@plt>
  457d78:	mov	w8, #0xa                   	// #10
  457d7c:	strb	w8, [x21, x28]
  457d80:	b	457d9c <feof@plt+0x544fc>
  457d84:	ldr	x8, [x20, #24]
  457d88:	ldrb	w9, [x8, #19]
  457d8c:	ldr	x21, [x8, #24]
  457d90:	ldr	w28, [x8, #12]
  457d94:	orr	w9, w9, #0x20
  457d98:	strb	w9, [x8, #19]
  457d9c:	mov	x0, x19
  457da0:	mov	x1, x20
  457da4:	mov	x2, x21
  457da8:	mov	x3, x28
  457dac:	bl	4520a0 <feof@plt+0x4e800>
  457db0:	mov	w27, wzr
  457db4:	b	4574ac <feof@plt+0x53c0c>
  457db8:	ldr	x20, [sp, #32]
  457dbc:	ldr	x10, [x19, #1312]
  457dc0:	mov	x0, x19
  457dc4:	ldp	x9, x8, [x20]
  457dc8:	sub	x21, x8, x9
  457dcc:	ldr	x8, [sp, #8]
  457dd0:	add	x1, x21, #0x2
  457dd4:	add	x8, x10, x8
  457dd8:	str	x8, [x19, #1328]
  457ddc:	str	x23, [x24, #16]
  457de0:	bl	44d230 <feof@plt+0x49990>
  457de4:	mov	x22, x0
  457de8:	mov	w8, #0x28                  	// #40
  457dec:	strb	w8, [x22], #1
  457df0:	ldr	x8, [x19, #1312]
  457df4:	ldr	x9, [x20]
  457df8:	mov	x25, x0
  457dfc:	mov	x0, x22
  457e00:	mov	x2, x21
  457e04:	add	x1, x8, x9
  457e08:	bl	402fc0 <memcpy@plt>
  457e0c:	add	x8, x21, x25
  457e10:	mov	w9, #0xa                   	// #10
  457e14:	strb	w9, [x8, #1]
  457e18:	ldr	x10, [x24, #24]
  457e1c:	add	x9, x22, x21
  457e20:	mov	w2, #0x1                   	// #1
  457e24:	mov	x0, x19
  457e28:	str	x10, [sp, #64]
  457e2c:	ldp	x8, x10, [x19]
  457e30:	mov	x1, xzr
  457e34:	str	x10, [sp, #48]
  457e38:	ldrb	w10, [x8, #104]
  457e3c:	ldr	x27, [x8, #32]
  457e40:	ldp	x26, x28, [x8]
  457e44:	str	x9, [x8, #32]
  457e48:	str	w10, [sp, #4]
  457e4c:	stp	x25, x25, [x8]
  457e50:	strb	wzr, [x8, #104]
  457e54:	ldrb	w9, [x19, #16]
  457e58:	str	x8, [x19, #8]
  457e5c:	mov	w8, #0x1                   	// #1
  457e60:	strb	w8, [x19, #16]
  457e64:	ldr	x20, [x24, #8]
  457e68:	cmp	w9, #0x0
  457e6c:	cset	w22, ne  // ne = any
  457e70:	str	xzr, [x24, #8]
  457e74:	bl	4573f8 <feof@plt+0x53b58>
  457e78:	ldr	x9, [x19, #1320]
  457e7c:	ldr	x8, [x19, #1328]
  457e80:	strb	w22, [x19, #16]
  457e84:	sub	x9, x9, x8
  457e88:	cmp	x9, #0x3
  457e8c:	b.hi	457ec0 <feof@plt+0x54620>  // b.pmore
  457e90:	ldr	x0, [x19, #1312]
  457e94:	sub	x21, x8, x0
  457e98:	add	x8, x21, x21, lsl #1
  457e9c:	add	x8, x8, #0xc
  457ea0:	lsr	x22, x8, #1
  457ea4:	mov	x1, x22
  457ea8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  457eac:	add	x9, x0, x22
  457eb0:	add	x8, x0, x21
  457eb4:	str	x0, [x19, #1312]
  457eb8:	str	x9, [x19, #1320]
  457ebc:	str	x8, [x19, #1328]
  457ec0:	mov	w9, #0xa                   	// #10
  457ec4:	strb	w9, [x8]
  457ec8:	ldr	x8, [x19, #1312]
  457ecc:	ldr	x22, [sp, #8]
  457ed0:	ldr	x9, [x19]
  457ed4:	mov	x0, x19
  457ed8:	mov	w2, wzr
  457edc:	add	x8, x8, x22
  457ee0:	stp	x8, x8, [x9]
  457ee4:	ldr	x10, [x19, #1328]
  457ee8:	ldur	x21, [x29, #-72]
  457eec:	str	x10, [x9, #32]
  457ef0:	str	x8, [x24, #16]
  457ef4:	ldr	x8, [x19]
  457ef8:	mov	x1, x21
  457efc:	ldr	x8, [x8, #32]
  457f00:	str	x8, [x24, #24]
  457f04:	ldrb	w8, [x19, #24]
  457f08:	add	w8, w8, #0x1
  457f0c:	strb	w8, [x19, #24]
  457f10:	bl	451a9c <feof@plt+0x4e1fc>
  457f14:	ldrb	w8, [x19, #24]
  457f18:	sub	w8, w8, #0x1
  457f1c:	strb	w8, [x19, #24]
  457f20:	str	x20, [x24, #8]
  457f24:	ldr	x8, [x19]
  457f28:	mov	x20, x0
  457f2c:	stp	x26, x28, [x8]
  457f30:	ldr	w9, [sp, #4]
  457f34:	str	x27, [x8, #32]
  457f38:	strb	w9, [x8, #104]
  457f3c:	ldr	x8, [x19, #1312]
  457f40:	ldr	x9, [sp, #48]
  457f44:	add	x8, x8, x22
  457f48:	str	x8, [x19, #1328]
  457f4c:	ldr	x8, [sp, #64]
  457f50:	str	x9, [x19, #8]
  457f54:	stp	x23, x8, [x24, #16]
  457f58:	bl	4030b0 <strlen@plt>
  457f5c:	mov	x28, x0
  457f60:	add	x1, x0, #0x1
  457f64:	mov	x0, x19
  457f68:	bl	44d230 <feof@plt+0x49990>
  457f6c:	mov	x1, x20
  457f70:	mov	x2, x28
  457f74:	mov	x22, x0
  457f78:	bl	402fc0 <memcpy@plt>
  457f7c:	mov	w8, #0xa                   	// #10
  457f80:	mov	x0, x19
  457f84:	mov	x1, x21
  457f88:	mov	x2, x22
  457f8c:	mov	x3, x28
  457f90:	strb	w8, [x22, x28]
  457f94:	bl	4520a0 <feof@plt+0x4e800>
  457f98:	mov	w27, wzr
  457f9c:	str	wzr, [sp, #64]
  457fa0:	str	wzr, [sp, #48]
  457fa4:	b	4574ac <feof@plt+0x53c0c>
  457fa8:	ldr	x8, [x19, #1312]
  457fac:	ldr	x9, [sp, #8]
  457fb0:	mov	w25, w22
  457fb4:	add	x8, x8, x9
  457fb8:	str	x8, [x19, #1328]
  457fbc:	ldur	x8, [x29, #-72]
  457fc0:	str	x23, [x24, #16]
  457fc4:	ldr	x20, [x8, #24]
  457fc8:	ldrh	w8, [x20, #16]
  457fcc:	cbz	w8, 45801c <feof@plt+0x5477c>
  457fd0:	ldr	x9, [x20, #24]
  457fd4:	ldrh	w11, [x9, #4]
  457fd8:	ldr	w8, [x9]
  457fdc:	cbz	w11, 458074 <feof@plt+0x547d4>
  457fe0:	ldr	x21, [sp, #32]
  457fe4:	mov	x10, x8
  457fe8:	add	x10, x10, #0xd
  457fec:	add	x11, x21, w11, uxth #3
  457ff0:	and	x10, x10, #0x1fffffff8
  457ff4:	ldp	x13, x12, [x11, #-8]
  457ff8:	add	x9, x9, x10
  457ffc:	ldr	w10, [x9]
  458000:	ldrh	w11, [x9, #4]
  458004:	mvn	x13, x13
  458008:	add	x12, x13, x12
  45800c:	add	x8, x8, x10
  458010:	add	x8, x8, x12, lsl #1
  458014:	cbnz	w11, 457fe8 <feof@plt+0x54748>
  458018:	b	458078 <feof@plt+0x547d8>
  45801c:	ldur	x8, [x29, #-72]
  458020:	ldrh	w8, [x8, #18]
  458024:	mvn	w8, w8
  458028:	tst	w8, #0x3
  45802c:	b.ne	4581a4 <feof@plt+0x54904>  // b.any
  458030:	ldur	x1, [x29, #-72]
  458034:	mov	x0, x19
  458038:	mov	w2, wzr
  45803c:	bl	451a9c <feof@plt+0x4e1fc>
  458040:	mov	x20, x0
  458044:	bl	4030b0 <strlen@plt>
  458048:	mov	x22, x0
  45804c:	add	x1, x0, #0x1
  458050:	mov	x0, x19
  458054:	bl	44d230 <feof@plt+0x49990>
  458058:	mov	x1, x20
  45805c:	mov	x2, x22
  458060:	mov	x28, x0
  458064:	bl	402fc0 <memcpy@plt>
  458068:	mov	w8, #0xa                   	// #10
  45806c:	strb	w8, [x28, x22]
  458070:	b	4581b8 <feof@plt+0x54918>
  458074:	ldr	x21, [sp, #32]
  458078:	add	x1, x8, #0x1
  45807c:	mov	x0, x19
  458080:	bl	44da90 <feof@plt+0x4a1f0>
  458084:	ldr	x9, [x0, #16]
  458088:	ldr	x10, [x20, #24]
  45808c:	mov	x22, x0
  458090:	mov	w8, wzr
  458094:	mov	x3, xzr
  458098:	mov	w16, #0x5c                  	// #92
  45809c:	b	4580b0 <feof@plt+0x54810>
  4580a0:	ldr	w11, [x10]
  4580a4:	add	x11, x11, #0xd
  4580a8:	and	x11, x11, #0x1fffffff8
  4580ac:	add	x10, x10, x11
  4580b0:	ldr	w11, [x10]
  4580b4:	add	x3, x3, x11
  4580b8:	cbz	w11, 4580e0 <feof@plt+0x54840>
  4580bc:	add	x12, x10, #0x6
  4580c0:	ldrb	w13, [x12], #1
  4580c4:	cmp	w8, #0x0
  4580c8:	cset	w14, eq  // eq = none
  4580cc:	cmp	w13, #0x22
  4580d0:	csel	w8, w14, w8, eq  // eq = none
  4580d4:	subs	x11, x11, #0x1
  4580d8:	strb	w13, [x9], #1
  4580dc:	b.ne	4580c0 <feof@plt+0x54820>  // b.any
  4580e0:	ldrh	w11, [x10, #4]
  4580e4:	cbz	x11, 458174 <feof@plt+0x548d4>
  4580e8:	add	x11, x21, x11, lsl #3
  4580ec:	ldp	x12, x14, [x11, #-8]
  4580f0:	mvn	x11, x12
  4580f4:	cmn	x14, x11
  4580f8:	b.eq	4580a0 <feof@plt+0x54800>  // b.none
  4580fc:	ldr	x11, [x19, #1312]
  458100:	mov	w13, wzr
  458104:	add	x11, x11, x12
  458108:	sub	x12, x12, x14
  45810c:	add	x12, x12, #0x1
  458110:	mov	x14, x11
  458114:	b	458134 <feof@plt+0x54894>
  458118:	strb	w16, [x9], #1
  45811c:	add	x3, x3, #0x1
  458120:	ldrb	w15, [x14], #1
  458124:	adds	x12, x12, #0x1
  458128:	add	x3, x3, #0x1
  45812c:	strb	w15, [x9], #1
  458130:	b.cs	4580a0 <feof@plt+0x54800>  // b.hs, b.nlast
  458134:	cbz	w8, 458120 <feof@plt+0x54880>
  458138:	ldrb	w15, [x14]
  45813c:	cmp	w15, #0x22
  458140:	b.ne	458164 <feof@plt+0x548c4>  // b.any
  458144:	cmp	x14, x11
  458148:	b.ls	458118 <feof@plt+0x54878>  // b.plast
  45814c:	ldurb	w15, [x14, #-1]
  458150:	cmp	w15, #0x5c
  458154:	b.eq	458118 <feof@plt+0x54878>  // b.none
  458158:	cmp	w13, #0x0
  45815c:	cset	w13, eq  // eq = none
  458160:	b	458118 <feof@plt+0x54878>
  458164:	cbz	w13, 458120 <feof@plt+0x54880>
  458168:	cmp	w15, #0x5c
  45816c:	b.eq	458118 <feof@plt+0x54878>  // b.none
  458170:	b	458120 <feof@plt+0x54880>
  458174:	mov	w8, #0xa                   	// #10
  458178:	strb	w8, [x9]
  45817c:	ldr	x2, [x22, #16]
  458180:	ldur	x1, [x29, #-72]
  458184:	mov	x0, x19
  458188:	bl	4520a0 <feof@plt+0x4e800>
  45818c:	stp	w25, wzr, [sp, #44]
  458190:	ldr	x8, [x19, #136]
  458194:	mov	w27, wzr
  458198:	str	wzr, [sp, #64]
  45819c:	str	x22, [x8, #32]
  4581a0:	b	4574ac <feof@plt+0x53c0c>
  4581a4:	ldrb	w8, [x20, #19]
  4581a8:	ldr	x28, [x20, #24]
  4581ac:	ldr	w22, [x20, #12]
  4581b0:	orr	w8, w8, #0x20
  4581b4:	strb	w8, [x20, #19]
  4581b8:	ldur	x1, [x29, #-72]
  4581bc:	mov	x0, x19
  4581c0:	mov	x2, x28
  4581c4:	mov	x3, x22
  4581c8:	bl	4520a0 <feof@plt+0x4e800>
  4581cc:	mov	w27, wzr
  4581d0:	str	wzr, [sp, #64]
  4581d4:	stp	w25, wzr, [sp, #44]
  4581d8:	b	4574ac <feof@plt+0x53c0c>
  4581dc:	mov	w22, #0x1                   	// #1
  4581e0:	ldp	x21, x1, [x29, #-72]
  4581e4:	cbz	x1, 4581f0 <feof@plt+0x54950>
  4581e8:	mov	x0, x19
  4581ec:	bl	44da70 <feof@plt+0x4a1d0>
  4581f0:	cmp	w20, #0x2
  4581f4:	b.ne	458218 <feof@plt+0x54978>  // b.any
  4581f8:	ldr	x5, [x21]
  4581fc:	ldur	w2, [x29, #-76]
  458200:	adrp	x4, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  458204:	add	x4, x4, #0x53f
  458208:	mov	w1, #0x3                   	// #3
  45820c:	mov	x0, x19
  458210:	mov	w3, wzr
  458214:	bl	4429b8 <feof@plt+0x3f118>
  458218:	mov	w0, w22
  45821c:	ldp	x20, x19, [sp, #240]
  458220:	ldp	x22, x21, [sp, #224]
  458224:	ldp	x24, x23, [sp, #208]
  458228:	ldp	x26, x25, [sp, #192]
  45822c:	ldp	x28, x27, [sp, #176]
  458230:	ldp	x29, x30, [sp, #160]
  458234:	add	sp, sp, #0x100
  458238:	ret
  45823c:	ldr	x8, [x19]
  458240:	mov	x0, x19
  458244:	mov	w1, wzr
  458248:	str	x22, [x8]
  45824c:	bl	43e344 <feof@plt+0x3aaa4>
  458250:	mov	w22, wzr
  458254:	b	4581e0 <feof@plt+0x54940>
  458258:	ldr	x8, [x19]
  45825c:	mov	w9, #0x1                   	// #1
  458260:	mov	w10, #0x18                  	// #24
  458264:	mov	w2, wzr
  458268:	strb	w9, [x8, #104]
  45826c:	ldr	x0, [x19, #40]
  458270:	ldr	w8, [x0, #12]
  458274:	ldr	x9, [x0]
  458278:	sub	w8, w8, #0x1
  45827c:	smaddl	x8, w8, w10, x9
  458280:	ldr	w9, [x0, #60]
  458284:	ldr	w10, [x8]
  458288:	ldrb	w11, [x8, #6]
  45828c:	ldr	w8, [x8, #16]
  458290:	sub	w9, w9, w10
  458294:	lsr	w9, w9, w11
  458298:	add	w8, w8, w9
  45829c:	add	w1, w8, #0x1
  4582a0:	bl	44ecdc <feof@plt+0x4b43c>
  4582a4:	mov	w22, wzr
  4582a8:	b	4581e0 <feof@plt+0x54940>
  4582ac:	stp	x29, x30, [sp, #-64]!
  4582b0:	stp	x22, x21, [sp, #32]
  4582b4:	stp	x20, x19, [sp, #48]
  4582b8:	str	x23, [sp, #16]
  4582bc:	ldr	x8, [x0, #40]
  4582c0:	ldr	x23, [x0]
  4582c4:	mov	x20, x1
  4582c8:	mov	x19, x0
  4582cc:	ldr	w22, [x8, #60]
  4582d0:	str	x1, [x23]
  4582d4:	ldr	x8, [x0, #136]
  4582d8:	mov	w21, w2
  4582dc:	mov	x29, sp
  4582e0:	ldr	x8, [x8, #8]
  4582e4:	cbz	x8, 458338 <feof@plt+0x54a98>
  4582e8:	mov	x8, x20
  4582ec:	ldrb	w9, [x8, #1]!
  4582f0:	cmp	w9, #0x2f
  4582f4:	cinc	x8, x8, eq  // eq = none
  4582f8:	b	458304 <feof@plt+0x54a64>
  4582fc:	cmp	w10, #0xa
  458300:	b.eq	4583a8 <feof@plt+0x54b08>  // b.none
  458304:	mov	x9, x8
  458308:	ldrb	w10, [x8], #1
  45830c:	cmp	w10, #0x2f
  458310:	b.ne	4582fc <feof@plt+0x54a5c>  // b.any
  458314:	ldurb	w10, [x9, #-1]
  458318:	cmp	w10, #0x2a
  45831c:	b.ne	458304 <feof@plt+0x54a64>  // b.any
  458320:	add	x8, x9, #0x1
  458324:	mov	w22, wzr
  458328:	str	x8, [x23]
  45832c:	ldrb	w8, [x19, #16]
  458330:	cbnz	w8, 4583d4 <feof@plt+0x54b34>
  458334:	b	458350 <feof@plt+0x54ab0>
  458338:	mov	x0, x19
  45833c:	bl	44953c <feof@plt+0x45c9c>
  458340:	tbnz	w0, #0, 4583ac <feof@plt+0x54b0c>
  458344:	mov	w22, wzr
  458348:	ldrb	w8, [x19, #16]
  45834c:	cbnz	w8, 4583d4 <feof@plt+0x54b34>
  458350:	ldrb	w8, [x19, #1123]
  458354:	cbnz	w8, 4583e0 <feof@plt+0x54b40>
  458358:	ldr	x8, [x23]
  45835c:	ldr	x0, [x19, #1328]
  458360:	mov	x1, x20
  458364:	sub	x21, x8, x20
  458368:	mov	x2, x21
  45836c:	bl	402fc0 <memcpy@plt>
  458370:	ldr	x8, [x19, #1328]
  458374:	add	x8, x8, x21
  458378:	str	x8, [x19, #1328]
  45837c:	cbz	w22, 4583fc <feof@plt+0x54b5c>
  458380:	add	x9, x8, #0x1
  458384:	mov	w10, #0x2a                  	// #42
  458388:	str	x9, [x19, #1328]
  45838c:	strb	w10, [x8]
  458390:	ldr	x8, [x19, #1328]
  458394:	mov	w9, #0x2f                  	// #47
  458398:	add	x10, x8, #0x1
  45839c:	str	x10, [x19, #1328]
  4583a0:	strb	w9, [x8]
  4583a4:	b	4583fc <feof@plt+0x54b5c>
  4583a8:	str	x9, [x23]
  4583ac:	adrp	x4, 4d5000 <_obstack_memory_used@@Base+0x592fc>
  4583b0:	add	x4, x4, #0x833
  4583b4:	mov	w1, #0x3                   	// #3
  4583b8:	mov	x0, x19
  4583bc:	mov	w2, w22
  4583c0:	mov	w3, wzr
  4583c4:	bl	4429b8 <feof@plt+0x3f118>
  4583c8:	mov	w22, #0x1                   	// #1
  4583cc:	ldrb	w8, [x19, #16]
  4583d0:	cbz	w8, 458350 <feof@plt+0x54ab0>
  4583d4:	cbz	w21, 4583f0 <feof@plt+0x54b50>
  4583d8:	ldrb	w8, [x19, #1124]
  4583dc:	cbz	w8, 458358 <feof@plt+0x54ab8>
  4583e0:	ldr	x8, [x19, #1328]
  4583e4:	sub	x8, x8, #0x1
  4583e8:	str	x8, [x19, #1328]
  4583ec:	b	4583fc <feof@plt+0x54b5c>
  4583f0:	ldr	x8, [x19, #1328]
  4583f4:	mov	w9, #0x20                  	// #32
  4583f8:	sturb	w9, [x8, #-1]
  4583fc:	ldr	x0, [x23]
  458400:	ldp	x20, x19, [sp, #48]
  458404:	ldp	x22, x21, [sp, #32]
  458408:	ldr	x23, [sp, #16]
  45840c:	ldp	x29, x30, [sp], #64
  458410:	ret
  458414:	stp	x29, x30, [sp, #-64]!
  458418:	stp	x24, x23, [sp, #16]
  45841c:	stp	x22, x21, [sp, #32]
  458420:	stp	x20, x19, [sp, #48]
  458424:	ldr	x8, [x0, #1328]
  458428:	ldr	x9, [x0, #1312]
  45842c:	ldrh	w10, [x1, #16]
  458430:	mov	x19, x1
  458434:	mov	x21, x0
  458438:	sub	x20, x8, x9
  45843c:	mov	x29, sp
  458440:	cbz	w10, 4584d4 <feof@plt+0x54c34>
  458444:	mov	x23, x21
  458448:	ldr	w8, [x19, #12]
  45844c:	ldr	x9, [x23, #56]!
  458450:	add	x11, x20, #0xd
  458454:	and	x24, x11, #0xfffffffffffffff8
  458458:	mov	w22, w2
  45845c:	ldp	x9, x10, [x9, #16]
  458460:	add	x2, x24, x8
  458464:	sub	x10, x10, x9
  458468:	cmp	x2, x10
  45846c:	b.ls	458488 <feof@plt+0x54be8>  // b.plast
  458470:	mov	x0, x21
  458474:	mov	x1, x23
  458478:	bl	44dc10 <feof@plt+0x4a370>
  45847c:	ldr	x8, [x21, #56]
  458480:	ldr	x9, [x8, #16]
  458484:	ldr	w8, [x19, #12]
  458488:	add	x8, x9, x8
  45848c:	str	x9, [x19, #24]
  458490:	str	w20, [x8]
  458494:	strh	w22, [x8, #4]
  458498:	ldr	x1, [x21, #1312]
  45849c:	add	x0, x8, #0x6
  4584a0:	mov	x2, x20
  4584a4:	bl	402fc0 <memcpy@plt>
  4584a8:	ldr	x8, [x21, #1312]
  4584ac:	str	x8, [x21, #1328]
  4584b0:	ldr	w8, [x19, #12]
  4584b4:	add	w8, w8, w24
  4584b8:	str	w8, [x19, #12]
  4584bc:	cbnz	w22, 458500 <feof@plt+0x54c60>
  4584c0:	ldr	x9, [x23]
  4584c4:	ldr	x10, [x9, #16]
  4584c8:	add	x8, x10, w8, uxtw
  4584cc:	str	x8, [x9, #16]
  4584d0:	b	458500 <feof@plt+0x54c60>
  4584d4:	add	x1, x20, #0x1
  4584d8:	mov	x0, x21
  4584dc:	bl	44d230 <feof@plt+0x49990>
  4584e0:	ldr	x1, [x21, #1312]
  4584e4:	mov	x2, x20
  4584e8:	mov	x21, x0
  4584ec:	bl	402fc0 <memcpy@plt>
  4584f0:	mov	w8, #0xa                   	// #10
  4584f4:	strb	w8, [x21, x20]
  4584f8:	str	x21, [x19, #24]
  4584fc:	str	w20, [x19, #12]
  458500:	ldp	x20, x19, [sp, #48]
  458504:	ldp	x22, x21, [sp, #32]
  458508:	ldp	x24, x23, [sp, #16]
  45850c:	ldp	x29, x30, [sp], #64
  458510:	ret
  458514:	ldrb	w9, [x0, #19]
  458518:	mov	x8, x0
  45851c:	tbz	w9, #2, 458570 <feof@plt+0x54cd0>
  458520:	ldrh	w9, [x8, #16]
  458524:	cbz	w9, 458570 <feof@plt+0x54cd0>
  458528:	ldr	x9, [x8, #24]
  45852c:	ldrh	w11, [x9, #4]
  458530:	ldr	w0, [x9]
  458534:	cbz	w11, 45856c <feof@plt+0x54ccc>
  458538:	ldr	x8, [x8]
  45853c:	mov	x10, x0
  458540:	add	x11, x8, w11, uxth #3
  458544:	ldur	x11, [x11, #-8]
  458548:	add	x10, x10, #0xd
  45854c:	and	x10, x10, #0x1fffffff8
  458550:	add	x9, x9, x10
  458554:	ldr	w12, [x11, #8]
  458558:	ldr	w10, [x9]
  45855c:	ldrh	w11, [x9, #4]
  458560:	add	x12, x0, x12
  458564:	add	x0, x12, x10
  458568:	cbnz	w11, 458540 <feof@plt+0x54ca0>
  45856c:	ret
  458570:	ldr	w0, [x8, #12]
  458574:	ret
  458578:	stp	x29, x30, [sp, #-48]!
  45857c:	stp	x22, x21, [sp, #16]
  458580:	stp	x20, x19, [sp, #32]
  458584:	ldrb	w8, [x0, #19]
  458588:	mov	x19, x0
  45858c:	mov	x20, x1
  458590:	mov	x29, sp
  458594:	tbz	w8, #2, 458600 <feof@plt+0x54d60>
  458598:	ldrh	w8, [x19, #16]
  45859c:	cbz	w8, 458600 <feof@plt+0x54d60>
  4585a0:	ldr	x21, [x19, #24]
  4585a4:	ldr	w2, [x21]
  4585a8:	add	x1, x21, #0x6
  4585ac:	mov	x0, x20
  4585b0:	bl	402fc0 <memcpy@plt>
  4585b4:	ldr	w9, [x21]
  4585b8:	ldrh	w8, [x21, #4]
  4585bc:	add	x20, x20, x9
  4585c0:	cbz	w8, 458618 <feof@plt+0x54d78>
  4585c4:	ldr	x9, [x19]
  4585c8:	mov	x0, x20
  4585cc:	add	x8, x9, w8, uxth #3
  4585d0:	ldur	x22, [x8, #-8]
  4585d4:	ldr	x1, [x22]
  4585d8:	ldr	w2, [x22, #8]
  4585dc:	bl	402fc0 <memcpy@plt>
  4585e0:	ldr	w8, [x21]
  4585e4:	ldr	w9, [x22, #8]
  4585e8:	add	x8, x8, #0xd
  4585ec:	and	x8, x8, #0x1fffffff8
  4585f0:	add	x21, x21, x8
  4585f4:	ldr	w2, [x21]
  4585f8:	add	x20, x20, x9
  4585fc:	b	4585a8 <feof@plt+0x54d08>
  458600:	ldr	x1, [x19, #24]
  458604:	ldr	w2, [x19, #12]
  458608:	mov	x0, x20
  45860c:	bl	402fc0 <memcpy@plt>
  458610:	ldr	w8, [x19, #12]
  458614:	add	x20, x20, x8
  458618:	mov	x0, x20
  45861c:	ldp	x20, x19, [sp, #32]
  458620:	ldp	x22, x21, [sp, #16]
  458624:	ldp	x29, x30, [sp], #48
  458628:	ret
  45862c:	stp	x29, x30, [sp, #-80]!
  458630:	stp	x24, x23, [sp, #32]
  458634:	stp	x22, x21, [sp, #48]
  458638:	stp	x20, x19, [sp, #64]
  45863c:	ldr	x8, [x0, #1312]
  458640:	ldr	x9, [x0]
  458644:	ldr	x24, [x0, #136]
  458648:	mov	x19, x0
  45864c:	str	x8, [x0, #1328]
  458650:	ldr	x9, [x9]
  458654:	str	x25, [sp, #16]
  458658:	mov	x29, sp
  45865c:	str	x9, [x24, #16]
  458660:	ldr	x8, [x0]
  458664:	ldr	x10, [x8, #32]
  458668:	str	x10, [x24, #24]
  45866c:	ldr	x11, [x0, #1320]
  458670:	ldr	x8, [x0, #1328]
  458674:	sub	x10, x10, x9
  458678:	add	x10, x10, #0x3
  45867c:	sub	x11, x11, x8
  458680:	cmp	x10, x11
  458684:	b.ls	4586bc <feof@plt+0x54e1c>  // b.plast
  458688:	ldr	x0, [x19, #1312]
  45868c:	sub	x21, x8, x0
  458690:	add	x8, x21, x10
  458694:	add	x8, x8, x8, lsl #1
  458698:	lsr	x20, x8, #1
  45869c:	mov	x1, x20
  4586a0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  4586a4:	add	x9, x0, x20
  4586a8:	add	x8, x0, x21
  4586ac:	str	x0, [x19, #1312]
  4586b0:	str	x9, [x19, #1320]
  4586b4:	str	x8, [x19, #1328]
  4586b8:	ldr	x9, [x24, #16]
  4586bc:	ldrb	w9, [x9]
  4586c0:	adrp	x23, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  4586c4:	add	x23, x23, #0x4a2
  4586c8:	mov	w20, wzr
  4586cc:	cmp	w9, #0x28
  4586d0:	b.ne	458810 <feof@plt+0x54f70>  // b.any
  4586d4:	ldr	x9, [x19, #136]
  4586d8:	mov	w21, #0x204                 	// #516
  4586dc:	ldr	x9, [x9, #16]
  4586e0:	add	x1, x9, #0x1
  4586e4:	b	4586fc <feof@plt+0x54e5c>
  4586e8:	sub	x8, x8, #0x1
  4586ec:	str	x8, [x19, #1328]
  4586f0:	ldurb	w9, [x1, #-1]
  4586f4:	cmp	w9, #0x2c
  4586f8:	b.ne	45881c <feof@plt+0x54f7c>  // b.any
  4586fc:	mov	x22, x1
  458700:	ldrb	w10, [x1], #1
  458704:	mov	x9, x8
  458708:	ldrh	w11, [x23, x10, lsl #1]
  45870c:	strb	w10, [x8], #1
  458710:	tbnz	w11, #11, 4586fc <feof@plt+0x54e5c>
  458714:	cmp	w10, #0x2f
  458718:	b.ne	458744 <feof@plt+0x54ea4>  // b.any
  45871c:	ldrb	w10, [x1]
  458720:	cmp	w10, #0x2a
  458724:	b.ne	458744 <feof@plt+0x54ea4>  // b.any
  458728:	mov	x0, x19
  45872c:	mov	w2, wzr
  458730:	str	x8, [x19, #1328]
  458734:	bl	4582ac <feof@plt+0x54a0c>
  458738:	ldr	x8, [x19, #1328]
  45873c:	mov	x1, x0
  458740:	b	4586fc <feof@plt+0x54e5c>
  458744:	str	x9, [x19, #1328]
  458748:	ldrb	w8, [x22]
  45874c:	ldrh	w10, [x23, x8, lsl #1]
  458750:	tbnz	w10, #9, 458764 <feof@plt+0x54ec4>
  458754:	cmp	w8, #0x24
  458758:	b.ne	45882c <feof@plt+0x54f8c>  // b.any
  45875c:	ldrb	w10, [x19, #1146]
  458760:	cbz	w10, 45889c <feof@plt+0x54ffc>
  458764:	mov	x10, xzr
  458768:	add	x11, x22, x10
  45876c:	strb	w8, [x9, x10]
  458770:	ldrb	w8, [x11, #1]
  458774:	add	x10, x10, #0x1
  458778:	ldrh	w11, [x23, x8, lsl #1]
  45877c:	tst	w11, w21
  458780:	b.ne	458768 <feof@plt+0x54ec8>  // b.any
  458784:	ldr	x8, [x19, #136]
  458788:	add	x11, x22, x10
  45878c:	add	x25, x9, x10
  458790:	mov	w3, #0x1                   	// #1
  458794:	str	x11, [x8, #16]
  458798:	ldr	x1, [x19, #1328]
  45879c:	ldr	x0, [x19, #1088]
  4587a0:	sub	x2, x25, x1
  4587a4:	bl	456b40 <feof@plt+0x532a0>
  4587a8:	mov	x2, x0
  4587ac:	mov	x0, x19
  4587b0:	mov	w1, w20
  4587b4:	mov	x3, x2
  4587b8:	str	x25, [x19, #1328]
  4587bc:	bl	452ae0 <feof@plt+0x4f240>
  4587c0:	tbz	w0, #0, 45889c <feof@plt+0x54ffc>
  4587c4:	ldr	x8, [x19, #136]
  4587c8:	add	w20, w20, #0x1
  4587cc:	ldr	x1, [x8, #16]
  4587d0:	ldr	x8, [x19, #1328]
  4587d4:	ldrb	w9, [x1], #1
  4587d8:	ldrh	w10, [x23, x9, lsl #1]
  4587dc:	strb	w9, [x8], #1
  4587e0:	tbnz	w10, #11, 4587d4 <feof@plt+0x54f34>
  4587e4:	cmp	w9, #0x2f
  4587e8:	b.ne	4586e8 <feof@plt+0x54e48>  // b.any
  4587ec:	ldrb	w9, [x1]
  4587f0:	cmp	w9, #0x2a
  4587f4:	b.ne	4586e8 <feof@plt+0x54e48>  // b.any
  4587f8:	mov	x0, x19
  4587fc:	mov	w2, wzr
  458800:	str	x8, [x19, #1328]
  458804:	bl	4582ac <feof@plt+0x54a0c>
  458808:	mov	x1, x0
  45880c:	b	4587d0 <feof@plt+0x54f30>
  458810:	mov	w25, wzr
  458814:	mov	x22, xzr
  458818:	b	458860 <feof@plt+0x54fc0>
  45881c:	sub	x22, x1, #0x1
  458820:	cmp	w9, #0x29
  458824:	b.eq	45883c <feof@plt+0x54f9c>  // b.none
  458828:	b	45889c <feof@plt+0x54ffc>
  45882c:	cbnz	w20, 45889c <feof@plt+0x54ffc>
  458830:	cmp	w8, #0x29
  458834:	b.ne	45889c <feof@plt+0x54ffc>  // b.any
  458838:	mov	w20, wzr
  45883c:	ldr	x8, [x19, #136]
  458840:	mov	w10, w20
  458844:	add	x9, x22, #0x1
  458848:	lsl	x1, x10, #3
  45884c:	mov	x0, x19
  458850:	str	x9, [x8, #16]
  458854:	bl	44de04 <feof@plt+0x4a564>
  458858:	mov	x22, x0
  45885c:	mov	w25, #0x4                   	// #4
  458860:	mov	w1, #0x30                  	// #48
  458864:	mov	x0, x19
  458868:	bl	44dd1c <feof@plt+0x4a47c>
  45886c:	mov	x2, x0
  458870:	mov	w1, #0x2                   	// #2
  458874:	mov	x0, x19
  458878:	bl	452c34 <feof@plt+0x4f394>
  45887c:	ldrb	w8, [x0, #19]
  458880:	mov	x21, x0
  458884:	str	x22, [x0]
  458888:	strh	w20, [x0, #16]
  45888c:	and	w8, w8, #0xfffffffb
  458890:	orr	w8, w8, w25
  458894:	strb	w8, [x0, #19]
  458898:	b	4588cc <feof@plt+0x5502c>
  45889c:	adrp	x2, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4588a0:	add	x2, x2, #0xc29
  4588a4:	mov	w1, #0x3                   	// #3
  4588a8:	mov	x0, x19
  4588ac:	bl	4424f8 <feof@plt+0x3ec58>
  4588b0:	mov	x8, x22
  4588b4:	ldrb	w9, [x8], #1
  4588b8:	ldr	x10, [x19, #136]
  4588bc:	mov	x21, xzr
  4588c0:	cmp	w9, #0x29
  4588c4:	csel	x8, x22, x8, ne  // ne = any
  4588c8:	str	x8, [x10, #16]
  4588cc:	ldr	x1, [x24, #16]
  4588d0:	ldrb	w22, [x19, #1124]
  4588d4:	ldr	x8, [x19, #1328]
  4588d8:	mov	x9, x1
  4588dc:	ldrb	w11, [x1], #1
  4588e0:	mov	x10, x8
  4588e4:	ldrh	w12, [x23, x11, lsl #1]
  4588e8:	strb	w11, [x8], #1
  4588ec:	tbnz	w12, #11, 4588d8 <feof@plt+0x55038>
  4588f0:	cmp	w11, #0x2f
  4588f4:	b.ne	458924 <feof@plt+0x55084>  // b.any
  4588f8:	cbz	w22, 458924 <feof@plt+0x55084>
  4588fc:	ldrb	w11, [x1]
  458900:	cmp	w11, #0x2a
  458904:	b.ne	458924 <feof@plt+0x55084>  // b.any
  458908:	mov	x0, x19
  45890c:	mov	w2, wzr
  458910:	str	x8, [x19, #1328]
  458914:	bl	4582ac <feof@plt+0x54a0c>
  458918:	ldr	x8, [x19, #1328]
  45891c:	mov	x1, x0
  458920:	b	4588d8 <feof@plt+0x55038>
  458924:	ldr	x8, [x19]
  458928:	str	x10, [x19, #1328]
  45892c:	mov	x0, x19
  458930:	mov	x1, x21
  458934:	str	x9, [x8]
  458938:	ldrb	w8, [x19, #24]
  45893c:	mov	w2, wzr
  458940:	add	w8, w8, #0x1
  458944:	strb	w8, [x19, #24]
  458948:	bl	4573f8 <feof@plt+0x53b58>
  45894c:	ldrb	w8, [x19, #24]
  458950:	mov	x0, x19
  458954:	mov	w1, w20
  458958:	sub	w8, w8, #0x1
  45895c:	strb	w8, [x19, #24]
  458960:	bl	452bf0 <feof@plt+0x4f350>
  458964:	cbz	x21, 4589a4 <feof@plt+0x55104>
  458968:	ldr	x8, [x19, #1312]
  45896c:	ldr	x10, [x19, #1328]
  458970:	mov	x9, x10
  458974:	cmp	x10, x8
  458978:	b.ls	458990 <feof@plt+0x550f0>  // b.plast
  45897c:	mov	x10, x9
  458980:	ldrb	w11, [x10, #-1]!
  458984:	ldrh	w11, [x23, x11, lsl #1]
  458988:	tst	w11, #0xc00
  45898c:	b.ne	458970 <feof@plt+0x550d0>  // b.any
  458990:	mov	x0, x19
  458994:	mov	x1, x21
  458998:	mov	w2, wzr
  45899c:	str	x9, [x19, #1328]
  4589a0:	bl	458414 <feof@plt+0x54b74>
  4589a4:	mov	x0, x21
  4589a8:	ldp	x20, x19, [sp, #64]
  4589ac:	ldp	x22, x21, [sp, #48]
  4589b0:	ldp	x24, x23, [sp, #32]
  4589b4:	ldr	x25, [sp, #16]
  4589b8:	ldp	x29, x30, [sp], #80
  4589bc:	ret
  4589c0:	stp	x29, x30, [sp, #-96]!
  4589c4:	stp	x26, x25, [sp, #32]
  4589c8:	stp	x24, x23, [sp, #48]
  4589cc:	stp	x22, x21, [sp, #64]
  4589d0:	stp	x20, x19, [sp, #80]
  4589d4:	ldr	w8, [x0, #12]
  4589d8:	ldr	w9, [x1, #12]
  4589dc:	mov	x19, x0
  4589e0:	str	x27, [sp, #16]
  4589e4:	mov	x29, sp
  4589e8:	add	w0, w9, w8
  4589ec:	mov	x21, x1
  4589f0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4589f4:	ldr	w8, [x19, #12]
  4589f8:	ldrh	w9, [x19, #16]
  4589fc:	ldr	x22, [x19, #24]
  458a00:	mov	x19, x0
  458a04:	add	x20, x0, x8
  458a08:	cbz	w9, 458c18 <feof@plt+0x55378>
  458a0c:	ldr	x21, [x21, #24]
  458a10:	mov	x25, x22
  458a14:	ldrh	w8, [x25, #4]!
  458a18:	ldrh	w9, [x21, #4]
  458a1c:	cmp	w8, w9
  458a20:	b.ne	458dc8 <feof@plt+0x55528>  // b.any
  458a24:	adrp	x23, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  458a28:	mov	w26, wzr
  458a2c:	mov	w27, wzr
  458a30:	add	x23, x23, #0x4a2
  458a34:	mov	w24, #0x20                  	// #32
  458a38:	ldr	w9, [x22]
  458a3c:	cbz	w9, 458af4 <feof@plt+0x55254>
  458a40:	add	x10, x22, #0x6
  458a44:	mov	x8, x19
  458a48:	b	458a68 <feof@plt+0x551c8>
  458a4c:	mov	w12, w27
  458a50:	add	x10, x10, #0x1
  458a54:	sub	x9, x9, #0x1
  458a58:	mov	w27, w12
  458a5c:	strb	w11, [x8]
  458a60:	add	x8, x8, #0x1
  458a64:	cbz	x9, 458af8 <feof@plt+0x55258>
  458a68:	ldrb	w11, [x10]
  458a6c:	tst	w27, #0xff
  458a70:	b.ne	458ab0 <feof@plt+0x55210>  // b.any
  458a74:	ldrh	w12, [x23, x11, lsl #1]
  458a78:	and	w12, w12, #0xc00
  458a7c:	cbz	w12, 458ab0 <feof@plt+0x55210>
  458a80:	add	x11, x10, x9
  458a84:	sub	x13, x9, #0x1
  458a88:	mov	x9, x13
  458a8c:	cbz	x13, 458ad8 <feof@plt+0x55238>
  458a90:	ldrb	w12, [x10, #1]
  458a94:	ldrh	w13, [x23, x12, lsl #1]
  458a98:	add	x12, x10, #0x1
  458a9c:	mov	x10, x12
  458aa0:	and	w14, w13, #0xc00
  458aa4:	sub	x13, x9, #0x1
  458aa8:	cbnz	w14, 458a88 <feof@plt+0x551e8>
  458aac:	b	458adc <feof@plt+0x5523c>
  458ab0:	cmp	w11, #0x27
  458ab4:	b.eq	458ac0 <feof@plt+0x55220>  // b.none
  458ab8:	cmp	w11, #0x22
  458abc:	b.ne	458a4c <feof@plt+0x551ac>  // b.any
  458ac0:	tst	w27, #0xff
  458ac4:	mov	w12, w11
  458ac8:	b.eq	458a50 <feof@plt+0x551b0>  // b.none
  458acc:	cmp	w11, w27, uxtb
  458ad0:	csel	w12, wzr, w27, eq  // eq = none
  458ad4:	b	458a50 <feof@plt+0x551b0>
  458ad8:	mov	x12, x11
  458adc:	mov	w27, wzr
  458ae0:	strb	w24, [x8]
  458ae4:	mov	x10, x12
  458ae8:	add	x8, x8, #0x1
  458aec:	cbnz	x9, 458a68 <feof@plt+0x551c8>
  458af0:	b	458af8 <feof@plt+0x55258>
  458af4:	mov	x8, x19
  458af8:	ldr	w9, [x21]
  458afc:	sub	x2, x8, x19
  458b00:	cbz	w9, 458bb8 <feof@plt+0x55318>
  458b04:	add	x10, x21, #0x6
  458b08:	mov	x8, x20
  458b0c:	b	458b2c <feof@plt+0x5528c>
  458b10:	mov	w12, w26
  458b14:	add	x10, x10, #0x1
  458b18:	sub	x9, x9, #0x1
  458b1c:	mov	w26, w12
  458b20:	strb	w11, [x8]
  458b24:	add	x8, x8, #0x1
  458b28:	cbz	x9, 458bbc <feof@plt+0x5531c>
  458b2c:	ldrb	w11, [x10]
  458b30:	tst	w26, #0xff
  458b34:	b.ne	458b74 <feof@plt+0x552d4>  // b.any
  458b38:	ldrh	w12, [x23, x11, lsl #1]
  458b3c:	and	w12, w12, #0xc00
  458b40:	cbz	w12, 458b74 <feof@plt+0x552d4>
  458b44:	add	x11, x10, x9
  458b48:	sub	x13, x9, #0x1
  458b4c:	mov	x9, x13
  458b50:	cbz	x13, 458b9c <feof@plt+0x552fc>
  458b54:	ldrb	w12, [x10, #1]
  458b58:	ldrh	w13, [x23, x12, lsl #1]
  458b5c:	add	x12, x10, #0x1
  458b60:	mov	x10, x12
  458b64:	and	w14, w13, #0xc00
  458b68:	sub	x13, x9, #0x1
  458b6c:	cbnz	w14, 458b4c <feof@plt+0x552ac>
  458b70:	b	458ba0 <feof@plt+0x55300>
  458b74:	cmp	w11, #0x27
  458b78:	b.eq	458b84 <feof@plt+0x552e4>  // b.none
  458b7c:	cmp	w11, #0x22
  458b80:	b.ne	458b10 <feof@plt+0x55270>  // b.any
  458b84:	tst	w26, #0xff
  458b88:	mov	w12, w11
  458b8c:	b.eq	458b14 <feof@plt+0x55274>  // b.none
  458b90:	cmp	w11, w26, uxtb
  458b94:	csel	w12, wzr, w26, eq  // eq = none
  458b98:	b	458b14 <feof@plt+0x55274>
  458b9c:	mov	x12, x11
  458ba0:	mov	w26, wzr
  458ba4:	strb	w24, [x8]
  458ba8:	mov	x10, x12
  458bac:	add	x8, x8, #0x1
  458bb0:	cbnz	x9, 458b2c <feof@plt+0x5528c>
  458bb4:	b	458bbc <feof@plt+0x5531c>
  458bb8:	mov	x8, x20
  458bbc:	sub	x8, x8, x20
  458bc0:	cmp	x2, x8
  458bc4:	b.ne	458dc8 <feof@plt+0x55528>  // b.any
  458bc8:	mov	x0, x19
  458bcc:	mov	x1, x20
  458bd0:	bl	403840 <bcmp@plt>
  458bd4:	cbnz	w0, 458dc8 <feof@plt+0x55528>
  458bd8:	ldrh	w8, [x25]
  458bdc:	cbz	w8, 458df4 <feof@plt+0x55554>
  458be0:	ldr	w8, [x22]
  458be4:	ldr	w9, [x21]
  458be8:	add	x8, x8, #0xd
  458bec:	add	x9, x9, #0xd
  458bf0:	and	x8, x8, #0x1fffffff8
  458bf4:	and	x9, x9, #0x1fffffff8
  458bf8:	add	x22, x22, x8
  458bfc:	add	x21, x21, x9
  458c00:	mov	x25, x22
  458c04:	ldrh	w8, [x25, #4]!
  458c08:	ldrh	w9, [x21, #4]
  458c0c:	cmp	w8, w9
  458c10:	b.eq	458a38 <feof@plt+0x55198>  // b.none
  458c14:	b	458dc8 <feof@plt+0x55528>
  458c18:	mov	x9, x19
  458c1c:	cbz	w8, 458cd8 <feof@plt+0x55438>
  458c20:	adrp	x10, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  458c24:	mov	w12, wzr
  458c28:	add	x10, x10, #0x4a2
  458c2c:	mov	w11, #0x20                  	// #32
  458c30:	mov	x9, x19
  458c34:	b	458c54 <feof@plt+0x553b4>
  458c38:	mov	w14, w12
  458c3c:	add	x22, x22, #0x1
  458c40:	sub	x8, x8, #0x1
  458c44:	strb	w13, [x9]
  458c48:	add	x9, x9, #0x1
  458c4c:	mov	w12, w14
  458c50:	cbz	x8, 458cd8 <feof@plt+0x55438>
  458c54:	ldrb	w13, [x22]
  458c58:	tst	w12, #0xff
  458c5c:	b.ne	458c9c <feof@plt+0x553fc>  // b.any
  458c60:	ldrh	w14, [x10, x13, lsl #1]
  458c64:	and	w14, w14, #0xc00
  458c68:	cbz	w14, 458c9c <feof@plt+0x553fc>
  458c6c:	add	x12, x22, x8
  458c70:	sub	x14, x8, #0x1
  458c74:	mov	x8, x14
  458c78:	cbz	x14, 458cc4 <feof@plt+0x55424>
  458c7c:	ldrb	w13, [x22, #1]
  458c80:	ldrh	w14, [x10, x13, lsl #1]
  458c84:	add	x13, x22, #0x1
  458c88:	mov	x22, x13
  458c8c:	and	w15, w14, #0xc00
  458c90:	sub	x14, x8, #0x1
  458c94:	cbnz	w15, 458c74 <feof@plt+0x553d4>
  458c98:	b	458cc8 <feof@plt+0x55428>
  458c9c:	cmp	w13, #0x27
  458ca0:	b.eq	458cac <feof@plt+0x5540c>  // b.none
  458ca4:	cmp	w13, #0x22
  458ca8:	b.ne	458c38 <feof@plt+0x55398>  // b.any
  458cac:	tst	w12, #0xff
  458cb0:	mov	w14, w13
  458cb4:	b.eq	458c3c <feof@plt+0x5539c>  // b.none
  458cb8:	cmp	w13, w12, uxtb
  458cbc:	csel	w14, wzr, w12, eq  // eq = none
  458cc0:	b	458c3c <feof@plt+0x5539c>
  458cc4:	mov	x13, x12
  458cc8:	mov	w14, wzr
  458ccc:	strb	w11, [x9]
  458cd0:	mov	x22, x13
  458cd4:	b	458c48 <feof@plt+0x553a8>
  458cd8:	ldr	w8, [x21, #12]
  458cdc:	sub	x2, x9, x19
  458ce0:	mov	x9, x20
  458ce4:	cbz	w8, 458da4 <feof@plt+0x55504>
  458ce8:	ldr	x12, [x21, #24]
  458cec:	adrp	x10, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  458cf0:	mov	w13, wzr
  458cf4:	add	x10, x10, #0x4a2
  458cf8:	mov	w11, #0x20                  	// #32
  458cfc:	mov	x9, x20
  458d00:	b	458d20 <feof@plt+0x55480>
  458d04:	mov	w15, w13
  458d08:	add	x12, x12, #0x1
  458d0c:	sub	x8, x8, #0x1
  458d10:	strb	w14, [x9]
  458d14:	add	x9, x9, #0x1
  458d18:	mov	w13, w15
  458d1c:	cbz	x8, 458da4 <feof@plt+0x55504>
  458d20:	ldrb	w14, [x12]
  458d24:	tst	w13, #0xff
  458d28:	b.ne	458d68 <feof@plt+0x554c8>  // b.any
  458d2c:	ldrh	w15, [x10, x14, lsl #1]
  458d30:	and	w15, w15, #0xc00
  458d34:	cbz	w15, 458d68 <feof@plt+0x554c8>
  458d38:	add	x13, x12, x8
  458d3c:	sub	x15, x8, #0x1
  458d40:	mov	x8, x15
  458d44:	cbz	x15, 458d90 <feof@plt+0x554f0>
  458d48:	ldrb	w14, [x12, #1]
  458d4c:	ldrh	w15, [x10, x14, lsl #1]
  458d50:	add	x14, x12, #0x1
  458d54:	mov	x12, x14
  458d58:	and	w16, w15, #0xc00
  458d5c:	sub	x15, x8, #0x1
  458d60:	cbnz	w16, 458d40 <feof@plt+0x554a0>
  458d64:	b	458d94 <feof@plt+0x554f4>
  458d68:	cmp	w14, #0x27
  458d6c:	b.eq	458d78 <feof@plt+0x554d8>  // b.none
  458d70:	cmp	w14, #0x22
  458d74:	b.ne	458d04 <feof@plt+0x55464>  // b.any
  458d78:	tst	w13, #0xff
  458d7c:	mov	w15, w14
  458d80:	b.eq	458d08 <feof@plt+0x55468>  // b.none
  458d84:	cmp	w14, w13, uxtb
  458d88:	csel	w15, wzr, w13, eq  // eq = none
  458d8c:	b	458d08 <feof@plt+0x55468>
  458d90:	mov	x14, x13
  458d94:	mov	w15, wzr
  458d98:	strb	w11, [x9]
  458d9c:	mov	x12, x14
  458da0:	b	458d14 <feof@plt+0x55474>
  458da4:	sub	x8, x9, x20
  458da8:	cmp	x2, x8
  458dac:	b.ne	458dc8 <feof@plt+0x55528>  // b.any
  458db0:	mov	x0, x19
  458db4:	mov	x1, x20
  458db8:	bl	403840 <bcmp@plt>
  458dbc:	cmp	w0, #0x0
  458dc0:	cset	w20, ne  // ne = any
  458dc4:	b	458dcc <feof@plt+0x5552c>
  458dc8:	mov	w20, #0x1                   	// #1
  458dcc:	mov	x0, x19
  458dd0:	bl	4031d0 <free@plt>
  458dd4:	mov	w0, w20
  458dd8:	ldp	x20, x19, [sp, #80]
  458ddc:	ldp	x22, x21, [sp, #64]
  458de0:	ldp	x24, x23, [sp, #48]
  458de4:	ldp	x26, x25, [sp, #32]
  458de8:	ldr	x27, [sp, #16]
  458dec:	ldp	x29, x30, [sp], #96
  458df0:	ret
  458df4:	mov	w20, wzr
  458df8:	b	458dcc <feof@plt+0x5552c>
  458dfc:	sxtw	x8, w1
  458e00:	sbfiz	x9, x1, #4, #32
  458e04:	adrp	x10, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  458e08:	add	x10, x10, #0xc82
  458e0c:	sub	x8, x9, x8
  458e10:	add	x8, x10, x8
  458e14:	ldrb	w9, [x8]
  458e18:	ldrb	w11, [x8, #1]
  458e1c:	ldrb	w12, [x8, #2]
  458e20:	add	x10, x0, #0x48d
  458e24:	strb	w9, [x0, #1152]
  458e28:	ldrb	w9, [x8, #3]
  458e2c:	strb	w11, [x0, #1120]
  458e30:	ldrb	w11, [x8, #4]
  458e34:	strb	w12, [x0, #1127]
  458e38:	ldrb	w12, [x8, #5]
  458e3c:	strb	w9, [x0, #1147]
  458e40:	ldrb	w9, [x8, #6]
  458e44:	strb	w11, [x0, #1164]
  458e48:	ldrb	w11, [x8, #7]
  458e4c:	strb	w12, [x0, #1153]
  458e50:	ldrb	w12, [x8, #8]
  458e54:	strb	w9, [x0, #1126]
  458e58:	ldrb	w9, [x8, #9]
  458e5c:	strb	w11, [x0, #1128]
  458e60:	ldrh	w11, [x8, #10]
  458e64:	strb	w12, [x0, #1130]
  458e68:	ldrb	w12, [x8, #12]
  458e6c:	strb	w9, [x0, #1161]
  458e70:	ldrb	w9, [x8, #13]
  458e74:	ldrb	w8, [x8, #14]
  458e78:	str	w1, [x0, #1116]
  458e7c:	strh	w11, [x10]
  458e80:	strb	w12, [x0, #1125]
  458e84:	strb	w9, [x0, #1129]
  458e88:	strb	w8, [x0, #1167]
  458e8c:	ret
  458e90:	stp	x29, x30, [sp, #-64]!
  458e94:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  458e98:	ldrb	w9, [x8, #712]
  458e9c:	stp	x22, x21, [sp, #32]
  458ea0:	stp	x20, x19, [sp, #48]
  458ea4:	mov	x21, x2
  458ea8:	mov	x19, x1
  458eac:	mov	w22, w0
  458eb0:	stp	x24, x23, [sp, #16]
  458eb4:	mov	x29, sp
  458eb8:	tbnz	w9, #0, 458f1c <feof@plt+0x5567c>
  458ebc:	mov	w9, #0x1                   	// #1
  458ec0:	strb	w9, [x8, #712]
  458ec4:	bl	448d98 <feof@plt+0x454f8>
  458ec8:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  458ecc:	adrp	x0, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  458ed0:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  458ed4:	add	x8, x8, #0x1e9
  458ed8:	mov	w9, #0x5d                  	// #93
  458edc:	mov	w10, #0x7c                  	// #124
  458ee0:	mov	w11, #0x5b5e                	// #23390
  458ee4:	mov	w12, #0x7d                  	// #125
  458ee8:	mov	w13, #0x5c                  	// #92
  458eec:	mov	w14, #0x237b                	// #9083
  458ef0:	mov	w15, #0x7e                  	// #126
  458ef4:	add	x0, x0, #0x347
  458ef8:	add	x1, x1, #0x637
  458efc:	strb	w9, [x8, #8]
  458f00:	strb	w10, [x8]
  458f04:	strh	w11, [x8, #6]
  458f08:	strb	w12, [x8, #29]
  458f0c:	strb	w13, [x8, #14]
  458f10:	sturh	w14, [x8, #27]
  458f14:	strb	w15, [x8, #12]
  458f18:	bl	403040 <bindtextdomain@plt>
  458f1c:	mov	w0, #0x1                   	// #1
  458f20:	mov	w1, #0x588                 	// #1416
  458f24:	mov	w24, #0x1                   	// #1
  458f28:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  458f2c:	sxtw	x8, w22
  458f30:	sbfiz	x9, x22, #4, #32
  458f34:	adrp	x10, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  458f38:	add	x10, x10, #0xc82
  458f3c:	sub	x8, x9, x8
  458f40:	add	x8, x10, x8
  458f44:	ldrb	w10, [x8, #1]
  458f48:	ldrb	w11, [x8, #2]
  458f4c:	movi	v0.2d, #0x0
  458f50:	mov	x23, x0
  458f54:	str	q0, [x23, #80]!
  458f58:	ldrb	w9, [x8]
  458f5c:	strb	w10, [x0, #1120]
  458f60:	ldrb	w10, [x8, #4]
  458f64:	strb	w11, [x0, #1127]
  458f68:	ldrb	w11, [x8, #5]
  458f6c:	strb	w9, [x0, #1152]
  458f70:	ldrb	w9, [x8, #3]
  458f74:	strb	w10, [x0, #1164]
  458f78:	ldrb	w10, [x8, #7]
  458f7c:	strb	w11, [x0, #1153]
  458f80:	ldrb	w11, [x8, #8]
  458f84:	strb	w9, [x0, #1147]
  458f88:	ldrb	w9, [x8, #6]
  458f8c:	strb	w10, [x0, #1128]
  458f90:	ldrb	w10, [x8, #9]
  458f94:	strb	w11, [x0, #1130]
  458f98:	ldrh	w11, [x8, #10]
  458f9c:	strb	w9, [x0, #1126]
  458fa0:	add	x9, x0, #0x48d
  458fa4:	strb	w10, [x0, #1161]
  458fa8:	ldrb	w10, [x8, #12]
  458fac:	str	xzr, [x0, #128]
  458fb0:	str	w22, [x0, #1116]
  458fb4:	stp	q0, q0, [x0, #96]
  458fb8:	strh	w11, [x9]
  458fbc:	ldrb	w11, [x8, #13]
  458fc0:	ldrb	w8, [x8, #14]
  458fc4:	add	x9, x0, #0x463
  458fc8:	strb	w10, [x0, #1125]
  458fcc:	mov	w10, #0x101                 	// #257
  458fd0:	strb	w11, [x0, #1129]
  458fd4:	mov	w11, #0x8                   	// #8
  458fd8:	strb	w8, [x0, #1167]
  458fdc:	strh	w10, [x9]
  458fe0:	mov	w9, #0xff                  	// #255
  458fe4:	mov	w8, #0x102                 	// #258
  458fe8:	str	w11, [x0, #1112]
  458fec:	add	x11, x0, #0x473
  458ff0:	strh	w9, [x0, #1198]
  458ff4:	mov	w9, #0x100                 	// #256
  458ff8:	strh	w8, [x0, #1136]
  458ffc:	strb	w24, [x0, #1132]
  459000:	strh	w9, [x11]
  459004:	add	x11, x0, #0x485
  459008:	strb	w24, [x0, #1146]
  45900c:	strb	w24, [x0, #1148]
  459010:	strh	w10, [x0, #1142]
  459014:	strb	wzr, [x0, #1144]
  459018:	strh	w8, [x11]
  45901c:	mov	w11, #0x20                  	// #32
  459020:	dup	v0.2d, x11
  459024:	adrp	x11, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  459028:	ldr	q1, [x11, #3152]
  45902c:	add	x8, x0, #0x4b8
  459030:	mov	x20, x0
  459034:	str	w24, [x0, #1192]
  459038:	strh	w10, [x0, #1162]
  45903c:	strb	w24, [x0, #1245]
  459040:	strb	wzr, [x0, #1134]
  459044:	stp	q1, q0, [x8]
  459048:	strh	w9, [x0, #1240]
  45904c:	strb	w24, [x0, #1242]
  459050:	bl	43c9e4 <feof@plt+0x39144>
  459054:	str	x0, [x20, #1168]
  459058:	str	xzr, [x20, #1176]
  45905c:	bl	43c9e4 <feof@plt+0x39144>
  459060:	ldrb	w9, [x20, #1123]
  459064:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  459068:	add	x8, x8, #0x23b
  45906c:	str	x8, [x20, #224]
  459070:	mov	w8, #0x53                  	// #83
  459074:	str	x21, [x20, #40]
  459078:	strb	w8, [x20, #668]
  45907c:	mov	w8, #0x16                  	// #22
  459080:	cmp	w9, #0x0
  459084:	add	x21, x20, #0x1c8
  459088:	str	x0, [x20, #1184]
  45908c:	strb	w8, [x20, #692]
  459090:	cset	w8, eq  // eq = none
  459094:	mov	w1, #0xfa                  	// #250
  459098:	mov	x0, x21
  45909c:	str	xzr, [x20, #672]
  4590a0:	strh	wzr, [x20, #694]
  4590a4:	strb	w8, [x20, #21]
  4590a8:	bl	4497f8 <feof@plt+0x45f58>
  4590ac:	ldr	x8, [x20, #472]
  4590b0:	mov	x0, x20
  4590b4:	mov	x1, xzr
  4590b8:	str	x21, [x20, #488]
  4590bc:	str	x23, [x20, #136]
  4590c0:	str	xzr, [x20, #120]
  4590c4:	str	xzr, [x20, #88]
  4590c8:	str	x8, [x20, #448]
  4590cc:	str	xzr, [x23]
  4590d0:	bl	44da90 <feof@plt+0x4a1f0>
  4590d4:	str	x0, [x20, #56]
  4590d8:	mov	x0, x20
  4590dc:	mov	x1, xzr
  4590e0:	bl	44da90 <feof@plt+0x4a1f0>
  4590e4:	str	x0, [x20, #64]
  4590e8:	mov	x8, #0xfffffffffffffffe    	// #-2
  4590ec:	mov	x0, x20
  4590f0:	str	xzr, [x20, #1400]
  4590f4:	str	wzr, [x20, #1408]
  4590f8:	str	x8, [x20, #656]
  4590fc:	bl	445c5c <feof@plt+0x423bc>
  459100:	adrp	x3, 47d000 <_obstack_memory_used@@Base+0x12fc>
  459104:	adrp	x4, 403000 <readlink@plt>
  459108:	add	x0, x20, #0x328
  45910c:	add	x3, x3, #0x98
  459110:	add	x4, x4, #0x1d0
  459114:	mov	x1, xzr
  459118:	mov	x2, xzr
  45911c:	bl	47b98c <_obstack_begin@@Base>
  459120:	mov	x0, x20
  459124:	bl	447794 <feof@plt+0x43ef4>
  459128:	mov	x0, x20
  45912c:	mov	x1, x19
  459130:	bl	448ad4 <feof@plt+0x45234>
  459134:	mov	x0, x20
  459138:	ldp	x20, x19, [sp, #48]
  45913c:	ldp	x22, x21, [sp, #32]
  459140:	ldp	x24, x23, [sp, #16]
  459144:	ldp	x29, x30, [sp], #64
  459148:	ret
  45914c:	str	x1, [x0, #40]
  459150:	ret
  459154:	stp	x29, x30, [sp, #-48]!
  459158:	stp	x22, x21, [sp, #16]
  45915c:	stp	x20, x19, [sp, #32]
  459160:	mov	x19, x0
  459164:	ldr	x0, [x0, #1096]
  459168:	mov	x29, sp
  45916c:	bl	4031d0 <free@plt>
  459170:	ldr	x8, [x19]
  459174:	cbz	x8, 459188 <feof@plt+0x558e8>
  459178:	mov	x0, x19
  45917c:	bl	4407b8 <feof@plt+0x3cf18>
  459180:	ldr	x8, [x19]
  459184:	cbnz	x8, 459178 <feof@plt+0x558d8>
  459188:	ldr	x0, [x19, #1312]
  45918c:	bl	4031d0 <free@plt>
  459190:	ldr	x0, [x19, #504]
  459194:	cbz	x0, 4591a4 <feof@plt+0x55904>
  459198:	bl	4031d0 <free@plt>
  45919c:	str	xzr, [x19, #504]
  4591a0:	str	wzr, [x19, #512]
  4591a4:	ldr	x0, [x19, #712]
  4591a8:	cbz	x0, 4591b0 <feof@plt+0x55910>
  4591ac:	bl	455fa8 <feof@plt+0x52708>
  4591b0:	add	x0, x19, #0x328
  4591b4:	mov	x1, xzr
  4591b8:	bl	47bc70 <_obstack_free@@Base>
  4591bc:	mov	x0, x19
  4591c0:	bl	448ce8 <feof@plt+0x45448>
  4591c4:	mov	x0, x19
  4591c8:	bl	4478f4 <feof@plt+0x44054>
  4591cc:	mov	x0, x19
  4591d0:	bl	43aa58 <feof@plt+0x371b8>
  4591d4:	ldr	x0, [x19, #56]
  4591d8:	bl	44dcf0 <feof@plt+0x4a450>
  4591dc:	ldr	x0, [x19, #64]
  4591e0:	bl	44dcf0 <feof@plt+0x4a450>
  4591e4:	ldr	x0, [x19, #72]
  4591e8:	bl	44dcf0 <feof@plt+0x4a450>
  4591ec:	add	x21, x19, #0x1c8
  4591f0:	mov	x20, x21
  4591f4:	b	459200 <feof@plt+0x55960>
  4591f8:	mov	x20, x22
  4591fc:	cbz	x22, 459220 <feof@plt+0x55980>
  459200:	ldr	x0, [x20, #16]
  459204:	ldr	x22, [x20]
  459208:	bl	4031d0 <free@plt>
  45920c:	cmp	x20, x21
  459210:	b.eq	4591f8 <feof@plt+0x55958>  // b.none
  459214:	mov	x0, x20
  459218:	bl	4031d0 <free@plt>
  45921c:	b	4591f8 <feof@plt+0x55958>
  459220:	ldr	x0, [x19, #80]
  459224:	cbz	x0, 459238 <feof@plt+0x55998>
  459228:	ldr	x20, [x0]
  45922c:	bl	4031d0 <free@plt>
  459230:	mov	x0, x20
  459234:	cbnz	x20, 459228 <feof@plt+0x55988>
  459238:	ldr	x0, [x19, #1384]
  45923c:	cbz	x0, 459290 <feof@plt+0x559f0>
  459240:	ldr	w8, [x19, #1392]
  459244:	cmp	w8, #0x1
  459248:	b.lt	45928c <feof@plt+0x559ec>  // b.tstop
  45924c:	mov	x20, xzr
  459250:	mov	x21, xzr
  459254:	ldr	x0, [x0, x20]
  459258:	bl	4031d0 <free@plt>
  45925c:	ldrsw	x8, [x19, #1392]
  459260:	ldr	x0, [x19, #1384]
  459264:	add	x21, x21, #0x1
  459268:	add	x20, x20, #0x10
  45926c:	cmp	x21, x8
  459270:	b.lt	459254 <feof@plt+0x559b4>  // b.tstop
  459274:	b	45928c <feof@plt+0x559ec>
  459278:	ldr	x8, [x20]
  45927c:	str	x8, [x19, #1400]
  459280:	ldr	x0, [x20, #8]
  459284:	bl	4031d0 <free@plt>
  459288:	mov	x0, x20
  45928c:	bl	4031d0 <free@plt>
  459290:	ldr	x20, [x19, #1400]
  459294:	cbnz	x20, 459278 <feof@plt+0x559d8>
  459298:	mov	x0, x19
  45929c:	ldp	x20, x19, [sp, #32]
  4592a0:	ldp	x22, x21, [sp, #16]
  4592a4:	ldp	x29, x30, [sp], #48
  4592a8:	b	4031d0 <free@plt>
  4592ac:	sub	w8, w0, #0x1
  4592b0:	cmp	w8, #0x21
  4592b4:	mov	x0, xzr
  4592b8:	b.hi	459354 <feof@plt+0x55ab4>  // b.pmore
  4592bc:	adrp	x9, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4592c0:	add	x9, x9, #0xc60
  4592c4:	adr	x10, 4592dc <feof@plt+0x55a3c>
  4592c8:	ldrb	w11, [x9, x8]
  4592cc:	add	x10, x10, x11, lsl #2
  4592d0:	adrp	x8, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4592d4:	add	x8, x8, #0xdd0
  4592d8:	br	x10
  4592dc:	adrp	x8, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4592e0:	add	x8, x8, #0xe20
  4592e4:	b	459350 <feof@plt+0x55ab0>
  4592e8:	adrp	x8, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4592ec:	add	x8, x8, #0xdf0
  4592f0:	b	459350 <feof@plt+0x55ab0>
  4592f4:	adrp	x8, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4592f8:	add	x8, x8, #0xe00
  4592fc:	b	459350 <feof@plt+0x55ab0>
  459300:	adrp	x8, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  459304:	add	x8, x8, #0xe60
  459308:	b	459350 <feof@plt+0x55ab0>
  45930c:	adrp	x8, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  459310:	add	x8, x8, #0xe10
  459314:	b	459350 <feof@plt+0x55ab0>
  459318:	adrp	x8, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45931c:	add	x8, x8, #0xe40
  459320:	b	459350 <feof@plt+0x55ab0>
  459324:	adrp	x8, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  459328:	add	x8, x8, #0xe30
  45932c:	b	459350 <feof@plt+0x55ab0>
  459330:	adrp	x8, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  459334:	add	x8, x8, #0xde0
  459338:	b	459350 <feof@plt+0x55ab0>
  45933c:	adrp	x8, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  459340:	add	x8, x8, #0xe50
  459344:	b	459350 <feof@plt+0x55ab0>
  459348:	adrp	x8, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45934c:	add	x8, x8, #0xe70
  459350:	ldr	x0, [x8]
  459354:	ret
  459358:	stp	x29, x30, [sp, #-48]!
  45935c:	stp	x22, x21, [sp, #16]
  459360:	stp	x20, x19, [sp, #32]
  459364:	ldrb	w8, [x0, #1160]
  459368:	mov	x19, x0
  45936c:	mov	x29, sp
  459370:	cbz	w8, 45937c <feof@plt+0x55adc>
  459374:	mov	w8, #0xa                   	// #10
  459378:	b	459398 <feof@plt+0x55af8>
  45937c:	ldrb	w8, [x19, #1243]
  459380:	cbz	w8, 45938c <feof@plt+0x55aec>
  459384:	ldrb	w8, [x19, #1153]
  459388:	cbz	w8, 459394 <feof@plt+0x55af4>
  45938c:	mov	w8, #0xb                   	// #11
  459390:	b	459398 <feof@plt+0x55af8>
  459394:	mov	w8, #0xc                   	// #12
  459398:	adrp	x20, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45939c:	add	x20, x20, #0xe80
  4593a0:	add	x21, x20, x8, lsl #4
  4593a4:	mov	w22, #0x23                  	// #35
  4593a8:	b	4593c0 <feof@plt+0x55b20>
  4593ac:	ldrh	w8, [x20, #10]
  4593b0:	str	w8, [x0, #24]
  4593b4:	add	x20, x20, #0x10
  4593b8:	cmp	x20, x21
  4593bc:	b.cs	459410 <feof@plt+0x55b70>  // b.hs, b.nlast
  4593c0:	ldrh	w8, [x20, #10]
  4593c4:	cmp	w8, #0xa
  4593c8:	b.ne	4593e0 <feof@plt+0x55b40>  // b.any
  4593cc:	ldr	w8, [x19, #1116]
  4593d0:	cmp	w8, #0x15
  4593d4:	b.eq	4593b4 <feof@plt+0x55b14>  // b.none
  4593d8:	ldr	x8, [x19, #1040]
  4593dc:	cbz	x8, 4593b4 <feof@plt+0x55b14>
  4593e0:	ldr	x1, [x20]
  4593e4:	ldrh	w2, [x20, #8]
  4593e8:	mov	x0, x19
  4593ec:	bl	448cd8 <feof@plt+0x45438>
  4593f0:	ldrh	w8, [x0, #18]
  4593f4:	orr	w9, w8, #0x3
  4593f8:	strh	w9, [x0, #18]
  4593fc:	ldrb	w9, [x20, #12]
  459400:	cbz	w9, 4593ac <feof@plt+0x55b0c>
  459404:	orr	w8, w8, w22
  459408:	strh	w8, [x0, #18]
  45940c:	b	4593ac <feof@plt+0x55b0c>
  459410:	ldp	x20, x19, [sp, #32]
  459414:	ldp	x22, x21, [sp, #16]
  459418:	ldp	x29, x30, [sp], #48
  45941c:	ret
  459420:	stp	x29, x30, [sp, #-64]!
  459424:	stp	x22, x21, [sp, #32]
  459428:	stp	x20, x19, [sp, #48]
  45942c:	ldrb	w8, [x0, #1160]
  459430:	mov	x19, x0
  459434:	mov	w20, w1
  459438:	str	x23, [sp, #16]
  45943c:	mov	x29, sp
  459440:	cbz	w8, 45944c <feof@plt+0x55bac>
  459444:	mov	w8, #0xa                   	// #10
  459448:	b	459468 <feof@plt+0x55bc8>
  45944c:	ldrb	w8, [x19, #1243]
  459450:	cbz	w8, 45945c <feof@plt+0x55bbc>
  459454:	ldrb	w8, [x19, #1153]
  459458:	cbz	w8, 459464 <feof@plt+0x55bc4>
  45945c:	mov	w8, #0xb                   	// #11
  459460:	b	459468 <feof@plt+0x55bc8>
  459464:	mov	w8, #0xc                   	// #12
  459468:	adrp	x21, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45946c:	add	x21, x21, #0xe80
  459470:	add	x22, x21, x8, lsl #4
  459474:	mov	w23, #0x23                  	// #35
  459478:	b	459490 <feof@plt+0x55bf0>
  45947c:	ldrh	w8, [x21, #10]
  459480:	str	w8, [x0, #24]
  459484:	add	x21, x21, #0x10
  459488:	cmp	x21, x22
  45948c:	b.cs	4594e0 <feof@plt+0x55c40>  // b.hs, b.nlast
  459490:	ldrh	w8, [x21, #10]
  459494:	cmp	w8, #0xa
  459498:	b.ne	4594b0 <feof@plt+0x55c10>  // b.any
  45949c:	ldr	w8, [x19, #1116]
  4594a0:	cmp	w8, #0x15
  4594a4:	b.eq	459484 <feof@plt+0x55be4>  // b.none
  4594a8:	ldr	x8, [x19, #1040]
  4594ac:	cbz	x8, 459484 <feof@plt+0x55be4>
  4594b0:	ldr	x1, [x21]
  4594b4:	ldrh	w2, [x21, #8]
  4594b8:	mov	x0, x19
  4594bc:	bl	448cd8 <feof@plt+0x45438>
  4594c0:	ldrh	w8, [x0, #18]
  4594c4:	orr	w9, w8, #0x3
  4594c8:	strh	w9, [x0, #18]
  4594cc:	ldrb	w9, [x21, #12]
  4594d0:	cbz	w9, 45947c <feof@plt+0x55bdc>
  4594d4:	orr	w8, w8, w23
  4594d8:	strh	w8, [x0, #18]
  4594dc:	b	45947c <feof@plt+0x55bdc>
  4594e0:	ldrb	w8, [x19, #1160]
  4594e4:	cbnz	w8, 459508 <feof@plt+0x55c68>
  4594e8:	ldrb	w8, [x19, #1243]
  4594ec:	cbz	w8, 4594f8 <feof@plt+0x55c58>
  4594f0:	ldrb	w8, [x19, #1153]
  4594f4:	cbz	w8, 459508 <feof@plt+0x55c68>
  4594f8:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4594fc:	add	x1, x1, #0x20
  459500:	mov	x0, x19
  459504:	bl	440498 <feof@plt+0x3cbf8>
  459508:	ldrb	w9, [x19, #1120]
  45950c:	ldr	w8, [x19, #1116]
  459510:	cbz	w9, 45952c <feof@plt+0x55c8c>
  459514:	sub	w8, w8, #0xd
  459518:	cmp	w8, #0x8
  45951c:	b.cs	45955c <feof@plt+0x55cbc>  // b.hs, b.nlast
  459520:	adrp	x9, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  459524:	add	x9, x9, #0xf40
  459528:	b	459570 <feof@plt+0x55cd0>
  45952c:	sub	w8, w8, #0x2
  459530:	cmp	w8, #0x14
  459534:	b.cs	459548 <feof@plt+0x55ca8>  // b.hs, b.nlast
  459538:	mov	w9, #0x1d7                 	// #471
  45953c:	movk	w9, #0x8, lsl #16
  459540:	lsr	w9, w9, w8
  459544:	tbnz	w9, #0, 459568 <feof@plt+0x55cc8>
  459548:	ldrb	w8, [x19, #1152]
  45954c:	cbz	w8, 45957c <feof@plt+0x55cdc>
  459550:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  459554:	add	x1, x1, #0x103
  459558:	b	459574 <feof@plt+0x55cd4>
  45955c:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  459560:	add	x1, x1, #0x7b
  459564:	b	459574 <feof@plt+0x55cd4>
  459568:	adrp	x9, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  45956c:	add	x9, x9, #0xf80
  459570:	ldr	x1, [x9, w8, sxtw #3]
  459574:	mov	x0, x19
  459578:	bl	440498 <feof@plt+0x3cbf8>
  45957c:	ldrb	w8, [x19, #1128]
  459580:	cbz	w8, 4595bc <feof@plt+0x55d1c>
  459584:	ldrb	w8, [x19, #1120]
  459588:	cbz	w8, 45959c <feof@plt+0x55cfc>
  45958c:	ldr	w8, [x19, #1116]
  459590:	sub	w8, w8, #0xb
  459594:	cmp	w8, #0x2
  459598:	b.cc	4595bc <feof@plt+0x55d1c>  // b.lo, b.ul, b.last
  45959c:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4595a0:	add	x1, x1, #0x11c
  4595a4:	mov	x0, x19
  4595a8:	bl	440498 <feof@plt+0x3cbf8>
  4595ac:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4595b0:	add	x1, x1, #0x12e
  4595b4:	mov	x0, x19
  4595b8:	bl	440498 <feof@plt+0x3cbf8>
  4595bc:	adrp	x8, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4595c0:	adrp	x9, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4595c4:	add	x8, x8, #0x140
  4595c8:	add	x9, x9, #0x152
  4595cc:	cmp	w20, #0x0
  4595d0:	csel	x1, x9, x8, eq  // eq = none
  4595d4:	mov	x0, x19
  4595d8:	bl	440498 <feof@plt+0x3cbf8>
  4595dc:	ldrb	w8, [x19, #1122]
  4595e0:	cbz	w8, 459604 <feof@plt+0x55d64>
  4595e4:	mov	x0, x19
  4595e8:	ldp	x20, x19, [sp, #48]
  4595ec:	ldp	x22, x21, [sp, #32]
  4595f0:	ldr	x23, [sp, #16]
  4595f4:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4595f8:	add	x1, x1, #0x164
  4595fc:	ldp	x29, x30, [sp], #64
  459600:	b	440498 <feof@plt+0x3cbf8>
  459604:	ldp	x20, x19, [sp, #48]
  459608:	ldp	x22, x21, [sp, #32]
  45960c:	ldr	x23, [sp, #16]
  459610:	ldp	x29, x30, [sp], #64
  459614:	ret
  459618:	stp	x29, x30, [sp, #-48]!
  45961c:	stp	x22, x21, [sp, #16]
  459620:	stp	x20, x19, [sp, #32]
  459624:	ldrb	w8, [x0, #1120]
  459628:	mov	x19, x0
  45962c:	mov	x29, sp
  459630:	cbz	w8, 459638 <feof@plt+0x55d98>
  459634:	strb	wzr, [x19, #1138]
  459638:	ldrb	w9, [x19, #1155]
  45963c:	cbz	w9, 459654 <feof@plt+0x55db4>
  459640:	ldrb	w9, [x19, #1244]
  459644:	cbnz	w9, 459650 <feof@plt+0x55db0>
  459648:	mov	w9, #0x1                   	// #1
  45964c:	strb	w9, [x19, #24]
  459650:	strb	wzr, [x19, #1160]
  459654:	ldrb	w9, [x19, #1136]
  459658:	cmp	w9, #0x2
  45965c:	b.ne	459670 <feof@plt+0x55dd0>  // b.any
  459660:	ldrb	w9, [x19, #1125]
  459664:	cmp	w9, #0x0
  459668:	cset	w9, eq  // eq = none
  45966c:	strb	w9, [x19, #1136]
  459670:	ldrb	w9, [x19, #1160]
  459674:	cbz	w9, 459680 <feof@plt+0x55de0>
  459678:	strb	wzr, [x19, #1125]
  45967c:	strb	wzr, [x19, #1136]
  459680:	cbz	w8, 459690 <feof@plt+0x55df0>
  459684:	ldrb	w8, [x19, #1158]
  459688:	cmp	w8, #0x0
  45968c:	cset	w8, ne  // ne = any
  459690:	ldrb	w9, [x19, #1159]
  459694:	mov	w10, #0x84                  	// #132
  459698:	orr	w10, w8, w10
  45969c:	cmp	w9, #0x0
  4596a0:	csel	w8, w8, w10, eq  // eq = none
  4596a4:	cbz	w8, 4596fc <feof@plt+0x55e5c>
  4596a8:	adrp	x21, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4596ac:	adrp	x22, 4d6000 <_obstack_memory_used@@Base+0x5a2fc>
  4596b0:	lsl	w20, w8, #2
  4596b4:	add	x21, x21, #0xdd0
  4596b8:	add	x22, x22, #0xe80
  4596bc:	ldr	x1, [x21]
  4596c0:	ldrh	w2, [x21, #8]
  4596c4:	mov	x0, x19
  4596c8:	bl	448cd8 <feof@plt+0x45438>
  4596cc:	ldrh	w8, [x0, #18]
  4596d0:	ldrb	w9, [x0, #16]
  4596d4:	orr	w8, w8, w20
  4596d8:	and	w9, w9, #0xfe
  4596dc:	strh	w8, [x0, #18]
  4596e0:	strb	w9, [x0, #16]
  4596e4:	ldrb	w8, [x21, #10]
  4596e8:	add	x21, x21, #0x10
  4596ec:	cmp	x21, x22
  4596f0:	lsl	w8, w8, #1
  4596f4:	strb	w8, [x0, #16]
  4596f8:	b.cc	4596bc <feof@plt+0x55e1c>  // b.lo, b.ul, b.last
  4596fc:	ldp	x20, x19, [sp, #32]
  459700:	ldp	x22, x21, [sp, #16]
  459704:	ldp	x29, x30, [sp], #48
  459708:	ret
  45970c:	stp	x29, x30, [sp, #-48]!
  459710:	stp	x20, x19, [sp, #32]
  459714:	ldr	w8, [x0, #1200]
  459718:	mov	x19, x0
  45971c:	mov	x20, x1
  459720:	str	x21, [sp, #16]
  459724:	mov	x29, sp
  459728:	cbz	w8, 459744 <feof@plt+0x55ea4>
  45972c:	ldr	x0, [x19, #712]
  459730:	cbnz	x0, 45973c <feof@plt+0x55e9c>
  459734:	bl	455f9c <feof@plt+0x526fc>
  459738:	str	x0, [x19, #712]
  45973c:	mov	x1, x20
  459740:	bl	4562ac <feof@plt+0x52a0c>
  459744:	add	x2, x19, #0xd8
  459748:	mov	x0, x19
  45974c:	mov	x1, x20
  459750:	mov	w3, wzr
  459754:	mov	w4, wzr
  459758:	mov	w5, wzr
  45975c:	mov	w6, wzr
  459760:	bl	44659c <feof@plt+0x42cfc>
  459764:	str	x0, [x19, #288]
  459768:	bl	44658c <feof@plt+0x42cec>
  45976c:	tbz	w0, #0, 459778 <feof@plt+0x55ed8>
  459770:	mov	x20, xzr
  459774:	b	459824 <feof@plt+0x55f84>
  459778:	ldr	x1, [x19, #288]
  45977c:	mov	x0, x19
  459780:	mov	w2, wzr
  459784:	mov	w3, wzr
  459788:	bl	446fd4 <feof@plt+0x43734>
  45978c:	ldrb	w8, [x19, #1155]
  459790:	cbz	w8, 459824 <feof@plt+0x55f84>
  459794:	mov	x0, x19
  459798:	bl	449d0c <feof@plt+0x4646c>
  45979c:	ldrb	w8, [x0, #4]
  4597a0:	cmp	w8, #0x25
  4597a4:	b.ne	4597fc <feof@plt+0x55f5c>  // b.any
  4597a8:	mov	x20, x0
  4597ac:	mov	w8, #0x1                   	// #1
  4597b0:	mov	x0, x19
  4597b4:	strb	w8, [x19, #16]
  4597b8:	bl	449d0c <feof@plt+0x4646c>
  4597bc:	mov	x21, x0
  4597c0:	mov	w1, #0x1                   	// #1
  4597c4:	mov	x0, x19
  4597c8:	bl	4529b4 <feof@plt+0x4f114>
  4597cc:	strb	wzr, [x19, #16]
  4597d0:	ldrb	w8, [x21, #4]
  4597d4:	cmp	w8, #0x37
  4597d8:	b.ne	4597fc <feof@plt+0x55f5c>  // b.any
  4597dc:	ldrh	w8, [x20, #6]
  4597e0:	mov	x0, x19
  4597e4:	and	w1, w8, #0x1
  4597e8:	bl	43e344 <feof@plt+0x3aaa4>
  4597ec:	cbz	w0, 4597fc <feof@plt+0x55f5c>
  4597f0:	mov	x0, x19
  4597f4:	bl	4598d0 <feof@plt+0x56030>
  4597f8:	b	459808 <feof@plt+0x55f68>
  4597fc:	mov	w1, #0x1                   	// #1
  459800:	mov	x0, x19
  459804:	bl	4529b4 <feof@plt+0x4f114>
  459808:	ldr	x8, [x19, #40]
  45980c:	mov	w10, #0x18                  	// #24
  459810:	ldr	w9, [x8, #12]
  459814:	ldr	x8, [x8]
  459818:	sub	w9, w9, #0x1
  45981c:	smaddl	x8, w9, w10, x8
  459820:	ldr	x20, [x8, #8]
  459824:	mov	x0, x20
  459828:	ldp	x20, x19, [sp, #32]
  45982c:	ldr	x21, [sp, #16]
  459830:	ldp	x29, x30, [sp], #48
  459834:	ret
  459838:	stp	x29, x30, [sp, #-32]!
  45983c:	stp	x20, x19, [sp, #16]
  459840:	ldrb	w8, [x0, #1151]
  459844:	mov	x19, x0
  459848:	mov	x20, x1
  45984c:	mov	x29, sp
  459850:	cbz	w8, 459874 <feof@plt+0x55fd4>
  459854:	adrp	x1, 451000 <feof@plt+0x4d760>
  459858:	add	x1, x1, #0xa20
  45985c:	mov	x0, x19
  459860:	mov	x2, xzr
  459864:	bl	448d54 <feof@plt+0x454b4>
  459868:	b	459874 <feof@plt+0x55fd4>
  45986c:	mov	x0, x19
  459870:	bl	4407b8 <feof@plt+0x3cf18>
  459874:	ldr	x8, [x19]
  459878:	cbnz	x8, 45986c <feof@plt+0x55fcc>
  45987c:	cbz	x20, 4598ac <feof@plt+0x5600c>
  459880:	ldr	w8, [x19, #1200]
  459884:	cbz	w8, 4598ac <feof@plt+0x5600c>
  459888:	ldr	x0, [x19, #712]
  45988c:	mov	w2, #0x48                  	// #72
  459890:	mov	x1, x20
  459894:	bl	456598 <feof@plt+0x52cf8>
  459898:	ldrb	w8, [x19, #1205]
  45989c:	cbz	w8, 4598ac <feof@plt+0x5600c>
  4598a0:	ldr	x0, [x19, #712]
  4598a4:	mov	x1, x20
  4598a8:	bl	4567bc <feof@plt+0x52f1c>
  4598ac:	ldrb	w8, [x19, #1131]
  4598b0:	cbz	w8, 4598c4 <feof@plt+0x56024>
  4598b4:	mov	x0, x19
  4598b8:	ldp	x20, x19, [sp, #16]
  4598bc:	ldp	x29, x30, [sp], #32
  4598c0:	b	447b00 <feof@plt+0x44260>
  4598c4:	ldp	x20, x19, [sp, #16]
  4598c8:	ldp	x29, x30, [sp], #32
  4598cc:	ret
  4598d0:	stp	x29, x30, [sp, #-48]!
  4598d4:	stp	x22, x21, [sp, #16]
  4598d8:	stp	x20, x19, [sp, #32]
  4598dc:	mov	x29, sp
  4598e0:	mov	x19, x0
  4598e4:	bl	449d0c <feof@plt+0x4646c>
  4598e8:	ldrb	w8, [x0, #4]
  4598ec:	cmp	w8, #0x25
  4598f0:	b.ne	4599a8 <feof@plt+0x56108>  // b.any
  4598f4:	mov	x0, x19
  4598f8:	bl	449d0c <feof@plt+0x4646c>
  4598fc:	ldrb	w8, [x0, #4]
  459900:	cmp	w8, #0x37
  459904:	b.ne	4599b0 <feof@plt+0x56110>  // b.any
  459908:	mov	x0, x19
  45990c:	bl	449d0c <feof@plt+0x4646c>
  459910:	ldrb	w8, [x0, #4]
  459914:	cmp	w8, #0x3e
  459918:	b.ne	4599b8 <feof@plt+0x56118>  // b.any
  45991c:	ldr	w8, [x0, #8]
  459920:	mov	x20, x0
  459924:	cmp	w8, #0x5
  459928:	b.cc	4599b8 <feof@plt+0x56118>  // b.lo, b.ul, b.last
  45992c:	ldr	x9, [x20, #16]
  459930:	sub	w10, w8, #0x2
  459934:	ldrb	w10, [x9, w10, uxtw]
  459938:	cmp	w10, #0x2f
  45993c:	b.ne	4599b8 <feof@plt+0x56118>  // b.any
  459940:	sub	w10, w8, #0x3
  459944:	ldrb	w11, [x9, x10]
  459948:	cmp	w11, #0x2f
  45994c:	b.ne	4599b8 <feof@plt+0x56118>  // b.any
  459950:	ldr	x22, [x19, #920]
  459954:	cbz	x22, 459994 <feof@plt+0x560f4>
  459958:	add	x10, x10, #0xf
  45995c:	mov	x11, sp
  459960:	and	x10, x10, #0x1fffffff0
  459964:	sub	x21, x11, x10
  459968:	mov	sp, x21
  45996c:	add	x1, x9, #0x1
  459970:	sub	w2, w8, #0x4
  459974:	mov	x0, x21
  459978:	bl	402fc0 <memcpy@plt>
  45997c:	ldr	w8, [x20, #8]
  459980:	mov	x0, x19
  459984:	mov	x1, x21
  459988:	sub	w8, w8, #0x4
  45998c:	strb	wzr, [x21, w8, uxtw]
  459990:	blr	x22
  459994:	mov	sp, x29
  459998:	ldp	x20, x19, [sp, #32]
  45999c:	ldp	x22, x21, [sp, #16]
  4599a0:	ldp	x29, x30, [sp], #48
  4599a4:	ret
  4599a8:	mov	w1, #0x1                   	// #1
  4599ac:	b	4599bc <feof@plt+0x5611c>
  4599b0:	mov	w1, #0x2                   	// #2
  4599b4:	b	4599bc <feof@plt+0x5611c>
  4599b8:	mov	w1, #0x3                   	// #3
  4599bc:	mov	x0, x19
  4599c0:	mov	sp, x29
  4599c4:	ldp	x20, x19, [sp, #32]
  4599c8:	ldp	x22, x21, [sp, #16]
  4599cc:	ldp	x29, x30, [sp], #48
  4599d0:	b	4529b4 <feof@plt+0x4f114>
  4599d4:	sub	sp, sp, #0x60
  4599d8:	stp	x29, x30, [sp, #80]
  4599dc:	add	x29, sp, #0x50
  4599e0:	movi	v0.2d, #0x0
  4599e4:	stp	q0, q0, [sp]
  4599e8:	str	x0, [sp]
  4599ec:	str	w1, [sp, #8]
  4599f0:	mov	x0, sp
  4599f4:	mov	w1, #0x48                  	// #72
  4599f8:	str	xzr, [sp, #64]
  4599fc:	stp	q0, q0, [sp, #32]
  459a00:	bl	459b44 <feof@plt+0x562a4>
  459a04:	cbz	x0, 459a20 <feof@plt+0x56180>
  459a08:	ldp	q0, q3, [sp]
  459a0c:	ldr	x8, [sp, #64]
  459a10:	ldp	q1, q2, [sp, #32]
  459a14:	stp	q0, q3, [x0]
  459a18:	str	x8, [x0, #64]
  459a1c:	stp	q1, q2, [x0, #32]
  459a20:	ldp	x29, x30, [sp, #80]
  459a24:	add	sp, sp, #0x60
  459a28:	ret
  459a2c:	sub	sp, sp, #0x50
  459a30:	stp	x29, x30, [sp, #48]
  459a34:	str	x19, [sp, #64]
  459a38:	add	x29, sp, #0x30
  459a3c:	add	w8, w1, #0x1
  459a40:	stp	x0, x2, [sp, #8]
  459a44:	stp	x3, x4, [sp, #24]
  459a48:	mov	w1, #0x1000                	// #4096
  459a4c:	mov	x2, xzr
  459a50:	mov	x3, xzr
  459a54:	mov	x19, x0
  459a58:	str	w8, [sp]
  459a5c:	str	wzr, [sp, #40]
  459a60:	bl	459b44 <feof@plt+0x562a4>
  459a64:	cbz	x0, 459a88 <feof@plt+0x561e8>
  459a68:	mov	x1, x0
  459a6c:	mov	w2, #0x1000                	// #4096
  459a70:	mov	x0, x19
  459a74:	mov	x3, xzr
  459a78:	mov	x4, xzr
  459a7c:	bl	459d08 <feof@plt+0x56468>
  459a80:	mov	w8, #0x1                   	// #1
  459a84:	b	459a8c <feof@plt+0x561ec>
  459a88:	mov	w8, wzr
  459a8c:	adrp	x0, 459000 <feof@plt+0x55760>
  459a90:	add	x0, x0, #0xab4
  459a94:	mov	x1, sp
  459a98:	str	w8, [sp, #44]
  459a9c:	bl	402f60 <_Unwind_Backtrace@plt>
  459aa0:	ldr	w0, [sp, #40]
  459aa4:	ldr	x19, [sp, #64]
  459aa8:	ldp	x29, x30, [sp, #48]
  459aac:	add	sp, sp, #0x50
  459ab0:	ret
  459ab4:	stp	x29, x30, [sp, #-32]!
  459ab8:	str	x19, [sp, #16]
  459abc:	mov	x29, sp
  459ac0:	mov	x19, x1
  459ac4:	add	x1, x29, #0x1c
  459ac8:	str	wzr, [x29, #28]
  459acc:	bl	402f90 <_Unwind_GetIPInfo@plt>
  459ad0:	ldr	w8, [x19]
  459ad4:	subs	w8, w8, #0x1
  459ad8:	b.lt	459ae8 <feof@plt+0x56248>  // b.tstop
  459adc:	mov	w0, wzr
  459ae0:	str	w8, [x19]
  459ae4:	b	459b38 <feof@plt+0x56298>
  459ae8:	ldr	w8, [x29, #28]
  459aec:	ldr	w9, [x19, #44]
  459af0:	cmp	w8, #0x0
  459af4:	cset	w8, eq  // eq = none
  459af8:	sub	x1, x0, x8
  459afc:	cbz	w9, 459b10 <feof@plt+0x56270>
  459b00:	ldp	x0, x2, [x19, #8]
  459b04:	ldp	x3, x4, [x19, #24]
  459b08:	bl	459f80 <feof@plt+0x566e0>
  459b0c:	b	459b28 <feof@plt+0x56288>
  459b10:	ldr	x8, [x19, #16]
  459b14:	ldr	x0, [x19, #32]
  459b18:	mov	x2, xzr
  459b1c:	mov	w3, wzr
  459b20:	mov	x4, xzr
  459b24:	blr	x8
  459b28:	cmp	w0, #0x0
  459b2c:	mov	w8, #0x5                   	// #5
  459b30:	str	w0, [x19, #40]
  459b34:	csel	w0, wzr, w8, eq  // eq = none
  459b38:	ldr	x19, [sp, #16]
  459b3c:	ldp	x29, x30, [sp], #32
  459b40:	ret
  459b44:	stp	x29, x30, [sp, #-64]!
  459b48:	stp	x24, x23, [sp, #16]
  459b4c:	stp	x22, x21, [sp, #32]
  459b50:	stp	x20, x19, [sp, #48]
  459b54:	mov	x29, sp
  459b58:	ldr	w8, [x0, #8]
  459b5c:	mov	x20, x3
  459b60:	mov	x19, x2
  459b64:	mov	x21, x0
  459b68:	mov	x22, x1
  459b6c:	cbz	w8, 459b88 <feof@plt+0x562e8>
  459b70:	add	x8, x21, #0x3c
  459b74:	mov	w9, #0x1                   	// #1
  459b78:	ldaxr	w10, [x8]
  459b7c:	stlxr	w11, w9, [x8]
  459b80:	cbnz	w11, 459b78 <feof@plt+0x562d8>
  459b84:	cbnz	w10, 459c70 <feof@plt+0x563d0>
  459b88:	mov	x8, x21
  459b8c:	ldr	x23, [x8, #64]!
  459b90:	cbz	x23, 459c5c <feof@plt+0x563bc>
  459b94:	ldr	x9, [x23, #8]
  459b98:	cmp	x9, x22
  459b9c:	b.cs	459bbc <feof@plt+0x5631c>  // b.hs, b.nlast
  459ba0:	mov	x10, x23
  459ba4:	ldr	x23, [x23]
  459ba8:	cbz	x23, 459c5c <feof@plt+0x563bc>
  459bac:	ldr	x9, [x23, #8]
  459bb0:	cmp	x9, x22
  459bb4:	b.cc	459ba0 <feof@plt+0x56300>  // b.lo, b.ul, b.last
  459bb8:	b	459bc0 <feof@plt+0x56320>
  459bbc:	mov	x10, x8
  459bc0:	ldr	x11, [x23]
  459bc4:	add	x12, x22, #0x7
  459bc8:	and	x22, x12, #0xfffffffffffffff8
  459bcc:	subs	x9, x9, x22
  459bd0:	str	x11, [x10]
  459bd4:	b.ls	459c5c <feof@plt+0x563bc>  // b.plast
  459bd8:	cmp	x9, #0x10
  459bdc:	b.cc	459c5c <feof@plt+0x563bc>  // b.lo, b.ul, b.last
  459be0:	ldr	x10, [x8]
  459be4:	cbz	x10, 459c50 <feof@plt+0x563b0>
  459be8:	mov	x12, xzr
  459bec:	mov	x11, xzr
  459bf0:	mov	x13, x10
  459bf4:	mov	x0, x8
  459bf8:	b	459c10 <feof@plt+0x56370>
  459bfc:	mov	x11, x0
  459c00:	mov	x0, x13
  459c04:	ldr	x13, [x13]
  459c08:	add	x12, x12, #0x1
  459c0c:	cbz	x13, 459c2c <feof@plt+0x5638c>
  459c10:	cbz	x11, 459bfc <feof@plt+0x5635c>
  459c14:	ldr	x14, [x11]
  459c18:	ldr	x15, [x13, #8]
  459c1c:	ldr	x14, [x14, #8]
  459c20:	cmp	x15, x14
  459c24:	b.cc	459bfc <feof@plt+0x5635c>  // b.lo, b.ul, b.last
  459c28:	b	459c00 <feof@plt+0x56360>
  459c2c:	cmp	x12, #0x10
  459c30:	b.cc	459c50 <feof@plt+0x563b0>  // b.lo, b.ul, b.last
  459c34:	ldr	x10, [x11]
  459c38:	ldr	x12, [x10, #8]
  459c3c:	cmp	x12, x9
  459c40:	b.cs	459c5c <feof@plt+0x563bc>  // b.hs, b.nlast
  459c44:	ldr	x10, [x10]
  459c48:	str	x10, [x11]
  459c4c:	ldr	x10, [x8]
  459c50:	add	x11, x23, x22
  459c54:	stp	x10, x9, [x11]
  459c58:	str	x11, [x8]
  459c5c:	ldr	w8, [x21, #8]
  459c60:	cbz	w8, 459c6c <feof@plt+0x563cc>
  459c64:	add	x8, x21, #0x3c
  459c68:	stlr	wzr, [x8]
  459c6c:	cbnz	x23, 459cf0 <feof@plt+0x56450>
  459c70:	bl	403790 <getpagesize@plt>
  459c74:	sxtw	x8, w0
  459c78:	add	x9, x22, x8
  459c7c:	sub	x9, x9, #0x1
  459c80:	neg	x8, x8
  459c84:	and	x24, x9, x8
  459c88:	mov	w2, #0x3                   	// #3
  459c8c:	mov	w3, #0x22                  	// #34
  459c90:	mov	w4, #0xffffffff            	// #-1
  459c94:	mov	x0, xzr
  459c98:	mov	x1, x24
  459c9c:	mov	x5, xzr
  459ca0:	bl	403430 <mmap@plt>
  459ca4:	cmn	x0, #0x1
  459ca8:	b.eq	459cd0 <feof@plt+0x56430>  // b.none
  459cac:	add	x8, x22, #0x7
  459cb0:	and	x8, x8, #0xfffffffffffffff8
  459cb4:	mov	x23, x0
  459cb8:	subs	x2, x24, x8
  459cbc:	b.ls	459cf0 <feof@plt+0x56450>  // b.plast
  459cc0:	add	x1, x23, x8
  459cc4:	mov	x0, x21
  459cc8:	bl	459d08 <feof@plt+0x56468>
  459ccc:	b	459cf0 <feof@plt+0x56450>
  459cd0:	cbz	x19, 459cec <feof@plt+0x5644c>
  459cd4:	bl	4035c0 <__errno_location@plt>
  459cd8:	ldr	w2, [x0]
  459cdc:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  459ce0:	add	x1, x1, #0x232
  459ce4:	mov	x0, x20
  459ce8:	blr	x19
  459cec:	mov	x23, xzr
  459cf0:	mov	x0, x23
  459cf4:	ldp	x20, x19, [sp, #48]
  459cf8:	ldp	x22, x21, [sp, #32]
  459cfc:	ldp	x24, x23, [sp, #16]
  459d00:	ldp	x29, x30, [sp], #64
  459d04:	ret
  459d08:	stp	x29, x30, [sp, #-48]!
  459d0c:	str	x21, [sp, #16]
  459d10:	stp	x20, x19, [sp, #32]
  459d14:	mov	x29, sp
  459d18:	mov	x21, x2
  459d1c:	mov	x20, x1
  459d20:	cmp	x2, #0x10, lsl #12
  459d24:	mov	x19, x0
  459d28:	b.cc	459d54 <feof@plt+0x564b4>  // b.lo, b.ul, b.last
  459d2c:	bl	403790 <getpagesize@plt>
  459d30:	sxtw	x8, w0
  459d34:	sub	x8, x8, #0x1
  459d38:	orr	x9, x20, x21
  459d3c:	tst	x8, x9
  459d40:	b.ne	459d54 <feof@plt+0x564b4>  // b.any
  459d44:	mov	x0, x20
  459d48:	mov	x1, x21
  459d4c:	bl	4034b0 <munmap@plt>
  459d50:	cbz	w0, 459e08 <feof@plt+0x56568>
  459d54:	ldr	w8, [x19, #8]
  459d58:	cbz	w8, 459d74 <feof@plt+0x564d4>
  459d5c:	add	x8, x19, #0x3c
  459d60:	mov	w9, #0x1                   	// #1
  459d64:	ldaxr	w10, [x8]
  459d68:	stlxr	w11, w9, [x8]
  459d6c:	cbnz	w11, 459d64 <feof@plt+0x564c4>
  459d70:	cbnz	w10, 459e08 <feof@plt+0x56568>
  459d74:	cmp	x21, #0x10
  459d78:	b.cc	459df8 <feof@plt+0x56558>  // b.lo, b.ul, b.last
  459d7c:	mov	x8, x19
  459d80:	ldr	x9, [x8, #64]!
  459d84:	cbz	x9, 459df0 <feof@plt+0x56550>
  459d88:	mov	x11, xzr
  459d8c:	mov	x10, xzr
  459d90:	mov	x12, x9
  459d94:	mov	x0, x8
  459d98:	b	459db0 <feof@plt+0x56510>
  459d9c:	mov	x10, x0
  459da0:	mov	x0, x12
  459da4:	ldr	x12, [x12]
  459da8:	add	x11, x11, #0x1
  459dac:	cbz	x12, 459dcc <feof@plt+0x5652c>
  459db0:	cbz	x10, 459d9c <feof@plt+0x564fc>
  459db4:	ldr	x13, [x10]
  459db8:	ldr	x14, [x12, #8]
  459dbc:	ldr	x13, [x13, #8]
  459dc0:	cmp	x14, x13
  459dc4:	b.cc	459d9c <feof@plt+0x564fc>  // b.lo, b.ul, b.last
  459dc8:	b	459da0 <feof@plt+0x56500>
  459dcc:	cmp	x11, #0x10
  459dd0:	b.cc	459df0 <feof@plt+0x56550>  // b.lo, b.ul, b.last
  459dd4:	ldr	x9, [x10]
  459dd8:	ldr	x11, [x9, #8]
  459ddc:	cmp	x11, x21
  459de0:	b.cs	459df8 <feof@plt+0x56558>  // b.hs, b.nlast
  459de4:	ldr	x9, [x9]
  459de8:	str	x9, [x10]
  459dec:	ldr	x9, [x8]
  459df0:	stp	x9, x21, [x20]
  459df4:	str	x20, [x8]
  459df8:	ldr	w8, [x19, #8]
  459dfc:	cbz	w8, 459e08 <feof@plt+0x56568>
  459e00:	add	x8, x19, #0x3c
  459e04:	stlr	wzr, [x8]
  459e08:	ldp	x20, x19, [sp, #32]
  459e0c:	ldr	x21, [sp, #16]
  459e10:	ldp	x29, x30, [sp], #48
  459e14:	ret
  459e18:	stp	x29, x30, [sp, #-80]!
  459e1c:	str	x25, [sp, #16]
  459e20:	stp	x24, x23, [sp, #32]
  459e24:	stp	x22, x21, [sp, #48]
  459e28:	stp	x20, x19, [sp, #64]
  459e2c:	mov	x29, sp
  459e30:	ldr	x8, [x4, #16]
  459e34:	mov	x19, x4
  459e38:	mov	x20, x1
  459e3c:	cmp	x8, x1
  459e40:	b.cs	459e7c <feof@plt+0x565dc>  // b.hs, b.nlast
  459e44:	mov	x22, x3
  459e48:	mov	x24, x2
  459e4c:	mov	x21, x0
  459e50:	bl	403790 <getpagesize@plt>
  459e54:	ldr	x9, [x19, #8]
  459e58:	cbz	x9, 459e84 <feof@plt+0x565e4>
  459e5c:	sxtw	x8, w0
  459e60:	add	x9, x9, x20
  459e64:	cmp	x9, x8
  459e68:	lsl	x9, x9, #1
  459e6c:	b.cs	459e8c <feof@plt+0x565ec>  // b.hs, b.nlast
  459e70:	cmp	x9, x8
  459e74:	csel	x23, x8, x9, hi  // hi = pmore
  459e78:	b	459e9c <feof@plt+0x565fc>
  459e7c:	ldp	x22, x9, [x19]
  459e80:	b	459ef8 <feof@plt+0x56658>
  459e84:	lsl	x23, x20, #4
  459e88:	b	459e9c <feof@plt+0x565fc>
  459e8c:	add	x9, x8, x9
  459e90:	sub	x9, x9, #0x1
  459e94:	neg	x8, x8
  459e98:	and	x23, x9, x8
  459e9c:	mov	x0, x21
  459ea0:	mov	x1, x23
  459ea4:	mov	x2, x24
  459ea8:	mov	x3, x22
  459eac:	bl	459b44 <feof@plt+0x562a4>
  459eb0:	cbz	x0, 459f08 <feof@plt+0x56668>
  459eb4:	ldr	x24, [x19]
  459eb8:	mov	x22, x0
  459ebc:	cbz	x24, 459ee8 <feof@plt+0x56648>
  459ec0:	ldr	x25, [x19, #8]
  459ec4:	mov	x0, x22
  459ec8:	mov	x1, x24
  459ecc:	mov	x2, x25
  459ed0:	bl	402fc0 <memcpy@plt>
  459ed4:	ldr	x8, [x19, #16]
  459ed8:	mov	x0, x21
  459edc:	mov	x1, x24
  459ee0:	add	x2, x8, x25
  459ee4:	bl	459d08 <feof@plt+0x56468>
  459ee8:	ldr	x9, [x19, #8]
  459eec:	str	x22, [x19]
  459ef0:	sub	x8, x23, x9
  459ef4:	str	x8, [x19, #16]
  459ef8:	add	x0, x22, x9
  459efc:	add	x9, x9, x20
  459f00:	sub	x8, x8, x20
  459f04:	stp	x9, x8, [x19, #8]
  459f08:	ldp	x20, x19, [sp, #64]
  459f0c:	ldp	x22, x21, [sp, #48]
  459f10:	ldp	x24, x23, [sp, #32]
  459f14:	ldr	x25, [sp, #16]
  459f18:	ldp	x29, x30, [sp], #80
  459f1c:	ret
  459f20:	ldp	x0, x8, [x1]
  459f24:	add	x8, x0, x8
  459f28:	stp	x8, xzr, [x1]
  459f2c:	ret
  459f30:	stp	x29, x30, [sp, #-32]!
  459f34:	str	x19, [sp, #16]
  459f38:	mov	x29, sp
  459f3c:	ldp	x8, x9, [x1, #8]
  459f40:	ldr	x10, [x1]
  459f44:	mov	x19, x1
  459f48:	add	x11, x8, #0x7
  459f4c:	add	x8, x9, x8
  459f50:	and	x9, x11, #0xfffffffffffffff8
  459f54:	sub	x2, x8, x9
  459f58:	add	x1, x10, x9
  459f5c:	bl	459d08 <feof@plt+0x56468>
  459f60:	ldr	x8, [x19, #8]
  459f64:	str	xzr, [x19, #16]
  459f68:	cbnz	x8, 459f70 <feof@plt+0x566d0>
  459f6c:	str	xzr, [x19]
  459f70:	ldr	x19, [sp, #16]
  459f74:	mov	w0, #0x1                   	// #1
  459f78:	ldp	x29, x30, [sp], #32
  459f7c:	ret
  459f80:	stp	x29, x30, [sp, #-64]!
  459f84:	str	x23, [sp, #16]
  459f88:	stp	x22, x21, [sp, #32]
  459f8c:	stp	x20, x19, [sp, #48]
  459f90:	mov	x29, sp
  459f94:	mov	x21, x2
  459f98:	mov	x22, x1
  459f9c:	mov	x1, x3
  459fa0:	mov	x2, x4
  459fa4:	mov	x19, x4
  459fa8:	mov	x20, x3
  459fac:	mov	x23, x0
  459fb0:	bl	45a004 <feof@plt+0x56764>
  459fb4:	cbz	w0, 459fc0 <feof@plt+0x56720>
  459fb8:	ldr	w8, [x23, #56]
  459fbc:	cbz	w8, 459fd8 <feof@plt+0x56738>
  459fc0:	ldp	x20, x19, [sp, #48]
  459fc4:	ldp	x22, x21, [sp, #32]
  459fc8:	ldr	x23, [sp, #16]
  459fcc:	mov	w0, wzr
  459fd0:	ldp	x29, x30, [sp], #64
  459fd4:	ret
  459fd8:	ldr	x5, [x23, #24]
  459fdc:	mov	x0, x23
  459fe0:	mov	x1, x22
  459fe4:	mov	x2, x21
  459fe8:	mov	x3, x20
  459fec:	mov	x4, x19
  459ff0:	ldp	x20, x19, [sp, #48]
  459ff4:	ldp	x22, x21, [sp, #32]
  459ff8:	ldr	x23, [sp, #16]
  459ffc:	ldp	x29, x30, [sp], #64
  45a000:	br	x5
  45a004:	sub	sp, sp, #0x90
  45a008:	stp	x29, x30, [sp, #80]
  45a00c:	str	x23, [sp, #96]
  45a010:	stp	x22, x21, [sp, #112]
  45a014:	stp	x20, x19, [sp, #128]
  45a018:	add	x29, sp, #0x50
  45a01c:	ldr	w8, [x0, #8]
  45a020:	mov	x21, x2
  45a024:	mov	x19, x0
  45a028:	mov	x20, x1
  45a02c:	cbz	w8, 45a058 <feof@plt+0x567b8>
  45a030:	add	x8, x19, #0x38
  45a034:	ldar	w8, [x8]
  45a038:	cbz	w8, 45a060 <feof@plt+0x567c0>
  45a03c:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45a040:	add	x1, x1, #0x237
  45a044:	mov	w2, #0xffffffff            	// #-1
  45a048:	mov	x0, x21
  45a04c:	blr	x20
  45a050:	mov	w0, wzr
  45a054:	b	45a1f4 <feof@plt+0x56954>
  45a058:	ldr	w8, [x19, #56]
  45a05c:	cbnz	w8, 45a03c <feof@plt+0x5679c>
  45a060:	ldr	w8, [x19, #8]
  45a064:	cbz	w8, 45a07c <feof@plt+0x567dc>
  45a068:	add	x8, x19, #0x18
  45a06c:	ldar	x8, [x8]
  45a070:	str	x8, [x29, #24]
  45a074:	cbnz	x8, 45a1f0 <feof@plt+0x56950>
  45a078:	b	45a088 <feof@plt+0x567e8>
  45a07c:	ldr	x8, [x19, #24]
  45a080:	str	x8, [x29, #24]
  45a084:	cbnz	x8, 45a1f0 <feof@plt+0x56950>
  45a088:	ldr	x22, [x19]
  45a08c:	cbz	x22, 45a0cc <feof@plt+0x5682c>
  45a090:	add	x3, sp, #0xc
  45a094:	mov	x0, x22
  45a098:	mov	x1, x20
  45a09c:	mov	x2, x21
  45a0a0:	bl	45a2c8 <feof@plt+0x56a28>
  45a0a4:	ldr	w8, [sp, #12]
  45a0a8:	cmp	w0, #0x0
  45a0ac:	cset	w9, lt  // lt = tstop
  45a0b0:	mov	w2, w0
  45a0b4:	cmp	w8, #0x0
  45a0b8:	cset	w10, eq  // eq = none
  45a0bc:	and	w23, w9, w10
  45a0c0:	tbz	w0, #31, 45a19c <feof@plt+0x568fc>
  45a0c4:	cbnz	w8, 45a0d0 <feof@plt+0x56830>
  45a0c8:	b	45a19c <feof@plt+0x568fc>
  45a0cc:	mov	w23, wzr
  45a0d0:	adrp	x22, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45a0d4:	add	x22, x22, #0x25d
  45a0d8:	add	x3, sp, #0xc
  45a0dc:	mov	x0, x22
  45a0e0:	mov	x1, x20
  45a0e4:	mov	x2, x21
  45a0e8:	bl	45a2c8 <feof@plt+0x56a28>
  45a0ec:	ldr	w8, [sp, #12]
  45a0f0:	mov	w9, #0xffffffff            	// #-1
  45a0f4:	mov	w2, w0
  45a0f8:	cmp	w8, #0x0
  45a0fc:	ccmp	w0, w9, #0x0, eq  // eq = none
  45a100:	csinc	w23, w23, wzr, gt
  45a104:	tbz	w0, #31, 45a19c <feof@plt+0x568fc>
  45a108:	cbz	w8, 45a19c <feof@plt+0x568fc>
  45a10c:	adrp	x22, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45a110:	add	x22, x22, #0x26c
  45a114:	add	x3, sp, #0xc
  45a118:	mov	x0, x22
  45a11c:	mov	x1, x20
  45a120:	mov	x2, x21
  45a124:	bl	45a2c8 <feof@plt+0x56a28>
  45a128:	ldr	w8, [sp, #12]
  45a12c:	mov	w9, #0xffffffff            	// #-1
  45a130:	mov	w2, w0
  45a134:	cmp	w8, #0x0
  45a138:	ccmp	w0, w9, #0x0, eq  // eq = none
  45a13c:	csinc	w23, w23, wzr, gt
  45a140:	tbz	w0, #31, 45a19c <feof@plt+0x568fc>
  45a144:	cbz	w8, 45a19c <feof@plt+0x568fc>
  45a148:	add	x22, sp, #0x10
  45a14c:	bl	403400 <getpid@plt>
  45a150:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45a154:	sxtw	x3, w0
  45a158:	add	x2, x2, #0x27f
  45a15c:	add	x0, sp, #0x10
  45a160:	mov	w1, #0x40                  	// #64
  45a164:	bl	403530 <snprintf@plt>
  45a168:	add	x0, sp, #0x10
  45a16c:	add	x3, sp, #0xc
  45a170:	mov	x1, x20
  45a174:	mov	x2, x21
  45a178:	bl	45a2c8 <feof@plt+0x56a28>
  45a17c:	ldr	w8, [sp, #12]
  45a180:	mov	w9, #0xffffffff            	// #-1
  45a184:	mov	w2, w0
  45a188:	cmp	w8, #0x0
  45a18c:	ccmp	w0, w9, #0x0, eq  // eq = none
  45a190:	csinc	w23, w23, wzr, gt
  45a194:	tbz	w0, #31, 45a19c <feof@plt+0x568fc>
  45a198:	cbnz	w8, 45a1d4 <feof@plt+0x56934>
  45a19c:	tbnz	w2, #31, 45a1d4 <feof@plt+0x56934>
  45a1a0:	add	x5, x29, #0x18
  45a1a4:	mov	x0, x19
  45a1a8:	mov	x1, x22
  45a1ac:	mov	x3, x20
  45a1b0:	mov	x4, x21
  45a1b4:	bl	45a544 <feof@plt+0x56ca4>
  45a1b8:	cbz	w0, 45a220 <feof@plt+0x56980>
  45a1bc:	ldr	w9, [x19, #8]
  45a1c0:	ldr	x8, [x29, #24]
  45a1c4:	cbz	w9, 45a1ec <feof@plt+0x5694c>
  45a1c8:	add	x9, x19, #0x18
  45a1cc:	stlr	x8, [x9]
  45a1d0:	b	45a1f0 <feof@plt+0x56950>
  45a1d4:	cbnz	w23, 45a220 <feof@plt+0x56980>
  45a1d8:	ldr	x1, [x19]
  45a1dc:	cbz	x1, 45a20c <feof@plt+0x5696c>
  45a1e0:	mov	w2, #0x2                   	// #2
  45a1e4:	mov	x0, x21
  45a1e8:	b	45a21c <feof@plt+0x5697c>
  45a1ec:	str	x8, [x19, #24]
  45a1f0:	mov	w0, #0x1                   	// #1
  45a1f4:	ldp	x20, x19, [sp, #128]
  45a1f8:	ldp	x22, x21, [sp, #112]
  45a1fc:	ldr	x23, [sp, #96]
  45a200:	ldp	x29, x30, [sp, #80]
  45a204:	add	sp, sp, #0x90
  45a208:	ret
  45a20c:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45a210:	add	x1, x1, #0x296
  45a214:	mov	x0, x21
  45a218:	mov	w2, wzr
  45a21c:	blr	x20
  45a220:	ldr	w8, [x19, #8]
  45a224:	cbz	w8, 45a23c <feof@plt+0x5699c>
  45a228:	add	x8, x19, #0x38
  45a22c:	mov	w9, #0x1                   	// #1
  45a230:	mov	w0, wzr
  45a234:	stlr	w9, [x8]
  45a238:	b	45a1f4 <feof@plt+0x56954>
  45a23c:	mov	w8, #0x1                   	// #1
  45a240:	mov	w0, wzr
  45a244:	str	w8, [x19, #56]
  45a248:	b	45a1f4 <feof@plt+0x56954>
  45a24c:	stp	x29, x30, [sp, #-64]!
  45a250:	str	x23, [sp, #16]
  45a254:	stp	x22, x21, [sp, #32]
  45a258:	stp	x20, x19, [sp, #48]
  45a25c:	mov	x29, sp
  45a260:	mov	x21, x2
  45a264:	mov	x22, x1
  45a268:	mov	x1, x3
  45a26c:	mov	x2, x4
  45a270:	mov	x19, x4
  45a274:	mov	x20, x3
  45a278:	mov	x23, x0
  45a27c:	bl	45a004 <feof@plt+0x56764>
  45a280:	cbz	w0, 45a2b4 <feof@plt+0x56a14>
  45a284:	ldr	w8, [x23, #56]
  45a288:	cbz	w8, 45a294 <feof@plt+0x569f4>
  45a28c:	mov	w0, wzr
  45a290:	b	45a2b4 <feof@plt+0x56a14>
  45a294:	ldr	x8, [x23, #40]
  45a298:	mov	x0, x23
  45a29c:	mov	x1, x22
  45a2a0:	mov	x2, x21
  45a2a4:	mov	x3, x20
  45a2a8:	mov	x4, x19
  45a2ac:	blr	x8
  45a2b0:	mov	w0, #0x1                   	// #1
  45a2b4:	ldp	x20, x19, [sp, #48]
  45a2b8:	ldp	x22, x21, [sp, #32]
  45a2bc:	ldr	x23, [sp, #16]
  45a2c0:	ldp	x29, x30, [sp], #64
  45a2c4:	ret
  45a2c8:	stp	x29, x30, [sp, #-64]!
  45a2cc:	str	x23, [sp, #16]
  45a2d0:	stp	x22, x21, [sp, #32]
  45a2d4:	stp	x20, x19, [sp, #48]
  45a2d8:	mov	x29, sp
  45a2dc:	mov	x21, x3
  45a2e0:	mov	x20, x2
  45a2e4:	mov	x19, x1
  45a2e8:	mov	x22, x0
  45a2ec:	cbz	x3, 45a2f4 <feof@plt+0x56a54>
  45a2f0:	str	wzr, [x21]
  45a2f4:	mov	w1, #0x80000               	// #524288
  45a2f8:	mov	x0, x22
  45a2fc:	bl	403130 <open@plt>
  45a300:	tbnz	w0, #31, 45a318 <feof@plt+0x56a78>
  45a304:	mov	w1, #0x2                   	// #2
  45a308:	mov	w2, #0x1                   	// #1
  45a30c:	mov	w23, w0
  45a310:	bl	403820 <fcntl@plt>
  45a314:	b	45a34c <feof@plt+0x56aac>
  45a318:	bl	4035c0 <__errno_location@plt>
  45a31c:	cbz	x21, 45a338 <feof@plt+0x56a98>
  45a320:	ldr	w8, [x0]
  45a324:	cmp	w8, #0x2
  45a328:	b.ne	45a338 <feof@plt+0x56a98>  // b.any
  45a32c:	mov	w8, #0x1                   	// #1
  45a330:	str	w8, [x21]
  45a334:	b	45a348 <feof@plt+0x56aa8>
  45a338:	ldr	w2, [x0]
  45a33c:	mov	x0, x20
  45a340:	mov	x1, x22
  45a344:	blr	x19
  45a348:	mov	w23, #0xffffffff            	// #-1
  45a34c:	mov	w0, w23
  45a350:	ldp	x20, x19, [sp, #48]
  45a354:	ldp	x22, x21, [sp, #32]
  45a358:	ldr	x23, [sp, #16]
  45a35c:	ldp	x29, x30, [sp], #64
  45a360:	ret
  45a364:	stp	x29, x30, [sp, #-32]!
  45a368:	stp	x20, x19, [sp, #16]
  45a36c:	mov	x29, sp
  45a370:	mov	x20, x2
  45a374:	mov	x19, x1
  45a378:	bl	403630 <close@plt>
  45a37c:	tbnz	w0, #31, 45a388 <feof@plt+0x56ae8>
  45a380:	mov	w0, #0x1                   	// #1
  45a384:	b	45a3a4 <feof@plt+0x56b04>
  45a388:	bl	4035c0 <__errno_location@plt>
  45a38c:	ldr	w2, [x0]
  45a390:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45a394:	add	x1, x1, #0x2c5
  45a398:	mov	x0, x20
  45a39c:	blr	x19
  45a3a0:	mov	w0, wzr
  45a3a4:	ldp	x20, x19, [sp, #16]
  45a3a8:	ldp	x29, x30, [sp], #32
  45a3ac:	ret
  45a3b0:	stp	x29, x30, [sp, #-80]!
  45a3b4:	stp	x26, x25, [sp, #16]
  45a3b8:	stp	x24, x23, [sp, #32]
  45a3bc:	stp	x22, x21, [sp, #48]
  45a3c0:	stp	x20, x19, [sp, #64]
  45a3c4:	mov	x29, sp
  45a3c8:	mov	x20, x3
  45a3cc:	mov	x25, x2
  45a3d0:	mov	x26, x1
  45a3d4:	mov	w1, #0x13b4                	// #5044
  45a3d8:	mov	x2, x3
  45a3dc:	mov	x3, x4
  45a3e0:	mov	x22, x6
  45a3e4:	mov	x23, x5
  45a3e8:	mov	x19, x4
  45a3ec:	mov	x21, x0
  45a3f0:	bl	459b44 <feof@plt+0x562a4>
  45a3f4:	cbz	x0, 45a440 <feof@plt+0x56ba0>
  45a3f8:	mov	x24, x0
  45a3fc:	mov	x0, x21
  45a400:	mov	x1, x26
  45a404:	mov	x2, x25
  45a408:	mov	x3, x24
  45a40c:	mov	x4, x20
  45a410:	mov	x5, x19
  45a414:	mov	x6, x23
  45a418:	mov	x7, x22
  45a41c:	bl	45a458 <feof@plt+0x56bb8>
  45a420:	mov	w22, w0
  45a424:	mov	w2, #0x13b4                	// #5044
  45a428:	mov	x0, x21
  45a42c:	mov	x1, x24
  45a430:	mov	x3, x20
  45a434:	mov	x4, x19
  45a438:	bl	459d08 <feof@plt+0x56468>
  45a43c:	mov	w0, w22
  45a440:	ldp	x20, x19, [sp, #64]
  45a444:	ldp	x22, x21, [sp, #48]
  45a448:	ldp	x24, x23, [sp, #32]
  45a44c:	ldp	x26, x25, [sp, #16]
  45a450:	ldp	x29, x30, [sp], #80
  45a454:	ret
  45a458:	stp	x29, x30, [sp, #-80]!
  45a45c:	str	x25, [sp, #16]
  45a460:	stp	x24, x23, [sp, #32]
  45a464:	stp	x22, x21, [sp, #48]
  45a468:	stp	x20, x19, [sp, #64]
  45a46c:	mov	x29, sp
  45a470:	subs	x23, x2, #0xc
  45a474:	str	xzr, [x6]
  45a478:	str	xzr, [x7]
  45a47c:	b.cc	45a528 <feof@plt+0x56c88>  // b.lo, b.ul, b.last
  45a480:	ldr	w8, [x1]
  45a484:	mov	w9, #0x4c5a                	// #19546
  45a488:	movk	w9, #0x4249, lsl #16
  45a48c:	mov	x22, x1
  45a490:	cmp	w8, w9
  45a494:	b.ne	45a528 <feof@plt+0x56c88>  // b.any
  45a498:	ldrb	w8, [x22, #5]
  45a49c:	ldrb	w9, [x22, #4]
  45a4a0:	ldrb	w10, [x22, #6]
  45a4a4:	ldrb	w11, [x22, #7]
  45a4a8:	lsl	w8, w8, #8
  45a4ac:	bfi	w8, w9, #16, #8
  45a4b0:	ldrb	w9, [x22, #8]
  45a4b4:	orr	w8, w8, w10
  45a4b8:	ldrb	w10, [x22, #9]
  45a4bc:	lsl	x8, x8, #16
  45a4c0:	bfi	x8, x11, #8, #8
  45a4c4:	ldrb	w11, [x22, #10]
  45a4c8:	ldrb	w24, [x22, #11]
  45a4cc:	orr	x8, x8, x9
  45a4d0:	lsl	x9, x10, #8
  45a4d4:	bfi	x9, x8, #16, #48
  45a4d8:	orr	x8, x9, x11
  45a4dc:	bfi	x24, x8, #8, #56
  45a4e0:	mov	x21, x3
  45a4e4:	mov	x1, x24
  45a4e8:	mov	x2, x4
  45a4ec:	mov	x3, x5
  45a4f0:	mov	x19, x7
  45a4f4:	mov	x20, x6
  45a4f8:	bl	459b44 <feof@plt+0x562a4>
  45a4fc:	cbz	x0, 45a52c <feof@plt+0x56c8c>
  45a500:	mov	x25, x0
  45a504:	add	x0, x22, #0xc
  45a508:	mov	x1, x23
  45a50c:	mov	x2, x21
  45a510:	mov	x3, x25
  45a514:	mov	x4, x24
  45a518:	bl	45c08c <feof@plt+0x587ec>
  45a51c:	cbz	w0, 45a528 <feof@plt+0x56c88>
  45a520:	str	x25, [x20]
  45a524:	str	x24, [x19]
  45a528:	mov	w0, #0x1                   	// #1
  45a52c:	ldp	x20, x19, [sp, #64]
  45a530:	ldp	x22, x21, [sp, #48]
  45a534:	ldp	x24, x23, [sp, #32]
  45a538:	ldr	x25, [sp, #16]
  45a53c:	ldp	x29, x30, [sp], #80
  45a540:	ret
  45a544:	sub	sp, sp, #0xe0
  45a548:	stp	x29, x30, [sp, #128]
  45a54c:	stp	x28, x27, [sp, #144]
  45a550:	stp	x26, x25, [sp, #160]
  45a554:	stp	x24, x23, [sp, #176]
  45a558:	stp	x22, x21, [sp, #192]
  45a55c:	stp	x20, x19, [sp, #208]
  45a560:	add	x29, sp, #0x80
  45a564:	mov	x23, x4
  45a568:	mov	x24, x3
  45a56c:	adrp	x25, 45a000 <feof@plt+0x56760>
  45a570:	mov	x19, x5
  45a574:	add	x25, x25, #0x6c0
  45a578:	mov	w8, #0x1                   	// #1
  45a57c:	sub	x26, x29, #0x8
  45a580:	sub	x6, x29, #0x10
  45a584:	sub	x7, x29, #0x4
  45a588:	mov	x3, xzr
  45a58c:	mov	x4, x24
  45a590:	mov	x5, x23
  45a594:	mov	w21, w2
  45a598:	mov	x22, x1
  45a59c:	mov	x20, x0
  45a5a0:	stur	x25, [x29, #-16]
  45a5a4:	str	wzr, [sp, #40]
  45a5a8:	str	xzr, [sp, #32]
  45a5ac:	str	wzr, [sp, #24]
  45a5b0:	sub	x27, x29, #0x10
  45a5b4:	str	w8, [sp, #16]
  45a5b8:	stp	x26, xzr, [sp]
  45a5bc:	sub	x28, x29, #0x4
  45a5c0:	bl	45a6e8 <feof@plt+0x56e48>
  45a5c4:	cbz	w0, 45a6a0 <feof@plt+0x56e00>
  45a5c8:	cmp	w0, #0x0
  45a5cc:	adrp	x0, 45b000 <feof@plt+0x57760>
  45a5d0:	csinv	w8, w21, wzr, lt  // lt = tstop
  45a5d4:	add	x0, x0, #0xe7c
  45a5d8:	add	x1, sp, #0x30
  45a5dc:	stp	x20, x24, [sp, #48]
  45a5e0:	stp	x23, x27, [sp, #64]
  45a5e4:	stp	x28, x26, [sp, #80]
  45a5e8:	str	x22, [sp, #96]
  45a5ec:	str	w8, [sp, #104]
  45a5f0:	bl	4033d0 <dl_iterate_phdr@plt>
  45a5f4:	ldr	w10, [x20, #8]
  45a5f8:	ldur	w9, [x29, #-4]
  45a5fc:	add	x8, x20, #0x28
  45a600:	cbz	w10, 45a618 <feof@plt+0x56d78>
  45a604:	cbz	w9, 45a62c <feof@plt+0x56d8c>
  45a608:	adrp	x9, 45b000 <feof@plt+0x57760>
  45a60c:	add	x9, x9, #0xf6c
  45a610:	stlr	x9, [x8]
  45a614:	b	45a664 <feof@plt+0x56dc4>
  45a618:	cbz	w9, 45a648 <feof@plt+0x56da8>
  45a61c:	adrp	x9, 45b000 <feof@plt+0x57760>
  45a620:	add	x9, x9, #0xf6c
  45a624:	str	x9, [x8]
  45a628:	b	45a664 <feof@plt+0x56dc4>
  45a62c:	adrp	x9, 45c000 <feof@plt+0x58760>
  45a630:	add	x9, x9, #0x78
  45a634:	ldaxr	x10, [x8]
  45a638:	cbnz	x10, 45a660 <feof@plt+0x56dc0>
  45a63c:	stlxr	w10, x9, [x8]
  45a640:	cbnz	w10, 45a634 <feof@plt+0x56d94>
  45a644:	b	45a664 <feof@plt+0x56dc4>
  45a648:	ldr	x9, [x8]
  45a64c:	cbnz	x9, 45a664 <feof@plt+0x56dc4>
  45a650:	adrp	x9, 45c000 <feof@plt+0x58760>
  45a654:	add	x9, x9, #0x78
  45a658:	str	x9, [x8]
  45a65c:	b	45a664 <feof@plt+0x56dc4>
  45a660:	clrex
  45a664:	ldr	w8, [x20, #8]
  45a668:	cbz	w8, 45a680 <feof@plt+0x56de0>
  45a66c:	add	x8, x20, #0x18
  45a670:	ldar	x8, [x8]
  45a674:	str	x8, [x19]
  45a678:	cbnz	x8, 45a68c <feof@plt+0x56dec>
  45a67c:	b	45a694 <feof@plt+0x56df4>
  45a680:	ldr	x8, [x20, #24]
  45a684:	str	x8, [x19]
  45a688:	cbz	x8, 45a694 <feof@plt+0x56df4>
  45a68c:	cmp	x8, x25
  45a690:	b.ne	45a69c <feof@plt+0x56dfc>  // b.any
  45a694:	ldur	x8, [x29, #-16]
  45a698:	str	x8, [x19]
  45a69c:	mov	w0, #0x1                   	// #1
  45a6a0:	ldp	x20, x19, [sp, #208]
  45a6a4:	ldp	x22, x21, [sp, #192]
  45a6a8:	ldp	x24, x23, [sp, #176]
  45a6ac:	ldp	x26, x25, [sp, #160]
  45a6b0:	ldp	x28, x27, [sp, #144]
  45a6b4:	ldp	x29, x30, [sp, #128]
  45a6b8:	add	sp, sp, #0xe0
  45a6bc:	ret
  45a6c0:	stp	x29, x30, [sp, #-16]!
  45a6c4:	mov	x29, sp
  45a6c8:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45a6cc:	mov	x0, x4
  45a6d0:	add	x1, x1, #0xbb9
  45a6d4:	mov	w2, #0xffffffff            	// #-1
  45a6d8:	blr	x3
  45a6dc:	mov	w0, wzr
  45a6e0:	ldp	x29, x30, [sp], #16
  45a6e4:	ret
  45a6e8:	stp	x29, x30, [sp, #-96]!
  45a6ec:	stp	x28, x27, [sp, #16]
  45a6f0:	stp	x26, x25, [sp, #32]
  45a6f4:	stp	x24, x23, [sp, #48]
  45a6f8:	stp	x22, x21, [sp, #64]
  45a6fc:	stp	x20, x19, [sp, #80]
  45a700:	mov	x29, sp
  45a704:	sub	sp, sp, #0x3c0
  45a708:	ldr	w28, [x29, #120]
  45a70c:	ldr	x21, [x29, #96]
  45a710:	mov	x26, x7
  45a714:	mov	x24, x6
  45a718:	mov	x25, x5
  45a71c:	mov	x22, x4
  45a720:	mov	x23, x3
  45a724:	mov	w20, w2
  45a728:	mov	x27, x1
  45a72c:	mov	x19, x0
  45a730:	cbnz	w28, 45a73c <feof@plt+0x56e9c>
  45a734:	str	wzr, [x26]
  45a738:	str	wzr, [x21]
  45a73c:	sub	x6, x29, #0x28
  45a740:	mov	w3, #0x40                  	// #64
  45a744:	mov	x0, x19
  45a748:	mov	w1, w20
  45a74c:	mov	x2, xzr
  45a750:	mov	x4, x22
  45a754:	mov	x5, x25
  45a758:	bl	45d5e0 <feof@plt+0x59d40>
  45a75c:	cbz	w0, 45a884 <feof@plt+0x56fe4>
  45a760:	ldur	x8, [x29, #-40]
  45a764:	stp	x27, x24, [sp, #232]
  45a768:	stp	x26, x23, [sp, #248]
  45a76c:	str	w28, [sp, #280]
  45a770:	ldrb	w9, [x8, #5]
  45a774:	str	x21, [sp, #224]
  45a778:	str	w20, [sp, #324]
  45a77c:	ldrb	w24, [x8]
  45a780:	str	w9, [sp, #300]
  45a784:	ldrh	w9, [x8, #18]
  45a788:	ldrb	w23, [x8, #1]
  45a78c:	mov	x2, x22
  45a790:	ldrb	w22, [x8, #2]
  45a794:	str	w9, [sp, #264]
  45a798:	ldr	w9, [x8, #48]
  45a79c:	ldrb	w20, [x8, #3]
  45a7a0:	mov	x0, x19
  45a7a4:	ldrb	w21, [x8, #4]
  45a7a8:	ldrb	w19, [x8, #6]
  45a7ac:	mov	x3, x25
  45a7b0:	ldrh	w25, [x8, #16]
  45a7b4:	ldr	x27, [x8, #40]
  45a7b8:	ldrh	w26, [x8, #60]
  45a7bc:	ldrh	w28, [x8, #62]
  45a7c0:	sub	x1, x29, #0x28
  45a7c4:	str	w9, [sp, #272]
  45a7c8:	str	x0, [sp, #288]
  45a7cc:	stp	x3, x2, [sp, #304]
  45a7d0:	bl	45d6a0 <feof@plt+0x59e00>
  45a7d4:	cmp	w24, #0x7f
  45a7d8:	b.ne	45a834 <feof@plt+0x56f94>  // b.any
  45a7dc:	cmp	w23, #0x45
  45a7e0:	b.ne	45a834 <feof@plt+0x56f94>  // b.any
  45a7e4:	cmp	w22, #0x4c
  45a7e8:	b.ne	45a834 <feof@plt+0x56f94>  // b.any
  45a7ec:	cmp	w20, #0x46
  45a7f0:	b.ne	45a834 <feof@plt+0x56f94>  // b.any
  45a7f4:	cmp	w19, #0x1
  45a7f8:	b.ne	45a840 <feof@plt+0x56fa0>  // b.any
  45a7fc:	ldr	x22, [sp, #312]
  45a800:	ldr	w20, [sp, #324]
  45a804:	cmp	w21, #0x2
  45a808:	b.ne	45a860 <feof@plt+0x56fc0>  // b.any
  45a80c:	ldr	w8, [sp, #300]
  45a810:	sub	w8, w8, #0x1
  45a814:	cmp	w8, #0x2
  45a818:	b.cs	45a86c <feof@plt+0x56fcc>  // b.hs, b.nlast
  45a81c:	ldr	w8, [x29, #112]
  45a820:	cbz	w8, 45a8c4 <feof@plt+0x57024>
  45a824:	cmp	w25, #0x3
  45a828:	b.ne	45a8c4 <feof@plt+0x57024>  // b.any
  45a82c:	mov	w25, #0xffffffff            	// #-1
  45a830:	b	45a8a0 <feof@plt+0x57000>
  45a834:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45a838:	add	x1, x1, #0xbd9
  45a83c:	b	45a848 <feof@plt+0x56fa8>
  45a840:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45a844:	add	x1, x1, #0xbf4
  45a848:	ldp	x25, x22, [sp, #304]
  45a84c:	mov	w2, wzr
  45a850:	mov	x0, x25
  45a854:	blr	x22
  45a858:	ldr	w20, [sp, #324]
  45a85c:	b	45a884 <feof@plt+0x56fe4>
  45a860:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45a864:	add	x1, x1, #0xc20
  45a868:	b	45a874 <feof@plt+0x56fd4>
  45a86c:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45a870:	add	x1, x1, #0xc48
  45a874:	ldr	x25, [sp, #304]
  45a878:	mov	w2, wzr
  45a87c:	mov	x0, x25
  45a880:	blr	x22
  45a884:	cmn	w20, #0x1
  45a888:	b.eq	45a89c <feof@plt+0x56ffc>  // b.none
  45a88c:	mov	w0, w20
  45a890:	mov	x1, x22
  45a894:	mov	x2, x25
  45a898:	bl	45a364 <feof@plt+0x56ac4>
  45a89c:	mov	w25, wzr
  45a8a0:	mov	w0, w25
  45a8a4:	add	sp, sp, #0x3c0
  45a8a8:	ldp	x20, x19, [sp, #80]
  45a8ac:	ldp	x22, x21, [sp, #64]
  45a8b0:	ldp	x24, x23, [sp, #48]
  45a8b4:	ldp	x26, x25, [sp, #32]
  45a8b8:	ldp	x28, x27, [sp, #16]
  45a8bc:	ldp	x29, x30, [sp], #96
  45a8c0:	ret
  45a8c4:	cmp	w26, #0x0
  45a8c8:	mov	w9, #0xffff                	// #65535
  45a8cc:	cset	w8, eq  // eq = none
  45a8d0:	cmp	w28, w9
  45a8d4:	cset	w9, eq  // eq = none
  45a8d8:	cbz	x27, 45a958 <feof@plt+0x570b8>
  45a8dc:	ldr	x25, [sp, #304]
  45a8e0:	ldr	x21, [sp, #288]
  45a8e4:	orr	w8, w8, w9
  45a8e8:	cbz	w8, 45a960 <feof@plt+0x570c0>
  45a8ec:	add	x6, sp, #0x220
  45a8f0:	mov	w3, #0x8                   	// #8
  45a8f4:	mov	x0, x21
  45a8f8:	mov	w1, w20
  45a8fc:	mov	x2, x27
  45a900:	mov	x4, x22
  45a904:	mov	x5, x25
  45a908:	bl	45d5e0 <feof@plt+0x59d40>
  45a90c:	cbz	w0, 45a884 <feof@plt+0x56fe4>
  45a910:	ldr	x8, [sp, #544]
  45a914:	cbnz	w26, 45a91c <feof@plt+0x5707c>
  45a918:	ldr	w26, [x8, #32]
  45a91c:	mov	w9, #0xffff                	// #65535
  45a920:	cmp	w28, w9
  45a924:	b.ne	45a940 <feof@plt+0x570a0>  // b.any
  45a928:	ldr	w8, [x8, #40]
  45a92c:	lsr	w9, w8, #16
  45a930:	cmp	w9, #0x0
  45a934:	sub	w10, w8, #0x100
  45a938:	ccmp	w8, w26, #0x0, ne  // ne = any
  45a93c:	csel	w28, w10, w8, cs  // cs = hs, nlast
  45a940:	add	x1, sp, #0x220
  45a944:	mov	x0, x21
  45a948:	mov	x2, x22
  45a94c:	mov	x3, x25
  45a950:	bl	45d6a0 <feof@plt+0x59e00>
  45a954:	b	45a960 <feof@plt+0x570c0>
  45a958:	ldr	x25, [sp, #304]
  45a95c:	ldr	x21, [sp, #288]
  45a960:	sub	w8, w26, #0x1
  45a964:	add	x2, x27, #0x40
  45a968:	lsl	x3, x8, #6
  45a96c:	sub	x6, x29, #0x40
  45a970:	mov	x0, x21
  45a974:	mov	w1, w20
  45a978:	mov	x4, x22
  45a97c:	mov	x5, x25
  45a980:	bl	45d5e0 <feof@plt+0x59d40>
  45a984:	cbz	w0, 45a884 <feof@plt+0x56fe4>
  45a988:	ldur	x9, [x29, #-64]
  45a98c:	sub	w8, w28, #0x1
  45a990:	sub	x6, x29, #0x58
  45a994:	mov	x0, x21
  45a998:	str	x9, [sp, #176]
  45a99c:	add	x8, x9, x8, lsl #6
  45a9a0:	ldp	x2, x3, [x8, #24]
  45a9a4:	mov	w1, w20
  45a9a8:	mov	x4, x22
  45a9ac:	mov	x5, x25
  45a9b0:	str	x3, [sp, #208]
  45a9b4:	bl	45d5e0 <feof@plt+0x59d40>
  45a9b8:	cbz	w0, 45aa9c <feof@plt+0x571fc>
  45a9bc:	ldur	x9, [x29, #-88]
  45a9c0:	add	x8, sp, #0x220
  45a9c4:	movi	v0.2d, #0x0
  45a9c8:	cmp	w26, #0x2
  45a9cc:	str	x9, [sp, #200]
  45a9d0:	stp	q0, q0, [x8]
  45a9d4:	stp	q0, q0, [x8, #32]
  45a9d8:	stp	q0, q0, [x8, #64]
  45a9dc:	stp	q0, q0, [x8, #96]
  45a9e0:	stp	q0, q0, [x8, #128]
  45a9e4:	stp	q0, q0, [x8, #160]
  45a9e8:	stp	q0, q0, [x8, #192]
  45a9ec:	stp	q0, q0, [x8, #224]
  45a9f0:	stp	q0, q0, [x8, #256]
  45a9f4:	stp	q0, q0, [x8, #288]
  45a9f8:	str	w26, [sp, #104]
  45a9fc:	b.cc	45af0c <feof@plt+0x5766c>  // b.lo, b.ul, b.last
  45aa00:	ldr	w8, [sp, #280]
  45aa04:	ldr	x11, [x29, #128]
  45aa08:	ldr	w12, [sp, #264]
  45aa0c:	ldr	w13, [x29, #136]
  45aa10:	cmp	w8, #0x0
  45aa14:	cset	w10, ne  // ne = any
  45aa18:	cmp	x11, #0x0
  45aa1c:	str	x11, [sp, #96]
  45aa20:	cset	w11, eq  // eq = none
  45aa24:	and	w10, w10, w11
  45aa28:	ldr	w11, [sp, #272]
  45aa2c:	add	x8, sp, #0x160
  45aa30:	cmp	w12, #0x15
  45aa34:	ldr	x19, [sp, #176]
  45aa38:	mov	w9, w26
  45aa3c:	str	w10, [sp, #196]
  45aa40:	cset	w10, eq  // eq = none
  45aa44:	tst	w11, #0x2
  45aa48:	add	x8, x8, #0x18
  45aa4c:	cset	w11, eq  // eq = none
  45aa50:	str	x8, [sp, #80]
  45aa54:	sub	x8, x9, #0x1
  45aa58:	mov	x27, xzr
  45aa5c:	mov	w24, wzr
  45aa60:	mov	w28, wzr
  45aa64:	and	w10, w10, w11
  45aa68:	str	x8, [sp, #184]
  45aa6c:	mov	w8, w13
  45aa70:	str	xzr, [sp, #160]
  45aa74:	str	wzr, [sp, #220]
  45aa78:	stp	xzr, xzr, [sp, #120]
  45aa7c:	str	wzr, [sp, #168]
  45aa80:	str	xzr, [sp, #112]
  45aa84:	str	wzr, [sp, #108]
  45aa88:	stp	xzr, xzr, [sp, #136]
  45aa8c:	str	wzr, [sp, #156]
  45aa90:	str	w10, [sp, #192]
  45aa94:	str	x8, [sp, #88]
  45aa98:	b	45aadc <feof@plt+0x5723c>
  45aa9c:	sub	x1, x29, #0x40
  45aaa0:	b	45b298 <feof@plt+0x579f8>
  45aaa4:	ldr	x8, [x20, #16]
  45aaa8:	ldr	x9, [sp, #376]
  45aaac:	ldr	w20, [sp, #324]
  45aab0:	stp	x8, x9, [sp, #352]
  45aab4:	ldr	x8, [x19]
  45aab8:	ldr	x19, [sp, #176]
  45aabc:	str	x8, [sp, #368]
  45aac0:	add	x8, sp, #0x160
  45aac4:	str	x8, [sp, #136]
  45aac8:	mov	w13, w21
  45aacc:	ldr	x8, [sp, #184]
  45aad0:	add	x27, x27, #0x1
  45aad4:	cmp	x8, x27
  45aad8:	b.eq	45b068 <feof@plt+0x577c8>  // b.none
  45aadc:	and	x8, x27, #0xffffffff
  45aae0:	add	x23, x19, x8, lsl #6
  45aae4:	ldr	w9, [x23, #4]!
  45aae8:	mov	x26, x8
  45aaec:	add	x8, x27, #0x1
  45aaf0:	cmp	w9, #0xb
  45aaf4:	b.eq	45ab08 <feof@plt+0x57268>  // b.none
  45aaf8:	cmp	w9, #0x2
  45aafc:	b.ne	45ab0c <feof@plt+0x5726c>  // b.any
  45ab00:	str	w8, [sp, #164]
  45ab04:	b	45ab0c <feof@plt+0x5726c>
  45ab08:	str	w8, [sp, #160]
  45ab0c:	lsl	x8, x26, #6
  45ab10:	ldr	w8, [x19, x8]
  45ab14:	ldr	x9, [sp, #208]
  45ab18:	cmp	x9, x8
  45ab1c:	b.ls	45b040 <feof@plt+0x577a0>  // b.plast
  45ab20:	ldr	x9, [sp, #200]
  45ab24:	str	x23, [sp, #264]
  45ab28:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ab2c:	add	x1, x1, #0xcf4
  45ab30:	add	x23, x9, x8
  45ab34:	mov	x0, x23
  45ab38:	mov	w21, w13
  45ab3c:	bl	403640 <strcmp@plt>
  45ab40:	str	x23, [sp, #272]
  45ab44:	cbz	w0, 45ac04 <feof@plt+0x57364>
  45ab48:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ab4c:	mov	x0, x23
  45ab50:	add	x1, x1, #0xd00
  45ab54:	bl	403640 <strcmp@plt>
  45ab58:	cbz	w0, 45ac0c <feof@plt+0x5736c>
  45ab5c:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ab60:	mov	x0, x23
  45ab64:	add	x1, x1, #0xd0c
  45ab68:	bl	403640 <strcmp@plt>
  45ab6c:	cbz	w0, 45ac14 <feof@plt+0x57374>
  45ab70:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ab74:	mov	x0, x23
  45ab78:	add	x1, x1, #0xd1a
  45ab7c:	bl	403640 <strcmp@plt>
  45ab80:	cbz	w0, 45ac1c <feof@plt+0x5737c>
  45ab84:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ab88:	mov	x0, x23
  45ab8c:	add	x1, x1, #0xd28
  45ab90:	bl	403640 <strcmp@plt>
  45ab94:	cbz	w0, 45ac24 <feof@plt+0x57384>
  45ab98:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ab9c:	mov	x0, x23
  45aba0:	add	x1, x1, #0xd33
  45aba4:	bl	403640 <strcmp@plt>
  45aba8:	cbz	w0, 45ac2c <feof@plt+0x5738c>
  45abac:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45abb0:	mov	x0, x23
  45abb4:	add	x1, x1, #0xd40
  45abb8:	bl	403640 <strcmp@plt>
  45abbc:	cbz	w0, 45ac34 <feof@plt+0x57394>
  45abc0:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45abc4:	mov	x0, x23
  45abc8:	add	x1, x1, #0xd4d
  45abcc:	bl	403640 <strcmp@plt>
  45abd0:	cbz	w0, 45ac3c <feof@plt+0x5739c>
  45abd4:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45abd8:	mov	x0, x23
  45abdc:	add	x1, x1, #0xd5c
  45abe0:	bl	403640 <strcmp@plt>
  45abe4:	cbz	w0, 45ac44 <feof@plt+0x573a4>
  45abe8:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45abec:	mov	x0, x23
  45abf0:	add	x1, x1, #0xd6b
  45abf4:	bl	403640 <strcmp@plt>
  45abf8:	cbnz	w0, 45ac68 <feof@plt+0x573c8>
  45abfc:	mov	w8, #0x9                   	// #9
  45ac00:	b	45ac48 <feof@plt+0x573a8>
  45ac04:	mov	x8, xzr
  45ac08:	b	45ac48 <feof@plt+0x573a8>
  45ac0c:	mov	w8, #0x1                   	// #1
  45ac10:	b	45ac48 <feof@plt+0x573a8>
  45ac14:	mov	w8, #0x2                   	// #2
  45ac18:	b	45ac48 <feof@plt+0x573a8>
  45ac1c:	mov	w8, #0x3                   	// #3
  45ac20:	b	45ac48 <feof@plt+0x573a8>
  45ac24:	mov	w8, #0x4                   	// #4
  45ac28:	b	45ac48 <feof@plt+0x573a8>
  45ac2c:	mov	w8, #0x5                   	// #5
  45ac30:	b	45ac48 <feof@plt+0x573a8>
  45ac34:	mov	w8, #0x6                   	// #6
  45ac38:	b	45ac48 <feof@plt+0x573a8>
  45ac3c:	mov	w8, #0x7                   	// #7
  45ac40:	b	45ac48 <feof@plt+0x573a8>
  45ac44:	mov	w8, #0x8                   	// #8
  45ac48:	add	x9, x19, x26, lsl #6
  45ac4c:	ldur	q0, [x9, #24]
  45ac50:	add	x10, sp, #0x220
  45ac54:	add	x8, x10, x8, lsl #5
  45ac58:	str	q0, [x8]
  45ac5c:	ldr	w9, [x9, #8]
  45ac60:	ubfx	w9, w9, #11, #1
  45ac64:	str	w9, [x8, #24]
  45ac68:	ldr	w8, [sp, #220]
  45ac6c:	ldr	w9, [sp, #196]
  45ac70:	cmp	w8, #0x0
  45ac74:	cset	w8, ne  // ne = any
  45ac78:	orr	w8, w9, w8
  45ac7c:	tbnz	w8, #0, 45ac98 <feof@plt+0x573f8>
  45ac80:	ldr	x0, [sp, #272]
  45ac84:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ac88:	add	x1, x1, #0xc8d
  45ac8c:	bl	403640 <strcmp@plt>
  45ac90:	cbz	w0, 45acc4 <feof@plt+0x57424>
  45ac94:	str	wzr, [sp, #220]
  45ac98:	mov	w13, w21
  45ac9c:	ldr	w8, [sp, #280]
  45aca0:	orr	w8, w24, w8
  45aca4:	cbnz	w8, 45ae0c <feof@plt+0x5756c>
  45aca8:	ldr	x0, [sp, #272]
  45acac:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45acb0:	add	x1, x1, #0xca4
  45acb4:	bl	403640 <strcmp@plt>
  45acb8:	cbz	w0, 45ad90 <feof@plt+0x574f0>
  45acbc:	mov	w24, wzr
  45acc0:	b	45ae08 <feof@plt+0x57568>
  45acc4:	str	w24, [sp, #172]
  45acc8:	add	x24, x19, x26, lsl #6
  45accc:	ldr	x3, [x24, #32]!
  45acd0:	ldr	x0, [sp, #288]
  45acd4:	add	x6, sp, #0x1d8
  45acd8:	mov	w1, w20
  45acdc:	ldur	x2, [x24, #-8]
  45ace0:	mov	x4, x22
  45ace4:	mov	x5, x25
  45ace8:	bl	45d5e0 <feof@plt+0x59d40>
  45acec:	cbz	w0, 45b9f8 <feof@plt+0x58158>
  45acf0:	ldr	x19, [sp, #472]
  45acf4:	ldr	w8, [x19, #8]
  45acf8:	cmp	w8, #0x3
  45acfc:	b.ne	45ad50 <feof@plt+0x574b0>  // b.any
  45ad00:	ldr	w8, [x19]
  45ad04:	cmp	w8, #0x4
  45ad08:	b.ne	45ad50 <feof@plt+0x574b0>  // b.any
  45ad0c:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ad10:	add	x0, x19, #0xc
  45ad14:	mov	w2, #0x4                   	// #4
  45ad18:	add	x1, x1, #0xca0
  45ad1c:	bl	403450 <strncmp@plt>
  45ad20:	cbnz	w0, 45ad50 <feof@plt+0x574b0>
  45ad24:	ldr	w8, [x19, #4]
  45ad28:	ldr	x9, [x24]
  45ad2c:	add	x10, x19, #0x10
  45ad30:	add	w11, w8, #0x10
  45ad34:	cmp	x9, x11
  45ad38:	ldr	w9, [sp, #168]
  45ad3c:	csel	w9, w9, w8, hi  // hi = pmore
  45ad40:	ldr	x8, [sp, #128]
  45ad44:	str	w9, [sp, #168]
  45ad48:	csel	x8, x8, x10, hi  // hi = pmore
  45ad4c:	str	x8, [sp, #128]
  45ad50:	ldr	w24, [sp, #172]
  45ad54:	ldr	x19, [sp, #176]
  45ad58:	mov	w13, w21
  45ad5c:	cbz	w21, 45ade8 <feof@plt+0x57548>
  45ad60:	ldr	w8, [sp, #168]
  45ad64:	cmp	w8, w13
  45ad68:	b.ne	45bbb4 <feof@plt+0x58314>  // b.any
  45ad6c:	ldr	x0, [sp, #128]
  45ad70:	ldp	x2, x1, [sp, #88]
  45ad74:	bl	403840 <bcmp@plt>
  45ad78:	mov	w8, #0x1                   	// #1
  45ad7c:	str	w8, [sp, #220]
  45ad80:	cbnz	w0, 45bbc8 <feof@plt+0x58328>
  45ad84:	mov	w13, w21
  45ad88:	str	w21, [sp, #168]
  45ad8c:	b	45ac9c <feof@plt+0x573fc>
  45ad90:	add	x19, x19, x26, lsl #6
  45ad94:	ldr	x3, [x19, #32]!
  45ad98:	ldr	x0, [sp, #288]
  45ad9c:	add	x6, sp, #0x1c0
  45ada0:	mov	w1, w20
  45ada4:	ldur	x2, [x19, #-8]
  45ada8:	mov	x4, x22
  45adac:	mov	x5, x25
  45adb0:	bl	45d5e0 <feof@plt+0x59d40>
  45adb4:	cbz	w0, 45ba3c <feof@plt+0x5819c>
  45adb8:	ldr	x23, [sp, #448]
  45adbc:	ldr	x19, [x19]
  45adc0:	mov	x0, x23
  45adc4:	mov	x1, x19
  45adc8:	bl	4037e0 <strnlen@plt>
  45adcc:	add	x8, x0, #0x3
  45add0:	and	x8, x8, #0xfffffffffffffffc
  45add4:	add	x9, x8, #0x4
  45add8:	cmp	x9, x19
  45addc:	b.ls	45adf4 <feof@plt+0x57554>  // b.plast
  45ade0:	mov	w24, #0x1                   	// #1
  45ade4:	b	45ae04 <feof@plt+0x57564>
  45ade8:	mov	w8, #0x1                   	// #1
  45adec:	str	w8, [sp, #220]
  45adf0:	b	45ac9c <feof@plt+0x573fc>
  45adf4:	ldr	w8, [x23, x8]
  45adf8:	mov	w24, #0x1                   	// #1
  45adfc:	str	x23, [sp, #112]
  45ae00:	str	w8, [sp, #108]
  45ae04:	ldr	x19, [sp, #176]
  45ae08:	mov	w13, w21
  45ae0c:	cbnz	w28, 45aea0 <feof@plt+0x57600>
  45ae10:	ldr	x0, [sp, #272]
  45ae14:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ae18:	add	x1, x1, #0xcb3
  45ae1c:	bl	403640 <strcmp@plt>
  45ae20:	cbz	w0, 45ae2c <feof@plt+0x5758c>
  45ae24:	mov	w28, wzr
  45ae28:	b	45ae9c <feof@plt+0x575fc>
  45ae2c:	add	x19, x19, x26, lsl #6
  45ae30:	ldr	x3, [x19, #32]!
  45ae34:	ldr	x0, [sp, #288]
  45ae38:	add	x6, sp, #0x1a8
  45ae3c:	mov	w1, w20
  45ae40:	ldur	x2, [x19, #-8]
  45ae44:	mov	x4, x22
  45ae48:	mov	x5, x25
  45ae4c:	bl	45d5e0 <feof@plt+0x59d40>
  45ae50:	cbz	w0, 45ba48 <feof@plt+0x581a8>
  45ae54:	ldr	x28, [sp, #424]
  45ae58:	ldr	x19, [x19]
  45ae5c:	mov	x0, x28
  45ae60:	mov	x1, x19
  45ae64:	bl	4037e0 <strnlen@plt>
  45ae68:	ldr	x10, [sp, #144]
  45ae6c:	add	x8, x0, #0x1
  45ae70:	cmp	x0, x19
  45ae74:	add	x9, x28, x8
  45ae78:	csel	x10, x9, x10, cc  // cc = lo, ul, last
  45ae7c:	ldr	w9, [sp, #156]
  45ae80:	sub	w8, w19, w8
  45ae84:	ldr	x19, [sp, #176]
  45ae88:	str	x28, [sp, #120]
  45ae8c:	csel	w9, w8, w9, cc  // cc = lo, ul, last
  45ae90:	mov	w28, #0x1                   	// #1
  45ae94:	str	x10, [sp, #144]
  45ae98:	str	w9, [sp, #156]
  45ae9c:	mov	w13, w21
  45aea0:	ldr	w8, [sp, #192]
  45aea4:	cbz	w8, 45aacc <feof@plt+0x5722c>
  45aea8:	ldr	x8, [sp, #264]
  45aeac:	ldr	w8, [x8]
  45aeb0:	cmp	w8, #0x1
  45aeb4:	b.ne	45aacc <feof@plt+0x5722c>  // b.any
  45aeb8:	ldr	x0, [sp, #272]
  45aebc:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45aec0:	add	x1, x1, #0xcc5
  45aec4:	bl	403640 <strcmp@plt>
  45aec8:	cbnz	w0, 45aac8 <feof@plt+0x57228>
  45aecc:	mov	w1, w20
  45aed0:	add	x20, x19, x26, lsl #6
  45aed4:	mov	x19, x20
  45aed8:	ldr	x3, [x19, #32]!
  45aedc:	ldr	x0, [sp, #288]
  45aee0:	ldr	x6, [sp, #80]
  45aee4:	mov	x4, x22
  45aee8:	ldur	x2, [x19, #-8]
  45aeec:	mov	x5, x25
  45aef0:	bl	45d5e0 <feof@plt+0x59d40>
  45aef4:	cbnz	w0, 45aaa4 <feof@plt+0x57204>
  45aef8:	str	w24, [sp, #172]
  45aefc:	ldr	x24, [sp, #136]
  45af00:	ldr	w20, [sp, #324]
  45af04:	ldr	x21, [sp, #288]
  45af08:	b	45b1c4 <feof@plt+0x57924>
  45af0c:	ldr	x19, [sp, #176]
  45af10:	mov	w23, wzr
  45af14:	str	wzr, [sp, #220]
  45af18:	stp	xzr, xzr, [sp, #120]
  45af1c:	str	wzr, [sp, #168]
  45af20:	mov	w24, wzr
  45af24:	mov	x27, xzr
  45af28:	str	wzr, [sp, #108]
  45af2c:	mov	w28, wzr
  45af30:	stp	xzr, xzr, [sp, #136]
  45af34:	str	wzr, [sp, #156]
  45af38:	mov	w10, w23
  45af3c:	ldr	w9, [sp, #280]
  45af40:	ldr	x21, [sp, #288]
  45af44:	mov	w8, wzr
  45af48:	cbnz	w9, 45b078 <feof@plt+0x577d8>
  45af4c:	ldr	x23, [sp, #136]
  45af50:	cbz	w10, 45b07c <feof@plt+0x577dc>
  45af54:	sub	w8, w10, #0x1
  45af58:	str	w24, [sp, #172]
  45af5c:	mov	x24, x23
  45af60:	add	x23, x19, x8, lsl #6
  45af64:	ldr	w19, [x23, #40]
  45af68:	ldr	w8, [sp, #104]
  45af6c:	cmp	w19, w8
  45af70:	b.cs	45b1b0 <feof@plt+0x57910>  // b.hs, b.nlast
  45af74:	ldr	x3, [x23, #32]!
  45af78:	add	x6, sp, #0x208
  45af7c:	mov	x0, x21
  45af80:	mov	w1, w20
  45af84:	ldur	x2, [x23, #-8]
  45af88:	mov	x4, x22
  45af8c:	mov	x5, x25
  45af90:	bl	45d5e0 <feof@plt+0x59d40>
  45af94:	cbz	w0, 45b1c4 <feof@plt+0x57924>
  45af98:	ldr	x9, [sp, #176]
  45af9c:	sub	w8, w19, #0x1
  45afa0:	mov	x19, x21
  45afa4:	add	x6, sp, #0x1f0
  45afa8:	add	x21, x9, x8, lsl #6
  45afac:	ldr	x3, [x21, #32]!
  45afb0:	mov	x0, x19
  45afb4:	mov	w1, w20
  45afb8:	mov	x4, x22
  45afbc:	ldur	x2, [x21, #-8]
  45afc0:	mov	x5, x25
  45afc4:	bl	45d5e0 <feof@plt+0x59d40>
  45afc8:	cbz	w0, 45b9e4 <feof@plt+0x58144>
  45afcc:	mov	w1, #0x18                  	// #24
  45afd0:	mov	x0, x19
  45afd4:	mov	x2, x22
  45afd8:	mov	x3, x25
  45afdc:	bl	459b44 <feof@plt+0x562a4>
  45afe0:	cbz	x0, 45ba58 <feof@plt+0x581b8>
  45afe4:	ldr	x8, [x21]
  45afe8:	ldr	x9, [x23]
  45afec:	ldr	x1, [sp, #520]
  45aff0:	ldr	x19, [sp, #496]
  45aff4:	str	x8, [sp, #280]
  45aff8:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  45affc:	movk	x8, #0xaaab
  45b000:	umulh	x8, x9, x8
  45b004:	mov	x26, x0
  45b008:	cmp	x9, #0x18
  45b00c:	lsr	x23, x8, #4
  45b010:	str	w28, [sp, #272]
  45b014:	str	x9, [sp, #264]
  45b018:	b.cc	45ba60 <feof@plt+0x581c0>  // b.lo, b.ul, b.last
  45b01c:	cmp	x23, #0x1
  45b020:	csinc	x10, x23, xzr, hi  // hi = pmore
  45b024:	cmp	x10, #0x2
  45b028:	b.cs	45bc5c <feof@plt+0x583bc>  // b.hs, b.nlast
  45b02c:	ldr	x21, [sp, #288]
  45b030:	mov	x8, xzr
  45b034:	mov	x28, xzr
  45b038:	mov	x9, x1
  45b03c:	b	45bd08 <feof@plt+0x58468>
  45b040:	str	w24, [sp, #172]
  45b044:	ldr	x24, [sp, #136]
  45b048:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45b04c:	add	x1, x1, #0xc6f
  45b050:	mov	x0, x25
  45b054:	mov	w2, wzr
  45b058:	blr	x22
  45b05c:	mov	w19, wzr
  45b060:	ldr	x21, [sp, #288]
  45b064:	b	45b1c8 <feof@plt+0x57928>
  45b068:	ldr	x27, [sp, #112]
  45b06c:	ldp	w23, w10, [sp, #160]
  45b070:	cbnz	w10, 45af3c <feof@plt+0x5769c>
  45b074:	b	45af38 <feof@plt+0x57698>
  45b078:	ldr	x23, [sp, #136]
  45b07c:	sub	x1, x29, #0x40
  45b080:	mov	x0, x21
  45b084:	mov	x2, x22
  45b088:	mov	x3, x25
  45b08c:	str	w8, [sp, #324]
  45b090:	mov	w19, w28
  45b094:	bl	45d6a0 <feof@plt+0x59e00>
  45b098:	sub	x1, x29, #0x58
  45b09c:	mov	x0, x21
  45b0a0:	mov	x2, x22
  45b0a4:	mov	x3, x25
  45b0a8:	bl	45d6a0 <feof@plt+0x59e00>
  45b0ac:	ldr	x8, [sp, #128]
  45b0b0:	cbz	x8, 45b3b0 <feof@plt+0x57b10>
  45b0b4:	ldr	w26, [sp, #168]
  45b0b8:	str	w24, [sp, #172]
  45b0bc:	mov	x24, x23
  45b0c0:	str	x27, [sp, #112]
  45b0c4:	mov	w23, w26
  45b0c8:	lsl	x8, x23, #1
  45b0cc:	add	x27, x8, #0x21
  45b0d0:	mov	x0, x21
  45b0d4:	mov	x1, x27
  45b0d8:	mov	x2, x22
  45b0dc:	mov	x3, x25
  45b0e0:	bl	459b44 <feof@plt+0x562a4>
  45b0e4:	cbz	x0, 45b2ac <feof@plt+0x57a0c>
  45b0e8:	adrp	x8, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45b0ec:	add	x8, x8, #0xd98
  45b0f0:	ldur	q0, [x8, #9]
  45b0f4:	ldr	q1, [x8]
  45b0f8:	mov	x28, x0
  45b0fc:	stur	q0, [x0, #9]
  45b100:	str	q1, [x0]
  45b104:	cbz	w26, 45b2bc <feof@plt+0x57a1c>
  45b108:	ldr	x11, [sp, #128]
  45b10c:	ldrb	w9, [x11]
  45b110:	lsr	w8, w9, #4
  45b114:	cmp	w9, #0xa0
  45b118:	orr	w10, w8, #0x30
  45b11c:	add	w8, w8, #0x57
  45b120:	csel	w8, w10, w8, cc  // cc = lo, ul, last
  45b124:	mov	w10, #0x30                  	// #48
  45b128:	bfxil	w10, w9, #0, #4
  45b12c:	and	w9, w9, #0xf
  45b130:	cmp	w9, #0xa
  45b134:	add	w9, w9, #0x57
  45b138:	strb	w8, [x28, #25]
  45b13c:	add	x8, x28, #0x1c
  45b140:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  45b144:	mov	w10, #0x2f                  	// #47
  45b148:	cmp	w26, #0x1
  45b14c:	strb	w9, [x28, #26]
  45b150:	strb	w10, [x28, #27]
  45b154:	b.eq	45b2c0 <feof@plt+0x57a20>  // b.none
  45b158:	sub	x9, x23, #0x1
  45b15c:	add	x10, x11, #0x1
  45b160:	ldrb	w12, [x10], #1
  45b164:	lsr	w11, w12, #4
  45b168:	cmp	w12, #0xa0
  45b16c:	orr	w13, w11, #0x30
  45b170:	add	w11, w11, #0x57
  45b174:	csel	w11, w13, w11, cc  // cc = lo, ul, last
  45b178:	mov	w13, #0x30                  	// #48
  45b17c:	bfxil	w13, w12, #0, #4
  45b180:	and	w12, w12, #0xf
  45b184:	cmp	w12, #0xa
  45b188:	add	w12, w12, #0x57
  45b18c:	strb	w11, [x8]
  45b190:	add	x11, x8, #0x2
  45b194:	csel	w12, w13, w12, cc  // cc = lo, ul, last
  45b198:	subs	x9, x9, #0x1
  45b19c:	strb	w12, [x8, #1]
  45b1a0:	mov	x8, x11
  45b1a4:	b.ne	45b160 <feof@plt+0x578c0>  // b.any
  45b1a8:	mov	x8, x11
  45b1ac:	b	45b2c0 <feof@plt+0x57a20>
  45b1b0:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45b1b4:	add	x1, x1, #0xcca
  45b1b8:	mov	x0, x25
  45b1bc:	mov	w2, wzr
  45b1c0:	blr	x22
  45b1c4:	mov	w19, wzr
  45b1c8:	mov	w23, #0x1                   	// #1
  45b1cc:	sub	x1, x29, #0x40
  45b1d0:	mov	x0, x21
  45b1d4:	mov	x2, x22
  45b1d8:	mov	x3, x25
  45b1dc:	bl	45d6a0 <feof@plt+0x59e00>
  45b1e0:	sub	x1, x29, #0x58
  45b1e4:	mov	x0, x21
  45b1e8:	mov	x2, x22
  45b1ec:	mov	x3, x25
  45b1f0:	bl	45d6a0 <feof@plt+0x59e00>
  45b1f4:	tbnz	w23, #0, 45b20c <feof@plt+0x5796c>
  45b1f8:	add	x1, sp, #0x208
  45b1fc:	mov	x0, x21
  45b200:	mov	x2, x22
  45b204:	mov	x3, x25
  45b208:	bl	45d6a0 <feof@plt+0x59e00>
  45b20c:	mov	w23, wzr
  45b210:	cbz	w19, 45b228 <feof@plt+0x57988>
  45b214:	add	x1, sp, #0x1f0
  45b218:	mov	x0, x21
  45b21c:	mov	x2, x22
  45b220:	mov	x3, x25
  45b224:	bl	45d6a0 <feof@plt+0x59e00>
  45b228:	ldr	w8, [sp, #172]
  45b22c:	cbz	w8, 45b244 <feof@plt+0x579a4>
  45b230:	add	x1, sp, #0x1c0
  45b234:	mov	x0, x21
  45b238:	mov	x2, x22
  45b23c:	mov	x3, x25
  45b240:	bl	45d6a0 <feof@plt+0x59e00>
  45b244:	cbz	w28, 45b25c <feof@plt+0x579bc>
  45b248:	add	x1, sp, #0x1a8
  45b24c:	mov	x0, x21
  45b250:	mov	x2, x22
  45b254:	mov	x3, x25
  45b258:	bl	45d6a0 <feof@plt+0x59e00>
  45b25c:	ldr	w8, [sp, #220]
  45b260:	cbz	w8, 45b278 <feof@plt+0x579d8>
  45b264:	add	x1, sp, #0x1d8
  45b268:	mov	x0, x21
  45b26c:	mov	x2, x22
  45b270:	mov	x3, x25
  45b274:	bl	45d6a0 <feof@plt+0x59e00>
  45b278:	cbz	w23, 45b290 <feof@plt+0x579f0>
  45b27c:	add	x1, sp, #0x190
  45b280:	mov	x0, x21
  45b284:	mov	x2, x22
  45b288:	mov	x3, x25
  45b28c:	bl	45d6a0 <feof@plt+0x59e00>
  45b290:	cbz	x24, 45a884 <feof@plt+0x56fe4>
  45b294:	add	x1, x24, #0x18
  45b298:	mov	x0, x21
  45b29c:	mov	x2, x22
  45b2a0:	mov	x3, x25
  45b2a4:	bl	45d6a0 <feof@plt+0x59e00>
  45b2a8:	b	45a884 <feof@plt+0x56fe4>
  45b2ac:	mov	x23, x24
  45b2b0:	ldr	w24, [sp, #172]
  45b2b4:	ldr	x27, [sp, #112]
  45b2b8:	b	45b3b0 <feof@plt+0x57b10>
  45b2bc:	add	x8, x28, #0x19
  45b2c0:	mov	w10, #0x642e                	// #25646
  45b2c4:	mov	w9, #0x6775                	// #26485
  45b2c8:	movk	w10, #0x6265, lsl #16
  45b2cc:	add	x3, sp, #0x190
  45b2d0:	mov	x0, x28
  45b2d4:	mov	x1, x22
  45b2d8:	mov	x2, x25
  45b2dc:	mov	x23, x24
  45b2e0:	strh	w9, [x8, #4]
  45b2e4:	str	w10, [x8]
  45b2e8:	strb	wzr, [x8, #6]
  45b2ec:	bl	45a2c8 <feof@plt+0x56a28>
  45b2f0:	mov	w26, w0
  45b2f4:	mov	x0, x21
  45b2f8:	mov	x1, x28
  45b2fc:	mov	x2, x27
  45b300:	mov	x3, x22
  45b304:	mov	x4, x25
  45b308:	bl	459d08 <feof@plt+0x56468>
  45b30c:	ldr	w24, [sp, #172]
  45b310:	ldr	x27, [sp, #112]
  45b314:	tbnz	w26, #31, 45b3b0 <feof@plt+0x57b10>
  45b318:	add	x1, sp, #0x1d8
  45b31c:	mov	x0, x21
  45b320:	mov	x2, x22
  45b324:	mov	x3, x25
  45b328:	bl	45d6a0 <feof@plt+0x59e00>
  45b32c:	cbz	w24, 45b344 <feof@plt+0x57aa4>
  45b330:	add	x1, sp, #0x1c0
  45b334:	mov	x0, x21
  45b338:	mov	x2, x22
  45b33c:	mov	x3, x25
  45b340:	bl	45d6a0 <feof@plt+0x59e00>
  45b344:	cbz	w19, 45b35c <feof@plt+0x57abc>
  45b348:	add	x1, sp, #0x1a8
  45b34c:	mov	x0, x21
  45b350:	mov	x2, x22
  45b354:	mov	x3, x25
  45b358:	bl	45d6a0 <feof@plt+0x59e00>
  45b35c:	mov	w8, #0x1                   	// #1
  45b360:	str	w8, [sp, #24]
  45b364:	ldr	x8, [sp, #224]
  45b368:	ldp	x7, x3, [sp, #248]
  45b36c:	ldr	x6, [sp, #240]
  45b370:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  45b374:	add	x1, x1, #0x23b
  45b378:	mov	x0, x21
  45b37c:	mov	w2, w26
  45b380:	mov	x4, x22
  45b384:	mov	x5, x25
  45b388:	str	wzr, [sp, #40]
  45b38c:	str	xzr, [sp, #32]
  45b390:	str	wzr, [sp, #16]
  45b394:	stp	x8, xzr, [sp]
  45b398:	bl	45a6e8 <feof@plt+0x56e48>
  45b39c:	mov	x2, x25
  45b3a0:	mov	w25, w0
  45b3a4:	tbz	w0, #31, 45b488 <feof@plt+0x57be8>
  45b3a8:	mov	w0, w26
  45b3ac:	b	45b540 <feof@plt+0x57ca0>
  45b3b0:	ldr	w8, [sp, #220]
  45b3b4:	cbz	w8, 45b3cc <feof@plt+0x57b2c>
  45b3b8:	add	x1, sp, #0x1d8
  45b3bc:	mov	x0, x21
  45b3c0:	mov	x2, x22
  45b3c4:	mov	x3, x25
  45b3c8:	bl	45d6a0 <feof@plt+0x59e00>
  45b3cc:	ldr	x26, [sp, #232]
  45b3d0:	cbz	x23, 45b3e8 <feof@plt+0x57b48>
  45b3d4:	add	x1, x23, #0x18
  45b3d8:	mov	x0, x21
  45b3dc:	mov	x2, x22
  45b3e0:	mov	x3, x25
  45b3e4:	bl	45d6a0 <feof@plt+0x59e00>
  45b3e8:	cbz	x27, 45b490 <feof@plt+0x57bf0>
  45b3ec:	ldr	w3, [sp, #108]
  45b3f0:	mov	x0, x21
  45b3f4:	mov	x1, x26
  45b3f8:	mov	x2, x27
  45b3fc:	mov	x4, x22
  45b400:	mov	x5, x25
  45b404:	bl	45d044 <feof@plt+0x597a4>
  45b408:	tbnz	w0, #31, 45b490 <feof@plt+0x57bf0>
  45b40c:	mov	w27, w0
  45b410:	add	x1, sp, #0x1c0
  45b414:	mov	x0, x21
  45b418:	mov	x2, x22
  45b41c:	mov	x3, x25
  45b420:	bl	45d6a0 <feof@plt+0x59e00>
  45b424:	cbz	w19, 45b43c <feof@plt+0x57b9c>
  45b428:	add	x1, sp, #0x1a8
  45b42c:	mov	x0, x21
  45b430:	mov	x2, x22
  45b434:	mov	x3, x25
  45b438:	bl	45d6a0 <feof@plt+0x59e00>
  45b43c:	mov	w8, #0x1                   	// #1
  45b440:	str	w8, [sp, #24]
  45b444:	ldr	x8, [sp, #224]
  45b448:	ldp	x7, x3, [sp, #248]
  45b44c:	ldr	x6, [sp, #240]
  45b450:	adrp	x1, 48f000 <_obstack_memory_used@@Base+0x132fc>
  45b454:	add	x1, x1, #0x23b
  45b458:	mov	x0, x21
  45b45c:	mov	w2, w27
  45b460:	mov	x4, x22
  45b464:	mov	x5, x25
  45b468:	str	wzr, [sp, #40]
  45b46c:	str	xzr, [sp, #32]
  45b470:	str	wzr, [sp, #16]
  45b474:	stp	x8, xzr, [sp]
  45b478:	bl	45a6e8 <feof@plt+0x56e48>
  45b47c:	mov	x2, x25
  45b480:	mov	w25, w0
  45b484:	tbnz	w0, #31, 45b53c <feof@plt+0x57c9c>
  45b488:	mov	w0, w20
  45b48c:	b	45b540 <feof@plt+0x57ca0>
  45b490:	cbz	w24, 45b4a8 <feof@plt+0x57c08>
  45b494:	add	x1, sp, #0x1c0
  45b498:	mov	x0, x21
  45b49c:	mov	x2, x22
  45b4a0:	mov	x3, x25
  45b4a4:	bl	45d6a0 <feof@plt+0x59e00>
  45b4a8:	ldr	x2, [sp, #120]
  45b4ac:	str	xzr, [sp, #344]
  45b4b0:	cbz	x2, 45b54c <feof@plt+0x57cac>
  45b4b4:	mov	x0, x21
  45b4b8:	mov	x1, x26
  45b4bc:	mov	w3, wzr
  45b4c0:	mov	x4, x22
  45b4c4:	mov	x5, x25
  45b4c8:	bl	45d044 <feof@plt+0x597a4>
  45b4cc:	tbnz	w0, #31, 45b54c <feof@plt+0x57cac>
  45b4d0:	ldr	w8, [sp, #156]
  45b4d4:	ldp	x7, x3, [sp, #248]
  45b4d8:	ldr	x6, [sp, #240]
  45b4dc:	mov	w27, w0
  45b4e0:	str	w8, [sp, #40]
  45b4e4:	ldr	x8, [sp, #144]
  45b4e8:	add	x9, sp, #0x158
  45b4ec:	mov	x0, x21
  45b4f0:	mov	x1, x26
  45b4f4:	str	x8, [sp, #32]
  45b4f8:	mov	w8, #0x1                   	// #1
  45b4fc:	str	w8, [sp, #24]
  45b500:	ldr	x8, [sp, #224]
  45b504:	mov	w2, w27
  45b508:	mov	x4, x22
  45b50c:	mov	x5, x25
  45b510:	str	wzr, [sp, #16]
  45b514:	stp	x8, x9, [sp]
  45b518:	bl	45a6e8 <feof@plt+0x56e48>
  45b51c:	mov	x3, x25
  45b520:	mov	w25, w0
  45b524:	add	x1, sp, #0x1a8
  45b528:	mov	x0, x21
  45b52c:	mov	x2, x22
  45b530:	bl	45d6a0 <feof@plt+0x59e00>
  45b534:	tbz	w25, #31, 45b564 <feof@plt+0x57cc4>
  45b538:	ldr	x2, [sp, #304]
  45b53c:	mov	w0, w27
  45b540:	mov	x1, x22
  45b544:	bl	45a364 <feof@plt+0x56ac4>
  45b548:	b	45a8a0 <feof@plt+0x57000>
  45b54c:	cbz	w19, 45b564 <feof@plt+0x57cc4>
  45b550:	ldr	x3, [sp, #304]
  45b554:	add	x1, sp, #0x1a8
  45b558:	mov	x0, x21
  45b55c:	mov	x2, x22
  45b560:	bl	45d6a0 <feof@plt+0x59e00>
  45b564:	ldr	x8, [sp, #552]
  45b568:	ldr	x10, [sp, #544]
  45b56c:	ldr	x9, [sp, #584]
  45b570:	cmp	x8, #0x0
  45b574:	add	x11, x10, x8
  45b578:	bic	x8, x11, x11, asr #63
  45b57c:	csel	x25, xzr, x10, eq  // eq = none
  45b580:	csel	x8, xzr, x8, eq  // eq = none
  45b584:	cbz	x9, 45b5a4 <feof@plt+0x57d04>
  45b588:	ldr	x10, [sp, #576]
  45b58c:	cmp	x10, x25
  45b590:	add	x9, x10, x9
  45b594:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  45b598:	csel	x25, x10, x25, eq  // eq = none
  45b59c:	cmp	x9, x8
  45b5a0:	csel	x8, x9, x8, gt
  45b5a4:	ldr	w19, [sp, #324]
  45b5a8:	ldr	x9, [sp, #616]
  45b5ac:	cbz	x9, 45b5cc <feof@plt+0x57d2c>
  45b5b0:	ldr	x10, [sp, #608]
  45b5b4:	cmp	x10, x25
  45b5b8:	add	x9, x10, x9
  45b5bc:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  45b5c0:	csel	x25, x10, x25, eq  // eq = none
  45b5c4:	cmp	x9, x8
  45b5c8:	csel	x8, x9, x8, gt
  45b5cc:	ldr	x9, [sp, #648]
  45b5d0:	cbz	x9, 45b5f0 <feof@plt+0x57d50>
  45b5d4:	ldr	x10, [sp, #640]
  45b5d8:	cmp	x10, x25
  45b5dc:	add	x9, x10, x9
  45b5e0:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  45b5e4:	csel	x25, x10, x25, eq  // eq = none
  45b5e8:	cmp	x9, x8
  45b5ec:	csel	x8, x9, x8, gt
  45b5f0:	ldr	x9, [sp, #680]
  45b5f4:	cbz	x9, 45b614 <feof@plt+0x57d74>
  45b5f8:	ldr	x10, [sp, #672]
  45b5fc:	cmp	x10, x25
  45b600:	add	x9, x10, x9
  45b604:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  45b608:	csel	x25, x10, x25, eq  // eq = none
  45b60c:	cmp	x9, x8
  45b610:	csel	x8, x9, x8, gt
  45b614:	ldr	x9, [sp, #712]
  45b618:	cbz	x9, 45b638 <feof@plt+0x57d98>
  45b61c:	ldr	x10, [sp, #704]
  45b620:	cmp	x10, x25
  45b624:	add	x9, x10, x9
  45b628:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  45b62c:	csel	x25, x10, x25, eq  // eq = none
  45b630:	cmp	x9, x8
  45b634:	csel	x8, x9, x8, gt
  45b638:	ldr	x9, [sp, #744]
  45b63c:	cbz	x9, 45b65c <feof@plt+0x57dbc>
  45b640:	ldr	x10, [sp, #736]
  45b644:	cmp	x10, x25
  45b648:	add	x9, x10, x9
  45b64c:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  45b650:	csel	x25, x10, x25, eq  // eq = none
  45b654:	cmp	x9, x8
  45b658:	csel	x8, x9, x8, gt
  45b65c:	ldr	x9, [sp, #776]
  45b660:	cbz	x9, 45b680 <feof@plt+0x57de0>
  45b664:	ldr	x10, [sp, #768]
  45b668:	cmp	x10, x25
  45b66c:	add	x9, x10, x9
  45b670:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  45b674:	csel	x25, x10, x25, eq  // eq = none
  45b678:	cmp	x9, x8
  45b67c:	csel	x8, x9, x8, gt
  45b680:	ldr	x9, [sp, #808]
  45b684:	cbz	x9, 45b6a4 <feof@plt+0x57e04>
  45b688:	ldr	x10, [sp, #800]
  45b68c:	cmp	x10, x25
  45b690:	add	x9, x10, x9
  45b694:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  45b698:	csel	x25, x10, x25, eq  // eq = none
  45b69c:	cmp	x9, x8
  45b6a0:	csel	x8, x9, x8, gt
  45b6a4:	ldr	x9, [sp, #840]
  45b6a8:	cbz	x9, 45b6c8 <feof@plt+0x57e28>
  45b6ac:	ldr	x10, [sp, #832]
  45b6b0:	cmp	x10, x25
  45b6b4:	add	x9, x10, x9
  45b6b8:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  45b6bc:	csel	x25, x10, x25, eq  // eq = none
  45b6c0:	cmp	x9, x8
  45b6c4:	csel	x8, x9, x8, gt
  45b6c8:	cbz	x25, 45b9c4 <feof@plt+0x58124>
  45b6cc:	cbz	x8, 45b9c4 <feof@plt+0x58124>
  45b6d0:	ldr	x19, [sp, #304]
  45b6d4:	sub	x3, x8, x25
  45b6d8:	add	x6, sp, #0x190
  45b6dc:	mov	x0, x21
  45b6e0:	mov	w1, w20
  45b6e4:	mov	x2, x25
  45b6e8:	mov	x4, x22
  45b6ec:	mov	x5, x19
  45b6f0:	bl	45d5e0 <feof@plt+0x59d40>
  45b6f4:	cbz	w0, 45ba04 <feof@plt+0x58164>
  45b6f8:	mov	w0, w20
  45b6fc:	mov	x1, x22
  45b700:	mov	x2, x19
  45b704:	bl	45a364 <feof@plt+0x56ac4>
  45b708:	mov	w23, #0x1                   	// #1
  45b70c:	cbz	w0, 45bbfc <feof@plt+0x5835c>
  45b710:	ldr	x11, [sp, #544]
  45b714:	ldr	x9, [sp, #400]
  45b718:	ldr	x8, [sp, #552]
  45b71c:	ldr	x12, [sp, #576]
  45b720:	ldr	x14, [sp, #608]
  45b724:	ldr	x16, [sp, #640]
  45b728:	ldr	x18, [sp, #672]
  45b72c:	ldr	x1, [sp, #704]
  45b730:	ldr	x3, [sp, #736]
  45b734:	ldr	x5, [sp, #768]
  45b738:	ldr	x7, [sp, #800]
  45b73c:	ldr	x20, [sp, #832]
  45b740:	ldr	x10, [sp, #584]
  45b744:	ldr	x13, [sp, #616]
  45b748:	ldr	x15, [sp, #648]
  45b74c:	sub	x11, x11, x25
  45b750:	ldr	x17, [sp, #680]
  45b754:	sub	x12, x12, x25
  45b758:	sub	x14, x14, x25
  45b75c:	sub	x16, x16, x25
  45b760:	sub	x18, x18, x25
  45b764:	sub	x1, x1, x25
  45b768:	sub	x3, x3, x25
  45b76c:	sub	x5, x5, x25
  45b770:	sub	x7, x7, x25
  45b774:	sub	x20, x20, x25
  45b778:	cmp	x8, #0x0
  45b77c:	add	x11, x9, x11
  45b780:	ldr	x0, [sp, #712]
  45b784:	add	x12, x9, x12
  45b788:	add	x14, x9, x14
  45b78c:	add	x16, x9, x16
  45b790:	add	x18, x9, x18
  45b794:	add	x1, x9, x1
  45b798:	add	x3, x9, x3
  45b79c:	add	x5, x9, x5
  45b7a0:	add	x7, x9, x7
  45b7a4:	add	x9, x9, x20
  45b7a8:	cset	w20, ne  // ne = any
  45b7ac:	cinc	w21, w23, ne  // ne = any
  45b7b0:	csel	x11, xzr, x11, eq  // eq = none
  45b7b4:	cmp	x10, #0x0
  45b7b8:	ldr	x2, [sp, #744]
  45b7bc:	csel	w10, w20, w21, eq  // eq = none
  45b7c0:	csel	x12, xzr, x12, eq  // eq = none
  45b7c4:	cmp	x13, #0x0
  45b7c8:	ldr	x4, [sp, #776]
  45b7cc:	str	x11, [sp, #560]
  45b7d0:	csel	x11, xzr, x14, eq  // eq = none
  45b7d4:	cinc	w10, w10, ne  // ne = any
  45b7d8:	cmp	x15, #0x0
  45b7dc:	ldr	x6, [sp, #808]
  45b7e0:	str	x12, [sp, #592]
  45b7e4:	csel	x12, xzr, x16, eq  // eq = none
  45b7e8:	cinc	w10, w10, ne  // ne = any
  45b7ec:	cmp	x17, #0x0
  45b7f0:	ldr	x19, [sp, #840]
  45b7f4:	str	x11, [sp, #624]
  45b7f8:	str	x12, [sp, #656]
  45b7fc:	csel	x11, xzr, x18, eq  // eq = none
  45b800:	cinc	w12, w10, ne  // ne = any
  45b804:	cmp	x0, #0x0
  45b808:	csel	x10, xzr, x1, eq  // eq = none
  45b80c:	cmp	x2, #0x0
  45b810:	ldr	x21, [sp, #288]
  45b814:	str	x10, [sp, #720]
  45b818:	csel	x10, xzr, x3, eq  // eq = none
  45b81c:	cmp	x4, #0x0
  45b820:	ldr	x20, [x29, #104]
  45b824:	str	x11, [sp, #688]
  45b828:	csel	x11, xzr, x5, eq  // eq = none
  45b82c:	cmp	x6, #0x0
  45b830:	str	x10, [sp, #752]
  45b834:	csel	x10, xzr, x7, eq  // eq = none
  45b838:	cmp	x19, #0x0
  45b83c:	mov	x24, xzr
  45b840:	mov	x22, xzr
  45b844:	mov	w19, w12
  45b848:	csel	x9, xzr, x9, eq  // eq = none
  45b84c:	add	x25, sp, #0x220
  45b850:	str	x11, [sp, #784]
  45b854:	str	x10, [sp, #816]
  45b858:	str	x9, [sp, #848]
  45b85c:	cbnz	x8, 45b8e0 <feof@plt+0x58040>
  45b860:	b	45b874 <feof@plt+0x57fd4>
  45b864:	add	x8, x25, x24
  45b868:	ldr	x8, [x8, #40]
  45b86c:	add	x24, x24, #0x20
  45b870:	cbnz	x8, 45b8e0 <feof@plt+0x58040>
  45b874:	add	x23, x25, x24
  45b878:	ldr	x2, [x23, #168]
  45b87c:	cbz	x2, 45b8e0 <feof@plt+0x58040>
  45b880:	mov	w26, w19
  45b884:	cbnz	x22, 45b8a4 <feof@plt+0x58004>
  45b888:	ldp	x3, x2, [sp, #304]
  45b88c:	mov	w1, #0x13b4                	// #5044
  45b890:	mov	x0, x21
  45b894:	bl	459b44 <feof@plt+0x562a4>
  45b898:	cbz	x0, 45bd48 <feof@plt+0x584a8>
  45b89c:	ldr	x2, [x23, #168]
  45b8a0:	mov	x22, x0
  45b8a4:	add	x19, x25, x24
  45b8a8:	ldr	x1, [x19, #176]
  45b8ac:	ldp	x5, x4, [sp, #304]
  45b8b0:	add	x6, sp, #0x150
  45b8b4:	add	x7, sp, #0x148
  45b8b8:	mov	x0, x21
  45b8bc:	mov	x3, x22
  45b8c0:	stp	xzr, xzr, [sp, #328]
  45b8c4:	bl	45a458 <feof@plt+0x56bb8>
  45b8c8:	cbz	w0, 45bd48 <feof@plt+0x584a8>
  45b8cc:	ldp	x9, x8, [sp, #328]
  45b8d0:	str	x8, [x19, #16]
  45b8d4:	str	x9, [x23, #8]
  45b8d8:	str	wzr, [x19, #24]
  45b8dc:	mov	w19, w26
  45b8e0:	cmp	x24, #0x80
  45b8e4:	b.ne	45b864 <feof@plt+0x57fc4>  // b.any
  45b8e8:	ldr	x25, [sp, #304]
  45b8ec:	mov	x24, xzr
  45b8f0:	add	x28, sp, #0x220
  45b8f4:	b	45b920 <feof@plt+0x58080>
  45b8f8:	mov	x25, xzr
  45b8fc:	mov	x8, xzr
  45b900:	str	x25, [x23, #16]
  45b904:	ldr	x25, [sp, #304]
  45b908:	sub	w19, w19, #0x1
  45b90c:	str	x8, [x27, #8]
  45b910:	str	wzr, [x27, #24]
  45b914:	add	x24, x24, #0x20
  45b918:	cmp	x24, #0xa0
  45b91c:	b.eq	45bbd0 <feof@plt+0x58330>  // b.none
  45b920:	add	x27, x28, x24
  45b924:	ldr	x8, [x27, #8]
  45b928:	cbz	x8, 45b914 <feof@plt+0x58074>
  45b92c:	ldr	w9, [x27, #24]
  45b930:	cbz	w9, 45b914 <feof@plt+0x58074>
  45b934:	cbnz	x22, 45b958 <feof@plt+0x580b8>
  45b938:	ldr	x2, [sp, #312]
  45b93c:	mov	w1, #0x13b4                	// #5044
  45b940:	mov	x0, x21
  45b944:	mov	x3, x25
  45b948:	bl	459b44 <feof@plt+0x562a4>
  45b94c:	cbz	x0, 45be48 <feof@plt+0x585a8>
  45b950:	ldr	x8, [x27, #8]
  45b954:	mov	x22, x0
  45b958:	subs	x26, x8, #0x18
  45b95c:	add	x23, x28, x24
  45b960:	b.cc	45b8f8 <feof@plt+0x58058>  // b.lo, b.ul, b.last
  45b964:	ldr	x21, [x23, #16]
  45b968:	ldr	w8, [x21]
  45b96c:	cmp	w8, #0x1
  45b970:	b.ne	45b9b4 <feof@plt+0x58114>  // b.any
  45b974:	ldr	x1, [x21, #8]
  45b978:	ldr	x0, [sp, #288]
  45b97c:	ldr	x2, [sp, #312]
  45b980:	mov	x3, x25
  45b984:	bl	459b44 <feof@plt+0x562a4>
  45b988:	cbz	x0, 45be50 <feof@plt+0x585b0>
  45b98c:	ldr	x4, [x21, #8]
  45b990:	mov	x25, x0
  45b994:	add	x0, x21, #0x18
  45b998:	mov	x1, x26
  45b99c:	mov	x2, x22
  45b9a0:	mov	x3, x25
  45b9a4:	bl	45c08c <feof@plt+0x587ec>
  45b9a8:	cbz	w0, 45b9b4 <feof@plt+0x58114>
  45b9ac:	ldr	x8, [x21, #8]
  45b9b0:	b	45b9bc <feof@plt+0x5811c>
  45b9b4:	mov	x25, xzr
  45b9b8:	mov	x8, xzr
  45b9bc:	ldr	x21, [sp, #288]
  45b9c0:	b	45b900 <feof@plt+0x58060>
  45b9c4:	ldr	x25, [sp, #304]
  45b9c8:	mov	w0, w20
  45b9cc:	mov	x1, x22
  45b9d0:	mov	x2, x25
  45b9d4:	bl	45a364 <feof@plt+0x56ac4>
  45b9d8:	cbz	w0, 45ba20 <feof@plt+0x58180>
  45b9dc:	mov	w25, #0x1                   	// #1
  45b9e0:	b	45a8a0 <feof@plt+0x57000>
  45b9e4:	mov	w8, wzr
  45b9e8:	mov	w23, wzr
  45b9ec:	mov	x21, x19
  45b9f0:	mov	w19, wzr
  45b9f4:	b	45b1cc <feof@plt+0x5792c>
  45b9f8:	ldr	x24, [sp, #136]
  45b9fc:	str	wzr, [sp, #220]
  45ba00:	b	45b05c <feof@plt+0x577bc>
  45ba04:	mov	w28, wzr
  45ba08:	mov	x24, xzr
  45ba0c:	mov	w23, wzr
  45ba10:	mov	x25, x19
  45ba14:	str	wzr, [sp, #220]
  45ba18:	str	wzr, [sp, #172]
  45ba1c:	b	45be70 <feof@plt+0x585d0>
  45ba20:	str	wzr, [sp, #220]
  45ba24:	str	wzr, [sp, #172]
  45ba28:	mov	w28, wzr
  45ba2c:	mov	x24, xzr
  45ba30:	mov	w23, wzr
  45ba34:	cbnz	w19, 45b214 <feof@plt+0x57974>
  45ba38:	b	45b228 <feof@plt+0x57988>
  45ba3c:	ldr	x24, [sp, #136]
  45ba40:	str	wzr, [sp, #172]
  45ba44:	b	45b05c <feof@plt+0x577bc>
  45ba48:	str	w24, [sp, #172]
  45ba4c:	ldr	x24, [sp, #136]
  45ba50:	mov	w28, wzr
  45ba54:	b	45b05c <feof@plt+0x577bc>
  45ba58:	ldr	x21, [sp, #288]
  45ba5c:	b	45be3c <feof@plt+0x5859c>
  45ba60:	ldr	x21, [sp, #288]
  45ba64:	mov	x28, xzr
  45ba68:	add	x8, x28, x28, lsl #1
  45ba6c:	str	x1, [sp, #208]
  45ba70:	lsl	x1, x8, #3
  45ba74:	mov	x0, x21
  45ba78:	mov	x2, x22
  45ba7c:	mov	x3, x25
  45ba80:	str	x27, [sp, #112]
  45ba84:	str	x1, [sp, #200]
  45ba88:	bl	459b44 <feof@plt+0x562a4>
  45ba8c:	cbz	x0, 45be20 <feof@plt+0x58580>
  45ba90:	ldp	x17, x8, [sp, #256]
  45ba94:	mov	x27, x0
  45ba98:	ldr	x0, [sp, #280]
  45ba9c:	cmp	x8, #0x18
  45baa0:	b.cc	45bb54 <feof@plt+0x582b4>  // b.lo, b.ul, b.last
  45baa4:	ldr	x10, [sp, #208]
  45baa8:	mov	w8, wzr
  45baac:	mov	x9, xzr
  45bab0:	mov	w11, #0x18                  	// #24
  45bab4:	add	x10, x10, #0x8
  45bab8:	b	45bae4 <feof@plt+0x58244>
  45babc:	madd	x12, x12, x11, x27
  45bac0:	add	x13, x13, x17
  45bac4:	str	x13, [x12, #8]
  45bac8:	ldr	x13, [x10, #8]
  45bacc:	add	w8, w8, #0x1
  45bad0:	str	x13, [x12, #16]
  45bad4:	add	x9, x9, #0x1
  45bad8:	cmp	x9, x23
  45badc:	add	x10, x10, #0x18
  45bae0:	b.cs	45bb54 <feof@plt+0x582b4>  // b.hs, b.nlast
  45bae4:	ldurb	w12, [x10, #-4]
  45bae8:	and	w12, w12, #0xf
  45baec:	sub	w12, w12, #0x1
  45baf0:	and	w12, w12, #0xff
  45baf4:	cmp	w12, #0x1
  45baf8:	b.hi	45bad4 <feof@plt+0x58234>  // b.pmore
  45bafc:	ldurh	w12, [x10, #-2]
  45bb00:	cbz	w12, 45bad4 <feof@plt+0x58234>
  45bb04:	ldur	w12, [x10, #-8]
  45bb08:	cmp	x0, x12
  45bb0c:	b.ls	45bdf4 <feof@plt+0x58554>  // b.plast
  45bb10:	add	x12, x19, x12
  45bb14:	umull	x13, w8, w11
  45bb18:	str	x12, [x27, x13]
  45bb1c:	ldr	x13, [x10]
  45bb20:	mov	w12, w8
  45bb24:	cbz	x24, 45babc <feof@plt+0x5821c>
  45bb28:	ldr	x15, [x24]
  45bb2c:	mov	x16, x24
  45bb30:	subs	x14, x13, x15
  45bb34:	b.cc	45babc <feof@plt+0x5821c>  // b.lo, b.ul, b.last
  45bb38:	ldr	x16, [x16, #16]
  45bb3c:	add	x15, x16, x15
  45bb40:	cmp	x13, x15
  45bb44:	b.cs	45babc <feof@plt+0x5821c>  // b.hs, b.nlast
  45bb48:	ldr	x13, [x24, #8]
  45bb4c:	ldr	x13, [x13, x14]
  45bb50:	b	45babc <feof@plt+0x5821c>
  45bb54:	adrp	x3, 45d000 <feof@plt+0x59760>
  45bb58:	add	x3, x3, #0x5c8
  45bb5c:	mov	w2, #0x18                  	// #24
  45bb60:	mov	x0, x27
  45bb64:	mov	x1, x28
  45bb68:	bl	463c0c <feof@plt+0x6036c>
  45bb6c:	add	x1, sp, #0x208
  45bb70:	mov	x0, x21
  45bb74:	mov	x2, x22
  45bb78:	mov	x3, x25
  45bb7c:	stp	xzr, x27, [x26]
  45bb80:	str	x28, [x26, #16]
  45bb84:	bl	45d6a0 <feof@plt+0x59e00>
  45bb88:	ldr	x9, [sp, #248]
  45bb8c:	mov	w8, #0x1                   	// #1
  45bb90:	str	w8, [x9]
  45bb94:	ldr	w9, [x21, #8]
  45bb98:	add	x8, x21, #0x30
  45bb9c:	cbnz	w9, 45bc18 <feof@plt+0x58378>
  45bba0:	mov	x9, x8
  45bba4:	ldr	x8, [x8]
  45bba8:	cbnz	x8, 45bba0 <feof@plt+0x58300>
  45bbac:	str	x26, [x9]
  45bbb0:	b	45bc38 <feof@plt+0x58398>
  45bbb4:	ldr	x24, [sp, #136]
  45bbb8:	mov	w8, #0x1                   	// #1
  45bbbc:	mov	w19, wzr
  45bbc0:	str	w8, [sp, #220]
  45bbc4:	b	45b060 <feof@plt+0x577c0>
  45bbc8:	ldr	x24, [sp, #136]
  45bbcc:	b	45b05c <feof@plt+0x577bc>
  45bbd0:	cbz	x22, 45bbec <feof@plt+0x5834c>
  45bbd4:	ldr	x3, [sp, #312]
  45bbd8:	mov	w2, #0x13b4                	// #5044
  45bbdc:	mov	x0, x21
  45bbe0:	mov	x1, x22
  45bbe4:	mov	x4, x25
  45bbe8:	bl	459d08 <feof@plt+0x56468>
  45bbec:	cbz	w19, 45bd50 <feof@plt+0x584b0>
  45bbf0:	ldr	x22, [sp, #312]
  45bbf4:	mov	w23, #0x1                   	// #1
  45bbf8:	b	45bd6c <feof@plt+0x584cc>
  45bbfc:	ldr	x25, [sp, #304]
  45bc00:	str	wzr, [sp, #220]
  45bc04:	str	wzr, [sp, #172]
  45bc08:	mov	w28, wzr
  45bc0c:	mov	x24, xzr
  45bc10:	b	45be70 <feof@plt+0x585d0>
  45bc14:	clrex
  45bc18:	mov	x10, x8
  45bc1c:	mov	x9, x10
  45bc20:	ldar	x10, [x10]
  45bc24:	cbnz	x10, 45bc1c <feof@plt+0x5837c>
  45bc28:	ldaxr	x10, [x9]
  45bc2c:	cbnz	x10, 45bc14 <feof@plt+0x58374>
  45bc30:	stlxr	w10, x26, [x9]
  45bc34:	cbnz	w10, 45bc28 <feof@plt+0x58388>
  45bc38:	ldp	x25, x22, [sp, #304]
  45bc3c:	ldr	x21, [sp, #288]
  45bc40:	ldr	w20, [sp, #324]
  45bc44:	ldr	w28, [sp, #272]
  45bc48:	mov	x23, x24
  45bc4c:	ldr	w24, [sp, #172]
  45bc50:	ldr	x27, [sp, #112]
  45bc54:	mov	w8, #0x1                   	// #1
  45bc58:	b	45b07c <feof@plt+0x577dc>
  45bc5c:	and	x8, x10, #0xffffffffffffffe
  45bc60:	mov	w9, #0x18                  	// #24
  45bc64:	mov	x11, xzr
  45bc68:	mov	x12, xzr
  45bc6c:	madd	x9, x8, x9, x1
  45bc70:	add	x13, x1, #0x1e
  45bc74:	mov	x14, x8
  45bc78:	b	45bcbc <feof@plt+0x5841c>
  45bc7c:	cmp	w18, #0x2
  45bc80:	and	w15, w15, #0xff
  45bc84:	cset	w18, cc  // cc = lo, ul, last
  45bc88:	cmp	w15, #0x2
  45bc8c:	cset	w15, cc  // cc = lo, ul, last
  45bc90:	tst	w16, #0xffff
  45bc94:	cset	w16, ne  // ne = any
  45bc98:	tst	w17, #0xffff
  45bc9c:	cset	w17, ne  // ne = any
  45bca0:	and	w15, w15, w16
  45bca4:	add	x11, x11, x15
  45bca8:	and	w15, w18, w17
  45bcac:	subs	x14, x14, #0x2
  45bcb0:	add	x12, x12, x15
  45bcb4:	add	x13, x13, #0x30
  45bcb8:	b.eq	45bcf8 <feof@plt+0x58458>  // b.none
  45bcbc:	ldurb	w15, [x13, #-26]
  45bcc0:	ldurb	w16, [x13, #-2]
  45bcc4:	and	w15, w15, #0xf
  45bcc8:	sub	w15, w15, #0x1
  45bccc:	and	w16, w16, #0xf
  45bcd0:	and	w17, w15, #0xff
  45bcd4:	cmp	w17, #0x1
  45bcd8:	sub	w17, w16, #0x1
  45bcdc:	b.hi	45bce4 <feof@plt+0x58444>  // b.pmore
  45bce0:	ldurh	w16, [x13, #-24]
  45bce4:	and	w18, w17, #0xff
  45bce8:	cmp	w18, #0x1
  45bcec:	b.hi	45bc7c <feof@plt+0x583dc>  // b.pmore
  45bcf0:	ldrh	w17, [x13]
  45bcf4:	b	45bc7c <feof@plt+0x583dc>
  45bcf8:	ldr	x21, [sp, #288]
  45bcfc:	cmp	x10, x8
  45bd00:	add	x28, x12, x11
  45bd04:	b.eq	45ba68 <feof@plt+0x581c8>  // b.none
  45bd08:	add	x9, x9, #0x6
  45bd0c:	b	45bd20 <feof@plt+0x58480>
  45bd10:	add	x8, x8, #0x1
  45bd14:	cmp	x8, x23
  45bd18:	add	x9, x9, #0x18
  45bd1c:	b.cs	45ba68 <feof@plt+0x581c8>  // b.hs, b.nlast
  45bd20:	ldurb	w10, [x9, #-2]
  45bd24:	and	w10, w10, #0xf
  45bd28:	sub	w10, w10, #0x1
  45bd2c:	and	w10, w10, #0xff
  45bd30:	cmp	w10, #0x1
  45bd34:	b.hi	45bd10 <feof@plt+0x58470>  // b.pmore
  45bd38:	ldrh	w10, [x9]
  45bd3c:	cmp	w10, #0x0
  45bd40:	cinc	x28, x28, ne  // ne = any
  45bd44:	b	45bd10 <feof@plt+0x58470>
  45bd48:	ldp	x25, x22, [sp, #304]
  45bd4c:	b	45be58 <feof@plt+0x585b8>
  45bd50:	ldr	x22, [sp, #312]
  45bd54:	add	x1, sp, #0x190
  45bd58:	mov	x0, x21
  45bd5c:	mov	x3, x25
  45bd60:	mov	x2, x22
  45bd64:	bl	45d6a0 <feof@plt+0x59e00>
  45bd68:	mov	w23, wzr
  45bd6c:	ldr	w13, [sp, #300]
  45bd70:	ldr	x2, [sp, #560]
  45bd74:	ldr	x3, [sp, #552]
  45bd78:	ldr	x4, [sp, #592]
  45bd7c:	ldr	x5, [sp, #584]
  45bd80:	ldr	x6, [sp, #624]
  45bd84:	ldr	x7, [sp, #616]
  45bd88:	ldr	x8, [sp, #656]
  45bd8c:	ldr	x9, [sp, #648]
  45bd90:	ldr	x10, [sp, #688]
  45bd94:	ldr	x11, [sp, #680]
  45bd98:	ldr	x12, [sp, #344]
  45bd9c:	ldr	x14, [sp, #240]
  45bda0:	ldr	x1, [sp, #256]
  45bda4:	cmp	w13, #0x2
  45bda8:	cset	w13, eq  // eq = none
  45bdac:	mov	x0, x21
  45bdb0:	stp	x14, x20, [sp, #64]
  45bdb4:	stp	x22, x25, [sp, #48]
  45bdb8:	str	x12, [sp, #40]
  45bdbc:	str	w13, [sp, #32]
  45bdc0:	stp	x10, x11, [sp, #16]
  45bdc4:	stp	x8, x9, [sp]
  45bdc8:	bl	45d6f0 <feof@plt+0x59e50>
  45bdcc:	cbz	w0, 45bde0 <feof@plt+0x58540>
  45bdd0:	ldr	x8, [sp, #224]
  45bdd4:	mov	w25, #0x1                   	// #1
  45bdd8:	str	w25, [x8]
  45bddc:	b	45a8a0 <feof@plt+0x57000>
  45bde0:	str	wzr, [sp, #220]
  45bde4:	str	wzr, [sp, #172]
  45bde8:	mov	w28, wzr
  45bdec:	mov	x24, xzr
  45bdf0:	b	45be6c <feof@plt+0x585cc>
  45bdf4:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45bdf8:	add	x1, x1, #0xd77
  45bdfc:	mov	x0, x25
  45be00:	mov	w2, wzr
  45be04:	blr	x22
  45be08:	ldr	x2, [sp, #200]
  45be0c:	mov	x0, x21
  45be10:	mov	x1, x27
  45be14:	mov	x3, x22
  45be18:	mov	x4, x25
  45be1c:	bl	459d08 <feof@plt+0x56468>
  45be20:	mov	w2, #0x18                  	// #24
  45be24:	mov	x0, x21
  45be28:	mov	x1, x26
  45be2c:	mov	x3, x22
  45be30:	mov	x4, x25
  45be34:	bl	459d08 <feof@plt+0x56468>
  45be38:	ldr	w28, [sp, #272]
  45be3c:	mov	w23, wzr
  45be40:	mov	w19, #0x1                   	// #1
  45be44:	b	45b1cc <feof@plt+0x5792c>
  45be48:	ldr	x22, [sp, #312]
  45be4c:	b	45be58 <feof@plt+0x585b8>
  45be50:	ldp	x25, x22, [sp, #304]
  45be54:	ldr	x21, [sp, #288]
  45be58:	str	wzr, [sp, #220]
  45be5c:	str	wzr, [sp, #172]
  45be60:	mov	w28, wzr
  45be64:	mov	x24, xzr
  45be68:	mov	w23, #0x1                   	// #1
  45be6c:	mov	w20, #0xffffffff            	// #-1
  45be70:	ldr	w19, [sp, #324]
  45be74:	cbnz	w19, 45b214 <feof@plt+0x57974>
  45be78:	b	45b228 <feof@plt+0x57988>
  45be7c:	sub	sp, sp, #0x70
  45be80:	stp	x29, x30, [sp, #64]
  45be84:	str	x21, [sp, #80]
  45be88:	stp	x20, x19, [sp, #96]
  45be8c:	add	x29, sp, #0x40
  45be90:	ldr	x20, [x0, #8]
  45be94:	mov	x21, x0
  45be98:	mov	x19, x2
  45be9c:	cbz	x20, 45bee4 <feof@plt+0x58644>
  45bea0:	ldrb	w8, [x20]
  45bea4:	cbz	w8, 45bee4 <feof@plt+0x58644>
  45bea8:	ldr	w0, [x19, #56]
  45beac:	cmn	w0, #0x1
  45beb0:	b.eq	45bec8 <feof@plt+0x58628>  // b.none
  45beb4:	ldp	x1, x2, [x19, #8]
  45beb8:	bl	45a364 <feof@plt+0x56ac4>
  45bebc:	mov	w8, #0xffffffff            	// #-1
  45bec0:	str	w8, [x19, #56]
  45bec4:	ldr	x20, [x21, #8]
  45bec8:	ldp	x1, x2, [x19, #8]
  45becc:	add	x3, x29, #0x1c
  45bed0:	mov	x0, x20
  45bed4:	bl	45a2c8 <feof@plt+0x56a28>
  45bed8:	mov	w2, w0
  45bedc:	tbz	w0, #31, 45befc <feof@plt+0x5865c>
  45bee0:	b	45bf54 <feof@plt+0x586b4>
  45bee4:	ldr	w2, [x19, #56]
  45bee8:	cmn	w2, #0x1
  45beec:	b.eq	45bf54 <feof@plt+0x586b4>  // b.none
  45bef0:	ldr	x20, [x19, #48]
  45bef4:	mov	w8, #0xffffffff            	// #-1
  45bef8:	str	w8, [x19, #56]
  45befc:	ldr	x3, [x21]
  45bf00:	ldp	x0, x4, [x19]
  45bf04:	ldr	x5, [x19, #16]
  45bf08:	ldr	x7, [x19, #32]
  45bf0c:	add	x8, x29, #0x18
  45bf10:	sub	x6, x29, #0x8
  45bf14:	mov	x1, x20
  45bf18:	str	wzr, [sp, #40]
  45bf1c:	str	xzr, [sp, #32]
  45bf20:	str	wzr, [sp, #24]
  45bf24:	str	wzr, [sp, #16]
  45bf28:	stp	x8, xzr, [sp]
  45bf2c:	bl	45a6e8 <feof@plt+0x56e48>
  45bf30:	cbz	w0, 45bf54 <feof@plt+0x586b4>
  45bf34:	ldr	w8, [x29, #24]
  45bf38:	cbz	w8, 45bf54 <feof@plt+0x586b4>
  45bf3c:	ldr	x8, [x19, #40]
  45bf40:	mov	w9, #0x1                   	// #1
  45bf44:	str	w9, [x8]
  45bf48:	ldur	x8, [x29, #-8]
  45bf4c:	ldr	x9, [x19, #24]
  45bf50:	str	x8, [x9]
  45bf54:	ldp	x20, x19, [sp, #96]
  45bf58:	ldr	x21, [sp, #80]
  45bf5c:	ldp	x29, x30, [sp, #64]
  45bf60:	mov	w0, wzr
  45bf64:	add	sp, sp, #0x70
  45bf68:	ret
  45bf6c:	ldr	w8, [x0, #8]
  45bf70:	mov	x5, x2
  45bf74:	cbz	w8, 45bfe8 <feof@plt+0x58748>
  45bf78:	add	x8, x0, #0x30
  45bf7c:	ldar	x9, [x8]
  45bf80:	cbz	x9, 45c064 <feof@plt+0x587c4>
  45bf84:	mov	w10, #0x18                  	// #24
  45bf88:	b	45bf94 <feof@plt+0x586f4>
  45bf8c:	ldar	x9, [x9]
  45bf90:	cbz	x9, 45c064 <feof@plt+0x587c4>
  45bf94:	ldr	x13, [x9, #16]
  45bf98:	cbz	x13, 45bf8c <feof@plt+0x586ec>
  45bf9c:	ldr	x12, [x9, #8]
  45bfa0:	mov	x8, xzr
  45bfa4:	b	45bfb4 <feof@plt+0x58714>
  45bfa8:	cmp	x8, x14
  45bfac:	mov	x13, x14
  45bfb0:	b.cs	45bf8c <feof@plt+0x586ec>  // b.hs, b.nlast
  45bfb4:	add	x11, x13, x8
  45bfb8:	lsr	x14, x11, #1
  45bfbc:	madd	x11, x14, x10, x12
  45bfc0:	ldr	x3, [x11, #8]
  45bfc4:	cmp	x3, x1
  45bfc8:	b.hi	45bfa8 <feof@plt+0x58708>  // b.pmore
  45bfcc:	ldr	x8, [x11, #16]
  45bfd0:	add	x15, x8, x3
  45bfd4:	cmp	x15, x1
  45bfd8:	b.hi	45c054 <feof@plt+0x587b4>  // b.pmore
  45bfdc:	add	x8, x14, #0x1
  45bfe0:	mov	x14, x13
  45bfe4:	b	45bfa8 <feof@plt+0x58708>
  45bfe8:	ldr	x9, [x0, #48]
  45bfec:	cbz	x9, 45c064 <feof@plt+0x587c4>
  45bff0:	mov	w10, #0x18                  	// #24
  45bff4:	b	45c000 <feof@plt+0x58760>
  45bff8:	ldr	x9, [x9]
  45bffc:	cbz	x9, 45c064 <feof@plt+0x587c4>
  45c000:	ldr	x13, [x9, #16]
  45c004:	cbz	x13, 45bff8 <feof@plt+0x58758>
  45c008:	ldr	x12, [x9, #8]
  45c00c:	mov	x8, xzr
  45c010:	b	45c020 <feof@plt+0x58780>
  45c014:	cmp	x8, x14
  45c018:	mov	x13, x14
  45c01c:	b.cs	45bff8 <feof@plt+0x58758>  // b.hs, b.nlast
  45c020:	add	x11, x13, x8
  45c024:	lsr	x14, x11, #1
  45c028:	madd	x11, x14, x10, x12
  45c02c:	ldr	x3, [x11, #8]
  45c030:	cmp	x3, x1
  45c034:	b.hi	45c014 <feof@plt+0x58774>  // b.pmore
  45c038:	ldr	x8, [x11, #16]
  45c03c:	add	x15, x8, x3
  45c040:	cmp	x15, x1
  45c044:	b.hi	45c054 <feof@plt+0x587b4>  // b.pmore
  45c048:	add	x8, x14, #0x1
  45c04c:	mov	x14, x13
  45c050:	b	45c014 <feof@plt+0x58774>
  45c054:	ldr	x2, [x11]
  45c058:	mov	x0, x4
  45c05c:	mov	x4, x8
  45c060:	br	x5
  45c064:	mov	x0, x4
  45c068:	mov	x2, xzr
  45c06c:	mov	x3, xzr
  45c070:	mov	x4, xzr
  45c074:	br	x5
  45c078:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45c07c:	mov	x0, x4
  45c080:	add	x1, x1, #0xdd7
  45c084:	mov	w2, #0xffffffff            	// #-1
  45c088:	br	x3
  45c08c:	sub	sp, sp, #0xd0
  45c090:	stp	x29, x30, [sp, #112]
  45c094:	stp	x28, x27, [sp, #128]
  45c098:	stp	x26, x25, [sp, #144]
  45c09c:	stp	x24, x23, [sp, #160]
  45c0a0:	stp	x22, x21, [sp, #176]
  45c0a4:	stp	x20, x19, [sp, #192]
  45c0a8:	add	x29, sp, #0x70
  45c0ac:	mov	x19, x3
  45c0b0:	add	x27, x0, x1
  45c0b4:	cmp	x1, #0x5
  45c0b8:	add	x20, x3, x4
  45c0bc:	mov	x23, x3
  45c0c0:	b.lt	45ca14 <feof@plt+0x59174>  // b.tstop
  45c0c4:	mov	w8, #0x1278                	// #4728
  45c0c8:	mov	w9, #0x1378                	// #4984
  45c0cc:	add	x10, x2, #0x800
  45c0d0:	str	x10, [sp, #32]
  45c0d4:	add	x10, x2, x8
  45c0d8:	add	x8, x2, x9
  45c0dc:	mov	x26, x2
  45c0e0:	mov	x25, x0
  45c0e4:	str	x8, [sp, #8]
  45c0e8:	mov	x23, x19
  45c0ec:	stur	x27, [x29, #-48]
  45c0f0:	str	x2, [sp, #40]
  45c0f4:	stur	x20, [x29, #-40]
  45c0f8:	str	x4, [sp]
  45c0fc:	str	x10, [sp, #48]
  45c100:	ldrsb	w8, [x25]
  45c104:	mov	w0, wzr
  45c108:	tbnz	w8, #31, 45ca20 <feof@plt+0x59180>
  45c10c:	and	w9, w8, #0xf
  45c110:	cmp	w9, #0x8
  45c114:	b.ne	45ca20 <feof@plt+0x59180>  // b.any
  45c118:	ldrb	w9, [x25, #1]
  45c11c:	tbnz	w9, #5, 45ca1c <feof@plt+0x5917c>
  45c120:	and	w8, w8, #0xff
  45c124:	bfi	w9, w8, #8, #8
  45c128:	mov	w8, #0x7bdf                	// #31711
  45c12c:	movk	w8, #0xbdef, lsl #16
  45c130:	mul	w8, w9, w8
  45c134:	mov	w9, #0x1084                	// #4228
  45c138:	movk	w9, #0x842, lsl #16
  45c13c:	cmp	w8, w9
  45c140:	b.hi	45ca1c <feof@plt+0x5917c>  // b.pmore
  45c144:	add	x25, x25, #0x2
  45c148:	tst	x25, #0x3
  45c14c:	b.eq	45c174 <feof@plt+0x588d4>  // b.none
  45c150:	mov	w24, wzr
  45c154:	mov	x21, xzr
  45c158:	ldrb	w8, [x25], #1
  45c15c:	lsl	x8, x8, x24
  45c160:	tst	x25, #0x3
  45c164:	orr	x21, x8, x21
  45c168:	add	w24, w24, #0x8
  45c16c:	b.ne	45c158 <feof@plt+0x588b8>  // b.any
  45c170:	b	45c18c <feof@plt+0x588ec>
  45c174:	mov	w24, wzr
  45c178:	mov	x21, xzr
  45c17c:	b	45c18c <feof@plt+0x588ec>
  45c180:	ldr	x26, [sp, #40]
  45c184:	ldr	x8, [sp, #56]
  45c188:	tbnz	w8, #0, 45ca04 <feof@plt+0x59164>
  45c18c:	cmp	w24, #0xe
  45c190:	b.hi	45c1b4 <feof@plt+0x58914>  // b.pmore
  45c194:	sub	x8, x27, x25
  45c198:	cmp	x8, #0x4
  45c19c:	b.lt	45ca1c <feof@plt+0x5917c>  // b.tstop
  45c1a0:	ldr	w8, [x25], #4
  45c1a4:	lsl	x8, x8, x24
  45c1a8:	add	w24, w24, #0x20
  45c1ac:	orr	x21, x8, x21
  45c1b0:	prfm	pldl1strm, [x25]
  45c1b4:	ubfx	w8, w21, #1, #2
  45c1b8:	str	x21, [sp, #56]
  45c1bc:	cbz	w8, 45c2d8 <feof@plt+0x58a38>
  45c1c0:	lsr	x21, x21, #3
  45c1c4:	cmp	w8, #0x1
  45c1c8:	sub	w28, w24, #0x3
  45c1cc:	b.eq	45c36c <feof@plt+0x58acc>  // b.none
  45c1d0:	cmp	w8, #0x3
  45c1d4:	b.eq	45ca1c <feof@plt+0x5917c>  // b.none
  45c1d8:	cmp	w28, #0xe
  45c1dc:	b.hi	45c200 <feof@plt+0x58960>  // b.pmore
  45c1e0:	sub	x8, x27, x25
  45c1e4:	cmp	x8, #0x4
  45c1e8:	b.lt	45ca1c <feof@plt+0x5917c>  // b.tstop
  45c1ec:	ldr	w8, [x25], #4
  45c1f0:	lsl	x8, x8, x28
  45c1f4:	add	w28, w24, #0x1d
  45c1f8:	orr	x21, x8, x21
  45c1fc:	prfm	pldl1strm, [x25]
  45c200:	and	w20, w21, #0x1f
  45c204:	cmp	w20, #0x1d
  45c208:	b.hi	45ca1c <feof@plt+0x5917c>  // b.pmore
  45c20c:	ubfx	w22, w21, #5, #5
  45c210:	cmp	w22, #0x1d
  45c214:	b.hi	45ca1c <feof@plt+0x5917c>  // b.pmore
  45c218:	sub	w9, w28, #0xe
  45c21c:	lsr	x10, x21, #14
  45c220:	cmp	w9, #0xe
  45c224:	stp	xzr, xzr, [x29, #-24]
  45c228:	stur	wzr, [x29, #-9]
  45c22c:	b.hi	45c250 <feof@plt+0x589b0>  // b.pmore
  45c230:	sub	x8, x27, x25
  45c234:	cmp	x8, #0x4
  45c238:	b.lt	45ca1c <feof@plt+0x5917c>  // b.tstop
  45c23c:	ldr	w8, [x25], #4
  45c240:	lsl	x8, x8, x9
  45c244:	add	w9, w28, #0x12
  45c248:	orr	x10, x8, x10
  45c24c:	prfm	pldl1strm, [x25]
  45c250:	ubfx	w8, w21, #10, #4
  45c254:	and	w11, w10, #0x7
  45c258:	ubfx	w12, w10, #3, #3
  45c25c:	ubfx	w13, w10, #6, #3
  45c260:	ubfx	w14, w10, #9, #3
  45c264:	sturb	w11, [x29, #-8]
  45c268:	sturb	w12, [x29, #-7]
  45c26c:	sturb	w13, [x29, #-6]
  45c270:	sturb	w14, [x29, #-24]
  45c274:	cbz	w8, 45c38c <feof@plt+0x58aec>
  45c278:	add	w8, w8, #0x4
  45c27c:	ubfx	w11, w10, #12, #3
  45c280:	lsr	x21, x10, #15
  45c284:	cmp	w8, #0x5
  45c288:	sub	w28, w9, #0xf
  45c28c:	sturb	w11, [x29, #-16]
  45c290:	b.eq	45c394 <feof@plt+0x58af4>  // b.none
  45c294:	cmp	w28, #0xe
  45c298:	b.hi	45c2bc <feof@plt+0x58a1c>  // b.pmore
  45c29c:	sub	x10, x27, x25
  45c2a0:	cmp	x10, #0x4
  45c2a4:	b.lt	45ca1c <feof@plt+0x5917c>  // b.tstop
  45c2a8:	ldr	w10, [x25], #4
  45c2ac:	lsl	x10, x10, x28
  45c2b0:	add	w28, w9, #0x11
  45c2b4:	orr	x21, x10, x21
  45c2b8:	prfm	pldl1strm, [x25]
  45c2bc:	and	w9, w21, #0x7
  45c2c0:	cmp	w8, #0x6
  45c2c4:	sturb	w9, [x29, #-17]
  45c2c8:	b.ne	45c87c <feof@plt+0x58fdc>  // b.any
  45c2cc:	lsr	x21, x21, #3
  45c2d0:	sub	w28, w28, #0x3
  45c2d4:	b	45c394 <feof@plt+0x58af4>
  45c2d8:	sub	w8, w24, #0xc
  45c2dc:	lsr	w8, w8, #3
  45c2e0:	mvn	x8, x8
  45c2e4:	add	x9, x8, x25
  45c2e8:	sub	x8, x27, x9
  45c2ec:	cmp	x8, #0x4
  45c2f0:	b.lt	45ca1c <feof@plt+0x5917c>  // b.tstop
  45c2f4:	ldrh	w8, [x9, #2]
  45c2f8:	ldrh	w24, [x9]
  45c2fc:	eor	w8, w8, #0xffff
  45c300:	cmp	w8, w24
  45c304:	b.ne	45ca1c <feof@plt+0x5917c>  // b.any
  45c308:	add	x25, x9, #0x4
  45c30c:	sub	w9, w27, w25
  45c310:	cmp	w8, w9
  45c314:	mov	w0, wzr
  45c318:	b.hi	45ca20 <feof@plt+0x59180>  // b.pmore
  45c31c:	sub	w9, w20, w23
  45c320:	cmp	w8, w9
  45c324:	b.hi	45ca20 <feof@plt+0x59180>  // b.pmore
  45c328:	mov	x0, x23
  45c32c:	mov	x1, x25
  45c330:	mov	x2, x24
  45c334:	bl	402fc0 <memcpy@plt>
  45c338:	add	x25, x25, x24
  45c33c:	tst	x25, #0x3
  45c340:	add	x23, x23, x24
  45c344:	b.eq	45c380 <feof@plt+0x58ae0>  // b.none
  45c348:	mov	w24, wzr
  45c34c:	mov	x21, xzr
  45c350:	ldrb	w8, [x25], #1
  45c354:	lsl	x8, x8, x24
  45c358:	tst	x25, #0x3
  45c35c:	orr	x21, x8, x21
  45c360:	add	w24, w24, #0x8
  45c364:	b.ne	45c350 <feof@plt+0x58ab0>  // b.any
  45c368:	b	45c184 <feof@plt+0x588e4>
  45c36c:	adrp	x13, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45c370:	adrp	x26, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45c374:	add	x13, x13, #0x5b4
  45c378:	add	x26, x26, #0x2d4
  45c37c:	b	45c410 <feof@plt+0x58b70>
  45c380:	mov	x21, xzr
  45c384:	mov	w24, wzr
  45c388:	b	45c184 <feof@plt+0x588e4>
  45c38c:	lsr	x21, x10, #12
  45c390:	sub	w28, w9, #0xc
  45c394:	sub	x0, x29, #0x18
  45c398:	mov	w1, #0x13                  	// #19
  45c39c:	mov	x2, x26
  45c3a0:	mov	x3, x26
  45c3a4:	bl	45ccd4 <feof@plt+0x59434>
  45c3a8:	cbz	w0, 45ca1c <feof@plt+0x5917c>
  45c3ac:	ldr	x24, [sp, #48]
  45c3b0:	add	w9, w20, #0x101
  45c3b4:	add	w8, w22, #0x1
  45c3b8:	stur	x9, [x29, #-32]
  45c3bc:	add	x9, x24, x9
  45c3c0:	add	x20, x9, x8
  45c3c4:	cmp	x20, x24
  45c3c8:	stp	x9, x8, [sp, #16]
  45c3cc:	b.hi	45c708 <feof@plt+0x58e68>  // b.pmore
  45c3d0:	ldr	x8, [sp, #8]
  45c3d4:	ldrb	w8, [x8]
  45c3d8:	cbz	w8, 45ca1c <feof@plt+0x5917c>
  45c3dc:	ldr	x0, [sp, #48]
  45c3e0:	ldur	x1, [x29, #-32]
  45c3e4:	mov	x2, x26
  45c3e8:	mov	x3, x26
  45c3ec:	bl	45ccd4 <feof@plt+0x59434>
  45c3f0:	cbz	w0, 45ca1c <feof@plt+0x5917c>
  45c3f4:	ldp	x0, x1, [sp, #16]
  45c3f8:	ldr	x3, [sp, #32]
  45c3fc:	mov	x2, x26
  45c400:	bl	45ccd4 <feof@plt+0x59434>
  45c404:	cbz	w0, 45ca1c <feof@plt+0x5917c>
  45c408:	ldr	x13, [sp, #32]
  45c40c:	ldur	x20, [x29, #-40]
  45c410:	mov	w24, w28
  45c414:	stur	x13, [x29, #-32]
  45c418:	b	45c440 <feof@plt+0x58ba0>
  45c41c:	mov	w22, w28
  45c420:	add	x1, x23, x19
  45c424:	mov	x0, x23
  45c428:	mov	x2, x22
  45c42c:	bl	402fc0 <memcpy@plt>
  45c430:	add	x23, x23, x22
  45c434:	mov	x19, x20
  45c438:	ldp	x27, x20, [x29, #-48]
  45c43c:	ldur	x13, [x29, #-32]
  45c440:	cmp	w24, #0xe
  45c444:	b.hi	45c468 <feof@plt+0x58bc8>  // b.pmore
  45c448:	sub	x8, x27, x25
  45c44c:	cmp	x8, #0x4
  45c450:	b.lt	45ca1c <feof@plt+0x5917c>  // b.tstop
  45c454:	ldr	w8, [x25], #4
  45c458:	lsl	x8, x8, x24
  45c45c:	add	w24, w24, #0x20
  45c460:	orr	x21, x8, x21
  45c464:	prfm	pldl1strm, [x25]
  45c468:	and	x8, x21, #0xff
  45c46c:	ldrh	w10, [x26, x8, lsl #1]
  45c470:	ubfx	w9, w10, #9, #3
  45c474:	and	x8, x10, #0x1ff
  45c478:	tbnz	w10, #12, 45c484 <feof@plt+0x58be4>
  45c47c:	add	w9, w9, #0x1
  45c480:	b	45c4ac <feof@plt+0x58c0c>
  45c484:	mov	w10, #0xffffffff            	// #-1
  45c488:	lsl	w9, w10, w9
  45c48c:	mvn	w9, w9
  45c490:	and	x9, x9, x21, lsr #8
  45c494:	add	x8, x8, x9
  45c498:	add	x8, x26, x8, lsl #1
  45c49c:	ldrh	w10, [x8, #512]
  45c4a0:	mov	w9, #0x8                   	// #8
  45c4a4:	and	w8, w10, #0x1ff
  45c4a8:	bfxil	w9, w10, #9, #3
  45c4ac:	sub	w24, w24, w9
  45c4b0:	cmp	w8, #0xff
  45c4b4:	lsr	x21, x21, x9
  45c4b8:	b.hi	45c4d0 <feof@plt+0x58c30>  // b.pmore
  45c4bc:	cmp	x23, x20
  45c4c0:	b.eq	45ca1c <feof@plt+0x5917c>  // b.none
  45c4c4:	strb	w8, [x23], #1
  45c4c8:	prfm	pstl1keep, [x23]
  45c4cc:	b	45c440 <feof@plt+0x58ba0>
  45c4d0:	cmp	w8, #0x100
  45c4d4:	b.eq	45c180 <feof@plt+0x588e0>  // b.none
  45c4d8:	cmp	w8, #0x108
  45c4dc:	b.hi	45c4f0 <feof@plt+0x58c50>  // b.pmore
  45c4e0:	sub	w28, w8, #0xfe
  45c4e4:	cmp	w24, #0xe
  45c4e8:	b.ls	45c580 <feof@plt+0x58ce0>  // b.plast
  45c4ec:	b	45c5a0 <feof@plt+0x58d00>
  45c4f0:	cmp	w8, #0x11d
  45c4f4:	b.ne	45c508 <feof@plt+0x58c68>  // b.any
  45c4f8:	mov	w28, #0x102                 	// #258
  45c4fc:	cmp	w24, #0xe
  45c500:	b.ls	45c580 <feof@plt+0x58ce0>  // b.plast
  45c504:	b	45c5a0 <feof@plt+0x58d00>
  45c508:	b.hi	45ca1c <feof@plt+0x5917c>  // b.pmore
  45c50c:	cmp	w24, #0xe
  45c510:	b.hi	45c534 <feof@plt+0x58c94>  // b.pmore
  45c514:	sub	x9, x27, x25
  45c518:	cmp	x9, #0x4
  45c51c:	b.lt	45ca1c <feof@plt+0x5917c>  // b.tstop
  45c520:	ldr	w9, [x25], #4
  45c524:	lsl	x9, x9, x24
  45c528:	add	w24, w24, #0x20
  45c52c:	orr	x21, x9, x21
  45c530:	prfm	pldl1strm, [x25]
  45c534:	sub	w8, w8, #0x109
  45c538:	lsr	w9, w8, #2
  45c53c:	mov	w11, #0xfffffff8            	// #-8
  45c540:	mov	w12, #0x2                   	// #2
  45c544:	and	w8, w8, #0x3
  45c548:	add	w10, w9, #0x1
  45c54c:	lsl	w11, w11, w9
  45c550:	lsl	w9, w12, w9
  45c554:	lsl	w8, w8, w10
  45c558:	eor	w11, w11, #0xfffffff8
  45c55c:	sub	w9, w9, #0x1
  45c560:	add	w8, w8, w11
  45c564:	and	w9, w9, w21
  45c568:	add	w8, w8, w9
  45c56c:	lsr	x21, x21, x10
  45c570:	add	w28, w8, #0xb
  45c574:	sub	w24, w24, w10
  45c578:	cmp	w24, #0xe
  45c57c:	b.hi	45c5a0 <feof@plt+0x58d00>  // b.pmore
  45c580:	sub	x8, x27, x25
  45c584:	cmp	x8, #0x4
  45c588:	b.lt	45ca1c <feof@plt+0x5917c>  // b.tstop
  45c58c:	ldr	w8, [x25], #4
  45c590:	lsl	x8, x8, x24
  45c594:	add	w24, w24, #0x20
  45c598:	orr	x21, x8, x21
  45c59c:	prfm	pldl1strm, [x25]
  45c5a0:	and	x8, x21, #0xff
  45c5a4:	ldrh	w10, [x13, x8, lsl #1]
  45c5a8:	ubfx	w9, w10, #9, #3
  45c5ac:	and	x8, x10, #0x1ff
  45c5b0:	tbnz	w10, #12, 45c5bc <feof@plt+0x58d1c>
  45c5b4:	add	w9, w9, #0x1
  45c5b8:	b	45c5e4 <feof@plt+0x58d44>
  45c5bc:	mov	w10, #0xffffffff            	// #-1
  45c5c0:	lsl	w9, w10, w9
  45c5c4:	mvn	w9, w9
  45c5c8:	and	x9, x9, x21, lsr #8
  45c5cc:	add	x8, x8, x9
  45c5d0:	add	x8, x13, x8, lsl #1
  45c5d4:	ldrh	w10, [x8, #512]
  45c5d8:	mov	w9, #0x8                   	// #8
  45c5dc:	and	w8, w10, #0x1ff
  45c5e0:	bfxil	w9, w10, #9, #3
  45c5e4:	sub	w24, w24, w9
  45c5e8:	lsr	x21, x21, x9
  45c5ec:	cbz	w8, 45c608 <feof@plt+0x58d68>
  45c5f0:	cmp	w8, #0x1d
  45c5f4:	b.hi	45ca1c <feof@plt+0x5917c>  // b.pmore
  45c5f8:	cmp	w8, #0x3
  45c5fc:	b.hi	45c63c <feof@plt+0x58d9c>  // b.pmore
  45c600:	add	w27, w8, #0x1
  45c604:	b	45c6a8 <feof@plt+0x58e08>
  45c608:	cmp	x23, x19
  45c60c:	b.eq	45ca1c <feof@plt+0x5917c>  // b.none
  45c610:	sub	w8, w20, w23
  45c614:	cmp	w28, w8
  45c618:	b.hi	45ca1c <feof@plt+0x5917c>  // b.pmore
  45c61c:	ldurb	w1, [x23, #-1]
  45c620:	mov	w22, w28
  45c624:	mov	x0, x23
  45c628:	mov	x2, x22
  45c62c:	bl	4031f0 <memset@plt>
  45c630:	ldur	x13, [x29, #-32]
  45c634:	add	x23, x23, x22
  45c638:	b	45c440 <feof@plt+0x58ba0>
  45c63c:	cmp	w24, #0xe
  45c640:	b.hi	45c664 <feof@plt+0x58dc4>  // b.pmore
  45c644:	sub	x9, x27, x25
  45c648:	cmp	x9, #0x4
  45c64c:	b.lt	45ca1c <feof@plt+0x5917c>  // b.tstop
  45c650:	ldr	w9, [x25], #4
  45c654:	lsl	x9, x9, x24
  45c658:	add	w24, w24, #0x20
  45c65c:	orr	x21, x9, x21
  45c660:	prfm	pldl1strm, [x25]
  45c664:	sub	w8, w8, #0x4
  45c668:	lsr	w9, w8, #1
  45c66c:	mov	w11, #0xfffffffc            	// #-4
  45c670:	mov	w12, #0x2                   	// #2
  45c674:	and	w8, w8, #0x1
  45c678:	add	w10, w9, #0x1
  45c67c:	lsl	w11, w11, w9
  45c680:	lsl	w9, w12, w9
  45c684:	lsl	w8, w8, w10
  45c688:	eor	w11, w11, #0xfffffffc
  45c68c:	sub	w9, w9, #0x1
  45c690:	add	w8, w8, w11
  45c694:	and	w9, w9, w21
  45c698:	add	w8, w8, w9
  45c69c:	lsr	x21, x21, x10
  45c6a0:	add	w27, w8, #0x5
  45c6a4:	sub	w24, w24, w10
  45c6a8:	sub	w8, w23, w19
  45c6ac:	cmp	w27, w8
  45c6b0:	b.hi	45ca1c <feof@plt+0x5917c>  // b.pmore
  45c6b4:	sub	w8, w20, w23
  45c6b8:	cmp	w28, w8
  45c6bc:	b.hi	45ca1c <feof@plt+0x5917c>  // b.pmore
  45c6c0:	mov	x8, xzr
  45c6c4:	mov	x20, x19
  45c6c8:	cmp	w27, w28
  45c6cc:	sub	x19, x8, w27, uxtw
  45c6d0:	b.cs	45c41c <feof@plt+0x58b7c>  // b.hs, b.nlast
  45c6d4:	cmp	w28, w27
  45c6d8:	csel	w22, w28, w27, cc  // cc = lo, ul, last
  45c6dc:	add	x1, x23, x19
  45c6e0:	mov	x0, x23
  45c6e4:	mov	x2, x22
  45c6e8:	bl	402fc0 <memcpy@plt>
  45c6ec:	subs	w28, w28, w22
  45c6f0:	add	x23, x23, x22
  45c6f4:	b.ne	45c6d4 <feof@plt+0x58e34>  // b.any
  45c6f8:	b	45c434 <feof@plt+0x58b94>
  45c6fc:	strb	w8, [x24], #1
  45c700:	cmp	x24, x20
  45c704:	b.cs	45c3d0 <feof@plt+0x58b30>  // b.hs, b.nlast
  45c708:	cmp	w28, #0xe
  45c70c:	b.hi	45c730 <feof@plt+0x58e90>  // b.pmore
  45c710:	sub	x8, x27, x25
  45c714:	cmp	x8, #0x4
  45c718:	b.lt	45ca1c <feof@plt+0x5917c>  // b.tstop
  45c71c:	ldr	w8, [x25], #4
  45c720:	lsl	x8, x8, x28
  45c724:	add	w28, w28, #0x20
  45c728:	orr	x21, x8, x21
  45c72c:	prfm	pldl1strm, [x25]
  45c730:	and	x8, x21, #0xff
  45c734:	ldrh	w8, [x26, x8, lsl #1]
  45c738:	tbnz	w8, #12, 45ca1c <feof@plt+0x5917c>
  45c73c:	ubfx	x9, x8, #9, #3
  45c740:	add	x9, x9, #0x1
  45c744:	tst	w8, #0x1f0
  45c748:	lsr	x21, x21, x9
  45c74c:	sub	w28, w28, w9
  45c750:	b.eq	45c6fc <feof@plt+0x58e5c>  // b.none
  45c754:	and	w8, w8, #0x1ff
  45c758:	cmp	w8, #0x12
  45c75c:	b.eq	45c7d8 <feof@plt+0x58f38>  // b.none
  45c760:	cmp	w8, #0x11
  45c764:	b.eq	45c80c <feof@plt+0x58f6c>  // b.none
  45c768:	cmp	w8, #0x10
  45c76c:	b.ne	45ca1c <feof@plt+0x5917c>  // b.any
  45c770:	ldr	x8, [sp, #48]
  45c774:	cmp	x24, x8
  45c778:	b.eq	45ca1c <feof@plt+0x5917c>  // b.none
  45c77c:	and	w9, w21, #0x3
  45c780:	add	w8, w9, #0x3
  45c784:	sub	w10, w20, w24
  45c788:	cmp	w8, w10
  45c78c:	b.hi	45ca1c <feof@plt+0x5917c>  // b.pmore
  45c790:	ldurb	w8, [x24, #-1]
  45c794:	lsr	x21, x21, #2
  45c798:	cmp	w9, #0x1
  45c79c:	sub	w28, w28, #0x2
  45c7a0:	b.eq	45c7bc <feof@plt+0x58f1c>  // b.none
  45c7a4:	cmp	w9, #0x2
  45c7a8:	b.eq	45c7b8 <feof@plt+0x58f18>  // b.none
  45c7ac:	cmp	w9, #0x3
  45c7b0:	b.ne	45c7c0 <feof@plt+0x58f20>  // b.any
  45c7b4:	strb	w8, [x24], #1
  45c7b8:	strb	w8, [x24], #1
  45c7bc:	strb	w8, [x24], #1
  45c7c0:	add	x9, x24, #0x3
  45c7c4:	strb	w8, [x24]
  45c7c8:	strb	w8, [x24, #1]
  45c7cc:	strb	w8, [x24, #2]
  45c7d0:	mov	x24, x9
  45c7d4:	b	45c700 <feof@plt+0x58e60>
  45c7d8:	and	w8, w21, #0x7f
  45c7dc:	add	w22, w8, #0xb
  45c7e0:	sub	w8, w20, w24
  45c7e4:	cmp	w22, w8
  45c7e8:	b.hi	45ca1c <feof@plt+0x5917c>  // b.pmore
  45c7ec:	mov	x0, x24
  45c7f0:	mov	w1, wzr
  45c7f4:	mov	x2, x22
  45c7f8:	sub	w28, w28, #0x7
  45c7fc:	lsr	x21, x21, #7
  45c800:	bl	4031f0 <memset@plt>
  45c804:	add	x24, x24, x22
  45c808:	b	45c700 <feof@plt+0x58e60>
  45c80c:	and	w8, w21, #0x7
  45c810:	add	w9, w8, #0x3
  45c814:	sub	w10, w20, w24
  45c818:	cmp	w9, w10
  45c81c:	b.hi	45ca1c <feof@plt+0x5917c>  // b.pmore
  45c820:	sub	w8, w8, #0x1
  45c824:	lsr	x21, x21, #3
  45c828:	cmp	w8, #0x6
  45c82c:	sub	w28, w28, #0x3
  45c830:	b.hi	45c868 <feof@plt+0x58fc8>  // b.pmore
  45c834:	adrp	x11, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45c838:	add	x11, x11, #0x2cc
  45c83c:	adr	x9, 45c84c <feof@plt+0x58fac>
  45c840:	ldrb	w10, [x11, x8]
  45c844:	add	x9, x9, x10, lsl #2
  45c848:	br	x9
  45c84c:	strb	wzr, [x24], #1
  45c850:	strb	wzr, [x24], #1
  45c854:	strb	wzr, [x24], #1
  45c858:	strb	wzr, [x24], #1
  45c85c:	strb	wzr, [x24], #1
  45c860:	strb	wzr, [x24], #1
  45c864:	strb	wzr, [x24], #1
  45c868:	add	x8, x24, #0x3
  45c86c:	strh	wzr, [x24]
  45c870:	strb	wzr, [x24, #2]
  45c874:	mov	x24, x8
  45c878:	b	45c700 <feof@plt+0x58e60>
  45c87c:	ubfx	w9, w21, #3, #3
  45c880:	cmp	w8, #0x7
  45c884:	sturb	w9, [x29, #-15]
  45c888:	b.ne	45c898 <feof@plt+0x58ff8>  // b.any
  45c88c:	lsr	x21, x21, #6
  45c890:	sub	w28, w28, #0x6
  45c894:	b	45c394 <feof@plt+0x58af4>
  45c898:	ubfx	w9, w21, #6, #3
  45c89c:	cmp	w8, #0x8
  45c8a0:	sturb	w9, [x29, #-18]
  45c8a4:	b.ne	45c8b4 <feof@plt+0x59014>  // b.any
  45c8a8:	lsr	x21, x21, #9
  45c8ac:	sub	w28, w28, #0x9
  45c8b0:	b	45c394 <feof@plt+0x58af4>
  45c8b4:	ubfx	w9, w21, #9, #3
  45c8b8:	cmp	w8, #0x9
  45c8bc:	sturb	w9, [x29, #-14]
  45c8c0:	b.ne	45c8d0 <feof@plt+0x59030>  // b.any
  45c8c4:	lsr	x21, x21, #12
  45c8c8:	sub	w28, w28, #0xc
  45c8cc:	b	45c394 <feof@plt+0x58af4>
  45c8d0:	ubfx	w9, w21, #12, #3
  45c8d4:	lsr	x21, x21, #15
  45c8d8:	cmp	w8, #0xa
  45c8dc:	sturb	w9, [x29, #-19]
  45c8e0:	sub	w9, w28, #0xf
  45c8e4:	b.ne	45c8f0 <feof@plt+0x59050>  // b.any
  45c8e8:	mov	w28, w9
  45c8ec:	b	45c394 <feof@plt+0x58af4>
  45c8f0:	cmp	w9, #0xe
  45c8f4:	b.hi	45c918 <feof@plt+0x59078>  // b.pmore
  45c8f8:	sub	x10, x27, x25
  45c8fc:	cmp	x10, #0x4
  45c900:	b.lt	45ca1c <feof@plt+0x5917c>  // b.tstop
  45c904:	ldr	w10, [x25], #4
  45c908:	lsl	x10, x10, x9
  45c90c:	add	w9, w28, #0x11
  45c910:	orr	x21, x10, x21
  45c914:	prfm	pldl1strm, [x25]
  45c918:	and	w10, w21, #0x7
  45c91c:	cmp	w8, #0xb
  45c920:	sturb	w10, [x29, #-13]
  45c924:	b.ne	45c934 <feof@plt+0x59094>  // b.any
  45c928:	lsr	x21, x21, #3
  45c92c:	sub	w28, w9, #0x3
  45c930:	b	45c394 <feof@plt+0x58af4>
  45c934:	ubfx	w10, w21, #3, #3
  45c938:	cmp	w8, #0xc
  45c93c:	sturb	w10, [x29, #-20]
  45c940:	b.ne	45c950 <feof@plt+0x590b0>  // b.any
  45c944:	lsr	x21, x21, #6
  45c948:	sub	w28, w9, #0x6
  45c94c:	b	45c394 <feof@plt+0x58af4>
  45c950:	ubfx	w10, w21, #6, #3
  45c954:	cmp	w8, #0xd
  45c958:	sturb	w10, [x29, #-12]
  45c95c:	b.ne	45c96c <feof@plt+0x590cc>  // b.any
  45c960:	lsr	x21, x21, #9
  45c964:	sub	w28, w9, #0x9
  45c968:	b	45c394 <feof@plt+0x58af4>
  45c96c:	ubfx	w10, w21, #9, #3
  45c970:	cmp	w8, #0xe
  45c974:	sturb	w10, [x29, #-21]
  45c978:	b.ne	45c984 <feof@plt+0x590e4>  // b.any
  45c97c:	lsr	x21, x21, #12
  45c980:	b	45c390 <feof@plt+0x58af0>
  45c984:	ubfx	w10, w21, #12, #3
  45c988:	lsr	x21, x21, #15
  45c98c:	cmp	w8, #0xf
  45c990:	sub	w28, w9, #0xf
  45c994:	sturb	w10, [x29, #-11]
  45c998:	b.eq	45c394 <feof@plt+0x58af4>  // b.none
  45c99c:	cmp	w28, #0xe
  45c9a0:	b.hi	45c9c4 <feof@plt+0x59124>  // b.pmore
  45c9a4:	sub	x10, x27, x25
  45c9a8:	cmp	x10, #0x4
  45c9ac:	b.lt	45ca1c <feof@plt+0x5917c>  // b.tstop
  45c9b0:	ldr	w10, [x25], #4
  45c9b4:	lsl	x10, x10, x28
  45c9b8:	add	w28, w9, #0x11
  45c9bc:	orr	x21, x10, x21
  45c9c0:	prfm	pldl1strm, [x25]
  45c9c4:	and	w9, w21, #0x7
  45c9c8:	cmp	w8, #0x10
  45c9cc:	sturb	w9, [x29, #-22]
  45c9d0:	b.eq	45c2cc <feof@plt+0x58a2c>  // b.none
  45c9d4:	ubfx	w9, w21, #3, #3
  45c9d8:	cmp	w8, #0x11
  45c9dc:	sturb	w9, [x29, #-10]
  45c9e0:	b.eq	45c88c <feof@plt+0x58fec>  // b.none
  45c9e4:	ubfx	w9, w21, #6, #3
  45c9e8:	cmp	w8, #0x12
  45c9ec:	sturb	w9, [x29, #-23]
  45c9f0:	b.eq	45c8a8 <feof@plt+0x59008>  // b.none
  45c9f4:	ubfx	w8, w21, #9, #3
  45c9f8:	lsr	x21, x21, #12
  45c9fc:	sturb	w8, [x29, #-9]
  45ca00:	b	45c8c8 <feof@plt+0x59028>
  45ca04:	ldr	x4, [sp]
  45ca08:	sub	x8, x27, x25
  45ca0c:	cmp	x8, #0x5
  45ca10:	b.ge	45c100 <feof@plt+0x58860>  // b.tcont
  45ca14:	cmp	x23, x20
  45ca18:	b.eq	45ca40 <feof@plt+0x591a0>  // b.none
  45ca1c:	mov	w0, wzr
  45ca20:	ldp	x20, x19, [sp, #192]
  45ca24:	ldp	x22, x21, [sp, #176]
  45ca28:	ldp	x24, x23, [sp, #160]
  45ca2c:	ldp	x26, x25, [sp, #144]
  45ca30:	ldp	x28, x27, [sp, #128]
  45ca34:	ldp	x29, x30, [sp, #112]
  45ca38:	add	sp, sp, #0xd0
  45ca3c:	ret
  45ca40:	ldur	w8, [x27, #-4]
  45ca44:	lsr	x9, x4, #4
  45ca48:	cmp	x9, #0x15b
  45ca4c:	b.cc	45cc6c <feof@plt+0x593cc>  // b.lo, b.ul, b.last
  45ca50:	mov	w13, #0x8071                	// #32881
  45ca54:	mov	w9, wzr
  45ca58:	mov	w10, #0x1                   	// #1
  45ca5c:	mov	w11, #0x15b0                	// #5552
  45ca60:	mov	x12, #0xffffffffffffea50    	// #-5552
  45ca64:	movk	w13, #0x8007, lsl #16
  45ca68:	mov	w14, #0xfff1                	// #65521
  45ca6c:	mov	x15, xzr
  45ca70:	add	x16, x19, x15
  45ca74:	ldrb	w17, [x16]
  45ca78:	ldrb	w18, [x16, #1]
  45ca7c:	add	x15, x15, #0x10
  45ca80:	add	w10, w10, w17
  45ca84:	ldrb	w17, [x16, #2]
  45ca88:	add	w9, w10, w9
  45ca8c:	add	w10, w10, w18
  45ca90:	ldrb	w18, [x16, #3]
  45ca94:	add	w9, w9, w10
  45ca98:	add	w10, w10, w17
  45ca9c:	ldrb	w17, [x16, #4]
  45caa0:	add	w9, w9, w10
  45caa4:	add	w10, w10, w18
  45caa8:	ldrb	w18, [x16, #5]
  45caac:	add	w9, w9, w10
  45cab0:	add	w10, w10, w17
  45cab4:	ldrb	w17, [x16, #6]
  45cab8:	add	w9, w9, w10
  45cabc:	add	w10, w10, w18
  45cac0:	ldrb	w18, [x16, #7]
  45cac4:	add	w9, w9, w10
  45cac8:	add	w10, w10, w17
  45cacc:	ldrb	w17, [x16, #8]
  45cad0:	add	w9, w9, w10
  45cad4:	add	w10, w10, w18
  45cad8:	ldrb	w18, [x16, #9]
  45cadc:	add	w9, w9, w10
  45cae0:	add	w10, w10, w17
  45cae4:	ldrb	w17, [x16, #10]
  45cae8:	add	w9, w9, w10
  45caec:	add	w10, w10, w18
  45caf0:	ldrb	w18, [x16, #11]
  45caf4:	add	w9, w9, w10
  45caf8:	add	w10, w10, w17
  45cafc:	ldrb	w17, [x16, #12]
  45cb00:	add	w9, w9, w10
  45cb04:	add	w10, w10, w18
  45cb08:	ldrb	w18, [x16, #13]
  45cb0c:	add	w9, w9, w10
  45cb10:	add	w10, w10, w17
  45cb14:	ldrb	w17, [x16, #14]
  45cb18:	ldrb	w16, [x16, #15]
  45cb1c:	add	w9, w9, w10
  45cb20:	add	w10, w10, w18
  45cb24:	add	w9, w9, w10
  45cb28:	add	w10, w10, w17
  45cb2c:	sub	w17, w15, #0x10
  45cb30:	lsr	w17, w17, #5
  45cb34:	add	w9, w9, w10
  45cb38:	add	w10, w10, w16
  45cb3c:	cmp	w17, #0xad
  45cb40:	add	w9, w9, w10
  45cb44:	b.cc	45ca70 <feof@plt+0x591d0>  // b.lo, b.ul, b.last
  45cb48:	add	x4, x4, x12
  45cb4c:	umull	x15, w10, w13
  45cb50:	umull	x16, w9, w13
  45cb54:	lsr	x15, x15, #47
  45cb58:	lsr	x16, x16, #47
  45cb5c:	lsr	x17, x4, #4
  45cb60:	add	x19, x19, x11
  45cb64:	msub	w10, w15, w14, w10
  45cb68:	cmp	x17, #0x15a
  45cb6c:	msub	w9, w16, w14, w9
  45cb70:	b.hi	45ca6c <feof@plt+0x591cc>  // b.pmore
  45cb74:	subs	x11, x4, #0x10
  45cb78:	b.cc	45cc7c <feof@plt+0x593dc>  // b.lo, b.ul, b.last
  45cb7c:	and	x12, x11, #0xfffffffffffffff0
  45cb80:	add	x13, x12, #0x10
  45cb84:	mov	x14, x19
  45cb88:	ldrb	w15, [x14]
  45cb8c:	ldrb	w16, [x14, #1]
  45cb90:	sub	x4, x4, #0x10
  45cb94:	cmp	x4, #0xf
  45cb98:	add	w10, w10, w15
  45cb9c:	ldrb	w15, [x14, #2]
  45cba0:	add	w9, w10, w9
  45cba4:	add	w10, w10, w16
  45cba8:	ldrb	w16, [x14, #3]
  45cbac:	add	w9, w9, w10
  45cbb0:	add	w10, w10, w15
  45cbb4:	ldrb	w15, [x14, #4]
  45cbb8:	add	w9, w9, w10
  45cbbc:	add	w10, w10, w16
  45cbc0:	ldrb	w16, [x14, #5]
  45cbc4:	add	w9, w9, w10
  45cbc8:	add	w10, w10, w15
  45cbcc:	ldrb	w15, [x14, #6]
  45cbd0:	add	w9, w9, w10
  45cbd4:	add	w10, w10, w16
  45cbd8:	ldrb	w16, [x14, #7]
  45cbdc:	add	w9, w9, w10
  45cbe0:	add	w10, w10, w15
  45cbe4:	ldrb	w15, [x14, #8]
  45cbe8:	add	w9, w9, w10
  45cbec:	add	w10, w10, w16
  45cbf0:	ldrb	w16, [x14, #9]
  45cbf4:	add	w9, w9, w10
  45cbf8:	add	w10, w10, w15
  45cbfc:	ldrb	w15, [x14, #10]
  45cc00:	add	w9, w9, w10
  45cc04:	add	w10, w10, w16
  45cc08:	ldrb	w16, [x14, #11]
  45cc0c:	add	w9, w9, w10
  45cc10:	add	w10, w10, w15
  45cc14:	ldrb	w15, [x14, #12]
  45cc18:	add	w9, w9, w10
  45cc1c:	add	w10, w10, w16
  45cc20:	ldrb	w16, [x14, #13]
  45cc24:	add	w9, w9, w10
  45cc28:	add	w10, w10, w15
  45cc2c:	ldrb	w15, [x14, #14]
  45cc30:	add	w9, w9, w10
  45cc34:	add	w10, w10, w16
  45cc38:	add	w9, w9, w10
  45cc3c:	add	w10, w10, w15
  45cc40:	ldrb	w15, [x14, #15]
  45cc44:	add	w9, w9, w10
  45cc48:	add	x14, x14, #0x10
  45cc4c:	add	w10, w10, w15
  45cc50:	add	w9, w9, w10
  45cc54:	b.hi	45cb88 <feof@plt+0x592e8>  // b.pmore
  45cc58:	add	x19, x19, x13
  45cc5c:	sub	x4, x11, x12
  45cc60:	rev	w8, w8
  45cc64:	cbnz	x4, 45cc84 <feof@plt+0x593e4>
  45cc68:	b	45cca0 <feof@plt+0x59400>
  45cc6c:	mov	w9, wzr
  45cc70:	mov	w10, #0x1                   	// #1
  45cc74:	subs	x11, x4, #0x10
  45cc78:	b.cs	45cb7c <feof@plt+0x592dc>  // b.hs, b.nlast
  45cc7c:	rev	w8, w8
  45cc80:	cbz	x4, 45cca0 <feof@plt+0x59400>
  45cc84:	mov	x11, xzr
  45cc88:	ldrb	w12, [x19, x11]
  45cc8c:	add	x11, x11, #0x1
  45cc90:	cmp	x4, w11, uxtw
  45cc94:	add	w10, w10, w12
  45cc98:	add	w9, w10, w9
  45cc9c:	b.hi	45cc88 <feof@plt+0x593e8>  // b.pmore
  45cca0:	mov	w11, #0x8071                	// #32881
  45cca4:	movk	w11, #0x8007, lsl #16
  45cca8:	umull	x13, w10, w11
  45ccac:	umull	x11, w9, w11
  45ccb0:	mov	w12, #0xfff1                	// #65521
  45ccb4:	lsr	x13, x13, #47
  45ccb8:	lsr	x11, x11, #47
  45ccbc:	msub	w10, w13, w12, w10
  45ccc0:	msub	w9, w11, w12, w9
  45ccc4:	orr	w9, w10, w9, lsl #16
  45ccc8:	cmp	w9, w8
  45cccc:	cset	w0, eq  // eq = none
  45ccd0:	b	45ca20 <feof@plt+0x59180>
  45ccd4:	sub	sp, sp, #0xc0
  45ccd8:	stp	x29, x30, [sp, #112]
  45ccdc:	str	x25, [sp, #128]
  45cce0:	stp	x24, x23, [sp, #144]
  45cce4:	stp	x22, x21, [sp, #160]
  45cce8:	stp	x20, x19, [sp, #176]
  45ccec:	add	x29, sp, #0x70
  45ccf0:	mov	x19, x3
  45ccf4:	add	x20, x2, #0x1, lsl #12
  45ccf8:	movi	v0.2d, #0x0
  45ccfc:	stp	q0, q0, [x29, #-32]
  45cd00:	cbz	x1, 45cd64 <feof@plt+0x594c4>
  45cd04:	mov	x8, xzr
  45cd08:	sub	x9, x29, #0x20
  45cd0c:	add	x10, sp, #0x30
  45cd10:	add	x11, sp, #0x10
  45cd14:	b	45cd44 <feof@plt+0x594a4>
  45cd18:	ldrh	w12, [x11, x12, lsl #1]
  45cd1c:	strh	w8, [x20, x12, lsl #1]
  45cd20:	ldrb	w12, [x0, x8]
  45cd24:	lsl	x14, x12, #1
  45cd28:	ldrh	w13, [x9, x14]
  45cd2c:	strh	w8, [x11, x14]
  45cd30:	add	x8, x8, #0x1
  45cd34:	add	w13, w13, #0x1
  45cd38:	cmp	x1, x8
  45cd3c:	strh	w13, [x9, x12, lsl #1]
  45cd40:	b.eq	45cd64 <feof@plt+0x594c4>  // b.none
  45cd44:	ldrb	w12, [x0, x8]
  45cd48:	cmp	x12, #0xf
  45cd4c:	b.hi	45d01c <feof@plt+0x5977c>  // b.pmore
  45cd50:	ldrh	w13, [x9, x12, lsl #1]
  45cd54:	cbnz	w13, 45cd18 <feof@plt+0x59478>
  45cd58:	lsl	x14, x12, #1
  45cd5c:	strh	w8, [x10, x14]
  45cd60:	b	45cd2c <feof@plt+0x5948c>
  45cd64:	mov	w2, #0x800                 	// #2048
  45cd68:	mov	x0, x19
  45cd6c:	mov	w1, wzr
  45cd70:	bl	4031f0 <memset@plt>
  45cd74:	mov	w8, wzr
  45cd78:	mov	w9, #0x1                   	// #1
  45cd7c:	sub	x10, x29, #0x20
  45cd80:	add	x11, sp, #0x30
  45cd84:	mov	w12, #0x1                   	// #1
  45cd88:	b	45cd98 <feof@plt+0x594f8>
  45cd8c:	add	x12, x12, #0x1
  45cd90:	cmp	x12, #0x9
  45cd94:	b.eq	45ce3c <feof@plt+0x5959c>  // b.none
  45cd98:	ldrh	w13, [x10, x12, lsl #1]
  45cd9c:	cbz	w13, 45cd8c <feof@plt+0x594ec>
  45cda0:	lsl	w17, w9, w12
  45cda4:	cmp	w17, w13
  45cda8:	b.cc	45d01c <feof@plt+0x5977c>  // b.lo, b.ul, b.last
  45cdac:	ldrh	w15, [x11, x12, lsl #1]
  45cdb0:	sub	x18, x12, #0x1
  45cdb4:	mov	x14, xzr
  45cdb8:	lsl	x16, x18, #9
  45cdbc:	sxtw	x17, w17
  45cdc0:	lsl	w18, w9, w18
  45cdc4:	cmp	w15, #0x1ff
  45cdc8:	b.hi	45d01c <feof@plt+0x5977c>  // b.pmore
  45cdcc:	cmp	w8, #0xff
  45cdd0:	b.hi	45cdf4 <feof@plt+0x59554>  // b.pmore
  45cdd4:	orr	w0, w16, w15
  45cdd8:	mov	w1, w8
  45cddc:	ldrh	w2, [x19, x1, lsl #1]
  45cde0:	cbnz	w2, 45d01c <feof@plt+0x5977c>
  45cde4:	strh	w0, [x19, x1, lsl #1]
  45cde8:	add	x1, x1, x17
  45cdec:	cmp	x1, #0x100
  45cdf0:	b.cc	45cddc <feof@plt+0x5953c>  // b.lo, b.ul, b.last
  45cdf4:	add	x14, x14, #0x1
  45cdf8:	cmp	x14, x13
  45cdfc:	b.cs	45ce08 <feof@plt+0x59568>  // b.hs, b.nlast
  45ce00:	mov	w15, w15
  45ce04:	ldrh	w15, [x20, x15, lsl #1]
  45ce08:	mov	w1, w18
  45ce0c:	mov	w0, w1
  45ce10:	tst	w1, w8
  45ce14:	lsr	w1, w1, #1
  45ce18:	b.ne	45ce0c <feof@plt+0x5956c>  // b.any
  45ce1c:	sub	w1, w0, #0x1
  45ce20:	and	w8, w1, w8
  45ce24:	cmp	w0, #0x0
  45ce28:	add	w8, w8, w0
  45ce2c:	csel	w8, wzr, w8, eq  // eq = none
  45ce30:	cmp	x14, x13
  45ce34:	b.ne	45cdc4 <feof@plt+0x59524>  // b.any
  45ce38:	b	45cd8c <feof@plt+0x594ec>
  45ce3c:	mov	w9, #0x9                   	// #9
  45ce40:	sub	x10, x29, #0x20
  45ce44:	mov	x11, sp
  45ce48:	mov	w12, #0x1                   	// #1
  45ce4c:	b	45ce60 <feof@plt+0x595c0>
  45ce50:	cbnz	w13, 45d01c <feof@plt+0x5977c>
  45ce54:	add	x9, x9, #0x1
  45ce58:	cmp	x9, #0x10
  45ce5c:	b.eq	45cecc <feof@plt+0x5962c>  // b.none
  45ce60:	ldrh	w13, [x10, x9, lsl #1]
  45ce64:	cbz	w13, 45ce54 <feof@plt+0x595b4>
  45ce68:	mov	x14, xzr
  45ce6c:	add	x15, x11, x9, lsl #1
  45ce70:	sturh	w8, [x15, #-18]
  45ce74:	b	45ce8c <feof@plt+0x595ec>
  45ce78:	add	w8, w17, w8
  45ce7c:	bic	w13, w13, w15
  45ce80:	add	w14, w14, #0x1
  45ce84:	cmp	x9, x14
  45ce88:	b.ls	45ce50 <feof@plt+0x595b0>  // b.plast
  45ce8c:	lsl	w15, w12, w14
  45ce90:	tst	w15, w13
  45ce94:	b.eq	45ce80 <feof@plt+0x595e0>  // b.none
  45ce98:	subs	x16, x9, x14
  45ce9c:	b.eq	45ce7c <feof@plt+0x595dc>  // b.none
  45cea0:	sub	w17, w16, #0x1
  45cea4:	mov	w18, #0x1                   	// #1
  45cea8:	lsl	w17, w18, w17
  45ceac:	tst	w17, w8
  45ceb0:	b.eq	45ce78 <feof@plt+0x595d8>  // b.none
  45ceb4:	bic	w8, w8, w17
  45ceb8:	cmp	x16, w18, uxtw
  45cebc:	add	w18, w18, #0x1
  45cec0:	lsr	w17, w17, #1
  45cec4:	b.hi	45ceac <feof@plt+0x5960c>  // b.pmore
  45cec8:	b	45ce7c <feof@plt+0x595dc>
  45cecc:	mov	x21, xzr
  45ced0:	add	x8, x19, #0x200
  45ced4:	mov	w9, #0xf                   	// #15
  45ced8:	sub	x10, x29, #0x20
  45cedc:	add	x11, sp, #0x30
  45cee0:	mov	x12, sp
  45cee4:	mov	w13, #0x1                   	// #1
  45cee8:	b	45cf00 <feof@plt+0x59660>
  45ceec:	mov	x6, x21
  45cef0:	sub	x9, x9, #0x1
  45cef4:	cmp	x9, #0x8
  45cef8:	mov	x21, x6
  45cefc:	b.ls	45d03c <feof@plt+0x5979c>  // b.plast
  45cf00:	ldrh	w14, [x10, x9, lsl #1]
  45cf04:	cbz	x14, 45ceec <feof@plt+0x5964c>
  45cf08:	lsl	x18, x9, #1
  45cf0c:	add	x0, x18, x12
  45cf10:	ldrh	w17, [x11, x18]
  45cf14:	ldurh	w1, [x0, #-18]
  45cf18:	sub	x16, x9, #0x8
  45cf1c:	lsl	w18, w13, w16
  45cf20:	sub	w3, w9, #0x1
  45cf24:	mov	x15, xzr
  45cf28:	mov	x4, xzr
  45cf2c:	mov	x5, xzr
  45cf30:	sxtw	x0, w18
  45cf34:	lsl	x2, x16, #9
  45cf38:	lsl	w3, w13, w3
  45cf3c:	mov	w7, #0x100                 	// #256
  45cf40:	and	w22, w1, #0xff
  45cf44:	cmp	x7, x22
  45cf48:	b.ne	45cf54 <feof@plt+0x596b4>  // b.any
  45cf4c:	mov	x6, x21
  45cf50:	b	45cfa0 <feof@plt+0x59700>
  45cf54:	ldrh	w5, [x19, x22, lsl #1]
  45cf58:	cbz	w5, 45cf7c <feof@plt+0x596dc>
  45cf5c:	tbz	w5, #12, 45d01c <feof@plt+0x5977c>
  45cf60:	ubfx	x4, x5, #9, #3
  45cf64:	cmp	x16, x4
  45cf68:	b.hi	45d01c <feof@plt+0x5977c>  // b.pmore
  45cf6c:	and	x5, x5, #0x1ff
  45cf70:	mov	x6, x21
  45cf74:	mov	x7, x22
  45cf78:	b	45cfa0 <feof@plt+0x59700>
  45cf7c:	cmp	x21, #0x1ff
  45cf80:	b.hi	45d01c <feof@plt+0x5977c>  // b.pmore
  45cf84:	add	w4, w21, w2
  45cf88:	add	w4, w4, #0x1, lsl #12
  45cf8c:	add	x6, x21, x0
  45cf90:	strh	w4, [x19, x22, lsl #1]
  45cf94:	mov	x7, x22
  45cf98:	mov	x5, x21
  45cf9c:	mov	x4, x16
  45cfa0:	lsr	w21, w1, #8
  45cfa4:	lsl	w22, w13, w4
  45cfa8:	cmp	w21, w22
  45cfac:	b.cs	45cfd0 <feof@plt+0x59730>  // b.hs, b.nlast
  45cfb0:	orr	w23, w2, w17
  45cfb4:	add	x24, x8, x5, lsl #1
  45cfb8:	ldrh	w25, [x24, x21, lsl #1]
  45cfbc:	cbnz	w25, 45d01c <feof@plt+0x5977c>
  45cfc0:	strh	w23, [x24, x21, lsl #1]
  45cfc4:	add	x21, x21, x18
  45cfc8:	cmp	x21, x22
  45cfcc:	b.cc	45cfb8 <feof@plt+0x59718>  // b.lo, b.ul, b.last
  45cfd0:	add	x15, x15, #0x1
  45cfd4:	cmp	x15, x14
  45cfd8:	b.cs	45cfe4 <feof@plt+0x59744>  // b.hs, b.nlast
  45cfdc:	mov	w17, w17
  45cfe0:	ldrh	w17, [x20, x17, lsl #1]
  45cfe4:	mov	w22, w3
  45cfe8:	mov	w21, w22
  45cfec:	tst	w22, w1
  45cff0:	lsr	w22, w22, #1
  45cff4:	b.ne	45cfe8 <feof@plt+0x59748>  // b.any
  45cff8:	sub	w22, w21, #0x1
  45cffc:	and	w1, w22, w1
  45d000:	cmp	w21, #0x0
  45d004:	add	w1, w1, w21
  45d008:	csel	w1, wzr, w1, eq  // eq = none
  45d00c:	cmp	x15, x14
  45d010:	mov	x21, x6
  45d014:	b.ne	45cf40 <feof@plt+0x596a0>  // b.any
  45d018:	b	45cef0 <feof@plt+0x59650>
  45d01c:	mov	w0, wzr
  45d020:	ldp	x20, x19, [sp, #176]
  45d024:	ldp	x22, x21, [sp, #160]
  45d028:	ldp	x24, x23, [sp, #144]
  45d02c:	ldr	x25, [sp, #128]
  45d030:	ldp	x29, x30, [sp, #112]
  45d034:	add	sp, sp, #0xc0
  45d038:	ret
  45d03c:	mov	w0, #0x1                   	// #1
  45d040:	b	45d020 <feof@plt+0x59780>
  45d044:	sub	sp, sp, #0x120
  45d048:	stp	x29, x30, [sp, #192]
  45d04c:	stp	x28, x27, [sp, #208]
  45d050:	stp	x26, x25, [sp, #224]
  45d054:	stp	x24, x23, [sp, #240]
  45d058:	stp	x22, x21, [sp, #256]
  45d05c:	stp	x20, x19, [sp, #272]
  45d060:	add	x29, sp, #0xc0
  45d064:	mov	x24, x2
  45d068:	mov	x22, x0
  45d06c:	add	x2, sp, #0x38
  45d070:	mov	w0, wzr
  45d074:	mov	x19, x5
  45d078:	mov	x20, x4
  45d07c:	mov	w21, w3
  45d080:	mov	x26, x1
  45d084:	bl	4036e0 <__lxstat@plt>
  45d088:	mov	x23, xzr
  45d08c:	str	w21, [sp, #20]
  45d090:	tbnz	w0, #31, 45d234 <feof@plt+0x59994>
  45d094:	ldr	w8, [sp, #72]
  45d098:	and	w8, w8, #0xf000
  45d09c:	cmp	w8, #0xa, lsl #12
  45d0a0:	b.ne	45d234 <feof@plt+0x59994>  // b.any
  45d0a4:	mov	x27, xzr
  45d0a8:	mov	x23, xzr
  45d0ac:	mov	w1, #0x80                  	// #128
  45d0b0:	mov	x0, x22
  45d0b4:	mov	x2, x20
  45d0b8:	mov	x3, x19
  45d0bc:	bl	459b44 <feof@plt+0x562a4>
  45d0c0:	cbz	x0, 45d254 <feof@plt+0x599b4>
  45d0c4:	mov	x28, x0
  45d0c8:	mov	w25, #0x80                  	// #128
  45d0cc:	mov	x0, x26
  45d0d0:	mov	x1, x28
  45d0d4:	mov	x2, x25
  45d0d8:	bl	403000 <readlink@plt>
  45d0dc:	tbnz	x0, #63, 45d23c <feof@plt+0x5999c>
  45d0e0:	sub	x8, x25, #0x1
  45d0e4:	cmp	x0, x8
  45d0e8:	b.cc	45d128 <feof@plt+0x59888>  // b.lo, b.ul, b.last
  45d0ec:	mov	x0, x22
  45d0f0:	mov	x1, x28
  45d0f4:	mov	x2, x25
  45d0f8:	mov	x3, x20
  45d0fc:	mov	x4, x19
  45d100:	bl	459d08 <feof@plt+0x56468>
  45d104:	lsl	x25, x25, #1
  45d108:	mov	x0, x22
  45d10c:	mov	x1, x25
  45d110:	mov	x2, x20
  45d114:	mov	x3, x19
  45d118:	bl	459b44 <feof@plt+0x562a4>
  45d11c:	mov	x28, x0
  45d120:	cbnz	x0, 45d0cc <feof@plt+0x5982c>
  45d124:	b	45d254 <feof@plt+0x599b4>
  45d128:	strb	wzr, [x28, x0]
  45d12c:	ldrb	w8, [x28]
  45d130:	cmp	w8, #0x2f
  45d134:	b.eq	45d1e4 <feof@plt+0x59944>  // b.none
  45d138:	mov	w1, #0x2f                  	// #47
  45d13c:	mov	x0, x26
  45d140:	bl	4035a0 <strrchr@plt>
  45d144:	cbz	x0, 45d1e4 <feof@plt+0x59944>
  45d148:	sub	x8, x0, x26
  45d14c:	mov	x0, x28
  45d150:	str	x24, [sp, #24]
  45d154:	add	x24, x8, #0x1
  45d158:	bl	4030b0 <strlen@plt>
  45d15c:	add	x8, x24, x0
  45d160:	add	x1, x8, #0x1
  45d164:	mov	x0, x22
  45d168:	mov	x2, x20
  45d16c:	mov	x3, x19
  45d170:	str	x1, [sp, #8]
  45d174:	bl	459b44 <feof@plt+0x562a4>
  45d178:	cbz	x0, 45d5bc <feof@plt+0x59d1c>
  45d17c:	mov	x1, x26
  45d180:	mov	x2, x24
  45d184:	mov	x21, x0
  45d188:	bl	402fc0 <memcpy@plt>
  45d18c:	add	x8, x21, x24
  45d190:	mov	x0, x28
  45d194:	str	x8, [sp]
  45d198:	bl	4030b0 <strlen@plt>
  45d19c:	mov	x26, x0
  45d1a0:	ldr	x0, [sp]
  45d1a4:	mov	x1, x28
  45d1a8:	mov	x2, x26
  45d1ac:	bl	402fc0 <memcpy@plt>
  45d1b0:	add	x8, x26, x24
  45d1b4:	mov	x0, x22
  45d1b8:	mov	x1, x28
  45d1bc:	mov	x2, x25
  45d1c0:	mov	x3, x20
  45d1c4:	mov	x4, x19
  45d1c8:	strb	wzr, [x21, x8]
  45d1cc:	bl	459d08 <feof@plt+0x56468>
  45d1d0:	ldr	x25, [sp, #8]
  45d1d4:	ldr	x24, [sp, #24]
  45d1d8:	mov	x26, x21
  45d1dc:	cbnz	x23, 45d1ec <feof@plt+0x5994c>
  45d1e0:	b	45d204 <feof@plt+0x59964>
  45d1e4:	mov	x26, x28
  45d1e8:	cbz	x23, 45d204 <feof@plt+0x59964>
  45d1ec:	mov	x0, x22
  45d1f0:	mov	x1, x23
  45d1f4:	mov	x2, x27
  45d1f8:	mov	x3, x20
  45d1fc:	mov	x4, x19
  45d200:	bl	459d08 <feof@plt+0x56468>
  45d204:	add	x2, sp, #0x38
  45d208:	mov	w0, wzr
  45d20c:	mov	x1, x26
  45d210:	bl	4036e0 <__lxstat@plt>
  45d214:	tbnz	w0, #31, 45d5b4 <feof@plt+0x59d14>
  45d218:	ldr	w8, [sp, #72]
  45d21c:	mov	x27, x25
  45d220:	mov	x23, x26
  45d224:	and	w8, w8, #0xf000
  45d228:	cmp	w8, #0xa, lsl #12
  45d22c:	b.eq	45d0ac <feof@plt+0x5980c>  // b.none
  45d230:	b	45d258 <feof@plt+0x599b8>
  45d234:	mov	x25, x23
  45d238:	b	45d258 <feof@plt+0x599b8>
  45d23c:	mov	x0, x22
  45d240:	mov	x1, x28
  45d244:	mov	x2, x25
  45d248:	mov	x3, x20
  45d24c:	mov	x4, x19
  45d250:	bl	459d08 <feof@plt+0x56468>
  45d254:	mov	x25, x27
  45d258:	mov	w1, #0x2f                  	// #47
  45d25c:	mov	x0, x26
  45d260:	str	x23, [sp, #24]
  45d264:	bl	4035a0 <strrchr@plt>
  45d268:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  45d26c:	sub	x8, x0, x26
  45d270:	add	x9, x9, #0x23b
  45d274:	cmp	x0, #0x0
  45d278:	mov	x0, x24
  45d27c:	csel	x28, x9, x26, eq  // eq = none
  45d280:	csinc	x27, xzr, x8, eq  // eq = none
  45d284:	bl	4030b0 <strlen@plt>
  45d288:	add	x23, x27, x0
  45d28c:	mov	x26, x0
  45d290:	add	x1, x23, #0x1
  45d294:	mov	x0, x22
  45d298:	mov	x2, x20
  45d29c:	mov	x3, x19
  45d2a0:	str	x1, [sp, #8]
  45d2a4:	bl	459b44 <feof@plt+0x562a4>
  45d2a8:	mov	x21, x22
  45d2ac:	mov	x22, x24
  45d2b0:	str	x28, [sp]
  45d2b4:	cbz	x0, 45d31c <feof@plt+0x59a7c>
  45d2b8:	mov	x1, x28
  45d2bc:	mov	x2, x27
  45d2c0:	mov	x24, x0
  45d2c4:	bl	402fc0 <memcpy@plt>
  45d2c8:	add	x0, x24, x27
  45d2cc:	mov	x1, x22
  45d2d0:	mov	x2, x26
  45d2d4:	bl	402fc0 <memcpy@plt>
  45d2d8:	add	x3, sp, #0x38
  45d2dc:	mov	x0, x24
  45d2e0:	mov	x1, x20
  45d2e4:	mov	x2, x19
  45d2e8:	strb	wzr, [x24, x23]
  45d2ec:	bl	45a2c8 <feof@plt+0x56a28>
  45d2f0:	ldr	x2, [sp, #8]
  45d2f4:	mov	w26, w0
  45d2f8:	mov	x0, x21
  45d2fc:	mov	x1, x24
  45d300:	mov	x3, x20
  45d304:	mov	x4, x19
  45d308:	bl	459d08 <feof@plt+0x56468>
  45d30c:	mov	x28, x22
  45d310:	mov	x22, x21
  45d314:	tbz	w26, #31, 45d484 <feof@plt+0x59be4>
  45d318:	b	45d324 <feof@plt+0x59a84>
  45d31c:	mov	x28, x22
  45d320:	mov	x22, x21
  45d324:	mov	x0, x28
  45d328:	bl	4030b0 <strlen@plt>
  45d32c:	add	x23, x27, x0
  45d330:	add	x21, x23, #0x8
  45d334:	mov	x26, x0
  45d338:	mov	x0, x22
  45d33c:	mov	x1, x21
  45d340:	mov	x2, x20
  45d344:	mov	x3, x19
  45d348:	bl	459b44 <feof@plt+0x562a4>
  45d34c:	cbz	x0, 45d3c8 <feof@plt+0x59b28>
  45d350:	ldr	x1, [sp]
  45d354:	mov	x2, x27
  45d358:	mov	x24, x0
  45d35c:	add	x23, x23, #0x7
  45d360:	bl	402fc0 <memcpy@plt>
  45d364:	add	x8, x24, x27
  45d368:	mov	w9, #0x642e                	// #25646
  45d36c:	mov	w10, #0x7562                	// #30050
  45d370:	movk	w9, #0x6265, lsl #16
  45d374:	movk	w10, #0x2f67, lsl #16
  45d378:	add	x0, x8, #0x7
  45d37c:	mov	x1, x28
  45d380:	mov	x2, x26
  45d384:	str	w9, [x8]
  45d388:	stur	w10, [x8, #3]
  45d38c:	bl	402fc0 <memcpy@plt>
  45d390:	add	x3, sp, #0x38
  45d394:	mov	x0, x24
  45d398:	mov	x1, x20
  45d39c:	mov	x2, x19
  45d3a0:	strb	wzr, [x24, x23]
  45d3a4:	bl	45a2c8 <feof@plt+0x56a28>
  45d3a8:	mov	w26, w0
  45d3ac:	mov	x0, x22
  45d3b0:	mov	x1, x24
  45d3b4:	mov	x2, x21
  45d3b8:	mov	x3, x20
  45d3bc:	mov	x4, x19
  45d3c0:	bl	459d08 <feof@plt+0x56468>
  45d3c4:	tbz	w26, #31, 45d484 <feof@plt+0x59be4>
  45d3c8:	mov	x0, x28
  45d3cc:	bl	4030b0 <strlen@plt>
  45d3d0:	add	x23, x27, x0
  45d3d4:	add	x21, x23, #0x10
  45d3d8:	mov	x26, x0
  45d3dc:	mov	x0, x22
  45d3e0:	mov	x1, x21
  45d3e4:	mov	x2, x20
  45d3e8:	mov	x3, x19
  45d3ec:	bl	459b44 <feof@plt+0x562a4>
  45d3f0:	cbz	x0, 45d480 <feof@plt+0x59be0>
  45d3f4:	adrp	x8, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45d3f8:	add	x8, x8, #0xdc1
  45d3fc:	ldur	x9, [x8, #7]
  45d400:	ldr	x8, [x8]
  45d404:	ldr	x1, [sp]
  45d408:	add	x10, x23, #0xf
  45d40c:	add	x23, x0, #0xf
  45d410:	mov	x24, x0
  45d414:	stur	x9, [x0, #7]
  45d418:	str	x8, [x0]
  45d41c:	mov	x0, x23
  45d420:	mov	x2, x27
  45d424:	str	x10, [sp, #8]
  45d428:	bl	402fc0 <memcpy@plt>
  45d42c:	add	x0, x23, x27
  45d430:	mov	x1, x28
  45d434:	mov	x2, x26
  45d438:	bl	402fc0 <memcpy@plt>
  45d43c:	ldr	x8, [sp, #8]
  45d440:	add	x3, sp, #0x38
  45d444:	mov	x0, x24
  45d448:	mov	x1, x20
  45d44c:	mov	x2, x19
  45d450:	strb	wzr, [x24, x8]
  45d454:	bl	45a2c8 <feof@plt+0x56a28>
  45d458:	mov	w23, w0
  45d45c:	mov	x0, x22
  45d460:	mov	x1, x24
  45d464:	mov	x2, x21
  45d468:	mov	x3, x20
  45d46c:	mov	x4, x19
  45d470:	bl	459d08 <feof@plt+0x56468>
  45d474:	cmp	w23, #0x0
  45d478:	csinv	w26, w23, wzr, ge  // ge = tcont
  45d47c:	b	45d484 <feof@plt+0x59be4>
  45d480:	mov	w26, #0xffffffff            	// #-1
  45d484:	ldr	x23, [sp, #24]
  45d488:	mov	x27, x25
  45d48c:	cbz	x23, 45d4ac <feof@plt+0x59c0c>
  45d490:	cbz	x27, 45d4ac <feof@plt+0x59c0c>
  45d494:	mov	x0, x22
  45d498:	mov	x1, x23
  45d49c:	mov	x2, x27
  45d4a0:	mov	x3, x20
  45d4a4:	mov	x4, x19
  45d4a8:	bl	459d08 <feof@plt+0x56468>
  45d4ac:	tbnz	w26, #31, 45d58c <feof@plt+0x59cec>
  45d4b0:	ldr	w23, [sp, #20]
  45d4b4:	cbz	w23, 45d590 <feof@plt+0x59cf0>
  45d4b8:	add	x2, sp, #0x38
  45d4bc:	mov	w0, wzr
  45d4c0:	mov	w1, w26
  45d4c4:	bl	402f80 <__fxstat@plt>
  45d4c8:	tbnz	w0, #31, 45d534 <feof@plt+0x59c94>
  45d4cc:	ldr	x3, [sp, #104]
  45d4d0:	add	x6, sp, #0x20
  45d4d4:	mov	x0, x22
  45d4d8:	mov	w1, w26
  45d4dc:	mov	x2, xzr
  45d4e0:	mov	x4, x20
  45d4e4:	mov	x5, x19
  45d4e8:	bl	45d5e0 <feof@plt+0x59d40>
  45d4ec:	cbz	w0, 45d54c <feof@plt+0x59cac>
  45d4f0:	ldr	x10, [sp, #104]
  45d4f4:	cmp	x10, #0x1
  45d4f8:	b.lt	45d55c <feof@plt+0x59cbc>  // b.tstop
  45d4fc:	ldr	x8, [sp, #32]
  45d500:	adrp	x11, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45d504:	mov	w9, #0xffffffff            	// #-1
  45d508:	add	x11, x11, #0x7b4
  45d50c:	add	x10, x8, x10
  45d510:	ldrb	w12, [x8], #1
  45d514:	and	w13, w9, #0xff
  45d518:	eor	w12, w13, w12
  45d51c:	ldr	w12, [x11, w12, uxtw #2]
  45d520:	cmp	x8, x10
  45d524:	eor	w9, w12, w9, lsr #8
  45d528:	b.cc	45d510 <feof@plt+0x59c70>  // b.lo, b.ul, b.last
  45d52c:	mvn	w21, w9
  45d530:	b	45d560 <feof@plt+0x59cc0>
  45d534:	bl	4035c0 <__errno_location@plt>
  45d538:	ldr	w2, [x0]
  45d53c:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45d540:	add	x1, x1, #0xdd1
  45d544:	mov	x0, x19
  45d548:	blr	x20
  45d54c:	mov	w21, wzr
  45d550:	cmp	w21, w23
  45d554:	b.eq	45d590 <feof@plt+0x59cf0>  // b.none
  45d558:	b	45d57c <feof@plt+0x59cdc>
  45d55c:	mov	w21, wzr
  45d560:	add	x1, sp, #0x20
  45d564:	mov	x0, x22
  45d568:	mov	x2, x20
  45d56c:	mov	x3, x19
  45d570:	bl	45d6a0 <feof@plt+0x59e00>
  45d574:	cmp	w21, w23
  45d578:	b.eq	45d590 <feof@plt+0x59cf0>  // b.none
  45d57c:	mov	w0, w26
  45d580:	mov	x1, x20
  45d584:	mov	x2, x19
  45d588:	bl	45a364 <feof@plt+0x56ac4>
  45d58c:	mov	w26, #0xffffffff            	// #-1
  45d590:	mov	w0, w26
  45d594:	ldp	x20, x19, [sp, #272]
  45d598:	ldp	x22, x21, [sp, #256]
  45d59c:	ldp	x24, x23, [sp, #240]
  45d5a0:	ldp	x26, x25, [sp, #224]
  45d5a4:	ldp	x28, x27, [sp, #208]
  45d5a8:	ldp	x29, x30, [sp, #192]
  45d5ac:	add	sp, sp, #0x120
  45d5b0:	ret
  45d5b4:	mov	x23, x26
  45d5b8:	b	45d258 <feof@plt+0x599b8>
  45d5bc:	mov	w26, #0xffffffff            	// #-1
  45d5c0:	cbnz	x23, 45d490 <feof@plt+0x59bf0>
  45d5c4:	b	45d4ac <feof@plt+0x59c0c>
  45d5c8:	ldr	x8, [x0, #8]
  45d5cc:	ldr	x9, [x1, #8]
  45d5d0:	cmp	x8, x9
  45d5d4:	cset	w8, hi  // hi = pmore
  45d5d8:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  45d5dc:	ret
  45d5e0:	stp	x29, x30, [sp, #-80]!
  45d5e4:	str	x25, [sp, #16]
  45d5e8:	stp	x24, x23, [sp, #32]
  45d5ec:	stp	x22, x21, [sp, #48]
  45d5f0:	stp	x20, x19, [sp, #64]
  45d5f4:	mov	x29, sp
  45d5f8:	mov	x21, x6
  45d5fc:	mov	x20, x5
  45d600:	mov	x19, x4
  45d604:	mov	x22, x3
  45d608:	mov	x23, x2
  45d60c:	mov	w24, w1
  45d610:	bl	403790 <getpagesize@plt>
  45d614:	sxtw	x8, w0
  45d618:	udiv	x9, x23, x8
  45d61c:	add	x10, x22, x8
  45d620:	msub	w25, w9, w0, w23
  45d624:	add	x9, x10, x25
  45d628:	sub	x9, x9, #0x1
  45d62c:	neg	x8, x8
  45d630:	and	x22, x9, x8
  45d634:	sub	x5, x23, x25
  45d638:	mov	w2, #0x1                   	// #1
  45d63c:	mov	w3, #0x2                   	// #2
  45d640:	mov	x0, xzr
  45d644:	mov	x1, x22
  45d648:	mov	w4, w24
  45d64c:	bl	403430 <mmap@plt>
  45d650:	cmn	x0, #0x1
  45d654:	b.eq	45d66c <feof@plt+0x59dcc>  // b.none
  45d658:	add	x8, x0, x25
  45d65c:	stp	x0, x22, [x21, #8]
  45d660:	mov	w0, #0x1                   	// #1
  45d664:	str	x8, [x21]
  45d668:	b	45d688 <feof@plt+0x59de8>
  45d66c:	bl	4035c0 <__errno_location@plt>
  45d670:	ldr	w2, [x0]
  45d674:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45d678:	add	x1, x1, #0x232
  45d67c:	mov	x0, x20
  45d680:	blr	x19
  45d684:	mov	w0, wzr
  45d688:	ldp	x20, x19, [sp, #64]
  45d68c:	ldp	x22, x21, [sp, #48]
  45d690:	ldp	x24, x23, [sp, #32]
  45d694:	ldr	x25, [sp, #16]
  45d698:	ldp	x29, x30, [sp], #80
  45d69c:	ret
  45d6a0:	stp	x29, x30, [sp, #-32]!
  45d6a4:	str	x19, [sp, #16]
  45d6a8:	mov	x29, sp
  45d6ac:	ldp	x0, x1, [x1, #8]
  45d6b0:	mov	x19, x3
  45d6b4:	str	x2, [x29, #24]
  45d6b8:	bl	4034b0 <munmap@plt>
  45d6bc:	tbnz	w0, #31, 45d6cc <feof@plt+0x59e2c>
  45d6c0:	ldr	x19, [sp, #16]
  45d6c4:	ldp	x29, x30, [sp], #32
  45d6c8:	ret
  45d6cc:	bl	4035c0 <__errno_location@plt>
  45d6d0:	ldr	w2, [x0]
  45d6d4:	mov	x0, x19
  45d6d8:	ldr	x3, [x29, #24]
  45d6dc:	ldr	x19, [sp, #16]
  45d6e0:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45d6e4:	add	x1, x1, #0xdf9
  45d6e8:	ldp	x29, x30, [sp], #32
  45d6ec:	br	x3
  45d6f0:	stp	x29, x30, [sp, #-96]!
  45d6f4:	stp	x28, x27, [sp, #16]
  45d6f8:	stp	x26, x25, [sp, #32]
  45d6fc:	stp	x24, x23, [sp, #48]
  45d700:	stp	x22, x21, [sp, #64]
  45d704:	stp	x20, x19, [sp, #80]
  45d708:	mov	x29, sp
  45d70c:	sub	sp, sp, #0x2e0
  45d710:	ldr	x8, [x29, #136]
  45d714:	ldp	x21, x20, [x29, #144]
  45d718:	ldr	w9, [x29, #128]
  45d71c:	mov	x22, x5
  45d720:	str	x8, [sp, #208]
  45d724:	ldr	x8, [x29, #120]
  45d728:	mov	x23, x4
  45d72c:	mov	x19, x0
  45d730:	str	x1, [sp, #232]
  45d734:	str	x8, [sp, #248]
  45d738:	ldr	x8, [x29, #112]
  45d73c:	stp	xzr, xzr, [sp, #328]
  45d740:	stp	xzr, xzr, [sp, #344]
  45d744:	stp	xzr, xzr, [sp, #288]
  45d748:	str	x8, [sp, #240]
  45d74c:	ldr	x8, [x29, #104]
  45d750:	stp	xzr, xzr, [sp, #304]
  45d754:	stp	x2, x3, [sp, #472]
  45d758:	str	wzr, [sp, #512]
  45d75c:	str	x8, [sp, #224]
  45d760:	ldr	x8, [x29, #96]
  45d764:	str	x2, [sp, #464]
  45d768:	str	w9, [sp, #256]
  45d76c:	str	w9, [sp, #488]
  45d770:	str	x8, [sp, #216]
  45d774:	adrp	x8, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45d778:	add	x8, x8, #0xcf4
  45d77c:	stp	xzr, x8, [sp, #448]
  45d780:	stp	x21, x20, [sp, #496]
  45d784:	stp	xzr, xzr, [sp, #432]
  45d788:	cbz	x3, 45e840 <feof@plt+0x5afa0>
  45d78c:	mov	x26, x7
  45d790:	mov	x28, x6
  45d794:	mov	w8, wzr
  45d798:	mov	x11, x2
  45d79c:	mov	x12, x3
  45d7a0:	str	xzr, [sp, #272]
  45d7a4:	str	xzr, [sp, #184]
  45d7a8:	cbnz	w8, 45e74c <feof@plt+0x5aeac>
  45d7ac:	cmp	x12, #0x3
  45d7b0:	stp	x2, x3, [sp, #160]
  45d7b4:	str	x11, [sp, #176]
  45d7b8:	b.hi	45d80c <feof@plt+0x59f6c>  // b.pmore
  45d7bc:	ldr	w8, [sp, #464]
  45d7c0:	ldr	x4, [sp, #456]
  45d7c4:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45d7c8:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45d7cc:	sub	w5, w11, w8
  45d7d0:	sub	x0, x29, #0xd8
  45d7d4:	mov	w1, #0xc8                  	// #200
  45d7d8:	add	x2, x2, #0xf77
  45d7dc:	add	x3, x3, #0xf67
  45d7e0:	mov	x24, x12
  45d7e4:	bl	403530 <snprintf@plt>
  45d7e8:	ldp	x8, x0, [sp, #496]
  45d7ec:	sub	x1, x29, #0xd8
  45d7f0:	mov	w2, wzr
  45d7f4:	blr	x8
  45d7f8:	mov	x12, x24
  45d7fc:	mov	w8, wzr
  45d800:	mov	w9, #0x1                   	// #1
  45d804:	str	w9, [sp, #512]
  45d808:	b	45d86c <feof@plt+0x59fcc>
  45d80c:	ldr	w8, [sp, #488]
  45d810:	add	x9, x11, #0x4
  45d814:	sub	x12, x12, #0x4
  45d818:	stp	x9, x12, [sp, #472]
  45d81c:	cbz	w8, 45d840 <feof@plt+0x59fa0>
  45d820:	ldrb	w8, [x11]
  45d824:	ldrb	w9, [x11, #1]
  45d828:	ldrb	w10, [x11, #2]
  45d82c:	lsl	w8, w8, #24
  45d830:	bfi	w8, w9, #16, #8
  45d834:	bfi	w8, w10, #8, #8
  45d838:	add	x9, x11, #0x3
  45d83c:	b	45d85c <feof@plt+0x59fbc>
  45d840:	ldrb	w8, [x11, #3]
  45d844:	ldrb	w9, [x11, #2]
  45d848:	ldrb	w10, [x11, #1]
  45d84c:	lsl	w8, w8, #24
  45d850:	bfi	w8, w9, #16, #8
  45d854:	bfi	w8, w10, #8, #8
  45d858:	mov	x9, x11
  45d85c:	ldrb	w9, [x9]
  45d860:	orr	w8, w8, w9
  45d864:	cmn	w8, #0x1
  45d868:	b.eq	45dd08 <feof@plt+0x5a468>  // b.none
  45d86c:	str	wzr, [sp, #260]
  45d870:	mov	w0, w8
  45d874:	add	x8, sp, #0x1c8
  45d878:	ldp	q1, q0, [x8]
  45d87c:	ldp	q2, q3, [x8, #32]
  45d880:	subs	x12, x12, x0
  45d884:	str	q1, [sp, #368]
  45d888:	stp	q0, q2, [sp, #384]
  45d88c:	str	q3, [sp, #416]
  45d890:	str	x0, [sp, #392]
  45d894:	b.cc	45e9b0 <feof@plt+0x5b110>  // b.lo, b.ul, b.last
  45d898:	ldr	x9, [sp, #472]
  45d89c:	ldr	x8, [sp, #384]
  45d8a0:	cmp	x0, #0x1
  45d8a4:	add	x13, x9, x0
  45d8a8:	stp	x13, x12, [sp, #472]
  45d8ac:	b.ls	45ea04 <feof@plt+0x5b164>  // b.plast
  45d8b0:	ldr	w10, [sp, #400]
  45d8b4:	add	x9, x8, #0x2
  45d8b8:	sub	x11, x0, #0x2
  45d8bc:	stp	x9, x11, [sp, #384]
  45d8c0:	cmp	w10, #0x0
  45d8c4:	cinc	x10, x8, eq  // eq = none
  45d8c8:	cinc	x8, x8, ne  // ne = any
  45d8cc:	ldrb	w10, [x10]
  45d8d0:	ldrb	w11, [x8]
  45d8d4:	bfi	w11, w10, #8, #8
  45d8d8:	sub	w8, w11, #0x2
  45d8dc:	and	w8, w8, #0xffff
  45d8e0:	cmp	w8, #0x3
  45d8e4:	b.cs	45ea54 <feof@plt+0x5b1b4>  // b.hs, b.nlast
  45d8e8:	str	x0, [sp, #144]
  45d8ec:	add	x4, sp, #0x1b0
  45d8f0:	mov	w1, #0x8                   	// #8
  45d8f4:	mov	x0, x19
  45d8f8:	mov	x2, x21
  45d8fc:	mov	x3, x20
  45d900:	str	w11, [sp, #140]
  45d904:	stp	x13, x12, [sp, #120]
  45d908:	bl	459e18 <feof@plt+0x56578>
  45d90c:	cbz	x0, 45e74c <feof@plt+0x5aeac>
  45d910:	mov	x25, x0
  45d914:	mov	w1, #0x88                  	// #136
  45d918:	mov	x0, x19
  45d91c:	mov	x2, x21
  45d920:	mov	x3, x20
  45d924:	bl	459b44 <feof@plt+0x562a4>
  45d928:	cbz	x0, 45e74c <feof@plt+0x5aeac>
  45d92c:	ldr	x8, [sp, #272]
  45d930:	str	x0, [x25]
  45d934:	str	x0, [sp, #152]
  45d938:	str	xzr, [x0, #88]!
  45d93c:	add	x8, x8, #0x1
  45d940:	str	x8, [sp, #272]
  45d944:	ldr	w8, [sp, #260]
  45d948:	str	x0, [sp, #200]
  45d94c:	str	xzr, [x0, #8]
  45d950:	cbz	w8, 45dcec <feof@plt+0x5a44c>
  45d954:	add	x0, sp, #0x170
  45d958:	bl	45f1d4 <feof@plt+0x5b934>
  45d95c:	ldr	x8, [sp, #200]
  45d960:	cmp	x0, x26
  45d964:	stp	xzr, xzr, [x8]
  45d968:	b.cs	45ea94 <feof@plt+0x5b1f4>  // b.hs, b.nlast
  45d96c:	stp	x23, x22, [sp, #88]
  45d970:	add	x25, x28, x0
  45d974:	sub	x22, x26, x0
  45d978:	str	wzr, [sp, #280]
  45d97c:	str	xzr, [sp, #264]
  45d980:	stp	x26, x25, [sp, #104]
  45d984:	str	x22, [sp, #192]
  45d988:	mov	w9, #0x2                   	// #2
  45d98c:	mov	x23, xzr
  45d990:	mov	w27, wzr
  45d994:	mov	w8, wzr
  45d998:	sub	x9, x9, x22
  45d99c:	b	45d9bc <feof@plt+0x5a11c>
  45d9a0:	and	x9, x24, #0x7f
  45d9a4:	lsl	x9, x9, x27
  45d9a8:	orr	x23, x9, x23
  45d9ac:	sxtb	w10, w24
  45d9b0:	add	w27, w27, #0x7
  45d9b4:	add	x9, x26, #0x1
  45d9b8:	tbz	w10, #31, 45da18 <feof@plt+0x5a178>
  45d9bc:	cbz	x22, 45e70c <feof@plt+0x5ae6c>
  45d9c0:	ldrb	w24, [x25], #1
  45d9c4:	mov	x26, x9
  45d9c8:	cmp	w27, #0x3f
  45d9cc:	sub	x22, x22, #0x1
  45d9d0:	b.ls	45d9a0 <feof@plt+0x5a100>  // b.plast
  45d9d4:	cbnz	w8, 45d9ac <feof@plt+0x5a10c>
  45d9d8:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45d9dc:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45d9e0:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45d9e4:	sub	w5, w25, w28
  45d9e8:	sub	x0, x29, #0xd8
  45d9ec:	mov	w1, #0xc8                  	// #200
  45d9f0:	add	x2, x2, #0xf77
  45d9f4:	add	x3, x3, #0x30
  45d9f8:	add	x4, x4, #0xd0c
  45d9fc:	bl	403530 <snprintf@plt>
  45da00:	sub	x1, x29, #0xd8
  45da04:	mov	x0, x20
  45da08:	mov	w2, wzr
  45da0c:	blr	x21
  45da10:	mov	w8, #0x1                   	// #1
  45da14:	b	45d9ac <feof@plt+0x5a10c>
  45da18:	cbz	x23, 45dd94 <feof@plt+0x5a4f4>
  45da1c:	ldr	w8, [sp, #280]
  45da20:	cbnz	w8, 45e74c <feof@plt+0x5aeac>
  45da24:	ldr	x9, [sp, #264]
  45da28:	adrp	x27, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45da2c:	mov	w22, wzr
  45da30:	mov	x23, x25
  45da34:	add	x9, x9, #0x1
  45da38:	add	x27, x27, #0xf77
  45da3c:	str	x9, [sp, #264]
  45da40:	b	45da50 <feof@plt+0x5a1b0>
  45da44:	add	w22, w22, #0x7
  45da48:	add	x26, x26, #0x1
  45da4c:	tbz	w24, #31, 45daf0 <feof@plt+0x5a250>
  45da50:	cmp	x26, #0x1
  45da54:	mov	x25, x23
  45da58:	b.eq	45daac <feof@plt+0x5a20c>  // b.none
  45da5c:	mov	x23, x25
  45da60:	ldrsb	w24, [x23], #1
  45da64:	cmp	w22, #0x40
  45da68:	b.cc	45da44 <feof@plt+0x5a1a4>  // b.lo, b.ul, b.last
  45da6c:	cbnz	w8, 45da44 <feof@plt+0x5a1a4>
  45da70:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45da74:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45da78:	sub	w5, w23, w28
  45da7c:	sub	x0, x29, #0xd8
  45da80:	mov	w1, #0xc8                  	// #200
  45da84:	mov	x2, x27
  45da88:	add	x3, x3, #0x30
  45da8c:	add	x4, x4, #0xd0c
  45da90:	bl	403530 <snprintf@plt>
  45da94:	sub	x1, x29, #0xd8
  45da98:	mov	x0, x20
  45da9c:	mov	w2, wzr
  45daa0:	blr	x21
  45daa4:	mov	w8, #0x1                   	// #1
  45daa8:	b	45da44 <feof@plt+0x5a1a4>
  45daac:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45dab0:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45dab4:	sub	w5, w25, w28
  45dab8:	sub	x0, x29, #0xd8
  45dabc:	mov	w1, #0xc8                  	// #200
  45dac0:	mov	x2, x27
  45dac4:	add	x3, x3, #0xf67
  45dac8:	add	x4, x4, #0xd0c
  45dacc:	bl	403530 <snprintf@plt>
  45dad0:	sub	x1, x29, #0xd8
  45dad4:	mov	x0, x20
  45dad8:	mov	w2, wzr
  45dadc:	blr	x21
  45dae0:	mov	w8, #0x1                   	// #1
  45dae4:	mov	x22, xzr
  45dae8:	str	w8, [sp, #280]
  45daec:	b	45db54 <feof@plt+0x5a2b4>
  45daf0:	cmp	x26, #0x1
  45daf4:	b.ne	45db40 <feof@plt+0x5a2a0>  // b.any
  45daf8:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45dafc:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45db00:	sub	w5, w23, w28
  45db04:	sub	x0, x29, #0xd8
  45db08:	mov	w1, #0xc8                  	// #200
  45db0c:	mov	x2, x27
  45db10:	add	x3, x3, #0xf67
  45db14:	add	x4, x4, #0xd0c
  45db18:	bl	403530 <snprintf@plt>
  45db1c:	sub	x1, x29, #0xd8
  45db20:	mov	x0, x20
  45db24:	mov	w2, wzr
  45db28:	blr	x21
  45db2c:	mov	w8, #0x1                   	// #1
  45db30:	mov	x22, xzr
  45db34:	str	w8, [sp, #280]
  45db38:	mov	x25, x23
  45db3c:	b	45db54 <feof@plt+0x5a2b4>
  45db40:	add	x25, x25, #0x2
  45db44:	neg	x22, x26
  45db48:	str	wzr, [sp, #280]
  45db4c:	b	45db54 <feof@plt+0x5a2b4>
  45db50:	cbz	x26, 45d988 <feof@plt+0x5a0e8>
  45db54:	mov	x26, xzr
  45db58:	mov	w23, wzr
  45db5c:	mov	w8, wzr
  45db60:	b	45db7c <feof@plt+0x5a2dc>
  45db64:	and	x9, x24, #0x7f
  45db68:	lsl	x9, x9, x23
  45db6c:	orr	x26, x9, x26
  45db70:	sxtb	w9, w24
  45db74:	add	w23, w23, #0x7
  45db78:	tbz	w9, #31, 45dc28 <feof@plt+0x5a388>
  45db7c:	cbz	x22, 45dbd0 <feof@plt+0x5a330>
  45db80:	ldrb	w24, [x25], #1
  45db84:	cmp	w23, #0x3f
  45db88:	sub	x22, x22, #0x1
  45db8c:	b.ls	45db64 <feof@plt+0x5a2c4>  // b.plast
  45db90:	cbnz	w8, 45db70 <feof@plt+0x5a2d0>
  45db94:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45db98:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45db9c:	sub	w5, w25, w28
  45dba0:	sub	x0, x29, #0xd8
  45dba4:	mov	w1, #0xc8                  	// #200
  45dba8:	mov	x2, x27
  45dbac:	add	x3, x3, #0x30
  45dbb0:	add	x4, x4, #0xd0c
  45dbb4:	bl	403530 <snprintf@plt>
  45dbb8:	sub	x1, x29, #0xd8
  45dbbc:	mov	x0, x20
  45dbc0:	mov	w2, wzr
  45dbc4:	blr	x21
  45dbc8:	mov	w8, #0x1                   	// #1
  45dbcc:	b	45db70 <feof@plt+0x5a2d0>
  45dbd0:	ldr	w8, [sp, #280]
  45dbd4:	cbz	w8, 45dbe4 <feof@plt+0x5a344>
  45dbd8:	mov	x22, xzr
  45dbdc:	mov	x26, xzr
  45dbe0:	b	45dc28 <feof@plt+0x5a388>
  45dbe4:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45dbe8:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45dbec:	sub	w5, w25, w28
  45dbf0:	sub	x0, x29, #0xd8
  45dbf4:	mov	w1, #0xc8                  	// #200
  45dbf8:	mov	x2, x27
  45dbfc:	add	x3, x3, #0xf67
  45dc00:	add	x4, x4, #0xd0c
  45dc04:	bl	403530 <snprintf@plt>
  45dc08:	sub	x1, x29, #0xd8
  45dc0c:	mov	x0, x20
  45dc10:	mov	w2, wzr
  45dc14:	blr	x21
  45dc18:	mov	w8, #0x1                   	// #1
  45dc1c:	mov	x22, xzr
  45dc20:	mov	x26, xzr
  45dc24:	str	w8, [sp, #280]
  45dc28:	mov	w23, wzr
  45dc2c:	mov	w8, wzr
  45dc30:	b	45dc3c <feof@plt+0x5a39c>
  45dc34:	add	w23, w23, #0x7
  45dc38:	tbz	w24, #31, 45db50 <feof@plt+0x5a2b0>
  45dc3c:	cbz	x22, 45dc90 <feof@plt+0x5a3f0>
  45dc40:	ldrsb	w24, [x25], #1
  45dc44:	cmp	w23, #0x40
  45dc48:	sub	x22, x22, #0x1
  45dc4c:	b.cc	45dc34 <feof@plt+0x5a394>  // b.lo, b.ul, b.last
  45dc50:	cbnz	w8, 45dc34 <feof@plt+0x5a394>
  45dc54:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45dc58:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45dc5c:	sub	w5, w25, w28
  45dc60:	sub	x0, x29, #0xd8
  45dc64:	mov	w1, #0xc8                  	// #200
  45dc68:	mov	x2, x27
  45dc6c:	add	x3, x3, #0x30
  45dc70:	add	x4, x4, #0xd0c
  45dc74:	bl	403530 <snprintf@plt>
  45dc78:	sub	x1, x29, #0xd8
  45dc7c:	mov	x0, x20
  45dc80:	mov	w2, wzr
  45dc84:	blr	x21
  45dc88:	mov	w8, #0x1                   	// #1
  45dc8c:	b	45dc34 <feof@plt+0x5a394>
  45dc90:	ldr	w8, [sp, #280]
  45dc94:	cbz	w8, 45dca4 <feof@plt+0x5a404>
  45dc98:	mov	x22, xzr
  45dc9c:	cbnz	x26, 45db54 <feof@plt+0x5a2b4>
  45dca0:	b	45d988 <feof@plt+0x5a0e8>
  45dca4:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45dca8:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45dcac:	sub	w5, w25, w28
  45dcb0:	sub	x0, x29, #0xd8
  45dcb4:	mov	w1, #0xc8                  	// #200
  45dcb8:	mov	x2, x27
  45dcbc:	add	x3, x3, #0xf67
  45dcc0:	add	x4, x4, #0xd0c
  45dcc4:	bl	403530 <snprintf@plt>
  45dcc8:	sub	x1, x29, #0xd8
  45dccc:	mov	x0, x20
  45dcd0:	mov	w2, wzr
  45dcd4:	blr	x21
  45dcd8:	mov	x22, xzr
  45dcdc:	mov	w8, #0x1                   	// #1
  45dce0:	str	w8, [sp, #280]
  45dce4:	cbnz	x26, 45db54 <feof@plt+0x5a2b4>
  45dce8:	b	45d988 <feof@plt+0x5a0e8>
  45dcec:	ldp	x8, x9, [sp, #384]
  45dcf0:	cmp	x9, #0x3
  45dcf4:	b.hi	45dd20 <feof@plt+0x5a480>  // b.pmore
  45dcf8:	ldr	w9, [sp, #424]
  45dcfc:	cbz	w9, 45dd44 <feof@plt+0x5a4a4>
  45dd00:	mov	x0, xzr
  45dd04:	b	45d95c <feof@plt+0x5a0bc>
  45dd08:	add	x0, sp, #0x1c8
  45dd0c:	bl	45f1d4 <feof@plt+0x5b934>
  45dd10:	ldr	x12, [sp, #480]
  45dd14:	mov	w8, #0x1                   	// #1
  45dd18:	str	w8, [sp, #260]
  45dd1c:	b	45d874 <feof@plt+0x59fd4>
  45dd20:	ldr	w10, [sp, #400]
  45dd24:	add	x11, x8, #0x4
  45dd28:	sub	x9, x9, #0x4
  45dd2c:	stp	x11, x9, [sp, #384]
  45dd30:	cbz	w10, 45dd8c <feof@plt+0x5a4ec>
  45dd34:	ldr	w8, [x8]
  45dd38:	lsl	x8, x8, #32
  45dd3c:	rev	x0, x8
  45dd40:	b	45d95c <feof@plt+0x5a0bc>
  45dd44:	ldr	w9, [sp, #376]
  45dd48:	ldr	x4, [sp, #368]
  45dd4c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45dd50:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45dd54:	sub	w5, w8, w9
  45dd58:	sub	x0, x29, #0xd8
  45dd5c:	mov	w1, #0xc8                  	// #200
  45dd60:	add	x2, x2, #0xf77
  45dd64:	add	x3, x3, #0xf67
  45dd68:	bl	403530 <snprintf@plt>
  45dd6c:	ldp	x8, x0, [sp, #408]
  45dd70:	sub	x1, x29, #0xd8
  45dd74:	mov	w2, wzr
  45dd78:	blr	x8
  45dd7c:	mov	w8, #0x1                   	// #1
  45dd80:	mov	x0, xzr
  45dd84:	str	w8, [sp, #424]
  45dd88:	b	45d95c <feof@plt+0x5a0bc>
  45dd8c:	ldr	w0, [x8]
  45dd90:	b	45d95c <feof@plt+0x5a0bc>
  45dd94:	ldr	x26, [sp, #104]
  45dd98:	ldr	x27, [sp, #192]
  45dd9c:	ldr	w8, [sp, #280]
  45dda0:	cbnz	w8, 45e74c <feof@plt+0x5aeac>
  45dda4:	ldr	x23, [sp, #264]
  45dda8:	cbz	x23, 45e5d0 <feof@plt+0x5ad30>
  45ddac:	lsl	x24, x23, #5
  45ddb0:	mov	x0, x19
  45ddb4:	mov	x1, x24
  45ddb8:	mov	x2, x21
  45ddbc:	mov	x3, x20
  45ddc0:	bl	459b44 <feof@plt+0x562a4>
  45ddc4:	ldr	x8, [sp, #152]
  45ddc8:	str	x0, [x8, #96]
  45ddcc:	cbz	x0, 45e74c <feof@plt+0x5aeac>
  45ddd0:	ldr	x8, [sp, #200]
  45ddd4:	mov	w1, wzr
  45ddd8:	mov	x2, x24
  45dddc:	str	x23, [x8]
  45dde0:	bl	4031f0 <memset@plt>
  45dde4:	ldr	x26, [sp, #112]
  45dde8:	str	xzr, [sp, #56]
  45ddec:	mov	w9, #0x2                   	// #2
  45ddf0:	mov	w23, wzr
  45ddf4:	mov	w8, wzr
  45ddf8:	mov	x25, x27
  45ddfc:	sub	x9, x9, x27
  45de00:	str	xzr, [sp, #264]
  45de04:	b	45de2c <feof@plt+0x5a58c>
  45de08:	ldr	x10, [sp, #264]
  45de0c:	and	x9, x24, #0x7f
  45de10:	lsl	x9, x9, x23
  45de14:	orr	x10, x9, x10
  45de18:	str	x10, [sp, #264]
  45de1c:	sxtb	w10, w24
  45de20:	add	w23, w23, #0x7
  45de24:	add	x9, x22, #0x1
  45de28:	tbz	w10, #31, 45de88 <feof@plt+0x5a5e8>
  45de2c:	cbz	x25, 45e57c <feof@plt+0x5acdc>
  45de30:	ldrb	w24, [x26], #1
  45de34:	mov	x22, x9
  45de38:	cmp	w23, #0x3f
  45de3c:	sub	x25, x25, #0x1
  45de40:	b.ls	45de08 <feof@plt+0x5a568>  // b.plast
  45de44:	cbnz	w8, 45de1c <feof@plt+0x5a57c>
  45de48:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45de4c:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45de50:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45de54:	sub	w5, w26, w28
  45de58:	sub	x0, x29, #0xd8
  45de5c:	mov	w1, #0xc8                  	// #200
  45de60:	add	x2, x2, #0xf77
  45de64:	add	x3, x3, #0x30
  45de68:	add	x4, x4, #0xd0c
  45de6c:	bl	403530 <snprintf@plt>
  45de70:	sub	x1, x29, #0xd8
  45de74:	mov	x0, x20
  45de78:	mov	w2, wzr
  45de7c:	blr	x21
  45de80:	mov	w8, #0x1                   	// #1
  45de84:	b	45de1c <feof@plt+0x5a57c>
  45de88:	ldr	x8, [sp, #264]
  45de8c:	cbz	x8, 45e5b4 <feof@plt+0x5ad14>
  45de90:	mov	x24, x26
  45de94:	adrp	x26, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45de98:	mov	w23, wzr
  45de9c:	mov	w8, wzr
  45dea0:	add	x26, x26, #0xf77
  45dea4:	str	xzr, [sp, #64]
  45dea8:	b	45ded0 <feof@plt+0x5a630>
  45deac:	ldr	x10, [sp, #64]
  45deb0:	and	x9, x25, #0x7f
  45deb4:	lsl	x9, x9, x23
  45deb8:	orr	x10, x9, x10
  45debc:	str	x10, [sp, #64]
  45dec0:	sxtb	w9, w25
  45dec4:	add	w23, w23, #0x7
  45dec8:	add	x22, x22, #0x1
  45decc:	tbz	w9, #31, 45df64 <feof@plt+0x5a6c4>
  45ded0:	cmp	x22, #0x1
  45ded4:	b.eq	45df28 <feof@plt+0x5a688>  // b.none
  45ded8:	mov	x27, x24
  45dedc:	ldrb	w25, [x24], #1
  45dee0:	cmp	w23, #0x3f
  45dee4:	b.ls	45deac <feof@plt+0x5a60c>  // b.plast
  45dee8:	cbnz	w8, 45dec0 <feof@plt+0x5a620>
  45deec:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45def0:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45def4:	sub	w5, w24, w28
  45def8:	sub	x0, x29, #0xd8
  45defc:	mov	w1, #0xc8                  	// #200
  45df00:	mov	x2, x26
  45df04:	add	x3, x3, #0x30
  45df08:	add	x4, x4, #0xd0c
  45df0c:	bl	403530 <snprintf@plt>
  45df10:	sub	x1, x29, #0xd8
  45df14:	mov	x0, x20
  45df18:	mov	w2, wzr
  45df1c:	blr	x21
  45df20:	mov	w8, #0x1                   	// #1
  45df24:	b	45dec0 <feof@plt+0x5a620>
  45df28:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45df2c:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45df30:	sub	w5, w24, w28
  45df34:	sub	x0, x29, #0xd8
  45df38:	mov	w1, #0xc8                  	// #200
  45df3c:	mov	x2, x26
  45df40:	add	x3, x3, #0xf67
  45df44:	add	x4, x4, #0xd0c
  45df48:	bl	403530 <snprintf@plt>
  45df4c:	sub	x1, x29, #0xd8
  45df50:	mov	x0, x20
  45df54:	mov	w2, wzr
  45df58:	blr	x21
  45df5c:	str	xzr, [sp, #64]
  45df60:	b	45dfa0 <feof@plt+0x5a700>
  45df64:	cmp	x22, #0x1
  45df68:	b.ne	45dfb0 <feof@plt+0x5a710>  // b.any
  45df6c:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45df70:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45df74:	sub	w5, w24, w28
  45df78:	sub	x0, x29, #0xd8
  45df7c:	mov	w1, #0xc8                  	// #200
  45df80:	mov	x2, x26
  45df84:	add	x3, x3, #0xf67
  45df88:	add	x4, x4, #0xd0c
  45df8c:	bl	403530 <snprintf@plt>
  45df90:	sub	x1, x29, #0xd8
  45df94:	mov	x0, x20
  45df98:	mov	w2, wzr
  45df9c:	blr	x21
  45dfa0:	mov	x26, xzr
  45dfa4:	str	wzr, [sp, #52]
  45dfa8:	mov	w9, #0x1                   	// #1
  45dfac:	b	45dfc4 <feof@plt+0x5a724>
  45dfb0:	ldrb	w8, [x27, #1]
  45dfb4:	mov	w9, wzr
  45dfb8:	add	x24, x27, #0x2
  45dfbc:	neg	x26, x22
  45dfc0:	str	w8, [sp, #52]
  45dfc4:	mov	x22, xzr
  45dfc8:	str	w9, [sp, #84]
  45dfcc:	str	w9, [sp, #280]
  45dfd0:	str	x26, [sp, #192]
  45dfd4:	str	x24, [sp, #112]
  45dfd8:	mov	x23, xzr
  45dfdc:	mov	w27, wzr
  45dfe0:	mov	w8, wzr
  45dfe4:	b	45e000 <feof@plt+0x5a760>
  45dfe8:	and	x9, x25, #0x7f
  45dfec:	lsl	x9, x9, x27
  45dff0:	orr	x23, x9, x23
  45dff4:	sxtb	w9, w25
  45dff8:	add	w27, w27, #0x7
  45dffc:	tbz	w9, #31, 45e058 <feof@plt+0x5a7b8>
  45e000:	cbz	x26, 45e11c <feof@plt+0x5a87c>
  45e004:	ldrb	w25, [x24], #1
  45e008:	cmp	w27, #0x3f
  45e00c:	sub	x26, x26, #0x1
  45e010:	b.ls	45dfe8 <feof@plt+0x5a748>  // b.plast
  45e014:	cbnz	w8, 45dff4 <feof@plt+0x5a754>
  45e018:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e01c:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45e020:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e024:	sub	w5, w24, w28
  45e028:	sub	x0, x29, #0xd8
  45e02c:	mov	w1, #0xc8                  	// #200
  45e030:	add	x2, x2, #0xf77
  45e034:	add	x3, x3, #0x30
  45e038:	add	x4, x4, #0xd0c
  45e03c:	bl	403530 <snprintf@plt>
  45e040:	sub	x1, x29, #0xd8
  45e044:	mov	x0, x20
  45e048:	mov	w2, wzr
  45e04c:	blr	x21
  45e050:	mov	w8, #0x1                   	// #1
  45e054:	b	45dff4 <feof@plt+0x5a754>
  45e058:	cbz	x23, 45e15c <feof@plt+0x5a8bc>
  45e05c:	adrp	x27, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e060:	mov	w23, wzr
  45e064:	mov	w8, wzr
  45e068:	add	x22, x22, #0x1
  45e06c:	add	x27, x27, #0xf77
  45e070:	b	45e07c <feof@plt+0x5a7dc>
  45e074:	add	w23, w23, #0x7
  45e078:	tbz	w25, #31, 45dfd8 <feof@plt+0x5a738>
  45e07c:	cbz	x26, 45e0d0 <feof@plt+0x5a830>
  45e080:	ldrsb	w25, [x24], #1
  45e084:	cmp	w23, #0x40
  45e088:	sub	x26, x26, #0x1
  45e08c:	b.cc	45e074 <feof@plt+0x5a7d4>  // b.lo, b.ul, b.last
  45e090:	cbnz	w8, 45e074 <feof@plt+0x5a7d4>
  45e094:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45e098:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e09c:	sub	w5, w24, w28
  45e0a0:	sub	x0, x29, #0xd8
  45e0a4:	mov	w1, #0xc8                  	// #200
  45e0a8:	mov	x2, x27
  45e0ac:	add	x3, x3, #0x30
  45e0b0:	add	x4, x4, #0xd0c
  45e0b4:	bl	403530 <snprintf@plt>
  45e0b8:	sub	x1, x29, #0xd8
  45e0bc:	mov	x0, x20
  45e0c0:	mov	w2, wzr
  45e0c4:	blr	x21
  45e0c8:	mov	w8, #0x1                   	// #1
  45e0cc:	b	45e074 <feof@plt+0x5a7d4>
  45e0d0:	ldr	w8, [sp, #280]
  45e0d4:	cbnz	w8, 45dfd8 <feof@plt+0x5a738>
  45e0d8:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e0dc:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e0e0:	sub	w5, w24, w28
  45e0e4:	sub	x0, x29, #0xd8
  45e0e8:	mov	w1, #0xc8                  	// #200
  45e0ec:	mov	x2, x27
  45e0f0:	add	x3, x3, #0xf67
  45e0f4:	add	x4, x4, #0xd0c
  45e0f8:	bl	403530 <snprintf@plt>
  45e0fc:	sub	x1, x29, #0xd8
  45e100:	mov	x0, x20
  45e104:	mov	w2, wzr
  45e108:	blr	x21
  45e10c:	mov	w8, #0x1                   	// #1
  45e110:	mov	x26, xzr
  45e114:	str	w8, [sp, #280]
  45e118:	b	45dfd8 <feof@plt+0x5a738>
  45e11c:	ldr	w8, [sp, #280]
  45e120:	cbnz	w8, 45e15c <feof@plt+0x5a8bc>
  45e124:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e128:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e12c:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e130:	sub	w5, w24, w28
  45e134:	sub	x0, x29, #0xd8
  45e138:	mov	w1, #0xc8                  	// #200
  45e13c:	add	x2, x2, #0xf77
  45e140:	add	x3, x3, #0xf67
  45e144:	add	x4, x4, #0xd0c
  45e148:	bl	403530 <snprintf@plt>
  45e14c:	sub	x1, x29, #0xd8
  45e150:	mov	x0, x20
  45e154:	mov	w2, wzr
  45e158:	blr	x21
  45e15c:	cbz	x22, 45e384 <feof@plt+0x5aae4>
  45e160:	lsl	x1, x22, #3
  45e164:	mov	x0, x19
  45e168:	mov	x2, x21
  45e16c:	mov	x3, x20
  45e170:	bl	459b44 <feof@plt+0x562a4>
  45e174:	ldr	x26, [sp, #112]
  45e178:	ldr	x27, [sp, #192]
  45e17c:	cbz	x0, 45eaa0 <feof@plt+0x5b200>
  45e180:	str	x0, [sp, #72]
  45e184:	str	xzr, [sp, #280]
  45e188:	b	45e1a8 <feof@plt+0x5a908>
  45e18c:	ldr	x23, [sp, #72]
  45e190:	ldr	x11, [sp, #280]
  45e194:	cbz	x24, 45e37c <feof@plt+0x5aadc>
  45e198:	add	x8, x23, x11, lsl #3
  45e19c:	add	x11, x11, #0x1
  45e1a0:	stp	w24, w25, [x8]
  45e1a4:	str	x11, [sp, #280]
  45e1a8:	mov	x24, xzr
  45e1ac:	mov	w23, wzr
  45e1b0:	mov	w8, wzr
  45e1b4:	b	45e1d0 <feof@plt+0x5a930>
  45e1b8:	and	x9, x25, #0x7f
  45e1bc:	lsl	x9, x9, x23
  45e1c0:	orr	x24, x9, x24
  45e1c4:	sxtb	w9, w25
  45e1c8:	add	w23, w23, #0x7
  45e1cc:	tbz	w9, #31, 45e284 <feof@plt+0x5a9e4>
  45e1d0:	cbz	x27, 45e228 <feof@plt+0x5a988>
  45e1d4:	ldrb	w25, [x26], #1
  45e1d8:	cmp	w23, #0x3f
  45e1dc:	sub	x27, x27, #0x1
  45e1e0:	b.ls	45e1b8 <feof@plt+0x5a918>  // b.plast
  45e1e4:	cbnz	w8, 45e1c4 <feof@plt+0x5a924>
  45e1e8:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e1ec:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45e1f0:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e1f4:	sub	w5, w26, w28
  45e1f8:	sub	x0, x29, #0xd8
  45e1fc:	mov	w1, #0xc8                  	// #200
  45e200:	add	x2, x2, #0xf77
  45e204:	add	x3, x3, #0x30
  45e208:	add	x4, x4, #0xd0c
  45e20c:	bl	403530 <snprintf@plt>
  45e210:	sub	x1, x29, #0xd8
  45e214:	mov	x0, x20
  45e218:	mov	w2, wzr
  45e21c:	blr	x21
  45e220:	mov	w8, #0x1                   	// #1
  45e224:	b	45e1c4 <feof@plt+0x5a924>
  45e228:	ldr	w8, [sp, #84]
  45e22c:	cbz	w8, 45e23c <feof@plt+0x5a99c>
  45e230:	mov	x27, xzr
  45e234:	mov	x24, xzr
  45e238:	b	45e284 <feof@plt+0x5a9e4>
  45e23c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e240:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e244:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e248:	sub	w5, w26, w28
  45e24c:	sub	x0, x29, #0xd8
  45e250:	mov	w1, #0xc8                  	// #200
  45e254:	add	x2, x2, #0xf77
  45e258:	add	x3, x3, #0xf67
  45e25c:	add	x4, x4, #0xd0c
  45e260:	bl	403530 <snprintf@plt>
  45e264:	sub	x1, x29, #0xd8
  45e268:	mov	x0, x20
  45e26c:	mov	w2, wzr
  45e270:	blr	x21
  45e274:	mov	w8, #0x1                   	// #1
  45e278:	mov	x27, xzr
  45e27c:	mov	x24, xzr
  45e280:	str	w8, [sp, #84]
  45e284:	mov	x25, xzr
  45e288:	mov	w23, wzr
  45e28c:	mov	w8, wzr
  45e290:	b	45e2b0 <feof@plt+0x5aa10>
  45e294:	and	x9, x26, #0x7f
  45e298:	lsl	x9, x9, x23
  45e29c:	orr	x25, x9, x25
  45e2a0:	sxtb	w9, w26
  45e2a4:	add	w23, w23, #0x7
  45e2a8:	mov	x26, x22
  45e2ac:	tbz	w9, #31, 45e18c <feof@plt+0x5a8ec>
  45e2b0:	cbz	x27, 45e30c <feof@plt+0x5aa6c>
  45e2b4:	mov	x22, x26
  45e2b8:	ldrb	w26, [x22], #1
  45e2bc:	cmp	w23, #0x3f
  45e2c0:	sub	x27, x27, #0x1
  45e2c4:	b.ls	45e294 <feof@plt+0x5a9f4>  // b.plast
  45e2c8:	cbnz	w8, 45e2a0 <feof@plt+0x5aa00>
  45e2cc:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e2d0:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45e2d4:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e2d8:	sub	w5, w22, w28
  45e2dc:	sub	x0, x29, #0xd8
  45e2e0:	mov	w1, #0xc8                  	// #200
  45e2e4:	add	x2, x2, #0xf77
  45e2e8:	add	x3, x3, #0x30
  45e2ec:	add	x4, x4, #0xd0c
  45e2f0:	bl	403530 <snprintf@plt>
  45e2f4:	sub	x1, x29, #0xd8
  45e2f8:	mov	x0, x20
  45e2fc:	mov	w2, wzr
  45e300:	blr	x21
  45e304:	mov	w8, #0x1                   	// #1
  45e308:	b	45e2a0 <feof@plt+0x5aa00>
  45e30c:	ldr	w8, [sp, #84]
  45e310:	ldr	x23, [sp, #72]
  45e314:	cbz	w8, 45e32c <feof@plt+0x5aa8c>
  45e318:	mov	x27, xzr
  45e31c:	mov	x25, xzr
  45e320:	ldr	x11, [sp, #280]
  45e324:	cbnz	x24, 45e198 <feof@plt+0x5a8f8>
  45e328:	b	45e37c <feof@plt+0x5aadc>
  45e32c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e330:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e334:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e338:	sub	w5, w26, w28
  45e33c:	sub	x0, x29, #0xd8
  45e340:	mov	w1, #0xc8                  	// #200
  45e344:	add	x2, x2, #0xf77
  45e348:	add	x3, x3, #0xf67
  45e34c:	add	x4, x4, #0xd0c
  45e350:	bl	403530 <snprintf@plt>
  45e354:	sub	x1, x29, #0xd8
  45e358:	mov	x0, x20
  45e35c:	mov	w2, wzr
  45e360:	blr	x21
  45e364:	mov	w8, #0x1                   	// #1
  45e368:	mov	x27, xzr
  45e36c:	mov	x25, xzr
  45e370:	str	w8, [sp, #84]
  45e374:	ldr	x11, [sp, #280]
  45e378:	cbnz	x24, 45e198 <feof@plt+0x5a8f8>
  45e37c:	ldr	x9, [sp, #152]
  45e380:	b	45e4ec <feof@plt+0x5ac4c>
  45e384:	ldr	x9, [sp, #152]
  45e388:	ldr	x26, [sp, #112]
  45e38c:	mov	w8, wzr
  45e390:	b	45e39c <feof@plt+0x5aafc>
  45e394:	add	w22, w22, #0x7
  45e398:	tbz	w23, #31, 45e458 <feof@plt+0x5abb8>
  45e39c:	ldr	x10, [sp, #192]
  45e3a0:	cbz	x10, 45e400 <feof@plt+0x5ab60>
  45e3a4:	ldrsb	w23, [x26], #1
  45e3a8:	cmp	w22, #0x40
  45e3ac:	sub	x10, x10, #0x1
  45e3b0:	str	x10, [sp, #192]
  45e3b4:	b.cc	45e394 <feof@plt+0x5aaf4>  // b.lo, b.ul, b.last
  45e3b8:	cbnz	w8, 45e394 <feof@plt+0x5aaf4>
  45e3bc:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e3c0:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45e3c4:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e3c8:	sub	w5, w26, w28
  45e3cc:	sub	x0, x29, #0xd8
  45e3d0:	mov	w1, #0xc8                  	// #200
  45e3d4:	add	x2, x2, #0xf77
  45e3d8:	add	x3, x3, #0x30
  45e3dc:	add	x4, x4, #0xd0c
  45e3e0:	bl	403530 <snprintf@plt>
  45e3e4:	sub	x1, x29, #0xd8
  45e3e8:	mov	x0, x20
  45e3ec:	mov	w2, wzr
  45e3f0:	blr	x21
  45e3f4:	ldr	x9, [sp, #152]
  45e3f8:	mov	w8, #0x1                   	// #1
  45e3fc:	b	45e394 <feof@plt+0x5aaf4>
  45e400:	ldr	w8, [sp, #84]
  45e404:	cbz	w8, 45e410 <feof@plt+0x5ab70>
  45e408:	str	xzr, [sp, #192]
  45e40c:	b	45e458 <feof@plt+0x5abb8>
  45e410:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e414:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e418:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e41c:	sub	w5, w26, w28
  45e420:	sub	x0, x29, #0xd8
  45e424:	mov	w1, #0xc8                  	// #200
  45e428:	add	x2, x2, #0xf77
  45e42c:	add	x3, x3, #0xf67
  45e430:	add	x4, x4, #0xd0c
  45e434:	bl	403530 <snprintf@plt>
  45e438:	sub	x1, x29, #0xd8
  45e43c:	mov	x0, x20
  45e440:	mov	w2, wzr
  45e444:	blr	x21
  45e448:	ldr	x9, [sp, #152]
  45e44c:	mov	w8, #0x1                   	// #1
  45e450:	str	xzr, [sp, #192]
  45e454:	str	w8, [sp, #84]
  45e458:	mov	w22, wzr
  45e45c:	mov	w8, wzr
  45e460:	b	45e46c <feof@plt+0x5abcc>
  45e464:	add	w22, w22, #0x7
  45e468:	tbz	w23, #31, 45e4e0 <feof@plt+0x5ac40>
  45e46c:	ldr	x10, [sp, #192]
  45e470:	cbz	x10, 45e4d0 <feof@plt+0x5ac30>
  45e474:	ldrsb	w23, [x26], #1
  45e478:	cmp	w22, #0x40
  45e47c:	sub	x10, x10, #0x1
  45e480:	str	x10, [sp, #192]
  45e484:	b.cc	45e464 <feof@plt+0x5abc4>  // b.lo, b.ul, b.last
  45e488:	cbnz	w8, 45e464 <feof@plt+0x5abc4>
  45e48c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e490:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45e494:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e498:	sub	w5, w26, w28
  45e49c:	sub	x0, x29, #0xd8
  45e4a0:	mov	w1, #0xc8                  	// #200
  45e4a4:	add	x2, x2, #0xf77
  45e4a8:	add	x3, x3, #0x30
  45e4ac:	add	x4, x4, #0xd0c
  45e4b0:	bl	403530 <snprintf@plt>
  45e4b4:	sub	x1, x29, #0xd8
  45e4b8:	mov	x0, x20
  45e4bc:	mov	w2, wzr
  45e4c0:	blr	x21
  45e4c4:	ldr	x9, [sp, #152]
  45e4c8:	mov	w8, #0x1                   	// #1
  45e4cc:	b	45e464 <feof@plt+0x5abc4>
  45e4d0:	ldr	w8, [sp, #84]
  45e4d4:	cbz	w8, 45e528 <feof@plt+0x5ac88>
  45e4d8:	mov	x27, xzr
  45e4dc:	b	45e4e4 <feof@plt+0x5ac44>
  45e4e0:	ldr	x27, [sp, #192]
  45e4e4:	mov	x11, xzr
  45e4e8:	mov	x23, xzr
  45e4ec:	ldr	x8, [x9, #96]
  45e4f0:	ldr	x9, [sp, #56]
  45e4f4:	ldr	x10, [sp, #264]
  45e4f8:	add	x8, x8, x9, lsl #5
  45e4fc:	str	x10, [x8]
  45e500:	ldr	x10, [sp, #64]
  45e504:	add	x9, x9, #0x1
  45e508:	str	w10, [x8, #8]
  45e50c:	ldr	w10, [sp, #52]
  45e510:	stp	x11, x23, [x8, #16]
  45e514:	str	x9, [sp, #56]
  45e518:	str	w10, [x8, #12]
  45e51c:	ldr	w8, [sp, #84]
  45e520:	cbz	w8, 45ddec <feof@plt+0x5a54c>
  45e524:	b	45eaa0 <feof@plt+0x5b200>
  45e528:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e52c:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e530:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e534:	sub	w5, w26, w28
  45e538:	sub	x0, x29, #0xd8
  45e53c:	mov	w1, #0xc8                  	// #200
  45e540:	add	x2, x2, #0xf77
  45e544:	add	x3, x3, #0xf67
  45e548:	add	x4, x4, #0xd0c
  45e54c:	bl	403530 <snprintf@plt>
  45e550:	sub	x1, x29, #0xd8
  45e554:	mov	x0, x20
  45e558:	mov	w2, wzr
  45e55c:	blr	x21
  45e560:	ldr	x9, [sp, #152]
  45e564:	mov	w8, #0x1                   	// #1
  45e568:	mov	x27, xzr
  45e56c:	mov	x11, xzr
  45e570:	mov	x23, xzr
  45e574:	str	w8, [sp, #84]
  45e578:	b	45e4ec <feof@plt+0x5ac4c>
  45e57c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e580:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e584:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e588:	sub	w5, w26, w28
  45e58c:	sub	x0, x29, #0xd8
  45e590:	mov	w1, #0xc8                  	// #200
  45e594:	add	x2, x2, #0xf77
  45e598:	add	x3, x3, #0xf67
  45e59c:	add	x4, x4, #0xd0c
  45e5a0:	bl	403530 <snprintf@plt>
  45e5a4:	sub	x1, x29, #0xd8
  45e5a8:	mov	x0, x20
  45e5ac:	mov	w2, wzr
  45e5b0:	blr	x21
  45e5b4:	ldr	x8, [sp, #152]
  45e5b8:	adrp	x3, 45f000 <feof@plt+0x5b760>
  45e5bc:	mov	w2, #0x20                  	// #32
  45e5c0:	add	x3, x3, #0x280
  45e5c4:	ldp	x1, x0, [x8, #88]
  45e5c8:	bl	463c0c <feof@plt+0x6036c>
  45e5cc:	ldr	x26, [sp, #104]
  45e5d0:	ldp	x8, x9, [sp, #384]
  45e5d4:	ldp	x23, x22, [sp, #88]
  45e5d8:	cbz	x9, 45e5f4 <feof@plt+0x5ad54>
  45e5dc:	add	x11, x8, #0x1
  45e5e0:	sub	x10, x9, #0x1
  45e5e4:	stp	x11, x10, [sp, #384]
  45e5e8:	ldrb	w9, [x8]
  45e5ec:	mov	x8, x11
  45e5f0:	b	45e650 <feof@plt+0x5adb0>
  45e5f4:	ldr	w9, [sp, #424]
  45e5f8:	cbz	w9, 45e608 <feof@plt+0x5ad68>
  45e5fc:	mov	x10, xzr
  45e600:	mov	w9, wzr
  45e604:	b	45e650 <feof@plt+0x5adb0>
  45e608:	ldr	w9, [sp, #376]
  45e60c:	ldr	x4, [sp, #368]
  45e610:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e614:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e618:	sub	w5, w8, w9
  45e61c:	sub	x0, x29, #0xd8
  45e620:	mov	w1, #0xc8                  	// #200
  45e624:	add	x2, x2, #0xf77
  45e628:	add	x3, x3, #0xf67
  45e62c:	bl	403530 <snprintf@plt>
  45e630:	ldp	x8, x0, [sp, #408]
  45e634:	sub	x1, x29, #0xd8
  45e638:	mov	w2, wzr
  45e63c:	blr	x8
  45e640:	ldp	x8, x10, [sp, #384]
  45e644:	mov	w11, #0x1                   	// #1
  45e648:	mov	w9, wzr
  45e64c:	str	w11, [sp, #424]
  45e650:	ldp	x11, x14, [sp, #144]
  45e654:	ldr	w13, [sp, #260]
  45e658:	ldr	x12, [sp, #184]
  45e65c:	ldp	x1, x3, [sp, #232]
  45e660:	stp	x8, x10, [x14]
  45e664:	ldr	x10, [sp, #176]
  45e668:	cmp	w13, #0x0
  45e66c:	str	w9, [x14, #48]
  45e670:	mov	w9, #0xc                   	// #12
  45e674:	sub	x8, x8, x10
  45e678:	ldr	w10, [sp, #140]
  45e67c:	add	x11, x11, x12
  45e680:	stp	x8, x12, [x14, #16]
  45e684:	ldr	x4, [sp, #248]
  45e688:	stp	w10, w13, [x14, #40]
  45e68c:	mov	w10, #0x4                   	// #4
  45e690:	csel	x9, x10, x9, eq  // eq = none
  45e694:	add	x8, x11, x9
  45e698:	str	x8, [sp, #184]
  45e69c:	str	x8, [x14, #32]
  45e6a0:	add	x8, sp, #0x16c
  45e6a4:	str	x8, [sp, #40]
  45e6a8:	add	x8, sp, #0x148
  45e6ac:	stp	x14, x8, [sp, #24]
  45e6b0:	ldp	x8, x5, [sp, #208]
  45e6b4:	ldr	x6, [sp, #224]
  45e6b8:	ldr	w7, [sp, #256]
  45e6bc:	movi	v0.2d, #0x0
  45e6c0:	add	x2, sp, #0x170
  45e6c4:	mov	x0, x19
  45e6c8:	stur	q0, [x14, #56]
  45e6cc:	stur	q0, [x14, #72]
  45e6d0:	stur	q0, [x14, #104]
  45e6d4:	stur	q0, [x14, #120]
  45e6d8:	stp	x21, x20, [sp, #8]
  45e6dc:	str	x8, [sp]
  45e6e0:	bl	45ec6c <feof@plt+0x5b3cc>
  45e6e4:	cbz	w0, 45e74c <feof@plt+0x5aeac>
  45e6e8:	ldr	w8, [sp, #424]
  45e6ec:	cbnz	w8, 45e74c <feof@plt+0x5aeac>
  45e6f0:	ldr	w8, [sp, #512]
  45e6f4:	ldp	x11, x12, [sp, #120]
  45e6f8:	ldp	x2, x3, [sp, #160]
  45e6fc:	cbnz	x12, 45d7a8 <feof@plt+0x59f08>
  45e700:	ldr	x28, [sp, #272]
  45e704:	cbnz	w8, 45e750 <feof@plt+0x5aeb0>
  45e708:	b	45e844 <feof@plt+0x5afa4>
  45e70c:	ldr	w8, [sp, #280]
  45e710:	cbnz	w8, 45e74c <feof@plt+0x5aeac>
  45e714:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e718:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e71c:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e720:	sub	w5, w25, w28
  45e724:	add	x2, x2, #0xf77
  45e728:	add	x3, x3, #0xf67
  45e72c:	add	x4, x4, #0xd0c
  45e730:	sub	x0, x29, #0xd8
  45e734:	mov	w1, #0xc8                  	// #200
  45e738:	bl	403530 <snprintf@plt>
  45e73c:	sub	x1, x29, #0xd8
  45e740:	mov	x0, x20
  45e744:	mov	w2, wzr
  45e748:	blr	x21
  45e74c:	ldr	x28, [sp, #272]
  45e750:	cbz	x28, 45e810 <feof@plt+0x5af70>
  45e754:	ldr	x22, [sp, #432]
  45e758:	mov	x23, xzr
  45e75c:	b	45e79c <feof@plt+0x5aefc>
  45e760:	mov	x2, xzr
  45e764:	mov	x0, x19
  45e768:	mov	x3, x21
  45e76c:	mov	x4, x20
  45e770:	bl	459d08 <feof@plt+0x56468>
  45e774:	stp	xzr, xzr, [x24]
  45e778:	ldr	x1, [x22, x23, lsl #3]
  45e77c:	mov	w2, #0x88                  	// #136
  45e780:	mov	x0, x19
  45e784:	mov	x3, x21
  45e788:	mov	x4, x20
  45e78c:	bl	459d08 <feof@plt+0x56468>
  45e790:	add	x23, x23, #0x1
  45e794:	cmp	x23, x28
  45e798:	b.eq	45e7f0 <feof@plt+0x5af50>  // b.none
  45e79c:	ldr	x25, [x22, x23, lsl #3]
  45e7a0:	mov	x24, x25
  45e7a4:	ldr	x8, [x24, #88]!
  45e7a8:	ldr	x1, [x25, #96]
  45e7ac:	cbz	x8, 45e760 <feof@plt+0x5aec0>
  45e7b0:	mov	x26, xzr
  45e7b4:	mov	x27, xzr
  45e7b8:	add	x8, x1, x26
  45e7bc:	ldp	x9, x1, [x8, #16]
  45e7c0:	mov	x0, x19
  45e7c4:	mov	x3, x21
  45e7c8:	mov	x4, x20
  45e7cc:	lsl	x2, x9, #3
  45e7d0:	bl	459d08 <feof@plt+0x56468>
  45e7d4:	ldp	x8, x1, [x25, #88]
  45e7d8:	add	x27, x27, #0x1
  45e7dc:	add	x26, x26, #0x20
  45e7e0:	cmp	x27, x8
  45e7e4:	b.cc	45e7b8 <feof@plt+0x5af18>  // b.lo, b.ul, b.last
  45e7e8:	lsl	x2, x8, #5
  45e7ec:	b	45e764 <feof@plt+0x5aec4>
  45e7f0:	ldp	x8, x9, [sp, #440]
  45e7f4:	add	x1, sp, #0x1b0
  45e7f8:	mov	x0, x19
  45e7fc:	mov	x2, x21
  45e800:	add	x8, x9, x8
  45e804:	mov	x3, x20
  45e808:	stp	xzr, x8, [sp, #440]
  45e80c:	bl	459f30 <feof@plt+0x56690>
  45e810:	ldr	x8, [sp, #352]
  45e814:	cbz	x8, 45e954 <feof@plt+0x5b0b4>
  45e818:	ldp	x8, x9, [sp, #336]
  45e81c:	add	x1, sp, #0x148
  45e820:	mov	x0, x19
  45e824:	mov	x2, x21
  45e828:	add	x8, x9, x8
  45e82c:	mov	x3, x20
  45e830:	stp	xzr, x8, [sp, #336]
  45e834:	bl	459f30 <feof@plt+0x56690>
  45e838:	str	xzr, [sp, #352]
  45e83c:	b	45e954 <feof@plt+0x5b0b4>
  45e840:	mov	x28, xzr
  45e844:	ldr	q0, [sp, #432]
  45e848:	ldr	x8, [sp, #448]
  45e84c:	mov	x25, x2
  45e850:	mov	x24, x3
  45e854:	add	x1, sp, #0x148
  45e858:	mov	x0, x19
  45e85c:	mov	x2, x21
  45e860:	mov	x3, x20
  45e864:	mov	x27, x23
  45e868:	mov	x26, x22
  45e86c:	str	q0, [sp, #288]
  45e870:	stp	x8, x28, [sp, #304]
  45e874:	bl	459f30 <feof@plt+0x56690>
  45e878:	cbz	w0, 45e954 <feof@plt+0x5b0b4>
  45e87c:	add	x1, sp, #0x120
  45e880:	mov	x0, x19
  45e884:	mov	x2, x21
  45e888:	mov	x3, x20
  45e88c:	bl	459f30 <feof@plt+0x56690>
  45e890:	cbz	w0, 45e954 <feof@plt+0x5b0b4>
  45e894:	ldr	x22, [sp, #328]
  45e898:	ldr	x23, [sp, #352]
  45e89c:	ldr	x8, [sp, #312]
  45e8a0:	ldr	x28, [sp, #288]
  45e8a4:	adrp	x3, 45e000 <feof@plt+0x5a760>
  45e8a8:	add	x3, x3, #0xbfc
  45e8ac:	mov	w2, #0x18                  	// #24
  45e8b0:	mov	x0, x22
  45e8b4:	mov	x1, x23
  45e8b8:	str	x8, [sp, #280]
  45e8bc:	bl	463c0c <feof@plt+0x6036c>
  45e8c0:	mov	w1, #0xa0                  	// #160
  45e8c4:	mov	x0, x19
  45e8c8:	mov	x2, x21
  45e8cc:	mov	x3, x20
  45e8d0:	bl	459b44 <feof@plt+0x562a4>
  45e8d4:	cbz	x0, 45e954 <feof@plt+0x5b0b4>
  45e8d8:	ldr	x10, [sp, #208]
  45e8dc:	ldp	x8, x9, [x29, #160]
  45e8e0:	movi	v0.2d, #0x0
  45e8e4:	stp	x23, x28, [x0, #32]
  45e8e8:	stp	xzr, x10, [x0]
  45e8ec:	ldr	x10, [sp, #232]
  45e8f0:	stp	x24, x27, [x0, #64]
  45e8f4:	stp	q0, q0, [x0, #128]
  45e8f8:	stp	x10, x22, [x0, #16]
  45e8fc:	ldr	x10, [sp, #280]
  45e900:	stp	x10, x25, [x0, #48]
  45e904:	ldr	x10, [sp, #216]
  45e908:	stp	x26, x10, [x0, #80]
  45e90c:	ldr	x10, [sp, #224]
  45e910:	str	x10, [x0, #96]
  45e914:	ldr	x10, [sp, #240]
  45e918:	str	x10, [x0, #104]
  45e91c:	ldr	x10, [sp, #248]
  45e920:	str	x10, [x0, #112]
  45e924:	ldr	w10, [sp, #256]
  45e928:	str	w10, [x0, #120]
  45e92c:	cbz	x9, 45e934 <feof@plt+0x5b094>
  45e930:	str	x0, [x9]
  45e934:	ldr	w10, [x19, #8]
  45e938:	add	x9, x19, #0x20
  45e93c:	cbnz	w10, 45e97c <feof@plt+0x5b0dc>
  45e940:	mov	x10, x9
  45e944:	ldr	x9, [x9]
  45e948:	cbnz	x9, 45e940 <feof@plt+0x5b0a0>
  45e94c:	str	x0, [x10]
  45e950:	b	45e99c <feof@plt+0x5b0fc>
  45e954:	mov	w0, wzr
  45e958:	add	sp, sp, #0x2e0
  45e95c:	ldp	x20, x19, [sp, #80]
  45e960:	ldp	x22, x21, [sp, #64]
  45e964:	ldp	x24, x23, [sp, #48]
  45e968:	ldp	x26, x25, [sp, #32]
  45e96c:	ldp	x28, x27, [sp, #16]
  45e970:	ldp	x29, x30, [sp], #96
  45e974:	ret
  45e978:	clrex
  45e97c:	mov	x11, x9
  45e980:	mov	x10, x11
  45e984:	ldar	x11, [x11]
  45e988:	cbnz	x11, 45e980 <feof@plt+0x5b0e0>
  45e98c:	ldaxr	x11, [x10]
  45e990:	cbnz	x11, 45e978 <feof@plt+0x5b0d8>
  45e994:	stlxr	w11, x0, [x10]
  45e998:	cbnz	w11, 45e98c <feof@plt+0x5b0ec>
  45e99c:	adrp	x9, 45e000 <feof@plt+0x5a760>
  45e9a0:	add	x9, x9, #0xb18
  45e9a4:	mov	w0, #0x1                   	// #1
  45e9a8:	str	x9, [x8]
  45e9ac:	b	45e958 <feof@plt+0x5b0b8>
  45e9b0:	ldr	w8, [sp, #512]
  45e9b4:	cbnz	w8, 45e74c <feof@plt+0x5aeac>
  45e9b8:	ldr	w8, [sp, #472]
  45e9bc:	ldr	w9, [sp, #464]
  45e9c0:	ldr	x4, [sp, #456]
  45e9c4:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e9c8:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45e9cc:	sub	w5, w8, w9
  45e9d0:	add	x2, x2, #0xf77
  45e9d4:	add	x3, x3, #0xf67
  45e9d8:	sub	x0, x29, #0xd8
  45e9dc:	mov	w1, #0xc8                  	// #200
  45e9e0:	bl	403530 <snprintf@plt>
  45e9e4:	ldp	x8, x0, [sp, #496]
  45e9e8:	sub	x1, x29, #0xd8
  45e9ec:	mov	w2, wzr
  45e9f0:	blr	x8
  45e9f4:	ldr	x28, [sp, #272]
  45e9f8:	mov	w8, #0x1                   	// #1
  45e9fc:	str	w8, [sp, #512]
  45ea00:	b	45e750 <feof@plt+0x5aeb0>
  45ea04:	ldr	w9, [sp, #424]
  45ea08:	cbnz	w9, 45ea58 <feof@plt+0x5b1b8>
  45ea0c:	ldr	w9, [sp, #376]
  45ea10:	ldr	x4, [sp, #368]
  45ea14:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ea18:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ea1c:	sub	w5, w8, w9
  45ea20:	add	x2, x2, #0xf77
  45ea24:	add	x3, x3, #0xf67
  45ea28:	sub	x0, x29, #0xd8
  45ea2c:	mov	w1, #0xc8                  	// #200
  45ea30:	bl	403530 <snprintf@plt>
  45ea34:	ldp	x8, x0, [sp, #408]
  45ea38:	sub	x1, x29, #0xd8
  45ea3c:	mov	w2, wzr
  45ea40:	blr	x8
  45ea44:	ldr	x8, [sp, #384]
  45ea48:	mov	w9, #0x1                   	// #1
  45ea4c:	str	w9, [sp, #424]
  45ea50:	b	45ea58 <feof@plt+0x5b1b8>
  45ea54:	mov	x8, x9
  45ea58:	ldr	w9, [sp, #376]
  45ea5c:	ldr	x4, [sp, #368]
  45ea60:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ea64:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ea68:	sub	w5, w8, w9
  45ea6c:	add	x2, x2, #0xf77
  45ea70:	add	x3, x3, #0xf4c
  45ea74:	sub	x0, x29, #0xd8
  45ea78:	mov	w1, #0xc8                  	// #200
  45ea7c:	bl	403530 <snprintf@plt>
  45ea80:	ldp	x8, x0, [sp, #408]
  45ea84:	sub	x1, x29, #0xd8
  45ea88:	mov	w2, wzr
  45ea8c:	blr	x8
  45ea90:	b	45e74c <feof@plt+0x5aeac>
  45ea94:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ea98:	add	x1, x1, #0xf86
  45ea9c:	b	45e740 <feof@plt+0x5aea0>
  45eaa0:	ldr	x9, [sp, #152]
  45eaa4:	ldp	x8, x1, [x9, #88]
  45eaa8:	cbz	x8, 45eaf4 <feof@plt+0x5b254>
  45eaac:	ldr	x28, [sp, #272]
  45eab0:	mov	x22, xzr
  45eab4:	mov	x23, xzr
  45eab8:	add	x8, x1, x22
  45eabc:	ldp	x9, x1, [x8, #16]
  45eac0:	mov	x0, x19
  45eac4:	mov	x3, x21
  45eac8:	mov	x4, x20
  45eacc:	lsl	x2, x9, #3
  45ead0:	bl	459d08 <feof@plt+0x56468>
  45ead4:	ldr	x9, [sp, #152]
  45ead8:	add	x23, x23, #0x1
  45eadc:	add	x22, x22, #0x20
  45eae0:	ldp	x8, x1, [x9, #88]
  45eae4:	cmp	x23, x8
  45eae8:	b.cc	45eab8 <feof@plt+0x5b218>  // b.lo, b.ul, b.last
  45eaec:	lsl	x2, x8, #5
  45eaf0:	b	45eafc <feof@plt+0x5b25c>
  45eaf4:	ldr	x28, [sp, #272]
  45eaf8:	mov	x2, xzr
  45eafc:	mov	x0, x19
  45eb00:	mov	x3, x21
  45eb04:	mov	x4, x20
  45eb08:	bl	459d08 <feof@plt+0x56468>
  45eb0c:	ldr	x8, [sp, #200]
  45eb10:	stp	xzr, xzr, [x8]
  45eb14:	b	45e750 <feof@plt+0x5aeb0>
  45eb18:	sub	sp, sp, #0x50
  45eb1c:	stp	x29, x30, [sp, #16]
  45eb20:	stp	x24, x23, [sp, #32]
  45eb24:	stp	x22, x21, [sp, #48]
  45eb28:	stp	x20, x19, [sp, #64]
  45eb2c:	add	x29, sp, #0x10
  45eb30:	ldr	w8, [x0, #8]
  45eb34:	mov	x20, x4
  45eb38:	mov	x22, x3
  45eb3c:	mov	x19, x2
  45eb40:	mov	x23, x0
  45eb44:	mov	x21, x1
  45eb48:	cbz	w8, 45eb90 <feof@plt+0x5b2f0>
  45eb4c:	add	x8, x23, #0x20
  45eb50:	ldar	x24, [x8]
  45eb54:	cbz	x24, 45ebcc <feof@plt+0x5b32c>
  45eb58:	sub	x6, x29, #0x4
  45eb5c:	mov	x0, x23
  45eb60:	mov	x1, x24
  45eb64:	mov	x2, x21
  45eb68:	mov	x3, x19
  45eb6c:	mov	x4, x22
  45eb70:	mov	x5, x20
  45eb74:	bl	460688 <feof@plt+0x5cde8>
  45eb78:	ldur	w8, [x29, #-4]
  45eb7c:	orr	w8, w8, w0
  45eb80:	cbnz	w8, 45ebe4 <feof@plt+0x5b344>
  45eb84:	ldar	x24, [x24]
  45eb88:	cbnz	x24, 45eb58 <feof@plt+0x5b2b8>
  45eb8c:	b	45ebcc <feof@plt+0x5b32c>
  45eb90:	ldr	x24, [x23, #32]
  45eb94:	cbz	x24, 45ebcc <feof@plt+0x5b32c>
  45eb98:	sub	x6, x29, #0x4
  45eb9c:	mov	x0, x23
  45eba0:	mov	x1, x24
  45eba4:	mov	x2, x21
  45eba8:	mov	x3, x19
  45ebac:	mov	x4, x22
  45ebb0:	mov	x5, x20
  45ebb4:	bl	460688 <feof@plt+0x5cde8>
  45ebb8:	ldur	w8, [x29, #-4]
  45ebbc:	orr	w8, w8, w0
  45ebc0:	cbnz	w8, 45ebe4 <feof@plt+0x5b344>
  45ebc4:	ldr	x24, [x24]
  45ebc8:	cbnz	x24, 45eb98 <feof@plt+0x5b2f8>
  45ebcc:	mov	x0, x20
  45ebd0:	mov	x1, x21
  45ebd4:	mov	x2, xzr
  45ebd8:	mov	w3, wzr
  45ebdc:	mov	x4, xzr
  45ebe0:	blr	x19
  45ebe4:	ldp	x20, x19, [sp, #64]
  45ebe8:	ldp	x22, x21, [sp, #48]
  45ebec:	ldp	x24, x23, [sp, #32]
  45ebf0:	ldp	x29, x30, [sp, #16]
  45ebf4:	add	sp, sp, #0x50
  45ebf8:	ret
  45ebfc:	ldr	x8, [x0]
  45ec00:	ldr	x9, [x1]
  45ec04:	cmp	x8, x9
  45ec08:	b.cs	45ec14 <feof@plt+0x5b374>  // b.hs, b.nlast
  45ec0c:	mov	w0, #0xffffffff            	// #-1
  45ec10:	ret
  45ec14:	b.ls	45ec20 <feof@plt+0x5b380>  // b.plast
  45ec18:	mov	w0, #0x1                   	// #1
  45ec1c:	ret
  45ec20:	ldr	x8, [x0, #8]
  45ec24:	ldr	x9, [x1, #8]
  45ec28:	cmp	x8, x9
  45ec2c:	b.cs	45ec38 <feof@plt+0x5b398>  // b.hs, b.nlast
  45ec30:	mov	w0, #0x1                   	// #1
  45ec34:	ret
  45ec38:	b.ls	45ec44 <feof@plt+0x5b3a4>  // b.plast
  45ec3c:	mov	w0, #0xffffffff            	// #-1
  45ec40:	ret
  45ec44:	ldr	x8, [x0, #16]
  45ec48:	ldr	x9, [x1, #16]
  45ec4c:	ldr	x8, [x8, #56]
  45ec50:	ldr	x9, [x9, #56]
  45ec54:	cmp	x8, x9
  45ec58:	b.ge	45ec64 <feof@plt+0x5b3c4>  // b.tcont
  45ec5c:	mov	w0, #0xffffffff            	// #-1
  45ec60:	ret
  45ec64:	cset	w0, gt
  45ec68:	ret
  45ec6c:	sub	sp, sp, #0x1d0
  45ec70:	stp	x29, x30, [sp, #368]
  45ec74:	stp	x28, x27, [sp, #384]
  45ec78:	stp	x26, x25, [sp, #400]
  45ec7c:	stp	x24, x23, [sp, #416]
  45ec80:	stp	x22, x21, [sp, #432]
  45ec84:	stp	x20, x19, [sp, #448]
  45ec88:	add	x29, sp, #0x170
  45ec8c:	ldr	x8, [x2, #24]
  45ec90:	cbz	x8, 45f144 <feof@plt+0x5b8a4>
  45ec94:	ldr	x9, [x29, #136]
  45ec98:	ldp	x27, x20, [x29, #120]
  45ec9c:	ldr	x28, [x29, #96]
  45eca0:	adrp	x21, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45eca4:	str	x9, [sp, #128]
  45eca8:	ldr	x9, [x29, #112]
  45ecac:	mov	w26, w7
  45ecb0:	mov	x23, x4
  45ecb4:	mov	x24, x3
  45ecb8:	str	x9, [sp, #144]
  45ecbc:	ldr	x9, [x29, #104]
  45ecc0:	mov	x19, x2
  45ecc4:	add	x21, x21, #0x30
  45ecc8:	stp	x0, x1, [sp, #112]
  45eccc:	stp	x5, x6, [sp, #96]
  45ecd0:	str	x9, [sp, #152]
  45ecd4:	str	x20, [sp, #136]
  45ecd8:	ldr	x10, [x19, #16]
  45ecdc:	cbz	x8, 45f14c <feof@plt+0x5b8ac>
  45ece0:	mov	w9, wzr
  45ece4:	mov	w22, wzr
  45ece8:	mov	x20, xzr
  45ecec:	add	x11, x10, #0x1
  45ecf0:	sub	x8, x8, #0x1
  45ecf4:	stp	x11, x8, [x19, #16]
  45ecf8:	ldrb	w25, [x10]
  45ecfc:	cmp	w22, #0x3f
  45ed00:	b.hi	45ed1c <feof@plt+0x5b47c>  // b.pmore
  45ed04:	and	x8, x25, #0x7f
  45ed08:	lsl	x8, x8, x22
  45ed0c:	orr	x20, x8, x20
  45ed10:	sxtb	w8, w25
  45ed14:	tbnz	w8, #31, 45ed28 <feof@plt+0x5b488>
  45ed18:	b	45ed78 <feof@plt+0x5b4d8>
  45ed1c:	cbz	w9, 45ed38 <feof@plt+0x5b498>
  45ed20:	sxtb	w8, w25
  45ed24:	tbz	w8, #31, 45ed78 <feof@plt+0x5b4d8>
  45ed28:	ldp	x10, x8, [x19, #16]
  45ed2c:	add	w22, w22, #0x7
  45ed30:	cbnz	x8, 45ecec <feof@plt+0x5b44c>
  45ed34:	b	45f14c <feof@plt+0x5b8ac>
  45ed38:	ldr	w8, [x19, #8]
  45ed3c:	ldr	x4, [x19]
  45ed40:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ed44:	add	x0, sp, #0xa0
  45ed48:	sub	w5, w11, w8
  45ed4c:	mov	w1, #0xc8                  	// #200
  45ed50:	add	x2, x2, #0xf77
  45ed54:	mov	x3, x21
  45ed58:	bl	403530 <snprintf@plt>
  45ed5c:	ldp	x8, x0, [x19, #40]
  45ed60:	add	x1, sp, #0xa0
  45ed64:	mov	w2, wzr
  45ed68:	blr	x8
  45ed6c:	mov	w9, #0x1                   	// #1
  45ed70:	sxtb	w8, w25
  45ed74:	tbnz	w8, #31, 45ed28 <feof@plt+0x5b488>
  45ed78:	cbz	x20, 45f144 <feof@plt+0x5b8a4>
  45ed7c:	ldr	x8, [x27, #88]
  45ed80:	sub	x10, x20, #0x1
  45ed84:	cmp	x10, x8
  45ed88:	b.cs	45ef58 <feof@plt+0x5b6b8>  // b.hs, b.nlast
  45ed8c:	ldr	x9, [x27, #96]
  45ed90:	add	x25, x9, x10, lsl #5
  45ed94:	ldr	x10, [x25]
  45ed98:	cmp	x10, x20
  45ed9c:	b.ne	45ef60 <feof@plt+0x5b6c0>  // b.any
  45eda0:	cbz	x25, 45f1ac <feof@plt+0x5b90c>
  45eda4:	ldr	x9, [sp, #128]
  45eda8:	cbz	x9, 45edb4 <feof@plt+0x5b514>
  45edac:	ldr	w8, [x25, #8]
  45edb0:	str	w8, [x9]
  45edb4:	ldr	x8, [x25, #16]
  45edb8:	str	w26, [sp, #60]
  45edbc:	cbz	x8, 45ef9c <feof@plt+0x5b6fc>
  45edc0:	str	xzr, [sp, #88]
  45edc4:	stp	xzr, xzr, [sp, #64]
  45edc8:	ldr	x8, [x25, #24]
  45edcc:	mov	x26, xzr
  45edd0:	mov	x22, xzr
  45edd4:	mov	x20, xzr
  45edd8:	str	wzr, [sp, #56]
  45eddc:	str	wzr, [sp, #84]
  45ede0:	b	45ee14 <feof@plt+0x5b574>
  45ede4:	ldr	w9, [sp, #160]
  45ede8:	ldr	x10, [sp, #168]
  45edec:	cmp	w9, #0x1
  45edf0:	ldr	w9, [sp, #92]
  45edf4:	csel	x22, x10, x22, eq  // eq = none
  45edf8:	csinc	w9, w9, wzr, ne  // ne = any
  45edfc:	str	w9, [sp, #92]
  45ee00:	ldr	x9, [x25, #16]
  45ee04:	add	x20, x20, #0x1
  45ee08:	add	x26, x26, #0x8
  45ee0c:	cmp	x20, x9
  45ee10:	b.cs	45efb0 <feof@plt+0x5b710>  // b.hs, b.nlast
  45ee14:	add	x8, x8, x26
  45ee18:	ldp	w3, w2, [x27, #40]
  45ee1c:	ldr	w0, [x8, #4]
  45ee20:	ldr	w4, [x27, #48]
  45ee24:	add	x8, sp, #0xa0
  45ee28:	mov	x1, x19
  45ee2c:	mov	x5, x24
  45ee30:	mov	x6, x23
  45ee34:	mov	x7, x28
  45ee38:	str	x8, [sp]
  45ee3c:	bl	45f298 <feof@plt+0x5b9f8>
  45ee40:	cbz	w0, 45f1ac <feof@plt+0x5b90c>
  45ee44:	ldr	x8, [x25, #24]
  45ee48:	ldr	w10, [x8, x26]
  45ee4c:	sub	w9, w10, #0x3
  45ee50:	cmp	w9, #0x18
  45ee54:	b.hi	45ee94 <feof@plt+0x5b5f4>  // b.pmore
  45ee58:	adrp	x12, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ee5c:	add	x12, x12, #0xe00
  45ee60:	adr	x10, 45ede4 <feof@plt+0x5b544>
  45ee64:	ldrb	w11, [x12, x9]
  45ee68:	add	x10, x10, x11, lsl #2
  45ee6c:	br	x10
  45ee70:	ldr	w9, [x25, #8]
  45ee74:	cmp	w9, #0x11
  45ee78:	b.ne	45ee00 <feof@plt+0x5b560>  // b.any
  45ee7c:	ldr	w9, [sp, #160]
  45ee80:	cmp	w9, #0x4
  45ee84:	b.ne	45ee00 <feof@plt+0x5b560>  // b.any
  45ee88:	ldr	x9, [sp, #168]
  45ee8c:	str	x9, [x27, #64]
  45ee90:	b	45ee00 <feof@plt+0x5b560>
  45ee94:	cmp	w10, #0x55
  45ee98:	b.ne	45ee00 <feof@plt+0x5b560>  // b.any
  45ee9c:	ldr	w9, [sp, #160]
  45eea0:	cmp	w9, #0x8
  45eea4:	b.eq	45eeb0 <feof@plt+0x5b610>  // b.none
  45eea8:	cmp	w9, #0x2
  45eeac:	b.ne	45ee00 <feof@plt+0x5b560>  // b.any
  45eeb0:	ldr	x9, [sp, #168]
  45eeb4:	str	x9, [sp, #64]
  45eeb8:	mov	w9, #0x1                   	// #1
  45eebc:	str	w9, [sp, #88]
  45eec0:	b	45ee00 <feof@plt+0x5b560>
  45eec4:	ldr	w9, [x25, #8]
  45eec8:	cmp	w9, #0x11
  45eecc:	b.ne	45ee00 <feof@plt+0x5b560>  // b.any
  45eed0:	ldr	w9, [sp, #160]
  45eed4:	cmp	w9, #0x8
  45eed8:	b.eq	45eee4 <feof@plt+0x5b644>  // b.none
  45eedc:	cmp	w9, #0x2
  45eee0:	b.ne	45ee00 <feof@plt+0x5b560>  // b.any
  45eee4:	ldr	x9, [sp, #168]
  45eee8:	str	x9, [x27, #56]
  45eeec:	b	45ee00 <feof@plt+0x5b560>
  45eef0:	ldr	w9, [sp, #160]
  45eef4:	cmp	w9, #0x2
  45eef8:	b.eq	45ef3c <feof@plt+0x5b69c>  // b.none
  45eefc:	cmp	w9, #0x1
  45ef00:	b.ne	45ee00 <feof@plt+0x5b560>  // b.any
  45ef04:	ldr	x9, [sp, #168]
  45ef08:	str	x9, [sp, #72]
  45ef0c:	mov	w9, #0x1                   	// #1
  45ef10:	str	w9, [sp, #84]
  45ef14:	b	45ee00 <feof@plt+0x5b560>
  45ef18:	ldr	w9, [x25, #8]
  45ef1c:	cmp	w9, #0x11
  45ef20:	b.ne	45ee00 <feof@plt+0x5b560>  // b.any
  45ef24:	ldr	w9, [sp, #160]
  45ef28:	cmp	w9, #0x4
  45ef2c:	b.ne	45ee00 <feof@plt+0x5b560>  // b.any
  45ef30:	ldr	x9, [sp, #168]
  45ef34:	str	x9, [x27, #72]
  45ef38:	b	45ee00 <feof@plt+0x5b560>
  45ef3c:	ldr	x9, [sp, #168]
  45ef40:	str	x9, [sp, #72]
  45ef44:	mov	w9, #0x1                   	// #1
  45ef48:	str	w9, [sp, #84]
  45ef4c:	mov	w9, #0x1                   	// #1
  45ef50:	str	w9, [sp, #56]
  45ef54:	b	45ee00 <feof@plt+0x5b560>
  45ef58:	cbz	x8, 45f198 <feof@plt+0x5b8f8>
  45ef5c:	ldr	x9, [x27, #96]
  45ef60:	mov	x10, xzr
  45ef64:	b	45ef74 <feof@plt+0x5b6d4>
  45ef68:	cmp	x10, x11
  45ef6c:	mov	x8, x11
  45ef70:	b.cs	45f198 <feof@plt+0x5b8f8>  // b.hs, b.nlast
  45ef74:	add	x11, x8, x10
  45ef78:	lsr	x11, x11, #1
  45ef7c:	add	x25, x9, x11, lsl #5
  45ef80:	ldr	x12, [x25]
  45ef84:	cmp	x12, x20
  45ef88:	b.hi	45ef68 <feof@plt+0x5b6c8>  // b.pmore
  45ef8c:	b.cs	45eda0 <feof@plt+0x5b500>  // b.hs, b.nlast
  45ef90:	add	x10, x11, #0x1
  45ef94:	mov	x11, x8
  45ef98:	b	45ef68 <feof@plt+0x5b6c8>
  45ef9c:	stp	xzr, xzr, [sp, #64]
  45efa0:	str	wzr, [sp, #84]
  45efa4:	str	wzr, [sp, #56]
  45efa8:	str	xzr, [sp, #88]
  45efac:	mov	x22, xzr
  45efb0:	ldr	w8, [x25, #8]
  45efb4:	ldr	w26, [sp, #60]
  45efb8:	cmp	w8, #0x2e
  45efbc:	b.eq	45efc8 <feof@plt+0x5b728>  // b.none
  45efc0:	cmp	w8, #0x11
  45efc4:	b.ne	45f0e4 <feof@plt+0x5b844>  // b.any
  45efc8:	ldr	w8, [sp, #88]
  45efcc:	cbz	w8, 45f00c <feof@plt+0x5b76c>
  45efd0:	ldr	x8, [sp, #136]
  45efd4:	ldp	x0, x1, [sp, #112]
  45efd8:	ldr	x3, [sp, #64]
  45efdc:	ldp	x6, x7, [sp, #96]
  45efe0:	str	x8, [sp, #16]
  45efe4:	ldr	x8, [sp, #144]
  45efe8:	mov	x2, x27
  45efec:	mov	x4, x22
  45eff0:	mov	w5, w26
  45eff4:	str	x8, [sp, #8]
  45eff8:	ldr	x8, [sp, #152]
  45effc:	str	x8, [sp]
  45f000:	bl	4601e8 <feof@plt+0x5c948>
  45f004:	cbnz	w0, 45f0c0 <feof@plt+0x5b820>
  45f008:	b	45f1ac <feof@plt+0x5b90c>
  45f00c:	ldr	w8, [sp, #84]
  45f010:	cbz	w8, 45f0c0 <feof@plt+0x5b820>
  45f014:	ldr	w8, [sp, #92]
  45f018:	cbz	w8, 45f0c0 <feof@plt+0x5b820>
  45f01c:	ldr	w8, [sp, #56]
  45f020:	ldr	x10, [sp, #120]
  45f024:	ldr	x11, [sp, #72]
  45f028:	cmp	w8, #0x0
  45f02c:	ldr	x8, [sp, #136]
  45f030:	csel	x9, xzr, x22, eq  // eq = none
  45f034:	add	x22, x22, x10
  45f038:	add	x10, x11, x10
  45f03c:	ldr	x8, [x8, #24]
  45f040:	add	x13, x10, x9
  45f044:	cbz	x8, 45f088 <feof@plt+0x5b7e8>
  45f048:	ldr	x9, [sp, #136]
  45f04c:	sub	x11, x8, #0x1
  45f050:	mov	w8, #0x18                  	// #24
  45f054:	ldr	x10, [x9]
  45f058:	madd	x8, x11, x8, x10
  45f05c:	ldr	x9, [x8, #8]!
  45f060:	cmp	x22, x9
  45f064:	b.eq	45f074 <feof@plt+0x5b7d4>  // b.none
  45f068:	add	x12, x9, #0x1
  45f06c:	cmp	x22, x12
  45f070:	b.ne	45f088 <feof@plt+0x5b7e8>  // b.any
  45f074:	mov	w12, #0x18                  	// #24
  45f078:	madd	x10, x11, x12, x10
  45f07c:	ldr	x10, [x10, #16]
  45f080:	cmp	x10, x27
  45f084:	b.eq	45f134 <feof@plt+0x5b894>  // b.none
  45f088:	ldr	x20, [sp, #136]
  45f08c:	ldr	x0, [sp, #112]
  45f090:	ldp	x3, x2, [sp, #144]
  45f094:	mov	w1, #0x18                  	// #24
  45f098:	mov	x4, x20
  45f09c:	str	x13, [sp, #72]
  45f0a0:	bl	459e18 <feof@plt+0x56578>
  45f0a4:	cbz	x0, 45f1ac <feof@plt+0x5b90c>
  45f0a8:	ldr	x8, [sp, #72]
  45f0ac:	str	x27, [x0, #16]
  45f0b0:	stp	x22, x8, [x0]
  45f0b4:	ldr	x8, [x20, #24]
  45f0b8:	add	x8, x8, #0x1
  45f0bc:	str	x8, [x20, #24]
  45f0c0:	ldr	w8, [x25, #8]
  45f0c4:	cmp	w8, #0x11
  45f0c8:	b.ne	45f0e4 <feof@plt+0x5b844>  // b.any
  45f0cc:	ldr	w8, [sp, #88]
  45f0d0:	cbnz	w8, 45f144 <feof@plt+0x5b8a4>
  45f0d4:	ldr	w8, [sp, #84]
  45f0d8:	cbz	w8, 45f0e4 <feof@plt+0x5b844>
  45f0dc:	ldr	w8, [sp, #92]
  45f0e0:	cbnz	w8, 45f144 <feof@plt+0x5b8a4>
  45f0e4:	ldr	w8, [x25, #12]
  45f0e8:	ldr	x20, [sp, #136]
  45f0ec:	cbz	w8, 45f124 <feof@plt+0x5b884>
  45f0f0:	ldr	x8, [sp, #144]
  45f0f4:	ldp	x0, x1, [sp, #112]
  45f0f8:	ldp	x5, x6, [sp, #96]
  45f0fc:	mov	x2, x19
  45f100:	stp	x8, x27, [sp, #16]
  45f104:	ldr	x8, [sp, #152]
  45f108:	mov	x3, x24
  45f10c:	mov	x4, x23
  45f110:	mov	w7, w26
  45f114:	stp	x20, xzr, [sp, #32]
  45f118:	stp	x28, x8, [sp]
  45f11c:	bl	45ec6c <feof@plt+0x5b3cc>
  45f120:	cbz	w0, 45f1ac <feof@plt+0x5b90c>
  45f124:	ldr	x8, [x19, #24]
  45f128:	mov	w22, #0x1                   	// #1
  45f12c:	cbnz	x8, 45ecd8 <feof@plt+0x5b438>
  45f130:	b	45f1b0 <feof@plt+0x5b910>
  45f134:	cmp	x13, x9
  45f138:	b.ls	45f0c0 <feof@plt+0x5b820>  // b.plast
  45f13c:	str	x13, [x8]
  45f140:	b	45f0c0 <feof@plt+0x5b820>
  45f144:	mov	w22, #0x1                   	// #1
  45f148:	b	45f1b0 <feof@plt+0x5b910>
  45f14c:	ldr	w8, [x19, #56]
  45f150:	mov	w22, #0x1                   	// #1
  45f154:	cbnz	w8, 45f1b0 <feof@plt+0x5b910>
  45f158:	ldr	w8, [x19, #8]
  45f15c:	ldr	x4, [x19]
  45f160:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f164:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f168:	sub	w5, w10, w8
  45f16c:	add	x2, x2, #0xf77
  45f170:	add	x3, x3, #0xf67
  45f174:	add	x0, sp, #0xa0
  45f178:	mov	w1, #0xc8                  	// #200
  45f17c:	bl	403530 <snprintf@plt>
  45f180:	ldp	x8, x0, [x19, #40]
  45f184:	add	x1, sp, #0xa0
  45f188:	mov	w2, wzr
  45f18c:	blr	x8
  45f190:	str	w22, [x19, #56]
  45f194:	b	45f1b0 <feof@plt+0x5b910>
  45f198:	ldp	x0, x8, [sp, #144]
  45f19c:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f1a0:	add	x1, x1, #0xfa1
  45f1a4:	mov	w2, wzr
  45f1a8:	blr	x8
  45f1ac:	mov	w22, wzr
  45f1b0:	mov	w0, w22
  45f1b4:	ldp	x20, x19, [sp, #448]
  45f1b8:	ldp	x22, x21, [sp, #432]
  45f1bc:	ldp	x24, x23, [sp, #416]
  45f1c0:	ldp	x26, x25, [sp, #400]
  45f1c4:	ldp	x28, x27, [sp, #384]
  45f1c8:	ldp	x29, x30, [sp, #368]
  45f1cc:	add	sp, sp, #0x1d0
  45f1d0:	ret
  45f1d4:	sub	sp, sp, #0xf0
  45f1d8:	stp	x29, x30, [sp, #208]
  45f1dc:	str	x19, [sp, #224]
  45f1e0:	add	x29, sp, #0xd0
  45f1e4:	ldp	x8, x9, [x0, #16]
  45f1e8:	mov	x19, x0
  45f1ec:	cmp	x9, #0x7
  45f1f0:	b.hi	45f204 <feof@plt+0x5b964>  // b.pmore
  45f1f4:	ldr	w9, [x19, #56]
  45f1f8:	cbz	w9, 45f224 <feof@plt+0x5b984>
  45f1fc:	mov	x0, xzr
  45f200:	b	45f270 <feof@plt+0x5b9d0>
  45f204:	ldr	w10, [x19, #32]
  45f208:	add	x11, x8, #0x8
  45f20c:	sub	x9, x9, #0x8
  45f210:	stp	x11, x9, [x19, #16]
  45f214:	cbz	w10, 45f26c <feof@plt+0x5b9cc>
  45f218:	ldr	x8, [x8]
  45f21c:	rev	x0, x8
  45f220:	b	45f270 <feof@plt+0x5b9d0>
  45f224:	ldr	w9, [x19, #8]
  45f228:	ldr	x4, [x19]
  45f22c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f230:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f234:	sub	w5, w8, w9
  45f238:	add	x2, x2, #0xf77
  45f23c:	add	x3, x3, #0xf67
  45f240:	add	x0, sp, #0x8
  45f244:	mov	w1, #0xc8                  	// #200
  45f248:	bl	403530 <snprintf@plt>
  45f24c:	ldp	x8, x0, [x19, #40]
  45f250:	add	x1, sp, #0x8
  45f254:	mov	w2, wzr
  45f258:	blr	x8
  45f25c:	mov	w8, #0x1                   	// #1
  45f260:	mov	x0, xzr
  45f264:	str	w8, [x19, #56]
  45f268:	b	45f270 <feof@plt+0x5b9d0>
  45f26c:	ldr	x0, [x8]
  45f270:	ldr	x19, [sp, #224]
  45f274:	ldp	x29, x30, [sp, #208]
  45f278:	add	sp, sp, #0xf0
  45f27c:	ret
  45f280:	ldr	x8, [x0]
  45f284:	ldr	x9, [x1]
  45f288:	cmp	x8, x9
  45f28c:	cset	w8, hi  // hi = pmore
  45f290:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  45f294:	ret
  45f298:	sub	sp, sp, #0x140
  45f29c:	stp	x29, x30, [sp, #224]
  45f2a0:	stp	x28, x27, [sp, #240]
  45f2a4:	stp	x26, x25, [sp, #256]
  45f2a8:	stp	x24, x23, [sp, #272]
  45f2ac:	stp	x22, x21, [sp, #288]
  45f2b0:	stp	x20, x19, [sp, #304]
  45f2b4:	add	x29, sp, #0xe0
  45f2b8:	ldr	x26, [x29, #96]
  45f2bc:	sub	w8, w0, #0x1
  45f2c0:	mov	x20, x7
  45f2c4:	mov	w23, w2
  45f2c8:	mov	x19, x1
  45f2cc:	cmp	w8, #0x1f
  45f2d0:	stp	xzr, xzr, [x26]
  45f2d4:	b.hi	45f308 <feof@plt+0x5ba68>  // b.pmore
  45f2d8:	adrp	x9, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f2dc:	add	x9, x9, #0xe1a
  45f2e0:	adr	x10, 45f300 <feof@plt+0x5ba60>
  45f2e4:	ldrh	w11, [x9, x8, lsl #1]
  45f2e8:	add	x10, x10, x11, lsl #2
  45f2ec:	mov	x22, x6
  45f2f0:	mov	x21, x5
  45f2f4:	mov	w24, w4
  45f2f8:	mov	w25, w3
  45f2fc:	br	x10
  45f300:	mov	w8, #0x2                   	// #2
  45f304:	b	45f750 <feof@plt+0x5beb0>
  45f308:	mov	w8, #0xffffe0ff            	// #-7937
  45f30c:	add	w8, w0, w8
  45f310:	cmp	w8, #0x20
  45f314:	b.hi	45fb58 <feof@plt+0x5c2b8>  // b.pmore
  45f318:	adrp	x9, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f31c:	add	x9, x9, #0xe5a
  45f320:	adr	x10, 45f330 <feof@plt+0x5ba90>
  45f324:	ldrh	w11, [x9, x8, lsl #1]
  45f328:	add	x10, x10, x11, lsl #2
  45f32c:	br	x10
  45f330:	adrp	x20, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f334:	adrp	x21, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45f338:	mov	x22, xzr
  45f33c:	mov	w23, wzr
  45f340:	mov	w8, wzr
  45f344:	mov	w9, #0x8                   	// #8
  45f348:	add	x20, x20, #0xf77
  45f34c:	add	x21, x21, #0x30
  45f350:	str	w9, [x26]
  45f354:	b	45f370 <feof@plt+0x5bad0>
  45f358:	and	x9, x24, #0x7f
  45f35c:	lsl	x9, x9, x23
  45f360:	orr	x22, x9, x22
  45f364:	sxtb	w9, w24
  45f368:	add	w23, w23, #0x7
  45f36c:	tbz	w9, #31, 45fbc0 <feof@plt+0x5c320>
  45f370:	ldp	x10, x11, [x19, #16]
  45f374:	cbz	x11, 45fae8 <feof@plt+0x5c248>
  45f378:	add	x9, x10, #0x1
  45f37c:	sub	x11, x11, #0x1
  45f380:	stp	x9, x11, [x19, #16]
  45f384:	ldrb	w24, [x10]
  45f388:	cmp	w23, #0x3f
  45f38c:	b.ls	45f358 <feof@plt+0x5bab8>  // b.plast
  45f390:	cbnz	w8, 45f364 <feof@plt+0x5bac4>
  45f394:	ldr	w8, [x19, #8]
  45f398:	ldr	x4, [x19]
  45f39c:	add	x0, sp, #0x10
  45f3a0:	mov	w1, #0xc8                  	// #200
  45f3a4:	sub	w5, w9, w8
  45f3a8:	mov	x2, x20
  45f3ac:	mov	x3, x21
  45f3b0:	bl	403530 <snprintf@plt>
  45f3b4:	ldp	x8, x0, [x19, #40]
  45f3b8:	add	x1, sp, #0x10
  45f3bc:	mov	w2, wzr
  45f3c0:	blr	x8
  45f3c4:	mov	w8, #0x1                   	// #1
  45f3c8:	b	45f364 <feof@plt+0x5bac4>
  45f3cc:	sub	w8, w24, #0x1
  45f3d0:	mov	w9, #0x1                   	// #1
  45f3d4:	cmp	w8, #0x7
  45f3d8:	str	w9, [x26]
  45f3dc:	b.hi	45fe4c <feof@plt+0x5c5ac>  // b.pmore
  45f3e0:	adrp	x9, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f3e4:	add	x9, x9, #0xeac
  45f3e8:	adr	x10, 45f730 <feof@plt+0x5be90>
  45f3ec:	ldrh	w11, [x9, x8, lsl #1]
  45f3f0:	add	x10, x10, x11, lsl #2
  45f3f4:	br	x10
  45f3f8:	mov	w8, #0xa                   	// #10
  45f3fc:	str	w8, [x26]
  45f400:	ldp	x9, x8, [x19, #16]
  45f404:	cmp	x8, #0x1
  45f408:	b.hi	45fbf8 <feof@plt+0x5c358>  // b.pmore
  45f40c:	ldr	w10, [x19, #56]
  45f410:	cbnz	w10, 45f47c <feof@plt+0x5bbdc>
  45f414:	ldr	w8, [x19, #8]
  45f418:	ldr	x4, [x19]
  45f41c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f420:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f424:	sub	w5, w9, w8
  45f428:	add	x2, x2, #0xf77
  45f42c:	add	x3, x3, #0xf67
  45f430:	add	x0, sp, #0x10
  45f434:	mov	w1, #0xc8                  	// #200
  45f438:	bl	403530 <snprintf@plt>
  45f43c:	ldp	x8, x0, [x19, #40]
  45f440:	add	x1, sp, #0x10
  45f444:	mov	w2, wzr
  45f448:	blr	x8
  45f44c:	ldr	x8, [x19, #24]
  45f450:	mov	w10, #0x1                   	// #1
  45f454:	mov	x9, xzr
  45f458:	str	w10, [x19, #56]
  45f45c:	b	45ff64 <feof@plt+0x5c6c4>
  45f460:	mov	w8, #0xa                   	// #10
  45f464:	str	w8, [x26]
  45f468:	ldp	x9, x8, [x19, #16]
  45f46c:	cmp	x8, #0x3
  45f470:	b.hi	45fc1c <feof@plt+0x5c37c>  // b.pmore
  45f474:	ldr	w10, [x19, #56]
  45f478:	cbz	w10, 45f414 <feof@plt+0x5bb74>
  45f47c:	mov	x9, xzr
  45f480:	b	45ff64 <feof@plt+0x5c6c4>
  45f484:	mov	w8, #0x2                   	// #2
  45f488:	b	45f774 <feof@plt+0x5bed4>
  45f48c:	mov	w8, #0x2                   	// #2
  45f490:	b	45f7a8 <feof@plt+0x5bf08>
  45f494:	mov	w8, #0x2                   	// #2
  45f498:	str	w8, [x26]
  45f49c:	b	45fc74 <feof@plt+0x5c3d4>
  45f4a0:	mov	w8, #0x4                   	// #4
  45f4a4:	str	w8, [x26]
  45f4a8:	ldp	x20, x21, [x19, #16]
  45f4ac:	mov	x0, x20
  45f4b0:	mov	x1, x21
  45f4b4:	bl	4037e0 <strnlen@plt>
  45f4b8:	add	x9, x0, #0x1
  45f4bc:	subs	x8, x21, x9
  45f4c0:	b.cs	45fc40 <feof@plt+0x5c3a0>  // b.hs, b.nlast
  45f4c4:	ldr	w8, [x19, #56]
  45f4c8:	cbz	w8, 45ff04 <feof@plt+0x5c664>
  45f4cc:	mov	x20, xzr
  45f4d0:	b	45ff48 <feof@plt+0x5c6a8>
  45f4d4:	adrp	x20, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f4d8:	adrp	x21, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45f4dc:	mov	x22, xzr
  45f4e0:	mov	w23, wzr
  45f4e4:	mov	w8, wzr
  45f4e8:	mov	w9, #0xa                   	// #10
  45f4ec:	add	x20, x20, #0xf77
  45f4f0:	add	x21, x21, #0x30
  45f4f4:	str	w9, [x26]
  45f4f8:	b	45f514 <feof@plt+0x5bc74>
  45f4fc:	and	x9, x24, #0x7f
  45f500:	lsl	x9, x9, x23
  45f504:	orr	x22, x9, x22
  45f508:	sxtb	w9, w24
  45f50c:	add	w23, w23, #0x7
  45f510:	tbz	w9, #31, 45fb48 <feof@plt+0x5c2a8>
  45f514:	ldp	x10, x11, [x19, #16]
  45f518:	cbz	x11, 45f9f4 <feof@plt+0x5c154>
  45f51c:	add	x9, x10, #0x1
  45f520:	sub	x11, x11, #0x1
  45f524:	stp	x9, x11, [x19, #16]
  45f528:	ldrb	w24, [x10]
  45f52c:	cmp	w23, #0x3f
  45f530:	b.ls	45f4fc <feof@plt+0x5bc5c>  // b.plast
  45f534:	cbnz	w8, 45f508 <feof@plt+0x5bc68>
  45f538:	ldr	w8, [x19, #8]
  45f53c:	ldr	x4, [x19]
  45f540:	add	x0, sp, #0x10
  45f544:	mov	w1, #0xc8                  	// #200
  45f548:	sub	w5, w9, w8
  45f54c:	mov	x2, x20
  45f550:	mov	x3, x21
  45f554:	bl	403530 <snprintf@plt>
  45f558:	ldp	x8, x0, [x19, #40]
  45f55c:	add	x1, sp, #0x10
  45f560:	mov	w2, wzr
  45f564:	blr	x8
  45f568:	mov	w8, #0x1                   	// #1
  45f56c:	b	45f508 <feof@plt+0x5bc68>
  45f570:	mov	w8, #0xa                   	// #10
  45f574:	str	w8, [x26]
  45f578:	ldp	x8, x9, [x19, #16]
  45f57c:	cbz	x9, 45fd34 <feof@plt+0x5c494>
  45f580:	add	x10, x8, #0x1
  45f584:	sub	x9, x9, #0x1
  45f588:	stp	x10, x9, [x19, #16]
  45f58c:	ldrb	w8, [x8]
  45f590:	cmp	x9, x8
  45f594:	b.cc	45ff6c <feof@plt+0x5c6cc>  // b.lo, b.ul, b.last
  45f598:	b	4600b8 <feof@plt+0x5c818>
  45f59c:	adrp	x20, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f5a0:	adrp	x21, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45f5a4:	mov	x22, xzr
  45f5a8:	mov	w23, wzr
  45f5ac:	mov	w8, wzr
  45f5b0:	mov	w9, #0x3                   	// #3
  45f5b4:	add	x20, x20, #0xf77
  45f5b8:	add	x21, x21, #0x29
  45f5bc:	str	w9, [x26]
  45f5c0:	b	45f5dc <feof@plt+0x5bd3c>
  45f5c4:	and	x9, x24, #0x7f
  45f5c8:	lsl	x9, x9, x23
  45f5cc:	orr	x22, x9, x22
  45f5d0:	sxtb	w9, w24
  45f5d4:	add	w23, w23, #0x7
  45f5d8:	tbz	w9, #31, 45fcb4 <feof@plt+0x5c414>
  45f5dc:	ldp	x10, x11, [x19, #16]
  45f5e0:	cbz	x11, 45fbd0 <feof@plt+0x5c330>
  45f5e4:	add	x9, x10, #0x1
  45f5e8:	sub	x11, x11, #0x1
  45f5ec:	stp	x9, x11, [x19, #16]
  45f5f0:	ldrb	w24, [x10]
  45f5f4:	cmp	w23, #0x3f
  45f5f8:	b.ls	45f5c4 <feof@plt+0x5bd24>  // b.plast
  45f5fc:	cbnz	w8, 45f5d0 <feof@plt+0x5bd30>
  45f600:	ldr	w8, [x19, #8]
  45f604:	ldr	x4, [x19]
  45f608:	add	x0, sp, #0x10
  45f60c:	mov	w1, #0xc8                  	// #200
  45f610:	sub	w5, w9, w8
  45f614:	mov	x2, x20
  45f618:	mov	x3, x21
  45f61c:	bl	403530 <snprintf@plt>
  45f620:	ldp	x8, x0, [x19, #40]
  45f624:	add	x1, sp, #0x10
  45f628:	mov	w2, wzr
  45f62c:	blr	x8
  45f630:	mov	w8, #0x1                   	// #1
  45f634:	b	45f5d0 <feof@plt+0x5bd30>
  45f638:	cbz	w23, 45fd48 <feof@plt+0x5c4a8>
  45f63c:	mov	x0, x19
  45f640:	bl	45f1d4 <feof@plt+0x5b934>
  45f644:	cmp	x0, x22
  45f648:	b.cs	45fc4c <feof@plt+0x5c3ac>  // b.hs, b.nlast
  45f64c:	mov	w8, #0x4                   	// #4
  45f650:	add	x9, x21, x0
  45f654:	str	w8, [x26]
  45f658:	str	x9, [x26, #8]
  45f65c:	b	4600cc <feof@plt+0x5c82c>
  45f660:	adrp	x20, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f664:	adrp	x21, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45f668:	mov	x22, xzr
  45f66c:	mov	w23, wzr
  45f670:	mov	w8, wzr
  45f674:	mov	w9, #0x2                   	// #2
  45f678:	add	x20, x20, #0xf77
  45f67c:	add	x21, x21, #0x30
  45f680:	str	w9, [x26]
  45f684:	b	45f6a0 <feof@plt+0x5be00>
  45f688:	and	x9, x24, #0x7f
  45f68c:	lsl	x9, x9, x23
  45f690:	orr	x22, x9, x22
  45f694:	sxtb	w9, w24
  45f698:	add	w23, w23, #0x7
  45f69c:	tbz	w9, #31, 45fbc0 <feof@plt+0x5c320>
  45f6a0:	ldp	x10, x11, [x19, #16]
  45f6a4:	cbz	x11, 45fae8 <feof@plt+0x5c248>
  45f6a8:	add	x9, x10, #0x1
  45f6ac:	sub	x11, x11, #0x1
  45f6b0:	stp	x9, x11, [x19, #16]
  45f6b4:	ldrb	w24, [x10]
  45f6b8:	cmp	w23, #0x3f
  45f6bc:	b.ls	45f688 <feof@plt+0x5bde8>  // b.plast
  45f6c0:	cbnz	w8, 45f694 <feof@plt+0x5bdf4>
  45f6c4:	ldr	w8, [x19, #8]
  45f6c8:	ldr	x4, [x19]
  45f6cc:	add	x0, sp, #0x10
  45f6d0:	mov	w1, #0xc8                  	// #200
  45f6d4:	sub	w5, w9, w8
  45f6d8:	mov	x2, x20
  45f6dc:	mov	x3, x21
  45f6e0:	bl	403530 <snprintf@plt>
  45f6e4:	ldp	x8, x0, [x19, #40]
  45f6e8:	add	x1, sp, #0x10
  45f6ec:	mov	w2, wzr
  45f6f0:	blr	x8
  45f6f4:	mov	w8, #0x1                   	// #1
  45f6f8:	b	45f694 <feof@plt+0x5bdf4>
  45f6fc:	mov	w8, #0x6                   	// #6
  45f700:	cmp	w25, #0x2
  45f704:	str	w8, [x26]
  45f708:	b.ne	45fc70 <feof@plt+0x5c3d0>  // b.any
  45f70c:	sub	w8, w24, #0x1
  45f710:	cmp	w8, #0x7
  45f714:	b.hi	45fe4c <feof@plt+0x5c5ac>  // b.pmore
  45f718:	adrp	x9, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f71c:	add	x9, x9, #0xe9c
  45f720:	adr	x10, 45f730 <feof@plt+0x5be90>
  45f724:	ldrh	w11, [x9, x8, lsl #1]
  45f728:	add	x10, x10, x11, lsl #2
  45f72c:	br	x10
  45f730:	ldp	x8, x9, [x19, #16]
  45f734:	cbz	x9, 45fdfc <feof@plt+0x5c55c>
  45f738:	add	x10, x8, #0x1
  45f73c:	sub	x9, x9, #0x1
  45f740:	stp	x10, x9, [x19, #16]
  45f744:	ldrb	w0, [x8]
  45f748:	b	45fc7c <feof@plt+0x5c3dc>
  45f74c:	mov	w8, #0x5                   	// #5
  45f750:	str	w8, [x26]
  45f754:	ldp	x8, x9, [x19, #16]
  45f758:	cbz	x9, 45f7b8 <feof@plt+0x5bf18>
  45f75c:	add	x10, x8, #0x1
  45f760:	sub	x9, x9, #0x1
  45f764:	stp	x10, x9, [x19, #16]
  45f768:	ldrb	w8, [x8]
  45f76c:	b	45fd70 <feof@plt+0x5c4d0>
  45f770:	mov	w8, #0x5                   	// #5
  45f774:	str	w8, [x26]
  45f778:	ldp	x8, x9, [x19, #16]
  45f77c:	cmp	x9, #0x1
  45f780:	b.ls	45f7b8 <feof@plt+0x5bf18>  // b.plast
  45f784:	ldr	w10, [x19, #32]
  45f788:	add	x11, x8, #0x2
  45f78c:	sub	x9, x9, #0x2
  45f790:	stp	x11, x9, [x19, #16]
  45f794:	cbz	w10, 45fd64 <feof@plt+0x5c4c4>
  45f798:	ldrh	w8, [x8]
  45f79c:	lsl	x8, x8, #48
  45f7a0:	b	45fa44 <feof@plt+0x5c1a4>
  45f7a4:	mov	w8, #0x5                   	// #5
  45f7a8:	str	w8, [x26]
  45f7ac:	ldp	x8, x9, [x19, #16]
  45f7b0:	cmp	x9, #0x3
  45f7b4:	b.hi	45fa28 <feof@plt+0x5c188>  // b.pmore
  45f7b8:	ldr	w9, [x19, #56]
  45f7bc:	cbz	w9, 45f7c8 <feof@plt+0x5bf28>
  45f7c0:	mov	x8, xzr
  45f7c4:	b	45fd70 <feof@plt+0x5c4d0>
  45f7c8:	ldr	w9, [x19, #8]
  45f7cc:	ldr	x4, [x19]
  45f7d0:	sub	w5, w8, w9
  45f7d4:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f7d8:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f7dc:	add	x2, x2, #0xf77
  45f7e0:	add	x3, x3, #0xf67
  45f7e4:	add	x0, sp, #0x10
  45f7e8:	mov	w1, #0xc8                  	// #200
  45f7ec:	bl	403530 <snprintf@plt>
  45f7f0:	ldp	x8, x0, [x19, #40]
  45f7f4:	add	x1, sp, #0x10
  45f7f8:	mov	w2, wzr
  45f7fc:	blr	x8
  45f800:	mov	w9, #0x1                   	// #1
  45f804:	mov	x8, xzr
  45f808:	str	w9, [x19, #56]
  45f80c:	b	45fd70 <feof@plt+0x5c4d0>
  45f810:	mov	w8, #0x5                   	// #5
  45f814:	str	w8, [x26]
  45f818:	b	45fc74 <feof@plt+0x5c3d4>
  45f81c:	adrp	x20, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f820:	adrp	x21, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45f824:	mov	x22, xzr
  45f828:	mov	w23, wzr
  45f82c:	mov	w8, wzr
  45f830:	mov	w9, #0x5                   	// #5
  45f834:	add	x20, x20, #0xf77
  45f838:	add	x21, x21, #0x30
  45f83c:	str	w9, [x26]
  45f840:	b	45f85c <feof@plt+0x5bfbc>
  45f844:	and	x9, x24, #0x7f
  45f848:	lsl	x9, x9, x23
  45f84c:	orr	x22, x9, x22
  45f850:	sxtb	w9, w24
  45f854:	add	w23, w23, #0x7
  45f858:	tbz	w9, #31, 45fbc0 <feof@plt+0x5c320>
  45f85c:	ldp	x10, x11, [x19, #16]
  45f860:	cbz	x11, 45fae8 <feof@plt+0x5c248>
  45f864:	add	x9, x10, #0x1
  45f868:	sub	x11, x11, #0x1
  45f86c:	stp	x9, x11, [x19, #16]
  45f870:	ldrb	w24, [x10]
  45f874:	cmp	w23, #0x3f
  45f878:	b.ls	45f844 <feof@plt+0x5bfa4>  // b.plast
  45f87c:	cbnz	w8, 45f850 <feof@plt+0x5bfb0>
  45f880:	ldr	w8, [x19, #8]
  45f884:	ldr	x4, [x19]
  45f888:	add	x0, sp, #0x10
  45f88c:	mov	w1, #0xc8                  	// #200
  45f890:	sub	w5, w9, w8
  45f894:	mov	x2, x20
  45f898:	mov	x3, x21
  45f89c:	bl	403530 <snprintf@plt>
  45f8a0:	ldp	x8, x0, [x19, #40]
  45f8a4:	add	x1, sp, #0x10
  45f8a8:	mov	w2, wzr
  45f8ac:	blr	x8
  45f8b0:	mov	w8, #0x1                   	// #1
  45f8b4:	b	45f850 <feof@plt+0x5bfb0>
  45f8b8:	str	x26, [sp, #8]
  45f8bc:	mov	x26, xzr
  45f8c0:	mov	w28, wzr
  45f8c4:	mov	w8, wzr
  45f8c8:	b	45f8e4 <feof@plt+0x5c044>
  45f8cc:	and	x9, x27, #0x7f
  45f8d0:	lsl	x9, x9, x28
  45f8d4:	orr	x26, x9, x26
  45f8d8:	sxtb	w9, w27
  45f8dc:	add	w28, w28, #0x7
  45f8e0:	tbz	w9, #31, 45fed4 <feof@plt+0x5c634>
  45f8e4:	ldp	x10, x11, [x19, #16]
  45f8e8:	cbz	x11, 45fbe8 <feof@plt+0x5c348>
  45f8ec:	add	x9, x10, #0x1
  45f8f0:	sub	x11, x11, #0x1
  45f8f4:	stp	x9, x11, [x19, #16]
  45f8f8:	ldrb	w27, [x10]
  45f8fc:	cmp	w28, #0x3f
  45f900:	b.ls	45f8cc <feof@plt+0x5c02c>  // b.plast
  45f904:	cbnz	w8, 45f8d8 <feof@plt+0x5c038>
  45f908:	ldr	w8, [x19, #8]
  45f90c:	ldr	x4, [x19]
  45f910:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f914:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45f918:	sub	w5, w9, w8
  45f91c:	add	x0, sp, #0x10
  45f920:	mov	w1, #0xc8                  	// #200
  45f924:	add	x2, x2, #0xf77
  45f928:	add	x3, x3, #0x30
  45f92c:	bl	403530 <snprintf@plt>
  45f930:	ldp	x8, x0, [x19, #40]
  45f934:	add	x1, sp, #0x10
  45f938:	mov	w2, wzr
  45f93c:	blr	x8
  45f940:	mov	w8, #0x1                   	// #1
  45f944:	b	45f8d8 <feof@plt+0x5c038>
  45f948:	mov	w8, #0x8                   	// #8
  45f94c:	str	w8, [x26]
  45f950:	cbnz	w23, 45fc74 <feof@plt+0x5c3d4>
  45f954:	b	45fc84 <feof@plt+0x5c3e4>
  45f958:	adrp	x20, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45f95c:	adrp	x21, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45f960:	mov	x22, xzr
  45f964:	mov	w23, wzr
  45f968:	mov	w8, wzr
  45f96c:	mov	w9, #0xb                   	// #11
  45f970:	add	x20, x20, #0xf77
  45f974:	add	x21, x21, #0x30
  45f978:	str	w9, [x26]
  45f97c:	b	45f998 <feof@plt+0x5c0f8>
  45f980:	and	x9, x24, #0x7f
  45f984:	lsl	x9, x9, x23
  45f988:	orr	x22, x9, x22
  45f98c:	sxtb	w9, w24
  45f990:	add	w23, w23, #0x7
  45f994:	tbz	w9, #31, 45fb48 <feof@plt+0x5c2a8>
  45f998:	ldp	x10, x11, [x19, #16]
  45f99c:	cbz	x11, 45f9f4 <feof@plt+0x5c154>
  45f9a0:	add	x9, x10, #0x1
  45f9a4:	sub	x11, x11, #0x1
  45f9a8:	stp	x9, x11, [x19, #16]
  45f9ac:	ldrb	w24, [x10]
  45f9b0:	cmp	w23, #0x3f
  45f9b4:	b.ls	45f980 <feof@plt+0x5c0e0>  // b.plast
  45f9b8:	cbnz	w8, 45f98c <feof@plt+0x5c0ec>
  45f9bc:	ldr	w8, [x19, #8]
  45f9c0:	ldr	x4, [x19]
  45f9c4:	add	x0, sp, #0x10
  45f9c8:	mov	w1, #0xc8                  	// #200
  45f9cc:	sub	w5, w9, w8
  45f9d0:	mov	x2, x20
  45f9d4:	mov	x3, x21
  45f9d8:	bl	403530 <snprintf@plt>
  45f9dc:	ldp	x8, x0, [x19, #40]
  45f9e0:	add	x1, sp, #0x10
  45f9e4:	mov	w2, wzr
  45f9e8:	blr	x8
  45f9ec:	mov	w8, #0x1                   	// #1
  45f9f0:	b	45f98c <feof@plt+0x5c0ec>
  45f9f4:	ldr	w8, [x19, #56]
  45f9f8:	cbz	w8, 45fcd8 <feof@plt+0x5c438>
  45f9fc:	mov	x8, xzr
  45fa00:	mov	x22, xzr
  45fa04:	b	45fd20 <feof@plt+0x5c480>
  45fa08:	mov	w8, #0x2                   	// #2
  45fa0c:	mov	w0, #0x1                   	// #1
  45fa10:	str	w8, [x26]
  45fa14:	str	x0, [x26, #8]
  45fa18:	b	4600d0 <feof@plt+0x5c830>
  45fa1c:	mov	w8, #0x9                   	// #9
  45fa20:	str	w8, [x26]
  45fa24:	b	45fc74 <feof@plt+0x5c3d4>
  45fa28:	ldr	w10, [x19, #32]
  45fa2c:	add	x11, x8, #0x4
  45fa30:	sub	x9, x9, #0x4
  45fa34:	stp	x11, x9, [x19, #16]
  45fa38:	cbz	w10, 45fd6c <feof@plt+0x5c4cc>
  45fa3c:	ldr	w8, [x8]
  45fa40:	lsl	x8, x8, #32
  45fa44:	rev	x8, x8
  45fa48:	b	45fd70 <feof@plt+0x5c4d0>
  45fa4c:	adrp	x20, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fa50:	adrp	x21, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45fa54:	mov	x22, xzr
  45fa58:	mov	w23, wzr
  45fa5c:	mov	w8, wzr
  45fa60:	mov	w9, #0x8                   	// #8
  45fa64:	add	x20, x20, #0xf77
  45fa68:	add	x21, x21, #0x30
  45fa6c:	str	w9, [x26]
  45fa70:	b	45fa8c <feof@plt+0x5c1ec>
  45fa74:	and	x9, x24, #0x7f
  45fa78:	lsl	x9, x9, x23
  45fa7c:	orr	x22, x9, x22
  45fa80:	sxtb	w9, w24
  45fa84:	add	w23, w23, #0x7
  45fa88:	tbz	w9, #31, 45fbc0 <feof@plt+0x5c320>
  45fa8c:	ldp	x10, x11, [x19, #16]
  45fa90:	cbz	x11, 45fae8 <feof@plt+0x5c248>
  45fa94:	add	x9, x10, #0x1
  45fa98:	sub	x11, x11, #0x1
  45fa9c:	stp	x9, x11, [x19, #16]
  45faa0:	ldrb	w24, [x10]
  45faa4:	cmp	w23, #0x3f
  45faa8:	b.ls	45fa74 <feof@plt+0x5c1d4>  // b.plast
  45faac:	cbnz	w8, 45fa80 <feof@plt+0x5c1e0>
  45fab0:	ldr	w8, [x19, #8]
  45fab4:	ldr	x4, [x19]
  45fab8:	add	x0, sp, #0x10
  45fabc:	mov	w1, #0xc8                  	// #200
  45fac0:	sub	w5, w9, w8
  45fac4:	mov	x2, x20
  45fac8:	mov	x3, x21
  45facc:	bl	403530 <snprintf@plt>
  45fad0:	ldp	x8, x0, [x19, #40]
  45fad4:	add	x1, sp, #0x10
  45fad8:	mov	w2, wzr
  45fadc:	blr	x8
  45fae0:	mov	w8, #0x1                   	// #1
  45fae4:	b	45fa80 <feof@plt+0x5c1e0>
  45fae8:	ldr	w8, [x19, #56]
  45faec:	cbz	w8, 45fb7c <feof@plt+0x5c2dc>
  45faf0:	mov	x22, xzr
  45faf4:	b	45fbc0 <feof@plt+0x5c320>
  45faf8:	cbz	w23, 45fd78 <feof@plt+0x5c4d8>
  45fafc:	mov	x0, x19
  45fb00:	bl	45f1d4 <feof@plt+0x5b934>
  45fb04:	str	x0, [x26, #8]
  45fb08:	cbz	x20, 45fbc8 <feof@plt+0x5c328>
  45fb0c:	mov	w8, #0x7                   	// #7
  45fb10:	str	w8, [x26]
  45fb14:	b	4600cc <feof@plt+0x5c82c>
  45fb18:	cbz	w23, 45fd94 <feof@plt+0x5c4f4>
  45fb1c:	mov	x0, x19
  45fb20:	bl	45f1d4 <feof@plt+0x5b934>
  45fb24:	cbz	x20, 45fbc8 <feof@plt+0x5c328>
  45fb28:	ldr	x8, [x20, #112]
  45fb2c:	cmp	x0, x8
  45fb30:	b.cs	45fdb0 <feof@plt+0x5c510>  // b.hs, b.nlast
  45fb34:	mov	w8, #0x4                   	// #4
  45fb38:	str	w8, [x26]
  45fb3c:	ldr	x8, [x20, #104]
  45fb40:	add	x8, x8, x0
  45fb44:	b	45fd70 <feof@plt+0x5c4d0>
  45fb48:	ldr	x8, [x19, #24]
  45fb4c:	cmp	x8, x22
  45fb50:	b.cs	45fd20 <feof@plt+0x5c480>  // b.hs, b.nlast
  45fb54:	b	45ff6c <feof@plt+0x5c6cc>
  45fb58:	ldr	w8, [x19, #16]
  45fb5c:	ldr	w9, [x19, #8]
  45fb60:	ldr	x4, [x19]
  45fb64:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fb68:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fb6c:	sub	w5, w8, w9
  45fb70:	add	x2, x2, #0xf77
  45fb74:	add	x3, x3, #0xff7
  45fb78:	b	45fdd0 <feof@plt+0x5c530>
  45fb7c:	ldr	w8, [x19, #8]
  45fb80:	ldr	x4, [x19]
  45fb84:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fb88:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fb8c:	sub	w5, w10, w8
  45fb90:	add	x2, x2, #0xf77
  45fb94:	add	x3, x3, #0xf67
  45fb98:	add	x0, sp, #0x10
  45fb9c:	mov	w1, #0xc8                  	// #200
  45fba0:	bl	403530 <snprintf@plt>
  45fba4:	ldp	x8, x0, [x19, #40]
  45fba8:	add	x1, sp, #0x10
  45fbac:	mov	w2, wzr
  45fbb0:	blr	x8
  45fbb4:	mov	w8, #0x1                   	// #1
  45fbb8:	mov	x22, xzr
  45fbbc:	str	w8, [x19, #56]
  45fbc0:	str	x22, [x26, #8]
  45fbc4:	b	4600cc <feof@plt+0x5c82c>
  45fbc8:	str	wzr, [x26]
  45fbcc:	b	4600cc <feof@plt+0x5c82c>
  45fbd0:	ldr	w8, [x19, #56]
  45fbd4:	cbnz	w8, 45f7c0 <feof@plt+0x5bf20>
  45fbd8:	ldr	w8, [x19, #8]
  45fbdc:	ldr	x4, [x19]
  45fbe0:	sub	w5, w10, w8
  45fbe4:	b	45f7d4 <feof@plt+0x5bf34>
  45fbe8:	ldr	w8, [x19, #56]
  45fbec:	cbz	w8, 45fe90 <feof@plt+0x5c5f0>
  45fbf0:	mov	x26, xzr
  45fbf4:	b	45fed4 <feof@plt+0x5c634>
  45fbf8:	ldr	w10, [x19, #32]
  45fbfc:	add	x11, x9, #0x2
  45fc00:	sub	x8, x8, #0x2
  45fc04:	stp	x11, x8, [x19, #16]
  45fc08:	cbz	w10, 45ff58 <feof@plt+0x5c6b8>
  45fc0c:	ldrh	w9, [x9]
  45fc10:	lsl	x9, x9, #48
  45fc14:	rev	x9, x9
  45fc18:	b	45ff64 <feof@plt+0x5c6c4>
  45fc1c:	ldr	w10, [x19, #32]
  45fc20:	add	x11, x9, #0x4
  45fc24:	sub	x8, x8, #0x4
  45fc28:	stp	x11, x8, [x19, #16]
  45fc2c:	cbz	w10, 45ff60 <feof@plt+0x5c6c0>
  45fc30:	ldr	w9, [x9]
  45fc34:	lsl	x9, x9, #32
  45fc38:	rev	x9, x9
  45fc3c:	b	45ff64 <feof@plt+0x5c6c4>
  45fc40:	add	x9, x20, x9
  45fc44:	stp	x9, x8, [x19, #16]
  45fc48:	b	45ff48 <feof@plt+0x5c6a8>
  45fc4c:	ldr	w8, [x19, #16]
  45fc50:	ldr	w9, [x19, #8]
  45fc54:	ldr	x4, [x19]
  45fc58:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fc5c:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fc60:	sub	w5, w8, w9
  45fc64:	add	x2, x2, #0xf77
  45fc68:	add	x3, x3, #0xfbb
  45fc6c:	b	45fdd0 <feof@plt+0x5c530>
  45fc70:	cbz	w23, 45fc84 <feof@plt+0x5c3e4>
  45fc74:	mov	x0, x19
  45fc78:	bl	45f1d4 <feof@plt+0x5b934>
  45fc7c:	str	x0, [x26, #8]
  45fc80:	b	4600cc <feof@plt+0x5c82c>
  45fc84:	ldp	x8, x9, [x19, #16]
  45fc88:	cmp	x9, #0x3
  45fc8c:	b.ls	45fdfc <feof@plt+0x5c55c>  // b.plast
  45fc90:	ldr	w10, [x19, #32]
  45fc94:	add	x11, x8, #0x4
  45fc98:	sub	x9, x9, #0x4
  45fc9c:	stp	x11, x9, [x19, #16]
  45fca0:	cbz	w10, 460044 <feof@plt+0x5c7a4>
  45fca4:	ldr	w8, [x8]
  45fca8:	lsl	x8, x8, #32
  45fcac:	rev	x0, x8
  45fcb0:	b	45fc7c <feof@plt+0x5c3dc>
  45fcb4:	cmp	w23, #0x40
  45fcb8:	and	w8, w24, #0x40
  45fcbc:	mov	x9, #0xffffffffffffffff    	// #-1
  45fcc0:	cset	w10, cc  // cc = lo, ul, last
  45fcc4:	lsl	x9, x9, x23
  45fcc8:	tst	w10, w8, lsr #6
  45fccc:	csel	x8, x9, xzr, ne  // ne = any
  45fcd0:	orr	x8, x22, x8
  45fcd4:	b	45fd70 <feof@plt+0x5c4d0>
  45fcd8:	ldr	w8, [x19, #8]
  45fcdc:	ldr	x4, [x19]
  45fce0:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fce4:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fce8:	sub	w5, w10, w8
  45fcec:	add	x2, x2, #0xf77
  45fcf0:	add	x3, x3, #0xf67
  45fcf4:	add	x0, sp, #0x10
  45fcf8:	mov	w1, #0xc8                  	// #200
  45fcfc:	bl	403530 <snprintf@plt>
  45fd00:	ldp	x8, x0, [x19, #40]
  45fd04:	add	x1, sp, #0x10
  45fd08:	mov	w2, wzr
  45fd0c:	blr	x8
  45fd10:	ldr	x8, [x19, #24]
  45fd14:	mov	x22, xzr
  45fd18:	mov	w9, #0x1                   	// #1
  45fd1c:	str	w9, [x19, #56]
  45fd20:	ldr	x9, [x19, #16]
  45fd24:	sub	x8, x8, x22
  45fd28:	str	x8, [x19, #24]
  45fd2c:	add	x8, x9, x22
  45fd30:	b	4600c8 <feof@plt+0x5c828>
  45fd34:	ldr	w9, [x19, #56]
  45fd38:	cbz	w9, 460070 <feof@plt+0x5c7d0>
  45fd3c:	mov	x8, xzr
  45fd40:	mov	x9, xzr
  45fd44:	b	4600b8 <feof@plt+0x5c818>
  45fd48:	ldp	x8, x9, [x19, #16]
  45fd4c:	cmp	x9, #0x3
  45fd50:	b.hi	45ffd8 <feof@plt+0x5c738>  // b.pmore
  45fd54:	ldr	w9, [x19, #56]
  45fd58:	cbz	w9, 4600f0 <feof@plt+0x5c850>
  45fd5c:	mov	x0, xzr
  45fd60:	b	45f644 <feof@plt+0x5bda4>
  45fd64:	ldrh	w8, [x8]
  45fd68:	b	45fd70 <feof@plt+0x5c4d0>
  45fd6c:	ldr	w8, [x8]
  45fd70:	str	x8, [x26, #8]
  45fd74:	b	4600cc <feof@plt+0x5c82c>
  45fd78:	ldp	x8, x9, [x19, #16]
  45fd7c:	cmp	x9, #0x3
  45fd80:	b.hi	45fffc <feof@plt+0x5c75c>  // b.pmore
  45fd84:	ldr	w9, [x19, #56]
  45fd88:	cbz	w9, 460138 <feof@plt+0x5c898>
  45fd8c:	mov	x0, xzr
  45fd90:	b	45fb04 <feof@plt+0x5c264>
  45fd94:	ldp	x8, x9, [x19, #16]
  45fd98:	cmp	x9, #0x3
  45fd9c:	b.hi	460020 <feof@plt+0x5c780>  // b.pmore
  45fda0:	ldr	w9, [x19, #56]
  45fda4:	cbz	w9, 460180 <feof@plt+0x5c8e0>
  45fda8:	mov	x0, xzr
  45fdac:	b	45fb24 <feof@plt+0x5c284>
  45fdb0:	ldr	w8, [x19, #16]
  45fdb4:	ldr	w9, [x19, #8]
  45fdb8:	ldr	x4, [x19]
  45fdbc:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fdc0:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fdc4:	sub	w5, w8, w9
  45fdc8:	add	x2, x2, #0xf77
  45fdcc:	add	x3, x3, #0xfd5
  45fdd0:	add	x0, sp, #0x10
  45fdd4:	mov	w1, #0xc8                  	// #200
  45fdd8:	bl	403530 <snprintf@plt>
  45fddc:	ldp	x8, x0, [x19, #40]
  45fde0:	add	x1, sp, #0x10
  45fde4:	mov	w2, wzr
  45fde8:	blr	x8
  45fdec:	b	45ff74 <feof@plt+0x5c6d4>
  45fdf0:	ldp	x8, x9, [x19, #16]
  45fdf4:	cmp	x9, #0x1
  45fdf8:	b.hi	46004c <feof@plt+0x5c7ac>  // b.pmore
  45fdfc:	ldr	w9, [x19, #56]
  45fe00:	cbnz	w9, 45fe88 <feof@plt+0x5c5e8>
  45fe04:	ldr	w9, [x19, #8]
  45fe08:	ldr	x4, [x19]
  45fe0c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fe10:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fe14:	sub	w5, w8, w9
  45fe18:	add	x2, x2, #0xf77
  45fe1c:	add	x3, x3, #0xf67
  45fe20:	add	x0, sp, #0x10
  45fe24:	mov	w1, #0xc8                  	// #200
  45fe28:	bl	403530 <snprintf@plt>
  45fe2c:	ldp	x8, x0, [x19, #40]
  45fe30:	add	x1, sp, #0x10
  45fe34:	mov	w2, wzr
  45fe38:	blr	x8
  45fe3c:	mov	w8, #0x1                   	// #1
  45fe40:	mov	x0, xzr
  45fe44:	str	w8, [x19, #56]
  45fe48:	b	45fc7c <feof@plt+0x5c3dc>
  45fe4c:	ldr	w8, [x19, #16]
  45fe50:	ldr	w9, [x19, #8]
  45fe54:	ldr	x4, [x19]
  45fe58:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fe5c:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  45fe60:	sub	w5, w8, w9
  45fe64:	add	x2, x2, #0xf77
  45fe68:	add	x3, x3, #0xf
  45fe6c:	add	x0, sp, #0x10
  45fe70:	mov	w1, #0xc8                  	// #200
  45fe74:	bl	403530 <snprintf@plt>
  45fe78:	ldp	x8, x0, [x19, #40]
  45fe7c:	add	x1, sp, #0x10
  45fe80:	mov	w2, wzr
  45fe84:	blr	x8
  45fe88:	mov	x0, xzr
  45fe8c:	b	45fc7c <feof@plt+0x5c3dc>
  45fe90:	ldr	w8, [x19, #8]
  45fe94:	ldr	x4, [x19]
  45fe98:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fe9c:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45fea0:	sub	w5, w10, w8
  45fea4:	add	x2, x2, #0xf77
  45fea8:	add	x3, x3, #0xf67
  45feac:	add	x0, sp, #0x10
  45feb0:	mov	w1, #0xc8                  	// #200
  45feb4:	bl	403530 <snprintf@plt>
  45feb8:	ldp	x8, x0, [x19, #40]
  45febc:	add	x1, sp, #0x10
  45fec0:	mov	w2, wzr
  45fec4:	blr	x8
  45fec8:	mov	w8, #0x1                   	// #1
  45fecc:	mov	x26, xzr
  45fed0:	str	w8, [x19, #56]
  45fed4:	ldr	x8, [sp, #8]
  45fed8:	mov	w0, w26
  45fedc:	mov	x1, x19
  45fee0:	mov	w2, w23
  45fee4:	mov	w3, w25
  45fee8:	mov	w4, w24
  45feec:	mov	x5, x21
  45fef0:	mov	x6, x22
  45fef4:	mov	x7, x20
  45fef8:	str	x8, [sp]
  45fefc:	bl	45f298 <feof@plt+0x5b9f8>
  45ff00:	b	4600d0 <feof@plt+0x5c830>
  45ff04:	ldr	w8, [x19, #8]
  45ff08:	ldr	x4, [x19]
  45ff0c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ff10:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ff14:	sub	w5, w20, w8
  45ff18:	add	x2, x2, #0xf77
  45ff1c:	add	x3, x3, #0xf67
  45ff20:	add	x0, sp, #0x10
  45ff24:	mov	w1, #0xc8                  	// #200
  45ff28:	bl	403530 <snprintf@plt>
  45ff2c:	ldp	x8, x0, [x19, #40]
  45ff30:	add	x1, sp, #0x10
  45ff34:	mov	w2, wzr
  45ff38:	blr	x8
  45ff3c:	mov	w8, #0x1                   	// #1
  45ff40:	mov	x20, xzr
  45ff44:	str	w8, [x19, #56]
  45ff48:	cmp	x20, #0x0
  45ff4c:	str	x20, [x26, #8]
  45ff50:	cset	w0, ne  // ne = any
  45ff54:	b	4600d0 <feof@plt+0x5c830>
  45ff58:	ldrh	w9, [x9]
  45ff5c:	b	45ff64 <feof@plt+0x5c6c4>
  45ff60:	ldr	w9, [x9]
  45ff64:	subs	x8, x8, x9
  45ff68:	b.cs	45ff7c <feof@plt+0x5c6dc>  // b.hs, b.nlast
  45ff6c:	ldr	w8, [x19, #56]
  45ff70:	cbz	w8, 45ff8c <feof@plt+0x5c6ec>
  45ff74:	mov	w0, wzr
  45ff78:	b	4600d0 <feof@plt+0x5c830>
  45ff7c:	ldr	x10, [x19, #16]
  45ff80:	str	x8, [x19, #24]
  45ff84:	add	x8, x10, x9
  45ff88:	b	4600c8 <feof@plt+0x5c828>
  45ff8c:	ldr	w8, [x19, #16]
  45ff90:	ldr	w9, [x19, #8]
  45ff94:	ldr	x4, [x19]
  45ff98:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ff9c:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  45ffa0:	sub	w5, w8, w9
  45ffa4:	add	x2, x2, #0xf77
  45ffa8:	add	x3, x3, #0xf67
  45ffac:	add	x0, sp, #0x10
  45ffb0:	mov	w1, #0xc8                  	// #200
  45ffb4:	bl	403530 <snprintf@plt>
  45ffb8:	ldp	x8, x0, [x19, #40]
  45ffbc:	add	x1, sp, #0x10
  45ffc0:	mov	w2, wzr
  45ffc4:	blr	x8
  45ffc8:	mov	w8, #0x1                   	// #1
  45ffcc:	mov	w0, wzr
  45ffd0:	str	w8, [x19, #56]
  45ffd4:	b	4600d0 <feof@plt+0x5c830>
  45ffd8:	ldr	w10, [x19, #32]
  45ffdc:	add	x11, x8, #0x4
  45ffe0:	sub	x9, x9, #0x4
  45ffe4:	stp	x11, x9, [x19, #16]
  45ffe8:	cbz	w10, 4601c8 <feof@plt+0x5c928>
  45ffec:	ldr	w8, [x8]
  45fff0:	lsl	x8, x8, #32
  45fff4:	rev	x0, x8
  45fff8:	b	45f644 <feof@plt+0x5bda4>
  45fffc:	ldr	w10, [x19, #32]
  460000:	add	x11, x8, #0x4
  460004:	sub	x9, x9, #0x4
  460008:	stp	x11, x9, [x19, #16]
  46000c:	cbz	w10, 4601d0 <feof@plt+0x5c930>
  460010:	ldr	w8, [x8]
  460014:	lsl	x8, x8, #32
  460018:	rev	x0, x8
  46001c:	b	45fb04 <feof@plt+0x5c264>
  460020:	ldr	w10, [x19, #32]
  460024:	add	x11, x8, #0x4
  460028:	sub	x9, x9, #0x4
  46002c:	stp	x11, x9, [x19, #16]
  460030:	cbz	w10, 4601d8 <feof@plt+0x5c938>
  460034:	ldr	w8, [x8]
  460038:	lsl	x8, x8, #32
  46003c:	rev	x0, x8
  460040:	b	45fb24 <feof@plt+0x5c284>
  460044:	ldr	w0, [x8]
  460048:	b	45fc7c <feof@plt+0x5c3dc>
  46004c:	ldr	w10, [x19, #32]
  460050:	add	x11, x8, #0x2
  460054:	sub	x9, x9, #0x2
  460058:	stp	x11, x9, [x19, #16]
  46005c:	cbz	w10, 4601e0 <feof@plt+0x5c940>
  460060:	ldrh	w8, [x8]
  460064:	lsl	x8, x8, #48
  460068:	rev	x0, x8
  46006c:	b	45fc7c <feof@plt+0x5c3dc>
  460070:	ldr	w9, [x19, #8]
  460074:	ldr	x4, [x19]
  460078:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  46007c:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460080:	sub	w5, w8, w9
  460084:	add	x2, x2, #0xf77
  460088:	add	x3, x3, #0xf67
  46008c:	add	x0, sp, #0x10
  460090:	mov	w1, #0xc8                  	// #200
  460094:	bl	403530 <snprintf@plt>
  460098:	ldp	x8, x0, [x19, #40]
  46009c:	add	x1, sp, #0x10
  4600a0:	mov	w2, wzr
  4600a4:	blr	x8
  4600a8:	ldr	x9, [x19, #24]
  4600ac:	mov	x8, xzr
  4600b0:	mov	w10, #0x1                   	// #1
  4600b4:	str	w10, [x19, #56]
  4600b8:	ldr	x10, [x19, #16]
  4600bc:	sub	x9, x9, x8
  4600c0:	str	x9, [x19, #24]
  4600c4:	add	x8, x10, x8
  4600c8:	str	x8, [x19, #16]
  4600cc:	mov	w0, #0x1                   	// #1
  4600d0:	ldp	x20, x19, [sp, #304]
  4600d4:	ldp	x22, x21, [sp, #288]
  4600d8:	ldp	x24, x23, [sp, #272]
  4600dc:	ldp	x26, x25, [sp, #256]
  4600e0:	ldp	x28, x27, [sp, #240]
  4600e4:	ldp	x29, x30, [sp, #224]
  4600e8:	add	sp, sp, #0x140
  4600ec:	ret
  4600f0:	ldr	w9, [x19, #8]
  4600f4:	ldr	x4, [x19]
  4600f8:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4600fc:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460100:	sub	w5, w8, w9
  460104:	add	x2, x2, #0xf77
  460108:	add	x3, x3, #0xf67
  46010c:	add	x0, sp, #0x10
  460110:	mov	w1, #0xc8                  	// #200
  460114:	bl	403530 <snprintf@plt>
  460118:	ldp	x8, x0, [x19, #40]
  46011c:	add	x1, sp, #0x10
  460120:	mov	w2, wzr
  460124:	blr	x8
  460128:	mov	w8, #0x1                   	// #1
  46012c:	mov	x0, xzr
  460130:	str	w8, [x19, #56]
  460134:	b	45f644 <feof@plt+0x5bda4>
  460138:	ldr	w9, [x19, #8]
  46013c:	ldr	x4, [x19]
  460140:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460144:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460148:	sub	w5, w8, w9
  46014c:	add	x2, x2, #0xf77
  460150:	add	x3, x3, #0xf67
  460154:	add	x0, sp, #0x10
  460158:	mov	w1, #0xc8                  	// #200
  46015c:	bl	403530 <snprintf@plt>
  460160:	ldp	x8, x0, [x19, #40]
  460164:	add	x1, sp, #0x10
  460168:	mov	w2, wzr
  46016c:	blr	x8
  460170:	mov	w8, #0x1                   	// #1
  460174:	mov	x0, xzr
  460178:	str	w8, [x19, #56]
  46017c:	b	45fb04 <feof@plt+0x5c264>
  460180:	ldr	w9, [x19, #8]
  460184:	ldr	x4, [x19]
  460188:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  46018c:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460190:	sub	w5, w8, w9
  460194:	add	x2, x2, #0xf77
  460198:	add	x3, x3, #0xf67
  46019c:	add	x0, sp, #0x10
  4601a0:	mov	w1, #0xc8                  	// #200
  4601a4:	bl	403530 <snprintf@plt>
  4601a8:	ldp	x8, x0, [x19, #40]
  4601ac:	add	x1, sp, #0x10
  4601b0:	mov	w2, wzr
  4601b4:	blr	x8
  4601b8:	mov	w8, #0x1                   	// #1
  4601bc:	mov	x0, xzr
  4601c0:	str	w8, [x19, #56]
  4601c4:	b	45fb24 <feof@plt+0x5c284>
  4601c8:	ldr	w0, [x8]
  4601cc:	b	45f644 <feof@plt+0x5bda4>
  4601d0:	ldr	w0, [x8]
  4601d4:	b	45fb04 <feof@plt+0x5c264>
  4601d8:	ldr	w0, [x8]
  4601dc:	b	45fb24 <feof@plt+0x5c284>
  4601e0:	ldrh	w0, [x8]
  4601e4:	b	45fc7c <feof@plt+0x5c3dc>
  4601e8:	sub	sp, sp, #0x170
  4601ec:	stp	x29, x30, [sp, #272]
  4601f0:	stp	x28, x27, [sp, #288]
  4601f4:	stp	x26, x25, [sp, #304]
  4601f8:	stp	x24, x23, [sp, #320]
  4601fc:	stp	x22, x21, [sp, #336]
  460200:	stp	x20, x19, [sp, #352]
  460204:	add	x29, sp, #0x110
  460208:	ldp	x19, x20, [x29, #96]
  46020c:	subs	x8, x7, x3
  460210:	b.ls	460640 <feof@plt+0x5cda0>  // b.plast
  460214:	ldr	x25, [x29, #112]
  460218:	adrp	x9, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  46021c:	adrp	x27, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460220:	mov	x23, x4
  460224:	mov	x21, x2
  460228:	mov	x22, x1
  46022c:	mov	x24, x0
  460230:	add	x9, x9, #0xd1a
  460234:	add	x10, x6, x3
  460238:	add	x27, x27, #0xebc
  46023c:	str	w5, [sp, #32]
  460240:	stp	x19, x20, [sp, #40]
  460244:	str	wzr, [sp, #56]
  460248:	stp	x9, x6, [sp]
  46024c:	stp	x10, x8, [sp, #16]
  460250:	b	460260 <feof@plt+0x5c9c0>
  460254:	mov	x23, x0
  460258:	ldr	w8, [sp, #56]
  46025c:	cbnz	w8, 460654 <feof@plt+0x5cdb4>
  460260:	ldr	w8, [x21, #48]
  460264:	sub	w8, w8, #0x1
  460268:	cmp	w8, #0x7
  46026c:	b.hi	4602cc <feof@plt+0x5ca2c>  // b.pmore
  460270:	adr	x9, 460280 <feof@plt+0x5c9e0>
  460274:	ldrb	w10, [x27, x8]
  460278:	add	x9, x9, x10, lsl #2
  46027c:	br	x9
  460280:	ldp	x8, x9, [sp, #16]
  460284:	cbz	x9, 46031c <feof@plt+0x5ca7c>
  460288:	add	x10, x8, #0x1
  46028c:	sub	x9, x9, #0x1
  460290:	stp	x10, x9, [sp, #16]
  460294:	ldrb	w28, [x8]
  460298:	b	4603a4 <feof@plt+0x5cb04>
  46029c:	ldp	x8, x9, [sp, #16]
  4602a0:	cmp	x9, #0x1
  4602a4:	b.ls	46031c <feof@plt+0x5ca7c>  // b.plast
  4602a8:	ldr	w10, [sp, #32]
  4602ac:	add	x11, x8, #0x2
  4602b0:	sub	x9, x9, #0x2
  4602b4:	stp	x11, x9, [sp, #16]
  4602b8:	cbz	w10, 460398 <feof@plt+0x5caf8>
  4602bc:	ldrh	w8, [x8]
  4602c0:	lsl	x8, x8, #48
  4602c4:	rev	x28, x8
  4602c8:	b	4603a4 <feof@plt+0x5cb04>
  4602cc:	ldr	w8, [sp, #16]
  4602d0:	ldr	w9, [sp, #8]
  4602d4:	ldr	x4, [sp]
  4602d8:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4602dc:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  4602e0:	sub	w5, w8, w9
  4602e4:	add	x0, sp, #0x40
  4602e8:	mov	w1, #0xc8                  	// #200
  4602ec:	add	x2, x2, #0xf77
  4602f0:	add	x3, x3, #0xf
  4602f4:	bl	403530 <snprintf@plt>
  4602f8:	ldp	x8, x0, [sp, #40]
  4602fc:	add	x1, sp, #0x40
  460300:	mov	w2, wzr
  460304:	blr	x8
  460308:	mov	x28, xzr
  46030c:	b	4603a4 <feof@plt+0x5cb04>
  460310:	ldp	x8, x9, [sp, #16]
  460314:	cmp	x9, #0x3
  460318:	b.hi	460374 <feof@plt+0x5cad4>  // b.pmore
  46031c:	ldr	w9, [sp, #8]
  460320:	ldr	x4, [sp]
  460324:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460328:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  46032c:	sub	w5, w8, w9
  460330:	add	x0, sp, #0x40
  460334:	mov	w1, #0xc8                  	// #200
  460338:	add	x2, x2, #0xf77
  46033c:	add	x3, x3, #0xf67
  460340:	bl	403530 <snprintf@plt>
  460344:	ldp	x8, x0, [sp, #40]
  460348:	add	x1, sp, #0x40
  46034c:	mov	w2, wzr
  460350:	blr	x8
  460354:	mov	w8, #0x1                   	// #1
  460358:	mov	x28, xzr
  46035c:	str	w8, [sp, #56]
  460360:	b	4603a4 <feof@plt+0x5cb04>
  460364:	mov	x0, sp
  460368:	bl	45f1d4 <feof@plt+0x5b934>
  46036c:	mov	x28, x0
  460370:	b	4603a4 <feof@plt+0x5cb04>
  460374:	ldr	w10, [sp, #32]
  460378:	add	x11, x8, #0x4
  46037c:	sub	x9, x9, #0x4
  460380:	stp	x11, x9, [sp, #16]
  460384:	cbz	w10, 4603a0 <feof@plt+0x5cb00>
  460388:	ldr	w8, [x8]
  46038c:	lsl	x8, x8, #32
  460390:	rev	x28, x8
  460394:	b	4603a4 <feof@plt+0x5cb04>
  460398:	ldrh	w28, [x8]
  46039c:	b	4603a4 <feof@plt+0x5cb04>
  4603a0:	ldr	w28, [x8]
  4603a4:	ldr	w8, [x21, #48]
  4603a8:	sub	w8, w8, #0x1
  4603ac:	cmp	w8, #0x7
  4603b0:	b.hi	460418 <feof@plt+0x5cb78>  // b.pmore
  4603b4:	adrp	x11, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4603b8:	add	x11, x11, #0xec4
  4603bc:	adr	x9, 4603cc <feof@plt+0x5cb2c>
  4603c0:	ldrb	w10, [x11, x8]
  4603c4:	add	x9, x9, x10, lsl #2
  4603c8:	br	x9
  4603cc:	ldp	x8, x9, [sp, #16]
  4603d0:	cbz	x9, 4604a4 <feof@plt+0x5cc04>
  4603d4:	add	x10, x8, #0x1
  4603d8:	sub	x9, x9, #0x1
  4603dc:	stp	x10, x9, [sp, #16]
  4603e0:	ldrb	w0, [x8]
  4603e4:	b	460548 <feof@plt+0x5cca8>
  4603e8:	ldp	x8, x9, [sp, #16]
  4603ec:	cmp	x9, #0x1
  4603f0:	b.ls	460464 <feof@plt+0x5cbc4>  // b.plast
  4603f4:	ldr	w10, [sp, #32]
  4603f8:	add	x11, x8, #0x2
  4603fc:	sub	x9, x9, #0x2
  460400:	stp	x11, x9, [sp, #16]
  460404:	cbz	w10, 4604f4 <feof@plt+0x5cc54>
  460408:	ldrh	w8, [x8]
  46040c:	lsl	x8, x8, #48
  460410:	rev	x0, x8
  460414:	b	460548 <feof@plt+0x5cca8>
  460418:	ldr	w8, [sp, #16]
  46041c:	ldr	w9, [sp, #8]
  460420:	ldr	x4, [sp]
  460424:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460428:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46042c:	sub	w5, w8, w9
  460430:	add	x0, sp, #0x40
  460434:	mov	w1, #0xc8                  	// #200
  460438:	add	x2, x2, #0xf77
  46043c:	add	x3, x3, #0xf
  460440:	bl	403530 <snprintf@plt>
  460444:	ldp	x8, x0, [sp, #40]
  460448:	add	x1, sp, #0x40
  46044c:	mov	w2, wzr
  460450:	blr	x8
  460454:	b	46046c <feof@plt+0x5cbcc>
  460458:	ldp	x8, x9, [sp, #16]
  46045c:	cmp	x9, #0x3
  460460:	b.hi	460480 <feof@plt+0x5cbe0>  // b.pmore
  460464:	ldr	w9, [sp, #56]
  460468:	cbz	w9, 4604b4 <feof@plt+0x5cc14>
  46046c:	mov	x0, xzr
  460470:	b	460548 <feof@plt+0x5cca8>
  460474:	mov	x0, sp
  460478:	bl	45f1d4 <feof@plt+0x5b934>
  46047c:	b	460548 <feof@plt+0x5cca8>
  460480:	ldr	w10, [sp, #32]
  460484:	add	x11, x8, #0x4
  460488:	sub	x9, x9, #0x4
  46048c:	stp	x11, x9, [sp, #16]
  460490:	cbz	w10, 4604fc <feof@plt+0x5cc5c>
  460494:	ldr	w8, [x8]
  460498:	lsl	x8, x8, #32
  46049c:	rev	x0, x8
  4604a0:	b	460548 <feof@plt+0x5cca8>
  4604a4:	ldr	w9, [sp, #56]
  4604a8:	cbz	w9, 460504 <feof@plt+0x5cc64>
  4604ac:	mov	w0, wzr
  4604b0:	b	460548 <feof@plt+0x5cca8>
  4604b4:	ldr	w9, [sp, #8]
  4604b8:	ldr	x4, [sp]
  4604bc:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4604c0:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4604c4:	sub	w5, w8, w9
  4604c8:	add	x0, sp, #0x40
  4604cc:	mov	w1, #0xc8                  	// #200
  4604d0:	add	x2, x2, #0xf77
  4604d4:	add	x3, x3, #0xf67
  4604d8:	bl	403530 <snprintf@plt>
  4604dc:	ldp	x8, x0, [sp, #40]
  4604e0:	add	x1, sp, #0x40
  4604e4:	mov	w2, wzr
  4604e8:	blr	x8
  4604ec:	mov	x0, xzr
  4604f0:	b	460540 <feof@plt+0x5cca0>
  4604f4:	ldrh	w0, [x8]
  4604f8:	b	460548 <feof@plt+0x5cca8>
  4604fc:	ldr	w0, [x8]
  460500:	b	460548 <feof@plt+0x5cca8>
  460504:	ldr	w9, [sp, #8]
  460508:	ldr	x4, [sp]
  46050c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460510:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460514:	sub	w5, w8, w9
  460518:	add	x0, sp, #0x40
  46051c:	mov	w1, #0xc8                  	// #200
  460520:	add	x2, x2, #0xf77
  460524:	add	x3, x3, #0xf67
  460528:	bl	403530 <snprintf@plt>
  46052c:	ldp	x8, x0, [sp, #40]
  460530:	add	x1, sp, #0x40
  460534:	mov	w2, wzr
  460538:	blr	x8
  46053c:	mov	w0, wzr
  460540:	mov	w8, #0x1                   	// #1
  460544:	str	w8, [sp, #56]
  460548:	orr	x8, x0, x28
  46054c:	cbz	x8, 46065c <feof@plt+0x5cdbc>
  460550:	ldr	w8, [x21, #48]
  460554:	sub	w8, w8, #0x1
  460558:	cmp	w8, #0x7
  46055c:	b.hi	4605ac <feof@plt+0x5cd0c>  // b.pmore
  460560:	adrp	x11, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460564:	add	x11, x11, #0xecc
  460568:	adr	x9, 460578 <feof@plt+0x5ccd8>
  46056c:	ldrb	w10, [x11, x8]
  460570:	add	x9, x9, x10, lsl #2
  460574:	br	x9
  460578:	cmp	x28, #0xff
  46057c:	b.eq	460254 <feof@plt+0x5c9b4>  // b.none
  460580:	b	4605ac <feof@plt+0x5cd0c>
  460584:	mov	w8, #0xffff                	// #65535
  460588:	cmp	x28, x8
  46058c:	b.eq	460254 <feof@plt+0x5c9b4>  // b.none
  460590:	b	4605ac <feof@plt+0x5cd0c>
  460594:	mov	w8, #0xffffffff            	// #-1
  460598:	cmp	x28, x8
  46059c:	b.ne	4605ac <feof@plt+0x5cd0c>  // b.any
  4605a0:	b	460254 <feof@plt+0x5c9b4>
  4605a4:	cmn	x28, #0x1
  4605a8:	b.eq	460254 <feof@plt+0x5c9b4>  // b.none
  4605ac:	ldr	x8, [x25, #24]
  4605b0:	add	x9, x23, x22
  4605b4:	add	x26, x9, x28
  4605b8:	add	x28, x9, x0
  4605bc:	cbz	x8, 4605fc <feof@plt+0x5cd5c>
  4605c0:	ldr	x10, [x25]
  4605c4:	sub	x11, x8, #0x1
  4605c8:	mov	w8, #0x18                  	// #24
  4605cc:	madd	x8, x11, x8, x10
  4605d0:	ldr	x9, [x8, #8]!
  4605d4:	cmp	x26, x9
  4605d8:	b.eq	4605e8 <feof@plt+0x5cd48>  // b.none
  4605dc:	add	x12, x9, #0x1
  4605e0:	cmp	x26, x12
  4605e4:	b.ne	4605fc <feof@plt+0x5cd5c>  // b.any
  4605e8:	mov	w12, #0x18                  	// #24
  4605ec:	madd	x10, x11, x12, x10
  4605f0:	ldr	x10, [x10, #16]
  4605f4:	cmp	x10, x21
  4605f8:	b.eq	460630 <feof@plt+0x5cd90>  // b.none
  4605fc:	mov	w1, #0x18                  	// #24
  460600:	mov	x0, x24
  460604:	mov	x2, x19
  460608:	mov	x3, x20
  46060c:	mov	x4, x25
  460610:	bl	459e18 <feof@plt+0x56578>
  460614:	cbz	x0, 460668 <feof@plt+0x5cdc8>
  460618:	stp	x26, x28, [x0]
  46061c:	str	x21, [x0, #16]
  460620:	ldr	x8, [x25, #24]
  460624:	add	x8, x8, #0x1
  460628:	str	x8, [x25, #24]
  46062c:	b	460258 <feof@plt+0x5c9b8>
  460630:	cmp	x28, x9
  460634:	b.ls	460258 <feof@plt+0x5c9b8>  // b.plast
  460638:	str	x28, [x8]
  46063c:	b	460258 <feof@plt+0x5c9b8>
  460640:	adrp	x1, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  460644:	add	x1, x1, #0x1a9
  460648:	mov	x0, x20
  46064c:	mov	w2, wzr
  460650:	blr	x19
  460654:	mov	w0, wzr
  460658:	b	460668 <feof@plt+0x5cdc8>
  46065c:	ldr	w8, [sp, #56]
  460660:	cmp	w8, #0x0
  460664:	cset	w0, eq  // eq = none
  460668:	ldp	x20, x19, [sp, #352]
  46066c:	ldp	x22, x21, [sp, #336]
  460670:	ldp	x24, x23, [sp, #320]
  460674:	ldp	x26, x25, [sp, #304]
  460678:	ldp	x28, x27, [sp, #288]
  46067c:	ldp	x29, x30, [sp, #272]
  460680:	add	sp, sp, #0x170
  460684:	ret
  460688:	sub	sp, sp, #0x140
  46068c:	stp	x29, x30, [sp, #224]
  460690:	stp	x28, x27, [sp, #240]
  460694:	stp	x26, x25, [sp, #256]
  460698:	stp	x24, x23, [sp, #272]
  46069c:	stp	x22, x21, [sp, #288]
  4606a0:	stp	x20, x19, [sp, #304]
  4606a4:	add	x29, sp, #0xe0
  4606a8:	mov	w8, #0x1                   	// #1
  4606ac:	str	w8, [x6]
  4606b0:	ldr	x8, [x1, #32]
  4606b4:	mov	x22, x6
  4606b8:	cbz	x8, 460728 <feof@plt+0x5ce88>
  4606bc:	ldr	x10, [x1, #24]
  4606c0:	mov	x20, x5
  4606c4:	mov	x23, x4
  4606c8:	mov	x27, x3
  4606cc:	mov	x21, x2
  4606d0:	mov	x25, x1
  4606d4:	mov	x24, x0
  4606d8:	mov	x11, xzr
  4606dc:	mov	x12, x8
  4606e0:	b	4606f0 <feof@plt+0x5ce50>
  4606e4:	mov	x12, x13
  4606e8:	cmp	x11, x12
  4606ec:	b.cs	460728 <feof@plt+0x5ce88>  // b.hs, b.nlast
  4606f0:	add	x9, x12, x11
  4606f4:	lsr	x13, x9, #1
  4606f8:	add	x9, x13, x13, lsl #1
  4606fc:	lsl	x14, x9, #3
  460700:	add	x9, x10, x14
  460704:	ldr	x15, [x9]
  460708:	cmp	x15, x21
  46070c:	b.hi	4606e4 <feof@plt+0x5ce44>  // b.pmore
  460710:	ldr	x15, [x9, #8]
  460714:	cmp	x15, x21
  460718:	b.hi	460750 <feof@plt+0x5ceb0>  // b.pmore
  46071c:	add	x11, x13, #0x1
  460720:	cmp	x11, x12
  460724:	b.cc	4606f0 <feof@plt+0x5ce50>  // b.lo, b.ul, b.last
  460728:	mov	w0, wzr
  46072c:	str	wzr, [x22]
  460730:	ldp	x20, x19, [sp, #304]
  460734:	ldp	x22, x21, [sp, #288]
  460738:	ldp	x24, x23, [sp, #272]
  46073c:	ldp	x26, x25, [sp, #256]
  460740:	ldp	x28, x27, [sp, #240]
  460744:	ldp	x29, x30, [sp, #224]
  460748:	add	sp, sp, #0x140
  46074c:	ret
  460750:	mov	x13, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  460754:	asr	x15, x14, #3
  460758:	movk	x13, #0xaaab
  46075c:	orr	x14, xzr, #0x1
  460760:	madd	x15, x15, x13, x14
  460764:	cmp	x15, x8
  460768:	b.cs	4607b8 <feof@plt+0x5cf18>  // b.hs, b.nlast
  46076c:	add	x11, x12, x11
  460770:	lsr	x11, x11, #1
  460774:	mov	w12, #0x18                  	// #24
  460778:	madd	x11, x11, x12, x10
  46077c:	add	x11, x11, #0x18
  460780:	ldr	x12, [x11]
  460784:	cmp	x12, x21
  460788:	b.hi	4607b8 <feof@plt+0x5cf18>  // b.pmore
  46078c:	ldr	x12, [x11, #8]
  460790:	cmp	x12, x21
  460794:	b.ls	4607b4 <feof@plt+0x5cf14>  // b.plast
  460798:	sub	x12, x11, x10
  46079c:	asr	x12, x12, #3
  4607a0:	madd	x12, x12, x13, x14
  4607a4:	add	x9, x9, #0x18
  4607a8:	cmp	x12, x8
  4607ac:	add	x11, x11, #0x18
  4607b0:	b.cc	460780 <feof@plt+0x5cee0>  // b.lo, b.ul, b.last
  4607b4:	sub	x9, x11, #0x18
  4607b8:	ldr	x19, [x9, #16]
  4607bc:	cmp	x9, x10
  4607c0:	ldr	x8, [x19, #104]
  4607c4:	str	x8, [sp, #104]
  4607c8:	b.ls	460824 <feof@plt+0x5cf84>  // b.plast
  4607cc:	ldur	x10, [x9, #-24]
  4607d0:	cmp	x10, x21
  4607d4:	b.hi	460824 <feof@plt+0x5cf84>  // b.pmore
  4607d8:	ldur	x10, [x9, #-16]
  4607dc:	cmp	x10, x21
  4607e0:	b.ls	460824 <feof@plt+0x5cf84>  // b.plast
  4607e4:	ldr	w10, [x24, #8]
  4607e8:	cbz	w10, 4607f8 <feof@plt+0x5cf58>
  4607ec:	add	x8, x19, #0x68
  4607f0:	ldar	x8, [x8]
  4607f4:	str	x8, [sp, #104]
  4607f8:	cmn	x8, #0x1
  4607fc:	b.ne	460824 <feof@plt+0x5cf84>  // b.any
  460800:	ldur	x19, [x9, #-8]
  460804:	sub	x28, x9, #0x18
  460808:	mov	x9, x28
  46080c:	ldr	x8, [x19, #104]
  460810:	str	x8, [sp, #104]
  460814:	ldr	x10, [x25, #24]
  460818:	cmp	x28, x10
  46081c:	b.hi	4607cc <feof@plt+0x5cf2c>  // b.pmore
  460820:	b	460828 <feof@plt+0x5cf88>
  460824:	mov	x28, x9
  460828:	ldr	w9, [x24, #8]
  46082c:	cbz	w9, 46083c <feof@plt+0x5cf9c>
  460830:	add	x8, x19, #0x68
  460834:	ldar	x8, [x8]
  460838:	str	x8, [sp, #104]
  46083c:	cbz	x8, 46094c <feof@plt+0x5d0ac>
  460840:	mov	w9, wzr
  460844:	cmn	x8, #0x1
  460848:	b.eq	460bac <feof@plt+0x5d30c>  // b.none
  46084c:	ldr	x11, [x28, #16]
  460850:	ldr	x12, [x11, #112]
  460854:	cbz	x12, 4608a0 <feof@plt+0x5d000>
  460858:	mov	x13, xzr
  46085c:	mov	w10, #0x18                  	// #24
  460860:	b	460870 <feof@plt+0x5cfd0>
  460864:	cmp	x13, x9
  460868:	mov	x12, x9
  46086c:	b.cs	4608a0 <feof@plt+0x5d000>  // b.hs, b.nlast
  460870:	add	x9, x12, x13
  460874:	lsr	x9, x9, #1
  460878:	madd	x14, x9, x10, x8
  46087c:	ldr	x15, [x14]
  460880:	cmp	x15, x21
  460884:	b.hi	460864 <feof@plt+0x5cfc4>  // b.pmore
  460888:	ldr	x13, [x14, #24]
  46088c:	cmp	x13, x21
  460890:	b.hi	460a70 <feof@plt+0x5d1d0>  // b.pmore
  460894:	add	x13, x9, #0x1
  460898:	mov	x9, x12
  46089c:	b	460864 <feof@plt+0x5cfc4>
  4608a0:	ldr	x25, [x11, #80]
  4608a4:	cbnz	x25, 46093c <feof@plt+0x5d09c>
  4608a8:	ldr	x25, [x11, #64]
  4608ac:	cbz	x25, 460938 <feof@plt+0x5d098>
  4608b0:	ldrb	w8, [x25]
  4608b4:	cmp	w8, #0x2f
  4608b8:	b.eq	460938 <feof@plt+0x5d098>  // b.none
  4608bc:	ldr	x26, [x11, #72]
  4608c0:	cbz	x26, 460938 <feof@plt+0x5d098>
  4608c4:	mov	x0, x25
  4608c8:	str	x27, [sp, #24]
  4608cc:	bl	4030b0 <strlen@plt>
  4608d0:	mov	x19, x0
  4608d4:	mov	x0, x26
  4608d8:	bl	4030b0 <strlen@plt>
  4608dc:	add	x8, x19, x0
  4608e0:	mov	x27, x0
  4608e4:	add	x1, x8, #0x2
  4608e8:	mov	x0, x24
  4608ec:	mov	x2, x23
  4608f0:	mov	x3, x20
  4608f4:	str	x19, [sp, #16]
  4608f8:	bl	459b44 <feof@plt+0x562a4>
  4608fc:	cbz	x0, 46072c <feof@plt+0x5ce8c>
  460900:	mov	x1, x26
  460904:	mov	x2, x27
  460908:	mov	x23, x0
  46090c:	bl	402fc0 <memcpy@plt>
  460910:	add	x0, x23, x27
  460914:	mov	w8, #0x2f                  	// #47
  460918:	strb	w8, [x0], #1
  46091c:	ldr	x8, [sp, #16]
  460920:	mov	x1, x25
  460924:	add	x2, x8, #0x1
  460928:	bl	402fc0 <memcpy@plt>
  46092c:	ldr	x11, [x28, #16]
  460930:	ldr	x27, [sp, #24]
  460934:	mov	x25, x23
  460938:	str	x25, [x11, #80]
  46093c:	mov	x0, x20
  460940:	mov	x1, x21
  460944:	mov	x2, x25
  460948:	b	460be0 <feof@plt+0x5d340>
  46094c:	ldr	x4, [x28, #16]
  460950:	add	x5, sp, #0x28
  460954:	add	x6, sp, #0x68
  460958:	add	x7, sp, #0x20
  46095c:	mov	x0, x24
  460960:	mov	x1, x25
  460964:	mov	x2, x23
  460968:	mov	x3, x20
  46096c:	str	x27, [sp, #24]
  460970:	bl	460cac <feof@plt+0x5d40c>
  460974:	cbz	w0, 460a44 <feof@plt+0x5d1a4>
  460978:	ldr	w8, [x24, #8]
  46097c:	ldr	x26, [x28, #16]
  460980:	add	x27, x25, #0x80
  460984:	cmp	w8, #0x0
  460988:	csel	x8, x27, xzr, eq  // eq = none
  46098c:	str	x8, [sp, #16]
  460990:	cbnz	x8, 4609a0 <feof@plt+0x5d100>
  460994:	movi	v0.2d, #0x0
  460998:	sub	x27, x29, #0x30
  46099c:	stp	q0, q0, [x29, #-48]
  4609a0:	adrp	x8, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4609a4:	add	x8, x8, #0xcf4
  4609a8:	str	x8, [sp, #112]
  4609ac:	ldr	x8, [x25, #56]
  4609b0:	str	x8, [sp, #120]
  4609b4:	ldr	x8, [x26]
  4609b8:	str	x8, [sp, #128]
  4609bc:	ldr	x8, [x26, #8]
  4609c0:	str	x8, [sp, #136]
  4609c4:	ldr	w9, [x25, #120]
  4609c8:	stp	x23, x20, [sp, #152]
  4609cc:	str	wzr, [sp, #168]
  4609d0:	str	w9, [sp, #144]
  4609d4:	cbz	x8, 460a0c <feof@plt+0x5d16c>
  4609d8:	add	x4, sp, #0x70
  4609dc:	add	x5, sp, #0x28
  4609e0:	mov	x0, x24
  4609e4:	mov	x1, x25
  4609e8:	mov	x2, x26
  4609ec:	mov	x3, xzr
  4609f0:	mov	x6, x23
  4609f4:	mov	x7, x20
  4609f8:	stp	x27, x27, [sp]
  4609fc:	bl	462b24 <feof@plt+0x5f284>
  460a00:	cbz	w0, 460b28 <feof@plt+0x5d288>
  460a04:	ldr	x8, [sp, #136]
  460a08:	cbnz	x8, 4609d8 <feof@plt+0x5d138>
  460a0c:	ldr	x26, [x27, #24]
  460a10:	cbz	x26, 460ae8 <feof@plt+0x5d248>
  460a14:	ldr	x8, [sp, #16]
  460a18:	cbz	x8, 460af0 <feof@plt+0x5d250>
  460a1c:	mov	x0, x24
  460a20:	mov	x1, x8
  460a24:	mov	x2, x23
  460a28:	mov	x3, x20
  460a2c:	bl	459f20 <feof@plt+0x56680>
  460a30:	mov	x27, x0
  460a34:	cbz	x0, 460b2c <feof@plt+0x5d28c>
  460a38:	ldr	x8, [sp, #16]
  460a3c:	str	xzr, [x8, #24]
  460a40:	b	460b0c <feof@plt+0x5d26c>
  460a44:	mov	x27, xzr
  460a48:	mov	x26, xzr
  460a4c:	mov	w9, wzr
  460a50:	ldr	w8, [x24, #8]
  460a54:	cbnz	w8, 460b74 <feof@plt+0x5d2d4>
  460a58:	ldr	x8, [sp, #32]
  460a5c:	str	x26, [x19, #128]
  460a60:	stp	x8, x27, [x19, #112]
  460a64:	ldr	x8, [sp, #104]
  460a68:	str	x8, [x19, #104]
  460a6c:	b	460ba0 <feof@plt+0x5d300>
  460a70:	ldr	x10, [x11, #128]
  460a74:	cbz	x10, 460acc <feof@plt+0x5d22c>
  460a78:	ldr	x11, [x11, #120]
  460a7c:	mov	x13, xzr
  460a80:	mov	x14, x10
  460a84:	b	460a94 <feof@plt+0x5d1f4>
  460a88:	mov	x14, x15
  460a8c:	cmp	x13, x14
  460a90:	b.cs	460acc <feof@plt+0x5d22c>  // b.hs, b.nlast
  460a94:	add	x12, x14, x13
  460a98:	lsr	x15, x12, #1
  460a9c:	add	x12, x15, x15, lsl #1
  460aa0:	lsl	x16, x12, #3
  460aa4:	add	x12, x11, x16
  460aa8:	ldr	x17, [x12]
  460aac:	cmp	x17, x21
  460ab0:	b.hi	460a88 <feof@plt+0x5d1e8>  // b.pmore
  460ab4:	ldr	x17, [x12, #8]
  460ab8:	cmp	x17, x21
  460abc:	b.hi	460bf0 <feof@plt+0x5d350>  // b.pmore
  460ac0:	add	x13, x15, #0x1
  460ac4:	cmp	x13, x14
  460ac8:	b.cc	460a94 <feof@plt+0x5d1f4>  // b.lo, b.ul, b.last
  460acc:	mov	w10, #0x18                  	// #24
  460ad0:	madd	x8, x9, x10, x8
  460ad4:	ldr	x2, [x8, #8]
  460ad8:	ldr	w3, [x8, #16]
  460adc:	mov	x0, x20
  460ae0:	mov	x1, x21
  460ae4:	b	460be4 <feof@plt+0x5d344>
  460ae8:	mov	x27, xzr
  460aec:	b	460b30 <feof@plt+0x5d290>
  460af0:	sub	x1, x29, #0x30
  460af4:	mov	x0, x24
  460af8:	mov	x2, x23
  460afc:	mov	x3, x20
  460b00:	bl	459f30 <feof@plt+0x56690>
  460b04:	cbz	w0, 460b28 <feof@plt+0x5d288>
  460b08:	ldr	x27, [x27]
  460b0c:	adrp	x3, 463000 <feof@plt+0x5f760>
  460b10:	add	x3, x3, #0x2b8
  460b14:	mov	w2, #0x18                  	// #24
  460b18:	mov	x0, x27
  460b1c:	mov	x1, x26
  460b20:	bl	463c0c <feof@plt+0x6036c>
  460b24:	b	460b30 <feof@plt+0x5d290>
  460b28:	mov	x27, xzr
  460b2c:	mov	x26, xzr
  460b30:	ldr	x8, [sp, #72]
  460b34:	cbz	x8, 460b50 <feof@plt+0x5d2b0>
  460b38:	ldr	x1, [sp, #80]
  460b3c:	lsl	x2, x8, #3
  460b40:	mov	x0, x24
  460b44:	mov	x3, x23
  460b48:	mov	x4, x20
  460b4c:	bl	459d08 <feof@plt+0x56468>
  460b50:	ldp	x8, x1, [sp, #88]
  460b54:	mov	x0, x24
  460b58:	mov	x3, x23
  460b5c:	mov	x4, x20
  460b60:	lsl	x2, x8, #3
  460b64:	bl	459d08 <feof@plt+0x56468>
  460b68:	mov	w9, #0x1                   	// #1
  460b6c:	ldr	w8, [x24, #8]
  460b70:	cbz	w8, 460a58 <feof@plt+0x5d1b8>
  460b74:	ldr	x8, [sp, #32]
  460b78:	add	x10, x19, #0x70
  460b7c:	add	x11, x19, #0x78
  460b80:	add	x12, x19, #0x80
  460b84:	stlr	x8, [x10]
  460b88:	stlr	x27, [x11]
  460b8c:	stlr	x26, [x12]
  460b90:	ldr	x8, [sp, #104]
  460b94:	add	x10, x19, #0x68
  460b98:	stlr	x8, [x10]
  460b9c:	ldr	x8, [sp, #104]
  460ba0:	ldr	x27, [sp, #24]
  460ba4:	cmn	x8, #0x1
  460ba8:	b.ne	46084c <feof@plt+0x5cfac>  // b.any
  460bac:	cbz	w9, 460bd4 <feof@plt+0x5d334>
  460bb0:	mov	x0, x24
  460bb4:	mov	x1, x25
  460bb8:	mov	x2, x21
  460bbc:	mov	x3, x27
  460bc0:	mov	x4, x23
  460bc4:	mov	x5, x20
  460bc8:	mov	x6, x22
  460bcc:	bl	460688 <feof@plt+0x5cde8>
  460bd0:	b	460730 <feof@plt+0x5ce90>
  460bd4:	mov	x0, x20
  460bd8:	mov	x1, x21
  460bdc:	mov	x2, xzr
  460be0:	mov	w3, wzr
  460be4:	mov	x4, xzr
  460be8:	blr	x27
  460bec:	b	460730 <feof@plt+0x5ce90>
  460bf0:	mov	x15, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  460bf4:	asr	x17, x16, #3
  460bf8:	movk	x15, #0xaaab
  460bfc:	orr	x16, xzr, #0x1
  460c00:	madd	x17, x17, x15, x16
  460c04:	cmp	x17, x10
  460c08:	b.cs	460c58 <feof@plt+0x5d3b8>  // b.hs, b.nlast
  460c0c:	add	x13, x14, x13
  460c10:	lsr	x13, x13, #1
  460c14:	mov	w14, #0x18                  	// #24
  460c18:	madd	x13, x13, x14, x11
  460c1c:	add	x13, x13, #0x18
  460c20:	ldr	x14, [x13]
  460c24:	cmp	x14, x21
  460c28:	b.hi	460c54 <feof@plt+0x5d3b4>  // b.pmore
  460c2c:	ldr	x14, [x13, #8]
  460c30:	cmp	x14, x21
  460c34:	b.ls	460c58 <feof@plt+0x5d3b8>  // b.plast
  460c38:	sub	x14, x13, x11
  460c3c:	asr	x14, x14, #3
  460c40:	madd	x14, x14, x15, x16
  460c44:	add	x12, x12, #0x18
  460c48:	cmp	x14, x10
  460c4c:	add	x13, x13, #0x18
  460c50:	b.cc	460c20 <feof@plt+0x5d380>  // b.lo, b.ul, b.last
  460c54:	sub	x12, x13, #0x18
  460c58:	mov	w10, #0x18                  	// #24
  460c5c:	madd	x8, x9, x10, x8
  460c60:	ldr	x9, [x8, #8]
  460c64:	ldr	x22, [x12, #16]
  460c68:	add	x4, sp, #0x70
  460c6c:	add	x5, sp, #0x28
  460c70:	str	x9, [sp, #112]
  460c74:	ldr	w8, [x8, #16]
  460c78:	mov	x0, x21
  460c7c:	mov	x1, x22
  460c80:	mov	x2, x27
  460c84:	mov	x3, x20
  460c88:	str	w8, [sp, #40]
  460c8c:	bl	462988 <feof@plt+0x5f0e8>
  460c90:	cbnz	w0, 460730 <feof@plt+0x5ce90>
  460c94:	ldr	x2, [sp, #112]
  460c98:	ldr	w3, [sp, #40]
  460c9c:	ldr	x4, [x22]
  460ca0:	mov	x0, x20
  460ca4:	mov	x1, x21
  460ca8:	b	460be8 <feof@plt+0x5d348>
  460cac:	sub	sp, sp, #0x1f0
  460cb0:	stp	x29, x30, [sp, #400]
  460cb4:	stp	x28, x27, [sp, #416]
  460cb8:	stp	x26, x25, [sp, #432]
  460cbc:	stp	x24, x23, [sp, #448]
  460cc0:	stp	x22, x21, [sp, #464]
  460cc4:	stp	x20, x19, [sp, #480]
  460cc8:	add	x29, sp, #0x190
  460ccc:	movi	v0.2d, #0x0
  460cd0:	stp	q0, q0, [sp, #160]
  460cd4:	stp	q0, q0, [x5, #32]
  460cd8:	stp	q0, q0, [x5]
  460cdc:	ldr	x8, [x4, #56]
  460ce0:	ldr	x9, [x1, #80]
  460ce4:	mov	x23, x5
  460ce8:	mov	x21, x3
  460cec:	mov	x22, x2
  460cf0:	subs	x9, x9, x8
  460cf4:	mov	x19, x7
  460cf8:	stp	x7, x0, [sp, #80]
  460cfc:	str	x6, [sp, #72]
  460d00:	b.ls	460d8c <feof@plt+0x5d4ec>  // b.plast
  460d04:	adrp	x10, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460d08:	add	x10, x10, #0xd00
  460d0c:	str	x10, [sp, #96]
  460d10:	ldr	x10, [x1, #72]
  460d14:	mov	x20, x4
  460d18:	mov	x25, x1
  460d1c:	mov	x24, x0
  460d20:	add	x8, x10, x8
  460d24:	str	x10, [sp, #104]
  460d28:	stp	x8, x9, [sp, #112]
  460d2c:	ldr	w11, [x1, #120]
  460d30:	cmp	x9, #0x3
  460d34:	stp	x22, x21, [sp, #136]
  460d38:	str	wzr, [sp, #152]
  460d3c:	str	w11, [sp, #128]
  460d40:	b.hi	460da4 <feof@plt+0x5d504>  // b.pmore
  460d44:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460d48:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460d4c:	adrp	x4, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460d50:	sub	w5, w8, w10
  460d54:	add	x2, x2, #0xf77
  460d58:	add	x3, x3, #0xf67
  460d5c:	add	x4, x4, #0xd00
  460d60:	add	x0, sp, #0xc0
  460d64:	mov	w1, #0xc8                  	// #200
  460d68:	bl	403530 <snprintf@plt>
  460d6c:	ldp	x8, x0, [sp, #136]
  460d70:	add	x1, sp, #0xc0
  460d74:	mov	w2, wzr
  460d78:	blr	x8
  460d7c:	mov	w8, wzr
  460d80:	mov	w9, #0x1                   	// #1
  460d84:	str	w9, [sp, #152]
  460d88:	b	460df0 <feof@plt+0x5d550>
  460d8c:	adrp	x1, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  460d90:	add	x1, x1, #0x4a
  460d94:	mov	x0, x21
  460d98:	mov	w2, wzr
  460d9c:	blr	x22
  460da0:	b	460ed4 <feof@plt+0x5d634>
  460da4:	add	x10, x8, #0x4
  460da8:	sub	x9, x9, #0x4
  460dac:	stp	x10, x9, [sp, #112]
  460db0:	cbz	w11, 460dc8 <feof@plt+0x5d528>
  460db4:	ldrb	w9, [x8]
  460db8:	ldrb	w10, [x8, #1]
  460dbc:	ldrb	w11, [x8, #2]
  460dc0:	add	x8, x8, #0x3
  460dc4:	b	460dd4 <feof@plt+0x5d534>
  460dc8:	ldrb	w9, [x8, #3]
  460dcc:	ldrb	w10, [x8, #2]
  460dd0:	ldrb	w11, [x8, #1]
  460dd4:	lsl	w9, w9, #24
  460dd8:	bfi	w9, w10, #16, #8
  460ddc:	bfi	w9, w11, #8, #8
  460de0:	ldrb	w8, [x8]
  460de4:	orr	w8, w9, w8
  460de8:	cmn	w8, #0x1
  460dec:	b.eq	460fdc <feof@plt+0x5d73c>  // b.none
  460df0:	mov	w9, wzr
  460df4:	mov	w0, w8
  460df8:	ldr	x8, [sp, #112]
  460dfc:	cmp	x0, #0x1
  460e00:	str	x0, [sp, #120]
  460e04:	b.hi	460e60 <feof@plt+0x5d5c0>  // b.pmore
  460e08:	ldr	w9, [sp, #152]
  460e0c:	cbnz	w9, 460e54 <feof@plt+0x5d5b4>
  460e10:	ldr	w9, [sp, #104]
  460e14:	ldr	x4, [sp, #96]
  460e18:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460e1c:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460e20:	sub	w5, w8, w9
  460e24:	add	x2, x2, #0xf77
  460e28:	add	x3, x3, #0xf67
  460e2c:	add	x0, sp, #0xc0
  460e30:	mov	w1, #0xc8                  	// #200
  460e34:	bl	403530 <snprintf@plt>
  460e38:	ldp	x8, x0, [sp, #136]
  460e3c:	add	x1, sp, #0xc0
  460e40:	mov	w2, wzr
  460e44:	blr	x8
  460e48:	ldr	x8, [sp, #112]
  460e4c:	mov	w9, #0x1                   	// #1
  460e50:	str	w9, [sp, #152]
  460e54:	mov	x10, x8
  460e58:	str	wzr, [x23]
  460e5c:	b	460e9c <feof@plt+0x5d5fc>
  460e60:	ldr	w11, [sp, #128]
  460e64:	add	x10, x8, #0x2
  460e68:	sub	x12, x0, #0x2
  460e6c:	stp	x10, x12, [sp, #112]
  460e70:	cmp	w11, #0x0
  460e74:	cinc	x13, x8, eq  // eq = none
  460e78:	cinc	x14, x8, ne  // ne = any
  460e7c:	ldrb	w13, [x13]
  460e80:	ldrb	w14, [x14]
  460e84:	bfi	w14, w13, #8, #8
  460e88:	sub	w13, w14, #0x2
  460e8c:	and	w13, w13, #0xffff
  460e90:	cmp	w13, #0x2
  460e94:	str	w14, [x23]
  460e98:	b.ls	460f6c <feof@plt+0x5d6cc>  // b.plast
  460e9c:	ldr	w8, [sp, #104]
  460ea0:	ldr	x4, [sp, #96]
  460ea4:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460ea8:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  460eac:	sub	w5, w10, w8
  460eb0:	add	x2, x2, #0xf77
  460eb4:	add	x3, x3, #0x68
  460eb8:	add	x0, sp, #0xc0
  460ebc:	mov	w1, #0xc8                  	// #200
  460ec0:	bl	403530 <snprintf@plt>
  460ec4:	ldp	x8, x0, [sp, #136]
  460ec8:	add	x1, sp, #0xc0
  460ecc:	mov	w2, wzr
  460ed0:	blr	x8
  460ed4:	ldp	x8, x9, [sp, #168]
  460ed8:	ldr	x19, [sp, #88]
  460edc:	add	x1, sp, #0xa0
  460ee0:	mov	x2, x22
  460ee4:	add	x8, x9, x8
  460ee8:	mov	x0, x19
  460eec:	mov	x3, x21
  460ef0:	stp	xzr, x8, [sp, #168]
  460ef4:	bl	459f30 <feof@plt+0x56690>
  460ef8:	ldr	x8, [x23, #32]
  460efc:	cbz	x8, 460f18 <feof@plt+0x5d678>
  460f00:	ldr	x1, [x23, #40]
  460f04:	lsl	x2, x8, #3
  460f08:	mov	x0, x19
  460f0c:	mov	x3, x22
  460f10:	mov	x4, x21
  460f14:	bl	459d08 <feof@plt+0x56468>
  460f18:	ldp	x8, x1, [x23, #48]
  460f1c:	mov	x0, x19
  460f20:	mov	x3, x22
  460f24:	mov	x4, x21
  460f28:	lsl	x2, x8, #3
  460f2c:	bl	459d08 <feof@plt+0x56468>
  460f30:	ldr	x10, [sp, #72]
  460f34:	mov	x9, #0xffffffffffffffff    	// #-1
  460f38:	mov	x8, xzr
  460f3c:	mov	w0, wzr
  460f40:	str	x9, [x10]
  460f44:	ldr	x9, [sp, #80]
  460f48:	str	x8, [x9]
  460f4c:	ldp	x20, x19, [sp, #480]
  460f50:	ldp	x22, x21, [sp, #464]
  460f54:	ldp	x24, x23, [sp, #448]
  460f58:	ldp	x26, x25, [sp, #432]
  460f5c:	ldp	x28, x27, [sp, #416]
  460f60:	ldp	x29, x30, [sp, #400]
  460f64:	add	sp, sp, #0x1f0
  460f68:	ret
  460f6c:	cbz	w9, 461014 <feof@plt+0x5d774>
  460f70:	add	x0, sp, #0x60
  460f74:	bl	45f1d4 <feof@plt+0x5b934>
  460f78:	ldr	x9, [sp, #96]
  460f7c:	ldp	x19, x8, [sp, #112]
  460f80:	ldr	w27, [sp, #152]
  460f84:	str	x9, [sp, #64]
  460f88:	ldr	x9, [sp, #104]
  460f8c:	subs	x8, x8, x0
  460f90:	str	x9, [sp, #56]
  460f94:	b.cs	460fec <feof@plt+0x5d74c>  // b.hs, b.nlast
  460f98:	cbnz	w27, 460ed4 <feof@plt+0x5d634>
  460f9c:	ldp	x8, x4, [sp, #56]
  460fa0:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460fa4:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  460fa8:	add	x2, x2, #0xf77
  460fac:	sub	w5, w19, w8
  460fb0:	add	x3, x3, #0xf67
  460fb4:	add	x0, sp, #0xc0
  460fb8:	mov	w1, #0xc8                  	// #200
  460fbc:	bl	403530 <snprintf@plt>
  460fc0:	ldp	x8, x0, [sp, #136]
  460fc4:	add	x1, sp, #0xc0
  460fc8:	mov	w2, wzr
  460fcc:	blr	x8
  460fd0:	mov	w8, #0x1                   	// #1
  460fd4:	str	w8, [sp, #152]
  460fd8:	b	460ed4 <feof@plt+0x5d634>
  460fdc:	add	x0, sp, #0x60
  460fe0:	bl	45f1d4 <feof@plt+0x5b934>
  460fe4:	mov	w9, #0x1                   	// #1
  460fe8:	b	460df8 <feof@plt+0x5d558>
  460fec:	ldr	x9, [sp, #136]
  460ff0:	str	x9, [sp, #40]
  460ff4:	ldr	x9, [sp, #144]
  460ff8:	str	x9, [sp, #48]
  460ffc:	add	x9, x19, x0
  461000:	stp	x9, x8, [sp, #112]
  461004:	cbz	x0, 46102c <feof@plt+0x5d78c>
  461008:	ldrb	w9, [x19], #1
  46100c:	sub	x8, x0, #0x1
  461010:	b	4610e4 <feof@plt+0x5d844>
  461014:	cmp	x12, #0x3
  461018:	b.hi	46103c <feof@plt+0x5d79c>  // b.pmore
  46101c:	ldr	w8, [sp, #152]
  461020:	cbz	w8, 46105c <feof@plt+0x5d7bc>
  461024:	mov	x0, xzr
  461028:	b	460f78 <feof@plt+0x5d6d8>
  46102c:	cbz	w27, 4610a4 <feof@plt+0x5d804>
  461030:	mov	x8, xzr
  461034:	mov	w9, wzr
  461038:	b	4610e4 <feof@plt+0x5d844>
  46103c:	add	x9, x8, #0x6
  461040:	sub	x10, x0, #0x6
  461044:	stp	x9, x10, [sp, #112]
  461048:	cbz	w11, 46111c <feof@plt+0x5d87c>
  46104c:	ldur	w8, [x8, #2]
  461050:	lsl	x8, x8, #32
  461054:	rev	x0, x8
  461058:	b	460f78 <feof@plt+0x5d6d8>
  46105c:	ldr	w8, [sp, #104]
  461060:	ldr	x4, [sp, #96]
  461064:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461068:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  46106c:	sub	w5, w10, w8
  461070:	add	x2, x2, #0xf77
  461074:	add	x3, x3, #0xf67
  461078:	add	x0, sp, #0xc0
  46107c:	mov	w1, #0xc8                  	// #200
  461080:	bl	403530 <snprintf@plt>
  461084:	ldp	x8, x0, [sp, #136]
  461088:	add	x1, sp, #0xc0
  46108c:	mov	w2, wzr
  461090:	blr	x8
  461094:	mov	w8, #0x1                   	// #1
  461098:	mov	x0, xzr
  46109c:	str	w8, [sp, #152]
  4610a0:	b	460f78 <feof@plt+0x5d6d8>
  4610a4:	ldp	x8, x4, [sp, #56]
  4610a8:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4610ac:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4610b0:	add	x2, x2, #0xf77
  4610b4:	sub	w5, w19, w8
  4610b8:	add	x3, x3, #0xf67
  4610bc:	add	x0, sp, #0xc0
  4610c0:	mov	w1, #0xc8                  	// #200
  4610c4:	bl	403530 <snprintf@plt>
  4610c8:	ldp	x8, x0, [sp, #40]
  4610cc:	add	x1, sp, #0xc0
  4610d0:	mov	w2, wzr
  4610d4:	blr	x8
  4610d8:	mov	x8, xzr
  4610dc:	mov	w9, wzr
  4610e0:	mov	w27, #0x1                   	// #1
  4610e4:	ldr	w10, [x23]
  4610e8:	str	w9, [x23, #4]
  4610ec:	cmp	w10, #0x4
  4610f0:	b.ge	4610fc <feof@plt+0x5d85c>  // b.tcont
  4610f4:	mov	w9, #0x1                   	// #1
  4610f8:	b	461164 <feof@plt+0x5d8c4>
  4610fc:	cbz	x8, 46110c <feof@plt+0x5d86c>
  461100:	ldrb	w9, [x19], #1
  461104:	sub	x8, x8, #0x1
  461108:	b	461164 <feof@plt+0x5d8c4>
  46110c:	cbz	w27, 461124 <feof@plt+0x5d884>
  461110:	mov	x8, xzr
  461114:	mov	w9, wzr
  461118:	b	461164 <feof@plt+0x5d8c4>
  46111c:	ldur	w0, [x8, #2]
  461120:	b	460f78 <feof@plt+0x5d6d8>
  461124:	ldp	x8, x4, [sp, #56]
  461128:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  46112c:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461130:	add	x2, x2, #0xf77
  461134:	sub	w5, w19, w8
  461138:	add	x3, x3, #0xf67
  46113c:	add	x0, sp, #0xc0
  461140:	mov	w1, #0xc8                  	// #200
  461144:	bl	403530 <snprintf@plt>
  461148:	ldp	x8, x0, [sp, #40]
  46114c:	add	x1, sp, #0xc0
  461150:	mov	w2, wzr
  461154:	blr	x8
  461158:	mov	x8, xzr
  46115c:	mov	w9, wzr
  461160:	mov	w27, #0x1                   	// #1
  461164:	str	w9, [x23, #8]
  461168:	cbz	x8, 461178 <feof@plt+0x5d8d8>
  46116c:	cmp	x8, #0x1
  461170:	b.ne	461260 <feof@plt+0x5d9c0>  // b.any
  461174:	add	x19, x19, #0x1
  461178:	cbnz	w27, 4611b4 <feof@plt+0x5d914>
  46117c:	ldp	x8, x4, [sp, #56]
  461180:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461184:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461188:	add	x2, x2, #0xf77
  46118c:	sub	w5, w19, w8
  461190:	add	x3, x3, #0xf67
  461194:	add	x0, sp, #0xc0
  461198:	mov	w1, #0xc8                  	// #200
  46119c:	bl	403530 <snprintf@plt>
  4611a0:	ldp	x8, x0, [sp, #40]
  4611a4:	add	x1, sp, #0xc0
  4611a8:	mov	w2, wzr
  4611ac:	blr	x8
  4611b0:	mov	w27, #0x1                   	// #1
  4611b4:	str	wzr, [x23, #12]
  4611b8:	mov	x8, xzr
  4611bc:	mov	w9, wzr
  4611c0:	str	wzr, [x23, #16]
  4611c4:	str	w9, [x23, #20]
  4611c8:	sub	w9, w9, #0x1
  4611cc:	subs	x28, x8, x9
  4611d0:	str	x19, [x23, #24]
  4611d4:	b.cs	4611e8 <feof@plt+0x5d948>  // b.hs, b.nlast
  4611d8:	cbnz	w27, 460ed4 <feof@plt+0x5d634>
  4611dc:	ldr	x8, [sp, #56]
  4611e0:	sub	w5, w19, w8
  4611e4:	b	4617ec <feof@plt+0x5df4c>
  4611e8:	stp	x25, x20, [sp]
  4611ec:	add	x25, x19, x9
  4611f0:	str	xzr, [x23, #32]
  4611f4:	b.le	4612b4 <feof@plt+0x5da14>
  4611f8:	mov	x20, xzr
  4611fc:	add	x26, x19, x8
  461200:	mov	x19, x25
  461204:	ldrb	w8, [x19]
  461208:	cbz	w8, 461230 <feof@plt+0x5d990>
  46120c:	sub	x1, x26, x19
  461210:	mov	x0, x19
  461214:	bl	4037e0 <strnlen@plt>
  461218:	add	x8, x0, x19
  46121c:	add	x19, x8, #0x1
  461220:	add	x20, x20, #0x1
  461224:	cmp	x19, x26
  461228:	str	x20, [x23, #32]
  46122c:	b.cc	461204 <feof@plt+0x5d964>  // b.lo, b.ul, b.last
  461230:	mov	x26, x23
  461234:	str	xzr, [x26, #40]!
  461238:	str	x26, [sp, #32]
  46123c:	cbz	x20, 4612ec <feof@plt+0x5da4c>
  461240:	ldp	x2, x3, [sp, #136]
  461244:	lsl	x1, x20, #3
  461248:	mov	x0, x24
  46124c:	bl	459b44 <feof@plt+0x562a4>
  461250:	mov	x19, x0
  461254:	str	x0, [x26]
  461258:	cbnz	x0, 4612f0 <feof@plt+0x5da50>
  46125c:	b	460ed4 <feof@plt+0x5d634>
  461260:	ldrsb	w9, [x19, #1]
  461264:	cmp	x8, #0x2
  461268:	str	w9, [x23, #12]
  46126c:	b.ne	4612c8 <feof@plt+0x5da28>  // b.any
  461270:	add	x19, x19, #0x2
  461274:	cbnz	w27, 4611b8 <feof@plt+0x5d918>
  461278:	ldp	x8, x4, [sp, #56]
  46127c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461280:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461284:	add	x2, x2, #0xf77
  461288:	sub	w5, w19, w8
  46128c:	add	x3, x3, #0xf67
  461290:	add	x0, sp, #0xc0
  461294:	mov	w1, #0xc8                  	// #200
  461298:	bl	403530 <snprintf@plt>
  46129c:	ldp	x8, x0, [sp, #40]
  4612a0:	add	x1, sp, #0xc0
  4612a4:	mov	w2, wzr
  4612a8:	blr	x8
  4612ac:	mov	w27, #0x1                   	// #1
  4612b0:	b	4611b8 <feof@plt+0x5d918>
  4612b4:	mov	x8, x23
  4612b8:	str	xzr, [x8, #40]!
  4612bc:	mov	x19, xzr
  4612c0:	str	x8, [sp, #32]
  4612c4:	b	4612f0 <feof@plt+0x5da50>
  4612c8:	ldrb	w9, [x19, #2]
  4612cc:	cmp	x8, #0x3
  4612d0:	str	w9, [x23, #16]
  4612d4:	b.ne	461814 <feof@plt+0x5df74>  // b.any
  4612d8:	add	x19, x19, #0x3
  4612dc:	cbz	w27, 46183c <feof@plt+0x5df9c>
  4612e0:	mov	x8, xzr
  4612e4:	mov	w9, wzr
  4612e8:	b	4611c4 <feof@plt+0x5d924>
  4612ec:	mov	x19, xzr
  4612f0:	ldrb	w8, [x25]
  4612f4:	cbz	w8, 46139c <feof@plt+0x5dafc>
  4612f8:	mov	x26, xzr
  4612fc:	mov	x20, x25
  461300:	cbnz	w27, 460ed4 <feof@plt+0x5d634>
  461304:	mov	x0, x25
  461308:	mov	x1, x28
  46130c:	bl	4037e0 <strnlen@plt>
  461310:	add	x9, x0, #0x1
  461314:	subs	x8, x28, x9
  461318:	b.cs	461364 <feof@plt+0x5dac4>  // b.hs, b.nlast
  46131c:	ldp	x8, x4, [sp, #56]
  461320:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461324:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461328:	add	x0, sp, #0xc0
  46132c:	sub	w5, w20, w8
  461330:	mov	w1, #0xc8                  	// #200
  461334:	add	x2, x2, #0xf77
  461338:	add	x3, x3, #0xf67
  46133c:	bl	403530 <snprintf@plt>
  461340:	ldp	x8, x0, [sp, #40]
  461344:	add	x1, sp, #0xc0
  461348:	mov	w2, wzr
  46134c:	blr	x8
  461350:	ldr	x8, [sp, #32]
  461354:	mov	x25, xzr
  461358:	mov	w27, #0x1                   	// #1
  46135c:	ldr	x19, [x8]
  461360:	b	461374 <feof@plt+0x5dad4>
  461364:	mov	x28, x8
  461368:	ldr	x8, [sp, #32]
  46136c:	mov	w27, wzr
  461370:	add	x20, x25, x9
  461374:	str	x25, [x19, x26]
  461378:	ldr	x19, [x8]
  46137c:	ldr	x8, [x19, x26]
  461380:	cbz	x8, 460ed4 <feof@plt+0x5d634>
  461384:	ldrb	w8, [x20]
  461388:	add	x26, x26, #0x8
  46138c:	mov	x25, x20
  461390:	cbnz	w8, 461300 <feof@plt+0x5da60>
  461394:	mov	x25, x20
  461398:	b	4613a0 <feof@plt+0x5db00>
  46139c:	mov	x20, x25
  4613a0:	ldr	x24, [sp, #88]
  4613a4:	cbz	x28, 4617e0 <feof@plt+0x5df40>
  4613a8:	mov	x19, xzr
  4613ac:	add	x20, x25, #0x1
  4613b0:	cmp	x28, #0x2
  4613b4:	str	xzr, [x23, #48]
  4613b8:	b.lt	461488 <feof@plt+0x5dbe8>  // b.tstop
  4613bc:	mov	x19, xzr
  4613c0:	add	x26, x25, x28
  4613c4:	mov	x25, x20
  4613c8:	b	4613e4 <feof@plt+0x5db44>
  4613cc:	mov	w8, #0x1                   	// #1
  4613d0:	add	x25, x9, x8
  4613d4:	add	x19, x19, #0x1
  4613d8:	cmp	x25, x26
  4613dc:	str	x19, [x23, #48]
  4613e0:	b.cs	461488 <feof@plt+0x5dbe8>  // b.hs, b.nlast
  4613e4:	ldrb	w8, [x25]
  4613e8:	cbz	w8, 461488 <feof@plt+0x5dbe8>
  4613ec:	sub	x1, x26, x25
  4613f0:	mov	x0, x25
  4613f4:	bl	4037e0 <strnlen@plt>
  4613f8:	add	x9, x0, x25
  4613fc:	ldrsb	w8, [x9, #1]!
  461400:	tbnz	w8, #31, 46140c <feof@plt+0x5db6c>
  461404:	mov	w8, #0x1                   	// #1
  461408:	b	461424 <feof@plt+0x5db84>
  46140c:	add	x8, x25, x0
  461410:	mov	w10, #0x2                   	// #2
  461414:	ldrsb	w11, [x8, x10]
  461418:	add	x10, x10, #0x1
  46141c:	tbnz	w11, #31, 461414 <feof@plt+0x5db74>
  461420:	sub	x8, x10, #0x1
  461424:	add	x9, x9, x8
  461428:	ldrsb	w10, [x9]
  46142c:	tbnz	w10, #31, 461438 <feof@plt+0x5db98>
  461430:	mov	w11, #0x1                   	// #1
  461434:	b	461454 <feof@plt+0x5dbb4>
  461438:	add	x10, x0, x8
  46143c:	add	x10, x25, x10
  461440:	mov	w11, #0x2                   	// #2
  461444:	ldrsb	w12, [x10, x11]
  461448:	add	x11, x11, #0x1
  46144c:	tbnz	w12, #31, 461444 <feof@plt+0x5dba4>
  461450:	sub	x11, x11, #0x1
  461454:	add	x9, x9, x11
  461458:	ldrsb	w10, [x9]
  46145c:	tbz	w10, #31, 4613cc <feof@plt+0x5db2c>
  461460:	add	x8, x0, x8
  461464:	add	x8, x8, x11
  461468:	add	x8, x25, x8
  46146c:	mov	x10, xzr
  461470:	add	x8, x8, #0x2
  461474:	ldrsb	w11, [x8, x10]
  461478:	add	x10, x10, #0x1
  46147c:	tbnz	w11, #31, 461474 <feof@plt+0x5dbd4>
  461480:	add	x8, x10, #0x1
  461484:	b	4613d0 <feof@plt+0x5db30>
  461488:	ldp	x2, x3, [sp, #136]
  46148c:	lsl	x1, x19, #3
  461490:	mov	x0, x24
  461494:	bl	459b44 <feof@plt+0x562a4>
  461498:	str	x0, [x23, #56]
  46149c:	cbz	x0, 460ed4 <feof@plt+0x5d634>
  4614a0:	ldrb	w9, [x20]
  4614a4:	cmp	w27, #0x0
  4614a8:	cset	w8, eq  // eq = none
  4614ac:	cbz	w9, 461824 <feof@plt+0x5df84>
  4614b0:	sub	x25, x28, #0x1
  4614b4:	str	xzr, [sp, #16]
  4614b8:	b	4614d8 <feof@plt+0x5dc38>
  4614bc:	ldr	w8, [sp, #24]
  4614c0:	ldrb	w9, [x20]
  4614c4:	cmp	w8, #0x0
  4614c8:	add	x28, x28, #0x1
  4614cc:	cset	w8, eq  // eq = none
  4614d0:	str	x28, [sp, #16]
  4614d4:	cbz	w9, 461824 <feof@plt+0x5df84>
  4614d8:	tbz	w8, #0, 460ed4 <feof@plt+0x5d634>
  4614dc:	mov	x0, x20
  4614e0:	mov	x1, x25
  4614e4:	bl	4037e0 <strnlen@plt>
  4614e8:	add	x9, x0, #0x1
  4614ec:	subs	x25, x25, x9
  4614f0:	b.cc	4617e4 <feof@plt+0x5df44>  // b.lo, b.ul, b.last
  4614f4:	mov	x26, xzr
  4614f8:	mov	w27, wzr
  4614fc:	mov	w8, wzr
  461500:	add	x19, x20, x9
  461504:	b	461520 <feof@plt+0x5dc80>
  461508:	and	x9, x28, #0x7f
  46150c:	lsl	x9, x9, x27
  461510:	orr	x26, x9, x26
  461514:	sxtb	w9, w28
  461518:	add	w27, w27, #0x7
  46151c:	tbz	w9, #31, 4615b8 <feof@plt+0x5dd18>
  461520:	cbz	x25, 461574 <feof@plt+0x5dcd4>
  461524:	ldrb	w28, [x19], #1
  461528:	cmp	w27, #0x3f
  46152c:	sub	x25, x25, #0x1
  461530:	b.ls	461508 <feof@plt+0x5dc68>  // b.plast
  461534:	cbnz	w8, 461514 <feof@plt+0x5dc74>
  461538:	ldp	x8, x4, [sp, #56]
  46153c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461540:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  461544:	add	x0, sp, #0xc0
  461548:	sub	w5, w19, w8
  46154c:	mov	w1, #0xc8                  	// #200
  461550:	add	x2, x2, #0xf77
  461554:	add	x3, x3, #0x30
  461558:	bl	403530 <snprintf@plt>
  46155c:	ldp	x8, x0, [sp, #40]
  461560:	add	x1, sp, #0xc0
  461564:	mov	w2, wzr
  461568:	blr	x8
  46156c:	mov	w8, #0x1                   	// #1
  461570:	b	461514 <feof@plt+0x5dc74>
  461574:	ldp	x8, x4, [sp, #56]
  461578:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  46157c:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461580:	add	x0, sp, #0xc0
  461584:	sub	w5, w19, w8
  461588:	mov	w1, #0xc8                  	// #200
  46158c:	add	x2, x2, #0xf77
  461590:	add	x3, x3, #0xf67
  461594:	bl	403530 <snprintf@plt>
  461598:	ldp	x27, x0, [sp, #40]
  46159c:	add	x1, sp, #0xc0
  4615a0:	mov	w2, wzr
  4615a4:	blr	x27
  4615a8:	mov	w8, #0x1                   	// #1
  4615ac:	mov	x26, xzr
  4615b0:	str	w8, [sp, #24]
  4615b4:	b	4615c0 <feof@plt+0x5dd20>
  4615b8:	ldr	x27, [sp, #40]
  4615bc:	str	wzr, [sp, #24]
  4615c0:	ldrb	w8, [x20]
  4615c4:	ldr	x28, [sp, #16]
  4615c8:	cmp	w8, #0x2f
  4615cc:	b.eq	461664 <feof@plt+0x5ddc4>  // b.none
  4615d0:	cbz	x26, 4615f4 <feof@plt+0x5dd54>
  4615d4:	ldr	x9, [x23, #32]
  4615d8:	sub	x8, x26, #0x1
  4615dc:	cmp	x8, x9
  4615e0:	b.cs	462884 <feof@plt+0x5efe4>  // b.hs, b.nlast
  4615e4:	ldr	x9, [sp, #32]
  4615e8:	ldr	x9, [x9]
  4615ec:	ldr	x0, [x9, x8, lsl #3]
  4615f0:	b	461600 <feof@plt+0x5dd60>
  4615f4:	ldr	x8, [sp, #8]
  4615f8:	ldr	x0, [x8, #72]
  4615fc:	cbz	x0, 461664 <feof@plt+0x5ddc4>
  461600:	mov	x24, x0
  461604:	bl	4030b0 <strlen@plt>
  461608:	mov	x28, x0
  46160c:	mov	x0, x20
  461610:	bl	4030b0 <strlen@plt>
  461614:	ldp	x2, x3, [sp, #136]
  461618:	mov	x27, x0
  46161c:	add	x8, x28, x0
  461620:	ldr	x0, [sp, #88]
  461624:	add	x1, x8, #0x2
  461628:	bl	459b44 <feof@plt+0x562a4>
  46162c:	cbz	x0, 460ed4 <feof@plt+0x5d634>
  461630:	mov	x1, x24
  461634:	mov	x2, x28
  461638:	mov	x26, x0
  46163c:	bl	402fc0 <memcpy@plt>
  461640:	add	x0, x26, x28
  461644:	mov	w8, #0x2f                  	// #47
  461648:	strb	w8, [x0], #1
  46164c:	add	x2, x27, #0x1
  461650:	mov	x1, x20
  461654:	bl	402fc0 <memcpy@plt>
  461658:	ldr	x27, [sp, #40]
  46165c:	ldr	x28, [sp, #16]
  461660:	mov	x20, x26
  461664:	ldr	x9, [x23, #56]
  461668:	mov	w26, wzr
  46166c:	mov	w8, wzr
  461670:	str	x20, [x9, x28, lsl #3]
  461674:	b	461680 <feof@plt+0x5dde0>
  461678:	add	w26, w26, #0x7
  46167c:	tbz	w20, #31, 461724 <feof@plt+0x5de84>
  461680:	cbz	x25, 4616d4 <feof@plt+0x5de34>
  461684:	ldrsb	w20, [x19], #1
  461688:	cmp	w26, #0x40
  46168c:	sub	x25, x25, #0x1
  461690:	b.cc	461678 <feof@plt+0x5ddd8>  // b.lo, b.ul, b.last
  461694:	cbnz	w8, 461678 <feof@plt+0x5ddd8>
  461698:	ldp	x8, x4, [sp, #56]
  46169c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4616a0:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  4616a4:	add	x0, sp, #0xc0
  4616a8:	sub	w5, w19, w8
  4616ac:	mov	w1, #0xc8                  	// #200
  4616b0:	add	x2, x2, #0xf77
  4616b4:	add	x3, x3, #0x30
  4616b8:	bl	403530 <snprintf@plt>
  4616bc:	ldr	x0, [sp, #48]
  4616c0:	add	x1, sp, #0xc0
  4616c4:	mov	w2, wzr
  4616c8:	blr	x27
  4616cc:	mov	w8, #0x1                   	// #1
  4616d0:	b	461678 <feof@plt+0x5ddd8>
  4616d4:	ldr	w8, [sp, #24]
  4616d8:	cbz	w8, 4616e4 <feof@plt+0x5de44>
  4616dc:	mov	x25, xzr
  4616e0:	b	461724 <feof@plt+0x5de84>
  4616e4:	ldp	x8, x4, [sp, #56]
  4616e8:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4616ec:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4616f0:	add	x0, sp, #0xc0
  4616f4:	sub	w5, w19, w8
  4616f8:	mov	w1, #0xc8                  	// #200
  4616fc:	add	x2, x2, #0xf77
  461700:	add	x3, x3, #0xf67
  461704:	bl	403530 <snprintf@plt>
  461708:	ldr	x0, [sp, #48]
  46170c:	add	x1, sp, #0xc0
  461710:	mov	w2, wzr
  461714:	blr	x27
  461718:	mov	w8, #0x1                   	// #1
  46171c:	mov	x25, xzr
  461720:	str	w8, [sp, #24]
  461724:	mov	w26, wzr
  461728:	mov	w8, wzr
  46172c:	mov	x20, x19
  461730:	b	46173c <feof@plt+0x5de9c>
  461734:	add	w26, w26, #0x7
  461738:	tbz	w19, #31, 4614bc <feof@plt+0x5dc1c>
  46173c:	cbz	x25, 461790 <feof@plt+0x5def0>
  461740:	ldrsb	w19, [x20], #1
  461744:	cmp	w26, #0x40
  461748:	sub	x25, x25, #0x1
  46174c:	b.cc	461734 <feof@plt+0x5de94>  // b.lo, b.ul, b.last
  461750:	cbnz	w8, 461734 <feof@plt+0x5de94>
  461754:	ldp	x8, x4, [sp, #56]
  461758:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  46175c:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  461760:	add	x0, sp, #0xc0
  461764:	sub	w5, w20, w8
  461768:	mov	w1, #0xc8                  	// #200
  46176c:	add	x2, x2, #0xf77
  461770:	add	x3, x3, #0x30
  461774:	bl	403530 <snprintf@plt>
  461778:	ldr	x0, [sp, #48]
  46177c:	add	x1, sp, #0xc0
  461780:	mov	w2, wzr
  461784:	blr	x27
  461788:	mov	w8, #0x1                   	// #1
  46178c:	b	461734 <feof@plt+0x5de94>
  461790:	ldr	w8, [sp, #24]
  461794:	cbz	w8, 4617a0 <feof@plt+0x5df00>
  461798:	mov	x25, xzr
  46179c:	b	4614c0 <feof@plt+0x5dc20>
  4617a0:	ldp	x8, x4, [sp, #56]
  4617a4:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4617a8:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4617ac:	add	x0, sp, #0xc0
  4617b0:	sub	w5, w20, w8
  4617b4:	mov	w1, #0xc8                  	// #200
  4617b8:	add	x2, x2, #0xf77
  4617bc:	add	x3, x3, #0xf67
  4617c0:	bl	403530 <snprintf@plt>
  4617c4:	ldr	x0, [sp, #48]
  4617c8:	add	x1, sp, #0xc0
  4617cc:	mov	w2, wzr
  4617d0:	blr	x27
  4617d4:	mov	x25, xzr
  4617d8:	mov	w8, #0x1                   	// #1
  4617dc:	b	4614c0 <feof@plt+0x5dc20>
  4617e0:	cbnz	w27, 460ed4 <feof@plt+0x5d634>
  4617e4:	ldr	x8, [sp, #56]
  4617e8:	sub	w5, w20, w8
  4617ec:	ldr	x4, [sp, #64]
  4617f0:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4617f4:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4617f8:	add	x2, x2, #0xf77
  4617fc:	add	x3, x3, #0xf67
  461800:	add	x0, sp, #0xc0
  461804:	mov	w1, #0xc8                  	// #200
  461808:	bl	403530 <snprintf@plt>
  46180c:	ldp	x8, x0, [sp, #40]
  461810:	b	460ec8 <feof@plt+0x5d628>
  461814:	ldrb	w9, [x19, #3]
  461818:	add	x19, x19, #0x4
  46181c:	sub	x8, x8, #0x4
  461820:	b	4611c4 <feof@plt+0x5d924>
  461824:	cbz	w8, 460ed4 <feof@plt+0x5d634>
  461828:	ldr	x8, [x23, #48]
  46182c:	cbz	x8, 461880 <feof@plt+0x5dfe0>
  461830:	ldr	x8, [x23, #56]
  461834:	ldr	x27, [x8]
  461838:	b	461888 <feof@plt+0x5dfe8>
  46183c:	ldp	x8, x4, [sp, #56]
  461840:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461844:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461848:	add	x2, x2, #0xf77
  46184c:	sub	w5, w19, w8
  461850:	add	x3, x3, #0xf67
  461854:	add	x0, sp, #0xc0
  461858:	mov	w1, #0xc8                  	// #200
  46185c:	bl	403530 <snprintf@plt>
  461860:	ldp	x8, x0, [sp, #40]
  461864:	add	x1, sp, #0xc0
  461868:	mov	w2, wzr
  46186c:	blr	x8
  461870:	mov	x8, xzr
  461874:	mov	w9, wzr
  461878:	mov	w27, #0x1                   	// #1
  46187c:	b	4611c4 <feof@plt+0x5d924>
  461880:	adrp	x27, 48f000 <_obstack_memory_used@@Base+0x132fc>
  461884:	add	x27, x27, #0x23b
  461888:	ldr	x26, [sp]
  46188c:	ldr	x24, [sp, #88]
  461890:	ldr	x20, [sp, #120]
  461894:	mov	w8, #0x1                   	// #1
  461898:	str	w8, [sp, #56]
  46189c:	cbz	x20, 4627fc <feof@plt+0x5ef5c>
  4618a0:	ldr	x8, [sp, #8]
  4618a4:	adrp	x19, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4618a8:	mov	x28, xzr
  4618ac:	mov	w0, wzr
  4618b0:	add	x8, x8, #0x48
  4618b4:	add	x19, x19, #0xed4
  4618b8:	mov	w25, #0x1                   	// #1
  4618bc:	str	x8, [sp, #32]
  4618c0:	str	x27, [sp, #48]
  4618c4:	ldr	x10, [sp, #112]
  4618c8:	sub	x9, x20, #0x1
  4618cc:	str	w0, [sp, #64]
  4618d0:	add	x8, x10, #0x1
  4618d4:	stp	x8, x9, [sp, #112]
  4618d8:	ldrb	w12, [x10]
  4618dc:	ldr	w11, [x23, #20]
  4618e0:	cmp	w11, w12
  4618e4:	b.ls	4619a4 <feof@plt+0x5e104>  // b.plast
  4618e8:	cmp	w12, #0xc
  4618ec:	b.hi	461a34 <feof@plt+0x5e194>  // b.pmore
  4618f0:	adr	x13, 461900 <feof@plt+0x5e060>
  4618f4:	ldrh	w14, [x19, x12, lsl #1]
  4618f8:	add	x13, x13, x14, lsl #2
  4618fc:	br	x13
  461900:	cbz	x9, 461994 <feof@plt+0x5e0f4>
  461904:	mov	w10, wzr
  461908:	mov	w20, wzr
  46190c:	mov	x26, xzr
  461910:	add	x11, x8, #0x1
  461914:	sub	x9, x9, #0x1
  461918:	stp	x11, x9, [sp, #112]
  46191c:	ldrb	w19, [x8]
  461920:	cmp	w20, #0x3f
  461924:	b.hi	461938 <feof@plt+0x5e098>  // b.pmore
  461928:	and	x8, x19, #0x7f
  46192c:	lsl	x8, x8, x20
  461930:	orr	x26, x8, x26
  461934:	b	461978 <feof@plt+0x5e0d8>
  461938:	cbnz	w10, 461978 <feof@plt+0x5e0d8>
  46193c:	ldr	w8, [sp, #104]
  461940:	ldr	x4, [sp, #96]
  461944:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461948:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46194c:	sub	w5, w11, w8
  461950:	add	x0, sp, #0xc0
  461954:	mov	w1, #0xc8                  	// #200
  461958:	add	x2, x2, #0xf77
  46195c:	add	x3, x3, #0x30
  461960:	bl	403530 <snprintf@plt>
  461964:	ldp	x8, x0, [sp, #136]
  461968:	add	x1, sp, #0xc0
  46196c:	mov	w2, wzr
  461970:	blr	x8
  461974:	mov	w10, #0x1                   	// #1
  461978:	sxtb	w8, w19
  46197c:	tbz	w8, #31, 461f74 <feof@plt+0x5e6d4>
  461980:	ldp	x8, x9, [sp, #112]
  461984:	add	w20, w20, #0x7
  461988:	cbnz	x9, 461910 <feof@plt+0x5e070>
  46198c:	adrp	x19, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461990:	add	x19, x19, #0xed4
  461994:	ldr	w9, [sp, #152]
  461998:	cbz	w9, 461ff0 <feof@plt+0x5e750>
  46199c:	mov	x26, xzr
  4619a0:	b	462034 <feof@plt+0x5e794>
  4619a4:	sub	w8, w12, w11
  4619a8:	ldp	w11, w10, [x23, #12]
  4619ac:	ldr	w15, [sp, #64]
  4619b0:	ldp	w12, w13, [x23, #4]
  4619b4:	ldr	x9, [sp, #184]
  4619b8:	udiv	w14, w8, w10
  4619bc:	add	w15, w14, w15
  4619c0:	ldp	x2, x3, [sp, #136]
  4619c4:	msub	w8, w14, w10, w8
  4619c8:	mul	w10, w12, w15
  4619cc:	add	w11, w11, w25
  4619d0:	udiv	w12, w15, w13
  4619d4:	udiv	w10, w10, w13
  4619d8:	msub	w12, w12, w13, w15
  4619dc:	add	x28, x28, x10
  4619e0:	add	w25, w11, w8
  4619e4:	str	w12, [sp, #64]
  4619e8:	cbz	x9, 461b20 <feof@plt+0x5e280>
  4619ec:	ldr	x8, [sp, #160]
  4619f0:	sub	x9, x9, #0x1
  4619f4:	mov	w10, #0x18                  	// #24
  4619f8:	mul	x10, x9, x10
  4619fc:	ldr	x10, [x8, x10]
  461a00:	cmp	x10, x28
  461a04:	b.ne	461b20 <feof@plt+0x5e280>  // b.any
  461a08:	mov	w10, #0x18                  	// #24
  461a0c:	madd	x10, x9, x10, x8
  461a10:	ldr	x10, [x10, #8]
  461a14:	cmp	x10, x27
  461a18:	b.ne	461b20 <feof@plt+0x5e280>  // b.any
  461a1c:	mov	w10, #0x18                  	// #24
  461a20:	madd	x8, x9, x10, x8
  461a24:	ldr	w8, [x8, #16]
  461a28:	cmp	w8, w25
  461a2c:	b.ne	461b20 <feof@plt+0x5e280>  // b.any
  461a30:	b	461b54 <feof@plt+0x5e2b4>
  461a34:	ldr	x8, [x23, #24]
  461a38:	sub	w9, w12, #0x1
  461a3c:	ldrb	w20, [x8, w9, uxtw]
  461a40:	cbnz	w20, 461a58 <feof@plt+0x5e1b8>
  461a44:	b	461b54 <feof@plt+0x5e2b4>
  461a48:	ldr	w8, [sp, #152]
  461a4c:	cbz	w8, 461ad0 <feof@plt+0x5e230>
  461a50:	subs	w20, w20, #0x1
  461a54:	b.eq	462668 <feof@plt+0x5edc8>  // b.none
  461a58:	mov	w26, wzr
  461a5c:	mov	w8, wzr
  461a60:	b	461a6c <feof@plt+0x5e1cc>
  461a64:	add	w26, w26, #0x7
  461a68:	tbz	w19, #31, 461a50 <feof@plt+0x5e1b0>
  461a6c:	ldp	x10, x11, [sp, #112]
  461a70:	cbz	x11, 461a48 <feof@plt+0x5e1a8>
  461a74:	add	x9, x10, #0x1
  461a78:	sub	x11, x11, #0x1
  461a7c:	stp	x9, x11, [sp, #112]
  461a80:	ldrsb	w19, [x10]
  461a84:	cmp	w26, #0x40
  461a88:	b.cc	461a64 <feof@plt+0x5e1c4>  // b.lo, b.ul, b.last
  461a8c:	cbnz	w8, 461a64 <feof@plt+0x5e1c4>
  461a90:	ldr	w8, [sp, #104]
  461a94:	ldr	x4, [sp, #96]
  461a98:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461a9c:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  461aa0:	sub	w5, w9, w8
  461aa4:	add	x0, sp, #0xc0
  461aa8:	mov	w1, #0xc8                  	// #200
  461aac:	add	x2, x2, #0xf77
  461ab0:	add	x3, x3, #0x30
  461ab4:	bl	403530 <snprintf@plt>
  461ab8:	ldp	x8, x0, [sp, #136]
  461abc:	add	x1, sp, #0xc0
  461ac0:	mov	w2, wzr
  461ac4:	blr	x8
  461ac8:	mov	w8, #0x1                   	// #1
  461acc:	b	461a64 <feof@plt+0x5e1c4>
  461ad0:	ldr	w8, [sp, #104]
  461ad4:	ldr	x4, [sp, #96]
  461ad8:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461adc:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461ae0:	sub	w5, w10, w8
  461ae4:	add	x0, sp, #0xc0
  461ae8:	mov	w1, #0xc8                  	// #200
  461aec:	add	x2, x2, #0xf77
  461af0:	add	x3, x3, #0xf67
  461af4:	bl	403530 <snprintf@plt>
  461af8:	ldp	x8, x0, [sp, #136]
  461afc:	add	x1, sp, #0xc0
  461b00:	mov	w2, wzr
  461b04:	blr	x8
  461b08:	mov	w8, #0x1                   	// #1
  461b0c:	str	w8, [sp, #152]
  461b10:	b	461a50 <feof@plt+0x5e1b0>
  461b14:	ldr	x9, [sp, #184]
  461b18:	ldp	x2, x3, [sp, #136]
  461b1c:	cbnz	x9, 4619ec <feof@plt+0x5e14c>
  461b20:	add	x4, sp, #0xa0
  461b24:	mov	w1, #0x18                  	// #24
  461b28:	mov	x0, x24
  461b2c:	bl	459e18 <feof@plt+0x56578>
  461b30:	cbz	x0, 461b54 <feof@plt+0x5e2b4>
  461b34:	ldr	x8, [x26, #16]
  461b38:	str	w25, [x0, #16]
  461b3c:	add	x8, x8, x28
  461b40:	stp	x8, x27, [x0]
  461b44:	ldr	x8, [sp, #184]
  461b48:	str	w8, [x0, #20]
  461b4c:	add	x8, x8, #0x1
  461b50:	str	x8, [sp, #184]
  461b54:	ldr	x20, [sp, #120]
  461b58:	ldr	w0, [sp, #64]
  461b5c:	mov	w10, w25
  461b60:	mov	x2, x27
  461b64:	mov	x1, x28
  461b68:	mov	x28, x1
  461b6c:	mov	x27, x2
  461b70:	mov	w25, w10
  461b74:	cbnz	x20, 4618c4 <feof@plt+0x5e024>
  461b78:	b	4627f4 <feof@plt+0x5ef54>
  461b7c:	cbz	x9, 461c14 <feof@plt+0x5e374>
  461b80:	mov	w10, wzr
  461b84:	mov	w26, wzr
  461b88:	mov	x20, xzr
  461b8c:	add	x11, x8, #0x1
  461b90:	sub	x9, x9, #0x1
  461b94:	stp	x11, x9, [sp, #112]
  461b98:	ldrb	w19, [x8]
  461b9c:	cmp	w26, #0x3f
  461ba0:	b.hi	461bb4 <feof@plt+0x5e314>  // b.pmore
  461ba4:	and	x8, x19, #0x7f
  461ba8:	lsl	x8, x8, x26
  461bac:	orr	x20, x8, x20
  461bb0:	b	461bf4 <feof@plt+0x5e354>
  461bb4:	cbnz	w10, 461bf4 <feof@plt+0x5e354>
  461bb8:	ldr	w8, [sp, #104]
  461bbc:	ldr	x4, [sp, #96]
  461bc0:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461bc4:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  461bc8:	sub	w5, w11, w8
  461bcc:	add	x0, sp, #0xc0
  461bd0:	mov	w1, #0xc8                  	// #200
  461bd4:	add	x2, x2, #0xf77
  461bd8:	add	x3, x3, #0x30
  461bdc:	bl	403530 <snprintf@plt>
  461be0:	ldp	x8, x0, [sp, #136]
  461be4:	add	x1, sp, #0xc0
  461be8:	mov	w2, wzr
  461bec:	blr	x8
  461bf0:	mov	w10, #0x1                   	// #1
  461bf4:	sxtb	w8, w19
  461bf8:	tbz	w8, #31, 461f80 <feof@plt+0x5e6e0>
  461bfc:	ldp	x8, x9, [sp, #112]
  461c00:	add	w26, w26, #0x7
  461c04:	cbnz	x9, 461b8c <feof@plt+0x5e2ec>
  461c08:	ldr	x26, [sp]
  461c0c:	adrp	x19, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461c10:	add	x19, x19, #0xed4
  461c14:	ldr	w9, [sp, #152]
  461c18:	cbz	w9, 4620dc <feof@plt+0x5e83c>
  461c1c:	mov	x20, xzr
  461c20:	b	462120 <feof@plt+0x5e880>
  461c24:	cbz	x9, 461cc0 <feof@plt+0x5e420>
  461c28:	mov	w10, wzr
  461c2c:	mov	x20, xzr
  461c30:	mov	w26, #0x7                   	// #7
  461c34:	add	x11, x8, #0x1
  461c38:	sub	x9, x9, #0x1
  461c3c:	stp	x11, x9, [sp, #112]
  461c40:	ldrb	w19, [x8]
  461c44:	sub	w8, w26, #0x7
  461c48:	cmp	w8, #0x3f
  461c4c:	b.hi	461c60 <feof@plt+0x5e3c0>  // b.pmore
  461c50:	and	x9, x19, #0x7f
  461c54:	lsl	x8, x9, x8
  461c58:	orr	x20, x8, x20
  461c5c:	b	461ca0 <feof@plt+0x5e400>
  461c60:	cbnz	w10, 461ca0 <feof@plt+0x5e400>
  461c64:	ldr	w8, [sp, #104]
  461c68:	ldr	x4, [sp, #96]
  461c6c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461c70:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  461c74:	sub	w5, w11, w8
  461c78:	add	x0, sp, #0xc0
  461c7c:	mov	w1, #0xc8                  	// #200
  461c80:	add	x2, x2, #0xf77
  461c84:	add	x3, x3, #0x29
  461c88:	bl	403530 <snprintf@plt>
  461c8c:	ldp	x8, x0, [sp, #136]
  461c90:	add	x1, sp, #0xc0
  461c94:	mov	w2, wzr
  461c98:	blr	x8
  461c9c:	mov	w10, #0x1                   	// #1
  461ca0:	sxtb	w8, w19
  461ca4:	tbz	w8, #31, 461f90 <feof@plt+0x5e6f0>
  461ca8:	ldp	x8, x9, [sp, #112]
  461cac:	add	w26, w26, #0x7
  461cb0:	cbnz	x9, 461c34 <feof@plt+0x5e394>
  461cb4:	ldr	x26, [sp]
  461cb8:	adrp	x19, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461cbc:	add	x19, x19, #0xed4
  461cc0:	ldr	w9, [sp, #152]
  461cc4:	cbz	w9, 462148 <feof@plt+0x5e8a8>
  461cc8:	mov	x8, xzr
  461ccc:	add	w25, w25, w8
  461cd0:	b	461b54 <feof@plt+0x5e2b4>
  461cd4:	cbz	x9, 461d6c <feof@plt+0x5e4cc>
  461cd8:	mov	w10, wzr
  461cdc:	mov	w26, wzr
  461ce0:	mov	x20, xzr
  461ce4:	add	x11, x8, #0x1
  461ce8:	sub	x9, x9, #0x1
  461cec:	stp	x11, x9, [sp, #112]
  461cf0:	ldrb	w19, [x8]
  461cf4:	cmp	w26, #0x3f
  461cf8:	b.hi	461d0c <feof@plt+0x5e46c>  // b.pmore
  461cfc:	and	x8, x19, #0x7f
  461d00:	lsl	x8, x8, x26
  461d04:	orr	x20, x8, x20
  461d08:	b	461d4c <feof@plt+0x5e4ac>
  461d0c:	cbnz	w10, 461d4c <feof@plt+0x5e4ac>
  461d10:	ldr	w8, [sp, #104]
  461d14:	ldr	x4, [sp, #96]
  461d18:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461d1c:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  461d20:	sub	w5, w11, w8
  461d24:	add	x0, sp, #0xc0
  461d28:	mov	w1, #0xc8                  	// #200
  461d2c:	add	x2, x2, #0xf77
  461d30:	add	x3, x3, #0x30
  461d34:	bl	403530 <snprintf@plt>
  461d38:	ldp	x8, x0, [sp, #136]
  461d3c:	add	x1, sp, #0xc0
  461d40:	mov	w2, wzr
  461d44:	blr	x8
  461d48:	mov	w10, #0x1                   	// #1
  461d4c:	sxtb	w8, w19
  461d50:	tbz	w8, #31, 461fc4 <feof@plt+0x5e724>
  461d54:	ldp	x8, x9, [sp, #112]
  461d58:	add	w26, w26, #0x7
  461d5c:	cbnz	x9, 461ce4 <feof@plt+0x5e444>
  461d60:	ldr	x26, [sp]
  461d64:	adrp	x19, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461d68:	add	x19, x19, #0xed4
  461d6c:	ldr	w9, [sp, #152]
  461d70:	cbnz	w9, 46239c <feof@plt+0x5eafc>
  461d74:	ldr	w9, [sp, #104]
  461d78:	ldr	x4, [sp, #96]
  461d7c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461d80:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461d84:	sub	w5, w8, w9
  461d88:	add	x0, sp, #0xc0
  461d8c:	mov	w1, #0xc8                  	// #200
  461d90:	add	x2, x2, #0xf77
  461d94:	add	x3, x3, #0xf67
  461d98:	bl	403530 <snprintf@plt>
  461d9c:	ldp	x8, x0, [sp, #136]
  461da0:	add	x1, sp, #0xc0
  461da4:	mov	w2, wzr
  461da8:	blr	x8
  461dac:	mov	w8, #0x1                   	// #1
  461db0:	adrp	x27, 48f000 <_obstack_memory_used@@Base+0x132fc>
  461db4:	str	w8, [sp, #152]
  461db8:	add	x27, x27, #0x23b
  461dbc:	b	461b54 <feof@plt+0x5e2b4>
  461dc0:	cbz	x9, 461f04 <feof@plt+0x5e664>
  461dc4:	mov	w10, wzr
  461dc8:	mov	w20, wzr
  461dcc:	add	x11, x8, #0x1
  461dd0:	sub	x9, x9, #0x1
  461dd4:	stp	x11, x9, [sp, #112]
  461dd8:	ldrsb	w19, [x8]
  461ddc:	cmp	w20, #0x40
  461de0:	b.cc	461e24 <feof@plt+0x5e584>  // b.lo, b.ul, b.last
  461de4:	cbnz	w10, 461e24 <feof@plt+0x5e584>
  461de8:	ldr	w8, [sp, #104]
  461dec:	ldr	x4, [sp, #96]
  461df0:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461df4:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  461df8:	sub	w5, w11, w8
  461dfc:	add	x0, sp, #0xc0
  461e00:	mov	w1, #0xc8                  	// #200
  461e04:	add	x2, x2, #0xf77
  461e08:	add	x3, x3, #0x30
  461e0c:	bl	403530 <snprintf@plt>
  461e10:	ldp	x8, x0, [sp, #136]
  461e14:	add	x1, sp, #0xc0
  461e18:	mov	w2, wzr
  461e1c:	blr	x8
  461e20:	mov	w10, #0x1                   	// #1
  461e24:	tbz	w19, #31, 46266c <feof@plt+0x5edcc>
  461e28:	ldp	x8, x9, [sp, #112]
  461e2c:	add	w20, w20, #0x7
  461e30:	cbnz	x9, 461dcc <feof@plt+0x5e52c>
  461e34:	b	461efc <feof@plt+0x5e65c>
  461e38:	ldr	w8, [x23, #16]
  461e3c:	mov	w9, #0xff                  	// #255
  461e40:	sub	w9, w9, w11
  461e44:	ldp	w10, w11, [x23, #4]
  461e48:	udiv	w8, w9, w8
  461e4c:	ldr	w9, [sp, #64]
  461e50:	add	w8, w8, w9
  461e54:	mul	w9, w10, w8
  461e58:	udiv	w10, w8, w11
  461e5c:	udiv	w9, w9, w11
  461e60:	msub	w8, w10, w11, w8
  461e64:	add	x28, x28, x9
  461e68:	str	w8, [sp, #64]
  461e6c:	b	461b54 <feof@plt+0x5e2b4>
  461e70:	cmp	x9, #0x1
  461e74:	b.hi	461f50 <feof@plt+0x5e6b0>  // b.pmore
  461e78:	ldr	w9, [sp, #152]
  461e7c:	cbz	w9, 462194 <feof@plt+0x5e8f4>
  461e80:	mov	x8, xzr
  461e84:	b	4621e0 <feof@plt+0x5e940>
  461e88:	cbz	x9, 461f04 <feof@plt+0x5e664>
  461e8c:	mov	w10, wzr
  461e90:	mov	w20, wzr
  461e94:	add	x11, x8, #0x1
  461e98:	sub	x9, x9, #0x1
  461e9c:	stp	x11, x9, [sp, #112]
  461ea0:	ldrsb	w19, [x8]
  461ea4:	cmp	w20, #0x40
  461ea8:	b.cc	461eec <feof@plt+0x5e64c>  // b.lo, b.ul, b.last
  461eac:	cbnz	w10, 461eec <feof@plt+0x5e64c>
  461eb0:	ldr	w8, [sp, #104]
  461eb4:	ldr	x4, [sp, #96]
  461eb8:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461ebc:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  461ec0:	sub	w5, w11, w8
  461ec4:	add	x0, sp, #0xc0
  461ec8:	mov	w1, #0xc8                  	// #200
  461ecc:	add	x2, x2, #0xf77
  461ed0:	add	x3, x3, #0x30
  461ed4:	bl	403530 <snprintf@plt>
  461ed8:	ldp	x8, x0, [sp, #136]
  461edc:	add	x1, sp, #0xc0
  461ee0:	mov	w2, wzr
  461ee4:	blr	x8
  461ee8:	mov	w10, #0x1                   	// #1
  461eec:	tbz	w19, #31, 46266c <feof@plt+0x5edcc>
  461ef0:	ldp	x8, x9, [sp, #112]
  461ef4:	add	w20, w20, #0x7
  461ef8:	cbnz	x9, 461e94 <feof@plt+0x5e5f4>
  461efc:	adrp	x19, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461f00:	add	x19, x19, #0xed4
  461f04:	ldr	w9, [sp, #152]
  461f08:	cbnz	w9, 461b54 <feof@plt+0x5e2b4>
  461f0c:	ldr	w9, [sp, #104]
  461f10:	ldr	x4, [sp, #96]
  461f14:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461f18:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461f1c:	sub	w5, w8, w9
  461f20:	add	x0, sp, #0xc0
  461f24:	mov	w1, #0xc8                  	// #200
  461f28:	add	x2, x2, #0xf77
  461f2c:	add	x3, x3, #0xf67
  461f30:	bl	403530 <snprintf@plt>
  461f34:	ldp	x8, x0, [sp, #136]
  461f38:	add	x1, sp, #0xc0
  461f3c:	mov	w2, wzr
  461f40:	blr	x8
  461f44:	mov	w8, #0x1                   	// #1
  461f48:	str	w8, [sp, #152]
  461f4c:	b	461b54 <feof@plt+0x5e2b4>
  461f50:	ldr	w8, [sp, #128]
  461f54:	add	x9, x10, #0x3
  461f58:	sub	x11, x20, #0x3
  461f5c:	stp	x9, x11, [sp, #112]
  461f60:	cbz	w8, 4621dc <feof@plt+0x5e93c>
  461f64:	ldurh	w8, [x10, #1]
  461f68:	lsl	x8, x8, #48
  461f6c:	rev	x8, x8
  461f70:	b	4621e0 <feof@plt+0x5e940>
  461f74:	adrp	x19, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461f78:	add	x19, x19, #0xed4
  461f7c:	b	462034 <feof@plt+0x5e794>
  461f80:	ldr	x26, [sp]
  461f84:	adrp	x19, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461f88:	add	x19, x19, #0xed4
  461f8c:	b	462120 <feof@plt+0x5e880>
  461f90:	cmp	w26, #0x40
  461f94:	and	w8, w19, #0x40
  461f98:	cset	w9, cc  // cc = lo, ul, last
  461f9c:	mov	x10, #0xffffffffffffffff    	// #-1
  461fa0:	lsl	x10, x10, x26
  461fa4:	tst	w9, w8, lsr #6
  461fa8:	ldr	x26, [sp]
  461fac:	csel	x8, x10, xzr, ne  // ne = any
  461fb0:	orr	x8, x20, x8
  461fb4:	adrp	x19, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461fb8:	add	x19, x19, #0xed4
  461fbc:	add	w25, w25, w8
  461fc0:	b	461b54 <feof@plt+0x5e2b4>
  461fc4:	adrp	x19, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461fc8:	add	x19, x19, #0xed4
  461fcc:	cbz	x20, 462398 <feof@plt+0x5eaf8>
  461fd0:	ldr	x9, [x23, #48]
  461fd4:	ldr	x26, [sp]
  461fd8:	sub	x8, x20, #0x1
  461fdc:	cmp	x8, x9
  461fe0:	b.cs	4628b8 <feof@plt+0x5f018>  // b.hs, b.nlast
  461fe4:	ldr	x9, [x23, #56]
  461fe8:	ldr	x27, [x9, x8, lsl #3]
  461fec:	b	461b54 <feof@plt+0x5e2b4>
  461ff0:	ldr	w9, [sp, #104]
  461ff4:	ldr	x4, [sp, #96]
  461ff8:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  461ffc:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  462000:	sub	w5, w8, w9
  462004:	add	x0, sp, #0xc0
  462008:	mov	w1, #0xc8                  	// #200
  46200c:	add	x2, x2, #0xf77
  462010:	add	x3, x3, #0xf67
  462014:	bl	403530 <snprintf@plt>
  462018:	ldp	x8, x0, [sp, #136]
  46201c:	add	x1, sp, #0xc0
  462020:	mov	w2, wzr
  462024:	blr	x8
  462028:	mov	x26, xzr
  46202c:	mov	w8, #0x1                   	// #1
  462030:	str	w8, [sp, #152]
  462034:	ldp	x8, x9, [sp, #112]
  462038:	cbz	x9, 4620cc <feof@plt+0x5e82c>
  46203c:	add	x10, x8, #0x1
  462040:	sub	x20, x9, #0x1
  462044:	stp	x10, x20, [sp, #112]
  462048:	str	x10, [sp, #40]
  46204c:	ldrb	w10, [x8]
  462050:	sub	w10, w10, #0x1
  462054:	cmp	w10, #0x3
  462058:	b.hi	462230 <feof@plt+0x5e990>  // b.pmore
  46205c:	adrp	x13, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  462060:	add	x13, x13, #0xeee
  462064:	adr	x11, 461b68 <feof@plt+0x5e2c8>
  462068:	ldrh	w12, [x13, x10, lsl #1]
  46206c:	add	x11, x11, x12, lsl #2
  462070:	ldr	x2, [sp, #48]
  462074:	ldr	x26, [sp]
  462078:	mov	w0, wzr
  46207c:	mov	x1, xzr
  462080:	mov	w10, #0x1                   	// #1
  462084:	br	x11
  462088:	ldr	x10, [sp, #8]
  46208c:	ldr	w10, [x10, #48]
  462090:	sub	w10, w10, #0x1
  462094:	cmp	w10, #0x7
  462098:	b.hi	4626cc <feof@plt+0x5ee2c>  // b.pmore
  46209c:	adrp	x13, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4620a0:	add	x13, x13, #0xef6
  4620a4:	adr	x11, 4620b4 <feof@plt+0x5e814>
  4620a8:	ldrh	w12, [x13, x10, lsl #1]
  4620ac:	add	x11, x11, x12, lsl #2
  4620b0:	br	x11
  4620b4:	cbz	x20, 462780 <feof@plt+0x5eee0>
  4620b8:	add	x10, x8, #0x2
  4620bc:	sub	x9, x9, #0x2
  4620c0:	stp	x10, x9, [sp, #112]
  4620c4:	ldrb	w28, [x8, #1]
  4620c8:	b	4627e8 <feof@plt+0x5ef48>
  4620cc:	ldr	w9, [sp, #152]
  4620d0:	cbz	w9, 4621ec <feof@plt+0x5e94c>
  4620d4:	mov	x20, xzr
  4620d8:	b	462230 <feof@plt+0x5e990>
  4620dc:	ldr	w9, [sp, #104]
  4620e0:	ldr	x4, [sp, #96]
  4620e4:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4620e8:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4620ec:	sub	w5, w8, w9
  4620f0:	add	x0, sp, #0xc0
  4620f4:	mov	w1, #0xc8                  	// #200
  4620f8:	add	x2, x2, #0xf77
  4620fc:	add	x3, x3, #0xf67
  462100:	bl	403530 <snprintf@plt>
  462104:	ldp	x8, x0, [sp, #136]
  462108:	add	x1, sp, #0xc0
  46210c:	mov	w2, wzr
  462110:	blr	x8
  462114:	mov	x20, xzr
  462118:	mov	w8, #0x1                   	// #1
  46211c:	str	w8, [sp, #152]
  462120:	ldr	w10, [sp, #64]
  462124:	ldp	w8, w9, [x23, #4]
  462128:	add	x10, x20, w10, uxtw
  46212c:	mul	x8, x10, x8
  462130:	udiv	x11, x10, x9
  462134:	udiv	x8, x8, x9
  462138:	add	x28, x8, x28
  46213c:	msub	w8, w11, w9, w10
  462140:	str	w8, [sp, #64]
  462144:	b	461b54 <feof@plt+0x5e2b4>
  462148:	ldr	w9, [sp, #104]
  46214c:	ldr	x4, [sp, #96]
  462150:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  462154:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  462158:	sub	w5, w8, w9
  46215c:	add	x0, sp, #0xc0
  462160:	mov	w1, #0xc8                  	// #200
  462164:	add	x2, x2, #0xf77
  462168:	add	x3, x3, #0xf67
  46216c:	bl	403530 <snprintf@plt>
  462170:	ldp	x8, x0, [sp, #136]
  462174:	add	x1, sp, #0xc0
  462178:	mov	w2, wzr
  46217c:	blr	x8
  462180:	mov	x8, xzr
  462184:	mov	w9, #0x1                   	// #1
  462188:	str	w9, [sp, #152]
  46218c:	add	w25, w25, w8
  462190:	b	461b54 <feof@plt+0x5e2b4>
  462194:	ldr	w9, [sp, #104]
  462198:	ldr	x4, [sp, #96]
  46219c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4621a0:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4621a4:	sub	w5, w8, w9
  4621a8:	add	x0, sp, #0xc0
  4621ac:	mov	w1, #0xc8                  	// #200
  4621b0:	add	x2, x2, #0xf77
  4621b4:	add	x3, x3, #0xf67
  4621b8:	bl	403530 <snprintf@plt>
  4621bc:	ldp	x8, x0, [sp, #136]
  4621c0:	add	x1, sp, #0xc0
  4621c4:	mov	w2, wzr
  4621c8:	blr	x8
  4621cc:	mov	w9, #0x1                   	// #1
  4621d0:	mov	x8, xzr
  4621d4:	str	w9, [sp, #152]
  4621d8:	b	4621e0 <feof@plt+0x5e940>
  4621dc:	ldurh	w8, [x10, #1]
  4621e0:	str	wzr, [sp, #64]
  4621e4:	add	x28, x8, x28
  4621e8:	b	461b54 <feof@plt+0x5e2b4>
  4621ec:	ldr	w9, [sp, #104]
  4621f0:	ldr	x4, [sp, #96]
  4621f4:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4621f8:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4621fc:	sub	w5, w8, w9
  462200:	add	x0, sp, #0xc0
  462204:	mov	w1, #0xc8                  	// #200
  462208:	add	x2, x2, #0xf77
  46220c:	add	x3, x3, #0xf67
  462210:	bl	403530 <snprintf@plt>
  462214:	ldp	x8, x0, [sp, #136]
  462218:	add	x1, sp, #0xc0
  46221c:	mov	w2, wzr
  462220:	blr	x8
  462224:	ldr	x20, [sp, #120]
  462228:	mov	w8, #0x1                   	// #1
  46222c:	str	w8, [sp, #152]
  462230:	sub	x8, x26, #0x1
  462234:	subs	x20, x20, x8
  462238:	b.cc	4628a8 <feof@plt+0x5f008>  // b.lo, b.ul, b.last
  46223c:	ldr	x9, [sp, #112]
  462240:	ldr	w0, [sp, #64]
  462244:	ldr	x26, [sp]
  462248:	mov	w10, w25
  46224c:	add	x8, x9, x8
  462250:	stp	x8, x20, [sp, #112]
  462254:	b	461b60 <feof@plt+0x5e2c0>
  462258:	ldr	x19, [sp, #40]
  46225c:	mov	x1, x20
  462260:	mov	x0, x19
  462264:	bl	4037e0 <strnlen@plt>
  462268:	add	x8, x0, #0x1
  46226c:	cmp	x20, x8
  462270:	b.cc	462910 <feof@plt+0x5f070>  // b.lo, b.ul, b.last
  462274:	add	x10, x19, x8
  462278:	subs	x9, x20, x8
  46227c:	stp	x10, x9, [sp, #112]
  462280:	b.eq	4623f8 <feof@plt+0x5eb58>  // b.none
  462284:	mov	w8, wzr
  462288:	mov	w26, wzr
  46228c:	mov	x20, xzr
  462290:	add	x11, x10, #0x1
  462294:	sub	x9, x9, #0x1
  462298:	stp	x11, x9, [sp, #112]
  46229c:	ldrb	w19, [x10]
  4622a0:	cmp	w26, #0x3f
  4622a4:	b.hi	4622b8 <feof@plt+0x5ea18>  // b.pmore
  4622a8:	and	x9, x19, #0x7f
  4622ac:	lsl	x9, x9, x26
  4622b0:	orr	x20, x9, x20
  4622b4:	b	4622f8 <feof@plt+0x5ea58>
  4622b8:	cbnz	w8, 4622f8 <feof@plt+0x5ea58>
  4622bc:	ldr	w8, [sp, #104]
  4622c0:	ldr	x4, [sp, #96]
  4622c4:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4622c8:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  4622cc:	sub	w5, w11, w8
  4622d0:	add	x0, sp, #0xc0
  4622d4:	mov	w1, #0xc8                  	// #200
  4622d8:	add	x2, x2, #0xf77
  4622dc:	add	x3, x3, #0x30
  4622e0:	bl	403530 <snprintf@plt>
  4622e4:	ldp	x8, x0, [sp, #136]
  4622e8:	add	x1, sp, #0xc0
  4622ec:	mov	w2, wzr
  4622f0:	blr	x8
  4622f4:	mov	w8, #0x1                   	// #1
  4622f8:	sxtb	w9, w19
  4622fc:	tbz	w9, #31, 462450 <feof@plt+0x5ebb0>
  462300:	ldr	x9, [sp, #120]
  462304:	cbz	x9, 4623f8 <feof@plt+0x5eb58>
  462308:	ldr	x10, [sp, #112]
  46230c:	add	w26, w26, #0x7
  462310:	b	462290 <feof@plt+0x5e9f0>
  462314:	cbz	x20, 4623a8 <feof@plt+0x5eb08>
  462318:	ldr	x10, [sp, #40]
  46231c:	mov	w8, wzr
  462320:	mov	w26, wzr
  462324:	add	x9, x10, #0x1
  462328:	mov	x11, x10
  46232c:	sub	x10, x20, #0x1
  462330:	stp	x9, x10, [sp, #112]
  462334:	ldrsb	w19, [x11]
  462338:	cbnz	w8, 462380 <feof@plt+0x5eae0>
  46233c:	cmp	w26, #0x40
  462340:	b.cc	462380 <feof@plt+0x5eae0>  // b.lo, b.ul, b.last
  462344:	ldr	w8, [sp, #104]
  462348:	ldr	x4, [sp, #96]
  46234c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  462350:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  462354:	sub	w5, w9, w8
  462358:	add	x0, sp, #0xc0
  46235c:	mov	w1, #0xc8                  	// #200
  462360:	add	x2, x2, #0xf77
  462364:	add	x3, x3, #0x30
  462368:	bl	403530 <snprintf@plt>
  46236c:	ldp	x8, x0, [sp, #136]
  462370:	add	x1, sp, #0xc0
  462374:	mov	w2, wzr
  462378:	blr	x8
  46237c:	mov	w8, #0x1                   	// #1
  462380:	tbz	w19, #31, 462668 <feof@plt+0x5edc8>
  462384:	ldr	x20, [sp, #120]
  462388:	cbz	x20, 4623a8 <feof@plt+0x5eb08>
  46238c:	ldr	x10, [sp, #112]
  462390:	add	w26, w26, #0x7
  462394:	b	462324 <feof@plt+0x5ea84>
  462398:	ldr	x26, [sp]
  46239c:	adrp	x27, 48f000 <_obstack_memory_used@@Base+0x132fc>
  4623a0:	add	x27, x27, #0x23b
  4623a4:	b	461b54 <feof@plt+0x5e2b4>
  4623a8:	ldr	w8, [sp, #152]
  4623ac:	cbnz	w8, 462668 <feof@plt+0x5edc8>
  4623b0:	ldr	w8, [sp, #112]
  4623b4:	ldr	w9, [sp, #104]
  4623b8:	ldr	x4, [sp, #96]
  4623bc:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4623c0:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4623c4:	sub	w5, w8, w9
  4623c8:	add	x0, sp, #0xc0
  4623cc:	mov	w1, #0xc8                  	// #200
  4623d0:	add	x2, x2, #0xf77
  4623d4:	add	x3, x3, #0xf67
  4623d8:	bl	403530 <snprintf@plt>
  4623dc:	ldp	x8, x0, [sp, #136]
  4623e0:	add	x1, sp, #0xc0
  4623e4:	mov	w2, wzr
  4623e8:	blr	x8
  4623ec:	mov	w8, #0x1                   	// #1
  4623f0:	str	w8, [sp, #152]
  4623f4:	b	462668 <feof@plt+0x5edc8>
  4623f8:	ldr	w8, [sp, #152]
  4623fc:	cbz	w8, 462408 <feof@plt+0x5eb68>
  462400:	mov	x20, xzr
  462404:	b	462450 <feof@plt+0x5ebb0>
  462408:	ldr	w8, [sp, #112]
  46240c:	ldr	w9, [sp, #104]
  462410:	ldr	x4, [sp, #96]
  462414:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  462418:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  46241c:	sub	w5, w8, w9
  462420:	add	x0, sp, #0xc0
  462424:	mov	w1, #0xc8                  	// #200
  462428:	add	x2, x2, #0xf77
  46242c:	add	x3, x3, #0xf67
  462430:	bl	403530 <snprintf@plt>
  462434:	ldp	x8, x0, [sp, #136]
  462438:	add	x1, sp, #0xc0
  46243c:	mov	w2, wzr
  462440:	blr	x8
  462444:	mov	w8, #0x1                   	// #1
  462448:	mov	x20, xzr
  46244c:	str	w8, [sp, #152]
  462450:	mov	w26, wzr
  462454:	mov	w8, wzr
  462458:	b	462464 <feof@plt+0x5ebc4>
  46245c:	add	w26, w26, #0x7
  462460:	tbz	w19, #31, 462510 <feof@plt+0x5ec70>
  462464:	ldp	x10, x11, [sp, #112]
  462468:	cbz	x11, 4624c8 <feof@plt+0x5ec28>
  46246c:	add	x9, x10, #0x1
  462470:	sub	x11, x11, #0x1
  462474:	stp	x9, x11, [sp, #112]
  462478:	ldrsb	w19, [x10]
  46247c:	cmp	w26, #0x40
  462480:	b.cc	46245c <feof@plt+0x5ebbc>  // b.lo, b.ul, b.last
  462484:	cbnz	w8, 46245c <feof@plt+0x5ebbc>
  462488:	ldr	w8, [sp, #104]
  46248c:	ldr	x4, [sp, #96]
  462490:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  462494:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  462498:	sub	w5, w9, w8
  46249c:	add	x0, sp, #0xc0
  4624a0:	mov	w1, #0xc8                  	// #200
  4624a4:	add	x2, x2, #0xf77
  4624a8:	add	x3, x3, #0x30
  4624ac:	bl	403530 <snprintf@plt>
  4624b0:	ldp	x8, x0, [sp, #136]
  4624b4:	add	x1, sp, #0xc0
  4624b8:	mov	w2, wzr
  4624bc:	blr	x8
  4624c0:	mov	w8, #0x1                   	// #1
  4624c4:	b	46245c <feof@plt+0x5ebbc>
  4624c8:	ldr	w8, [sp, #152]
  4624cc:	cbnz	w8, 462510 <feof@plt+0x5ec70>
  4624d0:	ldr	w8, [sp, #104]
  4624d4:	ldr	x4, [sp, #96]
  4624d8:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4624dc:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4624e0:	sub	w5, w10, w8
  4624e4:	add	x0, sp, #0xc0
  4624e8:	mov	w1, #0xc8                  	// #200
  4624ec:	add	x2, x2, #0xf77
  4624f0:	add	x3, x3, #0xf67
  4624f4:	bl	403530 <snprintf@plt>
  4624f8:	ldp	x8, x0, [sp, #136]
  4624fc:	add	x1, sp, #0xc0
  462500:	mov	w2, wzr
  462504:	blr	x8
  462508:	mov	w8, #0x1                   	// #1
  46250c:	str	w8, [sp, #152]
  462510:	mov	w26, wzr
  462514:	mov	w8, wzr
  462518:	b	462524 <feof@plt+0x5ec84>
  46251c:	add	w26, w26, #0x7
  462520:	tbz	w19, #31, 4625d0 <feof@plt+0x5ed30>
  462524:	ldp	x10, x11, [sp, #112]
  462528:	cbz	x11, 462588 <feof@plt+0x5ece8>
  46252c:	add	x9, x10, #0x1
  462530:	sub	x11, x11, #0x1
  462534:	stp	x9, x11, [sp, #112]
  462538:	ldrsb	w19, [x10]
  46253c:	cmp	w26, #0x40
  462540:	b.cc	46251c <feof@plt+0x5ec7c>  // b.lo, b.ul, b.last
  462544:	cbnz	w8, 46251c <feof@plt+0x5ec7c>
  462548:	ldr	w8, [sp, #104]
  46254c:	ldr	x4, [sp, #96]
  462550:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  462554:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  462558:	sub	w5, w9, w8
  46255c:	add	x0, sp, #0xc0
  462560:	mov	w1, #0xc8                  	// #200
  462564:	add	x2, x2, #0xf77
  462568:	add	x3, x3, #0x30
  46256c:	bl	403530 <snprintf@plt>
  462570:	ldp	x8, x0, [sp, #136]
  462574:	add	x1, sp, #0xc0
  462578:	mov	w2, wzr
  46257c:	blr	x8
  462580:	mov	w8, #0x1                   	// #1
  462584:	b	46251c <feof@plt+0x5ec7c>
  462588:	ldr	w8, [sp, #152]
  46258c:	cbnz	w8, 4625d0 <feof@plt+0x5ed30>
  462590:	ldr	w8, [sp, #104]
  462594:	ldr	x4, [sp, #96]
  462598:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  46259c:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4625a0:	sub	w5, w10, w8
  4625a4:	add	x0, sp, #0xc0
  4625a8:	mov	w1, #0xc8                  	// #200
  4625ac:	add	x2, x2, #0xf77
  4625b0:	add	x3, x3, #0xf67
  4625b4:	bl	403530 <snprintf@plt>
  4625b8:	ldp	x8, x0, [sp, #136]
  4625bc:	add	x1, sp, #0xc0
  4625c0:	mov	w2, wzr
  4625c4:	blr	x8
  4625c8:	mov	w8, #0x1                   	// #1
  4625cc:	str	w8, [sp, #152]
  4625d0:	ldr	x27, [sp, #40]
  4625d4:	ldrb	w8, [x27]
  4625d8:	cmp	w8, #0x2f
  4625dc:	b.eq	4627e8 <feof@plt+0x5ef48>  // b.none
  4625e0:	ldr	x8, [sp, #32]
  4625e4:	cbz	w20, 462600 <feof@plt+0x5ed60>
  4625e8:	ldr	x9, [x23, #32]
  4625ec:	sub	w8, w20, #0x1
  4625f0:	cmp	x8, x9
  4625f4:	b.cs	462964 <feof@plt+0x5f0c4>  // b.hs, b.nlast
  4625f8:	ldr	x9, [x23, #40]
  4625fc:	add	x8, x9, x8, lsl #3
  462600:	ldr	x26, [x8]
  462604:	mov	x0, x26
  462608:	bl	4030b0 <strlen@plt>
  46260c:	ldr	x19, [sp, #40]
  462610:	mov	x20, x0
  462614:	mov	x0, x19
  462618:	bl	4030b0 <strlen@plt>
  46261c:	ldr	x24, [sp, #88]
  462620:	ldp	x2, x3, [sp, #136]
  462624:	add	x8, x20, x0
  462628:	str	x0, [sp, #24]
  46262c:	add	x1, x8, #0x2
  462630:	mov	x0, x24
  462634:	bl	459b44 <feof@plt+0x562a4>
  462638:	cbz	x0, 4628b0 <feof@plt+0x5f010>
  46263c:	mov	x1, x26
  462640:	mov	x2, x20
  462644:	mov	x27, x0
  462648:	bl	402fc0 <memcpy@plt>
  46264c:	add	x0, x27, x20
  462650:	mov	w8, #0x2f                  	// #47
  462654:	strb	w8, [x0], #1
  462658:	ldr	x8, [sp, #24]
  46265c:	mov	x1, x19
  462660:	add	x2, x8, #0x1
  462664:	bl	402fc0 <memcpy@plt>
  462668:	ldr	x26, [sp]
  46266c:	adrp	x19, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  462670:	add	x19, x19, #0xed4
  462674:	b	461b54 <feof@plt+0x5e2b4>
  462678:	cmp	x20, #0x1
  46267c:	b.hi	462738 <feof@plt+0x5ee98>  // b.pmore
  462680:	ldr	w8, [sp, #152]
  462684:	cbnz	w8, 462720 <feof@plt+0x5ee80>
  462688:	ldr	w8, [sp, #104]
  46268c:	ldr	x9, [sp, #40]
  462690:	ldr	x4, [sp, #96]
  462694:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  462698:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  46269c:	sub	w5, w9, w8
  4626a0:	add	x0, sp, #0xc0
  4626a4:	mov	w1, #0xc8                  	// #200
  4626a8:	add	x2, x2, #0xf77
  4626ac:	add	x3, x3, #0xf67
  4626b0:	bl	403530 <snprintf@plt>
  4626b4:	ldp	x8, x0, [sp, #136]
  4626b8:	add	x1, sp, #0xc0
  4626bc:	mov	w2, wzr
  4626c0:	blr	x8
  4626c4:	mov	x28, xzr
  4626c8:	b	4627e0 <feof@plt+0x5ef40>
  4626cc:	ldr	w8, [sp, #104]
  4626d0:	ldr	x9, [sp, #40]
  4626d4:	ldr	x4, [sp, #96]
  4626d8:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4626dc:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  4626e0:	sub	w5, w9, w8
  4626e4:	add	x0, sp, #0xc0
  4626e8:	mov	w1, #0xc8                  	// #200
  4626ec:	add	x2, x2, #0xf77
  4626f0:	add	x3, x3, #0xf
  4626f4:	bl	403530 <snprintf@plt>
  4626f8:	ldp	x8, x0, [sp, #136]
  4626fc:	add	x1, sp, #0xc0
  462700:	mov	w2, wzr
  462704:	blr	x8
  462708:	mov	x28, xzr
  46270c:	b	461b54 <feof@plt+0x5e2b4>
  462710:	cmp	x20, #0x3
  462714:	b.hi	46275c <feof@plt+0x5eebc>  // b.pmore
  462718:	ldr	w8, [sp, #152]
  46271c:	cbz	w8, 462688 <feof@plt+0x5ede8>
  462720:	mov	x28, xzr
  462724:	b	4627e8 <feof@plt+0x5ef48>
  462728:	add	x0, sp, #0x60
  46272c:	bl	45f1d4 <feof@plt+0x5b934>
  462730:	mov	x28, x0
  462734:	b	461b54 <feof@plt+0x5e2b4>
  462738:	ldr	w10, [sp, #128]
  46273c:	add	x11, x8, #0x3
  462740:	sub	x9, x9, #0x3
  462744:	stp	x11, x9, [sp, #112]
  462748:	cbz	w10, 462790 <feof@plt+0x5eef0>
  46274c:	ldurh	w8, [x8, #1]
  462750:	lsl	x8, x8, #48
  462754:	rev	x28, x8
  462758:	b	4627e8 <feof@plt+0x5ef48>
  46275c:	ldr	w10, [sp, #128]
  462760:	add	x11, x8, #0x5
  462764:	sub	x9, x9, #0x5
  462768:	stp	x11, x9, [sp, #112]
  46276c:	cbz	w10, 462798 <feof@plt+0x5eef8>
  462770:	ldur	w8, [x8, #1]
  462774:	lsl	x8, x8, #32
  462778:	rev	x28, x8
  46277c:	b	4627e8 <feof@plt+0x5ef48>
  462780:	ldr	w8, [sp, #152]
  462784:	cbz	w8, 4627a0 <feof@plt+0x5ef00>
  462788:	mov	w28, wzr
  46278c:	b	4627e8 <feof@plt+0x5ef48>
  462790:	ldurh	w28, [x8, #1]
  462794:	b	4627e8 <feof@plt+0x5ef48>
  462798:	ldur	w28, [x8, #1]
  46279c:	b	4627e8 <feof@plt+0x5ef48>
  4627a0:	ldr	w8, [sp, #104]
  4627a4:	ldr	x9, [sp, #40]
  4627a8:	ldr	x4, [sp, #96]
  4627ac:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4627b0:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4627b4:	sub	w5, w9, w8
  4627b8:	add	x0, sp, #0xc0
  4627bc:	mov	w1, #0xc8                  	// #200
  4627c0:	add	x2, x2, #0xf77
  4627c4:	add	x3, x3, #0xf67
  4627c8:	bl	403530 <snprintf@plt>
  4627cc:	ldp	x8, x0, [sp, #136]
  4627d0:	add	x1, sp, #0xc0
  4627d4:	mov	w2, wzr
  4627d8:	blr	x8
  4627dc:	mov	w28, wzr
  4627e0:	mov	w8, #0x1                   	// #1
  4627e4:	str	w8, [sp, #152]
  4627e8:	ldr	x26, [sp]
  4627ec:	ldr	x24, [sp, #88]
  4627f0:	b	46266c <feof@plt+0x5edcc>
  4627f4:	mov	w8, #0x1                   	// #1
  4627f8:	str	w8, [sp, #56]
  4627fc:	ldr	x8, [sp, #184]
  462800:	cbz	x8, 460ed4 <feof@plt+0x5d634>
  462804:	ldr	w8, [sp, #56]
  462808:	cbz	w8, 460ed4 <feof@plt+0x5d634>
  46280c:	ldr	w8, [sp, #152]
  462810:	cbnz	w8, 460ed4 <feof@plt+0x5d634>
  462814:	ldr	x0, [sp, #88]
  462818:	add	x4, sp, #0xa0
  46281c:	mov	w1, #0x18                  	// #24
  462820:	mov	x2, x22
  462824:	mov	x3, x21
  462828:	bl	459e18 <feof@plt+0x56578>
  46282c:	cbz	x0, 460ed4 <feof@plt+0x5d634>
  462830:	mov	x8, #0xffffffffffffffff    	// #-1
  462834:	stp	xzr, xzr, [x0, #8]
  462838:	str	x8, [x0]
  46283c:	ldr	x0, [sp, #88]
  462840:	add	x1, sp, #0xa0
  462844:	mov	x2, x22
  462848:	mov	x3, x21
  46284c:	bl	459f30 <feof@plt+0x56690>
  462850:	cbz	w0, 460ed4 <feof@plt+0x5d634>
  462854:	ldr	x19, [sp, #160]
  462858:	ldr	x1, [sp, #184]
  46285c:	adrp	x3, 462000 <feof@plt+0x5e760>
  462860:	add	x3, x3, #0xae0
  462864:	mov	w2, #0x18                  	// #24
  462868:	mov	x0, x19
  46286c:	bl	463c0c <feof@plt+0x6036c>
  462870:	ldr	x8, [sp, #72]
  462874:	mov	w0, #0x1                   	// #1
  462878:	str	x19, [x8]
  46287c:	ldr	x8, [sp, #184]
  462880:	b	460f44 <feof@plt+0x5d6a4>
  462884:	ldr	w8, [sp, #112]
  462888:	ldr	w9, [sp, #104]
  46288c:	ldr	x4, [sp, #96]
  462890:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  462894:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  462898:	sub	w5, w8, w9
  46289c:	add	x2, x2, #0xf77
  4628a0:	add	x3, x3, #0x88
  4628a4:	b	460eb8 <feof@plt+0x5d618>
  4628a8:	ldr	w8, [sp, #152]
  4628ac:	cbz	w8, 4628fc <feof@plt+0x5f05c>
  4628b0:	str	wzr, [sp, #56]
  4628b4:	b	4627fc <feof@plt+0x5ef5c>
  4628b8:	ldr	w8, [sp, #112]
  4628bc:	ldr	w9, [sp, #104]
  4628c0:	ldr	x4, [sp, #96]
  4628c4:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4628c8:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  4628cc:	sub	w5, w8, w9
  4628d0:	add	x2, x2, #0xf77
  4628d4:	add	x3, x3, #0xed
  4628d8:	add	x0, sp, #0xc0
  4628dc:	mov	w1, #0xc8                  	// #200
  4628e0:	bl	403530 <snprintf@plt>
  4628e4:	ldp	x8, x0, [sp, #136]
  4628e8:	add	x1, sp, #0xc0
  4628ec:	mov	w2, wzr
  4628f0:	blr	x8
  4628f4:	str	wzr, [sp, #56]
  4628f8:	b	4627fc <feof@plt+0x5ef5c>
  4628fc:	ldr	w8, [sp, #112]
  462900:	ldr	w9, [sp, #104]
  462904:	ldr	x4, [sp, #96]
  462908:	sub	w5, w8, w9
  46290c:	b	462928 <feof@plt+0x5f088>
  462910:	ldr	w8, [sp, #152]
  462914:	cbnz	w8, 4628b0 <feof@plt+0x5f010>
  462918:	ldr	w8, [sp, #104]
  46291c:	ldr	x9, [sp, #40]
  462920:	ldr	x4, [sp, #96]
  462924:	sub	w5, w9, w8
  462928:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  46292c:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  462930:	add	x2, x2, #0xf77
  462934:	add	x3, x3, #0xf67
  462938:	add	x0, sp, #0xc0
  46293c:	mov	w1, #0xc8                  	// #200
  462940:	bl	403530 <snprintf@plt>
  462944:	ldp	x8, x0, [sp, #136]
  462948:	add	x1, sp, #0xc0
  46294c:	mov	w2, wzr
  462950:	blr	x8
  462954:	mov	w8, #0x1                   	// #1
  462958:	str	wzr, [sp, #56]
  46295c:	str	w8, [sp, #152]
  462960:	b	4627fc <feof@plt+0x5ef5c>
  462964:	ldr	w8, [sp, #112]
  462968:	ldr	w9, [sp, #104]
  46296c:	ldr	x4, [sp, #96]
  462970:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  462974:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  462978:	sub	w5, w8, w9
  46297c:	add	x2, x2, #0xf77
  462980:	add	x3, x3, #0xbe
  462984:	b	4628d8 <feof@plt+0x5f038>
  462988:	stp	x29, x30, [sp, #-64]!
  46298c:	stp	x24, x23, [sp, #16]
  462990:	stp	x22, x21, [sp, #32]
  462994:	stp	x20, x19, [sp, #48]
  462998:	mov	x29, sp
  46299c:	ldr	x8, [x1, #32]
  4629a0:	cbz	x8, 462a0c <feof@plt+0x5f16c>
  4629a4:	ldr	x9, [x1, #24]
  4629a8:	mov	x19, x5
  4629ac:	mov	x20, x4
  4629b0:	mov	x22, x3
  4629b4:	mov	x21, x2
  4629b8:	mov	x23, x0
  4629bc:	mov	x11, xzr
  4629c0:	mov	x12, x8
  4629c4:	b	4629d4 <feof@plt+0x5f134>
  4629c8:	mov	x12, x13
  4629cc:	cmp	x11, x12
  4629d0:	b.cs	462a0c <feof@plt+0x5f16c>  // b.hs, b.nlast
  4629d4:	add	x10, x12, x11
  4629d8:	lsr	x13, x10, #1
  4629dc:	add	x10, x13, x13, lsl #1
  4629e0:	lsl	x14, x10, #3
  4629e4:	add	x10, x9, x14
  4629e8:	ldr	x15, [x10]
  4629ec:	cmp	x15, x23
  4629f0:	b.hi	4629c8 <feof@plt+0x5f128>  // b.pmore
  4629f4:	ldr	x15, [x10, #8]
  4629f8:	cmp	x15, x23
  4629fc:	b.hi	462a24 <feof@plt+0x5f184>  // b.pmore
  462a00:	add	x11, x13, #0x1
  462a04:	cmp	x11, x12
  462a08:	b.cc	4629d4 <feof@plt+0x5f134>  // b.lo, b.ul, b.last
  462a0c:	mov	w0, wzr
  462a10:	ldp	x20, x19, [sp, #48]
  462a14:	ldp	x22, x21, [sp, #32]
  462a18:	ldp	x24, x23, [sp, #16]
  462a1c:	ldp	x29, x30, [sp], #64
  462a20:	ret
  462a24:	mov	x13, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  462a28:	asr	x15, x14, #3
  462a2c:	movk	x13, #0xaaab
  462a30:	orr	x14, xzr, #0x1
  462a34:	madd	x15, x15, x13, x14
  462a38:	cmp	x15, x8
  462a3c:	b.cs	462a8c <feof@plt+0x5f1ec>  // b.hs, b.nlast
  462a40:	add	x11, x12, x11
  462a44:	lsr	x11, x11, #1
  462a48:	mov	w12, #0x18                  	// #24
  462a4c:	madd	x11, x11, x12, x9
  462a50:	add	x11, x11, #0x18
  462a54:	ldr	x12, [x11]
  462a58:	cmp	x12, x23
  462a5c:	b.hi	462a8c <feof@plt+0x5f1ec>  // b.pmore
  462a60:	ldr	x12, [x11, #8]
  462a64:	cmp	x12, x23
  462a68:	b.ls	462a88 <feof@plt+0x5f1e8>  // b.plast
  462a6c:	sub	x12, x11, x9
  462a70:	asr	x12, x12, #3
  462a74:	madd	x12, x12, x13, x14
  462a78:	add	x10, x10, #0x18
  462a7c:	cmp	x12, x8
  462a80:	add	x11, x11, #0x18
  462a84:	b.cc	462a54 <feof@plt+0x5f1b4>  // b.lo, b.ul, b.last
  462a88:	sub	x10, x11, #0x18
  462a8c:	ldr	x24, [x10, #16]
  462a90:	mov	x0, x23
  462a94:	mov	x2, x21
  462a98:	mov	x3, x22
  462a9c:	mov	x1, x24
  462aa0:	mov	x4, x20
  462aa4:	mov	x5, x19
  462aa8:	bl	462988 <feof@plt+0x5f0e8>
  462aac:	cbnz	w0, 462a10 <feof@plt+0x5f170>
  462ab0:	ldr	x2, [x20]
  462ab4:	ldr	w3, [x19]
  462ab8:	ldr	x4, [x24]
  462abc:	mov	x0, x22
  462ac0:	mov	x1, x23
  462ac4:	blr	x21
  462ac8:	cbnz	w0, 462a10 <feof@plt+0x5f170>
  462acc:	ldr	x8, [x24, #8]
  462ad0:	str	x8, [x20]
  462ad4:	ldr	w8, [x24, #16]
  462ad8:	str	w8, [x19]
  462adc:	b	462a10 <feof@plt+0x5f170>
  462ae0:	ldr	x8, [x0]
  462ae4:	ldr	x9, [x1]
  462ae8:	cmp	x8, x9
  462aec:	b.cs	462af8 <feof@plt+0x5f258>  // b.hs, b.nlast
  462af0:	mov	w0, #0xffffffff            	// #-1
  462af4:	ret
  462af8:	b.ls	462b04 <feof@plt+0x5f264>  // b.plast
  462afc:	mov	w0, #0x1                   	// #1
  462b00:	ret
  462b04:	ldr	w8, [x0, #20]
  462b08:	ldr	w9, [x1, #20]
  462b0c:	cmp	w8, w9
  462b10:	b.ge	462b1c <feof@plt+0x5f27c>  // b.tcont
  462b14:	mov	w0, #0xffffffff            	// #-1
  462b18:	ret
  462b1c:	cset	w0, gt
  462b20:	ret
  462b24:	sub	sp, sp, #0x1c0
  462b28:	stp	x29, x30, [sp, #352]
  462b2c:	stp	x28, x27, [sp, #368]
  462b30:	stp	x26, x25, [sp, #384]
  462b34:	stp	x24, x23, [sp, #400]
  462b38:	stp	x22, x21, [sp, #416]
  462b3c:	stp	x20, x19, [sp, #432]
  462b40:	add	x29, sp, #0x160
  462b44:	ldr	x8, [x4, #24]
  462b48:	cbz	x8, 4631e8 <feof@plt+0x5f948>
  462b4c:	ldr	x9, [x29, #104]
  462b50:	mov	x21, x7
  462b54:	mov	x27, x6
  462b58:	mov	x28, x5
  462b5c:	str	x9, [sp, #104]
  462b60:	ldr	x9, [x29, #96]
  462b64:	mov	x19, x4
  462b68:	mov	x23, x3
  462b6c:	mov	x24, x2
  462b70:	mov	x25, x1
  462b74:	mov	x20, x0
  462b78:	stp	x0, x9, [sp, #112]
  462b7c:	ldr	x10, [x19, #16]
  462b80:	cbz	x8, 4631f0 <feof@plt+0x5f950>
  462b84:	mov	w9, wzr
  462b88:	mov	w22, wzr
  462b8c:	mov	x20, xzr
  462b90:	add	x11, x10, #0x1
  462b94:	sub	x8, x8, #0x1
  462b98:	stp	x11, x8, [x19, #16]
  462b9c:	ldrb	w26, [x10]
  462ba0:	cmp	w22, #0x3f
  462ba4:	b.hi	462bc0 <feof@plt+0x5f320>  // b.pmore
  462ba8:	and	x8, x26, #0x7f
  462bac:	lsl	x8, x8, x22
  462bb0:	orr	x20, x8, x20
  462bb4:	sxtb	w8, w26
  462bb8:	tbnz	w8, #31, 462bcc <feof@plt+0x5f32c>
  462bbc:	b	462c20 <feof@plt+0x5f380>
  462bc0:	cbz	w9, 462bdc <feof@plt+0x5f33c>
  462bc4:	sxtb	w8, w26
  462bc8:	tbz	w8, #31, 462c20 <feof@plt+0x5f380>
  462bcc:	ldp	x10, x8, [x19, #16]
  462bd0:	add	w22, w22, #0x7
  462bd4:	cbnz	x8, 462b90 <feof@plt+0x5f2f0>
  462bd8:	b	4631f0 <feof@plt+0x5f950>
  462bdc:	ldr	w8, [x19, #8]
  462be0:	ldr	x4, [x19]
  462be4:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  462be8:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  462bec:	sub	w5, w11, w8
  462bf0:	add	x0, sp, #0x90
  462bf4:	mov	w1, #0xc8                  	// #200
  462bf8:	add	x2, x2, #0xf77
  462bfc:	add	x3, x3, #0x30
  462c00:	bl	403530 <snprintf@plt>
  462c04:	ldp	x8, x0, [x19, #40]
  462c08:	add	x1, sp, #0x90
  462c0c:	mov	w2, wzr
  462c10:	blr	x8
  462c14:	mov	w9, #0x1                   	// #1
  462c18:	sxtb	w8, w26
  462c1c:	tbnz	w8, #31, 462bcc <feof@plt+0x5f32c>
  462c20:	cbz	x20, 4631e8 <feof@plt+0x5f948>
  462c24:	ldr	x8, [x24, #88]
  462c28:	sub	x10, x20, #0x1
  462c2c:	cmp	x10, x8
  462c30:	b.cs	462cfc <feof@plt+0x5f45c>  // b.hs, b.nlast
  462c34:	ldr	x9, [x24, #96]
  462c38:	add	x26, x9, x10, lsl #5
  462c3c:	ldr	x10, [x26]
  462c40:	cmp	x10, x20
  462c44:	b.ne	462d04 <feof@plt+0x5f464>  // b.any
  462c48:	cbz	x26, 463250 <feof@plt+0x5f9b0>
  462c4c:	ldr	w20, [x26, #8]
  462c50:	str	x28, [sp, #64]
  462c54:	mov	x22, xzr
  462c58:	mov	w28, wzr
  462c5c:	cmp	w20, #0x2e
  462c60:	b.hi	4630b0 <feof@plt+0x5f810>  // b.pmore
  462c64:	mov	x9, #0x8                   	// #8
  462c68:	mov	w8, #0x1                   	// #1
  462c6c:	movk	x9, #0x2000, lsl #16
  462c70:	lsl	x8, x8, x20
  462c74:	movk	x9, #0x4000, lsl #32
  462c78:	tst	x8, x9
  462c7c:	ldr	x8, [sp, #120]
  462c80:	b.eq	462cc0 <feof@plt+0x5f420>  // b.none
  462c84:	ldr	x0, [sp, #112]
  462c88:	mov	w1, #0x28                  	// #40
  462c8c:	mov	x2, x27
  462c90:	mov	x3, x21
  462c94:	bl	459b44 <feof@plt+0x562a4>
  462c98:	mov	x22, x0
  462c9c:	cbz	x0, 463254 <feof@plt+0x5f9b4>
  462ca0:	ldr	x8, [sp, #104]
  462ca4:	ldr	x9, [sp, #120]
  462ca8:	cmp	w20, #0x1d
  462cac:	movi	v0.2d, #0x0
  462cb0:	mov	w28, #0x1                   	// #1
  462cb4:	csel	x8, x8, x9, eq  // eq = none
  462cb8:	str	xzr, [x22, #32]
  462cbc:	stp	q0, q0, [x22]
  462cc0:	str	x8, [sp, #24]
  462cc4:	ldr	x8, [x26, #16]
  462cc8:	str	x27, [sp, #80]
  462ccc:	cbz	x8, 462f78 <feof@plt+0x5f6d8>
  462cd0:	mov	x27, xzr
  462cd4:	mov	x20, xzr
  462cd8:	str	wzr, [sp, #76]
  462cdc:	str	wzr, [sp, #60]
  462ce0:	str	xzr, [sp, #48]
  462ce4:	str	wzr, [sp, #20]
  462ce8:	str	wzr, [sp, #44]
  462cec:	str	xzr, [sp, #32]
  462cf0:	str	wzr, [sp, #96]
  462cf4:	str	xzr, [sp, #88]
  462cf8:	b	462d78 <feof@plt+0x5f4d8>
  462cfc:	cbz	x8, 46323c <feof@plt+0x5f99c>
  462d00:	ldr	x9, [x24, #96]
  462d04:	mov	x10, xzr
  462d08:	b	462d18 <feof@plt+0x5f478>
  462d0c:	cmp	x10, x11
  462d10:	mov	x8, x11
  462d14:	b.cs	46323c <feof@plt+0x5f99c>  // b.hs, b.nlast
  462d18:	add	x11, x8, x10
  462d1c:	lsr	x11, x11, #1
  462d20:	add	x26, x9, x11, lsl #5
  462d24:	ldr	x12, [x26]
  462d28:	cmp	x12, x20
  462d2c:	b.hi	462d0c <feof@plt+0x5f46c>  // b.pmore
  462d30:	b.cs	462c48 <feof@plt+0x5f3a8>  // b.hs, b.nlast
  462d34:	add	x10, x11, #0x1
  462d38:	mov	x11, x8
  462d3c:	b	462d0c <feof@plt+0x5f46c>
  462d40:	ldr	w8, [sp, #128]
  462d44:	ldr	x9, [sp, #136]
  462d48:	cmp	w8, #0x1
  462d4c:	ldr	x8, [sp, #88]
  462d50:	csel	x8, x9, x8, eq  // eq = none
  462d54:	str	x8, [sp, #88]
  462d58:	ldr	w8, [sp, #96]
  462d5c:	csinc	w8, w8, wzr, ne  // ne = any
  462d60:	str	w8, [sp, #96]
  462d64:	ldr	x8, [x26, #16]
  462d68:	add	x20, x20, #0x1
  462d6c:	add	x27, x27, #0x8
  462d70:	cmp	x20, x8
  462d74:	b.cs	462f94 <feof@plt+0x5f6f4>  // b.hs, b.nlast
  462d78:	ldr	x8, [x26, #24]
  462d7c:	ldp	w3, w2, [x24, #40]
  462d80:	ldr	w4, [x24, #48]
  462d84:	ldp	x5, x6, [x25, #104]
  462d88:	add	x8, x8, x27
  462d8c:	ldr	w0, [x8, #4]
  462d90:	ldr	x7, [x25, #8]
  462d94:	add	x8, sp, #0x80
  462d98:	mov	x1, x19
  462d9c:	str	x8, [sp]
  462da0:	bl	45f298 <feof@plt+0x5b9f8>
  462da4:	cbz	w0, 463250 <feof@plt+0x5f9b0>
  462da8:	ldr	w8, [x26, #8]
  462dac:	cmp	w8, #0x11
  462db0:	b.ne	462dd0 <feof@plt+0x5f530>  // b.any
  462db4:	ldr	x8, [x26, #24]
  462db8:	ldr	w9, [sp, #128]
  462dbc:	ldr	x10, [sp, #136]
  462dc0:	ldr	w8, [x8, x27]
  462dc4:	cmp	w9, #0x1
  462dc8:	ccmp	w8, #0x11, #0x0, eq  // eq = none
  462dcc:	csel	x23, x10, x23, eq  // eq = none
  462dd0:	cbz	w28, 462d64 <feof@plt+0x5f4c4>
  462dd4:	ldr	x8, [x26, #24]
  462dd8:	ldr	w9, [x8, x27]
  462ddc:	cmp	w9, #0x30
  462de0:	b.le	462e30 <feof@plt+0x5f590>
  462de4:	sub	w10, w9, #0x47
  462de8:	cmp	w10, #0x27
  462dec:	b.hi	462e70 <feof@plt+0x5f5d0>  // b.pmore
  462df0:	adrp	x12, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  462df4:	add	x12, x12, #0xf06
  462df8:	adr	x9, 462d64 <feof@plt+0x5f4c4>
  462dfc:	ldrb	w11, [x12, x10]
  462e00:	add	x9, x9, x11, lsl #2
  462e04:	br	x9
  462e08:	ldr	w8, [sp, #128]
  462e0c:	cmp	w8, #0x8
  462e10:	b.eq	462e1c <feof@plt+0x5f57c>  // b.none
  462e14:	cmp	w8, #0x2
  462e18:	b.ne	462d64 <feof@plt+0x5f4c4>  // b.any
  462e1c:	ldr	x8, [sp, #136]
  462e20:	str	x8, [sp, #48]
  462e24:	mov	w8, #0x1                   	// #1
  462e28:	str	w8, [sp, #60]
  462e2c:	b	462d64 <feof@plt+0x5f4c4>
  462e30:	cmp	w9, #0x3
  462e34:	b.eq	462ed8 <feof@plt+0x5f638>  // b.none
  462e38:	cmp	w9, #0x11
  462e3c:	b.eq	462d40 <feof@plt+0x5f4a0>  // b.none
  462e40:	cmp	w9, #0x12
  462e44:	b.ne	462d64 <feof@plt+0x5f4c4>  // b.any
  462e48:	ldr	w8, [sp, #128]
  462e4c:	cmp	w8, #0x2
  462e50:	b.eq	462f44 <feof@plt+0x5f6a4>  // b.none
  462e54:	cmp	w8, #0x1
  462e58:	b.ne	462d64 <feof@plt+0x5f4c4>  // b.any
  462e5c:	ldr	x8, [sp, #136]
  462e60:	str	x8, [sp, #32]
  462e64:	mov	w8, #0x1                   	// #1
  462e68:	str	w8, [sp, #44]
  462e6c:	b	462d64 <feof@plt+0x5f4c4>
  462e70:	cmp	w9, #0x31
  462e74:	b.eq	462ea4 <feof@plt+0x5f604>  // b.none
  462e78:	mov	w8, #0x2007                	// #8199
  462e7c:	cmp	w9, w8
  462e80:	b.ne	462d64 <feof@plt+0x5f4c4>  // b.any
  462e84:	ldr	w8, [sp, #128]
  462e88:	cmp	w8, #0x4
  462e8c:	b.ne	462d64 <feof@plt+0x5f4c4>  // b.any
  462e90:	ldr	x8, [sp, #136]
  462e94:	str	x8, [x22]
  462e98:	mov	w8, #0x1                   	// #1
  462e9c:	str	w8, [sp, #76]
  462ea0:	b	462d64 <feof@plt+0x5f4c4>
  462ea4:	ldr	w9, [sp, #76]
  462ea8:	cbnz	w9, 462d64 <feof@plt+0x5f4c4>
  462eac:	ldr	x4, [sp, #80]
  462eb0:	add	x2, x8, x27
  462eb4:	add	x3, sp, #0x80
  462eb8:	mov	x0, x25
  462ebc:	mov	x1, x24
  462ec0:	mov	x5, x21
  462ec4:	bl	46330c <feof@plt+0x5fa6c>
  462ec8:	cbz	x0, 462f60 <feof@plt+0x5f6c0>
  462ecc:	str	wzr, [sp, #76]
  462ed0:	str	x0, [x22]
  462ed4:	b	462d64 <feof@plt+0x5f4c4>
  462ed8:	ldr	x8, [x22]
  462edc:	cbnz	x8, 462d64 <feof@plt+0x5f4c4>
  462ee0:	ldr	w8, [sp, #128]
  462ee4:	cmp	w8, #0x4
  462ee8:	b.ne	462d64 <feof@plt+0x5f4c4>  // b.any
  462eec:	ldr	x8, [sp, #136]
  462ef0:	str	x8, [x22]
  462ef4:	b	462d64 <feof@plt+0x5f4c4>
  462ef8:	ldr	w8, [sp, #128]
  462efc:	cmp	w8, #0x2
  462f00:	b.ne	462d64 <feof@plt+0x5f4c4>  // b.any
  462f04:	ldr	x8, [sp, #136]
  462f08:	cbz	x8, 462f68 <feof@plt+0x5f6c8>
  462f0c:	ldr	x10, [sp, #64]
  462f10:	sub	x8, x8, #0x1
  462f14:	ldr	x9, [x10, #48]
  462f18:	cmp	x8, x9
  462f1c:	b.cs	463278 <feof@plt+0x5f9d8>  // b.hs, b.nlast
  462f20:	ldr	x9, [x10, #56]
  462f24:	ldr	x8, [x9, x8, lsl #3]
  462f28:	b	462f70 <feof@plt+0x5f6d0>
  462f2c:	ldr	w8, [sp, #128]
  462f30:	cmp	w8, #0x2
  462f34:	b.ne	462d64 <feof@plt+0x5f4c4>  // b.any
  462f38:	ldr	x8, [sp, #136]
  462f3c:	str	w8, [x22, #16]
  462f40:	b	462d64 <feof@plt+0x5f4c4>
  462f44:	ldr	x8, [sp, #136]
  462f48:	str	x8, [sp, #32]
  462f4c:	mov	w8, #0x1                   	// #1
  462f50:	str	w8, [sp, #44]
  462f54:	mov	w8, #0x1                   	// #1
  462f58:	str	w8, [sp, #20]
  462f5c:	b	462d64 <feof@plt+0x5f4c4>
  462f60:	str	wzr, [sp, #76]
  462f64:	b	462d64 <feof@plt+0x5f4c4>
  462f68:	adrp	x8, 48f000 <_obstack_memory_used@@Base+0x132fc>
  462f6c:	add	x8, x8, #0x23b
  462f70:	str	x8, [x22, #8]
  462f74:	b	462d64 <feof@plt+0x5f4c4>
  462f78:	str	xzr, [sp, #88]
  462f7c:	str	wzr, [sp, #96]
  462f80:	str	xzr, [sp, #32]
  462f84:	str	wzr, [sp, #44]
  462f88:	str	wzr, [sp, #20]
  462f8c:	str	xzr, [sp, #48]
  462f90:	str	wzr, [sp, #60]
  462f94:	cbz	w28, 462fa0 <feof@plt+0x5f700>
  462f98:	ldr	x8, [x22]
  462f9c:	cbz	x8, 4630b8 <feof@plt+0x5f818>
  462fa0:	ldr	x27, [sp, #80]
  462fa4:	ldr	x20, [sp, #112]
  462fa8:	cbz	w28, 4630d8 <feof@plt+0x5f838>
  462fac:	ldr	w8, [sp, #60]
  462fb0:	cbz	w8, 462fec <feof@plt+0x5f74c>
  462fb4:	ldr	x8, [sp, #24]
  462fb8:	ldr	x4, [sp, #48]
  462fbc:	mov	x0, x20
  462fc0:	mov	x1, x25
  462fc4:	mov	x2, x24
  462fc8:	mov	x3, x22
  462fcc:	mov	x5, x23
  462fd0:	mov	x6, x27
  462fd4:	mov	x7, x21
  462fd8:	str	x8, [sp]
  462fdc:	bl	463418 <feof@plt+0x5fb78>
  462fe0:	ldr	x28, [sp, #64]
  462fe4:	cbnz	w0, 4630a0 <feof@plt+0x5f800>
  462fe8:	b	463250 <feof@plt+0x5f9b0>
  462fec:	ldr	x28, [sp, #64]
  462ff0:	ldr	w8, [sp, #96]
  462ff4:	cbz	w8, 4631bc <feof@plt+0x5f91c>
  462ff8:	ldr	w8, [sp, #44]
  462ffc:	cbz	w8, 4631bc <feof@plt+0x5f91c>
  463000:	ldr	w8, [sp, #20]
  463004:	ldp	x27, x12, [sp, #24]
  463008:	ldr	x11, [sp, #88]
  46300c:	ldr	x9, [x25, #16]
  463010:	cmp	w8, #0x0
  463014:	ldr	x8, [x27, #24]
  463018:	csel	x10, xzr, x11, eq  // eq = none
  46301c:	add	x10, x10, x12
  463020:	add	x20, x9, x11
  463024:	add	x11, x10, x9
  463028:	cbz	x8, 463060 <feof@plt+0x5f7c0>
  46302c:	ldr	x9, [x27]
  463030:	mov	w10, #0x18                  	// #24
  463034:	madd	x9, x8, x10, x9
  463038:	ldur	x8, [x9, #-16]
  46303c:	cmp	x20, x8
  463040:	b.eq	463050 <feof@plt+0x5f7b0>  // b.none
  463044:	add	x10, x8, #0x1
  463048:	cmp	x20, x10
  46304c:	b.ne	463060 <feof@plt+0x5f7c0>  // b.any
  463050:	sub	x9, x9, #0x18
  463054:	ldr	x10, [x9, #16]
  463058:	cmp	x10, x22
  46305c:	b.eq	4631d8 <feof@plt+0x5f938>  // b.none
  463060:	ldr	x0, [sp, #112]
  463064:	ldr	x2, [sp, #80]
  463068:	mov	w1, #0x18                  	// #24
  46306c:	mov	x3, x21
  463070:	mov	x4, x27
  463074:	str	x11, [sp, #96]
  463078:	bl	459e18 <feof@plt+0x56578>
  46307c:	cbz	x0, 463250 <feof@plt+0x5f9b0>
  463080:	ldr	x8, [sp, #96]
  463084:	str	x22, [x0, #16]
  463088:	stp	x20, x8, [x0]
  46308c:	ldr	x8, [x27, #24]
  463090:	add	x8, x8, #0x1
  463094:	str	x8, [x27, #24]
  463098:	ldr	x27, [sp, #80]
  46309c:	ldr	x20, [sp, #112]
  4630a0:	mov	w8, #0x1                   	// #1
  4630a4:	ldr	w9, [x26, #12]
  4630a8:	cbnz	w9, 4630e8 <feof@plt+0x5f848>
  4630ac:	b	4631ac <feof@plt+0x5f90c>
  4630b0:	ldr	x8, [sp, #120]
  4630b4:	b	462cc0 <feof@plt+0x5f420>
  4630b8:	ldr	x20, [sp, #112]
  4630bc:	ldr	x27, [sp, #80]
  4630c0:	mov	w2, #0x28                  	// #40
  4630c4:	mov	x1, x22
  4630c8:	mov	x0, x20
  4630cc:	mov	x3, x27
  4630d0:	mov	x4, x21
  4630d4:	bl	459d08 <feof@plt+0x56468>
  4630d8:	ldr	x28, [sp, #64]
  4630dc:	mov	w8, wzr
  4630e0:	ldr	w9, [x26, #12]
  4630e4:	cbz	w9, 4631ac <feof@plt+0x5f90c>
  4630e8:	cbz	w8, 463174 <feof@plt+0x5f8d4>
  4630ec:	add	x8, sp, #0x90
  4630f0:	str	x8, [sp, #8]
  4630f4:	ldr	x8, [sp, #120]
  4630f8:	movi	v0.2d, #0x0
  4630fc:	mov	x0, x20
  463100:	mov	x1, x25
  463104:	mov	x2, x24
  463108:	mov	x3, x23
  46310c:	mov	x4, x19
  463110:	mov	x5, x28
  463114:	mov	x6, x27
  463118:	mov	x7, x21
  46311c:	stp	q0, q0, [sp, #144]
  463120:	str	x8, [sp]
  463124:	bl	462b24 <feof@plt+0x5f284>
  463128:	cbz	w0, 463250 <feof@plt+0x5f9b0>
  46312c:	ldr	x8, [sp, #168]
  463130:	cbz	x8, 4631ac <feof@plt+0x5f90c>
  463134:	add	x1, sp, #0x90
  463138:	mov	x0, x20
  46313c:	mov	x2, x27
  463140:	mov	x3, x21
  463144:	bl	459f30 <feof@plt+0x56690>
  463148:	cbz	w0, 463250 <feof@plt+0x5f9b0>
  46314c:	ldr	x26, [sp, #144]
  463150:	ldr	x1, [sp, #168]
  463154:	adrp	x3, 463000 <feof@plt+0x5f760>
  463158:	mov	w2, #0x18                  	// #24
  46315c:	mov	x0, x26
  463160:	add	x3, x3, #0x2b8
  463164:	bl	463c0c <feof@plt+0x6036c>
  463168:	ldr	x8, [sp, #168]
  46316c:	stp	x26, x8, [x22, #24]
  463170:	b	4631ac <feof@plt+0x5f90c>
  463174:	ldr	x8, [sp, #104]
  463178:	mov	x0, x20
  46317c:	mov	x1, x25
  463180:	mov	x2, x24
  463184:	str	x8, [sp, #8]
  463188:	ldr	x8, [sp, #120]
  46318c:	mov	x3, x23
  463190:	mov	x4, x19
  463194:	mov	x5, x28
  463198:	mov	x6, x27
  46319c:	mov	x7, x21
  4631a0:	str	x8, [sp]
  4631a4:	bl	462b24 <feof@plt+0x5f284>
  4631a8:	cbz	w0, 463250 <feof@plt+0x5f9b0>
  4631ac:	ldr	x8, [x19, #24]
  4631b0:	mov	w22, #0x1                   	// #1
  4631b4:	cbnz	x8, 462b7c <feof@plt+0x5f2dc>
  4631b8:	b	463254 <feof@plt+0x5f9b4>
  4631bc:	mov	w2, #0x28                  	// #40
  4631c0:	mov	x0, x20
  4631c4:	mov	x1, x22
  4631c8:	mov	x3, x27
  4631cc:	mov	x4, x21
  4631d0:	bl	459d08 <feof@plt+0x56468>
  4631d4:	b	4630dc <feof@plt+0x5f83c>
  4631d8:	cmp	x11, x8
  4631dc:	b.ls	463098 <feof@plt+0x5f7f8>  // b.plast
  4631e0:	str	x11, [x9, #8]
  4631e4:	b	463098 <feof@plt+0x5f7f8>
  4631e8:	mov	w22, #0x1                   	// #1
  4631ec:	b	463254 <feof@plt+0x5f9b4>
  4631f0:	ldr	w8, [x19, #56]
  4631f4:	mov	w22, #0x1                   	// #1
  4631f8:	cbnz	w8, 463254 <feof@plt+0x5f9b4>
  4631fc:	ldr	w8, [x19, #8]
  463200:	ldr	x4, [x19]
  463204:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463208:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  46320c:	sub	w5, w10, w8
  463210:	add	x2, x2, #0xf77
  463214:	add	x3, x3, #0xf67
  463218:	add	x0, sp, #0x90
  46321c:	mov	w1, #0xc8                  	// #200
  463220:	bl	403530 <snprintf@plt>
  463224:	ldp	x8, x0, [x19, #40]
  463228:	add	x1, sp, #0x90
  46322c:	mov	w2, wzr
  463230:	blr	x8
  463234:	str	w22, [x19, #56]
  463238:	b	463254 <feof@plt+0x5f9b4>
  46323c:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463240:	add	x1, x1, #0xfa1
  463244:	mov	x0, x21
  463248:	mov	w2, wzr
  46324c:	blr	x27
  463250:	mov	w22, wzr
  463254:	mov	w0, w22
  463258:	ldp	x20, x19, [sp, #432]
  46325c:	ldp	x22, x21, [sp, #416]
  463260:	ldp	x24, x23, [sp, #400]
  463264:	ldp	x26, x25, [sp, #384]
  463268:	ldp	x28, x27, [sp, #368]
  46326c:	ldp	x29, x30, [sp, #352]
  463270:	add	sp, sp, #0x1c0
  463274:	ret
  463278:	ldr	w8, [x19, #16]
  46327c:	ldr	w9, [x19, #8]
  463280:	ldr	x4, [x19]
  463284:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463288:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46328c:	sub	w5, w8, w9
  463290:	add	x2, x2, #0xf77
  463294:	add	x3, x3, #0x118
  463298:	add	x0, sp, #0x90
  46329c:	mov	w1, #0xc8                  	// #200
  4632a0:	bl	403530 <snprintf@plt>
  4632a4:	ldp	x8, x0, [x19, #40]
  4632a8:	add	x1, sp, #0x90
  4632ac:	mov	w2, wzr
  4632b0:	blr	x8
  4632b4:	b	463250 <feof@plt+0x5f9b0>
  4632b8:	ldr	x8, [x0]
  4632bc:	ldr	x9, [x1]
  4632c0:	cmp	x8, x9
  4632c4:	b.cs	4632d0 <feof@plt+0x5fa30>  // b.hs, b.nlast
  4632c8:	mov	w0, #0xffffffff            	// #-1
  4632cc:	ret
  4632d0:	b.ls	4632dc <feof@plt+0x5fa3c>  // b.plast
  4632d4:	mov	w0, #0x1                   	// #1
  4632d8:	ret
  4632dc:	ldr	x8, [x0, #8]
  4632e0:	ldr	x9, [x1, #8]
  4632e4:	cmp	x8, x9
  4632e8:	b.cs	4632f4 <feof@plt+0x5fa54>  // b.hs, b.nlast
  4632ec:	mov	w0, #0x1                   	// #1
  4632f0:	ret
  4632f4:	b.hi	4632c8 <feof@plt+0x5fa28>  // b.pmore
  4632f8:	ldr	x8, [x0, #16]
  4632fc:	ldr	x9, [x1, #16]
  463300:	ldr	x0, [x8]
  463304:	ldr	x1, [x9]
  463308:	b	403640 <strcmp@plt>
  46330c:	ldr	w8, [x2]
  463310:	cmp	w8, #0x47
  463314:	b.eq	463320 <feof@plt+0x5fa80>  // b.none
  463318:	cmp	w8, #0x31
  46331c:	b.ne	46332c <feof@plt+0x5fa8c>  // b.any
  463320:	ldr	w8, [x2, #4]
  463324:	cmp	w8, #0x20
  463328:	b.ne	463334 <feof@plt+0x5fa94>  // b.any
  46332c:	mov	x0, xzr
  463330:	ret
  463334:	ldr	w8, [x3]
  463338:	sub	w8, w8, #0x2
  46333c:	cmp	w8, #0x5
  463340:	b.hi	46332c <feof@plt+0x5fa8c>  // b.pmore
  463344:	adrp	x9, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463348:	add	x9, x9, #0xf2e
  46334c:	adr	x10, 46332c <feof@plt+0x5fa8c>
  463350:	ldrb	w11, [x9, x8]
  463354:	add	x10, x10, x11, lsl #2
  463358:	br	x10
  46335c:	ldr	x2, [x3, #8]
  463360:	mov	x3, x4
  463364:	mov	x4, x5
  463368:	b	4638cc <feof@plt+0x6002c>
  46336c:	ldr	x10, [x0, #48]
  463370:	cbz	x10, 46332c <feof@plt+0x5fa8c>
  463374:	ldr	x8, [x0, #40]
  463378:	ldr	x9, [x3, #8]
  46337c:	mov	x11, xzr
  463380:	b	463390 <feof@plt+0x5faf0>
  463384:	cmp	x11, x12
  463388:	mov	x10, x12
  46338c:	b.cs	46332c <feof@plt+0x5fa8c>  // b.hs, b.nlast
  463390:	add	x12, x10, x11
  463394:	lsr	x12, x12, #1
  463398:	ldr	x1, [x8, x12, lsl #3]
  46339c:	ldr	x13, [x1, #24]
  4633a0:	subs	x2, x9, x13
  4633a4:	b.cc	463384 <feof@plt+0x5fae4>  // b.lo, b.ul, b.last
  4633a8:	ldr	x11, [x1, #32]
  4633ac:	cmp	x11, x9
  4633b0:	b.hi	463360 <feof@plt+0x5fac0>  // b.pmore
  4633b4:	add	x11, x12, #0x1
  4633b8:	mov	x12, x10
  4633bc:	b	463384 <feof@plt+0x5fae4>
  4633c0:	ldr	x0, [x0, #8]
  4633c4:	ldr	x9, [x0, #48]
  4633c8:	cbz	x9, 46332c <feof@plt+0x5fa8c>
  4633cc:	ldr	x8, [x0, #40]
  4633d0:	ldr	x10, [x3, #8]
  4633d4:	mov	x11, xzr
  4633d8:	b	4633e8 <feof@plt+0x5fb48>
  4633dc:	cmp	x11, x12
  4633e0:	mov	x9, x12
  4633e4:	b.cs	46332c <feof@plt+0x5fa8c>  // b.hs, b.nlast
  4633e8:	add	x12, x9, x11
  4633ec:	lsr	x12, x12, #1
  4633f0:	ldr	x1, [x8, x12, lsl #3]
  4633f4:	ldr	x13, [x1, #24]
  4633f8:	subs	x2, x10, x13
  4633fc:	b.cc	4633dc <feof@plt+0x5fb3c>  // b.lo, b.ul, b.last
  463400:	ldr	x11, [x1, #32]
  463404:	cmp	x11, x10
  463408:	b.hi	463360 <feof@plt+0x5fac0>  // b.pmore
  46340c:	add	x11, x12, #0x1
  463410:	mov	x12, x9
  463414:	b	4633dc <feof@plt+0x5fb3c>
  463418:	sub	sp, sp, #0x170
  46341c:	stp	x29, x30, [sp, #272]
  463420:	stp	x28, x27, [sp, #288]
  463424:	stp	x26, x25, [sp, #304]
  463428:	stp	x24, x23, [sp, #320]
  46342c:	stp	x22, x21, [sp, #336]
  463430:	stp	x20, x19, [sp, #352]
  463434:	add	x29, sp, #0x110
  463438:	ldr	x8, [x1, #96]
  46343c:	mov	x20, x7
  463440:	mov	x19, x6
  463444:	subs	x8, x8, x4
  463448:	b.ls	463884 <feof@plt+0x5ffe4>  // b.plast
  46344c:	adrp	x9, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463450:	add	x9, x9, #0xd1a
  463454:	str	x9, [sp]
  463458:	ldr	x9, [x1, #88]
  46345c:	str	x8, [sp, #24]
  463460:	ldr	x26, [x29, #96]
  463464:	mov	x24, x5
  463468:	add	x8, x9, x4
  46346c:	stp	x9, x8, [sp, #8]
  463470:	ldr	w8, [x1, #120]
  463474:	mov	x21, x3
  463478:	mov	x22, x2
  46347c:	mov	x23, x1
  463480:	mov	x25, x0
  463484:	stp	x19, x20, [sp, #40]
  463488:	str	wzr, [sp, #56]
  46348c:	str	w8, [sp, #32]
  463490:	b	4634a0 <feof@plt+0x5fc00>
  463494:	mov	x24, x0
  463498:	ldr	w8, [sp, #56]
  46349c:	cbnz	w8, 463898 <feof@plt+0x5fff8>
  4634a0:	ldr	w8, [x22, #48]
  4634a4:	sub	w8, w8, #0x1
  4634a8:	cmp	w8, #0x7
  4634ac:	b.hi	463514 <feof@plt+0x5fc74>  // b.pmore
  4634b0:	adrp	x11, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4634b4:	add	x11, x11, #0xf34
  4634b8:	adr	x9, 4634c8 <feof@plt+0x5fc28>
  4634bc:	ldrb	w10, [x11, x8]
  4634c0:	add	x9, x9, x10, lsl #2
  4634c4:	br	x9
  4634c8:	ldp	x8, x9, [sp, #16]
  4634cc:	cbz	x9, 463564 <feof@plt+0x5fcc4>
  4634d0:	add	x10, x8, #0x1
  4634d4:	sub	x9, x9, #0x1
  4634d8:	stp	x10, x9, [sp, #16]
  4634dc:	ldrb	w28, [x8]
  4634e0:	b	4635ec <feof@plt+0x5fd4c>
  4634e4:	ldp	x8, x9, [sp, #16]
  4634e8:	cmp	x9, #0x1
  4634ec:	b.ls	463564 <feof@plt+0x5fcc4>  // b.plast
  4634f0:	ldr	w10, [sp, #32]
  4634f4:	add	x11, x8, #0x2
  4634f8:	sub	x9, x9, #0x2
  4634fc:	stp	x11, x9, [sp, #16]
  463500:	cbz	w10, 4635e0 <feof@plt+0x5fd40>
  463504:	ldrh	w8, [x8]
  463508:	lsl	x8, x8, #48
  46350c:	rev	x28, x8
  463510:	b	4635ec <feof@plt+0x5fd4c>
  463514:	ldr	w8, [sp, #16]
  463518:	ldr	w9, [sp, #8]
  46351c:	ldr	x4, [sp]
  463520:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463524:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  463528:	sub	w5, w8, w9
  46352c:	add	x0, sp, #0x40
  463530:	mov	w1, #0xc8                  	// #200
  463534:	add	x2, x2, #0xf77
  463538:	add	x3, x3, #0xf
  46353c:	bl	403530 <snprintf@plt>
  463540:	ldp	x8, x0, [sp, #40]
  463544:	add	x1, sp, #0x40
  463548:	mov	w2, wzr
  46354c:	blr	x8
  463550:	mov	x28, xzr
  463554:	b	4635ec <feof@plt+0x5fd4c>
  463558:	ldp	x8, x9, [sp, #16]
  46355c:	cmp	x9, #0x3
  463560:	b.hi	4635bc <feof@plt+0x5fd1c>  // b.pmore
  463564:	ldr	w9, [sp, #8]
  463568:	ldr	x4, [sp]
  46356c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463570:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463574:	sub	w5, w8, w9
  463578:	add	x0, sp, #0x40
  46357c:	mov	w1, #0xc8                  	// #200
  463580:	add	x2, x2, #0xf77
  463584:	add	x3, x3, #0xf67
  463588:	bl	403530 <snprintf@plt>
  46358c:	ldp	x8, x0, [sp, #40]
  463590:	add	x1, sp, #0x40
  463594:	mov	w2, wzr
  463598:	blr	x8
  46359c:	mov	w8, #0x1                   	// #1
  4635a0:	mov	x28, xzr
  4635a4:	str	w8, [sp, #56]
  4635a8:	b	4635ec <feof@plt+0x5fd4c>
  4635ac:	mov	x0, sp
  4635b0:	bl	45f1d4 <feof@plt+0x5b934>
  4635b4:	mov	x28, x0
  4635b8:	b	4635ec <feof@plt+0x5fd4c>
  4635bc:	ldr	w10, [sp, #32]
  4635c0:	add	x11, x8, #0x4
  4635c4:	sub	x9, x9, #0x4
  4635c8:	stp	x11, x9, [sp, #16]
  4635cc:	cbz	w10, 4635e8 <feof@plt+0x5fd48>
  4635d0:	ldr	w8, [x8]
  4635d4:	lsl	x8, x8, #32
  4635d8:	rev	x28, x8
  4635dc:	b	4635ec <feof@plt+0x5fd4c>
  4635e0:	ldrh	w28, [x8]
  4635e4:	b	4635ec <feof@plt+0x5fd4c>
  4635e8:	ldr	w28, [x8]
  4635ec:	ldr	w8, [x22, #48]
  4635f0:	sub	w8, w8, #0x1
  4635f4:	cmp	w8, #0x7
  4635f8:	b.hi	463660 <feof@plt+0x5fdc0>  // b.pmore
  4635fc:	adrp	x11, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463600:	add	x11, x11, #0xf3c
  463604:	adr	x9, 463614 <feof@plt+0x5fd74>
  463608:	ldrb	w10, [x11, x8]
  46360c:	add	x9, x9, x10, lsl #2
  463610:	br	x9
  463614:	ldp	x8, x9, [sp, #16]
  463618:	cbz	x9, 4636ec <feof@plt+0x5fe4c>
  46361c:	add	x10, x8, #0x1
  463620:	sub	x9, x9, #0x1
  463624:	stp	x10, x9, [sp, #16]
  463628:	ldrb	w0, [x8]
  46362c:	b	463790 <feof@plt+0x5fef0>
  463630:	ldp	x8, x9, [sp, #16]
  463634:	cmp	x9, #0x1
  463638:	b.ls	4636ac <feof@plt+0x5fe0c>  // b.plast
  46363c:	ldr	w10, [sp, #32]
  463640:	add	x11, x8, #0x2
  463644:	sub	x9, x9, #0x2
  463648:	stp	x11, x9, [sp, #16]
  46364c:	cbz	w10, 46373c <feof@plt+0x5fe9c>
  463650:	ldrh	w8, [x8]
  463654:	lsl	x8, x8, #48
  463658:	rev	x0, x8
  46365c:	b	463790 <feof@plt+0x5fef0>
  463660:	ldr	w8, [sp, #16]
  463664:	ldr	w9, [sp, #8]
  463668:	ldr	x4, [sp]
  46366c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463670:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  463674:	sub	w5, w8, w9
  463678:	add	x0, sp, #0x40
  46367c:	mov	w1, #0xc8                  	// #200
  463680:	add	x2, x2, #0xf77
  463684:	add	x3, x3, #0xf
  463688:	bl	403530 <snprintf@plt>
  46368c:	ldp	x8, x0, [sp, #40]
  463690:	add	x1, sp, #0x40
  463694:	mov	w2, wzr
  463698:	blr	x8
  46369c:	b	4636b4 <feof@plt+0x5fe14>
  4636a0:	ldp	x8, x9, [sp, #16]
  4636a4:	cmp	x9, #0x3
  4636a8:	b.hi	4636c8 <feof@plt+0x5fe28>  // b.pmore
  4636ac:	ldr	w9, [sp, #56]
  4636b0:	cbz	w9, 4636fc <feof@plt+0x5fe5c>
  4636b4:	mov	x0, xzr
  4636b8:	b	463790 <feof@plt+0x5fef0>
  4636bc:	mov	x0, sp
  4636c0:	bl	45f1d4 <feof@plt+0x5b934>
  4636c4:	b	463790 <feof@plt+0x5fef0>
  4636c8:	ldr	w10, [sp, #32]
  4636cc:	add	x11, x8, #0x4
  4636d0:	sub	x9, x9, #0x4
  4636d4:	stp	x11, x9, [sp, #16]
  4636d8:	cbz	w10, 463744 <feof@plt+0x5fea4>
  4636dc:	ldr	w8, [x8]
  4636e0:	lsl	x8, x8, #32
  4636e4:	rev	x0, x8
  4636e8:	b	463790 <feof@plt+0x5fef0>
  4636ec:	ldr	w9, [sp, #56]
  4636f0:	cbz	w9, 46374c <feof@plt+0x5feac>
  4636f4:	mov	w0, wzr
  4636f8:	b	463790 <feof@plt+0x5fef0>
  4636fc:	ldr	w9, [sp, #8]
  463700:	ldr	x4, [sp]
  463704:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463708:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  46370c:	sub	w5, w8, w9
  463710:	add	x0, sp, #0x40
  463714:	mov	w1, #0xc8                  	// #200
  463718:	add	x2, x2, #0xf77
  46371c:	add	x3, x3, #0xf67
  463720:	bl	403530 <snprintf@plt>
  463724:	ldp	x8, x0, [sp, #40]
  463728:	add	x1, sp, #0x40
  46372c:	mov	w2, wzr
  463730:	blr	x8
  463734:	mov	x0, xzr
  463738:	b	463788 <feof@plt+0x5fee8>
  46373c:	ldrh	w0, [x8]
  463740:	b	463790 <feof@plt+0x5fef0>
  463744:	ldr	w0, [x8]
  463748:	b	463790 <feof@plt+0x5fef0>
  46374c:	ldr	w9, [sp, #8]
  463750:	ldr	x4, [sp]
  463754:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463758:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  46375c:	sub	w5, w8, w9
  463760:	add	x0, sp, #0x40
  463764:	mov	w1, #0xc8                  	// #200
  463768:	add	x2, x2, #0xf77
  46376c:	add	x3, x3, #0xf67
  463770:	bl	403530 <snprintf@plt>
  463774:	ldp	x8, x0, [sp, #40]
  463778:	add	x1, sp, #0x40
  46377c:	mov	w2, wzr
  463780:	blr	x8
  463784:	mov	w0, wzr
  463788:	mov	w8, #0x1                   	// #1
  46378c:	str	w8, [sp, #56]
  463790:	orr	x8, x0, x28
  463794:	cbz	x8, 4638a0 <feof@plt+0x60000>
  463798:	ldr	w8, [x22, #48]
  46379c:	sub	w8, w8, #0x1
  4637a0:	cmp	w8, #0x7
  4637a4:	b.hi	4637f4 <feof@plt+0x5ff54>  // b.pmore
  4637a8:	adrp	x11, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4637ac:	add	x11, x11, #0xf44
  4637b0:	adr	x9, 4637c0 <feof@plt+0x5ff20>
  4637b4:	ldrb	w10, [x11, x8]
  4637b8:	add	x9, x9, x10, lsl #2
  4637bc:	br	x9
  4637c0:	cmp	x28, #0xff
  4637c4:	b.eq	463494 <feof@plt+0x5fbf4>  // b.none
  4637c8:	b	4637f4 <feof@plt+0x5ff54>
  4637cc:	mov	w8, #0xffff                	// #65535
  4637d0:	cmp	x28, x8
  4637d4:	b.eq	463494 <feof@plt+0x5fbf4>  // b.none
  4637d8:	b	4637f4 <feof@plt+0x5ff54>
  4637dc:	mov	w8, #0xffffffff            	// #-1
  4637e0:	cmp	x28, x8
  4637e4:	b.ne	4637f4 <feof@plt+0x5ff54>  // b.any
  4637e8:	b	463494 <feof@plt+0x5fbf4>
  4637ec:	cmn	x28, #0x1
  4637f0:	b.eq	463494 <feof@plt+0x5fbf4>  // b.none
  4637f4:	ldr	x9, [x23, #16]
  4637f8:	ldr	x8, [x26, #24]
  4637fc:	add	x9, x9, x24
  463800:	add	x27, x9, x28
  463804:	add	x28, x9, x0
  463808:	cbz	x8, 463840 <feof@plt+0x5ffa0>
  46380c:	ldr	x9, [x26]
  463810:	mov	w10, #0x18                  	// #24
  463814:	madd	x9, x8, x10, x9
  463818:	ldur	x8, [x9, #-16]
  46381c:	cmp	x27, x8
  463820:	b.eq	463830 <feof@plt+0x5ff90>  // b.none
  463824:	add	x10, x8, #0x1
  463828:	cmp	x27, x10
  46382c:	b.ne	463840 <feof@plt+0x5ffa0>  // b.any
  463830:	sub	x9, x9, #0x18
  463834:	ldr	x10, [x9, #16]
  463838:	cmp	x10, x21
  46383c:	b.eq	463874 <feof@plt+0x5ffd4>  // b.none
  463840:	mov	w1, #0x18                  	// #24
  463844:	mov	x0, x25
  463848:	mov	x2, x19
  46384c:	mov	x3, x20
  463850:	mov	x4, x26
  463854:	bl	459e18 <feof@plt+0x56578>
  463858:	cbz	x0, 4638ac <feof@plt+0x6000c>
  46385c:	stp	x27, x28, [x0]
  463860:	str	x21, [x0, #16]
  463864:	ldr	x8, [x26, #24]
  463868:	add	x8, x8, #0x1
  46386c:	str	x8, [x26, #24]
  463870:	b	463498 <feof@plt+0x5fbf8>
  463874:	cmp	x28, x8
  463878:	b.ls	463498 <feof@plt+0x5fbf8>  // b.plast
  46387c:	str	x28, [x9, #8]
  463880:	b	463498 <feof@plt+0x5fbf8>
  463884:	adrp	x1, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  463888:	add	x1, x1, #0x1a0
  46388c:	mov	x0, x20
  463890:	mov	w2, wzr
  463894:	blr	x19
  463898:	mov	w0, wzr
  46389c:	b	4638ac <feof@plt+0x6000c>
  4638a0:	ldr	w8, [sp, #56]
  4638a4:	cmp	w8, #0x0
  4638a8:	cset	w0, eq  // eq = none
  4638ac:	ldp	x20, x19, [sp, #352]
  4638b0:	ldp	x22, x21, [sp, #336]
  4638b4:	ldp	x24, x23, [sp, #320]
  4638b8:	ldp	x26, x25, [sp, #304]
  4638bc:	ldp	x28, x27, [sp, #288]
  4638c0:	ldp	x29, x30, [sp, #272]
  4638c4:	add	sp, sp, #0x170
  4638c8:	ret
  4638cc:	sub	sp, sp, #0x180
  4638d0:	stp	x29, x30, [sp, #288]
  4638d4:	stp	x28, x27, [sp, #304]
  4638d8:	stp	x26, x25, [sp, #320]
  4638dc:	stp	x24, x23, [sp, #336]
  4638e0:	stp	x22, x21, [sp, #352]
  4638e4:	stp	x20, x19, [sp, #368]
  4638e8:	add	x29, sp, #0x120
  4638ec:	ldr	x9, [x1, #16]
  4638f0:	mov	x20, x4
  4638f4:	mov	x19, x3
  4638f8:	cmp	x9, x2
  4638fc:	b.hi	463a2c <feof@plt+0x6018c>  // b.pmore
  463900:	ldr	x8, [x1, #8]
  463904:	sub	x9, x2, x9
  463908:	mov	x21, x1
  46390c:	cmp	x8, x9
  463910:	b.ls	463a2c <feof@plt+0x6018c>  // b.plast
  463914:	adrp	x10, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463918:	add	x10, x10, #0xcf4
  46391c:	str	x10, [sp, #16]
  463920:	ldr	x10, [x0, #56]
  463924:	mov	x22, x0
  463928:	str	x10, [sp, #24]
  46392c:	ldr	x11, [x21]
  463930:	subs	x10, x8, x9
  463934:	add	x9, x11, x9
  463938:	stp	x9, x10, [sp, #32]
  46393c:	ldr	w8, [x0, #120]
  463940:	stp	x19, x20, [sp, #56]
  463944:	str	wzr, [sp, #72]
  463948:	str	w8, [sp, #48]
  46394c:	b.eq	4639e0 <feof@plt+0x60140>  // b.none
  463950:	adrp	x23, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463954:	adrp	x24, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  463958:	mov	w8, wzr
  46395c:	mov	w26, wzr
  463960:	mov	x25, xzr
  463964:	add	x23, x23, #0xf77
  463968:	add	x24, x24, #0x30
  46396c:	add	x11, x9, #0x1
  463970:	sub	x10, x10, #0x1
  463974:	stp	x11, x10, [sp, #32]
  463978:	ldrb	w27, [x9]
  46397c:	cmp	w26, #0x3f
  463980:	b.hi	463994 <feof@plt+0x600f4>  // b.pmore
  463984:	and	x9, x27, #0x7f
  463988:	lsl	x9, x9, x26
  46398c:	orr	x25, x9, x25
  463990:	b	4639cc <feof@plt+0x6012c>
  463994:	cbnz	w8, 4639cc <feof@plt+0x6012c>
  463998:	ldr	w8, [sp, #24]
  46399c:	ldr	x4, [sp, #16]
  4639a0:	add	x0, sp, #0x50
  4639a4:	mov	w1, #0xc8                  	// #200
  4639a8:	sub	w5, w11, w8
  4639ac:	mov	x2, x23
  4639b0:	mov	x3, x24
  4639b4:	bl	403530 <snprintf@plt>
  4639b8:	ldp	x8, x0, [sp, #56]
  4639bc:	add	x1, sp, #0x50
  4639c0:	mov	w2, wzr
  4639c4:	blr	x8
  4639c8:	mov	w8, #0x1                   	// #1
  4639cc:	sxtb	w9, w27
  4639d0:	tbz	w9, #31, 463a44 <feof@plt+0x601a4>
  4639d4:	ldp	x9, x10, [sp, #32]
  4639d8:	add	w26, w26, #0x7
  4639dc:	cbnz	x10, 46396c <feof@plt+0x600cc>
  4639e0:	ldr	w8, [sp, #72]
  4639e4:	cbnz	w8, 463a90 <feof@plt+0x601f0>
  4639e8:	ldr	w8, [sp, #24]
  4639ec:	ldr	x4, [sp, #16]
  4639f0:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4639f4:	adrp	x3, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  4639f8:	sub	w5, w9, w8
  4639fc:	add	x2, x2, #0xf77
  463a00:	add	x3, x3, #0xf67
  463a04:	add	x0, sp, #0x50
  463a08:	mov	w1, #0xc8                  	// #200
  463a0c:	bl	403530 <snprintf@plt>
  463a10:	ldp	x8, x0, [sp, #56]
  463a14:	add	x1, sp, #0x50
  463a18:	mov	w2, wzr
  463a1c:	blr	x8
  463a20:	mov	w8, #0x1                   	// #1
  463a24:	str	w8, [sp, #72]
  463a28:	b	463a90 <feof@plt+0x601f0>
  463a2c:	adrp	x1, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  463a30:	add	x1, x1, #0x149
  463a34:	mov	x0, x20
  463a38:	mov	w2, wzr
  463a3c:	blr	x19
  463a40:	b	463acc <feof@plt+0x6022c>
  463a44:	cbz	x25, 463a90 <feof@plt+0x601f0>
  463a48:	ldr	x8, [x21, #88]
  463a4c:	sub	x10, x25, #0x1
  463a50:	cmp	x10, x8
  463a54:	b.cs	463bb4 <feof@plt+0x60314>  // b.hs, b.nlast
  463a58:	ldr	x9, [x21, #96]
  463a5c:	add	x24, x9, x10, lsl #5
  463a60:	ldr	x10, [x24]
  463a64:	cmp	x10, x25
  463a68:	b.ne	463bbc <feof@plt+0x6031c>  // b.any
  463a6c:	cbz	x24, 463acc <feof@plt+0x6022c>
  463a70:	ldr	x8, [x24, #16]
  463a74:	cbz	x8, 463acc <feof@plt+0x6022c>
  463a78:	mov	x25, xzr
  463a7c:	mov	x26, xzr
  463a80:	mov	x23, xzr
  463a84:	add	x27, sp, #0x50
  463a88:	mov	w28, #0x2007                	// #8199
  463a8c:	b	463b14 <feof@plt+0x60274>
  463a90:	ldr	w8, [sp, #32]
  463a94:	ldr	w9, [sp, #24]
  463a98:	ldr	x4, [sp, #16]
  463a9c:	adrp	x2, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463aa0:	adrp	x3, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  463aa4:	sub	w5, w8, w9
  463aa8:	add	x2, x2, #0xf77
  463aac:	add	x3, x3, #0x177
  463ab0:	add	x0, sp, #0x50
  463ab4:	mov	w1, #0xc8                  	// #200
  463ab8:	bl	403530 <snprintf@plt>
  463abc:	ldp	x8, x0, [sp, #56]
  463ac0:	add	x1, sp, #0x50
  463ac4:	mov	w2, wzr
  463ac8:	blr	x8
  463acc:	mov	x23, xzr
  463ad0:	mov	x0, x23
  463ad4:	ldp	x20, x19, [sp, #368]
  463ad8:	ldp	x22, x21, [sp, #352]
  463adc:	ldp	x24, x23, [sp, #336]
  463ae0:	ldp	x26, x25, [sp, #320]
  463ae4:	ldp	x28, x27, [sp, #304]
  463ae8:	ldp	x29, x30, [sp, #288]
  463aec:	add	sp, sp, #0x180
  463af0:	ret
  463af4:	ldr	w8, [sp, #80]
  463af8:	cmp	w8, #0x4
  463afc:	b.eq	463c04 <feof@plt+0x60364>  // b.none
  463b00:	ldr	x8, [x24, #16]
  463b04:	add	x26, x26, #0x1
  463b08:	add	x25, x25, #0x8
  463b0c:	cmp	x26, x8
  463b10:	b.cs	463ad0 <feof@plt+0x60230>  // b.hs, b.nlast
  463b14:	ldr	x8, [x24, #24]
  463b18:	ldp	w3, w2, [x21, #40]
  463b1c:	ldr	w4, [x21, #48]
  463b20:	ldp	x5, x6, [x22, #104]
  463b24:	add	x8, x8, x25
  463b28:	ldr	w0, [x8, #4]
  463b2c:	ldr	x7, [x22, #8]
  463b30:	add	x1, sp, #0x10
  463b34:	str	x27, [sp]
  463b38:	bl	45f298 <feof@plt+0x5b9f8>
  463b3c:	cbz	w0, 463acc <feof@plt+0x6022c>
  463b40:	ldr	x8, [x24, #24]
  463b44:	add	x2, x8, x25
  463b48:	ldr	w8, [x2]
  463b4c:	cmp	w8, #0x6d
  463b50:	b.gt	463b88 <feof@plt+0x602e8>
  463b54:	cmp	w8, #0x3
  463b58:	b.eq	463b9c <feof@plt+0x602fc>  // b.none
  463b5c:	cmp	w8, #0x47
  463b60:	b.ne	463b00 <feof@plt+0x60260>  // b.any
  463b64:	add	x3, sp, #0x50
  463b68:	mov	x0, x22
  463b6c:	mov	x1, x21
  463b70:	mov	x4, x19
  463b74:	mov	x5, x20
  463b78:	bl	46330c <feof@plt+0x5fa6c>
  463b7c:	cmp	x0, #0x0
  463b80:	csel	x23, x23, x0, eq  // eq = none
  463b84:	b	463b00 <feof@plt+0x60260>
  463b88:	cmp	w8, #0x6e
  463b8c:	b.eq	463af4 <feof@plt+0x60254>  // b.none
  463b90:	cmp	w8, w28
  463b94:	b.eq	463af4 <feof@plt+0x60254>  // b.none
  463b98:	b	463b00 <feof@plt+0x60260>
  463b9c:	cbnz	x23, 463b00 <feof@plt+0x60260>
  463ba0:	ldr	w8, [sp, #80]
  463ba4:	ldr	x9, [sp, #88]
  463ba8:	cmp	w8, #0x4
  463bac:	csel	x23, x9, xzr, eq  // eq = none
  463bb0:	b	463b00 <feof@plt+0x60260>
  463bb4:	cbz	x8, 463bf8 <feof@plt+0x60358>
  463bb8:	ldr	x9, [x21, #96]
  463bbc:	mov	x10, xzr
  463bc0:	b	463bd0 <feof@plt+0x60330>
  463bc4:	cmp	x10, x11
  463bc8:	mov	x8, x11
  463bcc:	b.cs	463bf8 <feof@plt+0x60358>  // b.hs, b.nlast
  463bd0:	add	x11, x8, x10
  463bd4:	lsr	x11, x11, #1
  463bd8:	add	x24, x9, x11, lsl #5
  463bdc:	ldr	x12, [x24]
  463be0:	cmp	x12, x25
  463be4:	b.hi	463bc4 <feof@plt+0x60324>  // b.pmore
  463be8:	b.cs	463a6c <feof@plt+0x601cc>  // b.hs, b.nlast
  463bec:	add	x10, x11, #0x1
  463bf0:	mov	x11, x8
  463bf4:	b	463bc4 <feof@plt+0x60324>
  463bf8:	adrp	x1, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  463bfc:	add	x1, x1, #0xfa1
  463c00:	b	463a34 <feof@plt+0x60194>
  463c04:	ldr	x23, [sp, #88]
  463c08:	b	463ad0 <feof@plt+0x60230>
  463c0c:	sub	sp, sp, #0x90
  463c10:	stp	x29, x30, [sp, #48]
  463c14:	stp	x28, x27, [sp, #64]
  463c18:	stp	x26, x25, [sp, #80]
  463c1c:	stp	x24, x23, [sp, #96]
  463c20:	stp	x22, x21, [sp, #112]
  463c24:	stp	x20, x19, [sp, #128]
  463c28:	add	x29, sp, #0x30
  463c2c:	cmp	x1, #0x2
  463c30:	b.cs	463c54 <feof@plt+0x603b4>  // b.hs, b.nlast
  463c34:	ldp	x20, x19, [sp, #128]
  463c38:	ldp	x22, x21, [sp, #112]
  463c3c:	ldp	x24, x23, [sp, #96]
  463c40:	ldp	x26, x25, [sp, #80]
  463c44:	ldp	x28, x27, [sp, #64]
  463c48:	ldp	x29, x30, [sp, #48]
  463c4c:	add	sp, sp, #0x90
  463c50:	ret
  463c54:	lsl	x8, x2, #1
  463c58:	mov	x19, x3
  463c5c:	mov	x20, x2
  463c60:	mov	x22, x1
  463c64:	mov	x21, x0
  463c68:	stur	x8, [x29, #-8]
  463c6c:	and	x26, x2, #0xffffffffffffffe0
  463c70:	add	x8, x2, #0x10
  463c74:	str	x8, [sp]
  463c78:	add	x8, x21, x20
  463c7c:	str	x8, [sp, #16]
  463c80:	add	x8, x21, x26
  463c84:	str	x8, [sp, #8]
  463c88:	ldr	x8, [sp]
  463c8c:	add	x8, x21, x8
  463c90:	str	x8, [sp, #24]
  463c94:	add	x8, x21, #0x10
  463c98:	stur	x8, [x29, #-16]
  463c9c:	cbz	x20, 463d04 <feof@plt+0x60464>
  463ca0:	lsr	x10, x22, #1
  463ca4:	mul	x9, x10, x20
  463ca8:	cmp	x20, #0x20
  463cac:	add	x8, x21, x9
  463cb0:	b.cc	463cd0 <feof@plt+0x60430>  // b.lo, b.ul, b.last
  463cb4:	add	x10, x10, #0x1
  463cb8:	madd	x10, x10, x20, x21
  463cbc:	cmp	x21, x10
  463cc0:	b.cs	463e8c <feof@plt+0x605ec>  // b.hs, b.nlast
  463cc4:	ldr	x10, [sp, #16]
  463cc8:	cmp	x8, x10
  463ccc:	b.cs	463e8c <feof@plt+0x605ec>  // b.hs, b.nlast
  463cd0:	mov	x10, xzr
  463cd4:	mov	x9, x21
  463cd8:	sub	x10, x20, x10
  463cdc:	ldrb	w11, [x8]
  463ce0:	ldrb	w12, [x9]
  463ce4:	subs	x10, x10, #0x1
  463ce8:	strb	w11, [x9], #1
  463cec:	strb	w12, [x8], #1
  463cf0:	b.ne	463cdc <feof@plt+0x6043c>  // b.any
  463cf4:	cmp	x22, #0x2
  463cf8:	b.cs	463d04 <feof@plt+0x60464>  // b.hs, b.nlast
  463cfc:	mov	x23, xzr
  463d00:	b	463e5c <feof@plt+0x605bc>
  463d04:	ldr	x28, [sp, #24]
  463d08:	mov	x27, xzr
  463d0c:	mov	x23, xzr
  463d10:	mov	w25, #0x1                   	// #1
  463d14:	b	463d30 <feof@plt+0x60490>
  463d18:	mov	x23, x8
  463d1c:	add	x25, x25, #0x1
  463d20:	add	x27, x27, #0x1
  463d24:	cmp	x25, x22
  463d28:	add	x28, x28, x20
  463d2c:	b.eq	463e04 <feof@plt+0x60564>  // b.none
  463d30:	madd	x24, x25, x20, x21
  463d34:	mov	x0, x21
  463d38:	mov	x1, x24
  463d3c:	blr	x19
  463d40:	cmp	w0, #0x1
  463d44:	b.lt	463d1c <feof@plt+0x6047c>  // b.tstop
  463d48:	add	x8, x23, #0x1
  463d4c:	cmp	x25, x8
  463d50:	b.eq	463d18 <feof@plt+0x60478>  // b.none
  463d54:	cbz	x20, 463d18 <feof@plt+0x60478>
  463d58:	mul	x10, x8, x20
  463d5c:	cmp	x20, #0x20
  463d60:	add	x9, x21, x10
  463d64:	b.cc	463d98 <feof@plt+0x604f8>  // b.lo, b.ul, b.last
  463d68:	ldur	x12, [x29, #-8]
  463d6c:	mul	x11, x27, x20
  463d70:	add	x12, x12, x11
  463d74:	add	x12, x21, x12
  463d78:	cmp	x9, x12
  463d7c:	b.cs	463dbc <feof@plt+0x6051c>  // b.hs, b.nlast
  463d80:	add	x11, x11, x20
  463d84:	add	x12, x23, #0x2
  463d88:	add	x11, x21, x11
  463d8c:	madd	x12, x12, x20, x21
  463d90:	cmp	x11, x12
  463d94:	b.cs	463dbc <feof@plt+0x6051c>  // b.hs, b.nlast
  463d98:	mov	x10, xzr
  463d9c:	sub	x10, x20, x10
  463da0:	ldrb	w11, [x24]
  463da4:	ldrb	w12, [x9]
  463da8:	subs	x10, x10, #0x1
  463dac:	strb	w11, [x9], #1
  463db0:	strb	w12, [x24], #1
  463db4:	b.ne	463da0 <feof@plt+0x60500>  // b.any
  463db8:	b	463d18 <feof@plt+0x60478>
  463dbc:	ldur	x11, [x29, #-16]
  463dc0:	add	x9, x9, x26
  463dc4:	add	x24, x24, x26
  463dc8:	mov	x12, x26
  463dcc:	add	x10, x11, x10
  463dd0:	mov	x11, x28
  463dd4:	ldp	q0, q3, [x10, #-16]
  463dd8:	ldp	q1, q2, [x11, #-16]
  463ddc:	subs	x12, x12, #0x20
  463de0:	stp	q1, q2, [x10, #-16]
  463de4:	stp	q0, q3, [x11, #-16]
  463de8:	add	x11, x11, #0x20
  463dec:	add	x10, x10, #0x20
  463df0:	b.ne	463dd4 <feof@plt+0x60534>  // b.any
  463df4:	cmp	x26, x20
  463df8:	mov	x10, x26
  463dfc:	b.eq	463d18 <feof@plt+0x60478>  // b.none
  463e00:	b	463d9c <feof@plt+0x604fc>
  463e04:	cbz	x23, 463e5c <feof@plt+0x605bc>
  463e08:	cbz	x20, 463e5c <feof@plt+0x605bc>
  463e0c:	mul	x9, x23, x20
  463e10:	cmp	x20, #0x20
  463e14:	add	x8, x21, x9
  463e18:	b.cc	463e38 <feof@plt+0x60598>  // b.lo, b.ul, b.last
  463e1c:	add	x10, x23, #0x1
  463e20:	madd	x10, x10, x20, x21
  463e24:	cmp	x21, x10
  463e28:	b.cs	463ec8 <feof@plt+0x60628>  // b.hs, b.nlast
  463e2c:	ldr	x10, [sp, #16]
  463e30:	cmp	x8, x10
  463e34:	b.cs	463ec8 <feof@plt+0x60628>  // b.hs, b.nlast
  463e38:	mov	x10, xzr
  463e3c:	mov	x9, x21
  463e40:	sub	x10, x20, x10
  463e44:	ldrb	w11, [x8]
  463e48:	ldrb	w12, [x9]
  463e4c:	subs	x10, x10, #0x1
  463e50:	strb	w11, [x9], #1
  463e54:	strb	w12, [x8], #1
  463e58:	b.ne	463e44 <feof@plt+0x605a4>  // b.any
  463e5c:	cmp	x22, x23, lsl #1
  463e60:	b.hi	463f04 <feof@plt+0x60664>  // b.pmore
  463e64:	add	x8, x23, #0x1
  463e68:	madd	x0, x8, x20, x21
  463e6c:	sub	x1, x22, x8
  463e70:	mov	x2, x20
  463e74:	mov	x3, x19
  463e78:	bl	463c0c <feof@plt+0x6036c>
  463e7c:	cmp	x23, #0x2
  463e80:	mov	x22, x23
  463e84:	b.cs	463c9c <feof@plt+0x603fc>  // b.hs, b.nlast
  463e88:	b	463c34 <feof@plt+0x60394>
  463e8c:	add	x8, x8, x26
  463e90:	mov	x10, x26
  463e94:	mov	x11, x21
  463e98:	add	x12, x11, x9
  463e9c:	ldp	q0, q1, [x12]
  463ea0:	ldp	q2, q3, [x11]
  463ea4:	subs	x10, x10, #0x20
  463ea8:	stp	q0, q1, [x11], #32
  463eac:	stp	q2, q3, [x12]
  463eb0:	b.ne	463e98 <feof@plt+0x605f8>  // b.any
  463eb4:	ldr	x9, [sp, #8]
  463eb8:	cmp	x26, x20
  463ebc:	mov	x10, x26
  463ec0:	b.ne	463cd8 <feof@plt+0x60438>  // b.any
  463ec4:	b	463cf4 <feof@plt+0x60454>
  463ec8:	add	x8, x8, x26
  463ecc:	mov	x10, x26
  463ed0:	mov	x11, x21
  463ed4:	add	x12, x11, x9
  463ed8:	ldp	q0, q1, [x12]
  463edc:	ldp	q2, q3, [x11]
  463ee0:	subs	x10, x10, #0x20
  463ee4:	stp	q0, q1, [x11], #32
  463ee8:	stp	q2, q3, [x12]
  463eec:	b.ne	463ed4 <feof@plt+0x60634>  // b.any
  463ef0:	ldr	x9, [sp, #8]
  463ef4:	cmp	x26, x20
  463ef8:	mov	x10, x26
  463efc:	b.ne	463e40 <feof@plt+0x605a0>  // b.any
  463f00:	b	463e5c <feof@plt+0x605bc>
  463f04:	mov	x0, x21
  463f08:	mov	x1, x23
  463f0c:	mov	x2, x20
  463f10:	mov	x3, x19
  463f14:	bl	463c0c <feof@plt+0x6036c>
  463f18:	add	x8, x23, #0x1
  463f1c:	sub	x22, x22, x8
  463f20:	cmp	x22, #0x2
  463f24:	madd	x21, x8, x20, x21
  463f28:	b.cs	463c78 <feof@plt+0x603d8>  // b.hs, b.nlast
  463f2c:	b	463c34 <feof@plt+0x60394>
  463f30:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  463f34:	ldr	x8, [x9, #1112]
  463f38:	str	x0, [x9, #1112]
  463f3c:	mov	x0, x8
  463f40:	ret
  463f44:	b	463f48 <feof@plt+0x606a8>
  463f48:	str	d8, [sp, #-112]!
  463f4c:	stp	x29, x30, [sp, #16]
  463f50:	stp	x28, x27, [sp, #32]
  463f54:	stp	x26, x25, [sp, #48]
  463f58:	stp	x24, x23, [sp, #64]
  463f5c:	stp	x22, x21, [sp, #80]
  463f60:	stp	x20, x19, [sp, #96]
  463f64:	mov	x29, sp
  463f68:	sub	sp, sp, #0x50
  463f6c:	ldr	x22, [x0, #32]
  463f70:	ldr	x27, [x0]
  463f74:	ldr	x9, [x0, #16]
  463f78:	adrp	x13, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  463f7c:	movi	v0.2d, #0x0
  463f80:	add	x13, x13, #0x310
  463f84:	stp	q0, q0, [x22, #224]
  463f88:	stp	q0, q0, [x22, #192]
  463f8c:	stp	q0, q0, [x22, #160]
  463f90:	stp	q0, q0, [x22, #128]
  463f94:	stp	q0, q0, [x22, #96]
  463f98:	stp	q0, q0, [x22, #64]
  463f9c:	stp	q0, q0, [x22, #32]
  463fa0:	stp	q0, q0, [x22]
  463fa4:	add	x10, x13, #0x100
  463fa8:	cmp	x22, x10
  463fac:	ldrb	w10, [x0, #56]
  463fb0:	add	x23, x27, x9
  463fb4:	add	x9, x22, #0x100
  463fb8:	cset	w11, cc  // cc = lo, ul, last
  463fbc:	cmp	x9, x13
  463fc0:	cset	w9, hi  // hi = pmore
  463fc4:	adrp	x14, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  463fc8:	and	w3, w11, w9
  463fcc:	and	w9, w10, #0xfffffffe
  463fd0:	mov	x19, x0
  463fd4:	mov	w8, wzr
  463fd8:	sub	x1, x29, #0x30
  463fdc:	mov	w24, #0x1                   	// #1
  463fe0:	mov	w18, #0x5                   	// #5
  463fe4:	add	x14, x14, #0x1c8
  463fe8:	movi	v1.16b, #0x1
  463fec:	mov	w15, #0x100                 	// #256
  463ff0:	adrp	x16, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  463ff4:	mov	w17, #0x13                  	// #19
  463ff8:	movi	v8.8b, #0x1
  463ffc:	add	x28, x22, #0x7
  464000:	sub	x2, x22, #0x1
  464004:	orr	w9, w9, #0x8
  464008:	strb	w9, [x0, #56]
  46400c:	mov	w26, #0x1                   	// #1
  464010:	cmp	x27, x23
  464014:	mov	w25, w8
  464018:	b.eq	464514 <feof@plt+0x60c74>  // b.none
  46401c:	ldrb	w8, [x27]
  464020:	mov	x21, x27
  464024:	cmp	w8, #0x1
  464028:	b.eq	464514 <feof@plt+0x60c74>  // b.none
  46402c:	cmp	w8, #0x1d
  464030:	b.hi	464580 <feof@plt+0x60ce0>  // b.pmore
  464034:	adr	x9, 464010 <feof@plt+0x60770>
  464038:	ldrh	w10, [x14, x8, lsl #1]
  46403c:	add	x9, x9, x10, lsl #2
  464040:	mov	w20, wzr
  464044:	add	x27, x21, #0x1
  464048:	mov	w8, w25
  46404c:	br	x9
  464050:	ldrb	w8, [x21, #1]
  464054:	ldrsb	x9, [x21, #2]
  464058:	bfi	x8, x9, #8, #56
  46405c:	add	x9, x21, x8
  464060:	cmp	w8, #0x0
  464064:	add	x27, x9, #0x3
  464068:	mov	w8, w25
  46406c:	b.gt	464010 <feof@plt+0x60770>
  464070:	ldrb	w8, [x27]
  464074:	cmp	w8, #0x15
  464078:	b.eq	464088 <feof@plt+0x607e8>  // b.none
  46407c:	cmp	w8, #0xf
  464080:	mov	w8, w25
  464084:	b.ne	464010 <feof@plt+0x60770>  // b.any
  464088:	ldrb	w9, [x27, #1]!
  46408c:	mov	w8, wzr
  464090:	ldrsb	x10, [x27, #1]
  464094:	bfi	x9, x10, #8, #56
  464098:	add	x9, x27, x9
  46409c:	add	x27, x9, #0x2
  4640a0:	cbz	w25, 464010 <feof@plt+0x60770>
  4640a4:	sub	w8, w25, #0x1
  4640a8:	ldr	x9, [x1, w8, uxtw #3]
  4640ac:	cmp	x9, x27
  4640b0:	csel	w8, w8, w25, eq  // eq = none
  4640b4:	b	464010 <feof@plt+0x60770>
  4640b8:	add	x27, x21, #0x3
  4640bc:	mov	w8, w25
  4640c0:	b	464010 <feof@plt+0x60770>
  4640c4:	ldrb	w8, [x21, #2]
  4640c8:	mov	w26, wzr
  4640cc:	strb	w24, [x22, x8]
  4640d0:	b	4644e4 <feof@plt+0x60c44>
  4640d4:	ldrb	w8, [x22, #10]
  4640d8:	stp	q1, q1, [x22, #16]
  4640dc:	stp	q1, q1, [x22, #48]
  4640e0:	stp	q1, q1, [x22, #80]
  4640e4:	stp	q1, q1, [x22, #112]
  4640e8:	stp	q1, q1, [x22, #144]
  4640ec:	stp	q1, q1, [x22, #176]
  4640f0:	stp	q1, q1, [x22, #208]
  4640f4:	str	q1, [x22, #240]
  4640f8:	str	q1, [x22]
  4640fc:	ldrb	w9, [x19, #24]
  464100:	tbnz	w9, #6, 4644fc <feof@plt+0x60c5c>
  464104:	mov	w26, wzr
  464108:	strb	w8, [x22, #10]
  46410c:	b	4644e4 <feof@plt+0x60c44>
  464110:	ldrb	w9, [x21, #1]
  464114:	mov	w26, wzr
  464118:	mov	w8, w25
  46411c:	mov	x27, x23
  464120:	cbz	x9, 464010 <feof@plt+0x60770>
  464124:	add	x8, x21, #0x2
  464128:	lsl	x10, x9, #3
  46412c:	b	464140 <feof@plt+0x608a0>
  464130:	add	x10, x9, #0x1
  464134:	cmp	x10, #0x1
  464138:	mov	x10, x9
  46413c:	b.le	4644e0 <feof@plt+0x60c40>
  464140:	sub	x9, x10, #0x1
  464144:	add	w11, w9, #0x7
  464148:	cmp	w9, #0x0
  46414c:	csel	w11, w11, w9, lt  // lt = tstop
  464150:	asr	w11, w11, #3
  464154:	ldrb	w11, [x8, w11, sxtw]
  464158:	and	w12, w9, #0x7
  46415c:	lsr	w11, w11, w12
  464160:	tbz	w11, #0, 464130 <feof@plt+0x60890>
  464164:	strb	w24, [x2, x10]
  464168:	b	464130 <feof@plt+0x60890>
  46416c:	ldrb	w9, [x27]
  464170:	cmp	x9, #0x1f
  464174:	b.hi	4641cc <feof@plt+0x6092c>  // b.pmore
  464178:	add	x0, x22, x9, lsl #3
  46417c:	stp	x1, x2, [x29, #-64]
  464180:	sub	x2, x15, x9, lsl #3
  464184:	mov	w1, #0x1                   	// #1
  464188:	stp	w18, w3, [x29, #8]
  46418c:	mov	x26, x13
  464190:	mov	x20, x14
  464194:	bl	4031f0 <memset@plt>
  464198:	ldp	x1, x2, [x29, #-64]
  46419c:	ldp	w18, w3, [x29, #8]
  4641a0:	ldrb	w9, [x27]
  4641a4:	mov	w17, #0x13                  	// #19
  4641a8:	adrp	x16, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4641ac:	mov	w15, #0x100                 	// #256
  4641b0:	movi	v1.16b, #0x1
  4641b4:	mov	x14, x20
  4641b8:	mov	x13, x26
  4641bc:	mov	w26, wzr
  4641c0:	mov	w8, w25
  4641c4:	mov	x27, x23
  4641c8:	cbz	w9, 464010 <feof@plt+0x60770>
  4641cc:	add	x8, x21, #0x2
  4641d0:	lsl	x10, x9, #3
  4641d4:	b	4641e8 <feof@plt+0x60948>
  4641d8:	add	x10, x9, #0x1
  4641dc:	cmp	x10, #0x1
  4641e0:	mov	x10, x9
  4641e4:	b.le	4644e0 <feof@plt+0x60c40>
  4641e8:	sub	x9, x10, #0x1
  4641ec:	add	w11, w9, #0x7
  4641f0:	cmp	w9, #0x0
  4641f4:	csel	w11, w11, w9, lt  // lt = tstop
  4641f8:	asr	w11, w11, #3
  4641fc:	ldrb	w11, [x8, w11, sxtw]
  464200:	and	w12, w9, #0x7
  464204:	lsr	w11, w11, w12
  464208:	tbnz	w11, #0, 4641d8 <feof@plt+0x60938>
  46420c:	strb	w24, [x2, x10]
  464210:	b	4641d8 <feof@plt+0x60938>
  464214:	ldrb	w9, [x21, #3]
  464218:	ldrsb	w8, [x21, #4]
  46421c:	add	x27, x21, #0x5
  464220:	bfi	w9, w8, #8, #24
  464224:	mov	w8, w25
  464228:	cbnz	w9, 464010 <feof@plt+0x60770>
  46422c:	mov	w20, #0x1                   	// #1
  464230:	ldrb	w8, [x21, #1]
  464234:	ldrsb	x9, [x21, #2]
  464238:	bfi	x8, x9, #8, #56
  46423c:	add	x9, x21, #0x3
  464240:	add	x27, x9, x8
  464244:	cmp	x27, x23
  464248:	b.cs	4642c4 <feof@plt+0x60a24>  // b.hs, b.nlast
  46424c:	cmp	w25, w18
  464250:	b.ne	4642b4 <feof@plt+0x60a14>  // b.any
  464254:	ldr	w8, [x16, #1032]
  464258:	mul	w8, w8, w17
  46425c:	cmp	w18, w8
  464260:	b.hi	464578 <feof@plt+0x60cd8>  // b.pmore
  464264:	lsl	w8, w18, #1
  464268:	sub	x0, sp, w8, uxtw #3
  46426c:	stp	w8, w3, [x29, #8]
  464270:	stp	x0, x9, [x29, #-72]
  464274:	mov	sp, x0
  464278:	mov	w8, w18
  46427c:	stur	x2, [x29, #-56]
  464280:	lsl	x2, x8, #3
  464284:	bl	402fc0 <memcpy@plt>
  464288:	ldp	x9, x2, [x29, #-64]
  46428c:	ldp	w18, w3, [x29, #8]
  464290:	ldur	x1, [x29, #-72]
  464294:	adrp	x14, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  464298:	adrp	x13, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  46429c:	mov	w17, #0x13                  	// #19
  4642a0:	adrp	x16, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4642a4:	mov	w15, #0x100                 	// #256
  4642a8:	movi	v1.16b, #0x1
  4642ac:	add	x14, x14, #0x1c8
  4642b0:	add	x13, x13, #0x310
  4642b4:	add	w8, w25, #0x1
  4642b8:	str	x27, [x1, w25, uxtw #3]
  4642bc:	mov	w25, w8
  4642c0:	b	4642d0 <feof@plt+0x60a30>
  4642c4:	ldrb	w8, [x19, #56]
  4642c8:	orr	w8, w8, #0x1
  4642cc:	strb	w8, [x19, #56]
  4642d0:	add	x8, x21, #0x5
  4642d4:	cmp	w20, #0x0
  4642d8:	csel	x27, x9, x8, eq  // eq = none
  4642dc:	mov	w8, w25
  4642e0:	b	464010 <feof@plt+0x60770>
  4642e4:	mov	x8, xzr
  4642e8:	tbnz	w3, #0, 4642fc <feof@plt+0x60a5c>
  4642ec:	b	46431c <feof@plt+0x60a7c>
  4642f0:	add	x8, x8, #0x1
  4642f4:	cmp	x8, #0x100
  4642f8:	b.eq	4644e0 <feof@plt+0x60c40>  // b.none
  4642fc:	ldrb	w9, [x13, x8]
  464300:	cmp	w9, #0x1
  464304:	b.ne	4642f0 <feof@plt+0x60a50>  // b.any
  464308:	strb	w24, [x22, x8]
  46430c:	b	4642f0 <feof@plt+0x60a50>
  464310:	add	x8, x8, #0x8
  464314:	cmp	x8, #0x100
  464318:	b.eq	4644e0 <feof@plt+0x60c40>  // b.none
  46431c:	ldr	d0, [x13, x8]
  464320:	cmeq	v0.8b, v0.8b, v8.8b
  464324:	umov	w9, v0.b[0]
  464328:	tbz	w9, #0, 464388 <feof@plt+0x60ae8>
  46432c:	add	x9, x28, x8
  464330:	sturb	w24, [x9, #-7]
  464334:	umov	w9, v0.b[1]
  464338:	tbnz	w9, #0, 464390 <feof@plt+0x60af0>
  46433c:	umov	w9, v0.b[2]
  464340:	tbz	w9, #0, 4643a0 <feof@plt+0x60b00>
  464344:	add	x9, x28, x8
  464348:	sturb	w24, [x9, #-5]
  46434c:	umov	w9, v0.b[3]
  464350:	tbnz	w9, #0, 4643a8 <feof@plt+0x60b08>
  464354:	umov	w9, v0.b[4]
  464358:	tbz	w9, #0, 4643b8 <feof@plt+0x60b18>
  46435c:	add	x9, x28, x8
  464360:	sturb	w24, [x9, #-3]
  464364:	umov	w9, v0.b[5]
  464368:	tbnz	w9, #0, 4643c0 <feof@plt+0x60b20>
  46436c:	umov	w9, v0.b[6]
  464370:	tbz	w9, #0, 4643d0 <feof@plt+0x60b30>
  464374:	add	x9, x28, x8
  464378:	sturb	w24, [x9, #-1]
  46437c:	umov	w9, v0.b[7]
  464380:	tbz	w9, #0, 464310 <feof@plt+0x60a70>
  464384:	b	4643d8 <feof@plt+0x60b38>
  464388:	umov	w9, v0.b[1]
  46438c:	tbz	w9, #0, 46433c <feof@plt+0x60a9c>
  464390:	add	x9, x28, x8
  464394:	sturb	w24, [x9, #-6]
  464398:	umov	w9, v0.b[2]
  46439c:	tbnz	w9, #0, 464344 <feof@plt+0x60aa4>
  4643a0:	umov	w9, v0.b[3]
  4643a4:	tbz	w9, #0, 464354 <feof@plt+0x60ab4>
  4643a8:	add	x9, x28, x8
  4643ac:	sturb	w24, [x9, #-4]
  4643b0:	umov	w9, v0.b[4]
  4643b4:	tbnz	w9, #0, 46435c <feof@plt+0x60abc>
  4643b8:	umov	w9, v0.b[5]
  4643bc:	tbz	w9, #0, 46436c <feof@plt+0x60acc>
  4643c0:	add	x9, x28, x8
  4643c4:	sturb	w24, [x9, #-2]
  4643c8:	umov	w9, v0.b[6]
  4643cc:	tbnz	w9, #0, 464374 <feof@plt+0x60ad4>
  4643d0:	umov	w9, v0.b[7]
  4643d4:	tbz	w9, #0, 464310 <feof@plt+0x60a70>
  4643d8:	strb	w24, [x28, x8]
  4643dc:	b	464310 <feof@plt+0x60a70>
  4643e0:	mov	x8, xzr
  4643e4:	tbnz	w3, #0, 4643f8 <feof@plt+0x60b58>
  4643e8:	b	464418 <feof@plt+0x60b78>
  4643ec:	add	x8, x8, #0x1
  4643f0:	cmp	x8, #0x100
  4643f4:	b.eq	4644e0 <feof@plt+0x60c40>  // b.none
  4643f8:	ldrb	w9, [x13, x8]
  4643fc:	cmp	w9, #0x1
  464400:	b.eq	4643ec <feof@plt+0x60b4c>  // b.none
  464404:	strb	w24, [x22, x8]
  464408:	b	4643ec <feof@plt+0x60b4c>
  46440c:	add	x8, x8, #0x8
  464410:	cmp	x8, #0x100
  464414:	b.eq	4644e0 <feof@plt+0x60c40>  // b.none
  464418:	ldr	d0, [x13, x8]
  46441c:	cmeq	v0.8b, v0.8b, v8.8b
  464420:	mvn	v0.8b, v0.8b
  464424:	umov	w9, v0.b[0]
  464428:	tbz	w9, #0, 464488 <feof@plt+0x60be8>
  46442c:	add	x9, x28, x8
  464430:	sturb	w24, [x9, #-7]
  464434:	umov	w9, v0.b[1]
  464438:	tbnz	w9, #0, 464490 <feof@plt+0x60bf0>
  46443c:	umov	w9, v0.b[2]
  464440:	tbz	w9, #0, 4644a0 <feof@plt+0x60c00>
  464444:	add	x9, x28, x8
  464448:	sturb	w24, [x9, #-5]
  46444c:	umov	w9, v0.b[3]
  464450:	tbnz	w9, #0, 4644a8 <feof@plt+0x60c08>
  464454:	umov	w9, v0.b[4]
  464458:	tbz	w9, #0, 4644b8 <feof@plt+0x60c18>
  46445c:	add	x9, x28, x8
  464460:	sturb	w24, [x9, #-3]
  464464:	umov	w9, v0.b[5]
  464468:	tbnz	w9, #0, 4644c0 <feof@plt+0x60c20>
  46446c:	umov	w9, v0.b[6]
  464470:	tbz	w9, #0, 4644d0 <feof@plt+0x60c30>
  464474:	add	x9, x28, x8
  464478:	sturb	w24, [x9, #-1]
  46447c:	umov	w9, v0.b[7]
  464480:	tbz	w9, #0, 46440c <feof@plt+0x60b6c>
  464484:	b	4644d8 <feof@plt+0x60c38>
  464488:	umov	w9, v0.b[1]
  46448c:	tbz	w9, #0, 46443c <feof@plt+0x60b9c>
  464490:	add	x9, x28, x8
  464494:	sturb	w24, [x9, #-6]
  464498:	umov	w9, v0.b[2]
  46449c:	tbnz	w9, #0, 464444 <feof@plt+0x60ba4>
  4644a0:	umov	w9, v0.b[3]
  4644a4:	tbz	w9, #0, 464454 <feof@plt+0x60bb4>
  4644a8:	add	x9, x28, x8
  4644ac:	sturb	w24, [x9, #-4]
  4644b0:	umov	w9, v0.b[4]
  4644b4:	tbnz	w9, #0, 46445c <feof@plt+0x60bbc>
  4644b8:	umov	w9, v0.b[5]
  4644bc:	tbz	w9, #0, 46446c <feof@plt+0x60bcc>
  4644c0:	add	x9, x28, x8
  4644c4:	sturb	w24, [x9, #-2]
  4644c8:	umov	w9, v0.b[6]
  4644cc:	tbnz	w9, #0, 464474 <feof@plt+0x60bd4>
  4644d0:	umov	w9, v0.b[7]
  4644d4:	tbz	w9, #0, 46440c <feof@plt+0x60b6c>
  4644d8:	strb	w24, [x28, x8]
  4644dc:	b	46440c <feof@plt+0x60b6c>
  4644e0:	mov	w26, wzr
  4644e4:	mov	w8, w25
  4644e8:	mov	x27, x23
  4644ec:	b	464010 <feof@plt+0x60770>
  4644f0:	add	x27, x21, #0x5
  4644f4:	mov	w8, w25
  4644f8:	b	464010 <feof@plt+0x60770>
  4644fc:	ldrb	w9, [x19, #56]
  464500:	mov	w26, wzr
  464504:	mov	w8, w25
  464508:	mov	x27, x23
  46450c:	tbz	w9, #0, 464010 <feof@plt+0x60770>
  464510:	b	46453c <feof@plt+0x60c9c>
  464514:	ldrb	w8, [x19, #56]
  464518:	and	w9, w8, #0x1
  46451c:	orr	w9, w9, w26
  464520:	and	w8, w8, #0xfe
  464524:	orr	w8, w9, w8
  464528:	strb	w8, [x19, #56]
  46452c:	cbz	w25, 46453c <feof@plt+0x60c9c>
  464530:	sub	w8, w25, #0x1
  464534:	ldr	x27, [x1, w8, uxtw #3]
  464538:	b	46400c <feof@plt+0x6076c>
  46453c:	mov	w0, wzr
  464540:	b	464554 <feof@plt+0x60cb4>
  464544:	ldrb	w8, [x19, #56]
  464548:	mov	w0, wzr
  46454c:	orr	w8, w8, #0x1
  464550:	strb	w8, [x19, #56]
  464554:	mov	sp, x29
  464558:	ldp	x20, x19, [sp, #96]
  46455c:	ldp	x22, x21, [sp, #80]
  464560:	ldp	x24, x23, [sp, #64]
  464564:	ldp	x26, x25, [sp, #48]
  464568:	ldp	x28, x27, [sp, #32]
  46456c:	ldp	x29, x30, [sp, #16]
  464570:	ldr	d8, [sp], #112
  464574:	ret
  464578:	mov	w0, #0xfffffffe            	// #-2
  46457c:	b	464554 <feof@plt+0x60cb4>
  464580:	bl	4036f0 <abort@plt>
  464584:	ldrb	w8, [x0, #56]
  464588:	cmp	w2, #0x0
  46458c:	csel	x9, xzr, x4, eq  // eq = none
  464590:	csel	x10, xzr, x3, eq  // eq = none
  464594:	and	w8, w8, #0xfffffff9
  464598:	orr	w11, w8, #0x2
  46459c:	csel	w8, w8, w11, eq  // eq = none
  4645a0:	strb	w8, [x0, #56]
  4645a4:	str	w2, [x1]
  4645a8:	stp	x10, x9, [x1, #8]
  4645ac:	ret
  4645b0:	sub	sp, sp, #0x20
  4645b4:	mov	x7, x5
  4645b8:	mov	w6, w4
  4645bc:	mov	w5, w3
  4645c0:	mov	w4, w2
  4645c4:	mov	x3, x1
  4645c8:	str	w2, [sp]
  4645cc:	mov	x1, xzr
  4645d0:	mov	w2, wzr
  4645d4:	stp	x29, x30, [sp, #16]
  4645d8:	add	x29, sp, #0x10
  4645dc:	bl	4645ec <feof@plt+0x60d4c>
  4645e0:	ldp	x29, x30, [sp, #16]
  4645e4:	add	sp, sp, #0x20
  4645e8:	ret
  4645ec:	sub	sp, sp, #0x80
  4645f0:	stp	x29, x30, [sp, #32]
  4645f4:	stp	x24, x23, [sp, #80]
  4645f8:	add	x29, sp, #0x20
  4645fc:	mov	x24, x0
  464600:	mov	w0, #0xffffffff            	// #-1
  464604:	stp	x28, x27, [sp, #48]
  464608:	stp	x26, x25, [sp, #64]
  46460c:	stp	x22, x21, [sp, #96]
  464610:	stp	x20, x19, [sp, #112]
  464614:	stur	x7, [x29, #-8]
  464618:	tbnz	w5, #31, 464810 <feof@plt+0x60f70>
  46461c:	add	w27, w4, w2
  464620:	mov	w25, w5
  464624:	mov	w20, w4
  464628:	mov	w22, w2
  46462c:	subs	w8, w27, w5
  464630:	b.lt	464810 <feof@plt+0x60f70>  // b.tstop
  464634:	ldp	x28, x9, [x24, #32]
  464638:	mov	x21, x3
  46463c:	mov	x23, x1
  464640:	str	x9, [sp, #16]
  464644:	add	w9, w6, w25
  464648:	cmp	w9, w27
  46464c:	csel	w8, w8, w6, gt
  464650:	cmp	w9, #0x0
  464654:	csneg	w19, w8, w25, ge  // ge = tcont
  464658:	cmp	w19, #0x1
  46465c:	b.lt	46469c <feof@plt+0x60dfc>  // b.tstop
  464660:	ldr	x8, [x24, #16]
  464664:	cbz	x8, 46469c <feof@plt+0x60dfc>
  464668:	ldr	x8, [x24]
  46466c:	ldrb	w8, [x8]
  464670:	cmp	w8, #0xb
  464674:	b.eq	464688 <feof@plt+0x60de8>  // b.none
  464678:	cmp	w8, #0x9
  46467c:	b.ne	46469c <feof@plt+0x60dfc>  // b.any
  464680:	ldrsb	w8, [x24, #56]
  464684:	tbnz	w8, #31, 46469c <feof@plt+0x60dfc>
  464688:	cmp	w25, #0x0
  46468c:	b.le	464698 <feof@plt+0x60df8>
  464690:	mov	w0, #0xffffffff            	// #-1
  464694:	b	464810 <feof@plt+0x60f70>
  464698:	mov	w19, #0x1                   	// #1
  46469c:	cbz	x28, 4646b8 <feof@plt+0x60e18>
  4646a0:	ldrb	w8, [x24, #56]
  4646a4:	tbnz	w8, #3, 4646b8 <feof@plt+0x60e18>
  4646a8:	mov	x0, x24
  4646ac:	bl	463f48 <feof@plt+0x606a8>
  4646b0:	cmn	w0, #0x2
  4646b4:	b.eq	464810 <feof@plt+0x60f70>  // b.none
  4646b8:	ldr	w26, [x29, #96]
  4646bc:	sub	x8, x21, w22, sxtw
  4646c0:	str	x8, [sp, #8]
  4646c4:	cbz	x28, 46479c <feof@plt+0x60efc>
  4646c8:	cmp	w25, w27
  4646cc:	b.ge	46479c <feof@plt+0x60efc>  // b.tcont
  4646d0:	ldrb	w8, [x24, #56]
  4646d4:	tbnz	w8, #0, 46479c <feof@plt+0x60efc>
  4646d8:	cmp	w19, #0x1
  4646dc:	b.lt	464738 <feof@plt+0x60e98>  // b.tstop
  4646e0:	add	w8, w25, w19
  4646e4:	ldp	x10, x12, [sp, #8]
  4646e8:	sub	w9, w19, w22
  4646ec:	cmp	w8, w22
  4646f0:	add	w9, w9, w25
  4646f4:	ccmp	w25, w22, #0x0, ge  // ge = tcont
  4646f8:	csel	w9, wzr, w9, ge  // ge = tcont
  4646fc:	cmp	w25, w22
  464700:	csel	x10, x23, x10, lt  // lt = tstop
  464704:	add	x10, x10, w25, sxtw
  464708:	cbz	x12, 464770 <feof@plt+0x60ed0>
  46470c:	cmp	w19, w9
  464710:	b.le	464798 <feof@plt+0x60ef8>
  464714:	ldrb	w11, [x10]
  464718:	ldrb	w11, [x12, x11]
  46471c:	ldrb	w11, [x28, x11]
  464720:	cbnz	w11, 464798 <feof@plt+0x60ef8>
  464724:	sub	w19, w19, #0x1
  464728:	cmp	w19, w9
  46472c:	add	x10, x10, #0x1
  464730:	b.gt	464714 <feof@plt+0x60e74>
  464734:	b	464794 <feof@plt+0x60ef4>
  464738:	sxtw	x8, w25
  46473c:	cmp	w25, w22
  464740:	sub	x9, x8, w22, sxtw
  464744:	ccmp	w22, #0x0, #0x4, lt  // lt = tstop
  464748:	add	x9, x21, x9
  46474c:	add	x8, x23, x8
  464750:	csel	x8, x8, x9, ne  // ne = any
  464754:	ldrb	w8, [x8]
  464758:	ldr	x9, [sp, #16]
  46475c:	cbz	x9, 464764 <feof@plt+0x60ec4>
  464760:	ldrb	w8, [x9, x8]
  464764:	ldrb	w8, [x28, w8, uxtw]
  464768:	cbnz	w8, 46479c <feof@plt+0x60efc>
  46476c:	b	4647e4 <feof@plt+0x60f44>
  464770:	cmp	w19, w9
  464774:	b.le	464798 <feof@plt+0x60ef8>
  464778:	ldrb	w11, [x10]
  46477c:	ldrb	w11, [x28, x11]
  464780:	cbnz	w11, 464798 <feof@plt+0x60ef8>
  464784:	sub	w19, w19, #0x1
  464788:	cmp	w19, w9
  46478c:	add	x10, x10, #0x1
  464790:	b.gt	464778 <feof@plt+0x60ed8>
  464794:	mov	w19, w9
  464798:	sub	w25, w8, w19
  46479c:	tbnz	w19, #31, 4647b4 <feof@plt+0x60f14>
  4647a0:	cbz	x28, 4647b4 <feof@plt+0x60f14>
  4647a4:	cmp	w25, w27
  4647a8:	b.ne	4647b4 <feof@plt+0x60f14>  // b.any
  4647ac:	ldrb	w8, [x24, #56]
  4647b0:	tbz	w8, #0, 464690 <feof@plt+0x60df0>
  4647b4:	ldur	x6, [x29, #-8]
  4647b8:	mov	x0, x24
  4647bc:	mov	x1, x23
  4647c0:	mov	w2, w22
  4647c4:	mov	x3, x21
  4647c8:	mov	w4, w20
  4647cc:	mov	w5, w25
  4647d0:	mov	w7, w26
  4647d4:	bl	464850 <feof@plt+0x60fb0>
  4647d8:	tbz	w0, #31, 46480c <feof@plt+0x60f6c>
  4647dc:	cmn	w0, #0x2
  4647e0:	b.eq	464810 <feof@plt+0x60f70>  // b.none
  4647e4:	cbz	w19, 464690 <feof@plt+0x60df0>
  4647e8:	cmp	w19, #0x0
  4647ec:	mov	w8, #0xffffffff            	// #-1
  4647f0:	mov	w9, #0x1                   	// #1
  4647f4:	cneg	w8, w8, le
  4647f8:	cneg	w9, w9, le
  4647fc:	add	w19, w8, w19
  464800:	add	w25, w9, w25
  464804:	cbnz	x28, 4646c8 <feof@plt+0x60e28>
  464808:	b	46479c <feof@plt+0x60efc>
  46480c:	mov	w0, w25
  464810:	ldp	x20, x19, [sp, #112]
  464814:	ldp	x22, x21, [sp, #96]
  464818:	ldp	x24, x23, [sp, #80]
  46481c:	ldp	x26, x25, [sp, #64]
  464820:	ldp	x28, x27, [sp, #48]
  464824:	ldp	x29, x30, [sp, #32]
  464828:	add	sp, sp, #0x80
  46482c:	ret
  464830:	mov	x6, x4
  464834:	mov	w4, w2
  464838:	mov	w5, w3
  46483c:	mov	x3, x1
  464840:	mov	x1, xzr
  464844:	mov	w2, wzr
  464848:	mov	w7, w4
  46484c:	b	464850 <feof@plt+0x60fb0>
  464850:	stp	x29, x30, [sp, #-96]!
  464854:	stp	x28, x27, [sp, #16]
  464858:	stp	x26, x25, [sp, #32]
  46485c:	stp	x24, x23, [sp, #48]
  464860:	stp	x22, x21, [sp, #64]
  464864:	stp	x20, x19, [sp, #80]
  464868:	mov	x29, sp
  46486c:	sub	sp, sp, #0x1b0
  464870:	ldp	x13, x9, [x0, #40]
  464874:	ldr	x26, [x0]
  464878:	ldr	x8, [x0, #16]
  46487c:	mov	x12, x0
  464880:	add	x11, x9, #0x1
  464884:	lsl	x16, x11, #3
  464888:	stur	x9, [x29, #-96]
  46488c:	cbz	x9, 464918 <feof@plt+0x61078>
  464890:	add	x10, x16, #0xf
  464894:	mov	x9, sp
  464898:	and	x10, x10, #0xfffffffffffffff0
  46489c:	sub	x19, x9, x10
  4648a0:	mov	sp, x19
  4648a4:	mov	x9, sp
  4648a8:	sub	x28, x9, x10
  4648ac:	mov	sp, x28
  4648b0:	mov	x9, sp
  4648b4:	sub	x17, x9, x10
  4648b8:	mov	sp, x17
  4648bc:	mov	x9, sp
  4648c0:	sub	x18, x9, x10
  4648c4:	mov	sp, x18
  4648c8:	mov	x9, sp
  4648cc:	sub	x9, x9, x10
  4648d0:	stur	x9, [x29, #-120]
  4648d4:	mov	sp, x9
  4648d8:	mov	x9, sp
  4648dc:	sub	x9, x9, x10
  4648e0:	stur	x9, [x29, #-128]
  4648e4:	mov	sp, x9
  4648e8:	mov	x9, sp
  4648ec:	sub	x22, x9, x10
  4648f0:	mov	sp, x22
  4648f4:	mov	x9, sp
  4648f8:	sub	x14, x9, x10
  4648fc:	mov	sp, x14
  464900:	mov	x9, sp
  464904:	sub	x10, x9, x10
  464908:	mov	sp, x10
  46490c:	mov	w0, #0xffffffff            	// #-1
  464910:	tbz	w5, #31, 464940 <feof@plt+0x610a0>
  464914:	b	46676c <feof@plt+0x62ecc>
  464918:	mov	x19, xzr
  46491c:	mov	x28, xzr
  464920:	mov	x17, xzr
  464924:	mov	x18, xzr
  464928:	mov	x22, xzr
  46492c:	stp	xzr, xzr, [x29, #-128]
  464930:	mov	x14, xzr
  464934:	mov	x10, xzr
  464938:	mov	w0, #0xffffffff            	// #-1
  46493c:	tbnz	w5, #31, 46676c <feof@plt+0x62ecc>
  464940:	add	w9, w4, w2
  464944:	cmp	w9, w5
  464948:	stur	x5, [x29, #-168]
  46494c:	b.lt	46676c <feof@plt+0x62ecc>  // b.tstop
  464950:	sub	x9, x29, #0x60
  464954:	stur	x10, [x9, #-256]
  464958:	sub	x9, x29, #0x58
  46495c:	cmp	x11, #0x2
  464960:	add	x8, x26, x8
  464964:	stur	x14, [x9, #-256]
  464968:	stur	x13, [x29, #-160]
  46496c:	stur	x12, [x29, #-176]
  464970:	stur	x6, [x29, #-248]
  464974:	stur	x11, [x29, #-192]
  464978:	stur	x8, [x29, #-72]
  46497c:	b.cc	4649c8 <feof@plt+0x61128>  // b.lo, b.ul, b.last
  464980:	ldur	x14, [x29, #-96]
  464984:	adrp	x13, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  464988:	add	x8, x22, #0x8
  46498c:	add	x9, x19, #0x8
  464990:	add	x10, x28, #0x8
  464994:	add	x11, x17, #0x8
  464998:	add	x12, x18, #0x8
  46499c:	add	x13, x13, #0x410
  4649a0:	str	x13, [x12], #8
  4649a4:	str	x13, [x11], #8
  4649a8:	str	x13, [x10], #8
  4649ac:	str	x13, [x9], #8
  4649b0:	ldrb	w15, [x8]
  4649b4:	subs	x14, x14, #0x1
  4649b8:	and	w15, w15, #0xe0
  4649bc:	orr	w15, w15, #0x3
  4649c0:	strb	w15, [x8], #8
  4649c4:	b.ne	4649a0 <feof@plt+0x61100>  // b.any
  4649c8:	sub	x8, x29, #0x48
  4649cc:	stur	x18, [x8, #-256]
  4649d0:	sub	x8, x29, #0x40
  4649d4:	cmp	w4, #0x0
  4649d8:	ldp	x30, x23, [x29, #-128]
  4649dc:	stur	x17, [x8, #-256]
  4649e0:	cset	w17, eq  // eq = none
  4649e4:	cmp	x1, #0x0
  4649e8:	add	x15, x28, #0x8
  4649ec:	cset	w18, ne  // ne = any
  4649f0:	sub	x8, x29, #0x20
  4649f4:	stur	x15, [x29, #-80]
  4649f8:	sub	x15, x29, #0x90
  4649fc:	tst	w18, w17
  464a00:	stur	xzr, [x8, #-256]
  464a04:	sxtw	x8, w7
  464a08:	ldur	x25, [x29, #-168]
  464a0c:	add	x10, x23, x16
  464a10:	add	x12, x30, x16
  464a14:	add	x14, x19, x16
  464a18:	stur	x16, [x15, #-256]
  464a1c:	add	x15, x28, x16
  464a20:	csel	w16, w2, w4, ne  // ne = any
  464a24:	csel	x3, x1, x3, ne  // ne = any
  464a28:	csel	w21, wzr, w2, ne  // ne = any
  464a2c:	csel	x2, xzr, x1, ne  // ne = any
  464a30:	sxtw	x17, w21
  464a34:	add	x18, x2, x8
  464a38:	add	x8, x3, x8
  464a3c:	cmp	w21, w7
  464a40:	add	x7, x2, x17
  464a44:	sub	x8, x8, x17
  464a48:	csel	x6, x8, x3, lt  // lt = tstop
  464a4c:	csel	x4, x7, x18, lt  // lt = tstop
  464a50:	cmp	w21, #0x1
  464a54:	cset	w8, lt  // lt = tstop
  464a58:	cmp	w21, w25
  464a5c:	sxtw	x20, w25
  464a60:	sub	x1, x29, #0x10
  464a64:	cset	w18, lt  // lt = tstop
  464a68:	stur	x20, [x1, #-256]
  464a6c:	add	x1, x3, x20
  464a70:	orr	w8, w8, w18
  464a74:	add	x0, x2, x20
  464a78:	sub	x1, x1, x17
  464a7c:	cmp	w8, #0x0
  464a80:	add	x9, x23, #0x8
  464a84:	stur	x15, [x29, #-88]
  464a88:	stur	x4, [x29, #-104]
  464a8c:	csel	x4, x6, x4, ne  // ne = any
  464a90:	csel	x25, x1, x0, ne  // ne = any
  464a94:	cmp	w21, #0x0
  464a98:	add	x11, x30, #0x8
  464a9c:	stur	x21, [x29, #-184]
  464aa0:	csel	x8, x3, x2, eq  // eq = none
  464aa4:	cmp	x9, x12
  464aa8:	ldp	x21, x20, [x29, #-88]
  464aac:	stur	x8, [x29, #-240]
  464ab0:	cset	w8, cc  // cc = lo, ul, last
  464ab4:	cmp	x11, x10
  464ab8:	add	x13, x19, #0x8
  464abc:	cset	w18, cc  // cc = lo, ul, last
  464ac0:	cmp	x9, x14
  464ac4:	cset	w0, cc  // cc = lo, ul, last
  464ac8:	cmp	x13, x10
  464acc:	cset	w1, cc  // cc = lo, ul, last
  464ad0:	cmp	x9, x21
  464ad4:	cset	w9, cc  // cc = lo, ul, last
  464ad8:	cmp	x20, x10
  464adc:	cset	w10, cc  // cc = lo, ul, last
  464ae0:	cmp	x11, x14
  464ae4:	cset	w14, cc  // cc = lo, ul, last
  464ae8:	cmp	x13, x12
  464aec:	cset	w13, cc  // cc = lo, ul, last
  464af0:	cmp	x11, x21
  464af4:	add	x11, x19, #0x18
  464af8:	sub	x21, x29, #0x68
  464afc:	stur	x11, [x21, #-256]
  464b00:	cset	w11, cc  // cc = lo, ul, last
  464b04:	cmp	x20, x12
  464b08:	add	x12, x23, #0x18
  464b0c:	sub	x20, x29, #0x70
  464b10:	stur	x12, [x20, #-256]
  464b14:	add	x12, x30, #0x18
  464b18:	sub	x20, x29, #0x78
  464b1c:	stur	x12, [x20, #-256]
  464b20:	and	w8, w8, w18
  464b24:	add	x12, x28, #0x18
  464b28:	sub	x18, x29, #0x80
  464b2c:	stur	x12, [x18, #-256]
  464b30:	and	w12, w0, w1
  464b34:	orr	w8, w8, w12
  464b38:	and	w9, w9, w10
  464b3c:	ldur	x5, [x29, #-96]
  464b40:	orr	w8, w8, w9
  464b44:	and	w9, w14, w13
  464b48:	orr	w8, w8, w9
  464b4c:	cset	w9, cc  // cc = lo, ul, last
  464b50:	and	w9, w11, w9
  464b54:	orr	w8, w8, w9
  464b58:	sub	x9, x29, #0x34
  464b5c:	and	x15, x5, #0xfffffffffffffffc
  464b60:	stur	w8, [x9, #-256]
  464b64:	sub	x8, x29, #0x30
  464b68:	stur	x15, [x8, #-256]
  464b6c:	orr	x8, x15, #0x1
  464b70:	sub	x9, x29, #0x88
  464b74:	stur	x8, [x9, #-256]
  464b78:	neg	x8, x17
  464b7c:	sub	x9, x29, #0x18
  464b80:	stur	x8, [x9, #-256]
  464b84:	stur	w16, [x29, #-204]
  464b88:	add	x8, x3, w16, sxtw
  464b8c:	ldur	x16, [x29, #-72]
  464b90:	add	x18, x5, #0x1
  464b94:	sub	x20, x29, #0x50
  464b98:	stur	x8, [x29, #-200]
  464b9c:	sub	x8, x3, #0x1
  464ba0:	mov	w27, wzr
  464ba4:	sub	x24, x29, #0x40
  464ba8:	mov	x30, x2
  464bac:	stur	x18, [x20, #-256]
  464bb0:	mov	w18, #0x5                   	// #5
  464bb4:	mov	w21, #0x101                 	// #257
  464bb8:	mov	w5, #0x100                 	// #256
  464bbc:	mov	x15, x4
  464bc0:	stur	x8, [x29, #-256]
  464bc4:	sub	x8, x7, #0x1
  464bc8:	stur	wzr, [x29, #-140]
  464bcc:	stur	xzr, [x29, #-152]
  464bd0:	stp	x7, x3, [x29, #-88]
  464bd4:	stp	x2, x8, [x29, #-224]
  464bd8:	stur	x6, [x29, #-136]
  464bdc:	b	464bf4 <feof@plt+0x61354>
  464be0:	ldur	x8, [x29, #-88]
  464be4:	cmp	x25, x8
  464be8:	ldur	x8, [x29, #-104]
  464bec:	ccmp	x25, x30, #0x0, ls  // ls = plast
  464bf0:	csel	x15, x15, x8, cc  // cc = lo, ul, last
  464bf4:	cmp	x26, x16
  464bf8:	b.eq	464c08 <feof@plt+0x61368>  // b.none
  464bfc:	mov	x12, x26
  464c00:	stur	wzr, [x29, #-112]
  464c04:	b	464cec <feof@plt+0x6144c>
  464c08:	mov	x23, x25
  464c0c:	cmp	x23, x6
  464c10:	b.eq	46678c <feof@plt+0x62eec>  // b.none
  464c14:	ldur	x8, [x29, #-184]
  464c18:	ldur	x11, [x29, #-152]
  464c1c:	ldur	x10, [x29, #-88]
  464c20:	cmp	w8, #0x0
  464c24:	cset	w8, ne  // ne = any
  464c28:	cmp	x30, x11
  464c2c:	cset	w9, ls  // ls = plast
  464c30:	and	w8, w8, w9
  464c34:	ldur	x9, [x29, #-104]
  464c38:	cmp	x11, x10
  464c3c:	cset	w10, ls  // ls = plast
  464c40:	and	w8, w10, w8
  464c44:	cmp	x15, x9
  464c48:	cset	w9, eq  // eq = none
  464c4c:	eor	w8, w8, w9
  464c50:	tbz	w8, #0, 464c5c <feof@plt+0x613bc>
  464c54:	cset	w8, ne  // ne = any
  464c58:	b	464c64 <feof@plt+0x613c4>
  464c5c:	cmp	x23, x11
  464c60:	cset	w8, hi  // hi = pmore
  464c64:	ldur	w9, [x29, #-140]
  464c68:	cmp	w9, #0x0
  464c6c:	cset	w9, eq  // eq = none
  464c70:	orr	w8, w9, w8
  464c74:	cbz	w27, 466794 <feof@plt+0x62ef4>
  464c78:	cbz	w8, 46604c <feof@plt+0x627ac>
  464c7c:	ldur	x8, [x29, #-192]
  464c80:	cmp	x8, #0x2
  464c84:	b.cc	464cac <feof@plt+0x6140c>  // b.lo, b.ul, b.last
  464c88:	ldur	x8, [x29, #-96]
  464c8c:	sub	x9, x29, #0x34
  464c90:	ldur	w9, [x9, #-256]
  464c94:	cmp	x8, #0x4
  464c98:	cset	w8, cc  // cc = lo, ul, last
  464c9c:	orr	w8, w8, w9
  464ca0:	tbz	w8, #0, 465f8c <feof@plt+0x626ec>
  464ca4:	mov	w9, #0x1                   	// #1
  464ca8:	b	465ff8 <feof@plt+0x62758>
  464cac:	mov	w8, #0x1                   	// #1
  464cb0:	stur	w8, [x29, #-140]
  464cb4:	stur	x23, [x29, #-152]
  464cb8:	b	46604c <feof@plt+0x627ac>
  464cbc:	stur	wzr, [x29, #-112]
  464cc0:	mov	w27, w10
  464cc4:	ldrb	w8, [x26, #1]
  464cc8:	ldrsb	x9, [x26, #2]
  464ccc:	bfi	x8, x9, #8, #56
  464cd0:	add	x8, x26, x8
  464cd4:	add	x12, x8, #0x3
  464cd8:	mov	x23, x25
  464cdc:	cmp	x12, x16
  464ce0:	mov	x25, x23
  464ce4:	mov	x26, x12
  464ce8:	b.eq	464c0c <feof@plt+0x6136c>  // b.none
  464cec:	ldrb	w8, [x12], #1
  464cf0:	cmp	w8, #0x1d
  464cf4:	b.hi	4667b4 <feof@plt+0x62f14>  // b.pmore
  464cf8:	adrp	x11, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  464cfc:	add	x11, x11, #0x204
  464d00:	adr	x9, 464cc4 <feof@plt+0x61424>
  464d04:	ldrh	w10, [x11, x8, lsl #1]
  464d08:	add	x9, x9, x10, lsl #2
  464d0c:	br	x9
  464d10:	cmp	w8, #0x5
  464d14:	cset	w9, eq  // eq = none
  464d18:	cmp	x25, x15
  464d1c:	b.ne	464d50 <feof@plt+0x614b0>  // b.any
  464d20:	cmp	x15, x6
  464d24:	mov	x15, x6
  464d28:	mov	x25, x3
  464d2c:	b.ne	464d18 <feof@plt+0x61478>  // b.any
  464d30:	b	465f80 <feof@plt+0x626e0>
  464d34:	cmp	x25, x15
  464d38:	b.ne	4659d8 <feof@plt+0x62138>  // b.any
  464d3c:	cmp	x15, x6
  464d40:	mov	x15, x6
  464d44:	mov	x25, x3
  464d48:	b.ne	464d34 <feof@plt+0x61494>  // b.any
  464d4c:	b	465f80 <feof@plt+0x626e0>
  464d50:	ldur	x11, [x29, #-160]
  464d54:	mov	x10, x25
  464d58:	cbz	x11, 464d64 <feof@plt+0x614c4>
  464d5c:	ldrb	w10, [x25]
  464d60:	add	x10, x11, x10
  464d64:	ldrb	w11, [x10]
  464d68:	ldrb	w10, [x12]
  464d6c:	cmp	w11, w10, lsl #3
  464d70:	b.cs	4658cc <feof@plt+0x6202c>  // b.hs, b.nlast
  464d74:	mov	x13, x12
  464d78:	add	x12, x12, x11, lsr #3
  464d7c:	ldrb	w12, [x12, #1]
  464d80:	and	w11, w11, #0x7
  464d84:	lsr	w11, w12, w11
  464d88:	tbz	w11, #0, 4658d0 <feof@plt+0x62030>
  464d8c:	cmp	w8, #0x5
  464d90:	cset	w9, ne  // ne = any
  464d94:	b	4658d0 <feof@plt+0x62030>
  464d98:	ldrb	w8, [x12]
  464d9c:	adrp	x11, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  464da0:	add	x11, x11, #0x410
  464da4:	lsl	x8, x8, #3
  464da8:	ldr	x9, [x28, x8]
  464dac:	ldrb	w10, [x22, x8]
  464db0:	cmp	x9, x11
  464db4:	csel	x11, x25, x9, eq  // eq = none
  464db8:	tst	w10, #0x3
  464dbc:	sub	x10, x29, #0x48
  464dc0:	ldur	x10, [x10, #-256]
  464dc4:	csel	x9, x9, x11, eq  // eq = none
  464dc8:	cmp	x5, x21
  464dcc:	str	x9, [x10, x8]
  464dd0:	ldrb	w8, [x12]
  464dd4:	str	x25, [x28, x8, lsl #3]
  464dd8:	ldrb	w8, [x12]
  464ddc:	lsl	x8, x8, #3
  464de0:	ldrb	w9, [x22, x8]
  464de4:	and	w9, w9, #0xfffffffb
  464de8:	strb	w9, [x22, x8]
  464dec:	ldrb	w8, [x12]
  464df0:	b.ne	465a64 <feof@plt+0x621c4>  // b.any
  464df4:	mov	w21, #0x101                 	// #257
  464df8:	mov	w5, #0x100                 	// #256
  464dfc:	b	465a84 <feof@plt+0x621e4>
  464e00:	ldur	x23, [x29, #-200]
  464e04:	cmp	x25, x23
  464e08:	b.eq	464cdc <feof@plt+0x6143c>  // b.none
  464e0c:	b	466044 <feof@plt+0x627a4>
  464e10:	ldur	x9, [x29, #-88]
  464e14:	cmp	x25, x15
  464e18:	b.ne	465910 <feof@plt+0x62070>  // b.any
  464e1c:	cmp	x15, x6
  464e20:	mov	x15, x6
  464e24:	mov	x25, x3
  464e28:	b.ne	464e14 <feof@plt+0x61574>  // b.any
  464e2c:	b	465f80 <feof@plt+0x626e0>
  464e30:	ldur	x9, [x29, #-88]
  464e34:	cmp	x25, x15
  464e38:	b.ne	465974 <feof@plt+0x620d4>  // b.any
  464e3c:	cmp	x15, x6
  464e40:	mov	x15, x6
  464e44:	mov	x25, x3
  464e48:	b.ne	464e34 <feof@plt+0x61594>  // b.any
  464e4c:	b	465f80 <feof@plt+0x626e0>
  464e50:	ldrb	w8, [x26, #1]
  464e54:	ldur	x12, [x29, #-160]
  464e58:	add	x9, x26, #0x2
  464e5c:	mov	w10, w8
  464e60:	mov	w11, w8
  464e64:	cbz	x12, 465bb8 <feof@plt+0x62318>
  464e68:	cmp	x25, x15
  464e6c:	b.ne	464e84 <feof@plt+0x615e4>  // b.any
  464e70:	cmp	x15, x6
  464e74:	mov	x15, x6
  464e78:	mov	x25, x3
  464e7c:	b.ne	464e68 <feof@plt+0x615c8>  // b.any
  464e80:	b	465f80 <feof@plt+0x626e0>
  464e84:	ldrb	w11, [x25], #1
  464e88:	ldur	x13, [x29, #-160]
  464e8c:	ldrb	w12, [x9]
  464e90:	ldrb	w11, [x13, x11]
  464e94:	cmp	w11, w12
  464e98:	b.ne	466044 <feof@plt+0x627a4>  // b.any
  464e9c:	subs	w10, w10, #0x1
  464ea0:	add	x9, x9, #0x1
  464ea4:	b.ne	464e68 <feof@plt+0x615c8>  // b.any
  464ea8:	sub	w8, w8, #0x1
  464eac:	add	x8, x26, x8
  464eb0:	add	x12, x8, #0x3
  464eb4:	ldur	w8, [x29, #-112]
  464eb8:	cbnz	w8, 464cd8 <feof@plt+0x61438>
  464ebc:	cmp	x5, x21
  464ec0:	b.cc	464ee4 <feof@plt+0x61644>  // b.lo, b.ul, b.last
  464ec4:	add	x8, x22, x21, lsl #3
  464ec8:	mov	x9, x21
  464ecc:	ldrb	w10, [x8]
  464ed0:	add	x9, x9, #0x1
  464ed4:	cmp	x9, x5
  464ed8:	orr	w10, w10, #0x18
  464edc:	strb	w10, [x8], #8
  464ee0:	b.ls	464ecc <feof@plt+0x6162c>  // b.plast
  464ee4:	mov	w8, #0x1                   	// #1
  464ee8:	stur	w8, [x29, #-112]
  464eec:	b	464cd8 <feof@plt+0x61438>
  464ef0:	stur	x12, [x29, #-16]
  464ef4:	ldrb	w8, [x12]
  464ef8:	lsl	x9, x8, #3
  464efc:	ldrb	w9, [x22, x9]
  464f00:	and	w9, w9, #0x3
  464f04:	cmp	w9, #0x3
  464f08:	b.ne	464f6c <feof@plt+0x616cc>  // b.any
  464f0c:	sub	x0, x29, #0x10
  464f10:	mov	x1, x16
  464f14:	mov	x2, x22
  464f18:	sub	x8, x29, #0x28
  464f1c:	mov	w23, w18
  464f20:	stur	x15, [x8, #-256]
  464f24:	mov	x20, x12
  464f28:	bl	469784 <feof@plt+0x65ee4>
  464f2c:	sub	x8, x29, #0x28
  464f30:	ldur	x15, [x8, #-256]
  464f34:	ldrb	w8, [x20]
  464f38:	ldp	x3, x16, [x29, #-80]
  464f3c:	ldur	x6, [x29, #-136]
  464f40:	ldur	x30, [x29, #-224]
  464f44:	lsl	x8, x8, #3
  464f48:	ldrb	w9, [x22, x8]
  464f4c:	mov	w18, w23
  464f50:	and	w9, w9, #0xfc
  464f54:	bfxil	w9, w0, #0, #2
  464f58:	strb	w9, [x22, x8]
  464f5c:	ldrb	w8, [x20]
  464f60:	lsl	x9, x8, #3
  464f64:	ldrb	w9, [x22, x9]
  464f68:	and	w9, w9, #0x3
  464f6c:	lsl	x8, x8, #3
  464f70:	ldr	x10, [x19, x8]
  464f74:	adrp	x11, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  464f78:	add	x11, x11, #0x410
  464f7c:	stur	wzr, [x29, #-112]
  464f80:	cmp	x10, x11
  464f84:	csel	x11, x25, x10, eq  // eq = none
  464f88:	cmp	w9, #0x0
  464f8c:	csel	x9, x10, x11, eq  // eq = none
  464f90:	sub	x10, x29, #0x40
  464f94:	ldur	x10, [x10, #-256]
  464f98:	cmp	x21, #0x101
  464f9c:	str	x9, [x10, x8]
  464fa0:	ldrb	w8, [x26, #1]
  464fa4:	str	x25, [x19, x8, lsl #3]
  464fa8:	ldrb	w8, [x26, #1]
  464fac:	lsl	x8, x8, #3
  464fb0:	ldrb	w9, [x22, x8]
  464fb4:	orr	w9, w9, #0x4
  464fb8:	strb	w9, [x22, x8]
  464fbc:	ldrb	w8, [x26, #1]
  464fc0:	lsl	x8, x8, #3
  464fc4:	ldrb	w9, [x22, x8]
  464fc8:	and	w9, w9, #0xfffffff7
  464fcc:	strb	w9, [x22, x8]
  464fd0:	ldrb	w5, [x26, #1]
  464fd4:	add	x8, x26, #0x3
  464fd8:	sub	x9, x29, #0x20
  464fdc:	stur	x8, [x9, #-256]
  464fe0:	csel	x21, x5, x21, eq  // eq = none
  464fe4:	mov	x12, x8
  464fe8:	b	464cd8 <feof@plt+0x61438>
  464fec:	ldrb	w9, [x26, #1]
  464ff0:	adrp	x10, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  464ff4:	add	x10, x10, #0x410
  464ff8:	ldr	x8, [x19, x9, lsl #3]
  464ffc:	cmp	x8, x10
  465000:	b.eq	466044 <feof@plt+0x627a4>  // b.none
  465004:	ldr	x20, [x28, x9, lsl #3]
  465008:	cmp	x20, x10
  46500c:	b.eq	466044 <feof@plt+0x627a4>  // b.none
  465010:	ldur	x12, [x29, #-184]
  465014:	ldur	x13, [x29, #-88]
  465018:	add	x9, x26, #0x2
  46501c:	sub	x10, x29, #0x8
  465020:	cmp	w12, #0x0
  465024:	stur	x9, [x10, #-256]
  465028:	cset	w9, ne  // ne = any
  46502c:	cmp	x30, x8
  465030:	cset	w10, ls  // ls = plast
  465034:	cmp	x8, x13
  465038:	cset	w11, ls  // ls = plast
  46503c:	and	w9, w9, w10
  465040:	and	w9, w11, w9
  465044:	cbz	w12, 465bd4 <feof@plt+0x62334>
  465048:	cmp	x30, x20
  46504c:	cset	w10, ls  // ls = plast
  465050:	cmp	x20, x13
  465054:	ldur	x26, [x29, #-104]
  465058:	cset	w11, ls  // ls = plast
  46505c:	and	w10, w11, w10
  465060:	cmp	w9, w10
  465064:	b.ne	46506c <feof@plt+0x617cc>  // b.any
  465068:	mov	x26, x20
  46506c:	add	x13, x22, x21, lsl #3
  465070:	cmp	x3, x20
  465074:	cset	w9, eq  // eq = none
  465078:	cmp	x8, x26
  46507c:	cset	w10, eq  // eq = none
  465080:	cset	w11, ne  // ne = any
  465084:	cmp	x26, x6
  465088:	cset	w12, eq  // eq = none
  46508c:	cmp	x26, x20
  465090:	ldur	w23, [x29, #-112]
  465094:	orr	w11, w12, w11
  465098:	cset	w12, eq  // eq = none
  46509c:	orr	w11, w12, w11
  4650a0:	cmp	w11, #0x0
  4650a4:	csel	x1, x8, x3, ne  // ne = any
  4650a8:	csel	w8, w10, w9, ne  // ne = any
  4650ac:	csel	x26, x26, x20, ne  // ne = any
  4650b0:	tbnz	w8, #0, 465e30 <feof@plt+0x62590>
  4650b4:	cmp	x25, x15
  4650b8:	b.ne	4650d0 <feof@plt+0x61830>  // b.any
  4650bc:	cmp	x15, x6
  4650c0:	mov	x15, x6
  4650c4:	mov	x25, x3
  4650c8:	b.ne	4650b4 <feof@plt+0x61814>  // b.any
  4650cc:	b	465f80 <feof@plt+0x626e0>
  4650d0:	sub	x8, x15, x25
  4650d4:	sub	x9, x26, x1
  4650d8:	cmp	x9, w8, sxtw
  4650dc:	csel	x8, x9, x8, lt  // lt = tstop
  4650e0:	ldur	x9, [x29, #-160]
  4650e4:	sxtw	x2, w8
  4650e8:	cbz	x9, 465120 <feof@plt+0x61880>
  4650ec:	cbz	w8, 465188 <feof@plt+0x618e8>
  4650f0:	mov	x9, xzr
  4650f4:	ldrb	w10, [x25, x9]
  4650f8:	ldrb	w11, [x1, x9]
  4650fc:	ldur	x12, [x29, #-160]
  465100:	ldrb	w10, [x12, x10]
  465104:	ldrb	w11, [x12, x11]
  465108:	cmp	w10, w11
  46510c:	b.ne	466044 <feof@plt+0x627a4>  // b.any
  465110:	add	x9, x9, #0x1
  465114:	cmp	w8, w9
  465118:	b.ne	4650f4 <feof@plt+0x61854>  // b.any
  46511c:	b	465188 <feof@plt+0x618e8>
  465120:	sub	x8, x29, #0x28
  465124:	stur	x15, [x8, #-256]
  465128:	sub	x8, x29, #0x98
  46512c:	stur	x13, [x8, #-256]
  465130:	sub	x8, x29, #0xa0
  465134:	mov	x0, x25
  465138:	stur	x1, [x8, #-256]
  46513c:	sub	x8, x29, #0xa8
  465140:	stur	x5, [x29, #-112]
  465144:	stur	w18, [x29, #-232]
  465148:	stur	x2, [x8, #-256]
  46514c:	bl	403840 <bcmp@plt>
  465150:	sub	x8, x29, #0xa8
  465154:	ldur	x2, [x8, #-256]
  465158:	sub	x8, x29, #0xa0
  46515c:	ldur	x1, [x8, #-256]
  465160:	sub	x8, x29, #0x98
  465164:	ldur	x13, [x8, #-256]
  465168:	sub	x8, x29, #0x28
  46516c:	ldur	x15, [x8, #-256]
  465170:	ldur	x5, [x29, #-112]
  465174:	ldur	w18, [x29, #-232]
  465178:	ldur	x6, [x29, #-136]
  46517c:	ldp	x3, x16, [x29, #-80]
  465180:	ldur	x30, [x29, #-224]
  465184:	cbnz	w0, 466044 <feof@plt+0x627a4>
  465188:	cmp	w23, #0x0
  46518c:	add	x25, x25, x2
  465190:	add	x8, x1, x2
  465194:	csinc	w9, w23, wzr, ne  // ne = any
  465198:	stur	w9, [x29, #-112]
  46519c:	cbnz	w23, 465070 <feof@plt+0x617d0>
  4651a0:	cmp	x5, x21
  4651a4:	b.cc	465070 <feof@plt+0x617d0>  // b.lo, b.ul, b.last
  4651a8:	mov	x9, x13
  4651ac:	mov	x10, x21
  4651b0:	ldrb	w11, [x9]
  4651b4:	add	x10, x10, #0x1
  4651b8:	cmp	x10, x5
  4651bc:	orr	w11, w11, #0x18
  4651c0:	strb	w11, [x9], #8
  4651c4:	b.ls	4651b0 <feof@plt+0x61910>  // b.plast
  4651c8:	mov	w9, #0x1                   	// #1
  4651cc:	stur	w9, [x29, #-112]
  4651d0:	b	465070 <feof@plt+0x617d0>
  4651d4:	ldur	x23, [x29, #-200]
  4651d8:	cmp	x25, x23
  4651dc:	b.eq	465b44 <feof@plt+0x622a4>  // b.none
  4651e0:	ldur	x8, [x29, #-88]
  4651e4:	cmp	x25, x8
  4651e8:	csel	x8, x3, x25, eq  // eq = none
  4651ec:	ldrb	w8, [x8]
  4651f0:	b	4653f0 <feof@plt+0x61b50>
  4651f4:	ldrb	w9, [x26, #1]
  4651f8:	ldrsb	x10, [x26, #2]
  4651fc:	add	x8, x26, #0x3
  465200:	mov	x12, x8
  465204:	bfi	x9, x10, #8, #56
  465208:	b	465210 <feof@plt+0x61970>
  46520c:	add	x12, x10, #0x3
  465210:	add	x11, x12, #0x2
  465214:	mov	x10, x12
  465218:	cmp	x11, x16
  46521c:	b.cs	465230 <feof@plt+0x61990>  // b.hs, b.nlast
  465220:	ldrb	w12, [x10]
  465224:	and	w12, w12, #0xfe
  465228:	cmp	w12, #0x6
  46522c:	b.eq	46520c <feof@plt+0x6196c>  // b.none
  465230:	add	x12, x10, #0x6
  465234:	cmp	x12, x16
  465238:	b.cs	465248 <feof@plt+0x619a8>  // b.hs, b.nlast
  46523c:	ldrb	w13, [x10]
  465240:	cmp	w13, #0x13
  465244:	b.eq	465210 <feof@plt+0x61970>  // b.none
  465248:	add	x8, x8, x9
  46524c:	cmp	x10, x16
  465250:	stur	x8, [x29, #-16]
  465254:	b.eq	465db0 <feof@plt+0x62510>  // b.none
  465258:	ldrb	w12, [x10]
  46525c:	cmp	w12, #0x2
  465260:	b.ne	465be0 <feof@plt+0x62340>  // b.any
  465264:	ldrb	w9, [x11]
  465268:	b	465bf8 <feof@plt+0x62358>
  46526c:	sub	x9, x5, x21
  465270:	sub	x8, x29, #0x28
  465274:	add	x9, x9, x9, lsl #1
  465278:	stur	x15, [x8, #-256]
  46527c:	sub	w8, w18, w27
  465280:	add	x9, x9, #0x7
  465284:	cmp	x9, x8
  465288:	stur	x9, [x29, #-232]
  46528c:	b.ls	46530c <feof@plt+0x61a6c>  // b.plast
  465290:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  465294:	ldr	w8, [x8, #1032]
  465298:	mov	w9, #0x13                  	// #19
  46529c:	mov	x1, x24
  4652a0:	mul	w8, w8, w9
  4652a4:	sub	x9, x29, #0x8
  4652a8:	stur	w8, [x9, #-256]
  4652ac:	mov	w8, w18
  4652b0:	sub	x9, x29, #0x8
  4652b4:	ldur	w9, [x9, #-256]
  4652b8:	cmp	w8, w9
  4652bc:	b.hi	4663c4 <feof@plt+0x62b24>  // b.pmore
  4652c0:	lsl	w26, w8, #1
  4652c4:	sub	x24, sp, w26, uxtw #3
  4652c8:	mov	sp, x24
  4652cc:	mov	w8, w8
  4652d0:	lsl	x2, x8, #3
  4652d4:	mov	x0, x24
  4652d8:	mov	x20, x5
  4652dc:	mov	x23, x12
  4652e0:	bl	402fc0 <memcpy@plt>
  4652e4:	ldur	x9, [x29, #-232]
  4652e8:	ldp	x3, x16, [x29, #-80]
  4652ec:	sub	w8, w26, w27
  4652f0:	mov	x12, x23
  4652f4:	mov	x5, x20
  4652f8:	mov	w18, w26
  4652fc:	cmp	x9, x8
  465300:	mov	w8, w26
  465304:	mov	x1, x24
  465308:	b.hi	4652b0 <feof@plt+0x61a10>  // b.pmore
  46530c:	mov	x13, x12
  465310:	cmp	x5, x21
  465314:	mov	x8, x21
  465318:	b.cc	465350 <feof@plt+0x61ab0>  // b.lo, b.ul, b.last
  46531c:	lsl	x9, x8, #3
  465320:	ldr	x10, [x19, x9]
  465324:	add	w11, w27, #0x1
  465328:	add	x8, x8, #0x1
  46532c:	add	w12, w27, #0x2
  465330:	str	x10, [x24, w27, uxtw #3]
  465334:	ldr	x10, [x28, x9]
  465338:	add	w27, w27, #0x3
  46533c:	cmp	x8, x5
  465340:	str	x10, [x24, w11, uxtw #3]
  465344:	ldr	x9, [x22, x9]
  465348:	str	x9, [x24, w12, uxtw #3]
  46534c:	b.ls	46531c <feof@plt+0x61a7c>  // b.plast
  465350:	add	w8, w27, #0x1
  465354:	mov	w9, w27
  465358:	lsl	x9, x9, #3
  46535c:	lsl	x8, x8, #3
  465360:	str	w21, [x24, x9]
  465364:	str	w5, [x24, x8]
  465368:	sub	x8, x29, #0x28
  46536c:	ldur	x30, [x29, #-224]
  465370:	ldur	x6, [x29, #-136]
  465374:	ldur	x15, [x8, #-256]
  465378:	add	w10, w27, #0x2
  46537c:	add	w11, w27, #0x3
  465380:	add	w27, w27, #0x4
  465384:	str	xzr, [x24, w10, uxtw #3]
  465388:	str	xzr, [x24, w11, uxtw #3]
  46538c:	mov	x23, x25
  465390:	mov	x12, x13
  465394:	b	464cdc <feof@plt+0x6143c>
  465398:	ldrb	w8, [x26, #3]
  46539c:	ldrsb	w9, [x26, #4]
  4653a0:	bfi	w8, w9, #8, #24
  4653a4:	subs	w9, w8, #0x1
  4653a8:	b.lt	465b54 <feof@plt+0x622b4>  // b.tstop
  4653ac:	sturh	w9, [x26, #3]
  4653b0:	b	4653d0 <feof@plt+0x61b30>
  4653b4:	ldrb	w8, [x26, #3]
  4653b8:	ldrsb	w9, [x26, #4]
  4653bc:	bfi	w8, w9, #8, #24
  4653c0:	cbz	w8, 4653d0 <feof@plt+0x61b30>
  4653c4:	sub	w8, w8, #0x1
  4653c8:	sturh	w8, [x26, #3]
  4653cc:	b	464cc4 <feof@plt+0x61424>
  4653d0:	add	x12, x26, #0x5
  4653d4:	b	464cd8 <feof@plt+0x61438>
  4653d8:	ldur	w8, [x29, #-204]
  4653dc:	cbz	w8, 465b30 <feof@plt+0x62290>
  4653e0:	ldur	x8, [x29, #-240]
  4653e4:	cmp	x25, x8
  4653e8:	b.eq	465b30 <feof@plt+0x62290>  // b.none
  4653ec:	ldurb	w8, [x25, #-1]
  4653f0:	cmp	w8, #0xa
  4653f4:	b.ne	466044 <feof@plt+0x627a4>  // b.any
  4653f8:	ldur	x8, [x29, #-176]
  4653fc:	mov	x23, x25
  465400:	ldrsb	w8, [x8, #56]
  465404:	tbnz	w8, #31, 464cdc <feof@plt+0x6143c>
  465408:	b	466044 <feof@plt+0x627a4>
  46540c:	ldur	w8, [x29, #-204]
  465410:	cbz	w8, 464cd8 <feof@plt+0x61438>
  465414:	ldur	x8, [x29, #-240]
  465418:	mov	x23, x25
  46541c:	cmp	x25, x8
  465420:	b.eq	464cdc <feof@plt+0x6143c>  // b.none
  465424:	b	466044 <feof@plt+0x627a4>
  465428:	sub	x8, x29, #0x28
  46542c:	stur	x15, [x8, #-256]
  465430:	ldrb	w8, [x26, #1]
  465434:	sub	x9, x29, #0x98
  465438:	stur	x8, [x9, #-256]
  46543c:	ldrsb	x8, [x26, #2]
  465440:	sub	x9, x29, #0xa0
  465444:	stur	x8, [x9, #-256]
  465448:	sub	x9, x5, x21
  46544c:	add	x9, x9, x9, lsl #1
  465450:	sub	w8, w18, w27
  465454:	add	x9, x9, #0x7
  465458:	cmp	x9, x8
  46545c:	stur	x9, [x29, #-232]
  465460:	b.ls	4654d8 <feof@plt+0x61c38>  // b.plast
  465464:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  465468:	ldr	w8, [x8, #1032]
  46546c:	mov	w9, #0x13                  	// #19
  465470:	mov	x1, x24
  465474:	mul	w8, w8, w9
  465478:	sub	x9, x29, #0x8
  46547c:	stur	w8, [x9, #-256]
  465480:	mov	w8, w18
  465484:	sub	x9, x29, #0x8
  465488:	ldur	w9, [x9, #-256]
  46548c:	cmp	w8, w9
  465490:	b.hi	4663c4 <feof@plt+0x62b24>  // b.pmore
  465494:	lsl	w23, w8, #1
  465498:	sub	x24, sp, w23, uxtw #3
  46549c:	mov	sp, x24
  4654a0:	mov	w8, w8
  4654a4:	lsl	x2, x8, #3
  4654a8:	mov	x0, x24
  4654ac:	mov	x20, x5
  4654b0:	bl	402fc0 <memcpy@plt>
  4654b4:	ldur	x9, [x29, #-232]
  4654b8:	ldp	x3, x16, [x29, #-80]
  4654bc:	sub	w8, w23, w27
  4654c0:	mov	x5, x20
  4654c4:	mov	w18, w23
  4654c8:	cmp	x9, x8
  4654cc:	mov	w8, w23
  4654d0:	mov	x1, x24
  4654d4:	b.hi	465484 <feof@plt+0x61be4>  // b.pmore
  4654d8:	sub	x8, x29, #0x98
  4654dc:	ldur	x14, [x8, #-256]
  4654e0:	sub	x8, x29, #0xa0
  4654e4:	ldur	x8, [x8, #-256]
  4654e8:	cmp	x5, x21
  4654ec:	add	x13, x26, #0x3
  4654f0:	bfi	x14, x8, #8, #56
  4654f4:	mov	x8, x21
  4654f8:	b.cc	465530 <feof@plt+0x61c90>  // b.lo, b.ul, b.last
  4654fc:	lsl	x9, x8, #3
  465500:	ldr	x10, [x19, x9]
  465504:	add	w11, w27, #0x1
  465508:	add	x8, x8, #0x1
  46550c:	add	w12, w27, #0x2
  465510:	str	x10, [x24, w27, uxtw #3]
  465514:	ldr	x10, [x28, x9]
  465518:	add	w27, w27, #0x3
  46551c:	cmp	x8, x5
  465520:	str	x10, [x24, w11, uxtw #3]
  465524:	ldr	x9, [x22, x9]
  465528:	str	x9, [x24, w12, uxtw #3]
  46552c:	b.ls	4654fc <feof@plt+0x61c5c>  // b.plast
  465530:	add	w8, w27, #0x1
  465534:	mov	w9, w27
  465538:	add	w10, w27, #0x2
  46553c:	add	x11, x13, x14
  465540:	add	w12, w27, #0x3
  465544:	add	w27, w27, #0x4
  465548:	lsl	x9, x9, #3
  46554c:	lsl	x8, x8, #3
  465550:	str	w21, [x24, x9]
  465554:	str	w5, [x24, x8]
  465558:	str	x11, [x24, w10, uxtw #3]
  46555c:	str	xzr, [x24, w12, uxtw #3]
  465560:	b	465d54 <feof@plt+0x624b4>
  465564:	sub	x9, x5, x21
  465568:	sub	x8, x29, #0x28
  46556c:	add	x9, x9, x9, lsl #1
  465570:	stur	x25, [x8, #-256]
  465574:	sub	w8, w18, w27
  465578:	add	x9, x9, #0x7
  46557c:	cmp	x9, x8
  465580:	stur	x9, [x29, #-232]
  465584:	b.ls	465608 <feof@plt+0x61d68>  // b.plast
  465588:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  46558c:	ldr	w8, [x8, #1032]
  465590:	mov	w9, #0x13                  	// #19
  465594:	mov	x1, x24
  465598:	mul	w8, w8, w9
  46559c:	sub	x9, x29, #0x8
  4655a0:	stur	w8, [x9, #-256]
  4655a4:	mov	w8, w18
  4655a8:	sub	x9, x29, #0x8
  4655ac:	ldur	w9, [x9, #-256]
  4655b0:	cmp	w8, w9
  4655b4:	b.hi	4663c4 <feof@plt+0x62b24>  // b.pmore
  4655b8:	lsl	w23, w8, #1
  4655bc:	sub	x24, sp, w23, uxtw #3
  4655c0:	mov	sp, x24
  4655c4:	mov	w8, w8
  4655c8:	lsl	x2, x8, #3
  4655cc:	mov	x0, x24
  4655d0:	mov	x20, x5
  4655d4:	mov	x25, x15
  4655d8:	bl	402fc0 <memcpy@plt>
  4655dc:	ldur	x9, [x29, #-232]
  4655e0:	ldur	x6, [x29, #-136]
  4655e4:	ldp	x3, x16, [x29, #-80]
  4655e8:	sub	w8, w23, w27
  4655ec:	mov	x15, x25
  4655f0:	mov	x5, x20
  4655f4:	mov	w18, w23
  4655f8:	cmp	x9, x8
  4655fc:	mov	w8, w23
  465600:	mov	x1, x24
  465604:	b.hi	4655a8 <feof@plt+0x61d08>  // b.pmore
  465608:	ldur	x30, [x29, #-224]
  46560c:	cmp	x5, x21
  465610:	mov	x8, x21
  465614:	b.cc	46564c <feof@plt+0x61dac>  // b.lo, b.ul, b.last
  465618:	lsl	x9, x8, #3
  46561c:	ldr	x10, [x19, x9]
  465620:	add	w11, w27, #0x1
  465624:	add	x8, x8, #0x1
  465628:	add	w12, w27, #0x2
  46562c:	str	x10, [x24, w27, uxtw #3]
  465630:	ldr	x10, [x28, x9]
  465634:	add	w27, w27, #0x3
  465638:	cmp	x8, x5
  46563c:	str	x10, [x24, w11, uxtw #3]
  465640:	ldr	x9, [x22, x9]
  465644:	str	x9, [x24, w12, uxtw #3]
  465648:	b.ls	465618 <feof@plt+0x61d78>  // b.plast
  46564c:	add	w8, w27, #0x1
  465650:	mov	w9, w27
  465654:	lsl	x9, x9, #3
  465658:	lsl	x8, x8, #3
  46565c:	str	w21, [x24, x9]
  465660:	str	w5, [x24, x8]
  465664:	sub	x8, x29, #0x28
  465668:	ldur	x25, [x8, #-256]
  46566c:	add	w10, w27, #0x2
  465670:	add	w11, w27, #0x3
  465674:	add	w27, w27, #0x4
  465678:	str	xzr, [x24, w10, uxtw #3]
  46567c:	str	xzr, [x24, w11, uxtw #3]
  465680:	b	464cc4 <feof@plt+0x61424>
  465684:	ldrb	w8, [x26, #1]
  465688:	ldrsb	x9, [x26, #2]
  46568c:	add	x12, x26, #0x5
  465690:	bfi	x8, x9, #8, #56
  465694:	add	x9, x26, #0x3
  465698:	add	x10, x9, x8
  46569c:	stur	x10, [x29, #-16]
  4656a0:	ldrb	w10, [x26, #3]
  4656a4:	ldrb	w11, [x26, #4]
  4656a8:	strb	w10, [x9, x8]
  4656ac:	ldur	x8, [x29, #-16]
  4656b0:	strb	w11, [x8, #1]
  4656b4:	b	464cd8 <feof@plt+0x61438>
  4656b8:	ldur	x8, [x29, #-200]
  4656bc:	cmp	x25, x8
  4656c0:	b.eq	464cd8 <feof@plt+0x61438>  // b.none
  4656c4:	ldur	w8, [x29, #-204]
  4656c8:	cbz	w8, 464cd8 <feof@plt+0x61438>
  4656cc:	ldur	x8, [x29, #-240]
  4656d0:	cmp	x25, x8
  4656d4:	b.eq	464cd8 <feof@plt+0x61438>  // b.none
  4656d8:	mov	x13, x12
  4656dc:	ldur	x12, [x29, #-216]
  4656e0:	ldur	x11, [x29, #-88]
  4656e4:	sub	x8, x25, #0x1
  4656e8:	cmp	x25, x3
  4656ec:	csel	x9, x12, x8, eq  // eq = none
  4656f0:	cmp	x8, x11
  4656f4:	csel	x8, x3, x9, eq  // eq = none
  4656f8:	ldrb	w8, [x8]
  4656fc:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  465700:	add	x9, x9, #0x310
  465704:	ldur	x10, [x29, #-256]
  465708:	ldrb	w8, [x9, x8]
  46570c:	mov	x23, x25
  465710:	cmp	w8, #0x1
  465714:	cset	w8, eq  // eq = none
  465718:	cmp	x25, x10
  46571c:	csel	x10, x12, x25, eq  // eq = none
  465720:	cmp	x25, x11
  465724:	csel	x10, x3, x10, eq  // eq = none
  465728:	ldrb	w10, [x10]
  46572c:	mov	x12, x13
  465730:	ldrb	w9, [x9, x10]
  465734:	cmp	w9, #0x1
  465738:	cset	w9, eq  // eq = none
  46573c:	eor	w8, w8, w9
  465740:	tbnz	w8, #0, 464cdc <feof@plt+0x6143c>
  465744:	b	466044 <feof@plt+0x627a4>
  465748:	ldur	x8, [x29, #-200]
  46574c:	cmp	x25, x8
  465750:	b.eq	466044 <feof@plt+0x627a4>  // b.none
  465754:	ldur	w8, [x29, #-204]
  465758:	cbz	w8, 466044 <feof@plt+0x627a4>
  46575c:	ldur	x8, [x29, #-240]
  465760:	cmp	x25, x8
  465764:	b.eq	466044 <feof@plt+0x627a4>  // b.none
  465768:	mov	x13, x12
  46576c:	ldur	x12, [x29, #-216]
  465770:	ldur	x11, [x29, #-88]
  465774:	sub	x8, x25, #0x1
  465778:	cmp	x25, x3
  46577c:	csel	x9, x12, x8, eq  // eq = none
  465780:	cmp	x8, x11
  465784:	csel	x8, x3, x9, eq  // eq = none
  465788:	ldrb	w8, [x8]
  46578c:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  465790:	add	x9, x9, #0x310
  465794:	ldur	x10, [x29, #-256]
  465798:	ldrb	w8, [x9, x8]
  46579c:	mov	x23, x25
  4657a0:	cmp	w8, #0x1
  4657a4:	cset	w8, eq  // eq = none
  4657a8:	cmp	x25, x10
  4657ac:	csel	x10, x12, x25, eq  // eq = none
  4657b0:	cmp	x25, x11
  4657b4:	csel	x10, x3, x10, eq  // eq = none
  4657b8:	ldrb	w10, [x10]
  4657bc:	mov	x12, x13
  4657c0:	ldrb	w9, [x9, x10]
  4657c4:	cmp	w9, #0x1
  4657c8:	cset	w9, eq  // eq = none
  4657cc:	eor	w8, w8, w9
  4657d0:	tbz	w8, #0, 464cdc <feof@plt+0x6143c>
  4657d4:	b	466044 <feof@plt+0x627a4>
  4657d8:	ldur	x8, [x29, #-200]
  4657dc:	cmp	x25, x8
  4657e0:	b.eq	466138 <feof@plt+0x62898>  // b.none
  4657e4:	ldur	x8, [x29, #-256]
  4657e8:	ldur	x11, [x29, #-88]
  4657ec:	cmp	x25, x8
  4657f0:	ldur	x8, [x29, #-216]
  4657f4:	csel	x8, x8, x25, eq  // eq = none
  4657f8:	cmp	x25, x11
  4657fc:	csel	x8, x3, x8, eq  // eq = none
  465800:	ldrb	w9, [x8]
  465804:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  465808:	add	x8, x8, #0x310
  46580c:	ldrb	w9, [x8, x9]
  465810:	cmp	w9, #0x1
  465814:	b.ne	466044 <feof@plt+0x627a4>  // b.any
  465818:	ldur	w9, [x29, #-204]
  46581c:	cbz	w9, 464cd8 <feof@plt+0x61438>
  465820:	ldur	x9, [x29, #-240]
  465824:	cmp	x25, x9
  465828:	b.eq	464cd8 <feof@plt+0x61438>  // b.none
  46582c:	ldur	x10, [x29, #-216]
  465830:	sub	x9, x25, #0x1
  465834:	cmp	x25, x3
  465838:	csel	x10, x10, x9, eq  // eq = none
  46583c:	cmp	x9, x11
  465840:	csel	x9, x3, x10, eq  // eq = none
  465844:	b	4658b4 <feof@plt+0x62014>
  465848:	ldur	w8, [x29, #-204]
  46584c:	cbz	w8, 466044 <feof@plt+0x627a4>
  465850:	ldur	x8, [x29, #-240]
  465854:	cmp	x25, x8
  465858:	b.eq	466044 <feof@plt+0x627a4>  // b.none
  46585c:	ldur	x9, [x29, #-216]
  465860:	ldur	x10, [x29, #-88]
  465864:	sub	x8, x25, #0x1
  465868:	cmp	x25, x3
  46586c:	csel	x9, x9, x8, eq  // eq = none
  465870:	cmp	x8, x10
  465874:	csel	x8, x3, x9, eq  // eq = none
  465878:	ldrb	w9, [x8]
  46587c:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  465880:	add	x8, x8, #0x310
  465884:	ldrb	w9, [x8, x9]
  465888:	cmp	w9, #0x1
  46588c:	b.ne	466044 <feof@plt+0x627a4>  // b.any
  465890:	ldur	x23, [x29, #-200]
  465894:	cmp	x25, x23
  465898:	b.eq	464cdc <feof@plt+0x6143c>  // b.none
  46589c:	ldur	x9, [x29, #-256]
  4658a0:	cmp	x25, x9
  4658a4:	ldur	x9, [x29, #-216]
  4658a8:	csel	x9, x9, x25, eq  // eq = none
  4658ac:	cmp	x25, x10
  4658b0:	csel	x9, x3, x9, eq  // eq = none
  4658b4:	ldrb	w9, [x9]
  4658b8:	mov	x23, x25
  4658bc:	ldrb	w8, [x8, x9]
  4658c0:	cmp	w8, #0x1
  4658c4:	b.ne	464cdc <feof@plt+0x6143c>  // b.any
  4658c8:	b	466044 <feof@plt+0x627a4>
  4658cc:	mov	x13, x12
  4658d0:	cbz	w9, 466044 <feof@plt+0x627a4>
  4658d4:	add	x8, x10, x13
  4658d8:	add	x12, x8, #0x1
  4658dc:	ldur	w8, [x29, #-112]
  4658e0:	cbnz	w8, 465a58 <feof@plt+0x621b8>
  4658e4:	cmp	x5, x21
  4658e8:	b.cc	465a54 <feof@plt+0x621b4>  // b.lo, b.ul, b.last
  4658ec:	add	x8, x22, x21, lsl #3
  4658f0:	mov	x9, x21
  4658f4:	ldrb	w10, [x8]
  4658f8:	add	x9, x9, #0x1
  4658fc:	cmp	x9, x5
  465900:	orr	w10, w10, #0x18
  465904:	strb	w10, [x8], #8
  465908:	b.ls	4658f4 <feof@plt+0x62054>  // b.plast
  46590c:	b	465a54 <feof@plt+0x621b4>
  465910:	ldur	x8, [x29, #-256]
  465914:	cmp	x25, x8
  465918:	ldur	x8, [x29, #-216]
  46591c:	csel	x8, x8, x25, eq  // eq = none
  465920:	cmp	x25, x9
  465924:	csel	x8, x3, x8, eq  // eq = none
  465928:	ldrb	w8, [x8]
  46592c:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  465930:	add	x9, x9, #0x310
  465934:	ldrb	w8, [x9, x8]
  465938:	cmp	w8, #0x1
  46593c:	b.ne	466044 <feof@plt+0x627a4>  // b.any
  465940:	ldur	w8, [x29, #-112]
  465944:	cbnz	w8, 465a58 <feof@plt+0x621b8>
  465948:	cmp	x5, x21
  46594c:	b.cc	465a54 <feof@plt+0x621b4>  // b.lo, b.ul, b.last
  465950:	add	x8, x22, x21, lsl #3
  465954:	mov	x9, x21
  465958:	ldrb	w10, [x8]
  46595c:	add	x9, x9, #0x1
  465960:	cmp	x9, x5
  465964:	orr	w10, w10, #0x18
  465968:	strb	w10, [x8], #8
  46596c:	b.ls	465958 <feof@plt+0x620b8>  // b.plast
  465970:	b	465a54 <feof@plt+0x621b4>
  465974:	ldur	x8, [x29, #-256]
  465978:	cmp	x25, x8
  46597c:	ldur	x8, [x29, #-216]
  465980:	csel	x8, x8, x25, eq  // eq = none
  465984:	cmp	x25, x9
  465988:	csel	x8, x3, x8, eq  // eq = none
  46598c:	ldrb	w8, [x8]
  465990:	adrp	x9, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  465994:	add	x9, x9, #0x310
  465998:	ldrb	w8, [x9, x8]
  46599c:	cmp	w8, #0x1
  4659a0:	b.eq	466044 <feof@plt+0x627a4>  // b.none
  4659a4:	ldur	w8, [x29, #-112]
  4659a8:	cbnz	w8, 465a58 <feof@plt+0x621b8>
  4659ac:	cmp	x5, x21
  4659b0:	b.cc	465a54 <feof@plt+0x621b4>  // b.lo, b.ul, b.last
  4659b4:	add	x8, x22, x21, lsl #3
  4659b8:	mov	x9, x21
  4659bc:	ldrb	w10, [x8]
  4659c0:	add	x9, x9, #0x1
  4659c4:	cmp	x9, x5
  4659c8:	orr	w10, w10, #0x18
  4659cc:	strb	w10, [x8], #8
  4659d0:	b.ls	4659bc <feof@plt+0x6211c>  // b.plast
  4659d4:	b	465a54 <feof@plt+0x621b4>
  4659d8:	ldur	x8, [x29, #-176]
  4659dc:	ldr	x8, [x8, #24]
  4659e0:	tbnz	w8, #6, 465a04 <feof@plt+0x62164>
  4659e4:	ldur	x10, [x29, #-160]
  4659e8:	mov	x9, x25
  4659ec:	cbz	x10, 4659f8 <feof@plt+0x62158>
  4659f0:	ldrb	w9, [x25]
  4659f4:	add	x9, x10, x9
  4659f8:	ldrb	w9, [x9]
  4659fc:	cmp	w9, #0xa
  465a00:	b.eq	466044 <feof@plt+0x627a4>  // b.none
  465a04:	tbz	w8, #7, 465a24 <feof@plt+0x62184>
  465a08:	ldur	x9, [x29, #-160]
  465a0c:	mov	x8, x25
  465a10:	cbz	x9, 465a1c <feof@plt+0x6217c>
  465a14:	ldrb	w8, [x25]
  465a18:	add	x8, x9, x8
  465a1c:	ldrb	w8, [x8]
  465a20:	cbz	w8, 466044 <feof@plt+0x627a4>
  465a24:	ldur	w8, [x29, #-112]
  465a28:	cbnz	w8, 465a58 <feof@plt+0x621b8>
  465a2c:	cmp	x5, x21
  465a30:	b.cc	465a54 <feof@plt+0x621b4>  // b.lo, b.ul, b.last
  465a34:	add	x8, x22, x21, lsl #3
  465a38:	mov	x9, x21
  465a3c:	ldrb	w10, [x8]
  465a40:	add	x9, x9, #0x1
  465a44:	cmp	x9, x5
  465a48:	orr	w10, w10, #0x18
  465a4c:	strb	w10, [x8], #8
  465a50:	b.ls	465a3c <feof@plt+0x6219c>  // b.plast
  465a54:	mov	w8, #0x1                   	// #1
  465a58:	stur	w8, [x29, #-112]
  465a5c:	add	x23, x25, #0x1
  465a60:	b	464cdc <feof@plt+0x6143c>
  465a64:	mov	w9, w8
  465a68:	sub	w9, w9, #0x1
  465a6c:	tst	w9, #0xff
  465a70:	b.eq	464df4 <feof@plt+0x61554>  // b.none
  465a74:	and	x5, x9, #0xff
  465a78:	lsl	x10, x5, #3
  465a7c:	ldrb	w10, [x22, x10]
  465a80:	tbz	w10, #2, 465a68 <feof@plt+0x621c8>
  465a84:	sub	x9, x29, #0x20
  465a88:	ldur	x9, [x9, #-256]
  465a8c:	cmp	x9, x26
  465a90:	b.eq	465aa0 <feof@plt+0x62200>  // b.none
  465a94:	lsl	x8, x8, #3
  465a98:	ldrb	w8, [x22, x8]
  465a9c:	tbnz	w8, #3, 465b24 <feof@plt+0x62284>
  465aa0:	add	x8, x26, #0x3
  465aa4:	cmp	x8, x16
  465aa8:	b.cs	465b24 <feof@plt+0x62284>  // b.hs, b.nlast
  465aac:	add	x8, x26, #0x4
  465ab0:	stur	x8, [x29, #-16]
  465ab4:	ldrb	w8, [x26, #3]
  465ab8:	sub	w8, w8, #0xd
  465abc:	cmp	w8, #0x9
  465ac0:	b.hi	465b24 <feof@plt+0x62284>  // b.pmore
  465ac4:	mov	w9, #0x271                 	// #625
  465ac8:	lsr	w9, w9, w8
  465acc:	tbz	w9, #0, 465b24 <feof@plt+0x62284>
  465ad0:	adrp	x9, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  465ad4:	sxtb	x8, w8
  465ad8:	add	x9, x9, #0x478
  465adc:	ldrb	w10, [x26, #4]
  465ae0:	ldrsb	x11, [x26, #5]
  465ae4:	ldr	x8, [x9, x8, lsl #3]
  465ae8:	bfi	x10, x11, #8, #56
  465aec:	add	x8, x26, x8
  465af0:	add	x8, x8, x10
  465af4:	stur	x8, [x29, #-16]
  465af8:	tbz	w10, #31, 465b24 <feof@plt+0x62284>
  465afc:	ldrb	w9, [x8]
  465b00:	cmp	w9, #0xf
  465b04:	b.ne	465b24 <feof@plt+0x62284>  // b.any
  465b08:	ldrb	w9, [x8, #3]
  465b0c:	cmp	w9, #0x6
  465b10:	b.ne	465b24 <feof@plt+0x62284>  // b.any
  465b14:	ldrb	w9, [x8, #4]
  465b18:	ldrb	w10, [x12]
  465b1c:	cmp	w9, w10
  465b20:	b.eq	466148 <feof@plt+0x628a8>  // b.none
  465b24:	add	x12, x26, #0x3
  465b28:	stur	wzr, [x29, #-112]
  465b2c:	b	464cd8 <feof@plt+0x61438>
  465b30:	ldur	x8, [x29, #-176]
  465b34:	mov	x23, x25
  465b38:	ldrb	w8, [x8, #56]
  465b3c:	tbz	w8, #5, 464cdc <feof@plt+0x6143c>
  465b40:	b	466044 <feof@plt+0x627a4>
  465b44:	ldur	x8, [x29, #-176]
  465b48:	ldrb	w8, [x8, #56]
  465b4c:	tbz	w8, #6, 464cdc <feof@plt+0x6143c>
  465b50:	b	466140 <feof@plt+0x628a0>
  465b54:	cbnz	w8, 464cd8 <feof@plt+0x61438>
  465b58:	sturh	wzr, [x26, #3]
  465b5c:	ldrb	w11, [x26, #1]
  465b60:	ldrsb	x8, [x26, #2]
  465b64:	add	x10, x26, #0x3
  465b68:	sub	x9, x29, #0xa0
  465b6c:	cmp	x10, x16
  465b70:	stur	x8, [x9, #-256]
  465b74:	stur	x10, [x29, #-16]
  465b78:	b.cs	465c30 <feof@plt+0x62390>  // b.hs, b.nlast
  465b7c:	mov	x8, x10
  465b80:	ldrb	w9, [x8]
  465b84:	cbnz	w9, 465c14 <feof@plt+0x62374>
  465b88:	add	x8, x8, #0x1
  465b8c:	cmp	x16, x8
  465b90:	stur	x8, [x29, #-16]
  465b94:	b.ne	465b80 <feof@plt+0x622e0>  // b.any
  465b98:	b	465c30 <feof@plt+0x62390>
  465b9c:	ldrb	w10, [x25], #1
  465ba0:	ldrb	w12, [x9]
  465ba4:	cmp	w10, w12
  465ba8:	b.ne	466044 <feof@plt+0x627a4>  // b.any
  465bac:	subs	w11, w11, #0x1
  465bb0:	add	x9, x9, #0x1
  465bb4:	b.eq	464ea8 <feof@plt+0x61608>  // b.none
  465bb8:	cmp	x25, x15
  465bbc:	b.ne	465b9c <feof@plt+0x622fc>  // b.any
  465bc0:	cmp	x15, x6
  465bc4:	mov	x15, x6
  465bc8:	mov	x25, x3
  465bcc:	b.ne	465bb8 <feof@plt+0x62318>  // b.any
  465bd0:	b	465f80 <feof@plt+0x626e0>
  465bd4:	ldur	x26, [x29, #-104]
  465bd8:	tbz	w9, #0, 465068 <feof@plt+0x617c8>
  465bdc:	b	46506c <feof@plt+0x617cc>
  465be0:	cmp	w12, #0xa
  465be4:	b.ne	465dbc <feof@plt+0x6251c>  // b.any
  465be8:	ldur	x11, [x29, #-176]
  465bec:	ldrsb	w11, [x11, #56]
  465bf0:	tbz	w11, #31, 465dbc <feof@plt+0x6251c>
  465bf4:	mov	w9, #0xa                   	// #10
  465bf8:	ldrb	w10, [x8, #3]
  465bfc:	cmp	w10, #0x2
  465c00:	b.ne	465d6c <feof@plt+0x624cc>  // b.any
  465c04:	ldrb	w8, [x8, #5]
  465c08:	cmp	w8, w9
  465c0c:	b.ne	465db0 <feof@plt+0x62510>  // b.any
  465c10:	b	465eec <feof@plt+0x6264c>
  465c14:	cmp	w9, #0x6
  465c18:	b.ne	465c30 <feof@plt+0x62390>  // b.any
  465c1c:	ldrb	w9, [x8, #1]
  465c20:	ldrb	w8, [x8, #2]
  465c24:	cmp	x21, #0x101
  465c28:	csel	x21, x9, x21, eq  // eq = none
  465c2c:	add	x5, x8, x9
  465c30:	sub	x8, x29, #0x98
  465c34:	stur	x11, [x8, #-256]
  465c38:	sub	x8, x29, #0x8
  465c3c:	sub	x9, x5, x21
  465c40:	stur	x10, [x8, #-256]
  465c44:	sub	x8, x29, #0x28
  465c48:	add	x9, x9, x9, lsl #1
  465c4c:	stur	x15, [x8, #-256]
  465c50:	sub	w8, w18, w27
  465c54:	add	x26, x9, #0x7
  465c58:	cmp	x26, x8
  465c5c:	b.ls	465cc8 <feof@plt+0x62428>  // b.plast
  465c60:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  465c64:	ldr	w8, [x8, #1032]
  465c68:	mov	w9, #0x13                  	// #19
  465c6c:	mov	x1, x24
  465c70:	mul	w8, w8, w9
  465c74:	stur	w8, [x29, #-232]
  465c78:	mov	w8, w18
  465c7c:	ldur	w9, [x29, #-232]
  465c80:	cmp	w8, w9
  465c84:	b.hi	4663c4 <feof@plt+0x62b24>  // b.pmore
  465c88:	lsl	w23, w8, #1
  465c8c:	sub	x24, sp, w23, uxtw #3
  465c90:	mov	sp, x24
  465c94:	mov	w8, w8
  465c98:	lsl	x2, x8, #3
  465c9c:	mov	x0, x24
  465ca0:	mov	x20, x5
  465ca4:	bl	402fc0 <memcpy@plt>
  465ca8:	ldp	x3, x16, [x29, #-80]
  465cac:	sub	w8, w23, w27
  465cb0:	mov	x5, x20
  465cb4:	mov	w18, w23
  465cb8:	cmp	x26, x8
  465cbc:	mov	w8, w23
  465cc0:	mov	x1, x24
  465cc4:	b.hi	465c7c <feof@plt+0x623dc>  // b.pmore
  465cc8:	sub	x8, x29, #0x98
  465ccc:	ldur	x14, [x8, #-256]
  465cd0:	sub	x8, x29, #0xa0
  465cd4:	ldur	x8, [x8, #-256]
  465cd8:	cmp	x5, x21
  465cdc:	bfi	x14, x8, #8, #56
  465ce0:	mov	x8, x21
  465ce4:	b.cc	465d1c <feof@plt+0x6247c>  // b.lo, b.ul, b.last
  465ce8:	lsl	x9, x8, #3
  465cec:	ldr	x10, [x19, x9]
  465cf0:	add	w11, w27, #0x1
  465cf4:	add	x8, x8, #0x1
  465cf8:	add	w12, w27, #0x2
  465cfc:	str	x10, [x24, w27, uxtw #3]
  465d00:	ldr	x10, [x28, x9]
  465d04:	add	w27, w27, #0x3
  465d08:	cmp	x8, x5
  465d0c:	str	x10, [x24, w11, uxtw #3]
  465d10:	ldr	x9, [x22, x9]
  465d14:	str	x9, [x24, w12, uxtw #3]
  465d18:	b.ls	465ce8 <feof@plt+0x62448>  // b.plast
  465d1c:	sub	x11, x29, #0x8
  465d20:	ldur	x13, [x11, #-256]
  465d24:	add	w8, w27, #0x1
  465d28:	mov	w9, w27
  465d2c:	add	w10, w27, #0x2
  465d30:	add	x11, x13, x14
  465d34:	add	w12, w27, #0x3
  465d38:	lsl	x9, x9, #3
  465d3c:	lsl	x8, x8, #3
  465d40:	add	w27, w27, #0x4
  465d44:	str	w21, [x24, x9]
  465d48:	str	w5, [x24, x8]
  465d4c:	str	x11, [x24, w10, uxtw #3]
  465d50:	str	x25, [x24, w12, uxtw #3]
  465d54:	sub	x8, x29, #0x28
  465d58:	ldur	x30, [x29, #-224]
  465d5c:	ldur	x6, [x29, #-136]
  465d60:	ldur	x15, [x8, #-256]
  465d64:	mov	x12, x13
  465d68:	b	464cd8 <feof@plt+0x61438>
  465d6c:	and	w11, w10, #0xfe
  465d70:	cmp	w11, #0x4
  465d74:	b.ne	465eec <feof@plt+0x6264c>  // b.any
  465d78:	ldrb	w12, [x8, #4]
  465d7c:	cmp	w10, #0x5
  465d80:	cset	w11, eq  // eq = none
  465d84:	cmp	w9, w12, lsl #3
  465d88:	b.cs	465dac <feof@plt+0x6250c>  // b.hs, b.nlast
  465d8c:	lsr	w12, w9, #3
  465d90:	add	x8, x12, x8
  465d94:	ldrb	w8, [x8, #5]
  465d98:	and	w9, w9, #0x7
  465d9c:	lsr	w8, w8, w9
  465da0:	tbz	w8, #0, 465dac <feof@plt+0x6250c>
  465da4:	cmp	w10, #0x5
  465da8:	cset	w11, ne  // ne = any
  465dac:	cbnz	w11, 465eec <feof@plt+0x6264c>
  465db0:	mov	w8, #0x11                  	// #17
  465db4:	strb	w8, [x26]
  465db8:	b	465ef8 <feof@plt+0x62658>
  465dbc:	cmp	w12, #0x4
  465dc0:	b.ne	465eec <feof@plt+0x6264c>  // b.any
  465dc4:	ldrb	w11, [x8, #3]
  465dc8:	cmp	w11, #0x2
  465dcc:	b.eq	465e40 <feof@plt+0x625a0>  // b.none
  465dd0:	cmp	w11, #0x5
  465dd4:	b.eq	465e68 <feof@plt+0x625c8>  // b.none
  465dd8:	cmp	w11, #0x4
  465ddc:	b.ne	465eec <feof@plt+0x6264c>  // b.any
  465de0:	ldrb	w11, [x10, #1]
  465de4:	cbz	w11, 465eb8 <feof@plt+0x62618>
  465de8:	ldrb	w12, [x8, #4]
  465dec:	add	x9, x26, x9
  465df0:	mov	x13, xzr
  465df4:	add	x10, x10, #0x2
  465df8:	add	x9, x9, #0x8
  465dfc:	cmp	x12, x13
  465e00:	b.eq	465ed8 <feof@plt+0x62638>  // b.none
  465e04:	mov	x0, x15
  465e08:	ldrb	w14, [x10, x13]
  465e0c:	ldrb	w15, [x9, x13]
  465e10:	tst	w15, w14
  465e14:	b.ne	465ed0 <feof@plt+0x62630>  // b.any
  465e18:	add	x13, x13, #0x1
  465e1c:	cmp	x13, x11
  465e20:	mov	x15, x0
  465e24:	b.cc	465dfc <feof@plt+0x6255c>  // b.lo, b.ul, b.last
  465e28:	mov	w12, w13
  465e2c:	b	465ed8 <feof@plt+0x62638>
  465e30:	sub	x8, x29, #0x8
  465e34:	ldur	x12, [x8, #-256]
  465e38:	stur	w23, [x29, #-112]
  465e3c:	b	464cd8 <feof@plt+0x61438>
  465e40:	ldrb	w9, [x10, #1]
  465e44:	ldrb	w8, [x8, #5]
  465e48:	cmp	w8, w9, lsl #3
  465e4c:	b.cs	465db0 <feof@plt+0x62510>  // b.hs, b.nlast
  465e50:	add	x9, x10, x8, lsr #3
  465e54:	ldrb	w9, [x9, #2]
  465e58:	and	w8, w8, #0x7
  465e5c:	lsr	w8, w9, w8
  465e60:	tbnz	w8, #0, 465eec <feof@plt+0x6264c>
  465e64:	b	465db0 <feof@plt+0x62510>
  465e68:	ldrb	w11, [x10, #1]
  465e6c:	cbz	w11, 465ec0 <feof@plt+0x62620>
  465e70:	add	x9, x26, x9
  465e74:	mov	x12, xzr
  465e78:	add	x10, x10, #0x2
  465e7c:	add	x9, x9, #0x8
  465e80:	b	465e90 <feof@plt+0x625f0>
  465e84:	add	x12, x12, #0x1
  465e88:	cmp	x12, x11
  465e8c:	b.cs	465ec4 <feof@plt+0x62624>  // b.hs, b.nlast
  465e90:	ldrb	w13, [x10, x12]
  465e94:	cbz	w13, 465e84 <feof@plt+0x625e4>
  465e98:	ldrb	w14, [x8, #4]
  465e9c:	cmp	x12, x14
  465ea0:	b.cs	465ec4 <feof@plt+0x62624>  // b.hs, b.nlast
  465ea4:	ldrb	w14, [x9, x12]
  465ea8:	eor	w14, w14, #0xff
  465eac:	tst	w13, w14
  465eb0:	b.eq	465e84 <feof@plt+0x625e4>  // b.none
  465eb4:	b	465ec4 <feof@plt+0x62624>
  465eb8:	mov	w12, wzr
  465ebc:	b	465ed8 <feof@plt+0x62638>
  465ec0:	mov	w12, wzr
  465ec4:	cmp	w12, w11
  465ec8:	b.eq	465db0 <feof@plt+0x62510>  // b.none
  465ecc:	b	465eec <feof@plt+0x6264c>
  465ed0:	mov	w12, w13
  465ed4:	mov	x15, x0
  465ed8:	cmp	w12, w11
  465edc:	b.eq	465db0 <feof@plt+0x62510>  // b.none
  465ee0:	ldrb	w8, [x8, #4]
  465ee4:	cmp	w12, w8
  465ee8:	b.eq	465db0 <feof@plt+0x62510>  // b.none
  465eec:	ldrb	w8, [x26]
  465ef0:	cmp	w8, #0x11
  465ef4:	b.ne	465f74 <feof@plt+0x626d4>  // b.any
  465ef8:	sub	w8, w27, #0x3
  465efc:	sub	w10, w27, #0x4
  465f00:	lsl	x8, x8, #3
  465f04:	lsl	x9, x10, #3
  465f08:	ldrsw	x8, [x24, x8]
  465f0c:	ldrsw	x9, [x24, x9]
  465f10:	cmp	w8, w9
  465f14:	b.cc	464cbc <feof@plt+0x6141c>  // b.lo, b.ul, b.last
  465f18:	sub	x11, x29, #0x58
  465f1c:	ldur	x14, [x11, #-256]
  465f20:	sub	x11, x29, #0x60
  465f24:	mov	x0, x15
  465f28:	ldur	x15, [x11, #-256]
  465f2c:	sub	w10, w27, #0x7
  465f30:	add	w11, w10, #0x2
  465f34:	ldr	x11, [x24, w11, uxtw #3]
  465f38:	lsl	x12, x8, #3
  465f3c:	add	w13, w10, #0x1
  465f40:	sub	x8, x8, #0x1
  465f44:	str	x11, [x15, x12]
  465f48:	ldr	x11, [x24, w13, uxtw #3]
  465f4c:	cmp	x8, x9
  465f50:	str	x11, [x14, x12]
  465f54:	ldr	x11, [x24, w10, uxtw #3]
  465f58:	sub	w10, w10, #0x3
  465f5c:	str	x11, [x14, x12]
  465f60:	b.cs	465f30 <feof@plt+0x62690>  // b.hs, b.nlast
  465f64:	add	w27, w10, #0x3
  465f68:	mov	x15, x0
  465f6c:	stur	wzr, [x29, #-112]
  465f70:	b	464cc4 <feof@plt+0x61424>
  465f74:	mov	w8, #0xd                   	// #13
  465f78:	strb	w8, [x26]
  465f7c:	b	464cc4 <feof@plt+0x61424>
  465f80:	mov	x15, x6
  465f84:	mov	x25, x6
  465f88:	b	466044 <feof@plt+0x627a4>
  465f8c:	sub	x8, x29, #0x80
  465f90:	sub	x9, x29, #0x78
  465f94:	sub	x10, x29, #0x70
  465f98:	sub	x11, x29, #0x30
  465f9c:	sub	x12, x29, #0x68
  465fa0:	ldur	x8, [x8, #-256]
  465fa4:	ldur	x9, [x9, #-256]
  465fa8:	ldur	x10, [x10, #-256]
  465fac:	ldur	x11, [x11, #-256]
  465fb0:	ldur	x12, [x12, #-256]
  465fb4:	ldp	q0, q1, [x12, #-16]
  465fb8:	add	x12, x12, #0x20
  465fbc:	subs	x11, x11, #0x4
  465fc0:	stp	q0, q1, [x10, #-16]
  465fc4:	ldp	q0, q1, [x8, #-16]
  465fc8:	add	x10, x10, #0x20
  465fcc:	add	x8, x8, #0x20
  465fd0:	stp	q0, q1, [x9, #-16]
  465fd4:	add	x9, x9, #0x20
  465fd8:	b.ne	465fb4 <feof@plt+0x62714>  // b.any
  465fdc:	sub	x9, x29, #0x30
  465fe0:	ldur	x8, [x29, #-96]
  465fe4:	ldur	x9, [x9, #-256]
  465fe8:	cmp	x8, x9
  465fec:	sub	x8, x29, #0x88
  465ff0:	ldur	x9, [x8, #-256]
  465ff4:	b.eq	466034 <feof@plt+0x62794>  // b.none
  465ff8:	sub	x8, x29, #0x50
  465ffc:	ldur	x8, [x8, #-256]
  466000:	lsl	x12, x9, #3
  466004:	add	x10, x28, x12
  466008:	sub	x8, x8, x9
  46600c:	ldp	x9, x11, [x29, #-128]
  466010:	add	x9, x9, x12
  466014:	add	x11, x11, x12
  466018:	add	x12, x19, x12
  46601c:	ldr	x13, [x12], #8
  466020:	subs	x8, x8, #0x1
  466024:	str	x13, [x11], #8
  466028:	ldr	x13, [x10], #8
  46602c:	str	x13, [x9], #8
  466030:	b.ne	46601c <feof@plt+0x6277c>  // b.any
  466034:	mov	w8, #0x1                   	// #1
  466038:	stur	w8, [x29, #-140]
  46603c:	stur	x23, [x29, #-152]
  466040:	mov	x25, x23
  466044:	mov	x23, x25
  466048:	cbz	w27, 466334 <feof@plt+0x62a94>
  46604c:	mov	x25, x23
  466050:	mov	w13, #0x231                 	// #561
  466054:	mov	w14, #0x3ce                 	// #974
  466058:	b	466068 <feof@plt+0x627c8>
  46605c:	cmp	w9, #0x15
  466060:	b.ne	464be0 <feof@plt+0x61340>  // b.any
  466064:	cbz	w27, 466334 <feof@plt+0x62a94>
  466068:	sub	w9, w27, #0x1
  46606c:	sub	w11, w27, #0x3
  466070:	sub	w8, w27, #0x4
  466074:	ldr	x9, [x24, w9, uxtw #3]
  466078:	lsl	x11, x11, #3
  46607c:	lsl	x12, x8, #3
  466080:	sub	w10, w27, #0x2
  466084:	ldrsw	x5, [x24, x11]
  466088:	ldrsw	x21, [x24, x12]
  46608c:	ldr	x26, [x24, w10, uxtw #3]
  466090:	cmp	x9, #0x0
  466094:	csel	x25, x25, x9, eq  // eq = none
  466098:	cmp	w5, w21
  46609c:	b.cc	4660e0 <feof@plt+0x62840>  // b.lo, b.ul, b.last
  4660a0:	sub	w8, w27, #0x7
  4660a4:	mov	x9, x5
  4660a8:	add	w10, w8, #0x2
  4660ac:	ldr	x10, [x24, w10, uxtw #3]
  4660b0:	lsl	x11, x9, #3
  4660b4:	add	w12, w8, #0x1
  4660b8:	sub	x9, x9, #0x1
  4660bc:	str	x10, [x22, x11]
  4660c0:	ldr	x10, [x24, w12, uxtw #3]
  4660c4:	cmp	x9, x21
  4660c8:	str	x10, [x28, x11]
  4660cc:	ldr	x10, [x24, w8, uxtw #3]
  4660d0:	sub	w8, w8, #0x3
  4660d4:	str	x10, [x19, x11]
  4660d8:	b.cs	4660a8 <feof@plt+0x62808>  // b.hs, b.nlast
  4660dc:	add	w8, w8, #0x3
  4660e0:	mov	w27, w8
  4660e4:	cbz	x26, 466064 <feof@plt+0x627c4>
  4660e8:	cmp	x26, x16
  4660ec:	b.cs	464be0 <feof@plt+0x61340>  // b.hs, b.nlast
  4660f0:	ldrb	w8, [x26]
  4660f4:	sub	w8, w8, #0xd
  4660f8:	cmp	w8, #0x9
  4660fc:	b.hi	464be0 <feof@plt+0x61340>  // b.pmore
  466100:	lsr	w9, w13, w8
  466104:	tbz	w9, #0, 464be0 <feof@plt+0x61340>
  466108:	ldrb	w9, [x26, #1]
  46610c:	ldrsb	x10, [x26, #2]
  466110:	lsr	w8, w14, w8
  466114:	bfi	x9, x10, #8, #56
  466118:	add	x9, x26, x9
  46611c:	add	x10, x9, #0x3
  466120:	stur	x10, [x29, #-16]
  466124:	ldrb	w9, [x9, #3]
  466128:	tbnz	w8, #0, 46605c <feof@plt+0x627bc>
  46612c:	cmp	w9, #0xf
  466130:	b.eq	466064 <feof@plt+0x627c4>  // b.none
  466134:	b	464be0 <feof@plt+0x61340>
  466138:	mov	x25, x8
  46613c:	b	466044 <feof@plt+0x627a4>
  466140:	ldur	x25, [x29, #-200]
  466144:	b	466044 <feof@plt+0x627a4>
  466148:	add	x9, x22, x9, lsl #3
  46614c:	ldrb	w10, [x9]
  466150:	mov	x20, x15
  466154:	add	x11, x8, #0x3
  466158:	sub	x13, x29, #0x28
  46615c:	stur	x5, [x29, #-112]
  466160:	stur	x11, [x13, #-256]
  466164:	tbz	w10, #4, 4661c8 <feof@plt+0x62928>
  466168:	and	w10, w10, #0xffffffef
  46616c:	strb	w10, [x9]
  466170:	ldrb	w9, [x26, #2]
  466174:	cbz	w9, 4661c8 <feof@plt+0x62928>
  466178:	ldrb	w9, [x12]
  46617c:	b	466198 <feof@plt+0x628f8>
  466180:	ldrb	w10, [x26, #1]
  466184:	ldrb	w11, [x26, #2]
  466188:	add	x9, x9, #0x1
  46618c:	add	x10, x11, x10
  466190:	cmp	x9, x10
  466194:	b.cs	4661c8 <feof@plt+0x62928>  // b.hs, b.nlast
  466198:	sub	x11, x29, #0x40
  46619c:	ldur	x11, [x11, #-256]
  4661a0:	lsl	x10, x9, #3
  4661a4:	sub	x12, x29, #0x48
  4661a8:	ldur	x12, [x12, #-256]
  4661ac:	ldr	x11, [x11, x10]
  4661b0:	str	x11, [x19, x10]
  4661b4:	ldr	x10, [x12, x10]
  4661b8:	cmp	x10, x11
  4661bc:	b.cc	466180 <feof@plt+0x628e0>  // b.lo, b.ul, b.last
  4661c0:	str	x10, [x28, x9, lsl #3]
  4661c4:	b	466180 <feof@plt+0x628e0>
  4661c8:	add	x9, x8, #0x1
  4661cc:	stur	x9, [x29, #-16]
  4661d0:	ldur	x11, [x29, #-112]
  4661d4:	ldrb	w9, [x8, #1]
  4661d8:	ldrsb	x8, [x8, #2]
  4661dc:	sub	x12, x29, #0x8
  4661e0:	sub	x11, x11, x21
  4661e4:	stur	x9, [x12, #-256]
  4661e8:	sub	x9, x29, #0x98
  4661ec:	stur	x8, [x9, #-256]
  4661f0:	add	x8, x11, x11, lsl #1
  4661f4:	add	x23, x8, #0x7
  4661f8:	sub	x8, x29, #0x28
  4661fc:	ldur	x8, [x8, #-256]
  466200:	sub	w10, w18, w27
  466204:	cmp	x23, x10
  466208:	stur	x8, [x29, #-16]
  46620c:	b.ls	46626c <feof@plt+0x629cc>  // b.plast
  466210:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  466214:	ldr	w8, [x8, #1032]
  466218:	mov	w9, #0x13                  	// #19
  46621c:	mov	x1, x24
  466220:	mul	w8, w8, w9
  466224:	stur	w8, [x29, #-232]
  466228:	mov	w8, w18
  46622c:	ldur	w9, [x29, #-232]
  466230:	cmp	w8, w9
  466234:	b.hi	4663c4 <feof@plt+0x62b24>  // b.pmore
  466238:	lsl	w26, w8, #1
  46623c:	sub	x24, sp, w26, uxtw #3
  466240:	mov	sp, x24
  466244:	mov	w8, w8
  466248:	lsl	x2, x8, #3
  46624c:	mov	x0, x24
  466250:	bl	402fc0 <memcpy@plt>
  466254:	sub	w8, w26, w27
  466258:	cmp	x23, x8
  46625c:	mov	w8, w26
  466260:	mov	x1, x24
  466264:	b.hi	46622c <feof@plt+0x6298c>  // b.pmore
  466268:	b	466270 <feof@plt+0x629d0>
  46626c:	mov	w26, w18
  466270:	sub	x9, x29, #0x8
  466274:	sub	x10, x29, #0x98
  466278:	ldur	x8, [x29, #-112]
  46627c:	ldur	x9, [x9, #-256]
  466280:	ldur	x10, [x10, #-256]
  466284:	subs	x8, x8, x21
  466288:	bfi	x9, x10, #8, #56
  46628c:	sub	x10, x29, #0x8
  466290:	stur	x9, [x10, #-256]
  466294:	b.cc	4662d8 <feof@plt+0x62a38>  // b.lo, b.ul, b.last
  466298:	lsl	x11, x21, #3
  46629c:	add	x8, x8, #0x1
  4662a0:	add	x9, x28, x11
  4662a4:	add	x10, x19, x11
  4662a8:	add	x11, x22, x11
  4662ac:	ldr	x12, [x10], #8
  4662b0:	add	w13, w27, #0x1
  4662b4:	subs	x8, x8, #0x1
  4662b8:	str	x12, [x24, w27, uxtw #3]
  4662bc:	ldr	x12, [x9], #8
  4662c0:	str	x12, [x24, w13, uxtw #3]
  4662c4:	ldr	x12, [x11], #8
  4662c8:	add	w13, w27, #0x2
  4662cc:	add	w27, w27, #0x3
  4662d0:	str	x12, [x24, w13, uxtw #3]
  4662d4:	b.ne	4662ac <feof@plt+0x62a0c>  // b.any
  4662d8:	mov	w9, w27
  4662dc:	sub	x11, x29, #0x28
  4662e0:	sub	x12, x29, #0x8
  4662e4:	ldur	x11, [x11, #-256]
  4662e8:	ldur	x12, [x12, #-256]
  4662ec:	lsl	x9, x9, #3
  4662f0:	str	w21, [x24, x9]
  4662f4:	ldur	x9, [x29, #-112]
  4662f8:	ldur	x30, [x29, #-224]
  4662fc:	ldp	x3, x16, [x29, #-80]
  466300:	ldur	x6, [x29, #-136]
  466304:	add	w8, w27, #0x1
  466308:	add	w10, w27, #0x2
  46630c:	add	x11, x11, x12
  466310:	add	w12, w27, #0x3
  466314:	add	w27, w27, #0x4
  466318:	lsl	x8, x8, #3
  46631c:	mov	w18, w26
  466320:	mov	x15, x20
  466324:	str	w9, [x24, x8]
  466328:	str	x11, [x24, w10, uxtw #3]
  46632c:	str	x25, [x24, w12, uxtw #3]
  466330:	b	466044 <feof@plt+0x627a4>
  466334:	ldur	x24, [x29, #-248]
  466338:	ldur	x25, [x29, #-192]
  46633c:	ldur	x26, [x29, #-176]
  466340:	ldur	w8, [x29, #-140]
  466344:	cbz	w8, 4663bc <feof@plt+0x62b1c>
  466348:	ldur	x8, [x29, #-88]
  46634c:	ldur	x23, [x29, #-152]
  466350:	cmp	x23, x8
  466354:	ldur	x8, [x29, #-104]
  466358:	ccmp	x23, x30, #0x0, ls  // ls = plast
  46635c:	csel	x15, x6, x8, cc  // cc = lo, ul, last
  466360:	cmp	x25, #0x2
  466364:	b.cc	4663dc <feof@plt+0x62b3c>  // b.lo, b.ul, b.last
  466368:	ldur	x8, [x29, #-96]
  46636c:	cmp	x8, #0x4
  466370:	b.cs	466464 <feof@plt+0x62bc4>  // b.hs, b.nlast
  466374:	mov	w8, #0x1                   	// #1
  466378:	ldur	x9, [x29, #-96]
  46637c:	ldp	x10, x13, [x29, #-128]
  466380:	lsl	x12, x8, #3
  466384:	add	x11, x19, x12
  466388:	sub	x9, x9, x8
  46638c:	add	x8, x9, #0x1
  466390:	add	x9, x28, x12
  466394:	add	x10, x10, x12
  466398:	add	x12, x13, x12
  46639c:	ldr	x13, [x12], #8
  4663a0:	subs	x8, x8, #0x1
  4663a4:	str	x13, [x11], #8
  4663a8:	ldr	x13, [x10], #8
  4663ac:	str	x13, [x9], #8
  4663b0:	b.ne	46639c <feof@plt+0x62afc>  // b.any
  4663b4:	ldur	x23, [x29, #-152]
  4663b8:	b	4663dc <feof@plt+0x62b3c>
  4663bc:	mov	w0, #0xffffffff            	// #-1
  4663c0:	b	46676c <feof@plt+0x62ecc>
  4663c4:	mov	w0, #0xfffffffe            	// #-2
  4663c8:	b	46676c <feof@plt+0x62ecc>
  4663cc:	mov	x23, x25
  4663d0:	ldur	x24, [x29, #-248]
  4663d4:	ldur	x25, [x29, #-192]
  4663d8:	ldur	x26, [x29, #-176]
  4663dc:	cbz	x24, 466744 <feof@plt+0x62ea4>
  4663e0:	ldrb	w8, [x26, #56]
  4663e4:	tbnz	w8, #4, 466744 <feof@plt+0x62ea4>
  4663e8:	ubfx	w8, w8, #1, #2
  4663ec:	cmp	w8, #0x1
  4663f0:	mov	x20, x15
  4663f4:	b.eq	46657c <feof@plt+0x62cdc>  // b.none
  4663f8:	cbnz	w8, 4665dc <feof@plt+0x62d3c>
  4663fc:	ldur	x8, [x29, #-96]
  466400:	mov	w9, #0x1e                  	// #30
  466404:	add	x8, x8, #0x2
  466408:	cmp	x8, #0x1e
  46640c:	csel	x8, x8, x9, hi  // hi = pmore
  466410:	ubfiz	x21, x8, #2, #32
  466414:	mov	x0, x21
  466418:	str	w8, [x24]
  46641c:	bl	4036b0 <malloc@plt>
  466420:	mov	x22, x0
  466424:	str	x0, [x24, #8]
  466428:	mov	x0, x21
  46642c:	bl	4036b0 <malloc@plt>
  466430:	mov	x8, x0
  466434:	str	x0, [x24, #16]
  466438:	mov	w0, #0xfffffffe            	// #-2
  46643c:	cbz	x8, 46676c <feof@plt+0x62ecc>
  466440:	ldur	x30, [x29, #-224]
  466444:	ldur	x3, [x29, #-80]
  466448:	cbz	x22, 46676c <feof@plt+0x62ecc>
  46644c:	ldrb	w8, [x26, #56]
  466450:	mov	x15, x20
  466454:	and	w8, w8, #0xfffffffb
  466458:	orr	w8, w8, #0x2
  46645c:	strb	w8, [x26, #56]
  466460:	b	4665dc <feof@plt+0x62d3c>
  466464:	sub	x9, x29, #0x90
  466468:	ldur	x10, [x9, #-256]
  46646c:	ldur	x9, [x29, #-120]
  466470:	mov	x2, x15
  466474:	add	x8, x19, #0x8
  466478:	add	x16, x28, x10
  46647c:	add	x15, x9, #0x8
  466480:	add	x17, x9, x10
  466484:	ldur	x9, [x29, #-128]
  466488:	add	x12, x19, x10
  46648c:	add	x14, x28, #0x8
  466490:	cmp	x8, x16
  466494:	add	x18, x9, #0x8
  466498:	add	x0, x9, x10
  46649c:	cset	w9, cc  // cc = lo, ul, last
  4664a0:	cmp	x14, x12
  4664a4:	cset	w10, cc  // cc = lo, ul, last
  4664a8:	cmp	x8, x17
  4664ac:	and	w1, w9, w10
  4664b0:	cset	w9, cc  // cc = lo, ul, last
  4664b4:	cmp	x15, x12
  4664b8:	cset	w11, cc  // cc = lo, ul, last
  4664bc:	cmp	x8, x0
  4664c0:	cset	w10, cc  // cc = lo, ul, last
  4664c4:	cmp	x18, x12
  4664c8:	cset	w13, cc  // cc = lo, ul, last
  4664cc:	cmp	x14, x17
  4664d0:	cset	w12, cc  // cc = lo, ul, last
  4664d4:	cmp	x15, x16
  4664d8:	cset	w15, cc  // cc = lo, ul, last
  4664dc:	cmp	x14, x0
  4664e0:	cset	w14, cc  // cc = lo, ul, last
  4664e4:	cmp	x18, x16
  4664e8:	cset	w16, cc  // cc = lo, ul, last
  4664ec:	mov	w8, #0x1                   	// #1
  4664f0:	tbnz	w1, #0, 4667a8 <feof@plt+0x62f08>
  4664f4:	and	w9, w9, w11
  4664f8:	tbnz	w9, #0, 4667a8 <feof@plt+0x62f08>
  4664fc:	ldur	x30, [x29, #-224]
  466500:	and	w9, w10, w13
  466504:	tbnz	w9, #0, 4667ac <feof@plt+0x62f0c>
  466508:	and	w9, w12, w15
  46650c:	tbnz	w9, #0, 4667ac <feof@plt+0x62f0c>
  466510:	and	w9, w14, w16
  466514:	mov	x15, x2
  466518:	tbnz	w9, #0, 466378 <feof@plt+0x62ad8>
  46651c:	ldur	x8, [x29, #-96]
  466520:	add	x11, x19, #0x18
  466524:	add	x13, x28, #0x18
  466528:	and	x9, x8, #0xfffffffffffffffc
  46652c:	ldur	x8, [x29, #-120]
  466530:	mov	x14, x9
  466534:	add	x10, x8, #0x18
  466538:	ldur	x8, [x29, #-128]
  46653c:	add	x12, x8, #0x18
  466540:	orr	x8, x9, #0x1
  466544:	ldp	q0, q1, [x10, #-16]
  466548:	add	x10, x10, #0x20
  46654c:	subs	x14, x14, #0x4
  466550:	stp	q0, q1, [x11, #-16]
  466554:	ldp	q0, q1, [x12, #-16]
  466558:	add	x11, x11, #0x20
  46655c:	add	x12, x12, #0x20
  466560:	stp	q0, q1, [x13, #-16]
  466564:	add	x13, x13, #0x20
  466568:	b.ne	466544 <feof@plt+0x62ca4>  // b.any
  46656c:	ldur	x10, [x29, #-96]
  466570:	cmp	x10, x9
  466574:	b.ne	466378 <feof@plt+0x62ad8>  // b.any
  466578:	b	4663b4 <feof@plt+0x62b14>
  46657c:	ldur	x8, [x29, #-96]
  466580:	ldr	w9, [x24]
  466584:	add	x8, x8, #0x2
  466588:	cmp	x8, x9
  46658c:	b.ls	4665dc <feof@plt+0x62d3c>  // b.plast
  466590:	ldr	x0, [x24, #8]
  466594:	ubfiz	x1, x8, #2, #32
  466598:	str	w8, [x24]
  46659c:	bl	403260 <realloc@plt>
  4665a0:	ldr	w9, [x24]
  4665a4:	ldr	x8, [x24, #16]
  4665a8:	str	x0, [x24, #8]
  4665ac:	lsl	x1, x9, #2
  4665b0:	mov	x0, x8
  4665b4:	bl	403260 <realloc@plt>
  4665b8:	mov	x8, x0
  4665bc:	str	x0, [x24, #16]
  4665c0:	mov	w0, #0xfffffffe            	// #-2
  4665c4:	cbz	x8, 46676c <feof@plt+0x62ecc>
  4665c8:	ldr	x8, [x24, #8]
  4665cc:	ldur	x30, [x29, #-224]
  4665d0:	ldur	x3, [x29, #-80]
  4665d4:	mov	x15, x20
  4665d8:	cbz	x8, 46676c <feof@plt+0x62ecc>
  4665dc:	ldr	w8, [x24]
  4665e0:	cbz	w8, 46661c <feof@plt+0x62d7c>
  4665e4:	ldr	x8, [x24, #8]
  4665e8:	ldur	x10, [x29, #-168]
  4665ec:	ldur	x0, [x29, #-184]
  4665f0:	ldur	x11, [x29, #-104]
  4665f4:	sub	w9, w23, w30
  4665f8:	str	w10, [x8]
  4665fc:	ldr	x10, [x24, #16]
  466600:	sub	w8, w23, w3
  466604:	add	w8, w0, w8
  466608:	cmp	x15, x11
  46660c:	csel	w8, w9, w8, eq  // eq = none
  466610:	str	w8, [x10]
  466614:	ldr	w13, [x24]
  466618:	b	466624 <feof@plt+0x62d84>
  46661c:	ldur	x0, [x29, #-184]
  466620:	mov	w13, wzr
  466624:	ldur	x2, [x29, #-88]
  466628:	mov	w8, w13
  46662c:	cmp	x25, x8
  466630:	csel	x8, x25, x8, cc  // cc = lo, ul, last
  466634:	cmp	x8, #0x2
  466638:	b.cc	466708 <feof@plt+0x62e68>  // b.lo, b.ul, b.last
  46663c:	cmp	w0, #0x0
  466640:	adrp	x12, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  466644:	add	x8, x24, #0x8
  466648:	add	x9, x24, #0x10
  46664c:	mov	w10, #0x1                   	// #1
  466650:	cset	w11, eq  // eq = none
  466654:	add	x12, x12, #0x410
  466658:	b	46668c <feof@plt+0x62dec>
  46665c:	ldr	x14, [x9]
  466660:	mov	w13, #0xffffffff            	// #-1
  466664:	str	w13, [x14, x10, lsl #2]
  466668:	mov	x14, x8
  46666c:	ldr	x14, [x14]
  466670:	str	w13, [x14, x10, lsl #2]
  466674:	ldr	w13, [x24]
  466678:	add	x10, x10, #0x1
  46667c:	cmp	x25, x13
  466680:	csel	x14, x25, x13, cc  // cc = lo, ul, last
  466684:	cmp	x14, x10
  466688:	b.ls	466708 <feof@plt+0x62e68>  // b.plast
  46668c:	ldr	x14, [x19, x10, lsl #3]
  466690:	cmp	x14, x12
  466694:	b.eq	46665c <feof@plt+0x62dbc>  // b.none
  466698:	ldr	x13, [x28, x10, lsl #3]
  46669c:	cmp	x13, x12
  4666a0:	b.eq	46665c <feof@plt+0x62dbc>  // b.none
  4666a4:	cmp	x30, x14
  4666a8:	cset	w18, hi  // hi = pmore
  4666ac:	cmp	x14, x2
  4666b0:	sub	w15, w14, w30
  4666b4:	sub	w16, w14, w3
  4666b8:	ldr	x17, [x8]
  4666bc:	orr	w14, w18, w11
  4666c0:	cset	w18, hi  // hi = pmore
  4666c4:	orr	w14, w18, w14
  4666c8:	add	w16, w0, w16
  4666cc:	cmp	w14, #0x0
  4666d0:	csel	w14, w16, w15, ne  // ne = any
  4666d4:	str	w14, [x17, x10, lsl #2]
  4666d8:	cbz	w0, 4666f4 <feof@plt+0x62e54>
  4666dc:	cmp	x30, x13
  4666e0:	b.hi	4666f4 <feof@plt+0x62e54>  // b.pmore
  4666e4:	cmp	x13, x2
  4666e8:	b.hi	4666f4 <feof@plt+0x62e54>  // b.pmore
  4666ec:	sub	w13, w13, w30
  4666f0:	b	4666fc <feof@plt+0x62e5c>
  4666f4:	sub	w13, w13, w3
  4666f8:	add	w13, w0, w13
  4666fc:	mov	x14, x9
  466700:	mov	x15, x20
  466704:	b	46666c <feof@plt+0x62dcc>
  466708:	cmp	w13, w25
  46670c:	b.ls	466744 <feof@plt+0x62ea4>  // b.plast
  466710:	ldur	x8, [x29, #-96]
  466714:	ldp	x10, x9, [x24, #8]
  466718:	add	w8, w8, #0x1
  46671c:	sbfiz	x11, x8, #2, #32
  466720:	add	x9, x9, x11
  466724:	add	x10, x10, x11
  466728:	mov	w11, #0xffffffff            	// #-1
  46672c:	str	w11, [x9], #4
  466730:	str	w11, [x10], #4
  466734:	ldr	w12, [x24]
  466738:	add	w8, w8, #0x1
  46673c:	cmp	w12, w8
  466740:	b.hi	46672c <feof@plt+0x62e8c>  // b.pmore
  466744:	sub	x9, x29, #0x18
  466748:	sub	x8, x29, #0x10
  46674c:	ldur	x9, [x9, #-256]
  466750:	ldur	x10, [x29, #-104]
  466754:	ldur	x8, [x8, #-256]
  466758:	add	w9, w3, w9
  46675c:	cmp	x15, x10
  466760:	sub	w8, w23, w8
  466764:	csel	w9, w30, w9, eq  // eq = none
  466768:	sub	w0, w8, w9
  46676c:	mov	sp, x29
  466770:	ldp	x20, x19, [sp, #80]
  466774:	ldp	x22, x21, [sp, #64]
  466778:	ldp	x24, x23, [sp, #48]
  46677c:	ldp	x26, x25, [sp, #32]
  466780:	ldp	x28, x27, [sp, #16]
  466784:	ldp	x29, x30, [sp], #96
  466788:	ret
  46678c:	mov	x23, x6
  466790:	b	4663d0 <feof@plt+0x62b30>
  466794:	ldur	x24, [x29, #-248]
  466798:	ldur	x25, [x29, #-192]
  46679c:	ldur	x26, [x29, #-176]
  4667a0:	tbz	w8, #0, 466348 <feof@plt+0x62aa8>
  4667a4:	b	4663dc <feof@plt+0x62b3c>
  4667a8:	ldur	x30, [x29, #-224]
  4667ac:	mov	x15, x2
  4667b0:	b	466378 <feof@plt+0x62ad8>
  4667b4:	bl	4036f0 <abort@plt>
  4667b8:	b	464850 <feof@plt+0x60fb0>
  4667bc:	stp	x29, x30, [sp, #-16]!
  4667c0:	ldrb	w8, [x2, #56]
  4667c4:	mov	w9, #0x69                  	// #105
  4667c8:	mov	x3, x2
  4667cc:	mov	x29, sp
  4667d0:	and	w8, w8, w9
  4667d4:	orr	w8, w8, #0x80
  4667d8:	strb	w8, [x2, #56]
  4667dc:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4667e0:	ldr	x2, [x8, #1112]
  4667e4:	bl	46680c <feof@plt+0x62f6c>
  4667e8:	cbz	w0, 466800 <feof@plt+0x62f60>
  4667ec:	adrp	x8, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  4667f0:	add	x8, x8, #0x3f0
  4667f4:	ldr	x0, [x8, w0, sxtw #3]
  4667f8:	ldp	x29, x30, [sp], #16
  4667fc:	ret
  466800:	mov	x0, xzr
  466804:	ldp	x29, x30, [sp], #16
  466808:	ret
  46680c:	sub	sp, sp, #0x1c0
  466810:	stp	x29, x30, [sp, #352]
  466814:	stp	x28, x27, [sp, #368]
  466818:	stp	x26, x25, [sp, #384]
  46681c:	stp	x24, x23, [sp, #400]
  466820:	stp	x22, x21, [sp, #416]
  466824:	stp	x20, x19, [sp, #432]
  466828:	ldr	x8, [x3, #40]
  46682c:	add	x29, sp, #0x160
  466830:	mov	x27, x0
  466834:	mov	w0, #0x500                 	// #1280
  466838:	mov	x20, x3
  46683c:	mov	x26, x2
  466840:	mov	x24, x1
  466844:	stur	x8, [x29, #-152]
  466848:	bl	4036b0 <malloc@plt>
  46684c:	cbz	x0, 469108 <feof@plt+0x65868>
  466850:	ldrb	w8, [x20, #56]
  466854:	mov	w9, #0x97                  	// #151
  466858:	stp	xzr, x26, [x20, #16]
  46685c:	str	xzr, [x20, #48]
  466860:	and	w8, w8, w9
  466864:	strb	w8, [x20, #56]
  466868:	adrp	x19, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  46686c:	ldrb	w8, [x19, #1044]
  466870:	mov	x22, x0
  466874:	tbnz	w8, #0, 4668e4 <feof@plt+0x63044>
  466878:	adrp	x21, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  46687c:	add	x21, x21, #0x310
  466880:	movi	v0.2d, #0x0
  466884:	stp	q0, q0, [x21, #224]
  466888:	stp	q0, q0, [x21, #192]
  46688c:	stp	q0, q0, [x21, #160]
  466890:	stp	q0, q0, [x21, #128]
  466894:	stp	q0, q0, [x21, #96]
  466898:	stp	q0, q0, [x21, #64]
  46689c:	stp	q0, q0, [x21, #32]
  4668a0:	stp	q0, q0, [x21]
  4668a4:	bl	403500 <__ctype_b_loc@plt>
  4668a8:	mov	x8, xzr
  4668ac:	mov	w9, #0x1                   	// #1
  4668b0:	b	4668c0 <feof@plt+0x63020>
  4668b4:	add	x8, x8, #0x1
  4668b8:	cmp	x8, #0x100
  4668bc:	b.eq	4668d4 <feof@plt+0x63034>  // b.none
  4668c0:	ldr	x10, [x0]
  4668c4:	ldrh	w10, [x10, x8, lsl #1]
  4668c8:	tbz	w10, #3, 4668b4 <feof@plt+0x63014>
  4668cc:	strb	w9, [x21, x8]
  4668d0:	b	4668b4 <feof@plt+0x63014>
  4668d4:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4668d8:	mov	w9, #0x1                   	// #1
  4668dc:	strb	w9, [x8, #879]
  4668e0:	strb	w9, [x19, #1044]
  4668e4:	mov	x25, x20
  4668e8:	ldr	x8, [x25, #8]!
  4668ec:	ldr	x23, [x20]
  4668f0:	cbz	x8, 4668fc <feof@plt+0x6305c>
  4668f4:	cbnz	x24, 466930 <feof@plt+0x63090>
  4668f8:	b	469078 <feof@plt+0x657d8>
  4668fc:	cbz	x23, 466910 <feof@plt+0x63070>
  466900:	mov	w1, #0x20                  	// #32
  466904:	mov	x0, x23
  466908:	bl	403260 <realloc@plt>
  46690c:	b	466918 <feof@plt+0x63078>
  466910:	mov	w0, #0x20                  	// #32
  466914:	bl	4036b0 <malloc@plt>
  466918:	mov	x23, x0
  46691c:	str	x0, [x20]
  466920:	cbz	x0, 469024 <feof@plt+0x65784>
  466924:	mov	w8, #0x20                  	// #32
  466928:	str	x8, [x25]
  46692c:	cbz	x24, 469078 <feof@plt+0x657d8>
  466930:	mov	w8, #0x8400                	// #33792
  466934:	mov	w9, #0x200020              	// #2097184
  466938:	and	x8, x26, x8
  46693c:	mov	w10, #0x402                 	// #1026
  466940:	str	x8, [sp, #96]
  466944:	and	x8, x26, x9
  466948:	mov	x11, x27
  46694c:	mov	w12, #0x1200                	// #4608
  466950:	str	x8, [sp, #88]
  466954:	and	x8, x26, x10
  466958:	add	x21, x11, x24
  46695c:	str	x8, [sp, #152]
  466960:	and	x8, x26, x12
  466964:	stp	x8, x11, [sp, #128]
  466968:	sub	x8, x21, #0x1
  46696c:	ldur	x24, [x29, #-152]
  466970:	str	x8, [sp, #168]
  466974:	sub	x8, x21, #0x2
  466978:	lsr	x13, x26, #15
  46697c:	str	x8, [sp, #104]
  466980:	mov	w8, #0x20                  	// #32
  466984:	str	x22, [sp, #176]
  466988:	mov	x27, xzr
  46698c:	mov	x28, xzr
  466990:	mov	x22, xzr
  466994:	str	x13, [sp, #112]
  466998:	lsr	x13, x26, #13
  46699c:	stur	x26, [x29, #-160]
  4669a0:	str	x8, [sp, #160]
  4669a4:	mov	x19, x23
  4669a8:	mov	x26, x11
  4669ac:	mov	x8, x11
  4669b0:	str	wzr, [sp, #148]
  4669b4:	str	x13, [sp, #120]
  4669b8:	stur	x21, [x29, #-168]
  4669bc:	ldrb	w21, [x8], #1
  4669c0:	stur	x8, [x29, #-144]
  4669c4:	cbz	x24, 4669cc <feof@plt+0x6312c>
  4669c8:	ldrb	w21, [x24, x21]
  4669cc:	sub	w8, w21, #0xa
  4669d0:	cmp	w8, #0x72
  4669d4:	b.hi	468a24 <feof@plt+0x65184>  // b.pmore
  4669d8:	adrp	x11, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  4669dc:	add	x11, x11, #0x240
  4669e0:	adr	x9, 4669f0 <feof@plt+0x63150>
  4669e4:	ldrh	w10, [x11, x8, lsl #1]
  4669e8:	add	x9, x9, x10, lsl #2
  4669ec:	br	x9
  4669f0:	ldr	x8, [sp, #152]
  4669f4:	cbnz	x8, 468a24 <feof@plt+0x65184>
  4669f8:	cbnz	x28, 466a10 <feof@plt+0x63170>
  4669fc:	ldur	x8, [x29, #-160]
  466a00:	tbnz	w8, #5, 469154 <feof@plt+0x658b4>
  466a04:	tbnz	w8, #4, 466a10 <feof@plt+0x63170>
  466a08:	mov	x28, xzr
  466a0c:	b	468a24 <feof@plt+0x65184>
  466a10:	cmp	w21, #0x2b
  466a14:	cset	w26, ne  // ne = any
  466a18:	cmp	w21, #0x3f
  466a1c:	ldur	x21, [x29, #-168]
  466a20:	ldur	x9, [x29, #-144]
  466a24:	cset	w8, ne  // ne = any
  466a28:	cmp	x9, x21
  466a2c:	b.ne	466a90 <feof@plt+0x631f0>  // b.any
  466a30:	stur	x21, [x29, #-144]
  466a34:	cbz	x28, 468ab4 <feof@plt+0x65214>
  466a38:	cbz	w8, 4670d4 <feof@plt+0x63834>
  466a3c:	ldp	x24, x8, [x20]
  466a40:	sub	x9, x23, x24
  466a44:	add	x9, x9, #0x3
  466a48:	cmp	x9, x8
  466a4c:	b.hi	466b10 <feof@plt+0x63270>  // b.pmore
  466a50:	ldp	x10, x8, [x29, #-152]
  466a54:	ldurb	w8, [x8, #-2]
  466a58:	cbz	x10, 467fcc <feof@plt+0x6472c>
  466a5c:	ldrb	w8, [x10, x8]
  466a60:	ldrb	w9, [x10, #46]
  466a64:	b	467fd0 <feof@plt+0x64730>
  466a68:	mov	w10, #0x2a                  	// #42
  466a6c:	cmp	w10, #0x2b
  466a70:	cset	w11, ne  // ne = any
  466a74:	cmp	w10, #0x3f
  466a78:	cset	w10, ne  // ne = any
  466a7c:	orr	w26, w26, w11
  466a80:	cmp	x9, x21
  466a84:	orr	w8, w8, w10
  466a88:	stur	x9, [x29, #-144]
  466a8c:	b.eq	466a30 <feof@plt+0x63190>  // b.none
  466a90:	ldrb	w10, [x9], #1
  466a94:	cbz	x24, 466a9c <feof@plt+0x631fc>
  466a98:	ldrb	w10, [x24, x10]
  466a9c:	cmp	w10, #0x2a
  466aa0:	b.eq	466a68 <feof@plt+0x631c8>  // b.none
  466aa4:	ldur	x11, [x29, #-160]
  466aa8:	tbnz	w11, #1, 466ac0 <feof@plt+0x63220>
  466aac:	cmp	w10, #0x2b
  466ab0:	b.eq	466a6c <feof@plt+0x631cc>  // b.none
  466ab4:	cmp	w10, #0x3f
  466ab8:	b.eq	466a6c <feof@plt+0x631cc>  // b.none
  466abc:	b	466a34 <feof@plt+0x63194>
  466ac0:	cmp	w10, #0x5c
  466ac4:	b.ne	466a34 <feof@plt+0x63194>  // b.any
  466ac8:	cmp	x9, x21
  466acc:	b.eq	469034 <feof@plt+0x65794>  // b.none
  466ad0:	ldur	x9, [x29, #-144]
  466ad4:	ldrb	w10, [x9, #1]
  466ad8:	add	x9, x9, #0x2
  466adc:	cbz	x24, 466ae4 <feof@plt+0x63244>
  466ae0:	ldrb	w10, [x24, x10]
  466ae4:	cmp	w10, #0x3f
  466ae8:	b.eq	466a6c <feof@plt+0x631cc>  // b.none
  466aec:	cmp	w10, #0x2b
  466af0:	b.eq	466a6c <feof@plt+0x631cc>  // b.none
  466af4:	b	466a34 <feof@plt+0x63194>
  466af8:	ldr	x8, [x25]
  466afc:	sub	x9, x23, x0
  466b00:	add	x9, x9, #0x3
  466b04:	mov	x24, x0
  466b08:	cmp	x9, x8
  466b0c:	b.ls	466a50 <feof@plt+0x631b0>  // b.plast
  466b10:	cmp	x8, #0x10, lsl #12
  466b14:	b.eq	469110 <feof@plt+0x65870>  // b.none
  466b18:	lsl	x8, x8, #1
  466b1c:	cmp	x8, #0x10, lsl #12
  466b20:	mov	w9, #0x10000               	// #65536
  466b24:	csel	x1, x8, x9, cc  // cc = lo, ul, last
  466b28:	mov	x0, x24
  466b2c:	str	x1, [x20, #8]
  466b30:	bl	403260 <realloc@plt>
  466b34:	str	x0, [x20]
  466b38:	cbz	x0, 469108 <feof@plt+0x65868>
  466b3c:	cmp	x24, x0
  466b40:	b.eq	466af8 <feof@plt+0x63258>  // b.none
  466b44:	sub	x8, x0, x24
  466b48:	cmp	x22, #0x0
  466b4c:	add	x9, x22, x8
  466b50:	add	x23, x23, x8
  466b54:	add	x19, x19, x8
  466b58:	add	x8, x28, x8
  466b5c:	csel	x22, xzr, x9, eq  // eq = none
  466b60:	cmp	x28, #0x0
  466b64:	csel	x28, xzr, x8, eq  // eq = none
  466b68:	b	466af8 <feof@plt+0x63258>
  466b6c:	ldur	x8, [x29, #-160]
  466b70:	mov	w21, #0xa                   	// #10
  466b74:	tbnz	w8, #11, 466fbc <feof@plt+0x6371c>
  466b78:	b	468a24 <feof@plt+0x65184>
  466b7c:	ldp	x21, x8, [x29, #-168]
  466b80:	tbnz	w8, #3, 467204 <feof@plt+0x63964>
  466b84:	ldur	x8, [x29, #-144]
  466b88:	cmp	x8, x21
  466b8c:	b.eq	467204 <feof@plt+0x63964>  // b.none
  466b90:	ldrb	w8, [x26, #1]
  466b94:	ldur	x11, [x29, #-160]
  466b98:	add	x10, x26, #0x2
  466b9c:	cmp	x10, x21
  466ba0:	csel	x9, x10, xzr, cc  // cc = lo, ul, last
  466ba4:	tbnz	w11, #13, 4671d0 <feof@plt+0x63930>
  466ba8:	cmp	x10, x21
  466bac:	b.cs	4671d8 <feof@plt+0x63938>  // b.hs, b.nlast
  466bb0:	cmp	w8, #0x5c
  466bb4:	b.ne	4671d8 <feof@plt+0x63938>  // b.any
  466bb8:	ldrb	w11, [x9]
  466bbc:	cmp	w11, #0x29
  466bc0:	b.ne	4671d8 <feof@plt+0x63938>  // b.any
  466bc4:	b	467204 <feof@plt+0x63964>
  466bc8:	ldur	x8, [x29, #-160]
  466bcc:	tbnz	w8, #13, 468378 <feof@plt+0x64ad8>
  466bd0:	mov	w21, #0x28                  	// #40
  466bd4:	b	468a24 <feof@plt+0x65184>
  466bd8:	ldur	x21, [x29, #-160]
  466bdc:	tbz	w21, #13, 467fc4 <feof@plt+0x64724>
  466be0:	mov	w26, #0x10000               	// #65536
  466be4:	cbz	x22, 466c24 <feof@plt+0x63384>
  466be8:	ldp	x24, x8, [x20]
  466bec:	sub	x9, x23, x24
  466bf0:	add	x9, x9, #0x1
  466bf4:	cmp	x9, x8
  466bf8:	b.hi	466ce0 <feof@plt+0x63440>  // b.pmore
  466bfc:	ldur	x24, [x29, #-152]
  466c00:	sub	w8, w23, w22
  466c04:	mov	w9, #0x14                  	// #20
  466c08:	sub	w8, w8, #0x3
  466c0c:	strb	w9, [x23], #1
  466c10:	mov	w9, #0xe                   	// #14
  466c14:	strb	w8, [x22, #1]
  466c18:	lsr	w8, w8, #8
  466c1c:	strb	w9, [x22]
  466c20:	strb	w8, [x22, #2]
  466c24:	ldr	x10, [sp, #160]
  466c28:	lsr	x8, x10, #32
  466c2c:	cbz	x8, 467fc0 <feof@plt+0x64720>
  466c30:	ldr	x14, [sp, #176]
  466c34:	mov	w9, #0xffffffff            	// #-1
  466c38:	add	x9, x8, x9
  466c3c:	bfi	x10, x9, #32, #32
  466c40:	and	x9, x9, #0xffffffff
  466c44:	mov	w15, #0x28                  	// #40
  466c48:	str	x10, [sp, #160]
  466c4c:	madd	x10, x9, x15, x14
  466c50:	ldr	x8, [x20]
  466c54:	ldp	x11, x12, [x10]
  466c58:	ldr	x13, [x10, #24]
  466c5c:	ldr	w21, [x10, #32]
  466c60:	add	x10, x8, x12
  466c64:	cmp	x12, #0x0
  466c68:	sub	x10, x10, #0x1
  466c6c:	add	x19, x8, x11
  466c70:	csel	x22, xzr, x10, eq  // eq = none
  466c74:	cmp	w21, #0xff
  466c78:	add	x28, x8, x13
  466c7c:	b.hi	468000 <feof@plt+0x64760>  // b.pmore
  466c80:	madd	x9, x9, x15, x14
  466c84:	ldr	w10, [sp, #148]
  466c88:	ldr	x9, [x9, #16]
  466c8c:	sub	w26, w10, w21
  466c90:	strb	w26, [x8, x9]
  466c94:	ldp	x24, x8, [x20]
  466c98:	sub	x9, x23, x24
  466c9c:	add	x9, x9, #0x3
  466ca0:	cmp	x9, x8
  466ca4:	b.hi	467064 <feof@plt+0x637c4>  // b.pmore
  466ca8:	mov	w8, #0x7                   	// #7
  466cac:	strb	w8, [x23]
  466cb0:	add	x8, x23, #0x3
  466cb4:	mov	x27, xzr
  466cb8:	strb	w21, [x23, #1]
  466cbc:	strb	w26, [x23, #2]
  466cc0:	mov	x23, x8
  466cc4:	b	468aac <feof@plt+0x6520c>
  466cc8:	ldr	x8, [x25]
  466ccc:	sub	x9, x23, x0
  466cd0:	add	x9, x9, #0x1
  466cd4:	mov	x24, x0
  466cd8:	cmp	x9, x8
  466cdc:	b.ls	466bfc <feof@plt+0x6335c>  // b.plast
  466ce0:	cmp	x8, #0x10, lsl #12
  466ce4:	b.eq	469110 <feof@plt+0x65870>  // b.none
  466ce8:	lsl	x8, x8, #1
  466cec:	cmp	x8, #0x10, lsl #12
  466cf0:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  466cf4:	mov	x0, x24
  466cf8:	str	x1, [x20, #8]
  466cfc:	bl	403260 <realloc@plt>
  466d00:	str	x0, [x20]
  466d04:	cbz	x0, 469108 <feof@plt+0x65868>
  466d08:	cmp	x24, x0
  466d0c:	b.eq	466cc8 <feof@plt+0x63428>  // b.none
  466d10:	sub	x8, x0, x24
  466d14:	cmp	x22, #0x0
  466d18:	add	x9, x22, x8
  466d1c:	add	x10, x28, x8
  466d20:	csel	x22, xzr, x9, eq  // eq = none
  466d24:	cmp	x28, #0x0
  466d28:	add	x23, x23, x8
  466d2c:	add	x19, x19, x8
  466d30:	add	x8, x27, x8
  466d34:	csel	x28, xzr, x10, eq  // eq = none
  466d38:	cmp	x27, #0x0
  466d3c:	csel	x27, xzr, x8, eq  // eq = none
  466d40:	b	466cc8 <feof@plt+0x63428>
  466d44:	ldp	x24, x8, [x20]
  466d48:	mov	x28, x23
  466d4c:	sub	x9, x23, x24
  466d50:	add	x9, x9, #0x1
  466d54:	cmp	x9, x8
  466d58:	b.ls	4670c0 <feof@plt+0x63820>  // b.plast
  466d5c:	ldur	x21, [x29, #-168]
  466d60:	mov	w26, #0x10000               	// #65536
  466d64:	b	466d80 <feof@plt+0x634e0>
  466d68:	ldr	x8, [x25]
  466d6c:	sub	x9, x23, x0
  466d70:	add	x9, x9, #0x1
  466d74:	mov	x24, x0
  466d78:	cmp	x9, x8
  466d7c:	b.ls	4670c4 <feof@plt+0x63824>  // b.plast
  466d80:	cmp	x8, #0x10, lsl #12
  466d84:	b.eq	469110 <feof@plt+0x65870>  // b.none
  466d88:	lsl	x8, x8, #1
  466d8c:	cmp	x8, #0x10, lsl #12
  466d90:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  466d94:	mov	x0, x24
  466d98:	str	x1, [x20, #8]
  466d9c:	bl	403260 <realloc@plt>
  466da0:	str	x0, [x20]
  466da4:	cbz	x0, 469108 <feof@plt+0x65868>
  466da8:	cmp	x24, x0
  466dac:	b.eq	466d68 <feof@plt+0x634c8>  // b.none
  466db0:	sub	x8, x0, x24
  466db4:	cmp	x22, #0x0
  466db8:	add	x9, x22, x8
  466dbc:	add	x10, x28, x8
  466dc0:	csel	x22, xzr, x9, eq  // eq = none
  466dc4:	cmp	x28, #0x0
  466dc8:	add	x23, x23, x8
  466dcc:	add	x19, x19, x8
  466dd0:	add	x8, x27, x8
  466dd4:	csel	x28, xzr, x10, eq  // eq = none
  466dd8:	cmp	x27, #0x0
  466ddc:	csel	x27, xzr, x8, eq  // eq = none
  466de0:	b	466d68 <feof@plt+0x634c8>
  466de4:	ldur	x21, [x29, #-168]
  466de8:	ldur	x8, [x29, #-144]
  466dec:	cmp	x8, x21
  466df0:	b.eq	469134 <feof@plt+0x65894>  // b.none
  466df4:	ldp	x24, x8, [x20]
  466df8:	sub	x9, x23, x24
  466dfc:	add	x9, x9, #0x22
  466e00:	cmp	x9, x8
  466e04:	b.hi	466e24 <feof@plt+0x63584>  // b.pmore
  466e08:	b	467408 <feof@plt+0x63b68>
  466e0c:	ldr	x8, [x25]
  466e10:	sub	x9, x23, x0
  466e14:	add	x9, x9, #0x22
  466e18:	mov	x24, x0
  466e1c:	cmp	x9, x8
  466e20:	b.ls	467404 <feof@plt+0x63b64>  // b.plast
  466e24:	cmp	x8, #0x10, lsl #12
  466e28:	b.eq	469110 <feof@plt+0x65870>  // b.none
  466e2c:	lsl	x8, x8, #1
  466e30:	cmp	x8, #0x10, lsl #12
  466e34:	mov	w9, #0x10000               	// #65536
  466e38:	csel	x1, x8, x9, cc  // cc = lo, ul, last
  466e3c:	mov	x0, x24
  466e40:	str	x1, [x20, #8]
  466e44:	bl	403260 <realloc@plt>
  466e48:	str	x0, [x20]
  466e4c:	cbz	x0, 469108 <feof@plt+0x65868>
  466e50:	cmp	x24, x0
  466e54:	b.eq	466e0c <feof@plt+0x6356c>  // b.none
  466e58:	sub	x8, x0, x24
  466e5c:	cmp	x22, #0x0
  466e60:	add	x9, x22, x8
  466e64:	add	x23, x23, x8
  466e68:	add	x19, x19, x8
  466e6c:	add	x8, x27, x8
  466e70:	csel	x22, xzr, x9, eq  // eq = none
  466e74:	cmp	x27, #0x0
  466e78:	csel	x27, xzr, x8, eq  // eq = none
  466e7c:	b	466e0c <feof@plt+0x6356c>
  466e80:	ldur	x8, [x29, #-168]
  466e84:	ldur	x9, [x29, #-144]
  466e88:	cmp	x9, x8
  466e8c:	b.eq	469034 <feof@plt+0x65794>  // b.none
  466e90:	ldrb	w21, [x26, #1]
  466e94:	add	x9, x26, #0x2
  466e98:	stur	x9, [x29, #-144]
  466e9c:	sub	w8, w21, #0x27
  466ea0:	cmp	w8, #0x55
  466ea4:	b.hi	468a1c <feof@plt+0x6517c>  // b.pmore
  466ea8:	adrp	x11, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  466eac:	add	x11, x11, #0x326
  466eb0:	adr	x9, 466ec0 <feof@plt+0x63620>
  466eb4:	ldrh	w10, [x11, x8, lsl #1]
  466eb8:	add	x9, x9, x10, lsl #2
  466ebc:	br	x9
  466ec0:	ldur	x8, [x29, #-160]
  466ec4:	tbnz	w8, #14, 468a24 <feof@plt+0x65184>
  466ec8:	ldr	w9, [sp, #148]
  466ecc:	sub	w26, w21, #0x30
  466ed0:	and	w8, w26, #0xff
  466ed4:	cmp	w9, w8
  466ed8:	b.cc	469184 <feof@plt+0x658e4>  // b.lo, b.ul, b.last
  466edc:	ldr	x9, [sp, #160]
  466ee0:	mov	w11, #0x28                  	// #40
  466ee4:	lsr	x9, x9, #32
  466ee8:	sub	w9, w9, #0x1
  466eec:	tbnz	w9, #31, 468010 <feof@plt+0x64770>
  466ef0:	ldr	x10, [sp, #176]
  466ef4:	umaddl	x10, w9, w11, x10
  466ef8:	ldr	w10, [x10, #32]
  466efc:	sub	w9, w9, #0x1
  466f00:	cmp	w10, w8
  466f04:	b.ne	466eec <feof@plt+0x6364c>  // b.any
  466f08:	b	468a24 <feof@plt+0x65184>
  466f0c:	ldur	x8, [x29, #-160]
  466f10:	tbnz	w8, #3, 4672d8 <feof@plt+0x63a38>
  466f14:	ldr	x8, [sp, #136]
  466f18:	cmp	x26, x8
  466f1c:	b.eq	4672d8 <feof@plt+0x63a38>  // b.none
  466f20:	ldr	x8, [sp, #136]
  466f24:	sub	x9, x26, #0x1
  466f28:	cmp	x9, x8
  466f2c:	b.ls	4672ac <feof@plt+0x63a0c>  // b.plast
  466f30:	ldurb	w8, [x26, #-2]
  466f34:	cmp	w8, #0x5c
  466f38:	cset	w8, eq  // eq = none
  466f3c:	b	4672b0 <feof@plt+0x63a10>
  466f40:	ldr	x9, [sp, #128]
  466f44:	mov	w8, #0x1200                	// #4608
  466f48:	cmp	x9, x8
  466f4c:	b.ne	4670cc <feof@plt+0x6382c>  // b.any
  466f50:	ldur	x12, [x29, #-168]
  466f54:	ldur	x10, [x29, #-144]
  466f58:	mov	x14, x12
  466f5c:	cmp	x10, x12
  466f60:	b.eq	468a0c <feof@plt+0x6516c>  // b.none
  466f64:	mov	w26, #0xffffffff            	// #-1
  466f68:	mov	x9, x10
  466f6c:	mov	w13, #0xa                   	// #10
  466f70:	b	466f80 <feof@plt+0x636e0>
  466f74:	cmp	x12, x9
  466f78:	mov	x10, x9
  466f7c:	b.eq	4673f8 <feof@plt+0x63b58>  // b.none
  466f80:	ldrb	w8, [x9], #1
  466f84:	cbz	x24, 466f8c <feof@plt+0x636ec>
  466f88:	ldrb	w8, [x24, x8]
  466f8c:	sub	w11, w8, #0x30
  466f90:	cmp	w11, #0x9
  466f94:	b.hi	467390 <feof@plt+0x63af0>  // b.pmore
  466f98:	cmp	w26, #0x8, lsl #12
  466f9c:	b.ge	466f74 <feof@plt+0x636d4>  // b.tcont
  466fa0:	bic	w10, w26, w26, asr #31
  466fa4:	madd	w10, w10, w13, w8
  466fa8:	sub	w26, w10, #0x30
  466fac:	b	466f74 <feof@plt+0x636d4>
  466fb0:	ldur	x8, [x29, #-160]
  466fb4:	mov	w21, #0x7c                  	// #124
  466fb8:	tbz	w8, #15, 468a24 <feof@plt+0x65184>
  466fbc:	ldur	x8, [x29, #-160]
  466fc0:	tbnz	w8, #10, 468a24 <feof@plt+0x65184>
  466fc4:	ldp	x24, x8, [x20]
  466fc8:	sub	x9, x23, x24
  466fcc:	add	x9, x9, #0x3
  466fd0:	cmp	x9, x8
  466fd4:	b.ls	4670dc <feof@plt+0x6383c>  // b.plast
  466fd8:	ldur	x21, [x29, #-168]
  466fdc:	mov	w26, #0x10000               	// #65536
  466fe0:	cmp	x8, #0x10, lsl #12
  466fe4:	b.eq	469110 <feof@plt+0x65870>  // b.none
  466fe8:	lsl	x8, x8, #1
  466fec:	cmp	x8, #0x10, lsl #12
  466ff0:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  466ff4:	mov	x0, x24
  466ff8:	str	x1, [x20, #8]
  466ffc:	bl	403260 <realloc@plt>
  467000:	str	x0, [x20]
  467004:	cbz	x0, 469108 <feof@plt+0x65868>
  467008:	sub	x9, x0, x24
  46700c:	cmp	x22, #0x0
  467010:	add	x10, x23, x9
  467014:	add	x11, x19, x9
  467018:	add	x9, x22, x9
  46701c:	ldr	x8, [x25]
  467020:	csel	x9, xzr, x9, eq  // eq = none
  467024:	cmp	x24, x0
  467028:	csel	x23, x23, x10, eq  // eq = none
  46702c:	csel	x22, x22, x9, eq  // eq = none
  467030:	sub	x9, x23, x0
  467034:	add	x9, x9, #0x3
  467038:	csel	x19, x19, x11, eq  // eq = none
  46703c:	cmp	x9, x8
  467040:	mov	x24, x0
  467044:	b.hi	466fe0 <feof@plt+0x63740>  // b.pmore
  467048:	b	4670e4 <feof@plt+0x63844>
  46704c:	ldr	x8, [x25]
  467050:	sub	x9, x23, x0
  467054:	add	x9, x9, #0x3
  467058:	mov	x24, x0
  46705c:	cmp	x9, x8
  467060:	b.ls	466ca8 <feof@plt+0x63408>  // b.plast
  467064:	cmp	x8, #0x10, lsl #12
  467068:	b.eq	469110 <feof@plt+0x65870>  // b.none
  46706c:	lsl	x8, x8, #1
  467070:	cmp	x8, #0x10, lsl #12
  467074:	mov	w9, #0x10000               	// #65536
  467078:	csel	x1, x8, x9, cc  // cc = lo, ul, last
  46707c:	mov	x0, x24
  467080:	str	x1, [x20, #8]
  467084:	bl	403260 <realloc@plt>
  467088:	str	x0, [x20]
  46708c:	cbz	x0, 469108 <feof@plt+0x65868>
  467090:	cmp	x24, x0
  467094:	b.eq	46704c <feof@plt+0x637ac>  // b.none
  467098:	sub	x8, x0, x24
  46709c:	cmp	x22, #0x0
  4670a0:	add	x9, x22, x8
  4670a4:	add	x23, x23, x8
  4670a8:	add	x19, x19, x8
  4670ac:	add	x8, x28, x8
  4670b0:	csel	x22, xzr, x9, eq  // eq = none
  4670b4:	cmp	x28, #0x0
  4670b8:	csel	x28, xzr, x8, eq  // eq = none
  4670bc:	b	46704c <feof@plt+0x637ac>
  4670c0:	ldur	x21, [x29, #-168]
  4670c4:	mov	w8, #0x3                   	// #3
  4670c8:	b	46737c <feof@plt+0x63adc>
  4670cc:	mov	w21, #0x7b                  	// #123
  4670d0:	b	468a24 <feof@plt+0x65184>
  4670d4:	mov	w21, wzr
  4670d8:	b	468110 <feof@plt+0x64870>
  4670dc:	ldur	x21, [x29, #-168]
  4670e0:	mov	w26, #0x10000               	// #65536
  4670e4:	sub	w8, w23, w19
  4670e8:	cmp	x23, x19
  4670ec:	add	w8, w8, #0x3
  4670f0:	b.eq	467108 <feof@plt+0x63868>  // b.none
  4670f4:	mov	x9, x23
  4670f8:	ldrb	w10, [x9, #-1]!
  4670fc:	cmp	x19, x9
  467100:	strb	w10, [x9, #3]
  467104:	b.ne	4670f8 <feof@plt+0x63858>  // b.any
  467108:	ldur	x24, [x29, #-152]
  46710c:	mov	w9, #0xf                   	// #15
  467110:	strb	w8, [x19, #1]
  467114:	lsr	w8, w8, #8
  467118:	strb	w9, [x19]
  46711c:	strb	w8, [x19, #2]
  467120:	add	x19, x23, #0x3
  467124:	cbz	x22, 467144 <feof@plt+0x638a4>
  467128:	sub	w8, w19, w22
  46712c:	sub	w8, w8, #0x3
  467130:	mov	w9, #0xe                   	// #14
  467134:	strb	w8, [x22, #1]
  467138:	lsr	w8, w8, #8
  46713c:	strb	w9, [x22]
  467140:	strb	w8, [x22, #2]
  467144:	ldp	x23, x8, [x20]
  467148:	mov	x22, x19
  46714c:	sub	x9, x19, x23
  467150:	add	x9, x9, #0x3
  467154:	cmp	x9, x8
  467158:	b.ls	4671bc <feof@plt+0x6391c>  // b.plast
  46715c:	cmp	x8, #0x10, lsl #12
  467160:	b.eq	469110 <feof@plt+0x65870>  // b.none
  467164:	lsl	x8, x8, #1
  467168:	cmp	x8, #0x10, lsl #12
  46716c:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  467170:	mov	x0, x23
  467174:	str	x1, [x20, #8]
  467178:	bl	403260 <realloc@plt>
  46717c:	str	x0, [x20]
  467180:	cbz	x0, 469108 <feof@plt+0x65868>
  467184:	sub	x9, x0, x23
  467188:	cmp	x22, #0x0
  46718c:	add	x10, x19, x9
  467190:	add	x9, x22, x9
  467194:	ldr	x8, [x25]
  467198:	csel	x9, xzr, x9, eq  // eq = none
  46719c:	cmp	x23, x0
  4671a0:	csel	x19, x19, x10, eq  // eq = none
  4671a4:	csel	x22, x22, x9, eq  // eq = none
  4671a8:	sub	x9, x19, x0
  4671ac:	add	x9, x9, #0x3
  4671b0:	cmp	x9, x8
  4671b4:	mov	x23, x0
  4671b8:	b.hi	46715c <feof@plt+0x638bc>  // b.pmore
  4671bc:	add	x19, x19, #0x3
  4671c0:	mov	x28, xzr
  4671c4:	mov	x27, xzr
  4671c8:	mov	x23, x19
  4671cc:	b	468ab4 <feof@plt+0x65214>
  4671d0:	cmp	w8, #0x29
  4671d4:	b.eq	467204 <feof@plt+0x63964>  // b.none
  4671d8:	ldur	x11, [x29, #-160]
  4671dc:	tbnz	w11, #15, 4671fc <feof@plt+0x6395c>
  4671e0:	cmp	x10, x21
  4671e4:	mov	w21, #0x24                  	// #36
  4671e8:	b.cs	468a24 <feof@plt+0x65184>  // b.hs, b.nlast
  4671ec:	cmp	w8, #0x5c
  4671f0:	b.ne	468a24 <feof@plt+0x65184>  // b.any
  4671f4:	ldrb	w8, [x9]
  4671f8:	ldur	x21, [x29, #-168]
  4671fc:	cmp	w8, #0x7c
  467200:	b.ne	468008 <feof@plt+0x64768>  // b.any
  467204:	ldp	x24, x8, [x20]
  467208:	sub	x9, x23, x24
  46720c:	add	x9, x9, #0x1
  467210:	cmp	x9, x8
  467214:	b.ls	46729c <feof@plt+0x639fc>  // b.plast
  467218:	mov	w26, #0x10000               	// #65536
  46721c:	b	467238 <feof@plt+0x63998>
  467220:	ldr	x8, [x25]
  467224:	sub	x9, x23, x0
  467228:	add	x9, x9, #0x1
  46722c:	mov	x24, x0
  467230:	cmp	x9, x8
  467234:	b.ls	46729c <feof@plt+0x639fc>  // b.plast
  467238:	cmp	x8, #0x10, lsl #12
  46723c:	b.eq	469110 <feof@plt+0x65870>  // b.none
  467240:	lsl	x8, x8, #1
  467244:	cmp	x8, #0x10, lsl #12
  467248:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  46724c:	mov	x0, x24
  467250:	str	x1, [x20, #8]
  467254:	bl	403260 <realloc@plt>
  467258:	str	x0, [x20]
  46725c:	cbz	x0, 469108 <feof@plt+0x65868>
  467260:	cmp	x24, x0
  467264:	b.eq	467220 <feof@plt+0x63980>  // b.none
  467268:	sub	x8, x0, x24
  46726c:	cmp	x22, #0x0
  467270:	add	x9, x22, x8
  467274:	add	x10, x28, x8
  467278:	csel	x22, xzr, x9, eq  // eq = none
  46727c:	cmp	x28, #0x0
  467280:	add	x23, x23, x8
  467284:	add	x19, x19, x8
  467288:	add	x8, x27, x8
  46728c:	csel	x28, xzr, x10, eq  // eq = none
  467290:	cmp	x27, #0x0
  467294:	csel	x27, xzr, x8, eq  // eq = none
  467298:	b	467220 <feof@plt+0x63980>
  46729c:	ldur	x24, [x29, #-152]
  4672a0:	mov	w8, #0xa                   	// #10
  4672a4:	strb	w8, [x23], #1
  4672a8:	b	468ab4 <feof@plt+0x65214>
  4672ac:	mov	w8, wzr
  4672b0:	ldrb	w10, [x9]
  4672b4:	ldr	x9, [sp, #120]
  4672b8:	cmp	w10, #0x28
  4672bc:	b.eq	4672cc <feof@plt+0x63a2c>  // b.none
  4672c0:	cmp	w10, #0x7c
  4672c4:	b.ne	467388 <feof@plt+0x63ae8>  // b.any
  4672c8:	ldr	x9, [sp, #112]
  4672cc:	and	w9, w9, #0x1
  4672d0:	orr	w8, w9, w8
  4672d4:	cbz	w8, 467388 <feof@plt+0x63ae8>
  4672d8:	ldp	x24, x8, [x20]
  4672dc:	sub	x9, x23, x24
  4672e0:	add	x9, x9, #0x1
  4672e4:	cmp	x9, x8
  4672e8:	b.ls	467374 <feof@plt+0x63ad4>  // b.plast
  4672ec:	ldur	x21, [x29, #-168]
  4672f0:	mov	w26, #0x10000               	// #65536
  4672f4:	b	467310 <feof@plt+0x63a70>
  4672f8:	ldr	x8, [x25]
  4672fc:	sub	x9, x23, x0
  467300:	add	x9, x9, #0x1
  467304:	mov	x24, x0
  467308:	cmp	x9, x8
  46730c:	b.ls	467378 <feof@plt+0x63ad8>  // b.plast
  467310:	cmp	x8, #0x10, lsl #12
  467314:	b.eq	469110 <feof@plt+0x65870>  // b.none
  467318:	lsl	x8, x8, #1
  46731c:	cmp	x8, #0x10, lsl #12
  467320:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  467324:	mov	x0, x24
  467328:	str	x1, [x20, #8]
  46732c:	bl	403260 <realloc@plt>
  467330:	str	x0, [x20]
  467334:	cbz	x0, 469108 <feof@plt+0x65868>
  467338:	cmp	x24, x0
  46733c:	b.eq	4672f8 <feof@plt+0x63a58>  // b.none
  467340:	sub	x8, x0, x24
  467344:	cmp	x22, #0x0
  467348:	add	x9, x22, x8
  46734c:	add	x10, x28, x8
  467350:	csel	x22, xzr, x9, eq  // eq = none
  467354:	cmp	x28, #0x0
  467358:	add	x23, x23, x8
  46735c:	add	x19, x19, x8
  467360:	add	x8, x27, x8
  467364:	csel	x28, xzr, x10, eq  // eq = none
  467368:	cmp	x27, #0x0
  46736c:	csel	x27, xzr, x8, eq  // eq = none
  467370:	b	4672f8 <feof@plt+0x63a58>
  467374:	ldur	x21, [x29, #-168]
  467378:	mov	w8, #0x9                   	// #9
  46737c:	strb	w8, [x23], #1
  467380:	ldur	x24, [x29, #-152]
  467384:	b	468ab4 <feof@plt+0x65214>
  467388:	mov	w21, #0x5e                  	// #94
  46738c:	b	468a24 <feof@plt+0x65184>
  467390:	cmp	w8, #0x2c
  467394:	add	x14, x10, #0x1
  467398:	b.ne	4680b0 <feof@plt+0x64810>  // b.any
  46739c:	ldr	x8, [sp, #168]
  4673a0:	cmp	x8, x10
  4673a4:	b.eq	4689a4 <feof@plt+0x65104>  // b.none
  4673a8:	mov	w21, #0xffffffff            	// #-1
  4673ac:	mov	x9, x14
  4673b0:	b	4673c4 <feof@plt+0x63b24>
  4673b4:	ldur	x10, [x29, #-168]
  4673b8:	mov	x14, x9
  4673bc:	cmp	x10, x9
  4673c0:	b.eq	4689b8 <feof@plt+0x65118>  // b.none
  4673c4:	ldrb	w8, [x9], #1
  4673c8:	cbz	x24, 4673d0 <feof@plt+0x63b30>
  4673cc:	ldrb	w8, [x24, x8]
  4673d0:	sub	w10, w8, #0x30
  4673d4:	cmp	w10, #0x9
  4673d8:	b.hi	4689b0 <feof@plt+0x65110>  // b.pmore
  4673dc:	cmp	w21, #0x8, lsl #12
  4673e0:	b.ge	4673b4 <feof@plt+0x63b14>  // b.tcont
  4673e4:	bic	w10, w21, w21, asr #31
  4673e8:	mov	w11, #0xa                   	// #10
  4673ec:	madd	w10, w10, w11, w8
  4673f0:	sub	w21, w10, #0x30
  4673f4:	b	4673b4 <feof@plt+0x63b14>
  4673f8:	mov	x14, x12
  4673fc:	mov	w21, w26
  467400:	b	4689c4 <feof@plt+0x65124>
  467404:	mov	x24, x0
  467408:	sub	x9, x23, x24
  46740c:	add	x9, x9, #0x1
  467410:	cmp	x9, x8
  467414:	mov	x28, x23
  467418:	b.hi	46747c <feof@plt+0x63bdc>  // b.pmore
  46741c:	ldrb	w8, [x26, #1]
  467420:	ldur	x11, [x29, #-144]
  467424:	add	x10, x26, #0x2
  467428:	cmp	w8, #0x5e
  46742c:	mov	w8, #0x4                   	// #4
  467430:	cinc	w8, w8, eq  // eq = none
  467434:	strb	w8, [x23], #1
  467438:	ldrb	w9, [x26, #1]
  46743c:	ldp	x24, x8, [x20]
  467440:	cmp	w9, #0x5e
  467444:	sub	x9, x23, x24
  467448:	add	x9, x9, #0x1
  46744c:	csel	x10, x10, x11, eq  // eq = none
  467450:	cmp	x9, x8
  467454:	stur	x10, [x29, #-144]
  467458:	b.ls	467564 <feof@plt+0x63cc4>  // b.plast
  46745c:	ldur	x26, [x29, #-160]
  467460:	b	4674fc <feof@plt+0x63c5c>
  467464:	ldr	x8, [x25]
  467468:	sub	x9, x23, x0
  46746c:	add	x9, x9, #0x1
  467470:	mov	x24, x0
  467474:	cmp	x9, x8
  467478:	b.ls	46741c <feof@plt+0x63b7c>  // b.plast
  46747c:	cmp	x8, #0x10, lsl #12
  467480:	b.eq	469110 <feof@plt+0x65870>  // b.none
  467484:	lsl	x8, x8, #1
  467488:	cmp	x8, #0x10, lsl #12
  46748c:	mov	w9, #0x10000               	// #65536
  467490:	csel	x1, x8, x9, cc  // cc = lo, ul, last
  467494:	mov	x0, x24
  467498:	str	x1, [x20, #8]
  46749c:	bl	403260 <realloc@plt>
  4674a0:	str	x0, [x20]
  4674a4:	cbz	x0, 469108 <feof@plt+0x65868>
  4674a8:	cmp	x24, x0
  4674ac:	b.eq	467464 <feof@plt+0x63bc4>  // b.none
  4674b0:	sub	x8, x0, x24
  4674b4:	cmp	x22, #0x0
  4674b8:	add	x9, x22, x8
  4674bc:	add	x10, x28, x8
  4674c0:	csel	x22, xzr, x9, eq  // eq = none
  4674c4:	cmp	x28, #0x0
  4674c8:	add	x23, x23, x8
  4674cc:	add	x19, x19, x8
  4674d0:	add	x8, x27, x8
  4674d4:	csel	x28, xzr, x10, eq  // eq = none
  4674d8:	cmp	x27, #0x0
  4674dc:	csel	x27, xzr, x8, eq  // eq = none
  4674e0:	b	467464 <feof@plt+0x63bc4>
  4674e4:	ldr	x8, [x25]
  4674e8:	sub	x9, x23, x0
  4674ec:	add	x9, x9, #0x1
  4674f0:	mov	x24, x0
  4674f4:	cmp	x9, x8
  4674f8:	b.ls	467568 <feof@plt+0x63cc8>  // b.plast
  4674fc:	cmp	x8, #0x10, lsl #12
  467500:	b.eq	469110 <feof@plt+0x65870>  // b.none
  467504:	lsl	x8, x8, #1
  467508:	cmp	x8, #0x10, lsl #12
  46750c:	mov	w9, #0x10000               	// #65536
  467510:	csel	x1, x8, x9, cc  // cc = lo, ul, last
  467514:	mov	x0, x24
  467518:	str	x1, [x20, #8]
  46751c:	bl	403260 <realloc@plt>
  467520:	str	x0, [x20]
  467524:	cbz	x0, 469108 <feof@plt+0x65868>
  467528:	cmp	x24, x0
  46752c:	b.eq	4674e4 <feof@plt+0x63c44>  // b.none
  467530:	sub	x8, x0, x24
  467534:	cmp	x22, #0x0
  467538:	add	x9, x22, x8
  46753c:	add	x10, x28, x8
  467540:	csel	x22, xzr, x9, eq  // eq = none
  467544:	cmp	x28, #0x0
  467548:	add	x23, x23, x8
  46754c:	add	x19, x19, x8
  467550:	add	x8, x27, x8
  467554:	csel	x28, xzr, x10, eq  // eq = none
  467558:	cmp	x27, #0x0
  46755c:	csel	x27, xzr, x8, eq  // eq = none
  467560:	b	4674e4 <feof@plt+0x63c44>
  467564:	ldur	x26, [x29, #-160]
  467568:	mov	x24, x23
  46756c:	movi	v0.2d, #0x0
  467570:	str	q0, [x24, #1]!
  467574:	mov	w8, #0x20                  	// #32
  467578:	strb	w8, [x23]
  46757c:	stur	q0, [x23, #17]
  467580:	tbz	w26, #8, 467598 <feof@plt+0x63cf8>
  467584:	ldurb	w8, [x23, #-1]
  467588:	cmp	w8, #0x5
  46758c:	b.ne	467598 <feof@plt+0x63cf8>  // b.any
  467590:	mov	w8, #0x4                   	// #4
  467594:	strb	w8, [x23, #2]
  467598:	ldur	x8, [x29, #-144]
  46759c:	cmp	x8, x21
  4675a0:	b.eq	469134 <feof@plt+0x65894>  // b.none
  4675a4:	ldur	x16, [x29, #-144]
  4675a8:	mov	w8, wzr
  4675ac:	add	x6, x23, #0x8
  4675b0:	mov	w9, #0xffffffff            	// #-1
  4675b4:	mov	w21, w9
  4675b8:	mov	x10, x16
  4675bc:	b	4675e8 <feof@plt+0x63d48>
  4675c0:	lsr	x9, x21, #3
  4675c4:	ldrb	w11, [x24, x9]
  4675c8:	and	w12, w21, #0x7
  4675cc:	mov	w13, #0x1                   	// #1
  4675d0:	lsl	w12, w13, w12
  4675d4:	orr	w11, w11, w12
  4675d8:	ldur	x12, [x29, #-168]
  4675dc:	strb	w11, [x24, x9]
  4675e0:	cmp	x12, x10
  4675e4:	b.eq	469134 <feof@plt+0x65894>  // b.none
  4675e8:	ldrb	w9, [x10]
  4675ec:	ldur	x11, [x29, #-152]
  4675f0:	cbz	x11, 4675f8 <feof@plt+0x63d58>
  4675f4:	ldrb	w9, [x11, x9]
  4675f8:	tbz	w26, #0, 467628 <feof@plt+0x63d88>
  4675fc:	cmp	w9, #0x5c
  467600:	b.ne	467628 <feof@plt+0x63d88>  // b.any
  467604:	ldr	x9, [sp, #168]
  467608:	cmp	x9, x10
  46760c:	b.eq	469034 <feof@plt+0x65794>  // b.none
  467610:	ldrb	w21, [x10, #1]
  467614:	ldur	x9, [x29, #-152]
  467618:	add	x10, x10, #0x2
  46761c:	cbz	x9, 4675c0 <feof@plt+0x63d20>
  467620:	ldrb	w21, [x9, x21]
  467624:	b	4675c0 <feof@plt+0x63d20>
  467628:	cmp	w9, #0x5d
  46762c:	add	x16, x10, #0x1
  467630:	b.ne	467644 <feof@plt+0x63da4>  // b.any
  467634:	ldur	x11, [x29, #-144]
  467638:	cmp	x11, x10
  46763c:	b.eq	4676ac <feof@plt+0x63e0c>  // b.none
  467640:	b	468fe4 <feof@plt+0x65744>
  467644:	tst	w8, #0xff
  467648:	b.eq	467660 <feof@plt+0x63dc0>  // b.none
  46764c:	cmp	w9, #0x2d
  467650:	b.ne	467660 <feof@plt+0x63dc0>  // b.any
  467654:	ldrb	w11, [x16]
  467658:	cmp	w11, #0x5d
  46765c:	b.ne	4691a4 <feof@plt+0x65904>  // b.any
  467660:	cmp	w9, #0x2d
  467664:	b.ne	4676ac <feof@plt+0x63e0c>  // b.any
  467668:	ldr	x12, [sp, #136]
  46766c:	sub	x11, x10, #0x1
  467670:	cmp	x11, x12
  467674:	b.cc	467684 <feof@plt+0x63de4>  // b.lo, b.ul, b.last
  467678:	ldrb	w12, [x11]
  46767c:	cmp	w12, #0x5b
  467680:	b.eq	4676ac <feof@plt+0x63e0c>  // b.none
  467684:	ldr	x13, [sp, #136]
  467688:	sub	x12, x10, #0x2
  46768c:	cmp	x12, x13
  467690:	b.cc	4677b0 <feof@plt+0x63f10>  // b.lo, b.ul, b.last
  467694:	ldrb	w12, [x12]
  467698:	cmp	w12, #0x5b
  46769c:	b.ne	4677b0 <feof@plt+0x63f10>  // b.any
  4676a0:	ldrb	w11, [x11]
  4676a4:	cmp	w11, #0x5e
  4676a8:	b.ne	4677b0 <feof@plt+0x63f10>  // b.any
  4676ac:	ldrb	w12, [x16]
  4676b0:	cmp	w12, #0x2d
  4676b4:	b.ne	4676c4 <feof@plt+0x63e24>  // b.any
  4676b8:	ldrb	w11, [x10, #2]
  4676bc:	cmp	x11, #0x5d
  4676c0:	b.ne	46776c <feof@plt+0x63ecc>  // b.any
  4676c4:	tbz	w26, #2, 4677bc <feof@plt+0x63f1c>
  4676c8:	cmp	w9, #0x5b
  4676cc:	b.ne	4677bc <feof@plt+0x63f1c>  // b.any
  4676d0:	cmp	w12, #0x2e
  4676d4:	b.eq	46786c <feof@plt+0x63fcc>  // b.none
  4676d8:	cmp	w12, #0x3d
  4676dc:	b.eq	4678e4 <feof@plt+0x64044>  // b.none
  4676e0:	cmp	w12, #0x3a
  4676e4:	b.ne	4677bc <feof@plt+0x63f1c>  // b.any
  4676e8:	ldr	x8, [sp, #168]
  4676ec:	cmp	x8, x10
  4676f0:	b.eq	4691b4 <feof@plt+0x65914>  // b.none
  4676f4:	ldr	x8, [sp, #104]
  4676f8:	cmp	x8, x10
  4676fc:	b.eq	469134 <feof@plt+0x65894>  // b.none
  467700:	mov	w11, wzr
  467704:	add	x8, x10, #0x2
  467708:	mov	x10, x8
  46770c:	ldrb	w9, [x10], #1
  467710:	ldur	x12, [x29, #-152]
  467714:	cbz	x12, 46771c <feof@plt+0x63e7c>
  467718:	ldrb	w9, [x12, x9]
  46771c:	cmp	w9, #0x3a
  467720:	b.ne	467730 <feof@plt+0x63e90>  // b.any
  467724:	ldrb	w12, [x8, #1]
  467728:	cmp	w12, #0x5d
  46772c:	b.eq	467a00 <feof@plt+0x64160>  // b.none
  467730:	ldr	x12, [sp, #168]
  467734:	cmp	x12, x8
  467738:	b.eq	467960 <feof@plt+0x640c0>  // b.none
  46773c:	and	w12, w11, #0xff
  467740:	cmp	w12, #0x5
  467744:	b.ls	467754 <feof@plt+0x63eb4>  // b.plast
  467748:	sturb	wzr, [x29, #-136]
  46774c:	mov	x8, x10
  467750:	b	467708 <feof@plt+0x63e68>
  467754:	and	x10, x11, #0xff
  467758:	add	w11, w11, #0x1
  46775c:	sub	x12, x29, #0x88
  467760:	strb	w9, [x12, x10]
  467764:	add	x8, x8, #0x1
  467768:	b	467708 <feof@plt+0x63e68>
  46776c:	ldr	x12, [sp, #168]
  467770:	cmp	x12, x10
  467774:	b.eq	4691b4 <feof@plt+0x65914>  // b.none
  467778:	ldr	x12, [sp, #104]
  46777c:	ldur	x14, [x29, #-168]
  467780:	cmp	x12, x10
  467784:	b.eq	4691a4 <feof@plt+0x65904>  // b.none
  467788:	add	x16, x10, #0x3
  46778c:	ldur	x10, [x29, #-152]
  467790:	cbz	x10, 46779c <feof@plt+0x63efc>
  467794:	ldrb	w9, [x10, w9, uxtw]
  467798:	ldrb	w11, [x10, x11]
  46779c:	cmp	w9, w11
  4677a0:	b.ls	4677ec <feof@plt+0x63f4c>  // b.plast
  4677a4:	tbnz	w26, #16, 4691a4 <feof@plt+0x65904>
  4677a8:	mov	w9, #0xffffffff            	// #-1
  4677ac:	b	4677e0 <feof@plt+0x63f40>
  4677b0:	ldrb	w11, [x16]
  4677b4:	cmp	x11, #0x5d
  4677b8:	b.ne	467834 <feof@plt+0x63f94>  // b.any
  4677bc:	lsr	x10, x9, #3
  4677c0:	ldrb	w11, [x24, x10]
  4677c4:	and	w12, w9, #0x7
  4677c8:	mov	w13, #0x1                   	// #1
  4677cc:	lsl	w12, w13, w12
  4677d0:	mov	w8, wzr
  4677d4:	orr	w11, w11, w12
  4677d8:	strb	w11, [x24, x10]
  4677dc:	ldur	x14, [x29, #-168]
  4677e0:	cmp	x16, x14
  4677e4:	b.ne	4675b4 <feof@plt+0x63d14>  // b.any
  4677e8:	b	469134 <feof@plt+0x65894>
  4677ec:	add	w10, w11, #0x1
  4677f0:	b	467820 <feof@plt+0x63f80>
  4677f4:	ldrb	w11, [x12, x11]
  4677f8:	and	w12, w11, #0x7
  4677fc:	lsr	x11, x11, #3
  467800:	ldrb	w13, [x24, x11]
  467804:	mov	w15, #0x1                   	// #1
  467808:	lsl	w12, w15, w12
  46780c:	add	w9, w9, #0x1
  467810:	orr	w12, w13, w12
  467814:	cmp	w10, w9
  467818:	strb	w12, [x24, x11]
  46781c:	b.eq	4677a8 <feof@plt+0x63f08>  // b.none
  467820:	ldur	x12, [x29, #-152]
  467824:	and	x11, x9, #0xff
  467828:	cbnz	x12, 4677f4 <feof@plt+0x63f54>
  46782c:	and	w12, w9, #0x7
  467830:	b	4677fc <feof@plt+0x63f5c>
  467834:	ldr	x9, [sp, #168]
  467838:	cmp	x9, x10
  46783c:	b.eq	4691a4 <feof@plt+0x65904>  // b.none
  467840:	add	x16, x10, #0x2
  467844:	ldur	x10, [x29, #-152]
  467848:	and	x9, x21, #0xff
  46784c:	cbz	x10, 467858 <feof@plt+0x63fb8>
  467850:	ldrb	w9, [x10, x9]
  467854:	ldrb	w11, [x10, x11]
  467858:	cmp	w9, w11
  46785c:	b.ls	4679b4 <feof@plt+0x64114>  // b.plast
  467860:	tbnz	w26, #16, 4691a4 <feof@plt+0x65904>
  467864:	mov	w9, #0xffffffff            	// #-1
  467868:	b	4677dc <feof@plt+0x63f3c>
  46786c:	ldr	x8, [sp, #168]
  467870:	cmp	x8, x10
  467874:	b.eq	4691b4 <feof@plt+0x65914>  // b.none
  467878:	ldr	x8, [sp, #104]
  46787c:	ldur	x14, [x29, #-168]
  467880:	cmp	x8, x10
  467884:	b.eq	469134 <feof@plt+0x65894>  // b.none
  467888:	mov	w9, wzr
  46788c:	add	x8, x10, #0x2
  467890:	add	x8, x8, #0x1
  467894:	ldurb	w10, [x8, #-1]
  467898:	ldur	x11, [x29, #-152]
  46789c:	cbz	x11, 4678a4 <feof@plt+0x64004>
  4678a0:	ldrb	w10, [x11, x10]
  4678a4:	cmp	w10, #0x2e
  4678a8:	b.ne	4678b8 <feof@plt+0x64018>  // b.any
  4678ac:	ldrb	w11, [x8]
  4678b0:	cmp	w11, #0x5d
  4678b4:	b.eq	467e70 <feof@plt+0x645d0>  // b.none
  4678b8:	cmp	x14, x8
  4678bc:	b.eq	46797c <feof@plt+0x640dc>  // b.none
  4678c0:	sxtb	w11, w9
  4678c4:	tbz	w11, #31, 4678d0 <feof@plt+0x64030>
  4678c8:	sturb	wzr, [x29, #-136]
  4678cc:	b	467890 <feof@plt+0x63ff0>
  4678d0:	and	x11, x9, #0xff
  4678d4:	sub	x12, x29, #0x88
  4678d8:	add	w9, w9, #0x1
  4678dc:	strb	w10, [x12, x11]
  4678e0:	b	467890 <feof@plt+0x63ff0>
  4678e4:	ldr	x8, [sp, #168]
  4678e8:	cmp	x8, x10
  4678ec:	b.eq	4691b4 <feof@plt+0x65914>  // b.none
  4678f0:	ldr	x8, [sp, #104]
  4678f4:	cmp	x8, x10
  4678f8:	b.eq	469134 <feof@plt+0x65894>  // b.none
  4678fc:	mov	w9, wzr
  467900:	add	x8, x10, #0x2
  467904:	add	x8, x8, #0x1
  467908:	ldurb	w10, [x8, #-1]
  46790c:	ldur	x11, [x29, #-152]
  467910:	cbz	x11, 467918 <feof@plt+0x64078>
  467914:	ldrb	w10, [x11, x10]
  467918:	cmp	w10, #0x3d
  46791c:	b.ne	46792c <feof@plt+0x6408c>  // b.any
  467920:	ldrb	w11, [x8]
  467924:	cmp	w11, #0x5d
  467928:	b.eq	467f14 <feof@plt+0x64674>  // b.none
  46792c:	ldur	x11, [x29, #-168]
  467930:	cmp	x11, x8
  467934:	b.eq	467998 <feof@plt+0x640f8>  // b.none
  467938:	and	w11, w9, #0xff
  46793c:	cmp	w11, #0xf
  467940:	b.ls	46794c <feof@plt+0x640ac>  // b.plast
  467944:	sturb	wzr, [x29, #-136]
  467948:	b	467904 <feof@plt+0x64064>
  46794c:	and	x11, x9, #0xff
  467950:	add	w9, w9, #0x1
  467954:	sub	x12, x29, #0x88
  467958:	strb	w10, [x12, x11]
  46795c:	b	467904 <feof@plt+0x64064>
  467960:	and	x10, x11, #0xff
  467964:	cmp	w9, #0x3a
  467968:	sub	x9, x29, #0x88
  46796c:	strb	wzr, [x9, x10]
  467970:	ldur	x9, [x29, #-168]
  467974:	b.eq	467a10 <feof@plt+0x64170>  // b.none
  467978:	b	467e3c <feof@plt+0x6459c>
  46797c:	and	x11, x9, #0xff
  467980:	cmp	w10, #0x2e
  467984:	sub	x10, x29, #0x88
  467988:	strb	wzr, [x10, x11]
  46798c:	mov	x10, x14
  467990:	b.eq	467e80 <feof@plt+0x645e0>  // b.none
  467994:	b	467ed8 <feof@plt+0x64638>
  467998:	and	x11, x9, #0xff
  46799c:	cmp	w10, #0x3d
  4679a0:	sub	x10, x29, #0x88
  4679a4:	strb	wzr, [x10, x11]
  4679a8:	ldur	x10, [x29, #-168]
  4679ac:	b.eq	467f24 <feof@plt+0x64684>  // b.none
  4679b0:	b	467f7c <feof@plt+0x646dc>
  4679b4:	ldur	x14, [x29, #-168]
  4679b8:	add	w10, w11, #0x1
  4679bc:	b	4679ec <feof@plt+0x6414c>
  4679c0:	ldrb	w11, [x12, x11]
  4679c4:	and	w12, w11, #0x7
  4679c8:	lsr	x11, x11, #3
  4679cc:	ldrb	w13, [x24, x11]
  4679d0:	mov	w15, #0x1                   	// #1
  4679d4:	lsl	w12, w15, w12
  4679d8:	add	w9, w9, #0x1
  4679dc:	orr	w12, w13, w12
  4679e0:	cmp	w10, w9
  4679e4:	strb	w12, [x24, x11]
  4679e8:	b.eq	4677a8 <feof@plt+0x63f08>  // b.none
  4679ec:	ldur	x12, [x29, #-152]
  4679f0:	and	x11, x9, #0xff
  4679f4:	cbnz	x12, 4679c0 <feof@plt+0x64120>
  4679f8:	and	w12, w9, #0x7
  4679fc:	b	4679c8 <feof@plt+0x64128>
  467a00:	and	x9, x11, #0xff
  467a04:	sub	x10, x29, #0x88
  467a08:	strb	wzr, [x10, x9]
  467a0c:	add	x9, x8, #0x1
  467a10:	ldrb	w10, [x9]
  467a14:	cmp	w10, #0x5d
  467a18:	b.ne	467e3c <feof@plt+0x6459c>  // b.any
  467a1c:	ldur	w10, [x29, #-136]
  467a20:	ldurh	w11, [x29, #-132]
  467a24:	mov	w13, #0x6c61                	// #27745
  467a28:	movk	w13, #0x756e, lsl #16
  467a2c:	mov	w14, #0x6d                  	// #109
  467a30:	eor	w13, w10, w13
  467a34:	eor	w14, w11, w14
  467a38:	mov	w0, #0x6e63                	// #28259
  467a3c:	mov	w4, #0x7267                	// #29287
  467a40:	movk	w0, #0x7274, lsl #16
  467a44:	mov	w1, #0x6c                  	// #108
  467a48:	movk	w4, #0x7061, lsl #16
  467a4c:	orr	w13, w13, w14
  467a50:	mov	w14, #0x68                  	// #104
  467a54:	eor	w0, w10, w0
  467a58:	eor	w1, w11, w1
  467a5c:	eor	w4, w10, w4
  467a60:	eor	w14, w11, w14
  467a64:	mov	w2, #0x6964                	// #26980
  467a68:	orr	w0, w0, w1
  467a6c:	mov	w1, #0x7270                	// #29296
  467a70:	orr	w14, w4, w14
  467a74:	mov	w4, #0x7570                	// #30064
  467a78:	mov	w17, #0x6c62                	// #27746
  467a7c:	movk	w2, #0x6967, lsl #16
  467a80:	mov	w3, #0x74                  	// #116
  467a84:	movk	w1, #0x6e69, lsl #16
  467a88:	movk	w4, #0x636e, lsl #16
  467a8c:	movk	w17, #0x6e61, lsl #16
  467a90:	mov	w18, #0x6b                  	// #107
  467a94:	eor	w2, w10, w2
  467a98:	eor	w3, w11, w3
  467a9c:	eor	w1, w10, w1
  467aa0:	eor	w4, w10, w4
  467aa4:	mov	w15, #0x6c61                	// #27745
  467aa8:	eor	w17, w10, w17
  467aac:	eor	w18, w11, w18
  467ab0:	orr	w2, w2, w3
  467ab4:	orr	w1, w1, w3
  467ab8:	orr	w3, w4, w3
  467abc:	mov	w4, #0x7073                	// #28787
  467ac0:	movk	w15, #0x6870, lsl #16
  467ac4:	mov	w16, #0x61                  	// #97
  467ac8:	orr	w17, w17, w18
  467acc:	mov	w18, #0x72                  	// #114
  467ad0:	movk	w4, #0x6361, lsl #16
  467ad4:	mov	w5, #0x65                  	// #101
  467ad8:	eor	w15, w10, w15
  467adc:	eor	w16, w11, w16
  467ae0:	eor	w18, w11, w18
  467ae4:	eor	w4, w10, w4
  467ae8:	eor	w11, w11, w5
  467aec:	orr	w15, w15, w16
  467af0:	mov	w16, #0x6f6c                	// #28524
  467af4:	orr	w11, w4, w11
  467af8:	mov	w4, #0x7075                	// #28789
  467afc:	movk	w16, #0x6577, lsl #16
  467b00:	movk	w4, #0x6570, lsl #16
  467b04:	eor	w16, w10, w16
  467b08:	eor	w4, w10, w4
  467b0c:	ldur	w12, [x29, #-133]
  467b10:	orr	w16, w16, w18
  467b14:	orr	w18, w4, w18
  467b18:	mov	w4, #0x6478                	// #25720
  467b1c:	movk	w4, #0x6769, lsl #16
  467b20:	eor	w10, w10, w4
  467b24:	mov	w4, #0x6967                	// #26983
  467b28:	movk	w4, #0x74, lsl #16
  467b2c:	eor	w12, w12, w4
  467b30:	cmp	w13, #0x0
  467b34:	orr	w10, w10, w12
  467b38:	cset	w12, ne  // ne = any
  467b3c:	cmp	w15, #0x0
  467b40:	str	w12, [sp, #72]
  467b44:	cset	w12, ne  // ne = any
  467b48:	cmp	w17, #0x0
  467b4c:	str	w12, [sp, #52]
  467b50:	cset	w12, ne  // ne = any
  467b54:	cmp	w0, #0x0
  467b58:	str	w12, [sp, #40]
  467b5c:	cset	w12, ne  // ne = any
  467b60:	cmp	w2, #0x0
  467b64:	str	w12, [sp, #32]
  467b68:	cset	w12, ne  // ne = any
  467b6c:	cmp	w14, #0x0
  467b70:	str	w12, [sp, #68]
  467b74:	cset	w12, ne  // ne = any
  467b78:	cmp	w16, #0x0
  467b7c:	str	w12, [sp, #60]
  467b80:	cset	w12, ne  // ne = any
  467b84:	cmp	w1, #0x0
  467b88:	str	w12, [sp, #48]
  467b8c:	cset	w12, ne  // ne = any
  467b90:	cmp	w3, #0x0
  467b94:	str	w12, [sp, #36]
  467b98:	cset	w12, ne  // ne = any
  467b9c:	cmp	w11, #0x0
  467ba0:	cset	w11, ne  // ne = any
  467ba4:	cmp	w18, #0x0
  467ba8:	str	w11, [sp, #56]
  467bac:	cset	w11, ne  // ne = any
  467bb0:	cmp	w10, #0x0
  467bb4:	cset	w10, ne  // ne = any
  467bb8:	str	w12, [sp, #76]
  467bbc:	str	w11, [sp, #44]
  467bc0:	str	w10, [sp, #28]
  467bc4:	cbz	w17, 467c20 <feof@plt+0x64380>
  467bc8:	ldr	w10, [sp, #32]
  467bcc:	cbz	w10, 467c20 <feof@plt+0x64380>
  467bd0:	ldr	w10, [sp, #60]
  467bd4:	cbz	w10, 467c20 <feof@plt+0x64380>
  467bd8:	ldr	w10, [sp, #76]
  467bdc:	cbz	w10, 467c20 <feof@plt+0x64380>
  467be0:	ldr	w10, [sp, #36]
  467be4:	cbz	w10, 467c20 <feof@plt+0x64380>
  467be8:	ldr	w10, [sp, #56]
  467bec:	cbz	w10, 467c20 <feof@plt+0x64380>
  467bf0:	ldr	w10, [sp, #28]
  467bf4:	cbz	w10, 467c20 <feof@plt+0x64380>
  467bf8:	ldr	w10, [sp, #72]
  467bfc:	cbz	w10, 467c20 <feof@plt+0x64380>
  467c00:	ldr	w10, [sp, #68]
  467c04:	cbz	w10, 467c20 <feof@plt+0x64380>
  467c08:	ldr	w10, [sp, #48]
  467c0c:	cbz	w10, 467c20 <feof@plt+0x64380>
  467c10:	ldr	w10, [sp, #52]
  467c14:	cbz	w10, 467c20 <feof@plt+0x64380>
  467c18:	ldr	w10, [sp, #44]
  467c1c:	cbnz	w10, 4691dc <feof@plt+0x6593c>
  467c20:	ldur	x10, [x29, #-168]
  467c24:	cmp	x9, x10
  467c28:	b.eq	4691b4 <feof@plt+0x65914>  // b.none
  467c2c:	ldr	x9, [sp, #104]
  467c30:	str	x6, [sp, #16]
  467c34:	cmp	x9, x8
  467c38:	b.eq	469134 <feof@plt+0x65894>  // b.none
  467c3c:	add	x8, x8, #0x2
  467c40:	str	x8, [sp, #8]
  467c44:	ldp	w8, w9, [sp, #44]
  467c48:	ldur	x10, [x29, #-152]
  467c4c:	mov	x26, xzr
  467c50:	cmp	w8, #0x0
  467c54:	cset	w8, eq  // eq = none
  467c58:	cmp	w9, #0x0
  467c5c:	cset	w9, eq  // eq = none
  467c60:	cmp	x10, #0x0
  467c64:	cset	w10, ne  // ne = any
  467c68:	orr	w8, w9, w8
  467c6c:	and	w8, w10, w8
  467c70:	str	w8, [sp, #64]
  467c74:	b	467c84 <feof@plt+0x643e4>
  467c78:	add	x26, x26, #0x1
  467c7c:	cmp	x26, #0x100
  467c80:	b.eq	467fac <feof@plt+0x6470c>  // b.none
  467c84:	ubfx	x8, x26, #3, #29
  467c88:	str	x8, [sp, #80]
  467c8c:	ldr	w8, [sp, #72]
  467c90:	cbnz	w8, 467ca4 <feof@plt+0x64404>
  467c94:	bl	403500 <__ctype_b_loc@plt>
  467c98:	ldr	x8, [x0]
  467c9c:	ldrh	w8, [x8, x26, lsl #1]
  467ca0:	tbnz	w8, #3, 467cec <feof@plt+0x6444c>
  467ca4:	ldr	w8, [sp, #52]
  467ca8:	cbnz	w8, 467cbc <feof@plt+0x6441c>
  467cac:	bl	403500 <__ctype_b_loc@plt>
  467cb0:	ldr	x8, [x0]
  467cb4:	ldrh	w8, [x8, x26, lsl #1]
  467cb8:	tbnz	w8, #10, 467cec <feof@plt+0x6444c>
  467cbc:	ldr	w8, [sp, #40]
  467cc0:	cbnz	w8, 467cd4 <feof@plt+0x64434>
  467cc4:	bl	403500 <__ctype_b_loc@plt>
  467cc8:	ldr	x8, [x0]
  467ccc:	ldrh	w8, [x8, x26, lsl #1]
  467cd0:	tbnz	w8, #0, 467cec <feof@plt+0x6444c>
  467cd4:	ldr	w8, [sp, #32]
  467cd8:	cbnz	w8, 467d08 <feof@plt+0x64468>
  467cdc:	bl	403500 <__ctype_b_loc@plt>
  467ce0:	ldr	x8, [x0]
  467ce4:	ldrh	w8, [x8, x26, lsl #1]
  467ce8:	tbz	w8, #1, 467d08 <feof@plt+0x64468>
  467cec:	ldr	x11, [sp, #80]
  467cf0:	and	w9, w26, #0x7
  467cf4:	mov	w10, #0x1                   	// #1
  467cf8:	lsl	w9, w10, w9
  467cfc:	ldrb	w8, [x24, x11]
  467d00:	orr	w8, w8, w9
  467d04:	strb	w8, [x24, x11]
  467d08:	ldr	w8, [sp, #68]
  467d0c:	cbnz	w8, 467d20 <feof@plt+0x64480>
  467d10:	bl	403500 <__ctype_b_loc@plt>
  467d14:	ldr	x8, [x0]
  467d18:	ldrh	w8, [x8, x26, lsl #1]
  467d1c:	tbnz	w8, #11, 467d68 <feof@plt+0x644c8>
  467d20:	ldr	w8, [sp, #60]
  467d24:	cbnz	w8, 467d38 <feof@plt+0x64498>
  467d28:	bl	403500 <__ctype_b_loc@plt>
  467d2c:	ldr	x8, [x0]
  467d30:	ldrsh	w8, [x8, x26, lsl #1]
  467d34:	tbnz	w8, #31, 467d68 <feof@plt+0x644c8>
  467d38:	ldr	w8, [sp, #48]
  467d3c:	cbnz	w8, 467d50 <feof@plt+0x644b0>
  467d40:	bl	403500 <__ctype_b_loc@plt>
  467d44:	ldr	x8, [x0]
  467d48:	ldrh	w8, [x8, x26, lsl #1]
  467d4c:	tbnz	w8, #9, 467d68 <feof@plt+0x644c8>
  467d50:	ldr	w8, [sp, #36]
  467d54:	cbnz	w8, 467d84 <feof@plt+0x644e4>
  467d58:	bl	403500 <__ctype_b_loc@plt>
  467d5c:	ldr	x8, [x0]
  467d60:	ldrh	w8, [x8, x26, lsl #1]
  467d64:	tbz	w8, #14, 467d84 <feof@plt+0x644e4>
  467d68:	ldr	x11, [sp, #80]
  467d6c:	and	w9, w26, #0x7
  467d70:	mov	w10, #0x1                   	// #1
  467d74:	lsl	w9, w10, w9
  467d78:	ldrb	w8, [x24, x11]
  467d7c:	orr	w8, w8, w9
  467d80:	strb	w8, [x24, x11]
  467d84:	ldr	w8, [sp, #76]
  467d88:	cbnz	w8, 467d9c <feof@plt+0x644fc>
  467d8c:	bl	403500 <__ctype_b_loc@plt>
  467d90:	ldr	x8, [x0]
  467d94:	ldrh	w8, [x8, x26, lsl #1]
  467d98:	tbnz	w8, #2, 467de4 <feof@plt+0x64544>
  467d9c:	ldr	w8, [sp, #56]
  467da0:	cbnz	w8, 467db4 <feof@plt+0x64514>
  467da4:	bl	403500 <__ctype_b_loc@plt>
  467da8:	ldr	x8, [x0]
  467dac:	ldrh	w8, [x8, x26, lsl #1]
  467db0:	tbnz	w8, #13, 467de4 <feof@plt+0x64544>
  467db4:	ldr	w8, [sp, #44]
  467db8:	cbnz	w8, 467dcc <feof@plt+0x6452c>
  467dbc:	bl	403500 <__ctype_b_loc@plt>
  467dc0:	ldr	x8, [x0]
  467dc4:	ldrh	w8, [x8, x26, lsl #1]
  467dc8:	tbnz	w8, #8, 467de4 <feof@plt+0x64544>
  467dcc:	ldr	w8, [sp, #28]
  467dd0:	cbnz	w8, 467e00 <feof@plt+0x64560>
  467dd4:	bl	403500 <__ctype_b_loc@plt>
  467dd8:	ldr	x8, [x0]
  467ddc:	ldrh	w8, [x8, x26, lsl #1]
  467de0:	tbz	w8, #12, 467e00 <feof@plt+0x64560>
  467de4:	ldr	x11, [sp, #80]
  467de8:	and	w9, w26, #0x7
  467dec:	mov	w10, #0x1                   	// #1
  467df0:	lsl	w9, w10, w9
  467df4:	ldrb	w8, [x24, x11]
  467df8:	orr	w8, w8, w9
  467dfc:	strb	w8, [x24, x11]
  467e00:	ldr	w8, [sp, #64]
  467e04:	cbz	w8, 467c78 <feof@plt+0x643d8>
  467e08:	bl	403500 <__ctype_b_loc@plt>
  467e0c:	ldr	x8, [x0]
  467e10:	ldrh	w8, [x8, x26, lsl #1]
  467e14:	tst	w8, #0x300
  467e18:	b.eq	467c78 <feof@plt+0x643d8>  // b.none
  467e1c:	ldr	x11, [sp, #80]
  467e20:	and	w9, w26, #0x7
  467e24:	mov	w10, #0x1                   	// #1
  467e28:	lsl	w9, w10, w9
  467e2c:	ldrb	w8, [x24, x11]
  467e30:	orr	w8, w8, w9
  467e34:	strb	w8, [x24, x11]
  467e38:	b	467c78 <feof@plt+0x643d8>
  467e3c:	mvn	w10, w11
  467e40:	ldrb	w11, [x23, #12]
  467e44:	ldrb	w12, [x23, #8]
  467e48:	orr	x10, x10, #0xffffffffffffff00
  467e4c:	add	x16, x10, x9
  467e50:	orr	w9, w11, #0x8
  467e54:	orr	w10, w12, #0x4
  467e58:	mov	w21, #0x3a                  	// #58
  467e5c:	mov	w8, wzr
  467e60:	strb	w9, [x23, #12]
  467e64:	strb	w10, [x23, #8]
  467e68:	mov	w9, w21
  467e6c:	b	4677dc <feof@plt+0x63f3c>
  467e70:	and	x10, x9, #0xff
  467e74:	sub	x11, x29, #0x88
  467e78:	strb	wzr, [x11, x10]
  467e7c:	mov	x10, x8
  467e80:	ldrb	w11, [x10]
  467e84:	cmp	w11, #0x5d
  467e88:	b.ne	467ed8 <feof@plt+0x64638>  // b.any
  467e8c:	ldurb	w11, [x29, #-136]
  467e90:	cbz	w11, 467ed8 <feof@plt+0x64638>
  467e94:	and	w9, w9, #0xff
  467e98:	cmp	w9, #0x1
  467e9c:	b.ne	4691cc <feof@plt+0x6592c>  // b.any
  467ea0:	cmp	x10, x14
  467ea4:	b.eq	4691b4 <feof@plt+0x65914>  // b.none
  467ea8:	lsr	x9, x11, #3
  467eac:	ldrb	w10, [x24, x9]
  467eb0:	and	w11, w11, #0x7
  467eb4:	mov	w12, #0x1                   	// #1
  467eb8:	lsl	w11, w12, w11
  467ebc:	orr	w10, w10, w11
  467ec0:	strb	w10, [x24, x9]
  467ec4:	ldurb	w9, [x29, #-136]
  467ec8:	ldur	x26, [x29, #-160]
  467ecc:	add	x16, x8, #0x1
  467ed0:	mov	w8, wzr
  467ed4:	b	4677e0 <feof@plt+0x63f40>
  467ed8:	mov	w11, #0xff                  	// #255
  467edc:	mvn	w8, w9
  467ee0:	bics	wzr, w11, w9
  467ee4:	ldrb	w9, [x23, #12]
  467ee8:	ldrb	w11, [x23, #6]
  467eec:	orr	x8, x8, #0xffffffffffffff00
  467ef0:	add	x8, x8, x10
  467ef4:	csel	x16, x10, x8, eq  // eq = none
  467ef8:	orr	w8, w9, #0x8
  467efc:	orr	w9, w11, #0x40
  467f00:	strb	w8, [x23, #12]
  467f04:	strb	w9, [x23, #6]
  467f08:	mov	w9, #0x2e                  	// #46
  467f0c:	mov	w8, wzr
  467f10:	b	4677e0 <feof@plt+0x63f40>
  467f14:	and	x10, x9, #0xff
  467f18:	sub	x11, x29, #0x88
  467f1c:	strb	wzr, [x11, x10]
  467f20:	mov	x10, x8
  467f24:	ldrb	w11, [x10]
  467f28:	cmp	w11, #0x5d
  467f2c:	b.ne	467f7c <feof@plt+0x646dc>  // b.any
  467f30:	ldurb	w11, [x29, #-136]
  467f34:	cbz	w11, 467f7c <feof@plt+0x646dc>
  467f38:	and	w9, w9, #0xff
  467f3c:	cmp	w9, #0x1
  467f40:	b.ne	4691cc <feof@plt+0x6592c>  // b.any
  467f44:	ldur	x9, [x29, #-168]
  467f48:	cmp	x10, x9
  467f4c:	b.eq	4691b4 <feof@plt+0x65914>  // b.none
  467f50:	add	x9, x24, x11, lsr #3
  467f54:	ldrb	w10, [x9]
  467f58:	add	x16, x8, #0x1
  467f5c:	and	w11, w11, #0x7
  467f60:	mov	w8, #0x1                   	// #1
  467f64:	ldur	x26, [x29, #-160]
  467f68:	lsl	w11, w8, w11
  467f6c:	orr	w10, w10, w11
  467f70:	strb	w10, [x9]
  467f74:	mov	w9, w21
  467f78:	b	4677dc <feof@plt+0x63f3c>
  467f7c:	ldrb	w12, [x23, #12]
  467f80:	ldrb	w13, [x23, #8]
  467f84:	mvn	w11, w9
  467f88:	orr	x11, x11, #0xffffffffffffff00
  467f8c:	add	x16, x11, x10
  467f90:	orr	w10, w12, #0x8
  467f94:	orr	w11, w13, #0x20
  467f98:	mov	w8, wzr
  467f9c:	mov	w9, #0x3d                  	// #61
  467fa0:	strb	w10, [x23, #12]
  467fa4:	strb	w11, [x6]
  467fa8:	b	4677dc <feof@plt+0x63f3c>
  467fac:	ldur	x26, [x29, #-160]
  467fb0:	ldp	x16, x6, [sp, #8]
  467fb4:	mov	w8, #0x1                   	// #1
  467fb8:	mov	w9, w21
  467fbc:	b	4677dc <feof@plt+0x63f3c>
  467fc0:	tbz	w21, #17, 469194 <feof@plt+0x658f4>
  467fc4:	mov	w21, #0x29                  	// #41
  467fc8:	b	468a24 <feof@plt+0x65184>
  467fcc:	mov	w9, #0x2e                  	// #46
  467fd0:	ldur	x11, [x29, #-144]
  467fd4:	cmp	x11, x21
  467fd8:	b.cs	4680e8 <feof@plt+0x64848>  // b.hs, b.nlast
  467fdc:	cbz	w26, 4680e8 <feof@plt+0x64848>
  467fe0:	cmp	w9, w8
  467fe4:	b.ne	4680e8 <feof@plt+0x64848>  // b.any
  467fe8:	ldur	x8, [x29, #-144]
  467fec:	ldrb	w8, [x8]
  467ff0:	cbz	x10, 4680c4 <feof@plt+0x64824>
  467ff4:	ldrb	w8, [x10, x8]
  467ff8:	ldrb	w9, [x10, #10]
  467ffc:	b	4680c8 <feof@plt+0x64828>
  468000:	mov	x27, xzr
  468004:	b	468ab0 <feof@plt+0x65210>
  468008:	mov	w21, #0x24                  	// #36
  46800c:	b	468a24 <feof@plt+0x65184>
  468010:	ldp	x24, x8, [x20]
  468014:	mov	x28, x23
  468018:	sub	x9, x23, x24
  46801c:	add	x9, x9, #0x2
  468020:	cmp	x9, x8
  468024:	b.ls	4682ac <feof@plt+0x64a0c>  // b.plast
  468028:	ldur	x21, [x29, #-168]
  46802c:	b	468048 <feof@plt+0x647a8>
  468030:	ldr	x8, [x25]
  468034:	sub	x9, x23, x0
  468038:	add	x9, x9, #0x2
  46803c:	mov	x24, x0
  468040:	cmp	x9, x8
  468044:	b.ls	4682b0 <feof@plt+0x64a10>  // b.plast
  468048:	cmp	x8, #0x10, lsl #12
  46804c:	b.eq	469110 <feof@plt+0x65870>  // b.none
  468050:	lsl	x8, x8, #1
  468054:	cmp	x8, #0x10, lsl #12
  468058:	mov	w9, #0x10000               	// #65536
  46805c:	csel	x1, x8, x9, cc  // cc = lo, ul, last
  468060:	mov	x0, x24
  468064:	str	x1, [x20, #8]
  468068:	bl	403260 <realloc@plt>
  46806c:	str	x0, [x20]
  468070:	cbz	x0, 469108 <feof@plt+0x65868>
  468074:	cmp	x24, x0
  468078:	b.eq	468030 <feof@plt+0x64790>  // b.none
  46807c:	sub	x8, x0, x24
  468080:	cmp	x22, #0x0
  468084:	add	x9, x22, x8
  468088:	add	x10, x28, x8
  46808c:	csel	x22, xzr, x9, eq  // eq = none
  468090:	cmp	x28, #0x0
  468094:	add	x23, x23, x8
  468098:	add	x19, x19, x8
  46809c:	add	x8, x27, x8
  4680a0:	csel	x28, xzr, x10, eq  // eq = none
  4680a4:	cmp	x27, #0x0
  4680a8:	csel	x27, xzr, x8, eq  // eq = none
  4680ac:	b	468030 <feof@plt+0x64790>
  4680b0:	mov	w21, w26
  4680b4:	b	4689c4 <feof@plt+0x65124>
  4680b8:	ldur	x8, [x29, #-160]
  4680bc:	tbnz	w8, #1, 4669f8 <feof@plt+0x63158>
  4680c0:	b	468a1c <feof@plt+0x6517c>
  4680c4:	mov	w9, #0xa                   	// #10
  4680c8:	ldur	x10, [x29, #-160]
  4680cc:	tbnz	w10, #6, 4680e8 <feof@plt+0x64848>
  4680d0:	cmp	w9, w8
  4680d4:	b.ne	4680e8 <feof@plt+0x64848>  // b.any
  4680d8:	mov	w21, #0x1                   	// #1
  4680dc:	mov	w8, #0xd                   	// #13
  4680e0:	mov	x9, x28
  4680e4:	b	4680f4 <feof@plt+0x64854>
  4680e8:	mov	w21, wzr
  4680ec:	sub	x9, x28, #0x3
  4680f0:	mov	w8, #0x12                  	// #18
  4680f4:	sub	w9, w9, w23
  4680f8:	strb	w8, [x23]
  4680fc:	sub	w8, w9, #0x3
  468100:	strb	w8, [x23, #1]
  468104:	lsr	w8, w8, #8
  468108:	strb	w8, [x23, #2]
  46810c:	add	x23, x23, #0x3
  468110:	ldp	x24, x8, [x20]
  468114:	sub	x9, x23, x24
  468118:	add	x9, x9, #0x3
  46811c:	cmp	x9, x8
  468120:	b.hi	468190 <feof@plt+0x648f0>  // b.pmore
  468124:	cmp	w21, #0x0
  468128:	add	x21, x23, #0x3
  46812c:	mov	w8, #0xf                   	// #15
  468130:	sub	w9, w21, w28
  468134:	cinc	w8, w8, ne  // ne = any
  468138:	cmp	x23, x28
  46813c:	sub	w9, w9, #0x3
  468140:	b.eq	468154 <feof@plt+0x648b4>  // b.none
  468144:	ldrb	w10, [x23, #-1]!
  468148:	cmp	x28, x23
  46814c:	strb	w10, [x23, #3]
  468150:	b.ne	468144 <feof@plt+0x648a4>  // b.any
  468154:	ldur	x24, [x29, #-152]
  468158:	strb	w8, [x28]
  46815c:	lsr	w8, w9, #8
  468160:	strb	w9, [x28, #1]
  468164:	strb	w8, [x28, #2]
  468168:	cbz	w26, 4681ec <feof@plt+0x6494c>
  46816c:	mov	x27, xzr
  468170:	mov	x23, x21
  468174:	b	468ab0 <feof@plt+0x65210>
  468178:	ldr	x8, [x25]
  46817c:	sub	x9, x23, x0
  468180:	add	x9, x9, #0x3
  468184:	mov	x24, x0
  468188:	cmp	x9, x8
  46818c:	b.ls	468124 <feof@plt+0x64884>  // b.plast
  468190:	cmp	x8, #0x10, lsl #12
  468194:	b.eq	469110 <feof@plt+0x65870>  // b.none
  468198:	lsl	x8, x8, #1
  46819c:	cmp	x8, #0x10, lsl #12
  4681a0:	mov	w9, #0x10000               	// #65536
  4681a4:	csel	x1, x8, x9, cc  // cc = lo, ul, last
  4681a8:	mov	x0, x24
  4681ac:	str	x1, [x20, #8]
  4681b0:	bl	403260 <realloc@plt>
  4681b4:	str	x0, [x20]
  4681b8:	cbz	x0, 469108 <feof@plt+0x65868>
  4681bc:	cmp	x24, x0
  4681c0:	b.eq	468178 <feof@plt+0x648d8>  // b.none
  4681c4:	sub	x8, x0, x24
  4681c8:	cmp	x22, #0x0
  4681cc:	add	x9, x22, x8
  4681d0:	add	x23, x23, x8
  4681d4:	add	x19, x19, x8
  4681d8:	add	x8, x28, x8
  4681dc:	csel	x22, xzr, x9, eq  // eq = none
  4681e0:	cmp	x28, #0x0
  4681e4:	csel	x28, xzr, x8, eq  // eq = none
  4681e8:	b	468178 <feof@plt+0x648d8>
  4681ec:	ldp	x23, x8, [x20]
  4681f0:	sub	x9, x21, x23
  4681f4:	add	x9, x9, #0x3
  4681f8:	cmp	x9, x8
  4681fc:	b.ls	468278 <feof@plt+0x649d8>  // b.plast
  468200:	mov	w26, #0x10000               	// #65536
  468204:	b	468220 <feof@plt+0x64980>
  468208:	ldr	x8, [x25]
  46820c:	sub	x9, x21, x0
  468210:	add	x9, x9, #0x3
  468214:	mov	x23, x0
  468218:	cmp	x9, x8
  46821c:	b.ls	468278 <feof@plt+0x649d8>  // b.plast
  468220:	cmp	x8, #0x10, lsl #12
  468224:	b.eq	469110 <feof@plt+0x65870>  // b.none
  468228:	lsl	x8, x8, #1
  46822c:	cmp	x8, #0x10, lsl #12
  468230:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  468234:	mov	x0, x23
  468238:	str	x1, [x20, #8]
  46823c:	bl	403260 <realloc@plt>
  468240:	str	x0, [x20]
  468244:	cbz	x0, 469108 <feof@plt+0x65868>
  468248:	cmp	x23, x0
  46824c:	b.eq	468208 <feof@plt+0x64968>  // b.none
  468250:	sub	x8, x0, x23
  468254:	cmp	x22, #0x0
  468258:	add	x9, x22, x8
  46825c:	add	x21, x21, x8
  468260:	add	x19, x19, x8
  468264:	add	x8, x28, x8
  468268:	csel	x22, xzr, x9, eq  // eq = none
  46826c:	cmp	x28, #0x0
  468270:	csel	x28, xzr, x8, eq  // eq = none
  468274:	b	468208 <feof@plt+0x64968>
  468278:	cmp	x21, x28
  46827c:	b.eq	468294 <feof@plt+0x649f4>  // b.none
  468280:	mov	x8, x21
  468284:	ldrb	w9, [x8, #-1]!
  468288:	cmp	x28, x8
  46828c:	strb	w9, [x8, #3]
  468290:	b.ne	468284 <feof@plt+0x649e4>  // b.any
  468294:	mov	w8, #0x313                 	// #787
  468298:	mov	x27, xzr
  46829c:	strh	w8, [x28]
  4682a0:	strb	wzr, [x28, #2]
  4682a4:	add	x23, x21, #0x3
  4682a8:	b	468ab0 <feof@plt+0x65210>
  4682ac:	ldur	x21, [x29, #-168]
  4682b0:	ldur	x24, [x29, #-152]
  4682b4:	mov	w8, #0x8                   	// #8
  4682b8:	strb	w8, [x23]
  4682bc:	add	x8, x23, #0x2
  4682c0:	strb	w26, [x23, #1]
  4682c4:	mov	x23, x8
  4682c8:	b	468ab4 <feof@plt+0x65214>
  4682cc:	ldur	x8, [x29, #-160]
  4682d0:	tbnz	w8, #19, 468df8 <feof@plt+0x65558>
  4682d4:	ldp	x24, x8, [x20]
  4682d8:	sub	x9, x23, x24
  4682dc:	add	x9, x9, #0x1
  4682e0:	cmp	x9, x8
  4682e4:	b.ls	468edc <feof@plt+0x6563c>  // b.plast
  4682e8:	ldur	x21, [x29, #-168]
  4682ec:	mov	w26, #0x10000               	// #65536
  4682f0:	b	46830c <feof@plt+0x64a6c>
  4682f4:	ldr	x8, [x25]
  4682f8:	sub	x9, x23, x0
  4682fc:	add	x9, x9, #0x1
  468300:	mov	x24, x0
  468304:	cmp	x9, x8
  468308:	b.ls	468fa4 <feof@plt+0x65704>  // b.plast
  46830c:	cmp	x8, #0x10, lsl #12
  468310:	b.eq	469110 <feof@plt+0x65870>  // b.none
  468314:	lsl	x8, x8, #1
  468318:	cmp	x8, #0x10, lsl #12
  46831c:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  468320:	mov	x0, x24
  468324:	str	x1, [x20, #8]
  468328:	bl	403260 <realloc@plt>
  46832c:	str	x0, [x20]
  468330:	cbz	x0, 469108 <feof@plt+0x65868>
  468334:	cmp	x24, x0
  468338:	b.eq	4682f4 <feof@plt+0x64a54>  // b.none
  46833c:	sub	x8, x0, x24
  468340:	cmp	x22, #0x0
  468344:	add	x9, x22, x8
  468348:	add	x10, x28, x8
  46834c:	csel	x22, xzr, x9, eq  // eq = none
  468350:	cmp	x28, #0x0
  468354:	add	x23, x23, x8
  468358:	add	x19, x19, x8
  46835c:	add	x8, x27, x8
  468360:	csel	x28, xzr, x10, eq  // eq = none
  468364:	cmp	x27, #0x0
  468368:	csel	x27, xzr, x8, eq  // eq = none
  46836c:	b	4682f4 <feof@plt+0x64a54>
  468370:	ldur	x8, [x29, #-160]
  468374:	tbnz	w8, #13, 468e00 <feof@plt+0x65560>
  468378:	ldr	x27, [sp, #160]
  46837c:	ldr	x8, [x20, #48]
  468380:	ldr	x26, [sp, #176]
  468384:	lsr	x21, x27, #32
  468388:	add	x8, x8, #0x1
  46838c:	cmp	w21, w27
  468390:	str	x8, [x20, #48]
  468394:	b.ne	4683bc <feof@plt+0x64b1c>  // b.any
  468398:	lsl	w24, w27, #1
  46839c:	add	x8, x24, w24, uxtw #2
  4683a0:	lsl	x1, x8, #3
  4683a4:	mov	x0, x26
  4683a8:	bl	403260 <realloc@plt>
  4683ac:	cbz	x0, 469108 <feof@plt+0x65868>
  4683b0:	and	x8, x27, #0xffffffff00000000
  4683b4:	mov	x26, x0
  4683b8:	orr	x27, x24, x8
  4683bc:	ldr	x24, [x20]
  4683c0:	ldr	w12, [sp, #148]
  4683c4:	mov	w13, #0x28                  	// #40
  4683c8:	cmp	x22, #0x0
  4683cc:	sub	x11, x22, x24
  4683d0:	add	w12, w12, #0x1
  4683d4:	madd	x8, x21, x13, x26
  4683d8:	sub	x10, x19, x24
  4683dc:	sub	x9, x23, x24
  4683e0:	csinc	x11, xzr, x11, eq  // eq = none
  4683e4:	cmp	w12, #0xff
  4683e8:	str	x9, [x8, #24]
  4683ec:	stp	x10, x11, [x8]
  4683f0:	str	w12, [sp, #148]
  4683f4:	str	w12, [x8, #32]
  4683f8:	b.hi	468474 <feof@plt+0x64bd4>  // b.pmore
  4683fc:	add	x8, x9, #0x2
  468400:	madd	x10, x21, x13, x26
  468404:	str	x8, [x10, #16]
  468408:	ldr	x8, [x25]
  46840c:	add	x9, x9, #0x3
  468410:	cmp	x9, x8
  468414:	b.ls	468484 <feof@plt+0x64be4>  // b.plast
  468418:	ldur	x21, [x29, #-168]
  46841c:	cmp	x8, #0x10, lsl #12
  468420:	b.eq	469110 <feof@plt+0x65870>  // b.none
  468424:	lsl	x8, x8, #1
  468428:	cmp	x8, #0x10, lsl #12
  46842c:	mov	w9, #0x10000               	// #65536
  468430:	csel	x1, x8, x9, cc  // cc = lo, ul, last
  468434:	mov	x0, x24
  468438:	str	x1, [x20, #8]
  46843c:	bl	403260 <realloc@plt>
  468440:	str	x0, [x20]
  468444:	cbz	x0, 469108 <feof@plt+0x65868>
  468448:	sub	x8, x0, x24
  46844c:	cmp	x24, x0
  468450:	add	x9, x23, x8
  468454:	ldr	x8, [x25]
  468458:	csel	x23, x23, x9, eq  // eq = none
  46845c:	sub	x9, x23, x0
  468460:	add	x9, x9, #0x3
  468464:	cmp	x9, x8
  468468:	mov	x24, x0
  46846c:	b.hi	46841c <feof@plt+0x64b7c>  // b.pmore
  468470:	b	468488 <feof@plt+0x64be8>
  468474:	ldur	x21, [x29, #-168]
  468478:	str	x27, [sp, #160]
  46847c:	str	x26, [sp, #176]
  468480:	b	4684ac <feof@plt+0x64c0c>
  468484:	ldur	x21, [x29, #-168]
  468488:	mov	w8, #0x6                   	// #6
  46848c:	strb	w8, [x23]
  468490:	ldr	w8, [sp, #148]
  468494:	strb	wzr, [x23, #2]
  468498:	str	x27, [sp, #160]
  46849c:	str	x26, [sp, #176]
  4684a0:	strb	w8, [x23, #1]
  4684a4:	add	x8, x23, #0x3
  4684a8:	mov	x23, x8
  4684ac:	ldr	x9, [sp, #160]
  4684b0:	ldur	x24, [x29, #-152]
  4684b4:	mov	x8, #0x100000000           	// #4294967296
  4684b8:	mov	x22, xzr
  4684bc:	add	x9, x9, x8
  4684c0:	mov	x28, xzr
  4684c4:	mov	x27, xzr
  4684c8:	str	x9, [sp, #160]
  4684cc:	mov	x19, x23
  4684d0:	b	468ab4 <feof@plt+0x65214>
  4684d4:	ldur	x21, [x29, #-160]
  4684d8:	tbnz	w21, #13, 4684ec <feof@plt+0x64c4c>
  4684dc:	ldr	x8, [sp, #160]
  4684e0:	lsr	x8, x8, #32
  4684e4:	cbnz	x8, 466be0 <feof@plt+0x63340>
  4684e8:	tbz	w21, #17, 469194 <feof@plt+0x658f4>
  4684ec:	mov	w21, #0x29                  	// #41
  4684f0:	cbnz	x24, 468a20 <feof@plt+0x65180>
  4684f4:	b	468a24 <feof@plt+0x65184>
  4684f8:	ldur	x8, [x29, #-160]
  4684fc:	tbnz	w8, #19, 468e0c <feof@plt+0x6556c>
  468500:	ldp	x24, x8, [x20]
  468504:	sub	x9, x23, x24
  468508:	add	x9, x9, #0x1
  46850c:	cmp	x9, x8
  468510:	b.ls	468ee8 <feof@plt+0x65648>  // b.plast
  468514:	ldur	x21, [x29, #-168]
  468518:	mov	w26, #0x10000               	// #65536
  46851c:	b	468538 <feof@plt+0x64c98>
  468520:	ldr	x8, [x25]
  468524:	sub	x9, x23, x0
  468528:	add	x9, x9, #0x1
  46852c:	mov	x24, x0
  468530:	cmp	x9, x8
  468534:	b.ls	468fac <feof@plt+0x6570c>  // b.plast
  468538:	cmp	x8, #0x10, lsl #12
  46853c:	b.eq	469110 <feof@plt+0x65870>  // b.none
  468540:	lsl	x8, x8, #1
  468544:	cmp	x8, #0x10, lsl #12
  468548:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  46854c:	mov	x0, x24
  468550:	str	x1, [x20, #8]
  468554:	bl	403260 <realloc@plt>
  468558:	str	x0, [x20]
  46855c:	cbz	x0, 469108 <feof@plt+0x65868>
  468560:	cmp	x24, x0
  468564:	b.eq	468520 <feof@plt+0x64c80>  // b.none
  468568:	sub	x8, x0, x24
  46856c:	cmp	x22, #0x0
  468570:	add	x9, x22, x8
  468574:	add	x10, x28, x8
  468578:	csel	x22, xzr, x9, eq  // eq = none
  46857c:	cmp	x28, #0x0
  468580:	add	x23, x23, x8
  468584:	add	x19, x19, x8
  468588:	add	x8, x27, x8
  46858c:	csel	x28, xzr, x10, eq  // eq = none
  468590:	cmp	x27, #0x0
  468594:	csel	x27, xzr, x8, eq  // eq = none
  468598:	b	468520 <feof@plt+0x64c80>
  46859c:	ldur	x8, [x29, #-160]
  4685a0:	tbnz	w8, #19, 468e14 <feof@plt+0x65574>
  4685a4:	ldp	x24, x8, [x20]
  4685a8:	sub	x9, x23, x24
  4685ac:	add	x9, x9, #0x1
  4685b0:	cmp	x9, x8
  4685b4:	b.ls	468ef4 <feof@plt+0x65654>  // b.plast
  4685b8:	ldur	x21, [x29, #-168]
  4685bc:	mov	w26, #0x10000               	// #65536
  4685c0:	b	4685dc <feof@plt+0x64d3c>
  4685c4:	ldr	x8, [x25]
  4685c8:	sub	x9, x23, x0
  4685cc:	add	x9, x9, #0x1
  4685d0:	mov	x24, x0
  4685d4:	cmp	x9, x8
  4685d8:	b.ls	468fb4 <feof@plt+0x65714>  // b.plast
  4685dc:	cmp	x8, #0x10, lsl #12
  4685e0:	b.eq	469110 <feof@plt+0x65870>  // b.none
  4685e4:	lsl	x8, x8, #1
  4685e8:	cmp	x8, #0x10, lsl #12
  4685ec:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  4685f0:	mov	x0, x24
  4685f4:	str	x1, [x20, #8]
  4685f8:	bl	403260 <realloc@plt>
  4685fc:	str	x0, [x20]
  468600:	cbz	x0, 469108 <feof@plt+0x65868>
  468604:	cmp	x24, x0
  468608:	b.eq	4685c4 <feof@plt+0x64d24>  // b.none
  46860c:	sub	x8, x0, x24
  468610:	cmp	x22, #0x0
  468614:	add	x9, x22, x8
  468618:	add	x10, x28, x8
  46861c:	csel	x22, xzr, x9, eq  // eq = none
  468620:	cmp	x28, #0x0
  468624:	add	x23, x23, x8
  468628:	add	x19, x19, x8
  46862c:	add	x8, x27, x8
  468630:	csel	x28, xzr, x10, eq  // eq = none
  468634:	cmp	x27, #0x0
  468638:	csel	x27, xzr, x8, eq  // eq = none
  46863c:	b	4685c4 <feof@plt+0x64d24>
  468640:	ldur	x8, [x29, #-160]
  468644:	tbnz	w8, #19, 468e1c <feof@plt+0x6557c>
  468648:	ldp	x24, x8, [x20]
  46864c:	sub	x9, x23, x24
  468650:	add	x9, x9, #0x1
  468654:	cmp	x9, x8
  468658:	b.ls	468f00 <feof@plt+0x65660>  // b.plast
  46865c:	ldur	x21, [x29, #-168]
  468660:	mov	w26, #0x10000               	// #65536
  468664:	b	468680 <feof@plt+0x64de0>
  468668:	ldr	x8, [x25]
  46866c:	sub	x9, x23, x0
  468670:	add	x9, x9, #0x1
  468674:	mov	x24, x0
  468678:	cmp	x9, x8
  46867c:	b.ls	468fbc <feof@plt+0x6571c>  // b.plast
  468680:	cmp	x8, #0x10, lsl #12
  468684:	b.eq	469110 <feof@plt+0x65870>  // b.none
  468688:	lsl	x8, x8, #1
  46868c:	cmp	x8, #0x10, lsl #12
  468690:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  468694:	mov	x0, x24
  468698:	str	x1, [x20, #8]
  46869c:	bl	403260 <realloc@plt>
  4686a0:	str	x0, [x20]
  4686a4:	cbz	x0, 469108 <feof@plt+0x65868>
  4686a8:	cmp	x24, x0
  4686ac:	b.eq	468668 <feof@plt+0x64dc8>  // b.none
  4686b0:	sub	x8, x0, x24
  4686b4:	cmp	x22, #0x0
  4686b8:	add	x9, x22, x8
  4686bc:	add	x10, x28, x8
  4686c0:	csel	x22, xzr, x9, eq  // eq = none
  4686c4:	cmp	x28, #0x0
  4686c8:	add	x23, x23, x8
  4686cc:	add	x19, x19, x8
  4686d0:	add	x8, x27, x8
  4686d4:	csel	x28, xzr, x10, eq  // eq = none
  4686d8:	cmp	x27, #0x0
  4686dc:	csel	x27, xzr, x8, eq  // eq = none
  4686e0:	b	468668 <feof@plt+0x64dc8>
  4686e4:	ldur	x8, [x29, #-160]
  4686e8:	tbnz	w8, #19, 468e24 <feof@plt+0x65584>
  4686ec:	ldp	x24, x8, [x20]
  4686f0:	mov	x28, x23
  4686f4:	sub	x9, x23, x24
  4686f8:	add	x9, x9, #0x1
  4686fc:	cmp	x9, x8
  468700:	b.ls	468f0c <feof@plt+0x6566c>  // b.plast
  468704:	ldur	x21, [x29, #-168]
  468708:	mov	w26, #0x10000               	// #65536
  46870c:	b	468728 <feof@plt+0x64e88>
  468710:	ldr	x8, [x25]
  468714:	sub	x9, x23, x0
  468718:	add	x9, x9, #0x1
  46871c:	mov	x24, x0
  468720:	cmp	x9, x8
  468724:	b.ls	468fc4 <feof@plt+0x65724>  // b.plast
  468728:	cmp	x8, #0x10, lsl #12
  46872c:	b.eq	469110 <feof@plt+0x65870>  // b.none
  468730:	lsl	x8, x8, #1
  468734:	cmp	x8, #0x10, lsl #12
  468738:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  46873c:	mov	x0, x24
  468740:	str	x1, [x20, #8]
  468744:	bl	403260 <realloc@plt>
  468748:	str	x0, [x20]
  46874c:	cbz	x0, 469108 <feof@plt+0x65868>
  468750:	cmp	x24, x0
  468754:	b.eq	468710 <feof@plt+0x64e70>  // b.none
  468758:	sub	x8, x0, x24
  46875c:	cmp	x22, #0x0
  468760:	add	x9, x22, x8
  468764:	add	x10, x28, x8
  468768:	csel	x22, xzr, x9, eq  // eq = none
  46876c:	cmp	x28, #0x0
  468770:	add	x23, x23, x8
  468774:	add	x19, x19, x8
  468778:	add	x8, x27, x8
  46877c:	csel	x28, xzr, x10, eq  // eq = none
  468780:	cmp	x27, #0x0
  468784:	csel	x27, xzr, x8, eq  // eq = none
  468788:	b	468710 <feof@plt+0x64e70>
  46878c:	ldur	x8, [x29, #-160]
  468790:	tbnz	w8, #19, 468e2c <feof@plt+0x6558c>
  468794:	ldp	x24, x8, [x20]
  468798:	sub	x9, x23, x24
  46879c:	add	x9, x9, #0x1
  4687a0:	cmp	x9, x8
  4687a4:	b.ls	468f18 <feof@plt+0x65678>  // b.plast
  4687a8:	ldur	x21, [x29, #-168]
  4687ac:	mov	w26, #0x10000               	// #65536
  4687b0:	b	4687cc <feof@plt+0x64f2c>
  4687b4:	ldr	x8, [x25]
  4687b8:	sub	x9, x23, x0
  4687bc:	add	x9, x9, #0x1
  4687c0:	mov	x24, x0
  4687c4:	cmp	x9, x8
  4687c8:	b.ls	468fcc <feof@plt+0x6572c>  // b.plast
  4687cc:	cmp	x8, #0x10, lsl #12
  4687d0:	b.eq	469110 <feof@plt+0x65870>  // b.none
  4687d4:	lsl	x8, x8, #1
  4687d8:	cmp	x8, #0x10, lsl #12
  4687dc:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  4687e0:	mov	x0, x24
  4687e4:	str	x1, [x20, #8]
  4687e8:	bl	403260 <realloc@plt>
  4687ec:	str	x0, [x20]
  4687f0:	cbz	x0, 469108 <feof@plt+0x65868>
  4687f4:	cmp	x24, x0
  4687f8:	b.eq	4687b4 <feof@plt+0x64f14>  // b.none
  4687fc:	sub	x8, x0, x24
  468800:	cmp	x22, #0x0
  468804:	add	x9, x22, x8
  468808:	add	x10, x28, x8
  46880c:	csel	x22, xzr, x9, eq  // eq = none
  468810:	cmp	x28, #0x0
  468814:	add	x23, x23, x8
  468818:	add	x19, x19, x8
  46881c:	add	x8, x27, x8
  468820:	csel	x28, xzr, x10, eq  // eq = none
  468824:	cmp	x27, #0x0
  468828:	csel	x27, xzr, x8, eq  // eq = none
  46882c:	b	4687b4 <feof@plt+0x64f14>
  468830:	ldur	x8, [x29, #-160]
  468834:	tbnz	w8, #19, 468e34 <feof@plt+0x65594>
  468838:	ldp	x24, x8, [x20]
  46883c:	sub	x9, x23, x24
  468840:	add	x9, x9, #0x1
  468844:	cmp	x9, x8
  468848:	b.ls	468f24 <feof@plt+0x65684>  // b.plast
  46884c:	ldur	x21, [x29, #-168]
  468850:	mov	w26, #0x10000               	// #65536
  468854:	b	468870 <feof@plt+0x64fd0>
  468858:	ldr	x8, [x25]
  46885c:	sub	x9, x23, x0
  468860:	add	x9, x9, #0x1
  468864:	mov	x24, x0
  468868:	cmp	x9, x8
  46886c:	b.ls	468fd4 <feof@plt+0x65734>  // b.plast
  468870:	cmp	x8, #0x10, lsl #12
  468874:	b.eq	469110 <feof@plt+0x65870>  // b.none
  468878:	lsl	x8, x8, #1
  46887c:	cmp	x8, #0x10, lsl #12
  468880:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  468884:	mov	x0, x24
  468888:	str	x1, [x20, #8]
  46888c:	bl	403260 <realloc@plt>
  468890:	str	x0, [x20]
  468894:	cbz	x0, 469108 <feof@plt+0x65868>
  468898:	cmp	x24, x0
  46889c:	b.eq	468858 <feof@plt+0x64fb8>  // b.none
  4688a0:	sub	x8, x0, x24
  4688a4:	cmp	x22, #0x0
  4688a8:	add	x9, x22, x8
  4688ac:	add	x10, x28, x8
  4688b0:	csel	x22, xzr, x9, eq  // eq = none
  4688b4:	cmp	x28, #0x0
  4688b8:	add	x23, x23, x8
  4688bc:	add	x19, x19, x8
  4688c0:	add	x8, x27, x8
  4688c4:	csel	x28, xzr, x10, eq  // eq = none
  4688c8:	cmp	x27, #0x0
  4688cc:	csel	x27, xzr, x8, eq  // eq = none
  4688d0:	b	468858 <feof@plt+0x64fb8>
  4688d4:	ldur	x8, [x29, #-160]
  4688d8:	tbnz	w8, #19, 468e3c <feof@plt+0x6559c>
  4688dc:	ldp	x24, x8, [x20]
  4688e0:	mov	x28, x23
  4688e4:	sub	x9, x23, x24
  4688e8:	add	x9, x9, #0x1
  4688ec:	cmp	x9, x8
  4688f0:	b.ls	468f30 <feof@plt+0x65690>  // b.plast
  4688f4:	ldur	x21, [x29, #-168]
  4688f8:	mov	w26, #0x10000               	// #65536
  4688fc:	b	468918 <feof@plt+0x65078>
  468900:	ldr	x8, [x25]
  468904:	sub	x9, x23, x0
  468908:	add	x9, x9, #0x1
  46890c:	mov	x24, x0
  468910:	cmp	x9, x8
  468914:	b.ls	468fdc <feof@plt+0x6573c>  // b.plast
  468918:	cmp	x8, #0x10, lsl #12
  46891c:	b.eq	469110 <feof@plt+0x65870>  // b.none
  468920:	lsl	x8, x8, #1
  468924:	cmp	x8, #0x10, lsl #12
  468928:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  46892c:	mov	x0, x24
  468930:	str	x1, [x20, #8]
  468934:	bl	403260 <realloc@plt>
  468938:	str	x0, [x20]
  46893c:	cbz	x0, 469108 <feof@plt+0x65868>
  468940:	cmp	x24, x0
  468944:	b.eq	468900 <feof@plt+0x65060>  // b.none
  468948:	sub	x8, x0, x24
  46894c:	cmp	x22, #0x0
  468950:	add	x9, x22, x8
  468954:	add	x10, x28, x8
  468958:	csel	x22, xzr, x9, eq  // eq = none
  46895c:	cmp	x28, #0x0
  468960:	add	x23, x23, x8
  468964:	add	x19, x19, x8
  468968:	add	x8, x27, x8
  46896c:	csel	x28, xzr, x10, eq  // eq = none
  468970:	cmp	x27, #0x0
  468974:	csel	x27, xzr, x8, eq  // eq = none
  468978:	b	468900 <feof@plt+0x65060>
  46897c:	ldr	x8, [sp, #128]
  468980:	cmp	x8, #0x200
  468984:	b.eq	466f50 <feof@plt+0x636b0>  // b.none
  468988:	mov	w21, #0x7b                  	// #123
  46898c:	cbnz	x24, 468a20 <feof@plt+0x65180>
  468990:	b	468a24 <feof@plt+0x65184>
  468994:	ldr	x8, [sp, #96]
  468998:	mov	w21, #0x7c                  	// #124
  46899c:	cbnz	x8, 468a1c <feof@plt+0x6517c>
  4689a0:	b	466fbc <feof@plt+0x6371c>
  4689a4:	mov	w8, #0x2c                  	// #44
  4689a8:	mov	x14, x12
  4689ac:	b	4689c0 <feof@plt+0x65120>
  4689b0:	add	x14, x14, #0x1
  4689b4:	b	4689bc <feof@plt+0x6511c>
  4689b8:	ldur	x14, [x29, #-168]
  4689bc:	tbz	w21, #31, 4689c4 <feof@plt+0x65124>
  4689c0:	mov	w21, #0x7fff                	// #32767
  4689c4:	tbnz	w26, #31, 468a0c <feof@plt+0x6516c>
  4689c8:	cmp	w26, w21
  4689cc:	b.gt	468a0c <feof@plt+0x6516c>
  4689d0:	ldur	x9, [x29, #-160]
  4689d4:	tbnz	w9, #12, 4689f8 <feof@plt+0x65158>
  4689d8:	ldur	x9, [x29, #-168]
  4689dc:	cmp	x14, x9
  4689e0:	b.eq	468a0c <feof@plt+0x6516c>  // b.none
  4689e4:	cmp	w8, #0x5c
  4689e8:	b.ne	468a0c <feof@plt+0x6516c>  // b.any
  4689ec:	ldrb	w8, [x14], #1
  4689f0:	cbz	x24, 4689f8 <feof@plt+0x65158>
  4689f4:	ldrb	w8, [x24, x8]
  4689f8:	cmp	w8, #0x7d
  4689fc:	b.ne	468a0c <feof@plt+0x6516c>  // b.any
  468a00:	cbz	x28, 468c10 <feof@plt+0x65370>
  468a04:	mov	x0, x28
  468a08:	b	468c28 <feof@plt+0x65388>
  468a0c:	ldur	x8, [x29, #-160]
  468a10:	tbz	w8, #21, 469164 <feof@plt+0x658c4>
  468a14:	mov	w21, #0x7b                  	// #123
  468a18:	tbnz	w8, #12, 468a24 <feof@plt+0x65184>
  468a1c:	cbz	x24, 468a24 <feof@plt+0x65184>
  468a20:	ldrb	w21, [x24, w21, uxtw]
  468a24:	ldur	x10, [x29, #-160]
  468a28:	mov	w26, #0x10000               	// #65536
  468a2c:	cbz	x27, 468a64 <feof@plt+0x651c4>
  468a30:	ldrb	w8, [x27]
  468a34:	cmp	x8, #0xff
  468a38:	b.eq	468a64 <feof@plt+0x651c4>  // b.none
  468a3c:	add	x8, x27, x8
  468a40:	add	x8, x8, #0x1
  468a44:	cmp	x8, x23
  468a48:	b.ne	468a64 <feof@plt+0x651c4>  // b.any
  468a4c:	ldur	x8, [x29, #-144]
  468a50:	ldrb	w8, [x8]
  468a54:	cmp	w8, #0x2a
  468a58:	b.eq	468a64 <feof@plt+0x651c4>  // b.none
  468a5c:	cmp	w8, #0x5e
  468a60:	b.ne	468bb4 <feof@plt+0x65314>  // b.any
  468a64:	ldp	x24, x8, [x20]
  468a68:	mov	x28, x23
  468a6c:	sub	x9, x23, x24
  468a70:	add	x9, x9, #0x2
  468a74:	cmp	x9, x8
  468a78:	b.hi	468ae0 <feof@plt+0x65240>  // b.pmore
  468a7c:	mov	w8, #0x2                   	// #2
  468a80:	add	x27, x23, #0x1
  468a84:	strh	w8, [x23], #2
  468a88:	ldp	x24, x8, [x20]
  468a8c:	sub	x9, x23, x24
  468a90:	add	x9, x9, #0x1
  468a94:	cmp	x9, x8
  468a98:	b.hi	468b50 <feof@plt+0x652b0>  // b.pmore
  468a9c:	strb	w21, [x23], #1
  468aa0:	ldrb	w8, [x27]
  468aa4:	add	w8, w8, #0x1
  468aa8:	strb	w8, [x27]
  468aac:	ldur	x24, [x29, #-152]
  468ab0:	ldur	x21, [x29, #-168]
  468ab4:	ldur	x8, [x29, #-144]
  468ab8:	cmp	x8, x21
  468abc:	mov	x26, x8
  468ac0:	b.ne	4669bc <feof@plt+0x6311c>  // b.any
  468ac4:	b	469044 <feof@plt+0x657a4>
  468ac8:	ldr	x8, [x25]
  468acc:	sub	x9, x23, x0
  468ad0:	add	x9, x9, #0x2
  468ad4:	mov	x24, x0
  468ad8:	cmp	x9, x8
  468adc:	b.ls	468a7c <feof@plt+0x651dc>  // b.plast
  468ae0:	cmp	x8, #0x10, lsl #12
  468ae4:	b.eq	469110 <feof@plt+0x65870>  // b.none
  468ae8:	lsl	x8, x8, #1
  468aec:	cmp	x8, #0x10, lsl #12
  468af0:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  468af4:	mov	x0, x24
  468af8:	str	x1, [x20, #8]
  468afc:	bl	403260 <realloc@plt>
  468b00:	str	x0, [x20]
  468b04:	cbz	x0, 469108 <feof@plt+0x65868>
  468b08:	cmp	x24, x0
  468b0c:	b.eq	468ac8 <feof@plt+0x65228>  // b.none
  468b10:	sub	x8, x0, x24
  468b14:	cmp	x22, #0x0
  468b18:	add	x9, x22, x8
  468b1c:	add	x23, x23, x8
  468b20:	add	x19, x19, x8
  468b24:	add	x8, x28, x8
  468b28:	csel	x22, xzr, x9, eq  // eq = none
  468b2c:	cmp	x28, #0x0
  468b30:	csel	x28, xzr, x8, eq  // eq = none
  468b34:	b	468ac8 <feof@plt+0x65228>
  468b38:	ldr	x8, [x25]
  468b3c:	sub	x9, x23, x0
  468b40:	add	x9, x9, #0x1
  468b44:	mov	x24, x0
  468b48:	cmp	x9, x8
  468b4c:	b.ls	468a9c <feof@plt+0x651fc>  // b.plast
  468b50:	cmp	x8, #0x10, lsl #12
  468b54:	b.eq	469110 <feof@plt+0x65870>  // b.none
  468b58:	lsl	x8, x8, #1
  468b5c:	cmp	x8, #0x10, lsl #12
  468b60:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  468b64:	mov	x0, x24
  468b68:	str	x1, [x20, #8]
  468b6c:	bl	403260 <realloc@plt>
  468b70:	str	x0, [x20]
  468b74:	cbz	x0, 469108 <feof@plt+0x65868>
  468b78:	cmp	x24, x0
  468b7c:	b.eq	468b38 <feof@plt+0x65298>  // b.none
  468b80:	sub	x8, x0, x24
  468b84:	cmp	x22, #0x0
  468b88:	add	x9, x22, x8
  468b8c:	add	x10, x28, x8
  468b90:	csel	x22, xzr, x9, eq  // eq = none
  468b94:	cmp	x28, #0x0
  468b98:	add	x23, x23, x8
  468b9c:	add	x19, x19, x8
  468ba0:	add	x8, x27, x8
  468ba4:	csel	x28, xzr, x10, eq  // eq = none
  468ba8:	cmp	x27, #0x0
  468bac:	csel	x27, xzr, x8, eq  // eq = none
  468bb0:	b	468b38 <feof@plt+0x65298>
  468bb4:	tbnz	w10, #1, 468bcc <feof@plt+0x6532c>
  468bb8:	cmp	w8, #0x2b
  468bbc:	b.eq	468a64 <feof@plt+0x651c4>  // b.none
  468bc0:	cmp	w8, #0x3f
  468bc4:	b.eq	468a64 <feof@plt+0x651c4>  // b.none
  468bc8:	b	468bec <feof@plt+0x6534c>
  468bcc:	cmp	w8, #0x5c
  468bd0:	b.ne	468bec <feof@plt+0x6534c>  // b.any
  468bd4:	ldur	x9, [x29, #-144]
  468bd8:	ldrb	w9, [x9, #1]
  468bdc:	cmp	w9, #0x2b
  468be0:	b.eq	468a64 <feof@plt+0x651c4>  // b.none
  468be4:	cmp	w9, #0x3f
  468be8:	b.eq	468a64 <feof@plt+0x651c4>  // b.none
  468bec:	tbz	w10, #9, 468a88 <feof@plt+0x651e8>
  468bf0:	tbnz	w10, #12, 468c04 <feof@plt+0x65364>
  468bf4:	cmp	w8, #0x5c
  468bf8:	b.ne	468a88 <feof@plt+0x651e8>  // b.any
  468bfc:	ldur	x8, [x29, #-144]
  468c00:	ldrb	w8, [x8, #1]
  468c04:	cmp	w8, #0x7b
  468c08:	b.eq	468a64 <feof@plt+0x651c4>  // b.none
  468c0c:	b	468a88 <feof@plt+0x651e8>
  468c10:	ldr	x8, [sp, #88]
  468c14:	cmp	x8, #0x20
  468c18:	b.eq	469154 <feof@plt+0x658b4>  // b.none
  468c1c:	ldur	x8, [x29, #-160]
  468c20:	mov	x0, x23
  468c24:	tbz	w8, #4, 468a14 <feof@plt+0x65174>
  468c28:	cmp	w21, #0x8, lsl #12
  468c2c:	b.ge	4691bc <feof@plt+0x6591c>  // b.tcont
  468c30:	stur	x14, [x29, #-144]
  468c34:	cbz	w21, 468e44 <feof@plt+0x655a4>
  468c38:	ldp	x24, x8, [x20]
  468c3c:	cmp	w21, #0x1
  468c40:	mov	w9, #0xa                   	// #10
  468c44:	mov	w10, #0x14                  	// #20
  468c48:	csel	x27, x10, x9, gt
  468c4c:	add	x9, x27, x23
  468c50:	sub	x9, x9, x24
  468c54:	mov	x28, x0
  468c58:	cmp	x9, x8
  468c5c:	b.hi	468d9c <feof@plt+0x654fc>  // b.pmore
  468c60:	subs	w8, w21, #0x1
  468c64:	mov	w10, #0x5                   	// #5
  468c68:	add	x9, x23, #0x5
  468c6c:	csel	w10, w10, wzr, gt
  468c70:	add	w10, w9, w10
  468c74:	sub	w10, w10, w28
  468c78:	cmp	x23, x28
  468c7c:	sub	w10, w10, #0x3
  468c80:	b.eq	468c98 <feof@plt+0x653f8>  // b.none
  468c84:	mov	x11, x23
  468c88:	ldrb	w12, [x11, #-1]!
  468c8c:	cmp	x28, x11
  468c90:	strb	w12, [x11, #5]
  468c94:	b.ne	468c88 <feof@plt+0x653e8>  // b.any
  468c98:	ldur	x24, [x29, #-152]
  468c9c:	mov	w11, #0x15                  	// #21
  468ca0:	strb	w11, [x28]
  468ca4:	strb	w10, [x28, #1]
  468ca8:	lsr	w11, w10, #8
  468cac:	lsr	w10, w26, #8
  468cb0:	cmp	x9, x28
  468cb4:	strb	w26, [x28, #3]
  468cb8:	strb	w11, [x28, #2]
  468cbc:	strb	w10, [x28, #4]
  468cc0:	b.eq	468ce0 <feof@plt+0x65440>  // b.none
  468cc4:	sub	x9, x28, #0x5
  468cc8:	mov	x11, x23
  468ccc:	ldrb	w12, [x11, #4]
  468cd0:	strb	w12, [x11, #9]
  468cd4:	sub	x11, x11, #0x1
  468cd8:	cmp	x9, x11
  468cdc:	b.ne	468ccc <feof@plt+0x6542c>  // b.any
  468ce0:	mov	w9, #0x517                 	// #1303
  468ce4:	strh	w9, [x28]
  468ce8:	cmp	w21, #0x2
  468cec:	add	x9, x23, #0xa
  468cf0:	strb	wzr, [x28, #2]
  468cf4:	strb	w26, [x28, #3]
  468cf8:	strb	w10, [x28, #4]
  468cfc:	b.lt	468f3c <feof@plt+0x6569c>  // b.tstop
  468d00:	ldur	x21, [x29, #-168]
  468d04:	sub	w10, w28, w9
  468d08:	mov	w9, #0x16                  	// #22
  468d0c:	add	x11, x23, #0xf
  468d10:	add	w12, w10, #0x2
  468d14:	strb	w9, [x23, #10]
  468d18:	lsr	w9, w8, #8
  468d1c:	subs	x10, x11, x28
  468d20:	lsr	w11, w12, #8
  468d24:	strb	w8, [x23, #13]
  468d28:	strb	w12, [x23, #11]
  468d2c:	strb	w11, [x23, #12]
  468d30:	strb	w9, [x23, #14]
  468d34:	b.eq	468d54 <feof@plt+0x654b4>  // b.none
  468d38:	sub	x11, x28, #0xf
  468d3c:	mov	x12, x23
  468d40:	ldrb	w13, [x12, #14]
  468d44:	strb	w13, [x12, #19]
  468d48:	sub	x12, x12, #0x1
  468d4c:	cmp	x11, x12
  468d50:	b.ne	468d40 <feof@plt+0x654a0>  // b.any
  468d54:	mov	w11, #0x17                  	// #23
  468d58:	strb	w10, [x28, #1]
  468d5c:	lsr	w10, w10, #8
  468d60:	mov	x27, xzr
  468d64:	strb	w11, [x28]
  468d68:	strb	w8, [x28, #3]
  468d6c:	strb	w9, [x28, #4]
  468d70:	strb	w10, [x28, #2]
  468d74:	add	x23, x23, #0x14
  468d78:	mov	x8, x14
  468d7c:	b	468ab8 <feof@plt+0x65218>
  468d80:	ldr	x8, [x25]
  468d84:	ldur	x14, [x29, #-144]
  468d88:	add	x9, x27, x23
  468d8c:	sub	x9, x9, x0
  468d90:	cmp	x9, x8
  468d94:	mov	x24, x0
  468d98:	b.ls	468c60 <feof@plt+0x653c0>  // b.plast
  468d9c:	cmp	x8, #0x10, lsl #12
  468da0:	b.eq	469110 <feof@plt+0x65870>  // b.none
  468da4:	lsl	x8, x8, #1
  468da8:	cmp	x8, #0x10, lsl #12
  468dac:	mov	w9, #0x10000               	// #65536
  468db0:	csel	x1, x8, x9, cc  // cc = lo, ul, last
  468db4:	mov	x0, x24
  468db8:	str	x1, [x20, #8]
  468dbc:	bl	403260 <realloc@plt>
  468dc0:	str	x0, [x20]
  468dc4:	cbz	x0, 469108 <feof@plt+0x65868>
  468dc8:	cmp	x24, x0
  468dcc:	b.eq	468d80 <feof@plt+0x654e0>  // b.none
  468dd0:	sub	x8, x0, x24
  468dd4:	cmp	x22, #0x0
  468dd8:	add	x9, x22, x8
  468ddc:	add	x23, x23, x8
  468de0:	add	x19, x19, x8
  468de4:	add	x8, x28, x8
  468de8:	csel	x22, xzr, x9, eq  // eq = none
  468dec:	cmp	x28, #0x0
  468df0:	csel	x28, xzr, x8, eq  // eq = none
  468df4:	b	468d80 <feof@plt+0x654e0>
  468df8:	mov	w21, #0x27                  	// #39
  468dfc:	b	468a24 <feof@plt+0x65184>
  468e00:	mov	w21, #0x28                  	// #40
  468e04:	cbnz	x24, 468a20 <feof@plt+0x65180>
  468e08:	b	468a24 <feof@plt+0x65184>
  468e0c:	mov	w21, #0x3c                  	// #60
  468e10:	b	468a24 <feof@plt+0x65184>
  468e14:	mov	w21, #0x3e                  	// #62
  468e18:	b	468a24 <feof@plt+0x65184>
  468e1c:	mov	w21, #0x42                  	// #66
  468e20:	b	468a24 <feof@plt+0x65184>
  468e24:	mov	w21, #0x57                  	// #87
  468e28:	b	468a24 <feof@plt+0x65184>
  468e2c:	mov	w21, #0x60                  	// #96
  468e30:	b	468a24 <feof@plt+0x65184>
  468e34:	mov	w21, #0x62                  	// #98
  468e38:	b	468a24 <feof@plt+0x65184>
  468e3c:	mov	w21, #0x77                  	// #119
  468e40:	b	468a24 <feof@plt+0x65184>
  468e44:	ldp	x24, x8, [x20]
  468e48:	mov	x28, x0
  468e4c:	sub	x9, x23, x24
  468e50:	add	x9, x9, #0x3
  468e54:	cmp	x9, x8
  468e58:	b.ls	468f50 <feof@plt+0x656b0>  // b.plast
  468e5c:	ldur	x21, [x29, #-168]
  468e60:	mov	w26, #0x10000               	// #65536
  468e64:	b	468e84 <feof@plt+0x655e4>
  468e68:	ldr	x8, [x25]
  468e6c:	ldur	x14, [x29, #-144]
  468e70:	sub	x9, x23, x0
  468e74:	add	x9, x9, #0x3
  468e78:	cmp	x9, x8
  468e7c:	mov	x24, x0
  468e80:	b.ls	468f54 <feof@plt+0x656b4>  // b.plast
  468e84:	cmp	x8, #0x10, lsl #12
  468e88:	b.eq	469110 <feof@plt+0x65870>  // b.none
  468e8c:	lsl	x8, x8, #1
  468e90:	cmp	x8, #0x10, lsl #12
  468e94:	csel	x1, x8, x26, cc  // cc = lo, ul, last
  468e98:	mov	x0, x24
  468e9c:	str	x1, [x20, #8]
  468ea0:	bl	403260 <realloc@plt>
  468ea4:	str	x0, [x20]
  468ea8:	cbz	x0, 469108 <feof@plt+0x65868>
  468eac:	cmp	x24, x0
  468eb0:	b.eq	468e68 <feof@plt+0x655c8>  // b.none
  468eb4:	sub	x8, x0, x24
  468eb8:	cmp	x22, #0x0
  468ebc:	add	x9, x22, x8
  468ec0:	add	x23, x23, x8
  468ec4:	add	x19, x19, x8
  468ec8:	add	x8, x28, x8
  468ecc:	csel	x22, xzr, x9, eq  // eq = none
  468ed0:	cmp	x28, #0x0
  468ed4:	csel	x28, xzr, x8, eq  // eq = none
  468ed8:	b	468e68 <feof@plt+0x655c8>
  468edc:	ldur	x21, [x29, #-168]
  468ee0:	mov	w8, #0xc                   	// #12
  468ee4:	b	46737c <feof@plt+0x63adc>
  468ee8:	ldur	x21, [x29, #-168]
  468eec:	mov	w8, #0x1a                  	// #26
  468ef0:	b	46737c <feof@plt+0x63adc>
  468ef4:	ldur	x21, [x29, #-168]
  468ef8:	mov	w8, #0x1b                  	// #27
  468efc:	b	46737c <feof@plt+0x63adc>
  468f00:	ldur	x21, [x29, #-168]
  468f04:	mov	w8, #0x1d                  	// #29
  468f08:	b	46737c <feof@plt+0x63adc>
  468f0c:	ldur	x21, [x29, #-168]
  468f10:	mov	w8, #0x19                  	// #25
  468f14:	b	46737c <feof@plt+0x63adc>
  468f18:	ldur	x21, [x29, #-168]
  468f1c:	mov	w8, #0xb                   	// #11
  468f20:	b	46737c <feof@plt+0x63adc>
  468f24:	ldur	x21, [x29, #-168]
  468f28:	mov	w8, #0x1c                  	// #28
  468f2c:	b	46737c <feof@plt+0x63adc>
  468f30:	ldur	x21, [x29, #-168]
  468f34:	mov	w8, #0x18                  	// #24
  468f38:	b	46737c <feof@plt+0x63adc>
  468f3c:	ldur	x21, [x29, #-168]
  468f40:	mov	x27, xzr
  468f44:	mov	x8, x14
  468f48:	mov	x23, x9
  468f4c:	b	468ab8 <feof@plt+0x65218>
  468f50:	ldur	x21, [x29, #-168]
  468f54:	add	x8, x23, #0x3
  468f58:	sub	w9, w8, w28
  468f5c:	cmp	x23, x28
  468f60:	sub	w9, w9, #0x3
  468f64:	b.eq	468f78 <feof@plt+0x656d8>  // b.none
  468f68:	ldrb	w10, [x23, #-1]!
  468f6c:	cmp	x28, x23
  468f70:	strb	w10, [x23, #3]
  468f74:	b.ne	468f68 <feof@plt+0x656c8>  // b.any
  468f78:	ldur	x24, [x29, #-152]
  468f7c:	mov	w10, #0xd                   	// #13
  468f80:	strb	w9, [x28, #1]
  468f84:	lsr	w9, w9, #8
  468f88:	mov	x27, xzr
  468f8c:	strb	w10, [x28]
  468f90:	strb	w9, [x28, #2]
  468f94:	mov	x9, x14
  468f98:	mov	x23, x8
  468f9c:	mov	x8, x14
  468fa0:	b	468ab8 <feof@plt+0x65218>
  468fa4:	mov	w8, #0xc                   	// #12
  468fa8:	b	46737c <feof@plt+0x63adc>
  468fac:	mov	w8, #0x1a                  	// #26
  468fb0:	b	46737c <feof@plt+0x63adc>
  468fb4:	mov	w8, #0x1b                  	// #27
  468fb8:	b	46737c <feof@plt+0x63adc>
  468fbc:	mov	w8, #0x1d                  	// #29
  468fc0:	b	46737c <feof@plt+0x63adc>
  468fc4:	mov	w8, #0x19                  	// #25
  468fc8:	b	46737c <feof@plt+0x63adc>
  468fcc:	mov	w8, #0xb                   	// #11
  468fd0:	b	46737c <feof@plt+0x63adc>
  468fd4:	mov	w8, #0x1c                  	// #28
  468fd8:	b	46737c <feof@plt+0x63adc>
  468fdc:	mov	w8, #0x18                  	// #24
  468fe0:	b	46737c <feof@plt+0x63adc>
  468fe4:	ldrb	w8, [x23]
  468fe8:	add	x10, x10, #0x1
  468fec:	cbz	w8, 469010 <feof@plt+0x65770>
  468ff0:	and	x9, x8, #0xff
  468ff4:	ldrb	w9, [x23, x9]
  468ff8:	cbnz	w9, 469010 <feof@plt+0x65770>
  468ffc:	sub	w8, w8, #0x1
  469000:	tst	w8, #0xff
  469004:	strb	w8, [x23]
  469008:	b.ne	468ff0 <feof@plt+0x65750>  // b.any
  46900c:	mov	w8, wzr
  469010:	add	x23, x24, w8, uxtb
  469014:	ldur	x24, [x29, #-152]
  469018:	ldur	x21, [x29, #-168]
  46901c:	mov	x8, x10
  469020:	b	468ab8 <feof@plt+0x65218>
  469024:	mov	x0, x22
  469028:	bl	4031d0 <free@plt>
  46902c:	mov	w0, #0xc                   	// #12
  469030:	b	469114 <feof@plt+0x65874>
  469034:	ldr	x0, [sp, #176]
  469038:	bl	4031d0 <free@plt>
  46903c:	mov	w0, #0x5                   	// #5
  469040:	b	469114 <feof@plt+0x65874>
  469044:	cbz	x22, 469064 <feof@plt+0x657c4>
  469048:	sub	w8, w23, w22
  46904c:	sub	w8, w8, #0x3
  469050:	mov	w9, #0xe                   	// #14
  469054:	strb	w8, [x22, #1]
  469058:	lsr	w8, w8, #8
  46905c:	strb	w9, [x22]
  469060:	strb	w8, [x22, #2]
  469064:	ldr	x8, [sp, #160]
  469068:	ldr	x22, [sp, #176]
  46906c:	ldur	x26, [x29, #-160]
  469070:	lsr	x8, x8, #32
  469074:	cbnz	x8, 469144 <feof@plt+0x658a4>
  469078:	tbz	w26, #18, 4690ec <feof@plt+0x6584c>
  46907c:	ldp	x21, x8, [x20]
  469080:	sub	x9, x23, x21
  469084:	add	x9, x9, #0x1
  469088:	cmp	x9, x8
  46908c:	b.ls	4690e4 <feof@plt+0x65844>  // b.plast
  469090:	mov	w19, #0x10000               	// #65536
  469094:	cmp	x8, #0x10, lsl #12
  469098:	b.eq	469110 <feof@plt+0x65870>  // b.none
  46909c:	lsl	x8, x8, #1
  4690a0:	cmp	x8, #0x10, lsl #12
  4690a4:	csel	x1, x8, x19, cc  // cc = lo, ul, last
  4690a8:	mov	x0, x21
  4690ac:	str	x1, [x20, #8]
  4690b0:	bl	403260 <realloc@plt>
  4690b4:	str	x0, [x20]
  4690b8:	cbz	x0, 469108 <feof@plt+0x65868>
  4690bc:	sub	x8, x0, x21
  4690c0:	cmp	x21, x0
  4690c4:	add	x9, x23, x8
  4690c8:	ldr	x8, [x25]
  4690cc:	csel	x23, x23, x9, eq  // eq = none
  4690d0:	sub	x9, x23, x0
  4690d4:	add	x9, x9, #0x1
  4690d8:	cmp	x9, x8
  4690dc:	mov	x21, x0
  4690e0:	b.hi	469094 <feof@plt+0x657f4>  // b.pmore
  4690e4:	mov	w8, #0x1                   	// #1
  4690e8:	strb	w8, [x23], #1
  4690ec:	mov	x0, x22
  4690f0:	bl	4031d0 <free@plt>
  4690f4:	ldr	x8, [x20]
  4690f8:	mov	w0, wzr
  4690fc:	sub	x8, x23, x8
  469100:	str	x8, [x20, #16]
  469104:	b	469114 <feof@plt+0x65874>
  469108:	mov	w0, #0xc                   	// #12
  46910c:	b	469114 <feof@plt+0x65874>
  469110:	mov	w0, #0xf                   	// #15
  469114:	ldp	x20, x19, [sp, #432]
  469118:	ldp	x22, x21, [sp, #416]
  46911c:	ldp	x24, x23, [sp, #400]
  469120:	ldp	x26, x25, [sp, #384]
  469124:	ldp	x28, x27, [sp, #368]
  469128:	ldp	x29, x30, [sp, #352]
  46912c:	add	sp, sp, #0x1c0
  469130:	ret
  469134:	ldr	x0, [sp, #176]
  469138:	bl	4031d0 <free@plt>
  46913c:	mov	w0, #0x7                   	// #7
  469140:	b	469114 <feof@plt+0x65874>
  469144:	mov	x0, x22
  469148:	bl	4031d0 <free@plt>
  46914c:	mov	w0, #0x8                   	// #8
  469150:	b	469114 <feof@plt+0x65874>
  469154:	ldr	x0, [sp, #176]
  469158:	bl	4031d0 <free@plt>
  46915c:	mov	w0, #0xd                   	// #13
  469160:	b	469114 <feof@plt+0x65874>
  469164:	ldr	x0, [sp, #176]
  469168:	mov	x19, x14
  46916c:	bl	4031d0 <free@plt>
  469170:	ldur	x8, [x29, #-168]
  469174:	cmp	x19, x8
  469178:	mov	w8, #0x9                   	// #9
  46917c:	cinc	w0, w8, ne  // ne = any
  469180:	b	469114 <feof@plt+0x65874>
  469184:	ldr	x0, [sp, #176]
  469188:	bl	4031d0 <free@plt>
  46918c:	mov	w0, #0x6                   	// #6
  469190:	b	469114 <feof@plt+0x65874>
  469194:	ldr	x0, [sp, #176]
  469198:	bl	4031d0 <free@plt>
  46919c:	mov	w0, #0x10                  	// #16
  4691a0:	b	469114 <feof@plt+0x65874>
  4691a4:	ldr	x0, [sp, #176]
  4691a8:	bl	4031d0 <free@plt>
  4691ac:	mov	w0, #0xb                   	// #11
  4691b0:	b	469114 <feof@plt+0x65874>
  4691b4:	mov	w0, #0xe                   	// #14
  4691b8:	b	469114 <feof@plt+0x65874>
  4691bc:	ldr	x0, [sp, #176]
  4691c0:	bl	4031d0 <free@plt>
  4691c4:	mov	w0, #0xa                   	// #10
  4691c8:	b	469114 <feof@plt+0x65874>
  4691cc:	ldr	x0, [sp, #176]
  4691d0:	bl	4031d0 <free@plt>
  4691d4:	mov	w0, #0x3                   	// #3
  4691d8:	b	469114 <feof@plt+0x65874>
  4691dc:	ldr	x0, [sp, #176]
  4691e0:	bl	4031d0 <free@plt>
  4691e4:	mov	w0, #0x4                   	// #4
  4691e8:	b	469114 <feof@plt+0x65874>
  4691ec:	stp	x29, x30, [sp, #-32]!
  4691f0:	stp	x20, x19, [sp, #16]
  4691f4:	adrp	x20, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4691f8:	ldr	x8, [x20, #720]
  4691fc:	mov	x29, sp
  469200:	cbz	x0, 469254 <feof@plt+0x659b4>
  469204:	mov	x19, x0
  469208:	cbz	x8, 469268 <feof@plt+0x659c8>
  46920c:	adrp	x20, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  469210:	add	x20, x20, #0x2d0
  469214:	ldrb	w8, [x20, #56]
  469218:	mov	x0, x19
  46921c:	orr	w8, w8, #0x80
  469220:	strb	w8, [x20, #56]
  469224:	bl	4030b0 <strlen@plt>
  469228:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  46922c:	ldr	x2, [x8, #1112]
  469230:	mov	x1, x0
  469234:	mov	x0, x19
  469238:	mov	x3, x20
  46923c:	bl	46680c <feof@plt+0x62f6c>
  469240:	cbz	w0, 4692a4 <feof@plt+0x65a04>
  469244:	adrp	x8, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  469248:	add	x8, x8, #0x3f0
  46924c:	ldr	x0, [x8, w0, sxtw #3]
  469250:	b	4692a8 <feof@plt+0x65a08>
  469254:	adrp	x9, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  469258:	add	x9, x9, #0x4c8
  46925c:	cmp	x8, #0x0
  469260:	csel	x0, xzr, x9, ne  // ne = any
  469264:	b	4692a8 <feof@plt+0x65a08>
  469268:	mov	w0, #0xc8                  	// #200
  46926c:	bl	4036b0 <malloc@plt>
  469270:	str	x0, [x20, #720]
  469274:	cbz	x0, 469298 <feof@plt+0x659f8>
  469278:	adrp	x20, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  46927c:	add	x20, x20, #0x2d8
  469280:	mov	w8, #0xc8                  	// #200
  469284:	mov	w0, #0x100                 	// #256
  469288:	str	x8, [x20]
  46928c:	bl	4036b0 <malloc@plt>
  469290:	str	x0, [x20, #24]
  469294:	cbnz	x0, 46920c <feof@plt+0x6596c>
  469298:	adrp	x0, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46929c:	add	x0, x0, #0x608
  4692a0:	b	4692a8 <feof@plt+0x65a08>
  4692a4:	mov	x0, xzr
  4692a8:	ldp	x20, x19, [sp, #16]
  4692ac:	ldp	x29, x30, [sp], #32
  4692b0:	ret
  4692b4:	sub	sp, sp, #0x30
  4692b8:	stp	x29, x30, [sp, #16]
  4692bc:	str	x19, [sp, #32]
  4692c0:	add	x29, sp, #0x10
  4692c4:	mov	x19, x0
  4692c8:	bl	4030b0 <strlen@plt>
  4692cc:	mov	x4, x0
  4692d0:	adrp	x0, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4692d4:	add	x0, x0, #0x2d0
  4692d8:	mov	x1, xzr
  4692dc:	mov	w2, wzr
  4692e0:	mov	x3, x19
  4692e4:	mov	w5, wzr
  4692e8:	mov	w6, w4
  4692ec:	mov	x7, xzr
  4692f0:	str	w4, [sp]
  4692f4:	bl	4645ec <feof@plt+0x60d4c>
  4692f8:	ldr	x19, [sp, #32]
  4692fc:	ldp	x29, x30, [sp, #16]
  469300:	mvn	w8, w0
  469304:	lsr	w0, w8, #31
  469308:	add	sp, sp, #0x30
  46930c:	ret
  469310:	stp	x29, x30, [sp, #-80]!
  469314:	stp	x24, x23, [sp, #32]
  469318:	mov	w24, #0xb2be                	// #45758
  46931c:	movk	w24, #0x3, lsl #16
  469320:	mov	w8, #0x2c6                 	// #710
  469324:	str	x25, [sp, #16]
  469328:	stp	x22, x21, [sp, #48]
  46932c:	stp	x20, x19, [sp, #64]
  469330:	mov	x19, x0
  469334:	tst	w2, #0x1
  469338:	movk	w8, #0x1, lsl #16
  46933c:	stp	xzr, xzr, [x0]
  469340:	add	x9, x24, #0x3e
  469344:	str	xzr, [x0, #16]
  469348:	mov	w0, #0x100                 	// #256
  46934c:	mov	x29, sp
  469350:	mov	w22, w2
  469354:	mov	x20, x1
  469358:	csel	x21, x8, x9, eq  // eq = none
  46935c:	bl	4036b0 <malloc@plt>
  469360:	str	x0, [x19, #32]
  469364:	tbnz	w22, #1, 46937c <feof@plt+0x65adc>
  469368:	str	xzr, [x19, #40]
  46936c:	tbnz	w22, #2, 4693d0 <feof@plt+0x65b30>
  469370:	ldrb	w8, [x19, #56]
  469374:	and	w8, w8, #0x7f
  469378:	b	4693e0 <feof@plt+0x65b40>
  46937c:	mov	w0, #0x100                 	// #256
  469380:	bl	4036b0 <malloc@plt>
  469384:	str	x0, [x19, #40]
  469388:	cbz	x0, 469458 <feof@plt+0x65bb8>
  46938c:	bl	403500 <__ctype_b_loc@plt>
  469390:	mov	x23, x0
  469394:	mov	x25, xzr
  469398:	b	4693bc <feof@plt+0x65b1c>
  46939c:	bl	403600 <__ctype_tolower_loc@plt>
  4693a0:	ldr	x8, [x0]
  4693a4:	ldr	w8, [x8, x25, lsl #2]
  4693a8:	ldr	x9, [x19, #40]
  4693ac:	strb	w8, [x9, x25]
  4693b0:	add	x25, x25, #0x1
  4693b4:	cmp	x25, #0x100
  4693b8:	b.eq	46936c <feof@plt+0x65acc>  // b.none
  4693bc:	ldr	x8, [x23]
  4693c0:	ldrh	w8, [x8, x25, lsl #1]
  4693c4:	tbnz	w8, #8, 46939c <feof@plt+0x65afc>
  4693c8:	mov	w8, w25
  4693cc:	b	4693a8 <feof@plt+0x65b08>
  4693d0:	ldrb	w8, [x19, #56]
  4693d4:	and	x9, x21, x24
  4693d8:	orr	x21, x9, #0x100
  4693dc:	orr	w8, w8, #0xffffff80
  4693e0:	lsl	w9, w22, #1
  4693e4:	strb	w8, [x19, #56]
  4693e8:	and	w9, w9, #0x10
  4693ec:	and	w8, w8, #0xffffffef
  4693f0:	orr	w8, w8, w9
  4693f4:	mov	x0, x20
  4693f8:	strb	w8, [x19, #56]
  4693fc:	bl	4030b0 <strlen@plt>
  469400:	mov	x1, x0
  469404:	mov	x0, x20
  469408:	mov	x2, x21
  46940c:	mov	x3, x19
  469410:	bl	46680c <feof@plt+0x62f6c>
  469414:	cmp	w0, #0x10
  469418:	mov	w8, #0x8                   	// #8
  46941c:	csel	w0, w8, w0, eq  // eq = none
  469420:	cbnz	w0, 46945c <feof@plt+0x65bbc>
  469424:	ldr	x8, [x19, #32]
  469428:	cbz	x8, 469450 <feof@plt+0x65bb0>
  46942c:	mov	x0, x19
  469430:	bl	463f48 <feof@plt+0x606a8>
  469434:	cmn	w0, #0x2
  469438:	b.ne	469450 <feof@plt+0x65bb0>  // b.any
  46943c:	ldr	x0, [x19, #32]
  469440:	bl	4031d0 <free@plt>
  469444:	mov	w0, wzr
  469448:	str	xzr, [x19, #32]
  46944c:	b	46945c <feof@plt+0x65bbc>
  469450:	mov	w0, wzr
  469454:	b	46945c <feof@plt+0x65bbc>
  469458:	mov	w0, #0xc                   	// #12
  46945c:	ldp	x20, x19, [sp, #64]
  469460:	ldp	x22, x21, [sp, #48]
  469464:	ldp	x24, x23, [sp, #32]
  469468:	ldr	x25, [sp, #16]
  46946c:	ldp	x29, x30, [sp], #80
  469470:	ret
  469474:	sub	sp, sp, #0xb0
  469478:	stp	x24, x23, [sp, #128]
  46947c:	mov	x24, x0
  469480:	mov	x0, x1
  469484:	stp	x29, x30, [sp, #112]
  469488:	stp	x22, x21, [sp, #144]
  46948c:	stp	x20, x19, [sp, #160]
  469490:	add	x29, sp, #0x70
  469494:	mov	w23, w4
  469498:	mov	x19, x3
  46949c:	mov	x20, x2
  4694a0:	mov	x21, x1
  4694a4:	bl	4030b0 <strlen@plt>
  4694a8:	ldp	q0, q1, [x24, #32]
  4694ac:	ldrb	w8, [x24, #56]
  4694b0:	ldp	q3, q2, [x24]
  4694b4:	ubfiz	w10, w23, #5, #2
  4694b8:	stp	q0, q1, [sp, #48]
  4694bc:	ldrb	w9, [sp, #72]
  4694c0:	mov	x22, x0
  4694c4:	stp	q3, q2, [sp, #16]
  4694c8:	and	w9, w9, #0x99999999
  4694cc:	orr	w9, w10, w9
  4694d0:	orr	w9, w9, #0x4
  4694d4:	strb	w9, [sp, #72]
  4694d8:	cbz	x20, 469570 <feof@plt+0x65cd0>
  4694dc:	tbnz	w8, #4, 469570 <feof@plt+0x65cd0>
  4694e0:	lsl	x0, x20, #3
  4694e4:	stur	w20, [x29, #-24]
  4694e8:	bl	4036b0 <malloc@plt>
  4694ec:	stur	x0, [x29, #-16]
  4694f0:	cbz	x0, 4695a0 <feof@plt+0x65d00>
  4694f4:	add	x8, x0, x20, lsl #2
  4694f8:	add	x0, sp, #0x10
  4694fc:	sub	x7, x29, #0x18
  469500:	mov	x1, xzr
  469504:	mov	w2, wzr
  469508:	mov	x3, x21
  46950c:	mov	w4, w22
  469510:	mov	w5, wzr
  469514:	mov	w6, w22
  469518:	stur	x8, [x29, #-8]
  46951c:	str	w22, [sp]
  469520:	bl	4645ec <feof@plt+0x60d4c>
  469524:	mov	w21, w0
  469528:	tbnz	w0, #31, 4695a8 <feof@plt+0x65d08>
  46952c:	ldp	x0, x8, [x29, #-16]
  469530:	cmp	x20, #0x8
  469534:	b.cs	4695cc <feof@plt+0x65d2c>  // b.hs, b.nlast
  469538:	mov	x9, xzr
  46953c:	mov	w10, wzr
  469540:	add	w10, w10, #0x1
  469544:	lsl	x11, x9, #2
  469548:	ldr	w12, [x0, x11]
  46954c:	add	x13, x19, x9, lsl #3
  469550:	mov	w9, w10
  469554:	cmp	x9, x20
  469558:	str	w12, [x13]
  46955c:	ldr	w11, [x8, x11]
  469560:	add	w10, w10, #0x1
  469564:	str	w11, [x13, #4]
  469568:	b.cc	469544 <feof@plt+0x65ca4>  // b.lo, b.ul, b.last
  46956c:	b	4695ac <feof@plt+0x65d0c>
  469570:	add	x0, sp, #0x10
  469574:	mov	x1, xzr
  469578:	mov	w2, wzr
  46957c:	mov	x3, x21
  469580:	mov	w4, w22
  469584:	mov	w5, wzr
  469588:	mov	w6, w22
  46958c:	mov	x7, xzr
  469590:	str	w22, [sp]
  469594:	bl	4645ec <feof@plt+0x60d4c>
  469598:	mov	w21, w0
  46959c:	b	4695b0 <feof@plt+0x65d10>
  4695a0:	mov	w0, #0x1                   	// #1
  4695a4:	b	4695b4 <feof@plt+0x65d14>
  4695a8:	ldur	x0, [x29, #-16]
  4695ac:	bl	4031d0 <free@plt>
  4695b0:	lsr	w0, w21, #31
  4695b4:	ldp	x20, x19, [sp, #160]
  4695b8:	ldp	x22, x21, [sp, #144]
  4695bc:	ldp	x24, x23, [sp, #128]
  4695c0:	ldp	x29, x30, [sp, #112]
  4695c4:	add	sp, sp, #0xb0
  4695c8:	ret
  4695cc:	sub	x12, x20, #0x1
  4695d0:	cmp	xzr, x12, lsr #61
  4695d4:	mov	w10, wzr
  4695d8:	cset	w11, ne  // ne = any
  4695dc:	cmn	w12, #0x1
  4695e0:	mov	x9, xzr
  4695e4:	b.eq	469540 <feof@plt+0x65ca0>  // b.none
  4695e8:	lsr	x13, x12, #32
  4695ec:	cbnz	x13, 469540 <feof@plt+0x65ca0>
  4695f0:	lsl	x12, x12, #3
  4695f4:	mvn	x13, x19
  4695f8:	cmp	x12, x13
  4695fc:	b.hi	469540 <feof@plt+0x65ca0>  // b.pmore
  469600:	tbnz	w11, #0, 469540 <feof@plt+0x65ca0>
  469604:	add	x13, x19, #0x4
  469608:	mvn	x13, x13
  46960c:	cmp	x12, x13
  469610:	b.hi	469540 <feof@plt+0x65ca0>  // b.pmore
  469614:	tbnz	w11, #0, 469540 <feof@plt+0x65ca0>
  469618:	lsl	x11, x20, #2
  46961c:	add	x13, x0, x11
  469620:	add	x12, x19, x20, lsl #3
  469624:	cmp	x13, x19
  469628:	add	x11, x8, x11
  46962c:	cset	w13, hi  // hi = pmore
  469630:	cmp	x0, x12
  469634:	cset	w14, cc  // cc = lo, ul, last
  469638:	cmp	x11, x19
  46963c:	cset	w11, hi  // hi = pmore
  469640:	cmp	x8, x12
  469644:	mov	w10, wzr
  469648:	mov	x9, xzr
  46964c:	and	w13, w13, w14
  469650:	cset	w12, cc  // cc = lo, ul, last
  469654:	tbnz	w13, #0, 469540 <feof@plt+0x65ca0>
  469658:	and	w11, w11, w12
  46965c:	tbnz	w11, #0, 469540 <feof@plt+0x65ca0>
  469660:	and	x9, x20, #0xfffffffffffffff8
  469664:	add	x11, x19, #0x20
  469668:	add	x12, x0, #0x10
  46966c:	mov	w10, w9
  469670:	add	x13, x8, #0x10
  469674:	mov	x14, x9
  469678:	ldp	q0, q2, [x12, #-16]
  46967c:	ldp	q1, q3, [x13, #-16]
  469680:	sub	x15, x11, #0x20
  469684:	add	x12, x12, #0x20
  469688:	subs	x14, x14, #0x8
  46968c:	st2	{v0.4s, v1.4s}, [x15]
  469690:	st2	{v2.4s, v3.4s}, [x11]
  469694:	add	x11, x11, #0x40
  469698:	add	x13, x13, #0x20
  46969c:	b.ne	469678 <feof@plt+0x65dd8>  // b.any
  4696a0:	cmp	x9, x20
  4696a4:	b.ne	469540 <feof@plt+0x65ca0>  // b.any
  4696a8:	b	4695ac <feof@plt+0x65d0c>
  4696ac:	stp	x29, x30, [sp, #-48]!
  4696b0:	cmp	w0, #0x11
  4696b4:	stp	x22, x21, [sp, #16]
  4696b8:	stp	x20, x19, [sp, #32]
  4696bc:	mov	x29, sp
  4696c0:	b.cs	469730 <feof@plt+0x65e90>  // b.hs, b.nlast
  4696c4:	adrp	x8, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  4696c8:	add	x8, x8, #0x3f0
  4696cc:	ldr	x22, [x8, w0, uxtw #3]
  4696d0:	mov	x21, x3
  4696d4:	mov	x19, x2
  4696d8:	mov	x0, x22
  4696dc:	bl	4030b0 <strlen@plt>
  4696e0:	add	x20, x0, #0x1
  4696e4:	cbz	x21, 46971c <feof@plt+0x65e7c>
  4696e8:	cmp	x20, x21
  4696ec:	b.ls	46970c <feof@plt+0x65e6c>  // b.plast
  4696f0:	sub	x21, x21, #0x1
  4696f4:	mov	x0, x19
  4696f8:	mov	x1, x22
  4696fc:	mov	x2, x21
  469700:	bl	402fc0 <memcpy@plt>
  469704:	strb	wzr, [x19, x21]
  469708:	b	46971c <feof@plt+0x65e7c>
  46970c:	mov	x0, x19
  469710:	mov	x1, x22
  469714:	mov	x2, x20
  469718:	bl	402fc0 <memcpy@plt>
  46971c:	mov	x0, x20
  469720:	ldp	x20, x19, [sp, #32]
  469724:	ldp	x22, x21, [sp, #16]
  469728:	ldp	x29, x30, [sp], #48
  46972c:	ret
  469730:	bl	4036f0 <abort@plt>
  469734:	stp	x29, x30, [sp, #-32]!
  469738:	str	x19, [sp, #16]
  46973c:	mov	x19, x0
  469740:	ldr	x0, [x0]
  469744:	mov	x29, sp
  469748:	bl	4031d0 <free@plt>
  46974c:	ldr	x0, [x19, #32]
  469750:	stp	xzr, xzr, [x19]
  469754:	str	xzr, [x19, #16]
  469758:	bl	4031d0 <free@plt>
  46975c:	ldrb	w8, [x19, #56]
  469760:	ldr	x0, [x19, #40]
  469764:	str	xzr, [x19, #32]
  469768:	and	w8, w8, #0xfffffff7
  46976c:	strb	w8, [x19, #56]
  469770:	bl	4031d0 <free@plt>
  469774:	str	xzr, [x19, #40]
  469778:	ldr	x19, [sp, #16]
  46977c:	ldp	x29, x30, [sp], #32
  469780:	ret
  469784:	sub	sp, sp, #0x50
  469788:	stp	x29, x30, [sp, #16]
  46978c:	stp	x24, x23, [sp, #32]
  469790:	stp	x22, x21, [sp, #48]
  469794:	stp	x20, x19, [sp, #64]
  469798:	ldr	x8, [x0]
  46979c:	add	x29, sp, #0x10
  4697a0:	add	x22, x8, #0x2
  4697a4:	cmp	x22, x1
  4697a8:	str	x22, [sp]
  4697ac:	b.cs	469974 <feof@plt+0x660d4>  // b.hs, b.nlast
  4697b0:	mov	x20, x2
  4697b4:	mov	x21, x1
  4697b8:	mov	x19, x0
  4697bc:	ldrb	w8, [x22]
  4697c0:	cmp	w8, #0xf
  4697c4:	b.eq	4697f8 <feof@plt+0x65f58>  // b.none
  4697c8:	cmp	w8, #0x7
  4697cc:	b.eq	46999c <feof@plt+0x660fc>  // b.none
  4697d0:	mov	x0, sp
  4697d4:	mov	x1, x21
  4697d8:	mov	x2, x20
  4697dc:	bl	4699ac <feof@plt+0x6610c>
  4697e0:	tst	w0, #0xff
  4697e4:	b.eq	469974 <feof@plt+0x660d4>  // b.none
  4697e8:	ldr	x22, [sp]
  4697ec:	cmp	x22, x21
  4697f0:	b.cc	4697bc <feof@plt+0x65f1c>  // b.lo, b.ul, b.last
  4697f4:	b	469974 <feof@plt+0x660d4>
  4697f8:	add	x8, x22, #0x1
  4697fc:	str	x8, [sp]
  469800:	ldrb	w8, [x22, #1]
  469804:	ldrsb	w9, [x22, #2]
  469808:	add	x23, x22, #0x3
  46980c:	str	x23, [sp]
  469810:	bfi	w8, w9, #8, #24
  469814:	tbnz	w8, #31, 4698d8 <feof@plt+0x66038>
  469818:	sxtw	x8, w8
  46981c:	add	x9, x8, x23
  469820:	ldurb	w9, [x9, #-3]
  469824:	cmp	w9, #0xe
  469828:	b.ne	4698ec <feof@plt+0x6604c>  // b.any
  46982c:	add	x24, x23, x8
  469830:	sub	x22, x24, #0x3
  469834:	cmp	x23, x22
  469838:	str	x23, [sp, #8]
  46983c:	b.cs	4698a0 <feof@plt+0x66000>  // b.hs, b.nlast
  469840:	mov	x8, x23
  469844:	b	469870 <feof@plt+0x65fd0>
  469848:	add	x9, x8, #0x1
  46984c:	str	x9, [sp, #8]
  469850:	ldrb	w9, [x8, #1]
  469854:	ldrsb	x10, [x8, #2]
  469858:	bfi	x9, x10, #8, #56
  46985c:	add	x8, x8, x9
  469860:	add	x8, x8, #0x3
  469864:	str	x8, [sp, #8]
  469868:	cmp	x8, x22
  46986c:	b.cs	4698a0 <feof@plt+0x66000>  // b.hs, b.nlast
  469870:	ldrb	w9, [x8]
  469874:	cmp	w9, #0xf
  469878:	b.eq	469848 <feof@plt+0x65fa8>  // b.none
  46987c:	add	x0, sp, #0x8
  469880:	mov	x1, x22
  469884:	mov	x2, x20
  469888:	bl	4699ac <feof@plt+0x6610c>
  46988c:	tst	w0, #0xff
  469890:	b.eq	46997c <feof@plt+0x660dc>  // b.none
  469894:	ldr	x8, [sp, #8]
  469898:	cmp	x8, x22
  46989c:	b.cc	469870 <feof@plt+0x65fd0>  // b.lo, b.ul, b.last
  4698a0:	ldrb	w8, [x24]
  4698a4:	cmp	w8, #0xf
  4698a8:	b.ne	4698e8 <feof@plt+0x66048>  // b.any
  4698ac:	ldrb	w8, [x24, #1]
  4698b0:	ldrsb	x9, [x24, #2]
  4698b4:	add	x23, x24, #0x3
  4698b8:	bfi	x8, x9, #8, #56
  4698bc:	add	x9, x8, x23
  4698c0:	ldurb	w9, [x9, #-3]
  4698c4:	cmp	w9, #0xe
  4698c8:	b.eq	469818 <feof@plt+0x65f78>  // b.none
  4698cc:	str	x23, [sp]
  4698d0:	sub	x23, x23, #0x3
  4698d4:	b	4698ec <feof@plt+0x6604c>
  4698d8:	mov	x22, x23
  4698dc:	cmp	x22, x21
  4698e0:	b.cc	4697bc <feof@plt+0x65f1c>  // b.lo, b.ul, b.last
  4698e4:	b	469974 <feof@plt+0x660d4>
  4698e8:	mov	x23, x24
  4698ec:	str	x23, [sp]
  4698f0:	ldurb	w8, [x23, #-2]
  4698f4:	ldursb	x9, [x23, #-1]
  4698f8:	str	x23, [sp, #8]
  4698fc:	bfi	x8, x9, #8, #56
  469900:	add	x22, x23, x8
  469904:	cmp	w8, #0x1
  469908:	b.ge	469938 <feof@plt+0x66098>  // b.tcont
  46990c:	b	469968 <feof@plt+0x660c8>
  469910:	add	x8, x23, #0x1
  469914:	str	x8, [sp, #8]
  469918:	ldrb	w8, [x23, #1]
  46991c:	ldrsb	x9, [x23, #2]
  469920:	bfi	x8, x9, #8, #56
  469924:	add	x8, x23, x8
  469928:	add	x23, x8, #0x3
  46992c:	str	x23, [sp, #8]
  469930:	cmp	x23, x22
  469934:	b.cs	469968 <feof@plt+0x660c8>  // b.hs, b.nlast
  469938:	ldrb	w8, [x23]
  46993c:	cmp	w8, #0xf
  469940:	b.eq	469910 <feof@plt+0x66070>  // b.none
  469944:	add	x0, sp, #0x8
  469948:	mov	x1, x22
  46994c:	mov	x2, x20
  469950:	bl	4699ac <feof@plt+0x6610c>
  469954:	tst	w0, #0xff
  469958:	b.eq	469974 <feof@plt+0x660d4>  // b.none
  46995c:	ldr	x23, [sp, #8]
  469960:	cmp	x23, x22
  469964:	b.cc	469938 <feof@plt+0x66098>  // b.lo, b.ul, b.last
  469968:	str	x22, [sp]
  46996c:	cmp	x22, x21
  469970:	b.cc	4697bc <feof@plt+0x65f1c>  // b.lo, b.ul, b.last
  469974:	mov	w0, wzr
  469978:	b	469984 <feof@plt+0x660e4>
  46997c:	mov	w0, wzr
  469980:	str	x23, [sp]
  469984:	ldp	x20, x19, [sp, #64]
  469988:	ldp	x22, x21, [sp, #48]
  46998c:	ldp	x24, x23, [sp, #32]
  469990:	ldp	x29, x30, [sp, #16]
  469994:	add	sp, sp, #0x50
  469998:	ret
  46999c:	add	x8, x22, #0x2
  4699a0:	str	x8, [x19]
  4699a4:	mov	w0, #0x1                   	// #1
  4699a8:	b	469984 <feof@plt+0x660e4>
  4699ac:	stp	x29, x30, [sp, #-48]!
  4699b0:	stp	x20, x19, [sp, #32]
  4699b4:	ldr	x9, [x0]
  4699b8:	mov	x29, sp
  4699bc:	mov	x19, x0
  4699c0:	mov	w0, wzr
  4699c4:	add	x8, x9, #0x1
  4699c8:	str	x8, [x29, #24]
  4699cc:	ldrb	w10, [x9]
  4699d0:	str	x21, [sp, #16]
  4699d4:	cmp	w10, #0x1d
  4699d8:	b.hi	469a00 <feof@plt+0x66160>  // b.pmore
  4699dc:	adrp	x11, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  4699e0:	add	x11, x11, #0x3d2
  4699e4:	adr	x12, 4699f8 <feof@plt+0x66158>
  4699e8:	ldrb	w13, [x11, x10]
  4699ec:	add	x12, x12, x13, lsl #2
  4699f0:	mov	x20, x2
  4699f4:	br	x12
  4699f8:	mov	w0, #0x1                   	// #1
  4699fc:	str	x8, [x19]
  469a00:	ldp	x20, x19, [sp, #32]
  469a04:	ldr	x21, [sp, #16]
  469a08:	ldp	x29, x30, [sp], #48
  469a0c:	ret
  469a10:	ldrb	w21, [x8]
  469a14:	add	x0, x29, #0x18
  469a18:	mov	x2, x20
  469a1c:	bl	469784 <feof@plt+0x65ee4>
  469a20:	add	x8, x20, x21, lsl #3
  469a24:	ldrb	w9, [x8]
  469a28:	mvn	w10, w9
  469a2c:	tst	w10, #0x3
  469a30:	b.ne	469a3c <feof@plt+0x6619c>  // b.any
  469a34:	bfxil	w9, w0, #0, #2
  469a38:	strb	w9, [x8]
  469a3c:	tst	w0, #0xff
  469a40:	b.eq	469aa4 <feof@plt+0x66204>  // b.none
  469a44:	ldr	x8, [x29, #24]
  469a48:	b	4699f8 <feof@plt+0x66158>
  469a4c:	ldrb	w9, [x8]
  469a50:	lsl	x9, x9, #3
  469a54:	ldrb	w9, [x20, x9]
  469a58:	tst	w9, #0x3
  469a5c:	b.ne	4699f8 <feof@plt+0x66158>  // b.any
  469a60:	b	469aa4 <feof@plt+0x66204>
  469a64:	ldrsb	w8, [x9, #2]
  469a68:	ldrb	w10, [x9, #1]
  469a6c:	add	x9, x9, #0x3
  469a70:	str	x9, [x29, #24]
  469a74:	lsl	w8, w8, #8
  469a78:	orr	x8, x8, x10
  469a7c:	tbnz	w8, #31, 469aa4 <feof@plt+0x66204>
  469a80:	add	x8, x9, x8
  469a84:	b	469acc <feof@plt+0x6622c>
  469a88:	mov	x8, x9
  469a8c:	ldrb	w10, [x8, #3]!
  469a90:	ldrsb	w11, [x8, #1]
  469a94:	bfi	w10, w11, #8, #24
  469a98:	add	x11, x8, #0x2
  469a9c:	str	x11, [x29, #24]
  469aa0:	cbz	w10, 469abc <feof@plt+0x6621c>
  469aa4:	mov	w0, wzr
  469aa8:	b	469a00 <feof@plt+0x66160>
  469aac:	add	x8, x9, #0x5
  469ab0:	mov	w0, wzr
  469ab4:	str	x8, [x29, #24]
  469ab8:	b	469a00 <feof@plt+0x66160>
  469abc:	ldrb	w10, [x9, #1]
  469ac0:	ldrsb	x9, [x9, #2]
  469ac4:	bfi	x10, x9, #8, #56
  469ac8:	add	x8, x8, x10
  469acc:	str	x8, [x29, #24]
  469ad0:	b	4699f8 <feof@plt+0x66158>
  469ad4:	mov	x8, x0
  469ad8:	mov	w0, wzr
  469adc:	cbz	x8, 469af8 <feof@plt+0x66258>
  469ae0:	cbz	x1, 469af8 <feof@plt+0x66258>
  469ae4:	cmp	w2, #0x1
  469ae8:	b.lt	469af8 <feof@plt+0x66258>  // b.tstop
  469aec:	mov	w0, #0x1                   	// #1
  469af0:	stp	xzr, x1, [x8]
  469af4:	str	w2, [x8, #16]
  469af8:	ret
  469afc:	mov	x8, x0
  469b00:	mov	w0, wzr
  469b04:	cbz	x8, 469b28 <feof@plt+0x66288>
  469b08:	tbnz	w1, #31, 469b28 <feof@plt+0x66288>
  469b0c:	cbz	x2, 469b28 <feof@plt+0x66288>
  469b10:	adrp	x9, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  469b14:	ldr	d0, [x9, #1680]
  469b18:	mov	w0, #0x1                   	// #1
  469b1c:	str	w1, [x8, #8]
  469b20:	str	x2, [x8, #16]
  469b24:	str	d0, [x8]
  469b28:	ret
  469b2c:	sub	w9, w1, #0x1
  469b30:	mov	x8, x0
  469b34:	cmp	w9, #0x4
  469b38:	mov	w0, wzr
  469b3c:	b.hi	469b60 <feof@plt+0x662c0>  // b.pmore
  469b40:	cbz	x8, 469b60 <feof@plt+0x662c0>
  469b44:	cbz	x2, 469b60 <feof@plt+0x662c0>
  469b48:	adrp	x9, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  469b4c:	ldr	d0, [x9, #1688]
  469b50:	mov	w0, #0x1                   	// #1
  469b54:	str	w1, [x8, #8]
  469b58:	str	x2, [x8, #16]
  469b5c:	str	d0, [x8]
  469b60:	ret
  469b64:	sub	w9, w1, #0x1
  469b68:	mov	x8, x0
  469b6c:	cmp	w9, #0x4
  469b70:	mov	w0, wzr
  469b74:	b.hi	469b98 <feof@plt+0x662f8>  // b.pmore
  469b78:	cbz	x8, 469b98 <feof@plt+0x662f8>
  469b7c:	cbz	x2, 469b98 <feof@plt+0x662f8>
  469b80:	adrp	x9, 47d000 <_obstack_memory_used@@Base+0x12fc>
  469b84:	ldr	d0, [x9, #1648]
  469b88:	mov	w0, #0x1                   	// #1
  469b8c:	str	w1, [x8, #8]
  469b90:	str	x2, [x8, #16]
  469b94:	str	d0, [x8]
  469b98:	ret
  469b9c:	stp	x29, x30, [sp, #-32]!
  469ba0:	stp	x20, x19, [sp, #16]
  469ba4:	ldr	x8, [x0, #24]
  469ba8:	mov	x19, x0
  469bac:	mov	w20, w1
  469bb0:	mov	x29, sp
  469bb4:	ldrb	w9, [x8]
  469bb8:	cmp	w9, #0x5f
  469bbc:	b.ne	469bd4 <feof@plt+0x66334>  // b.any
  469bc0:	add	x10, x8, #0x1
  469bc4:	str	x10, [x19, #24]
  469bc8:	ldrb	w9, [x8, #1]
  469bcc:	mov	x8, x10
  469bd0:	b	469bd8 <feof@plt+0x66338>
  469bd4:	cbnz	w20, 469c1c <feof@plt+0x6637c>
  469bd8:	cmp	w9, #0x5a
  469bdc:	b.ne	469c1c <feof@plt+0x6637c>  // b.any
  469be0:	add	x8, x8, #0x1
  469be4:	mov	x0, x19
  469be8:	mov	w1, w20
  469bec:	str	x8, [x19, #24]
  469bf0:	bl	469d58 <feof@plt+0x664b8>
  469bf4:	cbz	w20, 469d44 <feof@plt+0x664a4>
  469bf8:	ldrb	w8, [x19, #16]
  469bfc:	tbz	w8, #0, 469d44 <feof@plt+0x664a4>
  469c00:	ldr	x11, [x19, #24]
  469c04:	ldrb	w8, [x11]
  469c08:	cmp	w8, #0x2e
  469c0c:	b.ne	469d44 <feof@plt+0x664a4>  // b.any
  469c10:	mov	w9, #0x18                  	// #24
  469c14:	mov	w10, #0x4e                  	// #78
  469c18:	b	469c3c <feof@plt+0x6639c>
  469c1c:	mov	x8, xzr
  469c20:	b	469d48 <feof@plt+0x664a8>
  469c24:	mov	x8, xzr
  469c28:	ldr	x11, [x19, #24]
  469c2c:	mov	x0, x8
  469c30:	ldrb	w12, [x11]
  469c34:	cmp	w12, #0x2e
  469c38:	b.ne	469d48 <feof@plt+0x664a8>  // b.any
  469c3c:	ldrb	w8, [x11, #1]
  469c40:	cmp	w8, #0x5f
  469c44:	b.eq	469c6c <feof@plt+0x663cc>  // b.none
  469c48:	sub	w12, w8, #0x61
  469c4c:	and	w12, w12, #0xff
  469c50:	cmp	w12, #0x1a
  469c54:	b.cc	469c6c <feof@plt+0x663cc>  // b.lo, b.ul, b.last
  469c58:	sub	w8, w8, #0x30
  469c5c:	cmp	w8, #0xa
  469c60:	mov	x12, x11
  469c64:	b.cc	469c94 <feof@plt+0x663f4>  // b.lo, b.ul, b.last
  469c68:	b	469d44 <feof@plt+0x664a4>
  469c6c:	add	x12, x11, #0x1
  469c70:	ldrb	w8, [x12, #1]!
  469c74:	cmp	w8, #0x5f
  469c78:	sub	w13, w8, #0x61
  469c7c:	b.eq	469c70 <feof@plt+0x663d0>  // b.none
  469c80:	and	w13, w13, #0xff
  469c84:	cmp	w13, #0x1a
  469c88:	b.cc	469c70 <feof@plt+0x663d0>  // b.lo, b.ul, b.last
  469c8c:	cmp	w8, #0x2e
  469c90:	b.ne	469cbc <feof@plt+0x6641c>  // b.any
  469c94:	ldrb	w8, [x12, #1]
  469c98:	sub	w8, w8, #0x30
  469c9c:	cmp	w8, #0x9
  469ca0:	b.hi	469cbc <feof@plt+0x6641c>  // b.pmore
  469ca4:	add	x12, x12, #0x1
  469ca8:	ldrb	w8, [x12, #1]!
  469cac:	sub	w13, w8, #0x30
  469cb0:	cmp	w13, #0xa
  469cb4:	b.cc	469ca8 <feof@plt+0x66408>  // b.lo, b.ul, b.last
  469cb8:	b	469c8c <feof@plt+0x663ec>
  469cbc:	ldp	w13, w8, [x19, #40]
  469cc0:	str	x12, [x19, #24]
  469cc4:	sxtw	x13, w13
  469cc8:	cmp	w13, w8
  469ccc:	mov	x8, xzr
  469cd0:	b.ge	469c28 <feof@plt+0x66388>  // b.tcont
  469cd4:	ldr	x15, [x19, #32]
  469cd8:	sub	w14, w12, w11
  469cdc:	add	w16, w13, #0x1
  469ce0:	cmp	w14, #0x1
  469ce4:	madd	x12, x13, x9, x15
  469ce8:	str	wzr, [x12, #4]
  469cec:	str	w16, [x19, #40]
  469cf0:	b.lt	469c28 <feof@plt+0x66388>  // b.tstop
  469cf4:	cbz	x15, 469c28 <feof@plt+0x66388>
  469cf8:	madd	x8, x13, x9, x15
  469cfc:	str	xzr, [x12]
  469d00:	str	x11, [x8, #8]
  469d04:	str	w14, [x8, #16]
  469d08:	cbz	x0, 469c24 <feof@plt+0x66384>
  469d0c:	ldp	w11, w8, [x19, #40]
  469d10:	sxtw	x11, w11
  469d14:	cmp	w11, w8
  469d18:	b.ge	469c24 <feof@plt+0x66384>  // b.tcont
  469d1c:	ldr	x13, [x19, #32]
  469d20:	add	w14, w11, #0x1
  469d24:	madd	x8, x11, x9, x13
  469d28:	str	wzr, [x8, #4]
  469d2c:	str	w14, [x19, #40]
  469d30:	cbz	x13, 469c24 <feof@plt+0x66384>
  469d34:	madd	x11, x11, x9, x13
  469d38:	str	w10, [x8]
  469d3c:	stp	x0, x12, [x11, #8]
  469d40:	b	469c28 <feof@plt+0x66388>
  469d44:	mov	x8, x0
  469d48:	ldp	x20, x19, [sp, #16]
  469d4c:	mov	x0, x8
  469d50:	ldp	x29, x30, [sp], #32
  469d54:	ret
  469d58:	stp	x29, x30, [sp, #-48]!
  469d5c:	stp	x22, x21, [sp, #16]
  469d60:	stp	x20, x19, [sp, #32]
  469d64:	mov	x22, x0
  469d68:	ldr	x9, [x22, #24]!
  469d6c:	mov	x19, x0
  469d70:	mov	x29, sp
  469d74:	ldrb	w8, [x9]
  469d78:	cmp	w8, #0x54
  469d7c:	b.eq	469d88 <feof@plt+0x664e8>  // b.none
  469d80:	cmp	w8, #0x47
  469d84:	b.ne	469e2c <feof@plt+0x6658c>  // b.any
  469d88:	ldr	w10, [x19, #72]
  469d8c:	add	w8, w10, #0x14
  469d90:	str	w8, [x19, #72]
  469d94:	ldrb	w8, [x9]
  469d98:	cmp	w8, #0x47
  469d9c:	b.eq	469e7c <feof@plt+0x665dc>  // b.none
  469da0:	cmp	w8, #0x54
  469da4:	b.ne	46aedc <feof@plt+0x6763c>  // b.any
  469da8:	add	x8, x9, #0x1
  469dac:	str	x8, [x22]
  469db0:	ldrb	w8, [x9, #1]
  469db4:	cbz	w8, 46aedc <feof@plt+0x6763c>
  469db8:	add	x8, x9, #0x2
  469dbc:	str	x8, [x22]
  469dc0:	ldrb	w11, [x9, #1]
  469dc4:	mov	x20, xzr
  469dc8:	sub	w11, w11, #0x41
  469dcc:	cmp	w11, #0x35
  469dd0:	b.hi	46aee0 <feof@plt+0x67640>  // b.pmore
  469dd4:	adrp	x12, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  469dd8:	add	x12, x12, #0x704
  469ddc:	adr	x13, 469dec <feof@plt+0x6654c>
  469de0:	ldrh	w14, [x12, x11, lsl #1]
  469de4:	add	x13, x13, x14, lsl #2
  469de8:	br	x13
  469dec:	mov	x0, x19
  469df0:	bl	46d8e8 <feof@plt+0x6a048>
  469df4:	cbz	x0, 46aedc <feof@plt+0x6763c>
  469df8:	ldp	w8, w9, [x19, #40]
  469dfc:	sxtw	x8, w8
  469e00:	cmp	w8, w9
  469e04:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  469e08:	ldr	x9, [x19, #32]
  469e0c:	mov	w10, #0x18                  	// #24
  469e10:	add	w11, w8, #0x1
  469e14:	madd	x20, x8, x10, x9
  469e18:	str	wzr, [x20, #4]
  469e1c:	str	w11, [x19, #40]
  469e20:	cbz	x9, 46aedc <feof@plt+0x6763c>
  469e24:	mov	w10, #0x30                  	// #48
  469e28:	b	46a89c <feof@plt+0x66ffc>
  469e2c:	mov	x0, x19
  469e30:	mov	w21, w1
  469e34:	bl	46d138 <feof@plt+0x69898>
  469e38:	mov	x20, x0
  469e3c:	cbz	x0, 46aee0 <feof@plt+0x67640>
  469e40:	cbz	w21, 469f04 <feof@plt+0x66664>
  469e44:	ldrb	w8, [x19, #16]
  469e48:	tbnz	w8, #0, 469f04 <feof@plt+0x66664>
  469e4c:	adrp	x8, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  469e50:	add	x8, x8, #0x80e
  469e54:	ldr	w9, [x20]
  469e58:	sub	w9, w9, #0x2
  469e5c:	cmp	w9, #0x4e
  469e60:	b.hi	46aee0 <feof@plt+0x67640>  // b.pmore
  469e64:	adr	x10, 469e74 <feof@plt+0x665d4>
  469e68:	ldrh	w11, [x8, x9, lsl #1]
  469e6c:	add	x10, x10, x11, lsl #2
  469e70:	br	x10
  469e74:	ldr	x20, [x20, #8]
  469e78:	b	469e54 <feof@plt+0x665b4>
  469e7c:	add	x8, x9, #0x1
  469e80:	str	x8, [x22]
  469e84:	ldrb	w8, [x9, #1]
  469e88:	cbz	w8, 46aedc <feof@plt+0x6763c>
  469e8c:	add	x8, x9, #0x2
  469e90:	str	x8, [x22]
  469e94:	ldrb	w10, [x9, #1]
  469e98:	mov	x20, xzr
  469e9c:	sub	w10, w10, #0x41
  469ea0:	cmp	w10, #0x31
  469ea4:	b.hi	46aee0 <feof@plt+0x67640>  // b.pmore
  469ea8:	adrp	x11, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  469eac:	add	x11, x11, #0x6a0
  469eb0:	adr	x12, 469ec0 <feof@plt+0x66620>
  469eb4:	ldrh	w13, [x11, x10, lsl #1]
  469eb8:	add	x12, x12, x13, lsl #2
  469ebc:	br	x12
  469ec0:	mov	x0, x19
  469ec4:	mov	w1, wzr
  469ec8:	bl	469d58 <feof@plt+0x664b8>
  469ecc:	cbz	x0, 46aedc <feof@plt+0x6763c>
  469ed0:	ldp	w8, w9, [x19, #40]
  469ed4:	sxtw	x8, w8
  469ed8:	cmp	w8, w9
  469edc:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  469ee0:	ldr	x9, [x19, #32]
  469ee4:	mov	w10, #0x18                  	// #24
  469ee8:	add	w11, w8, #0x1
  469eec:	madd	x20, x8, x10, x9
  469ef0:	str	wzr, [x20, #4]
  469ef4:	str	w11, [x19, #40]
  469ef8:	cbz	x9, 46aedc <feof@plt+0x6763c>
  469efc:	mov	w10, #0x17                  	// #23
  469f00:	b	46a89c <feof@plt+0x66ffc>
  469f04:	ldr	x8, [x22]
  469f08:	ldrb	w9, [x8]
  469f0c:	cbz	w9, 46aee0 <feof@plt+0x67640>
  469f10:	cmp	w9, #0x45
  469f14:	b.eq	46aee0 <feof@plt+0x67640>  // b.none
  469f18:	adrp	x11, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  469f1c:	add	x11, x11, #0x770
  469f20:	mov	x12, x20
  469f24:	ldr	w10, [x12]
  469f28:	sub	w13, w10, #0x2
  469f2c:	cmp	w13, #0x4e
  469f30:	mov	w10, wzr
  469f34:	b.hi	46a9d4 <feof@plt+0x67134>  // b.pmore
  469f38:	adr	x14, 469f48 <feof@plt+0x666a8>
  469f3c:	ldrh	w15, [x11, x13, lsl #1]
  469f40:	add	x14, x14, x15, lsl #2
  469f44:	br	x14
  469f48:	add	x10, x12, #0x8
  469f4c:	ldr	x12, [x10]
  469f50:	cbnz	x12, 469f24 <feof@plt+0x66684>
  469f54:	b	46a9d0 <feof@plt+0x67130>
  469f58:	add	x10, x12, #0x10
  469f5c:	b	469f4c <feof@plt+0x666ac>
  469f60:	ldr	x8, [x20, #16]
  469f64:	mov	x10, #0x1f                  	// #31
  469f68:	mov	w9, #0x1                   	// #1
  469f6c:	movk	x10, #0x1a, lsl #48
  469f70:	ldr	w11, [x8]
  469f74:	sub	w11, w11, #0x1c
  469f78:	cmp	w11, #0x34
  469f7c:	b.hi	46aee0 <feof@plt+0x67640>  // b.pmore
  469f80:	lsl	x11, x9, x11
  469f84:	tst	x11, x10
  469f88:	b.eq	46aee0 <feof@plt+0x67640>  // b.none
  469f8c:	ldr	x8, [x8, #8]
  469f90:	str	x8, [x20, #16]
  469f94:	b	469f70 <feof@plt+0x666d0>
  469f98:	mov	x0, x19
  469f9c:	bl	46d138 <feof@plt+0x69898>
  469fa0:	ldp	w9, w8, [x19, #40]
  469fa4:	sxtw	x9, w9
  469fa8:	cmp	w9, w8
  469fac:	b.ge	46a0bc <feof@plt+0x6681c>  // b.tcont
  469fb0:	ldr	x10, [x19, #32]
  469fb4:	mov	w8, #0x18                  	// #24
  469fb8:	add	w11, w9, #0x1
  469fbc:	madd	x8, x9, x8, x10
  469fc0:	str	wzr, [x8, #4]
  469fc4:	str	w11, [x19, #40]
  469fc8:	cbz	x10, 46a0bc <feof@plt+0x6681c>
  469fcc:	mov	w11, #0x42                  	// #66
  469fd0:	str	w11, [x8]
  469fd4:	ldr	x15, [x22]
  469fd8:	ldrb	w12, [x15]
  469fdc:	cmp	w12, #0x6e
  469fe0:	b.ne	46aab0 <feof@plt+0x67210>  // b.any
  469fe4:	add	x13, x15, #0x1
  469fe8:	str	x13, [x22]
  469fec:	ldrb	w12, [x15, #1]
  469ff0:	mov	w11, #0x1                   	// #1
  469ff4:	mov	x15, x13
  469ff8:	b	46aab4 <feof@plt+0x67214>
  469ffc:	ldrb	w8, [x8]
  46a000:	cbz	w8, 46a85c <feof@plt+0x66fbc>
  46a004:	add	x8, x9, #0x3
  46a008:	str	x8, [x19, #24]
  46a00c:	ldrb	w20, [x9, #2]
  46a010:	mov	x0, x19
  46a014:	mov	w1, wzr
  46a018:	bl	469d58 <feof@plt+0x664b8>
  46a01c:	cmp	w20, #0x6e
  46a020:	b.ne	46a868 <feof@plt+0x66fc8>  // b.any
  46a024:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46a028:	ldp	w8, w9, [x19, #40]
  46a02c:	sxtw	x8, w8
  46a030:	cmp	w8, w9
  46a034:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a038:	ldr	x9, [x19, #32]
  46a03c:	mov	w10, #0x18                  	// #24
  46a040:	add	w11, w8, #0x1
  46a044:	madd	x20, x8, x10, x9
  46a048:	str	wzr, [x20, #4]
  46a04c:	str	w11, [x19, #40]
  46a050:	cbz	x9, 46aedc <feof@plt+0x6763c>
  46a054:	mov	w10, #0x4a                  	// #74
  46a058:	b	46a89c <feof@plt+0x66ffc>
  46a05c:	mov	x0, x19
  46a060:	bl	46d138 <feof@plt+0x69898>
  46a064:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46a068:	ldp	w8, w9, [x19, #40]
  46a06c:	sxtw	x8, w8
  46a070:	cmp	w8, w9
  46a074:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a078:	ldr	x9, [x19, #32]
  46a07c:	mov	w10, #0x18                  	// #24
  46a080:	add	w11, w8, #0x1
  46a084:	madd	x20, x8, x10, x9
  46a088:	str	wzr, [x20, #4]
  46a08c:	str	w11, [x19, #40]
  46a090:	cbz	x9, 46aedc <feof@plt+0x6763c>
  46a094:	mov	w10, #0x13                  	// #19
  46a098:	b	46a89c <feof@plt+0x66ffc>
  46a09c:	ldrb	w10, [x8]
  46a0a0:	cmp	w10, #0x6e
  46a0a4:	b.ne	46a0ec <feof@plt+0x6684c>  // b.any
  46a0a8:	add	x8, x9, #0x3
  46a0ac:	str	x8, [x22]
  46a0b0:	ldrb	w10, [x9, #3]
  46a0b4:	mov	w9, #0x1                   	// #1
  46a0b8:	b	46a0f0 <feof@plt+0x66850>
  46a0bc:	mov	x8, xzr
  46a0c0:	b	46ad08 <feof@plt+0x67468>
  46a0c4:	ldr	x10, [x12, #8]
  46a0c8:	cbz	x10, 46a0e4 <feof@plt+0x66844>
  46a0cc:	ldr	w11, [x10]
  46a0d0:	sub	w12, w11, #0x1
  46a0d4:	cmp	w12, #0x2
  46a0d8:	b.cs	46a9a8 <feof@plt+0x67108>  // b.hs, b.nlast
  46a0dc:	ldr	x10, [x10, #16]
  46a0e0:	cbnz	x10, 46a0cc <feof@plt+0x6682c>
  46a0e4:	mov	w10, #0x1                   	// #1
  46a0e8:	b	46a9d4 <feof@plt+0x67134>
  46a0ec:	mov	w9, wzr
  46a0f0:	sub	w11, w10, #0x30
  46a0f4:	cmp	w11, #0x9
  46a0f8:	b.hi	46a15c <feof@plt+0x668bc>  // b.pmore
  46a0fc:	mov	w12, #0x2f                  	// #47
  46a100:	mov	w13, #0x6667                	// #26215
  46a104:	mov	w11, wzr
  46a108:	movk	w12, #0x8000, lsl #16
  46a10c:	add	x8, x8, #0x1
  46a110:	movk	w13, #0x6666, lsl #16
  46a114:	mov	w14, #0xa                   	// #10
  46a118:	and	w15, w10, #0xff
  46a11c:	sub	w10, w12, w15
  46a120:	smull	x10, w10, w13
  46a124:	lsr	x16, x10, #63
  46a128:	asr	x10, x10, #34
  46a12c:	add	w10, w10, w16
  46a130:	cmp	w11, w10
  46a134:	b.gt	46aedc <feof@plt+0x6763c>
  46a138:	str	x8, [x22]
  46a13c:	ldrb	w10, [x8], #1
  46a140:	madd	w11, w11, w14, w15
  46a144:	sub	w11, w11, #0x30
  46a148:	sub	w15, w10, #0x30
  46a14c:	cmp	w15, #0xa
  46a150:	b.cc	46a118 <feof@plt+0x66878>  // b.lo, b.ul, b.last
  46a154:	sub	x8, x8, #0x1
  46a158:	b	46a160 <feof@plt+0x668c0>
  46a15c:	mov	w11, wzr
  46a160:	cmp	w9, #0x0
  46a164:	mov	x20, xzr
  46a168:	cneg	w9, w11, ne  // ne = any
  46a16c:	cbz	w10, 46aee0 <feof@plt+0x67640>
  46a170:	cmp	w9, #0x2
  46a174:	b.lt	46aee0 <feof@plt+0x67640>  // b.tstop
  46a178:	add	x12, x8, #0x1
  46a17c:	str	x12, [x22]
  46a180:	ldrb	w8, [x8]
  46a184:	cmp	w8, #0x5f
  46a188:	b.ne	46aedc <feof@plt+0x6763c>  // b.any
  46a18c:	mov	x8, xzr
  46a190:	sub	w13, w9, #0x1
  46a194:	mov	w9, #0x18                  	// #24
  46a198:	mov	w10, #0x41                  	// #65
  46a19c:	mov	w11, #0x40                  	// #64
  46a1a0:	b	46a6d0 <feof@plt+0x66e30>
  46a1a4:	mov	x0, x19
  46a1a8:	bl	46aef4 <feof@plt+0x67654>
  46a1ac:	ldr	x10, [x19, #24]
  46a1b0:	mov	x21, x0
  46a1b4:	ldrb	w9, [x10]
  46a1b8:	cmp	w9, #0x6e
  46a1bc:	b.ne	46a8b0 <feof@plt+0x67010>  // b.any
  46a1c0:	add	x11, x10, #0x1
  46a1c4:	str	x11, [x22]
  46a1c8:	ldrb	w9, [x10, #1]
  46a1cc:	mov	w8, #0x1                   	// #1
  46a1d0:	mov	x10, x11
  46a1d4:	b	46a8b4 <feof@plt+0x67014>
  46a1d8:	mov	x0, x19
  46a1dc:	bl	46aef4 <feof@plt+0x67654>
  46a1e0:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46a1e4:	ldp	w8, w9, [x19, #40]
  46a1e8:	sxtw	x8, w8
  46a1ec:	cmp	w8, w9
  46a1f0:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a1f4:	ldr	x9, [x19, #32]
  46a1f8:	mov	w10, #0x18                  	// #24
  46a1fc:	add	w11, w8, #0x1
  46a200:	madd	x20, x8, x10, x9
  46a204:	str	wzr, [x20, #4]
  46a208:	str	w11, [x19, #40]
  46a20c:	cbz	x9, 46aedc <feof@plt+0x6763c>
  46a210:	mov	w10, #0xe                   	// #14
  46a214:	b	46a89c <feof@plt+0x66ffc>
  46a218:	mov	x0, x19
  46a21c:	bl	46d138 <feof@plt+0x69898>
  46a220:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46a224:	ldp	w8, w9, [x19, #40]
  46a228:	sxtw	x8, w8
  46a22c:	cmp	w8, w9
  46a230:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a234:	ldr	x9, [x19, #32]
  46a238:	mov	w10, #0x18                  	// #24
  46a23c:	add	w11, w8, #0x1
  46a240:	madd	x20, x8, x10, x9
  46a244:	str	wzr, [x20, #4]
  46a248:	str	w11, [x19, #40]
  46a24c:	cbz	x9, 46aedc <feof@plt+0x6763c>
  46a250:	mov	w10, #0x14                  	// #20
  46a254:	b	46a89c <feof@plt+0x66ffc>
  46a258:	mov	x0, x19
  46a25c:	bl	46aef4 <feof@plt+0x67654>
  46a260:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46a264:	ldp	w8, w9, [x19, #40]
  46a268:	sxtw	x8, w8
  46a26c:	cmp	w8, w9
  46a270:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a274:	ldr	x9, [x19, #32]
  46a278:	mov	w10, #0x18                  	// #24
  46a27c:	add	w11, w8, #0x1
  46a280:	madd	x20, x8, x10, x9
  46a284:	str	wzr, [x20, #4]
  46a288:	str	w11, [x19, #40]
  46a28c:	cbz	x9, 46aedc <feof@plt+0x6763c>
  46a290:	mov	w10, #0xc                   	// #12
  46a294:	b	46a89c <feof@plt+0x66ffc>
  46a298:	mov	x0, x19
  46a29c:	bl	46aef4 <feof@plt+0x67654>
  46a2a0:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46a2a4:	ldp	w8, w9, [x19, #40]
  46a2a8:	sxtw	x8, w8
  46a2ac:	cmp	w8, w9
  46a2b0:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a2b4:	ldr	x9, [x19, #32]
  46a2b8:	mov	w10, #0x18                  	// #24
  46a2bc:	add	w11, w8, #0x1
  46a2c0:	madd	x20, x8, x10, x9
  46a2c4:	str	wzr, [x20, #4]
  46a2c8:	str	w11, [x19, #40]
  46a2cc:	cbz	x9, 46aedc <feof@plt+0x6763c>
  46a2d0:	mov	w10, #0x12                  	// #18
  46a2d4:	b	46a89c <feof@plt+0x66ffc>
  46a2d8:	mov	x0, x19
  46a2dc:	bl	46aef4 <feof@plt+0x67654>
  46a2e0:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46a2e4:	ldp	w8, w9, [x19, #40]
  46a2e8:	sxtw	x8, w8
  46a2ec:	cmp	w8, w9
  46a2f0:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a2f4:	ldr	x9, [x19, #32]
  46a2f8:	mov	w10, #0x18                  	// #24
  46a2fc:	add	w11, w8, #0x1
  46a300:	madd	x20, x8, x10, x9
  46a304:	str	wzr, [x20, #4]
  46a308:	str	w11, [x19, #40]
  46a30c:	cbz	x9, 46aedc <feof@plt+0x6763c>
  46a310:	mov	w10, #0xd                   	// #13
  46a314:	b	46a89c <feof@plt+0x66ffc>
  46a318:	add	w8, w10, #0xa
  46a31c:	mov	x0, x19
  46a320:	str	w8, [x19, #72]
  46a324:	bl	46aef4 <feof@plt+0x67654>
  46a328:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46a32c:	ldp	w8, w9, [x19, #40]
  46a330:	sxtw	x8, w8
  46a334:	cmp	w8, w9
  46a338:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a33c:	ldr	x9, [x19, #32]
  46a340:	mov	w10, #0x18                  	// #24
  46a344:	add	w11, w8, #0x1
  46a348:	madd	x20, x8, x10, x9
  46a34c:	str	wzr, [x20, #4]
  46a350:	str	w11, [x19, #40]
  46a354:	cbz	x9, 46aedc <feof@plt+0x6763c>
  46a358:	mov	w10, #0xa                   	// #10
  46a35c:	b	46a89c <feof@plt+0x66ffc>
  46a360:	add	w8, w10, #0xf
  46a364:	mov	x0, x19
  46a368:	str	w8, [x19, #72]
  46a36c:	bl	46aef4 <feof@plt+0x67654>
  46a370:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46a374:	ldp	w8, w9, [x19, #40]
  46a378:	sxtw	x8, w8
  46a37c:	cmp	w8, w9
  46a380:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a384:	ldr	x9, [x19, #32]
  46a388:	mov	w10, #0x18                  	// #24
  46a38c:	add	w11, w8, #0x1
  46a390:	madd	x20, x8, x10, x9
  46a394:	str	wzr, [x20, #4]
  46a398:	str	w11, [x19, #40]
  46a39c:	cbz	x9, 46aedc <feof@plt+0x6763c>
  46a3a0:	mov	w10, #0x9                   	// #9
  46a3a4:	b	46a89c <feof@plt+0x66ffc>
  46a3a8:	mov	x0, x19
  46a3ac:	bl	46d138 <feof@plt+0x69898>
  46a3b0:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46a3b4:	ldp	w8, w9, [x19, #40]
  46a3b8:	sxtw	x8, w8
  46a3bc:	cmp	w8, w9
  46a3c0:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a3c4:	ldr	x9, [x19, #32]
  46a3c8:	mov	w10, #0x18                  	// #24
  46a3cc:	add	w11, w8, #0x1
  46a3d0:	madd	x20, x8, x10, x9
  46a3d4:	str	wzr, [x20, #4]
  46a3d8:	str	w11, [x19, #40]
  46a3dc:	cbz	x9, 46aedc <feof@plt+0x6763c>
  46a3e0:	mov	w10, #0x15                  	// #21
  46a3e4:	b	46a89c <feof@plt+0x66ffc>
  46a3e8:	ldrb	w8, [x8]
  46a3ec:	cbz	w8, 46aedc <feof@plt+0x6763c>
  46a3f0:	add	x8, x9, #0x3
  46a3f4:	str	x8, [x22]
  46a3f8:	ldrb	w10, [x9, #2]
  46a3fc:	cmp	w10, #0x76
  46a400:	b.eq	46ab30 <feof@plt+0x67290>  // b.none
  46a404:	cmp	w10, #0x68
  46a408:	b.ne	46aedc <feof@plt+0x6763c>  // b.any
  46a40c:	ldrb	w10, [x8]
  46a410:	cmp	w10, #0x6e
  46a414:	b.ne	46a424 <feof@plt+0x66b84>  // b.any
  46a418:	add	x8, x9, #0x4
  46a41c:	str	x8, [x22]
  46a420:	ldrb	w10, [x9, #4]
  46a424:	sub	w9, w10, #0x30
  46a428:	cmp	w9, #0x9
  46a42c:	b.hi	46ac44 <feof@plt+0x673a4>  // b.pmore
  46a430:	mov	w9, #0x2f                  	// #47
  46a434:	mov	w12, #0x6667                	// #26215
  46a438:	mov	w11, wzr
  46a43c:	movk	w9, #0x8000, lsl #16
  46a440:	add	x8, x8, #0x1
  46a444:	movk	w12, #0x6666, lsl #16
  46a448:	mov	w13, #0xa                   	// #10
  46a44c:	and	w14, w10, #0xff
  46a450:	sub	w10, w9, w14
  46a454:	smull	x10, w10, w12
  46a458:	lsr	x15, x10, #63
  46a45c:	asr	x10, x10, #34
  46a460:	add	w10, w10, w15
  46a464:	cmp	w11, w10
  46a468:	b.gt	46aedc <feof@plt+0x6763c>
  46a46c:	str	x8, [x22]
  46a470:	ldrb	w10, [x8], #1
  46a474:	madd	w11, w11, w13, w14
  46a478:	sub	w11, w11, #0x30
  46a47c:	sub	w14, w10, #0x30
  46a480:	cmp	w14, #0xa
  46a484:	b.cc	46a44c <feof@plt+0x66bac>  // b.lo, b.ul, b.last
  46a488:	b	46ac40 <feof@plt+0x673a0>
  46a48c:	ldrb	w10, [x8]
  46a490:	cmp	w10, #0x6e
  46a494:	b.ne	46a4a4 <feof@plt+0x66c04>  // b.any
  46a498:	add	x8, x9, #0x3
  46a49c:	str	x8, [x22]
  46a4a0:	ldrb	w10, [x9, #3]
  46a4a4:	sub	w9, w10, #0x30
  46a4a8:	cmp	w9, #0x9
  46a4ac:	b.hi	46a50c <feof@plt+0x66c6c>  // b.pmore
  46a4b0:	mov	w9, #0x2f                  	// #47
  46a4b4:	mov	w12, #0x6667                	// #26215
  46a4b8:	mov	w11, wzr
  46a4bc:	movk	w9, #0x8000, lsl #16
  46a4c0:	add	x8, x8, #0x1
  46a4c4:	movk	w12, #0x6666, lsl #16
  46a4c8:	mov	w13, #0xa                   	// #10
  46a4cc:	and	w14, w10, #0xff
  46a4d0:	sub	w10, w9, w14
  46a4d4:	smull	x10, w10, w12
  46a4d8:	lsr	x15, x10, #63
  46a4dc:	asr	x10, x10, #34
  46a4e0:	add	w10, w10, w15
  46a4e4:	cmp	w11, w10
  46a4e8:	b.gt	46aedc <feof@plt+0x6763c>
  46a4ec:	str	x8, [x22]
  46a4f0:	ldrb	w10, [x8], #1
  46a4f4:	madd	w11, w11, w13, w14
  46a4f8:	sub	w11, w11, #0x30
  46a4fc:	sub	w14, w10, #0x30
  46a500:	cmp	w14, #0xa
  46a504:	b.cc	46a4cc <feof@plt+0x66c2c>  // b.lo, b.ul, b.last
  46a508:	sub	x8, x8, #0x1
  46a50c:	cmp	w10, #0x5f
  46a510:	b.ne	46aedc <feof@plt+0x6763c>  // b.any
  46a514:	add	x8, x8, #0x1
  46a518:	mov	x0, x19
  46a51c:	mov	w1, wzr
  46a520:	str	x8, [x19, #24]
  46a524:	bl	469d58 <feof@plt+0x664b8>
  46a528:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46a52c:	ldp	w8, w9, [x19, #40]
  46a530:	sxtw	x8, w8
  46a534:	cmp	w8, w9
  46a538:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a53c:	ldr	x9, [x19, #32]
  46a540:	mov	w10, #0x18                  	// #24
  46a544:	add	w11, w8, #0x1
  46a548:	madd	x20, x8, x10, x9
  46a54c:	str	wzr, [x20, #4]
  46a550:	str	w11, [x19, #40]
  46a554:	cbz	x9, 46aedc <feof@plt+0x6763c>
  46a558:	mov	w10, #0xf                   	// #15
  46a55c:	b	46a89c <feof@plt+0x66ffc>
  46a560:	ldrb	w10, [x8]
  46a564:	cmp	w10, #0x6e
  46a568:	b.ne	46a578 <feof@plt+0x66cd8>  // b.any
  46a56c:	add	x8, x9, #0x3
  46a570:	str	x8, [x22]
  46a574:	ldrb	w10, [x9, #3]
  46a578:	sub	w9, w10, #0x30
  46a57c:	cmp	w9, #0x9
  46a580:	b.hi	46a5e0 <feof@plt+0x66d40>  // b.pmore
  46a584:	mov	w9, #0x2f                  	// #47
  46a588:	mov	w12, #0x6667                	// #26215
  46a58c:	mov	w11, wzr
  46a590:	movk	w9, #0x8000, lsl #16
  46a594:	add	x8, x8, #0x1
  46a598:	movk	w12, #0x6666, lsl #16
  46a59c:	mov	w13, #0xa                   	// #10
  46a5a0:	and	w14, w10, #0xff
  46a5a4:	sub	w10, w9, w14
  46a5a8:	smull	x10, w10, w12
  46a5ac:	lsr	x15, x10, #63
  46a5b0:	asr	x10, x10, #34
  46a5b4:	add	w10, w10, w15
  46a5b8:	cmp	w11, w10
  46a5bc:	b.gt	46aedc <feof@plt+0x6763c>
  46a5c0:	str	x8, [x22]
  46a5c4:	ldrb	w10, [x8], #1
  46a5c8:	madd	w11, w11, w13, w14
  46a5cc:	sub	w11, w11, #0x30
  46a5d0:	sub	w14, w10, #0x30
  46a5d4:	cmp	w14, #0xa
  46a5d8:	b.cc	46a5a0 <feof@plt+0x66d00>  // b.lo, b.ul, b.last
  46a5dc:	sub	x8, x8, #0x1
  46a5e0:	cmp	w10, #0x5f
  46a5e4:	b.ne	46aedc <feof@plt+0x6763c>  // b.any
  46a5e8:	add	x11, x8, #0x1
  46a5ec:	str	x11, [x22]
  46a5f0:	ldrb	w9, [x8, #1]
  46a5f4:	cmp	w9, #0x6e
  46a5f8:	b.ne	46a608 <feof@plt+0x66d68>  // b.any
  46a5fc:	add	x11, x8, #0x2
  46a600:	str	x11, [x22]
  46a604:	ldrb	w9, [x8, #2]
  46a608:	sub	w8, w9, #0x30
  46a60c:	cmp	w8, #0x9
  46a610:	b.hi	46a670 <feof@plt+0x66dd0>  // b.pmore
  46a614:	mov	w10, #0x2f                  	// #47
  46a618:	add	x8, x11, #0x1
  46a61c:	mov	w11, #0x6667                	// #26215
  46a620:	mov	w12, wzr
  46a624:	movk	w10, #0x8000, lsl #16
  46a628:	movk	w11, #0x6666, lsl #16
  46a62c:	mov	w13, #0xa                   	// #10
  46a630:	and	w14, w9, #0xff
  46a634:	sub	w9, w10, w14
  46a638:	smull	x9, w9, w11
  46a63c:	lsr	x15, x9, #63
  46a640:	asr	x9, x9, #34
  46a644:	add	w9, w9, w15
  46a648:	cmp	w12, w9
  46a64c:	b.gt	46aedc <feof@plt+0x6763c>
  46a650:	str	x8, [x22]
  46a654:	ldrb	w9, [x8], #1
  46a658:	madd	w12, w12, w13, w14
  46a65c:	sub	w12, w12, #0x30
  46a660:	sub	w14, w9, #0x30
  46a664:	cmp	w14, #0xa
  46a668:	b.cc	46a630 <feof@plt+0x66d90>  // b.lo, b.ul, b.last
  46a66c:	sub	x11, x8, #0x1
  46a670:	cmp	w9, #0x5f
  46a674:	b.ne	46aedc <feof@plt+0x6763c>  // b.any
  46a678:	add	x8, x11, #0x1
  46a67c:	mov	x0, x19
  46a680:	mov	w1, wzr
  46a684:	str	x8, [x19, #24]
  46a688:	bl	469d58 <feof@plt+0x664b8>
  46a68c:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46a690:	ldp	w8, w9, [x19, #40]
  46a694:	sxtw	x8, w8
  46a698:	cmp	w8, w9
  46a69c:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a6a0:	ldr	x9, [x19, #32]
  46a6a4:	mov	w10, #0x18                  	// #24
  46a6a8:	add	w11, w8, #0x1
  46a6ac:	madd	x20, x8, x10, x9
  46a6b0:	str	wzr, [x20, #4]
  46a6b4:	str	w11, [x19, #40]
  46a6b8:	cbz	x9, 46aedc <feof@plt+0x6763c>
  46a6bc:	mov	w10, #0x10                  	// #16
  46a6c0:	b	46a89c <feof@plt+0x66ffc>
  46a6c4:	mov	x8, x14
  46a6c8:	cmp	w13, #0x0
  46a6cc:	b.le	46a818 <feof@plt+0x66f78>
  46a6d0:	ldrb	w15, [x12]
  46a6d4:	mov	w13, w13
  46a6d8:	cmp	w15, #0x24
  46a6dc:	b.eq	46a718 <feof@plt+0x66e78>  // b.none
  46a6e0:	cbz	w15, 46aedc <feof@plt+0x6763c>
  46a6e4:	mov	w14, #0x1                   	// #1
  46a6e8:	ands	w15, w15, #0xff
  46a6ec:	b.eq	46a710 <feof@plt+0x66e70>  // b.none
  46a6f0:	cmp	w15, #0x24
  46a6f4:	b.eq	46a710 <feof@plt+0x66e70>  // b.none
  46a6f8:	cmp	x13, x14
  46a6fc:	b.eq	46a73c <feof@plt+0x66e9c>  // b.none
  46a700:	ldrb	w15, [x12, x14]
  46a704:	add	x14, x14, #0x1
  46a708:	ands	w15, w15, #0xff
  46a70c:	b.ne	46a6f0 <feof@plt+0x66e50>  // b.any
  46a710:	sub	w15, w14, #0x1
  46a714:	b	46a740 <feof@plt+0x66ea0>
  46a718:	ldrb	w12, [x12, #1]
  46a71c:	cmp	w12, #0x24
  46a720:	b.eq	46a790 <feof@plt+0x66ef0>  // b.none
  46a724:	cmp	w12, #0x53
  46a728:	b.eq	46a78c <feof@plt+0x66eec>  // b.none
  46a72c:	cmp	w12, #0x5f
  46a730:	b.ne	46aedc <feof@plt+0x6763c>  // b.any
  46a734:	mov	w12, #0x2e                  	// #46
  46a738:	b	46a790 <feof@plt+0x66ef0>
  46a73c:	mov	w15, w13
  46a740:	ldp	w16, w14, [x19, #40]
  46a744:	sxtw	x16, w16
  46a748:	cmp	w16, w14
  46a74c:	b.ge	46ad50 <feof@plt+0x674b0>  // b.tcont
  46a750:	ldr	x17, [x19, #32]
  46a754:	add	w18, w16, #0x1
  46a758:	madd	x14, x16, x9, x17
  46a75c:	str	wzr, [x14, #4]
  46a760:	str	w18, [x19, #40]
  46a764:	cbz	w15, 46ad50 <feof@plt+0x674b0>
  46a768:	cbz	x17, 46ad50 <feof@plt+0x674b0>
  46a76c:	madd	x16, x16, x9, x17
  46a770:	str	xzr, [x14]
  46a774:	str	x12, [x16, #8]
  46a778:	str	w15, [x16, #16]
  46a77c:	ldr	x12, [x22]
  46a780:	sub	w13, w13, w15
  46a784:	add	x12, x12, w15, uxtw
  46a788:	b	46a7d0 <feof@plt+0x66f30>
  46a78c:	mov	w12, #0x2f                  	// #47
  46a790:	ldp	w15, w14, [x19, #40]
  46a794:	sxtw	x15, w15
  46a798:	cmp	w15, w14
  46a79c:	b.ge	46ad60 <feof@plt+0x674c0>  // b.tcont
  46a7a0:	ldr	x16, [x19, #32]
  46a7a4:	add	w17, w15, #0x1
  46a7a8:	madd	x14, x15, x9, x16
  46a7ac:	str	wzr, [x14, #4]
  46a7b0:	str	w17, [x19, #40]
  46a7b4:	cbz	x16, 46ad60 <feof@plt+0x674c0>
  46a7b8:	madd	x15, x15, x9, x16
  46a7bc:	str	w10, [x14]
  46a7c0:	str	w12, [x15, #8]
  46a7c4:	ldr	x12, [x22]
  46a7c8:	sub	w13, w13, #0x2
  46a7cc:	add	x12, x12, #0x2
  46a7d0:	str	x12, [x22]
  46a7d4:	cbz	x8, 46a6c4 <feof@plt+0x66e24>
  46a7d8:	ldp	w15, w16, [x19, #40]
  46a7dc:	sxtw	x15, w15
  46a7e0:	cmp	w15, w16
  46a7e4:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a7e8:	ldr	x16, [x19, #32]
  46a7ec:	add	w18, w15, #0x1
  46a7f0:	madd	x17, x15, x9, x16
  46a7f4:	str	wzr, [x17, #4]
  46a7f8:	str	w18, [x19, #40]
  46a7fc:	cbz	x16, 46aedc <feof@plt+0x6763c>
  46a800:	madd	x15, x15, x9, x16
  46a804:	str	w11, [x17]
  46a808:	stp	x8, x14, [x15, #8]
  46a80c:	mov	x8, x17
  46a810:	cmp	w13, #0x0
  46a814:	b.gt	46a6d0 <feof@plt+0x66e30>
  46a818:	ldp	w9, w10, [x19, #40]
  46a81c:	sxtw	x9, w9
  46a820:	cmp	w9, w10
  46a824:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a828:	ldr	x10, [x19, #32]
  46a82c:	mov	w11, #0x18                  	// #24
  46a830:	add	w12, w9, #0x1
  46a834:	madd	x20, x9, x11, x10
  46a838:	str	wzr, [x20, #4]
  46a83c:	str	w12, [x19, #40]
  46a840:	cbz	x10, 46aedc <feof@plt+0x6763c>
  46a844:	mov	w12, #0x18                  	// #24
  46a848:	mov	w11, #0x3f                  	// #63
  46a84c:	madd	x9, x9, x12, x10
  46a850:	str	w11, [x20]
  46a854:	stp	x8, xzr, [x9, #8]
  46a858:	b	46aee0 <feof@plt+0x67640>
  46a85c:	mov	x0, x19
  46a860:	mov	w1, wzr
  46a864:	bl	469d58 <feof@plt+0x664b8>
  46a868:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46a86c:	ldp	w8, w9, [x19, #40]
  46a870:	sxtw	x8, w8
  46a874:	cmp	w8, w9
  46a878:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a87c:	ldr	x9, [x19, #32]
  46a880:	mov	w10, #0x18                  	// #24
  46a884:	add	w11, w8, #0x1
  46a888:	madd	x20, x8, x10, x9
  46a88c:	str	wzr, [x20, #4]
  46a890:	str	w11, [x19, #40]
  46a894:	cbz	x9, 46aedc <feof@plt+0x6763c>
  46a898:	mov	w10, #0x49                  	// #73
  46a89c:	mov	w11, #0x18                  	// #24
  46a8a0:	madd	x8, x8, x11, x9
  46a8a4:	str	w10, [x20]
  46a8a8:	stp	x0, xzr, [x8, #8]
  46a8ac:	b	46aee0 <feof@plt+0x67640>
  46a8b0:	mov	w8, wzr
  46a8b4:	sub	w11, w9, #0x30
  46a8b8:	cmp	w11, #0x9
  46a8bc:	b.hi	46a920 <feof@plt+0x67080>  // b.pmore
  46a8c0:	mov	w12, #0x2f                  	// #47
  46a8c4:	mov	w13, #0x6667                	// #26215
  46a8c8:	mov	w11, wzr
  46a8cc:	movk	w12, #0x8000, lsl #16
  46a8d0:	add	x10, x10, #0x1
  46a8d4:	movk	w13, #0x6666, lsl #16
  46a8d8:	mov	w14, #0xa                   	// #10
  46a8dc:	and	w15, w9, #0xff
  46a8e0:	sub	w9, w12, w15
  46a8e4:	smull	x9, w9, w13
  46a8e8:	lsr	x16, x9, #63
  46a8ec:	asr	x9, x9, #34
  46a8f0:	add	w9, w9, w16
  46a8f4:	cmp	w11, w9
  46a8f8:	b.gt	46aedc <feof@plt+0x6763c>
  46a8fc:	str	x10, [x22]
  46a900:	ldrb	w9, [x10], #1
  46a904:	madd	w11, w11, w14, w15
  46a908:	sub	w11, w11, #0x30
  46a90c:	sub	w15, w9, #0x30
  46a910:	cmp	w15, #0xa
  46a914:	b.cc	46a8dc <feof@plt+0x6703c>  // b.lo, b.ul, b.last
  46a918:	sub	x10, x10, #0x1
  46a91c:	b	46a924 <feof@plt+0x67084>
  46a920:	mov	w11, wzr
  46a924:	cmp	w8, #0x0
  46a928:	cneg	w8, w11, ne  // ne = any
  46a92c:	mov	x20, xzr
  46a930:	tbnz	w8, #31, 46aee0 <feof@plt+0x67640>
  46a934:	cmp	w9, #0x5f
  46a938:	b.ne	46aee0 <feof@plt+0x67640>  // b.any
  46a93c:	add	x8, x10, #0x1
  46a940:	mov	x0, x19
  46a944:	str	x8, [x19, #24]
  46a948:	bl	46aef4 <feof@plt+0x67654>
  46a94c:	ldr	w8, [x19, #72]
  46a950:	mov	x20, xzr
  46a954:	add	w8, w8, #0x5
  46a958:	str	w8, [x19, #72]
  46a95c:	cbz	x21, 46aee0 <feof@plt+0x67640>
  46a960:	cbz	x0, 46aee0 <feof@plt+0x67640>
  46a964:	ldp	w8, w9, [x19, #40]
  46a968:	sxtw	x8, w8
  46a96c:	cmp	w8, w9
  46a970:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46a974:	ldr	x9, [x19, #32]
  46a978:	mov	w10, #0x18                  	// #24
  46a97c:	add	w11, w8, #0x1
  46a980:	madd	x20, x8, x10, x9
  46a984:	str	wzr, [x20, #4]
  46a988:	str	w11, [x19, #40]
  46a98c:	cbz	x9, 46aedc <feof@plt+0x6763c>
  46a990:	mov	w11, #0x18                  	// #24
  46a994:	mov	w10, #0xb                   	// #11
  46a998:	madd	x8, x8, x11, x9
  46a99c:	str	w10, [x20]
  46a9a0:	stp	x0, x21, [x8, #8]
  46a9a4:	b	46aee0 <feof@plt+0x67640>
  46a9a8:	cmp	w11, #0x35
  46a9ac:	mov	w10, #0x1                   	// #1
  46a9b0:	b.hi	46a9d4 <feof@plt+0x67134>  // b.pmore
  46a9b4:	mov	w11, w11
  46a9b8:	mov	w12, #0x1                   	// #1
  46a9bc:	lsl	x11, x12, x11
  46a9c0:	mov	x12, #0x180                 	// #384
  46a9c4:	movk	x12, #0x20, lsl #48
  46a9c8:	tst	x11, x12
  46a9cc:	b.eq	46a9d4 <feof@plt+0x67134>  // b.none
  46a9d0:	mov	w10, wzr
  46a9d4:	cmp	w9, #0x4a
  46a9d8:	b.ne	46a9e8 <feof@plt+0x67148>  // b.any
  46a9dc:	add	x8, x8, #0x1
  46a9e0:	str	x8, [x22]
  46a9e4:	b	46a9ec <feof@plt+0x6714c>
  46a9e8:	cbz	w10, 46aa00 <feof@plt+0x67160>
  46a9ec:	mov	x0, x19
  46a9f0:	bl	46aef4 <feof@plt+0x67654>
  46a9f4:	mov	x22, x0
  46a9f8:	cbnz	x0, 46aa04 <feof@plt+0x67164>
  46a9fc:	b	46aedc <feof@plt+0x6763c>
  46aa00:	mov	x22, xzr
  46aa04:	mov	x0, x19
  46aa08:	bl	46e704 <feof@plt+0x6ae64>
  46aa0c:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46aa10:	ldp	w9, w8, [x19, #40]
  46aa14:	sxtw	x9, w9
  46aa18:	cmp	w9, w8
  46aa1c:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46aa20:	ldr	x10, [x19, #32]
  46aa24:	mov	w8, #0x18                  	// #24
  46aa28:	add	w11, w9, #0x1
  46aa2c:	madd	x8, x9, x8, x10
  46aa30:	str	wzr, [x8, #4]
  46aa34:	str	w11, [x19, #40]
  46aa38:	cbz	x10, 46aedc <feof@plt+0x6763c>
  46aa3c:	mov	w12, #0x18                  	// #24
  46aa40:	mov	w11, #0x29                  	// #41
  46aa44:	madd	x9, x9, x12, x10
  46aa48:	str	w11, [x8]
  46aa4c:	str	x22, [x9, #8]!
  46aa50:	str	x0, [x9, #8]
  46aa54:	cbnz	w21, 46aa68 <feof@plt+0x671c8>
  46aa58:	ldr	w10, [x20]
  46aa5c:	cmp	w10, #0x2
  46aa60:	b.ne	46aa68 <feof@plt+0x671c8>  // b.any
  46aa64:	str	xzr, [x9]
  46aa68:	ldp	w9, w10, [x19, #40]
  46aa6c:	sxtw	x9, w9
  46aa70:	cmp	w9, w10
  46aa74:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46aa78:	ldr	x10, [x19, #32]
  46aa7c:	mov	w11, #0x18                  	// #24
  46aa80:	add	w12, w9, #0x1
  46aa84:	madd	x11, x9, x11, x10
  46aa88:	str	wzr, [x11, #4]
  46aa8c:	str	w12, [x19, #40]
  46aa90:	cbz	x10, 46aedc <feof@plt+0x6763c>
  46aa94:	mov	w13, #0x18                  	// #24
  46aa98:	mov	w12, #0x3                   	// #3
  46aa9c:	madd	x9, x9, x13, x10
  46aaa0:	str	w12, [x11]
  46aaa4:	stp	x20, x8, [x9, #8]
  46aaa8:	mov	x20, x11
  46aaac:	b	46aee0 <feof@plt+0x67640>
  46aab0:	mov	w11, wzr
  46aab4:	sub	w13, w12, #0x30
  46aab8:	cmp	w13, #0x9
  46aabc:	b.hi	46ab1c <feof@plt+0x6727c>  // b.pmore
  46aac0:	mov	w14, #0x2f                  	// #47
  46aac4:	mov	w16, #0x6667                	// #26215
  46aac8:	mov	w13, wzr
  46aacc:	movk	w14, #0x8000, lsl #16
  46aad0:	add	x15, x15, #0x1
  46aad4:	movk	w16, #0x6666, lsl #16
  46aad8:	mov	w17, #0xa                   	// #10
  46aadc:	and	w18, w12, #0xff
  46aae0:	sub	w12, w14, w18
  46aae4:	smull	x12, w12, w16
  46aae8:	lsr	x1, x12, #63
  46aaec:	asr	x12, x12, #34
  46aaf0:	add	w12, w12, w1
  46aaf4:	cmp	w13, w12
  46aaf8:	b.gt	46acf8 <feof@plt+0x67458>
  46aafc:	str	x15, [x22]
  46ab00:	ldrb	w12, [x15], #1
  46ab04:	madd	w13, w13, w17, w18
  46ab08:	sub	w13, w13, #0x30
  46ab0c:	sub	w18, w12, #0x30
  46ab10:	cmp	w18, #0xa
  46ab14:	b.cc	46aadc <feof@plt+0x6723c>  // b.lo, b.ul, b.last
  46ab18:	b	46ab20 <feof@plt+0x67280>
  46ab1c:	mov	w13, wzr
  46ab20:	cmp	w11, #0x0
  46ab24:	cneg	w11, w13, ne  // ne = any
  46ab28:	sxtw	x11, w11
  46ab2c:	b	46acfc <feof@plt+0x6745c>
  46ab30:	ldrb	w10, [x8]
  46ab34:	cmp	w10, #0x6e
  46ab38:	b.ne	46ab48 <feof@plt+0x672a8>  // b.any
  46ab3c:	add	x8, x9, #0x4
  46ab40:	str	x8, [x22]
  46ab44:	ldrb	w10, [x9, #4]
  46ab48:	sub	w9, w10, #0x30
  46ab4c:	cmp	w9, #0x9
  46ab50:	b.hi	46abb0 <feof@plt+0x67310>  // b.pmore
  46ab54:	mov	w9, #0x2f                  	// #47
  46ab58:	mov	w12, #0x6667                	// #26215
  46ab5c:	mov	w11, wzr
  46ab60:	movk	w9, #0x8000, lsl #16
  46ab64:	add	x8, x8, #0x1
  46ab68:	movk	w12, #0x6666, lsl #16
  46ab6c:	mov	w13, #0xa                   	// #10
  46ab70:	and	w14, w10, #0xff
  46ab74:	sub	w10, w9, w14
  46ab78:	smull	x10, w10, w12
  46ab7c:	lsr	x15, x10, #63
  46ab80:	asr	x10, x10, #34
  46ab84:	add	w10, w10, w15
  46ab88:	cmp	w11, w10
  46ab8c:	b.gt	46aedc <feof@plt+0x6763c>
  46ab90:	str	x8, [x22]
  46ab94:	ldrb	w10, [x8], #1
  46ab98:	madd	w11, w11, w13, w14
  46ab9c:	sub	w11, w11, #0x30
  46aba0:	sub	w14, w10, #0x30
  46aba4:	cmp	w14, #0xa
  46aba8:	b.cc	46ab70 <feof@plt+0x672d0>  // b.lo, b.ul, b.last
  46abac:	sub	x8, x8, #0x1
  46abb0:	cmp	w10, #0x5f
  46abb4:	b.ne	46aedc <feof@plt+0x6763c>  // b.any
  46abb8:	add	x9, x8, #0x1
  46abbc:	str	x9, [x22]
  46abc0:	ldrb	w10, [x8, #1]
  46abc4:	cmp	w10, #0x6e
  46abc8:	b.ne	46abd8 <feof@plt+0x67338>  // b.any
  46abcc:	add	x9, x8, #0x2
  46abd0:	str	x9, [x22]
  46abd4:	ldrb	w10, [x8, #2]
  46abd8:	mov	x8, x9
  46abdc:	sub	w9, w10, #0x30
  46abe0:	cmp	w9, #0x9
  46abe4:	b.hi	46ac44 <feof@plt+0x673a4>  // b.pmore
  46abe8:	mov	w9, #0x2f                  	// #47
  46abec:	mov	w12, #0x6667                	// #26215
  46abf0:	mov	w11, wzr
  46abf4:	movk	w9, #0x8000, lsl #16
  46abf8:	add	x8, x8, #0x1
  46abfc:	movk	w12, #0x6666, lsl #16
  46ac00:	mov	w13, #0xa                   	// #10
  46ac04:	and	w14, w10, #0xff
  46ac08:	sub	w10, w9, w14
  46ac0c:	smull	x10, w10, w12
  46ac10:	lsr	x15, x10, #63
  46ac14:	asr	x10, x10, #34
  46ac18:	add	w10, w10, w15
  46ac1c:	cmp	w11, w10
  46ac20:	b.gt	46aedc <feof@plt+0x6763c>
  46ac24:	str	x8, [x22]
  46ac28:	ldrb	w10, [x8], #1
  46ac2c:	madd	w11, w11, w13, w14
  46ac30:	sub	w11, w11, #0x30
  46ac34:	sub	w14, w10, #0x30
  46ac38:	cmp	w14, #0xa
  46ac3c:	b.cc	46ac04 <feof@plt+0x67364>  // b.lo, b.ul, b.last
  46ac40:	sub	x8, x8, #0x1
  46ac44:	cmp	w10, #0x5f
  46ac48:	b.ne	46aedc <feof@plt+0x6763c>  // b.any
  46ac4c:	add	x9, x8, #0x1
  46ac50:	str	x9, [x22]
  46ac54:	ldrb	w9, [x8, #1]
  46ac58:	cbz	w9, 46aedc <feof@plt+0x6763c>
  46ac5c:	add	x9, x8, #0x2
  46ac60:	str	x9, [x22]
  46ac64:	ldrb	w10, [x8, #1]
  46ac68:	cmp	w10, #0x76
  46ac6c:	b.eq	46ad74 <feof@plt+0x674d4>  // b.none
  46ac70:	cmp	w10, #0x68
  46ac74:	b.ne	46aedc <feof@plt+0x6763c>  // b.any
  46ac78:	ldrb	w10, [x9]
  46ac7c:	cmp	w10, #0x6e
  46ac80:	b.ne	46ac90 <feof@plt+0x673f0>  // b.any
  46ac84:	add	x9, x8, #0x3
  46ac88:	str	x9, [x22]
  46ac8c:	ldrb	w10, [x8, #3]
  46ac90:	sub	w8, w10, #0x30
  46ac94:	cmp	w8, #0x9
  46ac98:	b.hi	46ae88 <feof@plt+0x675e8>  // b.pmore
  46ac9c:	mov	w11, #0x2f                  	// #47
  46aca0:	add	x8, x9, #0x1
  46aca4:	mov	w9, #0x6667                	// #26215
  46aca8:	mov	w12, wzr
  46acac:	movk	w11, #0x8000, lsl #16
  46acb0:	movk	w9, #0x6666, lsl #16
  46acb4:	mov	w13, #0xa                   	// #10
  46acb8:	and	w14, w10, #0xff
  46acbc:	sub	w10, w11, w14
  46acc0:	smull	x10, w10, w9
  46acc4:	lsr	x15, x10, #63
  46acc8:	asr	x10, x10, #34
  46accc:	add	w10, w10, w15
  46acd0:	cmp	w12, w10
  46acd4:	b.gt	46aedc <feof@plt+0x6763c>
  46acd8:	str	x8, [x22]
  46acdc:	ldrb	w10, [x8], #1
  46ace0:	madd	w12, w12, w13, w14
  46ace4:	sub	w12, w12, #0x30
  46ace8:	sub	w14, w10, #0x30
  46acec:	cmp	w14, #0xa
  46acf0:	b.cc	46acb8 <feof@plt+0x67418>  // b.lo, b.ul, b.last
  46acf4:	b	46ae84 <feof@plt+0x675e4>
  46acf8:	mov	x11, #0xffffffffffffffff    	// #-1
  46acfc:	mov	w12, #0x18                  	// #24
  46ad00:	madd	x9, x9, x12, x10
  46ad04:	str	x11, [x9, #8]
  46ad08:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46ad0c:	ldp	w9, w10, [x19, #40]
  46ad10:	sxtw	x9, w9
  46ad14:	cmp	w9, w10
  46ad18:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46ad1c:	ldr	x10, [x19, #32]
  46ad20:	mov	w11, #0x18                  	// #24
  46ad24:	add	w12, w9, #0x1
  46ad28:	madd	x20, x9, x11, x10
  46ad2c:	str	wzr, [x20, #4]
  46ad30:	str	w12, [x19, #40]
  46ad34:	cbz	x10, 46aedc <feof@plt+0x6763c>
  46ad38:	mov	w12, #0x18                  	// #24
  46ad3c:	mov	w11, #0x16                  	// #22
  46ad40:	madd	x9, x9, x12, x10
  46ad44:	str	w11, [x20]
  46ad48:	stp	x0, x8, [x9, #8]
  46ad4c:	b	46aee0 <feof@plt+0x67640>
  46ad50:	ldr	x8, [x22]
  46ad54:	mov	x20, xzr
  46ad58:	add	x8, x8, w15, uxtw
  46ad5c:	b	46ad6c <feof@plt+0x674cc>
  46ad60:	ldr	x8, [x22]
  46ad64:	mov	x20, xzr
  46ad68:	add	x8, x8, #0x2
  46ad6c:	str	x8, [x22]
  46ad70:	b	46aee0 <feof@plt+0x67640>
  46ad74:	ldrb	w10, [x9]
  46ad78:	cmp	w10, #0x6e
  46ad7c:	b.ne	46ad8c <feof@plt+0x674ec>  // b.any
  46ad80:	add	x9, x8, #0x3
  46ad84:	str	x9, [x22]
  46ad88:	ldrb	w10, [x8, #3]
  46ad8c:	sub	w8, w10, #0x30
  46ad90:	cmp	w8, #0x9
  46ad94:	b.hi	46adf4 <feof@plt+0x67554>  // b.pmore
  46ad98:	mov	w11, #0x2f                  	// #47
  46ad9c:	add	x8, x9, #0x1
  46ada0:	mov	w9, #0x6667                	// #26215
  46ada4:	mov	w12, wzr
  46ada8:	movk	w11, #0x8000, lsl #16
  46adac:	movk	w9, #0x6666, lsl #16
  46adb0:	mov	w13, #0xa                   	// #10
  46adb4:	and	w14, w10, #0xff
  46adb8:	sub	w10, w11, w14
  46adbc:	smull	x10, w10, w9
  46adc0:	lsr	x15, x10, #63
  46adc4:	asr	x10, x10, #34
  46adc8:	add	w10, w10, w15
  46adcc:	cmp	w12, w10
  46add0:	b.gt	46aedc <feof@plt+0x6763c>
  46add4:	str	x8, [x22]
  46add8:	ldrb	w10, [x8], #1
  46addc:	madd	w12, w12, w13, w14
  46ade0:	sub	w12, w12, #0x30
  46ade4:	sub	w14, w10, #0x30
  46ade8:	cmp	w14, #0xa
  46adec:	b.cc	46adb4 <feof@plt+0x67514>  // b.lo, b.ul, b.last
  46adf0:	sub	x9, x8, #0x1
  46adf4:	cmp	w10, #0x5f
  46adf8:	b.ne	46aedc <feof@plt+0x6763c>  // b.any
  46adfc:	add	x8, x9, #0x1
  46ae00:	str	x8, [x22]
  46ae04:	ldrb	w10, [x9, #1]
  46ae08:	cmp	w10, #0x6e
  46ae0c:	b.ne	46ae1c <feof@plt+0x6757c>  // b.any
  46ae10:	add	x8, x9, #0x2
  46ae14:	str	x8, [x22]
  46ae18:	ldrb	w10, [x9, #2]
  46ae1c:	mov	x9, x8
  46ae20:	sub	w8, w10, #0x30
  46ae24:	cmp	w8, #0x9
  46ae28:	b.hi	46ae88 <feof@plt+0x675e8>  // b.pmore
  46ae2c:	mov	w11, #0x2f                  	// #47
  46ae30:	add	x8, x9, #0x1
  46ae34:	mov	w9, #0x6667                	// #26215
  46ae38:	mov	w12, wzr
  46ae3c:	movk	w11, #0x8000, lsl #16
  46ae40:	movk	w9, #0x6666, lsl #16
  46ae44:	mov	w13, #0xa                   	// #10
  46ae48:	and	w14, w10, #0xff
  46ae4c:	sub	w10, w11, w14
  46ae50:	smull	x10, w10, w9
  46ae54:	lsr	x15, x10, #63
  46ae58:	asr	x10, x10, #34
  46ae5c:	add	w10, w10, w15
  46ae60:	cmp	w12, w10
  46ae64:	b.gt	46aedc <feof@plt+0x6763c>
  46ae68:	str	x8, [x22]
  46ae6c:	ldrb	w10, [x8], #1
  46ae70:	madd	w12, w12, w13, w14
  46ae74:	sub	w12, w12, #0x30
  46ae78:	sub	w14, w10, #0x30
  46ae7c:	cmp	w14, #0xa
  46ae80:	b.cc	46ae48 <feof@plt+0x675a8>  // b.lo, b.ul, b.last
  46ae84:	sub	x9, x8, #0x1
  46ae88:	cmp	w10, #0x5f
  46ae8c:	b.ne	46aedc <feof@plt+0x6763c>  // b.any
  46ae90:	add	x8, x9, #0x1
  46ae94:	mov	x0, x19
  46ae98:	mov	w1, wzr
  46ae9c:	str	x8, [x19, #24]
  46aea0:	bl	469d58 <feof@plt+0x664b8>
  46aea4:	cbz	x0, 46aedc <feof@plt+0x6763c>
  46aea8:	ldp	w8, w9, [x19, #40]
  46aeac:	sxtw	x8, w8
  46aeb0:	cmp	w8, w9
  46aeb4:	b.ge	46aedc <feof@plt+0x6763c>  // b.tcont
  46aeb8:	ldr	x9, [x19, #32]
  46aebc:	mov	w10, #0x18                  	// #24
  46aec0:	add	w11, w8, #0x1
  46aec4:	madd	x20, x8, x10, x9
  46aec8:	str	wzr, [x20, #4]
  46aecc:	str	w11, [x19, #40]
  46aed0:	cbz	x9, 46aedc <feof@plt+0x6763c>
  46aed4:	mov	w10, #0x11                  	// #17
  46aed8:	b	46a89c <feof@plt+0x66ffc>
  46aedc:	mov	x20, xzr
  46aee0:	mov	x0, x20
  46aee4:	ldp	x20, x19, [sp, #32]
  46aee8:	ldp	x22, x21, [sp, #16]
  46aeec:	ldp	x29, x30, [sp], #48
  46aef0:	ret
  46aef4:	sub	sp, sp, #0x50
  46aef8:	stp	x29, x30, [sp, #16]
  46aefc:	stp	x24, x23, [sp, #32]
  46af00:	stp	x22, x21, [sp, #48]
  46af04:	stp	x20, x19, [sp, #64]
  46af08:	mov	x22, x0
  46af0c:	ldr	x8, [x22, #24]!
  46af10:	mov	x21, xzr
  46af14:	add	x29, sp, #0x10
  46af18:	ldrb	w9, [x8]
  46af1c:	sub	w10, w9, #0x30
  46af20:	cmp	w10, #0x4a
  46af24:	b.hi	46bf68 <feof@plt+0x686c8>  // b.pmore
  46af28:	adrp	x11, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46af2c:	add	x11, x11, #0x8ac
  46af30:	adr	x12, 46af44 <feof@plt+0x676a4>
  46af34:	ldrh	w13, [x11, x10, lsl #1]
  46af38:	add	x12, x12, x13, lsl #2
  46af3c:	mov	x19, x0
  46af40:	br	x12
  46af44:	ldp	w10, w11, [x19, #40]
  46af48:	sxtw	x10, w10
  46af4c:	cmp	w10, w11
  46af50:	b.ge	46af9c <feof@plt+0x676fc>  // b.tcont
  46af54:	ldr	x11, [x19, #32]
  46af58:	mov	w12, #0x18                  	// #24
  46af5c:	add	w13, w10, #0x1
  46af60:	madd	x21, x10, x12, x11
  46af64:	str	wzr, [x21, #4]
  46af68:	str	w13, [x19, #40]
  46af6c:	cbz	x11, 46af9c <feof@plt+0x676fc>
  46af70:	adrp	x8, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46af74:	add	x8, x8, #0x3b8
  46af78:	mov	w13, #0x18                  	// #24
  46af7c:	add	x8, x8, x9, lsl #5
  46af80:	mov	w12, #0x27                  	// #39
  46af84:	sub	x8, x8, #0xc20
  46af88:	madd	x9, x10, x13, x11
  46af8c:	str	w12, [x21]
  46af90:	str	x8, [x9, #8]
  46af94:	ldr	x8, [x22]
  46af98:	b	46afa0 <feof@plt+0x67700>
  46af9c:	mov	x21, xzr
  46afa0:	str	x21, [sp, #8]
  46afa4:	ldr	x9, [x21, #8]
  46afa8:	ldr	w10, [x19, #72]
  46afac:	add	x8, x8, #0x1
  46afb0:	ldr	w9, [x9, #8]
  46afb4:	str	x8, [x19, #24]
  46afb8:	add	w9, w10, w9
  46afbc:	str	w9, [x19, #72]
  46afc0:	b	46bf68 <feof@plt+0x686c8>
  46afc4:	mov	x0, x19
  46afc8:	bl	46d138 <feof@plt+0x69898>
  46afcc:	mov	x20, x0
  46afd0:	str	x0, [sp, #8]
  46afd4:	b	46bf38 <feof@plt+0x68698>
  46afd8:	add	x9, x8, #0x1
  46afdc:	str	x9, [x22]
  46afe0:	ldrb	w10, [x8, #1]
  46afe4:	cmp	w10, #0x5f
  46afe8:	b.ne	46b454 <feof@plt+0x67bb4>  // b.any
  46afec:	mov	x21, xzr
  46aff0:	b	46b5e8 <feof@plt+0x67d48>
  46aff4:	add	x8, x8, #0x1
  46aff8:	mov	x0, x19
  46affc:	str	x8, [x19, #24]
  46b000:	bl	46aef4 <feof@plt+0x67654>
  46b004:	cbz	x0, 46bf30 <feof@plt+0x68690>
  46b008:	ldp	w8, w9, [x19, #40]
  46b00c:	sxtw	x8, w8
  46b010:	cmp	w8, w9
  46b014:	b.ge	46bf30 <feof@plt+0x68690>  // b.tcont
  46b018:	ldr	x9, [x19, #32]
  46b01c:	mov	w10, #0x18                  	// #24
  46b020:	add	w11, w8, #0x1
  46b024:	madd	x20, x8, x10, x9
  46b028:	str	wzr, [x20, #4]
  46b02c:	str	w11, [x19, #40]
  46b030:	cbz	x9, 46bf30 <feof@plt+0x68690>
  46b034:	mov	w11, #0x18                  	// #24
  46b038:	mov	w10, #0x25                  	// #37
  46b03c:	b	46b440 <feof@plt+0x67ba0>
  46b040:	mov	x9, x8
  46b044:	ldrb	w10, [x9, #1]!
  46b048:	sub	w10, w10, #0x4f
  46b04c:	cmp	w10, #0x29
  46b050:	b.hi	46b650 <feof@plt+0x67db0>  // b.pmore
  46b054:	mov	w11, #0x1                   	// #1
  46b058:	lsl	x10, x11, x10
  46b05c:	mov	x11, #0x1                   	// #1
  46b060:	movk	x11, #0x301, lsl #32
  46b064:	tst	x10, x11
  46b068:	b.eq	46b650 <feof@plt+0x67db0>  // b.none
  46b06c:	add	x1, sp, #0x8
  46b070:	mov	x0, x19
  46b074:	mov	w2, wzr
  46b078:	bl	46bf84 <feof@plt+0x686e4>
  46b07c:	cbz	x0, 46bf64 <feof@plt+0x686c4>
  46b080:	ldr	x8, [x22]
  46b084:	mov	x20, x0
  46b088:	mov	x0, x19
  46b08c:	ldrb	w8, [x8]
  46b090:	cmp	w8, #0x46
  46b094:	b.ne	46b0a0 <feof@plt+0x67800>  // b.any
  46b098:	bl	46c204 <feof@plt+0x68964>
  46b09c:	b	46b0a4 <feof@plt+0x67804>
  46b0a0:	bl	46aef4 <feof@plt+0x67654>
  46b0a4:	str	x0, [x20]
  46b0a8:	cbz	x0, 46bf64 <feof@plt+0x686c4>
  46b0ac:	ldr	w8, [x0]
  46b0b0:	sub	w8, w8, #0x1f
  46b0b4:	cmp	w8, #0x1
  46b0b8:	b.hi	46b0d4 <feof@plt+0x67834>  // b.pmore
  46b0bc:	ldr	x8, [sp, #8]
  46b0c0:	ldr	x9, [x0, #8]
  46b0c4:	str	x8, [x0, #8]
  46b0c8:	ldr	x8, [x20]
  46b0cc:	str	x8, [sp, #8]
  46b0d0:	str	x9, [x20]
  46b0d4:	ldr	x8, [sp, #8]
  46b0d8:	cbz	x8, 46bf64 <feof@plt+0x686c4>
  46b0dc:	ldp	w9, w10, [x19, #56]
  46b0e0:	sxtw	x9, w9
  46b0e4:	cmp	w9, w10
  46b0e8:	b.ge	46bf64 <feof@plt+0x686c4>  // b.tcont
  46b0ec:	ldr	x10, [x19, #48]
  46b0f0:	add	w11, w9, #0x1
  46b0f4:	str	x8, [x10, x9, lsl #3]
  46b0f8:	str	w11, [x19, #56]
  46b0fc:	b	46bf5c <feof@plt+0x686bc>
  46b100:	mov	x0, x19
  46b104:	bl	46c204 <feof@plt+0x68964>
  46b108:	b	46afcc <feof@plt+0x6772c>
  46b10c:	add	x8, x8, #0x1
  46b110:	mov	x0, x19
  46b114:	str	x8, [x19, #24]
  46b118:	bl	46aef4 <feof@plt+0x67654>
  46b11c:	cbz	x0, 46bf30 <feof@plt+0x68690>
  46b120:	ldp	w8, w9, [x19, #40]
  46b124:	sxtw	x8, w8
  46b128:	cmp	w8, w9
  46b12c:	b.ge	46bf30 <feof@plt+0x68690>  // b.tcont
  46b130:	ldr	x9, [x19, #32]
  46b134:	mov	w10, #0x18                  	// #24
  46b138:	add	w11, w8, #0x1
  46b13c:	madd	x20, x8, x10, x9
  46b140:	str	wzr, [x20, #4]
  46b144:	str	w11, [x19, #40]
  46b148:	cbz	x9, 46bf30 <feof@plt+0x68690>
  46b14c:	mov	w11, #0x18                  	// #24
  46b150:	mov	w10, #0x26                  	// #38
  46b154:	b	46b440 <feof@plt+0x67ba0>
  46b158:	add	x8, x8, #0x1
  46b15c:	mov	x0, x19
  46b160:	str	x8, [x19, #24]
  46b164:	bl	46aef4 <feof@plt+0x67654>
  46b168:	cbz	x0, 46bf30 <feof@plt+0x68690>
  46b16c:	mov	x21, x0
  46b170:	mov	x0, x19
  46b174:	bl	46aef4 <feof@plt+0x67654>
  46b178:	cbz	x0, 46bf30 <feof@plt+0x68690>
  46b17c:	ldp	w8, w9, [x19, #40]
  46b180:	sxtw	x8, w8
  46b184:	cmp	w8, w9
  46b188:	b.ge	46bf30 <feof@plt+0x68690>  // b.tcont
  46b18c:	ldr	x9, [x19, #32]
  46b190:	mov	w10, #0x18                  	// #24
  46b194:	add	w11, w8, #0x1
  46b198:	madd	x20, x8, x10, x9
  46b19c:	str	wzr, [x20, #4]
  46b1a0:	str	w11, [x19, #40]
  46b1a4:	cbz	x9, 46bf30 <feof@plt+0x68690>
  46b1a8:	mov	w11, #0x18                  	// #24
  46b1ac:	mov	w10, #0x2b                  	// #43
  46b1b0:	madd	x8, x8, x11, x9
  46b1b4:	str	w10, [x20]
  46b1b8:	stp	x21, x0, [x8, #8]
  46b1bc:	str	x20, [sp, #8]
  46b1c0:	b	46bf38 <feof@plt+0x68698>
  46b1c4:	add	x8, x8, #0x1
  46b1c8:	mov	x0, x19
  46b1cc:	str	x8, [x19, #24]
  46b1d0:	bl	46aef4 <feof@plt+0x67654>
  46b1d4:	cbz	x0, 46bf30 <feof@plt+0x68690>
  46b1d8:	ldp	w8, w9, [x19, #40]
  46b1dc:	sxtw	x8, w8
  46b1e0:	cmp	w8, w9
  46b1e4:	b.ge	46bf30 <feof@plt+0x68690>  // b.tcont
  46b1e8:	ldr	x9, [x19, #32]
  46b1ec:	mov	w10, #0x18                  	// #24
  46b1f0:	add	w11, w8, #0x1
  46b1f4:	madd	x20, x8, x10, x9
  46b1f8:	str	wzr, [x20, #4]
  46b1fc:	str	w11, [x19, #40]
  46b200:	cbz	x9, 46bf30 <feof@plt+0x68690>
  46b204:	mov	w11, #0x18                  	// #24
  46b208:	mov	w10, #0x24                  	// #36
  46b20c:	b	46b440 <feof@plt+0x67ba0>
  46b210:	add	x8, x8, #0x1
  46b214:	mov	x0, x19
  46b218:	str	x8, [x19, #24]
  46b21c:	bl	46aef4 <feof@plt+0x67654>
  46b220:	cbz	x0, 46bf30 <feof@plt+0x68690>
  46b224:	ldp	w8, w9, [x19, #40]
  46b228:	sxtw	x8, w8
  46b22c:	cmp	w8, w9
  46b230:	b.ge	46bf30 <feof@plt+0x68690>  // b.tcont
  46b234:	ldr	x9, [x19, #32]
  46b238:	mov	w10, #0x18                  	// #24
  46b23c:	add	w11, w8, #0x1
  46b240:	madd	x20, x8, x10, x9
  46b244:	str	wzr, [x20, #4]
  46b248:	str	w11, [x19, #40]
  46b24c:	cbz	x9, 46bf30 <feof@plt+0x68690>
  46b250:	mov	w11, #0x18                  	// #24
  46b254:	mov	w10, #0x22                  	// #34
  46b258:	b	46b440 <feof@plt+0x67ba0>
  46b25c:	add	x8, x8, #0x1
  46b260:	mov	x0, x19
  46b264:	str	x8, [x19, #24]
  46b268:	bl	46aef4 <feof@plt+0x67654>
  46b26c:	cbz	x0, 46bf30 <feof@plt+0x68690>
  46b270:	ldp	w8, w9, [x19, #40]
  46b274:	sxtw	x8, w8
  46b278:	cmp	w8, w9
  46b27c:	b.ge	46bf30 <feof@plt+0x68690>  // b.tcont
  46b280:	ldr	x9, [x19, #32]
  46b284:	mov	w10, #0x18                  	// #24
  46b288:	add	w11, w8, #0x1
  46b28c:	madd	x20, x8, x10, x9
  46b290:	str	wzr, [x20, #4]
  46b294:	str	w11, [x19, #40]
  46b298:	cbz	x9, 46bf30 <feof@plt+0x68690>
  46b29c:	mov	w11, #0x18                  	// #24
  46b2a0:	mov	w10, #0x23                  	// #35
  46b2a4:	b	46b440 <feof@plt+0x67ba0>
  46b2a8:	ldrb	w8, [x8, #1]
  46b2ac:	sub	w9, w8, #0x41
  46b2b0:	cmp	w9, #0x1a
  46b2b4:	b.cc	46b4d0 <feof@plt+0x67c30>  // b.lo, b.ul, b.last
  46b2b8:	cmp	w8, #0x5f
  46b2bc:	b.eq	46b4d0 <feof@plt+0x67c30>  // b.none
  46b2c0:	sub	w8, w8, #0x30
  46b2c4:	and	w8, w8, #0xff
  46b2c8:	cmp	w8, #0x9
  46b2cc:	b.ls	46b4d0 <feof@plt+0x67c30>  // b.plast
  46b2d0:	mov	x0, x19
  46b2d4:	bl	46d138 <feof@plt+0x69898>
  46b2d8:	str	x0, [sp, #8]
  46b2dc:	cbz	x0, 46bf64 <feof@plt+0x686c4>
  46b2e0:	ldr	w8, [x0]
  46b2e4:	mov	x20, x0
  46b2e8:	mov	x21, x0
  46b2ec:	cmp	w8, #0x18
  46b2f0:	b.ne	46bf3c <feof@plt+0x6869c>  // b.any
  46b2f4:	b	46bf68 <feof@plt+0x686c8>
  46b2f8:	add	x9, x8, #0x1
  46b2fc:	str	x9, [x22]
  46b300:	ldrb	w10, [x8, #1]
  46b304:	cmp	w10, #0x6e
  46b308:	b.eq	46b7b8 <feof@plt+0x67f18>  // b.none
  46b30c:	cmp	w10, #0x5f
  46b310:	b.ne	46b548 <feof@plt+0x67ca8>  // b.any
  46b314:	mov	w11, wzr
  46b318:	add	x21, x8, #0x2
  46b31c:	str	x21, [x22]
  46b320:	ldp	w8, w9, [x19, #40]
  46b324:	sxtw	x8, w8
  46b328:	cmp	w8, w9
  46b32c:	b.ge	46b794 <feof@plt+0x67ef4>  // b.tcont
  46b330:	ldr	x9, [x19, #32]
  46b334:	mov	w10, #0x18                  	// #24
  46b338:	add	w12, w8, #0x1
  46b33c:	madd	x20, x8, x10, x9
  46b340:	str	wzr, [x20, #4]
  46b344:	str	w12, [x19, #40]
  46b348:	cbz	x9, 46b794 <feof@plt+0x67ef4>
  46b34c:	mov	w12, #0x18                  	// #24
  46b350:	mov	w10, #0x5                   	// #5
  46b354:	mov	w11, w11
  46b358:	madd	x8, x8, x12, x9
  46b35c:	str	w10, [x20]
  46b360:	str	x11, [x8, #8]
  46b364:	ldr	x21, [x22]
  46b368:	mov	x9, x21
  46b36c:	b	46b7c0 <feof@plt+0x67f20>
  46b370:	add	x8, x8, #0x1
  46b374:	mov	x0, x19
  46b378:	str	x8, [x19, #24]
  46b37c:	bl	46c41c <feof@plt+0x68b7c>
  46b380:	str	x0, [sp, #8]
  46b384:	ldr	x8, [x19, #24]
  46b388:	mov	x21, x0
  46b38c:	ldrb	w9, [x8]
  46b390:	cmp	w9, #0x49
  46b394:	b.ne	46b720 <feof@plt+0x67e80>  // b.any
  46b398:	add	x8, x8, #0x1
  46b39c:	mov	x0, x19
  46b3a0:	str	x8, [x19, #24]
  46b3a4:	bl	46e820 <feof@plt+0x6af80>
  46b3a8:	mov	x8, xzr
  46b3ac:	cbz	x21, 46b718 <feof@plt+0x67e78>
  46b3b0:	cbz	x0, 46b718 <feof@plt+0x67e78>
  46b3b4:	ldp	w9, w8, [x19, #40]
  46b3b8:	sxtw	x9, w9
  46b3bc:	cmp	w9, w8
  46b3c0:	b.ge	46b714 <feof@plt+0x67e74>  // b.tcont
  46b3c4:	ldr	x10, [x19, #32]
  46b3c8:	mov	w8, #0x18                  	// #24
  46b3cc:	add	w11, w9, #0x1
  46b3d0:	madd	x8, x9, x8, x10
  46b3d4:	str	wzr, [x8, #4]
  46b3d8:	str	w11, [x19, #40]
  46b3dc:	cbz	x10, 46b714 <feof@plt+0x67e74>
  46b3e0:	mov	w12, #0x18                  	// #24
  46b3e4:	mov	w11, #0x4                   	// #4
  46b3e8:	madd	x9, x9, x12, x10
  46b3ec:	str	w11, [x8]
  46b3f0:	stp	x21, x0, [x9, #8]
  46b3f4:	b	46b718 <feof@plt+0x67e78>
  46b3f8:	add	x8, x8, #0x1
  46b3fc:	mov	x0, x19
  46b400:	str	x8, [x19, #24]
  46b404:	bl	46c41c <feof@plt+0x68b7c>
  46b408:	cbz	x0, 46bf30 <feof@plt+0x68690>
  46b40c:	ldp	w8, w9, [x19, #40]
  46b410:	sxtw	x8, w8
  46b414:	cmp	w8, w9
  46b418:	b.ge	46bf30 <feof@plt+0x68690>  // b.tcont
  46b41c:	ldr	x9, [x19, #32]
  46b420:	mov	w10, #0x18                  	// #24
  46b424:	add	w11, w8, #0x1
  46b428:	madd	x20, x8, x10, x9
  46b42c:	str	wzr, [x20, #4]
  46b430:	str	w11, [x19, #40]
  46b434:	cbz	x9, 46bf30 <feof@plt+0x68690>
  46b438:	mov	w11, #0x18                  	// #24
  46b43c:	mov	w10, #0x28                  	// #40
  46b440:	madd	x8, x8, x11, x9
  46b444:	str	w10, [x20]
  46b448:	stp	x0, xzr, [x8, #8]
  46b44c:	str	x20, [sp, #8]
  46b450:	b	46bf38 <feof@plt+0x68698>
  46b454:	sub	w10, w10, #0x30
  46b458:	cmp	w10, #0x9
  46b45c:	b.hi	46b5c8 <feof@plt+0x67d28>  // b.pmore
  46b460:	add	x10, x8, #0x2
  46b464:	str	x10, [x22]
  46b468:	ldrb	w8, [x10], #1
  46b46c:	sub	w8, w8, #0x30
  46b470:	cmp	w8, #0xa
  46b474:	b.cc	46b464 <feof@plt+0x67bc4>  // b.lo, b.ul, b.last
  46b478:	ldp	w8, w11, [x19, #40]
  46b47c:	sxtw	x8, w8
  46b480:	cmp	w8, w11
  46b484:	b.ge	46bf30 <feof@plt+0x68690>  // b.tcont
  46b488:	ldr	x11, [x19, #32]
  46b48c:	mvn	w12, w9
  46b490:	mov	w13, #0x18                  	// #24
  46b494:	add	w10, w12, w10
  46b498:	mov	x20, xzr
  46b49c:	add	w14, w8, #0x1
  46b4a0:	cmp	w10, #0x1
  46b4a4:	madd	x21, x8, x13, x11
  46b4a8:	str	wzr, [x21, #4]
  46b4ac:	str	w14, [x19, #40]
  46b4b0:	b.lt	46b774 <feof@plt+0x67ed4>  // b.tstop
  46b4b4:	cbz	x11, 46b774 <feof@plt+0x67ed4>
  46b4b8:	mov	w12, #0x18                  	// #24
  46b4bc:	madd	x8, x8, x12, x11
  46b4c0:	str	xzr, [x21]
  46b4c4:	str	x9, [x8, #8]
  46b4c8:	str	w10, [x8, #16]
  46b4cc:	b	46b5e8 <feof@plt+0x67d48>
  46b4d0:	mov	x0, x19
  46b4d4:	mov	w1, wzr
  46b4d8:	bl	46c614 <feof@plt+0x68d74>
  46b4dc:	str	x0, [sp, #8]
  46b4e0:	ldr	x8, [x19, #24]
  46b4e4:	mov	x21, x0
  46b4e8:	ldrb	w9, [x8]
  46b4ec:	cmp	w9, #0x49
  46b4f0:	b.ne	46bf68 <feof@plt+0x686c8>  // b.any
  46b4f4:	add	x8, x8, #0x1
  46b4f8:	mov	x0, x19
  46b4fc:	str	x8, [x19, #24]
  46b500:	bl	46e820 <feof@plt+0x6af80>
  46b504:	mov	x20, xzr
  46b508:	cbz	x21, 46b774 <feof@plt+0x67ed4>
  46b50c:	cbz	x0, 46b774 <feof@plt+0x67ed4>
  46b510:	ldp	w8, w9, [x19, #40]
  46b514:	sxtw	x8, w8
  46b518:	cmp	w8, w9
  46b51c:	b.ge	46bf30 <feof@plt+0x68690>  // b.tcont
  46b520:	ldr	x9, [x19, #32]
  46b524:	mov	w10, #0x18                  	// #24
  46b528:	add	w11, w8, #0x1
  46b52c:	madd	x20, x8, x10, x9
  46b530:	str	wzr, [x20, #4]
  46b534:	str	w11, [x19, #40]
  46b538:	cbz	x9, 46bf30 <feof@plt+0x68690>
  46b53c:	mov	w11, #0x18                  	// #24
  46b540:	mov	w10, #0x4                   	// #4
  46b544:	b	46b640 <feof@plt+0x67da0>
  46b548:	sub	w11, w10, #0x30
  46b54c:	cmp	w11, #0x9
  46b550:	b.hi	46b77c <feof@plt+0x67edc>  // b.pmore
  46b554:	mov	w11, #0x2f                  	// #47
  46b558:	movk	w11, #0x8000, lsl #16
  46b55c:	sub	w12, w11, w10
  46b560:	cmn	w12, #0x9
  46b564:	b.lt	46b7b8 <feof@plt+0x67f18>  // b.tstop
  46b568:	mov	w13, #0x6667                	// #26215
  46b56c:	mov	w12, wzr
  46b570:	add	x14, x8, #0x2
  46b574:	mov	w8, #0xa                   	// #10
  46b578:	movk	w13, #0x6666, lsl #16
  46b57c:	str	x14, [x22]
  46b580:	madd	w12, w12, w8, w10
  46b584:	ldrb	w10, [x14]
  46b588:	mov	x9, x14
  46b58c:	sub	w12, w12, #0x30
  46b590:	sub	w14, w10, #0x30
  46b594:	cmp	w14, #0xa
  46b598:	b.cs	46b7a0 <feof@plt+0x67f00>  // b.hs, b.nlast
  46b59c:	sub	w14, w11, w10
  46b5a0:	smull	x14, w14, w13
  46b5a4:	lsr	x15, x14, #63
  46b5a8:	asr	x14, x14, #34
  46b5ac:	add	w14, w14, w15
  46b5b0:	cmp	w12, w14
  46b5b4:	add	x14, x9, #0x1
  46b5b8:	b.le	46b57c <feof@plt+0x67cdc>
  46b5bc:	mov	x20, xzr
  46b5c0:	sub	x21, x14, #0x1
  46b5c4:	b	46b7c0 <feof@plt+0x67f20>
  46b5c8:	ldr	w20, [x19, #76]
  46b5cc:	mov	w8, #0x1                   	// #1
  46b5d0:	mov	x0, x19
  46b5d4:	str	w8, [x19, #76]
  46b5d8:	bl	46e93c <feof@plt+0x6b09c>
  46b5dc:	mov	x21, x0
  46b5e0:	str	w20, [x19, #76]
  46b5e4:	cbz	x0, 46bf30 <feof@plt+0x68690>
  46b5e8:	ldr	x8, [x22]
  46b5ec:	ldrb	w9, [x8]
  46b5f0:	cmp	w9, #0x5f
  46b5f4:	b.ne	46bf30 <feof@plt+0x68690>  // b.any
  46b5f8:	add	x8, x8, #0x1
  46b5fc:	mov	x0, x19
  46b600:	str	x8, [x19, #24]
  46b604:	bl	46aef4 <feof@plt+0x67654>
  46b608:	cbz	x0, 46bf30 <feof@plt+0x68690>
  46b60c:	ldp	w8, w9, [x19, #40]
  46b610:	sxtw	x8, w8
  46b614:	cmp	w8, w9
  46b618:	b.ge	46bf30 <feof@plt+0x68690>  // b.tcont
  46b61c:	ldr	x9, [x19, #32]
  46b620:	mov	w10, #0x18                  	// #24
  46b624:	add	w11, w8, #0x1
  46b628:	madd	x20, x8, x10, x9
  46b62c:	str	wzr, [x20, #4]
  46b630:	str	w11, [x19, #40]
  46b634:	cbz	x9, 46bf30 <feof@plt+0x68690>
  46b638:	mov	w11, #0x18                  	// #24
  46b63c:	mov	w10, #0x2a                  	// #42
  46b640:	madd	x8, x8, x11, x9
  46b644:	str	w10, [x20]
  46b648:	stp	x21, x0, [x8, #8]
  46b64c:	b	46b774 <feof@plt+0x67ed4>
  46b650:	str	x9, [x22]
  46b654:	ldrb	w9, [x9]
  46b658:	cbz	w9, 46bf64 <feof@plt+0x686c4>
  46b65c:	add	x11, x8, #0x2
  46b660:	str	x11, [x22]
  46b664:	ldrb	w9, [x8, #1]
  46b668:	mov	x21, xzr
  46b66c:	sub	w9, w9, #0x46
  46b670:	cmp	w9, #0x30
  46b674:	b.hi	46bf68 <feof@plt+0x686c8>  // b.pmore
  46b678:	adrp	x10, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46b67c:	add	x10, x10, #0x942
  46b680:	adr	x12, 46b690 <feof@plt+0x67df0>
  46b684:	ldrh	w13, [x10, x9, lsl #1]
  46b688:	add	x12, x12, x13, lsl #2
  46b68c:	br	x12
  46b690:	ldr	w20, [x19, #76]
  46b694:	mov	w8, #0x1                   	// #1
  46b698:	mov	x0, x19
  46b69c:	str	w8, [x19, #76]
  46b6a0:	bl	46e93c <feof@plt+0x6b09c>
  46b6a4:	str	w20, [x19, #76]
  46b6a8:	cbz	x0, 46b994 <feof@plt+0x680f4>
  46b6ac:	ldp	w8, w9, [x19, #40]
  46b6b0:	sxtw	x8, w8
  46b6b4:	cmp	w8, w9
  46b6b8:	b.ge	46b994 <feof@plt+0x680f4>  // b.tcont
  46b6bc:	ldr	x9, [x19, #32]
  46b6c0:	mov	w10, #0x18                  	// #24
  46b6c4:	add	w11, w8, #0x1
  46b6c8:	madd	x20, x8, x10, x9
  46b6cc:	str	wzr, [x20, #4]
  46b6d0:	str	w11, [x19, #40]
  46b6d4:	cbz	x9, 46b994 <feof@plt+0x680f4>
  46b6d8:	mov	w11, #0x18                  	// #24
  46b6dc:	mov	w10, #0x43                  	// #67
  46b6e0:	madd	x8, x8, x11, x9
  46b6e4:	str	w10, [x20]
  46b6e8:	stp	x0, xzr, [x8, #8]
  46b6ec:	str	x20, [sp, #8]
  46b6f0:	ldr	x8, [x22]
  46b6f4:	ldrb	w9, [x8]
  46b6f8:	cbz	w9, 46b994 <feof@plt+0x680f4>
  46b6fc:	add	x9, x8, #0x1
  46b700:	str	x9, [x22]
  46b704:	ldrb	w8, [x8]
  46b708:	cmp	w8, #0x45
  46b70c:	b.eq	46bf3c <feof@plt+0x6869c>  // b.none
  46b710:	b	46b994 <feof@plt+0x680f4>
  46b714:	mov	x8, xzr
  46b718:	mov	x21, x8
  46b71c:	str	x8, [sp, #8]
  46b720:	mov	x0, x19
  46b724:	bl	46aef4 <feof@plt+0x67654>
  46b728:	mov	x20, xzr
  46b72c:	cbz	x0, 46b774 <feof@plt+0x67ed4>
  46b730:	cbz	x21, 46b774 <feof@plt+0x67ed4>
  46b734:	ldp	w8, w9, [x19, #40]
  46b738:	sxtw	x8, w8
  46b73c:	cmp	w8, w9
  46b740:	b.ge	46bf30 <feof@plt+0x68690>  // b.tcont
  46b744:	ldr	x9, [x19, #32]
  46b748:	mov	w10, #0x18                  	// #24
  46b74c:	add	w11, w8, #0x1
  46b750:	madd	x20, x8, x10, x9
  46b754:	str	wzr, [x20, #4]
  46b758:	str	w11, [x19, #40]
  46b75c:	cbz	x9, 46bf30 <feof@plt+0x68690>
  46b760:	mov	w11, #0x18                  	// #24
  46b764:	mov	w10, #0x21                  	// #33
  46b768:	madd	x8, x8, x11, x9
  46b76c:	str	w10, [x20]
  46b770:	stp	x0, x21, [x8, #8]
  46b774:	str	x20, [sp, #8]
  46b778:	b	46bf38 <feof@plt+0x68698>
  46b77c:	mov	w11, #0x1                   	// #1
  46b780:	cmp	w10, #0x5f
  46b784:	b.ne	46b7b8 <feof@plt+0x67f18>  // b.any
  46b788:	add	x21, x8, #0x2
  46b78c:	str	x21, [x22]
  46b790:	tbz	w11, #31, 46b320 <feof@plt+0x67a80>
  46b794:	mov	x20, xzr
  46b798:	mov	x9, x21
  46b79c:	b	46b7c0 <feof@plt+0x67f20>
  46b7a0:	cmn	w12, #0x1
  46b7a4:	b.lt	46b7b8 <feof@plt+0x67f18>  // b.tstop
  46b7a8:	add	w11, w12, #0x1
  46b7ac:	sub	x8, x9, #0x1
  46b7b0:	cmp	w10, #0x5f
  46b7b4:	b.eq	46b788 <feof@plt+0x67ee8>  // b.none
  46b7b8:	mov	x20, xzr
  46b7bc:	mov	x21, x9
  46b7c0:	str	x20, [sp, #8]
  46b7c4:	ldrb	w8, [x9]
  46b7c8:	cmp	w8, #0x49
  46b7cc:	b.ne	46bf38 <feof@plt+0x68698>  // b.any
  46b7d0:	ldr	w8, [x19, #80]
  46b7d4:	cbz	w8, 46b87c <feof@plt+0x67fdc>
  46b7d8:	ldr	w22, [x19, #40]
  46b7dc:	ldr	w23, [x19, #56]
  46b7e0:	ldr	w24, [x19, #72]
  46b7e4:	add	x8, x9, #0x1
  46b7e8:	mov	x0, x19
  46b7ec:	str	x8, [x19, #24]
  46b7f0:	bl	46e820 <feof@plt+0x6af80>
  46b7f4:	ldr	x8, [x19, #24]
  46b7f8:	ldrb	w8, [x8]
  46b7fc:	cmp	w8, #0x49
  46b800:	b.ne	46b8c0 <feof@plt+0x68020>  // b.any
  46b804:	cbz	x20, 46bf64 <feof@plt+0x686c4>
  46b808:	ldp	w8, w9, [x19, #56]
  46b80c:	sxtw	x8, w8
  46b810:	cmp	w8, w9
  46b814:	b.ge	46bf64 <feof@plt+0x686c4>  // b.tcont
  46b818:	ldr	x9, [x19, #48]
  46b81c:	add	w10, w8, #0x1
  46b820:	str	x20, [x9, x8, lsl #3]
  46b824:	mov	x20, xzr
  46b828:	str	w10, [x19, #56]
  46b82c:	cbz	x0, 46b774 <feof@plt+0x67ed4>
  46b830:	ldr	x8, [sp, #8]
  46b834:	cbz	x8, 46b774 <feof@plt+0x67ed4>
  46b838:	ldp	w9, w10, [x19, #40]
  46b83c:	sxtw	x9, w9
  46b840:	cmp	w9, w10
  46b844:	b.ge	46bf30 <feof@plt+0x68690>  // b.tcont
  46b848:	ldr	x10, [x19, #32]
  46b84c:	mov	w11, #0x18                  	// #24
  46b850:	add	w12, w9, #0x1
  46b854:	madd	x20, x9, x11, x10
  46b858:	str	wzr, [x20, #4]
  46b85c:	str	w12, [x19, #40]
  46b860:	cbz	x10, 46bf30 <feof@plt+0x68690>
  46b864:	mov	w12, #0x18                  	// #24
  46b868:	mov	w11, #0x4                   	// #4
  46b86c:	madd	x9, x9, x12, x10
  46b870:	str	w11, [x20]
  46b874:	stp	x8, x0, [x9, #8]
  46b878:	b	46b774 <feof@plt+0x67ed4>
  46b87c:	cbz	x20, 46bf64 <feof@plt+0x686c4>
  46b880:	ldp	w8, w9, [x19, #56]
  46b884:	sxtw	x8, w8
  46b888:	cmp	w8, w9
  46b88c:	b.ge	46bf64 <feof@plt+0x686c4>  // b.tcont
  46b890:	ldr	x9, [x19, #48]
  46b894:	str	x20, [x9, x8, lsl #3]
  46b898:	ldr	x9, [x19, #24]
  46b89c:	add	w8, w8, #0x1
  46b8a0:	str	w8, [x19, #56]
  46b8a4:	ldrb	w8, [x9]
  46b8a8:	sub	w8, w8, #0x49
  46b8ac:	cmp	w8, #0x1
  46b8b0:	b.hi	46bf30 <feof@plt+0x68690>  // b.pmore
  46b8b4:	ldr	x21, [sp, #8]
  46b8b8:	add	x8, x9, #0x1
  46b8bc:	b	46b4f8 <feof@plt+0x67c58>
  46b8c0:	str	x21, [x19, #24]
  46b8c4:	str	w22, [x19, #40]
  46b8c8:	str	w23, [x19, #56]
  46b8cc:	str	w24, [x19, #72]
  46b8d0:	b	46bf38 <feof@plt+0x68698>
  46b8d4:	ldp	w8, w9, [x19, #40]
  46b8d8:	sxtw	x8, w8
  46b8dc:	cmp	w8, w9
  46b8e0:	b.ge	46bc80 <feof@plt+0x683e0>  // b.tcont
  46b8e4:	ldr	x9, [x19, #32]
  46b8e8:	mov	w10, #0x18                  	// #24
  46b8ec:	add	w12, w8, #0x1
  46b8f0:	madd	x21, x8, x10, x9
  46b8f4:	str	wzr, [x21, #4]
  46b8f8:	str	w12, [x19, #40]
  46b8fc:	b	46bc84 <feof@plt+0x683e4>
  46b900:	ldp	w8, w9, [x19, #40]
  46b904:	sxtw	x8, w8
  46b908:	cmp	w8, w9
  46b90c:	b.ge	46b994 <feof@plt+0x680f4>  // b.tcont
  46b910:	ldr	x9, [x19, #32]
  46b914:	mov	w10, #0x18                  	// #24
  46b918:	add	w11, w8, #0x1
  46b91c:	madd	x21, x8, x10, x9
  46b920:	str	wzr, [x21, #4]
  46b924:	str	w11, [x19, #40]
  46b928:	cbz	x9, 46b994 <feof@plt+0x680f4>
  46b92c:	mov	w10, #0x18                  	// #24
  46b930:	adrp	x11, 484000 <_obstack_memory_used@@Base+0x82fc>
  46b934:	add	x11, x11, #0xdbe
  46b938:	mov	w12, #0x4                   	// #4
  46b93c:	b	46b97c <feof@plt+0x680dc>
  46b940:	ldp	w8, w9, [x19, #40]
  46b944:	sxtw	x8, w8
  46b948:	cmp	w8, w9
  46b94c:	b.ge	46b994 <feof@plt+0x680f4>  // b.tcont
  46b950:	ldr	x9, [x19, #32]
  46b954:	mov	w10, #0x18                  	// #24
  46b958:	add	w11, w8, #0x1
  46b95c:	madd	x21, x8, x10, x9
  46b960:	str	wzr, [x21, #4]
  46b964:	str	w11, [x19, #40]
  46b968:	cbz	x9, 46b994 <feof@plt+0x680f4>
  46b96c:	mov	w10, #0x18                  	// #24
  46b970:	adrp	x11, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46b974:	add	x11, x11, #0xb5e
  46b978:	mov	w12, #0xe                   	// #14
  46b97c:	madd	x8, x8, x10, x9
  46b980:	str	xzr, [x21]
  46b984:	str	x11, [x8, #8]
  46b988:	str	w12, [x8, #16]
  46b98c:	str	x21, [sp, #8]
  46b990:	b	46bf68 <feof@plt+0x686c8>
  46b994:	mov	x21, xzr
  46b998:	str	xzr, [sp, #8]
  46b99c:	b	46bf68 <feof@plt+0x686c8>
  46b9a0:	ldp	w8, w9, [x19, #40]
  46b9a4:	sxtw	x8, w8
  46b9a8:	cmp	w8, w9
  46b9ac:	b.ge	46bc28 <feof@plt+0x68388>  // b.tcont
  46b9b0:	ldr	x9, [x19, #32]
  46b9b4:	mov	w10, #0x18                  	// #24
  46b9b8:	add	w11, w8, #0x1
  46b9bc:	madd	x21, x8, x10, x9
  46b9c0:	str	wzr, [x21, #4]
  46b9c4:	str	w11, [x19, #40]
  46b9c8:	cbz	x9, 46bc28 <feof@plt+0x68388>
  46b9cc:	mov	w11, #0x18                  	// #24
  46b9d0:	mov	w10, #0x27                  	// #39
  46b9d4:	madd	x8, x8, x11, x9
  46b9d8:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46b9dc:	str	w10, [x21]
  46b9e0:	add	x9, x9, #0x718
  46b9e4:	b	46bc20 <feof@plt+0x68380>
  46b9e8:	ldp	w8, w9, [x19, #40]
  46b9ec:	sxtw	x8, w8
  46b9f0:	cmp	w8, w9
  46b9f4:	b.ge	46bc28 <feof@plt+0x68388>  // b.tcont
  46b9f8:	ldr	x9, [x19, #32]
  46b9fc:	mov	w10, #0x18                  	// #24
  46ba00:	add	w11, w8, #0x1
  46ba04:	madd	x21, x8, x10, x9
  46ba08:	str	wzr, [x21, #4]
  46ba0c:	str	w11, [x19, #40]
  46ba10:	cbz	x9, 46bc28 <feof@plt+0x68388>
  46ba14:	mov	w11, #0x18                  	// #24
  46ba18:	mov	w10, #0x27                  	// #39
  46ba1c:	madd	x8, x8, x11, x9
  46ba20:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46ba24:	str	w10, [x21]
  46ba28:	add	x9, x9, #0x738
  46ba2c:	b	46bc20 <feof@plt+0x68380>
  46ba30:	ldp	w8, w9, [x19, #40]
  46ba34:	sxtw	x8, w8
  46ba38:	cmp	w8, w9
  46ba3c:	b.ge	46bc28 <feof@plt+0x68388>  // b.tcont
  46ba40:	ldr	x9, [x19, #32]
  46ba44:	mov	w10, #0x18                  	// #24
  46ba48:	add	w11, w8, #0x1
  46ba4c:	madd	x21, x8, x10, x9
  46ba50:	str	wzr, [x21, #4]
  46ba54:	str	w11, [x19, #40]
  46ba58:	cbz	x9, 46bc28 <feof@plt+0x68388>
  46ba5c:	mov	w11, #0x18                  	// #24
  46ba60:	madd	x8, x8, x11, x9
  46ba64:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46ba68:	mov	w10, #0x27                  	// #39
  46ba6c:	add	x9, x9, #0x6f8
  46ba70:	str	w10, [x21]
  46ba74:	b	46bc20 <feof@plt+0x68380>
  46ba78:	ldp	w8, w9, [x19, #40]
  46ba7c:	sxtw	x8, w8
  46ba80:	cmp	w8, w9
  46ba84:	b.ge	46bc28 <feof@plt+0x68388>  // b.tcont
  46ba88:	ldr	x9, [x19, #32]
  46ba8c:	mov	w10, #0x18                  	// #24
  46ba90:	add	w11, w8, #0x1
  46ba94:	madd	x21, x8, x10, x9
  46ba98:	str	wzr, [x21, #4]
  46ba9c:	str	w11, [x19, #40]
  46baa0:	cbz	x9, 46bc28 <feof@plt+0x68388>
  46baa4:	mov	w11, #0x18                  	// #24
  46baa8:	mov	w10, #0x27                  	// #39
  46baac:	madd	x8, x8, x11, x9
  46bab0:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46bab4:	str	w10, [x21]
  46bab8:	add	x9, x9, #0x758
  46babc:	b	46bc20 <feof@plt+0x68380>
  46bac0:	ldp	w8, w9, [x19, #40]
  46bac4:	sxtw	x8, w8
  46bac8:	cmp	w8, w9
  46bacc:	b.ge	46bc28 <feof@plt+0x68388>  // b.tcont
  46bad0:	ldr	x9, [x19, #32]
  46bad4:	mov	w10, #0x18                  	// #24
  46bad8:	add	w11, w8, #0x1
  46badc:	madd	x21, x8, x10, x9
  46bae0:	str	wzr, [x21, #4]
  46bae4:	str	w11, [x19, #40]
  46bae8:	cbz	x9, 46bc28 <feof@plt+0x68388>
  46baec:	mov	w11, #0x18                  	// #24
  46baf0:	mov	w10, #0x27                  	// #39
  46baf4:	madd	x8, x8, x11, x9
  46baf8:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46bafc:	str	w10, [x21]
  46bb00:	add	x9, x9, #0x7b8
  46bb04:	b	46bc20 <feof@plt+0x68380>
  46bb08:	ldp	w8, w9, [x19, #40]
  46bb0c:	sxtw	x8, w8
  46bb10:	cmp	w8, w9
  46bb14:	b.ge	46bc28 <feof@plt+0x68388>  // b.tcont
  46bb18:	ldr	x9, [x19, #32]
  46bb1c:	mov	w10, #0x18                  	// #24
  46bb20:	add	w11, w8, #0x1
  46bb24:	madd	x21, x8, x10, x9
  46bb28:	str	wzr, [x21, #4]
  46bb2c:	str	w11, [x19, #40]
  46bb30:	cbz	x9, 46bc28 <feof@plt+0x68388>
  46bb34:	mov	w11, #0x18                  	// #24
  46bb38:	mov	w10, #0x27                  	// #39
  46bb3c:	madd	x8, x8, x11, x9
  46bb40:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46bb44:	str	w10, [x21]
  46bb48:	add	x9, x9, #0x7d8
  46bb4c:	b	46bc20 <feof@plt+0x68380>
  46bb50:	mov	x0, x19
  46bb54:	bl	46aef4 <feof@plt+0x67654>
  46bb58:	cbz	x0, 46bf30 <feof@plt+0x68690>
  46bb5c:	ldp	w8, w9, [x19, #40]
  46bb60:	sxtw	x8, w8
  46bb64:	cmp	w8, w9
  46bb68:	b.ge	46bf30 <feof@plt+0x68690>  // b.tcont
  46bb6c:	ldr	x9, [x19, #32]
  46bb70:	mov	w10, #0x18                  	// #24
  46bb74:	add	w11, w8, #0x1
  46bb78:	madd	x20, x8, x10, x9
  46bb7c:	str	wzr, [x20, #4]
  46bb80:	str	w11, [x19, #40]
  46bb84:	cbz	x9, 46bf30 <feof@plt+0x68690>
  46bb88:	mov	w11, #0x18                  	// #24
  46bb8c:	mov	w10, #0x4b                  	// #75
  46bb90:	b	46b440 <feof@plt+0x67ba0>
  46bb94:	ldp	w8, w9, [x19, #40]
  46bb98:	sxtw	x8, w8
  46bb9c:	cmp	w8, w9
  46bba0:	b.ge	46bc28 <feof@plt+0x68388>  // b.tcont
  46bba4:	ldr	x9, [x19, #32]
  46bba8:	mov	w10, #0x18                  	// #24
  46bbac:	add	w11, w8, #0x1
  46bbb0:	madd	x21, x8, x10, x9
  46bbb4:	str	wzr, [x21, #4]
  46bbb8:	str	w11, [x19, #40]
  46bbbc:	cbz	x9, 46bc28 <feof@plt+0x68388>
  46bbc0:	mov	w11, #0x18                  	// #24
  46bbc4:	mov	w10, #0x27                  	// #39
  46bbc8:	madd	x8, x8, x11, x9
  46bbcc:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46bbd0:	str	w10, [x21]
  46bbd4:	add	x9, x9, #0x798
  46bbd8:	b	46bc20 <feof@plt+0x68380>
  46bbdc:	ldp	w8, w9, [x19, #40]
  46bbe0:	sxtw	x8, w8
  46bbe4:	cmp	w8, w9
  46bbe8:	b.ge	46bc28 <feof@plt+0x68388>  // b.tcont
  46bbec:	ldr	x9, [x19, #32]
  46bbf0:	mov	w10, #0x18                  	// #24
  46bbf4:	add	w11, w8, #0x1
  46bbf8:	madd	x21, x8, x10, x9
  46bbfc:	str	wzr, [x21, #4]
  46bc00:	str	w11, [x19, #40]
  46bc04:	cbz	x9, 46bc28 <feof@plt+0x68388>
  46bc08:	mov	w11, #0x18                  	// #24
  46bc0c:	mov	w10, #0x27                  	// #39
  46bc10:	madd	x8, x8, x11, x9
  46bc14:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46bc18:	str	w10, [x21]
  46bc1c:	add	x9, x9, #0x778
  46bc20:	str	x9, [x8, #8]
  46bc24:	b	46bc2c <feof@plt+0x6838c>
  46bc28:	mov	x21, xzr
  46bc2c:	str	x21, [sp, #8]
  46bc30:	ldr	x8, [x21, #8]
  46bc34:	ldr	w9, [x19, #72]
  46bc38:	ldr	w8, [x8, #8]
  46bc3c:	add	w8, w9, w8
  46bc40:	str	w8, [x19, #72]
  46bc44:	b	46bf68 <feof@plt+0x686c8>
  46bc48:	ldrb	w9, [x11]
  46bc4c:	cmp	w9, #0x5f
  46bc50:	b.ne	46bdd0 <feof@plt+0x68530>  // b.any
  46bc54:	ldr	w20, [x19, #76]
  46bc58:	add	x8, x8, #0x3
  46bc5c:	str	x8, [x19, #24]
  46bc60:	mov	w8, #0x1                   	// #1
  46bc64:	mov	x0, x19
  46bc68:	str	w8, [x19, #76]
  46bc6c:	bl	46e93c <feof@plt+0x6b09c>
  46bc70:	mov	x21, x0
  46bc74:	str	w20, [x19, #76]
  46bc78:	cbnz	x0, 46bed4 <feof@plt+0x68634>
  46bc7c:	b	46bf30 <feof@plt+0x68690>
  46bc80:	mov	x21, xzr
  46bc84:	mov	w8, #0x2c                  	// #44
  46bc88:	str	x21, [sp, #8]
  46bc8c:	str	w8, [x21]
  46bc90:	ldrb	w8, [x11]
  46bc94:	sub	w8, w8, #0x30
  46bc98:	cmp	w8, #0xa
  46bc9c:	cset	w9, cc  // cc = lo, ul, last
  46bca0:	cmp	w8, #0x9
  46bca4:	strh	w9, [x21, #16]
  46bca8:	b.hi	46bd30 <feof@plt+0x68490>  // b.pmore
  46bcac:	ldr	x10, [x22]
  46bcb0:	ldrb	w8, [x10]
  46bcb4:	cmp	w8, #0x6e
  46bcb8:	b.ne	46bccc <feof@plt+0x6842c>  // b.any
  46bcbc:	add	x9, x10, #0x1
  46bcc0:	str	x9, [x22]
  46bcc4:	ldrb	w8, [x10, #1]
  46bcc8:	mov	x10, x9
  46bccc:	sub	w9, w8, #0x30
  46bcd0:	cmp	w9, #0x9
  46bcd4:	b.hi	46bd30 <feof@plt+0x68490>  // b.pmore
  46bcd8:	mov	w9, #0x2f                  	// #47
  46bcdc:	mov	w12, #0x6667                	// #26215
  46bce0:	mov	w11, wzr
  46bce4:	movk	w9, #0x8000, lsl #16
  46bce8:	add	x10, x10, #0x1
  46bcec:	movk	w12, #0x6666, lsl #16
  46bcf0:	mov	w13, #0xa                   	// #10
  46bcf4:	and	w14, w8, #0xff
  46bcf8:	sub	w8, w9, w14
  46bcfc:	smull	x8, w8, w12
  46bd00:	lsr	x15, x8, #63
  46bd04:	asr	x8, x8, #34
  46bd08:	add	w8, w8, w15
  46bd0c:	cmp	w11, w8
  46bd10:	b.gt	46bd30 <feof@plt+0x68490>
  46bd14:	str	x10, [x22]
  46bd18:	ldrb	w8, [x10], #1
  46bd1c:	madd	w11, w11, w13, w14
  46bd20:	sub	w11, w11, #0x30
  46bd24:	sub	w14, w8, #0x30
  46bd28:	cmp	w14, #0xa
  46bd2c:	b.cc	46bcf4 <feof@plt+0x68454>  // b.lo, b.ul, b.last
  46bd30:	mov	x0, x19
  46bd34:	bl	46aef4 <feof@plt+0x67654>
  46bd38:	str	x0, [x21, #8]
  46bd3c:	cbz	x0, 46bf64 <feof@plt+0x686c4>
  46bd40:	ldr	x9, [x22]
  46bd44:	ldrb	w8, [x9]
  46bd48:	cmp	w8, #0x6e
  46bd4c:	b.ne	46bd60 <feof@plt+0x684c0>  // b.any
  46bd50:	add	x10, x9, #0x1
  46bd54:	str	x10, [x22]
  46bd58:	ldrb	w8, [x9, #1]
  46bd5c:	mov	x9, x10
  46bd60:	sub	w10, w8, #0x30
  46bd64:	cmp	w10, #0x9
  46bd68:	b.hi	46bdc8 <feof@plt+0x68528>  // b.pmore
  46bd6c:	mov	w10, #0x2f                  	// #47
  46bd70:	mov	w12, #0x6667                	// #26215
  46bd74:	mov	w11, wzr
  46bd78:	movk	w10, #0x8000, lsl #16
  46bd7c:	add	x9, x9, #0x1
  46bd80:	movk	w12, #0x6666, lsl #16
  46bd84:	mov	w13, #0xa                   	// #10
  46bd88:	and	w14, w8, #0xff
  46bd8c:	sub	w8, w10, w14
  46bd90:	smull	x8, w8, w12
  46bd94:	lsr	x15, x8, #63
  46bd98:	asr	x8, x8, #34
  46bd9c:	add	w8, w8, w15
  46bda0:	cmp	w11, w8
  46bda4:	b.gt	46be24 <feof@plt+0x68584>
  46bda8:	str	x9, [x22]
  46bdac:	ldrb	w8, [x9], #1
  46bdb0:	madd	w11, w11, w13, w14
  46bdb4:	sub	w11, w11, #0x30
  46bdb8:	sub	w14, w8, #0x30
  46bdbc:	cmp	w14, #0xa
  46bdc0:	b.cc	46bd88 <feof@plt+0x684e8>  // b.lo, b.ul, b.last
  46bdc4:	sub	x9, x9, #0x1
  46bdc8:	cbnz	w8, 46be28 <feof@plt+0x68588>
  46bdcc:	b	46be3c <feof@plt+0x6859c>
  46bdd0:	ldp	w9, w10, [x19, #40]
  46bdd4:	sxtw	x9, w9
  46bdd8:	cmp	w9, w10
  46bddc:	b.ge	46bf30 <feof@plt+0x68690>  // b.tcont
  46bde0:	ldr	x10, [x19, #32]
  46bde4:	mov	w12, #0x18                  	// #24
  46bde8:	add	w13, w9, #0x1
  46bdec:	madd	x21, x9, x12, x10
  46bdf0:	str	wzr, [x21, #4]
  46bdf4:	str	w13, [x19, #40]
  46bdf8:	cbz	x10, 46bf30 <feof@plt+0x68690>
  46bdfc:	mov	w12, #0x42                  	// #66
  46be00:	str	w12, [x21]
  46be04:	ldrb	w12, [x11]
  46be08:	cmp	w12, #0x6e
  46be0c:	b.ne	46be44 <feof@plt+0x685a4>  // b.any
  46be10:	add	x11, x8, #0x3
  46be14:	str	x11, [x22]
  46be18:	ldrb	w12, [x8, #3]
  46be1c:	mov	w8, #0x1                   	// #1
  46be20:	b	46be48 <feof@plt+0x685a8>
  46be24:	sub	x9, x9, #0x1
  46be28:	add	x8, x9, #0x1
  46be2c:	str	x8, [x22]
  46be30:	ldrb	w8, [x9]
  46be34:	cmp	w8, #0x73
  46be38:	cset	w8, eq  // eq = none
  46be3c:	strh	w8, [x21, #18]
  46be40:	b	46bf68 <feof@plt+0x686c8>
  46be44:	mov	w8, wzr
  46be48:	sub	w13, w12, #0x30
  46be4c:	cmp	w13, #0x9
  46be50:	b.hi	46beb0 <feof@plt+0x68610>  // b.pmore
  46be54:	mov	w14, #0x2f                  	// #47
  46be58:	mov	w15, #0x6667                	// #26215
  46be5c:	mov	w13, wzr
  46be60:	movk	w14, #0x8000, lsl #16
  46be64:	add	x11, x11, #0x1
  46be68:	movk	w15, #0x6666, lsl #16
  46be6c:	mov	w16, #0xa                   	// #10
  46be70:	and	w17, w12, #0xff
  46be74:	sub	w12, w14, w17
  46be78:	smull	x12, w12, w15
  46be7c:	lsr	x18, x12, #63
  46be80:	asr	x12, x12, #34
  46be84:	add	w12, w12, w18
  46be88:	cmp	w13, w12
  46be8c:	b.gt	46bec4 <feof@plt+0x68624>
  46be90:	str	x11, [x22]
  46be94:	ldrb	w12, [x11], #1
  46be98:	madd	w13, w13, w16, w17
  46be9c:	sub	w13, w13, #0x30
  46bea0:	sub	w17, w12, #0x30
  46bea4:	cmp	w17, #0xa
  46bea8:	b.cc	46be70 <feof@plt+0x685d0>  // b.lo, b.ul, b.last
  46beac:	b	46beb4 <feof@plt+0x68614>
  46beb0:	mov	w13, wzr
  46beb4:	cmp	w8, #0x0
  46beb8:	cneg	w8, w13, ne  // ne = any
  46bebc:	sxtw	x8, w8
  46bec0:	b	46bec8 <feof@plt+0x68628>
  46bec4:	mov	x8, #0xffffffffffffffff    	// #-1
  46bec8:	mov	w11, #0x18                  	// #24
  46becc:	madd	x9, x9, x11, x10
  46bed0:	str	x8, [x9, #8]
  46bed4:	ldr	x8, [x22]
  46bed8:	ldrb	w9, [x8]
  46bedc:	cmp	w9, #0x5f
  46bee0:	b.ne	46bf30 <feof@plt+0x68690>  // b.any
  46bee4:	add	x8, x8, #0x1
  46bee8:	mov	x0, x19
  46beec:	str	x8, [x19, #24]
  46bef0:	bl	46aef4 <feof@plt+0x67654>
  46bef4:	cbz	x0, 46bf30 <feof@plt+0x68690>
  46bef8:	ldp	w8, w9, [x19, #40]
  46befc:	sxtw	x8, w8
  46bf00:	cmp	w8, w9
  46bf04:	b.ge	46bf30 <feof@plt+0x68690>  // b.tcont
  46bf08:	ldr	x9, [x19, #32]
  46bf0c:	mov	w10, #0x18                  	// #24
  46bf10:	add	w11, w8, #0x1
  46bf14:	madd	x20, x8, x10, x9
  46bf18:	str	wzr, [x20, #4]
  46bf1c:	str	w11, [x19, #40]
  46bf20:	cbz	x9, 46bf30 <feof@plt+0x68690>
  46bf24:	mov	w11, #0x18                  	// #24
  46bf28:	mov	w10, #0x2d                  	// #45
  46bf2c:	b	46b1b0 <feof@plt+0x67910>
  46bf30:	mov	x20, xzr
  46bf34:	str	xzr, [sp, #8]
  46bf38:	cbz	x20, 46bf64 <feof@plt+0x686c4>
  46bf3c:	ldp	w8, w9, [x19, #56]
  46bf40:	sxtw	x8, w8
  46bf44:	cmp	w8, w9
  46bf48:	b.ge	46bf64 <feof@plt+0x686c4>  // b.tcont
  46bf4c:	ldr	x9, [x19, #48]
  46bf50:	add	w10, w8, #0x1
  46bf54:	str	x20, [x9, x8, lsl #3]
  46bf58:	str	w10, [x19, #56]
  46bf5c:	ldr	x21, [sp, #8]
  46bf60:	b	46bf68 <feof@plt+0x686c8>
  46bf64:	mov	x21, xzr
  46bf68:	mov	x0, x21
  46bf6c:	ldp	x20, x19, [sp, #64]
  46bf70:	ldp	x22, x21, [sp, #48]
  46bf74:	ldp	x24, x23, [sp, #32]
  46bf78:	ldp	x29, x30, [sp, #16]
  46bf7c:	add	sp, sp, #0x50
  46bf80:	ret
  46bf84:	stp	x29, x30, [sp, #-96]!
  46bf88:	stp	x28, x27, [sp, #16]
  46bf8c:	cmp	w2, #0x0
  46bf90:	mov	w8, #0x1e                  	// #30
  46bf94:	mov	w9, #0x1b                  	// #27
  46bf98:	mov	w10, #0x1d                  	// #29
  46bf9c:	mov	w11, #0x1a                  	// #26
  46bfa0:	mov	w12, #0x1c                  	// #28
  46bfa4:	mov	w13, #0x19                  	// #25
  46bfa8:	mov	x27, #0x1                   	// #1
  46bfac:	stp	x26, x25, [sp, #32]
  46bfb0:	stp	x24, x23, [sp, #48]
  46bfb4:	stp	x22, x21, [sp, #64]
  46bfb8:	stp	x20, x19, [sp, #80]
  46bfbc:	mov	w20, w2
  46bfc0:	mov	x19, x1
  46bfc4:	mov	x21, x0
  46bfc8:	csel	w23, w9, w8, eq  // eq = none
  46bfcc:	mov	w24, #0x1                   	// #1
  46bfd0:	csel	w25, w11, w10, eq  // eq = none
  46bfd4:	csel	w26, w13, w12, eq  // eq = none
  46bfd8:	movk	x27, #0x301, lsl #32
  46bfdc:	mov	x22, x1
  46bfe0:	mov	x29, sp
  46bfe4:	ldr	x8, [x21, #24]
  46bfe8:	ldrb	w9, [x8]
  46bfec:	cmp	w9, #0x55
  46bff0:	b.gt	46c008 <feof@plt+0x68768>
  46bff4:	cmp	w9, #0x44
  46bff8:	b.eq	46c048 <feof@plt+0x687a8>  // b.none
  46bffc:	cmp	w9, #0x4b
  46c000:	b.eq	46c018 <feof@plt+0x68778>  // b.none
  46c004:	b	46c1a4 <feof@plt+0x68904>
  46c008:	cmp	w9, #0x56
  46c00c:	b.eq	46c018 <feof@plt+0x68778>  // b.none
  46c010:	cmp	w9, #0x72
  46c014:	b.ne	46c1a4 <feof@plt+0x68904>  // b.any
  46c018:	add	x10, x8, #0x1
  46c01c:	cmp	w9, #0x4b
  46c020:	str	x10, [x21, #24]
  46c024:	b.eq	46c114 <feof@plt+0x68874>  // b.none
  46c028:	cmp	w9, #0x56
  46c02c:	b.eq	46c12c <feof@plt+0x6888c>  // b.none
  46c030:	cmp	w9, #0x72
  46c034:	b.ne	46c06c <feof@plt+0x687cc>  // b.any
  46c038:	ldr	w8, [x21, #72]
  46c03c:	mov	x3, xzr
  46c040:	mov	w1, w26
  46c044:	b	46c138 <feof@plt+0x68898>
  46c048:	ldrb	w9, [x8, #1]
  46c04c:	sub	w9, w9, #0x4f
  46c050:	cmp	w9, #0x29
  46c054:	b.hi	46c1b0 <feof@plt+0x68910>  // b.pmore
  46c058:	lsl	x9, x24, x9
  46c05c:	tst	x9, x27
  46c060:	b.eq	46c1b0 <feof@plt+0x68910>  // b.none
  46c064:	add	x10, x8, #0x1
  46c068:	str	x10, [x21, #24]
  46c06c:	ldrb	w9, [x10]
  46c070:	cbz	w9, 46c1e4 <feof@plt+0x68944>
  46c074:	add	x9, x8, #0x2
  46c078:	str	x9, [x21, #24]
  46c07c:	ldrb	w8, [x8, #1]
  46c080:	mov	x0, xzr
  46c084:	cmp	w8, #0x76
  46c088:	b.gt	46c0ec <feof@plt+0x6884c>
  46c08c:	cmp	w8, #0x4f
  46c090:	b.eq	46c09c <feof@plt+0x687fc>  // b.none
  46c094:	cmp	w8, #0x6f
  46c098:	b.ne	46c1e8 <feof@plt+0x68948>  // b.any
  46c09c:	ldr	w9, [x21, #72]
  46c0a0:	cmp	w8, #0x4f
  46c0a4:	add	w9, w9, #0x9
  46c0a8:	str	w9, [x21, #72]
  46c0ac:	b.ne	46c144 <feof@plt+0x688a4>  // b.any
  46c0b0:	ldr	w28, [x21, #76]
  46c0b4:	mov	x0, x21
  46c0b8:	str	w24, [x21, #76]
  46c0bc:	bl	46e93c <feof@plt+0x6b09c>
  46c0c0:	str	w28, [x21, #76]
  46c0c4:	cbz	x0, 46c1e8 <feof@plt+0x68948>
  46c0c8:	ldr	x8, [x21, #24]
  46c0cc:	ldrb	w9, [x8]
  46c0d0:	cmp	w9, #0x45
  46c0d4:	b.ne	46c1e4 <feof@plt+0x68944>  // b.any
  46c0d8:	add	x8, x8, #0x1
  46c0dc:	mov	x3, x0
  46c0e0:	str	x8, [x21, #24]
  46c0e4:	mov	w1, #0x4f                  	// #79
  46c0e8:	b	46c188 <feof@plt+0x688e8>
  46c0ec:	cmp	w8, #0x77
  46c0f0:	b.eq	46c150 <feof@plt+0x688b0>  // b.none
  46c0f4:	cmp	w8, #0x78
  46c0f8:	b.ne	46c1e8 <feof@plt+0x68948>  // b.any
  46c0fc:	ldr	w8, [x21, #72]
  46c100:	mov	x3, xzr
  46c104:	mov	w1, #0x4d                  	// #77
  46c108:	add	w8, w8, #0x11
  46c10c:	str	w8, [x21, #72]
  46c110:	b	46c188 <feof@plt+0x688e8>
  46c114:	ldr	w8, [x21, #72]
  46c118:	mov	x3, xzr
  46c11c:	mov	w1, w23
  46c120:	add	w8, w8, #0x6
  46c124:	str	w8, [x21, #72]
  46c128:	b	46c188 <feof@plt+0x688e8>
  46c12c:	ldr	w8, [x21, #72]
  46c130:	mov	x3, xzr
  46c134:	mov	w1, w25
  46c138:	add	w8, w8, #0x9
  46c13c:	str	w8, [x21, #72]
  46c140:	b	46c188 <feof@plt+0x688e8>
  46c144:	mov	x3, xzr
  46c148:	mov	w1, #0x4f                  	// #79
  46c14c:	b	46c188 <feof@plt+0x688e8>
  46c150:	ldr	w8, [x21, #72]
  46c154:	mov	x0, x21
  46c158:	add	w8, w8, #0x6
  46c15c:	str	w8, [x21, #72]
  46c160:	bl	46e704 <feof@plt+0x6ae64>
  46c164:	cbz	x0, 46c1e8 <feof@plt+0x68948>
  46c168:	ldr	x8, [x21, #24]
  46c16c:	ldrb	w9, [x8]
  46c170:	cmp	w9, #0x45
  46c174:	b.ne	46c1e4 <feof@plt+0x68944>  // b.any
  46c178:	mov	x3, x0
  46c17c:	add	x8, x8, #0x1
  46c180:	mov	w1, #0x50                  	// #80
  46c184:	str	x8, [x21, #24]
  46c188:	mov	x0, x21
  46c18c:	mov	x2, xzr
  46c190:	bl	46c390 <feof@plt+0x68af0>
  46c194:	str	x0, [x22]
  46c198:	cbz	x0, 46c1e8 <feof@plt+0x68948>
  46c19c:	add	x22, x0, #0x8
  46c1a0:	b	46bfe4 <feof@plt+0x68744>
  46c1a4:	cmp	w9, #0x46
  46c1a8:	b.ne	46c1b0 <feof@plt+0x68910>  // b.any
  46c1ac:	cbz	w20, 46c1bc <feof@plt+0x6891c>
  46c1b0:	mov	x0, x22
  46c1b4:	b	46c1e8 <feof@plt+0x68948>
  46c1b8:	add	x19, x8, #0x8
  46c1bc:	cmp	x22, x19
  46c1c0:	b.eq	46c1b0 <feof@plt+0x68910>  // b.none
  46c1c4:	ldr	x8, [x19]
  46c1c8:	ldr	w9, [x8]
  46c1cc:	sub	w10, w9, #0x19
  46c1d0:	cmp	w10, #0x2
  46c1d4:	b.hi	46c1b8 <feof@plt+0x68918>  // b.pmore
  46c1d8:	add	w9, w9, #0x3
  46c1dc:	str	w9, [x8]
  46c1e0:	b	46c1b8 <feof@plt+0x68918>
  46c1e4:	mov	x0, xzr
  46c1e8:	ldp	x20, x19, [sp, #80]
  46c1ec:	ldp	x22, x21, [sp, #64]
  46c1f0:	ldp	x24, x23, [sp, #48]
  46c1f4:	ldp	x26, x25, [sp, #32]
  46c1f8:	ldp	x28, x27, [sp, #16]
  46c1fc:	ldp	x29, x30, [sp], #96
  46c200:	ret
  46c204:	stp	x29, x30, [sp, #-32]!
  46c208:	stp	x20, x19, [sp, #16]
  46c20c:	ldrb	w8, [x0, #18]
  46c210:	mov	x19, x0
  46c214:	mov	x29, sp
  46c218:	tbnz	w8, #2, 46c238 <feof@plt+0x68998>
  46c21c:	ldr	w8, [x19, #84]
  46c220:	cmp	w8, #0x800
  46c224:	b.ls	46c230 <feof@plt+0x68990>  // b.plast
  46c228:	mov	x2, xzr
  46c22c:	b	46c380 <feof@plt+0x68ae0>
  46c230:	add	w8, w8, #0x1
  46c234:	str	w8, [x19, #84]
  46c238:	ldr	x8, [x19, #24]
  46c23c:	ldrb	w9, [x8]
  46c240:	cmp	w9, #0x46
  46c244:	b.ne	46c368 <feof@plt+0x68ac8>  // b.any
  46c248:	add	x9, x8, #0x1
  46c24c:	str	x9, [x19, #24]
  46c250:	ldrb	w9, [x8, #1]
  46c254:	cmp	w9, #0x59
  46c258:	b.ne	46c278 <feof@plt+0x689d8>  // b.any
  46c25c:	add	x9, x8, #0x2
  46c260:	str	x9, [x19, #24]
  46c264:	ldrb	w9, [x8, #2]
  46c268:	mov	w10, #0x2                   	// #2
  46c26c:	cmp	w9, #0x4a
  46c270:	b.eq	46c284 <feof@plt+0x689e4>  // b.none
  46c274:	b	46c290 <feof@plt+0x689f0>
  46c278:	mov	w10, #0x1                   	// #1
  46c27c:	cmp	w9, #0x4a
  46c280:	b.ne	46c290 <feof@plt+0x689f0>  // b.any
  46c284:	add	x8, x8, x10
  46c288:	add	x8, x8, #0x1
  46c28c:	str	x8, [x19, #24]
  46c290:	mov	x0, x19
  46c294:	bl	46aef4 <feof@plt+0x67654>
  46c298:	cbz	x0, 46c2f0 <feof@plt+0x68a50>
  46c29c:	mov	x20, x0
  46c2a0:	mov	x0, x19
  46c2a4:	bl	46e704 <feof@plt+0x6ae64>
  46c2a8:	cbz	x0, 46c2f0 <feof@plt+0x68a50>
  46c2ac:	ldp	w8, w9, [x19, #40]
  46c2b0:	sxtw	x8, w8
  46c2b4:	cmp	w8, w9
  46c2b8:	b.ge	46c2f0 <feof@plt+0x68a50>  // b.tcont
  46c2bc:	ldr	x9, [x19, #32]
  46c2c0:	mov	w10, #0x18                  	// #24
  46c2c4:	add	w11, w8, #0x1
  46c2c8:	madd	x2, x8, x10, x9
  46c2cc:	str	wzr, [x2, #4]
  46c2d0:	str	w11, [x19, #40]
  46c2d4:	cbz	x9, 46c2f0 <feof@plt+0x68a50>
  46c2d8:	mov	w11, #0x18                  	// #24
  46c2dc:	mov	w10, #0x29                  	// #41
  46c2e0:	madd	x8, x8, x11, x9
  46c2e4:	str	w10, [x2]
  46c2e8:	stp	x20, x0, [x8, #8]
  46c2ec:	b	46c2f4 <feof@plt+0x68a54>
  46c2f0:	mov	x2, xzr
  46c2f4:	ldr	x8, [x19, #24]
  46c2f8:	ldrb	w9, [x8]
  46c2fc:	cmp	w9, #0x52
  46c300:	b.eq	46c30c <feof@plt+0x68a6c>  // b.none
  46c304:	cmp	w9, #0x4f
  46c308:	b.ne	46c34c <feof@plt+0x68aac>  // b.any
  46c30c:	ldr	w10, [x19, #72]
  46c310:	cmp	w9, #0x52
  46c314:	mov	w9, #0x2                   	// #2
  46c318:	mov	w11, #0x1f                  	// #31
  46c31c:	cinc	w9, w9, ne  // ne = any
  46c320:	add	x8, x8, #0x1
  46c324:	cinc	w1, w11, ne  // ne = any
  46c328:	add	w9, w10, w9
  46c32c:	mov	x0, x19
  46c330:	mov	x3, xzr
  46c334:	str	w9, [x19, #72]
  46c338:	str	x8, [x19, #24]
  46c33c:	bl	46c390 <feof@plt+0x68af0>
  46c340:	ldr	x8, [x19, #24]
  46c344:	mov	x2, x0
  46c348:	ldrb	w9, [x8]
  46c34c:	cmp	w9, #0x45
  46c350:	b.ne	46c368 <feof@plt+0x68ac8>  // b.any
  46c354:	add	x8, x8, #0x1
  46c358:	str	x8, [x19, #24]
  46c35c:	ldrb	w8, [x19, #18]
  46c360:	tbz	w8, #2, 46c374 <feof@plt+0x68ad4>
  46c364:	b	46c380 <feof@plt+0x68ae0>
  46c368:	mov	x2, xzr
  46c36c:	ldrb	w8, [x19, #18]
  46c370:	tbnz	w8, #2, 46c380 <feof@plt+0x68ae0>
  46c374:	ldr	w8, [x19, #84]
  46c378:	sub	w8, w8, #0x1
  46c37c:	str	w8, [x19, #84]
  46c380:	ldp	x20, x19, [sp, #16]
  46c384:	mov	x0, x2
  46c388:	ldp	x29, x30, [sp], #32
  46c38c:	ret
  46c390:	sub	w9, w1, #0x1
  46c394:	mov	x8, x0
  46c398:	cmp	w9, #0x4f
  46c39c:	mov	x0, xzr
  46c3a0:	b.hi	46c40c <feof@plt+0x68b6c>  // b.pmore
  46c3a4:	adrp	x10, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46c3a8:	add	x10, x10, #0x9a4
  46c3ac:	adr	x11, 46c3bc <feof@plt+0x68b1c>
  46c3b0:	ldrb	w12, [x10, x9]
  46c3b4:	add	x11, x11, x12, lsl #2
  46c3b8:	br	x11
  46c3bc:	cbnz	x2, 46c3d0 <feof@plt+0x68b30>
  46c3c0:	b	46c414 <feof@plt+0x68b74>
  46c3c4:	mov	x0, xzr
  46c3c8:	cbz	x2, 46c40c <feof@plt+0x68b6c>
  46c3cc:	cbz	x3, 46c40c <feof@plt+0x68b6c>
  46c3d0:	ldp	w9, w10, [x8, #40]
  46c3d4:	sxtw	x9, w9
  46c3d8:	cmp	w9, w10
  46c3dc:	b.ge	46c414 <feof@plt+0x68b74>  // b.tcont
  46c3e0:	ldr	x10, [x8, #32]
  46c3e4:	mov	w11, #0x18                  	// #24
  46c3e8:	add	w12, w9, #0x1
  46c3ec:	madd	x0, x9, x11, x10
  46c3f0:	str	wzr, [x0, #4]
  46c3f4:	str	w12, [x8, #40]
  46c3f8:	cbz	x10, 46c414 <feof@plt+0x68b74>
  46c3fc:	mov	w8, #0x18                  	// #24
  46c400:	madd	x8, x9, x8, x10
  46c404:	str	w1, [x0]
  46c408:	stp	x2, x3, [x8, #8]
  46c40c:	ret
  46c410:	cbnz	x3, 46c3d0 <feof@plt+0x68b30>
  46c414:	mov	x0, xzr
  46c418:	ret
  46c41c:	ldr	x9, [x0, #24]
  46c420:	ldrb	w10, [x9]
  46c424:	cmp	w10, #0x6e
  46c428:	b.ne	46c444 <feof@plt+0x68ba4>  // b.any
  46c42c:	add	x11, x9, #0x1
  46c430:	str	x11, [x0, #24]
  46c434:	ldrb	w10, [x9, #1]
  46c438:	mov	w8, #0x1                   	// #1
  46c43c:	mov	x9, x11
  46c440:	b	46c448 <feof@plt+0x68ba8>
  46c444:	mov	w8, wzr
  46c448:	sub	w11, w10, #0x30
  46c44c:	cmp	w11, #0x9
  46c450:	b.hi	46c4b4 <feof@plt+0x68c14>  // b.pmore
  46c454:	mov	w12, #0x2f                  	// #47
  46c458:	mov	w13, #0x6667                	// #26215
  46c45c:	mov	w11, wzr
  46c460:	add	x9, x9, #0x1
  46c464:	movk	w12, #0x8000, lsl #16
  46c468:	movk	w13, #0x6666, lsl #16
  46c46c:	mov	w14, #0xa                   	// #10
  46c470:	and	w15, w10, #0xff
  46c474:	sub	w10, w12, w15
  46c478:	smull	x10, w10, w13
  46c47c:	lsr	x16, x10, #63
  46c480:	asr	x10, x10, #34
  46c484:	add	w10, w10, w16
  46c488:	cmp	w11, w10
  46c48c:	b.gt	46c568 <feof@plt+0x68cc8>
  46c490:	str	x9, [x0, #24]
  46c494:	ldrb	w10, [x9], #1
  46c498:	madd	w11, w11, w14, w15
  46c49c:	sub	w11, w11, #0x30
  46c4a0:	sub	w15, w10, #0x30
  46c4a4:	cmp	w15, #0xa
  46c4a8:	b.cc	46c470 <feof@plt+0x68bd0>  // b.lo, b.ul, b.last
  46c4ac:	sub	x9, x9, #0x1
  46c4b0:	b	46c4b8 <feof@plt+0x68c18>
  46c4b4:	mov	w11, wzr
  46c4b8:	cmp	w8, #0x0
  46c4bc:	cneg	w10, w11, ne  // ne = any
  46c4c0:	cmp	w10, #0x1
  46c4c4:	b.lt	46c568 <feof@plt+0x68cc8>  // b.tstop
  46c4c8:	ldr	x8, [x0, #8]
  46c4cc:	sub	x11, x8, x9
  46c4d0:	mov	w8, w10
  46c4d4:	cmp	x11, x8
  46c4d8:	b.lt	46c604 <feof@plt+0x68d64>  // b.tstop
  46c4dc:	ldrb	w11, [x0, #16]
  46c4e0:	add	x8, x9, x8
  46c4e4:	str	x8, [x0, #24]
  46c4e8:	tbz	w11, #2, 46c500 <feof@plt+0x68c60>
  46c4ec:	ldrb	w11, [x8]
  46c4f0:	cmp	w11, #0x24
  46c4f4:	b.ne	46c500 <feof@plt+0x68c60>  // b.any
  46c4f8:	add	x8, x8, #0x1
  46c4fc:	str	x8, [x0, #24]
  46c500:	cmp	w10, #0xa
  46c504:	b.lt	46c524 <feof@plt+0x68c84>  // b.tstop
  46c508:	ldr	x8, [x9]
  46c50c:	mov	x11, #0x475f                	// #18271
  46c510:	movk	x11, #0x4f4c, lsl #16
  46c514:	movk	x11, #0x4142, lsl #32
  46c518:	movk	x11, #0x5f4c, lsl #48
  46c51c:	cmp	x8, x11
  46c520:	b.eq	46c570 <feof@plt+0x68cd0>  // b.none
  46c524:	ldp	w11, w8, [x0, #40]
  46c528:	sxtw	x11, w11
  46c52c:	cmp	w11, w8
  46c530:	b.ge	46c604 <feof@plt+0x68d64>  // b.tcont
  46c534:	ldr	x12, [x0, #32]
  46c538:	mov	w8, #0x18                  	// #24
  46c53c:	add	w13, w11, #0x1
  46c540:	madd	x8, x11, x8, x12
  46c544:	str	wzr, [x8, #4]
  46c548:	str	w13, [x0, #40]
  46c54c:	cbz	x12, 46c604 <feof@plt+0x68d64>
  46c550:	mov	w13, #0x18                  	// #24
  46c554:	madd	x11, x11, x13, x12
  46c558:	str	xzr, [x8]
  46c55c:	str	x9, [x11, #8]
  46c560:	str	w10, [x11, #16]
  46c564:	b	46c608 <feof@plt+0x68d68>
  46c568:	mov	x0, xzr
  46c56c:	ret
  46c570:	ldrb	w8, [x9, #8]
  46c574:	sub	w8, w8, #0x24
  46c578:	cmp	w8, #0x3b
  46c57c:	b.hi	46c524 <feof@plt+0x68c84>  // b.pmore
  46c580:	mov	w11, #0x1                   	// #1
  46c584:	lsl	x8, x11, x8
  46c588:	mov	x11, #0x401                 	// #1025
  46c58c:	movk	x11, #0x800, lsl #48
  46c590:	tst	x8, x11
  46c594:	b.eq	46c524 <feof@plt+0x68c84>  // b.none
  46c598:	ldrb	w8, [x9, #9]
  46c59c:	cmp	w8, #0x4e
  46c5a0:	b.ne	46c524 <feof@plt+0x68c84>  // b.any
  46c5a4:	ldr	w8, [x0, #72]
  46c5a8:	ldp	w9, w11, [x0, #40]
  46c5ac:	sxtw	x9, w9
  46c5b0:	sub	w8, w8, w10
  46c5b4:	add	w8, w8, #0x16
  46c5b8:	cmp	w9, w11
  46c5bc:	str	w8, [x0, #72]
  46c5c0:	b.ge	46c604 <feof@plt+0x68d64>  // b.tcont
  46c5c4:	ldr	x10, [x0, #32]
  46c5c8:	mov	w8, #0x18                  	// #24
  46c5cc:	add	w11, w9, #0x1
  46c5d0:	madd	x8, x9, x8, x10
  46c5d4:	str	wzr, [x8, #4]
  46c5d8:	str	w11, [x0, #40]
  46c5dc:	cbz	x10, 46c604 <feof@plt+0x68d64>
  46c5e0:	mov	w11, #0x18                  	// #24
  46c5e4:	adrp	x12, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46c5e8:	add	x12, x12, #0xb76
  46c5ec:	mov	w13, #0x15                  	// #21
  46c5f0:	madd	x9, x9, x11, x10
  46c5f4:	str	xzr, [x8]
  46c5f8:	str	x12, [x9, #8]
  46c5fc:	str	w13, [x9, #16]
  46c600:	b	46c608 <feof@plt+0x68d68>
  46c604:	mov	x8, xzr
  46c608:	str	x8, [x0, #64]
  46c60c:	mov	x0, x8
  46c610:	ret
  46c614:	stp	x29, x30, [sp, #-64]!
  46c618:	stp	x22, x21, [sp, #32]
  46c61c:	stp	x20, x19, [sp, #48]
  46c620:	ldr	x8, [x0, #24]
  46c624:	str	x23, [sp, #16]
  46c628:	mov	x29, sp
  46c62c:	ldrb	w9, [x8]
  46c630:	cmp	w9, #0x53
  46c634:	b.ne	46c920 <feof@plt+0x69080>  // b.any
  46c638:	add	x9, x8, #0x1
  46c63c:	str	x9, [x0, #24]
  46c640:	ldrb	w10, [x8, #1]
  46c644:	mov	x19, x0
  46c648:	cbz	w10, 46c698 <feof@plt+0x68df8>
  46c64c:	add	x9, x8, #0x2
  46c650:	str	x9, [x19, #24]
  46c654:	ldrb	w10, [x8, #1]
  46c658:	cmp	w10, #0x5f
  46c65c:	b.ne	46c67c <feof@plt+0x68ddc>  // b.any
  46c660:	mov	w8, wzr
  46c664:	ldr	w9, [x19, #56]
  46c668:	cmp	w8, w9
  46c66c:	b.cs	46c920 <feof@plt+0x69080>  // b.hs, b.nlast
  46c670:	ldr	x9, [x19, #48]
  46c674:	ldr	x0, [x9, w8, uxtw #3]
  46c678:	b	46c924 <feof@plt+0x69084>
  46c67c:	sub	w8, w10, #0x30
  46c680:	cmp	w8, #0xa
  46c684:	b.cc	46c6f4 <feof@plt+0x68e54>  // b.lo, b.ul, b.last
  46c688:	sub	w8, w10, #0x41
  46c68c:	and	w8, w8, #0xff
  46c690:	cmp	w8, #0x19
  46c694:	b.ls	46c6f4 <feof@plt+0x68e54>  // b.plast
  46c698:	ldr	w8, [x19, #16]
  46c69c:	ubfx	w8, w8, #3, #1
  46c6a0:	cbz	w1, 46c6b8 <feof@plt+0x68e18>
  46c6a4:	cbnz	w8, 46c6b8 <feof@plt+0x68e18>
  46c6a8:	ldrb	w8, [x9]
  46c6ac:	sub	w8, w8, #0x43
  46c6b0:	cmp	w8, #0x2
  46c6b4:	cset	w8, cc  // cc = lo, ul, last
  46c6b8:	sub	w9, w10, #0x61
  46c6bc:	cmp	w9, #0x13
  46c6c0:	mov	x0, xzr
  46c6c4:	b.hi	46c924 <feof@plt+0x69084>  // b.pmore
  46c6c8:	adrp	x10, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46c6cc:	add	x10, x10, #0x9f4
  46c6d0:	adr	x11, 46c6e8 <feof@plt+0x68e48>
  46c6d4:	ldrb	w12, [x10, x9]
  46c6d8:	add	x11, x11, x12, lsl #2
  46c6dc:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46c6e0:	add	x9, x9, #0x7f8
  46c6e4:	br	x11
  46c6e8:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46c6ec:	add	x9, x9, #0x830
  46c6f0:	b	46c79c <feof@plt+0x68efc>
  46c6f4:	mov	w11, wzr
  46c6f8:	mov	w8, #0x24                  	// #36
  46c6fc:	b	46c70c <feof@plt+0x68e6c>
  46c700:	cmp	w10, #0x5f
  46c704:	mov	w11, w12
  46c708:	b.eq	46c938 <feof@plt+0x69098>  // b.none
  46c70c:	sub	w12, w10, #0x30
  46c710:	and	w12, w12, #0xff
  46c714:	cmp	w12, #0xa
  46c718:	and	w10, w10, #0xff
  46c71c:	b.cs	46c728 <feof@plt+0x68e88>  // b.hs, b.nlast
  46c720:	mov	w12, #0xffffffd0            	// #-48
  46c724:	b	46c738 <feof@plt+0x68e98>
  46c728:	sub	w12, w10, #0x41
  46c72c:	cmp	w12, #0x19
  46c730:	b.hi	46c920 <feof@plt+0x69080>  // b.pmore
  46c734:	mov	w12, #0xffffffc9            	// #-55
  46c738:	madd	w12, w11, w8, w12
  46c73c:	add	w12, w12, w10
  46c740:	cmp	w12, w11
  46c744:	b.cc	46c920 <feof@plt+0x69080>  // b.lo, b.ul, b.last
  46c748:	ldrb	w10, [x9]
  46c74c:	cbz	w10, 46c700 <feof@plt+0x68e60>
  46c750:	add	x11, x9, #0x1
  46c754:	str	x11, [x19, #24]
  46c758:	ldrb	w10, [x9]
  46c75c:	mov	x9, x11
  46c760:	b	46c700 <feof@plt+0x68e60>
  46c764:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46c768:	add	x9, x9, #0x868
  46c76c:	b	46c79c <feof@plt+0x68efc>
  46c770:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46c774:	add	x9, x9, #0x948
  46c778:	b	46c79c <feof@plt+0x68efc>
  46c77c:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46c780:	add	x9, x9, #0x8d8
  46c784:	b	46c79c <feof@plt+0x68efc>
  46c788:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46c78c:	add	x9, x9, #0x910
  46c790:	b	46c79c <feof@plt+0x68efc>
  46c794:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46c798:	add	x9, x9, #0x8a0
  46c79c:	ldr	x10, [x9, #40]
  46c7a0:	cbz	x10, 46c7f0 <feof@plt+0x68f50>
  46c7a4:	ldp	w11, w12, [x19, #40]
  46c7a8:	sxtw	x11, w11
  46c7ac:	cmp	w11, w12
  46c7b0:	b.ge	46c7e8 <feof@plt+0x68f48>  // b.tcont
  46c7b4:	ldr	x14, [x19, #32]
  46c7b8:	ldr	w13, [x9, #48]
  46c7bc:	mov	w15, #0x18                  	// #24
  46c7c0:	add	w16, w11, #0x1
  46c7c4:	madd	x12, x11, x15, x14
  46c7c8:	str	wzr, [x12, #4]
  46c7cc:	str	w16, [x19, #40]
  46c7d0:	cbz	x14, 46c7e8 <feof@plt+0x68f48>
  46c7d4:	madd	x11, x11, x15, x14
  46c7d8:	str	w15, [x12]
  46c7dc:	str	x10, [x11, #8]
  46c7e0:	str	w13, [x11, #16]
  46c7e4:	b	46c7ec <feof@plt+0x68f4c>
  46c7e8:	mov	x12, xzr
  46c7ec:	str	x12, [x19, #64]
  46c7f0:	cmp	w8, #0x0
  46c7f4:	mov	w8, #0x20                  	// #32
  46c7f8:	mov	w12, #0x10                  	// #16
  46c7fc:	add	x10, x9, #0x18
  46c800:	add	x11, x9, #0x8
  46c804:	csel	x8, x12, x8, eq  // eq = none
  46c808:	ldr	w13, [x19, #72]
  46c80c:	ldr	w8, [x9, x8]
  46c810:	ldp	w9, w12, [x19, #40]
  46c814:	csel	x10, x11, x10, eq  // eq = none
  46c818:	ldr	x10, [x10]
  46c81c:	add	w11, w13, w8
  46c820:	sxtw	x9, w9
  46c824:	cmp	w9, w12
  46c828:	str	w11, [x19, #72]
  46c82c:	b.ge	46c860 <feof@plt+0x68fc0>  // b.tcont
  46c830:	ldr	x11, [x19, #32]
  46c834:	mov	w12, #0x18                  	// #24
  46c838:	add	w13, w9, #0x1
  46c83c:	madd	x0, x9, x12, x11
  46c840:	str	wzr, [x0, #4]
  46c844:	str	w13, [x19, #40]
  46c848:	cbz	x11, 46c860 <feof@plt+0x68fc0>
  46c84c:	madd	x9, x9, x12, x11
  46c850:	str	w12, [x0]
  46c854:	str	x10, [x9, #8]
  46c858:	str	w8, [x9, #16]
  46c85c:	b	46c864 <feof@plt+0x68fc4>
  46c860:	mov	x0, xzr
  46c864:	ldr	x8, [x19, #24]
  46c868:	ldrb	w9, [x8]
  46c86c:	cmp	w9, #0x42
  46c870:	b.ne	46c924 <feof@plt+0x69084>  // b.any
  46c874:	ldr	x20, [x19, #64]
  46c878:	mov	w21, #0x18                  	// #24
  46c87c:	mov	w22, #0x4c                  	// #76
  46c880:	b	46c898 <feof@plt+0x68ff8>
  46c884:	mov	x0, xzr
  46c888:	ldr	x8, [x19, #24]
  46c88c:	ldrb	w9, [x8]
  46c890:	cmp	w9, #0x42
  46c894:	b.ne	46c8f4 <feof@plt+0x69054>  // b.any
  46c898:	mov	x23, x0
  46c89c:	add	x8, x8, #0x1
  46c8a0:	mov	x0, x19
  46c8a4:	str	x8, [x19, #24]
  46c8a8:	bl	46c41c <feof@plt+0x68b7c>
  46c8ac:	mov	x8, x0
  46c8b0:	mov	x0, xzr
  46c8b4:	cbz	x23, 46c888 <feof@plt+0x68fe8>
  46c8b8:	cbz	x8, 46c888 <feof@plt+0x68fe8>
  46c8bc:	ldp	w9, w10, [x19, #40]
  46c8c0:	sxtw	x9, w9
  46c8c4:	cmp	w9, w10
  46c8c8:	b.ge	46c884 <feof@plt+0x68fe4>  // b.tcont
  46c8cc:	ldr	x10, [x19, #32]
  46c8d0:	add	w11, w9, #0x1
  46c8d4:	madd	x0, x9, x21, x10
  46c8d8:	str	wzr, [x0, #4]
  46c8dc:	str	w11, [x19, #40]
  46c8e0:	cbz	x10, 46c884 <feof@plt+0x68fe4>
  46c8e4:	madd	x9, x9, x21, x10
  46c8e8:	str	w22, [x0]
  46c8ec:	stp	x23, x8, [x9, #8]
  46c8f0:	b	46c888 <feof@plt+0x68fe8>
  46c8f4:	str	x20, [x19, #64]
  46c8f8:	cbz	x0, 46c924 <feof@plt+0x69084>
  46c8fc:	ldp	w8, w9, [x19, #56]
  46c900:	sxtw	x8, w8
  46c904:	cmp	w8, w9
  46c908:	b.ge	46c920 <feof@plt+0x69080>  // b.tcont
  46c90c:	ldr	x9, [x19, #48]
  46c910:	add	w10, w8, #0x1
  46c914:	str	x0, [x9, x8, lsl #3]
  46c918:	str	w10, [x19, #56]
  46c91c:	b	46c924 <feof@plt+0x69084>
  46c920:	mov	x0, xzr
  46c924:	ldp	x20, x19, [sp, #48]
  46c928:	ldp	x22, x21, [sp, #32]
  46c92c:	ldr	x23, [sp, #16]
  46c930:	ldp	x29, x30, [sp], #64
  46c934:	ret
  46c938:	add	w8, w12, #0x1
  46c93c:	b	46c664 <feof@plt+0x68dc4>
  46c940:	stp	x29, x30, [sp, #-64]!
  46c944:	str	x28, [sp, #16]
  46c948:	stp	x22, x21, [sp, #32]
  46c94c:	stp	x20, x19, [sp, #48]
  46c950:	mov	x29, sp
  46c954:	sub	sp, sp, #0x190
  46c958:	mov	x19, sp
  46c95c:	add	x8, x19, #0x8
  46c960:	mov	w21, w0
  46c964:	movi	v0.2d, #0x0
  46c968:	add	x8, x8, #0x148
  46c96c:	add	x0, x19, #0x8
  46c970:	mov	x20, x1
  46c974:	str	xzr, [x19, #264]
  46c978:	strb	wzr, [x19, #272]
  46c97c:	stp	xzr, xzr, [x19, #296]
  46c980:	stp	x2, x3, [x19, #280]
  46c984:	stp	xzr, xzr, [x19, #312]
  46c988:	str	xzr, [x19, #328]
  46c98c:	stp	q0, q0, [x8]
  46c990:	str	xzr, [x8, #32]
  46c994:	bl	46f918 <feof@plt+0x6c078>
  46c998:	ldr	w8, [x19, #316]
  46c99c:	cmp	w8, #0x7ff
  46c9a0:	b.gt	46c9a8 <feof@plt+0x69108>
  46c9a4:	str	wzr, [x19, #316]
  46c9a8:	ldr	w8, [x19, #356]
  46c9ac:	ldr	w9, [x19, #372]
  46c9b0:	mov	x22, sp
  46c9b4:	str	xzr, [x19, #376]
  46c9b8:	cmp	w8, #0x1
  46c9bc:	mul	w9, w9, w8
  46c9c0:	csinc	w8, w8, wzr, gt
  46c9c4:	sub	x8, sp, w8, uxtw #4
  46c9c8:	str	w9, [x19, #372]
  46c9cc:	mov	sp, x8
  46c9d0:	mov	w9, w9
  46c9d4:	cmp	w9, #0x1
  46c9d8:	csinc	w9, w9, wzr, gt
  46c9dc:	sub	x9, sp, w9, uxtw #4
  46c9e0:	mov	sp, x9
  46c9e4:	str	x8, [x19, #344]
  46c9e8:	str	x9, [x19, #360]
  46c9ec:	cbz	x20, 46ca08 <feof@plt+0x69168>
  46c9f0:	ldr	w8, [x20, #4]
  46c9f4:	cmp	w8, #0x1
  46c9f8:	b.gt	46ca08 <feof@plt+0x69168>
  46c9fc:	ldr	w9, [x19, #316]
  46ca00:	cmp	w9, #0x401
  46ca04:	b.lt	46ca54 <feof@plt+0x691b4>  // b.tstop
  46ca08:	mov	w8, #0x1                   	// #1
  46ca0c:	str	w8, [x19, #312]
  46ca10:	mov	sp, x22
  46ca14:	ldr	x8, [x19, #264]
  46ca18:	add	x9, x19, #0x8
  46ca1c:	add	x0, x19, #0x8
  46ca20:	strb	wzr, [x9, x8]
  46ca24:	ldp	x8, x2, [x19, #280]
  46ca28:	ldr	x1, [x19, #264]
  46ca2c:	blr	x8
  46ca30:	ldr	w8, [x19, #312]
  46ca34:	cmp	w8, #0x0
  46ca38:	cset	w0, eq  // eq = none
  46ca3c:	mov	sp, x29
  46ca40:	ldp	x20, x19, [sp, #48]
  46ca44:	ldp	x22, x21, [sp, #32]
  46ca48:	ldr	x28, [sp, #16]
  46ca4c:	ldp	x29, x30, [sp], #64
  46ca50:	ret
  46ca54:	add	w8, w8, #0x1
  46ca58:	str	w8, [x20, #4]
  46ca5c:	ldr	x8, [x19, #336]
  46ca60:	add	w9, w9, #0x1
  46ca64:	sub	x10, x29, #0x10
  46ca68:	add	x0, x19, #0x8
  46ca6c:	mov	w1, w21
  46ca70:	mov	x2, x20
  46ca74:	str	w9, [x19, #316]
  46ca78:	stp	x20, x8, [x29, #-16]
  46ca7c:	str	x10, [x19, #336]
  46ca80:	bl	46f9e8 <feof@plt+0x6c148>
  46ca84:	ldur	x8, [x29, #-8]
  46ca88:	str	x8, [x19, #336]
  46ca8c:	ldr	w8, [x20, #4]
  46ca90:	sub	w8, w8, #0x1
  46ca94:	str	w8, [x20, #4]
  46ca98:	ldr	w8, [x19, #316]
  46ca9c:	sub	w8, w8, #0x1
  46caa0:	str	w8, [x19, #316]
  46caa4:	b	46ca10 <feof@plt+0x69170>
  46caa8:	sub	sp, sp, #0x50
  46caac:	stp	x22, x21, [sp, #48]
  46cab0:	stp	x20, x19, [sp, #64]
  46cab4:	mov	x19, x3
  46cab8:	mov	x20, x1
  46cabc:	mov	w21, w0
  46cac0:	stp	x29, x30, [sp, #32]
  46cac4:	add	x29, sp, #0x20
  46cac8:	stp	xzr, xzr, [sp]
  46cacc:	str	wzr, [sp, #24]
  46cad0:	str	xzr, [sp, #16]
  46cad4:	cbz	w2, 46cb18 <feof@plt+0x69278>
  46cad8:	sxtw	x8, w2
  46cadc:	mov	w9, #0x2                   	// #2
  46cae0:	mov	x22, x9
  46cae4:	cmp	x9, x8
  46cae8:	lsl	x9, x9, #1
  46caec:	b.cc	46cae0 <feof@plt+0x69240>  // b.lo, b.ul, b.last
  46caf0:	mov	x0, x22
  46caf4:	bl	4036b0 <malloc@plt>
  46caf8:	cbz	x0, 46cb08 <feof@plt+0x69268>
  46cafc:	str	x0, [sp]
  46cb00:	str	x22, [sp, #16]
  46cb04:	b	46cb18 <feof@plt+0x69278>
  46cb08:	mov	w8, #0x1                   	// #1
  46cb0c:	stp	xzr, xzr, [sp]
  46cb10:	str	xzr, [sp, #16]
  46cb14:	str	w8, [sp, #24]
  46cb18:	adrp	x2, 46c000 <feof@plt+0x68760>
  46cb1c:	add	x2, x2, #0xb74
  46cb20:	mov	x3, sp
  46cb24:	mov	w0, w21
  46cb28:	mov	x1, x20
  46cb2c:	bl	46c940 <feof@plt+0x690a0>
  46cb30:	cbz	w0, 46cb50 <feof@plt+0x692b0>
  46cb34:	ldr	w8, [sp, #24]
  46cb38:	ldr	x9, [sp, #16]
  46cb3c:	cmp	w8, #0x0
  46cb40:	csinc	x8, x9, xzr, eq  // eq = none
  46cb44:	str	x8, [x19]
  46cb48:	ldr	x0, [sp]
  46cb4c:	b	46cb60 <feof@plt+0x692c0>
  46cb50:	ldr	x0, [sp]
  46cb54:	bl	4031d0 <free@plt>
  46cb58:	mov	x0, xzr
  46cb5c:	str	xzr, [x19]
  46cb60:	ldp	x20, x19, [sp, #64]
  46cb64:	ldp	x22, x21, [sp, #48]
  46cb68:	ldp	x29, x30, [sp, #32]
  46cb6c:	add	sp, sp, #0x50
  46cb70:	ret
  46cb74:	stp	x29, x30, [sp, #-48]!
  46cb78:	stp	x22, x21, [sp, #16]
  46cb7c:	stp	x20, x19, [sp, #32]
  46cb80:	ldp	x8, x9, [x2, #8]
  46cb84:	mov	x19, x2
  46cb88:	mov	x20, x1
  46cb8c:	mov	x21, x0
  46cb90:	add	x8, x1, x8
  46cb94:	add	x8, x8, #0x1
  46cb98:	cmp	x8, x9
  46cb9c:	mov	x29, sp
  46cba0:	b.ls	46cbe0 <feof@plt+0x69340>  // b.plast
  46cba4:	ldr	w10, [x19, #24]
  46cba8:	cbnz	w10, 46cbe0 <feof@plt+0x69340>
  46cbac:	cmp	x9, #0x0
  46cbb0:	mov	w10, #0x2                   	// #2
  46cbb4:	csel	x9, x10, x9, eq  // eq = none
  46cbb8:	mov	x22, x9
  46cbbc:	cmp	x9, x8
  46cbc0:	lsl	x9, x9, #1
  46cbc4:	b.cc	46cbb8 <feof@plt+0x69318>  // b.lo, b.ul, b.last
  46cbc8:	ldr	x0, [x19]
  46cbcc:	mov	x1, x22
  46cbd0:	bl	403260 <realloc@plt>
  46cbd4:	cbz	x0, 46cc24 <feof@plt+0x69384>
  46cbd8:	str	x0, [x19]
  46cbdc:	str	x22, [x19, #16]
  46cbe0:	ldr	w8, [x19, #24]
  46cbe4:	cbnz	w8, 46cc14 <feof@plt+0x69374>
  46cbe8:	ldp	x8, x9, [x19]
  46cbec:	mov	x1, x21
  46cbf0:	mov	x2, x20
  46cbf4:	add	x0, x8, x9
  46cbf8:	bl	402fc0 <memcpy@plt>
  46cbfc:	ldp	x9, x8, [x19]
  46cc00:	add	x8, x8, x20
  46cc04:	strb	wzr, [x9, x8]
  46cc08:	ldr	x8, [x19, #8]
  46cc0c:	add	x8, x8, x20
  46cc10:	str	x8, [x19, #8]
  46cc14:	ldp	x20, x19, [sp, #32]
  46cc18:	ldp	x22, x21, [sp, #16]
  46cc1c:	ldp	x29, x30, [sp], #48
  46cc20:	ret
  46cc24:	ldr	x0, [x19]
  46cc28:	bl	4031d0 <free@plt>
  46cc2c:	mov	w8, #0x1                   	// #1
  46cc30:	stp	xzr, xzr, [x19]
  46cc34:	str	xzr, [x19, #16]
  46cc38:	str	w8, [x19, #24]
  46cc3c:	ldr	w8, [x19, #24]
  46cc40:	cbnz	w8, 46cc14 <feof@plt+0x69374>
  46cc44:	b	46cbe8 <feof@plt+0x69348>
  46cc48:	add	x8, x0, x2
  46cc4c:	lsl	w9, w2, #1
  46cc50:	str	w1, [x3, #16]
  46cc54:	str	x0, [x3, #24]
  46cc58:	stp	wzr, w2, [x3, #56]
  46cc5c:	stp	xzr, xzr, [x3, #72]
  46cc60:	stp	x0, x8, [x3]
  46cc64:	stp	wzr, w9, [x3, #40]
  46cc68:	str	xzr, [x3, #64]
  46cc6c:	ret
  46cc70:	sub	sp, sp, #0x30
  46cc74:	adrp	x2, 46c000 <feof@plt+0x68760>
  46cc78:	add	x2, x2, #0xb74
  46cc7c:	mov	x3, sp
  46cc80:	stp	x29, x30, [sp, #32]
  46cc84:	add	x29, sp, #0x20
  46cc88:	stp	xzr, xzr, [sp]
  46cc8c:	str	wzr, [sp, #24]
  46cc90:	str	xzr, [sp, #16]
  46cc94:	bl	46ccc0 <feof@plt+0x69420>
  46cc98:	ldr	x8, [sp]
  46cc9c:	cbnz	w0, 46ccac <feof@plt+0x6940c>
  46cca0:	mov	x0, x8
  46cca4:	bl	4031d0 <free@plt>
  46cca8:	mov	x8, xzr
  46ccac:	ldp	x29, x30, [sp, #32]
  46ccb0:	mov	x0, x8
  46ccb4:	add	sp, sp, #0x30
  46ccb8:	ret
  46ccbc:	b	46ccc0 <feof@plt+0x69420>
  46ccc0:	stp	x29, x30, [sp, #-96]!
  46ccc4:	str	x27, [sp, #16]
  46ccc8:	stp	x26, x25, [sp, #32]
  46cccc:	stp	x24, x23, [sp, #48]
  46ccd0:	stp	x22, x21, [sp, #64]
  46ccd4:	stp	x20, x19, [sp, #80]
  46ccd8:	mov	x29, sp
  46ccdc:	sub	sp, sp, #0x60
  46cce0:	ldrb	w8, [x0]
  46cce4:	mov	x19, x3
  46cce8:	mov	x20, x2
  46ccec:	mov	x22, x0
  46ccf0:	cmp	w8, #0x5f
  46ccf4:	mov	w21, w1
  46ccf8:	b.ne	46cd10 <feof@plt+0x69470>  // b.any
  46ccfc:	ldrb	w8, [x22, #1]
  46cd00:	cmp	w8, #0x5a
  46cd04:	b.ne	46cd10 <feof@plt+0x69470>  // b.any
  46cd08:	mov	w24, #0x1                   	// #1
  46cd0c:	b	46cd34 <feof@plt+0x69494>
  46cd10:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46cd14:	add	x1, x1, #0xb6d
  46cd18:	mov	w2, #0x8                   	// #8
  46cd1c:	mov	x0, x22
  46cd20:	bl	403450 <strncmp@plt>
  46cd24:	cbz	w0, 46cdf0 <feof@plt+0x69550>
  46cd28:	mov	w24, wzr
  46cd2c:	mov	w1, wzr
  46cd30:	tbz	w21, #4, 46cf30 <feof@plt+0x69690>
  46cd34:	mov	x0, x22
  46cd38:	bl	4030b0 <strlen@plt>
  46cd3c:	add	x8, x22, x0
  46cd40:	lsl	w27, w0, #1
  46cd44:	stur	w21, [x29, #-72]
  46cd48:	stur	x22, [x29, #-64]
  46cd4c:	stp	wzr, w0, [x29, #-32]
  46cd50:	stp	xzr, xzr, [x29, #-16]
  46cd54:	stp	x22, x8, [x29, #-88]
  46cd58:	stp	wzr, w27, [x29, #-48]
  46cd5c:	stur	xzr, [x29, #-24]
  46cd60:	tbnz	w21, #18, 46cd70 <feof@plt+0x694d0>
  46cd64:	cmp	w27, #0x800
  46cd68:	mov	w1, wzr
  46cd6c:	b.hi	46cf30 <feof@plt+0x69690>  // b.pmore
  46cd70:	mov	w8, #0x18                  	// #24
  46cd74:	umull	x8, w27, w8
  46cd78:	add	x8, x8, #0xf
  46cd7c:	and	x8, x8, #0x3ffffffff0
  46cd80:	mov	x9, sp
  46cd84:	mov	x26, sp
  46cd88:	sub	x23, x9, x8
  46cd8c:	mov	sp, x23
  46cd90:	and	x8, x0, #0xffffffff
  46cd94:	lsl	x8, x8, #3
  46cd98:	add	x8, x8, #0xf
  46cd9c:	mov	x9, sp
  46cda0:	and	x8, x8, #0xffffffff0
  46cda4:	sub	x8, x9, x8
  46cda8:	mov	sp, x8
  46cdac:	sub	w9, w24, #0x2
  46cdb0:	cmp	w9, #0x2
  46cdb4:	stur	x23, [x29, #-56]
  46cdb8:	stur	x8, [x29, #-40]
  46cdbc:	b.cc	46ce48 <feof@plt+0x695a8>  // b.lo, b.ul, b.last
  46cdc0:	sub	x0, x29, #0x58
  46cdc4:	cmp	w24, #0x1
  46cdc8:	b.eq	46cec0 <feof@plt+0x69620>  // b.none
  46cdcc:	bl	46aef4 <feof@plt+0x67654>
  46cdd0:	mov	x22, x0
  46cdd4:	tbz	w21, #0, 46cf08 <feof@plt+0x69668>
  46cdd8:	mov	w1, wzr
  46cddc:	cbz	x22, 46cf2c <feof@plt+0x6968c>
  46cde0:	ldur	x8, [x29, #-64]
  46cde4:	ldrb	w8, [x8]
  46cde8:	cbz	w8, 46cf0c <feof@plt+0x6966c>
  46cdec:	b	46cf2c <feof@plt+0x6968c>
  46cdf0:	ldrb	w8, [x22, #8]
  46cdf4:	sub	w8, w8, #0x24
  46cdf8:	cmp	w8, #0x3b
  46cdfc:	b.hi	46cd28 <feof@plt+0x69488>  // b.pmore
  46ce00:	mov	w9, #0x1                   	// #1
  46ce04:	lsl	x8, x9, x8
  46ce08:	mov	x9, #0x401                 	// #1025
  46ce0c:	movk	x9, #0x800, lsl #48
  46ce10:	tst	x8, x9
  46ce14:	b.eq	46cd28 <feof@plt+0x69488>  // b.none
  46ce18:	ldrb	w8, [x22, #9]
  46ce1c:	cmp	w8, #0x49
  46ce20:	b.eq	46ce2c <feof@plt+0x6958c>  // b.none
  46ce24:	cmp	w8, #0x44
  46ce28:	b.ne	46cd28 <feof@plt+0x69488>  // b.any
  46ce2c:	ldrb	w9, [x22, #10]
  46ce30:	cmp	w9, #0x5f
  46ce34:	b.ne	46cd28 <feof@plt+0x69488>  // b.any
  46ce38:	cmp	w8, #0x49
  46ce3c:	mov	w8, #0x2                   	// #2
  46ce40:	cinc	w24, w8, ne  // ne = any
  46ce44:	b	46cd34 <feof@plt+0x69494>
  46ce48:	add	x25, x22, #0xb
  46ce4c:	stur	x25, [x29, #-64]
  46ce50:	ldrb	w8, [x22, #11]
  46ce54:	cmp	w24, #0x2
  46ce58:	mov	w9, #0x44                  	// #68
  46ce5c:	cinc	w24, w9, ne  // ne = any
  46ce60:	cmp	w8, #0x5f
  46ce64:	b.ne	46ce90 <feof@plt+0x695f0>  // b.any
  46ce68:	ldrb	w8, [x22, #12]
  46ce6c:	cmp	w8, #0x5a
  46ce70:	b.ne	46ce90 <feof@plt+0x695f0>  // b.any
  46ce74:	add	x8, x22, #0xd
  46ce78:	sub	x0, x29, #0x58
  46ce7c:	mov	w1, wzr
  46ce80:	stur	x8, [x29, #-64]
  46ce84:	bl	469d58 <feof@plt+0x664b8>
  46ce88:	mov	x23, x0
  46ce8c:	b	46ced8 <feof@plt+0x69638>
  46ce90:	mov	x0, x25
  46ce94:	bl	4030b0 <strlen@plt>
  46ce98:	cmp	w27, #0x1
  46ce9c:	b.lt	46ced4 <feof@plt+0x69634>  // b.tstop
  46cea0:	mov	w8, #0x1                   	// #1
  46cea4:	cmp	w0, #0x1
  46cea8:	str	wzr, [x23, #4]
  46ceac:	stur	w8, [x29, #-48]
  46ceb0:	b.lt	46ced4 <feof@plt+0x69634>  // b.tstop
  46ceb4:	stp	xzr, x25, [x23]
  46ceb8:	str	w0, [x23, #16]
  46cebc:	b	46ced8 <feof@plt+0x69638>
  46cec0:	mov	w1, #0x1                   	// #1
  46cec4:	bl	469b9c <feof@plt+0x662fc>
  46cec8:	mov	x22, x0
  46cecc:	tbz	w21, #0, 46cf08 <feof@plt+0x69668>
  46ced0:	b	46cdd8 <feof@plt+0x69538>
  46ced4:	mov	x23, xzr
  46ced8:	sub	x0, x29, #0x58
  46cedc:	mov	w1, w24
  46cee0:	mov	x2, x23
  46cee4:	mov	x3, xzr
  46cee8:	bl	46c390 <feof@plt+0x68af0>
  46ceec:	ldur	x23, [x29, #-64]
  46cef0:	mov	x22, x0
  46cef4:	mov	x0, x23
  46cef8:	bl	4030b0 <strlen@plt>
  46cefc:	add	x8, x23, x0
  46cf00:	stur	x8, [x29, #-64]
  46cf04:	tbnz	w21, #0, 46cdd8 <feof@plt+0x69538>
  46cf08:	cbz	x22, 46cf28 <feof@plt+0x69688>
  46cf0c:	mov	w0, w21
  46cf10:	mov	x1, x22
  46cf14:	mov	x2, x20
  46cf18:	mov	x3, x19
  46cf1c:	bl	46c940 <feof@plt+0x690a0>
  46cf20:	mov	w1, w0
  46cf24:	b	46cf2c <feof@plt+0x6968c>
  46cf28:	mov	w1, wzr
  46cf2c:	mov	sp, x26
  46cf30:	mov	w0, w1
  46cf34:	mov	sp, x29
  46cf38:	ldp	x20, x19, [sp, #80]
  46cf3c:	ldp	x22, x21, [sp, #64]
  46cf40:	ldp	x24, x23, [sp, #48]
  46cf44:	ldp	x26, x25, [sp, #32]
  46cf48:	ldr	x27, [sp, #16]
  46cf4c:	ldp	x29, x30, [sp], #96
  46cf50:	ret
  46cf54:	sub	sp, sp, #0x30
  46cf58:	adrp	x2, 46c000 <feof@plt+0x68760>
  46cf5c:	add	x2, x2, #0xb74
  46cf60:	mov	x3, sp
  46cf64:	mov	w1, #0x25                  	// #37
  46cf68:	stp	x29, x30, [sp, #32]
  46cf6c:	add	x29, sp, #0x20
  46cf70:	stp	xzr, xzr, [sp]
  46cf74:	str	wzr, [sp, #24]
  46cf78:	str	xzr, [sp, #16]
  46cf7c:	bl	46ccc0 <feof@plt+0x69420>
  46cf80:	ldr	x8, [sp]
  46cf84:	cbnz	w0, 46cf94 <feof@plt+0x696f4>
  46cf88:	mov	x0, x8
  46cf8c:	bl	4031d0 <free@plt>
  46cf90:	mov	x8, xzr
  46cf94:	ldp	x29, x30, [sp, #32]
  46cf98:	mov	x0, x8
  46cf9c:	add	sp, sp, #0x30
  46cfa0:	ret
  46cfa4:	mov	x3, x2
  46cfa8:	mov	x2, x1
  46cfac:	mov	w1, #0x25                  	// #37
  46cfb0:	b	46ccc0 <feof@plt+0x69420>
  46cfb4:	sub	sp, sp, #0x20
  46cfb8:	stp	x29, x30, [sp, #16]
  46cfbc:	add	x29, sp, #0x10
  46cfc0:	sub	x1, x29, #0x4
  46cfc4:	add	x2, sp, #0x8
  46cfc8:	bl	46cfe4 <feof@plt+0x69744>
  46cfcc:	ldur	w8, [x29, #-4]
  46cfd0:	ldp	x29, x30, [sp, #16]
  46cfd4:	cmp	w0, #0x0
  46cfd8:	csel	w0, wzr, w8, eq  // eq = none
  46cfdc:	add	sp, sp, #0x20
  46cfe0:	ret
  46cfe4:	stp	x29, x30, [sp, #-48]!
  46cfe8:	stp	x22, x21, [sp, #16]
  46cfec:	stp	x20, x19, [sp, #32]
  46cff0:	mov	x29, sp
  46cff4:	sub	sp, sp, #0x60
  46cff8:	mov	x19, x2
  46cffc:	mov	x20, x1
  46d000:	mov	x21, x0
  46d004:	str	wzr, [x1]
  46d008:	str	wzr, [x2]
  46d00c:	bl	4030b0 <strlen@plt>
  46d010:	add	x8, x21, x0
  46d014:	stp	x21, x8, [x29, #-88]
  46d018:	mov	w8, #0x4000                	// #16384
  46d01c:	stur	w8, [x29, #-72]
  46d020:	lsl	w8, w0, #1
  46d024:	mov	x9, sp
  46d028:	mov	w10, #0x18                  	// #24
  46d02c:	mov	x22, sp
  46d030:	stp	wzr, w8, [x29, #-48]
  46d034:	umsubl	x8, w8, w10, x9
  46d038:	stur	x21, [x29, #-64]
  46d03c:	stp	wzr, w0, [x29, #-32]
  46d040:	stp	xzr, xzr, [x29, #-16]
  46d044:	stur	xzr, [x29, #-24]
  46d048:	mov	sp, x8
  46d04c:	and	x9, x0, #0xffffffff
  46d050:	lsl	x9, x9, #3
  46d054:	add	x9, x9, #0xf
  46d058:	mov	x10, sp
  46d05c:	and	x9, x9, #0xffffffff0
  46d060:	sub	x9, x10, x9
  46d064:	mov	sp, x9
  46d068:	sub	x0, x29, #0x58
  46d06c:	mov	w1, #0x1                   	// #1
  46d070:	stur	x8, [x29, #-56]
  46d074:	stur	x9, [x29, #-40]
  46d078:	bl	469b9c <feof@plt+0x662fc>
  46d07c:	cbz	x0, 46d0c8 <feof@plt+0x69828>
  46d080:	adrp	x9, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46d084:	add	x9, x9, #0xa08
  46d088:	b	46d098 <feof@plt+0x697f8>
  46d08c:	add	x8, x0, #0x8
  46d090:	ldr	x0, [x8]
  46d094:	cbz	x0, 46d0c8 <feof@plt+0x69828>
  46d098:	ldr	w8, [x0]
  46d09c:	sub	w10, w8, #0x1
  46d0a0:	cmp	w10, #0x7
  46d0a4:	mov	w8, wzr
  46d0a8:	b.hi	46d0cc <feof@plt+0x6982c>  // b.pmore
  46d0ac:	adr	x11, 46d08c <feof@plt+0x697ec>
  46d0b0:	ldrb	w12, [x9, x10]
  46d0b4:	add	x11, x11, x12, lsl #2
  46d0b8:	br	x11
  46d0bc:	add	x8, x0, #0x10
  46d0c0:	ldr	x0, [x8]
  46d0c4:	cbnz	x0, 46d098 <feof@plt+0x697f8>
  46d0c8:	mov	w8, wzr
  46d0cc:	mov	sp, x22
  46d0d0:	mov	w0, w8
  46d0d4:	mov	sp, x29
  46d0d8:	ldp	x20, x19, [sp, #32]
  46d0dc:	ldp	x22, x21, [sp, #16]
  46d0e0:	ldp	x29, x30, [sp], #48
  46d0e4:	ret
  46d0e8:	ldr	w8, [x0, #8]
  46d0ec:	str	w8, [x20]
  46d0f0:	mov	w8, #0x1                   	// #1
  46d0f4:	b	46d0cc <feof@plt+0x6982c>
  46d0f8:	ldr	w8, [x0, #8]
  46d0fc:	str	w8, [x19]
  46d100:	mov	w8, #0x1                   	// #1
  46d104:	b	46d0cc <feof@plt+0x6982c>
  46d108:	sub	sp, sp, #0x20
  46d10c:	stp	x29, x30, [sp, #16]
  46d110:	add	x29, sp, #0x10
  46d114:	sub	x1, x29, #0x4
  46d118:	add	x2, sp, #0x8
  46d11c:	bl	46cfe4 <feof@plt+0x69744>
  46d120:	ldr	w8, [sp, #8]
  46d124:	ldp	x29, x30, [sp, #16]
  46d128:	cmp	w0, #0x0
  46d12c:	csel	w0, wzr, w8, eq  // eq = none
  46d130:	add	sp, sp, #0x20
  46d134:	ret
  46d138:	sub	sp, sp, #0x40
  46d13c:	stp	x29, x30, [sp, #16]
  46d140:	stp	x22, x21, [sp, #32]
  46d144:	stp	x20, x19, [sp, #48]
  46d148:	mov	x22, x0
  46d14c:	ldr	x9, [x22, #24]!
  46d150:	mov	x19, x0
  46d154:	add	x29, sp, #0x10
  46d158:	ldrb	w8, [x9]
  46d15c:	sub	w8, w8, #0x4e
  46d160:	cmp	w8, #0xc
  46d164:	b.hi	46d1f8 <feof@plt+0x69958>  // b.pmore
  46d168:	adrp	x10, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46d16c:	add	x10, x10, #0xa10
  46d170:	adr	x11, 46d180 <feof@plt+0x698e0>
  46d174:	ldrb	w12, [x10, x8]
  46d178:	add	x11, x11, x12, lsl #2
  46d17c:	br	x11
  46d180:	add	x8, x9, #0x1
  46d184:	add	x1, sp, #0x8
  46d188:	mov	w2, #0x1                   	// #1
  46d18c:	mov	x0, x19
  46d190:	str	x8, [x19, #24]
  46d194:	bl	46bf84 <feof@plt+0x686e4>
  46d198:	cbz	x0, 46d8cc <feof@plt+0x6a02c>
  46d19c:	ldr	x8, [x22]
  46d1a0:	mov	x20, x0
  46d1a4:	ldrb	w9, [x8]
  46d1a8:	cmp	w9, #0x52
  46d1ac:	b.eq	46d1b8 <feof@plt+0x69918>  // b.none
  46d1b0:	cmp	w9, #0x4f
  46d1b4:	b.ne	46d41c <feof@plt+0x69b7c>  // b.any
  46d1b8:	ldr	w10, [x19, #72]
  46d1bc:	cmp	w9, #0x52
  46d1c0:	mov	w9, #0x2                   	// #2
  46d1c4:	mov	w11, #0x1f                  	// #31
  46d1c8:	cinc	w9, w9, ne  // ne = any
  46d1cc:	add	x8, x8, #0x1
  46d1d0:	cinc	w1, w11, ne  // ne = any
  46d1d4:	add	w9, w10, w9
  46d1d8:	mov	x0, x19
  46d1dc:	mov	x2, xzr
  46d1e0:	mov	x3, xzr
  46d1e4:	str	w9, [x19, #72]
  46d1e8:	str	x8, [x19, #24]
  46d1ec:	bl	46c390 <feof@plt+0x68af0>
  46d1f0:	mov	x21, x0
  46d1f4:	b	46d420 <feof@plt+0x69b80>
  46d1f8:	mov	x0, x19
  46d1fc:	bl	46db34 <feof@plt+0x6a294>
  46d200:	ldr	x8, [x19, #24]
  46d204:	mov	x21, x0
  46d208:	ldrb	w8, [x8]
  46d20c:	cmp	w8, #0x49
  46d210:	b.ne	46d8d0 <feof@plt+0x6a030>  // b.any
  46d214:	cbz	x21, 46d8d0 <feof@plt+0x6a030>
  46d218:	ldp	w8, w9, [x19, #56]
  46d21c:	sxtw	x8, w8
  46d220:	cmp	w8, w9
  46d224:	b.ge	46d8cc <feof@plt+0x6a02c>  // b.tcont
  46d228:	ldr	x9, [x19, #48]
  46d22c:	str	x21, [x9, x8, lsl #3]
  46d230:	ldr	x9, [x19, #24]
  46d234:	add	w8, w8, #0x1
  46d238:	str	w8, [x19, #56]
  46d23c:	ldrb	w8, [x9]
  46d240:	sub	w8, w8, #0x49
  46d244:	cmp	w8, #0x1
  46d248:	b.hi	46d8cc <feof@plt+0x6a02c>  // b.pmore
  46d24c:	add	x8, x9, #0x1
  46d250:	mov	x0, x19
  46d254:	str	x8, [x19, #24]
  46d258:	bl	46e820 <feof@plt+0x6af80>
  46d25c:	cbz	x0, 46d8cc <feof@plt+0x6a02c>
  46d260:	ldp	w8, w9, [x19, #40]
  46d264:	sxtw	x8, w8
  46d268:	cmp	w8, w9
  46d26c:	b.ge	46d8cc <feof@plt+0x6a02c>  // b.tcont
  46d270:	ldr	x9, [x19, #32]
  46d274:	mov	w10, #0x18                  	// #24
  46d278:	add	w11, w8, #0x1
  46d27c:	madd	x10, x8, x10, x9
  46d280:	str	wzr, [x10, #4]
  46d284:	str	w11, [x19, #40]
  46d288:	cbz	x9, 46d8cc <feof@plt+0x6a02c>
  46d28c:	mov	w12, #0x18                  	// #24
  46d290:	mov	w11, #0x4                   	// #4
  46d294:	madd	x8, x8, x12, x9
  46d298:	str	w11, [x10]
  46d29c:	stp	x21, x0, [x8, #8]
  46d2a0:	mov	x21, x10
  46d2a4:	b	46d8d0 <feof@plt+0x6a030>
  46d2a8:	ldrb	w8, [x9, #1]
  46d2ac:	cmp	w8, #0x74
  46d2b0:	b.ne	46d3a8 <feof@plt+0x69b08>  // b.any
  46d2b4:	ldp	w8, w10, [x19, #40]
  46d2b8:	add	x9, x9, #0x2
  46d2bc:	sxtw	x8, w8
  46d2c0:	str	x9, [x19, #24]
  46d2c4:	cmp	w8, w10
  46d2c8:	b.ge	46d3c0 <feof@plt+0x69b20>  // b.tcont
  46d2cc:	ldr	x9, [x19, #32]
  46d2d0:	mov	w10, #0x18                  	// #24
  46d2d4:	add	w11, w8, #0x1
  46d2d8:	madd	x21, x8, x10, x9
  46d2dc:	str	wzr, [x21, #4]
  46d2e0:	str	w11, [x19, #40]
  46d2e4:	cbz	x9, 46d3c0 <feof@plt+0x69b20>
  46d2e8:	mov	w10, #0x18                  	// #24
  46d2ec:	adrp	x11, 48f000 <_obstack_memory_used@@Base+0x132fc>
  46d2f0:	add	x11, x11, #0x91d
  46d2f4:	mov	w12, #0x3                   	// #3
  46d2f8:	madd	x8, x8, x10, x9
  46d2fc:	str	xzr, [x21]
  46d300:	str	x11, [x8, #8]
  46d304:	str	w12, [x8, #16]
  46d308:	b	46d3c4 <feof@plt+0x69b24>
  46d30c:	mov	x0, x19
  46d310:	ldp	x20, x19, [sp, #48]
  46d314:	ldp	x22, x21, [sp, #32]
  46d318:	ldp	x29, x30, [sp, #16]
  46d31c:	add	sp, sp, #0x40
  46d320:	b	46db34 <feof@plt+0x6a294>
  46d324:	add	x8, x9, #0x1
  46d328:	mov	x0, x19
  46d32c:	mov	w1, wzr
  46d330:	str	x8, [x19, #24]
  46d334:	bl	469d58 <feof@plt+0x664b8>
  46d338:	cbz	x0, 46d8cc <feof@plt+0x6a02c>
  46d33c:	ldr	x11, [x22]
  46d340:	ldrb	w8, [x11]
  46d344:	cmp	w8, #0x45
  46d348:	b.ne	46d8cc <feof@plt+0x6a02c>  // b.any
  46d34c:	add	x8, x11, #0x1
  46d350:	str	x8, [x22]
  46d354:	ldrb	w8, [x11, #1]
  46d358:	mov	x20, x0
  46d35c:	cmp	w8, #0x64
  46d360:	b.eq	46d51c <feof@plt+0x69c7c>  // b.none
  46d364:	cmp	w8, #0x73
  46d368:	b.ne	46d548 <feof@plt+0x69ca8>  // b.any
  46d36c:	add	x8, x11, #0x2
  46d370:	str	x8, [x22]
  46d374:	ldrb	w8, [x11, #2]
  46d378:	cmp	w8, #0x5f
  46d37c:	b.ne	46d6e0 <feof@plt+0x69e40>  // b.any
  46d380:	add	x10, x11, #0x3
  46d384:	str	x10, [x22]
  46d388:	ldrb	w9, [x11, #3]
  46d38c:	cmp	w9, #0x5f
  46d390:	b.ne	46d61c <feof@plt+0x69d7c>  // b.any
  46d394:	add	x10, x11, #0x4
  46d398:	str	x10, [x22]
  46d39c:	ldrb	w9, [x11, #4]
  46d3a0:	mov	w8, #0x2                   	// #2
  46d3a4:	b	46d620 <feof@plt+0x69d80>
  46d3a8:	mov	x0, x19
  46d3ac:	mov	w1, wzr
  46d3b0:	bl	46c614 <feof@plt+0x68d74>
  46d3b4:	mov	x20, x0
  46d3b8:	mov	w8, #0x1                   	// #1
  46d3bc:	b	46d474 <feof@plt+0x69bd4>
  46d3c0:	mov	x21, xzr
  46d3c4:	mov	x0, x19
  46d3c8:	bl	46db34 <feof@plt+0x6a294>
  46d3cc:	mov	x20, xzr
  46d3d0:	cbz	x21, 46d464 <feof@plt+0x69bc4>
  46d3d4:	cbz	x0, 46d464 <feof@plt+0x69bc4>
  46d3d8:	ldp	w8, w9, [x19, #40]
  46d3dc:	sxtw	x8, w8
  46d3e0:	cmp	w8, w9
  46d3e4:	b.ge	46d460 <feof@plt+0x69bc0>  // b.tcont
  46d3e8:	ldr	x9, [x19, #32]
  46d3ec:	mov	w10, #0x18                  	// #24
  46d3f0:	add	w11, w8, #0x1
  46d3f4:	madd	x20, x8, x10, x9
  46d3f8:	str	wzr, [x20, #4]
  46d3fc:	str	w11, [x19, #40]
  46d400:	cbz	x9, 46d460 <feof@plt+0x69bc0>
  46d404:	mov	w11, #0x18                  	// #24
  46d408:	mov	w10, #0x1                   	// #1
  46d40c:	madd	x8, x8, x11, x9
  46d410:	str	w10, [x20]
  46d414:	stp	x21, x0, [x8, #8]
  46d418:	b	46d464 <feof@plt+0x69bc4>
  46d41c:	mov	x21, xzr
  46d420:	mov	x0, x19
  46d424:	bl	46e240 <feof@plt+0x6a9a0>
  46d428:	str	x0, [x20]
  46d42c:	cbz	x0, 46d8cc <feof@plt+0x6a02c>
  46d430:	cbz	x21, 46d440 <feof@plt+0x69ba0>
  46d434:	ldr	x8, [sp, #8]
  46d438:	str	x8, [x21, #8]
  46d43c:	str	x21, [sp, #8]
  46d440:	ldr	x8, [x22]
  46d444:	ldrb	w9, [x8]
  46d448:	cmp	w9, #0x45
  46d44c:	b.ne	46d8cc <feof@plt+0x6a02c>  // b.any
  46d450:	add	x8, x8, #0x1
  46d454:	str	x8, [x22]
  46d458:	ldr	x21, [sp, #8]
  46d45c:	b	46d8d0 <feof@plt+0x6a030>
  46d460:	mov	x20, xzr
  46d464:	ldr	w9, [x19, #72]
  46d468:	mov	w8, wzr
  46d46c:	add	w9, w9, #0x3
  46d470:	str	w9, [x19, #72]
  46d474:	ldr	x9, [x22]
  46d478:	ldrb	w10, [x9]
  46d47c:	cmp	w10, #0x49
  46d480:	b.ne	46d4d8 <feof@plt+0x69c38>  // b.any
  46d484:	cbz	w8, 46d4e0 <feof@plt+0x69c40>
  46d488:	add	x8, x9, #0x1
  46d48c:	mov	x0, x19
  46d490:	str	x8, [x19, #24]
  46d494:	bl	46e820 <feof@plt+0x6af80>
  46d498:	mov	x21, xzr
  46d49c:	cbz	x20, 46d8d0 <feof@plt+0x6a030>
  46d4a0:	cbz	x0, 46d8d0 <feof@plt+0x6a030>
  46d4a4:	ldp	w8, w9, [x19, #40]
  46d4a8:	sxtw	x8, w8
  46d4ac:	cmp	w8, w9
  46d4b0:	b.ge	46d8cc <feof@plt+0x6a02c>  // b.tcont
  46d4b4:	ldr	x9, [x19, #32]
  46d4b8:	mov	w10, #0x18                  	// #24
  46d4bc:	add	w11, w8, #0x1
  46d4c0:	madd	x21, x8, x10, x9
  46d4c4:	str	wzr, [x21, #4]
  46d4c8:	str	w11, [x19, #40]
  46d4cc:	cbz	x9, 46d8cc <feof@plt+0x6a02c>
  46d4d0:	mov	w10, #0x4                   	// #4
  46d4d4:	b	46d8b8 <feof@plt+0x6a018>
  46d4d8:	mov	x21, x20
  46d4dc:	b	46d8d0 <feof@plt+0x6a030>
  46d4e0:	cbz	x20, 46d8cc <feof@plt+0x6a02c>
  46d4e4:	ldp	w8, w9, [x19, #56]
  46d4e8:	sxtw	x8, w8
  46d4ec:	cmp	w8, w9
  46d4f0:	b.ge	46d8cc <feof@plt+0x6a02c>  // b.tcont
  46d4f4:	ldr	x9, [x19, #48]
  46d4f8:	str	x20, [x9, x8, lsl #3]
  46d4fc:	ldr	x9, [x19, #24]
  46d500:	add	w8, w8, #0x1
  46d504:	str	w8, [x19, #56]
  46d508:	ldrb	w8, [x9]
  46d50c:	sub	w8, w8, #0x49
  46d510:	cmp	w8, #0x1
  46d514:	b.ls	46d488 <feof@plt+0x69be8>  // b.plast
  46d518:	b	46d8cc <feof@plt+0x6a02c>
  46d51c:	add	x9, x11, #0x2
  46d520:	str	x9, [x22]
  46d524:	ldrb	w8, [x11, #2]
  46d528:	cmp	w8, #0x6e
  46d52c:	b.eq	46d8cc <feof@plt+0x6a02c>  // b.none
  46d530:	cmp	w8, #0x5f
  46d534:	b.ne	46d5a4 <feof@plt+0x69d04>  // b.any
  46d538:	mov	w21, wzr
  46d53c:	add	x8, x11, #0x3
  46d540:	str	x8, [x22]
  46d544:	b	46d54c <feof@plt+0x69cac>
  46d548:	mov	w21, #0xffffffff            	// #-1
  46d54c:	mov	x0, x19
  46d550:	bl	46d138 <feof@plt+0x69898>
  46d554:	cbz	x0, 46d810 <feof@plt+0x69f70>
  46d558:	ldr	w8, [x0]
  46d55c:	cmp	w8, #0x46
  46d560:	b.eq	46d810 <feof@plt+0x69f70>  // b.none
  46d564:	cmp	w8, #0x48
  46d568:	b.eq	46d810 <feof@plt+0x69f70>  // b.none
  46d56c:	ldr	x8, [x22]
  46d570:	ldrb	w9, [x8]
  46d574:	cmp	w9, #0x5f
  46d578:	b.ne	46d810 <feof@plt+0x69f70>  // b.any
  46d57c:	add	x10, x8, #0x1
  46d580:	str	x10, [x22]
  46d584:	ldrb	w9, [x8, #1]
  46d588:	cmp	w9, #0x5f
  46d58c:	b.ne	46d74c <feof@plt+0x69eac>  // b.any
  46d590:	add	x10, x8, #0x2
  46d594:	str	x10, [x22]
  46d598:	ldrb	w9, [x8, #2]
  46d59c:	mov	w8, #0x2                   	// #2
  46d5a0:	b	46d750 <feof@plt+0x69eb0>
  46d5a4:	sub	w10, w8, #0x30
  46d5a8:	cmp	w10, #0x9
  46d5ac:	b.hi	46d730 <feof@plt+0x69e90>  // b.pmore
  46d5b0:	mov	w12, #0x2f                  	// #47
  46d5b4:	add	x9, x11, #0x3
  46d5b8:	mov	w11, #0x6667                	// #26215
  46d5bc:	mov	w10, wzr
  46d5c0:	movk	w12, #0x8000, lsl #16
  46d5c4:	movk	w11, #0x6666, lsl #16
  46d5c8:	mov	w13, #0xa                   	// #10
  46d5cc:	and	w14, w8, #0xff
  46d5d0:	sub	w8, w12, w14
  46d5d4:	smull	x8, w8, w11
  46d5d8:	lsr	x15, x8, #63
  46d5dc:	asr	x8, x8, #34
  46d5e0:	add	w8, w8, w15
  46d5e4:	cmp	w10, w8
  46d5e8:	b.gt	46d8cc <feof@plt+0x6a02c>
  46d5ec:	str	x9, [x22]
  46d5f0:	ldrb	w8, [x9], #1
  46d5f4:	madd	w10, w10, w13, w14
  46d5f8:	sub	w10, w10, #0x30
  46d5fc:	sub	w14, w8, #0x30
  46d600:	cmp	w14, #0xa
  46d604:	b.cc	46d5cc <feof@plt+0x69d2c>  // b.lo, b.ul, b.last
  46d608:	cmn	w10, #0x1
  46d60c:	b.lt	46d8cc <feof@plt+0x6a02c>  // b.tstop
  46d610:	add	w21, w10, #0x1
  46d614:	sub	x9, x9, #0x1
  46d618:	b	46d734 <feof@plt+0x69e94>
  46d61c:	mov	w8, #0x1                   	// #1
  46d620:	cmp	w9, #0x6e
  46d624:	b.ne	46d640 <feof@plt+0x69da0>  // b.any
  46d628:	add	x12, x10, #0x1
  46d62c:	str	x12, [x22]
  46d630:	ldrb	w9, [x10, #1]
  46d634:	mov	w11, #0x1                   	// #1
  46d638:	mov	x10, x12
  46d63c:	b	46d644 <feof@plt+0x69da4>
  46d640:	mov	w11, wzr
  46d644:	sub	w12, w9, #0x30
  46d648:	cmp	w12, #0x9
  46d64c:	b.hi	46d6b0 <feof@plt+0x69e10>  // b.pmore
  46d650:	mov	w13, #0x2f                  	// #47
  46d654:	mov	w14, #0x6667                	// #26215
  46d658:	mov	w12, wzr
  46d65c:	movk	w13, #0x8000, lsl #16
  46d660:	add	x10, x10, #0x1
  46d664:	movk	w14, #0x6666, lsl #16
  46d668:	mov	w15, #0xa                   	// #10
  46d66c:	and	w16, w9, #0xff
  46d670:	sub	w9, w13, w16
  46d674:	smull	x9, w9, w14
  46d678:	lsr	x17, x9, #63
  46d67c:	asr	x9, x9, #34
  46d680:	add	w9, w9, w17
  46d684:	cmp	w12, w9
  46d688:	b.gt	46d8cc <feof@plt+0x6a02c>
  46d68c:	str	x10, [x22]
  46d690:	ldrb	w9, [x10], #1
  46d694:	madd	w12, w12, w15, w16
  46d698:	sub	w12, w12, #0x30
  46d69c:	sub	w16, w9, #0x30
  46d6a0:	cmp	w16, #0xa
  46d6a4:	b.cc	46d66c <feof@plt+0x69dcc>  // b.lo, b.ul, b.last
  46d6a8:	sub	x10, x10, #0x1
  46d6ac:	b	46d6b4 <feof@plt+0x69e14>
  46d6b0:	mov	w12, wzr
  46d6b4:	cmp	w11, #0x0
  46d6b8:	cneg	w11, w12, ne  // ne = any
  46d6bc:	tbnz	w11, #31, 46d8cc <feof@plt+0x6a02c>
  46d6c0:	cmp	w8, #0x2
  46d6c4:	b.cc	46d6e0 <feof@plt+0x69e40>  // b.lo, b.ul, b.last
  46d6c8:	cmp	w11, #0xa
  46d6cc:	b.lt	46d6e0 <feof@plt+0x69e40>  // b.tstop
  46d6d0:	cmp	w9, #0x5f
  46d6d4:	b.ne	46d8cc <feof@plt+0x6a02c>  // b.any
  46d6d8:	add	x8, x10, #0x1
  46d6dc:	str	x8, [x22]
  46d6e0:	ldp	w8, w9, [x19, #40]
  46d6e4:	sxtw	x8, w8
  46d6e8:	cmp	w8, w9
  46d6ec:	b.ge	46d860 <feof@plt+0x69fc0>  // b.tcont
  46d6f0:	ldr	x9, [x19, #32]
  46d6f4:	mov	w10, #0x18                  	// #24
  46d6f8:	add	w11, w8, #0x1
  46d6fc:	madd	x0, x8, x10, x9
  46d700:	str	wzr, [x0, #4]
  46d704:	str	w11, [x19, #40]
  46d708:	cbz	x9, 46d860 <feof@plt+0x69fc0>
  46d70c:	mov	w10, #0x18                  	// #24
  46d710:	adrp	x11, 4d3000 <_obstack_memory_used@@Base+0x572fc>
  46d714:	add	x11, x11, #0x93a
  46d718:	mov	w12, #0xe                   	// #14
  46d71c:	madd	x8, x8, x10, x9
  46d720:	str	xzr, [x0]
  46d724:	str	x11, [x8, #8]
  46d728:	str	w12, [x8, #16]
  46d72c:	b	46d864 <feof@plt+0x69fc4>
  46d730:	mov	w21, #0x1                   	// #1
  46d734:	cmp	w8, #0x5f
  46d738:	b.ne	46d8cc <feof@plt+0x6a02c>  // b.any
  46d73c:	add	x8, x9, #0x1
  46d740:	str	x8, [x22]
  46d744:	tbz	w21, #31, 46d54c <feof@plt+0x69cac>
  46d748:	b	46d8cc <feof@plt+0x6a02c>
  46d74c:	mov	w8, #0x1                   	// #1
  46d750:	cmp	w9, #0x6e
  46d754:	b.ne	46d770 <feof@plt+0x69ed0>  // b.any
  46d758:	add	x12, x10, #0x1
  46d75c:	str	x12, [x22]
  46d760:	ldrb	w9, [x10, #1]
  46d764:	mov	w11, #0x1                   	// #1
  46d768:	mov	x10, x12
  46d76c:	b	46d774 <feof@plt+0x69ed4>
  46d770:	mov	w11, wzr
  46d774:	sub	w12, w9, #0x30
  46d778:	cmp	w12, #0x9
  46d77c:	b.hi	46d7e0 <feof@plt+0x69f40>  // b.pmore
  46d780:	mov	w13, #0x2f                  	// #47
  46d784:	mov	w14, #0x6667                	// #26215
  46d788:	mov	w12, wzr
  46d78c:	movk	w13, #0x8000, lsl #16
  46d790:	add	x10, x10, #0x1
  46d794:	movk	w14, #0x6666, lsl #16
  46d798:	mov	w15, #0xa                   	// #10
  46d79c:	and	w16, w9, #0xff
  46d7a0:	sub	w9, w13, w16
  46d7a4:	smull	x9, w9, w14
  46d7a8:	lsr	x17, x9, #63
  46d7ac:	asr	x9, x9, #34
  46d7b0:	add	w9, w9, w17
  46d7b4:	cmp	w12, w9
  46d7b8:	b.gt	46d8cc <feof@plt+0x6a02c>
  46d7bc:	str	x10, [x22]
  46d7c0:	ldrb	w9, [x10], #1
  46d7c4:	madd	w12, w12, w15, w16
  46d7c8:	sub	w12, w12, #0x30
  46d7cc:	sub	w16, w9, #0x30
  46d7d0:	cmp	w16, #0xa
  46d7d4:	b.cc	46d79c <feof@plt+0x69efc>  // b.lo, b.ul, b.last
  46d7d8:	sub	x10, x10, #0x1
  46d7dc:	b	46d7e4 <feof@plt+0x69f44>
  46d7e0:	mov	w12, wzr
  46d7e4:	cmp	w11, #0x0
  46d7e8:	cneg	w11, w12, ne  // ne = any
  46d7ec:	tbnz	w11, #31, 46d8cc <feof@plt+0x6a02c>
  46d7f0:	cmp	w8, #0x2
  46d7f4:	b.cc	46d810 <feof@plt+0x69f70>  // b.lo, b.ul, b.last
  46d7f8:	cmp	w11, #0xa
  46d7fc:	b.lt	46d810 <feof@plt+0x69f70>  // b.tstop
  46d800:	cmp	w9, #0x5f
  46d804:	b.ne	46d8cc <feof@plt+0x6a02c>  // b.any
  46d808:	add	x8, x10, #0x1
  46d80c:	str	x8, [x22]
  46d810:	tbnz	w21, #31, 46d864 <feof@plt+0x69fc4>
  46d814:	ldp	w8, w9, [x19, #40]
  46d818:	sxtw	x8, w8
  46d81c:	cmp	w8, w9
  46d820:	b.ge	46d860 <feof@plt+0x69fc0>  // b.tcont
  46d824:	ldr	x9, [x19, #32]
  46d828:	mov	w10, #0x18                  	// #24
  46d82c:	add	w11, w8, #0x1
  46d830:	madd	x10, x8, x10, x9
  46d834:	str	wzr, [x10, #4]
  46d838:	str	w11, [x19, #40]
  46d83c:	cbz	x9, 46d860 <feof@plt+0x69fc0>
  46d840:	mov	w12, #0x18                  	// #24
  46d844:	mov	w11, #0x47                  	// #71
  46d848:	madd	x8, x8, x12, x9
  46d84c:	str	w11, [x10]
  46d850:	str	x0, [x8, #8]
  46d854:	mov	x0, x10
  46d858:	str	w21, [x8, #16]
  46d85c:	b	46d864 <feof@plt+0x69fc4>
  46d860:	mov	x0, xzr
  46d864:	ldr	w8, [x20]
  46d868:	cmp	w8, #0x3
  46d86c:	b.ne	46d884 <feof@plt+0x69fe4>  // b.any
  46d870:	ldr	x8, [x20, #16]
  46d874:	ldr	w9, [x8]
  46d878:	cmp	w9, #0x29
  46d87c:	b.ne	46d884 <feof@plt+0x69fe4>  // b.any
  46d880:	str	xzr, [x8, #8]
  46d884:	cbz	x0, 46d8cc <feof@plt+0x6a02c>
  46d888:	ldp	w8, w9, [x19, #40]
  46d88c:	sxtw	x8, w8
  46d890:	cmp	w8, w9
  46d894:	b.ge	46d8cc <feof@plt+0x6a02c>  // b.tcont
  46d898:	ldr	x9, [x19, #32]
  46d89c:	mov	w10, #0x18                  	// #24
  46d8a0:	add	w11, w8, #0x1
  46d8a4:	madd	x21, x8, x10, x9
  46d8a8:	str	wzr, [x21, #4]
  46d8ac:	str	w11, [x19, #40]
  46d8b0:	cbz	x9, 46d8cc <feof@plt+0x6a02c>
  46d8b4:	mov	w10, #0x2                   	// #2
  46d8b8:	mov	w11, #0x18                  	// #24
  46d8bc:	madd	x8, x8, x11, x9
  46d8c0:	str	w10, [x21]
  46d8c4:	stp	x20, x0, [x8, #8]
  46d8c8:	b	46d8d0 <feof@plt+0x6a030>
  46d8cc:	mov	x21, xzr
  46d8d0:	mov	x0, x21
  46d8d4:	ldp	x20, x19, [sp, #48]
  46d8d8:	ldp	x22, x21, [sp, #32]
  46d8dc:	ldp	x29, x30, [sp, #16]
  46d8e0:	add	sp, sp, #0x40
  46d8e4:	ret
  46d8e8:	stp	x29, x30, [sp, #-32]!
  46d8ec:	stp	x20, x19, [sp, #16]
  46d8f0:	ldr	x8, [x0, #24]
  46d8f4:	mov	x19, x0
  46d8f8:	mov	x29, sp
  46d8fc:	ldrb	w9, [x8]
  46d900:	sub	w10, w9, #0x49
  46d904:	cmp	w10, #0x2
  46d908:	b.cc	46d958 <feof@plt+0x6a0b8>  // b.lo, b.ul, b.last
  46d90c:	cmp	w9, #0x4c
  46d910:	b.eq	46d970 <feof@plt+0x6a0d0>  // b.none
  46d914:	cmp	w9, #0x58
  46d918:	b.ne	46d980 <feof@plt+0x6a0e0>  // b.any
  46d91c:	ldr	w20, [x19, #76]
  46d920:	add	x8, x8, #0x1
  46d924:	str	x8, [x19, #24]
  46d928:	mov	w8, #0x1                   	// #1
  46d92c:	mov	x0, x19
  46d930:	str	w8, [x19, #76]
  46d934:	bl	46e93c <feof@plt+0x6b09c>
  46d938:	ldr	x8, [x19, #24]
  46d93c:	str	w20, [x19, #76]
  46d940:	ldrb	w9, [x8]
  46d944:	cmp	w9, #0x45
  46d948:	b.ne	46d990 <feof@plt+0x6a0f0>  // b.any
  46d94c:	add	x8, x8, #0x1
  46d950:	str	x8, [x19, #24]
  46d954:	b	46d994 <feof@plt+0x6a0f4>
  46d958:	add	x8, x8, #0x1
  46d95c:	str	x8, [x19, #24]
  46d960:	mov	x0, x19
  46d964:	ldp	x20, x19, [sp, #16]
  46d968:	ldp	x29, x30, [sp], #32
  46d96c:	b	46e820 <feof@plt+0x6af80>
  46d970:	mov	x0, x19
  46d974:	ldp	x20, x19, [sp, #16]
  46d978:	ldp	x29, x30, [sp], #32
  46d97c:	b	46d9a0 <feof@plt+0x6a100>
  46d980:	mov	x0, x19
  46d984:	ldp	x20, x19, [sp, #16]
  46d988:	ldp	x29, x30, [sp], #32
  46d98c:	b	46aef4 <feof@plt+0x67654>
  46d990:	mov	x0, xzr
  46d994:	ldp	x20, x19, [sp, #16]
  46d998:	ldp	x29, x30, [sp], #32
  46d99c:	ret
  46d9a0:	stp	x29, x30, [sp, #-32]!
  46d9a4:	ldr	x8, [x0, #24]
  46d9a8:	str	x19, [sp, #16]
  46d9ac:	mov	x29, sp
  46d9b0:	ldrb	w9, [x8]
  46d9b4:	cmp	w9, #0x4c
  46d9b8:	b.ne	46db24 <feof@plt+0x6a284>  // b.any
  46d9bc:	add	x9, x8, #0x1
  46d9c0:	str	x9, [x0, #24]
  46d9c4:	ldrb	w9, [x8, #1]
  46d9c8:	mov	x19, x0
  46d9cc:	cmp	w9, #0x5a
  46d9d0:	b.eq	46d9f8 <feof@plt+0x6a158>  // b.none
  46d9d4:	cmp	w9, #0x5f
  46d9d8:	b.ne	46da18 <feof@plt+0x6a178>  // b.any
  46d9dc:	add	x9, x8, #0x2
  46d9e0:	str	x9, [x19, #24]
  46d9e4:	ldrb	w9, [x8, #2]
  46d9e8:	cmp	w9, #0x5a
  46d9ec:	b.ne	46da70 <feof@plt+0x6a1d0>  // b.any
  46d9f0:	mov	w9, #0x2                   	// #2
  46d9f4:	b	46d9fc <feof@plt+0x6a15c>
  46d9f8:	mov	w9, #0x1                   	// #1
  46d9fc:	add	x8, x8, x9
  46da00:	add	x8, x8, #0x1
  46da04:	mov	x0, x19
  46da08:	mov	w1, wzr
  46da0c:	str	x8, [x19, #24]
  46da10:	bl	469d58 <feof@plt+0x664b8>
  46da14:	b	46db08 <feof@plt+0x6a268>
  46da18:	mov	x0, x19
  46da1c:	bl	46aef4 <feof@plt+0x67654>
  46da20:	cbz	x0, 46db28 <feof@plt+0x6a288>
  46da24:	ldr	w8, [x0]
  46da28:	mov	x2, x0
  46da2c:	cmp	w8, #0x27
  46da30:	b.ne	46da50 <feof@plt+0x6a1b0>  // b.any
  46da34:	ldr	x8, [x2, #8]
  46da38:	ldr	w9, [x8, #28]
  46da3c:	cbz	w9, 46da50 <feof@plt+0x6a1b0>
  46da40:	ldr	w8, [x8, #8]
  46da44:	ldr	w9, [x19, #72]
  46da48:	sub	w8, w9, w8
  46da4c:	str	w8, [x19, #72]
  46da50:	ldr	x8, [x19, #24]
  46da54:	ldrb	w9, [x8]
  46da58:	cmp	w9, #0x6e
  46da5c:	b.ne	46da78 <feof@plt+0x6a1d8>  // b.any
  46da60:	add	x8, x8, #0x1
  46da64:	mov	w1, #0x3e                  	// #62
  46da68:	str	x8, [x19, #24]
  46da6c:	b	46da7c <feof@plt+0x6a1dc>
  46da70:	mov	x0, xzr
  46da74:	b	46db08 <feof@plt+0x6a268>
  46da78:	mov	w1, #0x3d                  	// #61
  46da7c:	mov	x10, x8
  46da80:	ldrb	w9, [x10]
  46da84:	cbz	w9, 46db24 <feof@plt+0x6a284>
  46da88:	cmp	w9, #0x45
  46da8c:	b.eq	46daa4 <feof@plt+0x6a204>  // b.none
  46da90:	add	x10, x10, #0x1
  46da94:	str	x10, [x19, #24]
  46da98:	ldrb	w9, [x10]
  46da9c:	cbnz	w9, 46da88 <feof@plt+0x6a1e8>
  46daa0:	b	46db24 <feof@plt+0x6a284>
  46daa4:	ldp	w9, w11, [x19, #40]
  46daa8:	sxtw	x9, w9
  46daac:	cmp	w9, w11
  46dab0:	b.ge	46dafc <feof@plt+0x6a25c>  // b.tcont
  46dab4:	ldr	x11, [x19, #32]
  46dab8:	sub	w10, w10, w8
  46dabc:	mov	w12, #0x18                  	// #24
  46dac0:	mov	x3, xzr
  46dac4:	add	w13, w9, #0x1
  46dac8:	cmp	w10, #0x1
  46dacc:	madd	x12, x9, x12, x11
  46dad0:	str	wzr, [x12, #4]
  46dad4:	str	w13, [x19, #40]
  46dad8:	b.lt	46db00 <feof@plt+0x6a260>  // b.tstop
  46dadc:	cbz	x11, 46db00 <feof@plt+0x6a260>
  46dae0:	mov	w13, #0x18                  	// #24
  46dae4:	madd	x9, x9, x13, x11
  46dae8:	mov	x3, x12
  46daec:	str	xzr, [x12]
  46daf0:	str	x8, [x9, #8]
  46daf4:	str	w10, [x9, #16]
  46daf8:	b	46db00 <feof@plt+0x6a260>
  46dafc:	mov	x3, xzr
  46db00:	mov	x0, x19
  46db04:	bl	46c390 <feof@plt+0x68af0>
  46db08:	ldr	x8, [x19, #24]
  46db0c:	ldrb	w9, [x8]
  46db10:	cmp	w9, #0x45
  46db14:	b.ne	46db24 <feof@plt+0x6a284>  // b.any
  46db18:	add	x8, x8, #0x1
  46db1c:	str	x8, [x19, #24]
  46db20:	b	46db28 <feof@plt+0x6a288>
  46db24:	mov	x0, xzr
  46db28:	ldr	x19, [sp, #16]
  46db2c:	ldp	x29, x30, [sp], #32
  46db30:	ret
  46db34:	stp	x29, x30, [sp, #-80]!
  46db38:	str	x25, [sp, #16]
  46db3c:	stp	x24, x23, [sp, #32]
  46db40:	stp	x22, x21, [sp, #48]
  46db44:	stp	x20, x19, [sp, #64]
  46db48:	mov	x21, x0
  46db4c:	ldr	x9, [x21, #24]!
  46db50:	mov	x19, x0
  46db54:	mov	x29, sp
  46db58:	ldrb	w8, [x9]
  46db5c:	sub	w10, w8, #0x30
  46db60:	cmp	w10, #0x9
  46db64:	b.hi	46db78 <feof@plt+0x6a2d8>  // b.pmore
  46db68:	mov	x0, x19
  46db6c:	bl	46c41c <feof@plt+0x68b7c>
  46db70:	mov	x20, x0
  46db74:	b	46e194 <feof@plt+0x6a8f4>
  46db78:	sub	w10, w8, #0x61
  46db7c:	cmp	w10, #0x19
  46db80:	b.hi	46dc40 <feof@plt+0x6a3a0>  // b.pmore
  46db84:	cmp	w8, #0x6f
  46db88:	b.ne	46dba0 <feof@plt+0x6a300>  // b.any
  46db8c:	ldrb	w8, [x9, #1]
  46db90:	cmp	w8, #0x6e
  46db94:	b.ne	46dba0 <feof@plt+0x6a300>  // b.any
  46db98:	add	x8, x9, #0x2
  46db9c:	str	x8, [x21]
  46dba0:	mov	x0, x19
  46dba4:	bl	46e4b8 <feof@plt+0x6ac18>
  46dba8:	mov	x20, x0
  46dbac:	cbz	x0, 46e194 <feof@plt+0x6a8f4>
  46dbb0:	ldr	w8, [x20]
  46dbb4:	cmp	w8, #0x32
  46dbb8:	b.ne	46e194 <feof@plt+0x6a8f4>  // b.any
  46dbbc:	ldr	x8, [x20, #8]
  46dbc0:	ldr	w9, [x19, #72]
  46dbc4:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46dbc8:	add	x1, x1, #0xa04
  46dbcc:	ldr	w8, [x8, #16]
  46dbd0:	add	w8, w8, w9
  46dbd4:	add	w8, w8, #0x7
  46dbd8:	str	w8, [x19, #72]
  46dbdc:	ldr	x8, [x20, #8]
  46dbe0:	ldr	x0, [x8]
  46dbe4:	bl	403640 <strcmp@plt>
  46dbe8:	cbnz	w0, 46e194 <feof@plt+0x6a8f4>
  46dbec:	mov	x0, x19
  46dbf0:	bl	46c41c <feof@plt+0x68b7c>
  46dbf4:	cbz	x0, 46e190 <feof@plt+0x6a8f0>
  46dbf8:	ldp	w8, w9, [x19, #40]
  46dbfc:	sxtw	x8, w8
  46dc00:	cmp	w8, w9
  46dc04:	b.ge	46e190 <feof@plt+0x6a8f0>  // b.tcont
  46dc08:	ldr	x9, [x19, #32]
  46dc0c:	mov	w10, #0x18                  	// #24
  46dc10:	add	w11, w8, #0x1
  46dc14:	madd	x10, x8, x10, x9
  46dc18:	str	wzr, [x10, #4]
  46dc1c:	str	w11, [x19, #40]
  46dc20:	cbz	x9, 46e190 <feof@plt+0x6a8f0>
  46dc24:	mov	w12, #0x18                  	// #24
  46dc28:	mov	w11, #0x37                  	// #55
  46dc2c:	madd	x8, x8, x12, x9
  46dc30:	str	w11, [x10]
  46dc34:	stp	x20, x0, [x8, #8]
  46dc38:	mov	x20, x10
  46dc3c:	b	46e194 <feof@plt+0x6a8f4>
  46dc40:	sub	w10, w8, #0x43
  46dc44:	cmp	w10, #0x2
  46dc48:	b.cc	46dd18 <feof@plt+0x6a478>  // b.lo, b.ul, b.last
  46dc4c:	cmp	w8, #0x4c
  46dc50:	b.eq	46dd78 <feof@plt+0x6a4d8>  // b.none
  46dc54:	cmp	w8, #0x55
  46dc58:	b.ne	46e05c <feof@plt+0x6a7bc>  // b.any
  46dc5c:	mov	x8, x9
  46dc60:	ldrb	w10, [x8, #1]!
  46dc64:	cmp	w10, #0x74
  46dc68:	b.eq	46de60 <feof@plt+0x6a5c0>  // b.none
  46dc6c:	cmp	w10, #0x6c
  46dc70:	b.ne	46e05c <feof@plt+0x6a7bc>  // b.any
  46dc74:	str	x8, [x21]
  46dc78:	ldrb	w8, [x8]
  46dc7c:	cmp	w8, #0x6c
  46dc80:	b.ne	46e190 <feof@plt+0x6a8f0>  // b.any
  46dc84:	add	x8, x9, #0x2
  46dc88:	mov	x0, x19
  46dc8c:	str	x8, [x19, #24]
  46dc90:	bl	46e704 <feof@plt+0x6ae64>
  46dc94:	cbz	x0, 46e190 <feof@plt+0x6a8f0>
  46dc98:	ldr	x10, [x21]
  46dc9c:	ldrb	w8, [x10]
  46dca0:	cmp	w8, #0x45
  46dca4:	b.ne	46e190 <feof@plt+0x6a8f0>  // b.any
  46dca8:	add	x8, x10, #0x1
  46dcac:	str	x8, [x21]
  46dcb0:	ldrb	w8, [x10, #1]
  46dcb4:	cmp	w8, #0x6e
  46dcb8:	b.eq	46e190 <feof@plt+0x6a8f0>  // b.none
  46dcbc:	cmp	w8, #0x5f
  46dcc0:	b.ne	46e100 <feof@plt+0x6a860>  // b.any
  46dcc4:	mov	w9, wzr
  46dcc8:	add	x8, x10, #0x2
  46dccc:	str	x8, [x21]
  46dcd0:	ldp	w8, w10, [x19, #40]
  46dcd4:	sxtw	x8, w8
  46dcd8:	cmp	w8, w10
  46dcdc:	b.ge	46e190 <feof@plt+0x6a8f0>  // b.tcont
  46dce0:	ldr	x10, [x19, #32]
  46dce4:	mov	w11, #0x18                  	// #24
  46dce8:	add	w12, w8, #0x1
  46dcec:	madd	x20, x8, x11, x10
  46dcf0:	str	wzr, [x20, #4]
  46dcf4:	str	w12, [x19, #40]
  46dcf8:	cbz	x10, 46e190 <feof@plt+0x6a8f0>
  46dcfc:	mov	w12, #0x18                  	// #24
  46dd00:	mov	w11, #0x46                  	// #70
  46dd04:	madd	x8, x8, x12, x10
  46dd08:	str	w11, [x20]
  46dd0c:	str	x0, [x8, #8]
  46dd10:	str	w9, [x8, #16]
  46dd14:	b	46dedc <feof@plt+0x6a63c>
  46dd18:	ldr	x8, [x19, #64]
  46dd1c:	cbz	x8, 46dd40 <feof@plt+0x6a4a0>
  46dd20:	ldr	w10, [x8]
  46dd24:	cmp	w10, #0x18
  46dd28:	b.eq	46dd30 <feof@plt+0x6a490>  // b.none
  46dd2c:	cbnz	w10, 46dd40 <feof@plt+0x6a4a0>
  46dd30:	ldr	w10, [x8, #16]
  46dd34:	ldr	w11, [x19, #72]
  46dd38:	add	w10, w11, w10
  46dd3c:	str	w10, [x19, #72]
  46dd40:	ldrb	w10, [x9]
  46dd44:	cmp	w10, #0x44
  46dd48:	b.eq	46ddc8 <feof@plt+0x6a528>  // b.none
  46dd4c:	cmp	w10, #0x43
  46dd50:	b.ne	46e190 <feof@plt+0x6a8f0>  // b.any
  46dd54:	mov	x12, x9
  46dd58:	ldrb	w10, [x12, #1]!
  46dd5c:	cmp	w10, #0x49
  46dd60:	b.ne	46df00 <feof@plt+0x6a660>  // b.any
  46dd64:	str	x12, [x21]
  46dd68:	ldrb	w10, [x9, #2]
  46dd6c:	mov	w11, #0x1                   	// #1
  46dd70:	mov	x9, x12
  46dd74:	b	46df04 <feof@plt+0x6a664>
  46dd78:	add	x8, x9, #0x1
  46dd7c:	mov	x0, x19
  46dd80:	str	x8, [x19, #24]
  46dd84:	bl	46c41c <feof@plt+0x68b7c>
  46dd88:	mov	x20, x0
  46dd8c:	cbz	x0, 46e224 <feof@plt+0x6a984>
  46dd90:	ldr	x8, [x21]
  46dd94:	ldrb	w9, [x8]
  46dd98:	cmp	w9, #0x5f
  46dd9c:	b.ne	46e194 <feof@plt+0x6a8f4>  // b.any
  46dda0:	add	x10, x8, #0x1
  46dda4:	str	x10, [x21]
  46dda8:	ldrb	w9, [x8, #1]
  46ddac:	cmp	w9, #0x5f
  46ddb0:	b.ne	46df94 <feof@plt+0x6a6f4>  // b.any
  46ddb4:	add	x10, x8, #0x2
  46ddb8:	str	x10, [x21]
  46ddbc:	ldrb	w9, [x8, #2]
  46ddc0:	mov	w8, #0x2                   	// #2
  46ddc4:	b	46df98 <feof@plt+0x6a6f8>
  46ddc8:	ldrb	w10, [x9, #1]
  46ddcc:	sub	w11, w10, #0x30
  46ddd0:	cmp	w11, #0x5
  46ddd4:	b.hi	46e190 <feof@plt+0x6a8f0>  // b.pmore
  46ddd8:	mov	w10, #0x37                  	// #55
  46dddc:	lsr	w10, w10, w11
  46dde0:	tbz	w10, #0, 46e190 <feof@plt+0x6a8f0>
  46dde4:	ldp	w10, w12, [x19, #40]
  46dde8:	add	x9, x9, #0x2
  46ddec:	sxtw	x10, w10
  46ddf0:	mov	x20, xzr
  46ddf4:	cmp	w10, w12
  46ddf8:	str	x9, [x19, #24]
  46ddfc:	b.ge	46e194 <feof@plt+0x6a8f4>  // b.tcont
  46de00:	adrp	x12, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46de04:	sxtb	x11, w11
  46de08:	add	x12, x12, #0x980
  46de0c:	ldr	x9, [x19, #32]
  46de10:	ldr	w11, [x12, x11, lsl #2]
  46de14:	mov	w13, #0x18                  	// #24
  46de18:	add	w14, w10, #0x1
  46de1c:	madd	x12, x10, x13, x9
  46de20:	sub	w13, w11, #0x1
  46de24:	cmp	w13, #0x4
  46de28:	str	wzr, [x12, #4]
  46de2c:	str	w14, [x19, #40]
  46de30:	b.hi	46e194 <feof@plt+0x6a8f4>  // b.pmore
  46de34:	cbz	x8, 46e194 <feof@plt+0x6a8f4>
  46de38:	cbz	x9, 46e194 <feof@plt+0x6a8f4>
  46de3c:	adrp	x13, 47d000 <_obstack_memory_used@@Base+0x12fc>
  46de40:	ldr	d0, [x13, #1648]
  46de44:	mov	w13, #0x18                  	// #24
  46de48:	madd	x9, x10, x13, x9
  46de4c:	mov	x20, x12
  46de50:	str	d0, [x12]
  46de54:	str	w11, [x9, #8]
  46de58:	str	x8, [x9, #16]
  46de5c:	b	46e194 <feof@plt+0x6a8f4>
  46de60:	str	x8, [x21]
  46de64:	ldrb	w8, [x8]
  46de68:	cmp	w8, #0x74
  46de6c:	b.ne	46e190 <feof@plt+0x6a8f0>  // b.any
  46de70:	add	x11, x9, #0x2
  46de74:	str	x11, [x21]
  46de78:	ldrb	w8, [x9, #2]
  46de7c:	cmp	w8, #0x6e
  46de80:	b.eq	46e190 <feof@plt+0x6a8f0>  // b.none
  46de84:	cmp	w8, #0x5f
  46de88:	b.ne	46e064 <feof@plt+0x6a7c4>  // b.any
  46de8c:	mov	w10, wzr
  46de90:	add	x8, x9, #0x3
  46de94:	str	x8, [x21]
  46de98:	ldp	w8, w9, [x19, #40]
  46de9c:	sxtw	x8, w8
  46dea0:	cmp	w8, w9
  46dea4:	b.ge	46e190 <feof@plt+0x6a8f0>  // b.tcont
  46dea8:	ldr	x9, [x19, #32]
  46deac:	mov	w11, #0x18                  	// #24
  46deb0:	add	w12, w8, #0x1
  46deb4:	madd	x20, x8, x11, x9
  46deb8:	str	wzr, [x20, #4]
  46debc:	str	w12, [x19, #40]
  46dec0:	cbz	x9, 46e190 <feof@plt+0x6a8f0>
  46dec4:	mov	w12, #0x18                  	// #24
  46dec8:	mov	w11, #0x48                  	// #72
  46decc:	mov	w10, w10
  46ded0:	madd	x8, x8, x12, x9
  46ded4:	str	w11, [x20]
  46ded8:	str	x10, [x8, #8]
  46dedc:	ldp	w8, w9, [x19, #56]
  46dee0:	sxtw	x8, w8
  46dee4:	cmp	w8, w9
  46dee8:	b.ge	46e190 <feof@plt+0x6a8f0>  // b.tcont
  46deec:	ldr	x9, [x19, #48]
  46def0:	add	w10, w8, #0x1
  46def4:	str	x20, [x9, x8, lsl #3]
  46def8:	str	w10, [x19, #56]
  46defc:	b	46e194 <feof@plt+0x6a8f4>
  46df00:	mov	w11, wzr
  46df04:	sub	w22, w10, #0x31
  46df08:	cmp	w22, #0x4
  46df0c:	b.hi	46e190 <feof@plt+0x6a8f0>  // b.pmore
  46df10:	add	x9, x9, #0x2
  46df14:	str	x9, [x21]
  46df18:	cbz	w11, 46df28 <feof@plt+0x6a688>
  46df1c:	mov	x0, x19
  46df20:	bl	46aef4 <feof@plt+0x67654>
  46df24:	ldr	x8, [x19, #64]
  46df28:	ldp	w9, w10, [x19, #40]
  46df2c:	sxtw	x9, w9
  46df30:	cmp	w9, w10
  46df34:	b.ge	46e190 <feof@plt+0x6a8f0>  // b.tcont
  46df38:	ldr	x10, [x19, #32]
  46df3c:	mov	w11, #0x18                  	// #24
  46df40:	and	w13, w22, #0xff
  46df44:	mov	x20, xzr
  46df48:	add	w12, w9, #0x1
  46df4c:	cmp	w13, #0x4
  46df50:	madd	x11, x9, x11, x10
  46df54:	str	wzr, [x11, #4]
  46df58:	str	w12, [x19, #40]
  46df5c:	b.hi	46e194 <feof@plt+0x6a8f4>  // b.pmore
  46df60:	cbz	x8, 46e194 <feof@plt+0x6a8f4>
  46df64:	cbz	x10, 46e194 <feof@plt+0x6a8f4>
  46df68:	adrp	x13, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46df6c:	ldr	d0, [x13, #1688]
  46df70:	and	w12, w22, #0xff
  46df74:	mov	w13, #0x18                  	// #24
  46df78:	add	w12, w12, #0x1
  46df7c:	madd	x9, x9, x13, x10
  46df80:	str	d0, [x11]
  46df84:	str	w12, [x9, #8]
  46df88:	str	x8, [x9, #16]
  46df8c:	mov	x20, x11
  46df90:	b	46e194 <feof@plt+0x6a8f4>
  46df94:	mov	w8, #0x1                   	// #1
  46df98:	cmp	w9, #0x6e
  46df9c:	b.ne	46dfb8 <feof@plt+0x6a718>  // b.any
  46dfa0:	add	x12, x10, #0x1
  46dfa4:	str	x12, [x21]
  46dfa8:	ldrb	w9, [x10, #1]
  46dfac:	mov	w11, #0x1                   	// #1
  46dfb0:	mov	x10, x12
  46dfb4:	b	46dfbc <feof@plt+0x6a71c>
  46dfb8:	mov	w11, wzr
  46dfbc:	sub	w12, w9, #0x30
  46dfc0:	cmp	w12, #0x9
  46dfc4:	b.hi	46e028 <feof@plt+0x6a788>  // b.pmore
  46dfc8:	mov	w13, #0x2f                  	// #47
  46dfcc:	mov	w14, #0x6667                	// #26215
  46dfd0:	mov	w12, wzr
  46dfd4:	movk	w13, #0x8000, lsl #16
  46dfd8:	add	x10, x10, #0x1
  46dfdc:	movk	w14, #0x6666, lsl #16
  46dfe0:	mov	w15, #0xa                   	// #10
  46dfe4:	and	w16, w9, #0xff
  46dfe8:	sub	w9, w13, w16
  46dfec:	smull	x9, w9, w14
  46dff0:	lsr	x17, x9, #63
  46dff4:	asr	x9, x9, #34
  46dff8:	add	w9, w9, w17
  46dffc:	cmp	w12, w9
  46e000:	b.gt	46e05c <feof@plt+0x6a7bc>
  46e004:	str	x10, [x21]
  46e008:	ldrb	w9, [x10], #1
  46e00c:	madd	w12, w12, w15, w16
  46e010:	sub	w12, w12, #0x30
  46e014:	sub	w16, w9, #0x30
  46e018:	cmp	w16, #0xa
  46e01c:	b.cc	46dfe4 <feof@plt+0x6a744>  // b.lo, b.ul, b.last
  46e020:	sub	x10, x10, #0x1
  46e024:	b	46e02c <feof@plt+0x6a78c>
  46e028:	mov	w12, wzr
  46e02c:	cmp	w11, #0x0
  46e030:	cneg	w11, w12, ne  // ne = any
  46e034:	tbnz	w11, #31, 46e05c <feof@plt+0x6a7bc>
  46e038:	cmp	w8, #0x2
  46e03c:	b.cc	46e194 <feof@plt+0x6a8f4>  // b.lo, b.ul, b.last
  46e040:	cmp	w11, #0xa
  46e044:	b.lt	46e194 <feof@plt+0x6a8f4>  // b.tstop
  46e048:	cmp	w9, #0x5f
  46e04c:	b.ne	46e05c <feof@plt+0x6a7bc>  // b.any
  46e050:	add	x8, x10, #0x1
  46e054:	str	x8, [x21]
  46e058:	b	46e194 <feof@plt+0x6a8f4>
  46e05c:	mov	x20, xzr
  46e060:	b	46e224 <feof@plt+0x6a984>
  46e064:	sub	w10, w8, #0x30
  46e068:	cmp	w10, #0x9
  46e06c:	b.hi	46e0e4 <feof@plt+0x6a844>  // b.pmore
  46e070:	mov	w11, #0x2f                  	// #47
  46e074:	mov	w12, #0x6667                	// #26215
  46e078:	mov	w10, wzr
  46e07c:	movk	w11, #0x8000, lsl #16
  46e080:	add	x9, x9, #0x3
  46e084:	movk	w12, #0x6666, lsl #16
  46e088:	mov	w13, #0xa                   	// #10
  46e08c:	and	w14, w8, #0xff
  46e090:	sub	w8, w11, w14
  46e094:	smull	x8, w8, w12
  46e098:	lsr	x15, x8, #63
  46e09c:	asr	x8, x8, #34
  46e0a0:	add	w8, w8, w15
  46e0a4:	cmp	w10, w8
  46e0a8:	b.gt	46e190 <feof@plt+0x6a8f0>
  46e0ac:	str	x9, [x21]
  46e0b0:	ldrb	w8, [x9], #1
  46e0b4:	madd	w10, w10, w13, w14
  46e0b8:	sub	w10, w10, #0x30
  46e0bc:	sub	w14, w8, #0x30
  46e0c0:	cmp	w14, #0xa
  46e0c4:	b.cc	46e08c <feof@plt+0x6a7ec>  // b.lo, b.ul, b.last
  46e0c8:	cmn	w10, #0x1
  46e0cc:	b.lt	46e190 <feof@plt+0x6a8f0>  // b.tstop
  46e0d0:	add	w10, w10, #0x1
  46e0d4:	sub	x11, x9, #0x1
  46e0d8:	cmp	w8, #0x5f
  46e0dc:	b.eq	46e0f0 <feof@plt+0x6a850>  // b.none
  46e0e0:	b	46e190 <feof@plt+0x6a8f0>
  46e0e4:	mov	w10, #0x1                   	// #1
  46e0e8:	cmp	w8, #0x5f
  46e0ec:	b.ne	46e190 <feof@plt+0x6a8f0>  // b.any
  46e0f0:	add	x8, x11, #0x1
  46e0f4:	str	x8, [x21]
  46e0f8:	tbz	w10, #31, 46de98 <feof@plt+0x6a5f8>
  46e0fc:	b	46e190 <feof@plt+0x6a8f0>
  46e100:	sub	w9, w8, #0x30
  46e104:	cmp	w9, #0x9
  46e108:	b.hi	46e178 <feof@plt+0x6a8d8>  // b.pmore
  46e10c:	mov	w11, #0x2f                  	// #47
  46e110:	mov	w12, #0x6667                	// #26215
  46e114:	mov	w9, wzr
  46e118:	movk	w11, #0x8000, lsl #16
  46e11c:	add	x10, x10, #0x2
  46e120:	movk	w12, #0x6666, lsl #16
  46e124:	mov	w13, #0xa                   	// #10
  46e128:	and	w14, w8, #0xff
  46e12c:	sub	w8, w11, w14
  46e130:	smull	x8, w8, w12
  46e134:	lsr	x15, x8, #63
  46e138:	asr	x8, x8, #34
  46e13c:	add	w8, w8, w15
  46e140:	cmp	w9, w8
  46e144:	b.gt	46e190 <feof@plt+0x6a8f0>
  46e148:	str	x10, [x21]
  46e14c:	ldrb	w8, [x10], #1
  46e150:	madd	w9, w9, w13, w14
  46e154:	sub	w9, w9, #0x30
  46e158:	sub	w14, w8, #0x30
  46e15c:	cmp	w14, #0xa
  46e160:	b.cc	46e128 <feof@plt+0x6a888>  // b.lo, b.ul, b.last
  46e164:	cmn	w9, #0x1
  46e168:	b.lt	46e190 <feof@plt+0x6a8f0>  // b.tstop
  46e16c:	add	w9, w9, #0x1
  46e170:	sub	x10, x10, #0x2
  46e174:	b	46e17c <feof@plt+0x6a8dc>
  46e178:	mov	w9, #0x1                   	// #1
  46e17c:	cmp	w8, #0x5f
  46e180:	b.ne	46e190 <feof@plt+0x6a8f0>  // b.any
  46e184:	add	x8, x10, #0x2
  46e188:	str	x8, [x21]
  46e18c:	tbz	w9, #31, 46dcd0 <feof@plt+0x6a430>
  46e190:	mov	x20, xzr
  46e194:	ldr	x8, [x21]
  46e198:	ldrb	w9, [x8]
  46e19c:	cmp	w9, #0x42
  46e1a0:	b.ne	46e224 <feof@plt+0x6a984>  // b.any
  46e1a4:	ldr	x22, [x19, #64]
  46e1a8:	mov	w23, #0x18                  	// #24
  46e1ac:	mov	w24, #0x4c                  	// #76
  46e1b0:	b	46e1c8 <feof@plt+0x6a928>
  46e1b4:	mov	x20, xzr
  46e1b8:	ldr	x8, [x21]
  46e1bc:	ldrb	w9, [x8]
  46e1c0:	cmp	w9, #0x42
  46e1c4:	b.ne	46e220 <feof@plt+0x6a980>  // b.any
  46e1c8:	add	x8, x8, #0x1
  46e1cc:	mov	x0, x19
  46e1d0:	mov	x25, x20
  46e1d4:	str	x8, [x19, #24]
  46e1d8:	bl	46c41c <feof@plt+0x68b7c>
  46e1dc:	mov	x20, xzr
  46e1e0:	cbz	x25, 46e1b8 <feof@plt+0x6a918>
  46e1e4:	cbz	x0, 46e1b8 <feof@plt+0x6a918>
  46e1e8:	ldp	w8, w9, [x19, #40]
  46e1ec:	sxtw	x8, w8
  46e1f0:	cmp	w8, w9
  46e1f4:	b.ge	46e1b4 <feof@plt+0x6a914>  // b.tcont
  46e1f8:	ldr	x9, [x19, #32]
  46e1fc:	add	w10, w8, #0x1
  46e200:	madd	x20, x8, x23, x9
  46e204:	str	wzr, [x20, #4]
  46e208:	str	w10, [x19, #40]
  46e20c:	cbz	x9, 46e1b4 <feof@plt+0x6a914>
  46e210:	madd	x8, x8, x23, x9
  46e214:	str	w24, [x20]
  46e218:	stp	x25, x0, [x8, #8]
  46e21c:	b	46e1b8 <feof@plt+0x6a918>
  46e220:	str	x22, [x19, #64]
  46e224:	mov	x0, x20
  46e228:	ldp	x20, x19, [sp, #64]
  46e22c:	ldp	x22, x21, [sp, #48]
  46e230:	ldp	x24, x23, [sp, #32]
  46e234:	ldr	x25, [sp, #16]
  46e238:	ldp	x29, x30, [sp], #80
  46e23c:	ret
  46e240:	stp	x29, x30, [sp, #-96]!
  46e244:	stp	x26, x25, [sp, #32]
  46e248:	stp	x24, x23, [sp, #48]
  46e24c:	stp	x22, x21, [sp, #64]
  46e250:	adrp	x21, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46e254:	mov	w24, #0x2f                  	// #47
  46e258:	mov	w25, #0x6667                	// #26215
  46e25c:	stp	x20, x19, [sp, #80]
  46e260:	mov	x20, x0
  46e264:	mov	x19, xzr
  46e268:	add	x21, x21, #0xa1d
  46e26c:	mov	w22, #0x18                  	// #24
  46e270:	mov	w23, #0x5                   	// #5
  46e274:	movk	w24, #0x8000, lsl #16
  46e278:	movk	w25, #0x6666, lsl #16
  46e27c:	mov	w26, #0xa                   	// #10
  46e280:	str	x27, [sp, #16]
  46e284:	mov	x29, sp
  46e288:	ldr	x8, [x20, #24]
  46e28c:	ldrb	w27, [x8]
  46e290:	cbz	w27, 46e494 <feof@plt+0x6abf4>
  46e294:	cmp	w27, #0x44
  46e298:	b.eq	46e30c <feof@plt+0x6aa6c>  // b.none
  46e29c:	sub	w9, w27, #0x30
  46e2a0:	cmp	w9, #0xa
  46e2a4:	b.cc	46e328 <feof@plt+0x6aa88>  // b.lo, b.ul, b.last
  46e2a8:	sub	w9, w27, #0x61
  46e2ac:	and	w9, w9, #0xff
  46e2b0:	cmp	w9, #0x1a
  46e2b4:	b.cc	46e328 <feof@plt+0x6aa88>  // b.lo, b.ul, b.last
  46e2b8:	cmp	w27, #0x4d
  46e2bc:	b.ne	46e2d0 <feof@plt+0x6aa30>  // b.any
  46e2c0:	cbz	x19, 46e498 <feof@plt+0x6abf8>
  46e2c4:	add	x8, x8, #0x1
  46e2c8:	str	x8, [x20, #24]
  46e2cc:	b	46e288 <feof@plt+0x6a9e8>
  46e2d0:	sub	w9, w27, #0x43
  46e2d4:	cmp	w9, #0x12
  46e2d8:	b.hi	46e494 <feof@plt+0x6abf4>  // b.pmore
  46e2dc:	adr	x10, 46e2ec <feof@plt+0x6aa4c>
  46e2e0:	ldrb	w11, [x21, x9]
  46e2e4:	add	x10, x10, x11, lsl #2
  46e2e8:	br	x10
  46e2ec:	cbz	x19, 46e498 <feof@plt+0x6abf8>
  46e2f0:	add	x8, x8, #0x1
  46e2f4:	mov	x0, x20
  46e2f8:	str	x8, [x20, #24]
  46e2fc:	bl	46e820 <feof@plt+0x6af80>
  46e300:	mov	x3, x0
  46e304:	mov	w1, #0x4                   	// #4
  46e308:	b	46e33c <feof@plt+0x6aa9c>
  46e30c:	ldrb	w8, [x8, #1]
  46e310:	orr	w8, w8, #0x20
  46e314:	cmp	w8, #0x74
  46e318:	b.ne	46e328 <feof@plt+0x6aa88>  // b.any
  46e31c:	mov	x0, x20
  46e320:	bl	46aef4 <feof@plt+0x67654>
  46e324:	b	46e330 <feof@plt+0x6aa90>
  46e328:	mov	x0, x20
  46e32c:	bl	46db34 <feof@plt+0x6a294>
  46e330:	mov	x3, x0
  46e334:	cbz	x19, 46e358 <feof@plt+0x6aab8>
  46e338:	mov	w1, #0x1                   	// #1
  46e33c:	mov	x0, x20
  46e340:	mov	x2, x19
  46e344:	bl	46c390 <feof@plt+0x68af0>
  46e348:	mov	x19, x0
  46e34c:	cmp	w27, #0x53
  46e350:	b.eq	46e288 <feof@plt+0x6a9e8>  // b.none
  46e354:	b	46e364 <feof@plt+0x6aac4>
  46e358:	mov	x19, x3
  46e35c:	cmp	w27, #0x53
  46e360:	b.eq	46e288 <feof@plt+0x6a9e8>  // b.none
  46e364:	ldr	x8, [x20, #24]
  46e368:	ldrb	w8, [x8]
  46e36c:	cmp	w8, #0x45
  46e370:	b.eq	46e288 <feof@plt+0x6a9e8>  // b.none
  46e374:	cbz	x19, 46e498 <feof@plt+0x6abf8>
  46e378:	ldp	w8, w9, [x20, #56]
  46e37c:	sxtw	x8, w8
  46e380:	cmp	w8, w9
  46e384:	b.ge	46e494 <feof@plt+0x6abf4>  // b.tcont
  46e388:	ldr	x9, [x20, #48]
  46e38c:	add	w10, w8, #0x1
  46e390:	str	x19, [x9, x8, lsl #3]
  46e394:	str	w10, [x20, #56]
  46e398:	b	46e288 <feof@plt+0x6a9e8>
  46e39c:	mov	w1, #0x1                   	// #1
  46e3a0:	mov	x0, x20
  46e3a4:	bl	46c614 <feof@plt+0x68d74>
  46e3a8:	b	46e330 <feof@plt+0x6aa90>
  46e3ac:	add	x9, x8, #0x1
  46e3b0:	str	x9, [x20, #24]
  46e3b4:	ldrb	w9, [x8, #1]
  46e3b8:	cmp	w9, #0x6e
  46e3bc:	b.eq	46e48c <feof@plt+0x6abec>  // b.none
  46e3c0:	cmp	w9, #0x5f
  46e3c4:	b.ne	46e410 <feof@plt+0x6ab70>  // b.any
  46e3c8:	mov	w10, wzr
  46e3cc:	add	x8, x8, #0x2
  46e3d0:	str	x8, [x20, #24]
  46e3d4:	ldp	w8, w9, [x20, #40]
  46e3d8:	sxtw	x8, w8
  46e3dc:	cmp	w8, w9
  46e3e0:	b.ge	46e48c <feof@plt+0x6abec>  // b.tcont
  46e3e4:	ldr	x9, [x20, #32]
  46e3e8:	add	w11, w8, #0x1
  46e3ec:	madd	x3, x8, x22, x9
  46e3f0:	str	wzr, [x3, #4]
  46e3f4:	str	w11, [x20, #40]
  46e3f8:	cbz	x9, 46e48c <feof@plt+0x6abec>
  46e3fc:	mov	w10, w10
  46e400:	madd	x8, x8, x22, x9
  46e404:	str	w23, [x3]
  46e408:	str	x10, [x8, #8]
  46e40c:	b	46e334 <feof@plt+0x6aa94>
  46e410:	sub	w10, w9, #0x30
  46e414:	cmp	w10, #0x9
  46e418:	b.hi	46e474 <feof@plt+0x6abd4>  // b.pmore
  46e41c:	mov	w10, wzr
  46e420:	add	x8, x8, #0x2
  46e424:	and	w11, w9, #0xff
  46e428:	sub	w9, w24, w11
  46e42c:	smull	x9, w9, w25
  46e430:	lsr	x12, x9, #63
  46e434:	asr	x9, x9, #34
  46e438:	add	w9, w9, w12
  46e43c:	cmp	w10, w9
  46e440:	b.gt	46e48c <feof@plt+0x6abec>
  46e444:	str	x8, [x20, #24]
  46e448:	ldrb	w9, [x8], #1
  46e44c:	madd	w10, w10, w26, w11
  46e450:	sub	w10, w10, #0x30
  46e454:	sub	w11, w9, #0x30
  46e458:	cmp	w11, #0xa
  46e45c:	b.cc	46e424 <feof@plt+0x6ab84>  // b.lo, b.ul, b.last
  46e460:	cmn	w10, #0x1
  46e464:	b.lt	46e48c <feof@plt+0x6abec>  // b.tstop
  46e468:	add	w10, w10, #0x1
  46e46c:	sub	x8, x8, #0x2
  46e470:	b	46e478 <feof@plt+0x6abd8>
  46e474:	mov	w10, #0x1                   	// #1
  46e478:	cmp	w9, #0x5f
  46e47c:	b.ne	46e48c <feof@plt+0x6abec>  // b.any
  46e480:	add	x8, x8, #0x2
  46e484:	str	x8, [x20, #24]
  46e488:	tbz	w10, #31, 46e3d4 <feof@plt+0x6ab34>
  46e48c:	mov	x3, xzr
  46e490:	b	46e334 <feof@plt+0x6aa94>
  46e494:	mov	x19, xzr
  46e498:	mov	x0, x19
  46e49c:	ldp	x20, x19, [sp, #80]
  46e4a0:	ldp	x22, x21, [sp, #64]
  46e4a4:	ldp	x24, x23, [sp, #48]
  46e4a8:	ldp	x26, x25, [sp, #32]
  46e4ac:	ldr	x27, [sp, #16]
  46e4b0:	ldp	x29, x30, [sp], #96
  46e4b4:	ret
  46e4b8:	stp	x29, x30, [sp, #-32]!
  46e4bc:	stp	x20, x19, [sp, #16]
  46e4c0:	ldr	x9, [x0, #24]
  46e4c4:	mov	x19, x0
  46e4c8:	mov	x29, sp
  46e4cc:	ldrb	w8, [x9]
  46e4d0:	cbz	w8, 46e570 <feof@plt+0x6acd0>
  46e4d4:	add	x8, x9, #0x1
  46e4d8:	str	x8, [x19, #24]
  46e4dc:	ldrb	w10, [x9, #1]
  46e4e0:	ldrb	w8, [x9]
  46e4e4:	cbz	w10, 46e570 <feof@plt+0x6acd0>
  46e4e8:	add	x10, x9, #0x2
  46e4ec:	str	x10, [x19, #24]
  46e4f0:	ldrb	w9, [x9, #1]
  46e4f4:	cmp	w8, #0x76
  46e4f8:	b.ne	46e640 <feof@plt+0x6ada0>  // b.any
  46e4fc:	sub	w20, w9, #0x30
  46e500:	and	w10, w20, #0xff
  46e504:	cmp	w10, #0x9
  46e508:	b.hi	46e640 <feof@plt+0x6ada0>  // b.pmore
  46e50c:	mov	x0, x19
  46e510:	bl	46c41c <feof@plt+0x68b7c>
  46e514:	ldp	w9, w8, [x19, #40]
  46e518:	sxtw	x9, w9
  46e51c:	cmp	w9, w8
  46e520:	b.ge	46e630 <feof@plt+0x6ad90>  // b.tcont
  46e524:	ldr	x10, [x19, #32]
  46e528:	mov	w11, #0x18                  	// #24
  46e52c:	mov	x8, x0
  46e530:	mov	x0, xzr
  46e534:	add	w12, w9, #0x1
  46e538:	madd	x11, x9, x11, x10
  46e53c:	str	wzr, [x11, #4]
  46e540:	str	w12, [x19, #40]
  46e544:	cbz	x8, 46e634 <feof@plt+0x6ad94>
  46e548:	cbz	x10, 46e634 <feof@plt+0x6ad94>
  46e54c:	adrp	x12, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46e550:	ldr	d0, [x12, #1680]
  46e554:	mov	w12, #0x18                  	// #24
  46e558:	madd	x9, x9, x12, x10
  46e55c:	mov	x0, x11
  46e560:	str	d0, [x11]
  46e564:	str	w20, [x9, #8]
  46e568:	str	x8, [x9, #16]
  46e56c:	b	46e634 <feof@plt+0x6ad94>
  46e570:	mov	w9, wzr
  46e574:	adrp	x11, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46e578:	mov	w10, wzr
  46e57c:	mov	w13, #0x43                  	// #67
  46e580:	add	x11, x11, #0xd58
  46e584:	mov	w12, #0x18                  	// #24
  46e588:	b	46e5a0 <feof@plt+0x6ad00>
  46e58c:	add	w10, w15, #0x1
  46e590:	mov	w15, w13
  46e594:	cmp	w10, w15
  46e598:	mov	w13, w15
  46e59c:	b.eq	46e630 <feof@plt+0x6ad90>  // b.none
  46e5a0:	sub	w14, w13, w10
  46e5a4:	cmp	w14, #0x0
  46e5a8:	cinc	w14, w14, lt  // lt = tstop
  46e5ac:	add	w15, w10, w14, asr #1
  46e5b0:	smaddl	x14, w15, w12, x11
  46e5b4:	ldr	x16, [x14]
  46e5b8:	ldrb	w17, [x16]
  46e5bc:	cmp	w8, w17
  46e5c0:	b.ne	46e5d0 <feof@plt+0x6ad30>  // b.any
  46e5c4:	ldrb	w18, [x16, #1]
  46e5c8:	cmp	w9, w18
  46e5cc:	b.eq	46e5ec <feof@plt+0x6ad4c>  // b.none
  46e5d0:	cmp	w8, w17
  46e5d4:	b.cc	46e594 <feof@plt+0x6acf4>  // b.lo, b.ul, b.last
  46e5d8:	b.ne	46e58c <feof@plt+0x6acec>  // b.any
  46e5dc:	ldrb	w14, [x16, #1]
  46e5e0:	cmp	w9, w14
  46e5e4:	b.cs	46e58c <feof@plt+0x6acec>  // b.hs, b.nlast
  46e5e8:	b	46e594 <feof@plt+0x6acf4>
  46e5ec:	ldp	w8, w9, [x19, #40]
  46e5f0:	sxtw	x8, w8
  46e5f4:	cmp	w8, w9
  46e5f8:	b.ge	46e630 <feof@plt+0x6ad90>  // b.tcont
  46e5fc:	ldr	x9, [x19, #32]
  46e600:	mov	w10, #0x18                  	// #24
  46e604:	add	w11, w8, #0x1
  46e608:	madd	x0, x8, x10, x9
  46e60c:	str	wzr, [x0, #4]
  46e610:	str	w11, [x19, #40]
  46e614:	cbz	x9, 46e630 <feof@plt+0x6ad90>
  46e618:	mov	w11, #0x18                  	// #24
  46e61c:	mov	w10, #0x32                  	// #50
  46e620:	madd	x8, x8, x11, x9
  46e624:	str	w10, [x0]
  46e628:	str	x14, [x8, #8]
  46e62c:	b	46e634 <feof@plt+0x6ad94>
  46e630:	mov	x0, xzr
  46e634:	ldp	x20, x19, [sp, #16]
  46e638:	ldp	x29, x30, [sp], #32
  46e63c:	ret
  46e640:	cmp	w8, #0x63
  46e644:	b.ne	46e574 <feof@plt+0x6acd4>  // b.any
  46e648:	cmp	w9, #0x76
  46e64c:	b.ne	46e574 <feof@plt+0x6acd4>  // b.any
  46e650:	ldp	w8, w20, [x19, #76]
  46e654:	mov	x0, x19
  46e658:	cmp	w8, #0x0
  46e65c:	cset	w8, eq  // eq = none
  46e660:	str	w8, [x19, #80]
  46e664:	bl	46aef4 <feof@plt+0x67654>
  46e668:	ldr	w9, [x19, #80]
  46e66c:	mov	x8, x0
  46e670:	cbz	w9, 46e6ac <feof@plt+0x6ae0c>
  46e674:	cbz	x8, 46e6f8 <feof@plt+0x6ae58>
  46e678:	ldp	w9, w10, [x19, #40]
  46e67c:	sxtw	x9, w9
  46e680:	cmp	w9, w10
  46e684:	b.ge	46e6f8 <feof@plt+0x6ae58>  // b.tcont
  46e688:	ldr	x10, [x19, #32]
  46e68c:	mov	w11, #0x18                  	// #24
  46e690:	add	w12, w9, #0x1
  46e694:	madd	x0, x9, x11, x10
  46e698:	str	wzr, [x0, #4]
  46e69c:	str	w12, [x19, #40]
  46e6a0:	cbz	x10, 46e6f8 <feof@plt+0x6ae58>
  46e6a4:	mov	w11, #0x35                  	// #53
  46e6a8:	b	46e6e0 <feof@plt+0x6ae40>
  46e6ac:	cbz	x8, 46e6f8 <feof@plt+0x6ae58>
  46e6b0:	ldp	w9, w10, [x19, #40]
  46e6b4:	sxtw	x9, w9
  46e6b8:	cmp	w9, w10
  46e6bc:	b.ge	46e6f8 <feof@plt+0x6ae58>  // b.tcont
  46e6c0:	ldr	x10, [x19, #32]
  46e6c4:	mov	w11, #0x18                  	// #24
  46e6c8:	add	w12, w9, #0x1
  46e6cc:	madd	x0, x9, x11, x10
  46e6d0:	str	wzr, [x0, #4]
  46e6d4:	str	w12, [x19, #40]
  46e6d8:	cbz	x10, 46e6f8 <feof@plt+0x6ae58>
  46e6dc:	mov	w11, #0x34                  	// #52
  46e6e0:	mov	w12, #0x18                  	// #24
  46e6e4:	madd	x9, x9, x12, x10
  46e6e8:	str	w11, [x0]
  46e6ec:	stp	x8, xzr, [x9, #8]
  46e6f0:	str	w20, [x19, #80]
  46e6f4:	b	46e634 <feof@plt+0x6ad94>
  46e6f8:	mov	x0, xzr
  46e6fc:	str	w20, [x19, #80]
  46e700:	b	46e634 <feof@plt+0x6ad94>
  46e704:	stp	x29, x30, [sp, #-64]!
  46e708:	str	x23, [sp, #16]
  46e70c:	mov	x29, sp
  46e710:	adrp	x23, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46e714:	stp	x22, x21, [sp, #32]
  46e718:	stp	x20, x19, [sp, #48]
  46e71c:	mov	x19, x0
  46e720:	add	x20, x29, #0x18
  46e724:	mov	w21, #0x18                  	// #24
  46e728:	mov	w22, #0x2e                  	// #46
  46e72c:	add	x23, x23, #0xa30
  46e730:	str	xzr, [x29, #24]
  46e734:	ldr	x8, [x19, #24]
  46e738:	ldrb	w9, [x8]
  46e73c:	sub	w10, w9, #0x2e
  46e740:	cmp	w10, #0x24
  46e744:	b.hi	46e768 <feof@plt+0x6aec8>  // b.pmore
  46e748:	adr	x9, 46e758 <feof@plt+0x6aeb8>
  46e74c:	ldrb	w11, [x23, x10]
  46e750:	add	x9, x9, x11, lsl #2
  46e754:	br	x9
  46e758:	ldrb	w8, [x8, #1]
  46e75c:	cmp	w8, #0x45
  46e760:	b.ne	46e76c <feof@plt+0x6aecc>  // b.any
  46e764:	b	46e7c8 <feof@plt+0x6af28>
  46e768:	cbz	w9, 46e7c8 <feof@plt+0x6af28>
  46e76c:	mov	x0, x19
  46e770:	bl	46aef4 <feof@plt+0x67654>
  46e774:	cbz	x0, 46e80c <feof@plt+0x6af6c>
  46e778:	ldp	w8, w9, [x19, #40]
  46e77c:	sxtw	x8, w8
  46e780:	cmp	w8, w9
  46e784:	b.ge	46e7bc <feof@plt+0x6af1c>  // b.tcont
  46e788:	ldr	x10, [x19, #32]
  46e78c:	add	w11, w8, #0x1
  46e790:	madd	x9, x8, x21, x10
  46e794:	str	wzr, [x9, #4]
  46e798:	str	w11, [x19, #40]
  46e79c:	cbz	x10, 46e7bc <feof@plt+0x6af1c>
  46e7a0:	madd	x8, x8, x21, x10
  46e7a4:	str	w22, [x9]
  46e7a8:	str	xzr, [x8, #16]!
  46e7ac:	stur	x0, [x8, #-8]
  46e7b0:	str	x9, [x20]
  46e7b4:	mov	x20, x8
  46e7b8:	b	46e734 <feof@plt+0x6ae94>
  46e7bc:	mov	x0, xzr
  46e7c0:	str	xzr, [x20]
  46e7c4:	b	46e80c <feof@plt+0x6af6c>
  46e7c8:	ldr	x0, [x29, #24]
  46e7cc:	cbz	x0, 46e80c <feof@plt+0x6af6c>
  46e7d0:	ldr	x8, [x0, #16]
  46e7d4:	cbnz	x8, 46e80c <feof@plt+0x6af6c>
  46e7d8:	ldr	x8, [x0, #8]
  46e7dc:	ldr	w9, [x8]
  46e7e0:	cmp	w9, #0x27
  46e7e4:	b.ne	46e80c <feof@plt+0x6af6c>  // b.any
  46e7e8:	ldr	x8, [x8, #8]
  46e7ec:	ldr	w9, [x8, #28]
  46e7f0:	cmp	w9, #0x9
  46e7f4:	b.ne	46e80c <feof@plt+0x6af6c>  // b.any
  46e7f8:	ldr	w8, [x8, #8]
  46e7fc:	ldr	w9, [x19, #72]
  46e800:	sub	w8, w9, w8
  46e804:	str	w8, [x19, #72]
  46e808:	str	xzr, [x0, #8]
  46e80c:	ldp	x20, x19, [sp, #48]
  46e810:	ldp	x22, x21, [sp, #32]
  46e814:	ldr	x23, [sp, #16]
  46e818:	ldp	x29, x30, [sp], #64
  46e81c:	ret
  46e820:	stp	x29, x30, [sp, #-64]!
  46e824:	stp	x22, x21, [sp, #32]
  46e828:	stp	x20, x19, [sp, #48]
  46e82c:	ldr	x9, [x0, #24]
  46e830:	mov	x19, x0
  46e834:	str	x23, [sp, #16]
  46e838:	mov	x29, sp
  46e83c:	ldrb	w8, [x9]
  46e840:	cmp	w8, #0x45
  46e844:	b.ne	46e894 <feof@plt+0x6aff4>  // b.any
  46e848:	ldp	w8, w10, [x19, #40]
  46e84c:	add	x9, x9, #0x1
  46e850:	sxtw	x8, w8
  46e854:	str	x9, [x19, #24]
  46e858:	cmp	w8, w10
  46e85c:	b.ge	46e918 <feof@plt+0x6b078>  // b.tcont
  46e860:	ldr	x9, [x19, #32]
  46e864:	mov	w10, #0x18                  	// #24
  46e868:	add	w11, w8, #0x1
  46e86c:	madd	x0, x8, x10, x9
  46e870:	str	wzr, [x0, #4]
  46e874:	str	w11, [x19, #40]
  46e878:	cbz	x9, 46e918 <feof@plt+0x6b078>
  46e87c:	mov	w11, #0x18                  	// #24
  46e880:	mov	w10, #0x2f                  	// #47
  46e884:	madd	x8, x8, x11, x9
  46e888:	str	w10, [x0]
  46e88c:	stp	xzr, xzr, [x8, #8]
  46e890:	b	46e928 <feof@plt+0x6b088>
  46e894:	ldr	x20, [x19, #64]
  46e898:	add	x21, x29, #0x18
  46e89c:	mov	w22, #0x18                  	// #24
  46e8a0:	mov	w23, #0x2f                  	// #47
  46e8a4:	str	xzr, [x29, #24]
  46e8a8:	mov	x0, x19
  46e8ac:	bl	46d8e8 <feof@plt+0x6a048>
  46e8b0:	cbz	x0, 46e928 <feof@plt+0x6b088>
  46e8b4:	ldp	w8, w9, [x19, #40]
  46e8b8:	sxtw	x8, w8
  46e8bc:	cmp	w8, w9
  46e8c0:	b.ge	46e920 <feof@plt+0x6b080>  // b.tcont
  46e8c4:	ldr	x10, [x19, #32]
  46e8c8:	add	w11, w8, #0x1
  46e8cc:	madd	x9, x8, x22, x10
  46e8d0:	str	wzr, [x9, #4]
  46e8d4:	str	w11, [x19, #40]
  46e8d8:	cbz	x10, 46e920 <feof@plt+0x6b080>
  46e8dc:	madd	x10, x8, x22, x10
  46e8e0:	str	w23, [x9]
  46e8e4:	str	xzr, [x10, #16]!
  46e8e8:	stur	x0, [x10, #-8]
  46e8ec:	str	x9, [x21]
  46e8f0:	ldr	x8, [x19, #24]
  46e8f4:	mov	x21, x10
  46e8f8:	ldrb	w9, [x8]
  46e8fc:	cmp	w9, #0x45
  46e900:	b.ne	46e8a8 <feof@plt+0x6b008>  // b.any
  46e904:	add	x8, x8, #0x1
  46e908:	str	x8, [x19, #24]
  46e90c:	str	x20, [x19, #64]
  46e910:	ldr	x0, [x29, #24]
  46e914:	b	46e928 <feof@plt+0x6b088>
  46e918:	mov	x0, xzr
  46e91c:	b	46e928 <feof@plt+0x6b088>
  46e920:	mov	x0, xzr
  46e924:	str	xzr, [x21]
  46e928:	ldp	x20, x19, [sp, #48]
  46e92c:	ldp	x22, x21, [sp, #32]
  46e930:	ldr	x23, [sp, #16]
  46e934:	ldp	x29, x30, [sp], #64
  46e938:	ret
  46e93c:	sub	sp, sp, #0x70
  46e940:	stp	x29, x30, [sp, #16]
  46e944:	stp	x28, x27, [sp, #32]
  46e948:	stp	x26, x25, [sp, #48]
  46e94c:	stp	x24, x23, [sp, #64]
  46e950:	stp	x22, x21, [sp, #80]
  46e954:	stp	x20, x19, [sp, #96]
  46e958:	mov	x23, x0
  46e95c:	ldr	x8, [x23, #24]!
  46e960:	mov	x19, x0
  46e964:	add	x29, sp, #0x10
  46e968:	ldrb	w9, [x8]
  46e96c:	sub	w10, w9, #0x4c
  46e970:	cmp	w10, #0x27
  46e974:	b.hi	46e9b4 <feof@plt+0x6b114>  // b.pmore
  46e978:	adrp	x11, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46e97c:	add	x11, x11, #0xa55
  46e980:	adr	x12, 46e990 <feof@plt+0x6b0f0>
  46e984:	ldrb	w13, [x11, x10]
  46e988:	add	x12, x12, x13, lsl #2
  46e98c:	br	x12
  46e990:	mov	x0, x19
  46e994:	ldp	x20, x19, [sp, #96]
  46e998:	ldp	x22, x21, [sp, #80]
  46e99c:	ldp	x24, x23, [sp, #64]
  46e9a0:	ldp	x26, x25, [sp, #48]
  46e9a4:	ldp	x28, x27, [sp, #32]
  46e9a8:	ldp	x29, x30, [sp, #16]
  46e9ac:	add	sp, sp, #0x70
  46e9b0:	b	46d9a0 <feof@plt+0x6a100>
  46e9b4:	sub	w10, w9, #0x30
  46e9b8:	cmp	w10, #0xa
  46e9bc:	b.cs	46ebc4 <feof@plt+0x6b324>  // b.hs, b.nlast
  46e9c0:	mov	x0, x19
  46e9c4:	bl	46db34 <feof@plt+0x6a294>
  46e9c8:	mov	x21, x0
  46e9cc:	cbz	x0, 46f858 <feof@plt+0x6bfb8>
  46e9d0:	ldr	x8, [x23]
  46e9d4:	ldrb	w9, [x8]
  46e9d8:	cmp	w9, #0x49
  46e9dc:	b.ne	46f858 <feof@plt+0x6bfb8>  // b.any
  46e9e0:	add	x8, x8, #0x1
  46e9e4:	mov	x0, x19
  46e9e8:	str	x8, [x19, #24]
  46e9ec:	bl	46e820 <feof@plt+0x6af80>
  46e9f0:	cbz	x0, 46f854 <feof@plt+0x6bfb4>
  46e9f4:	ldp	w8, w9, [x19, #40]
  46e9f8:	sxtw	x8, w8
  46e9fc:	cmp	w8, w9
  46ea00:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46ea04:	ldr	x9, [x19, #32]
  46ea08:	mov	w10, #0x18                  	// #24
  46ea0c:	add	w11, w8, #0x1
  46ea10:	madd	x10, x8, x10, x9
  46ea14:	str	wzr, [x10, #4]
  46ea18:	str	w11, [x19, #40]
  46ea1c:	cbz	x9, 46f854 <feof@plt+0x6bfb4>
  46ea20:	mov	w12, #0x18                  	// #24
  46ea24:	mov	w11, #0x4                   	// #4
  46ea28:	madd	x8, x8, x12, x9
  46ea2c:	str	w11, [x10]
  46ea30:	stp	x21, x0, [x8, #8]
  46ea34:	mov	x21, x10
  46ea38:	b	46f858 <feof@plt+0x6bfb8>
  46ea3c:	add	x9, x8, #0x1
  46ea40:	str	x9, [x23]
  46ea44:	ldrb	w9, [x8, #1]
  46ea48:	cmp	w9, #0x6e
  46ea4c:	b.eq	46f854 <feof@plt+0x6bfb4>  // b.none
  46ea50:	cmp	w9, #0x5f
  46ea54:	b.ne	46ebf4 <feof@plt+0x6b354>  // b.any
  46ea58:	mov	w10, wzr
  46ea5c:	add	x8, x8, #0x2
  46ea60:	str	x8, [x23]
  46ea64:	ldp	w8, w9, [x19, #40]
  46ea68:	sxtw	x8, w8
  46ea6c:	cmp	w8, w9
  46ea70:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46ea74:	ldr	x9, [x19, #32]
  46ea78:	mov	w11, #0x18                  	// #24
  46ea7c:	add	w12, w8, #0x1
  46ea80:	madd	x21, x8, x11, x9
  46ea84:	str	wzr, [x21, #4]
  46ea88:	str	w12, [x19, #40]
  46ea8c:	cbz	x9, 46f854 <feof@plt+0x6bfb4>
  46ea90:	mov	w12, #0x18                  	// #24
  46ea94:	mov	w11, #0x5                   	// #5
  46ea98:	mov	w10, w10
  46ea9c:	madd	x8, x8, x12, x9
  46eaa0:	str	w11, [x21]
  46eaa4:	str	x10, [x8, #8]
  46eaa8:	b	46f858 <feof@plt+0x6bfb8>
  46eaac:	ldrb	w9, [x8, #1]
  46eab0:	cmp	w9, #0x70
  46eab4:	b.ne	46ecfc <feof@plt+0x6b45c>  // b.any
  46eab8:	add	x10, x8, #0x2
  46eabc:	str	x10, [x23]
  46eac0:	ldrb	w9, [x8, #2]
  46eac4:	cmp	w9, #0x6e
  46eac8:	b.eq	46f854 <feof@plt+0x6bfb4>  // b.none
  46eacc:	cmp	w9, #0x5f
  46ead0:	b.eq	46eeb4 <feof@plt+0x6b614>  // b.none
  46ead4:	cmp	w9, #0x54
  46ead8:	b.ne	46ef0c <feof@plt+0x6b66c>  // b.any
  46eadc:	add	x8, x8, #0x3
  46eae0:	mov	x9, xzr
  46eae4:	str	x8, [x23]
  46eae8:	b	46eec8 <feof@plt+0x6b628>
  46eaec:	ldrb	w9, [x8, #1]
  46eaf0:	cmp	w9, #0x70
  46eaf4:	b.eq	46ec74 <feof@plt+0x6b3d4>  // b.none
  46eaf8:	cmp	w9, #0x72
  46eafc:	b.ne	46ecfc <feof@plt+0x6b45c>  // b.any
  46eb00:	add	x8, x8, #0x2
  46eb04:	mov	x0, x19
  46eb08:	str	x8, [x19, #24]
  46eb0c:	bl	46aef4 <feof@plt+0x67654>
  46eb10:	mov	x20, x0
  46eb14:	mov	x0, x19
  46eb18:	bl	46db34 <feof@plt+0x6a294>
  46eb1c:	ldr	x8, [x19, #24]
  46eb20:	mov	x22, x0
  46eb24:	ldrb	w9, [x8]
  46eb28:	cmp	w9, #0x49
  46eb2c:	b.ne	46ee48 <feof@plt+0x6b5a8>  // b.any
  46eb30:	add	x8, x8, #0x1
  46eb34:	mov	x0, x19
  46eb38:	str	x8, [x19, #24]
  46eb3c:	bl	46e820 <feof@plt+0x6af80>
  46eb40:	mov	x21, xzr
  46eb44:	cbz	x22, 46f858 <feof@plt+0x6bfb8>
  46eb48:	cbz	x0, 46f858 <feof@plt+0x6bfb8>
  46eb4c:	ldp	w9, w8, [x19, #40]
  46eb50:	sxtw	x9, w9
  46eb54:	cmp	w9, w8
  46eb58:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46eb5c:	ldr	x10, [x19, #32]
  46eb60:	mov	w8, #0x18                  	// #24
  46eb64:	add	w11, w9, #0x1
  46eb68:	madd	x8, x9, x8, x10
  46eb6c:	str	wzr, [x8, #4]
  46eb70:	str	w11, [x19, #40]
  46eb74:	cbz	x10, 46f854 <feof@plt+0x6bfb4>
  46eb78:	mov	w12, #0x18                  	// #24
  46eb7c:	mov	w11, #0x4                   	// #4
  46eb80:	madd	x9, x9, x12, x10
  46eb84:	str	w11, [x8]
  46eb88:	stp	x22, x0, [x9, #8]
  46eb8c:	cbz	x20, 46f854 <feof@plt+0x6bfb4>
  46eb90:	ldp	w9, w10, [x19, #40]
  46eb94:	sxtw	x9, w9
  46eb98:	cmp	w9, w10
  46eb9c:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46eba0:	ldr	x10, [x19, #32]
  46eba4:	mov	w11, #0x18                  	// #24
  46eba8:	add	w12, w9, #0x1
  46ebac:	madd	x21, x9, x11, x10
  46ebb0:	str	wzr, [x21, #4]
  46ebb4:	str	w12, [x19, #40]
  46ebb8:	cbz	x10, 46f854 <feof@plt+0x6bfb4>
  46ebbc:	mov	w11, #0x1                   	// #1
  46ebc0:	b	46f6e4 <feof@plt+0x6be44>
  46ebc4:	cmp	w9, #0x69
  46ebc8:	b.eq	46eccc <feof@plt+0x6b42c>  // b.none
  46ebcc:	cmp	w9, #0x74
  46ebd0:	b.eq	46eccc <feof@plt+0x6b42c>  // b.none
  46ebd4:	cmp	w9, #0x6f
  46ebd8:	b.ne	46ecfc <feof@plt+0x6b45c>  // b.any
  46ebdc:	ldrb	w9, [x8, #1]
  46ebe0:	cmp	w9, #0x6e
  46ebe4:	b.ne	46ecfc <feof@plt+0x6b45c>  // b.any
  46ebe8:	add	x8, x8, #0x2
  46ebec:	str	x8, [x23]
  46ebf0:	b	46e9c0 <feof@plt+0x6b120>
  46ebf4:	sub	w10, w9, #0x30
  46ebf8:	cmp	w10, #0x9
  46ebfc:	b.hi	46ee98 <feof@plt+0x6b5f8>  // b.pmore
  46ec00:	mov	w11, #0x2f                  	// #47
  46ec04:	mov	w12, #0x6667                	// #26215
  46ec08:	mov	w10, wzr
  46ec0c:	movk	w11, #0x8000, lsl #16
  46ec10:	add	x8, x8, #0x2
  46ec14:	movk	w12, #0x6666, lsl #16
  46ec18:	mov	w13, #0xa                   	// #10
  46ec1c:	and	w14, w9, #0xff
  46ec20:	sub	w9, w11, w14
  46ec24:	smull	x9, w9, w12
  46ec28:	lsr	x15, x9, #63
  46ec2c:	asr	x9, x9, #34
  46ec30:	add	w9, w9, w15
  46ec34:	cmp	w10, w9
  46ec38:	b.gt	46f854 <feof@plt+0x6bfb4>
  46ec3c:	str	x8, [x23]
  46ec40:	ldrb	w9, [x8], #1
  46ec44:	madd	w10, w10, w13, w14
  46ec48:	sub	w10, w10, #0x30
  46ec4c:	sub	w14, w9, #0x30
  46ec50:	cmp	w14, #0xa
  46ec54:	b.cc	46ec1c <feof@plt+0x6b37c>  // b.lo, b.ul, b.last
  46ec58:	cmn	w10, #0x1
  46ec5c:	b.lt	46f854 <feof@plt+0x6bfb4>  // b.tstop
  46ec60:	add	w10, w10, #0x1
  46ec64:	sub	x8, x8, #0x2
  46ec68:	cmp	w9, #0x5f
  46ec6c:	b.eq	46eea4 <feof@plt+0x6b604>  // b.none
  46ec70:	b	46f854 <feof@plt+0x6bfb4>
  46ec74:	add	x8, x8, #0x2
  46ec78:	mov	x0, x19
  46ec7c:	str	x8, [x19, #24]
  46ec80:	bl	46e93c <feof@plt+0x6b09c>
  46ec84:	cbz	x0, 46f854 <feof@plt+0x6bfb4>
  46ec88:	ldp	w8, w9, [x19, #40]
  46ec8c:	sxtw	x8, w8
  46ec90:	cmp	w8, w9
  46ec94:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46ec98:	ldr	x9, [x19, #32]
  46ec9c:	mov	w10, #0x18                  	// #24
  46eca0:	add	w11, w8, #0x1
  46eca4:	madd	x21, x8, x10, x9
  46eca8:	str	wzr, [x21, #4]
  46ecac:	str	w11, [x19, #40]
  46ecb0:	cbz	x9, 46f854 <feof@plt+0x6bfb4>
  46ecb4:	mov	w11, #0x18                  	// #24
  46ecb8:	mov	w10, #0x4b                  	// #75
  46ecbc:	madd	x8, x8, x11, x9
  46ecc0:	str	w10, [x21]
  46ecc4:	stp	x0, xzr, [x8, #8]
  46ecc8:	b	46f858 <feof@plt+0x6bfb8>
  46eccc:	ldrb	w10, [x8, #1]
  46ecd0:	cmp	w10, #0x6c
  46ecd4:	b.ne	46ecfc <feof@plt+0x6b45c>  // b.any
  46ecd8:	add	x8, x8, #0x2
  46ecdc:	cmp	w9, #0x74
  46ece0:	str	x8, [x23]
  46ece4:	b.ne	46ef9c <feof@plt+0x6b6fc>  // b.any
  46ece8:	mov	x0, x19
  46ecec:	bl	46aef4 <feof@plt+0x67654>
  46ecf0:	ldr	x8, [x19, #24]
  46ecf4:	mov	x20, x0
  46ecf8:	b	46efa0 <feof@plt+0x6b700>
  46ecfc:	mov	x0, x19
  46ed00:	bl	46e4b8 <feof@plt+0x6ac18>
  46ed04:	cbz	x0, 46f854 <feof@plt+0x6bfb4>
  46ed08:	ldr	w8, [x0]
  46ed0c:	mov	x20, x0
  46ed10:	cmp	w8, #0x34
  46ed14:	b.eq	46ed64 <feof@plt+0x6b4c4>  // b.none
  46ed18:	cmp	w8, #0x33
  46ed1c:	b.eq	46edd8 <feof@plt+0x6b538>  // b.none
  46ed20:	cmp	w8, #0x32
  46ed24:	b.ne	46f854 <feof@plt+0x6bfb4>  // b.any
  46ed28:	ldr	x8, [x20, #8]
  46ed2c:	ldr	w10, [x19, #72]
  46ed30:	adrp	x1, 4b8000 <_obstack_memory_used@@Base+0x3c2fc>
  46ed34:	add	x1, x1, #0x6d
  46ed38:	ldr	w9, [x8, #16]
  46ed3c:	ldr	x21, [x8]
  46ed40:	add	w8, w9, w10
  46ed44:	sub	w8, w8, #0x2
  46ed48:	mov	x0, x21
  46ed4c:	str	w8, [x19, #72]
  46ed50:	bl	403640 <strcmp@plt>
  46ed54:	cbz	w0, 46ef8c <feof@plt+0x6b6ec>
  46ed58:	ldr	x8, [x20, #8]
  46ed5c:	add	x8, x8, #0x14
  46ed60:	b	46ede0 <feof@plt+0x6b540>
  46ed64:	ldr	x9, [x23]
  46ed68:	ldrb	w8, [x9]
  46ed6c:	cmp	w8, #0x5f
  46ed70:	b.ne	46f06c <feof@plt+0x6b7cc>  // b.any
  46ed74:	add	x8, x9, #0x1
  46ed78:	str	x8, [x23]
  46ed7c:	str	xzr, [sp, #8]
  46ed80:	ldrb	w8, [x9, #1]
  46ed84:	cmp	w8, #0x45
  46ed88:	b.ne	46f14c <feof@plt+0x6b8ac>  // b.any
  46ed8c:	ldp	w8, w10, [x19, #40]
  46ed90:	add	x9, x9, #0x2
  46ed94:	sxtw	x8, w8
  46ed98:	str	x9, [x19, #24]
  46ed9c:	cmp	w8, w10
  46eda0:	b.ge	46f290 <feof@plt+0x6b9f0>  // b.tcont
  46eda4:	ldr	x9, [x19, #32]
  46eda8:	mov	w10, #0x18                  	// #24
  46edac:	add	w11, w8, #0x1
  46edb0:	madd	x0, x8, x10, x9
  46edb4:	str	wzr, [x0, #4]
  46edb8:	str	w11, [x19, #40]
  46edbc:	cbz	x9, 46f290 <feof@plt+0x6b9f0>
  46edc0:	mov	w11, #0x18                  	// #24
  46edc4:	mov	w10, #0x2e                  	// #46
  46edc8:	madd	x8, x8, x11, x9
  46edcc:	str	w10, [x0]
  46edd0:	stp	xzr, xzr, [x8, #8]
  46edd4:	b	46f2a8 <feof@plt+0x6ba08>
  46edd8:	mov	x21, xzr
  46eddc:	add	x8, x20, #0x8
  46ede0:	ldr	w8, [x8]
  46ede4:	cmp	w8, #0x3
  46ede8:	b.hi	46f854 <feof@plt+0x6bfb4>  // b.pmore
  46edec:	adrp	x9, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46edf0:	add	x9, x9, #0xa7d
  46edf4:	adr	x10, 46ee04 <feof@plt+0x6b564>
  46edf8:	ldrb	w11, [x9, x8]
  46edfc:	add	x10, x10, x11, lsl #2
  46ee00:	br	x10
  46ee04:	ldp	w8, w9, [x19, #40]
  46ee08:	sxtw	x8, w8
  46ee0c:	cmp	w8, w9
  46ee10:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46ee14:	ldr	x9, [x19, #32]
  46ee18:	mov	w10, #0x18                  	// #24
  46ee1c:	add	w11, w8, #0x1
  46ee20:	madd	x21, x8, x10, x9
  46ee24:	str	wzr, [x21, #4]
  46ee28:	str	w11, [x19, #40]
  46ee2c:	cbz	x9, 46f854 <feof@plt+0x6bfb4>
  46ee30:	mov	w11, #0x18                  	// #24
  46ee34:	mov	w10, #0x36                  	// #54
  46ee38:	madd	x8, x8, x11, x9
  46ee3c:	str	w10, [x21]
  46ee40:	stp	x20, xzr, [x8, #8]
  46ee44:	b	46f858 <feof@plt+0x6bfb8>
  46ee48:	mov	x21, xzr
  46ee4c:	cbz	x20, 46f858 <feof@plt+0x6bfb8>
  46ee50:	cbz	x22, 46f858 <feof@plt+0x6bfb8>
  46ee54:	ldp	w8, w9, [x19, #40]
  46ee58:	sxtw	x8, w8
  46ee5c:	cmp	w8, w9
  46ee60:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46ee64:	ldr	x9, [x19, #32]
  46ee68:	mov	w10, #0x18                  	// #24
  46ee6c:	add	w11, w8, #0x1
  46ee70:	madd	x21, x8, x10, x9
  46ee74:	str	wzr, [x21, #4]
  46ee78:	str	w11, [x19, #40]
  46ee7c:	cbz	x9, 46f854 <feof@plt+0x6bfb4>
  46ee80:	mov	w11, #0x18                  	// #24
  46ee84:	mov	w10, #0x1                   	// #1
  46ee88:	madd	x8, x8, x11, x9
  46ee8c:	str	w10, [x21]
  46ee90:	stp	x20, x22, [x8, #8]
  46ee94:	b	46f858 <feof@plt+0x6bfb8>
  46ee98:	mov	w10, #0x1                   	// #1
  46ee9c:	cmp	w9, #0x5f
  46eea0:	b.ne	46f854 <feof@plt+0x6bfb4>  // b.any
  46eea4:	add	x8, x8, #0x2
  46eea8:	str	x8, [x23]
  46eeac:	tbz	w10, #31, 46ea64 <feof@plt+0x6b1c4>
  46eeb0:	b	46f854 <feof@plt+0x6bfb4>
  46eeb4:	mov	w11, wzr
  46eeb8:	add	x8, x8, #0x3
  46eebc:	str	x8, [x23]
  46eec0:	add	w8, w11, #0x1
  46eec4:	sxtw	x9, w8
  46eec8:	ldp	w8, w10, [x19, #40]
  46eecc:	sxtw	x8, w8
  46eed0:	cmp	w8, w10
  46eed4:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46eed8:	ldr	x10, [x19, #32]
  46eedc:	mov	w11, #0x18                  	// #24
  46eee0:	add	w12, w8, #0x1
  46eee4:	madd	x21, x8, x11, x10
  46eee8:	str	wzr, [x21, #4]
  46eeec:	str	w12, [x19, #40]
  46eef0:	cbz	x10, 46f854 <feof@plt+0x6bfb4>
  46eef4:	mov	w12, #0x18                  	// #24
  46eef8:	mov	w11, #0x6                   	// #6
  46eefc:	madd	x8, x8, x12, x10
  46ef00:	str	w11, [x21]
  46ef04:	str	x9, [x8, #8]
  46ef08:	b	46f858 <feof@plt+0x6bfb8>
  46ef0c:	sub	w11, w9, #0x30
  46ef10:	cmp	w11, #0x9
  46ef14:	b.hi	46f004 <feof@plt+0x6b764>  // b.pmore
  46ef18:	mov	w11, #0x2f                  	// #47
  46ef1c:	mov	w12, #0x6667                	// #26215
  46ef20:	mov	w10, wzr
  46ef24:	movk	w11, #0x8000, lsl #16
  46ef28:	add	x8, x8, #0x3
  46ef2c:	movk	w12, #0x6666, lsl #16
  46ef30:	mov	w13, #0xa                   	// #10
  46ef34:	and	w14, w9, #0xff
  46ef38:	sub	w9, w11, w14
  46ef3c:	smull	x9, w9, w12
  46ef40:	lsr	x15, x9, #63
  46ef44:	asr	x9, x9, #34
  46ef48:	add	w9, w9, w15
  46ef4c:	cmp	w10, w9
  46ef50:	b.gt	46f854 <feof@plt+0x6bfb4>
  46ef54:	str	x8, [x23]
  46ef58:	ldrb	w9, [x8], #1
  46ef5c:	madd	w10, w10, w13, w14
  46ef60:	sub	w10, w10, #0x30
  46ef64:	sub	w14, w9, #0x30
  46ef68:	cmp	w14, #0xa
  46ef6c:	b.cc	46ef34 <feof@plt+0x6b694>  // b.lo, b.ul, b.last
  46ef70:	cmn	w10, #0x1
  46ef74:	b.lt	46f854 <feof@plt+0x6bfb4>  // b.tstop
  46ef78:	add	w11, w10, #0x1
  46ef7c:	sub	x10, x8, #0x1
  46ef80:	cmp	w9, #0x5f
  46ef84:	b.ne	46f854 <feof@plt+0x6bfb4>  // b.any
  46ef88:	b	46f010 <feof@plt+0x6b770>
  46ef8c:	mov	x0, x19
  46ef90:	bl	46aef4 <feof@plt+0x67654>
  46ef94:	cbnz	x0, 46f2ac <feof@plt+0x6ba0c>
  46ef98:	b	46f854 <feof@plt+0x6bfb4>
  46ef9c:	mov	x20, xzr
  46efa0:	mov	x10, x8
  46efa4:	ldrb	w9, [x10, #1]!
  46efa8:	cbz	w9, 46f854 <feof@plt+0x6bfb4>
  46efac:	str	xzr, [sp, #8]
  46efb0:	ldrb	w8, [x8]
  46efb4:	cmp	w8, #0x45
  46efb8:	b.ne	46f1d4 <feof@plt+0x6b934>  // b.any
  46efbc:	ldp	w9, w8, [x19, #40]
  46efc0:	str	x10, [x19, #24]
  46efc4:	sxtw	x9, w9
  46efc8:	cmp	w9, w8
  46efcc:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46efd0:	ldr	x10, [x19, #32]
  46efd4:	mov	w8, #0x18                  	// #24
  46efd8:	add	w11, w9, #0x1
  46efdc:	madd	x8, x9, x8, x10
  46efe0:	str	wzr, [x8, #4]
  46efe4:	str	w11, [x19, #40]
  46efe8:	cbz	x10, 46f854 <feof@plt+0x6bfb4>
  46efec:	mov	w12, #0x18                  	// #24
  46eff0:	mov	w11, #0x2e                  	// #46
  46eff4:	madd	x9, x9, x12, x10
  46eff8:	str	w11, [x8]
  46effc:	stp	xzr, xzr, [x9, #8]
  46f000:	b	46f25c <feof@plt+0x6b9bc>
  46f004:	mov	w11, #0x1                   	// #1
  46f008:	cmp	w9, #0x5f
  46f00c:	b.ne	46f854 <feof@plt+0x6bfb4>  // b.any
  46f010:	mvn	w9, w11
  46f014:	add	x8, x10, #0x1
  46f018:	tst	w9, #0x7fffffff
  46f01c:	str	x8, [x23]
  46f020:	b.eq	46f854 <feof@plt+0x6bfb4>  // b.none
  46f024:	b	46eec0 <feof@plt+0x6b620>
  46f028:	cbz	x21, 46f06c <feof@plt+0x6b7cc>
  46f02c:	ldrb	w8, [x21]
  46f030:	cmp	w8, #0x70
  46f034:	b.eq	46f040 <feof@plt+0x6b7a0>  // b.none
  46f038:	cmp	w8, #0x6d
  46f03c:	b.ne	46f298 <feof@plt+0x6b9f8>  // b.any
  46f040:	ldrb	w9, [x21, #1]
  46f044:	cmp	w9, w8
  46f048:	b.ne	46f298 <feof@plt+0x6b9f8>  // b.any
  46f04c:	ldr	x8, [x23]
  46f050:	ldrb	w9, [x8]
  46f054:	cmp	w9, #0x5f
  46f058:	b.ne	46f638 <feof@plt+0x6bd98>  // b.any
  46f05c:	mov	w22, wzr
  46f060:	add	x8, x8, #0x1
  46f064:	str	x8, [x23]
  46f068:	b	46f63c <feof@plt+0x6bd9c>
  46f06c:	mov	w22, wzr
  46f070:	mov	x0, x19
  46f074:	bl	46e93c <feof@plt+0x6b09c>
  46f078:	cbz	w22, 46f2a8 <feof@plt+0x6ba08>
  46f07c:	cbz	x0, 46f854 <feof@plt+0x6bfb4>
  46f080:	ldp	w8, w9, [x19, #40]
  46f084:	sxtw	x8, w8
  46f088:	cmp	w8, w9
  46f08c:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46f090:	ldr	x9, [x19, #32]
  46f094:	mov	w10, #0x18                  	// #24
  46f098:	add	w11, w8, #0x1
  46f09c:	madd	x10, x8, x10, x9
  46f0a0:	str	wzr, [x10, #4]
  46f0a4:	str	w11, [x19, #40]
  46f0a8:	cbz	x9, 46f854 <feof@plt+0x6bfb4>
  46f0ac:	mov	w12, #0x18                  	// #24
  46f0b0:	mov	w11, #0x39                  	// #57
  46f0b4:	madd	x8, x8, x12, x9
  46f0b8:	str	w11, [x10]
  46f0bc:	stp	x0, x0, [x8, #8]
  46f0c0:	mov	x0, x10
  46f0c4:	b	46f2ac <feof@plt+0x6ba0c>
  46f0c8:	cbz	x21, 46f858 <feof@plt+0x6bfb8>
  46f0cc:	ldr	x8, [x20, #8]
  46f0d0:	ldr	x8, [x8]
  46f0d4:	ldrb	w9, [x8, #1]
  46f0d8:	cmp	w9, #0x63
  46f0dc:	b.ne	46f2f0 <feof@plt+0x6ba50>  // b.any
  46f0e0:	ldrb	w8, [x8]
  46f0e4:	sub	w8, w8, #0x63
  46f0e8:	cmp	w8, #0x10
  46f0ec:	b.hi	46f2f0 <feof@plt+0x6ba50>  // b.pmore
  46f0f0:	mov	w9, #0x1                   	// #1
  46f0f4:	lsl	w8, w9, w8
  46f0f8:	mov	w9, #0x8003                	// #32771
  46f0fc:	movk	w9, #0x1, lsl #16
  46f100:	tst	w8, w9
  46f104:	b.eq	46f2f0 <feof@plt+0x6ba50>  // b.none
  46f108:	mov	x0, x19
  46f10c:	bl	46aef4 <feof@plt+0x67654>
  46f110:	b	46f404 <feof@plt+0x6bb64>
  46f114:	cbz	x21, 46f858 <feof@plt+0x6bfb8>
  46f118:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46f11c:	add	x1, x1, #0xa31
  46f120:	mov	x0, x21
  46f124:	bl	403640 <strcmp@plt>
  46f128:	cbz	w0, 46f310 <feof@plt+0x6ba70>
  46f12c:	ldrb	w8, [x21]
  46f130:	cmp	w8, #0x6e
  46f134:	b.eq	46f534 <feof@plt+0x6bc94>  // b.none
  46f138:	cmp	w8, #0x66
  46f13c:	b.ne	46f854 <feof@plt+0x6bfb4>  // b.any
  46f140:	mov	x0, x19
  46f144:	bl	46e4b8 <feof@plt+0x6ac18>
  46f148:	b	46f318 <feof@plt+0x6ba78>
  46f14c:	add	x21, sp, #0x8
  46f150:	mov	w22, #0x1                   	// #1
  46f154:	mov	w24, #0x18                  	// #24
  46f158:	mov	w25, #0x2e                  	// #46
  46f15c:	ldr	w26, [x19, #76]
  46f160:	mov	x0, x19
  46f164:	str	w22, [x19, #76]
  46f168:	bl	46e93c <feof@plt+0x6b09c>
  46f16c:	str	w26, [x19, #76]
  46f170:	cbz	x0, 46f2a8 <feof@plt+0x6ba08>
  46f174:	ldp	w8, w9, [x19, #40]
  46f178:	sxtw	x8, w8
  46f17c:	cmp	w8, w9
  46f180:	b.ge	46f2a0 <feof@plt+0x6ba00>  // b.tcont
  46f184:	ldr	x10, [x19, #32]
  46f188:	add	w11, w8, #0x1
  46f18c:	madd	x9, x8, x24, x10
  46f190:	str	wzr, [x9, #4]
  46f194:	str	w11, [x19, #40]
  46f198:	cbz	x10, 46f2a0 <feof@plt+0x6ba00>
  46f19c:	madd	x10, x8, x24, x10
  46f1a0:	str	w25, [x9]
  46f1a4:	str	xzr, [x10, #16]!
  46f1a8:	stur	x0, [x10, #-8]
  46f1ac:	str	x9, [x21]
  46f1b0:	ldr	x8, [x23]
  46f1b4:	mov	x21, x10
  46f1b8:	ldrb	w9, [x8]
  46f1bc:	cmp	w9, #0x45
  46f1c0:	b.ne	46f15c <feof@plt+0x6b8bc>  // b.any
  46f1c4:	add	x8, x8, #0x1
  46f1c8:	str	x8, [x23]
  46f1cc:	ldr	x0, [sp, #8]
  46f1d0:	b	46f2a8 <feof@plt+0x6ba08>
  46f1d4:	add	x21, sp, #0x8
  46f1d8:	mov	w22, #0x1                   	// #1
  46f1dc:	mov	w24, #0x18                  	// #24
  46f1e0:	mov	w25, #0x2e                  	// #46
  46f1e4:	ldr	w26, [x19, #76]
  46f1e8:	mov	x0, x19
  46f1ec:	str	w22, [x19, #76]
  46f1f0:	bl	46e93c <feof@plt+0x6b09c>
  46f1f4:	str	w26, [x19, #76]
  46f1f8:	cbz	x0, 46f854 <feof@plt+0x6bfb4>
  46f1fc:	ldp	w8, w9, [x19, #40]
  46f200:	sxtw	x8, w8
  46f204:	cmp	w8, w9
  46f208:	b.ge	46f308 <feof@plt+0x6ba68>  // b.tcont
  46f20c:	ldr	x10, [x19, #32]
  46f210:	add	w11, w8, #0x1
  46f214:	madd	x9, x8, x24, x10
  46f218:	str	wzr, [x9, #4]
  46f21c:	str	w11, [x19, #40]
  46f220:	cbz	x10, 46f308 <feof@plt+0x6ba68>
  46f224:	madd	x10, x8, x24, x10
  46f228:	str	w25, [x9]
  46f22c:	str	xzr, [x10, #16]!
  46f230:	stur	x0, [x10, #-8]
  46f234:	str	x9, [x21]
  46f238:	ldr	x8, [x23]
  46f23c:	mov	x21, x10
  46f240:	ldrb	w9, [x8]
  46f244:	cmp	w9, #0x45
  46f248:	b.ne	46f1e4 <feof@plt+0x6b944>  // b.any
  46f24c:	add	x8, x8, #0x1
  46f250:	str	x8, [x23]
  46f254:	ldr	x8, [sp, #8]
  46f258:	cbz	x8, 46f854 <feof@plt+0x6bfb4>
  46f25c:	ldp	w9, w10, [x19, #40]
  46f260:	sxtw	x9, w9
  46f264:	cmp	w9, w10
  46f268:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46f26c:	ldr	x10, [x19, #32]
  46f270:	mov	w11, #0x18                  	// #24
  46f274:	add	w12, w9, #0x1
  46f278:	madd	x21, x9, x11, x10
  46f27c:	str	wzr, [x21, #4]
  46f280:	str	w12, [x19, #40]
  46f284:	cbz	x10, 46f854 <feof@plt+0x6bfb4>
  46f288:	mov	w11, #0x31                  	// #49
  46f28c:	b	46f6e4 <feof@plt+0x6be44>
  46f290:	mov	x0, xzr
  46f294:	b	46f2a8 <feof@plt+0x6ba08>
  46f298:	mov	w22, wzr
  46f29c:	b	46f63c <feof@plt+0x6bd9c>
  46f2a0:	mov	x0, xzr
  46f2a4:	str	xzr, [x21]
  46f2a8:	cbz	x0, 46f854 <feof@plt+0x6bfb4>
  46f2ac:	ldp	w8, w9, [x19, #40]
  46f2b0:	sxtw	x8, w8
  46f2b4:	cmp	w8, w9
  46f2b8:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46f2bc:	ldr	x9, [x19, #32]
  46f2c0:	mov	w10, #0x18                  	// #24
  46f2c4:	add	w11, w8, #0x1
  46f2c8:	madd	x21, x8, x10, x9
  46f2cc:	str	wzr, [x21, #4]
  46f2d0:	str	w11, [x19, #40]
  46f2d4:	cbz	x9, 46f854 <feof@plt+0x6bfb4>
  46f2d8:	mov	w11, #0x18                  	// #24
  46f2dc:	mov	w10, #0x37                  	// #55
  46f2e0:	madd	x8, x8, x11, x9
  46f2e4:	str	w10, [x21]
  46f2e8:	stp	x20, x0, [x8, #8]
  46f2ec:	b	46f858 <feof@plt+0x6bfb8>
  46f2f0:	ldrb	w8, [x21]
  46f2f4:	mov	x0, x19
  46f2f8:	cmp	w8, #0x66
  46f2fc:	b.ne	46f400 <feof@plt+0x6bb60>  // b.any
  46f300:	bl	46e4b8 <feof@plt+0x6ac18>
  46f304:	b	46f404 <feof@plt+0x6bb64>
  46f308:	str	xzr, [x21]
  46f30c:	b	46f854 <feof@plt+0x6bfb4>
  46f310:	mov	x0, x19
  46f314:	bl	46e93c <feof@plt+0x6b09c>
  46f318:	mov	x21, x0
  46f31c:	mov	x0, x19
  46f320:	bl	46e93c <feof@plt+0x6b09c>
  46f324:	mov	x22, x0
  46f328:	mov	x0, x19
  46f32c:	bl	46e93c <feof@plt+0x6b09c>
  46f330:	cbz	x0, 46f854 <feof@plt+0x6bfb4>
  46f334:	cbz	x22, 46f854 <feof@plt+0x6bfb4>
  46f338:	ldp	w9, w8, [x19, #40]
  46f33c:	sxtw	x9, w9
  46f340:	cmp	w9, w8
  46f344:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46f348:	ldr	x10, [x19, #32]
  46f34c:	mov	w8, #0x18                  	// #24
  46f350:	add	w11, w9, #0x1
  46f354:	madd	x8, x9, x8, x10
  46f358:	str	wzr, [x8, #4]
  46f35c:	str	w11, [x19, #40]
  46f360:	cbz	x10, 46f854 <feof@plt+0x6bfb4>
  46f364:	mov	w12, #0x18                  	// #24
  46f368:	mov	w11, #0x3c                  	// #60
  46f36c:	madd	x9, x9, x12, x10
  46f370:	str	w11, [x8]
  46f374:	stp	x22, x0, [x9, #8]
  46f378:	cbz	x21, 46f858 <feof@plt+0x6bfb8>
  46f37c:	ldp	w10, w9, [x19, #40]
  46f380:	sxtw	x10, w10
  46f384:	cmp	w10, w9
  46f388:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46f38c:	ldr	x11, [x19, #32]
  46f390:	mov	w9, #0x18                  	// #24
  46f394:	add	w12, w10, #0x1
  46f398:	madd	x9, x10, x9, x11
  46f39c:	str	wzr, [x9, #4]
  46f3a0:	str	w12, [x19, #40]
  46f3a4:	cbz	x11, 46f854 <feof@plt+0x6bfb4>
  46f3a8:	mov	w13, #0x18                  	// #24
  46f3ac:	mov	w12, #0x3b                  	// #59
  46f3b0:	madd	x10, x10, x13, x11
  46f3b4:	str	w12, [x9]
  46f3b8:	stp	x21, x8, [x10, #8]
  46f3bc:	ldp	w8, w10, [x19, #40]
  46f3c0:	sxtw	x8, w8
  46f3c4:	cmp	w8, w10
  46f3c8:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46f3cc:	ldr	x10, [x19, #32]
  46f3d0:	mov	w11, #0x18                  	// #24
  46f3d4:	add	w12, w8, #0x1
  46f3d8:	madd	x21, x8, x11, x10
  46f3dc:	str	wzr, [x21, #4]
  46f3e0:	str	w12, [x19, #40]
  46f3e4:	cbz	x10, 46f854 <feof@plt+0x6bfb4>
  46f3e8:	mov	w12, #0x18                  	// #24
  46f3ec:	mov	w11, #0x3a                  	// #58
  46f3f0:	madd	x8, x8, x12, x10
  46f3f4:	str	w11, [x21]
  46f3f8:	stp	x20, x9, [x8, #8]
  46f3fc:	b	46f858 <feof@plt+0x6bfb8>
  46f400:	bl	46e93c <feof@plt+0x6b09c>
  46f404:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46f408:	mov	x22, x0
  46f40c:	add	x1, x1, #0x9b8
  46f410:	mov	x0, x21
  46f414:	bl	403640 <strcmp@plt>
  46f418:	cbz	w0, 46f4d4 <feof@plt+0x6bc34>
  46f41c:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46f420:	add	x1, x1, #0x9e9
  46f424:	mov	x0, x21
  46f428:	bl	403640 <strcmp@plt>
  46f42c:	cbz	w0, 46f454 <feof@plt+0x6bbb4>
  46f430:	adrp	x1, 4b4000 <_obstack_memory_used@@Base+0x382fc>
  46f434:	add	x1, x1, #0xebb
  46f438:	mov	x0, x21
  46f43c:	bl	403640 <strcmp@plt>
  46f440:	cbz	w0, 46f454 <feof@plt+0x6bbb4>
  46f444:	mov	x0, x19
  46f448:	bl	46e93c <feof@plt+0x6b09c>
  46f44c:	mov	x23, x0
  46f450:	b	46f668 <feof@plt+0x6bdc8>
  46f454:	mov	x0, x19
  46f458:	bl	46db34 <feof@plt+0x6a294>
  46f45c:	ldr	x8, [x19, #24]
  46f460:	mov	x23, x0
  46f464:	ldrb	w9, [x8]
  46f468:	cmp	w9, #0x49
  46f46c:	b.ne	46f668 <feof@plt+0x6bdc8>  // b.any
  46f470:	add	x8, x8, #0x1
  46f474:	mov	x0, x19
  46f478:	str	x8, [x19, #24]
  46f47c:	bl	46e820 <feof@plt+0x6af80>
  46f480:	mov	x21, xzr
  46f484:	cbz	x23, 46f858 <feof@plt+0x6bfb8>
  46f488:	cbz	x0, 46f858 <feof@plt+0x6bfb8>
  46f48c:	ldp	w8, w9, [x19, #40]
  46f490:	sxtw	x8, w8
  46f494:	cmp	w8, w9
  46f498:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46f49c:	ldr	x9, [x19, #32]
  46f4a0:	mov	w10, #0x18                  	// #24
  46f4a4:	add	w11, w8, #0x1
  46f4a8:	madd	x10, x8, x10, x9
  46f4ac:	str	wzr, [x10, #4]
  46f4b0:	str	w11, [x19, #40]
  46f4b4:	cbz	x9, 46f854 <feof@plt+0x6bfb4>
  46f4b8:	mov	w12, #0x18                  	// #24
  46f4bc:	mov	w11, #0x4                   	// #4
  46f4c0:	madd	x8, x8, x12, x9
  46f4c4:	str	w11, [x10]
  46f4c8:	stp	x23, x0, [x8, #8]
  46f4cc:	mov	x23, x10
  46f4d0:	b	46f668 <feof@plt+0x6bdc8>
  46f4d4:	str	xzr, [sp, #8]
  46f4d8:	ldr	x9, [x23]
  46f4dc:	ldrb	w8, [x9]
  46f4e0:	cmp	w8, #0x45
  46f4e4:	b.ne	46f5a8 <feof@plt+0x6bd08>  // b.any
  46f4e8:	ldp	w8, w10, [x19, #40]
  46f4ec:	add	x9, x9, #0x1
  46f4f0:	sxtw	x8, w8
  46f4f4:	str	x9, [x19, #24]
  46f4f8:	cmp	w8, w10
  46f4fc:	b.ge	46f630 <feof@plt+0x6bd90>  // b.tcont
  46f500:	ldr	x9, [x19, #32]
  46f504:	mov	w10, #0x18                  	// #24
  46f508:	add	w11, w8, #0x1
  46f50c:	madd	x23, x8, x10, x9
  46f510:	str	wzr, [x23, #4]
  46f514:	str	w11, [x19, #40]
  46f518:	cbz	x9, 46f630 <feof@plt+0x6bd90>
  46f51c:	mov	w11, #0x18                  	// #24
  46f520:	mov	w10, #0x2e                  	// #46
  46f524:	madd	x8, x8, x11, x9
  46f528:	str	w10, [x23]
  46f52c:	stp	xzr, xzr, [x8, #8]
  46f530:	b	46f668 <feof@plt+0x6bdc8>
  46f534:	ldrb	w8, [x21, #1]
  46f538:	cmp	w8, #0x77
  46f53c:	b.eq	46f548 <feof@plt+0x6bca8>  // b.none
  46f540:	cmp	w8, #0x61
  46f544:	b.ne	46f854 <feof@plt+0x6bfb4>  // b.any
  46f548:	str	xzr, [sp, #8]
  46f54c:	ldr	x9, [x23]
  46f550:	ldrb	w8, [x9]
  46f554:	cmp	w8, #0x5f
  46f558:	b.ne	46f6f8 <feof@plt+0x6be58>  // b.any
  46f55c:	ldp	w8, w10, [x19, #40]
  46f560:	add	x9, x9, #0x1
  46f564:	sxtw	x8, w8
  46f568:	str	x9, [x19, #24]
  46f56c:	cmp	w8, w10
  46f570:	b.ge	46f780 <feof@plt+0x6bee0>  // b.tcont
  46f574:	ldr	x9, [x19, #32]
  46f578:	mov	w10, #0x18                  	// #24
  46f57c:	add	w11, w8, #0x1
  46f580:	madd	x21, x8, x10, x9
  46f584:	str	wzr, [x21, #4]
  46f588:	str	w11, [x19, #40]
  46f58c:	cbz	x9, 46f780 <feof@plt+0x6bee0>
  46f590:	mov	w11, #0x18                  	// #24
  46f594:	mov	w10, #0x2e                  	// #46
  46f598:	madd	x8, x8, x11, x9
  46f59c:	str	w10, [x21]
  46f5a0:	stp	xzr, xzr, [x8, #8]
  46f5a4:	b	46f790 <feof@plt+0x6bef0>
  46f5a8:	add	x21, sp, #0x8
  46f5ac:	mov	w24, #0x1                   	// #1
  46f5b0:	mov	w25, #0x18                  	// #24
  46f5b4:	mov	w26, #0x2e                  	// #46
  46f5b8:	ldr	w27, [x19, #76]
  46f5bc:	mov	x0, x19
  46f5c0:	str	w24, [x19, #76]
  46f5c4:	bl	46e93c <feof@plt+0x6b09c>
  46f5c8:	str	w27, [x19, #76]
  46f5cc:	cbz	x0, 46f630 <feof@plt+0x6bd90>
  46f5d0:	ldp	w8, w9, [x19, #40]
  46f5d4:	sxtw	x8, w8
  46f5d8:	cmp	w8, w9
  46f5dc:	b.ge	46f660 <feof@plt+0x6bdc0>  // b.tcont
  46f5e0:	ldr	x10, [x19, #32]
  46f5e4:	add	w11, w8, #0x1
  46f5e8:	madd	x9, x8, x25, x10
  46f5ec:	str	wzr, [x9, #4]
  46f5f0:	str	w11, [x19, #40]
  46f5f4:	cbz	x10, 46f660 <feof@plt+0x6bdc0>
  46f5f8:	madd	x10, x8, x25, x10
  46f5fc:	str	w26, [x9]
  46f600:	str	xzr, [x10, #16]!
  46f604:	stur	x0, [x10, #-8]
  46f608:	str	x9, [x21]
  46f60c:	ldr	x8, [x23]
  46f610:	mov	x21, x10
  46f614:	ldrb	w9, [x8]
  46f618:	cmp	w9, #0x45
  46f61c:	b.ne	46f5b8 <feof@plt+0x6bd18>  // b.any
  46f620:	add	x8, x8, #0x1
  46f624:	str	x8, [x23]
  46f628:	ldr	x23, [sp, #8]
  46f62c:	b	46f668 <feof@plt+0x6bdc8>
  46f630:	mov	x23, xzr
  46f634:	b	46f668 <feof@plt+0x6bdc8>
  46f638:	mov	w22, #0x1                   	// #1
  46f63c:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  46f640:	add	x1, x1, #0xa4b
  46f644:	mov	x0, x21
  46f648:	bl	403640 <strcmp@plt>
  46f64c:	cbnz	w0, 46f070 <feof@plt+0x6b7d0>
  46f650:	mov	x0, x19
  46f654:	bl	46e820 <feof@plt+0x6af80>
  46f658:	cbnz	w22, 46f07c <feof@plt+0x6b7dc>
  46f65c:	b	46f2a8 <feof@plt+0x6ba08>
  46f660:	mov	x23, xzr
  46f664:	str	xzr, [x21]
  46f668:	mov	x21, xzr
  46f66c:	cbz	x22, 46f858 <feof@plt+0x6bfb8>
  46f670:	cbz	x23, 46f858 <feof@plt+0x6bfb8>
  46f674:	ldp	w9, w8, [x19, #40]
  46f678:	sxtw	x9, w9
  46f67c:	cmp	w9, w8
  46f680:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46f684:	ldr	x10, [x19, #32]
  46f688:	mov	w8, #0x18                  	// #24
  46f68c:	add	w11, w9, #0x1
  46f690:	madd	x8, x9, x8, x10
  46f694:	str	wzr, [x8, #4]
  46f698:	str	w11, [x19, #40]
  46f69c:	cbz	x10, 46f854 <feof@plt+0x6bfb4>
  46f6a0:	mov	w12, #0x18                  	// #24
  46f6a4:	mov	w11, #0x39                  	// #57
  46f6a8:	madd	x9, x9, x12, x10
  46f6ac:	str	w11, [x8]
  46f6b0:	stp	x22, x23, [x9, #8]
  46f6b4:	ldp	w9, w10, [x19, #40]
  46f6b8:	sxtw	x9, w9
  46f6bc:	cmp	w9, w10
  46f6c0:	b.ge	46f854 <feof@plt+0x6bfb4>  // b.tcont
  46f6c4:	ldr	x10, [x19, #32]
  46f6c8:	mov	w11, #0x18                  	// #24
  46f6cc:	add	w12, w9, #0x1
  46f6d0:	madd	x21, x9, x11, x10
  46f6d4:	str	wzr, [x21, #4]
  46f6d8:	str	w12, [x19, #40]
  46f6dc:	cbz	x10, 46f854 <feof@plt+0x6bfb4>
  46f6e0:	mov	w11, #0x38                  	// #56
  46f6e4:	mov	w12, #0x18                  	// #24
  46f6e8:	madd	x9, x9, x12, x10
  46f6ec:	str	w11, [x21]
  46f6f0:	stp	x20, x8, [x9, #8]
  46f6f4:	b	46f858 <feof@plt+0x6bfb8>
  46f6f8:	add	x22, sp, #0x8
  46f6fc:	mov	w21, #0x1                   	// #1
  46f700:	mov	w24, #0x18                  	// #24
  46f704:	mov	w25, #0x2e                  	// #46
  46f708:	ldr	w26, [x19, #76]
  46f70c:	mov	x0, x19
  46f710:	str	w21, [x19, #76]
  46f714:	bl	46e93c <feof@plt+0x6b09c>
  46f718:	str	w26, [x19, #76]
  46f71c:	cbz	x0, 46f780 <feof@plt+0x6bee0>
  46f720:	ldp	w8, w9, [x19, #40]
  46f724:	sxtw	x8, w8
  46f728:	cmp	w8, w9
  46f72c:	b.ge	46f788 <feof@plt+0x6bee8>  // b.tcont
  46f730:	ldr	x10, [x19, #32]
  46f734:	add	w11, w8, #0x1
  46f738:	madd	x9, x8, x24, x10
  46f73c:	str	wzr, [x9, #4]
  46f740:	str	w11, [x19, #40]
  46f744:	cbz	x10, 46f788 <feof@plt+0x6bee8>
  46f748:	madd	x10, x8, x24, x10
  46f74c:	str	w25, [x9]
  46f750:	str	xzr, [x10, #16]!
  46f754:	stur	x0, [x10, #-8]
  46f758:	str	x9, [x22]
  46f75c:	ldr	x8, [x23]
  46f760:	mov	x22, x10
  46f764:	ldrb	w9, [x8]
  46f768:	cmp	w9, #0x5f
  46f76c:	b.ne	46f708 <feof@plt+0x6be68>  // b.any
  46f770:	add	x8, x8, #0x1
  46f774:	str	x8, [x23]
  46f778:	ldr	x21, [sp, #8]
  46f77c:	b	46f790 <feof@plt+0x6bef0>
  46f780:	mov	x21, xzr
  46f784:	b	46f790 <feof@plt+0x6bef0>
  46f788:	mov	x21, xzr
  46f78c:	str	xzr, [x22]
  46f790:	mov	x0, x19
  46f794:	bl	46aef4 <feof@plt+0x67654>
  46f798:	ldr	x8, [x19, #24]
  46f79c:	mov	x22, x0
  46f7a0:	ldrb	w9, [x8]
  46f7a4:	cmp	w9, #0x70
  46f7a8:	b.eq	46f7cc <feof@plt+0x6bf2c>  // b.none
  46f7ac:	cmp	w9, #0x69
  46f7b0:	b.eq	46f83c <feof@plt+0x6bf9c>  // b.none
  46f7b4:	cmp	w9, #0x45
  46f7b8:	b.ne	46f854 <feof@plt+0x6bfb4>  // b.any
  46f7bc:	add	x8, x8, #0x1
  46f7c0:	mov	x0, xzr
  46f7c4:	str	x8, [x23]
  46f7c8:	b	46f334 <feof@plt+0x6ba94>
  46f7cc:	ldrb	w9, [x8, #1]
  46f7d0:	cmp	w9, #0x69
  46f7d4:	b.ne	46f854 <feof@plt+0x6bfb4>  // b.any
  46f7d8:	add	x9, x8, #0x2
  46f7dc:	str	x9, [x23]
  46f7e0:	str	xzr, [sp, #8]
  46f7e4:	ldrb	w9, [x8, #2]
  46f7e8:	cmp	w9, #0x45
  46f7ec:	b.ne	46f87c <feof@plt+0x6bfdc>  // b.any
  46f7f0:	ldp	w9, w10, [x19, #40]
  46f7f4:	add	x8, x8, #0x3
  46f7f8:	sxtw	x9, w9
  46f7fc:	str	x8, [x19, #24]
  46f800:	cmp	w9, w10
  46f804:	b.ge	46f904 <feof@plt+0x6c064>  // b.tcont
  46f808:	ldr	x8, [x19, #32]
  46f80c:	mov	w10, #0x18                  	// #24
  46f810:	add	w11, w9, #0x1
  46f814:	madd	x0, x9, x10, x8
  46f818:	str	wzr, [x0, #4]
  46f81c:	str	w11, [x19, #40]
  46f820:	cbz	x8, 46f904 <feof@plt+0x6c064>
  46f824:	mov	w11, #0x18                  	// #24
  46f828:	mov	w10, #0x2e                  	// #46
  46f82c:	madd	x8, x9, x11, x8
  46f830:	str	w10, [x0]
  46f834:	stp	xzr, xzr, [x8, #8]
  46f838:	b	46f334 <feof@plt+0x6ba94>
  46f83c:	ldrb	w8, [x8, #1]
  46f840:	cmp	w8, #0x6c
  46f844:	b.ne	46f854 <feof@plt+0x6bfb4>  // b.any
  46f848:	mov	x0, x19
  46f84c:	bl	46e93c <feof@plt+0x6b09c>
  46f850:	b	46f334 <feof@plt+0x6ba94>
  46f854:	mov	x21, xzr
  46f858:	mov	x0, x21
  46f85c:	ldp	x20, x19, [sp, #96]
  46f860:	ldp	x22, x21, [sp, #80]
  46f864:	ldp	x24, x23, [sp, #64]
  46f868:	ldp	x26, x25, [sp, #48]
  46f86c:	ldp	x28, x27, [sp, #32]
  46f870:	ldp	x29, x30, [sp, #16]
  46f874:	add	sp, sp, #0x70
  46f878:	ret
  46f87c:	add	x24, sp, #0x8
  46f880:	mov	w25, #0x1                   	// #1
  46f884:	mov	w26, #0x18                  	// #24
  46f888:	mov	w27, #0x2e                  	// #46
  46f88c:	ldr	w28, [x19, #76]
  46f890:	mov	x0, x19
  46f894:	str	w25, [x19, #76]
  46f898:	bl	46e93c <feof@plt+0x6b09c>
  46f89c:	str	w28, [x19, #76]
  46f8a0:	cbz	x0, 46f334 <feof@plt+0x6ba94>
  46f8a4:	ldp	w8, w9, [x19, #40]
  46f8a8:	sxtw	x8, w8
  46f8ac:	cmp	w8, w9
  46f8b0:	b.ge	46f90c <feof@plt+0x6c06c>  // b.tcont
  46f8b4:	ldr	x10, [x19, #32]
  46f8b8:	add	w11, w8, #0x1
  46f8bc:	madd	x9, x8, x26, x10
  46f8c0:	str	wzr, [x9, #4]
  46f8c4:	str	w11, [x19, #40]
  46f8c8:	cbz	x10, 46f90c <feof@plt+0x6c06c>
  46f8cc:	madd	x10, x8, x26, x10
  46f8d0:	str	w27, [x9]
  46f8d4:	str	xzr, [x10, #16]!
  46f8d8:	stur	x0, [x10, #-8]
  46f8dc:	str	x9, [x24]
  46f8e0:	ldr	x8, [x23]
  46f8e4:	mov	x24, x10
  46f8e8:	ldrb	w9, [x8]
  46f8ec:	cmp	w9, #0x45
  46f8f0:	b.ne	46f88c <feof@plt+0x6bfec>  // b.any
  46f8f4:	add	x8, x8, #0x1
  46f8f8:	str	x8, [x23]
  46f8fc:	ldr	x0, [sp, #8]
  46f900:	b	46f334 <feof@plt+0x6ba94>
  46f904:	mov	x0, xzr
  46f908:	b	46f334 <feof@plt+0x6ba94>
  46f90c:	mov	x0, xzr
  46f910:	str	xzr, [x24]
  46f914:	b	46f334 <feof@plt+0x6ba94>
  46f918:	stp	x29, x30, [sp, #-32]!
  46f91c:	stp	x20, x19, [sp, #16]
  46f920:	mov	x29, sp
  46f924:	cbz	x1, 46f9dc <feof@plt+0x6c13c>
  46f928:	adrp	x8, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46f92c:	mov	x20, x1
  46f930:	mov	x19, x0
  46f934:	add	x8, x8, #0xa81
  46f938:	b	46f948 <feof@plt+0x6c0a8>
  46f93c:	add	x9, x20, #0x10
  46f940:	ldr	x20, [x9]
  46f944:	cbz	x20, 46f9dc <feof@plt+0x6c13c>
  46f948:	ldr	w9, [x20]
  46f94c:	sub	w9, w9, #0x1
  46f950:	cmp	w9, #0x4f
  46f954:	b.hi	46f9dc <feof@plt+0x6c13c>  // b.pmore
  46f958:	adr	x10, 46f93c <feof@plt+0x6c09c>
  46f95c:	ldrb	w11, [x8, x9]
  46f960:	add	x10, x10, x11, lsl #2
  46f964:	br	x10
  46f968:	add	x9, x20, #0x8
  46f96c:	ldr	x20, [x9]
  46f970:	cbnz	x20, 46f948 <feof@plt+0x6c0a8>
  46f974:	b	46f9dc <feof@plt+0x6c13c>
  46f978:	ldr	x8, [x20, #8]
  46f97c:	ldr	w8, [x8]
  46f980:	cmp	w8, #0x5
  46f984:	b.ne	46f9a4 <feof@plt+0x6c104>  // b.any
  46f988:	ldr	w8, [x19, #348]
  46f98c:	add	w8, w8, #0x1
  46f990:	str	w8, [x19, #348]
  46f994:	b	46f9a4 <feof@plt+0x6c104>
  46f998:	ldr	w8, [x19, #364]
  46f99c:	add	w8, w8, #0x1
  46f9a0:	str	w8, [x19, #364]
  46f9a4:	ldr	w8, [x19, #308]
  46f9a8:	cmp	w8, #0x800
  46f9ac:	b.gt	46f9dc <feof@plt+0x6c13c>
  46f9b0:	add	w8, w8, #0x1
  46f9b4:	str	w8, [x19, #308]
  46f9b8:	ldr	x1, [x20, #8]
  46f9bc:	mov	x0, x19
  46f9c0:	bl	46f918 <feof@plt+0x6c078>
  46f9c4:	ldr	x1, [x20, #16]
  46f9c8:	mov	x0, x19
  46f9cc:	bl	46f918 <feof@plt+0x6c078>
  46f9d0:	ldr	w8, [x19, #308]
  46f9d4:	sub	w8, w8, #0x1
  46f9d8:	str	w8, [x19, #308]
  46f9dc:	ldp	x20, x19, [sp, #16]
  46f9e0:	ldp	x29, x30, [sp], #32
  46f9e4:	ret
  46f9e8:	sub	sp, sp, #0x100
  46f9ec:	stp	x26, x25, [sp, #192]
  46f9f0:	add	x25, x0, #0x130
  46f9f4:	stp	x29, x30, [sp, #160]
  46f9f8:	stp	x28, x27, [sp, #176]
  46f9fc:	stp	x24, x23, [sp, #208]
  46fa00:	stp	x22, x21, [sp, #224]
  46fa04:	stp	x20, x19, [sp, #240]
  46fa08:	add	x29, sp, #0xa0
  46fa0c:	cbz	x2, 4720ec <feof@plt+0x6e84c>
  46fa10:	ldr	w8, [x25]
  46fa14:	cbnz	w8, 4720f4 <feof@plt+0x6e854>
  46fa18:	ldr	w8, [x2]
  46fa1c:	mov	x21, x2
  46fa20:	cmp	w8, #0x50
  46fa24:	b.hi	4720ec <feof@plt+0x6e84c>  // b.pmore
  46fa28:	adrp	x9, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46fa2c:	add	x9, x9, #0xad2
  46fa30:	adr	x10, 46fa50 <feof@plt+0x6c1b0>
  46fa34:	ldrh	w11, [x9, x8, lsl #1]
  46fa38:	add	x10, x10, x11, lsl #2
  46fa3c:	mov	w20, w1
  46fa40:	mov	x19, x0
  46fa44:	mov	w23, wzr
  46fa48:	mov	x22, xzr
  46fa4c:	br	x10
  46fa50:	ldr	x8, [x19, #296]
  46fa54:	add	x9, sp, #0x10
  46fa58:	stp	x8, x21, [sp, #16]
  46fa5c:	str	x9, [x19, #296]
  46fa60:	str	wzr, [sp, #32]
  46fa64:	ldr	x8, [x19, #288]
  46fa68:	str	x8, [sp, #40]
  46fa6c:	cbnz	x22, 46fa78 <feof@plt+0x6c1d8>
  46fa70:	ldr	x22, [x21, #8]
  46fa74:	cbz	x22, 46fa90 <feof@plt+0x6c1f0>
  46fa78:	ldr	w8, [x22, #4]
  46fa7c:	cmp	w8, #0x1
  46fa80:	b.gt	46fa90 <feof@plt+0x6c1f0>
  46fa84:	ldr	w9, [x19, #308]
  46fa88:	cmp	w9, #0x401
  46fa8c:	b.lt	46fabc <feof@plt+0x6c21c>  // b.tstop
  46fa90:	mov	w8, #0x1                   	// #1
  46fa94:	str	w8, [x25]
  46fa98:	mov	x0, x19
  46fa9c:	mov	w1, w20
  46faa0:	mov	x2, x21
  46faa4:	bl	475c80 <feof@plt+0x723e0>
  46faa8:	ldr	x8, [sp, #16]
  46faac:	str	x8, [x19, #296]
  46fab0:	cbz	w23, 4720f4 <feof@plt+0x6e854>
  46fab4:	str	x24, [x19, #288]
  46fab8:	b	4720f4 <feof@plt+0x6e854>
  46fabc:	add	w8, w8, #0x1
  46fac0:	str	w8, [x22, #4]
  46fac4:	ldr	x8, [x19, #328]
  46fac8:	add	w9, w9, #0x1
  46facc:	str	w9, [x19, #308]
  46fad0:	sub	x9, x29, #0x10
  46fad4:	mov	x0, x19
  46fad8:	mov	w1, w20
  46fadc:	mov	x2, x22
  46fae0:	stp	x22, x8, [x29, #-16]
  46fae4:	str	x9, [x19, #328]
  46fae8:	bl	46f9e8 <feof@plt+0x6c148>
  46faec:	ldur	x8, [x29, #-8]
  46faf0:	str	x8, [x19, #328]
  46faf4:	ldr	w8, [x22, #4]
  46faf8:	sub	w8, w8, #0x1
  46fafc:	str	w8, [x22, #4]
  46fb00:	ldr	w8, [x19, #308]
  46fb04:	sub	w8, w8, #0x1
  46fb08:	str	w8, [x19, #308]
  46fb0c:	ldr	w8, [sp, #32]
  46fb10:	cbnz	w8, 46faa8 <feof@plt+0x6c208>
  46fb14:	b	46fa98 <feof@plt+0x6c1f8>
  46fb18:	ldr	x9, [x19, #296]
  46fb1c:	cbnz	x9, 46fb34 <feof@plt+0x6c294>
  46fb20:	mov	w23, wzr
  46fb24:	mov	x22, xzr
  46fb28:	b	46fa50 <feof@plt+0x6c1b0>
  46fb2c:	ldr	x9, [x9]
  46fb30:	cbz	x9, 46fb20 <feof@plt+0x6c280>
  46fb34:	ldr	w10, [x9, #16]
  46fb38:	cbnz	w10, 46fb2c <feof@plt+0x6c28c>
  46fb3c:	ldr	x10, [x9, #8]
  46fb40:	ldr	w10, [x10]
  46fb44:	sub	w11, w10, #0x19
  46fb48:	cmp	w11, #0x2
  46fb4c:	b.hi	46fb20 <feof@plt+0x6c280>  // b.pmore
  46fb50:	cmp	w10, w8
  46fb54:	b.ne	46fb2c <feof@plt+0x6c28c>  // b.any
  46fb58:	b	4720cc <feof@plt+0x6e82c>
  46fb5c:	ldr	x22, [x21, #8]
  46fb60:	cbz	x22, 46fb7c <feof@plt+0x6c2dc>
  46fb64:	ldr	w8, [x22, #4]
  46fb68:	cmp	w8, #0x1
  46fb6c:	b.gt	46fb7c <feof@plt+0x6c2dc>
  46fb70:	ldr	w9, [x19, #308]
  46fb74:	cmp	w9, #0x401
  46fb78:	b.lt	472f80 <feof@plt+0x6f6e0>  // b.tstop
  46fb7c:	mov	w8, #0x1                   	// #1
  46fb80:	str	w8, [x25]
  46fb84:	tbnz	w20, #2, 472fd4 <feof@plt+0x6f734>
  46fb88:	ldr	x8, [x19, #256]
  46fb8c:	cmp	x8, #0xff
  46fb90:	b.ne	46fbbc <feof@plt+0x6c31c>  // b.any
  46fb94:	ldp	x8, x2, [x19, #272]
  46fb98:	mov	w1, #0xff                  	// #255
  46fb9c:	mov	x0, x19
  46fba0:	strb	wzr, [x19, #255]
  46fba4:	blr	x8
  46fba8:	ldr	x9, [x19, #320]
  46fbac:	mov	x8, xzr
  46fbb0:	str	xzr, [x19, #256]
  46fbb4:	add	x9, x9, #0x1
  46fbb8:	str	x9, [x19, #320]
  46fbbc:	add	x9, x8, #0x1
  46fbc0:	mov	w22, #0x3a                  	// #58
  46fbc4:	str	x9, [x19, #256]
  46fbc8:	strb	w22, [x19, x8]
  46fbcc:	ldr	x8, [x19, #256]
  46fbd0:	strb	w22, [x19, #264]
  46fbd4:	cmp	x8, #0xff
  46fbd8:	b.ne	46fc04 <feof@plt+0x6c364>  // b.any
  46fbdc:	ldp	x8, x2, [x19, #272]
  46fbe0:	mov	w1, #0xff                  	// #255
  46fbe4:	mov	x0, x19
  46fbe8:	strb	wzr, [x19, #255]
  46fbec:	blr	x8
  46fbf0:	ldr	x9, [x19, #320]
  46fbf4:	mov	x8, xzr
  46fbf8:	str	xzr, [x19, #256]
  46fbfc:	add	x9, x9, #0x1
  46fc00:	str	x9, [x19, #320]
  46fc04:	add	x9, x8, #0x1
  46fc08:	str	x9, [x19, #256]
  46fc0c:	strb	w22, [x19, x8]
  46fc10:	strb	w22, [x19, #264]
  46fc14:	b	47301c <feof@plt+0x6f77c>
  46fc18:	ldr	w10, [x19, #312]
  46fc1c:	ldr	x9, [x21, #8]
  46fc20:	cbnz	w10, 46fe80 <feof@plt+0x6c5e0>
  46fc24:	ldr	w10, [x9]
  46fc28:	cmp	w10, #0x5
  46fc2c:	b.ne	46fe80 <feof@plt+0x6c5e0>  // b.any
  46fc30:	ldr	w11, [x19, #344]
  46fc34:	cmp	w11, #0x1
  46fc38:	b.lt	46fc60 <feof@plt+0x6c3c0>  // b.tstop
  46fc3c:	ldr	x10, [x19, #336]
  46fc40:	mov	x12, x11
  46fc44:	add	x10, x10, #0x8
  46fc48:	ldur	x13, [x10, #-8]
  46fc4c:	cmp	x13, x9
  46fc50:	b.eq	473b98 <feof@plt+0x702f8>  // b.none
  46fc54:	subs	x12, x12, #0x1
  46fc58:	add	x10, x10, #0x10
  46fc5c:	b.ne	46fc48 <feof@plt+0x6c3a8>  // b.any
  46fc60:	ldr	w10, [x19, #348]
  46fc64:	cmp	w11, w10
  46fc68:	b.ge	4720ec <feof@plt+0x6e84c>  // b.tcont
  46fc6c:	ldr	x10, [x19, #336]
  46fc70:	sxtw	x11, w11
  46fc74:	add	w12, w11, #0x1
  46fc78:	str	w12, [x19, #344]
  46fc7c:	add	x10, x10, x11, lsl #4
  46fc80:	str	x9, [x10], #8
  46fc84:	ldr	x11, [x19, #288]
  46fc88:	cbz	x11, 46fcdc <feof@plt+0x6c43c>
  46fc8c:	ldrsw	x12, [x19, #360]
  46fc90:	ldrsw	x13, [x19, #364]
  46fc94:	lsl	x14, x12, #4
  46fc98:	add	w15, w12, #0x1
  46fc9c:	cmp	x12, x13
  46fca0:	b.ge	4720ec <feof@plt+0x6e84c>  // b.tcont
  46fca4:	ldr	x16, [x19, #352]
  46fca8:	str	w15, [x19, #360]
  46fcac:	ldr	x17, [x11, #8]
  46fcb0:	add	x12, x12, #0x1
  46fcb4:	add	x18, x16, x14
  46fcb8:	add	x14, x14, #0x10
  46fcbc:	str	x17, [x18, #8]
  46fcc0:	str	x18, [x10]
  46fcc4:	ldr	x11, [x11]
  46fcc8:	add	w15, w15, #0x1
  46fccc:	mov	x10, x18
  46fcd0:	cbnz	x11, 46fc9c <feof@plt+0x6c3fc>
  46fcd4:	add	x10, x16, x14
  46fcd8:	sub	x10, x10, #0x10
  46fcdc:	mov	w23, wzr
  46fce0:	str	xzr, [x10]
  46fce4:	b	473ff8 <feof@plt+0x70758>
  46fce8:	ldr	x8, [x19, #296]
  46fcec:	add	x9, sp, #0x10
  46fcf0:	stp	x8, x21, [sp, #16]
  46fcf4:	str	x9, [x19, #296]
  46fcf8:	str	wzr, [sp, #32]
  46fcfc:	ldr	x8, [x19, #288]
  46fd00:	str	x8, [sp, #40]
  46fd04:	ldr	x22, [x21, #16]
  46fd08:	cbz	x22, 46fd24 <feof@plt+0x6c484>
  46fd0c:	ldr	w8, [x22, #4]
  46fd10:	cmp	w8, #0x1
  46fd14:	b.gt	46fd24 <feof@plt+0x6c484>
  46fd18:	ldr	w9, [x19, #308]
  46fd1c:	cmp	w9, #0x401
  46fd20:	b.lt	4731fc <feof@plt+0x6f95c>  // b.tstop
  46fd24:	mov	w8, #0x1                   	// #1
  46fd28:	str	w8, [x25]
  46fd2c:	mov	x0, x19
  46fd30:	mov	w1, w20
  46fd34:	mov	x2, x21
  46fd38:	bl	475c80 <feof@plt+0x723e0>
  46fd3c:	ldr	x8, [sp, #16]
  46fd40:	str	x8, [x19, #296]
  46fd44:	b	4720f4 <feof@plt+0x6e854>
  46fd48:	ldr	x22, [x21, #8]
  46fd4c:	cbz	x22, 4732a8 <feof@plt+0x6fa08>
  46fd50:	ldr	w8, [x22, #4]
  46fd54:	cmp	w8, #0x1
  46fd58:	b.gt	46fd68 <feof@plt+0x6c4c8>
  46fd5c:	ldr	w9, [x19, #308]
  46fd60:	cmp	w9, #0x401
  46fd64:	b.lt	473258 <feof@plt+0x6f9b8>  // b.tstop
  46fd68:	mov	w8, #0x1                   	// #1
  46fd6c:	str	w8, [x25]
  46fd70:	b	4732a8 <feof@plt+0x6fa08>
  46fd74:	ldr	x9, [x21, #8]
  46fd78:	ldr	w10, [x9]
  46fd7c:	cmp	w10, #0x27
  46fd80:	b.ne	471c20 <feof@plt+0x6e380>  // b.any
  46fd84:	ldr	x9, [x9, #8]
  46fd88:	ldr	w23, [x9, #28]
  46fd8c:	sub	w9, w23, #0x1
  46fd90:	cmp	w9, #0x6
  46fd94:	b.cs	4734c0 <feof@plt+0x6fc20>  // b.hs, b.nlast
  46fd98:	ldr	x22, [x21, #16]
  46fd9c:	ldr	w9, [x22]
  46fda0:	cbnz	w9, 471c24 <feof@plt+0x6e384>
  46fda4:	cmp	w8, #0x3e
  46fda8:	b.ne	46fdf8 <feof@plt+0x6c558>  // b.any
  46fdac:	ldr	x8, [x19, #256]
  46fdb0:	cmp	x8, #0xff
  46fdb4:	b.ne	46fde0 <feof@plt+0x6c540>  // b.any
  46fdb8:	ldp	x8, x2, [x19, #272]
  46fdbc:	mov	w1, #0xff                  	// #255
  46fdc0:	mov	x0, x19
  46fdc4:	strb	wzr, [x19, #255]
  46fdc8:	blr	x8
  46fdcc:	ldr	x9, [x19, #320]
  46fdd0:	mov	x8, xzr
  46fdd4:	str	xzr, [x19, #256]
  46fdd8:	add	x9, x9, #0x1
  46fddc:	str	x9, [x19, #320]
  46fde0:	add	x9, x8, #0x1
  46fde4:	mov	w10, #0x2d                  	// #45
  46fde8:	str	x9, [x19, #256]
  46fdec:	strb	w10, [x19, x8]
  46fdf0:	strb	w10, [x19, #264]
  46fdf4:	ldr	x22, [x21, #16]
  46fdf8:	cbz	x22, 46fe14 <feof@plt+0x6c574>
  46fdfc:	ldr	w8, [x22, #4]
  46fe00:	cmp	w8, #0x1
  46fe04:	b.gt	46fe14 <feof@plt+0x6c574>
  46fe08:	ldr	w9, [x19, #308]
  46fe0c:	cmp	w9, #0x401
  46fe10:	b.lt	4744e4 <feof@plt+0x70c44>  // b.tstop
  46fe14:	mov	w8, #0x1                   	// #1
  46fe18:	str	w8, [x25]
  46fe1c:	sub	w8, w23, #0x2
  46fe20:	cmp	w8, #0x4
  46fe24:	b.hi	4720f4 <feof@plt+0x6e854>  // b.pmore
  46fe28:	adrp	x9, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46fe2c:	add	x9, x9, #0xb74
  46fe30:	adr	x10, 46fe40 <feof@plt+0x6c5a0>
  46fe34:	ldrh	w11, [x9, x8, lsl #1]
  46fe38:	add	x10, x10, x11, lsl #2
  46fe3c:	br	x10
  46fe40:	ldr	x8, [x19, #256]
  46fe44:	cmp	x8, #0xff
  46fe48:	b.ne	46fe74 <feof@plt+0x6c5d4>  // b.any
  46fe4c:	ldp	x8, x2, [x19, #272]
  46fe50:	mov	w1, #0xff                  	// #255
  46fe54:	mov	x0, x19
  46fe58:	strb	wzr, [x19, #255]
  46fe5c:	blr	x8
  46fe60:	ldr	x9, [x19, #320]
  46fe64:	mov	x8, xzr
  46fe68:	str	xzr, [x19, #256]
  46fe6c:	add	x9, x9, #0x1
  46fe70:	str	x9, [x19, #320]
  46fe74:	add	x9, x8, #0x1
  46fe78:	mov	w10, #0x75                  	// #117
  46fe7c:	b	4749e8 <feof@plt+0x71148>
  46fe80:	mov	w23, wzr
  46fe84:	ldr	w10, [x9]
  46fe88:	mov	x22, xzr
  46fe8c:	cmp	w10, #0x23
  46fe90:	b.eq	4725f8 <feof@plt+0x6ed58>  // b.none
  46fe94:	cmp	w10, w8
  46fe98:	b.eq	4725f8 <feof@plt+0x6ed58>  // b.none
  46fe9c:	cmp	w10, #0x24
  46fea0:	b.ne	472a5c <feof@plt+0x6f1bc>  // b.any
  46fea4:	ldr	x22, [x9, #8]
  46fea8:	b	46fa50 <feof@plt+0x6c1b0>
  46feac:	ldr	x22, [x21, #8]
  46feb0:	ldrsw	x21, [x21, #16]
  46feb4:	tbnz	w20, #2, 472600 <feof@plt+0x6ed60>
  46feb8:	cbnz	w21, 46fedc <feof@plt+0x6c63c>
  46febc:	b	4720f4 <feof@plt+0x6e854>
  46fec0:	add	x9, x8, #0x1
  46fec4:	subs	x21, x21, #0x1
  46fec8:	add	x22, x22, #0x1
  46fecc:	str	x9, [x19, #256]
  46fed0:	strb	w20, [x19, x8]
  46fed4:	strb	w20, [x19, #264]
  46fed8:	b.eq	4720f4 <feof@plt+0x6e854>  // b.none
  46fedc:	ldr	x8, [x19, #256]
  46fee0:	ldrb	w20, [x22]
  46fee4:	cmp	x8, #0xff
  46fee8:	b.ne	46fec0 <feof@plt+0x6c620>  // b.any
  46feec:	ldp	x8, x2, [x19, #272]
  46fef0:	mov	w1, #0xff                  	// #255
  46fef4:	mov	x0, x19
  46fef8:	strb	wzr, [x19, #255]
  46fefc:	blr	x8
  46ff00:	ldr	x9, [x19, #320]
  46ff04:	mov	x8, xzr
  46ff08:	str	xzr, [x19, #256]
  46ff0c:	add	x9, x9, #0x1
  46ff10:	str	x9, [x19, #320]
  46ff14:	b	46fec0 <feof@plt+0x6c620>
  46ff18:	ldr	x22, [x19, #296]
  46ff1c:	str	xzr, [x19, #296]
  46ff20:	ldr	x24, [x21, #8]
  46ff24:	cbz	x24, 4720ec <feof@plt+0x6e84c>
  46ff28:	ldr	x8, [x19, #288]
  46ff2c:	adrp	x10, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  46ff30:	mov	x11, xzr
  46ff34:	add	x9, sp, #0x10
  46ff38:	mov	w23, #0x1                   	// #1
  46ff3c:	add	x10, x10, #0xb7e
  46ff40:	cmp	x23, #0x5
  46ff44:	b.eq	4720ec <feof@plt+0x6e84c>  // b.none
  46ff48:	str	x11, [x9]
  46ff4c:	str	x9, [x19, #296]
  46ff50:	str	x24, [x9, #8]
  46ff54:	str	wzr, [x9, #16]
  46ff58:	str	x8, [x9, #24]
  46ff5c:	ldr	w12, [x24]
  46ff60:	sub	w11, w12, #0x2
  46ff64:	cmp	w11, #0x4e
  46ff68:	b.hi	473c4c <feof@plt+0x703ac>  // b.pmore
  46ff6c:	adr	x13, 46ff7c <feof@plt+0x6c6dc>
  46ff70:	ldrh	w14, [x10, x11, lsl #1]
  46ff74:	add	x13, x13, x14, lsl #2
  46ff78:	br	x13
  46ff7c:	ldr	x24, [x24, #8]
  46ff80:	mov	x11, x9
  46ff84:	add	x23, x23, #0x1
  46ff88:	add	x9, x9, #0x20
  46ff8c:	cbnz	x24, 46ff40 <feof@plt+0x6c6a0>
  46ff90:	b	4720ec <feof@plt+0x6e84c>
  46ff94:	ldr	x23, [x19, #368]
  46ff98:	str	x21, [x19, #368]
  46ff9c:	ldr	x24, [x19, #296]
  46ffa0:	str	xzr, [x19, #296]
  46ffa4:	ldr	x22, [x21, #8]
  46ffa8:	tbnz	w20, #2, 472758 <feof@plt+0x6eeb8>
  46ffac:	cbnz	x22, 472784 <feof@plt+0x6eee4>
  46ffb0:	b	47279c <feof@plt+0x6eefc>
  46ffb4:	ldr	w8, [x19, #312]
  46ffb8:	cbz	w8, 472a64 <feof@plt+0x6f1c4>
  46ffbc:	ldr	x8, [x19, #256]
  46ffc0:	cmp	x8, #0xff
  46ffc4:	b.ne	46fff0 <feof@plt+0x6c750>  // b.any
  46ffc8:	ldp	x8, x2, [x19, #272]
  46ffcc:	mov	w1, #0xff                  	// #255
  46ffd0:	mov	x0, x19
  46ffd4:	strb	wzr, [x19, #255]
  46ffd8:	blr	x8
  46ffdc:	ldr	x9, [x19, #320]
  46ffe0:	mov	x8, xzr
  46ffe4:	str	xzr, [x19, #256]
  46ffe8:	add	x9, x9, #0x1
  46ffec:	str	x9, [x19, #320]
  46fff0:	add	x9, x8, #0x1
  46fff4:	mov	w10, #0x61                  	// #97
  46fff8:	str	x9, [x19, #256]
  46fffc:	strb	w10, [x19, x8]
  470000:	ldr	x8, [x19, #256]
  470004:	strb	w10, [x19, #264]
  470008:	cmp	x8, #0xff
  47000c:	b.ne	470038 <feof@plt+0x6c798>  // b.any
  470010:	ldp	x8, x2, [x19, #272]
  470014:	mov	w1, #0xff                  	// #255
  470018:	mov	x0, x19
  47001c:	strb	wzr, [x19, #255]
  470020:	blr	x8
  470024:	ldr	x9, [x19, #320]
  470028:	mov	x8, xzr
  47002c:	str	xzr, [x19, #256]
  470030:	add	x9, x9, #0x1
  470034:	str	x9, [x19, #320]
  470038:	add	x9, x8, #0x1
  47003c:	mov	w10, #0x75                  	// #117
  470040:	str	x9, [x19, #256]
  470044:	strb	w10, [x19, x8]
  470048:	ldr	x8, [x19, #256]
  47004c:	strb	w10, [x19, #264]
  470050:	cmp	x8, #0xff
  470054:	b.ne	470080 <feof@plt+0x6c7e0>  // b.any
  470058:	ldp	x8, x2, [x19, #272]
  47005c:	mov	w1, #0xff                  	// #255
  470060:	mov	x0, x19
  470064:	strb	wzr, [x19, #255]
  470068:	blr	x8
  47006c:	ldr	x9, [x19, #320]
  470070:	mov	x8, xzr
  470074:	str	xzr, [x19, #256]
  470078:	add	x9, x9, #0x1
  47007c:	str	x9, [x19, #320]
  470080:	add	x9, x8, #0x1
  470084:	mov	w10, #0x74                  	// #116
  470088:	str	x9, [x19, #256]
  47008c:	strb	w10, [x19, x8]
  470090:	ldr	x8, [x19, #256]
  470094:	strb	w10, [x19, #264]
  470098:	cmp	x8, #0xff
  47009c:	b.ne	4700c8 <feof@plt+0x6c828>  // b.any
  4700a0:	ldp	x8, x2, [x19, #272]
  4700a4:	mov	w1, #0xff                  	// #255
  4700a8:	mov	x0, x19
  4700ac:	strb	wzr, [x19, #255]
  4700b0:	blr	x8
  4700b4:	ldr	x9, [x19, #320]
  4700b8:	mov	x8, xzr
  4700bc:	str	xzr, [x19, #256]
  4700c0:	add	x9, x9, #0x1
  4700c4:	str	x9, [x19, #320]
  4700c8:	add	x9, x8, #0x1
  4700cc:	mov	w10, #0x6f                  	// #111
  4700d0:	str	x9, [x19, #256]
  4700d4:	strb	w10, [x19, x8]
  4700d8:	ldr	x8, [x19, #256]
  4700dc:	strb	w10, [x19, #264]
  4700e0:	cmp	x8, #0xff
  4700e4:	b.ne	470110 <feof@plt+0x6c870>  // b.any
  4700e8:	ldp	x8, x2, [x19, #272]
  4700ec:	mov	w1, #0xff                  	// #255
  4700f0:	mov	x0, x19
  4700f4:	strb	wzr, [x19, #255]
  4700f8:	blr	x8
  4700fc:	ldr	x9, [x19, #320]
  470100:	mov	x8, xzr
  470104:	str	xzr, [x19, #256]
  470108:	add	x9, x9, #0x1
  47010c:	str	x9, [x19, #320]
  470110:	add	x9, x8, #0x1
  470114:	mov	w10, #0x3a                  	// #58
  470118:	str	x9, [x19, #256]
  47011c:	strb	w10, [x19, x8]
  470120:	strb	w10, [x19, #264]
  470124:	ldr	w8, [x21, #8]
  470128:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  47012c:	add	x1, x1, #0xadf
  470130:	add	x0, sp, #0x10
  470134:	add	w2, w8, #0x1
  470138:	bl	403340 <sprintf@plt>
  47013c:	add	x0, sp, #0x10
  470140:	bl	4030b0 <strlen@plt>
  470144:	cbz	x0, 4720f4 <feof@plt+0x6e854>
  470148:	mov	x20, x0
  47014c:	add	x21, sp, #0x10
  470150:	b	470170 <feof@plt+0x6c8d0>
  470154:	add	x9, x8, #0x1
  470158:	subs	x20, x20, #0x1
  47015c:	add	x21, x21, #0x1
  470160:	str	x9, [x19, #256]
  470164:	strb	w22, [x19, x8]
  470168:	strb	w22, [x19, #264]
  47016c:	b.eq	4720f4 <feof@plt+0x6e854>  // b.none
  470170:	ldr	x8, [x19, #256]
  470174:	ldrb	w22, [x21]
  470178:	cmp	x8, #0xff
  47017c:	b.ne	470154 <feof@plt+0x6c8b4>  // b.any
  470180:	ldp	x8, x2, [x19, #272]
  470184:	mov	w1, #0xff                  	// #255
  470188:	mov	x0, x19
  47018c:	strb	wzr, [x19, #255]
  470190:	blr	x8
  470194:	ldr	x9, [x19, #320]
  470198:	mov	x8, xzr
  47019c:	str	xzr, [x19, #256]
  4701a0:	add	x9, x9, #0x1
  4701a4:	str	x9, [x19, #320]
  4701a8:	b	470154 <feof@plt+0x6c8b4>
  4701ac:	ldr	x8, [x19, #256]
  4701b0:	ldr	x20, [x21, #8]
  4701b4:	cmp	x8, #0xff
  4701b8:	cbz	x20, 472aa4 <feof@plt+0x6f204>
  4701bc:	b.ne	4701e8 <feof@plt+0x6c948>  // b.any
  4701c0:	ldp	x8, x2, [x19, #272]
  4701c4:	mov	w1, #0xff                  	// #255
  4701c8:	mov	x0, x19
  4701cc:	strb	wzr, [x19, #255]
  4701d0:	blr	x8
  4701d4:	ldr	x9, [x19, #320]
  4701d8:	mov	x8, xzr
  4701dc:	str	xzr, [x19, #256]
  4701e0:	add	x9, x9, #0x1
  4701e4:	str	x9, [x19, #320]
  4701e8:	add	x9, x8, #0x1
  4701ec:	mov	w10, #0x7b                  	// #123
  4701f0:	str	x9, [x19, #256]
  4701f4:	strb	w10, [x19, x8]
  4701f8:	ldr	x8, [x19, #256]
  4701fc:	strb	w10, [x19, #264]
  470200:	cmp	x8, #0xff
  470204:	b.ne	470230 <feof@plt+0x6c990>  // b.any
  470208:	ldp	x8, x2, [x19, #272]
  47020c:	mov	w1, #0xff                  	// #255
  470210:	mov	x0, x19
  470214:	strb	wzr, [x19, #255]
  470218:	blr	x8
  47021c:	ldr	x9, [x19, #320]
  470220:	mov	x8, xzr
  470224:	str	xzr, [x19, #256]
  470228:	add	x9, x9, #0x1
  47022c:	str	x9, [x19, #320]
  470230:	add	x9, x8, #0x1
  470234:	mov	w10, #0x70                  	// #112
  470238:	str	x9, [x19, #256]
  47023c:	strb	w10, [x19, x8]
  470240:	ldr	x8, [x19, #256]
  470244:	strb	w10, [x19, #264]
  470248:	cmp	x8, #0xff
  47024c:	b.ne	470278 <feof@plt+0x6c9d8>  // b.any
  470250:	ldp	x8, x2, [x19, #272]
  470254:	mov	w1, #0xff                  	// #255
  470258:	mov	x0, x19
  47025c:	strb	wzr, [x19, #255]
  470260:	blr	x8
  470264:	ldr	x9, [x19, #320]
  470268:	mov	x8, xzr
  47026c:	str	xzr, [x19, #256]
  470270:	add	x9, x9, #0x1
  470274:	str	x9, [x19, #320]
  470278:	add	x9, x8, #0x1
  47027c:	mov	w10, #0x61                  	// #97
  470280:	str	x9, [x19, #256]
  470284:	strb	w10, [x19, x8]
  470288:	ldr	x8, [x19, #256]
  47028c:	strb	w10, [x19, #264]
  470290:	cmp	x8, #0xff
  470294:	b.ne	4702c0 <feof@plt+0x6ca20>  // b.any
  470298:	ldp	x8, x2, [x19, #272]
  47029c:	mov	w1, #0xff                  	// #255
  4702a0:	mov	x0, x19
  4702a4:	strb	wzr, [x19, #255]
  4702a8:	blr	x8
  4702ac:	ldr	x9, [x19, #320]
  4702b0:	mov	x8, xzr
  4702b4:	str	xzr, [x19, #256]
  4702b8:	add	x9, x9, #0x1
  4702bc:	str	x9, [x19, #320]
  4702c0:	add	x9, x8, #0x1
  4702c4:	mov	w10, #0x72                  	// #114
  4702c8:	str	x9, [x19, #256]
  4702cc:	strb	w10, [x19, x8]
  4702d0:	ldr	x8, [x19, #256]
  4702d4:	strb	w10, [x19, #264]
  4702d8:	cmp	x8, #0xff
  4702dc:	b.ne	470308 <feof@plt+0x6ca68>  // b.any
  4702e0:	ldp	x8, x2, [x19, #272]
  4702e4:	mov	w1, #0xff                  	// #255
  4702e8:	mov	x0, x19
  4702ec:	strb	wzr, [x19, #255]
  4702f0:	blr	x8
  4702f4:	ldr	x9, [x19, #320]
  4702f8:	mov	x8, xzr
  4702fc:	str	xzr, [x19, #256]
  470300:	add	x9, x9, #0x1
  470304:	str	x9, [x19, #320]
  470308:	add	x9, x8, #0x1
  47030c:	mov	w10, #0x6d                  	// #109
  470310:	str	x9, [x19, #256]
  470314:	strb	w10, [x19, x8]
  470318:	ldr	x8, [x19, #256]
  47031c:	strb	w10, [x19, #264]
  470320:	cmp	x8, #0xff
  470324:	b.ne	470350 <feof@plt+0x6cab0>  // b.any
  470328:	ldp	x8, x2, [x19, #272]
  47032c:	mov	w1, #0xff                  	// #255
  470330:	mov	x0, x19
  470334:	strb	wzr, [x19, #255]
  470338:	blr	x8
  47033c:	ldr	x9, [x19, #320]
  470340:	mov	x8, xzr
  470344:	str	xzr, [x19, #256]
  470348:	add	x9, x9, #0x1
  47034c:	str	x9, [x19, #320]
  470350:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  470354:	add	x9, x8, #0x1
  470358:	mov	w10, #0x23                  	// #35
  47035c:	add	x1, x1, #0xadf
  470360:	add	x0, sp, #0x10
  470364:	mov	w2, w20
  470368:	str	x9, [x19, #256]
  47036c:	strb	w10, [x19, x8]
  470370:	strb	w10, [x19, #264]
  470374:	bl	403340 <sprintf@plt>
  470378:	add	x0, sp, #0x10
  47037c:	bl	4030b0 <strlen@plt>
  470380:	cbz	x0, 4737f8 <feof@plt+0x6ff58>
  470384:	mov	x20, x0
  470388:	add	x21, sp, #0x10
  47038c:	b	4703ac <feof@plt+0x6cb0c>
  470390:	add	x9, x8, #0x1
  470394:	subs	x20, x20, #0x1
  470398:	add	x21, x21, #0x1
  47039c:	str	x9, [x19, #256]
  4703a0:	strb	w22, [x19, x8]
  4703a4:	strb	w22, [x19, #264]
  4703a8:	b.eq	4737f8 <feof@plt+0x6ff58>  // b.none
  4703ac:	ldr	x8, [x19, #256]
  4703b0:	ldrb	w22, [x21]
  4703b4:	cmp	x8, #0xff
  4703b8:	b.ne	470390 <feof@plt+0x6caf0>  // b.any
  4703bc:	ldp	x8, x2, [x19, #272]
  4703c0:	mov	w1, #0xff                  	// #255
  4703c4:	mov	x0, x19
  4703c8:	strb	wzr, [x19, #255]
  4703cc:	blr	x8
  4703d0:	ldr	x9, [x19, #320]
  4703d4:	mov	x8, xzr
  4703d8:	str	xzr, [x19, #256]
  4703dc:	add	x9, x9, #0x1
  4703e0:	str	x9, [x19, #320]
  4703e4:	b	470390 <feof@plt+0x6caf0>
  4703e8:	ldr	x8, [x19, #256]
  4703ec:	cmp	x8, #0xff
  4703f0:	b.ne	47041c <feof@plt+0x6cb7c>  // b.any
  4703f4:	ldp	x8, x2, [x19, #272]
  4703f8:	mov	w1, #0xff                  	// #255
  4703fc:	mov	x0, x19
  470400:	strb	wzr, [x19, #255]
  470404:	blr	x8
  470408:	ldr	x9, [x19, #320]
  47040c:	mov	x8, xzr
  470410:	str	xzr, [x19, #256]
  470414:	add	x9, x9, #0x1
  470418:	str	x9, [x19, #320]
  47041c:	add	x9, x8, #0x1
  470420:	mov	w10, #0x7e                  	// #126
  470424:	b	471f24 <feof@plt+0x6e684>
  470428:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47042c:	mov	x22, xzr
  470430:	add	x23, x23, #0xd34
  470434:	b	470454 <feof@plt+0x6cbb4>
  470438:	add	x22, x22, #0x1
  47043c:	add	x9, x8, #0x1
  470440:	cmp	x22, #0xb
  470444:	str	x9, [x19, #256]
  470448:	strb	w24, [x19, x8]
  47044c:	strb	w24, [x19, #264]
  470450:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  470454:	ldr	x8, [x19, #256]
  470458:	ldrb	w24, [x23, x22]
  47045c:	cmp	x8, #0xff
  470460:	b.ne	470438 <feof@plt+0x6cb98>  // b.any
  470464:	ldp	x8, x2, [x19, #272]
  470468:	mov	w1, #0xff                  	// #255
  47046c:	mov	x0, x19
  470470:	strb	wzr, [x19, #255]
  470474:	blr	x8
  470478:	ldr	x9, [x19, #320]
  47047c:	mov	x8, xzr
  470480:	str	xzr, [x19, #256]
  470484:	add	x9, x9, #0x1
  470488:	str	x9, [x19, #320]
  47048c:	b	470438 <feof@plt+0x6cb98>
  470490:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  470494:	mov	x22, xzr
  470498:	add	x23, x23, #0xd1e
  47049c:	b	4704bc <feof@plt+0x6cc1c>
  4704a0:	add	x22, x22, #0x1
  4704a4:	add	x9, x8, #0x1
  4704a8:	cmp	x22, #0x8
  4704ac:	str	x9, [x19, #256]
  4704b0:	strb	w24, [x19, x8]
  4704b4:	strb	w24, [x19, #264]
  4704b8:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  4704bc:	ldr	x8, [x19, #256]
  4704c0:	ldrb	w24, [x23, x22]
  4704c4:	cmp	x8, #0xff
  4704c8:	b.ne	4704a0 <feof@plt+0x6cc00>  // b.any
  4704cc:	ldp	x8, x2, [x19, #272]
  4704d0:	mov	w1, #0xff                  	// #255
  4704d4:	mov	x0, x19
  4704d8:	strb	wzr, [x19, #255]
  4704dc:	blr	x8
  4704e0:	ldr	x9, [x19, #320]
  4704e4:	mov	x8, xzr
  4704e8:	str	xzr, [x19, #256]
  4704ec:	add	x9, x9, #0x1
  4704f0:	str	x9, [x19, #320]
  4704f4:	b	4704a0 <feof@plt+0x6cc00>
  4704f8:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  4704fc:	mov	x22, xzr
  470500:	add	x23, x23, #0xd27
  470504:	b	470524 <feof@plt+0x6cc84>
  470508:	add	x22, x22, #0x1
  47050c:	add	x9, x8, #0x1
  470510:	cmp	x22, #0x18
  470514:	str	x9, [x19, #256]
  470518:	strb	w24, [x19, x8]
  47051c:	strb	w24, [x19, #264]
  470520:	b.eq	471de8 <feof@plt+0x6e548>  // b.none
  470524:	ldr	x8, [x19, #256]
  470528:	ldrb	w24, [x23, x22]
  47052c:	cmp	x8, #0xff
  470530:	b.ne	470508 <feof@plt+0x6cc68>  // b.any
  470534:	ldp	x8, x2, [x19, #272]
  470538:	mov	w1, #0xff                  	// #255
  47053c:	mov	x0, x19
  470540:	strb	wzr, [x19, #255]
  470544:	blr	x8
  470548:	ldr	x9, [x19, #320]
  47054c:	mov	x8, xzr
  470550:	str	xzr, [x19, #256]
  470554:	add	x9, x9, #0x1
  470558:	str	x9, [x19, #320]
  47055c:	b	470508 <feof@plt+0x6cc68>
  470560:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  470564:	mov	x22, xzr
  470568:	add	x23, x23, #0xd40
  47056c:	b	47058c <feof@plt+0x6ccec>
  470570:	add	x22, x22, #0x1
  470574:	add	x9, x8, #0x1
  470578:	cmp	x22, #0xd
  47057c:	str	x9, [x19, #256]
  470580:	strb	w24, [x19, x8]
  470584:	strb	w24, [x19, #264]
  470588:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  47058c:	ldr	x8, [x19, #256]
  470590:	ldrb	w24, [x23, x22]
  470594:	cmp	x8, #0xff
  470598:	b.ne	470570 <feof@plt+0x6ccd0>  // b.any
  47059c:	ldp	x8, x2, [x19, #272]
  4705a0:	mov	w1, #0xff                  	// #255
  4705a4:	mov	x0, x19
  4705a8:	strb	wzr, [x19, #255]
  4705ac:	blr	x8
  4705b0:	ldr	x9, [x19, #320]
  4705b4:	mov	x8, xzr
  4705b8:	str	xzr, [x19, #256]
  4705bc:	add	x9, x9, #0x1
  4705c0:	str	x9, [x19, #320]
  4705c4:	b	470570 <feof@plt+0x6ccd0>
  4705c8:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  4705cc:	mov	x22, xzr
  4705d0:	add	x23, x23, #0xd4e
  4705d4:	b	4705f4 <feof@plt+0x6cd54>
  4705d8:	add	x22, x22, #0x1
  4705dc:	add	x9, x8, #0x1
  4705e0:	cmp	x22, #0x12
  4705e4:	str	x9, [x19, #256]
  4705e8:	strb	w24, [x19, x8]
  4705ec:	strb	w24, [x19, #264]
  4705f0:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  4705f4:	ldr	x8, [x19, #256]
  4705f8:	ldrb	w24, [x23, x22]
  4705fc:	cmp	x8, #0xff
  470600:	b.ne	4705d8 <feof@plt+0x6cd38>  // b.any
  470604:	ldp	x8, x2, [x19, #272]
  470608:	mov	w1, #0xff                  	// #255
  47060c:	mov	x0, x19
  470610:	strb	wzr, [x19, #255]
  470614:	blr	x8
  470618:	ldr	x9, [x19, #320]
  47061c:	mov	x8, xzr
  470620:	str	xzr, [x19, #256]
  470624:	add	x9, x9, #0x1
  470628:	str	x9, [x19, #320]
  47062c:	b	4705d8 <feof@plt+0x6cd38>
  470630:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  470634:	mov	x22, xzr
  470638:	add	x23, x23, #0xd61
  47063c:	b	47065c <feof@plt+0x6cdbc>
  470640:	add	x22, x22, #0x1
  470644:	add	x9, x8, #0x1
  470648:	cmp	x22, #0x10
  47064c:	str	x9, [x19, #256]
  470650:	strb	w24, [x19, x8]
  470654:	strb	w24, [x19, #264]
  470658:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  47065c:	ldr	x8, [x19, #256]
  470660:	ldrb	w24, [x23, x22]
  470664:	cmp	x8, #0xff
  470668:	b.ne	470640 <feof@plt+0x6cda0>  // b.any
  47066c:	ldp	x8, x2, [x19, #272]
  470670:	mov	w1, #0xff                  	// #255
  470674:	mov	x0, x19
  470678:	strb	wzr, [x19, #255]
  47067c:	blr	x8
  470680:	ldr	x9, [x19, #320]
  470684:	mov	x8, xzr
  470688:	str	xzr, [x19, #256]
  47068c:	add	x9, x9, #0x1
  470690:	str	x9, [x19, #320]
  470694:	b	470640 <feof@plt+0x6cda0>
  470698:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47069c:	mov	x22, xzr
  4706a0:	add	x23, x23, #0xd72
  4706a4:	b	4706c4 <feof@plt+0x6ce24>
  4706a8:	add	x22, x22, #0x1
  4706ac:	add	x9, x8, #0x1
  4706b0:	cmp	x22, #0x15
  4706b4:	str	x9, [x19, #256]
  4706b8:	strb	w24, [x19, x8]
  4706bc:	strb	w24, [x19, #264]
  4706c0:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  4706c4:	ldr	x8, [x19, #256]
  4706c8:	ldrb	w24, [x23, x22]
  4706cc:	cmp	x8, #0xff
  4706d0:	b.ne	4706a8 <feof@plt+0x6ce08>  // b.any
  4706d4:	ldp	x8, x2, [x19, #272]
  4706d8:	mov	w1, #0xff                  	// #255
  4706dc:	mov	x0, x19
  4706e0:	strb	wzr, [x19, #255]
  4706e4:	blr	x8
  4706e8:	ldr	x9, [x19, #320]
  4706ec:	mov	x8, xzr
  4706f0:	str	xzr, [x19, #256]
  4706f4:	add	x9, x9, #0x1
  4706f8:	str	x9, [x19, #320]
  4706fc:	b	4706a8 <feof@plt+0x6ce08>
  470700:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  470704:	mov	x22, xzr
  470708:	add	x23, x23, #0xd76
  47070c:	b	47072c <feof@plt+0x6ce8c>
  470710:	add	x22, x22, #0x1
  470714:	add	x9, x8, #0x1
  470718:	cmp	x22, #0x11
  47071c:	str	x9, [x19, #256]
  470720:	strb	w24, [x19, x8]
  470724:	strb	w24, [x19, #264]
  470728:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  47072c:	ldr	x8, [x19, #256]
  470730:	ldrb	w24, [x23, x22]
  470734:	cmp	x8, #0xff
  470738:	b.ne	470710 <feof@plt+0x6ce70>  // b.any
  47073c:	ldp	x8, x2, [x19, #272]
  470740:	mov	w1, #0xff                  	// #255
  470744:	mov	x0, x19
  470748:	strb	wzr, [x19, #255]
  47074c:	blr	x8
  470750:	ldr	x9, [x19, #320]
  470754:	mov	x8, xzr
  470758:	str	xzr, [x19, #256]
  47075c:	add	x9, x9, #0x1
  470760:	str	x9, [x19, #320]
  470764:	b	470710 <feof@plt+0x6ce70>
  470768:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47076c:	mov	x22, xzr
  470770:	add	x23, x23, #0xd88
  470774:	b	470794 <feof@plt+0x6cef4>
  470778:	add	x22, x22, #0x1
  47077c:	add	x9, x8, #0x1
  470780:	cmp	x22, #0x1a
  470784:	str	x9, [x19, #256]
  470788:	strb	w24, [x19, x8]
  47078c:	strb	w24, [x19, #264]
  470790:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  470794:	ldr	x8, [x19, #256]
  470798:	ldrb	w24, [x23, x22]
  47079c:	cmp	x8, #0xff
  4707a0:	b.ne	470778 <feof@plt+0x6ced8>  // b.any
  4707a4:	ldp	x8, x2, [x19, #272]
  4707a8:	mov	w1, #0xff                  	// #255
  4707ac:	mov	x0, x19
  4707b0:	strb	wzr, [x19, #255]
  4707b4:	blr	x8
  4707b8:	ldr	x9, [x19, #320]
  4707bc:	mov	x8, xzr
  4707c0:	str	xzr, [x19, #256]
  4707c4:	add	x9, x9, #0x1
  4707c8:	str	x9, [x19, #320]
  4707cc:	b	470778 <feof@plt+0x6ced8>
  4707d0:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  4707d4:	mov	x22, xzr
  4707d8:	add	x23, x23, #0xda3
  4707dc:	b	4707fc <feof@plt+0x6cf5c>
  4707e0:	add	x22, x22, #0x1
  4707e4:	add	x9, x8, #0x1
  4707e8:	cmp	x22, #0xf
  4707ec:	str	x9, [x19, #256]
  4707f0:	strb	w24, [x19, x8]
  4707f4:	strb	w24, [x19, #264]
  4707f8:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  4707fc:	ldr	x8, [x19, #256]
  470800:	ldrb	w24, [x23, x22]
  470804:	cmp	x8, #0xff
  470808:	b.ne	4707e0 <feof@plt+0x6cf40>  // b.any
  47080c:	ldp	x8, x2, [x19, #272]
  470810:	mov	w1, #0xff                  	// #255
  470814:	mov	x0, x19
  470818:	strb	wzr, [x19, #255]
  47081c:	blr	x8
  470820:	ldr	x9, [x19, #320]
  470824:	mov	x8, xzr
  470828:	str	xzr, [x19, #256]
  47082c:	add	x9, x9, #0x1
  470830:	str	x9, [x19, #320]
  470834:	b	4707e0 <feof@plt+0x6cf40>
  470838:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47083c:	mov	x22, xzr
  470840:	add	x23, x23, #0xdb3
  470844:	b	470864 <feof@plt+0x6cfc4>
  470848:	add	x22, x22, #0x1
  47084c:	add	x9, x8, #0x1
  470850:	cmp	x22, #0x13
  470854:	str	x9, [x19, #256]
  470858:	strb	w24, [x19, x8]
  47085c:	strb	w24, [x19, #264]
  470860:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  470864:	ldr	x8, [x19, #256]
  470868:	ldrb	w24, [x23, x22]
  47086c:	cmp	x8, #0xff
  470870:	b.ne	470848 <feof@plt+0x6cfa8>  // b.any
  470874:	ldp	x8, x2, [x19, #272]
  470878:	mov	w1, #0xff                  	// #255
  47087c:	mov	x0, x19
  470880:	strb	wzr, [x19, #255]
  470884:	blr	x8
  470888:	ldr	x9, [x19, #320]
  47088c:	mov	x8, xzr
  470890:	str	xzr, [x19, #256]
  470894:	add	x9, x9, #0x1
  470898:	str	x9, [x19, #320]
  47089c:	b	470848 <feof@plt+0x6cfa8>
  4708a0:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  4708a4:	mov	x22, xzr
  4708a8:	add	x23, x23, #0xdc7
  4708ac:	b	4708cc <feof@plt+0x6d02c>
  4708b0:	add	x22, x22, #0x1
  4708b4:	add	x9, x8, #0x1
  4708b8:	cmp	x22, #0x16
  4708bc:	str	x9, [x19, #256]
  4708c0:	strb	w24, [x19, x8]
  4708c4:	strb	w24, [x19, #264]
  4708c8:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  4708cc:	ldr	x8, [x19, #256]
  4708d0:	ldrb	w24, [x23, x22]
  4708d4:	cmp	x8, #0xff
  4708d8:	b.ne	4708b0 <feof@plt+0x6d010>  // b.any
  4708dc:	ldp	x8, x2, [x19, #272]
  4708e0:	mov	w1, #0xff                  	// #255
  4708e4:	mov	x0, x19
  4708e8:	strb	wzr, [x19, #255]
  4708ec:	blr	x8
  4708f0:	ldr	x9, [x19, #320]
  4708f4:	mov	x8, xzr
  4708f8:	str	xzr, [x19, #256]
  4708fc:	add	x9, x9, #0x1
  470900:	str	x9, [x19, #320]
  470904:	b	4708b0 <feof@plt+0x6d010>
  470908:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47090c:	mov	x22, xzr
  470910:	add	x23, x23, #0xdde
  470914:	b	470934 <feof@plt+0x6d094>
  470918:	add	x22, x22, #0x1
  47091c:	add	x9, x8, #0x1
  470920:	cmp	x22, #0x19
  470924:	str	x9, [x19, #256]
  470928:	strb	w24, [x19, x8]
  47092c:	strb	w24, [x19, #264]
  470930:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  470934:	ldr	x8, [x19, #256]
  470938:	ldrb	w24, [x23, x22]
  47093c:	cmp	x8, #0xff
  470940:	b.ne	470918 <feof@plt+0x6d078>  // b.any
  470944:	ldp	x8, x2, [x19, #272]
  470948:	mov	w1, #0xff                  	// #255
  47094c:	mov	x0, x19
  470950:	strb	wzr, [x19, #255]
  470954:	blr	x8
  470958:	ldr	x9, [x19, #320]
  47095c:	mov	x8, xzr
  470960:	str	xzr, [x19, #256]
  470964:	add	x9, x9, #0x1
  470968:	str	x9, [x19, #320]
  47096c:	b	470918 <feof@plt+0x6d078>
  470970:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  470974:	mov	x22, xzr
  470978:	add	x23, x23, #0xdf8
  47097c:	b	47099c <feof@plt+0x6d0fc>
  470980:	add	x22, x22, #0x1
  470984:	add	x9, x8, #0x1
  470988:	cmp	x22, #0x15
  47098c:	str	x9, [x19, #256]
  470990:	strb	w24, [x19, x8]
  470994:	strb	w24, [x19, #264]
  470998:	b.eq	471f3c <feof@plt+0x6e69c>  // b.none
  47099c:	ldr	x8, [x19, #256]
  4709a0:	ldrb	w24, [x23, x22]
  4709a4:	cmp	x8, #0xff
  4709a8:	b.ne	470980 <feof@plt+0x6d0e0>  // b.any
  4709ac:	ldp	x8, x2, [x19, #272]
  4709b0:	mov	w1, #0xff                  	// #255
  4709b4:	mov	x0, x19
  4709b8:	strb	wzr, [x19, #255]
  4709bc:	blr	x8
  4709c0:	ldr	x9, [x19, #320]
  4709c4:	mov	x8, xzr
  4709c8:	str	xzr, [x19, #256]
  4709cc:	add	x9, x9, #0x1
  4709d0:	str	x9, [x19, #320]
  4709d4:	b	470980 <feof@plt+0x6d0e0>
  4709d8:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  4709dc:	mov	x22, xzr
  4709e0:	add	x23, x23, #0xe0e
  4709e4:	b	470a04 <feof@plt+0x6d164>
  4709e8:	add	x22, x22, #0x1
  4709ec:	add	x9, x8, #0x1
  4709f0:	cmp	x22, #0x11
  4709f4:	str	x9, [x19, #256]
  4709f8:	strb	w24, [x19, x8]
  4709fc:	strb	w24, [x19, #264]
  470a00:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  470a04:	ldr	x8, [x19, #256]
  470a08:	ldrb	w24, [x23, x22]
  470a0c:	cmp	x8, #0xff
  470a10:	b.ne	4709e8 <feof@plt+0x6d148>  // b.any
  470a14:	ldp	x8, x2, [x19, #272]
  470a18:	mov	w1, #0xff                  	// #255
  470a1c:	mov	x0, x19
  470a20:	strb	wzr, [x19, #255]
  470a24:	blr	x8
  470a28:	ldr	x9, [x19, #320]
  470a2c:	mov	x8, xzr
  470a30:	str	xzr, [x19, #256]
  470a34:	add	x9, x9, #0x1
  470a38:	str	x9, [x19, #320]
  470a3c:	b	4709e8 <feof@plt+0x6d148>
  470a40:	ldrsw	x20, [x21, #16]
  470a44:	cbz	w20, 4720f4 <feof@plt+0x6e854>
  470a48:	ldr	x21, [x21, #8]
  470a4c:	b	470a6c <feof@plt+0x6d1cc>
  470a50:	add	x9, x8, #0x1
  470a54:	subs	x20, x20, #0x1
  470a58:	add	x21, x21, #0x1
  470a5c:	str	x9, [x19, #256]
  470a60:	strb	w22, [x19, x8]
  470a64:	strb	w22, [x19, #264]
  470a68:	b.eq	4720f4 <feof@plt+0x6e854>  // b.none
  470a6c:	ldr	x8, [x19, #256]
  470a70:	ldrb	w22, [x21]
  470a74:	cmp	x8, #0xff
  470a78:	b.ne	470a50 <feof@plt+0x6d1b0>  // b.any
  470a7c:	ldp	x8, x2, [x19, #272]
  470a80:	mov	w1, #0xff                  	// #255
  470a84:	mov	x0, x19
  470a88:	strb	wzr, [x19, #255]
  470a8c:	blr	x8
  470a90:	ldr	x9, [x19, #320]
  470a94:	mov	x8, xzr
  470a98:	str	xzr, [x19, #256]
  470a9c:	add	x9, x9, #0x1
  470aa0:	str	x9, [x19, #320]
  470aa4:	b	470a50 <feof@plt+0x6d1b0>
  470aa8:	ldr	x8, [x21, #8]
  470aac:	tbnz	w20, #2, 4727a8 <feof@plt+0x6ef08>
  470ab0:	ldrsw	x20, [x8, #8]
  470ab4:	cbz	w20, 4720f4 <feof@plt+0x6e854>
  470ab8:	ldr	x21, [x8]
  470abc:	b	470adc <feof@plt+0x6d23c>
  470ac0:	add	x9, x8, #0x1
  470ac4:	subs	x20, x20, #0x1
  470ac8:	add	x21, x21, #0x1
  470acc:	str	x9, [x19, #256]
  470ad0:	strb	w22, [x19, x8]
  470ad4:	strb	w22, [x19, #264]
  470ad8:	b.eq	4720f4 <feof@plt+0x6e854>  // b.none
  470adc:	ldr	x8, [x19, #256]
  470ae0:	ldrb	w22, [x21]
  470ae4:	cmp	x8, #0xff
  470ae8:	b.ne	470ac0 <feof@plt+0x6d220>  // b.any
  470aec:	ldp	x8, x2, [x19, #272]
  470af0:	mov	w1, #0xff                  	// #255
  470af4:	mov	x0, x19
  470af8:	strb	wzr, [x19, #255]
  470afc:	blr	x8
  470b00:	ldr	x9, [x19, #320]
  470b04:	mov	x8, xzr
  470b08:	str	xzr, [x19, #256]
  470b0c:	add	x9, x9, #0x1
  470b10:	str	x9, [x19, #320]
  470b14:	b	470ac0 <feof@plt+0x6d220>
  470b18:	tbnz	w20, #5, 472810 <feof@plt+0x6ef70>
  470b1c:	tbnz	w20, #6, 470bb8 <feof@plt+0x6d318>
  470b20:	ldr	x8, [x21, #8]
  470b24:	cbz	x8, 470bb8 <feof@plt+0x6d318>
  470b28:	ldr	x8, [x19, #296]
  470b2c:	add	x9, sp, #0x10
  470b30:	stp	x8, x21, [sp, #16]
  470b34:	str	x9, [x19, #296]
  470b38:	str	wzr, [sp, #32]
  470b3c:	ldr	x9, [x19, #288]
  470b40:	str	x9, [sp, #40]
  470b44:	ldr	x22, [x21, #8]
  470b48:	cbz	x22, 470b64 <feof@plt+0x6d2c4>
  470b4c:	ldr	w9, [x22, #4]
  470b50:	cmp	w9, #0x1
  470b54:	b.gt	470b64 <feof@plt+0x6d2c4>
  470b58:	ldr	w10, [x19, #308]
  470b5c:	cmp	w10, #0x401
  470b60:	b.lt	474538 <feof@plt+0x70c98>  // b.tstop
  470b64:	mov	w9, #0x1                   	// #1
  470b68:	str	w9, [x19, #304]
  470b6c:	str	x8, [x19, #296]
  470b70:	ldr	x8, [x19, #256]
  470b74:	cmp	x8, #0xff
  470b78:	b.ne	470ba4 <feof@plt+0x6d304>  // b.any
  470b7c:	ldp	x8, x2, [x19, #272]
  470b80:	mov	w1, #0xff                  	// #255
  470b84:	mov	x0, x19
  470b88:	strb	wzr, [x19, #255]
  470b8c:	blr	x8
  470b90:	ldr	x9, [x19, #320]
  470b94:	mov	x8, xzr
  470b98:	str	xzr, [x19, #256]
  470b9c:	add	x9, x9, #0x1
  470ba0:	str	x9, [x19, #320]
  470ba4:	add	x9, x8, #0x1
  470ba8:	mov	w10, #0x20                  	// #32
  470bac:	str	x9, [x19, #256]
  470bb0:	strb	w10, [x19, x8]
  470bb4:	strb	w10, [x19, #264]
  470bb8:	ldr	x3, [x19, #296]
  470bbc:	and	w1, w20, #0xffffff9f
  470bc0:	mov	x0, x19
  470bc4:	mov	x2, x21
  470bc8:	bl	476820 <feof@plt+0x72f80>
  470bcc:	b	4720f4 <feof@plt+0x6e854>
  470bd0:	ldp	x9, x22, [x19, #288]
  470bd4:	add	x8, sp, #0x10
  470bd8:	stp	x22, x21, [sp, #16]
  470bdc:	str	x8, [x19, #296]
  470be0:	str	x9, [sp, #40]
  470be4:	mov	w9, #0x1                   	// #1
  470be8:	str	wzr, [sp, #32]
  470bec:	cbz	x22, 472bb4 <feof@plt+0x6f314>
  470bf0:	add	x11, sp, #0x10
  470bf4:	mov	w24, #0x1                   	// #1
  470bf8:	mov	x10, x22
  470bfc:	b	470c2c <feof@plt+0x6d38c>
  470c00:	ldp	q0, q1, [x10]
  470c04:	mov	w12, w24
  470c08:	add	x12, x8, x12, lsl #5
  470c0c:	add	w24, w24, #0x1
  470c10:	stp	q0, q1, [x12]
  470c14:	str	x11, [x12]
  470c18:	mov	x11, x12
  470c1c:	str	x12, [x19, #296]
  470c20:	str	w9, [x10, #16]
  470c24:	ldr	x10, [x10]
  470c28:	cbz	x10, 472bb8 <feof@plt+0x6f318>
  470c2c:	ldr	x12, [x10, #8]
  470c30:	ldr	w12, [x12]
  470c34:	sub	w12, w12, #0x19
  470c38:	cmp	w12, #0x2
  470c3c:	b.hi	472bb8 <feof@plt+0x6f318>  // b.pmore
  470c40:	ldr	w12, [x10, #16]
  470c44:	cbnz	w12, 470c24 <feof@plt+0x6d384>
  470c48:	cmp	w24, #0x4
  470c4c:	b.cc	470c00 <feof@plt+0x6d360>  // b.lo, b.ul, b.last
  470c50:	b	4720ec <feof@plt+0x6e84c>
  470c54:	ldrh	w8, [x21, #18]
  470c58:	cbz	w8, 470dc4 <feof@plt+0x6d524>
  470c5c:	ldr	x8, [x19, #256]
  470c60:	cmp	x8, #0xff
  470c64:	b.ne	470c90 <feof@plt+0x6d3f0>  // b.any
  470c68:	ldp	x8, x2, [x19, #272]
  470c6c:	mov	w1, #0xff                  	// #255
  470c70:	mov	x0, x19
  470c74:	strb	wzr, [x19, #255]
  470c78:	blr	x8
  470c7c:	ldr	x9, [x19, #320]
  470c80:	mov	x8, xzr
  470c84:	str	xzr, [x19, #256]
  470c88:	add	x9, x9, #0x1
  470c8c:	str	x9, [x19, #320]
  470c90:	add	x9, x8, #0x1
  470c94:	mov	w10, #0x5f                  	// #95
  470c98:	str	x9, [x19, #256]
  470c9c:	strb	w10, [x19, x8]
  470ca0:	ldr	x8, [x19, #256]
  470ca4:	strb	w10, [x19, #264]
  470ca8:	cmp	x8, #0xff
  470cac:	b.ne	470cd8 <feof@plt+0x6d438>  // b.any
  470cb0:	ldp	x8, x2, [x19, #272]
  470cb4:	mov	w1, #0xff                  	// #255
  470cb8:	mov	x0, x19
  470cbc:	strb	wzr, [x19, #255]
  470cc0:	blr	x8
  470cc4:	ldr	x9, [x19, #320]
  470cc8:	mov	x8, xzr
  470ccc:	str	xzr, [x19, #256]
  470cd0:	add	x9, x9, #0x1
  470cd4:	str	x9, [x19, #320]
  470cd8:	add	x9, x8, #0x1
  470cdc:	mov	w10, #0x53                  	// #83
  470ce0:	str	x9, [x19, #256]
  470ce4:	strb	w10, [x19, x8]
  470ce8:	ldr	x8, [x19, #256]
  470cec:	strb	w10, [x19, #264]
  470cf0:	cmp	x8, #0xff
  470cf4:	b.ne	470d20 <feof@plt+0x6d480>  // b.any
  470cf8:	ldp	x8, x2, [x19, #272]
  470cfc:	mov	w1, #0xff                  	// #255
  470d00:	mov	x0, x19
  470d04:	strb	wzr, [x19, #255]
  470d08:	blr	x8
  470d0c:	ldr	x9, [x19, #320]
  470d10:	mov	x8, xzr
  470d14:	str	xzr, [x19, #256]
  470d18:	add	x9, x9, #0x1
  470d1c:	str	x9, [x19, #320]
  470d20:	add	x9, x8, #0x1
  470d24:	mov	w10, #0x61                  	// #97
  470d28:	str	x9, [x19, #256]
  470d2c:	strb	w10, [x19, x8]
  470d30:	ldr	x8, [x19, #256]
  470d34:	strb	w10, [x19, #264]
  470d38:	cmp	x8, #0xff
  470d3c:	b.ne	470d68 <feof@plt+0x6d4c8>  // b.any
  470d40:	ldp	x8, x2, [x19, #272]
  470d44:	mov	w1, #0xff                  	// #255
  470d48:	mov	x0, x19
  470d4c:	strb	wzr, [x19, #255]
  470d50:	blr	x8
  470d54:	ldr	x9, [x19, #320]
  470d58:	mov	x8, xzr
  470d5c:	str	xzr, [x19, #256]
  470d60:	add	x9, x9, #0x1
  470d64:	str	x9, [x19, #320]
  470d68:	add	x9, x8, #0x1
  470d6c:	mov	w10, #0x74                  	// #116
  470d70:	str	x9, [x19, #256]
  470d74:	strb	w10, [x19, x8]
  470d78:	ldr	x8, [x19, #256]
  470d7c:	strb	w10, [x19, #264]
  470d80:	cmp	x8, #0xff
  470d84:	b.ne	470db0 <feof@plt+0x6d510>  // b.any
  470d88:	ldp	x8, x2, [x19, #272]
  470d8c:	mov	w1, #0xff                  	// #255
  470d90:	mov	x0, x19
  470d94:	strb	wzr, [x19, #255]
  470d98:	blr	x8
  470d9c:	ldr	x9, [x19, #320]
  470da0:	mov	x8, xzr
  470da4:	str	xzr, [x19, #256]
  470da8:	add	x9, x9, #0x1
  470dac:	str	x9, [x19, #320]
  470db0:	add	x9, x8, #0x1
  470db4:	mov	w10, #0x20                  	// #32
  470db8:	str	x9, [x19, #256]
  470dbc:	strb	w10, [x19, x8]
  470dc0:	strb	w10, [x19, #264]
  470dc4:	ldr	x22, [x21, #8]
  470dc8:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  470dcc:	add	x9, x9, #0x4b8
  470dd0:	ldr	x8, [x22, #8]
  470dd4:	cmp	x8, x9
  470dd8:	b.eq	470e48 <feof@plt+0x6d5a8>  // b.none
  470ddc:	cbz	x22, 470df8 <feof@plt+0x6d558>
  470de0:	ldr	w8, [x22, #4]
  470de4:	cmp	w8, #0x1
  470de8:	b.gt	470df8 <feof@plt+0x6d558>
  470dec:	ldr	w9, [x19, #308]
  470df0:	cmp	w9, #0x401
  470df4:	b.lt	473d7c <feof@plt+0x704dc>  // b.tstop
  470df8:	mov	w8, #0x1                   	// #1
  470dfc:	str	w8, [x25]
  470e00:	ldr	x8, [x19, #256]
  470e04:	cmp	x8, #0xff
  470e08:	b.ne	470e34 <feof@plt+0x6d594>  // b.any
  470e0c:	ldp	x8, x2, [x19, #272]
  470e10:	mov	w1, #0xff                  	// #255
  470e14:	mov	x0, x19
  470e18:	strb	wzr, [x19, #255]
  470e1c:	blr	x8
  470e20:	ldr	x9, [x19, #320]
  470e24:	mov	x8, xzr
  470e28:	str	xzr, [x19, #256]
  470e2c:	add	x9, x9, #0x1
  470e30:	str	x9, [x19, #320]
  470e34:	add	x9, x8, #0x1
  470e38:	mov	w10, #0x20                  	// #32
  470e3c:	str	x9, [x19, #256]
  470e40:	strb	w10, [x19, x8]
  470e44:	strb	w10, [x19, #264]
  470e48:	ldr	x8, [x19, #256]
  470e4c:	ldrh	w9, [x21, #16]
  470e50:	cmp	x8, #0xff
  470e54:	cbz	w9, 472c3c <feof@plt+0x6f39c>
  470e58:	b.ne	470e84 <feof@plt+0x6d5e4>  // b.any
  470e5c:	ldp	x8, x2, [x19, #272]
  470e60:	mov	w1, #0xff                  	// #255
  470e64:	mov	x0, x19
  470e68:	strb	wzr, [x19, #255]
  470e6c:	blr	x8
  470e70:	ldr	x9, [x19, #320]
  470e74:	mov	x8, xzr
  470e78:	str	xzr, [x19, #256]
  470e7c:	add	x9, x9, #0x1
  470e80:	str	x9, [x19, #320]
  470e84:	add	x9, x8, #0x1
  470e88:	mov	w10, #0x5f                  	// #95
  470e8c:	str	x9, [x19, #256]
  470e90:	strb	w10, [x19, x8]
  470e94:	ldr	x8, [x19, #256]
  470e98:	strb	w10, [x19, #264]
  470e9c:	cmp	x8, #0xff
  470ea0:	b.ne	470ecc <feof@plt+0x6d62c>  // b.any
  470ea4:	ldp	x8, x2, [x19, #272]
  470ea8:	mov	w1, #0xff                  	// #255
  470eac:	mov	x0, x19
  470eb0:	strb	wzr, [x19, #255]
  470eb4:	blr	x8
  470eb8:	ldr	x9, [x19, #320]
  470ebc:	mov	x8, xzr
  470ec0:	str	xzr, [x19, #256]
  470ec4:	add	x9, x9, #0x1
  470ec8:	str	x9, [x19, #320]
  470ecc:	add	x9, x8, #0x1
  470ed0:	mov	w10, #0x41                  	// #65
  470ed4:	str	x9, [x19, #256]
  470ed8:	strb	w10, [x19, x8]
  470edc:	ldr	x8, [x19, #256]
  470ee0:	strb	w10, [x19, #264]
  470ee4:	cmp	x8, #0xff
  470ee8:	b.ne	470f14 <feof@plt+0x6d674>  // b.any
  470eec:	ldp	x8, x2, [x19, #272]
  470ef0:	mov	w1, #0xff                  	// #255
  470ef4:	mov	x0, x19
  470ef8:	strb	wzr, [x19, #255]
  470efc:	blr	x8
  470f00:	ldr	x9, [x19, #320]
  470f04:	mov	x8, xzr
  470f08:	str	xzr, [x19, #256]
  470f0c:	add	x9, x9, #0x1
  470f10:	str	x9, [x19, #320]
  470f14:	add	x9, x8, #0x1
  470f18:	mov	w20, #0x63                  	// #99
  470f1c:	str	x9, [x19, #256]
  470f20:	strb	w20, [x19, x8]
  470f24:	ldr	x8, [x19, #256]
  470f28:	strb	w20, [x19, #264]
  470f2c:	cmp	x8, #0xff
  470f30:	b.ne	470f5c <feof@plt+0x6d6bc>  // b.any
  470f34:	ldp	x8, x2, [x19, #272]
  470f38:	mov	w1, #0xff                  	// #255
  470f3c:	mov	x0, x19
  470f40:	strb	wzr, [x19, #255]
  470f44:	blr	x8
  470f48:	ldr	x9, [x19, #320]
  470f4c:	mov	x8, xzr
  470f50:	str	xzr, [x19, #256]
  470f54:	add	x9, x9, #0x1
  470f58:	str	x9, [x19, #320]
  470f5c:	add	x9, x8, #0x1
  470f60:	str	x9, [x19, #256]
  470f64:	strb	w20, [x19, x8]
  470f68:	ldr	x8, [x19, #256]
  470f6c:	strb	w20, [x19, #264]
  470f70:	cmp	x8, #0xff
  470f74:	b.ne	470fa0 <feof@plt+0x6d700>  // b.any
  470f78:	ldp	x8, x2, [x19, #272]
  470f7c:	mov	w1, #0xff                  	// #255
  470f80:	mov	x0, x19
  470f84:	strb	wzr, [x19, #255]
  470f88:	blr	x8
  470f8c:	ldr	x9, [x19, #320]
  470f90:	mov	x8, xzr
  470f94:	str	xzr, [x19, #256]
  470f98:	add	x9, x9, #0x1
  470f9c:	str	x9, [x19, #320]
  470fa0:	add	x9, x8, #0x1
  470fa4:	mov	w10, #0x75                  	// #117
  470fa8:	str	x9, [x19, #256]
  470fac:	strb	w10, [x19, x8]
  470fb0:	ldr	x8, [x19, #256]
  470fb4:	strb	w10, [x19, #264]
  470fb8:	cmp	x8, #0xff
  470fbc:	b.ne	470fe8 <feof@plt+0x6d748>  // b.any
  470fc0:	ldp	x8, x2, [x19, #272]
  470fc4:	mov	w1, #0xff                  	// #255
  470fc8:	mov	x0, x19
  470fcc:	strb	wzr, [x19, #255]
  470fd0:	blr	x8
  470fd4:	ldr	x9, [x19, #320]
  470fd8:	mov	x8, xzr
  470fdc:	str	xzr, [x19, #256]
  470fe0:	add	x9, x9, #0x1
  470fe4:	str	x9, [x19, #320]
  470fe8:	add	x9, x8, #0x1
  470fec:	mov	w10, #0x6d                  	// #109
  470ff0:	b	4749e8 <feof@plt+0x71148>
  470ff4:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  470ff8:	mov	x22, xzr
  470ffc:	add	x23, x23, #0xcff
  471000:	b	471020 <feof@plt+0x6d780>
  471004:	add	x22, x22, #0x1
  471008:	add	x9, x8, #0x1
  47100c:	cmp	x22, #0x1e
  471010:	str	x9, [x19, #256]
  471014:	strb	w24, [x19, x8]
  471018:	strb	w24, [x19, #264]
  47101c:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  471020:	ldr	x8, [x19, #256]
  471024:	ldrb	w24, [x23, x22]
  471028:	cmp	x8, #0xff
  47102c:	b.ne	471004 <feof@plt+0x6d764>  // b.any
  471030:	ldp	x8, x2, [x19, #272]
  471034:	mov	w1, #0xff                  	// #255
  471038:	mov	x0, x19
  47103c:	strb	wzr, [x19, #255]
  471040:	blr	x8
  471044:	ldr	x9, [x19, #320]
  471048:	mov	x8, xzr
  47104c:	str	xzr, [x19, #256]
  471050:	add	x9, x9, #0x1
  471054:	str	x9, [x19, #320]
  471058:	b	471004 <feof@plt+0x6d764>
  47105c:	ldp	x22, x21, [x21, #8]
  471060:	cbz	x22, 47378c <feof@plt+0x6feec>
  471064:	ldr	w8, [x22, #4]
  471068:	cmp	w8, #0x1
  47106c:	b.gt	47107c <feof@plt+0x6d7dc>
  471070:	ldr	w9, [x19, #308]
  471074:	cmp	w9, #0x401
  471078:	b.lt	47373c <feof@plt+0x6fe9c>  // b.tstop
  47107c:	mov	w8, #0x1                   	// #1
  471080:	str	w8, [x25]
  471084:	b	47378c <feof@plt+0x6feec>
  471088:	ldr	x21, [x21, #8]
  47108c:	adrp	x23, 4d4000 <_obstack_memory_used@@Base+0x582fc>
  471090:	mov	x22, xzr
  471094:	add	x23, x23, #0xdff
  471098:	ldrsw	x20, [x21, #16]
  47109c:	b	4710bc <feof@plt+0x6d81c>
  4710a0:	add	x22, x22, #0x1
  4710a4:	add	x9, x8, #0x1
  4710a8:	cmp	x22, #0x8
  4710ac:	str	x9, [x19, #256]
  4710b0:	strb	w24, [x19, x8]
  4710b4:	strb	w24, [x19, #264]
  4710b8:	b.eq	47216c <feof@plt+0x6e8cc>  // b.none
  4710bc:	ldr	x8, [x19, #256]
  4710c0:	ldrb	w24, [x23, x22]
  4710c4:	cmp	x8, #0xff
  4710c8:	b.ne	4710a0 <feof@plt+0x6d800>  // b.any
  4710cc:	ldp	x8, x2, [x19, #272]
  4710d0:	mov	w1, #0xff                  	// #255
  4710d4:	mov	x0, x19
  4710d8:	strb	wzr, [x19, #255]
  4710dc:	blr	x8
  4710e0:	ldr	x9, [x19, #320]
  4710e4:	mov	x8, xzr
  4710e8:	str	xzr, [x19, #256]
  4710ec:	add	x9, x9, #0x1
  4710f0:	str	x9, [x19, #320]
  4710f4:	b	4710a0 <feof@plt+0x6d800>
  4710f8:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  4710fc:	mov	x22, xzr
  471100:	add	x23, x23, #0xe3b
  471104:	b	471124 <feof@plt+0x6d884>
  471108:	add	x22, x22, #0x1
  47110c:	add	x9, x8, #0x1
  471110:	cmp	x22, #0x9
  471114:	str	x9, [x19, #256]
  471118:	strb	w24, [x19, x8]
  47111c:	strb	w24, [x19, #264]
  471120:	b.eq	471f30 <feof@plt+0x6e690>  // b.none
  471124:	ldr	x8, [x19, #256]
  471128:	ldrb	w24, [x23, x22]
  47112c:	cmp	x8, #0xff
  471130:	b.ne	471108 <feof@plt+0x6d868>  // b.any
  471134:	ldp	x8, x2, [x19, #272]
  471138:	mov	w1, #0xff                  	// #255
  47113c:	mov	x0, x19
  471140:	strb	wzr, [x19, #255]
  471144:	blr	x8
  471148:	ldr	x9, [x19, #320]
  47114c:	mov	x8, xzr
  471150:	str	xzr, [x19, #256]
  471154:	add	x9, x9, #0x1
  471158:	str	x9, [x19, #320]
  47115c:	b	471108 <feof@plt+0x6d868>
  471160:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  471164:	mov	x22, xzr
  471168:	add	x23, x23, #0xe3b
  47116c:	b	47118c <feof@plt+0x6d8ec>
  471170:	add	x22, x22, #0x1
  471174:	add	x9, x8, #0x1
  471178:	cmp	x22, #0x9
  47117c:	str	x9, [x19, #256]
  471180:	strb	w24, [x19, x8]
  471184:	strb	w24, [x19, #264]
  471188:	b.eq	472240 <feof@plt+0x6e9a0>  // b.none
  47118c:	ldr	x8, [x19, #256]
  471190:	ldrb	w24, [x23, x22]
  471194:	cmp	x8, #0xff
  471198:	b.ne	471170 <feof@plt+0x6d8d0>  // b.any
  47119c:	ldp	x8, x2, [x19, #272]
  4711a0:	mov	w1, #0xff                  	// #255
  4711a4:	mov	x0, x19
  4711a8:	strb	wzr, [x19, #255]
  4711ac:	blr	x8
  4711b0:	ldr	x9, [x19, #320]
  4711b4:	mov	x8, xzr
  4711b8:	str	xzr, [x19, #256]
  4711bc:	add	x9, x9, #0x1
  4711c0:	str	x9, [x19, #320]
  4711c4:	b	471170 <feof@plt+0x6d8d0>
  4711c8:	ldr	x21, [x21, #8]
  4711cc:	ldr	w8, [x21]
  4711d0:	cmp	w8, #0x32
  4711d4:	b.ne	4731f4 <feof@plt+0x6f954>  // b.any
  4711d8:	ldr	x8, [x21, #8]
  4711dc:	ldrsw	x20, [x8, #16]
  4711e0:	cbz	w20, 4720f4 <feof@plt+0x6e854>
  4711e4:	ldr	x21, [x8, #8]
  4711e8:	b	471208 <feof@plt+0x6d968>
  4711ec:	add	x9, x8, #0x1
  4711f0:	subs	x20, x20, #0x1
  4711f4:	add	x21, x21, #0x1
  4711f8:	str	x9, [x19, #256]
  4711fc:	strb	w22, [x19, x8]
  471200:	strb	w22, [x19, #264]
  471204:	b.eq	4720f4 <feof@plt+0x6e854>  // b.none
  471208:	ldr	x8, [x19, #256]
  47120c:	ldrb	w22, [x21]
  471210:	cmp	x8, #0xff
  471214:	b.ne	4711ec <feof@plt+0x6d94c>  // b.any
  471218:	ldp	x8, x2, [x19, #272]
  47121c:	mov	w1, #0xff                  	// #255
  471220:	mov	x0, x19
  471224:	strb	wzr, [x19, #255]
  471228:	blr	x8
  47122c:	ldr	x9, [x19, #320]
  471230:	mov	x8, xzr
  471234:	str	xzr, [x19, #256]
  471238:	add	x9, x9, #0x1
  47123c:	str	x9, [x19, #320]
  471240:	b	4711ec <feof@plt+0x6d94c>
  471244:	ldp	x22, x21, [x21, #8]
  471248:	ldr	w8, [x22]
  47124c:	cmp	w8, #0x34
  471250:	b.eq	472e2c <feof@plt+0x6f58c>  // b.none
  471254:	cmp	w8, #0x32
  471258:	b.ne	472ee8 <feof@plt+0x6f648>  // b.any
  47125c:	ldr	x24, [x22, #8]
  471260:	adrp	x1, 487000 <_obstack_memory_used@@Base+0xb2fc>
  471264:	add	x1, x1, #0x667
  471268:	ldr	x23, [x24]
  47126c:	mov	x0, x23
  471270:	bl	403640 <strcmp@plt>
  471274:	cbnz	w0, 4712a4 <feof@plt+0x6da04>
  471278:	ldr	w8, [x21]
  47127c:	cmp	w8, #0x3
  471280:	b.ne	4712a4 <feof@plt+0x6da04>  // b.any
  471284:	ldr	x8, [x21, #8]
  471288:	ldr	w9, [x8]
  47128c:	cmp	w9, #0x1
  471290:	b.ne	4712a4 <feof@plt+0x6da04>  // b.any
  471294:	ldr	x9, [x21, #16]
  471298:	ldr	w9, [x9]
  47129c:	cmp	w9, #0x29
  4712a0:	csel	x21, x8, x21, eq  // eq = none
  4712a4:	ldr	w26, [x21]
  4712a8:	cmp	w26, #0x39
  4712ac:	b.ne	4736a8 <feof@plt+0x6fe08>  // b.any
  4712b0:	ldr	x21, [x21, #8]
  4712b4:	ldr	w8, [x21]
  4712b8:	cmp	w8, #0x31
  4712bc:	b.hi	474748 <feof@plt+0x70ea8>  // b.pmore
  4712c0:	mov	w9, #0x1                   	// #1
  4712c4:	lsl	x8, x9, x8
  4712c8:	mov	x9, #0x43                  	// #67
  4712cc:	movk	x9, #0x2, lsl #48
  4712d0:	tst	x8, x9
  4712d4:	b.eq	474748 <feof@plt+0x70ea8>  // b.none
  4712d8:	cbz	x21, 4712f4 <feof@plt+0x6da54>
  4712dc:	ldr	w8, [x21, #4]
  4712e0:	cmp	w8, #0x1
  4712e4:	b.gt	4712f4 <feof@plt+0x6da54>
  4712e8:	ldr	w9, [x19, #308]
  4712ec:	cmp	w9, #0x401
  4712f0:	b.lt	474c58 <feof@plt+0x713b8>  // b.tstop
  4712f4:	mov	w8, #0x1                   	// #1
  4712f8:	str	w8, [x25]
  4712fc:	b	474ca8 <feof@plt+0x71408>
  471300:	ldr	x8, [x21, #16]
  471304:	ldr	w8, [x8]
  471308:	cmp	w8, #0x39
  47130c:	b.ne	4720ec <feof@plt+0x6e84c>  // b.any
  471310:	ldr	x22, [x21, #8]
  471314:	ldr	x8, [x22, #8]
  471318:	ldr	x9, [x8]
  47131c:	ldrb	w10, [x9, #1]
  471320:	cmp	w10, #0x63
  471324:	b.ne	473384 <feof@plt+0x6fae4>  // b.any
  471328:	ldrb	w9, [x9]
  47132c:	sub	w9, w9, #0x63
  471330:	cmp	w9, #0x10
  471334:	b.hi	473384 <feof@plt+0x6fae4>  // b.pmore
  471338:	mov	w10, #0x1                   	// #1
  47133c:	lsl	w9, w10, w9
  471340:	mov	w10, #0x8003                	// #32771
  471344:	movk	w10, #0x1, lsl #16
  471348:	tst	w9, w10
  47134c:	b.eq	473384 <feof@plt+0x6fae4>  // b.none
  471350:	ldr	w9, [x22]
  471354:	cmp	w9, #0x32
  471358:	b.ne	473d58 <feof@plt+0x704b8>  // b.any
  47135c:	ldrsw	x22, [x8, #16]
  471360:	cbz	w22, 474894 <feof@plt+0x70ff4>
  471364:	ldr	x23, [x8, #8]
  471368:	b	471388 <feof@plt+0x6dae8>
  47136c:	add	x9, x8, #0x1
  471370:	subs	x22, x22, #0x1
  471374:	add	x23, x23, #0x1
  471378:	str	x9, [x19, #256]
  47137c:	strb	w24, [x19, x8]
  471380:	strb	w24, [x19, #264]
  471384:	b.eq	474894 <feof@plt+0x70ff4>  // b.none
  471388:	ldr	x8, [x19, #256]
  47138c:	ldrb	w24, [x23]
  471390:	cmp	x8, #0xff
  471394:	b.ne	47136c <feof@plt+0x6dacc>  // b.any
  471398:	ldp	x8, x2, [x19, #272]
  47139c:	mov	w1, #0xff                  	// #255
  4713a0:	mov	x0, x19
  4713a4:	strb	wzr, [x19, #255]
  4713a8:	blr	x8
  4713ac:	ldr	x9, [x19, #320]
  4713b0:	mov	x8, xzr
  4713b4:	str	xzr, [x19, #256]
  4713b8:	add	x9, x9, #0x1
  4713bc:	str	x9, [x19, #320]
  4713c0:	b	47136c <feof@plt+0x6dacc>
  4713c4:	ldr	x8, [x21, #16]
  4713c8:	ldr	w9, [x8]
  4713cc:	cmp	w9, #0x3b
  4713d0:	b.ne	4720ec <feof@plt+0x6e84c>  // b.any
  4713d4:	ldr	x8, [x8, #16]
  4713d8:	ldr	w8, [x8]
  4713dc:	cmp	w8, #0x3c
  4713e0:	b.ne	4720ec <feof@plt+0x6e84c>  // b.any
  4713e4:	mov	x0, x19
  4713e8:	mov	w1, w20
  4713ec:	mov	x2, x21
  4713f0:	bl	476ea4 <feof@plt+0x73604>
  4713f4:	cbnz	w0, 4720f4 <feof@plt+0x6e854>
  4713f8:	ldp	x24, x8, [x21, #8]
  4713fc:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  471400:	add	x1, x1, #0xa31
  471404:	ldr	x10, [x24, #8]
  471408:	ldp	x23, x9, [x8, #8]
  47140c:	ldr	x0, [x10]
  471410:	ldp	x22, x21, [x9, #8]
  471414:	bl	403640 <strcmp@plt>
  471418:	cbz	w0, 474650 <feof@plt+0x70db0>
  47141c:	ldr	x8, [x19, #256]
  471420:	cmp	x8, #0xff
  471424:	b.ne	471450 <feof@plt+0x6dbb0>  // b.any
  471428:	ldp	x8, x2, [x19, #272]
  47142c:	mov	w1, #0xff                  	// #255
  471430:	mov	x0, x19
  471434:	strb	wzr, [x19, #255]
  471438:	blr	x8
  47143c:	ldr	x9, [x19, #320]
  471440:	mov	x8, xzr
  471444:	str	xzr, [x19, #256]
  471448:	add	x9, x9, #0x1
  47144c:	str	x9, [x19, #320]
  471450:	add	x9, x8, #0x1
  471454:	mov	w10, #0x6e                  	// #110
  471458:	str	x9, [x19, #256]
  47145c:	strb	w10, [x19, x8]
  471460:	ldr	x8, [x19, #256]
  471464:	strb	w10, [x19, #264]
  471468:	cmp	x8, #0xff
  47146c:	b.ne	471498 <feof@plt+0x6dbf8>  // b.any
  471470:	ldp	x8, x2, [x19, #272]
  471474:	mov	w1, #0xff                  	// #255
  471478:	mov	x0, x19
  47147c:	strb	wzr, [x19, #255]
  471480:	blr	x8
  471484:	ldr	x9, [x19, #320]
  471488:	mov	x8, xzr
  47148c:	str	xzr, [x19, #256]
  471490:	add	x9, x9, #0x1
  471494:	str	x9, [x19, #320]
  471498:	add	x9, x8, #0x1
  47149c:	mov	w10, #0x65                  	// #101
  4714a0:	str	x9, [x19, #256]
  4714a4:	strb	w10, [x19, x8]
  4714a8:	ldr	x8, [x19, #256]
  4714ac:	strb	w10, [x19, #264]
  4714b0:	cmp	x8, #0xff
  4714b4:	b.ne	4714e0 <feof@plt+0x6dc40>  // b.any
  4714b8:	ldp	x8, x2, [x19, #272]
  4714bc:	mov	w1, #0xff                  	// #255
  4714c0:	mov	x0, x19
  4714c4:	strb	wzr, [x19, #255]
  4714c8:	blr	x8
  4714cc:	ldr	x9, [x19, #320]
  4714d0:	mov	x8, xzr
  4714d4:	str	xzr, [x19, #256]
  4714d8:	add	x9, x9, #0x1
  4714dc:	str	x9, [x19, #320]
  4714e0:	add	x9, x8, #0x1
  4714e4:	mov	w10, #0x77                  	// #119
  4714e8:	str	x9, [x19, #256]
  4714ec:	strb	w10, [x19, x8]
  4714f0:	ldr	x8, [x19, #256]
  4714f4:	strb	w10, [x19, #264]
  4714f8:	cmp	x8, #0xff
  4714fc:	b.ne	471528 <feof@plt+0x6dc88>  // b.any
  471500:	ldp	x8, x2, [x19, #272]
  471504:	mov	w1, #0xff                  	// #255
  471508:	mov	x0, x19
  47150c:	strb	wzr, [x19, #255]
  471510:	blr	x8
  471514:	ldr	x9, [x19, #320]
  471518:	mov	x8, xzr
  47151c:	str	xzr, [x19, #256]
  471520:	add	x9, x9, #0x1
  471524:	str	x9, [x19, #320]
  471528:	add	x9, x8, #0x1
  47152c:	mov	w10, #0x20                  	// #32
  471530:	str	x9, [x19, #256]
  471534:	strb	w10, [x19, x8]
  471538:	strb	w10, [x19, #264]
  47153c:	ldr	x8, [x23, #8]
  471540:	cbz	x8, 475790 <feof@plt+0x71ef0>
  471544:	ldr	w8, [x23]
  471548:	cmp	w8, #0x31
  47154c:	b.hi	475104 <feof@plt+0x71864>  // b.pmore
  471550:	mov	w9, #0x1                   	// #1
  471554:	lsl	x8, x9, x8
  471558:	mov	x9, #0x43                  	// #67
  47155c:	movk	x9, #0x2, lsl #48
  471560:	tst	x8, x9
  471564:	b.eq	475104 <feof@plt+0x71864>  // b.none
  471568:	ldr	w8, [x23, #4]
  47156c:	cmp	w8, #0x1
  471570:	b.gt	471580 <feof@plt+0x6dce0>
  471574:	ldr	w9, [x19, #308]
  471578:	cmp	w9, #0x401
  47157c:	b.lt	475170 <feof@plt+0x718d0>  // b.tstop
  471580:	mov	w8, #0x1                   	// #1
  471584:	str	w8, [x25]
  471588:	b	475748 <feof@plt+0x71ea8>
  47158c:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  471590:	mov	x22, xzr
  471594:	add	x23, x23, #0xe45
  471598:	b	4715b8 <feof@plt+0x6dd18>
  47159c:	add	x22, x22, #0x1
  4715a0:	add	x9, x8, #0x1
  4715a4:	cmp	x22, #0xe
  4715a8:	str	x9, [x19, #256]
  4715ac:	strb	w24, [x19, x8]
  4715b0:	strb	w24, [x19, #264]
  4715b4:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  4715b8:	ldr	x8, [x19, #256]
  4715bc:	ldrb	w24, [x23, x22]
  4715c0:	cmp	x8, #0xff
  4715c4:	b.ne	47159c <feof@plt+0x6dcfc>  // b.any
  4715c8:	ldp	x8, x2, [x19, #272]
  4715cc:	mov	w1, #0xff                  	// #255
  4715d0:	mov	x0, x19
  4715d4:	strb	wzr, [x19, #255]
  4715d8:	blr	x8
  4715dc:	ldr	x9, [x19, #320]
  4715e0:	mov	x8, xzr
  4715e4:	str	xzr, [x19, #256]
  4715e8:	add	x9, x9, #0x1
  4715ec:	str	x9, [x19, #320]
  4715f0:	b	47159c <feof@plt+0x6dcfc>
  4715f4:	ldr	x22, [x21, #8]
  4715f8:	cbz	x22, 471614 <feof@plt+0x6dd74>
  4715fc:	ldr	w8, [x22, #4]
  471600:	cmp	w8, #0x1
  471604:	b.gt	471614 <feof@plt+0x6dd74>
  471608:	ldr	w9, [x19, #308]
  47160c:	cmp	w9, #0x401
  471610:	b.lt	473838 <feof@plt+0x6ff98>  // b.tstop
  471614:	mov	w8, #0x1                   	// #1
  471618:	str	w8, [x25]
  47161c:	ldr	x21, [x21, #16]
  471620:	cbnz	x21, 4720d4 <feof@plt+0x6e834>
  471624:	b	4720ec <feof@plt+0x6e84c>
  471628:	ldr	x8, [x19, #256]
  47162c:	ldr	w20, [x21, #8]
  471630:	cmp	x8, #0xff
  471634:	b.ne	471660 <feof@plt+0x6ddc0>  // b.any
  471638:	ldp	x8, x2, [x19, #272]
  47163c:	mov	w1, #0xff                  	// #255
  471640:	mov	x0, x19
  471644:	strb	wzr, [x19, #255]
  471648:	blr	x8
  47164c:	ldr	x9, [x19, #320]
  471650:	mov	x8, xzr
  471654:	str	xzr, [x19, #256]
  471658:	add	x9, x9, #0x1
  47165c:	str	x9, [x19, #320]
  471660:	add	x9, x8, #0x1
  471664:	str	x9, [x19, #256]
  471668:	strb	w20, [x19, x8]
  47166c:	strb	w20, [x19, #264]
  471670:	b	4720f4 <feof@plt+0x6e854>
  471674:	ldr	w2, [x21, #8]
  471678:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  47167c:	add	x1, x1, #0xadf
  471680:	add	x0, sp, #0x10
  471684:	bl	403340 <sprintf@plt>
  471688:	add	x0, sp, #0x10
  47168c:	bl	4030b0 <strlen@plt>
  471690:	cbz	x0, 4720f4 <feof@plt+0x6e854>
  471694:	mov	x20, x0
  471698:	add	x21, sp, #0x10
  47169c:	b	4716bc <feof@plt+0x6de1c>
  4716a0:	add	x9, x8, #0x1
  4716a4:	subs	x20, x20, #0x1
  4716a8:	add	x21, x21, #0x1
  4716ac:	str	x9, [x19, #256]
  4716b0:	strb	w22, [x19, x8]
  4716b4:	strb	w22, [x19, #264]
  4716b8:	b.eq	4720f4 <feof@plt+0x6e854>  // b.none
  4716bc:	ldr	x8, [x19, #256]
  4716c0:	ldrb	w22, [x21]
  4716c4:	cmp	x8, #0xff
  4716c8:	b.ne	4716a0 <feof@plt+0x6de00>  // b.any
  4716cc:	ldp	x8, x2, [x19, #272]
  4716d0:	mov	w1, #0xff                  	// #255
  4716d4:	mov	x0, x19
  4716d8:	strb	wzr, [x19, #255]
  4716dc:	blr	x8
  4716e0:	ldr	x9, [x19, #320]
  4716e4:	mov	x8, xzr
  4716e8:	str	xzr, [x19, #256]
  4716ec:	add	x9, x9, #0x1
  4716f0:	str	x9, [x19, #320]
  4716f4:	b	4716a0 <feof@plt+0x6de00>
  4716f8:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  4716fc:	mov	x22, xzr
  471700:	add	x23, x23, #0xe54
  471704:	b	471724 <feof@plt+0x6de84>
  471708:	add	x22, x22, #0x1
  47170c:	add	x9, x8, #0x1
  471710:	cmp	x22, #0xa
  471714:	str	x9, [x19, #256]
  471718:	strb	w24, [x19, x8]
  47171c:	strb	w24, [x19, #264]
  471720:	b.eq	4723a4 <feof@plt+0x6eb04>  // b.none
  471724:	ldr	x8, [x19, #256]
  471728:	ldrb	w24, [x23, x22]
  47172c:	cmp	x8, #0xff
  471730:	b.ne	471708 <feof@plt+0x6de68>  // b.any
  471734:	ldp	x8, x2, [x19, #272]
  471738:	mov	w1, #0xff                  	// #255
  47173c:	mov	x0, x19
  471740:	strb	wzr, [x19, #255]
  471744:	blr	x8
  471748:	ldr	x9, [x19, #320]
  47174c:	mov	x8, xzr
  471750:	str	xzr, [x19, #256]
  471754:	add	x9, x9, #0x1
  471758:	str	x9, [x19, #320]
  47175c:	b	471708 <feof@plt+0x6de68>
  471760:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  471764:	mov	x22, xzr
  471768:	add	x23, x23, #0xe5f
  47176c:	b	47178c <feof@plt+0x6deec>
  471770:	add	x22, x22, #0x1
  471774:	add	x9, x8, #0x1
  471778:	cmp	x22, #0x1d
  47177c:	str	x9, [x19, #256]
  471780:	strb	w24, [x19, x8]
  471784:	strb	w24, [x19, #264]
  471788:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  47178c:	ldr	x8, [x19, #256]
  471790:	ldrb	w24, [x23, x22]
  471794:	cmp	x8, #0xff
  471798:	b.ne	471770 <feof@plt+0x6ded0>  // b.any
  47179c:	ldp	x8, x2, [x19, #272]
  4717a0:	mov	w1, #0xff                  	// #255
  4717a4:	mov	x0, x19
  4717a8:	strb	wzr, [x19, #255]
  4717ac:	blr	x8
  4717b0:	ldr	x9, [x19, #320]
  4717b4:	mov	x8, xzr
  4717b8:	str	xzr, [x19, #256]
  4717bc:	add	x9, x9, #0x1
  4717c0:	str	x9, [x19, #320]
  4717c4:	b	471770 <feof@plt+0x6ded0>
  4717c8:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  4717cc:	mov	x22, xzr
  4717d0:	add	x23, x23, #0xe7d
  4717d4:	b	4717f4 <feof@plt+0x6df54>
  4717d8:	add	x22, x22, #0x1
  4717dc:	add	x9, x8, #0x1
  4717e0:	cmp	x22, #0x1c
  4717e4:	str	x9, [x19, #256]
  4717e8:	strb	w24, [x19, x8]
  4717ec:	strb	w24, [x19, #264]
  4717f0:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  4717f4:	ldr	x8, [x19, #256]
  4717f8:	ldrb	w24, [x23, x22]
  4717fc:	cmp	x8, #0xff
  471800:	b.ne	4717d8 <feof@plt+0x6df38>  // b.any
  471804:	ldp	x8, x2, [x19, #272]
  471808:	mov	w1, #0xff                  	// #255
  47180c:	mov	x0, x19
  471810:	strb	wzr, [x19, #255]
  471814:	blr	x8
  471818:	ldr	x9, [x19, #320]
  47181c:	mov	x8, xzr
  471820:	str	xzr, [x19, #256]
  471824:	add	x9, x9, #0x1
  471828:	str	x9, [x19, #320]
  47182c:	b	4717d8 <feof@plt+0x6df38>
  471830:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  471834:	mov	x22, xzr
  471838:	add	x23, x23, #0xe9a
  47183c:	b	47185c <feof@plt+0x6dfbc>
  471840:	add	x22, x22, #0x1
  471844:	add	x9, x8, #0x1
  471848:	cmp	x22, #0x8
  47184c:	str	x9, [x19, #256]
  471850:	strb	w24, [x19, x8]
  471854:	strb	w24, [x19, #264]
  471858:	b.eq	47241c <feof@plt+0x6eb7c>  // b.none
  47185c:	ldr	x8, [x19, #256]
  471860:	ldrb	w24, [x23, x22]
  471864:	cmp	x8, #0xff
  471868:	b.ne	471840 <feof@plt+0x6dfa0>  // b.any
  47186c:	ldp	x8, x2, [x19, #272]
  471870:	mov	w1, #0xff                  	// #255
  471874:	mov	x0, x19
  471878:	strb	wzr, [x19, #255]
  47187c:	blr	x8
  471880:	ldr	x9, [x19, #320]
  471884:	mov	x8, xzr
  471888:	str	xzr, [x19, #256]
  47188c:	add	x9, x9, #0x1
  471890:	str	x9, [x19, #320]
  471894:	b	471840 <feof@plt+0x6dfa0>
  471898:	adrp	x22, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47189c:	mov	x20, xzr
  4718a0:	add	x22, x22, #0xea3
  4718a4:	b	4718c4 <feof@plt+0x6e024>
  4718a8:	add	x20, x20, #0x1
  4718ac:	add	x9, x8, #0x1
  4718b0:	cmp	x20, #0xe
  4718b4:	str	x9, [x19, #256]
  4718b8:	strb	w23, [x19, x8]
  4718bc:	strb	w23, [x19, #264]
  4718c0:	b.eq	472570 <feof@plt+0x6ecd0>  // b.none
  4718c4:	ldr	x8, [x19, #256]
  4718c8:	ldrb	w23, [x22, x20]
  4718cc:	cmp	x8, #0xff
  4718d0:	b.ne	4718a8 <feof@plt+0x6e008>  // b.any
  4718d4:	ldp	x8, x2, [x19, #272]
  4718d8:	mov	w1, #0xff                  	// #255
  4718dc:	mov	x0, x19
  4718e0:	strb	wzr, [x19, #255]
  4718e4:	blr	x8
  4718e8:	ldr	x9, [x19, #320]
  4718ec:	mov	x8, xzr
  4718f0:	str	xzr, [x19, #256]
  4718f4:	add	x9, x9, #0x1
  4718f8:	str	x9, [x19, #320]
  4718fc:	b	4718a8 <feof@plt+0x6e008>
  471900:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  471904:	mov	x22, xzr
  471908:	add	x23, x23, #0xe24
  47190c:	b	47192c <feof@plt+0x6e08c>
  471910:	add	x22, x22, #0x1
  471914:	add	x9, x8, #0x1
  471918:	cmp	x22, #0x16
  47191c:	str	x9, [x19, #256]
  471920:	strb	w24, [x19, x8]
  471924:	strb	w24, [x19, #264]
  471928:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  47192c:	ldr	x8, [x19, #256]
  471930:	ldrb	w24, [x23, x22]
  471934:	cmp	x8, #0xff
  471938:	b.ne	471910 <feof@plt+0x6e070>  // b.any
  47193c:	ldp	x8, x2, [x19, #272]
  471940:	mov	w1, #0xff                  	// #255
  471944:	mov	x0, x19
  471948:	strb	wzr, [x19, #255]
  47194c:	blr	x8
  471950:	ldr	x9, [x19, #320]
  471954:	mov	x8, xzr
  471958:	str	xzr, [x19, #256]
  47195c:	add	x9, x9, #0x1
  471960:	str	x9, [x19, #320]
  471964:	b	471910 <feof@plt+0x6e070>
  471968:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47196c:	mov	x22, xzr
  471970:	add	x23, x23, #0xe20
  471974:	b	471994 <feof@plt+0x6e0f4>
  471978:	add	x22, x22, #0x1
  47197c:	add	x9, x8, #0x1
  471980:	cmp	x22, #0x1a
  471984:	str	x9, [x19, #256]
  471988:	strb	w24, [x19, x8]
  47198c:	strb	w24, [x19, #264]
  471990:	b.eq	4720cc <feof@plt+0x6e82c>  // b.none
  471994:	ldr	x8, [x19, #256]
  471998:	ldrb	w24, [x23, x22]
  47199c:	cmp	x8, #0xff
  4719a0:	b.ne	471978 <feof@plt+0x6e0d8>  // b.any
  4719a4:	ldp	x8, x2, [x19, #272]
  4719a8:	mov	w1, #0xff                  	// #255
  4719ac:	mov	x0, x19
  4719b0:	strb	wzr, [x19, #255]
  4719b4:	blr	x8
  4719b8:	ldr	x9, [x19, #320]
  4719bc:	mov	x8, xzr
  4719c0:	str	xzr, [x19, #256]
  4719c4:	add	x9, x9, #0x1
  4719c8:	str	x9, [x19, #320]
  4719cc:	b	471978 <feof@plt+0x6e0d8>
  4719d0:	ldr	x1, [x21, #8]
  4719d4:	mov	x0, x19
  4719d8:	bl	476dcc <feof@plt+0x7352c>
  4719dc:	cbz	x0, 472ddc <feof@plt+0x6f53c>
  4719e0:	mov	w22, wzr
  4719e4:	ldr	w8, [x0]
  4719e8:	cmp	w8, #0x2f
  4719ec:	b.ne	47291c <feof@plt+0x6f07c>  // b.any
  4719f0:	ldr	x8, [x0, #8]
  4719f4:	cbz	x8, 47291c <feof@plt+0x6f07c>
  4719f8:	ldr	x0, [x0, #16]
  4719fc:	add	w22, w22, #0x1
  471a00:	cbnz	x0, 4719e4 <feof@plt+0x6e144>
  471a04:	b	472920 <feof@plt+0x6f080>
  471a08:	ldr	x22, [x21, #8]
  471a0c:	cbz	x22, 471a28 <feof@plt+0x6e188>
  471a10:	ldr	w8, [x22, #4]
  471a14:	cmp	w8, #0x1
  471a18:	b.gt	471a28 <feof@plt+0x6e188>
  471a1c:	ldr	w9, [x19, #308]
  471a20:	cmp	w9, #0x401
  471a24:	b.lt	473894 <feof@plt+0x6fff4>  // b.tstop
  471a28:	mov	w8, #0x1                   	// #1
  471a2c:	str	w8, [x25]
  471a30:	ldr	x8, [x19, #256]
  471a34:	cmp	x8, #0xff
  471a38:	b.ne	471a64 <feof@plt+0x6e1c4>  // b.any
  471a3c:	ldp	x8, x2, [x19, #272]
  471a40:	mov	w1, #0xff                  	// #255
  471a44:	mov	x0, x19
  471a48:	strb	wzr, [x19, #255]
  471a4c:	blr	x8
  471a50:	ldr	x9, [x19, #320]
  471a54:	mov	x8, xzr
  471a58:	str	xzr, [x19, #256]
  471a5c:	add	x9, x9, #0x1
  471a60:	str	x9, [x19, #320]
  471a64:	add	x9, x8, #0x1
  471a68:	mov	w10, #0x5b                  	// #91
  471a6c:	str	x9, [x19, #256]
  471a70:	strb	w10, [x19, x8]
  471a74:	ldr	x8, [x19, #256]
  471a78:	strb	w10, [x19, #264]
  471a7c:	cmp	x8, #0xff
  471a80:	b.ne	471aac <feof@plt+0x6e20c>  // b.any
  471a84:	ldp	x8, x2, [x19, #272]
  471a88:	mov	w1, #0xff                  	// #255
  471a8c:	mov	x0, x19
  471a90:	strb	wzr, [x19, #255]
  471a94:	blr	x8
  471a98:	ldr	x9, [x19, #320]
  471a9c:	mov	x8, xzr
  471aa0:	str	xzr, [x19, #256]
  471aa4:	add	x9, x9, #0x1
  471aa8:	str	x9, [x19, #320]
  471aac:	add	x9, x8, #0x1
  471ab0:	mov	w10, #0x61                  	// #97
  471ab4:	str	x9, [x19, #256]
  471ab8:	strb	w10, [x19, x8]
  471abc:	ldr	x8, [x19, #256]
  471ac0:	strb	w10, [x19, #264]
  471ac4:	cmp	x8, #0xff
  471ac8:	b.ne	471af4 <feof@plt+0x6e254>  // b.any
  471acc:	ldp	x8, x2, [x19, #272]
  471ad0:	mov	w1, #0xff                  	// #255
  471ad4:	mov	x0, x19
  471ad8:	strb	wzr, [x19, #255]
  471adc:	blr	x8
  471ae0:	ldr	x9, [x19, #320]
  471ae4:	mov	x8, xzr
  471ae8:	str	xzr, [x19, #256]
  471aec:	add	x9, x9, #0x1
  471af0:	str	x9, [x19, #320]
  471af4:	add	x9, x8, #0x1
  471af8:	mov	w10, #0x62                  	// #98
  471afc:	str	x9, [x19, #256]
  471b00:	strb	w10, [x19, x8]
  471b04:	ldr	x8, [x19, #256]
  471b08:	strb	w10, [x19, #264]
  471b0c:	cmp	x8, #0xff
  471b10:	b.ne	471b3c <feof@plt+0x6e29c>  // b.any
  471b14:	ldp	x8, x2, [x19, #272]
  471b18:	mov	w1, #0xff                  	// #255
  471b1c:	mov	x0, x19
  471b20:	strb	wzr, [x19, #255]
  471b24:	blr	x8
  471b28:	ldr	x9, [x19, #320]
  471b2c:	mov	x8, xzr
  471b30:	str	xzr, [x19, #256]
  471b34:	add	x9, x9, #0x1
  471b38:	str	x9, [x19, #320]
  471b3c:	add	x9, x8, #0x1
  471b40:	mov	w10, #0x69                  	// #105
  471b44:	str	x9, [x19, #256]
  471b48:	strb	w10, [x19, x8]
  471b4c:	ldr	x8, [x19, #256]
  471b50:	strb	w10, [x19, #264]
  471b54:	cmp	x8, #0xff
  471b58:	b.ne	471b84 <feof@plt+0x6e2e4>  // b.any
  471b5c:	ldp	x8, x2, [x19, #272]
  471b60:	mov	w1, #0xff                  	// #255
  471b64:	mov	x0, x19
  471b68:	strb	wzr, [x19, #255]
  471b6c:	blr	x8
  471b70:	ldr	x9, [x19, #320]
  471b74:	mov	x8, xzr
  471b78:	str	xzr, [x19, #256]
  471b7c:	add	x9, x9, #0x1
  471b80:	str	x9, [x19, #320]
  471b84:	add	x9, x8, #0x1
  471b88:	mov	w10, #0x3a                  	// #58
  471b8c:	b	471d74 <feof@plt+0x6e4d4>
  471b90:	ldr	x22, [x21, #8]
  471b94:	cbz	x22, 471bb0 <feof@plt+0x6e310>
  471b98:	ldr	w8, [x22, #4]
  471b9c:	cmp	w8, #0x1
  471ba0:	b.gt	471bb0 <feof@plt+0x6e310>
  471ba4:	ldr	w9, [x19, #308]
  471ba8:	cmp	w9, #0x401
  471bac:	b.lt	4738e8 <feof@plt+0x70048>  // b.tstop
  471bb0:	mov	w8, #0x1                   	// #1
  471bb4:	str	w8, [x25]
  471bb8:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  471bbc:	mov	x22, xzr
  471bc0:	add	x23, x23, #0xeb2
  471bc4:	b	471be4 <feof@plt+0x6e344>
  471bc8:	add	x22, x22, #0x1
  471bcc:	add	x9, x8, #0x1
  471bd0:	cmp	x22, #0x8
  471bd4:	str	x9, [x19, #256]
  471bd8:	strb	w24, [x19, x8]
  471bdc:	strb	w24, [x19, #264]
  471be0:	b.eq	471d80 <feof@plt+0x6e4e0>  // b.none
  471be4:	ldr	x8, [x19, #256]
  471be8:	ldrb	w24, [x23, x22]
  471bec:	cmp	x8, #0xff
  471bf0:	b.ne	471bc8 <feof@plt+0x6e328>  // b.any
  471bf4:	ldp	x8, x2, [x19, #272]
  471bf8:	mov	w1, #0xff                  	// #255
  471bfc:	mov	x0, x19
  471c00:	strb	wzr, [x19, #255]
  471c04:	blr	x8
  471c08:	ldr	x9, [x19, #320]
  471c0c:	mov	x8, xzr
  471c10:	str	xzr, [x19, #256]
  471c14:	add	x9, x9, #0x1
  471c18:	str	x9, [x19, #320]
  471c1c:	b	471bc8 <feof@plt+0x6e328>
  471c20:	mov	w23, wzr
  471c24:	ldr	x8, [x19, #256]
  471c28:	cmp	x8, #0xff
  471c2c:	b.ne	471c58 <feof@plt+0x6e3b8>  // b.any
  471c30:	ldp	x8, x2, [x19, #272]
  471c34:	mov	w1, #0xff                  	// #255
  471c38:	mov	x0, x19
  471c3c:	strb	wzr, [x19, #255]
  471c40:	blr	x8
  471c44:	ldr	x9, [x19, #320]
  471c48:	mov	x8, xzr
  471c4c:	str	xzr, [x19, #256]
  471c50:	add	x9, x9, #0x1
  471c54:	str	x9, [x19, #320]
  471c58:	add	x9, x8, #0x1
  471c5c:	mov	w10, #0x28                  	// #40
  471c60:	str	x9, [x19, #256]
  471c64:	strb	w10, [x19, x8]
  471c68:	strb	w10, [x19, #264]
  471c6c:	ldr	x22, [x21, #8]
  471c70:	cbz	x22, 471c8c <feof@plt+0x6e3ec>
  471c74:	ldr	w8, [x22, #4]
  471c78:	cmp	w8, #0x1
  471c7c:	b.gt	471c8c <feof@plt+0x6e3ec>
  471c80:	ldr	w9, [x19, #308]
  471c84:	cmp	w9, #0x401
  471c88:	b.lt	47346c <feof@plt+0x6fbcc>  // b.tstop
  471c8c:	mov	w8, #0x1                   	// #1
  471c90:	str	w8, [x25]
  471c94:	ldr	x8, [x19, #256]
  471c98:	cmp	x8, #0xff
  471c9c:	b.ne	471cc8 <feof@plt+0x6e428>  // b.any
  471ca0:	ldp	x8, x2, [x19, #272]
  471ca4:	mov	w1, #0xff                  	// #255
  471ca8:	mov	x0, x19
  471cac:	strb	wzr, [x19, #255]
  471cb0:	blr	x8
  471cb4:	ldr	x9, [x19, #320]
  471cb8:	mov	x8, xzr
  471cbc:	str	xzr, [x19, #256]
  471cc0:	add	x9, x9, #0x1
  471cc4:	str	x9, [x19, #320]
  471cc8:	add	x9, x8, #0x1
  471ccc:	mov	w10, #0x29                  	// #41
  471cd0:	str	x9, [x19, #256]
  471cd4:	strb	w10, [x19, x8]
  471cd8:	strb	w10, [x19, #264]
  471cdc:	ldr	w8, [x21]
  471ce0:	cmp	w8, #0x3e
  471ce4:	b.ne	471d30 <feof@plt+0x6e490>  // b.any
  471ce8:	ldr	x8, [x19, #256]
  471cec:	cmp	x8, #0xff
  471cf0:	b.ne	471d1c <feof@plt+0x6e47c>  // b.any
  471cf4:	ldp	x8, x2, [x19, #272]
  471cf8:	mov	w1, #0xff                  	// #255
  471cfc:	mov	x0, x19
  471d00:	strb	wzr, [x19, #255]
  471d04:	blr	x8
  471d08:	ldr	x9, [x19, #320]
  471d0c:	mov	x8, xzr
  471d10:	str	xzr, [x19, #256]
  471d14:	add	x9, x9, #0x1
  471d18:	str	x9, [x19, #320]
  471d1c:	add	x9, x8, #0x1
  471d20:	mov	w10, #0x2d                  	// #45
  471d24:	str	x9, [x19, #256]
  471d28:	strb	w10, [x19, x8]
  471d2c:	strb	w10, [x19, #264]
  471d30:	cmp	w23, #0x8
  471d34:	b.ne	471f30 <feof@plt+0x6e690>  // b.any
  471d38:	ldr	x8, [x19, #256]
  471d3c:	cmp	x8, #0xff
  471d40:	b.ne	471d6c <feof@plt+0x6e4cc>  // b.any
  471d44:	ldp	x8, x2, [x19, #272]
  471d48:	mov	w1, #0xff                  	// #255
  471d4c:	mov	x0, x19
  471d50:	strb	wzr, [x19, #255]
  471d54:	blr	x8
  471d58:	ldr	x9, [x19, #320]
  471d5c:	mov	x8, xzr
  471d60:	str	xzr, [x19, #256]
  471d64:	add	x9, x9, #0x1
  471d68:	str	x9, [x19, #320]
  471d6c:	add	x9, x8, #0x1
  471d70:	mov	w10, #0x5b                  	// #91
  471d74:	str	x9, [x19, #256]
  471d78:	strb	w10, [x19, x8]
  471d7c:	strb	w10, [x19, #264]
  471d80:	ldr	x21, [x21, #16]
  471d84:	cbz	x21, 471da0 <feof@plt+0x6e500>
  471d88:	ldr	w8, [x21, #4]
  471d8c:	cmp	w8, #0x1
  471d90:	b.gt	471da0 <feof@plt+0x6e500>
  471d94:	ldr	w9, [x19, #308]
  471d98:	cmp	w9, #0x401
  471d9c:	b.lt	4728c4 <feof@plt+0x6f024>  // b.tstop
  471da0:	mov	w8, #0x1                   	// #1
  471da4:	str	w8, [x25]
  471da8:	ldr	x8, [x19, #256]
  471dac:	cmp	x8, #0xff
  471db0:	b.ne	471ddc <feof@plt+0x6e53c>  // b.any
  471db4:	ldp	x8, x2, [x19, #272]
  471db8:	mov	w1, #0xff                  	// #255
  471dbc:	mov	x0, x19
  471dc0:	strb	wzr, [x19, #255]
  471dc4:	blr	x8
  471dc8:	ldr	x9, [x19, #320]
  471dcc:	mov	x8, xzr
  471dd0:	str	xzr, [x19, #256]
  471dd4:	add	x9, x9, #0x1
  471dd8:	str	x9, [x19, #320]
  471ddc:	add	x9, x8, #0x1
  471de0:	mov	w10, #0x5d                  	// #93
  471de4:	b	4749e8 <feof@plt+0x71148>
  471de8:	ldr	x22, [x21, #8]
  471dec:	cbz	x22, 471e08 <feof@plt+0x6e568>
  471df0:	ldr	w8, [x22, #4]
  471df4:	cmp	w8, #0x1
  471df8:	b.gt	471e08 <feof@plt+0x6e568>
  471dfc:	ldr	w9, [x19, #308]
  471e00:	cmp	w9, #0x401
  471e04:	b.lt	47393c <feof@plt+0x7009c>  // b.tstop
  471e08:	mov	w8, #0x1                   	// #1
  471e0c:	str	w8, [x25]
  471e10:	ldr	x8, [x19, #256]
  471e14:	cmp	x8, #0xff
  471e18:	b.ne	471e44 <feof@plt+0x6e5a4>  // b.any
  471e1c:	ldp	x8, x2, [x19, #272]
  471e20:	mov	w1, #0xff                  	// #255
  471e24:	mov	x0, x19
  471e28:	strb	wzr, [x19, #255]
  471e2c:	blr	x8
  471e30:	ldr	x9, [x19, #320]
  471e34:	mov	x8, xzr
  471e38:	str	xzr, [x19, #256]
  471e3c:	add	x9, x9, #0x1
  471e40:	str	x9, [x19, #320]
  471e44:	add	x9, x8, #0x1
  471e48:	mov	w10, #0x2d                  	// #45
  471e4c:	str	x9, [x19, #256]
  471e50:	strb	w10, [x19, x8]
  471e54:	ldr	x8, [x19, #256]
  471e58:	strb	w10, [x19, #264]
  471e5c:	cmp	x8, #0xff
  471e60:	b.ne	471e8c <feof@plt+0x6e5ec>  // b.any
  471e64:	ldp	x8, x2, [x19, #272]
  471e68:	mov	w1, #0xff                  	// #255
  471e6c:	mov	x0, x19
  471e70:	strb	wzr, [x19, #255]
  471e74:	blr	x8
  471e78:	ldr	x9, [x19, #320]
  471e7c:	mov	x8, xzr
  471e80:	str	xzr, [x19, #256]
  471e84:	add	x9, x9, #0x1
  471e88:	str	x9, [x19, #320]
  471e8c:	add	x9, x8, #0x1
  471e90:	mov	w10, #0x69                  	// #105
  471e94:	str	x9, [x19, #256]
  471e98:	strb	w10, [x19, x8]
  471e9c:	ldr	x8, [x19, #256]
  471ea0:	strb	w10, [x19, #264]
  471ea4:	cmp	x8, #0xff
  471ea8:	b.ne	471ed4 <feof@plt+0x6e634>  // b.any
  471eac:	ldp	x8, x2, [x19, #272]
  471eb0:	mov	w1, #0xff                  	// #255
  471eb4:	mov	x0, x19
  471eb8:	strb	wzr, [x19, #255]
  471ebc:	blr	x8
  471ec0:	ldr	x9, [x19, #320]
  471ec4:	mov	x8, xzr
  471ec8:	str	xzr, [x19, #256]
  471ecc:	add	x9, x9, #0x1
  471ed0:	str	x9, [x19, #320]
  471ed4:	add	x9, x8, #0x1
  471ed8:	mov	w10, #0x6e                  	// #110
  471edc:	str	x9, [x19, #256]
  471ee0:	strb	w10, [x19, x8]
  471ee4:	ldr	x8, [x19, #256]
  471ee8:	strb	w10, [x19, #264]
  471eec:	cmp	x8, #0xff
  471ef0:	b.ne	471f1c <feof@plt+0x6e67c>  // b.any
  471ef4:	ldp	x8, x2, [x19, #272]
  471ef8:	mov	w1, #0xff                  	// #255
  471efc:	mov	x0, x19
  471f00:	strb	wzr, [x19, #255]
  471f04:	blr	x8
  471f08:	ldr	x9, [x19, #320]
  471f0c:	mov	x8, xzr
  471f10:	str	xzr, [x19, #256]
  471f14:	add	x9, x9, #0x1
  471f18:	str	x9, [x19, #320]
  471f1c:	add	x9, x8, #0x1
  471f20:	mov	w10, #0x2d                  	// #45
  471f24:	str	x9, [x19, #256]
  471f28:	strb	w10, [x19, x8]
  471f2c:	strb	w10, [x19, #264]
  471f30:	ldr	x21, [x21, #16]
  471f34:	cbnz	x21, 4720d4 <feof@plt+0x6e834>
  471f38:	b	4720ec <feof@plt+0x6e84c>
  471f3c:	ldr	x22, [x21, #16]
  471f40:	cbz	x22, 471f5c <feof@plt+0x6e6bc>
  471f44:	ldr	w8, [x22, #4]
  471f48:	cmp	w8, #0x1
  471f4c:	b.gt	471f5c <feof@plt+0x6e6bc>
  471f50:	ldr	w9, [x19, #308]
  471f54:	cmp	w9, #0x401
  471f58:	b.lt	473990 <feof@plt+0x700f0>  // b.tstop
  471f5c:	mov	w8, #0x1                   	// #1
  471f60:	str	w8, [x25]
  471f64:	ldr	x8, [x19, #256]
  471f68:	cmp	x8, #0xff
  471f6c:	b.ne	471f98 <feof@plt+0x6e6f8>  // b.any
  471f70:	ldp	x8, x2, [x19, #272]
  471f74:	mov	w1, #0xff                  	// #255
  471f78:	mov	x0, x19
  471f7c:	strb	wzr, [x19, #255]
  471f80:	blr	x8
  471f84:	ldr	x9, [x19, #320]
  471f88:	mov	x8, xzr
  471f8c:	str	xzr, [x19, #256]
  471f90:	add	x9, x9, #0x1
  471f94:	str	x9, [x19, #320]
  471f98:	add	x9, x8, #0x1
  471f9c:	mov	w10, #0x20                  	// #32
  471fa0:	str	x9, [x19, #256]
  471fa4:	strb	w10, [x19, x8]
  471fa8:	ldr	x8, [x19, #256]
  471fac:	strb	w10, [x19, #264]
  471fb0:	cmp	x8, #0xff
  471fb4:	b.ne	471fe0 <feof@plt+0x6e740>  // b.any
  471fb8:	ldp	x8, x2, [x19, #272]
  471fbc:	mov	w1, #0xff                  	// #255
  471fc0:	mov	x0, x19
  471fc4:	strb	wzr, [x19, #255]
  471fc8:	blr	x8
  471fcc:	ldr	x9, [x19, #320]
  471fd0:	mov	x8, xzr
  471fd4:	str	xzr, [x19, #256]
  471fd8:	add	x9, x9, #0x1
  471fdc:	str	x9, [x19, #320]
  471fe0:	add	x9, x8, #0x1
  471fe4:	mov	w10, #0x66                  	// #102
  471fe8:	str	x9, [x19, #256]
  471fec:	strb	w10, [x19, x8]
  471ff0:	ldr	x8, [x19, #256]
  471ff4:	strb	w10, [x19, #264]
  471ff8:	cmp	x8, #0xff
  471ffc:	b.ne	472028 <feof@plt+0x6e788>  // b.any
  472000:	ldp	x8, x2, [x19, #272]
  472004:	mov	w1, #0xff                  	// #255
  472008:	mov	x0, x19
  47200c:	strb	wzr, [x19, #255]
  472010:	blr	x8
  472014:	ldr	x9, [x19, #320]
  472018:	mov	x8, xzr
  47201c:	str	xzr, [x19, #256]
  472020:	add	x9, x9, #0x1
  472024:	str	x9, [x19, #320]
  472028:	add	x9, x8, #0x1
  47202c:	mov	w10, #0x6f                  	// #111
  472030:	str	x9, [x19, #256]
  472034:	strb	w10, [x19, x8]
  472038:	ldr	x8, [x19, #256]
  47203c:	strb	w10, [x19, #264]
  472040:	cmp	x8, #0xff
  472044:	b.ne	472070 <feof@plt+0x6e7d0>  // b.any
  472048:	ldp	x8, x2, [x19, #272]
  47204c:	mov	w1, #0xff                  	// #255
  472050:	mov	x0, x19
  472054:	strb	wzr, [x19, #255]
  472058:	blr	x8
  47205c:	ldr	x9, [x19, #320]
  472060:	mov	x8, xzr
  472064:	str	xzr, [x19, #256]
  472068:	add	x9, x9, #0x1
  47206c:	str	x9, [x19, #320]
  472070:	add	x9, x8, #0x1
  472074:	mov	w10, #0x72                  	// #114
  472078:	str	x9, [x19, #256]
  47207c:	strb	w10, [x19, x8]
  472080:	ldr	x8, [x19, #256]
  472084:	strb	w10, [x19, #264]
  472088:	cmp	x8, #0xff
  47208c:	b.ne	4720b8 <feof@plt+0x6e818>  // b.any
  472090:	ldp	x8, x2, [x19, #272]
  472094:	mov	w1, #0xff                  	// #255
  472098:	mov	x0, x19
  47209c:	strb	wzr, [x19, #255]
  4720a0:	blr	x8
  4720a4:	ldr	x9, [x19, #320]
  4720a8:	mov	x8, xzr
  4720ac:	str	xzr, [x19, #256]
  4720b0:	add	x9, x9, #0x1
  4720b4:	str	x9, [x19, #320]
  4720b8:	add	x9, x8, #0x1
  4720bc:	mov	w10, #0x20                  	// #32
  4720c0:	str	x9, [x19, #256]
  4720c4:	strb	w10, [x19, x8]
  4720c8:	strb	w10, [x19, #264]
  4720cc:	ldr	x21, [x21, #8]
  4720d0:	cbz	x21, 4720ec <feof@plt+0x6e84c>
  4720d4:	ldr	w8, [x21, #4]
  4720d8:	cmp	w8, #0x1
  4720dc:	b.gt	4720ec <feof@plt+0x6e84c>
  4720e0:	ldr	w9, [x19, #308]
  4720e4:	cmp	w9, #0x401
  4720e8:	b.lt	472114 <feof@plt+0x6e874>  // b.tstop
  4720ec:	mov	w8, #0x1                   	// #1
  4720f0:	str	w8, [x25]
  4720f4:	ldp	x20, x19, [sp, #240]
  4720f8:	ldp	x22, x21, [sp, #224]
  4720fc:	ldp	x24, x23, [sp, #208]
  472100:	ldp	x26, x25, [sp, #192]
  472104:	ldp	x28, x27, [sp, #176]
  472108:	ldp	x29, x30, [sp, #160]
  47210c:	add	sp, sp, #0x100
  472110:	ret
  472114:	add	w8, w8, #0x1
  472118:	add	w9, w9, #0x1
  47211c:	str	w8, [x21, #4]
  472120:	str	w9, [x19, #308]
  472124:	str	x21, [sp, #16]
  472128:	ldr	x8, [x19, #328]
  47212c:	add	x9, sp, #0x10
  472130:	mov	x0, x19
  472134:	mov	w1, w20
  472138:	mov	x2, x21
  47213c:	str	x8, [sp, #24]
  472140:	str	x9, [x19, #328]
  472144:	bl	46f9e8 <feof@plt+0x6c148>
  472148:	ldr	x8, [sp, #24]
  47214c:	str	x8, [x19, #328]
  472150:	ldr	w8, [x21, #4]
  472154:	sub	w8, w8, #0x1
  472158:	str	w8, [x21, #4]
  47215c:	ldr	w8, [x19, #308]
  472160:	sub	w8, w8, #0x1
  472164:	str	w8, [x19, #308]
  472168:	b	4720f4 <feof@plt+0x6e854>
  47216c:	ldr	x22, [x21, #8]
  472170:	ldrb	w8, [x22]
  472174:	sub	w8, w8, #0x61
  472178:	cmp	w8, #0x19
  47217c:	b.hi	4721cc <feof@plt+0x6e92c>  // b.pmore
  472180:	ldr	x8, [x19, #256]
  472184:	cmp	x8, #0xff
  472188:	b.ne	4721b4 <feof@plt+0x6e914>  // b.any
  47218c:	ldp	x8, x2, [x19, #272]
  472190:	mov	w1, #0xff                  	// #255
  472194:	mov	x0, x19
  472198:	strb	wzr, [x19, #255]
  47219c:	blr	x8
  4721a0:	ldr	x9, [x19, #320]
  4721a4:	mov	x8, xzr
  4721a8:	str	xzr, [x19, #256]
  4721ac:	add	x9, x9, #0x1
  4721b0:	str	x9, [x19, #320]
  4721b4:	add	x9, x8, #0x1
  4721b8:	mov	w10, #0x20                  	// #32
  4721bc:	str	x9, [x19, #256]
  4721c0:	strb	w10, [x19, x8]
  4721c4:	strb	w10, [x19, #264]
  4721c8:	ldr	x22, [x21, #8]
  4721cc:	sub	x8, x20, #0x1
  4721d0:	ldrb	w9, [x22, x8]
  4721d4:	cmp	w9, #0x20
  4721d8:	csel	w8, w8, w20, eq  // eq = none
  4721dc:	cbz	w8, 4720f4 <feof@plt+0x6e854>
  4721e0:	sxtw	x20, w8
  4721e4:	b	472204 <feof@plt+0x6e964>
  4721e8:	add	x9, x8, #0x1
  4721ec:	subs	x20, x20, #0x1
  4721f0:	add	x22, x22, #0x1
  4721f4:	str	x9, [x19, #256]
  4721f8:	strb	w21, [x19, x8]
  4721fc:	strb	w21, [x19, #264]
  472200:	b.eq	4720f4 <feof@plt+0x6e854>  // b.none
  472204:	ldr	x8, [x19, #256]
  472208:	ldrb	w21, [x22]
  47220c:	cmp	x8, #0xff
  472210:	b.ne	4721e8 <feof@plt+0x6e948>  // b.any
  472214:	ldp	x8, x2, [x19, #272]
  472218:	mov	w1, #0xff                  	// #255
  47221c:	mov	x0, x19
  472220:	strb	wzr, [x19, #255]
  472224:	blr	x8
  472228:	ldr	x9, [x19, #320]
  47222c:	mov	x8, xzr
  472230:	str	xzr, [x19, #256]
  472234:	add	x9, x9, #0x1
  472238:	str	x9, [x19, #320]
  47223c:	b	4721e8 <feof@plt+0x6e948>
  472240:	ldr	x8, [x19, #368]
  472244:	cbz	x8, 472258 <feof@plt+0x6e9b8>
  472248:	ldr	x9, [x19, #288]
  47224c:	sub	x10, x29, #0x10
  472250:	stp	x9, x8, [x29, #-16]
  472254:	str	x10, [x19, #288]
  472258:	ldr	x22, [x21, #8]
  47225c:	ldr	w9, [x22]
  472260:	cmp	w9, #0x4
  472264:	b.ne	472890 <feof@plt+0x6eff0>  // b.any
  472268:	ldr	x22, [x22, #8]
  47226c:	cbz	x22, 472288 <feof@plt+0x6e9e8>
  472270:	ldr	w9, [x22, #4]
  472274:	cmp	w9, #0x1
  472278:	b.gt	472288 <feof@plt+0x6e9e8>
  47227c:	ldr	w10, [x19, #308]
  472280:	cmp	w10, #0x401
  472284:	b.lt	473dd0 <feof@plt+0x70530>  // b.tstop
  472288:	mov	w9, #0x1                   	// #1
  47228c:	str	w9, [x25]
  472290:	cbz	x8, 47229c <feof@plt+0x6e9fc>
  472294:	ldur	x8, [x29, #-16]
  472298:	str	x8, [x19, #288]
  47229c:	ldrb	w8, [x19, #264]
  4722a0:	cmp	w8, #0x3c
  4722a4:	b.ne	4722f0 <feof@plt+0x6ea50>  // b.any
  4722a8:	ldr	x8, [x19, #256]
  4722ac:	cmp	x8, #0xff
  4722b0:	b.ne	4722dc <feof@plt+0x6ea3c>  // b.any
  4722b4:	ldp	x8, x2, [x19, #272]
  4722b8:	mov	w1, #0xff                  	// #255
  4722bc:	mov	x0, x19
  4722c0:	strb	wzr, [x19, #255]
  4722c4:	blr	x8
  4722c8:	ldr	x9, [x19, #320]
  4722cc:	mov	x8, xzr
  4722d0:	str	xzr, [x19, #256]
  4722d4:	add	x9, x9, #0x1
  4722d8:	str	x9, [x19, #320]
  4722dc:	add	x9, x8, #0x1
  4722e0:	mov	w10, #0x20                  	// #32
  4722e4:	str	x9, [x19, #256]
  4722e8:	strb	w10, [x19, x8]
  4722ec:	strb	w10, [x19, #264]
  4722f0:	ldr	x8, [x19, #256]
  4722f4:	cmp	x8, #0xff
  4722f8:	b.ne	472324 <feof@plt+0x6ea84>  // b.any
  4722fc:	ldp	x8, x2, [x19, #272]
  472300:	mov	w1, #0xff                  	// #255
  472304:	mov	x0, x19
  472308:	strb	wzr, [x19, #255]
  47230c:	blr	x8
  472310:	ldr	x9, [x19, #320]
  472314:	mov	x8, xzr
  472318:	str	xzr, [x19, #256]
  47231c:	add	x9, x9, #0x1
  472320:	str	x9, [x19, #320]
  472324:	add	x9, x8, #0x1
  472328:	mov	w10, #0x3c                  	// #60
  47232c:	str	x9, [x19, #256]
  472330:	strb	w10, [x19, x8]
  472334:	strb	w10, [x19, #264]
  472338:	ldr	x8, [x21, #8]
  47233c:	ldr	x21, [x8, #16]
  472340:	cbz	x21, 47235c <feof@plt+0x6eabc>
  472344:	ldr	w8, [x21, #4]
  472348:	cmp	w8, #0x1
  47234c:	b.gt	47235c <feof@plt+0x6eabc>
  472350:	ldr	w9, [x19, #308]
  472354:	cmp	w9, #0x401
  472358:	b.lt	473e2c <feof@plt+0x7058c>  // b.tstop
  47235c:	mov	w8, #0x1                   	// #1
  472360:	str	w8, [x25]
  472364:	ldr	x8, [x19, #256]
  472368:	cmp	x8, #0xff
  47236c:	b.ne	472398 <feof@plt+0x6eaf8>  // b.any
  472370:	ldp	x8, x2, [x19, #272]
  472374:	mov	w1, #0xff                  	// #255
  472378:	mov	x0, x19
  47237c:	strb	wzr, [x19, #255]
  472380:	blr	x8
  472384:	ldr	x9, [x19, #320]
  472388:	mov	x8, xzr
  47238c:	str	xzr, [x19, #256]
  472390:	add	x9, x9, #0x1
  472394:	str	x9, [x19, #320]
  472398:	add	x9, x8, #0x1
  47239c:	mov	w10, #0x3e                  	// #62
  4723a0:	b	4749e8 <feof@plt+0x71148>
  4723a4:	ldr	x21, [x21, #8]
  4723a8:	cbz	x21, 4749a4 <feof@plt+0x71104>
  4723ac:	ldr	w8, [x21, #4]
  4723b0:	cmp	w8, #0x1
  4723b4:	b.gt	4749a4 <feof@plt+0x71104>
  4723b8:	ldr	w9, [x19, #308]
  4723bc:	cmp	w9, #0x401
  4723c0:	b.ge	4749a4 <feof@plt+0x71104>  // b.tcont
  4723c4:	add	w8, w8, #0x1
  4723c8:	add	w9, w9, #0x1
  4723cc:	str	w8, [x21, #4]
  4723d0:	str	w9, [x19, #308]
  4723d4:	str	x21, [sp, #16]
  4723d8:	ldr	x8, [x19, #328]
  4723dc:	add	x9, sp, #0x10
  4723e0:	mov	x0, x19
  4723e4:	mov	w1, w20
  4723e8:	mov	x2, x21
  4723ec:	str	x8, [sp, #24]
  4723f0:	str	x9, [x19, #328]
  4723f4:	bl	46f9e8 <feof@plt+0x6c148>
  4723f8:	ldr	x8, [sp, #24]
  4723fc:	str	x8, [x19, #328]
  472400:	ldr	w8, [x21, #4]
  472404:	sub	w8, w8, #0x1
  472408:	str	w8, [x21, #4]
  47240c:	ldr	w8, [x19, #308]
  472410:	sub	w8, w8, #0x1
  472414:	str	w8, [x19, #308]
  472418:	b	4749ac <feof@plt+0x7110c>
  47241c:	ldr	w8, [x19, #312]
  472420:	add	w8, w8, #0x1
  472424:	str	w8, [x19, #312]
  472428:	ldr	x22, [x21, #8]
  47242c:	cbz	x22, 472448 <feof@plt+0x6eba8>
  472430:	ldr	w9, [x22, #4]
  472434:	cmp	w9, #0x1
  472438:	b.gt	472448 <feof@plt+0x6eba8>
  47243c:	ldr	w10, [x19, #308]
  472440:	cmp	w10, #0x401
  472444:	b.lt	4739e4 <feof@plt+0x70144>  // b.tstop
  472448:	mov	w9, #0x1                   	// #1
  47244c:	str	w9, [x25]
  472450:	ldr	x9, [x19, #256]
  472454:	sub	w8, w8, #0x1
  472458:	str	w8, [x19, #312]
  47245c:	cmp	x9, #0xff
  472460:	b.ne	47248c <feof@plt+0x6ebec>  // b.any
  472464:	ldp	x8, x2, [x19, #272]
  472468:	mov	w1, #0xff                  	// #255
  47246c:	mov	x0, x19
  472470:	strb	wzr, [x19, #255]
  472474:	blr	x8
  472478:	ldr	x8, [x19, #320]
  47247c:	mov	x9, xzr
  472480:	str	xzr, [x19, #256]
  472484:	add	x8, x8, #0x1
  472488:	str	x8, [x19, #320]
  47248c:	add	x8, x9, #0x1
  472490:	mov	w10, #0x29                  	// #41
  472494:	str	x8, [x19, #256]
  472498:	strb	w10, [x19, x9]
  47249c:	ldr	x8, [x19, #256]
  4724a0:	strb	w10, [x19, #264]
  4724a4:	cmp	x8, #0xff
  4724a8:	b.ne	4724d4 <feof@plt+0x6ec34>  // b.any
  4724ac:	ldp	x8, x2, [x19, #272]
  4724b0:	mov	w1, #0xff                  	// #255
  4724b4:	mov	x0, x19
  4724b8:	strb	wzr, [x19, #255]
  4724bc:	blr	x8
  4724c0:	ldr	x9, [x19, #320]
  4724c4:	mov	x8, xzr
  4724c8:	str	xzr, [x19, #256]
  4724cc:	add	x9, x9, #0x1
  4724d0:	str	x9, [x19, #320]
  4724d4:	add	x9, x8, #0x1
  4724d8:	mov	w10, #0x23                  	// #35
  4724dc:	str	x9, [x19, #256]
  4724e0:	strb	w10, [x19, x8]
  4724e4:	strb	w10, [x19, #264]
  4724e8:	ldr	w8, [x21, #16]
  4724ec:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4724f0:	add	x1, x1, #0xadf
  4724f4:	add	x0, sp, #0x10
  4724f8:	add	w2, w8, #0x1
  4724fc:	bl	403340 <sprintf@plt>
  472500:	add	x0, sp, #0x10
  472504:	bl	4030b0 <strlen@plt>
  472508:	cbz	x0, 4737f8 <feof@plt+0x6ff58>
  47250c:	mov	x20, x0
  472510:	add	x21, sp, #0x10
  472514:	b	472534 <feof@plt+0x6ec94>
  472518:	add	x9, x8, #0x1
  47251c:	subs	x20, x20, #0x1
  472520:	add	x21, x21, #0x1
  472524:	str	x9, [x19, #256]
  472528:	strb	w22, [x19, x8]
  47252c:	strb	w22, [x19, #264]
  472530:	b.eq	4737f8 <feof@plt+0x6ff58>  // b.none
  472534:	ldr	x8, [x19, #256]
  472538:	ldrb	w22, [x21]
  47253c:	cmp	x8, #0xff
  472540:	b.ne	472518 <feof@plt+0x6ec78>  // b.any
  472544:	ldp	x8, x2, [x19, #272]
  472548:	mov	w1, #0xff                  	// #255
  47254c:	mov	x0, x19
  472550:	strb	wzr, [x19, #255]
  472554:	blr	x8
  472558:	ldr	x9, [x19, #320]
  47255c:	mov	x8, xzr
  472560:	str	xzr, [x19, #256]
  472564:	add	x9, x9, #0x1
  472568:	str	x9, [x19, #320]
  47256c:	b	472518 <feof@plt+0x6ec78>
  472570:	ldr	w8, [x21, #8]
  472574:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  472578:	add	x1, x1, #0xadf
  47257c:	add	x0, sp, #0x10
  472580:	add	w2, w8, #0x1
  472584:	bl	403340 <sprintf@plt>
  472588:	add	x0, sp, #0x10
  47258c:	bl	4030b0 <strlen@plt>
  472590:	cbz	x0, 4737f8 <feof@plt+0x6ff58>
  472594:	mov	x20, x0
  472598:	add	x21, sp, #0x10
  47259c:	b	4725bc <feof@plt+0x6ed1c>
  4725a0:	add	x9, x8, #0x1
  4725a4:	subs	x20, x20, #0x1
  4725a8:	add	x21, x21, #0x1
  4725ac:	str	x9, [x19, #256]
  4725b0:	strb	w22, [x19, x8]
  4725b4:	strb	w22, [x19, #264]
  4725b8:	b.eq	4737f8 <feof@plt+0x6ff58>  // b.none
  4725bc:	ldr	x8, [x19, #256]
  4725c0:	ldrb	w22, [x21]
  4725c4:	cmp	x8, #0xff
  4725c8:	b.ne	4725a0 <feof@plt+0x6ed00>  // b.any
  4725cc:	ldp	x8, x2, [x19, #272]
  4725d0:	mov	w1, #0xff                  	// #255
  4725d4:	mov	x0, x19
  4725d8:	strb	wzr, [x19, #255]
  4725dc:	blr	x8
  4725e0:	ldr	x9, [x19, #320]
  4725e4:	mov	x8, xzr
  4725e8:	str	xzr, [x19, #256]
  4725ec:	add	x9, x9, #0x1
  4725f0:	str	x9, [x19, #320]
  4725f4:	b	4725a0 <feof@plt+0x6ed00>
  4725f8:	mov	x21, x9
  4725fc:	b	46fa50 <feof@plt+0x6c1b0>
  472600:	cmp	w21, #0x1
  472604:	b.lt	4720f4 <feof@plt+0x6e854>  // b.tstop
  472608:	add	x20, x22, x21
  47260c:	ldrb	w24, [x22]
  472610:	cmp	w24, #0x5f
  472614:	b.ne	4726b0 <feof@plt+0x6ee10>  // b.any
  472618:	sub	x8, x20, x22
  47261c:	cmp	x8, #0x4
  472620:	b.lt	4726b0 <feof@plt+0x6ee10>  // b.tstop
  472624:	ldrb	w8, [x22, #1]
  472628:	cmp	w8, #0x5f
  47262c:	b.ne	4726ac <feof@plt+0x6ee0c>  // b.any
  472630:	ldrb	w8, [x22, #2]
  472634:	cmp	w8, #0x55
  472638:	b.ne	4726ac <feof@plt+0x6ee0c>  // b.any
  47263c:	add	x21, x22, #0x3
  472640:	cmp	x21, x20
  472644:	b.cs	4726ac <feof@plt+0x6ee0c>  // b.hs, b.nlast
  472648:	mov	x23, xzr
  47264c:	b	472668 <feof@plt+0x6edc8>
  472650:	mov	x9, #0xffffffffffffffd0    	// #-48
  472654:	add	x8, x9, x8
  472658:	add	x21, x21, #0x1
  47265c:	cmp	x20, x21
  472660:	add	x23, x8, x23, lsl #4
  472664:	b.eq	4726ac <feof@plt+0x6ee0c>  // b.none
  472668:	ldrb	w8, [x21]
  47266c:	sub	w9, w8, #0x30
  472670:	and	w9, w9, #0xff
  472674:	cmp	w9, #0xa
  472678:	b.cc	472650 <feof@plt+0x6edb0>  // b.lo, b.ul, b.last
  47267c:	sub	w9, w8, #0x41
  472680:	and	w9, w9, #0xff
  472684:	cmp	w9, #0x6
  472688:	b.cs	472694 <feof@plt+0x6edf4>  // b.hs, b.nlast
  47268c:	mov	x9, #0xffffffffffffffc9    	// #-55
  472690:	b	472654 <feof@plt+0x6edb4>
  472694:	sub	w9, w8, #0x61
  472698:	and	w9, w9, #0xff
  47269c:	cmp	w9, #0x5
  4726a0:	b.hi	47270c <feof@plt+0x6ee6c>  // b.pmore
  4726a4:	mov	x9, #0xffffffffffffffa9    	// #-87
  4726a8:	b	472654 <feof@plt+0x6edb4>
  4726ac:	mov	w24, #0x5f                  	// #95
  4726b0:	ldr	x8, [x19, #256]
  4726b4:	cmp	x8, #0xff
  4726b8:	b.ne	4726e4 <feof@plt+0x6ee44>  // b.any
  4726bc:	ldp	x8, x2, [x19, #272]
  4726c0:	mov	w1, #0xff                  	// #255
  4726c4:	mov	x0, x19
  4726c8:	strb	wzr, [x19, #255]
  4726cc:	blr	x8
  4726d0:	ldr	x9, [x19, #320]
  4726d4:	mov	x8, xzr
  4726d8:	str	xzr, [x19, #256]
  4726dc:	add	x9, x9, #0x1
  4726e0:	str	x9, [x19, #320]
  4726e4:	mov	w23, w24
  4726e8:	mov	x21, x22
  4726ec:	add	x22, x21, #0x1
  4726f0:	add	x9, x8, #0x1
  4726f4:	cmp	x22, x20
  4726f8:	str	x9, [x19, #256]
  4726fc:	strb	w23, [x19, x8]
  472700:	strb	w23, [x19, #264]
  472704:	b.cc	47260c <feof@plt+0x6ed6c>  // b.lo, b.ul, b.last
  472708:	b	4720f4 <feof@plt+0x6e854>
  47270c:	cmp	x23, #0xff
  472710:	mov	w24, #0x5f                  	// #95
  472714:	b.hi	4726b0 <feof@plt+0x6ee10>  // b.pmore
  472718:	cmp	w8, #0x5f
  47271c:	b.ne	4726b0 <feof@plt+0x6ee10>  // b.any
  472720:	ldr	x8, [x19, #256]
  472724:	cmp	x8, #0xff
  472728:	b.ne	4726ec <feof@plt+0x6ee4c>  // b.any
  47272c:	ldp	x8, x2, [x19, #272]
  472730:	mov	w1, #0xff                  	// #255
  472734:	mov	x0, x19
  472738:	strb	wzr, [x19, #255]
  47273c:	blr	x8
  472740:	ldr	x9, [x19, #320]
  472744:	mov	x8, xzr
  472748:	str	xzr, [x19, #256]
  47274c:	add	x9, x9, #0x1
  472750:	str	x9, [x19, #320]
  472754:	b	4726ec <feof@plt+0x6ee4c>
  472758:	ldr	w8, [x22]
  47275c:	cbnz	w8, 472784 <feof@plt+0x6eee4>
  472760:	ldr	w8, [x22, #16]
  472764:	cmp	w8, #0x6
  472768:	b.ne	472784 <feof@plt+0x6eee4>  // b.any
  47276c:	ldr	x0, [x22, #8]
  472770:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  472774:	add	x1, x1, #0xcf8
  472778:	mov	w2, #0x6                   	// #6
  47277c:	bl	403450 <strncmp@plt>
  472780:	cbz	w0, 474698 <feof@plt+0x70df8>
  472784:	ldr	w8, [x22, #4]
  472788:	cmp	w8, #0x1
  47278c:	b.gt	47279c <feof@plt+0x6eefc>
  472790:	ldr	w9, [x19, #308]
  472794:	cmp	w9, #0x401
  472798:	b.lt	473540 <feof@plt+0x6fca0>  // b.tstop
  47279c:	mov	w8, #0x1                   	// #1
  4727a0:	str	w8, [x25]
  4727a4:	b	473590 <feof@plt+0x6fcf0>
  4727a8:	ldrsw	x20, [x8, #24]
  4727ac:	cbz	w20, 4720f4 <feof@plt+0x6e854>
  4727b0:	ldr	x21, [x8, #16]
  4727b4:	b	4727d4 <feof@plt+0x6ef34>
  4727b8:	add	x9, x8, #0x1
  4727bc:	subs	x20, x20, #0x1
  4727c0:	add	x21, x21, #0x1
  4727c4:	str	x9, [x19, #256]
  4727c8:	strb	w22, [x19, x8]
  4727cc:	strb	w22, [x19, #264]
  4727d0:	b.eq	4720f4 <feof@plt+0x6e854>  // b.none
  4727d4:	ldr	x8, [x19, #256]
  4727d8:	ldrb	w22, [x21]
  4727dc:	cmp	x8, #0xff
  4727e0:	b.ne	4727b8 <feof@plt+0x6ef18>  // b.any
  4727e4:	ldp	x8, x2, [x19, #272]
  4727e8:	mov	w1, #0xff                  	// #255
  4727ec:	mov	x0, x19
  4727f0:	strb	wzr, [x19, #255]
  4727f4:	blr	x8
  4727f8:	ldr	x9, [x19, #320]
  4727fc:	mov	x8, xzr
  472800:	str	xzr, [x19, #256]
  472804:	add	x9, x9, #0x1
  472808:	str	x9, [x19, #320]
  47280c:	b	4727b8 <feof@plt+0x6ef18>
  472810:	ldr	x3, [x19, #296]
  472814:	and	w22, w20, #0xffffff9f
  472818:	mov	x0, x19
  47281c:	mov	w1, w22
  472820:	mov	x2, x21
  472824:	bl	476820 <feof@plt+0x72f80>
  472828:	ldr	x20, [x21, #8]
  47282c:	cbz	x20, 4720f4 <feof@plt+0x6e854>
  472830:	ldr	w8, [x20, #4]
  472834:	cmp	w8, #0x1
  472838:	b.gt	4720ec <feof@plt+0x6e84c>
  47283c:	ldr	w9, [x19, #308]
  472840:	cmp	w9, #0x401
  472844:	b.ge	4720ec <feof@plt+0x6e84c>  // b.tcont
  472848:	add	w8, w8, #0x1
  47284c:	str	w8, [x20, #4]
  472850:	ldr	x8, [x19, #328]
  472854:	add	w9, w9, #0x1
  472858:	str	w9, [x19, #308]
  47285c:	add	x9, sp, #0x10
  472860:	mov	x0, x19
  472864:	mov	w1, w22
  472868:	mov	x2, x20
  47286c:	stp	x20, x8, [sp, #16]
  472870:	str	x9, [x19, #328]
  472874:	bl	46f9e8 <feof@plt+0x6c148>
  472878:	ldr	x8, [sp, #24]
  47287c:	str	x8, [x19, #328]
  472880:	ldr	w8, [x20, #4]
  472884:	sub	w8, w8, #0x1
  472888:	str	w8, [x20, #4]
  47288c:	b	47215c <feof@plt+0x6e8bc>
  472890:	cbz	x22, 4728ac <feof@plt+0x6f00c>
  472894:	ldr	w9, [x22, #4]
  472898:	cmp	w9, #0x1
  47289c:	b.gt	4728ac <feof@plt+0x6f00c>
  4728a0:	ldr	w10, [x19, #308]
  4728a4:	cmp	w10, #0x401
  4728a8:	b.lt	473ed4 <feof@plt+0x70634>  // b.tstop
  4728ac:	mov	w9, #0x1                   	// #1
  4728b0:	str	w9, [x25]
  4728b4:	cbz	x8, 4720f4 <feof@plt+0x6e854>
  4728b8:	ldur	x8, [x29, #-16]
  4728bc:	str	x8, [x19, #288]
  4728c0:	b	4720f4 <feof@plt+0x6e854>
  4728c4:	add	w8, w8, #0x1
  4728c8:	add	w9, w9, #0x1
  4728cc:	str	w8, [x21, #4]
  4728d0:	str	w9, [x19, #308]
  4728d4:	str	x21, [sp, #16]
  4728d8:	ldr	x8, [x19, #328]
  4728dc:	add	x9, sp, #0x10
  4728e0:	mov	x0, x19
  4728e4:	mov	w1, w20
  4728e8:	mov	x2, x21
  4728ec:	str	x8, [sp, #24]
  4728f0:	str	x9, [x19, #328]
  4728f4:	bl	46f9e8 <feof@plt+0x6c148>
  4728f8:	ldr	x8, [sp, #24]
  4728fc:	str	x8, [x19, #328]
  472900:	ldr	w8, [x21, #4]
  472904:	sub	w8, w8, #0x1
  472908:	str	w8, [x21, #4]
  47290c:	ldr	w8, [x19, #308]
  472910:	sub	w8, w8, #0x1
  472914:	str	w8, [x19, #308]
  472918:	b	471da8 <feof@plt+0x6e508>
  47291c:	cbz	w22, 4720f4 <feof@plt+0x6e854>
  472920:	ldr	x21, [x21, #8]
  472924:	mov	w23, wzr
  472928:	sub	w24, w22, #0x1
  47292c:	mov	w26, #0x1                   	// #1
  472930:	mov	w27, #0x2c                  	// #44
  472934:	mov	w28, #0x20                  	// #32
  472938:	b	472958 <feof@plt+0x6f0b8>
  47293c:	add	x9, x8, #0x1
  472940:	str	x9, [x19, #256]
  472944:	strb	w28, [x19, x8]
  472948:	strb	w28, [x19, #264]
  47294c:	add	w23, w23, #0x1
  472950:	cmp	w22, w23
  472954:	b.eq	4720f4 <feof@plt+0x6e854>  // b.none
  472958:	str	w23, [x19, #316]
  47295c:	cbz	x21, 472978 <feof@plt+0x6f0d8>
  472960:	ldr	w8, [x21, #4]
  472964:	cmp	w8, #0x1
  472968:	b.gt	472978 <feof@plt+0x6f0d8>
  47296c:	ldr	w9, [x19, #308]
  472970:	cmp	w9, #0x401
  472974:	b.lt	472a00 <feof@plt+0x6f160>  // b.tstop
  472978:	str	w26, [x25]
  47297c:	cmp	w23, w24
  472980:	b.ge	47294c <feof@plt+0x6f0ac>  // b.tcont
  472984:	ldr	x8, [x19, #256]
  472988:	cmp	x8, #0xff
  47298c:	b.ne	4729b8 <feof@plt+0x6f118>  // b.any
  472990:	ldp	x8, x2, [x19, #272]
  472994:	mov	w1, #0xff                  	// #255
  472998:	mov	x0, x19
  47299c:	strb	wzr, [x19, #255]
  4729a0:	blr	x8
  4729a4:	ldr	x9, [x19, #320]
  4729a8:	mov	x8, xzr
  4729ac:	str	xzr, [x19, #256]
  4729b0:	add	x9, x9, #0x1
  4729b4:	str	x9, [x19, #320]
  4729b8:	add	x9, x8, #0x1
  4729bc:	str	x9, [x19, #256]
  4729c0:	strb	w27, [x19, x8]
  4729c4:	ldr	x8, [x19, #256]
  4729c8:	strb	w27, [x19, #264]
  4729cc:	cmp	x8, #0xff
  4729d0:	b.ne	47293c <feof@plt+0x6f09c>  // b.any
  4729d4:	ldp	x8, x2, [x19, #272]
  4729d8:	mov	w1, #0xff                  	// #255
  4729dc:	mov	x0, x19
  4729e0:	strb	wzr, [x19, #255]
  4729e4:	blr	x8
  4729e8:	ldr	x9, [x19, #320]
  4729ec:	mov	x8, xzr
  4729f0:	str	xzr, [x19, #256]
  4729f4:	add	x9, x9, #0x1
  4729f8:	str	x9, [x19, #320]
  4729fc:	b	47293c <feof@plt+0x6f09c>
  472a00:	add	w8, w8, #0x1
  472a04:	str	w8, [x21, #4]
  472a08:	ldr	x8, [x19, #328]
  472a0c:	add	w9, w9, #0x1
  472a10:	str	w9, [x19, #308]
  472a14:	mov	x0, x19
  472a18:	stp	x21, x8, [sp, #16]
  472a1c:	add	x8, sp, #0x10
  472a20:	mov	w1, w20
  472a24:	mov	x2, x21
  472a28:	str	x8, [x19, #328]
  472a2c:	bl	46f9e8 <feof@plt+0x6c148>
  472a30:	ldr	x8, [sp, #24]
  472a34:	str	x8, [x19, #328]
  472a38:	ldr	w8, [x21, #4]
  472a3c:	sub	w8, w8, #0x1
  472a40:	str	w8, [x21, #4]
  472a44:	ldr	w8, [x19, #308]
  472a48:	sub	w8, w8, #0x1
  472a4c:	str	w8, [x19, #308]
  472a50:	cmp	w23, w24
  472a54:	b.ge	47294c <feof@plt+0x6f0ac>  // b.tcont
  472a58:	b	472984 <feof@plt+0x6f0e4>
  472a5c:	mov	x22, xzr
  472a60:	b	46fa50 <feof@plt+0x6c1b0>
  472a64:	ldr	x22, [x19, #288]
  472a68:	cbz	x22, 473b8c <feof@plt+0x702ec>
  472a6c:	ldr	x9, [x22, #8]
  472a70:	ldr	w8, [x21, #8]
  472a74:	ldr	x21, [x9, #16]
  472a78:	tbnz	w8, #31, 474808 <feof@plt+0x70f68>
  472a7c:	cbz	x21, 4720ec <feof@plt+0x6e84c>
  472a80:	ldr	w9, [x21]
  472a84:	cmp	w9, #0x2f
  472a88:	b.ne	4720ec <feof@plt+0x6e84c>  // b.any
  472a8c:	subs	w9, w8, #0x1
  472a90:	b.lt	474800 <feof@plt+0x70f60>  // b.tstop
  472a94:	ldr	x21, [x21, #16]
  472a98:	mov	w8, w9
  472a9c:	cbnz	x21, 472a80 <feof@plt+0x6f1e0>
  472aa0:	b	4720ec <feof@plt+0x6e84c>
  472aa4:	b.ne	472ad0 <feof@plt+0x6f230>  // b.any
  472aa8:	ldp	x8, x2, [x19, #272]
  472aac:	mov	w1, #0xff                  	// #255
  472ab0:	mov	x0, x19
  472ab4:	strb	wzr, [x19, #255]
  472ab8:	blr	x8
  472abc:	ldr	x9, [x19, #320]
  472ac0:	mov	x8, xzr
  472ac4:	str	xzr, [x19, #256]
  472ac8:	add	x9, x9, #0x1
  472acc:	str	x9, [x19, #320]
  472ad0:	add	x9, x8, #0x1
  472ad4:	mov	w10, #0x74                  	// #116
  472ad8:	str	x9, [x19, #256]
  472adc:	strb	w10, [x19, x8]
  472ae0:	ldr	x8, [x19, #256]
  472ae4:	strb	w10, [x19, #264]
  472ae8:	cmp	x8, #0xff
  472aec:	b.ne	472b18 <feof@plt+0x6f278>  // b.any
  472af0:	ldp	x8, x2, [x19, #272]
  472af4:	mov	w1, #0xff                  	// #255
  472af8:	mov	x0, x19
  472afc:	strb	wzr, [x19, #255]
  472b00:	blr	x8
  472b04:	ldr	x9, [x19, #320]
  472b08:	mov	x8, xzr
  472b0c:	str	xzr, [x19, #256]
  472b10:	add	x9, x9, #0x1
  472b14:	str	x9, [x19, #320]
  472b18:	add	x9, x8, #0x1
  472b1c:	mov	w10, #0x68                  	// #104
  472b20:	str	x9, [x19, #256]
  472b24:	strb	w10, [x19, x8]
  472b28:	ldr	x8, [x19, #256]
  472b2c:	strb	w10, [x19, #264]
  472b30:	cmp	x8, #0xff
  472b34:	b.ne	472b60 <feof@plt+0x6f2c0>  // b.any
  472b38:	ldp	x8, x2, [x19, #272]
  472b3c:	mov	w1, #0xff                  	// #255
  472b40:	mov	x0, x19
  472b44:	strb	wzr, [x19, #255]
  472b48:	blr	x8
  472b4c:	ldr	x9, [x19, #320]
  472b50:	mov	x8, xzr
  472b54:	str	xzr, [x19, #256]
  472b58:	add	x9, x9, #0x1
  472b5c:	str	x9, [x19, #320]
  472b60:	add	x9, x8, #0x1
  472b64:	mov	w10, #0x69                  	// #105
  472b68:	str	x9, [x19, #256]
  472b6c:	strb	w10, [x19, x8]
  472b70:	ldr	x8, [x19, #256]
  472b74:	strb	w10, [x19, #264]
  472b78:	cmp	x8, #0xff
  472b7c:	b.ne	472ba8 <feof@plt+0x6f308>  // b.any
  472b80:	ldp	x8, x2, [x19, #272]
  472b84:	mov	w1, #0xff                  	// #255
  472b88:	mov	x0, x19
  472b8c:	strb	wzr, [x19, #255]
  472b90:	blr	x8
  472b94:	ldr	x9, [x19, #320]
  472b98:	mov	x8, xzr
  472b9c:	str	xzr, [x19, #256]
  472ba0:	add	x9, x9, #0x1
  472ba4:	str	x9, [x19, #320]
  472ba8:	add	x9, x8, #0x1
  472bac:	mov	w10, #0x73                  	// #115
  472bb0:	b	4749e8 <feof@plt+0x71148>
  472bb4:	mov	w24, #0x1                   	// #1
  472bb8:	ldr	x23, [x21, #16]
  472bbc:	cbz	x23, 472bd8 <feof@plt+0x6f338>
  472bc0:	ldr	w8, [x23, #4]
  472bc4:	cmp	w8, #0x1
  472bc8:	b.gt	472bd8 <feof@plt+0x6f338>
  472bcc:	ldr	w9, [x19, #308]
  472bd0:	cmp	w9, #0x401
  472bd4:	b.lt	473b38 <feof@plt+0x70298>  // b.tstop
  472bd8:	mov	w8, #0x1                   	// #1
  472bdc:	str	w8, [x25]
  472be0:	str	x22, [x19, #296]
  472be4:	ldr	w8, [sp, #32]
  472be8:	cbnz	w8, 4720f4 <feof@plt+0x6e854>
  472bec:	cmp	w24, #0x2
  472bf0:	b.cc	472c24 <feof@plt+0x6f384>  // b.lo, b.ul, b.last
  472bf4:	sub	w8, w24, #0x1
  472bf8:	add	x9, sp, #0x10
  472bfc:	add	x8, x9, x8, lsl #5
  472c00:	add	x22, x8, #0x8
  472c04:	ldr	x2, [x22], #-32
  472c08:	mov	x0, x19
  472c0c:	mov	w1, w20
  472c10:	bl	475c80 <feof@plt+0x723e0>
  472c14:	sub	w24, w24, #0x1
  472c18:	cmp	w24, #0x1
  472c1c:	b.hi	472c04 <feof@plt+0x6f364>  // b.pmore
  472c20:	ldr	x22, [x19, #296]
  472c24:	mov	x0, x19
  472c28:	mov	w1, w20
  472c2c:	mov	x2, x21
  472c30:	mov	x3, x22
  472c34:	bl	476af8 <feof@plt+0x73258>
  472c38:	b	4720f4 <feof@plt+0x6e854>
  472c3c:	b.ne	472c68 <feof@plt+0x6f3c8>  // b.any
  472c40:	ldp	x8, x2, [x19, #272]
  472c44:	mov	w1, #0xff                  	// #255
  472c48:	mov	x0, x19
  472c4c:	strb	wzr, [x19, #255]
  472c50:	blr	x8
  472c54:	ldr	x9, [x19, #320]
  472c58:	mov	x8, xzr
  472c5c:	str	xzr, [x19, #256]
  472c60:	add	x9, x9, #0x1
  472c64:	str	x9, [x19, #320]
  472c68:	add	x9, x8, #0x1
  472c6c:	mov	w10, #0x5f                  	// #95
  472c70:	str	x9, [x19, #256]
  472c74:	strb	w10, [x19, x8]
  472c78:	ldr	x8, [x19, #256]
  472c7c:	strb	w10, [x19, #264]
  472c80:	cmp	x8, #0xff
  472c84:	b.ne	472cb0 <feof@plt+0x6f410>  // b.any
  472c88:	ldp	x8, x2, [x19, #272]
  472c8c:	mov	w1, #0xff                  	// #255
  472c90:	mov	x0, x19
  472c94:	strb	wzr, [x19, #255]
  472c98:	blr	x8
  472c9c:	ldr	x9, [x19, #320]
  472ca0:	mov	x8, xzr
  472ca4:	str	xzr, [x19, #256]
  472ca8:	add	x9, x9, #0x1
  472cac:	str	x9, [x19, #320]
  472cb0:	add	x9, x8, #0x1
  472cb4:	mov	w10, #0x46                  	// #70
  472cb8:	str	x9, [x19, #256]
  472cbc:	strb	w10, [x19, x8]
  472cc0:	ldr	x8, [x19, #256]
  472cc4:	strb	w10, [x19, #264]
  472cc8:	cmp	x8, #0xff
  472ccc:	b.ne	472cf8 <feof@plt+0x6f458>  // b.any
  472cd0:	ldp	x8, x2, [x19, #272]
  472cd4:	mov	w1, #0xff                  	// #255
  472cd8:	mov	x0, x19
  472cdc:	strb	wzr, [x19, #255]
  472ce0:	blr	x8
  472ce4:	ldr	x9, [x19, #320]
  472ce8:	mov	x8, xzr
  472cec:	str	xzr, [x19, #256]
  472cf0:	add	x9, x9, #0x1
  472cf4:	str	x9, [x19, #320]
  472cf8:	add	x9, x8, #0x1
  472cfc:	mov	w10, #0x72                  	// #114
  472d00:	str	x9, [x19, #256]
  472d04:	strb	w10, [x19, x8]
  472d08:	ldr	x8, [x19, #256]
  472d0c:	strb	w10, [x19, #264]
  472d10:	cmp	x8, #0xff
  472d14:	b.ne	472d40 <feof@plt+0x6f4a0>  // b.any
  472d18:	ldp	x8, x2, [x19, #272]
  472d1c:	mov	w1, #0xff                  	// #255
  472d20:	mov	x0, x19
  472d24:	strb	wzr, [x19, #255]
  472d28:	blr	x8
  472d2c:	ldr	x9, [x19, #320]
  472d30:	mov	x8, xzr
  472d34:	str	xzr, [x19, #256]
  472d38:	add	x9, x9, #0x1
  472d3c:	str	x9, [x19, #320]
  472d40:	add	x9, x8, #0x1
  472d44:	mov	w10, #0x61                  	// #97
  472d48:	str	x9, [x19, #256]
  472d4c:	strb	w10, [x19, x8]
  472d50:	ldr	x8, [x19, #256]
  472d54:	strb	w10, [x19, #264]
  472d58:	cmp	x8, #0xff
  472d5c:	b.ne	472d88 <feof@plt+0x6f4e8>  // b.any
  472d60:	ldp	x8, x2, [x19, #272]
  472d64:	mov	w1, #0xff                  	// #255
  472d68:	mov	x0, x19
  472d6c:	strb	wzr, [x19, #255]
  472d70:	blr	x8
  472d74:	ldr	x9, [x19, #320]
  472d78:	mov	x8, xzr
  472d7c:	str	xzr, [x19, #256]
  472d80:	add	x9, x9, #0x1
  472d84:	str	x9, [x19, #320]
  472d88:	add	x9, x8, #0x1
  472d8c:	mov	w10, #0x63                  	// #99
  472d90:	str	x9, [x19, #256]
  472d94:	strb	w10, [x19, x8]
  472d98:	ldr	x8, [x19, #256]
  472d9c:	strb	w10, [x19, #264]
  472da0:	cmp	x8, #0xff
  472da4:	b.ne	472dd0 <feof@plt+0x6f530>  // b.any
  472da8:	ldp	x8, x2, [x19, #272]
  472dac:	mov	w1, #0xff                  	// #255
  472db0:	mov	x0, x19
  472db4:	strb	wzr, [x19, #255]
  472db8:	blr	x8
  472dbc:	ldr	x9, [x19, #320]
  472dc0:	mov	x8, xzr
  472dc4:	str	xzr, [x19, #256]
  472dc8:	add	x9, x9, #0x1
  472dcc:	str	x9, [x19, #320]
  472dd0:	add	x9, x8, #0x1
  472dd4:	mov	w10, #0x74                  	// #116
  472dd8:	b	4749e8 <feof@plt+0x71148>
  472ddc:	ldr	x21, [x21, #8]
  472de0:	ldr	w8, [x21]
  472de4:	cmp	w8, #0x31
  472de8:	b.hi	473f30 <feof@plt+0x70690>  // b.pmore
  472dec:	mov	w9, #0x1                   	// #1
  472df0:	lsl	x8, x9, x8
  472df4:	mov	x9, #0x43                  	// #67
  472df8:	movk	x9, #0x2, lsl #48
  472dfc:	tst	x8, x9
  472e00:	b.eq	473f30 <feof@plt+0x70690>  // b.none
  472e04:	cbz	x21, 472e20 <feof@plt+0x6f580>
  472e08:	ldr	w8, [x21, #4]
  472e0c:	cmp	w8, #0x1
  472e10:	b.gt	472e20 <feof@plt+0x6f580>
  472e14:	ldr	w9, [x19, #308]
  472e18:	cmp	w9, #0x401
  472e1c:	b.lt	474280 <feof@plt+0x709e0>  // b.tstop
  472e20:	mov	w8, #0x1                   	// #1
  472e24:	str	w8, [x25]
  472e28:	b	4742d0 <feof@plt+0x70a30>
  472e2c:	ldr	x8, [x19, #256]
  472e30:	cmp	x8, #0xff
  472e34:	b.ne	472e60 <feof@plt+0x6f5c0>  // b.any
  472e38:	ldp	x8, x2, [x19, #272]
  472e3c:	mov	w1, #0xff                  	// #255
  472e40:	mov	x0, x19
  472e44:	strb	wzr, [x19, #255]
  472e48:	blr	x8
  472e4c:	ldr	x9, [x19, #320]
  472e50:	mov	x8, xzr
  472e54:	str	xzr, [x19, #256]
  472e58:	add	x9, x9, #0x1
  472e5c:	str	x9, [x19, #320]
  472e60:	add	x9, x8, #0x1
  472e64:	mov	w10, #0x28                  	// #40
  472e68:	str	x9, [x19, #256]
  472e6c:	strb	w10, [x19, x8]
  472e70:	strb	w10, [x19, #264]
  472e74:	ldr	x22, [x22, #8]
  472e78:	cbz	x22, 472e94 <feof@plt+0x6f5f4>
  472e7c:	ldr	w8, [x22, #4]
  472e80:	cmp	w8, #0x1
  472e84:	b.gt	472e94 <feof@plt+0x6f5f4>
  472e88:	ldr	w9, [x19, #308]
  472e8c:	cmp	w9, #0x401
  472e90:	b.lt	474090 <feof@plt+0x707f0>  // b.tstop
  472e94:	mov	w8, #0x1                   	// #1
  472e98:	str	w8, [x25]
  472e9c:	ldr	x8, [x19, #256]
  472ea0:	cmp	x8, #0xff
  472ea4:	b.ne	472ed0 <feof@plt+0x6f630>  // b.any
  472ea8:	ldp	x8, x2, [x19, #272]
  472eac:	mov	w1, #0xff                  	// #255
  472eb0:	mov	x0, x19
  472eb4:	strb	wzr, [x19, #255]
  472eb8:	blr	x8
  472ebc:	ldr	x9, [x19, #320]
  472ec0:	mov	x8, xzr
  472ec4:	str	xzr, [x19, #256]
  472ec8:	add	x9, x9, #0x1
  472ecc:	str	x9, [x19, #320]
  472ed0:	add	x9, x8, #0x1
  472ed4:	mov	w10, #0x29                  	// #41
  472ed8:	str	x9, [x19, #256]
  472edc:	strb	w10, [x19, x8]
  472ee0:	strb	w10, [x19, #264]
  472ee4:	b	472f0c <feof@plt+0x6f66c>
  472ee8:	cbz	x22, 472f04 <feof@plt+0x6f664>
  472eec:	ldr	w8, [x22, #4]
  472ef0:	cmp	w8, #0x1
  472ef4:	b.gt	472f04 <feof@plt+0x6f664>
  472ef8:	ldr	w9, [x19, #308]
  472efc:	cmp	w9, #0x401
  472f00:	b.lt	4740e4 <feof@plt+0x70844>  // b.tstop
  472f04:	mov	w8, #0x1                   	// #1
  472f08:	str	w8, [x25]
  472f0c:	ldr	w8, [x21]
  472f10:	cmp	w8, #0x31
  472f14:	b.hi	472f30 <feof@plt+0x6f690>  // b.pmore
  472f18:	mov	w9, #0x1                   	// #1
  472f1c:	lsl	x8, x9, x8
  472f20:	mov	x9, #0x43                  	// #67
  472f24:	movk	x9, #0x2, lsl #48
  472f28:	tst	x8, x9
  472f2c:	b.ne	4731f4 <feof@plt+0x6f954>  // b.any
  472f30:	ldr	x8, [x19, #256]
  472f34:	cmp	x8, #0xff
  472f38:	b.ne	472f64 <feof@plt+0x6f6c4>  // b.any
  472f3c:	ldp	x8, x2, [x19, #272]
  472f40:	mov	w1, #0xff                  	// #255
  472f44:	mov	x0, x19
  472f48:	strb	wzr, [x19, #255]
  472f4c:	blr	x8
  472f50:	ldr	x9, [x19, #320]
  472f54:	mov	x8, xzr
  472f58:	str	xzr, [x19, #256]
  472f5c:	add	x9, x9, #0x1
  472f60:	str	x9, [x19, #320]
  472f64:	add	x9, x8, #0x1
  472f68:	mov	w10, #0x28                  	// #40
  472f6c:	str	x9, [x19, #256]
  472f70:	strb	w10, [x19, x8]
  472f74:	strb	w10, [x19, #264]
  472f78:	cbnz	x21, 4723ac <feof@plt+0x6eb0c>
  472f7c:	b	4749a4 <feof@plt+0x71104>
  472f80:	add	w8, w8, #0x1
  472f84:	str	w8, [x22, #4]
  472f88:	ldr	x8, [x19, #328]
  472f8c:	add	w9, w9, #0x1
  472f90:	str	w9, [x19, #308]
  472f94:	add	x9, sp, #0x10
  472f98:	mov	x0, x19
  472f9c:	mov	w1, w20
  472fa0:	mov	x2, x22
  472fa4:	stp	x22, x8, [sp, #16]
  472fa8:	str	x9, [x19, #328]
  472fac:	bl	46f9e8 <feof@plt+0x6c148>
  472fb0:	ldr	x8, [sp, #24]
  472fb4:	str	x8, [x19, #328]
  472fb8:	ldr	w8, [x22, #4]
  472fbc:	sub	w8, w8, #0x1
  472fc0:	str	w8, [x22, #4]
  472fc4:	ldr	w8, [x19, #308]
  472fc8:	sub	w8, w8, #0x1
  472fcc:	str	w8, [x19, #308]
  472fd0:	tbz	w20, #2, 46fb88 <feof@plt+0x6c2e8>
  472fd4:	ldr	x8, [x19, #256]
  472fd8:	cmp	x8, #0xff
  472fdc:	b.ne	473008 <feof@plt+0x6f768>  // b.any
  472fe0:	ldp	x8, x2, [x19, #272]
  472fe4:	mov	w1, #0xff                  	// #255
  472fe8:	mov	x0, x19
  472fec:	strb	wzr, [x19, #255]
  472ff0:	blr	x8
  472ff4:	ldr	x9, [x19, #320]
  472ff8:	mov	x8, xzr
  472ffc:	str	xzr, [x19, #256]
  473000:	add	x9, x9, #0x1
  473004:	str	x9, [x19, #320]
  473008:	add	x9, x8, #0x1
  47300c:	mov	w10, #0x2e                  	// #46
  473010:	str	x9, [x19, #256]
  473014:	strb	w10, [x19, x8]
  473018:	strb	w10, [x19, #264]
  47301c:	ldr	x21, [x21, #16]
  473020:	ldr	w8, [x21]
  473024:	cmp	w8, #0x47
  473028:	b.ne	4731f4 <feof@plt+0x6f954>  // b.any
  47302c:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  473030:	mov	x22, xzr
  473034:	add	x23, x23, #0xcea
  473038:	b	473058 <feof@plt+0x6f7b8>
  47303c:	add	x22, x22, #0x1
  473040:	add	x9, x8, #0x1
  473044:	cmp	x22, #0xd
  473048:	str	x9, [x19, #256]
  47304c:	strb	w24, [x19, x8]
  473050:	strb	w24, [x19, #264]
  473054:	b.eq	473094 <feof@plt+0x6f7f4>  // b.none
  473058:	ldr	x8, [x19, #256]
  47305c:	ldrb	w24, [x23, x22]
  473060:	cmp	x8, #0xff
  473064:	b.ne	47303c <feof@plt+0x6f79c>  // b.any
  473068:	ldp	x8, x2, [x19, #272]
  47306c:	mov	w1, #0xff                  	// #255
  473070:	mov	x0, x19
  473074:	strb	wzr, [x19, #255]
  473078:	blr	x8
  47307c:	ldr	x9, [x19, #320]
  473080:	mov	x8, xzr
  473084:	str	xzr, [x19, #256]
  473088:	add	x9, x9, #0x1
  47308c:	str	x9, [x19, #320]
  473090:	b	47303c <feof@plt+0x6f79c>
  473094:	ldr	w8, [x21, #16]
  473098:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  47309c:	add	x1, x1, #0xadf
  4730a0:	add	x0, sp, #0x10
  4730a4:	add	w2, w8, #0x1
  4730a8:	bl	403340 <sprintf@plt>
  4730ac:	add	x0, sp, #0x10
  4730b0:	bl	4030b0 <strlen@plt>
  4730b4:	cbz	x0, 47311c <feof@plt+0x6f87c>
  4730b8:	mov	x22, x0
  4730bc:	add	x23, sp, #0x10
  4730c0:	b	4730e0 <feof@plt+0x6f840>
  4730c4:	add	x9, x8, #0x1
  4730c8:	subs	x22, x22, #0x1
  4730cc:	add	x23, x23, #0x1
  4730d0:	str	x9, [x19, #256]
  4730d4:	strb	w24, [x19, x8]
  4730d8:	strb	w24, [x19, #264]
  4730dc:	b.eq	47311c <feof@plt+0x6f87c>  // b.none
  4730e0:	ldr	x8, [x19, #256]
  4730e4:	ldrb	w24, [x23]
  4730e8:	cmp	x8, #0xff
  4730ec:	b.ne	4730c4 <feof@plt+0x6f824>  // b.any
  4730f0:	ldp	x8, x2, [x19, #272]
  4730f4:	mov	w1, #0xff                  	// #255
  4730f8:	mov	x0, x19
  4730fc:	strb	wzr, [x19, #255]
  473100:	blr	x8
  473104:	ldr	x9, [x19, #320]
  473108:	mov	x8, xzr
  47310c:	str	xzr, [x19, #256]
  473110:	add	x9, x9, #0x1
  473114:	str	x9, [x19, #320]
  473118:	b	4730c4 <feof@plt+0x6f824>
  47311c:	ldr	x8, [x19, #256]
  473120:	cmp	x8, #0xff
  473124:	b.ne	473150 <feof@plt+0x6f8b0>  // b.any
  473128:	ldp	x8, x2, [x19, #272]
  47312c:	mov	w1, #0xff                  	// #255
  473130:	mov	x0, x19
  473134:	strb	wzr, [x19, #255]
  473138:	blr	x8
  47313c:	ldr	x9, [x19, #320]
  473140:	mov	x8, xzr
  473144:	str	xzr, [x19, #256]
  473148:	add	x9, x9, #0x1
  47314c:	str	x9, [x19, #320]
  473150:	add	x9, x8, #0x1
  473154:	mov	w10, #0x7d                  	// #125
  473158:	str	x9, [x19, #256]
  47315c:	strb	w10, [x19, x8]
  473160:	ldr	x8, [x19, #256]
  473164:	strb	w10, [x19, #264]
  473168:	cmp	x8, #0xff
  47316c:	b.ne	473198 <feof@plt+0x6f8f8>  // b.any
  473170:	ldp	x8, x2, [x19, #272]
  473174:	mov	w1, #0xff                  	// #255
  473178:	mov	x0, x19
  47317c:	strb	wzr, [x19, #255]
  473180:	blr	x8
  473184:	ldr	x9, [x19, #320]
  473188:	mov	x8, xzr
  47318c:	str	xzr, [x19, #256]
  473190:	add	x9, x9, #0x1
  473194:	str	x9, [x19, #320]
  473198:	add	x9, x8, #0x1
  47319c:	mov	w22, #0x3a                  	// #58
  4731a0:	str	x9, [x19, #256]
  4731a4:	strb	w22, [x19, x8]
  4731a8:	ldr	x8, [x19, #256]
  4731ac:	strb	w22, [x19, #264]
  4731b0:	cmp	x8, #0xff
  4731b4:	b.ne	4731e0 <feof@plt+0x6f940>  // b.any
  4731b8:	ldp	x8, x2, [x19, #272]
  4731bc:	mov	w1, #0xff                  	// #255
  4731c0:	mov	x0, x19
  4731c4:	strb	wzr, [x19, #255]
  4731c8:	blr	x8
  4731cc:	ldr	x9, [x19, #320]
  4731d0:	mov	x8, xzr
  4731d4:	str	xzr, [x19, #256]
  4731d8:	add	x9, x9, #0x1
  4731dc:	str	x9, [x19, #320]
  4731e0:	add	x9, x8, #0x1
  4731e4:	str	x9, [x19, #256]
  4731e8:	strb	w22, [x19, x8]
  4731ec:	strb	w22, [x19, #264]
  4731f0:	ldr	x21, [x21, #8]
  4731f4:	cbnz	x21, 4720d4 <feof@plt+0x6e834>
  4731f8:	b	4720ec <feof@plt+0x6e84c>
  4731fc:	add	w8, w8, #0x1
  473200:	str	w8, [x22, #4]
  473204:	ldr	x8, [x19, #328]
  473208:	add	w9, w9, #0x1
  47320c:	str	w9, [x19, #308]
  473210:	sub	x9, x29, #0x10
  473214:	mov	x0, x19
  473218:	mov	w1, w20
  47321c:	mov	x2, x22
  473220:	stp	x22, x8, [x29, #-16]
  473224:	str	x9, [x19, #328]
  473228:	bl	46f9e8 <feof@plt+0x6c148>
  47322c:	ldur	x8, [x29, #-8]
  473230:	str	x8, [x19, #328]
  473234:	ldr	w8, [x22, #4]
  473238:	sub	w8, w8, #0x1
  47323c:	str	w8, [x22, #4]
  473240:	ldr	w8, [x19, #308]
  473244:	sub	w8, w8, #0x1
  473248:	str	w8, [x19, #308]
  47324c:	ldr	w8, [sp, #32]
  473250:	cbnz	w8, 46fd3c <feof@plt+0x6c49c>
  473254:	b	46fd2c <feof@plt+0x6c48c>
  473258:	add	w8, w8, #0x1
  47325c:	str	w8, [x22, #4]
  473260:	ldr	x8, [x19, #328]
  473264:	add	w9, w9, #0x1
  473268:	str	w9, [x19, #308]
  47326c:	add	x9, sp, #0x10
  473270:	mov	x0, x19
  473274:	mov	w1, w20
  473278:	mov	x2, x22
  47327c:	stp	x22, x8, [sp, #16]
  473280:	str	x9, [x19, #328]
  473284:	bl	46f9e8 <feof@plt+0x6c148>
  473288:	ldr	x8, [sp, #24]
  47328c:	str	x8, [x19, #328]
  473290:	ldr	w8, [x22, #4]
  473294:	sub	w8, w8, #0x1
  473298:	str	w8, [x22, #4]
  47329c:	ldr	w8, [x19, #308]
  4732a0:	sub	w8, w8, #0x1
  4732a4:	str	w8, [x19, #308]
  4732a8:	ldr	x8, [x21, #16]
  4732ac:	cbz	x8, 4720f4 <feof@plt+0x6e854>
  4732b0:	ldr	x8, [x19, #256]
  4732b4:	cmp	x8, #0xfe
  4732b8:	b.cc	4732e4 <feof@plt+0x6fa44>  // b.lo, b.ul, b.last
  4732bc:	strb	wzr, [x19, x8]
  4732c0:	ldr	x1, [x19, #256]
  4732c4:	ldp	x8, x2, [x19, #272]
  4732c8:	mov	x0, x19
  4732cc:	blr	x8
  4732d0:	ldr	x9, [x19, #320]
  4732d4:	mov	x8, xzr
  4732d8:	str	xzr, [x19, #256]
  4732dc:	add	x9, x9, #0x1
  4732e0:	str	x9, [x19, #320]
  4732e4:	add	x9, x8, #0x1
  4732e8:	mov	w10, #0x2c                  	// #44
  4732ec:	str	x9, [x19, #256]
  4732f0:	strb	w10, [x19, x8]
  4732f4:	ldr	x8, [x19, #256]
  4732f8:	strb	w10, [x19, #264]
  4732fc:	cmp	x8, #0xff
  473300:	b.ne	47332c <feof@plt+0x6fa8c>  // b.any
  473304:	ldp	x8, x2, [x19, #272]
  473308:	mov	w1, #0xff                  	// #255
  47330c:	mov	x0, x19
  473310:	strb	wzr, [x19, #255]
  473314:	blr	x8
  473318:	ldr	x9, [x19, #320]
  47331c:	mov	x8, xzr
  473320:	str	xzr, [x19, #256]
  473324:	add	x9, x9, #0x1
  473328:	str	x9, [x19, #320]
  47332c:	add	x9, x8, #0x1
  473330:	mov	w10, #0x20                  	// #32
  473334:	str	x9, [x19, #256]
  473338:	strb	w10, [x19, x8]
  47333c:	strb	w10, [x19, #264]
  473340:	ldr	x21, [x21, #16]
  473344:	ldr	x22, [x19, #256]
  473348:	cbz	x21, 473364 <feof@plt+0x6fac4>
  47334c:	ldr	w8, [x21, #4]
  473350:	cmp	w8, #0x1
  473354:	b.gt	473364 <feof@plt+0x6fac4>
  473358:	ldr	w9, [x19, #308]
  47335c:	cmp	w9, #0x401
  473360:	b.lt	4734dc <feof@plt+0x6fc3c>  // b.tstop
  473364:	mov	w8, #0x1                   	// #1
  473368:	str	w8, [x25]
  47336c:	ldr	x8, [x19, #256]
  473370:	cmp	x8, x22
  473374:	b.ne	4720f4 <feof@plt+0x6e854>  // b.any
  473378:	sub	x8, x22, #0x2
  47337c:	str	x8, [x19, #256]
  473380:	b	4720f4 <feof@plt+0x6e854>
  473384:	mov	x0, x19
  473388:	mov	w1, w20
  47338c:	mov	x2, x21
  473390:	bl	476ea4 <feof@plt+0x73604>
  473394:	cbnz	w0, 4720f4 <feof@plt+0x6e854>
  473398:	ldr	x8, [x21, #8]
  47339c:	ldr	w9, [x8]
  4733a0:	cmp	w9, #0x32
  4733a4:	b.ne	473414 <feof@plt+0x6fb74>  // b.any
  4733a8:	ldr	x9, [x8, #8]
  4733ac:	ldr	w10, [x9, #16]
  4733b0:	cmp	w10, #0x1
  4733b4:	b.ne	473414 <feof@plt+0x6fb74>  // b.any
  4733b8:	ldr	x9, [x9, #8]
  4733bc:	ldrb	w9, [x9]
  4733c0:	cmp	w9, #0x3e
  4733c4:	b.ne	473414 <feof@plt+0x6fb74>  // b.any
  4733c8:	ldr	x8, [x19, #256]
  4733cc:	cmp	x8, #0xff
  4733d0:	b.ne	4733fc <feof@plt+0x6fb5c>  // b.any
  4733d4:	ldp	x8, x2, [x19, #272]
  4733d8:	mov	w1, #0xff                  	// #255
  4733dc:	mov	x0, x19
  4733e0:	strb	wzr, [x19, #255]
  4733e4:	blr	x8
  4733e8:	ldr	x9, [x19, #320]
  4733ec:	mov	x8, xzr
  4733f0:	str	xzr, [x19, #256]
  4733f4:	add	x9, x9, #0x1
  4733f8:	str	x9, [x19, #320]
  4733fc:	add	x9, x8, #0x1
  473400:	mov	w10, #0x28                  	// #40
  473404:	str	x9, [x19, #256]
  473408:	strb	w10, [x19, x8]
  47340c:	strb	w10, [x19, #264]
  473410:	ldr	x8, [x21, #8]
  473414:	ldr	x8, [x8, #8]
  473418:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47341c:	add	x1, x1, #0x9b8
  473420:	ldr	x0, [x8]
  473424:	bl	403640 <strcmp@plt>
  473428:	ldr	x8, [x21, #16]
  47342c:	ldr	x22, [x8, #8]
  473430:	ldr	w8, [x22]
  473434:	cbnz	w0, 474044 <feof@plt+0x707a4>
  473438:	cmp	w8, #0x3
  47343c:	b.ne	474044 <feof@plt+0x707a4>  // b.any
  473440:	ldr	x8, [x22, #16]
  473444:	ldr	w8, [x8]
  473448:	cmp	w8, #0x29
  47344c:	b.eq	473458 <feof@plt+0x6fbb8>  // b.none
  473450:	mov	w8, #0x1                   	// #1
  473454:	str	w8, [x25]
  473458:	ldr	x22, [x22, #8]
  47345c:	ldr	w8, [x22]
  473460:	cmp	w8, #0x31
  473464:	b.ls	474050 <feof@plt+0x707b0>  // b.plast
  473468:	b	474b4c <feof@plt+0x712ac>
  47346c:	add	w8, w8, #0x1
  473470:	str	w8, [x22, #4]
  473474:	ldr	x8, [x19, #328]
  473478:	add	w9, w9, #0x1
  47347c:	str	w9, [x19, #308]
  473480:	add	x9, sp, #0x10
  473484:	mov	x0, x19
  473488:	mov	w1, w20
  47348c:	mov	x2, x22
  473490:	stp	x22, x8, [sp, #16]
  473494:	str	x9, [x19, #328]
  473498:	bl	46f9e8 <feof@plt+0x6c148>
  47349c:	ldr	x8, [sp, #24]
  4734a0:	str	x8, [x19, #328]
  4734a4:	ldr	w8, [x22, #4]
  4734a8:	sub	w8, w8, #0x1
  4734ac:	str	w8, [x22, #4]
  4734b0:	ldr	w8, [x19, #308]
  4734b4:	sub	w8, w8, #0x1
  4734b8:	str	w8, [x19, #308]
  4734bc:	b	471c94 <feof@plt+0x6e3f4>
  4734c0:	cmp	w23, #0x7
  4734c4:	b.ne	471c24 <feof@plt+0x6e384>  // b.any
  4734c8:	ldr	x9, [x21, #16]
  4734cc:	ldr	w10, [x9]
  4734d0:	cbz	w10, 47439c <feof@plt+0x70afc>
  4734d4:	mov	w23, #0x7                   	// #7
  4734d8:	b	471c24 <feof@plt+0x6e384>
  4734dc:	add	w8, w8, #0x1
  4734e0:	ldr	x23, [x19, #320]
  4734e4:	str	w8, [x21, #4]
  4734e8:	ldr	x8, [x19, #328]
  4734ec:	add	w9, w9, #0x1
  4734f0:	str	w9, [x19, #308]
  4734f4:	add	x9, sp, #0x10
  4734f8:	mov	x0, x19
  4734fc:	mov	w1, w20
  473500:	mov	x2, x21
  473504:	stp	x21, x8, [sp, #16]
  473508:	str	x9, [x19, #328]
  47350c:	bl	46f9e8 <feof@plt+0x6c148>
  473510:	ldr	x8, [sp, #24]
  473514:	str	x8, [x19, #328]
  473518:	ldr	w8, [x21, #4]
  47351c:	sub	w8, w8, #0x1
  473520:	str	w8, [x21, #4]
  473524:	ldr	w8, [x19, #308]
  473528:	ldr	x9, [x19, #320]
  47352c:	sub	w8, w8, #0x1
  473530:	cmp	x9, x23
  473534:	str	w8, [x19, #308]
  473538:	b.ne	4720f4 <feof@plt+0x6e854>  // b.any
  47353c:	b	47336c <feof@plt+0x6facc>
  473540:	add	w8, w8, #0x1
  473544:	str	w8, [x22, #4]
  473548:	ldr	x8, [x19, #328]
  47354c:	add	w9, w9, #0x1
  473550:	str	w9, [x19, #308]
  473554:	add	x9, sp, #0x10
  473558:	mov	x0, x19
  47355c:	mov	w1, w20
  473560:	mov	x2, x22
  473564:	stp	x22, x8, [sp, #16]
  473568:	str	x9, [x19, #328]
  47356c:	bl	46f9e8 <feof@plt+0x6c148>
  473570:	ldr	x8, [sp, #24]
  473574:	str	x8, [x19, #328]
  473578:	ldr	w8, [x22, #4]
  47357c:	sub	w8, w8, #0x1
  473580:	str	w8, [x22, #4]
  473584:	ldr	w8, [x19, #308]
  473588:	sub	w8, w8, #0x1
  47358c:	str	w8, [x19, #308]
  473590:	ldrb	w8, [x19, #264]
  473594:	cmp	w8, #0x3c
  473598:	b.ne	4735e4 <feof@plt+0x6fd44>  // b.any
  47359c:	ldr	x8, [x19, #256]
  4735a0:	cmp	x8, #0xff
  4735a4:	b.ne	4735d0 <feof@plt+0x6fd30>  // b.any
  4735a8:	ldp	x8, x2, [x19, #272]
  4735ac:	mov	w1, #0xff                  	// #255
  4735b0:	mov	x0, x19
  4735b4:	strb	wzr, [x19, #255]
  4735b8:	blr	x8
  4735bc:	ldr	x9, [x19, #320]
  4735c0:	mov	x8, xzr
  4735c4:	str	xzr, [x19, #256]
  4735c8:	add	x9, x9, #0x1
  4735cc:	str	x9, [x19, #320]
  4735d0:	add	x9, x8, #0x1
  4735d4:	mov	w10, #0x20                  	// #32
  4735d8:	str	x9, [x19, #256]
  4735dc:	strb	w10, [x19, x8]
  4735e0:	strb	w10, [x19, #264]
  4735e4:	ldr	x8, [x19, #256]
  4735e8:	cmp	x8, #0xff
  4735ec:	b.ne	473618 <feof@plt+0x6fd78>  // b.any
  4735f0:	ldp	x8, x2, [x19, #272]
  4735f4:	mov	w1, #0xff                  	// #255
  4735f8:	mov	x0, x19
  4735fc:	strb	wzr, [x19, #255]
  473600:	blr	x8
  473604:	ldr	x9, [x19, #320]
  473608:	mov	x8, xzr
  47360c:	str	xzr, [x19, #256]
  473610:	add	x9, x9, #0x1
  473614:	str	x9, [x19, #320]
  473618:	add	x9, x8, #0x1
  47361c:	mov	w10, #0x3c                  	// #60
  473620:	str	x9, [x19, #256]
  473624:	strb	w10, [x19, x8]
  473628:	strb	w10, [x19, #264]
  47362c:	ldr	x21, [x21, #16]
  473630:	cbz	x21, 47364c <feof@plt+0x6fdac>
  473634:	ldr	w8, [x21, #4]
  473638:	cmp	w8, #0x1
  47363c:	b.gt	47364c <feof@plt+0x6fdac>
  473640:	ldr	w9, [x19, #308]
  473644:	cmp	w9, #0x401
  473648:	b.lt	473a90 <feof@plt+0x701f0>  // b.tstop
  47364c:	mov	w8, #0x1                   	// #1
  473650:	str	w8, [x25]
  473654:	ldr	x8, [x19, #256]
  473658:	cmp	x8, #0xff
  47365c:	b.ne	473688 <feof@plt+0x6fde8>  // b.any
  473660:	ldp	x8, x2, [x19, #272]
  473664:	mov	w1, #0xff                  	// #255
  473668:	mov	x0, x19
  47366c:	strb	wzr, [x19, #255]
  473670:	blr	x8
  473674:	ldr	x9, [x19, #320]
  473678:	mov	x8, xzr
  47367c:	str	xzr, [x19, #256]
  473680:	add	x9, x9, #0x1
  473684:	str	x9, [x19, #320]
  473688:	add	x9, x8, #0x1
  47368c:	mov	w10, #0x3e                  	// #62
  473690:	str	x9, [x19, #256]
  473694:	strb	w10, [x19, x8]
  473698:	strb	w10, [x19, #264]
  47369c:	str	x24, [x19, #296]
  4736a0:	str	x23, [x19, #368]
  4736a4:	b	4720f4 <feof@plt+0x6e854>
  4736a8:	cbz	x23, 4736d4 <feof@plt+0x6fe34>
  4736ac:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  4736b0:	add	x1, x1, #0xa58
  4736b4:	mov	x0, x23
  4736b8:	bl	403640 <strcmp@plt>
  4736bc:	cbz	w0, 47459c <feof@plt+0x70cfc>
  4736c0:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  4736c4:	add	x1, x1, #0xa4b
  4736c8:	mov	x0, x23
  4736cc:	bl	403640 <strcmp@plt>
  4736d0:	cbz	w0, 474a4c <feof@plt+0x711ac>
  4736d4:	ldrsw	x22, [x24, #16]
  4736d8:	cbz	w22, 473d28 <feof@plt+0x70488>
  4736dc:	ldr	x24, [x24, #8]
  4736e0:	b	473700 <feof@plt+0x6fe60>
  4736e4:	add	x9, x8, #0x1
  4736e8:	subs	x22, x22, #0x1
  4736ec:	add	x24, x24, #0x1
  4736f0:	str	x9, [x19, #256]
  4736f4:	strb	w26, [x19, x8]
  4736f8:	strb	w26, [x19, #264]
  4736fc:	b.eq	473d28 <feof@plt+0x70488>  // b.none
  473700:	ldr	x8, [x19, #256]
  473704:	ldrb	w26, [x24]
  473708:	cmp	x8, #0xff
  47370c:	b.ne	4736e4 <feof@plt+0x6fe44>  // b.any
  473710:	ldp	x8, x2, [x19, #272]
  473714:	mov	w1, #0xff                  	// #255
  473718:	mov	x0, x19
  47371c:	strb	wzr, [x19, #255]
  473720:	blr	x8
  473724:	ldr	x9, [x19, #320]
  473728:	mov	x8, xzr
  47372c:	str	xzr, [x19, #256]
  473730:	add	x9, x9, #0x1
  473734:	str	x9, [x19, #320]
  473738:	b	4736e4 <feof@plt+0x6fe44>
  47373c:	add	w8, w8, #0x1
  473740:	str	w8, [x22, #4]
  473744:	ldr	x8, [x19, #328]
  473748:	add	w9, w9, #0x1
  47374c:	str	w9, [x19, #308]
  473750:	add	x9, sp, #0x10
  473754:	mov	x0, x19
  473758:	mov	w1, w20
  47375c:	mov	x2, x22
  473760:	stp	x22, x8, [sp, #16]
  473764:	str	x9, [x19, #328]
  473768:	bl	46f9e8 <feof@plt+0x6c148>
  47376c:	ldr	x8, [sp, #24]
  473770:	str	x8, [x19, #328]
  473774:	ldr	w8, [x22, #4]
  473778:	sub	w8, w8, #0x1
  47377c:	str	w8, [x22, #4]
  473780:	ldr	w8, [x19, #308]
  473784:	sub	w8, w8, #0x1
  473788:	str	w8, [x19, #308]
  47378c:	ldr	x8, [x19, #256]
  473790:	cmp	x8, #0xff
  473794:	b.ne	4737c0 <feof@plt+0x6ff20>  // b.any
  473798:	ldp	x8, x2, [x19, #272]
  47379c:	mov	w1, #0xff                  	// #255
  4737a0:	mov	x0, x19
  4737a4:	strb	wzr, [x19, #255]
  4737a8:	blr	x8
  4737ac:	ldr	x9, [x19, #320]
  4737b0:	mov	x8, xzr
  4737b4:	str	xzr, [x19, #256]
  4737b8:	add	x9, x9, #0x1
  4737bc:	str	x9, [x19, #320]
  4737c0:	add	x9, x8, #0x1
  4737c4:	mov	w10, #0x7b                  	// #123
  4737c8:	str	x9, [x19, #256]
  4737cc:	strb	w10, [x19, x8]
  4737d0:	strb	w10, [x19, #264]
  4737d4:	cbz	x21, 4737f0 <feof@plt+0x6ff50>
  4737d8:	ldr	w8, [x21, #4]
  4737dc:	cmp	w8, #0x1
  4737e0:	b.gt	4737f0 <feof@plt+0x6ff50>
  4737e4:	ldr	w9, [x19, #308]
  4737e8:	cmp	w9, #0x401
  4737ec:	b.lt	473a3c <feof@plt+0x7019c>  // b.tstop
  4737f0:	mov	w8, #0x1                   	// #1
  4737f4:	str	w8, [x25]
  4737f8:	ldr	x8, [x19, #256]
  4737fc:	cmp	x8, #0xff
  473800:	b.ne	47382c <feof@plt+0x6ff8c>  // b.any
  473804:	ldp	x8, x2, [x19, #272]
  473808:	mov	w1, #0xff                  	// #255
  47380c:	mov	x0, x19
  473810:	strb	wzr, [x19, #255]
  473814:	blr	x8
  473818:	ldr	x9, [x19, #320]
  47381c:	mov	x8, xzr
  473820:	str	xzr, [x19, #256]
  473824:	add	x9, x9, #0x1
  473828:	str	x9, [x19, #320]
  47382c:	add	x9, x8, #0x1
  473830:	mov	w10, #0x7d                  	// #125
  473834:	b	4749e8 <feof@plt+0x71148>
  473838:	add	w8, w8, #0x1
  47383c:	str	w8, [x22, #4]
  473840:	ldr	x8, [x19, #328]
  473844:	add	w9, w9, #0x1
  473848:	str	w9, [x19, #308]
  47384c:	add	x9, sp, #0x10
  473850:	mov	x0, x19
  473854:	mov	w1, w20
  473858:	mov	x2, x22
  47385c:	stp	x22, x8, [sp, #16]
  473860:	str	x9, [x19, #328]
  473864:	bl	46f9e8 <feof@plt+0x6c148>
  473868:	ldr	x8, [sp, #24]
  47386c:	str	x8, [x19, #328]
  473870:	ldr	w8, [x22, #4]
  473874:	sub	w8, w8, #0x1
  473878:	str	w8, [x22, #4]
  47387c:	ldr	w8, [x19, #308]
  473880:	sub	w8, w8, #0x1
  473884:	str	w8, [x19, #308]
  473888:	ldr	x21, [x21, #16]
  47388c:	cbnz	x21, 4720d4 <feof@plt+0x6e834>
  473890:	b	4720ec <feof@plt+0x6e84c>
  473894:	add	w8, w8, #0x1
  473898:	str	w8, [x22, #4]
  47389c:	ldr	x8, [x19, #328]
  4738a0:	add	w9, w9, #0x1
  4738a4:	str	w9, [x19, #308]
  4738a8:	add	x9, sp, #0x10
  4738ac:	mov	x0, x19
  4738b0:	mov	w1, w20
  4738b4:	mov	x2, x22
  4738b8:	stp	x22, x8, [sp, #16]
  4738bc:	str	x9, [x19, #328]
  4738c0:	bl	46f9e8 <feof@plt+0x6c148>
  4738c4:	ldr	x8, [sp, #24]
  4738c8:	str	x8, [x19, #328]
  4738cc:	ldr	w8, [x22, #4]
  4738d0:	sub	w8, w8, #0x1
  4738d4:	str	w8, [x22, #4]
  4738d8:	ldr	w8, [x19, #308]
  4738dc:	sub	w8, w8, #0x1
  4738e0:	str	w8, [x19, #308]
  4738e4:	b	471a30 <feof@plt+0x6e190>
  4738e8:	add	w8, w8, #0x1
  4738ec:	str	w8, [x22, #4]
  4738f0:	ldr	x8, [x19, #328]
  4738f4:	add	w9, w9, #0x1
  4738f8:	str	w9, [x19, #308]
  4738fc:	add	x9, sp, #0x10
  473900:	mov	x0, x19
  473904:	mov	w1, w20
  473908:	mov	x2, x22
  47390c:	stp	x22, x8, [sp, #16]
  473910:	str	x9, [x19, #328]
  473914:	bl	46f9e8 <feof@plt+0x6c148>
  473918:	ldr	x8, [sp, #24]
  47391c:	str	x8, [x19, #328]
  473920:	ldr	w8, [x22, #4]
  473924:	sub	w8, w8, #0x1
  473928:	str	w8, [x22, #4]
  47392c:	ldr	w8, [x19, #308]
  473930:	sub	w8, w8, #0x1
  473934:	str	w8, [x19, #308]
  473938:	b	471bb8 <feof@plt+0x6e318>
  47393c:	add	w8, w8, #0x1
  473940:	str	w8, [x22, #4]
  473944:	ldr	x8, [x19, #328]
  473948:	add	w9, w9, #0x1
  47394c:	str	w9, [x19, #308]
  473950:	add	x9, sp, #0x10
  473954:	mov	x0, x19
  473958:	mov	w1, w20
  47395c:	mov	x2, x22
  473960:	stp	x22, x8, [sp, #16]
  473964:	str	x9, [x19, #328]
  473968:	bl	46f9e8 <feof@plt+0x6c148>
  47396c:	ldr	x8, [sp, #24]
  473970:	str	x8, [x19, #328]
  473974:	ldr	w8, [x22, #4]
  473978:	sub	w8, w8, #0x1
  47397c:	str	w8, [x22, #4]
  473980:	ldr	w8, [x19, #308]
  473984:	sub	w8, w8, #0x1
  473988:	str	w8, [x19, #308]
  47398c:	b	471e10 <feof@plt+0x6e570>
  473990:	add	w8, w8, #0x1
  473994:	str	w8, [x22, #4]
  473998:	ldr	x8, [x19, #328]
  47399c:	add	w9, w9, #0x1
  4739a0:	str	w9, [x19, #308]
  4739a4:	add	x9, sp, #0x10
  4739a8:	mov	x0, x19
  4739ac:	mov	w1, w20
  4739b0:	mov	x2, x22
  4739b4:	stp	x22, x8, [sp, #16]
  4739b8:	str	x9, [x19, #328]
  4739bc:	bl	46f9e8 <feof@plt+0x6c148>
  4739c0:	ldr	x8, [sp, #24]
  4739c4:	str	x8, [x19, #328]
  4739c8:	ldr	w8, [x22, #4]
  4739cc:	sub	w8, w8, #0x1
  4739d0:	str	w8, [x22, #4]
  4739d4:	ldr	w8, [x19, #308]
  4739d8:	sub	w8, w8, #0x1
  4739dc:	str	w8, [x19, #308]
  4739e0:	b	471f64 <feof@plt+0x6e6c4>
  4739e4:	add	w8, w9, #0x1
  4739e8:	str	w8, [x22, #4]
  4739ec:	ldr	x8, [x19, #328]
  4739f0:	add	w9, w10, #0x1
  4739f4:	str	w9, [x19, #308]
  4739f8:	add	x9, sp, #0x10
  4739fc:	mov	x0, x19
  473a00:	mov	w1, w20
  473a04:	mov	x2, x22
  473a08:	stp	x22, x8, [sp, #16]
  473a0c:	str	x9, [x19, #328]
  473a10:	bl	46f9e8 <feof@plt+0x6c148>
  473a14:	ldr	x8, [sp, #24]
  473a18:	str	x8, [x19, #328]
  473a1c:	ldr	w8, [x22, #4]
  473a20:	sub	w8, w8, #0x1
  473a24:	str	w8, [x22, #4]
  473a28:	ldr	w9, [x19, #308]
  473a2c:	ldr	w8, [x19, #312]
  473a30:	sub	w9, w9, #0x1
  473a34:	str	w9, [x19, #308]
  473a38:	b	472450 <feof@plt+0x6ebb0>
  473a3c:	add	w8, w8, #0x1
  473a40:	str	w8, [x21, #4]
  473a44:	ldr	x8, [x19, #328]
  473a48:	add	w9, w9, #0x1
  473a4c:	str	w9, [x19, #308]
  473a50:	add	x9, sp, #0x10
  473a54:	mov	x0, x19
  473a58:	mov	w1, w20
  473a5c:	mov	x2, x21
  473a60:	stp	x21, x8, [sp, #16]
  473a64:	str	x9, [x19, #328]
  473a68:	bl	46f9e8 <feof@plt+0x6c148>
  473a6c:	ldr	x8, [sp, #24]
  473a70:	str	x8, [x19, #328]
  473a74:	ldr	w8, [x21, #4]
  473a78:	sub	w8, w8, #0x1
  473a7c:	str	w8, [x21, #4]
  473a80:	ldr	w8, [x19, #308]
  473a84:	sub	w8, w8, #0x1
  473a88:	str	w8, [x19, #308]
  473a8c:	b	4737f8 <feof@plt+0x6ff58>
  473a90:	add	w8, w8, #0x1
  473a94:	str	w8, [x21, #4]
  473a98:	ldr	x8, [x19, #328]
  473a9c:	add	w9, w9, #0x1
  473aa0:	str	w9, [x19, #308]
  473aa4:	add	x9, sp, #0x10
  473aa8:	mov	x0, x19
  473aac:	mov	w1, w20
  473ab0:	mov	x2, x21
  473ab4:	stp	x21, x8, [sp, #16]
  473ab8:	str	x9, [x19, #328]
  473abc:	bl	46f9e8 <feof@plt+0x6c148>
  473ac0:	ldr	x8, [sp, #24]
  473ac4:	str	x8, [x19, #328]
  473ac8:	ldr	w8, [x21, #4]
  473acc:	sub	w8, w8, #0x1
  473ad0:	str	w8, [x21, #4]
  473ad4:	ldr	w8, [x19, #308]
  473ad8:	ldrb	w9, [x19, #264]
  473adc:	sub	w8, w8, #0x1
  473ae0:	cmp	w9, #0x3e
  473ae4:	str	w8, [x19, #308]
  473ae8:	b.ne	473654 <feof@plt+0x6fdb4>  // b.any
  473aec:	ldr	x8, [x19, #256]
  473af0:	cmp	x8, #0xff
  473af4:	b.ne	473b20 <feof@plt+0x70280>  // b.any
  473af8:	ldp	x8, x2, [x19, #272]
  473afc:	mov	w1, #0xff                  	// #255
  473b00:	mov	x0, x19
  473b04:	strb	wzr, [x19, #255]
  473b08:	blr	x8
  473b0c:	ldr	x9, [x19, #320]
  473b10:	mov	x8, xzr
  473b14:	str	xzr, [x19, #256]
  473b18:	add	x9, x9, #0x1
  473b1c:	str	x9, [x19, #320]
  473b20:	add	x9, x8, #0x1
  473b24:	mov	w10, #0x20                  	// #32
  473b28:	str	x9, [x19, #256]
  473b2c:	strb	w10, [x19, x8]
  473b30:	strb	w10, [x19, #264]
  473b34:	b	473654 <feof@plt+0x6fdb4>
  473b38:	add	w8, w8, #0x1
  473b3c:	str	w8, [x23, #4]
  473b40:	ldr	x8, [x19, #328]
  473b44:	add	w9, w9, #0x1
  473b48:	str	w9, [x19, #308]
  473b4c:	sub	x9, x29, #0x10
  473b50:	mov	x0, x19
  473b54:	mov	w1, w20
  473b58:	mov	x2, x23
  473b5c:	stp	x23, x8, [x29, #-16]
  473b60:	str	x9, [x19, #328]
  473b64:	bl	46f9e8 <feof@plt+0x6c148>
  473b68:	ldur	x8, [x29, #-8]
  473b6c:	str	x8, [x19, #328]
  473b70:	ldr	w8, [x23, #4]
  473b74:	sub	w8, w8, #0x1
  473b78:	str	w8, [x23, #4]
  473b7c:	ldr	w8, [x19, #308]
  473b80:	sub	w8, w8, #0x1
  473b84:	str	w8, [x19, #308]
  473b88:	b	472be0 <feof@plt+0x6f340>
  473b8c:	mov	w8, #0x1                   	// #1
  473b90:	str	w8, [x25]
  473b94:	b	4720ec <feof@plt+0x6e84c>
  473b98:	ldr	x11, [x19, #328]
  473b9c:	cbz	x11, 473fe8 <feof@plt+0x70748>
  473ba0:	mov	x12, x11
  473ba4:	b	473bb0 <feof@plt+0x70310>
  473ba8:	ldr	x12, [x12, #8]
  473bac:	cbz	x12, 473fe8 <feof@plt+0x70748>
  473bb0:	ldr	x13, [x12]
  473bb4:	cmp	x13, x9
  473bb8:	b.eq	473bcc <feof@plt+0x7032c>  // b.none
  473bbc:	cmp	x13, x21
  473bc0:	b.ne	473ba8 <feof@plt+0x70308>  // b.any
  473bc4:	cmp	x12, x11
  473bc8:	b.eq	473ba8 <feof@plt+0x70308>  // b.none
  473bcc:	mov	w23, wzr
  473bd0:	b	473ff8 <feof@plt+0x70758>
  473bd4:	ldr	x24, [x24, #16]
  473bd8:	ldr	w10, [x24]
  473bdc:	cmp	w10, #0x47
  473be0:	b.ne	473be8 <feof@plt+0x70348>  // b.any
  473be4:	ldr	x24, [x24, #8]
  473be8:	cbz	x24, 4720ec <feof@plt+0x6e84c>
  473bec:	mov	x11, #0x1f                  	// #31
  473bf0:	mov	w10, #0x1                   	// #1
  473bf4:	movk	x11, #0x1a, lsl #48
  473bf8:	ldr	w12, [x24]
  473bfc:	sub	w13, w12, #0x1c
  473c00:	cmp	w13, #0x34
  473c04:	b.hi	473c4c <feof@plt+0x703ac>  // b.pmore
  473c08:	lsl	x13, x10, x13
  473c0c:	tst	x13, x11
  473c10:	b.eq	473c4c <feof@plt+0x703ac>  // b.none
  473c14:	cmp	x23, #0x4
  473c18:	b.cs	4720ec <feof@plt+0x6e84c>  // b.hs, b.nlast
  473c1c:	ldp	q0, q1, [x9]
  473c20:	add	x12, x9, #0x20
  473c24:	add	x23, x23, #0x1
  473c28:	stp	q0, q1, [x9, #32]
  473c2c:	str	x9, [x9, #32]
  473c30:	str	x12, [x19, #296]
  473c34:	str	x24, [x9, #8]
  473c38:	str	wzr, [x9, #16]
  473c3c:	str	x8, [x9, #24]
  473c40:	ldr	x24, [x24, #8]
  473c44:	mov	x9, x12
  473c48:	b	473bf8 <feof@plt+0x70358>
  473c4c:	cmp	w12, #0x4
  473c50:	b.ne	473c60 <feof@plt+0x703c0>  // b.any
  473c54:	stp	x8, x24, [sp]
  473c58:	mov	x8, sp
  473c5c:	str	x8, [x19, #288]
  473c60:	ldr	x21, [x21, #16]
  473c64:	cbz	x21, 473c80 <feof@plt+0x703e0>
  473c68:	ldr	w8, [x21, #4]
  473c6c:	cmp	w8, #0x1
  473c70:	b.gt	473c80 <feof@plt+0x703e0>
  473c74:	ldr	w9, [x19, #308]
  473c78:	cmp	w9, #0x401
  473c7c:	b.lt	474c04 <feof@plt+0x71364>  // b.tstop
  473c80:	mov	w8, #0x1                   	// #1
  473c84:	str	w8, [x25]
  473c88:	ldr	w8, [x24]
  473c8c:	cmp	w8, #0x4
  473c90:	b.ne	473c9c <feof@plt+0x703fc>  // b.any
  473c94:	ldr	x8, [sp]
  473c98:	str	x8, [x19, #288]
  473c9c:	sub	w8, w23, #0x1
  473ca0:	add	x9, sp, #0x10
  473ca4:	add	x8, x9, x8, lsl #5
  473ca8:	add	x21, x8, #0x10
  473cac:	mov	w24, #0x20                  	// #32
  473cb0:	b	473ce0 <feof@plt+0x70440>
  473cb4:	add	x9, x8, #0x1
  473cb8:	str	x9, [x19, #256]
  473cbc:	strb	w24, [x19, x8]
  473cc0:	strb	w24, [x19, #264]
  473cc4:	ldur	x2, [x21, #-8]
  473cc8:	mov	x0, x19
  473ccc:	mov	w1, w20
  473cd0:	bl	475c80 <feof@plt+0x723e0>
  473cd4:	sub	w23, w23, #0x1
  473cd8:	sub	x21, x21, #0x20
  473cdc:	cbz	w23, 473d20 <feof@plt+0x70480>
  473ce0:	ldr	w8, [x21]
  473ce4:	cbnz	w8, 473cd4 <feof@plt+0x70434>
  473ce8:	ldr	x8, [x19, #256]
  473cec:	cmp	x8, #0xff
  473cf0:	b.ne	473cb4 <feof@plt+0x70414>  // b.any
  473cf4:	ldp	x8, x2, [x19, #272]
  473cf8:	mov	w1, #0xff                  	// #255
  473cfc:	mov	x0, x19
  473d00:	strb	wzr, [x19, #255]
  473d04:	blr	x8
  473d08:	ldr	x9, [x19, #320]
  473d0c:	mov	x8, xzr
  473d10:	str	xzr, [x19, #256]
  473d14:	add	x9, x9, #0x1
  473d18:	str	x9, [x19, #320]
  473d1c:	b	473cb4 <feof@plt+0x70414>
  473d20:	str	x22, [x19, #296]
  473d24:	b	4720f4 <feof@plt+0x6e854>
  473d28:	cbz	x23, 472f0c <feof@plt+0x6f66c>
  473d2c:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x452fc>
  473d30:	add	x1, x1, #0xe6f
  473d34:	mov	x0, x23
  473d38:	bl	403640 <strcmp@plt>
  473d3c:	cbz	w0, 4731f4 <feof@plt+0x6f954>
  473d40:	adrp	x1, 4b8000 <_obstack_memory_used@@Base+0x3c2fc>
  473d44:	add	x1, x1, #0x6d
  473d48:	mov	x0, x23
  473d4c:	bl	403640 <strcmp@plt>
  473d50:	cbnz	w0, 472f0c <feof@plt+0x6f66c>
  473d54:	b	472f30 <feof@plt+0x6f690>
  473d58:	ldr	w8, [x22, #4]
  473d5c:	cmp	w8, #0x1
  473d60:	b.gt	473d70 <feof@plt+0x704d0>
  473d64:	ldr	w9, [x19, #308]
  473d68:	cmp	w9, #0x401
  473d6c:	b.lt	474844 <feof@plt+0x70fa4>  // b.tstop
  473d70:	mov	w8, #0x1                   	// #1
  473d74:	str	w8, [x25]
  473d78:	b	474894 <feof@plt+0x70ff4>
  473d7c:	add	w8, w8, #0x1
  473d80:	str	w8, [x22, #4]
  473d84:	ldr	x8, [x19, #328]
  473d88:	add	w9, w9, #0x1
  473d8c:	str	w9, [x19, #308]
  473d90:	add	x9, sp, #0x10
  473d94:	mov	x0, x19
  473d98:	mov	w1, w20
  473d9c:	mov	x2, x22
  473da0:	stp	x22, x8, [sp, #16]
  473da4:	str	x9, [x19, #328]
  473da8:	bl	46f9e8 <feof@plt+0x6c148>
  473dac:	ldr	x8, [sp, #24]
  473db0:	str	x8, [x19, #328]
  473db4:	ldr	w8, [x22, #4]
  473db8:	sub	w8, w8, #0x1
  473dbc:	str	w8, [x22, #4]
  473dc0:	ldr	w8, [x19, #308]
  473dc4:	sub	w8, w8, #0x1
  473dc8:	str	w8, [x19, #308]
  473dcc:	b	470e00 <feof@plt+0x6d560>
  473dd0:	add	w8, w9, #0x1
  473dd4:	str	w8, [x22, #4]
  473dd8:	ldr	x8, [x19, #328]
  473ddc:	add	w9, w10, #0x1
  473de0:	str	w9, [x19, #308]
  473de4:	add	x9, sp, #0x10
  473de8:	mov	x0, x19
  473dec:	mov	w1, w20
  473df0:	mov	x2, x22
  473df4:	stp	x22, x8, [sp, #16]
  473df8:	str	x9, [x19, #328]
  473dfc:	bl	46f9e8 <feof@plt+0x6c148>
  473e00:	ldr	x8, [sp, #24]
  473e04:	str	x8, [x19, #328]
  473e08:	ldr	w8, [x22, #4]
  473e0c:	sub	w8, w8, #0x1
  473e10:	str	w8, [x22, #4]
  473e14:	ldr	w9, [x19, #308]
  473e18:	ldr	x8, [x19, #368]
  473e1c:	sub	w9, w9, #0x1
  473e20:	str	w9, [x19, #308]
  473e24:	cbnz	x8, 472294 <feof@plt+0x6e9f4>
  473e28:	b	47229c <feof@plt+0x6e9fc>
  473e2c:	add	w8, w8, #0x1
  473e30:	str	w8, [x21, #4]
  473e34:	ldr	x8, [x19, #328]
  473e38:	add	w9, w9, #0x1
  473e3c:	str	w9, [x19, #308]
  473e40:	add	x9, sp, #0x10
  473e44:	mov	x0, x19
  473e48:	mov	w1, w20
  473e4c:	mov	x2, x21
  473e50:	stp	x21, x8, [sp, #16]
  473e54:	str	x9, [x19, #328]
  473e58:	bl	46f9e8 <feof@plt+0x6c148>
  473e5c:	ldr	x8, [sp, #24]
  473e60:	str	x8, [x19, #328]
  473e64:	ldr	w8, [x21, #4]
  473e68:	sub	w8, w8, #0x1
  473e6c:	str	w8, [x21, #4]
  473e70:	ldr	w8, [x19, #308]
  473e74:	ldrb	w9, [x19, #264]
  473e78:	sub	w8, w8, #0x1
  473e7c:	cmp	w9, #0x3e
  473e80:	str	w8, [x19, #308]
  473e84:	b.ne	472364 <feof@plt+0x6eac4>  // b.any
  473e88:	ldr	x8, [x19, #256]
  473e8c:	cmp	x8, #0xff
  473e90:	b.ne	473ebc <feof@plt+0x7061c>  // b.any
  473e94:	ldp	x8, x2, [x19, #272]
  473e98:	mov	w1, #0xff                  	// #255
  473e9c:	mov	x0, x19
  473ea0:	strb	wzr, [x19, #255]
  473ea4:	blr	x8
  473ea8:	ldr	x9, [x19, #320]
  473eac:	mov	x8, xzr
  473eb0:	str	xzr, [x19, #256]
  473eb4:	add	x9, x9, #0x1
  473eb8:	str	x9, [x19, #320]
  473ebc:	add	x9, x8, #0x1
  473ec0:	mov	w10, #0x20                  	// #32
  473ec4:	str	x9, [x19, #256]
  473ec8:	strb	w10, [x19, x8]
  473ecc:	strb	w10, [x19, #264]
  473ed0:	b	472364 <feof@plt+0x6eac4>
  473ed4:	add	w8, w9, #0x1
  473ed8:	str	w8, [x22, #4]
  473edc:	ldr	x8, [x19, #328]
  473ee0:	add	w9, w10, #0x1
  473ee4:	str	w9, [x19, #308]
  473ee8:	add	x9, sp, #0x10
  473eec:	mov	x0, x19
  473ef0:	mov	w1, w20
  473ef4:	mov	x2, x22
  473ef8:	stp	x22, x8, [sp, #16]
  473efc:	str	x9, [x19, #328]
  473f00:	bl	46f9e8 <feof@plt+0x6c148>
  473f04:	ldr	x8, [sp, #24]
  473f08:	str	x8, [x19, #328]
  473f0c:	ldr	w8, [x22, #4]
  473f10:	sub	w8, w8, #0x1
  473f14:	str	w8, [x22, #4]
  473f18:	ldr	w9, [x19, #308]
  473f1c:	ldr	x8, [x19, #368]
  473f20:	sub	w9, w9, #0x1
  473f24:	str	w9, [x19, #308]
  473f28:	cbnz	x8, 4728b8 <feof@plt+0x6f018>
  473f2c:	b	4720f4 <feof@plt+0x6e854>
  473f30:	ldr	x8, [x19, #256]
  473f34:	cmp	x8, #0xff
  473f38:	b.ne	473f64 <feof@plt+0x706c4>  // b.any
  473f3c:	ldp	x8, x2, [x19, #272]
  473f40:	mov	w1, #0xff                  	// #255
  473f44:	mov	x0, x19
  473f48:	strb	wzr, [x19, #255]
  473f4c:	blr	x8
  473f50:	ldr	x9, [x19, #320]
  473f54:	mov	x8, xzr
  473f58:	str	xzr, [x19, #256]
  473f5c:	add	x9, x9, #0x1
  473f60:	str	x9, [x19, #320]
  473f64:	add	x9, x8, #0x1
  473f68:	mov	w10, #0x28                  	// #40
  473f6c:	str	x9, [x19, #256]
  473f70:	strb	w10, [x19, x8]
  473f74:	strb	w10, [x19, #264]
  473f78:	cbz	x21, 473f94 <feof@plt+0x706f4>
  473f7c:	ldr	w8, [x21, #4]
  473f80:	cmp	w8, #0x1
  473f84:	b.gt	473f94 <feof@plt+0x706f4>
  473f88:	ldr	w9, [x19, #308]
  473f8c:	cmp	w9, #0x401
  473f90:	b.lt	474f98 <feof@plt+0x716f8>  // b.tstop
  473f94:	mov	w8, #0x1                   	// #1
  473f98:	str	w8, [x25]
  473f9c:	ldr	x8, [x19, #256]
  473fa0:	cmp	x8, #0xff
  473fa4:	b.ne	473fd0 <feof@plt+0x70730>  // b.any
  473fa8:	ldp	x8, x2, [x19, #272]
  473fac:	mov	w1, #0xff                  	// #255
  473fb0:	mov	x0, x19
  473fb4:	strb	wzr, [x19, #255]
  473fb8:	blr	x8
  473fbc:	ldr	x9, [x19, #320]
  473fc0:	mov	x8, xzr
  473fc4:	str	xzr, [x19, #256]
  473fc8:	add	x9, x9, #0x1
  473fcc:	str	x9, [x19, #320]
  473fd0:	add	x9, x8, #0x1
  473fd4:	mov	w10, #0x29                  	// #41
  473fd8:	str	x9, [x19, #256]
  473fdc:	strb	w10, [x19, x8]
  473fe0:	strb	w10, [x19, #264]
  473fe4:	b	4742d0 <feof@plt+0x70a30>
  473fe8:	ldr	x10, [x10]
  473fec:	ldr	x24, [x19, #288]
  473ff0:	mov	w23, #0x1                   	// #1
  473ff4:	str	x10, [x19, #288]
  473ff8:	ldr	x10, [x19, #288]
  473ffc:	cbz	x10, 474038 <feof@plt+0x70798>
  474000:	ldr	x11, [x10, #8]
  474004:	ldr	w10, [x9, #8]
  474008:	ldr	x9, [x11, #16]
  47400c:	tbnz	w10, #31, 474d88 <feof@plt+0x714e8>
  474010:	cbz	x9, 4755f8 <feof@plt+0x71d58>
  474014:	ldr	w11, [x9]
  474018:	cmp	w11, #0x2f
  47401c:	b.ne	4755f8 <feof@plt+0x71d58>  // b.any
  474020:	subs	w11, w10, #0x1
  474024:	b.lt	474d80 <feof@plt+0x714e0>  // b.tstop
  474028:	ldr	x9, [x9, #16]
  47402c:	mov	w10, w11
  474030:	cbnz	x9, 474014 <feof@plt+0x70774>
  474034:	b	4755f8 <feof@plt+0x71d58>
  474038:	mov	w8, #0x1                   	// #1
  47403c:	str	w8, [x25]
  474040:	b	4755f8 <feof@plt+0x71d58>
  474044:	cmp	w8, #0x31
  474048:	b.hi	474b4c <feof@plt+0x712ac>  // b.pmore
  47404c:	mov	w8, w8
  474050:	mov	w9, #0x1                   	// #1
  474054:	lsl	x8, x9, x8
  474058:	mov	x9, #0x43                  	// #67
  47405c:	movk	x9, #0x2, lsl #48
  474060:	tst	x8, x9
  474064:	b.eq	474b4c <feof@plt+0x712ac>  // b.none
  474068:	cbz	x22, 474084 <feof@plt+0x707e4>
  47406c:	ldr	w8, [x22, #4]
  474070:	cmp	w8, #0x1
  474074:	b.gt	474084 <feof@plt+0x707e4>
  474078:	ldr	w9, [x19, #308]
  47407c:	cmp	w9, #0x401
  474080:	b.lt	474dc4 <feof@plt+0x71524>  // b.tstop
  474084:	mov	w8, #0x1                   	// #1
  474088:	str	w8, [x25]
  47408c:	b	474e18 <feof@plt+0x71578>
  474090:	add	w8, w8, #0x1
  474094:	str	w8, [x22, #4]
  474098:	ldr	x8, [x19, #328]
  47409c:	add	w9, w9, #0x1
  4740a0:	str	w9, [x19, #308]
  4740a4:	add	x9, sp, #0x10
  4740a8:	mov	x0, x19
  4740ac:	mov	w1, w20
  4740b0:	mov	x2, x22
  4740b4:	stp	x22, x8, [sp, #16]
  4740b8:	str	x9, [x19, #328]
  4740bc:	bl	46f9e8 <feof@plt+0x6c148>
  4740c0:	ldr	x8, [sp, #24]
  4740c4:	str	x8, [x19, #328]
  4740c8:	ldr	w8, [x22, #4]
  4740cc:	sub	w8, w8, #0x1
  4740d0:	str	w8, [x22, #4]
  4740d4:	ldr	w8, [x19, #308]
  4740d8:	sub	w8, w8, #0x1
  4740dc:	str	w8, [x19, #308]
  4740e0:	b	472e9c <feof@plt+0x6f5fc>
  4740e4:	add	w8, w8, #0x1
  4740e8:	str	w8, [x22, #4]
  4740ec:	ldr	x8, [x19, #328]
  4740f0:	add	w9, w9, #0x1
  4740f4:	str	w9, [x19, #308]
  4740f8:	add	x9, sp, #0x10
  4740fc:	mov	x0, x19
  474100:	mov	w1, w20
  474104:	mov	x2, x22
  474108:	stp	x22, x8, [sp, #16]
  47410c:	str	x9, [x19, #328]
  474110:	bl	46f9e8 <feof@plt+0x6c148>
  474114:	ldr	x8, [sp, #24]
  474118:	str	x8, [x19, #328]
  47411c:	ldr	w8, [x22, #4]
  474120:	sub	w8, w8, #0x1
  474124:	str	w8, [x22, #4]
  474128:	ldr	w8, [x19, #308]
  47412c:	sub	w8, w8, #0x1
  474130:	str	w8, [x19, #308]
  474134:	b	472f0c <feof@plt+0x6f66c>
  474138:	ldr	x8, [x19, #256]
  47413c:	cmp	x8, #0xff
  474140:	b.ne	47416c <feof@plt+0x708cc>  // b.any
  474144:	ldp	x8, x2, [x19, #272]
  474148:	mov	w1, #0xff                  	// #255
  47414c:	mov	x0, x19
  474150:	strb	wzr, [x19, #255]
  474154:	blr	x8
  474158:	ldr	x9, [x19, #320]
  47415c:	mov	x8, xzr
  474160:	str	xzr, [x19, #256]
  474164:	add	x9, x9, #0x1
  474168:	str	x9, [x19, #320]
  47416c:	add	x9, x8, #0x1
  474170:	mov	w10, #0x6c                  	// #108
  474174:	b	4749e8 <feof@plt+0x71148>
  474178:	ldr	x8, [x19, #256]
  47417c:	cmp	x8, #0xff
  474180:	b.ne	4741ac <feof@plt+0x7090c>  // b.any
  474184:	ldp	x8, x2, [x19, #272]
  474188:	mov	w1, #0xff                  	// #255
  47418c:	mov	x0, x19
  474190:	strb	wzr, [x19, #255]
  474194:	blr	x8
  474198:	ldr	x9, [x19, #320]
  47419c:	mov	x8, xzr
  4741a0:	str	xzr, [x19, #256]
  4741a4:	add	x9, x9, #0x1
  4741a8:	str	x9, [x19, #320]
  4741ac:	add	x9, x8, #0x1
  4741b0:	mov	w10, #0x75                  	// #117
  4741b4:	str	x9, [x19, #256]
  4741b8:	strb	w10, [x19, x8]
  4741bc:	ldr	x8, [x19, #256]
  4741c0:	strb	w10, [x19, #264]
  4741c4:	cmp	x8, #0xff
  4741c8:	b.eq	474144 <feof@plt+0x708a4>  // b.none
  4741cc:	b	47416c <feof@plt+0x708cc>
  4741d0:	ldr	x8, [x19, #256]
  4741d4:	cmp	x8, #0xff
  4741d8:	b.ne	474204 <feof@plt+0x70964>  // b.any
  4741dc:	ldp	x8, x2, [x19, #272]
  4741e0:	mov	w1, #0xff                  	// #255
  4741e4:	mov	x0, x19
  4741e8:	strb	wzr, [x19, #255]
  4741ec:	blr	x8
  4741f0:	ldr	x9, [x19, #320]
  4741f4:	mov	x8, xzr
  4741f8:	str	xzr, [x19, #256]
  4741fc:	add	x9, x9, #0x1
  474200:	str	x9, [x19, #320]
  474204:	add	x9, x8, #0x1
  474208:	mov	w20, #0x6c                  	// #108
  47420c:	str	x9, [x19, #256]
  474210:	strb	w20, [x19, x8]
  474214:	ldr	x8, [x19, #256]
  474218:	strb	w20, [x19, #264]
  47421c:	cmp	x8, #0xff
  474220:	b.eq	471638 <feof@plt+0x6dd98>  // b.none
  474224:	b	471660 <feof@plt+0x6ddc0>
  474228:	ldr	x8, [x19, #256]
  47422c:	cmp	x8, #0xff
  474230:	b.ne	47425c <feof@plt+0x709bc>  // b.any
  474234:	ldp	x8, x2, [x19, #272]
  474238:	mov	w1, #0xff                  	// #255
  47423c:	mov	x0, x19
  474240:	strb	wzr, [x19, #255]
  474244:	blr	x8
  474248:	ldr	x9, [x19, #320]
  47424c:	mov	x8, xzr
  474250:	str	xzr, [x19, #256]
  474254:	add	x9, x9, #0x1
  474258:	str	x9, [x19, #320]
  47425c:	add	x9, x8, #0x1
  474260:	mov	w10, #0x75                  	// #117
  474264:	str	x9, [x19, #256]
  474268:	strb	w10, [x19, x8]
  47426c:	ldr	x8, [x19, #256]
  474270:	strb	w10, [x19, #264]
  474274:	cmp	x8, #0xff
  474278:	b.eq	4741dc <feof@plt+0x7093c>  // b.none
  47427c:	b	474204 <feof@plt+0x70964>
  474280:	add	w8, w8, #0x1
  474284:	str	w8, [x21, #4]
  474288:	ldr	x8, [x19, #328]
  47428c:	add	w9, w9, #0x1
  474290:	str	w9, [x19, #308]
  474294:	add	x9, sp, #0x10
  474298:	mov	x0, x19
  47429c:	mov	w1, w20
  4742a0:	mov	x2, x21
  4742a4:	stp	x21, x8, [sp, #16]
  4742a8:	str	x9, [x19, #328]
  4742ac:	bl	46f9e8 <feof@plt+0x6c148>
  4742b0:	ldr	x8, [sp, #24]
  4742b4:	str	x8, [x19, #328]
  4742b8:	ldr	w8, [x21, #4]
  4742bc:	sub	w8, w8, #0x1
  4742c0:	str	w8, [x21, #4]
  4742c4:	ldr	w8, [x19, #308]
  4742c8:	sub	w8, w8, #0x1
  4742cc:	str	w8, [x19, #308]
  4742d0:	ldr	x8, [x19, #256]
  4742d4:	cmp	x8, #0xff
  4742d8:	b.ne	474304 <feof@plt+0x70a64>  // b.any
  4742dc:	ldp	x8, x2, [x19, #272]
  4742e0:	mov	w1, #0xff                  	// #255
  4742e4:	mov	x0, x19
  4742e8:	strb	wzr, [x19, #255]
  4742ec:	blr	x8
  4742f0:	ldr	x9, [x19, #320]
  4742f4:	mov	x8, xzr
  4742f8:	str	xzr, [x19, #256]
  4742fc:	add	x9, x9, #0x1
  474300:	str	x9, [x19, #320]
  474304:	add	x9, x8, #0x1
  474308:	mov	w20, #0x2e                  	// #46
  47430c:	str	x9, [x19, #256]
  474310:	strb	w20, [x19, x8]
  474314:	ldr	x8, [x19, #256]
  474318:	strb	w20, [x19, #264]
  47431c:	cmp	x8, #0xff
  474320:	b.ne	47434c <feof@plt+0x70aac>  // b.any
  474324:	ldp	x8, x2, [x19, #272]
  474328:	mov	w1, #0xff                  	// #255
  47432c:	mov	x0, x19
  474330:	strb	wzr, [x19, #255]
  474334:	blr	x8
  474338:	ldr	x9, [x19, #320]
  47433c:	mov	x8, xzr
  474340:	str	xzr, [x19, #256]
  474344:	add	x9, x9, #0x1
  474348:	str	x9, [x19, #320]
  47434c:	add	x9, x8, #0x1
  474350:	str	x9, [x19, #256]
  474354:	strb	w20, [x19, x8]
  474358:	ldr	x8, [x19, #256]
  47435c:	strb	w20, [x19, #264]
  474360:	cmp	x8, #0xff
  474364:	b.ne	474390 <feof@plt+0x70af0>  // b.any
  474368:	ldp	x8, x2, [x19, #272]
  47436c:	mov	w1, #0xff                  	// #255
  474370:	mov	x0, x19
  474374:	strb	wzr, [x19, #255]
  474378:	blr	x8
  47437c:	ldr	x9, [x19, #320]
  474380:	mov	x8, xzr
  474384:	str	xzr, [x19, #256]
  474388:	add	x9, x9, #0x1
  47438c:	str	x9, [x19, #320]
  474390:	add	x9, x8, #0x1
  474394:	mov	w10, #0x2e                  	// #46
  474398:	b	4749e8 <feof@plt+0x71148>
  47439c:	cmp	w8, #0x3d
  4743a0:	mov	w23, #0x7                   	// #7
  4743a4:	b.ne	471c24 <feof@plt+0x6e384>  // b.any
  4743a8:	ldr	w8, [x9, #16]
  4743ac:	cmp	w8, #0x1
  4743b0:	b.ne	471c24 <feof@plt+0x6e384>  // b.any
  4743b4:	ldr	x8, [x9, #8]
  4743b8:	ldrb	w8, [x8]
  4743bc:	cmp	w8, #0x31
  4743c0:	b.eq	474fec <feof@plt+0x7174c>  // b.none
  4743c4:	cmp	w8, #0x30
  4743c8:	b.ne	4734d4 <feof@plt+0x6fc34>  // b.any
  4743cc:	ldr	x8, [x19, #256]
  4743d0:	cmp	x8, #0xff
  4743d4:	b.ne	474400 <feof@plt+0x70b60>  // b.any
  4743d8:	ldp	x8, x2, [x19, #272]
  4743dc:	mov	w1, #0xff                  	// #255
  4743e0:	mov	x0, x19
  4743e4:	strb	wzr, [x19, #255]
  4743e8:	blr	x8
  4743ec:	ldr	x9, [x19, #320]
  4743f0:	mov	x8, xzr
  4743f4:	str	xzr, [x19, #256]
  4743f8:	add	x9, x9, #0x1
  4743fc:	str	x9, [x19, #320]
  474400:	add	x9, x8, #0x1
  474404:	mov	w10, #0x66                  	// #102
  474408:	str	x9, [x19, #256]
  47440c:	strb	w10, [x19, x8]
  474410:	ldr	x8, [x19, #256]
  474414:	strb	w10, [x19, #264]
  474418:	cmp	x8, #0xff
  47441c:	b.ne	474448 <feof@plt+0x70ba8>  // b.any
  474420:	ldp	x8, x2, [x19, #272]
  474424:	mov	w1, #0xff                  	// #255
  474428:	mov	x0, x19
  47442c:	strb	wzr, [x19, #255]
  474430:	blr	x8
  474434:	ldr	x9, [x19, #320]
  474438:	mov	x8, xzr
  47443c:	str	xzr, [x19, #256]
  474440:	add	x9, x9, #0x1
  474444:	str	x9, [x19, #320]
  474448:	add	x9, x8, #0x1
  47444c:	mov	w10, #0x61                  	// #97
  474450:	str	x9, [x19, #256]
  474454:	strb	w10, [x19, x8]
  474458:	ldr	x8, [x19, #256]
  47445c:	strb	w10, [x19, #264]
  474460:	cmp	x8, #0xff
  474464:	b.ne	474490 <feof@plt+0x70bf0>  // b.any
  474468:	ldp	x8, x2, [x19, #272]
  47446c:	mov	w1, #0xff                  	// #255
  474470:	mov	x0, x19
  474474:	strb	wzr, [x19, #255]
  474478:	blr	x8
  47447c:	ldr	x9, [x19, #320]
  474480:	mov	x8, xzr
  474484:	str	xzr, [x19, #256]
  474488:	add	x9, x9, #0x1
  47448c:	str	x9, [x19, #320]
  474490:	add	x9, x8, #0x1
  474494:	mov	w10, #0x6c                  	// #108
  474498:	str	x9, [x19, #256]
  47449c:	strb	w10, [x19, x8]
  4744a0:	ldr	x8, [x19, #256]
  4744a4:	strb	w10, [x19, #264]
  4744a8:	cmp	x8, #0xff
  4744ac:	b.ne	4744d8 <feof@plt+0x70c38>  // b.any
  4744b0:	ldp	x8, x2, [x19, #272]
  4744b4:	mov	w1, #0xff                  	// #255
  4744b8:	mov	x0, x19
  4744bc:	strb	wzr, [x19, #255]
  4744c0:	blr	x8
  4744c4:	ldr	x9, [x19, #320]
  4744c8:	mov	x8, xzr
  4744cc:	str	xzr, [x19, #256]
  4744d0:	add	x9, x9, #0x1
  4744d4:	str	x9, [x19, #320]
  4744d8:	add	x9, x8, #0x1
  4744dc:	mov	w10, #0x73                  	// #115
  4744e0:	b	4750b8 <feof@plt+0x71818>
  4744e4:	add	w8, w8, #0x1
  4744e8:	str	w8, [x22, #4]
  4744ec:	ldr	x8, [x19, #328]
  4744f0:	add	w9, w9, #0x1
  4744f4:	str	w9, [x19, #308]
  4744f8:	add	x9, sp, #0x10
  4744fc:	mov	x0, x19
  474500:	mov	w1, w20
  474504:	mov	x2, x22
  474508:	stp	x22, x8, [sp, #16]
  47450c:	str	x9, [x19, #328]
  474510:	bl	46f9e8 <feof@plt+0x6c148>
  474514:	ldr	x8, [sp, #24]
  474518:	str	x8, [x19, #328]
  47451c:	ldr	w8, [x22, #4]
  474520:	sub	w8, w8, #0x1
  474524:	str	w8, [x22, #4]
  474528:	ldr	w8, [x19, #308]
  47452c:	sub	w8, w8, #0x1
  474530:	str	w8, [x19, #308]
  474534:	b	46fe1c <feof@plt+0x6c57c>
  474538:	add	w8, w9, #0x1
  47453c:	str	w8, [x22, #4]
  474540:	ldr	x8, [x19, #328]
  474544:	add	w9, w10, #0x1
  474548:	str	w9, [x19, #308]
  47454c:	and	w1, w20, #0xffffff9f
  474550:	sub	x9, x29, #0x10
  474554:	mov	x0, x19
  474558:	mov	x2, x22
  47455c:	stp	x22, x8, [x29, #-16]
  474560:	str	x9, [x19, #328]
  474564:	bl	46f9e8 <feof@plt+0x6c148>
  474568:	ldur	x8, [x29, #-8]
  47456c:	str	x8, [x19, #328]
  474570:	ldr	w8, [x22, #4]
  474574:	sub	w8, w8, #0x1
  474578:	str	w8, [x22, #4]
  47457c:	ldr	w8, [x19, #308]
  474580:	sub	w8, w8, #0x1
  474584:	str	w8, [x19, #308]
  474588:	ldr	x8, [sp, #16]
  47458c:	ldr	w9, [sp, #32]
  474590:	str	x8, [x19, #296]
  474594:	cbnz	w9, 4720f4 <feof@plt+0x6e854>
  474598:	b	470b70 <feof@plt+0x6d2d0>
  47459c:	mov	x0, x19
  4745a0:	mov	x1, x21
  4745a4:	bl	476dcc <feof@plt+0x7352c>
  4745a8:	mov	w2, wzr
  4745ac:	cbz	x0, 4745d0 <feof@plt+0x70d30>
  4745b0:	ldr	w8, [x0]
  4745b4:	cmp	w8, #0x2f
  4745b8:	b.ne	4745d0 <feof@plt+0x70d30>  // b.any
  4745bc:	ldr	x8, [x0, #8]
  4745c0:	cbz	x8, 4745d0 <feof@plt+0x70d30>
  4745c4:	ldr	x0, [x0, #16]
  4745c8:	add	w2, w2, #0x1
  4745cc:	cbnz	x0, 4745b0 <feof@plt+0x70d10>
  4745d0:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  4745d4:	add	x1, x1, #0xadf
  4745d8:	add	x0, sp, #0x10
  4745dc:	bl	403340 <sprintf@plt>
  4745e0:	add	x0, sp, #0x10
  4745e4:	bl	4030b0 <strlen@plt>
  4745e8:	cbz	x0, 4720f4 <feof@plt+0x6e854>
  4745ec:	mov	x20, x0
  4745f0:	add	x21, sp, #0x10
  4745f4:	b	474614 <feof@plt+0x70d74>
  4745f8:	add	x9, x8, #0x1
  4745fc:	subs	x20, x20, #0x1
  474600:	add	x21, x21, #0x1
  474604:	str	x9, [x19, #256]
  474608:	strb	w22, [x19, x8]
  47460c:	strb	w22, [x19, #264]
  474610:	b.eq	4720f4 <feof@plt+0x6e854>  // b.none
  474614:	ldr	x8, [x19, #256]
  474618:	ldrb	w22, [x21]
  47461c:	cmp	x8, #0xff
  474620:	b.ne	4745f8 <feof@plt+0x70d58>  // b.any
  474624:	ldp	x8, x2, [x19, #272]
  474628:	mov	w1, #0xff                  	// #255
  47462c:	mov	x0, x19
  474630:	strb	wzr, [x19, #255]
  474634:	blr	x8
  474638:	ldr	x9, [x19, #320]
  47463c:	mov	x8, xzr
  474640:	str	xzr, [x19, #256]
  474644:	add	x9, x9, #0x1
  474648:	str	x9, [x19, #320]
  47464c:	b	4745f8 <feof@plt+0x70d58>
  474650:	ldr	w8, [x23]
  474654:	cmp	w8, #0x31
  474658:	b.hi	4751c4 <feof@plt+0x71924>  // b.pmore
  47465c:	mov	w9, #0x1                   	// #1
  474660:	lsl	x8, x9, x8
  474664:	mov	x9, #0x43                  	// #67
  474668:	movk	x9, #0x2, lsl #48
  47466c:	tst	x8, x9
  474670:	b.eq	4751c4 <feof@plt+0x71924>  // b.none
  474674:	ldr	w8, [x23, #4]
  474678:	cmp	w8, #0x1
  47467c:	b.gt	47468c <feof@plt+0x70dec>
  474680:	ldr	w9, [x19, #308]
  474684:	cmp	w9, #0x401
  474688:	b.lt	475230 <feof@plt+0x71990>  // b.tstop
  47468c:	mov	w8, #0x1                   	// #1
  474690:	str	w8, [x25]
  474694:	b	4758ac <feof@plt+0x7200c>
  474698:	ldr	x21, [x21, #16]
  47469c:	cbz	x21, 4746b8 <feof@plt+0x70e18>
  4746a0:	ldr	w8, [x21, #4]
  4746a4:	cmp	w8, #0x1
  4746a8:	b.gt	4746b8 <feof@plt+0x70e18>
  4746ac:	ldr	w9, [x19, #308]
  4746b0:	cmp	w9, #0x401
  4746b4:	b.lt	475364 <feof@plt+0x71ac4>  // b.tstop
  4746b8:	mov	w8, #0x1                   	// #1
  4746bc:	str	w8, [x25]
  4746c0:	ldr	x8, [x19, #256]
  4746c4:	cmp	x8, #0xff
  4746c8:	b.ne	4746f4 <feof@plt+0x70e54>  // b.any
  4746cc:	ldp	x8, x2, [x19, #272]
  4746d0:	mov	w1, #0xff                  	// #255
  4746d4:	mov	x0, x19
  4746d8:	strb	wzr, [x19, #255]
  4746dc:	blr	x8
  4746e0:	ldr	x9, [x19, #320]
  4746e4:	mov	x8, xzr
  4746e8:	str	xzr, [x19, #256]
  4746ec:	add	x9, x9, #0x1
  4746f0:	str	x9, [x19, #320]
  4746f4:	add	x9, x8, #0x1
  4746f8:	mov	w10, #0x5b                  	// #91
  4746fc:	str	x9, [x19, #256]
  474700:	strb	w10, [x19, x8]
  474704:	ldr	x8, [x19, #256]
  474708:	strb	w10, [x19, #264]
  47470c:	cmp	x8, #0xff
  474710:	b.ne	47473c <feof@plt+0x70e9c>  // b.any
  474714:	ldp	x8, x2, [x19, #272]
  474718:	mov	w1, #0xff                  	// #255
  47471c:	mov	x0, x19
  474720:	strb	wzr, [x19, #255]
  474724:	blr	x8
  474728:	ldr	x9, [x19, #320]
  47472c:	mov	x8, xzr
  474730:	str	xzr, [x19, #256]
  474734:	add	x9, x9, #0x1
  474738:	str	x9, [x19, #320]
  47473c:	add	x9, x8, #0x1
  474740:	mov	w10, #0x5d                  	// #93
  474744:	b	473690 <feof@plt+0x6fdf0>
  474748:	ldr	x8, [x19, #256]
  47474c:	cmp	x8, #0xff
  474750:	b.ne	47477c <feof@plt+0x70edc>  // b.any
  474754:	ldp	x8, x2, [x19, #272]
  474758:	mov	w1, #0xff                  	// #255
  47475c:	mov	x0, x19
  474760:	strb	wzr, [x19, #255]
  474764:	blr	x8
  474768:	ldr	x9, [x19, #320]
  47476c:	mov	x8, xzr
  474770:	str	xzr, [x19, #256]
  474774:	add	x9, x9, #0x1
  474778:	str	x9, [x19, #320]
  47477c:	add	x9, x8, #0x1
  474780:	mov	w10, #0x28                  	// #40
  474784:	str	x9, [x19, #256]
  474788:	strb	w10, [x19, x8]
  47478c:	strb	w10, [x19, #264]
  474790:	cbz	x21, 4747ac <feof@plt+0x70f0c>
  474794:	ldr	w8, [x21, #4]
  474798:	cmp	w8, #0x1
  47479c:	b.gt	4747ac <feof@plt+0x70f0c>
  4747a0:	ldr	w9, [x19, #308]
  4747a4:	cmp	w9, #0x401
  4747a8:	b.lt	475598 <feof@plt+0x71cf8>  // b.tstop
  4747ac:	mov	w8, #0x1                   	// #1
  4747b0:	str	w8, [x25]
  4747b4:	ldr	x8, [x19, #256]
  4747b8:	cmp	x8, #0xff
  4747bc:	b.ne	4747e8 <feof@plt+0x70f48>  // b.any
  4747c0:	ldp	x8, x2, [x19, #272]
  4747c4:	mov	w1, #0xff                  	// #255
  4747c8:	mov	x0, x19
  4747cc:	strb	wzr, [x19, #255]
  4747d0:	blr	x8
  4747d4:	ldr	x9, [x19, #320]
  4747d8:	mov	x8, xzr
  4747dc:	str	xzr, [x19, #256]
  4747e0:	add	x9, x9, #0x1
  4747e4:	str	x9, [x19, #320]
  4747e8:	add	x9, x8, #0x1
  4747ec:	mov	w10, #0x29                  	// #41
  4747f0:	str	x9, [x19, #256]
  4747f4:	strb	w10, [x19, x8]
  4747f8:	strb	w10, [x19, #264]
  4747fc:	b	474ca8 <feof@plt+0x71408>
  474800:	cbnz	w8, 4720ec <feof@plt+0x6e84c>
  474804:	ldr	x21, [x21, #8]
  474808:	cbz	x21, 4720ec <feof@plt+0x6e84c>
  47480c:	ldr	w8, [x21]
  474810:	cmp	w8, #0x2f
  474814:	b.ne	475290 <feof@plt+0x719f0>  // b.any
  474818:	ldr	w8, [x19, #316]
  47481c:	tbnz	w8, #31, 475290 <feof@plt+0x719f0>
  474820:	subs	w9, w8, #0x1
  474824:	b.lt	475284 <feof@plt+0x719e4>  // b.tstop
  474828:	ldr	x21, [x21, #16]
  47482c:	cbz	x21, 4720ec <feof@plt+0x6e84c>
  474830:	ldr	w8, [x21]
  474834:	cmp	w8, #0x2f
  474838:	mov	w8, w9
  47483c:	b.eq	474820 <feof@plt+0x70f80>  // b.none
  474840:	b	4720ec <feof@plt+0x6e84c>
  474844:	add	w8, w8, #0x1
  474848:	str	w8, [x22, #4]
  47484c:	ldr	x8, [x19, #328]
  474850:	add	w9, w9, #0x1
  474854:	str	w9, [x19, #308]
  474858:	add	x9, sp, #0x10
  47485c:	mov	x0, x19
  474860:	mov	w1, w20
  474864:	mov	x2, x22
  474868:	stp	x22, x8, [sp, #16]
  47486c:	str	x9, [x19, #328]
  474870:	bl	46f9e8 <feof@plt+0x6c148>
  474874:	ldr	x8, [sp, #24]
  474878:	str	x8, [x19, #328]
  47487c:	ldr	w8, [x22, #4]
  474880:	sub	w8, w8, #0x1
  474884:	str	w8, [x22, #4]
  474888:	ldr	w8, [x19, #308]
  47488c:	sub	w8, w8, #0x1
  474890:	str	w8, [x19, #308]
  474894:	ldr	x8, [x19, #256]
  474898:	cmp	x8, #0xff
  47489c:	b.ne	4748c8 <feof@plt+0x71028>  // b.any
  4748a0:	ldp	x8, x2, [x19, #272]
  4748a4:	mov	w1, #0xff                  	// #255
  4748a8:	mov	x0, x19
  4748ac:	strb	wzr, [x19, #255]
  4748b0:	blr	x8
  4748b4:	ldr	x9, [x19, #320]
  4748b8:	mov	x8, xzr
  4748bc:	str	xzr, [x19, #256]
  4748c0:	add	x9, x9, #0x1
  4748c4:	str	x9, [x19, #320]
  4748c8:	add	x9, x8, #0x1
  4748cc:	mov	w10, #0x3c                  	// #60
  4748d0:	str	x9, [x19, #256]
  4748d4:	strb	w10, [x19, x8]
  4748d8:	strb	w10, [x19, #264]
  4748dc:	ldr	x8, [x21, #16]
  4748e0:	ldr	x22, [x8, #8]
  4748e4:	cbz	x22, 474900 <feof@plt+0x71060>
  4748e8:	ldr	w8, [x22, #4]
  4748ec:	cmp	w8, #0x1
  4748f0:	b.gt	474900 <feof@plt+0x71060>
  4748f4:	ldr	w9, [x19, #308]
  4748f8:	cmp	w9, #0x401
  4748fc:	b.lt	4749f8 <feof@plt+0x71158>  // b.tstop
  474900:	mov	w8, #0x1                   	// #1
  474904:	str	w8, [x25]
  474908:	ldr	x8, [x19, #256]
  47490c:	cmp	x8, #0xff
  474910:	b.ne	47493c <feof@plt+0x7109c>  // b.any
  474914:	ldp	x8, x2, [x19, #272]
  474918:	mov	w1, #0xff                  	// #255
  47491c:	mov	x0, x19
  474920:	strb	wzr, [x19, #255]
  474924:	blr	x8
  474928:	ldr	x9, [x19, #320]
  47492c:	mov	x8, xzr
  474930:	str	xzr, [x19, #256]
  474934:	add	x9, x9, #0x1
  474938:	str	x9, [x19, #320]
  47493c:	add	x9, x8, #0x1
  474940:	mov	w10, #0x3e                  	// #62
  474944:	str	x9, [x19, #256]
  474948:	strb	w10, [x19, x8]
  47494c:	ldr	x8, [x19, #256]
  474950:	strb	w10, [x19, #264]
  474954:	cmp	x8, #0xff
  474958:	b.ne	474984 <feof@plt+0x710e4>  // b.any
  47495c:	ldp	x8, x2, [x19, #272]
  474960:	mov	w1, #0xff                  	// #255
  474964:	mov	x0, x19
  474968:	strb	wzr, [x19, #255]
  47496c:	blr	x8
  474970:	ldr	x9, [x19, #320]
  474974:	mov	x8, xzr
  474978:	str	xzr, [x19, #256]
  47497c:	add	x9, x9, #0x1
  474980:	str	x9, [x19, #320]
  474984:	add	x9, x8, #0x1
  474988:	mov	w10, #0x28                  	// #40
  47498c:	str	x9, [x19, #256]
  474990:	strb	w10, [x19, x8]
  474994:	strb	w10, [x19, #264]
  474998:	ldr	x8, [x21, #16]
  47499c:	ldr	x21, [x8, #16]
  4749a0:	cbnz	x21, 4723ac <feof@plt+0x6eb0c>
  4749a4:	mov	w8, #0x1                   	// #1
  4749a8:	str	w8, [x25]
  4749ac:	ldr	x8, [x19, #256]
  4749b0:	cmp	x8, #0xff
  4749b4:	b.ne	4749e0 <feof@plt+0x71140>  // b.any
  4749b8:	ldp	x8, x2, [x19, #272]
  4749bc:	mov	w1, #0xff                  	// #255
  4749c0:	mov	x0, x19
  4749c4:	strb	wzr, [x19, #255]
  4749c8:	blr	x8
  4749cc:	ldr	x9, [x19, #320]
  4749d0:	mov	x8, xzr
  4749d4:	str	xzr, [x19, #256]
  4749d8:	add	x9, x9, #0x1
  4749dc:	str	x9, [x19, #320]
  4749e0:	add	x9, x8, #0x1
  4749e4:	mov	w10, #0x29                  	// #41
  4749e8:	str	x9, [x19, #256]
  4749ec:	strb	w10, [x19, x8]
  4749f0:	strb	w10, [x19, #264]
  4749f4:	b	4720f4 <feof@plt+0x6e854>
  4749f8:	add	w8, w8, #0x1
  4749fc:	str	w8, [x22, #4]
  474a00:	ldr	x8, [x19, #328]
  474a04:	add	w9, w9, #0x1
  474a08:	str	w9, [x19, #308]
  474a0c:	add	x9, sp, #0x10
  474a10:	mov	x0, x19
  474a14:	mov	w1, w20
  474a18:	mov	x2, x22
  474a1c:	stp	x22, x8, [sp, #16]
  474a20:	str	x9, [x19, #328]
  474a24:	bl	46f9e8 <feof@plt+0x6c148>
  474a28:	ldr	x8, [sp, #24]
  474a2c:	str	x8, [x19, #328]
  474a30:	ldr	w8, [x22, #4]
  474a34:	sub	w8, w8, #0x1
  474a38:	str	w8, [x22, #4]
  474a3c:	ldr	w8, [x19, #308]
  474a40:	sub	w8, w8, #0x1
  474a44:	str	w8, [x19, #308]
  474a48:	b	474908 <feof@plt+0x71068>
  474a4c:	mov	w20, wzr
  474a50:	cbz	x21, 474ac8 <feof@plt+0x71228>
  474a54:	cmp	w26, #0x2f
  474a58:	b.ne	474ac8 <feof@plt+0x71228>  // b.any
  474a5c:	mov	w20, wzr
  474a60:	ldr	x8, [x21, #8]
  474a64:	cbz	x8, 474ac8 <feof@plt+0x71228>
  474a68:	ldr	w9, [x8]
  474a6c:	cmp	w9, #0x4b
  474a70:	b.ne	474aac <feof@plt+0x7120c>  // b.any
  474a74:	ldr	x1, [x8, #8]
  474a78:	mov	x0, x19
  474a7c:	bl	476dcc <feof@plt+0x7352c>
  474a80:	mov	w8, wzr
  474a84:	cbz	x0, 474ab0 <feof@plt+0x71210>
  474a88:	ldr	w9, [x0]
  474a8c:	cmp	w9, #0x2f
  474a90:	b.ne	474ab0 <feof@plt+0x71210>  // b.any
  474a94:	ldr	x9, [x0, #8]
  474a98:	cbz	x9, 474ab0 <feof@plt+0x71210>
  474a9c:	ldr	x0, [x0, #16]
  474aa0:	add	w8, w8, #0x1
  474aa4:	cbnz	x0, 474a88 <feof@plt+0x711e8>
  474aa8:	b	474ab0 <feof@plt+0x71210>
  474aac:	mov	w8, #0x1                   	// #1
  474ab0:	ldr	x21, [x21, #16]
  474ab4:	add	w20, w8, w20
  474ab8:	cbz	x21, 474ac8 <feof@plt+0x71228>
  474abc:	ldr	w8, [x21]
  474ac0:	cmp	w8, #0x2f
  474ac4:	b.eq	474a60 <feof@plt+0x711c0>  // b.none
  474ac8:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  474acc:	add	x1, x1, #0xadf
  474ad0:	add	x0, sp, #0x10
  474ad4:	mov	w2, w20
  474ad8:	bl	403340 <sprintf@plt>
  474adc:	add	x0, sp, #0x10
  474ae0:	bl	4030b0 <strlen@plt>
  474ae4:	cbz	x0, 4720f4 <feof@plt+0x6e854>
  474ae8:	mov	x20, x0
  474aec:	add	x21, sp, #0x10
  474af0:	b	474b10 <feof@plt+0x71270>
  474af4:	add	x9, x8, #0x1
  474af8:	subs	x20, x20, #0x1
  474afc:	add	x21, x21, #0x1
  474b00:	str	x9, [x19, #256]
  474b04:	strb	w22, [x19, x8]
  474b08:	strb	w22, [x19, #264]
  474b0c:	b.eq	4720f4 <feof@plt+0x6e854>  // b.none
  474b10:	ldr	x8, [x19, #256]
  474b14:	ldrb	w22, [x21]
  474b18:	cmp	x8, #0xff
  474b1c:	b.ne	474af4 <feof@plt+0x71254>  // b.any
  474b20:	ldp	x8, x2, [x19, #272]
  474b24:	mov	w1, #0xff                  	// #255
  474b28:	mov	x0, x19
  474b2c:	strb	wzr, [x19, #255]
  474b30:	blr	x8
  474b34:	ldr	x9, [x19, #320]
  474b38:	mov	x8, xzr
  474b3c:	str	xzr, [x19, #256]
  474b40:	add	x9, x9, #0x1
  474b44:	str	x9, [x19, #320]
  474b48:	b	474af4 <feof@plt+0x71254>
  474b4c:	ldr	x8, [x19, #256]
  474b50:	cmp	x8, #0xff
  474b54:	b.ne	474b80 <feof@plt+0x712e0>  // b.any
  474b58:	ldp	x8, x2, [x19, #272]
  474b5c:	mov	w1, #0xff                  	// #255
  474b60:	mov	x0, x19
  474b64:	strb	wzr, [x19, #255]
  474b68:	blr	x8
  474b6c:	ldr	x9, [x19, #320]
  474b70:	mov	x8, xzr
  474b74:	str	xzr, [x19, #256]
  474b78:	add	x9, x9, #0x1
  474b7c:	str	x9, [x19, #320]
  474b80:	add	x9, x8, #0x1
  474b84:	mov	w10, #0x28                  	// #40
  474b88:	str	x9, [x19, #256]
  474b8c:	strb	w10, [x19, x8]
  474b90:	strb	w10, [x19, #264]
  474b94:	cbz	x22, 474bb0 <feof@plt+0x71310>
  474b98:	ldr	w8, [x22, #4]
  474b9c:	cmp	w8, #0x1
  474ba0:	b.gt	474bb0 <feof@plt+0x71310>
  474ba4:	ldr	w9, [x19, #308]
  474ba8:	cmp	w9, #0x401
  474bac:	b.lt	475604 <feof@plt+0x71d64>  // b.tstop
  474bb0:	mov	w8, #0x1                   	// #1
  474bb4:	str	w8, [x25]
  474bb8:	ldr	x8, [x19, #256]
  474bbc:	cmp	x8, #0xff
  474bc0:	b.ne	474bec <feof@plt+0x7134c>  // b.any
  474bc4:	ldp	x8, x2, [x19, #272]
  474bc8:	mov	w1, #0xff                  	// #255
  474bcc:	mov	x0, x19
  474bd0:	strb	wzr, [x19, #255]
  474bd4:	blr	x8
  474bd8:	ldr	x9, [x19, #320]
  474bdc:	mov	x8, xzr
  474be0:	str	xzr, [x19, #256]
  474be4:	add	x9, x9, #0x1
  474be8:	str	x9, [x19, #320]
  474bec:	add	x9, x8, #0x1
  474bf0:	mov	w10, #0x29                  	// #41
  474bf4:	str	x9, [x19, #256]
  474bf8:	strb	w10, [x19, x8]
  474bfc:	strb	w10, [x19, #264]
  474c00:	b	474e18 <feof@plt+0x71578>
  474c04:	add	w8, w8, #0x1
  474c08:	str	w8, [x21, #4]
  474c0c:	ldr	x8, [x19, #328]
  474c10:	add	w9, w9, #0x1
  474c14:	str	w9, [x19, #308]
  474c18:	sub	x9, x29, #0x10
  474c1c:	mov	x0, x19
  474c20:	mov	w1, w20
  474c24:	mov	x2, x21
  474c28:	stp	x21, x8, [x29, #-16]
  474c2c:	str	x9, [x19, #328]
  474c30:	bl	46f9e8 <feof@plt+0x6c148>
  474c34:	ldur	x8, [x29, #-8]
  474c38:	str	x8, [x19, #328]
  474c3c:	ldr	w8, [x21, #4]
  474c40:	sub	w8, w8, #0x1
  474c44:	str	w8, [x21, #4]
  474c48:	ldr	w8, [x19, #308]
  474c4c:	sub	w8, w8, #0x1
  474c50:	str	w8, [x19, #308]
  474c54:	b	473c88 <feof@plt+0x703e8>
  474c58:	add	w8, w8, #0x1
  474c5c:	str	w8, [x21, #4]
  474c60:	ldr	x8, [x19, #328]
  474c64:	add	w9, w9, #0x1
  474c68:	str	w9, [x19, #308]
  474c6c:	add	x9, sp, #0x10
  474c70:	mov	x0, x19
  474c74:	mov	w1, w20
  474c78:	mov	x2, x21
  474c7c:	stp	x21, x8, [sp, #16]
  474c80:	str	x9, [x19, #328]
  474c84:	bl	46f9e8 <feof@plt+0x6c148>
  474c88:	ldr	x8, [sp, #24]
  474c8c:	str	x8, [x19, #328]
  474c90:	ldr	w8, [x21, #4]
  474c94:	sub	w8, w8, #0x1
  474c98:	str	w8, [x21, #4]
  474c9c:	ldr	w8, [x19, #308]
  474ca0:	sub	w8, w8, #0x1
  474ca4:	str	w8, [x19, #308]
  474ca8:	ldr	w8, [x22]
  474cac:	cmp	w8, #0x32
  474cb0:	b.ne	474d20 <feof@plt+0x71480>  // b.any
  474cb4:	ldr	x8, [x22, #8]
  474cb8:	ldrsw	x20, [x8, #16]
  474cbc:	cbz	w20, 4720f4 <feof@plt+0x6e854>
  474cc0:	ldr	x21, [x8, #8]
  474cc4:	b	474ce4 <feof@plt+0x71444>
  474cc8:	add	x9, x8, #0x1
  474ccc:	subs	x20, x20, #0x1
  474cd0:	add	x21, x21, #0x1
  474cd4:	str	x9, [x19, #256]
  474cd8:	strb	w22, [x19, x8]
  474cdc:	strb	w22, [x19, #264]
  474ce0:	b.eq	4720f4 <feof@plt+0x6e854>  // b.none
  474ce4:	ldr	x8, [x19, #256]
  474ce8:	ldrb	w22, [x21]
  474cec:	cmp	x8, #0xff
  474cf0:	b.ne	474cc8 <feof@plt+0x71428>  // b.any
  474cf4:	ldp	x8, x2, [x19, #272]
  474cf8:	mov	w1, #0xff                  	// #255
  474cfc:	mov	x0, x19
  474d00:	strb	wzr, [x19, #255]
  474d04:	blr	x8
  474d08:	ldr	x9, [x19, #320]
  474d0c:	mov	x8, xzr
  474d10:	str	xzr, [x19, #256]
  474d14:	add	x9, x9, #0x1
  474d18:	str	x9, [x19, #320]
  474d1c:	b	474cc8 <feof@plt+0x71428>
  474d20:	ldr	w8, [x22, #4]
  474d24:	cmp	w8, #0x1
  474d28:	b.gt	4720ec <feof@plt+0x6e84c>
  474d2c:	ldr	w9, [x19, #308]
  474d30:	cmp	w9, #0x401
  474d34:	b.ge	4720ec <feof@plt+0x6e84c>  // b.tcont
  474d38:	add	w8, w8, #0x1
  474d3c:	str	w8, [x22, #4]
  474d40:	ldr	x8, [x19, #328]
  474d44:	add	w9, w9, #0x1
  474d48:	str	w9, [x19, #308]
  474d4c:	add	x9, sp, #0x10
  474d50:	mov	x0, x19
  474d54:	mov	w1, w20
  474d58:	mov	x2, x22
  474d5c:	stp	x22, x8, [sp, #16]
  474d60:	str	x9, [x19, #328]
  474d64:	bl	46f9e8 <feof@plt+0x6c148>
  474d68:	ldr	x8, [sp, #24]
  474d6c:	str	x8, [x19, #328]
  474d70:	ldr	w8, [x22, #4]
  474d74:	sub	w8, w8, #0x1
  474d78:	str	w8, [x22, #4]
  474d7c:	b	47215c <feof@plt+0x6e8bc>
  474d80:	cbnz	w10, 4755f8 <feof@plt+0x71d58>
  474d84:	ldr	x9, [x9, #8]
  474d88:	cbz	x9, 4755f8 <feof@plt+0x71d58>
  474d8c:	ldr	w10, [x9]
  474d90:	cmp	w10, #0x2f
  474d94:	b.ne	46fe84 <feof@plt+0x6c5e4>  // b.any
  474d98:	ldr	w10, [x19, #316]
  474d9c:	tbnz	w10, #31, 46fe84 <feof@plt+0x6c5e4>
  474da0:	subs	w11, w10, #0x1
  474da4:	b.lt	4755ec <feof@plt+0x71d4c>  // b.tstop
  474da8:	ldr	x9, [x9, #16]
  474dac:	cbz	x9, 4755f8 <feof@plt+0x71d58>
  474db0:	ldr	w10, [x9]
  474db4:	cmp	w10, #0x2f
  474db8:	mov	w10, w11
  474dbc:	b.eq	474da0 <feof@plt+0x71500>  // b.none
  474dc0:	b	4755f8 <feof@plt+0x71d58>
  474dc4:	add	w8, w8, #0x1
  474dc8:	add	w9, w9, #0x1
  474dcc:	str	w8, [x22, #4]
  474dd0:	str	w9, [x19, #308]
  474dd4:	str	x22, [sp, #16]
  474dd8:	ldr	x8, [x19, #328]
  474ddc:	add	x9, sp, #0x10
  474de0:	mov	x0, x19
  474de4:	mov	w1, w20
  474de8:	mov	x2, x22
  474dec:	str	x8, [sp, #24]
  474df0:	str	x9, [x19, #328]
  474df4:	bl	46f9e8 <feof@plt+0x6c148>
  474df8:	ldr	x8, [sp, #24]
  474dfc:	str	x8, [x19, #328]
  474e00:	ldr	w8, [x22, #4]
  474e04:	sub	w8, w8, #0x1
  474e08:	str	w8, [x22, #4]
  474e0c:	ldr	w8, [x19, #308]
  474e10:	sub	w8, w8, #0x1
  474e14:	str	w8, [x19, #308]
  474e18:	ldr	x22, [x21, #8]
  474e1c:	adrp	x1, 4b3000 <_obstack_memory_used@@Base+0x372fc>
  474e20:	add	x1, x1, #0xf4e
  474e24:	ldr	x24, [x22, #8]
  474e28:	ldr	x23, [x24]
  474e2c:	mov	x0, x23
  474e30:	bl	403640 <strcmp@plt>
  474e34:	cbz	w0, 474ec0 <feof@plt+0x71620>
  474e38:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  474e3c:	add	x1, x1, #0x9b8
  474e40:	mov	x0, x23
  474e44:	bl	403640 <strcmp@plt>
  474e48:	cbz	w0, 475408 <feof@plt+0x71b68>
  474e4c:	ldr	w8, [x22]
  474e50:	cmp	w8, #0x32
  474e54:	b.ne	474f74 <feof@plt+0x716d4>  // b.any
  474e58:	ldrsw	x22, [x24, #16]
  474e5c:	cbz	w22, 475408 <feof@plt+0x71b68>
  474e60:	ldr	x23, [x24, #8]
  474e64:	b	474e84 <feof@plt+0x715e4>
  474e68:	add	x9, x8, #0x1
  474e6c:	subs	x22, x22, #0x1
  474e70:	add	x23, x23, #0x1
  474e74:	str	x9, [x19, #256]
  474e78:	strb	w24, [x19, x8]
  474e7c:	strb	w24, [x19, #264]
  474e80:	b.eq	475408 <feof@plt+0x71b68>  // b.none
  474e84:	ldr	x8, [x19, #256]
  474e88:	ldrb	w24, [x23]
  474e8c:	cmp	x8, #0xff
  474e90:	b.ne	474e68 <feof@plt+0x715c8>  // b.any
  474e94:	ldp	x8, x2, [x19, #272]
  474e98:	mov	w1, #0xff                  	// #255
  474e9c:	mov	x0, x19
  474ea0:	strb	wzr, [x19, #255]
  474ea4:	blr	x8
  474ea8:	ldr	x9, [x19, #320]
  474eac:	mov	x8, xzr
  474eb0:	str	xzr, [x19, #256]
  474eb4:	add	x9, x9, #0x1
  474eb8:	str	x9, [x19, #320]
  474ebc:	b	474e68 <feof@plt+0x715c8>
  474ec0:	ldr	x8, [x19, #256]
  474ec4:	cmp	x8, #0xff
  474ec8:	b.ne	474ef4 <feof@plt+0x71654>  // b.any
  474ecc:	ldp	x8, x2, [x19, #272]
  474ed0:	mov	w1, #0xff                  	// #255
  474ed4:	mov	x0, x19
  474ed8:	strb	wzr, [x19, #255]
  474edc:	blr	x8
  474ee0:	ldr	x9, [x19, #320]
  474ee4:	mov	x8, xzr
  474ee8:	str	xzr, [x19, #256]
  474eec:	add	x9, x9, #0x1
  474ef0:	str	x9, [x19, #320]
  474ef4:	add	x9, x8, #0x1
  474ef8:	mov	w10, #0x5b                  	// #91
  474efc:	str	x9, [x19, #256]
  474f00:	strb	w10, [x19, x8]
  474f04:	strb	w10, [x19, #264]
  474f08:	ldr	x8, [x21, #16]
  474f0c:	ldr	x22, [x8, #16]
  474f10:	cbz	x22, 474f2c <feof@plt+0x7168c>
  474f14:	ldr	w8, [x22, #4]
  474f18:	cmp	w8, #0x1
  474f1c:	b.gt	474f2c <feof@plt+0x7168c>
  474f20:	ldr	w9, [x19, #308]
  474f24:	cmp	w9, #0x401
  474f28:	b.lt	475310 <feof@plt+0x71a70>  // b.tstop
  474f2c:	mov	w8, #0x1                   	// #1
  474f30:	str	w8, [x25]
  474f34:	ldr	x8, [x19, #256]
  474f38:	cmp	x8, #0xff
  474f3c:	b.ne	474f68 <feof@plt+0x716c8>  // b.any
  474f40:	ldp	x8, x2, [x19, #272]
  474f44:	mov	w1, #0xff                  	// #255
  474f48:	mov	x0, x19
  474f4c:	strb	wzr, [x19, #255]
  474f50:	blr	x8
  474f54:	ldr	x9, [x19, #320]
  474f58:	mov	x8, xzr
  474f5c:	str	xzr, [x19, #256]
  474f60:	add	x9, x9, #0x1
  474f64:	str	x9, [x19, #320]
  474f68:	add	x9, x8, #0x1
  474f6c:	mov	w10, #0x5d                  	// #93
  474f70:	b	475504 <feof@plt+0x71c64>
  474f74:	ldr	w8, [x22, #4]
  474f78:	cmp	w8, #0x1
  474f7c:	b.gt	474f8c <feof@plt+0x716ec>
  474f80:	ldr	w9, [x19, #308]
  474f84:	cmp	w9, #0x401
  474f88:	b.lt	4753b8 <feof@plt+0x71b18>  // b.tstop
  474f8c:	mov	w8, #0x1                   	// #1
  474f90:	str	w8, [x25]
  474f94:	b	475408 <feof@plt+0x71b68>
  474f98:	add	w8, w8, #0x1
  474f9c:	str	w8, [x21, #4]
  474fa0:	ldr	x8, [x19, #328]
  474fa4:	add	w9, w9, #0x1
  474fa8:	str	w9, [x19, #308]
  474fac:	add	x9, sp, #0x10
  474fb0:	mov	x0, x19
  474fb4:	mov	w1, w20
  474fb8:	mov	x2, x21
  474fbc:	stp	x21, x8, [sp, #16]
  474fc0:	str	x9, [x19, #328]
  474fc4:	bl	46f9e8 <feof@plt+0x6c148>
  474fc8:	ldr	x8, [sp, #24]
  474fcc:	str	x8, [x19, #328]
  474fd0:	ldr	w8, [x21, #4]
  474fd4:	sub	w8, w8, #0x1
  474fd8:	str	w8, [x21, #4]
  474fdc:	ldr	w8, [x19, #308]
  474fe0:	sub	w8, w8, #0x1
  474fe4:	str	w8, [x19, #308]
  474fe8:	b	473f9c <feof@plt+0x706fc>
  474fec:	ldr	x8, [x19, #256]
  474ff0:	cmp	x8, #0xff
  474ff4:	b.ne	475020 <feof@plt+0x71780>  // b.any
  474ff8:	ldp	x8, x2, [x19, #272]
  474ffc:	mov	w1, #0xff                  	// #255
  475000:	mov	x0, x19
  475004:	strb	wzr, [x19, #255]
  475008:	blr	x8
  47500c:	ldr	x9, [x19, #320]
  475010:	mov	x8, xzr
  475014:	str	xzr, [x19, #256]
  475018:	add	x9, x9, #0x1
  47501c:	str	x9, [x19, #320]
  475020:	add	x9, x8, #0x1
  475024:	mov	w10, #0x74                  	// #116
  475028:	str	x9, [x19, #256]
  47502c:	strb	w10, [x19, x8]
  475030:	ldr	x8, [x19, #256]
  475034:	strb	w10, [x19, #264]
  475038:	cmp	x8, #0xff
  47503c:	b.ne	475068 <feof@plt+0x717c8>  // b.any
  475040:	ldp	x8, x2, [x19, #272]
  475044:	mov	w1, #0xff                  	// #255
  475048:	mov	x0, x19
  47504c:	strb	wzr, [x19, #255]
  475050:	blr	x8
  475054:	ldr	x9, [x19, #320]
  475058:	mov	x8, xzr
  47505c:	str	xzr, [x19, #256]
  475060:	add	x9, x9, #0x1
  475064:	str	x9, [x19, #320]
  475068:	add	x9, x8, #0x1
  47506c:	mov	w10, #0x72                  	// #114
  475070:	str	x9, [x19, #256]
  475074:	strb	w10, [x19, x8]
  475078:	ldr	x8, [x19, #256]
  47507c:	strb	w10, [x19, #264]
  475080:	cmp	x8, #0xff
  475084:	b.ne	4750b0 <feof@plt+0x71810>  // b.any
  475088:	ldp	x8, x2, [x19, #272]
  47508c:	mov	w1, #0xff                  	// #255
  475090:	mov	x0, x19
  475094:	strb	wzr, [x19, #255]
  475098:	blr	x8
  47509c:	ldr	x9, [x19, #320]
  4750a0:	mov	x8, xzr
  4750a4:	str	xzr, [x19, #256]
  4750a8:	add	x9, x9, #0x1
  4750ac:	str	x9, [x19, #320]
  4750b0:	add	x9, x8, #0x1
  4750b4:	mov	w10, #0x75                  	// #117
  4750b8:	str	x9, [x19, #256]
  4750bc:	strb	w10, [x19, x8]
  4750c0:	ldr	x8, [x19, #256]
  4750c4:	strb	w10, [x19, #264]
  4750c8:	cmp	x8, #0xff
  4750cc:	b.ne	4750f8 <feof@plt+0x71858>  // b.any
  4750d0:	ldp	x8, x2, [x19, #272]
  4750d4:	mov	w1, #0xff                  	// #255
  4750d8:	mov	x0, x19
  4750dc:	strb	wzr, [x19, #255]
  4750e0:	blr	x8
  4750e4:	ldr	x9, [x19, #320]
  4750e8:	mov	x8, xzr
  4750ec:	str	xzr, [x19, #256]
  4750f0:	add	x9, x9, #0x1
  4750f4:	str	x9, [x19, #320]
  4750f8:	add	x9, x8, #0x1
  4750fc:	mov	w10, #0x65                  	// #101
  475100:	b	4749e8 <feof@plt+0x71148>
  475104:	ldr	x8, [x19, #256]
  475108:	cmp	x8, #0xff
  47510c:	b.ne	475138 <feof@plt+0x71898>  // b.any
  475110:	ldp	x8, x2, [x19, #272]
  475114:	mov	w1, #0xff                  	// #255
  475118:	mov	x0, x19
  47511c:	strb	wzr, [x19, #255]
  475120:	blr	x8
  475124:	ldr	x9, [x19, #320]
  475128:	mov	x8, xzr
  47512c:	str	xzr, [x19, #256]
  475130:	add	x9, x9, #0x1
  475134:	str	x9, [x19, #320]
  475138:	add	x9, x8, #0x1
  47513c:	mov	w10, #0x28                  	// #40
  475140:	str	x9, [x19, #256]
  475144:	strb	w10, [x19, x8]
  475148:	strb	w10, [x19, #264]
  47514c:	ldr	w8, [x23, #4]
  475150:	cmp	w8, #0x1
  475154:	b.gt	475164 <feof@plt+0x718c4>
  475158:	ldr	w9, [x19, #308]
  47515c:	cmp	w9, #0x401
  475160:	b.lt	4756b0 <feof@plt+0x71e10>  // b.tstop
  475164:	mov	w8, #0x1                   	// #1
  475168:	str	w8, [x25]
  47516c:	b	475700 <feof@plt+0x71e60>
  475170:	add	w8, w8, #0x1
  475174:	str	w8, [x23, #4]
  475178:	ldr	x8, [x19, #328]
  47517c:	add	w9, w9, #0x1
  475180:	str	w9, [x19, #308]
  475184:	add	x9, sp, #0x10
  475188:	mov	x0, x19
  47518c:	mov	w1, w20
  475190:	mov	x2, x23
  475194:	stp	x23, x8, [sp, #16]
  475198:	str	x9, [x19, #328]
  47519c:	bl	46f9e8 <feof@plt+0x6c148>
  4751a0:	ldr	x8, [sp, #24]
  4751a4:	str	x8, [x19, #328]
  4751a8:	ldr	w8, [x23, #4]
  4751ac:	sub	w8, w8, #0x1
  4751b0:	str	w8, [x23, #4]
  4751b4:	ldr	w8, [x19, #308]
  4751b8:	sub	w8, w8, #0x1
  4751bc:	str	w8, [x19, #308]
  4751c0:	b	475748 <feof@plt+0x71ea8>
  4751c4:	ldr	x8, [x19, #256]
  4751c8:	cmp	x8, #0xff
  4751cc:	b.ne	4751f8 <feof@plt+0x71958>  // b.any
  4751d0:	ldp	x8, x2, [x19, #272]
  4751d4:	mov	w1, #0xff                  	// #255
  4751d8:	mov	x0, x19
  4751dc:	strb	wzr, [x19, #255]
  4751e0:	blr	x8
  4751e4:	ldr	x9, [x19, #320]
  4751e8:	mov	x8, xzr
  4751ec:	str	xzr, [x19, #256]
  4751f0:	add	x9, x9, #0x1
  4751f4:	str	x9, [x19, #320]
  4751f8:	add	x9, x8, #0x1
  4751fc:	mov	w10, #0x28                  	// #40
  475200:	str	x9, [x19, #256]
  475204:	strb	w10, [x19, x8]
  475208:	strb	w10, [x19, #264]
  47520c:	ldr	w8, [x23, #4]
  475210:	cmp	w8, #0x1
  475214:	b.gt	475224 <feof@plt+0x71984>
  475218:	ldr	w9, [x19, #308]
  47521c:	cmp	w9, #0x401
  475220:	b.lt	475814 <feof@plt+0x71f74>  // b.tstop
  475224:	mov	w8, #0x1                   	// #1
  475228:	str	w8, [x25]
  47522c:	b	475864 <feof@plt+0x71fc4>
  475230:	add	w8, w8, #0x1
  475234:	str	w8, [x23, #4]
  475238:	ldr	x8, [x19, #328]
  47523c:	add	w9, w9, #0x1
  475240:	str	w9, [x19, #308]
  475244:	add	x9, sp, #0x10
  475248:	mov	x0, x19
  47524c:	mov	w1, w20
  475250:	mov	x2, x23
  475254:	stp	x23, x8, [sp, #16]
  475258:	str	x9, [x19, #328]
  47525c:	bl	46f9e8 <feof@plt+0x6c148>
  475260:	ldr	x8, [sp, #24]
  475264:	str	x8, [x19, #328]
  475268:	ldr	w8, [x23, #4]
  47526c:	sub	w8, w8, #0x1
  475270:	str	w8, [x23, #4]
  475274:	ldr	w8, [x19, #308]
  475278:	sub	w8, w8, #0x1
  47527c:	str	w8, [x19, #308]
  475280:	b	4758ac <feof@plt+0x7200c>
  475284:	cbnz	w8, 4720ec <feof@plt+0x6e84c>
  475288:	ldr	x21, [x21, #8]
  47528c:	cbz	x21, 4720ec <feof@plt+0x6e84c>
  475290:	ldr	x8, [x22]
  475294:	str	x8, [x19, #288]
  475298:	ldr	w8, [x21, #4]
  47529c:	cmp	w8, #0x1
  4752a0:	b.gt	4752b0 <feof@plt+0x71a10>
  4752a4:	ldr	w9, [x19, #308]
  4752a8:	cmp	w9, #0x401
  4752ac:	b.lt	4752c0 <feof@plt+0x71a20>  // b.tstop
  4752b0:	mov	w8, #0x1                   	// #1
  4752b4:	str	w8, [x25]
  4752b8:	str	x22, [x19, #288]
  4752bc:	b	4720f4 <feof@plt+0x6e854>
  4752c0:	add	w8, w8, #0x1
  4752c4:	str	w8, [x21, #4]
  4752c8:	ldr	x8, [x19, #328]
  4752cc:	add	w9, w9, #0x1
  4752d0:	str	w9, [x19, #308]
  4752d4:	add	x9, sp, #0x10
  4752d8:	mov	x0, x19
  4752dc:	mov	w1, w20
  4752e0:	mov	x2, x21
  4752e4:	stp	x21, x8, [sp, #16]
  4752e8:	str	x9, [x19, #328]
  4752ec:	bl	46f9e8 <feof@plt+0x6c148>
  4752f0:	ldr	x8, [sp, #24]
  4752f4:	str	x8, [x19, #328]
  4752f8:	ldr	w8, [x21, #4]
  4752fc:	sub	w8, w8, #0x1
  475300:	str	w8, [x21, #4]
  475304:	ldr	w8, [x19, #308]
  475308:	str	x22, [x19, #288]
  47530c:	b	472160 <feof@plt+0x6e8c0>
  475310:	add	w8, w8, #0x1
  475314:	str	w8, [x22, #4]
  475318:	ldr	x8, [x19, #328]
  47531c:	add	w9, w9, #0x1
  475320:	str	w9, [x19, #308]
  475324:	add	x9, sp, #0x10
  475328:	mov	x0, x19
  47532c:	mov	w1, w20
  475330:	mov	x2, x22
  475334:	stp	x22, x8, [sp, #16]
  475338:	str	x9, [x19, #328]
  47533c:	bl	46f9e8 <feof@plt+0x6c148>
  475340:	ldr	x8, [sp, #24]
  475344:	str	x8, [x19, #328]
  475348:	ldr	w8, [x22, #4]
  47534c:	sub	w8, w8, #0x1
  475350:	str	w8, [x22, #4]
  475354:	ldr	w8, [x19, #308]
  475358:	sub	w8, w8, #0x1
  47535c:	str	w8, [x19, #308]
  475360:	b	474f34 <feof@plt+0x71694>
  475364:	add	w8, w8, #0x1
  475368:	str	w8, [x21, #4]
  47536c:	ldr	x8, [x19, #328]
  475370:	add	w9, w9, #0x1
  475374:	str	w9, [x19, #308]
  475378:	add	x9, sp, #0x10
  47537c:	mov	x0, x19
  475380:	mov	w1, w20
  475384:	mov	x2, x21
  475388:	stp	x21, x8, [sp, #16]
  47538c:	str	x9, [x19, #328]
  475390:	bl	46f9e8 <feof@plt+0x6c148>
  475394:	ldr	x8, [sp, #24]
  475398:	str	x8, [x19, #328]
  47539c:	ldr	w8, [x21, #4]
  4753a0:	sub	w8, w8, #0x1
  4753a4:	str	w8, [x21, #4]
  4753a8:	ldr	w8, [x19, #308]
  4753ac:	sub	w8, w8, #0x1
  4753b0:	str	w8, [x19, #308]
  4753b4:	b	4746c0 <feof@plt+0x70e20>
  4753b8:	add	w8, w8, #0x1
  4753bc:	str	w8, [x22, #4]
  4753c0:	ldr	x8, [x19, #328]
  4753c4:	add	w9, w9, #0x1
  4753c8:	str	w9, [x19, #308]
  4753cc:	add	x9, sp, #0x10
  4753d0:	mov	x0, x19
  4753d4:	mov	w1, w20
  4753d8:	mov	x2, x22
  4753dc:	stp	x22, x8, [sp, #16]
  4753e0:	str	x9, [x19, #328]
  4753e4:	bl	46f9e8 <feof@plt+0x6c148>
  4753e8:	ldr	x8, [sp, #24]
  4753ec:	str	x8, [x19, #328]
  4753f0:	ldr	w8, [x22, #4]
  4753f4:	sub	w8, w8, #0x1
  4753f8:	str	w8, [x22, #4]
  4753fc:	ldr	w8, [x19, #308]
  475400:	sub	w8, w8, #0x1
  475404:	str	w8, [x19, #308]
  475408:	ldr	x8, [x21, #16]
  47540c:	ldr	x22, [x8, #16]
  475410:	ldr	w8, [x22]
  475414:	cmp	w8, #0x31
  475418:	b.hi	47545c <feof@plt+0x71bbc>  // b.pmore
  47541c:	mov	w9, #0x1                   	// #1
  475420:	lsl	x8, x9, x8
  475424:	mov	x9, #0x43                  	// #67
  475428:	movk	x9, #0x2, lsl #48
  47542c:	tst	x8, x9
  475430:	b.eq	47545c <feof@plt+0x71bbc>  // b.none
  475434:	cbz	x22, 475450 <feof@plt+0x71bb0>
  475438:	ldr	w8, [x22, #4]
  47543c:	cmp	w8, #0x1
  475440:	b.gt	475450 <feof@plt+0x71bb0>
  475444:	ldr	w9, [x19, #308]
  475448:	cmp	w9, #0x401
  47544c:	b.lt	475544 <feof@plt+0x71ca4>  // b.tstop
  475450:	mov	w8, #0x1                   	// #1
  475454:	str	w8, [x25]
  475458:	b	475510 <feof@plt+0x71c70>
  47545c:	ldr	x8, [x19, #256]
  475460:	cmp	x8, #0xff
  475464:	b.ne	475490 <feof@plt+0x71bf0>  // b.any
  475468:	ldp	x8, x2, [x19, #272]
  47546c:	mov	w1, #0xff                  	// #255
  475470:	mov	x0, x19
  475474:	strb	wzr, [x19, #255]
  475478:	blr	x8
  47547c:	ldr	x9, [x19, #320]
  475480:	mov	x8, xzr
  475484:	str	xzr, [x19, #256]
  475488:	add	x9, x9, #0x1
  47548c:	str	x9, [x19, #320]
  475490:	add	x9, x8, #0x1
  475494:	mov	w10, #0x28                  	// #40
  475498:	str	x9, [x19, #256]
  47549c:	strb	w10, [x19, x8]
  4754a0:	strb	w10, [x19, #264]
  4754a4:	cbz	x22, 4754c0 <feof@plt+0x71c20>
  4754a8:	ldr	w8, [x22, #4]
  4754ac:	cmp	w8, #0x1
  4754b0:	b.gt	4754c0 <feof@plt+0x71c20>
  4754b4:	ldr	w9, [x19, #308]
  4754b8:	cmp	w9, #0x401
  4754bc:	b.lt	47565c <feof@plt+0x71dbc>  // b.tstop
  4754c0:	mov	w8, #0x1                   	// #1
  4754c4:	str	w8, [x25]
  4754c8:	ldr	x8, [x19, #256]
  4754cc:	cmp	x8, #0xff
  4754d0:	b.ne	4754fc <feof@plt+0x71c5c>  // b.any
  4754d4:	ldp	x8, x2, [x19, #272]
  4754d8:	mov	w1, #0xff                  	// #255
  4754dc:	mov	x0, x19
  4754e0:	strb	wzr, [x19, #255]
  4754e4:	blr	x8
  4754e8:	ldr	x9, [x19, #320]
  4754ec:	mov	x8, xzr
  4754f0:	str	xzr, [x19, #256]
  4754f4:	add	x9, x9, #0x1
  4754f8:	str	x9, [x19, #320]
  4754fc:	add	x9, x8, #0x1
  475500:	mov	w10, #0x29                  	// #41
  475504:	str	x9, [x19, #256]
  475508:	strb	w10, [x19, x8]
  47550c:	strb	w10, [x19, #264]
  475510:	ldr	x8, [x21, #8]
  475514:	ldr	w9, [x8]
  475518:	cmp	w9, #0x32
  47551c:	b.ne	4720f4 <feof@plt+0x6e854>  // b.any
  475520:	ldr	x8, [x8, #8]
  475524:	ldr	w9, [x8, #16]
  475528:	cmp	w9, #0x1
  47552c:	b.ne	4720f4 <feof@plt+0x6e854>  // b.any
  475530:	ldr	x8, [x8, #8]
  475534:	ldrb	w8, [x8]
  475538:	cmp	w8, #0x3e
  47553c:	b.ne	4720f4 <feof@plt+0x6e854>  // b.any
  475540:	b	4749ac <feof@plt+0x7110c>
  475544:	add	w8, w8, #0x1
  475548:	str	w8, [x22, #4]
  47554c:	ldr	x8, [x19, #328]
  475550:	add	w9, w9, #0x1
  475554:	str	w9, [x19, #308]
  475558:	add	x9, sp, #0x10
  47555c:	mov	x0, x19
  475560:	mov	w1, w20
  475564:	mov	x2, x22
  475568:	stp	x22, x8, [sp, #16]
  47556c:	str	x9, [x19, #328]
  475570:	bl	46f9e8 <feof@plt+0x6c148>
  475574:	ldr	x8, [sp, #24]
  475578:	str	x8, [x19, #328]
  47557c:	ldr	w8, [x22, #4]
  475580:	sub	w8, w8, #0x1
  475584:	str	w8, [x22, #4]
  475588:	ldr	w8, [x19, #308]
  47558c:	sub	w8, w8, #0x1
  475590:	str	w8, [x19, #308]
  475594:	b	475510 <feof@plt+0x71c70>
  475598:	add	w8, w8, #0x1
  47559c:	str	w8, [x21, #4]
  4755a0:	ldr	x8, [x19, #328]
  4755a4:	add	w9, w9, #0x1
  4755a8:	str	w9, [x19, #308]
  4755ac:	add	x9, sp, #0x10
  4755b0:	mov	x0, x19
  4755b4:	mov	w1, w20
  4755b8:	mov	x2, x21
  4755bc:	stp	x21, x8, [sp, #16]
  4755c0:	str	x9, [x19, #328]
  4755c4:	bl	46f9e8 <feof@plt+0x6c148>
  4755c8:	ldr	x8, [sp, #24]
  4755cc:	str	x8, [x19, #328]
  4755d0:	ldr	w8, [x21, #4]
  4755d4:	sub	w8, w8, #0x1
  4755d8:	str	w8, [x21, #4]
  4755dc:	ldr	w8, [x19, #308]
  4755e0:	sub	w8, w8, #0x1
  4755e4:	str	w8, [x19, #308]
  4755e8:	b	4747b4 <feof@plt+0x70f14>
  4755ec:	cbnz	w10, 4755f8 <feof@plt+0x71d58>
  4755f0:	ldr	x9, [x9, #8]
  4755f4:	cbnz	x9, 46fe84 <feof@plt+0x6c5e4>
  4755f8:	cbz	w23, 4720ec <feof@plt+0x6e84c>
  4755fc:	str	x24, [x19, #288]
  475600:	b	4720ec <feof@plt+0x6e84c>
  475604:	add	w8, w8, #0x1
  475608:	add	w9, w9, #0x1
  47560c:	str	w8, [x22, #4]
  475610:	str	w9, [x19, #308]
  475614:	str	x22, [sp, #16]
  475618:	ldr	x8, [x19, #328]
  47561c:	add	x9, sp, #0x10
  475620:	mov	x0, x19
  475624:	mov	w1, w20
  475628:	mov	x2, x22
  47562c:	str	x8, [sp, #24]
  475630:	str	x9, [x19, #328]
  475634:	bl	46f9e8 <feof@plt+0x6c148>
  475638:	ldr	x8, [sp, #24]
  47563c:	str	x8, [x19, #328]
  475640:	ldr	w8, [x22, #4]
  475644:	sub	w8, w8, #0x1
  475648:	str	w8, [x22, #4]
  47564c:	ldr	w8, [x19, #308]
  475650:	sub	w8, w8, #0x1
  475654:	str	w8, [x19, #308]
  475658:	b	474bb8 <feof@plt+0x71318>
  47565c:	add	w8, w8, #0x1
  475660:	str	w8, [x22, #4]
  475664:	ldr	x8, [x19, #328]
  475668:	add	w9, w9, #0x1
  47566c:	str	w9, [x19, #308]
  475670:	add	x9, sp, #0x10
  475674:	mov	x0, x19
  475678:	mov	w1, w20
  47567c:	mov	x2, x22
  475680:	stp	x22, x8, [sp, #16]
  475684:	str	x9, [x19, #328]
  475688:	bl	46f9e8 <feof@plt+0x6c148>
  47568c:	ldr	x8, [sp, #24]
  475690:	str	x8, [x19, #328]
  475694:	ldr	w8, [x22, #4]
  475698:	sub	w8, w8, #0x1
  47569c:	str	w8, [x22, #4]
  4756a0:	ldr	w8, [x19, #308]
  4756a4:	sub	w8, w8, #0x1
  4756a8:	str	w8, [x19, #308]
  4756ac:	b	4754c8 <feof@plt+0x71c28>
  4756b0:	add	w8, w8, #0x1
  4756b4:	str	w8, [x23, #4]
  4756b8:	ldr	x8, [x19, #328]
  4756bc:	add	w9, w9, #0x1
  4756c0:	str	w9, [x19, #308]
  4756c4:	add	x9, sp, #0x10
  4756c8:	mov	x0, x19
  4756cc:	mov	w1, w20
  4756d0:	mov	x2, x23
  4756d4:	stp	x23, x8, [sp, #16]
  4756d8:	str	x9, [x19, #328]
  4756dc:	bl	46f9e8 <feof@plt+0x6c148>
  4756e0:	ldr	x8, [sp, #24]
  4756e4:	str	x8, [x19, #328]
  4756e8:	ldr	w8, [x23, #4]
  4756ec:	sub	w8, w8, #0x1
  4756f0:	str	w8, [x23, #4]
  4756f4:	ldr	w8, [x19, #308]
  4756f8:	sub	w8, w8, #0x1
  4756fc:	str	w8, [x19, #308]
  475700:	ldr	x8, [x19, #256]
  475704:	cmp	x8, #0xff
  475708:	b.ne	475734 <feof@plt+0x71e94>  // b.any
  47570c:	ldp	x8, x2, [x19, #272]
  475710:	mov	w1, #0xff                  	// #255
  475714:	mov	x0, x19
  475718:	strb	wzr, [x19, #255]
  47571c:	blr	x8
  475720:	ldr	x9, [x19, #320]
  475724:	mov	x8, xzr
  475728:	str	xzr, [x19, #256]
  47572c:	add	x9, x9, #0x1
  475730:	str	x9, [x19, #320]
  475734:	add	x9, x8, #0x1
  475738:	mov	w10, #0x29                  	// #41
  47573c:	str	x9, [x19, #256]
  475740:	strb	w10, [x19, x8]
  475744:	strb	w10, [x19, #264]
  475748:	ldr	x8, [x19, #256]
  47574c:	cmp	x8, #0xff
  475750:	b.ne	47577c <feof@plt+0x71edc>  // b.any
  475754:	ldp	x8, x2, [x19, #272]
  475758:	mov	w1, #0xff                  	// #255
  47575c:	mov	x0, x19
  475760:	strb	wzr, [x19, #255]
  475764:	blr	x8
  475768:	ldr	x9, [x19, #320]
  47576c:	mov	x8, xzr
  475770:	str	xzr, [x19, #256]
  475774:	add	x9, x9, #0x1
  475778:	str	x9, [x19, #320]
  47577c:	add	x9, x8, #0x1
  475780:	mov	w10, #0x20                  	// #32
  475784:	str	x9, [x19, #256]
  475788:	strb	w10, [x19, x8]
  47578c:	strb	w10, [x19, #264]
  475790:	cbz	x22, 4757ac <feof@plt+0x71f0c>
  475794:	ldr	w8, [x22, #4]
  475798:	cmp	w8, #0x1
  47579c:	b.gt	4757ac <feof@plt+0x71f0c>
  4757a0:	ldr	w9, [x19, #308]
  4757a4:	cmp	w9, #0x401
  4757a8:	b.lt	4757bc <feof@plt+0x71f1c>  // b.tstop
  4757ac:	mov	w8, #0x1                   	// #1
  4757b0:	str	w8, [x25]
  4757b4:	cbnz	x21, 475c10 <feof@plt+0x72370>
  4757b8:	b	4720f4 <feof@plt+0x6e854>
  4757bc:	add	w8, w8, #0x1
  4757c0:	str	w8, [x22, #4]
  4757c4:	ldr	x8, [x19, #328]
  4757c8:	add	w9, w9, #0x1
  4757cc:	str	w9, [x19, #308]
  4757d0:	add	x9, sp, #0x10
  4757d4:	mov	x0, x19
  4757d8:	mov	w1, w20
  4757dc:	mov	x2, x22
  4757e0:	stp	x22, x8, [sp, #16]
  4757e4:	str	x9, [x19, #328]
  4757e8:	bl	46f9e8 <feof@plt+0x6c148>
  4757ec:	ldr	x8, [sp, #24]
  4757f0:	str	x8, [x19, #328]
  4757f4:	ldr	w8, [x22, #4]
  4757f8:	sub	w8, w8, #0x1
  4757fc:	str	w8, [x22, #4]
  475800:	ldr	w8, [x19, #308]
  475804:	sub	w8, w8, #0x1
  475808:	str	w8, [x19, #308]
  47580c:	cbnz	x21, 475c10 <feof@plt+0x72370>
  475810:	b	4720f4 <feof@plt+0x6e854>
  475814:	add	w8, w8, #0x1
  475818:	str	w8, [x23, #4]
  47581c:	ldr	x8, [x19, #328]
  475820:	add	w9, w9, #0x1
  475824:	str	w9, [x19, #308]
  475828:	add	x9, sp, #0x10
  47582c:	mov	x0, x19
  475830:	mov	w1, w20
  475834:	mov	x2, x23
  475838:	stp	x23, x8, [sp, #16]
  47583c:	str	x9, [x19, #328]
  475840:	bl	46f9e8 <feof@plt+0x6c148>
  475844:	ldr	x8, [sp, #24]
  475848:	str	x8, [x19, #328]
  47584c:	ldr	w8, [x23, #4]
  475850:	sub	w8, w8, #0x1
  475854:	str	w8, [x23, #4]
  475858:	ldr	w8, [x19, #308]
  47585c:	sub	w8, w8, #0x1
  475860:	str	w8, [x19, #308]
  475864:	ldr	x8, [x19, #256]
  475868:	cmp	x8, #0xff
  47586c:	b.ne	475898 <feof@plt+0x71ff8>  // b.any
  475870:	ldp	x8, x2, [x19, #272]
  475874:	mov	w1, #0xff                  	// #255
  475878:	mov	x0, x19
  47587c:	strb	wzr, [x19, #255]
  475880:	blr	x8
  475884:	ldr	x9, [x19, #320]
  475888:	mov	x8, xzr
  47588c:	str	xzr, [x19, #256]
  475890:	add	x9, x9, #0x1
  475894:	str	x9, [x19, #320]
  475898:	add	x9, x8, #0x1
  47589c:	mov	w10, #0x29                  	// #41
  4758a0:	str	x9, [x19, #256]
  4758a4:	strb	w10, [x19, x8]
  4758a8:	strb	w10, [x19, #264]
  4758ac:	ldr	w8, [x24]
  4758b0:	cmp	w8, #0x32
  4758b4:	b.ne	475924 <feof@plt+0x72084>  // b.any
  4758b8:	ldr	x8, [x24, #8]
  4758bc:	ldrsw	x23, [x8, #16]
  4758c0:	cbz	w23, 475998 <feof@plt+0x720f8>
  4758c4:	ldr	x24, [x8, #8]
  4758c8:	b	4758e8 <feof@plt+0x72048>
  4758cc:	add	x9, x8, #0x1
  4758d0:	subs	x23, x23, #0x1
  4758d4:	add	x24, x24, #0x1
  4758d8:	str	x9, [x19, #256]
  4758dc:	strb	w26, [x19, x8]
  4758e0:	strb	w26, [x19, #264]
  4758e4:	b.eq	475998 <feof@plt+0x720f8>  // b.none
  4758e8:	ldr	x8, [x19, #256]
  4758ec:	ldrb	w26, [x24]
  4758f0:	cmp	x8, #0xff
  4758f4:	b.ne	4758cc <feof@plt+0x7202c>  // b.any
  4758f8:	ldp	x8, x2, [x19, #272]
  4758fc:	mov	w1, #0xff                  	// #255
  475900:	mov	x0, x19
  475904:	strb	wzr, [x19, #255]
  475908:	blr	x8
  47590c:	ldr	x9, [x19, #320]
  475910:	mov	x8, xzr
  475914:	str	xzr, [x19, #256]
  475918:	add	x9, x9, #0x1
  47591c:	str	x9, [x19, #320]
  475920:	b	4758cc <feof@plt+0x7202c>
  475924:	ldr	w8, [x24, #4]
  475928:	cmp	w8, #0x1
  47592c:	b.gt	47593c <feof@plt+0x7209c>
  475930:	ldr	w9, [x19, #308]
  475934:	cmp	w9, #0x401
  475938:	b.lt	475948 <feof@plt+0x720a8>  // b.tstop
  47593c:	mov	w8, #0x1                   	// #1
  475940:	str	w8, [x25]
  475944:	b	475998 <feof@plt+0x720f8>
  475948:	add	w8, w8, #0x1
  47594c:	str	w8, [x24, #4]
  475950:	ldr	x8, [x19, #328]
  475954:	add	w9, w9, #0x1
  475958:	str	w9, [x19, #308]
  47595c:	add	x9, sp, #0x10
  475960:	mov	x0, x19
  475964:	mov	w1, w20
  475968:	mov	x2, x24
  47596c:	stp	x24, x8, [sp, #16]
  475970:	str	x9, [x19, #328]
  475974:	bl	46f9e8 <feof@plt+0x6c148>
  475978:	ldr	x8, [sp, #24]
  47597c:	str	x8, [x19, #328]
  475980:	ldr	w8, [x24, #4]
  475984:	sub	w8, w8, #0x1
  475988:	str	w8, [x24, #4]
  47598c:	ldr	w8, [x19, #308]
  475990:	sub	w8, w8, #0x1
  475994:	str	w8, [x19, #308]
  475998:	ldr	w8, [x22]
  47599c:	cmp	w8, #0x31
  4759a0:	b.hi	4759e0 <feof@plt+0x72140>  // b.pmore
  4759a4:	mov	w9, #0x1                   	// #1
  4759a8:	lsl	x8, x9, x8
  4759ac:	mov	x9, #0x43                  	// #67
  4759b0:	movk	x9, #0x2, lsl #48
  4759b4:	tst	x8, x9
  4759b8:	b.eq	4759e0 <feof@plt+0x72140>  // b.none
  4759bc:	ldr	w8, [x22, #4]
  4759c0:	cmp	w8, #0x1
  4759c4:	b.gt	4759d4 <feof@plt+0x72134>
  4759c8:	ldr	w9, [x19, #308]
  4759cc:	cmp	w9, #0x401
  4759d0:	b.lt	475a4c <feof@plt+0x721ac>  // b.tstop
  4759d4:	mov	w8, #0x1                   	// #1
  4759d8:	str	w8, [x25]
  4759dc:	b	475b38 <feof@plt+0x72298>
  4759e0:	ldr	x8, [x19, #256]
  4759e4:	cmp	x8, #0xff
  4759e8:	b.ne	475a14 <feof@plt+0x72174>  // b.any
  4759ec:	ldp	x8, x2, [x19, #272]
  4759f0:	mov	w1, #0xff                  	// #255
  4759f4:	mov	x0, x19
  4759f8:	strb	wzr, [x19, #255]
  4759fc:	blr	x8
  475a00:	ldr	x9, [x19, #320]
  475a04:	mov	x8, xzr
  475a08:	str	xzr, [x19, #256]
  475a0c:	add	x9, x9, #0x1
  475a10:	str	x9, [x19, #320]
  475a14:	add	x9, x8, #0x1
  475a18:	mov	w10, #0x28                  	// #40
  475a1c:	str	x9, [x19, #256]
  475a20:	strb	w10, [x19, x8]
  475a24:	strb	w10, [x19, #264]
  475a28:	ldr	w8, [x22, #4]
  475a2c:	cmp	w8, #0x1
  475a30:	b.gt	475a40 <feof@plt+0x721a0>
  475a34:	ldr	w9, [x19, #308]
  475a38:	cmp	w9, #0x401
  475a3c:	b.lt	475aa0 <feof@plt+0x72200>  // b.tstop
  475a40:	mov	w8, #0x1                   	// #1
  475a44:	str	w8, [x25]
  475a48:	b	475af0 <feof@plt+0x72250>
  475a4c:	add	w8, w8, #0x1
  475a50:	str	w8, [x22, #4]
  475a54:	ldr	x8, [x19, #328]
  475a58:	add	w9, w9, #0x1
  475a5c:	str	w9, [x19, #308]
  475a60:	add	x9, sp, #0x10
  475a64:	mov	x0, x19
  475a68:	mov	w1, w20
  475a6c:	mov	x2, x22
  475a70:	stp	x22, x8, [sp, #16]
  475a74:	str	x9, [x19, #328]
  475a78:	bl	46f9e8 <feof@plt+0x6c148>
  475a7c:	ldr	x8, [sp, #24]
  475a80:	str	x8, [x19, #328]
  475a84:	ldr	w8, [x22, #4]
  475a88:	sub	w8, w8, #0x1
  475a8c:	str	w8, [x22, #4]
  475a90:	ldr	w8, [x19, #308]
  475a94:	sub	w8, w8, #0x1
  475a98:	str	w8, [x19, #308]
  475a9c:	b	475b38 <feof@plt+0x72298>
  475aa0:	add	w8, w8, #0x1
  475aa4:	str	w8, [x22, #4]
  475aa8:	ldr	x8, [x19, #328]
  475aac:	add	w9, w9, #0x1
  475ab0:	str	w9, [x19, #308]
  475ab4:	add	x9, sp, #0x10
  475ab8:	mov	x0, x19
  475abc:	mov	w1, w20
  475ac0:	mov	x2, x22
  475ac4:	stp	x22, x8, [sp, #16]
  475ac8:	str	x9, [x19, #328]
  475acc:	bl	46f9e8 <feof@plt+0x6c148>
  475ad0:	ldr	x8, [sp, #24]
  475ad4:	str	x8, [x19, #328]
  475ad8:	ldr	w8, [x22, #4]
  475adc:	sub	w8, w8, #0x1
  475ae0:	str	w8, [x22, #4]
  475ae4:	ldr	w8, [x19, #308]
  475ae8:	sub	w8, w8, #0x1
  475aec:	str	w8, [x19, #308]
  475af0:	ldr	x8, [x19, #256]
  475af4:	cmp	x8, #0xff
  475af8:	b.ne	475b24 <feof@plt+0x72284>  // b.any
  475afc:	ldp	x8, x2, [x19, #272]
  475b00:	mov	w1, #0xff                  	// #255
  475b04:	mov	x0, x19
  475b08:	strb	wzr, [x19, #255]
  475b0c:	blr	x8
  475b10:	ldr	x9, [x19, #320]
  475b14:	mov	x8, xzr
  475b18:	str	xzr, [x19, #256]
  475b1c:	add	x9, x9, #0x1
  475b20:	str	x9, [x19, #320]
  475b24:	add	x9, x8, #0x1
  475b28:	mov	w10, #0x29                  	// #41
  475b2c:	str	x9, [x19, #256]
  475b30:	strb	w10, [x19, x8]
  475b34:	strb	w10, [x19, #264]
  475b38:	ldr	x8, [x19, #256]
  475b3c:	cmp	x8, #0xff
  475b40:	b.ne	475b6c <feof@plt+0x722cc>  // b.any
  475b44:	ldp	x8, x2, [x19, #272]
  475b48:	mov	w1, #0xff                  	// #255
  475b4c:	mov	x0, x19
  475b50:	strb	wzr, [x19, #255]
  475b54:	blr	x8
  475b58:	ldr	x9, [x19, #320]
  475b5c:	mov	x8, xzr
  475b60:	str	xzr, [x19, #256]
  475b64:	add	x9, x9, #0x1
  475b68:	str	x9, [x19, #320]
  475b6c:	add	x9, x8, #0x1
  475b70:	mov	w10, #0x20                  	// #32
  475b74:	str	x9, [x19, #256]
  475b78:	strb	w10, [x19, x8]
  475b7c:	ldr	x8, [x19, #256]
  475b80:	strb	w10, [x19, #264]
  475b84:	cmp	x8, #0xff
  475b88:	b.ne	475bb4 <feof@plt+0x72314>  // b.any
  475b8c:	ldp	x8, x2, [x19, #272]
  475b90:	mov	w1, #0xff                  	// #255
  475b94:	mov	x0, x19
  475b98:	strb	wzr, [x19, #255]
  475b9c:	blr	x8
  475ba0:	ldr	x9, [x19, #320]
  475ba4:	mov	x8, xzr
  475ba8:	str	xzr, [x19, #256]
  475bac:	add	x9, x9, #0x1
  475bb0:	str	x9, [x19, #320]
  475bb4:	add	x9, x8, #0x1
  475bb8:	mov	w10, #0x3a                  	// #58
  475bbc:	str	x9, [x19, #256]
  475bc0:	strb	w10, [x19, x8]
  475bc4:	ldr	x8, [x19, #256]
  475bc8:	strb	w10, [x19, #264]
  475bcc:	cmp	x8, #0xff
  475bd0:	b.ne	475bfc <feof@plt+0x7235c>  // b.any
  475bd4:	ldp	x8, x2, [x19, #272]
  475bd8:	mov	w1, #0xff                  	// #255
  475bdc:	mov	x0, x19
  475be0:	strb	wzr, [x19, #255]
  475be4:	blr	x8
  475be8:	ldr	x9, [x19, #320]
  475bec:	mov	x8, xzr
  475bf0:	str	xzr, [x19, #256]
  475bf4:	add	x9, x9, #0x1
  475bf8:	str	x9, [x19, #320]
  475bfc:	add	x9, x8, #0x1
  475c00:	mov	w10, #0x20                  	// #32
  475c04:	str	x9, [x19, #256]
  475c08:	strb	w10, [x19, x8]
  475c0c:	strb	w10, [x19, #264]
  475c10:	ldr	w8, [x21]
  475c14:	cmp	w8, #0x31
  475c18:	b.hi	475c34 <feof@plt+0x72394>  // b.pmore
  475c1c:	mov	w9, #0x1                   	// #1
  475c20:	lsl	x8, x9, x8
  475c24:	mov	x9, #0x43                  	// #67
  475c28:	movk	x9, #0x2, lsl #48
  475c2c:	tst	x8, x9
  475c30:	b.ne	4720d4 <feof@plt+0x6e834>  // b.any
  475c34:	ldr	x8, [x19, #256]
  475c38:	cmp	x8, #0xff
  475c3c:	b.ne	475c68 <feof@plt+0x723c8>  // b.any
  475c40:	ldp	x8, x2, [x19, #272]
  475c44:	mov	w1, #0xff                  	// #255
  475c48:	mov	x0, x19
  475c4c:	strb	wzr, [x19, #255]
  475c50:	blr	x8
  475c54:	ldr	x9, [x19, #320]
  475c58:	mov	x8, xzr
  475c5c:	str	xzr, [x19, #256]
  475c60:	add	x9, x9, #0x1
  475c64:	str	x9, [x19, #320]
  475c68:	add	x9, x8, #0x1
  475c6c:	mov	w10, #0x28                  	// #40
  475c70:	str	x9, [x19, #256]
  475c74:	strb	w10, [x19, x8]
  475c78:	strb	w10, [x19, #264]
  475c7c:	b	4723ac <feof@plt+0x6eb0c>
  475c80:	sub	sp, sp, #0x50
  475c84:	stp	x29, x30, [sp, #16]
  475c88:	stp	x24, x23, [sp, #32]
  475c8c:	stp	x22, x21, [sp, #48]
  475c90:	stp	x20, x19, [sp, #64]
  475c94:	ldr	w8, [x2]
  475c98:	mov	x21, x2
  475c9c:	mov	w20, w1
  475ca0:	mov	x19, x0
  475ca4:	sub	w8, w8, #0x3
  475ca8:	cmp	w8, #0x4d
  475cac:	add	x29, sp, #0x10
  475cb0:	b.hi	476100 <feof@plt+0x72860>  // b.pmore
  475cb4:	adrp	x9, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  475cb8:	add	x9, x9, #0xc1c
  475cbc:	adr	x10, 475ccc <feof@plt+0x7242c>
  475cc0:	ldrh	w11, [x9, x8, lsl #1]
  475cc4:	add	x10, x10, x11, lsl #2
  475cc8:	br	x10
  475ccc:	adrp	x21, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  475cd0:	mov	x20, xzr
  475cd4:	add	x21, x21, #0xebb
  475cd8:	b	475cf8 <feof@plt+0x72458>
  475cdc:	add	x20, x20, #0x1
  475ce0:	add	x9, x8, #0x1
  475ce4:	cmp	x20, #0x9
  475ce8:	str	x9, [x19, #256]
  475cec:	strb	w22, [x19, x8]
  475cf0:	strb	w22, [x19, #264]
  475cf4:	b.eq	476704 <feof@plt+0x72e64>  // b.none
  475cf8:	ldr	x8, [x19, #256]
  475cfc:	ldrb	w22, [x21, x20]
  475d00:	cmp	x8, #0xff
  475d04:	b.ne	475cdc <feof@plt+0x7243c>  // b.any
  475d08:	ldp	x8, x2, [x19, #272]
  475d0c:	mov	w1, #0xff                  	// #255
  475d10:	mov	x0, x19
  475d14:	strb	wzr, [x19, #255]
  475d18:	blr	x8
  475d1c:	ldr	x9, [x19, #320]
  475d20:	mov	x8, xzr
  475d24:	str	xzr, [x19, #256]
  475d28:	add	x9, x9, #0x1
  475d2c:	str	x9, [x19, #320]
  475d30:	b	475cdc <feof@plt+0x7243c>
  475d34:	adrp	x21, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  475d38:	mov	x20, xzr
  475d3c:	add	x21, x21, #0xec5
  475d40:	b	475d60 <feof@plt+0x724c0>
  475d44:	add	x20, x20, #0x1
  475d48:	add	x9, x8, #0x1
  475d4c:	cmp	x20, #0x9
  475d50:	str	x9, [x19, #256]
  475d54:	strb	w22, [x19, x8]
  475d58:	strb	w22, [x19, #264]
  475d5c:	b.eq	476704 <feof@plt+0x72e64>  // b.none
  475d60:	ldr	x8, [x19, #256]
  475d64:	ldrb	w22, [x21, x20]
  475d68:	cmp	x8, #0xff
  475d6c:	b.ne	475d44 <feof@plt+0x724a4>  // b.any
  475d70:	ldp	x8, x2, [x19, #272]
  475d74:	mov	w1, #0xff                  	// #255
  475d78:	mov	x0, x19
  475d7c:	strb	wzr, [x19, #255]
  475d80:	blr	x8
  475d84:	ldr	x9, [x19, #320]
  475d88:	mov	x8, xzr
  475d8c:	str	xzr, [x19, #256]
  475d90:	add	x9, x9, #0x1
  475d94:	str	x9, [x19, #320]
  475d98:	b	475d44 <feof@plt+0x724a4>
  475d9c:	ldr	x8, [x19, #256]
  475da0:	cmp	x8, #0xff
  475da4:	b.ne	475dd0 <feof@plt+0x72530>  // b.any
  475da8:	ldp	x8, x2, [x19, #272]
  475dac:	mov	w1, #0xff                  	// #255
  475db0:	mov	x0, x19
  475db4:	strb	wzr, [x19, #255]
  475db8:	blr	x8
  475dbc:	ldr	x9, [x19, #320]
  475dc0:	mov	x8, xzr
  475dc4:	str	xzr, [x19, #256]
  475dc8:	add	x9, x9, #0x1
  475dcc:	str	x9, [x19, #320]
  475dd0:	add	x9, x8, #0x1
  475dd4:	mov	w10, #0x20                  	// #32
  475dd8:	str	x9, [x19, #256]
  475ddc:	strb	w10, [x19, x8]
  475de0:	ldr	x8, [x19, #256]
  475de4:	strb	w10, [x19, #264]
  475de8:	cmp	x8, #0xff
  475dec:	b.ne	475e18 <feof@plt+0x72578>  // b.any
  475df0:	ldp	x8, x2, [x19, #272]
  475df4:	mov	w1, #0xff                  	// #255
  475df8:	mov	x0, x19
  475dfc:	strb	wzr, [x19, #255]
  475e00:	blr	x8
  475e04:	ldr	x9, [x19, #320]
  475e08:	mov	x8, xzr
  475e0c:	str	xzr, [x19, #256]
  475e10:	add	x9, x9, #0x1
  475e14:	str	x9, [x19, #320]
  475e18:	add	x9, x8, #0x1
  475e1c:	mov	w10, #0x63                  	// #99
  475e20:	str	x9, [x19, #256]
  475e24:	strb	w10, [x19, x8]
  475e28:	ldr	x8, [x19, #256]
  475e2c:	strb	w10, [x19, #264]
  475e30:	cmp	x8, #0xff
  475e34:	b.ne	475e60 <feof@plt+0x725c0>  // b.any
  475e38:	ldp	x8, x2, [x19, #272]
  475e3c:	mov	w1, #0xff                  	// #255
  475e40:	mov	x0, x19
  475e44:	strb	wzr, [x19, #255]
  475e48:	blr	x8
  475e4c:	ldr	x9, [x19, #320]
  475e50:	mov	x8, xzr
  475e54:	str	xzr, [x19, #256]
  475e58:	add	x9, x9, #0x1
  475e5c:	str	x9, [x19, #320]
  475e60:	add	x9, x8, #0x1
  475e64:	mov	w10, #0x6f                  	// #111
  475e68:	str	x9, [x19, #256]
  475e6c:	strb	w10, [x19, x8]
  475e70:	ldr	x8, [x19, #256]
  475e74:	strb	w10, [x19, #264]
  475e78:	cmp	x8, #0xff
  475e7c:	b.ne	475ea8 <feof@plt+0x72608>  // b.any
  475e80:	ldp	x8, x2, [x19, #272]
  475e84:	mov	w1, #0xff                  	// #255
  475e88:	mov	x0, x19
  475e8c:	strb	wzr, [x19, #255]
  475e90:	blr	x8
  475e94:	ldr	x9, [x19, #320]
  475e98:	mov	x8, xzr
  475e9c:	str	xzr, [x19, #256]
  475ea0:	add	x9, x9, #0x1
  475ea4:	str	x9, [x19, #320]
  475ea8:	add	x9, x8, #0x1
  475eac:	mov	w10, #0x6e                  	// #110
  475eb0:	str	x9, [x19, #256]
  475eb4:	strb	w10, [x19, x8]
  475eb8:	ldr	x8, [x19, #256]
  475ebc:	strb	w10, [x19, #264]
  475ec0:	cmp	x8, #0xff
  475ec4:	b.ne	475ef0 <feof@plt+0x72650>  // b.any
  475ec8:	ldp	x8, x2, [x19, #272]
  475ecc:	mov	w1, #0xff                  	// #255
  475ed0:	mov	x0, x19
  475ed4:	strb	wzr, [x19, #255]
  475ed8:	blr	x8
  475edc:	ldr	x9, [x19, #320]
  475ee0:	mov	x8, xzr
  475ee4:	str	xzr, [x19, #256]
  475ee8:	add	x9, x9, #0x1
  475eec:	str	x9, [x19, #320]
  475ef0:	add	x9, x8, #0x1
  475ef4:	mov	w10, #0x73                  	// #115
  475ef8:	str	x9, [x19, #256]
  475efc:	strb	w10, [x19, x8]
  475f00:	ldr	x8, [x19, #256]
  475f04:	strb	w10, [x19, #264]
  475f08:	cmp	x8, #0xff
  475f0c:	b.ne	475f38 <feof@plt+0x72698>  // b.any
  475f10:	ldp	x8, x2, [x19, #272]
  475f14:	mov	w1, #0xff                  	// #255
  475f18:	mov	x0, x19
  475f1c:	strb	wzr, [x19, #255]
  475f20:	blr	x8
  475f24:	ldr	x9, [x19, #320]
  475f28:	mov	x8, xzr
  475f2c:	str	xzr, [x19, #256]
  475f30:	add	x9, x9, #0x1
  475f34:	str	x9, [x19, #320]
  475f38:	add	x9, x8, #0x1
  475f3c:	mov	w10, #0x74                  	// #116
  475f40:	b	4766f8 <feof@plt+0x72e58>
  475f44:	ldr	x21, [x21, #8]
  475f48:	cbnz	x21, 476100 <feof@plt+0x72860>
  475f4c:	b	476118 <feof@plt+0x72878>
  475f50:	ldr	x8, [x19, #256]
  475f54:	cmp	x8, #0xff
  475f58:	b.ne	475f84 <feof@plt+0x726e4>  // b.any
  475f5c:	ldp	x8, x2, [x19, #272]
  475f60:	mov	w1, #0xff                  	// #255
  475f64:	mov	x0, x19
  475f68:	strb	wzr, [x19, #255]
  475f6c:	blr	x8
  475f70:	ldr	x9, [x19, #320]
  475f74:	mov	x8, xzr
  475f78:	str	xzr, [x19, #256]
  475f7c:	add	x9, x9, #0x1
  475f80:	str	x9, [x19, #320]
  475f84:	add	x9, x8, #0x1
  475f88:	mov	w10, #0x20                  	// #32
  475f8c:	str	x9, [x19, #256]
  475f90:	strb	w10, [x19, x8]
  475f94:	strb	w10, [x19, #264]
  475f98:	ldr	x8, [x19, #256]
  475f9c:	cmp	x8, #0xff
  475fa0:	b.ne	475fcc <feof@plt+0x7272c>  // b.any
  475fa4:	ldp	x8, x2, [x19, #272]
  475fa8:	mov	w1, #0xff                  	// #255
  475fac:	mov	x0, x19
  475fb0:	strb	wzr, [x19, #255]
  475fb4:	blr	x8
  475fb8:	ldr	x9, [x19, #320]
  475fbc:	mov	x8, xzr
  475fc0:	str	xzr, [x19, #256]
  475fc4:	add	x9, x9, #0x1
  475fc8:	str	x9, [x19, #320]
  475fcc:	add	x9, x8, #0x1
  475fd0:	mov	w10, #0x26                  	// #38
  475fd4:	b	4766f8 <feof@plt+0x72e58>
  475fd8:	ldr	x8, [x19, #256]
  475fdc:	cmp	x8, #0xff
  475fe0:	b.ne	47600c <feof@plt+0x7276c>  // b.any
  475fe4:	ldp	x8, x2, [x19, #272]
  475fe8:	mov	w1, #0xff                  	// #255
  475fec:	mov	x0, x19
  475ff0:	strb	wzr, [x19, #255]
  475ff4:	blr	x8
  475ff8:	ldr	x9, [x19, #320]
  475ffc:	mov	x8, xzr
  476000:	str	xzr, [x19, #256]
  476004:	add	x9, x9, #0x1
  476008:	str	x9, [x19, #320]
  47600c:	add	x9, x8, #0x1
  476010:	mov	w10, #0x20                  	// #32
  476014:	str	x9, [x19, #256]
  476018:	strb	w10, [x19, x8]
  47601c:	strb	w10, [x19, #264]
  476020:	ldr	x8, [x19, #256]
  476024:	cmp	x8, #0xff
  476028:	b.ne	476054 <feof@plt+0x727b4>  // b.any
  47602c:	ldp	x8, x2, [x19, #272]
  476030:	mov	w1, #0xff                  	// #255
  476034:	mov	x0, x19
  476038:	strb	wzr, [x19, #255]
  47603c:	blr	x8
  476040:	ldr	x9, [x19, #320]
  476044:	mov	x8, xzr
  476048:	str	xzr, [x19, #256]
  47604c:	add	x9, x9, #0x1
  476050:	str	x9, [x19, #320]
  476054:	add	x9, x8, #0x1
  476058:	mov	w20, #0x26                  	// #38
  47605c:	str	x9, [x19, #256]
  476060:	strb	w20, [x19, x8]
  476064:	ldr	x8, [x19, #256]
  476068:	strb	w20, [x19, #264]
  47606c:	cmp	x8, #0xff
  476070:	b.ne	47609c <feof@plt+0x727fc>  // b.any
  476074:	ldp	x8, x2, [x19, #272]
  476078:	mov	w1, #0xff                  	// #255
  47607c:	mov	x0, x19
  476080:	strb	wzr, [x19, #255]
  476084:	blr	x8
  476088:	ldr	x9, [x19, #320]
  47608c:	mov	x8, xzr
  476090:	str	xzr, [x19, #256]
  476094:	add	x9, x9, #0x1
  476098:	str	x9, [x19, #320]
  47609c:	add	x9, x8, #0x1
  4760a0:	str	x9, [x19, #256]
  4760a4:	strb	w20, [x19, x8]
  4760a8:	strb	w20, [x19, #264]
  4760ac:	b	476704 <feof@plt+0x72e64>
  4760b0:	ldr	x8, [x19, #256]
  4760b4:	cmp	x8, #0xff
  4760b8:	b.ne	4760e4 <feof@plt+0x72844>  // b.any
  4760bc:	ldp	x8, x2, [x19, #272]
  4760c0:	mov	w1, #0xff                  	// #255
  4760c4:	mov	x0, x19
  4760c8:	strb	wzr, [x19, #255]
  4760cc:	blr	x8
  4760d0:	ldr	x9, [x19, #320]
  4760d4:	mov	x8, xzr
  4760d8:	str	xzr, [x19, #256]
  4760dc:	add	x9, x9, #0x1
  4760e0:	str	x9, [x19, #320]
  4760e4:	add	x9, x8, #0x1
  4760e8:	mov	w10, #0x20                  	// #32
  4760ec:	str	x9, [x19, #256]
  4760f0:	strb	w10, [x19, x8]
  4760f4:	strb	w10, [x19, #264]
  4760f8:	ldr	x21, [x21, #16]
  4760fc:	cbz	x21, 476118 <feof@plt+0x72878>
  476100:	ldr	w8, [x21, #4]
  476104:	cmp	w8, #0x1
  476108:	b.gt	476118 <feof@plt+0x72878>
  47610c:	ldr	w9, [x19, #308]
  476110:	cmp	w9, #0x401
  476114:	b.lt	47671c <feof@plt+0x72e7c>  // b.tstop
  476118:	mov	w8, #0x1                   	// #1
  47611c:	str	w8, [x19, #304]
  476120:	b	476704 <feof@plt+0x72e64>
  476124:	tbnz	w20, #2, 476704 <feof@plt+0x72e64>
  476128:	ldr	x8, [x19, #256]
  47612c:	cmp	x8, #0xff
  476130:	b.eq	47631c <feof@plt+0x72a7c>  // b.none
  476134:	b	476344 <feof@plt+0x72aa4>
  476138:	adrp	x21, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47613c:	mov	x20, xzr
  476140:	add	x21, x21, #0xeeb
  476144:	b	476164 <feof@plt+0x728c4>
  476148:	add	x20, x20, #0x1
  47614c:	add	x9, x8, #0x1
  476150:	cmp	x20, #0x8
  476154:	str	x9, [x19, #256]
  476158:	strb	w22, [x19, x8]
  47615c:	strb	w22, [x19, #264]
  476160:	b.eq	476704 <feof@plt+0x72e64>  // b.none
  476164:	ldr	x8, [x19, #256]
  476168:	ldrb	w22, [x21, x20]
  47616c:	cmp	x8, #0xff
  476170:	b.ne	476148 <feof@plt+0x728a8>  // b.any
  476174:	ldp	x8, x2, [x19, #272]
  476178:	mov	w1, #0xff                  	// #255
  47617c:	mov	x0, x19
  476180:	strb	wzr, [x19, #255]
  476184:	blr	x8
  476188:	ldr	x9, [x19, #320]
  47618c:	mov	x8, xzr
  476190:	str	xzr, [x19, #256]
  476194:	add	x9, x9, #0x1
  476198:	str	x9, [x19, #320]
  47619c:	b	476148 <feof@plt+0x728a8>
  4761a0:	adrp	x21, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  4761a4:	mov	x20, xzr
  4761a8:	add	x21, x21, #0xef4
  4761ac:	b	4761cc <feof@plt+0x7292c>
  4761b0:	add	x20, x20, #0x1
  4761b4:	add	x9, x8, #0x1
  4761b8:	cmp	x20, #0xa
  4761bc:	str	x9, [x19, #256]
  4761c0:	strb	w22, [x19, x8]
  4761c4:	strb	w22, [x19, #264]
  4761c8:	b.eq	476704 <feof@plt+0x72e64>  // b.none
  4761cc:	ldr	x8, [x19, #256]
  4761d0:	ldrb	w22, [x21, x20]
  4761d4:	cmp	x8, #0xff
  4761d8:	b.ne	4761b0 <feof@plt+0x72910>  // b.any
  4761dc:	ldp	x8, x2, [x19, #272]
  4761e0:	mov	w1, #0xff                  	// #255
  4761e4:	mov	x0, x19
  4761e8:	strb	wzr, [x19, #255]
  4761ec:	blr	x8
  4761f0:	ldr	x9, [x19, #320]
  4761f4:	mov	x8, xzr
  4761f8:	str	xzr, [x19, #256]
  4761fc:	add	x9, x9, #0x1
  476200:	str	x9, [x19, #320]
  476204:	b	4761b0 <feof@plt+0x72910>
  476208:	ldrb	w8, [x19, #264]
  47620c:	cmp	w8, #0x28
  476210:	b.eq	47625c <feof@plt+0x729bc>  // b.none
  476214:	ldr	x8, [x19, #256]
  476218:	cmp	x8, #0xff
  47621c:	b.ne	476248 <feof@plt+0x729a8>  // b.any
  476220:	ldp	x8, x2, [x19, #272]
  476224:	mov	w1, #0xff                  	// #255
  476228:	mov	x0, x19
  47622c:	strb	wzr, [x19, #255]
  476230:	blr	x8
  476234:	ldr	x9, [x19, #320]
  476238:	mov	x8, xzr
  47623c:	str	xzr, [x19, #256]
  476240:	add	x9, x9, #0x1
  476244:	str	x9, [x19, #320]
  476248:	add	x9, x8, #0x1
  47624c:	mov	w10, #0x20                  	// #32
  476250:	str	x9, [x19, #256]
  476254:	strb	w10, [x19, x8]
  476258:	strb	w10, [x19, #264]
  47625c:	ldr	x21, [x21, #8]
  476260:	cbz	x21, 47627c <feof@plt+0x729dc>
  476264:	ldr	w8, [x21, #4]
  476268:	cmp	w8, #0x1
  47626c:	b.gt	47627c <feof@plt+0x729dc>
  476270:	ldr	w9, [x19, #308]
  476274:	cmp	w9, #0x401
  476278:	b.lt	4767cc <feof@plt+0x72f2c>  // b.tstop
  47627c:	mov	w8, #0x1                   	// #1
  476280:	str	w8, [x19, #304]
  476284:	ldr	x8, [x19, #256]
  476288:	cmp	x8, #0xff
  47628c:	b.ne	4762b8 <feof@plt+0x72a18>  // b.any
  476290:	ldp	x8, x2, [x19, #272]
  476294:	mov	w1, #0xff                  	// #255
  476298:	mov	x0, x19
  47629c:	strb	wzr, [x19, #255]
  4762a0:	blr	x8
  4762a4:	ldr	x9, [x19, #320]
  4762a8:	mov	x8, xzr
  4762ac:	str	xzr, [x19, #256]
  4762b0:	add	x9, x9, #0x1
  4762b4:	str	x9, [x19, #320]
  4762b8:	add	x9, x8, #0x1
  4762bc:	mov	w20, #0x3a                  	// #58
  4762c0:	str	x9, [x19, #256]
  4762c4:	strb	w20, [x19, x8]
  4762c8:	ldr	x8, [x19, #256]
  4762cc:	strb	w20, [x19, #264]
  4762d0:	cmp	x8, #0xff
  4762d4:	b.ne	476300 <feof@plt+0x72a60>  // b.any
  4762d8:	ldp	x8, x2, [x19, #272]
  4762dc:	mov	w1, #0xff                  	// #255
  4762e0:	mov	x0, x19
  4762e4:	strb	wzr, [x19, #255]
  4762e8:	blr	x8
  4762ec:	ldr	x9, [x19, #320]
  4762f0:	mov	x8, xzr
  4762f4:	str	xzr, [x19, #256]
  4762f8:	add	x9, x9, #0x1
  4762fc:	str	x9, [x19, #320]
  476300:	add	x9, x8, #0x1
  476304:	str	x9, [x19, #256]
  476308:	strb	w20, [x19, x8]
  47630c:	ldr	x8, [x19, #256]
  476310:	strb	w20, [x19, #264]
  476314:	cmp	x8, #0xff
  476318:	b.ne	476344 <feof@plt+0x72aa4>  // b.any
  47631c:	ldp	x8, x2, [x19, #272]
  476320:	mov	w1, #0xff                  	// #255
  476324:	mov	x0, x19
  476328:	strb	wzr, [x19, #255]
  47632c:	blr	x8
  476330:	ldr	x9, [x19, #320]
  476334:	mov	x8, xzr
  476338:	str	xzr, [x19, #256]
  47633c:	add	x9, x9, #0x1
  476340:	str	x9, [x19, #320]
  476344:	add	x9, x8, #0x1
  476348:	mov	w10, #0x2a                  	// #42
  47634c:	b	4766f8 <feof@plt+0x72e58>
  476350:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  476354:	mov	x22, xzr
  476358:	add	x23, x23, #0xeff
  47635c:	b	47637c <feof@plt+0x72adc>
  476360:	add	x22, x22, #0x1
  476364:	add	x9, x8, #0x1
  476368:	cmp	x22, #0xa
  47636c:	str	x9, [x19, #256]
  476370:	strb	w24, [x19, x8]
  476374:	strb	w24, [x19, #264]
  476378:	b.eq	476694 <feof@plt+0x72df4>  // b.none
  47637c:	ldr	x8, [x19, #256]
  476380:	ldrb	w24, [x23, x22]
  476384:	cmp	x8, #0xff
  476388:	b.ne	476360 <feof@plt+0x72ac0>  // b.any
  47638c:	ldp	x8, x2, [x19, #272]
  476390:	mov	w1, #0xff                  	// #255
  476394:	mov	x0, x19
  476398:	strb	wzr, [x19, #255]
  47639c:	blr	x8
  4763a0:	ldr	x9, [x19, #320]
  4763a4:	mov	x8, xzr
  4763a8:	str	xzr, [x19, #256]
  4763ac:	add	x9, x9, #0x1
  4763b0:	str	x9, [x19, #320]
  4763b4:	b	476360 <feof@plt+0x72ac0>
  4763b8:	adrp	x21, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  4763bc:	mov	x20, xzr
  4763c0:	add	x21, x21, #0xecf
  4763c4:	b	4763e4 <feof@plt+0x72b44>
  4763c8:	add	x20, x20, #0x1
  4763cc:	add	x9, x8, #0x1
  4763d0:	cmp	x20, #0x11
  4763d4:	str	x9, [x19, #256]
  4763d8:	strb	w22, [x19, x8]
  4763dc:	strb	w22, [x19, #264]
  4763e0:	b.eq	476704 <feof@plt+0x72e64>  // b.none
  4763e4:	ldr	x8, [x19, #256]
  4763e8:	ldrb	w22, [x21, x20]
  4763ec:	cmp	x8, #0xff
  4763f0:	b.ne	4763c8 <feof@plt+0x72b28>  // b.any
  4763f4:	ldp	x8, x2, [x19, #272]
  4763f8:	mov	w1, #0xff                  	// #255
  4763fc:	mov	x0, x19
  476400:	strb	wzr, [x19, #255]
  476404:	blr	x8
  476408:	ldr	x9, [x19, #320]
  47640c:	mov	x8, xzr
  476410:	str	xzr, [x19, #256]
  476414:	add	x9, x9, #0x1
  476418:	str	x9, [x19, #320]
  47641c:	b	4763c8 <feof@plt+0x72b28>
  476420:	adrp	x23, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  476424:	mov	x22, xzr
  476428:	add	x23, x23, #0xee1
  47642c:	b	47644c <feof@plt+0x72bac>
  476430:	add	x22, x22, #0x1
  476434:	add	x9, x8, #0x1
  476438:	cmp	x22, #0x9
  47643c:	str	x9, [x19, #256]
  476440:	strb	w24, [x19, x8]
  476444:	strb	w24, [x19, #264]
  476448:	b.eq	476638 <feof@plt+0x72d98>  // b.none
  47644c:	ldr	x8, [x19, #256]
  476450:	ldrb	w24, [x23, x22]
  476454:	cmp	x8, #0xff
  476458:	b.ne	476430 <feof@plt+0x72b90>  // b.any
  47645c:	ldp	x8, x2, [x19, #272]
  476460:	mov	w1, #0xff                  	// #255
  476464:	mov	x0, x19
  476468:	strb	wzr, [x19, #255]
  47646c:	blr	x8
  476470:	ldr	x9, [x19, #320]
  476474:	mov	x8, xzr
  476478:	str	xzr, [x19, #256]
  47647c:	add	x9, x9, #0x1
  476480:	str	x9, [x19, #320]
  476484:	b	476430 <feof@plt+0x72b90>
  476488:	ldr	x8, [x19, #256]
  47648c:	cmp	x8, #0xff
  476490:	b.ne	4764bc <feof@plt+0x72c1c>  // b.any
  476494:	ldp	x8, x2, [x19, #272]
  476498:	mov	w1, #0xff                  	// #255
  47649c:	mov	x0, x19
  4764a0:	strb	wzr, [x19, #255]
  4764a4:	blr	x8
  4764a8:	ldr	x9, [x19, #320]
  4764ac:	mov	x8, xzr
  4764b0:	str	xzr, [x19, #256]
  4764b4:	add	x9, x9, #0x1
  4764b8:	str	x9, [x19, #320]
  4764bc:	add	x9, x8, #0x1
  4764c0:	mov	w10, #0x20                  	// #32
  4764c4:	str	x9, [x19, #256]
  4764c8:	strb	w10, [x19, x8]
  4764cc:	ldr	x8, [x19, #256]
  4764d0:	strb	w10, [x19, #264]
  4764d4:	cmp	x8, #0xff
  4764d8:	b.ne	476504 <feof@plt+0x72c64>  // b.any
  4764dc:	ldp	x8, x2, [x19, #272]
  4764e0:	mov	w1, #0xff                  	// #255
  4764e4:	mov	x0, x19
  4764e8:	strb	wzr, [x19, #255]
  4764ec:	blr	x8
  4764f0:	ldr	x9, [x19, #320]
  4764f4:	mov	x8, xzr
  4764f8:	str	xzr, [x19, #256]
  4764fc:	add	x9, x9, #0x1
  476500:	str	x9, [x19, #320]
  476504:	add	x9, x8, #0x1
  476508:	mov	w10, #0x74                  	// #116
  47650c:	str	x9, [x19, #256]
  476510:	strb	w10, [x19, x8]
  476514:	ldr	x8, [x19, #256]
  476518:	strb	w10, [x19, #264]
  47651c:	cmp	x8, #0xff
  476520:	b.ne	47654c <feof@plt+0x72cac>  // b.any
  476524:	ldp	x8, x2, [x19, #272]
  476528:	mov	w1, #0xff                  	// #255
  47652c:	mov	x0, x19
  476530:	strb	wzr, [x19, #255]
  476534:	blr	x8
  476538:	ldr	x9, [x19, #320]
  47653c:	mov	x8, xzr
  476540:	str	xzr, [x19, #256]
  476544:	add	x9, x9, #0x1
  476548:	str	x9, [x19, #320]
  47654c:	add	x9, x8, #0x1
  476550:	mov	w10, #0x68                  	// #104
  476554:	str	x9, [x19, #256]
  476558:	strb	w10, [x19, x8]
  47655c:	ldr	x8, [x19, #256]
  476560:	strb	w10, [x19, #264]
  476564:	cmp	x8, #0xff
  476568:	b.ne	476594 <feof@plt+0x72cf4>  // b.any
  47656c:	ldp	x8, x2, [x19, #272]
  476570:	mov	w1, #0xff                  	// #255
  476574:	mov	x0, x19
  476578:	strb	wzr, [x19, #255]
  47657c:	blr	x8
  476580:	ldr	x9, [x19, #320]
  476584:	mov	x8, xzr
  476588:	str	xzr, [x19, #256]
  47658c:	add	x9, x9, #0x1
  476590:	str	x9, [x19, #320]
  476594:	add	x9, x8, #0x1
  476598:	mov	w10, #0x72                  	// #114
  47659c:	str	x9, [x19, #256]
  4765a0:	strb	w10, [x19, x8]
  4765a4:	ldr	x8, [x19, #256]
  4765a8:	strb	w10, [x19, #264]
  4765ac:	cmp	x8, #0xff
  4765b0:	b.ne	4765dc <feof@plt+0x72d3c>  // b.any
  4765b4:	ldp	x8, x2, [x19, #272]
  4765b8:	mov	w1, #0xff                  	// #255
  4765bc:	mov	x0, x19
  4765c0:	strb	wzr, [x19, #255]
  4765c4:	blr	x8
  4765c8:	ldr	x9, [x19, #320]
  4765cc:	mov	x8, xzr
  4765d0:	str	xzr, [x19, #256]
  4765d4:	add	x9, x9, #0x1
  4765d8:	str	x9, [x19, #320]
  4765dc:	add	x9, x8, #0x1
  4765e0:	mov	w10, #0x6f                  	// #111
  4765e4:	str	x9, [x19, #256]
  4765e8:	strb	w10, [x19, x8]
  4765ec:	ldr	x8, [x19, #256]
  4765f0:	strb	w10, [x19, #264]
  4765f4:	cmp	x8, #0xff
  4765f8:	b.ne	476624 <feof@plt+0x72d84>  // b.any
  4765fc:	ldp	x8, x2, [x19, #272]
  476600:	mov	w1, #0xff                  	// #255
  476604:	mov	x0, x19
  476608:	strb	wzr, [x19, #255]
  47660c:	blr	x8
  476610:	ldr	x9, [x19, #320]
  476614:	mov	x8, xzr
  476618:	str	xzr, [x19, #256]
  47661c:	add	x9, x9, #0x1
  476620:	str	x9, [x19, #320]
  476624:	add	x9, x8, #0x1
  476628:	mov	w10, #0x77                  	// #119
  47662c:	str	x9, [x19, #256]
  476630:	strb	w10, [x19, x8]
  476634:	strb	w10, [x19, #264]
  476638:	ldr	x8, [x21, #16]
  47663c:	cbz	x8, 476704 <feof@plt+0x72e64>
  476640:	ldr	x8, [x19, #256]
  476644:	cmp	x8, #0xff
  476648:	b.ne	476674 <feof@plt+0x72dd4>  // b.any
  47664c:	ldp	x8, x2, [x19, #272]
  476650:	mov	w1, #0xff                  	// #255
  476654:	mov	x0, x19
  476658:	strb	wzr, [x19, #255]
  47665c:	blr	x8
  476660:	ldr	x9, [x19, #320]
  476664:	mov	x8, xzr
  476668:	str	xzr, [x19, #256]
  47666c:	add	x9, x9, #0x1
  476670:	str	x9, [x19, #320]
  476674:	add	x9, x8, #0x1
  476678:	mov	w10, #0x28                  	// #40
  47667c:	str	x9, [x19, #256]
  476680:	strb	w10, [x19, x8]
  476684:	strb	w10, [x19, #264]
  476688:	ldr	x21, [x21, #16]
  47668c:	cbnz	x21, 47669c <feof@plt+0x72dfc>
  476690:	b	4766b4 <feof@plt+0x72e14>
  476694:	ldr	x21, [x21, #8]
  476698:	cbz	x21, 4766b4 <feof@plt+0x72e14>
  47669c:	ldr	w8, [x21, #4]
  4766a0:	cmp	w8, #0x1
  4766a4:	b.gt	4766b4 <feof@plt+0x72e14>
  4766a8:	ldr	w9, [x19, #308]
  4766ac:	cmp	w9, #0x401
  4766b0:	b.lt	476774 <feof@plt+0x72ed4>  // b.tstop
  4766b4:	mov	w8, #0x1                   	// #1
  4766b8:	str	w8, [x19, #304]
  4766bc:	ldr	x8, [x19, #256]
  4766c0:	cmp	x8, #0xff
  4766c4:	b.ne	4766f0 <feof@plt+0x72e50>  // b.any
  4766c8:	ldp	x8, x2, [x19, #272]
  4766cc:	mov	w1, #0xff                  	// #255
  4766d0:	mov	x0, x19
  4766d4:	strb	wzr, [x19, #255]
  4766d8:	blr	x8
  4766dc:	ldr	x9, [x19, #320]
  4766e0:	mov	x8, xzr
  4766e4:	str	xzr, [x19, #256]
  4766e8:	add	x9, x9, #0x1
  4766ec:	str	x9, [x19, #320]
  4766f0:	add	x9, x8, #0x1
  4766f4:	mov	w10, #0x29                  	// #41
  4766f8:	str	x9, [x19, #256]
  4766fc:	strb	w10, [x19, x8]
  476700:	strb	w10, [x19, #264]
  476704:	ldp	x20, x19, [sp, #64]
  476708:	ldp	x22, x21, [sp, #48]
  47670c:	ldp	x24, x23, [sp, #32]
  476710:	ldp	x29, x30, [sp, #16]
  476714:	add	sp, sp, #0x50
  476718:	ret
  47671c:	add	w8, w8, #0x1
  476720:	add	w9, w9, #0x1
  476724:	str	w8, [x21, #4]
  476728:	str	w9, [x19, #308]
  47672c:	str	x21, [sp]
  476730:	ldr	x8, [x19, #328]
  476734:	mov	x9, sp
  476738:	mov	x0, x19
  47673c:	mov	w1, w20
  476740:	mov	x2, x21
  476744:	str	x8, [sp, #8]
  476748:	str	x9, [x19, #328]
  47674c:	bl	46f9e8 <feof@plt+0x6c148>
  476750:	ldr	x8, [sp, #8]
  476754:	str	x8, [x19, #328]
  476758:	ldr	w8, [x21, #4]
  47675c:	sub	w8, w8, #0x1
  476760:	str	w8, [x21, #4]
  476764:	ldr	w8, [x19, #308]
  476768:	sub	w8, w8, #0x1
  47676c:	str	w8, [x19, #308]
  476770:	b	476704 <feof@plt+0x72e64>
  476774:	add	w8, w8, #0x1
  476778:	add	w9, w9, #0x1
  47677c:	str	w8, [x21, #4]
  476780:	str	w9, [x19, #308]
  476784:	str	x21, [sp]
  476788:	ldr	x8, [x19, #328]
  47678c:	mov	x9, sp
  476790:	mov	x0, x19
  476794:	mov	w1, w20
  476798:	mov	x2, x21
  47679c:	str	x8, [sp, #8]
  4767a0:	str	x9, [x19, #328]
  4767a4:	bl	46f9e8 <feof@plt+0x6c148>
  4767a8:	ldr	x8, [sp, #8]
  4767ac:	str	x8, [x19, #328]
  4767b0:	ldr	w8, [x21, #4]
  4767b4:	sub	w8, w8, #0x1
  4767b8:	str	w8, [x21, #4]
  4767bc:	ldr	w8, [x19, #308]
  4767c0:	sub	w8, w8, #0x1
  4767c4:	str	w8, [x19, #308]
  4767c8:	b	4766bc <feof@plt+0x72e1c>
  4767cc:	add	w8, w8, #0x1
  4767d0:	str	w8, [x21, #4]
  4767d4:	ldr	x8, [x19, #328]
  4767d8:	add	w9, w9, #0x1
  4767dc:	str	w9, [x19, #308]
  4767e0:	mov	x9, sp
  4767e4:	mov	x0, x19
  4767e8:	mov	w1, w20
  4767ec:	mov	x2, x21
  4767f0:	stp	x21, x8, [sp]
  4767f4:	str	x9, [x19, #328]
  4767f8:	bl	46f9e8 <feof@plt+0x6c148>
  4767fc:	ldr	x8, [sp, #8]
  476800:	str	x8, [x19, #328]
  476804:	ldr	w8, [x21, #4]
  476808:	sub	w8, w8, #0x1
  47680c:	str	w8, [x21, #4]
  476810:	ldr	w8, [x19, #308]
  476814:	sub	w8, w8, #0x1
  476818:	str	w8, [x19, #308]
  47681c:	b	476284 <feof@plt+0x729e4>
  476820:	sub	sp, sp, #0x50
  476824:	stp	x22, x21, [sp, #48]
  476828:	stp	x20, x19, [sp, #64]
  47682c:	mov	x19, x3
  476830:	mov	x22, x2
  476834:	mov	w21, w1
  476838:	mov	x20, x0
  47683c:	stp	x29, x30, [sp, #16]
  476840:	stp	x24, x23, [sp, #32]
  476844:	add	x29, sp, #0x10
  476848:	cbz	x3, 4768ac <feof@plt+0x7300c>
  47684c:	mov	x9, #0xe000000             	// #234881024
  476850:	mov	w8, #0x1                   	// #1
  476854:	movk	x9, #0x862, lsl #32
  476858:	mov	x10, x19
  47685c:	b	476868 <feof@plt+0x72fc8>
  476860:	ldr	x10, [x10]
  476864:	cbz	x10, 4768ac <feof@plt+0x7300c>
  476868:	ldr	w11, [x10, #16]
  47686c:	cbnz	w11, 4768ac <feof@plt+0x7300c>
  476870:	ldr	x11, [x10, #8]
  476874:	ldr	w11, [x11]
  476878:	cmp	w11, #0x2b
  47687c:	b.hi	476860 <feof@plt+0x72fc0>  // b.pmore
  476880:	lsl	x12, x8, x11
  476884:	tst	x12, x9
  476888:	b.ne	4768b4 <feof@plt+0x73014>  // b.any
  47688c:	lsl	x11, x8, x11
  476890:	tst	x11, #0x1c00000000
  476894:	b.eq	476860 <feof@plt+0x72fc0>  // b.none
  476898:	ldrb	w8, [x20, #264]
  47689c:	orr	w9, w8, #0x2
  4768a0:	cmp	w9, #0x2a
  4768a4:	b.eq	476908 <feof@plt+0x73068>  // b.none
  4768a8:	b	4768b8 <feof@plt+0x73018>
  4768ac:	mov	w24, wzr
  4768b0:	b	476954 <feof@plt+0x730b4>
  4768b4:	ldrb	w8, [x20, #264]
  4768b8:	cmp	w8, #0x20
  4768bc:	b.eq	476908 <feof@plt+0x73068>  // b.none
  4768c0:	ldr	x8, [x20, #256]
  4768c4:	cmp	x8, #0xff
  4768c8:	b.ne	4768f4 <feof@plt+0x73054>  // b.any
  4768cc:	ldp	x8, x2, [x20, #272]
  4768d0:	mov	w1, #0xff                  	// #255
  4768d4:	mov	x0, x20
  4768d8:	strb	wzr, [x20, #255]
  4768dc:	blr	x8
  4768e0:	ldr	x9, [x20, #320]
  4768e4:	mov	x8, xzr
  4768e8:	str	xzr, [x20, #256]
  4768ec:	add	x9, x9, #0x1
  4768f0:	str	x9, [x20, #320]
  4768f4:	add	x9, x8, #0x1
  4768f8:	mov	w10, #0x20                  	// #32
  4768fc:	str	x9, [x20, #256]
  476900:	strb	w10, [x20, x8]
  476904:	strb	w10, [x20, #264]
  476908:	ldr	x8, [x20, #256]
  47690c:	cmp	x8, #0xff
  476910:	b.ne	47693c <feof@plt+0x7309c>  // b.any
  476914:	ldp	x8, x2, [x20, #272]
  476918:	mov	w1, #0xff                  	// #255
  47691c:	mov	x0, x20
  476920:	strb	wzr, [x20, #255]
  476924:	blr	x8
  476928:	ldr	x9, [x20, #320]
  47692c:	mov	x8, xzr
  476930:	str	xzr, [x20, #256]
  476934:	add	x9, x9, #0x1
  476938:	str	x9, [x20, #320]
  47693c:	add	x9, x8, #0x1
  476940:	mov	w10, #0x28                  	// #40
  476944:	mov	w24, #0x1                   	// #1
  476948:	str	x9, [x20, #256]
  47694c:	strb	w10, [x20, x8]
  476950:	strb	w10, [x20, #264]
  476954:	ldr	x23, [x20, #296]
  476958:	mov	x0, x20
  47695c:	mov	w1, w21
  476960:	mov	x2, x19
  476964:	mov	w3, wzr
  476968:	str	xzr, [x20, #296]
  47696c:	bl	477cc8 <feof@plt+0x74428>
  476970:	cbz	w24, 4769bc <feof@plt+0x7311c>
  476974:	ldr	x8, [x20, #256]
  476978:	cmp	x8, #0xff
  47697c:	b.ne	4769a8 <feof@plt+0x73108>  // b.any
  476980:	ldp	x8, x2, [x20, #272]
  476984:	mov	w1, #0xff                  	// #255
  476988:	mov	x0, x20
  47698c:	strb	wzr, [x20, #255]
  476990:	blr	x8
  476994:	ldr	x9, [x20, #320]
  476998:	mov	x8, xzr
  47699c:	str	xzr, [x20, #256]
  4769a0:	add	x9, x9, #0x1
  4769a4:	str	x9, [x20, #320]
  4769a8:	add	x9, x8, #0x1
  4769ac:	mov	w10, #0x29                  	// #41
  4769b0:	str	x9, [x20, #256]
  4769b4:	strb	w10, [x20, x8]
  4769b8:	strb	w10, [x20, #264]
  4769bc:	ldr	x8, [x20, #256]
  4769c0:	cmp	x8, #0xff
  4769c4:	b.ne	4769f0 <feof@plt+0x73150>  // b.any
  4769c8:	ldp	x8, x2, [x20, #272]
  4769cc:	mov	w1, #0xff                  	// #255
  4769d0:	mov	x0, x20
  4769d4:	strb	wzr, [x20, #255]
  4769d8:	blr	x8
  4769dc:	ldr	x9, [x20, #320]
  4769e0:	mov	x8, xzr
  4769e4:	str	xzr, [x20, #256]
  4769e8:	add	x9, x9, #0x1
  4769ec:	str	x9, [x20, #320]
  4769f0:	add	x9, x8, #0x1
  4769f4:	mov	w10, #0x28                  	// #40
  4769f8:	str	x9, [x20, #256]
  4769fc:	strb	w10, [x20, x8]
  476a00:	strb	w10, [x20, #264]
  476a04:	ldr	x22, [x22, #16]
  476a08:	cbz	x22, 476a80 <feof@plt+0x731e0>
  476a0c:	ldr	w8, [x22, #4]
  476a10:	cmp	w8, #0x1
  476a14:	b.gt	476a24 <feof@plt+0x73184>
  476a18:	ldr	w9, [x20, #308]
  476a1c:	cmp	w9, #0x401
  476a20:	b.lt	476a30 <feof@plt+0x73190>  // b.tstop
  476a24:	mov	w8, #0x1                   	// #1
  476a28:	str	w8, [x20, #304]
  476a2c:	b	476a80 <feof@plt+0x731e0>
  476a30:	add	w8, w8, #0x1
  476a34:	str	w8, [x22, #4]
  476a38:	ldr	x8, [x20, #328]
  476a3c:	add	w9, w9, #0x1
  476a40:	str	w9, [x20, #308]
  476a44:	mov	x9, sp
  476a48:	mov	x0, x20
  476a4c:	mov	w1, w21
  476a50:	mov	x2, x22
  476a54:	stp	x22, x8, [sp]
  476a58:	str	x9, [x20, #328]
  476a5c:	bl	46f9e8 <feof@plt+0x6c148>
  476a60:	ldr	x8, [sp, #8]
  476a64:	str	x8, [x20, #328]
  476a68:	ldr	w8, [x22, #4]
  476a6c:	sub	w8, w8, #0x1
  476a70:	str	w8, [x22, #4]
  476a74:	ldr	w8, [x20, #308]
  476a78:	sub	w8, w8, #0x1
  476a7c:	str	w8, [x20, #308]
  476a80:	ldr	x8, [x20, #256]
  476a84:	cmp	x8, #0xff
  476a88:	b.ne	476ab4 <feof@plt+0x73214>  // b.any
  476a8c:	ldp	x8, x2, [x20, #272]
  476a90:	mov	w1, #0xff                  	// #255
  476a94:	mov	x0, x20
  476a98:	strb	wzr, [x20, #255]
  476a9c:	blr	x8
  476aa0:	ldr	x9, [x20, #320]
  476aa4:	mov	x8, xzr
  476aa8:	str	xzr, [x20, #256]
  476aac:	add	x9, x9, #0x1
  476ab0:	str	x9, [x20, #320]
  476ab4:	add	x9, x8, #0x1
  476ab8:	mov	w10, #0x29                  	// #41
  476abc:	mov	w3, #0x1                   	// #1
  476ac0:	mov	x0, x20
  476ac4:	mov	w1, w21
  476ac8:	mov	x2, x19
  476acc:	str	x9, [x20, #256]
  476ad0:	strb	w10, [x20, x8]
  476ad4:	strb	w10, [x20, #264]
  476ad8:	bl	477cc8 <feof@plt+0x74428>
  476adc:	str	x23, [x20, #296]
  476ae0:	ldp	x20, x19, [sp, #64]
  476ae4:	ldp	x22, x21, [sp, #48]
  476ae8:	ldp	x24, x23, [sp, #32]
  476aec:	ldp	x29, x30, [sp, #16]
  476af0:	add	sp, sp, #0x50
  476af4:	ret
  476af8:	sub	sp, sp, #0x50
  476afc:	stp	x22, x21, [sp, #48]
  476b00:	stp	x20, x19, [sp, #64]
  476b04:	mov	x21, x2
  476b08:	mov	w20, w1
  476b0c:	mov	x19, x0
  476b10:	stp	x29, x30, [sp, #16]
  476b14:	str	x23, [sp, #32]
  476b18:	add	x29, sp, #0x10
  476b1c:	cbz	x3, 476c60 <feof@plt+0x733c0>
  476b20:	mov	x22, x3
  476b24:	mov	x8, x3
  476b28:	ldr	w9, [x8, #16]
  476b2c:	cbz	w9, 476b40 <feof@plt+0x732a0>
  476b30:	ldr	x8, [x8]
  476b34:	cbnz	x8, 476b28 <feof@plt+0x73288>
  476b38:	mov	w23, #0x1                   	// #1
  476b3c:	b	476b54 <feof@plt+0x732b4>
  476b40:	ldr	x8, [x8, #8]
  476b44:	ldr	w8, [x8]
  476b48:	cmp	w8, #0x2a
  476b4c:	cset	w23, ne  // ne = any
  476b50:	b.ne	476b70 <feof@plt+0x732d0>  // b.any
  476b54:	mov	x0, x19
  476b58:	mov	w1, w20
  476b5c:	mov	x2, x22
  476b60:	mov	w3, wzr
  476b64:	bl	477cc8 <feof@plt+0x74428>
  476b68:	cbnz	w23, 476c60 <feof@plt+0x733c0>
  476b6c:	b	476ca8 <feof@plt+0x73408>
  476b70:	ldr	x8, [x19, #256]
  476b74:	cmp	x8, #0xff
  476b78:	b.ne	476ba4 <feof@plt+0x73304>  // b.any
  476b7c:	ldp	x8, x2, [x19, #272]
  476b80:	mov	w1, #0xff                  	// #255
  476b84:	mov	x0, x19
  476b88:	strb	wzr, [x19, #255]
  476b8c:	blr	x8
  476b90:	ldr	x9, [x19, #320]
  476b94:	mov	x8, xzr
  476b98:	str	xzr, [x19, #256]
  476b9c:	add	x9, x9, #0x1
  476ba0:	str	x9, [x19, #320]
  476ba4:	add	x9, x8, #0x1
  476ba8:	mov	w10, #0x20                  	// #32
  476bac:	str	x9, [x19, #256]
  476bb0:	strb	w10, [x19, x8]
  476bb4:	ldr	x8, [x19, #256]
  476bb8:	strb	w10, [x19, #264]
  476bbc:	cmp	x8, #0xff
  476bc0:	b.ne	476bec <feof@plt+0x7334c>  // b.any
  476bc4:	ldp	x8, x2, [x19, #272]
  476bc8:	mov	w1, #0xff                  	// #255
  476bcc:	mov	x0, x19
  476bd0:	strb	wzr, [x19, #255]
  476bd4:	blr	x8
  476bd8:	ldr	x9, [x19, #320]
  476bdc:	mov	x8, xzr
  476be0:	str	xzr, [x19, #256]
  476be4:	add	x9, x9, #0x1
  476be8:	str	x9, [x19, #320]
  476bec:	add	x9, x8, #0x1
  476bf0:	mov	w10, #0x28                  	// #40
  476bf4:	mov	x0, x19
  476bf8:	mov	w1, w20
  476bfc:	mov	x2, x22
  476c00:	mov	w3, wzr
  476c04:	str	x9, [x19, #256]
  476c08:	strb	w10, [x19, x8]
  476c0c:	strb	w10, [x19, #264]
  476c10:	bl	477cc8 <feof@plt+0x74428>
  476c14:	ldr	x8, [x19, #256]
  476c18:	cmp	x8, #0xff
  476c1c:	b.ne	476c48 <feof@plt+0x733a8>  // b.any
  476c20:	ldp	x8, x2, [x19, #272]
  476c24:	mov	w1, #0xff                  	// #255
  476c28:	mov	x0, x19
  476c2c:	strb	wzr, [x19, #255]
  476c30:	blr	x8
  476c34:	ldr	x9, [x19, #320]
  476c38:	mov	x8, xzr
  476c3c:	str	xzr, [x19, #256]
  476c40:	add	x9, x9, #0x1
  476c44:	str	x9, [x19, #320]
  476c48:	add	x9, x8, #0x1
  476c4c:	mov	w10, #0x29                  	// #41
  476c50:	str	x9, [x19, #256]
  476c54:	strb	w10, [x19, x8]
  476c58:	strb	w10, [x19, #264]
  476c5c:	cbz	w23, 476ca8 <feof@plt+0x73408>
  476c60:	ldr	x8, [x19, #256]
  476c64:	cmp	x8, #0xff
  476c68:	b.ne	476c94 <feof@plt+0x733f4>  // b.any
  476c6c:	ldp	x8, x2, [x19, #272]
  476c70:	mov	w1, #0xff                  	// #255
  476c74:	mov	x0, x19
  476c78:	strb	wzr, [x19, #255]
  476c7c:	blr	x8
  476c80:	ldr	x9, [x19, #320]
  476c84:	mov	x8, xzr
  476c88:	str	xzr, [x19, #256]
  476c8c:	add	x9, x9, #0x1
  476c90:	str	x9, [x19, #320]
  476c94:	add	x9, x8, #0x1
  476c98:	mov	w10, #0x20                  	// #32
  476c9c:	str	x9, [x19, #256]
  476ca0:	strb	w10, [x19, x8]
  476ca4:	strb	w10, [x19, #264]
  476ca8:	ldr	x8, [x19, #256]
  476cac:	cmp	x8, #0xff
  476cb0:	b.ne	476cdc <feof@plt+0x7343c>  // b.any
  476cb4:	ldp	x8, x2, [x19, #272]
  476cb8:	mov	w1, #0xff                  	// #255
  476cbc:	mov	x0, x19
  476cc0:	strb	wzr, [x19, #255]
  476cc4:	blr	x8
  476cc8:	ldr	x9, [x19, #320]
  476ccc:	mov	x8, xzr
  476cd0:	str	xzr, [x19, #256]
  476cd4:	add	x9, x9, #0x1
  476cd8:	str	x9, [x19, #320]
  476cdc:	add	x9, x8, #0x1
  476ce0:	mov	w10, #0x5b                  	// #91
  476ce4:	str	x9, [x19, #256]
  476ce8:	strb	w10, [x19, x8]
  476cec:	strb	w10, [x19, #264]
  476cf0:	ldr	x21, [x21, #8]
  476cf4:	cbz	x21, 476d6c <feof@plt+0x734cc>
  476cf8:	ldr	w8, [x21, #4]
  476cfc:	cmp	w8, #0x1
  476d00:	b.gt	476d10 <feof@plt+0x73470>
  476d04:	ldr	w9, [x19, #308]
  476d08:	cmp	w9, #0x401
  476d0c:	b.lt	476d1c <feof@plt+0x7347c>  // b.tstop
  476d10:	mov	w8, #0x1                   	// #1
  476d14:	str	w8, [x19, #304]
  476d18:	b	476d6c <feof@plt+0x734cc>
  476d1c:	add	w8, w8, #0x1
  476d20:	str	w8, [x21, #4]
  476d24:	ldr	x8, [x19, #328]
  476d28:	add	w9, w9, #0x1
  476d2c:	str	w9, [x19, #308]
  476d30:	mov	x9, sp
  476d34:	mov	x0, x19
  476d38:	mov	w1, w20
  476d3c:	mov	x2, x21
  476d40:	stp	x21, x8, [sp]
  476d44:	str	x9, [x19, #328]
  476d48:	bl	46f9e8 <feof@plt+0x6c148>
  476d4c:	ldr	x8, [sp, #8]
  476d50:	str	x8, [x19, #328]
  476d54:	ldr	w8, [x21, #4]
  476d58:	sub	w8, w8, #0x1
  476d5c:	str	w8, [x21, #4]
  476d60:	ldr	w8, [x19, #308]
  476d64:	sub	w8, w8, #0x1
  476d68:	str	w8, [x19, #308]
  476d6c:	ldr	x8, [x19, #256]
  476d70:	cmp	x8, #0xff
  476d74:	b.ne	476da0 <feof@plt+0x73500>  // b.any
  476d78:	ldp	x8, x2, [x19, #272]
  476d7c:	mov	w1, #0xff                  	// #255
  476d80:	mov	x0, x19
  476d84:	strb	wzr, [x19, #255]
  476d88:	blr	x8
  476d8c:	ldr	x9, [x19, #320]
  476d90:	mov	x8, xzr
  476d94:	str	xzr, [x19, #256]
  476d98:	add	x9, x9, #0x1
  476d9c:	str	x9, [x19, #320]
  476da0:	add	x9, x8, #0x1
  476da4:	mov	w10, #0x5d                  	// #93
  476da8:	str	x9, [x19, #256]
  476dac:	strb	w10, [x19, x8]
  476db0:	strb	w10, [x19, #264]
  476db4:	ldp	x20, x19, [sp, #64]
  476db8:	ldp	x22, x21, [sp, #48]
  476dbc:	ldr	x23, [sp, #32]
  476dc0:	ldp	x29, x30, [sp, #16]
  476dc4:	add	sp, sp, #0x50
  476dc8:	ret
  476dcc:	stp	x29, x30, [sp, #-48]!
  476dd0:	str	x21, [sp, #16]
  476dd4:	stp	x20, x19, [sp, #32]
  476dd8:	mov	x29, sp
  476ddc:	cbz	x1, 476e90 <feof@plt+0x735f0>
  476de0:	adrp	x21, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  476de4:	mov	x19, x1
  476de8:	mov	x20, x0
  476dec:	add	x21, x21, #0xcb8
  476df0:	b	476e0c <feof@plt+0x7356c>
  476df4:	ldr	x1, [x19, #8]
  476df8:	mov	x0, x20
  476dfc:	bl	476dcc <feof@plt+0x7352c>
  476e00:	cbnz	x0, 476e94 <feof@plt+0x735f4>
  476e04:	ldr	x19, [x19, #16]
  476e08:	cbz	x19, 476e90 <feof@plt+0x735f0>
  476e0c:	ldr	w8, [x19]
  476e10:	cmp	w8, #0x4c
  476e14:	b.hi	476df4 <feof@plt+0x73554>  // b.pmore
  476e18:	adr	x9, 476df4 <feof@plt+0x73554>
  476e1c:	ldrb	w10, [x21, x8]
  476e20:	add	x9, x9, x10, lsl #2
  476e24:	mov	x0, xzr
  476e28:	br	x9
  476e2c:	ldr	x8, [x20, #288]
  476e30:	cbz	x8, 476e6c <feof@plt+0x735cc>
  476e34:	ldr	x9, [x8, #8]
  476e38:	ldr	w8, [x19, #8]
  476e3c:	ldr	x0, [x9, #16]
  476e40:	tbnz	w8, #31, 476e80 <feof@plt+0x735e0>
  476e44:	cbz	x0, 476e90 <feof@plt+0x735f0>
  476e48:	ldr	w9, [x0]
  476e4c:	cmp	w9, #0x2f
  476e50:	b.ne	476e90 <feof@plt+0x735f0>  // b.any
  476e54:	subs	w9, w8, #0x1
  476e58:	b.lt	476e78 <feof@plt+0x735d8>  // b.tstop
  476e5c:	ldr	x0, [x0, #16]
  476e60:	mov	w8, w9
  476e64:	cbnz	x0, 476e48 <feof@plt+0x735a8>
  476e68:	b	476e90 <feof@plt+0x735f0>
  476e6c:	mov	w8, #0x1                   	// #1
  476e70:	str	w8, [x20, #304]
  476e74:	b	476e90 <feof@plt+0x735f0>
  476e78:	cbnz	w8, 476e90 <feof@plt+0x735f0>
  476e7c:	ldr	x0, [x0, #8]
  476e80:	cbz	x0, 476e90 <feof@plt+0x735f0>
  476e84:	ldr	w8, [x0]
  476e88:	cmp	w8, #0x2f
  476e8c:	b.eq	476e94 <feof@plt+0x735f4>  // b.none
  476e90:	mov	x0, xzr
  476e94:	ldp	x20, x19, [sp, #32]
  476e98:	ldr	x21, [sp, #16]
  476e9c:	ldp	x29, x30, [sp], #48
  476ea0:	ret
  476ea4:	sub	sp, sp, #0x60
  476ea8:	stp	x29, x30, [sp, #16]
  476eac:	stp	x26, x25, [sp, #32]
  476eb0:	stp	x24, x23, [sp, #48]
  476eb4:	stp	x22, x21, [sp, #64]
  476eb8:	stp	x20, x19, [sp, #80]
  476ebc:	ldr	x8, [x2, #8]
  476ec0:	add	x29, sp, #0x10
  476ec4:	ldr	x8, [x8, #8]
  476ec8:	ldr	x8, [x8]
  476ecc:	ldrb	w9, [x8]
  476ed0:	cmp	w9, #0x66
  476ed4:	b.ne	476efc <feof@plt+0x7365c>  // b.any
  476ed8:	ldr	x9, [x2, #16]
  476edc:	mov	w20, w1
  476ee0:	mov	x19, x0
  476ee4:	ldp	x21, x22, [x9, #8]
  476ee8:	ldr	w10, [x22]
  476eec:	cmp	w10, #0x3c
  476ef0:	b.ne	476f04 <feof@plt+0x73664>  // b.any
  476ef4:	ldp	x22, x23, [x22, #8]
  476ef8:	b	476f08 <feof@plt+0x73668>
  476efc:	mov	w0, wzr
  476f00:	b	477a44 <feof@plt+0x741a4>
  476f04:	mov	x23, xzr
  476f08:	mov	w9, #0xffffffff            	// #-1
  476f0c:	ldr	w24, [x19, #316]
  476f10:	str	w9, [x19, #316]
  476f14:	ldrb	w8, [x8, #1]
  476f18:	sub	w8, w8, #0x4c
  476f1c:	cmp	w8, #0x26
  476f20:	b.hi	477a3c <feof@plt+0x7419c>  // b.pmore
  476f24:	adrp	x9, 4d8000 <_obstack_memory_used@@Base+0x5c2fc>
  476f28:	add	x9, x9, #0xd06
  476f2c:	adr	x10, 476f3c <feof@plt+0x7369c>
  476f30:	ldrh	w11, [x9, x8, lsl #1]
  476f34:	add	x10, x10, x11, lsl #2
  476f38:	br	x10
  476f3c:	ldr	x8, [x19, #256]
  476f40:	cmp	x8, #0xff
  476f44:	b.ne	476f70 <feof@plt+0x736d0>  // b.any
  476f48:	ldp	x8, x2, [x19, #272]
  476f4c:	mov	w1, #0xff                  	// #255
  476f50:	mov	x0, x19
  476f54:	strb	wzr, [x19, #255]
  476f58:	blr	x8
  476f5c:	ldr	x9, [x19, #320]
  476f60:	mov	x8, xzr
  476f64:	str	xzr, [x19, #256]
  476f68:	add	x9, x9, #0x1
  476f6c:	str	x9, [x19, #320]
  476f70:	add	x9, x8, #0x1
  476f74:	mov	w10, #0x28                  	// #40
  476f78:	str	x9, [x19, #256]
  476f7c:	strb	w10, [x19, x8]
  476f80:	strb	w10, [x19, #264]
  476f84:	ldr	w8, [x22]
  476f88:	cmp	w8, #0x31
  476f8c:	b.hi	477268 <feof@plt+0x739c8>  // b.pmore
  476f90:	mov	w9, #0x1                   	// #1
  476f94:	lsl	x8, x9, x8
  476f98:	mov	x9, #0x43                  	// #67
  476f9c:	movk	x9, #0x2, lsl #48
  476fa0:	tst	x8, x9
  476fa4:	b.eq	477268 <feof@plt+0x739c8>  // b.none
  476fa8:	ldr	w8, [x22, #4]
  476fac:	cmp	w8, #0x1
  476fb0:	b.gt	476fc0 <feof@plt+0x73720>
  476fb4:	ldr	w9, [x19, #308]
  476fb8:	cmp	w9, #0x401
  476fbc:	b.lt	477214 <feof@plt+0x73974>  // b.tstop
  476fc0:	mov	w8, #0x1                   	// #1
  476fc4:	str	w8, [x19, #304]
  476fc8:	b	4775a8 <feof@plt+0x73d08>
  476fcc:	ldr	x8, [x19, #256]
  476fd0:	cmp	x8, #0xff
  476fd4:	b.ne	477000 <feof@plt+0x73760>  // b.any
  476fd8:	ldp	x8, x2, [x19, #272]
  476fdc:	mov	w1, #0xff                  	// #255
  476fe0:	mov	x0, x19
  476fe4:	strb	wzr, [x19, #255]
  476fe8:	blr	x8
  476fec:	ldr	x9, [x19, #320]
  476ff0:	mov	x8, xzr
  476ff4:	str	xzr, [x19, #256]
  476ff8:	add	x9, x9, #0x1
  476ffc:	str	x9, [x19, #320]
  477000:	add	x9, x8, #0x1
  477004:	mov	w10, #0x28                  	// #40
  477008:	str	x9, [x19, #256]
  47700c:	strb	w10, [x19, x8]
  477010:	ldr	x8, [x19, #256]
  477014:	strb	w10, [x19, #264]
  477018:	cmp	x8, #0xff
  47701c:	b.ne	477048 <feof@plt+0x737a8>  // b.any
  477020:	ldp	x8, x2, [x19, #272]
  477024:	mov	w1, #0xff                  	// #255
  477028:	mov	x0, x19
  47702c:	strb	wzr, [x19, #255]
  477030:	blr	x8
  477034:	ldr	x9, [x19, #320]
  477038:	mov	x8, xzr
  47703c:	str	xzr, [x19, #256]
  477040:	add	x9, x9, #0x1
  477044:	str	x9, [x19, #320]
  477048:	add	x9, x8, #0x1
  47704c:	mov	w23, #0x2e                  	// #46
  477050:	str	x9, [x19, #256]
  477054:	strb	w23, [x19, x8]
  477058:	ldr	x8, [x19, #256]
  47705c:	strb	w23, [x19, #264]
  477060:	cmp	x8, #0xff
  477064:	b.ne	477090 <feof@plt+0x737f0>  // b.any
  477068:	ldp	x8, x2, [x19, #272]
  47706c:	mov	w1, #0xff                  	// #255
  477070:	mov	x0, x19
  477074:	strb	wzr, [x19, #255]
  477078:	blr	x8
  47707c:	ldr	x9, [x19, #320]
  477080:	mov	x8, xzr
  477084:	str	xzr, [x19, #256]
  477088:	add	x9, x9, #0x1
  47708c:	str	x9, [x19, #320]
  477090:	add	x9, x8, #0x1
  477094:	str	x9, [x19, #256]
  477098:	strb	w23, [x19, x8]
  47709c:	ldr	x8, [x19, #256]
  4770a0:	strb	w23, [x19, #264]
  4770a4:	cmp	x8, #0xff
  4770a8:	b.ne	4770d4 <feof@plt+0x73834>  // b.any
  4770ac:	ldp	x8, x2, [x19, #272]
  4770b0:	mov	w1, #0xff                  	// #255
  4770b4:	mov	x0, x19
  4770b8:	strb	wzr, [x19, #255]
  4770bc:	blr	x8
  4770c0:	ldr	x9, [x19, #320]
  4770c4:	mov	x8, xzr
  4770c8:	str	xzr, [x19, #256]
  4770cc:	add	x9, x9, #0x1
  4770d0:	str	x9, [x19, #320]
  4770d4:	add	x9, x8, #0x1
  4770d8:	mov	w10, #0x2e                  	// #46
  4770dc:	str	x9, [x19, #256]
  4770e0:	strb	w10, [x19, x8]
  4770e4:	strb	w10, [x19, #264]
  4770e8:	ldr	w8, [x21]
  4770ec:	cmp	w8, #0x32
  4770f0:	b.ne	4771f0 <feof@plt+0x73950>  // b.any
  4770f4:	ldr	x8, [x21, #8]
  4770f8:	ldrsw	x21, [x8, #16]
  4770fc:	cbz	w21, 4773e4 <feof@plt+0x73b44>
  477100:	ldr	x23, [x8, #8]
  477104:	b	477124 <feof@plt+0x73884>
  477108:	add	x9, x8, #0x1
  47710c:	subs	x21, x21, #0x1
  477110:	add	x23, x23, #0x1
  477114:	str	x9, [x19, #256]
  477118:	strb	w25, [x19, x8]
  47711c:	strb	w25, [x19, #264]
  477120:	b.eq	4773e4 <feof@plt+0x73b44>  // b.none
  477124:	ldr	x8, [x19, #256]
  477128:	ldrb	w25, [x23]
  47712c:	cmp	x8, #0xff
  477130:	b.ne	477108 <feof@plt+0x73868>  // b.any
  477134:	ldp	x8, x2, [x19, #272]
  477138:	mov	w1, #0xff                  	// #255
  47713c:	mov	x0, x19
  477140:	strb	wzr, [x19, #255]
  477144:	blr	x8
  477148:	ldr	x9, [x19, #320]
  47714c:	mov	x8, xzr
  477150:	str	xzr, [x19, #256]
  477154:	add	x9, x9, #0x1
  477158:	str	x9, [x19, #320]
  47715c:	b	477108 <feof@plt+0x73868>
  477160:	ldr	x8, [x19, #256]
  477164:	cmp	x8, #0xff
  477168:	b.ne	477194 <feof@plt+0x738f4>  // b.any
  47716c:	ldp	x8, x2, [x19, #272]
  477170:	mov	w1, #0xff                  	// #255
  477174:	mov	x0, x19
  477178:	strb	wzr, [x19, #255]
  47717c:	blr	x8
  477180:	ldr	x9, [x19, #320]
  477184:	mov	x8, xzr
  477188:	str	xzr, [x19, #256]
  47718c:	add	x9, x9, #0x1
  477190:	str	x9, [x19, #320]
  477194:	add	x9, x8, #0x1
  477198:	mov	w10, #0x28                  	// #40
  47719c:	str	x9, [x19, #256]
  4771a0:	strb	w10, [x19, x8]
  4771a4:	strb	w10, [x19, #264]
  4771a8:	ldr	w8, [x22]
  4771ac:	cmp	w8, #0x31
  4771b0:	b.hi	4772d4 <feof@plt+0x73a34>  // b.pmore
  4771b4:	mov	w9, #0x1                   	// #1
  4771b8:	lsl	x8, x9, x8
  4771bc:	mov	x9, #0x43                  	// #67
  4771c0:	movk	x9, #0x2, lsl #48
  4771c4:	tst	x8, x9
  4771c8:	b.eq	4772d4 <feof@plt+0x73a34>  // b.none
  4771cc:	ldr	w8, [x22, #4]
  4771d0:	cmp	w8, #0x1
  4771d4:	b.gt	4771e4 <feof@plt+0x73944>
  4771d8:	ldr	w9, [x19, #308]
  4771dc:	cmp	w9, #0x401
  4771e0:	b.lt	477340 <feof@plt+0x73aa0>  // b.tstop
  4771e4:	mov	w8, #0x1                   	// #1
  4771e8:	str	w8, [x19, #304]
  4771ec:	b	477af8 <feof@plt+0x74258>
  4771f0:	ldr	w8, [x21, #4]
  4771f4:	cmp	w8, #0x1
  4771f8:	b.gt	477208 <feof@plt+0x73968>
  4771fc:	ldr	w9, [x19, #308]
  477200:	cmp	w9, #0x401
  477204:	b.lt	477394 <feof@plt+0x73af4>  // b.tstop
  477208:	mov	w8, #0x1                   	// #1
  47720c:	str	w8, [x19, #304]
  477210:	b	4773e4 <feof@plt+0x73b44>
  477214:	add	w8, w8, #0x1
  477218:	str	w8, [x22, #4]
  47721c:	ldr	x8, [x19, #328]
  477220:	add	w9, w9, #0x1
  477224:	str	w9, [x19, #308]
  477228:	mov	x9, sp
  47722c:	mov	x0, x19
  477230:	mov	w1, w20
  477234:	mov	x2, x22
  477238:	stp	x22, x8, [sp]
  47723c:	str	x9, [x19, #328]
  477240:	bl	46f9e8 <feof@plt+0x6c148>
  477244:	ldr	x8, [sp, #8]
  477248:	str	x8, [x19, #328]
  47724c:	ldr	w8, [x22, #4]
  477250:	sub	w8, w8, #0x1
  477254:	str	w8, [x22, #4]
  477258:	ldr	w8, [x19, #308]
  47725c:	sub	w8, w8, #0x1
  477260:	str	w8, [x19, #308]
  477264:	b	4775a8 <feof@plt+0x73d08>
  477268:	ldr	x8, [x19, #256]
  47726c:	cmp	x8, #0xff
  477270:	b.ne	47729c <feof@plt+0x739fc>  // b.any
  477274:	ldp	x8, x2, [x19, #272]
  477278:	mov	w1, #0xff                  	// #255
  47727c:	mov	x0, x19
  477280:	strb	wzr, [x19, #255]
  477284:	blr	x8
  477288:	ldr	x9, [x19, #320]
  47728c:	mov	x8, xzr
  477290:	str	xzr, [x19, #256]
  477294:	add	x9, x9, #0x1
  477298:	str	x9, [x19, #320]
  47729c:	add	x9, x8, #0x1
  4772a0:	mov	w10, #0x28                  	// #40
  4772a4:	str	x9, [x19, #256]
  4772a8:	strb	w10, [x19, x8]
  4772ac:	strb	w10, [x19, #264]
  4772b0:	ldr	w8, [x22, #4]
  4772b4:	cmp	w8, #0x1
  4772b8:	b.gt	4772c8 <feof@plt+0x73a28>
  4772bc:	ldr	w9, [x19, #308]
  4772c0:	cmp	w9, #0x401
  4772c4:	b.lt	477510 <feof@plt+0x73c70>  // b.tstop
  4772c8:	mov	w8, #0x1                   	// #1
  4772cc:	str	w8, [x19, #304]
  4772d0:	b	477560 <feof@plt+0x73cc0>
  4772d4:	ldr	x8, [x19, #256]
  4772d8:	cmp	x8, #0xff
  4772dc:	b.ne	477308 <feof@plt+0x73a68>  // b.any
  4772e0:	ldp	x8, x2, [x19, #272]
  4772e4:	mov	w1, #0xff                  	// #255
  4772e8:	mov	x0, x19
  4772ec:	strb	wzr, [x19, #255]
  4772f0:	blr	x8
  4772f4:	ldr	x9, [x19, #320]
  4772f8:	mov	x8, xzr
  4772fc:	str	xzr, [x19, #256]
  477300:	add	x9, x9, #0x1
  477304:	str	x9, [x19, #320]
  477308:	add	x9, x8, #0x1
  47730c:	mov	w10, #0x28                  	// #40
  477310:	str	x9, [x19, #256]
  477314:	strb	w10, [x19, x8]
  477318:	strb	w10, [x19, #264]
  47731c:	ldr	w8, [x22, #4]
  477320:	cmp	w8, #0x1
  477324:	b.gt	477334 <feof@plt+0x73a94>
  477328:	ldr	w9, [x19, #308]
  47732c:	cmp	w9, #0x401
  477330:	b.lt	477a60 <feof@plt+0x741c0>  // b.tstop
  477334:	mov	w8, #0x1                   	// #1
  477338:	str	w8, [x19, #304]
  47733c:	b	477ab0 <feof@plt+0x74210>
  477340:	add	w8, w8, #0x1
  477344:	str	w8, [x22, #4]
  477348:	ldr	x8, [x19, #328]
  47734c:	add	w9, w9, #0x1
  477350:	str	w9, [x19, #308]
  477354:	mov	x9, sp
  477358:	mov	x0, x19
  47735c:	mov	w1, w20
  477360:	mov	x2, x22
  477364:	stp	x22, x8, [sp]
  477368:	str	x9, [x19, #328]
  47736c:	bl	46f9e8 <feof@plt+0x6c148>
  477370:	ldr	x8, [sp, #8]
  477374:	str	x8, [x19, #328]
  477378:	ldr	w8, [x22, #4]
  47737c:	sub	w8, w8, #0x1
  477380:	str	w8, [x22, #4]
  477384:	ldr	w8, [x19, #308]
  477388:	sub	w8, w8, #0x1
  47738c:	str	w8, [x19, #308]
  477390:	b	477af8 <feof@plt+0x74258>
  477394:	add	w8, w8, #0x1
  477398:	str	w8, [x21, #4]
  47739c:	ldr	x8, [x19, #328]
  4773a0:	add	w9, w9, #0x1
  4773a4:	str	w9, [x19, #308]
  4773a8:	mov	x9, sp
  4773ac:	mov	x0, x19
  4773b0:	mov	w1, w20
  4773b4:	mov	x2, x21
  4773b8:	stp	x21, x8, [sp]
  4773bc:	str	x9, [x19, #328]
  4773c0:	bl	46f9e8 <feof@plt+0x6c148>
  4773c4:	ldr	x8, [sp, #8]
  4773c8:	str	x8, [x19, #328]
  4773cc:	ldr	w8, [x21, #4]
  4773d0:	sub	w8, w8, #0x1
  4773d4:	str	w8, [x21, #4]
  4773d8:	ldr	w8, [x19, #308]
  4773dc:	sub	w8, w8, #0x1
  4773e0:	str	w8, [x19, #308]
  4773e4:	ldr	w8, [x22]
  4773e8:	cmp	w8, #0x31
  4773ec:	b.hi	477468 <feof@plt+0x73bc8>  // b.pmore
  4773f0:	mov	w9, #0x1                   	// #1
  4773f4:	lsl	x8, x9, x8
  4773f8:	mov	x9, #0x43                  	// #67
  4773fc:	movk	x9, #0x2, lsl #48
  477400:	tst	x8, x9
  477404:	b.eq	477468 <feof@plt+0x73bc8>  // b.none
  477408:	ldr	w8, [x22, #4]
  47740c:	cmp	w8, #0x1
  477410:	b.gt	477890 <feof@plt+0x73ff0>
  477414:	ldr	w9, [x19, #308]
  477418:	cmp	w9, #0x401
  47741c:	b.ge	477890 <feof@plt+0x73ff0>  // b.tcont
  477420:	add	w8, w8, #0x1
  477424:	str	w8, [x22, #4]
  477428:	ldr	x8, [x19, #328]
  47742c:	add	w9, w9, #0x1
  477430:	str	w9, [x19, #308]
  477434:	mov	x9, sp
  477438:	mov	x0, x19
  47743c:	mov	w1, w20
  477440:	mov	x2, x22
  477444:	stp	x22, x8, [sp]
  477448:	str	x9, [x19, #328]
  47744c:	bl	46f9e8 <feof@plt+0x6c148>
  477450:	ldr	x8, [sp, #8]
  477454:	str	x8, [x19, #328]
  477458:	ldr	w8, [x22, #4]
  47745c:	sub	w8, w8, #0x1
  477460:	str	w8, [x22, #4]
  477464:	b	4778e0 <feof@plt+0x74040>
  477468:	ldr	x8, [x19, #256]
  47746c:	cmp	x8, #0xff
  477470:	b.ne	47749c <feof@plt+0x73bfc>  // b.any
  477474:	ldp	x8, x2, [x19, #272]
  477478:	mov	w1, #0xff                  	// #255
  47747c:	mov	x0, x19
  477480:	strb	wzr, [x19, #255]
  477484:	blr	x8
  477488:	ldr	x9, [x19, #320]
  47748c:	mov	x8, xzr
  477490:	str	xzr, [x19, #256]
  477494:	add	x9, x9, #0x1
  477498:	str	x9, [x19, #320]
  47749c:	add	x9, x8, #0x1
  4774a0:	mov	w10, #0x28                  	// #40
  4774a4:	str	x9, [x19, #256]
  4774a8:	strb	w10, [x19, x8]
  4774ac:	strb	w10, [x19, #264]
  4774b0:	ldr	w8, [x22, #4]
  4774b4:	cmp	w8, #0x1
  4774b8:	b.gt	477950 <feof@plt+0x740b0>
  4774bc:	ldr	w9, [x19, #308]
  4774c0:	cmp	w9, #0x401
  4774c4:	b.ge	477950 <feof@plt+0x740b0>  // b.tcont
  4774c8:	add	w8, w8, #0x1
  4774cc:	str	w8, [x22, #4]
  4774d0:	ldr	x8, [x19, #328]
  4774d4:	add	w9, w9, #0x1
  4774d8:	str	w9, [x19, #308]
  4774dc:	mov	x9, sp
  4774e0:	mov	x0, x19
  4774e4:	mov	w1, w20
  4774e8:	mov	x2, x22
  4774ec:	stp	x22, x8, [sp]
  4774f0:	str	x9, [x19, #328]
  4774f4:	bl	46f9e8 <feof@plt+0x6c148>
  4774f8:	ldr	x8, [sp, #8]
  4774fc:	str	x8, [x19, #328]
  477500:	ldr	w8, [x22, #4]
  477504:	sub	w8, w8, #0x1
  477508:	str	w8, [x22, #4]
  47750c:	b	4779a0 <feof@plt+0x74100>
  477510:	add	w8, w8, #0x1
  477514:	str	w8, [x22, #4]
  477518:	ldr	x8, [x19, #328]
  47751c:	add	w9, w9, #0x1
  477520:	str	w9, [x19, #308]
  477524:	mov	x9, sp
  477528:	mov	x0, x19
  47752c:	mov	w1, w20
  477530:	mov	x2, x22
  477534:	stp	x22, x8, [sp]
  477538:	str	x9, [x19, #328]
  47753c:	bl	46f9e8 <feof@plt+0x6c148>
  477540:	ldr	x8, [sp, #8]
  477544:	str	x8, [x19, #328]
  477548:	ldr	w8, [x22, #4]
  47754c:	sub	w8, w8, #0x1
  477550:	str	w8, [x22, #4]
  477554:	ldr	w8, [x19, #308]
  477558:	sub	w8, w8, #0x1
  47755c:	str	w8, [x19, #308]
  477560:	ldr	x8, [x19, #256]
  477564:	cmp	x8, #0xff
  477568:	b.ne	477594 <feof@plt+0x73cf4>  // b.any
  47756c:	ldp	x8, x2, [x19, #272]
  477570:	mov	w1, #0xff                  	// #255
  477574:	mov	x0, x19
  477578:	strb	wzr, [x19, #255]
  47757c:	blr	x8
  477580:	ldr	x9, [x19, #320]
  477584:	mov	x8, xzr
  477588:	str	xzr, [x19, #256]
  47758c:	add	x9, x9, #0x1
  477590:	str	x9, [x19, #320]
  477594:	add	x9, x8, #0x1
  477598:	mov	w10, #0x29                  	// #41
  47759c:	str	x9, [x19, #256]
  4775a0:	strb	w10, [x19, x8]
  4775a4:	strb	w10, [x19, #264]
  4775a8:	ldr	w8, [x21]
  4775ac:	cmp	w8, #0x32
  4775b0:	b.ne	477620 <feof@plt+0x73d80>  // b.any
  4775b4:	ldr	x8, [x21, #8]
  4775b8:	ldrsw	x22, [x8, #16]
  4775bc:	cbz	w22, 477694 <feof@plt+0x73df4>
  4775c0:	ldr	x25, [x8, #8]
  4775c4:	b	4775e4 <feof@plt+0x73d44>
  4775c8:	add	x9, x8, #0x1
  4775cc:	subs	x22, x22, #0x1
  4775d0:	add	x25, x25, #0x1
  4775d4:	str	x9, [x19, #256]
  4775d8:	strb	w26, [x19, x8]
  4775dc:	strb	w26, [x19, #264]
  4775e0:	b.eq	477694 <feof@plt+0x73df4>  // b.none
  4775e4:	ldr	x8, [x19, #256]
  4775e8:	ldrb	w26, [x25]
  4775ec:	cmp	x8, #0xff
  4775f0:	b.ne	4775c8 <feof@plt+0x73d28>  // b.any
  4775f4:	ldp	x8, x2, [x19, #272]
  4775f8:	mov	w1, #0xff                  	// #255
  4775fc:	mov	x0, x19
  477600:	strb	wzr, [x19, #255]
  477604:	blr	x8
  477608:	ldr	x9, [x19, #320]
  47760c:	mov	x8, xzr
  477610:	str	xzr, [x19, #256]
  477614:	add	x9, x9, #0x1
  477618:	str	x9, [x19, #320]
  47761c:	b	4775c8 <feof@plt+0x73d28>
  477620:	ldr	w8, [x21, #4]
  477624:	cmp	w8, #0x1
  477628:	b.gt	477638 <feof@plt+0x73d98>
  47762c:	ldr	w9, [x19, #308]
  477630:	cmp	w9, #0x401
  477634:	b.lt	477644 <feof@plt+0x73da4>  // b.tstop
  477638:	mov	w8, #0x1                   	// #1
  47763c:	str	w8, [x19, #304]
  477640:	b	477694 <feof@plt+0x73df4>
  477644:	add	w8, w8, #0x1
  477648:	str	w8, [x21, #4]
  47764c:	ldr	x8, [x19, #328]
  477650:	add	w9, w9, #0x1
  477654:	str	w9, [x19, #308]
  477658:	mov	x9, sp
  47765c:	mov	x0, x19
  477660:	mov	w1, w20
  477664:	mov	x2, x21
  477668:	stp	x21, x8, [sp]
  47766c:	str	x9, [x19, #328]
  477670:	bl	46f9e8 <feof@plt+0x6c148>
  477674:	ldr	x8, [sp, #8]
  477678:	str	x8, [x19, #328]
  47767c:	ldr	w8, [x21, #4]
  477680:	sub	w8, w8, #0x1
  477684:	str	w8, [x21, #4]
  477688:	ldr	w8, [x19, #308]
  47768c:	sub	w8, w8, #0x1
  477690:	str	w8, [x19, #308]
  477694:	ldr	x8, [x19, #256]
  477698:	cmp	x8, #0xff
  47769c:	b.ne	4776c8 <feof@plt+0x73e28>  // b.any
  4776a0:	ldp	x8, x2, [x19, #272]
  4776a4:	mov	w1, #0xff                  	// #255
  4776a8:	mov	x0, x19
  4776ac:	strb	wzr, [x19, #255]
  4776b0:	blr	x8
  4776b4:	ldr	x9, [x19, #320]
  4776b8:	mov	x8, xzr
  4776bc:	str	xzr, [x19, #256]
  4776c0:	add	x9, x9, #0x1
  4776c4:	str	x9, [x19, #320]
  4776c8:	add	x9, x8, #0x1
  4776cc:	mov	w22, #0x2e                  	// #46
  4776d0:	str	x9, [x19, #256]
  4776d4:	strb	w22, [x19, x8]
  4776d8:	ldr	x8, [x19, #256]
  4776dc:	strb	w22, [x19, #264]
  4776e0:	cmp	x8, #0xff
  4776e4:	b.ne	477710 <feof@plt+0x73e70>  // b.any
  4776e8:	ldp	x8, x2, [x19, #272]
  4776ec:	mov	w1, #0xff                  	// #255
  4776f0:	mov	x0, x19
  4776f4:	strb	wzr, [x19, #255]
  4776f8:	blr	x8
  4776fc:	ldr	x9, [x19, #320]
  477700:	mov	x8, xzr
  477704:	str	xzr, [x19, #256]
  477708:	add	x9, x9, #0x1
  47770c:	str	x9, [x19, #320]
  477710:	add	x9, x8, #0x1
  477714:	str	x9, [x19, #256]
  477718:	strb	w22, [x19, x8]
  47771c:	ldr	x8, [x19, #256]
  477720:	strb	w22, [x19, #264]
  477724:	cmp	x8, #0xff
  477728:	b.ne	477754 <feof@plt+0x73eb4>  // b.any
  47772c:	ldp	x8, x2, [x19, #272]
  477730:	mov	w1, #0xff                  	// #255
  477734:	mov	x0, x19
  477738:	strb	wzr, [x19, #255]
  47773c:	blr	x8
  477740:	ldr	x9, [x19, #320]
  477744:	mov	x8, xzr
  477748:	str	xzr, [x19, #256]
  47774c:	add	x9, x9, #0x1
  477750:	str	x9, [x19, #320]
  477754:	add	x9, x8, #0x1
  477758:	mov	w10, #0x2e                  	// #46
  47775c:	str	x9, [x19, #256]
  477760:	strb	w10, [x19, x8]
  477764:	strb	w10, [x19, #264]
  477768:	ldr	w8, [x21]
  47776c:	cmp	w8, #0x32
  477770:	b.ne	4777e0 <feof@plt+0x73f40>  // b.any
  477774:	ldr	x8, [x21, #8]
  477778:	ldrsw	x21, [x8, #16]
  47777c:	cbz	w21, 477854 <feof@plt+0x73fb4>
  477780:	ldr	x22, [x8, #8]
  477784:	b	4777a4 <feof@plt+0x73f04>
  477788:	add	x9, x8, #0x1
  47778c:	subs	x21, x21, #0x1
  477790:	add	x22, x22, #0x1
  477794:	str	x9, [x19, #256]
  477798:	strb	w25, [x19, x8]
  47779c:	strb	w25, [x19, #264]
  4777a0:	b.eq	477854 <feof@plt+0x73fb4>  // b.none
  4777a4:	ldr	x8, [x19, #256]
  4777a8:	ldrb	w25, [x22]
  4777ac:	cmp	x8, #0xff
  4777b0:	b.ne	477788 <feof@plt+0x73ee8>  // b.any
  4777b4:	ldp	x8, x2, [x19, #272]
  4777b8:	mov	w1, #0xff                  	// #255
  4777bc:	mov	x0, x19
  4777c0:	strb	wzr, [x19, #255]
  4777c4:	blr	x8
  4777c8:	ldr	x9, [x19, #320]
  4777cc:	mov	x8, xzr
  4777d0:	str	xzr, [x19, #256]
  4777d4:	add	x9, x9, #0x1
  4777d8:	str	x9, [x19, #320]
  4777dc:	b	477788 <feof@plt+0x73ee8>
  4777e0:	ldr	w8, [x21, #4]
  4777e4:	cmp	w8, #0x1
  4777e8:	b.gt	4777f8 <feof@plt+0x73f58>
  4777ec:	ldr	w9, [x19, #308]
  4777f0:	cmp	w9, #0x401
  4777f4:	b.lt	477804 <feof@plt+0x73f64>  // b.tstop
  4777f8:	mov	w8, #0x1                   	// #1
  4777fc:	str	w8, [x19, #304]
  477800:	b	477854 <feof@plt+0x73fb4>
  477804:	add	w8, w8, #0x1
  477808:	str	w8, [x21, #4]
  47780c:	ldr	x8, [x19, #328]
  477810:	add	w9, w9, #0x1
  477814:	str	w9, [x19, #308]
  477818:	mov	x9, sp
  47781c:	mov	x0, x19
  477820:	mov	w1, w20
  477824:	mov	x2, x21
  477828:	stp	x21, x8, [sp]
  47782c:	str	x9, [x19, #328]
  477830:	bl	46f9e8 <feof@plt+0x6c148>
  477834:	ldr	x8, [sp, #8]
  477838:	str	x8, [x19, #328]
  47783c:	ldr	w8, [x21, #4]
  477840:	sub	w8, w8, #0x1
  477844:	str	w8, [x21, #4]
  477848:	ldr	w8, [x19, #308]
  47784c:	sub	w8, w8, #0x1
  477850:	str	w8, [x19, #308]
  477854:	ldr	w8, [x23]
  477858:	cmp	w8, #0x31
  47785c:	b.hi	4778f0 <feof@plt+0x74050>  // b.pmore
  477860:	mov	w9, #0x1                   	// #1
  477864:	lsl	x8, x9, x8
  477868:	mov	x9, #0x43                  	// #67
  47786c:	movk	x9, #0x2, lsl #48
  477870:	tst	x8, x9
  477874:	b.eq	4778f0 <feof@plt+0x74050>  // b.none
  477878:	ldr	w8, [x23, #4]
  47787c:	cmp	w8, #0x1
  477880:	b.gt	477890 <feof@plt+0x73ff0>
  477884:	ldr	w9, [x19, #308]
  477888:	cmp	w9, #0x401
  47788c:	b.lt	47789c <feof@plt+0x73ffc>  // b.tstop
  477890:	mov	w8, #0x1                   	// #1
  477894:	str	w8, [x19, #304]
  477898:	b	4779f4 <feof@plt+0x74154>
  47789c:	add	w8, w8, #0x1
  4778a0:	str	w8, [x23, #4]
  4778a4:	ldr	x8, [x19, #328]
  4778a8:	add	w9, w9, #0x1
  4778ac:	str	w9, [x19, #308]
  4778b0:	mov	x9, sp
  4778b4:	mov	x0, x19
  4778b8:	mov	w1, w20
  4778bc:	mov	x2, x23
  4778c0:	stp	x23, x8, [sp]
  4778c4:	str	x9, [x19, #328]
  4778c8:	bl	46f9e8 <feof@plt+0x6c148>
  4778cc:	ldr	x8, [sp, #8]
  4778d0:	str	x8, [x19, #328]
  4778d4:	ldr	w8, [x23, #4]
  4778d8:	sub	w8, w8, #0x1
  4778dc:	str	w8, [x23, #4]
  4778e0:	ldr	w8, [x19, #308]
  4778e4:	sub	w8, w8, #0x1
  4778e8:	str	w8, [x19, #308]
  4778ec:	b	4779f4 <feof@plt+0x74154>
  4778f0:	ldr	x8, [x19, #256]
  4778f4:	cmp	x8, #0xff
  4778f8:	b.ne	477924 <feof@plt+0x74084>  // b.any
  4778fc:	ldp	x8, x2, [x19, #272]
  477900:	mov	w1, #0xff                  	// #255
  477904:	mov	x0, x19
  477908:	strb	wzr, [x19, #255]
  47790c:	blr	x8
  477910:	ldr	x9, [x19, #320]
  477914:	mov	x8, xzr
  477918:	str	xzr, [x19, #256]
  47791c:	add	x9, x9, #0x1
  477920:	str	x9, [x19, #320]
  477924:	add	x9, x8, #0x1
  477928:	mov	w10, #0x28                  	// #40
  47792c:	str	x9, [x19, #256]
  477930:	strb	w10, [x19, x8]
  477934:	strb	w10, [x19, #264]
  477938:	ldr	w8, [x23, #4]
  47793c:	cmp	w8, #0x1
  477940:	b.gt	477950 <feof@plt+0x740b0>
  477944:	ldr	w9, [x19, #308]
  477948:	cmp	w9, #0x401
  47794c:	b.lt	47795c <feof@plt+0x740bc>  // b.tstop
  477950:	mov	w8, #0x1                   	// #1
  477954:	str	w8, [x19, #304]
  477958:	b	4779ac <feof@plt+0x7410c>
  47795c:	add	w8, w8, #0x1
  477960:	str	w8, [x23, #4]
  477964:	ldr	x8, [x19, #328]
  477968:	add	w9, w9, #0x1
  47796c:	str	w9, [x19, #308]
  477970:	mov	x9, sp
  477974:	mov	x0, x19
  477978:	mov	w1, w20
  47797c:	mov	x2, x23
  477980:	stp	x23, x8, [sp]
  477984:	str	x9, [x19, #328]
  477988:	bl	46f9e8 <feof@plt+0x6c148>
  47798c:	ldr	x8, [sp, #8]
  477990:	str	x8, [x19, #328]
  477994:	ldr	w8, [x23, #4]
  477998:	sub	w8, w8, #0x1
  47799c:	str	w8, [x23, #4]
  4779a0:	ldr	w8, [x19, #308]
  4779a4:	sub	w8, w8, #0x1
  4779a8:	str	w8, [x19, #308]
  4779ac:	ldr	x8, [x19, #256]
  4779b0:	cmp	x8, #0xff
  4779b4:	b.ne	4779e0 <feof@plt+0x74140>  // b.any
  4779b8:	ldp	x8, x2, [x19, #272]
  4779bc:	mov	w1, #0xff                  	// #255
  4779c0:	mov	x0, x19
  4779c4:	strb	wzr, [x19, #255]
  4779c8:	blr	x8
  4779cc:	ldr	x9, [x19, #320]
  4779d0:	mov	x8, xzr
  4779d4:	str	xzr, [x19, #256]
  4779d8:	add	x9, x9, #0x1
  4779dc:	str	x9, [x19, #320]
  4779e0:	add	x9, x8, #0x1
  4779e4:	mov	w10, #0x29                  	// #41
  4779e8:	str	x9, [x19, #256]
  4779ec:	strb	w10, [x19, x8]
  4779f0:	strb	w10, [x19, #264]
  4779f4:	ldr	x8, [x19, #256]
  4779f8:	cmp	x8, #0xff
  4779fc:	b.ne	477a28 <feof@plt+0x74188>  // b.any
  477a00:	ldp	x8, x2, [x19, #272]
  477a04:	mov	w1, #0xff                  	// #255
  477a08:	mov	x0, x19
  477a0c:	strb	wzr, [x19, #255]
  477a10:	blr	x8
  477a14:	ldr	x9, [x19, #320]
  477a18:	mov	x8, xzr
  477a1c:	str	xzr, [x19, #256]
  477a20:	add	x9, x9, #0x1
  477a24:	str	x9, [x19, #320]
  477a28:	add	x9, x8, #0x1
  477a2c:	mov	w10, #0x29                  	// #41
  477a30:	str	x9, [x19, #256]
  477a34:	strb	w10, [x19, x8]
  477a38:	strb	w10, [x19, #264]
  477a3c:	mov	w0, #0x1                   	// #1
  477a40:	str	w24, [x19, #316]
  477a44:	ldp	x20, x19, [sp, #80]
  477a48:	ldp	x22, x21, [sp, #64]
  477a4c:	ldp	x24, x23, [sp, #48]
  477a50:	ldp	x26, x25, [sp, #32]
  477a54:	ldp	x29, x30, [sp, #16]
  477a58:	add	sp, sp, #0x60
  477a5c:	ret
  477a60:	add	w8, w8, #0x1
  477a64:	str	w8, [x22, #4]
  477a68:	ldr	x8, [x19, #328]
  477a6c:	add	w9, w9, #0x1
  477a70:	str	w9, [x19, #308]
  477a74:	mov	x9, sp
  477a78:	mov	x0, x19
  477a7c:	mov	w1, w20
  477a80:	mov	x2, x22
  477a84:	stp	x22, x8, [sp]
  477a88:	str	x9, [x19, #328]
  477a8c:	bl	46f9e8 <feof@plt+0x6c148>
  477a90:	ldr	x8, [sp, #8]
  477a94:	str	x8, [x19, #328]
  477a98:	ldr	w8, [x22, #4]
  477a9c:	sub	w8, w8, #0x1
  477aa0:	str	w8, [x22, #4]
  477aa4:	ldr	w8, [x19, #308]
  477aa8:	sub	w8, w8, #0x1
  477aac:	str	w8, [x19, #308]
  477ab0:	ldr	x8, [x19, #256]
  477ab4:	cmp	x8, #0xff
  477ab8:	b.ne	477ae4 <feof@plt+0x74244>  // b.any
  477abc:	ldp	x8, x2, [x19, #272]
  477ac0:	mov	w1, #0xff                  	// #255
  477ac4:	mov	x0, x19
  477ac8:	strb	wzr, [x19, #255]
  477acc:	blr	x8
  477ad0:	ldr	x9, [x19, #320]
  477ad4:	mov	x8, xzr
  477ad8:	str	xzr, [x19, #256]
  477adc:	add	x9, x9, #0x1
  477ae0:	str	x9, [x19, #320]
  477ae4:	add	x9, x8, #0x1
  477ae8:	mov	w10, #0x29                  	// #41
  477aec:	str	x9, [x19, #256]
  477af0:	strb	w10, [x19, x8]
  477af4:	strb	w10, [x19, #264]
  477af8:	ldr	w8, [x21]
  477afc:	cmp	w8, #0x32
  477b00:	b.ne	477b70 <feof@plt+0x742d0>  // b.any
  477b04:	ldr	x8, [x21, #8]
  477b08:	ldrsw	x20, [x8, #16]
  477b0c:	cbz	w20, 477be4 <feof@plt+0x74344>
  477b10:	ldr	x21, [x8, #8]
  477b14:	b	477b34 <feof@plt+0x74294>
  477b18:	add	x9, x8, #0x1
  477b1c:	subs	x20, x20, #0x1
  477b20:	add	x21, x21, #0x1
  477b24:	str	x9, [x19, #256]
  477b28:	strb	w22, [x19, x8]
  477b2c:	strb	w22, [x19, #264]
  477b30:	b.eq	477be4 <feof@plt+0x74344>  // b.none
  477b34:	ldr	x8, [x19, #256]
  477b38:	ldrb	w22, [x21]
  477b3c:	cmp	x8, #0xff
  477b40:	b.ne	477b18 <feof@plt+0x74278>  // b.any
  477b44:	ldp	x8, x2, [x19, #272]
  477b48:	mov	w1, #0xff                  	// #255
  477b4c:	mov	x0, x19
  477b50:	strb	wzr, [x19, #255]
  477b54:	blr	x8
  477b58:	ldr	x9, [x19, #320]
  477b5c:	mov	x8, xzr
  477b60:	str	xzr, [x19, #256]
  477b64:	add	x9, x9, #0x1
  477b68:	str	x9, [x19, #320]
  477b6c:	b	477b18 <feof@plt+0x74278>
  477b70:	ldr	w8, [x21, #4]
  477b74:	cmp	w8, #0x1
  477b78:	b.gt	477b88 <feof@plt+0x742e8>
  477b7c:	ldr	w9, [x19, #308]
  477b80:	cmp	w9, #0x401
  477b84:	b.lt	477b94 <feof@plt+0x742f4>  // b.tstop
  477b88:	mov	w8, #0x1                   	// #1
  477b8c:	str	w8, [x19, #304]
  477b90:	b	477be4 <feof@plt+0x74344>
  477b94:	add	w8, w8, #0x1
  477b98:	str	w8, [x21, #4]
  477b9c:	ldr	x8, [x19, #328]
  477ba0:	add	w9, w9, #0x1
  477ba4:	str	w9, [x19, #308]
  477ba8:	mov	x9, sp
  477bac:	mov	x0, x19
  477bb0:	mov	w1, w20
  477bb4:	mov	x2, x21
  477bb8:	stp	x21, x8, [sp]
  477bbc:	str	x9, [x19, #328]
  477bc0:	bl	46f9e8 <feof@plt+0x6c148>
  477bc4:	ldr	x8, [sp, #8]
  477bc8:	str	x8, [x19, #328]
  477bcc:	ldr	w8, [x21, #4]
  477bd0:	sub	w8, w8, #0x1
  477bd4:	str	w8, [x21, #4]
  477bd8:	ldr	w8, [x19, #308]
  477bdc:	sub	w8, w8, #0x1
  477be0:	str	w8, [x19, #308]
  477be4:	ldr	x8, [x19, #256]
  477be8:	cmp	x8, #0xff
  477bec:	b.ne	477c18 <feof@plt+0x74378>  // b.any
  477bf0:	ldp	x8, x2, [x19, #272]
  477bf4:	mov	w1, #0xff                  	// #255
  477bf8:	mov	x0, x19
  477bfc:	strb	wzr, [x19, #255]
  477c00:	blr	x8
  477c04:	ldr	x9, [x19, #320]
  477c08:	mov	x8, xzr
  477c0c:	str	xzr, [x19, #256]
  477c10:	add	x9, x9, #0x1
  477c14:	str	x9, [x19, #320]
  477c18:	add	x9, x8, #0x1
  477c1c:	mov	w20, #0x2e                  	// #46
  477c20:	str	x9, [x19, #256]
  477c24:	strb	w20, [x19, x8]
  477c28:	ldr	x8, [x19, #256]
  477c2c:	strb	w20, [x19, #264]
  477c30:	cmp	x8, #0xff
  477c34:	b.ne	477c60 <feof@plt+0x743c0>  // b.any
  477c38:	ldp	x8, x2, [x19, #272]
  477c3c:	mov	w1, #0xff                  	// #255
  477c40:	mov	x0, x19
  477c44:	strb	wzr, [x19, #255]
  477c48:	blr	x8
  477c4c:	ldr	x9, [x19, #320]
  477c50:	mov	x8, xzr
  477c54:	str	xzr, [x19, #256]
  477c58:	add	x9, x9, #0x1
  477c5c:	str	x9, [x19, #320]
  477c60:	add	x9, x8, #0x1
  477c64:	str	x9, [x19, #256]
  477c68:	strb	w20, [x19, x8]
  477c6c:	ldr	x8, [x19, #256]
  477c70:	strb	w20, [x19, #264]
  477c74:	cmp	x8, #0xff
  477c78:	b.ne	477ca4 <feof@plt+0x74404>  // b.any
  477c7c:	ldp	x8, x2, [x19, #272]
  477c80:	mov	w1, #0xff                  	// #255
  477c84:	mov	x0, x19
  477c88:	strb	wzr, [x19, #255]
  477c8c:	blr	x8
  477c90:	ldr	x9, [x19, #320]
  477c94:	mov	x8, xzr
  477c98:	str	xzr, [x19, #256]
  477c9c:	add	x9, x9, #0x1
  477ca0:	str	x9, [x19, #320]
  477ca4:	add	x9, x8, #0x1
  477ca8:	mov	w10, #0x2e                  	// #46
  477cac:	str	x9, [x19, #256]
  477cb0:	strb	w10, [x19, x8]
  477cb4:	ldr	x8, [x19, #256]
  477cb8:	strb	w10, [x19, #264]
  477cbc:	cmp	x8, #0xff
  477cc0:	b.eq	477a00 <feof@plt+0x74160>  // b.none
  477cc4:	b	477a28 <feof@plt+0x74188>
  477cc8:	sub	sp, sp, #0x70
  477ccc:	stp	x29, x30, [sp, #32]
  477cd0:	str	x25, [sp, #48]
  477cd4:	stp	x24, x23, [sp, #64]
  477cd8:	stp	x22, x21, [sp, #80]
  477cdc:	stp	x20, x19, [sp, #96]
  477ce0:	add	x29, sp, #0x20
  477ce4:	cbz	x2, 477cf4 <feof@plt+0x74454>
  477ce8:	ldr	w8, [x0, #304]
  477cec:	mov	x19, x0
  477cf0:	cbz	w8, 477d10 <feof@plt+0x74470>
  477cf4:	ldp	x20, x19, [sp, #96]
  477cf8:	ldp	x22, x21, [sp, #80]
  477cfc:	ldp	x24, x23, [sp, #64]
  477d00:	ldr	x25, [sp, #48]
  477d04:	ldp	x29, x30, [sp, #32]
  477d08:	add	sp, sp, #0x70
  477d0c:	ret
  477d10:	ldr	w8, [x2, #16]
  477d14:	mov	w22, w3
  477d18:	mov	x21, x2
  477d1c:	mov	w20, w1
  477d20:	cbz	w8, 477d50 <feof@plt+0x744b0>
  477d24:	ldr	x2, [x21]
  477d28:	mov	x0, x19
  477d2c:	mov	w1, w20
  477d30:	mov	w3, w22
  477d34:	ldp	x20, x19, [sp, #96]
  477d38:	ldp	x22, x21, [sp, #80]
  477d3c:	ldp	x24, x23, [sp, #64]
  477d40:	ldr	x25, [sp, #48]
  477d44:	ldp	x29, x30, [sp, #32]
  477d48:	add	sp, sp, #0x70
  477d4c:	b	477cc8 <feof@plt+0x74428>
  477d50:	ldr	x2, [x21, #8]
  477d54:	ldr	w8, [x2]
  477d58:	cbz	w22, 477d9c <feof@plt+0x744fc>
  477d5c:	mov	w9, #0x1                   	// #1
  477d60:	str	w9, [x21, #16]
  477d64:	ldr	x9, [x21, #24]
  477d68:	ldr	x23, [x19, #288]
  477d6c:	cmp	w8, #0x2
  477d70:	str	x9, [x19, #288]
  477d74:	b.eq	477dc4 <feof@plt+0x74524>  // b.none
  477d78:	cmp	w8, #0x2a
  477d7c:	b.eq	477e8c <feof@plt+0x745ec>  // b.none
  477d80:	cmp	w8, #0x29
  477d84:	b.ne	477ea0 <feof@plt+0x74600>  // b.any
  477d88:	ldr	x3, [x21]
  477d8c:	mov	x0, x19
  477d90:	mov	w1, w20
  477d94:	bl	476820 <feof@plt+0x72f80>
  477d98:	b	47817c <feof@plt+0x748dc>
  477d9c:	sub	w9, w8, #0x1c
  477da0:	cmp	w9, #0x34
  477da4:	b.hi	477d5c <feof@plt+0x744bc>  // b.pmore
  477da8:	mov	w10, #0x1                   	// #1
  477dac:	lsl	x9, x10, x9
  477db0:	mov	x10, #0x1f                  	// #31
  477db4:	movk	x10, #0x1a, lsl #48
  477db8:	tst	x9, x10
  477dbc:	b.ne	477d24 <feof@plt+0x74484>  // b.any
  477dc0:	b	477d5c <feof@plt+0x744bc>
  477dc4:	ldr	x24, [x19, #296]
  477dc8:	str	xzr, [x19, #296]
  477dcc:	ldr	x22, [x2, #8]
  477dd0:	cbz	x22, 477dec <feof@plt+0x7454c>
  477dd4:	ldr	w8, [x22, #4]
  477dd8:	cmp	w8, #0x1
  477ddc:	b.gt	477dec <feof@plt+0x7454c>
  477de0:	ldr	w9, [x19, #308]
  477de4:	cmp	w9, #0x401
  477de8:	b.lt	477eb4 <feof@plt+0x74614>  // b.tstop
  477dec:	mov	w8, #0x1                   	// #1
  477df0:	str	w8, [x19, #304]
  477df4:	str	x24, [x19, #296]
  477df8:	tbnz	w20, #2, 477f0c <feof@plt+0x7466c>
  477dfc:	ldr	x8, [x19, #256]
  477e00:	cmp	x8, #0xff
  477e04:	b.ne	477e30 <feof@plt+0x74590>  // b.any
  477e08:	ldp	x8, x2, [x19, #272]
  477e0c:	mov	w1, #0xff                  	// #255
  477e10:	mov	x0, x19
  477e14:	strb	wzr, [x19, #255]
  477e18:	blr	x8
  477e1c:	ldr	x9, [x19, #320]
  477e20:	mov	x8, xzr
  477e24:	str	xzr, [x19, #256]
  477e28:	add	x9, x9, #0x1
  477e2c:	str	x9, [x19, #320]
  477e30:	add	x9, x8, #0x1
  477e34:	mov	w22, #0x3a                  	// #58
  477e38:	str	x9, [x19, #256]
  477e3c:	strb	w22, [x19, x8]
  477e40:	ldr	x8, [x19, #256]
  477e44:	strb	w22, [x19, #264]
  477e48:	cmp	x8, #0xff
  477e4c:	b.ne	477e78 <feof@plt+0x745d8>  // b.any
  477e50:	ldp	x8, x2, [x19, #272]
  477e54:	mov	w1, #0xff                  	// #255
  477e58:	mov	x0, x19
  477e5c:	strb	wzr, [x19, #255]
  477e60:	blr	x8
  477e64:	ldr	x9, [x19, #320]
  477e68:	mov	x8, xzr
  477e6c:	str	xzr, [x19, #256]
  477e70:	add	x9, x9, #0x1
  477e74:	str	x9, [x19, #320]
  477e78:	add	x9, x8, #0x1
  477e7c:	str	x9, [x19, #256]
  477e80:	strb	w22, [x19, x8]
  477e84:	strb	w22, [x19, #264]
  477e88:	b	477f54 <feof@plt+0x746b4>
  477e8c:	ldr	x3, [x21]
  477e90:	mov	x0, x19
  477e94:	mov	w1, w20
  477e98:	bl	476af8 <feof@plt+0x73258>
  477e9c:	b	47817c <feof@plt+0x748dc>
  477ea0:	mov	x0, x19
  477ea4:	mov	w1, w20
  477ea8:	bl	475c80 <feof@plt+0x723e0>
  477eac:	str	x23, [x19, #288]
  477eb0:	b	477d24 <feof@plt+0x74484>
  477eb4:	add	w8, w8, #0x1
  477eb8:	str	w8, [x22, #4]
  477ebc:	ldr	x8, [x19, #328]
  477ec0:	add	w9, w9, #0x1
  477ec4:	str	w9, [x19, #308]
  477ec8:	mov	x9, sp
  477ecc:	mov	x0, x19
  477ed0:	mov	w1, w20
  477ed4:	mov	x2, x22
  477ed8:	stp	x22, x8, [sp]
  477edc:	str	x9, [x19, #328]
  477ee0:	bl	46f9e8 <feof@plt+0x6c148>
  477ee4:	ldr	x8, [sp, #8]
  477ee8:	str	x8, [x19, #328]
  477eec:	ldr	w8, [x22, #4]
  477ef0:	sub	w8, w8, #0x1
  477ef4:	str	w8, [x22, #4]
  477ef8:	ldr	w8, [x19, #308]
  477efc:	sub	w8, w8, #0x1
  477f00:	str	w8, [x19, #308]
  477f04:	str	x24, [x19, #296]
  477f08:	tbz	w20, #2, 477dfc <feof@plt+0x7455c>
  477f0c:	ldr	x8, [x19, #256]
  477f10:	cmp	x8, #0xff
  477f14:	b.ne	477f40 <feof@plt+0x746a0>  // b.any
  477f18:	ldp	x8, x2, [x19, #272]
  477f1c:	mov	w1, #0xff                  	// #255
  477f20:	mov	x0, x19
  477f24:	strb	wzr, [x19, #255]
  477f28:	blr	x8
  477f2c:	ldr	x9, [x19, #320]
  477f30:	mov	x8, xzr
  477f34:	str	xzr, [x19, #256]
  477f38:	add	x9, x9, #0x1
  477f3c:	str	x9, [x19, #320]
  477f40:	add	x9, x8, #0x1
  477f44:	mov	w10, #0x2e                  	// #46
  477f48:	str	x9, [x19, #256]
  477f4c:	strb	w10, [x19, x8]
  477f50:	strb	w10, [x19, #264]
  477f54:	ldr	x8, [x21, #8]
  477f58:	ldr	x21, [x8, #16]
  477f5c:	ldr	w8, [x21]
  477f60:	cmp	w8, #0x47
  477f64:	b.ne	478130 <feof@plt+0x74890>  // b.any
  477f68:	adrp	x24, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  477f6c:	mov	x22, xzr
  477f70:	add	x24, x24, #0xcea
  477f74:	b	477f94 <feof@plt+0x746f4>
  477f78:	add	x22, x22, #0x1
  477f7c:	add	x9, x8, #0x1
  477f80:	cmp	x22, #0xd
  477f84:	str	x9, [x19, #256]
  477f88:	strb	w25, [x19, x8]
  477f8c:	strb	w25, [x19, #264]
  477f90:	b.eq	477fd0 <feof@plt+0x74730>  // b.none
  477f94:	ldr	x8, [x19, #256]
  477f98:	ldrb	w25, [x24, x22]
  477f9c:	cmp	x8, #0xff
  477fa0:	b.ne	477f78 <feof@plt+0x746d8>  // b.any
  477fa4:	ldp	x8, x2, [x19, #272]
  477fa8:	mov	w1, #0xff                  	// #255
  477fac:	mov	x0, x19
  477fb0:	strb	wzr, [x19, #255]
  477fb4:	blr	x8
  477fb8:	ldr	x9, [x19, #320]
  477fbc:	mov	x8, xzr
  477fc0:	str	xzr, [x19, #256]
  477fc4:	add	x9, x9, #0x1
  477fc8:	str	x9, [x19, #320]
  477fcc:	b	477f78 <feof@plt+0x746d8>
  477fd0:	ldr	w8, [x21, #16]
  477fd4:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  477fd8:	add	x1, x1, #0xadf
  477fdc:	mov	x0, sp
  477fe0:	add	w2, w8, #0x1
  477fe4:	bl	403340 <sprintf@plt>
  477fe8:	mov	x0, sp
  477fec:	bl	4030b0 <strlen@plt>
  477ff0:	cbz	x0, 478058 <feof@plt+0x747b8>
  477ff4:	mov	x22, x0
  477ff8:	mov	x24, sp
  477ffc:	b	47801c <feof@plt+0x7477c>
  478000:	add	x9, x8, #0x1
  478004:	subs	x22, x22, #0x1
  478008:	add	x24, x24, #0x1
  47800c:	str	x9, [x19, #256]
  478010:	strb	w25, [x19, x8]
  478014:	strb	w25, [x19, #264]
  478018:	b.eq	478058 <feof@plt+0x747b8>  // b.none
  47801c:	ldr	x8, [x19, #256]
  478020:	ldrb	w25, [x24]
  478024:	cmp	x8, #0xff
  478028:	b.ne	478000 <feof@plt+0x74760>  // b.any
  47802c:	ldp	x8, x2, [x19, #272]
  478030:	mov	w1, #0xff                  	// #255
  478034:	mov	x0, x19
  478038:	strb	wzr, [x19, #255]
  47803c:	blr	x8
  478040:	ldr	x9, [x19, #320]
  478044:	mov	x8, xzr
  478048:	str	xzr, [x19, #256]
  47804c:	add	x9, x9, #0x1
  478050:	str	x9, [x19, #320]
  478054:	b	478000 <feof@plt+0x74760>
  478058:	ldr	x8, [x19, #256]
  47805c:	cmp	x8, #0xff
  478060:	b.ne	47808c <feof@plt+0x747ec>  // b.any
  478064:	ldp	x8, x2, [x19, #272]
  478068:	mov	w1, #0xff                  	// #255
  47806c:	mov	x0, x19
  478070:	strb	wzr, [x19, #255]
  478074:	blr	x8
  478078:	ldr	x9, [x19, #320]
  47807c:	mov	x8, xzr
  478080:	str	xzr, [x19, #256]
  478084:	add	x9, x9, #0x1
  478088:	str	x9, [x19, #320]
  47808c:	add	x9, x8, #0x1
  478090:	mov	w10, #0x7d                  	// #125
  478094:	str	x9, [x19, #256]
  478098:	strb	w10, [x19, x8]
  47809c:	ldr	x8, [x19, #256]
  4780a0:	strb	w10, [x19, #264]
  4780a4:	cmp	x8, #0xff
  4780a8:	b.ne	4780d4 <feof@plt+0x74834>  // b.any
  4780ac:	ldp	x8, x2, [x19, #272]
  4780b0:	mov	w1, #0xff                  	// #255
  4780b4:	mov	x0, x19
  4780b8:	strb	wzr, [x19, #255]
  4780bc:	blr	x8
  4780c0:	ldr	x9, [x19, #320]
  4780c4:	mov	x8, xzr
  4780c8:	str	xzr, [x19, #256]
  4780cc:	add	x9, x9, #0x1
  4780d0:	str	x9, [x19, #320]
  4780d4:	add	x9, x8, #0x1
  4780d8:	mov	w22, #0x3a                  	// #58
  4780dc:	str	x9, [x19, #256]
  4780e0:	strb	w22, [x19, x8]
  4780e4:	ldr	x8, [x19, #256]
  4780e8:	strb	w22, [x19, #264]
  4780ec:	cmp	x8, #0xff
  4780f0:	b.ne	47811c <feof@plt+0x7487c>  // b.any
  4780f4:	ldp	x8, x2, [x19, #272]
  4780f8:	mov	w1, #0xff                  	// #255
  4780fc:	mov	x0, x19
  478100:	strb	wzr, [x19, #255]
  478104:	blr	x8
  478108:	ldr	x9, [x19, #320]
  47810c:	mov	x8, xzr
  478110:	str	xzr, [x19, #256]
  478114:	add	x9, x9, #0x1
  478118:	str	x9, [x19, #320]
  47811c:	add	x9, x8, #0x1
  478120:	str	x9, [x19, #256]
  478124:	strb	w22, [x19, x8]
  478128:	strb	w22, [x19, #264]
  47812c:	ldr	x21, [x21, #8]
  478130:	ldr	w8, [x21]
  478134:	sub	w8, w8, #0x1c
  478138:	cmp	w8, #0x34
  47813c:	b.hi	478158 <feof@plt+0x748b8>  // b.pmore
  478140:	mov	w9, #0x1                   	// #1
  478144:	lsl	x8, x9, x8
  478148:	mov	x9, #0x1f                  	// #31
  47814c:	movk	x9, #0x1a, lsl #48
  478150:	tst	x8, x9
  478154:	b.ne	47812c <feof@plt+0x7488c>  // b.any
  478158:	cbz	x21, 478174 <feof@plt+0x748d4>
  47815c:	ldr	w8, [x21, #4]
  478160:	cmp	w8, #0x1
  478164:	b.gt	478174 <feof@plt+0x748d4>
  478168:	ldr	w9, [x19, #308]
  47816c:	cmp	w9, #0x401
  478170:	b.lt	478184 <feof@plt+0x748e4>  // b.tstop
  478174:	mov	w8, #0x1                   	// #1
  478178:	str	w8, [x19, #304]
  47817c:	str	x23, [x19, #288]
  478180:	b	477cf4 <feof@plt+0x74454>
  478184:	add	w8, w8, #0x1
  478188:	str	w8, [x21, #4]
  47818c:	ldr	x8, [x19, #328]
  478190:	add	w9, w9, #0x1
  478194:	str	w9, [x19, #308]
  478198:	mov	x9, sp
  47819c:	mov	x0, x19
  4781a0:	mov	w1, w20
  4781a4:	mov	x2, x21
  4781a8:	stp	x21, x8, [sp]
  4781ac:	str	x9, [x19, #328]
  4781b0:	bl	46f9e8 <feof@plt+0x6c148>
  4781b4:	ldr	x8, [sp, #8]
  4781b8:	str	x8, [x19, #328]
  4781bc:	ldr	w8, [x21, #4]
  4781c0:	sub	w8, w8, #0x1
  4781c4:	str	w8, [x21, #4]
  4781c8:	ldr	w8, [x19, #308]
  4781cc:	sub	w8, w8, #0x1
  4781d0:	str	w8, [x19, #308]
  4781d4:	b	47817c <feof@plt+0x748dc>
  4781d8:	adrp	x8, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  4781dc:	ldr	q0, [x8, #3856]
  4781e0:	str	xzr, [x0, #16]
  4781e4:	str	wzr, [x0, #24]
  4781e8:	str	q0, [x0]
  4781ec:	ret
  4781f0:	ldr	q0, [x0]
  4781f4:	mov	x0, x1
  4781f8:	str	q0, [x1]
  4781fc:	ret
  478200:	stp	x29, x30, [sp, #-80]!
  478204:	str	x25, [sp, #16]
  478208:	stp	x24, x23, [sp, #32]
  47820c:	stp	x22, x21, [sp, #48]
  478210:	stp	x20, x19, [sp, #64]
  478214:	ldp	w24, w23, [x0, #20]
  478218:	ldr	w8, [x0, #16]
  47821c:	mov	x19, x1
  478220:	mov	x20, x0
  478224:	mov	x29, sp
  478228:	adds	w25, w8, w23
  47822c:	str	w25, [x0, #16]
  478230:	b.cc	47823c <feof@plt+0x7499c>  // b.lo, b.ul, b.last
  478234:	add	w24, w24, #0x1
  478238:	str	w24, [x20, #20]
  47823c:	cmp	w23, #0x38
  478240:	mov	w8, #0x78                  	// #120
  478244:	mov	w9, #0x38                  	// #56
  478248:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  47824c:	add	x21, x20, #0x1c
  478250:	sub	w22, w8, w23
  478254:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  478258:	add	x0, x21, x23
  47825c:	add	x1, x1, #0xf20
  478260:	mov	x2, x22
  478264:	bl	402fc0 <memcpy@plt>
  478268:	add	x9, x22, x23
  47826c:	lsl	w8, w25, #3
  478270:	extr	w10, w24, w25, #29
  478274:	add	x11, x21, x9
  478278:	add	x1, x9, #0x8
  47827c:	mov	x0, x21
  478280:	mov	x2, x20
  478284:	stp	w8, w10, [x11]
  478288:	bl	4782b0 <feof@plt+0x74a10>
  47828c:	ldr	q0, [x20]
  478290:	mov	x0, x19
  478294:	ldr	x25, [sp, #16]
  478298:	str	q0, [x19]
  47829c:	ldp	x20, x19, [sp, #64]
  4782a0:	ldp	x22, x21, [sp, #48]
  4782a4:	ldp	x24, x23, [sp, #32]
  4782a8:	ldp	x29, x30, [sp], #80
  4782ac:	ret
  4782b0:	stp	x29, x30, [sp, #-96]!
  4782b4:	stp	x28, x27, [sp, #16]
  4782b8:	stp	x26, x25, [sp, #32]
  4782bc:	stp	x24, x23, [sp, #48]
  4782c0:	stp	x22, x21, [sp, #64]
  4782c4:	stp	x20, x19, [sp, #80]
  4782c8:	ldp	w10, w13, [x2, #12]
  4782cc:	ldr	w14, [x2, #20]
  4782d0:	ldp	w8, w9, [x2]
  4782d4:	ldr	w11, [x2, #8]
  4782d8:	add	w13, w13, w1
  4782dc:	and	x12, x1, #0xfffffffffffffffc
  4782e0:	cmp	x13, x1
  4782e4:	lsr	x15, x1, #32
  4782e8:	add	x12, x0, x12
  4782ec:	str	w13, [x2, #16]
  4782f0:	cinc	w13, w15, cc  // cc = lo, ul, last
  4782f4:	add	w13, w14, w13
  4782f8:	cmp	x12, x0
  4782fc:	str	w13, [x2, #20]
  478300:	b.ls	478cb8 <feof@plt+0x75418>  // b.plast
  478304:	mov	w22, #0xd391                	// #54161
  478308:	movk	w22, #0xeb86, lsl #16
  47830c:	ldp	w29, w25, [x0]
  478310:	bic	w4, w10, w9
  478314:	and	w5, w11, w9
  478318:	orr	w4, w5, w4
  47831c:	add	w4, w8, w4
  478320:	mov	w19, #0xa478                	// #42104
  478324:	add	w4, w4, w29
  478328:	movk	w19, #0xd76a, lsl #16
  47832c:	add	w4, w4, w19
  478330:	ror	w4, w4, #25
  478334:	add	w4, w4, w9
  478338:	bic	w19, w11, w4
  47833c:	and	w20, w9, w4
  478340:	add	w5, w10, w25
  478344:	orr	w19, w20, w19
  478348:	add	w5, w5, w19
  47834c:	mov	w19, #0xb756                	// #46934
  478350:	movk	w19, #0xe8c7, lsl #16
  478354:	ldp	w23, w28, [x0, #8]
  478358:	add	w5, w5, w19
  47835c:	ror	w5, w5, #20
  478360:	add	w5, w5, w4
  478364:	bic	w19, w9, w5
  478368:	and	w20, w4, w5
  47836c:	add	w6, w11, w23
  478370:	orr	w19, w20, w19
  478374:	add	w6, w6, w19
  478378:	mov	w19, #0x70db                	// #28891
  47837c:	ldp	w24, w14, [x0, #16]
  478380:	movk	w19, #0x2420, lsl #16
  478384:	add	w6, w6, w19
  478388:	ror	w6, w6, #15
  47838c:	add	w6, w6, w5
  478390:	add	w20, w24, w4
  478394:	bic	w4, w4, w6
  478398:	and	w19, w5, w6
  47839c:	add	w7, w9, w28
  4783a0:	orr	w4, w19, w4
  4783a4:	add	w4, w7, w4
  4783a8:	mov	w7, #0xceee                	// #52974
  4783ac:	movk	w7, #0xc1bd, lsl #16
  4783b0:	add	w4, w4, w7
  4783b4:	ror	w4, w4, #10
  4783b8:	add	w4, w4, w6
  4783bc:	add	w19, w14, w5
  4783c0:	bic	w5, w5, w4
  4783c4:	and	w7, w6, w4
  4783c8:	orr	w5, w7, w5
  4783cc:	add	w5, w20, w5
  4783d0:	mov	w20, #0xfaf                 	// #4015
  4783d4:	ldp	w27, w17, [x0, #24]
  4783d8:	movk	w20, #0xf57c, lsl #16
  4783dc:	add	w5, w5, w20
  4783e0:	ror	w5, w5, #25
  4783e4:	add	w5, w5, w4
  4783e8:	add	w7, w27, w6
  4783ec:	bic	w6, w6, w5
  4783f0:	and	w20, w4, w5
  4783f4:	orr	w6, w20, w6
  4783f8:	add	w6, w19, w6
  4783fc:	mov	w19, #0xc62a                	// #50730
  478400:	movk	w19, #0x4787, lsl #16
  478404:	add	w6, w6, w19
  478408:	ror	w6, w6, #20
  47840c:	add	w6, w6, w5
  478410:	add	w20, w17, w4
  478414:	bic	w4, w4, w6
  478418:	and	w19, w5, w6
  47841c:	orr	w4, w19, w4
  478420:	add	w4, w7, w4
  478424:	mov	w7, #0x4613                	// #17939
  478428:	ldp	w13, w26, [x0, #32]
  47842c:	movk	w7, #0xa830, lsl #16
  478430:	add	w4, w4, w7
  478434:	ror	w4, w4, #15
  478438:	add	w4, w4, w6
  47843c:	add	w19, w13, w5
  478440:	bic	w5, w5, w4
  478444:	and	w7, w6, w4
  478448:	orr	w5, w7, w5
  47844c:	add	w5, w20, w5
  478450:	mov	w20, #0x9501                	// #38145
  478454:	movk	w20, #0xfd46, lsl #16
  478458:	add	w5, w5, w20
  47845c:	ror	w5, w5, #10
  478460:	add	w5, w5, w4
  478464:	add	w7, w26, w6
  478468:	bic	w6, w6, w5
  47846c:	and	w20, w4, w5
  478470:	orr	w6, w20, w6
  478474:	add	w6, w19, w6
  478478:	mov	w19, #0x98d8                	// #39128
  47847c:	ldp	w16, w30, [x0, #40]
  478480:	movk	w19, #0x6980, lsl #16
  478484:	add	w6, w6, w19
  478488:	ror	w6, w6, #25
  47848c:	add	w6, w6, w5
  478490:	add	w20, w16, w4
  478494:	bic	w4, w4, w6
  478498:	and	w19, w5, w6
  47849c:	orr	w4, w19, w4
  4784a0:	add	w4, w7, w4
  4784a4:	mov	w7, #0xf7af                	// #63407
  4784a8:	movk	w7, #0x8b44, lsl #16
  4784ac:	add	w4, w4, w7
  4784b0:	ror	w4, w4, #20
  4784b4:	add	w4, w4, w6
  4784b8:	add	w19, w30, w5
  4784bc:	bic	w5, w5, w4
  4784c0:	and	w7, w6, w4
  4784c4:	orr	w5, w7, w5
  4784c8:	ldp	w1, w15, [x0, #48]
  4784cc:	add	w5, w20, w5
  4784d0:	mov	w20, #0xffff5bb1            	// #-42063
  4784d4:	add	w5, w5, w20
  4784d8:	ror	w5, w5, #15
  4784dc:	add	w5, w5, w4
  4784e0:	add	w7, w1, w6
  4784e4:	bic	w6, w6, w5
  4784e8:	and	w20, w4, w5
  4784ec:	orr	w6, w20, w6
  4784f0:	add	w6, w19, w6
  4784f4:	mov	w19, #0xd7be                	// #55230
  4784f8:	movk	w19, #0x895c, lsl #16
  4784fc:	add	w6, w6, w19
  478500:	ror	w6, w6, #10
  478504:	add	w6, w6, w5
  478508:	add	w20, w15, w4
  47850c:	bic	w4, w4, w6
  478510:	and	w19, w5, w6
  478514:	orr	w4, w19, w4
  478518:	add	w4, w7, w4
  47851c:	mov	w7, #0x1122                	// #4386
  478520:	ldp	w3, w18, [x0, #56]
  478524:	movk	w7, #0x6b90, lsl #16
  478528:	add	w4, w4, w7
  47852c:	ror	w4, w4, #25
  478530:	add	w4, w4, w6
  478534:	add	w19, w3, w5
  478538:	bic	w5, w5, w4
  47853c:	and	w7, w6, w4
  478540:	orr	w5, w7, w5
  478544:	add	w5, w20, w5
  478548:	mov	w20, #0x7193                	// #29075
  47854c:	movk	w20, #0xfd98, lsl #16
  478550:	add	w5, w5, w20
  478554:	ror	w5, w5, #20
  478558:	add	w5, w5, w4
  47855c:	add	w7, w18, w6
  478560:	bic	w6, w6, w5
  478564:	and	w20, w4, w5
  478568:	orr	w6, w20, w6
  47856c:	add	w6, w19, w6
  478570:	mov	w19, #0x438e                	// #17294
  478574:	movk	w19, #0xa679, lsl #16
  478578:	add	w6, w6, w19
  47857c:	ror	w6, w6, #15
  478580:	add	w6, w6, w5
  478584:	add	w20, w25, w4
  478588:	bic	w4, w4, w6
  47858c:	and	w19, w5, w6
  478590:	orr	w4, w19, w4
  478594:	mov	w21, #0x821                 	// #2081
  478598:	add	w4, w7, w4
  47859c:	movk	w21, #0x49b4, lsl #16
  4785a0:	add	w4, w4, w21
  4785a4:	ror	w4, w4, #10
  4785a8:	add	w4, w4, w6
  4785ac:	add	w19, w27, w5
  4785b0:	bic	w7, w6, w5
  4785b4:	and	w5, w4, w5
  4785b8:	orr	w5, w5, w7
  4785bc:	mov	w21, #0x2562                	// #9570
  4785c0:	add	w5, w20, w5
  4785c4:	movk	w21, #0xf61e, lsl #16
  4785c8:	add	w5, w5, w21
  4785cc:	ror	w5, w5, #27
  4785d0:	add	w5, w5, w4
  4785d4:	add	w7, w30, w6
  4785d8:	bic	w20, w4, w6
  4785dc:	and	w6, w5, w6
  4785e0:	orr	w6, w6, w20
  4785e4:	mov	w21, #0xb340                	// #45888
  4785e8:	add	w6, w19, w6
  4785ec:	movk	w21, #0xc040, lsl #16
  4785f0:	add	w6, w6, w21
  4785f4:	ror	w6, w6, #23
  4785f8:	add	w6, w6, w5
  4785fc:	add	w20, w29, w4
  478600:	bic	w19, w5, w4
  478604:	and	w4, w6, w4
  478608:	orr	w4, w4, w19
  47860c:	mov	w21, #0x5a51                	// #23121
  478610:	add	w4, w7, w4
  478614:	movk	w21, #0x265e, lsl #16
  478618:	add	w4, w4, w21
  47861c:	ror	w4, w4, #18
  478620:	add	w4, w4, w6
  478624:	add	w19, w14, w5
  478628:	bic	w7, w6, w5
  47862c:	and	w5, w4, w5
  478630:	orr	w5, w5, w7
  478634:	mov	w21, #0xc7aa                	// #51114
  478638:	add	w5, w20, w5
  47863c:	movk	w21, #0xe9b6, lsl #16
  478640:	add	w5, w5, w21
  478644:	ror	w5, w5, #12
  478648:	add	w5, w5, w4
  47864c:	add	w7, w16, w6
  478650:	bic	w20, w4, w6
  478654:	and	w6, w5, w6
  478658:	orr	w6, w6, w20
  47865c:	mov	w21, #0x105d                	// #4189
  478660:	add	w6, w19, w6
  478664:	movk	w21, #0xd62f, lsl #16
  478668:	add	w6, w6, w21
  47866c:	ror	w6, w6, #27
  478670:	add	w6, w6, w5
  478674:	add	w20, w18, w4
  478678:	bic	w19, w5, w4
  47867c:	and	w4, w6, w4
  478680:	orr	w4, w4, w19
  478684:	mov	w21, #0x1453                	// #5203
  478688:	add	w4, w7, w4
  47868c:	movk	w21, #0x244, lsl #16
  478690:	add	w4, w4, w21
  478694:	ror	w4, w4, #23
  478698:	add	w4, w4, w6
  47869c:	add	w19, w24, w5
  4786a0:	bic	w7, w6, w5
  4786a4:	and	w5, w4, w5
  4786a8:	orr	w5, w5, w7
  4786ac:	mov	w21, #0xe681                	// #59009
  4786b0:	add	w5, w20, w5
  4786b4:	movk	w21, #0xd8a1, lsl #16
  4786b8:	add	w5, w5, w21
  4786bc:	ror	w5, w5, #18
  4786c0:	add	w5, w5, w4
  4786c4:	add	w7, w26, w6
  4786c8:	bic	w20, w4, w6
  4786cc:	and	w6, w5, w6
  4786d0:	orr	w6, w6, w20
  4786d4:	mov	w21, #0xfbc8                	// #64456
  4786d8:	add	w6, w19, w6
  4786dc:	movk	w21, #0xe7d3, lsl #16
  4786e0:	add	w6, w6, w21
  4786e4:	ror	w6, w6, #12
  4786e8:	add	w6, w6, w5
  4786ec:	add	w20, w3, w4
  4786f0:	bic	w19, w5, w4
  4786f4:	and	w4, w6, w4
  4786f8:	orr	w4, w4, w19
  4786fc:	mov	w21, #0xcde6                	// #52710
  478700:	add	w4, w7, w4
  478704:	movk	w21, #0x21e1, lsl #16
  478708:	add	w4, w4, w21
  47870c:	ror	w4, w4, #27
  478710:	add	w4, w4, w6
  478714:	add	w19, w28, w5
  478718:	bic	w7, w6, w5
  47871c:	and	w5, w4, w5
  478720:	orr	w5, w5, w7
  478724:	mov	w21, #0x7d6                 	// #2006
  478728:	add	w5, w20, w5
  47872c:	movk	w21, #0xc337, lsl #16
  478730:	add	w5, w5, w21
  478734:	ror	w5, w5, #23
  478738:	add	w5, w5, w4
  47873c:	add	w7, w13, w6
  478740:	bic	w20, w4, w6
  478744:	and	w6, w5, w6
  478748:	orr	w6, w6, w20
  47874c:	mov	w21, #0xd87                 	// #3463
  478750:	add	w6, w19, w6
  478754:	movk	w21, #0xf4d5, lsl #16
  478758:	add	w6, w6, w21
  47875c:	ror	w6, w6, #18
  478760:	add	w6, w6, w5
  478764:	add	w20, w15, w4
  478768:	bic	w19, w5, w4
  47876c:	and	w4, w6, w4
  478770:	orr	w4, w4, w19
  478774:	mov	w21, #0x14ed                	// #5357
  478778:	add	w4, w7, w4
  47877c:	movk	w21, #0x455a, lsl #16
  478780:	add	w4, w4, w21
  478784:	ror	w4, w4, #12
  478788:	add	w4, w4, w6
  47878c:	add	w19, w23, w5
  478790:	bic	w7, w6, w5
  478794:	and	w5, w4, w5
  478798:	orr	w5, w5, w7
  47879c:	mov	w21, #0xe905                	// #59653
  4787a0:	add	w5, w20, w5
  4787a4:	movk	w21, #0xa9e3, lsl #16
  4787a8:	add	w5, w5, w21
  4787ac:	ror	w5, w5, #27
  4787b0:	add	w5, w5, w4
  4787b4:	add	w7, w17, w6
  4787b8:	bic	w20, w4, w6
  4787bc:	and	w6, w5, w6
  4787c0:	orr	w6, w6, w20
  4787c4:	mov	w21, #0xa3f8                	// #41976
  4787c8:	add	w6, w19, w6
  4787cc:	movk	w21, #0xfcef, lsl #16
  4787d0:	add	w6, w6, w21
  4787d4:	ror	w6, w6, #23
  4787d8:	add	w6, w6, w5
  4787dc:	add	w20, w1, w4
  4787e0:	bic	w19, w5, w4
  4787e4:	and	w4, w6, w4
  4787e8:	orr	w4, w4, w19
  4787ec:	add	w4, w7, w4
  4787f0:	mov	w7, #0x2d9                 	// #729
  4787f4:	movk	w7, #0x676f, lsl #16
  4787f8:	add	w4, w4, w7
  4787fc:	ror	w4, w4, #18
  478800:	add	w4, w4, w6
  478804:	eor	w7, w4, w6
  478808:	and	w19, w7, w5
  47880c:	eor	w19, w19, w6
  478810:	add	w19, w20, w19
  478814:	mov	w20, #0x4c8a                	// #19594
  478818:	movk	w20, #0x8d2a, lsl #16
  47881c:	add	w19, w19, w20
  478820:	ror	w19, w19, #12
  478824:	add	w19, w19, w4
  478828:	add	w5, w14, w5
  47882c:	eor	w7, w7, w19
  478830:	mov	w20, #0x3942                	// #14658
  478834:	add	w5, w5, w7
  478838:	movk	w20, #0xfffa, lsl #16
  47883c:	add	w5, w5, w20
  478840:	ror	w5, w5, #28
  478844:	add	w7, w30, w4
  478848:	eor	w4, w19, w4
  47884c:	add	w5, w5, w19
  478850:	add	w6, w13, w6
  478854:	eor	w4, w4, w5
  478858:	mov	w20, #0xf681                	// #63105
  47885c:	add	w4, w6, w4
  478860:	movk	w20, #0x8771, lsl #16
  478864:	add	w4, w4, w20
  478868:	ror	w4, w4, #21
  47886c:	add	w6, w3, w19
  478870:	eor	w19, w5, w19
  478874:	add	w4, w4, w5
  478878:	eor	w19, w19, w4
  47887c:	mov	w20, #0x6122                	// #24866
  478880:	add	w7, w7, w19
  478884:	movk	w20, #0x6d9d, lsl #16
  478888:	add	w7, w7, w20
  47888c:	ror	w7, w7, #16
  478890:	add	w19, w25, w5
  478894:	eor	w5, w4, w5
  478898:	add	w7, w7, w4
  47889c:	eor	w5, w5, w7
  4788a0:	mov	w20, #0x380c                	// #14348
  4788a4:	add	w5, w6, w5
  4788a8:	movk	w20, #0xfde5, lsl #16
  4788ac:	add	w5, w5, w20
  4788b0:	ror	w5, w5, #9
  4788b4:	add	w6, w24, w4
  4788b8:	eor	w4, w7, w4
  4788bc:	add	w5, w5, w7
  4788c0:	eor	w4, w4, w5
  4788c4:	mov	w20, #0xea44                	// #59972
  4788c8:	add	w4, w19, w4
  4788cc:	movk	w20, #0xa4be, lsl #16
  4788d0:	add	w4, w4, w20
  4788d4:	ror	w4, w4, #28
  4788d8:	add	w19, w17, w7
  4788dc:	eor	w7, w5, w7
  4788e0:	add	w4, w4, w5
  4788e4:	eor	w7, w7, w4
  4788e8:	mov	w20, #0xcfa9                	// #53161
  4788ec:	add	w6, w6, w7
  4788f0:	movk	w20, #0x4bde, lsl #16
  4788f4:	add	w6, w6, w20
  4788f8:	ror	w6, w6, #21
  4788fc:	add	w7, w16, w5
  478900:	eor	w5, w4, w5
  478904:	add	w6, w6, w4
  478908:	eor	w5, w5, w6
  47890c:	mov	w20, #0x4b60                	// #19296
  478910:	add	w5, w19, w5
  478914:	movk	w20, #0xf6bb, lsl #16
  478918:	add	w5, w5, w20
  47891c:	ror	w5, w5, #16
  478920:	add	w19, w15, w4
  478924:	eor	w4, w6, w4
  478928:	add	w5, w5, w6
  47892c:	eor	w4, w4, w5
  478930:	mov	w20, #0xbc70                	// #48240
  478934:	add	w4, w7, w4
  478938:	movk	w20, #0xbebf, lsl #16
  47893c:	add	w4, w4, w20
  478940:	ror	w4, w4, #9
  478944:	add	w7, w29, w6
  478948:	eor	w6, w5, w6
  47894c:	add	w4, w4, w5
  478950:	eor	w6, w6, w4
  478954:	mov	w20, #0x7ec6                	// #32454
  478958:	add	w6, w19, w6
  47895c:	movk	w20, #0x289b, lsl #16
  478960:	add	w6, w6, w20
  478964:	ror	w6, w6, #28
  478968:	add	w19, w28, w5
  47896c:	eor	w5, w4, w5
  478970:	add	w6, w6, w4
  478974:	eor	w5, w5, w6
  478978:	mov	w20, #0x27fa                	// #10234
  47897c:	add	w5, w7, w5
  478980:	movk	w20, #0xeaa1, lsl #16
  478984:	add	w5, w5, w20
  478988:	ror	w5, w5, #21
  47898c:	add	w7, w27, w4
  478990:	eor	w4, w6, w4
  478994:	add	w5, w5, w6
  478998:	eor	w4, w4, w5
  47899c:	mov	w20, #0x3085                	// #12421
  4789a0:	add	w4, w19, w4
  4789a4:	movk	w20, #0xd4ef, lsl #16
  4789a8:	add	w4, w4, w20
  4789ac:	ror	w4, w4, #16
  4789b0:	add	w19, w26, w6
  4789b4:	eor	w6, w5, w6
  4789b8:	add	w4, w4, w5
  4789bc:	eor	w6, w6, w4
  4789c0:	mov	w20, #0x1d05                	// #7429
  4789c4:	add	w6, w7, w6
  4789c8:	movk	w20, #0x488, lsl #16
  4789cc:	add	w6, w6, w20
  4789d0:	ror	w6, w6, #9
  4789d4:	add	w7, w1, w5
  4789d8:	eor	w5, w4, w5
  4789dc:	add	w6, w6, w4
  4789e0:	eor	w5, w5, w6
  4789e4:	mov	w20, #0xd039                	// #53305
  4789e8:	add	w5, w19, w5
  4789ec:	movk	w20, #0xd9d4, lsl #16
  4789f0:	add	w5, w5, w20
  4789f4:	ror	w5, w5, #28
  4789f8:	add	w19, w18, w4
  4789fc:	eor	w4, w6, w4
  478a00:	add	w5, w5, w6
  478a04:	eor	w4, w4, w5
  478a08:	mov	w20, #0x99e5                	// #39397
  478a0c:	add	w4, w7, w4
  478a10:	movk	w20, #0xe6db, lsl #16
  478a14:	add	w4, w4, w20
  478a18:	ror	w4, w4, #21
  478a1c:	eor	w7, w5, w6
  478a20:	add	w4, w4, w5
  478a24:	eor	w7, w7, w4
  478a28:	mov	w20, #0x7cf8                	// #31992
  478a2c:	add	w7, w19, w7
  478a30:	movk	w20, #0x1fa2, lsl #16
  478a34:	add	w7, w7, w20
  478a38:	ror	w7, w7, #16
  478a3c:	add	w19, w29, w5
  478a40:	eor	w5, w4, w5
  478a44:	add	w7, w7, w4
  478a48:	add	w6, w23, w6
  478a4c:	eor	w5, w5, w7
  478a50:	add	w5, w6, w5
  478a54:	mov	w6, #0x5665                	// #22117
  478a58:	movk	w6, #0xc4ac, lsl #16
  478a5c:	add	w5, w5, w6
  478a60:	ror	w5, w5, #9
  478a64:	add	w5, w5, w7
  478a68:	add	w17, w17, w4
  478a6c:	orn	w4, w5, w4
  478a70:	eor	w4, w4, w7
  478a74:	mov	w6, #0x2244                	// #8772
  478a78:	add	w4, w19, w4
  478a7c:	movk	w6, #0xf429, lsl #16
  478a80:	add	w4, w4, w6
  478a84:	ror	w4, w4, #26
  478a88:	add	w4, w4, w5
  478a8c:	orn	w6, w4, w7
  478a90:	eor	w6, w6, w5
  478a94:	add	w17, w17, w6
  478a98:	mov	w6, #0xff97                	// #65431
  478a9c:	movk	w6, #0x432a, lsl #16
  478aa0:	add	w17, w17, w6
  478aa4:	ror	w17, w17, #22
  478aa8:	add	w17, w17, w4
  478aac:	add	w14, w14, w5
  478ab0:	orn	w5, w17, w5
  478ab4:	add	w3, w3, w7
  478ab8:	eor	w5, w5, w4
  478abc:	add	w3, w3, w5
  478ac0:	mov	w5, #0x23a7                	// #9127
  478ac4:	movk	w5, #0xab94, lsl #16
  478ac8:	add	w3, w3, w5
  478acc:	ror	w3, w3, #17
  478ad0:	add	w3, w3, w17
  478ad4:	add	w1, w1, w4
  478ad8:	orn	w4, w3, w4
  478adc:	eor	w4, w4, w17
  478ae0:	mov	w5, #0xa039                	// #41017
  478ae4:	add	w14, w14, w4
  478ae8:	movk	w5, #0xfc93, lsl #16
  478aec:	add	w14, w14, w5
  478af0:	ror	w14, w14, #11
  478af4:	add	w14, w14, w3
  478af8:	add	w4, w28, w17
  478afc:	orn	w17, w14, w17
  478b00:	eor	w17, w17, w3
  478b04:	add	w17, w1, w17
  478b08:	mov	w1, #0x59c3                	// #22979
  478b0c:	movk	w1, #0x655b, lsl #16
  478b10:	add	w17, w17, w1
  478b14:	ror	w17, w17, #26
  478b18:	add	w17, w17, w14
  478b1c:	orn	w1, w17, w3
  478b20:	eor	w1, w1, w14
  478b24:	add	w1, w4, w1
  478b28:	mov	w4, #0xcc92                	// #52370
  478b2c:	movk	w4, #0x8f0c, lsl #16
  478b30:	add	w1, w1, w4
  478b34:	ror	w1, w1, #22
  478b38:	add	w1, w1, w17
  478b3c:	add	w16, w16, w3
  478b40:	add	w3, w25, w14
  478b44:	orn	w14, w1, w14
  478b48:	eor	w14, w14, w17
  478b4c:	add	w14, w16, w14
  478b50:	mov	w16, #0xf47d                	// #62589
  478b54:	movk	w16, #0xffef, lsl #16
  478b58:	add	w14, w14, w16
  478b5c:	ror	w14, w14, #17
  478b60:	add	w14, w14, w1
  478b64:	orn	w16, w14, w17
  478b68:	add	w13, w13, w17
  478b6c:	eor	w16, w16, w1
  478b70:	add	w17, w18, w1
  478b74:	mov	w18, #0x5dd1                	// #24017
  478b78:	add	w16, w3, w16
  478b7c:	movk	w18, #0x8584, lsl #16
  478b80:	add	w16, w16, w18
  478b84:	ror	w16, w16, #11
  478b88:	add	w16, w16, w14
  478b8c:	orn	w18, w16, w1
  478b90:	eor	w18, w18, w14
  478b94:	mov	w1, #0x7e4f                	// #32335
  478b98:	add	w13, w13, w18
  478b9c:	movk	w1, #0x6fa8, lsl #16
  478ba0:	add	w13, w13, w1
  478ba4:	ror	w13, w13, #26
  478ba8:	add	w13, w13, w16
  478bac:	add	w18, w27, w14
  478bb0:	orn	w14, w13, w14
  478bb4:	eor	w14, w14, w16
  478bb8:	add	w14, w17, w14
  478bbc:	mov	w17, #0xe6e0                	// #59104
  478bc0:	movk	w17, #0xfe2c, lsl #16
  478bc4:	add	w14, w14, w17
  478bc8:	ror	w14, w14, #22
  478bcc:	add	w14, w14, w13
  478bd0:	add	w15, w15, w16
  478bd4:	orn	w16, w14, w16
  478bd8:	eor	w16, w16, w13
  478bdc:	add	w16, w18, w16
  478be0:	mov	w18, #0x4314                	// #17172
  478be4:	movk	w18, #0xa301, lsl #16
  478be8:	add	w16, w16, w18
  478bec:	ror	w16, w16, #17
  478bf0:	add	w16, w16, w14
  478bf4:	add	w17, w24, w13
  478bf8:	orn	w13, w16, w13
  478bfc:	eor	w13, w13, w14
  478c00:	mov	w18, #0x11a1                	// #4513
  478c04:	add	w13, w15, w13
  478c08:	movk	w18, #0x4e08, lsl #16
  478c0c:	add	w13, w13, w18
  478c10:	ror	w13, w13, #11
  478c14:	add	w13, w13, w16
  478c18:	add	w15, w30, w14
  478c1c:	orn	w14, w13, w14
  478c20:	eor	w14, w14, w16
  478c24:	mov	w18, #0x7e82                	// #32386
  478c28:	add	w14, w17, w14
  478c2c:	movk	w18, #0xf753, lsl #16
  478c30:	add	w14, w14, w18
  478c34:	ror	w14, w14, #26
  478c38:	add	w14, w14, w13
  478c3c:	add	w17, w23, w16
  478c40:	orn	w16, w14, w16
  478c44:	eor	w16, w16, w13
  478c48:	mov	w18, #0xf235                	// #62005
  478c4c:	add	w15, w15, w16
  478c50:	movk	w18, #0xbd3a, lsl #16
  478c54:	add	w15, w15, w18
  478c58:	ror	w15, w15, #22
  478c5c:	add	w15, w15, w14
  478c60:	add	w16, w26, w13
  478c64:	orn	w13, w15, w13
  478c68:	eor	w13, w13, w14
  478c6c:	add	w13, w17, w13
  478c70:	mov	w17, #0xd2bb                	// #53947
  478c74:	movk	w17, #0x2ad7, lsl #16
  478c78:	add	w13, w13, w17
  478c7c:	ror	w13, w13, #17
  478c80:	add	w13, w13, w15
  478c84:	add	w8, w14, w8
  478c88:	orn	w14, w13, w14
  478c8c:	add	w9, w13, w9
  478c90:	add	w11, w13, w11
  478c94:	eor	w13, w14, w15
  478c98:	add	w13, w16, w13
  478c9c:	add	w13, w13, w22
  478ca0:	ror	w13, w13, #11
  478ca4:	add	x0, x0, #0x40
  478ca8:	add	w9, w9, w13
  478cac:	cmp	x0, x12
  478cb0:	add	w10, w15, w10
  478cb4:	b.cc	47830c <feof@plt+0x74a6c>  // b.lo, b.ul, b.last
  478cb8:	stp	w8, w9, [x2]
  478cbc:	stp	w11, w10, [x2, #8]
  478cc0:	ldp	x20, x19, [sp, #80]
  478cc4:	ldp	x22, x21, [sp, #64]
  478cc8:	ldp	x24, x23, [sp, #48]
  478ccc:	ldp	x26, x25, [sp, #32]
  478cd0:	ldp	x28, x27, [sp, #16]
  478cd4:	ldp	x29, x30, [sp], #96
  478cd8:	ret
  478cdc:	stp	x29, x30, [sp, #-80]!
  478ce0:	stp	x28, x25, [sp, #16]
  478ce4:	stp	x24, x23, [sp, #32]
  478ce8:	stp	x22, x21, [sp, #48]
  478cec:	stp	x20, x19, [sp, #64]
  478cf0:	mov	x29, sp
  478cf4:	sub	sp, sp, #0x1, lsl #12
  478cf8:	sub	sp, sp, #0xf0
  478cfc:	adrp	x8, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  478d00:	ldr	q0, [x8, #3856]
  478d04:	mov	x19, x1
  478d08:	mov	x21, x0
  478d0c:	mov	x20, xzr
  478d10:	sub	x22, x29, #0xa0
  478d14:	add	x23, sp, #0x8
  478d18:	mov	w24, #0x1000                	// #4096
  478d1c:	str	q0, [x22]
  478d20:	stur	xzr, [x29, #-144]
  478d24:	stur	wzr, [x29, #-136]
  478d28:	add	x0, x23, x20
  478d2c:	sub	x2, x24, x20
  478d30:	mov	w1, #0x1                   	// #1
  478d34:	mov	x3, x21
  478d38:	bl	402fd0 <fread@plt>
  478d3c:	add	x20, x0, x20
  478d40:	cbz	x0, 478d4c <feof@plt+0x754ac>
  478d44:	cmp	x20, #0x1, lsl #12
  478d48:	b.cc	478d28 <feof@plt+0x75488>  // b.lo, b.ul, b.last
  478d4c:	cbz	x0, 478d68 <feof@plt+0x754c8>
  478d50:	add	x0, sp, #0x8
  478d54:	sub	x2, x29, #0xa0
  478d58:	mov	w1, #0x1000                	// #4096
  478d5c:	bl	4782b0 <feof@plt+0x74a10>
  478d60:	mov	x20, xzr
  478d64:	b	478d28 <feof@plt+0x75488>
  478d68:	mov	x0, x21
  478d6c:	bl	4037c0 <ferror@plt>
  478d70:	cbz	w0, 478d7c <feof@plt+0x754dc>
  478d74:	mov	w0, #0x1                   	// #1
  478d78:	b	478e0c <feof@plt+0x7556c>
  478d7c:	cbz	x20, 478d90 <feof@plt+0x754f0>
  478d80:	add	x0, sp, #0x8
  478d84:	sub	x2, x29, #0xa0
  478d88:	mov	x1, x20
  478d8c:	bl	478e2c <feof@plt+0x7558c>
  478d90:	ldp	w24, w23, [x29, #-140]
  478d94:	ldur	w8, [x29, #-144]
  478d98:	adds	w25, w8, w23
  478d9c:	stur	w25, [x29, #-144]
  478da0:	b.cc	478dac <feof@plt+0x7550c>  // b.lo, b.ul, b.last
  478da4:	add	w24, w24, #0x1
  478da8:	stur	w24, [x29, #-140]
  478dac:	cmp	w23, #0x38
  478db0:	mov	w8, #0x78                  	// #120
  478db4:	mov	w9, #0x38                  	// #56
  478db8:	sub	x10, x29, #0xa0
  478dbc:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  478dc0:	add	x20, x10, #0x1c
  478dc4:	sub	w21, w8, w23
  478dc8:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  478dcc:	add	x0, x20, x23
  478dd0:	add	x1, x1, #0xf20
  478dd4:	mov	x2, x21
  478dd8:	bl	402fc0 <memcpy@plt>
  478ddc:	add	x9, x21, x23
  478de0:	lsl	w8, w25, #3
  478de4:	extr	w10, w24, w25, #29
  478de8:	add	x11, x20, x9
  478dec:	add	x1, x9, #0x8
  478df0:	sub	x2, x29, #0xa0
  478df4:	mov	x0, x20
  478df8:	stp	w8, w10, [x11]
  478dfc:	bl	4782b0 <feof@plt+0x74a10>
  478e00:	ldr	q0, [x22]
  478e04:	mov	w0, wzr
  478e08:	str	q0, [x19]
  478e0c:	add	sp, sp, #0x1, lsl #12
  478e10:	add	sp, sp, #0xf0
  478e14:	ldp	x20, x19, [sp, #64]
  478e18:	ldp	x22, x21, [sp, #48]
  478e1c:	ldp	x24, x23, [sp, #32]
  478e20:	ldp	x28, x25, [sp, #16]
  478e24:	ldp	x29, x30, [sp], #80
  478e28:	ret
  478e2c:	stp	x29, x30, [sp, #-80]!
  478e30:	stp	x24, x23, [sp, #32]
  478e34:	stp	x22, x21, [sp, #48]
  478e38:	stp	x20, x19, [sp, #64]
  478e3c:	ldr	w23, [x2, #24]
  478e40:	mov	x19, x2
  478e44:	mov	x20, x1
  478e48:	mov	x21, x0
  478e4c:	str	x25, [sp, #16]
  478e50:	mov	x29, sp
  478e54:	cbz	w23, 478ec8 <feof@plt+0x75628>
  478e58:	mov	w8, #0x80                  	// #128
  478e5c:	sub	x8, x8, x23
  478e60:	cmp	x8, x20
  478e64:	add	x9, x19, x23
  478e68:	csel	x22, x20, x8, hi  // hi = pmore
  478e6c:	add	x0, x9, #0x1c
  478e70:	mov	x1, x21
  478e74:	mov	x2, x22
  478e78:	bl	402fc0 <memcpy@plt>
  478e7c:	add	x25, x22, x23
  478e80:	add	w8, w23, w22
  478e84:	cmp	x25, #0x41
  478e88:	str	w8, [x19, #24]
  478e8c:	b.cc	478ec0 <feof@plt+0x75620>  // b.lo, b.ul, b.last
  478e90:	add	x23, x19, #0x1c
  478e94:	and	x24, x25, #0xffffffffffffffc0
  478e98:	mov	x0, x23
  478e9c:	mov	x1, x24
  478ea0:	mov	x2, x19
  478ea4:	bl	4782b0 <feof@plt+0x74a10>
  478ea8:	add	x1, x23, x24
  478eac:	and	x24, x25, #0x3f
  478eb0:	mov	x0, x23
  478eb4:	mov	x2, x24
  478eb8:	bl	402fc0 <memcpy@plt>
  478ebc:	str	w24, [x19, #24]
  478ec0:	add	x21, x21, x22
  478ec4:	sub	x20, x20, x22
  478ec8:	subs	x8, x20, #0x41
  478ecc:	b.cc	478f18 <feof@plt+0x75678>  // b.lo, b.ul, b.last
  478ed0:	tst	x21, #0x3
  478ed4:	b.eq	478f48 <feof@plt+0x756a8>  // b.none
  478ed8:	add	x22, x19, #0x1c
  478edc:	and	x23, x8, #0xffffffffffffffc0
  478ee0:	mov	x24, x20
  478ee4:	ldp	q1, q0, [x21, #32]
  478ee8:	ldp	q3, q2, [x21], #64
  478eec:	mov	w1, #0x40                  	// #64
  478ef0:	mov	x0, x22
  478ef4:	mov	x2, x19
  478ef8:	stp	q1, q0, [x22, #32]
  478efc:	stp	q3, q2, [x22]
  478f00:	bl	4782b0 <feof@plt+0x74a10>
  478f04:	sub	x24, x24, #0x40
  478f08:	cmp	x24, #0x40
  478f0c:	b.hi	478ee4 <feof@plt+0x75644>  // b.pmore
  478f10:	sub	x8, x20, x23
  478f14:	sub	x20, x8, #0x40
  478f18:	cbz	x20, 478f30 <feof@plt+0x75690>
  478f1c:	add	x0, x19, #0x1c
  478f20:	mov	x1, x21
  478f24:	mov	x2, x20
  478f28:	bl	402fc0 <memcpy@plt>
  478f2c:	str	w20, [x19, #24]
  478f30:	ldp	x20, x19, [sp, #64]
  478f34:	ldp	x22, x21, [sp, #48]
  478f38:	ldp	x24, x23, [sp, #32]
  478f3c:	ldr	x25, [sp, #16]
  478f40:	ldp	x29, x30, [sp], #80
  478f44:	ret
  478f48:	and	x22, x20, #0xffffffffffffffc0
  478f4c:	mov	x0, x21
  478f50:	mov	x1, x22
  478f54:	mov	x2, x19
  478f58:	bl	4782b0 <feof@plt+0x74a10>
  478f5c:	add	x21, x21, x22
  478f60:	and	x20, x20, #0x3f
  478f64:	cbnz	x20, 478f1c <feof@plt+0x7567c>
  478f68:	b	478f30 <feof@plt+0x75690>
  478f6c:	sub	sp, sp, #0xe0
  478f70:	adrp	x8, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  478f74:	ldr	q0, [x8, #3856]
  478f78:	stp	x20, x19, [sp, #208]
  478f7c:	mov	x19, x2
  478f80:	mov	x2, sp
  478f84:	stp	x29, x30, [sp, #160]
  478f88:	stp	x24, x23, [sp, #176]
  478f8c:	stp	x22, x21, [sp, #192]
  478f90:	add	x29, sp, #0xa0
  478f94:	str	xzr, [sp, #16]
  478f98:	str	q0, [sp]
  478f9c:	str	wzr, [sp, #24]
  478fa0:	mov	x20, sp
  478fa4:	bl	478e2c <feof@plt+0x7558c>
  478fa8:	ldp	w23, w22, [sp, #20]
  478fac:	ldr	w8, [sp, #16]
  478fb0:	adds	w24, w8, w22
  478fb4:	str	w24, [sp, #16]
  478fb8:	b.cc	478fc4 <feof@plt+0x75724>  // b.lo, b.ul, b.last
  478fbc:	add	w23, w23, #0x1
  478fc0:	str	w23, [sp, #20]
  478fc4:	cmp	w22, #0x38
  478fc8:	mov	w8, #0x78                  	// #120
  478fcc:	mov	w9, #0x38                  	// #56
  478fd0:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  478fd4:	add	x20, x20, #0x1c
  478fd8:	sub	w21, w8, w22
  478fdc:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  478fe0:	add	x0, x20, x22
  478fe4:	add	x1, x1, #0xf20
  478fe8:	mov	x2, x21
  478fec:	bl	402fc0 <memcpy@plt>
  478ff0:	add	x9, x21, x22
  478ff4:	lsl	w8, w24, #3
  478ff8:	extr	w10, w23, w24, #29
  478ffc:	add	x11, x20, x9
  479000:	add	x1, x9, #0x8
  479004:	mov	x2, sp
  479008:	mov	x0, x20
  47900c:	stp	w8, w10, [x11]
  479010:	bl	4782b0 <feof@plt+0x74a10>
  479014:	ldr	q0, [sp]
  479018:	mov	x0, x19
  47901c:	str	q0, [x19]
  479020:	ldp	x20, x19, [sp, #208]
  479024:	ldp	x22, x21, [sp, #192]
  479028:	ldp	x24, x23, [sp, #176]
  47902c:	ldp	x29, x30, [sp, #160]
  479030:	add	sp, sp, #0xe0
  479034:	ret
  479038:	stp	x29, x30, [sp, #-48]!
  47903c:	str	x21, [sp, #16]
  479040:	stp	x20, x19, [sp, #32]
  479044:	mov	x29, sp
  479048:	cbz	x0, 4790a4 <feof@plt+0x75804>
  47904c:	mov	x20, x0
  479050:	mov	x8, xzr
  479054:	ldr	x9, [x20, x8]
  479058:	add	x8, x8, #0x8
  47905c:	cbnz	x9, 479054 <feof@plt+0x757b4>
  479060:	and	x0, x8, #0x7fffffff8
  479064:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  479068:	ldr	x8, [x20]
  47906c:	mov	x19, x0
  479070:	cbz	x8, 47909c <feof@plt+0x757fc>
  479074:	mov	x21, xzr
  479078:	add	x20, x20, #0x8
  47907c:	mov	x0, x8
  479080:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  479084:	lsl	x8, x21, #3
  479088:	str	x0, [x19, x8]
  47908c:	ldr	x8, [x20, x8]
  479090:	add	x21, x21, #0x1
  479094:	cbnz	x8, 47907c <feof@plt+0x757dc>
  479098:	and	x8, x21, #0xffffffff
  47909c:	str	xzr, [x19, x8, lsl #3]
  4790a0:	b	4790a8 <feof@plt+0x75808>
  4790a4:	mov	x19, xzr
  4790a8:	mov	x0, x19
  4790ac:	ldp	x20, x19, [sp, #32]
  4790b0:	ldr	x21, [sp, #16]
  4790b4:	ldp	x29, x30, [sp], #48
  4790b8:	ret
  4790bc:	cbz	x0, 4790f8 <feof@plt+0x75858>
  4790c0:	stp	x29, x30, [sp, #-32]!
  4790c4:	stp	x20, x19, [sp, #16]
  4790c8:	mov	x19, x0
  4790cc:	ldr	x0, [x0]
  4790d0:	mov	x29, sp
  4790d4:	cbz	x0, 4790e8 <feof@plt+0x75848>
  4790d8:	add	x20, x19, #0x8
  4790dc:	bl	4031d0 <free@plt>
  4790e0:	ldr	x0, [x20], #8
  4790e4:	cbnz	x0, 4790dc <feof@plt+0x7583c>
  4790e8:	mov	x0, x19
  4790ec:	ldp	x20, x19, [sp, #16]
  4790f0:	ldp	x29, x30, [sp], #32
  4790f4:	b	4031d0 <free@plt>
  4790f8:	ret
  4790fc:	stp	x29, x30, [sp, #-96]!
  479100:	str	x27, [sp, #16]
  479104:	stp	x26, x25, [sp, #32]
  479108:	stp	x24, x23, [sp, #48]
  47910c:	stp	x22, x21, [sp, #64]
  479110:	stp	x20, x19, [sp, #80]
  479114:	mov	x29, sp
  479118:	cbz	x0, 4792c0 <feof@plt+0x75a20>
  47911c:	mov	x19, x0
  479120:	bl	4030b0 <strlen@plt>
  479124:	add	x0, x0, #0x1
  479128:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  47912c:	ldrb	w8, [x19]
  479130:	adrp	x23, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  479134:	mov	x20, x0
  479138:	mov	x22, xzr
  47913c:	mov	w26, wzr
  479140:	mov	w25, wzr
  479144:	mov	w27, wzr
  479148:	mov	w24, wzr
  47914c:	mov	x21, xzr
  479150:	add	x23, x23, #0x4a2
  479154:	b	47915c <feof@plt+0x758bc>
  479158:	cbz	w8, 4792b4 <feof@plt+0x75a14>
  47915c:	and	x9, x8, #0xff
  479160:	ldrh	w9, [x23, x9, lsl #1]
  479164:	tbz	w9, #6, 479174 <feof@plt+0x758d4>
  479168:	ldrb	w8, [x19, #1]!
  47916c:	ldrh	w9, [x23, x8, lsl #1]
  479170:	tbnz	w9, #6, 479168 <feof@plt+0x758c8>
  479174:	subs	w9, w24, #0x1
  479178:	b.cc	479188 <feof@plt+0x758e8>  // b.lo, b.ul, b.last
  47917c:	sxtw	x9, w9
  479180:	cmp	x22, x9
  479184:	b.lt	4791bc <feof@plt+0x7591c>  // b.tstop
  479188:	cbz	x21, 4791a4 <feof@plt+0x75904>
  47918c:	lsl	w24, w24, #1
  479190:	sbfiz	x1, x24, #3, #32
  479194:	mov	x0, x21
  479198:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  47919c:	mov	x21, x0
  4791a0:	b	4791b4 <feof@plt+0x75914>
  4791a4:	mov	w0, #0x40                  	// #64
  4791a8:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4791ac:	mov	x21, x0
  4791b0:	mov	w24, #0x8                   	// #8
  4791b4:	str	xzr, [x21, x22, lsl #3]
  4791b8:	ldrb	w8, [x19]
  4791bc:	mov	x9, x20
  4791c0:	tst	w8, #0xff
  4791c4:	b.ne	479214 <feof@plt+0x75974>  // b.any
  4791c8:	mov	x0, x20
  4791cc:	strb	wzr, [x9]
  4791d0:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  4791d4:	str	x0, [x21, x22, lsl #3]
  4791d8:	add	x22, x22, #0x1
  4791dc:	str	xzr, [x21, x22, lsl #3]
  4791e0:	ldrb	w8, [x19]
  4791e4:	ldrh	w9, [x23, x8, lsl #1]
  4791e8:	tbz	w9, #6, 479158 <feof@plt+0x758b8>
  4791ec:	ldrb	w8, [x19, #1]!
  4791f0:	ldrh	w9, [x23, x8, lsl #1]
  4791f4:	tbnz	w9, #6, 4791ec <feof@plt+0x7594c>
  4791f8:	b	479158 <feof@plt+0x758b8>
  4791fc:	mov	w26, wzr
  479200:	mov	w25, wzr
  479204:	mov	w27, wzr
  479208:	strb	w8, [x9], #1
  47920c:	ldrb	w8, [x19, #1]!
  479210:	cbz	w8, 4791c8 <feof@plt+0x75928>
  479214:	orr	w10, w25, w26
  479218:	orr	w10, w10, w27
  47921c:	cbnz	w10, 47922c <feof@plt+0x7598c>
  479220:	and	x10, x8, #0xff
  479224:	ldrh	w10, [x23, x10, lsl #1]
  479228:	tbnz	w10, #6, 4791c8 <feof@plt+0x75928>
  47922c:	cbnz	w27, 479204 <feof@plt+0x75964>
  479230:	and	w10, w8, #0xff
  479234:	cmp	w10, #0x5c
  479238:	b.ne	479244 <feof@plt+0x759a4>  // b.any
  47923c:	mov	w27, #0x1                   	// #1
  479240:	b	47920c <feof@plt+0x7596c>
  479244:	and	w10, w8, #0xff
  479248:	cbnz	w26, 479270 <feof@plt+0x759d0>
  47924c:	cbnz	w25, 479284 <feof@plt+0x759e4>
  479250:	cmp	w10, #0x27
  479254:	b.eq	47929c <feof@plt+0x759fc>  // b.none
  479258:	cmp	w10, #0x22
  47925c:	b.ne	4791fc <feof@plt+0x7595c>  // b.any
  479260:	mov	w26, wzr
  479264:	mov	w27, wzr
  479268:	mov	w25, #0x1                   	// #1
  47926c:	b	47920c <feof@plt+0x7596c>
  479270:	cmp	w10, #0x27
  479274:	b.ne	479204 <feof@plt+0x75964>  // b.any
  479278:	mov	w26, wzr
  47927c:	mov	w27, wzr
  479280:	b	47920c <feof@plt+0x7596c>
  479284:	cmp	w10, #0x22
  479288:	b.ne	4792ac <feof@plt+0x75a0c>  // b.any
  47928c:	mov	w26, wzr
  479290:	mov	w25, wzr
  479294:	mov	w27, wzr
  479298:	b	47920c <feof@plt+0x7596c>
  47929c:	mov	w25, wzr
  4792a0:	mov	w27, wzr
  4792a4:	mov	w26, #0x1                   	// #1
  4792a8:	b	47920c <feof@plt+0x7596c>
  4792ac:	mov	w26, wzr
  4792b0:	b	479204 <feof@plt+0x75964>
  4792b4:	mov	x0, x20
  4792b8:	bl	4031d0 <free@plt>
  4792bc:	b	4792c4 <feof@plt+0x75a24>
  4792c0:	mov	x21, xzr
  4792c4:	mov	x0, x21
  4792c8:	ldp	x20, x19, [sp, #80]
  4792cc:	ldp	x22, x21, [sp, #64]
  4792d0:	ldp	x24, x23, [sp, #48]
  4792d4:	ldp	x26, x25, [sp, #32]
  4792d8:	ldr	x27, [sp, #16]
  4792dc:	ldp	x29, x30, [sp], #96
  4792e0:	ret
  4792e4:	stp	x29, x30, [sp, #-80]!
  4792e8:	str	x25, [sp, #16]
  4792ec:	stp	x24, x23, [sp, #32]
  4792f0:	stp	x22, x21, [sp, #48]
  4792f4:	stp	x20, x19, [sp, #64]
  4792f8:	mov	x29, sp
  4792fc:	cbz	x1, 47939c <feof@plt+0x75afc>
  479300:	adrp	x22, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  479304:	mov	x24, #0x21                  	// #33
  479308:	mov	x19, x1
  47930c:	mov	x20, x0
  479310:	add	x22, x22, #0x4a2
  479314:	mov	w23, #0x1                   	// #1
  479318:	movk	x24, #0x400, lsl #48
  47931c:	ldr	x25, [x20]
  479320:	cbz	x25, 4793b8 <feof@plt+0x75b18>
  479324:	ldrb	w21, [x25]
  479328:	cbz	w21, 47937c <feof@plt+0x75adc>
  47932c:	ldrh	w8, [x22, x21, lsl #1]
  479330:	tbnz	w8, #6, 47934c <feof@plt+0x75aac>
  479334:	sub	w8, w21, #0x22
  479338:	cmp	w8, #0x3a
  47933c:	b.hi	479360 <feof@plt+0x75ac0>  // b.pmore
  479340:	lsl	x8, x23, x8
  479344:	tst	x8, x24
  479348:	b.eq	479360 <feof@plt+0x75ac0>  // b.none
  47934c:	mov	w0, #0x5c                  	// #92
  479350:	mov	x1, x19
  479354:	bl	403480 <fputc@plt>
  479358:	cmn	w0, #0x1
  47935c:	b.eq	47939c <feof@plt+0x75afc>  // b.none
  479360:	mov	w0, w21
  479364:	mov	x1, x19
  479368:	bl	403480 <fputc@plt>
  47936c:	cmn	w0, #0x1
  479370:	add	x25, x25, #0x1
  479374:	b.ne	479324 <feof@plt+0x75a84>  // b.any
  479378:	b	47939c <feof@plt+0x75afc>
  47937c:	mov	w0, #0xa                   	// #10
  479380:	mov	x1, x19
  479384:	bl	403480 <fputc@plt>
  479388:	add	x20, x20, #0x8
  47938c:	cmn	w0, #0x1
  479390:	mov	w0, #0x1                   	// #1
  479394:	b.ne	47931c <feof@plt+0x75a7c>  // b.any
  479398:	b	4793a0 <feof@plt+0x75b00>
  47939c:	mov	w0, #0x1                   	// #1
  4793a0:	ldp	x20, x19, [sp, #64]
  4793a4:	ldp	x22, x21, [sp, #48]
  4793a8:	ldp	x24, x23, [sp, #32]
  4793ac:	ldr	x25, [sp, #16]
  4793b0:	ldp	x29, x30, [sp], #80
  4793b4:	ret
  4793b8:	mov	w0, wzr
  4793bc:	b	4793a0 <feof@plt+0x75b00>
  4793c0:	sub	sp, sp, #0x100
  4793c4:	stp	x29, x30, [sp, #160]
  4793c8:	stp	x28, x27, [sp, #176]
  4793cc:	stp	x26, x25, [sp, #192]
  4793d0:	stp	x24, x23, [sp, #208]
  4793d4:	stp	x22, x21, [sp, #224]
  4793d8:	stp	x20, x19, [sp, #240]
  4793dc:	ldr	w8, [x0]
  4793e0:	add	x29, sp, #0xa0
  4793e4:	cmp	w8, #0x2
  4793e8:	b.lt	479670 <feof@plt+0x75dd0>  // b.tstop
  4793ec:	ldr	x8, [x1]
  4793f0:	adrp	x26, 4c8000 <_obstack_memory_used@@Base+0x4c2fc>
  4793f4:	adrp	x23, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  4793f8:	mov	x20, x0
  4793fc:	mov	x19, x1
  479400:	mov	w28, wzr
  479404:	mov	w27, #0x7d0                 	// #2000
  479408:	mov	w21, #0x1                   	// #1
  47940c:	add	x26, x26, #0x639
  479410:	add	x25, x8, #0x8
  479414:	add	x23, x23, #0x4a2
  479418:	stp	x25, x8, [sp, #8]
  47941c:	ldr	x9, [x8, w21, sxtw #3]
  479420:	ldrb	w10, [x9]
  479424:	cmp	w10, #0x40
  479428:	b.ne	4794f4 <feof@plt+0x75c54>  // b.any
  47942c:	subs	w27, w27, #0x1
  479430:	b.eq	479690 <feof@plt+0x75df0>  // b.none
  479434:	add	x22, x9, #0x1
  479438:	add	x2, sp, #0x20
  47943c:	mov	w0, wzr
  479440:	mov	x1, x22
  479444:	bl	403650 <__xstat@plt>
  479448:	tbnz	w0, #31, 4794f4 <feof@plt+0x75c54>
  47944c:	ldr	w8, [sp, #48]
  479450:	and	w8, w8, #0xf000
  479454:	cmp	w8, #0x4, lsl #12
  479458:	b.eq	4796a8 <feof@plt+0x75e08>  // b.none
  47945c:	mov	x0, x22
  479460:	mov	x1, x26
  479464:	bl	403620 <fopen@plt>
  479468:	cbz	x0, 4794f4 <feof@plt+0x75c54>
  47946c:	mov	w2, #0x2                   	// #2
  479470:	mov	x1, xzr
  479474:	mov	x22, x0
  479478:	bl	403870 <fseek@plt>
  47947c:	cmn	w0, #0x1
  479480:	b.eq	4794e4 <feof@plt+0x75c44>  // b.none
  479484:	mov	x0, x22
  479488:	bl	4030f0 <ftell@plt>
  47948c:	cmn	x0, #0x1
  479490:	b.eq	4794e4 <feof@plt+0x75c44>  // b.none
  479494:	mov	x24, x0
  479498:	mov	x0, x22
  47949c:	mov	x1, xzr
  4794a0:	mov	w2, wzr
  4794a4:	bl	403870 <fseek@plt>
  4794a8:	cmn	w0, #0x1
  4794ac:	b.eq	4794e4 <feof@plt+0x75c44>  // b.none
  4794b0:	add	x0, x24, #0x1
  4794b4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  4794b8:	mov	w1, #0x1                   	// #1
  4794bc:	mov	x2, x24
  4794c0:	mov	x3, x22
  4794c4:	str	x0, [sp, #24]
  4794c8:	bl	4031e0 <fread_unlocked@plt>
  4794cc:	mov	x25, x0
  4794d0:	cmp	x0, x24
  4794d4:	b.eq	479510 <feof@plt+0x75c70>  // b.none
  4794d8:	mov	x0, x22
  4794dc:	bl	4037c0 <ferror@plt>
  4794e0:	cbz	w0, 479510 <feof@plt+0x75c70>
  4794e4:	mov	w28, w21
  4794e8:	mov	x0, x22
  4794ec:	bl	403150 <fclose@plt>
  4794f0:	b	4794f8 <feof@plt+0x75c58>
  4794f4:	mov	w28, w21
  4794f8:	ldr	w8, [x20]
  4794fc:	add	w21, w28, #0x1
  479500:	cmp	w21, w8
  479504:	b.ge	479670 <feof@plt+0x75dd0>  // b.tcont
  479508:	ldr	x8, [x19]
  47950c:	b	47941c <feof@plt+0x75b7c>
  479510:	ldr	x0, [sp, #24]
  479514:	strb	wzr, [x0, x25]
  479518:	ldrb	w8, [x0]
  47951c:	cbz	w8, 47953c <feof@plt+0x75c9c>
  479520:	mov	w9, #0x1                   	// #1
  479524:	and	x8, x8, #0xff
  479528:	ldrh	w8, [x23, x8, lsl #1]
  47952c:	tbz	w8, #6, 479550 <feof@plt+0x75cb0>
  479530:	ldrb	w8, [x0, x9]
  479534:	add	x9, x9, #0x1
  479538:	cbnz	w8, 479524 <feof@plt+0x75c84>
  47953c:	mov	w0, #0x8                   	// #8
  479540:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  479544:	mov	x24, x0
  479548:	str	xzr, [x0]
  47954c:	b	479558 <feof@plt+0x75cb8>
  479550:	bl	4790fc <feof@plt+0x7585c>
  479554:	mov	x24, x0
  479558:	ldr	x25, [x19]
  47955c:	ldr	x23, [sp, #16]
  479560:	cmp	x25, x23
  479564:	b.ne	4795c8 <feof@plt+0x75d28>  // b.any
  479568:	cbz	x23, 4795c0 <feof@plt+0x75d20>
  47956c:	mov	x8, xzr
  479570:	ldr	x9, [x23, x8]
  479574:	add	x8, x8, #0x8
  479578:	cbnz	x9, 479570 <feof@plt+0x75cd0>
  47957c:	and	x0, x8, #0x7fffffff8
  479580:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  479584:	ldr	x8, [x23]
  479588:	mov	x25, x0
  47958c:	cbz	x8, 4795b8 <feof@plt+0x75d18>
  479590:	ldr	x23, [sp, #8]
  479594:	mov	x26, xzr
  479598:	mov	x0, x8
  47959c:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  4795a0:	lsl	x8, x26, #3
  4795a4:	str	x0, [x25, x8]
  4795a8:	ldr	x8, [x23, x8]
  4795ac:	add	x26, x26, #0x1
  4795b0:	cbnz	x8, 479598 <feof@plt+0x75cf8>
  4795b4:	and	x8, x26, #0xffffffff
  4795b8:	str	xzr, [x25, x8, lsl #3]
  4795bc:	b	4795c4 <feof@plt+0x75d24>
  4795c0:	mov	x25, xzr
  4795c4:	str	x25, [x19]
  4795c8:	mov	x9, xzr
  4795cc:	sxtw	x8, w21
  4795d0:	ldr	x10, [x24, x9, lsl #3]
  4795d4:	mov	x26, x9
  4795d8:	add	x9, x9, #0x1
  4795dc:	cbnz	x10, 4795d0 <feof@plt+0x75d30>
  4795e0:	lsl	x23, x8, #3
  4795e4:	ldr	x0, [x25, x23]
  4795e8:	bl	4031d0 <free@plt>
  4795ec:	ldrsw	x8, [x20]
  4795f0:	ldr	x0, [x19]
  4795f4:	add	x8, x26, x8
  4795f8:	lsl	x8, x8, #3
  4795fc:	add	x1, x8, #0x8
  479600:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  479604:	str	x0, [x19]
  479608:	ldr	w9, [x20]
  47960c:	add	x8, x0, x23
  479610:	lsl	x25, x26, #3
  479614:	add	x0, x8, x25
  479618:	add	x1, x8, #0x8
  47961c:	sub	w8, w9, w21
  479620:	sbfiz	x2, x8, #3, #32
  479624:	bl	403580 <memmove@plt>
  479628:	ldr	x8, [x19]
  47962c:	mov	x1, x24
  479630:	mov	x2, x25
  479634:	add	x0, x8, x23
  479638:	bl	402fc0 <memcpy@plt>
  47963c:	ldr	w8, [x20]
  479640:	mov	x0, x24
  479644:	add	w8, w26, w8
  479648:	sub	w8, w8, #0x1
  47964c:	str	w8, [x20]
  479650:	bl	4031d0 <free@plt>
  479654:	ldr	x0, [sp, #24]
  479658:	bl	4031d0 <free@plt>
  47965c:	adrp	x26, 4c8000 <_obstack_memory_used@@Base+0x4c2fc>
  479660:	adrp	x23, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  479664:	add	x26, x26, #0x639
  479668:	add	x23, x23, #0x4a2
  47966c:	b	4794e8 <feof@plt+0x75c48>
  479670:	ldp	x20, x19, [sp, #240]
  479674:	ldp	x22, x21, [sp, #224]
  479678:	ldp	x24, x23, [sp, #208]
  47967c:	ldp	x26, x25, [sp, #192]
  479680:	ldp	x28, x27, [sp, #176]
  479684:	ldp	x29, x30, [sp, #160]
  479688:	add	sp, sp, #0x100
  47968c:	ret
  479690:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  479694:	ldr	x0, [x9, #1096]
  479698:	ldr	x2, [x8]
  47969c:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  4796a0:	add	x1, x1, #0xf60
  4796a4:	b	4796c0 <feof@plt+0x75e20>
  4796a8:	ldr	x8, [x19]
  4796ac:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  4796b0:	ldr	x0, [x9, #1096]
  4796b4:	adrp	x1, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  4796b8:	ldr	x2, [x8]
  4796bc:	add	x1, x1, #0xf89
  4796c0:	bl	4030d0 <fprintf@plt>
  4796c4:	mov	w0, #0x1                   	// #1
  4796c8:	bl	47cfb8 <_obstack_memory_used@@Base+0x12b4>
  4796cc:	cbz	x0, 4796e4 <feof@plt+0x75e44>
  4796d0:	mov	x8, x0
  4796d4:	mov	w0, #0xffffffff            	// #-1
  4796d8:	ldr	x9, [x8], #8
  4796dc:	add	w0, w0, #0x1
  4796e0:	cbnz	x9, 4796d8 <feof@plt+0x75e38>
  4796e4:	ret
  4796e8:	sub	sp, sp, #0x120
  4796ec:	stp	x29, x30, [sp, #224]
  4796f0:	add	x29, sp, #0xe0
  4796f4:	mov	x8, #0xffffffffffffffc8    	// #-56
  4796f8:	mov	x9, sp
  4796fc:	sub	x10, x29, #0x58
  479700:	stp	x20, x19, [sp, #272]
  479704:	movk	x8, #0xff80, lsl #32
  479708:	add	x11, x29, #0x40
  47970c:	add	x9, x9, #0x80
  479710:	add	x20, x10, #0x38
  479714:	str	x28, [sp, #240]
  479718:	stp	x22, x21, [sp, #256]
  47971c:	stp	x1, x2, [x29, #-88]
  479720:	stp	x3, x4, [x29, #-72]
  479724:	stp	x5, x6, [x29, #-56]
  479728:	stur	x7, [x29, #-40]
  47972c:	stp	q0, q1, [sp]
  479730:	stp	q2, q3, [sp, #32]
  479734:	stp	q4, q5, [sp, #64]
  479738:	stp	q6, q7, [sp, #96]
  47973c:	stp	x9, x8, [x29, #-16]
  479740:	stp	x11, x20, [x29, #-32]
  479744:	cbz	x0, 479798 <feof@plt+0x75ef8>
  479748:	ldur	w22, [x29, #-8]
  47974c:	ldur	x21, [x29, #-32]
  479750:	mov	x19, xzr
  479754:	b	479770 <feof@plt+0x75ed0>
  479758:	mov	w8, w22
  47975c:	add	x9, x21, #0x8
  479760:	ldr	x0, [x21]
  479764:	mov	x21, x9
  479768:	mov	w22, w8
  47976c:	cbz	x0, 47979c <feof@plt+0x75efc>
  479770:	bl	4030b0 <strlen@plt>
  479774:	add	x19, x0, x19
  479778:	tbz	w22, #31, 479758 <feof@plt+0x75eb8>
  47977c:	cmn	w22, #0x8
  479780:	add	w8, w22, #0x8
  479784:	b.gt	47975c <feof@plt+0x75ebc>
  479788:	add	x10, x20, w22, sxtw
  47978c:	mov	x9, x21
  479790:	mov	x21, x10
  479794:	b	479760 <feof@plt+0x75ec0>
  479798:	mov	x19, xzr
  47979c:	mov	x0, x19
  4797a0:	ldp	x20, x19, [sp, #272]
  4797a4:	ldp	x22, x21, [sp, #256]
  4797a8:	ldr	x28, [sp, #240]
  4797ac:	ldp	x29, x30, [sp, #224]
  4797b0:	add	sp, sp, #0x120
  4797b4:	ret
  4797b8:	sub	sp, sp, #0x120
  4797bc:	stp	x29, x30, [sp, #208]
  4797c0:	add	x29, sp, #0xd0
  4797c4:	mov	x8, #0xffffffffffffffd0    	// #-48
  4797c8:	mov	x9, sp
  4797cc:	sub	x10, x29, #0x50
  4797d0:	stp	x24, x23, [sp, #240]
  4797d4:	stp	x20, x19, [sp, #272]
  4797d8:	mov	x19, x0
  4797dc:	movk	x8, #0xff80, lsl #32
  4797e0:	add	x11, x29, #0x50
  4797e4:	add	x9, x9, #0x80
  4797e8:	add	x23, x10, #0x30
  4797ec:	mov	x20, x0
  4797f0:	stp	x28, x25, [sp, #224]
  4797f4:	stp	x22, x21, [sp, #256]
  4797f8:	stp	x2, x3, [x29, #-80]
  4797fc:	stp	x4, x5, [x29, #-64]
  479800:	stp	x6, x7, [x29, #-48]
  479804:	stp	q1, q2, [sp, #16]
  479808:	stp	q3, q4, [sp, #48]
  47980c:	str	q0, [sp]
  479810:	stp	q5, q6, [sp, #80]
  479814:	str	q7, [sp, #112]
  479818:	stp	x9, x8, [x29, #-16]
  47981c:	stp	x11, x23, [x29, #-32]
  479820:	cbz	x1, 479890 <feof@plt+0x75ff0>
  479824:	ldur	w25, [x29, #-8]
  479828:	ldur	x24, [x29, #-32]
  47982c:	mov	x21, x1
  479830:	mov	x20, x19
  479834:	b	479850 <feof@plt+0x75fb0>
  479838:	mov	w8, w25
  47983c:	add	x9, x24, #0x8
  479840:	ldr	x21, [x24]
  479844:	mov	w25, w8
  479848:	mov	x24, x9
  47984c:	cbz	x21, 479890 <feof@plt+0x75ff0>
  479850:	mov	x0, x21
  479854:	bl	4030b0 <strlen@plt>
  479858:	mov	x22, x0
  47985c:	mov	x0, x20
  479860:	mov	x1, x21
  479864:	mov	x2, x22
  479868:	bl	402fc0 <memcpy@plt>
  47986c:	add	x20, x20, x22
  479870:	tbz	w25, #31, 479838 <feof@plt+0x75f98>
  479874:	cmn	w25, #0x8
  479878:	add	w8, w25, #0x8
  47987c:	b.gt	47983c <feof@plt+0x75f9c>
  479880:	add	x10, x23, w25, sxtw
  479884:	mov	x9, x24
  479888:	mov	x24, x10
  47988c:	b	479840 <feof@plt+0x75fa0>
  479890:	strb	wzr, [x20]
  479894:	mov	x0, x19
  479898:	ldp	x20, x19, [sp, #272]
  47989c:	ldp	x22, x21, [sp, #256]
  4798a0:	ldp	x24, x23, [sp, #240]
  4798a4:	ldp	x28, x25, [sp, #224]
  4798a8:	ldp	x29, x30, [sp, #208]
  4798ac:	add	sp, sp, #0x120
  4798b0:	ret
  4798b4:	sub	sp, sp, #0x130
  4798b8:	stp	x22, x21, [sp, #272]
  4798bc:	adrp	x22, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  4798c0:	stp	x20, x19, [sp, #288]
  4798c4:	ldr	x19, [x22, #1120]
  4798c8:	stp	x29, x30, [sp, #224]
  4798cc:	add	x29, sp, #0xe0
  4798d0:	mov	x8, #0xffffffffffffffc8    	// #-56
  4798d4:	mov	x9, sp
  4798d8:	movk	x8, #0xff80, lsl #32
  4798dc:	sub	x10, x29, #0x58
  4798e0:	add	x9, x9, #0x80
  4798e4:	stp	x24, x23, [sp, #256]
  4798e8:	add	x23, x10, #0x38
  4798ec:	stp	x9, x8, [x29, #-16]
  4798f0:	add	x8, x29, #0x50
  4798f4:	stp	x28, x25, [sp, #240]
  4798f8:	stp	x1, x2, [x29, #-88]
  4798fc:	stp	x3, x4, [x29, #-72]
  479900:	stp	x5, x6, [x29, #-56]
  479904:	stur	x7, [x29, #-40]
  479908:	stp	q0, q1, [sp]
  47990c:	stp	q2, q3, [sp, #32]
  479910:	stp	q4, q5, [sp, #64]
  479914:	stp	q6, q7, [sp, #96]
  479918:	stp	x8, x23, [x29, #-32]
  47991c:	cbz	x0, 479988 <feof@plt+0x760e8>
  479920:	ldur	w25, [x29, #-8]
  479924:	ldur	x24, [x29, #-32]
  479928:	mov	x20, x0
  47992c:	b	479948 <feof@plt+0x760a8>
  479930:	mov	w8, w25
  479934:	add	x9, x24, #0x8
  479938:	ldr	x20, [x24]
  47993c:	mov	w25, w8
  479940:	mov	x24, x9
  479944:	cbz	x20, 479988 <feof@plt+0x760e8>
  479948:	mov	x0, x20
  47994c:	bl	4030b0 <strlen@plt>
  479950:	mov	x21, x0
  479954:	mov	x0, x19
  479958:	mov	x1, x20
  47995c:	mov	x2, x21
  479960:	bl	402fc0 <memcpy@plt>
  479964:	add	x19, x19, x21
  479968:	tbz	w25, #31, 479930 <feof@plt+0x76090>
  47996c:	cmn	w25, #0x8
  479970:	add	w8, w25, #0x8
  479974:	b.gt	479934 <feof@plt+0x76094>
  479978:	add	x10, x23, w25, sxtw
  47997c:	mov	x9, x24
  479980:	mov	x24, x10
  479984:	b	479938 <feof@plt+0x76098>
  479988:	strb	wzr, [x19]
  47998c:	ldr	x0, [x22, #1120]
  479990:	ldp	x20, x19, [sp, #288]
  479994:	ldp	x22, x21, [sp, #272]
  479998:	ldp	x24, x23, [sp, #256]
  47999c:	ldp	x28, x25, [sp, #240]
  4799a0:	ldp	x29, x30, [sp, #224]
  4799a4:	add	sp, sp, #0x130
  4799a8:	ret
  4799ac:	sub	sp, sp, #0x140
  4799b0:	stp	x29, x30, [sp, #224]
  4799b4:	add	x29, sp, #0xe0
  4799b8:	stp	x22, x21, [sp, #288]
  4799bc:	mov	x21, #0xffffffffffffffc8    	// #-56
  4799c0:	mov	x8, sp
  4799c4:	sub	x9, x29, #0x58
  4799c8:	stp	x24, x23, [sp, #272]
  4799cc:	stp	x20, x19, [sp, #304]
  4799d0:	mov	x19, x0
  4799d4:	movk	x21, #0xff80, lsl #32
  4799d8:	add	x24, x29, #0x60
  4799dc:	add	x22, x8, #0x80
  4799e0:	add	x23, x9, #0x38
  4799e4:	str	x28, [sp, #240]
  4799e8:	stp	x26, x25, [sp, #256]
  4799ec:	stp	x1, x2, [x29, #-88]
  4799f0:	stp	x3, x4, [x29, #-72]
  4799f4:	stp	x5, x6, [x29, #-56]
  4799f8:	stur	x7, [x29, #-40]
  4799fc:	stp	q0, q1, [sp]
  479a00:	stp	q2, q3, [sp, #32]
  479a04:	stp	q4, q5, [sp, #64]
  479a08:	stp	q6, q7, [sp, #96]
  479a0c:	stp	x22, x21, [x29, #-16]
  479a10:	stp	x24, x23, [x29, #-32]
  479a14:	cbz	x0, 479a74 <feof@plt+0x761d4>
  479a18:	ldur	w26, [x29, #-8]
  479a1c:	ldur	x25, [x29, #-32]
  479a20:	mov	x20, xzr
  479a24:	mov	x0, x19
  479a28:	b	479a44 <feof@plt+0x761a4>
  479a2c:	mov	w8, w26
  479a30:	add	x9, x25, #0x8
  479a34:	ldr	x0, [x25]
  479a38:	mov	x25, x9
  479a3c:	mov	w26, w8
  479a40:	cbz	x0, 479a6c <feof@plt+0x761cc>
  479a44:	bl	4030b0 <strlen@plt>
  479a48:	add	x20, x0, x20
  479a4c:	tbz	w26, #31, 479a2c <feof@plt+0x7618c>
  479a50:	cmn	w26, #0x8
  479a54:	add	w8, w26, #0x8
  479a58:	b.gt	479a30 <feof@plt+0x76190>
  479a5c:	add	x10, x23, w26, sxtw
  479a60:	mov	x9, x25
  479a64:	mov	x25, x10
  479a68:	b	479a34 <feof@plt+0x76194>
  479a6c:	add	x0, x20, #0x1
  479a70:	b	479a78 <feof@plt+0x761d8>
  479a74:	mov	w0, #0x1                   	// #1
  479a78:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  479a7c:	mov	x20, x0
  479a80:	stp	x22, x21, [x29, #-16]
  479a84:	mov	x21, x0
  479a88:	stp	x24, x23, [x29, #-32]
  479a8c:	cbz	x19, 479af8 <feof@plt+0x76258>
  479a90:	ldur	w25, [x29, #-8]
  479a94:	ldur	x24, [x29, #-32]
  479a98:	mov	x21, x20
  479a9c:	b	479ab8 <feof@plt+0x76218>
  479aa0:	mov	w8, w25
  479aa4:	add	x9, x24, #0x8
  479aa8:	ldr	x19, [x24]
  479aac:	mov	w25, w8
  479ab0:	mov	x24, x9
  479ab4:	cbz	x19, 479af8 <feof@plt+0x76258>
  479ab8:	mov	x0, x19
  479abc:	bl	4030b0 <strlen@plt>
  479ac0:	mov	x22, x0
  479ac4:	mov	x0, x21
  479ac8:	mov	x1, x19
  479acc:	mov	x2, x22
  479ad0:	bl	402fc0 <memcpy@plt>
  479ad4:	add	x21, x21, x22
  479ad8:	tbz	w25, #31, 479aa0 <feof@plt+0x76200>
  479adc:	cmn	w25, #0x8
  479ae0:	add	w8, w25, #0x8
  479ae4:	b.gt	479aa4 <feof@plt+0x76204>
  479ae8:	add	x10, x23, w25, sxtw
  479aec:	mov	x9, x24
  479af0:	mov	x24, x10
  479af4:	b	479aa8 <feof@plt+0x76208>
  479af8:	strb	wzr, [x21]
  479afc:	mov	x0, x20
  479b00:	ldp	x20, x19, [sp, #304]
  479b04:	ldp	x22, x21, [sp, #288]
  479b08:	ldp	x24, x23, [sp, #272]
  479b0c:	ldp	x26, x25, [sp, #256]
  479b10:	ldr	x28, [sp, #240]
  479b14:	ldp	x29, x30, [sp, #224]
  479b18:	add	sp, sp, #0x140
  479b1c:	ret
  479b20:	sub	sp, sp, #0x130
  479b24:	stp	x29, x30, [sp, #208]
  479b28:	add	x29, sp, #0xd0
  479b2c:	stp	x22, x21, [sp, #272]
  479b30:	mov	x22, #0xffffffffffffffd0    	// #-48
  479b34:	mov	x8, sp
  479b38:	sub	x9, x29, #0x50
  479b3c:	stp	x26, x25, [sp, #240]
  479b40:	stp	x24, x23, [sp, #256]
  479b44:	stp	x20, x19, [sp, #288]
  479b48:	mov	x20, x1
  479b4c:	mov	x19, x0
  479b50:	movk	x22, #0xff80, lsl #32
  479b54:	add	x25, x29, #0x60
  479b58:	add	x23, x8, #0x80
  479b5c:	add	x24, x9, #0x30
  479b60:	stp	x28, x27, [sp, #224]
  479b64:	stp	x2, x3, [x29, #-80]
  479b68:	stp	x4, x5, [x29, #-64]
  479b6c:	stp	x6, x7, [x29, #-48]
  479b70:	stp	q1, q2, [sp, #16]
  479b74:	stp	q3, q4, [sp, #48]
  479b78:	str	q0, [sp]
  479b7c:	stp	q5, q6, [sp, #80]
  479b80:	str	q7, [sp, #112]
  479b84:	stp	x23, x22, [x29, #-16]
  479b88:	stp	x25, x24, [x29, #-32]
  479b8c:	cbz	x1, 479bec <feof@plt+0x7634c>
  479b90:	ldur	w27, [x29, #-8]
  479b94:	ldur	x26, [x29, #-32]
  479b98:	mov	x21, xzr
  479b9c:	mov	x0, x20
  479ba0:	b	479bbc <feof@plt+0x7631c>
  479ba4:	mov	w8, w27
  479ba8:	add	x9, x26, #0x8
  479bac:	ldr	x0, [x26]
  479bb0:	mov	x26, x9
  479bb4:	mov	w27, w8
  479bb8:	cbz	x0, 479be4 <feof@plt+0x76344>
  479bbc:	bl	4030b0 <strlen@plt>
  479bc0:	add	x21, x0, x21
  479bc4:	tbz	w27, #31, 479ba4 <feof@plt+0x76304>
  479bc8:	cmn	w27, #0x8
  479bcc:	add	w8, w27, #0x8
  479bd0:	b.gt	479ba8 <feof@plt+0x76308>
  479bd4:	add	x10, x24, w27, sxtw
  479bd8:	mov	x9, x26
  479bdc:	mov	x26, x10
  479be0:	b	479bac <feof@plt+0x7630c>
  479be4:	add	x0, x21, #0x1
  479be8:	b	479bf0 <feof@plt+0x76350>
  479bec:	mov	w0, #0x1                   	// #1
  479bf0:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  479bf4:	mov	x21, x0
  479bf8:	stp	x23, x22, [x29, #-16]
  479bfc:	mov	x22, x0
  479c00:	stp	x25, x24, [x29, #-32]
  479c04:	cbz	x20, 479c70 <feof@plt+0x763d0>
  479c08:	ldur	w26, [x29, #-8]
  479c0c:	ldur	x25, [x29, #-32]
  479c10:	mov	x22, x21
  479c14:	b	479c30 <feof@plt+0x76390>
  479c18:	mov	w8, w26
  479c1c:	add	x9, x25, #0x8
  479c20:	ldr	x20, [x25]
  479c24:	mov	w26, w8
  479c28:	mov	x25, x9
  479c2c:	cbz	x20, 479c70 <feof@plt+0x763d0>
  479c30:	mov	x0, x20
  479c34:	bl	4030b0 <strlen@plt>
  479c38:	mov	x23, x0
  479c3c:	mov	x0, x22
  479c40:	mov	x1, x20
  479c44:	mov	x2, x23
  479c48:	bl	402fc0 <memcpy@plt>
  479c4c:	add	x22, x22, x23
  479c50:	tbz	w26, #31, 479c18 <feof@plt+0x76378>
  479c54:	cmn	w26, #0x8
  479c58:	add	w8, w26, #0x8
  479c5c:	b.gt	479c1c <feof@plt+0x7637c>
  479c60:	add	x10, x24, w26, sxtw
  479c64:	mov	x9, x25
  479c68:	mov	x25, x10
  479c6c:	b	479c20 <feof@plt+0x76380>
  479c70:	strb	wzr, [x22]
  479c74:	cbz	x19, 479c80 <feof@plt+0x763e0>
  479c78:	mov	x0, x19
  479c7c:	bl	4031d0 <free@plt>
  479c80:	mov	x0, x21
  479c84:	ldp	x20, x19, [sp, #288]
  479c88:	ldp	x22, x21, [sp, #272]
  479c8c:	ldp	x24, x23, [sp, #256]
  479c90:	ldp	x26, x25, [sp, #240]
  479c94:	ldp	x28, x27, [sp, #224]
  479c98:	ldp	x29, x30, [sp, #208]
  479c9c:	add	sp, sp, #0x130
  479ca0:	ret
  479ca4:	b	403640 <strcmp@plt>
  479ca8:	b	403450 <strncmp@plt>
  479cac:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  479cb0:	mov	w8, wzr
  479cb4:	add	x9, x9, #0x6a2
  479cb8:	mov	w10, #0x43                  	// #67
  479cbc:	b	479cd0 <feof@plt+0x76430>
  479cc0:	mov	w11, #0x2f                  	// #47
  479cc4:	ldrb	w11, [x9, w11, uxtw]
  479cc8:	madd	w8, w8, w10, w11
  479ccc:	sub	w8, w8, #0x71
  479cd0:	ldrb	w11, [x0], #1
  479cd4:	cmp	w11, #0x5c
  479cd8:	b.eq	479cc0 <feof@plt+0x76420>  // b.none
  479cdc:	cbnz	w11, 479cc4 <feof@plt+0x76424>
  479ce0:	mov	w0, w8
  479ce4:	ret
  479ce8:	stp	x29, x30, [sp, #-16]!
  479cec:	mov	x29, sp
  479cf0:	bl	403640 <strcmp@plt>
  479cf4:	cmp	w0, #0x0
  479cf8:	cset	w0, eq  // eq = none
  479cfc:	ldp	x29, x30, [sp], #16
  479d00:	ret
  479d04:	stp	x29, x30, [sp, #-48]!
  479d08:	str	x21, [sp, #16]
  479d0c:	stp	x20, x19, [sp, #32]
  479d10:	mov	x29, sp
  479d14:	mov	x19, x1
  479d18:	bl	47b0ec <feof@plt+0x7784c>
  479d1c:	mov	x20, x0
  479d20:	mov	x0, x19
  479d24:	bl	47b0ec <feof@plt+0x7784c>
  479d28:	mov	x19, x0
  479d2c:	mov	x0, x20
  479d30:	mov	x1, x19
  479d34:	bl	403640 <strcmp@plt>
  479d38:	cmp	w0, #0x0
  479d3c:	mov	x0, x20
  479d40:	cset	w21, eq  // eq = none
  479d44:	bl	4031d0 <free@plt>
  479d48:	mov	x0, x19
  479d4c:	bl	4031d0 <free@plt>
  479d50:	mov	w0, w21
  479d54:	ldp	x20, x19, [sp, #32]
  479d58:	ldr	x21, [sp, #16]
  479d5c:	ldp	x29, x30, [sp], #48
  479d60:	ret
  479d64:	cbz	x0, 479d70 <feof@plt+0x764d0>
  479d68:	mov	w1, #0x2                   	// #2
  479d6c:	b	403610 <__fsetlocking@plt>
  479d70:	ret
  479d74:	stp	x29, x30, [sp, #-16]!
  479d78:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  479d7c:	ldr	x0, [x8, #1080]
  479d80:	mov	x29, sp
  479d84:	cbz	x0, 479d90 <feof@plt+0x764f0>
  479d88:	mov	w1, #0x2                   	// #2
  479d8c:	bl	403610 <__fsetlocking@plt>
  479d90:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  479d94:	ldr	x0, [x8, #1088]
  479d98:	cbz	x0, 479da4 <feof@plt+0x76504>
  479d9c:	mov	w1, #0x2                   	// #2
  479da0:	bl	403610 <__fsetlocking@plt>
  479da4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  479da8:	ldr	x0, [x8, #1096]
  479dac:	cbz	x0, 479dbc <feof@plt+0x7651c>
  479db0:	mov	w1, #0x2                   	// #2
  479db4:	ldp	x29, x30, [sp], #16
  479db8:	b	403610 <__fsetlocking@plt>
  479dbc:	ldp	x29, x30, [sp], #16
  479dc0:	ret
  479dc4:	stp	x29, x30, [sp, #-32]!
  479dc8:	str	x19, [sp, #16]
  479dcc:	mov	x29, sp
  479dd0:	bl	403620 <fopen@plt>
  479dd4:	mov	x19, x0
  479dd8:	cbz	x0, 479de8 <feof@plt+0x76548>
  479ddc:	mov	w1, #0x2                   	// #2
  479de0:	mov	x0, x19
  479de4:	bl	403610 <__fsetlocking@plt>
  479de8:	mov	x0, x19
  479dec:	ldr	x19, [sp, #16]
  479df0:	ldp	x29, x30, [sp], #32
  479df4:	ret
  479df8:	stp	x29, x30, [sp, #-32]!
  479dfc:	str	x19, [sp, #16]
  479e00:	mov	x29, sp
  479e04:	bl	4037d0 <fdopen@plt>
  479e08:	mov	x19, x0
  479e0c:	cbz	x0, 479e1c <feof@plt+0x7657c>
  479e10:	mov	w1, #0x2                   	// #2
  479e14:	mov	x0, x19
  479e18:	bl	403610 <__fsetlocking@plt>
  479e1c:	mov	x0, x19
  479e20:	ldr	x19, [sp, #16]
  479e24:	ldp	x29, x30, [sp], #32
  479e28:	ret
  479e2c:	stp	x29, x30, [sp, #-32]!
  479e30:	str	x19, [sp, #16]
  479e34:	mov	x29, sp
  479e38:	bl	4032a0 <freopen@plt>
  479e3c:	mov	x19, x0
  479e40:	cbz	x0, 479e50 <feof@plt+0x765b0>
  479e44:	mov	w1, #0x2                   	// #2
  479e48:	mov	x0, x19
  479e4c:	bl	403610 <__fsetlocking@plt>
  479e50:	mov	x0, x19
  479e54:	ldr	x19, [sp, #16]
  479e58:	ldp	x29, x30, [sp], #32
  479e5c:	ret
  479e60:	lsr	x8, x0, #32
  479e64:	mov	w9, #0xadcc                	// #44492
  479e68:	movk	w9, #0xbdec, lsl #16
  479e6c:	mov	w10, #0x109a                	// #4250
  479e70:	sub	w8, w8, w0
  479e74:	movk	w10, #0x2, lsl #16
  479e78:	add	w8, w8, w9
  479e7c:	mov	w9, #0x2785                	// #10117
  479e80:	eor	w8, w8, w10
  479e84:	movk	w9, #0x5c24, lsl #16
  479e88:	sub	w11, w0, w8
  479e8c:	add	w9, w11, w9
  479e90:	mov	w10, #0x5234                	// #21044
  479e94:	eor	w9, w9, w8, lsl #8
  479e98:	movk	w10, #0x4213, lsl #16
  479e9c:	add	w11, w8, w9
  479ea0:	sub	w10, w10, w11
  479ea4:	sub	w8, w8, w9
  479ea8:	eor	w10, w10, w9, lsr #13
  479eac:	sub	w8, w8, w10
  479eb0:	sub	w9, w9, w10
  479eb4:	eor	w8, w8, w10, lsr #12
  479eb8:	sub	w9, w9, w8
  479ebc:	sub	w10, w10, w8
  479ec0:	eor	w9, w9, w8, lsl #16
  479ec4:	sub	w10, w10, w9
  479ec8:	sub	w8, w8, w9
  479ecc:	eor	w10, w10, w9, lsr #5
  479ed0:	sub	w8, w8, w10
  479ed4:	sub	w9, w9, w10
  479ed8:	eor	w8, w8, w10, lsr #3
  479edc:	sub	w9, w9, w8
  479ee0:	eor	w9, w9, w8, lsl #10
  479ee4:	sub	w8, w10, w8
  479ee8:	sub	w8, w8, w9
  479eec:	eor	w0, w8, w9, lsr #15
  479ef0:	ret
  479ef4:	cmp	x0, x1
  479ef8:	cset	w0, eq  // eq = none
  479efc:	ret
  479f00:	ldr	x0, [x0, #32]
  479f04:	ret
  479f08:	ldp	x8, x9, [x0, #40]
  479f0c:	sub	x0, x8, x9
  479f10:	ret
  479f14:	stp	x29, x30, [sp, #-80]!
  479f18:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  479f1c:	stp	x26, x25, [sp, #16]
  479f20:	stp	x24, x23, [sp, #32]
  479f24:	stp	x22, x21, [sp, #48]
  479f28:	stp	x20, x19, [sp, #64]
  479f2c:	mov	x19, x5
  479f30:	mov	x20, x4
  479f34:	mov	x21, x3
  479f38:	mov	x22, x2
  479f3c:	mov	x23, x1
  479f40:	mov	x2, x0
  479f44:	mov	w8, wzr
  479f48:	mov	w26, #0x1e                  	// #30
  479f4c:	add	x9, x9, #0xfc0
  479f50:	mov	x29, sp
  479f54:	sub	w10, w26, w8
  479f58:	add	w10, w8, w10, lsr #1
  479f5c:	lsl	x11, x10, #4
  479f60:	ldr	w11, [x9, x11]
  479f64:	cmp	x11, x2
  479f68:	csel	w26, w26, w10, cc  // cc = lo, ul, last
  479f6c:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  479f70:	cmp	w26, w8
  479f74:	b.ne	479f54 <feof@plt+0x766b4>  // b.any
  479f78:	mov	w8, w26
  479f7c:	lsl	x8, x8, #4
  479f80:	ldr	w25, [x9, x8]
  479f84:	cmp	x25, x2
  479f88:	b.cc	479ff8 <feof@plt+0x76758>  // b.lo, b.ul, b.last
  479f8c:	mov	w0, #0x1                   	// #1
  479f90:	mov	w1, #0x70                  	// #112
  479f94:	blr	x20
  479f98:	mov	x24, x0
  479f9c:	cbz	x0, 479fdc <feof@plt+0x7673c>
  479fa0:	mov	w1, #0x8                   	// #8
  479fa4:	mov	x0, x25
  479fa8:	blr	x20
  479fac:	str	x0, [x24, #24]
  479fb0:	cbz	x0, 479fcc <feof@plt+0x7672c>
  479fb4:	str	x25, [x24, #32]
  479fb8:	str	w26, [x24, #104]
  479fbc:	stp	x23, x22, [x24]
  479fc0:	str	x21, [x24, #16]
  479fc4:	stp	x20, x19, [x24, #64]
  479fc8:	b	479fdc <feof@plt+0x7673c>
  479fcc:	cbz	x19, 479fd8 <feof@plt+0x76738>
  479fd0:	mov	x0, x24
  479fd4:	blr	x19
  479fd8:	mov	x24, xzr
  479fdc:	mov	x0, x24
  479fe0:	ldp	x20, x19, [sp, #64]
  479fe4:	ldp	x22, x21, [sp, #48]
  479fe8:	ldp	x24, x23, [sp, #32]
  479fec:	ldp	x26, x25, [sp, #16]
  479ff0:	ldp	x29, x30, [sp], #80
  479ff4:	ret
  479ff8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  479ffc:	ldr	x0, [x8, #1096]
  47a000:	adrp	x1, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47a004:	add	x1, x1, #0x1a0
  47a008:	bl	4030d0 <fprintf@plt>
  47a00c:	bl	4036f0 <abort@plt>
  47a010:	stp	x29, x30, [sp, #-80]!
  47a014:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47a018:	stp	x26, x25, [sp, #16]
  47a01c:	stp	x24, x23, [sp, #32]
  47a020:	stp	x22, x21, [sp, #48]
  47a024:	stp	x20, x19, [sp, #64]
  47a028:	mov	x19, x6
  47a02c:	mov	x20, x5
  47a030:	mov	x21, x3
  47a034:	mov	x22, x2
  47a038:	mov	x23, x1
  47a03c:	mov	x2, x0
  47a040:	mov	w8, wzr
  47a044:	mov	w26, #0x1e                  	// #30
  47a048:	add	x9, x9, #0xfc0
  47a04c:	mov	x29, sp
  47a050:	sub	w10, w26, w8
  47a054:	add	w10, w8, w10, lsr #1
  47a058:	lsl	x11, x10, #4
  47a05c:	ldr	w11, [x9, x11]
  47a060:	cmp	x11, x2
  47a064:	csel	w26, w26, w10, cc  // cc = lo, ul, last
  47a068:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  47a06c:	cmp	w26, w8
  47a070:	b.ne	47a050 <feof@plt+0x767b0>  // b.any
  47a074:	mov	w8, w26
  47a078:	lsl	x8, x8, #4
  47a07c:	ldr	w25, [x9, x8]
  47a080:	cmp	x25, x2
  47a084:	b.cc	47a0f4 <feof@plt+0x76854>  // b.lo, b.ul, b.last
  47a088:	mov	w0, #0x1                   	// #1
  47a08c:	mov	w1, #0x70                  	// #112
  47a090:	blr	x4
  47a094:	mov	x24, x0
  47a098:	cbz	x0, 47a0d8 <feof@plt+0x76838>
  47a09c:	mov	w1, #0x8                   	// #8
  47a0a0:	mov	x0, x25
  47a0a4:	blr	x20
  47a0a8:	str	x0, [x24, #24]
  47a0ac:	cbz	x0, 47a0c8 <feof@plt+0x76828>
  47a0b0:	str	x25, [x24, #32]
  47a0b4:	str	w26, [x24, #104]
  47a0b8:	stp	x23, x22, [x24]
  47a0bc:	str	x21, [x24, #16]
  47a0c0:	stp	x20, x19, [x24, #64]
  47a0c4:	b	47a0d8 <feof@plt+0x76838>
  47a0c8:	cbz	x19, 47a0d4 <feof@plt+0x76834>
  47a0cc:	mov	x0, x24
  47a0d0:	blr	x19
  47a0d4:	mov	x24, xzr
  47a0d8:	mov	x0, x24
  47a0dc:	ldp	x20, x19, [sp, #64]
  47a0e0:	ldp	x22, x21, [sp, #48]
  47a0e4:	ldp	x24, x23, [sp, #32]
  47a0e8:	ldp	x26, x25, [sp, #16]
  47a0ec:	ldp	x29, x30, [sp], #80
  47a0f0:	ret
  47a0f4:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47a0f8:	ldr	x0, [x8, #1096]
  47a0fc:	adrp	x1, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47a100:	add	x1, x1, #0x1a0
  47a104:	bl	4030d0 <fprintf@plt>
  47a108:	bl	4036f0 <abort@plt>
  47a10c:	stp	x29, x30, [sp, #-96]!
  47a110:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47a114:	str	x27, [sp, #16]
  47a118:	stp	x24, x23, [sp, #48]
  47a11c:	stp	x22, x21, [sp, #64]
  47a120:	stp	x20, x19, [sp, #80]
  47a124:	mov	x19, x6
  47a128:	mov	x21, x5
  47a12c:	mov	x20, x4
  47a130:	mov	x22, x3
  47a134:	mov	x23, x2
  47a138:	mov	x24, x1
  47a13c:	mov	x2, x0
  47a140:	mov	w8, wzr
  47a144:	mov	w27, #0x1e                  	// #30
  47a148:	add	x9, x9, #0xfc0
  47a14c:	stp	x26, x25, [sp, #32]
  47a150:	mov	x29, sp
  47a154:	sub	w10, w27, w8
  47a158:	add	w10, w8, w10, lsr #1
  47a15c:	lsl	x11, x10, #4
  47a160:	ldr	w11, [x9, x11]
  47a164:	cmp	x11, x2
  47a168:	csel	w27, w27, w10, cc  // cc = lo, ul, last
  47a16c:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  47a170:	cmp	w27, w8
  47a174:	b.ne	47a154 <feof@plt+0x768b4>  // b.any
  47a178:	mov	w8, w27
  47a17c:	lsl	x8, x8, #4
  47a180:	ldr	w26, [x9, x8]
  47a184:	cmp	x26, x2
  47a188:	b.cc	47a20c <feof@plt+0x7696c>  // b.lo, b.ul, b.last
  47a18c:	mov	w1, #0x1                   	// #1
  47a190:	mov	w2, #0x70                  	// #112
  47a194:	mov	x0, x20
  47a198:	blr	x21
  47a19c:	mov	x25, x0
  47a1a0:	cbz	x0, 47a1ec <feof@plt+0x7694c>
  47a1a4:	mov	w2, #0x8                   	// #8
  47a1a8:	mov	x0, x20
  47a1ac:	mov	x1, x26
  47a1b0:	blr	x21
  47a1b4:	str	x0, [x25, #24]
  47a1b8:	cbz	x0, 47a1d8 <feof@plt+0x76938>
  47a1bc:	str	x26, [x25, #32]
  47a1c0:	str	w27, [x25, #104]
  47a1c4:	stp	x24, x23, [x25]
  47a1c8:	str	x22, [x25, #16]
  47a1cc:	stp	x20, x21, [x25, #80]
  47a1d0:	str	x19, [x25, #96]
  47a1d4:	b	47a1ec <feof@plt+0x7694c>
  47a1d8:	cbz	x19, 47a1e8 <feof@plt+0x76948>
  47a1dc:	mov	x0, x20
  47a1e0:	mov	x1, x25
  47a1e4:	blr	x19
  47a1e8:	mov	x25, xzr
  47a1ec:	mov	x0, x25
  47a1f0:	ldp	x20, x19, [sp, #80]
  47a1f4:	ldp	x22, x21, [sp, #64]
  47a1f8:	ldp	x24, x23, [sp, #48]
  47a1fc:	ldp	x26, x25, [sp, #32]
  47a200:	ldr	x27, [sp, #16]
  47a204:	ldp	x29, x30, [sp], #96
  47a208:	ret
  47a20c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47a210:	ldr	x0, [x8, #1096]
  47a214:	adrp	x1, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47a218:	add	x1, x1, #0x1a0
  47a21c:	bl	4030d0 <fprintf@plt>
  47a220:	bl	4036f0 <abort@plt>
  47a224:	stp	x1, x2, [x0]
  47a228:	str	x3, [x0, #16]
  47a22c:	stp	x4, x5, [x0, #80]
  47a230:	str	x6, [x0, #96]
  47a234:	ret
  47a238:	stp	x29, x30, [sp, #-64]!
  47a23c:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47a240:	stp	x24, x23, [sp, #16]
  47a244:	stp	x22, x21, [sp, #32]
  47a248:	stp	x20, x19, [sp, #48]
  47a24c:	mov	x19, x3
  47a250:	mov	x20, x2
  47a254:	mov	x21, x1
  47a258:	mov	x2, x0
  47a25c:	mov	w8, wzr
  47a260:	mov	w24, #0x1e                  	// #30
  47a264:	add	x9, x9, #0xfc0
  47a268:	mov	x29, sp
  47a26c:	sub	w10, w24, w8
  47a270:	add	w10, w8, w10, lsr #1
  47a274:	lsl	x11, x10, #4
  47a278:	ldr	w11, [x9, x11]
  47a27c:	cmp	x11, x2
  47a280:	csel	w24, w24, w10, cc  // cc = lo, ul, last
  47a284:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  47a288:	cmp	w24, w8
  47a28c:	b.ne	47a26c <feof@plt+0x769cc>  // b.any
  47a290:	mov	w8, w24
  47a294:	lsl	x8, x8, #4
  47a298:	ldr	w23, [x9, x8]
  47a29c:	cmp	x23, x2
  47a2a0:	b.cc	47a318 <feof@plt+0x76a78>  // b.lo, b.ul, b.last
  47a2a4:	mov	w0, #0x1                   	// #1
  47a2a8:	mov	w1, #0x70                  	// #112
  47a2ac:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  47a2b0:	mov	x22, x0
  47a2b4:	cbz	x0, 47a300 <feof@plt+0x76a60>
  47a2b8:	mov	w1, #0x8                   	// #8
  47a2bc:	mov	x0, x23
  47a2c0:	bl	47d0cc <_obstack_memory_used@@Base+0x13c8>
  47a2c4:	str	x0, [x22, #24]
  47a2c8:	cbz	x0, 47a2f4 <feof@plt+0x76a54>
  47a2cc:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x12fc>
  47a2d0:	adrp	x9, 403000 <readlink@plt>
  47a2d4:	add	x8, x8, #0xcc
  47a2d8:	add	x9, x9, #0x1d0
  47a2dc:	str	x23, [x22, #32]
  47a2e0:	str	w24, [x22, #104]
  47a2e4:	stp	x21, x20, [x22]
  47a2e8:	str	x19, [x22, #16]
  47a2ec:	stp	x8, x9, [x22, #64]
  47a2f0:	b	47a300 <feof@plt+0x76a60>
  47a2f4:	mov	x0, x22
  47a2f8:	bl	4031d0 <free@plt>
  47a2fc:	mov	x22, xzr
  47a300:	mov	x0, x22
  47a304:	ldp	x20, x19, [sp, #48]
  47a308:	ldp	x22, x21, [sp, #32]
  47a30c:	ldp	x24, x23, [sp, #16]
  47a310:	ldp	x29, x30, [sp], #64
  47a314:	ret
  47a318:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47a31c:	ldr	x0, [x8, #1096]
  47a320:	adrp	x1, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47a324:	add	x1, x1, #0x1a0
  47a328:	bl	4030d0 <fprintf@plt>
  47a32c:	bl	4036f0 <abort@plt>
  47a330:	stp	x29, x30, [sp, #-64]!
  47a334:	adrp	x9, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47a338:	stp	x24, x23, [sp, #16]
  47a33c:	stp	x22, x21, [sp, #32]
  47a340:	stp	x20, x19, [sp, #48]
  47a344:	mov	x19, x3
  47a348:	mov	x20, x2
  47a34c:	mov	x21, x1
  47a350:	mov	x2, x0
  47a354:	mov	w8, wzr
  47a358:	mov	w24, #0x1e                  	// #30
  47a35c:	add	x9, x9, #0xfc0
  47a360:	mov	x29, sp
  47a364:	sub	w10, w24, w8
  47a368:	add	w10, w8, w10, lsr #1
  47a36c:	lsl	x11, x10, #4
  47a370:	ldr	w11, [x9, x11]
  47a374:	cmp	x11, x2
  47a378:	csel	w24, w24, w10, cc  // cc = lo, ul, last
  47a37c:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  47a380:	cmp	w24, w8
  47a384:	b.ne	47a364 <feof@plt+0x76ac4>  // b.any
  47a388:	mov	w8, w24
  47a38c:	lsl	x8, x8, #4
  47a390:	ldr	w23, [x9, x8]
  47a394:	cmp	x23, x2
  47a398:	b.cc	47a410 <feof@plt+0x76b70>  // b.lo, b.ul, b.last
  47a39c:	mov	w0, #0x1                   	// #1
  47a3a0:	mov	w1, #0x70                  	// #112
  47a3a4:	bl	403050 <calloc@plt>
  47a3a8:	mov	x22, x0
  47a3ac:	cbz	x0, 47a3f8 <feof@plt+0x76b58>
  47a3b0:	mov	w1, #0x8                   	// #8
  47a3b4:	mov	x0, x23
  47a3b8:	bl	403050 <calloc@plt>
  47a3bc:	str	x0, [x22, #24]
  47a3c0:	cbz	x0, 47a3ec <feof@plt+0x76b4c>
  47a3c4:	adrp	x8, 403000 <readlink@plt>
  47a3c8:	adrp	x9, 403000 <readlink@plt>
  47a3cc:	add	x8, x8, #0x50
  47a3d0:	add	x9, x9, #0x1d0
  47a3d4:	str	x23, [x22, #32]
  47a3d8:	str	w24, [x22, #104]
  47a3dc:	stp	x21, x20, [x22]
  47a3e0:	str	x19, [x22, #16]
  47a3e4:	stp	x8, x9, [x22, #64]
  47a3e8:	b	47a3f8 <feof@plt+0x76b58>
  47a3ec:	mov	x0, x22
  47a3f0:	bl	4031d0 <free@plt>
  47a3f4:	mov	x22, xzr
  47a3f8:	mov	x0, x22
  47a3fc:	ldp	x20, x19, [sp, #48]
  47a400:	ldp	x22, x21, [sp, #32]
  47a404:	ldp	x24, x23, [sp, #16]
  47a408:	ldp	x29, x30, [sp], #64
  47a40c:	ret
  47a410:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47a414:	ldr	x0, [x8, #1096]
  47a418:	adrp	x1, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47a41c:	add	x1, x1, #0x1a0
  47a420:	bl	4030d0 <fprintf@plt>
  47a424:	bl	4036f0 <abort@plt>
  47a428:	stp	x29, x30, [sp, #-48]!
  47a42c:	str	x21, [sp, #16]
  47a430:	stp	x20, x19, [sp, #32]
  47a434:	ldp	x8, x20, [x0, #16]
  47a438:	mov	x19, x0
  47a43c:	mov	x29, sp
  47a440:	cbz	x8, 47a450 <feof@plt+0x76bb0>
  47a444:	ldr	w8, [x19, #32]
  47a448:	subs	w21, w8, #0x1
  47a44c:	b.pl	47a480 <feof@plt+0x76be0>  // b.nfrst
  47a450:	ldr	x8, [x19, #72]
  47a454:	cbz	x8, 47a498 <feof@plt+0x76bf8>
  47a458:	mov	x0, x20
  47a45c:	blr	x8
  47a460:	ldr	x1, [x19, #72]
  47a464:	mov	x0, x19
  47a468:	ldp	x20, x19, [sp, #32]
  47a46c:	ldr	x21, [sp, #16]
  47a470:	ldp	x29, x30, [sp], #48
  47a474:	br	x1
  47a478:	subs	w21, w21, #0x1
  47a47c:	b.mi	47a450 <feof@plt+0x76bb0>  // b.first
  47a480:	ldr	x0, [x20, w21, uxtw #3]
  47a484:	cmp	x0, #0x2
  47a488:	b.cc	47a478 <feof@plt+0x76bd8>  // b.lo, b.ul, b.last
  47a48c:	ldr	x8, [x19, #16]
  47a490:	blr	x8
  47a494:	b	47a478 <feof@plt+0x76bd8>
  47a498:	ldr	x8, [x19, #96]
  47a49c:	cbz	x8, 47a4c8 <feof@plt+0x76c28>
  47a4a0:	ldr	x0, [x19, #80]
  47a4a4:	mov	x1, x20
  47a4a8:	blr	x8
  47a4ac:	ldr	x2, [x19, #96]
  47a4b0:	ldr	x0, [x19, #80]
  47a4b4:	mov	x1, x19
  47a4b8:	ldp	x20, x19, [sp, #32]
  47a4bc:	ldr	x21, [sp, #16]
  47a4c0:	ldp	x29, x30, [sp], #48
  47a4c4:	br	x2
  47a4c8:	ldp	x20, x19, [sp, #32]
  47a4cc:	ldr	x21, [sp, #16]
  47a4d0:	ldp	x29, x30, [sp], #48
  47a4d4:	ret
  47a4d8:	stp	x29, x30, [sp, #-48]!
  47a4dc:	stp	x22, x21, [sp, #16]
  47a4e0:	stp	x20, x19, [sp, #32]
  47a4e4:	ldp	x8, x20, [x0, #16]
  47a4e8:	ldr	x21, [x0, #32]
  47a4ec:	mov	x19, x0
  47a4f0:	mov	x29, sp
  47a4f4:	cbz	x8, 47a500 <feof@plt+0x76c60>
  47a4f8:	subs	w22, w21, #0x1
  47a4fc:	b.pl	47a560 <feof@plt+0x76cc0>  // b.nfrst
  47a500:	cmp	x21, #0x20, lsl #12
  47a504:	b.ls	47a578 <feof@plt+0x76cd8>  // b.plast
  47a508:	mov	w8, wzr
  47a50c:	mov	w21, #0x1e                  	// #30
  47a510:	sub	w9, w21, w8
  47a514:	add	w9, w8, w9, lsr #1
  47a518:	cmp	w9, #0x5
  47a51c:	csel	w21, w21, w9, cc  // cc = lo, ul, last
  47a520:	csinc	w8, w8, w9, cs  // cs = hs, nlast
  47a524:	cmp	w21, w8
  47a528:	b.ne	47a510 <feof@plt+0x76c70>  // b.any
  47a52c:	cmp	w21, #0x4
  47a530:	b.ls	47a5e8 <feof@plt+0x76d48>  // b.plast
  47a534:	adrp	x10, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47a538:	sbfiz	x9, x21, #4, #32
  47a53c:	add	x10, x10, #0xfc0
  47a540:	ldr	x8, [x19, #72]
  47a544:	ldrsw	x20, [x10, x9]
  47a548:	cbz	x8, 47a58c <feof@plt+0x76cec>
  47a54c:	ldr	x0, [x19, #24]
  47a550:	blr	x8
  47a554:	b	47a5a0 <feof@plt+0x76d00>
  47a558:	subs	w22, w22, #0x1
  47a55c:	b.mi	47a500 <feof@plt+0x76c60>  // b.first
  47a560:	ldr	x0, [x20, w22, uxtw #3]
  47a564:	cmp	x0, #0x2
  47a568:	b.cc	47a558 <feof@plt+0x76cb8>  // b.lo, b.ul, b.last
  47a56c:	ldr	x8, [x19, #16]
  47a570:	blr	x8
  47a574:	b	47a558 <feof@plt+0x76cb8>
  47a578:	lsl	x2, x21, #3
  47a57c:	mov	x0, x20
  47a580:	mov	w1, wzr
  47a584:	bl	4031f0 <memset@plt>
  47a588:	b	47a5d4 <feof@plt+0x76d34>
  47a58c:	ldr	x8, [x19, #96]
  47a590:	cbz	x8, 47a5a0 <feof@plt+0x76d00>
  47a594:	ldr	x0, [x19, #80]
  47a598:	ldr	x1, [x19, #24]
  47a59c:	blr	x8
  47a5a0:	ldr	x8, [x19, #88]
  47a5a4:	cbz	x8, 47a5bc <feof@plt+0x76d1c>
  47a5a8:	ldr	x0, [x19, #80]
  47a5ac:	mov	w2, #0x8                   	// #8
  47a5b0:	mov	x1, x20
  47a5b4:	blr	x8
  47a5b8:	b	47a5cc <feof@plt+0x76d2c>
  47a5bc:	ldr	x8, [x19, #64]
  47a5c0:	mov	w1, #0x8                   	// #8
  47a5c4:	mov	x0, x20
  47a5c8:	blr	x8
  47a5cc:	stp	x0, x20, [x19, #24]
  47a5d0:	str	w21, [x19, #104]
  47a5d4:	stp	xzr, xzr, [x19, #40]
  47a5d8:	ldp	x20, x19, [sp, #32]
  47a5dc:	ldp	x22, x21, [sp, #16]
  47a5e0:	ldp	x29, x30, [sp], #48
  47a5e4:	ret
  47a5e8:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47a5ec:	ldr	x0, [x8, #1096]
  47a5f0:	adrp	x1, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47a5f4:	add	x1, x1, #0x1a0
  47a5f8:	mov	w2, #0x80                  	// #128
  47a5fc:	bl	4030d0 <fprintf@plt>
  47a600:	bl	4036f0 <abort@plt>
  47a604:	stp	x29, x30, [sp, #-80]!
  47a608:	stp	x26, x25, [sp, #16]
  47a60c:	stp	x24, x23, [sp, #32]
  47a610:	stp	x22, x21, [sp, #48]
  47a614:	stp	x20, x19, [sp, #64]
  47a618:	ldr	w8, [x0, #104]
  47a61c:	adrp	x25, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47a620:	add	x25, x25, #0xfc0
  47a624:	ldr	w9, [x0, #56]
  47a628:	add	x11, x25, x8, lsl #4
  47a62c:	ldp	w10, w12, [x11]
  47a630:	mov	w26, w2
  47a634:	add	w9, w9, #0x1
  47a638:	str	w9, [x0, #56]
  47a63c:	ldr	w9, [x11, #12]
  47a640:	mul	x11, x12, x26
  47a644:	lsr	x11, x11, #32
  47a648:	sub	w12, w2, w11
  47a64c:	ldr	x13, [x0, #24]
  47a650:	add	w11, w11, w12, lsr #1
  47a654:	lsr	w11, w11, w9
  47a658:	msub	w24, w11, w10, w2
  47a65c:	ldr	x22, [x13, w24, uxtw #3]
  47a660:	mov	x29, sp
  47a664:	cbz	x22, 47a710 <feof@plt+0x76e70>
  47a668:	ldr	x23, [x0, #32]
  47a66c:	mov	w21, w2
  47a670:	mov	x19, x0
  47a674:	mov	x20, x1
  47a678:	cmp	x22, #0x1
  47a67c:	b.eq	47a6a4 <feof@plt+0x76e04>  // b.none
  47a680:	ldr	x8, [x19, #8]
  47a684:	mov	x0, x22
  47a688:	mov	x1, x20
  47a68c:	blr	x8
  47a690:	cbnz	w0, 47a710 <feof@plt+0x76e70>
  47a694:	ldr	w8, [x19, #104]
  47a698:	add	x9, x25, x8, lsl #4
  47a69c:	ldr	w10, [x9]
  47a6a0:	ldr	w9, [x9, #12]
  47a6a4:	add	x8, x25, x8, lsl #4
  47a6a8:	ldr	w8, [x8, #8]
  47a6ac:	sub	w10, w10, #0x2
  47a6b0:	mul	x8, x8, x26
  47a6b4:	lsr	x8, x8, #32
  47a6b8:	sub	w11, w21, w8
  47a6bc:	add	w8, w8, w11, lsr #1
  47a6c0:	lsr	w8, w8, w9
  47a6c4:	msub	w8, w8, w10, w21
  47a6c8:	add	w21, w8, #0x1
  47a6cc:	ldr	w8, [x19, #60]
  47a6d0:	add	w9, w21, w24
  47a6d4:	ldr	x10, [x19, #24]
  47a6d8:	cmp	x23, x9
  47a6dc:	csel	w11, wzr, w23, hi  // hi = pmore
  47a6e0:	add	w8, w8, #0x1
  47a6e4:	str	w8, [x19, #60]
  47a6e8:	sub	w24, w9, w11
  47a6ec:	ldr	x22, [x10, w24, uxtw #3]
  47a6f0:	cmp	x22, #0x1
  47a6f4:	b.eq	47a6cc <feof@plt+0x76e2c>  // b.none
  47a6f8:	cbz	x22, 47a710 <feof@plt+0x76e70>
  47a6fc:	ldr	x8, [x19, #8]
  47a700:	mov	x0, x22
  47a704:	mov	x1, x20
  47a708:	blr	x8
  47a70c:	cbz	w0, 47a6cc <feof@plt+0x76e2c>
  47a710:	mov	x0, x22
  47a714:	ldp	x20, x19, [sp, #64]
  47a718:	ldp	x22, x21, [sp, #48]
  47a71c:	ldp	x24, x23, [sp, #32]
  47a720:	ldp	x26, x25, [sp, #16]
  47a724:	ldp	x29, x30, [sp], #80
  47a728:	ret
  47a72c:	stp	x29, x30, [sp, #-32]!
  47a730:	stp	x20, x19, [sp, #16]
  47a734:	ldr	x8, [x0]
  47a738:	mov	x19, x0
  47a73c:	mov	x0, x1
  47a740:	mov	x29, sp
  47a744:	mov	x20, x1
  47a748:	blr	x8
  47a74c:	mov	w2, w0
  47a750:	mov	x0, x19
  47a754:	mov	x1, x20
  47a758:	ldp	x20, x19, [sp, #16]
  47a75c:	ldp	x29, x30, [sp], #32
  47a760:	b	47a604 <feof@plt+0x76d64>
  47a764:	stp	x29, x30, [sp, #-96]!
  47a768:	stp	x26, x25, [sp, #32]
  47a76c:	stp	x24, x23, [sp, #48]
  47a770:	stp	x22, x21, [sp, #64]
  47a774:	stp	x20, x19, [sp, #80]
  47a778:	ldr	x24, [x0, #32]
  47a77c:	mov	w20, w3
  47a780:	mov	w23, w2
  47a784:	mov	x19, x0
  47a788:	cmp	w3, #0x1
  47a78c:	mov	x21, x1
  47a790:	str	x27, [sp, #16]
  47a794:	mov	x29, sp
  47a798:	b.ne	47a7bc <feof@plt+0x76f1c>  // b.any
  47a79c:	ldr	x8, [x19, #40]
  47a7a0:	add	x9, x24, x24, lsl #1
  47a7a4:	cmp	x9, x8, lsl #2
  47a7a8:	b.hi	47a7bc <feof@plt+0x76f1c>  // b.pmore
  47a7ac:	mov	x0, x19
  47a7b0:	bl	47a924 <feof@plt+0x77084>
  47a7b4:	cbz	w0, 47a850 <feof@plt+0x76fb0>
  47a7b8:	ldr	x24, [x19, #32]
  47a7bc:	ldr	w8, [x19, #104]
  47a7c0:	adrp	x26, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47a7c4:	add	x26, x26, #0xfc0
  47a7c8:	ldr	w9, [x19, #56]
  47a7cc:	add	x12, x26, x8, lsl #4
  47a7d0:	ldp	w11, w13, [x12]
  47a7d4:	mov	w27, w23
  47a7d8:	add	w14, w9, #0x1
  47a7dc:	ldr	w9, [x12, #12]
  47a7e0:	mul	x12, x13, x27
  47a7e4:	lsr	x12, x12, #32
  47a7e8:	ldr	x10, [x19, #24]
  47a7ec:	sub	w13, w23, w12
  47a7f0:	add	w12, w12, w13, lsr #1
  47a7f4:	lsr	w12, w12, w9
  47a7f8:	msub	w25, w12, w11, w23
  47a7fc:	str	w14, [x19, #56]
  47a800:	add	x22, x10, w25, uxtw #3
  47a804:	ldr	x0, [x22]
  47a808:	cbz	x0, 47a830 <feof@plt+0x76f90>
  47a80c:	cmp	x0, #0x1
  47a810:	b.eq	47a86c <feof@plt+0x76fcc>  // b.none
  47a814:	ldr	x8, [x19, #8]
  47a818:	mov	x1, x21
  47a81c:	blr	x8
  47a820:	cbz	w0, 47a858 <feof@plt+0x76fb8>
  47a824:	ldr	x8, [x19, #24]
  47a828:	add	x22, x8, x25, lsl #3
  47a82c:	b	47a904 <feof@plt+0x77064>
  47a830:	mov	x22, xzr
  47a834:	cbz	w20, 47a850 <feof@plt+0x76fb0>
  47a838:	cbz	x22, 47a8f4 <feof@plt+0x77054>
  47a83c:	ldr	x8, [x19, #48]
  47a840:	sub	x8, x8, #0x1
  47a844:	str	x8, [x19, #48]
  47a848:	str	xzr, [x22]
  47a84c:	b	47a904 <feof@plt+0x77064>
  47a850:	mov	x22, xzr
  47a854:	b	47a904 <feof@plt+0x77064>
  47a858:	ldr	w8, [x19, #104]
  47a85c:	mov	x22, xzr
  47a860:	add	x9, x26, x8, lsl #4
  47a864:	ldr	w11, [x9]
  47a868:	ldr	w9, [x9, #12]
  47a86c:	add	x8, x26, x8, lsl #4
  47a870:	ldr	w8, [x8, #8]
  47a874:	sub	w10, w11, #0x2
  47a878:	mul	x8, x8, x27
  47a87c:	lsr	x8, x8, #32
  47a880:	sub	w11, w23, w8
  47a884:	add	w8, w8, w11, lsr #1
  47a888:	lsr	w8, w8, w9
  47a88c:	msub	w8, w8, w10, w23
  47a890:	add	w23, w8, #0x1
  47a894:	ldr	w8, [x19, #60]
  47a898:	add	w9, w23, w25
  47a89c:	ldr	x10, [x19, #24]
  47a8a0:	cmp	x24, x9
  47a8a4:	csel	w11, wzr, w24, hi  // hi = pmore
  47a8a8:	add	w8, w8, #0x1
  47a8ac:	str	w8, [x19, #60]
  47a8b0:	sub	w25, w9, w11
  47a8b4:	ldr	x0, [x10, w25, uxtw #3]
  47a8b8:	cbz	x0, 47a834 <feof@plt+0x76f94>
  47a8bc:	cmp	x0, #0x1
  47a8c0:	b.eq	47a8d8 <feof@plt+0x77038>  // b.none
  47a8c4:	ldr	x8, [x19, #8]
  47a8c8:	mov	x1, x21
  47a8cc:	blr	x8
  47a8d0:	cbz	w0, 47a894 <feof@plt+0x76ff4>
  47a8d4:	b	47a8e8 <feof@plt+0x77048>
  47a8d8:	add	x8, x10, w25, uxtw #3
  47a8dc:	cmp	x22, #0x0
  47a8e0:	csel	x22, x8, x22, eq  // eq = none
  47a8e4:	b	47a894 <feof@plt+0x76ff4>
  47a8e8:	ldr	x8, [x19, #24]
  47a8ec:	add	x22, x8, w25, uxtw #3
  47a8f0:	b	47a904 <feof@plt+0x77064>
  47a8f4:	ldr	x8, [x19, #40]
  47a8f8:	add	x22, x10, w25, uxtw #3
  47a8fc:	add	x8, x8, #0x1
  47a900:	str	x8, [x19, #40]
  47a904:	mov	x0, x22
  47a908:	ldp	x20, x19, [sp, #80]
  47a90c:	ldp	x22, x21, [sp, #64]
  47a910:	ldp	x24, x23, [sp, #48]
  47a914:	ldp	x26, x25, [sp, #32]
  47a918:	ldr	x27, [sp, #16]
  47a91c:	ldp	x29, x30, [sp], #96
  47a920:	ret
  47a924:	stp	x29, x30, [sp, #-64]!
  47a928:	stp	x24, x23, [sp, #16]
  47a92c:	stp	x22, x21, [sp, #32]
  47a930:	stp	x20, x19, [sp, #48]
  47a934:	ldp	x8, x9, [x0, #40]
  47a938:	ldp	x19, x23, [x0, #24]
  47a93c:	adrp	x22, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47a940:	mov	x20, x0
  47a944:	sub	x8, x8, x9
  47a948:	lsl	x2, x8, #1
  47a94c:	cmp	x2, x23
  47a950:	add	x22, x22, #0xfc0
  47a954:	mov	x29, sp
  47a958:	b.hi	47a978 <feof@plt+0x770d8>  // b.pmore
  47a95c:	ldr	w24, [x20, #104]
  47a960:	cmp	x23, #0x21
  47a964:	b.cc	47a9d8 <feof@plt+0x77138>  // b.lo, b.ul, b.last
  47a968:	lsl	x8, x8, #3
  47a96c:	cmp	x8, x23
  47a970:	mov	x21, x23
  47a974:	b.cs	47a9b8 <feof@plt+0x77118>  // b.hs, b.nlast
  47a978:	mov	w8, wzr
  47a97c:	mov	w24, #0x1e                  	// #30
  47a980:	sub	w9, w24, w8
  47a984:	add	w9, w8, w9, lsr #1
  47a988:	lsl	x10, x9, #4
  47a98c:	ldr	w10, [x22, x10]
  47a990:	cmp	x2, x10
  47a994:	csel	w24, w24, w9, hi  // hi = pmore
  47a998:	csinc	w8, w8, w9, ls  // ls = plast
  47a99c:	cmp	w24, w8
  47a9a0:	b.ne	47a980 <feof@plt+0x770e0>  // b.any
  47a9a4:	mov	w8, w24
  47a9a8:	lsl	x8, x8, #4
  47a9ac:	ldr	w21, [x22, x8]
  47a9b0:	cmp	x2, x21
  47a9b4:	b.hi	47ab18 <feof@plt+0x77278>  // b.pmore
  47a9b8:	ldr	x8, [x20, #88]
  47a9bc:	cbz	x8, 47a9e4 <feof@plt+0x77144>
  47a9c0:	ldr	x0, [x20, #80]
  47a9c4:	mov	w2, #0x8                   	// #8
  47a9c8:	mov	x1, x21
  47a9cc:	blr	x8
  47a9d0:	cbnz	x0, 47a9f8 <feof@plt+0x77158>
  47a9d4:	b	47ab04 <feof@plt+0x77264>
  47a9d8:	mov	x21, x23
  47a9dc:	ldr	x8, [x20, #88]
  47a9e0:	cbnz	x8, 47a9c0 <feof@plt+0x77120>
  47a9e4:	ldr	x8, [x20, #64]
  47a9e8:	mov	w1, #0x8                   	// #8
  47a9ec:	mov	x0, x21
  47a9f0:	blr	x8
  47a9f4:	cbz	x0, 47ab04 <feof@plt+0x77264>
  47a9f8:	ldp	x9, x8, [x20, #40]
  47a9fc:	add	x23, x19, x23, lsl #3
  47aa00:	str	w24, [x20, #104]
  47aa04:	mov	x24, x19
  47aa08:	sub	x8, x9, x8
  47aa0c:	stp	x0, x21, [x20, #24]
  47aa10:	stp	x8, xzr, [x20, #40]
  47aa14:	b	47aa28 <feof@plt+0x77188>
  47aa18:	str	x21, [x14]
  47aa1c:	add	x24, x24, #0x8
  47aa20:	cmp	x24, x23
  47aa24:	b.cs	47aad8 <feof@plt+0x77238>  // b.hs, b.nlast
  47aa28:	ldr	x21, [x24]
  47aa2c:	cmp	x21, #0x2
  47aa30:	b.cc	47aa1c <feof@plt+0x7717c>  // b.lo, b.ul, b.last
  47aa34:	ldr	x8, [x20]
  47aa38:	mov	x0, x21
  47aa3c:	blr	x8
  47aa40:	ldr	w10, [x20, #104]
  47aa44:	mov	w11, w0
  47aa48:	add	x8, x22, x10, lsl #4
  47aa4c:	ldp	w13, w9, [x8]
  47aa50:	ldr	w12, [x8, #12]
  47aa54:	mul	x8, x9, x11
  47aa58:	lsr	x9, x8, #32
  47aa5c:	sub	w14, w0, w9
  47aa60:	ldr	x8, [x20, #24]
  47aa64:	add	w9, w9, w14, lsr #1
  47aa68:	lsr	w9, w9, w12
  47aa6c:	msub	w9, w9, w13, w0
  47aa70:	add	x14, x8, w9, uxtw #3
  47aa74:	ldr	x15, [x14]
  47aa78:	cbz	x15, 47aa18 <feof@plt+0x77178>
  47aa7c:	cmp	x15, #0x1
  47aa80:	b.eq	47aad4 <feof@plt+0x77234>  // b.none
  47aa84:	add	x10, x22, x10, lsl #4
  47aa88:	ldr	w14, [x10, #8]
  47aa8c:	ldr	x10, [x20, #32]
  47aa90:	sub	w13, w13, #0x2
  47aa94:	mul	x14, x14, x11
  47aa98:	lsr	x14, x14, #32
  47aa9c:	sub	w15, w11, w14
  47aaa0:	add	w14, w14, w15, lsr #1
  47aaa4:	lsr	w12, w14, w12
  47aaa8:	msub	w11, w12, w13, w11
  47aaac:	add	w11, w11, #0x1
  47aab0:	add	w9, w11, w9
  47aab4:	cmp	x10, x9
  47aab8:	csel	w12, wzr, w10, hi  // hi = pmore
  47aabc:	sub	w9, w9, w12
  47aac0:	add	x14, x8, w9, uxtw #3
  47aac4:	ldr	x12, [x14]
  47aac8:	cbz	x12, 47aa18 <feof@plt+0x77178>
  47aacc:	cmp	x12, #0x1
  47aad0:	b.ne	47aab0 <feof@plt+0x77210>  // b.any
  47aad4:	bl	4036f0 <abort@plt>
  47aad8:	ldr	x8, [x20, #72]
  47aadc:	cbz	x8, 47aaec <feof@plt+0x7724c>
  47aae0:	mov	x0, x19
  47aae4:	blr	x8
  47aae8:	b	47ab00 <feof@plt+0x77260>
  47aaec:	ldr	x8, [x20, #96]
  47aaf0:	cbz	x8, 47ab00 <feof@plt+0x77260>
  47aaf4:	ldr	x0, [x20, #80]
  47aaf8:	mov	x1, x19
  47aafc:	blr	x8
  47ab00:	mov	w0, #0x1                   	// #1
  47ab04:	ldp	x20, x19, [sp, #48]
  47ab08:	ldp	x22, x21, [sp, #32]
  47ab0c:	ldp	x24, x23, [sp, #16]
  47ab10:	ldp	x29, x30, [sp], #64
  47ab14:	ret
  47ab18:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47ab1c:	ldr	x0, [x8, #1096]
  47ab20:	adrp	x1, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47ab24:	add	x1, x1, #0x1a0
  47ab28:	bl	4030d0 <fprintf@plt>
  47ab2c:	bl	4036f0 <abort@plt>
  47ab30:	stp	x29, x30, [sp, #-48]!
  47ab34:	stp	x20, x19, [sp, #32]
  47ab38:	ldr	x8, [x0]
  47ab3c:	mov	x20, x0
  47ab40:	mov	x0, x1
  47ab44:	str	x21, [sp, #16]
  47ab48:	mov	x29, sp
  47ab4c:	mov	w19, w2
  47ab50:	mov	x21, x1
  47ab54:	blr	x8
  47ab58:	mov	w2, w0
  47ab5c:	mov	x0, x20
  47ab60:	mov	x1, x21
  47ab64:	mov	w3, w19
  47ab68:	ldp	x20, x19, [sp, #32]
  47ab6c:	ldr	x21, [sp, #16]
  47ab70:	ldp	x29, x30, [sp], #48
  47ab74:	b	47a764 <feof@plt+0x76ec4>
  47ab78:	stp	x29, x30, [sp, #-32]!
  47ab7c:	stp	x20, x19, [sp, #16]
  47ab80:	ldr	x8, [x0]
  47ab84:	mov	x19, x0
  47ab88:	mov	x0, x1
  47ab8c:	mov	x29, sp
  47ab90:	mov	x20, x1
  47ab94:	blr	x8
  47ab98:	mov	w2, w0
  47ab9c:	mov	x0, x19
  47aba0:	mov	x1, x20
  47aba4:	mov	w3, wzr
  47aba8:	bl	47a764 <feof@plt+0x76ec4>
  47abac:	cbz	x0, 47abd8 <feof@plt+0x77338>
  47abb0:	ldr	x8, [x19, #16]
  47abb4:	mov	x20, x0
  47abb8:	cbz	x8, 47abc4 <feof@plt+0x77324>
  47abbc:	ldr	x0, [x20]
  47abc0:	blr	x8
  47abc4:	mov	w8, #0x1                   	// #1
  47abc8:	str	x8, [x20]
  47abcc:	ldr	x8, [x19, #48]
  47abd0:	add	x8, x8, #0x1
  47abd4:	str	x8, [x19, #48]
  47abd8:	ldp	x20, x19, [sp, #16]
  47abdc:	ldp	x29, x30, [sp], #32
  47abe0:	ret
  47abe4:	stp	x29, x30, [sp, #-32]!
  47abe8:	mov	w3, wzr
  47abec:	stp	x20, x19, [sp, #16]
  47abf0:	mov	x29, sp
  47abf4:	mov	x19, x0
  47abf8:	bl	47a764 <feof@plt+0x76ec4>
  47abfc:	cbz	x0, 47ac28 <feof@plt+0x77388>
  47ac00:	ldr	x8, [x19, #16]
  47ac04:	mov	x20, x0
  47ac08:	cbz	x8, 47ac14 <feof@plt+0x77374>
  47ac0c:	ldr	x0, [x20]
  47ac10:	blr	x8
  47ac14:	mov	w8, #0x1                   	// #1
  47ac18:	str	x8, [x20]
  47ac1c:	ldr	x8, [x19, #48]
  47ac20:	add	x8, x8, #0x1
  47ac24:	str	x8, [x19, #48]
  47ac28:	ldp	x20, x19, [sp, #16]
  47ac2c:	ldp	x29, x30, [sp], #32
  47ac30:	ret
  47ac34:	stp	x29, x30, [sp, #-32]!
  47ac38:	stp	x20, x19, [sp, #16]
  47ac3c:	ldr	x8, [x0, #24]
  47ac40:	mov	x29, sp
  47ac44:	cmp	x8, x1
  47ac48:	b.hi	47ac9c <feof@plt+0x773fc>  // b.pmore
  47ac4c:	ldr	x9, [x0, #32]
  47ac50:	mov	x19, x0
  47ac54:	mov	x20, x1
  47ac58:	add	x8, x8, x9, lsl #3
  47ac5c:	cmp	x8, x1
  47ac60:	b.ls	47ac9c <feof@plt+0x773fc>  // b.plast
  47ac64:	ldr	x0, [x20]
  47ac68:	cmp	x0, #0x1
  47ac6c:	b.ls	47ac9c <feof@plt+0x773fc>  // b.plast
  47ac70:	ldr	x8, [x19, #16]
  47ac74:	cbz	x8, 47ac7c <feof@plt+0x773dc>
  47ac78:	blr	x8
  47ac7c:	mov	w8, #0x1                   	// #1
  47ac80:	str	x8, [x20]
  47ac84:	ldr	x8, [x19, #48]
  47ac88:	add	x8, x8, #0x1
  47ac8c:	str	x8, [x19, #48]
  47ac90:	ldp	x20, x19, [sp, #16]
  47ac94:	ldp	x29, x30, [sp], #32
  47ac98:	ret
  47ac9c:	bl	4036f0 <abort@plt>
  47aca0:	stp	x29, x30, [sp, #-48]!
  47aca4:	stp	x22, x21, [sp, #16]
  47aca8:	stp	x20, x19, [sp, #32]
  47acac:	ldp	x21, x8, [x0, #24]
  47acb0:	mov	x19, x2
  47acb4:	mov	x20, x1
  47acb8:	mov	x29, sp
  47acbc:	add	x22, x21, x8, lsl #3
  47acc0:	b	47acd0 <feof@plt+0x77430>
  47acc4:	add	x21, x21, #0x8
  47acc8:	cmp	x21, x22
  47accc:	b.cs	47acec <feof@plt+0x7744c>  // b.hs, b.nlast
  47acd0:	ldr	x8, [x21]
  47acd4:	cmp	x8, #0x2
  47acd8:	b.cc	47acc4 <feof@plt+0x77424>  // b.lo, b.ul, b.last
  47acdc:	mov	x0, x21
  47ace0:	mov	x1, x19
  47ace4:	blr	x20
  47ace8:	cbnz	w0, 47acc4 <feof@plt+0x77424>
  47acec:	ldp	x20, x19, [sp, #32]
  47acf0:	ldp	x22, x21, [sp, #16]
  47acf4:	ldp	x29, x30, [sp], #48
  47acf8:	ret
  47acfc:	stp	x29, x30, [sp, #-48]!
  47ad00:	stp	x22, x21, [sp, #16]
  47ad04:	stp	x20, x19, [sp, #32]
  47ad08:	ldr	x8, [x0, #32]
  47ad0c:	mov	x19, x2
  47ad10:	mov	x21, x0
  47ad14:	mov	x20, x1
  47ad18:	cmp	x8, #0x21
  47ad1c:	mov	x29, sp
  47ad20:	b.cc	47ad44 <feof@plt+0x774a4>  // b.lo, b.ul, b.last
  47ad24:	ldp	x9, x10, [x21, #40]
  47ad28:	sub	x9, x9, x10
  47ad2c:	lsl	x9, x9, #3
  47ad30:	cmp	x9, x8
  47ad34:	b.cs	47ad44 <feof@plt+0x774a4>  // b.hs, b.nlast
  47ad38:	mov	x0, x21
  47ad3c:	bl	47a924 <feof@plt+0x77084>
  47ad40:	ldr	x8, [x21, #32]
  47ad44:	ldr	x21, [x21, #24]
  47ad48:	add	x22, x21, x8, lsl #3
  47ad4c:	b	47ad5c <feof@plt+0x774bc>
  47ad50:	add	x21, x21, #0x8
  47ad54:	cmp	x21, x22
  47ad58:	b.cs	47ad78 <feof@plt+0x774d8>  // b.hs, b.nlast
  47ad5c:	ldr	x8, [x21]
  47ad60:	cmp	x8, #0x2
  47ad64:	b.cc	47ad50 <feof@plt+0x774b0>  // b.lo, b.ul, b.last
  47ad68:	mov	x0, x21
  47ad6c:	mov	x1, x19
  47ad70:	blr	x20
  47ad74:	cbnz	w0, 47ad50 <feof@plt+0x774b0>
  47ad78:	ldp	x20, x19, [sp, #32]
  47ad7c:	ldp	x22, x21, [sp, #16]
  47ad80:	ldp	x29, x30, [sp], #48
  47ad84:	ret
  47ad88:	ldr	w8, [x0, #56]
  47ad8c:	cbz	w8, 47ada4 <feof@plt+0x77504>
  47ad90:	ldr	s0, [x0, #60]
  47ad94:	ucvtf	d1, w8
  47ad98:	ucvtf	d0, d0
  47ad9c:	fdiv	d0, d0, d1
  47ada0:	ret
  47ada4:	fmov	d0, xzr
  47ada8:	ret
  47adac:	ldrb	w9, [x0]
  47adb0:	cbz	w9, 47addc <feof@plt+0x7753c>
  47adb4:	mov	x8, x0
  47adb8:	mov	w0, wzr
  47adbc:	add	x8, x8, #0x1
  47adc0:	mov	w10, #0x43                  	// #67
  47adc4:	mul	w11, w0, w10
  47adc8:	add	w11, w11, w9, uxtb
  47adcc:	ldrb	w9, [x8], #1
  47add0:	sub	w0, w11, #0x71
  47add4:	cbnz	w9, 47adc4 <feof@plt+0x77524>
  47add8:	ret
  47addc:	mov	w0, wzr
  47ade0:	ret
  47ade4:	tst	x0, #0x3
  47ade8:	b.eq	47ae9c <feof@plt+0x775fc>  // b.none
  47adec:	mov	w8, #0x79b9                	// #31161
  47adf0:	cmp	w1, #0xc
  47adf4:	movk	w8, #0x9e37, lsl #16
  47adf8:	b.cc	47af4c <feof@plt+0x776ac>  // b.lo, b.ul, b.last
  47adfc:	mov	w9, #0x79b9                	// #31161
  47ae00:	mov	w10, w1
  47ae04:	movk	w9, #0x9e37, lsl #16
  47ae08:	ldp	w11, w12, [x0]
  47ae0c:	sub	w10, w10, #0xc
  47ae10:	cmp	w10, #0xb
  47ae14:	add	w9, w11, w9
  47ae18:	ldr	w11, [x0, #8]
  47ae1c:	add	w8, w12, w8
  47ae20:	sub	w9, w9, w8
  47ae24:	add	x0, x0, #0xc
  47ae28:	add	w11, w11, w2
  47ae2c:	sub	w9, w9, w11
  47ae30:	sub	w8, w8, w11
  47ae34:	eor	w9, w9, w11, lsr #13
  47ae38:	sub	w8, w8, w9
  47ae3c:	sub	w11, w11, w9
  47ae40:	eor	w8, w8, w9, lsl #8
  47ae44:	sub	w11, w11, w8
  47ae48:	sub	w9, w9, w8
  47ae4c:	eor	w11, w11, w8, lsr #13
  47ae50:	sub	w9, w9, w11
  47ae54:	sub	w8, w8, w11
  47ae58:	eor	w9, w9, w11, lsr #12
  47ae5c:	sub	w8, w8, w9
  47ae60:	sub	w11, w11, w9
  47ae64:	eor	w8, w8, w9, lsl #16
  47ae68:	sub	w11, w11, w8
  47ae6c:	sub	w9, w9, w8
  47ae70:	eor	w11, w11, w8, lsr #5
  47ae74:	sub	w9, w9, w11
  47ae78:	sub	w8, w8, w11
  47ae7c:	eor	w9, w9, w11, lsr #3
  47ae80:	sub	w8, w8, w9
  47ae84:	sub	w11, w11, w9
  47ae88:	eor	w8, w8, w9, lsl #10
  47ae8c:	sub	w11, w11, w8
  47ae90:	eor	w2, w11, w8, lsr #15
  47ae94:	b.hi	47ae08 <feof@plt+0x77568>  // b.pmore
  47ae98:	b	47af58 <feof@plt+0x776b8>
  47ae9c:	mov	w8, #0x79b9                	// #31161
  47aea0:	cmp	w1, #0xc
  47aea4:	movk	w8, #0x9e37, lsl #16
  47aea8:	b.cc	47af4c <feof@plt+0x776ac>  // b.lo, b.ul, b.last
  47aeac:	mov	w9, #0x79b9                	// #31161
  47aeb0:	mov	w10, w1
  47aeb4:	movk	w9, #0x9e37, lsl #16
  47aeb8:	ldp	w11, w12, [x0]
  47aebc:	sub	w10, w10, #0xc
  47aec0:	cmp	w10, #0xb
  47aec4:	add	w9, w11, w9
  47aec8:	ldr	w11, [x0, #8]
  47aecc:	add	w8, w12, w8
  47aed0:	sub	w9, w9, w8
  47aed4:	add	x0, x0, #0xc
  47aed8:	add	w11, w11, w2
  47aedc:	sub	w9, w9, w11
  47aee0:	sub	w8, w8, w11
  47aee4:	eor	w9, w9, w11, lsr #13
  47aee8:	sub	w8, w8, w9
  47aeec:	sub	w11, w11, w9
  47aef0:	eor	w8, w8, w9, lsl #8
  47aef4:	sub	w11, w11, w8
  47aef8:	sub	w9, w9, w8
  47aefc:	eor	w11, w11, w8, lsr #13
  47af00:	sub	w9, w9, w11
  47af04:	sub	w8, w8, w11
  47af08:	eor	w9, w9, w11, lsr #12
  47af0c:	sub	w8, w8, w9
  47af10:	sub	w11, w11, w9
  47af14:	eor	w8, w8, w9, lsl #16
  47af18:	sub	w11, w11, w8
  47af1c:	sub	w9, w9, w8
  47af20:	eor	w11, w11, w8, lsr #5
  47af24:	sub	w9, w9, w11
  47af28:	sub	w8, w8, w11
  47af2c:	eor	w9, w9, w11, lsr #3
  47af30:	sub	w8, w8, w9
  47af34:	sub	w11, w11, w9
  47af38:	eor	w8, w8, w9, lsl #10
  47af3c:	sub	w11, w11, w8
  47af40:	eor	w2, w11, w8, lsr #15
  47af44:	b.hi	47aeb8 <feof@plt+0x77618>  // b.pmore
  47af48:	b	47af58 <feof@plt+0x776b8>
  47af4c:	mov	w9, #0x79b9                	// #31161
  47af50:	movk	w9, #0x9e37, lsl #16
  47af54:	mov	w10, w1
  47af58:	sub	w11, w10, #0x1
  47af5c:	cmp	w11, #0xa
  47af60:	add	w10, w2, w1
  47af64:	b.hi	47afd8 <feof@plt+0x77738>  // b.pmore
  47af68:	adrp	x12, 4d9000 <_obstack_memory_used@@Base+0x5d2fc>
  47af6c:	add	x12, x12, #0xfb4
  47af70:	adr	x13, 47af80 <feof@plt+0x776e0>
  47af74:	ldrb	w14, [x12, x11]
  47af78:	add	x13, x13, x14, lsl #2
  47af7c:	br	x13
  47af80:	ldrb	w11, [x0, #10]
  47af84:	add	w10, w10, w11, lsl #24
  47af88:	ldrb	w11, [x0, #9]
  47af8c:	add	w10, w10, w11, lsl #16
  47af90:	ldrb	w11, [x0, #8]
  47af94:	add	w10, w10, w11, lsl #8
  47af98:	ldrb	w11, [x0, #7]
  47af9c:	add	w8, w8, w11, lsl #24
  47afa0:	ldrb	w11, [x0, #6]
  47afa4:	add	w8, w8, w11, lsl #16
  47afa8:	ldrb	w11, [x0, #5]
  47afac:	add	w8, w8, w11, lsl #8
  47afb0:	ldrb	w11, [x0, #4]
  47afb4:	add	w8, w8, w11
  47afb8:	ldrb	w11, [x0, #3]
  47afbc:	add	w9, w9, w11, lsl #24
  47afc0:	ldrb	w11, [x0, #2]
  47afc4:	add	w9, w9, w11, lsl #16
  47afc8:	ldrb	w11, [x0, #1]
  47afcc:	add	w9, w9, w11, lsl #8
  47afd0:	ldrb	w11, [x0]
  47afd4:	add	w9, w9, w11
  47afd8:	sub	w9, w9, w8
  47afdc:	sub	w9, w9, w10
  47afe0:	sub	w8, w8, w10
  47afe4:	eor	w9, w9, w10, lsr #13
  47afe8:	sub	w8, w8, w9
  47afec:	sub	w10, w10, w9
  47aff0:	eor	w8, w8, w9, lsl #8
  47aff4:	sub	w10, w10, w8
  47aff8:	sub	w9, w9, w8
  47affc:	eor	w10, w10, w8, lsr #13
  47b000:	sub	w9, w9, w10
  47b004:	sub	w8, w8, w10
  47b008:	eor	w9, w9, w10, lsr #12
  47b00c:	sub	w8, w8, w9
  47b010:	sub	w10, w10, w9
  47b014:	eor	w8, w8, w9, lsl #16
  47b018:	sub	w10, w10, w8
  47b01c:	sub	w9, w9, w8
  47b020:	eor	w10, w10, w8, lsr #5
  47b024:	sub	w9, w9, w10
  47b028:	sub	w8, w8, w10
  47b02c:	eor	w9, w9, w10, lsr #3
  47b030:	sub	w8, w8, w9
  47b034:	eor	w8, w8, w9, lsl #10
  47b038:	sub	w9, w10, w9
  47b03c:	sub	w9, w9, w8
  47b040:	eor	w0, w9, w8, lsr #15
  47b044:	ret
  47b048:	ret
  47b04c:	add	x8, x0, #0x1
  47b050:	b	47b05c <feof@plt+0x777bc>
  47b054:	mov	x0, x8
  47b058:	add	x8, x8, #0x1
  47b05c:	ldurb	w9, [x8, #-1]
  47b060:	cmp	w9, #0x2f
  47b064:	b.eq	47b054 <feof@plt+0x777b4>  // b.none
  47b068:	cbnz	w9, 47b058 <feof@plt+0x777b8>
  47b06c:	ret
  47b070:	ldrb	w8, [x0]
  47b074:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47b078:	add	x9, x9, #0x4a2
  47b07c:	ldrh	w8, [x9, x8, lsl #1]
  47b080:	mov	w9, #0x88                  	// #136
  47b084:	tst	w8, w9
  47b088:	b.eq	47b09c <feof@plt+0x777fc>  // b.none
  47b08c:	ldrb	w8, [x0, #1]
  47b090:	add	x9, x0, #0x2
  47b094:	cmp	w8, #0x3a
  47b098:	csel	x0, x9, x0, eq  // eq = none
  47b09c:	add	x8, x0, #0x1
  47b0a0:	b	47b0ac <feof@plt+0x7780c>
  47b0a4:	mov	x0, x8
  47b0a8:	add	x8, x8, #0x1
  47b0ac:	ldurb	w9, [x8, #-1]
  47b0b0:	cmp	w9, #0x2f
  47b0b4:	b.eq	47b0a4 <feof@plt+0x77804>  // b.none
  47b0b8:	cmp	w9, #0x5c
  47b0bc:	b.eq	47b0a4 <feof@plt+0x77804>  // b.none
  47b0c0:	cbnz	w9, 47b0a8 <feof@plt+0x77808>
  47b0c4:	ret
  47b0c8:	add	x8, x0, #0x1
  47b0cc:	b	47b0d8 <feof@plt+0x77838>
  47b0d0:	mov	x0, x8
  47b0d4:	add	x8, x8, #0x1
  47b0d8:	ldurb	w9, [x8, #-1]
  47b0dc:	cmp	w9, #0x2f
  47b0e0:	b.eq	47b0d0 <feof@plt+0x77830>  // b.none
  47b0e4:	cbnz	w9, 47b0d4 <feof@plt+0x77834>
  47b0e8:	ret
  47b0ec:	stp	x29, x30, [sp, #-32]!
  47b0f0:	stp	x28, x19, [sp, #16]
  47b0f4:	mov	x29, sp
  47b0f8:	sub	sp, sp, #0x1, lsl #12
  47b0fc:	mov	x1, sp
  47b100:	mov	x19, x0
  47b104:	bl	4037f0 <realpath@plt>
  47b108:	cmp	x0, #0x0
  47b10c:	csel	x0, x19, x0, eq  // eq = none
  47b110:	bl	403220 <strdup@plt>
  47b114:	add	sp, sp, #0x1, lsl #12
  47b118:	ldp	x28, x19, [sp, #16]
  47b11c:	ldp	x29, x30, [sp], #32
  47b120:	ret
  47b124:	mov	w3, #0x1                   	// #1
  47b128:	b	47b12c <feof@plt+0x7788c>
  47b12c:	stp	x29, x30, [sp, #-96]!
  47b130:	stp	x28, x27, [sp, #16]
  47b134:	stp	x26, x25, [sp, #32]
  47b138:	stp	x24, x23, [sp, #48]
  47b13c:	stp	x22, x21, [sp, #64]
  47b140:	stp	x20, x19, [sp, #80]
  47b144:	mov	x29, sp
  47b148:	sub	sp, sp, #0x90
  47b14c:	mov	x24, xzr
  47b150:	cbz	x0, 47b478 <feof@plt+0x77bd8>
  47b154:	mov	x20, x1
  47b158:	cbz	x1, 47b478 <feof@plt+0x77bd8>
  47b15c:	mov	x23, x2
  47b160:	cbz	x2, 47b478 <feof@plt+0x77bd8>
  47b164:	mov	w22, w3
  47b168:	mov	x21, x0
  47b16c:	bl	47b0c8 <feof@plt+0x77828>
  47b170:	cmp	x0, x21
  47b174:	b.eq	47b194 <feof@plt+0x778f4>  // b.none
  47b178:	mov	x27, xzr
  47b17c:	mov	x0, x21
  47b180:	cbz	w22, 47b2c0 <feof@plt+0x77a20>
  47b184:	bl	47b0ec <feof@plt+0x7784c>
  47b188:	mov	x22, x0
  47b18c:	cbnz	x0, 47b2cc <feof@plt+0x77a2c>
  47b190:	b	47b354 <feof@plt+0x77ab4>
  47b194:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x32fc>
  47b198:	add	x0, x0, #0x7f0
  47b19c:	bl	403700 <getenv@plt>
  47b1a0:	cbz	x0, 47b178 <feof@plt+0x778d8>
  47b1a4:	mov	x24, x0
  47b1a8:	bl	4030b0 <strlen@plt>
  47b1ac:	add	x8, x0, #0x1
  47b1b0:	cmp	x8, #0x2
  47b1b4:	mov	w8, #0x2                   	// #2
  47b1b8:	csinc	x19, x8, x0, ls  // ls = plast
  47b1bc:	mov	x0, x21
  47b1c0:	bl	4030b0 <strlen@plt>
  47b1c4:	add	x8, x0, x19
  47b1c8:	add	x0, x8, #0x1
  47b1cc:	cmp	x0, #0xfbf
  47b1d0:	b.hi	47b1f0 <feof@plt+0x77950>  // b.pmore
  47b1d4:	add	x9, x0, #0xf
  47b1d8:	mov	x8, sp
  47b1dc:	and	x9, x9, #0xfffffffffffffff0
  47b1e0:	sub	x25, x8, x9
  47b1e4:	mov	sp, x25
  47b1e8:	stur	xzr, [x29, #-144]
  47b1ec:	b	47b1fc <feof@plt+0x7795c>
  47b1f0:	bl	4036b0 <malloc@plt>
  47b1f4:	mov	x25, x0
  47b1f8:	stur	x0, [x29, #-144]
  47b1fc:	add	x27, x25, #0x2
  47b200:	mov	x19, xzr
  47b204:	ldrb	w8, [x24, x19]
  47b208:	cmp	w8, #0x3a
  47b20c:	b.eq	47b21c <feof@plt+0x7797c>  // b.none
  47b210:	cbz	w8, 47b21c <feof@plt+0x7797c>
  47b214:	add	x19, x19, #0x1
  47b218:	b	47b204 <feof@plt+0x77964>
  47b21c:	add	x28, x24, x19
  47b220:	cbz	x19, 47b254 <feof@plt+0x779b4>
  47b224:	sub	x26, x28, x24
  47b228:	mov	x0, x25
  47b22c:	mov	x1, x24
  47b230:	mov	x2, x26
  47b234:	bl	402fc0 <memcpy@plt>
  47b238:	ldurb	w8, [x28, #-1]
  47b23c:	cmp	w8, #0x2f
  47b240:	add	x8, x25, x26
  47b244:	b.eq	47b260 <feof@plt+0x779c0>  // b.none
  47b248:	mov	w9, #0x2f                  	// #47
  47b24c:	strb	w9, [x8], #1
  47b250:	b	47b260 <feof@plt+0x779c0>
  47b254:	mov	w8, #0x2f2e                	// #12078
  47b258:	strh	w8, [x25]
  47b25c:	mov	x8, x27
  47b260:	mov	x0, x25
  47b264:	mov	x1, x21
  47b268:	strb	wzr, [x8]
  47b26c:	bl	403850 <strcat@plt>
  47b270:	mov	w1, #0x1                   	// #1
  47b274:	bl	403290 <access@plt>
  47b278:	cbnz	w0, 47b29c <feof@plt+0x779fc>
  47b27c:	sub	x2, x29, #0x88
  47b280:	mov	x1, x25
  47b284:	bl	403650 <__xstat@plt>
  47b288:	tbnz	w0, #31, 47b29c <feof@plt+0x779fc>
  47b28c:	ldur	w8, [x29, #-120]
  47b290:	and	w8, w8, #0xf000
  47b294:	cmp	w8, #0x8, lsl #12
  47b298:	b.eq	47b2b0 <feof@plt+0x77a10>  // b.none
  47b29c:	ldrb	w8, [x28]
  47b2a0:	cbz	w8, 47b2b4 <feof@plt+0x77a14>
  47b2a4:	add	x8, x24, x19
  47b2a8:	add	x24, x8, #0x1
  47b2ac:	b	47b200 <feof@plt+0x77960>
  47b2b0:	mov	x21, x25
  47b2b4:	ldur	x27, [x29, #-144]
  47b2b8:	mov	x0, x21
  47b2bc:	cbnz	w22, 47b184 <feof@plt+0x778e4>
  47b2c0:	bl	403220 <strdup@plt>
  47b2c4:	mov	x22, x0
  47b2c8:	cbz	x0, 47b354 <feof@plt+0x77ab4>
  47b2cc:	sub	x1, x29, #0x88
  47b2d0:	mov	x0, x22
  47b2d4:	bl	47b5a4 <feof@plt+0x77d04>
  47b2d8:	mov	x21, x0
  47b2dc:	mov	x0, x22
  47b2e0:	bl	4031d0 <free@plt>
  47b2e4:	cbz	x21, 47b354 <feof@plt+0x77ab4>
  47b2e8:	sub	x1, x29, #0x4
  47b2ec:	mov	x0, x20
  47b2f0:	bl	47b5a4 <feof@plt+0x77d04>
  47b2f4:	mov	x20, x0
  47b2f8:	cbz	x0, 47b348 <feof@plt+0x77aa8>
  47b2fc:	ldur	w19, [x29, #-136]
  47b300:	ldur	w9, [x29, #-4]
  47b304:	sub	w8, w19, #0x1
  47b308:	cmp	w8, w9
  47b30c:	stur	w8, [x29, #-136]
  47b310:	b.ne	47b370 <feof@plt+0x77ad0>  // b.any
  47b314:	cmp	w19, #0x2
  47b318:	b.lt	47b348 <feof@plt+0x77aa8>  // b.tstop
  47b31c:	mov	w25, w8
  47b320:	mov	x22, x21
  47b324:	mov	x24, x20
  47b328:	ldr	x0, [x22]
  47b32c:	ldr	x1, [x24]
  47b330:	bl	403640 <strcmp@plt>
  47b334:	cbnz	w0, 47b35c <feof@plt+0x77abc>
  47b338:	subs	x25, x25, #0x1
  47b33c:	add	x24, x24, #0x8
  47b340:	add	x22, x22, #0x8
  47b344:	b.ne	47b328 <feof@plt+0x77a88>  // b.any
  47b348:	mov	x24, xzr
  47b34c:	mov	x22, xzr
  47b350:	b	47b408 <feof@plt+0x77b68>
  47b354:	mov	x24, xzr
  47b358:	b	47b470 <feof@plt+0x77bd0>
  47b35c:	cmp	w19, #0x2
  47b360:	mov	x24, xzr
  47b364:	mov	x22, xzr
  47b368:	b.lt	47b408 <feof@plt+0x77b68>  // b.tstop
  47b36c:	cbz	w25, 47b408 <feof@plt+0x77b68>
  47b370:	sub	x1, x29, #0x8
  47b374:	mov	x0, x23
  47b378:	bl	47b5a4 <feof@plt+0x77d04>
  47b37c:	mov	x22, x0
  47b380:	cbz	x0, 47b404 <feof@plt+0x77b64>
  47b384:	ldp	w24, w25, [x29, #-8]
  47b388:	cmp	w24, w25
  47b38c:	csel	w23, w24, w25, lt  // lt = tstop
  47b390:	cmp	w23, #0x1
  47b394:	b.lt	47b404 <feof@plt+0x77b64>  // b.tstop
  47b398:	mov	x19, xzr
  47b39c:	mov	w26, w23
  47b3a0:	lsl	x8, x19, #3
  47b3a4:	ldr	x0, [x20, x8]
  47b3a8:	ldr	x1, [x22, x8]
  47b3ac:	bl	403640 <strcmp@plt>
  47b3b0:	cbnz	w0, 47b3c4 <feof@plt+0x77b24>
  47b3b4:	add	x19, x19, #0x1
  47b3b8:	cmp	x19, x26
  47b3bc:	b.cc	47b3a0 <feof@plt+0x77b00>  // b.lo, b.ul, b.last
  47b3c0:	b	47b3c8 <feof@plt+0x77b28>
  47b3c4:	mov	w23, w19
  47b3c8:	cbz	w23, 47b404 <feof@plt+0x77b64>
  47b3cc:	ldur	w26, [x29, #-136]
  47b3d0:	mov	x28, x27
  47b3d4:	cmp	w26, #0x1
  47b3d8:	b.lt	47b49c <feof@plt+0x77bfc>  // b.tstop
  47b3dc:	mov	x27, xzr
  47b3e0:	mov	x19, xzr
  47b3e4:	ldr	x0, [x21, x27, lsl #3]
  47b3e8:	bl	4030b0 <strlen@plt>
  47b3ec:	add	w8, w0, w19
  47b3f0:	add	x27, x27, #0x1
  47b3f4:	cmp	x27, x26
  47b3f8:	sxtw	x19, w8
  47b3fc:	b.cc	47b3e4 <feof@plt+0x77b44>  // b.lo, b.ul, b.last
  47b400:	b	47b4a0 <feof@plt+0x77c00>
  47b404:	mov	x24, xzr
  47b408:	ldr	x0, [x21]
  47b40c:	cbz	x0, 47b420 <feof@plt+0x77b80>
  47b410:	add	x19, x21, #0x8
  47b414:	bl	4031d0 <free@plt>
  47b418:	ldr	x0, [x19], #8
  47b41c:	cbnz	x0, 47b414 <feof@plt+0x77b74>
  47b420:	mov	x0, x21
  47b424:	bl	4031d0 <free@plt>
  47b428:	cbz	x20, 47b44c <feof@plt+0x77bac>
  47b42c:	ldr	x0, [x20]
  47b430:	cbz	x0, 47b444 <feof@plt+0x77ba4>
  47b434:	add	x19, x20, #0x8
  47b438:	bl	4031d0 <free@plt>
  47b43c:	ldr	x0, [x19], #8
  47b440:	cbnz	x0, 47b438 <feof@plt+0x77b98>
  47b444:	mov	x0, x20
  47b448:	bl	4031d0 <free@plt>
  47b44c:	cbz	x22, 47b470 <feof@plt+0x77bd0>
  47b450:	ldr	x0, [x22]
  47b454:	cbz	x0, 47b468 <feof@plt+0x77bc8>
  47b458:	add	x19, x22, #0x8
  47b45c:	bl	4031d0 <free@plt>
  47b460:	ldr	x0, [x19], #8
  47b464:	cbnz	x0, 47b45c <feof@plt+0x77bbc>
  47b468:	mov	x0, x22
  47b46c:	bl	4031d0 <free@plt>
  47b470:	mov	x0, x27
  47b474:	bl	4031d0 <free@plt>
  47b478:	mov	x0, x24
  47b47c:	mov	sp, x29
  47b480:	ldp	x20, x19, [sp, #80]
  47b484:	ldp	x22, x21, [sp, #64]
  47b488:	ldp	x24, x23, [sp, #48]
  47b48c:	ldp	x26, x25, [sp, #32]
  47b490:	ldp	x28, x27, [sp, #16]
  47b494:	ldp	x29, x30, [sp], #96
  47b498:	ret
  47b49c:	mov	x19, xzr
  47b4a0:	sub	w8, w25, w23
  47b4a4:	sxtw	x9, w8
  47b4a8:	add	x8, x9, w8, sxtw #1
  47b4ac:	cmp	w23, w24
  47b4b0:	add	x19, x19, x8
  47b4b4:	b.ge	47b4d4 <feof@plt+0x77c34>  // b.tcont
  47b4b8:	add	x27, x22, w23, uxtw #3
  47b4bc:	sub	x24, x24, w23, uxtw
  47b4c0:	ldr	x0, [x27], #8
  47b4c4:	bl	4030b0 <strlen@plt>
  47b4c8:	subs	x24, x24, #0x1
  47b4cc:	add	x19, x0, w19, sxtw
  47b4d0:	b.ne	47b4c0 <feof@plt+0x77c20>  // b.any
  47b4d4:	add	w8, w19, #0x1
  47b4d8:	sxtw	x0, w8
  47b4dc:	bl	4036b0 <malloc@plt>
  47b4e0:	mov	x24, x0
  47b4e4:	cbz	x0, 47b594 <feof@plt+0x77cf4>
  47b4e8:	cmp	w26, #0x1
  47b4ec:	mov	x27, x28
  47b4f0:	strb	wzr, [x24]
  47b4f4:	b.lt	47b51c <feof@plt+0x77c7c>  // b.tstop
  47b4f8:	mov	x19, xzr
  47b4fc:	ldr	x1, [x21, x19, lsl #3]
  47b500:	mov	x0, x24
  47b504:	bl	403850 <strcat@plt>
  47b508:	ldursw	x8, [x29, #-136]
  47b50c:	add	x19, x19, #0x1
  47b510:	cmp	x19, x8
  47b514:	b.lt	47b4fc <feof@plt+0x77c5c>  // b.tstop
  47b518:	ldur	w25, [x29, #-4]
  47b51c:	mov	x0, x24
  47b520:	bl	4030b0 <strlen@plt>
  47b524:	cmp	w23, w25
  47b528:	add	x8, x24, x0
  47b52c:	b.ge	47b560 <feof@plt+0x77cc0>  // b.tcont
  47b530:	mov	w9, #0x2e2e                	// #11822
  47b534:	mov	w10, #0x2f                  	// #47
  47b538:	mov	w11, w23
  47b53c:	ldur	w13, [x29, #-4]
  47b540:	add	x12, x8, #0x3
  47b544:	add	w11, w11, #0x1
  47b548:	strh	w9, [x8]
  47b54c:	cmp	w11, w13
  47b550:	strb	w10, [x8, #2]
  47b554:	mov	x8, x12
  47b558:	b.lt	47b53c <feof@plt+0x77c9c>  // b.tstop
  47b55c:	mov	x8, x12
  47b560:	ldur	w9, [x29, #-8]
  47b564:	strb	wzr, [x8]
  47b568:	cmp	w23, w9
  47b56c:	b.ge	47b408 <feof@plt+0x77b68>  // b.tcont
  47b570:	mov	w19, w23
  47b574:	ldr	x1, [x22, x19, lsl #3]
  47b578:	mov	x0, x24
  47b57c:	bl	403850 <strcat@plt>
  47b580:	ldur	w8, [x29, #-8]
  47b584:	add	x19, x19, #0x1
  47b588:	cmp	w8, w19
  47b58c:	b.gt	47b574 <feof@plt+0x77cd4>
  47b590:	b	47b408 <feof@plt+0x77b68>
  47b594:	mov	x27, x28
  47b598:	b	47b408 <feof@plt+0x77b68>
  47b59c:	mov	w3, wzr
  47b5a0:	b	47b12c <feof@plt+0x7788c>
  47b5a4:	stp	x29, x30, [sp, #-80]!
  47b5a8:	stp	x22, x21, [sp, #48]
  47b5ac:	stp	x20, x19, [sp, #64]
  47b5b0:	mov	x20, x1
  47b5b4:	mov	x21, x0
  47b5b8:	mov	w8, wzr
  47b5bc:	mov	x9, x0
  47b5c0:	str	x25, [sp, #16]
  47b5c4:	stp	x24, x23, [sp, #32]
  47b5c8:	mov	x29, sp
  47b5cc:	mov	x10, x9
  47b5d0:	mov	x9, x10
  47b5d4:	ldrb	w11, [x10], #1
  47b5d8:	cbz	w11, 47b5f8 <feof@plt+0x77d58>
  47b5dc:	cmp	w11, #0x2f
  47b5e0:	b.ne	47b5d0 <feof@plt+0x77d30>  // b.any
  47b5e4:	ldrb	w10, [x9, #1]!
  47b5e8:	cmp	w10, #0x2f
  47b5ec:	b.eq	47b5e4 <feof@plt+0x77d44>  // b.none
  47b5f0:	add	w8, w8, #0x1
  47b5f4:	b	47b5cc <feof@plt+0x77d2c>
  47b5f8:	add	w8, w8, #0x2
  47b5fc:	lsl	x0, x8, #3
  47b600:	bl	4036b0 <malloc@plt>
  47b604:	mov	x19, x0
  47b608:	cbz	x0, 47b70c <feof@plt+0x77e6c>
  47b60c:	mov	w24, wzr
  47b610:	mov	x8, x21
  47b614:	mov	x25, x8
  47b618:	ldrb	w9, [x8], #1
  47b61c:	cbz	w9, 47b690 <feof@plt+0x77df0>
  47b620:	cmp	w9, #0x2f
  47b624:	b.ne	47b614 <feof@plt+0x77d74>  // b.any
  47b628:	ldrb	w8, [x25, #1]!
  47b62c:	cmp	w8, #0x2f
  47b630:	b.eq	47b628 <feof@plt+0x77d88>  // b.none
  47b634:	sub	x23, x25, x21
  47b638:	add	w8, w23, #0x1
  47b63c:	sxtw	x0, w8
  47b640:	bl	4036b0 <malloc@plt>
  47b644:	sxtw	x23, w23
  47b648:	mov	x1, x21
  47b64c:	mov	x2, x23
  47b650:	mov	x22, x0
  47b654:	bl	402fc0 <memcpy@plt>
  47b658:	add	w8, w24, #0x1
  47b65c:	str	x22, [x19, w24, uxtw #3]
  47b660:	mov	w24, w8
  47b664:	mov	x21, x25
  47b668:	strb	wzr, [x22, x23]
  47b66c:	cbnz	x22, 47b610 <feof@plt+0x77d70>
  47b670:	str	xzr, [x19, w8, uxtw #3]
  47b674:	ldr	x0, [x19]
  47b678:	cbz	x0, 47b700 <feof@plt+0x77e60>
  47b67c:	add	x20, x19, #0x8
  47b680:	bl	4031d0 <free@plt>
  47b684:	ldr	x0, [x20], #8
  47b688:	cbnz	x0, 47b680 <feof@plt+0x77de0>
  47b68c:	b	47b700 <feof@plt+0x77e60>
  47b690:	mvn	x9, x21
  47b694:	add	x23, x9, x8
  47b698:	cmp	x23, #0x1
  47b69c:	b.lt	47b6cc <feof@plt+0x77e2c>  // b.tstop
  47b6a0:	add	w8, w23, #0x1
  47b6a4:	sxtw	x0, w8
  47b6a8:	bl	4036b0 <malloc@plt>
  47b6ac:	sxtw	x23, w23
  47b6b0:	mov	x1, x21
  47b6b4:	mov	x2, x23
  47b6b8:	mov	x22, x0
  47b6bc:	bl	402fc0 <memcpy@plt>
  47b6c0:	str	x22, [x19, w24, uxtw #3]
  47b6c4:	add	w24, w24, #0x1
  47b6c8:	strb	wzr, [x22, x23]
  47b6cc:	add	x8, x19, w24, sxtw #3
  47b6d0:	ldur	x9, [x8, #-8]
  47b6d4:	str	xzr, [x8]
  47b6d8:	cbz	x9, 47b6e8 <feof@plt+0x77e48>
  47b6dc:	cbz	x20, 47b70c <feof@plt+0x77e6c>
  47b6e0:	str	w24, [x20]
  47b6e4:	b	47b70c <feof@plt+0x77e6c>
  47b6e8:	ldr	x0, [x19]
  47b6ec:	cbz	x0, 47b700 <feof@plt+0x77e60>
  47b6f0:	add	x20, x19, #0x8
  47b6f4:	bl	4031d0 <free@plt>
  47b6f8:	ldr	x0, [x20], #8
  47b6fc:	cbnz	x0, 47b6f4 <feof@plt+0x77e54>
  47b700:	mov	x0, x19
  47b704:	bl	4031d0 <free@plt>
  47b708:	mov	x19, xzr
  47b70c:	mov	x0, x19
  47b710:	ldp	x20, x19, [sp, #64]
  47b714:	ldp	x22, x21, [sp, #48]
  47b718:	ldp	x24, x23, [sp, #32]
  47b71c:	ldr	x25, [sp, #16]
  47b720:	ldp	x29, x30, [sp], #80
  47b724:	ret
  47b728:	stp	x29, x30, [sp, #-48]!
  47b72c:	str	x21, [sp, #16]
  47b730:	adrp	x21, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  47b734:	ldr	x0, [x21, #1048]
  47b738:	stp	x20, x19, [sp, #32]
  47b73c:	mov	x29, sp
  47b740:	cbnz	x0, 47b848 <feof@plt+0x77fa8>
  47b744:	adrp	x0, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47b748:	add	x0, x0, #0x2c3
  47b74c:	bl	403700 <getenv@plt>
  47b750:	cbz	x0, 47b764 <feof@plt+0x77ec4>
  47b754:	mov	w1, #0x7                   	// #7
  47b758:	mov	x19, x0
  47b75c:	bl	403290 <access@plt>
  47b760:	cbz	w0, 47b808 <feof@plt+0x77f68>
  47b764:	adrp	x0, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47b768:	add	x0, x0, #0x2ca
  47b76c:	bl	403700 <getenv@plt>
  47b770:	cbz	x0, 47b784 <feof@plt+0x77ee4>
  47b774:	mov	w1, #0x7                   	// #7
  47b778:	mov	x19, x0
  47b77c:	bl	403290 <access@plt>
  47b780:	cbz	w0, 47b808 <feof@plt+0x77f68>
  47b784:	adrp	x0, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47b788:	add	x0, x0, #0x2ce
  47b78c:	bl	403700 <getenv@plt>
  47b790:	cbz	x0, 47b7a4 <feof@plt+0x77f04>
  47b794:	mov	w1, #0x7                   	// #7
  47b798:	mov	x19, x0
  47b79c:	bl	403290 <access@plt>
  47b7a0:	cbz	w0, 47b808 <feof@plt+0x77f68>
  47b7a4:	adrp	x19, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47b7a8:	add	x19, x19, #0x302
  47b7ac:	mov	w1, #0x7                   	// #7
  47b7b0:	mov	x0, x19
  47b7b4:	bl	403290 <access@plt>
  47b7b8:	cbz	w0, 47b808 <feof@plt+0x77f68>
  47b7bc:	adrp	x20, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47b7c0:	add	x20, x20, #0x307
  47b7c4:	mov	w1, #0x7                   	// #7
  47b7c8:	mov	x0, x20
  47b7cc:	bl	403290 <access@plt>
  47b7d0:	cbz	w0, 47b804 <feof@plt+0x77f64>
  47b7d4:	adrp	x20, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47b7d8:	add	x20, x20, #0x310
  47b7dc:	mov	w1, #0x7                   	// #7
  47b7e0:	mov	x0, x20
  47b7e4:	bl	403290 <access@plt>
  47b7e8:	cbz	w0, 47b804 <feof@plt+0x77f64>
  47b7ec:	mov	w1, #0x7                   	// #7
  47b7f0:	mov	x0, x19
  47b7f4:	bl	403290 <access@plt>
  47b7f8:	cmp	w0, #0x0
  47b7fc:	csel	x19, x19, xzr, eq  // eq = none
  47b800:	b	47b808 <feof@plt+0x77f68>
  47b804:	mov	x19, x20
  47b808:	adrp	x8, 4b6000 <_obstack_memory_used@@Base+0x3a2fc>
  47b80c:	add	x8, x8, #0x60
  47b810:	cmp	x19, #0x0
  47b814:	csel	x19, x8, x19, eq  // eq = none
  47b818:	mov	x0, x19
  47b81c:	bl	4030b0 <strlen@plt>
  47b820:	mov	x20, x0
  47b824:	add	w0, w20, #0x2
  47b828:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  47b82c:	mov	x1, x19
  47b830:	bl	4032f0 <strcpy@plt>
  47b834:	mov	w8, #0x2f                  	// #47
  47b838:	add	w9, w20, #0x1
  47b83c:	strb	w8, [x0, w20, uxtw]
  47b840:	strb	wzr, [x0, w9, uxtw]
  47b844:	str	x0, [x21, #1048]
  47b848:	ldp	x20, x19, [sp, #32]
  47b84c:	ldr	x21, [sp, #16]
  47b850:	ldp	x29, x30, [sp], #48
  47b854:	ret
  47b858:	stp	x29, x30, [sp, #-80]!
  47b85c:	str	x25, [sp, #16]
  47b860:	stp	x24, x23, [sp, #32]
  47b864:	stp	x22, x21, [sp, #48]
  47b868:	stp	x20, x19, [sp, #64]
  47b86c:	mov	x29, sp
  47b870:	mov	x20, x1
  47b874:	mov	x21, x0
  47b878:	bl	47b728 <feof@plt+0x77e88>
  47b87c:	adrp	x8, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  47b880:	add	x8, x8, #0x1eb
  47b884:	cmp	x21, #0x0
  47b888:	adrp	x9, 48f000 <_obstack_memory_used@@Base+0x132fc>
  47b88c:	add	x9, x9, #0x23b
  47b890:	csel	x21, x8, x21, eq  // eq = none
  47b894:	cmp	x20, #0x0
  47b898:	mov	x19, x0
  47b89c:	csel	x22, x9, x20, eq  // eq = none
  47b8a0:	bl	4030b0 <strlen@plt>
  47b8a4:	mov	x20, x0
  47b8a8:	mov	x0, x21
  47b8ac:	bl	4030b0 <strlen@plt>
  47b8b0:	mov	x23, x0
  47b8b4:	mov	x0, x22
  47b8b8:	bl	4030b0 <strlen@plt>
  47b8bc:	sxtw	x25, w20
  47b8c0:	sxtw	x23, w23
  47b8c4:	mov	x24, x0
  47b8c8:	add	x8, x25, x23
  47b8cc:	add	x8, x8, w24, sxtw
  47b8d0:	add	x0, x8, #0x7
  47b8d4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  47b8d8:	mov	x1, x19
  47b8dc:	mov	x20, x0
  47b8e0:	bl	4032f0 <strcpy@plt>
  47b8e4:	add	x0, x20, x25
  47b8e8:	mov	x1, x21
  47b8ec:	bl	4032f0 <strcpy@plt>
  47b8f0:	add	x8, x0, x23
  47b8f4:	mov	w9, #0x5858                	// #22616
  47b8f8:	mov	w10, #0x5858                	// #22616
  47b8fc:	movk	w9, #0x58, lsl #16
  47b900:	movk	w10, #0x5858, lsl #16
  47b904:	add	x0, x8, #0x6
  47b908:	mov	x1, x22
  47b90c:	stur	w9, [x8, #3]
  47b910:	str	w10, [x8]
  47b914:	bl	4032f0 <strcpy@plt>
  47b918:	mov	x0, x20
  47b91c:	mov	w1, w24
  47b920:	bl	4032e0 <mkstemps@plt>
  47b924:	cmn	w0, #0x1
  47b928:	b.eq	47b950 <feof@plt+0x780b0>  // b.none
  47b92c:	bl	403630 <close@plt>
  47b930:	cbnz	w0, 47b97c <feof@plt+0x780dc>
  47b934:	mov	x0, x20
  47b938:	ldp	x20, x19, [sp, #64]
  47b93c:	ldp	x22, x21, [sp, #48]
  47b940:	ldp	x24, x23, [sp, #32]
  47b944:	ldr	x25, [sp, #16]
  47b948:	ldp	x29, x30, [sp], #80
  47b94c:	ret
  47b950:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47b954:	ldr	x20, [x8, #1096]
  47b958:	bl	4035c0 <__errno_location@plt>
  47b95c:	ldr	w0, [x0]
  47b960:	bl	4032d0 <strerror@plt>
  47b964:	adrp	x1, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47b968:	mov	x3, x0
  47b96c:	add	x1, x1, #0x2da
  47b970:	mov	x0, x20
  47b974:	mov	x2, x19
  47b978:	bl	4030d0 <fprintf@plt>
  47b97c:	bl	4036f0 <abort@plt>
  47b980:	mov	x1, x0
  47b984:	mov	x0, xzr
  47b988:	b	47b858 <feof@plt+0x77fb8>

000000000047b98c <_obstack_begin@@Base>:
  47b98c:	stp	x29, x30, [sp, #-48]!
  47b990:	stp	x22, x21, [sp, #16]
  47b994:	stp	x20, x19, [sp, #32]
  47b998:	ldrb	w8, [x0, #80]
  47b99c:	cmp	x2, #0x0
  47b9a0:	mov	w9, #0x10                  	// #16
  47b9a4:	csel	x21, x9, x2, eq  // eq = none
  47b9a8:	mov	w9, #0xfe0                 	// #4064
  47b9ac:	cmp	x1, #0x0
  47b9b0:	mov	x19, x0
  47b9b4:	str	x4, [x0, #64]
  47b9b8:	csel	x0, x9, x1, eq  // eq = none
  47b9bc:	and	w8, w8, #0xfe
  47b9c0:	sub	x22, x21, #0x1
  47b9c4:	mov	x29, sp
  47b9c8:	strb	w8, [x19, #80]
  47b9cc:	str	x0, [x19]
  47b9d0:	stp	x22, x3, [x19, #48]
  47b9d4:	blr	x3
  47b9d8:	mov	x20, x0
  47b9dc:	cbnz	x0, 47b9ec <_obstack_begin@@Base+0x60>
  47b9e0:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47b9e4:	ldr	x8, [x8, #1056]
  47b9e8:	blr	x8
  47b9ec:	add	x8, x20, x22
  47b9f0:	neg	x9, x21
  47b9f4:	add	x8, x8, #0x10
  47b9f8:	and	x8, x8, x9
  47b9fc:	ldr	x9, [x19]
  47ba00:	stp	x20, x8, [x19, #8]
  47ba04:	str	x8, [x19, #24]
  47ba08:	mov	w0, #0x1                   	// #1
  47ba0c:	add	x8, x20, x9
  47ba10:	str	x8, [x20]
  47ba14:	str	x8, [x19, #32]
  47ba18:	str	xzr, [x20, #8]
  47ba1c:	ldrb	w8, [x19, #80]
  47ba20:	and	w8, w8, #0xfffffff9
  47ba24:	strb	w8, [x19, #80]
  47ba28:	ldp	x20, x19, [sp, #32]
  47ba2c:	ldp	x22, x21, [sp, #16]
  47ba30:	ldp	x29, x30, [sp], #48
  47ba34:	ret

000000000047ba38 <_obstack_begin_1@@Base>:
  47ba38:	stp	x29, x30, [sp, #-48]!
  47ba3c:	stp	x22, x21, [sp, #16]
  47ba40:	stp	x20, x19, [sp, #32]
  47ba44:	ldrb	w8, [x0, #80]
  47ba48:	cmp	x2, #0x0
  47ba4c:	mov	w9, #0x10                  	// #16
  47ba50:	csel	x21, x9, x2, eq  // eq = none
  47ba54:	mov	w9, #0xfe0                 	// #4064
  47ba58:	cmp	x1, #0x0
  47ba5c:	csel	x1, x9, x1, eq  // eq = none
  47ba60:	orr	w8, w8, #0x1
  47ba64:	sub	x22, x21, #0x1
  47ba68:	mov	x19, x0
  47ba6c:	stp	x4, x5, [x0, #64]
  47ba70:	strb	w8, [x0, #80]
  47ba74:	str	x1, [x0]
  47ba78:	stp	x22, x3, [x0, #48]
  47ba7c:	mov	x0, x5
  47ba80:	mov	x29, sp
  47ba84:	blr	x3
  47ba88:	mov	x20, x0
  47ba8c:	cbnz	x0, 47ba9c <_obstack_begin_1@@Base+0x64>
  47ba90:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47ba94:	ldr	x8, [x8, #1056]
  47ba98:	blr	x8
  47ba9c:	add	x8, x20, x22
  47baa0:	neg	x9, x21
  47baa4:	add	x8, x8, #0x10
  47baa8:	and	x8, x8, x9
  47baac:	ldr	x9, [x19]
  47bab0:	stp	x20, x8, [x19, #8]
  47bab4:	str	x8, [x19, #24]
  47bab8:	mov	w0, #0x1                   	// #1
  47babc:	add	x8, x20, x9
  47bac0:	str	x8, [x20]
  47bac4:	str	x8, [x19, #32]
  47bac8:	str	xzr, [x20, #8]
  47bacc:	ldrb	w8, [x19, #80]
  47bad0:	and	w8, w8, #0xfffffff9
  47bad4:	strb	w8, [x19, #80]
  47bad8:	ldp	x20, x19, [sp, #32]
  47badc:	ldp	x22, x21, [sp, #16]
  47bae0:	ldp	x29, x30, [sp], #48
  47bae4:	ret

000000000047bae8 <_obstack_newchunk@@Base>:
  47bae8:	stp	x29, x30, [sp, #-80]!
  47baec:	str	x25, [sp, #16]
  47baf0:	stp	x24, x23, [sp, #32]
  47baf4:	stp	x22, x21, [sp, #48]
  47baf8:	stp	x20, x19, [sp, #64]
  47bafc:	ldp	x9, x8, [x0, #16]
  47bb00:	ldr	x10, [x0, #48]
  47bb04:	ldp	x11, x21, [x0]
  47bb08:	mov	x19, x0
  47bb0c:	sub	x20, x8, x9
  47bb10:	adds	x8, x20, x1
  47bb14:	lsr	x9, x20, #3
  47bb18:	cset	w12, cs  // cs = hs, nlast
  47bb1c:	adds	x10, x8, x10
  47bb20:	add	x9, x9, #0x64
  47bb24:	cset	w8, cs  // cs = hs, nlast
  47bb28:	adds	x9, x9, x10
  47bb2c:	csel	x9, x10, x9, cs  // cs = hs, nlast
  47bb30:	cmp	x9, x11
  47bb34:	csel	x22, x11, x9, cc  // cc = lo, ul, last
  47bb38:	mov	x29, sp
  47bb3c:	tbnz	w12, #0, 47bb7c <_obstack_newchunk@@Base+0x94>
  47bb40:	tbnz	w8, #0, 47bb7c <_obstack_newchunk@@Base+0x94>
  47bb44:	ldrb	w8, [x19, #80]
  47bb48:	tbnz	w8, #0, 47bb64 <_obstack_newchunk@@Base+0x7c>
  47bb4c:	ldr	x8, [x19, #56]
  47bb50:	mov	x0, x22
  47bb54:	blr	x8
  47bb58:	mov	x23, x0
  47bb5c:	cbnz	x0, 47bb8c <_obstack_newchunk@@Base+0xa4>
  47bb60:	b	47bb7c <_obstack_newchunk@@Base+0x94>
  47bb64:	ldr	x8, [x19, #56]
  47bb68:	ldr	x0, [x19, #72]
  47bb6c:	mov	x1, x22
  47bb70:	blr	x8
  47bb74:	mov	x23, x0
  47bb78:	cbnz	x0, 47bb8c <_obstack_newchunk@@Base+0xa4>
  47bb7c:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47bb80:	ldr	x8, [x8, #1056]
  47bb84:	blr	x8
  47bb88:	mov	x23, xzr
  47bb8c:	add	x8, x23, x22
  47bb90:	str	x23, [x19, #8]
  47bb94:	str	x21, [x23, #8]
  47bb98:	str	x8, [x19, #32]
  47bb9c:	str	x8, [x23]
  47bba0:	ldr	x25, [x19, #48]
  47bba4:	ldr	x24, [x19, #16]
  47bba8:	mov	x2, x20
  47bbac:	add	x8, x23, x25
  47bbb0:	add	x8, x8, #0x10
  47bbb4:	bic	x22, x8, x25
  47bbb8:	mov	x0, x22
  47bbbc:	mov	x1, x24
  47bbc0:	bl	402fc0 <memcpy@plt>
  47bbc4:	ldrb	w8, [x19, #80]
  47bbc8:	tbnz	w8, #1, 47bc10 <_obstack_newchunk@@Base+0x128>
  47bbcc:	add	x9, x21, x25
  47bbd0:	mvn	x8, x25
  47bbd4:	add	x9, x9, #0x10
  47bbd8:	and	x8, x9, x8
  47bbdc:	cmp	x24, x8
  47bbe0:	b.ne	47bc10 <_obstack_newchunk@@Base+0x128>  // b.any
  47bbe4:	ldr	x8, [x21, #8]
  47bbe8:	str	x8, [x23, #8]
  47bbec:	ldrb	w8, [x19, #80]
  47bbf0:	tbnz	w8, #0, 47bc04 <_obstack_newchunk@@Base+0x11c>
  47bbf4:	ldr	x8, [x19, #64]
  47bbf8:	mov	x0, x21
  47bbfc:	blr	x8
  47bc00:	b	47bc10 <_obstack_newchunk@@Base+0x128>
  47bc04:	ldp	x8, x0, [x19, #64]
  47bc08:	mov	x1, x21
  47bc0c:	blr	x8
  47bc10:	ldrb	w8, [x19, #80]
  47bc14:	add	x9, x22, x20
  47bc18:	stp	x22, x9, [x19, #16]
  47bc1c:	ldr	x25, [sp, #16]
  47bc20:	and	w8, w8, #0xfffffffd
  47bc24:	strb	w8, [x19, #80]
  47bc28:	ldp	x20, x19, [sp, #64]
  47bc2c:	ldp	x22, x21, [sp, #48]
  47bc30:	ldp	x24, x23, [sp, #32]
  47bc34:	ldp	x29, x30, [sp], #80
  47bc38:	ret

000000000047bc3c <_obstack_allocated_p@@Base>:
  47bc3c:	ldr	x8, [x0, #8]
  47bc40:	cbnz	x8, 47bc54 <_obstack_allocated_p@@Base+0x18>
  47bc44:	mov	w0, wzr
  47bc48:	ret
  47bc4c:	ldr	x8, [x8, #8]
  47bc50:	cbz	x8, 47bc44 <_obstack_allocated_p@@Base+0x8>
  47bc54:	cmp	x8, x1
  47bc58:	b.cs	47bc4c <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  47bc5c:	ldr	x9, [x8]
  47bc60:	cmp	x9, x1
  47bc64:	b.cc	47bc4c <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  47bc68:	mov	w0, #0x1                   	// #1
  47bc6c:	ret

000000000047bc70 <_obstack_free@@Base>:
  47bc70:	stp	x29, x30, [sp, #-48]!
  47bc74:	stp	x20, x19, [sp, #32]
  47bc78:	ldr	x8, [x0, #8]
  47bc7c:	mov	x20, x1
  47bc80:	str	x21, [sp, #16]
  47bc84:	mov	x29, sp
  47bc88:	cbz	x8, 47bce4 <_obstack_free@@Base+0x74>
  47bc8c:	mov	x19, x0
  47bc90:	b	47bcb4 <_obstack_free@@Base+0x44>
  47bc94:	ldr	x9, [x19, #64]
  47bc98:	mov	x0, x8
  47bc9c:	blr	x9
  47bca0:	ldrb	w8, [x19, #80]
  47bca4:	orr	w8, w8, #0x2
  47bca8:	strb	w8, [x19, #80]
  47bcac:	mov	x8, x21
  47bcb0:	cbz	x21, 47bce4 <_obstack_free@@Base+0x74>
  47bcb4:	cmp	x8, x20
  47bcb8:	b.cs	47bcc8 <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  47bcbc:	ldr	x9, [x8]
  47bcc0:	cmp	x9, x20
  47bcc4:	b.cs	47bcec <_obstack_free@@Base+0x7c>  // b.hs, b.nlast
  47bcc8:	ldrb	w9, [x19, #80]
  47bccc:	ldr	x21, [x8, #8]
  47bcd0:	tbz	w9, #0, 47bc94 <_obstack_free@@Base+0x24>
  47bcd4:	ldp	x9, x0, [x19, #64]
  47bcd8:	mov	x1, x8
  47bcdc:	blr	x9
  47bce0:	b	47bca0 <_obstack_free@@Base+0x30>
  47bce4:	cbz	x20, 47bcf4 <_obstack_free@@Base+0x84>
  47bce8:	bl	4036f0 <abort@plt>
  47bcec:	stp	x20, x9, [x19, #24]
  47bcf0:	stp	x8, x20, [x19, #8]
  47bcf4:	ldp	x20, x19, [sp, #32]
  47bcf8:	ldr	x21, [sp, #16]
  47bcfc:	ldp	x29, x30, [sp], #48
  47bd00:	ret

000000000047bd04 <_obstack_memory_used@@Base>:
  47bd04:	ldr	x8, [x0, #8]
  47bd08:	cbz	x8, 47bd24 <_obstack_memory_used@@Base+0x20>
  47bd0c:	mov	x0, xzr
  47bd10:	sub	x10, x0, x8
  47bd14:	ldp	x9, x8, [x8]
  47bd18:	add	x0, x10, x9
  47bd1c:	cbnz	x8, 47bd10 <_obstack_memory_used@@Base+0xc>
  47bd20:	ret
  47bd24:	mov	x0, xzr
  47bd28:	ret
  47bd2c:	stp	x29, x30, [sp, #-16]!
  47bd30:	adrp	x8, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47bd34:	ldr	x0, [x8, #1096]
  47bd38:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  47bd3c:	adrp	x2, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47bd40:	add	x1, x1, #0x467
  47bd44:	add	x2, x2, #0x319
  47bd48:	mov	x29, sp
  47bd4c:	bl	4030d0 <fprintf@plt>
  47bd50:	mov	w0, #0x1                   	// #1
  47bd54:	bl	403730 <exit@plt>
  47bd58:	stp	x29, x30, [sp, #-48]!
  47bd5c:	stp	x22, x21, [sp, #16]
  47bd60:	mov	w22, w0
  47bd64:	mov	w0, #0x90                  	// #144
  47bd68:	stp	x20, x19, [sp, #32]
  47bd6c:	mov	x29, sp
  47bd70:	mov	x19, x3
  47bd74:	mov	x20, x2
  47bd78:	mov	x21, x1
  47bd7c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  47bd80:	str	w22, [x0]
  47bd84:	stp	x21, x20, [x0, #8]
  47bd88:	stp	xzr, x19, [x0, #120]
  47bd8c:	ldp	x20, x19, [sp, #32]
  47bd90:	ldp	x22, x21, [sp, #16]
  47bd94:	movi	d0, #0xffffffff00000000
  47bd98:	str	wzr, [x0, #24]
  47bd9c:	str	xzr, [x0, #32]
  47bda0:	str	wzr, [x0, #48]
  47bda4:	stp	xzr, xzr, [x0, #64]
  47bda8:	str	xzr, [x0, #56]
  47bdac:	str	wzr, [x0, #80]
  47bdb0:	stp	xzr, xzr, [x0, #96]
  47bdb4:	str	xzr, [x0, #88]
  47bdb8:	str	wzr, [x0, #112]
  47bdbc:	str	d0, [x0, #40]
  47bdc0:	str	xzr, [x0, #136]
  47bdc4:	ldp	x29, x30, [sp], #48
  47bdc8:	ret
  47bdcc:	sub	sp, sp, #0xa0
  47bdd0:	stp	x29, x30, [sp, #64]
  47bdd4:	stp	x28, x27, [sp, #80]
  47bdd8:	stp	x26, x25, [sp, #96]
  47bddc:	stp	x24, x23, [sp, #112]
  47bde0:	stp	x22, x21, [sp, #128]
  47bde4:	stp	x20, x19, [sp, #144]
  47bde8:	mov	x19, x0
  47bdec:	ldr	x0, [x0, #88]
  47bdf0:	mov	x22, x7
  47bdf4:	mov	x27, x6
  47bdf8:	mov	x23, x5
  47bdfc:	mov	x24, x4
  47be00:	mov	x28, x3
  47be04:	mov	x25, x2
  47be08:	mov	w26, w1
  47be0c:	add	x29, sp, #0x40
  47be10:	cbz	x0, 47be24 <_obstack_memory_used@@Base+0x120>
  47be14:	bl	403150 <fclose@plt>
  47be18:	cmn	w0, #0x1
  47be1c:	b.eq	47bf1c <_obstack_memory_used@@Base+0x218>  // b.none
  47be20:	str	xzr, [x19, #88]
  47be24:	ldr	x8, [x19, #32]
  47be28:	cbz	x8, 47be80 <_obstack_memory_used@@Base+0x17c>
  47be2c:	sub	x2, x29, #0x8
  47be30:	mov	x0, x19
  47be34:	mov	w1, wzr
  47be38:	mov	x3, x22
  47be3c:	bl	47c26c <_obstack_memory_used@@Base+0x568>
  47be40:	cbz	w0, 47c144 <_obstack_memory_used@@Base+0x440>
  47be44:	ldr	x8, [x19, #128]
  47be48:	ldr	x1, [x19, #32]
  47be4c:	ubfx	w2, w26, #4, #1
  47be50:	mov	x0, x19
  47be54:	ldr	x8, [x8]
  47be58:	blr	x8
  47be5c:	tbnz	w0, #31, 47bf44 <_obstack_memory_used@@Base+0x240>
  47be60:	ldr	w8, [x19, #40]
  47be64:	mov	w21, w0
  47be68:	cbz	w8, 47be78 <_obstack_memory_used@@Base+0x174>
  47be6c:	ldr	x0, [x19, #32]
  47be70:	bl	4031d0 <free@plt>
  47be74:	str	wzr, [x19, #40]
  47be78:	str	xzr, [x19, #32]
  47be7c:	b	47be88 <_obstack_memory_used@@Base+0x184>
  47be80:	ldr	w21, [x19, #24]
  47be84:	tbnz	w21, #31, 47bf60 <_obstack_memory_used@@Base+0x25c>
  47be88:	tbnz	w26, #0, 47bf2c <_obstack_memory_used@@Base+0x228>
  47be8c:	ldrb	w8, [x19]
  47be90:	tbnz	w8, #1, 47bf74 <_obstack_memory_used@@Base+0x270>
  47be94:	mov	x0, x19
  47be98:	mov	w1, w26
  47be9c:	mov	x2, x23
  47bea0:	bl	47c378 <_obstack_memory_used@@Base+0x674>
  47bea4:	cbz	x0, 47c0bc <_obstack_memory_used@@Base+0x3b8>
  47bea8:	ldrb	w8, [x19]
  47beac:	cmp	x0, x23
  47beb0:	mov	x20, x0
  47beb4:	cset	w9, ne  // ne = any
  47beb8:	stur	x24, [x29, #-24]
  47bebc:	str	x28, [sp, #32]
  47bec0:	tbnz	w8, #2, 47bf0c <_obstack_memory_used@@Base+0x208>
  47bec4:	ldrsw	x8, [x19, #112]
  47bec8:	ldr	x0, [x19, #120]
  47becc:	add	x8, x8, #0x1
  47bed0:	lsl	x1, x8, #3
  47bed4:	str	w8, [x19, #112]
  47bed8:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  47bedc:	mov	x8, x0
  47bee0:	cmp	x20, x23
  47bee4:	str	x0, [x19, #120]
  47bee8:	mov	x0, x20
  47beec:	b.ne	47befc <_obstack_memory_used@@Base+0x1f8>  // b.any
  47bef0:	mov	x0, x23
  47bef4:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  47bef8:	ldr	x8, [x19, #120]
  47befc:	ldrsw	x10, [x19, #112]
  47bf00:	mov	w9, wzr
  47bf04:	add	x8, x8, x10, lsl #3
  47bf08:	stur	x0, [x8, #-8]
  47bf0c:	mov	w24, wzr
  47bf10:	str	x20, [x19, #32]
  47bf14:	str	w9, [x19, #40]
  47bf18:	b	47bfe0 <_obstack_memory_used@@Base+0x2dc>
  47bf1c:	adrp	x8, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47bf20:	add	x8, x8, #0x32a
  47bf24:	stur	x8, [x29, #-8]
  47bf28:	b	47c144 <_obstack_memory_used@@Base+0x440>
  47bf2c:	stur	x24, [x29, #-24]
  47bf30:	str	x28, [sp, #32]
  47bf34:	cbz	x23, 47bfa4 <_obstack_memory_used@@Base+0x2a0>
  47bf38:	tbnz	w26, #2, 47bfb4 <_obstack_memory_used@@Base+0x2b0>
  47bf3c:	mov	w24, wzr
  47bf40:	b	47bfcc <_obstack_memory_used@@Base+0x2c8>
  47bf44:	bl	4035c0 <__errno_location@plt>
  47bf48:	ldr	w8, [x0]
  47bf4c:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47bf50:	add	x9, x9, #0x346
  47bf54:	str	w8, [x22]
  47bf58:	stur	x9, [x29, #-8]
  47bf5c:	b	47c144 <_obstack_memory_used@@Base+0x440>
  47bf60:	adrp	x8, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47bf64:	add	x8, x8, #0x35a
  47bf68:	str	wzr, [x22]
  47bf6c:	stur	x8, [x29, #-8]
  47bf70:	b	47c144 <_obstack_memory_used@@Base+0x440>
  47bf74:	ldr	x8, [x19, #128]
  47bf78:	ubfx	w2, w26, #5, #1
  47bf7c:	sub	x1, x29, #0x10
  47bf80:	mov	x0, x19
  47bf84:	ldr	x8, [x8, #40]
  47bf88:	blr	x8
  47bf8c:	tbnz	w0, #31, 47c168 <_obstack_memory_used@@Base+0x464>
  47bf90:	str	x28, [sp, #32]
  47bf94:	ldp	w8, w28, [x29, #-16]
  47bf98:	stur	x24, [x29, #-24]
  47bf9c:	mov	w24, wzr
  47bfa0:	b	47bfd4 <_obstack_memory_used@@Base+0x2d0>
  47bfa4:	mov	w24, wzr
  47bfa8:	mov	w28, #0x1                   	// #1
  47bfac:	mov	w8, #0xffffffff            	// #-1
  47bfb0:	b	47bfd4 <_obstack_memory_used@@Base+0x2d0>
  47bfb4:	ldr	x0, [x19, #16]
  47bfb8:	mov	x1, x23
  47bfbc:	mov	x2, xzr
  47bfc0:	bl	4799ac <feof@plt+0x7610c>
  47bfc4:	mov	x23, x0
  47bfc8:	mov	w24, #0x1                   	// #1
  47bfcc:	mov	w8, #0xffffffff            	// #-1
  47bfd0:	mov	w28, #0xffffffff            	// #-1
  47bfd4:	mov	x20, x23
  47bfd8:	str	w8, [x19, #24]
  47bfdc:	tbz	w28, #31, 47c008 <_obstack_memory_used@@Base+0x304>
  47bfe0:	ldr	x8, [x19, #128]
  47bfe4:	ubfx	w2, w26, #5, #1
  47bfe8:	ubfx	w3, w26, #8, #1
  47bfec:	mov	x0, x19
  47bff0:	ldr	x8, [x8, #8]
  47bff4:	mov	x1, x20
  47bff8:	blr	x8
  47bffc:	mov	w28, w0
  47c000:	tbnz	w0, #31, 47c050 <_obstack_memory_used@@Base+0x34c>
  47c004:	mov	x23, x20
  47c008:	cbz	w24, 47c014 <_obstack_memory_used@@Base+0x310>
  47c00c:	mov	x0, x23
  47c010:	bl	4031d0 <free@plt>
  47c014:	tbz	w26, #6, 47c030 <_obstack_memory_used@@Base+0x32c>
  47c018:	cbz	x27, 47c030 <_obstack_memory_used@@Base+0x32c>
  47c01c:	adrp	x8, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47c020:	mov	w24, wzr
  47c024:	add	x8, x8, #0x3af
  47c028:	str	wzr, [x22]
  47c02c:	b	47c0d4 <_obstack_memory_used@@Base+0x3d0>
  47c030:	ldr	w8, [x19, #44]
  47c034:	cmn	w8, #0x1
  47c038:	b.eq	47c07c <_obstack_memory_used@@Base+0x378>  // b.none
  47c03c:	adrp	x8, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47c040:	mov	w24, wzr
  47c044:	str	wzr, [x22]
  47c048:	add	x8, x8, #0x3de
  47c04c:	b	47c0d4 <_obstack_memory_used@@Base+0x3d0>
  47c050:	bl	4035c0 <__errno_location@plt>
  47c054:	ldr	w8, [x0]
  47c058:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47c05c:	add	x9, x9, #0x394
  47c060:	mov	w27, #0xffffffff            	// #-1
  47c064:	mov	x23, x20
  47c068:	str	w8, [x22]
  47c06c:	stur	x9, [x29, #-8]
  47c070:	cmp	w21, #0x1
  47c074:	b.ge	47c0e4 <_obstack_memory_used@@Base+0x3e0>  // b.tcont
  47c078:	b	47c0f8 <_obstack_memory_used@@Base+0x3f4>
  47c07c:	cbz	x27, 47c18c <_obstack_memory_used@@Base+0x488>
  47c080:	ldr	x8, [x19, #128]
  47c084:	ubfx	w2, w26, #7, #1
  47c088:	ubfx	w3, w26, #9, #1
  47c08c:	mov	x0, x19
  47c090:	ldr	x8, [x8, #8]
  47c094:	mov	x1, x27
  47c098:	blr	x8
  47c09c:	mov	w27, w0
  47c0a0:	tbz	w0, #31, 47c1bc <_obstack_memory_used@@Base+0x4b8>
  47c0a4:	bl	4035c0 <__errno_location@plt>
  47c0a8:	ldr	w8, [x0]
  47c0ac:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47c0b0:	add	x9, x9, #0x410
  47c0b4:	mov	w24, wzr
  47c0b8:	b	47c068 <_obstack_memory_used@@Base+0x364>
  47c0bc:	adrp	x8, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47c0c0:	mov	x23, xzr
  47c0c4:	mov	w24, wzr
  47c0c8:	str	wzr, [x22]
  47c0cc:	add	x8, x8, #0x374
  47c0d0:	mov	w28, #0xffffffff            	// #-1
  47c0d4:	stur	x8, [x29, #-8]
  47c0d8:	mov	w27, #0xffffffff            	// #-1
  47c0dc:	cmp	w21, #0x1
  47c0e0:	b.lt	47c0f8 <_obstack_memory_used@@Base+0x3f4>  // b.tstop
  47c0e4:	ldr	x8, [x19, #128]
  47c0e8:	mov	x0, x19
  47c0ec:	mov	w1, w21
  47c0f0:	ldr	x8, [x8, #24]
  47c0f4:	blr	x8
  47c0f8:	tbnz	w28, #31, 47c118 <_obstack_memory_used@@Base+0x414>
  47c0fc:	cmp	w28, #0x1
  47c100:	b.eq	47c118 <_obstack_memory_used@@Base+0x414>  // b.none
  47c104:	ldr	x8, [x19, #128]
  47c108:	mov	x0, x19
  47c10c:	mov	w1, w28
  47c110:	ldr	x8, [x8, #24]
  47c114:	blr	x8
  47c118:	tbnz	w27, #31, 47c138 <_obstack_memory_used@@Base+0x434>
  47c11c:	cmp	w27, #0x2
  47c120:	b.eq	47c138 <_obstack_memory_used@@Base+0x434>  // b.none
  47c124:	ldr	x8, [x19, #128]
  47c128:	mov	x0, x19
  47c12c:	mov	w1, w27
  47c130:	ldr	x8, [x8, #24]
  47c134:	blr	x8
  47c138:	cbz	w24, 47c144 <_obstack_memory_used@@Base+0x440>
  47c13c:	mov	x0, x23
  47c140:	bl	4031d0 <free@plt>
  47c144:	ldur	x0, [x29, #-8]
  47c148:	ldp	x20, x19, [sp, #144]
  47c14c:	ldp	x22, x21, [sp, #128]
  47c150:	ldp	x24, x23, [sp, #112]
  47c154:	ldp	x26, x25, [sp, #96]
  47c158:	ldp	x28, x27, [sp, #80]
  47c15c:	ldp	x29, x30, [sp, #64]
  47c160:	add	sp, sp, #0xa0
  47c164:	ret
  47c168:	bl	4035c0 <__errno_location@plt>
  47c16c:	ldr	w8, [x0]
  47c170:	adrp	x9, 4b3000 <_obstack_memory_used@@Base+0x372fc>
  47c174:	mov	w24, wzr
  47c178:	add	x9, x9, #0xf43
  47c17c:	mov	w28, #0xffffffff            	// #-1
  47c180:	str	w8, [x22]
  47c184:	stur	x9, [x29, #-8]
  47c188:	b	47c0d8 <_obstack_memory_used@@Base+0x3d4>
  47c18c:	tbnz	w26, #6, 47c198 <_obstack_memory_used@@Base+0x494>
  47c190:	mov	w27, #0x2                   	// #2
  47c194:	b	47c1bc <_obstack_memory_used@@Base+0x4b8>
  47c198:	ldr	x8, [x19, #128]
  47c19c:	ubfx	w2, w26, #7, #1
  47c1a0:	sub	x1, x29, #0x10
  47c1a4:	mov	x0, x19
  47c1a8:	ldr	x8, [x8, #40]
  47c1ac:	blr	x8
  47c1b0:	tbnz	w0, #31, 47c254 <_obstack_memory_used@@Base+0x550>
  47c1b4:	ldp	w8, w27, [x29, #-16]
  47c1b8:	str	w8, [x19, #44]
  47c1bc:	ldrb	w8, [x19]
  47c1c0:	tbnz	w8, #1, 47c1cc <_obstack_memory_used@@Base+0x4c8>
  47c1c4:	mov	w8, #0xffffffff            	// #-1
  47c1c8:	b	47c1d0 <_obstack_memory_used@@Base+0x4cc>
  47c1cc:	ldr	w8, [x19, #24]
  47c1d0:	ldr	x9, [x19, #128]
  47c1d4:	ldr	x3, [sp, #32]
  47c1d8:	ldur	x4, [x29, #-24]
  47c1dc:	sub	x10, x29, #0x8
  47c1e0:	ldr	x9, [x9, #16]
  47c1e4:	mov	x0, x19
  47c1e8:	mov	w1, w26
  47c1ec:	mov	x2, x25
  47c1f0:	mov	w5, w21
  47c1f4:	mov	w6, w28
  47c1f8:	mov	w7, w27
  47c1fc:	stp	x10, x22, [sp, #8]
  47c200:	str	w8, [sp]
  47c204:	blr	x9
  47c208:	tbnz	w0, #31, 47c244 <_obstack_memory_used@@Base+0x540>
  47c20c:	ldrsw	x8, [x19, #48]
  47c210:	mov	w20, w0
  47c214:	ldr	x0, [x19, #56]
  47c218:	add	x8, x8, #0x1
  47c21c:	lsl	x1, x8, #2
  47c220:	str	w8, [x19, #48]
  47c224:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  47c228:	ldrsw	x9, [x19, #48]
  47c22c:	mov	x8, x0
  47c230:	str	x8, [x19, #56]
  47c234:	mov	x0, xzr
  47c238:	add	x8, x8, x9, lsl #2
  47c23c:	stur	w20, [x8, #-4]
  47c240:	b	47c148 <_obstack_memory_used@@Base+0x444>
  47c244:	mov	w24, wzr
  47c248:	cmp	w21, #0x1
  47c24c:	b.ge	47c0e4 <_obstack_memory_used@@Base+0x3e0>  // b.tcont
  47c250:	b	47c0f8 <_obstack_memory_used@@Base+0x3f4>
  47c254:	bl	4035c0 <__errno_location@plt>
  47c258:	ldr	w8, [x0]
  47c25c:	adrp	x9, 4b3000 <_obstack_memory_used@@Base+0x372fc>
  47c260:	mov	w24, wzr
  47c264:	add	x9, x9, #0xf43
  47c268:	b	47c180 <_obstack_memory_used@@Base+0x47c>
  47c26c:	stp	x29, x30, [sp, #-80]!
  47c270:	stp	x26, x25, [sp, #16]
  47c274:	stp	x24, x23, [sp, #32]
  47c278:	stp	x22, x21, [sp, #48]
  47c27c:	stp	x20, x19, [sp, #64]
  47c280:	ldr	w9, [x0, #80]
  47c284:	ldrsw	x8, [x0, #48]
  47c288:	mov	x29, sp
  47c28c:	cmp	w9, w8
  47c290:	b.ne	47c29c <_obstack_memory_used@@Base+0x598>  // b.any
  47c294:	mov	w23, #0x1                   	// #1
  47c298:	b	47c35c <_obstack_memory_used@@Base+0x658>
  47c29c:	mov	x19, x0
  47c2a0:	ldr	x0, [x0, #64]
  47c2a4:	mov	w22, w1
  47c2a8:	lsl	x1, x8, #2
  47c2ac:	mov	x20, x3
  47c2b0:	mov	x21, x2
  47c2b4:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  47c2b8:	ldrb	w8, [x19]
  47c2bc:	str	x0, [x19, #64]
  47c2c0:	tbz	w8, #0, 47c2d8 <_obstack_memory_used@@Base+0x5d4>
  47c2c4:	ldrsw	x8, [x19, #48]
  47c2c8:	ldr	x0, [x19, #72]
  47c2cc:	lsl	x1, x8, #5
  47c2d0:	bl	47d11c <_obstack_memory_used@@Base+0x1418>
  47c2d4:	str	x0, [x19, #72]
  47c2d8:	ldr	w24, [x19, #80]
  47c2dc:	ldr	w8, [x19, #48]
  47c2e0:	cmp	w24, w8
  47c2e4:	b.ge	47c354 <_obstack_memory_used@@Base+0x650>  // b.tcont
  47c2e8:	sxtw	x24, w24
  47c2ec:	lsl	x25, x24, #2
  47c2f0:	lsl	x26, x24, #5
  47c2f4:	mov	w23, #0x1                   	// #1
  47c2f8:	ldr	x8, [x19, #128]
  47c2fc:	ldp	x9, x10, [x19, #56]
  47c300:	ldr	x11, [x19, #72]
  47c304:	mov	x0, x19
  47c308:	ldr	x8, [x8, #32]
  47c30c:	ldr	w1, [x9, x25]
  47c310:	add	x9, x11, x26
  47c314:	cmp	x11, #0x0
  47c318:	add	x2, x10, x25
  47c31c:	csel	x3, xzr, x9, eq  // eq = none
  47c320:	mov	w4, w22
  47c324:	mov	x5, x21
  47c328:	mov	x6, x20
  47c32c:	blr	x8
  47c330:	ldrsw	x8, [x19, #48]
  47c334:	cmp	w0, #0x0
  47c338:	add	x24, x24, #0x1
  47c33c:	csel	w23, wzr, w23, lt  // lt = tstop
  47c340:	add	x25, x25, #0x4
  47c344:	cmp	x24, x8
  47c348:	add	x26, x26, #0x20
  47c34c:	b.lt	47c2f8 <_obstack_memory_used@@Base+0x5f4>  // b.tstop
  47c350:	b	47c358 <_obstack_memory_used@@Base+0x654>
  47c354:	mov	w23, #0x1                   	// #1
  47c358:	str	w24, [x19, #80]
  47c35c:	mov	w0, w23
  47c360:	ldp	x20, x19, [sp, #64]
  47c364:	ldp	x22, x21, [sp, #48]
  47c368:	ldp	x24, x23, [sp, #32]
  47c36c:	ldp	x26, x25, [sp, #16]
  47c370:	ldp	x29, x30, [sp], #80
  47c374:	ret
  47c378:	stp	x29, x30, [sp, #-32]!
  47c37c:	str	x19, [sp, #16]
  47c380:	mov	x29, sp
  47c384:	cbz	x2, 47c3ac <_obstack_memory_used@@Base+0x6a8>
  47c388:	mov	x19, x2
  47c38c:	tbz	w1, #2, 47c438 <_obstack_memory_used@@Base+0x734>
  47c390:	ldr	x0, [x0, #16]
  47c394:	cbz	x0, 47c3fc <_obstack_memory_used@@Base+0x6f8>
  47c398:	mov	x1, x19
  47c39c:	ldr	x19, [sp, #16]
  47c3a0:	mov	x2, xzr
  47c3a4:	ldp	x29, x30, [sp], #32
  47c3a8:	b	4799ac <feof@plt+0x7610c>
  47c3ac:	ldr	x19, [x0, #16]
  47c3b0:	cbz	x19, 47c3f4 <_obstack_memory_used@@Base+0x6f0>
  47c3b4:	mov	x0, x19
  47c3b8:	bl	4030b0 <strlen@plt>
  47c3bc:	cmp	w0, #0x6
  47c3c0:	b.lt	47c3dc <_obstack_memory_used@@Base+0x6d8>  // b.tstop
  47c3c4:	add	x8, x19, w0, sxtw
  47c3c8:	adrp	x1, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47c3cc:	sub	x0, x8, #0x6
  47c3d0:	add	x1, x1, #0x2d3
  47c3d4:	bl	403640 <strcmp@plt>
  47c3d8:	cbz	w0, 47c40c <_obstack_memory_used@@Base+0x708>
  47c3dc:	adrp	x1, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47c3e0:	add	x1, x1, #0x2d3
  47c3e4:	mov	x0, x19
  47c3e8:	mov	x2, xzr
  47c3ec:	bl	4799ac <feof@plt+0x7610c>
  47c3f0:	b	47c414 <_obstack_memory_used@@Base+0x710>
  47c3f4:	mov	x0, xzr
  47c3f8:	b	47c400 <_obstack_memory_used@@Base+0x6fc>
  47c3fc:	mov	x0, x19
  47c400:	ldr	x19, [sp, #16]
  47c404:	ldp	x29, x30, [sp], #32
  47c408:	b	47b980 <feof@plt+0x780e0>
  47c40c:	mov	x0, x19
  47c410:	bl	47d1b8 <_obstack_memory_used@@Base+0x14b4>
  47c414:	mov	w1, wzr
  47c418:	mov	x19, x0
  47c41c:	bl	4032e0 <mkstemps@plt>
  47c420:	tbnz	w0, #31, 47c42c <_obstack_memory_used@@Base+0x728>
  47c424:	bl	403630 <close@plt>
  47c428:	b	47c438 <_obstack_memory_used@@Base+0x734>
  47c42c:	mov	x0, x19
  47c430:	bl	4031d0 <free@plt>
  47c434:	mov	x19, xzr
  47c438:	mov	x0, x19
  47c43c:	ldr	x19, [sp, #16]
  47c440:	ldp	x29, x30, [sp], #32
  47c444:	ret
  47c448:	mov	x7, x6
  47c44c:	mov	x6, x5
  47c450:	mov	x5, x4
  47c454:	mov	x4, xzr
  47c458:	b	47bdcc <_obstack_memory_used@@Base+0xc8>
  47c45c:	stp	x29, x30, [sp, #-48]!
  47c460:	stp	x22, x21, [sp, #16]
  47c464:	stp	x20, x19, [sp, #32]
  47c468:	ldr	w8, [x0, #48]
  47c46c:	mov	x29, sp
  47c470:	cbnz	w8, 47c48c <_obstack_memory_used@@Base+0x788>
  47c474:	ldr	w8, [x0, #24]
  47c478:	mov	x19, x0
  47c47c:	cmp	w8, #0x0
  47c480:	b.gt	47c48c <_obstack_memory_used@@Base+0x788>
  47c484:	ldr	x8, [x19, #32]
  47c488:	cbz	x8, 47c4b0 <_obstack_memory_used@@Base+0x7ac>
  47c48c:	bl	4035c0 <__errno_location@plt>
  47c490:	mov	x8, x0
  47c494:	mov	w9, #0x16                  	// #22
  47c498:	mov	x0, xzr
  47c49c:	str	w9, [x8]
  47c4a0:	ldp	x20, x19, [sp, #32]
  47c4a4:	ldp	x22, x21, [sp, #16]
  47c4a8:	ldp	x29, x30, [sp], #48
  47c4ac:	ret
  47c4b0:	mov	x0, x19
  47c4b4:	mov	x20, x2
  47c4b8:	mov	w21, w1
  47c4bc:	bl	47c378 <_obstack_memory_used@@Base+0x674>
  47c4c0:	cbz	x0, 47c4a0 <_obstack_memory_used@@Base+0x79c>
  47c4c4:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x32fc>
  47c4c8:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  47c4cc:	add	x8, x8, #0x6c6
  47c4d0:	add	x9, x9, #0x354
  47c4d4:	tst	w21, #0x20
  47c4d8:	csel	x1, x9, x8, eq  // eq = none
  47c4dc:	mov	x22, x0
  47c4e0:	bl	403620 <fopen@plt>
  47c4e4:	cbz	x0, 47c500 <_obstack_memory_used@@Base+0x7fc>
  47c4e8:	cmp	x22, x20
  47c4ec:	cset	w8, ne  // ne = any
  47c4f0:	str	x0, [x19, #88]
  47c4f4:	str	x22, [x19, #32]
  47c4f8:	str	w8, [x19, #40]
  47c4fc:	b	47c4a0 <_obstack_memory_used@@Base+0x79c>
  47c500:	mov	x0, x22
  47c504:	bl	4031d0 <free@plt>
  47c508:	mov	x0, xzr
  47c50c:	b	47c4a0 <_obstack_memory_used@@Base+0x79c>
  47c510:	stp	x29, x30, [sp, #-48]!
  47c514:	stp	x20, x19, [sp, #32]
  47c518:	ldr	w8, [x0, #48]
  47c51c:	str	x21, [sp, #16]
  47c520:	mov	x29, sp
  47c524:	cmp	w8, #0x0
  47c528:	b.gt	47c54c <_obstack_memory_used@@Base+0x848>
  47c52c:	ldrb	w8, [x0]
  47c530:	mov	x19, x0
  47c534:	tbz	w8, #1, 47c54c <_obstack_memory_used@@Base+0x848>
  47c538:	ldr	w8, [x19, #24]
  47c53c:	cmp	w8, #0x0
  47c540:	b.gt	47c54c <_obstack_memory_used@@Base+0x848>
  47c544:	ldr	x8, [x19, #32]
  47c548:	cbz	x8, 47c570 <_obstack_memory_used@@Base+0x86c>
  47c54c:	bl	4035c0 <__errno_location@plt>
  47c550:	mov	x8, x0
  47c554:	mov	x0, xzr
  47c558:	mov	w9, #0x16                  	// #22
  47c55c:	str	w9, [x8]
  47c560:	ldp	x20, x19, [sp, #32]
  47c564:	ldr	x21, [sp, #16]
  47c568:	ldp	x29, x30, [sp], #48
  47c56c:	ret
  47c570:	ldr	x8, [x19, #128]
  47c574:	cmp	w1, #0x0
  47c578:	cset	w20, ne  // ne = any
  47c57c:	add	x1, x29, #0x18
  47c580:	ldr	x8, [x8, #40]
  47c584:	mov	x0, x19
  47c588:	mov	w2, w20
  47c58c:	blr	x8
  47c590:	tbnz	w0, #31, 47c5bc <_obstack_memory_used@@Base+0x8b8>
  47c594:	ldr	x8, [x19, #128]
  47c598:	ldr	w1, [x29, #28]
  47c59c:	mov	x0, x19
  47c5a0:	mov	w2, w20
  47c5a4:	ldr	x8, [x8, #56]
  47c5a8:	blr	x8
  47c5ac:	cbz	x0, 47c5c4 <_obstack_memory_used@@Base+0x8c0>
  47c5b0:	ldr	w8, [x29, #24]
  47c5b4:	str	w8, [x19, #24]
  47c5b8:	b	47c560 <_obstack_memory_used@@Base+0x85c>
  47c5bc:	mov	x0, xzr
  47c5c0:	b	47c560 <_obstack_memory_used@@Base+0x85c>
  47c5c4:	bl	4035c0 <__errno_location@plt>
  47c5c8:	ldr	x8, [x19, #128]
  47c5cc:	ldr	w1, [x29, #24]
  47c5d0:	ldr	w21, [x0]
  47c5d4:	mov	x20, x0
  47c5d8:	ldr	x8, [x8, #24]
  47c5dc:	mov	x0, x19
  47c5e0:	blr	x8
  47c5e4:	ldr	x8, [x19, #128]
  47c5e8:	ldr	w1, [x29, #28]
  47c5ec:	mov	x0, x19
  47c5f0:	ldr	x8, [x8, #24]
  47c5f4:	blr	x8
  47c5f8:	mov	x0, xzr
  47c5fc:	str	w21, [x20]
  47c600:	b	47c560 <_obstack_memory_used@@Base+0x85c>
  47c604:	sub	sp, sp, #0x30
  47c608:	stp	x29, x30, [sp, #16]
  47c60c:	stp	x20, x19, [sp, #32]
  47c610:	ldr	x8, [x0, #32]
  47c614:	mov	x19, x0
  47c618:	mov	w20, w1
  47c61c:	add	x29, sp, #0x10
  47c620:	cbz	x8, 47c680 <_obstack_memory_used@@Base+0x97c>
  47c624:	add	x2, sp, #0x8
  47c628:	add	x3, sp, #0x4
  47c62c:	mov	x0, x19
  47c630:	mov	w1, wzr
  47c634:	bl	47c26c <_obstack_memory_used@@Base+0x568>
  47c638:	cbz	w0, 47c6b0 <_obstack_memory_used@@Base+0x9ac>
  47c63c:	ldr	x0, [x19, #32]
  47c640:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x32fc>
  47c644:	adrp	x9, 4c8000 <_obstack_memory_used@@Base+0x4c2fc>
  47c648:	add	x8, x8, #0x6c3
  47c64c:	add	x9, x9, #0x639
  47c650:	cmp	w20, #0x0
  47c654:	csel	x1, x9, x8, eq  // eq = none
  47c658:	bl	403620 <fopen@plt>
  47c65c:	ldr	w8, [x19, #40]
  47c660:	str	x0, [x19, #96]
  47c664:	cbz	w8, 47c678 <_obstack_memory_used@@Base+0x974>
  47c668:	ldr	x0, [x19, #32]
  47c66c:	bl	4031d0 <free@plt>
  47c670:	ldr	x0, [x19, #96]
  47c674:	str	wzr, [x19, #40]
  47c678:	str	xzr, [x19, #32]
  47c67c:	b	47c6cc <_obstack_memory_used@@Base+0x9c8>
  47c680:	ldr	w1, [x19, #24]
  47c684:	cmp	w1, #0x1
  47c688:	b.lt	47c6c8 <_obstack_memory_used@@Base+0x9c4>  // b.tstop
  47c68c:	ldr	x8, [x19, #128]
  47c690:	mov	x0, x19
  47c694:	mov	w2, w20
  47c698:	ldr	x8, [x8, #48]
  47c69c:	blr	x8
  47c6a0:	mov	w8, #0xffffffff            	// #-1
  47c6a4:	str	x0, [x19, #96]
  47c6a8:	str	w8, [x19, #24]
  47c6ac:	b	47c6cc <_obstack_memory_used@@Base+0x9c8>
  47c6b0:	ldr	w19, [sp, #4]
  47c6b4:	bl	4035c0 <__errno_location@plt>
  47c6b8:	mov	x8, x0
  47c6bc:	mov	x0, xzr
  47c6c0:	str	w19, [x8]
  47c6c4:	b	47c6cc <_obstack_memory_used@@Base+0x9c8>
  47c6c8:	mov	x0, xzr
  47c6cc:	ldp	x20, x19, [sp, #32]
  47c6d0:	ldp	x29, x30, [sp, #16]
  47c6d4:	add	sp, sp, #0x30
  47c6d8:	ret
  47c6dc:	stp	x29, x30, [sp, #-32]!
  47c6e0:	ldr	w8, [x0, #44]
  47c6e4:	str	x19, [sp, #16]
  47c6e8:	mov	x29, sp
  47c6ec:	cmp	w8, #0x1
  47c6f0:	b.lt	47c71c <_obstack_memory_used@@Base+0xa18>  // b.tstop
  47c6f4:	ldr	x9, [x0, #128]
  47c6f8:	mov	w2, w1
  47c6fc:	mov	w1, w8
  47c700:	mov	x19, x0
  47c704:	ldr	x9, [x9, #48]
  47c708:	blr	x9
  47c70c:	mov	w8, #0xffffffff            	// #-1
  47c710:	str	x0, [x19, #104]
  47c714:	str	w8, [x19, #44]
  47c718:	b	47c720 <_obstack_memory_used@@Base+0xa1c>
  47c71c:	mov	x0, xzr
  47c720:	ldr	x19, [sp, #16]
  47c724:	ldp	x29, x30, [sp], #32
  47c728:	ret
  47c72c:	sub	sp, sp, #0x40
  47c730:	stp	x29, x30, [sp, #16]
  47c734:	stp	x20, x19, [sp, #48]
  47c738:	ldr	x8, [x0, #64]
  47c73c:	str	x21, [sp, #32]
  47c740:	mov	x19, x2
  47c744:	mov	x20, x0
  47c748:	mov	w21, w1
  47c74c:	add	x29, sp, #0x10
  47c750:	cbnz	x8, 47c76c <_obstack_memory_used@@Base+0xa68>
  47c754:	add	x2, x29, #0x18
  47c758:	sub	x3, x29, #0x4
  47c75c:	mov	x0, x20
  47c760:	mov	w1, wzr
  47c764:	bl	47c26c <_obstack_memory_used@@Base+0x568>
  47c768:	cbz	w0, 47c7a4 <_obstack_memory_used@@Base+0xaa0>
  47c76c:	ldrsw	x8, [x20, #48]
  47c770:	cmp	w8, w21
  47c774:	b.ge	47c790 <_obstack_memory_used@@Base+0xa8c>  // b.tcont
  47c778:	add	x0, x19, x8, lsl #2
  47c77c:	sub	w8, w21, w8
  47c780:	sbfiz	x2, x8, #2, #32
  47c784:	mov	w1, wzr
  47c788:	bl	4031f0 <memset@plt>
  47c78c:	ldr	w21, [x20, #48]
  47c790:	ldr	x1, [x20, #64]
  47c794:	sbfiz	x2, x21, #2, #32
  47c798:	mov	x0, x19
  47c79c:	bl	402fc0 <memcpy@plt>
  47c7a0:	mov	w0, #0x1                   	// #1
  47c7a4:	ldp	x20, x19, [sp, #48]
  47c7a8:	ldr	x21, [sp, #32]
  47c7ac:	ldp	x29, x30, [sp, #16]
  47c7b0:	add	sp, sp, #0x40
  47c7b4:	ret
  47c7b8:	sub	sp, sp, #0x40
  47c7bc:	stp	x29, x30, [sp, #16]
  47c7c0:	stp	x20, x19, [sp, #48]
  47c7c4:	ldr	x8, [x0, #64]
  47c7c8:	str	x21, [sp, #32]
  47c7cc:	mov	x19, x2
  47c7d0:	mov	x21, x0
  47c7d4:	mov	w20, w1
  47c7d8:	add	x29, sp, #0x10
  47c7dc:	cbnz	x8, 47c7f8 <_obstack_memory_used@@Base+0xaf4>
  47c7e0:	add	x2, x29, #0x18
  47c7e4:	sub	x3, x29, #0x4
  47c7e8:	mov	x0, x21
  47c7ec:	mov	w1, wzr
  47c7f0:	bl	47c26c <_obstack_memory_used@@Base+0x568>
  47c7f4:	cbz	w0, 47c840 <_obstack_memory_used@@Base+0xb3c>
  47c7f8:	ldr	x1, [x21, #72]
  47c7fc:	cbz	x1, 47c83c <_obstack_memory_used@@Base+0xb38>
  47c800:	ldrsw	x8, [x21, #48]
  47c804:	cmp	w8, w20
  47c808:	b.ge	47c828 <_obstack_memory_used@@Base+0xb24>  // b.tcont
  47c80c:	add	x0, x19, x8, lsl #5
  47c810:	sub	w8, w20, w8
  47c814:	sbfiz	x2, x8, #5, #32
  47c818:	mov	w1, wzr
  47c81c:	bl	4031f0 <memset@plt>
  47c820:	ldr	w20, [x21, #48]
  47c824:	ldr	x1, [x21, #72]
  47c828:	sbfiz	x2, x20, #5, #32
  47c82c:	mov	x0, x19
  47c830:	bl	402fc0 <memcpy@plt>
  47c834:	mov	w0, #0x1                   	// #1
  47c838:	b	47c840 <_obstack_memory_used@@Base+0xb3c>
  47c83c:	mov	w0, wzr
  47c840:	ldp	x20, x19, [sp, #48]
  47c844:	ldr	x21, [sp, #32]
  47c848:	ldp	x29, x30, [sp, #16]
  47c84c:	add	sp, sp, #0x40
  47c850:	ret
  47c854:	sub	sp, sp, #0x40
  47c858:	stp	x29, x30, [sp, #16]
  47c85c:	stp	x20, x19, [sp, #48]
  47c860:	ldr	w1, [x0, #24]
  47c864:	mov	x19, x0
  47c868:	str	x21, [sp, #32]
  47c86c:	add	x29, sp, #0x10
  47c870:	cmp	w1, #0x1
  47c874:	b.lt	47c888 <_obstack_memory_used@@Base+0xb84>  // b.tstop
  47c878:	ldr	x8, [x19, #128]
  47c87c:	mov	x0, x19
  47c880:	ldr	x8, [x8, #24]
  47c884:	blr	x8
  47c888:	ldr	w1, [x19, #44]
  47c88c:	cmp	w1, #0x1
  47c890:	b.lt	47c8a4 <_obstack_memory_used@@Base+0xba0>  // b.tstop
  47c894:	ldr	x8, [x19, #128]
  47c898:	mov	x0, x19
  47c89c:	ldr	x8, [x8, #24]
  47c8a0:	blr	x8
  47c8a4:	ldr	x0, [x19, #96]
  47c8a8:	cbz	x0, 47c8b0 <_obstack_memory_used@@Base+0xbac>
  47c8ac:	bl	403150 <fclose@plt>
  47c8b0:	ldr	x0, [x19, #104]
  47c8b4:	cbz	x0, 47c8bc <_obstack_memory_used@@Base+0xbb8>
  47c8b8:	bl	403150 <fclose@plt>
  47c8bc:	ldr	x8, [x19, #64]
  47c8c0:	cbz	x8, 47c960 <_obstack_memory_used@@Base+0xc5c>
  47c8c4:	ldr	w8, [x19, #40]
  47c8c8:	cbz	w8, 47c8d4 <_obstack_memory_used@@Base+0xbd0>
  47c8cc:	ldr	x0, [x19, #32]
  47c8d0:	bl	4031d0 <free@plt>
  47c8d4:	ldr	x0, [x19, #56]
  47c8d8:	bl	4031d0 <free@plt>
  47c8dc:	ldr	x0, [x19, #64]
  47c8e0:	bl	4031d0 <free@plt>
  47c8e4:	ldr	x0, [x19, #72]
  47c8e8:	bl	4031d0 <free@plt>
  47c8ec:	ldr	w8, [x19, #112]
  47c8f0:	cmp	w8, #0x1
  47c8f4:	b.lt	47c930 <_obstack_memory_used@@Base+0xc2c>  // b.tstop
  47c8f8:	ldr	x0, [x19, #120]
  47c8fc:	mov	x20, xzr
  47c900:	lsl	x21, x20, #3
  47c904:	ldr	x0, [x0, x21]
  47c908:	bl	403370 <remove@plt>
  47c90c:	ldr	x8, [x19, #120]
  47c910:	ldr	x0, [x8, x21]
  47c914:	bl	4031d0 <free@plt>
  47c918:	ldrsw	x8, [x19, #112]
  47c91c:	ldr	x0, [x19, #120]
  47c920:	add	x20, x20, #0x1
  47c924:	cmp	x20, x8
  47c928:	b.lt	47c900 <_obstack_memory_used@@Base+0xbfc>  // b.tstop
  47c92c:	bl	4031d0 <free@plt>
  47c930:	ldr	x8, [x19, #128]
  47c934:	ldr	x8, [x8, #64]
  47c938:	cbz	x8, 47c944 <_obstack_memory_used@@Base+0xc40>
  47c93c:	mov	x0, x19
  47c940:	blr	x8
  47c944:	mov	x0, x19
  47c948:	bl	4031d0 <free@plt>
  47c94c:	ldp	x20, x19, [sp, #48]
  47c950:	ldr	x21, [sp, #32]
  47c954:	ldp	x29, x30, [sp, #16]
  47c958:	add	sp, sp, #0x40
  47c95c:	ret
  47c960:	ldr	w8, [x19]
  47c964:	add	x2, x29, #0x18
  47c968:	sub	x3, x29, #0x4
  47c96c:	mov	w1, #0x1                   	// #1
  47c970:	and	w8, w8, #0xfffffffe
  47c974:	mov	x0, x19
  47c978:	str	w8, [x19]
  47c97c:	bl	47c26c <_obstack_memory_used@@Base+0x568>
  47c980:	ldr	w8, [x19, #40]
  47c984:	cbnz	w8, 47c8cc <_obstack_memory_used@@Base+0xbc8>
  47c988:	b	47c8d4 <_obstack_memory_used@@Base+0xbd0>
  47c98c:	mov	x0, x1
  47c990:	mov	w1, wzr
  47c994:	b	403130 <open@plt>
  47c998:	cmp	w3, #0x0
  47c99c:	mov	w8, #0x441                 	// #1089
  47c9a0:	mov	w9, #0x241                 	// #577
  47c9a4:	csel	w8, w9, w8, eq  // eq = none
  47c9a8:	mov	w2, #0x1b6                 	// #438
  47c9ac:	mov	x0, x1
  47c9b0:	mov	w1, w8
  47c9b4:	b	403130 <open@plt>
  47c9b8:	sub	sp, sp, #0xb0
  47c9bc:	stp	x29, x30, [sp, #80]
  47c9c0:	stp	x28, x27, [sp, #96]
  47c9c4:	add	x29, sp, #0x50
  47c9c8:	mov	w27, #0x1                   	// #1
  47c9cc:	stp	x26, x25, [sp, #112]
  47c9d0:	stp	x24, x23, [sp, #128]
  47c9d4:	stp	x22, x21, [sp, #144]
  47c9d8:	stp	x20, x19, [sp, #160]
  47c9dc:	str	x2, [sp, #24]
  47c9e0:	stur	wzr, [x29, #-4]
  47c9e4:	stur	w27, [x29, #-4]
  47c9e8:	ldur	w8, [x29, #-4]
  47c9ec:	ldp	x19, x20, [x29, #104]
  47c9f0:	mov	w21, w7
  47c9f4:	mov	w22, w6
  47c9f8:	mov	w26, w5
  47c9fc:	mov	x24, x4
  47ca00:	mov	x23, x3
  47ca04:	mov	w25, w1
  47ca08:	str	x0, [sp, #16]
  47ca0c:	cbz	w8, 47ca24 <_obstack_memory_used@@Base+0xd20>
  47ca10:	sub	x0, x29, #0xc
  47ca14:	mov	w1, #0x80000               	// #524288
  47ca18:	bl	403170 <pipe2@plt>
  47ca1c:	cbz	w0, 47ca24 <_obstack_memory_used@@Base+0xd20>
  47ca20:	stur	wzr, [x29, #-4]
  47ca24:	stur	w27, [x29, #-16]
  47ca28:	adrp	x28, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47ca2c:	ldr	x8, [x28, #1072]
  47ca30:	stur	x8, [x29, #-32]
  47ca34:	stur	wzr, [x29, #-20]
  47ca38:	ldur	w8, [x29, #-20]
  47ca3c:	cmp	w8, #0x3
  47ca40:	b.gt	47cac8 <_obstack_memory_used@@Base+0xdc4>
  47ca44:	ldr	w8, [x29, #96]
  47ca48:	str	w8, [sp, #12]
  47ca4c:	bl	4036c0 <vfork@plt>
  47ca50:	mov	w27, w0
  47ca54:	tbz	w0, #31, 47ca84 <_obstack_memory_used@@Base+0xd80>
  47ca58:	ldur	w0, [x29, #-16]
  47ca5c:	bl	403160 <sleep@plt>
  47ca60:	ldur	w8, [x29, #-16]
  47ca64:	lsl	w8, w8, #1
  47ca68:	stur	w8, [x29, #-16]
  47ca6c:	ldur	w8, [x29, #-20]
  47ca70:	add	w8, w8, #0x1
  47ca74:	stur	w8, [x29, #-20]
  47ca78:	ldur	w8, [x29, #-20]
  47ca7c:	cmp	w8, #0x4
  47ca80:	b.lt	47ca4c <_obstack_memory_used@@Base+0xd48>  // b.tstop
  47ca84:	cmn	w27, #0x1
  47ca88:	b.eq	47cac8 <_obstack_memory_used@@Base+0xdc4>  // b.none
  47ca8c:	cbz	w27, 47cbd8 <_obstack_memory_used@@Base+0xed4>
  47ca90:	ldur	x8, [x29, #-32]
  47ca94:	str	xzr, [sp, #32]
  47ca98:	str	x8, [x28, #1072]
  47ca9c:	ldur	w8, [x29, #-4]
  47caa0:	cbz	w8, 47cb00 <_obstack_memory_used@@Base+0xdfc>
  47caa4:	ldur	w0, [x29, #-8]
  47caa8:	bl	403630 <close@plt>
  47caac:	ldur	w0, [x29, #-12]
  47cab0:	add	x1, sp, #0x20
  47cab4:	mov	w2, #0x10                  	// #16
  47cab8:	bl	4032c0 <read@plt>
  47cabc:	tbnz	x0, #63, 47cb10 <_obstack_memory_used@@Base+0xe0c>
  47cac0:	ldr	x23, [sp, #32]
  47cac4:	b	47cb18 <_obstack_memory_used@@Base+0xe14>
  47cac8:	ldur	w8, [x29, #-4]
  47cacc:	cbz	w8, 47cae0 <_obstack_memory_used@@Base+0xddc>
  47cad0:	ldur	w0, [x29, #-12]
  47cad4:	bl	403630 <close@plt>
  47cad8:	ldur	w0, [x29, #-8]
  47cadc:	bl	403630 <close@plt>
  47cae0:	bl	4035c0 <__errno_location@plt>
  47cae4:	ldr	w8, [x0]
  47cae8:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47caec:	add	x9, x9, #0x468
  47caf0:	mov	w27, #0xffffffff            	// #-1
  47caf4:	str	w8, [x20]
  47caf8:	str	x9, [x19]
  47cafc:	b	47cb98 <_obstack_memory_used@@Base+0xe94>
  47cb00:	mov	x23, xzr
  47cb04:	mov	x24, xzr
  47cb08:	cbnz	w26, 47cb28 <_obstack_memory_used@@Base+0xe24>
  47cb0c:	b	47cb38 <_obstack_memory_used@@Base+0xe34>
  47cb10:	mov	x23, xzr
  47cb14:	str	xzr, [sp, #32]
  47cb18:	ldur	w0, [x29, #-12]
  47cb1c:	bl	403630 <close@plt>
  47cb20:	mov	x24, x23
  47cb24:	cbz	w26, 47cb38 <_obstack_memory_used@@Base+0xe34>
  47cb28:	cbnz	x24, 47cb38 <_obstack_memory_used@@Base+0xe34>
  47cb2c:	mov	w0, w26
  47cb30:	bl	403630 <close@plt>
  47cb34:	tbnz	w0, #31, 47cb70 <_obstack_memory_used@@Base+0xe6c>
  47cb38:	cmp	w22, #0x1
  47cb3c:	b.eq	47cb50 <_obstack_memory_used@@Base+0xe4c>  // b.none
  47cb40:	cbnz	x24, 47cb50 <_obstack_memory_used@@Base+0xe4c>
  47cb44:	mov	w0, w22
  47cb48:	bl	403630 <close@plt>
  47cb4c:	tbnz	w0, #31, 47cb70 <_obstack_memory_used@@Base+0xe6c>
  47cb50:	cmp	w21, #0x2
  47cb54:	b.eq	47cb68 <_obstack_memory_used@@Base+0xe64>  // b.none
  47cb58:	cbnz	x24, 47cb68 <_obstack_memory_used@@Base+0xe64>
  47cb5c:	mov	w0, w21
  47cb60:	bl	403630 <close@plt>
  47cb64:	tbnz	w0, #31, 47cbbc <_obstack_memory_used@@Base+0xeb8>
  47cb68:	cbnz	x24, 47cb88 <_obstack_memory_used@@Base+0xe84>
  47cb6c:	b	47cb98 <_obstack_memory_used@@Base+0xe94>
  47cb70:	adrp	x23, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  47cb74:	add	x23, x23, #0x2c5
  47cb78:	str	x23, [sp, #32]
  47cb7c:	bl	4035c0 <__errno_location@plt>
  47cb80:	ldr	w8, [x0]
  47cb84:	str	w8, [sp, #40]
  47cb88:	ldr	w8, [sp, #40]
  47cb8c:	str	w8, [x20]
  47cb90:	str	x23, [x19]
  47cb94:	mov	w27, #0xffffffff            	// #-1
  47cb98:	mov	w0, w27
  47cb9c:	ldp	x20, x19, [sp, #160]
  47cba0:	ldp	x22, x21, [sp, #144]
  47cba4:	ldp	x24, x23, [sp, #128]
  47cba8:	ldp	x26, x25, [sp, #112]
  47cbac:	ldp	x28, x27, [sp, #96]
  47cbb0:	ldp	x29, x30, [sp, #80]
  47cbb4:	add	sp, sp, #0xb0
  47cbb8:	ret
  47cbbc:	adrp	x23, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  47cbc0:	add	x23, x23, #0x2c5
  47cbc4:	str	x23, [sp, #32]
  47cbc8:	bl	4035c0 <__errno_location@plt>
  47cbcc:	ldr	w8, [x0]
  47cbd0:	str	w8, [sp, #40]
  47cbd4:	b	47cb8c <_obstack_memory_used@@Base+0xe88>
  47cbd8:	str	xzr, [sp, #32]
  47cbdc:	ldur	w8, [x29, #-4]
  47cbe0:	cbz	w8, 47cbec <_obstack_memory_used@@Base+0xee8>
  47cbe4:	ldur	w0, [x29, #-12]
  47cbe8:	bl	403630 <close@plt>
  47cbec:	cbz	w26, 47cc0c <_obstack_memory_used@@Base+0xf08>
  47cbf0:	mov	w0, w26
  47cbf4:	mov	w1, wzr
  47cbf8:	bl	4030a0 <dup2@plt>
  47cbfc:	tbnz	w0, #31, 47cc94 <_obstack_memory_used@@Base+0xf90>
  47cc00:	mov	w0, w26
  47cc04:	bl	403630 <close@plt>
  47cc08:	tbnz	w0, #31, 47ccac <_obstack_memory_used@@Base+0xfa8>
  47cc0c:	cmp	w22, #0x1
  47cc10:	b.eq	47cc30 <_obstack_memory_used@@Base+0xf2c>  // b.none
  47cc14:	mov	w1, #0x1                   	// #1
  47cc18:	mov	w0, w22
  47cc1c:	bl	4030a0 <dup2@plt>
  47cc20:	tbnz	w0, #31, 47cc94 <_obstack_memory_used@@Base+0xf90>
  47cc24:	mov	w0, w22
  47cc28:	bl	403630 <close@plt>
  47cc2c:	tbnz	w0, #31, 47ccac <_obstack_memory_used@@Base+0xfa8>
  47cc30:	cmp	w21, #0x2
  47cc34:	b.ne	47cc84 <_obstack_memory_used@@Base+0xf80>  // b.any
  47cc38:	ldr	w8, [sp, #12]
  47cc3c:	tbnz	w8, #31, 47cc4c <_obstack_memory_used@@Base+0xf48>
  47cc40:	ldr	w0, [sp, #12]
  47cc44:	bl	403630 <close@plt>
  47cc48:	tbnz	w0, #31, 47ccac <_obstack_memory_used@@Base+0xfa8>
  47cc4c:	tbz	w25, #3, 47cc60 <_obstack_memory_used@@Base+0xf5c>
  47cc50:	mov	w0, #0x1                   	// #1
  47cc54:	mov	w1, #0x2                   	// #2
  47cc58:	bl	4030a0 <dup2@plt>
  47cc5c:	tbnz	w0, #31, 47cc94 <_obstack_memory_used@@Base+0xf90>
  47cc60:	cbz	x24, 47cc68 <_obstack_memory_used@@Base+0xf64>
  47cc64:	str	x24, [x28, #1072]
  47cc68:	tbnz	w25, #1, 47cde8 <_obstack_memory_used@@Base+0x10e4>
  47cc6c:	ldr	x0, [sp, #24]
  47cc70:	mov	x1, x23
  47cc74:	bl	403080 <execv@plt>
  47cc78:	adrp	x21, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47cc7c:	add	x21, x21, #0x47a
  47cc80:	b	47ccb4 <_obstack_memory_used@@Base+0xfb0>
  47cc84:	mov	w1, #0x2                   	// #2
  47cc88:	mov	w0, w21
  47cc8c:	bl	4030a0 <dup2@plt>
  47cc90:	tbz	w0, #31, 47cca0 <_obstack_memory_used@@Base+0xf9c>
  47cc94:	adrp	x21, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47cc98:	add	x21, x21, #0x46e
  47cc9c:	b	47ccb4 <_obstack_memory_used@@Base+0xfb0>
  47cca0:	mov	w0, w21
  47cca4:	bl	403630 <close@plt>
  47cca8:	tbz	w0, #31, 47cc38 <_obstack_memory_used@@Base+0xf34>
  47ccac:	adrp	x21, 4d7000 <_obstack_memory_used@@Base+0x5b2fc>
  47ccb0:	add	x21, x21, #0x2c5
  47ccb4:	str	x21, [sp, #32]
  47ccb8:	bl	4035c0 <__errno_location@plt>
  47ccbc:	ldr	w22, [x0]
  47ccc0:	str	w22, [sp, #40]
  47ccc4:	ldur	w8, [x29, #-4]
  47ccc8:	cbz	w8, 47ccec <_obstack_memory_used@@Base+0xfe8>
  47cccc:	ldur	w0, [x29, #-8]
  47ccd0:	add	x1, sp, #0x20
  47ccd4:	mov	w2, #0x10                  	// #16
  47ccd8:	bl	403670 <write@plt>
  47ccdc:	cmp	x0, #0x10
  47cce0:	b.ne	47ccec <_obstack_memory_used@@Base+0xfe8>  // b.any
  47cce4:	mov	w0, #0xffffffff            	// #-1
  47cce8:	bl	403270 <_exit@plt>
  47ccec:	ldr	x8, [sp, #16]
  47ccf0:	ldr	x20, [x8, #8]
  47ccf4:	mov	x0, x20
  47ccf8:	bl	4030b0 <strlen@plt>
  47ccfc:	mov	x2, x0
  47cd00:	mov	w0, #0x2                   	// #2
  47cd04:	mov	x1, x20
  47cd08:	bl	403670 <write@plt>
  47cd0c:	adrp	x1, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47cd10:	mov	x20, x0
  47cd14:	add	x1, x1, #0x480
  47cd18:	mov	w0, #0x2                   	// #2
  47cd1c:	mov	w2, #0x18                  	// #24
  47cd20:	bl	403670 <write@plt>
  47cd24:	orr	x19, x0, x20
  47cd28:	ldr	x20, [sp, #24]
  47cd2c:	mov	x0, x20
  47cd30:	bl	4030b0 <strlen@plt>
  47cd34:	mov	x2, x0
  47cd38:	mov	w0, #0x2                   	// #2
  47cd3c:	mov	x1, x20
  47cd40:	bl	403670 <write@plt>
  47cd44:	adrp	x1, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47cd48:	orr	x19, x19, x0
  47cd4c:	add	x1, x1, #0x499
  47cd50:	mov	w0, #0x2                   	// #2
  47cd54:	mov	w2, #0x3                   	// #3
  47cd58:	bl	403670 <write@plt>
  47cd5c:	orr	x19, x19, x0
  47cd60:	mov	x0, x21
  47cd64:	bl	4030b0 <strlen@plt>
  47cd68:	mov	x2, x0
  47cd6c:	mov	w0, #0x2                   	// #2
  47cd70:	mov	x1, x21
  47cd74:	bl	403670 <write@plt>
  47cd78:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  47cd7c:	orr	x19, x19, x0
  47cd80:	add	x1, x1, #0x3f7
  47cd84:	mov	w0, #0x2                   	// #2
  47cd88:	mov	w2, #0x2                   	// #2
  47cd8c:	bl	403670 <write@plt>
  47cd90:	orr	x20, x19, x0
  47cd94:	mov	w0, w22
  47cd98:	bl	47d1ec <_obstack_memory_used@@Base+0x14e8>
  47cd9c:	mov	x19, x0
  47cda0:	mov	w0, w22
  47cda4:	bl	47d1ec <_obstack_memory_used@@Base+0x14e8>
  47cda8:	bl	4030b0 <strlen@plt>
  47cdac:	mov	x2, x0
  47cdb0:	mov	w0, #0x2                   	// #2
  47cdb4:	mov	x1, x19
  47cdb8:	bl	403670 <write@plt>
  47cdbc:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x22fc>
  47cdc0:	orr	x19, x20, x0
  47cdc4:	add	x1, x1, #0x934
  47cdc8:	mov	w0, #0x2                   	// #2
  47cdcc:	mov	w2, #0x1                   	// #1
  47cdd0:	bl	403670 <write@plt>
  47cdd4:	orr	x8, x19, x0
  47cdd8:	cmp	x8, #0x0
  47cddc:	mov	w8, #0xfffffffe            	// #-2
  47cde0:	cinc	w0, w8, ge  // ge = tcont
  47cde4:	bl	403270 <_exit@plt>
  47cde8:	ldr	x0, [sp, #24]
  47cdec:	mov	x1, x23
  47cdf0:	bl	403020 <execvp@plt>
  47cdf4:	adrp	x21, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47cdf8:	add	x21, x21, #0x473
  47cdfc:	b	47ccb4 <_obstack_memory_used@@Base+0xfb0>
  47ce00:	mov	w0, w1
  47ce04:	b	403630 <close@plt>
  47ce08:	sub	sp, sp, #0xd0
  47ce0c:	str	x23, [sp, #160]
  47ce10:	stp	x22, x21, [sp, #176]
  47ce14:	stp	x20, x19, [sp, #192]
  47ce18:	mov	x19, x6
  47ce1c:	mov	x20, x5
  47ce20:	mov	x21, x3
  47ce24:	mov	x22, x2
  47ce28:	mov	w23, w1
  47ce2c:	stp	x29, x30, [sp, #144]
  47ce30:	add	x29, sp, #0x90
  47ce34:	cbz	w4, 47ce44 <_obstack_memory_used@@Base+0x1140>
  47ce38:	mov	w1, #0xf                   	// #15
  47ce3c:	mov	w0, w23
  47ce40:	bl	403570 <kill@plt>
  47ce44:	cbz	x21, 47ce78 <_obstack_memory_used@@Base+0x1174>
  47ce48:	mov	x3, sp
  47ce4c:	mov	w0, w23
  47ce50:	mov	x1, x22
  47ce54:	mov	w2, wzr
  47ce58:	bl	403180 <wait4@plt>
  47ce5c:	ldr	q0, [sp]
  47ce60:	str	q0, [x21]
  47ce64:	ldr	q0, [sp, #16]
  47ce68:	str	q0, [x21, #16]
  47ce6c:	tbnz	w0, #31, 47ce8c <_obstack_memory_used@@Base+0x1188>
  47ce70:	mov	w0, wzr
  47ce74:	b	47cea8 <_obstack_memory_used@@Base+0x11a4>
  47ce78:	mov	w0, w23
  47ce7c:	mov	x1, x22
  47ce80:	mov	w2, wzr
  47ce84:	bl	403100 <waitpid@plt>
  47ce88:	tbz	w0, #31, 47ce70 <_obstack_memory_used@@Base+0x116c>
  47ce8c:	bl	4035c0 <__errno_location@plt>
  47ce90:	ldr	w8, [x0]
  47ce94:	adrp	x9, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47ce98:	add	x9, x9, #0x49d
  47ce9c:	mov	w0, #0xffffffff            	// #-1
  47cea0:	str	w8, [x19]
  47cea4:	str	x9, [x20]
  47cea8:	ldp	x20, x19, [sp, #192]
  47ceac:	ldp	x22, x21, [sp, #176]
  47ceb0:	ldr	x23, [sp, #160]
  47ceb4:	ldp	x29, x30, [sp, #144]
  47ceb8:	add	sp, sp, #0xd0
  47cebc:	ret
  47cec0:	mov	x0, x1
  47cec4:	b	403090 <pipe@plt>
  47cec8:	adrp	x8, 4c8000 <_obstack_memory_used@@Base+0x4c2fc>
  47cecc:	add	x8, x8, #0x639
  47ced0:	mov	w0, w1
  47ced4:	mov	x1, x8
  47ced8:	b	4037d0 <fdopen@plt>
  47cedc:	stp	x29, x30, [sp, #-32]!
  47cee0:	str	x19, [sp, #16]
  47cee4:	mov	w19, w1
  47cee8:	mov	w1, #0x2                   	// #2
  47ceec:	mov	w2, #0x1                   	// #1
  47cef0:	mov	w0, w19
  47cef4:	mov	x29, sp
  47cef8:	bl	403820 <fcntl@plt>
  47cefc:	tbnz	w0, #31, 47cf18 <_obstack_memory_used@@Base+0x1214>
  47cf00:	mov	w0, w19
  47cf04:	ldr	x19, [sp, #16]
  47cf08:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x4d2fc>
  47cf0c:	add	x1, x1, #0x354
  47cf10:	ldp	x29, x30, [sp], #32
  47cf14:	b	4037d0 <fdopen@plt>
  47cf18:	ldr	x19, [sp, #16]
  47cf1c:	mov	x0, xzr
  47cf20:	ldp	x29, x30, [sp], #32
  47cf24:	ret
  47cf28:	ret
  47cf2c:	adrp	x3, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47cf30:	add	x3, x3, #0x420
  47cf34:	b	47bd58 <_obstack_memory_used@@Base+0x54>
  47cf38:	sub	sp, sp, #0x30
  47cf3c:	str	x19, [sp, #32]
  47cf40:	mov	x19, x0
  47cf44:	mov	x1, sp
  47cf48:	mov	w0, #0x3                   	// #3
  47cf4c:	stp	x29, x30, [sp, #16]
  47cf50:	add	x29, sp, #0x10
  47cf54:	bl	403800 <getrlimit@plt>
  47cf58:	cbz	w0, 47cf6c <_obstack_memory_used@@Base+0x1268>
  47cf5c:	ldr	x19, [sp, #32]
  47cf60:	ldp	x29, x30, [sp, #16]
  47cf64:	add	sp, sp, #0x30
  47cf68:	ret
  47cf6c:	ldr	x8, [sp]
  47cf70:	cmn	x8, #0x1
  47cf74:	b.eq	47cf5c <_obstack_memory_used@@Base+0x1258>  // b.none
  47cf78:	cmp	x8, x19
  47cf7c:	b.cs	47cf5c <_obstack_memory_used@@Base+0x1258>  // b.hs, b.nlast
  47cf80:	ldr	x9, [sp, #8]
  47cf84:	cmn	x9, #0x1
  47cf88:	b.eq	47cf94 <_obstack_memory_used@@Base+0x1290>  // b.none
  47cf8c:	cmp	x8, x9
  47cf90:	b.cs	47cf5c <_obstack_memory_used@@Base+0x1258>  // b.hs, b.nlast
  47cf94:	cmp	x9, x19
  47cf98:	mov	x8, #0xffffffffffffffff    	// #-1
  47cf9c:	ccmp	x9, x8, #0x4, cc  // cc = lo, ul, last
  47cfa0:	csel	x8, x9, x19, ne  // ne = any
  47cfa4:	mov	x1, sp
  47cfa8:	mov	w0, #0x3                   	// #3
  47cfac:	str	x8, [sp]
  47cfb0:	bl	403680 <setrlimit@plt>
  47cfb4:	b	47cf5c <_obstack_memory_used@@Base+0x1258>
  47cfb8:	stp	x29, x30, [sp, #-32]!
  47cfbc:	adrp	x8, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  47cfc0:	ldr	x8, [x8, #1128]
  47cfc4:	str	x19, [sp, #16]
  47cfc8:	mov	w19, w0
  47cfcc:	mov	x29, sp
  47cfd0:	cbz	x8, 47cfd8 <_obstack_memory_used@@Base+0x12d4>
  47cfd4:	blr	x8
  47cfd8:	mov	w0, w19
  47cfdc:	bl	403730 <exit@plt>
  47cfe0:	stp	x29, x30, [sp, #-32]!
  47cfe4:	str	x19, [sp, #16]
  47cfe8:	adrp	x19, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  47cfec:	ldr	x8, [x19, #1056]
  47cff0:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47cff4:	mov	x29, sp
  47cff8:	str	x0, [x9, #1064]
  47cffc:	cbnz	x8, 47d00c <_obstack_memory_used@@Base+0x1308>
  47d000:	mov	x0, xzr
  47d004:	bl	403560 <sbrk@plt>
  47d008:	str	x0, [x19, #1056]
  47d00c:	ldr	x19, [sp, #16]
  47d010:	ldp	x29, x30, [sp], #32
  47d014:	ret
  47d018:	stp	x29, x30, [sp, #-48]!
  47d01c:	stp	x20, x19, [sp, #32]
  47d020:	adrp	x20, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  47d024:	str	x21, [sp, #16]
  47d028:	ldr	x21, [x20, #1056]
  47d02c:	mov	x19, x0
  47d030:	mov	x0, xzr
  47d034:	mov	x29, sp
  47d038:	bl	403560 <sbrk@plt>
  47d03c:	ldr	x8, [x20, #1056]
  47d040:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47d044:	ldr	x2, [x10, #1064]
  47d048:	adrp	x9, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47d04c:	add	x9, x9, #0x430
  47d050:	cmp	x21, #0x0
  47d054:	csel	x8, x9, x8, eq  // eq = none
  47d058:	sub	x5, x0, x8
  47d05c:	ldrb	w8, [x2]
  47d060:	adrp	x10, 4f2000 <_obstack_memory_used@@Base+0x762fc>
  47d064:	ldr	x0, [x10, #1096]
  47d068:	adrp	x9, 4ca000 <_obstack_memory_used@@Base+0x4e2fc>
  47d06c:	adrp	x10, 48f000 <_obstack_memory_used@@Base+0x132fc>
  47d070:	add	x9, x9, #0x3f7
  47d074:	add	x10, x10, #0x23b
  47d078:	cmp	w8, #0x0
  47d07c:	adrp	x1, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47d080:	csel	x3, x10, x9, eq  // eq = none
  47d084:	add	x1, x1, #0x8a2
  47d088:	mov	x4, x19
  47d08c:	bl	4030d0 <fprintf@plt>
  47d090:	mov	w0, #0x1                   	// #1
  47d094:	bl	47cfb8 <_obstack_memory_used@@Base+0x12b4>
  47d098:	stp	x29, x30, [sp, #-32]!
  47d09c:	cmp	x0, #0x0
  47d0a0:	str	x19, [sp, #16]
  47d0a4:	csinc	x19, x0, xzr, ne  // ne = any
  47d0a8:	mov	x0, x19
  47d0ac:	mov	x29, sp
  47d0b0:	bl	4036b0 <malloc@plt>
  47d0b4:	cbz	x0, 47d0c4 <_obstack_memory_used@@Base+0x13c0>
  47d0b8:	ldr	x19, [sp, #16]
  47d0bc:	ldp	x29, x30, [sp], #32
  47d0c0:	ret
  47d0c4:	mov	x0, x19
  47d0c8:	bl	47d018 <_obstack_memory_used@@Base+0x1314>
  47d0cc:	stp	x29, x30, [sp, #-32]!
  47d0d0:	cmp	x0, #0x0
  47d0d4:	cset	w8, eq  // eq = none
  47d0d8:	cmp	x1, #0x0
  47d0dc:	cset	w9, eq  // eq = none
  47d0e0:	orr	w8, w8, w9
  47d0e4:	cmp	w8, #0x0
  47d0e8:	stp	x20, x19, [sp, #16]
  47d0ec:	csinc	x19, x1, xzr, eq  // eq = none
  47d0f0:	csinc	x20, x0, xzr, eq  // eq = none
  47d0f4:	mov	x0, x20
  47d0f8:	mov	x1, x19
  47d0fc:	mov	x29, sp
  47d100:	bl	403050 <calloc@plt>
  47d104:	cbz	x0, 47d114 <_obstack_memory_used@@Base+0x1410>
  47d108:	ldp	x20, x19, [sp, #16]
  47d10c:	ldp	x29, x30, [sp], #32
  47d110:	ret
  47d114:	mul	x0, x20, x19
  47d118:	bl	47d018 <_obstack_memory_used@@Base+0x1314>
  47d11c:	stp	x29, x30, [sp, #-32]!
  47d120:	cmp	x1, #0x0
  47d124:	str	x19, [sp, #16]
  47d128:	csinc	x19, x1, xzr, ne  // ne = any
  47d12c:	mov	x29, sp
  47d130:	cbz	x0, 47d14c <_obstack_memory_used@@Base+0x1448>
  47d134:	mov	x1, x19
  47d138:	bl	403260 <realloc@plt>
  47d13c:	cbz	x0, 47d158 <_obstack_memory_used@@Base+0x1454>
  47d140:	ldr	x19, [sp, #16]
  47d144:	ldp	x29, x30, [sp], #32
  47d148:	ret
  47d14c:	mov	x0, x19
  47d150:	bl	4036b0 <malloc@plt>
  47d154:	cbnz	x0, 47d140 <_obstack_memory_used@@Base+0x143c>
  47d158:	mov	x0, x19
  47d15c:	bl	47d018 <_obstack_memory_used@@Base+0x1314>
  47d160:	stp	x29, x30, [sp, #-48]!
  47d164:	stp	x20, x19, [sp, #32]
  47d168:	mov	x20, x0
  47d16c:	mov	x0, x2
  47d170:	str	x21, [sp, #16]
  47d174:	mov	x29, sp
  47d178:	mov	x21, x2
  47d17c:	mov	x19, x1
  47d180:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  47d184:	subs	x2, x21, x19
  47d188:	mov	x21, x0
  47d18c:	b.ls	47d19c <_obstack_memory_used@@Base+0x1498>  // b.plast
  47d190:	add	x0, x21, x19
  47d194:	mov	w1, wzr
  47d198:	bl	4031f0 <memset@plt>
  47d19c:	mov	x0, x21
  47d1a0:	mov	x1, x20
  47d1a4:	mov	x2, x19
  47d1a8:	ldp	x20, x19, [sp, #32]
  47d1ac:	ldr	x21, [sp, #16]
  47d1b0:	ldp	x29, x30, [sp], #48
  47d1b4:	b	402fc0 <memcpy@plt>
  47d1b8:	stp	x29, x30, [sp, #-32]!
  47d1bc:	stp	x20, x19, [sp, #16]
  47d1c0:	mov	x29, sp
  47d1c4:	mov	x19, x0
  47d1c8:	bl	4030b0 <strlen@plt>
  47d1cc:	add	x20, x0, #0x1
  47d1d0:	mov	x0, x20
  47d1d4:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  47d1d8:	mov	x1, x19
  47d1dc:	mov	x2, x20
  47d1e0:	ldp	x20, x19, [sp, #16]
  47d1e4:	ldp	x29, x30, [sp], #32
  47d1e8:	b	402fc0 <memcpy@plt>
  47d1ec:	stp	x29, x30, [sp, #-32]!
  47d1f0:	stp	x20, x19, [sp, #16]
  47d1f4:	mov	x29, sp
  47d1f8:	mov	w19, w0
  47d1fc:	bl	4032d0 <strerror@plt>
  47d200:	mov	x20, x0
  47d204:	cbnz	x0, 47d224 <_obstack_memory_used@@Base+0x1520>
  47d208:	adrp	x20, 4f5000 <stderr@@GLIBC_2.17+0x2bb8>
  47d20c:	add	x20, x20, #0x428
  47d210:	adrp	x1, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47d214:	add	x1, x1, #0x8e6
  47d218:	mov	x0, x20
  47d21c:	mov	w2, w19
  47d220:	bl	403340 <sprintf@plt>
  47d224:	mov	x0, x20
  47d228:	ldp	x20, x19, [sp, #16]
  47d22c:	ldp	x29, x30, [sp], #32
  47d230:	ret
  47d234:	stp	x29, x30, [sp, #-32]!
  47d238:	stp	x20, x19, [sp, #16]
  47d23c:	mov	x29, sp
  47d240:	mov	x19, x0
  47d244:	bl	4037e0 <strnlen@plt>
  47d248:	mov	x20, x0
  47d24c:	add	x0, x0, #0x1
  47d250:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  47d254:	strb	wzr, [x0, x20]
  47d258:	mov	x1, x19
  47d25c:	mov	x2, x20
  47d260:	ldp	x20, x19, [sp, #16]
  47d264:	ldp	x29, x30, [sp], #32
  47d268:	b	402fc0 <memcpy@plt>
  47d26c:	sub	sp, sp, #0x50
  47d270:	stp	x29, x30, [sp, #32]
  47d274:	str	x21, [sp, #48]
  47d278:	stp	x20, x19, [sp, #64]
  47d27c:	ldp	q1, q0, [x1]
  47d280:	mov	x19, x1
  47d284:	mov	x1, sp
  47d288:	add	x29, sp, #0x20
  47d28c:	mov	x20, x0
  47d290:	stp	q1, q0, [sp]
  47d294:	bl	47d2d0 <_obstack_memory_used@@Base+0x15cc>
  47d298:	sxtw	x0, w0
  47d29c:	bl	47d098 <_obstack_memory_used@@Base+0x1394>
  47d2a0:	ldp	q1, q0, [x19]
  47d2a4:	mov	x2, sp
  47d2a8:	mov	x1, x20
  47d2ac:	mov	x21, x0
  47d2b0:	stp	q1, q0, [sp]
  47d2b4:	bl	4037b0 <vsprintf@plt>
  47d2b8:	mov	x0, x21
  47d2bc:	ldp	x20, x19, [sp, #64]
  47d2c0:	ldr	x21, [sp, #48]
  47d2c4:	ldp	x29, x30, [sp, #32]
  47d2c8:	add	sp, sp, #0x50
  47d2cc:	ret
  47d2d0:	sub	sp, sp, #0x70
  47d2d4:	stp	x29, x30, [sp, #32]
  47d2d8:	add	x29, sp, #0x20
  47d2dc:	str	x25, [sp, #48]
  47d2e0:	stp	x24, x23, [sp, #64]
  47d2e4:	stp	x22, x21, [sp, #80]
  47d2e8:	stp	x20, x19, [sp, #96]
  47d2ec:	mov	x19, x1
  47d2f0:	mov	x21, x0
  47d2f4:	str	x0, [x29, #24]
  47d2f8:	bl	4030b0 <strlen@plt>
  47d2fc:	ldp	q1, q0, [x19]
  47d300:	add	w20, w0, #0x1
  47d304:	stp	q1, q0, [sp]
  47d308:	ldrb	w8, [x21]
  47d30c:	cbz	w8, 47d55c <_obstack_memory_used@@Base+0x1858>
  47d310:	mov	x22, #0x1                   	// #1
  47d314:	movk	x22, #0x2809, lsl #32
  47d318:	adrp	x19, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47d31c:	adrp	x24, 4da000 <_obstack_memory_used@@Base+0x5e2fc>
  47d320:	movk	x22, #0x1, lsl #48
  47d324:	mov	w23, #0x1                   	// #1
  47d328:	add	x19, x19, #0x931
  47d32c:	add	x24, x24, #0x8fd
  47d330:	b	47d350 <_obstack_memory_used@@Base+0x164c>
  47d334:	ldr	x8, [sp]
  47d338:	add	x8, x8, #0x8
  47d33c:	str	x8, [sp]
  47d340:	add	x21, x21, #0x1
  47d344:	str	x21, [x29, #24]
  47d348:	ldrb	w8, [x21]
  47d34c:	cbz	w8, 47d55c <_obstack_memory_used@@Base+0x1858>
  47d350:	and	w8, w8, #0xff
  47d354:	add	x21, x21, #0x1
  47d358:	cmp	w8, #0x25
  47d35c:	str	x21, [x29, #24]
  47d360:	b.ne	47d348 <_obstack_memory_used@@Base+0x1644>  // b.any
  47d364:	ldrb	w8, [x21]
  47d368:	cmp	x8, #0x3f
  47d36c:	b.hi	47d398 <_obstack_memory_used@@Base+0x1694>  // b.pmore
  47d370:	lsl	x9, x23, x8
  47d374:	and	x9, x9, x22
  47d378:	cbz	x9, 47d398 <_obstack_memory_used@@Base+0x1694>
  47d37c:	ldrb	w8, [x21, #1]!
  47d380:	cmp	x8, #0x3f
  47d384:	b.hi	47d394 <_obstack_memory_used@@Base+0x1690>  // b.pmore
  47d388:	lsl	x9, x23, x8
  47d38c:	and	x9, x9, x22
  47d390:	cbnz	x9, 47d37c <_obstack_memory_used@@Base+0x1678>
  47d394:	str	x21, [x29, #24]
  47d398:	cmp	w8, #0x2a
  47d39c:	b.ne	47d3cc <_obstack_memory_used@@Base+0x16c8>  // b.any
  47d3a0:	ldrsw	x8, [sp, #24]
  47d3a4:	add	x21, x21, #0x1
  47d3a8:	str	x21, [x29, #24]
  47d3ac:	tbz	w8, #31, 47d3e4 <_obstack_memory_used@@Base+0x16e0>
  47d3b0:	add	w9, w8, #0x8
  47d3b4:	cmn	w8, #0x8
  47d3b8:	str	w9, [sp, #24]
  47d3bc:	b.gt	47d3e4 <_obstack_memory_used@@Base+0x16e0>
  47d3c0:	ldr	x9, [sp, #8]
  47d3c4:	add	x8, x9, x8
  47d3c8:	b	47d3f0 <_obstack_memory_used@@Base+0x16ec>
  47d3cc:	add	x1, x29, #0x18
  47d3d0:	mov	w2, #0xa                   	// #10
  47d3d4:	mov	x0, x21
  47d3d8:	bl	4035f0 <strtoul@plt>
  47d3dc:	ldr	x21, [x29, #24]
  47d3e0:	b	47d3fc <_obstack_memory_used@@Base+0x16f8>
  47d3e4:	ldr	x8, [sp]
  47d3e8:	add	x9, x8, #0x8
  47d3ec:	str	x9, [sp]
  47d3f0:	ldr	w8, [x8]
  47d3f4:	cmp	w8, #0x0
  47d3f8:	cneg	w0, w8, mi  // mi = first
  47d3fc:	ldrb	w8, [x21]
  47d400:	add	w25, w0, w20
  47d404:	cmp	w8, #0x2e
  47d408:	b.ne	47d480 <_obstack_memory_used@@Base+0x177c>  // b.any
  47d40c:	add	x0, x21, #0x1
  47d410:	str	x0, [x29, #24]
  47d414:	ldrb	w8, [x21, #1]
  47d418:	cmp	w8, #0x2a
  47d41c:	b.ne	47d44c <_obstack_memory_used@@Base+0x1748>  // b.any
  47d420:	ldrsw	x8, [sp, #24]
  47d424:	add	x21, x21, #0x2
  47d428:	str	x21, [x29, #24]
  47d42c:	tbz	w8, #31, 47d464 <_obstack_memory_used@@Base+0x1760>
  47d430:	add	w9, w8, #0x8
  47d434:	cmn	w8, #0x8
  47d438:	str	w9, [sp, #24]
  47d43c:	b.gt	47d464 <_obstack_memory_used@@Base+0x1760>
  47d440:	ldr	x9, [sp, #8]
  47d444:	add	x8, x9, x8
  47d448:	b	47d470 <_obstack_memory_used@@Base+0x176c>
  47d44c:	add	x1, x29, #0x18
  47d450:	mov	w2, #0xa                   	// #10
  47d454:	bl	4035f0 <strtoul@plt>
  47d458:	ldr	x21, [x29, #24]
  47d45c:	add	w25, w25, w0
  47d460:	b	47d480 <_obstack_memory_used@@Base+0x177c>
  47d464:	ldr	x8, [sp]
  47d468:	add	x9, x8, #0x8
  47d46c:	str	x9, [sp]
  47d470:	ldr	w8, [x8]
  47d474:	cmp	w8, #0x0
  47d478:	cneg	w8, w8, mi  // mi = first
  47d47c:	add	w25, w8, w25
  47d480:	ldrb	w20, [x21]
  47d484:	mov	w2, #0x4                   	// #4
  47d488:	mov	x0, x19
  47d48c:	mov	w1, w20
  47d490:	bl	4033f0 <memchr@plt>
  47d494:	cbz	x0, 47d4b4 <_obstack_memory_used@@Base+0x17b0>
  47d498:	ldrb	w20, [x21, #1]!
  47d49c:	mov	w2, #0x4                   	// #4
  47d4a0:	mov	x0, x19
  47d4a4:	mov	w1, w20
  47d4a8:	bl	4033f0 <memchr@plt>
  47d4ac:	cbnz	x0, 47d498 <_obstack_memory_used@@Base+0x1794>
  47d4b0:	str	x21, [x29, #24]
  47d4b4:	sub	w8, w20, #0x45
  47d4b8:	cmp	w8, #0x33
  47d4bc:	add	w20, w25, #0x1e
  47d4c0:	b.hi	47d340 <_obstack_memory_used@@Base+0x163c>  // b.pmore
  47d4c4:	adr	x9, 47d340 <_obstack_memory_used@@Base+0x163c>
  47d4c8:	ldrb	w10, [x24, x8]
  47d4cc:	add	x9, x9, x10, lsl #2
  47d4d0:	br	x9
  47d4d4:	ldr	w8, [sp, #24]
  47d4d8:	tbz	w8, #31, 47d334 <_obstack_memory_used@@Base+0x1630>
  47d4dc:	add	w9, w8, #0x8
  47d4e0:	cmn	w8, #0x7
  47d4e4:	str	w9, [sp, #24]
  47d4e8:	b.ge	47d334 <_obstack_memory_used@@Base+0x1630>  // b.tcont
  47d4ec:	b	47d340 <_obstack_memory_used@@Base+0x163c>
  47d4f0:	ldr	w8, [sp, #28]
  47d4f4:	tbz	w8, #31, 47d508 <_obstack_memory_used@@Base+0x1804>
  47d4f8:	add	w9, w8, #0x10
  47d4fc:	cmn	w8, #0xf
  47d500:	str	w9, [sp, #28]
  47d504:	b.lt	47d514 <_obstack_memory_used@@Base+0x1810>  // b.tstop
  47d508:	ldr	x8, [sp]
  47d50c:	add	x8, x8, #0x8
  47d510:	str	x8, [sp]
  47d514:	add	w20, w25, #0x151
  47d518:	b	47d340 <_obstack_memory_used@@Base+0x163c>
  47d51c:	ldrsw	x8, [sp, #24]
  47d520:	tbz	w8, #31, 47d540 <_obstack_memory_used@@Base+0x183c>
  47d524:	add	w9, w8, #0x8
  47d528:	cmn	w8, #0x8
  47d52c:	str	w9, [sp, #24]
  47d530:	b.gt	47d540 <_obstack_memory_used@@Base+0x183c>
  47d534:	ldr	x9, [sp, #8]
  47d538:	add	x8, x9, x8
  47d53c:	b	47d54c <_obstack_memory_used@@Base+0x1848>
  47d540:	ldr	x8, [sp]
  47d544:	add	x9, x8, #0x8
  47d548:	str	x9, [sp]
  47d54c:	ldr	x0, [x8]
  47d550:	bl	4030b0 <strlen@plt>
  47d554:	add	w20, w20, w0
  47d558:	b	47d340 <_obstack_memory_used@@Base+0x163c>
  47d55c:	mov	w0, w20
  47d560:	ldp	x20, x19, [sp, #96]
  47d564:	ldp	x22, x21, [sp, #80]
  47d568:	ldp	x24, x23, [sp, #64]
  47d56c:	ldr	x25, [sp, #48]
  47d570:	ldp	x29, x30, [sp, #32]
  47d574:	add	sp, sp, #0x70
  47d578:	ret
  47d57c:	nop
  47d580:	stp	x29, x30, [sp, #-64]!
  47d584:	mov	x29, sp
  47d588:	stp	x19, x20, [sp, #16]
  47d58c:	adrp	x20, 4f0000 <_obstack_memory_used@@Base+0x742fc>
  47d590:	add	x20, x20, #0xdc0
  47d594:	stp	x21, x22, [sp, #32]
  47d598:	adrp	x21, 4f0000 <_obstack_memory_used@@Base+0x742fc>
  47d59c:	add	x21, x21, #0xda8
  47d5a0:	sub	x20, x20, x21
  47d5a4:	mov	w22, w0
  47d5a8:	stp	x23, x24, [sp, #48]
  47d5ac:	mov	x23, x1
  47d5b0:	mov	x24, x2
  47d5b4:	bl	402f20 <_Unwind_Backtrace@plt-0x40>
  47d5b8:	cmp	xzr, x20, asr #3
  47d5bc:	b.eq	47d5e8 <_obstack_memory_used@@Base+0x18e4>  // b.none
  47d5c0:	asr	x20, x20, #3
  47d5c4:	mov	x19, #0x0                   	// #0
  47d5c8:	ldr	x3, [x21, x19, lsl #3]
  47d5cc:	mov	x2, x24
  47d5d0:	add	x19, x19, #0x1
  47d5d4:	mov	x1, x23
  47d5d8:	mov	w0, w22
  47d5dc:	blr	x3
  47d5e0:	cmp	x20, x19
  47d5e4:	b.ne	47d5c8 <_obstack_memory_used@@Base+0x18c4>  // b.any
  47d5e8:	ldp	x19, x20, [sp, #16]
  47d5ec:	ldp	x21, x22, [sp, #32]
  47d5f0:	ldp	x23, x24, [sp, #48]
  47d5f4:	ldp	x29, x30, [sp], #64
  47d5f8:	ret
  47d5fc:	nop
  47d600:	ret
  47d604:	nop
  47d608:	adrp	x2, 4f1000 <_obstack_memory_used@@Base+0x752fc>
  47d60c:	mov	x1, #0x0                   	// #0
  47d610:	ldr	x2, [x2, #1200]
  47d614:	b	403520 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000047d618 <.fini>:
  47d618:	stp	x29, x30, [sp, #-16]!
  47d61c:	mov	x29, sp
  47d620:	ldp	x29, x30, [sp], #16
  47d624:	ret
