
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//head_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000a20 <_init>:
 a20:	stp	x29, x30, [sp, #-16]!
 a24:	mov	x29, sp
 a28:	bl	b70 <call_weak_fn>
 a2c:	ldp	x29, x30, [sp], #16
 a30:	ret

Disassembly of section .plt:

0000000000000a40 <.plt>:
 a40:	stp	x16, x30, [sp, #-16]!
 a44:	adrp	x16, 11000 <__FRAME_END__+0xfcb4>
 a48:	ldr	x17, [x16, #4088]
 a4c:	add	x16, x16, #0xff8
 a50:	br	x17
 a54:	nop
 a58:	nop
 a5c:	nop

0000000000000a60 <builtin_error@plt>:
 a60:	adrp	x16, 12000 <builtin_error>
 a64:	ldr	x17, [x16]
 a68:	add	x16, x16, #0x0
 a6c:	br	x17

0000000000000a70 <__cxa_finalize@plt>:
 a70:	adrp	x16, 12000 <builtin_error>
 a74:	ldr	x17, [x16, #8]
 a78:	add	x16, x16, #0x8
 a7c:	br	x17

0000000000000a80 <make_bare_word@plt>:
 a80:	adrp	x16, 12000 <builtin_error>
 a84:	ldr	x17, [x16, #16]
 a88:	add	x16, x16, #0x10
 a8c:	br	x17

0000000000000a90 <fclose@plt>:
 a90:	adrp	x16, 12000 <builtin_error>
 a94:	ldr	x17, [x16, #24]
 a98:	add	x16, x16, #0x18
 a9c:	br	x17

0000000000000aa0 <atoi@plt>:
 aa0:	adrp	x16, 12000 <builtin_error>
 aa4:	ldr	x17, [x16, #32]
 aa8:	add	x16, x16, #0x20
 aac:	br	x17

0000000000000ab0 <fopen@plt>:
 ab0:	adrp	x16, 12000 <builtin_error>
 ab4:	ldr	x17, [x16, #40]
 ab8:	add	x16, x16, #0x28
 abc:	br	x17

0000000000000ac0 <builtin_help@plt>:
 ac0:	adrp	x16, 12000 <builtin_error>
 ac4:	ldr	x17, [x16, #48]
 ac8:	add	x16, x16, #0x30
 acc:	br	x17

0000000000000ad0 <builtin_usage@plt>:
 ad0:	adrp	x16, 12000 <builtin_error>
 ad4:	ldr	x17, [x16, #56]
 ad8:	add	x16, x16, #0x38
 adc:	br	x17

0000000000000ae0 <getc@plt>:
 ae0:	adrp	x16, 12000 <builtin_error>
 ae4:	ldr	x17, [x16, #64]
 ae8:	add	x16, x16, #0x40
 aec:	br	x17

0000000000000af0 <strerror@plt>:
 af0:	adrp	x16, 12000 <builtin_error>
 af4:	ldr	x17, [x16, #72]
 af8:	add	x16, x16, #0x48
 afc:	br	x17

0000000000000b00 <__gmon_start__@plt>:
 b00:	adrp	x16, 12000 <builtin_error>
 b04:	ldr	x17, [x16, #80]
 b08:	add	x16, x16, #0x50
 b0c:	br	x17

0000000000000b10 <internal_getopt@plt>:
 b10:	adrp	x16, 12000 <builtin_error>
 b14:	ldr	x17, [x16, #88]
 b18:	add	x16, x16, #0x58
 b1c:	br	x17

0000000000000b20 <reset_internal_getopt@plt>:
 b20:	adrp	x16, 12000 <builtin_error>
 b24:	ldr	x17, [x16, #96]
 b28:	add	x16, x16, #0x60
 b2c:	br	x17

0000000000000b30 <printf@plt>:
 b30:	adrp	x16, 12000 <builtin_error>
 b34:	ldr	x17, [x16, #104]
 b38:	add	x16, x16, #0x68
 b3c:	br	x17

0000000000000b40 <__errno_location@plt>:
 b40:	adrp	x16, 12000 <builtin_error>
 b44:	ldr	x17, [x16, #112]
 b48:	add	x16, x16, #0x70
 b4c:	br	x17

0000000000000b50 <make_word_list@plt>:
 b50:	adrp	x16, 12000 <builtin_error>
 b54:	ldr	x17, [x16, #120]
 b58:	add	x16, x16, #0x78
 b5c:	br	x17

0000000000000b60 <putchar@plt>:
 b60:	adrp	x16, 12000 <builtin_error>
 b64:	ldr	x17, [x16, #128]
 b68:	add	x16, x16, #0x80
 b6c:	br	x17

Disassembly of section .text:

0000000000000b70 <call_weak_fn>:
     b70:	adrp	x0, 11000 <__FRAME_END__+0xfcb4>
     b74:	ldr	x0, [x0, #4040]
     b78:	cbz	x0, b80 <call_weak_fn+0x10>
     b7c:	b	b00 <__gmon_start__@plt>
     b80:	ret

0000000000000b84 <deregister_tm_clones>:
     b84:	stp	x29, x30, [sp, #-32]!
     b88:	mov	x29, sp
     b8c:	adrp	x0, 12000 <builtin_error>
     b90:	add	x0, x0, #0xf0
     b94:	str	x0, [sp, #24]
     b98:	ldr	x0, [sp, #24]
     b9c:	str	x0, [sp, #24]
     ba0:	ldr	x1, [sp, #24]
     ba4:	adrp	x0, 12000 <builtin_error>
     ba8:	add	x0, x0, #0xf0
     bac:	cmp	x1, x0
     bb0:	b.eq	be8 <deregister_tm_clones+0x64>  // b.none
     bb4:	adrp	x0, 11000 <__FRAME_END__+0xfcb4>
     bb8:	ldr	x0, [x0, #4016]
     bbc:	str	x0, [sp, #16]
     bc0:	ldr	x0, [sp, #16]
     bc4:	str	x0, [sp, #16]
     bc8:	ldr	x0, [sp, #16]
     bcc:	cmp	x0, #0x0
     bd0:	b.eq	bec <deregister_tm_clones+0x68>  // b.none
     bd4:	ldr	x1, [sp, #16]
     bd8:	adrp	x0, 12000 <builtin_error>
     bdc:	add	x0, x0, #0xf0
     be0:	blr	x1
     be4:	b	bec <deregister_tm_clones+0x68>
     be8:	nop
     bec:	ldp	x29, x30, [sp], #32
     bf0:	ret

0000000000000bf4 <register_tm_clones>:
     bf4:	stp	x29, x30, [sp, #-48]!
     bf8:	mov	x29, sp
     bfc:	adrp	x0, 12000 <builtin_error>
     c00:	add	x0, x0, #0xf0
     c04:	str	x0, [sp, #40]
     c08:	ldr	x0, [sp, #40]
     c0c:	str	x0, [sp, #40]
     c10:	ldr	x1, [sp, #40]
     c14:	adrp	x0, 12000 <builtin_error>
     c18:	add	x0, x0, #0xf0
     c1c:	sub	x0, x1, x0
     c20:	asr	x0, x0, #3
     c24:	lsr	x1, x0, #63
     c28:	add	x0, x1, x0
     c2c:	asr	x0, x0, #1
     c30:	str	x0, [sp, #32]
     c34:	ldr	x0, [sp, #32]
     c38:	cmp	x0, #0x0
     c3c:	b.eq	c78 <register_tm_clones+0x84>  // b.none
     c40:	adrp	x0, 11000 <__FRAME_END__+0xfcb4>
     c44:	ldr	x0, [x0, #4064]
     c48:	str	x0, [sp, #24]
     c4c:	ldr	x0, [sp, #24]
     c50:	str	x0, [sp, #24]
     c54:	ldr	x0, [sp, #24]
     c58:	cmp	x0, #0x0
     c5c:	b.eq	c7c <register_tm_clones+0x88>  // b.none
     c60:	ldr	x2, [sp, #24]
     c64:	ldr	x1, [sp, #32]
     c68:	adrp	x0, 12000 <builtin_error>
     c6c:	add	x0, x0, #0xf0
     c70:	blr	x2
     c74:	b	c7c <register_tm_clones+0x88>
     c78:	nop
     c7c:	ldp	x29, x30, [sp], #48
     c80:	ret

0000000000000c84 <__do_global_dtors_aux>:
     c84:	stp	x29, x30, [sp, #-16]!
     c88:	mov	x29, sp
     c8c:	adrp	x0, 12000 <builtin_error>
     c90:	add	x0, x0, #0xf0
     c94:	ldrb	w0, [x0]
     c98:	and	x0, x0, #0xff
     c9c:	cmp	x0, #0x0
     ca0:	b.ne	cdc <__do_global_dtors_aux+0x58>  // b.any
     ca4:	adrp	x0, 11000 <__FRAME_END__+0xfcb4>
     ca8:	ldr	x0, [x0, #4024]
     cac:	cmp	x0, #0x0
     cb0:	b.eq	cc4 <__do_global_dtors_aux+0x40>  // b.none
     cb4:	adrp	x0, 12000 <builtin_error>
     cb8:	add	x0, x0, #0x88
     cbc:	ldr	x0, [x0]
     cc0:	bl	a70 <__cxa_finalize@plt>
     cc4:	bl	b84 <deregister_tm_clones>
     cc8:	adrp	x0, 12000 <builtin_error>
     ccc:	add	x0, x0, #0xf0
     cd0:	mov	w1, #0x1                   	// #1
     cd4:	strb	w1, [x0]
     cd8:	b	ce0 <__do_global_dtors_aux+0x5c>
     cdc:	nop
     ce0:	ldp	x29, x30, [sp], #16
     ce4:	ret

0000000000000ce8 <frame_dummy>:
     ce8:	stp	x29, x30, [sp, #-16]!
     cec:	mov	x29, sp
     cf0:	bl	bf4 <register_tm_clones>
     cf4:	nop
     cf8:	ldp	x29, x30, [sp], #16
     cfc:	ret

0000000000000d00 <munge_list>:
     d00:	stp	x29, x30, [sp, #-64]!
     d04:	mov	x29, sp
     d08:	str	x0, [sp, #24]
     d0c:	ldr	x0, [sp, #24]
     d10:	str	x0, [sp, #56]
     d14:	b	dfc <munge_list+0xfc>
     d18:	ldr	x0, [sp, #56]
     d1c:	ldr	x0, [x0, #8]
     d20:	ldr	x0, [x0]
     d24:	str	x0, [sp, #48]
     d28:	ldr	x0, [sp, #48]
     d2c:	ldrb	w0, [x0]
     d30:	cmp	w0, #0x2d
     d34:	b.ne	e0c <munge_list+0x10c>  // b.any
     d38:	ldr	x0, [sp, #48]
     d3c:	add	x0, x0, #0x1
     d40:	ldrb	w0, [x0]
     d44:	cmp	w0, #0x2d
     d48:	b.eq	e0c <munge_list+0x10c>  // b.none
     d4c:	ldr	x0, [sp, #48]
     d50:	add	x0, x0, #0x1
     d54:	ldrb	w0, [x0]
     d58:	cmp	w0, #0x2f
     d5c:	b.ls	d7c <munge_list+0x7c>  // b.plast
     d60:	ldr	x0, [sp, #48]
     d64:	add	x0, x0, #0x1
     d68:	ldrb	w0, [x0]
     d6c:	cmp	w0, #0x39
     d70:	b.hi	d7c <munge_list+0x7c>  // b.pmore
     d74:	mov	w0, #0x1                   	// #1
     d78:	b	d80 <munge_list+0x80>
     d7c:	mov	w0, #0x0                   	// #0
     d80:	cmp	w0, #0x0
     d84:	b.eq	e0c <munge_list+0x10c>  // b.none
     d88:	ldr	x0, [sp, #48]
     d8c:	add	x0, x0, #0x1
     d90:	bl	a80 <make_bare_word@plt>
     d94:	str	x0, [sp, #40]
     d98:	ldr	x0, [sp, #56]
     d9c:	ldr	x0, [x0]
     da0:	mov	x1, x0
     da4:	ldr	x0, [sp, #40]
     da8:	bl	b50 <make_word_list@plt>
     dac:	str	x0, [sp, #32]
     db0:	ldr	x0, [sp, #56]
     db4:	ldr	x0, [x0, #8]
     db8:	ldr	x0, [x0]
     dbc:	add	x0, x0, #0x1
     dc0:	mov	w1, #0x6e                  	// #110
     dc4:	strb	w1, [x0]
     dc8:	ldr	x0, [sp, #56]
     dcc:	ldr	x0, [x0, #8]
     dd0:	ldr	x0, [x0]
     dd4:	add	x0, x0, #0x2
     dd8:	strb	wzr, [x0]
     ddc:	ldr	x0, [sp, #56]
     de0:	ldr	x1, [sp, #32]
     de4:	str	x1, [x0]
     de8:	ldr	x0, [sp, #32]
     dec:	str	x0, [sp, #56]
     df0:	ldr	x0, [sp, #56]
     df4:	ldr	x0, [x0]
     df8:	str	x0, [sp, #56]
     dfc:	ldr	x0, [sp, #56]
     e00:	cmp	x0, #0x0
     e04:	b.ne	d18 <munge_list+0x18>  // b.any
     e08:	b	e10 <munge_list+0x110>
     e0c:	nop
     e10:	ldp	x29, x30, [sp], #64
     e14:	ret

0000000000000e18 <file_head>:
     e18:	stp	x29, x30, [sp, #-48]!
     e1c:	mov	x29, sp
     e20:	str	x0, [sp, #24]
     e24:	str	w1, [sp, #20]
     e28:	b	e88 <file_head+0x70>
     e2c:	ldr	w0, [sp, #44]
     e30:	bl	b60 <putchar@plt>
     e34:	cmn	w0, #0x1
     e38:	b.ne	e60 <file_head+0x48>  // b.any
     e3c:	bl	b40 <__errno_location@plt>
     e40:	ldr	w0, [x0]
     e44:	bl	af0 <strerror@plt>
     e48:	mov	x1, x0
     e4c:	adrp	x0, 1000 <head_builtin+0x158>
     e50:	add	x0, x0, #0xb0
     e54:	bl	a60 <builtin_error@plt>
     e58:	mov	w0, #0x1                   	// #1
     e5c:	b	ea0 <file_head+0x88>
     e60:	ldr	w0, [sp, #44]
     e64:	cmp	w0, #0xa
     e68:	b.ne	e70 <file_head+0x58>  // b.any
     e6c:	b	e88 <file_head+0x70>
     e70:	ldr	x0, [sp, #24]
     e74:	bl	ae0 <getc@plt>
     e78:	str	w0, [sp, #44]
     e7c:	ldr	w0, [sp, #44]
     e80:	cmn	w0, #0x1
     e84:	b.ne	e2c <file_head+0x14>  // b.any
     e88:	ldr	w0, [sp, #20]
     e8c:	sub	w1, w0, #0x1
     e90:	str	w1, [sp, #20]
     e94:	cmp	w0, #0x0
     e98:	b.ne	e70 <file_head+0x58>  // b.any
     e9c:	mov	w0, #0x0                   	// #0
     ea0:	ldp	x29, x30, [sp], #48
     ea4:	ret

0000000000000ea8 <head_builtin>:
     ea8:	stp	x29, x30, [sp, #-80]!
     eac:	mov	x29, sp
     eb0:	str	x19, [sp, #16]
     eb4:	str	x0, [sp, #40]
     eb8:	ldr	x0, [sp, #40]
     ebc:	bl	d00 <munge_list>
     ec0:	bl	b20 <reset_internal_getopt@plt>
     ec4:	mov	w0, #0xa                   	// #10
     ec8:	str	w0, [sp, #76]
     ecc:	b	f44 <head_builtin+0x9c>
     ed0:	ldr	w0, [sp, #72]
     ed4:	cmn	w0, #0x63
     ed8:	b.eq	f2c <head_builtin+0x84>  // b.none
     edc:	ldr	w0, [sp, #72]
     ee0:	cmp	w0, #0x6e
     ee4:	b.ne	f38 <head_builtin+0x90>  // b.any
     ee8:	adrp	x0, 11000 <__FRAME_END__+0xfcb4>
     eec:	ldr	x0, [x0, #4048]
     ef0:	ldr	x0, [x0]
     ef4:	bl	aa0 <atoi@plt>
     ef8:	str	w0, [sp, #76]
     efc:	ldr	w0, [sp, #76]
     f00:	cmp	w0, #0x0
     f04:	b.gt	f44 <head_builtin+0x9c>
     f08:	adrp	x0, 11000 <__FRAME_END__+0xfcb4>
     f0c:	ldr	x0, [x0, #4048]
     f10:	ldr	x0, [x0]
     f14:	mov	x1, x0
     f18:	adrp	x0, 1000 <head_builtin+0x158>
     f1c:	add	x0, x0, #0xc0
     f20:	bl	a60 <builtin_error@plt>
     f24:	mov	w0, #0x102                 	// #258
     f28:	b	1094 <head_builtin+0x1ec>
     f2c:	bl	ac0 <builtin_help@plt>
     f30:	mov	w0, #0x102                 	// #258
     f34:	b	1094 <head_builtin+0x1ec>
     f38:	bl	ad0 <builtin_usage@plt>
     f3c:	mov	w0, #0x102                 	// #258
     f40:	b	1094 <head_builtin+0x1ec>
     f44:	adrp	x0, 1000 <head_builtin+0x158>
     f48:	add	x1, x0, #0xd8
     f4c:	ldr	x0, [sp, #40]
     f50:	bl	b10 <internal_getopt@plt>
     f54:	str	w0, [sp, #72]
     f58:	ldr	w0, [sp, #72]
     f5c:	cmn	w0, #0x1
     f60:	b.ne	ed0 <head_builtin+0x28>  // b.any
     f64:	adrp	x0, 11000 <__FRAME_END__+0xfcb4>
     f68:	ldr	x0, [x0, #4056]
     f6c:	ldr	x0, [x0]
     f70:	str	x0, [sp, #40]
     f74:	ldr	x0, [sp, #40]
     f78:	cmp	x0, #0x0
     f7c:	b.ne	f98 <head_builtin+0xf0>  // b.any
     f80:	adrp	x0, 11000 <__FRAME_END__+0xfcb4>
     f84:	ldr	x0, [x0, #4032]
     f88:	ldr	x0, [x0]
     f8c:	ldr	w1, [sp, #76]
     f90:	bl	e18 <file_head>
     f94:	b	1094 <head_builtin+0x1ec>
     f98:	str	wzr, [sp, #68]
     f9c:	mov	w0, #0x1                   	// #1
     fa0:	str	w0, [sp, #72]
     fa4:	ldr	x0, [sp, #40]
     fa8:	str	x0, [sp, #56]
     fac:	b	1084 <head_builtin+0x1dc>
     fb0:	ldr	x0, [sp, #56]
     fb4:	ldr	x0, [x0, #8]
     fb8:	ldr	x2, [x0]
     fbc:	adrp	x0, 1000 <head_builtin+0x158>
     fc0:	add	x1, x0, #0xe0
     fc4:	mov	x0, x2
     fc8:	bl	ab0 <fopen@plt>
     fcc:	str	x0, [sp, #48]
     fd0:	ldr	x0, [sp, #48]
     fd4:	cmp	x0, #0x0
     fd8:	b.ne	100c <head_builtin+0x164>  // b.any
     fdc:	ldr	x0, [sp, #56]
     fe0:	ldr	x0, [x0, #8]
     fe4:	ldr	x19, [x0]
     fe8:	bl	b40 <__errno_location@plt>
     fec:	ldr	w0, [x0]
     ff0:	bl	af0 <strerror@plt>
     ff4:	mov	x2, x0
     ff8:	mov	x1, x19
     ffc:	adrp	x0, 1000 <head_builtin+0x158>
    1000:	add	x0, x0, #0xe8
    1004:	bl	a60 <builtin_error@plt>
    1008:	b	1078 <head_builtin+0x1d0>
    100c:	ldr	x0, [sp, #40]
    1010:	ldr	x0, [x0]
    1014:	cmp	x0, #0x0
    1018:	b.eq	1060 <head_builtin+0x1b8>  // b.none
    101c:	ldr	w0, [sp, #72]
    1020:	cmp	w0, #0x0
    1024:	b.eq	1034 <head_builtin+0x18c>  // b.none
    1028:	adrp	x0, 1000 <head_builtin+0x158>
    102c:	add	x0, x0, #0xf0
    1030:	b	103c <head_builtin+0x194>
    1034:	adrp	x0, 1000 <head_builtin+0x158>
    1038:	add	x0, x0, #0xf8
    103c:	ldr	x1, [sp, #56]
    1040:	ldr	x1, [x1, #8]
    1044:	ldr	x1, [x1]
    1048:	mov	x2, x1
    104c:	mov	x1, x0
    1050:	adrp	x0, 1000 <head_builtin+0x158>
    1054:	add	x0, x0, #0x100
    1058:	bl	b30 <printf@plt>
    105c:	str	wzr, [sp, #72]
    1060:	ldr	w1, [sp, #76]
    1064:	ldr	x0, [sp, #48]
    1068:	bl	e18 <file_head>
    106c:	str	w0, [sp, #68]
    1070:	ldr	x0, [sp, #48]
    1074:	bl	a90 <fclose@plt>
    1078:	ldr	x0, [sp, #56]
    107c:	ldr	x0, [x0]
    1080:	str	x0, [sp, #56]
    1084:	ldr	x0, [sp, #56]
    1088:	cmp	x0, #0x0
    108c:	b.ne	fb0 <head_builtin+0x108>  // b.any
    1090:	ldr	w0, [sp, #68]
    1094:	ldr	x19, [sp, #16]
    1098:	ldp	x29, x30, [sp], #80
    109c:	ret

Disassembly of section .fini:

00000000000010a0 <_fini>:
    10a0:	stp	x29, x30, [sp, #-16]!
    10a4:	mov	x29, sp
    10a8:	ldp	x29, x30, [sp], #16
    10ac:	ret
