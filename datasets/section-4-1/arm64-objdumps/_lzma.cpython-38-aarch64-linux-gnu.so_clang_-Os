
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_lzma.cpython-38-aarch64-linux-gnu.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000021c0 <.init>:
    21c0:	stp	x29, x30, [sp, #-16]!
    21c4:	mov	x29, sp
    21c8:	bl	2650 <_PyDict_SetItemId@plt+0x10>
    21cc:	ldp	x29, x30, [sp], #16
    21d0:	ret

Disassembly of section .plt:

00000000000021e0 <memcpy@plt-0x20>:
    21e0:	stp	x16, x30, [sp, #-16]!
    21e4:	adrp	x16, 16000 <PyInit__lzma@@Base+0x138dc>
    21e8:	ldr	x17, [x16, #4088]
    21ec:	add	x16, x16, #0xff8
    21f0:	br	x17
    21f4:	nop
    21f8:	nop
    21fc:	nop

0000000000002200 <memcpy@plt>:
    2200:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2204:	ldr	x17, [x16]
    2208:	add	x16, x16, #0x0
    220c:	br	x17

0000000000002210 <memmove@plt>:
    2210:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2214:	ldr	x17, [x16, #8]
    2218:	add	x16, x16, #0x8
    221c:	br	x17

0000000000002220 <PyModule_AddIntConstant@plt>:
    2220:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2224:	ldr	x17, [x16, #16]
    2228:	add	x16, x16, #0x10
    222c:	br	x17

0000000000002230 <PyMapping_Check@plt>:
    2230:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2234:	ldr	x17, [x16, #24]
    2238:	add	x16, x16, #0x18
    223c:	br	x17

0000000000002240 <_PyBytes_Resize@plt>:
    2240:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2244:	ldr	x17, [x16, #32]
    2248:	add	x16, x16, #0x20
    224c:	br	x17

0000000000002250 <lzma_code@plt>:
    2250:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2254:	ldr	x17, [x16, #40]
    2258:	add	x16, x16, #0x28
    225c:	br	x17

0000000000002260 <PyEval_RestoreThread@plt>:
    2260:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2264:	ldr	x17, [x16, #48]
    2268:	add	x16, x16, #0x30
    226c:	br	x17

0000000000002270 <PyMem_Free@plt>:
    2270:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2274:	ldr	x17, [x16, #56]
    2278:	add	x16, x16, #0x38
    227c:	br	x17

0000000000002280 <PyLong_FromUnsignedLongLong@plt>:
    2280:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2284:	ldr	x17, [x16, #64]
    2288:	add	x16, x16, #0x40
    228c:	br	x17

0000000000002290 <PyBuffer_Release@plt>:
    2290:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2294:	ldr	x17, [x16, #72]
    2298:	add	x16, x16, #0x48
    229c:	br	x17

00000000000022a0 <PyLong_AsUnsignedLongLong@plt>:
    22a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22a4:	ldr	x17, [x16, #80]
    22a8:	add	x16, x16, #0x50
    22ac:	br	x17

00000000000022b0 <__cxa_finalize@plt>:
    22b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22b4:	ldr	x17, [x16, #88]
    22b8:	add	x16, x16, #0x58
    22bc:	br	x17

00000000000022c0 <PyMem_RawMalloc@plt>:
    22c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22c4:	ldr	x17, [x16, #96]
    22c8:	add	x16, x16, #0x60
    22cc:	br	x17

00000000000022d0 <PyBuffer_IsContiguous@plt>:
    22d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22d4:	ldr	x17, [x16, #104]
    22d8:	add	x16, x16, #0x68
    22dc:	br	x17

00000000000022e0 <PyBytes_FromStringAndSize@plt>:
    22e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22e4:	ldr	x17, [x16, #112]
    22e8:	add	x16, x16, #0x70
    22ec:	br	x17

00000000000022f0 <_Py_Dealloc@plt>:
    22f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22f4:	ldr	x17, [x16, #120]
    22f8:	add	x16, x16, #0x78
    22fc:	br	x17

0000000000002300 <PyErr_NoMemory@plt>:
    2300:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2304:	ldr	x17, [x16, #128]
    2308:	add	x16, x16, #0x80
    230c:	br	x17

0000000000002310 <PyErr_NewExceptionWithDoc@plt>:
    2310:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2314:	ldr	x17, [x16, #136]
    2318:	add	x16, x16, #0x88
    231c:	br	x17

0000000000002320 <PyThread_acquire_lock@plt>:
    2320:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2324:	ldr	x17, [x16, #144]
    2328:	add	x16, x16, #0x90
    232c:	br	x17

0000000000002330 <lzma_easy_encoder@plt>:
    2330:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16, #152]
    2338:	add	x16, x16, #0x98
    233c:	br	x17

0000000000002340 <_PyArg_UnpackKeywords@plt>:
    2340:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #160]
    2348:	add	x16, x16, #0xa0
    234c:	br	x17

0000000000002350 <PyErr_SetString@plt>:
    2350:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #168]
    2358:	add	x16, x16, #0xa8
    235c:	br	x17

0000000000002360 <PyMapping_GetItemString@plt>:
    2360:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #176]
    2368:	add	x16, x16, #0xb0
    236c:	br	x17

0000000000002370 <lzma_raw_encoder@plt>:
    2370:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #184]
    2378:	add	x16, x16, #0xb8
    237c:	br	x17

0000000000002380 <PyMem_Realloc@plt>:
    2380:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #192]
    2388:	add	x16, x16, #0xc0
    238c:	br	x17

0000000000002390 <PyErr_SetNone@plt>:
    2390:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #200]
    2398:	add	x16, x16, #0xc8
    239c:	br	x17

00000000000023a0 <PyErr_ExceptionMatches@plt>:
    23a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #208]
    23a8:	add	x16, x16, #0xd0
    23ac:	br	x17

00000000000023b0 <lzma_properties_size@plt>:
    23b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #216]
    23b8:	add	x16, x16, #0xd8
    23bc:	br	x17

00000000000023c0 <PySequence_GetItem@plt>:
    23c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #224]
    23c8:	add	x16, x16, #0xe0
    23cc:	br	x17

00000000000023d0 <lzma_auto_decoder@plt>:
    23d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #232]
    23d8:	add	x16, x16, #0xe8
    23dc:	br	x17

00000000000023e0 <PyType_Ready@plt>:
    23e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #240]
    23e8:	add	x16, x16, #0xf0
    23ec:	br	x17

00000000000023f0 <PyLong_AsSsize_t@plt>:
    23f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #248]
    23f8:	add	x16, x16, #0xf8
    23fc:	br	x17

0000000000002400 <_PyArg_BadArgument@plt>:
    2400:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #256]
    2408:	add	x16, x16, #0x100
    240c:	br	x17

0000000000002410 <PySequence_Size@plt>:
    2410:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #264]
    2418:	add	x16, x16, #0x108
    241c:	br	x17

0000000000002420 <PyErr_Clear@plt>:
    2420:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #272]
    2428:	add	x16, x16, #0x110
    242c:	br	x17

0000000000002430 <PyBool_FromLong@plt>:
    2430:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #280]
    2438:	add	x16, x16, #0x118
    243c:	br	x17

0000000000002440 <__gmon_start__@plt>:
    2440:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #288]
    2448:	add	x16, x16, #0x120
    244c:	br	x17

0000000000002450 <PyTuple_New@plt>:
    2450:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #296]
    2458:	add	x16, x16, #0x128
    245c:	br	x17

0000000000002460 <_PyArg_CheckPositional@plt>:
    2460:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #304]
    2468:	add	x16, x16, #0x130
    246c:	br	x17

0000000000002470 <lzma_properties_decode@plt>:
    2470:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #312]
    2478:	add	x16, x16, #0x138
    247c:	br	x17

0000000000002480 <PyErr_Occurred@plt>:
    2480:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #320]
    2488:	add	x16, x16, #0x140
    248c:	br	x17

0000000000002490 <PyModule_Create2@plt>:
    2490:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #328]
    2498:	add	x16, x16, #0x148
    249c:	br	x17

00000000000024a0 <lzma_stream_decoder@plt>:
    24a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #336]
    24a8:	add	x16, x16, #0x150
    24ac:	br	x17

00000000000024b0 <lzma_alone_decoder@plt>:
    24b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #344]
    24b8:	add	x16, x16, #0x158
    24bc:	br	x17

00000000000024c0 <lzma_end@plt>:
    24c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #352]
    24c8:	add	x16, x16, #0x160
    24cc:	br	x17

00000000000024d0 <PyMem_RawFree@plt>:
    24d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #360]
    24d8:	add	x16, x16, #0x168
    24dc:	br	x17

00000000000024e0 <lzma_get_check@plt>:
    24e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #368]
    24e8:	add	x16, x16, #0x170
    24ec:	br	x17

00000000000024f0 <free@plt>:
    24f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #376]
    24f8:	add	x16, x16, #0x178
    24fc:	br	x17

0000000000002500 <PyThread_allocate_lock@plt>:
    2500:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #384]
    2508:	add	x16, x16, #0x180
    250c:	br	x17

0000000000002510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    2510:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #392]
    2518:	add	x16, x16, #0x188
    251c:	br	x17

0000000000002520 <PyThread_release_lock@plt>:
    2520:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #400]
    2528:	add	x16, x16, #0x190
    252c:	br	x17

0000000000002530 <lzma_raw_decoder@plt>:
    2530:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #408]
    2538:	add	x16, x16, #0x198
    253c:	br	x17

0000000000002540 <PyDict_New@plt>:
    2540:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #416]
    2548:	add	x16, x16, #0x1a0
    254c:	br	x17

0000000000002550 <lzma_alone_encoder@plt>:
    2550:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #424]
    2558:	add	x16, x16, #0x1a8
    255c:	br	x17

0000000000002560 <PyObject_GetBuffer@plt>:
    2560:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #432]
    2568:	add	x16, x16, #0x1b0
    256c:	br	x17

0000000000002570 <lzma_properties_encode@plt>:
    2570:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #440]
    2578:	add	x16, x16, #0x1b8
    257c:	br	x17

0000000000002580 <PyEval_SaveThread@plt>:
    2580:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #448]
    2588:	add	x16, x16, #0x1c0
    258c:	br	x17

0000000000002590 <PyModule_AddObject@plt>:
    2590:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #456]
    2598:	add	x16, x16, #0x1c8
    259c:	br	x17

00000000000025a0 <PyType_IsSubtype@plt>:
    25a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #464]
    25a8:	add	x16, x16, #0x1d0
    25ac:	br	x17

00000000000025b0 <PyErr_Format@plt>:
    25b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #472]
    25b8:	add	x16, x16, #0x1d8
    25bc:	br	x17

00000000000025c0 <lzma_check_is_supported@plt>:
    25c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #480]
    25c8:	add	x16, x16, #0x1e0
    25cc:	br	x17

00000000000025d0 <lzma_stream_encoder@plt>:
    25d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #488]
    25d8:	add	x16, x16, #0x1e8
    25dc:	br	x17

00000000000025e0 <PyLong_FromLongLong@plt>:
    25e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #496]
    25e8:	add	x16, x16, #0x1f0
    25ec:	br	x17

00000000000025f0 <PyNumber_Index@plt>:
    25f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #504]
    25f8:	add	x16, x16, #0x1f8
    25fc:	br	x17

0000000000002600 <_PyLong_AsInt@plt>:
    2600:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #512]
    2608:	add	x16, x16, #0x200
    260c:	br	x17

0000000000002610 <lzma_lzma_preset@plt>:
    2610:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #520]
    2618:	add	x16, x16, #0x208
    261c:	br	x17

0000000000002620 <PyMem_Malloc@plt>:
    2620:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #528]
    2628:	add	x16, x16, #0x210
    262c:	br	x17

0000000000002630 <PyThread_free_lock@plt>:
    2630:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #536]
    2638:	add	x16, x16, #0x218
    263c:	br	x17

0000000000002640 <_PyDict_SetItemId@plt>:
    2640:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #544]
    2648:	add	x16, x16, #0x220
    264c:	br	x17

Disassembly of section .text:

0000000000002650 <PyInit__lzma@@Base-0xd4>:
    2650:	adrp	x0, 16000 <PyInit__lzma@@Base+0x138dc>
    2654:	ldr	x0, [x0, #4032]
    2658:	cbz	x0, 2660 <_PyDict_SetItemId@plt+0x20>
    265c:	b	2440 <__gmon_start__@plt>
    2660:	ret
    2664:	nop
    2668:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    266c:	add	x0, x0, #0x9b0
    2670:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2674:	add	x1, x1, #0x9b0
    2678:	cmp	x1, x0
    267c:	b.eq	2694 <_PyDict_SetItemId@plt+0x54>  // b.none
    2680:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    2684:	ldr	x1, [x1, #3976]
    2688:	cbz	x1, 2694 <_PyDict_SetItemId@plt+0x54>
    268c:	mov	x16, x1
    2690:	br	x16
    2694:	ret
    2698:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    269c:	add	x0, x0, #0x9b0
    26a0:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    26a4:	add	x1, x1, #0x9b0
    26a8:	sub	x1, x1, x0
    26ac:	lsr	x2, x1, #63
    26b0:	add	x1, x2, x1, asr #3
    26b4:	cmp	xzr, x1, asr #1
    26b8:	asr	x1, x1, #1
    26bc:	b.eq	26d4 <_PyDict_SetItemId@plt+0x94>  // b.none
    26c0:	adrp	x2, 16000 <PyInit__lzma@@Base+0x138dc>
    26c4:	ldr	x2, [x2, #4064]
    26c8:	cbz	x2, 26d4 <_PyDict_SetItemId@plt+0x94>
    26cc:	mov	x16, x2
    26d0:	br	x16
    26d4:	ret
    26d8:	stp	x29, x30, [sp, #-32]!
    26dc:	mov	x29, sp
    26e0:	str	x19, [sp, #16]
    26e4:	adrp	x19, 17000 <PyInit__lzma@@Base+0x148dc>
    26e8:	ldrb	w0, [x19, #2480]
    26ec:	cbnz	w0, 2714 <_PyDict_SetItemId@plt+0xd4>
    26f0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x138dc>
    26f4:	ldr	x0, [x0, #3992]
    26f8:	cbz	x0, 2708 <_PyDict_SetItemId@plt+0xc8>
    26fc:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    2700:	ldr	x0, [x0, #552]
    2704:	bl	22b0 <__cxa_finalize@plt>
    2708:	bl	2668 <_PyDict_SetItemId@plt+0x28>
    270c:	mov	w0, #0x1                   	// #1
    2710:	strb	w0, [x19, #2480]
    2714:	ldr	x19, [sp, #16]
    2718:	ldp	x29, x30, [sp], #32
    271c:	ret
    2720:	b	2698 <_PyDict_SetItemId@plt+0x58>

0000000000002724 <PyInit__lzma@@Base>:
    2724:	stp	x29, x30, [sp, #-32]!
    2728:	stp	x20, x19, [sp, #16]
    272c:	mov	x29, sp
    2730:	mov	x0, xzr
    2734:	bl	2450 <PyTuple_New@plt>
    2738:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    273c:	str	x0, [x8, #2488]
    2740:	cbz	x0, 2b44 <PyInit__lzma@@Base+0x420>
    2744:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    2748:	add	x0, x0, #0x230
    274c:	mov	w1, #0x3f5                 	// #1013
    2750:	bl	2490 <PyModule_Create2@plt>
    2754:	cbz	x0, 2b44 <PyInit__lzma@@Base+0x420>
    2758:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    275c:	add	x1, x1, #0x6be
    2760:	mov	x2, xzr
    2764:	mov	x19, x0
    2768:	bl	2220 <PyModule_AddIntConstant@plt>
    276c:	cmn	w0, #0x1
    2770:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2774:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2778:	add	x1, x1, #0xc04
    277c:	mov	w2, #0x1                   	// #1
    2780:	mov	x0, x19
    2784:	bl	2220 <PyModule_AddIntConstant@plt>
    2788:	cmn	w0, #0x1
    278c:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2790:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2794:	add	x1, x1, #0x6ca
    2798:	mov	w2, #0x2                   	// #2
    279c:	mov	x0, x19
    27a0:	bl	2220 <PyModule_AddIntConstant@plt>
    27a4:	cmn	w0, #0x1
    27a8:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    27ac:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    27b0:	add	x1, x1, #0xda9
    27b4:	mov	w2, #0x3                   	// #3
    27b8:	mov	x0, x19
    27bc:	bl	2220 <PyModule_AddIntConstant@plt>
    27c0:	cmn	w0, #0x1
    27c4:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    27c8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    27cc:	add	x1, x1, #0x6d7
    27d0:	mov	x0, x19
    27d4:	mov	x2, xzr
    27d8:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    27dc:	cmn	w0, #0x1
    27e0:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    27e4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    27e8:	add	x1, x1, #0x6e2
    27ec:	mov	w2, #0x1                   	// #1
    27f0:	mov	x0, x19
    27f4:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    27f8:	cmn	w0, #0x1
    27fc:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2800:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2804:	add	x1, x1, #0x6ee
    2808:	mov	w2, #0x4                   	// #4
    280c:	mov	x0, x19
    2810:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    2814:	cmn	w0, #0x1
    2818:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    281c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2820:	add	x1, x1, #0x6fa
    2824:	mov	w2, #0xa                   	// #10
    2828:	mov	x0, x19
    282c:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    2830:	cmn	w0, #0x1
    2834:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2838:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    283c:	add	x1, x1, #0x707
    2840:	mov	w2, #0xf                   	// #15
    2844:	mov	x0, x19
    2848:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    284c:	cmn	w0, #0x1
    2850:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2854:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2858:	add	x1, x1, #0x714
    285c:	mov	w2, #0x10                  	// #16
    2860:	mov	x0, x19
    2864:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    2868:	cmn	w0, #0x1
    286c:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2870:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2874:	mov	x2, #0x1                   	// #1
    2878:	add	x1, x1, #0x722
    287c:	movk	x2, #0x4000, lsl #48
    2880:	mov	x0, x19
    2884:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    2888:	cmn	w0, #0x1
    288c:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2890:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2894:	add	x1, x1, #0x72f
    2898:	mov	w2, #0x21                  	// #33
    289c:	mov	x0, x19
    28a0:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    28a4:	cmn	w0, #0x1
    28a8:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    28ac:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    28b0:	add	x1, x1, #0x73c
    28b4:	mov	w2, #0x3                   	// #3
    28b8:	mov	x0, x19
    28bc:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    28c0:	cmn	w0, #0x1
    28c4:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    28c8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    28cc:	add	x1, x1, #0x749
    28d0:	mov	w2, #0x4                   	// #4
    28d4:	mov	x0, x19
    28d8:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    28dc:	cmn	w0, #0x1
    28e0:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    28e4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    28e8:	add	x1, x1, #0x754
    28ec:	mov	w2, #0x6                   	// #6
    28f0:	mov	x0, x19
    28f4:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    28f8:	cmn	w0, #0x1
    28fc:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2900:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2904:	add	x1, x1, #0x760
    2908:	mov	w2, #0x7                   	// #7
    290c:	mov	x0, x19
    2910:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    2914:	cmn	w0, #0x1
    2918:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    291c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2920:	add	x1, x1, #0x76b
    2924:	mov	w2, #0x8                   	// #8
    2928:	mov	x0, x19
    292c:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    2930:	cmn	w0, #0x1
    2934:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2938:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    293c:	add	x1, x1, #0x77b
    2940:	mov	w2, #0x9                   	// #9
    2944:	mov	x0, x19
    2948:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    294c:	cmn	w0, #0x1
    2950:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2954:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2958:	add	x1, x1, #0x788
    295c:	mov	w2, #0x5                   	// #5
    2960:	mov	x0, x19
    2964:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    2968:	cmn	w0, #0x1
    296c:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2970:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2974:	add	x1, x1, #0x797
    2978:	mov	w2, #0x3                   	// #3
    297c:	mov	x0, x19
    2980:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    2984:	cmn	w0, #0x1
    2988:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    298c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2990:	add	x1, x1, #0x79e
    2994:	mov	w2, #0x4                   	// #4
    2998:	mov	x0, x19
    299c:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    29a0:	cmn	w0, #0x1
    29a4:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    29a8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    29ac:	add	x1, x1, #0x7a5
    29b0:	mov	w2, #0x12                  	// #18
    29b4:	mov	x0, x19
    29b8:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    29bc:	cmn	w0, #0x1
    29c0:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    29c4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    29c8:	add	x1, x1, #0x7ac
    29cc:	mov	w2, #0x13                  	// #19
    29d0:	mov	x0, x19
    29d4:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    29d8:	cmn	w0, #0x1
    29dc:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    29e0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    29e4:	add	x1, x1, #0x7b3
    29e8:	mov	w2, #0x14                  	// #20
    29ec:	mov	x0, x19
    29f0:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    29f4:	cmn	w0, #0x1
    29f8:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    29fc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a00:	add	x1, x1, #0x7ba
    2a04:	mov	w2, #0x1                   	// #1
    2a08:	mov	x0, x19
    2a0c:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    2a10:	cmn	w0, #0x1
    2a14:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2a18:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a1c:	add	x1, x1, #0x7c4
    2a20:	mov	w2, #0x2                   	// #2
    2a24:	mov	x0, x19
    2a28:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    2a2c:	cmn	w0, #0x1
    2a30:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2a34:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a38:	add	x1, x1, #0x7d0
    2a3c:	mov	w2, #0x6                   	// #6
    2a40:	mov	x0, x19
    2a44:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    2a48:	cmn	w0, #0x1
    2a4c:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2a50:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a54:	add	x1, x1, #0x7df
    2a58:	mov	w2, #0x80000000            	// #-2147483648
    2a5c:	mov	x0, x19
    2a60:	bl	2b50 <PyInit__lzma@@Base+0x42c>
    2a64:	cmn	w0, #0x1
    2a68:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2a6c:	adrp	x0, 5000 <PyInit__lzma@@Base+0x28dc>
    2a70:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a74:	add	x0, x0, #0x7ee
    2a78:	add	x1, x1, #0x7fe
    2a7c:	mov	x2, xzr
    2a80:	mov	x3, xzr
    2a84:	bl	2310 <PyErr_NewExceptionWithDoc@plt>
    2a88:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    2a8c:	str	x0, [x8, #2496]
    2a90:	cbz	x0, 2b44 <PyInit__lzma@@Base+0x420>
    2a94:	ldr	x8, [x0]
    2a98:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a9c:	mov	x2, x0
    2aa0:	add	x1, x1, #0x7f4
    2aa4:	add	x8, x8, #0x1
    2aa8:	str	x8, [x0]
    2aac:	mov	x0, x19
    2ab0:	bl	2590 <PyModule_AddObject@plt>
    2ab4:	cmn	w0, #0x1
    2ab8:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2abc:	adrp	x20, 17000 <PyInit__lzma@@Base+0x148dc>
    2ac0:	add	x20, x20, #0x298
    2ac4:	mov	x0, x20
    2ac8:	bl	23e0 <PyType_Ready@plt>
    2acc:	cmn	w0, #0x1
    2ad0:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2ad4:	ldr	x8, [x20]
    2ad8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2adc:	add	x1, x1, #0xb66
    2ae0:	mov	x0, x19
    2ae4:	add	x8, x8, #0x1
    2ae8:	mov	x2, x20
    2aec:	str	x8, [x20]
    2af0:	bl	2590 <PyModule_AddObject@plt>
    2af4:	cmn	w0, #0x1
    2af8:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2afc:	adrp	x20, 17000 <PyInit__lzma@@Base+0x148dc>
    2b00:	add	x20, x20, #0x438
    2b04:	mov	x0, x20
    2b08:	bl	23e0 <PyType_Ready@plt>
    2b0c:	cmn	w0, #0x1
    2b10:	b.eq	2b40 <PyInit__lzma@@Base+0x41c>  // b.none
    2b14:	ldr	x8, [x20]
    2b18:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2b1c:	add	x1, x1, #0xd13
    2b20:	mov	x0, x19
    2b24:	add	x8, x8, #0x1
    2b28:	mov	x2, x20
    2b2c:	str	x8, [x20]
    2b30:	bl	2590 <PyModule_AddObject@plt>
    2b34:	cmn	w0, #0x1
    2b38:	csel	x0, xzr, x19, eq  // eq = none
    2b3c:	b	2b44 <PyInit__lzma@@Base+0x420>
    2b40:	mov	x0, xzr
    2b44:	ldp	x20, x19, [sp, #16]
    2b48:	ldp	x29, x30, [sp], #32
    2b4c:	ret
    2b50:	stp	x29, x30, [sp, #-48]!
    2b54:	str	x21, [sp, #16]
    2b58:	stp	x20, x19, [sp, #32]
    2b5c:	mov	x29, sp
    2b60:	mov	x21, x0
    2b64:	mov	x0, x2
    2b68:	mov	x20, x1
    2b6c:	bl	25e0 <PyLong_FromLongLong@plt>
    2b70:	cbz	x0, 2ba4 <PyInit__lzma@@Base+0x480>
    2b74:	mov	x19, x0
    2b78:	mov	x0, x21
    2b7c:	mov	x1, x20
    2b80:	mov	x2, x19
    2b84:	bl	2590 <PyModule_AddObject@plt>
    2b88:	cbz	w0, 2ba8 <PyInit__lzma@@Base+0x484>
    2b8c:	ldr	x8, [x19]
    2b90:	subs	x8, x8, #0x1
    2b94:	str	x8, [x19]
    2b98:	b.ne	2ba4 <PyInit__lzma@@Base+0x480>  // b.any
    2b9c:	mov	x0, x19
    2ba0:	bl	22f0 <_Py_Dealloc@plt>
    2ba4:	mov	w0, #0xffffffff            	// #-1
    2ba8:	ldp	x20, x19, [sp, #32]
    2bac:	ldr	x21, [sp, #16]
    2bb0:	ldp	x29, x30, [sp], #48
    2bb4:	ret
    2bb8:	stp	x29, x30, [sp, #-32]!
    2bbc:	str	x19, [sp, #16]
    2bc0:	mov	x29, sp
    2bc4:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    2bc8:	ldr	x0, [x1, #8]
    2bcc:	ldr	x8, [x8, #3984]
    2bd0:	cmp	x0, x8
    2bd4:	b.eq	2bec <PyInit__lzma@@Base+0x4c8>  // b.none
    2bd8:	mov	x19, x1
    2bdc:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    2be0:	ldr	x1, [x1, #3984]
    2be4:	bl	25a0 <PyType_IsSubtype@plt>
    2be8:	cbz	w0, 2c14 <PyInit__lzma@@Base+0x4f0>
    2bec:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    2bf0:	ldr	x8, [x8, #4016]
    2bf4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2bf8:	add	x1, x1, #0x863
    2bfc:	ldr	x0, [x8]
    2c00:	bl	2350 <PyErr_SetString@plt>
    2c04:	ldr	x19, [sp, #16]
    2c08:	mov	x0, xzr
    2c0c:	ldp	x29, x30, [sp], #32
    2c10:	ret
    2c14:	mov	x0, x19
    2c18:	bl	2600 <_PyLong_AsInt@plt>
    2c1c:	mov	w19, w0
    2c20:	cmn	w0, #0x1
    2c24:	b.eq	2c40 <PyInit__lzma@@Base+0x51c>  // b.none
    2c28:	mov	w0, w19
    2c2c:	bl	25c0 <lzma_check_is_supported@plt>
    2c30:	ldr	x19, [sp, #16]
    2c34:	and	x0, x0, #0xff
    2c38:	ldp	x29, x30, [sp], #32
    2c3c:	b	2430 <PyBool_FromLong@plt>
    2c40:	bl	2480 <PyErr_Occurred@plt>
    2c44:	cbnz	x0, 2c04 <PyInit__lzma@@Base+0x4e0>
    2c48:	b	2c28 <PyInit__lzma@@Base+0x504>
    2c4c:	sub	sp, sp, #0x50
    2c50:	stp	x29, x30, [sp, #48]
    2c54:	stp	x20, x19, [sp, #64]
    2c58:	add	x29, sp, #0x30
    2c5c:	adrp	x8, 5000 <PyInit__lzma@@Base+0x28dc>
    2c60:	add	x8, x8, #0xde8
    2c64:	ldr	q0, [x8]
    2c68:	mov	x0, x1
    2c6c:	mov	x1, sp
    2c70:	str	q0, [sp]
    2c74:	bl	2f4c <PyInit__lzma@@Base+0x828>
    2c78:	ldr	x20, [sp]
    2c7c:	cbz	w0, 2c9c <PyInit__lzma@@Base+0x578>
    2c80:	ldr	x8, [sp, #8]
    2c84:	sub	x0, x29, #0x14
    2c88:	sub	x1, x29, #0x10
    2c8c:	stp	x20, x8, [x29, #-16]
    2c90:	bl	23b0 <lzma_properties_size@plt>
    2c94:	bl	33ec <PyInit__lzma@@Base+0xcc8>
    2c98:	cbz	w0, 2cc4 <PyInit__lzma@@Base+0x5a0>
    2c9c:	mov	x19, xzr
    2ca0:	cmn	x20, #0x1
    2ca4:	b.eq	2cb0 <PyInit__lzma@@Base+0x58c>  // b.none
    2ca8:	ldr	x0, [sp, #8]
    2cac:	bl	2270 <PyMem_Free@plt>
    2cb0:	mov	x0, x19
    2cb4:	ldp	x20, x19, [sp, #64]
    2cb8:	ldp	x29, x30, [sp, #48]
    2cbc:	add	sp, sp, #0x50
    2cc0:	ret
    2cc4:	ldur	w1, [x29, #-20]
    2cc8:	mov	x0, xzr
    2ccc:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    2cd0:	mov	x19, x0
    2cd4:	cbz	x0, 2ca0 <PyInit__lzma@@Base+0x57c>
    2cd8:	add	x1, x19, #0x20
    2cdc:	sub	x0, x29, #0x10
    2ce0:	bl	2570 <lzma_properties_encode@plt>
    2ce4:	bl	33ec <PyInit__lzma@@Base+0xcc8>
    2ce8:	cbz	w0, 2ca0 <PyInit__lzma@@Base+0x57c>
    2cec:	ldr	x8, [x19]
    2cf0:	subs	x8, x8, #0x1
    2cf4:	str	x8, [x19]
    2cf8:	b.ne	2c9c <PyInit__lzma@@Base+0x578>  // b.any
    2cfc:	mov	x0, x19
    2d00:	bl	22f0 <_Py_Dealloc@plt>
    2d04:	b	2c9c <PyInit__lzma@@Base+0x578>
    2d08:	sub	sp, sp, #0x80
    2d0c:	stp	x29, x30, [sp, #96]
    2d10:	stp	x20, x19, [sp, #112]
    2d14:	add	x29, sp, #0x60
    2d18:	mov	x19, x1
    2d1c:	movi	v0.2d, #0x0
    2d20:	cmp	x2, #0x2
    2d24:	stp	q0, q0, [sp, #48]
    2d28:	stp	q0, q0, [sp, #16]
    2d2c:	str	q0, [sp]
    2d30:	b.eq	2d54 <PyInit__lzma@@Base+0x630>  // b.none
    2d34:	mov	x8, x2
    2d38:	adrp	x0, 5000 <PyInit__lzma@@Base+0x28dc>
    2d3c:	add	x0, x0, #0x849
    2d40:	mov	w2, #0x2                   	// #2
    2d44:	mov	w3, #0x2                   	// #2
    2d48:	mov	x1, x8
    2d4c:	bl	2460 <_PyArg_CheckPositional@plt>
    2d50:	cbz	w0, 2d7c <PyInit__lzma@@Base+0x658>
    2d54:	ldr	x0, [x19]
    2d58:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    2d5c:	mov	x20, x0
    2d60:	bl	2480 <PyErr_Occurred@plt>
    2d64:	cbnz	x0, 2d7c <PyInit__lzma@@Base+0x658>
    2d68:	ldr	x0, [x19, #8]
    2d6c:	mov	x1, sp
    2d70:	mov	w2, wzr
    2d74:	bl	2560 <PyObject_GetBuffer@plt>
    2d78:	cbz	w0, 2da4 <PyInit__lzma@@Base+0x680>
    2d7c:	mov	x19, xzr
    2d80:	ldr	x8, [sp, #8]
    2d84:	cbz	x8, 2d90 <PyInit__lzma@@Base+0x66c>
    2d88:	mov	x0, sp
    2d8c:	bl	2290 <PyBuffer_Release@plt>
    2d90:	mov	x0, x19
    2d94:	ldp	x20, x19, [sp, #112]
    2d98:	ldp	x29, x30, [sp, #96]
    2d9c:	add	sp, sp, #0x80
    2da0:	ret
    2da4:	mov	x0, sp
    2da8:	mov	w1, #0x43                  	// #67
    2dac:	bl	22d0 <PyBuffer_IsContiguous@plt>
    2db0:	cbz	w0, 2e3c <PyInit__lzma@@Base+0x718>
    2db4:	ldr	x2, [sp]
    2db8:	ldr	x3, [sp, #16]
    2dbc:	sub	x0, x29, #0x10
    2dc0:	mov	x1, xzr
    2dc4:	stur	x20, [x29, #-16]
    2dc8:	bl	2470 <lzma_properties_decode@plt>
    2dcc:	bl	33ec <PyInit__lzma@@Base+0xcc8>
    2dd0:	mov	x19, xzr
    2dd4:	cbnz	w0, 2d80 <PyInit__lzma@@Base+0x65c>
    2dd8:	bl	2540 <PyDict_New@plt>
    2ddc:	mov	x19, x0
    2de0:	cbz	x0, 2f40 <PyInit__lzma@@Base+0x81c>
    2de4:	ldur	x2, [x29, #-16]
    2de8:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2dec:	add	x1, x1, #0x6e0
    2df0:	mov	x0, x19
    2df4:	bl	34d8 <PyInit__lzma@@Base+0xdb4>
    2df8:	cmn	w0, #0x1
    2dfc:	b.eq	2f24 <PyInit__lzma@@Base+0x800>  // b.none
    2e00:	ldur	x2, [x29, #-16]
    2e04:	cmp	x2, #0x20
    2e08:	b.gt	2e60 <PyInit__lzma@@Base+0x73c>
    2e0c:	sub	x8, x2, #0x4
    2e10:	cmp	x8, #0x6
    2e14:	b.cs	2ee0 <PyInit__lzma@@Base+0x7bc>  // b.hs, b.nlast
    2e18:	ldur	x8, [x29, #-8]
    2e1c:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2e20:	add	x1, x1, #0x788
    2e24:	ldr	w2, [x8]
    2e28:	mov	x0, x19
    2e2c:	bl	34d8 <PyInit__lzma@@Base+0xdb4>
    2e30:	cmn	w0, #0x1
    2e34:	b.ne	2f40 <PyInit__lzma@@Base+0x81c>  // b.any
    2e38:	b	2f24 <PyInit__lzma@@Base+0x800>
    2e3c:	ldr	x3, [x19, #8]
    2e40:	adrp	x0, 5000 <PyInit__lzma@@Base+0x28dc>
    2e44:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2e48:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    2e4c:	add	x0, x0, #0x849
    2e50:	add	x1, x1, #0xb43
    2e54:	add	x2, x2, #0xb4e
    2e58:	bl	2400 <_PyArg_BadArgument@plt>
    2e5c:	b	2d7c <PyInit__lzma@@Base+0x658>
    2e60:	cmp	x2, #0x21
    2e64:	b.eq	2efc <PyInit__lzma@@Base+0x7d8>  // b.none
    2e68:	mov	x8, #0x1                   	// #1
    2e6c:	movk	x8, #0x4000, lsl #48
    2e70:	cmp	x2, x8
    2e74:	b.ne	2f0c <PyInit__lzma@@Base+0x7e8>  // b.any
    2e78:	ldur	x20, [x29, #-8]
    2e7c:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2e80:	add	x1, x1, #0x6f8
    2e84:	mov	x0, x19
    2e88:	ldr	w2, [x20, #20]
    2e8c:	bl	34d8 <PyInit__lzma@@Base+0xdb4>
    2e90:	cmn	w0, #0x1
    2e94:	b.eq	2f24 <PyInit__lzma@@Base+0x800>  // b.none
    2e98:	ldr	w2, [x20, #24]
    2e9c:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2ea0:	add	x1, x1, #0x710
    2ea4:	mov	x0, x19
    2ea8:	bl	34d8 <PyInit__lzma@@Base+0xdb4>
    2eac:	cmn	w0, #0x1
    2eb0:	b.eq	2f24 <PyInit__lzma@@Base+0x800>  // b.none
    2eb4:	ldr	w2, [x20, #28]
    2eb8:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2ebc:	add	x1, x1, #0x728
    2ec0:	mov	x0, x19
    2ec4:	bl	34d8 <PyInit__lzma@@Base+0xdb4>
    2ec8:	cmn	w0, #0x1
    2ecc:	b.eq	2f24 <PyInit__lzma@@Base+0x800>  // b.none
    2ed0:	ldr	w2, [x20]
    2ed4:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2ed8:	add	x1, x1, #0x740
    2edc:	b	2e28 <PyInit__lzma@@Base+0x704>
    2ee0:	cmp	x2, #0x3
    2ee4:	b.ne	2f0c <PyInit__lzma@@Base+0x7e8>  // b.any
    2ee8:	ldur	x8, [x29, #-8]
    2eec:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2ef0:	add	x1, x1, #0x770
    2ef4:	ldr	w2, [x8, #4]
    2ef8:	b	2e28 <PyInit__lzma@@Base+0x704>
    2efc:	ldur	x8, [x29, #-8]
    2f00:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2f04:	add	x1, x1, #0x758
    2f08:	b	2e24 <PyInit__lzma@@Base+0x700>
    2f0c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    2f10:	ldr	x8, [x8, #4008]
    2f14:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2f18:	add	x1, x1, #0x8e8
    2f1c:	ldr	x0, [x8]
    2f20:	bl	25b0 <PyErr_Format@plt>
    2f24:	ldr	x8, [x19]
    2f28:	subs	x8, x8, #0x1
    2f2c:	str	x8, [x19]
    2f30:	b.ne	2f3c <PyInit__lzma@@Base+0x818>  // b.any
    2f34:	mov	x0, x19
    2f38:	bl	22f0 <_Py_Dealloc@plt>
    2f3c:	mov	x19, xzr
    2f40:	ldur	x0, [x29, #-8]
    2f44:	bl	24f0 <free@plt>
    2f48:	b	2d80 <PyInit__lzma@@Base+0x65c>
    2f4c:	sub	sp, sp, #0xc0
    2f50:	stp	x29, x30, [sp, #144]
    2f54:	stp	x22, x21, [sp, #160]
    2f58:	stp	x20, x19, [sp, #176]
    2f5c:	add	x29, sp, #0x90
    2f60:	mov	x19, x1
    2f64:	mov	x20, x0
    2f68:	bl	2230 <PyMapping_Check@plt>
    2f6c:	cbz	w0, 301c <PyInit__lzma@@Base+0x8f8>
    2f70:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2f74:	add	x1, x1, #0x8bc
    2f78:	mov	x0, x20
    2f7c:	bl	2360 <PyMapping_GetItemString@plt>
    2f80:	cbz	x0, 3030 <PyInit__lzma@@Base+0x90c>
    2f84:	mov	x21, x0
    2f88:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    2f8c:	str	x0, [x19]
    2f90:	ldr	x8, [x21]
    2f94:	subs	x8, x8, #0x1
    2f98:	str	x8, [x21]
    2f9c:	b.ne	2fa8 <PyInit__lzma@@Base+0x884>  // b.any
    2fa0:	mov	x0, x21
    2fa4:	bl	22f0 <_Py_Dealloc@plt>
    2fa8:	bl	2480 <PyErr_Occurred@plt>
    2fac:	cbnz	x0, 305c <PyInit__lzma@@Base+0x938>
    2fb0:	ldr	x2, [x19]
    2fb4:	cmp	x2, #0x20
    2fb8:	b.gt	3074 <PyInit__lzma@@Base+0x950>
    2fbc:	sub	x8, x2, #0x4
    2fc0:	cmp	x8, #0x6
    2fc4:	b.cs	30f8 <PyInit__lzma@@Base+0x9d4>  // b.hs, b.nlast
    2fc8:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    2fcc:	ldr	x0, [x8, #2488]
    2fd0:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    2fd4:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    2fd8:	adrp	x5, 3000 <PyInit__lzma@@Base+0x8dc>
    2fdc:	add	x2, x2, #0xa02
    2fe0:	add	x3, x3, #0x6c8
    2fe4:	add	x5, x5, #0x2d8
    2fe8:	sub	x4, x29, #0x8
    2fec:	sub	x6, x29, #0x10
    2ff0:	mov	x1, x20
    2ff4:	stur	wzr, [x29, #-16]
    2ff8:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    2ffc:	cbz	w0, 30d8 <PyInit__lzma@@Base+0x9b4>
    3000:	mov	w0, #0x4                   	// #4
    3004:	bl	2620 <PyMem_Malloc@plt>
    3008:	cbz	x0, 3160 <PyInit__lzma@@Base+0xa3c>
    300c:	str	wzr, [x0]
    3010:	ldur	w8, [x29, #-16]
    3014:	str	w8, [x0]
    3018:	b	3164 <PyInit__lzma@@Base+0xa40>
    301c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3020:	ldr	x8, [x8, #4016]
    3024:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3028:	add	x1, x1, #0x888
    302c:	b	3054 <PyInit__lzma@@Base+0x930>
    3030:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3034:	ldr	x8, [x8, #4024]
    3038:	ldr	x0, [x8]
    303c:	bl	23a0 <PyErr_ExceptionMatches@plt>
    3040:	cbz	w0, 3060 <PyInit__lzma@@Base+0x93c>
    3044:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3048:	ldr	x8, [x8, #4008]
    304c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3050:	add	x1, x1, #0x8bf
    3054:	ldr	x0, [x8]
    3058:	bl	2350 <PyErr_SetString@plt>
    305c:	mov	w0, wzr
    3060:	ldp	x20, x19, [sp, #176]
    3064:	ldp	x22, x21, [sp, #160]
    3068:	ldp	x29, x30, [sp, #144]
    306c:	add	sp, sp, #0xc0
    3070:	ret
    3074:	mov	x8, #0x1                   	// #1
    3078:	movk	x8, #0x4000, lsl #48
    307c:	cmp	x2, x8
    3080:	b.eq	308c <PyInit__lzma@@Base+0x968>  // b.none
    3084:	cmp	x2, #0x21
    3088:	b.ne	3170 <PyInit__lzma@@Base+0xa4c>  // b.any
    308c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3090:	mov	w8, #0x6                   	// #6
    3094:	add	x1, x1, #0x900
    3098:	mov	x0, x20
    309c:	stur	w8, [x29, #-20]
    30a0:	bl	2360 <PyMapping_GetItemString@plt>
    30a4:	stur	x0, [x29, #-16]
    30a8:	cbz	x0, 318c <PyInit__lzma@@Base+0xa68>
    30ac:	sub	x1, x29, #0x14
    30b0:	bl	32d8 <PyInit__lzma@@Base+0xbb4>
    30b4:	mov	w21, w0
    30b8:	ldur	x0, [x29, #-16]
    30bc:	ldr	x8, [x0]
    30c0:	subs	x8, x8, #0x1
    30c4:	str	x8, [x0]
    30c8:	b.ne	30d0 <PyInit__lzma@@Base+0x9ac>  // b.any
    30cc:	bl	22f0 <_Py_Dealloc@plt>
    30d0:	cbnz	w21, 31a4 <PyInit__lzma@@Base+0xa80>
    30d4:	b	31fc <PyInit__lzma@@Base+0xad8>
    30d8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    30dc:	ldr	x8, [x8, #4008]
    30e0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    30e4:	add	x1, x1, #0xa3e
    30e8:	ldr	x0, [x8]
    30ec:	bl	2350 <PyErr_SetString@plt>
    30f0:	mov	x0, xzr
    30f4:	b	3164 <PyInit__lzma@@Base+0xa40>
    30f8:	cmp	x2, #0x3
    30fc:	b.ne	3170 <PyInit__lzma@@Base+0xa4c>  // b.any
    3100:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3104:	ldr	x0, [x8, #2488]
    3108:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    310c:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    3110:	adrp	x5, 3000 <PyInit__lzma@@Base+0x8dc>
    3114:	mov	w8, #0x1                   	// #1
    3118:	add	x2, x2, #0xa02
    311c:	add	x3, x3, #0x6b0
    3120:	add	x5, x5, #0x2d8
    3124:	sub	x4, x29, #0x8
    3128:	sub	x6, x29, #0x10
    312c:	mov	x1, x20
    3130:	stur	w8, [x29, #-16]
    3134:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3138:	cbz	w0, 3210 <PyInit__lzma@@Base+0xaec>
    313c:	mov	w0, #0x28                  	// #40
    3140:	bl	2620 <PyMem_Malloc@plt>
    3144:	cbz	x0, 3160 <PyInit__lzma@@Base+0xa3c>
    3148:	movi	v0.2d, #0x0
    314c:	str	xzr, [x0, #32]
    3150:	stp	q0, q0, [x0]
    3154:	ldur	w8, [x29, #-16]
    3158:	str	w8, [x0, #4]
    315c:	b	3164 <PyInit__lzma@@Base+0xa40>
    3160:	bl	2300 <PyErr_NoMemory@plt>
    3164:	cmp	x0, #0x0
    3168:	str	x0, [x19, #8]
    316c:	b	32ac <PyInit__lzma@@Base+0xb88>
    3170:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3174:	ldr	x8, [x8, #4008]
    3178:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    317c:	add	x1, x1, #0x8e8
    3180:	ldr	x0, [x8]
    3184:	bl	25b0 <PyErr_Format@plt>
    3188:	b	305c <PyInit__lzma@@Base+0x938>
    318c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3190:	ldr	x8, [x8, #4024]
    3194:	ldr	x0, [x8]
    3198:	bl	23a0 <PyErr_ExceptionMatches@plt>
    319c:	cbz	w0, 31fc <PyInit__lzma@@Base+0xad8>
    31a0:	bl	2420 <PyErr_Clear@plt>
    31a4:	mov	w0, #0x70                  	// #112
    31a8:	bl	2620 <PyMem_Malloc@plt>
    31ac:	cbz	x0, 3204 <PyInit__lzma@@Base+0xae0>
    31b0:	movi	v0.2d, #0x0
    31b4:	stp	q0, q0, [x0, #80]
    31b8:	stp	q0, q0, [x0, #48]
    31bc:	stp	q0, q0, [x0, #16]
    31c0:	str	q0, [x0]
    31c4:	ldur	w22, [x29, #-20]
    31c8:	mov	x21, x0
    31cc:	mov	w1, w22
    31d0:	bl	2610 <lzma_lzma_preset@plt>
    31d4:	tst	w0, #0xff
    31d8:	b.eq	3224 <PyInit__lzma@@Base+0xb00>  // b.none
    31dc:	mov	x0, x21
    31e0:	bl	2270 <PyMem_Free@plt>
    31e4:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    31e8:	ldr	x0, [x8, #2496]
    31ec:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    31f0:	add	x1, x1, #0x931
    31f4:	mov	w2, w22
    31f8:	bl	25b0 <PyErr_Format@plt>
    31fc:	mov	x21, xzr
    3200:	b	32a4 <PyInit__lzma@@Base+0xb80>
    3204:	bl	2300 <PyErr_NoMemory@plt>
    3208:	mov	x21, x0
    320c:	b	32a4 <PyInit__lzma@@Base+0xb80>
    3210:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3214:	ldr	x8, [x8, #4008]
    3218:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    321c:	add	x1, x1, #0xa07
    3220:	b	30e8 <PyInit__lzma@@Base+0x9c4>
    3224:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3228:	ldr	x0, [x8, #2488]
    322c:	adrp	x6, 3000 <PyInit__lzma@@Base+0x8dc>
    3230:	adrp	x15, 3000 <PyInit__lzma@@Base+0x8dc>
    3234:	adrp	x16, 3000 <PyInit__lzma@@Base+0x8dc>
    3238:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    323c:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    3240:	add	x9, x21, #0x14
    3244:	add	x10, x21, #0x18
    3248:	add	x11, x21, #0x1c
    324c:	add	x8, x21, #0x20
    3250:	add	x12, x21, #0x24
    3254:	add	x13, x21, #0x28
    3258:	add	x14, x21, #0x2c
    325c:	add	x6, x6, #0x2d8
    3260:	add	x15, x15, #0x390
    3264:	add	x16, x16, #0x334
    3268:	add	x2, x2, #0x950
    326c:	add	x3, x3, #0x658
    3270:	sub	x4, x29, #0x8
    3274:	sub	x5, x29, #0x10
    3278:	mov	x1, x20
    327c:	mov	x7, x21
    3280:	stp	x15, x13, [sp, #80]
    3284:	stp	x16, x8, [sp, #48]
    3288:	stp	x6, x14, [sp, #96]
    328c:	stp	x6, x12, [sp, #64]
    3290:	stp	x6, x11, [sp, #32]
    3294:	stp	x6, x10, [sp, #16]
    3298:	stp	x6, x9, [sp]
    329c:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    32a0:	cbz	w0, 32b4 <PyInit__lzma@@Base+0xb90>
    32a4:	str	x21, [x19, #8]
    32a8:	cmp	x21, #0x0
    32ac:	cset	w0, ne  // ne = any
    32b0:	b	3060 <PyInit__lzma@@Base+0x93c>
    32b4:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    32b8:	ldr	x8, [x8, #4008]
    32bc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    32c0:	add	x1, x1, #0x964
    32c4:	ldr	x0, [x8]
    32c8:	bl	2350 <PyErr_SetString@plt>
    32cc:	mov	x0, x21
    32d0:	bl	2270 <PyMem_Free@plt>
    32d4:	b	31fc <PyInit__lzma@@Base+0xad8>
    32d8:	stp	x29, x30, [sp, #-32]!
    32dc:	stp	x20, x19, [sp, #16]
    32e0:	mov	x29, sp
    32e4:	mov	x19, x1
    32e8:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    32ec:	mov	x20, x0
    32f0:	bl	2480 <PyErr_Occurred@plt>
    32f4:	cbnz	x0, 3318 <PyInit__lzma@@Base+0xbf4>
    32f8:	lsr	x8, x20, #32
    32fc:	cbz	x8, 3320 <PyInit__lzma@@Base+0xbfc>
    3300:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3304:	ldr	x8, [x8, #4040]
    3308:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    330c:	add	x1, x1, #0x98d
    3310:	ldr	x0, [x8]
    3314:	bl	2350 <PyErr_SetString@plt>
    3318:	mov	w0, wzr
    331c:	b	3328 <PyInit__lzma@@Base+0xc04>
    3320:	mov	w0, #0x1                   	// #1
    3324:	str	w20, [x19]
    3328:	ldp	x20, x19, [sp, #16]
    332c:	ldp	x29, x30, [sp], #32
    3330:	ret
    3334:	stp	x29, x30, [sp, #-32]!
    3338:	stp	x20, x19, [sp, #16]
    333c:	mov	x29, sp
    3340:	mov	x19, x1
    3344:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3348:	mov	x20, x0
    334c:	bl	2480 <PyErr_Occurred@plt>
    3350:	cbnz	x0, 3374 <PyInit__lzma@@Base+0xc50>
    3354:	lsr	x8, x20, #32
    3358:	cbz	x8, 337c <PyInit__lzma@@Base+0xc58>
    335c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3360:	ldr	x8, [x8, #4040]
    3364:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3368:	add	x1, x1, #0x9af
    336c:	ldr	x0, [x8]
    3370:	bl	2350 <PyErr_SetString@plt>
    3374:	mov	w0, wzr
    3378:	b	3384 <PyInit__lzma@@Base+0xc60>
    337c:	mov	w0, #0x1                   	// #1
    3380:	str	w20, [x19]
    3384:	ldp	x20, x19, [sp, #16]
    3388:	ldp	x29, x30, [sp], #32
    338c:	ret
    3390:	stp	x29, x30, [sp, #-32]!
    3394:	stp	x20, x19, [sp, #16]
    3398:	mov	x29, sp
    339c:	mov	x19, x1
    33a0:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    33a4:	mov	x20, x0
    33a8:	bl	2480 <PyErr_Occurred@plt>
    33ac:	cbnz	x0, 33d0 <PyInit__lzma@@Base+0xcac>
    33b0:	lsr	x8, x20, #32
    33b4:	cbz	x8, 33d8 <PyInit__lzma@@Base+0xcb4>
    33b8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    33bc:	ldr	x8, [x8, #4040]
    33c0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    33c4:	add	x1, x1, #0x9d2
    33c8:	ldr	x0, [x8]
    33cc:	bl	2350 <PyErr_SetString@plt>
    33d0:	mov	w0, wzr
    33d4:	b	33e0 <PyInit__lzma@@Base+0xcbc>
    33d8:	mov	w0, #0x1                   	// #1
    33dc:	str	w20, [x19]
    33e0:	ldp	x20, x19, [sp, #16]
    33e4:	ldp	x29, x30, [sp], #32
    33e8:	ret
    33ec:	stp	x29, x30, [sp, #-16]!
    33f0:	mov	x29, sp
    33f4:	mov	w2, w0
    33f8:	cmp	w0, #0xb
    33fc:	b.hi	34c0 <PyInit__lzma@@Base+0xd9c>  // b.pmore
    3400:	adrp	x9, 4000 <PyInit__lzma@@Base+0x18dc>
    3404:	mov	w8, w2
    3408:	add	x9, x9, #0x678
    340c:	adr	x10, 3420 <PyInit__lzma@@Base+0xcfc>
    3410:	ldrb	w11, [x9, x8]
    3414:	add	x10, x10, x11, lsl #2
    3418:	mov	w0, wzr
    341c:	br	x10
    3420:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3424:	ldr	x0, [x8, #2496]
    3428:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    342c:	add	x1, x1, #0xa66
    3430:	b	34b0 <PyInit__lzma@@Base+0xd8c>
    3434:	bl	2300 <PyErr_NoMemory@plt>
    3438:	b	34b4 <PyInit__lzma@@Base+0xd90>
    343c:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3440:	ldr	x0, [x8, #2496]
    3444:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3448:	add	x1, x1, #0xa82
    344c:	b	34b0 <PyInit__lzma@@Base+0xd8c>
    3450:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3454:	ldr	x0, [x8, #2496]
    3458:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    345c:	add	x1, x1, #0xa9e
    3460:	b	34b0 <PyInit__lzma@@Base+0xd8c>
    3464:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3468:	ldr	x0, [x8, #2496]
    346c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3470:	add	x1, x1, #0xac4
    3474:	b	34b0 <PyInit__lzma@@Base+0xd8c>
    3478:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    347c:	ldr	x0, [x8, #2496]
    3480:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3484:	add	x1, x1, #0xae3
    3488:	b	34b0 <PyInit__lzma@@Base+0xd8c>
    348c:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3490:	ldr	x0, [x8, #2496]
    3494:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3498:	add	x1, x1, #0xaf6
    349c:	b	34b0 <PyInit__lzma@@Base+0xd8c>
    34a0:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    34a4:	ldr	x0, [x8, #2496]
    34a8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    34ac:	add	x1, x1, #0xb10
    34b0:	bl	2350 <PyErr_SetString@plt>
    34b4:	mov	w0, #0x1                   	// #1
    34b8:	ldp	x29, x30, [sp], #16
    34bc:	ret
    34c0:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    34c4:	ldr	x0, [x8, #2496]
    34c8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    34cc:	add	x1, x1, #0xb1f
    34d0:	bl	25b0 <PyErr_Format@plt>
    34d4:	b	34b4 <PyInit__lzma@@Base+0xd90>
    34d8:	stp	x29, x30, [sp, #-48]!
    34dc:	str	x21, [sp, #16]
    34e0:	stp	x20, x19, [sp, #32]
    34e4:	mov	x29, sp
    34e8:	mov	x21, x0
    34ec:	mov	x0, x2
    34f0:	mov	x19, x1
    34f4:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    34f8:	cbz	x0, 3530 <PyInit__lzma@@Base+0xe0c>
    34fc:	mov	x20, x0
    3500:	mov	x0, x21
    3504:	mov	x1, x19
    3508:	mov	x2, x20
    350c:	bl	2640 <_PyDict_SetItemId@plt>
    3510:	ldr	x8, [x20]
    3514:	mov	w19, w0
    3518:	subs	x8, x8, #0x1
    351c:	str	x8, [x20]
    3520:	b.ne	3534 <PyInit__lzma@@Base+0xe10>  // b.any
    3524:	mov	x0, x20
    3528:	bl	22f0 <_Py_Dealloc@plt>
    352c:	b	3534 <PyInit__lzma@@Base+0xe10>
    3530:	mov	w19, #0xffffffff            	// #-1
    3534:	mov	w0, w19
    3538:	ldp	x20, x19, [sp, #32]
    353c:	ldr	x21, [sp, #16]
    3540:	ldp	x29, x30, [sp], #48
    3544:	ret
    3548:	stp	x29, x30, [sp, #-32]!
    354c:	str	x19, [sp, #16]
    3550:	mov	x29, sp
    3554:	mov	x19, x0
    3558:	add	x0, x0, #0x28
    355c:	bl	24c0 <lzma_end@plt>
    3560:	ldr	x0, [x19, #184]
    3564:	cbz	x0, 356c <PyInit__lzma@@Base+0xe48>
    3568:	bl	2630 <PyThread_free_lock@plt>
    356c:	ldr	x8, [x19, #8]
    3570:	mov	x0, x19
    3574:	ldr	x19, [sp, #16]
    3578:	ldr	x1, [x8, #320]
    357c:	ldp	x29, x30, [sp], #32
    3580:	br	x1
    3584:	sub	sp, sp, #0xc0
    3588:	stp	x29, x30, [sp, #144]
    358c:	stp	x22, x21, [sp, #160]
    3590:	stp	x20, x19, [sp, #176]
    3594:	add	x29, sp, #0x90
    3598:	adrp	x22, 16000 <PyInit__lzma@@Base+0x138dc>
    359c:	ldr	x22, [x22, #4056]
    35a0:	mov	x8, x2
    35a4:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    35a8:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    35ac:	mov	x19, x0
    35b0:	mov	w9, #0x1                   	// #1
    35b4:	mov	w20, #0xffffffff            	// #-1
    35b8:	mov	w10, #0x6                   	// #6
    35bc:	add	x2, x2, #0xbc8
    35c0:	add	x3, x3, #0x800
    35c4:	add	x4, sp, #0x1c
    35c8:	add	x5, sp, #0x18
    35cc:	add	x6, sp, #0x8
    35d0:	mov	x7, sp
    35d4:	mov	x0, x1
    35d8:	mov	x1, x8
    35dc:	stp	w20, w9, [sp, #24]
    35e0:	str	w10, [sp, #20]
    35e4:	stp	x22, x22, [sp]
    35e8:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    35ec:	cbz	w0, 3710 <PyInit__lzma@@Base+0xfec>
    35f0:	ldr	w8, [sp, #28]
    35f4:	cmp	w8, #0x1
    35f8:	b.eq	3620 <PyInit__lzma@@Base+0xefc>  // b.none
    35fc:	ldr	w8, [sp, #24]
    3600:	add	w8, w8, #0x1
    3604:	cmp	w8, #0x2
    3608:	b.cc	3620 <PyInit__lzma@@Base+0xefc>  // b.lo, b.ul, b.last
    360c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3610:	ldr	x8, [x8, #4008]
    3614:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3618:	add	x1, x1, #0xbdd
    361c:	b	3704 <PyInit__lzma@@Base+0xfe0>
    3620:	ldr	x0, [sp, #8]
    3624:	cmp	x0, x22
    3628:	b.eq	364c <PyInit__lzma@@Base+0xf28>  // b.none
    362c:	ldr	x8, [sp]
    3630:	cmp	x8, x22
    3634:	b.eq	364c <PyInit__lzma@@Base+0xf28>  // b.none
    3638:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    363c:	ldr	x8, [x8, #4008]
    3640:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3644:	add	x1, x1, #0xc0e
    3648:	b	3704 <PyInit__lzma@@Base+0xfe0>
    364c:	cmp	x0, x22
    3650:	b.eq	3660 <PyInit__lzma@@Base+0xf3c>  // b.none
    3654:	add	x1, sp, #0x14
    3658:	bl	32d8 <PyInit__lzma@@Base+0xbb4>
    365c:	cbz	w0, 370c <PyInit__lzma@@Base+0xfe8>
    3660:	adrp	x8, 3000 <PyInit__lzma@@Base+0x8dc>
    3664:	add	x8, x8, #0xbcc
    3668:	mov	x20, x19
    366c:	adrp	x9, 3000 <PyInit__lzma@@Base+0x8dc>
    3670:	add	x9, x9, #0xbf0
    3674:	str	x8, [x20, #16]!
    3678:	stp	x9, xzr, [x20, #8]
    367c:	str	x20, [x20, #72]
    3680:	bl	2500 <PyThread_allocate_lock@plt>
    3684:	str	x0, [x20, #168]
    3688:	cbz	x0, 36f4 <PyInit__lzma@@Base+0xfd0>
    368c:	str	wzr, [x19, #176]
    3690:	ldr	w2, [sp, #28]
    3694:	add	x20, x20, #0x18
    3698:	cmp	w2, #0x3
    369c:	b.eq	3728 <PyInit__lzma@@Base+0x1004>  // b.none
    36a0:	cmp	w2, #0x2
    36a4:	b.eq	3760 <PyInit__lzma@@Base+0x103c>  // b.none
    36a8:	cmp	w2, #0x1
    36ac:	b.ne	37bc <PyInit__lzma@@Base+0x1098>  // b.any
    36b0:	ldr	w21, [sp, #24]
    36b4:	cmn	w21, #0x1
    36b8:	b.ne	36c4 <PyInit__lzma@@Base+0xfa0>  // b.any
    36bc:	mov	w21, #0x4                   	// #4
    36c0:	str	w21, [sp, #24]
    36c4:	ldr	x1, [sp]
    36c8:	cmp	x1, x22
    36cc:	b.eq	37d8 <PyInit__lzma@@Base+0x10b4>  // b.none
    36d0:	add	x0, sp, #0x20
    36d4:	bl	3bf8 <PyInit__lzma@@Base+0x14d4>
    36d8:	cmn	w0, #0x1
    36dc:	b.eq	387c <PyInit__lzma@@Base+0x1158>  // b.none
    36e0:	add	x1, sp, #0x20
    36e4:	mov	x0, x20
    36e8:	mov	w2, w21
    36ec:	bl	25d0 <lzma_stream_encoder@plt>
    36f0:	b	3750 <PyInit__lzma@@Base+0x102c>
    36f4:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    36f8:	ldr	x8, [x8, #4000]
    36fc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3700:	add	x1, x1, #0xc3a
    3704:	ldr	x0, [x8]
    3708:	bl	2350 <PyErr_SetString@plt>
    370c:	mov	w20, #0xffffffff            	// #-1
    3710:	mov	w0, w20
    3714:	ldp	x20, x19, [sp, #176]
    3718:	ldp	x22, x21, [sp, #160]
    371c:	ldp	x29, x30, [sp, #144]
    3720:	add	sp, sp, #0xc0
    3724:	ret
    3728:	ldr	x1, [sp]
    372c:	cmp	x1, x22
    3730:	b.eq	37f0 <PyInit__lzma@@Base+0x10cc>  // b.none
    3734:	add	x0, sp, #0x20
    3738:	bl	3bf8 <PyInit__lzma@@Base+0x14d4>
    373c:	cmn	w0, #0x1
    3740:	b.eq	387c <PyInit__lzma@@Base+0x1158>  // b.none
    3744:	add	x1, sp, #0x20
    3748:	mov	x0, x20
    374c:	bl	2370 <lzma_raw_encoder@plt>
    3750:	mov	w20, w0
    3754:	add	x0, sp, #0x20
    3758:	bl	3cf0 <PyInit__lzma@@Base+0x15cc>
    375c:	b	3870 <PyInit__lzma@@Base+0x114c>
    3760:	ldr	x1, [sp]
    3764:	cmp	x1, x22
    3768:	b.eq	380c <PyInit__lzma@@Base+0x10e8>  // b.none
    376c:	add	x0, sp, #0x20
    3770:	bl	3bf8 <PyInit__lzma@@Base+0x14d4>
    3774:	cmn	w0, #0x1
    3778:	b.eq	387c <PyInit__lzma@@Base+0x1158>  // b.none
    377c:	ldr	x8, [sp, #32]
    3780:	mov	x9, #0x1                   	// #1
    3784:	movk	x9, #0x4000, lsl #48
    3788:	cmp	x8, x9
    378c:	b.ne	379c <PyInit__lzma@@Base+0x1078>  // b.any
    3790:	ldr	x8, [sp, #48]
    3794:	cmn	x8, #0x1
    3798:	b.eq	3850 <PyInit__lzma@@Base+0x112c>  // b.none
    379c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    37a0:	ldr	x8, [x8, #4008]
    37a4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    37a8:	add	x1, x1, #0xca3
    37ac:	ldr	x0, [x8]
    37b0:	bl	2350 <PyErr_SetString@plt>
    37b4:	mov	w20, #0xb                   	// #11
    37b8:	b	3860 <PyInit__lzma@@Base+0x113c>
    37bc:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    37c0:	ldr	x8, [x8, #4008]
    37c4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    37c8:	add	x1, x1, #0xc52
    37cc:	ldr	x0, [x8]
    37d0:	bl	25b0 <PyErr_Format@plt>
    37d4:	b	387c <PyInit__lzma@@Base+0x1158>
    37d8:	ldr	w1, [sp, #20]
    37dc:	mov	x0, x20
    37e0:	mov	w2, w21
    37e4:	bl	2330 <lzma_easy_encoder@plt>
    37e8:	mov	w20, w0
    37ec:	b	3870 <PyInit__lzma@@Base+0x114c>
    37f0:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    37f4:	ldr	x8, [x8, #4008]
    37f8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    37fc:	add	x1, x1, #0xce9
    3800:	ldr	x0, [x8]
    3804:	bl	2350 <PyErr_SetString@plt>
    3808:	b	387c <PyInit__lzma@@Base+0x1158>
    380c:	ldr	w21, [sp, #20]
    3810:	add	x0, sp, #0x20
    3814:	mov	w1, w21
    3818:	bl	2610 <lzma_lzma_preset@plt>
    381c:	tst	w0, #0xff
    3820:	b.eq	383c <PyInit__lzma@@Base+0x1118>  // b.none
    3824:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3828:	ldr	x0, [x8, #2496]
    382c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3830:	add	x1, x1, #0x931
    3834:	mov	w2, w21
    3838:	b	37d0 <PyInit__lzma@@Base+0x10ac>
    383c:	add	x1, sp, #0x20
    3840:	mov	x0, x20
    3844:	bl	2550 <lzma_alone_encoder@plt>
    3848:	mov	w20, w0
    384c:	b	3868 <PyInit__lzma@@Base+0x1144>
    3850:	ldr	x1, [sp, #40]
    3854:	mov	x0, x20
    3858:	bl	2550 <lzma_alone_encoder@plt>
    385c:	mov	w20, w0
    3860:	add	x0, sp, #0x20
    3864:	bl	3cf0 <PyInit__lzma@@Base+0x15cc>
    3868:	bl	2480 <PyErr_Occurred@plt>
    386c:	cbnz	x0, 387c <PyInit__lzma@@Base+0x1158>
    3870:	mov	w0, w20
    3874:	bl	33ec <PyInit__lzma@@Base+0xcc8>
    3878:	cbz	w0, 388c <PyInit__lzma@@Base+0x1168>
    387c:	ldr	x0, [x19, #184]
    3880:	bl	2630 <PyThread_free_lock@plt>
    3884:	str	xzr, [x19, #184]
    3888:	b	370c <PyInit__lzma@@Base+0xfe8>
    388c:	mov	w20, wzr
    3890:	b	3710 <PyInit__lzma@@Base+0xfec>
    3894:	sub	sp, sp, #0x70
    3898:	stp	x29, x30, [sp, #80]
    389c:	stp	x20, x19, [sp, #96]
    38a0:	add	x29, sp, #0x50
    38a4:	mov	x20, x1
    38a8:	mov	x19, x0
    38ac:	movi	v0.2d, #0x0
    38b0:	mov	x1, sp
    38b4:	mov	x0, x20
    38b8:	mov	w2, wzr
    38bc:	stp	q0, q0, [sp, #48]
    38c0:	stp	q0, q0, [sp, #16]
    38c4:	str	q0, [sp]
    38c8:	bl	2560 <PyObject_GetBuffer@plt>
    38cc:	cbz	w0, 38d8 <PyInit__lzma@@Base+0x11b4>
    38d0:	mov	x20, xzr
    38d4:	b	3984 <PyInit__lzma@@Base+0x1260>
    38d8:	mov	x0, sp
    38dc:	mov	w1, #0x43                  	// #67
    38e0:	bl	22d0 <PyBuffer_IsContiguous@plt>
    38e4:	cbz	w0, 3940 <PyInit__lzma@@Base+0x121c>
    38e8:	ldr	x0, [x19, #184]
    38ec:	mov	w1, wzr
    38f0:	bl	2320 <PyThread_acquire_lock@plt>
    38f4:	cbnz	w0, 3918 <PyInit__lzma@@Base+0x11f4>
    38f8:	bl	2580 <PyEval_SaveThread@plt>
    38fc:	ldr	x8, [x19, #184]
    3900:	mov	x20, x0
    3904:	mov	w1, #0x1                   	// #1
    3908:	mov	x0, x8
    390c:	bl	2320 <PyThread_acquire_lock@plt>
    3910:	mov	x0, x20
    3914:	bl	2260 <PyEval_RestoreThread@plt>
    3918:	ldr	w8, [x19, #176]
    391c:	cbz	w8, 3964 <PyInit__lzma@@Base+0x1240>
    3920:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3924:	ldr	x8, [x8, #4008]
    3928:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    392c:	add	x1, x1, #0xb84
    3930:	ldr	x0, [x8]
    3934:	bl	2350 <PyErr_SetString@plt>
    3938:	mov	x20, xzr
    393c:	b	397c <PyInit__lzma@@Base+0x1258>
    3940:	adrp	x0, 5000 <PyInit__lzma@@Base+0x28dc>
    3944:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3948:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    394c:	add	x0, x0, #0xd26
    3950:	add	x1, x1, #0xb7b
    3954:	add	x2, x2, #0xb4e
    3958:	mov	x3, x20
    395c:	bl	2400 <_PyArg_BadArgument@plt>
    3960:	b	38d0 <PyInit__lzma@@Base+0x11ac>
    3964:	ldr	x1, [sp]
    3968:	ldr	x2, [sp, #16]
    396c:	mov	x0, x19
    3970:	mov	w3, wzr
    3974:	bl	3a48 <PyInit__lzma@@Base+0x1324>
    3978:	mov	x20, x0
    397c:	ldr	x0, [x19, #184]
    3980:	bl	2520 <PyThread_release_lock@plt>
    3984:	ldr	x8, [sp, #8]
    3988:	cbz	x8, 3994 <PyInit__lzma@@Base+0x1270>
    398c:	mov	x0, sp
    3990:	bl	2290 <PyBuffer_Release@plt>
    3994:	mov	x0, x20
    3998:	ldp	x20, x19, [sp, #96]
    399c:	ldp	x29, x30, [sp, #80]
    39a0:	add	sp, sp, #0x70
    39a4:	ret
    39a8:	stp	x29, x30, [sp, #-32]!
    39ac:	stp	x20, x19, [sp, #16]
    39b0:	mov	x29, sp
    39b4:	mov	x19, x0
    39b8:	ldr	x0, [x0, #184]
    39bc:	mov	w1, wzr
    39c0:	bl	2320 <PyThread_acquire_lock@plt>
    39c4:	cbnz	w0, 39e8 <PyInit__lzma@@Base+0x12c4>
    39c8:	bl	2580 <PyEval_SaveThread@plt>
    39cc:	ldr	x8, [x19, #184]
    39d0:	mov	x20, x0
    39d4:	mov	w1, #0x1                   	// #1
    39d8:	mov	x0, x8
    39dc:	bl	2320 <PyThread_acquire_lock@plt>
    39e0:	mov	x0, x20
    39e4:	bl	2260 <PyEval_RestoreThread@plt>
    39e8:	ldr	w8, [x19, #176]
    39ec:	cbz	w8, 3a10 <PyInit__lzma@@Base+0x12ec>
    39f0:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    39f4:	ldr	x8, [x8, #4008]
    39f8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    39fc:	add	x1, x1, #0xba0
    3a00:	ldr	x0, [x8]
    3a04:	bl	2350 <PyErr_SetString@plt>
    3a08:	mov	x20, xzr
    3a0c:	b	3a30 <PyInit__lzma@@Base+0x130c>
    3a10:	mov	w8, #0x1                   	// #1
    3a14:	mov	w3, #0x3                   	// #3
    3a18:	mov	x0, x19
    3a1c:	mov	x1, xzr
    3a20:	mov	x2, xzr
    3a24:	str	w8, [x19, #176]
    3a28:	bl	3a48 <PyInit__lzma@@Base+0x1324>
    3a2c:	mov	x20, x0
    3a30:	ldr	x0, [x19, #184]
    3a34:	bl	2520 <PyThread_release_lock@plt>
    3a38:	mov	x0, x20
    3a3c:	ldp	x20, x19, [sp, #16]
    3a40:	ldp	x29, x30, [sp], #32
    3a44:	ret
    3a48:	stp	x29, x30, [sp, #-96]!
    3a4c:	str	x27, [sp, #16]
    3a50:	stp	x26, x25, [sp, #32]
    3a54:	stp	x24, x23, [sp, #48]
    3a58:	stp	x22, x21, [sp, #64]
    3a5c:	stp	x20, x19, [sp, #80]
    3a60:	mov	x29, sp
    3a64:	mov	x23, x1
    3a68:	mov	x21, x0
    3a6c:	mov	w1, #0x2000                	// #8192
    3a70:	mov	x0, xzr
    3a74:	mov	w19, w3
    3a78:	mov	x20, x2
    3a7c:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    3a80:	str	x0, [x29, #24]
    3a84:	cbz	x0, 3bb0 <PyInit__lzma@@Base+0x148c>
    3a88:	mov	x22, x21
    3a8c:	add	x8, x0, #0x20
    3a90:	str	x23, [x22, #40]!
    3a94:	str	x20, [x22, #8]
    3a98:	str	x8, [x22, #24]
    3a9c:	ldr	x8, [x0, #16]
    3aa0:	mov	w25, #0xa                   	// #10
    3aa4:	str	x8, [x22, #32]
    3aa8:	bl	2580 <PyEval_SaveThread@plt>
    3aac:	mov	x23, x0
    3ab0:	mov	x0, x22
    3ab4:	mov	w1, w19
    3ab8:	bl	2250 <lzma_code@plt>
    3abc:	ldr	x26, [x21, #64]
    3ac0:	ldr	x27, [x29, #24]
    3ac4:	mov	w24, w0
    3ac8:	cbnz	x20, 3ae0 <PyInit__lzma@@Base+0x13bc>
    3acc:	cmp	w24, #0xa
    3ad0:	b.ne	3ae0 <PyInit__lzma@@Base+0x13bc>  // b.any
    3ad4:	ldr	x8, [x21, #72]
    3ad8:	cmp	x8, #0x0
    3adc:	csel	w24, w25, wzr, eq  // eq = none
    3ae0:	mov	x0, x23
    3ae4:	bl	2260 <PyEval_RestoreThread@plt>
    3ae8:	mov	w0, w24
    3aec:	bl	33ec <PyInit__lzma@@Base+0xcc8>
    3af0:	cbnz	w0, 3b90 <PyInit__lzma@@Base+0x146c>
    3af4:	sub	x8, x26, x27
    3af8:	sub	x23, x8, #0x20
    3afc:	cbz	w19, 3b14 <PyInit__lzma@@Base+0x13f0>
    3b00:	cmp	w19, #0x3
    3b04:	b.ne	3b1c <PyInit__lzma@@Base+0x13f8>  // b.any
    3b08:	cmp	w24, #0x1
    3b0c:	b.ne	3b1c <PyInit__lzma@@Base+0x13f8>  // b.any
    3b10:	b	3b64 <PyInit__lzma@@Base+0x1440>
    3b14:	ldr	x8, [x21, #48]
    3b18:	cbz	x8, 3b64 <PyInit__lzma@@Base+0x1440>
    3b1c:	ldr	x8, [x21, #72]
    3b20:	cbnz	x8, 3aa8 <PyInit__lzma@@Base+0x1384>
    3b24:	ldr	x8, [x29, #24]
    3b28:	add	x0, x29, #0x18
    3b2c:	ldr	x8, [x8, #16]
    3b30:	add	x8, x8, x8, asr #3
    3b34:	add	x1, x8, #0x6
    3b38:	bl	2240 <_PyBytes_Resize@plt>
    3b3c:	cmn	w0, #0x1
    3b40:	b.eq	3b90 <PyInit__lzma@@Base+0x146c>  // b.none
    3b44:	ldr	x8, [x29, #24]
    3b48:	add	x9, x8, x23
    3b4c:	add	x9, x9, #0x20
    3b50:	str	x9, [x21, #64]
    3b54:	ldr	x8, [x8, #16]
    3b58:	sub	x8, x8, x23
    3b5c:	str	x8, [x21, #72]
    3b60:	b	3aa8 <PyInit__lzma@@Base+0x1384>
    3b64:	ldr	x0, [x29, #24]
    3b68:	ldr	x8, [x0, #16]
    3b6c:	cmp	x23, x8
    3b70:	b.eq	3bb0 <PyInit__lzma@@Base+0x148c>  // b.none
    3b74:	add	x0, x29, #0x18
    3b78:	mov	x1, x23
    3b7c:	bl	2240 <_PyBytes_Resize@plt>
    3b80:	cmn	w0, #0x1
    3b84:	b.eq	3b90 <PyInit__lzma@@Base+0x146c>  // b.none
    3b88:	ldr	x0, [x29, #24]
    3b8c:	b	3bb0 <PyInit__lzma@@Base+0x148c>
    3b90:	ldr	x0, [x29, #24]
    3b94:	cbz	x0, 3bb0 <PyInit__lzma@@Base+0x148c>
    3b98:	ldr	x8, [x0]
    3b9c:	subs	x8, x8, #0x1
    3ba0:	str	x8, [x0]
    3ba4:	b.ne	3bac <PyInit__lzma@@Base+0x1488>  // b.any
    3ba8:	bl	22f0 <_Py_Dealloc@plt>
    3bac:	mov	x0, xzr
    3bb0:	ldp	x20, x19, [sp, #80]
    3bb4:	ldp	x22, x21, [sp, #64]
    3bb8:	ldp	x24, x23, [sp, #48]
    3bbc:	ldp	x26, x25, [sp, #32]
    3bc0:	ldr	x27, [sp, #16]
    3bc4:	ldp	x29, x30, [sp], #96
    3bc8:	ret
    3bcc:	cbz	x2, 3be8 <PyInit__lzma@@Base+0x14c4>
    3bd0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    3bd4:	udiv	x8, x8, x2
    3bd8:	cmp	x8, x1
    3bdc:	b.cs	3be8 <PyInit__lzma@@Base+0x14c4>  // b.hs, b.nlast
    3be0:	mov	x0, xzr
    3be4:	ret
    3be8:	mul	x0, x2, x1
    3bec:	b	22c0 <PyMem_RawMalloc@plt>
    3bf0:	mov	x0, x1
    3bf4:	b	24d0 <PyMem_RawFree@plt>
    3bf8:	stp	x29, x30, [sp, #-64]!
    3bfc:	stp	x24, x23, [sp, #16]
    3c00:	stp	x22, x21, [sp, #32]
    3c04:	stp	x20, x19, [sp, #48]
    3c08:	mov	x29, sp
    3c0c:	mov	x19, x0
    3c10:	mov	x0, x1
    3c14:	mov	x20, x1
    3c18:	bl	2410 <PySequence_Size@plt>
    3c1c:	cmn	x0, #0x1
    3c20:	b.eq	3cdc <PyInit__lzma@@Base+0x15b8>  // b.none
    3c24:	mov	x21, x0
    3c28:	cmp	x0, #0x4
    3c2c:	b.le	3c50 <PyInit__lzma@@Base+0x152c>
    3c30:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3c34:	ldr	x8, [x8, #4008]
    3c38:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3c3c:	add	x1, x1, #0xc6f
    3c40:	mov	w2, #0x4                   	// #4
    3c44:	ldr	x0, [x8]
    3c48:	bl	25b0 <PyErr_Format@plt>
    3c4c:	b	3cd8 <PyInit__lzma@@Base+0x15b4>
    3c50:	cmp	x21, #0x1
    3c54:	b.lt	3ca8 <PyInit__lzma@@Base+0x1584>  // b.tstop
    3c58:	mov	x23, xzr
    3c5c:	mov	x22, x19
    3c60:	mov	x0, x20
    3c64:	mov	x1, x23
    3c68:	bl	23c0 <PySequence_GetItem@plt>
    3c6c:	cbz	x0, 3cc8 <PyInit__lzma@@Base+0x15a4>
    3c70:	mov	x1, x22
    3c74:	mov	x24, x0
    3c78:	bl	2f4c <PyInit__lzma@@Base+0x828>
    3c7c:	ldr	x8, [x24]
    3c80:	sub	x8, x8, #0x1
    3c84:	str	x8, [x24]
    3c88:	cbz	w0, 3cbc <PyInit__lzma@@Base+0x1598>
    3c8c:	cbnz	x8, 3c98 <PyInit__lzma@@Base+0x1574>
    3c90:	mov	x0, x24
    3c94:	bl	22f0 <_Py_Dealloc@plt>
    3c98:	add	x23, x23, #0x1
    3c9c:	cmp	x21, x23
    3ca0:	add	x22, x22, #0x10
    3ca4:	b.ne	3c60 <PyInit__lzma@@Base+0x153c>  // b.any
    3ca8:	lsl	x8, x21, #4
    3cac:	mov	x9, #0xffffffffffffffff    	// #-1
    3cb0:	mov	w0, wzr
    3cb4:	str	x9, [x19, x8]
    3cb8:	b	3cdc <PyInit__lzma@@Base+0x15b8>
    3cbc:	cbnz	x8, 3cc8 <PyInit__lzma@@Base+0x15a4>
    3cc0:	mov	x0, x24
    3cc4:	bl	22f0 <_Py_Dealloc@plt>
    3cc8:	mov	x8, #0xffffffffffffffff    	// #-1
    3ccc:	mov	x0, x19
    3cd0:	str	x8, [x22]
    3cd4:	bl	3cf0 <PyInit__lzma@@Base+0x15cc>
    3cd8:	mov	w0, #0xffffffff            	// #-1
    3cdc:	ldp	x20, x19, [sp, #48]
    3ce0:	ldp	x22, x21, [sp, #32]
    3ce4:	ldp	x24, x23, [sp, #16]
    3ce8:	ldp	x29, x30, [sp], #64
    3cec:	ret
    3cf0:	stp	x29, x30, [sp, #-32]!
    3cf4:	stp	x20, x19, [sp, #16]
    3cf8:	mov	x29, sp
    3cfc:	ldr	x8, [x0]
    3d00:	cmn	x8, #0x1
    3d04:	b.eq	3d38 <PyInit__lzma@@Base+0x1614>  // b.none
    3d08:	mov	x19, x0
    3d0c:	mov	x8, xzr
    3d10:	mov	w20, #0x1                   	// #1
    3d14:	add	x8, x19, x8, lsl #4
    3d18:	ldr	x0, [x8, #8]
    3d1c:	bl	2270 <PyMem_Free@plt>
    3d20:	sbfiz	x8, x20, #4, #32
    3d24:	ldr	x9, [x19, x8]
    3d28:	sxtw	x8, w20
    3d2c:	add	w20, w20, #0x1
    3d30:	cmn	x9, #0x1
    3d34:	b.ne	3d14 <PyInit__lzma@@Base+0x15f0>  // b.any
    3d38:	ldp	x20, x19, [sp, #16]
    3d3c:	ldp	x29, x30, [sp], #32
    3d40:	ret
    3d44:	stp	x29, x30, [sp, #-32]!
    3d48:	str	x19, [sp, #16]
    3d4c:	mov	x29, sp
    3d50:	mov	x19, x0
    3d54:	ldr	x0, [x0, #200]
    3d58:	cbz	x0, 3d60 <PyInit__lzma@@Base+0x163c>
    3d5c:	bl	2270 <PyMem_Free@plt>
    3d60:	add	x0, x19, #0x28
    3d64:	bl	24c0 <lzma_end@plt>
    3d68:	ldr	x0, [x19, #184]
    3d6c:	cbz	x0, 3d88 <PyInit__lzma@@Base+0x1664>
    3d70:	str	xzr, [x19, #184]
    3d74:	ldr	x8, [x0]
    3d78:	subs	x8, x8, #0x1
    3d7c:	str	x8, [x0]
    3d80:	b.ne	3d88 <PyInit__lzma@@Base+0x1664>  // b.any
    3d84:	bl	22f0 <_Py_Dealloc@plt>
    3d88:	ldr	x0, [x19, #216]
    3d8c:	cbz	x0, 3d94 <PyInit__lzma@@Base+0x1670>
    3d90:	bl	2630 <PyThread_free_lock@plt>
    3d94:	ldr	x8, [x19, #8]
    3d98:	mov	x0, x19
    3d9c:	ldr	x19, [sp, #16]
    3da0:	ldr	x1, [x8, #320]
    3da4:	ldp	x29, x30, [sp], #32
    3da8:	br	x1
    3dac:	sub	sp, sp, #0xb0
    3db0:	stp	x29, x30, [sp, #112]
    3db4:	stp	x24, x23, [sp, #128]
    3db8:	stp	x22, x21, [sp, #144]
    3dbc:	stp	x20, x19, [sp, #160]
    3dc0:	add	x29, sp, #0x70
    3dc4:	ldr	x22, [x1, #16]
    3dc8:	mov	x19, x0
    3dcc:	cbz	x2, 3de0 <PyInit__lzma@@Base+0x16bc>
    3dd0:	ldr	x8, [x2, #16]
    3dd4:	add	x21, x1, #0x18
    3dd8:	add	x20, x8, x22
    3ddc:	b	3df0 <PyInit__lzma@@Base+0x16cc>
    3de0:	cmp	x22, #0x4
    3de4:	add	x21, x1, #0x18
    3de8:	mov	x20, x22
    3dec:	b.cc	3e28 <PyInit__lzma@@Base+0x1704>  // b.lo, b.ul, b.last
    3df0:	adrp	x4, 17000 <PyInit__lzma@@Base+0x148dc>
    3df4:	add	x8, sp, #0x8
    3df8:	add	x4, x4, #0x970
    3dfc:	mov	w6, #0x3                   	// #3
    3e00:	mov	x0, x21
    3e04:	mov	x1, x22
    3e08:	mov	x3, xzr
    3e0c:	mov	w5, wzr
    3e10:	mov	w7, wzr
    3e14:	str	x8, [sp]
    3e18:	bl	2340 <_PyArg_UnpackKeywords@plt>
    3e1c:	mov	x21, x0
    3e20:	mov	x22, x20
    3e24:	cbz	x0, 4048 <PyInit__lzma@@Base+0x1924>
    3e28:	cbz	x22, 3e6c <PyInit__lzma@@Base+0x1748>
    3e2c:	ldr	x8, [x21]
    3e30:	cbz	x8, 3e84 <PyInit__lzma@@Base+0x1760>
    3e34:	ldr	x0, [x8, #8]
    3e38:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3e3c:	ldr	x8, [x8, #3984]
    3e40:	cmp	x0, x8
    3e44:	b.eq	3e58 <PyInit__lzma@@Base+0x1734>  // b.none
    3e48:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    3e4c:	ldr	x1, [x1, #3984]
    3e50:	bl	25a0 <PyType_IsSubtype@plt>
    3e54:	cbz	w0, 3f0c <PyInit__lzma@@Base+0x17e8>
    3e58:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3e5c:	ldr	x8, [x8, #4016]
    3e60:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3e64:	add	x1, x1, #0x863
    3e68:	b	4040 <PyInit__lzma@@Base+0x191c>
    3e6c:	mov	w20, wzr
    3e70:	adrp	x21, 16000 <PyInit__lzma@@Base+0x138dc>
    3e74:	ldr	x21, [x21, #4056]
    3e78:	cmp	w20, #0x3
    3e7c:	cset	w9, eq  // eq = none
    3e80:	b	3ee0 <PyInit__lzma@@Base+0x17bc>
    3e84:	mov	w20, wzr
    3e88:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3e8c:	ldr	x0, [x21, #8]
    3e90:	ldr	x8, [x8, #4056]
    3e94:	cbz	x0, 3eac <PyInit__lzma@@Base+0x1788>
    3e98:	cmp	x22, #0x1
    3e9c:	b.ne	3eb0 <PyInit__lzma@@Base+0x178c>  // b.any
    3ea0:	adrp	x21, 16000 <PyInit__lzma@@Base+0x138dc>
    3ea4:	ldr	x21, [x21, #4056]
    3ea8:	b	3eb4 <PyInit__lzma@@Base+0x1790>
    3eac:	mov	x0, x8
    3eb0:	ldr	x21, [x21, #16]
    3eb4:	cmp	w20, #0x3
    3eb8:	cset	w9, eq  // eq = none
    3ebc:	cmp	x0, x8
    3ec0:	b.eq	3ee0 <PyInit__lzma@@Base+0x17bc>  // b.none
    3ec4:	cmp	w20, #0x3
    3ec8:	b.ne	3f2c <PyInit__lzma@@Base+0x1808>  // b.any
    3ecc:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3ed0:	ldr	x8, [x8, #4008]
    3ed4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3ed8:	add	x1, x1, #0xd88
    3edc:	b	4040 <PyInit__lzma@@Base+0x191c>
    3ee0:	mov	x22, #0xffffffffffffffff    	// #-1
    3ee4:	cbz	w9, 3f3c <PyInit__lzma@@Base+0x1818>
    3ee8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3eec:	ldr	x8, [x8, #4056]
    3ef0:	cmp	x21, x8
    3ef4:	b.ne	3f3c <PyInit__lzma@@Base+0x1818>  // b.any
    3ef8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3efc:	ldr	x8, [x8, #4008]
    3f00:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3f04:	add	x1, x1, #0xce9
    3f08:	b	4040 <PyInit__lzma@@Base+0x191c>
    3f0c:	ldr	x0, [x21]
    3f10:	bl	2600 <_PyLong_AsInt@plt>
    3f14:	mov	w20, w0
    3f18:	cmn	w0, #0x1
    3f1c:	b.eq	4064 <PyInit__lzma@@Base+0x1940>  // b.none
    3f20:	subs	x22, x22, #0x1
    3f24:	b.ne	3e88 <PyInit__lzma@@Base+0x1764>  // b.any
    3f28:	b	3e70 <PyInit__lzma@@Base+0x174c>
    3f2c:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3f30:	mov	x22, x0
    3f34:	bl	2480 <PyErr_Occurred@plt>
    3f38:	cbnz	x0, 4048 <PyInit__lzma@@Base+0x1924>
    3f3c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3f40:	ldr	x8, [x8, #4056]
    3f44:	cmp	x21, x8
    3f48:	b.eq	3f68 <PyInit__lzma@@Base+0x1844>  // b.none
    3f4c:	cmp	w20, #0x3
    3f50:	b.eq	3f68 <PyInit__lzma@@Base+0x1844>  // b.none
    3f54:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3f58:	ldr	x8, [x8, #4008]
    3f5c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3f60:	add	x1, x1, #0xdb4
    3f64:	b	4040 <PyInit__lzma@@Base+0x191c>
    3f68:	adrp	x8, 3000 <PyInit__lzma@@Base+0x8dc>
    3f6c:	add	x8, x8, #0xbcc
    3f70:	mov	x9, x19
    3f74:	str	x8, [x9, #16]!
    3f78:	adrp	x8, 3000 <PyInit__lzma@@Base+0x8dc>
    3f7c:	add	x8, x8, #0xbf0
    3f80:	mov	x23, x9
    3f84:	stp	x8, xzr, [x9, #8]
    3f88:	str	xzr, [x23, #24]!
    3f8c:	str	x9, [x9, #72]
    3f90:	bl	2500 <PyThread_allocate_lock@plt>
    3f94:	cbz	x0, 4030 <PyInit__lzma@@Base+0x190c>
    3f98:	mov	x24, x0
    3f9c:	ldr	x0, [x19, #216]
    3fa0:	cbz	x0, 3fa8 <PyInit__lzma@@Base+0x1884>
    3fa4:	bl	2630 <PyThread_free_lock@plt>
    3fa8:	stp	xzr, x24, [x19, #208]
    3fac:	ldr	x24, [x19, #184]
    3fb0:	mov	w8, #0x10                  	// #16
    3fb4:	mov	w9, #0x1                   	// #1
    3fb8:	mov	x0, xzr
    3fbc:	mov	x1, xzr
    3fc0:	str	w8, [x19, #176]
    3fc4:	strb	w9, [x19, #192]
    3fc8:	str	xzr, [x19, #200]
    3fcc:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    3fd0:	str	x0, [x19, #184]
    3fd4:	cbz	x24, 3ff4 <PyInit__lzma@@Base+0x18d0>
    3fd8:	ldr	x8, [x24]
    3fdc:	subs	x8, x8, #0x1
    3fe0:	str	x8, [x24]
    3fe4:	b.ne	3ff4 <PyInit__lzma@@Base+0x18d0>  // b.any
    3fe8:	mov	x0, x24
    3fec:	bl	22f0 <_Py_Dealloc@plt>
    3ff0:	ldr	x0, [x19, #184]
    3ff4:	cbz	x0, 40f4 <PyInit__lzma@@Base+0x19d0>
    3ff8:	cmp	w20, #0x3
    3ffc:	b.hi	4070 <PyInit__lzma@@Base+0x194c>  // b.pmore
    4000:	adrp	x9, 4000 <PyInit__lzma@@Base+0x18dc>
    4004:	mov	w8, w20
    4008:	add	x9, x9, #0x684
    400c:	adr	x10, 401c <PyInit__lzma@@Base+0x18f8>
    4010:	ldrb	w11, [x9, x8]
    4014:	add	x10, x10, x11, lsl #2
    4018:	br	x10
    401c:	mov	w2, #0x5                   	// #5
    4020:	mov	x0, x23
    4024:	mov	x1, x22
    4028:	bl	23d0 <lzma_auto_decoder@plt>
    402c:	b	40ec <PyInit__lzma@@Base+0x19c8>
    4030:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4034:	ldr	x8, [x8, #4000]
    4038:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    403c:	add	x1, x1, #0xc3a
    4040:	ldr	x0, [x8]
    4044:	bl	2350 <PyErr_SetString@plt>
    4048:	mov	w0, #0xffffffff            	// #-1
    404c:	ldp	x20, x19, [sp, #160]
    4050:	ldp	x22, x21, [sp, #144]
    4054:	ldp	x24, x23, [sp, #128]
    4058:	ldp	x29, x30, [sp, #112]
    405c:	add	sp, sp, #0xb0
    4060:	ret
    4064:	bl	2480 <PyErr_Occurred@plt>
    4068:	cbnz	x0, 4048 <PyInit__lzma@@Base+0x1924>
    406c:	b	3f20 <PyInit__lzma@@Base+0x17fc>
    4070:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4074:	ldr	x8, [x8, #4008]
    4078:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    407c:	add	x1, x1, #0xc52
    4080:	mov	w2, w20
    4084:	ldr	x0, [x8]
    4088:	bl	25b0 <PyErr_Format@plt>
    408c:	b	40f4 <PyInit__lzma@@Base+0x19d0>
    4090:	mov	w2, #0x5                   	// #5
    4094:	mov	x0, x23
    4098:	mov	x1, x22
    409c:	bl	24a0 <lzma_stream_decoder@plt>
    40a0:	b	40ec <PyInit__lzma@@Base+0x19c8>
    40a4:	mov	x0, x23
    40a8:	mov	x1, x22
    40ac:	str	wzr, [x19, #176]
    40b0:	bl	24b0 <lzma_alone_decoder@plt>
    40b4:	b	40ec <PyInit__lzma@@Base+0x19c8>
    40b8:	add	x0, sp, #0x20
    40bc:	mov	x1, x21
    40c0:	str	wzr, [x19, #176]
    40c4:	bl	3bf8 <PyInit__lzma@@Base+0x14d4>
    40c8:	cmn	w0, #0x1
    40cc:	b.eq	40f4 <PyInit__lzma@@Base+0x19d0>  // b.none
    40d0:	add	x1, sp, #0x20
    40d4:	mov	x0, x23
    40d8:	bl	2530 <lzma_raw_decoder@plt>
    40dc:	mov	w20, w0
    40e0:	add	x0, sp, #0x20
    40e4:	bl	3cf0 <PyInit__lzma@@Base+0x15cc>
    40e8:	mov	w0, w20
    40ec:	bl	33ec <PyInit__lzma@@Base+0xcc8>
    40f0:	cbz	w0, 404c <PyInit__lzma@@Base+0x1928>
    40f4:	ldr	x0, [x19, #184]
    40f8:	cbz	x0, 4114 <PyInit__lzma@@Base+0x19f0>
    40fc:	str	xzr, [x19, #184]
    4100:	ldr	x8, [x0]
    4104:	subs	x8, x8, #0x1
    4108:	str	x8, [x0]
    410c:	b.ne	4114 <PyInit__lzma@@Base+0x19f0>  // b.any
    4110:	bl	22f0 <_Py_Dealloc@plt>
    4114:	ldr	x0, [x19, #216]
    4118:	bl	2630 <PyThread_free_lock@plt>
    411c:	str	xzr, [x19, #216]
    4120:	b	4048 <PyInit__lzma@@Base+0x1924>
    4124:	sub	sp, sp, #0xd0
    4128:	stp	x29, x30, [sp, #112]
    412c:	str	x27, [sp, #128]
    4130:	stp	x26, x25, [sp, #144]
    4134:	stp	x24, x23, [sp, #160]
    4138:	stp	x22, x21, [sp, #176]
    413c:	stp	x20, x19, [sp, #192]
    4140:	add	x29, sp, #0x70
    4144:	mov	x21, x2
    4148:	mov	x20, x1
    414c:	mov	x19, x0
    4150:	cbz	x3, 415c <PyInit__lzma@@Base+0x1a38>
    4154:	ldr	x22, [x3, #16]
    4158:	b	4160 <PyInit__lzma@@Base+0x1a3c>
    415c:	mov	x22, xzr
    4160:	movi	v0.2d, #0x0
    4164:	stp	q0, q0, [sp, #64]
    4168:	stp	q0, q0, [sp, #32]
    416c:	str	q0, [sp, #16]
    4170:	cbz	x20, 4184 <PyInit__lzma@@Base+0x1a60>
    4174:	sub	x8, x21, #0x1
    4178:	cmp	x8, #0x1
    417c:	b.hi	4184 <PyInit__lzma@@Base+0x1a60>  // b.pmore
    4180:	cbz	x3, 41b8 <PyInit__lzma@@Base+0x1a94>
    4184:	adrp	x4, 17000 <PyInit__lzma@@Base+0x148dc>
    4188:	sub	x8, x29, #0x10
    418c:	add	x4, x4, #0x930
    4190:	mov	w5, #0x1                   	// #1
    4194:	mov	w6, #0x2                   	// #2
    4198:	mov	x0, x20
    419c:	mov	x1, x21
    41a0:	mov	x2, xzr
    41a4:	mov	w7, wzr
    41a8:	str	x8, [sp]
    41ac:	bl	2340 <_PyArg_UnpackKeywords@plt>
    41b0:	mov	x20, x0
    41b4:	cbz	x0, 41d0 <PyInit__lzma@@Base+0x1aac>
    41b8:	ldr	x0, [x20]
    41bc:	add	x1, sp, #0x10
    41c0:	mov	w2, wzr
    41c4:	bl	2560 <PyObject_GetBuffer@plt>
    41c8:	cbz	w0, 4204 <PyInit__lzma@@Base+0x1ae0>
    41cc:	mov	x20, xzr
    41d0:	ldr	x8, [sp, #24]
    41d4:	cbz	x8, 41e0 <PyInit__lzma@@Base+0x1abc>
    41d8:	add	x0, sp, #0x10
    41dc:	bl	2290 <PyBuffer_Release@plt>
    41e0:	mov	x0, x20
    41e4:	ldp	x20, x19, [sp, #192]
    41e8:	ldp	x22, x21, [sp, #176]
    41ec:	ldp	x24, x23, [sp, #160]
    41f0:	ldp	x26, x25, [sp, #144]
    41f4:	ldr	x27, [sp, #128]
    41f8:	ldp	x29, x30, [sp, #112]
    41fc:	add	sp, sp, #0xd0
    4200:	ret
    4204:	add	x0, sp, #0x10
    4208:	mov	w1, #0x43                  	// #67
    420c:	bl	22d0 <PyBuffer_IsContiguous@plt>
    4210:	cbz	w0, 427c <PyInit__lzma@@Base+0x1b58>
    4214:	add	x8, x22, x21
    4218:	cmp	x8, #0x1
    421c:	b.ne	42a0 <PyInit__lzma@@Base+0x1b7c>  // b.any
    4220:	mov	x20, #0xffffffffffffffff    	// #-1
    4224:	ldr	x0, [x19, #216]
    4228:	mov	w1, wzr
    422c:	bl	2320 <PyThread_acquire_lock@plt>
    4230:	cbnz	w0, 4254 <PyInit__lzma@@Base+0x1b30>
    4234:	bl	2580 <PyEval_SaveThread@plt>
    4238:	ldr	x8, [x19, #216]
    423c:	mov	x21, x0
    4240:	mov	w1, #0x1                   	// #1
    4244:	mov	x0, x8
    4248:	bl	2320 <PyThread_acquire_lock@plt>
    424c:	mov	x0, x21
    4250:	bl	2260 <PyEval_RestoreThread@plt>
    4254:	ldrb	w8, [x19, #180]
    4258:	cbz	w8, 42e4 <PyInit__lzma@@Base+0x1bc0>
    425c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4260:	ldr	x8, [x8, #4048]
    4264:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    4268:	add	x1, x1, #0xd4a
    426c:	ldr	x0, [x8]
    4270:	bl	2350 <PyErr_SetString@plt>
    4274:	mov	x20, xzr
    4278:	b	45c8 <PyInit__lzma@@Base+0x1ea4>
    427c:	ldr	x3, [x20]
    4280:	adrp	x0, 5000 <PyInit__lzma@@Base+0x28dc>
    4284:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    4288:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    428c:	add	x0, x0, #0xd24
    4290:	add	x1, x1, #0xd3a
    4294:	add	x2, x2, #0xb4e
    4298:	bl	2400 <_PyArg_BadArgument@plt>
    429c:	b	41cc <PyInit__lzma@@Base+0x1aa8>
    42a0:	ldr	x8, [x20, #8]
    42a4:	ldr	x0, [x8, #8]
    42a8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    42ac:	ldr	x8, [x8, #3984]
    42b0:	cmp	x0, x8
    42b4:	b.eq	42c8 <PyInit__lzma@@Base+0x1ba4>  // b.none
    42b8:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    42bc:	ldr	x1, [x1, #3984]
    42c0:	bl	25a0 <PyType_IsSubtype@plt>
    42c4:	cbz	w0, 4340 <PyInit__lzma@@Base+0x1c1c>
    42c8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    42cc:	ldr	x8, [x8, #4016]
    42d0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    42d4:	add	x1, x1, #0x863
    42d8:	ldr	x0, [x8]
    42dc:	bl	2350 <PyErr_SetString@plt>
    42e0:	b	41cc <PyInit__lzma@@Base+0x1aa8>
    42e4:	mov	x21, x19
    42e8:	ldr	x23, [sp, #16]
    42ec:	ldr	x22, [sp, #32]
    42f0:	ldr	x24, [x21, #40]!
    42f4:	cbz	x24, 4384 <PyInit__lzma@@Base+0x1c60>
    42f8:	ldp	x25, x8, [x19, #200]
    42fc:	ldr	x2, [x19, #48]
    4300:	add	x9, x25, x8
    4304:	add	x10, x24, x2
    4308:	sub	x11, x8, x2
    430c:	cmp	x11, x22
    4310:	sub	x9, x9, x10
    4314:	b.cs	438c <PyInit__lzma@@Base+0x1c68>  // b.hs, b.nlast
    4318:	add	x8, x8, x22
    431c:	sub	x26, x8, x9
    4320:	mov	x0, x25
    4324:	mov	x1, x26
    4328:	bl	2380 <PyMem_Realloc@plt>
    432c:	cbz	x0, 44fc <PyInit__lzma@@Base+0x1dd8>
    4330:	sub	x8, x24, x25
    4334:	stp	x0, x26, [x19, #200]
    4338:	add	x24, x0, x8
    433c:	b	43a4 <PyInit__lzma@@Base+0x1c80>
    4340:	ldr	x0, [x20, #8]
    4344:	bl	25f0 <PyNumber_Index@plt>
    4348:	cbz	x0, 4378 <PyInit__lzma@@Base+0x1c54>
    434c:	mov	x21, x0
    4350:	bl	23f0 <PyLong_AsSsize_t@plt>
    4354:	ldr	x8, [x21]
    4358:	mov	x20, x0
    435c:	subs	x8, x8, #0x1
    4360:	str	x8, [x21]
    4364:	b.ne	4370 <PyInit__lzma@@Base+0x1c4c>  // b.any
    4368:	mov	x0, x21
    436c:	bl	22f0 <_Py_Dealloc@plt>
    4370:	cmn	x20, #0x1
    4374:	b.ne	4224 <PyInit__lzma@@Base+0x1b00>  // b.any
    4378:	bl	2480 <PyErr_Occurred@plt>
    437c:	cbnz	x0, 41cc <PyInit__lzma@@Base+0x1aa8>
    4380:	b	4220 <PyInit__lzma@@Base+0x1afc>
    4384:	stp	x23, x22, [x19, #40]
    4388:	b	43cc <PyInit__lzma@@Base+0x1ca8>
    438c:	cmp	x9, x22
    4390:	b.cs	43a8 <PyInit__lzma@@Base+0x1c84>  // b.hs, b.nlast
    4394:	mov	x0, x25
    4398:	mov	x1, x24
    439c:	bl	2210 <memmove@plt>
    43a0:	ldr	x24, [x19, #200]
    43a4:	str	x24, [x19, #40]
    43a8:	ldr	x8, [x19, #48]
    43ac:	mov	x1, x23
    43b0:	mov	x2, x22
    43b4:	add	x0, x24, x8
    43b8:	bl	2200 <memcpy@plt>
    43bc:	ldr	x8, [x19, #48]
    43c0:	mov	w24, #0x1                   	// #1
    43c4:	add	x8, x8, x22
    43c8:	str	x8, [x19, #48]
    43cc:	cmp	x20, #0x2, lsl #12
    43d0:	mov	w8, #0x2000                	// #8192
    43d4:	csel	x1, x20, x8, cc  // cc = lo, ul, last
    43d8:	mov	x0, xzr
    43dc:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    43e0:	str	x0, [x29, #24]
    43e4:	cbz	x0, 45c0 <PyInit__lzma@@Base+0x1e9c>
    43e8:	add	x8, x0, #0x20
    43ec:	str	x8, [x19, #64]
    43f0:	ldr	x8, [x0, #16]
    43f4:	mov	w25, #0xa                   	// #10
    43f8:	str	x8, [x19, #72]
    43fc:	bl	2580 <PyEval_SaveThread@plt>
    4400:	mov	x22, x0
    4404:	mov	x0, x21
    4408:	mov	w1, wzr
    440c:	bl	2250 <lzma_code@plt>
    4410:	ldr	x26, [x19, #64]
    4414:	ldr	x27, [x29, #24]
    4418:	cmp	w0, #0xa
    441c:	b.ne	4430 <PyInit__lzma@@Base+0x1d0c>  // b.any
    4420:	ldr	x8, [x19, #48]
    4424:	cbz	x8, 4438 <PyInit__lzma@@Base+0x1d14>
    4428:	mov	w23, #0xa                   	// #10
    442c:	b	4444 <PyInit__lzma@@Base+0x1d20>
    4430:	mov	w23, w0
    4434:	b	4444 <PyInit__lzma@@Base+0x1d20>
    4438:	ldr	x8, [x19, #72]
    443c:	cmp	x8, #0x0
    4440:	csel	w23, w25, wzr, eq  // eq = none
    4444:	mov	x0, x22
    4448:	bl	2260 <PyEval_RestoreThread@plt>
    444c:	mov	w0, w23
    4450:	bl	33ec <PyInit__lzma@@Base+0xcc8>
    4454:	cbnz	w0, 45a4 <PyInit__lzma@@Base+0x1e80>
    4458:	sub	x8, x26, x27
    445c:	cmp	w23, #0x2
    4460:	sub	x22, x8, #0x20
    4464:	b.eq	447c <PyInit__lzma@@Base+0x1d58>  // b.none
    4468:	cmp	w23, #0x4
    446c:	b.eq	447c <PyInit__lzma@@Base+0x1d58>  // b.none
    4470:	cmp	w23, #0x1
    4474:	b.ne	4488 <PyInit__lzma@@Base+0x1d64>  // b.any
    4478:	b	44f0 <PyInit__lzma@@Base+0x1dcc>
    447c:	mov	x0, x21
    4480:	bl	24e0 <lzma_get_check@plt>
    4484:	str	w0, [x19, #176]
    4488:	ldr	x8, [x19, #72]
    448c:	cbz	x8, 449c <PyInit__lzma@@Base+0x1d78>
    4490:	ldr	x8, [x19, #48]
    4494:	cbnz	x8, 43fc <PyInit__lzma@@Base+0x1cd8>
    4498:	b	4514 <PyInit__lzma@@Base+0x1df0>
    449c:	cmp	x22, x20
    44a0:	b.eq	4510 <PyInit__lzma@@Base+0x1dec>  // b.none
    44a4:	ldr	x8, [x29, #24]
    44a8:	add	x0, x29, #0x18
    44ac:	ldr	x8, [x8, #16]
    44b0:	add	x8, x8, x8, asr #3
    44b4:	add	x8, x8, #0x6
    44b8:	cmp	x8, x20
    44bc:	ccmp	x20, #0x0, #0x4, gt
    44c0:	csel	x1, x20, x8, gt
    44c4:	bl	2240 <_PyBytes_Resize@plt>
    44c8:	cmn	w0, #0x1
    44cc:	b.eq	45a4 <PyInit__lzma@@Base+0x1e80>  // b.none
    44d0:	ldr	x8, [x29, #24]
    44d4:	add	x9, x8, x22
    44d8:	add	x9, x9, #0x20
    44dc:	str	x9, [x19, #64]
    44e0:	ldr	x8, [x8, #16]
    44e4:	sub	x8, x8, x22
    44e8:	str	x8, [x19, #72]
    44ec:	b	43fc <PyInit__lzma@@Base+0x1cd8>
    44f0:	mov	w8, #0x1                   	// #1
    44f4:	strb	w8, [x19, #180]
    44f8:	b	4514 <PyInit__lzma@@Base+0x1df0>
    44fc:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4500:	ldr	x8, [x8, #4000]
    4504:	ldr	x0, [x8]
    4508:	bl	2390 <PyErr_SetNone@plt>
    450c:	b	4274 <PyInit__lzma@@Base+0x1b50>
    4510:	mov	x22, x20
    4514:	ldr	x20, [x29, #24]
    4518:	ldr	x8, [x20, #16]
    451c:	cmp	x22, x8
    4520:	b.eq	453c <PyInit__lzma@@Base+0x1e18>  // b.none
    4524:	add	x0, x29, #0x18
    4528:	mov	x1, x22
    452c:	bl	2240 <_PyBytes_Resize@plt>
    4530:	cmn	w0, #0x1
    4534:	b.eq	45a4 <PyInit__lzma@@Base+0x1e80>  // b.none
    4538:	ldr	x20, [x29, #24]
    453c:	cbz	x20, 45c0 <PyInit__lzma@@Base+0x1e9c>
    4540:	ldrb	w8, [x19, #180]
    4544:	cbz	w8, 45d4 <PyInit__lzma@@Base+0x1eb0>
    4548:	ldr	x1, [x19, #48]
    454c:	strb	wzr, [x19, #192]
    4550:	cbz	x1, 45c8 <PyInit__lzma@@Base+0x1ea4>
    4554:	ldr	x0, [x19, #40]
    4558:	ldr	x21, [x19, #184]
    455c:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    4560:	str	x0, [x19, #184]
    4564:	cbz	x21, 4584 <PyInit__lzma@@Base+0x1e60>
    4568:	ldr	x8, [x21]
    456c:	subs	x8, x8, #0x1
    4570:	str	x8, [x21]
    4574:	b.ne	4584 <PyInit__lzma@@Base+0x1e60>  // b.any
    4578:	mov	x0, x21
    457c:	bl	22f0 <_Py_Dealloc@plt>
    4580:	ldr	x0, [x19, #184]
    4584:	cbnz	x0, 45c8 <PyInit__lzma@@Base+0x1ea4>
    4588:	ldr	x8, [x20]
    458c:	subs	x8, x8, #0x1
    4590:	str	x8, [x20]
    4594:	b.ne	4274 <PyInit__lzma@@Base+0x1b50>  // b.any
    4598:	mov	x0, x20
    459c:	bl	22f0 <_Py_Dealloc@plt>
    45a0:	b	4274 <PyInit__lzma@@Base+0x1b50>
    45a4:	ldr	x0, [x29, #24]
    45a8:	cbz	x0, 45c0 <PyInit__lzma@@Base+0x1e9c>
    45ac:	ldr	x8, [x0]
    45b0:	subs	x8, x8, #0x1
    45b4:	str	x8, [x0]
    45b8:	b.ne	45c0 <PyInit__lzma@@Base+0x1e9c>  // b.any
    45bc:	bl	22f0 <_Py_Dealloc@plt>
    45c0:	mov	x20, xzr
    45c4:	str	xzr, [x21]
    45c8:	ldr	x0, [x19, #216]
    45cc:	bl	2520 <PyThread_release_lock@plt>
    45d0:	b	41d0 <PyInit__lzma@@Base+0x1aac>
    45d4:	ldr	x2, [x19, #48]
    45d8:	cbz	x2, 4630 <PyInit__lzma@@Base+0x1f0c>
    45dc:	strb	wzr, [x19, #192]
    45e0:	cbnz	w24, 45c8 <PyInit__lzma@@Base+0x1ea4>
    45e4:	ldr	x0, [x19, #200]
    45e8:	cbz	x0, 4604 <PyInit__lzma@@Base+0x1ee0>
    45ec:	ldr	x8, [x19, #208]
    45f0:	cmp	x8, x2
    45f4:	b.cs	461c <PyInit__lzma@@Base+0x1ef8>  // b.hs, b.nlast
    45f8:	bl	2270 <PyMem_Free@plt>
    45fc:	ldr	x2, [x19, #48]
    4600:	str	xzr, [x19, #200]
    4604:	mov	x0, x2
    4608:	bl	2620 <PyMem_Malloc@plt>
    460c:	str	x0, [x19, #200]
    4610:	cbz	x0, 4650 <PyInit__lzma@@Base+0x1f2c>
    4614:	ldr	x2, [x19, #48]
    4618:	str	x2, [x19, #208]
    461c:	ldr	x1, [x19, #40]
    4620:	bl	2200 <memcpy@plt>
    4624:	ldr	x8, [x19, #200]
    4628:	str	x8, [x19, #40]
    462c:	b	45c8 <PyInit__lzma@@Base+0x1ea4>
    4630:	ldr	x8, [x19, #72]
    4634:	str	xzr, [x19, #40]
    4638:	cbz	x8, 4648 <PyInit__lzma@@Base+0x1f24>
    463c:	mov	w8, #0x1                   	// #1
    4640:	strb	w8, [x19, #192]
    4644:	b	45c8 <PyInit__lzma@@Base+0x1ea4>
    4648:	strb	wzr, [x19, #192]
    464c:	b	45c8 <PyInit__lzma@@Base+0x1ea4>
    4650:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4654:	ldr	x8, [x8, #4000]
    4658:	ldr	x0, [x8]
    465c:	bl	2390 <PyErr_SetNone@plt>
    4660:	b	4588 <PyInit__lzma@@Base+0x1e64>

Disassembly of section .fini:

0000000000004664 <.fini>:
    4664:	stp	x29, x30, [sp, #-16]!
    4668:	mov	x29, sp
    466c:	ldp	x29, x30, [sp], #16
    4670:	ret
